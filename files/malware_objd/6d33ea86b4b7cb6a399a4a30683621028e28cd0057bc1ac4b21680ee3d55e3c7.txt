
6d33ea86b4b7cb6a399a4a30683621028e28cd0057bc1ac4b21680ee3d55e3c7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	push   edi
  40100a:	or     DWORD PTR ds:0x42b018,0x42d018
  401014:	push   0x42e3c7
  401019:	xor    edi,edi
  40101b:	add    DWORD PTR ds:0x42d000,0x42d008
  401025:	inc    edi
  401026:	adc    DWORD PTR ds:0x42901c,0x42c00c
  401030:	push   edi
  401031:	dec    DWORD PTR ds:0x42a018
  401037:	push   edi
  401038:	not    DWORD PTR ds:0x42901c
  40103e:	call   DWORD PTR ds:0x42e90f
  401044:	test   eax,eax
  401046:	je     0x40106f
  40104c:	lea    eax,[ebp-0x50]
  40104f:	push   eax
  401050:	adc    DWORD PTR ds:0x42c018,0x408c
  40105a:	call   DWORD PTR ds:0x42e927
  401060:	mov    DWORD PTR ds:0x42c010,0x701a
  40106a:	jmp    0x4025df
  40106f:	or     DWORD PTR ds:0x42a010,0x42901c
  401079:	push   esi
  40107a:	or     DWORD PTR ds:0x42c018,0x254e
  401084:	mov    esi,DWORD PTR ds:0x42e90b
  40108a:	sub    DWORD PTR ds:0x42c000,0x42b014
  401094:	push   0x8
  401096:	add    DWORD PTR ds:0x42c004,0x1529
  4010a0:	push   0x42e3d7
  4010a5:	sub    DWORD PTR ds:0x42b00c,0x42c010
  4010af:	call   esi
  4010b1:	test   eax,eax
  4010b3:	je     0x4010f0
  4010b9:	sub    DWORD PTR ds:0x429004,0x42c000
  4010c3:	lea    eax,[ebp-0x50]
  4010c6:	sub    DWORD PTR ds:0x429000,0x1be5
  4010d0:	push   eax
  4010d1:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010db:	call   DWORD PTR ds:0x42e927
  4010e1:	mov    DWORD PTR ds:0x42b000,0x51df
  4010eb:	jmp    0x4025de
  4010f0:	push   ebx
  4010f1:	mov    ebx,DWORD PTR ds:0x429028
  4010f7:	or     ebx,DWORD PTR ds:0x429008
  4010fd:	mov    DWORD PTR ds:0x429028,ebx
  401103:	mov    ebx,DWORD PTR ds:0x42e907
  401109:	add    DWORD PTR ds:0x429024,0x4675
  401113:	push   0x42e3e7
  401118:	or     DWORD PTR ds:0x42c008,0x42c018
  401122:	push   edi
  401123:	adc    DWORD PTR ds:0x42c014,0x42b014
  40112d:	push   edi
  40112e:	call   ebx
  401130:	and    DWORD PTR ds:0x429020,0x61d3
  40113a:	test   eax,eax
  40113c:	jne    0x40121c
  401142:	sbb    DWORD PTR ds:0x42c004,0x42b004
  40114c:	push   0xc
  40114e:	mov    DWORD PTR ds:0x42d004,0x2d3b
  401158:	push   0x42e40b
  40115d:	call   esi
  40115f:	inc    DWORD PTR ds:0x42c008
  401165:	test   eax,eax
  401167:	mov    DWORD PTR ds:0x42b010,0x1593
  401171:	jne    0x40121c
  401177:	sub    DWORD PTR ds:0x42d000,0x17f0
  401181:	push   0x7
  401183:	add    DWORD PTR ds:0x429024,0x2885
  40118d:	push   0x42e41f
  401192:	call   esi
  401194:	and    DWORD PTR ds:0x42d014,0x42c000
  40119e:	test   eax,eax
  4011a0:	mov    DWORD PTR ds:0x42c014,0x720
  4011aa:	jne    0x40121c
  4011b0:	or     DWORD PTR ds:0x42b004,0x42b01c
  4011ba:	push   0x8
  4011bc:	push   0x42e42f
  4011c1:	sbb    DWORD PTR ds:0x42d014,0x5687
  4011cb:	call   esi
  4011cd:	xor    DWORD PTR ds:0x429014,0x42b018
  4011d7:	test   eax,eax
  4011d9:	mov    DWORD PTR ds:0x42d008,0x6461
  4011e3:	jne    0x40121c
  4011e9:	mov    DWORD PTR ds:0x42a014,0x128
  4011f3:	push   0x42e43f
  4011f8:	push   edi
  4011f9:	push   edi
  4011fa:	adc    DWORD PTR ds:0x429020,0x42a000
  401204:	call   DWORD PTR ds:0x42e90f
  40120a:	test   eax,eax
  40120c:	mov    DWORD PTR ds:0x42a01c,0x679f
  401216:	je     0x401249
  40121c:	lea    eax,[ebp-0x50]
  40121f:	sub    DWORD PTR ds:0x42c004,0x42a000
  401229:	push   eax
  40122a:	adc    DWORD PTR ds:0x429024,0xd32
  401234:	call   DWORD PTR ds:0x42e927
  40123a:	mov    DWORD PTR ds:0x42d008,0x45e0
  401244:	jmp    0x4025dd
  401249:	sub    DWORD PTR ds:0x429004,0x429014
  401253:	push   0x42e44f
  401258:	push   edi
  401259:	and    DWORD PTR ds:0x42b00c,0x7ff1
  401263:	push   edi
  401264:	or     DWORD PTR ds:0x42d014,0x42c01c
  40126e:	call   ebx
  401270:	test   eax,eax
  401272:	mov    DWORD PTR ds:0x429028,0x42c
  40127c:	je     0x401766
  401282:	xor    DWORD PTR ds:0x42b01c,0x42a010
  40128c:	push   0xc
  40128e:	xor    DWORD PTR ds:0x42d00c,0x685
  401298:	push   0x42e473
  40129d:	and    DWORD PTR ds:0x42a01c,0x363a
  4012a7:	call   esi
  4012a9:	test   eax,eax
  4012ab:	mov    DWORD PTR ds:0x42b014,0x15a6
  4012b5:	jne    0x40175f
  4012bb:	mov    DWORD PTR ds:0x42b01c,0x5b0e
  4012c5:	push   0x7
  4012c7:	push   0x42e487
  4012cc:	call   esi
  4012ce:	test   eax,eax
  4012d0:	jne    0x40175f
  4012d6:	push   0x8
  4012d8:	push   0x42e497
  4012dd:	call   esi
  4012df:	or     DWORD PTR ds:0x42c018,0x5fc7
  4012e9:	test   eax,eax
  4012eb:	mov    DWORD PTR ds:0x42b01c,0x6bd8
  4012f5:	jne    0x40175f
  4012fb:	add    DWORD PTR ds:0x429000,0x429014
  401305:	push   0x42e4a7
  40130a:	push   edi
  40130b:	push   edi
  40130c:	xor    DWORD PTR ds:0x42d014,0x5ea1
  401316:	call   DWORD PTR ds:0x42e90f
  40131c:	sub    DWORD PTR ds:0x42901c,0x42c008
  401326:	test   eax,eax
  401328:	mov    DWORD PTR ds:0x42a004,0x3a7d
  401332:	jne    0x40175f
  401338:	push   0x42e4b7
  40133d:	and    DWORD PTR ds:0x42a004,0x429004
  401347:	push   edi
  401348:	or     DWORD PTR ds:0x42a01c,0x6055
  401352:	push   edi
  401353:	sub    DWORD PTR ds:0x429014,0x42b00c
  40135d:	call   ebx
  40135f:	xor    DWORD PTR ds:0x42b008,0x42a018
  401369:	test   eax,eax
  40136b:	mov    DWORD PTR ds:0x429014,0x3a80
  401375:	jne    0x40175f
  40137b:	or     DWORD PTR ds:0x42b00c,0x42b010
  401385:	push   0xc
  401387:	push   0x42e4db
  40138c:	call   esi
  40138e:	test   eax,eax
  401390:	jne    0x40175f
  401396:	mov    DWORD PTR ds:0x42900c,0x5e8c
  4013a0:	push   0x7
  4013a2:	push   0x42e4ef
  4013a7:	and    DWORD PTR ds:0x42b010,0x4122
  4013b1:	call   esi
  4013b3:	test   eax,eax
  4013b5:	mov    DWORD PTR ds:0x42a018,0x79ff
  4013bf:	jne    0x40175f
  4013c5:	push   0x8
  4013c7:	push   0x42e4ff
  4013cc:	call   esi
  4013ce:	test   eax,eax
  4013d0:	jne    0x40175f
  4013d6:	or     DWORD PTR ds:0x42a00c,0x42b01c
  4013e0:	push   0x42e50f
  4013e5:	sbb    DWORD PTR ds:0x42d004,0x5fa0
  4013ef:	push   edi
  4013f0:	and    DWORD PTR ds:0x42900c,0x42d00c
  4013fa:	push   edi
  4013fb:	add    DWORD PTR ds:0x42c010,0x54c5
  401405:	call   DWORD PTR ds:0x42e90f
  40140b:	mov    DWORD PTR ds:0x42b010,0x4d18
  401415:	test   eax,eax
  401417:	mov    DWORD PTR ds:0x42b018,0x69c2
  401421:	jne    0x40175f
  401427:	or     DWORD PTR ds:0x42c004,0x44f8
  401431:	push   0x42e51f
  401436:	add    DWORD PTR ds:0x42c004,0x42b01c
  401440:	push   edi
  401441:	adc    DWORD PTR ds:0x429004,0x4c2b
  40144b:	push   edi
  40144c:	call   ebx
  40144e:	test   eax,eax
  401450:	mov    DWORD PTR ds:0x42a008,0x516b
  40145a:	jne    0x40175f
  401460:	add    DWORD PTR ds:0x42d014,0x429018
  40146a:	push   0xc
  40146c:	push   0x42e543
  401471:	mov    DWORD PTR ds:0x42a004,0x58e8
  40147b:	call   esi
  40147d:	sbb    DWORD PTR ds:0x429028,0x2f15
  401487:	test   eax,eax
  401489:	jne    0x40175f
  40148f:	adc    DWORD PTR ds:0x42b000,0x4b6d
  401499:	push   0x7
  40149b:	sbb    DWORD PTR ds:0x42c014,0x42d004
  4014a5:	push   0x42e557
  4014aa:	or     DWORD PTR ds:0x42d008,0x1d0d
  4014b4:	call   esi
  4014b6:	xor    DWORD PTR ds:0x42c018,0xe1e
  4014c0:	test   eax,eax
  4014c2:	mov    DWORD PTR ds:0x42c010,0x6fc5
  4014cc:	jne    0x40175f
  4014d2:	push   0x8
  4014d4:	push   0x42e567
  4014d9:	add    DWORD PTR ds:0x42d000,0x42d018
  4014e3:	call   esi
  4014e5:	test   eax,eax
  4014e7:	jne    0x40175f
  4014ed:	push   0x42e577
  4014f2:	push   edi
  4014f3:	or     DWORD PTR ds:0x42d01c,0x429028
  4014fd:	push   edi
  4014fe:	call   DWORD PTR ds:0x42e90f
  401504:	test   eax,eax
  401506:	mov    DWORD PTR ds:0x42b018,0xe81
  401510:	jne    0x40175f
  401516:	or     DWORD PTR ds:0x42c00c,0x42b014
  401520:	push   0x42e587
  401525:	sub    DWORD PTR ds:0x42c004,0x429028
  40152f:	push   edi
  401530:	xor    DWORD PTR ds:0x42d010,0x42901c
  40153a:	push   edi
  40153b:	and    DWORD PTR ds:0x42d014,0x50c
  401545:	call   ebx
  401547:	test   eax,eax
  401549:	mov    DWORD PTR ds:0x42c008,0x6727
  401553:	jne    0x40175f
  401559:	push   0xc
  40155b:	adc    DWORD PTR ds:0x42a00c,0x1435
  401565:	push   0x42e5ab
  40156a:	mov    DWORD PTR ds:0x42c00c,0x3eef
  401574:	call   esi
  401576:	xor    DWORD PTR ds:0x42b014,0x10aa
  401580:	test   eax,eax
  401582:	mov    DWORD PTR ds:0x42a014,0x7a40
  40158c:	jne    0x40175f
  401592:	push   0x7
  401594:	adc    DWORD PTR ds:0x42b008,0x42a010
  40159e:	push   0x42e5bf
  4015a3:	or     DWORD PTR ds:0x42d004,0x42c014
  4015ad:	call   esi
  4015af:	add    DWORD PTR ds:0x42b008,0x42b014
  4015b9:	test   eax,eax
  4015bb:	mov    DWORD PTR ds:0x42c000,0x2197
  4015c5:	jne    0x40175f
  4015cb:	sub    DWORD PTR ds:0x42a004,0x42b008
  4015d5:	push   0x8
  4015d7:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015e1:	push   0x42e5cf
  4015e6:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015f0:	call   esi
  4015f2:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015fc:	test   eax,eax
  4015fe:	mov    DWORD PTR ds:0x42901c,0x7b99
  401608:	jne    0x40175f
  40160e:	adc    DWORD PTR ds:0x42c008,0x42901c
  401618:	push   0x42e5df
  40161d:	push   edi
  40161e:	push   edi
  40161f:	call   DWORD PTR ds:0x42e90f
  401625:	adc    DWORD PTR ds:0x42a004,0x43e7
  40162f:	test   eax,eax
  401631:	jne    0x40175f
  401637:	sbb    DWORD PTR ds:0x42b00c,0x42c008
  401641:	push   0x42e5ef
  401646:	or     DWORD PTR ds:0x42d00c,0x67f5
  401650:	push   edi
  401651:	mov    DWORD PTR ds:0x42c008,0x11d2
  40165b:	push   edi
  40165c:	add    DWORD PTR ds:0x429024,0x35c0
  401666:	call   ebx
  401668:	adc    DWORD PTR ds:0x42a01c,0x475f
  401672:	test   eax,eax
  401674:	mov    DWORD PTR ds:0x42c010,0x9db
  40167e:	jne    0x40175f
  401684:	add    DWORD PTR ds:0x42b01c,0x42c010
  40168e:	push   0xc
  401690:	push   0x42e613
  401695:	call   esi
  401697:	test   eax,eax
  401699:	jne    0x40175f
  40169f:	push   0x7
  4016a1:	sub    DWORD PTR ds:0x42a010,0x42b00c
  4016ab:	push   0x42e627
  4016b0:	xor    DWORD PTR ds:0x42a000,0x46f8
  4016ba:	call   esi
  4016bc:	sub    DWORD PTR ds:0x429028,0x1e37
  4016c6:	test   eax,eax
  4016c8:	mov    DWORD PTR ds:0x429008,0x34bb
  4016d2:	jne    0x40175f
  4016d8:	adc    DWORD PTR ds:0x42d01c,0x42d008
  4016e2:	push   0x8
  4016e4:	neg    DWORD PTR ds:0x42d004
  4016ea:	push   0x42e637
  4016ef:	call   esi
  4016f1:	xor    DWORD PTR ds:0x429020,0x5303
  4016fb:	test   eax,eax
  4016fd:	jne    0x40175f
  401703:	sub    DWORD PTR ds:0x429014,0x42c01c
  40170d:	push   0x42e647
  401712:	not    DWORD PTR ds:0x429000
  401718:	push   edi
  401719:	or     DWORD PTR ds:0x42c01c,0x7461
  401723:	push   edi
  401724:	call   DWORD PTR ds:0x42e90f
  40172a:	test   eax,eax
  40172c:	mov    DWORD PTR ds:0x42901c,0x5bee
  401736:	jne    0x40175f
  40173c:	sbb    DWORD PTR ds:0x42c008,0x1a2b
  401746:	push   0x42e657
  40174b:	push   edi
  40174c:	neg    DWORD PTR ds:0x42b010
  401752:	push   edi
  401753:	sbb    DWORD PTR ds:0x42c000,0x42b008
  40175d:	call   ebx
  40175f:	xor    eax,eax
  401761:	jmp    0x4025dd
  401766:	mov    esi,DWORD PTR ds:0x41cde0
  40176c:	mov    eax,ds:0x41ce2c
  401771:	sub    eax,esi
  401773:	xor    esi,DWORD PTR [esi+eax*1]
  401776:	mov    DWORD PTR [ebp-0x10],0x0
  40177d:	mov    eax,DWORD PTR [ebp-0x34]
  401780:	mov    DWORD PTR [ebp-0x34],eax
  401783:	mov    ecx,0xf89c8585
  401788:	neg    edi
  40178a:	mov    DWORD PTR [ebp-0x8],ecx
  40178d:	mov    edx,DWORD PTR ds:0x42d018
  401793:	sub    edx,DWORD PTR ds:0x42b000
  401799:	mov    DWORD PTR ds:0x42d018,edx
  40179f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4017a6:	xor    esi,esi
  4017a8:	add    esi,DWORD PTR ds:0x41cd71
  4017ae:	xor    edx,edx
  4017b0:	add    edx,DWORD PTR ds:0x41cdf8
  4017b6:	sub    esi,edx
  4017b8:	and    esi,DWORD PTR [esi+edx*1]
  4017bb:	lea    eax,[ebp-0x3c]
  4017be:	and    DWORD PTR ds:0x42c000,0x550f
  4017c8:	mov    DWORD PTR [ebp-0x30],eax
  4017cb:	mov    DWORD PTR ds:0x42a010,0x1f
  4017d5:	cmp    DWORD PTR ds:0x42a010,0x0
  4017dc:	je     0x40182a
  4017e2:	cmp    DWORD PTR ds:0x42a010,0x2a
  4017e9:	jne    0x401805
  4017ef:	push   DWORD PTR [ebp-0x10]
  4017f2:	push   0x7c9b
  4017f7:	push   0x511d
  4017fc:	push   DWORD PTR [ebp-0x1c]
  4017ff:	call   DWORD PTR ds:0x42e8e7
  401805:	mov    edx,DWORD PTR ds:0x42a010
  40180b:	dec    edx
  40180c:	mov    DWORD PTR ds:0x42a010,edx
  401812:	jmp    0x4017d5
  401817:	mov    edx,DWORD PTR ds:0x41cdd8
  40181d:	xor    edi,edi
  40181f:	xor    edi,DWORD PTR ds:0x41ce10
  401825:	sub    edi,edx
  401827:	add    edx,DWORD PTR [edx+edi*1]
  40182a:	lea    eax,[ebp-0x44]
  40182d:	mov    DWORD PTR [ebp-0x18],eax
  401830:	mov    edi,DWORD PTR ds:0x41ce2c
  401836:	mov    edx,DWORD PTR ds:0x41cd89
  40183c:	sub    edx,edi
  40183e:	imul   edi,DWORD PTR [edi+edx*1]
  401842:	mov    eax,ds:0x42e2b7
  401847:	movzx  edx,BYTE PTR ds:0x42a01c
  40184e:	and    edx,DWORD PTR ds:0x42c010
  401854:	mov    DWORD PTR ds:0x42a01c,edx
  40185a:	mov    eax,DWORD PTR [eax+0x1c8]
  401860:	mov    eax,DWORD PTR [eax]
  401862:	xor    edi,edi
  401864:	mov    edx,DWORD PTR [ebp-0x18]
  401867:	mov    esi,DWORD PTR ds:0x429028
  40186d:	and    DWORD PTR ds:0x42d004,esi
  401873:	mov    esi,0x751089b
  401878:	or     DWORD PTR ds:0x42900c,ebx
  40187e:	xor    eax,esi
  401880:	and    DWORD PTR ds:0x42b010,0x0
  40188a:	mov    edi,DWORD PTR ds:0x42b010
  401890:	inc    edi
  401891:	mov    DWORD PTR ds:0x42b010,edi
  401897:	cmp    DWORD PTR ds:0x42b010,0x25
  40189e:	jne    0x4018ba
  4018a4:	push   DWORD PTR [ebp-0x1c]
  4018a7:	push   DWORD PTR [ebp-0x10]
  4018aa:	push   0x42e000
  4018af:	push   0x400000
  4018b4:	call   DWORD PTR ds:0x42e8eb
  4018ba:	cmp    DWORD PTR ds:0x42b010,0x17
  4018c1:	jb     0x40188a
  4018c7:	mov    edi,0x3272e2
  4018cc:	add    eax,edi
  4018ce:	mov    DWORD PTR ds:0x42a010,0x30bc
  4018d8:	mov    DWORD PTR [edx],eax
  4018da:	mov    DWORD PTR ds:0x42c014,0x6382
  4018e4:	mov    eax,ds:0x42e753
  4018e9:	mov    DWORD PTR ds:0x429028,0x5397
  4018f3:	cmp    eax,0x312bc9f6
  4018f8:	jne    0x401986
  4018fe:	mov    eax,DWORD PTR [ebp-0x8]
  401901:	sub    DWORD PTR ds:0x42c004,edx
  401907:	mov    edx,DWORD PTR ds:0x42e2b7
  40190d:	mov    ebx,DWORD PTR ds:0x41ce24
  401913:	mov    ebx,DWORD PTR [ebx]
  401915:	adc    DWORD PTR ds:0x42a018,ebx
  40191b:	mov    edx,DWORD PTR [edx+0x198]
  401921:	xor    ebx,0x3fd0
  401927:	xor    eax,esi
  401929:	sbb    DWORD PTR ds:0x429010,0x42901c
  401933:	add    eax,edi
  401935:	or     DWORD PTR ds:0x42900c,edx
  40193b:	mov    DWORD PTR [edx],eax
  40193d:	mov    eax,DWORD PTR [ebp-0x8]
  401940:	and    DWORD PTR ds:0x42a014,0x0
  40194a:	mov    ebx,DWORD PTR ds:0x42a014
  401950:	inc    ebx
  401951:	mov    DWORD PTR ds:0x42a014,ebx
  401957:	cmp    DWORD PTR ds:0x42a014,0x20
  40195e:	jne    0x40196a
  401964:	call   DWORD PTR ds:0x42e8ef
  40196a:	cmp    DWORD PTR ds:0x42a014,0x1c
  401971:	jb     0x40194a
  401977:	xor    eax,esi
  401979:	add    eax,edi
  40197b:	add    DWORD PTR ds:0x42d00c,ebx
  401981:	mov    ds:0x42e753,eax
  401986:	mov    eax,ds:0x42e2b7
  40198b:	and    DWORD PTR ds:0x42c014,0x7897
  401995:	mov    eax,DWORD PTR [eax+0x18c]
  40199b:	or     DWORD PTR ds:0x42d004,0x42d014
  4019a5:	mov    eax,DWORD PTR [eax]
  4019a7:	sbb    ebx,0x2d4c
  4019ad:	mov    DWORD PTR [ebp-0x7c],eax
  4019b0:	sbb    DWORD PTR ds:0x42c008,edx
  4019b6:	mov    ebx,0xf89c85b9
  4019bb:	neg    eax
  4019bd:	mov    DWORD PTR [ebp-0x10],ebx
  4019c0:	and    DWORD PTR ds:0x42c000,0x0
  4019ca:	mov    eax,ds:0x42c000
  4019cf:	inc    eax
  4019d0:	mov    ds:0x42c000,eax
  4019d5:	cmp    DWORD PTR ds:0x42c000,0xa
  4019dc:	jne    0x4019e8
  4019e2:	call   DWORD PTR ds:0x42e8f3
  4019e8:	cmp    DWORD PTR ds:0x42c000,0x9
  4019ef:	jne    0x401a00
  4019f5:	mov    eax,ds:0x42c000
  4019fa:	inc    eax
  4019fb:	mov    ds:0x42c000,eax
  401a00:	cmp    DWORD PTR ds:0x42c000,0x15
  401a07:	jb     0x4019ca
  401a0d:	movzx  eax,WORD PTR ds:0x42c00c
  401a14:	and    eax,DWORD PTR ds:0x42c018
  401a1a:	mov    ds:0x42c00c,eax
  401a1f:	mov    DWORD PTR [ebp-0x10],ebx
  401a22:	sub    DWORD PTR ds:0x42b004,ecx
  401a28:	mov    DWORD PTR [ebp-0x10],ebx
  401a2b:	mov    DWORD PTR [ebp-0x18],ecx
  401a2e:	mov    DWORD PTR [ebp-0x10],ebx
  401a31:	dec    DWORD PTR ds:0x42c014
  401a37:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401a3e:	mov    eax,ds:0x42a010
  401a43:	adc    DWORD PTR ds:0x42b00c,eax
  401a49:	mov    eax,DWORD PTR [ebp-0x8]
  401a4c:	add    DWORD PTR ds:0x42a004,0x42901c
  401a56:	xor    eax,esi
  401a58:	add    eax,edi
  401a5a:	mov    DWORD PTR ds:0x42d00c,0x4361
  401a64:	jmp    0x401b08
  401a69:	and    eax,ecx
  401a6b:	mov    eax,DWORD PTR [ebp-0xc]
  401a6e:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a71:	sbb    DWORD PTR ds:0x42d01c,0x38e1
  401a7b:	xor    eax,esi
  401a7d:	or     DWORD PTR ds:0x42b008,0x32de
  401a87:	lea    eax,[eax+ecx*1+0x3272e2]
  401a8e:	or     DWORD PTR ds:0x42900c,0x42c014
  401a98:	push   eax
  401a99:	mov    eax,DWORD PTR [ebp-0x18]
  401a9c:	mov    DWORD PTR ds:0x42b000,0x3f7a
  401aa6:	xor    eax,esi
  401aa8:	adc    DWORD PTR ds:0x42a000,0x429018
  401ab2:	lea    eax,[ebp+eax*1+0x3272ea]
  401ab9:	or     DWORD PTR ds:0x429000,0x42d01c
  401ac3:	push   eax
  401ac4:	sbb    eax,DWORD PTR ds:0x429000
  401aca:	mov    eax,ds:0x42e2b7
  401acf:	push   DWORD PTR [eax+0x1bc]
  401ad5:	and    DWORD PTR ds:0x42d014,0x65ae
  401adf:	call   0x4025f2
  401ae4:	mov    eax,DWORD PTR [ebp-0xc]
  401ae7:	or     edx,0x44
  401aed:	mov    ecx,DWORD PTR [ebp-0x1c]
  401af0:	neg    edx
  401af2:	xor    eax,esi
  401af4:	movzx  edx,BYTE PTR ds:0x42d000
  401afb:	add    DWORD PTR ds:0x429008,edx
  401b01:	lea    eax,[ecx+eax*1+0x3272e2]
  401b08:	mov    ecx,DWORD PTR [ebp-0xc]
  401b0b:	sbb    DWORD PTR ds:0x42900c,0x42c010
  401b15:	mov    edx,DWORD PTR [ebp-0xc]
  401b18:	sbb    DWORD PTR ds:0x42c00c,0x3f25
  401b22:	xor    edx,esi
  401b24:	xor    DWORD PTR ds:0x42901c,0x360b
  401b2e:	xor    ecx,esi
  401b30:	add    ecx,edx
  401b32:	mov    edx,DWORD PTR [ebp-0xc]
  401b35:	xor    edx,esi
  401b37:	lea    ecx,[ecx+edx*1+0x9758a6]
  401b3e:	mov    DWORD PTR ds:0x429010,0x1f54
  401b48:	mov    DWORD PTR [ebp-0x1c],eax
  401b4b:	cmp    eax,ecx
  401b4d:	jbe    0x401a69
  401b53:	mov    eax,ds:0x429020
  401b58:	adc    DWORD PTR ds:0x42901c,eax
  401b5e:	mov    eax,DWORD PTR [ebp+0xc]
  401b61:	mov    ecx,DWORD PTR ds:0x41cd6d
  401b67:	mov    ecx,DWORD PTR [ecx]
  401b69:	or     DWORD PTR ds:0x429028,ecx
  401b6f:	mov    ds:0x42e13b,eax
  401b74:	mov    ecx,DWORD PTR ds:0x429000
  401b7a:	or     DWORD PTR ds:0x42c008,ecx
  401b80:	mov    eax,DWORD PTR [ebp+0x10]
  401b83:	and    DWORD PTR ds:0x42b01c,0x0
  401b8d:	jmp    0x401b9f
  401b92:	mov    ecx,DWORD PTR ds:0x42b01c
  401b98:	inc    ecx
  401b99:	mov    DWORD PTR ds:0x42b01c,ecx
  401b9f:	cmp    DWORD PTR ds:0x42b01c,0x11
  401ba6:	jae    0x401bd3
  401bac:	cmp    DWORD PTR ds:0x42b01c,0x16
  401bb3:	jne    0x401bc4
  401bb9:	push   0x42e0f6
  401bbe:	call   DWORD PTR ds:0x42e8f7
  401bc4:	jmp    0x401b92
  401bc9:	mov    DWORD PTR ds:0x42a018,0x900
  401bd3:	mov    ds:0x42e38f,eax
  401bd8:	adc    DWORD PTR ds:0x42d008,0x597
  401be2:	mov    eax,ds:0x42e13b
  401be7:	mov    DWORD PTR ds:0x42901c,0x19
  401bf1:	cmp    DWORD PTR ds:0x42901c,0x0
  401bf8:	je     0x401c2a
  401bfe:	cmp    DWORD PTR ds:0x42901c,0x23
  401c05:	jne    0x401c16
  401c0b:	push   0x42e075
  401c10:	call   DWORD PTR ds:0x42e8fb
  401c16:	mov    ecx,DWORD PTR ds:0x42901c
  401c1c:	dec    ecx
  401c1d:	mov    DWORD PTR ds:0x42901c,ecx
  401c23:	jmp    0x401bf1
  401c28:	neg    ecx
  401c2a:	mov    ecx,DWORD PTR [ebp-0x30]
  401c2d:	sub    eax,edi
  401c2f:	xor    eax,esi
  401c31:	mov    DWORD PTR [ecx],eax
  401c33:	mov    eax,DWORD PTR [ebp-0x34]
  401c36:	mov    DWORD PTR ds:0x42c014,0x2861
  401c40:	cmp    eax,0xf89c8585
  401c45:	jne    0x401f18
  401c4b:	lea    eax,[ebp-0x48]
  401c4e:	mov    DWORD PTR [ebp-0x9c],eax
  401c54:	lea    eax,[ebp+0x4]
  401c57:	or     DWORD PTR ds:0x42d000,0x2377
  401c61:	mov    DWORD PTR [ebp-0x48],eax
  401c64:	xor    DWORD PTR ds:0x42a018,ecx
  401c6a:	mov    eax,DWORD PTR [ebp-0x48]
  401c6d:	test   eax,eax
  401c6f:	mov    DWORD PTR ds:0x42c00c,0x1657
  401c79:	je     0x4025c2
  401c7f:	mov    eax,DWORD PTR [ebp-0x24]
  401c82:	mov    eax,DWORD PTR [ebp-0xc]
  401c85:	sbb    eax,ecx
  401c87:	mov    eax,DWORD PTR [ebp-0x8]
  401c8a:	or     ecx,DWORD PTR ds:0x42c018
  401c90:	mov    DWORD PTR [ebp+0xc],eax
  401c93:	xor    DWORD PTR ds:0x42a014,edi
  401c99:	mov    eax,eax
  401c9b:	sub    DWORD PTR ds:0x42c000,0x352b
  401ca5:	mov    eax,ds:0x42e2b7
  401caa:	mov    DWORD PTR ds:0x42b014,0x12
  401cb4:	cmp    DWORD PTR ds:0x42b014,0x0
  401cbb:	je     0x401d04
  401cc1:	cmp    DWORD PTR ds:0x42b014,0x7
  401cc8:	jne    0x401cd4
  401cce:	call   DWORD PTR ds:0x42e8ff
  401cd4:	cmp    DWORD PTR ds:0x42b014,0x8
  401cdb:	jne    0x401cf0
  401ce1:	xor    ecx,ecx
  401ce3:	add    ecx,DWORD PTR ds:0x42b014
  401ce9:	dec    ecx
  401cea:	mov    DWORD PTR ds:0x42b014,ecx
  401cf0:	xor    ecx,ecx
  401cf2:	xor    ecx,DWORD PTR ds:0x42b014
  401cf8:	dec    ecx
  401cf9:	mov    DWORD PTR ds:0x42b014,ecx
  401cff:	jmp    0x401cb4
  401d04:	mov    eax,DWORD PTR [eax+0x1c8]
  401d0a:	mov    eax,DWORD PTR [eax]
  401d0c:	mov    DWORD PTR ds:0x429004,0x1d
  401d16:	cmp    DWORD PTR ds:0x429004,0x0
  401d1d:	je     0x401d6d
  401d23:	cmp    DWORD PTR ds:0x429004,0x4
  401d2a:	jne    0x401d41
  401d30:	push   DWORD PTR [ebp-0x28]
  401d33:	push   0x42d000
  401d38:	push   DWORD PTR [ebp-0xc]
  401d3b:	call   DWORD PTR ds:0x42e903
  401d41:	cmp    DWORD PTR ds:0x429004,0x5
  401d48:	jne    0x401d5b
  401d4e:	mov    ecx,DWORD PTR ds:0x429004
  401d54:	dec    ecx
  401d55:	mov    DWORD PTR ds:0x429004,ecx
  401d5b:	mov    ecx,DWORD PTR ds:0x429004
  401d61:	dec    ecx
  401d62:	mov    DWORD PTR ds:0x429004,ecx
  401d68:	jmp    0x401d16
  401d6d:	cdq    
  401d6e:	inc    ecx
  401d6f:	mov    ebx,eax
  401d71:	mov    ecx,DWORD PTR ds:0x42b008
  401d77:	adc    ecx,DWORD PTR ds:0x42b000
  401d7d:	mov    DWORD PTR ds:0x42b008,ecx
  401d83:	mov    eax,0xfabdbee7
  401d88:	and    DWORD PTR ds:0x429014,edi
  401d8e:	add    ebx,eax
  401d90:	mov    DWORD PTR ds:0x42c004,0x916
  401d9a:	adc    edx,0xffffffff
  401d9d:	and    DWORD PTR [ebp-0x10],0x0
  401da1:	or     DWORD PTR ds:0x42b018,0x42d014
  401dab:	xor    edx,0x0
  401dae:	mov    DWORD PTR [ebp-0x6c],edx
  401db1:	adc    DWORD PTR ds:0x42d008,ebx
  401db7:	mov    edx,DWORD PTR [ebp+0xc]
  401dba:	sbb    DWORD PTR ds:0x429004,edi
  401dc0:	mov    DWORD PTR [ebp-0x14],edx
  401dc3:	mov    ecx,0x8a29a12d
  401dc8:	add    edx,0x36ec
  401dce:	xor    ebx,ecx
  401dd0:	add    DWORD PTR [ebp-0x14],eax
  401dd3:	mov    DWORD PTR ds:0x42901c,ebx
  401dd9:	mov    edx,DWORD PTR [ebp-0x14]
  401ddc:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401de0:	xor    edx,ecx
  401de2:	mov    DWORD PTR [ebp-0x5c],edx
  401de5:	or     DWORD PTR ds:0x42a00c,edi
  401deb:	mov    edx,DWORD PTR [ebp-0x10]
  401dee:	xor    DWORD PTR ds:0x42d00c,0x42c018
  401df8:	xor    edx,0x0
  401dfb:	mov    DWORD PTR [ebp-0x58],edx
  401dfe:	mov    DWORD PTR ds:0x42900c,0x40f4
  401e08:	cmp    DWORD PTR [ebp-0x5c],ebx
  401e0b:	mov    DWORD PTR ds:0x42a004,0x5ee8
  401e15:	jne    0x401e3b
  401e1b:	mov    DWORD PTR ds:0x42b004,0x3032
  401e25:	mov    edx,DWORD PTR [ebp-0x6c]
  401e28:	cmp    DWORD PTR [ebp-0x58],edx
  401e2b:	mov    DWORD PTR ds:0x42b010,0x6d5c
  401e35:	je     0x401eba
  401e3b:	mov    edx,DWORD PTR ds:0x42e2b7
  401e41:	and    DWORD PTR ds:0x429000,0x42b000
  401e4b:	mov    edx,DWORD PTR [edx+0x1c0]
  401e51:	add    DWORD PTR ds:0x42b008,0x42a018
  401e5b:	mov    edx,DWORD PTR [edx]
  401e5d:	xor    ebx,ebx
  401e5f:	adc    DWORD PTR ds:0x42d008,0x116
  401e69:	add    edx,eax
  401e6b:	mov    DWORD PTR ds:0x429000,0x1bcd
  401e75:	adc    ebx,0xffffffff
  401e78:	and    DWORD PTR ds:0x429014,0x42b018
  401e82:	xor    edx,ecx
  401e84:	and    DWORD PTR ds:0x42c004,0x1735
  401e8e:	xor    ebx,0x0
  401e91:	mov    DWORD PTR ds:0x42d01c,0x82d
  401e9b:	cmp    edx,0x70941fc5
  401ea1:	mov    DWORD PTR ds:0x42c01c,0x36f6
  401eab:	jne    0x4025c2
  401eb1:	cmp    ebx,0xffffffff
  401eb4:	jne    0x4025c2
  401eba:	mov    edx,DWORD PTR ds:0x429008
  401ec0:	add    DWORD PTR ds:0x42b018,edx
  401ec6:	mov    edx,DWORD PTR ds:0x42e333
  401ecc:	and    DWORD PTR ds:0x42a000,0x1639
  401ed6:	mov    ebx,DWORD PTR ds:0x42e33b
  401edc:	adc    DWORD PTR ds:0x429008,0x42d000
  401ee6:	xor    edx,ebx
  401ee8:	sub    DWORD PTR ds:0x42b018,ecx
  401eee:	mov    DWORD PTR ds:0x42e333,edx
  401ef4:	sbb    DWORD PTR ds:0x42a000,0x162a
  401efe:	mov    ebx,DWORD PTR ds:0x42e333
  401f04:	mov    edx,DWORD PTR [ebp-0x48]
  401f07:	add    DWORD PTR ds:0x429010,0x42ec
  401f11:	add    DWORD PTR [edx],ebx
  401f13:	jmp    0x402583
  401f18:	mov    eax,DWORD PTR [ebp-0x3c]
  401f1b:	mov    DWORD PTR ds:0x42c014,0x53e4
  401f25:	cmp    eax,0xf89c8584
  401f2a:	je     0x402096
  401f30:	movzx  eax,BYTE PTR ds:0x42b014
  401f37:	sub    DWORD PTR ds:0x42d000,eax
  401f3d:	mov    eax,DWORD PTR [ebp-0x8]
  401f40:	mov    ecx,DWORD PTR ds:0x42a000
  401f46:	add    DWORD PTR ds:0x42d018,ecx
  401f4c:	mov    ecx,DWORD PTR [ebp-0x44]
  401f4f:	xor    DWORD PTR ds:0x42b008,0x5e29
  401f59:	xor    eax,esi
  401f5b:	sub    DWORD PTR ds:0x42a018,0x7df1
  401f65:	add    eax,edi
  401f67:	cmp    eax,ecx
  401f69:	mov    DWORD PTR ds:0x42b008,0x3297
  401f73:	je     0x402096
  401f79:	and    DWORD PTR ds:0x429018,0x0
  401f83:	mov    eax,ds:0x429018
  401f88:	inc    eax
  401f89:	mov    ds:0x429018,eax
  401f8e:	cmp    DWORD PTR ds:0x429018,0x1f
  401f95:	jne    0x401fa6
  401f9b:	push   0x51be
  401fa0:	call   DWORD PTR ds:0x42e913
  401fa6:	cmp    DWORD PTR ds:0x429018,0x1d
  401fad:	jb     0x401f83
  401fb3:	adc    DWORD PTR ds:0x42d01c,edx
  401fb9:	mov    eax,ds:0x42e2b7
  401fbe:	or     ecx,DWORD PTR ds:0x42d01c
  401fc4:	mov    eax,DWORD PTR [eax+0x194]
  401fca:	mov    ecx,DWORD PTR [eax]
  401fcc:	and    DWORD PTR ds:0x42d01c,0x0
  401fd6:	jmp    0x401fe6
  401fdb:	mov    eax,ds:0x42d01c
  401fe0:	inc    eax
  401fe1:	mov    ds:0x42d01c,eax
  401fe6:	cmp    DWORD PTR ds:0x42d01c,0x19
  401fed:	jae    0x40201a
  401ff3:	cmp    DWORD PTR ds:0x42d01c,0x26
  401ffa:	jne    0x402015
  402000:	push   0x8d10
  402005:	push   0x42e026
  40200a:	push   0x42c010
  40200f:	call   DWORD PTR ds:0x42e917
  402015:	jmp    0x401fdb
  40201a:	mov    eax,DWORD PTR [ecx+0x3c]
  40201d:	not    DWORD PTR ds:0x42b01c
  402023:	push   DWORD PTR ds:0x42e38f
  402029:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40202d:	or     DWORD PTR ds:0x42b014,0x372f
  402037:	push   DWORD PTR ds:0x42e13b
  40203d:	or     DWORD PTR ds:0x42a01c,0x1f3e
  402047:	add    eax,ecx
  402049:	sub    DWORD PTR ds:0x42c014,ebx
  40204f:	mov    ecx,DWORD PTR ds:0x42e2b7
  402055:	mov    ecx,DWORD PTR [ecx+0x194]
  40205b:	sbb    DWORD PTR ds:0x429008,0x42b010
  402065:	push   DWORD PTR [ecx]
  402067:	xor    DWORD PTR ds:0x42d004,0x42a014
  402071:	call   eax
  402073:	mov    ecx,DWORD PTR ds:0x42b00c
  402079:	mov    ecx,DWORD PTR ds:0x42e2b7
  40207f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402085:	mov    DWORD PTR [ecx],eax
  402087:	mov    DWORD PTR ds:0x42b004,0x40bc
  402091:	jmp    0x4025c2
  402096:	add    DWORD PTR ds:0x429028,0x10ff
  4020a0:	mov    eax,DWORD PTR [ebp-0x8]
  4020a3:	mov    ecx,DWORD PTR [ebp-0x7c]
  4020a6:	xor    eax,esi
  4020a8:	add    eax,edi
  4020aa:	cmp    eax,ecx
  4020ac:	jne    0x40247d
  4020b2:	mov    eax,DWORD PTR [ebp-0x8]
  4020b5:	mov    ecx,DWORD PTR ds:0x42e2b7
  4020bb:	mov    ecx,DWORD PTR [ecx+0x198]
  4020c1:	xor    eax,esi
  4020c3:	add    eax,edi
  4020c5:	cmp    eax,DWORD PTR [ecx]
  4020c7:	jne    0x4020e6
  4020cd:	mov    eax,DWORD PTR [ebp-0x8]
  4020d0:	push   0xf89c8585
  4020d5:	xor    eax,esi
  4020d7:	add    eax,edi
  4020d9:	push   eax
  4020da:	push   ebx
  4020db:	push   DWORD PTR [ebp-0xc]
  4020de:	push   DWORD PTR [ebp-0x8]
  4020e1:	call   0x405799
  4020e6:	mov    eax,DWORD PTR [ebp-0xc]
  4020e9:	mov    DWORD PTR [ebp-0x40],eax
  4020ec:	mov    eax,DWORD PTR [ebp-0x8]
  4020ef:	mov    DWORD PTR [ebp-0x1c],eax
  4020f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4020f5:	xor    eax,esi
  4020f7:	add    eax,edi
  4020f9:	mov    DWORD PTR [ebp+0x10],eax
  4020fc:	mov    eax,ds:0x42e137
  402101:	mov    eax,DWORD PTR [eax]
  402103:	mov    DWORD PTR [ebp+0x10],eax
  402106:	mov    eax,ds:0x42e33f
  40210b:	mov    eax,DWORD PTR [eax]
  40210d:	mov    DWORD PTR [ebp-0x18],eax
  402110:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402117:	mov    eax,DWORD PTR [ebp+0xc]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	mov    DWORD PTR [ebp+0xc],eax
  402121:	mov    eax,ds:0x42e2b7
  402126:	mov    DWORD PTR [ebp+0xc],eax
  402129:	mov    eax,DWORD PTR [ebp+0x10]
  40212c:	mov    DWORD PTR [ebp+0xc],eax
  40212f:	mov    eax,DWORD PTR [ebp+0xc]
  402132:	push   0x4
  402134:	pop    ecx
  402135:	sub    ecx,eax
  402137:	add    ecx,DWORD PTR [ebp-0x18]
  40213a:	mov    DWORD PTR [ebp-0x30],0xf89c85c5
  402141:	mov    DWORD PTR [ebp+0x10],ecx
  402144:	mov    DWORD PTR [ebp-0xe4],ebx
  40214a:	mov    eax,DWORD PTR [ebp+0xc]
  40214d:	mov    DWORD PTR [ebp-0xe0],eax
  402153:	mov    eax,DWORD PTR [ebp+0x10]
  402156:	mov    DWORD PTR [ebp-0xdc],eax
  40215c:	mov    eax,DWORD PTR [ebp-0x30]
  40215f:	xor    eax,esi
  402161:	add    eax,edi
  402163:	mov    DWORD PTR [ebp-0xd8],eax
  402169:	lea    eax,[ebp-0x88]
  40216f:	mov    DWORD PTR [ebp-0xd4],eax
  402175:	mov    eax,DWORD PTR [ebp-0xe4]
  40217b:	xor    eax,esi
  40217d:	add    eax,edi
  40217f:	mov    DWORD PTR [ebp-0xe4],eax
  402185:	lea    eax,[ebp-0xe4]
  40218b:	push   eax
  40218c:	mov    eax,DWORD PTR [ebp-0x40]
  40218f:	xor    eax,esi
  402191:	add    eax,edi
  402193:	push   eax
  402194:	mov    eax,ds:0x42e2d7
  402199:	push   0x42e22d
  40219e:	push   DWORD PTR [eax]
  4021a0:	call   0x40294c
  4021a5:	mov    eax,DWORD PTR [ebp+0xc]
  4021a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4021ab:	mov    DWORD PTR [ebp-0x84],ecx
  4021b1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4021b4:	xor    ecx,esi
  4021b6:	mov    DWORD PTR [ebp-0x18],eax
  4021b9:	add    ecx,edi
  4021bb:	jmp    0x40241e
  4021c0:	lea    edx,[ecx+eax*1]
  4021c3:	mov    DWORD PTR [ebp+0x10],edx
  4021c6:	mov    edx,DWORD PTR [ebp-0x84]
  4021cc:	sub    edx,ecx
  4021ce:	mov    DWORD PTR [ebp+0xc],edx
  4021d1:	mov    edx,DWORD PTR [ebp+0xc]
  4021d4:	mov    DWORD PTR [ebp-0x60],edx
  4021d7:	mov    edx,DWORD PTR [ebp+0x10]
  4021da:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  4021e1:	mov    DWORD PTR [ebp-0x6c],edx
  4021e4:	mov    DWORD PTR [ebp-0x20],0xf89c8584
  4021eb:	mov    edx,DWORD PTR [ebp-0x54]
  4021ee:	xor    edx,esi
  4021f0:	add    edx,edi
  4021f2:	mov    DWORD PTR [ebp+0x10],edx
  4021f5:	mov    edx,DWORD PTR [ebp-0x54]
  4021f8:	xor    edx,esi
  4021fa:	add    edx,edi
  4021fc:	mov    DWORD PTR [ebp+0xc],edx
  4021ff:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402206:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40220d:	mov    edx,DWORD PTR [ebp-0x54]
  402210:	mov    ebx,DWORD PTR [ebp-0x60]
  402213:	xor    edx,esi
  402215:	add    edx,edi
  402217:	cmp    ebx,edx
  402219:	je     0x402412
  40221f:	mov    eax,DWORD PTR [ebp-0x20]
  402222:	xor    eax,esi
  402224:	mov    edx,0xffcd8d1e
  402229:	sub    edx,eax
  40222b:	add    edx,DWORD PTR [ebp-0x60]
  40222e:	mov    eax,DWORD PTR [ebp-0x20]
  402231:	mov    ebx,DWORD PTR [ebp+0x10]
  402234:	xor    eax,esi
  402236:	add    eax,edi
  402238:	imul   eax,ebx
  40223b:	cmp    eax,edx
  40223d:	ja     0x40240f
  402243:	mov    edx,DWORD PTR [ebp+0x10]
  402246:	mov    eax,DWORD PTR [ebp-0x60]
  402249:	mov    ebx,DWORD PTR [ebp-0x68]
  40224c:	sub    eax,edx
  40224e:	xor    ebx,esi
  402250:	xor    edx,edx
  402252:	add    ebx,edi
  402254:	div    ebx
  402256:	mov    DWORD PTR [ebp+0xc],eax
  402259:	mov    eax,DWORD PTR [ebp-0x74]
  40225c:	mov    edx,DWORD PTR [ebp+0xc]
  40225f:	xor    eax,esi
  402261:	add    eax,edi
  402263:	cmp    edx,eax
  402265:	jbe    0x402275
  40226b:	mov    eax,DWORD PTR [ebp-0x74]
  40226e:	xor    eax,esi
  402270:	add    eax,edi
  402272:	mov    DWORD PTR [ebp+0xc],eax
  402275:	mov    eax,DWORD PTR [ebp-0x68]
  402278:	mov    edx,DWORD PTR [ebp+0xc]
  40227b:	xor    eax,esi
  40227d:	add    eax,edi
  40227f:	imul   eax,edx
  402282:	mov    DWORD PTR [ebp+0xc],eax
  402285:	mov    eax,DWORD PTR [ebp-0x54]
  402288:	mov    edx,DWORD PTR [ebp+0xc]
  40228b:	xor    eax,esi
  40228d:	add    eax,edi
  40228f:	cmp    edx,eax
  402291:	je     0x4023f8
  402297:	mov    eax,DWORD PTR [ebp+0xc]
  40229a:	mov    DWORD PTR [ebp-0x34],eax
  40229d:	mov    eax,DWORD PTR [ebp+0x10]
  4022a0:	add    eax,DWORD PTR [ebp-0x6c]
  4022a3:	mov    DWORD PTR [ebp-0x30],0xf89c8585
  4022aa:	mov    DWORD PTR [ebp-0x28],eax
  4022ad:	mov    eax,0xf89c8584
  4022b2:	mov    DWORD PTR [ebp-0x64],eax
  4022b5:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4022bc:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4022c3:	mov    DWORD PTR [ebp-0x38],eax
  4022c6:	mov    eax,DWORD PTR [ebp-0x30]
  4022c9:	xor    eax,esi
  4022cb:	add    eax,edi
  4022cd:	jmp    0x4023b4
  4022d2:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4022d9:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  4022e0:	mov    eax,DWORD PTR [ebp-0x38]
  4022e3:	mov    edx,DWORD PTR [ebp+0xc]
  4022e6:	xor    eax,esi
  4022e8:	add    eax,edi
  4022ea:	imul   eax,edx
  4022ed:	mov    edx,DWORD PTR [ebp-0x28]
  4022f0:	mov    al,BYTE PTR [eax+edx*1]
  4022f3:	mov    BYTE PTR [ebp-0x1],al
  4022f6:	mov    eax,DWORD PTR [ebp-0x38]
  4022f9:	mov    edx,DWORD PTR [ebp+0xc]
  4022fc:	xor    eax,esi
  4022fe:	add    eax,edi
  402300:	imul   eax,edx
  402303:	mov    edx,DWORD PTR [ebp-0x58]
  402306:	xor    edx,esi
  402308:	add    eax,edx
  40230a:	mov    edx,DWORD PTR [ebp-0x28]
  40230d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402315:	mov    edx,DWORD PTR [ebp-0x78]
  402318:	xor    edx,esi
  40231a:	lea    eax,[edx+eax*1+0x3272e2]
  402321:	movzx  edx,BYTE PTR [ebp-0x1]
  402325:	xor    edx,eax
  402327:	mov    BYTE PTR [ebp-0x1],dl
  40232a:	mov    al,BYTE PTR [ebp-0x1]
  40232d:	mov    edx,DWORD PTR [ebp-0x38]
  402330:	mov    ebx,DWORD PTR [ebp+0xc]
  402333:	xor    edx,esi
  402335:	add    edx,edi
  402337:	imul   edx,ebx
  40233a:	mov    ebx,DWORD PTR [ebp-0x28]
  40233d:	mov    BYTE PTR [edx+ebx*1],al
  402340:	mov    eax,DWORD PTR [ebp-0x38]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    edx,DWORD PTR [ebp-0x28]
  402350:	mov    al,BYTE PTR [eax+edx*1]
  402353:	mov    BYTE PTR [ebp-0x1],al
  402356:	mov    eax,DWORD PTR [ebp-0x38]
  402359:	mov    edx,DWORD PTR [ebp+0xc]
  40235c:	xor    eax,esi
  40235e:	add    eax,edi
  402360:	imul   eax,edx
  402363:	mov    edx,DWORD PTR [ebp-0x64]
  402366:	xor    edx,esi
  402368:	add    eax,edx
  40236a:	mov    edx,DWORD PTR [ebp-0x28]
  40236d:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402375:	mov    edx,DWORD PTR [ebp-0x80]
  402378:	xor    edx,esi
  40237a:	lea    eax,[edx+eax*1+0x3272e2]
  402381:	movzx  edx,BYTE PTR [ebp-0x1]
  402385:	xor    edx,eax
  402387:	mov    BYTE PTR [ebp-0x1],dl
  40238a:	mov    al,BYTE PTR [ebp-0x1]
  40238d:	mov    edx,DWORD PTR [ebp-0x38]
  402390:	mov    ebx,DWORD PTR [ebp+0xc]
  402393:	xor    edx,esi
  402395:	add    edx,edi
  402397:	imul   edx,ebx
  40239a:	mov    ebx,DWORD PTR [ebp-0x28]
  40239d:	mov    BYTE PTR [edx+ebx*1],al
  4023a0:	mov    eax,DWORD PTR [ebp-0x10]
  4023a3:	mov    edx,DWORD PTR [ebp-0x64]
  4023a6:	xor    eax,esi
  4023a8:	xor    edx,esi
  4023aa:	add    eax,edi
  4023ac:	add    edx,edi
  4023ae:	imul   eax,edx
  4023b1:	add    eax,DWORD PTR [ebp+0xc]
  4023b4:	mov    DWORD PTR [ebp+0xc],eax
  4023b7:	mov    eax,DWORD PTR [ebp+0xc]
  4023ba:	mov    edx,DWORD PTR [ebp-0x34]
  4023bd:	cmp    edx,eax
  4023bf:	jb     0x4022d2
  4023c5:	mov    eax,DWORD PTR [ebp-0x64]
  4023c8:	mov    edx,DWORD PTR [ebp-0x34]
  4023cb:	xor    eax,esi
  4023cd:	add    eax,edi
  4023cf:	imul   eax,edx
  4023d2:	mov    edx,DWORD PTR [ebp-0x30]
  4023d5:	xor    edx,esi
  4023d7:	add    edx,edi
  4023d9:	or     eax,edx
  4023db:	mov    edx,DWORD PTR [ebp-0x20]
  4023de:	xor    edx,esi
  4023e0:	add    eax,edx
  4023e2:	mov    edx,DWORD PTR [ebp-0x20]
  4023e5:	xor    edx,esi
  4023e7:	add    eax,edx
  4023e9:	mov    edx,DWORD PTR [ebp+0x10]
  4023ec:	lea    eax,[eax+edx*1+0x64e5c4]
  4023f3:	jmp    0x402407
  4023f8:	mov    eax,DWORD PTR [ebp-0x20]
  4023fb:	mov    edx,DWORD PTR [ebp+0x10]
  4023fe:	xor    eax,esi
  402400:	lea    eax,[eax+edx*1+0x3272e2]
  402407:	mov    DWORD PTR [ebp+0x10],eax
  40240a:	jmp    0x40221f
  40240f:	mov    eax,DWORD PTR [ebp-0x18]
  402412:	mov    edx,DWORD PTR [ebp-0x40]
  402415:	xor    edx,esi
  402417:	lea    ecx,[ecx+edx*1+0x3272e2]
  40241e:	lea    edx,[ecx-0x3272e2]
  402424:	xor    edx,esi
  402426:	cmp    edx,0xf89c9585
  40242c:	jne    0x4021c0
  402432:	mov    ecx,DWORD PTR [ebp-0x1c]
  402435:	mov    edx,DWORD PTR [ebp-0x40]
  402438:	mov    ebx,DWORD PTR [ebp-0x1c]
  40243b:	xor    edx,esi
  40243d:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402444:	xor    ecx,esi
  402446:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  40244d:	xor    ebx,esi
  40244f:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402456:	mov    edx,DWORD PTR [ebp-0x40]
  402459:	xor    edx,esi
  40245b:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  402462:	mov    eax,DWORD PTR [ebp-0x40]
  402465:	mov    eax,DWORD PTR [ebp-0x8]
  402468:	xor    eax,esi
  40246a:	add    eax,edi
  40246c:	mov    ds:0x42e33b,eax
  402471:	mov    eax,DWORD PTR [ebp-0x8]
  402474:	xor    eax,esi
  402476:	add    eax,edi
  402478:	mov    ds:0x42e333,eax
  40247d:	lea    eax,[ebp-0x2c]
  402480:	mov    DWORD PTR [ebp-0x90],eax
  402486:	lea    eax,[ebp+0x4]
  402489:	mov    DWORD PTR [ebp-0x2c],eax
  40248c:	mov    eax,DWORD PTR [ebp-0x2c]
  40248f:	test   eax,eax
  402491:	je     0x4025c2
  402497:	mov    DWORD PTR [ebp-0xa0],0xf152c3c
  4024a1:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  4024ab:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  4024b5:	mov    DWORD PTR [ebp-0x94],0x72670a1d
  4024bf:	call   0x405403
  4024c4:	mov    eax,DWORD PTR [ebp-0x24]
  4024c7:	mov    eax,DWORD PTR [ebp-0xc]
  4024ca:	mov    eax,DWORD PTR [ebp-0x8]
  4024cd:	mov    DWORD PTR [ebp+0xc],eax
  4024d0:	mov    eax,eax
  4024d2:	mov    eax,ds:0x42e2b7
  4024d7:	mov    eax,DWORD PTR [eax+0x1c8]
  4024dd:	mov    eax,DWORD PTR [eax]
  4024df:	cdq    
  4024e0:	mov    ebx,eax
  4024e2:	mov    eax,0xfabdbee7
  4024e7:	add    ebx,eax
  4024e9:	adc    edx,0xffffffff
  4024ec:	and    DWORD PTR [ebp-0x10],0x0
  4024f0:	xor    edx,0x0
  4024f3:	mov    DWORD PTR [ebp-0x6c],edx
  4024f6:	mov    edx,DWORD PTR [ebp+0xc]
  4024f9:	mov    DWORD PTR [ebp-0x14],edx
  4024fc:	mov    ecx,0x8a29a12d
  402501:	xor    ebx,ecx
  402503:	add    DWORD PTR [ebp-0x14],eax
  402506:	mov    edx,DWORD PTR [ebp-0x14]
  402509:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40250d:	xor    edx,ecx
  40250f:	mov    DWORD PTR [ebp-0x5c],edx
  402512:	mov    edx,DWORD PTR [ebp-0x10]
  402515:	xor    edx,0x0
  402518:	mov    DWORD PTR [ebp-0x58],edx
  40251b:	cmp    DWORD PTR [ebp-0x5c],ebx
  40251e:	jne    0x402530
  402524:	mov    edx,DWORD PTR [ebp-0x6c]
  402527:	cmp    DWORD PTR [ebp-0x58],edx
  40252a:	je     0x40255f
  402530:	mov    edx,DWORD PTR ds:0x42e2b7
  402536:	mov    edx,DWORD PTR [edx+0x1c0]
  40253c:	mov    edx,DWORD PTR [edx]
  40253e:	xor    ebx,ebx
  402540:	add    edx,eax
  402542:	adc    ebx,0xffffffff
  402545:	xor    edx,ecx
  402547:	xor    ebx,0x0
  40254a:	cmp    edx,0x70941fc5
  402550:	jne    0x4025c2
  402556:	cmp    ebx,0xffffffff
  402559:	jne    0x4025c2
  40255f:	mov    edx,DWORD PTR ds:0x42e333
  402565:	mov    ebx,DWORD PTR ds:0x42e33b
  40256b:	xor    edx,ebx
  40256d:	mov    DWORD PTR ds:0x42e333,edx
  402573:	mov    edx,DWORD PTR [ebp-0x2c]
  402576:	mov    ebx,DWORD PTR ds:0x42e333
  40257c:	add    ebx,DWORD PTR [edx]
  40257e:	mov    edx,DWORD PTR [ebp-0x2c]
  402581:	mov    DWORD PTR [edx],ebx
  402583:	mov    edx,DWORD PTR [ebp+0xc]
  402586:	xor    esi,edx
  402588:	mov    edx,DWORD PTR ds:0x42e333
  40258e:	add    esi,edi
  402590:	xor    ebx,ebx
  402592:	add    esi,eax
  402594:	adc    ebx,0xffffffff
  402597:	xor    edi,edi
  402599:	xor    esi,ecx
  40259b:	xor    ebx,0x0
  40259e:	add    edx,eax
  4025a0:	adc    edi,0xffffffff
  4025a3:	xor    edx,ecx
  4025a5:	xor    edi,0x0
  4025a8:	cmp    edx,esi
  4025aa:	jne    0x4025c2
  4025b0:	cmp    edi,ebx
  4025b2:	jne    0x4025c2
  4025b8:	mov    eax,ds:0x42e333
  4025bd:	mov    ds:0x42e33b,eax
  4025c2:	mov    eax,ds:0x42e2b7
  4025c7:	push   0x4
  4025c9:	add    eax,0x1cc
  4025ce:	push   eax
  4025cf:	lea    eax,[ebp-0x24]
  4025d2:	push   eax
  4025d3:	call   0x4025f2
  4025d8:	mov    eax,DWORD PTR [ebp-0x24]
  4025db:	mov    eax,DWORD PTR [eax]
  4025dd:	pop    ebx
  4025de:	pop    esi
  4025df:	pop    edi
  4025e0:	leave  
  4025e1:	ret    0xc
  4025e4:	xor    eax,eax
  4025e6:	sbb    DWORD PTR ds:0x42c018,0x42b010
  4025f0:	inc    eax
  4025f1:	ret    
  4025f2:	push   ebp
  4025f3:	mov    ebp,esp
  4025f5:	sub    esp,0x10
  4025f8:	mov    eax,0xf89c8585
  4025fd:	and    DWORD PTR ds:0x429018,0x0
  402607:	mov    edx,DWORD PTR ds:0x429018
  40260d:	inc    edx
  40260e:	mov    DWORD PTR ds:0x429018,edx
  402614:	cmp    DWORD PTR ds:0x429018,0x8
  40261b:	jne    0x402627
  402621:	call   DWORD PTR ds:0x42e91b
  402627:	cmp    DWORD PTR ds:0x429018,0x7
  40262e:	jne    0x402641
  402634:	mov    edx,DWORD PTR ds:0x429018
  40263a:	inc    edx
  40263b:	mov    DWORD PTR ds:0x429018,edx
  402641:	cmp    DWORD PTR ds:0x429018,0x10
  402648:	jb     0x402607
  40264e:	mov    DWORD PTR [ebp-0x4],eax
  402651:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  402658:	movzx  edx,BYTE PTR ds:0x42b010
  40265f:	add    DWORD PTR ds:0x42d000,edx
  402665:	mov    ecx,DWORD PTR [ebp-0x4]
  402668:	not    DWORD PTR ds:0x42d008
  40266e:	push   esi
  40266f:	and    DWORD PTR ds:0x42c00c,edx
  402675:	mov    edx,0x751089b
  40267a:	movzx  esi,BYTE PTR ds:0x429014
  402681:	sbb    DWORD PTR ds:0x429024,esi
  402687:	xor    ecx,edx
  402689:	xor    esi,0xd57
  40268f:	mov    esi,0x3272e2
  402694:	push   edi
  402695:	or     DWORD PTR ds:0x42d00c,edx
  40269b:	mov    edi,DWORD PTR [ebp+0x10]
  40269e:	neg    DWORD PTR ds:0x42d018
  4026a4:	add    ecx,esi
  4026a6:	mov    DWORD PTR ds:0x42d000,0x5b5a
  4026b0:	cmp    ecx,edi
  4026b2:	je     0x4027fd
  4026b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4026bb:	or     DWORD PTR ds:0x42b000,0x2b6e
  4026c5:	mov    edi,DWORD PTR [ebp+0x10]
  4026c8:	and    DWORD PTR ds:0x429018,0x429014
  4026d2:	xor    eax,eax
  4026d4:	xor    ecx,edx
  4026d6:	add    ecx,esi
  4026d8:	or     DWORD PTR ds:0x42d014,0x42a010
  4026e2:	add    edi,0xfabdbee7
  4026e8:	adc    eax,0xffffffff
  4026eb:	xor    eax,0x0
  4026ee:	mov    DWORD PTR [ebp-0xc],eax
  4026f1:	mov    eax,ds:0x41cddc
  4026f6:	mov    eax,DWORD PTR [eax]
  4026f8:	xor    DWORD PTR ds:0x42d01c,eax
  4026fe:	push   ebx
  4026ff:	mov    DWORD PTR ds:0x429024,0x1a
  402709:	cmp    DWORD PTR ds:0x429024,0x0
  402710:	je     0x40275a
  402716:	cmp    DWORD PTR ds:0x429024,0xa
  40271d:	jne    0x40272f
  402723:	push   DWORD PTR [ebp-0x24]
  402726:	push   DWORD PTR [ebp-0x20]
  402729:	call   DWORD PTR ds:0x42e91f
  40272f:	cmp    DWORD PTR ds:0x429024,0xb
  402736:	jne    0x40274a
  40273c:	xor    eax,eax
  40273e:	xor    eax,DWORD PTR ds:0x429024
  402744:	dec    eax
  402745:	mov    ds:0x429024,eax
  40274a:	mov    eax,ds:0x429024
  40274f:	dec    eax
  402750:	mov    ds:0x429024,eax
  402755:	jmp    0x402709
  40275a:	xor    ebx,ebx
  40275c:	xor    edi,0x8a29a12d
  402762:	mov    eax,ecx
  402764:	add    eax,0xfabdbee7
  402769:	adc    ebx,0xffffffff
  40276c:	xor    eax,0x8a29a12d
  402771:	xor    ebx,0x0
  402774:	cmp    eax,edi
  402776:	jne    0x40278f
  40277c:	cmp    ebx,DWORD PTR [ebp-0xc]
  40277f:	je     0x4027f7
  402785:	jmp    0x40278f
  40278a:	mov    esi,0x3272e2
  40278f:	mov    eax,DWORD PTR [ebp-0x4]
  402792:	mov    edi,DWORD PTR [ebp-0x8]
  402795:	xor    edi,edx
  402797:	add    edi,esi
  402799:	mov    esi,DWORD PTR [ebp+0x8]
  40279c:	imul   edi,ecx
  40279f:	mov    ebx,DWORD PTR [ebp+0xc]
  4027a2:	xor    eax,edx
  4027a4:	add    eax,ecx
  4027a6:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  4027ad:	mov    BYTE PTR [edi+esi*1],al
  4027b0:	mov    eax,DWORD PTR [ebp-0x8]
  4027b3:	mov    esi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,edx
  4027b8:	xor    ebx,ebx
  4027ba:	add    esi,0xfabdbee7
  4027c0:	adc    ebx,0xffffffff
  4027c3:	lea    ecx,[ecx+eax*1+0x3272e2]
  4027ca:	xor    edi,edi
  4027cc:	xor    esi,0x8a29a12d
  4027d2:	xor    ebx,0x0
  4027d5:	mov    eax,ecx
  4027d7:	add    eax,0xfabdbee7
  4027dc:	adc    edi,0xffffffff
  4027df:	xor    eax,0x8a29a12d
  4027e4:	xor    edi,0x0
  4027e7:	cmp    eax,esi
  4027e9:	jne    0x40278a
  4027ef:	cmp    edi,ebx
  4027f1:	jne    0x40278a
  4027f7:	mov    eax,0xf89c8584
  4027fc:	pop    ebx
  4027fd:	pop    edi
  4027fe:	pop    esi
  4027ff:	leave  
  402800:	ret    0xc
  402803:	push   ebp
  402804:	mov    ebp,esp
  402806:	push   ecx
  402807:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  40280e:	mov    DWORD PTR ds:0x429028,0x19
  402818:	cmp    DWORD PTR ds:0x429028,0x0
  40281f:	je     0x402853
  402825:	cmp    DWORD PTR ds:0x429028,0x1c
  40282c:	jne    0x40283d
  402832:	push   0x6b9f
  402837:	call   DWORD PTR ds:0x42e8b7
  40283d:	mov    eax,ds:0x429028
  402842:	dec    eax
  402843:	mov    ds:0x429028,eax
  402848:	jmp    0x402818
  40284d:	or     DWORD PTR ds:0x429014,ecx
  402853:	mov    eax,DWORD PTR [ebp+0x8]
  402856:	adc    edx,0x6b36
  40285c:	movsx  eax,BYTE PTR [eax]
  40285f:	and    ecx,0x6f50
  402865:	mov    edx,0x3272e2
  40286a:	and    DWORD PTR ds:0x429014,0x58e
  402874:	sub    eax,edx
  402876:	mov    DWORD PTR ds:0x42d000,0x12
  402880:	cmp    DWORD PTR ds:0x42d000,0x0
  402887:	je     0x402906
  40288d:	cmp    DWORD PTR ds:0x42d000,0x5
  402894:	jne    0x4028da
  40289a:	push   0x42e041
  40289f:	push   0x7a69
  4028a4:	push   DWORD PTR [ebp-0x10]
  4028a7:	push   DWORD PTR [ebp-0x10]
  4028aa:	push   DWORD PTR [ebp-0x24]
  4028ad:	push   0x43f7
  4028b2:	push   0x38dd
  4028b7:	push   DWORD PTR [ebp-0x10]
  4028ba:	push   0x3246
  4028bf:	push   0x510b
  4028c4:	push   0x8cd7
  4028c9:	push   DWORD PTR [ebp-0xc]
  4028cc:	push   0x63f7
  4028d1:	push   DWORD PTR [ebp-0x10]
  4028d4:	call   DWORD PTR ds:0x42e8bb
  4028da:	cmp    DWORD PTR ds:0x42d000,0x6
  4028e1:	jne    0x4028f4
  4028e7:	mov    ecx,DWORD PTR ds:0x42d000
  4028ed:	dec    ecx
  4028ee:	mov    DWORD PTR ds:0x42d000,ecx
  4028f4:	mov    ecx,DWORD PTR ds:0x42d000
  4028fa:	dec    ecx
  4028fb:	mov    DWORD PTR ds:0x42d000,ecx
  402901:	jmp    0x402880
  402906:	mov    ecx,0x751089b
  40290b:	xor    eax,ecx
  40290d:	cmp    eax,0xf89c85f0
  402912:	jne    0x402941
  402918:	mov    eax,DWORD PTR [ebp+0x8]
  40291b:	push   esi
  40291c:	mov    esi,DWORD PTR [ebp+0x8]
  40291f:	add    esi,DWORD PTR [eax+0x3c]
  402922:	mov    DWORD PTR [ebp+0x8],esi
  402925:	mov    eax,DWORD PTR [ebp-0x4]
  402928:	mov    esi,DWORD PTR [ebp+0x8]
  40292b:	xor    eax,ecx
  40292d:	add    eax,edx
  40292f:	cmp    DWORD PTR [esi+0x54],eax
  402932:	pop    esi
  402933:	je     0x402941
  402939:	mov    eax,DWORD PTR [ebp+0x8]
  40293c:	jmp    0x402948
  402941:	mov    eax,DWORD PTR [ebp-0x4]
  402944:	xor    eax,ecx
  402946:	add    eax,edx
  402948:	leave  
  402949:	ret    0x4
  40294c:	push   ebp
  40294d:	mov    ebp,esp
  40294f:	sub    esp,0x38
  402952:	xor    eax,eax
  402954:	xor    eax,DWORD PTR ds:0x42c00c
  40295a:	xor    DWORD PTR ds:0x42d010,eax
  402960:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  402967:	and    DWORD PTR ds:0x429020,0x0
  402971:	jmp    0x402981
  402976:	mov    eax,ds:0x429020
  40297b:	inc    eax
  40297c:	mov    ds:0x429020,eax
  402981:	cmp    DWORD PTR ds:0x429020,0x12
  402988:	jae    0x4029d7
  40298e:	cmp    DWORD PTR ds:0x429020,0x4
  402995:	jne    0x4029b5
  40299b:	push   0x3575
  4029a0:	push   0x2056
  4029a5:	push   0x7cad
  4029aa:	push   0x3741
  4029af:	call   DWORD PTR ds:0x42e8e7
  4029b5:	cmp    DWORD PTR ds:0x429020,0x3
  4029bc:	jne    0x4029d0
  4029c2:	xor    eax,eax
  4029c4:	add    eax,DWORD PTR ds:0x429020
  4029ca:	inc    eax
  4029cb:	mov    ds:0x429020,eax
  4029d0:	jmp    0x402976
  4029d5:	not    eax
  4029d7:	push   ebx
  4029d8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4029df:	mov    eax,DWORD PTR [ebp-0x4]
  4029e2:	add    DWORD PTR ds:0x42900c,0x42a018
  4029ec:	push   esi
  4029ed:	mov    esi,0x751089b
  4029f2:	xor    DWORD PTR ds:0x429018,0x429014
  4029fc:	xor    eax,esi
  4029fe:	sbb    DWORD PTR ds:0x42b000,0x77b
  402a08:	push   edi
  402a09:	mov    DWORD PTR ds:0x429018,0x1e
  402a13:	cmp    DWORD PTR ds:0x429018,0x0
  402a1a:	je     0x402a6e
  402a20:	cmp    DWORD PTR ds:0x429018,0xe
  402a27:	jne    0x402a42
  402a2d:	push   0x6dbc
  402a32:	push   0x42a004
  402a37:	push   0x657a
  402a3c:	call   DWORD PTR ds:0x42e8bf
  402a42:	cmp    DWORD PTR ds:0x429018,0xf
  402a49:	jne    0x402a5c
  402a4f:	mov    edi,DWORD PTR ds:0x429018
  402a55:	dec    edi
  402a56:	mov    DWORD PTR ds:0x429018,edi
  402a5c:	mov    edi,DWORD PTR ds:0x429018
  402a62:	dec    edi
  402a63:	mov    DWORD PTR ds:0x429018,edi
  402a69:	jmp    0x402a13
  402a6e:	mov    edi,0x3272e2
  402a73:	or     DWORD PTR ds:0x42a014,0x429014
  402a7d:	add    eax,edi
  402a7f:	adc    DWORD PTR ds:0x429008,0x42a018
  402a89:	mov    DWORD PTR [ebp-0x1c],eax
  402a8c:	movzx  eax,BYTE PTR ds:0x429010
  402a93:	xor    eax,DWORD PTR ds:0x42b00c
  402a99:	mov    ds:0x429010,eax
  402a9e:	mov    eax,DWORD PTR [ebp+0x14]
  402aa1:	test   eax,eax
  402aa3:	jmp    0x404df8
  402aa8:	retf   
  402aa9:	int    0x38
  402aab:	outs   dx,DWORD PTR ds:[esi]
  402aac:	cmp    cl,BYTE PTR [ebx-0x3abb3675]
  402ab2:	jae    0x402a43
  402ab4:	sbb    bh,BYTE PTR [edx+eiz*8+0x7c7c7c28]
  402abb:	jl     0x402af1
  402abd:	pop    edi
  402abe:	jl     0x402b3c
  402ac0:	adc    eax,0x1139172e
  402ac5:	and    eax,0x32652f13
  402aca:	popa   
  402acb:	pusha  
  402acc:	mul    DWORD PTR [esp+ebp*2+0x6c]
  402ad0:	ins    DWORD PTR es:[edi],dx
  402ad1:	xor    al,0xc5
  402ad3:	fdivp  st(1),st
  402ad5:	push   0x42
  402ad7:	arpl   WORD PTR [ecx+0x53],di
  402ada:	stos   BYTE PTR es:[edi],al
  402adb:	jp     0x402b4a
  402add:	push   ecx
  402ade:	iret   
  402adf:	pop    ebp
  402ae0:	dec    esp
  402ae1:	cmp    cl,BYTE PTR [esi+0x577087fc]
  402ae7:	dec    ebp
  402ae8:	jg     0x402b21
  402aea:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402af0:	jmp    DWORD PTR cs:[eax-0x22]
  402af4:	cld    
  402af5:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402af9:	xor    ebp,ecx
  402afb:	mov    esp,0xd82b87ed
  402b00:	and    DWORD PTR [ecx],0xf
  402b03:	push   ecx
  402b04:	mov    ds:0x6df7c68c,eax
  402b09:	fld    QWORD PTR [esi]
  402b0b:	(bad)  
  402b0c:	or     ah,bh
  402b0e:	and    BYTE PTR [edx],dl
  402b10:	inc    edx
  402b11:	push   cs
  402b12:	and    BYTE PTR [ebx+0x62],ah
  402b15:	mov    cl,0xaf
  402b17:	sub    ebx,DWORD PTR [ecx+0x5]
  402b1a:	mov    al,ds:0x2341e1ff
  402b1f:	jbe    0x402b55
  402b21:	ret    0xf153
  402b24:	sbb    al,0xfc
  402b26:	jb     0x402ae1
  402b28:	jnp    0x402b07
  402b2a:	xchg   edx,eax
  402b2b:	pop    edi
  402b2c:	cmp    DWORD PTR [ecx+0x49841607],0xb
  402b33:	cwde   
  402b34:	ds je  0x402ac2
  402b37:	add    ebx,esp
  402b39:	sub    eax,0x4b368d54
  402b3e:	push   esi
  402b3f:	sti    
  402b40:	iret   
  402b41:	mov    WORD PTR [ecx],fs
  402b43:	or     edx,0x6982ceb7
  402b49:	out    0x45,al
  402b4b:	push   esp
  402b4c:	dec    esi
  402b4d:	push   cs
  402b4e:	cmp    BYTE PTR [ebx],cl
  402b50:	xor    BYTE PTR [ebx],bl
  402b52:	lods   eax,DWORD PTR ds:[esi]
  402b53:	inc    ebx
  402b54:	int3   
  402b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b56:	dec    edx
  402b57:	fiadd  DWORD PTR [esi]
  402b59:	push   eax
  402b5a:	std    
  402b5b:	push   esp
  402b5c:	push   eax
  402b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b5e:	icebp  
  402b5f:	bound  edi,QWORD PTR [edi+0x3f1e44f2]
  402b65:	jg     0x402bde
  402b67:	or     ah,dh
  402b69:	jmp    0xeb27:0xf1ac132e
  402b70:	xor    eax,0xaf4461a2
  402b75:	jmp    0x8f01:0x89bfa33
  402b7c:	adc    BYTE PTR [edx-0x16],ch
  402b7f:	ins    DWORD PTR es:[edi],dx
  402b80:	loope  0x402b61
  402b82:	adc    al,0x81
  402b84:	popf   
  402b85:	inc    esi
  402b86:	fisub  WORD PTR [ebx]
  402b88:	shr    BYTE PTR [ebx+0x3d534928],1
  402b8e:	test   DWORD PTR fs:[ebx],edx
  402b91:	mov    bh,0x42
  402b93:	mov    DWORD PTR [ecx+0x61c21875],ebx
  402b99:	ror    DWORD PTR [ebp-0x9],cl
  402b9c:	inc    ebp
  402b9d:	test   eax,0x60a9d622
  402ba2:	mov    ch,BYTE PTR [edx-0xd]
  402ba5:	push   ecx
  402ba6:	test   al,0xb9
  402ba8:	dec    eax
  402ba9:	xchg   esp,eax
  402baa:	and    BYTE PTR [ecx-0x531b08a2],0xf2
  402bb1:	or     eax,0xfd3ff7c6
  402bb6:	sti    
  402bb7:	or     eax,0x9979e3d5
  402bbc:	pop    edi
  402bbd:	pop    ss
  402bbe:	imul   ebp,DWORD PTR [edx-0x1ffbdbcb],0x23
  402bc5:	sbb    esi,DWORD PTR ds:0x8841df00
  402bcb:	push   eax
  402bcc:	fisubr DWORD PTR [ecx+0x12]
  402bcf:	mov    WORD PTR [eax-0x7c216fff],?
  402bd5:	sbb    bh,al
  402bd7:	rcr    BYTE PTR [edi],1
  402bd9:	sti    
  402bda:	outs   dx,BYTE PTR ds:[esi]
  402bdb:	cmp    DWORD PTR [ebx-0x5864d7cd],esi
  402be1:	add    eax,0xbca2ea2a
  402be6:	sub    al,0x54
  402be8:	mov    DWORD PTR [ebx-0x133c7502],edx
  402bee:	ficom  DWORD PTR [ebp-0x5b42925d]
  402bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf5:	mov    cl,0x74
  402bf7:	xor    BYTE PTR [ebx+esi*8+0x7e86f9ee],ah
  402bfe:	fldenv [edi-0x39]
  402c01:	push   esi
  402c02:	mov    dl,0x61
  402c04:	xchg   esi,eax
  402c05:	push   edi
  402c06:	or     al,0x3
  402c08:	jmp    0xba92:0x832e8aa
  402c0f:	(bad)  
  402c10:	jae    0x402c37
  402c12:	push   cs
  402c13:	test   BYTE PTR [edx],cl
  402c15:	push   ecx
  402c16:	stos   BYTE PTR es:[edi],al
  402c17:	sbb    BYTE PTR [edi-0x6],dl
  402c1a:	popf   
  402c1b:	pushf  
  402c1c:	sub    edi,DWORD PTR [edi-0x26e7aa10]
  402c22:	jp     0x402bf5
  402c24:	cmc    
  402c25:	ret    
  402c26:	fcomp  QWORD PTR [ebx+0x19567076]
  402c2c:	sub    DWORD PTR [edx+edx*8],eax
  402c2f:	add    DWORD PTR [edx-0x5d],edi
  402c32:	pop    ds
  402c33:	xchg   eax,esp
  402c35:	inc    ecx
  402c36:	outs   dx,BYTE PTR ds:[esi]
  402c37:	pop    ss
  402c38:	jnp    0x402bbd
  402c3a:	push   ebx
  402c3b:	call   FWORD PTR [ebp+0x56458987]
  402c41:	(bad)  
  402c42:	push   0xffffffbd
  402c44:	cdq    
  402c45:	mov    al,0xcc
  402c47:	jge    0x402bfe
  402c49:	stc    
  402c4a:	addr16 test ch,dl
  402c4d:	dec    esp
  402c4e:	mov    ebx,0x45b59a9f
  402c53:	sbb    eax,0x11115b76
  402c58:	adc    ecx,DWORD PTR [edx-0x65]
  402c5b:	pop    eax
  402c5c:	inc    ebp
  402c5d:	sti    
  402c5e:	cmp    ch,cl
  402c60:	inc    esi
  402c61:	jp     0x402cb0
  402c63:	dec    ebp
  402c64:	cmp    al,0x48
  402c67:	sub    al,0x74
  402c69:	pop    edi
  402c6a:	sbb    al,0x8b
  402c6c:	fld    TBYTE PTR [edi+0x15]
  402c6f:	aam    0xda
  402c71:	lea    ecx,[eax-0x1ceaa50]
  402c77:	sahf   
  402c78:	mov    al,0x88
  402c7a:	xor    bh,BYTE PTR [edx+eiz*2-0x41]
  402c7e:	xchg   ecx,eax
  402c7f:	into   
  402c80:	jmp    FWORD PTR [edi]
  402c82:	mov    al,ds:0xc807119f
  402c87:	mov    esi,0xddb3cb6a
  402c8c:	or     DWORD PTR [ecx-0x6d8e9bcc],esp
  402c92:	mov    dl,0x59
  402c94:	ins    BYTE PTR es:[edi],dx
  402c95:	pushf  
  402c96:	dec    esi
  402c97:	ss test al,0x8a
  402c9a:	fcom   st(3)
  402c9c:	out    dx,al
  402c9d:	adc    esp,esp
  402c9f:	sbb    DWORD PTR [esi-0x4fa28bdb],edx
  402ca5:	pushf  
  402ca6:	sahf   
  402ca7:	nop
  402ca8:	es pop edi
  402caa:	and    DWORD PTR [esi+ebx*4],0x5e66b141
  402cb1:	in     eax,0x6f
  402cb3:	jae    0x402d34
  402cb5:	(bad)  
  402cb6:	jbe    0x402ccc
  402cb8:	repz cli 
  402cba:	bound  esp,QWORD PTR [esi-0x3f]
  402cbd:	fimul  WORD PTR [ecx]
  402cbf:	out    0x3c,al
  402cc1:	daa    
  402cc2:	cmc    
  402cc3:	test   BYTE PTR [esi+0x32],bl
  402cc6:	int    0x79
  402cc8:	mov    dh,0x3c
  402cca:	popa   
  402ccb:	ret    0x41d2
  402cce:	push   esp
  402ccf:	into   
  402cd0:	(bad)  
  402cd1:	mov    bh,BYTE PTR [ebx+0x2f]
  402cd4:	shl    BYTE PTR [ebx],1
  402cd6:	lock loope 0x402d11
  402cd9:	mov    cl,0x72
  402cdb:	xor    eax,0x114bedb5
  402ce0:	jl     0x402d58
  402ce2:	add    DWORD PTR [ebp-0x53796016],esp
  402ce8:	fisttp WORD PTR [ecx+0x1117436d]
  402cee:	pusha  
  402cef:	mov    al,ds:0xbcc310e3
  402cf4:	mov    ecx,0x796e3683
  402cf9:	(bad)  
  402cfa:	stc    
  402cfb:	jmp    0x402d07
  402cfd:	jge    0x402cbf
  402cff:	stc    
  402d00:	out    dx,al
  402d01:	scas   eax,DWORD PTR es:[edi]
  402d02:	sub    BYTE PTR [edi+0x7ec6e27b],0xe8
  402d09:	mov    dh,0xb2
  402d0b:	scas   al,BYTE PTR es:[edi]
  402d0c:	arpl   ax,bp
  402d0e:	jl     0x402d7a
  402d10:	popa   
  402d11:	fwait
  402d12:	push   edx
  402d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d14:	cmc    
  402d15:	lea    edx,[esi]
  402d17:	in     al,0x5
  402d19:	sahf   
  402d1a:	mov    ds:0x2938c5e4,eax
  402d1f:	rol    DWORD PTR [ecx+esi*4],0xa7
  402d23:	and    bl,BYTE PTR [edi+ebp*8]
  402d26:	imul   ebx,DWORD PTR [edx],0x26
  402d29:	adc    ecx,ebp
  402d2b:	adc    edx,ebp
  402d2d:	jle    0x402d21
  402d2f:	xchg   esp,eax
  402d30:	jmp    0xeac4f3b5
  402d35:	in     eax,0xc8
  402d37:	push   0xbcbe0f27
  402d3c:	not    BYTE PTR [esi-0x2cd382be]
  402d42:	sub    DWORD PTR [ebx],0x4edc3563
  402d48:	pop    ss
  402d49:	dec    ebp
  402d4a:	mov    ch,0x4e
  402d4c:	jbe    0x402d8b
  402d4e:	inc    esi
  402d4f:	cmp    eax,ebp
  402d51:	out    dx,eax
  402d52:	mov    bh,0xf
  402d54:	in     eax,dx
  402d55:	test   eax,0x8b9cca7a
  402d5a:	fisttp QWORD PTR [edx-0x1f]
  402d5d:	xor    al,0x79
  402d5f:	mov    ch,0x49
  402d61:	les    edx,FWORD PTR [ebx+0x4834b70f]
  402d67:	arpl   WORD PTR [esi],dx
  402d69:	fld    QWORD PTR [edx-0x64e9b7a3]
  402d6f:	ficom  DWORD PTR [esp+ebp*1]
  402d72:	jecxz  0x402dab
  402d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d75:	nop
  402d76:	cli    
  402d77:	(bad)  
  402d78:	repz pop edi
  402d7a:	(bad)  
  402d7b:	rcl    dh,cl
  402d7d:	adc    ah,BYTE PTR [edx-0x291bbd63]
  402d83:	es add edx,ecx
  402d86:	repnz fst QWORD PTR [ebx]
  402d89:	and    ch,bh
  402d8b:	in     eax,dx
  402d8c:	arpl   WORD PTR [ebx+edi*8-0x87746c4],di
  402d93:	and    al,0xbd
  402d95:	cli    
  402d96:	mov    bh,0xc0
  402d98:	push   esp
  402d99:	(bad)  
  402d9a:	retf   0x7744
  402d9d:	call   0x8d51079b
  402da2:	(bad)  
  402da3:	jno    0x402e0b
  402da5:	xor    ah,bh
  402da7:	add    eax,0x273aeb40
  402dac:	(bad)  
  402dae:	scas   eax,DWORD PTR es:[edi]
  402daf:	imul   ebx,DWORD PTR [esi+0x2a],0x1e181db7
  402db6:	mov    ?,WORD PTR [ecx+0x595e44bc]
  402dbc:	inc    edx
  402dbd:	ds das 
  402dbf:	jb     0x402e3c
  402dc1:	and    DWORD PTR [esi+0x3848bbe2],edx
  402dc7:	jno    0x402da1
  402dc9:	int3   
  402dca:	outs   dx,BYTE PTR ds:[esi]
  402dcb:	sbb    dl,BYTE PTR [ecx]
  402dcd:	jge    0x402d88
  402dcf:	das    
  402dd0:	dec    ebp
  402dd1:	cmc    
  402dd2:	mov    eax,ds:0xa7d4c0c2
  402dd7:	mov    ebp,0x3e2b8c26
  402ddc:	pop    edi
  402ddd:	das    
  402dde:	fnstcw WORD PTR [ebx]
  402de0:	rcr    BYTE PTR [ecx-0x7f],1
  402de3:	dec    esi
  402de4:	retf   0xa149
  402de7:	ss call 0x2a52:0x1ac41127
  402def:	fucomp st(7)
  402df1:	int3   
  402df2:	mov    ebx,0x18dde9c6
  402df7:	retf   
  402df8:	pop    esi
  402df9:	adc    BYTE PTR [eax+0x67],ah
  402dfc:	adc    DWORD PTR [ebx-0x28],esp
  402dff:	adc    ebx,DWORD PTR [edx]
  402e01:	(bad)  
  402e02:	push   edi
  402e03:	(bad)  
  402e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e05:	pusha  
  402e06:	adc    eax,DWORD PTR [esi]
  402e08:	mov    bl,0x31
  402e0a:	add    eax,DWORD PTR [edx-0x50]
  402e0d:	adc    eax,0x609a7af6
  402e12:	lods   al,BYTE PTR ds:[esi]
  402e13:	mov    ebp,0xe32def3c
  402e18:	mov    ebp,0xbc88d5b9
  402e1d:	std    
  402e1e:	jno    0x402df7
  402e20:	stos   DWORD PTR es:[edi],eax
  402e21:	imul   ebx,DWORD PTR [ebp+0x75e8f8e1],0xfb1ebe54
  402e2b:	imul   edx,DWORD PTR [edi+0x2c],0x289d8dda
  402e32:	or     eax,0xf555c2a1
  402e37:	mov    edi,0x2d856874
  402e3c:	in     al,dx
  402e3d:	push   ebx
  402e3e:	popf   
  402e3f:	xchg   ebp,eax
  402e40:	cld    
  402e41:	(bad)  
  402e42:	imul   edx,eax,0x8242d0cc
  402e48:	test   eax,0xf80ee865
  402e4d:	lock test DWORD PTR ss:[esi-0x3f],esi
  402e52:	sbb    al,0xc0
  402e54:	mov    edi,0xa7ccf37b
  402e59:	dec    esi
  402e5a:	popa   
  402e5b:	and    al,0x20
  402e5d:	fidiv  WORD PTR fs:0x4c630fb7
  402e64:	sahf   
  402e65:	adc    dl,ah
  402e67:	jmp    0x402e31
  402e69:	repz dec eax
  402e6b:	sub    DWORD PTR [esi-0x67],edi
  402e6e:	jmp    0x402e01
  402e70:	xor    DWORD PTR [ebp+0x231eef2e],0xffffffb6
  402e77:	clc    
  402e78:	inc    edx
  402e79:	add    al,0xd2
  402e7b:	jl     0x402eeb
  402e7d:	ja     0x402e3a
  402e7f:	cld    
  402e80:	ret    0x8e78
  402e83:	mov    edi,0x8693dc34
  402e88:	int    0x8a
  402e8a:	pop    eax
  402e8b:	(bad)  [edi]
  402e8d:	das    
  402e8e:	imul   ecx,DWORD PTR [edx-0x12],0xfffffff8
  402e92:	sub    eax,0xe672af86
  402e97:	xchg   ebp,eax
  402e98:	mov    ecx,0x51a2b641
  402e9d:	cmp    DWORD PTR [ecx],esi
  402e9f:	sbb    DWORD PTR [edi-0x75f3e7b6],esp
  402ea5:	(bad)  [esi]
  402ea7:	jnp    0x402f1f
  402ea9:	aad    0x4e
  402eab:	mov    ebx,0x47e1da5f
  402eb0:	inc    eax
  402eb1:	add    bl,ch
  402eb3:	int3   
  402eb4:	dec    ebp
  402eb5:	xchg   BYTE PTR [edi+0xb],ah
  402eb8:	call   0xaa8a:0xa7dbf7d7
  402ebf:	(bad)  
  402ec0:	or     eax,0x49faac
  402ec5:	loope  0x402e9c
  402ec7:	mov    esi,0x82c10e28
  402ecc:	mov    BYTE PTR [edi-0x132c7a8e],bh
  402ed2:	mov    esp,0x92d7d4fb
  402ed7:	outs   dx,BYTE PTR ds:[esi]
  402ed8:	mov    dh,0x3
  402eda:	inc    ebx
  402edb:	hlt    
  402edc:	shl    DWORD PTR [ecx+0x3e95acdf],0x4c
  402ee3:	fild   DWORD PTR [edi+0x59]
  402ee6:	push   es
  402ee7:	loopne 0x402ec4
  402ee9:	push   cs
  402eea:	push   es
  402eeb:	(bad)  
  402eec:	out    dx,al
  402eed:	sub    ebx,DWORD PTR [edx-0x1976e50e]
  402ef3:	push   ebx
  402ef4:	out    dx,eax
  402ef5:	idiv   DWORD PTR [eax+0x57]
  402ef8:	fld    TBYTE PTR [ebx+0x2]
  402efb:	pop    ss
  402efc:	pop    eax
  402efd:	ror    dl,cl
  402eff:	fbstp  TBYTE PTR [ebp-0x583933b9]
  402f05:	mov    eax,ds:0xaa313538
  402f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f0b:	and    bh,BYTE PTR [edx]
  402f0d:	dec    ebx
  402f0e:	(bad)  
  402f0f:	fisub  WORD PTR [ebx+0xe]
  402f12:	cmp    DWORD PTR [ecx],ecx
  402f14:	adc    ebx,DWORD PTR [edx]
  402f16:	sbb    al,0x42
  402f18:	bound  eax,QWORD PTR [edi+ecx*8]
  402f1b:	mov    al,0x2d
  402f1d:	fimul  DWORD PTR [ebx-0x57d1bc80]
  402f23:	push   ecx
  402f24:	sbb    al,0x23
  402f26:	in     eax,0xf
  402f28:	loop   0x402f55
  402f2a:	aad    0xa7
  402f2c:	call   0xad32644c
  402f31:	sbb    al,0x80
  402f33:	push   esi
  402f34:	jo     0x402f61
  402f36:	popf   
  402f37:	xor    BYTE PTR [ecx-0x29ae8a10],0x22
  402f3e:	inc    edi
  402f3f:	retf   0xa2ee
  402f42:	or     eax,0x4ce54805
  402f47:	imul   ebx,DWORD PTR [esi+0x51],0x4c7bb8f1
  402f4e:	(bad)  
  402f4f:	(bad)  
  402f51:	cld    
  402f52:	cli    
  402f53:	repnz xor DWORD PTR [eax],0xfffffffc
  402f57:	mov    bl,0xb6
  402f59:	add    ch,bh
  402f5b:	sub    BYTE PTR [edx+0x35],ah
  402f5e:	arpl   WORD PTR ds:0xc4e979f,bx
  402f64:	js     0x402fd6
  402f66:	push   cs
  402f67:	(bad)  
  402f68:	mov    ds:0xacc8e087,eax
  402f6d:	pop    ecx
  402f6e:	pand   mm6,QWORD PTR [eax]
  402f71:	pushf  
  402f72:	out    dx,eax
  402f73:	inc    esi
  402f74:	mov    ah,0x4f
  402f76:	mov    ds:0x9c605233,eax
  402f7b:	ret    
  402f7c:	jge    0x402f45
  402f7e:	nop
  402f7f:	push   edi
  402f80:	stos   BYTE PTR es:[edi],al
  402f81:	add    al,0x85
  402f83:	xor    edi,DWORD PTR [esi]
  402f85:	adc    edx,DWORD PTR [esi-0x79]
  402f88:	sbb    bl,BYTE PTR [esi-0x2b1e4fa7]
  402f8e:	retf   
  402f8f:	inc    esi
  402f90:	imul   ecx,DWORD PTR [ecx-0x6517c1de],0x6884f5dc
  402f9a:	cmc    
  402f9b:	sbb    DWORD PTR [ecx+0x384a4f2e],ebp
  402fa1:	sti    
  402fa2:	mov    gs,edi
  402fa4:	lea    edx,[ebx-0x14ee9aab]
  402faa:	pop    ebx
  402fab:	hlt    
  402fac:	mov    edx,0x4afb5657
  402fb1:	add    al,BYTE PTR [esi-0x53]
  402fb4:	popa   
  402fb5:	sti    
  402fb6:	and    al,0x78
  402fb8:	retf   0xd917
  402fbb:	sbb    bl,bh
  402fbd:	push   ds
  402fbe:	neg    DWORD PTR [edi]
  402fc0:	je     0x403041
  402fc2:	test   eax,0x9709038e
  402fc7:	sbb    DWORD PTR [ecx+0x17672185],ebx
  402fcd:	aad    0x16
  402fcf:	cwde   
  402fd0:	call   0xd655:0x6213d4d2
  402fd7:	mov    eax,0xa6f7f8e7
  402fdc:	ret    
  402fdd:	jbe    0x402fe3
  402fdf:	les    ebx,FWORD PTR ds:0x7bb4615e
  402fe5:	dec    ebx
  402fe6:	mov    ebp,0xfd0c8f56
  402feb:	rcl    BYTE PTR [ebp+0x55],1
  402fee:	jg     0x403053
  402ff0:	pop    esp
  402ff1:	jno    0x402ff5
  402ff3:	add    BYTE PTR [esi+0x41],cl
  402ff6:	pop    ebp
  402ff7:	popa   
  402ff8:	stc    
  402ff9:	test   BYTE PTR [eax+0x1f],bl
  402ffc:	mov    esp,0x16c3e3f2
  403001:	mov    esi,ds
  403003:	sub    al,BYTE PTR [edx+eiz*8]
  403006:	fidivr WORD PTR [ecx+edx*4-0x74]
  40300a:	push   ebx
  40300b:	cmp    ebp,ecx
  40300d:	in     al,0x39
  40300f:	in     al,0xe7
  403011:	jbe    0x402fc0
  403013:	inc    ecx
  403014:	inc    edx
  403015:	and    eax,0xbbf06d7d
  40301a:	push   ebp
  40301b:	jmp    0x5dbfd624
  403020:	imul   ecx,DWORD PTR [ecx-0x2c],0x37498e38
  403027:	mov    ebp,0x964d6431
  40302c:	pusha  
  40302d:	mov    ah,0x3d
  40302f:	pop    ss
  403030:	inc    ecx
  403031:	jl     0x40305e
  403033:	cmp    al,0x80
  403035:	jae    0x402ff0
  403037:	inc    esp
  403038:	add    eax,0x348eafb1
  40303d:	or     cl,bh
  40303f:	xor    BYTE PTR [esi],ch
  403041:	lea    edi,[esi+0x2e595f29]
  403047:	mov    ebp,ebx
  403049:	imul   esp,esp,0x2594a68f
  40304f:	or     al,0x12
  403051:	add    eax,0xbf24c2bc
  403056:	cmp    BYTE PTR [ebp-0x99bbb9c],0xf4
  40305d:	ja     0x4030d2
  40305f:	scas   eax,DWORD PTR es:[edi]
  403060:	jle    0x403038
  403062:	cmp    BYTE PTR [esp+esi*1-0x6e],al
  403066:	sub    BYTE PTR [edi+0x18],bl
  403069:	cmp    eax,0xfc93a159
  40306e:	jle    0x4030ce
  403070:	outs   dx,BYTE PTR ds:[esi]
  403071:	jge    0x40309e
  403073:	fwait
  403074:	and    al,BYTE PTR [eax+0x60]
  403077:	(bad)  
  403078:	cmp    DWORD PTR [esi],esp
  40307a:	mov    dh,0x18
  40307c:	mov    ds:0x1ec83fb8,al
  403081:	sub    DWORD PTR [ecx+eiz*8],esi
  403084:	dec    ecx
  403085:	pop    ss
  403086:	jae    0x4030ba
  403088:	sbb    al,0x3d
  40308a:	retf   
  40308b:	xor    DWORD PTR [ecx],0xfaa4caa7
  403091:	mov    ds:0x3c720321,al
  403096:	int    0xc7
  403098:	jno    0x40302b
  40309a:	lahf   
  40309b:	dec    ecx
  40309c:	leave  
  40309d:	cmp    DWORD PTR fs:[edx+eax*4-0x63d8f190],esp
  4030a5:	int3   
  4030a6:	adc    eax,0xd47e326a
  4030ab:	pop    edi
  4030ac:	push   es
  4030ad:	test   al,0xe6
  4030af:	sahf   
  4030b0:	xchg   ecx,ecx
  4030b2:	int    0x7
  4030b4:	fwait
  4030b5:	sub    edi,DWORD PTR [ebx-0x4]
  4030b8:	dec    ecx
  4030b9:	cmp    ecx,DWORD PTR [esi]
  4030bb:	pop    ss
  4030bc:	pop    eax
  4030bd:	pop    es
  4030be:	pop    ebp
  4030bf:	mov    ebx,0xef07e12e
  4030c4:	add    ch,BYTE PTR [ecx]
  4030c6:	push   ebx
  4030c7:	test   DWORD PTR [esi+ebp*8-0x4d],edi
  4030cb:	mov    cl,dh
  4030cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ce:	xor    al,0xfc
  4030d0:	les    eax,FWORD PTR [edx+0x8ae63f8]
  4030d6:	rcr    DWORD PTR [esi+0x7e8015d3],1
  4030dc:	mov    bl,0x6a
  4030de:	jno    0x40312d
  4030e0:	dec    DWORD PTR [esi+eax*2+0x6559969b]
  4030e7:	dec    edi
  4030e8:	or     ch,ah
  4030ea:	sub    DWORD PTR [eax-0x1e],0x26473415
  4030f1:	mov    bl,0x3a
  4030f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030f4:	stos   BYTE PTR es:[edi],al
  4030f5:	sub    eax,0xde6d3a11
  4030fa:	fild   DWORD PTR [edx]
  4030fc:	shl    BYTE PTR [ebx-0x4d6d7740],0x40
  403103:	mov    edx,0x238db2c3
  403108:	inc    esp
  403109:	je     0x4030a6
  40310b:	inc    edx
  40310c:	fisubr WORD PTR [ebp-0x5c]
  40310f:	stos   BYTE PTR es:[edi],al
  403110:	test   BYTE PTR [edi],dl
  403112:	or     BYTE PTR [edi+0x3fa89c4d],dh
  403118:	mov    edx,0xca8e3f94
  40311d:	adc    eax,0x3d6a6e7a
  403122:	xchg   ebp,eax
  403123:	dec    edx
  403124:	imul   edi,DWORD PTR [edi],0xffffffb9
  403127:	lds    esp,FWORD PTR [esi]
  403129:	icebp  
  40312a:	sbb    DWORD PTR [esi+0x12522054],edx
  403130:	adc    edi,edx
  403132:	add    esi,edi
  403134:	or     eax,0x8e6bbd0d
  403139:	mov    bl,cl
  40313b:	pop    esi
  40313c:	test   DWORD PTR [eax],edx
  40313e:	dec    edi
  40313f:	xor    eax,0x6faf4669
  403144:	adc    BYTE PTR [ecx-0x61],ch
  403147:	push   edi
  403148:	inc    esi
  403149:	push   ds
  40314a:	dec    ecx
  40314b:	push   eax
  40314c:	mov    dh,0xd4
  40314e:	inc    edi
  40314f:	int    0xb2
  403151:	mov    eax,ds:0x47f09ad3
  403156:	adc    ch,BYTE PTR [ebx+0x47206d1]
  40315c:	and    DWORD PTR [ebp+0x6f538fbc],ebx
  403162:	nop
  403163:	sti    
  403164:	add    al,0x73
  403166:	out    dx,eax
  403167:	adc    DWORD PTR ds:0x37b88dee,0x1689c37d
  403171:	imul   esi,DWORD PTR [eax+0x21],0xffffffac
  403175:	jle    0x403176
  403177:	shr    bh,0x2b
  40317a:	mov    bx,0x5b8e
  40317e:	lds    ecx,FWORD PTR [esi+0x68]
  403181:	and    DWORD PTR [ebx+0x1337f06e],edi
  403187:	rcl    DWORD PTR [edi],1
  403189:	jmp    0x4031b0
  40318b:	and    DWORD PTR [esi],edx
  40318d:	dec    esp
  40318e:	mov    ss,WORD PTR [esp+ebx*4+0x31dbb2be]
  403195:	push   ecx
  403196:	push   esp
  403197:	stos   BYTE PTR es:[edi],al
  403198:	push   ebx
  403199:	rol    ebp,1
  40319b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40319d:	jp     0x403216
  40319f:	lds    edi,FWORD PTR [edx]
  4031a1:	cwde   
  4031a2:	addr16 pop edx
  4031a4:	xchg   BYTE PTR [ecx+0x35],al
  4031a7:	xor    eax,0x7abd80a7
  4031ac:	das    
  4031ad:	fild   QWORD PTR [ebp-0x2d]
  4031b0:	adc    eax,DWORD PTR [ebx+0x3009ac90]
  4031b6:	inc    edx
  4031b7:	push   ss
  4031b8:	inc    esp
  4031b9:	js     0x4031f0
  4031bb:	and    DWORD PTR [ebx],ecx
  4031bd:	in     eax,0x66
  4031bf:	mov    ecx,0x1931f3a1
  4031c4:	sbb    eax,0xeccca2ad
  4031c9:	sbb    al,0x20
  4031cb:	pop    ecx
  4031cc:	(bad)  
  4031cd:	jl     0x40319d
  4031cf:	(bad)
  4031d2:	clc    
  4031d3:	mov    eax,0x59af9a41
  4031d8:	mov    ch,0x24
  4031da:	jmp    0x59cd:0x25d48e
  4031e1:	ds loopne 0x403259
  4031e4:	repnz xor BYTE PTR [esi],dl
  4031e7:	and    ebx,esi
  4031e9:	adc    BYTE PTR [edx-0x21c3c2f2],0xec
  4031f0:	fiadd  DWORD PTR ds:0xa21dbb48
  4031f6:	outs   dx,BYTE PTR ds:[esi]
  4031f7:	mov    ds:0xb8e7d04a,eax
  4031fc:	cmp    BYTE PTR ds:0x5b53ee94,bh
  403202:	push   es
  403203:	stc    
  403204:	aaa    
  403205:	ret    0x55e
  403208:	icebp  
  403209:	aas    
  40320a:	dec    eax
  40320b:	loopne 0x40325a
  40320d:	int    0x7e
  40320f:	or     bh,BYTE PTR [esi-0x72644516]
  403215:	mov    bh,0x53
  403217:	ret    0x1b46
  40321a:	retf   0x9150
  40321d:	mov    dh,bh
  40321f:	pop    edi
  403220:	adc    ebx,ebp
  403222:	sub    al,0xd2
  403224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403225:	adc    BYTE PTR [esi+esi*4+0x424d24a1],bl
  40322c:	adc    eax,0xa861c2ff
  403231:	and    BYTE PTR [eax+0x1f29f463],dl
  403237:	and    ch,BYTE PTR [ebx-0x52]
  40323a:	or     eax,0x88375dce
  40323f:	dec    ecx
  403240:	test   al,bh
  403242:	pop    ebx
  403243:	jb     0x4031e2
  403245:	and    BYTE PTR [eax],ch
  403247:	mov    ecx,0xade6b662
  40324c:	push   es
  40324d:	fwait
  40324e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40324f:	cdq    
  403250:	mul    esi
  403252:	and    eax,0xd5d4b6b7
  403257:	mov    ecx,0xdb126b15
  40325c:	div    ch
  40325e:	mov    ch,0x81
  403260:	mov    bl,0x7e
  403262:	inc    edi
  403263:	xor    bl,ah
  403265:	ss aaa 
  403267:	dec    ecx
  403268:	mov    edi,0x63a6a5b6
  40326d:	loopne 0x4032cc
  40326f:	test   al,0xfe
  403271:	leave  
  403272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403273:	adc    BYTE PTR [edx+0x44],0x73
  403277:	xchg   ebx,eax
  403278:	cmp    al,BYTE PTR es:[edi-0x32e9cedb]
  40327f:	cmp    al,0x77
  403281:	das    
  403282:	enter  0x394,0xd9
  403286:	push   esp
  403287:	or     al,0x4a
  403289:	stos   DWORD PTR es:[edi],eax
  40328a:	pop    ss
  40328b:	fcomp  QWORD PTR [ebx]
  40328d:	neg    edi
  40328f:	dec    edi
  403290:	fisubr WORD PTR [ecx-0x6ec703f6]
  403296:	fsub   st,st(3)
  403298:	pop    edx
  403299:	scas   al,BYTE PTR es:[edi]
  40329a:	adc    esi,DWORD PTR ds:0x95a349c7
  4032a0:	clc    
  4032a1:	jle    0x403292
  4032a3:	or     eax,0xf960ea8b
  4032a8:	sbb    eax,0x8a0ea5fc
  4032ad:	mov    edx,0x3c18fd73
  4032b2:	xchg   ebx,eax
  4032b3:	gs jle 0x4032f3
  4032b6:	inc    ebp
  4032b7:	(bad)  
  4032b8:	out    dx,al
  4032b9:	std    
  4032ba:	jl     0x40325b
  4032bc:	addr16 test eax,0x6c7b8ca3
  4032c2:	pop    esi
  4032c3:	push   esi
  4032c4:	add    ebp,edi
  4032c6:	sub    al,0x11
  4032c8:	gs push cs
  4032ca:	scas   eax,DWORD PTR es:[edi]
  4032cb:	aaa    
  4032cc:	(bad)  
  4032cd:	mov    ebx,0x3df5264e
  4032d2:	fidiv  WORD PTR [esi-0x7d53d056]
  4032d8:	aaa    
  4032d9:	dec    esi
  4032da:	popa   
  4032db:	and    BYTE PTR [esi],bl
  4032dd:	or     eax,0x35640354
  4032e2:	push   eax
  4032e3:	sbb    BYTE PTR ds:[ebp+0x5b],0xf1
  4032e8:	les    ebp,FWORD PTR [ebp+0x6c69da99]
  4032ee:	sar    BYTE PTR [ebp+0x12e64e34],cl
  4032f4:	in     eax,dx
  4032f5:	push   esi
  4032f6:	push   es
  4032f7:	rcr    ebx,0x91
  4032fa:	mov    al,0xde
  4032fc:	scas   al,BYTE PTR es:[edi]
  4032fd:	cld    
  4032fe:	xacquire xchg BYTE PTR [edi-0x8],bh
  403302:	and    dh,BYTE PTR [esi]
  403304:	jbe    0x403352
  403306:	or     eax,0x8bf3694c
  40330b:	cmp    ah,ch
  40330d:	pop    esi
  40330e:	ja     0x40330d
  403310:	out    dx,eax
  403311:	lods   al,BYTE PTR ds:[esi]
  403312:	and    dh,BYTE PTR [edx]
  403314:	js     0x403383
  403316:	or     DWORD PTR [edi+0x1c504ac6],esp
  40331c:	and    bl,BYTE PTR [edi+0x3cf128f1]
  403322:	mov    edx,0x16fec998
  403328:	push   ds
  403329:	mov    BYTE PTR [ebx+0x284576d7],ch
  40332f:	sub    al,0x64
  403331:	test   dl,dh
  403333:	sub    eax,0xa6d1e2f2
  403338:	ja     0x403323
  40333a:	adc    dl,cl
  40333c:	mov    dh,ch
  40333e:	(bad)  [ebp+0x25]
  403341:	add    cl,BYTE PTR [edx-0x7c]
  403344:	sub    edx,DWORD PTR [eax+0x21]
  403347:	dec    ebx
  403348:	jb     0x403397
  40334a:	pop    esi
  40334b:	imul   eax,DWORD PTR [edx-0x4b391fba],0xdecbe2d5
  403355:	jbe    0x403326
  403357:	jno    0x403308
  403359:	xlat   BYTE PTR ds:[ebx]
  40335a:	retf   
  40335b:	dec    eax
  40335c:	fidiv  DWORD PTR [eax+eax*4+0x142933de]
  403364:	inc    esi
  403365:	test   eax,0xedf2117e
  40336a:	rcr    BYTE PTR [eax+0x5f],1
  40336d:	mov    DWORD PTR [ecx+ebp*4+0x146e8779],ebx
  403374:	(bad)  
  403375:	retf   0xb5f
  403378:	and    al,0x7
  40337a:	inc    edi
  40337b:	dec    esp
  40337c:	cmc    
  40337d:	das    
  40337e:	lea    ebx,[ecx+esi*8-0x6b365a2f]
  403385:	xchg   BYTE PTR [esi],bh
  403387:	inc    eax
  403388:	adc    eax,0x2d41ff2c
  40338d:	popf   
  40338e:	xor    al,0x23
  403390:	add    edx,DWORD PTR [ebp-0x55]
  403393:	mov    ds:0x8c9b4316,eax
  403398:	fsub   QWORD PTR [ecx]
  40339a:	sar    DWORD PTR [eax+eiz*2-0x43],0x4f
  40339f:	fadd   st(4),st
  4033a1:	cmp    BYTE PTR [eax+0x7c2e9ee5],ah
  4033a7:	xor    DWORD PTR [ebp-0x6f],edi
  4033aa:	repnz sub al,ah
  4033ad:	dec    eax
  4033ae:	scas   al,BYTE PTR es:[edi]
  4033af:	sti    
  4033b0:	repnz lahf 
  4033b2:	test   eax,0xded1e71e
  4033b7:	dec    edx
  4033b8:	shl    BYTE PTR [ebp+0x41],0xec
  4033bc:	cmp    DWORD PTR [ecx-0x76],ebp
  4033bf:	mov    ds:0x8684aa3b,eax
  4033c4:	shl    ah,cl
  4033c6:	out    0xb5,al
  4033c8:	dec    BYTE PTR [esp]
  4033cb:	mov    ds:0xc67ba6a5,eax
  4033d0:	sbb    eax,0xdbc4bd8c
  4033d5:	stos   BYTE PTR es:[edi],al
  4033d6:	ret    0x6298
  4033d9:	test   al,0xf0
  4033db:	xlat   BYTE PTR ds:[ebx]
  4033dc:	arpl   WORD PTR [edx],di
  4033de:	xchg   ecx,eax
  4033df:	pop    es
  4033e0:	xchg   ebx,eax
  4033e1:	(bad)  
  4033e2:	jle    0x4033e7
  4033e4:	js     0x4033f9
  4033e6:	fdiv   QWORD PTR ds:0x95bd0142
  4033ec:	lds    ecx,FWORD PTR [edx-0x5a]
  4033ef:	scas   al,BYTE PTR es:[edi]
  4033f0:	xchg   esp,eax
  4033f1:	or     eax,0xb26fe76b
  4033f6:	push   cs
  4033f7:	mov    WORD PTR [ecx-0x18],ss
  4033fa:	rcl    BYTE PTR [edx+eax*1-0x41b106c1],cl
  403401:	outs   dx,BYTE PTR ds:[esi]
  403402:	pop    ecx
  403403:	outs   dx,BYTE PTR ds:[esi]
  403404:	(bad)  
  403405:	fisttp DWORD PTR [ecx+eax*8]
  403408:	or     DWORD PTR [edx+0x4c],ebx
  40340b:	(bad)  
  40340c:	adc    dh,BYTE PTR [ebp+0x6af22ed4]
  403412:	in     al,0x45
  403414:	mov    ch,0xb8
  403416:	imul   eax,DWORD PTR [edi-0x17],0xd3f3bf3
  40341d:	jne    0x4033e6
  40341f:	pop    ds
  403420:	pop    es
  403421:	pop    eax
  403422:	pop    ebp
  403423:	mov    ds:0x77c259bf,al
  403428:	push   ecx
  403429:	jmp    0x4033bb
  40342b:	pop    ss
  40342c:	ins    BYTE PTR es:[edi],dx
  40342d:	push   cs
  40342e:	mov    ebp,edi
  403430:	hlt    
  403431:	test   esi,0x39851edc
  403437:	xor    eax,0x25420adf
  40343c:	in     eax,0xcb
  40343e:	aad    0xf5
  403440:	es pop eax
  403442:	repnz ins DWORD PTR es:[edi],dx
  403444:	into   
  403445:	add    al,0x54
  403447:	xor    esp,ebx
  403449:	aad    0xfb
  40344b:	lds    edx,FWORD PTR [ebx+ebp*8+0x19]
  40344f:	xchg   esp,eax
  403450:	mov    ecx,?
  403452:	hlt    
  403453:	xchg   esp,eax
  403454:	mov    al,ds:0xd8f3ceb6
  403459:	and    al,0xf5
  40345b:	inc    esp
  40345c:	sub    BYTE PTR [edx+0x33],ch
  40345f:	(bad)  
  403460:	rcl    DWORD PTR [edi-0x4c7c571f],cl
  403466:	into   
  403467:	jbe    0x403434
  403469:	call   0x4e2fdc21
  40346e:	xchg   esi,eax
  40346f:	inc    esi
  403470:	mov    DWORD PTR [esi+0x63],edx
  403473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403474:	push   eax
  403475:	call   0x7c632ace
  40347a:	shr    edi,1
  40347c:	push   es
  40347d:	outs   dx,DWORD PTR ds:[esi]
  40347e:	out    0x16,al
  403480:	in     eax,dx
  403481:	xchg   edi,eax
  403482:	jnp    0x403439
  403484:	inc    edi
  403485:	stc    
  403486:	inc    ebx
  403487:	ins    DWORD PTR es:[edi],dx
  403488:	sub    ecx,DWORD PTR [edi-0x10]
  40348b:	jecxz  0x4034d5
  40348d:	stc    
  40348e:	sar    BYTE PTR [ebx+0x44],0xf9
  403492:	addr16 rcr esp,1
  403495:	ret    0xd4bc
  403498:	add    eax,0xf46022d
  40349d:	jecxz  0x403482
  40349f:	dec    eax
  4034a0:	xchg   ecx,esi
  4034a2:	xchg   ebp,eax
  4034a3:	imul   esi,DWORD PTR [eax],0xdf682a03
  4034a9:	inc    ebx
  4034aa:	push   ebp
  4034ab:	inc    edi
  4034ac:	pop    ebx
  4034ad:	push   cs
  4034ae:	data16 aas 
  4034b0:	imul   BYTE PTR [edx]
  4034b2:	daa    
  4034b3:	std    
  4034b4:	adc    bl,BYTE PTR [eax+0x9bb00c6]
  4034ba:	cmp    eax,DWORD PTR [eax]
  4034bc:	aas    
  4034bd:	inc    edx
  4034be:	or     dh,ah
  4034c0:	mov    dh,0xd5
  4034c2:	adc    BYTE PTR [edi+ecx*8],bl
  4034c5:	mov    al,ds:0x12d409a0
  4034ca:	test   eax,0x411331d
  4034cf:	sbb    al,0x0
  4034d1:	(bad)  
  4034d2:	mov    bh,0x32
  4034d4:	clc    
  4034d5:	(bad)  
  4034d6:	or     bl,dl
  4034d8:	ss int3 
  4034da:	call   0x1c3bf98a
  4034df:	jnp    0x403545
  4034e1:	das    
  4034e2:	mov    bl,0xb3
  4034e4:	out    dx,al
  4034e5:	pusha  
  4034e6:	xor    ebp,esp
  4034e8:	clc    
  4034e9:	dec    edx
  4034ea:	aam    0xa8
  4034ec:	push   edx
  4034ed:	sar    DWORD PTR [eax+0x65],1
  4034f0:	ja     0x4034e7
  4034f2:	mov    al,ds:0x9bce7f1e
  4034f7:	inc    ebp
  4034f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f9:	lods   eax,DWORD PTR ds:[esi]
  4034fa:	push   0x2b4f84b3
  4034ff:	je     0x403486
  403501:	popf   
  403502:	sahf   
  403503:	ret    0x9f0f
  403506:	lods   eax,DWORD PTR ds:[esi]
  403507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403508:	out    0x2,eax
  40350a:	push   ebp
  40350b:	(bad)  
  40350c:	aas    
  40350d:	in     eax,0xde
  40350f:	jle    0x403575
  403511:	push   edi
  403512:	xchg   edx,eax
  403513:	pop    edi
  403514:	pushf  
  403515:	adc    eax,0x4812447a
  40351a:	mov    esp,DWORD PTR [esi+0x6f]
  40351d:	dec    esp
  40351e:	in     eax,dx
  40351f:	pushf  
  403520:	lods   al,BYTE PTR ds:[esi]
  403521:	jno    0x4034ea
  403523:	cmp    eax,0x65a4623b
  403528:	sbb    BYTE PTR ds:0x24f734ff,ch
  40352e:	sbb    dl,BYTE PTR [edx]
  403530:	icebp  
  403531:	sub    cl,BYTE PTR [ebx-0x70755b9]
  403537:	cld    
  403538:	not    BYTE PTR [ebp-0x5f7ad0e4]
  40353e:	shl    DWORD PTR [ebp-0x2a295e28],0x2e
  403545:	lods   eax,DWORD PTR ds:[esi]
  403546:	cmp    bl,dh
  403548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403549:	aad    0xad
  40354b:	repnz stos DWORD PTR es:[edi],eax
  40354d:	inc    ebp
  40354e:	pop    esi
  40354f:	mov    dl,0xdc
  403551:	jo     0x40357b
  403553:	js     0x4034e0
  403555:	les    edi,FWORD PTR [edi-0xea53c6d]
  40355b:	ss jns 0x40352d
  40355e:	or     al,0x29
  403560:	ins    DWORD PTR es:[edi],dx
  403561:	mov    ah,0xc9
  403563:	inc    eax
  403564:	mov    edx,DWORD PTR [edi+0x7500d47c]
  40356a:	ins    DWORD PTR es:[edi],dx
  40356b:	jb     0x403570
  40356d:	in     al,dx
  40356e:	sti    
  40356f:	push   ecx
  403570:	das    
  403571:	cwde   
  403572:	frstor [edi+edx*1+0x4e5a7e3d]
  403579:	pop    ecx
  40357a:	arpl   WORD PTR [eax+0x4f907fb3],ax
  403580:	sbb    edi,DWORD PTR [ebx]
  403582:	push   0x9768d885
  403587:	add    DWORD PTR [ecx+ebx*4],0xe63034a5
  40358e:	jns    0x403601
  403590:	out    0x4b,al
  403592:	add    DWORD PTR [esi+edx*2-0x20],ecx
  403596:	mov    al,bh
  403598:	sub    eax,0x7114af8d
  40359d:	ficom  WORD PTR [ebx]
  40359f:	(bad)  
  4035a0:	call   0x9ba16905
  4035a5:	sbb    al,0x7a
  4035a7:	ins    DWORD PTR es:[edi],dx
  4035a8:	pop    esi
  4035a9:	and    al,bh
  4035ab:	mov    dl,0x69
  4035ad:	fiadd  DWORD PTR [eax-0x2d]
  4035b0:	loope  0x403606
  4035b2:	mov    bh,0x94
  4035b4:	std    
  4035b5:	mov    ds:0x3638c7aa,al
  4035ba:	jg     0x4035f5
  4035bc:	sti    
  4035bd:	in     al,0xc9
  4035bf:	out    dx,eax
  4035c0:	xchg   ebp,eax
  4035c1:	mov    eax,ds:0x76ea27d8
  4035c6:	xlat   BYTE PTR ds:[ebx]
  4035c7:	sbb    edx,0xed3785cb
  4035cd:	add    al,0xe4
  4035cf:	adc    al,0x1f
  4035d1:	inc    esi
  4035d2:	outs   dx,BYTE PTR ds:[esi]
  4035d3:	xor    DWORD PTR [eax+ebp*1-0x46],esi
  4035d7:	mov    ds:0xa15c0d5f,al
  4035dc:	sub    BYTE PTR [eax],al
  4035de:	xor    al,0xfb
  4035e0:	jecxz  0x403605
  4035e2:	xlat   BYTE PTR ds:[ebx]
  4035e3:	mov    ecx,0x33f7047b
  4035e8:	imul   ebx,DWORD PTR [esp+eiz*8+0x33],0xa836ec4b
  4035f0:	(bad)  
  4035f2:	and    ecx,DWORD PTR [edi]
  4035f4:	gs in  al,dx
  4035f6:	adc    DWORD PTR [ebp-0x7b9a9aec],0xcabc9e16
  403600:	add    al,0x6b
  403602:	ror    BYTE PTR [edx-0x7],cl
  403605:	cdq    
  403606:	xor    esi,DWORD PTR [esi+esi*8-0x7a85a0]
  40360d:	cmp    edi,DWORD PTR [edx+0x246b3c39]
  403613:	xor    ah,ch
  403615:	dec    esi
  403616:	xchg   ebp,eax
  403617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403618:	jne    0x403606
  40361a:	dec    eax
  40361b:	xor    dl,BYTE PTR [eax]
  40361d:	iret   
  40361e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40361f:	mov    cl,0x53
  403621:	or     al,0x8e
  403623:	mov    ebx,0x6a087b6a
  403628:	xchg   edx,eax
  403629:	scas   eax,DWORD PTR es:[edi]
  40362a:	mov    ds:0x646323c7,al
  40362f:	mov    BYTE PTR [ecx],bh
  403631:	int3   
  403632:	push   esp
  403633:	mov    esp,0xf34374f4
  403638:	loopne 0x40368c
  40363a:	xchg   ebx,eax
  40363b:	test   BYTE PTR [edi+0x48644e8c],dh
  403641:	into   
  403642:	mov    ecx,0xa6deead
  403647:	sub    al,0xf2
  403649:	fldenv [edx+0x682602b9]
  40364f:	xchg   esi,eax
  403650:	shl    BYTE PTR [eax-0x62],cl
  403653:	pop    esi
  403654:	add    eax,0xbd3ed951
  403659:	sbb    bh,BYTE PTR [edi+esi*4+0x56]
  40365d:	lds    edi,FWORD PTR [ebx-0x6f4b667b]
  403663:	push   0xffffffbc
  403665:	dec    ecx
  403666:	lock les esp,FWORD PTR [esi-0x5af3cc89]
  40366d:	(bad)  
  40366e:	jmp    0x5267:0xc3795af4
  403675:	xor    ah,BYTE PTR [ebp+esi*1+0x631db7ea]
  40367c:	xacquire xchg DWORD PTR [esp+eax*1-0x20e3edda],ebp
  403684:	cmp    al,0xb3
  403686:	sub    dl,BYTE PTR [esi-0x5]
  403689:	sub    DWORD PTR [eax+0x5],esp
  40368c:	mov    esi,0x8f59fd9a
  403691:	inc    esi
  403692:	gs loopne 0x40368a
  403695:	pop    ecx
  403696:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403697:	fimul  WORD PTR [eax-0x7c]
  40369a:	dec    edi
  40369b:	out    dx,eax
  40369c:	and    eax,0x7807a24a
  4036a1:	xor    BYTE PTR [eax],0x7
  4036a4:	test   DWORD PTR [edi-0x5b],ebx
  4036a7:	and    DWORD PTR [esp+ecx*1-0x7],ebp
  4036ab:	jb     0x40365c
  4036ad:	push   edx
  4036ae:	or     dh,BYTE PTR [edi-0x4a]
  4036b1:	nop
  4036b2:	xor    DWORD PTR [ebx-0x42ba1717],edi
  4036b8:	pop    ds
  4036b9:	xchg   edx,eax
  4036ba:	inc    esp
  4036bb:	arpl   WORD PTR [ecx],sp
  4036bd:	pop    eax
  4036be:	xor    BYTE PTR [edi-0xd],cl
  4036c1:	cmp    al,0x4
  4036c3:	cs jne 0x40367d
  4036c6:	fcomp  DWORD PTR [edx+0xe015066]
  4036cc:	fs or  al,0x60
  4036cf:	adc    al,0xf
  4036d1:	sub    BYTE PTR [ecx-0x13],dl
  4036d4:	cdq    
  4036d5:	mov    al,0x4b
  4036d7:	add    eax,0xfb7288b3
  4036dc:	cdq    
  4036dd:	inc    edi
  4036de:	cmp    eax,0xbf23e37d
  4036e3:	stos   BYTE PTR es:[edi],al
  4036e4:	ret    
  4036e5:	pop    ecx
  4036e6:	xchg   ebp,eax
  4036e7:	jg     0x40373b
  4036e9:	mov    ds,WORD PTR [ecx]
  4036eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036ec:	enter  0x82e,0xf
  4036f0:	jle    0x403756
  4036f2:	jno    0x403688
  4036f4:	rcpps  xmm6,XMMWORD PTR [ecx-0x55]
  4036f8:	adc    al,0x50
  4036fa:	out    dx,al
  4036fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fc:	inc    edx
  4036fd:	je     0x4036d7
  4036ff:	in     eax,0xb8
  403701:	xor    al,0x36
  403703:	cmp    DWORD PTR [edx+0x211e2f38],edi
  403709:	test   DWORD PTR [ebp+eiz*8-0x27],edx
  40370d:	push   esi
  40370e:	push   0xfffffffd
  403710:	stos   DWORD PTR es:[edi],eax
  403711:	jmp    0xa283aeac
  403716:	js     0x403729
  403718:	jmp    0xc85c:0x42e343aa
  40371f:	shr    DWORD PTR [ecx-0x49e3c120],1
  403725:	lea    edx,ds:0x9ba07935
  40372b:	stos   BYTE PTR es:[edi],al
  40372c:	aaa    
  40372d:	fdivr  DWORD PTR [ebp+0x7c]
  403730:	push   ebp
  403731:	xor    al,0x4f
  403733:	sub    eax,0x307bd940
  403738:	lods   eax,DWORD PTR ds:[esi]
  403739:	xor    BYTE PTR [ebx],dh
  40373b:	dec    esi
  40373c:	outs   dx,DWORD PTR ds:[esi]
  40373d:	lock xlat BYTE PTR ds:[ebx]
  40373f:	sub    BYTE PTR [ecx],ah
  403741:	xchg   DWORD PTR [ebx-0x5d],ebp
  403744:	test   esi,ebx
  403746:	mov    al,0x66
  403748:	dec    edi
  403749:	call   0xf6c6f9
  40374e:	pop    ebp
  40374f:	adc    eax,DWORD PTR [edx-0x38]
  403752:	popf   
  403753:	and    DWORD PTR [esi+0x16],esi
  403756:	pushf  
  403757:	mov    edi,0xb5d99c78
  40375c:	pop    esi
  40375d:	mov    dh,0x27
  40375f:	mov    cl,0x1a
  403761:	jbe    0x4037dd
  403763:	cmp    ecx,esp
  403765:	mov    bl,0xb8
  403767:	dec    BYTE PTR [ebx+0x532ddc5f]
  40376d:	jo     0x4037a2
  40376f:	repz sbb eax,0xc7374453
  403775:	adc    edi,DWORD PTR [ecx-0x78]
  403778:	leave  
  403779:	add    DWORD PTR [esi+0x16],ecx
  40377c:	pushf  
  40377d:	aam    0x27
  40377f:	call   0x7d437bb7
  403784:	jo     0x403715
  403786:	cmc    
  403787:	je     0x4037bc
  403789:	rcr    bh,cl
  40378b:	fisttp WORD PTR [esi-0x11044703]
  403791:	push   ecx
  403792:	fdiv   st,st(0)
  403794:	mov    eax,0xdf0122c3
  403799:	dec    edi
  40379a:	mov    cl,0xc
  40379c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40379d:	mov    bh,BYTE PTR [eax-0x5823c4a7]
  4037a3:	sub    DWORD PTR [ebp+0x43],edx
  4037a6:	push   0x7ac3f65d
  4037ab:	push   cs
  4037ac:	cmp    al,0x54
  4037ae:	pop    ebp
  4037af:	jno    0x40377f
  4037b1:	iret   
  4037b2:	jne    0x4037e0
  4037b4:	dec    esi
  4037b5:	inc    eax
  4037b6:	mov    dl,0xc3
  4037b8:	push   ebx
  4037b9:	xor    BYTE PTR [esi],cl
  4037bb:	or     dh,al
  4037bd:	sti    
  4037be:	mov    eax,0xb78fa2bc
  4037c3:	lea    ebp,[edi]
  4037c5:	jp     0x40376c
  4037c7:	and    ah,ah
  4037c9:	retf   
  4037ca:	pop    edx
  4037cb:	call   0xcc00580b
  4037d0:	mov    bh,0x8
  4037d2:	test   al,0x55
  4037d4:	lods   eax,DWORD PTR ds:[esi]
  4037d5:	jp     0x403765
  4037d7:	ss fldl2t 
  4037da:	xchg   esi,eax
  4037db:	mov    DWORD PTR [edi+0x10],edx
  4037de:	not    BYTE PTR [edi]
  4037e0:	lahf   
  4037e1:	mov    edx,0x4fc8405
  4037e6:	gs icebp 
  4037e8:	(bad)  
  4037e9:	mov    eax,ds:0xc5623fb7
  4037ee:	(bad)  
  4037f0:	pop    ss
  4037f1:	fdiv   QWORD PTR [edx+0x0]
  4037f4:	int3   
  4037f5:	jmp    0x6c5f:0xc1d03ecd
  4037fc:	loopne 0x4037a6
  4037fe:	mov    edi,0xe65bf3d0
  403803:	xchg   ecx,eax
  403804:	mov    eax,0xb06151e0
  403809:	jle    0x40385b
  40380b:	addr16 sbb esp,eax
  40380e:	adc    ch,BYTE PTR [eax-0xe2df840]
  403814:	mov    esp,0x64ada1cb
  403819:	pop    ss
  40381a:	push   ecx
  40381b:	pop    ebp
  40381c:	das    
  40381d:	sti    
  40381e:	push   0xfe63a187
  403823:	jp     0x403817
  403825:	sar    BYTE PTR [ebx+esi*8+0x27],cl
  403829:	inc    edx
  40382a:	push   0x12
  40382c:	mov    WORD PTR [edx],?
  40382e:	mov    dl,0xe5
  403830:	ror    DWORD PTR [eax+0x47d8b73c],0xab
  403837:	push   es
  403838:	jmp    0xac5f:0x65f8274f
  40383f:	pop    ebp
  403840:	lahf   
  403841:	xchg   ebx,eax
  403842:	sbb    eax,0x5aca3448
  403847:	dec    ebp
  403848:	sbb    eax,0xd4b4fff2
  40384d:	out    0x55,al
  40384f:	cmp    BYTE PTR [ebp-0x32],bl
  403852:	daa    
  403853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403854:	cmp    BYTE PTR [esi-0x64],bh
  403857:	adc    eax,0x5ca7ba5c
  40385c:	push   esp
  40385d:	add    eax,0xc16a9322
  403862:	dec    edi
  403863:	pop    eax
  403864:	test   al,0xd4
  403866:	leave  
  403867:	cmp    eax,0x3ddc1aaf
  40386c:	int    0x88
  40386e:	mov    bh,0xfc
  403870:	lds    eax,FWORD PTR [eax+0x3187fabc]
  403876:	fs ins BYTE PTR es:[edi],dx
  403878:	add    ebx,ebp
  40387a:	in     eax,0x4a
  40387c:	or     eax,0x3c585e3f
  403881:	sbb    DWORD PTR [edx],edx
  403883:	mov    edx,0x13472882
  403888:	ret    
  403889:	pushf  
  40388a:	inc    ebp
  40388b:	mov    ch,0xea
  40388d:	push   eax
  40388e:	sub    cl,cl
  403890:	cs or  ah,bl
  403893:	idiv   DWORD PTR [edi-0x1775b0f0]
  403899:	or     eax,0xc0d00eb5
  40389e:	push   0xc
  4038a0:	mov    al,ds:0x6c8cd22b
  4038a5:	shl    DWORD PTR [ebx+0x59b4c18e],1
  4038ab:	and    DWORD PTR [ebx+eiz*4-0xf518513],edx
  4038b2:	in     al,0x79
  4038b4:	cmc    
  4038b5:	or     al,0xb5
  4038b7:	push   ss
  4038b8:	push   eax
  4038b9:	xlat   BYTE PTR ds:[ebx]
  4038ba:	dec    esi
  4038bb:	adc    BYTE PTR [eax+0x22],bl
  4038be:	mov    al,0x67
  4038c0:	fld    TBYTE PTR [eax]
  4038c2:	hlt    
  4038c3:	or     eax,0xb37d4db3
  4038c8:	inc    edi
  4038c9:	push   edx
  4038ca:	cld    
  4038cb:	pop    ds
  4038cc:	xchg   esp,eax
  4038cd:	push   eax
  4038ce:	jne    0x403864
  4038d0:	stos   BYTE PTR es:[edi],al
  4038d1:	inc    esi
  4038d2:	xchg   esp,eax
  4038d3:	push   es
  4038d4:	jg     0x403904
  4038d6:	pop    esp
  4038d7:	sbb    esi,DWORD PTR [edx]
  4038d9:	adc    edx,esp
  4038db:	lea    eax,[eax]
  4038dd:	(bad)  
  4038de:	(bad)  
  4038df:	clc    
  4038e0:	test   al,0x14
  4038e2:	jb     0x40390e
  4038e4:	mov    esi,DWORD PTR [eax+0x47]
  4038e7:	push   eax
  4038e8:	adc    eax,0x192420bc
  4038ed:	repz adc DWORD PTR [edi+0x5b],ebx
  4038f1:	inc    ecx
  4038f2:	mov    ebp,0x15f9e67
  4038f7:	jns    0x403962
  4038f9:	and    bl,BYTE PTR ds:[eax-0x46ad6610]
  403900:	call   0x45f3f32f
  403905:	inc    ebp
  403906:	dec    esp
  403907:	cmp    DWORD PTR [esi],0xffffffd7
  40390a:	dec    eax
  40390b:	inc    ebx
  40390c:	xchg   ebx,eax
  40390d:	jmp    0x3934:0xf8fdaaa
  403914:	push   edx
  403915:	mov    eax,ds:0x34d23e73
  40391a:	mov    ebx,0xd7a10f95
  40391f:	pop    ebp
  403920:	push   ebx
  403921:	adc    esi,DWORD PTR [eax]
  403923:	(bad)  
  403924:	call   0x17229e9a
  403929:	loope  0x4038ab
  40392b:	sti    
  40392c:	push   esi
  40392d:	inc    edi
  40392e:	ftst   
  403930:	rol    bl,cl
  403932:	scas   al,BYTE PTR es:[edi]
  403933:	pop    esp
  403934:	sub    dh,BYTE PTR [edx]
  403936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403937:	cmp    DWORD PTR [edi],ecx
  403939:	ja     0x403904
  40393b:	ret    0x5437
  40393e:	and    ebx,DWORD PTR [ebp+eax*8-0x67b51cb7]
  403945:	popw   ds
  403947:	adc    eax,0x257ee61a
  40394c:	fmul   QWORD PTR [eax+0x10d8492c]
  403952:	repnz push ss
  403954:	pop    edi
  403955:	sbb    al,0x5d
  403957:	pop    ebp
  403958:	sbb    DWORD PTR [ecx+0x33],ebp
  40395b:	inc    edx
  40395c:	inc    edx
  40395d:	pop    esp
  40395e:	xchg   BYTE PTR es:[edx+esi*4-0x24],ah
  403963:	jnp    0x403984
  403965:	mov    ebx,0x1b9d5e5c
  40396a:	mov    al,0xf7
  40396c:	add    DWORD PTR [ebp+0x338db142],ebp
  403972:	sbb    dh,BYTE PTR [ecx+0x1e]
  403975:	add    al,0xa0
  403977:	shl    DWORD PTR [edx+0x4fb3ea93],cl
  40397d:	pop    ds
  40397e:	popf   
  40397f:	in     al,0x27
  403981:	(bad)  
  403982:	clc    
  403983:	cmp    eax,0xb5fee49c
  403988:	and    DWORD PTR [ebx],ebx
  40398a:	(bad)  
  40398b:	cmc    
  40398c:	sub    dl,ah
  40398e:	(bad)  
  40398f:	lds    eax,FWORD PTR [edi]
  403991:	sar    DWORD PTR [edi-0x77],0x32
  403995:	mov    ebp,0x87369fc1
  40399a:	xchg   BYTE PTR [edx],dh
  40399c:	mov    ah,0x1c
  40399e:	shl    DWORD PTR [eax-0x55e154ed],cl
  4039a4:	mov    ebp,0x757cd8dc
  4039a9:	or     al,0xdf
  4039ab:	adc    edx,DWORD PTR [edi]
  4039ad:	sbb    DWORD PTR [eax-0x32622ca8],esi
  4039b3:	inc    esi
  4039b4:	daa    
  4039b5:	fwait
  4039b6:	xchg   esp,eax
  4039b7:	test   eax,0x3832b012
  4039bc:	popf   
  4039bd:	sub    DWORD PTR [ebp-0x50],ebp
  4039c0:	and    ebx,esp
  4039c2:	les    esi,FWORD PTR [edi+ebp*2]
  4039c5:	aam    0xdc
  4039c7:	imul   edx,DWORD PTR [ecx+0x15703379],0x7084266d
  4039d1:	mov    ebx,esp
  4039d3:	std    
  4039d4:	pop    esi
  4039d5:	dec    ecx
  4039d6:	jno    0x4039f4
  4039d8:	sub    ch,BYTE PTR [eax]
  4039da:	inc    ebx
  4039db:	inc    edi
  4039dc:	adc    eax,0xc2dc9c3
  4039e1:	test   bh,dh
  4039e3:	(bad)  
  4039e5:	xchg   BYTE PTR [edx],cl
  4039e7:	fbstp  TBYTE PTR [edx]
  4039e9:	and    ah,dh
  4039eb:	loope  0x403a34
  4039ed:	push   cs
  4039ee:	sbb    BYTE PTR [ecx-0xe3229a8],dh
  4039f4:	xor    al,0xd1
  4039f6:	dec    ebx
  4039f7:	stos   DWORD PTR es:[edi],eax
  4039f8:	loope  0x4039ba
  4039fa:	xchg   ebp,eax
  4039fb:	inc    eax
  4039fc:	stos   BYTE PTR es:[edi],al
  4039fd:	shl    DWORD PTR [ebx+ebp*1+0x787e41e8],cl
  403a04:	xor    dh,BYTE PTR [ebx-0x2c]
  403a07:	sbb    dh,BYTE PTR [edi-0x4b22f0f7]
  403a0d:	call   FWORD PTR [edx-0x6258974c]
  403a13:	popa   
  403a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a15:	xchg   ecx,eax
  403a16:	xchg   esp,eax
  403a17:	jae    0x403a3c
  403a19:	jb     0x403a55
  403a1b:	jno    0x403a88
  403a1d:	xchg   esp,eax
  403a1e:	cdq    
  403a1f:	jo     0x403a06
  403a21:	repnz or edi,esp
  403a24:	dec    edx
  403a25:	dec    ebp
  403a26:	retf   0x5c86
  403a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2a:	(bad)  
  403a2c:	xor    ebp,edi
  403a2e:	fwait
  403a2f:	in     eax,0xcd
  403a31:	xor    eax,0x549916a1
  403a36:	cli    
  403a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a38:	xchg   esi,eax
  403a39:	pop    ds
  403a3a:	dec    esp
  403a3b:	sub    BYTE PTR [eax-0x24ebf162],0xb
  403a42:	fs inc edx
  403a44:	(bad)  
  403a45:	sbb    ebx,DWORD PTR [ebp+0x42]
  403a48:	sub    cl,BYTE PTR [eax-0x5662c7fc]
  403a4e:	int3   
  403a4f:	xchg   dh,cl
  403a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a52:	xor    al,0x39
  403a54:	mov    ch,0x58
  403a56:	mov    dh,0xbe
  403a58:	jmp    0x75d74d82
  403a5d:	mov    al,ds:0x96ef42ee
  403a62:	jo     0x403a0f
  403a64:	inc    ebp
  403a65:	in     al,dx
  403a66:	push   es
  403a67:	mov    al,ds:0x34928184
  403a6c:	sub    esi,ebx
  403a6e:	in     al,0xe1
  403a70:	and    DWORD PTR [eax],0x3b
  403a73:	ds mov dl,0x74
  403a76:	test   DWORD PTR [ebp+ebp*4-0x53714aa9],0x9f059b87
  403a81:	cmp    esp,DWORD PTR [edx+ebx*8+0x78]
  403a85:	adc    BYTE PTR ss:[ebp+0x28024bfa],ch
  403a8c:	push   ebx
  403a8d:	out    dx,al
  403a8e:	lahf   
  403a8f:	dec    ebx
  403a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a91:	cmp    ebx,eax
  403a93:	and    al,BYTE PTR [edi-0x7398390e]
  403a99:	sbb    al,ah
  403a9b:	inc    ebp
  403a9c:	push   ds
  403a9d:	pop    esi
  403a9e:	fbld   TBYTE PTR [eax]
  403aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aa1:	fwait
  403aa2:	cld    
  403aa3:	loop   0x403ad8
  403aa5:	or     DWORD PTR [esi],ebp
  403aa7:	popa   
  403aa8:	fcmovu st,st(1)
  403aaa:	push   ebx
  403aab:	ins    BYTE PTR es:[edi],dx
  403aac:	or     edx,ebp
  403aae:	sbb    cl,ch
  403ab0:	sub    eax,edx
  403ab2:	int3   
  403ab3:	pop    esp
  403ab4:	(bad)  
  403ab6:	jno    0x403a39
  403ab8:	in     eax,0xe0
  403aba:	mov    ebp,0x1b7790
  403abf:	in     eax,0xe3
  403ac1:	lock imul DWORD PTR [eax]
  403ac4:	push   edx
  403ac5:	ds mov ebx,0x1eb97f04
  403acb:	dec    ecx
  403acc:	push   edx
  403acd:	scas   eax,DWORD PTR es:[edi]
  403ace:	jae    0x403aea
  403ad0:	(bad)  
  403ad1:	lahf   
  403ad2:	xchg   cl,ch
  403ad4:	pop    es
  403ad5:	pusha  
  403ad6:	(bad)  
  403ad7:	cli    
  403ad8:	xchg   esi,eax
  403ad9:	jecxz  0x403ace
  403adb:	add    eax,0x84a35a36
  403ae0:	mov    ecx,0xd73a0835
  403ae5:	mov    cl,0x18
  403ae7:	retf   0xd425
  403aea:	or     bl,ch
  403aec:	scas   eax,DWORD PTR es:[edi]
  403aed:	jge    0x403b2a
  403aef:	scas   eax,DWORD PTR es:[edi]
  403af0:	jo     0x403a84
  403af2:	adc    edi,eax
  403af4:	dec    edi
  403af5:	in     al,0xaf
  403af7:	and    eax,0x96613afe
  403afc:	jne    0x403afd
  403afe:	sbb    ecx,DWORD PTR [ebp+0x40]
  403b01:	stos   DWORD PTR es:[edi],eax
  403b02:	ja     0x403b1d
  403b04:	mov    edi,DWORD PTR [ebx-0x1122f2ff]
  403b0a:	adc    ebp,edx
  403b0c:	add    eax,0xc3283bcd
  403b11:	sbb    esi,DWORD PTR [edi+0x3684080c]
  403b17:	dec    ecx
  403b18:	dec    ebx
  403b19:	enter  0x55c1,0xb4
  403b1d:	ror    ah,cl
  403b1f:	fsubr  QWORD PTR [ebx]
  403b21:	pop    es
  403b22:	sahf   
  403b23:	scas   eax,DWORD PTR es:[edi]
  403b24:	inc    esi
  403b25:	sar    al,0x6d
  403b28:	jecxz  0x403b79
  403b2a:	inc    edx
  403b2b:	cli    
  403b2c:	fadd   QWORD PTR [ebx+eax*2]
  403b2f:	lods   eax,DWORD PTR ds:[esi]
  403b30:	mov    gs,WORD PTR [esi]
  403b32:	mov    esp,0x39fbd880
  403b37:	loopne 0x403ace
  403b39:	test   DWORD PTR [eax+0x22726af2],ebp
  403b3f:	xchg   edx,eax
  403b40:	call   0xc7ac:0x49582987
  403b47:	and    al,0x12
  403b49:	mov    edi,DWORD PTR [edi+0x29]
  403b4c:	mov    esi,0x718ff0e8
  403b51:	push   eax
  403b52:	dec    edx
  403b53:	push   eax
  403b54:	nop
  403b55:	fisttp WORD PTR [eax]
  403b57:	aam    0x50
  403b59:	fdivr  QWORD PTR [ebp+0x40885ea9]
  403b5f:	call   0x7f0418a4
  403b64:	add    eax,0xebfec099
  403b69:	lock fwait
  403b6b:	lds    ebx,FWORD PTR [ecx+0x64effcc]
  403b71:	mov    edi,0x137f5569
  403b76:	mov    ds:0xda86d86e,al
  403b7b:	aad    0x52
  403b7d:	cmp    eax,0x4a443923
  403b82:	xor    BYTE PTR [ebp+0x414e92aa],cl
  403b88:	jae    0x403bcd
  403b8a:	fsqrt  
  403b8c:	xchg   esi,eax
  403b8d:	jl     0x403b3d
  403b8f:	pusha  
  403b90:	addr16 xchg cl,bh
  403b93:	add    al,0x2
  403b95:	dec    eax
  403b96:	and    DWORD PTR [edi+0x7b],edi
  403b99:	sub    dh,BYTE PTR [edx-0x2f]
  403b9c:	sub    dl,BYTE PTR ds:0x3cde172
  403ba2:	sub    DWORD PTR [edi],edx
  403ba4:	scas   eax,DWORD PTR es:[edi]
  403ba5:	std    
  403ba6:	mov    bh,0xf3
  403ba8:	ins    BYTE PTR es:[edi],dx
  403ba9:	mov    DWORD PTR [eax+0x74],esp
  403bac:	pop    esi
  403bad:	jno    0x403c17
  403baf:	mov    al,ds:0xd7ce646a
  403bb4:	jle    0x403ba3
  403bb6:	sbb    BYTE PTR gs:[edi+ecx*2+0x35],dl
  403bbb:	add    DWORD PTR [edx-0x2b89b21],esp
  403bc1:	les    ebx,FWORD PTR [edi-0x10b339a4]
  403bc7:	push   ebp
  403bc8:	icebp  
  403bc9:	add    eax,0xa1266a59
  403bce:	pop    ds
  403bcf:	ret    0x7fdd
  403bd2:	pop    edx
  403bd3:	dec    eax
  403bd4:	push   0xfffffff0
  403bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd7:	sbb    DWORD PTR [ebx],edi
  403bd9:	push   esi
  403bda:	add    ebp,eax
  403bdc:	jnp    0x403b6a
  403bde:	pop    esi
  403bdf:	pop    ss
  403be0:	mov    ebx,0x51d196dc
  403be5:	mov    dh,0xe7
  403be7:	call   0x5bfa:0x289c56ab
  403bee:	retf   
  403bef:	dec    edi
  403bf0:	jg     0x403be7
  403bf2:	in     eax,dx
  403bf3:	leave  
  403bf4:	xchg   ebp,eax
  403bf5:	fisttp QWORD PTR [edi+0x23]
  403bf8:	push   es
  403bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bfa:	xchg   esp,eax
  403bfb:	out    0xaf,eax
  403bfd:	ins    DWORD PTR es:[edi],dx
  403bfe:	xchg   ebp,eax
  403bff:	adc    eax,0xb80c1dfd
  403c04:	test   al,0xa9
  403c06:	mov    DWORD PTR [ecx-0x4d],edi
  403c09:	call   0xf646c459
  403c0e:	fsubr  DWORD PTR ds:0x9f50dc7b
  403c14:	repz push esi
  403c16:	mov    al,ds:0xaf3e51f
  403c1b:	add    al,0x4c
  403c1d:	dec    ebx
  403c1e:	dec    esp
  403c1f:	cld    
  403c20:	in     eax,dx
  403c21:	pop    esi
  403c22:	push   eax
  403c23:	jo     0x403c34
  403c25:	(bad)  
  403c26:	jg     0x403be1
  403c28:	or     ecx,ebp
  403c2a:	cdq    
  403c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c2c:	(bad)  
  403c2d:	sahf   
  403c2e:	out    0x61,eax
  403c30:	nop
  403c31:	jp     0x403c96
  403c33:	in     al,dx
  403c34:	(bad)  
  403c36:	push   es
  403c37:	sar    BYTE PTR [ebx-0x19],cl
  403c3a:	xor    al,0x71
  403c3c:	xor    cl,BYTE PTR [edi-0x3e2a06df]
  403c42:	test   BYTE PTR [eax-0x4e],ah
  403c45:	mov    eax,0x8b86c266
  403c4a:	stos   DWORD PTR es:[edi],eax
  403c4b:	pop    ebx
  403c4c:	(bad)  
  403c4d:	arpl   WORD PTR [eax+0x18564b3b],si
  403c53:	(bad)  
  403c54:	jnp    0x403c2e
  403c56:	jp     0x403ccd
  403c58:	add    eax,0x486a871e
  403c5d:	mov    esp,0xc6332cb6
  403c62:	cli    
  403c63:	sbb    eax,DWORD PTR [ebx-0x6e800c0d]
  403c69:	out    0xbd,eax
  403c6b:	aam    0xa0
  403c6d:	sub    bl,BYTE PTR [esi-0x39dfab9f]
  403c73:	cmp    eax,edx
  403c75:	jmp    0x26bef9ad
  403c7a:	mov    eax,0xda21f92a
  403c7f:	(bad)
  403c83:	sub    eax,0x21a8514d
  403c88:	lods   al,BYTE PTR ds:[esi]
  403c89:	sbb    eax,0x6d6d2db3
  403c8e:	rcr    BYTE PTR [eax+0x1fe7ebe6],1
  403c94:	dec    ebp
  403c95:	mov    ah,0x36
  403c97:	jae    0x403c9a
  403c99:	cmp    DWORD PTR [eax+edx*8-0x587098b0],0x7c
  403ca1:	call   0x30ec:0xce52db35
  403ca8:	loope  0x403d16
  403caa:	cmp    ah,dl
  403cac:	adc    BYTE PTR [ebx+0x42dd8b8b],ah
  403cb2:	into   
  403cb3:	ins    BYTE PTR es:[edi],dx
  403cb4:	xchg   edi,eax
  403cb5:	je     0x403cd3
  403cb7:	cdq    
  403cb8:	std    
  403cb9:	push   ds
  403cba:	cdq    
  403cbb:	outs   dx,BYTE PTR ds:[esi]
  403cbc:	jnp    0x403ccf
  403cbe:	push   ds
  403cbf:	adc    eax,0x209fbb57
  403cc4:	(bad)
  403cc8:	popa   
  403cc9:	jecxz  0x403c6d
  403ccb:	jmp    0xc926c7db
  403cd0:	pop    edx
  403cd1:	push   ss
  403cd2:	and    dl,BYTE PTR [edi]
  403cd4:	(bad)  
  403cd5:	fcmovnbe st,st(3)
  403cd7:	aad    0x6a
  403cd9:	xchg   DWORD PTR [eax],edi
  403cdb:	dec    esp
  403cdc:	inc    eax
  403cdd:	or     ah,BYTE PTR [ebx-0x244ae451]
  403ce3:	mov    dl,0x13
  403ce5:	jle    0x403d46
  403ce7:	dec    ecx
  403ce8:	jb     0x403c92
  403cea:	and    eax,0x15d6a78c
  403cef:	fwait
  403cf0:	xor    DWORD PTR [ebx],edx
  403cf2:	xchg   ch,ch
  403cf4:	push   edx
  403cf5:	nop
  403cf6:	loop   0x403c97
  403cf8:	(bad)  
  403cf9:	neg    ebp
  403cfb:	gs ja  0x403d75
  403cfe:	jnp    0x403d64
  403d00:	ins    DWORD PTR es:[edi],dx
  403d01:	lds    esi,FWORD PTR [eax]
  403d03:	dec    edx
  403d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d05:	jmp    0x668c:0x4bba15be
  403d0c:	retf   
  403d0d:	adc    eax,0x970007e0
  403d12:	push   edx
  403d13:	(bad)  
  403d14:	pop    edi
  403d15:	xchg   edx,eax
  403d16:	adc    eax,0x3c6920bc
  403d1b:	inc    ecx
  403d1c:	ja     0x403d66
  403d1e:	sbb    eax,0x7f18ec10
  403d23:	jb     0x403d25
  403d25:	test   bl,bl
  403d27:	inc    edi
  403d28:	xchg   DWORD PTR [ebx+0x3d],edi
  403d2b:	inc    eax
  403d2c:	mov    dl,dl
  403d2e:	stc    
  403d2f:	lods   al,BYTE PTR ds:[esi]
  403d30:	jg     0x403cd8
  403d32:	jmp    0x403d4c
  403d34:	iret   
  403d35:	adc    esi,ebp
  403d37:	jmp    0xbdb4:0x2e7dd717
  403d3e:	(bad)  
  403d3f:	and    BYTE PTR gs:[esi-0x311b15c],ah
  403d46:	aaa    
  403d47:	adc    cl,BYTE PTR [ebx]
  403d49:	mov    bl,al
  403d4b:	mov    ebx,0xfaaa4105
  403d50:	cmp    dh,BYTE PTR [ebx+esi*8-0x16f69859]
  403d57:	jle    0x403d5e
  403d59:	pop    ebp
  403d5a:	loope  0x403dd9
  403d5c:	fcomp  QWORD PTR [ebx]
  403d5e:	addr16 int3 
  403d60:	leave  
  403d61:	cli    
  403d62:	push   ebx
  403d63:	mov    edi,0x37731f78
  403d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d69:	jle    0x403d44
  403d6b:	jecxz  0x403d11
  403d6d:	pop    eax
  403d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d6f:	inc    ebp
  403d70:	cdq    
  403d71:	xchg   edi,eax
  403d72:	xchg   ebp,eax
  403d73:	cmp    BYTE PTR [esi+0x70],al
  403d76:	and    dl,BYTE PTR [esi+edx*1]
  403d79:	fdivr  QWORD PTR [edx+edi*2-0x4a60d921]
  403d80:	xchg   esi,eax
  403d81:	adc    eax,0x37f4d9e5
  403d86:	out    0xa3,al
  403d88:	sub    esi,ebp
  403d8a:	add    eax,0x43c39561
  403d8f:	les    edx,FWORD PTR [esi]
  403d91:	and    eax,0xbd46338a
  403d96:	mov    al,0x6d
  403d98:	lods   eax,DWORD PTR ds:[esi]
  403d99:	inc    edi
  403d9a:	jmp    0x403d4c
  403d9c:	xor    ah,ch
  403d9e:	add    BYTE PTR fs:[edx-0x42],bh
  403da2:	push   edi
  403da3:	mov    edx,esi
  403da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da6:	loope  0x403df2
  403da8:	mov    esi,0x8be55da1
  403dad:	mov    ch,0x97
  403daf:	retf   0xbb98
  403db2:	push   DWORD PTR [ebp-0x43]
  403db5:	sbb    al,0xb8
  403db7:	pop    esi
  403db8:	rdmsr  
  403dba:	pop    ds
  403dbb:	in     eax,0x1d
  403dbd:	jno    0x403dea
  403dbf:	cmp    DWORD PTR [ebx-0x68],ebx
  403dc2:	dec    esi
  403dc3:	ret    0xb59a
  403dc6:	das    
  403dc7:	sub    ch,BYTE PTR [ecx+0x2]
  403dca:	lea    edx,[esi+0x681c5802]
  403dd0:	xor    eax,0x9d80ae81
  403dd5:	leave  
  403dd6:	add    bl,BYTE PTR ds:0xc74fd9a1
  403ddc:	(bad)  
  403ddd:	mov    bl,0x9b
  403ddf:	in     al,dx
  403de0:	out    dx,eax
  403de1:	inc    edi
  403de2:	push   edx
  403de3:	mov    eax,0x77f077f1
  403de8:	and    DWORD PTR [esp+ebx*8+0x37a18d8c],0xcd99d602
  403df3:	or     DWORD PTR [ebx+0x22],edx
  403df6:	push   edi
  403df7:	stos   BYTE PTR es:[edi],al
  403df8:	(bad)  ds:0x55f6870a
  403dfe:	inc    ebx
  403dff:	adc    ah,BYTE PTR [edi-0x58585f60]
  403e05:	jbe    0x403e0d
  403e07:	test   al,0xd7
  403e09:	(bad)  
  403e0a:	push   ecx
  403e0b:	mov    edi,0x903fb829
  403e10:	daa    
  403e11:	repnz fld QWORD PTR ss:[ebp-0x18a026b5]
  403e19:	fs push ebp
  403e1b:	add    al,0x61
  403e1d:	hlt    
  403e1e:	aam    0x8c
  403e20:	pop    edi
  403e21:	in     eax,dx
  403e22:	dec    ecx
  403e23:	mov    al,0xb9
  403e25:	(bad)  [ebx+0x78]
  403e28:	in     al,0xef
  403e2a:	mov    edx,0xc74192c3
  403e2f:	inc    ebp
  403e30:	bnd jle 0x403db8
  403e33:	test   eax,0xd545dfaa
  403e38:	aad    0x32
  403e3a:	jnp    0x403dc4
  403e3c:	mov    dl,BYTE PTR [ebx-0x2936588f]
  403e42:	scas   eax,DWORD PTR es:[edi]
  403e43:	dec    ecx
  403e44:	int3   
  403e45:	(bad)
  403e48:	jb     0x403e6d
  403e4a:	bound  ebp,QWORD PTR [esi]
  403e4c:	clc    
  403e4d:	rol    esi,cl
  403e4f:	or     eax,0xbc326064
  403e54:	cli    
  403e55:	cdq    
  403e56:	and    edx,DWORD PTR [ecx+0xd]
  403e59:	std    
  403e5a:	shr    BYTE PTR [ebx+0x1eb1420e],cl
  403e60:	jmp    0xdaeb5363
  403e65:	aas    
  403e66:	dec    eax
  403e67:	test   BYTE PTR [eax],bh
  403e69:	jno    0x403e19
  403e6b:	(bad)  
  403e6d:	nop
  403e6e:	(bad)  
  403e6f:	jl     0x403e1e
  403e71:	jb     0x403eeb
  403e73:	inc    ebp
  403e74:	sbb    eax,DWORD PTR [ebx+0x1c]
  403e77:	add    BYTE PTR ds:0x6fecec25,bl
  403e7d:	lods   eax,DWORD PTR ds:[esi]
  403e7e:	push   esi
  403e7f:	leave  
  403e80:	sbb    ebp,DWORD PTR [ecx-0x35]
  403e83:	adc    edi,ebp
  403e85:	mov    esi,0x9fe12668
  403e8a:	mov    ds:0x78950c14,eax
  403e8f:	std    
  403e90:	fimul  DWORD PTR [edx-0x2dc427fb]
  403e96:	int    0x79
  403e98:	pop    ebp
  403e99:	add    bh,ch
  403e9b:	enter  0x49b2,0x42
  403e9f:	push   ebx
  403ea0:	(bad)  
  403ea1:	pop    ebx
  403ea2:	ds adc eax,0xbe8431e2
  403ea8:	leave  
  403ea9:	loopne 0x403ebc
  403eab:	and    DWORD PTR ds:0xebf9af6,edi
  403eb1:	or     esi,ebp
  403eb3:	idiv   BYTE PTR [edi+0x2bc713ad]
  403eb9:	mov    bh,0xee
  403ebb:	and    bl,cl
  403ebd:	ins    BYTE PTR es:[edi],dx
  403ebe:	pop    ecx
  403ebf:	xchg   ecx,eax
  403ec0:	cmp    eax,0x1d61eb4f
  403ec5:	mov    ebp,0xf8a17a95
  403eca:	fucomi st,st(5)
  403ecc:	jno    0x403ebb
  403ece:	nop
  403ecf:	clc    
  403ed0:	xor    al,0xb
  403ed2:	int3   
  403ed3:	sbb    DWORD PTR [eax+0x4f727581],0x9fab99d5
  403edd:	mov    dl,cl
  403edf:	in     eax,dx
  403ee0:	add    edi,esi
  403ee2:	mov    eax,0x32604cd3
  403ee7:	shr    DWORD PTR ds:0xe39bd220,0x2f
  403eee:	jb     0x403ea3
  403ef0:	lahf   
  403ef1:	mov    ebx,0x8ab4d810
  403ef6:	pushf  
  403ef7:	dec    esp
  403ef8:	aam    0x1
  403efa:	lds    edi,FWORD PTR [esi+0x5b]
  403efd:	sbb    al,0xfb
  403eff:	fst    DWORD PTR [ecx+0x6f8f95cc]
  403f05:	mov    al,ds:0x92bd0dd
  403f0a:	push   0xa97fcea
  403f0f:	sub    ecx,DWORD PTR [ecx-0x57]
  403f12:	es jge 0x403f74
  403f15:	sub    al,0x78
  403f17:	hlt    
  403f18:	cld    
  403f19:	neg    BYTE PTR [ecx-0x247f86e]
  403f1f:	mov    esi,0xfef6dbfb
  403f24:	hlt    
  403f25:	sbb    BYTE PTR [edx+eax*2+0x4],0x1e
  403f2a:	sahf   
  403f2b:	aaa    
  403f2c:	dec    edi
  403f2d:	push   DWORD PTR [esi-0x73]
  403f30:	cmp    BYTE PTR [edi-0x521d2745],ch
  403f36:	inc    eax
  403f37:	inc    edi
  403f38:	fistp  DWORD PTR [esi]
  403f3a:	xor    al,0xfd
  403f3c:	and    bl,BYTE PTR [esi-0x61337edf]
  403f42:	and    DWORD PTR [eax-0x2],edi
  403f45:	cmp    BYTE PTR [esi],ch
  403f47:	les    ebx,FWORD PTR [ecx-0x583c1583]
  403f4d:	jns    0x403f4b
  403f4f:	adc    al,0x1b
  403f51:	or     eax,0x4925f81c
  403f56:	inc    ebp
  403f57:	ud0    edx,DWORD PTR [esi+eax*2+0x7976beb6]
  403f5f:	ja     0x403f7f
  403f61:	(bad)  
  403f62:	push   cs
  403f63:	or     DWORD PTR ds:0x5033db0a,0x14c58782
  403f6d:	adc    ecx,DWORD PTR [ebx+0x63]
  403f70:	sbb    eax,0xfbca4859
  403f75:	sub    edx,DWORD PTR [edx+0x5e54358b]
  403f7b:	cmp    DWORD PTR [edx+0x72],0x71ea92ad
  403f82:	fild   DWORD PTR [edx]
  403f84:	jge    0x403fd7
  403f86:	lods   eax,DWORD PTR ds:[esi]
  403f87:	pop    eax
  403f88:	pop    ebx
  403f89:	xor    eax,ebp
  403f8b:	pushf  
  403f8c:	fwait
  403f8d:	aad    0x1b
  403f8f:	into   
  403f90:	or     eax,0xe50193db
  403f95:	fld    st(2)
  403f97:	mov    ah,BYTE PTR [edi-0x3d]
  403f9a:	aam    0x7a
  403f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f9d:	adc    al,0xa5
  403fa0:	xor    dl,BYTE PTR [eax+0x4b]
  403fa3:	cwde   
  403fa4:	div    BYTE PTR [edi]
  403fa6:	(bad)  
  403fa7:	fild   WORD PTR [ecx-0x24c4923b]
  403fad:	jp     0x404019
  403faf:	push   eax
  403fb0:	inc    edi
  403fb1:	(bad)  
  403fb2:	arpl   sp,di
  403fb4:	rol    BYTE PTR [edx+0x3c],1
  403fb7:	dec    eax
  403fb8:	sub    bl,dh
  403fba:	adc    eax,0xb3b2b46f
  403fbf:	lock into 
  403fc1:	aam    0x51
  403fc3:	adc    eax,0xa7ef1695
  403fc8:	pop    ds
  403fc9:	lods   al,BYTE PTR ds:[esi]
  403fca:	fst    DWORD PTR cs:[eax]
  403fcd:	cmp    ah,al
  403fcf:	mov    WORD PTR [edx+0x21],fs
  403fd2:	call   0xdf22bf6f
  403fd7:	gs inc eax
  403fd9:	mov    eax,ds:0xffbcc6d
  403fde:	or     BYTE PTR [ebp-0x56],dl
  403fe1:	xchg   esi,eax
  403fe2:	and    al,0x96
  403fe4:	test   al,0xcc
  403fe6:	(bad)  [ebx+esi*8]
  403fe9:	shl    BYTE PTR [ecx-0x35c9a14d],0x8f
  403ff0:	mov    eax,0x320e5630
  403ff5:	push   esi
  403ff6:	sub    edi,DWORD PTR [ebp-0x59]
  403ff9:	or     edx,DWORD PTR [ecx+0xaa3a1b0]
  403fff:	adc    eax,0x45632037
  404004:	outs   dx,BYTE PTR ds:[esi]
  404005:	sbb    eax,0xbf721ada
  40400a:	mov    esp,DWORD PTR [edi-0x74]
  40400d:	pop    esi
  40400e:	out    dx,al
  40400f:	xchg   BYTE PTR [ebx],ah
  404011:	jle    0x40404b
  404013:	xchg   ebx,eax
  404014:	cmp    ch,BYTE PTR [esi+edi*4-0x44]
  404018:	aam    0x1d
  40401a:	xor    BYTE PTR fs:[esi-0x54187919],0xb5
  404022:	sahf   
  404023:	js     0x403fa9
  404025:	repnz sub al,0x49
  404028:	dec    edx
  404029:	or     ebx,DWORD PTR [esi+ebx*8]
  40402c:	mov    bl,dh
  40402e:	dec    eax
  40402f:	or     al,0x5a
  404031:	and    BYTE PTR [ebx],0x5b
  404034:	xchg   ebx,eax
  404035:	in     al,0x62
  404037:	add    al,0xb9
  404039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40403a:	add    al,0xee
  40403c:	add    edx,DWORD PTR [esi+0x45]
  40403f:	addr16 pop ds
  404041:	stos   DWORD PTR es:[edi],eax
  404042:	das    
  404043:	(bad)  
  404044:	xchg   ebp,eax
  404045:	data16 int3 
  404047:	lahf   
  404048:	js     0x404090
  40404a:	xchg   BYTE PTR [edx],ah
  40404c:	add    BYTE PTR ds:[esi],dh
  40404f:	rol    BYTE PTR [ebx-0x4c498302],0x14
  404056:	cwde   
  404057:	js     0x404029
  404059:	dec    esp
  40405a:	es dec bp
  40405d:	mov    bl,0x70
  40405f:	je     0x404097
  404061:	popa   
  404062:	or     al,al
  404064:	pop    esp
  404065:	stos   DWORD PTR es:[edi],eax
  404066:	lahf   
  404067:	sub    ah,dh
  404069:	inc    esi
  40406a:	xor    DWORD PTR [ecx+0x62],esp
  40406d:	stos   DWORD PTR es:[edi],eax
  40406e:	push   ds
  40406f:	cwde   
  404070:	push   ecx
  404071:	sbb    BYTE PTR [ecx],0x86
  404074:	pushf  
  404075:	lods   al,BYTE PTR ds:[esi]
  404076:	sub    DWORD PTR [edx],esp
  404078:	inc    esi
  404079:	jbe    0x4040b5
  40407b:	shl    DWORD PTR [ebp+0x13e428dc],cl
  404081:	push   ds
  404082:	dec    edi
  404083:	add    al,BYTE PTR es:[ecx-0x6c53f0c4]
  40408a:	stc    
  40408b:	nop
  40408c:	dec    ebp
  40408d:	in     al,0x11
  40408f:	or     dh,0xd6
  404092:	jge    0x40403c
  404094:	dec    edx
  404095:	test   eax,0x65284751
  40409a:	mov    ecx,0x93785a8c
  40409f:	mov    esp,0xfd36ec76
  4040a4:	push   ds
  4040a5:	je     0x404028
  4040a7:	or     DWORD PTR [ebx+0x31],edx
  4040aa:	xchg   DWORD PTR [ebx+esi*4+0x71],ecx
  4040ae:	js     0x404072
  4040b0:	dec    eax
  4040b1:	lahf   
  4040b2:	xlat   BYTE PTR ds:[ebx]
  4040b3:	xchg   edx,eax
  4040b4:	mov    dl,0xa2
  4040b6:	pop    ebx
  4040b7:	loope  0x4040bb
  4040b9:	push   ebx
  4040ba:	jmp    0x69b9074d
  4040bf:	sub    eax,ebp
  4040c1:	shr    BYTE PTR [edi+0x66507b8f],cl
  4040c7:	(bad)  
  4040c8:	leave  
  4040c9:	pop    ebx
  4040ca:	daa    
  4040cb:	ficomp WORD PTR [ebx]
  4040cd:	fs aaa 
  4040cf:	mov    dh,cl
  4040d1:	mov    ebx,0x2499aaba
  4040d6:	jmp    0x52d7877a
  4040db:	pop    edi
  4040dc:	(bad)  
  4040dd:	sti    
  4040de:	add    bl,BYTE PTR [esi+0x6aebd84]
  4040e4:	sbb    eax,0x30069f3c
  4040e9:	ss clc 
  4040eb:	sti    
  4040ec:	sbb    DWORD PTR [ebp-0x358090d3],ebp
  4040f2:	bound  esp,QWORD PTR [ecx-0x1e8763d5]
  4040f8:	mov    DWORD PTR [esi-0x6f],esi
  4040fb:	aad    0xd
  4040fd:	mov    dl,0xe8
  4040ff:	add    al,0x99
  404101:	test   al,0x17
  404103:	aaa    
  404104:	xor    DWORD PTR [edi+0x1cc70113],ecx
  40410a:	in     al,dx
  40410b:	das    
  40410c:	dec    ebp
  40410d:	aad    0xcc
  40410f:	push   esp
  404110:	aas    
  404111:	mov    ds:0x9210fe96,eax
  404116:	jl     0x4040e7
  404118:	jnp    0x404135
  40411a:	sbb    eax,0xe80fd0a7
  40411f:	fist   DWORD PTR [edi+0x3fefa576]
  404125:	xchg   ecx,eax
  404126:	enter  0x8447,0x5d
  40412a:	xor    eax,0x51ba9ecd
  40412f:	xchg   esp,eax
  404130:	lahf   
  404131:	stos   DWORD PTR es:[edi],eax
  404132:	cdq    
  404133:	xor    DWORD PTR [ecx],esp
  404135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404136:	mov    al,0x69
  404138:	and    BYTE PTR [ecx+0x2ddb326e],ch
  40413e:	push   ss
  40413f:	mov    esi,0xc705518c
  404144:	repz out dx,al
  404146:	hlt    
  404147:	cwde   
  404148:	add    cl,BYTE PTR [ecx-0x7f]
  40414b:	xor    ebx,ebx
  40414d:	ins    BYTE PTR es:[edi],dx
  40414e:	sbb    al,0xa6
  404150:	ds repz pushf 
  404153:	xchg   edx,eax
  404154:	adc    al,0x9a
  404156:	mov    ds:0x4721dcd8,al
  40415b:	(bad)  
  40415c:	sbb    BYTE PTR [ebx+0x4f],al
  40415f:	mov    eax,ds:0xefe9fabe
  404164:	iret   
  404165:	mov    cl,dl
  404167:	pop    esi
  404168:	cmp    DWORD PTR [edi+0x52],0xffffffd0
  40416c:	loopne 0x4041a7
  40416e:	outs   dx,BYTE PTR ds:[esi]
  40416f:	dec    esi
  404170:	retf   
  404171:	xor    esp,DWORD PTR [ecx]
  404173:	xor    BYTE PTR [ecx-0x68],bh
  404176:	dec    ecx
  404177:	call   FWORD PTR [esp+ebp*4]
  40417a:	xor    eax,0x8646cd03
  40417f:	sub    bh,BYTE PTR [ebx+0x6ad30982]
  404185:	dec    ecx
  404186:	ds out dx,eax
  404188:	dec    edx
  404189:	cmp    ebx,ecx
  40418b:	push   ss
  40418c:	xor    BYTE PTR [edi-0x39f2bd0b],ch
  404192:	ins    BYTE PTR es:[edi],dx
  404193:	jnp    0x40416c
  404195:	and    BYTE PTR [esi-0x28f62615],bl
  40419b:	adc    BYTE PTR [eax],bh
  40419d:	sub    DWORD PTR [ecx+0x32],ebx
  4041a0:	adc    BYTE PTR ss:[eax-0x1e],al
  4041a4:	std    
  4041a5:	dec    edi
  4041a6:	call   0xda2239c
  4041ab:	push   esp
  4041ac:	sahf   
  4041ad:	dec    edi
  4041ae:	mov    al,0x18
  4041b0:	daa    
  4041b1:	loope  0x4041b1
  4041b3:	and    ch,BYTE PTR [eax+0x13e58681]
  4041b9:	dec    ecx
  4041ba:	add    dh,dl
  4041bc:	aas    
  4041bd:	call   0xf2aa:0x9ed94af5
  4041c4:	sti    
  4041c5:	dec    edx
  4041c6:	adc    BYTE PTR [ecx],dh
  4041c8:	not    DWORD PTR [esi]
  4041ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041cb:	dec    ebx
  4041cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041cd:	mov    edx,0xfa45cf00
  4041d2:	jp     0x40422f
  4041d4:	das    
  4041d5:	call   0x1770:0x12b206d7
  4041dc:	jne    0x4041d6
  4041de:	adc    DWORD PTR [edx+0x6b65a13f],ebx
  4041e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e5:	out    0xcd,eax
  4041e7:	fwait
  4041e8:	mov    bl,0xa8
  4041ea:	fsubr  DWORD PTR [eax+0x1817a91a]
  4041f0:	bound  esi,QWORD PTR [ecx]
  4041f2:	les    edx,FWORD PTR [ecx-0x29]
  4041f5:	rcl    DWORD PTR [esi],1
  4041f7:	pop    ecx
  4041f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041f9:	fmul   DWORD PTR [esi-0x1c]
  4041fc:	faddp  st(6),st
  4041ff:	mov    al,ds:0xb20264b1
  404204:	mov    dh,0x4
  404206:	jg     0x40419a
  404208:	nop
  404209:	add    eax,DWORD PTR [eax]
  40420b:	mov    WORD PTR [ecx],es
  40420d:	sti    
  40420e:	cmp    DWORD PTR ds:0x5f865ebb,ebx
  404214:	mov    eax,0xac4a1fe0
  404219:	and    BYTE PTR [eax-0x2bf0a827],bh
  40421f:	cmp    ebx,DWORD PTR ds:0x98286acc
  404225:	jle    0x4041b8
  404227:	sar    BYTE PTR [eax-0x52],1
  40422a:	pop    esi
  40422b:	cmp    eax,0xc919080e
  404230:	jnp    0x40421e
  404232:	mov    bl,0x9
  404234:	or     eax,0x4bfd4c85
  404239:	and    ch,BYTE PTR [ecx-0x62068dd1]
  40423f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404240:	jg     0x404288
  404242:	(bad)  
  404243:	fiadd  WORD PTR [eax+0x30]
  404246:	repnz enter 0xd047,0xfa
  40424b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40424c:	bound  eax,QWORD PTR cs:[edx-0x58]
  404250:	(bad)  
  404251:	pop    esp
  404252:	pushf  
  404253:	xor    eax,0xbc064fa4
  404258:	jne    0x404231
  40425a:	xlat   BYTE PTR ds:[ebx]
  40425b:	adc    esp,DWORD PTR [edi]
  40425d:	mov    ?,WORD PTR [ecx+0x2a6554]
  404263:	clc    
  404264:	lock jb 0x404240
  404267:	mov    ?,WORD PTR [eax-0x62]
  40426a:	and    DWORD PTR [esi],ecx
  40426c:	dec    edx
  40426d:	inc    esi
  40426e:	adc    esp,DWORD PTR [ebp+0x28]
  404271:	push   ds
  404272:	jne    0x40422d
  404274:	aam    0x2f
  404276:	jecxz  0x404258
  404278:	and    BYTE PTR [edi+0x431a0287],cl
  40427e:	scas   eax,DWORD PTR es:[edi]
  40427f:	pop    esp
  404280:	dec    esi
  404281:	mov    eax,0xc46e2b42
  404286:	cmc    
  404287:	cdq    
  404288:	mov    ah,0x7e
  40428a:	push   esp
  40428b:	pop    ss
  40428c:	and    ecx,esp
  40428e:	bound  eax,QWORD PTR [ebx+0x6c]
  404291:	or     bh,ah
  404293:	aas    
  404294:	scas   eax,DWORD PTR es:[edi]
  404295:	cmp    DWORD PTR [edi-0x5178d7a2],eax
  40429b:	mov    BYTE PTR [eax-0x39],0x96
  40429f:	xor    al,0xca
  4042a1:	sbb    edx,DWORD PTR [edi-0x71ac1410]
  4042a7:	fld    DWORD PTR [edx]
  4042a9:	push   ebx
  4042aa:	adc    al,0x99
  4042ac:	not    DWORD PTR [ebp+0x4a3b9b60]
  4042b2:	jne    0x404234
  4042b4:	mov    esi,0xd58801fe
  4042b9:	add    al,0xef
  4042bb:	rcr    DWORD PTR [edx],0xe
  4042be:	dec    ecx
  4042bf:	into   
  4042c0:	mov    eax,0x9590fbfb
  4042c5:	adc    edi,0xa968bbf4
  4042cb:	cmc    
  4042cc:	rol    DWORD PTR [eax],1
  4042ce:	(bad)  
  4042cf:	mov    eax,ds:0x33a9dd61
  4042d4:	arpl   bx,bp
  4042d6:	repnz mov BYTE PTR [edx+0x39ffd458],cl
  4042dd:	mov    edi,0x921f499d
  4042e2:	fwait
  4042e3:	lock leave 
  4042e5:	lahf   
  4042e6:	loop   0x4042cc
  4042e8:	das    
  4042e9:	ret    0xf7a0
  4042ec:	push   cs
  4042ed:	mov    ecx,0x14d47a01
  4042f2:	xor    BYTE PTR [ebx-0x7e],bl
  4042f5:	leave  
  4042f6:	sbb    eax,DWORD PTR [edx+0x6dcad381]
  4042fc:	mov    bl,0xab
  4042fe:	inc    esp
  4042ff:	xor    eax,0x692de2b9
  404304:	rcr    DWORD PTR [edx-0x35],0x7
  404308:	sub    al,0xab
  40430a:	or     dl,ch
  40430c:	jmp    0xe9dbc470
  404311:	mov    ch,0x76
  404313:	dec    ebx
  404314:	mov    bl,0x90
  404316:	aam    0x35
  404318:	xchg   ebx,eax
  404319:	mov    ds:0xb0e1c43e,eax
  40431e:	push   ebx
  40431f:	fistp  DWORD PTR [eax]
  404321:	inc    eax
  404322:	fmul   DWORD PTR [eax-0x3b]
  404325:	adc    BYTE PTR [edx],dl
  404327:	xchg   ebp,eax
  404328:	into   
  404329:	xchg   ecx,eax
  40432a:	pop    ss
  40432b:	mov    ss,edi
  40432d:	daa    
  40432e:	jb     0x4042d8
  404330:	sub    eax,0x3a8fa368
  404335:	jge    0x40439b
  404337:	(bad)  
  404338:	nop    DWORD PTR [edi+0x45]
  40433c:	(bad)  
  40433d:	bound  edi,QWORD PTR [ebp-0x1cb741d]
  404343:	ds pushf 
  404345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404346:	push   ebp
  404347:	std    
  404348:	dec    ebp
  404349:	iret   
  40434a:	sbb    eax,0x11
  40434d:	push   ss
  40434e:	push   ecx
  40434f:	out    0xfc,al
  404351:	mov    ebx,0xcd5e01a8
  404356:	arpl   WORD PTR [eax-0x2ce802b3],di
  40435c:	mov    bl,0xea
  40435e:	iret   
  40435f:	inc    ebx
  404360:	dec    ebx
  404361:	adc    DWORD PTR [esi+0x4cdff647],eax
  404367:	dec    esp
  404368:	mov    ds:0xc77ae5bc,al
  40436d:	inc    edi
  40436e:	mov    esi,0xfd7099bf
  404373:	and    DWORD PTR [ebp+0x64d5dffa],esp
  404379:	pop    edi
  40437a:	bound  ecx,QWORD PTR [edi]
  40437c:	push   esp
  40437d:	add    dh,BYTE PTR [edi]
  40437f:	mov    ds:0x2f05fa6,al
  404384:	scas   eax,DWORD PTR es:[edi]
  404385:	cwde   
  404386:	mov    ebp,0xf7214ca
  40438b:	ja     0x404397
  40438d:	sbb    eax,0x9513a56f
  404392:	cdq    
  404393:	mov    dl,bh
  404395:	into   
  404396:	inc    ebp
  404397:	dec    edx
  404398:	dec    esp
  404399:	inc    eax
  40439a:	leave  
  40439b:	and    ch,cl
  40439d:	aam    0x6
  40439f:	stos   DWORD PTR es:[edi],eax
  4043a0:	add    BYTE PTR [edx-0x10],cl
  4043a3:	xchg   ebx,eax
  4043a4:	in     eax,0xc3
  4043a6:	enter  0x49e2,0x91
  4043aa:	les    ecx,FWORD PTR [edi]
  4043ac:	out    dx,eax
  4043ad:	sahf   
  4043ae:	xchg   edx,eax
  4043af:	push   esp
  4043b0:	repz dec ebx
  4043b2:	cli    
  4043b3:	cdq    
  4043b4:	shl    esi,cl
  4043b6:	std    
  4043b7:	outs   dx,BYTE PTR ds:[esi]
  4043b8:	jl     0x404394
  4043ba:	leave  
  4043bb:	pop    ss
  4043bc:	ins    DWORD PTR es:[edi],dx
  4043bd:	bound  edx,QWORD PTR [edi-0x48]
  4043c0:	call   0x1283a6af
  4043c5:	into   
  4043c6:	jne    0x404442
  4043c8:	pusha  
  4043c9:	mov    dl,0x38
  4043cb:	adc    eax,DWORD PTR [ecx+edi*2-0x5b7bafa0]
  4043d2:	out    dx,eax
  4043d3:	push   edi
  4043d4:	inc    ebx
  4043d5:	fldl2t 
  4043d7:	mov    DWORD PTR [edx+edi*1],ebp
  4043da:	dec    edi
  4043db:	outs   dx,DWORD PTR ds:[esi]
  4043dc:	clc    
  4043dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043de:	lahf   
  4043df:	cli    
  4043e0:	add    al,0xbc
  4043e2:	retf   
  4043e3:	sub    ebx,ecx
  4043e5:	sbb    edx,DWORD PTR [esi+0x76949284]
  4043eb:	push   0xffffff86
  4043ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ee:	pop    edi
  4043ef:	js     0x404451
  4043f1:	bound  edx,QWORD PTR [ecx-0x2a]
  4043f4:	pop    esp
  4043f5:	push   ebx
  4043f6:	cmp    eax,0xf6fd3a5c
  4043fb:	mov    ds:0xf35a9e61,eax
  404400:	sahf   
  404401:	(bad)  
  404402:	gs inc esi
  404404:	scas   al,BYTE PTR es:[edi]
  404405:	repz test DWORD PTR [ecx],eax
  404408:	cmp    eax,0x1c6c8f63
  40440d:	mov    dh,0x21
  40440f:	cmp    DWORD PTR [ecx+0x3456e9c8],edx
  404415:	out    0x41,al
  404417:	dec    edi
  404418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404419:	or     al,0xc8
  40441b:	mov    bl,0xdb
  40441d:	add    edx,DWORD PTR [ebx+eax*8]
  404420:	cwde   
  404421:	or     eax,0x799e8cab
  404426:	sbb    eax,0xdaf8ba45
  40442b:	inc    esi
  40442c:	sahf   
  40442d:	and    cl,ch
  40442f:	les    esi,FWORD PTR [ecx-0x5]
  404432:	mov    dl,0xf7
  404434:	cmp    edx,eax
  404436:	mov    bl,BYTE PTR [ebx-0x15]
  404439:	dec    eax
  40443a:	cdq    
  40443b:	jbe    0x4043f8
  40443d:	pop    DWORD PTR [eax+0x2d]
  404440:	and    al,0xd9
  404442:	mov    ds:0xeae326d5,al
  404447:	mov    esi,0xfe93b975
  40444c:	mov    ecx,0x5066244
  404451:	push   edx
  404452:	xor    ebx,DWORD PTR [esi+0x4d8c4ba9]
  404458:	cmp    DWORD PTR [ebx+0x30],0x5b
  40445c:	sti    
  40445d:	sahf   
  40445e:	inc    ecx
  40445f:	cmp    BYTE PTR [edi-0x548ba121],bl
  404465:	dec    edi
  404466:	jge    0x404486
  404468:	fld    TBYTE PTR [edx+ecx*1+0x5d]
  40446c:	add    BYTE PTR [edx+0x610d98e6],al
  404472:	pop    edx
  404473:	(bad)  
  404474:	leave  
  404475:	iret   
  404476:	sbb    al,0x27
  404478:	dec    esi
  404479:	fld    TBYTE PTR [ebx]
  40447b:	pop    ebx
  40447c:	mov    ah,0x32
  40447e:	dec    ebp
  40447f:	in     eax,dx
  404480:	ja     0x404443
  404482:	lds    edi,FWORD PTR [ebp-0x694d3ba5]
  404488:	or     al,0xa5
  40448a:	rcr    BYTE PTR [esi+edx*4-0x5e],1
  40448e:	jle    0x404492
  404490:	sub    ch,al
  404492:	jo     0x4044f8
  404494:	mov    dl,0x8c
  404496:	mov    ah,0x85
  404498:	mov    ebp,esi
  40449a:	fst    QWORD PTR [ebp-0x45]
  40449d:	dec    esp
  40449e:	adc    edx,DWORD PTR [esi]
  4044a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a3:	aaa    
  4044a4:	xchg   esi,eax
  4044a5:	cs int 0xc5
  4044a8:	outs   dx,DWORD PTR ds:[esi]
  4044a9:	push   esi
  4044aa:	neg    al
  4044ac:	in     eax,0xa
  4044ae:	fnstcw WORD PTR [ebx+eiz*1+0x2f]
  4044b2:	mov    dh,0xd7
  4044b4:	gs mov bl,0x26
  4044b7:	fld    TBYTE PTR [ecx]
  4044b9:	xor    eax,0xbdecbde1
  4044be:	jnp    0x4044b9
  4044c0:	mov    ebp,0xfc01f055
  4044c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044c6:	inc    ebp
  4044c7:	adc    ch,BYTE PTR ds:0x7566a4d7
  4044cd:	sbb    ecx,edx
  4044cf:	lock inc edx
  4044d1:	and    BYTE PTR [esi+edi*8+0x40],0xed
  4044d6:	popa   
  4044d7:	dec    edx
  4044d8:	sbb    ch,cl
  4044da:	dec    ebx
  4044db:	(bad)  
  4044dc:	sar    bl,0x8
  4044df:	or     ecx,eax
  4044e1:	inc    edi
  4044e2:	adc    DWORD PTR [edi-0x60f2bfa1],esp
  4044e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e9:	mov    bl,0x63
  4044eb:	mov    WORD PTR [ebx+0x27],es
  4044ee:	mov    ds:0xe4edbb8c,eax
  4044f3:	jne    0x404570
  4044f5:	inc    esi
  4044f6:	jg     0x40451b
  4044f8:	adc    al,0xc4
  4044fa:	lods   al,BYTE PTR ds:[esi]
  4044fb:	dec    eax
  4044fc:	pop    edx
  4044fd:	push   es
  4044fe:	mov    ds:0x647e5723,eax
  404503:	mov    al,0xa5
  404505:	xlat   BYTE PTR ds:[ebx]
  404506:	out    dx,eax
  404507:	loope  0x40449a
  404509:	adc    BYTE PTR [ecx-0x3329cb4],al
  40450f:	dec    esp
  404510:	dec    esp
  404511:	cmp    ebp,DWORD PTR [esi-0x7a]
  404514:	mov    BYTE PTR [edi+0x3a399b00],al
  40451a:	inc    esp
  40451b:	test   BYTE PTR [ecx],0xa6
  40451e:	test   dh,dl
  404520:	std    
  404521:	popfw  
  404523:	xchg   esi,eax
  404524:	fmul   st(1),st
  404526:	shr    BYTE PTR [edi-0x2d],cl
  404529:	imul   ebx,DWORD PTR [esp+ebp*2],0xffffffd3
  40452d:	sbb    BYTE PTR [ebp-0x7b156ca5],bh
  404533:	fsub   st(2),st
  404535:	not    DWORD PTR [ebx-0x20952e52]
  40453b:	fiadd  DWORD PTR [edx+0x2e]
  40453e:	es pushf 
  404540:	rcr    esi,1
  404542:	fwait
  404543:	or     al,0x4f
  404545:	push   cs
  404546:	ret    
  404547:	xchg   esp,eax
  404548:	jmp    0x908cf599
  40454d:	adc    BYTE PTR [edx-0x80],bl
  404550:	push   edx
  404551:	unpckhps xmm5,xmm2
  404554:	fisttp QWORD PTR [edx+0x5bb83aa]
  40455a:	sbb    DWORD PTR [edi],ebp
  40455c:	push   es
  40455d:	or     DWORD PTR [eax+0x6fd8f989],0x4842dfc8
  404567:	jae    0x404527
  404569:	cmp    BYTE PTR [edx],0x6b
  40456c:	mov    ebp,0x4e59198b
  404571:	inc    ecx
  404572:	pop    esi
  404573:	cmp    eax,0xbd18a905
  404578:	mov    eax,0xd36d3f2
  40457d:	or     BYTE PTR [esi-0x6dc6c1bd],ah
  404583:	cmp    eax,0xff08ce9
  404588:	enter  0xe1b7,0xb5
  40458c:	adc    ah,BYTE PTR [ebx+ebp*2]
  40458f:	test   BYTE PTR [eax],al
  404591:	scas   eax,DWORD PTR es:[edi]
  404592:	aam    0xd4
  404594:	mov    bh,0x9d
  404596:	fwait
  404597:	jbe    0x4045a2
  404599:	mov    WORD PTR [eax+0x309d06d],ss
  40459f:	in     al,0x2b
  4045a1:	xor    BYTE PTR [ebp+eiz*2+0x23],bl
  4045a5:	inc    edx
  4045a6:	sbb    ecx,esp
  4045a8:	cmp    eax,0x9dbba30c
  4045ad:	xchg   esi,eax
  4045ae:	dec    ecx
  4045af:	sar    BYTE PTR [ecx],0xe
  4045b2:	(bad)  
  4045b3:	and    cl,BYTE PTR [ebx-0x50]
  4045b6:	add    BYTE PTR ds:0x12de2d0e,bh
  4045bc:	daa    
  4045bd:	or     ecx,ebx
  4045bf:	fnstcw WORD PTR [eax]
  4045c1:	lahf   
  4045c2:	mov    ecx,0x1277000b
  4045c7:	shl    cl,1
  4045c9:	cdq    
  4045ca:	sub    al,0x67
  4045cc:	icebp  
  4045cd:	icebp  
  4045ce:	call   0x263fdf70
  4045d3:	and    eax,0x2310dac1
  4045d8:	push   edi
  4045d9:	and    bl,BYTE PTR [edi]
  4045db:	or     ebx,DWORD PTR [edx]
  4045dd:	cli    
  4045de:	sub    eax,0xcb3fdc62
  4045e3:	add    eax,ecx
  4045e5:	rol    DWORD PTR [edx],cl
  4045e7:	js     0x4045eb
  4045e9:	psadbw mm5,QWORD PTR [eax+0x31]
  4045ed:	fwait
  4045ee:	or     cl,BYTE PTR [esi+edx*1+0x1f]
  4045f2:	xlat   BYTE PTR ds:[ebx]
  4045f3:	ret    
  4045f4:	sti    
  4045f5:	sbb    al,0xda
  4045f7:	and    eax,DWORD PTR [esi+0x617ee5d2]
  4045fd:	(bad)  
  4045fe:	scas   eax,DWORD PTR es:[edi]
  4045ff:	fidivr WORD PTR [esi-0x215f6c55]
  404605:	lea    edx,[esi-0x1a520067]
  40460b:	inc    ebx
  40460c:	xlat   BYTE PTR ds:[ebx]
  40460d:	adc    DWORD PTR [edi+ebp*8],ebx
  404610:	dec    edi
  404611:	fcomp  DWORD PTR [ecx-0x5b]
  404614:	outs   dx,DWORD PTR ds:[esi]
  404615:	scas   eax,DWORD PTR es:[edi]
  404616:	push   es
  404617:	push   ds
  404618:	mov    ds:0xaee6d4fa,eax
  40461d:	into   
  40461e:	cwde   
  40461f:	cmp    bl,BYTE PTR [esi+0x61bef08e]
  404625:	fdivr  QWORD PTR [esp+edx*8-0x37]
  404629:	adc    BYTE PTR [ebx-0x60260768],dh
  40462f:	ret    
  404630:	jns    0x4045fd
  404632:	pushf  
  404633:	pop    edi
  404634:	loope  0x4045f1
  404636:	in     eax,dx
  404637:	cld    
  404638:	dec    ecx
  404639:	xchg   esi,eax
  40463a:	inc    esp
  40463b:	jnp    0x404691
  40463d:	inc    ebx
  40463e:	push   edi
  40463f:	in     al,dx
  404640:	mov    BYTE PTR [ebx-0x73],al
  404643:	sti    
  404644:	dec    ecx
  404645:	xchg   ecx,eax
  404646:	xor    al,0xdc
  404648:	rcr    DWORD PTR [ebp-0x9538f2e],cl
  40464e:	mov    ecx,0x1bcbb89e
  404653:	lods   al,BYTE PTR ds:[esi]
  404654:	call   0xeef0:0x1e288874
  40465b:	ins    DWORD PTR es:[edi],dx
  40465c:	sbb    al,0xc5
  40465e:	pop    edi
  40465f:	jp     0x404694
  404661:	gs aas 
  404663:	pusha  
  404664:	inc    esp
  404665:	nop
  404666:	pop    eax
  404667:	and    BYTE PTR [eax+0x64],dh
  40466a:	and    DWORD PTR [ebx-0x7c5fed],eax
  404670:	outs   dx,BYTE PTR ds:[esi]
  404671:	jbe    0x40468c
  404673:	(bad)  
  404674:	xchg   esi,eax
  404675:	bound  edi,QWORD PTR [ecx+0x13]
  404678:	mov    ah,0xd9
  40467a:	loopne 0x4046f6
  40467c:	repz push cs
  40467e:	mov    ebp,0x7274eed8
  404683:	in     al,0x35
  404685:	pop    edi
  404686:	nop
  404687:	adc    DWORD PTR [esi-0x5be82a8f],0x92d35505
  404691:	cld    
  404692:	inc    esp
  404693:	xchg   ebp,eax
  404694:	jge    0x4046f3
  404696:	mov    ecx,0xdecc673b
  40469b:	es pop ebp
  40469d:	sbb    esi,DWORD PTR [edx-0x44]
  4046a0:	and    DWORD PTR [ebx+0x28],edx
  4046a3:	mov    edi,0x58b59c32
  4046a8:	xor    BYTE PTR [edx-0x4d],al
  4046ab:	adc    DWORD PTR [edi-0x2c],eax
  4046ae:	dec    esp
  4046af:	es jge 0x40468b
  4046b2:	and    DWORD PTR ds:0x479d6d46,edi
  4046b8:	mov    ecx,ds
  4046ba:	pop    esp
  4046bb:	jmp    0xd68dd49b
  4046c0:	shl    DWORD PTR [eax],0xa3
  4046c3:	sub    ecx,DWORD PTR [edx]
  4046c5:	sbb    ecx,DWORD PTR [edx]
  4046c7:	mov    dl,0x19
  4046c9:	pop    edx
  4046ca:	push   es
  4046cb:	test   al,0xa6
  4046cd:	sbb    BYTE PTR [esi-0x1c2fd039],dl
  4046d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d4:	dec    ebx
  4046d5:	es pop es
  4046d7:	add    eax,0xc3edff40
  4046dc:	gs inc esi
  4046de:	jmp    0x413d5fa0
  4046e3:	hlt    
  4046e4:	imul   esi,DWORD PTR [eax+esi*1+0x4e],0x80482abc
  4046ec:	sub    esp,DWORD PTR [esi+esi*4+0x7f5797d7]
  4046f3:	jno    0x404771
  4046f5:	daa    
  4046f6:	leave  
  4046f7:	inc    edi
  4046f8:	outs   dx,DWORD PTR ds:[esi]
  4046f9:	daa    
  4046fa:	scas   al,BYTE PTR es:[edi]
  4046fb:	int    0x19
  4046fd:	or     BYTE PTR [edi-0x1e721976],dh
  404703:	loope  0x404710
  404705:	pop    eax
  404706:	repnz xor BYTE PTR [ecx+eiz*1+0x3c],dh
  40470b:	add    ah,cl
  40470d:	mov    dl,0xaf
  40470f:	(bad)  
  404710:	and    dh,BYTE PTR [ebx+0x7a]
  404713:	ds aad 0xbf
  404716:	xchg   DWORD PTR [ecx],ebp
  404718:	or     edx,DWORD PTR [edi+0x69a91fb8]
  40471e:	fnsetpm(287 only) 
  404720:	mov    bl,0xf6
  404722:	jnp    0x404783
  404724:	lea    ecx,[ebp-0x59a2b81e]
  40472a:	xor    BYTE PTR [edx],bh
  40472c:	dec    esp
  40472d:	add    ecx,DWORD PTR [ebx-0x5362d546]
  404733:	bound  ebp,QWORD PTR [esi+eax*2]
  404736:	jbe    0x40472b
  404738:	fmul   st,st(2)
  40473a:	jp     0x4046fd
  40473c:	lods   eax,DWORD PTR ds:[esi]
  40473d:	fst    DWORD PTR [ecx-0x10]
  404740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404741:	imul   esi,edx,0x65
  404744:	push   ss
  404745:	or     DWORD PTR [esi-0x7e],edi
  404748:	ror    BYTE PTR [ecx+0x36],cl
  40474b:	mov    esi,0x695bd72d
  404750:	adc    BYTE PTR [esi+0x439ea161],ah
  404756:	inc    esi
  404757:	clc    
  404758:	cmp    esi,DWORD PTR [esi+0x444bab98]
  40475e:	in     al,dx
  40475f:	pop    ss
  404760:	out    0x71,eax
  404762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404763:	mov    esp,cs
  404765:	les    esi,FWORD PTR [edi+0x46]
  404768:	inc    eax
  404769:	in     eax,0x8d
  40476b:	inc    ebp
  40476c:	fistp  WORD PTR [ebx-0x42]
  40476f:	adc    al,0x60
  404771:	out    0xa5,al
  404773:	lahf   
  404774:	inc    edi
  404775:	add    esp,DWORD PTR [eax+0x6143c987]
  40477b:	jmp    0xd3ec:0x999eb526
  404782:	lods   eax,DWORD PTR ds:[esi]
  404783:	adc    eax,ecx
  404785:	adc    eax,0x96023333
  40478a:	add    ebx,DWORD PTR [eax-0x11656f1f]
  404790:	(bad)  
  404791:	cmc    
  404792:	xor    BYTE PTR [ebp-0x1a50f966],ah
  404798:	das    
  404799:	mov    ds:0x59dd1b26,eax
  40479e:	fs pop ebx
  4047a0:	jle    0x4047eb
  4047a2:	inc    BYTE PTR [edi]
  4047a4:	sbb    ebx,ecx
  4047a6:	dec    esi
  4047a7:	outs   dx,DWORD PTR ds:[esi]
  4047a8:	sbb    eax,0x1bde773a
  4047ad:	xor    al,0x44
  4047af:	jb     0x4047d7
  4047b1:	lods   eax,DWORD PTR ds:[esi]
  4047b2:	mov    ebx,0x2ec40108
  4047b7:	and    DWORD PTR es:[ebx-0x3c],edx
  4047bb:	lock jb 0x40482e
  4047be:	fdivp  st(0),st
  4047c0:	in     al,0xad
  4047c2:	ds inc ecx
  4047c4:	ds scas al,BYTE PTR es:[edi]
  4047c6:	ret    0x54b4
  4047c9:	outs   dx,BYTE PTR ds:[esi]
  4047ca:	pop    ebp
  4047cb:	xchg   DWORD PTR [eax+0x60],eax
  4047ce:	js     0x404786
  4047d0:	sub    BYTE PTR [esi],0x61
  4047d3:	shl    BYTE PTR [ecx],1
  4047d5:	xchg   edi,eax
  4047d6:	adc    eax,0x974a2c0f
  4047db:	pop    ds
  4047dc:	lods   eax,DWORD PTR ds:[esi]
  4047dd:	fwait
  4047de:	dec    ebx
  4047df:	mov    bh,0xb7
  4047e1:	xchg   ebp,eax
  4047e2:	add    BYTE PTR [edx],0xf1
  4047e5:	xchg   esp,eax
  4047e6:	(bad)  
  4047e7:	and    al,0x99
  4047e9:	inc    esp
  4047ea:	sub    ah,BYTE PTR [edx]
  4047ec:	out    dx,al
  4047ed:	stos   BYTE PTR es:[edi],al
  4047ee:	pop    ebp
  4047ef:	cmc    
  4047f0:	xchg   esi,eax
  4047f1:	xchg   edi,eax
  4047f2:	sub    esp,DWORD PTR [eax]
  4047f4:	imul   ebp,esi,0xffffffff
  4047f7:	cwde   
  4047f8:	inc    esi
  4047f9:	push   ecx
  4047fa:	out    0xf4,eax
  4047fc:	sub    esi,ebx
  4047fe:	cmc    
  4047ff:	or     DWORD PTR [ebp+esi*8-0x7],ebx
  404803:	dec    edx
  404804:	out    0x29,eax
  404806:	mov    WORD PTR [ecx-0x66],ss
  404809:	rcr    BYTE PTR [ecx],1
  40480b:	xchg   edx,eax
  40480c:	fnstcw WORD PTR [edi+0x6d4b33a5]
  404812:	loope  0x40483e
  404814:	imul   edx,DWORD PTR [ebx+0x6a],0x28
  404818:	(bad)  
  404819:	test   al,0x14
  40481b:	mov    edx,?
  40481d:	sti    
  40481e:	in     al,dx
  40481f:	(bad)  
  404821:	inc    ebx
  404822:	mov    eax,0xeb755922
  404827:	(bad)  
  404828:	out    0x55,eax
  40482a:	or     DWORD PTR [edx],ebp
  40482c:	stos   BYTE PTR es:[edi],al
  40482d:	dec    edx
  40482e:	fist   WORD PTR [ebp+0x74d3efef]
  404834:	xor    dh,BYTE PTR [ecx-0x1f]
  404837:	xor    BYTE PTR fs:[ecx+0x6f],bl
  40483b:	jp     0x404895
  40483d:	cdq    
  40483e:	sub    DWORD PTR [esi+0x3c163d2],ebp
  404844:	dec    ebx
  404845:	(bad)  
  404846:	and    al,bh
  404848:	sbb    edi,ebp
  40484a:	pop    es
  40484b:	or     eax,0xf2fa6dc7
  404850:	sub    BYTE PTR [edx],bh
  404852:	out    0x89,al
  404854:	cld    
  404855:	cdq    
  404856:	fiadd  DWORD PTR [esi]
  404858:	or     DWORD PTR [eax+edi*2],0x3b
  40485c:	xchg   DWORD PTR [eax+0x34917ab4],edx
  404862:	pop    ecx
  404863:	sbb    eax,0xfe09bfd
  404868:	xchg   eax,eax
  40486a:	dec    ebp
  40486b:	pushf  
  40486c:	add    BYTE PTR [ecx+0x17],dh
  40486f:	inc    ebx
  404870:	daa    
  404871:	jmp    FWORD PTR [edi+0x1c443b2d]
  404877:	xchg   esp,eax
  404878:	xlat   BYTE PTR ds:[ebx]
  404879:	jmp    0x69e95ea3
  40487e:	imul   ebx,DWORD PTR [esi],0x9f0ee635
  404884:	jno    0x4048d8
  404886:	ret    
  404887:	push   ds
  404888:	retf   0xdbc4
  40488b:	cmp    DWORD PTR [esi-0x13a620b3],esi
  404891:	xor    eax,0x54a0765d
  404896:	and    DWORD PTR [edi+eiz*4+0x23],0x3e7e4ec9
  40489e:	fsubr  DWORD PTR [eax]
  4048a0:	fsub   st(2),st
  4048a2:	dec    esp
  4048a3:	fwait
  4048a4:	mov    WORD PTR [ecx],gs
  4048a6:	sub    al,0x8d
  4048a8:	mov    eax,0x1bd56ca5
  4048ad:	ret    0x654d
  4048b0:	or     BYTE PTR [ecx],bl
  4048b2:	jle    0x404885
  4048b4:	arpl   WORD PTR [edi+0x387eaf7e],ax
  4048ba:	outs   dx,DWORD PTR ds:[esi]
  4048bb:	cmp    al,0xf6
  4048bd:	(bad)  
  4048be:	mov    ah,0xb
  4048c0:	test   ax,0x6a66
  4048c4:	xor    ebp,0x5f
  4048c7:	xchg   edx,eax
  4048c8:	cmp    ecx,esp
  4048ca:	(bad)  
  4048cb:	mov    eax,ds:0x965ac334
  4048d0:	scas   eax,DWORD PTR es:[edi]
  4048d1:	push   esp
  4048d2:	xor    DWORD PTR [ecx-0xe],edx
  4048d5:	add    al,0xe8
  4048d7:	sbb    al,0xa4
  4048d9:	fist   DWORD PTR [ecx-0x7e]
  4048dc:	add    eax,0x3484240a
  4048e1:	arpl   WORD PTR [ecx-0x74],dx
  4048e4:	jmp    FWORD PTR [ebp-0x3ae4ef95]
  4048ea:	lahf   
  4048eb:	sbb    edx,DWORD PTR [ebx-0xc1837ee]
  4048f1:	xchg   DWORD PTR [edx-0xf],eax
  4048f4:	ss jle 0x4048fb
  4048f7:	pop    ebp
  4048f8:	push   ds
  4048f9:	test   BYTE PTR [ecx],cl
  4048fb:	push   ecx
  4048fc:	push   cs
  4048fd:	rcr    DWORD PTR [ecx],0x72
  404900:	mov    WORD PTR [eax-0x1cedc805],gs
  404906:	jno    0x4048f5
  404908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404909:	mov    al,ds:0xb99e4d51
  40490e:	clc    
  40490f:	out    dx,al
  404910:	push   0xdc2b1f88
  404915:	jne    0x404948
  404917:	cmp    al,0xbf
  404919:	cmp    edx,DWORD PTR [edx-0x2874410a]
  40491f:	mov    BYTE PTR [edi+0x2bcdba82],0x46
  404926:	adc    edi,ecx
  404928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404929:	stos   BYTE PTR es:[edi],al
  40492a:	scas   eax,DWORD PTR es:[edi]
  40492b:	add    al,0xda
  40492d:	xchg   esi,eax
  40492e:	and    BYTE PTR [ecx],bl
  404930:	mov    ds:0x994f0600,al
  404935:	enter  0x4856,0xfa
  404939:	data16 test BYTE PTR [edx],cl
  40493c:	les    ecx,FWORD PTR [eax-0x2824f97f]
  404942:	sbb    al,0xfd
  404944:	fist   DWORD PTR [edx-0x51]
  404947:	jae    0x404939
  404949:	out    dx,eax
  40494a:	mul    al
  40494c:	leave  
  40494d:	popa   
  40494e:	neg    BYTE PTR [ecx-0x7899ae54]
  404954:	fprem1 
  404956:	jmp    0x4565:0xec5acf50
  40495d:	sub    al,0x89
  40495f:	cmp    dl,BYTE PTR [ebp+ecx*4+0x6d]
  404963:	(bad)  
  404964:	cs cs in eax,dx
  404967:	mov    ebx,0xea5db703
  40496c:	outs   dx,BYTE PTR ds:[esi]
  40496d:	sub    eax,0xfc1845e4
  404972:	mov    eax,ds:0x9357c3e7
  404977:	and    al,0x9
  404979:	push   0x64
  40497b:	or     al,0x8
  40497d:	lods   al,BYTE PTR ds:[esi]
  40497e:	lahf   
  40497f:	push   ecx
  404980:	pop    esi
  404981:	mov    al,0x57
  404983:	sub    al,BYTE PTR [ecx+0x4b77356c]
  404989:	xor    BYTE PTR [edi+0x79f8b027],bl
  40498f:	popf   
  404990:	pop    edx
  404991:	pop    ecx
  404992:	out    0xf7,eax
  404994:	aad    0x79
  404996:	sysret 
  404998:	fadd   QWORD PTR [ebx-0x1b88911]
  40499e:	pushf  
  40499f:	retf   
  4049a0:	pop    esp
  4049a1:	jnp    0x404939
  4049a3:	jl     0x404a03
  4049a5:	outs   dx,DWORD PTR ds:[esi]
  4049a6:	cwde   
  4049a7:	cmp    eax,0x77db5ef1
  4049ac:	rol    BYTE PTR [bx+si-0x29],1
  4049b0:	jecxz  0x404a0b
  4049b2:	mov    ch,0x45
  4049b4:	jb     0x40498e
  4049b6:	jbe    0x4049b7
  4049b8:	test   BYTE PTR [edi+ebx*8+0x3e],dl
  4049bc:	mov    cl,0x12
  4049be:	adc    DWORD PTR [ebp-0x27],esi
  4049c1:	add    eax,DWORD PTR [esi+edi*1+0x6cccc2fe]
  4049c8:	pop    ss
  4049c9:	daa    
  4049ca:	fs ins BYTE PTR es:[edi],dx
  4049cc:	mov    bh,0x31
  4049ce:	in     eax,0x8e
  4049d0:	inc    ecx
  4049d1:	dec    ebp
  4049d2:	cmc    
  4049d3:	pop    es
  4049d4:	mov    ch,0x8f
  4049d6:	ja     0x404a00
  4049d8:	pop    eax
  4049d9:	adc    BYTE PTR [esi+0x8],cl
  4049dc:	jne    0x404964
  4049de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049df:	into   
  4049e0:	sub    BYTE PTR [ebx-0x29],ch
  4049e3:	gs dec ecx
  4049e5:	xor    eax,0x64c5f96d
  4049ea:	jmp    0x404a58
  4049ec:	out    0x1d,al
  4049ee:	fidiv  WORD PTR [eax-0x2e]
  4049f1:	sub    DWORD PTR [eax],edi
  4049f3:	mov    edi,0x2cc905f9
  4049f8:	or     DWORD PTR [edi+ebx*2-0x30],edi
  4049fc:	push   edx
  4049fd:	jb     0x404a0d
  4049ff:	pop    esp
  404a00:	scas   eax,DWORD PTR es:[edi]
  404a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a02:	lea    edx,[edi+ebp*8+0x6f80ca4d]
  404a09:	lods   eax,DWORD PTR ds:[esi]
  404a0a:	and    DWORD PTR [eax+edi*4],ebx
  404a0d:	inc    edx
  404a0e:	rcl    edi,0xd2
  404a11:	ss pop es
  404a13:	and    eax,0xd3499de7
  404a18:	sbb    bl,BYTE PTR [ebp+0x65b5a3fd]
  404a1e:	xchg   ebx,eax
  404a1f:	sbb    BYTE PTR [edi-0x654ec06a],ch
  404a25:	jmp    0x4049b6
  404a27:	(bad)  
  404a28:	outs   dx,DWORD PTR ds:[esi]
  404a29:	mov    DWORD PTR [eax],eax
  404a2b:	or     esp,esi
  404a2d:	cmc    
  404a2e:	fcom   DWORD PTR [edx+0x1d6618aa]
  404a34:	popa   
  404a35:	or     dl,BYTE PTR [ebx]
  404a37:	push   ecx
  404a38:	arpl   cx,cx
  404a3a:	pusha  
  404a3b:	fs push ss
  404a3d:	xchg   edi,eax
  404a3e:	fnsave [ebp-0x6f]
  404a41:	mov    bl,0x66
  404a43:	pop    edi
  404a44:	shl    esi,1
  404a46:	sbb    al,dh
  404a48:	lahf   
  404a49:	stos   DWORD PTR es:[edi],eax
  404a4a:	push   es
  404a4b:	pop    es
  404a4c:	pop    edi
  404a4d:	loope  0x404a94
  404a4f:	ror    DWORD PTR [edx+0x4],1
  404a52:	out    0x78,eax
  404a54:	sbb    BYTE PTR [esi-0x101bf0ae],ch
  404a5a:	sub    ebx,edx
  404a5c:	dec    ebp
  404a5d:	adc    DWORD PTR [edx+0x2d01e4d7],edx
  404a63:	push   0xddaec51d
  404a68:	nop
  404a69:	ror    BYTE PTR [ecx+edx*4],0x6b
  404a6d:	(bad)
  404a70:	int3   
  404a71:	xchg   esi,eax
  404a72:	cs sti 
  404a74:	push   ss
  404a75:	(bad)
  404a79:	xchg   edi,eax
  404a7a:	inc    eax
  404a7b:	sti    
  404a7c:	and    eax,0x5a468865
  404a81:	mov    BYTE PTR [edx+0x10],dh
  404a84:	inc    eax
  404a85:	js     0x404a82
  404a87:	push   ds
  404a88:	iret   
  404a89:	lds    eax,FWORD PTR [edi+0x5e5c271c]
  404a8f:	xchg   ebp,eax
  404a90:	clc    
  404a91:	popa   
  404a92:	ins    BYTE PTR es:[edi],dx
  404a93:	and    BYTE PTR [ecx+0x6624765c],ah
  404a99:	popa   
  404a9a:	cmp    eax,0xc772f131
  404a9f:	ins    DWORD PTR es:[edi],dx
  404aa0:	(bad)  
  404aa1:	push   0x33
  404aa3:	in     al,dx
  404aa4:	xor    ebx,edi
  404aa6:	(bad)  
  404aa7:	bound  ebp,QWORD PTR [edi-0x46]
  404aaa:	sbb    esp,esi
  404aac:	je     0x404ae9
  404aae:	sub    eax,0xc9d59176
  404ab3:	mov    edx,gs
  404ab5:	and    ah,dl
  404ab7:	js     0x404afb
  404ab9:	jle    0x404aef
  404abb:	lods   al,BYTE PTR ds:[esi]
  404abc:	ds push cs
  404abe:	gs mov bl,0x94
  404ac1:	mov    ch,0xb2
  404ac3:	sub    DWORD PTR [ebx-0x2c],0x2f
  404ac7:	cmp    DWORD PTR [edi+0x48],ebp
  404aca:	xchg   esi,eax
  404acb:	enter  0x2e33,0xe
  404acf:	sbb    eax,DWORD PTR [ecx+esi*8]
  404ad2:	dec    ebx
  404ad3:	shr    DWORD PTR [ebp-0x7fca1e16],cl
  404ad9:	add    BYTE PTR [edx-0xf],bh
  404adc:	sub    BYTE PTR [edx],dh
  404ade:	ret    0x5f11
  404ae1:	push   eax
  404ae2:	adc    BYTE PTR [edx+0x7d3b442],0x70
  404ae9:	and    eax,0xb15ee0e8
  404aee:	dec    edx
  404aef:	or     edx,DWORD PTR [ebp+0x63f8a172]
  404af5:	mov    esi,0x4a57da73
  404afa:	cs push esi
  404afc:	or     ebx,esp
  404afe:	mov    bh,BYTE PTR [ebx-0x20353c6e]
  404b04:	ja     0x404af6
  404b06:	enter  0xd1ed,0x60
  404b0a:	mov    edi,0x6f0419e4
  404b0f:	in     al,dx
  404b10:	test   BYTE PTR [edx-0x7379849b],0x38
  404b17:	hlt    
  404b18:	xor    ebx,ebx
  404b1a:	jbe    0x404b5c
  404b1c:	push   edi
  404b1d:	mov    ch,0x42
  404b1f:	lock pop DWORD PTR [ebx+0x7e]
  404b23:	mov    edx,ss
  404b25:	sub    dh,0x8d
  404b28:	sub    ah,BYTE PTR [esi+0x3b15deba]
  404b2e:	stos   BYTE PTR es:[edi],al
  404b2f:	rol    dl,1
  404b31:	jne    0x404af2
  404b33:	sbb    eax,0x2e612bea
  404b38:	cli    
  404b39:	push   esp
  404b3a:	dec    eax
  404b3b:	arpl   WORD PTR [ebx],cx
  404b3d:	or     al,BYTE PTR [edx+eiz*4+0x18b82c69]
  404b44:	and    DWORD PTR [ecx+0xd254ffa],edi
  404b4a:	int    0x67
  404b4c:	xlat   BYTE PTR ds:[ebx]
  404b4d:	loopne 0x404b9e
  404b4f:	pop    edx
  404b50:	sti    
  404b51:	(bad)  
  404b52:	sbb    eax,0xe419828c
  404b57:	fild   DWORD PTR [ecx-0x4d]
  404b5a:	icebp  
  404b5b:	add    al,0x7b
  404b5e:	push   es
  404b5f:	xor    DWORD PTR [edx+edx*4],esp
  404b62:	jg     0x404bd9
  404b64:	dec    ebp
  404b65:	mov    dl,0xce
  404b67:	out    0xd5,al
  404b69:	(bad)  
  404b6a:	xchg   ebx,eax
  404b6b:	inc    esi
  404b6c:	retf   0x5257
  404b6f:	xchg   edi,eax
  404b70:	xor    edi,eax
  404b72:	(bad)  [esi-0x4b]
  404b75:	pop    ebx
  404b76:	jo     0x404afa
  404b78:	add    eax,esi
  404b7a:	xchg   esp,esi
  404b7c:	icebp  
  404b7d:	mov    al,0xb9
  404b7f:	shl    DWORD PTR [esi],cl
  404b81:	cwde   
  404b82:	push   ss
  404b83:	fwait
  404b84:	or     dl,dl
  404b86:	sub    esi,esp
  404b88:	cmp    ah,bh
  404b8a:	sahf   
  404b8b:	mov    dl,0x79
  404b8d:	and    eax,0x839291d3
  404b92:	and    al,0xed
  404b94:	inc    ebx
  404b95:	push   edx
  404b96:	mov    bh,0x5
  404b98:	inc    esp
  404b99:	sub    al,0x19
  404b9b:	rcr    DWORD PTR [esi+ecx*2],0xf4
  404b9f:	inc    esp
  404ba0:	jge    0x404bd2
  404ba2:	or     DWORD PTR [eax-0x31],eax
  404ba5:	xor    dh,bl
  404ba7:	in     al,dx
  404ba8:	leave  
  404ba9:	or     al,BYTE PTR ds:0x407e5e0e
  404baf:	sti    
  404bb0:	sbb    edi,DWORD PTR ds:0x569b00a
  404bb6:	pop    esp
  404bb7:	inc    ebp
  404bb8:	mov    es,WORD PTR [edx+0x50aeb49f]
  404bbe:	retf   0x2862
  404bc1:	cmp    BYTE PTR [esi-0x15],bh
  404bc4:	stos   DWORD PTR es:[edi],eax
  404bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc6:	adc    edi,DWORD PTR [edi+0x524dda39]
  404bcc:	jecxz  0x404b8f
  404bce:	push   cs
  404bcf:	in     al,0x93
  404bd1:	sbb    esp,DWORD PTR [edx]
  404bd3:	mov    ecx,0xde32f30f
  404bd8:	in     al,0x88
  404bda:	pusha  
  404bdb:	xor    al,0xf1
  404bdd:	and    al,0x62
  404bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404be0:	add    dh,BYTE PTR [eax+0x1d]
  404be3:	lock icebp 
  404be5:	jo     0x404c40
  404be7:	sub    eax,0xca146a12
  404bec:	adc    dh,BYTE PTR [eax+0x48]
  404bef:	xchg   BYTE PTR [esi+0x3a],bh
  404bf2:	hlt    
  404bf3:	dec    ecx
  404bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf5:	sahf   
  404bf6:	xor    bl,cl
  404bf8:	clc    
  404bf9:	jne    0x404c67
  404bfb:	or     eax,0x75584ea
  404c00:	jge    0x404bc6
  404c02:	addr16 inc eax
  404c04:	or     DWORD PTR [ebx],esi
  404c06:	mov    ah,0xd7
  404c08:	pop    ebp
  404c09:	lods   eax,DWORD PTR ds:[esi]
  404c0a:	ins    BYTE PTR es:[edi],dx
  404c0b:	inc    ebp
  404c0c:	jne    0x404bcf
  404c0e:	mov    ds:0xde3aac41,eax
  404c13:	push   ecx
  404c14:	adc    BYTE PTR [eax-0x12],ah
  404c17:	data16 sti 
  404c19:	rcr    BYTE PTR [ebx+eax*2],1
  404c1c:	dec    eax
  404c1d:	mov    cl,0xdb
  404c1f:	(bad)  
  404c20:	fcomp  QWORD PTR [ecx]
  404c22:	jmp    0xebdb:0xd4a071e1
  404c29:	pop    edi
  404c2a:	xlat   BYTE PTR ds:[ebx]
  404c2b:	jmp    0xc09c:0x920387c7
  404c32:	dec    esi
  404c33:	stos   BYTE PTR es:[edi],al
  404c34:	lea    esi,[eax-0x28]
  404c37:	adc    al,0x81
  404c39:	dec    edx
  404c3a:	push   0x4e
  404c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c3d:	pop    ebp
  404c3e:	mov    esi,0xbf77ddf
  404c43:	test   eax,0x32130b1c
  404c48:	dec    edx
  404c49:	and    ch,bl
  404c4b:	push   edi
  404c4c:	stos   DWORD PTR es:[edi],eax
  404c4d:	fcomp  QWORD PTR [edi]
  404c4f:	retf   
  404c50:	jp     0x404c43
  404c52:	inc    edi
  404c53:	sub    al,0xb4
  404c55:	or     ch,cl
  404c57:	test   al,dl
  404c59:	scas   al,BYTE PTR es:[edi]
  404c5a:	shl    bh,0xb8
  404c5d:	sub    ah,dh
  404c5f:	xor    BYTE PTR [ecx],0xe3
  404c62:	push   0xafac60bc
  404c67:	cdq    
  404c68:	adc    al,0x99
  404c6a:	xchg   esp,eax
  404c6b:	mov    WORD PTR [eax+0x4d2f0b8b],?
  404c71:	inc    esi
  404c72:	sbb    BYTE PTR [ecx],bl
  404c74:	in     eax,0x5
  404c76:	inc    ebx
  404c77:	xchg   BYTE PTR [ebx+0x71fd061f],bl
  404c7d:	push   ds
  404c7e:	sub    al,0x3d
  404c80:	popf   
  404c81:	push   ss
  404c82:	loop   0x404c6c
  404c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c85:	cdq    
  404c86:	sahf   
  404c87:	adc    bl,BYTE PTR [ecx+0x5c]
  404c8a:	sar    edi,0x32
  404c8d:	xlat   BYTE PTR ds:[ebx]
  404c8e:	xor    eax,0x9020f0b1
  404c93:	push   ebx
  404c94:	imul   eax,DWORD PTR ds:0x29685ce3
  404c9b:	test   al,0x75
  404c9d:	xchg   ebp,eax
  404c9e:	push   esp
  404c9f:	cmp    al,BYTE PTR [ebx*4-0x31bfe2c1]
  404ca6:	leave  
  404ca7:	jmp    0xdf694688
  404cac:	sahf   
  404cad:	lock mov bh,0x9b
  404cb0:	xor    ebx,DWORD PTR [edi-0x65]
  404cb3:	ds sub esp,ecx
  404cb6:	pop    ds
  404cb7:	cmc    
  404cb8:	sub    DWORD PTR [ecx],esi
  404cba:	inc    ebp
  404cbb:	and    DWORD PTR [ecx+ebp*2],0x19
  404cbf:	(bad)  
  404cc0:	sbb    eax,0x59c04fe5
  404cc5:	aad    0x8d
  404cc7:	cmp    DWORD PTR [esi+0x75],esi
  404cca:	icebp  
  404ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ccc:	inc    edx
  404ccd:	xor    eax,0x34ea2e70
  404cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd4:	mov    edi,0xcfa33ef7
  404cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cda:	stc    
  404cdb:	sub    al,0xde
  404cdd:	xor    ecx,ecx
  404cdf:	dec    edx
  404ce0:	or     al,0x15
  404ce2:	or     edi,eax
  404ce4:	in     al,0xac
  404ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ce7:	pop    edx
  404ce8:	cmp    ch,BYTE PTR [edi-0x21]
  404ceb:	dec    esi
  404cec:	scas   al,BYTE PTR es:[edi]
  404ced:	loopne 0x404ca5
  404cef:	int    0x34
  404cf1:	pop    edx
  404cf2:	(bad)  
  404cf4:	cmp    bh,BYTE PTR [eax-0x3a]
  404cf7:	add    eax,0x4019be00
  404cfc:	add    BYTE PTR [bx-0x74],bh
  404d00:	adc    ah,BYTE PTR [ebp-0x6594072]
  404d06:	or     ch,bl
  404d08:	daa    
  404d09:	in     al,0x8d
  404d0b:	pop    eax
  404d0c:	fcmove st,st(5)
  404d0e:	nop    DWORD PTR [eax-0xf]
  404d12:	mov    esp,0x4da1a6d0
  404d17:	inc    ebp
  404d18:	cdq    
  404d19:	aaa    
  404d1a:	jae    0x404cc8
  404d1c:	ret    
  404d1d:	shr    esp,0x42
  404d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d21:	jmp    ecx
  404d23:	push   edi
  404d24:	mov    dl,0x3d
  404d26:	inc    ebx
  404d27:	xor    al,BYTE PTR [eax]
  404d29:	in     al,dx
  404d2a:	fistp  DWORD PTR [ecx+eax*4-0x3a]
  404d2e:	xchg   edx,eax
  404d2f:	or     al,0xb0
  404d31:	fwait
  404d32:	sbb    BYTE PTR [ecx+0x7b90d639],bl
  404d38:	xchg   DWORD PTR [edx],esp
  404d3a:	pop    ecx
  404d3b:	push   edx
  404d3c:	out    dx,eax
  404d3d:	jle    0x404d41
  404d3f:	pop    eax
  404d40:	jge    0x404ccb
  404d42:	xor    eax,0x83413e05
  404d47:	std    
  404d48:	daa    
  404d49:	push   ecx
  404d4a:	(bad)  
  404d4b:	push   edi
  404d4c:	mov    al,0x35
  404d4e:	push   es
  404d4f:	leave  
  404d50:	jmp    0x4d734286
  404d55:	stos   DWORD PTR es:[edi],eax
  404d56:	cmp    BYTE PTR [edi],bl
  404d58:	ffree  st(2)
  404d5a:	lock stos BYTE PTR es:[edi],al
  404d5c:	(bad)  
  404d5d:	push   esp
  404d5e:	adc    BYTE PTR [esi-0x74],0x87
  404d62:	stc    
  404d63:	cwde   
  404d64:	adc    eax,0xd1bd852a
  404d69:	mov    bl,0x5a
  404d6b:	enter  0x51ec,0x5f
  404d6f:	cs pop eax
  404d71:	sbb    DWORD PTR cs:[ecx+0x537f595e],ebp
  404d78:	imul   ebp,DWORD PTR [ebp-0x2e506bfc],0x3d
  404d7f:	lds    esp,FWORD PTR [ebx+0x56efce40]
  404d85:	inc    edi
  404d86:	sbb    esp,DWORD PTR ds:0x63ae1edc
  404d8c:	aas    
  404d8d:	and    al,0xc0
  404d8f:	lods   al,BYTE PTR ds:[esi]
  404d90:	cwde   
  404d91:	mov    ch,0x9a
  404d93:	push   esp
  404d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d95:	or     cl,BYTE PTR [ebp+0x12ce8151]
  404d9b:	push   esp
  404d9c:	in     eax,dx
  404d9d:	je     0x404da9
  404d9f:	(bad)
  404da2:	adc    edi,DWORD PTR ds:0x53992759
  404da8:	adc    bl,BYTE PTR ds:0x1cf89e01
  404dae:	aam    0xe8
  404db0:	xor    BYTE PTR [ebp-0x3e3f53e3],bl
  404db6:	hlt    
  404db7:	call   FWORD PTR [eax-0x630d1457]
  404dbd:	sub    ebx,DWORD PTR [ebx-0x3e9aa673]
  404dc3:	shl    ah,0x60
  404dc6:	and    eax,DWORD PTR [ebx]
  404dc8:	fucom  st(7)
  404dca:	xchg   esp,eax
  404dcb:	jmp    0x51c:0x60cc733d
  404dd2:	jno    0x404dc5
  404dd4:	adc    eax,0x5c5603b3
  404dd9:	in     al,0x13
  404ddb:	sahf   
  404ddc:	jp     0x404e08
  404dde:	mov    edx,0xb9d8f64a
  404de3:	sar    DWORD PTR gs:[eax],0x69
  404de7:	cdq    
  404de8:	scas   eax,DWORD PTR es:[di]
  404dea:	mov    dh,0xfc
  404dec:	sub    bh,al
  404dee:	jbe    0x404e4b
  404df0:	xchg   ebx,eax
  404df1:	sbb    bh,0xc8
  404df4:	jo     0x404e1c
  404df6:	aam    0x26
  404df8:	je     0x404ed6
  404dfe:	and    eax,DWORD PTR ds:0x42b010
  404e04:	mov    eax,DWORD PTR [ebp+0x14]
  404e07:	and    DWORD PTR ds:0x42901c,0x0
  404e11:	jmp    0x404e23
  404e16:	mov    ebx,DWORD PTR ds:0x42901c
  404e1c:	inc    ebx
  404e1d:	mov    DWORD PTR ds:0x42901c,ebx
  404e23:	cmp    DWORD PTR ds:0x42901c,0x11
  404e2a:	jae    0x404e6a
  404e30:	cmp    DWORD PTR ds:0x42901c,0x1a
  404e37:	jne    0x404e53
  404e3d:	push   DWORD PTR [ebp-0x18]
  404e40:	push   DWORD PTR [ebp-0x28]
  404e43:	push   0x42e0e0
  404e48:	push   0x400000
  404e4d:	call   DWORD PTR ds:0x42e8eb
  404e53:	jmp    0x404e16
  404e58:	mov    ebx,DWORD PTR ds:0x42a01c
  404e5e:	sub    ebx,DWORD PTR ds:0x42d008
  404e64:	mov    DWORD PTR ds:0x42a01c,ebx
  404e6a:	mov    eax,DWORD PTR [eax]
  404e6c:	and    DWORD PTR ds:0x42b01c,0x0
  404e76:	mov    ebx,DWORD PTR ds:0x42b01c
  404e7c:	inc    ebx
  404e7d:	mov    DWORD PTR ds:0x42b01c,ebx
  404e83:	cmp    DWORD PTR ds:0x42b01c,0x6
  404e8a:	jne    0x404e96
  404e90:	call   DWORD PTR ds:0x42e8ef
  404e96:	cmp    DWORD PTR ds:0x42b01c,0x5
  404e9d:	jne    0x404eb2
  404ea3:	xor    ebx,ebx
  404ea5:	or     ebx,DWORD PTR ds:0x42b01c
  404eab:	inc    ebx
  404eac:	mov    DWORD PTR ds:0x42b01c,ebx
  404eb2:	cmp    DWORD PTR ds:0x42b01c,0x12
  404eb9:	jb     0x404e76
  404ebf:	xor    ebx,ebx
  404ec1:	or     ebx,DWORD PTR ds:0x429000
  404ec7:	add    ebx,DWORD PTR ds:0x42d014
  404ecd:	mov    DWORD PTR ds:0x429000,ebx
  404ed3:	mov    DWORD PTR [ebp-0x1c],eax
  404ed6:	mov    eax,ds:0x41cd65
  404edb:	mov    ebx,DWORD PTR ds:0x41ce0c
  404ee1:	sub    ebx,eax
  404ee3:	or     eax,DWORD PTR [eax+ebx*1]
  404ee6:	mov    eax,DWORD PTR [ebp-0x4]
  404ee9:	mov    DWORD PTR ds:0x42900c,0x13
  404ef3:	cmp    DWORD PTR ds:0x42900c,0x0
  404efa:	je     0x404f3f
  404f00:	cmp    DWORD PTR ds:0x42900c,0xa
  404f07:	jne    0x404f13
  404f0d:	call   DWORD PTR ds:0x42e8f3
  404f13:	cmp    DWORD PTR ds:0x42900c,0xb
  404f1a:	jne    0x404f2d
  404f20:	mov    ebx,DWORD PTR ds:0x42900c
  404f26:	dec    ebx
  404f27:	mov    DWORD PTR ds:0x42900c,ebx
  404f2d:	mov    ebx,DWORD PTR ds:0x42900c
  404f33:	dec    ebx
  404f34:	mov    DWORD PTR ds:0x42900c,ebx
  404f3a:	jmp    0x404ef3
  404f3f:	xor    eax,esi
  404f41:	add    ebx,0x5bdd
  404f47:	add    eax,edi
  404f49:	mov    DWORD PTR [ebp-0x8],eax
  404f4c:	and    ebx,eax
  404f4e:	mov    eax,DWORD PTR [ebp-0xc]
  404f51:	sbb    DWORD PTR ds:0x42a000,ecx
  404f57:	xor    eax,esi
  404f59:	add    eax,edi
  404f5b:	and    DWORD PTR ds:0x42b018,0x0
  404f65:	mov    ebx,DWORD PTR ds:0x42b018
  404f6b:	inc    ebx
  404f6c:	mov    DWORD PTR ds:0x42b018,ebx
  404f72:	cmp    DWORD PTR ds:0x42b018,0x1f
  404f79:	jne    0x404f8a
  404f7f:	push   0x42e0ac
  404f84:	call   DWORD PTR ds:0x42e8f7
  404f8a:	cmp    DWORD PTR ds:0x42b018,0x12
  404f91:	jb     0x404f65
  404f97:	mov    DWORD PTR [ebp-0x24],eax
  404f9a:	mov    eax,DWORD PTR [ebp-0x4]
  404f9d:	xor    eax,esi
  404f9f:	add    eax,edi
  404fa1:	mov    DWORD PTR [ebp-0x30],eax
  404fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  404fa7:	mov    eax,ds:0x41cd79
  404fac:	mov    eax,DWORD PTR [eax]
  404fae:	xor    DWORD PTR ds:0x42900c,eax
  404fb4:	xor    ebx,esi
  404fb6:	add    ebx,edi
  404fb8:	mov    DWORD PTR ds:0x42c01c,0x1a
  404fc2:	cmp    DWORD PTR ds:0x42c01c,0x0
  404fc9:	je     0x4050fc
  404fcf:	cmp    DWORD PTR ds:0x42c01c,0x3
  404fd6:	jne    0x404fe7
  404fdc:	push   0x42e018
  404fe1:	call   DWORD PTR ds:0x42e8fb
  404fe7:	cmp    DWORD PTR ds:0x42c01c,0x4
  404fee:	jne    0x404fff
  404ff4:	mov    eax,ds:0x42c01c
  404ff9:	dec    eax
  404ffa:	mov    ds:0x42c01c,eax
  404fff:	mov    eax,ds:0x42c01c
  405004:	dec    eax
  405005:	mov    ds:0x42c01c,eax
  40500a:	jmp    0x404fc2
  40500f:	mov    DWORD PTR ds:0x42b010,0x1e
  405019:	cmp    DWORD PTR ds:0x42b010,0x0
  405020:	je     0x4050fc
  405026:	cmp    DWORD PTR ds:0x42b010,0x29
  40502d:	jne    0x405039
  405033:	call   DWORD PTR ds:0x42e8ff
  405039:	mov    eax,ds:0x42b010
  40503e:	dec    eax
  40503f:	mov    ds:0x42b010,eax
  405044:	jmp    0x405019
  405049:	mov    DWORD PTR ds:0x42a004,0x16
  405053:	cmp    DWORD PTR ds:0x42a004,0x0
  40505a:	je     0x4050fc
  405060:	cmp    DWORD PTR ds:0x42a004,0xb
  405067:	jne    0x405082
  40506d:	push   0x6cef
  405072:	push   0x42a000
  405077:	push   0x4fd9
  40507c:	call   DWORD PTR ds:0x42e903
  405082:	cmp    DWORD PTR ds:0x42a004,0xc
  405089:	jne    0x40509a
  40508f:	mov    eax,ds:0x42a004
  405094:	dec    eax
  405095:	mov    ds:0x42a004,eax
  40509a:	mov    eax,ds:0x42a004
  40509f:	dec    eax
  4050a0:	mov    ds:0x42a004,eax
  4050a5:	jmp    0x405053
  4050aa:	mov    DWORD PTR ds:0x42901c,0x1f
  4050b4:	cmp    DWORD PTR ds:0x42901c,0x0
  4050bb:	je     0x4050fc
  4050c1:	cmp    DWORD PTR ds:0x42901c,0x22
  4050c8:	jne    0x4050e2
  4050ce:	push   DWORD PTR [ebp-0x1c]
  4050d1:	push   0x7ea8
  4050d6:	push   DWORD PTR [ebp-0x10]
  4050d9:	push   DWORD PTR [ebp-0x28]
  4050dc:	call   DWORD PTR ds:0x42e8c3
  4050e2:	mov    eax,ds:0x42901c
  4050e7:	dec    eax
  4050e8:	mov    ds:0x42901c,eax
  4050ed:	jmp    0x4050b4
  4050f2:	and    DWORD PTR ds:0x42d008,0x7d7b
  4050fc:	mov    eax,DWORD PTR [ebp-0x24]
  4050ff:	sub    eax,edi
  405101:	lea    ecx,[ebx-0x3272e2]
  405107:	and    DWORD PTR ds:0x42d00c,0x483b
  405111:	xor    eax,esi
  405113:	sub    DWORD PTR ds:0x42a000,0x7f75
  40511d:	xor    ecx,esi
  40511f:	cmp    ecx,eax
  405121:	mov    DWORD PTR ds:0x429010,0x207a
  40512b:	je     0x405268
  405131:	mov    eax,DWORD PTR [ebp-0x4]
  405134:	add    DWORD PTR ds:0x42a004,0x429018
  40513e:	xor    eax,esi
  405140:	add    eax,edi
  405142:	mov    DWORD PTR ds:0x42d010,0x65f6
  40514c:	cmp    ebx,eax
  40514e:	mov    DWORD PTR ds:0x42b00c,0x5c1b
  405158:	jne    0x405245
  40515e:	or     DWORD PTR ds:0x42a018,0x42d00c
  405168:	push   DWORD PTR [ebp+0x8]
  40516b:	sbb    DWORD PTR ds:0x429020,0x6ddf
  405175:	call   0x402803
  40517a:	mov    DWORD PTR ds:0x42a014,0x17
  405184:	cmp    DWORD PTR ds:0x42a014,0x0
  40518b:	je     0x4051de
  405191:	cmp    DWORD PTR ds:0x42a014,0xc
  405198:	jne    0x4051b2
  40519e:	push   0x42d5
  4051a3:	push   DWORD PTR [ebp-0x20]
  4051a6:	push   DWORD PTR [ebp-0x24]
  4051a9:	push   DWORD PTR [ebp-0x28]
  4051ac:	call   DWORD PTR ds:0x42e8c7
  4051b2:	cmp    DWORD PTR ds:0x42a014,0xd
  4051b9:	jne    0x4051cc
  4051bf:	mov    ecx,DWORD PTR ds:0x42a014
  4051c5:	dec    ecx
  4051c6:	mov    DWORD PTR ds:0x42a014,ecx
  4051cc:	mov    ecx,DWORD PTR ds:0x42a014
  4051d2:	dec    ecx
  4051d3:	mov    DWORD PTR ds:0x42a014,ecx
  4051d9:	jmp    0x405184
  4051de:	mov    DWORD PTR [ebp-0x14],eax
  4051e1:	mov    eax,DWORD PTR [ebp-0x4]
  4051e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4051e7:	xor    eax,esi
  4051e9:	add    eax,edi
  4051eb:	cmp    ecx,eax
  4051ed:	je     0x4052d3
  4051f3:	push   DWORD PTR [ebp-0x14]
  4051f6:	push   DWORD PTR [ebp+0x8]
  4051f9:	call   0x40ea45
  4051fe:	mov    DWORD PTR [ebp-0x14],eax
  405201:	mov    eax,DWORD PTR [ebp-0x4]
  405204:	mov    ecx,DWORD PTR [ebp-0x14]
  405207:	xor    eax,esi
  405209:	add    eax,edi
  40520b:	cmp    ecx,eax
  40520d:	je     0x4052d3
  405213:	mov    eax,DWORD PTR [ebp-0x14]
  405216:	mov    eax,DWORD PTR [eax+0x18]
  405219:	mov    DWORD PTR [ebp-0x24],eax
  40521c:	mov    eax,DWORD PTR [ebp-0x14]
  40521f:	mov    ecx,DWORD PTR [ebp+0x8]
  405222:	add    ecx,DWORD PTR [eax+0x20]
  405225:	mov    DWORD PTR [ebp-0x2c],ecx
  405228:	mov    eax,DWORD PTR [ebp-0x14]
  40522b:	mov    ecx,DWORD PTR [ebp+0x8]
  40522e:	add    ecx,DWORD PTR [eax+0x24]
  405231:	mov    DWORD PTR [ebp-0x34],ecx
  405234:	mov    eax,DWORD PTR [ebp-0x14]
  405237:	mov    ecx,DWORD PTR [ebp+0x8]
  40523a:	add    ecx,DWORD PTR [eax+0x1c]
  40523d:	mov    DWORD PTR [ebp-0x14],ecx
  405240:	jmp    0x40529b
  405245:	mov    eax,DWORD PTR [ebp-0x2c]
  405248:	mov    ecx,DWORD PTR [ebp+0x8]
  40524b:	add    ecx,DWORD PTR [eax+ebx*4]
  40524e:	mov    DWORD PTR [ebp-0x28],ecx
  405251:	mov    eax,DWORD PTR [ebp-0x4]
  405254:	mov    ecx,DWORD PTR [ebp-0x28]
  405257:	xor    eax,esi
  405259:	add    eax,edi
  40525b:	cmp    ecx,eax
  40525d:	je     0x40529b
  405263:	jmp    0x40528c
  405268:	mov    eax,DWORD PTR [ebp-0x4]
  40526b:	mov    ecx,DWORD PTR [ebp-0x8]
  40526e:	xor    eax,esi
  405270:	add    eax,edi
  405272:	cmp    ecx,eax
  405274:	mov    eax,DWORD PTR [ebp-0x4]
  405277:	je     0x4052d6
  40527d:	mov    ecx,DWORD PTR [ebp-0x30]
  405280:	xor    eax,esi
  405282:	add    eax,edi
  405284:	cmp    ecx,eax
  405286:	je     0x4052df
  40528c:	lea    eax,[ebp-0x8]
  40528f:	push   eax
  405290:	push   DWORD PTR [ebp-0x28]
  405293:	push   DWORD PTR [ebp+0xc]
  405296:	call   0x40eccc
  40529b:	mov    eax,DWORD PTR [ebp-0x4]
  40529e:	mov    ecx,DWORD PTR [ebp-0x8]
  4052a1:	xor    eax,esi
  4052a3:	add    eax,edi
  4052a5:	cmp    ecx,eax
  4052a7:	je     0x4052c2
  4052ad:	mov    eax,DWORD PTR [ebp-0x34]
  4052b0:	movzx  eax,WORD PTR [eax+ebx*2]
  4052b4:	mov    ecx,DWORD PTR [ebp-0x14]
  4052b7:	mov    eax,DWORD PTR [ecx+eax*4]
  4052ba:	mov    DWORD PTR [ebp-0x38],eax
  4052bd:	jmp    0x405268
  4052c2:	mov    eax,DWORD PTR [ebp-0xc]
  4052c5:	xor    eax,esi
  4052c7:	lea    ebx,[ebx+eax*1+0x3272e2]
  4052ce:	jmp    0x404fb8
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x4053fc
  4052df:	mov    eax,DWORD PTR [ebp-0x38]
  4052e2:	add    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    DWORD PTR [ebp-0x18],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052eb:	test   eax,eax
  4052ed:	je     0x405387
  4052f3:	mov    DWORD PTR [ebp-0x20],0x0
  4052fa:	push   0x3
  4052fc:	xor    edx,edx
  4052fe:	pop    edx
  4052ff:	add    edx,0x8
  405302:	push   edx
  405303:	pop    ecx
  405304:	push   0x6
  405306:	dec    ecx
  405307:	pop    ebx
  405308:	dec    ebx
  405309:	xchg   ebx,ecx
  40530b:	sub    ebx,ecx
  40530d:	xchg   ebx,ecx
  40530f:	dec    ecx
  405310:	mov    eax,DWORD PTR [ebp-0x1c]
  405313:	imul   eax,ecx
  405316:	sub    esp,eax
  405318:	mov    DWORD PTR [ebp-0x20],esp
  40531b:	mov    eax,DWORD PTR [ebp-0x4]
  40531e:	xor    eax,esi
  405320:	add    eax,edi
  405322:	jmp    0x405360
  405327:	mov    ecx,DWORD PTR [ebp-0xc]
  40532a:	mov    eax,DWORD PTR [ebp+0x8]
  40532d:	mov    edx,DWORD PTR [ebp+0x14]
  405330:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  405334:	xor    ecx,esi
  405336:	add    ecx,edi
  405338:	xor    edx,edx
  40533a:	div    ecx
  40533c:	mov    ecx,DWORD PTR [ebp-0x4]
  40533f:	xor    ecx,esi
  405341:	lea    eax,[ecx+eax*1+0x3272e2]
  405348:	mov    ecx,DWORD PTR [ebp+0x8]
  40534b:	mov    edx,DWORD PTR [ebp-0x20]
  40534e:	mov    DWORD PTR [edx+ecx*4],eax
  405351:	mov    eax,DWORD PTR [ebp-0xc]
  405354:	mov    ecx,DWORD PTR [ebp+0x8]
  405357:	xor    eax,esi
  405359:	lea    eax,[eax+ecx*1+0x3272e2]
  405360:	mov    DWORD PTR [ebp+0x8],eax
  405363:	mov    eax,DWORD PTR [ebp-0xc]
  405366:	mov    ecx,DWORD PTR [ebp+0x14]
  405369:	xor    eax,esi
  40536b:	add    eax,edi
  40536d:	imul   eax,DWORD PTR [ecx]
  405370:	mov    ecx,DWORD PTR [ebp-0x4]
  405373:	mov    edx,DWORD PTR [ebp+0x8]
  405376:	xor    ecx,esi
  405378:	lea    ecx,[ecx+edx*1+0x3272e2]
  40537f:	cmp    ecx,eax
  405381:	jne    0x405327
  405387:	mov    eax,DWORD PTR [ebp-0x4]
  40538a:	xor    eax,esi
  40538c:	add    eax,edi
  40538e:	mov    DWORD PTR [ebp-0x10],eax
  405391:	mov    ebx,0x65655
  405396:	add    ebx,0x3234
  40539c:	xchg   ebx,esi
  40539e:	xor    ebx,ebx
  4053a0:	push   esi
  4053a1:	mov    esi,ebx
  4053a3:	pop    ebx
  4053a4:	mov    edx,esi
  4053a6:	add    ebx,0x1002
  4053ac:	lea    eax,[ebp-0x18]
  4053af:	add    edx,eax
  4053b1:	add    edx,0x5
  4053b4:	push   edx
  4053b5:	inc    esi
  4053b6:	pop    ecx
  4053b7:	dec    ecx
  4053b8:	xchg   ecx,eax
  4053b9:	dec    eax
  4053ba:	xchg   ecx,eax
  4053bb:	dec    ecx
  4053bc:	xchg   ecx,edx
  4053be:	dec    edx
  4053bf:	push   edx
  4053c0:	mov    edx,ebx
  4053c2:	pop    ebx
  4053c3:	dec    ebx
  4053c4:	call   DWORD PTR [ebx]
  4053c6:	cmp    DWORD PTR [ebp+0x10],esi
  4053c9:	je     0x4053e8
  4053cf:	xchg   edx,eax
  4053d0:	push   0xb
  4053d2:	pop    ecx
  4053d3:	push   0x4
  4053d5:	pop    ebx
  4053d6:	inc    ebx
  4053d7:	xchg   ebx,ecx
  4053d9:	sub    ebx,ecx
  4053db:	xchg   ebx,ecx
  4053dd:	dec    ecx
  4053de:	dec    ecx
  4053df:	mov    eax,DWORD PTR [ebp-0x1c]
  4053e2:	imul   eax,ecx
  4053e5:	add    esp,eax
  4053e7:	xchg   edx,eax
  4053e8:	push   eax
  4053e9:	xor    ebx,ebx
  4053eb:	mov    edx,esp
  4053ed:	dec    edx
  4053ee:	inc    ebx
  4053ef:	add    ebx,DWORD PTR [edx+ebx*1]
  4053f2:	dec    ebx
  4053f3:	xor    edx,edx
  4053f5:	add    DWORD PTR [ebp-0x10],ebx
  4053f8:	pop    ebx
  4053f9:	mov    eax,DWORD PTR [ebp-0x10]
  4053fc:	pop    edi
  4053fd:	pop    esi
  4053fe:	pop    ebx
  4053ff:	leave  
  405400:	ret    0x10
  405403:	push   ebp
  405404:	mov    ebp,esp
  405406:	sub    esp,0x7c
  405409:	mov    DWORD PTR ds:0x42c018,0x17
  405413:	cmp    DWORD PTR ds:0x42c018,0x0
  40541a:	je     0x40544a
  405420:	cmp    DWORD PTR ds:0x42c018,0x20
  405427:	jne    0x405438
  40542d:	push   0x8a80
  405432:	call   DWORD PTR ds:0x42e8cb
  405438:	mov    eax,ds:0x42c018
  40543d:	dec    eax
  40543e:	mov    ds:0x42c018,eax
  405443:	jmp    0x405413
  405448:	adc    eax,ecx
  40544a:	push   esi
  40544b:	sub    esi,0x3b9
  405451:	push   edi
  405452:	mov    edi,DWORD PTR ds:0x41ce18
  405458:	mov    eax,ds:0x41cd89
  40545d:	sub    edi,eax
  40545f:	add    edi,DWORD PTR [edi+eax*1]
  405462:	mov    eax,ds:0x42e2b7
  405467:	and    DWORD PTR ds:0x42b018,0x0
  405471:	jmp    0x405483
  405476:	mov    ecx,DWORD PTR ds:0x42b018
  40547c:	inc    ecx
  40547d:	mov    DWORD PTR ds:0x42b018,ecx
  405483:	cmp    DWORD PTR ds:0x42b018,0x10
  40548a:	jae    0x4054d5
  405490:	cmp    DWORD PTR ds:0x42b018,0x5
  405497:	jne    0x4054b3
  40549d:	push   0x429020
  4054a2:	push   DWORD PTR [ebp-0x20]
  4054a5:	push   DWORD PTR [ebp-0x20]
  4054a8:	push   0x7ab5
  4054ad:	call   DWORD PTR ds:0x42e8cf
  4054b3:	cmp    DWORD PTR ds:0x42b018,0x4
  4054ba:	jne    0x4054cf
  4054c0:	xor    ecx,ecx
  4054c2:	or     ecx,DWORD PTR ds:0x42b018
  4054c8:	inc    ecx
  4054c9:	mov    DWORD PTR ds:0x42b018,ecx
  4054cf:	jmp    0x405476
  4054d4:	dec    edi
  4054d5:	mov    DWORD PTR [ebp-0x24],eax
  4054d8:	sbb    eax,DWORD PTR ds:0x42d000
  4054de:	mov    eax,ds:0x42e3c3
  4054e3:	mov    DWORD PTR [ebp-0x34],eax
  4054e6:	mov    DWORD PTR ds:0x42c014,0x14
  4054f0:	cmp    DWORD PTR ds:0x42c014,0x0
  4054f7:	je     0x405540
  4054fd:	cmp    DWORD PTR ds:0x42c014,0x2
  405504:	jne    0x405515
  40550a:	push   0x6dea
  40550f:	call   DWORD PTR ds:0x42e913
  405515:	cmp    DWORD PTR ds:0x42c014,0x3
  40551c:	jne    0x405530
  405522:	xor    eax,eax
  405524:	xor    eax,DWORD PTR ds:0x42c014
  40552a:	dec    eax
  40552b:	mov    ds:0x42c014,eax
  405530:	mov    eax,ds:0x42c014
  405535:	dec    eax
  405536:	mov    ds:0x42c014,eax
  40553b:	jmp    0x4054f0
  405540:	and    DWORD PTR [ebp-0x30],0x0
  405544:	mov    eax,ds:0x41cd9d
  405549:	mov    eax,DWORD PTR [eax]
  40554b:	adc    DWORD PTR ds:0x42c010,eax
  405551:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  405558:	add    edi,edi
  40555a:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405561:	mov    eax,DWORD PTR [ebp-0x10]
  405564:	mov    ecx,DWORD PTR [ebp-0x10]
  405567:	and    DWORD PTR ds:0x42c000,0x0
  405571:	jmp    0x405583
  405576:	mov    edi,DWORD PTR ds:0x42c000
  40557c:	inc    edi
  40557d:	mov    DWORD PTR ds:0x42c000,edi
  405583:	cmp    DWORD PTR ds:0x42c000,0x19
  40558a:	jae    0x4055bb
  405590:	cmp    DWORD PTR ds:0x42c000,0x1c
  405597:	jne    0x4055b0
  40559d:	push   DWORD PTR [ebp-0x20]
  4055a0:	push   0x5aa1
  4055a5:	push   0x4e93
  4055aa:	call   DWORD PTR ds:0x42e8d3
  4055b0:	jmp    0x405576
  4055b5:	and    esi,DWORD PTR ds:0x42b004
  4055bb:	sub    eax,ecx
  4055bd:	adc    DWORD PTR ds:0x42c014,ecx
  4055c3:	mov    DWORD PTR [ebp-0x10],eax
  4055c6:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  4055cd:	sbb    esi,ecx
  4055cf:	mov    eax,DWORD PTR [ebp-0x18]
  4055d2:	mov    ecx,DWORD PTR [ebp-0x18]
  4055d5:	or     DWORD PTR ds:0x42a00c,ecx
  4055db:	sub    eax,ecx
  4055dd:	mov    DWORD PTR [ebp-0x18],eax
  4055e0:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4055e7:	add    esi,DWORD PTR ds:0x42b018
  4055ed:	mov    eax,DWORD PTR [ebp-0xc]
  4055f0:	xor    edi,edi
  4055f2:	xor    edi,DWORD PTR ds:0x41cdd8
  4055f8:	mov    esi,DWORD PTR ds:0x41ce34
  4055fe:	sub    esi,edi
  405600:	imul   edi,DWORD PTR [edi+esi*1]
  405604:	mov    ecx,DWORD PTR [ebp-0xc]
  405607:	mov    DWORD PTR ds:0x429020,0x15
  405611:	cmp    DWORD PTR ds:0x429020,0x0
  405618:	je     0x40566c
  40561e:	cmp    DWORD PTR ds:0x429020,0xb
  405625:	jne    0x40563e
  40562b:	push   DWORD PTR [ebp-0x24]
  40562e:	push   0x42e000
  405633:	push   0x429018
  405638:	call   DWORD PTR ds:0x42e917
  40563e:	cmp    DWORD PTR ds:0x429020,0xc
  405645:	jne    0x40565a
  40564b:	xor    esi,esi
  40564d:	or     esi,DWORD PTR ds:0x429020
  405653:	dec    esi
  405654:	mov    DWORD PTR ds:0x429020,esi
  40565a:	mov    esi,DWORD PTR ds:0x429020
  405660:	dec    esi
  405661:	mov    DWORD PTR ds:0x429020,esi
  405667:	jmp    0x405611
  40566c:	sub    eax,ecx
  40566e:	mov    DWORD PTR [ebp-0xc],eax
  405671:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  405678:	mov    eax,DWORD PTR [ebp-0x1c]
  40567b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40567e:	sub    eax,ecx
  405680:	mov    DWORD PTR [ebp-0x1c],eax
  405683:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  40568a:	mov    eax,DWORD PTR [ebp-0x20]
  40568d:	mov    ecx,DWORD PTR [ebp-0x20]
  405690:	sub    eax,ecx
  405692:	mov    DWORD PTR [ebp-0x20],eax
  405695:	mov    eax,DWORD PTR [ebp-0x2c]
  405698:	mov    ecx,DWORD PTR [ebp-0x20]
  40569b:	mov    esi,0x751089b
  4056a0:	xor    eax,esi
  4056a2:	mov    edi,0x3272e2
  4056a7:	add    eax,edi
  4056a9:	or     eax,ecx
  4056ab:	mov    DWORD PTR [ebp-0x20],eax
  4056ae:	mov    eax,DWORD PTR [ebp-0x4]
  4056b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4056b4:	sub    eax,ecx
  4056b6:	mov    DWORD PTR [ebp-0x4],eax
  4056b9:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  4056c0:	mov    eax,DWORD PTR [ebp-0xc]
  4056c3:	xor    eax,esi
  4056c5:	add    eax,edi
  4056c7:	push   eax
  4056c8:	mov    eax,DWORD PTR [ebp-0x10]
  4056cb:	xor    eax,esi
  4056cd:	add    eax,edi
  4056cf:	push   eax
  4056d0:	mov    eax,DWORD PTR [ebp-0x4]
  4056d3:	xor    eax,esi
  4056d5:	add    eax,edi
  4056d7:	push   eax
  4056d8:	lea    eax,[ebp-0x7c]
  4056db:	push   eax
  4056dc:	push   DWORD PTR [ebp-0x2c]
  4056df:	push   DWORD PTR [ebp-0x28]
  4056e2:	call   0x40ebe9
  4056e7:	test   eax,eax
  4056e9:	je     0x405717
  4056ef:	lea    eax,[ebp-0x7c]
  4056f2:	push   eax
  4056f3:	mov    eax,DWORD PTR [ebp-0x28]
  4056f6:	xor    eax,esi
  4056f8:	add    eax,edi
  4056fa:	push   eax
  4056fb:	mov    eax,DWORD PTR [ebp-0x24]
  4056fe:	add    eax,0xaa
  405703:	push   eax
  405704:	mov    eax,DWORD PTR [ebp-0x24]
  405707:	mov    eax,DWORD PTR [eax+0x198]
  40570d:	push   DWORD PTR [eax]
  40570f:	call   0x40294c
  405714:	mov    DWORD PTR [ebp-0x14],eax
  405717:	lea    eax,[ebp+0x4]
  40571a:	mov    DWORD PTR [ebp-0x30],eax
  40571d:	mov    eax,DWORD PTR [ebp-0x14]
  405720:	test   eax,eax
  405722:	je     0x40578a
  405728:	lea    eax,[ebp-0x8]
  40572b:	mov    DWORD PTR [ebp-0x38],eax
  40572e:	mov    eax,DWORD PTR [ebp-0x34]
  405731:	mov    DWORD PTR [ebp-0x8],eax
  405734:	mov    eax,DWORD PTR [ebp-0x8]
  405737:	mov    ecx,DWORD PTR [ebp-0x14]
  40573a:	sub    eax,ecx
  40573c:	mov    DWORD PTR [ebp-0x8],eax
  40573f:	mov    ecx,DWORD PTR [ebp-0x4]
  405742:	xor    ecx,esi
  405744:	mov    eax,0xffcd8d1e
  405749:	sub    eax,ecx
  40574b:	add    DWORD PTR [ebp-0x8],eax
  40574e:	mov    eax,DWORD PTR [ebp-0x8]
  405751:	mov    ecx,DWORD PTR [ebp-0x14]
  405754:	mov    DWORD PTR [ecx+0x1],eax
  405757:	mov    eax,DWORD PTR [ebp-0x14]
  40575a:	push   DWORD PTR [ebp-0x24]
  40575d:	mov    BYTE PTR [eax],0xe9
  405760:	mov    eax,ds:0x42e133
  405765:	push   DWORD PTR [eax]
  405767:	push   DWORD PTR ds:0x42e38f
  40576d:	push   DWORD PTR ds:0x42e13b
  405773:	push   DWORD PTR ds:0x42e36f
  405779:	push   DWORD PTR ds:0x42e683
  40577f:	push   DWORD PTR [ebp-0x28]
  405782:	push   DWORD PTR [ebp-0x2c]
  405785:	mov    eax,DWORD PTR [ebp-0x14]
  405788:	call   eax
  40578a:	mov    eax,DWORD PTR [ebp-0x30]
  40578d:	mov    ecx,DWORD PTR ds:0x42e333
  405793:	add    DWORD PTR [eax],ecx
  405795:	pop    edi
  405796:	pop    esi
  405797:	leave  
  405798:	ret    
  405799:	push   ebp
  40579a:	mov    ebp,esp
  40579c:	sub    esp,0x18
  40579f:	mov    DWORD PTR ds:0x429014,0x19
  4057a9:	cmp    DWORD PTR ds:0x429014,0x0
  4057b0:	je     0x405814
  4057b6:	cmp    DWORD PTR ds:0x429014,0xd
  4057bd:	jne    0x4057d5
  4057c3:	push   DWORD PTR [ebp-0x20]
  4057c6:	push   DWORD PTR [ebp-0x24]
  4057c9:	push   DWORD PTR [ebp-0x24]
  4057cc:	push   DWORD PTR [ebp-0x28]
  4057cf:	call   DWORD PTR ds:0x42e8d7
  4057d5:	cmp    DWORD PTR ds:0x429014,0xe
  4057dc:	jne    0x4057f1
  4057e2:	xor    edx,edx
  4057e4:	xor    edx,DWORD PTR ds:0x429014
  4057ea:	dec    edx
  4057eb:	mov    DWORD PTR ds:0x429014,edx
  4057f1:	mov    edx,DWORD PTR ds:0x429014
  4057f7:	dec    edx
  4057f8:	mov    DWORD PTR ds:0x429014,edx
  4057fe:	jmp    0x4057a9
  405803:	mov    ecx,DWORD PTR ds:0x41cd6d
  405809:	mov    edx,DWORD PTR ds:0x41cd85
  40580f:	sub    edx,ecx
  405811:	and    ecx,DWORD PTR [ecx+edx*1]
  405814:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  40581b:	sub    DWORD PTR ds:0x42d00c,0x7538
  405825:	lea    eax,[ebp+0x14]
  405828:	mov    DWORD PTR [ebp-0x4],eax
  40582b:	movzx  edx,WORD PTR ds:0x42b014
  405832:	sbb    DWORD PTR ds:0x42d01c,edx
  405838:	push   esi
  405839:	mov    esi,0xf89c8585
  40583e:	mov    edx,DWORD PTR ds:0x42d008
  405844:	and    DWORD PTR ds:0x42c010,edx
  40584a:	mov    DWORD PTR [ebp-0xc],esi
  40584d:	sbb    DWORD PTR ds:0x42900c,0x3284
  405857:	lea    eax,[ebp-0xc]
  40585a:	add    DWORD PTR ds:0x429024,0x6cdb
  405864:	mov    DWORD PTR [ebp-0x14],eax
  405867:	neg    eax
  405869:	mov    eax,DWORD PTR [ebp-0xc]
  40586c:	sbb    ecx,0x367b
  405872:	mov    edx,DWORD PTR [ebp-0x14]
  405875:	mov    ecx,0x751089b
  40587a:	sbb    DWORD PTR ds:0x42900c,0x429014
  405884:	xor    eax,ecx
  405886:	and    DWORD PTR ds:0x429014,0x429028
  405890:	add    eax,0x3272e2
  405895:	mov    DWORD PTR [edx],eax
  405897:	adc    edx,DWORD PTR ds:0x42d014
  40589d:	mov    eax,ds:0x42e12f
  4058a2:	adc    edx,DWORD PTR ds:0x42d008
  4058a8:	mov    edx,DWORD PTR [ebp-0x4]
  4058ab:	mov    eax,DWORD PTR [eax]
  4058ad:	xor    DWORD PTR ds:0x42b000,0x42a008
  4058b7:	add    eax,DWORD PTR [edx]
  4058b9:	push   edi
  4058ba:	and    edx,DWORD PTR ds:0x42a00c
  4058c0:	mov    DWORD PTR [ebp-0x8],eax
  4058c3:	movzx  eax,WORD PTR ds:0x42b000
  4058ca:	sub    DWORD PTR ds:0x42a010,eax
  4058d0:	mov    edi,DWORD PTR [ebp+0x8]
  4058d3:	xor    DWORD PTR ds:0x429018,0x6981
  4058dd:	jmp    0x407c2c
  4058e2:	mov    dh,0x31
  4058e4:	mov    ecx,0xb277bb1f
  4058e9:	jno    0x405908
  4058eb:	push   edi
  4058ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058ed:	xor    DWORD PTR [ebp-0x24],edx
  4058f0:	(bad)  
  4058f1:	shl    BYTE PTR [edi+ebx*2],1
  4058f4:	jl     0x405972
  4058f6:	dec    esi
  4058f7:	pop    edi
  4058f8:	jl     0x405976
  4058fa:	in     al,dx
  4058fb:	inc    ecx
  4058fc:	mov    ebp,0xa76c67c3
  405901:	or     BYTE PTR [edx-0x77],0xfe
  405905:	adc    ebx,DWORD PTR [edi]
  405907:	fld    DWORD PTR [esi]
  405909:	sbb    ah,BYTE PTR [ecx-0x67f9bc95]
  40590f:	push   ebx
  405910:	(bad)  
  405911:	xchg   esi,eax
  405912:	sbb    DWORD PTR [ebx-0x3d],edi
  405915:	not    DWORD PTR [ebx-0x48401266]
  40591b:	adc    esi,DWORD PTR [ebp-0x7]
  40591e:	fstp   st(4)
  405920:	scas   eax,DWORD PTR es:[edi]
  405921:	leave  
  405922:	mov    esi,0x632e9db5
  405927:	stc    
  405928:	ins    DWORD PTR es:[edi],dx
  405929:	(bad)  
  40592a:	dec    edx
  40592b:	xchg   DWORD PTR [esi-0x32],eax
  40592e:	sbb    BYTE PTR [esi+0x13],ah
  405931:	in     eax,0xbb
  405933:	dec    ebx
  405934:	inc    edx
  405935:	sbb    edx,ecx
  405937:	adc    BYTE PTR [esi+0x6b9529a],cl
  40593d:	(bad)  
  40593e:	test   BYTE PTR [edi+edi*1+0x4a],0x33
  405943:	aaa    
  405944:	mov    ds:0x839dcd6d,eax
  405949:	and    al,0x27
  40594b:	(bad)  
  40594d:	fidiv  DWORD PTR [esi+ecx*4-0xdd8f41b]
  405954:	sub    eax,DWORD PTR [ecx]
  405956:	adc    edx,DWORD PTR [eax+0x55]
  405959:	xchg   ecx,eax
  40595a:	mov    eax,ds:0x2d7a5ccd
  40595f:	add    ebx,DWORD PTR [ebx+0x16]
  405962:	inc    edi
  405963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405964:	jno    0x4059b4
  405966:	(bad)  
  405967:	jbe    0x4059d2
  405969:	aad    0x45
  40596b:	cmp    ch,al
  40596d:	xchg   DWORD PTR ds:0xdae55005,eax
  405973:	mov    ah,0xe2
  405975:	mul    BYTE PTR ds:0xede5c9a8
  40597b:	enter  0xf399,0x49
  40597f:	stos   BYTE PTR es:[edi],al
  405980:	mov    ebx,0xbb2613e9
  405985:	out    dx,al
  405986:	outs   dx,BYTE PTR ds:[esi]
  405987:	rcl    bh,0x6c
  40598a:	pop    edi
  40598b:	sbb    al,BYTE PTR [edi+edi*2]
  40598e:	inc    ecx
  40598f:	call   0xf9d5:0x78645eec
  405996:	jecxz  0x4059b7
  405998:	push   ebp
  405999:	lds    eax,FWORD PTR fs:[ecx-0x52]
  40599d:	and    eax,0x1798081c
  4059a2:	adc    DWORD PTR [ecx],0x21
  4059a5:	pop    esp
  4059a6:	add    ecx,DWORD PTR [ecx-0x6b06f961]
  4059ac:	pop    ss
  4059ad:	repz cmp eax,0x2cafb3ef
  4059b3:	xchg   esp,eax
  4059b4:	ss jmp 0xf80146d0
  4059ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059bb:	jno    0x4059bb
  4059bd:	call   0x7f9d:0xa4149767
  4059c4:	xchg   esp,eax
  4059c5:	or     BYTE PTR [ebp+0x77a3c615],0x3a
  4059cc:	cwde   
  4059cd:	dec    esi
  4059ce:	es inc esp
  4059d0:	add    al,0x9f
  4059d2:	inc    ebp
  4059d3:	mov    BYTE PTR [ebp-0x792f802d],ch
  4059d9:	mov    dl,0xb4
  4059db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059dc:	xor    al,0xbe
  4059de:	xor    bl,BYTE PTR [eax+0x78]
  4059e1:	inc    ecx
  4059e2:	jmp    0x9ca1aef1
  4059e7:	push   edi
  4059e8:	aaa    
  4059e9:	into   
  4059ea:	loop   0x40598b
  4059ec:	mov    ah,BYTE PTR [edi]
  4059ee:	aas    
  4059ef:	jl     0x4059f8
  4059f1:	xchg   esp,eax
  4059f2:	xchg   edi,eax
  4059f3:	aam    0xb0
  4059f5:	fild   WORD PTR [esi-0x4a1c4280]
  4059fb:	xchg   BYTE PTR [edx+0x7c],ch
  4059fe:	fucomip st,st(0)
  405a00:	xchg   edx,eax
  405a01:	pushf  
  405a02:	add    eax,0x8e8c0ea8
  405a07:	lods   eax,DWORD PTR ds:[esi]
  405a08:	cmp    esi,DWORD PTR [ebp-0x625456b8]
  405a0e:	int3   
  405a0f:	push   esi
  405a10:	mul    BYTE PTR [ebp-0x4a]
  405a13:	sub    al,0x87
  405a15:	(bad)
  405a18:	push   0x19
  405a1a:	adc    BYTE PTR [eax+0xb],cl
  405a1d:	rcl    DWORD PTR [ecx-0x26994fa5],0xd7
  405a24:	test   DWORD PTR [ebx],esp
  405a26:	je     0x405a61
  405a28:	xlat   BYTE PTR ds:[ebx]
  405a29:	idiv   edi
  405a2b:	pop    esp
  405a2c:	cdq    
  405a2d:	das    
  405a2e:	jnp    0x405aa1
  405a30:	pop    esp
  405a31:	xlat   BYTE PTR ds:[ebx]
  405a32:	retf   
  405a33:	mov    WORD PTR [ebp+0x15d0f30c],?
  405a39:	(bad)  
  405a3b:	fldenv [ebx-0x78]
  405a3e:	mov    ?,WORD PTR [ebp+0xcbe32d]
  405a44:	push   edx
  405a45:	and    dh,BYTE PTR ds:0xdf6dcb8c
  405a4b:	inc    ecx
  405a4c:	inc    eax
  405a4d:	int3   
  405a4e:	xchg   ebx,eax
  405a4f:	cld    
  405a50:	mov    dl,0xc3
  405a52:	cmp    edi,DWORD PTR ds:0x19929db5
  405a58:	adc    eax,0xe160b8d5
  405a5d:	and    DWORD PTR [edi-0x18],0xb23a965f
  405a64:	outs   dx,BYTE PTR ds:[esi]
  405a65:	mov    ds:0x52d74e62,al
  405a6a:	adc    eax,DWORD PTR [eax+edx*4]
  405a6d:	jno    0x405a6c
  405a6f:	cmp    DWORD PTR [edx-0x1131b70c],0x940c2862
  405a79:	inc    edx
  405a7a:	push   0x51
  405a7c:	imul   eax,DWORD PTR [esi],0x91bf5fd8
  405a82:	cwde   
  405a83:	sbb    bh,BYTE PTR [edi]
  405a85:	call   0x630a:0xaf80da88
  405a8c:	xor    DWORD PTR [ebp-0x48],ebx
  405a8f:	or     eax,0x735c5051
  405a94:	pop    ds
  405a95:	sub    BYTE PTR ds:0xed0db282,bh
  405a9b:	xchg   esi,eax
  405a9c:	add    dh,BYTE PTR ds:0xa92cb7b1
  405aa2:	ss push cs
  405aa4:	ins    DWORD PTR es:[edi],dx
  405aa5:	sub    eax,0x6a5e1b42
  405aaa:	inc    ebp
  405aab:	wbinvd 
  405aad:	xor    DWORD PTR [edi],eax
  405aaf:	cli    
  405ab0:	repz (bad) 
  405ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ab3:	dec    edx
  405ab4:	pop    edx
  405ab5:	pop    esi
  405ab6:	xor    al,bh
  405ab8:	or     BYTE PTR [ecx+0x421236ad],bl
  405abe:	stc    
  405abf:	pop    ebp
  405ac0:	push   cs
  405ac1:	pop    ss
  405ac2:	in     al,dx
  405ac3:	loopne 0x405ab1
  405ac5:	test   eax,0xe5c78909
  405aca:	into   
  405acb:	in     al,dx
  405acc:	pop    ebp
  405acd:	into   
  405ace:	inc    edi
  405acf:	mov    WORD PTR [ecx],?
  405ad1:	jmp    0x1618:0xfbea6d39
  405ad8:	jl     0x405a8d
  405ada:	mov    eax,ds:0x269f5fb2
  405adf:	in     al,dx
  405ae0:	scas   eax,DWORD PTR es:[edi]
  405ae1:	xchg   BYTE PTR [ebx+0x8b2bbc0],dl
  405ae7:	jp     0x405ab3
  405ae9:	mov    eax,0xd7caeee8
  405aee:	(bad)  
  405aef:	lock (bad) 
  405af1:	(bad)  
  405af3:	xlat   BYTE PTR ds:[ebx]
  405af4:	cmp    DWORD PTR [esi+esi*8-0x5f4bda9a],edi
  405afb:	cmp    BYTE PTR [esp+edx*4],dh
  405afe:	pop    ecx
  405aff:	out    0x98,al
  405b01:	pop    es
  405b02:	ja     0x405b65
  405b04:	icebp  
  405b05:	call   0x29d2:0x9d0a55c3
  405b0c:	mov    ebx,0x19dc2229
  405b11:	(bad)  
  405b12:	mov    al,0xa6
  405b14:	cwde   
  405b15:	mov    dh,0xc5
  405b17:	push   ebp
  405b18:	repnz jmp 0x1cad:0x9fc137e1
  405b20:	fcos   
  405b22:	imul   ebx,edx,0xffffffb3
  405b25:	xchg   DWORD PTR [ecx+esi*1],ebx
  405b28:	jo     0x405b93
  405b2a:	mov    ebx,0x1f786502
  405b2f:	sti    
  405b30:	mov    dh,0x9d
  405b32:	xchg   edi,eax
  405b33:	shl    eax,0x26
  405b36:	and    DWORD PTR [ebx-0x26870c50],edx
  405b3c:	cdq    
  405b3d:	mov    WORD PTR [ebp-0x75533761],ds
  405b43:	mov    ebp,0x99b9fbb2
  405b48:	add    DWORD PTR [ebx+0x44060177],0xfbfa32ec
  405b52:	ror    BYTE PTR [esi],1
  405b54:	call   0x3845a659
  405b59:	pop    edx
  405b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b5b:	lahf   
  405b5c:	jns    0x405baa
  405b5e:	nop
  405b5f:	add    BYTE PTR [eax-0x3f491eb5],bh
  405b65:	cwde   
  405b66:	push   eax
  405b67:	sti    
  405b68:	leave  
  405b69:	pop    esi
  405b6a:	jnp    0x405bdd
  405b6c:	sub    dl,BYTE PTR [ecx-0x42]
  405b6f:	add    BYTE PTR [ebp+0x3],bl
  405b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b73:	push   edx
  405b74:	ins    DWORD PTR es:[edi],dx
  405b75:	add    edx,DWORD PTR [edx]
  405b77:	ss mov al,0x37
  405b7a:	inc    ebp
  405b7b:	add    esp,DWORD PTR [eax+0x419381f1]
  405b81:	mov    ds:0x961ed2d3,al
  405b86:	mov    eax,ds:0x982cdc5c
  405b8b:	shl    BYTE PTR [ebx],1
  405b8d:	out    dx,al
  405b8e:	sar    BYTE PTR [eax-0xf55fc29],cl
  405b94:	inc    ecx
  405b95:	xchg   DWORD PTR [ebp-0x2afd7a36],edi
  405b9b:	pop    ds
  405b9c:	je     0x405b44
  405b9e:	mov    eax,0x650ba9ab
  405ba3:	shl    esp,cl
  405ba5:	(bad)
  405baa:	mov    ebp,0xe00fba04
  405baf:	mov    DWORD PTR [ecx],ebx
  405bb1:	mov    al,0x24
  405bb3:	call   0x1936402b
  405bb8:	lea    eax,ds:0xdf99758e
  405bbe:	(bad)  
  405bc0:	ret    
  405bc1:	out    dx,eax
  405bc2:	mov    DWORD PTR [ebx],edx
  405bc4:	xchg   ebx,eax
  405bc5:	jb     0x405ba3
  405bc7:	push   ebx
  405bc8:	vminpd ymm2,ymm4,ymm2
  405bcc:	fs mov esi,0x8a116ece
  405bd2:	jno    0x405b66
  405bd4:	fist   DWORD PTR ds:0xecee7b93
  405bda:	es sub al,0x38
  405bdd:	mov    ebx,0x19a4f938
  405be2:	mov    ah,0x46
  405be4:	popa   
  405be5:	and    cl,ah
  405be7:	jmp    0xf9809aad
  405bec:	les    ecx,FWORD PTR [ebx*4-0x179a9d54]
  405bf3:	inc    edx
  405bf4:	mov    bh,BYTE PTR [esi]
  405bf6:	out    0xf2,eax
  405bf8:	sub    DWORD PTR [ebx-0x4eda54ba],edi
  405bfe:	das    
  405bff:	in     eax,dx
  405c00:	jae    0x405c6c
  405c02:	popa   
  405c03:	fsubrp st(4),st
  405c05:	lods   al,BYTE PTR ds:[esi]
  405c06:	mov    dh,0xfa
  405c08:	mov    edx,0x7931e758
  405c0d:	pop    ebp
  405c0e:	ins    BYTE PTR es:[edi],dx
  405c0f:	mov    esi,0x1d58afda
  405c14:	popf   
  405c15:	dec    ecx
  405c16:	je     0x405c5b
  405c18:	jge    0x405ba7
  405c1a:	fdiv   QWORD PTR [eax-0x378d211f]
  405c20:	loopne 0x405be5
  405c22:	fimul  WORD PTR [esi]
  405c24:	fdivr  QWORD PTR [ebp+0x36740202]
  405c2a:	cli    
  405c2b:	pop    edi
  405c2c:	popf   
  405c2d:	jle    0x405bde
  405c2f:	dec    ebx
  405c30:	xor    al,0xd3
  405c32:	fs enter 0x78a6,0x1
  405c37:	stc    
  405c38:	dec    ebx
  405c39:	jmp    0x405c5f
  405c3b:	addr16 and eax,0x9589a4ef
  405c41:	dec    ebp
  405c42:	fwait
  405c43:	icebp  
  405c44:	loop   0x405c8d
  405c46:	out    0x9d,eax
  405c48:	inc    BYTE PTR [ecx]
  405c4a:	test   al,0x31
  405c4c:	pusha  
  405c4d:	xor    ch,bh
  405c4f:	and    BYTE PTR [edi-0x50],bh
  405c52:	icebp  
  405c53:	stc    
  405c54:	adc    DWORD PTR [edx],esi
  405c56:	adc    esi,DWORD PTR [ebp+0x17cc48c2]
  405c5c:	cmp    cl,dh
  405c5e:	xor    eax,0xfd4035b0
  405c63:	push   ds
  405c64:	cwde   
  405c65:	dec    edi
  405c66:	adc    edx,DWORD PTR [edi+0x4]
  405c69:	inc    edx
  405c6a:	popa   
  405c6b:	xchg   ecx,eax
  405c6c:	in     al,0xc2
  405c6e:	(bad)  
  405c6f:	enter  0x9cd4,0x77
  405c73:	jae    0x405c34
  405c75:	loope  0x405cad
  405c77:	mov    ?,WORD PTR [ebx-0x6763356]
  405c7d:	mov    esi,0x5a130fde
  405c82:	(bad)  
  405c83:	inc    esi
  405c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c85:	xor    al,0x54
  405c87:	in     eax,0x3d
  405c89:	mov    DWORD PTR [edx-0x4235c6cd],ebx
  405c8f:	test   DWORD PTR [eax-0x1883bebd],edi
  405c95:	out    0x86,al
  405c97:	pop    es
  405c98:	sahf   
  405c99:	jbe    0x405cb3
  405c9b:	fdiv   QWORD PTR [ebx-0x28]
  405c9e:	adc    edx,DWORD PTR [ecx]
  405ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca1:	call   0xab11:0x50b8dcaa
  405ca8:	cli    
  405ca9:	push   eax
  405caa:	idiv   bh
  405cac:	pop    edi
  405cad:	push   0xf8e6250b
  405cb2:	call   0xe2ce:0xcf816f0
  405cb9:	rol    DWORD PTR [esi+0x79],cl
  405cbc:	fild   WORD PTR [eax-0x65]
  405cbf:	cli    
  405cc0:	cmp    al,0xc4
  405cc2:	ins    BYTE PTR es:[edi],dx
  405cc3:	sub    edi,DWORD PTR [ebp-0x37560efe]
  405cc9:	stc    
  405cca:	es push ebp
  405ccc:	push   0xf2900e80
  405cd1:	retf   0xee81
  405cd4:	pop    esp
  405cd5:	dec    edi
  405cd6:	cmp    esp,DWORD PTR [ecx+0x4a]
  405cd9:	mov    es,ecx
  405cdb:	je     0x405ccf
  405cdd:	xchg   esi,eax
  405cde:	push   0x3d
  405ce0:	out    0xcf,eax
  405ce2:	cdq    
  405ce3:	and    eax,0x1d49a953
  405ce8:	jl     0x405c83
  405cea:	cmp    DWORD PTR [ebp-0x5812e4e0],edi
  405cf0:	xor    DWORD PTR [ecx+0x2d],esi
  405cf3:	shl    BYTE PTR [ebx],1
  405cf5:	mov    ebp,0xfb4c0c55
  405cfa:	arpl   WORD PTR [edx+0x5d0fef30],bx
  405d00:	es push edi
  405d02:	cmp    edx,DWORD PTR [edi+0xd4294c9]
  405d08:	idiv   ah
  405d0a:	pop    eax
  405d0b:	mov    cl,0x88
  405d0d:	enter  0x1e99,0xe4
  405d11:	xchg   ebp,eax
  405d12:	mov    cl,0xa
  405d14:	inc    esp
  405d15:	inc    ebp
  405d16:	dec    esp
  405d17:	pop    edi
  405d18:	outs   dx,DWORD PTR ds:[esi]
  405d19:	pop    ebp
  405d1a:	dec    edx
  405d1b:	sbb    BYTE PTR [eax+0x34eeb5e8],al
  405d21:	dec    ecx
  405d22:	inc    esp
  405d23:	adc    DWORD PTR [eax+0x3c],ebp
  405d26:	add    BYTE PTR [eax],0xf3
  405d29:	jb     0x405d87
  405d2b:	clc    
  405d2c:	and    bl,cl
  405d2e:	(bad)  
  405d2f:	sub    cl,dl
  405d31:	jb     0x405da2
  405d33:	jo     0x405d38
  405d35:	int    0x6a
  405d37:	inc    esp
  405d38:	dec    edi
  405d39:	iret   
  405d3a:	inc    eax
  405d3b:	pop    eax
  405d3c:	div    DWORD PTR [edx-0x4b51c268]
  405d42:	jne    0x405d82
  405d44:	sar    BYTE PTR [esi-0x735bdf6f],0x16
  405d4b:	and    eax,0x6a1c946d
  405d50:	dec    ebx
  405d51:	and    eax,0x21e7621e
  405d56:	rcl    dl,0x37
  405d59:	scas   eax,DWORD PTR es:[edi]
  405d5a:	scas   eax,DWORD PTR es:[edi]
  405d5b:	and    al,0x0
  405d5d:	sbb    eax,0x9daa70e8
  405d62:	and    DWORD PTR [edx],ebx
  405d64:	std    
  405d65:	pop    ds
  405d66:	sbb    DWORD PTR [eax-0x7ef0b6df],edx
  405d6c:	call   0x37ec89cd
  405d71:	cmp    ebx,DWORD PTR [eax-0x78]
  405d74:	retf   
  405d75:	std    
  405d76:	setle  BYTE PTR [ebp+0x75]
  405d7a:	pop    edi
  405d7b:	dec    esi
  405d7c:	sbb    edx,DWORD PTR [ebx]
  405d7e:	jmp    0x7e9f:0x54ba5395
  405d85:	lahf   
  405d86:	pop    esi
  405d87:	es cwde 
  405d89:	and    DWORD PTR [esi+0x34],esi
  405d8c:	or     DWORD PTR [eax-0x51],esp
  405d8f:	ins    BYTE PTR es:[edi],dx
  405d90:	cmc    
  405d91:	mov    esi,0xf1bd5194
  405d96:	daa    
  405d97:	shl    BYTE PTR ds:0x9c97568d,0x45
  405d9e:	outs   dx,DWORD PTR ds:[esi]
  405d9f:	bound  esi,QWORD PTR [ecx+0x266fa439]
  405da5:	inc    ebx
  405da6:	fucomp st(3)
  405da8:	push   ebp
  405da9:	adc    ebx,eax
  405dab:	dec    ecx
  405dac:	and    BYTE PTR [esi+0x6b61911c],0xef
  405db3:	jno    0x405dcf
  405db5:	pop    es
  405db6:	lods   eax,DWORD PTR ds:[esi]
  405db7:	push   ebx
  405db8:	adc    ah,BYTE PTR [edx+0x73a309b4]
  405dbe:	fsub   DWORD PTR [esi+edx*1-0x1720a313]
  405dc6:	fwait
  405dc7:	pop    edi
  405dc8:	sbb    bh,BYTE PTR [ecx+0x64]
  405dcb:	fdivrp st(3),st
  405dcd:	outs   dx,DWORD PTR ds:[esi]
  405dce:	dec    edx
  405dcf:	inc    ecx
  405dd0:	(bad)  
  405dd2:	mov    eax,DWORD PTR [eax+0x51]
  405dd5:	in     eax,0xb9
  405dd7:	lahf   
  405dd8:	add    eax,0xbe1cfb8c
  405ddd:	mov    eax,0x5297119a
  405de2:	(bad)  
  405de3:	or     eax,0xb70041d
  405de8:	sub    ebp,DWORD PTR [esi-0x2b1b3d1e]
  405dee:	fidiv  DWORD PTR [edi]
  405df0:	mov    DWORD PTR [esp+eiz*8],ecx
  405df3:	jb     0x405e58
  405df5:	mul    ebp
  405df7:	inc    eax
  405df8:	repnz aad 0x3c
  405dfb:	hlt    
  405dfc:	es int 0x3e
  405dff:	jae    0x405db8
  405e01:	and    al,0x92
  405e03:	and    BYTE PTR [ecx+0x276e63c],0xb0
  405e0a:	lods   al,BYTE PTR ds:[esi]
  405e0b:	call   0x8e16:0x32408948
  405e12:	clc    
  405e13:	cs cwde 
  405e15:	stos   DWORD PTR es:[edi],eax
  405e16:	xchg   edi,eax
  405e17:	aad    0x92
  405e19:	int    0xdf
  405e1b:	jb     0x405db5
  405e1d:	add    eax,0x1414aee2
  405e22:	jo     0x405e45
  405e24:	rol    DWORD PTR [esi],cl
  405e26:	jle    0x405e1b
  405e28:	mov    bl,0x4d
  405e2a:	jno    0x405df9
  405e2c:	push   es
  405e2d:	push   ds
  405e2e:	pushf  
  405e2f:	repnz (bad) 
  405e31:	lock jl 0x405e45
  405e34:	mov    ah,BYTE PTR [esp+eax*4+0x63df7fac]
  405e3b:	fnstsw WORD PTR [edi-0x8]
  405e3e:	neg    esp
  405e40:	ins    BYTE PTR es:[edi],dx
  405e41:	adc    eax,DWORD PTR [edi]
  405e43:	call   0xacc1:0x5a7b88a6
  405e4a:	dec    edi
  405e4b:	pop    es
  405e4c:	out    0x93,eax
  405e4e:	sbb    esi,DWORD PTR [ebx-0x650d007f]
  405e54:	(bad)  
  405e55:	into   
  405e56:	mov    ch,0x6f
  405e58:	cdq    
  405e59:	jp     0x405e16
  405e5b:	out    0x3e,eax
  405e5d:	xor    eax,0x6b322681
  405e62:	fnstsw WORD PTR [edi-0x23739efa]
  405e68:	inc    eax
  405e69:	push   esp
  405e6a:	mov    edx,0x566bdec4
  405e6f:	push   ss
  405e70:	pop    eax
  405e71:	out    dx,eax
  405e72:	ja     0x405e28
  405e74:	ins    BYTE PTR es:[edi],dx
  405e75:	arpl   WORD PTR [esi-0x5f],sp
  405e78:	comiss xmm6,DWORD PTR [eax+0x76684350]
  405e7f:	mov    al,ds:0x16aeb02e
  405e84:	xor    al,0x8a
  405e86:	inc    esi
  405e87:	ins    DWORD PTR es:[edi],dx
  405e88:	sub    DWORD PTR [esp+eax*4],esi
  405e8b:	add    edx,DWORD PTR [ebx]
  405e8d:	mov    ?,WORD PTR [ebp+ebx*2+0x6]
  405e91:	xor    al,0xd
  405e93:	arpl   WORD PTR [ebp-0x25],sp
  405e96:	cmp    esp,0x2b8d21c8
  405e9c:	push   0xee38b1cc
  405ea1:	mul    BYTE PTR [esp+ebx*2+0x4e]
  405ea5:	mov    ecx,0x1156a40f
  405eaa:	loopne 0x405f14
  405eac:	dec    esp
  405ead:	stos   BYTE PTR es:[edi],al
  405eae:	pop    ecx
  405eaf:	mov    bh,0xc8
  405eb1:	int    0xd8
  405eb3:	pop    ds
  405eb4:	(bad)  
  405eb6:	loope  0x405f18
  405eb8:	add    ch,BYTE PTR [esi]
  405eba:	arpl   WORD PTR [esi-0x5a5f3037],sp
  405ec0:	test   al,0x28
  405ec2:	mov    cl,0x1d
  405ec4:	repz sub DWORD PTR ds:0x76e2f5c3,0x2c
  405ecc:	jnp    0x405ec8
  405ece:	cli    
  405ecf:	or     DWORD PTR [ebp-0xe],ecx
  405ed2:	sub    bl,BYTE PTR [esi]
  405ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed5:	jmp    0x405e82
  405ed7:	cmp    bh,al
  405ed9:	aam    0x38
  405edb:	ret    
  405edc:	rcl    ebx,1
  405ede:	cmc    
  405edf:	(bad)  [ebx-0x3d2ead53]
  405ee5:	jne    0x405ec6
  405ee7:	(bad)  
  405ee8:	pop    ebp
  405ee9:	mov    edx,0x941a8c1b
  405eee:	jo     0x405f3c
  405ef0:	xor    eax,0x436dfc00
  405ef5:	mov    bh,BYTE PTR [edi+0x63]
  405ef8:	jge    0x405ed6
  405efa:	ret    0x6f44
  405efd:	and    ah,BYTE PTR [ebp-0x24]
  405f00:	(bad)
  405f05:	ret    0xd6f
  405f08:	jbe    0x405ebe
  405f0a:	mov    ebp,0x3183e7cc
  405f0f:	mov    dl,BYTE PTR [edx+0x899b261]
  405f15:	xchg   esp,eax
  405f16:	dec    edx
  405f17:	cmp    DWORD PTR [esi-0x6051ef6],esp
  405f1d:	xor    eax,0x63e597aa
  405f22:	jae    0x405f68
  405f24:	inc    eax
  405f25:	popa   
  405f26:	jb     0x405eea
  405f28:	ret    0x7bd2
  405f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f2c:	nop
  405f2d:	mov    esp,0xf14a8dfb
  405f32:	jecxz  0x405f07
  405f34:	popa   
  405f35:	sbb    DWORD PTR [esi-0x33],ebp
  405f38:	mov    ecx,0x5d51605c
  405f3d:	aas    
  405f3e:	fiadd  WORD PTR [edi+0x5]
  405f41:	push   edx
  405f42:	ficom  WORD PTR [ecx+0x19]
  405f45:	inc    ebx
  405f46:	aad    0x36
  405f48:	add    ecx,DWORD PTR [ecx-0x50]
  405f4b:	jp     0x405f14
  405f4d:	es jnp 0x405f28
  405f50:	sub    cl,BYTE PTR [ecx+eiz*8]
  405f53:	or     BYTE PTR [ecx],bl
  405f55:	and    DWORD PTR [esi],0xd3b1c601
  405f5b:	(bad)  
  405f5c:	(bad)  
  405f5d:	sub    BYTE PTR [ebp+0xd948c2e],cl
  405f63:	xchg   edi,eax
  405f64:	ja     0x405fa3
  405f66:	hlt    
  405f67:	dec    ecx
  405f68:	pop    edi
  405f69:	dec    eax
  405f6a:	mov    esp,0x73d7caf5
  405f6f:	es sbb eax,0xa44d2229
  405f75:	mov    ds:0x1ebb29ee,al
  405f7a:	mov    bl,0x37
  405f7c:	cmp    al,BYTE PTR [eax+0x6c]
  405f7f:	adc    eax,0x8b03adea
  405f84:	jb     0x405fe1
  405f86:	mov    ch,0x42
  405f88:	cmc    
  405f89:	out    dx,eax
  405f8a:	dec    ecx
  405f8b:	add    cl,ch
  405f8d:	add    esi,DWORD PTR [esi-0xdd6032e]
  405f93:	xchg   ebp,eax
  405f94:	xchg   ebp,eax
  405f95:	outs   dx,BYTE PTR ds:[esi]
  405f96:	inc    esp
  405f97:	imul   esi,DWORD PTR [ebx-0xc],0xee2229c0
  405f9e:	aaa    
  405f9f:	repnz clc 
  405fa1:	pop    ebx
  405fa2:	out    0x73,eax
  405fa4:	shl    bl,cl
  405fa6:	sbb    ebx,DWORD PTR [edx]
  405fa8:	or     al,0x55
  405faa:	ret    0xc2f4
  405fad:	adc    DWORD PTR [eax+ebx*4-0x600cc51e],0x45
  405fb5:	(bad)  
  405fb6:	sbb    dh,BYTE PTR [edi+ebx*8]
  405fb9:	mov    cl,0xe8
  405fbb:	mov    dh,0xfa
  405fbd:	mov    DWORD PTR [edi],ecx
  405fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc0:	xor    al,0xaa
  405fc2:	xor    al,0xe8
  405fc4:	inc    eax
  405fc5:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  405fc7:	mov    eax,DWORD PTR [edi+eiz*2]
  405fca:	inc    esi
  405fcb:	pop    ss
  405fcc:	outs   dx,BYTE PTR ds:[esi]
  405fcd:	(bad)  [eax*4+0x747cf5e6]
  405fd4:	cld    
  405fd5:	outs   dx,DWORD PTR ds:[esi]
  405fd6:	sub    cl,BYTE PTR [eax-0x27]
  405fd9:	mov    bl,0x8
  405fdb:	push   cs
  405fdc:	or     al,cl
  405fde:	in     eax,dx
  405fdf:	and    eax,0x4e1b9d89
  405fe4:	mov    ds:0xf55a80f3,eax
  405fe9:	mov    ebp,0x205f22b1
  405fee:	mov    eax,0x749e2196
  405ff3:	in     eax,0x7a
  405ff5:	sub    ch,BYTE PTR [ecx-0xe]
  405ff8:	mov    ds:0x35a26291,al
  405ffd:	mov    ds:0xc667cadf,eax
  406002:	xchg   edx,eax
  406003:	fs scas al,BYTE PTR es:[edi]
  406005:	xlat   BYTE PTR ds:[ebx]
  406006:	and    BYTE PTR [eax],ch
  406008:	loope  0x405fdd
  40600a:	lods   al,BYTE PTR ds:[esi]
  40600b:	mov    ds:0xa35c5ad7,al
  406010:	lahf   
  406011:	fsubr  DWORD PTR [ecx+0x4c]
  406014:	repz je 0x405fbe
  406017:	inc    eax
  406018:	add    esi,ebx
  40601a:	je     0x40604d
  40601c:	ins    DWORD PTR es:[edi],dx
  40601d:	cwde   
  40601e:	and    al,0x52
  406020:	mov    ds:0xe7138d83,eax
  406025:	xor    al,0xa2
  406027:	xchg   edx,eax
  406028:	outs   dx,DWORD PTR ds:[esi]
  406029:	sti    
  40602a:	aas    
  40602b:	mov    ds,WORD PTR [ecx-0x436d9521]
  406031:	scas   al,BYTE PTR es:[edi]
  406032:	sub    bl,BYTE PTR [esi-0x846b753]
  406038:	aas    
  406039:	mov    al,fs:0x1076ea18
  40603f:	add    DWORD PTR [edi-0x67],ebp
  406042:	ds pop es
  406044:	sti    
  406045:	fbstp  TBYTE PTR es:[ebx]
  406048:	jo     0x40607e
  40604a:	jae    0x4060c0
  40604c:	push   es
  40604d:	aas    
  40604e:	dec    ebx
  40604f:	addr16 adc al,0xe
  406052:	mov    edx,0x2f6eefd2
  406057:	xor    DWORD PTR ss:[edx],esi
  40605a:	aaa    
  40605b:	inc    eax
  40605c:	xchg   ebp,eax
  40605d:	inc    ebx
  40605e:	fst    QWORD PTR [ecx]
  406060:	sub    eax,DWORD PTR [esi+0x4]
  406063:	sub    DWORD PTR [ebx-0x2d61ddf3],ebp
  406069:	fs fxch st(7)
  40606c:	mov    eax,ds:0xb843d791
  406071:	add    eax,0x860c9345
  406076:	lods   al,BYTE PTR fs:[esi]
  406078:	pop    ds
  406079:	mov    ch,0xbc
  40607b:	jmp    0x4060bf
  40607d:	ret    
  40607e:	jo     0x40608b
  406080:	mov    WORD PTR [esi+0x63],?
  406083:	sti    
  406084:	mov    esi,0x827bb15c
  406089:	jne    0x40600d
  40608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40608c:	xor    edi,DWORD PTR [ecx]
  40608e:	mov    bl,0x8c
  406090:	jb     0x406064
  406092:	dec    ebx
  406093:	aas    
  406094:	popf   
  406095:	fistp  WORD PTR [ebp*1-0x65b4bce1]
  40609c:	mov    al,ds:0x9bab33b6
  4060a1:	inc    ebx
  4060a2:	test   esi,0x2b677da1
  4060a8:	and    ebp,DWORD PTR [esi+0x19c64f11]
  4060ae:	lds    edi,FWORD PTR [ebp+0x20]
  4060b1:	jbe    0x406132
  4060b3:	stos   BYTE PTR es:[edi],al
  4060b4:	mov    BYTE PTR [esi],ah
  4060b6:	in     eax,0x11
  4060b8:	sub    al,0xe2
  4060ba:	push   cs
  4060bb:	les    edi,FWORD PTR [ebp+0x2b]
  4060be:	push   ds
  4060bf:	jl     0x4060d3
  4060c1:	pop    edx
  4060c2:	stos   BYTE PTR es:[edi],al
  4060c3:	imul   ecx,DWORD PTR [edi],0x3623975a
  4060c9:	int3   
  4060ca:	sub    bh,al
  4060cc:	mov    es,WORD PTR [edx-0x2d]
  4060cf:	pushf  
  4060d0:	xor    al,0x48
  4060d2:	cmp    BYTE PTR [edx-0x55e0bad1],ch
  4060d8:	or     BYTE PTR [edx+0x0],cl
  4060db:	test   BYTE PTR [ebp+0x35],cl
  4060de:	sub    eax,0x6d29268e
  4060e3:	cmp    al,0x8
  4060e5:	je     0x4060a8
  4060e7:	sbb    eax,0x6c6ec0c9
  4060ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ed:	push   ss
  4060ee:	xor    al,0xec
  4060f0:	push   es
  4060f1:	popf   
  4060f2:	push   es
  4060f3:	enter  0x804e,0x84
  4060f7:	mov    ch,0xdb
  4060f9:	sahf   
  4060fa:	inc    esi
  4060fb:	inc    eax
  4060fc:	lods   al,BYTE PTR ds:[esi]
  4060fd:	jmp    0x1b8825ac
  406102:	pop    esp
  406103:	(bad)  [ecx]
  406105:	stos   BYTE PTR es:[edi],al
  406106:	loopne 0x406096
  406108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406109:	imul   BYTE PTR [ebx+0x9]
  40610c:	adc    eax,DWORD PTR [edx-0x360c5aa8]
  406112:	test   al,0xdf
  406114:	adc    dh,BYTE PTR [ebp-0x27]
  406117:	imul   ebp,DWORD PTR [edi+0x3],0xc83dda2e
  40611e:	and    ebx,ebp
  406120:	jne    0x406140
  406122:	push   cs
  406123:	in     eax,dx
  406124:	adc    eax,0x94f468fe
  406129:	xchg   BYTE PTR [edi-0x17],bl
  40612c:	mov    ds:0x21922500,eax
  406131:	jmp    0x8af1:0x3777b596
  406138:	jnp    0x4060eb
  40613a:	lds    ecx,FWORD PTR [eax]
  40613c:	call   0x9f008cb5
  406141:	inc    esp
  406142:	inc    ebx
  406143:	mov    bh,BYTE PTR [ebx-0x37c36da8]
  406149:	push   eax
  40614a:	cdq    
  40614b:	mov    dl,0x9d
  40614d:	repz jo 0x40617a
  406150:	ret    0xf1a8
  406153:	dec    ecx
  406154:	or     BYTE PTR [edi-0x7d],ch
  406157:	(bad)  
  406158:	mov    ds:0xdade46f0,eax
  40615d:	or     ecx,DWORD PTR [eax-0x3d53e828]
  406163:	lods   al,BYTE PTR ds:[esi]
  406164:	sti    
  406165:	xor    BYTE PTR [edi],ah
  406167:	shl    eax,0xf2
  40616a:	jge    0x40614a
  40616c:	call   0x7822:0xcbeb2390
  406173:	ret    0x9438
  406176:	test   eax,0xef923d5f
  40617b:	mov    dh,0x1e
  40617d:	adc    eax,0xaaba698e
  406182:	mov    edi,0x4ef7ad62
  406187:	inc    ecx
  406188:	out    dx,al
  406189:	xor    eax,0xe1b9e39d
  40618e:	sti    
  40618f:	jo     0x4061ee
  406191:	je     0x406138
  406193:	push   ds
  406194:	inc    ebx
  406195:	std    
  406196:	or     al,0x9a
  406198:	lds    edi,FWORD PTR [esi+0x67137473]
  40619e:	inc    esi
  40619f:	in     al,0x24
  4061a1:	inc    esi
  4061a2:	dec    esi
  4061a3:	ins    BYTE PTR es:[edi],dx
  4061a4:	not    DWORD PTR [esi+0x1bbadef0]
  4061aa:	xchg   ebx,eax
  4061ab:	popf   
  4061ac:	push   cs
  4061ad:	mov    esi,0x4608e6f3
  4061b2:	int    0x2b
  4061b4:	loope  0x40620a
  4061b6:	popa   
  4061b7:	pop    es
  4061b8:	mov    al,0xbe
  4061ba:	(bad)  
  4061bb:	lahf   
  4061bc:	frstor [ebx+0x628d02bd]
  4061c2:	lahf   
  4061c3:	and    eax,0xfef959b8
  4061c8:	fild   QWORD PTR [esi-0x2a99718]
  4061ce:	repz xlat BYTE PTR ds:[ebx]
  4061d0:	adc    eax,0xec6a3a79
  4061d5:	mov    al,ds:0xb8638409
  4061da:	adc    al,0x78
  4061dc:	test   DWORD PTR [edi],esi
  4061de:	adc    eax,0x8842ec41
  4061e3:	mov    al,0x9c
  4061e5:	add    al,0xc1
  4061e7:	scas   al,BYTE PTR es:[edi]
  4061e8:	jmp    0x40617f
  4061ea:	or     DWORD PTR [edi+0x36],eax
  4061ed:	test   eax,0x55eec416
  4061f2:	adc    eax,0x4b8611d9
  4061f7:	loopne 0x406251
  4061f9:	fs out 0x30,eax
  4061fc:	and    DWORD PTR [esi-0x3425943e],0x3a1eaa78
  406206:	mov    al,ds:0x9d2e6cef
  40620b:	call   0x371f:0x7a14f0b3
  406212:	ss mov dh,0xf7
  406215:	retf   
  406216:	and    eax,DWORD PTR [ecx]
  406218:	jmp    0xa147:0x24959b41
  40621f:	push   eax
  406220:	dec    edx
  406221:	sbb    al,0xc7
  406223:	mov    edx,0xd2d747ee
  406228:	out    0xbe,al
  40622a:	pop    edx
  40622b:	dec    esi
  40622c:	pusha  
  40622d:	xchg   esp,eax
  40622e:	mov    eax,es:0xbff0ce5e
  406234:	add    ah,BYTE PTR [esi+0xf]
  406237:	xor    esi,ecx
  406239:	aad    0x79
  40623b:	retf   
  40623c:	xchg   esp,eax
  40623d:	(bad)  
  40623e:	mov    cl,0x89
  406240:	jg     0x406279
  406242:	in     al,dx
  406243:	jg     0x40625b
  406245:	(bad)  
  406246:	lds    ebx,FWORD PTR [ecx+0x2e80804e]
  40624c:	lds    ebx,FWORD PTR [esi+0x3cdb9f4b]
  406252:	or     DWORD PTR [ecx],0xffffffde
  406255:	push   ebx
  406256:	mov    dh,0x9d
  406258:	push   esi
  406259:	out    dx,al
  40625a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40625b:	(bad)  
  40625c:	mov    ds:0x86c10c4e,eax
  406261:	pop    es
  406262:	inc    edx
  406263:	push   edi
  406264:	cmp    eax,esi
  406266:	push   esi
  406267:	dec    ecx
  406268:	loope  0x406213
  40626a:	ret    0x2a70
  40626d:	loopne 0x40621d
  40626f:	add    eax,0x8df84c34
  406274:	enter  0x59e9,0x95
  406278:	and    DWORD PTR [ecx],edi
  40627a:	ja     0x4062a0
  40627c:	sbb    BYTE PTR [edx+0x5ac14056],bh
  406282:	xchg   ebp,eax
  406283:	adc    ebx,DWORD PTR [edx+0x2bcad59]
  406289:	leave  
  40628a:	dec    esi
  40628b:	jbe    0x40628c
  40628d:	(bad)  
  40628e:	loope  0x4062a3
  406290:	(bad)  
  406291:	mov    dh,0x99
  406293:	pop    eax
  406294:	xlat   BYTE PTR ds:[ebx]
  406295:	xor    al,BYTE PTR ds:0x77b764e5
  40629b:	xor    BYTE PTR [ecx],cl
  40629d:	adc    eax,0xd4582bb
  4062a2:	test   eax,0xf54b0b79
  4062a7:	sar    BYTE PTR [edi],1
  4062a9:	retf   
  4062aa:	and    BYTE PTR [ecx],ch
  4062ac:	mov    ebp,0x59c85651
  4062b1:	ret    
  4062b2:	add    al,0x0
  4062b4:	(bad)  
  4062b5:	push   edi
  4062b6:	sbb    eax,0xc7ee27ec
  4062bb:	adc    BYTE PTR [edi],dl
  4062bd:	xchg   ecx,eax
  4062be:	fisubr DWORD PTR [edx-0x70]
  4062c1:	outs   dx,DWORD PTR ds:[esi]
  4062c2:	cmp    BYTE PTR [edx+0x2bead559],ah
  4062c8:	push   ss
  4062c9:	fwait
  4062ca:	add    bh,BYTE PTR [ebp+ebx*2+0x13a79a92]
  4062d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d2:	int3   
  4062d3:	add    BYTE PTR [eax-0x60],0x4e
  4062d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d8:	xchg   esi,eax
  4062d9:	js     0x406292
  4062db:	pop    ecx
  4062dc:	mov    esp,0x945a3693
  4062e1:	je     0x40628f
  4062e3:	mov    al,0x9a
  4062e5:	and    ch,BYTE PTR [ebx]
  4062e7:	or     al,0x7
  4062e9:	xchg   ebx,eax
  4062ea:	push   ebx
  4062eb:	adc    DWORD PTR [eax],edi
  4062ed:	mov    ds:0x2508019a,eax
  4062f2:	retf   0x65ab
  4062f5:	jae    0x406292
  4062f7:	fcom   QWORD PTR [eax]
  4062f9:	add    ch,BYTE PTR [esi+edi*4]
  4062fc:	xor    BYTE PTR [ebp+0x63a597e3],al
  406302:	cld    
  406303:	fidivr DWORD PTR [edx+0x7e1318e1]
  406309:	dec    edi
  40630a:	jge    0x406364
  40630c:	std    
  40630d:	push   0x84e16e6c
  406312:	jl     0x40637e
  406314:	jbe    0x406313
  406316:	adc    DWORD PTR [eax-0x3fec034],eax
  40631c:	pop    eax
  40631d:	das    
  40631e:	lock cmp BYTE PTR [bp+si],ch
  406322:	adc    al,0xcf
  406324:	loop   0x40632e
  406326:	call   0x44b4731c
  40632b:	push   ebp
  40632c:	pop    esp
  40632d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40632e:	fcom   QWORD PTR [edi]
  406330:	xchg   DWORD PTR [ecx],esi
  406332:	push   0xf130739c
  406337:	jo     0x4062d0
  406339:	dec    esp
  40633a:	push   edx
  40633b:	aad    0x1b
  40633d:	mov    bl,0x5b
  40633f:	retf   
  406340:	push   0xab13e66
  406345:	lds    eax,FWORD PTR [ebx-0xd920deb]
  40634b:	xor    ecx,DWORD PTR [ebx+0x1a]
  40634e:	and    eax,0xfef08402
  406353:	pop    esp
  406354:	adc    al,0xf8
  406356:	pop    ds
  406357:	stos   BYTE PTR es:[edi],al
  406358:	mov    dl,0x9e
  40635a:	(bad)  
  40635b:	in     al,0x12
  40635d:	xchg   ecx,eax
  40635e:	xchg   ebx,eax
  40635f:	push   cs
  406360:	in     al,0xb
  406362:	mov    WORD PTR [edi+ebp*2-0x351ed284],ss
  406369:	ds aaa 
  40636b:	iret   
  40636c:	inc    esi
  40636d:	sub    esi,ecx
  40636f:	rcl    BYTE PTR ds:[eax+ebp*1],1
  406373:	cdq    
  406374:	mov    al,0x27
  406376:	mov    BYTE PTR [eax],al
  406378:	jae    0x4063f7
  40637a:	xchg   edx,eax
  40637b:	and    ebx,DWORD PTR [ecx+0x47]
  40637e:	loopne 0x40630a
  406380:	hlt    
  406381:	or     al,0x11
  406383:	sbb    eax,0x3543eb7b
  406388:	hlt    
  406389:	push   ebp
  40638a:	jge    0x40634d
  40638c:	retf   0x60f7
  40638f:	stos   DWORD PTR es:[edi],eax
  406390:	(bad)  
  406391:	sub    DWORD PTR [edi+0x5d45f51c],eax
  406397:	xor    BYTE PTR [ecx-0x47],bl
  40639a:	mov    ah,BYTE PTR [ebx-0x29]
  40639d:	fdivr  DWORD PTR [edx]
  40639f:	rcl    ebp,1
  4063a1:	out    dx,al
  4063a2:	sahf   
  4063a3:	idiv   BYTE PTR ds:0x3829e2db
  4063a9:	inc    ecx
  4063aa:	adc    DWORD PTR [eax],0x40b79177
  4063b0:	mov    ds:0xe316624f,eax
  4063b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b6:	mov    al,ds:0x4b90a0aa
  4063bb:	out    0xc6,eax
  4063bd:	mov    ecx,0x356241a0
  4063c2:	enter  0xe088,0x4f
  4063c6:	call   0xac40c482
  4063cb:	sub    BYTE PTR [ecx+ebx*1],bh
  4063ce:	inc    esp
  4063cf:	cmc    
  4063d0:	mov    ebp,0xbbbf610a
  4063d5:	out    0xb9,eax
  4063d7:	int3   
  4063d8:	sti    
  4063d9:	das    
  4063da:	aad    0xfd
  4063dc:	xor    BYTE PTR [edi+0x5e7d2b9f],al
  4063e2:	xchg   ecx,eax
  4063e3:	jmp    0x40643a
  4063e5:	jbe    0x406419
  4063e7:	test   eax,0x7f0728c8
  4063ec:	add    eax,0xf3f9d41d
  4063f1:	mov    eax,0x26924eb6
  4063f6:	ja     0x406470
  4063f8:	fidivr WORD PTR [eax+0x62463666]
  4063fe:	(bad)  
  4063ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406400:	jmp    0x40646b
  406402:	hlt    
  406403:	shr    BYTE PTR [ebp-0x7323811b],cl
  406409:	icebp  
  40640a:	mov    esi,0x740c812d
  40640f:	mov    al,0xaf
  406411:	mov    ebp,?
  406413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406415:	pop    edx
  406416:	jmp    0x5a482521
  40641b:	adc    BYTE PTR [edx],al
  40641d:	call   0x56cf6952
  406422:	inc    edi
  406423:	mov    ds:0xe7a5aa2d,al
  406428:	popf   
  406429:	(bad)  
  40642a:	das    
  40642b:	stos   BYTE PTR es:[edi],al
  40642c:	daa    
  40642d:	lods   eax,DWORD PTR ds:[esi]
  40642e:	push   ebp
  40642f:	mov    ebx,0xc60fe748
  406434:	call   0x7443:0x202fa583
  40643b:	pop    edx
  40643c:	xor    dh,BYTE PTR [edx+eax*1]
  40643f:	and    bl,dh
  406441:	(bad)  
  406442:	dec    edi
  406443:	in     eax,0xda
  406445:	and    eax,0x4144ccf8
  40644a:	out    0x12,al
  40644c:	or     DWORD PTR gs:[ebx+ecx*2],ebp
  406450:	xor    eax,0x5bcd269a
  406455:	mov    ebx,DWORD PTR [eax+0x1a39f08d]
  40645b:	call   0x4668c61b
  406460:	fld    QWORD PTR [edi-0x764df6b3]
  406466:	push   esi
  406467:	aad    0x96
  406469:	test   BYTE PTR [edx],0x88
  40646c:	add    al,0x99
  40646e:	mov    cs:0x3d73c16a,eax
  406474:	xor    DWORD PTR [ecx],0xffffffe5
  406477:	jb     0x40648c
  406479:	(bad)  [ebx-0x4b2eab05]
  40647f:	cmp    eax,DWORD PTR [esi]
  406481:	push   eax
  406482:	popa   
  406483:	popw   ds
  406485:	shr    BYTE PTR [ecx-0x1b],1
  406488:	inc    eax
  406489:	icebp  
  40648a:	jg     0x40645d
  40648c:	push   es
  40648d:	lea    ecx,[ebp+ecx*2-0x5a]
  406491:	cmp    esi,DWORD PTR [ecx-0x4e80196]
  406497:	cmp    eax,0x8c556c65
  40649c:	cmc    
  40649d:	add    ebp,DWORD PTR [edx]
  40649f:	sar    dh,1
  4064a1:	and    cl,cl
  4064a3:	dec    ebp
  4064a4:	js     0x406448
  4064a6:	aam    0x5d
  4064a8:	ds sbb al,0x55
  4064ab:	mov    sp,0x9120
  4064af:	xchg   ebx,eax
  4064b0:	fistp  QWORD PTR [eax]
  4064b2:	sub    DWORD PTR [ebx+0x3cacecdc],edi
  4064b8:	lods   eax,DWORD PTR ds:[esi]
  4064b9:	sub    ah,BYTE PTR [eax+0x1b]
  4064bc:	mov    ds:0x37e4f557,eax
  4064c1:	int3   
  4064c2:	lods   eax,DWORD PTR ds:[esi]
  4064c3:	lods   eax,DWORD PTR ds:[esi]
  4064c4:	rcl    BYTE PTR [edx],0xad
  4064c7:	or     DWORD PTR [edx-0x442f9c61],esi
  4064cd:	wrmsr  
  4064cf:	push   ecx
  4064d0:	int    0x73
  4064d2:	sbb    BYTE PTR [esi-0xba1388e],dh
  4064d8:	push   es
  4064d9:	jb     0x4064a6
  4064db:	stos   BYTE PTR es:[edi],al
  4064dc:	xor    ecx,DWORD PTR [esi+0x61]
  4064df:	outs   dx,BYTE PTR ds:[esi]
  4064e0:	add    eax,DWORD PTR [edi+0x4be6e680]
  4064e6:	pop    esp
  4064e7:	inc    edx
  4064e8:	push   esp
  4064e9:	out    dx,al
  4064ea:	push   ebx
  4064eb:	jbe    0x406561
  4064ed:	dec    edi
  4064ee:	shr    DWORD PTR [eax],1
  4064f0:	lds    edx,FWORD PTR [edi-0x5aee4820]
  4064f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f7:	add    eax,esi
  4064f9:	and    edi,ecx
  4064fb:	fwait
  4064fc:	test   DWORD PTR [edi-0x318a082e],esi
  406502:	aam    0x88
  406504:	mov    ebx,0xbe2ca02c
  406509:	jmp    0x40652d
  40650b:	stos   DWORD PTR es:[edi],eax
  40650c:	iret   
  40650d:	pop    esp
  40650e:	jp     0x40649c
  406510:	cmp    DWORD PTR [ebp+0x6f07c614],edx
  406516:	add    al,0x67
  406518:	in     eax,dx
  406519:	popa   
  40651a:	rcl    bl,cl
  40651c:	jae    0x406525
  40651e:	outs   dx,BYTE PTR ds:[esi]
  40651f:	cmp    eax,0xce637dab
  406524:	or     al,0x91
  406526:	or     ecx,DWORD PTR [edx-0x351f7d1a]
  40652c:	hlt    
  40652d:	fnstenv [esi]
  40652f:	pop    edi
  406530:	jno    0x4064ed
  406532:	xor    BYTE PTR [eax+0xf],0x0
  406536:	or     esi,DWORD PTR [eax]
  406538:	sbb    bl,0x21
  40653b:	jg     0x4064f3
  40653d:	dec    edi
  40653e:	add    ebp,0xffffff8d
  406541:	daa    
  406542:	imul   edx,DWORD PTR [esi+ebp*1-0x34],0xa73671ca
  40654a:	cmpxchg bl,bl
  40654d:	adc    eax,DWORD PTR [esp+edi*8]
  406550:	mov    edi,0x130a8f90
  406555:	jle    0x40657d
  406557:	fiadd  DWORD PTR [edx-0x6d109086]
  40655d:	and    al,0x84
  40655f:	xor    BYTE PTR [ebx],dl
  406561:	inc    ebx
  406562:	xchg   edx,eax
  406563:	jno    0x4065b1
  406565:	imul   edi,DWORD PTR [edx],0xffffffa2
  406568:	in     eax,dx
  406569:	jl     0x4064f6
  40656b:	stos   BYTE PTR es:[edi],al
  40656c:	jae    0x40653c
  40656e:	xor    eax,DWORD PTR [eax+0x704f1924]
  406574:	pusha  
  406575:	pop    ebp
  406576:	or     ah,BYTE PTR [ebx-0x46]
  406579:	sub    esp,DWORD PTR [ebx-0x7b]
  40657c:	mov    edi,0x9412322d
  406581:	ja     0x4065a2
  406583:	ss aad 0x6b
  406586:	pop    ebp
  406587:	(bad)  
  406588:	mov    dl,0xee
  40658a:	es js  0x4065fe
  40658d:	mov    esi,0x6f399a09
  406592:	pop    ebp
  406593:	jg     0x406535
  406595:	push   cs
  406596:	lock je 0x4065be
  406599:	xor    BYTE PTR [ebx],ah
  40659b:	(bad)  
  40659d:	xchg   edi,eax
  40659e:	das    
  40659f:	popf   
  4065a0:	sub    ebx,DWORD PTR [edi+0x6d644df4]
  4065a6:	xchg   edx,eax
  4065a7:	fldenv [edx-0x59]
  4065aa:	popf   
  4065ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065ac:	push   ebp
  4065ad:	scas   eax,DWORD PTR es:[edi]
  4065ae:	push   edx
  4065af:	call   0x70ca7a0a
  4065b4:	xchg   ah,al
  4065b6:	sar    BYTE PTR [ebx+eax*2-0x5e8ea968],1
  4065bd:	je     0x40663c
  4065bf:	lea    ebp,[ecx-0xa]
  4065c2:	in     eax,dx
  4065c3:	or     bl,BYTE PTR ds:0x44c1297c
  4065c9:	cmp    BYTE PTR [ecx-0x6b905500],bl
  4065cf:	xor    eax,0x25f730a8
  4065d4:	sub    BYTE PTR [edi],al
  4065d6:	push   esp
  4065d7:	xchg   al,al
  4065d9:	mov    dl,BYTE PTR [eax]
  4065db:	jmp    0x4065ec
  4065dd:	dec    ecx
  4065de:	repz and BYTE PTR [eax+0x1975312f],dl
  4065e5:	fiadd  DWORD PTR [ebx+0x5a]
  4065e8:	dec    esp
  4065e9:	push   ds
  4065ea:	fbstp  TBYTE PTR [eax]
  4065ec:	mov    ebx,0x9ae1b730
  4065f1:	(bad)  
  4065f2:	fs in  eax,dx
  4065f4:	in     eax,0x28
  4065f6:	xor    cl,BYTE PTR [edx]
  4065f8:	fnsave [ebx-0x69]
  4065fb:	lock into 
  4065fd:	inc    edx
  4065fe:	inc    ebx
  4065ff:	loop   0x4065bc
  406601:	sbb    bh,ch
  406603:	inc    ecx
  406604:	call   0x3057:0x71b23f6d
  40660b:	pop    ebp
  40660c:	adc    ebp,esi
  40660e:	arpl   si,si
  406610:	ret    0x617e
  406613:	ja     0x406668
  406615:	std    
  406616:	push   0x8
  406618:	mov    dl,0x23
  40661a:	and    DWORD PTR [ebx],ebp
  40661c:	pop    ebp
  40661d:	sbb    DWORD PTR [ebx],ebx
  40661f:	int3   
  406620:	sbb    BYTE PTR [eax+ebp*4-0x66e5fad9],0x42
  406628:	fwait
  406629:	xchg   edx,eax
  40662a:	xchg   esp,eax
  40662b:	sahf   
  40662c:	or     eax,DWORD PTR [edx+0x7118ac04]
  406632:	test   al,0x65
  406634:	ss inc ebx
  406636:	sbb    cl,BYTE PTR [eax]
  406638:	aam    0x3f
  40663a:	(bad)  
  40663b:	test   DWORD PTR [ebp+ebp*8+0x20],0x4196e816
  406643:	stc    
  406644:	dec    esi
  406645:	dec    ebp
  406646:	or     al,0xdd
  406648:	retf   0x9771
  40664b:	(bad)  
  40664c:	add    BYTE PTR [esi-0x6e0b16c6],dl
  406652:	and    eax,0x9ae2c11b
  406657:	jge    0x4065eb
  406659:	out    dx,al
  40665a:	cmp    eax,DWORD PTR ds:0x46992812
  406660:	jp     0x4066c2
  406662:	inc    edx
  406663:	ret    
  406664:	mov    bh,dh
  406666:	into   
  406667:	push   edx
  406668:	xchg   edi,eax
  406669:	int3   
  40666a:	out    0xf3,al
  40666c:	cmp    DWORD PTR [esi+0x25],eax
  40666f:	hlt    
  406670:	les    edx,FWORD PTR [eax+ebp*2+0xd0469ec]
  406677:	and    eax,0x14f3d150
  40667c:	call   0xa43666e2
  406681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406682:	push   ebx
  406683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406684:	sbb    dh,bh
  406686:	sbb    BYTE PTR [eax],0x86
  406689:	push   esi
  40668a:	xchg   ebp,eax
  40668b:	adc    DWORD PTR [edi-0x5568a093],ecx
  406691:	ds stos DWORD PTR es:[edi],eax
  406693:	push   cs
  406694:	dec    ebp
  406695:	retf   0xa9d8
  406698:	ins    BYTE PTR es:[edi],dx
  406699:	sub    al,BYTE PTR [ecx+0x1]
  40669c:	push   cs
  40669d:	adc    al,0xd9
  40669f:	ss inc edi
  4066a1:	mov    ch,0x4f
  4066a3:	xchg   BYTE PTR [ebp-0x69],bl
  4066a6:	daa    
  4066a7:	pop    ebp
  4066a8:	jle    0x406700
  4066aa:	inc    esi
  4066ab:	lods   al,BYTE PTR ds:[esi]
  4066ad:	xor    BYTE PTR [edx-0x2db77a25],al
  4066b3:	scas   al,BYTE PTR es:[edi]
  4066b4:	dec    edi
  4066b5:	rcl    esp,cl
  4066b7:	jmp    0xb0fd3c78
  4066bc:	xor    edx,ecx
  4066be:	icebp  
  4066bf:	fld    st(3)
  4066c1:	push   esp
  4066c2:	mov    BYTE PTR [eax-0x67a2d865],ch
  4066c8:	jbe    0x406733
  4066ca:	cmp    eax,DWORD PTR [ebp+0x43a2bcf5]
  4066d0:	push   ebp
  4066d1:	xchg   BYTE PTR [eax-0x1e],ah
  4066d4:	stos   DWORD PTR es:[edi],eax
  4066d5:	test   esp,ebx
  4066d7:	ret    0x5899
  4066da:	or     esp,esi
  4066dc:	sbb    BYTE PTR [eax],ch
  4066de:	fidiv  WORD PTR [edx-0xe]
  4066e1:	test   eax,0xea908ac0
  4066e6:	popa   
  4066e7:	adc    ebp,edx
  4066e9:	sub    cl,cl
  4066eb:	xchg   DWORD PTR [eax-0x5d9f8695],esp
  4066f1:	mov    esi,esp
  4066f3:	jg     0x4066f8
  4066f5:	adc    bh,BYTE PTR [edi+edx*2+0x178fdfd2]
  4066fc:	(bad)  
  4066fd:	aas    
  4066fe:	cwde   
  4066ff:	push   ebp
  406700:	sub    ebx,ebx
  406702:	into   
  406703:	nop
  406704:	and    esi,0xffffffb8
  406707:	xor    eax,0xb6366b5d
  40670c:	jae    0x406729
  40670e:	imul   ah
  406710:	sbb    al,0x8e
  406712:	fist   WORD PTR [ebx+ebx*8+0x41f9878f]
  406719:	gs in  eax,dx
  40671b:	mov    bh,0x3a
  40671d:	mov    DWORD PTR [eax-0x35],ebx
  406720:	test   al,0x98
  406722:	jae    0x4066f7
  406724:	fadd   QWORD PTR ds:0x252b7dbc
  40672a:	test   BYTE PTR [ebx+ebx*4-0x74],bl
  40672e:	mov    al,ds:0xb0b2ef60
  406733:	inc    ebx
  406734:	dec    edx
  406735:	pop    ebx
  406736:	xor    eax,0x1001d53f
  40673b:	inc    ebp
  40673c:	mov    esi,0x9be1adbd
  406741:	test   DWORD PTR [ebx],ecx
  406743:	pop    esi
  406744:	loopne 0x406737
  406746:	xor    dh,BYTE PTR [esi]
  406748:	int    0x6f
  40674a:	cmp    DWORD PTR [ebp+0x51],esp
  40674d:	rcr    BYTE PTR [ebx+0x21704c19],cl
  406753:	cwde   
  406754:	fistp  WORD PTR [eax+0x2f]
  406757:	cmp    BYTE PTR ds:[edi-0x27f2eba2],bl
  40675e:	out    0x94,eax
  406760:	jl     0x40677c
  406762:	mov    ebx,0x30f5a64b
  406767:	pop    edx
  406768:	dec    esi
  406769:	mov    al,ds:0x2f42d8f9
  40676e:	xor    BYTE PTR [eax-0x43],0x7e
  406772:	cwde   
  406773:	pop    es
  406774:	clc    
  406775:	imul   ebx,esp,0xffffffbd
  406778:	jb     0x406779
  40677a:	sbb    eax,0xc4b2bafd
  40677f:	dec    edx
  406780:	mov    ch,0x58
  406782:	adc    al,0x71
  406784:	je     0x4067af
  406786:	mov    ds:0xe116c212,eax
  40678b:	jne    0x406711
  40678d:	out    0x61,eax
  40678f:	and    al,0x34
  406791:	fdiv   st,st(6)
  406793:	xchg   esi,eax
  406794:	sub    al,0xd6
  406796:	(bad)  
  406797:	shr    DWORD PTR [ebx],1
  406799:	jbe    0x406741
  40679b:	push   ss
  40679c:	xor    ch,BYTE PTR [eax]
  40679e:	int3   
  40679f:	sbb    cl,BYTE PTR [edx]
  4067a1:	(bad)  
  4067a2:	ja     0x40681e
  4067a4:	js     0x40674f
  4067a6:	retf   
  4067a7:	mov    WORD PTR [esi],ds
  4067a9:	ja     0x4067ba
  4067ab:	scas   eax,DWORD PTR es:[edi]
  4067ac:	icebp  
  4067ad:	jmp    0xa06a:0x28a1a1e2
  4067b4:	dec    ecx
  4067b5:	mov    esi,0x84b0a2c2
  4067ba:	adc    BYTE PTR [ecx-0x62],dh
  4067bd:	mov    ah,0x91
  4067bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c0:	xlat   BYTE PTR ds:[ebx]
  4067c1:	sub    al,0xde
  4067c3:	in     eax,dx
  4067c4:	inc    edi
  4067c5:	ror    DWORD PTR [edi+0x20],0xc
  4067c9:	test   eax,0x66772115
  4067ce:	pop    edx
  4067cf:	mov    edx,DWORD PTR ds:0xbebfe83b
  4067d5:	sbb    eax,esi
  4067d7:	sbb    esi,esi
  4067d9:	adc    ecx,esp
  4067db:	cmp    bh,BYTE PTR ds:0xe6820b6b
  4067e1:	test   BYTE PTR [ebp-0x36],dh
  4067e4:	lahf   
  4067e5:	pop    ebp
  4067e6:	in     al,0xcb
  4067e8:	dec    esp
  4067e9:	push   ss
  4067ea:	sub    BYTE PTR [ebx-0xdbd302c],al
  4067f0:	push   0x12086b3b
  4067f5:	cmp    ah,BYTE PTR [esp+edx*4]
  4067f8:	adc    BYTE PTR gs:[esi+0x2a],bh
  4067fc:	popf   
  4067fd:	rcr    BYTE PTR [ebp+0x63],cl
  406800:	jne    0x40687c
  406802:	test   DWORD PTR [esi],ebx
  406804:	popf   
  406805:	or     eax,esp
  406807:	jno    0x4067f8
  406809:	int    0x54
  40680b:	or     al,0xfb
  40680d:	jmp    FWORD PTR [eax+eiz*1+0x49]
  406811:	inc    ebp
  406812:	adc    eax,0x4e7ba48a
  406817:	mov    edi,DWORD PTR [ebx-0x7c]
  40681a:	(bad)  
  40681b:	das    
  40681c:	out    dx,eax
  40681d:	jae    0x4067d0
  40681f:	icebp  
  406820:	mov    ebp,0x8d3635a6
  406825:	out    0x3b,al
  406827:	sbb    al,0x5
  406829:	dec    edi
  40682a:	fsubr  st,st(4)
  40682c:	cmc    
  40682d:	fnstsw WORD PTR [ecx-0x4531eec5]
  406833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406834:	nop
  406835:	xchg   edi,eax
  406836:	fisubr DWORD PTR [ecx-0x43]
  406839:	pop    ss
  40683a:	cmp    DWORD PTR [eax],ebx
  40683c:	dec    eax
  40683d:	icebp  
  40683e:	fldcw  WORD PTR [ebx-0x61152e93]
  406844:	jge    0x406856
  406846:	shl    edx,0xa9
  406849:	and    al,0xed
  40684b:	xor    DWORD PTR [ebp-0x250e49d2],ebp
  406851:	nop
  406852:	hlt    
  406853:	or     BYTE PTR [edx+0x23],dh
  406856:	loopne 0x4068a9
  406858:	popa   
  406859:	lea    eax,[ecx-0x129ab97f]
  40685f:	icebp  
  406860:	and    DWORD PTR [ebx],ecx
  406862:	cs xchg edx,eax
  406864:	push   ecx
  406865:	jo     0x4068d9
  406867:	test   BYTE PTR ds:0xe16e05b9,ch
  40686d:	xchg   ebx,eax
  40686e:	jno    0x4068be
  406870:	pop    ecx
  406871:	punpckhbw mm2,mm1
  406874:	les    ebp,FWORD PTR [ecx]
  406876:	push   esp
  406877:	(bad)  
  406878:	jg     0x406863
  40687a:	aas    
  40687b:	call   0x2b90:0x3c899093
  406882:	xchg   esi,eax
  406883:	jbe    0x4068d9
  406885:	mov    ebx,0x8008a59
  40688a:	leave  
  40688b:	es add eax,0x4088c4c
  406891:	fisttp QWORD PTR [ebp+0x41]
  406894:	mov    bh,0x36
  406896:	in     al,0x6b
  406898:	pop    eax
  406899:	push   ebx
  40689a:	scas   eax,DWORD PTR es:[edi]
  40689b:	test   al,0x1a
  40689d:	and    DWORD PTR [ebx-0x6],edx
  4068a0:	lods   al,BYTE PTR ds:[esi]
  4068a1:	sti    
  4068a2:	pop    ss
  4068a3:	(bad)  
  4068a4:	jnp    0x40691e
  4068a6:	test   eax,0x7b7ebd14
  4068ab:	and    esp,DWORD PTR ds:0x181b43b4
  4068b1:	fild   QWORD PTR [eax]
  4068b3:	pop    es
  4068b4:	cmc    
  4068b5:	push   esi
  4068b6:	repnz idiv DWORD PTR [edi+0x5d]
  4068ba:	loope  0x406921
  4068bc:	xchg   ebx,eax
  4068bd:	inc    ebx
  4068be:	jmp    0x1d7a:0x6ff0cb98
  4068c5:	sbb    edx,DWORD PTR ds:0x81bf9e7e
  4068cb:	cdq    
  4068cc:	ret    0xab0e
  4068cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d0:	fsub   DWORD PTR [ebx+ebp*8]
  4068d3:	ds in  eax,dx
  4068d5:	or     dl,ch
  4068d7:	(bad)  [ecx+0x21]
  4068da:	push   ss
  4068db:	xlat   BYTE PTR ds:[ebx]
  4068dc:	dec    esp
  4068dd:	jae    0x4068f5
  4068df:	pop    eax
  4068e0:	dec    esi
  4068e1:	outs   dx,BYTE PTR ds:[esi]
  4068e2:	aas    
  4068e3:	sub    DWORD PTR ds:0x6d0e7c43,eax
  4068e9:	iret   
  4068ea:	stos   BYTE PTR es:[edi],al
  4068eb:	mov    BYTE PTR [eax+0x3218cfb],bh
  4068f1:	inc    esp
  4068f2:	jbe    0x406945
  4068f4:	xchg   ebx,eax
  4068f5:	mov    ch,0x15
  4068f7:	minps  xmm4,XMMWORD PTR [eax+eiz*1+0x1b]
  4068fc:	into   
  4068fd:	dec    edx
  4068fe:	or     BYTE PTR [edx],dh
  406900:	cdq    
  406901:	scas   al,BYTE PTR es:[edi]
  406902:	leave  
  406903:	dec    ebx
  406904:	pop    ds
  406905:	call   0xad2f:0xd488997
  40690c:	sbb    ecx,ecx
  40690e:	inc    esi
  40690f:	lds    ebp,FWORD PTR [esi+eax*2-0xd2d7b4]
  406916:	and    al,0x15
  406918:	nop
  406919:	addr16 loop 0x406900
  40691c:	in     eax,dx
  40691d:	dec    esp
  40691e:	cs cli 
  406920:	ror    bh,1
  406922:	sar    BYTE PTR [ebp-0x68bad6f0],0x3c
  406929:	nop
  40692a:	mov    ds:0xa37fdfb0,eax
  40692f:	(bad)  
  406930:	cld    
  406931:	les    eax,FWORD PTR [esi+eiz*1-0x2]
  406935:	inc    ecx
  406936:	add    bh,BYTE PTR [esi+ebp*4]
  406939:	mov    esp,0xe1380d71
  40693e:	mov    esi,0x1c443868
  406943:	xlat   BYTE PTR ds:[ebx]
  406944:	in     eax,0x0
  406946:	push   es
  406947:	or     DWORD PTR [edi],edx
  406949:	shr    BYTE PTR [ebx+0xac1b7a5],1
  40694f:	jo     0x4069cf
  406951:	cmc    
  406952:	xor    al,0xc
  406954:	xchg   esp,eax
  406955:	bound  ebp,QWORD PTR [esi-0x2b]
  406958:	ds scas eax,DWORD PTR es:[edi]
  40695a:	cwde   
  40695b:	sub    BYTE PTR [edx-0x6d],bh
  40695e:	mov    ch,0x4d
  406960:	fild   WORD PTR [ecx]
  406962:	in     eax,0x66
  406964:	repnz sbb edi,ebx
  406967:	lahf   
  406968:	mov    ds,ebx
  40696a:	and    BYTE PTR [esi-0xe],ch
  40696d:	add    bl,BYTE PTR [ebx+0xe4ad43]
  406973:	scas   eax,DWORD PTR es:[edi]
  406974:	adc    ch,bh
  406976:	or     al,0xe7
  406978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406979:	mov    edx,0x678633e0
  40697e:	xchg   ebx,eax
  40697f:	sub    BYTE PTR [esi+ecx*4+0x7fd843ed],bl
  406986:	cmp    eax,0x308469fc
  40698b:	mov    bl,0x3f
  40698d:	scas   eax,DWORD PTR es:[edi]
  40698e:	into   
  40698f:	es je  0x4069ab
  406992:	sar    BYTE PTR [ebx-0x1dbd8195],1
  406998:	adc    ebp,esp
  40699a:	(bad)  [ebx-0x56]
  40699d:	cwde   
  40699e:	shl    DWORD PTR [edx+ebx*4-0x24462f41],1
  4069a5:	sub    ch,BYTE PTR [ecx+0x6]
  4069a8:	popf   
  4069a9:	inc    ebp
  4069aa:	shl    BYTE PTR [edx],cl
  4069ac:	bound  esi,QWORD PTR [edi]
  4069ae:	les    ebx,FWORD PTR ds:0x5fb00fe1
  4069b4:	test   esp,ebp
  4069b6:	cmp    dl,BYTE PTR [ebx+ebp*8]
  4069b9:	mov    ecx,0xb339e272
  4069be:	out    dx,al
  4069bf:	or     dl,al
  4069c1:	fld    DWORD PTR [eax]
  4069c3:	jns    0x406999
  4069c5:	xchg   ebp,eax
  4069c6:	xlat   BYTE PTR ds:[ebx]
  4069c7:	jge    0x406a14
  4069c9:	or     dl,cl
  4069cb:	(bad)  [eax+0x3090913]
  4069d1:	xor    ecx,0xfffffffe
  4069d4:	xor    WORD PTR [ecx],ax
  4069d7:	cmp    ebx,DWORD PTR [edi]
  4069d9:	rcr    DWORD PTR [esi-0x43],1
  4069dc:	cmp    ebx,DWORD PTR [ebp+0x7b]
  4069df:	dec    eax
  4069e0:	jbe    0x4069ed
  4069e2:	mov    ds:0xf9657995,al
  4069e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069e8:	data16 daa 
  4069ea:	call   0xcb65103f
  4069ef:	mov    ds:0x4fca4181,eax
  4069f4:	(bad)  
  4069f5:	xor    eax,0xd4928fb1
  4069fa:	or     DWORD PTR ds:0x4e55c5fb,0x99bcdd79
  406a04:	pop    ebx
  406a05:	pop    ecx
  406a06:	pusha  
  406a07:	pop    esi
  406a08:	xlat   BYTE PTR ds:[ebx]
  406a09:	fdiv   QWORD PTR [edi+edx*2+0x2a391a5d]
  406a10:	dec    esi
  406a11:	pop    edx
  406a12:	ret    0x47bc
  406a15:	ins    DWORD PTR es:[edi],dx
  406a16:	repz ss push ebp
  406a19:	in     eax,dx
  406a1a:	fdiv   DWORD PTR [eax+0x79]
  406a1d:	or     dh,BYTE PTR [edi-0x630d84e8]
  406a23:	loop   0x4069d8
  406a25:	adc    DWORD PTR [edi+ebp*1],eax
  406a28:	xchg   DWORD PTR [edx],eax
  406a2a:	lods   al,BYTE PTR ds:[esi]
  406a2b:	gs in  eax,0xba
  406a2e:	bound  esp,QWORD PTR [eax-0x18]
  406a31:	mov    bh,BYTE PTR [ecx-0x31]
  406a34:	call   0x79ff91d7
  406a39:	pop    ecx
  406a3a:	test   BYTE PTR [esi-0x72131678],0xca
  406a41:	bound  esp,QWORD PTR [ebx+esi*1]
  406a44:	enter  0x4105,0x1e
  406a48:	jae    0x406a19
  406a4a:	xlat   BYTE PTR ds:[ebx]
  406a4b:	xlat   BYTE PTR ds:[ebx]
  406a4c:	push   es
  406a4d:	xchg   esp,eax
  406a4e:	sub    eax,0x4c9a3f9e
  406a53:	aad    0x8f
  406a55:	inc    esp
  406a56:	stc    
  406a57:	xchg   ebp,eax
  406a58:	xor    DWORD PTR [ebx+0x3feb7005],esp
  406a5e:	pop    ebp
  406a5f:	push   ds
  406a60:	lahf   
  406a61:	jbe    0x406a6c
  406a63:	aas    
  406a64:	jnp    0x4069ed
  406a66:	les    edi,FWORD PTR [ebx-0x7d05bce0]
  406a6c:	xchg   ecx,eax
  406a6d:	call   0x1e84:0x9643fd07
  406a74:	xchg   esp,eax
  406a75:	dec    esp
  406a76:	cmp    eax,DWORD PTR fs:[ecx+edx*2-0x4bf0ecf2]
  406a7e:	imul   edx,DWORD PTR [edi+0x1323df4],0xe5f093d2
  406a88:	fidivr WORD PTR [ebp+eax*8-0x5828aba8]
  406a8f:	(bad)  
  406a90:	dec    edi
  406a92:	or     cl,bh
  406a94:	xor    ecx,ebx
  406a96:	into   
  406a97:	mov    WORD PTR [eax+0x6f1cd819],?
  406a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a9e:	and    al,0x58
  406aa0:	fwait
  406aa1:	jns    0x406ab2
  406aa3:	dec    eax
  406aa4:	mov    esi,0xef2ab998
  406aa9:	dec    edx
  406aaa:	loopne 0x406a6c
  406aac:	mov    cl,0x42
  406aae:	mov    BYTE PTR [edx+0x35],bl
  406ab1:	mov    esi,0x1fd5a6bd
  406ab6:	enter  0xcacc,0x92
  406aba:	pop    ds
  406abb:	popf   
  406abc:	add    cl,al
  406abe:	ds push 0x51
  406ac1:	fnstenv [edi+ebx*1]
  406ac4:	mov    ebp,0x1edf3262
  406ac9:	enter  0x6c58,0x85
  406acd:	int3   
  406ace:	(bad)  [esi-0x6ec79c90]
  406ad4:	stos   BYTE PTR es:[edi],al
  406ad5:	scas   al,BYTE PTR es:[edi]
  406ad6:	xor    BYTE PTR [esi-0x2d09484d],bh
  406adc:	in     al,dx
  406add:	pop    es
  406ade:	mov    WORD PTR [ebp+eiz*1-0x4edce620],?
  406ae5:	mov    bh,0xfb
  406ae7:	push   edi
  406ae8:	js     0x406b13
  406aea:	ror    al,0xc6
  406aed:	mov    al,ds:0x9d36e4b4
  406af2:	arpl   WORD PTR [esi-0x33c866f3],si
  406af8:	fidivr WORD PTR [ecx-0x7d8c4ed8]
  406afe:	sbb    eax,esp
  406b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b01:	(bad)  
  406b02:	lods   al,BYTE PTR ds:[esi]
  406b03:	pushf  
  406b04:	push   ecx
  406b05:	pop    ss
  406b06:	sub    al,0x49
  406b08:	or     cl,BYTE PTR [esi]
  406b0a:	daa    
  406b0b:	jbe    0x406b43
  406b0d:	rol    DWORD PTR [ebx],0x5b
  406b10:	xor    DWORD PTR [ebx-0x405a6074],edi
  406b16:	jns    0x406aea
  406b18:	mov    ebx,0xd56f30f7
  406b1d:	(bad)  
  406b1e:	xchg   esp,eax
  406b1f:	repz or DWORD PTR [ebp+0x14],esi
  406b23:	pop    edi
  406b24:	ja     0x406ab8
  406b26:	pop    esi
  406b27:	adc    al,0x16
  406b29:	xchg   esi,eax
  406b2a:	js     0x406ac0
  406b2c:	daa    
  406b2d:	and    ebx,DWORD PTR [eax-0x6988a20f]
  406b33:	lock ja 0x406afe
  406b36:	gs jl  0x406b0b
  406b39:	jne    0x406b70
  406b3b:	ins    BYTE PTR es:[edi],dx
  406b3c:	js     0x406baf
  406b3e:	sbb    BYTE PTR [edi],ch
  406b40:	cmp    ebp,edx
  406b42:	out    dx,al
  406b43:	retf   0x8f78
  406b46:	xlat   BYTE PTR ds:[ebx]
  406b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b48:	stos   BYTE PTR es:[edi],al
  406b49:	push   ebp
  406b4a:	dec    DWORD PTR [edx]
  406b4c:	in     al,0xa3
  406b4e:	(bad)  
  406b4f:	loop   0x406b1d
  406b51:	aaa    
  406b52:	xchg   edi,eax
  406b53:	dec    edi
  406b54:	fdivr  QWORD PTR [ebx+0x797bef10]
  406b5a:	aas    
  406b5b:	push   ebx
  406b5c:	ret    
  406b5d:	addr16 cmc 
  406b5f:	mov    bl,BYTE PTR [ebx+edi*8-0x6f]
  406b63:	cdq    
  406b64:	hlt    
  406b65:	jae    0x406b76
  406b67:	cs inc ebx
  406b69:	mov    esp,0xc525fb43
  406b6e:	std    
  406b6f:	dec    edi
  406b70:	push   cs
  406b71:	and    edi,DWORD PTR [ecx+0x8]
  406b74:	sub    BYTE PTR [ebp+0x5690dc78],0xd6
  406b7b:	dec    ebx
  406b7c:	pop    es
  406b7d:	or     eax,0xa66f7e42
  406b82:	dec    esp
  406b83:	ins    BYTE PTR es:[edi],dx
  406b84:	xchg   esp,eax
  406b85:	mov    cl,0x1
  406b87:	jns    0x406b61
  406b89:	sub    ch,BYTE PTR [edi+0x66]
  406b8c:	fmul   DWORD PTR [esi+0x18]
  406b8f:	xchg   esp,eax
  406b90:	call   0x35d4c50c
  406b95:	iret   
  406b96:	jo     0x406c0e
  406b98:	scas   eax,DWORD PTR es:[edi]
  406b99:	add    eax,0x52efae20
  406b9e:	jo     0x406b92
  406ba0:	out    dx,eax
  406ba1:	sub    DWORD PTR [ecx+0xf6eb034],esp
  406ba7:	loope  0x406ba6
  406ba9:	jmp    0xd144c9e6
  406bae:	fisttp QWORD PTR [ecx-0x2e]
  406bb1:	jno    0x406b52
  406bb3:	mov    eax,0xc4df73c4
  406bb8:	bound  edx,QWORD PTR [edx+0x433e4533]
  406bbe:	jbe    0x406c04
  406bc0:	out    dx,al
  406bc1:	fild   QWORD PTR [edx-0xe]
  406bc4:	clc    
  406bc5:	daa    
  406bc6:	inc    ebx
  406bc7:	dec    edx
  406bc8:	jmp    0x3276:0x45af232f
  406bcf:	xlat   BYTE PTR ds:[ebx]
  406bd0:	jl     0x406ba5
  406bd2:	adc    eax,0x4911745f
  406bd7:	dec    edi
  406bd8:	cli    
  406bd9:	shl    BYTE PTR [esi],0x18
  406bdc:	jle    0x406c2b
  406bde:	jge    0x406c4c
  406be0:	xor    al,0xed
  406be2:	and    DWORD PTR [edi-0x4cd737c0],eax
  406be8:	jne    0x406bd7
  406bea:	push   edx
  406beb:	xor    bh,dh
  406bed:	pop    ebx
  406bee:	sub    dl,BYTE PTR [ecx]
  406bf0:	mov    es,WORD PTR [ebp-0x30]
  406bf3:	push   eax
  406bf4:	retf   0xf8d5
  406bf7:	pop    edi
  406bf8:	pushf  
  406bf9:	jbe    0x406bc6
  406bfb:	sbb    DWORD PTR [ebx-0xc],0x5d609e52
  406c02:	shl    DWORD PTR [ecx+0x4],cl
  406c05:	cwde   
  406c06:	or     DWORD PTR [edi-0x50861bae],ecx
  406c0c:	pop    edi
  406c0d:	cmp    ebp,DWORD PTR [esi*1-0x53af1859]
  406c14:	data16 idiv BYTE PTR [ecx+0x24]
  406c18:	in     al,dx
  406c19:	pop    edx
  406c1a:	retf   
  406c1b:	push   edi
  406c1c:	jmp    0x7940:0x5c8c6e5b
  406c23:	std    
  406c24:	cli    
  406c25:	std    
  406c26:	lods   al,BYTE PTR ds:[esi]
  406c27:	mov    ds:0x93e4425,eax
  406c2c:	push   ss
  406c2d:	or     ah,BYTE PTR [ebx]
  406c2f:	xchg   edi,eax
  406c30:	fwait
  406c31:	pop    ebx
  406c32:	sbb    BYTE PTR ds:0x2b614f26,dh
  406c38:	hlt    
  406c39:	cmp    ebx,DWORD PTR [esi]
  406c3b:	or     eax,0x9b6bab29
  406c40:	xchg   ecx,eax
  406c41:	fcom   DWORD PTR [ecx-0x3b68c4c4]
  406c47:	sub    bh,BYTE PTR [edx]
  406c49:	outs   dx,DWORD PTR ds:[esi]
  406c4a:	stc    
  406c4b:	add    BYTE PTR [esi+0x63],cl
  406c4e:	sahf   
  406c4f:	ret    0xb397
  406c52:	push   es
  406c53:	retf   
  406c54:	out    0xa9,eax
  406c56:	mov    BYTE PTR [ebp-0x16c0931e],dh
  406c5c:	retf   
  406c5d:	add    cl,0xce
  406c60:	pop    edi
  406c61:	lock pop eax
  406c63:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c65:	sbb    al,0xb2
  406c67:	push   0x7090a341
  406c6c:	pop    ss
  406c6d:	aad    0x64
  406c6f:	and    eax,0x8f2314ed
  406c74:	cdq    
  406c75:	jmp    0x3856:0xc207f9f7
  406c7c:	mov    eax,ds:0xaf2ce35e
  406c81:	mov    BYTE PTR [edi+esi*8-0x4f7b623b],cl
  406c88:	stos   DWORD PTR es:[edi],eax
  406c89:	jne    0x406c5d
  406c8b:	push   0x61
  406c8d:	stc    
  406c8e:	fisttp DWORD PTR ds:0xa1b68838
  406c94:	mov    edx,DWORD PTR ds:0x79fbb514
  406c9a:	mov    eax,0x1ac9fe03
  406c9f:	adc    BYTE PTR [esi-0x4e],dl
  406ca2:	dec    edx
  406ca3:	mov    dh,0x1d
  406ca5:	xchg   ebx,eax
  406ca6:	adc    bh,BYTE PTR [ecx+0xb]
  406ca9:	push   esp
  406caa:	sbb    al,0xb0
  406cac:	inc    ebx
  406cad:	mov    ch,al
  406caf:	push   ds
  406cb0:	stc    
  406cb1:	mov    ah,0x7c
  406cb3:	mov    eax,0x68db2e9d
  406cb8:	add    esi,DWORD PTR ds:0x2e870306
  406cbe:	lock inc esi
  406cc0:	test   BYTE PTR [ebx+0x6f],ch
  406cc3:	je     0x406d0b
  406cc5:	mov    edi,0x335edfe2
  406cca:	cwde   
  406ccb:	push   edi
  406ccc:	fld    TBYTE PTR [edi+edx*8-0x61]
  406cd0:	xor    eax,0x9511c86f
  406cd5:	mov    BYTE PTR [edx+ebx*1+0x55992bff],0xcf
  406cdd:	sub    DWORD PTR [eax+ebp*8-0x63a4e95d],ecx
  406ce4:	mov    ebx,0xfdfaff01
  406ce9:	out    0xd2,al
  406ceb:	inc    edi
  406cec:	icebp  
  406ced:	adc    al,0x9c
  406cef:	dec    esi
  406cf0:	imul   BYTE PTR ds:0x90a33904
  406cf6:	out    0xc0,eax
  406cf8:	push   edi
  406cf9:	jno    0x406ca3
  406cfb:	pop    DWORD PTR [esi+0x34]
  406cfe:	push   es
  406cff:	jecxz  0x406cae
  406d01:	popf   
  406d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d03:	push   esp
  406d05:	and    al,0xc6
  406d07:	pop    ebp
  406d08:	out    0xa3,eax
  406d0a:	test   DWORD PTR [eax-0x75],ebp
  406d0d:	mov    bh,0xc4
  406d0f:	rcl    DWORD PTR [ebp+0x66],1
  406d12:	inc    ebx
  406d13:	xor    eax,0xcc8e516f
  406d18:	xchg   esp,eax
  406d19:	outs   dx,DWORD PTR ds:[esi]
  406d1a:	test   DWORD PTR [eax],edx
  406d1c:	fincstp 
  406d1e:	retf   0x9184
  406d21:	xchg   edx,eax
  406d22:	jle    0x406d51
  406d24:	sbb    DWORD PTR [ebx+0x7d11fe5a],ecx
  406d2a:	cli    
  406d2b:	jl     0x406d6e
  406d2d:	test   DWORD PTR [ecx-0x50],ecx
  406d30:	out    0x37,al
  406d32:	inc    edi
  406d33:	out    0x9e,eax
  406d35:	repz and eax,0x85f199cc
  406d3b:	cs push ss
  406d3d:	adc    BYTE PTR [edx+0x1e],cl
  406d40:	or     DWORD PTR [ebp+0x4f],edx
  406d43:	loop   0x406d5e
  406d45:	dec    ebx
  406d46:	test   dl,0x2f
  406d49:	dec    ebx
  406d4a:	mov    dl,0x4a
  406d4c:	inc    ebp
  406d4d:	(bad)  
  406d4f:	mov    al,ds:0xd2601fca
  406d54:	jge    0x406d49
  406d56:	int    0x16
  406d58:	adc    esp,DWORD PTR [edx]
  406d5a:	add    BYTE PTR [esi+edx*2+0x5e],dh
  406d5e:	clc    
  406d5f:	xchg   edx,eax
  406d60:	add    al,0xfa
  406d62:	shr    DWORD PTR [ebp-0x36da1a40],0x5b
  406d69:	loope  0x406d87
  406d6b:	pop    es
  406d6c:	arpl   WORD PTR [esi],cx
  406d6e:	aas    
  406d6f:	and    DWORD PTR [edi+0x32f7c76],eax
  406d75:	inc    esi
  406d76:	in     eax,0xc9
  406d78:	test   al,0xe5
  406d7a:	cld    
  406d7b:	fistp  QWORD PTR [edi]
  406d7d:	outs   dx,BYTE PTR ds:[esi]
  406d7e:	pop    ds
  406d7f:	test   eax,0x68968e9b
  406d84:	out    dx,al
  406d85:	dec    edx
  406d86:	jmp    0x50f4fd75
  406d8b:	test   eax,0xc0d94fc4
  406d90:	push   eax
  406d91:	add    al,0x64
  406d93:	(bad)  
  406d95:	push   ecx
  406d96:	stc    
  406d97:	push   0x64
  406d99:	mov    ebp,0x4529fd05
  406d9e:	(bad)  
  406d9f:	xchg   edi,eax
  406da0:	(bad)  
  406da1:	mov    edx,esp
  406da3:	pushf  
  406da4:	fsubr  st(0),st
  406da6:	mov    ebx,0x52685d44
  406dab:	and    al,0xd3
  406dad:	xchg   ebp,eax
  406dae:	mov    ds:0x6b08182d,al
  406db3:	popf   
  406db4:	rcr    DWORD PTR [ebp+esi*4-0x38],0xf0
  406db9:	or     ebx,esi
  406dbb:	mov    ah,0xb9
  406dbd:	test   DWORD PTR [esi],edi
  406dbf:	mov    ch,0x2c
  406dc1:	mov    esi,0xebf5eaf1
  406dc6:	sub    dl,BYTE PTR [ecx+0x68c0c53]
  406dcc:	loopne 0x406de9
  406dce:	push   eax
  406dcf:	sar    ebx,0xa4
  406dd2:	add    esi,esp
  406dd4:	dec    esp
  406dd5:	mov    cl,0x2c
  406dd7:	pop    es
  406dd8:	(bad)  
  406dd9:	jg     0x406e3c
  406ddb:	stos   DWORD PTR es:[edi],eax
  406ddc:	(bad)  
  406ddd:	mov    edx,0x1e548c31
  406de2:	imul   esi
  406de4:	fmul   DWORD PTR [eax-0x4bdc75af]
  406dea:	push   eax
  406deb:	add    ecx,ecx
  406ded:	bound  esp,QWORD PTR [esi-0x407c38de]
  406df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406df4:	jns    0x406db2
  406df6:	fcomp  QWORD PTR [esp+edi*4+0x3e05595b]
  406dfd:	loop   0x406dbc
  406dff:	(bad)  
  406e00:	out    0x84,eax
  406e02:	in     al,dx
  406e03:	aad    0x94
  406e05:	sub    BYTE PTR [ebp+0x5aa0a2a3],cl
  406e0b:	sub    eax,0xfe444a5c
  406e10:	pop    edx
  406e11:	and    BYTE PTR [eax-0x6d],ah
  406e14:	add    bh,ch
  406e16:	(bad)  
  406e17:	xchg   ebp,eax
  406e18:	inc    ebp
  406e19:	or     bl,BYTE PTR ss:[ebx-0x3e1eded0]
  406e20:	jecxz  0x406e8f
  406e22:	pop    sp
  406e24:	pop    esp
  406e25:	mov    WORD PTR [edx-0x46557260],gs
  406e2b:	mov    ah,bl
  406e2d:	add    DWORD PTR [ebx],ecx
  406e2f:	dec    edx
  406e30:	adc    al,0x52
  406e32:	pop    edi
  406e33:	hlt    
  406e34:	adc    DWORD PTR [eax-0x4c3cd869],0xfffffffc
  406e3b:	aad    0x3d
  406e3d:	dec    ebp
  406e3e:	adc    bh,al
  406e40:	stos   BYTE PTR es:[edi],al
  406e41:	xor    dh,BYTE PTR [ecx+0x3f9410ba]
  406e47:	sub    al,0x29
  406e49:	cmp    eax,0x2282a0af
  406e4e:	in     eax,0x13
  406e50:	mov    ds,WORD PTR ds:0xa90321bb
  406e56:	in     eax,0x83
  406e58:	in     al,dx
  406e59:	add    BYTE PTR [edx+ebx*1],bh
  406e5c:	cwde   
  406e5d:	xor    al,0x94
  406e5f:	inc    esp
  406e60:	jmp    0x794f:0x10a2b22c
  406e67:	ins    DWORD PTR es:[edi],dx
  406e68:	push   cs
  406e69:	fs push ss
  406e6b:	sub    DWORD PTR [ecx-0x9],esi
  406e6e:	push   edi
  406e6f:	lea    edx,[ecx+0x4b]
  406e72:	xor    BYTE PTR [edi],dl
  406e74:	adc    DWORD PTR ds:0xd8d2d079,ecx
  406e7a:	loopne 0x406ee5
  406e7c:	cmp    esi,DWORD PTR [edi+ecx*4+0x17]
  406e80:	pop    ss
  406e81:	imul   edi,DWORD PTR [ebx+0x60],0x2ab3d05b
  406e88:	mov    al,ds:0xd3341c52
  406e8d:	(bad)  
  406e8e:	sbb    BYTE PTR [edx+0x3cbab454],ah
  406e94:	into   
  406e95:	mov    edx,0x1d397b31
  406e9a:	loop   0x406ee9
  406e9c:	rcr    BYTE PTR cs:[edx+ecx*4],1
  406ea0:	scas   al,BYTE PTR es:[edi]
  406ea1:	jae    0x406f0b
  406ea3:	xchg   edx,eax
  406ea4:	ins    DWORD PTR es:[edi],dx
  406ea5:	xor    ebp,DWORD PTR [edx+0x3]
  406ea8:	cwde   
  406ea9:	into   
  406eaa:	out    dx,eax
  406eab:	dec    esp
  406eac:	pop    eax
  406ead:	(bad)  
  406eae:	mov    DWORD PTR [ebx],esp
  406eb0:	pop    edx
  406eb1:	in     al,dx
  406eb2:	adc    ch,BYTE PTR [edi+eax*8]
  406eb5:	mov    ebx,0x8afd7013
  406eba:	sahf   
  406ebb:	push   0x371b1c9c
  406ec0:	dec    edi
  406ec1:	daa    
  406ec2:	adc    esi,DWORD PTR [eax]
  406ec4:	mov    dl,0xc1
  406ec6:	int    0x54
  406ec8:	rol    DWORD PTR [ebx],0xf4
  406ecb:	inc    eax
  406ecc:	nop
  406ecd:	call   0x447b:0x9f83207e
  406ed4:	int    0x86
  406ed6:	sbb    eax,0x926c5b7b
  406edb:	sti    
  406edc:	test   WORD PTR [ebp+0x103a7365],cx
  406ee3:	loope  0x406ef9
  406ee5:	inc    eax
  406ee6:	and    BYTE PTR [edx-0x7d],bh
  406ee9:	js     0x406e92
  406eeb:	push   0xffffffaf
  406eed:	dec    esi
  406eee:	sahf   
  406eef:	xchg   esi,eax
  406ef0:	sbb    al,0x16
  406ef2:	stos   BYTE PTR es:[edi],al
  406ef3:	fmul   DWORD PTR ds:0xf2ca3ecc
  406ef9:	bound  edi,QWORD PTR [ebx+eax*8+0x16d01dc6]
  406f00:	sub    ah,dh
  406f02:	test   DWORD PTR [ecx],0xf83d78f1
  406f08:	sti    
  406f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0a:	xchg   esp,eax
  406f0b:	test   ebx,esi
  406f0d:	aaa    
  406f0e:	in     eax,dx
  406f0f:	lock mov al,ds:0x3c7ca62c
  406f15:	stos   DWORD PTR es:[edi],eax
  406f16:	push   edx
  406f17:	sbb    al,0x94
  406f19:	rcl    BYTE PTR [eax],1
  406f1b:	and    eax,0xd9517b97
  406f20:	mov    eax,ds:0x1fbbced
  406f25:	mov    BYTE PTR [ebx+0x66],bl
  406f28:	push   ebx
  406f29:	cmp    al,0x35
  406f2b:	ins    BYTE PTR es:[edi],dx
  406f2c:	int    0xd2
  406f2e:	bound  edx,QWORD PTR [esp+ebx*1-0x22]
  406f32:	adc    dh,bh
  406f34:	xchg   esi,edx
  406f36:	fidiv  WORD PTR [eax]
  406f38:	lea    esi,[eax+0x3]
  406f3b:	pop    edx
  406f3c:	jp     0x406fbc
  406f3e:	pop    ss
  406f3f:	sub    DWORD PTR [ecx-0x4f518909],eax
  406f45:	sbb    al,0x4
  406f47:	adc    BYTE PTR [eax-0x77],0x9b
  406f4b:	out    dx,al
  406f4c:	xlat   BYTE PTR ds:[ebx]
  406f4d:	popa   
  406f4e:	pusha  
  406f4f:	and    DWORD PTR [ecx+0x5e],ebx
  406f52:	xor    DWORD PTR [edi+eiz*8],eax
  406f55:	adc    DWORD PTR [edi],edx
  406f57:	retf   0x32dd
  406f5a:	neg    DWORD PTR [ecx-0x5e]
  406f5d:	in     al,dx
  406f5e:	enter  0x178a,0x98
  406f62:	add    DWORD PTR [ebp-0x5e7aa5f],0x2f
  406f69:	outs   dx,DWORD PTR es:[esi]
  406f6b:	es xchg esp,eax
  406f6d:	jmp    esp
  406f6f:	or     eax,0x73e27661
  406f74:	mov    dl,0x63
  406f76:	dec    ebx
  406f77:	(bad)  
  406f78:	rcr    BYTE PTR [ebp+0x120bae8d],cl
  406f7e:	sti    
  406f7f:	in     eax,dx
  406f80:	add    cl,al
  406f82:	cwde   
  406f83:	xor    al,0x83
  406f85:	xchg   ebx,eax
  406f86:	jmp    0xf6c3:0x4b33e2b8
  406f8d:	test   BYTE PTR [eax+0x2d63a307],bh
  406f93:	jp     0x406f1e
  406f95:	cmp    cl,dh
  406f97:	sahf   
  406f98:	ins    BYTE PTR es:[edi],dx
  406f99:	pop    ds
  406f9a:	inc    edx
  406f9b:	aad    0x56
  406f9d:	pop    DWORD PTR [edi]
  406f9f:	dec    eax
  406fa0:	ret    
  406fa1:	lods   eax,DWORD PTR ds:[esi]
  406fa2:	scas   al,BYTE PTR es:[edi]
  406fa3:	mov    ds:0x998996d1,eax
  406fa8:	xchg   ebx,eax
  406fa9:	push   ss
  406faa:	sbb    BYTE PTR [eax-0x54],cl
  406fad:	fnstsw WORD PTR cs:[esi-0x43]
  406fb1:	out    dx,eax
  406fb2:	mov    cl,0x46
  406fb4:	dec    edi
  406fb5:	push   ebx
  406fb6:	and    esp,DWORD PTR [ebx+0x40]
  406fb9:	aas    
  406fba:	jg     0x406f50
  406fbc:	pop    ds
  406fbd:	rol    cl,cl
  406fbf:	jecxz  0x406ff3
  406fc1:	cs push esi
  406fc3:	dec    esp
  406fc4:	or     al,BYTE PTR [edi+0x6519ebe3]
  406fca:	stos   BYTE PTR es:[edi],al
  406fcb:	mov    ah,0x6a
  406fcd:	mov    eax,ecx
  406fcf:	xor    DWORD PTR [ebp-0x7b35029b],edi
  406fd5:	push   0x49
  406fd7:	paddsw mm2,mm3
  406fda:	in     al,dx
  406fdb:	push   ecx
  406fdc:	imul   bh
  406fde:	aam    0x48
  406fe0:	dec    esi
  406fe1:	pop    ebp
  406fe2:	call   0x73f446a4
  406fe7:	xchg   ebx,eax
  406fe8:	sti    
  406fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fea:	xor    dl,BYTE PTR [esi-0x56]
  406fed:	lea    eax,[ebx]
  406fef:	pusha  
  406ff0:	imul   esp,DWORD PTR [ebx-0x3c],0x23
  406ff4:	test   al,0xf0
  406ff6:	pop    esp
  406ff7:	jmp    0x5c9028e
  406ffc:	fstp   QWORD PTR ss:[eax-0x26]
  407000:	pop    ecx
  407001:	sub    al,0x7e
  407003:	sub    bh,cl
  407005:	xor    dl,BYTE PTR [eax+0x8]
  407008:	or     edi,ebx
  40700a:	test   DWORD PTR [ecx+0xb20b7b0],eax
  407010:	retf   0xa3d0
  407013:	es xchg ebx,eax
  407015:	bound  edi,QWORD PTR [esi+0x376acf]
  40701b:	in     eax,0x75
  40701d:	loope  0x407027
  40701f:	sub    DWORD PTR [edi+ecx*2-0x1c],0xffffff82
  407024:	xor    al,BYTE PTR [eax+ebp*8]
  407027:	push   esp
  407028:	jge    0x407054
  40702a:	lods   eax,DWORD PTR ds:[esi]
  40702b:	dec    eax
  40702c:	mov    WORD PTR ds:0xd0750931,ss
  407032:	jne    0x406fcd
  407034:	iret   
  407035:	test   DWORD PTR [ebx+ebx*8],0x2eaf376
  40703c:	call   0x1f2bf017
  407041:	in     al,dx
  407042:	add    esi,DWORD PTR [esi+eiz*8]
  407045:	mov    al,0xdc
  407047:	mov    edx,ds
  407049:	xor    BYTE PTR [ebp+0x2cea47ee],al
  40704f:	xor    esp,DWORD PTR [esi+0x65]
  407052:	dec    BYTE PTR [ebx-0x485f48e3]
  407058:	(bad)  
  407059:	out    0x6f,al
  40705b:	xor    al,dl
  40705d:	outs   dx,BYTE PTR ds:[esi]
  40705e:	jg     0x40708d
  407060:	mul    BYTE PTR [esi]
  407062:	xchg   dl,dh
  407064:	push   0x68d9d00
  407069:	add    eax,0xed891432
  40706e:	dec    esp
  40706f:	push   esp
  407070:	fs and eax,0x31c91708
  407076:	hlt    
  407077:	adc    bl,BYTE PTR [edi+0x64]
  40707a:	call   0xcd4:0x2c230203
  407081:	push   edx
  407082:	adc    DWORD PTR [edx+esi*8-0x66],ecx
  407086:	or     edi,DWORD PTR [esi-0x15c025e1]
  40708c:	mov    WORD PTR [ecx],fs
  40708e:	mov    ah,0x57
  407090:	retf   
  407091:	push   eax
  407092:	cmp    DWORD PTR [eax+0x43],esi
  407095:	xlat   BYTE PTR ds:[ebx]
  407096:	repz cs aam 0x68
  40709a:	jns    0x40709f
  40709c:	(bad)  
  40709e:	or     DWORD PTR [edi+0xd52bc6a],ebp
  4070a4:	out    dx,eax
  4070a5:	cmp    DWORD PTR [ecx],ecx
  4070a7:	lea    edi,[ecx+esi*2]
  4070aa:	jo     0x4070b6
  4070ac:	pop    edx
  4070ad:	rcr    ebx,cl
  4070af:	in     al,0x69
  4070b1:	div    DWORD PTR [edx-0x21]
  4070b4:	jo     0x40710f
  4070b6:	imul   edi,edi,0xffffffed
  4070b9:	jle    0x407136
  4070bb:	add    dh,BYTE PTR [ebp-0x2e]
  4070be:	cs and bh,dh
  4070c1:	jae    0x407056
  4070c3:	ret    0xbe3
  4070c6:	test   DWORD PTR [edi-0xc],ecx
  4070c9:	ins    DWORD PTR es:[edi],dx
  4070ca:	pcmpeqw mm5,QWORD PTR [eax]
  4070cd:	dec    edi
  4070ce:	sti    
  4070cf:	scas   al,BYTE PTR es:[edi]
  4070d0:	pop    esi
  4070d1:	jp     0x40708e
  4070d3:	(bad)  
  4070d4:	cli    
  4070d5:	dec    edi
  4070d6:	mov    ecx,DWORD PTR [ebx]
  4070d8:	ror    BYTE PTR [eax],1
  4070da:	push   0xc390b45c
  4070df:	cwde   
  4070e0:	and    edi,eax
  4070e2:	mov    ah,0x57
  4070e4:	mov    al,al
  4070e6:	pop    ebp
  4070e7:	fwait
  4070e8:	cmp    ecx,DWORD PTR [edi+0x1d2b17ac]
  4070ee:	loopne 0x4070b3
  4070f0:	ficom  WORD PTR [ecx]
  4070f2:	sbb    bh,BYTE PTR [esi-0xe]
  4070f5:	retf   0xd068
  4070f8:	outs   dx,DWORD PTR ds:[esi]
  4070f9:	xor    BYTE PTR [esi],cl
  4070fb:	ins    BYTE PTR es:[edi],dx
  4070fc:	call   DWORD PTR [eax+0x25]
  4070ff:	pop    esp
  407100:	into   
  407101:	rcl    DWORD PTR [ebp-0x53],cl
  407104:	and    BYTE PTR [ebx],dh
  407106:	push   ebx
  407107:	push   ebx
  407108:	cwde   
  407109:	xchg   ecx,eax
  40710a:	mov    DWORD PTR [edi+0x24960997],esi
  407110:	jmp    0xe46e:0x371ea576
  407117:	dec    esi
  407118:	cmp    eax,0x85405fa1
  40711d:	cmp    dl,BYTE PTR [edx+0x6f274cc6]
  407123:	push   cs
  407124:	loopne 0x407150
  407126:	sub    DWORD PTR [ecx],ebp
  407128:	pop    esp
  407129:	xchg   edi,eax
  40712a:	sbb    esp,ebp
  40712c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40712d:	sub    al,0xc1
  40712f:	aad    0x40
  407131:	mov    ebx,0xd5e9eaab
  407136:	ss enter 0xea54,0x14
  40713b:	lea    esi,[eax+eiz*4+0x5c9fced4]
  407142:	sbb    dl,BYTE PTR [ecx]
  407144:	inc    edi
  407145:	div    edx
  407147:	xlat   BYTE PTR ds:[ebx]
  407148:	dec    edx
  407149:	stos   BYTE PTR es:[edi],al
  40714a:	ins    BYTE PTR es:[edi],dx
  40714b:	mov    edx,0x7ae90b0a
  407150:	sbb    BYTE PTR [esp+edx*1],al
  407153:	add    DWORD PTR [edi-0x50f00b20],edi
  407159:	dec    eax
  40715a:	fidivr DWORD PTR [ecx+0x591443f]
  407160:	mov    esi,DWORD PTR [ebp*2+0x1488f624]
  407167:	dec    ecx
  407168:	pop    ecx
  407169:	fild   DWORD PTR [eax]
  40716b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40716c:	imul   esp,DWORD PTR [edi-0x4f],0x1905d9d6
  407173:	push   0x71
  407175:	inc    ebx
  407176:	mov    dl,BYTE PTR [eax+0x4bd83f0a]
  40717c:	or     BYTE PTR [ebx+0x58],bh
  40717f:	(bad)  
  407180:	mov    ah,0xc3
  407182:	retf   0xf80f
  407185:	ins    DWORD PTR es:[edi],dx
  407186:	xchg   edi,eax
  407187:	add    BYTE PTR [edx-0x29],0x35
  40718b:	xchg   ebx,eax
  40718c:	or     ecx,ebp
  40718e:	imul   ebp,DWORD PTR [esi-0x328d0075],0x6e7a92ed
  407198:	cmc    
  407199:	jo     0x4071cb
  40719b:	out    0x67,al
  40719d:	ins    DWORD PTR es:[edi],dx
  40719e:	cdq    
  40719f:	nop
  4071a0:	jb     0x407177
  4071a2:	imul   esp,DWORD PTR [ecx+0x32],0xffffffe4
  4071a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a7:	sub    dh,BYTE PTR [ebx+edx*8]
  4071aa:	mov    ebp,0xf51cf6cb
  4071af:	ja     0x40722b
  4071b1:	jmp    0xd956:0x1190252
  4071b8:	(bad)  
  4071b9:	jne    0x40722d
  4071bb:	pop    esi
  4071bc:	dec    ebx
  4071bd:	jnp    0x4071e2
  4071bf:	mov    ecx,0x538f19e7
  4071c4:	rcr    BYTE PTR [esi],cl
  4071c6:	cs ss dec ebp
  4071c9:	push   es
  4071ca:	xchg   ecx,eax
  4071cb:	inc    esi
  4071cc:	cmp    dh,BYTE PTR [edx+0x5211678b]
  4071d2:	sbb    DWORD PTR [edi],ecx
  4071d4:	scas   al,BYTE PTR es:[edi]
  4071d5:	into   
  4071d6:	mov    BYTE PTR [ebx],bl
  4071d8:	xchg   edx,eax
  4071d9:	out    0x2,eax
  4071db:	adc    esp,eax
  4071dd:	xor    edi,0xf96e6fc4
  4071e3:	leave  
  4071e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071e5:	aas    
  4071e6:	dec    edx
  4071e7:	call   0xa912:0x80621739
  4071ee:	or     DWORD PTR [edx],esi
  4071f0:	arpl   WORD PTR [ecx+0x1341c997],sp
  4071f6:	push   ebp
  4071f7:	test   al,0xb4
  4071f9:	mov    ebp,0x86f6184a
  4071fe:	add    BYTE PTR [edx+0x46d65302],cl
  407204:	mov    ecx,0x699e71e4
  407209:	xchg   edx,eax
  40720a:	fnstenv [ecx+eax*1]
  40720d:	sbb    BYTE PTR [eax+0x4fae3b4d],0xc7
  407214:	inc    esi
  407215:	push   es
  407216:	and    edx,ebx
  407218:	sbb    DWORD PTR [ebx],0xffffff81
  40721b:	popf   
  40721c:	test   al,0xf7
  40721e:	sbb    eax,0x840e18ad
  407223:	shl    BYTE PTR [eax+0x2def38a0],1
  407229:	sub    dl,BYTE PTR [edi]
  40722b:	in     eax,dx
  40722c:	pusha  
  40722d:	push   edi
  40722e:	cdq    
  40722f:	retf   
  407230:	inc    edi
  407231:	popa   
  407232:	inc    esi
  407233:	inc    ecx
  407234:	ror    DWORD PTR [ebp+0x45d126d4],cl
  40723a:	jns    0x40725a
  40723c:	ret    0x9bb0
  40723f:	mov    eax,0xa50bd57e
  407244:	pop    edx
  407245:	push   es
  407246:	sub    dh,0xcf
  407249:	adc    bh,BYTE PTR [esi+0x56]
  40724c:	imul   ecx,DWORD PTR [ecx+0x7b],0x8d2f2e1d
  407253:	inc    esi
  407254:	push   es
  407255:	gs js  0x4071eb
  407258:	jge    0x40729f
  40725a:	neg    edi
  40725c:	frstor [edi+0x2bc7cba2]
  407262:	fnstsw WORD PTR [ebx]
  407264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407265:	sbb    eax,0x57ca5cc2
  40726a:	jp     0x407283
  40726c:	inc    eax
  40726d:	sbb    eax,0xcc47cec9
  407272:	mov    DWORD PTR [esp+ebp*4],esp
  407275:	das    
  407276:	push   ebp
  407277:	push   esp
  407278:	call   0xef1a5e50
  40727d:	jo     0x4072c8
  40727f:	scas   eax,DWORD PTR es:[edi]
  407280:	xor    dl,BYTE PTR [esi]
  407282:	inc    esp
  407283:	inc    esp
  407284:	into   
  407285:	pop    ds
  407286:	mov    bl,0x27
  407288:	pop    es
  407289:	push   eax
  40728a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40728b:	mov    al,0x8e
  40728d:	addr16 push ss
  40728f:	and    dh,dl
  407291:	pop    es
  407292:	jns    0x40727a
  407294:	idiv   al
  407296:	pop    ebp
  407297:	xor    bh,BYTE PTR [edi-0x80]
  40729a:	ficom  WORD PTR [ecx+0x7b]
  40729d:	(bad)  
  40729e:	in     al,0x53
  4072a0:	mov    dl,0x3d
  4072a2:	mov    bh,0x5a
  4072a4:	and    eax,ecx
  4072a6:	fcom   DWORD PTR [edx+eiz*2+0x790de545]
  4072ad:	jo     0x4072af
  4072af:	mov    dl,0x98
  4072b1:	out    dx,eax
  4072b2:	sbb    eax,ebp
  4072b4:	nop
  4072b5:	out    dx,al
  4072b6:	mov    ebp,0x49b732d2
  4072bb:	cwde   
  4072bc:	xchg   esp,eax
  4072bd:	or     eax,0xaf4efe58
  4072c2:	dec    ebx
  4072c3:	bound  edx,QWORD PTR [ecx]
  4072c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c6:	mov    ecx,0xe3e8056c
  4072cb:	lahf   
  4072cc:	fistp  QWORD PTR [edx+eiz*8]
  4072cf:	in     al,0xdd
  4072d1:	and    BYTE PTR [ebp-0x16],dh
  4072d4:	xor    BYTE PTR [ebx-0x3],dh
  4072d7:	xchg   edi,eax
  4072d8:	call   0x18cc:0x134df2a9
  4072df:	call   0x421a:0xe6c5b819
  4072e6:	pop    eax
  4072e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e8:	lahf   
  4072e9:	mov    esi,0x1f22f973
  4072ee:	cwde   
  4072ef:	cld    
  4072f0:	aaa    
  4072f1:	sub    eax,ecx
  4072f3:	cmp    bl,0x4c
  4072f6:	lea    eax,[ebx+0x7f]
  4072f9:	jno    0x407288
  4072fb:	add    DWORD PTR [edi],eax
  4072fd:	push   es
  4072fe:	dec    esi
  4072ff:	jb     0x4072a3
  407301:	daa    
  407302:	repnz mov esi,0x81797d25
  407308:	ja     0x407357
  40730a:	jmp    0x962f:0x7a020aee
  407311:	inc    esi
  407312:	pop    ebx
  407313:	gs pushf 
  407315:	mov    ah,0x54
  407317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407319:	push   ss
  40731a:	mov    ds:0xdbd1ce82,eax
  40731f:	sbb    eax,0xae90710b
  407324:	aad    0x51
  407326:	ret    
  407327:	push   eax
  407328:	jne    0x40732a
  40732a:	(bad)  [edi+0x6a]
  40732d:	(bad)  
  40732e:	fs int 0xaf
  407331:	fimul  WORD PTR [edi]
  407333:	fcom   DWORD PTR [edx-0x26467da9]
  407339:	cmp    al,0xf6
  40733b:	inc    ebp
  40733c:	mov    al,0x96
  40733e:	pushf  
  40733f:	repz mov ah,0x30
  407342:	fsqrt  
  407344:	clc    
  407345:	adc    BYTE PTR [edx],ah
  407347:	xor    ebx,DWORD PTR [ebx]
  407349:	mov    ds:0xfb3611a4,al
  40734e:	div    BYTE PTR [ecx+0x5cab3ada]
  407354:	mov    ebp,DWORD PTR [ecx]
  407356:	test   al,0x54
  407358:	xchg   edx,eax
  407359:	aad    0x63
  40735b:	or     edi,esp
  40735d:	cli    
  40735e:	cmp    edx,ebx
  407360:	mov    dl,0xbc
  407362:	in     eax,0x55
  407364:	or     cl,al
  407366:	add    bh,BYTE PTR [edx-0x4f8b0b0d]
  40736c:	pop    ds
  40736d:	xchg   esp,eax
  40736e:	fidivr DWORD PTR [esi+0x56]
  407371:	or     bh,BYTE PTR [edx+0x11]
  407374:	hlt    
  407375:	mov    DWORD PTR [edi-0x27e374df],ecx
  40737b:	loopne 0x4072fe
  40737d:	test   BYTE PTR [esp+esi*8],dh
  407380:	(bad)  
  407381:	call   0x434fb296
  407386:	mov    esi,0x29ada254
  40738b:	adc    DWORD PTR [edx],0x48
  40738e:	sub    bl,BYTE PTR [ebx-0x63919791]
  407394:	mov    esp,0x6212027d
  407399:	add    al,0x59
  40739b:	jg     0x4073ef
  40739d:	adc    DWORD PTR [edi],ecx
  40739f:	jbe    0x407402
  4073a1:	add    al,0x5b
  4073a3:	pop    eax
  4073a4:	out    dx,eax
  4073a5:	psrlw  mm1,mm3
  4073a8:	pop    eax
  4073a9:	push   ds
  4073aa:	or     BYTE PTR [ecx-0x2fe2b7b2],ch
  4073b0:	xor    edx,DWORD PTR [esp+ebx*2+0x4d]
  4073b4:	sub    DWORD PTR [ebx+0x507e71af],esp
  4073ba:	sub    BYTE PTR [edi],bl
  4073bc:	aam    0x1f
  4073be:	xor    DWORD PTR [eax+0x1f],eax
  4073c1:	xor    ch,BYTE PTR [esi+0x2b]
  4073c4:	bound  ebx,QWORD PTR gs:[edi+0x35718cc]
  4073cb:	bound  ecx,QWORD PTR [esi-0xd]
  4073ce:	cld    
  4073cf:	and    BYTE PTR ds:[ecx],bh
  4073d2:	outs   dx,DWORD PTR ds:[esi]
  4073d3:	(bad)  
  4073d4:	mov    ah,dh
  4073d6:	test   eax,0x4e850f26
  4073db:	es pop esp
  4073dd:	add    bh,BYTE PTR [esi-0xe3a7007]
  4073e3:	or     edx,DWORD PTR [ebx]
  4073e5:	stos   BYTE PTR es:[edi],al
  4073e6:	xor    al,0x5d
  4073e8:	shl    BYTE PTR [edi],0x19
  4073eb:	pop    edi
  4073ec:	sub    DWORD PTR [ebx-0x5e],0x1
  4073f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f1:	mov    al,ds:0xd5fb85de
  4073f6:	(bad)  
  4073f7:	data16 sbb BYTE PTR [ebp-0x23],0xe5
  4073fc:	mov    ebp,0xd0a8ae98
  407401:	and    esp,DWORD PTR [eax]
  407403:	pop    edi
  407404:	mov    edi,DWORD PTR [edi-0x484045d]
  40740a:	daa    
  40740b:	inc    ebx
  40740c:	cdq    
  40740d:	mul    DWORD PTR [edi+0x67635f2c]
  407413:	push   esp
  407414:	push   es
  407415:	adc    BYTE PTR ds:0xbd9ec99f,al
  40741b:	cmp    BYTE PTR [ecx+0x74],ah
  40741e:	mov    edx,0xe433be55
  407423:	and    DWORD PTR [edx-0x14],0x17
  407427:	mov    eax,ds:0xc4453cb8
  40742c:	jbe    0x40749a
  40742e:	pop    ecx
  40742f:	(bad)  
  407430:	sub    ch,al
  407432:	bound  ecx,QWORD PTR [esi-0x75]
  407435:	test   DWORD PTR ds:0x5994c0cf,eax
  40743b:	jns    0x407455
  40743d:	mov    al,ds:0xe2425c6a
  407442:	adc    bl,bh
  407444:	mov    BYTE PTR [edx+0x4c235c3f],ch
  40744a:	sbb    al,0x57
  40744c:	ret    0x95de
  40744f:	push   esp
  407450:	mov    ds:0x2dfb9ec9,eax
  407455:	jle    0x40746c
  407457:	lahf   
  407458:	add    ah,BYTE PTR [edx+0x14]
  40745b:	test   al,0xa2
  40745d:	mov    ds:0xe452c712,eax
  407462:	add    DWORD PTR [esi+0x3f],0x3d9f9d7e
  407469:	mov    WORD PTR [ebx-0x6],?
  40746c:	in     eax,0xf6
  40746e:	push   ecx
  40746f:	mov    ch,0x64
  407471:	pop    edi
  407472:	cmp    DWORD PTR [edi],ebx
  407474:	push   0xffffff88
  407476:	ror    DWORD PTR [ecx+0x47e9d533],cl
  40747c:	repz lock push 0x1c
  407480:	mov    edx,0xcafb1ae8
  407485:	imul   esp,DWORD PTR [ecx-0x75],0x1a
  407489:	ficomp WORD PTR [esi]
  40748b:	jne    0x4074e0
  40748d:	shl    dl,1
  40748f:	shl    BYTE PTR [ecx+0x6e],1
  407492:	add    DWORD PTR [ebx-0x7e],eax
  407495:	test   BYTE PTR [ebx-0x16],ah
  407498:	fild   QWORD PTR [edi+0x69a1d7c8]
  40749e:	xchg   esi,eax
  40749f:	lea    esi,[ebp-0x16fed1b9]
  4074a5:	xchg   edx,eax
  4074a6:	xor    ch,0x6e
  4074a9:	ja     0x4074e6
  4074ab:	dec    edi
  4074ac:	mov    esi,0x7fab80fc
  4074b1:	(bad)  
  4074b2:	dec    edi
  4074b3:	ret    
  4074b4:	push   ss
  4074b5:	std    
  4074b6:	js     0x4074f7
  4074b8:	mov    ecx,0x341fa5dd
  4074bd:	shl    BYTE PTR [esi+ecx*4+0x1],cl
  4074c1:	sbb    al,0xce
  4074c3:	or     DWORD PTR [edx],esp
  4074c5:	pop    edx
  4074c6:	push   esi
  4074c7:	sub    edx,ecx
  4074c9:	xchg   ebp,eax
  4074ca:	pop    eax
  4074cb:	push   edi
  4074cc:	push   0xffffffb0
  4074ce:	pop    edi
  4074cf:	add    DWORD PTR [edx+edx*4-0x2bd3cd31],ebx
  4074d6:	push   eax
  4074d7:	int    0xc0
  4074d9:	(bad)  
  4074da:	iret   
  4074db:	loope  0x4074f4
  4074dd:	ret    
  4074de:	test   eax,0x6f0a71b4
  4074e3:	dec    edx
  4074e4:	retf   
  4074e5:	lods   eax,DWORD PTR ds:[esi]
  4074e6:	jno    0x4074a2
  4074e8:	and    eax,0xa241cc86
  4074ed:	sub    DWORD PTR [edi-0x1fb34065],edi
  4074f3:	push   ds
  4074f4:	scas   eax,DWORD PTR es:[edi]
  4074f5:	or     al,0x73
  4074f7:	inc    ebp
  4074f8:	mov    ebx,0xaab7dc50
  4074fd:	jl     0x40757d
  4074ff:	xor    BYTE PTR [edx-0x28],bh
  407502:	lea    bx,[eax]
  407505:	div    BYTE PTR [ebx+0x19]
  407508:	mov    dl,0xb
  40750a:	jo     0x40751f
  40750c:	ret    
  40750d:	scas   eax,DWORD PTR es:[edi]
  40750e:	xor    BYTE PTR [edi],dh
  407510:	pop    ecx
  407511:	aas    
  407512:	inc    esp
  407513:	lahf   
  407514:	add    cl,0x14
  407517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407518:	ret    0xcbd9
  40751b:	lds    ecx,FWORD PTR [edx]
  40751d:	push   edi
  40751e:	inc    eax
  40751f:	fiadd  DWORD PTR ds:0x866df6b7
  407525:	jl     0x40759a
  407527:	jnp    0x4074f2
  407529:	and    al,0xb4
  40752b:	mul    BYTE PTR [esi]
  40752d:	lods   eax,DWORD PTR ds:[esi]
  40752e:	mov    dh,dl
  407530:	xor    bh,ch
  407532:	xor    dh,BYTE PTR [edx-0xad01a2f]
  407538:	push   ebp
  407539:	enter  0xfad9,0x1a
  40753d:	and    BYTE PTR [ebx-0x1c6d070f],al
  407543:	pop    esp
  407544:	test   DWORD PTR [ecx+ecx*8+0x44663450],edx
  40754b:	ins    BYTE PTR es:[edi],dx
  40754c:	imul   ebp,DWORD PTR [ecx-0x2],0xffffff96
  407550:	adc    ch,bl
  407552:	aam    0x86
  407554:	sbb    esp,eax
  407556:	push   esp
  407557:	xchg   edx,eax
  407558:	add    BYTE PTR [esi+0x6b4093de],al
  40755e:	pop    ebx
  40755f:	inc    edx
  407560:	call   0xad77f74e
  407565:	mov    eax,0x657f8ee6
  40756a:	test   DWORD PTR [ebx],edi
  40756c:	push   edx
  40756d:	aas    
  40756e:	cmp    al,0x52
  407570:	into   
  407571:	imul   edi,DWORD PTR ds:0x6796f72e,0x49
  407578:	outs   dx,BYTE PTR ds:[esi]
  407579:	sbb    eax,0x9e813aaa
  40757e:	and    ah,BYTE PTR [eax-0x62a8da4]
  407584:	jmp    0xca04:0x195d4850
  40758b:	mov    ecx,0x4119e98f
  407590:	push   edx
  407591:	and    BYTE PTR [ebx],ah
  407593:	add    cl,BYTE PTR [ebp+ebx*1-0xc]
  407597:	or     esp,DWORD PTR [edi]
  407599:	adc    bl,dl
  40759b:	fucomi st,st(5)
  40759d:	lds    ebx,FWORD PTR [ebp+eiz*4+0x58]
  4075a1:	mov    ebp,0xb9a6acb2
  4075a6:	(bad)  
  4075a7:	push   ds
  4075a8:	(bad)  
  4075a9:	dec    ebp
  4075aa:	pop    ebx
  4075ab:	ja     0x4075a6
  4075ad:	sti    
  4075ae:	std    
  4075af:	pop    ebx
  4075b0:	jmp    0x225761b6
  4075b5:	mov    dl,0xf4
  4075b7:	cwde   
  4075b8:	inc    esi
  4075b9:	or     esp,edx
  4075bb:	pushf  
  4075bc:	jno    0x407627
  4075be:	jmp    0xf7717e9e
  4075c3:	inc    edi
  4075c4:	mov    ebp,esi
  4075c6:	pop    eax
  4075c7:	jmp    0xff077744
  4075cc:	mov    ah,0x36
  4075ce:	jl     0x4075f0
  4075d0:	push   esp
  4075d1:	push   ds
  4075d2:	cmp    eax,0x946fdf1f
  4075d7:	dec    ecx
  4075d8:	xchg   ebp,eax
  4075d9:	inc    esp
  4075da:	outs   dx,BYTE PTR ds:[esi]
  4075db:	ja     0x4075cb
  4075dd:	push   ss
  4075de:	sbb    DWORD PTR [esi+0x4613d558],ecx
  4075e4:	aam    0x5c
  4075e6:	pop    ss
  4075e7:	mov    bh,0xee
  4075e9:	lahf   
  4075ea:	or     bl,BYTE PTR [edx]
  4075ec:	loopne 0x4075c0
  4075ee:	sahf   
  4075ef:	repnz mov ebp,edi
  4075f2:	push   esp
  4075f3:	arpl   WORD PTR [ebx],si
  4075f5:	mov    ebp,0x8bfb8f6
  4075fa:	sbb    dl,BYTE PTR [edi+eax*1-0x79]
  4075fe:	std    
  4075ff:	jge    0x4075f6
  407601:	outs   dx,DWORD PTR ds:[esi]
  407602:	inc    esp
  407603:	(bad)  
  407605:	xchg   edx,eax
  407606:	dec    esp
  407607:	fcmovb st,st(2)
  407609:	xchg   BYTE PTR [edi],ch
  40760b:	dec    ecx
  40760c:	or     bh,BYTE PTR [eax+0x3817995c]
  407612:	test   eax,esp
  407614:	mov    BYTE PTR [ebx+edi*1+0x1d12bbd6],bl
  40761b:	adc    edx,ecx
  40761d:	outs   dx,BYTE PTR ds:[esi]
  40761e:	neg    esp
  407620:	mov    edx,0x8504c62
  407625:	add    edi,0xba6c199f
  40762b:	shl    DWORD PTR [ebx],cl
  40762d:	fst    DWORD PTR ds:0x6057c26c
  407633:	loope  0x4075dd
  407635:	sub    al,0x47
  407637:	push   ss
  407638:	out    dx,al
  407639:	mov    DWORD PTR [edx-0x35d9c8e0],edi
  40763f:	sti    
  407640:	cdq    
  407641:	xor    DWORD PTR [ebx-0x2ed4d647],esi
  407647:	mov    ds:0xc56d1510,eax
  40764c:	pop    ds
  40764d:	and    DWORD PTR [edx+0x7a],esp
  407650:	(bad)  
  407651:	jae    0x407605
  407653:	dec    eax
  407654:	xlat   BYTE PTR ds:[ebx]
  407655:	cmp    DWORD PTR [ebx-0x24928791],esp
  40765b:	inc    eax
  40765d:	sub    DWORD PTR fs:[esi-0xfcc9a46],edx
  407664:	xchg   ecx,eax
  407665:	mov    cl,0x83
  407667:	fimul  WORD PTR [ebp+ebp*4-0x2d]
  40766b:	call   0x855a:0x247ea41c
  407672:	mov    ecx,0xabbee011
  407677:	ror    BYTE PTR [esi+0x2e],0xde
  40767b:	enter  0x161b,0x82
  40767f:	jg     0x407634
  407681:	pop    ss
  407682:	pop    edx
  407683:	and    ecx,DWORD PTR [eax+0x11]
  407686:	or     ecx,DWORD PTR [ecx+ebp*2+0x91df8ce]
  40768d:	scas   al,BYTE PTR es:[edi]
  40768e:	cli    
  40768f:	push   esi
  407690:	cmc    
  407691:	add    cl,BYTE PTR [edx-0x24f10539]
  407697:	je     0x40764e
  407699:	pop    ebx
  40769a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40769b:	jle    0x40762a
  40769d:	iretw  
  40769f:	repz test DWORD PTR [ebp+0x3],esi
  4076a3:	mov    dl,0xf5
  4076a5:	scas   al,BYTE PTR es:[edi]
  4076a6:	push   ecx
  4076a7:	clc    
  4076a8:	xchg   ebp,eax
  4076a9:	int3   
  4076aa:	cmp    eax,0xecda5bd9
  4076af:	xchg   esi,eax
  4076b0:	or     ch,BYTE PTR [edx]
  4076b2:	aad    0xd
  4076b4:	jb     0x407667
  4076b6:	int    0xad
  4076b8:	sbb    bl,ch
  4076ba:	or     eax,0x9dd3d003
  4076bf:	or     edx,esp
  4076c1:	add    DWORD PTR [edi-0x42b76889],edi
  4076c7:	mov    ds:0xa7f19486,al
  4076cc:	jmp    0xc83e:0x8088f438
  4076d3:	test   al,0x8f
  4076d5:	xor    eax,0xf9b9bc62
  4076da:	xor    BYTE PTR [ecx],bl
  4076dc:	fdivr  DWORD PTR [ebp+0x5a]
  4076df:	pop    ss
  4076e0:	cmp    DWORD PTR [eax+0x25],ebp
  4076e3:	lods   eax,DWORD PTR ds:[esi]
  4076e4:	das    
  4076e5:	xchg   esp,eax
  4076e6:	adc    edi,DWORD PTR [eax+eiz*8+0x46]
  4076ea:	nop
  4076eb:	imul   esp,esp,0xfffffffe
  4076ee:	adc    al,0x50
  4076f0:	xchg   ebx,eax
  4076f1:	adc    BYTE PTR [ebp+0x543ba947],bh
  4076f7:	xor    DWORD PTR [edx+0x37],esi
  4076fa:	int    0x4
  4076fc:	test   DWORD PTR [eax],eax
  4076fe:	xchg   BYTE PTR [edi+edi*1-0x26e93c91],ch
  407705:	icebp  
  407706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407707:	inc    eax
  407708:	test   al,0x4d
  40770a:	mov    edx,0x464aa6a5
  40770f:	repnz inc esi
  407711:	mov    eax,0x787ef866
  407717:	xchg   esi,eax
  407718:	mov    bl,0xc8
  40771a:	mov    ?,WORD PTR [ecx+ecx*2-0x21]
  40771e:	push   esi
  40771f:	push   ss
  407720:	xchg   esp,eax
  407721:	xor    DWORD PTR [edx+0x75f3af1],ecx
  407727:	mov    cs,WORD PTR [edx-0x75]
  40772a:	pop    ebx
  40772b:	cdq    
  40772c:	cmp    DWORD PTR [edx],ebx
  40772e:	xchg   esp,eax
  40772f:	push   0x5c9f3792
  407734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407735:	shl    DWORD PTR [edx],cl
  407737:	mov    edx,0xd6ae27a8
  40773c:	lahf   
  40773d:	push   cs
  40773e:	les    esp,FWORD PTR [ecx+0x2b]
  407741:	test   eax,0x94c98d2d
  407746:	add    esi,DWORD PTR [ebx-0x7e276b67]
  40774c:	out    dx,eax
  40774d:	call   0x49060934
  407752:	or     eax,0xe1d912de
  407757:	jl     0x40773d
  407759:	mov    eax,ds:0xe1bf5395
  40775e:	mov    al,0xdb
  407760:	adc    DWORD PTR [ecx],eax
  407762:	repz shl BYTE PTR [edx+0x4f],cl
  407766:	mov    eax,ds:0x7e2ef066
  40776b:	pop    es
  40776c:	mov    BYTE PTR ds:0xedd1f788,dl
  407773:	sub    edx,DWORD PTR ds:0x7ad5c78f
  407779:	loope  0x407715
  40777b:	xlat   BYTE PTR ds:[ebx]
  40777c:	test   eax,0x3435b094
  407781:	mov    edi,DWORD PTR [edx+esi*2+0x51]
  407785:	push   ds
  407786:	or     bh,bl
  407788:	adc    eax,0x985c4c63
  40778d:	pop    ds
  40778e:	inc    eax
  40778f:	push   esp
  407790:	ret    
  407791:	das    
  407792:	pop    ebx
  407793:	lods   al,BYTE PTR ds:[esi]
  407794:	adc    al,0xec
  407796:	dec    ebx
  407797:	lock lods al,BYTE PTR ds:[esi]
  407799:	sub    al,0x72
  40779b:	in     eax,dx
  40779c:	pop    es
  40779d:	fdiv   QWORD PTR [edi-0x4d08dab0]
  4077a3:	shl    DWORD PTR [edi-0x58],1
  4077a6:	xchg   edx,eax
  4077a7:	test   eax,0xe97334a8
  4077ac:	jb     0x40777f
  4077ae:	shl    ecx,cl
  4077b0:	clc    
  4077b1:	sbb    eax,0x55ba8301
  4077b6:	xchg   ebp,eax
  4077b7:	xor    al,0x57
  4077b9:	xchg   edx,eax
  4077ba:	jbe    0x407826
  4077bc:	xchg   edi,eax
  4077bd:	hlt    
  4077be:	popf   
  4077bf:	jae    0x407792
  4077c1:	cwde   
  4077c2:	sahf   
  4077c3:	add    BYTE PTR ds:0x6cee8b79,0xf3
  4077ca:	mov    ebp,0xf241ae86
  4077cf:	fistp  DWORD PTR [ebx+0x627ff22e]
  4077d5:	mov    ebx,0x9f736870
  4077da:	js     0x407858
  4077dc:	and    al,0xca
  4077de:	lods   al,BYTE PTR ds:[esi]
  4077df:	fisub  WORD PTR [eax]
  4077e1:	inc    ebx
  4077e2:	cmp    edx,ebp
  4077e4:	jge    0x407834
  4077e6:	(bad)  
  4077e7:	daa    
  4077e8:	arpl   WORD PTR [ebp+0x3e],ax
  4077eb:	xchg   ebp,eax
  4077ec:	pop    edx
  4077ed:	lds    esi,FWORD PTR [ebp-0x22]
  4077f0:	ins    DWORD PTR es:[edi],dx
  4077f1:	add    ax,bx
  4077f4:	icebp  
  4077f5:	xchg   esi,eax
  4077f6:	jnp    0x407810
  4077f8:	rol    BYTE PTR [ebx],cl
  4077fa:	jmp    0x40778e
  4077fc:	out    dx,eax
  4077fd:	bound  edi,QWORD PTR [esi+eiz*8]
  407800:	xor    BYTE PTR [ecx],bh
  407802:	pop    edi
  407803:	cli    
  407804:	retf   0x5d1f
  407807:	repz (bad) 
  407809:	jnp    0x407810
  40780b:	es jmp 0xd7855acf
  407811:	sti    
  407812:	retf   0xfa3
  407815:	inc    edi
  407816:	cld    
  407817:	jae    0x4077d5
  407819:	int    0xd9
  40781b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40781c:	push   es
  40781d:	adc    ch,bh
  40781f:	push   0xe35c7cd7
  407824:	rcr    DWORD PTR [edi-0x2f],0xf5
  407828:	sahf   
  407829:	xor    BYTE PTR [edx-0x1d0988ed],ah
  40782f:	inc    esi
  407830:	pop    ecx
  407831:	jae    0x4077c6
  407833:	sub    BYTE PTR [esi+eiz*1-0x62c4d305],bh
  40783a:	imul   ecx,DWORD PTR [ecx+0x121a9a5c],0xffffffdc
  407841:	and    dh,BYTE PTR [ebx-0x3dfac734]
  407847:	xlat   BYTE PTR ds:[ebx]
  407848:	std    
  407849:	cld    
  40784a:	shl    DWORD PTR [eax-0x2cc4f72f],cl
  407850:	leave  
  407851:	ror    DWORD PTR [edi-0x236b5b66],1
  407857:	mov    ch,0x43
  407859:	jle    0x4078a9
  40785b:	jmp    0x974a:0x6832fdce
  407862:	bound  esi,QWORD PTR [ebp+0x6b32aaa0]
  407868:	ret    
  407869:	push   ds
  40786a:	les    ebx,FWORD PTR [ecx]
  40786c:	rcl    edi,0x78
  40786f:	xchg   BYTE PTR [ebx+ecx*4],dh
  407872:	test   BYTE PTR [edi+0x7d04ce78],al
  407878:	lock xchg ecx,edi
  40787b:	rcl    DWORD PTR [ecx],0xa8
  40787e:	iret   
  40787f:	stc    
  407880:	iret   
  407881:	loope  0x407827
  407883:	push   esi
  407884:	fiadd  DWORD PTR [edx+0x10]
  407887:	(bad)  [edi+esi*2-0x46]
  40788b:	les    esi,FWORD PTR [edx]
  40788d:	sub    BYTE PTR [ecx+0x7],ah
  407890:	and    eax,0xd72fa8f0
  407895:	enter  0xab80,0x4
  407899:	fsub   DWORD PTR [ebp+0x65]
  40789c:	(bad)  
  40789e:	mov    eax,ss
  4078a0:	lds    esp,FWORD PTR [ebx]
  4078a2:	and    BYTE PTR [edx-0x34],cl
  4078a5:	or     ecx,esi
  4078a7:	xchg   DWORD PTR [edi+ebp*8-0x475ae35e],esi
  4078ae:	cs jg  0x4078b1
  4078b1:	mov    BYTE PTR [edi],bh
  4078b3:	cmp    edx,DWORD PTR [edx-0x54]
  4078b6:	dec    BYTE PTR [edi+0xff17870]
  4078bc:	mov    esp,0xce027832
  4078c1:	and    al,0x42
  4078c3:	fidiv  WORD PTR [ecx-0x41c44c20]
  4078c9:	jbe    0x40794a
  4078cb:	imul   ecx,edi,0x669dc100
  4078d1:	inc    ebp
  4078d2:	(bad)  
  4078d4:	push   ebp
  4078d5:	jecxz  0x4078f0
  4078d7:	add    ecx,edx
  4078d9:	fnstcw WORD PTR [esi+0xf4d327f]
  4078df:	push   0xffffffbd
  4078e1:	and    DWORD PTR [ebx-0xbfe8a74],esp
  4078e7:	out    dx,al
  4078e8:	mov    ds:0x8079d53c,eax
  4078ed:	retf   
  4078ee:	sbb    DWORD PTR ds:0xb99572ce,ebx
  4078f4:	fcom   DWORD PTR [edi]
  4078f6:	cmc    
  4078f7:	jp     0x407970
  4078f9:	xchg   ebx,eax
  4078fa:	inc    esi
  4078fb:	inc    ebp
  4078fc:	jae    0x4078ba
  4078fe:	fiadd  DWORD PTR [ecx]
  407900:	lahf   
  407901:	xor    eax,0xc18df0ba
  407906:	xchg   esi,eax
  407907:	push   es
  407908:	xchg   ebx,eax
  407909:	loopne 0x407938
  40790b:	cmp    bl,bh
  40790d:	mov    dl,0x4d
  40790f:	xchg   edx,eax
  407910:	repnz or DWORD PTR [ecx-0x7f4705c0],esi
  407917:	int    0xa0
  407919:	push   edi
  40791a:	sbb    BYTE PTR [eax],0x42
  40791d:	cmp    ch,0x5
  407920:	sub    al,BYTE PTR [edx]
  407922:	pushf  
  407923:	mov    dl,0x87
  407925:	ins    BYTE PTR es:[edi],dx
  407926:	sub    bl,cl
  407928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407929:	mov    esp,0x7374fcc9
  40792e:	aaa    
  40792f:	xchg   ecx,eax
  407930:	mov    esp,0x179aacd2
  407935:	fsubr  DWORD PTR [ebp+0x61]
  407938:	stc    
  407939:	bound  ebx,QWORD PTR [ebp-0x40]
  40793c:	in     eax,dx
  40793d:	call   0x8024:0xef39331
  407944:	ja     0x4079ae
  407946:	mov    al,ds:0xaf2256a4
  40794b:	mov    bh,0xda
  40794d:	repnz xor eax,0x5e4c0dd9
  407953:	ja     0x4079be
  407955:	(bad)  [esi]
  407957:	jo     0x407964
  407959:	das    
  40795a:	xchg   esp,eax
  40795b:	sti    
  40795c:	pop    edi
  40795d:	lods   al,BYTE PTR ds:[esi]
  40795e:	cld    
  40795f:	(bad)  
  407960:	retf   0x737d
  407963:	ins    BYTE PTR es:[edi],dx
  407964:	and    BYTE PTR [ebx-0x68cf3c8e],0xad
  40796b:	ins    BYTE PTR es:[edi],dx
  40796c:	mov    ecx,0xa974b0af
  407971:	xchg   ebp,eax
  407972:	pop    ebp
  407973:	int    0xb8
  407975:	repz mov ecx,ebx
  407978:	and    al,0x86
  40797a:	retf   
  40797b:	stos   BYTE PTR es:[edi],al
  40797c:	xlat   BYTE PTR ds:[ebx]
  40797d:	imul   ebx,eax,0x79
  407980:	add    ebx,DWORD PTR [esi]
  407982:	inc    BYTE PTR ds:0x3e7ff03a
  407988:	out    dx,eax
  407989:	mov    bl,dl
  40798b:	push   ss
  40798c:	fwait
  40798d:	jo     0x407a01
  40798f:	sbb    ebx,esi
  407991:	jno    0x4079f6
  407993:	sub    al,0xd0
  407995:	pop    ss
  407996:	clc    
  407997:	dec    edx
  407998:	jmp    0xa4bd5d7
  40799d:	stos   BYTE PTR es:[edi],al
  40799e:	add    eax,0x4023e43b
  4079a3:	jecxz  0x4079a0
  4079a5:	xchg   edi,eax
  4079a6:	or     edx,DWORD PTR [eax]
  4079a8:	inc    ebp
  4079a9:	pop    es
  4079aa:	arpl   si,bp
  4079ac:	arpl   WORD PTR [ebx-0x17],sp
  4079af:	aad    0x66
  4079b1:	xchg   esi,eax
  4079b2:	xor    eax,0xde0590da
  4079b7:	or     eax,DWORD PTR [esi]
  4079b9:	adc    ecx,DWORD PTR [ebx+0x5f]
  4079bc:	sbb    dh,BYTE PTR [ebp+edx*2-0x4d0a50b9]
  4079c3:	cmp    edi,DWORD PTR [eax+0x4783fc79]
  4079c9:	mov    ch,0x56
  4079cb:	and    eax,0x3d4b41c5
  4079d0:	or     DWORD PTR [eax+0x67],ecx
  4079d3:	sbb    al,0x8d
  4079d5:	loopne 0x40799a
  4079d7:	ret    0xa217
  4079da:	jbe    0x407a23
  4079dc:	in     al,0x9e
  4079de:	pop    esi
  4079df:	adc    eax,DWORD PTR [bx]
  4079e2:	in     eax,0x8f
  4079e4:	into   
  4079e5:	xchg   ebp,eax
  4079e6:	outs   dx,DWORD PTR ds:[esi]
  4079e7:	stos   BYTE PTR es:[edi],al
  4079e8:	xor    bh,BYTE PTR [eax-0x7c]
  4079eb:	test   ebx,esi
  4079ed:	adc    eax,0xe0ca67ca
  4079f2:	enter  0x49a5,0x46
  4079f6:	into   
  4079f7:	dec    esi
  4079f8:	cmp    eax,0xb96f3ac2
  4079fd:	fbld   TBYTE PTR ss:[eax+0x1f]
  407a01:	into   
  407a02:	xchg   esi,eax
  407a03:	pop    esp
  407a04:	pop    ebx
  407a05:	jmp    0x407a26
  407a07:	fs mov ecx,0x1b57b385
  407a0d:	pusha  
  407a0e:	icebp  
  407a0f:	lock data16 cmp cl,ah
  407a13:	arpl   WORD PTR [esi-0x1cc753b7],di
  407a19:	outs   dx,BYTE PTR ds:[esi]
  407a1a:	inc    edi
  407a1b:	into   
  407a1c:	enter  0x2254,0x4
  407a20:	test   eax,0xb390496e
  407a25:	jmp    0x27d84709
  407a2a:	ja     0x407a0a
  407a2c:	repz adc BYTE PTR [ecx-0x7e],0x1a
  407a31:	lock outs dx,DWORD PTR ds:[esi]
  407a33:	and    BYTE PTR [edi+0x16],dh
  407a36:	pusha  
  407a37:	dec    esp
  407a38:	jb     0x4079ef
  407a3a:	sbb    BYTE PTR [eax+0x33],cl
  407a3d:	std    
  407a3e:	xchg   edi,eax
  407a3f:	xchg   ebp,eax
  407a40:	xchg   ebx,eax
  407a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a42:	push   esp
  407a43:	aas    
  407a44:	xor    esi,ecx
  407a46:	popa   
  407a47:	stc    
  407a48:	cmc    
  407a49:	push   esp
  407a4a:	hlt    
  407a4b:	mov    ds:0x405215e5,al
  407a50:	push   ds
  407a51:	cmc    
  407a52:	mov    eax,ds:0xbbe499c2
  407a57:	inc    eax
  407a58:	push   0x77
  407a5a:	lea    ebx,[esi+0x12]
  407a5d:	fdivr  st(6),st
  407a5f:	fisub  DWORD PTR [esi+ecx*8-0x42]
  407a63:	cmp    BYTE PTR [ebp+0x6d],ah
  407a66:	sbb    al,cl
  407a68:	gs enter 0x5e3b,0xbe
  407a6d:	retf   
  407a6e:	out    dx,eax
  407a6f:	sub    al,0x8c
  407a71:	sbb    eax,0xd256c972
  407a76:	into   
  407a77:	fisubr DWORD PTR [eax-0x35]
  407a7a:	inc    edi
  407a7b:	cmp    edx,DWORD PTR [ebx-0x455e2b3f]
  407a81:	dec    ecx
  407a82:	sub    BYTE PTR es:[edx-0x737ae316],dh
  407a89:	dec    eax
  407a8a:	into   
  407a8b:	(bad)  
  407a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a8d:	inc    esp
  407a8e:	jo     0x407afb
  407a90:	cmp    al,0x1c
  407a92:	mov    ecx,0xef7048c5
  407a97:	or     al,bh
  407a99:	scas   eax,DWORD PTR es:[edi]
  407a9a:	in     al,0xcf
  407a9c:	pop    esi
  407a9d:	call   0x6b36429
  407aa2:	mov    WORD PTR [ebp+0x4947d6ae],?
  407aa8:	std    
  407aa9:	jg     0x407adc
  407aab:	ror    DWORD PTR [edi+0x2c59082a],cl
  407ab1:	shl    DWORD PTR [edi-0x36f97072],1
  407ab7:	call   0x9665:0xef67e0a4
  407abe:	add    BYTE PTR [edi],0xf9
  407ac1:	cs dec eax
  407ac3:	or     cl,cl
  407ac5:	jb     0x407aba
  407ac7:	inc    ebx
  407ac8:	add    DWORD PTR [ebp+0x5a63f045],edi
  407ace:	retf   
  407acf:	ss jns 0x407aa9
  407ad2:	mov    WORD PTR [edi],?
  407ad4:	mov    ah,0x73
  407ad6:	es mov ecx,0x4e15e3fe
  407adc:	gs es clc 
  407adf:	mov    ch,0xdf
  407ae1:	jbe    0x407b2d
  407ae3:	xchg   ebx,eax
  407ae4:	(bad)  
  407ae5:	mov    al,ds:0x6b825a97
  407aea:	dec    esi
  407aeb:	fcmovnbe st,st(2)
  407aed:	xchg   ecx,eax
  407aee:	mov    ebp,0xc529c175
  407af3:	mov    edx,0x6d5429e8
  407af8:	jle    0x407b2e
  407afa:	mov    ds:0x56251ae4,al
  407aff:	or     esi,ebx
  407b01:	or     bh,BYTE PTR [esi-0x53]
  407b04:	mov    dl,BYTE PTR [ebp-0x4d55eeeb]
  407b0a:	jo     0x407ac1
  407b0c:	repz push ds
  407b0e:	(bad)  
  407b0f:	dec    ecx
  407b10:	xchg   edi,eax
  407b11:	xor    eax,0xe3de92cd
  407b16:	jno    0x407adc
  407b18:	push   ss
  407b19:	sti    
  407b1a:	sbb    DWORD PTR [eax],edx
  407b1c:	jge    0x407aaf
  407b1e:	lahf   
  407b1f:	sub    bh,dh
  407b21:	bound  esi,QWORD PTR [esi]
  407b23:	xchg   edx,eax
  407b24:	add    al,0x33
  407b26:	test   al,0x92
  407b28:	std    
  407b29:	test   al,0x5e
  407b2b:	mov    eax,0x89bf65f8
  407b30:	adc    DWORD PTR [eax],ebx
  407b32:	lods   al,BYTE PTR ds:[esi]
  407b33:	fistp  WORD PTR [ebx]
  407b35:	mov    esi,0xd0576541
  407b3a:	out    dx,al
  407b3b:	inc    edi
  407b3c:	xchg   edi,eax
  407b3d:	dec    edi
  407b3e:	es jp  0x407b5e
  407b41:	push   es
  407b42:	inc    ebp
  407b43:	mov    edx,0xce6f0f14
  407b48:	xlat   BYTE PTR ds:[ebx]
  407b49:	jge    0x407b13
  407b4b:	test   ah,cl
  407b4d:	push   cs
  407b4e:	pop    esi
  407b4f:	inc    edx
  407b50:	inc    edx
  407b51:	add    ecx,DWORD PTR [ebp+0x7a5ef09d]
  407b57:	sub    ebx,eax
  407b59:	xchg   edx,eax
  407b5a:	cli    
  407b5b:	push   eax
  407b5c:	pop    edi
  407b5d:	and    esi,DWORD PTR [edx+eax*1]
  407b60:	sahf   
  407b61:	dec    edi
  407b62:	or     DWORD PTR [ecx-0x72],eax
  407b65:	pusha  
  407b66:	xchg   edx,eax
  407b67:	pop    esi
  407b68:	push   edx
  407b69:	mov    bh,0x12
  407b6b:	fistp  QWORD PTR [esi-0x65]
  407b6e:	aad    0xa6
  407b70:	lods   eax,DWORD PTR ds:[esi]
  407b71:	inc    edx
  407b72:	mov    eax,0x983c63e3
  407b77:	loope  0x407b70
  407b79:	sub    BYTE PTR [ebp-0x78],0xab
  407b7d:	pop    eax
  407b7e:	push   ds
  407b7f:	mov    DWORD PTR [esi-0x37],edx
  407b82:	push   eax
  407b83:	push   eax
  407b84:	sbb    dh,BYTE PTR [ecx]
  407b86:	cmp    BYTE PTR [esi+0x30],dl
  407b89:	adc    eax,0x3c8efd98
  407b8e:	inc    edx
  407b8f:	mov    dh,0x7f
  407b91:	adc    ebx,DWORD PTR [edx-0x1172d7e]
  407b97:	fdivr  DWORD PTR [ecx]
  407b99:	or     DWORD PTR [ebx],ebx
  407b9b:	std    
  407b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b9e:	lds    eax,FWORD PTR [eax+ebp*4+0x2d]
  407ba2:	pop    edx
  407ba3:	add    ah,BYTE PTR [edi-0x6a]
  407ba6:	test   al,0x34
  407ba8:	cs fwait
  407baa:	ins    BYTE PTR es:[edi],dx
  407bab:	mov    WORD PTR [ebx-0x769cb291],ss
  407bb1:	rol    bl,1
  407bb3:	dec    esi
  407bb4:	out    0x2e,al
  407bb6:	or     al,0x5a
  407bb8:	inc    edx
  407bb9:	sub    eax,0x941779d0
  407bbe:	sub    al,0xc8
  407bc0:	iret   
  407bc1:	imul   edx,DWORD PTR [ebx-0x20],0x25
  407bc5:	or     ch,ch
  407bc7:	sar    DWORD PTR [eax-0x4c],0xf1
  407bcb:	add    BYTE PTR [eax-0x8],0xde
  407bcf:	cmc    
  407bd0:	mov    ch,0x6b
  407bd2:	test   BYTE PTR [ecx],al
  407bd4:	loopne 0x407c2a
  407bd6:	lea    ebp,ss:[ecx+0x17]
  407bda:	leave  
  407bdb:	outs   dx,DWORD PTR es:[esi]
  407bdd:	mov    ecx,0x819644fe
  407be2:	pusha  
  407be3:	inc    ecx
  407be4:	outs   dx,DWORD PTR ds:[esi]
  407be5:	cwde   
  407be6:	cmp    BYTE PTR [ecx+esi*4-0x2a3c8793],0x43
  407bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bef:	adc    ecx,DWORD PTR [ebx+0x66]
  407bf2:	test   DWORD PTR [edi-0x163d606],ecx
  407bf8:	and    DWORD PTR [eax-0x6a9b4925],eax
  407bfe:	jo     0x407c0d
  407c00:	cli    
  407c01:	cdq    
  407c02:	mov    eax,0xe2e55c6b
  407c07:	add    ah,0x18
  407c0a:	call   0x295f2551
  407c0f:	sbb    al,0xdf
  407c11:	jo     0x407be6
  407c13:	arpl   WORD PTR [esi+0x168a05ce],sp
  407c19:	xor    al,BYTE PTR [ebx+esi*1]
  407c1c:	pushf  
  407c1d:	(bad)  
  407c1e:	and    ebp,ebp
  407c20:	xchg   esp,eax
  407c21:	lea    esp,[edi+ecx*8+0x2e]
  407c25:	adc    esi,esi
  407c27:	ficom  DWORD PTR [ecx+0x74]
  407c2a:	push   ebp
  407c2b:	fldenv [ecx+0x42e2b7]
  407c31:	dec    edx
  407c32:	jmp    0x409f81
  407c37:	mov    al,0x4e
  407c39:	cmp    bh,ch
  407c3b:	mov    ds:0xc733738b,al
  407c40:	sbb    BYTE PTR ds:0x8eaf26e6,cl
  407c46:	daa    
  407c47:	push   es
  407c48:	cmp    bh,BYTE PTR [esp+edi*2+0x4e]
  407c4c:	pop    edi
  407c4d:	jl     0x407ccb
  407c4f:	sbb    eax,0x4fb8788e
  407c54:	cmp    DWORD PTR [ecx+ebx*4+0x5],eax
  407c58:	(bad)  
  407c59:	in     eax,0x21
  407c5b:	lahf   
  407c5c:	lock mov eax,0xaa8ecac0
  407c62:	and    DWORD PTR [ecx],edi
  407c64:	jne    0x407c64
  407c66:	cld    
  407c67:	pop    esi
  407c68:	mov    bh,0x74
  407c6a:	sbb    DWORD PTR [ebx+ecx*8],esp
  407c6d:	clc    
  407c6e:	retf   0x3248
  407c71:	int3   
  407c72:	push   0x67
  407c74:	jbe    0x407c03
  407c76:	call   0xb9e9:0xb8108ca1
  407c7d:	not    DWORD PTR [ecx]
  407c7f:	lods   eax,DWORD PTR ds:[esi]
  407c80:	sbb    BYTE PTR [ebp+0x14],0xf4
  407c84:	imul   esi,ecx,0x740cdbad
  407c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8b:	fsub   st(5),st
  407c8d:	and    ebp,DWORD PTR [edx]
  407c8f:	ret    0xe001
  407c92:	sub    al,0x25
  407c94:	xor    eax,0xc1249419
  407c99:	stc    
  407c9a:	add    al,BYTE PTR [ecx]
  407c9c:	push   ebx
  407c9d:	xor    eax,0x31e0940a
  407ca2:	icebp  
  407ca3:	mov    bl,BYTE PTR [esi-0x62]
  407ca6:	xor    esp,0xfffffff3
  407ca9:	std    
  407caa:	sub    esi,DWORD PTR [edx+ebp*2+0x188d5528]
  407cb1:	and    eax,0x49db1459
  407cb6:	mov    ch,0x49
  407cb8:	scas   eax,DWORD PTR es:[edi]
  407cb9:	jmp    0x407cae
  407cbb:	out    0xb2,eax
  407cbd:	cmp    eax,0x659eba27
  407cc2:	pop    esp
  407cc3:	mov    al,ds:0xb0e9e885
  407cc8:	cdq    
  407cc9:	loopne 0x407d02
  407ccb:	cmc    
  407ccc:	mov    ds:0x2e94747b,eax
  407cd1:	push   0xc831190e
  407cd6:	cmp    eax,0xe77102ed
  407cdb:	mov    ds:0xf9107e56,al
  407ce0:	cmc    
  407ce1:	add    DWORD PTR [edx+0x1925ac00],0x16e34077
  407ceb:	xchg   ebp,eax
  407cec:	jb     0x407cd9
  407cee:	mov    eax,0xd552a8f6
  407cf3:	jo     0x407cba
  407cf5:	push   edi
  407cf6:	pop    esp
  407cf7:	les    esp,FWORD PTR [esi]
  407cf9:	gs sub al,0x34
  407cfc:	jmp    0x37cd:0x71717acc
  407d03:	add    bl,al
  407d05:	sbb    ebx,ecx
  407d07:	sti    
  407d08:	inc    esi
  407d09:	mov    bl,0xe3
  407d0b:	fsub   QWORD PTR [ecx]
  407d0d:	sar    BYTE PTR [ebx-0x5b],0xe1
  407d11:	leave  
  407d12:	mov    eax,ds:0xc7f1cc39
  407d17:	xchg   ecx,eax
  407d18:	adc    al,0x78
  407d1a:	adc    ecx,DWORD PTR [esi]
  407d1c:	pop    ecx
  407d1d:	dec    esi
  407d1e:	dec    edi
  407d1f:	out    dx,al
  407d20:	(bad)  
  407d21:	addr16 sti 
  407d23:	in     al,dx
  407d24:	test   BYTE PTR [ebx],al
  407d26:	lds    ecx,FWORD PTR [edi-0x6d]
  407d29:	(bad)
  407d2c:	jb     0x407d1d
  407d2e:	(bad)
  407d32:	retf   0xd716
  407d35:	mov    WORD PTR [ecx+0x65],gs
  407d38:	mov    ecx,0xfcef246a
  407d3d:	xor    BYTE PTR ds:0x2d58a921,bh
  407d43:	test   eax,0x8bee885a
  407d48:	int3   
  407d49:	mov    bl,0xf6
  407d4b:	outs   dx,BYTE PTR ds:[esi]
  407d4c:	scas   eax,DWORD PTR es:[edi]
  407d4d:	das    
  407d4e:	retf   0x2760
  407d51:	mov    ds:0x712436b1,al
  407d56:	inc    edx
  407d57:	fnstsw ax
  407d59:	mov    edi,0x51a1c59c
  407d5e:	ret    
  407d5f:	inc    esp
  407d60:	jmp    0x8c0e:0xfbb1afc3
  407d67:	iret   
  407d68:	(bad)  
  407d69:	jne    0x407d4b
  407d6b:	add    esp,DWORD PTR [edx+eax*8+0x6b]
  407d6f:	add    BYTE PTR [ebx-0x63],0xee
  407d73:	inc    esp
  407d74:	cs int3 
  407d76:	inc    ebx
  407d77:	add    al,0x8
  407d79:	gs sbb al,0xcf
  407d7c:	mov    ecx,0xb27cf267
  407d81:	or     eax,0xa18e5184
  407d86:	sub    ch,dh
  407d88:	dec    ecx
  407d89:	inc    esp
  407d8a:	mov    DWORD PTR [edi],edi
  407d8c:	dec    esi
  407d8d:	jns    0x407d9e
  407d8f:	inc    DWORD PTR [eax]
  407d91:	and    dh,BYTE PTR [edi+ebx*2-0x18]
  407d95:	jb     0x407d6e
  407d97:	mov    ch,0x45
  407d99:	ja     0x407dd9
  407d9b:	(bad)  
  407d9c:	jmp    0x2f7dba52
  407da1:	test   eax,0xfefd47a4
  407da6:	sub    al,0xd6
  407da8:	icebp  
  407da9:	scas   al,BYTE PTR es:[edi]
  407daa:	mov    ch,0xba
  407dac:	nop
  407dad:	xchg   edi,eax
  407dae:	and    al,0xe3
  407db0:	push   es
  407db1:	add    ebp,DWORD PTR [ecx+0x42]
  407db4:	adc    eax,DWORD PTR [esi]
  407db6:	jb     0x407d65
  407db8:	cdq    
  407db9:	add    eax,0xe41d7756
  407dbe:	pop    ss
  407dbf:	and    BYTE PTR [esi],al
  407dc1:	and    eax,0x8ac58c8a
  407dc6:	adc    eax,0x978eeded
  407dcb:	call   0xd187:0xe9cf50bc
  407dd2:	shr    BYTE PTR [esi+0x185c3498],0xb7
  407dd9:	pop    edx
  407dda:	xor    eax,0xd6b9dbec
  407ddf:	push   edi
  407de0:	lahf   
  407de1:	or     esi,0xffffffab
  407de4:	mov    edi,0x3f7b7fbd
  407de9:	jnp    0x407de1
  407deb:	out    0x42,eax
  407ded:	xor    bh,bl
  407def:	adc    cl,bh
  407df1:	(bad)  
  407df2:	das    
  407df3:	inc    ebp
  407df4:	cli    
  407df5:	fadd   QWORD PTR [ebx]
  407df7:	hlt    
  407df8:	push   0x39
  407dfa:	xlat   BYTE PTR ds:[ebx]
  407dfb:	and    eax,0x7cec011b
  407e00:	scas   al,BYTE PTR es:[edi]
  407e01:	adc    eax,0xe29f1b7d
  407e06:	daa    
  407e07:	dec    esi
  407e08:	stc    
  407e09:	cdq    
  407e0a:	or     BYTE PTR [eax+0x9b5352f],bh
  407e10:	sbb    ch,0xcd
  407e13:	out    dx,al
  407e14:	adc    eax,0x7a4295a9
  407e19:	nop
  407e1a:	push   0xe908e33
  407e1f:	ret    0x39d1
  407e22:	arpl   WORD PTR [edi+0xec2bfa6],bp
  407e28:	pop    ss
  407e29:	cwde   
  407e2a:	add    DWORD PTR [esi],esp
  407e2c:	adc    BYTE PTR [ebx+ebp*1],cl
  407e2f:	jne    0x407e6b
  407e31:	push   eax
  407e32:	or     BYTE PTR [edi-0x72],bh
  407e35:	test   DWORD PTR [esi-0x375f1b83],0x4c7f2916
  407e3f:	inc    edx
  407e40:	ins    DWORD PTR es:[edi],dx
  407e41:	mov    eax,ds:0x8a7ff289
  407e46:	push   eax
  407e47:	mov    al,0xa4
  407e49:	imul   DWORD PTR [ebx]
  407e4b:	dec    edi
  407e4c:	dec    esp
  407e4d:	inc    edx
  407e4e:	int3   
  407e4f:	xchg   ebx,eax
  407e50:	mov    al,0xc0
  407e52:	adc    ecx,DWORD PTR [edx]
  407e54:	inc    ecx
  407e55:	cli    
  407e56:	pop    edi
  407e57:	not    BYTE PTR [ebx]
  407e59:	imul   ebp,DWORD PTR ds:[esi-0x5c3fa210],0x6e
  407e61:	fld    QWORD PTR [eax+0x69953312]
  407e67:	inc    edx
  407e68:	pushf  
  407e69:	jl     0x407eb3
  407e6b:	pop    ecx
  407e6c:	neg    bl
  407e6e:	cmp    DWORD PTR [esi+0x3486d7b4],edi
  407e74:	aas    
  407e75:	pusha  
  407e76:	push   edx
  407e77:	jecxz  0x407e5a
  407e79:	xchg   edi,eax
  407e7a:	dec    ecx
  407e7b:	push   esi
  407e7c:	sub    al,0x8f
  407e7e:	add    al,0xf3
  407e80:	ds dec edx
  407e82:	mov    cl,0x40
  407e84:	adc    bl,BYTE PTR [ebx+0x71]
  407e87:	push   edx
  407e88:	test   eax,0x6b5f70d9
  407e8d:	inc    esp
  407e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e8f:	jmp    0x816c:0x5bf25587
  407e96:	cwde   
  407e97:	pop    ss
  407e98:	loopne 0x407e68
  407e9a:	mov    bh,0x70
  407e9c:	addr16 pushf 
  407e9e:	loopne 0x407ea7
  407ea0:	adc    al,BYTE PTR [ebx-0x25]
  407ea3:	fisub  DWORD PTR [edx+0x3d]
  407ea6:	push   es
  407ea7:	ss sub eax,0x13e720a5
  407ead:	pop    es
  407eae:	and    al,0xc6
  407eb0:	xchg   edx,eax
  407eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb2:	sub    eax,0x9493dc42
  407eb7:	mov    ecx,0x25ef6ac7
  407ebc:	in     eax,0xfa
  407ebe:	stos   BYTE PTR es:[edi],al
  407ebf:	mov    cl,0x4b
  407ec1:	das    
  407ec2:	xlat   BYTE PTR ds:[ebx]
  407ec3:	sub    eax,0xdf46b8fe
  407ec8:	sub    eax,0x498ef2c6
  407ecd:	loop   0x407e71
  407ecf:	mov    bl,0x8c
  407ed1:	sbb    al,0xdf
  407ed3:	in     al,0x73
  407ed5:	push   esp
  407ed6:	add    al,0x10
  407ed8:	cmp    BYTE PTR [ebp+0x3642acac],bh
  407ede:	mov    DWORD PTR [ecx-0x41],ecx
  407ee1:	or     al,0xcf
  407ee3:	ret    
  407ee4:	mul    BYTE PTR [ebp+0x1d]
  407ee7:	xchg   ecx,eax
  407ee8:	fcom   DWORD PTR [edx]
  407eea:	adc    eax,0x170d9838
  407eef:	mov    DWORD PTR [ecx-0x4],ebp
  407ef2:	pop    ebx
  407ef3:	test   al,0x98
  407ef5:	popf   
  407ef6:	or     BYTE PTR [edi-0x4cfe5b7a],bl
  407efc:	push   esp
  407efd:	jge    0x407f53
  407eff:	clc    
  407f00:	or     ah,BYTE PTR [edx]
  407f02:	pop    esp
  407f03:	dec    ecx
  407f04:	dec    esi
  407f05:	xchg   esi,eax
  407f06:	jmp    0xa4337f52
  407f0b:	xchg   DWORD PTR [ebx+edx*8+0x12a6c0b9],ebp
  407f12:	int    0x91
  407f14:	sub    al,0x8c
  407f16:	inc    esp
  407f17:	ret    0x3eb8
  407f1a:	mov    ecx,0xa848ad44
  407f1f:	adc    dl,BYTE PTR [ebx-0x1d7fc08e]
  407f25:	mov    esp,0x8df52f8
  407f2a:	loope  0x407fa0
  407f2c:	and    BYTE PTR [ebp-0x64],ch
  407f2f:	mov    ecx,0x9e7ef135
  407f34:	xchg   ebx,eax
  407f35:	sbb    DWORD PTR [edi-0x39],ebx
  407f38:	adc    DWORD PTR [esi+0x47416f0b],ebx
  407f3e:	ins    DWORD PTR es:[edi],dx
  407f3f:	xchg   DWORD PTR [edx+eax*2+0x7a],ebp
  407f43:	add    ecx,edi
  407f45:	retw   
  407f47:	sub    ch,BYTE PTR [ebx-0x38480980]
  407f4d:	pushf  
  407f4e:	adc    eax,0x6bb43015
  407f53:	xchg   ecx,eax
  407f54:	mov    ds:0xb56faef0,al
  407f59:	pop    edx
  407f5a:	xor    BYTE PTR [eax],0xc3
  407f5d:	adc    edi,DWORD PTR [edi+0x8b90908]
  407f63:	mov    cl,0x1e
  407f65:	loope  0x407f08
  407f67:	call   0xdfd29087
  407f6c:	xchg   edx,eax
  407f6d:	push   bp
  407f6f:	(bad)  
  407f70:	fnstenv [esi+esi*2]
  407f73:	inc    esp
  407f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f76:	fdiv   st,st(5)
  407f78:	ret    
  407f79:	sti    
  407f7a:	inc    esi
  407f7b:	mov    eax,es
  407f7d:	ins    BYTE PTR es:[edi],dx
  407f7e:	cmp    cl,0xca
  407f81:	push   ecx
  407f82:	popa   
  407f83:	enter  0x2e3a,0x42
  407f87:	fst    st(4)
  407f89:	or     ch,BYTE PTR [ecx-0x1b]
  407f8c:	mov    DWORD PTR [eax+0x5924d18d],esi
  407f92:	cmp    al,0x4a
  407f94:	pop    edx
  407f95:	jb     0x407faa
  407f97:	pop    esp
  407f98:	outs   dx,BYTE PTR ds:[esi]
  407f99:	iret   
  407f9a:	out    dx,al
  407f9b:	xchg   esp,ebp
  407f9d:	jmp    0x407fc6
  407f9f:	cmp    al,0xd2
  407fa1:	dec    esi
  407fa2:	fistp  WORD PTR [edx+0x62]
  407fa5:	imul   ebp,DWORD PTR [edx],0x3a
  407fa8:	push   edi
  407fa9:	jmp    DWORD PTR [eax]
  407fab:	jbe    0x407fe3
  407fad:	xlat   BYTE PTR ds:[ebx]
  407fae:	out    0xb5,eax
  407fb0:	mov    al,0x18
  407fb2:	add    DWORD PTR [eax-0x2df6a838],ebx
  407fb8:	push   ebp
  407fb9:	in     eax,0xf7
  407fbb:	xchg   ecx,eax
  407fbc:	inc    esp
  407fbd:	jmp    0x407f90
  407fbf:	inc    eax
  407fc0:	div    BYTE PTR [ebx-0x4031696e]
  407fc6:	pop    edi
  407fc7:	adc    eax,0x6219dbf8
  407fcc:	inc    esp
  407fcd:	fidiv  WORD PTR [ebp+0x72]
  407fd0:	enter  0x6e03,0x40
  407fd4:	lahf   
  407fd5:	fxch   st(3)
  407fd7:	mov    cl,0x6e
  407fd9:	and    ebx,DWORD PTR [si-0x72]
  407fdd:	bound  ebx,QWORD PTR [ebx]
  407fdf:	pop    ss
  407fe0:	data16 adc BYTE PTR [edx-0x79c7d379],cl
  407fe7:	sbb    ebx,DWORD PTR [edx-0x70]
  407fea:	test   DWORD PTR [esi-0x28257593],0xaa348e7c
  407ff4:	and    BYTE PTR ds:0x2499fe28,ah
  407ffa:	mov    dl,0x75
  407ffc:	inc    edx
  407ffd:	and    dl,0x77
  408000:	push   ebx
  408001:	sbb    BYTE PTR [ebp-0x72],dl
  408004:	test   DWORD PTR [ebx-0x10a5f9de],0x9bf8957b
  40800e:	(bad)  
  40800f:	lea    edi,[edi+0x5a774eda]
  408015:	in     eax,dx
  408016:	adc    al,0x87
  408018:	stos   BYTE PTR es:[edi],al
  408019:	mov    ebx,ebp
  40801b:	ret    
  40801c:	fdivr  QWORD PTR es:[ebx]
  40801f:	mov    esp,DWORD PTR [edx]
  408021:	ss mov cl,0x84
  408024:	jp     0x408085
  408026:	test   eax,0x46220730
  40802b:	pop    es
  40802c:	mov    eax,ds:0x45d850e1
  408031:	fst    QWORD PTR [ecx]
  408033:	sub    BYTE PTR [ecx-0x694d982c],cl
  408039:	jne    0x408072
  40803b:	jno    0x40809f
  40803d:	cmp    BYTE PTR [eax],dh
  40803f:	add    ecx,DWORD PTR [ebx+0x2c95b595]
  408045:	mov    al,ds:0x3267484
  40804a:	iret   
  40804b:	push   ss
  40804c:	and    al,0x51
  40804e:	jecxz  0x40809e
  408050:	mov    dh,0x81
  408052:	aas    
  408053:	ja     0x4080c5
  408055:	leave  
  408056:	adc    al,0xb0
  408058:	(bad)  
  40805a:	jmp    0x1af46b2
  40805f:	sub    al,0x89
  408061:	imul   ch
  408063:	mov    al,ds:0xa9ef6529
  408068:	and    eax,edi
  40806a:	or     al,0xef
  40806c:	mov    eax,0x542b30f
  408071:	scas   eax,DWORD PTR es:[edi]
  408072:	sub    ebx,DWORD PTR [edx]
  408074:	ret    
  408075:	imul   edx,DWORD PTR [edi-0xe559831],0x3f
  40807c:	test   DWORD PTR [ebp-0x11010eac],esp
  408082:	in     eax,0x6c
  408084:	vpcmpgtd ymm2,ymm2,YMMWORD PTR [edi-0x1d684583]
  40808c:	pop    edi
  40808d:	imul   edi,DWORD PTR [edi-0x48],0x1a
  408091:	mov    dh,0xa3
  408093:	fsub   st(3),st
  408095:	adc    bh,BYTE PTR [ebp+0x596ab5f4]
  40809b:	add    al,0x9f
  40809d:	xchg   ecx,eax
  40809e:	adc    al,0x23
  4080a0:	cwde   
  4080a1:	fsubr  DWORD PTR [edi]
  4080a3:	push   ss
  4080a4:	stos   DWORD PTR es:[edi],eax
  4080a5:	fnsave [eax]
  4080a7:	shl    ah,0xe1
  4080aa:	mov    eax,ds:0x93beb35c
  4080af:	shl    dh,0xe8
  4080b2:	call   0xb37:0x4ca5ca7d
  4080b9:	lahf   
  4080ba:	ds push ebx
  4080bc:	not    BYTE PTR ds:[ebp-0x63]
  4080c0:	ror    DWORD PTR [esi+0x7b84ffdc],0x1d
  4080c7:	and    eax,0x3a4bb6ea
  4080cc:	hlt    
  4080cd:	je     0x40812c
  4080cf:	pop    es
  4080d0:	leave  
  4080d1:	test   edx,ebp
  4080d3:	in     al,0x99
  4080d5:	cmp    bl,BYTE PTR [edi]
  4080d7:	fidivr WORD PTR [edi-0x6e333815]
  4080dd:	adc    bl,al
  4080df:	daa    
  4080e0:	push   esi
  4080e1:	dec    eax
  4080e2:	cdq    
  4080e3:	pushf  
  4080e4:	call   0x36d5:0x138b8107
  4080eb:	bound  esi,QWORD PTR [eax-0x49ba3389]
  4080f1:	xchg   BYTE PTR [ebp-0x27931103],bh
  4080f7:	cmp    DWORD PTR [ebx+0x51c82da3],ebx
  4080fd:	mov    ah,0xa5
  4080ff:	loope  0x4080e9
  408101:	and    dh,BYTE PTR [esi-0x78b31559]
  408107:	repnz xor cl,BYTE PTR [eax+edx*1+0x305820ed]
  40810f:	cmp    cl,BYTE PTR [ebp+0x2f123ae9]
  408115:	mov    eax,0xe3164c7d
  40811a:	push   ss
  40811b:	in     eax,dx
  40811c:	push   edx
  40811d:	push   edx
  40811e:	xchg   DWORD PTR [eax],ecx
  408120:	stos   BYTE PTR es:[edi],al
  408121:	sti    
  408122:	fidiv  WORD PTR ds:0xdddf6144
  408128:	imul   esp,DWORD PTR [edi+0xc9b2f61],0xffffffc1
  40812f:	pop    ss
  408130:	sub    BYTE PTR [eax-0x21bb67d5],al
  408136:	or     eax,0xaf93a2da
  40813b:	add    BYTE PTR [edx],dl
  40813d:	test   eax,0x1fa41699
  408142:	mov    dh,0x0
  408144:	jae    0x40819e
  408146:	push   ecx
  408147:	pop    es
  408148:	xchg   ecx,eax
  408149:	daa    
  40814a:	jae    0x40811b
  40814c:	xchg   esi,eax
  40814d:	sbb    ecx,esi
  40814f:	or     DWORD PTR [esi-0x358d61d7],esi
  408155:	cmp    eax,0x9b962b77
  40815a:	stc    
  40815b:	xor    ecx,DWORD PTR [edi+0x47816ff7]
  408161:	xor    DWORD PTR [edi],ebp
  408163:	sub    al,0xe3
  408165:	jg     0x408190
  408167:	data16 fwait
  408169:	dec    ecx
  40816a:	jmp    0x1e62:0xe2fec3bc
  408171:	ds pop ecx
  408173:	shl    BYTE PTR [ebx-0x13e7fdc2],0x1e
  40817a:	(bad)  
  40817b:	ficomp DWORD PTR [eax-0x76ee05aa]
  408181:	push   esp
  408182:	sbb    al,0x9
  408184:	jle    0x4081e5
  408186:	aaa    
  408187:	das    
  408188:	(bad)  
  408189:	sahf   
  40818a:	in     al,dx
  40818b:	cli    
  40818c:	outs   dx,DWORD PTR ds:[esi]
  40818d:	push   ss
  40818e:	ror    dh,cl
  408190:	adc    BYTE PTR [edi],bl
  408192:	fimul  WORD PTR [ebp-0x51d084eb]
  408198:	pop    esp
  408199:	das    
  40819a:	scas   al,BYTE PTR es:[edi]
  40819b:	js     0x40811f
  40819d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40819e:	daa    
  40819f:	int3   
  4081a0:	dec    ebp
  4081a1:	outs   dx,BYTE PTR ds:[esi]
  4081a2:	icebp  
  4081a3:	bound  ebp,QWORD PTR [edi+esi*1+0x7c8de643]
  4081aa:	cwde   
  4081ab:	data16 ficomp WORD PTR [eax+ecx*4-0x42]
  4081b0:	or     al,0xbd
  4081b2:	jae    0x408215
  4081b4:	sub    al,0x45
  4081b6:	mov    dh,0x59
  4081b8:	mov    BYTE PTR [ebx-0x53],dh
  4081bb:	std    
  4081bc:	stos   BYTE PTR es:[edi],al
  4081bd:	ss pop eax
  4081bf:	repnz sbb edx,ecx
  4081c2:	inc    ebp
  4081c3:	arpl   WORD PTR [edi-0x65],bp
  4081c6:	or     DWORD PTR [ebp+0x347b41f1],0x8ec8282b
  4081d0:	xchg   edi,eax
  4081d1:	popa   
  4081d2:	mov    cl,BYTE PTR [eax+0x26]
  4081d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d6:	and    esi,DWORD PTR [ebp+ecx*1+0x725f43dc]
  4081dd:	fnstcw WORD PTR [ebx]
  4081df:	sub    al,0x5d
  4081e1:	lea    ecx,[ebx]
  4081e3:	dec    edx
  4081e4:	mov    dl,0x80
  4081e6:	hlt    
  4081e7:	dec    esi
  4081e8:	cwde   
  4081e9:	sub    DWORD PTR [edx+ebx*4+0x1294e696],0x16
  4081f1:	pop    ds
  4081f2:	ins    DWORD PTR es:[edi],dx
  4081f3:	mov    cl,0xb3
  4081f5:	ds and al,0x6f
  4081f8:	ror    BYTE PTR [ecx-0x7a],1
  4081fb:	data16 and BYTE PTR [edx-0x655d9423],ch
  408202:	mov    dh,0xd7
  408204:	jns    0x408253
  408206:	mov    ch,0xbd
  408208:	out    dx,al
  408209:	sub    bh,BYTE PTR [esp+ebp*1-0x2921f07b]
  408210:	ds dec ecx
  408212:	xor    al,0xad
  408214:	or     al,0xe4
  408216:	jecxz  0x408214
  408218:	pop    eax
  408219:	pop    eax
  40821a:	dec    ecx
  40821b:	popa   
  40821c:	sbb    eax,0xd9b2b9b1
  408221:	dec    ebp
  408222:	sbb    edx,DWORD PTR [edi+0x46]
  408225:	stc    
  408226:	mov    ch,BYTE PTR [edi+0x2d237e8]
  40822c:	cli    
  40822d:	jne    0x4081df
  40822f:	xchg   ebx,eax
  408230:	ins    DWORD PTR es:[edi],dx
  408231:	and    al,0x66
  408233:	jns    0x408279
  408235:	jne    0x408287
  408237:	pop    ebp
  408238:	cs sub eax,0x58d67905
  40823e:	and    eax,0xacffd885
  408243:	je     0x408286
  408245:	ja     0x408208
  408247:	out    0x95,eax
  408249:	jmp    0x343c:0x73d2787f
  408250:	retf   
  408251:	dec    esi
  408252:	retf   0xcbf0
  408255:	mov    eax,ds:0x593474c1
  40825a:	adc    al,0x63
  40825c:	out    dx,eax
  40825d:	mov    ss,WORD PTR [ebx+0x32]
  408260:	add    ebx,ebx
  408262:	loopne 0x4082a2
  408264:	lds    esi,FWORD PTR [esi]
  408266:	nop
  408267:	jl     0x408253
  408269:	jnp    0x40828b
  40826b:	mov    BYTE PTR [eax-0x6f],cl
  40826e:	sbb    eax,0xca7b4c23
  408273:	xor    al,0xa9
  408275:	pop    eax
  408276:	sbb    al,0xd1
  408278:	mov    ch,0x57
  40827a:	push   cs
  40827b:	sar    DWORD PTR [esp+ebx*4],0xa9
  40827f:	xchg   BYTE PTR [edx],al
  408281:	add    BYTE PTR [edx-0x27],cl
  408284:	push   ebx
  408285:	push   ebx
  408286:	clc    
  408287:	cs iret 
  408289:	fincstp 
  40828b:	repnz lds ebx,FWORD PTR [esi+0x7c81f42c]
  408292:	cmp    DWORD PTR [ebp+0x1fca1b67],edx
  408298:	leave  
  408299:	popa   
  40829a:	addr16 gs xchg ecx,eax
  40829d:	cmp    dh,al
  40829f:	ret    
  4082a0:	mov    bl,0x24
  4082a2:	das    
  4082a3:	pop    edi
  4082a4:	fild   DWORD PTR [ebp+edx*4-0x1d5a980a]
  4082ab:	jnp    0x4082b2
  4082ad:	mov    edx,0x50698cd8
  4082b2:	add    ch,BYTE PTR [eax+0x234ff8b9]
  4082b8:	fld    DWORD PTR ds:0x4f1fd06f
  4082be:	or     al,0x72
  4082c0:	leave  
  4082c1:	dec    edx
  4082c2:	sbb    DWORD PTR [ebx*4-0x474737a8],esp
  4082c9:	mov    bh,0x7
  4082cb:	add    al,0x97
  4082cd:	sar    BYTE PTR [ebx-0x18ad1ba5],1
  4082d3:	lock jg 0x40826f
  4082d6:	push   ds
  4082d7:	cmp    DWORD PTR [esi],esp
  4082d9:	pushf  
  4082da:	mov    BYTE PTR [ebp+0x34],0x3c
  4082de:	ficom  DWORD PTR [ecx+0x6470bce3]
  4082e4:	addr16 jp 0x40829d
  4082e7:	fadd   st(5),st
  4082e9:	or     BYTE PTR [edi+0xa],ah
  4082ec:	jne    0x40836a
  4082ee:	and    eax,0xb5beaf61
  4082f3:	cmp    ebp,DWORD PTR [eax+0xaa597c4]
  4082f9:	mov    ds:0x489e630b,eax
  4082fe:	and    DWORD PTR [ecx+eax*8+0x5b],edi
  408302:	fsubr  st,st(5)
  408304:	jge    0x408291
  408306:	int    0x19
  408308:	jecxz  0x408354
  40830a:	in     al,0x3a
  40830c:	ins    DWORD PTR es:[edi],dx
  40830d:	data16 jb 0x4082fd
  408310:	std    
  408311:	inc    ecx
  408312:	mov    esi,0x72506bdc
  408317:	mov    al,0x28
  408319:	les    ecx,FWORD PTR [ecx+0x14]
  40831c:	or     ebx,ebx
  40831e:	dec    esi
  40831f:	nop
  408320:	mov    WORD PTR [edx-0x3c],es
  408323:	fisub  WORD PTR cs:[eax+0x68]
  408327:	scas   eax,DWORD PTR es:[edi]
  408328:	push   edi
  408329:	xchg   DWORD PTR [ecx-0x5f4959e7],edi
  40832f:	jne    0x408378
  408331:	retf   
  408332:	jmp    0x9c3c75c1
  408337:	mov    esi,DWORD PTR ds:0xa0d9ad14
  40833d:	cmp    al,0xc9
  408340:	jp     0x408373
  408342:	test   BYTE PTR [ebp+0xb],bl
  408345:	ja     0x4082dd
  408347:	sub    DWORD PTR [ebx],ebp
  408349:	pop    ecx
  40834a:	jmp    0xb8e735ff
  40834f:	push   edi
  408350:	dec    edx
  408351:	pop    edx
  408352:	fcomp  DWORD PTR [eax+0x791afd58]
  408358:	out    0xa4,eax
  40835a:	inc    esp
  40835b:	nop
  40835c:	(bad)  
  40835d:	loop   0x408343
  40835f:	(bad)  
  408360:	aaa    
  408361:	sub    al,BYTE PTR [esi]
  408363:	outs   dx,DWORD PTR ds:[esi]
  408364:	data16 (bad) 
  408366:	cmp    ch,BYTE PTR [eax+0x5ce87903]
  40836c:	or     eax,0x3a7d5c80
  408371:	out    dx,eax
  408372:	dec    esi
  408373:	retf   0x41c
  408376:	xor    al,0x9c
  408378:	and    al,0xb
  40837a:	(bad)  
  40837b:	iret   
  40837c:	xor    DWORD PTR [eax+0x2d],eax
  40837f:	xchg   esi,esp
  408381:	icebp  
  408382:	xor    esp,eax
  408384:	cmp    al,0xb
  408386:	dec    esp
  408387:	fcmovb st,st(1)
  408389:	pop    ecx
  40838a:	and    eax,0xec64e686
  40838f:	daa    
  408390:	and    BYTE PTR [eax-0x42],0x68
  408394:	inc    edi
  408395:	data16 jg 0x4083b9
  408398:	sub    ah,BYTE PTR [ecx-0x4782caf6]
  40839e:	fisttp DWORD PTR [ebx+0x3d5e9b5a]
  4083a4:	cs pusha 
  4083a6:	jns    0x4083bd
  4083a8:	push   ebx
  4083a9:	and    ebp,esi
  4083ab:	adc    bh,ch
  4083ad:	test   DWORD PTR [edi],ecx
  4083af:	scas   al,BYTE PTR es:[edi]
  4083b0:	cwde   
  4083b1:	push   ds
  4083b2:	inc    edx
  4083b3:	aaa    
  4083b4:	repnz adc ah,bl
  4083b7:	xchg   BYTE PTR [ecx+ecx*4+0x6541fed1],dl
  4083be:	jb     0x4083c0
  4083c0:	dec    edx
  4083c1:	(bad)  
  4083c2:	cdq    
  4083c3:	lahf   
  4083c4:	es push cs
  4083c6:	push   es
  4083c7:	imul   eax,DWORD PTR [edi+0x5f],0xac3ad7de
  4083ce:	inc    ebx
  4083cf:	mov    ds:0x141422f7,al
  4083d4:	outs   dx,DWORD PTR ds:[esi]
  4083d5:	jecxz  0x4083d7
  4083d7:	dec    edi
  4083d8:	or     DWORD PTR [eax-0x27372cc9],edx
  4083de:	ins    BYTE PTR es:[edi],dx
  4083df:	or     edi,DWORD PTR [eax+0x6e213798]
  4083e5:	xor    eax,0x7b1b8d97
  4083ea:	shl    BYTE PTR [edi+0x4696c55b],cl
  4083f0:	mov    ch,0x86
  4083f2:	mov    ecx,0x5ed112ae
  4083f7:	sbb    BYTE PTR [esi+ecx*8+0x43],al
  4083fb:	mov    al,0x5f
  4083fd:	fmul   DWORD PTR [ebp+esi*1-0x56]
  408401:	mov    dl,0x8d
  408403:	ins    BYTE PTR es:[edi],dx
  408404:	pop    ecx
  408405:	(bad)  
  408407:	(bad)  
  408408:	retf   0xf9ca
  40840b:	aaa    
  40840c:	addr16 (bad) 
  40840e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840f:	pop    esi
  408410:	and    edx,DWORD PTR [edx]
  408412:	xlat   BYTE PTR ds:[ebx]
  408413:	enter  0x44e8,0xaf
  408417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408418:	add    al,0xee
  40841a:	mov    ch,0xc
  40841c:	xchg   edx,eax
  40841d:	sar    ch,cl
  40841f:	jns    0x4083d1
  408421:	rol    dl,cl
  408423:	aas    
  408424:	cli    
  408425:	out    dx,eax
  408426:	lock shl BYTE PTR [ebx+esi*1-0x5a277cb7],cl
  40842e:	jmp    0x8f3c494
  408433:	inc    esp
  408434:	ret    
  408435:	jb     0x408476
  408437:	test   eax,0xfcf04aea
  40843c:	int    0x96
  40843e:	jns    0x408463
  408440:	rol    DWORD PTR [edi-0x12],cl
  408443:	xor    BYTE PTR [eax],dh
  408445:	shl    ecx,0xaa
  408448:	sbb    BYTE PTR [eax+0x22],dh
  40844b:	mov    cl,0x61
  40844d:	adc    eax,0xb47e5f8e
  408452:	cmp    eax,0xe5635881
  408457:	jge    0x4083ee
  408459:	sti    
  40845a:	ins    BYTE PTR es:[edi],dx
  40845b:	jne    0x408465
  40845d:	das    
  40845e:	fucomp st(6)
  408460:	nop
  408461:	xchg   ebx,eax
  408462:	leave  
  408463:	ret    0x365e
  408466:	adc    eax,0xa2eaac85
  40846b:	sbb    eax,0x6082217e
  408470:	inc    edi
  408471:	push   edi
  408472:	rcr    DWORD PTR [esp+eiz*8-0x94f35d8],cl
  408479:	push   eax
  40847a:	out    0x38,al
  40847c:	test   BYTE PTR [ebp-0x38],bl
  40847f:	or     al,0xc3
  408481:	xor    eax,0x61c7520b
  408486:	and    BYTE PTR [ecx+0x4f1eec17],dh
  40848c:	fsub   QWORD PTR ds:[ebx]
  40848f:	neg    ah
  408491:	add    DWORD PTR [esi+esi*4],0xf4f2f207
  408498:	mov    dh,0x8
  40849a:	frstor gs:[ecx+0x41]
  40849e:	push   edx
  40849f:	scas   al,BYTE PTR es:[edi]
  4084a0:	(bad)  
  4084a2:	pop    edi
  4084a3:	ins    BYTE PTR es:[edi],dx
  4084a4:	out    0xf,eax
  4084a6:	(bad)  
  4084a7:	sub    DWORD PTR [eax-0x20],ecx
  4084aa:	fisttp WORD PTR [edi]
  4084ac:	xlat   BYTE PTR ds:[ebx]
  4084ad:	add    bl,BYTE PTR [eax]
  4084af:	xchg   esi,eax
  4084b0:	adc    cl,BYTE PTR [eax+0x5]
  4084b3:	jle    0x40843d
  4084b5:	pop    edi
  4084b6:	fwait
  4084b7:	xor    al,0x47
  4084b9:	mov    edx,0xc6bf8551
  4084be:	mul    BYTE PTR [eax-0x2f0a4343]
  4084c4:	xchg   ebx,eax
  4084c5:	into   
  4084c6:	jg     0x4084ea
  4084c8:	popa   
  4084c9:	cs je  0x408529
  4084cc:	cmp    cl,BYTE PTR [esi+0x8]
  4084cf:	cmp    al,0xed
  4084d1:	data16 jle 0x4084f8
  4084d4:	mov    esp,0xad8a5c1a
  4084d9:	ret    0x2209
  4084dc:	das    
  4084dd:	jge    0x408463
  4084df:	dec    ebx
  4084e0:	ins    DWORD PTR es:[edi],dx
  4084e1:	loope  0x408546
  4084e3:	pop    edx
  4084e4:	stc    
  4084e5:	ins    BYTE PTR es:[edi],dx
  4084e6:	jecxz  0x4084ae
  4084e8:	stos   DWORD PTR es:[edi],eax
  4084e9:	repnz lods eax,DWORD PTR ds:[esi]
  4084eb:	dec    edi
  4084ec:	pop    ecx
  4084ed:	xchg   ecx,eax
  4084ee:	fs cdq 
  4084f0:	retf   0xec6a
  4084f3:	ds cwde 
  4084f5:	sub    al,0xb3
  4084f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f8:	in     eax,0xd2
  4084fa:	xlat   BYTE PTR ds:[ebx]
  4084fb:	mov    esp,edi
  4084fd:	les    ebx,FWORD PTR [edx]
  4084ff:	fcomp  DWORD PTR [edx+ebx*2]
  408502:	icebp  
  408503:	in     al,dx
  408504:	test   eax,0xcacde9c5
  408509:	retf   0x7816
  40850c:	arpl   WORD PTR [esi+0x69a39611],dx
  408512:	(bad)  
  408513:	push   ebx
  408514:	shl    DWORD PTR [eax+0x68db628e],1
  40851a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40851b:	lock xlat BYTE PTR ds:[ebx]
  40851d:	push   eax
  40851e:	sbb    eax,0x3ce01b06
  408523:	mov    edi,0x48f848f
  408528:	retf   
  408529:	cld    
  40852a:	inc    esp
  40852b:	or     esp,DWORD PTR [ecx]
  40852d:	out    0x37,eax
  40852f:	xlat   BYTE PTR ds:[ebx]
  408530:	xchg   esp,eax
  408531:	cli    
  408532:	dec    edi
  408533:	push   ds
  408534:	mov    BYTE PTR cs:[bx+di+0x1b],ch
  408539:	inc    ebp
  40853a:	test   eax,0x37066acb
  40853f:	jae    0x408501
  408541:	mov    esp,0x52d0c899
  408546:	pop    ecx
  408547:	mov    ebx,0xc9264f21
  40854c:	(bad)  
  40854d:	fmul   QWORD PTR [ecx+0x51]
  408550:	xchg   edi,eax
  408551:	push   esp
  408552:	add    DWORD PTR [ecx+0x1ef1f28b],edi
  408558:	outs   dx,BYTE PTR ds:[esi]
  408559:	ss (bad) 
  40855b:	mov    edi,?
  40855d:	mov    edi,0xe5e83fb5
  408562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408563:	(bad)  
  408564:	cmc    
  408565:	cmp    DWORD PTR [edx],edx
  408567:	add    DWORD PTR [edx+0x37],0x32
  40856b:	mov    bl,0x93
  40856d:	(bad)  
  40856f:	sahf   
  408570:	mov    ah,0xf2
  408572:	mov    bl,0xd2
  408574:	inc    edx
  408575:	push   edi
  408576:	ja     0x4085f7
  408578:	xchg   edi,eax
  408579:	jae    0x408559
  40857b:	push   ebx
  40857c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40857d:	dec    ecx
  40857e:	dec    edi
  40857f:	repz retf 0xe3ec
  408583:	(bad)  
  408584:	mov    DWORD PTR [ecx+0x14],eax
  408587:	pop    edi
  408588:	xchg   ebx,eax
  408589:	fsub   st,st(4)
  40858b:	ret    0xbfec
  40858e:	pop    ss
  40858f:	dec    esi
  408590:	retf   
  408591:	js     0x4085c2
  408593:	js     0x40855e
  408595:	and    BYTE PTR ds:0x3bba8615,bh
  40859b:	sbb    bl,dh
  40859d:	loope  0x4085ab
  40859f:	in     eax,dx
  4085a0:	mov    edi,0xc9d49fe7
  4085a5:	repnz stos BYTE PTR es:[edi],al
  4085a7:	push   0x9
  4085a9:	add    BYTE PTR [esi-0x4],0x42
  4085ad:	mov    esi,0x87c8dbc0
  4085b2:	jb     0x40858e
  4085b4:	ins    DWORD PTR es:[edi],dx
  4085b5:	ja     0x40854f
  4085b7:	mov    ebp,0xd16163b0
  4085bc:	dec    esp
  4085bd:	out    0xfe,ax
  4085c0:	sub    dh,BYTE PTR [ecx-0x2921072d]
  4085c6:	rol    BYTE PTR [edi],1
  4085c8:	ds mov eax,0x33ac0e15
  4085ce:	jmp    0x9f936e34
  4085d3:	ins    BYTE PTR es:[edi],dx
  4085d4:	in     al,0x26
  4085d6:	loope  0x40859b
  4085d8:	jb     0x408648
  4085da:	ds sti 
  4085dc:	cmp    BYTE PTR [edi+0x65],al
  4085df:	add    ebx,DWORD PTR [esi-0x3a]
  4085e2:	push   es
  4085e3:	sar    BYTE PTR [ecx],cl
  4085e5:	aam    0x6e
  4085e7:	int    0x53
  4085e9:	aam    0x7b
  4085eb:	fistp  QWORD PTR [ecx]
  4085ed:	retf   0xa8a8
  4085f0:	xchg   esp,eax
  4085f1:	xchg   esi,eax
  4085f2:	nop
  4085f3:	xchg   edx,eax
  4085f4:	shr    DWORD PTR [ebp-0x5],0xf4
  4085f8:	dec    esi
  4085f9:	loope  0x40862f
  4085fb:	ja     0x4085ea
  4085fd:	jne    0x4085e0
  4085ff:	fisub  WORD PTR [ecx-0x697087ca]
  408605:	sub    ebp,DWORD PTR [edi+0x1c]
  408608:	jmp    0xcb0f9e72
  40860d:	outs   dx,BYTE PTR ds:[esi]
  40860e:	mov    bh,0x8c
  408610:	sti    
  408611:	popf   
  408612:	aas    
  408613:	(bad)  
  408614:	xchg   edi,eax
  408615:	or     dl,ah
  408617:	push   ds
  408618:	lods   al,BYTE PTR ds:[esi]
  408619:	(bad)  
  40861a:	(bad)  
  40861b:	clc    
  40861c:	push   ebp
  40861d:	adc    eax,0xc2a2a779
  408622:	clc    
  408623:	mov    ch,0x91
  408625:	pop    edi
  408626:	fisub  DWORD PTR [esp+eax*1+0x7d]
  40862a:	xchg   ebp,eax
  40862b:	mov    cl,0x2e
  40862d:	lds    eax,FWORD PTR [ebx]
  40862f:	cmp    eax,0x95149407
  408634:	xor    BYTE PTR [edi],bh
  408636:	sbb    DWORD PTR [ebp-0x794ab882],0x8433a474
  408640:	sbb    DWORD PTR [eax],edx
  408642:	mov    ah,0xa8
  408644:	mov    cl,0x9c
  408646:	xor    ebx,esp
  408648:	lahf   
  408649:	lahf   
  40864a:	jp     0x408695
  40864c:	addr16 data16 lahf 
  40864f:	adc    BYTE PTR [edi+eiz*8+0xcb595ab],al
  408656:	push   ebp
  408657:	push   ds
  408658:	imul   eax,DWORD PTR [esi],0x62
  40865b:	and    DWORD PTR ds:[ecx+0x1f],0x10
  408660:	(bad)  
  408661:	adc    eax,0x2988de28
  408666:	sbb    al,0x67
  408668:	add    eax,0x146d0597
  40866d:	rcr    DWORD PTR [eax+0x19],cl
  408670:	or     BYTE PTR [eax+0x2652ca4c],0x3e
  408677:	sbb    dl,BYTE PTR [eax]
  408679:	jmp    0x81e8:0x74d67783
  408680:	sti    
  408681:	jno    0x408683
  408683:	inc    esp
  408684:	push   edx
  408685:	iret   
  408686:	mov    al,0xc8
  408688:	add    bh,bh
  40868a:	out    dx,eax
  40868b:	cmp    dh,BYTE PTR [eax+0x2e]
  40868e:	adc    al,0x2e
  408690:	and    DWORD PTR [edx-0x5ab9b65f],ebp
  408696:	pop    es
  408697:	inc    ebp
  408698:	nop
  408699:	retf   
  40869a:	adc    DWORD PTR [eax+0x389cdcac],ecx
  4086a0:	mov    bl,0xe6
  4086a2:	pusha  
  4086a3:	int    0x10
  4086a5:	dec    esp
  4086a6:	test   al,0x5e
  4086a8:	lahf   
  4086a9:	test   eax,0xf2b6cafb
  4086ae:	push   ebp
  4086af:	sbb    al,0xf6
  4086b1:	mov    esp,0x89995978
  4086b6:	xor    eax,0xc3249503
  4086bb:	mov    WORD PTR [eax],ds
  4086bd:	std    
  4086be:	jmp    0x40872c
  4086c0:	pop    ecx
  4086c1:	cmp    cl,0xd8
  4086c4:	rcr    bl,1
  4086c6:	xlat   BYTE PTR ds:[ebx]
  4086c7:	dec    eax
  4086c8:	(bad)  
  4086c9:	outs   dx,DWORD PTR ds:[esi]
  4086ca:	xor    cl,BYTE PTR [ebx]
  4086cc:	pop    edi
  4086cd:	inc    esi
  4086ce:	inc    eax
  4086cf:	imul   ebx,DWORD PTR [esi+0x5de48c56],0x429b77b5
  4086d9:	or     esp,ecx
  4086db:	cdq    
  4086dc:	jge    0x4086f4
  4086de:	push   ds
  4086df:	test   DWORD PTR [esi+edi*2+0x763d0160],edi
  4086e6:	loopne 0x40873a
  4086e8:	es cmc 
  4086ea:	in     eax,dx
  4086eb:	fadd   QWORD PTR [ecx]
  4086ed:	cs popf 
  4086ef:	pop    es
  4086f0:	dec    eax
  4086f1:	push   ebp
  4086f2:	ins    BYTE PTR es:[edi],dx
  4086f3:	adc    eax,0x7e4adc5a
  4086f8:	dec    edi
  4086f9:	inc    ebp
  4086fa:	adc    BYTE PTR ds:0x5b92fd61,al
  408700:	push   eax
  408701:	cwde   
  408702:	repz pop eax
  408704:	mov    dl,0x61
  408706:	call   0x36e595ff
  40870b:	mov    dh,0xcc
  40870d:	aam    0x63
  40870f:	imul   edi,DWORD PTR [ebp-0x43],0x5f1dcfe7
  408716:	sahf   
  408717:	cmp    al,0xd2
  408719:	fist   WORD PTR [edx+ebp*1]
  40871c:	aaa    
  40871d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40871e:	addr16 icebp 
  408720:	mov    ds:0x14e1faad,al
  408725:	aad    0xb3
  408727:	test   eax,0xd02bfacb
  40872c:	outs   dx,DWORD PTR ds:[esi]
  40872d:	push   ds
  40872e:	into   
  40872f:	stc    
  408730:	loopne 0x40875b
  408732:	push   eax
  408733:	dec    edx
  408734:	pop    ebx
  408735:	mov    ds:0x65984cd4,eax
  40873a:	cmp    dh,BYTE PTR [edx+0x0]
  40873d:	clc    
  40873e:	sbb    eax,0x25fd4547
  408743:	sub    WORD PTR [ecx],bx
  408746:	jno    0x408740
  408748:	xor    al,0x7b
  40874a:	daa    
  40874b:	data16 aad 0x13
  40874e:	sbb    BYTE PTR [esi],ah
  408750:	sbb    al,0x37
  408752:	cmp    dh,dh
  408754:	pusha  
  408755:	xchg   BYTE PTR [ebx+0x1d],ah
  408758:	fcmovnb st,st(5)
  40875a:	add    BYTE PTR [ebx-0x2],al
  40875d:	sub    dh,0x30
  408760:	sub    ah,BYTE PTR [esi+0xa2447c9]
  408766:	inc    bp
  408768:	inc    ebp
  408769:	bswap  esi
  40876b:	adc    eax,0xfab46528
  408770:	mov    dl,0x8b
  408772:	mov    eax,0xf880e46e
  408777:	pop    es
  408778:	push   es
  408779:	adc    al,0xad
  40877b:	mov    al,ds:0x7e8b539a
  408780:	call   0x9a13:0x2cb397e4
  408787:	imul   DWORD PTR [ebp-0x79]
  40878a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40878b:	mov    eax,ds:0x708c8c
  408790:	lds    eax,FWORD PTR [ecx+0x58f923dd]
  408796:	sub    al,0x2
  408798:	ja     0x408758
  40879a:	inc    eax
  40879b:	test   al,0x55
  40879d:	cwde   
  40879e:	outs   dx,DWORD PTR ds:[esi]
  40879f:	and    ebp,DWORD PTR [ebp+0x3d89d667]
  4087a5:	push   edx
  4087a6:	sub    BYTE PTR [ebx],0x92
  4087a9:	push   ss
  4087aa:	pop    ecx
  4087ab:	pop    ds
  4087ac:	jp     0x408799
  4087ae:	add    dh,bh
  4087b0:	or     eax,0xd188784e
  4087b5:	stos   DWORD PTR es:[edi],eax
  4087b6:	daa    
  4087b7:	loop   0x4087b6
  4087b9:	repz jo 0x4087ae
  4087bc:	loope  0x408829
  4087be:	push   ds
  4087bf:	sub    eax,0x9911b039
  4087c4:	js     0x4087d7
  4087c6:	xchg   ecx,eax
  4087c7:	(bad)  
  4087c8:	adc    al,0xdf
  4087ca:	daa    
  4087cb:	cmp    al,0x73
  4087cd:	cwde   
  4087ce:	dec    eax
  4087cf:	pop    ds
  4087d0:	jnp    0x4087a3
  4087d2:	fisub  DWORD PTR [ebx-0xe1846f4]
  4087d8:	pop    edi
  4087d9:	pushf  
  4087da:	cmp    al,BYTE PTR [esi]
  4087dc:	and    BYTE PTR [edx-0x7a63c47f],cl
  4087e2:	or     DWORD PTR [ecx+0x5e],0x5c1f2832
  4087e9:	loopne 0x4087b3
  4087eb:	shl    BYTE PTR [ebx+0x4af0d77c],cl
  4087f1:	mov    ebx,0xf01b71f5
  4087f6:	adc    bh,ch
  4087f8:	fcomp  QWORD PTR [ebx-0x20aeed90]
  4087fe:	and    DWORD PTR fs:[edi-0x6d554d92],0xffffffba
  408806:	ret    
  408807:	cdq    
  408808:	bound  ebx,QWORD PTR [eax-0x7b]
  40880b:	push   ebp
  40880c:	dec    edi
  40880d:	ss ins DWORD PTR es:[edi],dx
  40880f:	nop
  408810:	pop    esi
  408811:	adc    bl,BYTE PTR [ebx]
  408813:	cli    
  408814:	mov    bl,0xcf
  408816:	mov    WORD PTR [ebp+ebx*2+0x176526cc],ds
  40881d:	stos   BYTE PTR es:[edi],al
  40881e:	psubsb mm5,QWORD PTR [eax+ebx*8]
  408822:	imul   DWORD PTR [edi]
  408824:	out    dx,al
  408825:	mov    edi,edx
  408827:	cld    
  408828:	xor    ch,dl
  40882a:	pop    ds
  40882b:	xchg   edx,eax
  40882c:	add    BYTE PTR [eax],bh
  40882e:	outs   dx,DWORD PTR ds:[esi]
  40882f:	xchg   edx,eax
  408830:	lahf   
  408831:	(bad)  [edx-0x30]
  408834:	inc    esp
  408835:	cmp    al,0x7a
  408837:	and    esp,ecx
  408839:	jae    0x4087ff
  40883b:	mov    edi,0xbc15f3d5
  408840:	pop    esp
  408841:	sbb    bh,ch
  408843:	inc    edx
  408844:	lea    eax,[ecx+edx*1-0x57668d45]
  40884b:	jmp    0x408802
  40884d:	test   al,0xed
  40884f:	mov    ecx,0xc4fa35d4
  408854:	adc    eax,0xee418bfa
  408859:	add    eax,0x8d9df9dc
  40885e:	adc    bh,bh
  408860:	xchg   ebp,eax
  408861:	arpl   WORD PTR [eax+0x68],bx
  408864:	fistp  DWORD PTR [ebx+0x5]
  408867:	adc    BYTE PTR [edi-0x3d323f57],bh
  40886d:	fdivp  st(6),st
  40886f:	pop    ecx
  408870:	xchg   esp,eax
  408871:	sbb    DWORD PTR [ebp+eiz*2+0x3d],edx
  408875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408876:	in     al,dx
  408877:	(bad)  
  408878:	int    0x58
  40887a:	js     0x4088f8
  40887c:	add    al,0x28
  40887e:	ret    0xca7a
  408881:	pop    esi
  408882:	pop    ecx
  408883:	push   esi
  408884:	mov    DWORD PTR [esi],edi
  408886:	clc    
  408887:	fistp  WORD PTR [eax-0x2d]
  40888a:	mov    bh,0x2d
  40888c:	outs   dx,BYTE PTR ds:[esi]
  40888d:	shl    ebp,cl
  40888f:	mov    ah,0x49
  408891:	jle    0x4088f1
  408893:	ins    DWORD PTR es:[edi],dx
  408894:	push   ecx
  408895:	and    DWORD PTR [edx+edx*4-0x3],edi
  408899:	add    DWORD PTR [ebp-0x2c5e8244],0x71e475c6
  4088a3:	sub    eax,0xfa7a7b64
  4088a8:	fs push edi
  4088aa:	mov    eax,0xad5e0021
  4088af:	push   edx
  4088b0:	(bad)  
  4088b2:	adc    ecx,edi
  4088b4:	rcl    DWORD PTR [ebx+ecx*4+0x6f],0xe4
  4088b9:	in     eax,0xcb
  4088bb:	jp     0x408935
  4088bd:	and    DWORD PTR [eax],eax
  4088bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088c0:	cli    
  4088c1:	cmp    DWORD PTR ds:0x1687ade9,ebx
  4088c7:	call   0xc11:0xaffe218e
  4088ce:	popa   
  4088cf:	adc    BYTE PTR [ecx],bl
  4088d1:	leave  
  4088d2:	sbb    al,dh
  4088d4:	inc    ecx
  4088d5:	(bad)  
  4088d6:	aam    0x57
  4088d8:	or     ebx,DWORD PTR [edx]
  4088da:	les    ebp,FWORD PTR [ebx-0x164f9781]
  4088e0:	loopne 0x4088f7
  4088e2:	test   BYTE PTR [edi+eiz*4-0x71],ch
  4088e6:	dec    ebp
  4088e7:	dec    eax
  4088e8:	retf   0xda03
  4088eb:	cdq    
  4088ec:	les    edi,FWORD PTR [esi]
  4088ee:	popf   
  4088ef:	inc    edi
  4088f0:	(bad)  
  4088f1:	push   eax
  4088f2:	push   0xffffffff
  4088f4:	add    al,0xdf
  4088f6:	adc    al,0xf5
  4088f8:	ins    DWORD PTR es:[edi],dx
  4088f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088fa:	and    BYTE PTR [esi+0x1092abf4],ch
  408900:	fisubr DWORD PTR [edi+0x18]
  408903:	ja     0x4088a8
  408905:	adc    DWORD PTR [ebx-0x3d],edi
  408908:	dec    ebp
  408909:	inc    edi
  40890a:	ret    0x6500
  40890d:	xor    dh,BYTE PTR ds:0xfbad3757
  408913:	(bad)  
  408914:	aam    0x48
  408916:	xchg   edi,eax
  408917:	(bad)  
  408918:	xchg   edx,eax
  408919:	adc    BYTE PTR [ecx-0x260dfbf5],0x65
  408920:	cmp    BYTE PTR [eax+0x68846e33],0x23
  408927:	jmp    0xf626:0xacad091a
  40892e:	repnz mov edi,0x286c6d60
  408934:	mov    ebx,0xcad71dcd
  408939:	fsub   st,st(4)
  40893b:	xorps  xmm5,XMMWORD PTR [esi]
  40893e:	cmp    ecx,DWORD PTR [edx-0x50]
  408941:	xchg   DWORD PTR [esi],ebp
  408943:	dec    edx
  408944:	inc    ebx
  408945:	cld    
  408946:	and    cl,BYTE PTR [ecx+0x5e]
  408949:	fild   DWORD PTR [esi-0x12ed2905]
  40894f:	stos   DWORD PTR es:[edi],eax
  408950:	jne    0x408983
  408952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408953:	pop    esi
  408954:	add    esi,DWORD PTR [ebp+0x51]
  408957:	ficom  DWORD PTR [ecx]
  408959:	jbe    0x4089bb
  40895b:	inc    esi
  40895c:	mov    bh,0x38
  40895e:	je     0x408984
  408960:	mov    ds:0x27fead34,eax
  408965:	popf   
  408966:	xchg   esi,eax
  408967:	add    eax,0xf5357b83
  40896c:	xchg   esp,eax
  40896d:	loope  0x40897f
  40896f:	adc    al,0x83
  408971:	push   cs
  408972:	pop    es
  408973:	xlat   BYTE PTR ds:[ebx]
  408974:	jne    0x408988
  408976:	pop    eax
  408977:	mov    BYTE PTR [ebx+0x6c],ch
  40897a:	sub    edi,DWORD PTR [ebx]
  40897c:	inc    eax
  40897d:	scas   al,BYTE PTR es:[edi]
  40897e:	push   ss
  40897f:	shl    DWORD PTR [ebx+edi*4-0x54106c06],1
  408986:	mov    al,ds:0x80d0b751
  40898b:	retf   0x669a
  40898e:	arpl   WORD PTR [ecx*8-0x6451ade7],di
  408995:	xlat   BYTE PTR ds:[ebx]
  408996:	pop    esp
  408997:	mov    edx,0x67612b37
  40899c:	outs   dx,BYTE PTR ds:[esi]
  40899d:	dec    ebp
  40899e:	mov    edx,0x5059962b
  4089a3:	sub    DWORD PTR [ecx*4-0x3127c394],edi
  4089aa:	ret    0x6950
  4089ad:	xchg   ecx,eax
  4089ae:	daa    
  4089af:	adc    bl,BYTE PTR [esi]
  4089b1:	xor    edx,DWORD PTR [ecx+0x16]
  4089b4:	jae    0x40898e
  4089b6:	outs   dx,DWORD PTR ds:[esi]
  4089b7:	mov    bh,0x1b
  4089b9:	jae    0x4089d5
  4089bb:	in     eax,dx
  4089bc:	frstor [eax-0x6a]
  4089bf:	and    ch,BYTE PTR [ebx]
  4089c1:	dec    ebx
  4089c2:	(bad)  
  4089c3:	xchg   ebp,eax
  4089c4:	jns    0x408975
  4089c6:	push   esi
  4089c7:	sub    al,ch
  4089c9:	nop
  4089ca:	fld    TBYTE PTR [edi]
  4089cc:	and    ecx,ecx
  4089ce:	sub    BYTE PTR [edi],dl
  4089d0:	pop    edi
  4089d1:	inc    esi
  4089d2:	mov    al,0x8e
  4089d4:	mov    ebx,0x4d8d74bc
  4089d9:	call   0xbfd3ddae
  4089de:	sbb    eax,0xe6432a6f
  4089e3:	sbb    DWORD PTR ds:0xfa89849f,esp
  4089e9:	push   ss
  4089ea:	fimul  DWORD PTR [esi-0x181c240b]
  4089f0:	sub    al,0x6a
  4089f2:	jo     0x4089e4
  4089f4:	adc    al,0xdc
  4089f6:	jmp    0x3e731a99
  4089fb:	sbb    cl,BYTE PTR [ebp+0x3f]
  4089fe:	push   esi
  4089ff:	mov    eax,0x2fcef143
  408a04:	bound  esp,QWORD PTR [ecx+0x59fe3f61]
  408a0a:	call   0xb039ffc3
  408a0f:	aam    0x6c
  408a11:	lods   al,BYTE PTR ds:[esi]
  408a12:	daa    
  408a13:	dec    esp
  408a14:	repz xchg esp,eax
  408a16:	repz adc al,0x53
  408a19:	jl     0x408a7a
  408a1b:	add    eax,0xefa9ae87
  408a20:	xor    DWORD PTR [eax],eax
  408a22:	mov    WORD PTR [edx],ss
  408a24:	mov    eax,0xf2ea0483
  408a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a2a:	or     bh,BYTE PTR [ebp-0x6c534d1f]
  408a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a31:	icebp  
  408a32:	xor    BYTE PTR [ecx-0x74],dl
  408a35:	mov    esi,0x5f1bbb68
  408a3a:	sub    eax,0xd6ff7a7e
  408a3f:	sbb    BYTE PTR [esi],dh
  408a41:	das    
  408a42:	lock scas eax,DWORD PTR es:[edi]
  408a44:	test   al,0xf9
  408a46:	loopne 0x408a75
  408a48:	pop    ss
  408a49:	shl    DWORD PTR [eax],cl
  408a4b:	stos   DWORD PTR es:[edi],eax
  408a4c:	aad    0xbb
  408a4e:	aas    
  408a4f:	ficom  DWORD PTR [edi-0x48f1ba19]
  408a55:	xchg   edi,ebp
  408a57:	xchg   DWORD PTR [ebx+0x11e5a274],esi
  408a5d:	dec    esp
  408a5e:	fsub   st,st(0)
  408a60:	mov    ecx,0x3cdba69e
  408a65:	hlt    
  408a66:	xor    eax,0xcb8da986
  408a6b:	push   cs
  408a6c:	neg    DWORD PTR [ebp-0x7ec05ec3]
  408a72:	mov    bl,0xda
  408a74:	aad    0xa6
  408a76:	fistp  DWORD PTR [edx+edx*1]
  408a79:	mov    ebx,edi
  408a7b:	hlt    
  408a7c:	jge    0x408aa8
  408a7e:	stc    
  408a7f:	sbb    al,0xd7
  408a81:	inc    eax
  408a82:	cmc    
  408a83:	inc    ebx
  408a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a85:	cld    
  408a86:	cwde   
  408a87:	cmp    DWORD PTR [esi-0x39],0xffffffb6
  408a8b:	xor    esi,eax
  408a8d:	xor    al,0xa2
  408a8f:	cmova  ecx,ebp
  408a92:	retf   
  408a93:	dec    eax
  408a94:	stos   BYTE PTR es:[edi],al
  408a95:	scas   eax,DWORD PTR es:[edi]
  408a96:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408a98:	mov    ds:0xc6ee16d,eax
  408a9d:	dec    edi
  408a9e:	in     al,dx
  408a9f:	ret    0x96cc
  408aa2:	xor    ah,BYTE PTR [ebp+0x560580f4]
  408aa8:	cmp    cl,al
  408aaa:	inc    ebp
  408aab:	inc    BYTE PTR [edi]
  408aad:	cwde   
  408aae:	dec    edi
  408aaf:	outs   dx,BYTE PTR ds:[esi]
  408ab0:	std    
  408ab1:	mov    ah,0xcb
  408ab3:	call   DWORD PTR [edx+0x4a4b5406]
  408ab9:	jmp    0xc9fa:0xaa1bbbf3
  408ac0:	ds stos BYTE PTR es:[edi],al
  408ac2:	pop    eax
  408ac3:	sar    DWORD PTR [ebx],0xcd
  408ac6:	push   edi
  408ac7:	repnz push esp
  408ac9:	cmc    
  408aca:	repz mov edi,DWORD PTR [ebx]
  408acd:	adc    DWORD PTR [ebp+0x6e],0xfffffff5
  408ad1:	iret   
  408ad2:	xor    DWORD PTR [edi+0x2],0x56
  408ad6:	mov    ebx,?
  408ad8:	add    DWORD PTR [esi+ecx*2-0x1e],ebx
  408adc:	inc    eax
  408add:	lods   eax,DWORD PTR ds:[esi]
  408ade:	xor    cl,cl
  408ae0:	sahf   
  408ae1:	sub    al,0xba
  408ae3:	(bad)  
  408ae4:	std    
  408ae5:	aam    0xfe
  408ae7:	mov    eax,DWORD PTR [eax-0x43b3a9f0]
  408aed:	ins    DWORD PTR es:[edi],dx
  408aee:	inc    esi
  408aef:	iret   
  408af0:	mov    WORD PTR [edx+0x6f],?
  408af3:	or     BYTE PTR [ecx+edx*8+0x76],ch
  408af7:	and    ebp,edi
  408af9:	sbb    eax,0x8d7faa56
  408afe:	scas   al,BYTE PTR es:[edi]
  408aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b00:	and    DWORD PTR [ebp+0x7ebf5b96],eax
  408b06:	push   0x6faaf4bb
  408b0b:	iret   
  408b0c:	mov    WORD PTR [esi-0x27],?
  408b0f:	sbb    al,0x8f
  408b11:	jp     0x408b20
  408b13:	jle    0x408af8
  408b15:	mov    ah,BYTE PTR [ebp+0x21]
  408b18:	fbld   TBYTE PTR [eax+0x15]
  408b1b:	inc    ecx
  408b1c:	mov    ch,0x52
  408b1e:	xchg   DWORD PTR [ebp+0x68],edi
  408b21:	push   cs
  408b22:	fisttp QWORD PTR [esi-0x5fede9a3]
  408b28:	pop    ebx
  408b29:	retf   
  408b2a:	pop    ebx
  408b2b:	push   esp
  408b2c:	std    
  408b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b2e:	fisub  DWORD PTR [ecx]
  408b30:	xchg   DWORD PTR [edi+ebp*1],esi
  408b33:	adc    dl,BYTE PTR [edi-0x12]
  408b36:	inc    ecx
  408b37:	into   
  408b38:	ds in  al,0xfb
  408b3b:	fsub   QWORD PTR [ebx]
  408b3d:	jmp    0x41f3:0xd1ed946f
  408b44:	pop    ebx
  408b45:	xor    BYTE PTR [eax],bh
  408b47:	ror    DWORD PTR ds:0xaee4da0a,cl
  408b4d:	idiv   DWORD PTR [ecx+0x6b]
  408b50:	div    DWORD PTR [ebx-0x25a9d548]
  408b56:	xor    al,0x5f
  408b58:	jg     0x408bc6
  408b5a:	mov    DWORD PTR [eax],ebx
  408b5c:	imul   edx,DWORD PTR [edi],0xf4bf013d
  408b62:	jmp    0x5ecfb2db
  408b67:	or     ecx,ebx
  408b69:	loop   0x408b15
  408b6b:	mov    fs,WORD PTR [ebx]
  408b6d:	idiv   BYTE PTR [si-0x61]
  408b71:	lahf   
  408b72:	sub    DWORD PTR ds:0x630fccd6,esp
  408b78:	jge    0x408b5a
  408b7a:	loopne 0x408b4e
  408b7c:	push   ebx
  408b7d:	(bad)  
  408b7e:	sbb    esp,eax
  408b80:	jmp    0xa358:0xc5fd3263
  408b87:	call   0x5c60:0xb5069cbf
  408b8e:	add    eax,0xd66e92dc
  408b93:	aad    0x99
  408b95:	push   cs
  408b96:	xchg   esi,eax
  408b97:	ss ds inc edx
  408b9a:	arpl   WORD PTR [edi+edx*8+0xc],dx
  408b9e:	scas   al,BYTE PTR es:[edi]
  408b9f:	(bad)  
  408ba0:	ror    ah,cl
  408ba2:	into   
  408ba3:	dec    ebx
  408ba4:	in     eax,0x93
  408ba6:	jg     0x408b9f
  408ba8:	jmp    0x47e99e0f
  408bad:	inc    ebx
  408bae:	adc    DWORD PTR [eax+0x7e],ecx
  408bb1:	dec    esp
  408bb2:	gs xor al,0xe6
  408bb5:	xor    eax,0x9b309614
  408bba:	sub    DWORD PTR [ebx+esi*1-0x3d],ecx
  408bbe:	jb     0x408b6d
  408bc0:	push   ds
  408bc1:	sbb    BYTE PTR ds:0xdc6a4249,0x7e
  408bc8:	fisubr DWORD PTR [edi+0x1462a642]
  408bce:	(bad)  
  408bcf:	cmp    eax,0x4eea41e9
  408bd4:	adc    dh,bh
  408bd6:	jle    0x408c3a
  408bd8:	std    
  408bd9:	push   ecx
  408bda:	mov    bh,0x92
  408bdc:	mov    BYTE PTR [edi+0x9],dl
  408bdf:	mov    ebp,0xcb57a4c0
  408be4:	jae    0x408b70
  408be6:	retf   
  408be7:	fucom  st(7)
  408be9:	div    DWORD PTR [esp+ecx*4+0x17]
  408bed:	sub    al,0x3e
  408bef:	addr16 out 0xc3,eax
  408bf2:	hlt    
  408bf3:	xor    eax,0x7f000e4e
  408bf8:	stos   DWORD PTR es:[edi],eax
  408bf9:	stos   BYTE PTR es:[edi],al
  408bfa:	push   eax
  408bfb:	mov    al,ds:0x692b2d5d
  408c00:	jmp    0x603f0e8c
  408c05:	out    0xb2,al
  408c07:	push   0x1c6ba4fb
  408c0c:	mov    bl,BYTE PTR [esi-0x350611e2]
  408c12:	retf   
  408c13:	mov    ds:0x52e5bd56,eax
  408c18:	pusha  
  408c19:	cwde   
  408c1a:	push   edx
  408c1b:	fcmovnu st,st(1)
  408c1d:	cld    
  408c1e:	mov    ebx,0x75b4b285
  408c23:	(bad)  
  408c24:	xchg   esp,eax
  408c25:	mov    ah,0x2e
  408c27:	lea    ecx,[eax+0x43d3437b]
  408c2d:	loopne 0x408c6c
  408c2f:	sbb    BYTE PTR [ebp+0x18],bl
  408c32:	loope  0x408c26
  408c34:	push   esi
  408c35:	mov    ch,0x6
  408c37:	not    BYTE PTR [esi-0x1185e633]
  408c3d:	fbld   TBYTE PTR [eax+ebx*8]
  408c40:	jge    0x408bca
  408c42:	xchg   ebx,eax
  408c43:	mov    dl,0x5e
  408c45:	or     BYTE PTR [ecx-0x6ee66a31],dl
  408c4b:	loope  0x408c49
  408c4d:	scas   al,BYTE PTR es:[edi]
  408c4e:	pop    edi
  408c4f:	ins    DWORD PTR es:[edi],dx
  408c50:	xchg   edx,eax
  408c51:	fld    TBYTE PTR [ecx+0x54ac70af]
  408c57:	mov    WORD PTR [esi],ss
  408c59:	cmp    al,0x1d
  408c5b:	dec    edx
  408c5c:	mov    bl,0xf1
  408c5e:	rol    BYTE PTR [ebx-0x2b06b6b5],0x42
  408c65:	(bad)  
  408c66:	mov    esp,0x5a689031
  408c6b:	repnz sbb eax,0xab9b6838
  408c71:	in     al,0x88
  408c73:	sbb    ch,BYTE PTR [edi-0x3d]
  408c76:	hlt    
  408c77:	aas    
  408c78:	mov    ds:0xe3fb00f8,al
  408c7d:	pop    esi
  408c7e:	mov    dl,0xf2
  408c80:	js     0x408c5a
  408c82:	imul   esp,esp,0xffffffc5
  408c85:	xor    DWORD PTR [ecx-0x3225cf2],0x5cec78b
  408c8f:	fsub   QWORD PTR [ecx]
  408c91:	arpl   ax,sp
  408c93:	sub    DWORD PTR [edx],esp
  408c95:	out    dx,eax
  408c96:	out    dx,eax
  408c97:	add    ch,bh
  408c99:	inc    esp
  408c9a:	dec    edi
  408c9b:	inc    ebp
  408c9c:	clc    
  408c9d:	add    BYTE PTR ds:0x9e749b49,dl
  408ca3:	fnstsw WORD PTR [ebx]
  408ca5:	inc    ecx
  408ca6:	out    0x4c,al
  408ca8:	pop    esi
  408ca9:	adc    eax,0x1fc97fb9
  408cae:	mov    ebp,0xb3a56b82
  408cb3:	out    dx,al
  408cb4:	and    eax,0x47be9382
  408cb9:	adc    BYTE PTR [eax],bl
  408cbb:	iret   
  408cbc:	test   eax,0x8ef5de21
  408cc1:	jnp    0x408ce1
  408cc3:	cmp    edi,edi
  408cc5:	add    dl,0x4d
  408cc8:	pop    DWORD PTR [edi-0xa5415b4]
  408cce:	push   ds
  408ccf:	jnp    0x408cf0
  408cd1:	and    ecx,ebp
  408cd3:	mov    ecx,ebp
  408cd5:	ret    0x44bc
  408cd8:	and    bh,bh
  408cda:	sub    DWORD PTR [ebx+0x78],edx
  408cdd:	add    eax,0xb0802596
  408ce2:	hlt    
  408ce3:	(bad)  
  408ce4:	cmp    ebp,edx
  408ce6:	fidiv  WORD PTR [edx]
  408ce8:	jnp    0x408d23
  408cea:	cmp    eax,0x646d13db
  408cef:	cld    
  408cf0:	and    edx,edx
  408cf2:	outs   dx,DWORD PTR ds:[esi]
  408cf3:	push   eax
  408cf4:	cmp    DWORD PTR [ebp-0x317ce782],edi
  408cfa:	out    dx,eax
  408cfb:	sbb    dl,al
  408cfd:	jg     0x408d26
  408cff:	popa   
  408d00:	push   edx
  408d01:	jl     0x408ce1
  408d03:	or     DWORD PTR [ecx],edi
  408d05:	outs   dx,DWORD PTR ds:[esi]
  408d06:	jle    0x408cc2
  408d08:	or     eax,DWORD PTR ds:0xd47fe23d
  408d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0f:	gs push ebx
  408d11:	div    DWORD PTR [ebx]
  408d13:	mov    eax,ds:0xd228115c
  408d18:	sbb    BYTE PTR [edx+0x541696e7],0xa
  408d1f:	push   ebx
  408d20:	call   0x8d47:0xe2975240
  408d27:	rcl    ah,cl
  408d29:	jbe    0x408d6e
  408d2b:	cdq    
  408d2c:	fdiv   QWORD PTR [ebx-0x35]
  408d2f:	aam    0x44
  408d31:	(bad)  
  408d32:	jns    0x408d18
  408d34:	mov    BYTE PTR [ebx-0x58],bh
  408d37:	popa   
  408d38:	and    BYTE PTR [esi+0x40b1480b],bl
  408d3e:	outs   dx,DWORD PTR ds:[esi]
  408d3f:	sbb    eax,0x27ab242a
  408d44:	addr16 sbb cl,bl
  408d47:	mov    bl,BYTE PTR [esi-0x3b0cef6]
  408d4d:	sub    BYTE PTR [esi-0x1a],cl
  408d50:	adc    edi,esp
  408d52:	mov    al,ds:0x842259b8
  408d57:	inc    edx
  408d58:	sub    ecx,DWORD PTR [edx-0x5]
  408d5b:	mov    bh,0x67
  408d5d:	sbb    edi,DWORD PTR [ecx+ebp*4]
  408d60:	xor    BYTE PTR [ebx+0x6ffc80ed],bh
  408d66:	jg     0x408d6d
  408d68:	ror    BYTE PTR [edx],1
  408d6a:	xor    al,0x80
  408d6c:	or     DWORD PTR [esi-0x37],0xffffff8c
  408d70:	enter  0xbfdb,0x1a
  408d74:	cmp    al,0x88
  408d76:	cmp    bh,dh
  408d78:	cld    
  408d79:	add    ah,BYTE PTR [esi+0x5e]
  408d7c:	mov    ebx,0xfe987659
  408d81:	inc    esp
  408d82:	and    eax,0x8689c7ea
  408d87:	ret    
  408d88:	sbb    ebx,DWORD PTR [ebx]
  408d8a:	in     al,0xa9
  408d8c:	inc    edi
  408d8d:	test   al,0xe2
  408d8f:	call   0x80de:0x974d873d
  408d96:	push   ss
  408d97:	push   ds
  408d98:	add    DWORD PTR [edi-0x5a30e52d],eax
  408d9e:	xor    eax,0xb49a6973
  408da3:	call   0x4a6cbb4b
  408da8:	outs   dx,DWORD PTR ds:[esi]
  408da9:	ret    
  408daa:	dec    ebp
  408dab:	into   
  408dac:	in     al,dx
  408dad:	aas    
  408dae:	call   0x368cdceb
  408db3:	gs out 0x36,eax
  408db6:	xchg   DWORD PTR [ebx],ebp
  408db8:	mov    ch,cl
  408dba:	cmp    eax,0xa0e2cb8f
  408dbf:	inc    ebp
  408dc0:	jle    0x408dec
  408dc2:	push   0x23
  408dc4:	push   ebp
  408dc5:	add    ebp,DWORD PTR [eax+0x46]
  408dc8:	or     eax,0x56aed250
  408dcd:	mov    ecx,0x3d615169
  408dd2:	sbb    al,0x71
  408dd4:	push   ecx
  408dd5:	es test eax,0xe54cc2d1
  408ddb:	fsubr  DWORD PTR [esi-0x3e]
  408dde:	or     bh,bl
  408de0:	and    bh,al
  408de2:	rcl    BYTE PTR [edi-0x55],1
  408de5:	mov    edi,0xd1da32bb
  408dea:	mov    eax,0x22f1f677
  408def:	inc    ebp
  408df0:	cmp    BYTE PTR [ebx+0x6aa11dd9],bl
  408df6:	outs   dx,DWORD PTR ds:[esi]
  408df7:	outs   dx,BYTE PTR ds:[esi]
  408df8:	cld    
  408df9:	inc    ecx
  408dfa:	xor    BYTE PTR ds:0x3e3a4138,ah
  408e00:	addr16 jmp 0x408e24
  408e03:	ds adc eax,0xc12a6c
  408e09:	pop    ds
  408e0a:	js     0x408e3a
  408e0c:	cld    
  408e0d:	xchg   ebx,eax
  408e0e:	idiv   BYTE PTR [edx]
  408e10:	(bad)  
  408e11:	inc    edi
  408e12:	mov    ebp,0x50ddfe13
  408e17:	sbb    al,bl
  408e19:	ret    
  408e1a:	pusha  
  408e1b:	push   cs
  408e1c:	aad    0xf6
  408e1e:	stc    
  408e1f:	stc    
  408e20:	scas   al,BYTE PTR es:[edi]
  408e21:	clc    
  408e22:	sbb    esi,0xffffff8c
  408e25:	popa   
  408e26:	js     0x408e5a
  408e28:	pop    ebx
  408e29:	jge    0x408e06
  408e2b:	add    BYTE PTR [ebx+edx*4+0x70],ch
  408e2f:	aaa    
  408e30:	popf   
  408e31:	sbb    bh,BYTE PTR [esi+0x75]
  408e34:	add    BYTE PTR [ecx+0x56],al
  408e37:	sub    bh,ah
  408e39:	push   0x4e
  408e3b:	xchg   ebp,eax
  408e3c:	and    ch,bl
  408e3e:	je     0x408e5e
  408e40:	das    
  408e41:	add    eax,0xba8dc808
  408e46:	bnd jge 0x408e08
  408e49:	mov    al,ds:0x9d360905
  408e4e:	sbb    ebp,DWORD PTR [ebx]
  408e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e51:	or     ah,BYTE PTR [edx-0x67]
  408e54:	std    
  408e55:	call   0xd4d2:0x512bd30b
  408e5c:	bound  eax,QWORD PTR [eax]
  408e5e:	lahf   
  408e5f:	inc    ecx
  408e60:	inc    edi
  408e61:	clc    
  408e62:	mov    ebx,0x1aa6dcf0
  408e67:	es test esp,edx
  408e6a:	push   esp
  408e6b:	mov    esp,0xda8e6e5f
  408e70:	(bad)  
  408e71:	fsub   st,st(0)
  408e73:	mov    eax,0xd010b16b
  408e78:	and    al,BYTE PTR [ecx+eiz*8-0x49]
  408e7c:	and    BYTE PTR [edi+0x58],0x6d
  408e80:	inc    esi
  408e81:	push   eax
  408e82:	retf   0xa76a
  408e85:	jle    0x408e18
  408e87:	cdq    
  408e88:	xchg   ebx,eax
  408e89:	adc    BYTE PTR [eax+0x644e7904],cl
  408e8f:	push   0xfffffffa
  408e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e92:	mov    esp,0x3fc80d63
  408e97:	cwde   
  408e98:	jbe    0x408ea3
  408e9a:	mov    ds:0x9cc2648e,eax
  408e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea0:	push   ss
  408ea1:	push   edx
  408ea2:	outs   dx,BYTE PTR ds:[esi]
  408ea3:	jbe    0x408ef3
  408ea5:	add    al,0x36
  408ea7:	int3   
  408ea8:	cmp    eax,0x56f77abb
  408ead:	jmp    FWORD PTR [ebp+0x62815fb2]
  408eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb4:	pop    edi
  408eb5:	mov    edi,0xb5a80da5
  408eba:	(bad)  
  408ebb:	pop    esi
  408ebc:	loope  0x408ee3
  408ebe:	sbb    BYTE PTR [ebx],al
  408ec0:	not    BYTE PTR [ecx+0x1b732cbc]
  408ec6:	push   ss
  408ec7:	mov    cl,0x68
  408ec9:	fwait
  408eca:	(bad)  
  408ecb:	fild   DWORD PTR [ecx+0x7d4598ee]
  408ed1:	mov    esp,0xc43b7c6c
  408ed6:	mov    dl,0x6
  408ed8:	cmc    
  408ed9:	and    eax,0x76b441f7
  408ede:	xor    al,0x33
  408ee0:	(bad)
  408ee3:	lea    edx,[eax+0x7ce21de8]
  408ee9:	mov    bh,0x6f
  408eeb:	les    esi,FWORD PTR [edi+0x2ba805b1]
  408ef1:	(bad)  
  408ef2:	pop    ds
  408ef3:	xlat   BYTE PTR ds:[ebx]
  408ef4:	fcmovnb st,st(6)
  408ef6:	or     ch,0x88
  408ef9:	psraw  mm2,mm0
  408efc:	sbb    esp,eax
  408efe:	leave  
  408eff:	xor    dl,dh
  408f01:	push   ecx
  408f02:	daa    
  408f03:	cmc    
  408f04:	dec    esp
  408f05:	outs   dx,DWORD PTR ds:[esi]
  408f06:	bsf    esp,DWORD PTR [edi+0x58]
  408f0a:	push   eax
  408f0b:	jmp    0x408f14
  408f0d:	data16 shl BYTE PTR [ebx+ebp*4-0x31],cl
  408f12:	cmp    ah,BYTE PTR [edi+0x7e]
  408f15:	cmp    bh,0x47
  408f18:	push   edi
  408f19:	aaa    
  408f1a:	xor    al,0x49
  408f1c:	aaa    
  408f1d:	daa    
  408f1e:	mov    esp,0x2d580bb
  408f23:	mov    ebx,0x95c2b5e8
  408f28:	lahf   
  408f29:	pop    es
  408f2a:	jo     0x408efd
  408f2c:	sub    BYTE PTR [ebx-0x23],cl
  408f2f:	push   0xffffffdb
  408f31:	pop    ss
  408f32:	adc    al,BYTE PTR [edi]
  408f34:	scas   al,BYTE PTR es:[edi]
  408f35:	addr16 xchg ecx,eax
  408f37:	or     al,0xdc
  408f39:	pop    esi
  408f3a:	cmp    dh,BYTE PTR [esi+0x29]
  408f3d:	leave  
  408f3e:	call   0xf773:0x241bb4b0
  408f45:	or     al,0x54
  408f47:	(bad)  
  408f48:	bound  edx,QWORD PTR [edi-0x556cde4b]
  408f4e:	mov    ah,0xaa
  408f50:	shl    al,1
  408f52:	loop   0x408ef4
  408f54:	mov    ecx,0x395773d7
  408f59:	cli    
  408f5a:	(bad)  
  408f5b:	pop    edi
  408f5c:	imul   eax,DWORD PTR [esi],0x46
  408f5f:	sbb    bl,BYTE PTR [ebx-0x39dfde05]
  408f65:	dec    ecx
  408f66:	pop    ss
  408f67:	push   es
  408f68:	sbb    edx,DWORD PTR [eax+0x17]
  408f6b:	das    
  408f6c:	pop    ebx
  408f6d:	mov    ah,0xfd
  408f6f:	mov    dh,0x2a
  408f71:	fld    QWORD PTR [ecx]
  408f73:	mov    esp,0x8dcf7059
  408f78:	out    dx,eax
  408f79:	and    al,0x4f
  408f7b:	mov    ebp,0x83bb674
  408f80:	pop    ebx
  408f81:	cli    
  408f82:	pop    ds
  408f83:	xchg   ebx,eax
  408f84:	xchg   esi,eax
  408f85:	bnd jbe 0x408fa7
  408f88:	mov    bh,0xbd
  408f8a:	test   al,0x47
  408f8c:	scas   al,BYTE PTR es:[edi]
  408f8d:	arpl   WORD PTR [edx+edx*8+0x1b],bx
  408f91:	shl    DWORD PTR [edi],cl
  408f93:	dec    edi
  408f94:	inc    ecx
  408f95:	push   esi
  408f96:	out    dx,al
  408f97:	xchg   ecx,eax
  408f98:	arpl   WORD PTR [ebx],bx
  408f9a:	rol    DWORD PTR [ecx-0x1],cl
  408f9d:	mov    ebp,0x5f36eb39
  408fa2:	dec    ebx
  408fa3:	fldenv [esi]
  408fa5:	jg     0x408fb8
  408fa7:	cmp    eax,edi
  408fa9:	lods   eax,DWORD PTR ds:[esi]
  408faa:	(bad)  
  408fab:	out    dx,al
  408fac:	jns    0x408fa6
  408fae:	jno    0x408f5b
  408fb0:	or     dl,bh
  408fb2:	add    esi,ebp
  408fb4:	pop    esp
  408fb5:	and    BYTE PTR [edx+0x6f18236a],bh
  408fbb:	sar    DWORD PTR [edx+edx*1],cl
  408fbe:	dec    ecx
  408fbf:	repnz xlat BYTE PTR ds:[ebx]
  408fc1:	adc    cl,0x41
  408fc4:	push   es
  408fc5:	jge    0x409017
  408fc7:	cwde   
  408fc8:	mov    eax,DWORD PTR [edi+0x6a]
  408fcb:	push   esi
  408fcc:	repz out dx,al
  408fce:	pop    ebx
  408fcf:	mov    al,ds:0x6394ada1
  408fd4:	sub    bh,BYTE PTR [ebx+ecx*2-0x11d6f403]
  408fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdc:	dec    ecx
  408fdd:	retf   0x182d
  408fe0:	pop    ebx
  408fe1:	xor    DWORD PTR [ecx+esi*8-0x395efb8e],ebx
  408fe8:	push   ebp
  408fe9:	leave  
  408fea:	das    
  408feb:	fld    DWORD PTR [esi]
  408fed:	int3   
  408fee:	ds xchg edx,eax
  408ff0:	dec    edx
  408ff1:	imul   esp,DWORD PTR [ebx],0x73
  408ff4:	jno    0x40903b
  408ff6:	push   ss
  408ff7:	pusha  
  408ff8:	jl     0x40900f
  408ffa:	das    
  408ffb:	dec    ebx
  408ffc:	dec    ecx
  408ffd:	enter  0x887d,0xb6
  409001:	sub    esp,eax
  409003:	sub    al,0xfa
  409005:	mov    dl,0xfe
  409007:	stos   DWORD PTR es:[edi],eax
  409008:	pop    ebp
  409009:	mov    ebp,0x50096fe6
  40900e:	mov    bl,0xd3
  409010:	jb     0x409053
  409012:	lods   eax,DWORD PTR ds:[esi]
  409013:	shl    DWORD PTR [edi+ebp*8],1
  409016:	aam    0xff
  409018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409019:	sbb    BYTE PTR [bp+di+0x48],0x5e
  40901e:	inc    ecx
  40901f:	ins    DWORD PTR es:[edi],dx
  409020:	data16 sbb bl,dl
  409023:	cmp    eax,0x227546a2
  409028:	in     eax,dx
  409029:	xor    al,0x95
  40902b:	dec    eax
  40902c:	jo     0x408fb8
  40902e:	and    edi,ecx
  409030:	aaa    
  409031:	xchg   edx,eax
  409032:	add    ch,BYTE PTR [ebp+ecx*8+0x67]
  409036:	rcr    BYTE PTR [ecx],1
  409038:	dec    esp
  409039:	adc    ebx,DWORD PTR [eax-0x5f]
  40903c:	fisubr DWORD PTR [ecx+0x39b525b7]
  409042:	dec    ecx
  409043:	xlat   BYTE PTR ds:[ebx]
  409044:	dec    ebp
  409045:	cmp    al,0x36
  409047:	repnz pop ebx
  409049:	pop    ebx
  40904a:	inc    ecx
  40904b:	xor    al,0x67
  40904d:	call   0x77682cc4
  409052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409053:	sub    al,0x88
  409055:	jae    0x4090bc
  409057:	sub    BYTE PTR [ebp-0x32],dl
  40905a:	in     al,0xc9
  40905c:	xchg   esi,eax
  40905d:	xor    dh,BYTE PTR ss:[ecx+0x49306bcc]
  409064:	ret    
  409065:	aam    0x3
  409067:	inc    ecx
  409068:	and    esp,0xa3aacea5
  40906e:	mov    ch,0x0
  409070:	adc    BYTE PTR [ebp+0x17],bl
  409073:	ins    DWORD PTR es:[edi],dx
  409074:	nop
  409075:	lea    eax,[edx]
  409077:	arpl   WORD PTR [ecx-0x58b10263],di
  40907d:	inc    ecx
  40907e:	dec    ebp
  40907f:	out    0x9b,al
  409081:	xchg   esp,eax
  409082:	out    0x1f,eax
  409084:	mov    bl,0x21
  409086:	push   es
  409087:	jo     0x4090ea
  409089:	adc    al,0x5b
  40908b:	out    0xcb,al
  40908d:	hlt    
  40908e:	lds    eax,FWORD PTR [esi+0xc]
  409091:	test   al,0xe8
  409093:	pop    ebp
  409094:	shl    BYTE PTR [esi],1
  409096:	cmp    edi,DWORD PTR [ebx]
  409098:	mov    ch,BYTE PTR [eax+0x18]
  40909b:	adc    al,0x61
  40909d:	xor    BYTE PTR [esi],dl
  40909f:	mov    eax,ds:0xc3336911
  4090a4:	mov    eax,0x65b7872f
  4090a9:	dec    esp
  4090aa:	or     cl,al
  4090ac:	js     0x409114
  4090ae:	sar    BYTE PTR [ecx-0x3d0b2d03],cl
  4090b4:	in     eax,dx
  4090b5:	and    ecx,ebp
  4090b7:	sahf   
  4090b8:	and    eax,0x6100da1
  4090bd:	lock mov ch,0xa8
  4090c0:	add    al,0xce
  4090c2:	add    eax,0xdc1455e6
  4090c7:	lods   al,BYTE PTR ds:[esi]
  4090c8:	fsub   st,st(2)
  4090ca:	dec    esi
  4090cb:	out    0x1b,al
  4090cd:	cmp    eax,0xb84b0fdc
  4090d2:	cmp    al,0xae
  4090d4:	lahf   
  4090d5:	push   esi
  4090d6:	call   0x8110:0xe3f23ea5
  4090dd:	mov    ebx,0x39f621fb
  4090e2:	repnz call FWORD PTR ds:0xe419f863
  4090e9:	jmp    DWORD PTR [edi+0x61]
  4090ec:	adc    al,0xef
  4090ee:	jns    0x409080
  4090f0:	in     eax,dx
  4090f1:	mov    ecx,0x24c30562
  4090f6:	mov    BYTE PTR [edi-0x1764bd1b],ch
  4090fc:	das    
  4090fd:	pop    ecx
  4090fe:	inc    esp
  4090ff:	push   esp
  409100:	addr16 dec esp
  409102:	mov    ebp,0x1e35ab57
  409107:	dec    ebx
  409108:	jns    0x4090b6
  40910a:	jmp    0xfb47:0xca8013d3
  409111:	fiadd  WORD PTR [ebx]
  409113:	daa    
  409114:	popa   
  409115:	ja     0x4090ea
  409117:	jg     0x40915d
  409119:	adc    BYTE PTR [edi+0x4f27ad2b],bl
  40911f:	ds sbb DWORD PTR gs:[ebp-0x16256a5a],0xffffff82
  409128:	inc    edi
  409129:	xchg   ebp,eax
  40912a:	mov    ds:0x5ba0a801,eax
  40912f:	dec    esi
  409130:	push   ebp
  409131:	xor    al,0xbf
  409134:	pop    ss
  409135:	(bad)  
  409137:	add    ecx,DWORD PTR [edi]
  409139:	cmp    DWORD PTR [esi-0x47bc1f9a],ebx
  40913f:	loopne 0x40912f
  409141:	shl    DWORD PTR [edx],cl
  409143:	fdivr  DWORD PTR [ecx-0x9]
  409146:	jge    0x409148
  409148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409149:	add    DWORD PTR [esi-0x49e0c054],edx
  40914f:	(bad)  
  409150:	jl     0x40918c
  409152:	jbe    0x4090da
  409154:	lds    edx,FWORD PTR [ebp-0x1f]
  409157:	push   edx
  409158:	or     ah,BYTE PTR [edx-0x3749d981]
  40915e:	mov    eax,0x7203044d
  409163:	ins    DWORD PTR es:[edi],dx
  409164:	add    al,0xe9
  409166:	mov    ah,ch
  409168:	mov    BYTE PTR [edx-0x45716467],al
  40916e:	js     0x40911e
  409170:	xor    DWORD PTR [esi+0x36],0xffffff9f
  409174:	mov    dl,0x84
  409176:	lds    eax,FWORD PTR [eax+ebx*8]
  409179:	and    al,0xa
  40917b:	sbb    BYTE PTR [ebx-0x4c17ec70],ah
  409181:	sbb    ch,BYTE PTR [esi]
  409183:	out    dx,al
  409184:	inc    edi
  409185:	adc    esp,DWORD PTR ds:0xfb599c68
  40918b:	inc    esi
  40918c:	ret    0xe1e3
  40918f:	sub    eax,0xe4b8ad3c
  409194:	cld    
  409195:	out    dx,al
  409196:	hlt    
  409197:	jnp    0x40913e
  409199:	pop    ebx
  40919a:	mov    bl,BYTE PTR [ebx+edx*1+0x1b]
  40919e:	(bad)  
  40919f:	pop    esp
  4091a0:	lods   eax,DWORD PTR ds:[esi]
  4091a1:	mov    ch,0x14
  4091a3:	stc    
  4091a4:	or     esi,DWORD PTR [edi]
  4091a6:	shr    bl,cl
  4091a8:	cmp    esi,eax
  4091aa:	add    eax,0xbb547c83
  4091af:	xchg   edx,eax
  4091b0:	js     0x4091c9
  4091b2:	push   0x7b
  4091b4:	(bad)  
  4091b5:	pop    edx
  4091b6:	js     0x4091bd
  4091b8:	push   esp
  4091b9:	aaa    
  4091ba:	push   0x21c691b
  4091bf:	test   BYTE PTR [ecx+0x404c3f1d],bh
  4091c5:	push   edi
  4091c6:	(bad)  
  4091c7:	pop    DWORD PTR [eax]
  4091c9:	pop    ebp
  4091ca:	stc    
  4091cb:	dec    esp
  4091cc:	pop    esp
  4091cd:	sbb    bh,BYTE PTR [esi+ebx*8+0x23]
  4091d1:	scas   eax,DWORD PTR es:[edi]
  4091d2:	pop    ds
  4091d3:	mov    WORD PTR [esi],fs
  4091d5:	sbb    dh,bl
  4091d7:	icebp  
  4091d8:	lds    ecx,FWORD PTR [ebp+edi*8-0x30]
  4091dc:	pop    edx
  4091dd:	out    0x24,eax
  4091df:	jmp    0x409187
  4091e1:	jno    0x40924b
  4091e3:	xchg   esi,eax
  4091e4:	dec    ebp
  4091e5:	les    esp,FWORD PTR [edx]
  4091e7:	int    0x85
  4091e9:	stc    
  4091ea:	or     eax,0x275cfefd
  4091ef:	push   ds
  4091f0:	lds    esp,FWORD PTR [edx-0x50]
  4091f3:	dec    eax
  4091f4:	add    DWORD PTR [esi-0x64],eax
  4091f7:	adc    eax,edx
  4091f9:	mov    BYTE PTR [ebx-0x7b],0xd6
  4091fd:	jle    0x4091af
  4091ff:	popa   
  409200:	sub    al,0xe4
  409202:	jmp    0x409279
  409204:	sbb    DWORD PTR [ebp+0x50dd65c1],eax
  40920a:	push   esp
  40920b:	pop    ecx
  40920c:	arpl   WORD PTR [ebp-0x77],bx
  40920f:	push   cs
  409210:	mov    al,ds:0x9fad753a
  409215:	ror    BYTE PTR [edi+0x2],1
  409218:	inc    edi
  409219:	nop
  40921a:	xchg   DWORD PTR [ecx],ecx
  40921c:	cmp    dh,bl
  40921e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40921f:	jo     0x40929c
  409221:	popf   
  409222:	or     dh,ah
  409224:	jecxz  0x40924c
  409226:	xor    esp,DWORD PTR [eax-0xa0c1515]
  40922c:	(bad)  
  40922d:	cmp    bh,BYTE PTR [edx+esi*8]
  409230:	das    
  409231:	xlat   BYTE PTR ds:[ebx]
  409232:	jnp    0x40922a
  409234:	stos   DWORD PTR es:[edi],eax
  409235:	repnz xchg dh,bh
  409238:	xor    BYTE PTR ds:0x8cc6d5a0,cl
  40923e:	in     al,dx
  40923f:	mov    WORD PTR [eax+0x2d],?
  409242:	out    dx,eax
  409243:	repz sbb eax,0xfcdd2103
  409249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40924a:	inc    edi
  40924b:	dec    ebp
  40924c:	outs   dx,BYTE PTR ds:[esi]
  40924d:	repz sbb eax,0xbbeb2af2
  409253:	xor    bl,BYTE PTR [ecx]
  409255:	sub    dl,dh
  409257:	(bad)  
  409258:	sub    DWORD PTR [edi+0x5e],eax
  40925b:	inc    esi
  40925c:	push   es
  40925d:	jle    0x40921f
  40925f:	mov    BYTE PTR [esi],bh
  409261:	adc    eax,0x18eb603b
  409266:	rcl    ebp,cl
  409268:	ins    BYTE PTR es:[edi],dx
  409269:	mov    BYTE PTR [ebx+0x6a],ch
  40926c:	(bad)  
  40926d:	mov    ebx,0xd02f6202
  409272:	inc    ebp
  409273:	jae    0x409218
  409275:	add    al,0xc1
  409277:	pop    edx
  409278:	push   esp
  409279:	dec    edx
  40927a:	or     ebx,DWORD PTR [ecx-0x56]
  40927d:	loope  0x4092f9
  40927f:	and    eax,0xae4b3e0
  409284:	jmp    0x409303
  409286:	(bad)
  40928a:	jae    0x40926a
  40928c:	adc    al,0x36
  40928e:	data16 repz (bad) 
  409291:	sqrtps xmm4,XMMWORD PTR [edi-0x5]
  409295:	pusha  
  409296:	and    ah,BYTE PTR [ebx]
  409298:	addr16 add eax,0xc8f68c9e
  40929e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40929f:	xchg   edi,eax
  4092a0:	je     0x409314
  4092a2:	sub    eax,0xf337e9c5
  4092a7:	pushf  
  4092a8:	pop    eax
  4092a9:	es mov ebp,edx
  4092ac:	ins    DWORD PTR es:[edi],dx
  4092ad:	push   ebp
  4092ae:	push   es
  4092af:	or     eax,0xf39662de
  4092b4:	(bad)  
  4092b5:	ja     0x409319
  4092b7:	jbe    0x40929f
  4092b9:	in     al,dx
  4092ba:	add    al,0x7f
  4092bc:	fidivr WORD PTR [eax+0x6d]
  4092bf:	adc    DWORD PTR [ebx+0x43],ebx
  4092c2:	inc    ecx
  4092c3:	xchg   BYTE PTR [ebx],dh
  4092c5:	aas    
  4092c6:	comiss xmm4,DWORD PTR [ebx]
  4092c9:	xor    dl,BYTE PTR [ecx+0x42a1b255]
  4092cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d0:	lds    edx,FWORD PTR [edi]
  4092d2:	sbb    BYTE PTR [edx+eax*8],0xd9
  4092d6:	add    DWORD PTR [ecx],edx
  4092d8:	mov    ch,0x19
  4092da:	xor    eax,0x20dfd491
  4092df:	jb     0x4092f4
  4092e1:	pop    ss
  4092e2:	fmul   DWORD PTR [edi]
  4092e4:	dec    ebp
  4092e5:	sbb    bh,BYTE PTR ds:0xa3364b36
  4092eb:	jp     0x40932e
  4092ed:	mov    esp,0x9438288e
  4092f2:	stos   BYTE PTR es:[edi],al
  4092f3:	fadd   st,st(3)
  4092f5:	dec    dl
  4092f7:	and    al,0xf8
  4092f9:	add    DWORD PTR [ebp-0x4b],ebx
  4092fc:	xor    ebx,DWORD PTR [ecx-0xf]
  4092ff:	cmp    DWORD PTR [edi-0x4bd6cfea],edx
  409305:	mov    dl,0xce
  409307:	mov    WORD PTR [esi],ds
  409309:	js     0x4092f8
  40930b:	xchg   ebx,eax
  40930c:	je     0x4092c6
  40930e:	xchg   ebx,eax
  40930f:	div    DWORD PTR [ebx+ecx*2+0x3cd808b9]
  409316:	xor    DWORD PTR [eax+0x2c],edi
  409319:	pop    ds
  40931a:	enter  0x46e9,0x6c
  40931e:	sbb    ebp,ebx
  409320:	sahf   
  409321:	adc    esi,DWORD PTR ds:0xfe0fba8b
  409327:	(bad)  
  409328:	aad    0x57
  40932a:	xor    cl,BYTE PTR [esi]
  40932c:	mov    ds:0x3610ba79,al
  409331:	push   0x58a62933
  409336:	ret    0x8c32
  409339:	adc    al,0x27
  40933b:	cli    
  40933c:	data16 (bad) 
  40933e:	xchg   edx,eax
  40933f:	dec    ebx
  409340:	loop   0x4092f5
  409342:	aam    0x94
  409344:	pop    esi
  409345:	pop    esi
  409346:	(bad)  
  409347:	ins    BYTE PTR es:[edi],dx
  409348:	mov    ds:0x7d5a4bcb,eax
  40934d:	or     ebp,DWORD PTR ds:0x5a3f01b9
  409353:	int3   
  409354:	and    al,0x90
  409356:	jne    0x409375
  409358:	pop    ebp
  409359:	inc    eax
  40935a:	out    dx,eax
  40935b:	aam    0xbf
  40935d:	popa   
  40935e:	shl    DWORD PTR [esp+eiz*4+0x696328eb],0xb4
  409366:	fwait
  409367:	sub    DWORD PTR [edi-0x7b],ebx
  40936a:	mov    esp,0xddf78f1
  40936f:	mov    al,0x3a
  409371:	push   ebp
  409372:	push   eax
  409373:	xchg   DWORD PTR [eax-0x266128f3],esp
  409379:	push   eax
  40937a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937b:	cmp    BYTE PTR [edx-0x75],ah
  40937e:	lods   al,BYTE PTR ds:[esi]
  40937f:	push   esp
  409380:	scas   eax,DWORD PTR es:[edi]
  409381:	pop    es
  409382:	sub    ebx,DWORD PTR [edx+0x7246c70b]
  409388:	and    BYTE PTR [eax-0x28],al
  40938b:	ja     0x40935f
  40938d:	imul   eax,DWORD PTR [esi-0x6e0dfab3],0x45cb1f19
  409397:	ins    DWORD PTR es:[edi],dx
  409398:	int    0x61
  40939a:	mov    WORD PTR [ebx+ecx*2+0x77],ss
  40939e:	xchg   ebx,eax
  40939f:	ja     0x4093c7
  4093a1:	sbb    al,0x9c
  4093a3:	(bad)  
  4093a4:	mov    ah,0x54
  4093a6:	jle    0x40941c
  4093a8:	jo     0x40939b
  4093aa:	out    dx,eax
  4093ab:	jmp    0xa80:0x64cf2ade
  4093b2:	popf   
  4093b3:	jmp    0x40942c
  4093b5:	and    DWORD PTR [ecx-0xe],edi
  4093b8:	or     BYTE PTR [esi],bl
  4093ba:	das    
  4093bb:	mov    cl,dl
  4093bd:	push   ss
  4093be:	jmp    DWORD PTR [ebx+0x74]
  4093c1:	sar    DWORD PTR [ebp+eiz*2-0x6e],0x21
  4093c6:	cmp    ebp,0xe08b60b
  4093cc:	aaa    
  4093cd:	add    DWORD PTR [ebp+0x76b55f85],ecx
  4093d3:	or     BYTE PTR [edx],0xb3
  4093d6:	(bad)  
  4093d7:	pop    ebx
  4093d8:	and    DWORD PTR [ebp+0x19],esi
  4093db:	dec    edx
  4093dc:	mov    esi,DWORD PTR [eax-0x1db9fe63]
  4093e2:	inc    esi
  4093e3:	mov    WORD PTR [ecx+0x41],es
  4093e6:	adc    eax,DWORD PTR [edi+ebx*2+0x5d1a67c7]
  4093ed:	or     bh,ah
  4093ef:	push   edi
  4093f0:	es in  eax,dx
  4093f2:	push   ebp
  4093f3:	imul   esp,edx,0xbc2b33af
  4093f9:	test   BYTE PTR [esi+edi*1],0x48
  4093fd:	mov    dh,0xcc
  4093ff:	outs   dx,BYTE PTR ds:[esi]
  409400:	stos   DWORD PTR es:[edi],eax
  409401:	(bad)
  409404:	pop    ds
  409405:	shr    BYTE PTR [ebp+edx*2-0x5c],0x75
  40940a:	add    DWORD PTR [eax+0x70],ebp
  40940d:	cmp    cl,BYTE PTR [ebp-0x7a9cdb2e]
  409413:	arpl   WORD PTR [edx],cx
  409415:	dec    ebp
  409416:	data16 aam 0xce
  409419:	js     0x40942a
  40941b:	in     eax,0xa3
  40941d:	ja     0x4093cf
  40941f:	mov    DWORD PTR [ecx+0x1887425a],edi
  409425:	ja     0x4093f5
  409427:	or     DWORD PTR [edx+0x79],edi
  40942a:	fcom   QWORD PTR [ecx]
  40942c:	rol    BYTE PTR [edx],1
  40942e:	in     eax,0x9b
  409430:	int3   
  409431:	cmp    DWORD PTR [edx-0x51dc5091],edx
  409437:	(bad)  
  409438:	xchg   esi,eax
  409439:	dec    ebp
  40943a:	out    0x3c,eax
  40943c:	aas    
  40943d:	ins    DWORD PTR es:[edi],dx
  40943e:	sub    bh,al
  409440:	arpl   WORD PTR [ebx-0x19472958],ax
  409446:	enter  0xde82,0xe8
  40944a:	cdq    
  40944b:	and    eax,0xdea502b4
  409450:	push   edi
  409451:	push   ebp
  409452:	cmp    al,al
  409454:	xlat   BYTE PTR ds:[ebx]
  409455:	sub    eax,0x6ad48abb
  40945a:	xor    BYTE PTR [ebp+0xc0bcf1e],0xce
  409461:	fidiv  DWORD PTR [esp+ebx*2]
  409464:	(bad)  
  409465:	xchg   ebx,eax
  409466:	hlt    
  409467:	ins    DWORD PTR es:[edi],dx
  409468:	stos   BYTE PTR es:[edi],al
  409469:	pop    eax
  40946a:	cld    
  40946b:	lds    eax,FWORD PTR [edx]
  40946d:	and    BYTE PTR [esp+edx*8-0x2e750af7],ah
  409474:	push   eax
  409475:	outs   dx,DWORD PTR ds:[esi]
  409476:	aad    0x49
  409478:	fcomp  DWORD PTR [ecx]
  40947a:	mov    ecx,0x1a1645c9
  40947f:	add    eax,0xf2f6af65
  409484:	mov    eax,0x50b250db
  409489:	call   0x4fc4:0xa5a674d6
  409490:	adc    DWORD PTR ds:0xea1dc5c4,esp
  409496:	clc    
  409497:	mov    ah,0x23
  409499:	(bad)
  40949c:	lods   eax,DWORD PTR ds:[esi]
  40949d:	rcl    BYTE PTR [ecx+0x2d356cf6],cl
  4094a3:	adc    BYTE PTR [eax],0x15
  4094a6:	xor    edi,DWORD PTR [esi-0x755bf0f5]
  4094ac:	fstp   TBYTE PTR [ebx-0xc279268]
  4094b2:	inc    eax
  4094b3:	leave  
  4094b4:	push   0xec687f94
  4094b9:	into   
  4094ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094bb:	and    edi,DWORD PTR [ebp+eax*4+0x13]
  4094bf:	(bad)  
  4094c0:	outs   dx,BYTE PTR ds:[esi]
  4094c1:	xchg   ebp,eax
  4094c2:	scas   al,BYTE PTR es:[edi]
  4094c3:	pushf  
  4094c4:	ret    
  4094c5:	rep stos DWORD PTR es:[edi],eax
  4094c7:	rcr    DWORD PTR [ebx+0x5fe0cc8e],0x99
  4094ce:	stos   BYTE PTR es:[edi],al
  4094cf:	push   esi
  4094d0:	inc    esi
  4094d1:	mov    ah,0xac
  4094d3:	loopne 0x4094f1
  4094d5:	inc    edx
  4094d6:	push   0x35
  4094d8:	xor    eax,0xdcd16472
  4094dd:	dec    ecx
  4094de:	adc    ecx,DWORD PTR [edi]
  4094e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e1:	push   eax
  4094e2:	dec    ebx
  4094e3:	hlt    
  4094e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e5:	lahf   
  4094e6:	mov    fs,WORD PTR [edi+eiz*4-0x1dcfab80]
  4094ed:	or     BYTE PTR [edx+0x1a],cl
  4094f0:	xchg   esi,eax
  4094f1:	aam    0xcf
  4094f3:	xor    esp,ecx
  4094f5:	jo     0x4094fa
  4094f7:	xchg   DWORD PTR ds:0x5ba13ba9,eax
  4094fd:	xor    al,0x6e
  4094ff:	push   cs
  409500:	cmp    bl,BYTE PTR [esi+edx*8-0x40]
  409504:	lods   al,BYTE PTR ds:[esi]
  409505:	(bad)  
  409507:	xor    esp,DWORD PTR [edx+0x26]
  40950a:	pop    ecx
  40950b:	pop    ss
  40950c:	call   0x7a8e96e
  409511:	sbb    eax,0x1da011bf
  409516:	push   edi
  409517:	rcl    DWORD PTR [ebp-0x414b00bc],0xe4
  40951e:	sti    
  40951f:	call   0x834f:0x9446ec48
  409526:	mov    esp,0xda36e3b
  40952b:	adc    BYTE PTR [edx+0x66],dh
  40952e:	(bad)  
  40952f:	sbb    BYTE PTR [esi+0x269fd059],dh
  409535:	pop    ecx
  409536:	(bad)  
  409537:	fmul   DWORD PTR [ebx]
  409539:	or     al,0x7e
  40953b:	add    eax,0x765e471d
  409540:	ds push edx
  409542:	cmovl  ecx,DWORD PTR [eax]
  409545:	jbe    0x409581
  409547:	xchg   edx,eax
  409548:	sbb    eax,0xba5a2adc
  40954d:	mov    BYTE PTR [ecx],bl
  40954f:	retf   0x3a25
  409552:	out    0x8c,eax
  409554:	pop    edx
  409555:	or     BYTE PTR [eax+0x51],dh
  409558:	js     0x409551
  40955a:	mov    al,ds:0xc340dc9e
  40955f:	js     0x40951e
  409561:	jae    0x409527
  409563:	out    dx,al
  409564:	popa   
  409565:	mov    dh,0xef
  409567:	push   0xffffffca
  409569:	iret   
  40956a:	les    esi,FWORD PTR [ebx-0x196b6bca]
  409570:	in     eax,0x76
  409572:	loopne 0x4095aa
  409574:	fstp   TBYTE PTR [ecx]
  409576:	inc    esp
  409577:	int    0xd8
  409579:	mov    ecx,0x3acff0f3
  40957e:	mov    esi,0x87ac4772
  409583:	das    
  409584:	adc    DWORD PTR [edi],ebp
  409586:	nop
  409587:	sahf   
  409588:	in     al,dx
  409589:	pop    edx
  40958a:	int    0xe1
  40958c:	inc    esi
  40958d:	iret   
  40958e:	mov    edi,0xed97bbc0
  409593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409594:	xor    BYTE PTR [edx],dh
  409596:	sub    eax,0x78cbc8de
  40959b:	je     0x4095c5
  40959d:	cmp    al,bh
  40959f:	pop    esi
  4095a0:	xor    DWORD PTR [edi+0x75],0x1a0acba8
  4095a7:	js     0x40957a
  4095a9:	jbe    0x4095b8
  4095ab:	sahf   
  4095ac:	loopne 0x409540
  4095ae:	jne    0x4095c8
  4095b0:	xor    esp,esi
  4095b2:	retf   0x865b
  4095b5:	nop
  4095b6:	push   0xffffffb5
  4095b8:	loopne 0x40957d
  4095ba:	or     eax,DWORD PTR [ebp+0x7d]
  4095bd:	retf   
  4095be:	inc    esp
  4095bf:	js     0x4095fa
  4095c1:	mov    bh,0x3a
  4095c3:	loope  0x4095af
  4095c5:	add    DWORD PTR [ecx+esi*4+0x70],esp
  4095c9:	xor    eax,0x750319ea
  4095ce:	(bad)  
  4095d0:	jmp    0x409563
  4095d2:	adc    al,0x7a
  4095d4:	jo     0x4095a8
  4095d6:	jae    0x4095c7
  4095d8:	stos   BYTE PTR es:[edi],al
  4095d9:	in     eax,0x8d
  4095db:	pop    ebx
  4095dc:	shl    DWORD PTR ds:0x78d9ae3d,cl
  4095e2:	pushf  
  4095e3:	mov    ah,0x5b
  4095e5:	mov    eax,ds:0x7ac383f0
  4095ea:	cmp    al,0xc1
  4095ec:	hlt    
  4095ed:	mov    edi,?
  4095ef:	in     eax,dx
  4095f0:	mov    DWORD PTR [ebx],eax
  4095f2:	shl    DWORD PTR [edx+0x6c],cl
  4095f5:	pusha  
  4095f6:	in     al,dx
  4095f7:	and    edi,DWORD PTR [ebx+0x366af516]
  4095fd:	and    eax,0x15f779e8
  409602:	xchg   edi,eax
  409603:	xchg   esp,eax
  409604:	into   
  409605:	loope  0x4095e2
  409607:	cdq    
  409608:	retf   
  409609:	mov    ds:0x50a730a5,eax
  40960e:	inc    ecx
  40960f:	rol    BYTE PTR [esi-0x5de8bfeb],0xf4
  409616:	jmp    0x3563db54
  40961b:	stc    
  40961c:	aam    0x0
  40961e:	sar    dh,cl
  409620:	add    eax,0x18d93bfd
  409625:	sbb    BYTE PTR [edi-0x5f],0x4c
  409629:	push   ss
  40962a:	pop    esi
  40962b:	cdq    
  40962c:	leave  
  40962d:	fadd   QWORD PTR [edi+0x4b]
  409630:	and    esi,esi
  409632:	arpl   WORD PTR [ecx],si
  409634:	hlt    
  409635:	and    BYTE PTR [ebx-0x60ddcd37],ah
  40963b:	or     cl,BYTE PTR [ebp+0x76b9c45b]
  409641:	add    ecx,DWORD PTR [eax]
  409643:	push   DWORD PTR [ecx-0x6b]
  409646:	jmp    0x4095e1
  409648:	call   0x253b:0xde4a0cc8
  40964f:	out    dx,al
  409650:	mov    ch,0x76
  409652:	xor    bl,ah
  409654:	dec    edx
  409655:	dec    esi
  409656:	retf   
  409657:	imul   ebp,DWORD PTR [edi-0x2d],0xde0cc7b7
  40965e:	add    edx,esp
  409660:	adc    eax,0xfea4e9fa
  409665:	push   esp
  409666:	adc    BYTE PTR [ebx],0x40
  409669:	mov    ebp,DWORD PTR ds:0x29a8c1fd
  40966f:	mov    ch,0xaa
  409671:	sbb    ah,BYTE PTR ds:0x9d2dc145
  409677:	(bad)  
  409678:	adc    BYTE PTR [edx],bh
  40967a:	mov    BYTE PTR [edi],0xb8
  40967d:	cs out 0x2e,al
  409680:	sub    BYTE PTR [ecx],bl
  409682:	(bad)  
  409683:	fild   QWORD PTR [esi+0x14]
  409686:	sbb    ecx,DWORD PTR [esi+edi*4-0x2a]
  40968a:	adc    bl,BYTE PTR ds:0x36404bf1
  409690:	adc    DWORD PTR [edi],ebx
  409692:	sar    BYTE PTR [edx+0x30],1
  409695:	(bad)  
  409696:	cmp    edi,esp
  409698:	xchg   esp,eax
  409699:	icebp  
  40969a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40969b:	adc    BYTE PTR [esi+ebx*2],al
  40969e:	mov    edi,DWORD PTR [edx]
  4096a0:	push   esp
  4096a1:	mov    bl,0x83
  4096a3:	out    dx,al
  4096a4:	(bad)  
  4096a5:	push   0x2277959d
  4096aa:	in     al,0x5a
  4096ac:	push   DWORD PTR [eax-0x6e]
  4096af:	mov    ecx,0x2405bac
  4096b4:	addr16 mov ds:0xf89d,eax
  4096b8:	das    
  4096b9:	test   BYTE PTR [edx],bh
  4096bb:	scas   eax,DWORD PTR es:[edi]
  4096bc:	jle    0x4096af
  4096be:	mov    al,ds:0x73e674c9
  4096c3:	test   al,0xe0
  4096c5:	daa    
  4096c6:	(bad)  
  4096c7:	loop   0x4096f4
  4096c9:	and    al,BYTE PTR [ebx*8-0x7edf8a42]
  4096d0:	shl    BYTE PTR [ecx+0x2],1
  4096d3:	inc    ebp
  4096d4:	mov    dh,0xa3
  4096d6:	(bad)  [esi]
  4096d8:	lods   eax,DWORD PTR ds:[esi]
  4096d9:	repz mov edi,0xe68e0aa3
  4096df:	lea    ebp,[ebp+0x15]
  4096e2:	outs   dx,BYTE PTR ds:[esi]
  4096e3:	imul   eax,DWORD PTR [ecx+0x22e226b1],0x29
  4096ea:	fisttp WORD PTR [eax]
  4096ec:	add    esi,DWORD PTR [ebx+0x56b7e4c]
  4096f2:	enter  0xce79,0x3b
  4096f6:	mov    dh,0x51
  4096f8:	mov    edx,0xfe22ce14
  4096fd:	dec    ebx
  4096fe:	mov    al,0xe7
  409700:	mov    WORD PTR [edi-0x2c49e58e],?
  409706:	call   0x142f:0x5b3f531f
  40970d:	fwait
  40970e:	loop   0x409766
  409710:	push   eax
  409711:	cmp    al,0x8a
  409713:	sub    BYTE PTR [eax+0x67],al
  409716:	bound  ecx,QWORD PTR [ebp+ebx*1+0x1b443720]
  40971d:	(bad)  
  40971e:	aam    0xa7
  409720:	sbb    ebp,esp
  409722:	and    al,0x13
  409724:	inc    ecx
  409725:	adc    cl,BYTE PTR [edx-0xc23e7fa]
  40972b:	(bad)  
  40972c:	aam    0x2d
  40972e:	add    esi,DWORD PTR [eax-0x757139d2]
  409734:	sub    eax,DWORD PTR [eax]
  409736:	in     al,dx
  409737:	sbb    dh,BYTE PTR [ecx]
  409739:	call   0xc912:0x7294834
  409740:	cli    
  409741:	sbb    bl,BYTE PTR [edx+0x1b]
  409744:	pop    ds
  409745:	scas   al,BYTE PTR es:[edi]
  409746:	mov    ah,0xc7
  409748:	adc    DWORD PTR [eax+0x1aaa8982],0x2
  40974f:	inc    ebp
  409750:	int    0xd0
  409752:	rol    DWORD PTR [ebp+0x3fbcdcc8],0xef
  409759:	dec    ebp
  40975a:	les    ebx,FWORD PTR [edx]
  40975c:	fwait
  40975d:	enter  0xedb2,0xe5
  409761:	cmp    al,0x51
  409763:	cmp    al,0x84
  409765:	hlt    
  409766:	sahf   
  409767:	imul   BYTE PTR [edx+esi*2]
  40976a:	inc    esi
  40976b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976c:	add    BYTE PTR ds:0x46895e24,ch
  409772:	pop    ebp
  409773:	or     al,0x6b
  409775:	aam    0xde
  409777:	aam    0xcc
  409779:	push   ss
  40977a:	and    bl,dl
  40977c:	lahf   
  40977d:	outs   dx,BYTE PTR ds:[esi]
  40977e:	push   eax
  40977f:	sbb    ch,ah
  409781:	shl    DWORD PTR [ebx-0x25],cl
  409784:	xchg   ecx,eax
  409785:	jecxz  0x409740
  409787:	div    BYTE PTR [ecx]
  409789:	mov    ch,0xa9
  40978b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40978c:	(bad)  
  40978d:	xor    al,0x5b
  40978f:	pusha  
  409790:	xor    al,0x6d
  409792:	fsubrp st(3),st
  409794:	sub    ah,BYTE PTR [ecx+0x3b]
  409797:	pop    es
  409798:	xor    eax,0x9c8f367e
  40979d:	pushf  
  40979e:	add    BYTE PTR [eax],ch
  4097a0:	dec    esp
  4097a1:	mov    ebp,0x457044de
  4097a6:	sbb    eax,0x3be17bec
  4097ab:	and    al,0xd7
  4097ad:	call   FWORD PTR ss:[eax+0x2d]
  4097b1:	test   DWORD PTR [edx+0x32],ebp
  4097b4:	add    eax,0x252d73f7
  4097b9:	sub    al,0x62
  4097bb:	retf   0x1233
  4097be:	push   ebp
  4097bf:	(bad)  
  4097c0:	inc    BYTE PTR [esi-0x74]
  4097c3:	jnp    0x40975d
  4097c5:	rcr    BYTE PTR [edx-0x43],cl
  4097c8:	dec    edi
  4097c9:	xchg   ebp,eax
  4097ca:	outs   dx,DWORD PTR ds:[esi]
  4097cb:	mov    WORD PTR [ecx-0x34b462c9],ss
  4097d1:	test   al,0x16
  4097d3:	jle    0x409769
  4097d5:	push   esi
  4097d6:	sbb    al,0x22
  4097d8:	or     al,0x49
  4097da:	ror    DWORD PTR [edi+ecx*2-0x76c305e1],1
  4097e1:	shl    DWORD PTR [esi-0x56],0xa8
  4097e5:	add    ebp,DWORD PTR [edi]
  4097e7:	into   
  4097e8:	sub    ah,BYTE PTR [edx-0x65]
  4097eb:	bound  ecx,QWORD PTR [edx-0x1]
  4097ee:	cli    
  4097ef:	popf   
  4097f0:	push   ebp
  4097f1:	jg     0x4097b4
  4097f3:	mov    dl,0x94
  4097f5:	sub    BYTE PTR [edi+0x29],0xe5
  4097f9:	(bad)  
  4097fb:	loopne 0x409877
  4097fd:	ins    DWORD PTR es:[edi],dx
  4097fe:	xor    esp,DWORD PTR [eax]
  409800:	adc    DWORD PTR [ecx+0x6f],edi
  409803:	mov    ebx,0x6f86fa39
  409808:	outs   dx,DWORD PTR ds:[esi]
  409809:	add    BYTE PTR [edx],ah
  40980b:	call   0x19c:0xca01fe54
  409812:	mov    esi,DWORD PTR [ecx+0x1922e894]
  409818:	clc    
  409819:	add    eax,0x2ccb0d89
  40981e:	jno    0x40984a
  409820:	inc    esp
  409821:	push   es
  409822:	fst    QWORD PTR [esi]
  409824:	inc    edx
  409825:	mov    bh,0xc0
  409827:	sub    al,0x76
  409829:	jg     0x4097c6
  40982b:	(bad)  
  40982d:	xchg   ecx,eax
  40982e:	(bad)  
  40982f:	push   ebp
  409830:	lahf   
  409831:	pop    es
  409832:	jo     0x409824
  409834:	mov    eax,0x862deab3
  409839:	add    DWORD PTR [ebx-0x10],ebp
  40983c:	enter  0x31ee,0xe5
  409840:	fs mov dh,0xf6
  409843:	nop
  409844:	jae    0x409805
  409846:	out    dx,eax
  409847:	scas   eax,DWORD PTR es:[edi]
  409848:	in     al,dx
  409849:	outs   dx,DWORD PTR cs:[esi]
  40984b:	int    0x31
  40984d:	or     DWORD PTR [ebx+0x7c],eax
  409850:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409852:	and    ecx,DWORD PTR [ebx-0x46]
  409855:	xchg   ebx,eax
  409856:	mov    ds:0xa0759344,eax
  40985b:	fisttp QWORD PTR [eax]
  40985d:	or     BYTE PTR ds:0xda1f957e,0xeb
  409864:	mov    bh,BYTE PTR [eax-0x6b3e2d04]
  40986a:	loope  0x40988b
  40986c:	pop    ds
  40986d:	push   cs
  40986e:	pop    ss
  40986f:	jl     0x4098ac
  409871:	pop    es
  409872:	call   0x83135e15
  409877:	jp     0x4098e6
  409879:	mov    dl,0x8
  40987b:	xchg   esi,eax
  40987c:	cli    
  40987d:	add    esi,DWORD PTR ds:0x2e1626e5
  409883:	sub    eax,0x5a44cbc6
  409888:	sbb    al,0xef
  40988a:	js     0x409821
  40988c:	or     edx,DWORD PTR [edi]
  40988e:	xchg   esi,eax
  40988f:	push   0xbc01dfd3
  409894:	push   esp
  409895:	jg     0x40986e
  409897:	stc    
  409898:	sub    bh,BYTE PTR [edi]
  40989a:	stc    
  40989b:	xchg   ebp,eax
  40989c:	mov    bh,0xce
  40989e:	lahf   
  40989f:	fsubr  DWORD PTR [ebx+0x2e]
  4098a2:	ret    0xbc7a
  4098a5:	scas   al,BYTE PTR es:[edi]
  4098a6:	and    dl,BYTE PTR [esi+0x60]
  4098a9:	call   DWORD PTR [ebx-0x661f2cc3]
  4098af:	jmp    0x23d568da
  4098b4:	popf   
  4098b5:	cmp    al,0xd6
  4098b7:	dec    ecx
  4098b8:	jge    0x409863
  4098ba:	jns    0x4098a7
  4098bc:	jno    0x4098ba
  4098be:	mov    dl,ch
  4098c0:	or     DWORD PTR [edi],edx
  4098c2:	or     eax,0x75ab958f
  4098c7:	jo     0x4098e6
  4098c9:	rcl    dl,cl
  4098cb:	cmp    ah,BYTE PTR [ebx]
  4098cd:	lea    esp,[eax+eiz*4+0x539f9210]
  4098d4:	sub    ecx,DWORD PTR ss:[eax]
  4098d7:	sbb    ebp,DWORD PTR [eax+ecx*8+0x4ff5996b]
  4098de:	dec    eax
  4098df:	add    eax,0x25d5a6e6
  4098e4:	loope  0x4098bf
  4098e6:	sbb    al,0x6d
  4098e8:	jne    0x40990a
  4098ea:	in     al,0xf0
  4098ec:	test   dl,bl
  4098ee:	jns    0x40996d
  4098f0:	adc    al,0x53
  4098f2:	(bad)  
  4098f4:	xchg   esp,eax
  4098f5:	nop
  4098f6:	jae    0x409933
  4098f8:	jl     0x40993a
  4098fa:	sub    dh,BYTE PTR [ecx-0x45adf7e6]
  409900:	out    0x5,eax
  409902:	pop    edx
  409903:	loopne 0x409965
  409905:	xor    eax,0xf824a4b4
  40990a:	cmp    eax,0x220dd69d
  40990f:	sub    DWORD PTR [edi],ecx
  409911:	rcl    BYTE PTR [eax-0x2d],1
  409914:	int3   
  409915:	cwde   
  409916:	shl    cl,0x96
  409919:	imul   esi,DWORD PTR [ebx-0x5],0xffffffdf
  40991d:	inc    ebx
  40991e:	jno    0x40997d
  409920:	mov    ch,0x47
  409922:	repnz mov edi,fs
  409925:	fs jl  0x409970
  409928:	sbb    al,0xfd
  40992a:	mov    ebp,0x39e7191d
  40992f:	mov    al,0xa9
  409931:	add    eax,0x33c6c31b
  409936:	pusha  
  409937:	push   ebx
  409938:	and    al,0xa8
  40993a:	xor    al,0x12
  40993c:	clc    
  40993d:	inc    eax
  40993e:	gs into 
  409940:	fldenv [eax]
  409942:	jmp    0x3bae:0x6104568
  409949:	mov    al,0xbf
  40994b:	xor    ah,ch
  40994d:	push   edi
  40994e:	jb     0x4098db
  409950:	imul   edi,DWORD PTR [esi+ebp*1],0xb741739a
  409957:	shr    DWORD PTR [edx-0xb],1
  40995a:	adc    ecx,DWORD PTR [eax-0x63]
  40995d:	iret   
  40995e:	int3   
  40995f:	or     al,dh
  409961:	ret    0x3a98
  409964:	pop    ebx
  409965:	sub    esi,DWORD PTR [edi+eiz*1]
  409968:	sub    bl,bh
  40996a:	xor    ebx,DWORD PTR [edi]
  40996c:	or     eax,0x7846afb4
  409971:	nop
  409972:	cmp    ah,dl
  409974:	sbb    ah,BYTE PTR [ecx]
  409976:	nop    DWORD PTR [eax+eax*4-0x6fa0df39]
  40997e:	outs   dx,BYTE PTR ds:[esi]
  40997f:	fst    st(1)
  409981:	jns    0x40991a
  409983:	mov    ah,BYTE PTR ds:0x30e76d7c
  409989:	cld    
  40998a:	jmp    0xa1288c0a
  40998f:	jmp    0x40993e
  409991:	es xchg edx,eax
  409993:	sbb    eax,0x8457d613
  409998:	cmp    eax,0xfc3ef1eb
  40999d:	mov    al,ds:0xa3e93df0
  4099a2:	pop    ecx
  4099a3:	dec    ecx
  4099a4:	sub    al,cl
  4099a6:	in     eax,0x14
  4099a8:	ret    0xd3fc
  4099ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ac:	nop
  4099ad:	push   edx
  4099ae:	xchg   edx,eax
  4099af:	pop    ss
  4099b0:	inc    edx
  4099b1:	xor    cl,bl
  4099b3:	fist   WORD PTR [esi+0x26fc3cbb]
  4099b9:	lea    ecx,[edi]
  4099bb:	mov    esp,0x4dfe66fb
  4099c0:	add    esi,edx
  4099c2:	inc    esi
  4099c3:	outs   dx,BYTE PTR ds:[esi]
  4099c5:	sub    al,0xd2
  4099c7:	or     esi,DWORD PTR [eax+0x71a78102]
  4099cd:	(bad)  
  4099ce:	pop    eax
  4099cf:	mov    al,ds:0x535571f1
  4099d4:	retf   0x5c7c
  4099d7:	(bad)  
  4099d8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4099da:	xchg   esi,eax
  4099db:	xor    ebx,DWORD PTR [edi-0x75]
  4099de:	aam    0x6b
  4099e0:	cmp    BYTE PTR [edx+eiz*8+0x607cf67f],dl
  4099e7:	call   0xc665:0x8d0275c7
  4099ee:	stos   DWORD PTR es:[edi],eax
  4099ef:	test   dl,dl
  4099f1:	add    al,0xa
  4099f3:	retf   
  4099f4:	sub    al,0x8f
  4099f6:	in     al,0x36
  4099f8:	pop    ebx
  4099f9:	sub    eax,0x2bce5b40
  4099fe:	int3   
  4099ff:	mov    esp,0x2799fbbf
  409a04:	mov    bl,0xe8
  409a06:	jmp    0x409a0f
  409a08:	jecxz  0x4099bb
  409a0a:	xchg   ebx,eax
  409a0b:	jecxz  0x409a65
  409a0d:	lods   eax,DWORD PTR ds:[esi]
  409a0e:	push   0x2b8e978a
  409a13:	mov    ecx,DWORD PTR [eax+0x73e98cb1]
  409a19:	int    0x74
  409a1b:	jno    0x409a20
  409a1d:	adc    DWORD PTR [ebx+0x28db4e72],ecx
  409a23:	nop
  409a24:	fist   WORD PTR [ecx-0x2d]
  409a27:	icebp  
  409a28:	rcr    BYTE PTR [ebx+0x664108aa],1
  409a2e:	sub    eax,0xbf3fb0b2
  409a33:	outs   dx,DWORD PTR ds:[esi]
  409a34:	daa    
  409a35:	jne    0x409a86
  409a37:	push   ecx
  409a38:	pop    es
  409a39:	pop    eax
  409a3a:	icebp  
  409a3b:	xor    eax,0x195ec573
  409a40:	mov    ebx,0x1dd3fd07
  409a45:	(bad)  [di]
  409a48:	inc    esp
  409a49:	je     0x409a77
  409a4b:	mov    edx,0xf367bbe2
  409a50:	xor    eax,0x39669bf9
  409a55:	cwde   
  409a56:	retf   
  409a57:	aad    0xd2
  409a59:	clc    
  409a5a:	ror    DWORD PTR [edi],0xd5
  409a5d:	std    
  409a5e:	inc    eax
  409a5f:	mov    eax,0x3645471c
  409a64:	dec    edx
  409a65:	jge    0x409abd
  409a67:	fdivr  QWORD PTR [edx+ebp*8-0x73]
  409a6b:	push   esp
  409a6c:	ficom  WORD PTR [esi+0x5e8cd6cd]
  409a72:	cli    
  409a73:	push   esp
  409a74:	mov    ebp,0x750976e9
  409a79:	(bad)  
  409a7b:	mov    cl,0xb7
  409a7d:	xchg   esp,eax
  409a7e:	fwait
  409a7f:	lods   al,BYTE PTR ds:[esi]
  409a80:	jns    0x409a1a
  409a82:	repz xor al,0x4f
  409a85:	jp     0x409a12
  409a87:	outs   dx,BYTE PTR ds:[esi]
  409a88:	bound  ecx,QWORD PTR [edi]
  409a8a:	sbb    edi,DWORD PTR [edx-0x5a8c7902]
  409a90:	pop    ebp
  409a91:	into   
  409a92:	cmp    BYTE PTR [ebx],0xb6
  409a95:	push   ebp
  409a96:	mov    edi,0x634e5a
  409a9b:	es fadd st(1),st
  409a9e:	sbb    al,0xd2
  409aa0:	jecxz  0x409aa9
  409aa2:	shr    BYTE PTR [edx-0x57],cl
  409aa5:	retf   0xacd
  409aa8:	pop    ebx
  409aa9:	out    0x11,eax
  409aab:	out    0xdf,eax
  409aad:	push   ecx
  409aae:	popa   
  409aaf:	mov    esi,0xf7aab7bb
  409ab4:	lahf   
  409ab5:	lds    ebp,FWORD PTR [ebp+0x63e46aec]
  409abb:	lods   eax,DWORD PTR ds:[esi]
  409abc:	add    DWORD PTR [ecx],esi
  409abe:	rcr    cl,1
  409ac0:	pop    edx
  409ac1:	sub    esp,esi
  409ac3:	inc    ecx
  409ac4:	(bad)  
  409ac5:	push   ecx
  409ac6:	add    ch,BYTE PTR [eax-0x538e3c2e]
  409acc:	inc    edi
  409acd:	out    0xf4,al
  409acf:	push   es
  409ad0:	enter  0xf406,0xf6
  409ad4:	push   edi
  409ad5:	aaa    
  409ad6:	imul   esi,DWORD PTR [edx-0x315bae8b],0xf671803b
  409ae0:	iret   
  409ae1:	fwait
  409ae2:	scas   al,BYTE PTR es:[edi]
  409ae3:	push   ecx
  409ae4:	xor    BYTE PTR [edi],0xca
  409ae7:	cmp    eax,DWORD PTR [edx+0x6350d560]
  409aed:	and    DWORD PTR [ebp-0x391d7cbc],edx
  409af3:	mov    bl,0x24
  409af5:	xchg   ebp,eax
  409af6:	pop    ds
  409af7:	in     eax,dx
  409af8:	and    dl,al
  409afa:	mov    esp,DWORD PTR [edi*1-0x19179903]
  409b01:	test   eax,0xaa7235fe
  409b06:	adc    edx,DWORD PTR [edi-0x60ef6317]
  409b0c:	mov    ebx,DWORD PTR ds:0x8e3ee764
  409b12:	inc    esi
  409b13:	push   ecx
  409b14:	jno    0x409b32
  409b16:	pusha  
  409b17:	xchg   esp,eax
  409b18:	ja     0x409b59
  409b1a:	jbe    0x409b06
  409b1c:	nop
  409b1d:	cmp    eax,0x7e2f9cf4
  409b22:	out    dx,eax
  409b23:	dec    esi
  409b24:	retf   0xa091
  409b27:	pop    edi
  409b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b29:	mov    eax,ds:0x8071de9b
  409b2e:	addr16 push ds
  409b30:	mov    ch,0x49
  409b32:	sahf   
  409b33:	lods   eax,DWORD PTR ds:[esi]
  409b34:	imul   DWORD PTR [ecx+0x8c0230f]
  409b3a:	pop    es
  409b3b:	scas   eax,DWORD PTR es:[edi]
  409b3c:	adc    BYTE PTR [edi-0x24a17ff9],bh
  409b42:	rol    DWORD PTR [edi],0x51
  409b45:	jbe    0x409b48
  409b47:	xchg   DWORD PTR [esi-0x324af2c3],eax
  409b4d:	pop    ds
  409b4e:	mov    esi,0x1424e8f3
  409b53:	sar    BYTE PTR [ebx+ecx*2],cl
  409b56:	mov    bl,0x98
  409b58:	xor    ecx,DWORD PTR ds:0xd9963057
  409b5e:	and    DWORD PTR [eax],ecx
  409b60:	fistp  QWORD PTR [ebx+0x562267ef]
  409b66:	dec    edx
  409b67:	mov    ds:0xf9688ad,al
  409b6c:	push   esp
  409b6d:	scas   eax,DWORD PTR es:[edi]
  409b6e:	pop    ebx
  409b6f:	and    eax,0x8cdeaf79
  409b74:	out    dx,eax
  409b75:	jmp    DWORD PTR [ebx+0x1]
  409b78:	cmp    BYTE PTR [edx+ecx*2],0x2f
  409b7c:	sbb    ah,BYTE PTR [ebp-0x3d334827]
  409b82:	jl     0x409bbd
  409b84:	daa    
  409b85:	jl     0x409bd2
  409b87:	pusha  
  409b88:	sub    ch,BYTE PTR [ebx+0x6e]
  409b8b:	jmp    0x6e4a:0x4813be78
  409b92:	mov    esp,0x3f163077
  409b97:	loope  0x409bcb
  409b99:	jmp    0xb96525fa
  409b9e:	push   es
  409b9f:	jle    0x409bbb
  409ba1:	adc    BYTE PTR [edx-0x6e],al
  409ba4:	xlat   BYTE PTR ds:[ebx]
  409ba5:	push   ebp
  409ba6:	popf   
  409ba7:	clc    
  409ba8:	pop    ebp
  409ba9:	mov    ds:0x9e836c2a,al
  409bae:	sub    eax,eax
  409bb0:	inc    ebp
  409bb1:	mov    ds:0xd73532c7,eax
  409bb6:	aas    
  409bb7:	push   0xa70848c7
  409bbc:	shr    dh,cl
  409bbe:	push   esi
  409bbf:	xor    BYTE PTR [ebp+0x597cf9dc],dl
  409bc5:	sahf   
  409bc6:	cli    
  409bc7:	push   eax
  409bc8:	jle    0x409c00
  409bca:	jmp    0xa065:0x88fdb0d5
  409bd1:	les    ebp,FWORD PTR [edi+0x3bea3890]
  409bd7:	pop    ss
  409bd8:	and    eax,0xb4cba891
  409bdd:	mov    eax,DWORD PTR cs:[eax+edi*8]
  409be1:	push   ebx
  409be2:	jmp    0x529f:0x51c8bb46
  409be9:	mov    eax,ds:0x836dab44
  409bee:	dec    edx
  409bef:	jmp    0x2b5bcd55
  409bf4:	xchg   DWORD PTR [ebp+0x49ae6bb7],ebp
  409bfa:	inc    eax
  409bfb:	cmc    
  409bfc:	pusha  
  409bfd:	mov    ds:0x94eb9a8c,al
  409c02:	or     dl,al
  409c04:	mov    ds:0x7741f0ac,al
  409c09:	mov    eax,0xc6f1fc0f
  409c0e:	sbb    ax,WORD PTR [esi-0x3b2c237b]
  409c15:	sti    
  409c16:	pop    ebp
  409c17:	xor    eax,0x92b006a9
  409c1c:	(bad)  
  409c1d:	lea    ecx,[ebp-0x4ddba219]
  409c23:	mov    ch,0xcb
  409c25:	sub    BYTE PTR [edi+0x48544fad],dh
  409c2b:	fxch   st(0)
  409c2d:	nop
  409c2e:	adc    al,0x2d
  409c30:	xor    ebx,DWORD PTR [ebp-0x5c]
  409c33:	pop    ecx
  409c34:	mov    ch,0x83
  409c36:	and    DWORD PTR [esi+0x6d],esi
  409c39:	popa   
  409c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c3b:	adc    al,0xf3
  409c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c3e:	in     al,dx
  409c3f:	sti    
  409c40:	push   es
  409c41:	xchg   ebx,eax
  409c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c43:	mov    al,0xf0
  409c45:	dec    ecx
  409c46:	mov    BYTE PTR ss:[eax+0x17],al
  409c4a:	aam    0x77
  409c4c:	(bad)  
  409c4d:	mov    ecx,0x1434cf87
  409c52:	les    esp,FWORD PTR [ebx-0xd]
  409c55:	test   ebp,edx
  409c57:	mov    ebp,0x10c2602a
  409c5c:	jp     0x409cd8
  409c5e:	adc    DWORD PTR [ecx],esp
  409c60:	mov    DWORD PTR [edi+0x44],0x622676a6
  409c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c68:	pop    ebp
  409c69:	cmc    
  409c6a:	mov    edx,ebx
  409c6c:	lock jmp 0x9af1b3c9
  409c72:	(bad)  
  409c73:	ds (bad) 
  409c75:	cmp    al,BYTE PTR [ebp+edx*4-0x177239cf]
  409c7c:	add    ebx,ebx
  409c7e:	push   cs
  409c7f:	mov    cl,0xe2
  409c81:	test   eax,0x1ad87394
  409c86:	cmp    DWORD PTR ds:0x40c2c18,0x57e9e66c
  409c90:	xor    cl,BYTE PTR [esp+ebx*2-0x3053892b]
  409c97:	aaa    
  409c98:	cmp    eax,0xc41e126b
  409c9d:	lea    esi,[ebp+0x68da39f3]
  409ca3:	out    dx,eax
  409ca4:	outs   dx,DWORD PTR ds:[esi]
  409ca5:	xchg   ebx,eax
  409ca6:	ret    0x135d
  409ca9:	pop    ebp
  409caa:	arpl   WORD PTR [edx-0x7a],bx
  409cad:	dec    ecx
  409cae:	adc    eax,DWORD PTR [edi+0x664e8cf7]
  409cb4:	in     eax,0x84
  409cb6:	iret   
  409cb7:	inc    edi
  409cb8:	(bad)  
  409cb9:	hlt    
  409cba:	xor    esi,DWORD PTR ds:0xa5727bfb
  409cc0:	pushf  
  409cc1:	jnp    0x409cbe
  409cc3:	xchg   ebp,edi
  409cc5:	push   ebp
  409cc6:	pop    eax
  409cc7:	sahf   
  409cc8:	call   0x1cde:0x9d5cbeef
  409ccf:	inc    edi
  409cd0:	lea    ebp,[edi-0x43]
  409cd3:	cli    
  409cd4:	daa    
  409cd5:	cmp    bh,BYTE PTR [ebp-0x35b318f2]
  409cdb:	das    
  409cdc:	push   0x66
  409cde:	outs   dx,BYTE PTR ds:[esi]
  409cdf:	jl     0x409d18
  409ce1:	fsubr  QWORD PTR [edx]
  409ce3:	or     al,0x7a
  409ce5:	push   eax
  409ce6:	xchg   ebp,eax
  409ce7:	out    0xb0,al
  409ce9:	(bad)  
  409cea:	cld    
  409ceb:	mov    ah,0x92
  409ced:	pop    ss
  409cee:	imul   esi,DWORD PTR [esi],0x2271c261
  409cf4:	xor    ah,dl
  409cf6:	jl     0x409c78
  409cf8:	xor    bh,BYTE PTR [ebp+0x59]
  409cfb:	rcr    BYTE PTR fs:[edi+eiz*2],cl
  409cff:	inc    esi
  409d00:	lea    esp,[edi+0x9]
  409d03:	jne    0x409cbc
  409d05:	or     ebx,DWORD PTR [ecx-0x73]
  409d08:	adc    bh,cl
  409d0a:	jge    0x409d5c
  409d0c:	hlt    
  409d0d:	test   DWORD PTR [eax],ecx
  409d0f:	pop    ecx
  409d10:	jnp    0x409c9e
  409d12:	ja     0x409d0a
  409d14:	pop    eax
  409d15:	mov    edi,0x6202383f
  409d1a:	ds arpl WORD PTR cs:[ebx],sp
  409d1e:	inc    ebx
  409d1f:	cld    
  409d20:	in     eax,dx
  409d21:	(bad)  
  409d22:	out    dx,eax
  409d23:	cli    
  409d24:	and    edi,DWORD PTR [edx-0x71]
  409d27:	mov    bh,0x6b
  409d29:	jnp    0x409cbb
  409d2b:	jp     0x409d9f
  409d2d:	xchg   ebx,eax
  409d2e:	ja     0x409d35
  409d30:	sub    al,bl
  409d32:	mov    edi,DWORD PTR [eax+eax*2+0x5c4d67f4]
  409d39:	repnz mov DWORD PTR [edx+0x29],edi
  409d3d:	bound  eax,QWORD PTR [ecx+0x5951cd0d]
  409d43:	mov    ecx,0xe51b4c10
  409d48:	mov    ebx,0x13d250bc
  409d4d:	inc    eax
  409d4e:	sub    dh,BYTE PTR [ebx-0xa071f5e]
  409d54:	mov    WORD PTR cs:[eax-0x30a55c01],?
  409d5b:	iret   
  409d5c:	add    BYTE PTR [ebx+0x4e],ah
  409d5f:	ret    
  409d60:	nop
  409d61:	aaa    
  409d62:	xlat   BYTE PTR ds:[ebx]
  409d63:	and    al,0xe6
  409d65:	xchg   esp,eax
  409d66:	mov    al,0x39
  409d68:	adc    DWORD PTR [edi],esi
  409d6a:	in     eax,0x30
  409d6c:	jae    0x409d91
  409d6e:	enter  0xeeb7,0x97
  409d72:	dec    ebx
  409d73:	loope  0x409da9
  409d75:	sub    dl,bl
  409d77:	es adc ah,BYTE PTR cs:[edx+0x25]
  409d7c:	jmp    0x7952:0xfa40175d
  409d83:	sub    dl,0xc0
  409d86:	pop    edi
  409d87:	push   cs
  409d88:	cwde   
  409d89:	or     DWORD PTR [edi],esi
  409d8b:	mov    ebp,DWORD PTR [edx+0x3ce06d6e]
  409d91:	mov    ds:0xf39b6f96,al
  409d96:	sbb    al,0xf9
  409d98:	out    0xea,eax
  409d9a:	and    BYTE PTR [esi-0x13be5c39],bh
  409da0:	test   al,0x19
  409da2:	pop    edi
  409da3:	mov    ecx,0x3e433a87
  409da8:	jmp    0x409e18
  409daa:	sub    ebp,DWORD PTR [ebx]
  409dac:	lahf   
  409dad:	jle    0x409dea
  409daf:	inc    edi
  409db0:	push   ebx
  409db1:	sti    
  409db2:	xchg   edx,eax
  409db3:	dec    edi
  409db4:	mov    DWORD PTR [ecx],eax
  409db6:	out    dx,al
  409db7:	ret    
  409db8:	stos   DWORD PTR es:[edi],eax
  409db9:	add    dl,BYTE PTR [ecx]
  409dbb:	jge    0x409d86
  409dbd:	jae    0x409e3e
  409dbf:	cli    
  409dc0:	mov    esp,0xa45f1971
  409dc5:	dec    ebp
  409dc6:	sub    eax,0x9c2502ef
  409dcb:	ds dec ecx
  409dcd:	js     0x409e4a
  409dcf:	or     al,0x7
  409dd1:	fcmovne st,st(1)
  409dd3:	pop    edx
  409dd4:	or     edx,DWORD PTR [esi+0x39]
  409dd7:	jmp    FWORD PTR ds:[edi+0x60]
  409ddb:	xor    edi,ebx
  409ddd:	sbb    DWORD PTR [ecx+0x25f5cd39],edi
  409de3:	arpl   WORD PTR [edi],bp
  409de5:	adc    eax,0x2f8b06ef
  409dea:	xchg   ecx,eax
  409deb:	fcmovu st,st(2)
  409ded:	mov    eax,ds:0x3614cba8
  409df2:	push   0xffffffdc
  409df4:	cli    
  409df5:	push   esp
  409df6:	lds    edi,FWORD PTR [ebx-0x3f347610]
  409dfc:	push   ecx
  409dfd:	inc    ecx
  409dfe:	xchg   ebx,eax
  409dff:	mov    DWORD PTR [eax-0x17],esi
  409e02:	adc    eax,0x3475eeaf
  409e07:	out    dx,eax
  409e08:	outs   dx,BYTE PTR ds:[esi]
  409e09:	stos   BYTE PTR es:[edi],al
  409e0a:	cld    
  409e0b:	add    BYTE PTR [edi+ebp*1],dl
  409e0e:	sbb    cl,BYTE PTR [edx+ebx*1]
  409e11:	cmp    ecx,DWORD PTR ds:0xb19fd433
  409e17:	ret    
  409e18:	out    dx,al
  409e19:	xchg   esi,eax
  409e1a:	xchg   esp,eax
  409e1b:	jp     0x409e88
  409e1d:	mov    ebx,DWORD PTR [ebx+0x50d3ce5]
  409e23:	xor    bh,ah
  409e25:	jae    0x409dea
  409e27:	mov    ds:0x48da4351,eax
  409e2c:	xchg   ecx,eax
  409e2d:	fbstp  TBYTE PTR [eax-0x49]
  409e30:	test   eax,0x9380fc58
  409e35:	dec    edx
  409e36:	add    DWORD PTR [ebx],edi
  409e38:	jmp    0x409dbf
  409e3a:	in     eax,0xa1
  409e3c:	adc    BYTE PTR [eax+0x40],0x79
  409e40:	ja     0x409e1a
  409e42:	or     ch,bl
  409e44:	mov    edx,0x7c90779e
  409e49:	dec    ecx
  409e4a:	les    eax,FWORD PTR [edi+0x1]
  409e4d:	pop    ecx
  409e4e:	out    0xc6,al
  409e50:	aam    0x60
  409e52:	jo     0x409ea5
  409e54:	mov    al,0x3c
  409e56:	scas   eax,DWORD PTR es:[edi]
  409e57:	jge    0x409dfc
  409e59:	push   ecx
  409e5a:	loopne 0x409e60
  409e5c:	inc    esp
  409e5d:	push   cs
  409e5e:	not    DWORD PTR [esi+eax*2-0x430f20e4]
  409e65:	fdivr  DWORD PTR ds:0xb18d276
  409e6b:	imul   edi,DWORD PTR [ebx],0x5fcdf283
  409e71:	popa   
  409e72:	mov    esp,0x5f619a27
  409e77:	std    
  409e78:	inc    ebx
  409e79:	cli    
  409e7a:	cdq    
  409e7b:	jge    0x409ec7
  409e7d:	cmp    esi,DWORD PTR [ecx]
  409e7f:	in     al,0x38
  409e81:	pop    edx
  409e82:	adc    al,0xdf
  409e84:	retf   
  409e85:	outs   dx,DWORD PTR ds:[esi]
  409e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e87:	call   0xadffab89
  409e8c:	adc    eax,DWORD PTR [esi]
  409e8e:	les    esi,FWORD PTR [esp+ecx*2]
  409e91:	cld    
  409e92:	push   0xffffffb0
  409e94:	ret    
  409e95:	and    al,0xba
  409e97:	sub    ebp,ebx
  409e99:	inc    ebp
  409e9a:	jmp    0x70826845
  409e9f:	(bad)  
  409ea0:	clc    
  409ea1:	ja     0x409f01
  409ea3:	jle    0x409e7a
  409ea5:	sub    DWORD PTR [edx-0x4a416493],0x7a726e53
  409eaf:	inc    ebx
  409eb0:	and    eax,0x7a8ce360
  409eb5:	cwde   
  409eb6:	jae    0x409eb9
  409eb8:	add    ecx,ecx
  409eba:	sbb    ch,BYTE PTR [esi+0x35]
  409ebd:	xor    al,0x13
  409ebf:	ja     0x409e83
  409ec1:	add    dh,BYTE PTR [ebx+esi*8]
  409ec4:	xlat   BYTE PTR ds:[ebx]
  409ec5:	rol    cl,cl
  409ec7:	clc    
  409ec8:	adc    bh,ch
  409eca:	stos   BYTE PTR es:[edi],al
  409ecb:	pop    ds
  409ecc:	sub    al,0x25
  409ece:	xchg   ebx,eax
  409ecf:	ficomp WORD PTR [eax-0x6e]
  409ed2:	xor    cl,dh
  409ed4:	aam    0x4c
  409ed6:	imul   esp,DWORD PTR ds:0xc76de5e5,0xf11b20e3
  409ee0:	jmp    0xcf3a:0x9a2e4c0c
  409ee7:	mov    WORD PTR [eax+0x2dedea7b],gs
  409eed:	cmc    
  409eee:	sbb    DWORD PTR [ecx+0xd],esi
  409ef1:	sbb    al,0xae
  409ef3:	inc    ebx
  409ef4:	sub    ah,BYTE PTR [esp+ebp*4-0x5c50c7b7]
  409efb:	imul   esi,ebx,0xffffff8c
  409efe:	mov    dl,0x18
  409f00:	mov    ds:0xec2129d9,al
  409f05:	cli    
  409f06:	adc    ah,BYTE PTR [ebx+0x2644dd7c]
  409f0c:	and    ecx,DWORD PTR [ecx]
  409f0e:	mov    cl,0xff
  409f10:	es push es
  409f12:	sbb    BYTE PTR [esp+ebp*4+0x42],0x98
  409f17:	out    dx,eax
  409f18:	add    ebx,DWORD PTR [edx-0x24]
  409f1b:	mov    esp,0xe37bd395
  409f20:	pusha  
  409f21:	lea    esp,[ebp-0x7b]
  409f24:	cwde   
  409f25:	stc    
  409f26:	xor    eax,0xb3f8cb2c
  409f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f2c:	inc    ebx
  409f2d:	jg     0x409f44
  409f2f:	pop    edi
  409f30:	inc    edi
  409f31:	nop
  409f32:	push   edx
  409f33:	pop    eax
  409f34:	add    eax,0x311f76b5
  409f39:	jns    0x409eed
  409f3b:	inc    eax
  409f3c:	mul    BYTE PTR [ecx+0x1f22ae15]
  409f42:	mov    ebp,0x4da11dae
  409f47:	cmp    BYTE PTR [ebp-0x31],ah
  409f4a:	jl     0x409f71
  409f4c:	call   0x71e9:0x448ec32b
  409f53:	dec    ebp
  409f54:	or     al,BYTE PTR [ebp+0x2c1a40e3]
  409f5a:	inc    edi
  409f5b:	adc    BYTE PTR [ecx-0xe7a7581],dl
  409f61:	sub    al,0x9d
  409f63:	mov    ah,0x7b
  409f65:	mov    bh,0x2b
  409f67:	cwde   
  409f68:	and    esi,DWORD PTR ds:0xf42c55e4
  409f6e:	repz xchg esi,eax
  409f70:	jle    0x409fbc
  409f72:	xchg   edi,eax
  409f73:	sbb    edx,edi
  409f75:	lods   eax,DWORD PTR ds:[esi]
  409f76:	mov    cl,0x96
  409f78:	push   esi
  409f79:	sbb    eax,DWORD PTR [ebp-0x63fd07ad]
  409f7f:	test   BYTE PTR [eax],ah
  409f81:	mov    eax,DWORD PTR [eax+0x198]
  409f87:	and    DWORD PTR ds:0x429008,0x0
  409f91:	xor    edx,edx
  409f93:	add    edx,DWORD PTR ds:0x429008
  409f99:	inc    edx
  409f9a:	mov    DWORD PTR ds:0x429008,edx
  409fa0:	cmp    DWORD PTR ds:0x429008,0x11
  409fa7:	jne    0x409fe0
  409fad:	push   DWORD PTR [ebp-0x28]
  409fb0:	push   DWORD PTR [ebp-0xc]
  409fb3:	push   0x130f
  409fb8:	push   0x751a
  409fbd:	push   0x8a1e
  409fc2:	push   0x2320
  409fc7:	push   DWORD PTR [ebp-0x24]
  409fca:	push   0x206d
  409fcf:	push   DWORD PTR [ebp-0xc]
  409fd2:	push   DWORD PTR [ebp-0x20]
  409fd5:	push   0x5142
  409fda:	call   DWORD PTR ds:0x42e8db
  409fe0:	cmp    DWORD PTR ds:0x429008,0x10
  409fe7:	jne    0x409ffa
  409fed:	mov    edx,DWORD PTR ds:0x429008
  409ff3:	inc    edx
  409ff4:	mov    DWORD PTR ds:0x429008,edx
  409ffa:	cmp    DWORD PTR ds:0x429008,0x1e
  40a001:	jb     0x409f91
  40a007:	xor    edi,ecx
  40a009:	add    DWORD PTR ds:0x42d000,ebx
  40a00f:	mov    edx,0x3272e2
  40a014:	mov    DWORD PTR ds:0x42c010,0x65c3
  40a01e:	add    edi,edx
  40a020:	cmp    DWORD PTR [eax],edi
  40a022:	mov    DWORD PTR ds:0x42a00c,0xde
  40a02c:	je     0x40a043
  40a032:	mov    eax,DWORD PTR [eax]
  40a034:	mov    DWORD PTR ds:0x42c004,0x3704
  40a03e:	jmp    0x40ea3f
  40a043:	mov    eax,ds:0x42b010
  40a048:	mov    eax,DWORD PTR [ebp+0x18]
  40a04b:	cmp    eax,esi
  40a04d:	mov    DWORD PTR ds:0x42a00c,0x4db6
  40a057:	jne    0x40a071
  40a05d:	mov    DWORD PTR ds:0x42c008,0x3d03
  40a067:	push   0xf89c8584
  40a06c:	jmp    0x40ea2e
  40a071:	mov    esi,DWORD PTR [ebp+0x18]
  40a074:	mov    eax,0xf89c85bb
  40a079:	cmp    esi,eax
  40a07b:	mov    DWORD PTR ds:0x42b008,0x1a7e
  40a085:	jne    0x40ea1e
  40a08b:	sbb    eax,esi
  40a08d:	mov    eax,DWORD PTR [ebp+0x10]
  40a090:	and    DWORD PTR ds:0x42c010,0x0
  40a09a:	mov    esi,DWORD PTR ds:0x42c010
  40a0a0:	inc    esi
  40a0a1:	mov    DWORD PTR ds:0x42c010,esi
  40a0a7:	cmp    DWORD PTR ds:0x42c010,0x1f
  40a0ae:	jne    0x40a0cf
  40a0b4:	push   0x2683
  40a0b9:	push   DWORD PTR [ebp-0x20]
  40a0bc:	push   0x3e9b
  40a0c1:	push   DWORD PTR [ebp-0x20]
  40a0c4:	push   0x63df
  40a0c9:	call   DWORD PTR ds:0x42e8df
  40a0cf:	cmp    DWORD PTR ds:0x42c010,0x13
  40a0d6:	jb     0x40a09a
  40a0dc:	mov    DWORD PTR ds:0x42c008,0x14
  40a0e6:	cmp    DWORD PTR ds:0x42c008,0x0
  40a0ed:	je     0x40a126
  40a0f3:	cmp    DWORD PTR ds:0x42c008,0x1c
  40a0fa:	jne    0x40a106
  40a100:	call   DWORD PTR ds:0x42e91b
  40a106:	xor    esi,esi
  40a108:	xor    esi,DWORD PTR ds:0x42c008
  40a10e:	dec    esi
  40a10f:	mov    DWORD PTR ds:0x42c008,esi
  40a115:	jmp    0x40a0e6
  40a11a:	mov    esi,DWORD PTR ds:0x42901c
  40a120:	or     DWORD PTR ds:0x429020,esi
  40a126:	xor    eax,ecx
  40a128:	and    esi,DWORD PTR ds:0x42c018
  40a12e:	add    eax,edx
  40a130:	and    DWORD PTR ds:0x42c004,0x0
  40a13a:	xor    esi,esi
  40a13c:	add    esi,DWORD PTR ds:0x42c004
  40a142:	inc    esi
  40a143:	mov    DWORD PTR ds:0x42c004,esi
  40a149:	cmp    DWORD PTR ds:0x42c004,0xd
  40a150:	jne    0x40a164
  40a156:	push   0x6b46
  40a15b:	push   DWORD PTR [ebp-0x10]
  40a15e:	call   DWORD PTR ds:0x42e91f
  40a164:	cmp    DWORD PTR ds:0x42c004,0xc
  40a16b:	jne    0x40a180
  40a171:	xor    esi,esi
  40a173:	xor    esi,DWORD PTR ds:0x42c004
  40a179:	inc    esi
  40a17a:	mov    DWORD PTR ds:0x42c004,esi
  40a180:	cmp    DWORD PTR ds:0x42c004,0x1b
  40a187:	jb     0x40a13a
  40a18d:	xor    esi,esi
  40a18f:	xor    esi,DWORD PTR ds:0x42c010
  40a195:	or     esi,DWORD PTR ds:0x429000
  40a19b:	mov    DWORD PTR ds:0x42c010,esi
  40a1a1:	mov    DWORD PTR [ebp-0x18],eax
  40a1a4:	mov    eax,DWORD PTR [ebp+0xc]
  40a1a7:	mov    esi,DWORD PTR [ebp-0x8]
  40a1aa:	xor    eax,ecx
  40a1ac:	add    eax,edx
  40a1ae:	mov    DWORD PTR ds:0x429018,0x1094
  40a1b8:	imul   eax,DWORD PTR [esi]
  40a1bb:	and    DWORD PTR ds:0x42900c,0x0
  40a1c5:	mov    esi,DWORD PTR ds:0x42900c
  40a1cb:	inc    esi
  40a1cc:	mov    DWORD PTR ds:0x42900c,esi
  40a1d2:	cmp    DWORD PTR ds:0x42900c,0x1f
  40a1d9:	jne    0x40a1e8
  40a1df:	push   DWORD PTR [ebp-0x10]
  40a1e2:	call   DWORD PTR ds:0x42e8b7
  40a1e8:	cmp    DWORD PTR ds:0x42900c,0x1d
  40a1ef:	jb     0x40a1c5
  40a1f5:	mov    esi,DWORD PTR [ebp+0x8]
  40a1f8:	xor    esi,ecx
  40a1fa:	add    esi,edx
  40a1fc:	cmp    esi,eax
  40a1fe:	mov    eax,DWORD PTR [ebp-0x4]
  40a201:	push   ebx
  40a202:	je     0x40a221
  40a208:	mov    esi,DWORD PTR [ebp-0x18]
  40a20b:	add    DWORD PTR [eax],esi
  40a20d:	mov    eax,DWORD PTR [ebp-0x4]
  40a210:	mov    esi,DWORD PTR [ebp+0xc]
  40a213:	xor    esi,ecx
  40a215:	add    esi,edx
  40a217:	imul   esi,DWORD PTR [eax]
  40a21a:	mov    DWORD PTR [eax],esi
  40a21c:	jmp    0x40a226
  40a221:	mov    esi,DWORD PTR [ebp+0x14]
  40a224:	xor    DWORD PTR [eax],esi
  40a226:	mov    eax,DWORD PTR [ebp-0x4]
  40a229:	mov    edi,DWORD PTR [ebp+0x10]
  40a22c:	xor    edi,ecx
  40a22e:	mov    esi,0xffcd8d1e
  40a233:	mov    ebx,esi
  40a235:	sub    ebx,edi
  40a237:	add    DWORD PTR [eax],ebx
  40a239:	mov    eax,DWORD PTR [ebp-0x4]
  40a23c:	mov    edi,DWORD PTR [ebp-0x8]
  40a23f:	jmp    0x40c58e
  40a244:	pusha  
  40a245:	sub    DWORD PTR [ebx-0x11],eax
  40a248:	repz ja 0x40a1fb
  40a24b:	xchg   ebx,eax
  40a24c:	cli    
  40a24d:	adc    bl,ah
  40a24f:	je     0x40a227
  40a251:	dec    esi
  40a252:	dec    edx
  40a253:	cwde   
  40a254:	rol    BYTE PTR ds:0x5f4e7c7c,1
  40a25a:	jl     0x40a2d8
  40a25c:	mov    esi,0x42a618b0
  40a261:	mov    dh,0xc2
  40a263:	jge    0x40a292
  40a265:	sbb    DWORD PTR [esi-0xe],0xeebfa40e
  40a26c:	pop    eax
  40a26d:	cli    
  40a26e:	mov    DWORD PTR [edi-0x5d],edi
  40a271:	cmp    al,0xa4
  40a273:	add    edi,ebx
  40a275:	add    DWORD PTR ds:0xde0cc16,esp
  40a27b:	repz mov ds:0x53efb0e9,eax
  40a281:	(bad)  
  40a282:	push   eax
  40a283:	xor    eax,0x44303235
  40a288:	fsubr  QWORD PTR [esi+edi*8-0x1aa27d31]
  40a28f:	jge    0x40a212
  40a291:	mov    ebp,0x4c7f406a
  40a296:	std    
  40a297:	mov    ebx,0x9421b773
  40a29c:	sub    bl,dl
  40a29e:	jp     0x40a24a
  40a2a0:	fwait
  40a2a1:	sbb    BYTE PTR [esi],cl
  40a2a3:	cld    
  40a2a4:	jmp    0xa71b:0x12725479
  40a2ab:	test   al,0xbb
  40a2ad:	mov    dh,0x15
  40a2af:	sub    BYTE PTR [ebx-0x2786ad6f],cl
  40a2b5:	mov    eax,0xeb859c73
  40a2ba:	pop    es
  40a2bb:	cmp    esp,esi
  40a2bd:	jns    0x40a316
  40a2bf:	jbe    0x40a256
  40a2c1:	jl     0x40a266
  40a2c3:	push   cs
  40a2c4:	das    
  40a2c5:	pop    esp
  40a2c6:	or     al,0x19
  40a2c8:	(bad)  
  40a2c9:	cmp    eax,0x8067a9e2
  40a2ce:	aam    0x26
  40a2d0:	sub    dl,BYTE PTR [edx]
  40a2d2:	int    0x35
  40a2d4:	adc    DWORD PTR [ebp-0x46],0xa2e14aab
  40a2db:	mov    edi,0x8a75fcaa
  40a2e0:	push   edi
  40a2e1:	dec    ebx
  40a2e2:	fsubr  st(4),st
  40a2e4:	mov    ah,0x7b
  40a2e6:	mov    edi,0x9be317fc
  40a2eb:	gs sub eax,0x5fd9bd96
  40a2f1:	cs sub al,0x2e
  40a2f4:	jle    0x40a29c
  40a2f6:	test   al,0x5a
  40a2f8:	int    0xee
  40a2fa:	mov    ebp,fs
  40a2fc:	sub    bh,BYTE PTR [ebp+eiz*4+0x3fc1c2d9]
  40a303:	rol    BYTE PTR [ebx],cl
  40a305:	ja     0x40a357
  40a307:	jg     0x40a371
  40a309:	adc    ecx,DWORD PTR [ebx]
  40a30b:	sti    
  40a30c:	das    
  40a30d:	cmp    BYTE PTR [ecx-0x3a],bl
  40a310:	mov    ah,0xa9
  40a312:	retf   0x59e1
  40a315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a316:	shl    DWORD PTR [esp+eiz*2-0x62],cl
  40a31a:	addr16 sub dl,dh
  40a31d:	das    
  40a31e:	ds xchg ecx,eax
  40a320:	jecxz  0x40a2d6
  40a322:	and    ebx,DWORD PTR [ecx+edi*1-0x55]
  40a326:	ret    0x80ca
  40a329:	xor    DWORD PTR [ecx],edx
  40a32b:	dec    eax
  40a32c:	mov    bl,0x47
  40a32e:	sbb    al,0x51
  40a330:	mov    ds:0xfeb0657d,al
  40a335:	scas   al,BYTE PTR es:[edi]
  40a336:	lds    ebp,FWORD PTR [edi+0xe]
  40a339:	cld    
  40a33a:	mov    al,0x42
  40a33c:	test   BYTE PTR [ecx],ah
  40a33e:	ret    
  40a33f:	mov    BYTE PTR [ecx+0x56],0xda
  40a343:	ret    0xf156
  40a346:	xchg   edi,eax
  40a347:	stos   DWORD PTR es:[edi],eax
  40a348:	pop    es
  40a349:	mov    ebx,0x1acac2ab
  40a34e:	mov    eax,ds:0x84c97f91
  40a353:	jnp    0x40a30e
  40a355:	sbb    DWORD PTR [ebx],eax
  40a357:	xchg   ebx,eax
  40a358:	jmp    0x40a36c
  40a35a:	shl    BYTE PTR [edx-0x20d4b1ac],0xf8
  40a361:	mov    ch,BYTE PTR [esi+ebp*2+0x0]
  40a365:	push   ecx
  40a366:	cmp    DWORD PTR [edx-0x55],esi
  40a369:	or     ebp,DWORD PTR [ebx+esi*8]
  40a36c:	(bad)  
  40a36d:	cs fcmovbe st,st(3)
  40a370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a371:	or     al,bl
  40a373:	adc    dh,BYTE PTR [edi+0x0]
  40a376:	adc    al,0x90
  40a378:	jecxz  0x40a30b
  40a37a:	retf   0xc656
  40a37d:	xchg   ebx,eax
  40a37e:	mov    ecx,0x84b45d5b
  40a383:	jge    0x40a3fb
  40a385:	xor    eax,0x2bc60dc
  40a38a:	por    mm2,QWORD PTR [ecx]
  40a38d:	bound  eax,QWORD PTR [esi-0x4bcd7c42]
  40a393:	cwde   
  40a394:	in     al,dx
  40a395:	add    ebx,esi
  40a397:	inc    esp
  40a398:	pushf  
  40a399:	scas   eax,DWORD PTR es:[edi]
  40a39a:	sar    DWORD PTR [ecx+0x4360a3da],cl
  40a3a0:	daa    
  40a3a1:	(bad)  
  40a3a2:	pop    es
  40a3a3:	arpl   WORD PTR cs:[bx+di+0x21],bx
  40a3a8:	mov    ds:0x413d0793,eax
  40a3ad:	je     0x40a407
  40a3af:	stos   BYTE PTR es:[edi],al
  40a3b0:	ja     0x40a3d9
  40a3b2:	jge    0x40a380
  40a3b4:	out    0xcb,eax
  40a3b6:	adc    eax,0x340926b
  40a3bb:	mov    ds:0xc51a086,al
  40a3c0:	int3   
  40a3c1:	and    dl,BYTE PTR [eax+0x3a]
  40a3c4:	inc    esp
  40a3c5:	inc    edx
  40a3c6:	ins    DWORD PTR es:[edi],dx
  40a3c7:	cld    
  40a3c8:	add    al,al
  40a3ca:	add    DWORD PTR ds:0xa0a1c498,esi
  40a3d0:	mov    ds:0xd0adbfef,eax
  40a3d5:	jmp    0x7352a73a
  40a3da:	daa    
  40a3db:	mov    ch,0x49
  40a3dd:	and    BYTE PTR ds:0x57b85023,ch
  40a3e3:	into   
  40a3e4:	ins    BYTE PTR es:[edi],dx
  40a3e5:	dec    ebp
  40a3e6:	inc    esp
  40a3e7:	push   ss
  40a3e8:	add    DWORD PTR [ebx],edx
  40a3ea:	push   ebp
  40a3eb:	or     al,0x7c
  40a3ed:	add    BYTE PTR [ecx],al
  40a3ef:	test   al,0x2f
  40a3f1:	pop    esp
  40a3f2:	jns    0x40a42c
  40a3f4:	mul    ch
  40a3f6:	int3   
  40a3f7:	push   0x4d371037
  40a3fc:	pop    ds
  40a3fd:	shl    DWORD PTR [ecx-0x23],0x65
  40a401:	pusha  
  40a402:	pusha  
  40a403:	aad    0xac
  40a405:	ja     0x40a397
  40a407:	xor    BYTE PTR [ebx],0xd2
  40a40a:	xchg   esi,eax
  40a40b:	cmp    ah,al
  40a40d:	inc    eax
  40a40e:	dec    edx
  40a40f:	(bad)  
  40a410:	imul   esp,DWORD PTR [ecx-0x30],0x7fe075eb
  40a417:	sbb    DWORD PTR [esi+0x51b246a2],0x63
  40a41e:	jge    0x40a420
  40a420:	lahf   
  40a421:	cmp    ecx,DWORD PTR [ecx-0x3e]
  40a424:	stos   DWORD PTR es:[edi],eax
  40a425:	pop    ecx
  40a426:	jns    0x40a3db
  40a428:	jns    0x40a3ef
  40a42a:	lahf   
  40a42b:	sbb    al,0xc7
  40a42d:	popa   
  40a42e:	add    DWORD PTR [edi],eax
  40a430:	dec    esi
  40a431:	fcomp  QWORD PTR [eax-0x7344f091]
  40a437:	push   0x5c164ac0
  40a43c:	lods   al,BYTE PTR cs:[esi]
  40a43e:	retf   0xae6e
  40a441:	(bad)  
  40a443:	xchg   ecx,eax
  40a444:	lds    eax,FWORD PTR [ecx-0x4b]
  40a447:	scas   al,BYTE PTR es:[edi]
  40a448:	loope  0x40a4ba
  40a44a:	pushf  
  40a44b:	outs   dx,BYTE PTR ds:[esi]
  40a44c:	lock sbb al,BYTE PTR [ebp+0x6f18e69c]
  40a453:	sub    al,ah
  40a455:	mov    ch,0xed
  40a457:	xchg   ebp,eax
  40a458:	and    esp,edi
  40a45a:	out    dx,eax
  40a45b:	dec    edi
  40a45c:	cmp    BYTE PTR [eax+0x5a16d99a],cl
  40a462:	inc    eax
  40a463:	arpl   WORD PTR [edx],bx
  40a465:	inc    ebp
  40a466:	sbb    eax,0x48673898
  40a46b:	xchg   BYTE PTR [esp+ebx*1-0x2c5cbf40],ch
  40a472:	loopne 0x40a4aa
  40a474:	sbb    dh,ch
  40a476:	mov    edi,ebp
  40a478:	in     eax,0xd3
  40a47a:	jnp    0x40a4a5
  40a47c:	pop    edx
  40a47d:	pushf  
  40a47e:	xchg   esi,eax
  40a47f:	data16 (bad) 
  40a481:	jmp    FWORD PTR [edi-0xcd5efa]
  40a487:	int    0x4f
  40a489:	stos   BYTE PTR es:[edi],al
  40a48a:	ds jb  0x40a456
  40a48d:	sub    al,BYTE PTR [ecx+0x78]
  40a490:	push   esp
  40a491:	sub    DWORD PTR [eax-0x39],esi
  40a494:	out    0x3a,al
  40a496:	mov    ds:0x20719a94,al
  40a49b:	out    0x81,eax
  40a49d:	ja     0x40a4d1
  40a49f:	jo     0x40a4cc
  40a4a1:	jmp    FWORD PTR [ecx+0x7b0c3ea1]
  40a4a7:	mov    WORD PTR [esi],?
  40a4a9:	sahf   
  40a4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4ab:	jl     0x40a4d2
  40a4ad:	aas    
  40a4ae:	ja     0x40a4ee
  40a4b0:	or     eax,0x5097bd60
  40a4b5:	in     al,dx
  40a4b6:	mov    al,ds:0x9d35e5f9
  40a4bb:	mov    fs,esp
  40a4bd:	in     al,dx
  40a4be:	and    al,0x30
  40a4c0:	xlat   BYTE PTR ds:[ebx]
  40a4c1:	into   
  40a4c2:	addr16 push ss
  40a4c4:	(bad)  
  40a4c5:	jp     0x40a4b3
  40a4c7:	popa   
  40a4c8:	fwait
  40a4c9:	mov    ebp,0x2856d93c
  40a4ce:	and    esi,ecx
  40a4d0:	mov    ebp,0xbdb215df
  40a4d5:	jb     0x40a4c8
  40a4d7:	cmp    al,0xdd
  40a4d9:	mov    ch,0xbd
  40a4db:	ss fcmovne st,st(1)
  40a4de:	test   al,0xd2
  40a4e0:	out    0x8a,eax
  40a4e2:	call   0xfea8:0xfb98247a
  40a4e9:	xchg   ebx,eax
  40a4ea:	inc    ebx
  40a4eb:	inc    DWORD PTR [edx+0x50209d4a]
  40a4f1:	loope  0x40a50a
  40a4f3:	cmp    BYTE PTR [esi-0x41c002a5],bh
  40a4f9:	push   ebp
  40a4fa:	push   ds
  40a4fb:	jmp    0xaf60:0x5f8a38e9
  40a502:	ret    0x19cc
  40a505:	and    dh,ah
  40a507:	aas    
  40a508:	pop    ds
  40a509:	lock in eax,dx
  40a50b:	and    bl,dl
  40a50d:	mov    ecx,?
  40a50f:	addr16 in al,dx
  40a511:	sar    esi,cl
  40a513:	push   ebp
  40a514:	cmp    DWORD PTR [edx+0x2c7f895b],edi
  40a51a:	sbb    eax,0x8da807c3
  40a51f:	loop   0x40a573
  40a521:	or     eax,0x4ef6d62c
  40a526:	dec    ebx
  40a527:	or     DWORD PTR [eax+0x4b],0xfffffffb
  40a52b:	inc    esp
  40a52c:	jg     0x40a575
  40a52e:	cmp    al,0xdd
  40a530:	jb     0x40a582
  40a532:	mov    ah,0xcb
  40a534:	adc    eax,0x77ba3f41
  40a539:	fldenv ds:0x27ccabfc
  40a53f:	mov    al,ds:0x76e2478d
  40a544:	es jne 0x40a4f6
  40a547:	sahf   
  40a548:	test   BYTE PTR [esi],ah
  40a54a:	xor    al,0x6b
  40a54c:	mov    WORD PTR [ebp+0x3d1d246f],es
  40a552:	cmp    DWORD PTR [eax],ebx
  40a554:	frstor [eax+esi*8-0x74a30975]
  40a55b:	mov    ah,0xc1
  40a55d:	std    
  40a55e:	cdq    
  40a55f:	rcr    ebp,cl
  40a561:	xor    BYTE PTR ds:0x189c5e08,bh
  40a567:	cwde   
  40a568:	xchg   ecx,eax
  40a569:	xchg   esp,eax
  40a56a:	push   edi
  40a56b:	enter  0xbf82,0xc1
  40a56f:	out    0xe4,eax
  40a571:	jnp    0x40a5cd
  40a573:	inc    edi
  40a574:	fs add dh,dh
  40a577:	in     eax,dx
  40a578:	inc    ebp
  40a579:	xchg   edi,eax
  40a57a:	cmp    eax,0x1012446b
  40a57f:	mov    edx,0xda6465f7
  40a584:	pop    ds
  40a585:	(bad)  
  40a586:	pop    ebx
  40a587:	bound  esp,QWORD PTR [ebp+0x3c]
  40a58a:	icebp  
  40a58b:	cwde   
  40a58c:	mov    ebp,0xce89bd34
  40a591:	sub    ecx,0x48
  40a594:	add    eax,0x88214342
  40a599:	xor    al,0xa2
  40a59b:	in     al,0x35
  40a59d:	ins    BYTE PTR es:[edi],dx
  40a59e:	daa    
  40a59f:	stos   DWORD PTR es:[di],eax
  40a5a1:	inc    edx
  40a5a2:	pop    ds
  40a5a3:	mov    ebp,0xef78cbc2
  40a5a8:	sub    eax,DWORD PTR [ecx]
  40a5aa:	les    esi,FWORD PTR [ebx+0x61]
  40a5ad:	xchg   esi,eax
  40a5ae:	enter  0x7618,0x7
  40a5b2:	call   FWORD PTR [ebx]
  40a5b4:	push   ecx
  40a5b5:	xor    edi,edx
  40a5b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b8:	inc    ebx
  40a5b9:	inc    ebp
  40a5ba:	or     DWORD PTR [ecx],ecx
  40a5bc:	idiv   BYTE PTR [ebp+0x11]
  40a5bf:	es (bad) 
  40a5c1:	mov    cl,0xca
  40a5c3:	mov    edi,0x97eb00a
  40a5c8:	(bad)  
  40a5c9:	pop    ebp
  40a5ca:	jno    0x40a5b5
  40a5cc:	push   0xb6a5c1cc
  40a5d1:	ja     0x40a5f9
  40a5d3:	pop    ebx
  40a5d4:	mov    eax,0xb236aaaf
  40a5d9:	sub    BYTE PTR [ebp+0x6a4a3dbc],0x56
  40a5e0:	and    DWORD PTR [ecx-0x6c],edi
  40a5e3:	jno    0x40a5ae
  40a5e5:	pop    edx
  40a5e6:	push   esp
  40a5e7:	scas   al,BYTE PTR es:[edi]
  40a5e8:	shl    DWORD PTR [ecx],1
  40a5ea:	jne    0x40a601
  40a5ec:	sub    eax,0x62ec61f1
  40a5f1:	int    0xd9
  40a5f3:	hlt    
  40a5f4:	push   0x26
  40a5f6:	xor    dh,0x96
  40a5f9:	jns    0x40a65d
  40a5fb:	(bad)  [eax-0x1c]
  40a5fe:	jno    0x40a652
  40a600:	jne    0x40a656
  40a602:	and    DWORD PTR [ebx],ebp
  40a604:	cmp    edi,ebx
  40a606:	out    dx,eax
  40a607:	(bad)  
  40a608:	addr16 cdq 
  40a60a:	push   esp
  40a60b:	sub    DWORD PTR [edx],ebp
  40a60d:	mov    dh,bh
  40a60f:	and    eax,0x52e81df4
  40a614:	out    dx,al
  40a615:	sub    DWORD PTR [ebx-0x598b8b68],esi
  40a61b:	pop    ebx
  40a61c:	nop
  40a61d:	aam    0xe0
  40a61f:	adc    ah,dh
  40a621:	pop    ebx
  40a622:	call   DWORD PTR cs:[eax+edi*2]
  40a626:	lds    ebx,FWORD PTR [edi]
  40a628:	int3   
  40a629:	retf   0x7e0f
  40a62c:	retf   
  40a62d:	adc    al,0x96
  40a62f:	mov    bh,0x91
  40a631:	data16 outs dx,BYTE PTR ds:[esi]
  40a633:	push   ss
  40a634:	inc    esp
  40a635:	dec    ebx
  40a636:	out    0x43,al
  40a638:	jecxz  0x40a62b
  40a63a:	or     al,0x40
  40a63c:	mov    dl,0xf5
  40a63e:	mov    ds:0x76b68e07,al
  40a643:	cmp    DWORD PTR [eax],0x46
  40a646:	out    0xfd,al
  40a648:	and    esi,ebp
  40a64a:	lea    ecx,[eax-0x7]
  40a64d:	(bad)  
  40a64e:	lds    edx,FWORD PTR [ecx-0x61b8c0de]
  40a654:	sbb    eax,DWORD PTR [edi+edx*2+0xd4c19d0]
  40a65b:	jne    0x40a6b9
  40a65d:	not    DWORD PTR [di-0x64]
  40a661:	iret   
  40a662:	mov    dl,0x5f
  40a664:	add    eax,ecx
  40a666:	call   FWORD PTR [ebx-0x10a04e4]
  40a66c:	mov    bl,0xa
  40a66e:	je     0x40a6de
  40a670:	push   eax
  40a671:	mov    ds:0x4ac80b97,al
  40a676:	add    eax,0xcea0849f
  40a67b:	push   es
  40a67c:	leave  
  40a67d:	outs   dx,DWORD PTR ds:[esi]
  40a67e:	(bad)  
  40a67f:	aam    0xa2
  40a681:	imul   ebx,DWORD PTR ds:0x74fd1dc1,0x2
  40a688:	jae    0x40a6bf
  40a68a:	pop    eax
  40a68b:	sub    al,0xd5
  40a68d:	sbb    esp,ecx
  40a68f:	sbb    edi,DWORD PTR [eax]
  40a691:	cmp    al,0x6f
  40a693:	cmp    cl,BYTE PTR [edx+0x55]
  40a696:	(bad)  
  40a697:	jmp    0x10f51552
  40a69c:	inc    ebx
  40a69d:	sahf   
  40a69e:	sbb    dh,bh
  40a6a0:	jmp    0x40a665
  40a6a2:	int3   
  40a6a3:	sbb    BYTE PTR [ebx],al
  40a6a5:	and    BYTE PTR [ebp+0x62cf73c7],dh
  40a6ab:	cmp    dh,BYTE PTR [ebx-0x10]
  40a6ae:	lahf   
  40a6af:	pop    ebp
  40a6b0:	loope  0x40a652
  40a6b2:	mov    edx,0x5616030
  40a6b7:	cmp    DWORD PTR [ebp+0x74a2b008],esi
  40a6bd:	psubsw mm0,QWORD PTR [edi]
  40a6c0:	cwde   
  40a6c1:	sbb    DWORD PTR [ecx+0x15abc423],ebp
  40a6c7:	xchg   esp,eax
  40a6c8:	cli    
  40a6c9:	sar    DWORD PTR fs:[ebx+0x4],1
  40a6cd:	out    dx,eax
  40a6ce:	or     BYTE PTR [ebx-0x33],dh
  40a6d1:	dec    ecx
  40a6d2:	sahf   
  40a6d3:	mov    bh,bl
  40a6d5:	mov    al,0x5a
  40a6d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d8:	sub    cl,BYTE PTR [edx+0x51]
  40a6db:	xchg   DWORD PTR [esi-0xa],eax
  40a6de:	push   esp
  40a6df:	inc    edx
  40a6e0:	cli    
  40a6e1:	xchg   edi,eax
  40a6e2:	mov    esi,0x843792c
  40a6e7:	sbb    eax,0x57ca2121
  40a6ec:	xchg   BYTE PTR [esi],bh
  40a6ee:	aad    0xb2
  40a6f0:	and    ecx,ebx
  40a6f2:	aad    0x7c
  40a6f4:	add    dl,BYTE PTR [si+0x18]
  40a6f8:	adc    edi,DWORD PTR [ebp-0x50]
  40a6fb:	pushf  
  40a6fc:	push   ebp
  40a6fd:	and    ebx,DWORD PTR [esi+0x5b]
  40a700:	jnp    0x40a6d7
  40a702:	xor    ecx,edi
  40a704:	cs jg  0x40a70a
  40a707:	ret    
  40a708:	out    dx,eax
  40a709:	mov    esp,0x3a250611
  40a70e:	add    al,0x90
  40a710:	inc    edx
  40a711:	add    DWORD PTR [esi-0x45],ebx
  40a714:	int    0x29
  40a716:	sbb    BYTE PTR [ecx-0x5631eada],ch
  40a71c:	dec    esp
  40a71d:	pop    esi
  40a71e:	(bad)  
  40a71f:	cmp    al,0x69
  40a721:	lea    ebp,[edx+esi*4]
  40a724:	add    ah,BYTE PTR [ecx+eiz*2+0x45]
  40a728:	sbb    cl,BYTE PTR [ebp-0x3d]
  40a72b:	cmp    eax,0x8016ae4d
  40a730:	jg     0x40a6bb
  40a732:	lods   eax,DWORD PTR ds:[esi]
  40a733:	jns    0x40a76c
  40a735:	fsubr  st,st(7)
  40a737:	ins    DWORD PTR es:[edi],dx
  40a738:	ret    0x9761
  40a73b:	jne    0x40a6d4
  40a73d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a73e:	mov    cs,ebp
  40a740:	aas    
  40a741:	adc    eax,0x977d31fb
  40a746:	mov    al,0x5a
  40a748:	arpl   WORD PTR [eax+eiz*1-0x762acdbe],dx
  40a74f:	push   edi
  40a750:	or     ch,BYTE PTR [ebx-0x17]
  40a753:	add    cl,ah
  40a755:	fsub   DWORD PTR [ebp-0x76b0f647]
  40a75b:	push   ss
  40a75c:	inc    ebx
  40a75d:	fstp   DWORD PTR [ebx+eiz*2+0x264b886e]
  40a764:	mov    bh,0xa4
  40a766:	or     dh,al
  40a768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a769:	jl     0x40a7a5
  40a76b:	or     ah,BYTE PTR [edx-0x62]
  40a76e:	(bad)  
  40a76f:	in     eax,0x4b
  40a771:	test   eax,0x6b8de8c2
  40a776:	push   ds
  40a777:	fiadd  DWORD PTR [eax]
  40a779:	push   ebp
  40a77a:	or     edi,DWORD PTR [esi]
  40a77c:	or     al,0xc8
  40a77e:	jbe    0x40a7de
  40a780:	sub    eax,0x4aacd09b
  40a785:	xlat   BYTE PTR ds:[ebx]
  40a786:	adc    cl,bl
  40a788:	cmp    eax,0x15761b98
  40a78d:	add    ecx,DWORD PTR [esi]
  40a78f:	(bad)  
  40a790:	mov    esi,0x9dbe9969
  40a795:	fst    DWORD PTR [bx+si-0xfd8]
  40a79a:	lea    ebx,[ebp+0x17819b41]
  40a7a0:	mov    al,ds:0x4ee1712e
  40a7a5:	mov    esi,edi
  40a7a7:	mov    dl,0x35
  40a7a9:	mov    BYTE PTR [ecx+0x4a047429],dl
  40a7af:	sti    
  40a7b0:	aad    0x39
  40a7b2:	dec    esi
  40a7b3:	repz sti 
  40a7b5:	fcmovb st,st(6)
  40a7b7:	das    
  40a7b8:	pop    ebp
  40a7b9:	xor    BYTE PTR [edx+0x7f],dl
  40a7bc:	out    dx,eax
  40a7bd:	sub    al,0x34
  40a7bf:	not    DWORD PTR [edi]
  40a7c1:	stos   BYTE PTR es:[edi],al
  40a7c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c3:	or     DWORD PTR [eax+eax*8],esi
  40a7c6:	test   eax,0xfa2c36ab
  40a7cb:	pop    ss
  40a7cc:	or     esi,DWORD PTR [edi-0x22]
  40a7cf:	arpl   dx,di
  40a7d1:	stc    
  40a7d2:	lods   eax,DWORD PTR ds:[esi]
  40a7d4:	pop    ebx
  40a7d5:	dec    edx
  40a7d6:	std    
  40a7d7:	add    bh,BYTE PTR [edx-0x29b62ac6]
  40a7dd:	retf   0x4e8b
  40a7e0:	out    0xa7,al
  40a7e2:	add    ebx,DWORD PTR [edx-0x68]
  40a7e5:	adc    ecx,DWORD PTR [esi]
  40a7e7:	push   edi
  40a7e8:	jbe    0x40a821
  40a7ea:	int3   
  40a7eb:	icebp  
  40a7ec:	mov    cl,0xe7
  40a7ee:	push   cs
  40a7ef:	ja     0x40a85b
  40a7f1:	pop    es
  40a7f2:	sahf   
  40a7f3:	in     eax,dx
  40a7f4:	push   ds
  40a7f5:	sets   BYTE PTR [edi]
  40a7f8:	fild   WORD PTR [ecx+0x6a32df3c]
  40a7fe:	(bad)
  40a802:	mov    cl,0xbf
  40a804:	mov    ah,0xd6
  40a806:	cmp    eax,0x8b2f89a1
  40a80b:	mov    dh,al
  40a80d:	fwait
  40a80e:	jg     0x40a7d9
  40a810:	xchg   esi,eax
  40a811:	mov    ecx,DWORD PTR [ebx+0x57]
  40a814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a815:	mov    cl,0xa2
  40a817:	clc    
  40a818:	or     al,BYTE PTR ds:[ecx]
  40a81b:	xchg   edi,eax
  40a81c:	cmc    
  40a81d:	mov    cl,0x24
  40a81f:	les    ecx,FWORD PTR [eax]
  40a821:	push   es
  40a822:	(bad)  
  40a823:	(bad)  
  40a824:	fwait
  40a825:	mov    al,ds:0x3fe8cbe7
  40a82a:	cmp    esi,DWORD PTR [edi]
  40a82c:	sub    BYTE PTR [ecx+0x5f],0xb8
  40a830:	xchg   edx,eax
  40a831:	and    dh,BYTE PTR [eax+edx*2]
  40a834:	mov    edi,cs
  40a836:	fld    DWORD PTR [ebx+ebp*1-0x3c44ebd6]
  40a83d:	add    DWORD PTR [eax+0x721505fa],edi
  40a843:	cdq    
  40a844:	ja     0x40a89d
  40a846:	cmp    eax,0x6d3906a5
  40a84b:	jb     0x40a7fd
  40a84d:	ficom  DWORD PTR [ecx+0x32]
  40a850:	cmp    eax,0x3604a10d
  40a855:	fisub  WORD PTR [eax-0x4adb558b]
  40a85b:	sbb    ebx,DWORD PTR [edi]
  40a85d:	shl    DWORD PTR [ecx-0x301f1bd1],0xf2
  40a864:	(bad)  
  40a865:	mov    ch,0xb5
  40a867:	jnp    0x40a84a
  40a869:	jo     0x40a890
  40a86b:	xchg   edx,eax
  40a86c:	cmp    dl,BYTE PTR [ecx-0x50]
  40a86f:	call   0x589bee8f
  40a874:	out    0x37,al
  40a876:	mov    ds:0xf81e2048,eax
  40a87b:	fst    DWORD PTR [edx-0x5df1b24]
  40a881:	xchg   ecx,eax
  40a882:	and    ah,BYTE PTR [edi-0x1b]
  40a885:	inc    eax
  40a886:	add    BYTE PTR [esi+0x6e],dl
  40a889:	out    0x4,eax
  40a88b:	dec    edi
  40a88c:	fnsave [edi-0x7c]
  40a88f:	xor    DWORD PTR [eax],esp
  40a891:	or     bl,bl
  40a893:	lahf   
  40a894:	test   eax,0xaa53c494
  40a899:	ja     0x40a871
  40a89b:	je     0x40a8ae
  40a89d:	fdivr  DWORD PTR [edi-0x13f25ab0]
  40a8a3:	mov    ds:0xeb54cdbf,al
  40a8a8:	cmp    BYTE PTR [edi+edi*1+0x7d],ch
  40a8ac:	call   0x6d15:0x630d2953
  40a8b3:	lea    edi,[ebp-0x25]
  40a8b6:	xchg   esp,eax
  40a8b7:	scas   eax,DWORD PTR es:[edi]
  40a8b8:	rol    ebx,1
  40a8ba:	mov    esp,0x78bce2c8
  40a8bf:	psraw  mm5,mm2
  40a8c2:	pusha  
  40a8c3:	cmp    ebx,DWORD PTR [ecx-0x18]
  40a8c6:	pop    ebp
  40a8c7:	rol    al,cl
  40a8c9:	push   edx
  40a8ca:	xchg   edi,eax
  40a8cb:	sbb    esp,DWORD PTR [edx+0x16]
  40a8ce:	test   BYTE PTR [edx-0x37fd3db1],bl
  40a8d4:	mov    BYTE PTR [ebp+0x28d94591],bl
  40a8da:	retf   0x2556
  40a8dd:	push   edx
  40a8de:	cmc    
  40a8df:	inc    eax
  40a8e0:	stos   BYTE PTR es:[edi],al
  40a8e1:	lods   al,BYTE PTR ds:[esi]
  40a8e2:	xor    DWORD PTR [ebx],eax
  40a8e4:	sbb    ch,BYTE PTR [ebx]
  40a8e6:	lock push es
  40a8e8:	test   DWORD PTR ds:0x1673ce17,esi
  40a8ee:	mov    bl,0x61
  40a8f0:	sub    esp,DWORD PTR [esi+0x20]
  40a8f3:	push   0xffffffc5
  40a8f5:	jle    0x40a94e
  40a8f7:	dec    edx
  40a8f8:	xchg   edi,eax
  40a8f9:	(bad)  
  40a8fb:	xor    eax,0xa3be5639
  40a900:	pop    ebp
  40a901:	retf   
  40a902:	xor    ecx,DWORD PTR [eax+edx*4]
  40a905:	daa    
  40a906:	sbb    eax,0xf804862b
  40a90b:	loopne 0x40a92c
  40a90d:	pop    eax
  40a90e:	and    ebp,edx
  40a910:	xchg   ebx,eax
  40a911:	fcomp  st(1)
  40a913:	mov    ch,0xf8
  40a915:	add    eax,0xaf02faba
  40a91a:	ror    DWORD PTR [ecx+eiz*2+0x3f],0xf3
  40a91f:	rcl    BYTE PTR [edx+0x1f],0xa4
  40a923:	xor    eax,0xb53fb333
  40a928:	cli    
  40a929:	lahf   
  40a92a:	cmp    bl,0x18
  40a92d:	sub    edi,eax
  40a92f:	xchg   esp,eax
  40a930:	pop    esi
  40a931:	outs   dx,BYTE PTR ds:[esi]
  40a932:	adc    ebp,ecx
  40a934:	fwait
  40a935:	dec    edi
  40a936:	in     al,0xb0
  40a938:	(bad)  
  40a939:	repnz add eax,0xc7c41be1
  40a93f:	std    
  40a940:	loopne 0x40a942
  40a942:	xchg   ebp,ebx
  40a944:	outs   dx,BYTE PTR ds:[esi]
  40a945:	sti    
  40a946:	xor    DWORD PTR [eax],edi
  40a948:	test   BYTE PTR [esi-0x7d],0xfc
  40a94c:	mov    cl,0x56
  40a94e:	or     al,BYTE PTR [ebp+edi*4+0x18962c26]
  40a955:	mov    bh,ch
  40a957:	mov    dl,BYTE PTR [ecx]
  40a959:	jae    0x40a90a
  40a95b:	jmp    0x92ffd60e
  40a960:	div    BYTE PTR [eax+0x69]
  40a963:	xor    DWORD PTR [ebx-0x13],esp
  40a966:	fcom   st(0)
  40a968:	xchg   esp,eax
  40a969:	xor    bh,BYTE PTR [ecx-0x5c]
  40a96c:	adc    al,0xf8
  40a96e:	inc    esi
  40a96f:	xor    al,0xc7
  40a971:	mov    ch,0x3b
  40a973:	and    BYTE PTR ds:0x990234a1,dh
  40a979:	rcr    DWORD PTR [edi+0xa],cl
  40a97c:	mov    edi,DWORD PTR [ebx+0x16]
  40a97f:	ja     0x40a998
  40a981:	push   esi
  40a982:	mov    bl,0x49
  40a984:	clc    
  40a985:	pushf  
  40a986:	mov    ds:0x45bb0a9e,eax
  40a98b:	mov    eax,0x12282494
  40a990:	nop
  40a991:	fadd   QWORD PTR [ebp-0x6a9b39fc]
  40a997:	js     0x40a92a
  40a999:	xchg   esp,eax
  40a99a:	mov    ebx,0xa01c5b2c
  40a99f:	xchg   ebx,eax
  40a9a0:	lods   eax,DWORD PTR ds:[esi]
  40a9a1:	imul   ebp,DWORD PTR [ecx+0x73],0x39
  40a9a5:	cmp    ah,BYTE PTR [ecx+ebx*8-0x61733d3a]
  40a9ac:	out    0x74,al
  40a9ae:	test   al,0x6c
  40a9b0:	dec    ecx
  40a9b1:	mov    bl,0xc3
  40a9b3:	dec    edi
  40a9b4:	inc    ecx
  40a9b5:	sub    esp,DWORD PTR [eax]
  40a9b7:	inc    edi
  40a9b8:	fild   DWORD PTR [esi]
  40a9ba:	arpl   sp,bx
  40a9bc:	icebp  
  40a9bd:	jmp    0xeccc:0x4b55d986
  40a9c4:	pop    es
  40a9c5:	sub    BYTE PTR [edi-0x6a],ch
  40a9c8:	and    ebx,DWORD PTR [ecx-0x28]
  40a9cb:	cmp    al,0x2d
  40a9cd:	xchg   ebx,eax
  40a9ce:	cmp    al,0xb4
  40a9d0:	imul   ebx,edx,0xf8590e38
  40a9d6:	hlt    
  40a9d7:	jl     0x40a95a
  40a9d9:	mov    ebx,0x7ee1d477
  40a9de:	popa   
  40a9df:	cld    
  40a9e0:	bound  ecx,QWORD PTR [edi]
  40a9e2:	fnstsw WORD PTR [eax+ebp*8+0x484ddfc4]
  40a9e9:	outs   dx,BYTE PTR ds:[esi]
  40a9ea:	repnz ds push ss
  40a9ed:	or     eax,0x425ede69
  40a9f2:	rcr    BYTE PTR [ebx],0x5f
  40a9f5:	push   0xffffff9b
  40a9f7:	imul   edi,DWORD PTR [eax+0x71],0x0
  40a9fb:	mov    al,0x38
  40a9fd:	retf   
  40a9fe:	outs   dx,BYTE PTR ds:[esi]
  40a9ff:	jne    0x40aa52
  40aa01:	std    
  40aa02:	std    
  40aa03:	and    dl,BYTE PTR ds:0xdaa2b48a
  40aa09:	fs mov al,0x4e
  40aa0c:	ja     0x40aa4f
  40aa0e:	out    dx,al
  40aa0f:	xchg   ebp,eax
  40aa10:	mov    eax,0x3d87decb
  40aa15:	pop    ebx
  40aa16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa17:	stc    
  40aa18:	mov    edx,0xc0197b58
  40aa1d:	sbb    al,0x6c
  40aa1f:	dec    edi
  40aa20:	sbb    al,0xd6
  40aa22:	dec    esp
  40aa23:	mov    al,gs:0xe7bc79a9
  40aa29:	cmc    
  40aa2a:	dec    edi
  40aa2b:	and    DWORD PTR [edx-0x65],eax
  40aa2e:	mov    BYTE PTR [edi+0x3da0cfd5],bl
  40aa34:	xor    DWORD PTR [ebx],0x8d0aa249
  40aa3a:	mov    ds,WORD PTR [eax]
  40aa3c:	xlat   BYTE PTR ds:[ebx]
  40aa3d:	mov    bh,0x71
  40aa3f:	or     al,0x11
  40aa41:	je     0x40a9e4
  40aa43:	and    ah,BYTE PTR [edx-0x7e]
  40aa46:	popa   
  40aa47:	out    0xb5,eax
  40aa49:	ins    DWORD PTR es:[edi],dx
  40aa4a:	cmc    
  40aa4b:	inc    eax
  40aa4c:	stc    
  40aa4d:	xchg   DWORD PTR [ebx+0x77],ebp
  40aa50:	gs loopne 0x40a9ff
  40aa53:	cmp    eax,0x39591b81
  40aa58:	imul   esp,DWORD PTR [esi],0xffffff98
  40aa5b:	adc    al,0xf5
  40aa5d:	pop    ebp
  40aa5e:	or     al,0xe6
  40aa60:	adc    DWORD PTR [ebx-0x57],esi
  40aa63:	mov    al,ds:0x20e5d9b3
  40aa68:	add    bh,BYTE PTR [edx-0x1b]
  40aa6b:	xor    ebp,DWORD PTR [edi-0x6b]
  40aa6e:	or     al,0x51
  40aa70:	push   ebp
  40aa71:	aam    0x53
  40aa73:	scas   eax,DWORD PTR es:[edi]
  40aa74:	hlt    
  40aa75:	scas   eax,DWORD PTR es:[edi]
  40aa76:	sub    BYTE PTR ds:0x92db84a0,cl
  40aa7c:	(bad)  
  40aa7d:	loopne 0x40aa8b
  40aa7f:	mov    dl,BYTE PTR [edi-0x4ecb7e80]
  40aa85:	xor    eax,0x8be2c23a
  40aa8a:	dec    edx
  40aa8b:	fisub  DWORD PTR [eax+0x80d0a25]
  40aa91:	mov    ebp,0xf6b63529
  40aa96:	ds cdq 
  40aa98:	div    BYTE PTR [edx-0x708e9340]
  40aa9e:	fstp   TBYTE PTR [edi+0x42]
  40aaa1:	mov    esp,0xbb33b32d
  40aaa6:	dec    eax
  40aaa7:	stc    
  40aaa8:	rcr    al,cl
  40aaaa:	push   ebx
  40aaab:	inc    eax
  40aaac:	adc    dl,BYTE PTR [eax-0x3b]
  40aaaf:	mul    DWORD PTR [esi-0x4c98d075]
  40aab5:	adc    al,0x53
  40aab7:	xor    eax,0xa78ec544
  40aabc:	repz cmp edi,ecx
  40aabf:	mov    bl,BYTE PTR [eax+0x6e3ec9a7]
  40aac5:	out    dx,eax
  40aac6:	and    DWORD PTR [ecx-0x42],edx
  40aac9:	ret    
  40aaca:	stos   BYTE PTR es:[edi],al
  40aacb:	push   es
  40aacc:	lods   al,BYTE PTR ds:[esi]
  40aacd:	or     DWORD PTR [esi-0x5b64f2ae],0xfa23ffaf
  40aad7:	mov    esi,0x424f8b9c
  40aadc:	xor    dh,BYTE PTR [ebx]
  40aade:	jecxz  0x40ab06
  40aae0:	ror    BYTE PTR [edx-0x35],0xad
  40aae4:	mov    eax,ds:0xbcf6215d
  40aae9:	xor    BYTE PTR [eax+0x1198e6e5],al
  40aaef:	mov    esp,ecx
  40aaf1:	inc    edx
  40aaf2:	jecxz  0x40aaa7
  40aaf4:	sbb    al,0x7a
  40aaf6:	xchg   edi,eax
  40aaf7:	cmp    ch,BYTE PTR [edx+ebp*1]
  40aafa:	mov    cl,0x20
  40aafc:	leave  
  40aafd:	cs adc al,0x5
  40ab00:	mul    DWORD PTR [edi-0x1da1daff]
  40ab06:	imul   ecx,DWORD PTR [ecx+0x21],0x1c2b1d34
  40ab0d:	sbb    esp,esp
  40ab0f:	leave  
  40ab10:	xor    bh,bh
  40ab12:	sbb    al,0x58
  40ab14:	or     cl,bh
  40ab16:	ret    
  40ab17:	jmp    0xb0d6:0x71cbf7b1
  40ab1e:	imul   DWORD PTR [edi]
  40ab20:	adc    al,bl
  40ab22:	loope  0x40ab73
  40ab24:	data16 sub BYTE PTR [ebp+0x2cc9f8a7],dl
  40ab2b:	jg     0x40ab44
  40ab2d:	(bad)  
  40ab2e:	das    
  40ab2f:	fbld   TBYTE PTR ds:[ebp+0x78]
  40ab33:	dec    ecx
  40ab34:	push   0x591509b2
  40ab39:	push   0x5
  40ab3b:	shr    dl,0xb9
  40ab3e:	rcl    DWORD PTR [eax+0x544c374e],cl
  40ab44:	es rol ebp,0x8d
  40ab48:	ins    BYTE PTR es:[edi],dx
  40ab49:	test   bl,cl
  40ab4b:	xchg   DWORD PTR [eax+0x46],esi
  40ab4e:	push   0xf65b2a09
  40ab53:	cs jbe 0x40ab4c
  40ab56:	jmp    0x1090:0x606aa779
  40ab5d:	mov    al,ds:0x883c8d45
  40ab62:	ds in  eax,dx
  40ab64:	out    dx,al
  40ab65:	xor    ecx,DWORD PTR [esi+0x1a9d1594]
  40ab6b:	mov    BYTE PTR es:[edi],ah
  40ab6e:	cs ds dec edx
  40ab71:	jb     0x40ab7a
  40ab73:	lock test al,cl
  40ab76:	pop    ebp
  40ab77:	fdiv   st,st(5)
  40ab79:	out    dx,eax
  40ab7a:	sbb    eax,0x3efe65ec
  40ab7f:	xor    eax,0xcc09b9c0
  40ab84:	cs aad 0x2a
  40ab87:	dec    eax
  40ab88:	sub    DWORD PTR [esi+esi*8+0x11633a5a],esi
  40ab8f:	psubusb mm1,QWORD PTR [eax]
  40ab92:	sbb    al,0x98
  40ab94:	jno    0x40ab45
  40ab96:	jns    0x40ab3e
  40ab98:	and    eax,0xe9d5bdf4
  40ab9d:	shl    BYTE PTR [edi+0x30],cl
  40aba0:	xchg   edx,eax
  40aba1:	adc    esp,DWORD PTR [esi+0x3cc0d0c6]
  40aba7:	lods   eax,DWORD PTR ds:[esi]
  40aba8:	sbb    eax,0x5814b25a
  40abad:	jne    0x40abff
  40abaf:	mov    edi,0xf89a91b3
  40abb4:	and    DWORD PTR [esi],esp
  40abb6:	rcr    edx,0xf0
  40abb9:	cli    
  40abba:	pop    ecx
  40abbb:	fisttp QWORD PTR [edx+0x6e]
  40abbe:	aad    0xbf
  40abc0:	popa   
  40abc1:	loope  0x40ac2b
  40abc3:	aad    0xc7
  40abc5:	xchg   edx,eax
  40abc6:	jge    0x40abcf
  40abc8:	icebp  
  40abc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abcb:	xchg   ebx,eax
  40abcc:	cdq    
  40abcd:	mov    bl,0xf2
  40abcf:	or     eax,0x10dad8cd
  40abd4:	in     al,dx
  40abd5:	xchg   esp,eax
  40abd6:	stos   BYTE PTR es:[edi],al
  40abd7:	or     BYTE PTR [ecx-0xd36df47],al
  40abdd:	lahf   
  40abde:	lock or eax,DWORD PTR [ecx-0x3fcfa44]
  40abe5:	mov    ss,WORD PTR [esi]
  40abe7:	aaa    
  40abe8:	push   ss
  40abe9:	jle    0x40ac48
  40abeb:	int    0x9e
  40abed:	int3   
  40abee:	cs jmp 0x40ac0d
  40abf1:	mov    DWORD PTR [esi],esp
  40abf3:	dec    edi
  40abf5:	rcl    DWORD PTR es:[edi-0xb],cl
  40abf9:	and    DWORD PTR ds:0x2ba2fd38,edx
  40abff:	repz inc eax
  40ac01:	syscall 
  40ac03:	jo     0x40ac40
  40ac05:	mov    dh,0x90
  40ac07:	sub    DWORD PTR [ebp+0x274619],ecx
  40ac0d:	pop    edx
  40ac0e:	jecxz  0x40ac0d
  40ac10:	repnz pop ebx
  40ac12:	push   DWORD PTR [esi-0x44834054]
  40ac18:	rol    BYTE PTR [eax],cl
  40ac1a:	nop
  40ac1b:	mov    bh,0xb0
  40ac1d:	mov    ebp,DWORD PTR [esi+0x6cf00a13]
  40ac23:	sbb    dl,BYTE PTR [ebp+0x1cae78ae]
  40ac29:	and    BYTE PTR [eax-0x25],ch
  40ac2c:	push   ebp
  40ac2d:	stos   DWORD PTR es:[edi],eax
  40ac2e:	pop    ss
  40ac2f:	xchg   ecx,eax
  40ac30:	inc    esp
  40ac31:	xchg   edx,eax
  40ac32:	aaa    
  40ac33:	ins    BYTE PTR es:[edi],dx
  40ac34:	aam    0x9a
  40ac36:	cmc    
  40ac37:	push   es
  40ac38:	add    ch,0x7a
  40ac3b:	shr    BYTE PTR [ebx-0xa],cl
  40ac3e:	adc    al,0xad
  40ac40:	shl    dh,1
  40ac42:	call   0x8473c1cc
  40ac47:	push   ds
  40ac48:	jle    0x40ac0d
  40ac4a:	pop    edx
  40ac4b:	xchg   ecx,eax
  40ac4c:	mov    esp,0xac6a0d0c
  40ac51:	add    al,0x62
  40ac53:	out    0x84,al
  40ac55:	bound  ebp,QWORD PTR [ecx+0x123c9cc3]
  40ac5b:	push   ss
  40ac5c:	sbb    al,0xaf
  40ac5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac5f:	mov    edx,DWORD PTR [esi]
  40ac61:	(bad)  
  40ac62:	mov    dh,0xd6
  40ac64:	sbb    DWORD PTR gs:[edx],ecx
  40ac67:	int    0x13
  40ac69:	je     0x40acbe
  40ac6b:	sar    dl,1
  40ac6d:	push   ebx
  40ac6e:	mov    al,0xd8
  40ac70:	hlt    
  40ac71:	and    DWORD PTR [edx-0x639ceb85],edx
  40ac77:	jmp    0x3ca1df30
  40ac7c:	pop    ss
  40ac7d:	dec    ecx
  40ac7e:	cmp    DWORD PTR [eax+0x20],esp
  40ac81:	xchg   ebx,eax
  40ac82:	dec    eax
  40ac83:	les    esi,FWORD PTR [esp+eax*8-0xd]
  40ac87:	jl     0x40ac10
  40ac89:	vxorps xmm4,xmm6,XMMWORD PTR ds:0x7ea31229
  40ac91:	pop    edx
  40ac92:	push   ecx
  40ac93:	aaa    
  40ac94:	sar    BYTE PTR [ecx+ebx*2-0x618fcf79],1
  40ac9b:	repnz dec sp
  40ac9e:	sub    al,0x61
  40aca0:	xchg   edx,eax
  40aca1:	aas    
  40aca2:	xchg   ecx,eax
  40aca3:	and    al,0x51
  40aca5:	pop    edi
  40aca6:	loope  0x40acc8
  40aca8:	fwait
  40aca9:	lods   eax,DWORD PTR ds:[esi]
  40acaa:	popf   
  40acab:	xor    DWORD PTR [eax-0x18],ebx
  40acae:	in     al,dx
  40acaf:	push   cs
  40acb0:	scas   al,BYTE PTR es:[edi]
  40acb1:	cmp    DWORD PTR [ebp-0x43],edx
  40acb4:	femms  
  40acb6:	push   0xffffffc6
  40acb8:	int3   
  40acb9:	jmp    0x40acb0
  40acbb:	lods   al,BYTE PTR ds:[esi]
  40acbc:	mov    esp,DWORD PTR [eax-0x5956f2a]
  40acc2:	(bad)  
  40acc3:	cmp    al,0x3a
  40acc5:	adc    esi,DWORD PTR [eax+0x33]
  40acc8:	cmp    BYTE PTR [edx],0x41
  40accb:	mov    gs,WORD PTR fs:[edi-0x19dd28ea]
  40acd2:	xchg   ecx,eax
  40acd3:	pusha  
  40acd4:	fimul  DWORD PTR [ecx]
  40acd6:	xor    al,0xa9
  40acd8:	jg     0x40ad2a
  40acda:	(bad)  
  40acdb:	call   DWORD PTR [ebp+0x310ffaea]
  40ace1:	dec    edi
  40ace2:	mov    dl,0x22
  40ace4:	inc    edx
  40ace5:	gs icebp 
  40ace7:	inc    esp
  40ace8:	sub    ecx,DWORD PTR [edi+0x2649ba32]
  40acee:	mov    ch,dh
  40acf0:	and    dh,0xec
  40acf3:	sar    BYTE PTR [esi+ebx*2],0x1d
  40acf7:	int3   
  40acf8:	mov    ah,0x4e
  40acfa:	mov    al,0x14
  40acfc:	mov    eax,0xf78ed88f
  40ad01:	lea    edi,ds:0xb18d844c
  40ad07:	test   eax,0x774e7efe
  40ad0c:	fld    QWORD PTR [eax-0xf164a84]
  40ad12:	mov    dl,0x45
  40ad14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad15:	stos   DWORD PTR es:[edi],eax
  40ad16:	push   edx
  40ad17:	out    0xa1,al
  40ad19:	loopne 0x40ad60
  40ad1b:	sub    ecx,DWORD PTR [ebp-0x14]
  40ad1e:	mov    edi,0x5b6e4207
  40ad23:	pop    ecx
  40ad24:	inc    esi
  40ad25:	xor    eax,0xcee35d88
  40ad2a:	xchg   ebx,ecx
  40ad2c:	inc    eax
  40ad2d:	jmp    DWORD PTR [eax-0x3f31d2f9]
  40ad33:	retf   
  40ad34:	mov    bh,BYTE PTR [edx-0x3cfd62e6]
  40ad3a:	mov    ch,0x68
  40ad3c:	ror    dl,0x1d
  40ad3f:	adc    DWORD PTR [ebx-0x1],ebp
  40ad42:	jle    0x40adbd
  40ad44:	repz test ah,ch
  40ad47:	adc    BYTE PTR [esi],0x5a
  40ad4a:	shr    DWORD PTR ds:[edi],cl
  40ad4d:	ret    
  40ad4e:	xor    al,0x61
  40ad50:	jmp    0x40ad52
  40ad52:	int3   
  40ad53:	or     al,0x89
  40ad55:	sub    edx,esi
  40ad57:	fdiv   QWORD PTR [esi-0x68]
  40ad5a:	pop    eax
  40ad5b:	iret   
  40ad5c:	add    DWORD PTR [esi+0x32e4f66b],esi
  40ad62:	cmc    
  40ad63:	sti    
  40ad64:	cmp    ah,BYTE PTR [esi]
  40ad66:	retf   
  40ad67:	mov    al,ds:0x2c9633ec
  40ad6c:	adc    BYTE PTR [ebx+0x1b0b2236],dl
  40ad72:	push   es
  40ad73:	leave  
  40ad74:	(bad)  
  40ad75:	push   ebp
  40ad76:	leave  
  40ad77:	jne    0x40adf2
  40ad79:	xchg   ebp,eax
  40ad7a:	pusha  
  40ad7b:	mov    ebp,0x8d524ef4
  40ad80:	add    al,0x2c
  40ad82:	cli    
  40ad83:	sub    eax,0xde84b486
  40ad88:	outs   dx,BYTE PTR ds:[esi]
  40ad89:	jo     0x40adbf
  40ad8b:	dec    edi
  40ad8c:	out    dx,eax
  40ad8d:	fmul   QWORD PTR [eax]
  40ad8f:	std    
  40ad90:	mov    dh,BYTE PTR [eax-0x5250545f]
  40ad96:	push   edx
  40ad97:	dec    ebx
  40ad98:	push   eax
  40ad99:	outs   dx,DWORD PTR ds:[esi]
  40ad9a:	inc    ebp
  40ad9b:	sti    
  40ad9c:	neg    BYTE PTR ds:0xc84dbe38
  40ada2:	cmp    ebp,DWORD PTR ds:0x5bd3d4f7
  40ada8:	call   FWORD PTR [ebx-0x5e86b544]
  40adae:	xchg   esi,eax
  40adaf:	mov    al,ds:0xfbc2c0a7
  40adb4:	push   edi
  40adb5:	ins    DWORD PTR es:[edi],dx
  40adb6:	adc    al,0x4d
  40adb8:	sub    al,0xf1
  40adba:	add    DWORD PTR [eax],edx
  40adbc:	push   edi
  40adbd:	push   0xffffffa5
  40adbf:	add    al,0x1f
  40adc1:	adc    eax,0x1b833524
  40adc6:	push   edx
  40adc7:	fistp  DWORD PTR [esi]
  40adc9:	jp     0x40ae41
  40adcb:	std    
  40adcc:	outs   dx,DWORD PTR ds:[esi]
  40adcd:	xchg   edx,eax
  40adce:	jp     0x40adf9
  40add0:	mov    dl,0xc6
  40add2:	dec    edx
  40add3:	vpsubq xmm1,xmm7,XMMWORD PTR [ecx-0x4b773232]
  40addb:	lock adc ebp,DWORD PTR [esi+ecx*4]
  40addf:	rcr    BYTE PTR [ecx-0x45],cl
  40ade2:	shr    BYTE PTR [esi],1
  40ade4:	push   ecx
  40ade5:	jmp    0x40ae3b
  40ade7:	mov    ds:0x8ca533e9,al
  40adec:	mov    eax,ds:0x7bcca655
  40adf1:	pop    esi
  40adf2:	or     al,0x91
  40adf4:	mov    al,ds:0x847d31cc
  40adf9:	retf   
  40adfa:	pop    ecx
  40adfb:	(bad)  
  40adfd:	adc    eax,0x89150821
  40ae02:	fisttp WORD PTR [ecx]
  40ae04:	add    edx,DWORD PTR [esi]
  40ae06:	addr16 push cs
  40ae08:	dec    eax
  40ae09:	enter  0x7abe,0xbe
  40ae0d:	pushf  
  40ae0e:	jne    0x40ae0e
  40ae10:	lods   al,BYTE PTR ds:[esi]
  40ae11:	adc    eax,0x7fc9729b
  40ae16:	mov    eax,ds:0x7c1bb1c9
  40ae1b:	sbb    eax,0x408b7f66
  40ae20:	or     DWORD PTR [ecx+0x4d3ef75b],ecx
  40ae26:	adc    eax,0xbd865573
  40ae2b:	push   eax
  40ae2c:	jg     0x40aded
  40ae2e:	xchg   ebp,eax
  40ae2f:	(bad)  
  40ae30:	outs   dx,BYTE PTR ds:[esi]
  40ae31:	push   cs
  40ae32:	sahf   
  40ae33:	out    0xb3,al
  40ae35:	push   ebx
  40ae36:	sub    eax,0x851e3cdf
  40ae3b:	adc    BYTE PTR [bx+0x7d2a],cl
  40ae40:	arpl   WORD PTR [esp+esi*8-0x78],bp
  40ae44:	rol    BYTE PTR [esi+ebp*4],0x2
  40ae48:	sub    BYTE PTR [ebx],dl
  40ae4a:	push   ebp
  40ae4b:	and    al,0x73
  40ae4d:	xchg   DWORD PTR [eax-0x16],esp
  40ae50:	daa    
  40ae51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae52:	dec    esi
  40ae53:	pusha  
  40ae54:	push   esp
  40ae55:	jecxz  0x40aea0
  40ae57:	ret    
  40ae58:	es int 0xf8
  40ae5b:	scas   eax,DWORD PTR es:[edi]
  40ae5c:	(bad)  
  40ae5d:	mov    bl,0xc7
  40ae5f:	inc    esp
  40ae60:	jnp    0x40aea3
  40ae62:	pushf  
  40ae63:	lods   eax,DWORD PTR ds:[esi]
  40ae64:	xchg   edx,eax
  40ae65:	xor    al,0xde
  40ae67:	xchg   edx,eax
  40ae68:	and    al,0x81
  40ae6a:	outs   dx,BYTE PTR ds:[esi]
  40ae6b:	push   ss
  40ae6c:	aas    
  40ae6d:	sub    cl,BYTE PTR [ecx+edi*4]
  40ae70:	inc    ebp
  40ae71:	xor    al,0x1a
  40ae73:	dec    ebx
  40ae74:	sub    eax,0x9540bf43
  40ae79:	cmp    cl,BYTE PTR [ebx]
  40ae7b:	(bad)  
  40ae7c:	cld    
  40ae7d:	sahf   
  40ae7e:	jmp    0xe2ed:0x64610c60
  40ae85:	cs pop ebx
  40ae87:	out    dx,eax
  40ae88:	jge    0x40aea4
  40ae8a:	or     bh,BYTE PTR [esp+eax*4+0x713f06e1]
  40ae91:	(bad)  
  40ae93:	idiv   DWORD PTR [edx-0xf19db9c]
  40ae99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9a:	fisub  WORD PTR [esi]
  40ae9c:	add    esi,ebp
  40ae9e:	sub    ecx,DWORD PTR [ebp-0x79]
  40aea1:	sub    BYTE PTR [ebx-0x2a],dh
  40aea4:	out    dx,eax
  40aea5:	mov    ds:0x413cf799,al
  40aeaa:	pop    ss
  40aeab:	stos   DWORD PTR es:[edi],eax
  40aeac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aead:	pop    ebp
  40aeae:	scas   al,BYTE PTR es:[edi]
  40aeaf:	test   al,0xbe
  40aeb1:	repz mov ah,BYTE PTR [edx]
  40aeb4:	inc    edx
  40aeb5:	and    eax,DWORD PTR [ebp+0x4]
  40aeb8:	jle    0x40af19
  40aeba:	dec    esp
  40aebb:	fcom   DWORD PTR [ecx-0xbd1c3ed]
  40aec1:	call   0xd9ed3168
  40aec6:	ret    0x2c7a
  40aec9:	mov    ebp,0x66c660bc
  40aece:	push   edx
  40aecf:	add    ah,al
  40aed1:	test   BYTE PTR [ebx-0xd8b28f8],bh
  40aed7:	cmp    BYTE PTR [ebp+0x37291bfb],bl
  40aedd:	and    eax,DWORD PTR [edi]
  40aedf:	sub    ebp,eax
  40aee1:	in     eax,dx
  40aee2:	mov    bh,0x7c
  40aee4:	mov    al,0x9
  40aee6:	add    cl,dh
  40aee8:	sar    BYTE PTR [edi+ebx*8-0x12],1
  40aeec:	adc    DWORD PTR [esi+0x2b],edx
  40aeef:	fldcw  WORD PTR [edx-0x739d6944]
  40aef5:	arpl   WORD PTR [edx],ax
  40aef7:	(bad)  
  40aef8:	bound  ebx,QWORD PTR [eax-0x73e70582]
  40aefe:	dec    ecx
  40aeff:	add    BYTE PTR [ebp-0x6a],dl
  40af02:	adc    ebx,DWORD PTR [ebp-0x3f37b680]
  40af08:	pushf  
  40af09:	xor    eax,0xdd54ef69
  40af0e:	push   esi
  40af0f:	adc    cl,0xa8
  40af12:	loop   0x40af0f
  40af14:	jmp    0xace5:0xdb2aca07
  40af1b:	mov    BYTE PTR [esi],al
  40af1d:	adc    BYTE PTR ds:0xdcbb81b1,ah
  40af23:	jne    0x40aee5
  40af25:	es stos DWORD PTR es:[edi],eax
  40af27:	cmp    al,0x2a
  40af29:	es stos BYTE PTR es:[edi],al
  40af2b:	inc    ecx
  40af2c:	lds    edi,FWORD PTR [ecx+0x595882c9]
  40af32:	rcr    dl,1
  40af34:	out    dx,al
  40af35:	leave  
  40af36:	loopne 0x40af6c
  40af38:	std    
  40af39:	and    esi,esi
  40af3b:	stos   DWORD PTR es:[edi],eax
  40af3c:	push   ds
  40af3d:	sub    BYTE PTR [ecx],0x3e
  40af40:	fcomp  DWORD PTR [ebp+0x70ca3543]
  40af46:	rcl    ecx,cl
  40af48:	arpl   bp,cx
  40af4a:	adc    al,BYTE PTR [ecx-0x6b]
  40af4d:	retf   
  40af4e:	pop    esi
  40af4f:	loopne 0x40afcd
  40af51:	std    
  40af52:	mov    cl,0xb7
  40af54:	jecxz  0x40afb2
  40af56:	pop    ss
  40af57:	lock cmp eax,0x471c0085
  40af5d:	xor    al,0xf3
  40af5f:	imul   edx,ebx,0xbf0449bc
  40af65:	lea    eax,[ebx-0x7b]
  40af68:	inc    ebp
  40af69:	sbb    BYTE PTR [ebp-0x20b89ab8],dh
  40af6f:	pop    ebp
  40af70:	inc    ecx
  40af71:	jne    0x40afaf
  40af73:	test   eax,0xe8713c56
  40af78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af79:	push   es
  40af7a:	ins    BYTE PTR es:[edi],dx
  40af7b:	add    edi,DWORD PTR [eax]
  40af7d:	xor    esi,DWORD PTR [edx-0x3c6609d]
  40af83:	mov    dl,0x66
  40af85:	retf   
  40af86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af87:	add    eax,0x81225d65
  40af8c:	icebp  
  40af8d:	repz mov edx,0xca8e6010
  40af93:	mov    cl,0xd8
  40af95:	or     al,0x97
  40af97:	jle    0x40af37
  40af99:	mov    dl,0x4b
  40af9b:	popa   
  40af9c:	sub    dl,bh
  40af9e:	ja     0x40af79
  40afa0:	inc    DWORD PTR [edx]
  40afa2:	or     eax,0xf63b74a8
  40afa7:	fidiv  WORD PTR [esi]
  40afa9:	sub    eax,0x6f18abfb
  40afae:	(bad)  
  40afaf:	(bad)  [edi]
  40afb1:	jg     0x40af35
  40afb3:	mov    dh,0xf3
  40afb5:	shr    DWORD PTR [ebx+0x63],cl
  40afb8:	xchg   BYTE PTR [esi-0x3b],ah
  40afbb:	push   ebp
  40afbc:	pop    ebp
  40afbd:	ja     0x40afee
  40afbf:	mov    ecx,0xee649f50
  40afc4:	loop   0x40af57
  40afc6:	cmp    DWORD PTR [ebx+0x5ad50475],esi
  40afcc:	add    eax,0x1e28b131
  40afd1:	cli    
  40afd2:	sbb    ch,BYTE PTR [ecx+0x12e8df6f]
  40afd8:	sub    BYTE PTR [ebx+edx*1+0x77],0x59
  40afdd:	aaa    
  40afde:	sbb    eax,0xd9770cd1
  40afe3:	xchg   edi,eax
  40afe4:	mov    ch,0x1d
  40afe6:	addr16 cdq 
  40afe8:	jle    0x40b037
  40afea:	mov    BYTE PTR [ebx-0x49da3cf1],ch
  40aff0:	cs cwde 
  40aff2:	mov    bl,0xf4
  40aff4:	inc    ebx
  40aff5:	popf   
  40aff6:	pop    edi
  40aff7:	mov    DWORD PTR [edi+0x1f],edi
  40affa:	xor    BYTE PTR [ebx-0x19c0f8ae],0x49
  40b001:	adc    eax,0x37e097fb
  40b006:	dec    ebx
  40b007:	mov    edi,0x469721b4
  40b00c:	push   edx
  40b00d:	loope  0x40b05f
  40b00f:	push   edx
  40b010:	push   edx
  40b011:	add    eax,0xc1211cb1
  40b016:	inc    DWORD PTR [edx+0x116d4a3c]
  40b01c:	and    edi,DWORD PTR [ecx-0x5694989f]
  40b022:	aam    0xe9
  40b024:	pop    esi
  40b025:	dec    ebp
  40b026:	mov    edi,0x232878f3
  40b02b:	icebp  
  40b02c:	and    ah,BYTE PTR ds:0x7c8977e8
  40b032:	and    al,0xc
  40b034:	test   eax,0x9eac1934
  40b039:	sub    ah,dh
  40b03b:	daa    
  40b03c:	leave  
  40b03d:	out    dx,al
  40b03e:	sahf   
  40b03f:	mov    edx,0xea1d18a6
  40b044:	mov    dh,0x7a
  40b046:	mov    cl,0x4a
  40b048:	(bad)  
  40b04a:	jmp    0xc524:0xde31066a
  40b051:	inc    eax
  40b052:	ins    BYTE PTR es:[edi],dx
  40b053:	stc    
  40b054:	jo     0x40b084
  40b056:	add    eax,0xbd7fa966
  40b05b:	jno    0x40b015
  40b05d:	(bad)  [edi]
  40b05f:	fwait
  40b060:	push   ss
  40b061:	pop    eax
  40b062:	or     DWORD PTR [ebx+eax*4],ebp
  40b065:	push   ebp
  40b066:	fdiv   DWORD PTR [ecx+0x64]
  40b069:	leave  
  40b06a:	xchg   esi,eax
  40b06b:	jae    0x40b0c9
  40b06d:	rcr    al,cl
  40b06f:	(bad)  
  40b070:	fwait
  40b071:	addr16 add al,0x5b
  40b074:	mov    eax,ds:0x4586b413
  40b079:	mov    edx,0x9b32cdaa
  40b07e:	int    0x37
  40b080:	int    0x91
  40b082:	jns    0x40b013
  40b084:	fldcw  WORD PTR [eax+0x516d867a]
  40b08a:	mov    ch,0x48
  40b08c:	xor    DWORD PTR [edx],ebp
  40b08e:	sub    al,0xfa
  40b090:	test   bl,0x71
  40b093:	sub    al,0xed
  40b095:	dec    esi
  40b096:	mov    ebx,0xd81ac582
  40b09b:	jo     0x40b038
  40b09d:	fsubr  DWORD PTR [edx]
  40b09f:	inc    esp
  40b0a0:	pop    eax
  40b0a1:	pop    es
  40b0a2:	cdq    
  40b0a3:	ins    BYTE PTR es:[edi],dx
  40b0a4:	cwde   
  40b0a5:	mov    edx,0xefd55827
  40b0aa:	mov    cl,0xaf
  40b0ac:	sti    
  40b0ad:	lods   al,BYTE PTR ds:[esi]
  40b0ae:	jbe    0x40b048
  40b0b0:	xchg   ebx,eax
  40b0b1:	nop
  40b0b2:	xor    al,0xda
  40b0b4:	inc    esi
  40b0b5:	out    dx,eax
  40b0b6:	int3   
  40b0b7:	call   ecx
  40b0b9:	shl    BYTE PTR [edx-0x13],0x67
  40b0bd:	fisttp WORD PTR [esi]
  40b0bf:	retf   0xc3ab
  40b0c2:	ficom  DWORD PTR [edx-0x50]
  40b0c5:	shl    ebx,1
  40b0c7:	mov    DWORD PTR [ebp+ecx*4+0x7f6d165b],esp
  40b0ce:	jmp    0x40b08f
  40b0d0:	push   edi
  40b0d1:	cmp    eax,0xc0d371bd
  40b0d6:	mov    ebx,DWORD PTR [esi-0x29]
  40b0d9:	fs (bad) 
  40b0db:	rcl    BYTE PTR [ecx],0x83
  40b0de:	mov    dh,0x13
  40b0e0:	mov    dh,0xba
  40b0e2:	push   es
  40b0e3:	dec    ecx
  40b0e4:	jle    0x40b080
  40b0e6:	jmp    0x40b092
  40b0e8:	cmp    edx,0xab06ea5d
  40b0ee:	sub    esi,DWORD PTR ds:0x661a2575
  40b0f4:	xchg   ebp,eax
  40b0f5:	cmp    al,0x36
  40b0f7:	aaa    
  40b0f8:	hlt    
  40b0f9:	sbb    eax,DWORD PTR [eax-0x3d8c7983]
  40b0ff:	mov    ?,WORD PTR [ebp-0x24]
  40b102:	jne    0x40b08b
  40b104:	mov    al,0x59
  40b106:	loope  0x40b174
  40b108:	ss ja  0x40b08c
  40b10b:	mov    ch,0x55
  40b10d:	popa   
  40b10e:	stc    
  40b10f:	pop    esi
  40b110:	ret    
  40b111:	stos   DWORD PTR es:[edi],eax
  40b112:	sub    eax,0x7978c41e
  40b117:	push   esp
  40b118:	test   eax,0x34e07de
  40b11d:	in     al,dx
  40b11e:	fwait
  40b11f:	pop    ss
  40b120:	stos   DWORD PTR es:[edi],eax
  40b121:	invlpg BYTE PTR [ebx]
  40b124:	dec    ebx
  40b125:	stos   BYTE PTR es:[edi],al
  40b126:	mov    dl,0x45
  40b128:	(bad)  
  40b129:	mov    al,0xa4
  40b12b:	test   DWORD PTR [ebx],ebx
  40b12d:	aam    0x86
  40b12f:	in     eax,dx
  40b130:	cmp    eax,DWORD PTR [ecx+0xa]
  40b133:	(bad)  
  40b134:	shl    DWORD PTR [eax+0x3ef81e0a],cl
  40b13a:	pop    ds
  40b13b:	inc    ebp
  40b13c:	sbb    eax,0x618a6033
  40b141:	mov    ch,0x17
  40b143:	mov    ebp,DWORD PTR [ecx-0x6d8e3d0e]
  40b149:	inc    esi
  40b14a:	jbe    0x40b16e
  40b14c:	mov    eax,ds:0xaaa4974c
  40b151:	fdiv   DWORD PTR [ebx-0x6d]
  40b154:	mov    bl,0xe2
  40b156:	mov    esp,0x23fd4c5a
  40b15b:	lds    eax,FWORD PTR [ebx+ebp*8+0x30f1e980]
  40b162:	stc    
  40b163:	shl    BYTE PTR [edi-0x7b693619],0x9
  40b16a:	mov    ds:0x8ac7822c,eax
  40b16f:	add    esi,edi
  40b171:	inc    eax
  40b172:	dec    edi
  40b173:	lods   al,BYTE PTR ds:[esi]
  40b174:	cmp    DWORD PTR [ebx+0x42d9808a],ebx
  40b17a:	push   ds
  40b17b:	aas    
  40b17c:	mov    ch,0x74
  40b17e:	cmp    bh,BYTE PTR [ecx-0x5c]
  40b181:	adc    dl,BYTE PTR [edi]
  40b183:	pop    ebp
  40b184:	sbb    DWORD PTR [edi+ebx*1+0x57cd2d13],eax
  40b18b:	mul    BYTE PTR [edi-0x2c]
  40b18e:	and    eax,0x501f8807
  40b193:	pop    esp
  40b194:	retf   0xa67d
  40b197:	mov    dh,0x9d
  40b199:	mov    edi,0xc8877a28
  40b19e:	test   DWORD PTR [ebx],eax
  40b1a0:	stos   BYTE PTR es:[edi],al
  40b1a1:	push   0xc7ab85a0
  40b1a6:	imul   BYTE PTR [esi-0x71]
  40b1a9:	ret    0x305d
  40b1ac:	ss pushf 
  40b1ae:	sbb    bl,cl
  40b1b0:	mov    ds:0xc97c07f1,eax
  40b1b5:	in     al,dx
  40b1b6:	call   0x465fded8
  40b1bb:	pusha  
  40b1bc:	inc    ebx
  40b1bd:	into   
  40b1be:	in     eax,0xc0
  40b1c0:	mov    edi,0xbe10393b
  40b1c5:	cmc    
  40b1c6:	xchg   edi,eax
  40b1c7:	popa   
  40b1c8:	xor    ebx,DWORD PTR [ecx+edx*8]
  40b1cb:	in     al,dx
  40b1cc:	(bad)  
  40b1cd:	adc    al,0x74
  40b1cf:	jle    0x40b19c
  40b1d1:	imul   ecx,DWORD PTR [esi-0x6b],0x7d487808
  40b1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d9:	out    dx,al
  40b1da:	ficom  WORD PTR [ecx-0x117c0958]
  40b1e0:	mov    cl,0x52
  40b1e2:	inc    edi
  40b1e3:	fs scas eax,DWORD PTR es:[edi]
  40b1e5:	add    eax,0x4892f74
  40b1ea:	push   es
  40b1eb:	das    
  40b1ec:	sbb    edx,esp
  40b1ee:	mov    ds:0x58950fd3,eax
  40b1f3:	mov    cl,BYTE PTR ds:0xc807ef6f
  40b1f9:	fisttp QWORD PTR [edi+0x1a440ff4]
  40b1ff:	(bad)  
  40b200:	call   0xc4c404df
  40b205:	aad    0x1b
  40b207:	ret    
  40b208:	gs addr16 rol bh,1
  40b20c:	push   esp
  40b20d:	fiadd  DWORD PTR [eax-0x3d]
  40b210:	and    BYTE PTR [edx-0x27],0x82
  40b214:	mov    ecx,0x5de14c9c
  40b219:	call   0xd869:0x5bce4405
  40b220:	inc    edx
  40b221:	pushfw 
  40b223:	sub    al,0x6e
  40b225:	mov    ebp,0x5d1ad8a9
  40b22a:	mov    edi,0xcb8a4f0e
  40b22f:	jl     0x40b246
  40b231:	mov    BYTE PTR [edi-0x39e571d],dl
  40b237:	cmp    DWORD PTR [eax],esp
  40b239:	mov    ah,0x1a
  40b23b:	dec    eax
  40b23c:	jne    0x40b258
  40b23e:	(bad)  
  40b23f:	pop    esp
  40b240:	xor    eax,esp
  40b242:	jnp    0x40b28d
  40b244:	mov    dh,0x1
  40b246:	retf   0x5842
  40b249:	test   al,0x1f
  40b24b:	fnstcw WORD PTR [eax]
  40b24d:	and    edx,DWORD PTR [ecx+0x2621d9f0]
  40b253:	out    dx,al
  40b254:	mov    ch,0xc
  40b256:	clc    
  40b257:	addr16 iret 
  40b259:	stos   BYTE PTR es:[edi],al
  40b25a:	adc    al,0x74
  40b25c:	adc    BYTE PTR [esp+eiz*2+0x243d3849],0x4d
  40b264:	fisub  DWORD PTR [edi-0x72]
  40b267:	test   DWORD PTR ds:[edi-0x13],ebp
  40b26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26c:	jp     0x40b2df
  40b26e:	mov    bl,0xf3
  40b270:	js     0x40b2a6
  40b272:	adc    edx,DWORD PTR [eax+0x79]
  40b275:	push   esi
  40b276:	pop    es
  40b277:	push   cs
  40b278:	inc    eax
  40b279:	inc    ebx
  40b27a:	mov    ds:0x7c8f10c4,al
  40b27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b280:	cmp    DWORD PTR ds:0x94d3453,esp
  40b286:	ret    0xc157
  40b289:	pop    ebx
  40b28a:	push   ebp
  40b28b:	loope  0x40b2be
  40b28d:	sar    ah,cl
  40b28f:	sub    edi,DWORD PTR [edi+eiz*1+0x78]
  40b293:	inc    edi
  40b294:	addr16 (bad) 
  40b296:	xchg   ebp,eax
  40b297:	addr16 xchg ecx,eax
  40b299:	sbb    dh,ch
  40b29b:	pop    eax
  40b29c:	xchg   DWORD PTR [ebx-0x631e1c79],ebp
  40b2a2:	lds    ecx,FWORD PTR [esi]
  40b2a4:	inc    ecx
  40b2a5:	push   ss
  40b2a6:	or     eax,0x419c648f
  40b2ab:	sub    al,0x9c
  40b2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ae:	push   0x69
  40b2b0:	repnz inc edx
  40b2b2:	mov    eax,ds:0xda3777f1
  40b2b7:	clc    
  40b2b8:	mov    ?,WORD PTR [edi+ebx*8]
  40b2bb:	jbe    0x40b329
  40b2bd:	mov    ss,WORD PTR [eax-0x6e]
  40b2c0:	push   edi
  40b2c1:	pop    ebp
  40b2c2:	pop    esp
  40b2c3:	push   ebx
  40b2c4:	ds push cs
  40b2c6:	mov    BYTE PTR [ecx],dl
  40b2c8:	je     0x40b33d
  40b2ca:	idiv   DWORD PTR [ecx+ebx*2+0xa]
  40b2ce:	popf   
  40b2cf:	mov    ebp,0xc33bea28
  40b2d4:	jmp    0x40b320
  40b2d6:	xchg   BYTE PTR [edx-0x14],bl
  40b2d9:	icebp  
  40b2da:	outs   dx,BYTE PTR ds:[esi]
  40b2db:	dec    ecx
  40b2dc:	sbb    BYTE PTR ds:0x4c75b19f,dl
  40b2e2:	and    al,0xfd
  40b2e4:	dec    esi
  40b2e5:	loopne 0x40b364
  40b2e7:	hlt    
  40b2e8:	ret    0x9823
  40b2eb:	pop    esi
  40b2ec:	mov    eax,ds:0xff68e32b
  40b2f1:	pop    ebx
  40b2f2:	xchg   esp,eax
  40b2f3:	ins    BYTE PTR es:[edi],dx
  40b2f4:	cmp    eax,0xb5399ec1
  40b2f9:	and    al,0x7a
  40b2fb:	xor    al,BYTE PTR [ebp-0x4f]
  40b2fe:	fmul   DWORD PTR [ecx+ebx*1]
  40b301:	inc    edi
  40b302:	fdiv   st(1),st
  40b304:	sti    
  40b305:	xor    edx,DWORD PTR [edx-0x4688c829]
  40b30b:	and    edi,ecx
  40b30d:	sahf   
  40b30e:	jmp    FWORD PTR [edx+0x57c4d640]
  40b314:	pop    ds
  40b315:	pop    edi
  40b316:	in     al,dx
  40b317:	jns    0x40b392
  40b319:	imul   eax,DWORD PTR [esp+eiz*2-0x22],0x2449a218
  40b321:	sub    ebp,esp
  40b323:	stos   DWORD PTR es:[edi],eax
  40b324:	das    
  40b325:	pop    edi
  40b326:	sub    BYTE PTR [ecx+0x4ce1a6e0],0x2b
  40b32d:	cmp    BYTE PTR [esi-0x5cc44a71],0xf5
  40b334:	imul   edx,DWORD PTR [ebp-0x432f15b],0xfffffff0
  40b33b:	aaa    
  40b33c:	fst    st(6)
  40b33e:	out    dx,al
  40b33f:	stos   BYTE PTR es:[edi],al
  40b340:	add    al,0xce
  40b342:	mov    ds:0x140f3aa4,al
  40b347:	mov    ds,WORD PTR [ecx]
  40b349:	push   edi
  40b34a:	(bad)  
  40b34b:	(bad)  
  40b34c:	mov    esi,0x21ab78d
  40b351:	mov    cl,0xfb
  40b353:	popf   
  40b354:	mov    esi,0xc97f4f4a
  40b359:	xchg   DWORD PTR [edi-0x3638591],ecx
  40b35f:	cmp    dh,ch
  40b361:	rol    DWORD PTR [esi-0x5d6be521],cl
  40b367:	mov    ds,WORD PTR [ecx-0x20dd974]
  40b36d:	lock pop esi
  40b36f:	add    DWORD PTR [eax+0x67],edx
  40b372:	inc    edx
  40b373:	pop    ss
  40b374:	retf   0x17df
  40b377:	les    ecx,FWORD PTR [edi-0x6d0c9c]
  40b37d:	or     BYTE PTR [esi+0x7a],ch
  40b380:	fcomip st,st(6)
  40b382:	pop    ds
  40b383:	adc    dl,BYTE PTR [ebx-0x62710a18]
  40b389:	mov    al,0xc0
  40b38b:	loope  0x40b365
  40b38d:	cmp    DWORD PTR [ebp+0x4f0fbfba],eax
  40b393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b394:	jnp    0x40b33d
  40b396:	test   al,0xdc
  40b398:	outs   dx,BYTE PTR ds:[esi]
  40b399:	sbb    al,BYTE PTR [eax+eiz*1-0x1]
  40b39d:	enter  0xf994,0xe4
  40b3a1:	mov    al,0x67
  40b3a3:	in     eax,0xeb
  40b3a5:	mov    ebx,0x850fdb65
  40b3aa:	adc    eax,0xc09cfcff
  40b3af:	ja     0x40b428
  40b3b1:	ss out 0xfb,eax
  40b3b4:	xchg   esp,eax
  40b3b5:	pushf  
  40b3b6:	lds    edx,FWORD PTR [edx-0x78]
  40b3b9:	or     ch,bh
  40b3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3bc:	or     cl,BYTE PTR [eax-0x7e]
  40b3bf:	nop
  40b3c0:	fcomp  QWORD PTR [eax+eiz*2+0x63]
  40b3c4:	mov    ch,0xa1
  40b3c6:	dec    ebx
  40b3c7:	mov    ecx,0xe4846109
  40b3cc:	popa   
  40b3cd:	neg    DWORD PTR [edi+0x75]
  40b3d0:	aaa    
  40b3d1:	pushf  
  40b3d2:	fist   DWORD PTR [edi]
  40b3d4:	push   ss
  40b3d5:	adc    BYTE PTR [eax+0x1590c025],bh
  40b3db:	fs cwde 
  40b3dd:	xor    eax,0x95cc250e
  40b3e2:	adc    al,0xad
  40b3e4:	mov    bh,0x5d
  40b3e6:	leave  
  40b3e7:	in     eax,0x97
  40b3e9:	fucom  st(4)
  40b3eb:	fnstsw ax
  40b3ed:	fild   DWORD PTR [edi+0x7e]
  40b3f0:	mov    esi,ss
  40b3f2:	icebp  
  40b3f3:	ficom  WORD PTR [eax+0x8cc8e2a]
  40b3f9:	adc    ebp,DWORD PTR [ecx-0xb]
  40b3fc:	or     edi,DWORD PTR [esi+0x7063ec85]
  40b402:	stos   BYTE PTR es:[edi],al
  40b403:	fimul  WORD PTR [eax+edx*2+0x3d]
  40b407:	xor    eax,0x5daceb43
  40b40c:	and    bh,dh
  40b40e:	adc    eax,0xdad6fe5a
  40b413:	inc    esi
  40b414:	cmp    DWORD PTR [ebx-0x66f07287],ecx
  40b41a:	sbb    DWORD PTR [eax+ecx*1-0x2f],edi
  40b41e:	mov    cl,BYTE PTR [edi+0x51c2b7e0]
  40b424:	mov    esi,ecx
  40b426:	rcr    BYTE PTR [eax-0x25ca2a14],cl
  40b42c:	mov    esp,es
  40b42e:	inc    esp
  40b42f:	and    ah,dh
  40b431:	cld    
  40b432:	xchg   ebx,eax
  40b433:	inc    esi
  40b434:	mov    WORD PTR [edi+0x36],ss
  40b437:	pop    edi
  40b438:	test   BYTE PTR [ebp+0x11],al
  40b43b:	jne    0x40b3e4
  40b43d:	bound  ebx,QWORD PTR [ebx+0x3d]
  40b440:	inc    esi
  40b441:	or     eax,0xd6669705
  40b446:	pushf  
  40b447:	push   eax
  40b448:	cmp    cl,ch
  40b44a:	cdq    
  40b44b:	push   0x29
  40b44d:	sub    esp,DWORD PTR [ecx+0x36]
  40b450:	outs   dx,BYTE PTR ds:[esi]
  40b451:	inc    ebx
  40b452:	add    BYTE PTR ds:0x832276a0,bh
  40b458:	cmp    ebx,DWORD PTR [ebp*8+0x4737732]
  40b45f:	cmp    DWORD PTR [edi],ebp
  40b461:	push   ebx
  40b462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b463:	and    DWORD PTR [esi+0x41],ebp
  40b466:	pop    ds
  40b467:	xchg   ecx,eax
  40b468:	push   ebp
  40b469:	pop    ebp
  40b46a:	adc    DWORD PTR [edx],edx
  40b46c:	fmul   DWORD PTR [edi+0x26]
  40b46f:	pop    edx
  40b470:	pop    ss
  40b471:	xor    dl,BYTE PTR [ebx-0x6c]
  40b474:	ds jns 0x40b3fd
  40b477:	out    0xf0,eax
  40b479:	loope  0x40b47c
  40b47b:	int    0xd1
  40b47d:	nop
  40b47e:	imul   edx,DWORD PTR [edx-0x3bab5198],0xffffff82
  40b485:	xchg   BYTE PTR [edx-0x3c],ah
  40b488:	lea    esp,[ecx+edi*4+0x64]
  40b48c:	hlt    
  40b48d:	mov    esi,0x95c0c690
  40b492:	pop    esp
  40b493:	sti    
  40b494:	out    0xb8,al
  40b496:	adc    al,0x0
  40b498:	inc    ebx
  40b499:	dec    edi
  40b49a:	ret    0x8852
  40b49d:	test   ebp,ebp
  40b49f:	mov    eax,0x433db496
  40b4a4:	dec    ebp
  40b4a5:	cwde   
  40b4a6:	popf   
  40b4a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4a8:	pop    esp
  40b4a9:	pop    edi
  40b4aa:	int    0x65
  40b4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ad:	push   esi
  40b4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4af:	cmc    
  40b4b0:	repnz add eax,DWORD PTR [ecx-0x2146cfe1]
  40b4b7:	out    dx,eax
  40b4b8:	mov    bh,0xe9
  40b4ba:	adc    dl,BYTE PTR [eax-0x42]
  40b4bd:	add    ch,0x87
  40b4c0:	mov    dh,BYTE PTR [ebx-0xcebbcbb]
  40b4c6:	xor    al,0x91
  40b4c8:	imul   edi,DWORD PTR [ebp+0x22aa0cc4],0xffffffe2
  40b4cf:	or     DWORD PTR [eax],0x685576a7
  40b4d5:	sahf   
  40b4d6:	mov    WORD PTR [edi+eiz*4+0x5d],gs
  40b4da:	or     dh,BYTE PTR [esi+0x1e]
  40b4dd:	pop    edi
  40b4de:	test   al,0x64
  40b4e0:	xchg   esp,eax
  40b4e1:	clc    
  40b4e2:	je     0x40b4ae
  40b4e4:	cld    
  40b4e5:	lds    esi,FWORD PTR ds:0x6850dc9e
  40b4eb:	push   cs
  40b4ec:	cmc    
  40b4ed:	mov    ds:0xeb48f465,eax
  40b4f2:	fdivp  st(5),st
  40b4f4:	xor    al,al
  40b4f6:	or     eax,0x7ca10993
  40b4fb:	inc    edx
  40b4fc:	mov    dl,0x8
  40b4fe:	out    dx,al
  40b4ff:	bnd jle 0x40b4e0
  40b502:	dec    ebp
  40b503:	(bad)
  40b506:	scas   al,BYTE PTR es:[edi]
  40b507:	push   edx
  40b508:	or     al,0x61
  40b50a:	jmp    0xabc8e03a
  40b50f:	pop    ebx
  40b510:	sub    dh,bl
  40b512:	xchg   ebx,eax
  40b513:	jbe    0x40b4d4
  40b515:	mov    dl,0x5d
  40b517:	enter  0x68a3,0x89
  40b51b:	sahf   
  40b51c:	jo     0x40b598
  40b51e:	mov    al,BYTE PTR [eax+eiz*1-0x97ad27a]
  40b525:	mov    dl,0x62
  40b527:	mov    ebp,0xb6cb357a
  40b52c:	enter  0xbf3c,0xa4
  40b530:	mov    al,ds:0x5d4e18e2
  40b535:	scas   eax,DWORD PTR es:[edi]
  40b536:	cdq    
  40b537:	(bad)  
  40b538:	hlt    
  40b539:	xor    eax,0x9d6287f3
  40b53e:	mov    ch,0xf3
  40b540:	(bad)  
  40b542:	pop    edx
  40b543:	mov    esi,esp
  40b545:	out    0xa1,eax
  40b547:	adc    ah,BYTE PTR [eax+eiz*2-0xf0fc23d]
  40b54e:	aam    0xf9
  40b550:	inc    esp
  40b551:	hlt    
  40b552:	mov    esp,0xc8b57926
  40b557:	imul   ebp,esp,0xffffff8d
  40b55a:	(bad)  
  40b55b:	xor    eax,0x794632ff
  40b560:	mov    ah,0x7e
  40b562:	xchg   esi,eax
  40b563:	ja     0x40b55b
  40b565:	hlt    
  40b566:	(bad)  
  40b568:	jnp    0x40b5ba
  40b56a:	mov    ebx,0xafef4d06
  40b56f:	pop    esp
  40b570:	fiadd  DWORD PTR [ecx+0xd02b8da]
  40b576:	sub    eax,0xbdc6ce7a
  40b57b:	mov    ah,0x22
  40b57d:	in     al,0x4b
  40b57f:	fidiv  WORD PTR cs:[ebx+0x5b]
  40b583:	xchg   ecx,eax
  40b584:	es xor eax,0xdb5d84f1
  40b58a:	out    dx,eax
  40b58b:	mov    bl,0x55
  40b58d:	mov    ds:0x3a98ac89,eax
  40b592:	leave  
  40b593:	dec    ebx
  40b594:	pop    ecx
  40b595:	call   0xfdc5:0xab1b6a60
  40b59c:	xor    al,0xc
  40b59e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b59f:	cli    
  40b5a0:	aaa    
  40b5a1:	sub    dh,BYTE PTR [edx]
  40b5a3:	icebp  
  40b5a4:	mov    esi,0xb77cbd8e
  40b5a9:	lds    edi,FWORD PTR [ebp+0x6a64b5cb]
  40b5af:	into   
  40b5b0:	mov    ds:0xf126103f,al
  40b5b5:	shl    DWORD PTR [edx-0x33],0xee
  40b5b9:	imul   ebx,DWORD PTR [ecx+0x6c4bab80],0xe1758c4f
  40b5c3:	call   0x13ca:0x8f3aada5
  40b5ca:	jo     0x40b5c0
  40b5cc:	dec    ebx
  40b5cd:	inc    ecx
  40b5ce:	cld    
  40b5cf:	sahf   
  40b5d0:	xor    al,0xe3
  40b5d2:	dec    ebx
  40b5d3:	mov    gs,WORD PTR [eax+0x3a]
  40b5d6:	dec    eax
  40b5d7:	mov    al,al
  40b5d9:	cmp    BYTE PTR [ecx+ebx*1],0x90
  40b5dd:	cmp    ecx,eax
  40b5df:	inc    eax
  40b5e0:	retf   0x144e
  40b5e3:	mov    cl,0xeb
  40b5e5:	mov    ?,WORD PTR [ebp-0x5a]
  40b5e8:	pop    edi
  40b5e9:	into   
  40b5ea:	(bad)  [eax]
  40b5ec:	mov    ecx,0x6d9ae9b5
  40b5f1:	cwde   
  40b5f2:	stc    
  40b5f3:	xor    al,0x38
  40b5f5:	mov    edi,0x4ba42aa4
  40b5fa:	xor    dh,ch
  40b5fc:	dec    ebx
  40b5fd:	fucom  st(2)
  40b5ff:	ins    BYTE PTR es:[edi],dx
  40b600:	in     eax,0x86
  40b602:	int3   
  40b603:	out    0x74,eax
  40b605:	stos   DWORD PTR es:[edi],eax
  40b606:	xor    ah,bl
  40b608:	pop    esi
  40b609:	cmp    cx,si
  40b60c:	bound  eax,QWORD PTR [ecx-0x1b117f5c]
  40b612:	ja     0x40b5a6
  40b614:	pop    ecx
  40b615:	aaa    
  40b616:	jb     0x40b675
  40b618:	jae    0x40b65f
  40b61a:	xchg   esi,eax
  40b61b:	xor    cl,BYTE PTR [edx+0x53]
  40b61e:	mov    al,ds:0xa96aeef7
  40b623:	shl    BYTE PTR [ebx],1
  40b625:	jno    0x40b6a5
  40b627:	pop    ds
  40b628:	imul   esi,DWORD PTR [esi],0x62f0b312
  40b62e:	cwde   
  40b62f:	push   esi
  40b630:	add    dl,BYTE PTR [ecx+0x6f]
  40b633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b634:	repnz xor DWORD PTR [eax+0x7e],ebp
  40b638:	mov    esi,DWORD PTR [ebp+0x2c]
  40b63b:	in     eax,dx
  40b63c:	push   ebp
  40b63d:	loop   0x40b68a
  40b63f:	ret    
  40b640:	mov    DWORD PTR [edx-0x44],ecx
  40b643:	repnz adc al,0x32
  40b646:	stos   DWORD PTR es:[edi],eax
  40b647:	inc    edi
  40b648:	test   eax,0x1aa64b8f
  40b64d:	xchg   BYTE PTR [ecx],ch
  40b64f:	dec    eax
  40b650:	mov    ebx,0xc7c616e1
  40b655:	popa   
  40b656:	popa   
  40b657:	pop    esi
  40b658:	jle    0x40b6a5
  40b65a:	mov    ah,0x12
  40b65c:	cmp    ah,BYTE PTR [ebx]
  40b65e:	into   
  40b65f:	stos   DWORD PTR es:[edi],eax
  40b660:	or     BYTE PTR [edx],0xd0
  40b663:	pop    edi
  40b664:	arpl   bx,bp
  40b666:	push   ebp
  40b667:	mov    edi,0x4fd5e997
  40b66c:	jne    0x40b5f5
  40b66e:	pop    ds
  40b66f:	mov    edx,DWORD PTR [esi+0x5703cdc1]
  40b675:	loop   0x40b66a
  40b677:	test   DWORD PTR [edx+ebx*1+0x48],ebx
  40b67b:	xor    BYTE PTR [edx-0x3e66ee5e],0x67
  40b682:	pop    ds
  40b683:	leave  
  40b684:	mov    bh,0xbf
  40b686:	mov    ecx,0xb2218e07
  40b68b:	fstp   DWORD PTR [edi]
  40b68d:	test   eax,0x2dc2a17c
  40b692:	mov    bh,0xeb
  40b694:	(bad)  
  40b695:	mov    edx,0xc0559d1
  40b69a:	fwait
  40b69b:	or     DWORD PTR [ecx-0x46e9f52f],0xfefe884
  40b6a5:	pushf  
  40b6a6:	es dec ecx
  40b6a8:	loope  0x40b686
  40b6aa:	sub    DWORD PTR [esi-0x3c62a31d],esp
  40b6b0:	addr16 dec ebp
  40b6b2:	fbld   TBYTE PTR [ebp+eax*2-0x7b43957c]
  40b6b9:	mov    edx,0x3c5321eb
  40b6be:	addr16 push ebx
  40b6c0:	ret    
  40b6c1:	dec    ebp
  40b6c2:	scas   ax,WORD PTR es:[edi]
  40b6c4:	fld    DWORD PTR [ebx-0x10eb3d5c]
  40b6ca:	std    
  40b6cb:	scas   al,BYTE PTR es:[edi]
  40b6cc:	mov    dh,0x2f
  40b6ce:	ins    DWORD PTR es:[edi],dx
  40b6cf:	dec    esi
  40b6d0:	jbe    0x40b700
  40b6d2:	sar    DWORD PTR [esi-0x2857be7],1
  40b6d8:	rol    esp,cl
  40b6da:	sbb    eax,0x94d291d1
  40b6df:	inc    edi
  40b6e0:	mov    edx,0x1d1fea12
  40b6e5:	ins    BYTE PTR es:[edi],dx
  40b6e6:	push   0x8926292b
  40b6eb:	push   ebx
  40b6ec:	loope  0x40b66f
  40b6ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ef:	pop    ebx
  40b6f0:	jno    0x40b74e
  40b6f2:	jno    0x40b71c
  40b6f4:	push   esp
  40b6f5:	pop    ecx
  40b6f6:	sub    BYTE PTR [edi-0x384caecd],0x2f
  40b6fd:	hlt    
  40b6fe:	xor    eax,0xfa48d9b3
  40b703:	(bad)  
  40b704:	pop    ebp
  40b705:	out    0xa8,eax
  40b707:	aaa    
  40b708:	pusha  
  40b709:	cwde   
  40b70a:	xlat   BYTE PTR ds:[ebx]
  40b70c:	dec    edx
  40b70d:	data16 repnz sbb BYTE PTR [ebx],cl
  40b711:	cwde   
  40b712:	adc    ch,BYTE PTR [ebx+ebx*8-0x1f]
  40b716:	in     eax,0xa
  40b718:	lahf   
  40b719:	jno    0x40b6a7
  40b71b:	or     DWORD PTR [ebx+eax*8+0x17],ecx
  40b71f:	push   0xffffffb5
  40b721:	dec    esp
  40b722:	push   ss
  40b723:	push   ss
  40b724:	enter  0x4063,0xb5
  40b728:	push   0x63b201b2
  40b72d:	outs   dx,DWORD PTR ds:[esi]
  40b72e:	out    0x49,eax
  40b730:	test   ebx,edi
  40b732:	xchg   ebx,eax
  40b733:	cmp    DWORD PTR [eax],0x6fe60648
  40b739:	adc    bl,bl
  40b73b:	call   0xa5212cc
  40b740:	xor    al,0x79
  40b742:	sub    al,0x50
  40b744:	shufps xmm3,xmm1,0xac
  40b748:	sbb    edi,esi
  40b74a:	shl    BYTE PTR [edx-0x7c9bbba3],cl
  40b750:	pop    eax
  40b751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b752:	rol    BYTE PTR [ebx],1
  40b754:	xchg   ebp,eax
  40b755:	test   BYTE PTR ss:[esp+eax*1+0x1c],al
  40b75a:	bound  ebp,QWORD PTR [edx-0x5af495f3]
  40b760:	cmp    al,0x82
  40b762:	xchg   edx,eax
  40b763:	or     al,0x58
  40b765:	jl     0x40b6f3
  40b767:	inc    ecx
  40b768:	test   eax,0x9bdc3d45
  40b76d:	inc    ebp
  40b76e:	dec    esi
  40b76f:	ins    BYTE PTR es:[edi],dx
  40b770:	dec    edx
  40b771:	push   edx
  40b772:	aam    0xff
  40b774:	cs add al,0xf4
  40b777:	jmp    0x40b78f
  40b779:	es and eax,0x84e088b6
  40b77f:	mov    bp,0x90a2
  40b783:	sahf   
  40b784:	mov    esp,0x7f344b30
  40b789:	mov    edi,0xcf21ebce
  40b78e:	retf   0x8705
  40b791:	jne    0x40b755
  40b793:	lea    edi,[edi-0x33347aea]
  40b799:	mov    ebx,0x7d917647
  40b79e:	xlat   BYTE PTR ds:[ebx]
  40b79f:	daa    
  40b7a0:	xor    eax,0xe5b1ee92
  40b7a5:	dec    BYTE PTR ds:0x5e053d1f
  40b7ab:	jmp    FWORD PTR [ebx+0x3a]
  40b7ae:	fbld   TBYTE PTR [eax]
  40b7b0:	inc    edi
  40b7b1:	fistp  WORD PTR [edx-0x43]
  40b7b4:	push   edx
  40b7b5:	inc    eax
  40b7b6:	jno    0x40b745
  40b7b8:	push   ebp
  40b7b9:	mov    ecx,0xde1dc429
  40b7be:	cmp    BYTE PTR [ebx-0x14b8eba8],dl
  40b7c4:	jns    0x40b7ea
  40b7c6:	gs and eax,0x7bd99ab7
  40b7cc:	shl    bx,1
  40b7cf:	test   al,0x12
  40b7d1:	cmp    BYTE PTR [esp+ebx*8+0x1a668ee0],al
  40b7d8:	nop
  40b7d9:	sbb    ebx,esi
  40b7db:	cmp    BYTE PTR [ebx+0x1f],bl
  40b7de:	loope  0x40b7e9
  40b7e0:	inc    eax
  40b7e1:	cmp    al,0xac
  40b7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e4:	mov    ebx,0xc6c41bcf
  40b7e9:	aad    0xb4
  40b7eb:	(bad)  
  40b7ed:	fidiv  DWORD PTR [ebx+ecx*1]
  40b7f0:	(bad)  
  40b7f1:	inc    DWORD PTR ds:0x9fc95e45
  40b7f7:	mov    al,ds:0x392ceb89
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	mov    ds:0x4b175bc1,al
  40b802:	sub    eax,0xccc5f759
  40b807:	xchg   edi,eax
  40b808:	jo     0x40b83b
  40b80a:	cmp    eax,0xadffb79c
  40b80f:	jg     0x40b84c
  40b811:	pop    es
  40b812:	and    dl,bh
  40b814:	jg     0x40b7c5
  40b816:	pop    ds
  40b817:	pop    esi
  40b818:	daa    
  40b819:	imul   ebp,DWORD PTR [ebx+0x4d],0x24
  40b81d:	jmp    0x5359c73f
  40b822:	sbb    BYTE PTR [esi-0x6b],dl
  40b825:	push   cs
  40b826:	mov    ah,0xe8
  40b828:	push   ds
  40b829:	dec    edx
  40b82a:	jns    0x40b812
  40b82c:	out    0xe6,al
  40b82e:	sbb    BYTE PTR [edx+0x14],bl
  40b831:	cli    
  40b832:	(bad)  
  40b834:	dec    edx
  40b835:	mov    bl,0xf0
  40b837:	jno    0x40b806
  40b839:	je     0x40b88c
  40b83b:	adc    esp,DWORD PTR [esi]
  40b83d:	or     eax,0x489f9c82
  40b842:	cmp    bl,dl
  40b844:	stos   DWORD PTR es:[edi],eax
  40b845:	gs push edx
  40b847:	xor    eax,0xc2498791
  40b84c:	adc    DWORD PTR [edi],esi
  40b84e:	mov    edi,0x4f0703e7
  40b853:	jecxz  0x40b821
  40b855:	pop    es
  40b856:	lea    esp,[eax+edi*4]
  40b859:	call   0x1cbd:0x28b2dcbe
  40b860:	icebp  
  40b861:	mov    esp,DWORD PTR [ebx+0x41]
  40b864:	xor    DWORD PTR [edi+0xdc3e304],edx
  40b86a:	stos   DWORD PTR es:[edi],eax
  40b86b:	stc    
  40b86c:	jns    0x40b8c4
  40b86e:	xchg   BYTE PTR [esi],bh
  40b870:	jb     0x40b807
  40b872:	xchg   ecx,eax
  40b873:	xchg   edi,esi
  40b875:	inc    ecx
  40b876:	sub    BYTE PTR [ecx+eiz*4],al
  40b879:	mov    eax,ds:0x1f7169de
  40b87e:	cmc    
  40b87f:	cwde   
  40b880:	ss loop 0x40b87e
  40b883:	mov    BYTE PTR [ebx+0x3],bh
  40b886:	jo     0x40b849
  40b888:	in     al,0xea
  40b88a:	pop    ecx
  40b88b:	(bad)  
  40b88c:	push   ebx
  40b88d:	ds ja  0x40b834
  40b890:	and    dl,BYTE PTR [eax]
  40b892:	neg    DWORD PTR [edx-0x2192c837]
  40b898:	add    esp,0xffffffa1
  40b89b:	jmp    0x40b8b4
  40b89d:	popf   
  40b89e:	(bad)  
  40b89f:	out    0xf,eax
  40b8a1:	mov    eax,ds:0xd48ff34a
  40b8a6:	jge    0x40b851
  40b8a8:	inc    esp
  40b8a9:	xor    eax,0x5453730b
  40b8ae:	sahf   
  40b8af:	xor    eax,0x7e6aa394
  40b8b4:	inc    ecx
  40b8b5:	sub    eax,0x89af15d9
  40b8ba:	leave  
  40b8bb:	dec    edi
  40b8bc:	test   DWORD PTR [edx-0xe7341b5],0xe73ac616
  40b8c6:	popa   
  40b8c7:	gs xor al,0x36
  40b8ca:	cmp    BYTE PTR [ecx+0x25],bl
  40b8cd:	fst    QWORD PTR [edx]
  40b8cf:	fimul  WORD PTR [eax+edx*1]
  40b8d2:	jmp    0x3ab9dd10
  40b8d7:	shr    edi,1
  40b8d9:	or     DWORD PTR [esi+edx*2+0x4c],0x61
  40b8de:	pop    esp
  40b8df:	shl    DWORD PTR [edi],0xaa
  40b8e2:	fs repz retf 
  40b8e5:	mov    ds:0x62418617,eax
  40b8ea:	mov    bl,0x84
  40b8ec:	xchg   DWORD PTR [eax+esi*1-0x604fc314],edx
  40b8f3:	push   es
  40b8f4:	ja     0x40b8ed
  40b8f6:	xor    bh,BYTE PTR [edx]
  40b8f8:	pop    esp
  40b8f9:	ret    
  40b8fa:	mov    bh,0x20
  40b8fc:	js     0x40b965
  40b8fe:	mov    bl,0xb0
  40b900:	mov    dl,0xb9
  40b902:	enter  0x4d6e,0xe2
  40b906:	cmp    eax,edi
  40b908:	xchg   esp,eax
  40b909:	sub    al,0x9e
  40b90b:	in     eax,0x5b
  40b90d:	add    esi,esi
  40b90f:	popa   
  40b910:	cmp    BYTE PTR [ecx],cl
  40b912:	and    edi,esi
  40b914:	mov    WORD PTR [esi],?
  40b916:	adc    BYTE PTR [eax-0x11],al
  40b919:	mov    edi,0xf1e9e9be
  40b91e:	test   DWORD PTR [ecx+ecx*2+0x26],esp
  40b922:	dec    eax
  40b923:	jmp    0xccb0e2f
  40b928:	or     eax,0x6ba4330c
  40b92d:	lock out 0x4c,al
  40b930:	ss pop esp
  40b932:	sbb    BYTE PTR [ebx+0xc35d8d2],ch
  40b938:	mov    edi,0x82f99975
  40b93d:	sub    esi,eax
  40b93f:	inc    ecx
  40b940:	das    
  40b941:	call   0xb29e:0x36008fe9
  40b948:	shl    DWORD PTR [edi],1
  40b94a:	dec    ebp
  40b94b:	mov    cl,0x21
  40b94d:	push   edi
  40b94e:	(bad)  
  40b94f:	stos   DWORD PTR es:[edi],eax
  40b950:	cmp    bh,bh
  40b952:	imul   esp,DWORD PTR [esi+0x7c],0x892819e
  40b959:	push   0xda6f6ce0
  40b95e:	and    al,0xe5
  40b960:	jge    0x40b9af
  40b962:	add    BYTE PTR [edx-0x3a],cl
  40b965:	dec    esi
  40b966:	in     eax,0xd
  40b968:	dec    ebx
  40b969:	mov    ds:0xdb1a049b,eax
  40b96e:	hlt    
  40b96f:	push   ds
  40b970:	loop   0x40b8f6
  40b972:	shr    BYTE PTR [eax+0x58],1
  40b975:	mov    ebp,0xd187a9f6
  40b97a:	xor    DWORD PTR [edi+ebp*8],esp
  40b97d:	ret    
  40b97e:	iret   
  40b97f:	add    al,0x95
  40b981:	inc    esi
  40b982:	int    0xf2
  40b984:	(bad)  
  40b985:	out    dx,al
  40b986:	pop    esi
  40b987:	mov    al,ds:0xa2202485
  40b98c:	xor    eax,0xe589505e
  40b991:	mov    ds:0x13ec8769,eax
  40b996:	push   0x951baf2d
  40b99b:	out    dx,eax
  40b99c:	jnp    0x40b9af
  40b99e:	enter  0xa29,0x2b
  40b9a2:	stc    
  40b9a3:	inc    esi
  40b9a4:	mov    dl,BYTE PTR [edi]
  40b9a6:	add    edx,DWORD PTR [ebx-0x262d9be1]
  40b9ac:	pop    ebx
  40b9ad:	push   0x26
  40b9af:	jge    0x40ba30
  40b9b1:	jecxz  0x40b9f8
  40b9b3:	(bad)  
  40b9b5:	jmp    0xce2c1d82
  40b9ba:	push   esi
  40b9bb:	(bad)  
  40b9bc:	int3   
  40b9bd:	ins    DWORD PTR es:[edi],dx
  40b9be:	movsx  ebx,WORD PTR [eax+edx*2+0x4]
  40b9c3:	test   DWORD PTR [esi+esi*4+0x5f311f5f],eax
  40b9ca:	inc    ebx
  40b9cb:	sbb    edx,ebp
  40b9cd:	mov    ch,0xf7
  40b9cf:	test   BYTE PTR [esp+ebx*1+0x1c248644],bl
  40b9d6:	sub    cl,BYTE PTR [ecx+0x63ba2578]
  40b9dc:	dec    edi
  40b9dd:	ret    
  40b9de:	test   eax,0xd9ae1bf4
  40b9e3:	imul   ecx,DWORD PTR [edx],0x4f
  40b9e6:	stc    
  40b9e7:	stos   BYTE PTR es:[edi],al
  40b9e8:	aaa    
  40b9e9:	xlat   BYTE PTR ds:[ebx]
  40b9ea:	mov    cl,0x2a
  40b9ec:	call   0x2b14:0xd8c7
  40b9f2:	jne    0x40ba19
  40b9f4:	mov    esp,0x1d4da325
  40b9f9:	in     eax,dx
  40b9fa:	in     al,0xe1
  40b9fc:	sub    al,0x8d
  40b9fe:	dec    esp
  40b9ff:	into   
  40ba00:	mov    edi,0x7d2065e2
  40ba05:	push   ebx
  40ba06:	lods   al,BYTE PTR ds:[esi]
  40ba07:	imul   eax,DWORD PTR [eax],0x69
  40ba0a:	ret    0x35d2
  40ba0d:	outs   dx,DWORD PTR ds:[esi]
  40ba0e:	fiadd  DWORD PTR [edx+0x184732d0]
  40ba14:	in     al,0x4f
  40ba16:	repnz (bad) 
  40ba18:	or     eax,0x16099d12
  40ba1d:	fld    DWORD PTR [edx]
  40ba1f:	xchg   edi,eax
  40ba20:	hlt    
  40ba21:	in     al,0x27
  40ba23:	test   al,al
  40ba25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba26:	dec    esi
  40ba27:	sti    
  40ba28:	call   0xeacf:0x2d19d31b
  40ba2f:	gs adc dl,0xbe
  40ba33:	or     BYTE PTR [edi+0x49ad9e64],bl
  40ba39:	xchg   BYTE PTR [esi-0x6e1b6739],bh
  40ba3f:	std    
  40ba40:	call   0x555b:0x54886838
  40ba47:	add    BYTE PTR [edx+0x30],cl
  40ba4a:	pop    edx
  40ba4b:	inc    esi
  40ba4c:	(bad)  
  40ba4e:	mov    al,0x49
  40ba50:	dec    ebp
  40ba51:	hlt    
  40ba52:	or     al,0xcb
  40ba54:	mov    bl,0xb4
  40ba56:	dec    eax
  40ba57:	repz ret 
  40ba59:	cli    
  40ba5a:	add    DWORD PTR [edi],esp
  40ba5c:	fwait
  40ba5d:	sbb    ah,BYTE PTR [edi+0x3f]
  40ba60:	cmp    eax,0xa58fc5e7
  40ba65:	sub    ecx,DWORD PTR [esi-0x7b3b5403]
  40ba6b:	pop    es
  40ba6c:	inc    edx
  40ba6d:	arpl   WORD PTR [eax-0x44],ax
  40ba70:	add    bh,BYTE PTR [ebp+0x5968041c]
  40ba76:	mov    al,0xa9
  40ba78:	aam    0x87
  40ba7a:	jp     0x40ba48
  40ba7c:	out    dx,eax
  40ba7d:	cmp    cl,cl
  40ba7f:	sti    
  40ba80:	mov    DWORD PTR [edx-0x78],eax
  40ba83:	mov    al,ds:0x6c14a1f
  40ba88:	or     ebx,esp
  40ba8a:	xchg   ebx,eax
  40ba8b:	sbb    eax,0x19634e96
  40ba90:	adc    edi,esi
  40ba92:	inc    eax
  40ba93:	mov    esi,0x283f6968
  40ba98:	xor    BYTE PTR [ebx+esi*2-0x1096c178],al
  40ba9f:	(bad)  
  40baa0:	xor    esp,edx
  40baa2:	or     eax,0x607f9ed9
  40baa7:	addr16 add eax,0x4455632c
  40baad:	test   DWORD PTR [ecx+0x3e],0x8ffe60c6
  40bab4:	cwde   
  40bab5:	push   ds
  40bab6:	xchg   ebp,eax
  40bab7:	dec    esp
  40bab8:	push   0xffffffc3
  40baba:	test   BYTE PTR [edi+ebx*2+0x14],ch
  40babe:	pop    ecx
  40babf:	xchg   ecx,eax
  40bac0:	icebp  
  40bac1:	sbb    eax,0x864375
  40bac6:	jne    0x40bb0d
  40bac8:	pusha  
  40bac9:	lds    edx,FWORD PTR ds:0x5139d585
  40bacf:	mov    cs,WORD PTR fs:[ebx-0x1]
  40bad3:	mov    al,ds:0x32b52147
  40bad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad9:	mov    ecx,0x9e5ac111
  40bade:	dec    ecx
  40badf:	loopne 0x40bb16
  40bae1:	test   BYTE PTR [ebx],dl
  40bae3:	bound  edi,QWORD PTR [ecx+0x7fea58b]
  40bae9:	js     0x40bac2
  40baeb:	mov    ecx,0x4598762f
  40baf0:	jbe    0x40bae2
  40baf2:	pop    ss
  40baf3:	xor    eax,DWORD PTR [edi]
  40baf5:	sti    
  40baf6:	dec    ecx
  40baf7:	mov    bl,0x5
  40baf9:	xchg   esi,eax
  40bafa:	push   es
  40bafb:	iret   
  40bafc:	sti    
  40bafd:	sbb    BYTE PTR [esi+ebp*8],dl
  40bb00:	(bad)  
  40bb02:	shl    ch,cl
  40bb04:	scas   eax,DWORD PTR es:[edi]
  40bb05:	xchg   BYTE PTR [ebx+0x41a2bd7e],al
  40bb0b:	push   cs
  40bb0c:	xchg   edx,eax
  40bb0d:	fs xchg ebp,eax
  40bb0f:	loopne 0x40bb22
  40bb11:	int3   
  40bb12:	repnz (bad) [ecx]
  40bb15:	or     ecx,DWORD PTR [ebp+0x6a]
  40bb18:	xchg   ebx,eax
  40bb19:	dec    esi
  40bb1a:	xchg   ebx,eax
  40bb1b:	pop    esi
  40bb1c:	jnp    0x40bb63
  40bb1e:	rsqrtps xmm5,xmm0
  40bb21:	add    DWORD PTR [eax],0x64
  40bb24:	inc    ebp
  40bb25:	out    0x12,al
  40bb27:	scas   al,BYTE PTR es:[edi]
  40bb28:	inc    ebx
  40bb29:	out    0x98,al
  40bb2b:	repz rcl DWORD PTR [edi-0x8],0x72
  40bb30:	sti    
  40bb31:	push   ebp
  40bb32:	iret   
  40bb33:	cmp    DWORD PTR [ebx+0x4d64fcb9],edx
  40bb39:	dec    esp
  40bb3a:	mov    ds:0x8d2917f6,al
  40bb3f:	in     al,dx
  40bb40:	mov    ebp,0xea9428a0
  40bb45:	ins    BYTE PTR es:[edi],dx
  40bb46:	in     eax,0x2b
  40bb48:	pop    ecx
  40bb49:	pop    esp
  40bb4a:	dec    ebp
  40bb4b:	adc    DWORD PTR [eax-0x278ef352],eax
  40bb51:	outs   dx,DWORD PTR ds:[esi]
  40bb52:	mov    dh,0xc3
  40bb54:	pushf  
  40bb55:	dec    ebp
  40bb56:	dec    ebx
  40bb57:	xchg   DWORD PTR [edi+ecx*4-0x66],esp
  40bb5b:	add    BYTE PTR [esp+ebx*2+0x42956405],0x59
  40bb63:	retf   0x398
  40bb66:	sbb    al,0x66
  40bb68:	out    0x8c,al
  40bb6a:	popa   
  40bb6b:	ficomp WORD PTR [esi-0x2b26e0f1]
  40bb71:	ins    BYTE PTR es:[edi],dx
  40bb72:	jno    0x40bbc0
  40bb74:	xchg   ecx,eax
  40bb75:	mov    dh,0x6a
  40bb77:	xchg   DWORD PTR [edi+0x59],ebx
  40bb7a:	lds    ecx,FWORD PTR [esi]
  40bb7c:	xor    eax,0x6d23b34c
  40bb81:	(bad)  [ebx+0x36]
  40bb84:	or     eax,0x6ad7dd7d
  40bb89:	ret    0x37a3
  40bb8c:	or     ecx,ecx
  40bb8e:	int3   
  40bb8f:	xchg   esp,eax
  40bb90:	ror    cl,cl
  40bb92:	dec    edi
  40bb93:	arpl   cx,bp
  40bb95:	or     dl,BYTE PTR [ebx-0x33]
  40bb98:	mov    ah,0x25
  40bb9a:	xchg   esi,eax
  40bb9b:	sub    BYTE PTR [esi+0x73],dl
  40bb9e:	xlat   BYTE PTR ds:[ebx]
  40bb9f:	jmp    0x40bc20
  40bba1:	sbb    eax,0x9c170acc
  40bba6:	or     ch,BYTE PTR [eax+0x771567e4]
  40bbac:	xor    BYTE PTR [eax-0x55],dl
  40bbaf:	out    dx,al
  40bbb0:	std    
  40bbb1:	pusha  
  40bbb2:	add    edi,DWORD PTR [edx+esi*2+0x242657c6]
  40bbb9:	enter  0x743f,0x3b
  40bbbd:	cld    
  40bbbe:	dec    edx
  40bbbf:	push   edi
  40bbc0:	pop    ebx
  40bbc1:	ret    
  40bbc2:	adc    BYTE PTR [esi],cl
  40bbc4:	push   ss
  40bbc5:	jmp    0x40bbdd
  40bbc7:	cmp    bh,ch
  40bbc9:	mov    ecx,0x23eb647d
  40bbce:	sahf   
  40bbcf:	mov    esi,0xaab6b5b3
  40bbd5:	pushf  
  40bbd6:	and    al,0x79
  40bbd8:	call   0x3393e255
  40bbdd:	and    ebp,ecx
  40bbdf:	fwait
  40bbe0:	fwait
  40bbe1:	xlat   BYTE PTR ds:[ebx]
  40bbe2:	xor    DWORD PTR ds:0xa8856de4,ebp
  40bbe8:	xchg   edx,eax
  40bbe9:	dec    edi
  40bbea:	mov    eax,ds:0xd456f1b4
  40bbef:	sbb    BYTE PTR [ebx+0x19460763],bh
  40bbf5:	(bad)  
  40bbf7:	adc    BYTE PTR [esi],dl
  40bbf9:	jle    0x40bc0e
  40bbfb:	cmp    DWORD PTR [edx-0x62cf7ba6],eax
  40bc01:	daa    
  40bc02:	mov    WORD PTR [esi],ss
  40bc04:	or     al,BYTE PTR [edi-0x75]
  40bc07:	iret   
  40bc08:	arpl   bp,di
  40bc0a:	clc    
  40bc0b:	test   DWORD PTR [edx],ebx
  40bc0d:	shld   DWORD PTR [ebp+0x20],esi,cl
  40bc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc12:	push   esp
  40bc13:	or     bl,BYTE PTR [edx-0x78]
  40bc16:	leave  
  40bc17:	mov    ds:0x8f815006,al
  40bc1c:	or     eax,DWORD PTR [edx+0x74]
  40bc1f:	les    edi,FWORD PTR [edi]
  40bc21:	fmul   QWORD PTR [eax]
  40bc23:	lock repnz or dh,BYTE PTR [esi-0x23]
  40bc28:	fisub  WORD PTR [edx-0x1d5643ed]
  40bc2e:	jp     0x40bc46
  40bc30:	dec    edi
  40bc31:	add    ch,al
  40bc33:	(bad)  
  40bc35:	fmul   QWORD PTR [edi]
  40bc37:	stos   DWORD PTR es:[edi],eax
  40bc38:	push   ecx
  40bc39:	data16 fistp DWORD PTR [edi+esi*4]
  40bc3d:	add    BYTE PTR [edi-0x77],bh
  40bc40:	pusha  
  40bc41:	or     al,0xa0
  40bc43:	dec    edx
  40bc44:	mov    ebx,0xa5ed0dcd
  40bc49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc4a:	in     al,dx
  40bc4b:	dec    ebx
  40bc4c:	jbe    0x40bc04
  40bc4e:	pop    DWORD PTR [edx+eiz*8-0x33]
  40bc52:	mov    ds:0x4e8d26ba,al
  40bc57:	test   al,0xf7
  40bc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc5a:	(bad)  
  40bc5b:	call   0x787d869
  40bc60:	fwait
  40bc61:	mov    esi,DWORD PTR [edx+ebx*4+0x6c9d8410]
  40bc68:	jno    0x40bbef
  40bc6a:	outs   dx,DWORD PTR ds:[esi]
  40bc6b:	or     DWORD PTR [edi+0x1c8e3658],eax
  40bc71:	pop    ebx
  40bc72:	xor    BYTE PTR [edi-0x4b7aa4a8],dh
  40bc78:	pop    eax
  40bc79:	mov    eax,ds:0xe1c728a
  40bc7e:	je     0x40bca4
  40bc80:	push   ss
  40bc81:	sub    BYTE PTR [edx],bh
  40bc83:	stos   DWORD PTR es:[edi],eax
  40bc84:	cli    
  40bc85:	addr16 iret 
  40bc87:	(bad)  
  40bc88:	xchg   ebx,eax
  40bc89:	ss je  0x40bcf0
  40bc8c:	retf   0x9e59
  40bc8f:	mov    edi,DWORD PTR [eax+0x1]
  40bc92:	dec    edi
  40bc93:	test   al,0x1e
  40bc95:	sbb    cl,ah
  40bc97:	sar    al,1
  40bc99:	imul   esp,DWORD PTR [edx],0x5a
  40bc9c:	xor    BYTE PTR [edx+0x17],dh
  40bc9f:	sub    BYTE PTR [edi],al
  40bca1:	or     eax,0xa3dd309
  40bca6:	push   ecx
  40bca7:	clc    
  40bca8:	paddq  mm0,QWORD PTR [edx]
  40bcab:	xor    edx,esp
  40bcad:	xor    bh,BYTE PTR [ebx+ebp*2+0x52351a3a]
  40bcb4:	gs pop ss
  40bcb6:	cli    
  40bcb7:	imul   BYTE PTR [ebp-0x17]
  40bcba:	pop    ebp
  40bcbb:	popa   
  40bcbc:	scas   al,BYTE PTR es:[edi]
  40bcbd:	cmp    eax,0xa2fa0f8f
  40bcc2:	(bad)  
  40bcc3:	and    eax,0x462b69a0
  40bcc8:	pop    edi
  40bcc9:	and    bl,BYTE PTR [ecx]
  40bccb:	xchg   esp,eax
  40bccc:	nop
  40bccd:	ror    edx,cl
  40bccf:	and    DWORD PTR [esi],0x584020c3
  40bcd5:	adc    eax,0xa0e2ac68
  40bcda:	sbb    BYTE PTR [edx+ebp*2],bl
  40bcdd:	retf   0x3aff
  40bce0:	mov    edi,edx
  40bce2:	aad    0xe3
  40bce4:	in     eax,dx
  40bce5:	les    esi,FWORD PTR [edi]
  40bce7:	push   eax
  40bce8:	(bad)  
  40bce9:	scas   al,BYTE PTR es:[edi]
  40bcea:	add    dh,BYTE PTR [ebx-0x21]
  40bced:	mov    edi,0x726a5565
  40bcf2:	mov    eax,ss
  40bcf4:	repz lock (bad) 
  40bcf7:	jp     0x40bd60
  40bcf9:	mov    bl,0x92
  40bcfb:	dec    esp
  40bcfc:	sar    dl,cl
  40bcfe:	cmc    
  40bcff:	pop    ecx
  40bd00:	stos   BYTE PTR es:[edi],al
  40bd01:	adc    ebp,ecx
  40bd03:	xchg   edi,eax
  40bd04:	fwait
  40bd05:	jmp    0xefd2:0xb3af2885
  40bd0c:	(bad)  
  40bd0d:	jle    0x40bd23
  40bd0f:	out    0x95,al
  40bd11:	cmp    al,0xce
  40bd13:	mov    BYTE PTR ds:0xc460bb18,bh
  40bd19:	xor    esi,ecx
  40bd1b:	nop
  40bd1c:	fwait
  40bd1d:	and    BYTE PTR [edx+0x2e],bl
  40bd20:	pop    edx
  40bd21:	sbb    eax,0x4dcfc788
  40bd26:	pushf  
  40bd27:	iret   
  40bd28:	pop    ecx
  40bd29:	fs fcmovnu st,st(1)
  40bd2c:	fsub   st(2),st
  40bd2e:	mov    ds:0x3b80b71b,eax
  40bd33:	lea    eax,[eax]
  40bd35:	arpl   WORD PTR [ebx+0x282012c9],dx
  40bd3b:	adc    DWORD PTR [edx+0x5f5ac956],0x1d
  40bd42:	fdiv   DWORD PTR [ecx+0x20fbcb8a]
  40bd48:	aad    0x97
  40bd4a:	sti    
  40bd4b:	inc    edi
  40bd4c:	test   eax,0xd402f14f
  40bd51:	fisttp QWORD PTR [ebx+ebx*1-0x11]
  40bd55:	cmc    
  40bd56:	mov    ecx,0x276525fe
  40bd5b:	xlat   BYTE PTR ds:[ebx]
  40bd5c:	out    dx,al
  40bd5d:	cmp    cl,al
  40bd5f:	push   cs
  40bd60:	out    dx,eax
  40bd61:	loopne 0x40bd7f
  40bd63:	lock jb 0x40bcfb
  40bd66:	push   0xe07f74e3
  40bd6b:	outs   dx,DWORD PTR ds:[esi]
  40bd6c:	repz push ebp
  40bd6e:	int    0x63
  40bd70:	inc    edx
  40bd71:	pop    edi
  40bd72:	into   
  40bd73:	inc    edi
  40bd74:	and    bl,BYTE PTR [esi]
  40bd76:	cmp    bh,BYTE PTR [edx]
  40bd78:	mov    ecx,0x18d8e5e9
  40bd7d:	sti    
  40bd7e:	jne    0x40bd46
  40bd80:	rcl    BYTE PTR [edx],1
  40bd82:	add    eax,0x17b92feb
  40bd87:	jecxz  0x40bd64
  40bd89:	ret    0xdb60
  40bd8c:	pop    esi
  40bd8d:	outs   dx,BYTE PTR ds:[esi]
  40bd8e:	aaa    
  40bd8f:	or     BYTE PTR [edi+0x2425e2f3],dl
  40bd95:	das    
  40bd96:	ficom  DWORD PTR [esi+0x3b8d4f77]
  40bd9c:	or     eax,DWORD PTR [ecx]
  40bd9e:	fs int 0x81
  40bda1:	add    al,0x60
  40bda3:	mov    edx,0x13f2e340
  40bda8:	bound  edx,QWORD PTR [ecx]
  40bdaa:	int3   
  40bdab:	pop    esp
  40bdac:	push   es
  40bdad:	cmp    esi,DWORD PTR [edx]
  40bdaf:	sbb    ecx,DWORD PTR [edx-0x12]
  40bdb2:	(bad)  
  40bdb3:	dec    edi
  40bdb4:	push   edx
  40bdb5:	and    ch,al
  40bdb7:	mov    esp,0x25f6306
  40bdbc:	inc    ebp
  40bdbd:	leave  
  40bdbe:	cmp    al,0x5d
  40bdc0:	inc    edi
  40bdc1:	lock cmp DWORD PTR [ecx+0x42],eax
  40bdc5:	xchg   ebp,eax
  40bdc6:	push   0x64206f27
  40bdcb:	and    esi,0x876bf89e
  40bdd1:	mov    dl,0xb2
  40bdd3:	mov    ecx,0xd20301be
  40bdd8:	cli    
  40bdd9:	scas   al,BYTE PTR es:[edi]
  40bdda:	aam    0x74
  40bddc:	cmp    eax,0x9a5f629b
  40bde1:	cmc    
  40bde2:	adc    al,bl
  40bde4:	mov    ds:0x1c9fde80,eax
  40bde9:	xchg   esi,eax
  40bdea:	mov    ebp,0x4e0c3529
  40bdef:	inc    ecx
  40bdf0:	dec    edx
  40bdf1:	mov    edi,0x515776d3
  40bdf6:	and    ah,BYTE PTR [edx]
  40bdf8:	sub    esi,ebp
  40bdfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfb:	jl     0x40be21
  40bdfd:	aas    
  40bdfe:	outs   dx,DWORD PTR ds:[esi]
  40bdff:	jmp    0x9740:0x241c925
  40be06:	xor    al,BYTE PTR [ebx+0xe]
  40be09:	adc    ah,BYTE PTR [ebx]
  40be0b:	jne    0x40be78
  40be0d:	jmp    0x81c8767a
  40be12:	push   0xffffffb5
  40be14:	and    al,BYTE PTR ds:0x19d01af1
  40be1a:	pop    ds
  40be1b:	lods   eax,DWORD PTR ds:[esi]
  40be1c:	cmp    DWORD PTR [ebp-0x7c],edx
  40be1f:	jns    0x40be8b
  40be21:	add    DWORD PTR [esi-0x5e1283d8],0xffffff8c
  40be28:	cmp    bl,dh
  40be2a:	test   eax,0xac21f88d
  40be2f:	cdq    
  40be30:	fs dec edx
  40be32:	outs   dx,BYTE PTR ds:[esi]
  40be33:	hlt    
  40be34:	cmp    dl,cl
  40be36:	sub    edi,eax
  40be38:	add    ecx,DWORD PTR [ecx+0x74]
  40be3b:	sti    
  40be3c:	push   edi
  40be3d:	shl    DWORD PTR gs:[eax+0x4f],0x33
  40be42:	aam    0x12
  40be44:	imul   DWORD PTR [eax-0x19]
  40be47:	sub    eax,0xe031fea1
  40be4c:	ins    DWORD PTR es:[edi],dx
  40be4d:	test   DWORD PTR [ebp-0x7e],esp
  40be50:	test   al,0xad
  40be52:	pop    ds
  40be53:	or     dh,BYTE PTR [esi]
  40be55:	dec    esp
  40be56:	and    BYTE PTR [esi],ah
  40be58:	stc    
  40be59:	sbb    ch,BYTE PTR [eax-0x4e87bcaf]
  40be5f:	bound  edx,QWORD PTR [esp+ebx*2]
  40be62:	mov    eax,es:0x85281908
  40be68:	push   edx
  40be69:	mov    WORD PTR [edx+esi*8+0x59],?
  40be6d:	outs   dx,DWORD PTR ds:[esi]
  40be6e:	push   ecx
  40be6f:	mov    al,0xe8
  40be71:	inc    esi
  40be72:	clc    
  40be73:	sbb    al,0xa
  40be75:	push   0x6d
  40be77:	ds aaa 
  40be79:	cli    
  40be7a:	or     DWORD PTR ds:0x45b24ba8,ecx
  40be80:	mov    edx,0x96fba0a9
  40be85:	mov    bl,0xd8
  40be87:	xor    eax,0xb0e8ca40
  40be8c:	test   BYTE PTR [eax+0x46],bl
  40be8f:	pop    ds
  40be90:	or     ch,ah
  40be92:	mov    ecx,0xb67e58cf
  40be97:	push   ebp
  40be98:	(bad)  [eax-0x30]
  40be9b:	mov    ecx,0xf0ff5079
  40bea0:	and    BYTE PTR [eax+0x43],ah
  40bea3:	inc    edx
  40bea4:	pusha  
  40bea5:	adc    eax,0xb7b59ce0
  40beaa:	rcr    DWORD PTR [ebp-0x15],1
  40bead:	sti    
  40beae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beaf:	and    DWORD PTR [ebx+eax*8+0x34],ebx
  40beb3:	mov    esp,0xece4798d
  40beb8:	imul   eax,DWORD PTR [edi],0x5f
  40bebb:	retf   
  40bebc:	js     0x40be8b
  40bebe:	ds js  0x40be46
  40bec1:	enter  0x31a2,0x3a
  40bec5:	push   edx
  40bec6:	bswap  ebx
  40bec8:	loope  0x40bf05
  40beca:	push   edx
  40becb:	pushf  
  40becc:	dec    eax
  40becd:	jmp    0x2205:0x96afee32
  40bed4:	mov    ebp,ecx
  40bed6:	cmp    bh,dh
  40bed8:	adc    bl,al
  40beda:	and    DWORD PTR [edx-0x6],eax
  40bedd:	adc    DWORD PTR [ebx],esi
  40bedf:	mov    ebx,0x68275ae3
  40bee4:	jmp    0x40bf2e
  40bee6:	push   es
  40bee7:	nop
  40bee8:	or     dl,BYTE PTR [ecx+0x122a6a09]
  40beee:	in     eax,dx
  40beef:	xlat   BYTE PTR ds:[ebx]
  40bef0:	daa    
  40bef1:	or     eax,0x56b962f9
  40bef6:	in     eax,0x9c
  40bef8:	test   DWORD PTR [edx+0x6f528441],ebp
  40befe:	mov    ecx,DWORD PTR [eax]
  40bf00:	dec    esp
  40bf01:	popf   
  40bf02:	xlat   BYTE PTR ds:[ebx]
  40bf03:	sti    
  40bf04:	retf   0x1fcb
  40bf07:	scas   eax,DWORD PTR es:[edi]
  40bf08:	(bad)  
  40bf09:	(bad)
  40bf0d:	sub    al,0xbb
  40bf0f:	stos   BYTE PTR es:[edi],al
  40bf10:	repnz push ecx
  40bf12:	mov    esp,DWORD PTR [eax-0x3f]
  40bf15:	xlat   BYTE PTR ds:[ebx]
  40bf16:	xlat   BYTE PTR ds:[ebx]
  40bf17:	mov    edx,0xd6e2af72
  40bf1c:	aad    0xbc
  40bf1e:	add    dh,BYTE PTR [edi+0x32]
  40bf21:	pop    esi
  40bf22:	ins    BYTE PTR es:[edi],dx
  40bf23:	xor    bl,BYTE PTR [ebp-0x1d8951f4]
  40bf29:	mov    edi,0xd578d6a2
  40bf2e:	pop    es
  40bf2f:	add    BYTE PTR [ebp-0x15],0x7d
  40bf33:	or     BYTE PTR [ecx],bh
  40bf35:	push   edi
  40bf36:	in     eax,0xae
  40bf38:	outs   dx,DWORD PTR es:[esi]
  40bf3a:	idiv   BYTE PTR [ecx+0x7b]
  40bf3d:	jge    0x40bf67
  40bf3f:	adc    DWORD PTR [esp+ebp*2],0x2f
  40bf43:	push   ebp
  40bf44:	mov    BYTE PTR [ecx-0xd733dca],dh
  40bf4a:	arpl   ax,di
  40bf4c:	in     al,dx
  40bf4d:	inc    esp
  40bf4e:	xchg   edi,eax
  40bf4f:	cwde   
  40bf50:	pop    esp
  40bf51:	and    cl,BYTE PTR [ebx-0x234cc09d]
  40bf57:	loope  0x40bfa1
  40bf59:	jecxz  0x40bef0
  40bf5b:	pop    ss
  40bf5c:	push   0x1c78209e
  40bf61:	ja     0x40beef
  40bf63:	xchg   edi,eax
  40bf64:	jmp    0x1c3d:0x7b19d740
  40bf6b:	mov    ebx,0x6d8b18f1
  40bf70:	ja     0x40bfc6
  40bf72:	mov    bh,BYTE PTR [edi]
  40bf74:	dec    edi
  40bf75:	loop   0x40bf7f
  40bf77:	loop   0x40bf7d
  40bf79:	in     ax,0x8e
  40bf7c:	mov    cl,0xb5
  40bf7e:	shr    BYTE PTR [edx+0x74],1
  40bf81:	push   edi
  40bf82:	sbb    DWORD PTR [ebx],esi
  40bf84:	jno    0x40bf25
  40bf86:	ret    
  40bf87:	sub    cl,al
  40bf89:	push   ebp
  40bf8a:	cld    
  40bf8b:	jb     0x40bfa5
  40bf8d:	icebp  
  40bf8e:	adc    eax,0x8a37b4df
  40bf93:	mov    dh,BYTE PTR [ebp-0x59d81848]
  40bf99:	cmp    DWORD PTR [edi-0x41],ebx
  40bf9c:	xor    al,0x7a
  40bf9e:	(bad)  
  40bfa0:	pop    esp
  40bfa1:	mov    eax,ds:0x66e1943b
  40bfa6:	mov    eax,0xf0b150eb
  40bfab:	mov    dl,0xb4
  40bfad:	dec    ebp
  40bfae:	dec    eax
  40bfaf:	mov    ecx,DWORD PTR [esi-0x78]
  40bfb2:	out    dx,eax
  40bfb3:	(bad)  
  40bfb4:	mov    ebp,DWORD PTR [esi+edx*8]
  40bfb7:	cmc    
  40bfb8:	pushf  
  40bfb9:	mov    esi,0xa78d892
  40bfbe:	das    
  40bfbf:	out    dx,al
  40bfc0:	fstp   st(5)
  40bfc2:	in     al,0x35
  40bfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc5:	mov    cl,0x42
  40bfc7:	lods   al,BYTE PTR ds:[esi]
  40bfc8:	push   edx
  40bfc9:	mov    ch,0x23
  40bfcb:	push   0x6468ff08
  40bfd0:	ja     0x40bfaf
  40bfd2:	xlat   BYTE PTR ds:[ebx]
  40bfd3:	adc    edi,DWORD PTR [esi+0x3d]
  40bfd6:	xchg   esi,eax
  40bfd7:	js     0x40bff1
  40bfd9:	xlat   BYTE PTR ds:[ebx]
  40bfda:	xchg   esi,eax
  40bfdb:	jbe    0x40c02f
  40bfdd:	stc    
  40bfde:	push   ds
  40bfdf:	push   cs
  40bfe0:	les    edi,FWORD PTR [edi+ebp*2+0x74be8209]
  40bfe7:	adc    ch,BYTE PTR [ebx-0x4a]
  40bfea:	mov    esp,0xaa00c1b6
  40bfef:	in     al,0x34
  40bff1:	stos   BYTE PTR es:[edi],al
  40bff2:	cs xchg edx,eax
  40bff4:	mov    dl,0x6
  40bff6:	mov    bh,0x2
  40bff8:	cmp    al,0xad
  40bffa:	mov    edi,ebp
  40bffc:	xor    DWORD PTR [ecx-0x1e],0xffffffca
  40c000:	add    dl,BYTE PTR [edi]
  40c002:	push   esi
  40c003:	dec    edx
  40c004:	int    0x73
  40c006:	rcr    BYTE PTR [esi],cl
  40c008:	dec    edi
  40c009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c00a:	mov    ds,WORD PTR [ebp+0x77]
  40c00d:	pusha  
  40c00e:	stos   BYTE PTR es:[edi],al
  40c00f:	and    eax,0xfd9f0bcc
  40c014:	jo     0x40c040
  40c016:	push   ebx
  40c017:	jne    0x40c061
  40c019:	sub    DWORD PTR [esp+edi*2+0x2a172a7f],eax
  40c020:	cmc    
  40c021:	mov    dl,0xf5
  40c023:	dec    eax
  40c024:	inc    esi
  40c025:	repz cld 
  40c027:	cdq    
  40c028:	jmp    0x40c021
  40c02a:	push   ebp
  40c02b:	xor    DWORD PTR [edx-0x5a],0x36
  40c02f:	sar    DWORD PTR [esi+0x6a],0x72
  40c033:	push   edx
  40c034:	sub    BYTE PTR [eax],0x3a
  40c037:	mov    esi,0x81f202d4
  40c03c:	out    0xe2,eax
  40c03e:	mov    esi,0xbe8d82b
  40c043:	(bad)  
  40c044:	cmp    edi,DWORD PTR [ecx]
  40c046:	(bad)  
  40c047:	outs   dx,DWORD PTR ds:[esi]
  40c048:	imul   eax,DWORD PTR [esi+0x6bd011e4],0xd1b84fa8
  40c052:	and    BYTE PTR cs:[edx],ch
  40c055:	mov    ch,0x84
  40c057:	xchg   ecx,eax
  40c058:	adc    BYTE PTR [edi+0x37bd73b2],bh
  40c05e:	lea    ecx,[bp+0x4d]
  40c062:	ror    DWORD PTR [edi+ebp*2-0xca29229],cl
  40c069:	cmp    ch,BYTE PTR [eax]
  40c06b:	mov    esi,DWORD PTR [eax]
  40c06d:	push   ebp
  40c06e:	jmp    0x40c09e
  40c070:	add    BYTE PTR [ebx-0x11fa89e7],0x9d
  40c077:	jge    0x40c06f
  40c079:	loop   0x40c0c4
  40c07b:	cmp    eax,0xfb66f52
  40c080:	arpl   WORD PTR [edx+0x37],bx
  40c083:	in     al,0x0
  40c085:	or     BYTE PTR [eax],bl
  40c087:	and    al,0x0
  40c089:	and    ecx,ebx
  40c08b:	sub    ah,dh
  40c08d:	mov    eax,ds:0x80f31d1e
  40c092:	sbb    DWORD PTR [ecx-0x4b],0xdc9f9469
  40c099:	cdq    
  40c09a:	dec    ecx
  40c09b:	pop    ebx
  40c09c:	ficom  DWORD PTR [ecx]
  40c09e:	mov    ecx,0x79c91fd8
  40c0a3:	inc    edx
  40c0a4:	pop    ss
  40c0a5:	test   edi,esi
  40c0a7:	and    cl,0x8c
  40c0aa:	jns    0x40c0a9
  40c0ac:	pusha  
  40c0ad:	or     eax,0x46220291
  40c0b2:	shl    ebp,cl
  40c0b4:	adc    eax,0x69f8564b
  40c0b9:	adc    BYTE PTR [edx+0x30],cl
  40c0bc:	aaa    
  40c0bd:	pop    ds
  40c0be:	lods   eax,DWORD PTR ds:[esi]
  40c0bf:	test   BYTE PTR [esi+0x2c492b6c],dh
  40c0c5:	inc    ebp
  40c0c6:	and    ecx,0x1e
  40c0c9:	mov    esp,0x8e07f53c
  40c0ce:	ret    0x41a
  40c0d1:	test   al,0x6f
  40c0d3:	pop    esi
  40c0d4:	call   0x98b517e
  40c0d9:	in     eax,dx
  40c0da:	push   esp
  40c0db:	bound  eax,QWORD PTR [ecx]
  40c0dd:	mov    dh,0xdc
  40c0df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e0:	xchg   DWORD PTR [ebp-0x3e],esi
  40c0e3:	lods   al,BYTE PTR ds:[esi]
  40c0e4:	imul   ebx,DWORD PTR [ebp-0x7fc04005],0x922af39a
  40c0ee:	pop    esp
  40c0ef:	adc    eax,0xe8f5b070
  40c0f4:	fucom  st(5)
  40c0f6:	mov    ebx,0x675091e1
  40c0fb:	out    0x93,al
  40c0fd:	aas    
  40c0fe:	pop    esp
  40c0ff:	jno    0x40c150
  40c101:	inc    dl
  40c103:	dec    edi
  40c104:	push   ecx
  40c105:	clc    
  40c106:	adc    ebx,DWORD PTR [ebp-0x19c9e0bd]
  40c10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10d:	cmp    eax,0x386245de
  40c112:	adc    eax,0xeb62e3c5
  40c117:	xor    al,BYTE PTR [eax]
  40c119:	xchg   edx,eax
  40c11a:	mov    bh,0x6b
  40c11c:	and    bl,BYTE PTR [ecx+0x15]
  40c11f:	int3   
  40c120:	push   cs
  40c121:	xchg   BYTE PTR [eax],bh
  40c123:	xor    DWORD PTR [esi-0x74],ebp
  40c126:	(bad)  
  40c127:	cld    
  40c128:	inc    ecx
  40c129:	push   ebx
  40c12a:	(bad)  
  40c12b:	imul   DWORD PTR [eax+esi*1-0x5]
  40c12f:	daa    
  40c130:	inc    ebp
  40c131:	js     0x40c0e6
  40c133:	sbb    ah,0xbf
  40c136:	outs   dx,DWORD PTR ds:[esi]
  40c137:	sub    DWORD PTR [eax+0x36],edi
  40c13a:	cmp    DWORD PTR [ebp+0x1092e5ff],ebx
  40c140:	outs   dx,BYTE PTR ds:[esi]
  40c141:	mov    esp,0x38e8e056
  40c146:	ins    BYTE PTR es:[edi],dx
  40c147:	or     ch,al
  40c149:	push   ds
  40c14a:	dec    eax
  40c14b:	xlat   BYTE PTR ds:[ebx]
  40c14c:	mov    ecx,0x671a6fe3
  40c151:	lock inc eax
  40c153:	xor    esp,DWORD PTR [ebp+edi*1+0x6b]
  40c157:	fs dec esp
  40c159:	jp     0x40c186
  40c15b:	jmp    0x40c100
  40c15d:	pop    ds
  40c15e:	inc    edx
  40c15f:	fwait
  40c160:	sbb    al,0xdc
  40c162:	xchg   esi,eax
  40c163:	mov    WORD PTR [ebp+0xcf9f259],cs
  40c169:	push   edx
  40c16a:	mov    dh,0x87
  40c16c:	loop   0x40c140
  40c16e:	and    al,0x17
  40c170:	mov    edx,0xa7d8fc74
  40c175:	sbb    DWORD PTR [esi+0x5d],eax
  40c178:	and    bh,ch
  40c17a:	(bad)  
  40c17b:	and    al,0x90
  40c17d:	inc    ebx
  40c17e:	mov    BYTE PTR gs:[eax],al
  40c181:	sbb    eax,0xc92b53ad
  40c186:	adc    DWORD PTR [ebx-0x5167b318],ebp
  40c18c:	or     al,0x2f
  40c18e:	out    0xa8,eax
  40c190:	jo     0x40c1ae
  40c192:	popa   
  40c193:	cmp    BYTE PTR [eax],cl
  40c195:	dec    ebx
  40c196:	adc    al,0xd8
  40c198:	pop    edx
  40c199:	sti    
  40c19a:	or     BYTE PTR [ebp-0x4d5e102a],ah
  40c1a0:	rcl    ch,cl
  40c1a2:	addr16 mov bl,ah
  40c1a5:	jecxz  0x40c1f6
  40c1a7:	add    eax,0xc8ffdb31
  40c1ac:	cmp    eax,DWORD PTR [edi]
  40c1ae:	mov    DWORD PTR [eax+0x1b],edx
  40c1b1:	popa   
  40c1b2:	jmp    0x40c163
  40c1b4:	stos   DWORD PTR es:[edi],eax
  40c1b5:	dec    edx
  40c1b6:	cli    
  40c1b7:	daa    
  40c1b8:	jmp    0x40c1d2
  40c1ba:	jns    0x40c22f
  40c1bc:	cmp    al,0x7
  40c1be:	cmp    ebp,ebx
  40c1c0:	pusha  
  40c1c1:	and    DWORD PTR [edi-0x583c0673],esi
  40c1c7:	mov    ecx,0xdaa45d9b
  40c1cc:	adc    bl,BYTE PTR ds:0x881a2118
  40c1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d3:	xchg   edx,eax
  40c1d4:	add    BYTE PTR [eax-0x203c64d6],ah
  40c1da:	mov    al,0x10
  40c1dc:	fcmovnbe st,st(3)
  40c1de:	pop    ds
  40c1df:	mov    ch,0x1e
  40c1e1:	fiadd  DWORD PTR [esi*4+0x5f81850f]
  40c1e8:	inc    eax
  40c1e9:	test   BYTE PTR [edi-0x46],dh
  40c1ec:	daa    
  40c1ed:	ins    DWORD PTR es:[edi],dx
  40c1ee:	and    bl,BYTE PTR [ecx-0x1fd0acba]
  40c1f4:	stos   BYTE PTR es:[edi],al
  40c1f5:	aas    
  40c1f6:	(bad)  
  40c1f7:	sbb    ecx,esp
  40c1f9:	leave  
  40c1fa:	mov    ebp,0xd53bed84
  40c1ff:	adc    ebx,edi
  40c201:	sub    eax,0x82b1198a
  40c206:	(bad)  
  40c207:	cmp    al,0x4a
  40c209:	or     ch,BYTE PTR ds:0x693e6347
  40c20f:	inc    esp
  40c210:	cwde   
  40c211:	in     al,dx
  40c212:	inc    ebx
  40c213:	adc    eax,eax
  40c215:	or     eax,0xb22a8ac4
  40c21a:	mov    ?,WORD PTR [edi+0x29]
  40c21d:	push   esp
  40c21e:	rol    BYTE PTR [edx+0x2b],1
  40c221:	inc    esi
  40c222:	sbb    eax,0x7e065651
  40c227:	retf   0x8a71
  40c22a:	repz ja 0x40c24f
  40c22d:	cld    
  40c22e:	add    dl,BYTE PTR [eax]
  40c230:	mov    bl,0x9e
  40c232:	and    cl,dh
  40c234:	inc    edi
  40c235:	ret    0x6e25
  40c238:	sbb    BYTE PTR [edi-0x5bd95027],ah
  40c23e:	call   0xa6d0d9a2
  40c243:	enter  0x4229,0x74
  40c247:	xor    BYTE PTR [edx-0x2b],dh
  40c24a:	xchg   ebp,eax
  40c24b:	sbb    DWORD PTR [edx+0x27],edi
  40c24e:	repz inc esp
  40c250:	loope  0x40c214
  40c252:	popa   
  40c253:	add    eax,0xa4a093a2
  40c258:	rcl    BYTE PTR es:[esi+eiz*2-0x31],1
  40c25d:	push   ecx
  40c25e:	cld    
  40c25f:	and    bh,BYTE PTR [esi+ecx*4+0x62]
  40c263:	mov    esi,0xd5bc157d
  40c268:	std    
  40c269:	rcl    BYTE PTR [ebx+0x63],cl
  40c26c:	stc    
  40c26d:	int    0x82
  40c26f:	sub    DWORD PTR [ebp+edi*4+0x25d0e2bb],esi
  40c276:	push   0xffffffd5
  40c278:	or     al,0x6a
  40c27a:	mov    ecx,0xb592a240
  40c27f:	jmp    0x40c261
  40c281:	inc    ebx
  40c282:	sbb    BYTE PTR [ebx-0x24210087],dh
  40c288:	and    edx,DWORD PTR [ecx-0x3a6e8082]
  40c28e:	jne    0x40c250
  40c290:	push   cs
  40c291:	call   0x33236666
  40c296:	inc    ebx
  40c297:	call   0xbc38:0x225d9f9
  40c29e:	test   BYTE PTR [edi-0x35],cl
  40c2a1:	mov    ecx,0x1d202e56
  40c2a6:	call   0xf50c1270
  40c2ab:	mov    esp,0xd5c93b61
  40c2b0:	xchg   esp,ebx
  40c2b2:	xor    al,ch
  40c2b4:	jle    0x40c259
  40c2b6:	jp     0x40c271
  40c2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2b9:	xchg   ebx,eax
  40c2ba:	cmp    esi,ebp
  40c2bc:	jbe    0x40c280
  40c2be:	sub    BYTE PTR [edi-0x62],dh
  40c2c1:	imul   ecx,DWORD PTR [edx-0x5b],0x56
  40c2c5:	mov    al,ds:0xde73bd2c
  40c2ca:	loopne 0x40c2db
  40c2cc:	dec    eax
  40c2cd:	icebp  
  40c2ce:	xchg   DWORD PTR [edx+0x9],eax
  40c2d1:	sbb    DWORD PTR fs:[ebx+0x1ff32090],0x31f88b5f
  40c2dc:	dec    eax
  40c2dd:	mov    edx,DWORD PTR [edi+ebx*8]
  40c2e0:	pop    esp
  40c2e1:	retf   0x6ec9
  40c2e4:	in     al,dx
  40c2e5:	jae    0x40c28b
  40c2e7:	push   ss
  40c2e8:	xor    al,0x79
  40c2ea:	push   es
  40c2eb:	push   cs
  40c2ec:	pand   mm1,QWORD PTR [ebx]
  40c2ef:	dec    ebx
  40c2f0:	and    al,0x7c
  40c2f2:	sti    
  40c2f3:	push   ss
  40c2f4:	out    dx,al
  40c2f5:	or     al,0x6f
  40c2f7:	jmp    0x40c2bd
  40c2f9:	mov    DWORD PTR [eax-0x30],ecx
  40c2fc:	pop    esi
  40c2fd:	cld    
  40c2fe:	dec    esi
  40c2ff:	cmc    
  40c300:	mov    ebx,0xf53f017e
  40c305:	or     ah,dh
  40c307:	shl    BYTE PTR [ecx+edx*2-0x62],cl
  40c30b:	inc    edx
  40c30c:	cmp    DWORD PTR [edi+0x13ec4b3c],ecx
  40c312:	ins    BYTE PTR es:[edi],dx
  40c313:	sub    eax,0x5cc639a4
  40c318:	pop    ss
  40c319:	scas   eax,DWORD PTR es:[edi]
  40c31a:	dec    esi
  40c31b:	fdiv   DWORD PTR [ebx+0x26]
  40c31e:	inc    ecx
  40c31f:	xchg   ecx,eax
  40c320:	add    BYTE PTR ds:0xf6b00fe8,al
  40c326:	jmp    0x5e5:0x5be4d866
  40c32d:	xor    eax,0xe4f4acc1
  40c332:	nop
  40c333:	xchg   ecx,eax
  40c334:	cs lock es dec edi
  40c338:	and    al,0xe2
  40c33a:	mov    eax,0xc276853f
  40c33f:	inc    DWORD PTR [edi+edi*1]
  40c342:	xchg   BYTE PTR [edi],al
  40c344:	popf   
  40c345:	pushf  
  40c346:	mov    ds:0xb73534e6,al
  40c34b:	into   
  40c34c:	mov    WORD PTR ds:0x9f98d192,ss
  40c352:	mov    WORD PTR [edi-0x50],?
  40c355:	xor    DWORD PTR [edx+0x30d7939b],0x66c3c350
  40c35f:	or     al,0xa8
  40c361:	cmp    BYTE PTR [edi+0x42],bh
  40c364:	mov    WORD PTR [ecx+0x4a946c9],cs
  40c36a:	jle    0x40c32f
  40c36c:	or     esp,DWORD PTR [ecx+ecx*1]
  40c36f:	std    
  40c370:	shl    al,cl
  40c372:	loop   0x40c389
  40c374:	push   ebx
  40c375:	jg     0x40c393
  40c377:	inc    eax
  40c378:	and    cl,BYTE PTR [eax+0x59da9898]
  40c37e:	inc    edi
  40c37f:	iret   
  40c380:	jnp    0x40c397
  40c382:	cmp    eax,0xe8f3c94
  40c387:	dec    ebp
  40c388:	and    bh,BYTE PTR [edi]
  40c38a:	pusha  
  40c38b:	jbe    0x40c38e
  40c38d:	pop    ecx
  40c38e:	data16 fstp st(3)
  40c391:	and    ecx,DWORD PTR [edx+0x2a]
  40c394:	or     al,0xd8
  40c396:	xchg   edi,eax
  40c397:	je     0x40c3a3
  40c399:	mov    cl,0xad
  40c39b:	jp     0x40c384
  40c39d:	ret    0x8ce1
  40c3a0:	adc    eax,0xb151c6b9
  40c3a5:	inc    edi
  40c3a6:	js     0x40c3b4
  40c3a8:	out    0x84,eax
  40c3aa:	xchg   al,cl
  40c3ac:	push   es
  40c3ad:	fsubr  QWORD PTR [esi]
  40c3af:	adc    BYTE PTR [ebx+0x3de691d1],dl
  40c3b5:	ror    DWORD PTR es:[eax-0xb],cl
  40c3b9:	mov    dl,0x36
  40c3bb:	mov    fs,WORD PTR [ebx+eiz*2-0x6414df25]
  40c3c2:	popf   
  40c3c3:	test   al,0x9e
  40c3c5:	push   edx
  40c3c6:	into   
  40c3c7:	shl    BYTE PTR [esi-0x7a],1
  40c3ca:	(bad)  
  40c3cb:	shl    ebx,cl
  40c3cd:	push   edi
  40c3ce:	jg     0x40c35b
  40c3d0:	xchg   ecx,eax
  40c3d1:	lods   eax,DWORD PTR ds:[esi]
  40c3d2:	push   0xffffffa6
  40c3d4:	je     0x40c3cd
  40c3d6:	xor    ebx,DWORD PTR [ecx]
  40c3d8:	dec    ebp
  40c3d9:	call   0x95fd:0xf8ba4fdb
  40c3e0:	xor    bh,bl
  40c3e2:	and    BYTE PTR [edx+0x24],bl
  40c3e5:	ss stos BYTE PTR es:[edi],al
  40c3e7:	clc    
  40c3e8:	stc    
  40c3e9:	push   0x70
  40c3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ec:	imul   edx,ecx,0x78ac7fa1
  40c3f2:	pusha  
  40c3f3:	pinsrw mm4,WORD PTR [edi-0x31cf7e11],0x80
  40c3fb:	xor    DWORD PTR [edi+0x77323816],edx
  40c401:	test   al,0xa6
  40c403:	and    BYTE PTR [ecx-0x20],bl
  40c406:	outs   dx,BYTE PTR ds:[esi]
  40c407:	loop   0x40c38d
  40c409:	xor    cl,BYTE PTR [edi+0x61]
  40c40c:	test   al,0x60
  40c40e:	add    dh,dl
  40c410:	aaa    
  40c411:	mov    cs,ebx
  40c413:	add    ch,BYTE PTR [edx]
  40c415:	ja     0x40c485
  40c417:	dec    ebx
  40c418:	xor    BYTE PTR [eax+0x31],0xb
  40c41c:	(bad)  
  40c41d:	jle    0x40c49a
  40c41f:	xchg   esp,eax
  40c420:	fmulp  st(1),st
  40c422:	scas   al,BYTE PTR es:[edi]
  40c423:	test   al,0xef
  40c425:	cld    
  40c426:	push   ebp
  40c427:	or     dh,bh
  40c429:	sbb    al,0xe
  40c42b:	xlat   BYTE PTR ds:[ebx]
  40c42c:	imul   ebp,DWORD PTR [eax-0x3d],0x18a6b97a
  40c433:	sub    ebp,esi
  40c435:	cmp    ebp,ecx
  40c437:	dec    esi
  40c438:	icebp  
  40c439:	or     dl,BYTE PTR [esi+edi*8]
  40c43c:	cmc    
  40c43d:	mov    eax,ds:0x7ec8b374
  40c442:	push   esp
  40c443:	sub    BYTE PTR [ecx],bh
  40c445:	in     eax,dx
  40c446:	mov    cl,0x4c
  40c448:	cwde   
  40c449:	sub    DWORD PTR [ecx],eax
  40c44b:	in     eax,0xed
  40c44d:	shr    BYTE PTR [edx+eax*2+0x23],cl
  40c451:	imul   ecx,ebp,0xffffffd1
  40c454:	int3   
  40c455:	nop
  40c456:	cmp    al,0x51
  40c458:	and    BYTE PTR [esi-0x1e],dh
  40c45b:	xchg   esi,eax
  40c45c:	pop    es
  40c45d:	inc    edx
  40c45e:	into   
  40c45f:	and    al,0xa
  40c461:	(bad)  
  40c462:	jl     0x40c422
  40c464:	int    0xca
  40c466:	stc    
  40c467:	jb     0x40c460
  40c469:	pop    ss
  40c46a:	adc    BYTE PTR [ebp+0x3b],dl
  40c46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46e:	xchg   ecx,eax
  40c46f:	(bad)  
  40c470:	and    eax,0xf41a1314
  40c475:	fild   WORD PTR [ebx]
  40c477:	gs mov ecx,0x4460cfce
  40c47d:	or     bh,BYTE PTR ds:0x9559eeb2
  40c483:	sub    bl,dl
  40c485:	inc    edi
  40c486:	les    esi,FWORD PTR [ebx]
  40c488:	cwd    
  40c48a:	or     bh,bh
  40c48c:	gs dec edx
  40c48e:	cmp    al,0xc5
  40c490:	inc    esp
  40c491:	and    DWORD PTR [ebp+0x44],ebp
  40c494:	xchg   BYTE PTR [edx+ecx*1],cl
  40c497:	push   DWORD PTR [edi-0x26e36d6d]
  40c49d:	adc    al,0x75
  40c49f:	pop    eax
  40c4a0:	pop    esi
  40c4a1:	aaa    
  40c4a2:	xor    al,0xa4
  40c4a4:	ror    BYTE PTR [eax],cl
  40c4a6:	and    DWORD PTR [ecx],edi
  40c4a8:	jnp    0x40c4f6
  40c4aa:	pushf  
  40c4ab:	jge    0x40c4f5
  40c4ad:	push   ebp
  40c4ae:	mov    ss,WORD PTR [edx-0x3d1f6ae0]
  40c4b4:	pushf  
  40c4b5:	fwait
  40c4b6:	and    al,0x8b
  40c4b8:	fwait
  40c4b9:	sbb    DWORD PTR [ecx],edx
  40c4bb:	mov    ebp,ds
  40c4bd:	ficom  DWORD PTR [edx]
  40c4bf:	aad    0x9f
  40c4c1:	out    dx,al
  40c4c2:	repnz popa 
  40c4c4:	jmp    0xa60e:0x481b00e2
  40c4cb:	fsubr  QWORD PTR [eax]
  40c4cd:	leave  
  40c4ce:	je     0x40c460
  40c4d0:	push   es
  40c4d1:	das    
  40c4d2:	into   
  40c4d3:	cmp    bh,al
  40c4d5:	and    bh,ch
  40c4d7:	retf   0x72af
  40c4da:	cs add eax,0xb867c993
  40c4e0:	call   0x1273:0xb7c42bef
  40c4e7:	fwait
  40c4e8:	jnp    0x40c4d3
  40c4ea:	jo     0x40c47b
  40c4ec:	xlat   BYTE PTR ds:[ebx]
  40c4ed:	pop    ss
  40c4ee:	out    0xfd,al
  40c4f0:	sub    eax,0x668aa4d6
  40c4f5:	adc    DWORD PTR [eax-0x4a],edx
  40c4f8:	xor    al,0x3f
  40c4fa:	dec    ebp
  40c4fb:	xchg   ebx,eax
  40c4fc:	or     BYTE PTR [ebp-0x70],al
  40c4ff:	mov    eax,eax
  40c501:	inc    edi
  40c502:	in     eax,dx
  40c503:	or     eax,0xadd7a91e
  40c508:	ins    BYTE PTR es:[edi],dx
  40c509:	add    DWORD PTR ds:0x34eb6bb4,esi
  40c50f:	sub    ebp,eax
  40c511:	das    
  40c512:	cmp    eax,0xb47898a4
  40c517:	inc    edi
  40c518:	mov    ch,0xc6
  40c51a:	mov    ah,0xab
  40c51c:	jmp    0x431:0x63cd654f
  40c523:	scas   eax,DWORD PTR es:[edi]
  40c524:	test   edi,ebx
  40c526:	pop    es
  40c527:	test   BYTE PTR [edx+0x2d],0xae
  40c52b:	dec    ebp
  40c52c:	sub    BYTE PTR [ebp+0x30],dl
  40c52f:	sub    BYTE PTR [ebx],dh
  40c531:	sub    DWORD PTR [edx+0x7ae186d6],0x8e93147a
  40c53b:	jns    0x40c543
  40c53d:	dec    eax
  40c53e:	test   DWORD PTR [edx],0xe25e4daa
  40c544:	(bad)  
  40c546:	mov    al,0xbf
  40c548:	add    ah,BYTE PTR [bx+0x4200]
  40c54d:	jno    0x40c56b
  40c54f:	add    eax,0x137ee056
  40c554:	div    DWORD PTR [ecx-0x1e]
  40c557:	or     eax,0x4bddfd5d
  40c55c:	mov    ah,0xb4
  40c55e:	fwait
  40c55f:	pop    esp
  40c560:	int3   
  40c561:	stos   BYTE PTR es:[edi],al
  40c562:	ret    0xf1bf
  40c565:	lock arpl WORD PTR [ebp+edx*8-0x3f587fe8],di
  40c56d:	sub    ecx,DWORD PTR [ecx+esi*4-0x76]
  40c571:	sub    BYTE PTR [esi+eiz*4+0x5b0ff635],ch
  40c578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c579:	jmp    0x7535158a
  40c57e:	out    dx,al
  40c57f:	dec    ebp
  40c580:	add    DWORD PTR [edx+eiz*8+0x59],edx
  40c584:	adc    al,0xdd
  40c586:	push   esp
  40c587:	adc    cl,BYTE PTR [ecx-0x21]
  40c58a:	xchg   ebx,eax
  40c58b:	psubd  mm6,QWORD PTR [edi+0x3]
  40c58f:	cmp    BYTE PTR [ecx+0x458bf87d],cl
  40c595:	or     al,0x8b
  40c597:	jge    0x40c5a5
  40c599:	xor    edi,ecx
  40c59b:	xor    eax,ecx
  40c59d:	lea    eax,[eax+edi*1+0x64e5c4]
  40c5a4:	mov    edi,DWORD PTR [ebp+0xc]
  40c5a7:	xor    edi,ecx
  40c5a9:	add    edi,edx
  40c5ab:	imul   eax,edi
  40c5ae:	mov    edi,DWORD PTR [ebp+0xc]
  40c5b1:	xor    edi,ecx
  40c5b3:	sub    edi,eax
  40c5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40c5b8:	add    edi,edx
  40c5ba:	cmp    DWORD PTR [eax],edi
  40c5bc:	mov    eax,DWORD PTR [ebp-0x4]
  40c5bf:	mov    edi,DWORD PTR [ebp+0x10]
  40c5c2:	jg     0x40c5d5
  40c5c8:	xor    edi,ecx
  40c5ca:	mov    ebx,esi
  40c5cc:	sub    ebx,edi
  40c5ce:	add    DWORD PTR [eax],ebx
  40c5d0:	jmp    0x40c5db
  40c5d5:	xor    edi,ecx
  40c5d7:	add    edi,edx
  40c5d9:	add    DWORD PTR [eax],edi
  40c5db:	mov    eax,DWORD PTR [ebp-0x8]
  40c5de:	mov    edi,DWORD PTR [ebp-0x10]
  40c5e1:	mov    eax,DWORD PTR [eax]
  40c5e3:	xor    edi,ecx
  40c5e5:	add    edi,0x3272e1
  40c5eb:	not    edi
  40c5ed:	and    eax,edi
  40c5ef:	movsx  di,BYTE PTR [eax+0x1]
  40c5f4:	mov    ebx,0x3b51
  40c5f9:	sub    di,bx
  40c5fc:	mov    ebx,0x8a8d
  40c601:	xor    di,bx
  40c604:	mov    ebx,0x4f84
  40c609:	cmp    di,bx
  40c60c:	jne    0x40c634
  40c612:	movsx  di,BYTE PTR [eax]
  40c616:	mov    ebx,0x3b51
  40c61b:	sub    di,bx
  40c61e:	mov    ebx,0x8a8d
  40c623:	xor    di,bx
  40c626:	mov    ebx,0x4e71
  40c62b:	cmp    di,bx
  40c62e:	je     0x40c644
  40c634:	mov    edi,DWORD PTR [ebp-0x10]
  40c637:	xor    edi,ecx
  40c639:	mov    ebx,esi
  40c63b:	sub    ebx,edi
  40c63d:	add    eax,ebx
  40c63f:	jmp    0x40c5ef
  40c644:	mov    esi,DWORD PTR [ebp-0x14]
  40c647:	mov    esi,DWORD PTR [esi]
  40c649:	jmp    0x40e998
  40c64e:	dec    edi
  40c64f:	sub    edi,esi
  40c651:	pusha  
  40c652:	repz inc edx
  40c654:	or     esi,ebx
  40c656:	test   eax,0x7d4b873c
  40c65b:	mov    bl,0x90
  40c65d:	sahf   
  40c65e:	mov    ds:0x4e7c7ce0,al
  40c663:	pop    edi
  40c664:	jl     0x40c6e2
  40c666:	out    dx,al
  40c667:	cmp    BYTE PTR cs:[esi],al
  40c66a:	and    esi,DWORD PTR ds:[edi+0x0]
  40c66e:	pop    ds
  40c66f:	pop    ds
  40c670:	or     al,0x12
  40c672:	and    ch,cl
  40c674:	xchg   ebp,eax
  40c675:	cdq    
  40c676:	pop    edx
  40c677:	cmp    BYTE PTR [edx-0x7590e401],ah
  40c67d:	xchg   edi,eax
  40c67e:	mov    ebp,0xa9882709
  40c683:	test   al,0x3b
  40c685:	pop    esi
  40c686:	xchg   ebx,eax
  40c687:	add    ecx,edi
  40c689:	jns    0x40c62b
  40c68b:	add    BYTE PTR [esi+ecx*2-0x17],bh
  40c68f:	lds    eax,FWORD PTR ds:0x1638dacf
  40c695:	ja     0x40c6d0
  40c697:	xchg   DWORD PTR [edx+0x53],ebx
  40c69a:	(bad)  
  40c69b:	retf   0x5fad
  40c69e:	call   0x1ea3:0x1ca51bff
  40c6a5:	retf   0xc6b2
  40c6a8:	into   
  40c6a9:	into   
  40c6aa:	add    ah,bl
  40c6ac:	iret   
  40c6ad:	cmp    DWORD PTR [ecx*4+0x2a9f8949],eax
  40c6b4:	leave  
  40c6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b6:	jmp    0x4fbf0a65
  40c6bb:	ja     0x40c6da
  40c6bd:	test   BYTE PTR [ebx+eiz*2],dh
  40c6c0:	mov    al,ds:0x694f089f
  40c6c5:	mov    ds:0x7f261814,al
  40c6ca:	aas    
  40c6cb:	pop    eax
  40c6cc:	lods   al,BYTE PTR ds:[esi]
  40c6cd:	push   esi
  40c6ce:	xchg   edi,eax
  40c6cf:	push   ss
  40c6d0:	and    dh,dl
  40c6d2:	(bad)
  40c6d6:	pop    eax
  40c6d7:	mov    ebp,0x13a93a22
  40c6dc:	dec    ebp
  40c6dd:	mov    WORD PTR [ebx-0x49cde1ef],fs
  40c6e3:	pop    ebp
  40c6e4:	call   0x410886d2
  40c6e9:	add    BYTE PTR [esp+ebx*2],bl
  40c6ec:	adc    BYTE PTR ds:0x96db477f,ch
  40c6f2:	xchg   ebp,eax
  40c6f3:	mov    al,ds:0x6b20feee
  40c6f8:	retf   
  40c6f9:	push   es
  40c6fa:	push   ss
  40c6fb:	js     0x40c6f0
  40c6fd:	jmp    0xf63a:0xe5c79d1b
  40c704:	adc    al,0xe7
  40c706:	enter  0xf5ae,0x73
  40c70a:	jne    0x40c741
  40c70c:	add    bh,bl
  40c70e:	cmc    
  40c70f:	jecxz  0x40c69c
  40c711:	pop    ss
  40c712:	dec    esp
  40c713:	loope  0x40c778
  40c715:	or     eax,0x68c449f5
  40c71a:	sub    DWORD PTR [ecx-0x5f],esi
  40c71d:	push   es
  40c71e:	add    edx,edi
  40c720:	or     DWORD PTR [edx+0x4d1345f9],ecx
  40c726:	dec    esp
  40c727:	mov    al,BYTE PTR [ebx-0x12]
  40c72a:	add    ecx,ebp
  40c72c:	cmp    BYTE PTR [edx-0x42],0x4
  40c730:	jbe    0x40c6bd
  40c732:	sub    al,0x1c
  40c734:	scas   eax,DWORD PTR es:[edi]
  40c735:	dec    eax
  40c736:	pop    edi
  40c737:	xor    al,0x16
  40c739:	int    0xca
  40c73b:	push   edx
  40c73c:	mov    ebx,0x1a6b8581
  40c741:	inc    esp
  40c742:	mov    ebp,0x8ab37b1b
  40c747:	mov    ds,WORD PTR [eax+0x7d68062b]
  40c74d:	scas   eax,DWORD PTR es:[edi]
  40c74e:	(bad)  [eax+edi*2-0x348dce65]
  40c755:	pushf  
  40c756:	ret    0xb21f
  40c759:	lods   al,BYTE PTR ds:[esi]
  40c75a:	sbb    BYTE PTR [edi+0x3e7f2090],bl
  40c760:	pop    ss
  40c761:	lods   eax,DWORD PTR ds:[esi]
  40c762:	fadd   st(6),st
  40c764:	call   0xbfac1b11
  40c769:	lea    ebx,[ebp+0x6a]
  40c76c:	add    BYTE PTR [ebx-0x1e7bd2e4],dl
  40c772:	or     al,0xd0
  40c774:	mov    edx,DWORD PTR [esi+0x42210cb]
  40c77a:	lahf   
  40c77b:	and    al,0x49
  40c77d:	xchg   BYTE PTR [edi+0x4d],ah
  40c780:	sbb    eax,0x9bcb68bf
  40c785:	mov    bl,0x63
  40c787:	data16 clc 
  40c789:	dec    ecx
  40c78a:	cmp    bh,BYTE PTR [ecx]
  40c78c:	or     BYTE PTR [esi+0x4e],cl
  40c78f:	mov    ds,eax
  40c791:	jmp    0x3e55:0x82dc45cd
  40c798:	push   esp
  40c799:	in     eax,0xea
  40c79b:	cmp    DWORD PTR [ebx+eax*4+0x7b],0x5a82552
  40c7a3:	push   ecx
  40c7a4:	(bad)  
  40c7a5:	sub    bh,BYTE PTR [ecx]
  40c7a7:	sub    DWORD PTR [eax],ebp
  40c7a9:	pop    ebp
  40c7aa:	cmp    DWORD PTR [edx],ebx
  40c7ac:	push   cs
  40c7ad:	jl     0x40c808
  40c7af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b0:	cld    
  40c7b1:	xchg   ebx,eax
  40c7b2:	hlt    
  40c7b3:	out    0xcd,eax
  40c7b5:	mov    ds:0xc4137008,eax
  40c7ba:	jnp    0x40c76e
  40c7bc:	cmc    
  40c7bd:	mov    BYTE PTR [ebx],cl
  40c7bf:	xor    al,0xb2
  40c7c1:	and    eax,0x494794c4
  40c7c6:	mov    edi,0x6cee9400
  40c7cb:	sti    
  40c7cc:	or     bl,BYTE PTR [edx]
  40c7ce:	and    BYTE PTR [ebp-0x556dd04e],0x7f
  40c7d5:	arpl   WORD PTR [ebx+0x52efb6c4],bx
  40c7db:	cmp    al,0xb6
  40c7dd:	or     edi,DWORD PTR [eax]
  40c7df:	ror    dh,1
  40c7e1:	pop    edi
  40c7e2:	cs inc ebp
  40c7e4:	in     al,0x51
  40c7e6:	(bad)  
  40c7e7:	lahf   
  40c7e8:	pop    edx
  40c7e9:	or     eax,0x23761cd
  40c7ee:	jnp    0x40c7e5
  40c7f0:	cld    
  40c7f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f2:	pop    ebp
  40c7f3:	into   
  40c7f4:	mov    DWORD PTR [edx],esi
  40c7f6:	mov    dh,0x55
  40c7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f9:	pop    ds
  40c7fa:	int    0xd8
  40c7fc:	sbb    DWORD PTR [eax+ebx*2],0x903da356
  40c803:	or     esi,esp
  40c805:	outs   dx,DWORD PTR ds:[si]
  40c807:	inc    edx
  40c808:	stos   BYTE PTR es:[edi],al
  40c809:	adc    BYTE PTR [ebp+0x2b],0x49
  40c80d:	test   BYTE PTR [ebx+edi*2+0x502b7b00],bh
  40c814:	(bad)  
  40c815:	sub    ch,bh
  40c817:	pop    es
  40c818:	dec    eax
  40c819:	lahf   
  40c81a:	mov    ch,0x8e
  40c81c:	and    esp,DWORD PTR [edi-0x65]
  40c81f:	mov    ds,esp
  40c821:	xchg   edx,eax
  40c822:	call   0x5a0b:0x42879be3
  40c829:	mov    bl,0xa9
  40c82b:	mov    eax,ds:0xa6505dde
  40c830:	rep outs dx,BYTE PTR ds:[esi]
  40c832:	pop    ds
  40c833:	addr16 mov dl,0x55
  40c836:	add    bh,bl
  40c838:	outs   dx,BYTE PTR ds:[esi]
  40c839:	dec    esi
  40c83a:	mov    edx,0x643b90ab
  40c83f:	push   ebp
  40c840:	sbb    DWORD PTR [ebx-0xe],esp
  40c843:	(bad)  
  40c845:	mov    WORD PTR [eax+0x3fd6b503],fs
  40c84b:	inc    esi
  40c84c:	dec    esi
  40c84d:	imul   eax,DWORD PTR [eax+eax*2-0x30],0xffffffac
  40c852:	add    ebp,DWORD PTR [ebx-0x5a5ec761]
  40c858:	sub    eax,0x2945a03f
  40c85d:	sbb    edx,ebp
  40c85f:	cdq    
  40c860:	(bad)  
  40c861:	retf   0x5bb2
  40c864:	pop    esi
  40c865:	xor    al,0xb2
  40c867:	and    eax,0x579ed362
  40c86c:	mov    ecx,0xed2ff9fd
  40c871:	pop    ecx
  40c872:	pop    edi
  40c873:	cmc    
  40c874:	xchg   DWORD PTR [esp+edi*4-0x36],esp
  40c878:	out    dx,eax
  40c879:	mov    edi,0x8bfa8ad0
  40c87e:	inc    ecx
  40c87f:	sbb    esp,DWORD PTR [eax+edi*8-0x23cc166f]
  40c886:	outs   dx,BYTE PTR ds:[esi]
  40c887:	pop    ds
  40c888:	les    esi,FWORD PTR [esi]
  40c88a:	call   DWORD PTR [ebp-0x14]
  40c88d:	scas   al,BYTE PTR es:[edi]
  40c88e:	push   ebp
  40c88f:	xchg   ecx,eax
  40c890:	lock (bad) 
  40c892:	xchg   DWORD PTR [eax],ebx
  40c894:	mov    eax,0x10f9b898
  40c899:	ffree  st(7)
  40c89b:	in     eax,dx
  40c89c:	sbb    eax,0x30d977f4
  40c8a1:	jo     0x40c900
  40c8a3:	push   ebp
  40c8a4:	sub    ecx,DWORD PTR [edx+0x3e]
  40c8a7:	pop    ss
  40c8a8:	popf   
  40c8a9:	inc    ebp
  40c8aa:	aam    0x6c
  40c8ac:	into   
  40c8ad:	push   ecx
  40c8ae:	addr16 or eax,0x8ea6d974
  40c8b4:	add    dl,BYTE PTR [ebx]
  40c8b6:	cdq    
  40c8b7:	mov    eax,esp
  40c8b9:	aad    0xab
  40c8bb:	sar    ch,1
  40c8bd:	jne    0x40c8cf
  40c8bf:	fwait
  40c8c0:	adc    al,0xbb
  40c8c2:	rcr    DWORD PTR [esp+eiz*2-0xd],cl
  40c8c6:	sbb    DWORD PTR [edi],esp
  40c8c8:	push   ds
  40c8c9:	or     al,0xee
  40c8cb:	leave  
  40c8cc:	sbb    esi,esp
  40c8ce:	lahf   
  40c8cf:	sbb    al,0x50
  40c8d1:	aad    0x44
  40c8d3:	inc    edx
  40c8d4:	es pop ebx
  40c8d6:	inc    edx
  40c8d7:	cwde   
  40c8d8:	cmp    al,0xd7
  40c8da:	cmp    edx,DWORD PTR [edx+edx*4-0x37]
  40c8de:	hlt    
  40c8df:	data16 and dl,BYTE PTR [edx-0x72]
  40c8e3:	cs (bad) 
  40c8e5:	xchg   esi,eax
  40c8e6:	adc    eax,0x38ecfa87
  40c8eb:	enter  0x7425,0x96
  40c8ef:	and    edi,DWORD PTR ds:0x3ce02f91
  40c8f5:	aas    
  40c8f6:	rcr    dh,0xda
  40c8f9:	ror    DWORD PTR [esi],0x3a
  40c8fc:	retf   0x1b34
  40c8ff:	bnd jnp 0x40c897
  40c902:	inc    esi
  40c903:	aaa    
  40c904:	arpl   bx,bp
  40c906:	xchg   esi,eax
  40c907:	outs   dx,BYTE PTR ds:[esi]
  40c908:	pop    esi
  40c909:	mov    ds:0x8c5508e2,al
  40c90e:	inc    esi
  40c90f:	jo     0x40c910
  40c911:	push   0x87ccd03b
  40c916:	aad    0x96
  40c918:	aas    
  40c919:	or     al,0x68
  40c91b:	stos   BYTE PTR es:[edi],al
  40c91c:	retf   0x3e57
  40c91f:	dec    esi
  40c920:	mov    ecx,0xde5dd560
  40c925:	xchg   ebx,eax
  40c926:	lods   al,BYTE PTR ds:[esi]
  40c927:	fsubr  QWORD PTR [edi+0x3a451150]
  40c92d:	xor    esi,DWORD PTR [eax+esi*2]
  40c930:	test   BYTE PTR [edx+0x42b67236],al
  40c936:	(bad)  
  40c937:	arpl   cx,di
  40c939:	ins    DWORD PTR es:[edi],dx
  40c93a:	imul   ecx,DWORD PTR [ebp-0x79],0xfffffffc
  40c93e:	(bad)  [ebp+eiz*1+0x7e1ebc9e]
  40c945:	fild   QWORD PTR [ecx]
  40c947:	xchg   ebx,eax
  40c948:	nop
  40c949:	scas   al,BYTE PTR es:[edi]
  40c94a:	inc    edx
  40c94b:	repz adc BYTE PTR [eax],0x18
  40c94f:	push   ds
  40c950:	inc    ebp
  40c951:	test   BYTE PTR [edi],bh
  40c953:	cdq    
  40c954:	jae    0x40c9ce
  40c956:	mov    cl,0xb7
  40c958:	rcl    eax,0xd6
  40c95b:	push   ebx
  40c95c:	shl    BYTE PTR [edx+0x6e],0xa4
  40c960:	pop    esp
  40c961:	inc    edi
  40c962:	aad    0x8e
  40c964:	shl    esi,1
  40c966:	xor    eax,0xa4ce525e
  40c96b:	push   ebx
  40c96c:	inc    cx
  40c96e:	xor    bl,bh
  40c970:	ins    BYTE PTR es:[edi],dx
  40c971:	sbb    DWORD PTR [eax],edi
  40c973:	jns    0x40c93d
  40c975:	(bad)  
  40c976:	icebp  
  40c977:	fs aaa 
  40c979:	outs   dx,BYTE PTR ds:[esi]
  40c97a:	add    BYTE PTR [esi+0x34],ah
  40c97d:	jo     0x40c94d
  40c97f:	call   0x6330645a
  40c984:	clc    
  40c985:	mov    ds:0xd3ba5a5d,al
  40c98a:	xchg   esi,eax
  40c98b:	push   ebp
  40c98c:	scas   eax,DWORD PTR es:[edi]
  40c98d:	outs   dx,BYTE PTR ds:[esi]
  40c98e:	dec    ebp
  40c98f:	adc    BYTE PTR [edx-0x12],bl
  40c992:	call   DWORD PTR ds:0x2425d43b
  40c998:	mov    WORD PTR [esp+ebp*1],gs
  40c99b:	int3   
  40c99c:	inc    ecx
  40c99d:	mov    ds:0xcadab30a,eax
  40c9a2:	pop    ds
  40c9a3:	fwait
  40c9a4:	pop    edi
  40c9a5:	jecxz  0x40c9e9
  40c9a7:	jp     0x40ca02
  40c9a9:	call   0xa212:0x7efe3774
  40c9b0:	jmp    0x9f60bb16
  40c9b5:	mov    cl,0x93
  40c9b7:	mov    eax,ds:0x273e23
  40c9bc:	xor    bl,cl
  40c9be:	sbb    edx,DWORD PTR [ebp+0x5264c81a]
  40c9c4:	mov    al,ds:0x45fcce69
  40c9c9:	sub    DWORD PTR [ecx+ebp*4-0x33],esi
  40c9cd:	ds jo  0x40c994
  40c9d0:	cmc    
  40c9d1:	jg     0x40c964
  40c9d3:	(bad)  
  40c9d4:	mov    esi,0xf285c76d
  40c9d9:	loop   0x40ca3e
  40c9db:	call   0x53:0xc82e7a0
  40c9e2:	inc    DWORD PTR ds:0x16b5ace9
  40c9e8:	push   ebp
  40c9e9:	loope  0x40c981
  40c9eb:	sbb    DWORD PTR [edx+0x76],eax
  40c9ee:	cmp    DWORD PTR [esi],ebp
  40c9f0:	mov    eax,0x14fcf2b6
  40c9f5:	add    al,0xe9
  40c9f7:	sbb    DWORD PTR [eax+esi*1-0x56d1ff99],ebx
  40c9fe:	fcmovbe st,st(7)
  40ca00:	and    ch,ch
  40ca02:	push   ds
  40ca03:	add    edi,esi
  40ca05:	or     esp,ebx
  40ca07:	in     eax,dx
  40ca08:	fmul   DWORD PTR [edx-0x28e6a48c]
  40ca0e:	dec    esi
  40ca0f:	adc    eax,0x985f9375
  40ca14:	lahf   
  40ca15:	icebp  
  40ca16:	inc    esp
  40ca17:	dec    ebx
  40ca18:	aas    
  40ca19:	sub    eax,0xf4bfae81
  40ca1e:	jmp    0x40ca8b
  40ca20:	inc    esp
  40ca21:	inc    eax
  40ca23:	adc    ah,dl
  40ca25:	pushf  
  40ca26:	inc    ebp
  40ca27:	enter  0xb0a8,0x54
  40ca2b:	scas   eax,DWORD PTR es:[edi]
  40ca2c:	cmp    ch,dl
  40ca2e:	aaa    
  40ca2f:	mov    bl,ch
  40ca31:	lahf   
  40ca32:	pusha  
  40ca33:	xchg   edi,eax
  40ca34:	push   eax
  40ca35:	dec    ecx
  40ca36:	test   BYTE PTR [edx],bh
  40ca38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca39:	push   es
  40ca3a:	sub    eax,0xc0f88a95
  40ca3f:	lahf   
  40ca40:	leave  
  40ca41:	in     al,dx
  40ca42:	dec    ebx
  40ca43:	cwde   
  40ca44:	xchg   BYTE PTR [edi],bh
  40ca46:	(bad)  
  40ca47:	lods   al,BYTE PTR ds:[esi]
  40ca48:	lock sysret 
  40ca4b:	push   cs
  40ca4c:	fdivr  QWORD PTR [eax-0x77]
  40ca4f:	sub    eax,0xf3547aaf
  40ca54:	mov    ds:0x7114f1de,eax
  40ca59:	jmp    0x1c6b7ebf
  40ca5e:	xor    BYTE PTR [ecx+0x6c],ch
  40ca61:	jmp    0x40ca53
  40ca63:	push   edx
  40ca64:	leave  
  40ca65:	enter  0x7ae8,0xe0
  40ca69:	imul   esp,DWORD PTR [ebp-0x48ad2abd],0xffffffbe
  40ca70:	jle    0x40cac0
  40ca72:	lahf   
  40ca73:	in     eax,0x19
  40ca75:	mov    dl,0xe5
  40ca77:	idiv   DWORD PTR [edx-0x23ee0686]
  40ca7d:	in     al,0x32
  40ca7f:	int    0xd7
  40ca81:	xor    ecx,eax
  40ca83:	pop    ds
  40ca84:	and    edx,edx
  40ca86:	clc    
  40ca87:	jno    0x40caf2
  40ca89:	add    al,0x97
  40ca8b:	and    BYTE PTR [ebx],dh
  40ca8d:	scas   eax,DWORD PTR es:[edi]
  40ca8e:	xchg   esi,eax
  40ca8f:	dec    ebx
  40ca90:	not    BYTE PTR [edx-0x20]
  40ca93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca94:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40ca96:	mov    bl,0xb0
  40ca98:	(bad)  
  40ca99:	mov    esp,0xf75fc06a
  40ca9e:	gs or  al,0xd
  40caa1:	sub    ecx,0x6d
  40caa4:	lods   al,BYTE PTR es:[esi]
  40caa6:	loopne 0x40ca32
  40caa8:	pop    edx
  40caa9:	cld    
  40caaa:	mov    es,edi
  40caac:	jmp    0x40caec
  40caae:	frstor [esi+ebp*8]
  40cab1:	cmp    DWORD PTR [esi+0x3dbc30c5],edx
  40cab7:	sahf   
  40cab8:	(bad)
  40cabb:	imul   ecx,DWORD PTR [ebx+0x7df531fc],0xfffffff3
  40cac2:	mov    ch,0xc2
  40cac4:	xchg   BYTE PTR [ebx],dh
  40cac6:	pop    esi
  40cac7:	add    DWORD PTR [ebx],eax
  40cac9:	push   ds
  40caca:	(bad)  
  40cacc:	dec    eax
  40cacd:	loopne 0x40ca59
  40cacf:	mov    al,0xff
  40cad1:	dec    ebx
  40cad2:	clc    
  40cad3:	fmul   st,st(6)
  40cad5:	out    dx,al
  40cad6:	dec    ebp
  40cad7:	mov    esi,0x8b06c257
  40cadc:	in     eax,0x51
  40cade:	daa    
  40cadf:	xchg   ebx,eax
  40cae0:	test   DWORD PTR [edx-0x7e9cec2a],0x101bc11f
  40caea:	jo     0x40cae4
  40caec:	scas   eax,DWORD PTR es:[edi]
  40caed:	push   esp
  40caee:	xchg   ebp,eax
  40caef:	or     DWORD PTR [eax-0x78],0xffffffd3
  40caf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caf4:	popa   
  40caf5:	clc    
  40caf6:	clc    
  40caf7:	xchg   cl,dl
  40caf9:	jge    0x40ca7c
  40cafb:	imul   eax,DWORD PTR [eax],0x5d80bf42
  40cb01:	shr    BYTE PTR [ebx+edx*2],0x46
  40cb05:	(bad)  
  40cb06:	cld    
  40cb07:	mov    ds:0x84fb0101,eax
  40cb0c:	or     al,0x2c
  40cb0e:	into   
  40cb0f:	jecxz  0x40ca92
  40cb11:	jb     0x40cacb
  40cb13:	stos   BYTE PTR es:[edi],al
  40cb14:	mov    ds:0x9d5ec129,al
  40cb19:	fwait
  40cb1a:	popa   
  40cb1b:	mov    ebp,0xb19a3dd3
  40cb20:	sub    eax,0xcc4bcca
  40cb25:	cli    
  40cb26:	add    eax,0x35735913
  40cb2b:	pusha  
  40cb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb2d:	pop    es
  40cb2e:	pop    edx
  40cb2f:	sbb    ch,BYTE PTR ds:0x15f24a1a
  40cb35:	neg    esi
  40cb37:	ret    0xecdd
  40cb3a:	pop    edx
  40cb3b:	cmp    al,BYTE PTR [esi*4+0xdc37066]
  40cb42:	xchg   esp,eax
  40cb43:	icebp  
  40cb44:	ins    DWORD PTR es:[edi],dx
  40cb45:	xor    bl,BYTE PTR [esi+0x2d050e35]
  40cb4b:	mov    eax,ds:0x83bb3508
  40cb50:	(bad)  
  40cb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb52:	mov    bh,0xa3
  40cb54:	xchg   ebx,eax
  40cb55:	rol    BYTE PTR [ebx],1
  40cb57:	ins    DWORD PTR es:[edi],dx
  40cb58:	cs jns 0x40cbca
  40cb5b:	add    eax,0x7fb51e28
  40cb60:	mov    cs,WORD PTR [esi]
  40cb62:	neg    DWORD PTR [esp+eax*8-0x73]
  40cb66:	adc    eax,0xe4f1fd97
  40cb6b:	fst    st(1)
  40cb6d:	and    BYTE PTR [ebx+edx*1+0x60],bh
  40cb71:	test   esp,esi
  40cb73:	retf   
  40cb74:	cmc    
  40cb75:	push   0x251e350
  40cb7a:	hlt    
  40cb7b:	xchg   ecx,eax
  40cb7c:	fs enter 0x9a6a,0x4a
  40cb81:	adc    eax,DWORD PTR ds:0x798885ec
  40cb87:	cdq    
  40cb88:	sub    al,0x54
  40cb8a:	mov    BYTE PTR [eax+0x1e],ah
  40cb8d:	fmul   QWORD PTR [edi-0x7cc46dc5]
  40cb93:	inc    ch
  40cb95:	fisttp QWORD PTR [esi+0x7a]
  40cb98:	test   BYTE PTR [esi+0x74a8ce2e],ah
  40cb9e:	inc    edi
  40cb9f:	ins    BYTE PTR es:[edi],dx
  40cba0:	ror    al,0xb0
  40cba3:	inc    ebx
  40cba4:	mov    esi,DWORD PTR [ebx]
  40cba6:	cmp    eax,0x2f524b6c
  40cbab:	mov    al,BYTE PTR [ecx]
  40cbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbae:	adc    BYTE PTR [edi-0x41],0xa9
  40cbb2:	icebp  
  40cbb3:	out    0x5,eax
  40cbb5:	dec    edx
  40cbb6:	adc    BYTE PTR [esi+esi*2-0x4a],ch
  40cbba:	pushf  
  40cbbb:	loope  0x40cc30
  40cbbd:	ja     0x40cb5f
  40cbbf:	retf   
  40cbc0:	mov    al,ds:0xb9d4e52d
  40cbc5:	(bad)  
  40cbc6:	cld    
  40cbc7:	ds in  al,0x32
  40cbca:	data16 stc 
  40cbcc:	pop    es
  40cbcd:	retf   
  40cbce:	or     BYTE PTR [ecx+0x734cfafe],bh
  40cbd4:	ins    BYTE PTR es:[edi],dx
  40cbd5:	and    al,BYTE PTR [esi]
  40cbd7:	sbb    edi,DWORD PTR [edx]
  40cbd9:	xchg   DWORD PTR [edi+eax*8],ecx
  40cbdc:	ins    BYTE PTR es:[edi],dx
  40cbdd:	push   ds
  40cbde:	mov    bh,0x41
  40cbe0:	(bad)  
  40cbe1:	sti    
  40cbe2:	add    esp,DWORD PTR ds:0xf673bc08
  40cbe8:	cmp    esp,esp
  40cbea:	add    ah,BYTE PTR [edx]
  40cbec:	(bad)  
  40cbed:	xlat   BYTE PTR ds:[ebx]
  40cbee:	pop    ebx
  40cbef:	hlt    
  40cbf0:	push   ss
  40cbf1:	xlat   BYTE PTR ds:[ebx]
  40cbf2:	mov    dl,0xe1
  40cbf4:	pop    ds
  40cbf5:	in     al,0x4e
  40cbf7:	mov    BYTE PTR [ebp+0x1d],ah
  40cbfa:	mov    ebp,0x8ea89772
  40cbff:	push   edi
  40cc00:	frstor [ecx]
  40cc02:	sbb    BYTE PTR [eax+0x39],al
  40cc05:	div    ch
  40cc07:	in     al,dx
  40cc08:	aam    0xaf
  40cc0a:	add    edx,DWORD PTR [esi]
  40cc0c:	repz pushf 
  40cc0e:	or     al,0x4f
  40cc10:	mov    eax,0xada1f714
  40cc15:	fnstsw WORD PTR [edi-0x5ac8e473]
  40cc1b:	jb     0x40cbdc
  40cc1d:	jmp    0xc072044b
  40cc22:	mov    WORD PTR [eax-0x47],ss
  40cc25:	in     eax,dx
  40cc26:	ror    ah,0xf0
  40cc29:	cmp    esi,edi
  40cc2b:	mov    bh,0xa
  40cc2d:	test   DWORD PTR [esi-0xf97ad71],edi
  40cc33:	imul   eax,DWORD PTR [edi],0x3661ad5b
  40cc39:	mov    ah,0x5c
  40cc3b:	dec    edx
  40cc3c:	fwait
  40cc3d:	vminsd xmm0,xmm0,QWORD PTR [ebp-0x36393504]
  40cc45:	xchg   ebx,eax
  40cc46:	mov    ebp,0xf98b8a0b
  40cc4b:	push   cs
  40cc4c:	mov    bh,0xe6
  40cc4e:	adc    eax,0x6a212266
  40cc53:	xor    ecx,esi
  40cc55:	xchg   ecx,eax
  40cc56:	sbb    ebx,0xcd690deb
  40cc5c:	dec    esi
  40cc5d:	and    al,0x52
  40cc5f:	mov    edx,0xfeeed870
  40cc64:	pusha  
  40cc65:	out    0xf0,eax
  40cc67:	cmp    al,0x80
  40cc69:	ins    BYTE PTR es:[edi],dx
  40cc6a:	jg     0x40ccbe
  40cc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6d:	fld    QWORD PTR [edi+0x20f4b33c]
  40cc73:	inc    esi
  40cc74:	sub    BYTE PTR [esi+0x413422e8],al
  40cc7a:	stos   BYTE PTR es:[edi],al
  40cc7b:	cmp    DWORD PTR [ebp-0x329a356e],esi
  40cc81:	inc    edx
  40cc82:	xlat   BYTE PTR ds:[ebx]
  40cc83:	sub    ebp,DWORD PTR [ecx+0x3f433af6]
  40cc89:	clc    
  40cc8a:	popa   
  40cc8b:	pop    edx
  40cc8c:	sub    BYTE PTR [esi+0x0],al
  40cc8f:	fdivr  QWORD PTR [edx]
  40cc91:	mov    ds:0x917f5fb7,al
  40cc96:	jmp    0xc6814464
  40cc9b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cc9d:	fsubrp st(4),st
  40cc9f:	jg     0x40cc27
  40cca1:	pop    edx
  40cca2:	pusha  
  40cca3:	xor    ch,BYTE PTR [ebx]
  40cca5:	or     BYTE PTR [edx],ch
  40cca7:	inc    edx
  40cca8:	icebp  
  40cca9:	enter  0xbaeb,0x95
  40ccad:	mov    esp,0x11f07c3c
  40ccb2:	div    BYTE PTR [edx+0x25]
  40ccb5:	mov    ebp,ecx
  40ccb7:	and    DWORD PTR [ecx+0x1b938654],ecx
  40ccbd:	ror    BYTE PTR [edi-0x2e],cl
  40ccc0:	mov    bh,0x32
  40ccc2:	mov    bl,0x89
  40ccc4:	jge    0x40cc57
  40ccc6:	(bad)  
  40ccc7:	ror    DWORD PTR [esi],cl
  40ccc9:	pop    eax
  40ccca:	jbe    0x40cca6
  40cccc:	mov    bl,0xaa
  40ccce:	bound  ebx,QWORD PTR [esi+ebp*4-0x74]
  40ccd2:	or     BYTE PTR [ecx-0x7a],dl
  40ccd5:	adc    DWORD PTR ds:0x11ac6ad,eax
  40ccdb:	test   al,0x4
  40ccdd:	aad    0x18
  40ccdf:	cdq    
  40cce0:	mov    edi,0x5c71ea47
  40cce5:	out    0x10,eax
  40cce7:	push   ecx
  40cce8:	icebp  
  40cce9:	xor    DWORD PTR [edx-0x41],eax
  40ccec:	je     0x40cd18
  40ccee:	pop    ss
  40ccef:	jae    0x40cc90
  40ccf1:	or     al,0x62
  40ccf3:	imul   esi,edx,0x48
  40ccf6:	or     BYTE PTR [edi-0x3fbd3ea],0xcb
  40ccfd:	cld    
  40ccfe:	push   ds
  40ccff:	dec    ecx
  40cd00:	sub    DWORD PTR [edi],esi
  40cd02:	cld    
  40cd03:	mov    al,ds:0x3fdbdad4
  40cd08:	retf   
  40cd09:	rcr    BYTE PTR [edi+0x2a16b9d6],0x8a
  40cd10:	aaa    
  40cd11:	div    DWORD PTR [esi+0x16270644]
  40cd17:	mov    al,0x9d
  40cd19:	test   bh,0xbc
  40cd1c:	and    eax,DWORD PTR [eax+0x73ef4f80]
  40cd22:	mov    bh,0x48
  40cd24:	test   DWORD PTR [esi+eiz*4],edi
  40cd27:	int    0x80
  40cd29:	push   es
  40cd2a:	pop    ds
  40cd2b:	inc    ebp
  40cd2c:	push   0xffffffe8
  40cd2e:	jae    0x40cd1f
  40cd30:	push   esp
  40cd31:	dec    eax
  40cd32:	cli    
  40cd33:	(bad)  
  40cd34:	in     eax,dx
  40cd35:	and    al,0x70
  40cd37:	mov    BYTE PTR [ecx+0x2d],bh
  40cd3a:	pushf  
  40cd3b:	inc    edx
  40cd3c:	and    BYTE PTR [edx+0x48],ch
  40cd3f:	(bad)  
  40cd40:	mov    DWORD PTR [edi+0x2b4f4dca],edi
  40cd46:	je     0x40cd0a
  40cd48:	enter  0x5928,0xc0
  40cd4c:	dec    edx
  40cd4d:	xchg   DWORD PTR [edx],edx
  40cd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd50:	mov    eax,0xf75dcf14
  40cd55:	stc    
  40cd56:	mov    dl,0x68
  40cd58:	push   0xca0a340f
  40cd5d:	lahf   
  40cd5e:	ins    BYTE PTR es:[edi],dx
  40cd5f:	mov    eax,ds:0x4141e70a
  40cd64:	repz sbb DWORD PTR [ecx],ebx
  40cd67:	push   edx
  40cd68:	(bad)  
  40cd69:	xchg   ebp,eax
  40cd6a:	ja     0x40cd7d
  40cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd6d:	cwde   
  40cd6e:	adc    eax,DWORD PTR [edi-0x6]
  40cd71:	jns    0x40cd13
  40cd73:	sbb    DWORD PTR [edi+0x7a],0xdfe80def
  40cd7a:	cld    
  40cd7b:	lahf   
  40cd7c:	pushf  
  40cd7d:	retf   0xc8fd
  40cd80:	adc    DWORD PTR [edx],ebx
  40cd82:	mov    ah,0x97
  40cd84:	stos   DWORD PTR es:[edi],eax
  40cd85:	mov    cl,0xf9
  40cd87:	jns    0x40cdb6
  40cd89:	mov    esi,0x7561258e
  40cd8e:	fcmovu st,st(0)
  40cd90:	(bad)  
  40cd91:	mov    edi,0xe0241e09
  40cd96:	dec    edx
  40cd97:	push   edi
  40cd98:	dec    edx
  40cd99:	and    BYTE PTR [ecx+0x5f],0x61
  40cd9d:	jnp    0x40cd9e
  40cd9f:	pop    ds
  40cda0:	adc    DWORD PTR [edx+ebp*1+0x5],ebx
  40cda4:	ffree  st(0)
  40cda6:	and    BYTE PTR [ebp-0x35],0xb9
  40cdaa:	pop    ss
  40cdab:	aaa    
  40cdac:	out    0x91,eax
  40cdae:	mov    al,0x94
  40cdb0:	mov    bh,0x3f
  40cdb2:	data16 icebp 
  40cdb4:	inc    esp
  40cdb5:	dec    esi
  40cdb6:	ins    DWORD PTR es:[edi],dx
  40cdb7:	inc    esi
  40cdb8:	sbb    cl,BYTE PTR [edx+0x2a5d8dcc]
  40cdbe:	enter  0x3eac,0x76
  40cdc2:	inc    esi
  40cdc3:	cmp    BYTE PTR [edx-0xb],cl
  40cdc6:	xchg   ebp,eax
  40cdc7:	sub    DWORD PTR [ebx-0x3ab7b12],ecx
  40cdcd:	and    ch,BYTE PTR [esi-0x4f801b7b]
  40cdd3:	and    al,0x47
  40cdd5:	imul   esi,DWORD PTR [ebx],0xffffffe7
  40cdd8:	shl    esi,cl
  40cdda:	fs out 0x62,al
  40cddd:	mov    dl,BYTE PTR [esi+ebp*2-0x5379ebea]
  40cde4:	mov    cx,0xf3e8
  40cde8:	inc    esi
  40cde9:	repz mov dh,0xa7
  40cdec:	jge    0x40cdee
  40cdee:	xchg   ecx,esi
  40cdf0:	push   eax
  40cdf1:	outs   dx,BYTE PTR ds:[esi]
  40cdf2:	ror    DWORD PTR [ecx-0x12],0xfe
  40cdf6:	xchg   edi,esi
  40cdf8:	pop    edi
  40cdf9:	dec    edx
  40cdfa:	pushf  
  40cdfb:	mov    gs,WORD PTR [ebp-0x4f]
  40cdfe:	cmp    eax,0xdc356377
  40ce03:	ror    ebx,cl
  40ce05:	test   BYTE PTR [ecx],bh
  40ce07:	lods   eax,DWORD PTR ds:[esi]
  40ce08:	mov    bh,0x23
  40ce0a:	inc    ecx
  40ce0b:	fadd   QWORD PTR [ebx]
  40ce0d:	jmp    0x40cdb4
  40ce0f:	and    al,0x40
  40ce11:	mov    ah,0x3c
  40ce13:	pop    ss
  40ce14:	retf   
  40ce15:	inc    ecx
  40ce16:	outs   dx,DWORD PTR ds:[esi]
  40ce17:	stos   DWORD PTR es:[edi],eax
  40ce18:	into   
  40ce19:	pop    esp
  40ce1a:	aad    0xe2
  40ce1c:	sub    ah,dh
  40ce1e:	out    dx,al
  40ce1f:	sbb    bh,BYTE PTR gs:[edx-0x6d]
  40ce23:	xlat   BYTE PTR ds:[ebx]
  40ce24:	(bad)  
  40ce25:	scas   eax,DWORD PTR es:[edi]
  40ce26:	sahf   
  40ce27:	add    DWORD PTR [ecx-0x50],ebp
  40ce2a:	inc    edx
  40ce2b:	mov    eax,0xbf837b4e
  40ce30:	jnp    0x702bdbac
  40ce36:	(bad)  
  40ce37:	jo     0x40ce1b
  40ce39:	popa   
  40ce3a:	add    eax,0xee0cc8ad
  40ce3f:	cwde   
  40ce40:	jns    0x40ce59
  40ce42:	lea    esi,[eax-0x60]
  40ce45:	push   cs
  40ce46:	stos   DWORD PTR es:[edi],eax
  40ce47:	pop    ecx
  40ce48:	rol    eax,0xd0
  40ce4b:	xchg   esp,eax
  40ce4c:	enter  0x42ec,0xc6
  40ce50:	mov    ?,esi
  40ce52:	in     eax,0xc7
  40ce54:	call   0xd491:0x6a30d23e
  40ce5b:	cmp    ebp,DWORD PTR [ebp-0x762c4cd5]
  40ce61:	pop    esp
  40ce62:	sub    al,0x39
  40ce64:	push   es
  40ce65:	inc    eax
  40ce66:	outs   dx,BYTE PTR ds:[esi]
  40ce67:	mov    ds:0xd8e332c2,al
  40ce6c:	add    eax,eax
  40ce6e:	xchg   ebp,eax
  40ce6f:	ins    DWORD PTR es:[edi],dx
  40ce70:	(bad)  
  40ce72:	jg     0x40ce0a
  40ce74:	sar    BYTE PTR [esi+eax*2+0x5c2382fd],0x25
  40ce7c:	push   0x69
  40ce7e:	int    0xc
  40ce80:	fcom   QWORD PTR [ebp-0x7e20c437]
  40ce86:	push   eax
  40ce87:	stos   DWORD PTR es:[edi],eax
  40ce88:	lods   al,BYTE PTR ds:[esi]
  40ce89:	cmp    BYTE PTR [ecx],bh
  40ce8b:	push   ebp
  40ce8c:	xor    BYTE PTR [ebp-0x646a5918],bh
  40ce92:	test   BYTE PTR [ebx+0x15],bh
  40ce95:	or     dh,al
  40ce97:	lods   al,BYTE PTR ds:[esi]
  40ce98:	out    dx,al
  40ce99:	adc    bh,ah
  40ce9b:	pop    ebx
  40ce9c:	into   
  40ce9d:	lods   eax,DWORD PTR ds:[esi]
  40ce9e:	xchg   ecx,eax
  40ce9f:	repnz push cs
  40cea1:	cwde   
  40cea2:	stc    
  40cea3:	ja     0x40cef2
  40cea5:	call   0x1c32:0xebb3c4bc
  40ceac:	pop    edi
  40cead:	sub    dh,BYTE PTR [ebp-0x63]
  40ceb0:	dec    edi
  40ceb1:	jnp    0x40ce36
  40ceb3:	add    BYTE PTR [edx],dh
  40ceb5:	sub    DWORD PTR [ecx+edx*1],eax
  40ceb8:	das    
  40ceb9:	repnz pop ds
  40cebb:	and    BYTE PTR [ebp-0x31],0xaa
  40cebf:	out    0x13,al
  40cec1:	mov    ch,0x27
  40cec3:	push   edi
  40cec4:	add    bh,0xef
  40cec7:	jae    0x40cf41
  40cec9:	sbb    DWORD PTR [eax-0x23],0x9bdfada3
  40ced0:	jb     0x40cedf
  40ced2:	xchg   edi,eax
  40ced3:	jge    0x40cea6
  40ced5:	fist   WORD PTR [ebx+0x4be16216]
  40cedb:	jge    0x40cf1b
  40cedd:	or     bl,ch
  40cedf:	mov    dl,0xf1
  40cee1:	add    eax,0x31ae9ad3
  40cee6:	pop    ecx
  40cee7:	cs cmp al,0x7e
  40ceea:	mov    dl,0x79
  40ceec:	jb     0x40ced5
  40ceee:	das    
  40ceef:	neg    bl
  40cef1:	and    BYTE PTR ds:0x5f0e044e,dl
  40cef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef8:	out    0xfc,al
  40cefa:	in     eax,0xdf
  40cefc:	add    BYTE PTR [edi],0xef
  40ceff:	mov    bh,0x5f
  40cf01:	mov    edi,0x367e506a
  40cf06:	or     BYTE PTR [edi],0xd2
  40cf09:	js     0x40cea9
  40cf0b:	mov    bh,0x56
  40cf0d:	jno    0x40ceb8
  40cf0f:	push   eax
  40cf10:	push   eax
  40cf11:	popa   
  40cf12:	xchg   ebp,esp
  40cf14:	fild   WORD PTR [ebx-0x79]
  40cf17:	add    DWORD PTR [ebp+0x1dc765e],ebx
  40cf1d:	mov    eax,0x4e936ab2
  40cf22:	(bad)  
  40cf23:	fidivr DWORD PTR [edi]
  40cf25:	into   
  40cf26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf27:	leave  
  40cf28:	sub    al,0xd9
  40cf2a:	scas   al,BYTE PTR es:[edi]
  40cf2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf2c:	mov    ebx,?
  40cf2e:	cdq    
  40cf2f:	lods   al,BYTE PTR ds:[esi]
  40cf30:	cld    
  40cf31:	pop    esi
  40cf32:	mov    ecx,esp
  40cf34:	fs es pop es
  40cf37:	mov    ch,0xd4
  40cf39:	pop    es
  40cf3a:	stos   BYTE PTR es:[edi],al
  40cf3b:	inc    eax
  40cf3c:	daa    
  40cf3d:	lods   al,BYTE PTR ds:[esi]
  40cf3e:	jmp    0x66a5f7df
  40cf43:	pushf  
  40cf44:	mov    ebp,cs
  40cf46:	neg    esi
  40cf48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf49:	aaa    
  40cf4a:	dec    edx
  40cf4b:	test   DWORD PTR [edi*8+0x11d1b4b6],ebx
  40cf52:	shl    BYTE PTR [edi+0x437a8732],0xa3
  40cf59:	shl    DWORD PTR cs:[ebp-0x4ec84b17],0xc2
  40cf61:	and    DWORD PTR [esi-0x3fb11698],ecx
  40cf67:	iret   
  40cf68:	and    eax,esp
  40cf6a:	test   BYTE PTR [esi],dl
  40cf6c:	outs   dx,DWORD PTR ds:[esi]
  40cf6d:	xchg   dh,bl
  40cf6f:	lods   eax,DWORD PTR ds:[esi]
  40cf70:	ins    DWORD PTR es:[edi],dx
  40cf71:	arpl   WORD PTR [ebx+eiz*2-0x7c91b472],bp
  40cf78:	call   0x1f7ea2cc
  40cf7d:	cmp    al,0xc6
  40cf7f:	in     eax,0xc1
  40cf81:	getsec 
  40cf83:	loop   0x40cf19
  40cf85:	(bad)  
  40cf86:	xchg   esp,eax
  40cf87:	or     BYTE PTR [esp+ebx*8],0xa2
  40cf8b:	sub    DWORD PTR [ebp+0x3b],0xc
  40cf8f:	popf   
  40cf90:	in     al,dx
  40cf91:	push   ss
  40cf92:	adc    eax,0x80b627a2
  40cf97:	inc    edi
  40cf98:	mul    DWORD PTR [edi]
  40cf9a:	add    BYTE PTR [esi-0x14],bh
  40cf9d:	fistp  QWORD PTR [edx]
  40cf9f:	mov    bh,0x6
  40cfa1:	mov    bh,0xb7
  40cfa3:	fild   WORD PTR [esi]
  40cfa5:	pop    ecx
  40cfa6:	sbb    DWORD PTR [eax+0x5b796f92],ecx
  40cfac:	pop    eax
  40cfad:	sub    cl,0x5c
  40cfb0:	clc    
  40cfb1:	fldenv [eax+ecx*8-0x46]
  40cfb5:	push   es
  40cfb6:	aam    0x1f
  40cfb8:	call   0x5d231de6
  40cfbd:	enter  0xa037,0x83
  40cfc1:	inc    esp
  40cfc2:	pop    esp
  40cfc3:	mov    ecx,0x51d08198
  40cfc8:	pop    edx
  40cfc9:	call   0x3926:0xead45bde
  40cfd0:	mov    WORD PTR [edi+0x5c44409e],?
  40cfd6:	xchg   edi,eax
  40cfd7:	es and eax,0xb8257682
  40cfdd:	fist   DWORD PTR ds:0x118c9ff6
  40cfe3:	addr16 pop edi
  40cfe5:	add    BYTE PTR [edi+0x61],dl
  40cfe8:	push   ecx
  40cfe9:	fs pop ds
  40cfeb:	adc    DWORD PTR [ebp+0x189ac399],edx
  40cff1:	fisub  DWORD PTR [edx+0x17]
  40cff4:	arpl   WORD PTR [eax],bx
  40cff6:	pop    ebp
  40cff7:	push   ecx
  40cff8:	push   ebp
  40cff9:	push   ebp
  40cffa:	pop    ecx
  40cffb:	repnz (bad) 
  40cffd:	mov    ecx,0xcf13f991
  40d002:	lods   eax,DWORD PTR ds:[esi]
  40d003:	xchg   ebp,eax
  40d004:	int3   
  40d005:	mov    edi,DWORD PTR [ecx]
  40d007:	inc    eax
  40d008:	stc    
  40d009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d00a:	dec    esi
  40d00b:	ins    BYTE PTR es:[edi],dx
  40d00c:	cmp    al,0x1e
  40d00e:	mov    eax,ds:0xa9172b9b
  40d013:	push   edi
  40d014:	mov    WORD PTR [esp+ebx*8-0xe],es
  40d018:	cld    
  40d019:	ins    BYTE PTR es:[edi],dx
  40d01a:	cwde   
  40d01b:	adc    ecx,DWORD PTR [ebx+0x728a1f67]
  40d021:	fadd   QWORD PTR [eax+0x39863548]
  40d027:	out    0xf1,al
  40d029:	adc    eax,0xc105ea02
  40d02f:	repz adc edi,esp
  40d032:	mov    ebx,?
  40d034:	cmp    al,0xfd
  40d036:	xchg   esp,eax
  40d037:	js     0x40d0a1
  40d039:	cld    
  40d03a:	mov    ebx,esi
  40d03c:	sbb    DWORD PTR [edx-0x35],ebx
  40d03f:	mov    ah,0x9e
  40d041:	inc    eax
  40d042:	cmc    
  40d043:	in     eax,0xef
  40d045:	mov    ch,0x72
  40d047:	pop    eax
  40d048:	push   edi
  40d049:	xchg   edi,eax
  40d04a:	retf   
  40d04b:	out    dx,eax
  40d04c:	push   ecx
  40d04d:	rcl    DWORD PTR [eax],cl
  40d04f:	ret    
  40d050:	jo     0x40d0a6
  40d052:	xor    eax,0x3a02cd93
  40d057:	pop    ss
  40d058:	adc    eax,0xdc1a0299
  40d05d:	sub    DWORD PTR [eax-0x77],ebx
  40d060:	int    0x4c
  40d062:	sub    al,0xf1
  40d064:	add    eax,0x1da72e36
  40d069:	stos   DWORD PTR es:[edi],eax
  40d06a:	pop    ecx
  40d06b:	ret    
  40d06c:	sbb    eax,0xc43348fe
  40d071:	shr    esi,1
  40d073:	xor    BYTE PTR [edi],al
  40d075:	bound  ebx,QWORD PTR [edx+eax*4-0x54]
  40d079:	pop    edx
  40d07a:	inc    esi
  40d07b:	int    0x78
  40d07d:	fdiv   QWORD PTR [ecx-0x53]
  40d080:	ins    BYTE PTR es:[edi],dx
  40d081:	push   ss
  40d082:	lock and edx,ecx
  40d085:	into   
  40d086:	push   es
  40d087:	fs mov bl,0xc1
  40d08a:	jns    0x40d0fc
  40d08c:	bound  ecx,QWORD PTR [edi-0xc]
  40d08f:	sub    dh,BYTE PTR [edx]
  40d091:	div    DWORD PTR [esi-0x29]
  40d094:	adc    BYTE PTR [esi],bh
  40d096:	cmovae edx,eax
  40d099:	cld    
  40d09a:	sub    al,0x69
  40d09c:	xchg   esp,eax
  40d09d:	mov    DWORD PTR [eax+ebp*8],ebp
  40d0a0:	inc    esp
  40d0a1:	push   ecx
  40d0a2:	mov    ds,esp
  40d0a4:	shr    DWORD PTR [edx-0x6003df9b],1
  40d0aa:	shl    DWORD PTR [eax+0x4c],cl
  40d0ad:	ret    
  40d0ae:	test   BYTE PTR [eax+0x4ba967b9],ch
  40d0b4:	sub    eax,0x8edcc4fc
  40d0b9:	fdiv   QWORD PTR [ebp-0x8d398f]
  40d0bf:	popa   
  40d0c0:	aas    
  40d0c1:	jmp    0xb6d8:0x85ee9376
  40d0c8:	cwde   
  40d0c9:	dec    edx
  40d0ca:	aam    0x18
  40d0cc:	in     eax,0x78
  40d0ce:	loop   0x40d0d0
  40d0d0:	imul   ecx,DWORD PTR [ecx-0x7],0x1c
  40d0d4:	jmp    0xa451f59
  40d0d9:	dec    edx
  40d0da:	sub    edi,ebx
  40d0dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0dd:	push   ecx
  40d0de:	jae    0x40d0d9
  40d0e0:	(bad)  
  40d0e1:	push   di
  40d0e3:	inc    ecx
  40d0e4:	fisubr DWORD PTR [ecx-0xb6f69b8]
  40d0ea:	sbb    BYTE PTR [ebx],al
  40d0ec:	and    BYTE PTR [esi],al
  40d0ee:	ss cli 
  40d0f0:	leave  
  40d0f1:	cmp    DWORD PTR [ebp-0x3451fe83],esi
  40d0f7:	mov    dh,0x4
  40d0f9:	or     esi,DWORD PTR [eax-0x2d]
  40d0fc:	sbb    al,BYTE PTR [esi-0x6ce23231]
  40d102:	bound  eax,QWORD PTR [edx-0x15]
  40d105:	ret    
  40d106:	inc    esp
  40d107:	js     0x40d0c5
  40d109:	add    al,ch
  40d10b:	in     eax,0xa3
  40d10d:	jle    0x40d11d
  40d10f:	ss push esp
  40d111:	outs   dx,DWORD PTR ds:[esi]
  40d112:	hlt    
  40d113:	sub    al,0x68
  40d115:	mov    dh,0x59
  40d117:	gs adc al,0xeb
  40d11a:	and    eax,0x23970acc
  40d11f:	ins    DWORD PTR es:[edi],dx
  40d120:	scas   eax,DWORD PTR es:[edi]
  40d121:	mov    dh,ch
  40d123:	sti    
  40d124:	push   eax
  40d125:	jle    0x40d143
  40d127:	jbe    0x40d13f
  40d129:	fs jo  0x40d0ce
  40d12c:	push   cs
  40d12d:	inc    esp
  40d12e:	stos   BYTE PTR es:[edi],al
  40d12f:	stc    
  40d130:	or     eax,0x7afa3312
  40d135:	cmp    esp,DWORD PTR [ecx+0x30cda6af]
  40d13b:	and    al,0x15
  40d13d:	out    0x8,eax
  40d13f:	icebp  
  40d140:	data16 loopne 0x40d0cc
  40d143:	jbe    0x40d0d2
  40d145:	jmp    0xa91c:0x80c86a86
  40d14c:	stos   DWORD PTR es:[edi],eax
  40d14d:	mov    esi,edi
  40d14f:	push   edx
  40d150:	xchg   esi,eax
  40d151:	pop    DWORD PTR [esi-0x3f]
  40d154:	loop   0x40d148
  40d156:	pop    edi
  40d157:	cmp    dh,BYTE PTR [esi+0x4a83a671]
  40d15d:	test   al,0xf
  40d15f:	stos   DWORD PTR es:[edi],eax
  40d160:	pop    ds
  40d161:	jmp    0x40d130
  40d163:	cmp    eax,0x529118c
  40d168:	das    
  40d169:	and    DWORD PTR [edx+0x53],edx
  40d16c:	cmp    DWORD PTR [edx+0x62],eax
  40d16f:	xor    eax,0xdacfe9c
  40d174:	xlat   BYTE PTR ds:[ebx]
  40d175:	arpl   bp,ax
  40d177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d178:	jl     0x40d1ab
  40d17a:	jns    0x40d18b
  40d17c:	ins    BYTE PTR es:[edi],dx
  40d17d:	fpatan 
  40d17f:	iret   
  40d180:	(bad)  
  40d181:	dec    edx
  40d182:	imul   DWORD PTR [edi]
  40d184:	add    al,0xc4
  40d186:	pop    ds
  40d187:	ror    DWORD PTR [edx],1
  40d189:	(bad)  
  40d18a:	cmp    cl,BYTE PTR [ebx+0x26111810]
  40d190:	cmp    eax,0xb466207f
  40d195:	cmp    ch,BYTE PTR [ecx]
  40d197:	xchg   edi,eax
  40d198:	das    
  40d199:	imul   edx,DWORD PTR ds:0x4e78e2df,0xfffffff2
  40d1a0:	test   al,0xd6
  40d1a2:	jns    0x40d140
  40d1a4:	pop    ss
  40d1a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1a6:	pop    es
  40d1a7:	iret   
  40d1a8:	cwde   
  40d1a9:	xor    eax,0x54985fb9
  40d1ae:	inc    dl
  40d1b0:	add    BYTE PTR [eax+esi*2],ah
  40d1b3:	clc    
  40d1b4:	dec    ecx
  40d1b5:	mov    eax,ds:0x7ca9fcaf
  40d1ba:	aaa    
  40d1bb:	mov    eax,0x15aaa3e5
  40d1c0:	push   ebx
  40d1c1:	pop    ss
  40d1c2:	jnp    0x40d18f
  40d1c4:	mov    ecx,DWORD PTR [eax-0x247db583]
  40d1ca:	mov    eax,ds:0x9fa73762
  40d1cf:	and    ebp,DWORD PTR [edi-0x1d]
  40d1d2:	dec    esp
  40d1d3:	jle    0x40d1ec
  40d1d5:	pop    ebp
  40d1d6:	mov    bl,dl
  40d1d8:	mov    eax,0xe8361be1
  40d1dd:	sti    
  40d1de:	in     al,0x39
  40d1e0:	adc    DWORD PTR ds:0x3576649a,ebp
  40d1e6:	cs aam 0x95
  40d1e9:	je     0x40d1e3
  40d1eb:	enter  0x47a1,0x48
  40d1ef:	outs   dx,DWORD PTR ds:[esi]
  40d1f0:	xchg   esp,eax
  40d1f1:	adc    BYTE PTR [ecx+edx*8+0x1176efb5],0x93
  40d1f9:	mov    esi,0x7eaaa121
  40d1fe:	sti    
  40d1ff:	mov    eax,ds:0x6ba2ef46
  40d204:	mov    fs,WORD PTR [ecx-0x49]
  40d207:	dec    esp
  40d208:	cdq    
  40d209:	mov    WORD PTR [edi+0x76],fs
  40d20c:	test   al,0x68
  40d20e:	addr16 out 0x79,al
  40d211:	pushf  
  40d212:	adc    ch,ch
  40d214:	das    
  40d215:	mov    WORD PTR [ecx+eax*2+0x24247b0e],gs
  40d21c:	repz add eax,0x25455b5
  40d222:	ss mov ah,0x87
  40d225:	sbb    dh,BYTE PTR [eax+0x14]
  40d228:	fld    DWORD PTR [edx+esi*2+0x5b]
  40d22c:	jge    0x40d201
  40d22e:	lods   al,BYTE PTR ds:[esi]
  40d22f:	sbb    al,ch
  40d231:	push   ebp
  40d232:	and    DWORD PTR [ebp+edi*8+0x39],ecx
  40d236:	arpl   WORD PTR [ebx],cx
  40d238:	int    0xef
  40d23a:	cmp    bl,BYTE PTR [edi+0x718a0373]
  40d240:	add    ah,BYTE PTR [edi]
  40d242:	pop    ss
  40d243:	xchg   ebx,ecx
  40d245:	pop    es
  40d246:	ja     0x40d22c
  40d248:	mov    edx,0x6d4138fe
  40d24d:	(bad)  
  40d24f:	pop    es
  40d250:	mov    al,0x52
  40d252:	aas    
  40d253:	and    eax,0xb2d6cc9e
  40d258:	pop    esp
  40d259:	pop    eax
  40d25a:	pop    edx
  40d25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25c:	clc    
  40d25d:	lock sbb eax,0x6a81082e
  40d263:	jmp    0x28654a44
  40d268:	ds ss ja 0x40d2bc
  40d26c:	xlat   BYTE PTR ds:[ebx]
  40d26e:	bound  ebp,QWORD PTR [edi+0x61]
  40d271:	xchg   ebp,eax
  40d272:	cmp    eax,0xc8f1ee8b
  40d277:	cmp    al,0xb9
  40d279:	(bad)  
  40d27a:	int3   
  40d27b:	cdq    
  40d27c:	dec    ebx
  40d27d:	adc    ebx,DWORD PTR [edi]
  40d27f:	shl    BYTE PTR [ecx+0x40],1
  40d282:	enter  0x8914,0x2e
  40d286:	jg     0x40d303
  40d288:	ins    BYTE PTR es:[edi],dx
  40d289:	repz ret 0x6da
  40d28d:	ins    DWORD PTR es:[edi],dx
  40d28e:	pop    esi
  40d28f:	rol    DWORD PTR ds:0xf940bb49,0xb
  40d296:	dec    esi
  40d297:	xor    DWORD PTR [edx-0x6a81be66],ebp
  40d29d:	dec    ebp
  40d29e:	xchg   edx,eax
  40d29f:	stc    
  40d2a0:	cmp    BYTE PTR ds:0x763799e8,dh
  40d2a6:	test   BYTE PTR [edi-0x74],dh
  40d2a9:	lds    ebp,FWORD PTR [ebp+0x10a4fdc3]
  40d2af:	sub    esi,esp
  40d2b1:	popf   
  40d2b2:	mov    ebp,0xca2795c
  40d2b7:	push   edx
  40d2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b9:	push   ebp
  40d2ba:	sbb    al,0xb7
  40d2bc:	adc    BYTE PTR [edx-0x1b],ah
  40d2bf:	cmp    al,0xe5
  40d2c1:	and    eax,0x3fa3b54
  40d2c6:	inc    esi
  40d2c7:	lahf   
  40d2c8:	jne    0x40d331
  40d2ca:	and    al,0xf5
  40d2cc:	or     al,0x50
  40d2ce:	ja     0x40d2fa
  40d2d0:	ins    DWORD PTR es:[edi],dx
  40d2d1:	xor    BYTE PTR [esp+ecx*1],cl
  40d2d4:	push   cs
  40d2d5:	icebp  
  40d2d6:	jmp    0xf6d:0xdf334553
  40d2dd:	and    eax,0x5f2b4591
  40d2e2:	or     eax,0x4ae8595d
  40d2e7:	jmp    0x3446:0xc4926581
  40d2ee:	ret    
  40d2ef:	xor    DWORD PTR [edx+0x3f],eax
  40d2f2:	mov    ebx,0x3acdde03
  40d2f7:	sub    BYTE PTR [ecx],bl
  40d2f9:	xchg   BYTE PTR [ecx],al
  40d2fb:	shl    BYTE PTR [edx+0x2e0eb812],1
  40d301:	lods   al,BYTE PTR ds:[esi]
  40d302:	mov    ecx,0x40b4c391
  40d307:	call   0x57737797
  40d30c:	dec    esi
  40d30d:	lahf   
  40d30e:	stc    
  40d30f:	sub    al,BYTE PTR [edi]
  40d311:	mov    ch,0xfb
  40d313:	lock mov edx,0x5bdc7d54
  40d319:	pop    ds
  40d31a:	inc    ebp
  40d31b:	gs out 0xf4,al
  40d31e:	cmc    
  40d31f:	imul   eax,DWORD PTR gs:[ecx+ebp*2+0x47],0xffffffdc
  40d325:	mov    bl,0x0
  40d327:	mov    BYTE PTR [ebx-0x65],bh
  40d32a:	jbe    0x40d2ca
  40d32c:	dec    edx
  40d32d:	ret    0x4e57
  40d330:	dec    esp
  40d331:	jmp    0x1700:0xd8b8ca9c
  40d338:	call   0xa4f9:0x68325dd
  40d33f:	lahf   
  40d340:	adc    BYTE PTR [edx+0x4b],bh
  40d343:	inc    esi
  40d344:	retf   
  40d345:	add    al,bh
  40d347:	push   cs
  40d348:	imul   ebx,DWORD PTR [esi+esi*1+0x79a41936],0x38ee62db
  40d353:	jge    0x40d33d
  40d355:	adc    al,0x2c
  40d357:	in     al,0x89
  40d359:	in     al,dx
  40d35a:	sbb    al,0x18
  40d35c:	mov    DWORD PTR [edi+0x47],esp
  40d35f:	xchg   BYTE PTR [ebx+0x4b],bl
  40d362:	jmp    0x40d38e
  40d364:	data16 cmc 
  40d366:	mov    al,ds:0x2ad577eb
  40d36b:	loope  0x40d33b
  40d36d:	pop    esp
  40d36e:	mov    cl,0xbf
  40d370:	push   es
  40d371:	cwde   
  40d372:	neg    DWORD PTR ds:[edx+0x5acf0c07]
  40d379:	pop    edx
  40d37a:	je     0x40d3fb
  40d37c:	sbb    al,al
  40d37e:	gs xchg edx,eax
  40d380:	ja     0x40d3ec
  40d382:	mov    edi,0xb23bc01b
  40d387:	add    eax,esp
  40d389:	popf   
  40d38a:	push   0x54
  40d38c:	add    DWORD PTR [ebx+0x63],edx
  40d38f:	and    eax,0xb206a75c
  40d394:	shl    BYTE PTR [eax+0x3b7a682b],cl
  40d39a:	xor    ecx,DWORD PTR [esi]
  40d39c:	scas   eax,DWORD PTR es:[edi]
  40d39d:	adc    esi,DWORD PTR [ecx-0x6e8e0b56]
  40d3a3:	pop    edx
  40d3a4:	or     eax,DWORD PTR [ecx-0x6967cd7]
  40d3aa:	(bad)  
  40d3ac:	xor    eax,0x7ed3bc6e
  40d3b1:	push   esp
  40d3b2:	inc    eax
  40d3b3:	adc    ebp,ebx
  40d3b5:	mov    al,ds:0x15752856
  40d3ba:	(bad)  
  40d3bb:	std    
  40d3bc:	repz iret 
  40d3be:	adc    DWORD PTR ss:[esi+0x75],0x5c
  40d3c3:	sub    bl,BYTE PTR [esi-0x72]
  40d3c6:	rol    BYTE PTR [ebx+0x70],0x5d
  40d3ca:	inc    ecx
  40d3cb:	out    dx,al
  40d3cc:	loop   0x40d37e
  40d3ce:	jg     0x40d36f
  40d3d0:	(bad)  
  40d3d1:	sbb    cl,BYTE PTR [ebp-0x295a8898]
  40d3d7:	jp     0x40d40f
  40d3d9:	and    al,0x3c
  40d3db:	pusha  
  40d3dc:	push   ds
  40d3dd:	adc    BYTE PTR [esi+0x7278dae0],ah
  40d3e3:	ins    DWORD PTR es:[edi],dx
  40d3e4:	xchg   edx,eax
  40d3e5:	pop    edx
  40d3e6:	dec    ebx
  40d3e7:	sahf   
  40d3e8:	adc    eax,0x9ba99d63
  40d3ed:	pop    DWORD PTR [ebx+0x2f]
  40d3f0:	xchg   edx,eax
  40d3f1:	xchg   ebx,eax
  40d3f2:	mov    ah,0xf1
  40d3f4:	js     0x40d406
  40d3f6:	xor    esi,eax
  40d3f8:	add    al,0x23
  40d3fa:	cdq    
  40d3fb:	(bad)  
  40d3fc:	icebp  
  40d3fd:	mov    ds:0xf612cd68,eax
  40d402:	push   0xac58112e
  40d407:	mov    eax,ds:0x5e08ab7c
  40d40c:	arpl   WORD PTR [ebx],dx
  40d40e:	mov    dh,0x3e
  40d410:	lods   eax,DWORD PTR ds:[esi]
  40d411:	aas    
  40d412:	xor    eax,0xad81ae38
  40d417:	sub    eax,0x7fda0d26
  40d41c:	or     DWORD PTR [edi+0x8],esi
  40d41f:	jns    0x40d410
  40d421:	sbb    al,0xcd
  40d423:	sub    bl,BYTE PTR [ebx-0x15080c69]
  40d429:	aas    
  40d42a:	xor    ch,BYTE PTR [esi]
  40d42c:	cmp    bh,BYTE PTR [ebp+esi*1+0x50]
  40d430:	cmp    DWORD PTR [ebx-0x53],esp
  40d433:	(bad)  
  40d434:	cmp    al,cl
  40d436:	rcr    BYTE PTR [ecx+0x7d8993a2],1
  40d43c:	fst    QWORD PTR [edx-0xb03e43e]
  40d442:	ret    0xb60d
  40d445:	ins    DWORD PTR es:[edi],dx
  40d446:	xchg   edi,eax
  40d447:	aad    0xb9
  40d449:	in     eax,0x59
  40d44b:	mov    al,ds:0xd2aa2cf7
  40d450:	sbb    eax,0x59ba09d
  40d455:	repnz fucom st(6)
  40d458:	test   eax,0x5af000f6
  40d45d:	repz mov ah,0x46
  40d460:	mov    al,ds:0x74ba4bc7
  40d465:	lahf   
  40d466:	xchg   ebp,eax
  40d467:	push   eax
  40d468:	fsubr  DWORD PTR [edx+eax*4]
  40d46b:	(bad)  
  40d46c:	adc    al,0xe4
  40d46e:	ret    
  40d46f:	pop    eax
  40d470:	into   
  40d471:	arpl   WORD PTR [edi],di
  40d473:	jecxz  0x40d4e4
  40d475:	jo     0x40d4e7
  40d477:	icebp  
  40d478:	pop    edx
  40d479:	mov    bh,BYTE PTR [esi]
  40d47b:	xchg   edx,eax
  40d47c:	into   
  40d47d:	jp     0x40d4ef
  40d47f:	push   0x6f
  40d481:	popa   
  40d482:	stos   BYTE PTR es:[edi],al
  40d483:	pop    ecx
  40d484:	add    ebp,DWORD PTR [edx-0x560e1100]
  40d48a:	dec    eax
  40d48b:	ja     0x40d482
  40d48d:	test   al,0x2a
  40d48f:	add    al,0x7
  40d491:	push   ebp
  40d492:	xchg   esp,eax
  40d493:	out    dx,eax
  40d494:	pop    edi
  40d495:	jp     0x40d480
  40d497:	mov    ah,0x88
  40d499:	leave  
  40d49a:	push   ebx
  40d49b:	push   ebx
  40d49c:	pop    ebx
  40d49d:	aam    0xc9
  40d49f:	fcomp  DWORD PTR [esi+0x53]
  40d4a2:	sub    al,0x6b
  40d4a4:	ret    0x47ae
  40d4a7:	xor    BYTE PTR [esp+ebp*8-0x31],bl
  40d4ab:	push   edx
  40d4ac:	(bad)  
  40d4ad:	popf   
  40d4ae:	adc    eax,0xc4637b31
  40d4b3:	sub    edx,0x1873979f
  40d4b9:	aad    0x5f
  40d4bb:	dec    ecx
  40d4bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4bd:	cmp    bl,bl
  40d4bf:	inc    edx
  40d4c0:	(bad)  
  40d4c1:	out    dx,al
  40d4c2:	out    0x76,eax
  40d4c4:	fisub  WORD PTR [ebx+0x1976b28d]
  40d4ca:	sub    ecx,DWORD PTR [ebp-0x1cc2095b]
  40d4d0:	mov    ah,0x81
  40d4d2:	jle    0x40d517
  40d4d4:	mov    ebx,0xecd8b72c
  40d4d9:	and    BYTE PTR [ecx+0x70],dl
  40d4dc:	nop
  40d4dd:	xchg   ebx,eax
  40d4de:	lahf   
  40d4df:	sbb    DWORD PTR [eax],ebx
  40d4e1:	sub    esp,DWORD PTR [edi-0x1b687ef8]
  40d4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4e9:	jns    0x40d4f4
  40d4eb:	adc    al,0x7d
  40d4ed:	es mov edx,0xdbf4a9b0
  40d4f3:	mov    ds:0xe95eccaa,eax
  40d4f8:	adc    BYTE PTR cs:[edi],bh
  40d4fb:	scas   eax,DWORD PTR es:[edi]
  40d4fc:	shl    ecx,cl
  40d4fe:	loop   0x40d4e8
  40d500:	xchg   edi,eax
  40d501:	xchg   ebx,eax
  40d502:	jmp    0xc50e:0xbf941ac
  40d509:	xchg   ecx,eax
  40d50a:	idiv   DWORD PTR [edi]
  40d50c:	push   ss
  40d50d:	xor    DWORD PTR [eax],eax
  40d50f:	ret    
  40d510:	(bad)  
  40d511:	bound  edi,QWORD PTR [edi+0x1c]
  40d514:	scas   eax,DWORD PTR es:[edi]
  40d515:	stos   BYTE PTR es:[edi],al
  40d516:	shr    BYTE PTR [esi],0x91
  40d519:	fisttp WORD PTR [esi-0x27]
  40d51c:	cmp    dl,BYTE PTR [ebp+0x57]
  40d51f:	lea    ecx,[ecx]
  40d521:	mov    dh,0xec
  40d523:	(bad)  
  40d525:	mov    dl,0xfb
  40d527:	loope  0x40d4af
  40d529:	jmp    0xfea80fdc
  40d52e:	ja     0x40d4d7
  40d530:	sub    edi,DWORD PTR [ebx+0x4f]
  40d533:	sub    al,0xd2
  40d535:	jp     0x40d4b8
  40d537:	pop    esi
  40d538:	hlt    
  40d539:	push   eax
  40d53a:	adc    al,BYTE PTR [edi]
  40d53c:	dec    ebx
  40d53d:	in     al,0x70
  40d53f:	mov    BYTE PTR [ecx+edx*1+0x35],ah
  40d543:	retf   
  40d544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d545:	xchg   edx,eax
  40d546:	cdq    
  40d547:	scas   eax,DWORD PTR es:[edi]
  40d548:	jae    0x40d573
  40d54a:	sub    al,0xd2
  40d54c:	ds mov dh,0xe0
  40d54f:	aas    
  40d550:	outs   dx,BYTE PTR ds:[esi]
  40d551:	arpl   bp,dx
  40d553:	cmc    
  40d554:	pop    esi
  40d555:	jp     0x40d5a6
  40d557:	pop    ds
  40d558:	cmp    DWORD PTR [edx+ecx*4+0x6],esp
  40d55c:	out    0x61,eax
  40d55e:	sahf   
  40d55f:	push   ebx
  40d560:	and    dl,BYTE PTR [esi+0x152660a2]
  40d566:	or     DWORD PTR [edx-0x4aaab68b],ebx
  40d56c:	aad    0x4f
  40d56e:	cmc    
  40d56f:	cs dec ebp
  40d571:	sub    ch,BYTE PTR [esi]
  40d573:	and    ch,dh
  40d575:	jbe    0x40d511
  40d577:	add    cl,BYTE PTR [eax+0x53]
  40d57a:	xchg   edx,eax
  40d57b:	shr    DWORD PTR [eax+0x79b9c7e7],0x27
  40d582:	cmp    al,0xab
  40d584:	and    BYTE PTR [eax+0x5890e90d],0x7d
  40d58b:	imul   ebx,DWORD PTR [ecx-0x3fc4a542],0x98f1a97d
  40d595:	cmp    al,0x19
  40d597:	fdivr  DWORD PTR [eax+0x8bd11c0]
  40d59d:	pop    ebx
  40d59e:	mov    ah,BYTE PTR [ecx-0x1257b296]
  40d5a4:	ins    BYTE PTR es:[edi],dx
  40d5a5:	lods   al,BYTE PTR ds:[esi]
  40d5a6:	xor    al,BYTE PTR [edx-0x65]
  40d5a9:	in     eax,0x78
  40d5ab:	mov    bl,0x88
  40d5ad:	(bad)  
  40d5ae:	cld    
  40d5af:	jmp    FWORD PTR [edi+edx*2+0x59]
  40d5b3:	mov    edx,0x90abd620
  40d5b8:	mov    dh,0x15
  40d5ba:	or     dh,BYTE PTR [ebx+ebp*1-0x79]
  40d5be:	(bad)  
  40d5bf:	pop    ebp
  40d5c0:	xor    BYTE PTR [ebp-0x4c2202d7],bl
  40d5c6:	call   FWORD PTR [ebx]
  40d5c8:	pop    ds
  40d5c9:	inc    esp
  40d5ca:	int    0xb8
  40d5cc:	jg     0x40d5cc
  40d5ce:	dec    ebx
  40d5cf:	cmp    BYTE PTR [eax-0x71],0x3f
  40d5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d4:	and    BYTE PTR [eax+0x7c6d2a5e],ch
  40d5da:	cs in  al,0x48
  40d5dd:	(bad)  
  40d5de:	(bad)  [edx+0x18249b86]
  40d5e4:	and    eax,0x7d9237dc
  40d5e9:	and    eax,0x73d7bb4f
  40d5ee:	mov    ebp,0x6e45e0e7
  40d5f3:	cmp    cl,BYTE PTR [edi+eiz*8]
  40d5f6:	xor    eax,eax
  40d5f8:	xchg   edi,eax
  40d5f9:	cmp    DWORD PTR ss:[edi+0x51],esp
  40d5fd:	idiv   DWORD PTR [eax-0x3614ed7a]
  40d603:	dec    ebp
  40d604:	xor    DWORD PTR ds:0xb789e033,eax
  40d60a:	aad    0x59
  40d60c:	rol    DWORD PTR [ebp+0x5e],1
  40d60f:	jnp    0x40d5a1
  40d611:	enter  0x237e,0xa1
  40d615:	dec    edi
  40d616:	div    eax
  40d618:	out    0x2,al
  40d61a:	xchg   edi,eax
  40d61b:	sahf   
  40d61c:	fisub  WORD PTR [eax]
  40d61e:	out    0xd3,eax
  40d620:	adc    BYTE PTR [ebp+0x62abac3c],bl
  40d626:	or     BYTE PTR [ecx+0x63a79c49],bl
  40d62c:	mov    dl,0x52
  40d62e:	leave  
  40d62f:	ins    DWORD PTR es:[edi],dx
  40d630:	sub    al,0x99
  40d632:	push   esi
  40d633:	push   ecx
  40d634:	mov    ah,0x1d
  40d636:	dec    ebp
  40d637:	sbb    DWORD PTR [esi],ecx
  40d639:	in     al,dx
  40d63a:	in     al,dx
  40d63b:	iret   
  40d63c:	in     eax,0x44
  40d63e:	jb     0x40d5ea
  40d640:	pop    ds
  40d641:	daa    
  40d642:	adc    eax,0x1102730a
  40d647:	pop    edx
  40d648:	fbstp  TBYTE PTR [edx-0x13475ef3]
  40d64e:	test   BYTE PTR [ebp-0x37],cl
  40d651:	mov    gs,WORD PTR [edi+0x20bf1c7a]
  40d657:	ror    DWORD PTR [eax],0x0
  40d65a:	add    DWORD PTR [edx],eax
  40d65c:	lds    esi,FWORD PTR [edx]
  40d65e:	push   ebx
  40d65f:	adc    DWORD PTR [ecx+eax*4+0x65],esp
  40d663:	adc    al,0xe3
  40d665:	push   edx
  40d666:	jp     0x40d63d
  40d668:	fisttp QWORD PTR [edi+edi*2+0x23]
  40d66c:	mov    ds,WORD PTR [ebp+0x75]
  40d66f:	retf   0xafa8
  40d672:	push   ebx
  40d673:	push   ecx
  40d674:	push   0x2f
  40d676:	repnz inc esi
  40d678:	imul   edx,DWORD PTR [ebp-0x14a3817d],0x51c1b13a
  40d682:	xchg   edi,eax
  40d683:	rcr    BYTE PTR [esi-0x22],1
  40d686:	mov    WORD PTR [eax],gs
  40d688:	addr16 mov bh,0xf1
  40d68b:	not    eax
  40d68d:	jecxz  0x40d6c6
  40d68f:	das    
  40d690:	mov    ds:0xd8f65568,eax
  40d695:	sub    al,0x5a
  40d697:	jecxz  0x40d645
  40d699:	and    ebx,ebx
  40d69b:	add    BYTE PTR ds:0xb65cac8b,ch
  40d6a1:	or     ecx,DWORD PTR [ebx+0x411bbc6a]
  40d6a7:	pop    ds
  40d6a8:	mov    ds:0x858a8e88,al
  40d6ad:	push   eax
  40d6ae:	and    eax,0x82e8f340
  40d6b3:	sub    al,BYTE PTR [ebp+0x39f94407]
  40d6b9:	ja     0x40d665
  40d6bb:	pop    ds
  40d6bc:	jnp    0x40d696
  40d6be:	call   0xaedcdc15
  40d6c3:	out    0x80,al
  40d6c5:	pop    ebx
  40d6c6:	fstp   TBYTE PTR [esp+eax*4+0x688616a8]
  40d6cd:	cs xchg edi,eax
  40d6cf:	daa    
  40d6d0:	aas    
  40d6d1:	adc    ebp,esp
  40d6d3:	push   eax
  40d6d4:	sbb    esp,esp
  40d6d6:	add    al,0xf
  40d6d8:	push   esp
  40d6d9:	jne    0x40d759
  40d6db:	pop    ebx
  40d6dc:	dec    eax
  40d6dd:	jmp    0x40d738
  40d6df:	xchg   ebx,eax
  40d6e0:	jno    0x40d69f
  40d6e2:	cmc    
  40d6e3:	or     esp,DWORD PTR [edi-0x55]
  40d6e6:	out    0x1d,al
  40d6e8:	stos   BYTE PTR es:[edi],al
  40d6e9:	xor    ebx,DWORD PTR [ebx]
  40d6eb:	les    ebp,FWORD PTR [bp+di-0x12f8]
  40d6f0:	fimul  WORD PTR [edi+0x2c]
  40d6f3:	shl    BYTE PTR [esi],0xb7
  40d6f6:	and    eax,0x734ed68f
  40d6fb:	loope  0x40d6f1
  40d6fd:	xchg   DWORD PTR [ecx+0x31c862e2],esp
  40d703:	int3   
  40d704:	jmp    0x1295552b
  40d709:	pop    ds
  40d70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70b:	cdq    
  40d70c:	es out 0x53,al
  40d70f:	mov    edi,0xb0811855
  40d714:	jmp    0xaf076e74
  40d719:	fnsave ds:0x21598b40
  40d71f:	and    ebx,ecx
  40d721:	push   es
  40d722:	or     DWORD PTR [edi-0x62],ebx
  40d725:	pop    edx
  40d726:	and    DWORD PTR [ebx-0x6],0xffffff85
  40d72a:	out    0x1a,al
  40d72c:	xchg   edi,eax
  40d72d:	mov    BYTE PTR [edi+0x5ec53db6],cl
  40d733:	iret   
  40d734:	sbb    eax,0x89936188
  40d739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d73a:	fst    st(1)
  40d73c:	mov    ecx,DWORD PTR [esi-0x44f1d115]
  40d742:	mov    ds:0xba900c1,eax
  40d747:	pop    ecx
  40d748:	scas   eax,DWORD PTR es:[edi]
  40d749:	outs   dx,BYTE PTR ds:[esi]
  40d74a:	cmp    DWORD PTR [edx+0x45c1cae9],ebp
  40d750:	xlat   BYTE PTR ds:[ebx]
  40d751:	aas    
  40d752:	dec    DWORD PTR [ebx]
  40d754:	xor    al,0x8d
  40d756:	or     edx,edi
  40d758:	sbb    eax,DWORD PTR [eax+ebp*2-0x534b4594]
  40d75f:	leave  
  40d760:	clc    
  40d761:	pushf  
  40d762:	iret   
  40d763:	in     eax,dx
  40d764:	xchg   BYTE PTR [ebx],ah
  40d766:	cmp    al,0xac
  40d768:	push   edi
  40d769:	jbe    0x40d6fb
  40d76b:	pop    edi
  40d76c:	jmp    0x40d79e
  40d76e:	xor    DWORD PTR [edi],ebp
  40d770:	out    dx,eax
  40d771:	push   esp
  40d772:	mov    ebx,0x6d35ba14
  40d777:	rcl    BYTE PTR [edx+0x31e56b6d],cl
  40d77d:	ret    
  40d77e:	xchg   ecx,eax
  40d77f:	inc    edi
  40d780:	cmp    ebp,DWORD PTR [edi]
  40d782:	sub    al,ch
  40d784:	scas   eax,DWORD PTR es:[edi]
  40d785:	fcmovb st,st(7)
  40d787:	push   esp
  40d788:	out    0xe6,al
  40d78a:	pop    ebx
  40d78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d78c:	ds push cs
  40d78e:	fild   QWORD PTR [esi-0x3b2aa8a7]
  40d794:	jle    0x40d74d
  40d796:	inc    eax
  40d797:	test   al,0x88
  40d799:	shl    DWORD PTR [ebp+0x6690e107],1
  40d79f:	and    al,0x7b
  40d7a1:	xchg   ecx,eax
  40d7a2:	pop    esp
  40d7a3:	add    al,0x26
  40d7a5:	cld    
  40d7a6:	mov    esi,0x2ed5656f
  40d7ab:	push   esp
  40d7ac:	and    eax,0xde41d466
  40d7b1:	xchg   edi,eax
  40d7b2:	sbb    BYTE PTR [edx+0x5062d4ee],ah
  40d7b8:	rol    ebp,cl
  40d7ba:	jo     0x40d81d
  40d7bc:	push   ecx
  40d7bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7be:	jo     0x40d763
  40d7c0:	mov    al,0xf6
  40d7c2:	adc    edx,esp
  40d7c4:	call   0x55:0xde5a2e07
  40d7cb:	lds    esi,FWORD PTR [edx+edx*1-0x3fa94737]
  40d7d2:	inc    esp
  40d7d3:	xor    eax,0xb2952bb5
  40d7d8:	call   0x3394:0x724bb728
  40d7df:	imul   esi,DWORD PTR [ebx],0xffffffdc
  40d7e2:	or     eax,0x6aa474e
  40d7e7:	dec    esp
  40d7e8:	dec    ecx
  40d7e9:	or     eax,0xc272b90e
  40d7ee:	pop    edi
  40d7ef:	mov    ecx,0xd280436e
  40d7f4:	int    0x5
  40d7f6:	dec    ecx
  40d7f7:	mov    eax,ds:0x1c887995
  40d7fc:	cwde   
  40d7fd:	jns    0x40d853
  40d7ff:	ficomp WORD PTR [edx-0xa]
  40d802:	inc    eax
  40d803:	push   ss
  40d804:	sub    ecx,DWORD PTR [ecx-0x582bc0d6]
  40d80a:	pop    eax
  40d80b:	dec    ebp
  40d80c:	xchg   DWORD PTR [ebp-0x386f8cff],edx
  40d812:	mov    cl,0x8
  40d814:	sti    
  40d815:	test   DWORD PTR [ebp+0x44072a79],eax
  40d81b:	ficom  DWORD PTR [edx-0x67b5b404]
  40d821:	(bad)  
  40d823:	lods   eax,DWORD PTR ds:[esi]
  40d824:	ds loopne 0x40d7e9
  40d827:	and    bl,dh
  40d829:	dec    edx
  40d82a:	dec    ebp
  40d82b:	and    esi,DWORD PTR [ebp+edi*4-0x3a]
  40d82f:	pop    es
  40d830:	or     DWORD PTR [ebx],0xded0292a
  40d836:	test   eax,0x8a7a4be7
  40d83b:	pop    ebx
  40d83c:	cdq    
  40d83d:	jl     0x40d7cd
  40d83f:	mov    BYTE PTR [edi-0x77453f0d],bh
  40d845:	pushf  
  40d846:	daa    
  40d847:	mov    ecx,0x3312cae
  40d84c:	(bad)  
  40d84d:	int3   
  40d84e:	push   edx
  40d84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d850:	jmp    0x40d894
  40d852:	pop    es
  40d853:	scas   al,BYTE PTR es:[edi]
  40d854:	enter  0x8de8,0x93
  40d858:	aas    
  40d859:	mov    ch,0x2d
  40d85b:	push   cs
  40d85c:	nop
  40d85d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d85f:	xchg   esi,eax
  40d860:	test   eax,0xd21f57
  40d865:	or     eax,0x97b45b69
  40d86a:	jne    0x40d877
  40d86c:	or     al,0x0
  40d86e:	hlt    
  40d86f:	xchg   edx,eax
  40d870:	fidiv  DWORD PTR [esi+ebx*2]
  40d873:	test   DWORD PTR [ebx-0x31],esi
  40d876:	push   esi
  40d877:	test   eax,0x161870bf
  40d87c:	inc    esi
  40d87d:	(bad)  
  40d87e:	fisub  DWORD PTR [edi]
  40d880:	(bad)  [edx+0x23]
  40d883:	dec    ebx
  40d884:	mov    esi,DWORD PTR [ebp+0x36]
  40d887:	cdq    
  40d888:	test   DWORD PTR [bp+si],ebp
  40d88b:	fidivr DWORD PTR [ebx]
  40d88d:	loopne 0x40d8e4
  40d88f:	mov    ds:0xd2a0c920,al
  40d894:	scas   al,BYTE PTR es:[edi]
  40d895:	pushf  
  40d896:	repz mov edi,0xb587ec24
  40d89c:	fidiv  DWORD PTR [edx]
  40d89e:	mov    DWORD PTR [ebx-0x79],esp
  40d8a1:	mov    al,cs:0xe96726b1
  40d8a7:	lahf   
  40d8a8:	and    al,0xc5
  40d8aa:	jo     0x40d893
  40d8ac:	or     BYTE PTR [ecx],ah
  40d8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8af:	pop    ebp
  40d8b0:	test   DWORD PTR [eax-0x6a],edi
  40d8b3:	jge    0x40d90b
  40d8b5:	jns    0x40d8c6
  40d8b7:	out    dx,al
  40d8b8:	fs call 0x3595e35
  40d8be:	les    ecx,FWORD PTR [ecx]
  40d8c0:	fnstcw WORD PTR [edi+edi*2+0x3a]
  40d8c4:	xor    cl,cl
  40d8c6:	icebp  
  40d8c7:	jl     0x40d882
  40d8c9:	push   0x6c
  40d8cb:	bound  ebx,QWORD PTR [ecx+0x1b38a4e6]
  40d8d1:	inc    ebp
  40d8d2:	mov    esp,0xf9f8a16
  40d8d7:	add    esp,DWORD PTR [edx-0x80]
  40d8da:	fistp  QWORD PTR gs:[ecx-0x45]
  40d8de:	push   ebx
  40d8df:	sbb    eax,0xf4a5fa25
  40d8e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e5:	push   ecx
  40d8e6:	int    0x5
  40d8e8:	jmp    0x40d89d
  40d8ea:	test   al,0x97
  40d8ec:	stos   BYTE PTR es:[edi],al
  40d8ed:	xor    al,0xa9
  40d8ef:	aas    
  40d8f0:	cli    
  40d8f1:	repz xchg edx,eax
  40d8f3:	cs mov ebp,0x7b3bdf5f
  40d8f9:	call   0x26e580b6
  40d8fe:	xchg   ch,cl
  40d900:	test   DWORD PTR [eax+0x464f4904],0xd76692a1
  40d90a:	add    BYTE PTR [ebx-0x6f606e5],dl
  40d910:	fdivp  st(7),st
  40d912:	pop    ecx
  40d913:	js     0x40d955
  40d915:	jb     0x40d8f4
  40d917:	fsub   DWORD PTR [edx]
  40d919:	xchg   ecx,eax
  40d91a:	inc    esp
  40d91b:	dec    ecx
  40d91c:	repz sahf 
  40d91e:	or     al,0xa7
  40d920:	ficom  WORD PTR ds:0x947a69cc
  40d926:	mov    DWORD PTR [esi-0x7c],ebx
  40d929:	lods   eax,DWORD PTR ds:[esi]
  40d92a:	popf   
  40d92b:	mov    ecx,0x890fc636
  40d930:	scas   eax,DWORD PTR es:[edi]
  40d931:	push   esi
  40d932:	xchg   edi,eax
  40d933:	sti    
  40d934:	push   ecx
  40d935:	xchg   ecx,eax
  40d936:	pop    ss
  40d937:	imul   esp,edx,0x2b8bdc85
  40d93d:	aam    0x82
  40d93f:	dec    eax
  40d940:	std    
  40d941:	dec    ebp
  40d942:	das    
  40d943:	int3   
  40d944:	je     0x40d95f
  40d946:	mov    cl,0x7a
  40d948:	out    dx,al
  40d949:	jmp    0x5ade:0x4dd93e54
  40d950:	and    DWORD PTR [edx-0x80],ebp
  40d953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d954:	rol    DWORD PTR ds:0x74c5ab20,0xa6
  40d95b:	ja     0x40d926
  40d95d:	(bad)  
  40d95f:	mov    ds:0xf55af8d4,eax
  40d964:	mov    edi,0x4cf46c1b
  40d969:	ds scas al,BYTE PTR es:[edi]
  40d96b:	retf   
  40d96c:	call   0x77e1:0xa7964e3a
  40d973:	cs in  al,0xdb
  40d976:	iret   
  40d977:	push   esi
  40d978:	xchg   ecx,eax
  40d979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d97a:	xor    DWORD PTR [edi+0x65],ebp
  40d97d:	in     eax,0xd8
  40d97f:	punpckhwd mm1,QWORD PTR [ebx]
  40d982:	add    al,0xde
  40d984:	test   eax,0x276d766c
  40d989:	mov    ds:0xab9bce0a,al
  40d98e:	scas   eax,DWORD PTR es:[edi]
  40d98f:	aas    
  40d990:	imul   edx,DWORD PTR [esi-0x7dfffba5],0xf25aa022
  40d99a:	push   cs
  40d99b:	jns    0x40d9c2
  40d99d:	xchg   esp,eax
  40d99e:	fld    QWORD PTR [esi+0x72]
  40d9a1:	jne    0x40d979
  40d9a3:	(bad)  
  40d9a4:	aas    
  40d9a5:	push   ebp
  40d9a6:	or     DWORD PTR [eax],edi
  40d9a8:	cmp    esi,edx
  40d9aa:	or     BYTE PTR [ecx-0x44],bl
  40d9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ae:	or     cl,BYTE PTR [eax-0x22]
  40d9b1:	push   0x5c7064a9
  40d9b6:	aad    0xc4
  40d9b8:	mov    ch,0x5e
  40d9ba:	cld    
  40d9bb:	pop    ds
  40d9bc:	outs   dx,DWORD PTR ds:[esi]
  40d9bd:	mov    ecx,es
  40d9bf:	out    dx,eax
  40d9c0:	inc    eax
  40d9c1:	mov    bl,0x83
  40d9c3:	sub    ah,dh
  40d9c5:	pop    ebp
  40d9c6:	and    eax,0x3f09d784
  40d9cb:	sbb    edx,0xcac3d586
  40d9d1:	out    0x99,al
  40d9d3:	test   BYTE PTR [ebp+0x3be9c02f],0x63
  40d9da:	sbb    DWORD PTR [esi+0x9ec33e4],edx
  40d9e0:	and    ecx,eax
  40d9e2:	leave  
  40d9e3:	or     BYTE PTR [ecx],cl
  40d9e5:	xchg   ecx,eax
  40d9e6:	call   edx
  40d9e8:	addr16 push 0x22
  40d9eb:	pop    es
  40d9ec:	xchg   edi,eax
  40d9ed:	fidiv  DWORD PTR [edx]
  40d9ef:	push   es
  40d9f0:	mov    eax,0x88b711eb
  40d9f5:	cmp    bh,BYTE PTR [esi]
  40d9f7:	out    dx,eax
  40d9f8:	sbb    DWORD PTR [esp+ebp*8-0x42e77615],0xfffffff2
  40da00:	lahf   
  40da01:	neg    BYTE PTR [ecx-0x156f0aea]
  40da07:	push   es
  40da08:	jle    0x40da38
  40da0a:	es push 0xe4416545
  40da10:	dec    eax
  40da11:	hlt    
  40da12:	in     al,dx
  40da13:	push   es
  40da14:	mov    ecx,0xce77106c
  40da19:	outs   dx,DWORD PTR ds:[esi]
  40da1a:	push   esp
  40da1b:	cdq    
  40da1c:	mov    ah,BYTE PTR [esi+0x251602d1]
  40da22:	push   0xf
  40da24:	fsubr  QWORD PTR [edi]
  40da26:	cwde   
  40da27:	not    BYTE PTR [edi+0x18bf3e1c]
  40da2d:	repz xchg ecx,eax
  40da2f:	mov    cl,0xcc
  40da31:	push   ebx
  40da32:	xchg   edx,eax
  40da33:	inc    eax
  40da34:	ficom  DWORD PTR [ebx-0x3]
  40da37:	int    0x76
  40da39:	imul   esi,DWORD PTR [edi-0x67],0xb21f75a1
  40da40:	arpl   WORD PTR [edx],dx
  40da42:	rcr    BYTE PTR [esi+0x4da89297],0x15
  40da49:	gs ret 0xa793
  40da4d:	add    edx,DWORD PTR [esi+0x539528f6]
  40da53:	cmp    al,BYTE PTR [ecx+0x52]
  40da56:	aad    0x67
  40da58:	bound  ebp,QWORD PTR [ecx+0x775edb2d]
  40da5e:	stos   BYTE PTR es:[edi],al
  40da5f:	test   BYTE PTR [ebx+0x319cd149],cl
  40da65:	lock in eax,dx
  40da67:	icebp  
  40da68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da69:	and    bh,BYTE PTR [ebp-0x49]
  40da6c:	scas   eax,DWORD PTR es:[edi]
  40da6d:	cwde   
  40da6e:	fsubr  DWORD PTR [ebp-0x2e]
  40da71:	outs   dx,BYTE PTR ds:[esi]
  40da72:	frstor [ecx]
  40da74:	jbe    0x40da3b
  40da76:	xchg   ebx,eax
  40da77:	(bad)  
  40da78:	push   0xffffffaa
  40da7a:	adc    cl,BYTE PTR [ebp+0x10aedb1c]
  40da80:	sbb    esi,DWORD PTR [ecx]
  40da82:	popa   
  40da83:	mov    ebx,DWORD PTR [edx-0x190796a2]
  40da89:	jne    0x40da59
  40da8b:	lock aaa 
  40da8d:	xchg   esi,eax
  40da8e:	(bad)  
  40da8f:	pop    eax
  40da90:	pop    edx
  40da91:	dec    eax
  40da92:	in     eax,0xea
  40da94:	inc    esi
  40da95:	sbb    dl,BYTE PTR [edi+esi*2]
  40da98:	pop    esp
  40da99:	or     BYTE PTR [ecx+eax*2+0x37],cl
  40da9d:	in     al,dx
  40da9e:	and    eax,0x6859fbff
  40daa3:	jne    0x40db02
  40daa5:	loopne 0x40da81
  40daa7:	xor    dh,BYTE PTR [edi]
  40daa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daaa:	mov    edi,0xa95b2ea0
  40daaf:	push   0x1fe6f7ff
  40dab4:	outs   dx,BYTE PTR ds:[esi]
  40dab5:	(bad)  
  40dab6:	cmc    
  40dab7:	lds    eax,FWORD PTR [ecx+ebp*8+0x7f822a70]
  40dabe:	sub    eax,0x7085aee2
  40dac3:	je     0x40da8f
  40dac5:	cmp    ecx,DWORD PTR [esi+0x56b3f5bb]
  40dacb:	dec    bp
  40dacd:	or     BYTE PTR [eax+0x312dcdba],bh
  40dad3:	pop    eax
  40dad4:	mov    WORD PTR [edx-0x2e],gs
  40dad7:	xchg   cl,al
  40dad9:	mov    edi,0xb23e9338
  40dade:	fadd   DWORD PTR [ecx]
  40dae0:	inc    eax
  40dae1:	dec    esi
  40dae2:	adc    DWORD PTR [ebp+0x2c],0x111fc260
  40dae9:	add    BYTE PTR [edx*4+0x6bbb3831],al
  40daf0:	les    esp,FWORD PTR [edi]
  40daf2:	(bad)  
  40daf3:	pop    eax
  40daf4:	jecxz  0x40dab0
  40daf6:	add    BYTE PTR [edx],al
  40daf8:	and    BYTE PTR [eax-0x23b8f1f2],bl
  40dafe:	iret   
  40daff:	(bad)  
  40db00:	je     0x40daf9
  40db02:	add    ebp,DWORD PTR [edi+0x2936c6db]
  40db08:	dec    edi
  40db09:	test   eax,0xca037133
  40db0e:	cmp    esi,DWORD PTR [ecx+0x2b]
  40db11:	xor    al,0x5d
  40db13:	inc    esp
  40db14:	arpl   WORD PTR [eax],cx
  40db16:	div    BYTE PTR es:[ebp+0x77]
  40db1a:	xchg   edi,eax
  40db1b:	enter  0xdcae,0x41
  40db1f:	hlt    
  40db20:	gs jge 0x40db9e
  40db23:	(bad)  
  40db24:	cmp    BYTE PTR [ebx+0x4dcd4a14],ch
  40db2a:	xor    bh,BYTE PTR [edx+0x26bd73d]
  40db30:	fdiv   QWORD PTR [ecx+eax*4-0x54]
  40db34:	add    DWORD PTR [ecx-0x63],ebp
  40db37:	sbb    al,0x78
  40db39:	push   ebp
  40db3a:	leave  
  40db3b:	mov    ds:0x14cc1698,al
  40db40:	and    eax,0xab55219f
  40db45:	dec    ecx
  40db46:	outs   dx,DWORD PTR ds:[esi]
  40db47:	push   0x767df708
  40db4c:	pop    es
  40db4d:	iret   
  40db4e:	push   ebx
  40db4f:	push   ss
  40db50:	and    WORD PTR [ebp+0x23],di
  40db54:	fisub  WORD PTR [ebp+0x29a491c6]
  40db5a:	(bad)  
  40db5b:	fild   WORD PTR [eax-0x67]
  40db5e:	push   esi
  40db5f:	mov    ah,0x5f
  40db61:	push   ds
  40db62:	rcr    DWORD PTR [esi+0x2],1
  40db65:	ins    DWORD PTR es:[edi],dx
  40db66:	sub    edi,DWORD PTR [edx+ecx*1+0x8]
  40db6a:	ins    DWORD PTR es:[edi],dx
  40db6b:	sbb    DWORD PTR [esi+0x50],0x54
  40db6f:	push   eax
  40db70:	stos   DWORD PTR es:[edi],eax
  40db71:	das    
  40db72:	mov    WORD PTR [edx+0x40],fs
  40db75:	mov    ch,BYTE PTR [esi+0x27]
  40db78:	mov    al,ds:0xc5ab968e
  40db7d:	jnp    0x40dbea
  40db7f:	out    0xc6,eax
  40db81:	jg     0x40dbca
  40db83:	repnz or BYTE PTR [edx],dh
  40db86:	js     0x40db76
  40db88:	int    0x4b
  40db8a:	pop    ebx
  40db8b:	ss pusha 
  40db8d:	pop    sp
  40db8f:	imul   DWORD PTR [ebx]
  40db91:	enter  0xdd0c,0x35
  40db95:	pop    ds
  40db96:	xchg   esi,ecx
  40db98:	fisttp WORD PTR [ebx]
  40db9a:	inc    esp
  40db9b:	shl    DWORD PTR [esi+0x695277b0],1
  40dba1:	pop    ss
  40dba2:	mov    ecx,0xbe14de0b
  40dba7:	ret    0xbb56
  40dbaa:	loope  0x40dbc5
  40dbac:	loop   0x40db5b
  40dbae:	add    al,cl
  40dbb0:	out    0xb3,al
  40dbb2:	test   eax,0x1b09d137
  40dbb7:	jmp    0x40dbe3
  40dbb9:	enter  0xd76c,0xe7
  40dbbd:	mov    dl,ah
  40dbbf:	data16 mov dl,BYTE PTR [edi-0x4b]
  40dbc3:	sahf   
  40dbc4:	fild   WORD PTR [esp+edx*1+0x0]
  40dbc8:	sub    al,0xd
  40dbca:	or     DWORD PTR [ebp+0x604203d6],eax
  40dbd0:	loope  0x40dbc0
  40dbd2:	cs cli 
  40dbd4:	int3   
  40dbd5:	mov    esp,0xf09f3ff4
  40dbda:	inc    eax
  40dbdb:	xchg   DWORD PTR [eax-0x44],esp
  40dbde:	push   ebx
  40dbdf:	pop    ds
  40dbe0:	ds jae 0x40dc4b
  40dbe3:	retf   
  40dbe4:	sbb    ch,BYTE PTR [ebx]
  40dbe6:	sub    esp,eax
  40dbe8:	push   ebx
  40dbe9:	loope  0x40db7c
  40dbeb:	sar    BYTE PTR [ebp+eiz*4-0x4ff1b289],1
  40dbf2:	sub    dh,dl
  40dbf4:	inc    esi
  40dbf5:	mov    WORD PTR [ebx-0x7b],ss
  40dbf8:	mov    DWORD PTR [esi],edi
  40dbfa:	cmp    al,al
  40dbfc:	dec    ebp
  40dbfd:	idiv   DWORD PTR [eax]
  40dbff:	xchg   edi,eax
  40dc00:	out    0xb7,eax
  40dc02:	sbb    eax,0x6c57e255
  40dc07:	sub    esi,DWORD PTR [esi]
  40dc09:	jns    0x40dc4a
  40dc0b:	dec    ecx
  40dc0c:	loopne 0x40dc55
  40dc0e:	pusha  
  40dc0f:	nop
  40dc10:	pop    ss
  40dc11:	xor    al,0x96
  40dc13:	out    dx,al
  40dc14:	(bad)  
  40dc15:	mov    ah,0x5
  40dc17:	xchg   esi,eax
  40dc18:	pop    esi
  40dc19:	mov    dl,0xca
  40dc1b:	or     DWORD PTR [ebx+0xf],esp
  40dc1e:	adc    ebp,eax
  40dc20:	cwde   
  40dc21:	pop    esi
  40dc22:	mov    dl,0xcc
  40dc24:	cmp    eax,0x8f95cf9b
  40dc29:	inc    esi
  40dc2a:	cmp    ch,BYTE PTR [eax-0x494924b5]
  40dc30:	fcomp  QWORD PTR [edi+0x17e92d62]
  40dc36:	jge    0x40dc8c
  40dc38:	rcr    ch,0xbe
  40dc3b:	xor    esi,esp
  40dc3d:	rcl    DWORD PTR [ebx+0x1223d1ea],cl
  40dc43:	into   
  40dc44:	div    DWORD PTR [edx-0x6ac67c77]
  40dc4a:	fcomp  DWORD PTR [edx-0x6e]
  40dc4d:	dec    ebp
  40dc4e:	aas    
  40dc4f:	out    0x61,eax
  40dc51:	pmuludq mm4,QWORD PTR [ebx-0x2bfff9f3]
  40dc58:	enter  0x9f0a,0x78
  40dc5c:	push   esp
  40dc5d:	mov    al,0x56
  40dc5f:	scas   al,BYTE PTR es:[edi]
  40dc60:	adc    BYTE PTR [edx+0x558cd0e1],ah
  40dc66:	push   eax
  40dc67:	je     0x40dcb3
  40dc69:	push   eax
  40dc6b:	mov    esp,0xa712bdfe
  40dc70:	mov    al,0xb6
  40dc72:	data16 test al,0xb7
  40dc75:	sub    DWORD PTR [esi],ebp
  40dc77:	lahf   
  40dc78:	adc    ebx,DWORD PTR [eax]
  40dc7a:	and    edi,edi
  40dc7c:	loope  0x40dccb
  40dc7e:	jnp    0x40dc87
  40dc80:	dec    eax
  40dc81:	pop    ss
  40dc82:	sub    al,0x13
  40dc84:	mov    DWORD PTR [edx-0x18],ebx
  40dc87:	mov    ebx,0x747260d5
  40dc8c:	xor    ebp,DWORD PTR [edi]
  40dc8e:	sub    dl,BYTE PTR [esi+esi*4-0x76]
  40dc92:	dec    esi
  40dc93:	mov    cl,0xec
  40dc95:	scas   al,BYTE PTR es:[edi]
  40dc96:	xchg   esi,eax
  40dc97:	lock arpl WORD PTR [edi-0x1e],si
  40dc9b:	rcl    BYTE PTR [esi-0x3b1c4907],0x22
  40dca2:	(bad)  
  40dca3:	repnz (bad) 
  40dca5:	fld    QWORD PTR [ecx+0x515a22bd]
  40dcab:	cmp    BYTE PTR [ebx+0x7f],al
  40dcae:	dec    edx
  40dcaf:	test   eax,0x8832b3bb
  40dcb4:	mov    WORD PTR [esi-0x3a554b04],cs
  40dcba:	es scas eax,DWORD PTR es:[edi]
  40dcbc:	pop    eax
  40dcbd:	in     al,dx
  40dcbe:	shl    DWORD PTR [ebx],cl
  40dcc0:	stc    
  40dcc1:	dec    ecx
  40dcc2:	adc    eax,0x96581ae2
  40dcc7:	pop    ebx
  40dcc8:	fist   DWORD PTR [esi+0x4c44131a]
  40dcce:	pop    esi
  40dccf:	nop    DWORD PTR [edx]
  40dcd2:	adc    DWORD PTR [ecx],eax
  40dcd4:	mov    ah,BYTE PTR [ebp+0x41]
  40dcd7:	(bad)  
  40dcd8:	jmp    0xd8c6:0x157d0c1c
  40dcdf:	or     al,0x65
  40dce1:	or     esi,DWORD PTR [ecx]
  40dce3:	adc    dh,bl
  40dce5:	aad    0x4f
  40dce7:	inc    ebp
  40dce8:	push   ebp
  40dce9:	mov    ah,0xf9
  40dceb:	sar    edx,0x93
  40dcee:	rol    BYTE PTR [edi-0x16ec53cc],cl
  40dcf4:	cs inc ebp
  40dcf6:	cld    
  40dcf7:	jp     0x40dd08
  40dcf9:	and    DWORD PTR [esp+ecx*1],0xffffff83
  40dcfd:	push   ebx
  40dcfe:	lock mov dh,0x75
  40dd01:	mov    esi,DWORD PTR [eax+0x14977bb0]
  40dd07:	sar    esi,cl
  40dd09:	mov    al,ds:0x7d20c704
  40dd0e:	xor    bl,BYTE PTR [ecx-0x73]
  40dd11:	mov    eax,ds:0xe151a918
  40dd16:	cli    
  40dd17:	cdq    
  40dd18:	sar    BYTE PTR [esi],1
  40dd1a:	inc    eax
  40dd1b:	or     BYTE PTR [ebx+0x8],0xbb
  40dd1f:	ds add al,0xc3
  40dd22:	cmp    eax,0x6554b93b
  40dd27:	ret    
  40dd28:	mov    edi,0x2d97c4f2
  40dd2d:	and    eax,0xffca2d3c
  40dd32:	pop    ebp
  40dd33:	imul   eax,DWORD PTR [edi],0x31a4880e
  40dd39:	popf   
  40dd3a:	jmp    0x6b670d65
  40dd3f:	retf   
  40dd40:	(bad)
  40dd44:	pop    es
  40dd45:	or     dl,bh
  40dd47:	mov    ds:0x91d31fad,al
  40dd4c:	outs   dx,BYTE PTR ds:[esi]
  40dd4d:	mov    WORD PTR [ebx+eiz*2-0x1433d426],fs
  40dd54:	xor    BYTE PTR [ecx+ebx*8-0x14],cl
  40dd58:	adc    esi,eax
  40dd5a:	shr    BYTE PTR [edi+0x45ff3479],0xda
  40dd61:	test   DWORD PTR [esi+ebp*1],ebp
  40dd64:	retf   0xa85e
  40dd67:	jp     0x40dd96
  40dd69:	lods   al,BYTE PTR ds:[esi]
  40dd6a:	addr16 sbb ah,0x56
  40dd6e:	xor    eax,0x1c821ff0
  40dd73:	lock add eax,0x27b344d6
  40dd79:	dec    esp
  40dd7a:	rol    DWORD PTR [ecx],cl
  40dd7c:	jmp    0x40dd2c
  40dd7e:	std    
  40dd7f:	xchg   esi,eax
  40dd80:	pop    ds
  40dd81:	nop
  40dd82:	test   al,0x44
  40dd84:	sbb    ah,BYTE PTR es:[edx-0x2b]
  40dd88:	mov    DWORD PTR [ebp-0x7a],eax
  40dd8b:	ret    
  40dd8c:	xor    BYTE PTR [esi],al
  40dd8e:	arpl   WORD PTR [edx],si
  40dd90:	fistp  QWORD PTR [edx+0x42a41f76]
  40dd96:	xchg   BYTE PTR [edi+0xb],ah
  40dd99:	mov    esi,0x62e5289a
  40dd9e:	add    bl,dh
  40dda0:	pop    esi
  40dda1:	aad    0x24
  40dda3:	int    0xde
  40dda5:	loope  0x40dd48
  40dda7:	stos   BYTE PTR es:[edi],al
  40dda8:	lods   al,BYTE PTR ds:[esi]
  40dda9:	call   0x384c:0xd81d0f0e
  40ddb0:	inc    esi
  40ddb1:	das    
  40ddb2:	ds adc eax,0xb07b3d82
  40ddb8:	jp     0x40dd51
  40ddba:	gs scas al,BYTE PTR es:[edi]
  40ddbc:	mov    edi,0xf86ef606
  40ddc1:	stos   BYTE PTR es:[edi],al
  40ddc2:	and    edx,edx
  40ddc4:	sti    
  40ddc5:	sti    
  40ddc6:	inc    ebp
  40ddc7:	daa    
  40ddc8:	cmp    al,0x70
  40ddca:	push   edi
  40ddcb:	fwait
  40ddcc:	mov    bl,0xcc
  40ddce:	jbe    0x40de16
  40ddd0:	ret    0xc334
  40ddd3:	out    dx,al
  40ddd4:	jmp    0x9deb82b6
  40ddd9:	jo     0x40dde8
  40dddb:	scas   eax,DWORD PTR es:[edi]
  40dddc:	dec    edi
  40dddd:	sbb    DWORD PTR [edi+0x35fbda14],0xffffffcd
  40dde4:	fnsave [edx]
  40dde6:	jnp    0x40dd6b
  40dde8:	pop    edx
  40dde9:	loopne 0x40ddde
  40ddeb:	test   al,0xcf
  40dded:	loope  0x40ddcf
  40ddef:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ddf1:	and    eax,ecx
  40ddf3:	and    DWORD PTR ds:0x89c60e01,edx
  40ddf9:	xor    DWORD PTR [edi-0x7abb5236],edx
  40ddff:	test   al,dl
  40de01:	dec    ecx
  40de02:	xchg   edx,eax
  40de03:	rcr    BYTE PTR [edi],0xe9
  40de06:	(bad)  
  40de07:	xor    bl,BYTE PTR [esi-0x32]
  40de0a:	or     BYTE PTR [ebx],cl
  40de0c:	pop    ss
  40de0d:	push   edx
  40de0e:	add    DWORD PTR [eax+ebp*8],eax
  40de11:	dec    ebp
  40de12:	stc    
  40de13:	aad    0x20
  40de15:	or     eax,0x7b45bfc9
  40de1a:	mov    esp,0xd090d188
  40de1f:	(bad)  
  40de21:	mov    eax,ds:0x5845488c
  40de26:	jg     0x40ddef
  40de28:	std    
  40de29:	inc    eax
  40de2a:	out    dx,al
  40de2b:	loopne 0x40ddc4
  40de2d:	loopne 0x40de96
  40de2f:	pop    ss
  40de30:	jmp    0xf4bf:0xffee5e0c
  40de37:	imul   eax,DWORD PTR [edi],0xc5c679a7
  40de3d:	cmp    al,0x29
  40de40:	repnz sub al,0x7e
  40de43:	xor    eax,0x5b2a4974
  40de48:	fnstsw WORD PTR [esp+edi*4+0x65]
  40de4c:	push   edx
  40de4d:	sbb    esi,DWORD PTR [ebx+0x55d04fc6]
  40de53:	adc    al,0x64
  40de55:	mov    bl,BYTE PTR [ecx-0x66]
  40de58:	dec    ecx
  40de59:	fisttp QWORD PTR [esi]
  40de5b:	jl     0x40dea8
  40de5d:	jecxz  0x40de8d
  40de5f:	mov    bh,0x2f
  40de61:	xchg   edi,eax
  40de62:	fld    DWORD PTR [ebp+0x127e850]
  40de68:	cmp    esi,edx
  40de6a:	sbb    edi,edi
  40de6c:	inc    edx
  40de6d:	add    cl,bh
  40de6f:	fs and eax,0xc2eee327
  40de75:	cmp    ebx,DWORD PTR [ebp-0x27590b8]
  40de7b:	pop    esp
  40de7c:	pusha  
  40de7d:	jmp    0xd3456db4
  40de82:	es scas eax,DWORD PTR es:[edi]
  40de84:	fist   WORD PTR [eax]
  40de86:	sar    BYTE PTR [esi+0x4a],0x72
  40de8a:	mov    eax,ds:0x29d24ad
  40de8f:	inc    ebp
  40de90:	loope  0x40de21
  40de92:	sar    ecx,0xa7
  40de95:	sbb    DWORD PTR [edi],ecx
  40de97:	adc    al,0x70
  40de99:	(bad)  
  40de9a:	sbb    ch,BYTE PTR [ebp+0x3f]
  40de9d:	popf   
  40de9e:	pop    ebx
  40de9f:	mov    DWORD PTR [edi+0x78],0x864c1e0
  40dea6:	adc    al,BYTE PTR [eax+0xd]
  40dea9:	xor    BYTE PTR [edi+ecx*8-0x1270edd8],al
  40deb0:	data16 cmp BYTE PTR [eax],bl
  40deb3:	or     al,BYTE PTR [bx-0x74]
  40deb7:	xor    DWORD PTR ds:0xf51705a6,edi
  40debd:	jle    0x40dece
  40debf:	jb     0x40dec7
  40dec1:	popf   
  40dec2:	ficomp WORD PTR ds:0xcbc6a050
  40dec8:	arpl   WORD PTR [eax+0x4f],di
  40decb:	dec    edi
  40decc:	dec    ebp
  40decd:	std    
  40dece:	out    dx,al
  40decf:	test   DWORD PTR [eax+0x6769862e],edi
  40ded5:	dec    edi
  40ded6:	cmp    DWORD PTR [eax+0x1a3050fc],esp
  40dedc:	inc    ebp
  40dedd:	cwde   
  40dede:	mov    eax,0x8da4fbe0
  40dee3:	call   0xd17ae13
  40dee8:	dec    esi
  40dee9:	in     eax,0x4c
  40deeb:	leave  
  40deec:	lods   al,BYTE PTR ds:[esi]
  40deed:	add    DWORD PTR [ecx-0x4dba882b],ebp
  40def3:	xor    eax,0xc4b10908
  40def8:	fcmovu st,st(4)
  40defa:	xor    al,0xf8
  40defc:	in     eax,dx
  40defd:	jp     0x40df29
  40deff:	arpl   WORD PTR [edi],si
  40df01:	std    
  40df02:	xor    al,0x1c
  40df04:	mov    edi,0xf5c437b1
  40df09:	sahf   
  40df0a:	fwait
  40df0b:	popa   
  40df0c:	mov    edi,0x4643761a
  40df11:	pop    esi
  40df12:	rol    BYTE PTR [eax],1
  40df14:	mov    dh,0x54
  40df16:	xor    ebp,DWORD PTR [ecx+eax*1-0x4c]
  40df1a:	loope  0x40df7f
  40df1c:	cld    
  40df1d:	loopne 0x40deeb
  40df1f:	(bad)  
  40df20:	shl    DWORD PTR [ecx+edi*1-0x24d6bcce],cl
  40df27:	mov    DWORD PTR [ebp+0x68bf48db],edx
  40df2d:	loope  0x40df15
  40df2f:	cwde   
  40df30:	push   ebx
  40df31:	outs   dx,BYTE PTR ds:[esi]
  40df32:	repnz sahf 
  40df34:	xor    DWORD PTR [ecx-0x3],eax
  40df37:	jae    0x40df44
  40df39:	in     al,0x4e
  40df3b:	pop    ds
  40df3c:	jae    0x40df4a
  40df3e:	sub    al,0xe4
  40df40:	sbb    bh,BYTE PTR [eax-0x412eaf28]
  40df46:	cwde   
  40df47:	jo     0x40df7a
  40df49:	hlt    
  40df4a:	adc    ebp,esp
  40df4c:	mov    esi,0x16bf6e93
  40df51:	dec    edi
  40df52:	xchg   edi,eax
  40df53:	cmp    eax,0xb21474e7
  40df58:	int3   
  40df59:	aaa    
  40df5a:	mov    esi,0xb91d0541
  40df5f:	aam    0xd7
  40df61:	fidiv  WORD PTR [esi]
  40df63:	(bad)  
  40df64:	jg     0x40df1d
  40df66:	hlt    
  40df67:	mov    BYTE PTR [ebx],al
  40df69:	gs xchg ebx,eax
  40df6b:	push   esi
  40df6c:	push   cs
  40df6d:	cld    
  40df6e:	jmp    0x40df2e
  40df70:	mov    al,ds:0x4856fd48
  40df75:	mov    bh,BYTE PTR [ebp+0x56403f9]
  40df7b:	aas    
  40df7c:	inc    ecx
  40df7d:	mov    dl,0xdb
  40df7f:	xchg   ecx,edx
  40df81:	ret    0xc90c
  40df84:	mov    bh,0xc3
  40df86:	cmp    bl,BYTE PTR [eax+0x54]
  40df89:	repz pop esp
  40df8b:	das    
  40df8c:	adc    esp,DWORD PTR [edx]
  40df8e:	cmp    al,0xf3
  40df90:	pop    ss
  40df91:	pop    esi
  40df92:	imul   eax,ebx,0xc36978f2
  40df98:	pusha  
  40df99:	adc    BYTE PTR [eax+0x3c2c9b16],cl
  40df9f:	push   ss
  40dfa0:	adc    bl,BYTE PTR [edx+0x510319f3]
  40dfa6:	mov    eax,DWORD PTR [edi-0x4]
  40dfa9:	outs   dx,DWORD PTR ds:[esi]
  40dfaa:	adc    al,0x40
  40dfac:	arpl   WORD PTR [ebx],cx
  40dfae:	mov    bl,0x73
  40dfb0:	and    eax,0x36164451
  40dfb5:	sbb    eax,DWORD PTR [eax-0x3afe2e6e]
  40dfbb:	jl     0x40df8a
  40dfbd:	gs je  0x40dfa8
  40dfc0:	je     0x40dfdc
  40dfc2:	push   ss
  40dfc3:	loop   0x40df75
  40dfc5:	push   cs
  40dfc6:	aaa    
  40dfc7:	nop
  40dfc8:	mov    ds:0x5730316b,al
  40dfcd:	jnp    0x40df81
  40dfcf:	mov    bh,0x8a
  40dfd1:	stos   BYTE PTR es:[edi],al
  40dfd2:	das    
  40dfd3:	sbb    DWORD PTR [edi+0x71],ebp
  40dfd6:	inc    ecx
  40dfd7:	adc    ah,BYTE PTR ds:0x3875db4a
  40dfdd:	mov    dl,0xd7
  40dfdf:	fmul   DWORD PTR [edx+esi*8-0x5e]
  40dfe3:	test   edi,eax
  40dfe5:	sbb    al,0x1b
  40dfe7:	shr    BYTE PTR ds:0x562f7573,cl
  40dfed:	(bad)  
  40dfee:	(bad)  
  40dff0:	inc    ebp
  40dff1:	mov    ah,0xb0
  40dff3:	mov    edi,0xd07228f9
  40dff8:	push   ecx
  40dff9:	and    al,0xf9
  40dffb:	aad    0x7e
  40dffd:	scas   al,BYTE PTR es:[edi]
  40dffe:	cmp    al,0x34
  40e000:	int3   
  40e001:	mov    edi,0xee70253c
  40e006:	in     al,dx
  40e007:	xor    BYTE PTR [ebp+0x4e],bh
  40e00a:	pop    ecx
  40e00b:	xor    edi,DWORD PTR [eax]
  40e00d:	cmp    cl,bh
  40e00f:	sub    DWORD PTR [ebp-0x106f5202],edi
  40e015:	jl     0x40e05f
  40e017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e018:	and    DWORD PTR [esi+0x6feb84c9],edi
  40e01e:	mov    ebx,0x936573e8
  40e023:	push   ebp
  40e024:	xor    ch,BYTE PTR [ecx+0x6055593f]
  40e02a:	das    
  40e02b:	mov    dl,0x68
  40e02d:	pop    ecx
  40e02e:	test   ch,dh
  40e030:	push   ss
  40e031:	popf   
  40e032:	pushf  
  40e033:	or     dl,BYTE PTR [eax+edx*8]
  40e036:	ret    
  40e037:	mov    eax,0xa8b34dce
  40e03c:	rol    DWORD PTR [esi+esi*8+0x4d48c9f5],cl
  40e043:	and    al,BYTE PTR [eax+edi*4-0x4e7ccc75]
  40e04a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e04b:	add    ch,ah
  40e04d:	dec    esp
  40e04e:	sub    al,0x7f
  40e050:	mov    ebp,0xa015c8c9
  40e055:	pop    ebp
  40e056:	add    eax,0xc723a670
  40e05b:	fcmovbe st,st(1)
  40e05d:	pop    edx
  40e05e:	and    ecx,DWORD PTR [edi+0x3b00f8c1]
  40e064:	xchg   ecx,eax
  40e065:	imul   ebp,DWORD PTR ds:0xf6c254d4,0xffffffd4
  40e06c:	mov    ah,0x8d
  40e06e:	dec    eax
  40e06f:	jmp    0xe348d97e
  40e074:	les    esp,FWORD PTR [ebx]
  40e076:	mov    esi,?
  40e078:	hlt    
  40e079:	pop    ss
  40e07a:	div    BYTE PTR [esi-0x75]
  40e07d:	into   
  40e07e:	nop
  40e07f:	shl    dh,cl
  40e081:	mov    al,0xe8
  40e083:	pop    edx
  40e084:	aad    0x96
  40e086:	cld    
  40e087:	out    dx,eax
  40e088:	inc    edi
  40e089:	xchg   edx,eax
  40e08a:	popf   
  40e08b:	xchg   ch,bh
  40e08d:	in     al,0xac
  40e08f:	xlat   BYTE PTR ds:[ebx]
  40e090:	or     dl,al
  40e092:	mov    ecx,0x9ac27390
  40e097:	mov    dl,0xcb
  40e099:	inc    ecx
  40e09a:	pop    esp
  40e09b:	push   cs
  40e09c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e09d:	push   0x42
  40e09f:	lds    edi,FWORD PTR [ecx]
  40e0a1:	dec    ebp
  40e0a2:	xchg   esi,eax
  40e0a3:	jmp    0x40e0db
  40e0a5:	or     BYTE PTR [esi-0x39],0xdb
  40e0a9:	jae    0x40e125
  40e0ab:	sahf   
  40e0ac:	test   eax,0xe50a79e4
  40e0b1:	call   0xc488:0xfec6c2a9
  40e0b8:	add    al,0xc
  40e0ba:	pop    DWORD PTR [ebp+0x75]
  40e0bd:	adc    ebx,DWORD PTR [ecx+0x7d733f65]
  40e0c3:	stos   DWORD PTR es:[edi],eax
  40e0c4:	mov    ch,0xfa
  40e0c6:	ds loopne 0x40e0dd
  40e0c9:	adc    BYTE PTR [ecx+0x1414cdc3],0xf1
  40e0d0:	mov    eax,ds:0x202dbda1
  40e0d5:	daa    
  40e0d6:	sub    al,0xd5
  40e0d8:	mov    cl,0xf2
  40e0da:	popa   
  40e0db:	xor    al,0x56
  40e0dd:	xor    al,0x45
  40e0df:	xor    DWORD PTR [ebx],ecx
  40e0e1:	icebp  
  40e0e2:	aad    0x4a
  40e0e4:	addr16 jg 0x40e069
  40e0e7:	sbb    DWORD PTR [ebx-0x3e2552fe],ebp
  40e0ed:	and    ah,ch
  40e0ef:	sub    ebp,esi
  40e0f1:	jbe    0x40e115
  40e0f3:	mov    DWORD PTR [ebx+0x5d86b479],ebp
  40e0f9:	push   ss
  40e0fa:	mov    bl,ch
  40e0fc:	(bad)  [esi]
  40e0fe:	lea    ebx,[edi-0x44]
  40e101:	push   DWORD PTR [eax+0x1a7cd999]
  40e107:	jmp    0x8a24f746
  40e10c:	jecxz  0x40e0df
  40e10e:	cmp    ecx,DWORD PTR [edx]
  40e110:	gs cli 
  40e112:	adc    bl,dh
  40e114:	sti    
  40e115:	jecxz  0x40e16d
  40e117:	mov    BYTE PTR [eax-0x4a],0x89
  40e11b:	(bad)  
  40e11d:	push   esi
  40e11e:	clc    
  40e11f:	in     eax,0x15
  40e121:	mov    ecx,0x4a5e7e2c
  40e126:	add    al,0x80
  40e128:	aam    0x17
  40e12a:	add    al,0x3a
  40e12c:	in     eax,dx
  40e12d:	in     al,dx
  40e12e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e12f:	and    al,0x94
  40e131:	and    eax,0xf90594e6
  40e136:	fcomp  st(7)
  40e138:	sub    ecx,DWORD PTR [ecx-0x61fa2cb]
  40e13e:	push   ecx
  40e13f:	ins    DWORD PTR es:[edi],dx
  40e140:	xchg   edx,eax
  40e141:	popa   
  40e142:	inc    cl
  40e144:	lahf   
  40e145:	sub    al,0xb5
  40e147:	dec    edi
  40e148:	push   ds
  40e149:	into   
  40e14a:	mov    al,0x61
  40e14c:	ret    0x9f24
  40e14f:	out    0xeb,eax
  40e151:	and    bh,BYTE PTR [ebp+0x34]
  40e154:	add    eax,0xe5f3a8c1
  40e159:	rol    BYTE PTR [edi+0x20],0xc0
  40e15d:	xchg   ecx,eax
  40e15e:	jmp    0x43081bc7
  40e163:	mov    cs,WORD PTR [edx+0x71f9ed19]
  40e169:	iret   
  40e16a:	adc    DWORD PTR [ebp-0x4c6ad888],ebp
  40e170:	mov    ds:0x5970e176,al
  40e175:	inc    esp
  40e176:	adc    al,0xef
  40e178:	mov    edx,0x5d29aac3
  40e17d:	sub    ebx,DWORD PTR [ebx+0x4f]
  40e180:	jns    0x40e1d1
  40e182:	adc    eax,0x7a09cae
  40e187:	inc    edi
  40e188:	mov    al,0x62
  40e18a:	push   edi
  40e18b:	push   esp
  40e18c:	inc    ebx
  40e18d:	push   cs
  40e18e:	sub    cl,ah
  40e190:	popa   
  40e191:	sub    al,BYTE PTR [edi]
  40e193:	cmp    al,0xe5
  40e195:	pop    ebp
  40e196:	(bad)  
  40e197:	fsubp  st(7),st
  40e199:	push   edx
  40e19a:	dec    ecx
  40e19b:	or     BYTE PTR [esi],bh
  40e19d:	pop    eax
  40e19e:	sbb    ebx,eax
  40e1a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1a1:	int    0xf1
  40e1a3:	and    dh,0x52
  40e1a6:	loopne 0x40e1fe
  40e1a8:	mov    esp,0xff6018e0
  40e1ad:	out    0xda,al
  40e1af:	int    0x9e
  40e1b1:	jne    0x40e174
  40e1b3:	and    ch,BYTE PTR [edi-0x53]
  40e1b6:	popf   
  40e1b7:	daa    
  40e1b8:	out    dx,eax
  40e1b9:	repnz push cs
  40e1bb:	push   ecx
  40e1bc:	inc    esi
  40e1bd:	in     eax,0xe
  40e1bf:	stos   DWORD PTR es:[edi],eax
  40e1c0:	ret    
  40e1c1:	bound  ebp,QWORD PTR [edi+0x4592a262]
  40e1c7:	popa   
  40e1c8:	out    dx,al
  40e1c9:	inc    esi
  40e1ca:	pop    ebx
  40e1cb:	stos   DWORD PTR es:[edi],eax
  40e1cc:	(bad)  
  40e1ce:	push   0x5439ce06
  40e1d3:	and    eax,0x5ad73da8
  40e1d8:	inc    ebx
  40e1d9:	mov    ds,ebp
  40e1db:	inc    ecx
  40e1dc:	data16 dec BYTE PTR [ecx]
  40e1df:	inc    DWORD PTR ds:0x6897c601
  40e1e5:	imul   edx,DWORD PTR [ecx-0x33],0x6f784bed
  40e1ec:	stos   DWORD PTR es:[edi],eax
  40e1ed:	(bad)  
  40e1ee:	mov    ecx,0xed69d407
  40e1f3:	dec    edx
  40e1f4:	outs   dx,BYTE PTR ds:[esi]
  40e1f5:	mov    eax,0x32187a39
  40e1fa:	push   ss
  40e1fb:	outs   dx,BYTE PTR ds:[esi]
  40e1fc:	or     bl,BYTE PTR [eax+eax*8+0x59]
  40e200:	mov    esp,0x3a7acca2
  40e205:	push   edx
  40e206:	inc    ebp
  40e207:	push   ecx
  40e208:	inc    eax
  40e209:	fild   DWORD PTR [esi]
  40e20b:	add    ah,ch
  40e20d:	mov    ss,WORD PTR [edx-0x17f29b73]
  40e213:	xor    DWORD PTR [ebp-0x5b40ff4f],0xd28c5be1
  40e21d:	push   edx
  40e21e:	imul   edx,ebp,0x5670e934
  40e224:	mov    ss,esp
  40e226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e227:	push   ebp
  40e228:	xchg   ah,dh
  40e22a:	ret    
  40e22b:	or     al,0x67
  40e22d:	rol    al,1
  40e22f:	pushf  
  40e230:	xor    eax,0x5794c8ee
  40e235:	inc    edi
  40e236:	loopne 0x40e2a7
  40e238:	push   edx
  40e239:	das    
  40e23a:	cmp    BYTE PTR [edi-0xbfb01dd],0xd1
  40e241:	je     0x40e1e7
  40e243:	outs   dx,BYTE PTR ds:[esi]
  40e244:	sub    eax,0xa4d0d6e4
  40e249:	mov    dl,0x74
  40e24b:	xor    eax,DWORD PTR [edi+ebx*2]
  40e24e:	scas   al,BYTE PTR es:[edi]
  40e24f:	lods   eax,DWORD PTR ds:[esi]
  40e250:	cwde   
  40e251:	dec    eax
  40e252:	popa   
  40e253:	dec    edx
  40e254:	iret   
  40e255:	push   ds
  40e256:	test   BYTE PTR [eax-0xd],ch
  40e259:	jp     0x40e290
  40e25b:	pop    ebp
  40e25c:	add    cl,BYTE PTR [esi]
  40e25e:	jg     0x40e2c7
  40e260:	xchg   esi,eax
  40e261:	jge    0x40e245
  40e263:	dec    ecx
  40e264:	push   0xffffff94
  40e266:	imul   DWORD PTR [eax-0x45f9bdc4]
  40e26c:	lock or al,0x83
  40e26f:	jmp    0xf0b2:0xd48d8289
  40e276:	dec    ecx
  40e277:	shr    BYTE PTR [edx-0x60],1
  40e27a:	cmp    eax,0xb0b1edb9
  40e27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e280:	adc    BYTE PTR [ecx-0x4b970194],dl
  40e286:	xor    BYTE PTR [edx-0x5a171b8e],0x44
  40e28d:	imul   ebp,DWORD PTR [edi-0x7887a489],0xfffffff7
  40e294:	pop    es
  40e295:	jbe    0x40e25e
  40e297:	sub    al,0xce
  40e299:	imul   esi,DWORD PTR [ebp+0x68208eb3],0xffffff94
  40e2a0:	cwde   
  40e2a1:	lea    edi,[ecx-0x669f368d]
  40e2a7:	aaa    
  40e2a8:	sub    ch,bl
  40e2aa:	cmp    eax,0xf7c34669
  40e2af:	je     0x40e2c7
  40e2b1:	push   cs
  40e2b2:	in     al,dx
  40e2b3:	sub    eax,DWORD PTR [edx]
  40e2b5:	popa   
  40e2b6:	dec    BYTE PTR [ebp-0x4b]
  40e2b9:	(bad)  
  40e2ba:	inc    ch
  40e2bc:	xor    DWORD PTR [eax],0x4a
  40e2bf:	mov    eax,ds:0x37d42478
  40e2c4:	mov    ah,0xdd
  40e2c6:	xchg   edx,eax
  40e2c7:	inc    edi
  40e2c8:	cli    
  40e2c9:	je     0x40e303
  40e2cb:	mov    fs,WORD PTR [ecx*2+0x45e3d6f6]
  40e2d2:	mov    WORD PTR [edi+0x3b],ds
  40e2d5:	adc    BYTE PTR [esi-0x25],bh
  40e2d8:	pop    ebp
  40e2d9:	(bad)  
  40e2da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2db:	in     eax,0xdb
  40e2dd:	mov    es,WORD PTR ss:[edx-0x2a303116]
  40e2e4:	imul   esi,DWORD PTR [ecx+0x70],0xbcdfc5bd
  40e2eb:	mov    al,0xe7
  40e2ed:	fdivrp st(1),st
  40e2ef:	into   
  40e2f0:	imul   edx,DWORD PTR [eax],0xa
  40e2f3:	mov    bl,0xa
  40e2f5:	cwde   
  40e2f6:	xchg   esi,eax
  40e2f7:	(bad)  
  40e2f9:	mov    esi,0x703dc19b
  40e2fe:	jle    0x40e2cc
  40e300:	push   edi
  40e301:	mov    edx,0x44427483
  40e306:	das    
  40e307:	pushf  
  40e308:	je     0x40e2a5
  40e30a:	xor    DWORD PTR [edx+0x4ceed4],0xffffff9c
  40e311:	test   al,0x8c
  40e313:	jmp    0x40e2b2
  40e315:	and    BYTE PTR [ebx-0x58],al
  40e318:	fisubr WORD PTR [edi+0x20]
  40e31b:	inc    DWORD PTR [edx-0x2c]
  40e31e:	int3   
  40e31f:	stos   DWORD PTR es:[edi],eax
  40e320:	int    0xcb
  40e322:	cmp    ecx,DWORD PTR [ecx-0x490d0566]
  40e328:	data16 sbb cl,bl
  40e32b:	or     ch,BYTE PTR [ecx+0x6b5f1568]
  40e331:	and    BYTE PTR [ebp+0x32da97f7],cl
  40e337:	mov    ds:0xf7568575,eax
  40e33c:	les    esi,FWORD PTR [esi-0x1d1c3b5e]
  40e342:	outs   dx,BYTE PTR ds:[esi]
  40e343:	xlat   BYTE PTR ds:[ebx]
  40e344:	add    dh,al
  40e346:	outs   dx,DWORD PTR ds:[esi]
  40e347:	push   ebp
  40e348:	and    BYTE PTR [ecx+0x2f],ah
  40e34b:	pop    ss
  40e34c:	mov    al,0x2e
  40e34e:	or     esp,DWORD PTR [ebp-0x53f58d2d]
  40e354:	adc    eax,0x576366d6
  40e359:	stos   DWORD PTR es:[edi],eax
  40e35a:	or     ah,0x5e
  40e35d:	mov    BYTE PTR [edx],al
  40e35f:	xor    edi,DWORD PTR [ebx+0x2d]
  40e362:	pop    ebp
  40e363:	ds inc eax
  40e365:	fsubp  st(6),st
  40e367:	addr16 out dx,al
  40e369:	mov    ds:0xc8271e51,al
  40e36e:	adc    ebx,DWORD PTR [edx-0x677d0990]
  40e374:	adc    ecx,DWORD PTR [ebx+ebp*8]
  40e377:	mov    eax,ds:0xae06e778
  40e37c:	cs xor edx,ebx
  40e37f:	jb     0x40e382
  40e381:	jmp    DWORD PTR [ecx-0x69d9ee6b]
  40e387:	in     eax,dx
  40e388:	xor    al,0x3b
  40e38a:	adc    eax,0x8fd3b1df
  40e38f:	xchg   edx,eax
  40e390:	nop
  40e391:	retf   
  40e392:	arpl   WORD PTR [edi+0x2],sp
  40e395:	push   ss
  40e396:	iret   
  40e397:	add    esp,0xffffffa2
  40e39a:	inc    edx
  40e39b:	(bad)  
  40e39c:	stos   BYTE PTR es:[edi],al
  40e39d:	jle    0x40e412
  40e39f:	sbb    BYTE PTR [ecx+0x1dae620d],dl
  40e3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3a6:	cmpxchg BYTE PTR [ecx],bl
  40e3a9:	pop    ebx
  40e3aa:	xchg   esp,eax
  40e3ab:	or     al,ch
  40e3ad:	push   esp
  40e3ae:	push   ecx
  40e3af:	mov    cl,0x44
  40e3b1:	jb     0x40e410
  40e3b3:	lahf   
  40e3b4:	div    DWORD PTR [eax+0x581ab7d5]
  40e3ba:	hlt    
  40e3bb:	sti    
  40e3bc:	gs in  al,dx
  40e3be:	daa    
  40e3bf:	mul    al
  40e3c1:	xor    eax,0xfba9d112
  40e3c6:	sub    ch,BYTE PTR [edx-0x9]
  40e3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3ca:	nop
  40e3cb:	fisttp QWORD PTR ds:0x3dbb2c55
  40e3d1:	shr    BYTE PTR [ecx-0x5ccc83c4],1
  40e3d7:	out    0x8b,eax
  40e3d9:	and    eax,0x37644835
  40e3de:	dec    ebx
  40e3df:	shl    DWORD PTR [ecx],cl
  40e3e1:	mov    DWORD PTR [edi+0x4fd590e0],edi
  40e3e7:	dec    ecx
  40e3e8:	push   esp
  40e3e9:	mov    DWORD PTR ds:0x6e27ccdb,0x34348ff
  40e3f3:	and    bh,BYTE PTR ds:0xef07c9eb
  40e3f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3fa:	cmp    eax,0x47aaeca7
  40e3ff:	cdq    
  40e400:	jle    0x40e3fb
  40e402:	sbb    al,0xf4
  40e404:	(bad)
  40e407:	in     eax,0x1d
  40e409:	scas   eax,DWORD PTR es:[edi]
  40e40a:	(bad)  
  40e40b:	cmp    al,0xac
  40e40d:	ds inc esi
  40e40f:	int    0xbb
  40e411:	not    DWORD PTR cs:[edx]
  40e414:	xor    al,0x7a
  40e416:	xchg   BYTE PTR [esi-0x774222d8],bl
  40e41c:	inc    esi
  40e41d:	test   BYTE PTR [ebx],ch
  40e41f:	inc    esi
  40e420:	cdq    
  40e421:	push   ecx
  40e422:	mov    esp,DWORD PTR [edx+0xb]
  40e425:	cli    
  40e426:	int    0xe5
  40e428:	jne    0x40e43c
  40e42a:	lea    ebp,[eax+eiz*4+0xede38b1]
  40e431:	shl    esp,cl
  40e433:	adc    DWORD PTR [ebx+0x48],ecx
  40e436:	dec    ebx
  40e437:	jo     0x40e47b
  40e439:	rcr    ebp,cl
  40e43b:	jno    0x40e3c3
  40e43d:	dec    ebx
  40e43e:	jae    0x40e3ef
  40e440:	mov    eax,0x8e5dbb7a
  40e445:	sbb    DWORD PTR [edi],esi
  40e447:	outs   dx,BYTE PTR ds:[esi]
  40e448:	or     DWORD PTR [esi+ebx*2+0x4e79f1de],ebx
  40e44f:	mov    al,0xfd
  40e451:	ss mov bh,0xee
  40e454:	and    al,0xa2
  40e456:	mov    ah,0xa0
  40e458:	sbb    dh,BYTE PTR [eax+0x6c]
  40e45b:	pop    es
  40e45c:	in     eax,dx
  40e45d:	scas   al,BYTE PTR es:[edi]
  40e45e:	int3   
  40e45f:	int    0xcc
  40e461:	imul   esp,DWORD PTR [ebp+0x62],0xf186d85
  40e468:	xchg   esi,eax
  40e469:	mov    edi,0xcbcdc601
  40e46e:	test   ch,cl
  40e470:	(bad)  [edi-0x69]
  40e473:	push   ebp
  40e474:	scas   eax,DWORD PTR es:[edi]
  40e475:	call   0xe31c8b9
  40e47a:	inc    esp
  40e47b:	xlat   BYTE PTR ds:[ebx]
  40e47c:	push   ebp
  40e47d:	inc    ebp
  40e47e:	bound  edx,QWORD PTR [edx+0x2d]
  40e481:	push   eax
  40e482:	sub    BYTE PTR [eax-0x4944f63b],bl
  40e488:	mov    ecx,0x4292a5a4
  40e48d:	jae    0x40e414
  40e48f:	dec    esp
  40e490:	popf   
  40e491:	inc    ecx
  40e492:	ins    BYTE PTR es:[edi],dx
  40e493:	out    dx,al
  40e494:	sti    
  40e495:	push   ecx
  40e496:	sbb    eax,0x7b1afd32
  40e49b:	pop    ds
  40e49c:	fs leave 
  40e49e:	rol    DWORD PTR [edi+esi*2-0x39],0x5c
  40e4a3:	jns    0x40e508
  40e4a5:	sbb    eax,0x8b480eb7
  40e4aa:	mov    edx,0xa61bec3e
  40e4af:	aam    0x95
  40e4b1:	pop    edx
  40e4b2:	adc    BYTE PTR [esi-0x6a04545b],ah
  40e4b8:	xchg   edx,eax
  40e4b9:	xchg   esp,ecx
  40e4bb:	mov    ch,BYTE PTR [esi-0x71]
  40e4be:	cmp    DWORD PTR [ebx+0x51],ebx
  40e4c1:	xchg   ecx,eax
  40e4c2:	idiv   DWORD PTR [esp+esi*8]
  40e4c5:	sub    eax,0xd5ac19b1
  40e4ca:	jge    0x40e4f9
  40e4cc:	(bad)  
  40e4cd:	in     al,dx
  40e4ce:	or     al,0xc9
  40e4d0:	aaa    
  40e4d1:	test   DWORD PTR [esi],edx
  40e4d3:	pop    ebp
  40e4d4:	pop    eax
  40e4d5:	jnp    0x40e457
  40e4d7:	inc    edi
  40e4d8:	mov    ah,0xff
  40e4da:	and    dl,BYTE PTR [ecx+0x5d890d7b]
  40e4e0:	les    esp,FWORD PTR [ebx+edi*2+0x5f97c3c3]
  40e4e7:	popa   
  40e4e8:	add    al,0xf4
  40e4ea:	cmp    cl,BYTE PTR [esi+ecx*8-0x30443edc]
  40e4f1:	in     al,dx
  40e4f2:	and    ebp,edx
  40e4f4:	aam    0x9b
  40e4f6:	dec    esi
  40e4f7:	in     al,0xec
  40e4f9:	enter  0x8d69,0x84
  40e4fd:	or     edi,ebp
  40e4ff:	cdq    
  40e500:	or     ch,0x82
  40e503:	pop    ebx
  40e504:	pop    es
  40e505:	mov    ds:0x87e5ab2b,eax
  40e50a:	mov    dl,0xe6
  40e50c:	ret    
  40e50d:	loop   0x40e577
  40e50f:	xor    eax,esi
  40e511:	push   cs
  40e512:	sbb    bh,BYTE PTR [ebp-0x61]
  40e515:	push   esp
  40e516:	mov    ecx,0xfeea18b
  40e51b:	jnp    0x40e4b0
  40e51d:	jg     0x40e4a6
  40e51f:	sub    eax,0xf3aa0987
  40e524:	ret    
  40e525:	icebp  
  40e526:	mov    ss,WORD PTR [eax]
  40e528:	dec    esi
  40e529:	jbe    0x40e528
  40e52b:	bnd jns 0x40e550
  40e52e:	fild   WORD PTR [edx]
  40e530:	jns    0x40e51b
  40e532:	push   cs
  40e533:	or     bh,BYTE PTR [ebx-0x7fe88882]
  40e539:	mov    al,0x3e
  40e53b:	jmp    0xfe6:0x25b8c88e
  40e542:	(bad)  [esi]
  40e544:	inc    esp
  40e545:	(bad)  
  40e546:	imul   esi,DWORD PTR [ebp-0x19a6c14],0xeaee1af6
  40e550:	stc    
  40e551:	retf   0xd28d
  40e554:	sub    BYTE PTR [eax],bh
  40e556:	lods   al,BYTE PTR ds:[esi]
  40e557:	cli    
  40e558:	jmp    0x5abb:0xcf90d16f
  40e55f:	test   eax,0x64e87e61
  40e564:	arpl   WORD PTR [ecx+0x3],di
  40e567:	ror    dl,0x36
  40e56a:	enter  0x9347,0x6f
  40e56e:	mov    esi,0xc27bb82e
  40e573:	sub    al,0xf3
  40e575:	pop    ss
  40e576:	scas   al,BYTE PTR es:[edi]
  40e577:	mov    ah,0xa7
  40e579:	mov    edx,DWORD PTR [esi]
  40e57b:	sub    ebp,ebx
  40e57d:	dec    edi
  40e57e:	or     bh,bl
  40e580:	icebp  
  40e581:	pop    eax
  40e582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e583:	and    eax,0xd0325fbc
  40e588:	push   0x30d7e7a
  40e58d:	stos   BYTE PTR es:[edi],al
  40e58e:	test   al,0xd1
  40e590:	dec    edi
  40e591:	cdq    
  40e592:	gs dec edi
  40e594:	hlt    
  40e595:	jbe    0x40e57d
  40e597:	cdq    
  40e598:	pop    ebx
  40e599:	mov    WORD PTR [esi-0x7c8ab0a7],gs
  40e59f:	xlat   BYTE PTR ds:[ebx]
  40e5a0:	or     esp,DWORD PTR [edx+0x3036b049]
  40e5a6:	les    esi,FWORD PTR ds:0xec634b2e
  40e5ac:	rol    DWORD PTR [esi-0x55],1
  40e5af:	xchg   edi,eax
  40e5b0:	and    dl,bl
  40e5b2:	dec    edi
  40e5b3:	sti    
  40e5b4:	sar    BYTE PTR [edx],cl
  40e5b6:	sbb    eax,0x6c7c7657
  40e5bb:	clc    
  40e5bc:	or     ebx,DWORD PTR [eax]
  40e5be:	das    
  40e5bf:	out    0x41,al
  40e5c1:	and    al,0xa6
  40e5c3:	call   DWORD PTR [ebp-0x48]
  40e5c6:	retf   0x66a6
  40e5c9:	(bad)  
  40e5ca:	mov    ch,0xd8
  40e5cc:	cli    
  40e5cd:	xchg   ebp,eax
  40e5ce:	or     esp,esp
  40e5d0:	fisttp DWORD PTR ds:0xa24dc6a8
  40e5d6:	pop    eax
  40e5d7:	lds    ebp,FWORD PTR [ebp-0x68]
  40e5da:	inc    edi
  40e5db:	adc    DWORD PTR [esi+edx*1-0x7e],0x626db2b2
  40e5e3:	dec    ecx
  40e5e4:	xchg   ecx,eax
  40e5e5:	pop    edi
  40e5e6:	shr    DWORD PTR [eax-0x15046178],cl
  40e5ec:	xchg   ebp,eax
  40e5ed:	and    DWORD PTR [ebx-0x1b723955],edi
  40e5f3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5f5:	into   
  40e5f6:	and    al,0x25
  40e5f8:	test   al,0x24
  40e5fa:	push   esp
  40e5fb:	or     ch,al
  40e5fd:	push   ss
  40e5fe:	jno    0x40e61c
  40e600:	ins    BYTE PTR es:[edi],dx
  40e601:	dec    ecx
  40e602:	repz pushf 
  40e604:	mov    cl,0xc5
  40e606:	(bad)  
  40e607:	cli    
  40e608:	inc    ebp
  40e609:	arpl   WORD PTR [ebp-0x21ccde84],bp
  40e60f:	clc    
  40e610:	rcr    BYTE PTR [ecx+0x32],1
  40e613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e614:	mov    ecx,0xfaffa599
  40e619:	jb     0x40e62e
  40e61b:	out    dx,al
  40e61c:	adc    dh,BYTE PTR [eax+0x10106895]
  40e622:	inc    edi
  40e623:	jmp    0x14afc8eb
  40e628:	pop    ss
  40e629:	sbb    dl,BYTE PTR ds:0xc8a0782
  40e62f:	ret    
  40e630:	loope  0x40e5bc
  40e632:	cmp    eax,0x728c3a87
  40e637:	outs   dx,DWORD PTR ds:[esi]
  40e638:	pop    edx
  40e639:	ins    BYTE PTR es:[edi],dx
  40e63a:	jns    0x40e6ba
  40e63c:	test   al,0x70
  40e63e:	mov    dl,0x75
  40e640:	dec    ebp
  40e641:	movd   DWORD PTR [ebp+eiz*4+0x19d5da00],mm1
  40e649:	mov    ebp,ss
  40e64b:	or     ebx,edx
  40e64d:	mov    edx,0x1391a0d3
  40e652:	loopne 0x40e6b9
  40e654:	jg     0x40e605
  40e656:	(bad)  
  40e657:	mov    esi,0x55122db
  40e65c:	fdiv   st,st(3)
  40e65e:	fsubrp st(4),st
  40e660:	xor    BYTE PTR [ecx+0x6d619b17],0x25
  40e667:	imul   eax,DWORD PTR [eax-0x24],0xffffffcc
  40e66b:	adc    dl,BYTE PTR [edx]
  40e66d:	cmp    al,0x6e
  40e66f:	adc    BYTE PTR [eax-0x32ec2573],dl
  40e675:	mov    dh,0x13
  40e677:	and    ebx,ebp
  40e679:	fdiv   QWORD PTR [ecx]
  40e67b:	rcr    DWORD PTR [eax+ebp*2-0x3d],1
  40e67f:	sar    DWORD PTR [edx+0x6d68d763],1
  40e685:	test   al,0x8f
  40e687:	stos   BYTE PTR es:[edi],al
  40e688:	aam    0xa0
  40e68a:	sub    eax,0x3dc49065
  40e68f:	and    eax,0x806a386d
  40e694:	es mov esp,0xca5cf7a8
  40e69a:	pop    ebx
  40e69b:	pop    DWORD PTR [edi]
  40e69d:	scas   eax,DWORD PTR es:[edi]
  40e69e:	shl    DWORD PTR [ebx],0x6e
  40e6a1:	lock cmc 
  40e6a3:	or     eax,0xcab6d638
  40e6a8:	inc    eax
  40e6a9:	jb     0x40e66d
  40e6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ac:	fnstenv [ebx]
  40e6ae:	xor    cl,cl
  40e6b0:	call   FWORD PTR [esi-0x252e4248]
  40e6b6:	jecxz  0x40e701
  40e6b8:	retf   
  40e6b9:	xlat   BYTE PTR ds:[ebx]
  40e6ba:	pop    edx
  40e6bb:	inc    edi
  40e6bc:	xchg   BYTE PTR [ebx-0x69],bl
  40e6bf:	cmp    ecx,DWORD PTR [esi-0x34658ad]
  40e6c5:	jno    0x40e6f3
  40e6c7:	sub    bl,dl
  40e6c9:	cmp    DWORD PTR [ebp-0x2a],0x5d
  40e6cd:	push   ecx
  40e6ce:	mov    edi,0xf8a85fd0
  40e6d3:	pop    ebp
  40e6d4:	add    eax,0xb2e4b3bb
  40e6d9:	xlat   BYTE PTR ds:[ebx]
  40e6da:	sbb    DWORD PTR [ebx],ebp
  40e6dc:	or     eax,0x70b82a7f
  40e6e1:	xor    ah,BYTE PTR [edx]
  40e6e3:	dec    ebx
  40e6e4:	sbb    DWORD PTR [esi+0x6a],eax
  40e6e7:	faddp  st(0),st
  40e6e9:	iret   
  40e6ea:	push   esi
  40e6eb:	(bad)  
  40e6ec:	cmc    
  40e6ed:	mul    BYTE PTR [edx+0x25f9bdb9]
  40e6f3:	and    BYTE PTR [esi-0x80],0x65
  40e6f7:	adc    ch,BYTE PTR [edx+eiz*1+0x7d7a65db]
  40e6fe:	push   ebp
  40e6ff:	imul   esi,DWORD PTR [esi+0x28],0xec4fa0d0
  40e706:	xchg   ecx,eax
  40e707:	int3   
  40e708:	nop
  40e709:	dec    ebp
  40e70a:	(bad)  
  40e70b:	lock xchg DWORD PTR [esi],eax
  40e70e:	lock test BYTE PTR [ecx+eiz*4+0x72502cd9],cl
  40e716:	mov    edi,0xcd3da9e0
  40e71b:	stos   BYTE PTR es:[edi],al
  40e71c:	push   ecx
  40e71d:	into   
  40e71e:	lahf   
  40e71f:	sar    DWORD PTR [eax],cl
  40e721:	and    DWORD PTR [edi],ebp
  40e723:	push   0x4
  40e725:	leave  
  40e726:	cmp    ebp,DWORD PTR [ecx+ebp*1-0x4a142d0d]
  40e72d:	pop    edi
  40e72e:	cmp    DWORD PTR [ebp+0x5baf45b6],edx
  40e734:	sbb    al,0xa3
  40e736:	pop    ecx
  40e737:	imul   eax,ebx,0x77
  40e73a:	mov    bh,0xad
  40e73c:	call   0x59d56efb
  40e741:	ds pop es
  40e743:	xchg   edi,eax
  40e744:	push   0x87b90078
  40e749:	adc    ebx,DWORD PTR [edx]
  40e74b:	mov    edx,0x1d223d05
  40e750:	jns    0x40e76c
  40e752:	(bad)  
  40e753:	lahf   
  40e754:	sbb    DWORD PTR [esi+0x7],edi
  40e757:	in     eax,dx
  40e758:	and    DWORD PTR [edx+ebp*1],edx
  40e75b:	in     eax,dx
  40e75c:	stos   BYTE PTR es:[edi],al
  40e75d:	xchg   ebx,eax
  40e75e:	inc    ebx
  40e75f:	cdq    
  40e760:	jae    0x40e7e0
  40e762:	xchg   ebp,eax
  40e763:	out    0x2a,eax
  40e765:	dec    edi
  40e766:	ja     0x40e7d8
  40e768:	cmp    eax,0x74f773b0
  40e76d:	enter  0xed0d,0x85
  40e771:	cs push ss
  40e773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e774:	mov    esi,0xba2ae9fd
  40e779:	add    BYTE PTR [edi-0xd],cl
  40e77c:	dec    ebx
  40e77d:	adc    dl,0x95
  40e780:	sub    BYTE PTR ds:0x676efe08,dl
  40e786:	or     DWORD PTR ds:0xf79a1534,ebx
  40e78c:	lods   al,BYTE PTR ds:[esi]
  40e78d:	mov    ch,0x3c
  40e78f:	xchg   esi,eax
  40e790:	out    0xb,al
  40e792:	hlt    
  40e793:	leave  
  40e794:	(bad)  
  40e795:	(bad)  
  40e796:	adc    al,0xc3
  40e798:	aad    0xf7
  40e79a:	mov    edi,0x19f3f16c
  40e79f:	add    BYTE PTR [ebx+0x69],ch
  40e7a2:	mov    ds:0x7e9285ce,al
  40e7a7:	xchg   esp,eax
  40e7a8:	bound  edi,QWORD PTR [ebx-0x559be463]
  40e7ae:	(bad)  fs:[esi]
  40e7b1:	mov    esi,0x88e0196
  40e7b6:	push   ecx
  40e7b7:	fnsave [ecx-0x2a6a2024]
  40e7bd:	jmp    0x79466ad7
  40e7c2:	cwde   
  40e7c3:	mov    al,BYTE PTR [ecx]
  40e7c5:	call   0x1078288a
  40e7ca:	xor    eax,0x9c8b81b5
  40e7cf:	mov    bh,0xf8
  40e7d1:	mov    dl,ch
  40e7d3:	out    dx,eax
  40e7d4:	sbb    DWORD PTR [edi],esi
  40e7d6:	mov    ds:0x490ee137,eax
  40e7db:	jno    0x40e82f
  40e7dd:	call   0xa78b6e44
  40e7e2:	mov    esp,0x17e373ba
  40e7e7:	add    al,BYTE PTR [ebp+0x26d6fecc]
  40e7ed:	adc    al,bl
  40e7ef:	jecxz  0x40e7f3
  40e7f1:	popf   
  40e7f2:	imul   esi,DWORD PTR [esi],0x37a508fa
  40e7f8:	(bad)  
  40e7fb:	rcl    DWORD PTR [eax+0x74],1
  40e7fe:	lea    ebp,[esi+0x160580ee]
  40e804:	push   edi
  40e805:	push   0xe30be5d
  40e80a:	rcl    DWORD PTR [ebp-0x61],1
  40e80d:	sub    DWORD PTR [eax-0x47887f10],edx
  40e813:	push   es
  40e814:	push   cs
  40e815:	mov    eax,ds:0xca0f9032
  40e81a:	mov    ds:0xaa285fea,eax
  40e81f:	cmp    DWORD PTR [eax+0xb83e1ae],edi
  40e825:	fnstcw WORD PTR [ebx+0x3f]
  40e828:	inc    ebx
  40e829:	push   ds
  40e82a:	js     0x40e8a8
  40e82c:	pop    edx
  40e82d:	inc    esi
  40e82e:	in     eax,0x51
  40e830:	mov    ebx,DWORD PTR [edx-0x3]
  40e833:	aam    0xf1
  40e835:	jns    0x40e7c4
  40e837:	(bad)  
  40e838:	pop    ebp
  40e839:	out    0x82,al
  40e83b:	xchg   esi,eax
  40e83c:	adc    al,0xf7
  40e83e:	imul   ecx,DWORD PTR [ebx],0xffffffc7
  40e841:	pop    ds
  40e842:	test   ecx,edi
  40e844:	xor    dl,ch
  40e846:	mov    al,0x76
  40e848:	jmp    0x40e8b1
  40e84a:	hlt    
  40e84b:	pusha  
  40e84c:	adc    DWORD PTR [esi+edx*2+0x53b3a4f4],edi
  40e853:	inc    edi
  40e854:	ret    0xfb7a
  40e857:	loop   0x40e8ab
  40e859:	pop    edi
  40e85a:	xor    BYTE PTR [esi-0x4e],ch
  40e85d:	popa   
  40e85e:	xor    bh,BYTE PTR [esp+edi*8]
  40e861:	inc    ebx
  40e862:	fisub  WORD PTR [edx]
  40e864:	arpl   WORD PTR [edx-0x3bc84083],ax
  40e86a:	cli    
  40e86b:	repnz cmp eax,0xb8604f1d
  40e871:	jg     0x40e8cb
  40e873:	jae    0x40e83b
  40e875:	lods   al,BYTE PTR ds:[esi]
  40e876:	and    bl,cl
  40e878:	adc    esp,DWORD PTR [ebp-0x60489d0f]
  40e87e:	add    ebx,edx
  40e880:	pop    edx
  40e881:	sbb    eax,DWORD PTR [esi]
  40e883:	xor    eax,0x32733140
  40e888:	push   0xe3f8cb6c
  40e88d:	push   edx
  40e88e:	jg     0x40e8fc
  40e890:	add    dh,BYTE PTR [edx+0x38]
  40e893:	div    ebx
  40e895:	rcr    DWORD PTR [esi],cl
  40e897:	jne    0x40e8f9
  40e899:	pop    edi
  40e89a:	imul   esi,esp,0xcca2bdcf
  40e8a0:	add    BYTE PTR [eax],al
  40e8a2:	scas   eax,DWORD PTR es:[edi]
  40e8a3:	std    
  40e8a4:	mov    al,0x90
  40e8a6:	mov    al,ds:0x57dc2640
  40e8ab:	and    bl,0x14
  40e8ae:	mov    eax,0x6cd7d615
  40e8b3:	push   ebp
  40e8b4:	xor    eax,0xf90ac6b2
  40e8b9:	aam    0xd1
  40e8bb:	nop
  40e8bc:	push   0x70
  40e8be:	cwde   
  40e8bf:	stos   BYTE PTR es:[edi],al
  40e8c0:	out    dx,al
  40e8c1:	in     eax,0xd
  40e8c3:	mov    DWORD PTR [ebx],0xaee32117
  40e8c9:	xor    eax,0x6c5bd5c3
  40e8ce:	call   DWORD PTR [esi+0x6d7f07f0]
  40e8d4:	(bad)  
  40e8d5:	push   ecx
  40e8d6:	xchg   ecx,eax
  40e8d7:	jge    0x40e8c9
  40e8d9:	shl    BYTE PTR [edx],cl
  40e8db:	add    ch,dl
  40e8dd:	mov    ecx,0xb132a693
  40e8e2:	ss (bad) 
  40e8e4:	into   
  40e8e5:	mov    WORD PTR [edi-0x63b07e1e],gs
  40e8eb:	mov    ebp,0x19729f57
  40e8f0:	lock ja 0x40e8fa
  40e8f3:	out    dx,eax
  40e8f4:	mov    ecx,0x80b8fe46
  40e8f9:	lahf   
  40e8fa:	jb     0x40e903
  40e8fc:	mov    dl,0xe4
  40e8fe:	add    BYTE PTR [ecx+0x40f11443],bl
  40e904:	xor    eax,0xae4e08d0
  40e909:	dec    edi
  40e90a:	jns    0x40e931
  40e90c:	lods   eax,DWORD PTR ds:[esi]
  40e90d:	mov    ah,0xb3
  40e90f:	push   edi
  40e910:	lods   eax,DWORD PTR ds:[esi]
  40e911:	outs   dx,DWORD PTR ds:[esi]
  40e912:	in     eax,dx
  40e913:	mov    ah,0xf8
  40e915:	xchg   esp,eax
  40e916:	mov    eax,0x61261ddc
  40e91b:	mov    dh,0xce
  40e91d:	jge    0x40e900
  40e91f:	sbb    dl,BYTE PTR [esi+0x3e6d6126]
  40e925:	adc    al,0xd7
  40e927:	sub    eax,ebx
  40e929:	lods   al,BYTE PTR ds:[esi]
  40e92a:	ret    0x5f28
  40e92d:	les    eax,FWORD PTR [eax+0x4783cb3f]
  40e933:	sbb    ch,BYTE PTR [ebp+0x45]
  40e936:	and    BYTE PTR [ecx],al
  40e938:	test   BYTE PTR [edx+0x1e],bl
  40e93b:	fdivr  QWORD PTR [edi-0x50b6c61a]
  40e941:	push   ss
  40e942:	push   0xf64d4661
  40e947:	aas    
  40e948:	add    al,0x62
  40e94a:	aam    0xbb
  40e94c:	add    bh,BYTE PTR [edx-0x1356d19b]
  40e952:	ins    DWORD PTR es:[edi],dx
  40e953:	add    edi,edi
  40e955:	(bad)  
  40e956:	int3   
  40e957:	je     0x40e994
  40e959:	daa    
  40e95a:	jge    0x40e932
  40e95c:	popa   
  40e95d:	inc    esi
  40e95e:	std    
  40e95f:	sbb    DWORD PTR [ebx-0x739ef3e6],ebx
  40e965:	adc    eax,0x71a8cb9b
  40e96a:	std    
  40e96b:	sar    BYTE PTR [edx-0x727d9859],cl
  40e971:	clc    
  40e972:	(bad)  [esi]
  40e974:	add    eax,0x311c1202
  40e979:	pushf  
  40e97a:	js     0x40e9c2
  40e97c:	loopne 0x40e9d5
  40e97e:	pop    ebx
  40e97f:	popf   
  40e980:	fdiv   QWORD PTR [edi*8-0x5c9315e4]
  40e987:	xor    eax,0x90de0c75
  40e98c:	dec    eax
  40e98d:	or     al,BYTE PTR gs:[ebp-0x45ba9a46]
  40e994:	adc    DWORD PTR [edx+0x1d],eax
  40e997:	jno    0x40e924
  40e999:	js     0x40e9d7
  40e99b:	lea    esi,[edi+esi*8+0x78]
  40e99f:	mov    esi,DWORD PTR [esi+eax*1]
  40e9a2:	mov    DWORD PTR [ebp-0x8],esi
  40e9a5:	mov    esi,DWORD PTR [ebp+0x8]
  40e9a8:	xor    esi,ecx
  40e9aa:	add    esi,edx
  40e9ac:	mov    DWORD PTR [ebp-0x14],esi
  40e9af:	mov    esi,DWORD PTR [ebp+0x8]
  40e9b2:	mov    edi,DWORD PTR [ebp-0x8]
  40e9b5:	xor    esi,ecx
  40e9b7:	add    esi,edx
  40e9b9:	pop    ebx
  40e9ba:	cmp    edi,esi
  40e9bc:	jne    0x40e9da
  40e9c2:	mov    eax,DWORD PTR [ebp+0xc]
  40e9c5:	xor    eax,ecx
  40e9c7:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9ca:	add    eax,edx
  40e9cc:	imul   eax,ecx
  40e9cf:	mov    DWORD PTR [ebp-0x8],eax
  40e9d2:	push   DWORD PTR [ebp+0x18]
  40e9d5:	jmp    0x40ea2e
  40e9da:	mov    ecx,DWORD PTR [ebp-0x8]
  40e9dd:	add    ecx,eax
  40e9df:	mov    DWORD PTR [ebp-0x14],ecx
  40e9e2:	mov    ecx,DWORD PTR [ebp-0x14]
  40e9e5:	mov    ecx,DWORD PTR [ecx+0xc]
  40e9e8:	movsx  cx,BYTE PTR [ecx+eax*1]
  40e9ed:	mov    edx,0x3b51
  40e9f2:	sub    cx,dx
  40e9f5:	mov    edx,0x8a8d
  40e9fa:	xor    cx,dx
  40e9fd:	mov    edx,0x4e77
  40ea02:	cmp    cx,dx
  40ea05:	jne    0x40e9d2
  40ea0b:	mov    ecx,DWORD PTR ds:0x42e2b7
  40ea11:	mov    ecx,DWORD PTR [ecx+0x198]
  40ea17:	mov    DWORD PTR [ecx],eax
  40ea19:	jmp    0x40ea3f
  40ea1e:	mov    ecx,DWORD PTR [ebp+0x18]
  40ea21:	cmp    ecx,0xf89c8584
  40ea27:	jne    0x40ea3f
  40ea2d:	push   eax
  40ea2e:	push   DWORD PTR [ebp+0x14]
  40ea31:	push   DWORD PTR [ebp+0x10]
  40ea34:	push   DWORD PTR [ebp+0xc]
  40ea37:	push   DWORD PTR [ebp+0x8]
  40ea3a:	call   0x405799
  40ea3f:	pop    edi
  40ea40:	pop    esi
  40ea41:	leave  
  40ea42:	ret    0x14
  40ea45:	push   ebp
  40ea46:	mov    ebp,esp
  40ea48:	sub    esp,0xc
  40ea4b:	and    DWORD PTR ds:0x42d00c,0x0
  40ea55:	jmp    0x40ea67
  40ea5a:	mov    edx,DWORD PTR ds:0x42d00c
  40ea60:	inc    edx
  40ea61:	mov    DWORD PTR ds:0x42d00c,edx
  40ea67:	cmp    DWORD PTR ds:0x42d00c,0x16
  40ea6e:	jae    0x40eb33
  40ea74:	cmp    DWORD PTR ds:0x42d00c,0xd
  40ea7b:	jne    0x40eac1
  40ea81:	push   0x42e075
  40ea86:	push   0x6212
  40ea8b:	push   DWORD PTR [ebp-0x28]
  40ea8e:	push   0x739a
  40ea93:	push   DWORD PTR [ebp-0x20]
  40ea96:	push   0x3288
  40ea9b:	push   DWORD PTR [ebp-0x28]
  40ea9e:	push   DWORD PTR [ebp-0x1c]
  40eaa1:	push   0x2781
  40eaa6:	push   0x445b
  40eaab:	push   0x2755
  40eab0:	push   DWORD PTR [ebp-0x24]
  40eab3:	push   DWORD PTR [ebp-0x1c]
  40eab6:	push   0x361a
  40eabb:	call   DWORD PTR ds:0x42e8bb
  40eac1:	cmp    DWORD PTR ds:0x42d00c,0xc
  40eac8:	jne    0x40eadb
  40eace:	mov    edx,DWORD PTR ds:0x42d00c
  40ead4:	inc    edx
  40ead5:	mov    DWORD PTR ds:0x42d00c,edx
  40eadb:	jmp    0x40ea5a
  40eae0:	and    DWORD PTR ds:0x42c008,0x0
  40eaea:	jmp    0x40eafe
  40eaef:	xor    edx,edx
  40eaf1:	or     edx,DWORD PTR ds:0x42c008
  40eaf7:	inc    edx
  40eaf8:	mov    DWORD PTR ds:0x42c008,edx
  40eafe:	cmp    DWORD PTR ds:0x42c008,0x14
  40eb05:	jae    0x40eb33
  40eb0b:	cmp    DWORD PTR ds:0x42c008,0x18
  40eb12:	jne    0x40eb2e
  40eb18:	push   DWORD PTR [ebp-0x24]
  40eb1b:	push   DWORD PTR [ebp-0x18]
  40eb1e:	push   0x8994
  40eb23:	push   0x6271
  40eb28:	call   DWORD PTR ds:0x42e8e7
  40eb2e:	jmp    0x40eaef
  40eb33:	push   esi
  40eb34:	mov    esi,0xf89c8585
  40eb39:	xor    DWORD PTR ds:0x429000,ebx
  40eb3f:	mov    DWORD PTR [ebp-0x8],esi
  40eb42:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40eb49:	mov    edx,DWORD PTR ds:0x41cd75
  40eb4f:	mov    ecx,DWORD PTR ds:0x41ce0c
  40eb55:	sub    ecx,edx
  40eb57:	add    edx,DWORD PTR [edx+ecx*1]
  40eb5a:	push   edi
  40eb5b:	mov    eax,eax
  40eb5d:	mov    eax,DWORD PTR [ebp-0x4]
  40eb60:	mov    edi,DWORD PTR [ebp-0x8]
  40eb63:	mov    ecx,0x751089b
  40eb68:	xor    eax,ecx
  40eb6a:	xor    edi,ecx
  40eb6c:	mov    edx,0x3272e2
  40eb71:	add    edi,edx
  40eb73:	add    eax,edx
  40eb75:	imul   eax,edi
  40eb78:	mov    edi,DWORD PTR [ebp+0xc]
  40eb7b:	cmp    edi,eax
  40eb7d:	je     0x40ebd2
  40eb83:	mov    DWORD PTR [ebp-0xc],esi
  40eb86:	mov    eax,DWORD PTR [ebp-0xc]
  40eb89:	mov    esi,DWORD PTR [ebp+0xc]
  40eb8c:	xor    eax,ecx
  40eb8e:	lea    eax,[eax*8+0x1939788]
  40eb95:	mov    eax,DWORD PTR [esi+eax*1]
  40eb98:	mov    DWORD PTR [ebp+0xc],eax
  40eb9b:	mov    eax,DWORD PTR [ebp-0x4]
  40eb9e:	mov    esi,DWORD PTR [ebp-0x8]
  40eba1:	xor    eax,ecx
  40eba3:	xor    esi,ecx
  40eba5:	add    esi,edx
  40eba7:	add    eax,edx
  40eba9:	imul   eax,esi
  40ebac:	mov    esi,DWORD PTR [ebp+0xc]
  40ebaf:	cmp    esi,eax
  40ebb1:	je     0x40ebd2
  40ebb7:	mov    eax,DWORD PTR [ebp-0x4]
  40ebba:	xor    eax,ecx
  40ebbc:	mov    ecx,DWORD PTR [ebp+0xc]
  40ebbf:	add    eax,edx
  40ebc1:	imul   eax,ecx
  40ebc4:	add    eax,DWORD PTR [ebp+0x8]
  40ebc7:	mov    DWORD PTR [ebp+0xc],eax
  40ebca:	mov    eax,DWORD PTR [ebp+0xc]
  40ebcd:	jmp    0x40ebe3
  40ebd2:	mov    eax,DWORD PTR [ebp-0x4]
  40ebd5:	mov    esi,DWORD PTR [ebp-0x8]
  40ebd8:	xor    esi,ecx
  40ebda:	xor    eax,ecx
  40ebdc:	add    esi,edx
  40ebde:	add    eax,edx
  40ebe0:	imul   eax,esi
  40ebe3:	pop    edi
  40ebe4:	pop    esi
  40ebe5:	leave  
  40ebe6:	ret    0x8
  40ebe9:	push   ebp
  40ebea:	mov    ebp,esp
  40ebec:	push   ecx
  40ebed:	and    DWORD PTR ds:0x42a00c,0x0
  40ebf7:	xor    ecx,ecx
  40ebf9:	or     ecx,DWORD PTR ds:0x42a00c
  40ebff:	inc    ecx
  40ec00:	mov    DWORD PTR ds:0x42a00c,ecx
  40ec06:	cmp    DWORD PTR ds:0x42a00c,0x21
  40ec0d:	jne    0x40ec29
  40ec13:	push   0x29ed
  40ec18:	push   DWORD PTR [ebp-0x24]
  40ec1b:	push   0x42e0c2
  40ec20:	push   DWORD PTR [ebp-0x28]
  40ec23:	call   DWORD PTR ds:0x42e8eb
  40ec29:	cmp    DWORD PTR ds:0x42a00c,0x1f
  40ec30:	jb     0x40ebf7
  40ec36:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40ec3d:	mov    eax,DWORD PTR [ebp-0x4]
  40ec40:	mov    edx,DWORD PTR [ebp+0x10]
  40ec43:	and    DWORD PTR ds:0x42b004,0x0
  40ec4d:	jmp    0x40ec5f
  40ec52:	mov    ecx,DWORD PTR ds:0x42b004
  40ec58:	inc    ecx
  40ec59:	mov    DWORD PTR ds:0x42b004,ecx
  40ec5f:	cmp    DWORD PTR ds:0x42b004,0x1d
  40ec66:	jae    0x40ec84
  40ec6c:	cmp    DWORD PTR ds:0x42b004,0x29
  40ec73:	jne    0x40ec7f
  40ec79:	call   DWORD PTR ds:0x42e8ef
  40ec7f:	jmp    0x40ec52
  40ec84:	mov    ecx,0x751089b
  40ec89:	xor    eax,ecx
  40ec8b:	add    eax,0x3272e2
  40ec90:	mov    DWORD PTR [edx],eax
  40ec92:	mov    eax,DWORD PTR [ebp+0xc]
  40ec95:	xor    eax,ecx
  40ec97:	push   esi
  40ec98:	mov    esi,DWORD PTR [ebp+0x10]
  40ec9b:	mov    edx,0x3272e2
  40eca0:	add    eax,edx
  40eca2:	mov    DWORD PTR [esi+0x4],eax
  40eca5:	mov    eax,DWORD PTR [ebp+0x14]
  40eca8:	mov    esi,DWORD PTR [ebp+0x10]
  40ecab:	mov    DWORD PTR [esi+0x8],eax
  40ecae:	mov    eax,DWORD PTR [ebp+0x18]
  40ecb1:	mov    esi,DWORD PTR [ebp+0x10]
  40ecb4:	mov    DWORD PTR [esi+0xc],eax
  40ecb7:	mov    eax,DWORD PTR [ebp+0x1c]
  40ecba:	mov    esi,DWORD PTR [ebp+0x10]
  40ecbd:	mov    DWORD PTR [esi+0x10],eax
  40ecc0:	mov    eax,DWORD PTR [ebp+0x8]
  40ecc3:	xor    eax,ecx
  40ecc5:	add    eax,edx
  40ecc7:	pop    esi
  40ecc8:	leave  
  40ecc9:	ret    0x18
  40eccc:	push   ebp
  40eccd:	mov    ebp,esp
  40eccf:	sub    esp,0x9c
  40ecd5:	adc    DWORD PTR ds:0x42c004,ecx
  40ecdb:	jmp    0x411024
  40ece0:	xor    edx,edx
  40ece2:	jg     0x40ecc5
  40ece4:	(bad)  
  40ece6:	mov    bl,0xb2
  40ece8:	pop    ebx
  40ece9:	ja     0x40ecd9
  40eceb:	inc    eax
  40ecec:	lock mov dh,0x63
  40ecef:	ret    
  40ecf0:	jl     0x40ecbe
  40ecf2:	jl     0x40ed70
  40ecf4:	inc    eax
  40ecf5:	pop    edi
  40ecf6:	jl     0x40ed74
  40ecf8:	push   0xf
  40ecfa:	adc    al,0x36
  40ecfc:	and    eax,0x7c6bcdec
  40ed01:	push   ss
  40ed02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed03:	and    al,0x1b
  40ed05:	push   esi
  40ed06:	mov    ebx,eax
  40ed08:	inc    esp
  40ed09:	xor    edx,ecx
  40ed0b:	xor    ebp,DWORD PTR cs:0x113ef0dc
  40ed12:	sub    al,0x31
  40ed14:	sbb    al,0x86
  40ed16:	pop    es
  40ed17:	mov    dh,0x66
  40ed19:	arpl   bp,sp
  40ed1b:	pop    es
  40ed1c:	(bad)  
  40ed1d:	fmul   QWORD PTR [edi-0x73]
  40ed20:	inc    ecx
  40ed21:	mov    ds:0x80f12a9f,eax
  40ed26:	mov    cl,0xba
  40ed28:	and    BYTE PTR ds:0xd4febf7,0x8c
  40ed2f:	(bad)  
  40ed30:	xchg   edi,eax
  40ed31:	arpl   WORD PTR [ecx+ecx*4],bx
  40ed34:	int3   
  40ed35:	pop    eax
  40ed36:	or     eax,0xc403fd33
  40ed3b:	sbb    BYTE PTR [ebp+eiz*4+0x73],ch
  40ed3f:	mov    ds:0x76f67162,al
  40ed44:	add    eax,0x645e1f5d
  40ed49:	js     0x40edc9
  40ed4b:	fsub   QWORD PTR [ecx+edx*4+0x1e65ba03]
  40ed52:	aas    
  40ed53:	aas    
  40ed54:	push   esi
  40ed55:	push   ebx
  40ed56:	cld    
  40ed57:	push   ebp
  40ed58:	cwde   
  40ed59:	in     al,dx
  40ed5a:	push   eax
  40ed5b:	dec    esi
  40ed5c:	fdiv   DWORD PTR [edx+0x55cdde75]
  40ed62:	lods   al,BYTE PTR gs:[esi]
  40ed64:	test   ebp,ecx
  40ed66:	dec    ecx
  40ed67:	daa    
  40ed68:	addr16 jmp 0x139b:0x6ede051
  40ed70:	cli    
  40ed71:	adc    BYTE PTR [esi-0x3a],dh
  40ed74:	pop    DWORD PTR [esi+0x6a]
  40ed77:	aaa    
  40ed78:	or     ebx,DWORD PTR [edx+ecx*8]
  40ed7b:	push   esp
  40ed7c:	sbb    esp,DWORD PTR [ecx+eax*2]
  40ed7f:	mov    esi,ebx
  40ed81:	or     DWORD PTR [edi],edi
  40ed83:	jecxz  0x40ed0a
  40ed85:	aam    0x9b
  40ed87:	les    ecx,FWORD PTR [ebx+0x5b0e25cc]
  40ed8d:	push   ecx
  40ed8e:	push   0x9
  40ed90:	sbb    al,0x39
  40ed92:	iret   
  40ed93:	imul   BYTE PTR [ebx-0x14]
  40ed96:	mov    al,ds:0xdc944c0f
  40ed9b:	and    ebp,DWORD PTR [edi+0x72]
  40ed9e:	sbb    al,bh
  40eda0:	cmp    eax,0x66e1007c
  40eda5:	jle    0x40ee23
  40eda7:	fcmovb st,st(6)
  40eda9:	sub    al,0x53
  40edab:	and    al,0x6a
  40edad:	or     DWORD PTR [ecx+0x14b8bfdc],edx
  40edb3:	nop
  40edb4:	fsubr  DWORD PTR [esi+0x39]
  40edb7:	or     ecx,DWORD PTR [eax-0x42c2ecd9]
  40edbd:	or     ch,dl
  40edbf:	jmp    0xe6e29832
  40edc4:	mov    ebx,0x6a854f10
  40edc9:	adc    esi,edi
  40edcb:	test   eax,0x872d3e4e
  40edd0:	add    al,0xf5
  40edd2:	inc    esp
  40edd3:	mov    eax,ds:0x70927234
  40edd8:	pop    ecx
  40edd9:	pushf  
  40edda:	div    BYTE PTR [edi+ebp*2]
  40eddd:	inc    edx
  40edde:	jge    0x40ee50
  40ede0:	push   es
  40ede1:	sar    ecx,1
  40ede3:	repz push ebp
  40ede5:	add    BYTE PTR [eax+0x2b078bf3],bl
  40edeb:	adc    bl,BYTE PTR [ebp-0x18]
  40edee:	mov    eax,ds:0xd5488148
  40edf3:	inc    ecx
  40edf4:	popf   
  40edf5:	shl    esi,cl
  40edf7:	(bad)  
  40edf8:	xchg   edx,eax
  40edf9:	out    0x3a,al
  40edfb:	ins    DWORD PTR es:[edi],dx
  40edfc:	popf   
  40edfd:	mov    ebp,0x7f0692d1
  40ee02:	shl    BYTE PTR [ebp-0x3c],0xe6
  40ee06:	shr    DWORD PTR [ebp-0x31],cl
  40ee09:	adc    ebx,eax
  40ee0b:	lea    ebx,[edi+0x14]
  40ee0e:	aaa    
  40ee0f:	ins    DWORD PTR es:[edi],dx
  40ee10:	mov    edi,0x5906c7a
  40ee15:	pop    ebx
  40ee16:	add    al,0xbf
  40ee18:	pushf  
  40ee19:	sub    ebx,DWORD PTR [esi+0x26ebaa86]
  40ee1f:	pop    esp
  40ee20:	add    eax,DWORD PTR [ecx-0x57]
  40ee23:	fld    TBYTE PTR [esi]
  40ee25:	lods   eax,DWORD PTR ds:[esi]
  40ee26:	pop    ecx
  40ee27:	pop    edx
  40ee28:	imul   esi,DWORD PTR [esi],0x2
  40ee2b:	mov    dl,0x4d
  40ee2d:	dec    eax
  40ee2e:	pop    ss
  40ee2f:	xchg   BYTE PTR [edi],al
  40ee31:	sub    al,0xfd
  40ee33:	ret    0x3ef3
  40ee36:	test   BYTE PTR [ecx],al
  40ee38:	pop    es
  40ee39:	jecxz  0x40ee43
  40ee3b:	retf   
  40ee3c:	mov    esp,0xfd3710d3
  40ee41:	xchg   edx,eax
  40ee42:	nop
  40ee43:	mov    eax,0xabd9f894
  40ee48:	or     al,0x66
  40ee4a:	(bad)  
  40ee4b:	pop    ds
  40ee4c:	sbb    bl,cl
  40ee4e:	(bad)  
  40ee4f:	push   ebx
  40ee50:	pop    esi
  40ee51:	imul   esp,DWORD PTR [edi+0x47],0x278c58a0
  40ee58:	push   ecx
  40ee59:	jp     0x40ee4a
  40ee5b:	ror    DWORD PTR [ebp+esi*4+0x65],0xa1
  40ee60:	jo     0x40eec0
  40ee62:	dec    ecx
  40ee63:	push   edi
  40ee64:	mov    bh,0x45
  40ee66:	mov    di,0xd5f3
  40ee6a:	pop    ecx
  40ee6b:	fwait
  40ee6c:	mov    bh,0xe4
  40ee6e:	loope  0x40ee5b
  40ee70:	in     ax,dx
  40ee72:	push   ds
  40ee73:	sahf   
  40ee74:	(bad)  
  40ee75:	out    dx,al
  40ee76:	jl     0x40ee66
  40ee78:	int3   
  40ee79:	inc    esp
  40ee7a:	adc    BYTE PTR [edx-0x47],ch
  40ee7d:	pop    ebp
  40ee7e:	retf   
  40ee7f:	fild   DWORD PTR [edx+edi*4]
  40ee82:	xor    DWORD PTR [edi+0x191c9776],eax
  40ee88:	mov    eax,ds:0xed342023
  40ee8d:	cmp    al,BYTE PTR [ebx+ebx*1+0x7d51c1ab]
  40ee94:	push   edx
  40ee95:	mov    esi,0x5f0ea036
  40ee9a:	pop    ebp
  40ee9b:	scas   eax,DWORD PTR es:[edi]
  40ee9c:	lock add eax,edx
  40ee9f:	xor    al,0x46
  40eea1:	sbb    al,0x5b
  40eea3:	add    BYTE PTR [edx],al
  40eea5:	rcr    bh,0x5a
  40eea8:	bnd ret 0xf9a4
  40eeac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eead:	arpl   di,dx
  40eeaf:	mov    dh,0x39
  40eeb1:	jle    0x40ee8f
  40eeb3:	aas    
  40eeb4:	ins    BYTE PTR es:[edi],dx
  40eeb5:	xchg   esi,eax
  40eeb6:	sub    eax,DWORD PTR [ebx-0x10]
  40eeb9:	xor    eax,DWORD PTR [esi]
  40eebb:	push   es
  40eebc:	ret    0x155c
  40eebf:	or     bh,BYTE PTR [eax]
  40eec1:	and    DWORD PTR [edi+0x34],eax
  40eec4:	mov    gs,WORD PTR fs:[ebp-0x1ffafc96]
  40eecb:	(bad)  
  40eecc:	xor    BYTE PTR [ebx-0x2a8b31b8],ch
  40eed2:	fwait
  40eed3:	int    0x9a
  40eed5:	mov    bl,0xb3
  40eed7:	sbb    eax,0x3748a824
  40eedc:	arpl   WORD PTR [ecx-0x4d],bp
  40eedf:	fld    DWORD PTR [ecx-0x226011f3]
  40eee5:	and    edx,esp
  40eee7:	or     esp,edx
  40eee9:	or     eax,0xc2e426f5
  40eeee:	cmp    al,0xee
  40eef0:	inc    esp
  40eef1:	dec    edi
  40eef2:	add    BYTE PTR [eax-0x5e],cl
  40eef5:	loopne 0x40ef47
  40eef7:	mov    cl,0x1d
  40eef9:	cwde   
  40eefa:	sahf   
  40eefb:	mov    esp,0xed87dc19
  40ef00:	ss cld 
  40ef02:	retf   0x115c
  40ef05:	mov    cl,0x4d
  40ef07:	jo     0x40ef1a
  40ef09:	fbld   TBYTE PTR [edx]
  40ef0b:	mov    eax,0x2360bbad
  40ef10:	or     eax,0x524a1232
  40ef15:	xor    al,0xfc
  40ef17:	jno    0x40ef98
  40ef19:	iret   
  40ef1a:	ffree  st(5)
  40ef1c:	lds    esi,FWORD PTR [ebp+0x74]
  40ef1f:	into   
  40ef20:	pop    ss
  40ef21:	mov    cl,0xfe
  40ef23:	adc    DWORD PTR [esi],edx
  40ef25:	xlat   BYTE PTR ds:[ebx]
  40ef26:	sahf   
  40ef27:	and    eax,DWORD PTR [edx+ebp*8]
  40ef2a:	lahf   
  40ef2b:	and    DWORD PTR [edx+0x23],0xe9f18175
  40ef32:	dec    ecx
  40ef33:	(bad)  
  40ef34:	cmp    eax,DWORD PTR [ecx+0x4a]
  40ef37:	mov    bh,0x82
  40ef39:	imul   ebx,DWORD PTR [bx],0xf1a4427d
  40ef40:	lea    ecx,[edx+0x6b]
  40ef43:	jmp    0x40ef3f
  40ef45:	rcl    DWORD PTR [ebx+eax*2+0x5],1
  40ef49:	(bad)  
  40ef4a:	fild   WORD PTR [edx+0x1]
  40ef4d:	pop    ds
  40ef4e:	ds or  al,0x72
  40ef51:	out    0xd9,al
  40ef53:	sub    cl,cl
  40ef55:	xchg   esi,eax
  40ef56:	mov    bl,0x1c
  40ef58:	call   0xdf6:0x4ef33db2
  40ef5f:	ret    0x60b1
  40ef62:	pop    ebx
  40ef63:	adc    esp,DWORD PTR [edx-0x55]
  40ef66:	pop    edi
  40ef67:	cmp    ebp,0xffffffc6
  40ef6a:	leave  
  40ef6b:	mov    bl,0xba
  40ef6d:	cdq    
  40ef6e:	fucomip st,st(2)
  40ef70:	cmp    esp,DWORD PTR [edx+0x30]
  40ef73:	mov    bh,BYTE PTR [ebx]
  40ef75:	jmp    0x40efa9
  40ef77:	xor    al,0x69
  40ef79:	dec    esp
  40ef7a:	adc    esi,DWORD PTR [eax+0x78]
  40ef7d:	sub    ebx,DWORD PTR [edx]
  40ef7f:	pop    ebx
  40ef80:	out    dx,al
  40ef81:	sbb    DWORD PTR gs:[eax],edx
  40ef84:	fs (bad) 
  40ef86:	aam    0xd8
  40ef88:	sub    edx,ecx
  40ef8a:	lahf   
  40ef8b:	sbb    BYTE PTR [eax],ch
  40ef8d:	outs   dx,DWORD PTR ds:[esi]
  40ef8e:	loopne 0x40efd3
  40ef90:	pop    edi
  40ef91:	loopne 0x40ef4b
  40ef93:	mov    WORD PTR [edi],?
  40ef95:	mul    BYTE PTR [ebx+ecx*8-0x48eb2b23]
  40ef9c:	mov    ah,BYTE PTR [eax]
  40ef9e:	dec    esp
  40ef9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa0:	ret    0xdef0
  40efa3:	scas   eax,DWORD PTR es:[edi]
  40efa4:	add    BYTE PTR [ebp+0x77],dh
  40efa7:	(bad)  
  40efa8:	scas   eax,DWORD PTR es:[edi]
  40efa9:	sbb    al,0x8b
  40efab:	psraw  mm0,mm2
  40efae:	out    dx,eax
  40efaf:	ss ss mov dh,0x76
  40efb3:	jae    0x40f02b
  40efb5:	jmp    FWORD PTR [esi-0x1e0d661d]
  40efbb:	jle    0x40f02c
  40efbd:	cli    
  40efbe:	pop    ebx
  40efbf:	sub    al,0x50
  40efc1:	or     ebx,DWORD PTR [esi+0x21]
  40efc4:	ds cwde 
  40efc6:	add    edx,DWORD PTR ds:0xeb09c912
  40efcc:	jg     0x40ef9f
  40efce:	dec    ebp
  40efcf:	in     eax,dx
  40efd0:	and    esi,esi
  40efd2:	jmp    0x7f0bd123
  40efd7:	inc    ecx
  40efd8:	sbb    DWORD PTR ds:0x952a3018,esp
  40efde:	or     ah,BYTE PTR cs:[edi]
  40efe1:	xor    ah,BYTE PTR [eax]
  40efe3:	dec    ebx
  40efe4:	pop    es
  40efe5:	inc    ebx
  40efe6:	sub    al,0x8a
  40efe8:	push   edi
  40efe9:	jo     0x40efd0
  40efeb:	hlt    
  40efec:	pop    ebp
  40efed:	cmp    eax,0xae529ad1
  40eff2:	and    al,0xa2
  40eff4:	pushf  
  40eff5:	cmp    DWORD PTR [ebx-0x28645ab2],eax
  40effb:	daa    
  40effc:	push   cs
  40effd:	les    ecx,FWORD PTR [edi]
  40efff:	imul   ecx,DWORD PTR [edi+ecx*4-0x6c],0xcc55f981
  40f007:	sbb    esi,DWORD PTR [eax-0x16]
  40f00a:	push   edx
  40f00b:	and    eax,0xebddd821
  40f010:	push   esi
  40f011:	(bad)  
  40f013:	js     0x40f081
  40f015:	enter  0x4596,0xfe
  40f019:	jmp    0x3502:0x137f2a93
  40f020:	xor    ah,cl
  40f022:	pop    edx
  40f023:	(bad)
  40f027:	xchg   ebx,eax
  40f028:	fnstenv [eax]
  40f02a:	enter  0xe97d,0xa6
  40f02e:	push   edi
  40f02f:	cld    
  40f030:	xchg   edx,eax
  40f031:	lods   eax,DWORD PTR ds:[esi]
  40f032:	in     eax,dx
  40f033:	xor    dh,BYTE PTR cs:[ecx]
  40f036:	sahf   
  40f037:	xor    bh,al
  40f039:	gs loop 0x40f017
  40f03c:	xchg   BYTE PTR [esi+ecx*4-0x35],cl
  40f040:	or     al,0x9d
  40f042:	sbb    eax,0x403fa415
  40f047:	std    
  40f048:	sub    DWORD PTR [esi],0x5f
  40f04b:	push   es
  40f04c:	mov    DWORD PTR [ebp-0x54],ebx
  40f04f:	test   BYTE PTR [esi-0x5b6f856a],0xf2
  40f056:	pop    ss
  40f057:	je     0x40f001
  40f059:	call   0x83d:0xaf816abe
  40f060:	add    al,0x1e
  40f062:	sbb    ecx,DWORD PTR [esi+0x2dc107b9]
  40f068:	jbe    0x40f0b0
  40f06a:	int3   
  40f06b:	test   DWORD PTR [esi],0x33962ad9
  40f071:	sub    eax,0x65ea17c4
  40f076:	cmp    edx,esi
  40f078:	rcl    BYTE PTR [edi+0x50],1
  40f07b:	inc    eax
  40f07c:	xor    bl,BYTE PTR [edi]
  40f07e:	push   ss
  40f07f:	shl    BYTE PTR [esi-0x721b2bbb],cl
  40f085:	mov    al,0x5
  40f087:	fld    st(6)
  40f089:	lahf   
  40f08a:	es cmp ch,dh
  40f08d:	jne    0x40f0d0
  40f08f:	adc    DWORD PTR [esi],0xffffff94
  40f092:	cmp    DWORD PTR [ebp+0x30],edi
  40f095:	int3   
  40f096:	enter  0x76a4,0x84
  40f09a:	loopne 0x40f060
  40f09c:	xor    al,0x7f
  40f09e:	mov    bl,BYTE PTR [ecx-0x55]
  40f0a1:	mov    esp,DWORD PTR [ecx]
  40f0a3:	jns    0x40f082
  40f0a5:	mov    esi,0x9e1dff5c
  40f0aa:	add    eax,0xccdc41c
  40f0af:	pushf  
  40f0b0:	repz or bh,bh
  40f0b3:	inc    eax
  40f0b4:	dec    edx
  40f0b5:	xor    DWORD PTR [ebx-0x7e99aae9],esp
  40f0bb:	pop    es
  40f0bc:	dec    edi
  40f0bd:	retf   0x89a2
  40f0c0:	lock out dx,eax
  40f0c2:	js     0x40f090
  40f0c4:	into   
  40f0c5:	inc    esi
  40f0c6:	(bad)  
  40f0c7:	push   ecx
  40f0c8:	aad    0x84
  40f0ca:	pop    ss
  40f0cb:	or     al,BYTE PTR [edx+0x7dc119df]
  40f0d1:	dec    edx
  40f0d2:	mov    ecx,0x28bcc647
  40f0d7:	sub    al,ah
  40f0d9:	aaa    
  40f0da:	fwait
  40f0db:	mov    edi,0x5db7147d
  40f0e0:	push   esi
  40f0e1:	adc    DWORD PTR [ebx],edi
  40f0e3:	sbb    ebx,DWORD PTR [esi-0x6fc8f26]
  40f0e9:	or     ah,al
  40f0eb:	out    dx,al
  40f0ec:	hlt    
  40f0ed:	fsubr  QWORD PTR [edx+0x36e27b4a]
  40f0f3:	sbb    al,0xa
  40f0f5:	dec    esi
  40f0f6:	out    dx,al
  40f0f7:	or     al,0xa6
  40f0f9:	out    dx,al
  40f0fa:	popf   
  40f0fb:	lock cmp al,0x78
  40f0fe:	retf   0xd169
  40f101:	mov    edi,0xa79cf78f
  40f106:	xchg   edi,eax
  40f107:	je     0x40f109
  40f109:	lock lods al,BYTE PTR ds:[esi]
  40f10b:	pop    es
  40f10c:	push   ds
  40f10d:	daa    
  40f10e:	ins    DWORD PTR es:[edi],dx
  40f10f:	imul   edx,edi,0xffffffd7
  40f112:	lahf   
  40f113:	or     al,0x74
  40f115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f116:	not    DWORD PTR [esi+0x3f7b8f26]
  40f11c:	dec    esp
  40f11d:	idiv   BYTE PTR ds:0x2f420c44
  40f123:	push   ss
  40f124:	adc    edx,DWORD PTR [eax+0xc4a03d4]
  40f12a:	push   ebp
  40f12b:	loope  0x40f183
  40f12d:	out    dx,eax
  40f12e:	loop   0x40f184
  40f130:	sub    ecx,DWORD PTR [esi]
  40f132:	sbb    ebx,DWORD PTR [ebx+0x477d42a1]
  40f138:	add    DWORD PTR [ebx],esi
  40f13a:	cld    
  40f13b:	popa   
  40f13c:	stos   BYTE PTR es:[edi],al
  40f13d:	mov    edx,0x34fc5e29
  40f142:	into   
  40f143:	fldcw  WORD PTR [edi]
  40f145:	in     al,0x50
  40f147:	popf   
  40f148:	cmp    dl,BYTE PTR [esp+esi*8+0x5bf0317a]
  40f14f:	adc    bl,BYTE PTR [edx-0x2e835c5f]
  40f155:	pop    ebx
  40f156:	call   0x2fc77d2b
  40f15b:	test   al,0xc
  40f15d:	or     al,0x5
  40f15f:	aas    
  40f160:	hlt    
  40f161:	mov    eax,?
  40f163:	fs pop ss
  40f165:	add    esi,DWORD PTR [ebx+0x668a9c5c]
  40f16b:	push   cs
  40f16c:	xchg   ebp,eax
  40f16d:	mov    al,ds:0xbcf6f75e
  40f172:	inc    esp
  40f173:	(bad)  
  40f174:	pushf  
  40f175:	fadd   st,st(1)
  40f177:	adc    BYTE PTR [eax],dh
  40f179:	mov    al,ds:0x10efd5dd
  40f17e:	push   ebx
  40f17f:	sub    BYTE PTR [esi+0x158c300a],al
  40f185:	sbb    eax,0x7c09cced
  40f18a:	mov    dl,0xa2
  40f18c:	mov    WORD PTR [ebx],?
  40f18e:	or     cl,BYTE PTR [esi]
  40f190:	mov    edi,esi
  40f192:	xor    DWORD PTR es:[ecx],0x2a05d738
  40f199:	test   BYTE PTR [eax+0x1b],dl
  40f19c:	lods   eax,DWORD PTR ds:[esi]
  40f19d:	dec    eax
  40f19e:	mov    esp,0x65631bc0
  40f1a3:	push   edx
  40f1a4:	mov    dh,0xdc
  40f1a6:	sub    al,0x84
  40f1a8:	out    dx,al
  40f1a9:	call   0x8433:0x2c0e7302
  40f1b0:	sbb    esp,DWORD PTR gs:[esi]
  40f1b3:	pop    ds
  40f1b4:	mov    dh,0x6c
  40f1b6:	loope  0x40f21e
  40f1b8:	inc    edi
  40f1b9:	cs mov edi,ss
  40f1bc:	mov    ecx,0x763bb80
  40f1c1:	jecxz  0x40f1fc
  40f1c3:	fstp   st(1)
  40f1c5:	mov    fs,WORD PTR ds:0xc0e54c29
  40f1cb:	(bad)  
  40f1cc:	in     eax,dx
  40f1cd:	pushf  
  40f1ce:	popf   
  40f1cf:	scas   al,BYTE PTR es:[edi]
  40f1d0:	in     al,0x57
  40f1d2:	retf   0xa77e
  40f1d5:	inc    ecx
  40f1d6:	jge    0x40f1a9
  40f1d8:	cmp    DWORD PTR [edx],ecx
  40f1da:	ins    DWORD PTR es:[edi],dx
  40f1db:	pop    esi
  40f1dc:	xchg   BYTE PTR [edx+esi*4-0x30],bh
  40f1e0:	xchg   ebx,eax
  40f1e1:	inc    edx
  40f1e2:	pusha  
  40f1e3:	outs   dx,BYTE PTR ds:[esi]
  40f1e4:	push   0xfc013007
  40f1e9:	cmp    eax,0xd642c318
  40f1ee:	pop    ecx
  40f1ef:	(bad)  
  40f1f1:	cs fwait
  40f1f3:	test   al,0x10
  40f1f5:	mov    ds:0xa2e14e4a,al
  40f1fa:	in     al,dx
  40f1fb:	inc    edi
  40f1fc:	sub    al,0x63
  40f1fe:	sar    DWORD PTR [edi*4+0x5fc0c5e3],1
  40f205:	mov    esi,0x170b4149
  40f20a:	fwait
  40f20b:	xchg   BYTE PTR [ecx+0x5],bl
  40f20e:	pop    ss
  40f20f:	push   ss
  40f210:	or     dl,al
  40f212:	pushf  
  40f213:	cmc    
  40f214:	int3   
  40f215:	and    BYTE PTR [ebp+0x30915f16],cl
  40f21b:	or     eax,0x30dd3994
  40f220:	mov    cl,0x8
  40f222:	ja     0x40f1ea
  40f224:	sbb    DWORD PTR [ebp+0x61a39b44],esp
  40f22a:	cmp    al,0xc9
  40f22c:	lods   al,BYTE PTR ds:[esi]
  40f22d:	inc    eax
  40f22e:	fidivr DWORD PTR [esi-0x57122bde]
  40f234:	or     BYTE PTR [ebx+ecx*1],dl
  40f237:	in     eax,0xd1
  40f239:	push   edi
  40f23a:	inc    esp
  40f23b:	jns    0x40f219
  40f23d:	fadd   st,st(1)
  40f23f:	jb     0x40f273
  40f241:	aaa    
  40f242:	fadd   QWORD PTR [ecx]
  40f244:	mov    ch,0xfd
  40f246:	arpl   WORD PTR [edi],bx
  40f248:	sbb    BYTE PTR ds:0x2a57e5eb,dl
  40f24e:	cld    
  40f24f:	addr16 pop esi
  40f251:	jns    0x40f29c
  40f253:	cmp    BYTE PTR [esi+esi*2+0x39],cl
  40f257:	(bad)
  40f25b:	pop    edi
  40f25c:	push   ecx
  40f25d:	daa    
  40f25e:	int3   
  40f25f:	rcl    cl,0xcc
  40f262:	jg     0x40f23e
  40f264:	or     bh,BYTE PTR [eax+0x3d90deda]
  40f26a:	dec    eax
  40f26c:	pop    ebp
  40f26d:	test   eax,0x18dc4c85
  40f272:	pop    edi
  40f273:	adc    al,0x28
  40f275:	xchg   ebp,eax
  40f276:	adc    cl,BYTE PTR [ebx+0x52]
  40f279:	push   ebx
  40f27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27b:	inc    edi
  40f27c:	mov    dh,0x9a
  40f27e:	lods   al,BYTE PTR ds:[esi]
  40f27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f280:	rcl    bl,0xfe
  40f283:	test   eax,0x20df782d
  40f288:	jg     0x40f258
  40f28a:	repnz xor ah,BYTE PTR [ebp-0x2b]
  40f28e:	pop    ebp
  40f28f:	mov    bl,0x6c
  40f291:	stc    
  40f292:	pop    esi
  40f293:	loope  0x40f216
  40f295:	xchg   ecx,eax
  40f296:	push   esi
  40f297:	mov    ebx,0xdfe79f16
  40f29c:	(bad)  
  40f29e:	gs dec edx
  40f2a0:	cmp    al,0xee
  40f2a2:	popa   
  40f2a3:	jae    0x40f2cf
  40f2a5:	mov    al,0x7d
  40f2a7:	sub    eax,DWORD PTR [ecx]
  40f2a9:	jnp    0x40f2fd
  40f2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ac:	pop    ss
  40f2ad:	iret   
  40f2ae:	push   esi
  40f2af:	fs jne 0x40f232
  40f2b2:	test   eax,esi
  40f2b4:	cli    
  40f2b5:	xor    esi,DWORD PTR [ebp+0x17461fe9]
  40f2bb:	dec    DWORD PTR [edx]
  40f2bd:	loop   0x40f2b0
  40f2bf:	pop    eax
  40f2c0:	call   0xf723:0x4e6f1fa6
  40f2c7:	imul   cl
  40f2c9:	mov    ebx,0x4474396e
  40f2ce:	pop    edi
  40f2cf:	and    al,0xc
  40f2d1:	pop    esi
  40f2d2:	xor    esp,DWORD PTR [edx+eiz*8+0x50094b9d]
  40f2d9:	xor    eax,0x3dd9eff5
  40f2de:	jge    0x40f29f
  40f2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2e1:	sub    DWORD PTR [edi+eiz*2+0x667d883a],esp
  40f2e8:	jp     0x40f330
  40f2ea:	in     eax,dx
  40f2eb:	cmp    DWORD PTR [ecx+0x1c],0xb3cae1fe
  40f2f2:	out    dx,al
  40f2f3:	sbb    dh,al
  40f2f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f6:	aas    
  40f2f7:	cmp    BYTE PTR [esp+ecx*2],bl
  40f2fa:	ins    BYTE PTR es:[edi],dx
  40f2fb:	ret    
  40f2fc:	and    ebp,esi
  40f2fe:	lds    ecx,FWORD PTR [esi-0x68]
  40f301:	mov    ?,WORD PTR [eax+0x501ab938]
  40f307:	scas   eax,DWORD PTR es:[edi]
  40f308:	sbb    esp,DWORD PTR [esi-0x3a]
  40f30b:	fnstcw WORD PTR [edi]
  40f30d:	push   eax
  40f30e:	jmp    0x3f4e:0xf230ac5f
  40f315:	cmp    DWORD PTR [eax],edx
  40f317:	adc    al,0xd7
  40f319:	or     esi,DWORD PTR ds:0xefc2c8c3
  40f31f:	loopne 0x40f2dd
  40f321:	popf   
  40f322:	es or  al,0x45
  40f325:	cld    
  40f326:	or     eax,0x7ae51e55
  40f32b:	jno    0x40f32e
  40f32d:	dec    ecx
  40f32e:	jbe    0x40f3a1
  40f330:	and    ecx,DWORD PTR [esi]
  40f332:	dec    DWORD PTR [ecx]
  40f334:	shr    DWORD PTR [eax+0x19c15e49],0x9b
  40f33b:	mov    al,0x7
  40f33d:	loop   0x40f369
  40f33f:	scas   al,BYTE PTR es:[edi]
  40f340:	adc    eax,0x31d04ebd
  40f345:	pop    edx
  40f346:	imul   edx,DWORD PTR [esi],0x83f75831
  40f34c:	jle    0x40f316
  40f34e:	or     BYTE PTR fs:[edx-0x338e17fe],al
  40f355:	cld    
  40f356:	adc    DWORD PTR cs:[esi+0x5bae07c2],esi
  40f35d:	scas   eax,DWORD PTR es:[edi]
  40f35e:	jp     0x40f3b2
  40f360:	bound  esp,QWORD PTR [eax-0x3a468738]
  40f366:	clc    
  40f367:	shl    DWORD PTR [eax+0x2175598e],0xd2
  40f36e:	push   ecx
  40f36f:	inc    eax
  40f370:	and    BYTE PTR [esi],0xf1
  40f373:	rol    esi,0x2b
  40f376:	jmp    0x793c:0x7ef11360
  40f37d:	fwait
  40f37e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f37f:	pop    es
  40f380:	jmp    0x442a:0x28f2ed3c
  40f387:	loop   0x40f34e
  40f389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38a:	mov    ?,WORD PTR [edx-0x597b2d1e]
  40f390:	add    esp,DWORD PTR [esp+eax*4+0xf9b60bd]
  40f397:	aas    
  40f398:	nop
  40f399:	pop    ds
  40f39a:	dec    edi
  40f39b:	sub    edi,esp
  40f39d:	repnz dec BYTE PTR [edi-0x3583ba5e]
  40f3a4:	cmp    BYTE PTR [edi-0x6d1beb7b],ch
  40f3aa:	push   ebx
  40f3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ac:	adc    edi,DWORD PTR [edi+0x68]
  40f3af:	daa    
  40f3b0:	inc    edi
  40f3b1:	mov    cl,0xac
  40f3b3:	xchg   esp,eax
  40f3b4:	adc    al,ah
  40f3b6:	lods   eax,DWORD PTR ds:[esi]
  40f3b7:	fimul  DWORD PTR [eax]
  40f3b9:	enter  0x1fad,0xdd
  40f3bd:	mov    al,ds:0x518acb3d
  40f3c2:	popa   
  40f3c3:	(bad)  
  40f3c4:	and    ah,BYTE PTR [edx+0x5e]
  40f3c7:	loope  0x40f39f
  40f3c9:	cwde   
  40f3ca:	fbld   TBYTE PTR [eax+0x2c]
  40f3cd:	jp     0x40f398
  40f3cf:	stc    
  40f3d0:	pop    ebp
  40f3d1:	shl    DWORD PTR [edx+0x14],cl
  40f3d4:	or     eax,0x863f3b47
  40f3d9:	rcl    dl,0xa7
  40f3dc:	inc    edx
  40f3dd:	popa   
  40f3de:	adc    ebp,DWORD PTR [ebx+0x9]
  40f3e1:	pop    esp
  40f3e2:	mov    eax,0x81f13c9e
  40f3e7:	and    eax,ebx
  40f3e9:	pop    edi
  40f3ea:	and    ah,BYTE PTR [ebx]
  40f3ec:	ret    0x71d6
  40f3ef:	xchg   esi,eax
  40f3f0:	push   0x7d
  40f3f2:	dec    ecx
  40f3f3:	lods   eax,DWORD PTR ds:[esi]
  40f3f4:	jmp    FWORD PTR [edx]
  40f3f6:	mov    DWORD PTR [edi],ebp
  40f3f8:	sbb    ebx,DWORD PTR [ebx+0x3b]
  40f3fb:	out    dx,al
  40f3fc:	xchg   edi,eax
  40f3fd:	xchg   esp,edi
  40f3ff:	int    0x2a
  40f401:	test   eax,0x6b59f11c
  40f406:	jbe    0x40f448
  40f408:	sub    DWORD PTR [ebp+0x3b2cce1],esi
  40f40e:	int3   
  40f40f:	imul   DWORD PTR [ebp+0x4]
  40f412:	or     al,0xf4
  40f414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f415:	and    dl,cl
  40f417:	mov    bl,0xa6
  40f419:	add    DWORD PTR [ecx+eax*4-0x43],esp
  40f41d:	scas   eax,DWORD PTR es:[edi]
  40f41e:	(bad)  
  40f41f:	cwde   
  40f420:	bound  esp,QWORD PTR [eax-0x11]
  40f423:	xchg   edx,eax
  40f424:	sub    edx,DWORD PTR [eax]
  40f426:	mov    esi,0x7918d8a1
  40f42b:	int    0xdd
  40f42d:	rol    BYTE PTR [edi-0x5d297c13],1
  40f433:	push   0x9eb42ada
  40f438:	jnp    0x40f401
  40f43a:	cmp    BYTE PTR [eax+0x10],bh
  40f43d:	call   0x5195:0xa14682bb
  40f444:	imul   al
  40f446:	imul   edx,DWORD PTR [eax+0x422f4127],0xffffffea
  40f44d:	(bad)  
  40f44e:	ror    BYTE PTR [ebx+0x4e],cl
  40f451:	or     al,0xb4
  40f453:	arpl   WORD PTR [eax-0x67],cx
  40f456:	jl     0x40f425
  40f458:	xchg   BYTE PTR [ecx+0x4],bl
  40f45b:	xchg   esi,eax
  40f45c:	outs   dx,DWORD PTR ds:[esi]
  40f45d:	pop    ds
  40f45e:	sti    
  40f45f:	in     al,0x83
  40f461:	xchg   ecx,eax
  40f462:	clc    
  40f463:	(bad)  [edi]
  40f465:	push   esi
  40f466:	push   ecx
  40f467:	std    
  40f468:	jne    0x40f432
  40f46a:	xchg   esi,eax
  40f46b:	mov    bl,0x2a
  40f46d:	pop    es
  40f46e:	push   ecx
  40f46f:	jmp    0x9a11:0x49fabc70
  40f476:	sub    DWORD PTR [esi+edi*1-0x5b],esp
  40f47a:	pop    ebp
  40f47b:	mov    esi,0x39c1b8b1
  40f480:	sub    BYTE PTR [eax],ch
  40f482:	fs mov bh,0xeb
  40f485:	or     edi,ebp
  40f487:	mov    dl,0x72
  40f489:	sbb    al,0xd1
  40f48b:	mov    edi,ebp
  40f48d:	mov    ch,0x19
  40f48f:	mov    BYTE PTR [ecx],al
  40f491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f492:	mov    al,dh
  40f494:	hlt    
  40f495:	fstp   QWORD PTR [esi+0x6c]
  40f498:	jecxz  0x40f4d0
  40f49a:	loop   0x40f422
  40f49c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f49d:	push   ecx
  40f49e:	adc    BYTE PTR [edi+0x36],0x25
  40f4a2:	adc    cl,BYTE PTR [eax+0x23]
  40f4a5:	push   ecx
  40f4a6:	add    al,0x5e
  40f4a8:	cmp    BYTE PTR [esi+0xfeb3923],bh
  40f4ae:	xor    al,0x3d
  40f4b0:	jne    0x40f46d
  40f4b2:	add    DWORD PTR [ebp+0x46],ecx
  40f4b5:	outs   dx,DWORD PTR ds:[esi]
  40f4b6:	aas    
  40f4b7:	and    bl,ah
  40f4b9:	es (bad) 
  40f4bc:	lea    ecx,ds:0xa9a6ee87
  40f4c2:	sbb    bl,bh
  40f4c4:	mov    ch,cl
  40f4c6:	test   eax,0xb752ae65
  40f4cb:	iret   
  40f4cc:	pop    ds
  40f4cd:	xor    eax,0x15f64c93
  40f4d2:	popf   
  40f4d3:	or     esi,DWORD PTR [ecx+0x4bdfe6fa]
  40f4d9:	sub    DWORD PTR [edi+0x2c37028d],esi
  40f4df:	jno    0x40f4bd
  40f4e1:	ins    BYTE PTR es:[edi],dx
  40f4e2:	push   es
  40f4e3:	add    esp,ebx
  40f4e5:	xchg   BYTE PTR [ebx-0x40],dh
  40f4e8:	pusha  
  40f4e9:	ret    
  40f4ea:	sbb    al,0xe4
  40f4ec:	adc    bh,al
  40f4ee:	(bad)  
  40f4ef:	into   
  40f4f0:	fsubr  DWORD PTR [eax-0x4004e3d6]
  40f4f6:	les    esp,FWORD PTR [ebp-0x22]
  40f4f9:	pop    esi
  40f4fa:	and    BYTE PTR [edi-0xa],ch
  40f4fd:	adc    DWORD PTR cs:[edx],edi
  40f500:	add    edx,DWORD PTR [edi+0x55]
  40f503:	gs or  eax,0x99955f01
  40f509:	push   0x742a0541
  40f50e:	dec    ecx
  40f50f:	inc    esi
  40f510:	xor    ebx,esp
  40f512:	in     eax,dx
  40f513:	stos   DWORD PTR es:[edi],eax
  40f514:	(bad)  
  40f515:	push   0x38
  40f517:	enter  0x1fff,0xa9
  40f51b:	or     bl,BYTE PTR [esi-0x3f]
  40f51e:	icebp  
  40f51f:	fistp  DWORD PTR ds:0xf250cea8
  40f525:	adc    BYTE PTR [edx+ecx*8],0x8e
  40f529:	dec    edx
  40f52a:	fcmovnbe st,st(3)
  40f52c:	push   edi
  40f52d:	inc    esp
  40f52e:	sub    DWORD PTR [edx],esi
  40f530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f531:	push   ebx
  40f532:	push   edi
  40f533:	inc    esp
  40f534:	loopne 0x40f55d
  40f536:	fisub  DWORD PTR [ebx+0x61]
  40f539:	call   0xf79c:0xe2b57a7
  40f540:	fbstp  TBYTE PTR [edx-0x7de37057]
  40f546:	cmp    bh,BYTE PTR [edx+0x4f]
  40f549:	sbb    eax,0x5d69d89
  40f54e:	xchg   edx,eax
  40f54f:	push   esp
  40f550:	out    dx,al
  40f551:	(bad)  
  40f552:	xlat   BYTE PTR cs:[ebx]
  40f554:	jl     0x40f5b5
  40f556:	mov    bl,0xad
  40f558:	rcl    DWORD PTR [edi+eax*2-0x47],1
  40f55c:	je     0x40f53d
  40f55e:	xchg   edx,eax
  40f55f:	mov    esi,0x24d5119
  40f564:	mov    gs,WORD PTR [esp+edi*4-0x51026bba]
  40f56b:	jo     0x40f55d
  40f56d:	aaa    
  40f56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56f:	retf   
  40f570:	jae    0x40f5d4
  40f572:	sahf   
  40f573:	and    ebp,DWORD PTR [ecx+0x49586fb4]
  40f579:	xor    dl,BYTE PTR [esi+0x6b3b3fe0]
  40f57f:	add    ah,BYTE PTR [ebx]
  40f581:	adc    DWORD PTR [ebx+0xf50d67c],eax
  40f587:	mov    bh,0xb3
  40f589:	sub    al,0x80
  40f58b:	sar    BYTE PTR [ebx+0x4fb36f23],1
  40f591:	mov    eax,es
  40f593:	inc    edx
  40f594:	outs   dx,BYTE PTR ds:[esi]
  40f595:	add    al,0x59
  40f597:	jmp    0x40f585
  40f599:	xchg   BYTE PTR [ebx+0x176ae113],ah
  40f59f:	repz loopne 0x40f593
  40f5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5a3:	fldenv [edx+0x53f29b98]
  40f5a9:	ja     0x40f58b
  40f5ab:	xchg   edx,eax
  40f5ac:	loopne 0x40f57b
  40f5ae:	fwait
  40f5af:	or     al,0xe5
  40f5b1:	xchg   esi,eax
  40f5b2:	leave  
  40f5b3:	cmc    
  40f5b4:	add    BYTE PTR [ebp+0x28da8cfa],ch
  40f5ba:	(bad)  
  40f5bb:	shl    DWORD PTR [edx],cl
  40f5bd:	inc    ebp
  40f5be:	lods   al,BYTE PTR ds:[esi]
  40f5bf:	gs data16 clc 
  40f5c2:	test   BYTE PTR [ebx+edi*4+0x48432e3f],bl
  40f5c9:	(bad)  
  40f5ca:	ss mov cl,0xe8
  40f5cd:	test   edi,0x630b9cd4
  40f5d3:	aas    
  40f5d4:	sub    al,0xb5
  40f5d6:	xchg   edx,eax
  40f5d7:	mov    ecx,0xb4b228b6
  40f5dc:	mov    cl,0x1b
  40f5de:	aaa    
  40f5df:	lea    esi,[esi]
  40f5e1:	sar    BYTE PTR ds:0xaf4436a4,1
  40f5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e8:	ins    BYTE PTR es:[edi],dx
  40f5e9:	mov    ebp,0x28e25dc0
  40f5ee:	aam    0x51
  40f5f0:	in     al,0x49
  40f5f2:	sar    BYTE PTR [ecx],0x29
  40f5f5:	je     0x40f5cb
  40f5f7:	test   DWORD PTR [ebx],esi
  40f5f9:	jnp    0x40f5b2
  40f5fb:	sub    edx,ebp
  40f5fd:	popa   
  40f5fe:	outs   dx,DWORD PTR ds:[esi]
  40f5ff:	fild   QWORD PTR [edi+0x6d]
  40f602:	push   edi
  40f603:	leave  
  40f604:	fst    QWORD PTR [edi]
  40f606:	stc    
  40f607:	lea    ebx,[ebp-0x16]
  40f60a:	push   esp
  40f60b:	fs jecxz 0x40f60c
  40f60e:	loope  0x40f5e8
  40f610:	xor    al,0xcc
  40f612:	dec    ebp
  40f613:	sub    eax,0xafca2bea
  40f618:	sar    DWORD PTR [ebp-0x61065fec],1
  40f61e:	fst    st(5)
  40f620:	jmp    0x40f5f4
  40f622:	jo     0x40f5d9
  40f624:	jnp    0x40f5fd
  40f626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f627:	sbb    ecx,DWORD PTR [edi+esi*1-0x74]
  40f62b:	add    eax,0x9fb8f0c0
  40f630:	push   esi
  40f631:	or     DWORD PTR [esi-0x7c],eax
  40f634:	push   0xffffff9f
  40f636:	push   ss
  40f637:	scas   al,BYTE PTR es:[edi]
  40f638:	outs   dx,BYTE PTR ds:[esi]
  40f639:	fimul  DWORD PTR [ebx-0x79e94b97]
  40f63f:	xchg   ebx,eax
  40f640:	jl     0x40f639
  40f642:	les    ebx,FWORD PTR [ebp+ebp*2-0x10]
  40f646:	aas    
  40f647:	sub    ch,BYTE PTR [ebx+0x2a717ebd]
  40f64d:	mov    ecx,0x81f8c727
  40f652:	sub    ecx,DWORD PTR [edx]
  40f654:	jno    0x40f64c
  40f656:	jae    0x40f693
  40f658:	not    BYTE PTR [esi+0x21]
  40f65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f65c:	jmp    0x7de8:0x98f9fac5
  40f663:	ret    
  40f664:	push   eax
  40f665:	into   
  40f666:	push   es
  40f667:	out    dx,eax
  40f668:	jb     0x40f65b
  40f66a:	cld    
  40f66b:	xchg   esp,eax
  40f66c:	mov    BYTE PTR [edx+esi*8-0x7f],0xd0
  40f671:	sbb    dl,BYTE PTR [esi-0x3cd85d9e]
  40f677:	iret   
  40f678:	call   0xd5b768ec
  40f67d:	or     BYTE PTR [ecx+0x7e],ah
  40f680:	mov    ecx,0x5c8145ca
  40f685:	stc    
  40f686:	inc    edi
  40f687:	jmp    0x40f6d1
  40f689:	or     eax,0xab755b9
  40f68e:	mov    cl,0x73
  40f690:	adc    DWORD PTR [edx-0x4ac59e36],ebx
  40f696:	pop    edi
  40f697:	js     0x40f70e
  40f699:	ret    
  40f69a:	pop    es
  40f69b:	mov    fs,WORD PTR [eax-0x31]
  40f69e:	mov    al,0x76
  40f6a0:	mov    ah,BYTE PTR [edi+0x43]
  40f6a3:	fiadd  DWORD PTR ds:0xd8660e20
  40f6a9:	ds mov eax,0x5d1d51a7
  40f6af:	out    dx,al
  40f6b0:	popf   
  40f6b1:	nop
  40f6b2:	pop    ebx
  40f6b3:	leave  
  40f6b4:	push   0xd3156ef3
  40f6b9:	xor    BYTE PTR [edi],0x22
  40f6bc:	cmp    eax,0x6f0cf248
  40f6c2:	stos   DWORD PTR es:[edi],eax
  40f6c3:	loopne 0x40f6b9
  40f6c5:	push   ebx
  40f6c6:	cmp    edx,DWORD PTR ds:0xd97e124b
  40f6cc:	idiv   DWORD PTR [edx-0x3d47cb69]
  40f6d2:	push   ebp
  40f6d3:	shl    BYTE PTR gs:[esi],0xc5
  40f6d7:	sub    ebp,eax
  40f6d9:	jle    0x40f6f6
  40f6db:	xor    BYTE PTR ds:0xc45afcec,ch
  40f6e1:	stos   BYTE PTR es:[edi],al
  40f6e2:	gs loope 0x40f70b
  40f6e5:	and    ecx,DWORD PTR es:[ecx]
  40f6e8:	imul   esp,esi,0x2a
  40f6eb:	out    0x76,eax
  40f6ed:	ss sbb eax,0x43a2f7a1
  40f6f3:	sbb    BYTE PTR [ecx-0x75fcf47c],al
  40f6f9:	lock xlat BYTE PTR ds:[ebx]
  40f6fb:	repz mov al,0xfe
  40f6fe:	iret   
  40f6ff:	inc    esp
  40f700:	cmp    ch,bh
  40f702:	and    BYTE PTR [ecx+0x51],dh
  40f705:	into   
  40f706:	aaa    
  40f707:	xchg   esi,eax
  40f708:	jo     0x40f718
  40f70a:	lods   al,BYTE PTR ds:[esi]
  40f70b:	inc    ecx
  40f70c:	ror    BYTE PTR [ecx-0x46],1
  40f70f:	push   esi
  40f710:	mov    bh,0xfc
  40f712:	jge    0x40f76b
  40f714:	dec    edx
  40f715:	add    eax,0x553ed99f
  40f71a:	stos   BYTE PTR es:[edi],al
  40f71b:	mov    ch,0xbd
  40f71d:	popf   
  40f71e:	cdq    
  40f71f:	arpl   WORD PTR [ebx+0x8b5dadb],bp
  40f725:	pushf  
  40f726:	fist   DWORD PTR [edi]
  40f728:	dec    edi
  40f729:	ja     0x40f73f
  40f72b:	call   ecx
  40f72d:	loop   0x40f6c0
  40f72f:	xor    BYTE PTR [edi+0x57],0x83
  40f733:	or     BYTE PTR [edx+0x2f],bh
  40f736:	adc    esi,DWORD PTR [ecx]
  40f738:	lods   al,BYTE PTR ds:[esi]
  40f739:	fstp   QWORD PTR [edx-0x53]
  40f73c:	add    edx,DWORD PTR [eax]
  40f73e:	push   edx
  40f73f:	and    BYTE PTR [esi],dh
  40f741:	sbb    esp,eax
  40f743:	jmp    0x702480cc
  40f748:	jns    0x40f784
  40f74a:	aaa    
  40f74b:	xor    al,0x68
  40f74d:	imul   eax,ecx,0x72
  40f750:	icebp  
  40f751:	fdivr  st(3),st
  40f753:	jo     0x40f782
  40f755:	rol    dl,0x97
  40f758:	jg     0x40f73e
  40f75a:	sti    
  40f75b:	fmul   DWORD PTR [edi+0x1429229]
  40f761:	xchg   ecx,eax
  40f762:	adc    ecx,DWORD PTR [ebx]
  40f764:	cmp    BYTE PTR [esi-0x27fc5e69],cl
  40f76a:	or     eax,0x94cd5a1b
  40f76f:	sbb    ah,cl
  40f771:	mov    edx,0xbf6874db
  40f776:	jecxz  0x40f7ac
  40f778:	xchg   edi,eax
  40f779:	mov    ds:0xa471ef79,eax
  40f77e:	mov    ds:0x927c69ef,eax
  40f783:	pop    es
  40f784:	pcmpeqw mm7,mm3
  40f787:	mov    eax,0xb73ba4ac
  40f78c:	test   eax,0x5c2c07f4
  40f791:	inc    ecx
  40f792:	ret    
  40f793:	es sbb eax,edx
  40f796:	mov    WORD PTR fs:[ebp+0x48],ds
  40f79a:	fucomip st,st(0)
  40f79c:	test   eax,0x9a11ec68
  40f7a1:	xor    DWORD PTR [eax+0x2d],ebx
  40f7a4:	mov    eax,ds:0x5ff0ecd5
  40f7a9:	sub    DWORD PTR [edx+0x78],eax
  40f7ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ad:	test   BYTE PTR [esi+0x56778aec],0xeb
  40f7b4:	mov    esi,0xa146b635
  40f7b9:	add    esp,DWORD PTR ds:[ebp+edx*8-0x57]
  40f7be:	sbb    eax,0x7f371959
  40f7c3:	hlt    
  40f7c4:	push   ebp
  40f7c5:	cmp    al,0x6c
  40f7c7:	jne    0x40f7e1
  40f7c9:	pop    ebp
  40f7ca:	fs cs iret 
  40f7cd:	sti    
  40f7ce:	push   eax
  40f7cf:	aad    0x99
  40f7d1:	cmp    esi,DWORD PTR [eax+0xd108655]
  40f7d7:	jl     0x40f765
  40f7d9:	hlt    
  40f7da:	repnz (bad) 
  40f7dc:	outs   dx,DWORD PTR ds:[esi]
  40f7dd:	cwde   
  40f7de:	ret    
  40f7df:	clc    
  40f7e0:	dec    edi
  40f7e1:	popf   
  40f7e2:	sub    al,0x8e
  40f7e4:	cdq    
  40f7e5:	push   esp
  40f7e6:	test   al,0x98
  40f7e8:	popa   
  40f7e9:	cmp    DWORD PTR [ebx],0xffffffdf
  40f7ec:	jmp    0x40f7f4
  40f7ee:	push   ss
  40f7ef:	add    DWORD PTR [esp+edi*4-0x18],esp
  40f7f3:	or     al,0x53
  40f7f5:	sahf   
  40f7f6:	mov    ds:0xb651154c,al
  40f7fb:	jge    0x40f7db
  40f7fd:	nop    DWORD PTR [edi+0x12]
  40f801:	sub    BYTE PTR [esp+edx*4-0x42],ah
  40f805:	mov    ds:0xdff006ef,al
  40f80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f80b:	rcl    BYTE PTR [edi-0x261cd166],cl
  40f811:	lea    eax,[ecx-0x14]
  40f814:	inc    esi
  40f815:	push   cs
  40f816:	adc    eax,esi
  40f818:	mov    esi,0xf0c340a0
  40f81d:	std    
  40f81e:	push   esi
  40f81f:	ins    BYTE PTR es:[edi],dx
  40f820:	es inc eax
  40f822:	and    BYTE PTR [ecx-0x79],dl
  40f825:	ret    
  40f826:	jne    0x40f826
  40f828:	and    edx,DWORD PTR [edx-0x26]
  40f82b:	(bad)  
  40f82c:	loop   0x40f7da
  40f82e:	daa    
  40f82f:	and    esp,DWORD PTR [ecx-0x68e58417]
  40f835:	cld    
  40f836:	(bad)  
  40f838:	cdq    
  40f839:	enter  0xbb3f,0xf5
  40f83d:	or     bh,bh
  40f83f:	and    DWORD PTR [esi-0x6d],edx
  40f842:	cmp    al,0x85
  40f844:	out    dx,eax
  40f845:	addr16 inc ebx
  40f847:	or     eax,0x62f22ac8
  40f84c:	dec    ebx
  40f84d:	sbb    eax,0x59db45b0
  40f852:	pop    ebx
  40f853:	loopne 0x40f830
  40f855:	pop    es
  40f856:	mov    ah,0x7c
  40f858:	xor    ah,BYTE PTR [ecx]
  40f85a:	dec    ecx
  40f85b:	hlt    
  40f85c:	imul   edi,DWORD PTR [edi+eax*2-0x60],0xfe49e9ac
  40f864:	mov    ecx,0x917df196
  40f869:	and    DWORD PTR [ebx+0x345a88a2],esi
  40f86f:	mov    ah,0x44
  40f871:	ss dec ecx
  40f873:	dec    ebp
  40f874:	or     DWORD PTR [ecx+ecx*2],edi
  40f877:	push   0x2d
  40f879:	cmp    eax,DWORD PTR [eax-0x44]
  40f87c:	mov    dl,0xd1
  40f87e:	icebp  
  40f87f:	pushf  
  40f880:	mov    al,ds:0x36113840
  40f885:	adc    bl,BYTE PTR [ebx]
  40f887:	adc    eax,0x6095e2d0
  40f88c:	nop
  40f88d:	sub    DWORD PTR [eax],edi
  40f88f:	arpl   WORD PTR [ebp+edi*8-0x2a],ax
  40f893:	inc    ebp
  40f894:	cmp    ebp,DWORD PTR [edi+eax*1+0x2e]
  40f898:	repnz int 0xde
  40f89b:	inc    ecx
  40f89c:	loop   0x40f8ec
  40f89e:	inc    esi
  40f89f:	dec    eax
  40f8a0:	lock push eax
  40f8a2:	inc    esp
  40f8a3:	mov    esp,0xfc19e66c
  40f8a8:	add    bh,0x1c
  40f8ab:	or     BYTE PTR [ecx],cl
  40f8ad:	into   
  40f8ae:	test   eax,0x48f388f0
  40f8b3:	adc    BYTE PTR [edi],0xcc
  40f8b6:	sbb    DWORD PTR [ebp+0x193dab4c],eax
  40f8bc:	ffree  st(6)
  40f8be:	dec    edi
  40f8bf:	jbe    0x40f924
  40f8c1:	daa    
  40f8c2:	in     eax,0xf6
  40f8c4:	neg    DWORD PTR gs:[ebp+0x42]
  40f8c8:	test   al,0x68
  40f8cb:	xor    DWORD PTR [ebx-0x151eabd4],edi
  40f8d1:	xor    bl,dl
  40f8d3:	sbb    ebx,DWORD PTR [ebp+0x1c8b48e8]
  40f8d9:	mov    al,0x57
  40f8db:	cmp    esp,ebp
  40f8dd:	sub    ecx,DWORD PTR [ebp+0x10408f92]
  40f8e3:	inc    eax
  40f8e4:	(bad)  
  40f8e5:	hlt    
  40f8e6:	xor    ah,BYTE PTR [eax-0x4d60716c]
  40f8ec:	in     eax,dx
  40f8ed:	sbb    bh,BYTE PTR [edx+0x2b]
  40f8f0:	adc    edx,DWORD PTR [eax+0x2]
  40f8f3:	mov    esi,0x27e700d5
  40f8f8:	mov    WORD PTR [ebp+0xa],?
  40f8fb:	(bad)  
  40f8fc:	pop    ds
  40f8fd:	mov    esi,DWORD PTR [edx]
  40f8ff:	sahf   
  40f900:	dec    edx
  40f901:	retf   0xa1d2
  40f904:	add    eax,0xbf6b17b7
  40f909:	sti    
  40f90a:	sahf   
  40f90b:	data16 test al,0x21
  40f90e:	xor    ebx,0xd0eb5777
  40f914:	mov    DWORD PTR [ebp-0x538d72d6],ecx
  40f91a:	add    ecx,ebp
  40f91c:	addr16 ret 
  40f91e:	mov    ecx,0x8e959339
  40f923:	cmp    BYTE PTR [edi+0x16],0x2f
  40f927:	cmp    dl,cl
  40f929:	xchg   edx,eax
  40f92a:	daa    
  40f92b:	pop    esi
  40f92c:	pop    ds
  40f92d:	ret    0x93a4
  40f930:	or     eax,0x5549b548
  40f935:	fadd   QWORD PTR [edx+0x142b266]
  40f93b:	int3   
  40f93c:	icebp  
  40f93d:	jnp    0x40f959
  40f93f:	push   0xe0ad1790
  40f944:	stos   DWORD PTR es:[edi],eax
  40f945:	xchg   ebp,eax
  40f946:	dec    eax
  40f947:	(bad)  
  40f949:	xchg   DWORD PTR gs:[edx],esp
  40f94c:	sub    dl,dh
  40f94e:	xchg   esp,eax
  40f94f:	mov    WORD PTR [ecx-0x40],?
  40f952:	je     0x40f9a8
  40f954:	jb     0x40f94c
  40f956:	and    eax,0xbd9b2a8c
  40f95b:	add    esp,DWORD PTR [edi-0x43f34059]
  40f961:	mov    esi,0xbc96607d
  40f966:	sbb    dh,ch
  40f968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f969:	(bad)  
  40f96a:	jae    0x40f96c
  40f96c:	xchg   edi,eax
  40f96d:	std    
  40f96e:	mov    cl,0x44
  40f970:	call   0xb8a74947
  40f975:	xchg   edi,eax
  40f976:	bound  ebp,QWORD PTR [ecx-0x2f48b10]
  40f97c:	and    eax,0x308301d3
  40f981:	ja     0x40f95f
  40f983:	ins    BYTE PTR es:[edi],dx
  40f984:	fcom   DWORD PTR [esi-0x18]
  40f987:	fs pop ecx
  40f989:	mov    esp,0xa5672ba
  40f98e:	xor    dh,BYTE PTR [edx]
  40f990:	push   cs
  40f991:	(bad)  
  40f992:	sub    al,BYTE PTR [ebx-0x5b]
  40f995:	aas    
  40f996:	pop    eax
  40f997:	pop    DWORD PTR [edx+0x25]
  40f99a:	repnz push esi
  40f99c:	scas   eax,DWORD PTR es:[edi]
  40f99d:	push   edx
  40f99e:	jo     0x40f9fb
  40f9a0:	sub    bl,dh
  40f9a2:	scas   al,BYTE PTR es:[edi]
  40f9a3:	in     al,dx
  40f9a4:	sbb    BYTE PTR [esi-0x42],al
  40f9a7:	and    ah,dl
  40f9a9:	inc    eax
  40f9aa:	cdq    
  40f9ab:	add    ah,bh
  40f9ad:	fdivr  DWORD PTR [ebx-0x46bfad8c]
  40f9b3:	je     0x40f9bd
  40f9b5:	and    DWORD PTR [edi-0x6c2527ce],edi
  40f9bb:	mov    WORD PTR [eax-0x54],cs
  40f9be:	mov    WORD PTR [ebx],ds
  40f9c0:	(bad)  
  40f9c2:	fwait
  40f9c3:	hlt    
  40f9c4:	fwait
  40f9c5:	hlt    
  40f9c6:	call   0x351c:0x8d3d6c15
  40f9cd:	icebp  
  40f9ce:	fld    TBYTE PTR [edi-0x8b0b6cb]
  40f9d4:	pminsw mm5,QWORD PTR ds:0xe12bd445
  40f9db:	and    bh,BYTE PTR [eax-0x4317562b]
  40f9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e2:	sbb    al,0x1
  40f9e4:	push   edx
  40f9e5:	mov    ebp,0xff143638
  40f9ea:	dec    edi
  40f9eb:	in     eax,dx
  40f9ec:	arpl   WORD PTR [ecx+0x14],si
  40f9ef:	push   es
  40f9f0:	push   esp
  40f9f1:	sub    al,0xdb
  40f9f3:	leave  
  40f9f4:	jmp    0xa35c7ff3
  40f9f9:	popa   
  40f9fa:	mov    al,0xb7
  40f9fc:	sbb    BYTE PTR [ebx-0x55],ah
  40f9ff:	push   edi
  40fa00:	imul   edi,DWORD PTR [eax+0x7c],0x6d5d453
  40fa07:	dec    esp
  40fa08:	jne    0x40fa0f
  40fa0a:	sbb    al,0x30
  40fa0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa0d:	jno    0x40f9f0
  40fa0f:	out    dx,al
  40fa10:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40fa12:	out    dx,eax
  40fa13:	ret    0x30a3
  40fa16:	fnop   
  40fa18:	pop    eax
  40fa19:	repz mov dl,0xc2
  40fa1c:	push   ds
  40fa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1e:	sar    esi,cl
  40fa20:	sub    edi,esi
  40fa22:	(bad)  
  40fa24:	jl     0x40fa95
  40fa26:	inc    ebp
  40fa27:	cwde   
  40fa28:	mul    DWORD PTR [ebx+0x1d]
  40fa2b:	ds sbb eax,0x9e2c6e6c
  40fa31:	xchg   edx,eax
  40fa32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa33:	lods   eax,DWORD PTR ds:[esi]
  40fa34:	sub    al,0x18
  40fa36:	adc    BYTE PTR ds:0xb3d91c75,ch
  40fa3c:	or     eax,0xe50eccab
  40fa41:	adc    DWORD PTR [eax+0x5d5e2502],0xffffffb1
  40fa48:	iret   
  40fa49:	sub    DWORD PTR [esi-0x55556c03],0xe410e8b8
  40fa53:	mov    WORD PTR [ebp+0x6],?
  40fa56:	push   esp
  40fa57:	data16 daa 
  40fa59:	pop    esp
  40fa5a:	outs   dx,DWORD PTR ds:[esi]
  40fa5b:	jle    0x40fa52
  40fa5d:	dec    esi
  40fa5e:	(bad)  
  40fa5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa60:	fcom   DWORD PTR [esi+edx*8-0x17]
  40fa64:	jg     0x40faa0
  40fa66:	mov    al,ds:0x344dc85c
  40fa6b:	test   eax,0x45601512
  40fa70:	dec    eax
  40fa71:	imul   ecx,edi,0xffffffd2
  40fa74:	mov    dl,0x6a
  40fa76:	mov    cl,0x1
  40fa78:	push   es
  40fa79:	data16 icebp 
  40fa7b:	lds    edi,FWORD PTR [ecx-0x2ac3baf2]
  40fa81:	push   esi
  40fa82:	xchg   esp,eax
  40fa83:	xchg   dl,dh
  40fa85:	xor    al,0x2a
  40fa87:	ret    0xbdea
  40fa8a:	push   ss
  40fa8b:	pop    ebx
  40fa8c:	or     bl,al
  40fa8e:	das    
  40fa8f:	jecxz  0x40fa70
  40fa91:	mov    WORD PTR [ecx+edx*2-0x4c],gs
  40fa95:	add    ah,dl
  40fa97:	xlat   BYTE PTR ds:[ebx]
  40fa98:	mov    cl,cl
  40fa9a:	into   
  40fa9b:	pop    eax
  40fa9c:	sbb    BYTE PTR [ebx+ecx*1+0x5c],cl
  40faa0:	fist   DWORD PTR [eax]
  40faa2:	(bad)  
  40faa4:	ret    
  40faa5:	pop    ecx
  40faa6:	and    esp,eax
  40faa8:	ret    
  40faa9:	iret   
  40faaa:	or     esp,ecx
  40faac:	outs   dx,BYTE PTR ds:[esi]
  40faad:	fistp  WORD PTR [eax]
  40faaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab0:	cmp    eax,0x88affd16
  40fab5:	mov    ds,WORD PTR [esi-0x57546f14]
  40fabb:	loop   0x40fb28
  40fabd:	sbb    al,0x65
  40fabf:	and    al,0xa0
  40fac1:	idiv   DWORD PTR [ecx]
  40fac3:	ret    0x243a
  40fac6:	jecxz  0x40faab
  40fac8:	dec    eax
  40fac9:	push   eax
  40faca:	pop    ecx
  40facb:	mov    al,ds:0x99bb5c2e
  40fad0:	mov    bh,0xd5
  40fad2:	cmp    DWORD PTR [edi+0x4c2d94e1],esi
  40fad8:	nop
  40fad9:	rol    DWORD PTR [ebx-0x71],cl
  40fadc:	lods   eax,DWORD PTR ds:[esi]
  40fadd:	xor    al,0xbc
  40fadf:	adc    BYTE PTR [ecx+eiz*8+0xf],ah
  40fae3:	ret    
  40fae4:	pop    esp
  40fae5:	popa   
  40fae6:	shr    edx,cl
  40fae8:	pop    edi
  40fae9:	shl    DWORD PTR [eiz*2-0x40625b55],1
  40faf0:	addr16 in eax,0x9d
  40faf3:	jmp    0xbf4c:0x7497f282
  40fafa:	stc    
  40fafb:	fwait
  40fafc:	iret   
  40fafd:	popa   
  40fafe:	xlat   BYTE PTR ds:[ebx]
  40faff:	sub    DWORD PTR [ecx+0x7f2081d7],ebp
  40fb05:	xlat   BYTE PTR ds:[ebx]
  40fb06:	pop    eax
  40fb07:	add    al,0x7c
  40fb09:	dec    edi
  40fb0a:	dec    esi
  40fb0b:	and    eax,0x4b66584c
  40fb10:	mov    ebp,0x686dcd6c
  40fb15:	sbb    cl,BYTE PTR [edx-0x14]
  40fb18:	jge    0x40fb37
  40fb1a:	push   eax
  40fb1b:	inc    esp
  40fb1c:	out    dx,al
  40fb1d:	xor    ecx,DWORD PTR [ebp-0x3e903f87]
  40fb23:	addr16 leave 
  40fb25:	dec    esi
  40fb26:	mul    DWORD PTR [esi-0x37]
  40fb29:	in     eax,0xb3
  40fb2b:	outs   dx,DWORD PTR ds:[esi]
  40fb2c:	fld    QWORD PTR [edi]
  40fb2e:	fstp   TBYTE PTR [ecx]
  40fb30:	jle    0x40fb0c
  40fb32:	adc    BYTE PTR [edi],0xbc
  40fb35:	sbb    cl,BYTE PTR [ebp-0x6619df1]
  40fb3b:	jmp    0x651e:0xbd13fe47
  40fb42:	cli    
  40fb43:	adc    ecx,esi
  40fb45:	xchg   esp,eax
  40fb46:	je     0x40fb4b
  40fb48:	rcl    ebp,1
  40fb4a:	dec    ecx
  40fb4b:	js     0x40fb0b
  40fb4d:	adc    bh,BYTE PTR [edx+eiz*2]
  40fb50:	mov    al,0x61
  40fb52:	add    al,BYTE PTR [ebp+0x34]
  40fb55:	push   0x1ff70ce9
  40fb5a:	(bad)  
  40fb5b:	fldenv [edi]
  40fb5d:	aad    0x8a
  40fb5f:	rol    DWORD PTR [eax+0xedc3425],1
  40fb65:	ficomp WORD PTR [ecx]
  40fb67:	pop    ds
  40fb68:	lods   eax,DWORD PTR ds:[esi]
  40fb69:	xor    dl,0x1f
  40fb6c:	rol    DWORD PTR [ebx+0x2a2b2e3f],0xff
  40fb73:	out    0x1a,al
  40fb75:	pop    eax
  40fb76:	pop    esi
  40fb77:	dec    esi
  40fb78:	or     bl,bh
  40fb7a:	sub    DWORD PTR [ebp-0x80],edx
  40fb7d:	xchg   ebx,ebp
  40fb7f:	(bad)  
  40fb80:	out    dx,al
  40fb81:	sar    ch,cl
  40fb83:	sbb    DWORD PTR [ecx+0x11cb9851],esi
  40fb89:	imul   esi,esp,0xeb3540d5
  40fb8f:	pop    es
  40fb90:	mov    dl,0xbd
  40fb92:	and    DWORD PTR [ebp-0x66],ebp
  40fb95:	std    
  40fb96:	mov    WORD PTR [eax-0xb],?
  40fb99:	or     eax,0xc629a753
  40fb9e:	sbb    ebx,esi
  40fba0:	fwait
  40fba1:	push   ecx
  40fba2:	cmc    
  40fba3:	loopne 0x40fba4
  40fba5:	pop    cx
  40fba7:	stc    
  40fba8:	adc    eax,eax
  40fbaa:	test   BYTE PTR ds:0x8ed185e,dl
  40fbb0:	pop    edi
  40fbb1:	mov    bl,BYTE PTR [edi+ecx*1-0x7a]
  40fbb5:	jno    0x40fc10
  40fbb7:	inc    esp
  40fbb8:	hlt    
  40fbb9:	(bad)
  40fbbc:	in     al,0x92
  40fbbe:	push   eax
  40fbbf:	sub    eax,0xd06c01bc
  40fbc4:	lock retf 0xd2aa
  40fbc8:	mov    cl,cl
  40fbca:	push   edi
  40fbcb:	mov    bh,0x3e
  40fbcd:	rcl    DWORD PTR [ecx-0x2],1
  40fbd0:	shl    DWORD PTR [edx-0x32e6da16],1
  40fbd6:	inc    ebp
  40fbd7:	cmp    al,0x1c
  40fbd9:	or     al,0xe8
  40fbdb:	je     0x40fbb8
  40fbdd:	(bad)  
  40fbde:	loope  0x40fbba
  40fbe0:	push   esi
  40fbe1:	jle    0x40fb97
  40fbe3:	pop    edi
  40fbe4:	sub    eax,edx
  40fbe6:	mov    cl,0x26
  40fbe8:	inc    edx
  40fbe9:	pop    ecx
  40fbea:	pushf  
  40fbeb:	mov    ds:0x234e7da1,eax
  40fbf0:	pushw  ds
  40fbf2:	mov    DWORD PTR [ecx],esi
  40fbf4:	xor    DWORD PTR [edi],ebx
  40fbf6:	pop    ebx
  40fbf7:	xchg   edi,eax
  40fbf8:	and    BYTE PTR [esi-0x12fe0cd2],al
  40fbfe:	dec    edi
  40fbff:	add    al,0x3a
  40fc01:	rcl    bh,0xe9
  40fc04:	retf   0xce81
  40fc07:	out    dx,al
  40fc08:	inc    esp
  40fc09:	dec    edi
  40fc0a:	sbb    cl,dl
  40fc0c:	mov    ebx,0x8632a30f
  40fc11:	add    DWORD PTR [ebx+0x597dd6be],esp
  40fc17:	jnp    0x40fc3b
  40fc19:	test   al,0xd
  40fc1b:	and    al,0x41
  40fc1d:	mov    esp,0xe4b1b0a0
  40fc22:	fdiv   DWORD PTR [eax]
  40fc24:	add    esi,DWORD PTR [ebx+0x44]
  40fc27:	lock add bh,BYTE PTR [ebx]
  40fc2a:	sub    al,0x91
  40fc2c:	cmp    ebx,DWORD PTR [ebx]
  40fc2e:	sahf   
  40fc2f:	jecxz  0x40fc39
  40fc31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc32:	scas   al,BYTE PTR es:[edi]
  40fc33:	popa   
  40fc34:	push   ds
  40fc35:	or     al,dh
  40fc37:	in     eax,dx
  40fc38:	sub    eax,0x29dc4bef
  40fc3d:	push   ebx
  40fc3e:	inc    esi
  40fc3f:	test   al,0x12
  40fc41:	nop
  40fc42:	inc    ecx
  40fc44:	adc    BYTE PTR [edx],al
  40fc46:	sbb    eax,0xd89d3038
  40fc4b:	sub    BYTE PTR [ebx],cl
  40fc4d:	mov    eax,ss:0x571217c4
  40fc53:	test   al,0x52
  40fc55:	fs ds push ebx
  40fc58:	jmp    0xd2ee6024
  40fc5d:	or     ebp,DWORD PTR [ecx-0x5f]
  40fc60:	sbb    ecx,eax
  40fc62:	xchg   esp,eax
  40fc63:	mov    esi,0x79847818
  40fc68:	dec    sp
  40fc6a:	das    
  40fc6b:	rcl    DWORD PTR [esi-0x9],0x31
  40fc6f:	mov    ah,0xdd
  40fc71:	xchg   edi,eax
  40fc72:	inc    eax
  40fc73:	cmp    ebp,DWORD PTR [esi-0x74c49ec1]
  40fc79:	or     al,0xe8
  40fc7b:	test   eax,0x84f26cbb
  40fc80:	sar    BYTE PTR [edi+ebp*8],cl
  40fc83:	imul   esp,DWORD PTR [ebp-0x11eded43],0xffffffa9
  40fc8a:	leave  
  40fc8b:	mov    ecx,0xad40891e
  40fc90:	xchg   ecx,eax
  40fc91:	pcmpeqb mm5,QWORD PTR [ebp+0x66b4f473]
  40fc98:	call   0xdb00:0xd87203d2
  40fc9f:	hlt    
  40fca0:	mov    al,ds:0xba49d708
  40fca5:	das    
  40fca6:	pop    ebp
  40fca7:	fcmovu st,st(0)
  40fca9:	outs   dx,BYTE PTR ds:[esi]
  40fcaa:	test   al,0x5f
  40fcac:	jg     0x40fcec
  40fcae:	scas   al,BYTE PTR es:[edi]
  40fcaf:	addr16 push ebx
  40fcb1:	aas    
  40fcb2:	sbb    eax,0x40cbe59d
  40fcb7:	daa    
  40fcb8:	pop    es
  40fcb9:	mov    cl,dh
  40fcbb:	adc    al,0xed
  40fcbd:	int    0x3b
  40fcbf:	pop    ss
  40fcc0:	ja     0x40fc71
  40fcc2:	pop    ss
  40fcc3:	ss sub dh,0xe4
  40fcc7:	adc    esi,DWORD PTR [esi+0x7cbeee1f]
  40fccd:	scas   al,BYTE PTR es:[edi]
  40fcce:	jns    0x40fca5
  40fcd0:	aam    0x6f
  40fcd2:	retf   0xf450
  40fcd5:	fs mov dh,0x3
  40fcd8:	push   es
  40fcd9:	inc    edx
  40fcda:	or     cl,BYTE PTR [edx+0x6b]
  40fcdd:	and    dl,BYTE PTR [ebp+eax*8-0x745a3b4a]
  40fce4:	sub    DWORD PTR [edi-0x4c],0xee0c6417
  40fceb:	dec    eax
  40fcec:	iret   
  40fced:	shl    bh,1
  40fcef:	(bad)  
  40fcf0:	dec    ebp
  40fcf1:	in     al,0xff
  40fcf3:	xor    DWORD PTR [eax+0x687f77fd],eax
  40fcf9:	ret    0xefc4
  40fcfc:	dec    eax
  40fcfd:	sbb    al,0x4e
  40fcff:	es ja  0x40fcba
  40fd02:	jmp    0x1aee:0xc8396932
  40fd09:	inc    ecx
  40fd0a:	adc    esi,esp
  40fd0c:	jmp    0x5a8f:0x22ebb5f2
  40fd13:	mov    ch,0xed
  40fd15:	imul   edx,DWORD PTR fs:[ecx-0xb4a28db],0x53
  40fd1d:	in     eax,dx
  40fd1e:	out    dx,eax
  40fd1f:	xchg   ebp,eax
  40fd20:	sbb    ah,dl
  40fd22:	inc    ebx
  40fd23:	jno    0x40fd07
  40fd25:	pop    ss
  40fd26:	jg     0x40fd4c
  40fd28:	xchg   DWORD PTR [ebp-0x4941371c],eax
  40fd2e:	sbb    DWORD PTR [esi-0x11260593],edx
  40fd34:	fcomp  DWORD PTR [esi+0x37]
  40fd37:	(bad)  
  40fd38:	adc    dh,BYTE PTR [ecx-0x4db3610]
  40fd3e:	call   FWORD PTR [eax-0x7ed2acf2]
  40fd44:	mov    ds:0xcd19d0c4,al
  40fd49:	call   0x4863:0x12a5e7ce
  40fd50:	xor    eax,0x953b3724
  40fd55:	mov    dh,0xa9
  40fd57:	daa    
  40fd58:	push   edx
  40fd59:	mov    edi,es
  40fd5b:	test   eax,0xef4afecf
  40fd60:	sbb    eax,edi
  40fd62:	js     0x40fd14
  40fd64:	enter  0xd8c2,0xcb
  40fd68:	jmp    0xf7b4436e
  40fd6d:	cmp    eax,0x6cc14cdd
  40fd72:	push   eax
  40fd73:	mov    dl,0x88
  40fd75:	outs   dx,BYTE PTR ds:[esi]
  40fd76:	stos   BYTE PTR es:[edi],al
  40fd77:	retf   
  40fd78:	inc    edi
  40fd79:	std    
  40fd7a:	xor    al,BYTE PTR [ebx-0x6]
  40fd7d:	xor    DWORD PTR [esi],eax
  40fd7f:	fistp  DWORD PTR [ebp+0x66b95e64]
  40fd85:	pop    ebx
  40fd86:	sub    al,0x3d
  40fd88:	mov    dh,0x2d
  40fd8a:	inc    ebp
  40fd8b:	or     eax,0xac36dc9a
  40fd90:	pusha  
  40fd91:	stc    
  40fd92:	add    eax,0xddd14854
  40fd97:	sbb    BYTE PTR [ecx-0x4c94b697],0x25
  40fd9e:	popf   
  40fd9f:	mov    cl,0xa2
  40fda1:	mov    esi,0x32f1711e
  40fda6:	bnd jmp 0x9427a16f
  40fdac:	out    dx,al
  40fdad:	mov    edx,0xa57e93ae
  40fdb2:	mov    esi,0xb22d19d0
  40fdb7:	xor    cl,cl
  40fdb9:	adc    bl,BYTE PTR [edx+0x71]
  40fdbc:	add    ch,cl
  40fdbe:	lods   eax,DWORD PTR ds:[esi]
  40fdbf:	xchg   DWORD PTR [ecx+ebx*4-0x2],ebp
  40fdc3:	repnz cmp BYTE PTR [esi+edx*8],ah
  40fdc7:	dec    ecx
  40fdc8:	jle    0x40fded
  40fdca:	repz fwait
  40fdcc:	mov    ds:0x25cbeb85,eax
  40fdd1:	jmp    DWORD PTR [ecx-0x78]
  40fdd4:	inc    esp
  40fdd5:	ret    
  40fdd6:	(bad)  
  40fdd7:	fsub   st(3),st
  40fdd9:	adc    BYTE PTR [eax+0x7b],dl
  40fddc:	ret    
  40fddd:	mov    eax,0x42ca93b8
  40fde2:	ins    DWORD PTR es:[edi],dx
  40fde3:	jns    0x40fd68
  40fde5:	mov    ah,0xc0
  40fde7:	lea    ebp,[edi-0x7e]
  40fdea:	sbb    eax,0x617dd68c
  40fdef:	sub    ah,BYTE PTR [ebp-0x4c787c33]
  40fdf5:	inc    ebx
  40fdf6:	mov    ds:0xd67838e3,eax
  40fdfb:	int3   
  40fdfc:	cdq    
  40fdfd:	mov    ch,0x45
  40fdff:	test   eax,0x7dbfdf7d
  40fe04:	xor    ecx,DWORD PTR [ebp+esi*2-0x6a]
  40fe08:	stos   BYTE PTR es:[edi],al
  40fe09:	xchg   edx,eax
  40fe0a:	dec    edi
  40fe0b:	adc    al,0x97
  40fe0d:	repnz xor esi,DWORD PTR [ebp-0x15cfe6b6]
  40fe14:	xor    bl,BYTE PTR [eax+0x7f662e17]
  40fe1a:	je     0x40fe18
  40fe1c:	outs   dx,DWORD PTR ds:[esi]
  40fe1d:	and    al,0xa2
  40fe1f:	pop    DWORD PTR ds:0xd48c174e
  40fe25:	adc    ch,bh
  40fe27:	icebp  
  40fe28:	adc    eax,0xe6b73ca4
  40fe2d:	or     BYTE PTR [eax-0x11584d0b],al
  40fe33:	xchg   DWORD PTR [edx-0x7c],esi
  40fe36:	lods   al,BYTE PTR ds:[esi]
  40fe37:	clc    
  40fe38:	pop    es
  40fe39:	(bad)  
  40fe3a:	dec    eax
  40fe3b:	call   0xe7b4:0x7e1f873b
  40fe42:	in     al,0x33
  40fe44:	ins    DWORD PTR es:[edi],dx
  40fe45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe46:	clc    
  40fe47:	call   0xd2af1f31
  40fe4c:	jo     0x40feba
  40fe4e:	or     edi,edi
  40fe50:	and    dh,BYTE PTR [ebp-0x676a08f6]
  40fe56:	stos   DWORD PTR es:[edi],eax
  40fe57:	xchg   ecx,eax
  40fe58:	sbb    esi,ecx
  40fe5a:	xchg   esi,eax
  40fe5b:	sub    dl,dl
  40fe5d:	shl    BYTE PTR [edx-0x3c92f260],1
  40fe63:	lea    edx,[edx]
  40fe65:	iret   
  40fe66:	lds    ebp,FWORD PTR [edx]
  40fe68:	js     0x40fe05
  40fe6a:	pop    ecx
  40fe6b:	rcr    DWORD PTR [edx+0x1bd54110],1
  40fe71:	nop
  40fe72:	dec    ecx
  40fe73:	fisubr WORD PTR [eax+0x7785649e]
  40fe79:	jl     0x40fe79
  40fe7b:	bound  ebp,QWORD PTR [ebp-0x61]
  40fe7e:	fidivr DWORD PTR [edi+ebx*2]
  40fe81:	mov    esi,0x10fd189e
  40fe86:	jne    0x40fe4f
  40fe88:	nop
  40fe89:	sbb    BYTE PTR [ebp+edx*2+0x68],dl
  40fe8d:	or     al,0x4
  40fe8f:	mov    eax,ecx
  40fe91:	pop    ebp
  40fe92:	xchg   ebp,eax
  40fe93:	int3   
  40fe94:	leave  
  40fe95:	out    0x8f,eax
  40fe97:	xchg   edi,eax
  40fe98:	es pushf 
  40fe9a:	sbb    al,BYTE PTR [esi+0x69b1e1e3]
  40fea0:	sub    BYTE PTR [edi+ecx*2+0x757c8a72],0xe0
  40fea8:	hlt    
  40fea9:	mov    ch,BYTE PTR [eax+esi*4+0x6bd631c]
  40feb0:	or     al,0x26
  40feb2:	sub    esp,ebx
  40feb4:	xchg   esp,eax
  40feb5:	repnz mov edi,0x44fbbafa
  40febb:	call   DWORD PTR [edi+0x5daa2e8c]
  40fec1:	jg     0x40fedd
  40fec3:	call   0xa38b:0xcf817e2f
  40feca:	push   edi
  40fecb:	dec    esi
  40fecc:	std    
  40fecd:	(bad)  
  40fece:	pusha  
  40fecf:	les    ebp,FWORD PTR [eax]
  40fed1:	mov    bh,0x8
  40fed3:	inc    edi
  40fed4:	(bad)  
  40fed5:	cli    
  40fed6:	pop    edx
  40fed7:	add    eax,DWORD PTR [ebp+0x66]
  40feda:	add    esi,edi
  40fedc:	cdq    
  40fedd:	cmp    bl,BYTE PTR [edx]
  40fedf:	adc    esi,eax
  40fee1:	mov    ah,0x55
  40fee3:	mov    ?,WORD PTR [edx+0x2a]
  40fee6:	pushf  
  40fee7:	xor    ah,cl
  40fee9:	sahf   
  40feea:	sub    eax,0x9d8e6259
  40feef:	mov    esi,0xa4c2bb6a
  40fef4:	enter  0x46b,0x2f
  40fef8:	loop   0x40ff1b
  40fefa:	or     BYTE PTR [edx],al
  40fefc:	push   esi
  40fefd:	popa   
  40fefe:	add    al,0x1f
  40ff00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff01:	dec    esp
  40ff02:	sub    edx,eax
  40ff04:	jmp    0x697:0xd6420e32
  40ff0b:	mov    esi,0xd19b1db9
  40ff10:	in     eax,dx
  40ff11:	imul   ebx,eax,0xffffffa0
  40ff14:	pop    ebp
  40ff15:	cmp    BYTE PTR [eax],ah
  40ff17:	jnp    0x40feeb
  40ff19:	out    0xc0,al
  40ff1b:	pop    edi
  40ff1c:	and    al,0x9d
  40ff1e:	or     DWORD PTR [edi],0x734e11a3
  40ff24:	pop    ss
  40ff25:	iret   
  40ff26:	push   edx
  40ff27:	mov    al,0x1d
  40ff29:	pop    ss
  40ff2a:	(bad)  
  40ff2b:	cmp    DWORD PTR [eax+0x13d9a266],ebx
  40ff31:	ins    BYTE PTR es:[edi],dx
  40ff32:	addr16 std 
  40ff34:	jno    0x40fece
  40ff36:	xchg   DWORD PTR [eax],ebp
  40ff38:	mov    edi,0x12263a12
  40ff3d:	cmp    al,0x15
  40ff3f:	cmp    ebp,DWORD PTR [ebx+0x24]
  40ff42:	stos   BYTE PTR es:[edi],al
  40ff43:	jecxz  0x40ffbf
  40ff45:	jg     0x40ffbe
  40ff47:	test   DWORD PTR [ebx-0x249ad0c9],0x26120493
  40ff51:	lods   al,BYTE PTR ds:[esi]
  40ff52:	sbb    DWORD PTR fs:[eax-0x5c],0x7ccbfa5d
  40ff5a:	(bad)  
  40ff5b:	retf   0x44f0
  40ff5e:	aad    0x75
  40ff60:	mov    cs,WORD PTR [esi+0x370a319e]
  40ff66:	sub    DWORD PTR [ecx+0x6b29ff1d],ebp
  40ff6c:	add    ecx,DWORD PTR [edx]
  40ff6e:	sbb    ebx,eax
  40ff70:	dec    ebp
  40ff71:	dec    esi
  40ff72:	aad    0xe6
  40ff74:	xlat   BYTE PTR ds:[ebx]
  40ff75:	sahf   
  40ff76:	xchg   ecx,eax
  40ff77:	add    eax,0x4bf3aa78
  40ff7c:	and    al,0x82
  40ff7e:	or     al,0xcf
  40ff80:	shr    BYTE PTR [eax-0x4],cl
  40ff83:	retf   
  40ff84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff85:	add    eax,0x977a6a5a
  40ff8a:	pop    esp
  40ff8b:	add    al,0x57
  40ff8d:	pop    edx
  40ff8e:	adc    eax,0x4952d4a8
  40ff93:	sub    al,0xb3
  40ff95:	cmp    ah,cl
  40ff97:	jo     0x40ffec
  40ff99:	jo     0x40ff64
  40ff9b:	cmp    DWORD PTR [ecx-0x203f246d],edx
  40ffa1:	sbb    edx,edx
  40ffa3:	iret   
  40ffa4:	fstp   TBYTE PTR [ebp-0x75b821f2]
  40ffaa:	shl    DWORD PTR [ecx],cl
  40ffac:	mov    al,0x95
  40ffae:	shl    BYTE PTR [eax+edi*2+0xbf70eac],cl
  40ffb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb6:	scas   eax,DWORD PTR es:[edi]
  40ffb7:	iret   
  40ffb8:	mov    ah,0x51
  40ffbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffbc:	enter  0xf9fb,0x6e
  40ffc0:	xor    DWORD PTR [esi+ecx*2],0x11
  40ffc4:	popa   
  40ffc5:	cmp    ecx,ebx
  40ffc7:	dec    esi
  40ffc8:	lds    edx,FWORD PTR [edx+0x7e]
  40ffcb:	mov    cl,0xb7
  40ffcd:	bound  esi,QWORD PTR [ebp-0x2a4fa126]
  40ffd3:	into   
  40ffd4:	adc    eax,0x61bdd07a
  40ffd9:	lock or bl,BYTE PTR [esi]
  40ffdc:	repz xor BYTE PTR [ebp+edx*1-0x4be16b68],cl
  40ffe4:	dec    edx
  40ffe5:	sub    ebx,ebx
  40ffe7:	push   edx
  40ffe8:	ficomp WORD PTR [ebp-0xe30e9ba]
  40ffee:	mov    al,ds:0xdb3a4c79
  40fff3:	popa   
  40fff4:	jecxz  0x40fff8
  40fff6:	push   esi
  40fff7:	test   DWORD PTR [esi],esi
  40fff9:	popa   
  40fffa:	and    DWORD PTR [edi-0x11],0x6f
  40fffe:	jge    0x40ffe4
  410000:	fisttp WORD PTR [eax+0x44cbbb50]
  410006:	in     al,0xb
  410008:	adc    eax,DWORD PTR [ebp-0x4cbae106]
  41000e:	repz cmp BYTE PTR [esi],ch
  410011:	js     0x40fffb
  410013:	push   cs
  410014:	sbb    BYTE PTR [esi-0x131fe269],bl
  41001a:	add    ebx,ecx
  41001c:	mov    eax,ds:0x6d65c207
  410021:	lods   al,BYTE PTR ds:[esi]
  410022:	jb     0x410025
  410024:	icebp  
  410025:	mov    eax,0x2555acea
  41002a:	lods   al,BYTE PTR ds:[esi]
  41002b:	cmp    al,0x6b
  41002d:	stos   BYTE PTR es:[edi],al
  41002e:	or     DWORD PTR ds:0x8bb61a45,0x76
  410035:	retf   
  410036:	lock in eax,0x84
  410039:	popf   
  41003a:	popf   
  41003b:	sbb    esp,DWORD PTR [edi+0x5e]
  41003e:	popf   
  41003f:	sub    eax,0x7676b5b2
  410044:	pop    ss
  410045:	mov    ah,0x98
  410047:	hlt    
  410048:	outs   dx,BYTE PTR ds:[esi]
  410049:	cs mov eax,0xd31a2541
  41004f:	loope  0x40fff2
  410051:	fcomp  st(1)
  410053:	pop    es
  410054:	icebp  
  410055:	mov    ds,WORD PTR [ecx+ebx*2+0x764e1b27]
  41005c:	mov    ebx,0x4b4a6681
  410061:	xchg   BYTE PTR [edi],ch
  410063:	sbb    DWORD PTR [ebx],ebp
  410065:	sahf   
  410066:	cdq    
  410067:	xchg   ebx,eax
  410068:	(bad)  [ecx]
  41006a:	test   eax,0x48fa7f5a
  41006f:	fadd   DWORD PTR [esi-0x5f]
  410072:	out    dx,al
  410073:	dec    ebp
  410074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410075:	in     al,dx
  410076:	out    0xed,eax
  410078:	inc    edx
  410079:	xor    esp,esp
  41007b:	addr16 test eax,0xf493fc64
  410081:	inc    esi
  410082:	xchg   ebp,eax
  410083:	inc    eax
  410084:	aaa    
  410085:	ret    0x7865
  410088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410089:	shr    bh,0x9b
  41008c:	gs add ch,bl
  41008f:	shr    BYTE PTR [ebx],1
  410091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410092:	shl    DWORD PTR [ebx+0x0],1
  410095:	pop    edx
  410096:	fs add edi,edi
  410099:	cmp    al,BYTE PTR [esi+0x6eb4bd84]
  41009f:	out    dx,al
  4100a0:	jg     0xd286f37d
  4100a6:	inc    edx
  4100a7:	mov    al,ds:0xf3163dcb
  4100ac:	(bad)  
  4100ad:	repz fs jg 0x4100dc
  4100b1:	push   0xffffff8d
  4100b3:	sbb    ebp,ebx
  4100b5:	fild   WORD PTR [edi]
  4100b7:	add    ebp,DWORD PTR [ecx]
  4100b9:	(bad)  
  4100ba:	or     eax,0xac7ed4dd
  4100bf:	jb     0x4100d5
  4100c1:	arpl   WORD PTR [eax+0x2f],bp
  4100c4:	pop    esi
  4100c5:	int3   
  4100c6:	sub    eax,0x55fe88c9
  4100cb:	(bad)  
  4100cc:	jl     0x4100ad
  4100ce:	dec    edi
  4100cf:	fadd   st,st(0)
  4100d1:	mov    BYTE PTR [ebp+0x2b5a462b],bl
  4100d7:	sbb    DWORD PTR [esi+edx*1-0x5c],edx
  4100db:	scas   al,BYTE PTR es:[edi]
  4100dc:	xchg   BYTE PTR [eax-0x74],dh
  4100df:	cwde   
  4100e0:	mov    dh,0xc2
  4100e2:	cmp    eax,0xaadc6b57
  4100e7:	jle    0x4100b8
  4100e9:	std    
  4100ea:	rcr    DWORD PTR [edx+eiz*2+0x13],1
  4100ee:	jb     0x4100ed
  4100f0:	repnz adc al,0xaf
  4100f3:	or     DWORD PTR [bp+si+0x245],ebx
  4100f8:	xor    al,0x29
  4100fa:	xchg   esp,eax
  4100fb:	pusha  
  4100fc:	int    0x5a
  4100fe:	mov    dl,BYTE PTR [edi+0x58a0bd05]
  410104:	or     al,0xec
  410106:	mov    ebp,0x475dd413
  41010b:	ins    BYTE PTR es:[edi],dx
  41010c:	mov    ebp,0x4dec3bce
  410111:	cld    
  410112:	jns    0x410164
  410114:	push   cs
  410115:	ins    DWORD PTR es:[edi],dx
  410116:	leave  
  410117:	push   edi
  410118:	inc    ebp
  410119:	and    al,0x75
  41011b:	push   edi
  41011c:	sbb    eax,0x6f2e0406
  410121:	push   0x2b
  410123:	jb     0x41019d
  410125:	mov    esi,0xc8100199
  41012a:	pop    ebp
  41012b:	ss repnz mov cl,0x80
  41012f:	shl    BYTE PTR [eax+0x16],0x6f
  410133:	scas   al,BYTE PTR es:[edi]
  410134:	push   edx
  410135:	in     eax,dx
  410136:	ja     0x4101b4
  410138:	in     al,dx
  410139:	pop    ebx
  41013a:	stos   DWORD PTR es:[edi],eax
  41013b:	pushf  
  41013c:	sbb    esi,DWORD PTR [edx+eax*1+0x7db4071a]
  410143:	or     DWORD PTR [ecx+0x3510388c],edx
  410149:	mov    bh,0x8b
  41014b:	(bad)  
  41014d:	out    dx,al
  41014e:	mov    dl,0x3f
  410150:	fild   QWORD PTR [edx]
  410152:	xchg   ebp,eax
  410153:	cwde   
  410154:	push   ebp
  410155:	mov    bh,0x8b
  410157:	outs   dx,DWORD PTR ds:[esi]
  410158:	hlt    
  410159:	mov    cl,0x8f
  41015b:	aaa    
  41015c:	call   0x883b:0xa8376019
  410163:	or     al,0x5d
  410165:	scas   al,BYTE PTR es:[edi]
  410166:	push   esp
  410167:	jnp    0x41019d
  410169:	out    0x71,al
  41016b:	and    BYTE PTR [eax+0x51eeef2d],cl
  410171:	test   eax,0x43ca9cb0
  410176:	pop    es
  410177:	lods   al,BYTE PTR ds:[esi]
  410178:	adc    al,0x9b
  41017a:	test   ebx,esp
  41017c:	xor    esp,DWORD PTR [ecx]
  41017e:	mov    eax,ds:0x74a03916
  410183:	push   cs
  410184:	or     BYTE PTR [edx-0x2304712c],dh
  41018a:	sbb    esp,ebx
  41018c:	jmp    0x410175
  41018e:	mov    eax,ds:0x4fd4c893
  410193:	add    ch,BYTE PTR [esi]
  410195:	cmp    ah,BYTE PTR [edi-0xd30d1e5]
  41019b:	mov    ds:0x41239eb2,al
  4101a0:	jns    0x410178
  4101a2:	and    al,0x91
  4101a4:	add    ah,ch
  4101a6:	pop    es
  4101a7:	scas   al,BYTE PTR es:[edi]
  4101a8:	inc    eax
  4101a9:	shl    esi,1
  4101ab:	fnstsw WORD PTR [edx+0x47579043]
  4101b1:	fisubr DWORD PTR [ebp+0x62]
  4101b4:	xor    esi,edi
  4101b6:	into   
  4101b7:	xor    dh,dl
  4101b9:	mov    cl,0x72
  4101bb:	out    dx,eax
  4101bc:	into   
  4101bd:	sbb    al,BYTE PTR [esi-0x26]
  4101c0:	icebp  
  4101c1:	inc    edi
  4101c2:	mov    bl,0xd7
  4101c4:	popf   
  4101c5:	mov    WORD PTR [edx+0x5a],cs
  4101c8:	or     ax,0x7ed2
  4101cc:	arpl   WORD PTR [edx-0x69676f65],bx
  4101d2:	mov    bl,0xea
  4101d4:	stos   BYTE PTR es:[edi],al
  4101d5:	aaa    
  4101d6:	iret   
  4101d7:	jnp    0x4101ee
  4101d9:	add    dl,BYTE PTR [ebx-0x1a]
  4101dc:	test   eax,0x7681eb04
  4101e1:	xchg   ecx,eax
  4101e2:	mov    dl,0x76
  4101e4:	add    al,0x9a
  4101e6:	add    al,0x45
  4101e8:	mov    ecx,0x9a6539ee
  4101ed:	pop    edx
  4101ee:	out    dx,al
  4101ef:	ja     0x410190
  4101f1:	jmp    DWORD PTR [edi-0x6d4b2fb1]
  4101f7:	fwait
  4101f8:	les    edx,FWORD PTR [esi-0x14]
  4101fb:	pop    es
  4101fc:	mov    edx,0x6e3c84e
  410201:	cli    
  410202:	icebp  
  410203:	or     DWORD PTR [edx],eax
  410205:	push   ebx
  410206:	dec    ebp
  410207:	popf   
  410208:	inc    dh
  41020a:	add    al,0xea
  41020c:	ret    0x434f
  41020f:	pusha  
  410210:	pop    eax
  410211:	push   0x2f
  410213:	gs out 0x30,eax
  410216:	sub    al,0xec
  410218:	pop    edx
  410219:	xor    al,0xbd
  41021b:	add    al,bl
  41021d:	popa   
  41021e:	add    al,0xef
  410220:	js     0x41027a
  410222:	nop
  410223:	outs   dx,DWORD PTR ds:[esi]
  410224:	in     eax,0xef
  410226:	sti    
  410227:	cmp    ebp,DWORD PTR [edi+0x6e]
  41022a:	inc    eax
  41022b:	lahf   
  41022c:	out    0x14,eax
  41022e:	ror    BYTE PTR [ecx+0x177b8710],cl
  410234:	xchg   DWORD PTR [ecx],ebp
  410236:	adc    al,0xa
  410238:	push   cs
  410239:	cmp    DWORD PTR [ebx-0x4a7efa3e],ebp
  41023f:	sub    eax,0x6d4da192
  410244:	or     esp,eax
  410246:	stos   BYTE PTR es:[edi],al
  410247:	cdq    
  410248:	dec    esi
  410249:	mov    dl,0x22
  41024b:	out    0x2a,al
  41024d:	mov    ecx,0xd0d9a92c
  410252:	retf   0x2e8c
  410255:	inc    ebx
  410256:	xchg   esp,eax
  410257:	sar    BYTE PTR [eax],0xad
  41025a:	rcl    ah,cl
  41025c:	mov    ebp,0xf3857730
  410261:	test   DWORD PTR ds:0x8d14b001,esi
  410267:	cmc    
  410268:	cs jle 0x4102b8
  41026b:	aaa    
  41026c:	cmp    al,0x10
  41026e:	push   ds
  41026f:	(bad)  
  410271:	in     al,0x6f
  410273:	sbb    BYTE PTR [ebp+ebp*8-0x67f7d832],0x64
  41027b:	(bad)  
  41027c:	out    dx,al
  41027d:	sub    ecx,DWORD PTR [ebx+ebx*1-0x43]
  410281:	jnp    0x410260
  410283:	mov    BYTE PTR [ebp-0x36],al
  410286:	clc    
  410287:	das    
  410288:	push   ebx
  410289:	clc    
  41028a:	adc    BYTE PTR [eax-0x77058002],bl
  410290:	or     BYTE PTR ds:0x2290e577,cl
  410296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410297:	mov    BYTE PTR [ebx-0x2eeeeece],ah
  41029d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41029e:	data16 xor bh,BYTE PTR [edi+0x75963ec9]
  4102a5:	stos   DWORD PTR es:[edi],eax
  4102a6:	idiv   bh
  4102a8:	test   DWORD PTR [eax+0x559aae62],edi
  4102ae:	mov    al,ds:0x4d7ae8d9
  4102b3:	sbb    al,0x87
  4102b5:	push   es
  4102b6:	aaa    
  4102b7:	fiadd  WORD PTR [esi-0x1f6bbf9b]
  4102bd:	pop    ss
  4102be:	jecxz  0x410257
  4102c0:	adc    eax,0x30bc1b9b
  4102c5:	(bad)  
  4102c6:	enter  0xf8c6,0x25
  4102ca:	xor    BYTE PTR [esi-0x4757c505],dh
  4102d0:	mov    ds:0x153cf073,al
  4102d5:	jae    0x4102e5
  4102d7:	(bad)  
  4102d8:	das    
  4102d9:	jns    0x41031e
  4102db:	out    0xc1,al
  4102dd:	scas   al,BYTE PTR es:[edi]
  4102de:	stos   DWORD PTR es:[edi],eax
  4102df:	test   DWORD PTR [eax+0x4ef95652],edx
  4102e5:	push   ss
  4102e6:	jnp    0x410311
  4102e8:	fisttp WORD PTR [ecx+0x231be4d4]
  4102ee:	cmp    cl,ah
  4102f0:	jne    0x41030c
  4102f2:	je     0x4102b0
  4102f4:	in     eax,0xdf
  4102f6:	rcr    BYTE PTR [esi+esi*8-0x2c],cl
  4102fa:	std    
  4102fb:	std    
  4102fc:	pushf  
  4102fd:	cwde   
  4102fe:	inc    ebx
  4102ff:	mov    ah,0x8f
  410301:	xor    BYTE PTR [ebp+0x3c4d2cc0],bl
  410307:	mov    ebx,0x495e6449
  41030c:	or     BYTE PTR [eax+0x12],0xf0
  410310:	mov    ebp,0xb6b7dc6c
  410315:	out    dx,al
  410316:	pop    ds
  410317:	cwde   
  410318:	repz popa 
  41031a:	and    ebx,esp
  41031c:	or     DWORD PTR [ebp+0x45],eax
  41031f:	cmp    DWORD PTR [eax],0x16fe5c24
  410325:	jmp    0x8f00:0x60941742
  41032c:	sub    BYTE PTR [edi],0xab
  41032f:	xchg   ecx,eax
  410330:	popf   
  410331:	push   ecx
  410332:	mov    ebx,0x99884454
  410337:	mov    esp,DWORD PTR [edx]
  410339:	pop    ebx
  41033a:	pop    ebp
  41033b:	cmp    ecx,DWORD PTR [eax+0x3]
  41033e:	pushf  
  41033f:	push   es
  410340:	(bad)  
  410341:	or     DWORD PTR [ecx],ecx
  410343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410344:	loopne 0x4103b0
  410346:	aam    0xd3
  410348:	outs   dx,DWORD PTR ds:[esi]
  410349:	push   edx
  41034a:	mov    esi,0x5d38a640
  41034f:	imul   ecx,DWORD PTR [ebp-0x54821e1b],0x13c68209
  410359:	call   0xddc9:0x9f18a852
  410360:	xor    DWORD PTR [edx-0x3d6a93b3],ebx
  410366:	or     al,0xf0
  410368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410369:	fiadd  WORD PTR [ebx]
  41036b:	or     bl,BYTE PTR [eiz*1-0xf3e1848]
  410372:	inc    esi
  410373:	jg     0x4103a6
  410375:	sub    edx,DWORD PTR [eax-0x160046a5]
  41037b:	gs xchg esp,eax
  41037d:	iret   
  41037e:	sub    eax,0xfb8ec7bb
  410383:	pop    ds
  410384:	push   ebx
  410385:	jbe    0x41038b
  410387:	add    al,0x42
  410389:	cld    
  41038a:	pop    ebp
  41038b:	shr    DWORD PTR [ecx+0x681fb249],0x75
  410392:	pusha  
  410393:	fcom   st(2)
  410395:	test   BYTE PTR [eax+0x63e1f044],dh
  41039b:	mov    ch,0x14
  41039d:	dec    eax
  41039e:	ret    0x1abf
  4103a1:	std    
  4103a2:	adc    bl,BYTE PTR [ecx-0x64]
  4103a5:	mov    edi,0xb06dff7e
  4103aa:	sub    BYTE PTR [esi-0x200dc1b9],dl
  4103b0:	das    
  4103b1:	mov    ds:0xb36a131c,al
  4103b6:	(bad)  
  4103b7:	cmp    dl,BYTE PTR ds:0xed5e4827
  4103bd:	out    dx,eax
  4103be:	mov    esi,0x891a8699
  4103c3:	sbb    eax,0x8c08fa98
  4103c8:	and    eax,0xded352e9
  4103cd:	jo     0x4103cd
  4103cf:	jmp    0x20dafaeb
  4103d4:	fisub  DWORD PTR [ebp+0x79b967d8]
  4103da:	int    0x5b
  4103dc:	(bad)  
  4103de:	jg     0x410453
  4103e0:	xlat   BYTE PTR ds:[ebx]
  4103e1:	jmp    0x24932423
  4103e6:	xor    bh,BYTE PTR [ebx+0x3d7682db]
  4103ec:	(bad)  
  4103ed:	test   al,0x6
  4103ef:	pop    esp
  4103f0:	pusha  
  4103f1:	xor    DWORD PTR [ebx],esp
  4103f3:	pop    esp
  4103f5:	push   eax
  4103f6:	icebp  
  4103f7:	jp     0x41041f
  4103f9:	and    cl,ah
  4103fb:	dec    ecx
  4103fc:	mov    dh,0x72
  4103fe:	int3   
  4103ff:	pandn  mm7,QWORD PTR [ebx+0x38]
  410403:	pop    eax
  410404:	adc    DWORD PTR [eax+0x54],esp
  410407:	xchg   esi,eax
  410408:	ret    0xda2e
  41040b:	cs push ebx
  41040d:	sti    
  41040e:	mov    ebx,DWORD PTR cs:[ebp-0x5664fdb0]
  410415:	xor    eax,ebx
  410417:	mov    ds:0x62ef973a,eax
  41041c:	xchg   BYTE PTR [eax+0x19],dh
  41041f:	cdq    
  410420:	lahf   
  410421:	inc    esi
  410422:	pusha  
  410423:	add    BYTE PTR [edi+edx*1+0x15a6dac5],bl
  41042a:	jecxz  0x410411
  41042c:	pusha  
  41042d:	adc    BYTE PTR ss:[edx],ch
  410430:	adc    bh,BYTE PTR ds:0xa16d2f6c
  410436:	shr    DWORD PTR [esi],cl
  410438:	mov    WORD PTR [edi+0x41b185fd],fs
  41043e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043f:	int    0xa3
  410441:	mov    cl,0xd2
  410443:	fs loope 0x410430
  410446:	pop    di
  410448:	repnz cmp WORD PTR [ebx+0x5976ff44],0xffea
  410451:	out    dx,eax
  410452:	mov    ebx,0xd7b50db3
  410457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410458:	es mov bl,0x5a
  41045b:	sub    ch,BYTE PTR [ebx+0x28630538]
  410461:	aaa    
  410462:	cmp    DWORD PTR [edi+ebp*1+0x79],ebx
  410466:	add    al,0xf9
  410468:	jl     0x41047f
  41046a:	sub    eax,0x1202f7c9
  41046f:	cmp    BYTE PTR [ebx+eiz*8],dh
  410472:	xchg   ah,bh
  410474:	dec    ebx
  410475:	and    eax,DWORD PTR [eax+edi*1-0x4f]
  410479:	push   cs
  41047a:	push   edi
  41047b:	mov    WORD PTR [ecx+0x27c9e7b4],fs
  410481:	not    eax
  410483:	xchg   edi,eax
  410484:	cmp    al,0x29
  410486:	stos   BYTE PTR es:[edi],al
  410487:	jecxz  0x41042f
  410489:	pop    esi
  41048a:	xchg   BYTE PTR [edx-0x1b],al
  41048d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41048e:	sbb    DWORD PTR [ebp+0x58f71f6e],ebx
  410494:	mov    esi,0xcb413d8d
  410499:	add    DWORD PTR [edi-0x268614ef],ebx
  41049f:	adc    eax,0x724bafb3
  4104a4:	adc    eax,0xea310f4e
  4104a9:	add    edx,DWORD PTR [eax+ebp*8+0x3f]
  4104ad:	sub    eax,0x9fb53fa0
  4104b2:	bound  edi,QWORD PTR [ecx-0x6ed2209]
  4104b8:	sub    cl,al
  4104ba:	adc    ax,0x4f28
  4104be:	and    BYTE PTR [edi],dh
  4104c0:	loop   0x4104db
  4104c2:	pusha  
  4104c3:	sti    
  4104c4:	dec    ecx
  4104c5:	popf   
  4104c6:	push   esp
  4104c7:	cli    
  4104c8:	out    dx,al
  4104c9:	imul   esi,DWORD PTR [ecx-0x1e],0xffffffcc
  4104cd:	jo     0x4104e6
  4104cf:	aaa    
  4104d0:	sbb    dl,dl
  4104d2:	in     al,0xa9
  4104d4:	retf   
  4104d5:	mov    edi,0x89bfd451
  4104da:	in     eax,0x6
  4104dc:	scas   eax,DWORD PTR es:[edi]
  4104dd:	and    ah,BYTE PTR ds:0x744609a5
  4104e3:	(bad)  
  4104e4:	xor    al,0xd2
  4104e6:	adc    BYTE PTR [esi+0x2d665df1],ah
  4104ec:	into   
  4104ed:	cmp    dh,bl
  4104ef:	arpl   cx,bx
  4104f1:	aad    0xd3
  4104f3:	(bad)  
  4104f4:	mov    ecx,0x178ea231
  4104f9:	jb     0x4104a9
  4104fb:	ins    BYTE PTR es:[edi],dx
  4104fc:	mov    al,0x88
  4104fe:	scas   eax,DWORD PTR es:[edi]
  4104ff:	sbb    DWORD PTR [ecx+0x1],ebx
  410502:	xor    edx,ebx
  410504:	mov    bh,0x17
  410506:	or     DWORD PTR [edx-0x39c3dec4],edi
  41050c:	(bad)  
  41050d:	out    dx,al
  41050e:	add    dl,BYTE PTR [ecx]
  410510:	mov    eax,ds:0xf769857e
  410515:	popa   
  410516:	data16 ja 0x410503
  410519:	cmp    edx,DWORD PTR [eax-0x17a27859]
  41051f:	add    bl,ah
  410521:	xchg   esp,eax
  410522:	mov    al,ds:0x491a44b6
  410527:	jle    0x4104d3
  410529:	fnsave [esi-0x54cddc23]
  41052f:	lds    esp,FWORD PTR [edx+0x62]
  410532:	mov    edi,0x323e7d35
  410537:	push   0xffffffb6
  410539:	mov    BYTE PTR ds:0x716dc7d3,ch
  41053f:	jg     0x4105bd
  410541:	jne    0x4105a6
  410543:	cmp    eax,0xbf8e2aee
  410548:	mov    dl,0xe3
  41054a:	mov    BYTE PTR [ebx+0xf862fff],ch
  410550:	stc    
  410551:	xor    eax,ebp
  410553:	lea    esp,[edi+0x48]
  410556:	adc    ecx,esi
  410558:	(bad)  
  410559:	xchg   esi,eax
  41055a:	sbb    eax,0xba491268
  41055f:	sbb    DWORD PTR ds:0x3aa9c96,esp
  410565:	in     al,0x56
  410567:	mov    ch,0xe6
  410569:	sub    eax,0xea148779
  41056e:	nop
  41056f:	xor    BYTE PTR [esp+eiz*2],cl
  410572:	test   eax,0xc564a122
  410577:	loopne 0x410533
  410579:	xchg   ebx,eax
  41057a:	jmp    0x410549
  41057c:	mov    ebx,DWORD PTR [ebx]
  41057e:	xchg   al,al
  410580:	(bad)  
  410581:	inc    esp
  410582:	jecxz  0x4105b2
  410584:	scas   al,BYTE PTR es:[edi]
  410585:	pop    ss
  410586:	push   edx
  410587:	out    dx,eax
  410588:	jg     0x41051a
  41058a:	jmp    0x94d263c1
  41058f:	shl    BYTE PTR ds:0x70bf49e,cl
  410595:	imul   ebx,DWORD PTR ss:[ecx+eiz*8-0x37],0x6537ad23
  41059e:	and    al,0xf9
  4105a0:	data16 loopne 0x4105ee
  4105a3:	aaa    
  4105a4:	gs mov ecx,0x3c707dda
  4105aa:	push   0xcdb31bb2
  4105af:	dec    ebx
  4105b0:	push   ds
  4105b1:	mov    ch,0x2d
  4105b3:	fnstenv [ecx]
  4105b5:	and    bh,BYTE PTR [ecx+0x6cd8a853]
  4105bb:	ds out dx,al
  4105bd:	jb     0x4105de
  4105bf:	test   al,0x3c
  4105c1:	mov    eax,gs
  4105c3:	les    esp,FWORD PTR [ebp+0x221c3f43]
  4105c9:	ins    BYTE PTR es:[edi],dx
  4105ca:	icebp  
  4105cb:	sub    eax,0x9c983d72
  4105d0:	dec    eax
  4105d1:	xor    bl,dl
  4105d3:	mov    DWORD PTR [ebx-0x6e],edx
  4105d6:	xchg   ebp,eax
  4105d7:	and    edx,DWORD PTR [eax]
  4105d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105da:	aaa    
  4105db:	mov    bh,0xbe
  4105dd:	cs adc esp,DWORD PTR es:[edx-0x314ff362]
  4105e5:	ds pop esp
  4105e7:	mov    ebx,0xdf6d49e3
  4105ec:	jecxz  0x4105c1
  4105ee:	(bad)  
  4105ef:	(bad)  
  4105f0:	jmp    0x410614
  4105f2:	mov    BYTE PTR [edx],dh
  4105f4:	add    esi,DWORD PTR gs:[ebp-0x24]
  4105f8:	jp     0x410651
  4105fa:	or     al,ah
  4105fc:	jge    0x410583
  4105fe:	jne    0x41067f
  410600:	jge    0x410622
  410602:	std    
  410603:	or     BYTE PTR [esi],dl
  410605:	jbe    0x41059c
  410607:	fadd   DWORD PTR [edi-0x79]
  41060a:	ds dec eax
  41060c:	mov    DWORD PTR [ebx-0x79],ecx
  41060f:	inc    ebp
  410611:	dec    edi
  410612:	rcr    DWORD PTR [edx+0x2c],1
  410615:	xchg   BYTE PTR [edx+0x73],dl
  410618:	and    dh,ah
  41061a:	sub    DWORD PTR [edx],edx
  41061c:	dec    eax
  41061d:	imul   DWORD PTR [ebp+0x14]
  410620:	push   esp
  410621:	push   esp
  410622:	les    edx,FWORD PTR [esi]
  410624:	mov    dl,0xf8
  410626:	xor    cl,BYTE PTR [edx]
  410628:	inc    esi
  410629:	xchg   edx,eax
  41062a:	mov    BYTE PTR [edi+edx*8+0x64849449],bh
  410631:	dec    esp
  410632:	dec    esi
  410633:	sti    
  410634:	ins    BYTE PTR es:[edi],dx
  410635:	pop    es
  410636:	inc    ecx
  410637:	shl    DWORD PTR [eax+0x6ccfad8c],0x20
  41063e:	lock push ebp
  410640:	xor    edi,DWORD PTR [edx+0xd09d5b9]
  410646:	mov    esp,0xff5d5ff7
  41064b:	mov    ecx,0xf8c44e8b
  410650:	test   DWORD PTR [esi-0x28],0x72e39f38
  410657:	sahf   
  410658:	das    
  410659:	arpl   WORD PTR [edi-0x31559bc5],si
  41065f:	xchg   edi,eax
  410660:	mov    bh,0x54
  410662:	push   ebx
  410663:	mov    bl,0x20
  410665:	xlat   BYTE PTR ds:[ebx]
  410666:	sub    al,0xd9
  410668:	sbb    edi,DWORD PTR [ebp-0x6a]
  41066b:	imul   eax,DWORD PTR [ebp+0xf],0xffffffe7
  41066f:	in     eax,dx
  410670:	add    al,0xe3
  410672:	out    0xd1,al
  410674:	and    eax,0x5a868e49
  410679:	rcr    DWORD PTR [eax+0x49],1
  41067c:	shr    BYTE PTR [esi],1
  41067e:	sti    
  41067f:	mov    ?,WORD PTR [edi+0xa1318d2]
  410685:	cmp    al,0xca
  410687:	daa    
  410688:	faddp  st(5),st
  41068a:	mov    bl,0xb0
  41068c:	jge    0x4106c6
  41068e:	adc    ah,dh
  410690:	adc    eax,0xaa4dd66a
  410695:	adc    al,0x61
  410697:	test   bl,dh
  410699:	sub    BYTE PTR [ebx+eax*8+0x43],dh
  41069d:	sahf   
  41069e:	out    0xe2,eax
  4106a0:	enter  0x307a,0x4f
  4106a4:	loopne 0x4106c7
  4106a6:	sti    
  4106a7:	sahf   
  4106a8:	pmuludq mm4,QWORD PTR [ebp-0xf6d6854]
  4106af:	push   cs
  4106b0:	mov    ecx,0xaf8e16c7
  4106b5:	adc    al,0xe0
  4106b7:	and    BYTE PTR [ebx+0x2],ch
  4106ba:	jbe    0x4106a6
  4106bc:	jmp    0xca99425
  4106c1:	or     al,0xa2
  4106c3:	mov    ?,WORD PTR [edx]
  4106c5:	daa    
  4106c6:	imul   esi,DWORD PTR [ebp-0x3b],0x52
  4106ca:	inc    edi
  4106cb:	jbe    0x410717
  4106cd:	or     ch,BYTE PTR [edx+eax*4+0x1d]
  4106d1:	add    eax,0x5359db78
  4106d6:	pop    edi
  4106d7:	mov    ecx,0x658362d9
  4106dc:	jmp    ebx
  4106de:	jns    0x4106ef
  4106e0:	cmp    eax,esp
  4106e2:	test   BYTE PTR [edi],cl
  4106e4:	retf   
  4106e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e6:	adc    al,0xc4
  4106e8:	cmp    eax,0x11538248
  4106ed:	inc    esi
  4106ee:	cmp    al,0xbc
  4106f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f1:	ret    0xdeb9
  4106f4:	and    bh,BYTE PTR [ebp-0x10]
  4106f7:	stc    
  4106f8:	cmp    DWORD PTR [ebx-0x3d],0x23
  4106fc:	push   0x4a
  4106fe:	in     eax,dx
  4106ff:	adc    al,0xce
  410701:	aam    0x39
  410703:	icebp  
  410704:	xor    DWORD PTR [esi+0x594b95ae],esp
  41070a:	adc    ecx,DWORD PTR [esi+0x2473b2cf]
  410710:	xchg   esp,eax
  410711:	xchg   BYTE PTR [ebp+0x743df75b],bh
  410717:	push   0x5
  410719:	ret    0xe0e1
  41071c:	xor    eax,DWORD PTR [eax]
  41071e:	aas    
  41071f:	add    ecx,DWORD PTR [edi-0xfaebaef]
  410725:	or     ah,BYTE PTR [edi-0x5c898ed4]
  41072b:	jno    0x41078b
  41072d:	lods   al,BYTE PTR ds:[esi]
  41072e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41072f:	or     eax,0x8476d88f
  410734:	push   ss
  410735:	mov    ss,WORD PTR [esi]
  410737:	ret    
  410738:	icebp  
  410739:	or     DWORD PTR [edi],0xe0f70422
  41073f:	cmc    
  410740:	mov    eax,0xf31ef94d
  410745:	jle    0x4107a7
  410747:	push   es
  410748:	jbe    0x4106e3
  41074a:	mov    esi,0x457248ff
  41074f:	out    dx,eax
  410750:	icebp  
  410751:	adc    eax,0xb30fd6a
  410756:	jno    0x41073a
  410758:	nop
  410759:	ss gs or eax,0x6f49a81b
  410760:	pop    ebp
  410761:	sub    eax,0xf66b948a
  410766:	sbb    al,0x61
  410768:	fisub  DWORD PTR [eax+ebp*8-0x216c111b]
  41076f:	aam    0x68
  410771:	sahf   
  410772:	jno    0x41071b
  410774:	(bad)  
  410775:	ret    
  410776:	cmp    al,al
  410778:	jle    0x41070d
  41077a:	cwde   
  41077b:	or     eax,0xa3c460a7
  410780:	lds    edx,FWORD PTR [ecx+0x2f]
  410783:	stos   DWORD PTR es:[edi],eax
  410784:	lods   eax,DWORD PTR ds:[esi]
  410785:	sbb    al,0x49
  410787:	ss out 0x60,al
  41078a:	retf   
  41078b:	and    bl,al
  41078d:	paddsw mm5,QWORD PTR [ebx-0x29]
  410791:	jbe    0x41073f
  410793:	mov    bh,0x1c
  410795:	call   DWORD PTR [edi-0x1]
  410798:	or     edi,0x556ddb4
  41079e:	mov    al,0xbf
  4107a0:	fwait
  4107a1:	lods   eax,DWORD PTR ds:[esi]
  4107a2:	sub    ebp,edx
  4107a4:	wrmsr  
  4107a6:	push   ds
  4107a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a8:	mov    esp,0x378c7968
  4107ad:	jge    0x4107a7
  4107af:	sbb    al,0x36
  4107b1:	adc    DWORD PTR [eax+edi*2],ecx
  4107b4:	lods   eax,DWORD PTR ds:[esi]
  4107b5:	pop    ds
  4107b6:	rcr    al,0x50
  4107b9:	(bad)  
  4107ba:	push   ebx
  4107bb:	das    
  4107bc:	(bad)  
  4107bd:	(bad)  
  4107be:	xor    BYTE PTR [ebp+edi*1+0x56107b52],0x1c
  4107c6:	jne    0x410767
  4107c8:	ins    BYTE PTR es:[edi],dx
  4107c9:	inc    eax
  4107ca:	mov    ecx,0x6339aa41
  4107cf:	adc    DWORD PTR [edx],0x9cc298f4
  4107d5:	push   ecx
  4107d6:	loope  0x4107b1
  4107d8:	mov    esp,0xee375329
  4107dd:	std    
  4107de:	mov    bl,0xf7
  4107e0:	inc    edx
  4107e1:	fucom  st(1)
  4107e3:	stos   DWORD PTR es:[edi],eax
  4107e4:	xchg   esi,eax
  4107e5:	cmp    al,BYTE PTR [ebp-0x80]
  4107e8:	cld    
  4107e9:	rsm    
  4107eb:	mov    esi,0x6093cec
  4107f0:	ins    BYTE PTR es:[edi],dx
  4107f1:	jmp    0x324e:0xcb30a8ca
  4107f8:	jmp    0x4107a1
  4107fa:	leave  
  4107fb:	stc    
  4107fc:	cli    
  4107fd:	xchg   DWORD PTR [ebx],esp
  4107ff:	mov    esi,0x7a6ff1b1
  410804:	xchg   ecx,eax
  410805:	push   0xffffff8b
  410807:	sbb    ecx,0x4d
  41080a:	popw   ss
  41080c:	fsubr  QWORD PTR [edi-0x7b9f3a02]
  410812:	pop    edi
  410813:	or     eax,0x3a3a3785
  410818:	aaa    
  410819:	cmp    al,0xb5
  41081b:	cs pop edx
  41081d:	mov    al,bh
  41081f:	inc    edi
  410820:	mov    dh,0x3
  410822:	std    
  410823:	popa   
  410824:	jb     0x410831
  410826:	jge    0x410867
  410828:	test   al,0x14
  41082a:	mov    BYTE PTR [ecx],bh
  41082c:	mov    dl,0x7c
  41082e:	pop    ss
  41082f:	fidiv  DWORD PTR [eax+0x5e]
  410832:	sub    ebp,DWORD PTR [edi+0x65]
  410835:	ins    BYTE PTR es:[edi],dx
  410836:	xchg   ebp,eax
  410837:	mov    ebx,DWORD PTR [ebx]
  410839:	aam    0x72
  41083b:	push   0x1464ea30
  410840:	dec    ecx
  410841:	mov    edi,esp
  410843:	retf   
  410844:	jmp    0x90ba1acf
  410849:	mov    bh,0x18
  41084b:	pop    eax
  41084c:	or     DWORD PTR [edi],0x4a
  41084f:	loop   0x410809
  410851:	dec    esi
  410852:	mov    esp,0xdb3c7bfe
  410857:	or     eax,0xd0d674ab
  41085c:	inc    esp
  41085d:	push   ecx
  41085e:	mov    ebx,0x64d330e4
  410863:	neg    DWORD PTR [ebx+esi*2+0x52]
  410867:	pop    edi
  410868:	pop    eax
  410869:	in     eax,dx
  41086a:	lds    ecx,FWORD PTR [ecx+0x78b218ee]
  410870:	add    al,0x40
  410872:	pop    ds
  410873:	imul   esp,DWORD PTR [ebp+0x5f],0x71
  410877:	push   ecx
  410878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410879:	add    DWORD PTR [ecx+0x23],edi
  41087c:	add    BYTE PTR [edx-0x32],ch
  41087f:	mov    al,0xbc
  410881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410882:	jp     0x4108fe
  410884:	mov    ah,0x98
  410886:	push   0xcbde3c39
  41088b:	lods   al,BYTE PTR ds:[esi]
  41088c:	pop    es
  41088d:	pop    esp
  41088e:	mov    esp,0xc369cb01
  410893:	ja     0x410892
  410895:	out    0xa,al
  410897:	jg     0x4108b9
  410899:	sahf   
  41089a:	xor    cl,BYTE PTR [eax]
  41089c:	aas    
  41089d:	loope  0x4108da
  41089f:	or     DWORD PTR [ecx],0xffffffd0
  4108a2:	mov    esi,0x9cedefff
  4108a7:	out    dx,eax
  4108a8:	push   esi
  4108a9:	jge    0x4108d8
  4108ab:	sbb    eax,0x5e1498c
  4108b0:	pop    esp
  4108b1:	mov    eax,ds:0x50216a67
  4108b6:	iret   
  4108b7:	and    ecx,DWORD PTR [edx]
  4108b9:	jns    0x4108c6
  4108bb:	xchg   ebp,eax
  4108bc:	push   cs
  4108bd:	jbe    0x41085f
  4108bf:	pop    ss
  4108c0:	or     al,BYTE PTR [ecx]
  4108c2:	xchg   esp,eax
  4108c3:	mov    WORD PTR [edi+0x22390094],?
  4108c9:	in     eax,dx
  4108ca:	mov    ch,0xf5
  4108cc:	mov    ch,0xed
  4108ce:	xor    esp,ebx
  4108d0:	sub    ebp,DWORD PTR [ebp-0x5c]
  4108d3:	dec    esi
  4108d4:	add    ch,BYTE PTR [esi+0x76ad71b3]
  4108da:	add    BYTE PTR ds:0x5ffec327,bl
  4108e0:	xchg   ebx,eax
  4108e1:	outs   dx,BYTE PTR ds:[esi]
  4108e2:	lds    ecx,FWORD PTR [edx+0x36ab83c1]
  4108e8:	enter  0x3446,0x59
  4108ec:	dec    ecx
  4108ed:	add    BYTE PTR [esi+0x13ee8afe],cl
  4108f3:	mov    cl,0x50
  4108f5:	shr    DWORD PTR [edi],1
  4108f7:	mov    ebp,0x6ebc8732
  4108fc:	jp     0x4108f0
  4108fe:	or     al,0x2d
  410900:	rcl    BYTE PTR [edx+0x9],1
  410903:	mov    esi,0xfc0c451f
  410908:	add    ebp,DWORD PTR [ebp+edi*1+0x5c28fc02]
  41090f:	enter  0xc2e1,0x68
  410913:	pusha  
  410914:	ret    
  410915:	jns    0x4108b1
  410917:	in     al,0x24
  410919:	gs adc al,0x65
  41091c:	push   0xb0b28ffb
  410921:	mov    ebx,0x4dd7c274
  410926:	add    al,0x0
  410929:	out    0x27,al
  41092b:	push   esp
  41092c:	clc    
  41092d:	or     DWORD PTR [ebx-0x3f8d7b52],eax
  410933:	xor    cl,ch
  410935:	pop    eax
  410936:	pusha  
  410937:	sub    ecx,eax
  410939:	ret    
  41093a:	inc    ecx
  41093b:	adc    ecx,DWORD PTR ds:0x737f256c
  410941:	pop    ds
  410942:	mov    bl,0x96
  410944:	push   esi
  410945:	fidiv  DWORD PTR [eax+0x1a95c10b]
  41094b:	(bad)  
  41094c:	iret   
  41094d:	pop    esp
  41094e:	dec    esp
  41094f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410950:	xchg   BYTE PTR [ecx+ecx*8-0x14],bl
  410954:	and    DWORD PTR [ebx-0xeec0061],edx
  41095a:	int    0x1b
  41095c:	add    BYTE PTR [esi+0x474fbdcc],0x96
  410963:	mov    al,0x7c
  410965:	test   BYTE PTR [edx+0x5a],ch
  410968:	jecxz  0x410922
  41096a:	push   ebp
  41096b:	aas    
  41096c:	fstp   TBYTE PTR [edi-0x70]
  41096f:	xchg   ecx,eax
  410970:	add    BYTE PTR [edx+eax*1+0x33525ad3],bl
  410977:	xchg   ecx,eax
  410978:	mov    eax,eax
  41097a:	(bad)  
  41097b:	fsub   st,st(5)
  41097d:	mov    ds:0x8a50f7a4,eax
  410982:	xchg   ebp,eax
  410983:	daa    
  410984:	fild   WORD PTR [esi]
  410986:	mov    edi,0x438945f2
  41098b:	mov    DWORD PTR [edi-0x452569cf],0xb16858ee
  410995:	add    DWORD PTR es:[edx+0x2675ffe8],eax
  41099c:	pop    es
  41099d:	in     eax,0xee
  41099f:	dec    eax
  4109a0:	mov    bh,0x7f
  4109a2:	add    edi,DWORD PTR [ecx+0x6c]
  4109a5:	leave  
  4109a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109a7:	(bad)  
  4109a9:	xchg   ebp,eax
  4109aa:	pop    eax
  4109ab:	push   esi
  4109ac:	(bad)  
  4109ad:	jg     0x410931
  4109af:	mov    al,ds:0xb2a4f36f
  4109b4:	out    dx,eax
  4109b5:	dec    ecx
  4109b6:	xchg   edx,eax
  4109b7:	test   eax,0xcbfc5930
  4109bd:	xor    dl,BYTE PTR [edi]
  4109bf:	pop    ss
  4109c0:	not    BYTE PTR [edi-0x6a5f0670]
  4109c6:	sub    BYTE PTR [esi+0x2b94aff0],bh
  4109cc:	add    eax,0x5493c20
  4109d1:	hlt    
  4109d2:	in     eax,0xad
  4109d4:	out    dx,eax
  4109d5:	mov    edi,0x330a6043
  4109da:	mov    ebx,0xb5379276
  4109df:	and    eax,0x2af9ad28
  4109e4:	fsubr  DWORD PTR [ebx+0x67a4ba16]
  4109ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109eb:	(bad)  
  4109ec:	sub    cl,BYTE PTR [esi-0x25]
  4109ef:	enter  0x1953,0xb6
  4109f3:	(bad)  
  4109f4:	xor    cl,BYTE PTR [ebp+0x42]
  4109f7:	add    eax,0xee1e49f1
  4109fc:	mov    edx,0xede5e971
  410a01:	push   ebp
  410a02:	(bad)  
  410a03:	(bad)  
  410a04:	aaa    
  410a05:	loopne 0x410a78
  410a07:	lds    ecx,FWORD PTR [eax]
  410a09:	xchg   BYTE PTR ss:[eax],dh
  410a0c:	adc    BYTE PTR [edx-0x6b],dh
  410a0f:	adc    BYTE PTR [eax+0x56138fb1],dh
  410a15:	sahf   
  410a16:	lea    esi,[ecx]
  410a18:	add    edx,ecx
  410a1a:	add    eax,0xad1ca2d2
  410a1f:	xchg   ecx,eax
  410a20:	hlt    
  410a21:	cmp    esp,DWORD PTR [edi+0x53cb6d57]
  410a27:	mov    bl,0x2a
  410a29:	xor    DWORD PTR [eax],esi
  410a2b:	jae    0x4109d6
  410a2d:	imul   esi,DWORD PTR [ebx+0x16d94cad],0x4983b84b
  410a37:	jo     0x410a7c
  410a39:	mov    dh,al
  410a3b:	mov    ds:0x34fc33a6,eax
  410a40:	scas   al,BYTE PTR es:[edi]
  410a41:	in     al,0xa
  410a43:	jle    0x410a62
  410a45:	mov    edi,0x9508be41
  410a4a:	loope  0x410a63
  410a4c:	cwde   
  410a4d:	add    ch,BYTE PTR [ebp-0x4c]
  410a50:	pop    ebx
  410a51:	sbb    bl,BYTE PTR ds:0xb57c9201
  410a57:	add    al,0xd4
  410a59:	sbb    DWORD PTR [ecx+esi*8],esi
  410a5c:	js     0x410a7e
  410a5e:	mov    al,ds:0xfc5711d5
  410a63:	in     al,dx
  410a64:	add    al,0x84
  410a66:	jecxz  0x410a57
  410a68:	mov    ds,WORD PTR [ecx+0x14d5b9fc]
  410a6e:	bound  esi,QWORD PTR [ecx]
  410a70:	sar    BYTE PTR [esi],cl
  410a72:	ins    BYTE PTR es:[edi],dx
  410a73:	dec    esi
  410a74:	rcr    DWORD PTR [ecx+esi*4+0x6f],0x5b
  410a79:	fst    QWORD PTR [edi]
  410a7b:	loop   0x410a7b
  410a7d:	mov    eax,ds:0x2dca8ef2
  410a82:	dec    DWORD PTR [ebx+0x7d59b7bb]
  410a88:	add    ecx,DWORD PTR [eax+0x47]
  410a8b:	push   ds
  410a8c:	inc    BYTE PTR [ebx-0x24]
  410a8f:	sbb    BYTE PTR ds:0xed40612a,bl
  410a95:	mov    dl,0x43
  410a97:	lea    eax,[ecx]
  410a99:	or     eax,0x88b55bdc
  410a9e:	fcomp  QWORD PTR ds:0xd65abf70
  410aa4:	outs   dx,DWORD PTR ds:[esi]
  410aa5:	mul    BYTE PTR [eax+0x7]
  410aa8:	xor    BYTE PTR [eax+0x69],0x2
  410aac:	push   ebp
  410aad:	data16 fmul DWORD PTR [edx]
  410ab0:	cli    
  410ab1:	cli    
  410ab2:	mov    WORD PTR [ebp+0x5],cs
  410ab5:	bound  edx,QWORD PTR [ecx+esi*1+0x3c]
  410ab9:	pushf  
  410aba:	and    eax,DWORD PTR [ecx]
  410abc:	loopne 0x410a96
  410abe:	inc    ebp
  410abf:	jge    0x410abe
  410ac1:	imul   ecx,DWORD PTR [ebx],0xb
  410ac4:	jge    0x410a7f
  410ac6:	fstp   QWORD PTR [ebp+ebx*8-0x5b39a736]
  410acd:	retf   0xdb84
  410ad0:	xchg   esp,eax
  410ad1:	or     edx,DWORD PTR [edi-0x1d]
  410ad4:	inc    esp
  410ad5:	adc    bl,bl
  410ad7:	popa   
  410ad8:	add    al,0x5f
  410ada:	cs mov bh,0xdb
  410add:	push   esp
  410ade:	and    esi,DWORD PTR [ecx]
  410ae0:	(bad)  
  410ae1:	repz sti 
  410ae3:	xchg   edx,eax
  410ae4:	dec    ebx
  410ae5:	pop    eax
  410ae6:	pop    ss
  410ae7:	jg     0x410a7e
  410ae9:	sub    BYTE PTR [eax],al
  410aeb:	mov    al,0x8f
  410aed:	mov    eax,0xc5c2bd79
  410af2:	js     0x410ad7
  410af4:	sub    al,0x94
  410af6:	lods   al,BYTE PTR ds:[esi]
  410af7:	xor    edx,esp
  410af9:	xor    al,0x56
  410afb:	mov    ch,0x44
  410afd:	imul   eax,DWORD PTR [edx+0x7e],0x7789f05b
  410b04:	pop    esp
  410b05:	lea    edi,[edi-0x43b49735]
  410b0b:	cmp    cl,cl
  410b0d:	mov    edi,0x91a3923f
  410b12:	fldenv [edx]
  410b14:	mov    bh,0x46
  410b16:	push   ebp
  410b17:	imul   ch
  410b19:	push   cs
  410b1a:	or     al,0xb
  410b1c:	test   BYTE PTR [esi],dl
  410b1e:	xchg   esp,eax
  410b1f:	loop   0x410b1d
  410b21:	fstp   TBYTE PTR [eax]
  410b23:	adc    ebp,edx
  410b25:	repnz div BYTE PTR [ebp+0x76]
  410b29:	adc    edi,DWORD PTR [ebx]
  410b2b:	mov    ch,0x44
  410b2d:	sbb    DWORD PTR [ecx-0x26d18ff9],ebx
  410b33:	inc    ebx
  410b34:	jno    0x410b13
  410b36:	add    edi,DWORD PTR [eax+0x53]
  410b39:	mov    eax,ds:0x19f748af
  410b3e:	sbb    eax,0xa3d2381d
  410b43:	in     al,0x3
  410b45:	push   ds
  410b46:	sub    dh,BYTE PTR [ebx]
  410b48:	pop    ss
  410b49:	xor    bh,ah
  410b4b:	sbb    eax,esp
  410b4d:	bound  edi,QWORD PTR [ebp+0x34]
  410b50:	lea    esp,[edi-0x505356e9]
  410b56:	dec    esp
  410b57:	xor    edx,DWORD PTR [esi+0x4c]
  410b5a:	pop    es
  410b5b:	(bad)  
  410b5c:	ja     0x410b7e
  410b5e:	cmp    cl,0x31
  410b61:	(bad)  
  410b62:	jns    0x410b21
  410b64:	stos   DWORD PTR es:[edi],eax
  410b65:	(bad)  
  410b66:	cmc    
  410b67:	repz out dx,al
  410b69:	int3   
  410b6a:	loopne 0x410b1a
  410b6c:	fwait
  410b6d:	mov    WORD PTR [esi-0x80],es
  410b70:	mov    DWORD PTR [edi-0x2e],0x4a131ed1
  410b77:	push   cs
  410b78:	xchg   edi,eax
  410b79:	fwait
  410b7a:	outs   dx,DWORD PTR ds:[esi]
  410b7b:	cli    
  410b7c:	cdq    
  410b7d:	inc    edi
  410b7e:	lock aad 0x4b
  410b81:	mov    eax,ds:0x6d6590ec
  410b86:	mov    bl,0xd0
  410b88:	dec    edx
  410b89:	nop
  410b8a:	int    0x4
  410b8c:	sbb    eax,0xb2d3e8ed
  410b91:	jmp    0x410b57
  410b93:	mov    WORD PTR [eax+edi*1],gs
  410b96:	ss mov esi,0xe69c71c4
  410b9c:	je     0x410b28
  410b9e:	dec    eax
  410b9f:	out    dx,eax
  410ba0:	pop    esp
  410ba1:	cmp    bl,BYTE PTR [esp]
  410ba4:	jae    0x410b7a
  410ba6:	pusha  
  410ba7:	(bad)  
  410ba9:	jl     0x410bb2
  410bab:	lea    ecx,[edi-0x28]
  410bae:	jnp    0x410b9c
  410bb0:	adc    ebx,DWORD PTR [ebx]
  410bb2:	adc    eax,0xea341c30
  410bb7:	or     DWORD PTR ds:0x11e10c5,edx
  410bbd:	inc    ebp
  410bbe:	xor    al,0x41
  410bc0:	jno    0x410bff
  410bc2:	mov    eax,0x5cbf4345
  410bc7:	cwde   
  410bc8:	in     al,0xe2
  410bca:	jg     0x410b77
  410bcc:	fldenv [eax+esi*4]
  410bcf:	out    dx,eax
  410bd0:	and    DWORD PTR [edi-0x5247f30d],esp
  410bd6:	das    
  410bd7:	push   edx
  410bd8:	push   ebx
  410bd9:	and    ch,BYTE PTR [ebp-0x52]
  410bdc:	jg     0x410bd9
  410bde:	mov    edi,0xb6825e41
  410be3:	and    al,0x5e
  410be5:	cli    
  410be6:	in     eax,0xee
  410be8:	shr    bh,cl
  410bea:	test   BYTE PTR [esi-0x50113515],dh
  410bf0:	inc    sp
  410bf2:	and    ecx,ebp
  410bf4:	add    eax,DWORD PTR gs:[ebp+ecx*2+0x1a52eece]
  410bfc:	lock out 0x11,eax
  410bff:	sub    eax,0x64d007bb
  410c04:	out    dx,al
  410c05:	push   ebx
  410c06:	jl     0x410bfc
  410c08:	or     DWORD PTR [edx],eax
  410c0a:	call   0xe179:0x6956c4bd
  410c11:	dec    eax
  410c12:	jne    0x410be0
  410c14:	cdq    
  410c15:	je     0x410c0c
  410c17:	dec    ebx
  410c18:	hlt    
  410c19:	pop    edx
  410c1a:	sbb    BYTE PTR [ebp+0x9],bl
  410c1d:	arpl   WORD PTR [edi-0x6b7012b1],cx
  410c23:	icebp  
  410c24:	sti    
  410c25:	jp     0x410c4e
  410c27:	into   
  410c28:	in     eax,0x3b
  410c2a:	cwde   
  410c2b:	jmp    0x410bb6
  410c2d:	dec    eax
  410c2e:	push   esi
  410c2f:	sahf   
  410c30:	sub    eax,0x55be1839
  410c35:	and    esi,DWORD PTR [ebx]
  410c37:	mul    BYTE PTR [edi-0x61]
  410c3a:	test   al,0x79
  410c3c:	repnz push ebx
  410c3e:	mov    eax,0x3416a788
  410c43:	sbb    DWORD PTR [ecx+0xe],ecx
  410c46:	push   ebp
  410c47:	lods   eax,DWORD PTR ds:[esi]
  410c48:	fwait
  410c49:	das    
  410c4a:	add    eax,0xa87d6e17
  410c4f:	or     DWORD PTR [esi+0x3aa760d6],edx
  410c55:	push   sp
  410c57:	loope  0x410cce
  410c59:	(bad)  
  410c5a:	jmp    0x20ec:0x3ea2b9dd
  410c61:	stos   BYTE PTR es:[edi],al
  410c62:	mov    edx,0xfbffa7bf
  410c67:	inc    esp
  410c68:	popf   
  410c69:	iret   
  410c6a:	mov    edi,0x54e58cc9
  410c6f:	stos   BYTE PTR es:[edi],al
  410c70:	pusha  
  410c71:	cmp    dl,BYTE PTR [edx+0x6e]
  410c74:	shr    esp,1
  410c76:	sub    edi,DWORD PTR [ecx+0x7ddbc1c9]
  410c7c:	ret    0x512c
  410c7f:	lods   al,BYTE PTR ds:[esi]
  410c80:	pop    ss
  410c81:	and    al,0x66
  410c83:	int3   
  410c84:	out    0x95,eax
  410c86:	(bad)  
  410c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c88:	stos   DWORD PTR es:[edi],eax
  410c89:	fucomip st,st(2)
  410c8b:	add    edx,ecx
  410c8d:	jmp    0x410c57
  410c8f:	push   esp
  410c90:	out    0xe6,eax
  410c92:	aaa    
  410c93:	xchg   esp,eax
  410c94:	jg     0x410cb9
  410c96:	xchg   edi,eax
  410c97:	dec    ecx
  410c98:	(bad)  [esi+0x648a2014]
  410c9f:	addr16 (bad) 
  410ca1:	cmp    edx,DWORD PTR [edx-0x22]
  410ca4:	sbb    al,0xfe
  410ca6:	imul   ecx,DWORD PTR [ebp+edx*8+0x4e838130],0xaeb8e1dd
  410cb1:	lods   eax,DWORD PTR ds:[esi]
  410cb2:	out    dx,eax
  410cb3:	ret    0x5e4b
  410cb6:	clc    
  410cb7:	(bad)  
  410cb8:	sbb    WORD PTR [ebp-0x662e0f9f],bp
  410cbf:	lahf   
  410cc0:	push   edx
  410cc1:	fadd   DWORD PTR [ebp-0x3]
  410cc4:	setle  ah
  410cc7:	imul   edi,DWORD PTR [ecx],0x4b
  410cca:	inc    edi
  410ccb:	test   DWORD PTR ds:0xd24251d,0x4f7a2f1a
  410cd5:	or     DWORD PTR [ebp-0x4c],ebx
  410cd8:	sahf   
  410cd9:	add    ecx,ecx
  410cdb:	ret    
  410cdc:	xchg   ebx,eax
  410cdd:	mov    eax,0xb0e2b77d
  410ce2:	mov    bl,BYTE PTR [edx-0x4cb8763f]
  410ce8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ce9:	loopne 0x410c6f
  410ceb:	inc    esp
  410cec:	sbb    al,0x2d
  410cee:	pop    es
  410cef:	push   edx
  410cf0:	push   ds
  410cf1:	sbb    BYTE PTR [esi-0x46],bl
  410cf4:	shr    bl,0x7d
  410cf7:	add    BYTE PTR [edx+ecx*4-0x5b],ah
  410cfb:	sbb    BYTE PTR [esi+0x54264fb9],bh
  410d01:	push   esi
  410d02:	adc    al,0x63
  410d04:	lods   al,BYTE PTR ds:[esi]
  410d05:	sbb    al,0x36
  410d07:	lods   eax,DWORD PTR ds:[esi]
  410d08:	jnp    0x410cdb
  410d0a:	lods   al,BYTE PTR ds:[esi]
  410d0b:	push   0xc3cb2bd
  410d10:	adc    al,0x15
  410d12:	inc    edi
  410d13:	dec    esi
  410d14:	fndisi(8087 only) 
  410d16:	stc    
  410d17:	inc    al
  410d19:	cli    
  410d1a:	rol    bl,cl
  410d1c:	xchg   edi,eax
  410d1d:	pop    ebp
  410d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d1f:	adc    edi,edx
  410d21:	sbb    eax,0x5bb2b785
  410d26:	jae    0x410d91
  410d28:	xlat   BYTE PTR ds:[ebx]
  410d29:	repnz adc DWORD PTR [ebp-0x4b],esi
  410d2d:	adc    al,0xc7
  410d2f:	and    BYTE PTR [ebx+0x5aea9f7e],0x65
  410d36:	(bad)  
  410d37:	cmp    DWORD PTR [eax],ebx
  410d39:	enter  0xad82,0x81
  410d3d:	jne    0x410dbb
  410d3f:	mov    cl,0xa3
  410d41:	lahf   
  410d42:	fs inc eax
  410d44:	and    al,0xd
  410d46:	clc    
  410d47:	f2xm1  
  410d49:	and    eax,0x6b6590d8
  410d4e:	xchg   edi,eax
  410d4f:	sbb    al,0x78
  410d51:	push   ss
  410d52:	dec    ebp
  410d53:	dec    esp
  410d54:	sub    al,0x71
  410d56:	xor    bh,BYTE PTR [edi-0x13df63e1]
  410d5c:	aam    0x30
  410d5e:	rol    bl,0xb2
  410d61:	or     ah,BYTE PTR [eax]
  410d63:	or     eax,0x8422a228
  410d68:	ret    
  410d69:	or     esi,DWORD PTR [ebp+0x682b7d22]
  410d6f:	aaa    
  410d70:	mov    dl,0x4e
  410d72:	cwde   
  410d73:	aaa    
  410d74:	fst    DWORD PTR [edi+ebx*8+0x1e]
  410d78:	xor    BYTE PTR [edi+0x450dcee2],0xfe
  410d7f:	in     eax,dx
  410d80:	sti    
  410d81:	test   DWORD PTR [eax-0x71],edi
  410d84:	and    BYTE PTR [ebx],0x52
  410d87:	add    BYTE PTR [edi],dh
  410d89:	and    DWORD PTR [ebx-0x67495a13],edx
  410d8f:	add    BYTE PTR [edi],0xc1
  410d92:	or     edi,edx
  410d94:	arpl   WORD PTR ss:[ebx+esi*8],bp
  410d98:	lods   al,BYTE PTR ds:[esi]
  410d99:	lds    esp,FWORD PTR [ebx]
  410d9b:	sub    BYTE PTR [edi+0x2c],dh
  410d9e:	jbe    0x410d85
  410da0:	in     al,0x7b
  410da2:	push   ebx
  410da3:	loopne 0x410d37
  410da5:	mov    esi,0xede82fa2
  410daa:	mov    ebx,0xa5a172d3
  410daf:	gs inc esi
  410db1:	and    al,0x32
  410db3:	imul   ebp,eax,0xa682f240
  410db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dba:	cmp    eax,0xf2ed843c
  410dbf:	jge    0x410db7
  410dc1:	sahf   
  410dc2:	ins    BYTE PTR es:[edi],dx
  410dc3:	xlat   BYTE PTR ds:[ebx]
  410dc4:	dec    edx
  410dc5:	inc    ebx
  410dc6:	fmul   st,st(7)
  410dc8:	inc    edx
  410dc9:	sub    BYTE PTR [bp+0x52ee],al
  410dce:	sbb    BYTE PTR [ebx-0x3556565c],ch
  410dd4:	shl    DWORD PTR [edx+0x66],cl
  410dd7:	mov    bh,0xd8
  410dd9:	adc    DWORD PTR [ecx],ecx
  410ddb:	jbe    0x410e5b
  410ddd:	jno    0x410e2d
  410ddf:	push   edi
  410de0:	scas   al,BYTE PTR es:[edi]
  410de1:	jl     0x410dbb
  410de3:	lea    ebx,[edi+0x32c9c503]
  410de9:	jp     0x410dbf
  410deb:	jmp    0xa81c:0xaa195d8e
  410df2:	and    eax,ecx
  410df4:	jno    0x410e1a
  410df6:	les    esi,FWORD PTR [edi]
  410df8:	push   0xffffffe5
  410dfa:	or     eax,0x858f11d9
  410dff:	jbe    0x410d90
  410e01:	mov    al,0x3a
  410e03:	test   al,ch
  410e05:	mov    ds:0x105b27bb,eax
  410e0a:	xor    DWORD PTR [esi],0x60
  410e0d:	add    ecx,DWORD PTR [eax]
  410e0f:	jnp    0x410e36
  410e11:	pop    ss
  410e12:	mov    dh,0x98
  410e14:	jno    0x410e27
  410e16:	or     ebp,eax
  410e18:	cmp    DWORD PTR [edi+0x5270fb04],esp
  410e1e:	cmp    bh,BYTE PTR [edx]
  410e20:	in     al,0x70
  410e22:	iret   
  410e23:	xchg   ebx,eax
  410e25:	pop    esi
  410e26:	mov    al,0x7f
  410e28:	push   ecx
  410e29:	xchg   BYTE PTR [ecx-0x224974d4],dh
  410e2f:	aam    0x83
  410e31:	xor    DWORD PTR [ebx],ecx
  410e33:	scas   eax,DWORD PTR es:[edi]
  410e34:	cmp    bl,BYTE PTR [esi+0x26cdeefd]
  410e3a:	ins    DWORD PTR es:[edi],dx
  410e3b:	pop    ebx
  410e3c:	inc    ecx
  410e3d:	out    dx,al
  410e3e:	push   cs
  410e3f:	and    DWORD PTR [ebx],ebx
  410e41:	xchg   ebx,eax
  410e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e43:	pop    es
  410e44:	mov    ebp,0x9a78c270
  410e49:	xchg   ecx,eax
  410e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e4b:	fadd   st,st(7)
  410e4d:	push   eax
  410e4e:	jns    0x410e00
  410e50:	jnp    0x410e06
  410e52:	push   0xffffffa2
  410e54:	sub    BYTE PTR [eax+ebp*2-0x330ec48d],ah
  410e5b:	inc    eax
  410e5c:	cdq    
  410e5d:	mov    al,0x36
  410e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e60:	mov    dl,0x81
  410e62:	jns    0x410e8f
  410e64:	data16 aad 0x90
  410e67:	sti    
  410e68:	scas   al,BYTE PTR es:[edi]
  410e69:	jge    0x410e8f
  410e6b:	lea    ebx,[edi-0x94d4fd0]
  410e71:	out    dx,eax
  410e72:	out    0xe2,eax
  410e74:	inc    ecx
  410e75:	(bad)  
  410e76:	mov    BYTE PTR [edx-0x75],cl
  410e79:	pop    ebx
  410e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e7b:	lds    ebp,FWORD PTR [edi-0x2d]
  410e7e:	das    
  410e7f:	aas    
  410e80:	dec    ecx
  410e81:	pushf  
  410e82:	mov    ds:0x110ab448,al
  410e87:	xchg   ebx,eax
  410e88:	sub    al,0x12
  410e8a:	push   edx
  410e8b:	inc    esp
  410e8c:	dec    ecx
  410e8d:	pop    esi
  410e8e:	mov    bh,0x3f
  410e90:	mov    ch,0xe0
  410e92:	push   0x143bd807
  410e97:	loop   0x410f14
  410e99:	xor    esi,edx
  410e9b:	mov    ch,0x2
  410e9d:	fisub  DWORD PTR [ebx-0x485d3dfb]
  410ea3:	daa    
  410ea4:	jecxz  0x410ec0
  410ea6:	out    dx,eax
  410ea7:	(bad)  
  410ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea9:	mov    dl,0x7b
  410eab:	push   edi
  410eac:	int    0xdc
  410eae:	jmp    0xeb8c:0x99a4c817
  410eb5:	and    edi,DWORD PTR [edi+ebx*4-0x4f500e3]
  410ebc:	mov    ds:0xa63125f0,al
  410ec1:	enter  0x76f8,0xac
  410ec5:	outs   dx,BYTE PTR ds:[esi]
  410ec6:	aaa    
  410ec7:	lods   al,BYTE PTR ds:[esi]
  410ec8:	jmp    0xad5bfc4
  410ecd:	jae    0x410e69
  410ecf:	mov    al,0x11
  410ed1:	jne    0x410ed1
  410ed3:	push   0x1b8c8bca
  410ed8:	pop    edx
  410ed9:	and    dh,BYTE PTR [ebx]
  410edb:	mov    edx,0xf585de83
  410ee0:	stc    
  410ee1:	jbe    0x410ed3
  410ee3:	mov    eax,0x68d6f567
  410ee8:	rcl    BYTE PTR [ebx-0x7d4d2169],1
  410eee:	stos   DWORD PTR es:[edi],eax
  410eef:	cmp    BYTE PTR [edx-0xd],cl
  410ef2:	pop    ebx
  410ef3:	(bad)  
  410ef4:	aad    0x78
  410ef6:	add    bl,cl
  410ef8:	add    DWORD PTR [ebx],edx
  410efa:	add    dh,BYTE PTR [edx-0x6576c0e3]
  410f00:	out    dx,al
  410f01:	inc    ecx
  410f02:	int3   
  410f03:	repnz out dx,al
  410f05:	add    ch,0x18
  410f08:	ins    DWORD PTR es:[edi],dx
  410f09:	lahf   
  410f0a:	sub    al,0x3a
  410f0c:	push   cs
  410f0d:	call   0x835bf0b7
  410f12:	imul   ecx,DWORD PTR [ebp+ebx*8-0xa],0x50
  410f17:	jae    0x410f6b
  410f19:	lds    ebp,FWORD PTR [ecx+0x31dfb5a7]
  410f1f:	jge    0x410f37
  410f21:	or     DWORD PTR [eax-0x27],0xffffffc4
  410f25:	(bad)  
  410f27:	pop    edx
  410f28:	aas    
  410f29:	cmp    ch,dh
  410f2b:	mov    al,0xe
  410f2d:	out    dx,al
  410f2e:	inc    esp
  410f2f:	mov    ecx,DWORD PTR [ecx]
  410f31:	push   ss
  410f32:	outs   dx,BYTE PTR ds:[esi]
  410f33:	push   ebx
  410f34:	dec    edi
  410f35:	shr    BYTE PTR [ebp-0x64],cl
  410f38:	jo     0x410ec9
  410f3a:	mov    eax,0xe58b1b2
  410f3f:	mov    dl,0xd9
  410f41:	dec    esp
  410f42:	fidivr DWORD PTR [edi]
  410f44:	hlt    
  410f45:	push   ds
  410f46:	mov    ds:0xff7117ca,eax
  410f4b:	mov    dl,0x2e
  410f4d:	cmp    eax,DWORD PTR [ecx+0x7c]
  410f50:	nop
  410f51:	adc    edx,DWORD PTR [edi+0x79b19bdd]
  410f57:	das    
  410f58:	add    cl,cl
  410f5a:	adc    BYTE PTR [ebx+0x56dadc38],ah
  410f60:	adc    eax,DWORD PTR [eax+0x7e3ef243]
  410f66:	push   edx
  410f67:	jmp    0x410fdb
  410f69:	push   ebx
  410f6a:	xchg   DWORD PTR [edi+0x3f],eax
  410f6d:	push   ss
  410f6e:	xor    eax,0xb3bc6632
  410f73:	pop    es
  410f74:	pusha  
  410f75:	xchg   ecx,eax
  410f76:	cdq    
  410f77:	leave  
  410f78:	add    esp,DWORD PTR [ebp-0x7d]
  410f7b:	jmp    0x9a70638e
  410f80:	dec    esp
  410f81:	and    edi,eax
  410f83:	fisttp WORD PTR [esi-0x2]
  410f86:	jb     0x410f46
  410f88:	sbb    bh,BYTE PTR [esi]
  410f8a:	mov    eax,0xf3610b7
  410f8f:	cmp    ebx,DWORD PTR [edx-0x2fb06abd]
  410f95:	mov    bh,al
  410f97:	dec    edx
  410f98:	clc    
  410f99:	mov    BYTE PTR [ebx-0x1eb9ecde],bh
  410f9f:	push   edi
  410fa0:	retf   0x2379
  410fa3:	sbb    edx,ebx
  410fa5:	adc    eax,0xf84a1031
  410faa:	data16 cmp BYTE PTR [eax],ah
  410fad:	call   0xe1ab:0x8c71804c
  410fb4:	pop    DWORD PTR [ebx-0x37d26fcc]
  410fba:	and    DWORD PTR [eax],ecx
  410fbc:	mov    ecx,0x5abdc11f
  410fc1:	mov    ds:0xdbf36d1d,eax
  410fc6:	retf   
  410fc7:	mov    ecx,0xc4f3f58d
  410fcc:	in     al,dx
  410fcd:	adc    ah,ch
  410fcf:	pushf  
  410fd0:	dec    eax
  410fd1:	sub    edi,DWORD PTR [edx+0x79e054a8]
  410fd7:	jecxz  0x410fec
  410fd9:	cmp    edi,ecx
  410fdb:	rcl    dh,1
  410fdd:	test   ah,cl
  410fdf:	out    dx,al
  410fe0:	and    BYTE PTR [esi+0x1929679c],al
  410fe6:	xor    al,0xb4
  410fe8:	mov    ecx,0x60a6db94
  410fed:	imul   edx,DWORD PTR [ecx],0x5c
  410ff0:	lea    eax,[ecx]
  410ff2:	xor    BYTE PTR [esi],al
  410ff4:	mov    esp,0xb2cb41f3
  410ff9:	ins    BYTE PTR es:[edi],dx
  410ffa:	pop    ebp
  410ffb:	mov    ecx,eax
  410ffd:	nop
  410ffe:	adc    DWORD PTR [esi-0x25],0x78
  411002:	sub    eax,0x4f38214d
  411007:	pop    esp
  411008:	jae    0x410f93
  41100a:	and    BYTE PTR [esi-0x744993bd],bh
  411010:	dec    edi
  411011:	mov    ch,0xad
  411013:	jge    0x410fc9
  411015:	sub    BYTE PTR [esi],0xff
  411018:	push   ecx
  411019:	ret    
  41101a:	test   dl,al
  41101c:	mov    ?,WORD PTR [ebx]
  41101e:	jmp    0x8fdb5d65
  411023:	push   edi
  411024:	mov    ecx,DWORD PTR [ebp+0x8]
  411027:	mov    eax,0x8a8d
  41102c:	xor    ax,WORD PTR [ecx+0x20]
  411030:	adc    DWORD PTR ds:0x42b000,0x1520
  41103a:	mov    ecx,0x3b51
  41103f:	or     DWORD PTR ds:0x42a008,0x52f2
  411049:	add    ax,cx
  41104c:	or     DWORD PTR ds:0x42c010,ebx
  411052:	movzx  eax,ax
  411055:	mov    DWORD PTR [ebp-0x10],eax
  411058:	xor    DWORD PTR ds:0x429020,ecx
  41105e:	mov    BYTE PTR [ebp-0x1],0x7d
  411062:	lea    eax,[ebp-0x1]
  411065:	and    ecx,DWORD PTR ds:0x429024
  41106b:	mov    DWORD PTR [ebp-0xc],eax
  41106e:	mov    al,BYTE PTR [ebp-0x1]
  411071:	mov    ecx,DWORD PTR [ebp-0xc]
  411074:	xor    DWORD PTR ds:0x42d014,0x42a010
  41107e:	xor    al,0x74
  411080:	sub    al,0x8
  411082:	add    DWORD PTR ds:0x42901c,0x5bfc
  41108c:	mov    BYTE PTR [ecx],al
  41108e:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  411095:	and    DWORD PTR ds:0x42d004,0x0
  41109f:	jmp    0x4110b3
  4110a4:	xor    ecx,ecx
  4110a6:	add    ecx,DWORD PTR ds:0x42d004
  4110ac:	inc    ecx
  4110ad:	mov    DWORD PTR ds:0x42d004,ecx
  4110b3:	cmp    DWORD PTR ds:0x42d004,0x1a
  4110ba:	jae    0x4110fe
  4110c0:	cmp    DWORD PTR ds:0x42d004,0x5
  4110c7:	jne    0x4110d3
  4110cd:	call   DWORD PTR ds:0x42e8f3
  4110d3:	cmp    DWORD PTR ds:0x42d004,0x4
  4110da:	jne    0x4110ef
  4110e0:	xor    ecx,ecx
  4110e2:	xor    ecx,DWORD PTR ds:0x42d004
  4110e8:	inc    ecx
  4110e9:	mov    DWORD PTR ds:0x42d004,ecx
  4110ef:	jmp    0x4110a4
  4110f4:	mov    DWORD PTR ds:0x42901c,0x6887
  4110fe:	push   ebx
  4110ff:	and    DWORD PTR ds:0x42c008,0x0
  411109:	jmp    0x411119
  41110e:	mov    eax,ds:0x42c008
  411113:	inc    eax
  411114:	mov    ds:0x42c008,eax
  411119:	cmp    DWORD PTR ds:0x42c008,0x19
  411120:	jae    0x4111a1
  411126:	cmp    DWORD PTR ds:0x42c008,0x5
  41112d:	jne    0x41113e
  411133:	push   0x42e000
  411138:	call   DWORD PTR ds:0x42e8f7
  41113e:	cmp    DWORD PTR ds:0x42c008,0x4
  411145:	jne    0x411156
  41114b:	mov    eax,ds:0x42c008
  411150:	inc    eax
  411151:	mov    ds:0x42c008,eax
  411156:	jmp    0x41110e
  41115b:	and    DWORD PTR ds:0x429024,0x0
  411165:	mov    ecx,DWORD PTR ds:0x429024
  41116b:	inc    ecx
  41116c:	mov    DWORD PTR ds:0x429024,ecx
  411172:	cmp    DWORD PTR ds:0x429024,0x21
  411179:	jne    0x411192
  41117f:	push   DWORD PTR [ebp-0x14]
  411182:	push   0x42d018
  411187:	push   0x6b2d
  41118c:	call   DWORD PTR ds:0x42e8bf
  411192:	cmp    DWORD PTR ds:0x429024,0x17
  411199:	jb     0x411165
  41119f:	xor    eax,eax
  4111a1:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4111a8:	and    DWORD PTR ds:0x42a008,0x0
  4111b2:	jmp    0x4111c5
  4111b7:	xor    eax,eax
  4111b9:	or     eax,DWORD PTR ds:0x42a008
  4111bf:	inc    eax
  4111c0:	mov    ds:0x42a008,eax
  4111c5:	cmp    DWORD PTR ds:0x42a008,0x14
  4111cc:	jae    0x41120d
  4111d2:	cmp    DWORD PTR ds:0x42a008,0x5
  4111d9:	jne    0x4111ea
  4111df:	push   0x42e067
  4111e4:	call   DWORD PTR ds:0x42e8fb
  4111ea:	cmp    DWORD PTR ds:0x42a008,0x4
  4111f1:	jne    0x411202
  4111f7:	mov    eax,ds:0x42a008
  4111fc:	inc    eax
  4111fd:	mov    ds:0x42a008,eax
  411202:	jmp    0x4111b7
  411207:	xor    DWORD PTR ds:0x42a018,edx
  41120d:	mov    ecx,DWORD PTR [ebp-0x18]
  411210:	dec    DWORD PTR ds:0x42a010
  411216:	push   esi
  411217:	mov    eax,0x751089b
  41121c:	mov    esi,DWORD PTR ds:0x41cda1
  411222:	mov    esi,DWORD PTR [esi]
  411224:	sub    DWORD PTR ds:0x429028,esi
  41122a:	xor    ecx,eax
  41122c:	inc    esi
  41122d:	mov    esi,0x3272e2
  411232:	add    DWORD PTR ds:0x42b008,0x42d010
  41123c:	push   edi
  41123d:	or     DWORD PTR ds:0x42b004,0x429028
  411247:	add    ecx,esi
  411249:	jmp    0x411277
  41124e:	mov    DWORD PTR ds:0x42c00c,0x285a
  411258:	mov    dl,BYTE PTR [ebp-0x1]
  41125b:	mov    DWORD PTR ds:0x42a00c,0x78fc
  411265:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126c:	mov    DWORD PTR ds:0x429024,0x3f09
  411276:	inc    ecx
  411277:	mov    DWORD PTR ds:0x42a00c,0x5b6f
  411281:	cmp    ecx,0x40
  411284:	mov    DWORD PTR ds:0x42d01c,0x4c47
  41128e:	jb     0x41124e
  411294:	mov    edx,DWORD PTR [ebp-0x18]
  411297:	xor    edx,eax
  411299:	add    edx,esi
  41129b:	jmp    0x41130b
  4112a0:	sub    edi,ecx
  4112a2:	mov    edi,DWORD PTR [ebp+0x8]
  4112a5:	add    ecx,0x4f49
  4112ab:	mov    ecx,0x8a8d
  4112b0:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4112b5:	sub    edi,DWORD PTR ds:0x42b00c
  4112bb:	mov    edi,0x3b51
  4112c0:	xor    DWORD PTR ds:0x42c01c,0x429014
  4112ca:	add    cx,di
  4112cd:	movzx  ecx,cx
  4112d0:	mov    DWORD PTR [ebp-0xc],ecx
  4112d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d6:	sbb    DWORD PTR ds:0x42b000,0x42d008
  4112e0:	movzx  ecx,WORD PTR [ecx+edx*4]
  4112e4:	xor    ecx,0x8a8d
  4112ea:	adc    DWORD PTR ds:0x42b014,0x42b008
  4112f4:	add    ecx,edi
  4112f6:	mov    edi,DWORD PTR [ebp-0xc]
  4112f9:	mov    DWORD PTR ds:0x42b018,0x62b9
  411303:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41130a:	inc    edx
  41130b:	mov    ecx,DWORD PTR [ebp-0x10]
  41130e:	mov    DWORD PTR ds:0x42a00c,0x6d31
  411318:	cmp    edx,ecx
  41131a:	mov    DWORD PTR ds:0x429018,0x5128
  411324:	jne    0x4112a0
  41132a:	mov    DWORD PTR ds:0x42c018,0x17
  411334:	cmp    DWORD PTR ds:0x42c018,0x0
  41133b:	je     0x411388
  411341:	cmp    DWORD PTR ds:0x42c018,0x8
  411348:	jne    0x411354
  41134e:	call   DWORD PTR ds:0x42e8ff
  411354:	cmp    DWORD PTR ds:0x42c018,0x9
  41135b:	jne    0x411370
  411361:	xor    edx,edx
  411363:	add    edx,DWORD PTR ds:0x42c018
  411369:	dec    edx
  41136a:	mov    DWORD PTR ds:0x42c018,edx
  411370:	mov    edx,DWORD PTR ds:0x42c018
  411376:	dec    edx
  411377:	mov    DWORD PTR ds:0x42c018,edx
  41137d:	jmp    0x411334
  411382:	adc    ecx,0x40c
  411388:	mov    ecx,DWORD PTR [ebp-0x18]
  41138b:	or     edi,edi
  41138d:	mov    edx,DWORD PTR [ebp+0x10]
  411390:	neg    edi
  411392:	xor    ecx,eax
  411394:	add    DWORD PTR ds:0x42b01c,ebx
  41139a:	add    ecx,esi
  41139c:	mov    DWORD PTR [edx],ecx
  41139e:	and    DWORD PTR ds:0x42b014,0x0
  4113a8:	mov    ecx,DWORD PTR ds:0x42b014
  4113ae:	inc    ecx
  4113af:	mov    DWORD PTR ds:0x42b014,ecx
  4113b5:	cmp    DWORD PTR ds:0x42b014,0x4
  4113bc:	jne    0x4113d5
  4113c2:	push   0x44ec
  4113c7:	push   0x42901c
  4113cc:	push   DWORD PTR [ebp-0x18]
  4113cf:	call   DWORD PTR ds:0x42e903
  4113d5:	cmp    DWORD PTR ds:0x42b014,0x3
  4113dc:	jne    0x4113ef
  4113e2:	mov    ecx,DWORD PTR ds:0x42b014
  4113e8:	inc    ecx
  4113e9:	mov    DWORD PTR ds:0x42b014,ecx
  4113ef:	cmp    DWORD PTR ds:0x42b014,0x13
  4113f6:	jb     0x4113a8
  4113fc:	or     edi,edi
  4113fe:	mov    ecx,DWORD PTR [ebp-0x18]
  411401:	xor    ecx,eax
  411403:	sbb    DWORD PTR ds:0x429004,0x2443
  41140d:	add    ecx,esi
  41140f:	mov    DWORD PTR [ebp-0xc],ecx
  411412:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  411419:	mov    DWORD PTR ds:0x429014,0x17
  411423:	cmp    DWORD PTR ds:0x429014,0x0
  41142a:	je     0x411491
  411430:	cmp    DWORD PTR ds:0x429014,0xb
  411437:	jne    0x411450
  41143d:	push   0x0
  41143f:	push   DWORD PTR [ebp-0x1c]
  411442:	push   0x533d
  411447:	push   DWORD PTR [ebp-0x10]
  41144a:	call   DWORD PTR ds:0x42e8c3
  411450:	cmp    DWORD PTR ds:0x429014,0xc
  411457:	jne    0x41146c
  41145d:	xor    ecx,ecx
  41145f:	or     ecx,DWORD PTR ds:0x429014
  411465:	dec    ecx
  411466:	mov    DWORD PTR ds:0x429014,ecx
  41146c:	mov    ecx,DWORD PTR ds:0x429014
  411472:	dec    ecx
  411473:	mov    DWORD PTR ds:0x429014,ecx
  411479:	jmp    0x411423
  41147e:	xor    edi,edi
  411480:	xor    edi,DWORD PTR ds:0x41cddc
  411486:	mov    ecx,DWORD PTR ds:0x41cd75
  41148c:	sub    ecx,edi
  41148e:	or     edi,DWORD PTR [edi+ecx*1]
  411491:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  411498:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  41149f:	and    DWORD PTR ds:0x42d00c,0x0
  4114a9:	mov    ecx,DWORD PTR ds:0x42d00c
  4114af:	inc    ecx
  4114b0:	mov    DWORD PTR ds:0x42d00c,ecx
  4114b6:	cmp    DWORD PTR ds:0x42d00c,0x10
  4114bd:	jne    0x4114d5
  4114c3:	push   DWORD PTR [ebp-0xc]
  4114c6:	push   DWORD PTR [ebp-0x1c]
  4114c9:	push   DWORD PTR [ebp-0xc]
  4114cc:	push   DWORD PTR [ebp-0x10]
  4114cf:	call   DWORD PTR ds:0x42e8c7
  4114d5:	cmp    DWORD PTR ds:0x42d00c,0xf
  4114dc:	jne    0x4114ef
  4114e2:	mov    ecx,DWORD PTR ds:0x42d00c
  4114e8:	inc    ecx
  4114e9:	mov    DWORD PTR ds:0x42d00c,ecx
  4114ef:	cmp    DWORD PTR ds:0x42d00c,0x1c
  4114f6:	jb     0x4114a9
  4114fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4114ff:	mov    DWORD PTR [ebp+0x8],ecx
  411502:	mov    ecx,DWORD PTR [ebp+0x8]
  411505:	mov    DWORD PTR ds:0x42d008,0x14
  41150f:	cmp    DWORD PTR ds:0x42d008,0x0
  411516:	je     0x411548
  41151c:	cmp    DWORD PTR ds:0x42d008,0x16
  411523:	jne    0x411534
  411529:	push   0x7bbf
  41152e:	call   DWORD PTR ds:0x42e8cb
  411534:	xor    edi,edi
  411536:	add    edi,DWORD PTR ds:0x42d008
  41153c:	dec    edi
  41153d:	mov    DWORD PTR ds:0x42d008,edi
  411543:	jmp    0x41150f
  411548:	xor    ecx,eax
  41154a:	movzx  edi,BYTE PTR ds:0x429004
  411551:	sub    edi,DWORD PTR ds:0x429014
  411557:	mov    DWORD PTR ds:0x429004,edi
  41155d:	add    ecx,esi
  41155f:	mov    DWORD PTR ds:0x42c008,0x216c
  411569:	mov    ecx,0x242ebe9
  41156e:	mov    edi,0x5a28
  411573:	mov    edi,0xf641bea
  411578:	je     0x41cc2e
  41157e:	or     DWORD PTR ds:0x42a018,0xc8d
  411588:	mov    edx,DWORD PTR [ebp+0x8]
  41158b:	mov    ebx,DWORD PTR [ebp-0x8]
  41158e:	and    DWORD PTR ds:0x42a008,0xb9b
  411598:	xor    edx,eax
  41159a:	jmp    0x4138e3
  41159f:	test   DWORD PTR [edx-0x500c52df],edx
  4115a5:	jno    0x411619
  4115a7:	(bad)  
  4115a8:	cmc    
  4115a9:	jo     0x41159c
  4115ab:	out    0xd1,eax
  4115ad:	inc    esp
  4115ae:	push   ds
  4115af:	inc    eax
  4115b0:	scas   eax,DWORD PTR es:[edi]
  4115b1:	jl     0x41162f
  4115b3:	inc    eax
  4115b4:	pop    edi
  4115b5:	jl     0x411633
  4115b7:	rol    edi,0xa8
  4115ba:	inc    eax
  4115bb:	jp     0x4115d7
  4115bd:	cmc    
  4115be:	das    
  4115bf:	mov    ebp,0x1b8aaa37
  4115c4:	mov    esp,0x70e82910
  4115c9:	adc    ebp,ebx
  4115cb:	xchg   esp,ecx
  4115cd:	inc    esp
  4115cf:	fisttp QWORD PTR [ecx-0x2897bddf]
  4115d5:	nop
  4115d6:	jae    0x411655
  4115d8:	je     0x41160c
  4115da:	popf   
  4115db:	lds    esp,FWORD PTR [eax-0x24e349d2]
  4115e1:	mov    bh,0xc5
  4115e3:	adc    eax,0xefe96e3a
  4115e8:	scas   al,BYTE PTR es:[edi]
  4115e9:	or     al,al
  4115eb:	xor    ecx,DWORD PTR [ebx+0x579cf050]
  4115f1:	fldenv [edx-0x59]
  4115f4:	xchg   esi,eax
  4115f5:	pushf  
  4115f6:	sbb    ch,BYTE PTR [ebx]
  4115f8:	jecxz  0x41163f
  4115fa:	mov    bl,0x4
  4115fc:	fidivr DWORD PTR [ebx-0x4e34b391]
  411602:	neg    edx
  411604:	and    al,0xe6
  411606:	repnz inc eax
  411608:	pop    fs
  41160a:	in     eax,0x1d
  41160c:	inc    esp
  41160d:	es pop edi
  41160f:	fucom  st(0)
  411611:	add    esi,esp
  411613:	and    eax,0x688dbe1d
  411618:	sub    eax,0xefb216c3
  41161d:	pop    ebp
  41161e:	daa    
  41161f:	jbe    0x411696
  411621:	push   0x11e44929
  411626:	mov    edx,0xec193dec
  41162b:	stc    
  41162c:	add    dh,BYTE PTR [ebx]
  41162e:	das    
  41162f:	mov    ebx,ecx
  411631:	lahf   
  411632:	sub    BYTE PTR [ebx],dl
  411634:	les    esi,FWORD PTR [ebx]
  411636:	scas   al,BYTE PTR es:[edi]
  411637:	enter  0x9322,0x68
  41163b:	sbb    dl,BYTE PTR [ecx+0x8848035]
  411641:	mov    gs,ebp
  411643:	fidivr DWORD PTR [ebx-0x4c972ec7]
  411649:	popf   
  41164a:	retf   
  41164b:	jmp    0x411642
  41164d:	iret   
  41164e:	adc    ebx,ebx
  411650:	popa   
  411651:	test   al,0x9d
  411653:	add    BYTE PTR [edi-0x15],0xbf
  411657:	addr16 cmp eax,0xec945bff
  41165d:	inc    BYTE PTR [eax-0x4adbb6df]
  411663:	and    dl,dh
  411665:	(bad)  
  411666:	add    edx,DWORD PTR [esi-0x7ee35273]
  41166c:	push   ebp
  41166d:	inc    edx
  41166e:	push   cs
  41166f:	fidiv  DWORD PTR [esi+0x2e]
  411672:	sub    BYTE PTR [edx],0x49
  411675:	ja     0x411657
  411677:	ret    
  411678:	bound  eax,QWORD PTR [eax+0x3c]
  41167b:	xor    BYTE PTR [ecx-0x1695852],dl
  411681:	pop    ds
  411682:	gs hlt 
  411684:	ror    DWORD PTR [edx+ecx*2-0x257ef40a],0xac
  41168c:	stos   BYTE PTR es:[edi],al
  41168d:	fld    QWORD PTR [esi+0x6]
  411690:	or     DWORD PTR [edi-0x49],ecx
  411693:	cmp    DWORD PTR [ebx-0x4af8eb96],ebp
  411699:	push   es
  41169a:	and    bl,BYTE PTR [ebx+0x52d98419]
  4116a0:	lods   eax,DWORD PTR ds:[esi]
  4116a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a2:	or     ebx,DWORD PTR [edx]
  4116a4:	dec    edx
  4116a5:	out    dx,al
  4116a6:	lock dec ebx
  4116a8:	repz dec edx
  4116aa:	mov    DWORD PTR [ebx+0x2a953a2c],0x34c2cf6
  4116b4:	xchg   BYTE PTR [eax-0x31],ah
  4116b7:	fld    QWORD PTR [ebp-0x72]
  4116ba:	test   DWORD PTR es:[esi+ebp*4+0x19],ebx
  4116bf:	repnz mov ebp,0x8ccce2bd
  4116c5:	mov    al,ds:0x5a7c84a2
  4116ca:	cmp    al,0x2d
  4116cc:	xchg   edx,eax
  4116cd:	adc    ebx,edx
  4116cf:	stos   BYTE PTR es:[edi],al
  4116d0:	inc    ebp
  4116d1:	or     al,0xd
  4116d3:	jp     0x4116d8
  4116d5:	mov    esi,0xbed8319f
  4116da:	lock arpl WORD PTR [edi+0x672b9950],bp
  4116e1:	sti    
  4116e2:	fisttp WORD PTR [ebx]
  4116e4:	in     al,0xf5
  4116e6:	mov    BYTE PTR [ebp+0x303167f0],bl
  4116ec:	mov    eax,ds:0xb24731e6
  4116f1:	pop    es
  4116f2:	es mov bh,0x35
  4116f5:	(bad)  
  4116f6:	(bad)  
  4116f7:	(bad)  
  4116f8:	jbe    0x4116b9
  4116fa:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fc:	sbb    ah,bh
  4116fe:	mov    ds:0x4e9d2a33,al
  411703:	xchg   ebx,eax
  411704:	sub    dl,cl
  411706:	std    
  411707:	icebp  
  411708:	inc    esi
  411709:	ds sub bh,0xfc
  41170d:	jmp    0x4116ae
  41170f:	cmp    eax,DWORD PTR [esi]
  411711:	das    
  411712:	xchg   edx,eax
  411713:	(bad)  
  411715:	jg     0x41174d
  411717:	push   esp
  411718:	pushf  
  411719:	cli    
  41171a:	fs rcl dh,0xbd
  41171e:	mov    BYTE PTR [ebp-0x774e3804],ah
  411724:	sub    eax,DWORD PTR [eax+0x74]
  411727:	(bad)  
  411728:	push   esp
  411729:	sbb    bl,cl
  41172b:	jb     0x411798
  41172d:	retf   
  41172e:	pusha  
  41172f:	or     eax,0x3efb6efc
  411734:	xlat   BYTE PTR ds:[ebx]
  411735:	jo     0x411738
  411737:	mov    esp,0x6dd80c61
  41173c:	sub    ebp,edx
  41173e:	stos   DWORD PTR es:[edi],eax
  41173f:	mov    ecx,0xb34110e2
  411744:	nop
  411745:	jo     0x4117ae
  411747:	xor    DWORD PTR [ebp-0xc],edi
  41174a:	test   al,0xbd
  41174c:	fsub   st,st(0)
  41174e:	stos   DWORD PTR es:[edi],eax
  41174f:	out    0x18,al
  411751:	aaa    
  411752:	inc    esi
  411753:	mov    esi,0xb51ddb3c
  411758:	daa    
  411759:	jge    0x411765
  41175b:	lods   eax,DWORD PTR ds:[esi]
  41175c:	(bad)  
  41175e:	sub    ch,BYTE PTR [ecx+0x5d29a177]
  411764:	ins    DWORD PTR es:[edi],dx
  411765:	test   dh,cl
  411767:	retf   
  411768:	pushf  
  411769:	call   0xa80d:0xa6c8644f
  411770:	lock aam 0x21
  411773:	xor    dh,BYTE PTR [edi-0x5d]
  411776:	mov    dl,ah
  411778:	call   0x7a604fc9
  41177d:	or     edx,edi
  41177f:	jp     0x411782
  411781:	imul   edx,eax,0xfffffff3
  411784:	call   0xef28ba40
  411789:	enter  0x3ecb,0x2c
  41178d:	push   ss
  41178e:	xchg   edi,eax
  41178f:	mov    ecx,0xef09a463
  411794:	xchg   esp,eax
  411795:	imul   edx,edx,0x8505632d
  41179b:	js     0x411739
  41179d:	iret   
  41179e:	lahf   
  41179f:	clc    
  4117a0:	imul   eax,DWORD PTR [ecx],0x43
  4117a3:	fisubr DWORD PTR [eax]
  4117a5:	inc    ecx
  4117a6:	sub    dh,BYTE PTR [eax+0x43afdcf0]
  4117ac:	sahf   
  4117ad:	mov    ecx,0xa475cbc1
  4117b2:	dec    ebx
  4117b3:	xchg   ecx,esi
  4117b5:	dec    ecx
  4117b6:	mov    ds,edi
  4117b8:	dec    edx
  4117b9:	mov    ch,0x1a
  4117bb:	call   0xada4:0x4ba7144d
  4117c2:	pop    ecx
  4117c3:	shl    edx,0x75
  4117c6:	leave  
  4117c7:	mov    ds:0xc9be6fc0,al
  4117cc:	dec    esp
  4117cd:	dec    eax
  4117ce:	cmp    BYTE PTR [ebp+eiz*4-0x1c],bl
  4117d2:	mov    ebp,0x11b76a03
  4117d7:	pop    ebx
  4117d8:	ja     0x4117c1
  4117da:	jge    0x411770
  4117dc:	out    dx,eax
  4117dd:	inc    edi
  4117de:	push   ds
  4117df:	or     eax,0x355d33f8
  4117e4:	xchg   ebp,eax
  4117e5:	push   ebx
  4117e6:	xor    al,ch
  4117e8:	fs dec esp
  4117ea:	push   cs
  4117eb:	loope  0x4117bd
  4117ed:	dec    edi
  4117ee:	cmc    
  4117ef:	icebp  
  4117f0:	jecxz  0x41184b
  4117f2:	jle    0x4117ba
  4117f4:	mov    edi,0xc9796b50
  4117f9:	in     al,dx
  4117fa:	mov    fs,ebp
  4117fc:	ds jno 0x4117f0
  4117ff:	inc    esp
  411800:	les    ebp,FWORD PTR [edi+0x113f0569]
  411806:	es leave 
  411808:	mov    BYTE PTR [esi-0x43de8547],ah
  41180e:	sbb    eax,0x2d6b0e9b
  411813:	lods   eax,DWORD PTR ds:[esi]
  411814:	in     al,dx
  411815:	xchg   edx,eax
  411816:	(bad)  
  411818:	xor    ebp,esi
  41181a:	lods   al,BYTE PTR ds:[esi]
  41181b:	pop    edi
  41181c:	mov    edi,ebx
  41181e:	inc    eax
  41181f:	mov    ?,WORD PTR [esi-0x566bb2ac]
  411825:	push   ebp
  411826:	mov    edx,DWORD PTR [ebp+0x7ab4f47a]
  41182c:	jb     0x4117f4
  41182e:	xchg   ebp,eax
  41182f:	mov    al,0x44
  411831:	lds    eax,FWORD PTR [esi+0x10914cd]
  411837:	(bad)  
  411838:	jg     0x41183b
  41183a:	sub    esi,esi
  41183c:	xlat   BYTE PTR fs:[ebx]
  41183e:	push   cs
  41183f:	mov    al,ds:0xbe84cb04
  411844:	or     al,0x10
  411846:	out    dx,al
  411847:	rcl    ch,cl
  411849:	cwde   
  41184a:	mov    ebp,0x34e7729f
  41184f:	pop    es
  411850:	add    bh,0xe1
  411853:	dec    edi
  411854:	test   BYTE PTR [edx+0x36],ah
  411857:	rol    BYTE PTR [edi-0x60fcbc55],0x8
  41185e:	lahf   
  41185f:	mov    ecx,0xca1a5282
  411864:	push   ss
  411865:	data16 outs dx,BYTE PTR ds:[esi]
  411867:	mov    gs,eax
  411869:	(bad)  
  41186a:	sar    DWORD PTR [ecx+0x1c],1
  41186d:	or     DWORD PTR [esi],esp
  41186f:	es mov ah,0x40
  411872:	mov    edx,0xafce308d
  411877:	outs   dx,DWORD PTR ds:[esi]
  411878:	pop    edx
  411879:	mov    ecx,0x4adcd08
  41187e:	jp     0x4118cb
  411880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411881:	dec    eax
  411882:	xchg   ecx,eax
  411883:	pop    esi
  411884:	outs   dx,DWORD PTR ds:[esi]
  411885:	pop    ebp
  411886:	mov    edi,0xa87d8112
  41188b:	pop    es
  41188c:	xchg   esp,eax
  41188d:	xor    esi,edx
  41188f:	nop    DWORD PTR [ebp-0x8]
  411893:	out    0x8e,al
  411895:	loope  0x41184c
  411897:	scas   al,BYTE PTR es:[edi]
  411898:	out    0x3e,al
  41189a:	shr    BYTE PTR [esi-0x3f1dae52],1
  4118a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a1:	inc    eax
  4118a2:	popa   
  4118a3:	jae    0x411903
  4118a5:	hlt    
  4118a6:	xor    BYTE PTR [edi-0x36],ah
  4118a9:	adc    bh,cl
  4118ab:	shl    dh,cl
  4118ad:	add    eax,0x7683f06a
  4118b2:	bound  eax,QWORD PTR [ebp+0x6fe0ed39]
  4118b8:	inc    esp
  4118b9:	in     al,0x3c
  4118bb:	hlt    
  4118bc:	outs   dx,BYTE PTR ds:[esi]
  4118bd:	imul   DWORD PTR [esi]
  4118bf:	adc    bl,BYTE PTR [eax+0x278b861e]
  4118c5:	call   FWORD PTR [eax-0x7c5f14ad]
  4118cb:	enter  0x24b5,0xe
  4118cf:	nop
  4118d0:	fild   DWORD PTR [esp+edx*1]
  4118d3:	cmp    eax,0xf2fa509e
  4118d8:	xor    BYTE PTR [ebx+0x59],0x0
  4118dc:	fadd   QWORD PTR [edi+0x5d80fe1b]
  4118e2:	cdq    
  4118e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e4:	xchg   DWORD PTR [edi+0x8],ecx
  4118e7:	and    eax,0xdc9e464a
  4118ec:	mul    DWORD PTR [esi-0x7eadac69]
  4118f2:	inc    ebx
  4118f3:	mov    esp,0x8dd6f643
  4118f8:	lods   eax,DWORD PTR ds:[esi]
  4118f9:	sub    DWORD PTR [esi],ebx
  4118fb:	mov    dl,0x2a
  4118fd:	icebp  
  4118fe:	std    
  4118ff:	pop    esp
  411900:	rcr    BYTE PTR [ebp+0xcd71d2b],cl
  411906:	mov    DWORD PTR [ebp-0x1],edx
  411909:	jb     0x411979
  41190b:	and    al,0x96
  41190d:	iret   
  41190e:	lods   eax,DWORD PTR ds:[esi]
  41190f:	aas    
  411910:	mov    BYTE PTR [ebp+0x44],bh
  411913:	stos   BYTE PTR es:[edi],al
  411914:	rol    BYTE PTR [esi],cl
  411916:	mov    esp,0xcc33645e
  41191b:	jb     0x4118a5
  41191d:	pusha  
  41191e:	in     al,dx
  41191f:	mov    ecx,cs
  411921:	fmulp  st(1),st
  411923:	and    bl,BYTE PTR [edx]
  411925:	stos   BYTE PTR es:[edi],al
  411926:	scas   al,BYTE PTR es:[edi]
  411927:	cli    
  411928:	in     al,dx
  411929:	push   ebx
  41192a:	test   al,0xaf
  41192c:	rcl    DWORD PTR ds:0x130a6c1d,cl
  411932:	cdq    
  411933:	pop    ebx
  411934:	or     bh,BYTE PTR [edi+0x60]
  411937:	or     BYTE PTR [eax-0x303bf196],cl
  41193d:	adc    ecx,DWORD PTR cs:[ebp-0x3f]
  411941:	pop    ss
  411942:	mov    ebp,0xa34b5a9d
  411947:	fist   WORD PTR [edi+0xca7319]
  41194d:	mov    fs,WORD PTR [edi]
  41194f:	lods   eax,DWORD PTR ds:[esi]
  411950:	pop    edi
  411951:	in     eax,dx
  411952:	mov    DWORD PTR [eax-0x6fda12ac],edx
  411958:	rol    ah,1
  41195a:	jecxz  0x411916
  41195c:	push   eax
  41195d:	xchg   ebp,esp
  41195f:	sub    ebp,ecx
  411961:	lock cdq 
  411963:	hlt    
  411964:	hlt    
  411965:	push   cs
  411966:	add    esi,DWORD PTR [ebx]
  411968:	(bad)  
  411969:	mov    ah,0xe6
  41196b:	cmp    BYTE PTR [ebx+0x7d7c489c],0x69
  411972:	shr    BYTE PTR [eax+0x36abc46f],cl
  411978:	jb     0x411937
  41197a:	imul   edi,esi,0x6ba245f7
  411980:	sbb    bl,BYTE PTR [ecx-0x374ad764]
  411986:	adc    ah,BYTE PTR [ebx]
  411988:	pop    esi
  411989:	cs jecxz 0x4119d8
  41198c:	adc    BYTE PTR ds:0x28a0307f,bl
  411992:	aam    0x77
  411994:	jb     0x41199e
  411996:	jecxz  0x411a12
  411998:	outs   dx,DWORD PTR ds:[esi]
  411999:	xchg   DWORD PTR [ecx-0x31],ecx
  41199c:	push   ecx
  41199d:	stc    
  41199e:	shl    BYTE PTR [esi+0x700ed55e],0xda
  4119a5:	xor    DWORD PTR [ebx*2-0x41bf3574],ebp
  4119ac:	(bad)  
  4119ad:	pushf  
  4119ae:	addr16 sbb al,0x97
  4119b1:	sbb    DWORD PTR [edx+0x2b24edf4],0x21
  4119b8:	out    dx,eax
  4119b9:	jb     0x411948
  4119bb:	pushf  
  4119bc:	sbb    dh,BYTE PTR [eax-0x2c]
  4119bf:	sti    
  4119c0:	cdq    
  4119c1:	sub    bl,BYTE PTR [ecx+eax*4+0x74]
  4119c5:	cli    
  4119c6:	sbb    al,0x11
  4119c8:	pop    edi
  4119c9:	gs or  al,0x0
  4119cc:	repnz cmp bh,BYTE PTR [edi-0x1b]
  4119d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119d1:	mov    bh,0xb0
  4119d3:	pop    edi
  4119d4:	stos   DWORD PTR es:[edi],eax
  4119d5:	cmp    al,BYTE PTR ds:0x15ff34a6
  4119db:	inc    esp
  4119dc:	outs   dx,BYTE PTR ds:[esi]
  4119dd:	stos   DWORD PTR es:[edi],eax
  4119de:	xchg   edx,eax
  4119df:	add    ebp,DWORD PTR [ecx-0x66]
  4119e2:	les    esi,FWORD PTR [ebx-0x6cadd32e]
  4119e8:	mov    dl,0xb3
  4119ea:	lea    ebx,[esi-0x5b]
  4119ed:	pop    ss
  4119ee:	mov    eax,0xf7f2b7df
  4119f3:	and    dl,0x1b
  4119f6:	cdq    
  4119f7:	or     esp,DWORD PTR [edi+0x66]
  4119fa:	dec    ecx
  4119fb:	pop    edx
  4119fc:	xchg   edi,eax
  4119fd:	inc    ebx
  4119fe:	xchg   esi,eax
  4119ff:	mov    eax,DWORD PTR [esi+edx*8-0x384e9d67]
  411a06:	rcl    BYTE PTR [edx+0x57628b9b],cl
  411a0c:	rcr    BYTE PTR [edx+0x67],cl
  411a0f:	int3   
  411a10:	es mov esp,0x9b2138a4
  411a16:	pop    ecx
  411a17:	sar    esi,cl
  411a19:	jne    0x4119d4
  411a1b:	fnsave [edx-0x76]
  411a1e:	data16 loop 0x411a83
  411a21:	sbb    esi,DWORD PTR [esi-0x56148455]
  411a27:	test   eax,0x10ee0150
  411a2c:	pop    ds
  411a2d:	cli    
  411a2e:	sahf   
  411a2f:	pop    ds
  411a30:	mov    eax,0x46d7ce45
  411a35:	inc    edx
  411a36:	adc    ebx,DWORD PTR [edi-0x51]
  411a39:	scas   eax,DWORD PTR es:[edi]
  411a3a:	sub    edx,edx
  411a3c:	push   ds
  411a3d:	push   ecx
  411a3e:	mov    bh,0xd6
  411a40:	test   ah,ah
  411a42:	aad    0x6a
  411a44:	push   cs
  411a45:	push   es
  411a46:	push   ss
  411a47:	add    dh,BYTE PTR [edi-0x79]
  411a4a:	cdq    
  411a4b:	adc    ah,BYTE PTR [edx-0x24]
  411a4e:	and    DWORD PTR [esi+ebp*4],ecx
  411a51:	jo     0x411a62
  411a53:	rcr    DWORD PTR [ecx-0x4a],1
  411a56:	adc    BYTE PTR [esi],dh
  411a58:	adc    BYTE PTR [eax],dl
  411a5a:	cmp    eax,0x242a6cdc
  411a5f:	push   es
  411a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a61:	push   esi
  411a62:	pop    ecx
  411a63:	mov    esp,0x741e8ab0
  411a68:	pop    esi
  411a69:	nop
  411a6a:	jo     0x411ac8
  411a6c:	or     edi,DWORD PTR [esi]
  411a6e:	js     0x411ad9
  411a70:	aas    
  411a71:	and    dl,bh
  411a73:	xor    ecx,DWORD PTR [esi+0x70]
  411a76:	adc    ecx,edi
  411a78:	mov    edx,0xfa6d03a
  411a7d:	int3   
  411a7e:	dec    esp
  411a7f:	ret    0x1e68
  411a82:	and    cl,BYTE PTR [esi]
  411a84:	jmp    FWORD PTR [edi]
  411a86:	arpl   WORD PTR [edi+0x719fda36],dx
  411a8c:	push   esp
  411a8d:	cmc    
  411a8e:	gs mov esp,0x6647e34
  411a94:	hlt    
  411a95:	shl    al,1
  411a97:	jmp    FWORD PTR [ebp+0x6]
  411a9a:	xor    eax,0x1505358
  411a9f:	sbb    eax,0x553f05a0
  411aa4:	push   esi
  411aa5:	inc    edi
  411aa6:	stc    
  411aa7:	pushf  
  411aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aa9:	adc    ebx,DWORD PTR [esi]
  411aab:	and    edi,DWORD PTR ds:0xf8dfcd94
  411ab1:	stos   BYTE PTR es:[edi],al
  411ab2:	inc    ecx
  411ab3:	les    ebp,FWORD PTR [edx]
  411ab5:	icebp  
  411ab6:	inc    edx
  411ab7:	adc    BYTE PTR [edi-0x18],dl
  411aba:	pop    esi
  411abb:	dec    esp
  411abc:	retf   0xa53a
  411abf:	adc    al,0xdf
  411ac1:	faddp  st(7),st
  411ac3:	add    bh,BYTE PTR [eax+0x75345bd8]
  411ac9:	xchg   ebp,eax
  411aca:	imul   esp,DWORD PTR [esi],0x34
  411acd:	call   0x8018:0xcee13dd5
  411ad4:	out    0xf5,eax
  411ad6:	pop    ecx
  411ad7:	cld    
  411ad8:	popa   
  411ad9:	out    dx,al
  411ada:	dec    ebx
  411adb:	outs   dx,BYTE PTR ds:[esi]
  411adc:	push   ecx
  411add:	push   ss
  411ade:	scas   eax,DWORD PTR es:[edi]
  411adf:	dec    ebx
  411ae0:	add    ecx,DWORD PTR ds:0x454e7a3d
  411ae6:	aad    0x4e
  411ae8:	xchg   DWORD PTR [eax+0x1140d49],ecx
  411aee:	stos   BYTE PTR es:[edi],al
  411aef:	xchg   DWORD PTR ds:0x880eef2e,edx
  411af5:	(bad)  
  411af7:	test   al,0x49
  411af9:	or     DWORD PTR [edi],ebx
  411afb:	cdq    
  411afc:	jl     0x411b3a
  411afe:	push   ss
  411aff:	scas   eax,DWORD PTR es:[edi]
  411b00:	push   edx
  411b01:	adc    al,cl
  411b03:	lock xor DWORD PTR [ebp-0x43],0xd970ef3
  411b0b:	push   ss
  411b0c:	scas   al,BYTE PTR es:[edi]
  411b0d:	ins    DWORD PTR es:[edi],dx
  411b0e:	and    bl,BYTE PTR [ebx+ebx*8+0x758cee20]
  411b15:	adc    cl,ch
  411b17:	push   ebx
  411b18:	bound  eax,QWORD PTR [esi]
  411b1a:	sub    ah,BYTE PTR [eax-0x50]
  411b1d:	adc    dh,BYTE PTR [esi+0x19d3335a]
  411b23:	adc    bh,BYTE PTR [esi]
  411b25:	and    al,0x85
  411b27:	in     al,0x76
  411b29:	retf   
  411b2a:	sbb    bl,BYTE PTR [ecx+0x75]
  411b2d:	or     esp,DWORD PTR [esi+0x24]
  411b30:	pop    es
  411b31:	inc    esi
  411b32:	mov    WORD PTR [ebx+0x297f8436],ss
  411b38:	xor    esp,DWORD PTR [ebx+0x3d]
  411b3b:	mov    edi,0xc294aa
  411b40:	dec    edx
  411b41:	dec    edi
  411b42:	jecxz  0x411b72
  411b44:	cmp    ecx,DWORD PTR [ecx]
  411b46:	xchg   edx,eax
  411b47:	ins    BYTE PTR es:[edi],dx
  411b48:	sbb    al,0xc1
  411b4a:	clc    
  411b4b:	push   ds
  411b4c:	fcom   QWORD PTR [edx-0x4a]
  411b4f:	ficom  DWORD PTR [ecx+0x8]
  411b52:	push   0x2a7ee17c
  411b57:	call   0xc23441e9
  411b5c:	jg     0x411b36
  411b5e:	sbb    eax,0x7f4f374a
  411b63:	aas    
  411b64:	aad    0x9e
  411b66:	xchg   esi,eax
  411b67:	ja     0x411be4
  411b69:	xor    esp,DWORD PTR [edi+0x603c48d]
  411b6f:	mov    dl,0x60
  411b71:	int    0x55
  411b73:	jnp    0x411b08
  411b75:	jecxz  0x411bdd
  411b77:	jle    0x411b1d
  411b79:	or     eax,0xff2c61ff
  411b7e:	mov    dh,0xdb
  411b80:	lds    esp,FWORD PTR [edx]
  411b82:	cmp    BYTE PTR [esp+edx*1-0x57],0x8b
  411b87:	call   0x8212:0x2e4ec704
  411b8e:	jge    0x411c02
  411b90:	out    dx,eax
  411b91:	mov    cl,0xb0
  411b93:	call   0xe948:0xacaace6a
  411b9a:	sub    al,0xf5
  411b9c:	and    eax,0x73205767
  411ba1:	call   0xae19:0x4313c318
  411ba8:	pop    edx
  411ba9:	pop    esi
  411baa:	cmp    dh,BYTE PTR [ebp+0x2f06b938]
  411bb0:	mov    ebx,0xfaf6e541
  411bb5:	jmp    0x411c2f
  411bb7:	in     al,0xa8
  411bb9:	es jb  0x411bb4
  411bbc:	fidivr WORD PTR [ecx+0x5f]
  411bbf:	imul   edi,DWORD PTR [eax+0x23c31a57],0xffffffe0
  411bc6:	and    DWORD PTR [ebx],0x69
  411bc9:	jne    0x411c43
  411bcb:	fdiv   DWORD PTR [eax]
  411bcd:	add    edx,ebp
  411bcf:	std    
  411bd0:	fstp   DWORD PTR [ebp-0x3af8cc20]
  411bd6:	rol    DWORD PTR [esi-0x3152ea8f],0xd4
  411bdd:	push   eax
  411bde:	and    eax,0x8eadfd78
  411be3:	mov    al,0xd5
  411be5:	cmp    dl,BYTE PTR [edi]
  411be7:	push   ss
  411be8:	cwde   
  411be9:	sub    esi,esp
  411beb:	jb     0x411b97
  411bed:	scas   eax,DWORD PTR es:[edi]
  411bee:	mov    al,ds:0xcd562586
  411bf3:	out    dx,al
  411bf4:	(bad)  
  411bf5:	push   0xffffffea
  411bf7:	mov    cl,0x99
  411bf9:	add    bl,0xf0
  411bfc:	jmp    0xf961d609
  411c01:	push   0xffffffc5
  411c03:	pop    edx
  411c04:	push   edx
  411c05:	adc    BYTE PTR [edi+0x5acb072e],ah
  411c0b:	adc    ebx,DWORD PTR [eax]
  411c0d:	dec    ebx
  411c0e:	jmp    0xae02433c
  411c13:	jmp    0x411bf5
  411c15:	push   eax
  411c16:	cs inc edi
  411c18:	es inc eax
  411c1a:	mov    dl,0x1a
  411c1c:	mov    al,ds:0x991ad08f
  411c21:	retf   
  411c22:	cmp    eax,0x458c5adf
  411c27:	dec    esp
  411c28:	jbe    0x411bcf
  411c2a:	push   0x3c
  411c2c:	aas    
  411c2d:	sbb    ebx,DWORD PTR [ebx+0x2c]
  411c30:	loope  0x411bec
  411c32:	stc    
  411c33:	cmp    ch,BYTE PTR [eax+0x30]
  411c36:	test   eax,0x4618cc42
  411c3b:	inc    edx
  411c3c:	test   BYTE PTR [edi+0x5d9ee140],dh
  411c42:	stos   DWORD PTR es:[edi],eax
  411c43:	and    eax,0x10ff85fd
  411c48:	in     al,dx
  411c49:	mov    edx,0xf4fb6849
  411c4e:	sbb    ch,bl
  411c50:	(bad)  
  411c51:	pop    eax
  411c52:	mov    ds:0x11e81219,al
  411c57:	mov    ds:0x81fb3781,al
  411c5c:	(bad)  
  411c5d:	push   ecx
  411c5e:	mov    ch,0x25
  411c60:	cmp    BYTE PTR [edi],0x72
  411c63:	(bad)  [esi+0x29]
  411c66:	imul   ebp,DWORD PTR [ecx],0xffffff8f
  411c69:	shl    BYTE PTR [esi+0x2fbf02e6],cl
  411c6f:	mov    ecx,0x5253d323
  411c74:	or     edi,esi
  411c76:	add    bl,0x80
  411c79:	sub    eax,0x7b426278
  411c7e:	lds    ecx,FWORD PTR [edx-0x133618d5]
  411c84:	push   ebx
  411c85:	sbb    eax,0x4cabb225
  411c8a:	pop    es
  411c8b:	lods   eax,DWORD PTR ds:[esi]
  411c8c:	mov    eax,ecx
  411c8e:	div    BYTE PTR [ecx]
  411c90:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  411c92:	inc    ebx
  411c93:	icebp  
  411c94:	jae    0x411cb2
  411c96:	fwait
  411c97:	cli    
  411c98:	cld    
  411c99:	popf   
  411c9a:	bound  ebx,QWORD PTR [edi-0x1d]
  411c9d:	sti    
  411c9e:	imul   ebp,DWORD PTR [eax+edi*2],0xfffffff5
  411ca2:	and    DWORD PTR [ecx*1-0x3665820e],esi
  411ca9:	mov    eax,0x577c1fc8
  411cae:	retf   0x73f1
  411cb1:	push   ebx
  411cb2:	pop    ecx
  411cb3:	cld    
  411cb4:	add    al,0x38
  411cb6:	dec    edx
  411cb7:	sar    bh,0xe9
  411cba:	shl    DWORD PTR [ebx-0x1a],cl
  411cbd:	push   ecx
  411cbe:	add    edi,DWORD PTR [ecx+0x660dd11e]
  411cc4:	aas    
  411cc5:	les    esi,FWORD PTR [ebp+0x5]
  411cc8:	and    eax,0xdeca891
  411ccd:	add    ch,BYTE PTR [esi]
  411ccf:	jne    0x411c7a
  411cd1:	add    ebp,DWORD PTR [ecx+0x48fa73df]
  411cd7:	or     BYTE PTR [esi-0x70b1cb2c],cl
  411cdd:	mov    ds:0x6871a99,eax
  411ce2:	in     al,dx
  411ce3:	sti    
  411ce4:	mov    edi,0x35726c23
  411ce9:	int3   
  411cea:	or     DWORD PTR [eax+0x711b7988],ebx
  411cf0:	add    dh,BYTE PTR [ebp+eax*8-0x72]
  411cf4:	retf   0x48b4
  411cf7:	mov    ebx,0xf35e8dd6
  411cfc:	dec    eax
  411cfd:	ret    0x39b7
  411d00:	sbb    al,0xe3
  411d02:	in     al,dx
  411d03:	lock pop edi
  411d05:	or     al,0x6f
  411d08:	jnp    0x411c8f
  411d0a:	and    esp,0xffffffea
  411d0d:	aas    
  411d0e:	sub    ebx,DWORD PTR [esi+0x5c462a51]
  411d14:	or     edx,DWORD PTR [edi+0x17cb3b5c]
  411d1a:	jmp    0xc33f:0x3482b082
  411d21:	iret   
  411d22:	cmp    eax,0x2b1d4cc6
  411d27:	jns    0x411d63
  411d29:	mul    DWORD PTR [edx-0x47d8b35a]
  411d2f:	out    0x7b,al
  411d31:	and    DWORD PTR [edx-0x4a],ecx
  411d34:	inc    ecx
  411d35:	test   BYTE PTR [edi-0x5a08259e],al
  411d3b:	xlat   BYTE PTR ds:[ebx]
  411d3c:	mov    cl,cl
  411d3e:	push   ss
  411d3f:	mov    esi,0xd86748dd
  411d44:	mov    ah,0x9f
  411d46:	mov    ds:0x1d2355d2,eax
  411d4b:	mov    esi,0x7b3cd947
  411d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d51:	arpl   WORD PTR [edx-0x13992fa],cx
  411d57:	mov    ecx,0x2b06728f
  411d5c:	xor    bl,BYTE PTR [ebx+0x29]
  411d5f:	or     bh,BYTE PTR [eax]
  411d61:	js     0x411d3d
  411d63:	or     edi,DWORD PTR [ecx+0x4d]
  411d66:	int    0xa
  411d68:	out    0xb,al
  411d6a:	ror    DWORD PTR [edi],cl
  411d6c:	push   esp
  411d6d:	xor    BYTE PTR [edi+0xe],al
  411d70:	push   ds
  411d71:	sti    
  411d72:	push   ds
  411d73:	add    dh,BYTE PTR [ebp-0x58]
  411d76:	js     0x411d1e
  411d78:	jno    0x411d31
  411d7a:	xchg   edx,eax
  411d7b:	hlt    
  411d7c:	mov    ch,0x80
  411d7e:	adc    eax,0xe37302c
  411d83:	mov    DWORD PTR [esi-0x73b84972],esi
  411d89:	xor    BYTE PTR [edi+0x30],al
  411d8c:	(bad)  
  411d8d:	sbb    eax,0xdcba6d4f
  411d92:	ror    BYTE PTR [edi],1
  411d94:	imul   ecx,DWORD PTR [ebx],0x30
  411d97:	cmp    bh,BYTE PTR [edi+0x53]
  411d9a:	lock repz push gs
  411d9e:	or     DWORD PTR [ecx+0x25035c14],esi
  411da4:	les    ebx,FWORD PTR [ebx-0x44d7a062]
  411daa:	inc    esp
  411dab:	jno    0x411dea
  411dad:	ins    BYTE PTR es:[edi],dx
  411dae:	test   al,0x7d
  411db0:	or     al,0xb7
  411db3:	jl     0x411d71
  411db5:	mov    ds:0x210ff32,al
  411dba:	xchg   edx,ebp
  411dbc:	sbb    BYTE PTR [edi-0x600f9432],dl
  411dc2:	sti    
  411dc3:	xchg   edi,eax
  411dc4:	cmp    eax,0xc34e5ea0
  411dc9:	add    DWORD PTR [ebp-0x3a8be628],ebp
  411dcf:	jp     0x411d6b
  411dd1:	addr16 jo 0x411d57
  411dd4:	ins    BYTE PTR es:[edi],dx
  411dd5:	jle    0x411e28
  411dd7:	xchg   edx,eax
  411dd8:	jp     0x411d80
  411dda:	out    0x14,al
  411ddc:	fwait
  411ddd:	pop    ss
  411dde:	(bad)  
  411ddf:	and    ebx,DWORD PTR [esi]
  411de1:	cs stc 
  411de3:	or     BYTE PTR [esp+edx*2-0x4c6ef0d3],dl
  411dea:	and    DWORD PTR ds:[edx-0x242650],ebp
  411df1:	sbb    eax,0x42e70dad
  411df6:	lods   al,BYTE PTR ds:[esi]
  411df7:	es mov cl,0x8d
  411dfa:	iret   
  411dfb:	sub    eax,0x87b2ef06
  411e00:	mov    eax,0x4d04f8ba
  411e05:	or     al,0x14
  411e07:	ror    BYTE PTR [eax-0x377faa19],0x7f
  411e0e:	out    dx,eax
  411e0f:	pop    edi
  411e10:	or     ecx,DWORD PTR [esi-0x131417d0]
  411e16:	stos   DWORD PTR es:[edi],eax
  411e17:	gs aas 
  411e19:	push   eax
  411e1a:	mov    edx,0x2f00d558
  411e1f:	xchg   esi,eax
  411e20:	in     eax,0xd1
  411e22:	cmp    bl,dl
  411e24:	sbb    cl,BYTE PTR [ebx-0x48]
  411e27:	cwde   
  411e28:	jb     0x411e24
  411e2a:	dec    esp
  411e2b:	hlt    
  411e2c:	mov    dl,0x36
  411e2e:	jl     0x411e5b
  411e30:	fnstcw WORD PTR [ecx+0x23]
  411e33:	lods   eax,DWORD PTR ds:[esi]
  411e34:	(bad)  
  411e35:	fist   WORD PTR [esi+0x29]
  411e38:	(bad)  
  411e39:	mov    cl,0x2b
  411e3b:	lods   al,BYTE PTR ds:[esi]
  411e3c:	lahf   
  411e3d:	pop    esp
  411e3e:	mov    edx,0x87e88cf3
  411e43:	iret   
  411e44:	hlt    
  411e45:	xchg   ebx,eax
  411e46:	mov    ah,0x43
  411e48:	jnp    0x411ec3
  411e4a:	mov    ch,0xd0
  411e4c:	push   ebx
  411e4d:	push   ecx
  411e4e:	jae    0x411e7b
  411e50:	sahf   
  411e51:	outs   dx,BYTE PTR ds:[esi]
  411e52:	cmp    al,0x49
  411e54:	jbe    0x411e83
  411e56:	xchg   esp,eax
  411e57:	pop    ebp
  411e58:	xor    al,0x35
  411e5a:	dec    ebx
  411e5b:	sbb    ecx,0xffffffd9
  411e5e:	popf   
  411e5f:	xchg   DWORD PTR [eax],ecx
  411e61:	(bad)  
  411e63:	xor    esi,ebx
  411e65:	jge    0x411e63
  411e67:	shl    BYTE PTR [eax+0x12],0xc9
  411e6b:	mov    DWORD PTR [ecx-0x555e51c4],ebp
  411e71:	jle    0x411e53
  411e73:	mov    bh,0xcf
  411e75:	imul   esi,DWORD PTR [eax+0x5f19392a],0x35
  411e7c:	aam    0x66
  411e7e:	add    edx,edi
  411e80:	xchg   ecx,eax
  411e81:	popf   
  411e82:	xlat   BYTE PTR ds:[ebx]
  411e83:	and    BYTE PTR [edi+0x4af05345],0x74
  411e8a:	inc    ebx
  411e8b:	popa   
  411e8c:	jge    0x411e0f
  411e8e:	pop    ebx
  411e8f:	popf   
  411e90:	inc    edx
  411e91:	mov    WORD PTR [ebx+0x49],gs
  411e94:	cmp    esi,DWORD PTR [eax]
  411e96:	sbb    edi,DWORD PTR [esi]
  411e98:	dec    esi
  411e99:	mov    WORD PTR ds:0xd8050c8b,gs
  411e9f:	jae    0x411e44
  411ea1:	adc    al,ch
  411ea3:	xor    ah,BYTE PTR [edi+edx*2+0x4460d09c]
  411eaa:	out    0x87,eax
  411eac:	jge    0x411ef8
  411eae:	and    eax,DWORD PTR [eax]
  411eb0:	jl     0x411edc
  411eb2:	inc    esp
  411eb3:	add    eax,DWORD PTR [edx+0x7834a8de]
  411eb9:	int3   
  411eba:	and    BYTE PTR [ecx+0x4cd9830],0x73
  411ec1:	pop    ds
  411ec2:	pop    eax
  411ec3:	bound  eax,QWORD PTR [eax]
  411ec5:	add    DWORD PTR [ebx+0x4cb4fa39],ebp
  411ecb:	popf   
  411ecc:	adc    BYTE PTR [ebx],ah
  411ece:	je     0x411f2a
  411ed0:	jg     0x411e54
  411ed2:	cwde   
  411ed3:	cmc    
  411ed4:	retf   0x628e
  411ed7:	retf   
  411ed8:	add    eax,DWORD PTR [esi-0x13]
  411edb:	or     BYTE PTR [eax+0x66],ah
  411ede:	fs inc edi
  411ee0:	push   ebx
  411ee1:	aaa    
  411ee2:	not    DWORD PTR [edi]
  411ee4:	inc    eax
  411ee5:	sub    BYTE PTR [eax+0x57],bh
  411ee8:	xor    dh,BYTE PTR [ebp+edx*4-0x20966196]
  411eef:	lds    esi,FWORD PTR [ebp-0x56]
  411ef2:	mov    bl,0x89
  411ef4:	pop    ecx
  411ef5:	call   0xfaf989a2
  411efa:	cdq    
  411efb:	pop    edi
  411efc:	jo     0x411eaf
  411efe:	out    dx,al
  411eff:	pop    edx
  411f00:	mov    edi,0xff39ec55
  411f05:	dec    eax
  411f06:	push   edi
  411f07:	xor    DWORD PTR [ebp+0x1e868f94],edi
  411f0d:	mov    edi,0x53449588
  411f12:	jne    0x411f08
  411f14:	enter  0xb429,0xba
  411f18:	shl    DWORD PTR [edx+0x56],1
  411f1b:	les    ecx,FWORD PTR [eax+0x3b]
  411f1e:	call   0x8f0a5e67
  411f23:	not    BYTE PTR [edx+0x4f6a016e]
  411f29:	adc    eax,0x715926c7
  411f2e:	xchg   ecx,eax
  411f2f:	and    DWORD PTR [ebp-0x7f],ebx
  411f32:	ja     0x411f6d
  411f34:	mov    al,0xa0
  411f36:	sti    
  411f37:	std    
  411f38:	and    BYTE PTR [ebx+0xc896110],dh
  411f3e:	dec    edx
  411f3f:	paddusb mm0,mm3
  411f42:	adc    BYTE PTR [edi+eiz*4-0x34],bl
  411f46:	fisttp WORD PTR [ebp+ecx*2-0x6ccfd115]
  411f4d:	cmc    
  411f4e:	std    
  411f4f:	lea    esp,[edi+ebx*2]
  411f52:	std    
  411f53:	push   ebx
  411f54:	dec    ebx
  411f55:	pop    edx
  411f56:	mov    al,0xbb
  411f58:	push   esp
  411f59:	or     ch,BYTE PTR [ebp+0x3d455e30]
  411f5f:	rcr    DWORD PTR [eax+0x1b1f0414],0xb6
  411f66:	jmp    0xc286b79e
  411f6b:	sar    bl,1
  411f6d:	jo     0x411f0c
  411f6f:	mov    ah,0x16
  411f71:	dec    ebx
  411f72:	inc    esi
  411f73:	push   ebp
  411f74:	cmp    DWORD PTR ds:0xd68eeeba,ebp
  411f7a:	out    dx,eax
  411f7b:	ins    BYTE PTR es:[edi],dx
  411f7c:	fwait
  411f7d:	iret   
  411f7e:	xchg   ebx,eax
  411f7f:	int3   
  411f80:	cdq    
  411f81:	inc    edx
  411f82:	xor    DWORD PTR [edx-0x27],edx
  411f85:	jl     0x411f65
  411f87:	lea    ebp,[eax-0x68409c3a]
  411f8d:	fnstsw WORD PTR [eax+0x2f]
  411f90:	ds add eax,ebp
  411f93:	shl    BYTE PTR [edi],0x9
  411f96:	repz pop edx
  411f98:	jno    0x411fc1
  411f9a:	pop    es
  411f9b:	mul    BYTE PTR [bx+di]
  411f9e:	call   0xf35b9526
  411fa3:	cs repnz push edx
  411fa6:	nop
  411fa7:	call   FWORD PTR [ebx]
  411fa9:	jnp    0x412021
  411fab:	add    BYTE PTR [ecx-0x46c3e4cf],dh
  411fb1:	mov    esi,0x88348ab6
  411fb6:	retf   0x7a67
  411fb9:	xor    eax,DWORD PTR [ebp+0xf47da03]
  411fbf:	add    eax,0x37373a9d
  411fc4:	jmp    0xfeda:0x5da9e672
  411fcb:	and    al,0xcf
  411fcd:	adc    eax,edi
  411fcf:	mov    eax,ds:0xffe237e7
  411fd4:	mov    gs,WORD PTR [eax]
  411fd6:	ds push ecx
  411fd8:	call   0x4c75:0xf9993bed
  411fdf:	xor    DWORD PTR [edi+edi*1+0x18],ebx
  411fe3:	cmp    ecx,DWORD PTR [esp+esi*2+0x5d]
  411fe7:	shl    al,0xd6
  411fea:	push   ecx
  411feb:	ins    DWORD PTR es:[edi],dx
  411fec:	or     eax,0xea4182e7
  411ff1:	jns    0x41204b
  411ff3:	dec    esi
  411ff4:	std    
  411ff5:	push   ebp
  411ff6:	push   edi
  411ff7:	loopne 0x412043
  411ff9:	loope  0x411fc2
  411ffb:	hlt    
  411ffc:	jo     0x411fc2
  411ffe:	into   
  411fff:	mov    al,0xb3
  412001:	daa    
  412002:	addr16 int3 
  412004:	or     DWORD PTR [edi-0x4da675e4],esp
  41200a:	jmp    0x41205c
  41200c:	fdivr  QWORD PTR [edi+ecx*4+0x5e]
  412010:	xchg   ecx,eax
  412011:	push   ecx
  412012:	push   0x5
  412014:	in     al,dx
  412015:	xor    eax,0x3b2d25c3
  41201a:	psraw  mm5,QWORD PTR [ebx+esi*4+0x33c55c49]
  412022:	ror    DWORD PTR [edi],1
  412024:	xchg   esp,eax
  412025:	pop    ebx
  412026:	inc    esi
  412027:	imul   edi,DWORD PTR [ecx],0xffffffd6
  41202a:	arpl   di,dx
  41202c:	sub    eax,0xcde2a5fd
  412031:	xchg   ecx,eax
  412032:	sti    
  412033:	cmc    
  412034:	call   0x7d194f6c
  412039:	add    eax,0x8ba73ca9
  41203e:	and    DWORD PTR [eax-0x19b87f8a],0x161f07ae
  412048:	sbb    esi,DWORD PTR [esi]
  41204a:	shl    BYTE PTR [edi-0x25300b51],0x7e
  412051:	aam    0x93
  412053:	out    0xed,eax
  412055:	or     al,0xb4
  412057:	pop    ecx
  412058:	(bad)  
  412059:	push   esp
  41205a:	out    0x26,eax
  41205c:	push   edi
  41205d:	mov    esi,0x4bf87ac5
  412062:	xchg   BYTE PTR [ecx],al
  412064:	mov    esi,0xa171fde
  412069:	dec    edx
  41206a:	sub    al,0x12
  41206c:	test   BYTE PTR [ebp+ebx*1+0x28],al
  412070:	int3   
  412071:	pinsrw mm0,WORD PTR [eax+edx*4-0x382416da],0xe5
  41207a:	add    DWORD PTR cs:[ebp-0x1d],ecx
  41207e:	or     esi,DWORD PTR [esi]
  412080:	aam    0x4c
  412082:	cmp    DWORD PTR [esi],edi
  412084:	cs sbb eax,0x443ce88e
  41208a:	lahf   
  41208b:	or     al,0xee
  41208d:	mov    al,BYTE PTR [ebx-0x5d44d99]
  412093:	push   esi
  412094:	mov    al,ds:0x44d506e3
  412099:	popf   
  41209a:	bound  edx,QWORD PTR [ebx]
  41209c:	cmp    eax,0x4a80e9a1
  4120a1:	add    al,0x69
  4120a3:	sbb    DWORD PTR [ebx-0x65c72c28],ecx
  4120a9:	pop    es
  4120aa:	adc    esi,DWORD PTR [edi]
  4120ac:	(bad)  
  4120ad:	cs push edi
  4120af:	inc    esp
  4120b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b1:	or     esi,DWORD PTR [ecx]
  4120b3:	enter  0xfa92,0x18
  4120b7:	iret   
  4120b8:	les    esi,FWORD PTR [eax]
  4120ba:	xor    al,0x2b
  4120bc:	dec    ebp
  4120bd:	adc    DWORD PTR ds:0xd8f63b18,0x907a057c
  4120c7:	div    BYTE PTR [eax-0x60cf527]
  4120cd:	pop    esp
  4120ce:	dec    edx
  4120cf:	rcr    esp,1
  4120d1:	imul   eax,DWORD PTR [eax+0x4f990781],0x7e59845b
  4120db:	inc    edi
  4120dc:	mov    dh,0xc
  4120de:	cmp    DWORD PTR [eax],ebx
  4120e0:	push   es
  4120e1:	nop
  4120e2:	or     al,0x93
  4120e4:	inc    edx
  4120e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e6:	sub    DWORD PTR [ebx+0x4f],esp
  4120e9:	push   edx
  4120ea:	outs   dx,DWORD PTR ds:[esi]
  4120eb:	sahf   
  4120ec:	(bad)  
  4120ed:	shl    DWORD PTR ds:0xa9b8aae9,1
  4120f3:	adc    eax,0x99b4c270
  4120f8:	pop    ebx
  4120f9:	shr    DWORD PTR [ebx],1
  4120fb:	add    bh,ch
  4120fd:	add    esi,esi
  4120ff:	mov    ?,WORD PTR [esi-0x7597a024]
  412105:	adc    bh,BYTE PTR [esi]
  412107:	test   al,0xfe
  412109:	xchg   ecx,eax
  41210a:	cdq    
  41210b:	(bad)  
  41210c:	pushf  
  41210d:	add    ebx,DWORD PTR [edx+0x7]
  412110:	loopne 0x4120c3
  412112:	fnsave [ebx-0x8]
  412115:	scas   al,BYTE PTR es:[edi]
  412116:	rcl    ch,cl
  412118:	and    BYTE PTR [edx+0x1bccf999],0xb1
  41211f:	aad    0x55
  412121:	imul   ebx,DWORD PTR ds:0x67ca1305,0xffffffe5
  412128:	mov    ah,0xd
  41212a:	dec    ecx
  41212b:	lea    edi,[ebp+edx*4+0xba5dba9]
  412132:	arpl   cx,bx
  412134:	rcr    DWORD PTR [edi+0x1aeb5f51],cl
  41213a:	adc    dh,BYTE PTR [ebx+0x48]
  41213d:	mov    eax,0x57e68dad
  412142:	je     0x4121ad
  412144:	ret    0x2ac0
  412147:	adc    BYTE PTR [eax+0x9653429],0x64
  41214e:	adc    BYTE PTR [esi],0x2c
  412151:	inc    ebx
  412152:	jge    0x41213b
  412154:	stc    
  412155:	jb     0x4121af
  412157:	ret    0xf26b
  41215a:	push   ebx
  41215b:	shr    DWORD PTR [ebx+0x4e],0xcd
  41215f:	mov    ecx,DWORD PTR [ebp+0x6be97084]
  412165:	das    
  412166:	pop    es
  412167:	add    al,0xd6
  412169:	call   0xd874:0xbc826989
  412170:	jmp    0xa99db5d0
  412175:	dec    esi
  412176:	ins    BYTE PTR es:[edi],dx
  412177:	jb     0x41215a
  412179:	inc    esp
  41217a:	or     eax,0xa49f847e
  41217f:	ret    0x27a6
  412182:	pusha  
  412183:	dec    esi
  412184:	lods   eax,DWORD PTR ds:[esi]
  412185:	(bad)  
  412186:	jle    0x4121d5
  412188:	mov    al,ds:0xf74c9c87
  41218d:	repz ds xchg ebp,eax
  412190:	retf   
  412191:	aad    0x3f
  412193:	sbb    BYTE PTR [edx],0x72
  412196:	pop    edx
  412197:	scas   eax,DWORD PTR es:[edi]
  412198:	cmp    DWORD PTR [ebx],0x28
  41219b:	pop    esp
  41219c:	add    DWORD PTR ds:0x71cfea74,ebp
  4121a2:	test   esp,edx
  4121a4:	js     0x4121d2
  4121a6:	jno    0x41213d
  4121a8:	adc    al,0x5a
  4121aa:	xchg   ecx,eax
  4121ab:	stc    
  4121ac:	push   eax
  4121ad:	stos   BYTE PTR es:[edi],al
  4121ae:	popa   
  4121af:	jns    0x4121ee
  4121b1:	lods   eax,DWORD PTR ds:[esi]
  4121b2:	into   
  4121b3:	lods   al,BYTE PTR ds:[esi]
  4121b4:	fstp   st(0)
  4121b6:	ficomp WORD PTR [ebx]
  4121b8:	dec    eax
  4121b9:	cs jmp 0x41220e
  4121bc:	mov    bh,0x2b
  4121be:	lds    esi,FWORD PTR [eax-0x65e8fdfb]
  4121c4:	sub    BYTE PTR [esi+0x6c],ch
  4121c7:	mov    eax,0xfa05507a
  4121cc:	pop    ds
  4121cd:	(bad)  
  4121ce:	sub    eax,0xfd2be3a4
  4121d3:	push   ds
  4121d4:	cwde   
  4121d5:	mov    ecx,0xb6aefcad
  4121da:	(bad)  
  4121db:	outs   dx,DWORD PTR ds:[esi]
  4121dc:	sbb    ecx,DWORD PTR [edx-0x48b7b615]
  4121e2:	sbb    esi,DWORD PTR [ebx+0x4b]
  4121e5:	fs inc ebp
  4121e7:	xchg   esi,eax
  4121e8:	adc    DWORD PTR [eax*1+0x417514c],esi
  4121ef:	enter  0xcc57,0x44
  4121f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f4:	cs dec ebx
  4121f6:	(bad)
  4121fa:	adc    al,0x54
  4121fc:	pop    ebp
  4121fd:	mov    ds:0xf04e538e,al
  412202:	jb     0x41220f
  412204:	xchg   ah,bl
  412206:	mov    al,0xb0
  412208:	std    
  412209:	stos   BYTE PTR es:[edi],al
  41220a:	sub    dl,BYTE PTR [ecx+ebx*2-0x29e24122]
  412211:	out    0xaf,eax
  412213:	dec    ebx
  412214:	sbb    ah,bl
  412216:	clc    
  412217:	jg     0x4121ab
  412219:	xor    BYTE PTR [ebp+eiz*8-0xd],dl
  41221d:	adc    eax,0xa4e05b49
  412222:	jo     0x412216
  412224:	loope  0x412228
  412226:	outs   dx,BYTE PTR ds:[esi]
  412227:	dec    edx
  412228:	xor    ch,dh
  41222a:	out    0x2e,eax
  41222c:	mov    dl,0x5d
  41222e:	std    
  41222f:	sub    ecx,DWORD PTR [edi]
  412231:	cdq    
  412232:	mov    ds:0xcc611e05,eax
  412237:	mov    bl,0x71
  412239:	(bad)  
  41223a:	fcmove st,st(6)
  41223c:	adc    DWORD PTR [esi+eax*8],0x44
  412240:	push   0x444e8b67
  412245:	fwait
  412246:	pop    ds
  412247:	adc    DWORD PTR es:[ecx-0x27075721],edi
  41224e:	push   eax
  41224f:	and    BYTE PTR [ebx+0x7821deee],ah
  412255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412256:	mov    bl,0xd0
  412258:	retf   0xeb23
  41225b:	jle    0x412287
  41225d:	xor    eax,0x2b0dcfa2
  412262:	popf   
  412263:	(bad)  
  412264:	cmc    
  412265:	loopne 0x412278
  412267:	in     eax,0x62
  412269:	adc    DWORD PTR [edi+edi*8],ebx
  41226c:	cmp    DWORD PTR [esi],edx
  41226e:	loope  0x412270
  412270:	cld    
  412271:	xchg   ecx,eax
  412272:	jmp    0x511f610c
  412277:	fnstenv [ebp+0x43]
  41227a:	xchg   ebp,eax
  41227b:	in     eax,0xab
  41227d:	ja     0x41225e
  41227f:	sbb    dh,BYTE PTR [eax]
  412281:	cs pop esi
  412283:	or     eax,0x58b6611e
  412288:	and    eax,0xc4e2646b
  41228d:	mov    ds:0x27b223d8,eax
  412292:	das    
  412293:	pusha  
  412294:	ins    BYTE PTR es:[edi],dx
  412295:	or     esp,DWORD PTR [ecx-0x186ef99a]
  41229b:	fidiv  WORD PTR [edi+0x6e]
  41229e:	sbb    eax,0x735499de
  4122a3:	int3   
  4122a4:	in     eax,0xea
  4122a6:	(bad)  
  4122a7:	adc    DWORD PTR [esi],ebp
  4122a9:	je     0x412317
  4122ab:	fcom   st(0)
  4122ad:	repnz in al,0xf3
  4122b0:	cwde   
  4122b1:	cwde   
  4122b2:	mov    eax,0x31666656
  4122b7:	outs   dx,BYTE PTR ds:[esi]
  4122b8:	jmp    0xf785:0x67abd5c0
  4122bf:	ja     0x41225c
  4122c1:	push   cs
  4122c2:	mov    esi,0xed1370d9
  4122c7:	xor    al,0xc0
  4122c9:	xor    DWORD PTR [eax],ebp
  4122cb:	repnz mov ch,0xf4
  4122ce:	pushf  
  4122cf:	out    dx,eax
  4122d0:	(bad)  
  4122d1:	int3   
  4122d2:	test   al,0xfa
  4122d4:	jae    0x412331
  4122d6:	gs pop ecx
  4122d8:	xchg   edx,eax
  4122d9:	popf   
  4122da:	cmp    eax,DWORD PTR [ebx-0x18ecf6d7]
  4122e0:	sbb    ah,ah
  4122e2:	pop    ecx
  4122e3:	add    DWORD PTR [esi],eax
  4122e5:	out    dx,al
  4122e6:	out    0xc9,eax
  4122e8:	(bad)  
  4122ea:	stc    
  4122eb:	cs jmp 0x1253:0x6ee72c44
  4122f3:	dec    esp
  4122f4:	lea    ecx,[esi-0x38]
  4122f7:	hlt    
  4122f8:	add    bh,BYTE PTR [ebx]
  4122fa:	popf   
  4122fb:	mov    edi,0x244a81a0
  412300:	out    dx,eax
  412301:	out    0x21,al
  412303:	xor    eax,0x2f42565b
  412308:	cmp    esi,DWORD PTR ds:[ebx+0x76202aff]
  41230f:	jg     0x412327
  412311:	pop    eax
  412312:	aas    
  412313:	sbb    ebp,ebp
  412315:	sbb    al,0x6c
  412317:	xor    DWORD PTR [esi+0x34],esi
  41231a:	icebp  
  41231b:	aam    0xe3
  41231d:	arpl   WORD PTR [edx+0x35],si
  412320:	mov    dl,0x29
  412322:	mov    eax,0x4c8ee844
  412327:	cwde   
  412328:	pop    edi
  412329:	jns    0x4122c0
  41232b:	inc    esp
  41232c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41232d:	inc    ebx
  41232e:	push   esi
  41232f:	sbb    BYTE PTR [edi*8-0x322d9414],bl
  412336:	in     eax,dx
  412337:	(bad)  
  412338:	retf   0xa7cf
  41233b:	pop    edi
  41233c:	pop    ebx
  41233d:	push   0x4e9ddb31
  412342:	or     bh,BYTE PTR [ecx]
  412344:	test   dh,bh
  412346:	pop    eax
  412347:	add    dl,bh
  412349:	xchg   BYTE PTR [ecx],bh
  41234b:	pop    ebp
  41234c:	rcr    BYTE PTR [esi],0x82
  41234f:	pop    edi
  412350:	(bad)  
  412351:	adc    esp,DWORD PTR [ebp+0x2e60151]
  412357:	push   cs
  412358:	and    al,0xcc
  41235a:	retf   
  41235b:	push   ss
  41235c:	in     eax,dx
  41235d:	retf   0xc6f3
  412360:	mov    al,ds:0x948bc1ea
  412365:	push   ds
  412366:	push   esi
  412367:	shr    DWORD PTR [edx-0x1e57aa31],0x1c
  41236e:	push   ecx
  41236f:	not    bl
  412371:	and    al,0x25
  412373:	sbb    BYTE PTR [edi+0x2d387b1c],ah
  412379:	sar    DWORD PTR [ebx-0x1b721250],0xee
  412380:	add    BYTE PTR [edx+0x16],cl
  412383:	test   DWORD PTR fs:[eax+0x29],eax
  412387:	and    DWORD PTR [ebp-0x67],ecx
  41238a:	push   edx
  41238b:	mov    ch,0x3e
  41238d:	scas   eax,DWORD PTR es:[edi]
  41238e:	adc    ebp,0x4af12e9b
  412394:	stos   BYTE PTR es:[edi],al
  412395:	adc    esi,DWORD PTR [esi+0x6dadbebe]
  41239b:	inc    edi
  41239c:	shl    BYTE PTR [ebx],cl
  41239e:	fstp   QWORD PTR [ecx+esi*2]
  4123a1:	std    
  4123a2:	mov    eax,0x9ccaf80a
  4123a7:	xchg   edx,eax
  4123a8:	sub    ebx,DWORD PTR [ebx]
  4123aa:	ins    BYTE PTR es:[edi],dx
  4123ab:	xchg   ebp,eax
  4123ac:	dec    edx
  4123ad:	jne    0x412337
  4123af:	in     eax,dx
  4123b0:	dec    esp
  4123b1:	test   BYTE PTR [ebx],ch
  4123b3:	and    al,0x3e
  4123b5:	inc    ebp
  4123b6:	jae    0x412398
  4123b8:	mov    bl,0x97
  4123ba:	jne    0x412402
  4123bc:	jb     0x412380
  4123be:	fisub  DWORD PTR [esi-0x3126eab6]
  4123c4:	mov    esp,0xb332ce9b
  4123c9:	imul   edx,esi,0x75
  4123cc:	iret   
  4123cd:	adc    esi,DWORD PTR [eax+ebp*8-0x5c]
  4123d1:	jb     0x412364
  4123d3:	js     0x412403
  4123d5:	loope  0x412362
  4123d7:	retf   
  4123d8:	dec    ebp
  4123d9:	jecxz  0x412430
  4123db:	inc    eax
  4123dc:	and    cl,bh
  4123de:	pushf  
  4123df:	pop    esp
  4123e0:	stos   DWORD PTR es:[edi],eax
  4123e1:	test   DWORD PTR [ebx],esi
  4123e3:	lods   al,BYTE PTR ds:[esi]
  4123e4:	sub    dl,BYTE PTR [ebx+ebp*2]
  4123e7:	pop    ebp
  4123e8:	sub    BYTE PTR [eax+0x1cd92c7],0x26
  4123ef:	movaps XMMWORD PTR [eax-0x57ad01e2],xmm5
  4123f6:	jns    0x412440
  4123f8:	mov    edx,0xa7b1613
  4123fd:	pop    ss
  4123fe:	popa   
  4123ff:	jmp    0x1d0dc111
  412404:	cld    
  412405:	cdq    
  412406:	sub    BYTE PTR [ebp+eiz*4+0x11301039],ch
  41240d:	fld    QWORD PTR [ecx]
  41240f:	cmp    al,0x97
  412411:	pop    esi
  412412:	xchg   edx,eax
  412413:	cmp    cl,BYTE PTR [eax+ecx*8-0x53]
  412417:	dec    ebp
  412418:	jbe    0x412463
  41241a:	fs mov eax,0x9190644c
  412420:	out    dx,eax
  412421:	xchg   esi,eax
  412422:	rcr    DWORD PTR [ebp+0x5f42e9fb],0x9f
  412429:	cmp    BYTE PTR [ebp-0x3866ea45],0x55
  412430:	dec    esp
  412431:	pop    esi
  412432:	or     cl,BYTE PTR ds:0xc0ea7b80
  412438:	repnz sar DWORD PTR ds:0xee802af6,1
  41243f:	popf   
  412440:	mov    ds:0xa163bd95,al
  412445:	mov    bh,0x66
  412447:	inc    ebx
  412448:	xchg   ebp,eax
  412449:	das    
  41244a:	push   cs
  41244b:	push   edi
  41244c:	aas    
  41244d:	cli    
  41244e:	adc    al,0x63
  412450:	pushf  
  412451:	aam    0xba
  412453:	outs   dx,DWORD PTR ds:[esi]
  412454:	xchg   edi,eax
  412455:	out    0x13,al
  412457:	inc    esp
  412458:	dec    ebx
  412459:	leave  
  41245a:	inc    ecx
  41245b:	(bad)  
  41245c:	or     DWORD PTR [ebx+0xb22b3ae],ebp
  412462:	sbb    al,0xe8
  412464:	xor    DWORD PTR [esi-0x16],esp
  412467:	in     eax,0xc2
  412469:	jno    0x41241f
  41246b:	mov    WORD PTR [edx+0x761cdc9a],ss
  412471:	in     al,dx
  412472:	inc    edi
  412473:	cmp    bh,BYTE PTR [edi]
  412475:	xor    al,0x44
  412477:	mov    ch,0x32
  412479:	call   0xa697:0x9e272e05
  412480:	ret    
  412481:	xchg   DWORD PTR [ebx-0x165d64f5],eax
  412487:	adc    al,0x19
  412489:	jno    0x412496
  41248b:	rcr    BYTE PTR [edi-0x6bf661b5],1
  412491:	ret    0x5de8
  412494:	or     esi,edi
  412496:	mov    edx,?
  412498:	push   ebx
  412499:	fs daa 
  41249b:	enter  0x8f53,0x17
  41249f:	xor    eax,0xdd797e1f
  4124a4:	iret   
  4124a5:	inc    ecx
  4124a6:	pushf  
  4124a7:	cmp    al,0x19
  4124a9:	dec    eax
  4124aa:	in     eax,dx
  4124ab:	cld    
  4124ac:	and    al,0xa7
  4124ae:	(bad)  
  4124af:	mov    esi,0x7e121c38
  4124b4:	jecxz  0x4124a4
  4124b6:	cmp    DWORD PTR [esi+0x25],0xb107ad4d
  4124bd:	push   ebp
  4124be:	cmp    eax,0xabb80a04
  4124c3:	xor    ebx,ecx
  4124c5:	gs loopne 0x41253e
  4124c8:	ds addr16 fxch st(5)
  4124cc:	mov    eax,0xe7f99157
  4124d1:	lock sub eax,0x7e6c739d
  4124d7:	pushf  
  4124d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d9:	aas    
  4124da:	mov    esp,0x38fd9e0e
  4124df:	out    dx,eax
  4124e0:	xchg   ebp,eax
  4124e1:	int    0x95
  4124e3:	add    edx,edx
  4124e5:	in     eax,0x7e
  4124e7:	cmp    bh,al
  4124e9:	enter  0x1297,0xf2
  4124ed:	(bad)  
  4124ee:	dec    edi
  4124ef:	out    0xcf,eax
  4124f1:	nop
  4124f2:	jae    0x412550
  4124f4:	ret    0x1607
  4124f7:	jns    0x41254e
  4124f9:	int    0x44
  4124fb:	inc    edi
  4124fc:	jmp    0x2ca5:0x6f9015e
  412503:	or     esp,DWORD PTR [ebp+0x493b8bfe]
  412509:	jmp    0x4124d6
  41250b:	xor    al,0x1d
  41250d:	ins    DWORD PTR es:[edi],dx
  41250e:	mov    eax,ds:0xff3da4c7
  412513:	and    al,0x99
  412515:	or     al,0xdd
  412517:	jge    0x412588
  412519:	gs jb  0x41253e
  41251c:	sub    al,0x16
  41251e:	mov    eax,0xc6f48faa
  412523:	push   ss
  412524:	(bad)  
  412525:	pop    eax
  412526:	fld    DWORD PTR [esi-0x237c03a8]
  41252c:	in     eax,0x32
  41252e:	ins    DWORD PTR es:[edi],dx
  41252f:	das    
  412530:	or     DWORD PTR [edi-0x5f077b1f],ebx
  412536:	jo     0x41254e
  412538:	jl     0x41256c
  41253a:	icebp  
  41253b:	mov    ah,0xb8
  41253d:	(bad)  
  41253e:	(bad)  
  41253f:	in     al,dx
  412540:	pop    edx
  412541:	ja     0x41254b
  412543:	push   ecx
  412544:	inc    esi
  412545:	push   es
  412546:	mov    edx,0x1fd0549
  41254b:	cld    
  41254c:	in     eax,0x41
  41254e:	dec    esp
  41254f:	inc    ecx
  412550:	dec    esp
  412551:	xor    BYTE PTR [esi],ch
  412553:	dec    edi
  412554:	xor    DWORD PTR [ecx-0x73],esi
  412557:	retf   0x98bc
  41255a:	dec    bp
  41255c:	mov    ds:0xd9d5974,al
  412561:	inc    esp
  412562:	mov    cl,0xc
  412564:	ret    
  412565:	je     0x4125c3
  412567:	mov    bh,0xc
  412569:	and    BYTE PTR [eax+esi*8-0x3e],ch
  41256d:	jae    0x412518
  41256f:	dec    ecx
  412570:	inc    ebp
  412571:	mov    bh,0xdb
  412573:	ja     0x41255d
  412575:	into   
  412576:	popf   
  412577:	xchg   ebp,eax
  412578:	aaa    
  412579:	popa   
  41257a:	(bad)  
  41257b:	div    BYTE PTR [ecx+ecx*1-0x2059be32]
  412582:	loop   0x412546
  412584:	fwait
  412585:	repnz pop esp
  412587:	inc    edi
  412588:	cmp    eax,0x9df7a4bf
  41258d:	lods   al,BYTE PTR ds:[esi]
  41258e:	mov    edx,DWORD PTR [edx+0x9e50fb7]
  412594:	jae    0x41254d
  412596:	dec    esi
  412597:	popa   
  412598:	arpl   WORD PTR [edi],bx
  41259a:	xor    BYTE PTR [edi+0x46],0xb7
  41259e:	imul   edi,eax,0xffffff92
  4125a1:	or     bh,BYTE PTR [ebx-0xb779749]
  4125a7:	rcr    DWORD PTR [esi-0x76552099],0x84
  4125ae:	adc    al,0x92
  4125b0:	mov    DWORD PTR [edx+0x39],esp
  4125b3:	(bad)  
  4125b4:	iret   
  4125b5:	leave  
  4125b6:	das    
  4125b7:	fcom   QWORD PTR [ebp-0x15]
  4125ba:	pop    ebp
  4125bb:	sbb    DWORD PTR [edi],edi
  4125bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125be:	push   ds
  4125bf:	jp     0x412587
  4125c1:	push   ebx
  4125c2:	mov    edx,0x630a5cad
  4125c7:	push   esp
  4125c8:	aas    
  4125c9:	xchg   ebx,eax
  4125ca:	test   bl,cl
  4125cc:	push   es
  4125cd:	popf   
  4125ce:	ss clc 
  4125d0:	mov    eax,DWORD PTR [ebp-0x41fe6bde]
  4125d6:	(bad)  
  4125d8:	gs cwde 
  4125da:	cli    
  4125db:	or     edi,DWORD PTR [ebp-0x8]
  4125de:	outs   dx,DWORD PTR ds:[esi]
  4125df:	push   0x1c8be0a7
  4125e4:	dec    ecx
  4125e5:	outs   dx,BYTE PTR ds:[esi]
  4125e6:	imul   esp,DWORD PTR [esi-0x19],0x5c6b3394
  4125ed:	inc    edx
  4125ee:	call   0x12d7:0xd18ea0f
  4125f5:	out    dx,al
  4125f6:	(bad)  
  4125f7:	fdiv   QWORD PTR [edx-0x429d5d07]
  4125fd:	xor    eax,0x374acb11
  412602:	mov    ds:0x95e3e982,al
  412607:	mov    eax,ds:0xd144d34
  41260c:	mov    DWORD PTR [esi+0x56],esi
  41260f:	test   DWORD PTR [edi+edi*1],eax
  412612:	cld    
  412613:	lock mov edx,0xe3adcc00
  412619:	loop   0x41260a
  41261b:	mov    ecx,0xe4b35a55
  412620:	fdiv   QWORD PTR [eax]
  412622:	imul   ebp,ebp,0xffffffab
  412625:	bound  ebx,QWORD PTR [eax]
  412627:	xor    edi,DWORD PTR [eax+0x53]
  41262a:	inc    eax
  41262b:	jo     0x4126a8
  41262d:	xor    DWORD PTR [ebx+0x11],0xacbe03e2
  412634:	xchg   ebx,eax
  412635:	ins    BYTE PTR es:[edi],dx
  412636:	dec    edi
  412637:	jp     0x412627
  412639:	popf   
  41263a:	inc    esp
  41263b:	xchg   esi,eax
  41263c:	jmp    0x1919:0x3a9be2ff
  412643:	pop    ss
  412644:	push   edx
  412645:	lds    eax,FWORD PTR [ebx+0x53043447]
  41264b:	das    
  41264c:	jmp    0x3704:0xfbd64074
  412653:	aad    0x60
  412655:	mov    ecx,0xf6379bb4
  41265a:	mov    DWORD PTR [esi+0x49],eax
  41265d:	(bad)  
  41265e:	std    
  41265f:	aaa    
  412660:	push   edi
  412661:	ds cmp eax,0xafce3c7
  412667:	sub    esi,eax
  412669:	xor    eax,0x735b75da
  41266e:	imul   ecx,ebx,0x52
  412671:	pop    ebx
  412672:	lods   eax,DWORD PTR ds:[esi]
  412673:	imul   edi,DWORD PTR [edi-0x5],0xf5aa117f
  41267a:	push   ebx
  41267b:	xchg   edi,eax
  41267c:	xor    edx,eax
  41267e:	mov    edi,0xa5dfa311
  412683:	xchg   ebp,eax
  412684:	inc    ebx
  412685:	arpl   WORD PTR [ebx+0x75],ax
  412688:	int    0x8e
  41268a:	jb     0x412687
  41268c:	cld    
  41268d:	inc    ecx
  41268e:	dec    ebx
  41268f:	gs into 
  412691:	and    al,0x4
  412693:	xor    dh,BYTE PTR [ecx]
  412695:	(bad)  
  412696:	xchg   esp,eax
  412697:	jmp    0x412703
  412699:	dec    ebp
  41269a:	push   ecx
  41269b:	stos   BYTE PTR es:[edi],al
  41269c:	mov    DWORD PTR [ebx],ebx
  41269e:	in     al,0x7e
  4126a0:	repz out dx,eax
  4126a2:	out    0x87,eax
  4126a4:	ja     0x4126ca
  4126a6:	jno    0x4126c2
  4126a8:	int3   
  4126a9:	jae    0x4126d3
  4126ab:	div    DWORD PTR [ebp+0x7b]
  4126ae:	and    BYTE PTR [ecx+edx*4-0x45859348],dl
  4126b5:	in     al,dx
  4126b6:	lds    eax,FWORD PTR [eax-0x31409288]
  4126bc:	hlt    
  4126bd:	shr    al,cl
  4126bf:	inc    ebp
  4126c0:	mov    ds:0xb1161936,al
  4126c5:	pop    ebp
  4126c6:	jnp    0x4126d3
  4126c8:	fiadd  DWORD PTR [esi-0x712d4d45]
  4126ce:	xchg   esi,ecx
  4126d0:	sub    DWORD PTR [edx],0xfd84cbcb
  4126d6:	in     al,dx
  4126d7:	arpl   WORD PTR [edx-0x15292e02],sp
  4126dd:	outs   dx,BYTE PTR ds:[esi]
  4126de:	popa   
  4126df:	push   esi
  4126e0:	icebp  
  4126e1:	xchg   BYTE PTR [esp+eax*8],ch
  4126e4:	dec    eax
  4126e5:	dec    esp
  4126e6:	jmp    0x4126c8
  4126e8:	imul   edi,DWORD PTR [edx-0x59],0x467e703a
  4126ef:	xor    eax,0x22406036
  4126f4:	and    al,0x61
  4126f6:	cwde   
  4126f7:	push   esi
  4126f8:	pop    esi
  4126f9:	mov    edi,0xb73bd9c8
  4126fe:	xor    BYTE PTR cs:[ecx+0x3f],ch
  412702:	cs stos DWORD PTR es:[edi],eax
  412704:	push   0x7946aa5e
  412709:	push   esi
  41270a:	fwait
  41270b:	jnp    0x412698
  41270d:	jecxz  0x4126d2
  41270f:	jno    0x4126db
  412711:	push   es
  412712:	loopne 0x4126bf
  412714:	xor    eax,ebx
  412716:	sar    BYTE PTR [ebx-0x41489c94],1
  41271c:	push   ebx
  41271d:	fstp   DWORD PTR [ebx-0x4e]
  412720:	cwde   
  412721:	xchg   esi,eax
  412722:	push   eax
  412723:	les    eax,FWORD PTR [eax+edi*4]
  412726:	adc    dl,BYTE PTR [ecx+0x37]
  412729:	cmp    ebx,ebp
  41272b:	jb     0x412721
  41272d:	cmc    
  41272e:	stos   DWORD PTR es:[edi],eax
  41272f:	pushf  
  412730:	into   
  412731:	inc    ebx
  412732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412733:	retf   
  412734:	stos   BYTE PTR es:[edi],al
  412735:	and    BYTE PTR [ecx+ebp*1+0x6f2b30f3],dh
  41273c:	out    0x5f,eax
  41273e:	xor    esi,esi
  412740:	and    eax,0x248f0ef1
  412745:	pop    ebx
  412746:	or     BYTE PTR [edi-0x252b7fd5],bl
  41274c:	pop    esi
  41274d:	mov    cl,0xb1
  41274f:	out    0xe5,al
  412751:	mov    al,ds:0x2078d4fb
  412756:	dec    edx
  412757:	pusha  
  412758:	gs dec ebx
  41275a:	push   ebp
  41275b:	and    BYTE PTR [esi-0x67],bh
  41275e:	cmp    DWORD PTR [eax],ecx
  412760:	sbb    edi,esp
  412762:	cwde   
  412763:	das    
  412764:	dec    ebp
  412765:	scas   al,BYTE PTR es:[edi]
  412766:	xchg   esp,eax
  412767:	cmp    BYTE PTR [ebx+0x7b],bl
  41276a:	pop    ecx
  41276b:	leave  
  41276c:	loope  0x412788
  41276e:	inc    esp
  41276f:	jp     0x412708
  412771:	jge    0x4127e7
  412773:	dec    ebp
  412774:	sub    eax,DWORD PTR [edi-0x4da9aef7]
  41277a:	data16 sub BYTE PTR [ecx+eax*1+0x2c0f9d41],ch
  412782:	sbb    BYTE PTR [eax],cl
  412784:	repz xchg esp,eax
  412786:	inc    edx
  412787:	sbb    eax,0x22b5c528
  41278c:	mov    WORD PTR [edx+0x52],?
  41278f:	shr    DWORD PTR [edi-0x754f752f],0x81
  412796:	mov    ah,0xb2
  412798:	mov    ah,0xf9
  41279a:	mov    ch,0x2c
  41279c:	retf   
  41279d:	cmp    cl,BYTE PTR [edi*1-0x5c3d6710]
  4127a4:	ins    DWORD PTR es:[edi],dx
  4127a5:	fstp   TBYTE PTR [esi]
  4127a7:	push   edi
  4127a8:	adc    cl,dh
  4127aa:	push   0x9f700b2a
  4127af:	push   ecx
  4127b0:	sar    bh,1
  4127b2:	xchg   ecx,eax
  4127b3:	cmp    edi,edx
  4127b5:	or     DWORD PTR [si],edi
  4127b8:	das    
  4127b9:	and    al,0xe9
  4127bb:	push   eax
  4127bc:	mov    WORD PTR ds:0xa86af399,cs
  4127c2:	cmp    eax,0x22a75d09
  4127c7:	ret    
  4127c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c9:	test   ebx,ecx
  4127cb:	test   esp,0x223b0eee
  4127d1:	in     eax,0xc4
  4127d3:	or     edi,DWORD PTR [edi+0x6b715b6b]
  4127d9:	addr16 add dh,al
  4127dc:	sub    ch,ch
  4127de:	xor    esi,DWORD PTR [esp+edx*8+0x45f27a2c]
  4127e5:	imul   dx,si,0xc417
  4127ea:	jg     0x412806
  4127ec:	out    0x8e,eax
  4127ee:	and    bl,BYTE PTR [edx-0x57021258]
  4127f4:	out    dx,eax
  4127f5:	test   DWORD PTR [ecx+0x3d836849],0xf753d20b
  4127ff:	shl    BYTE PTR ds:0xa1330146,1
  412805:	pop    ebp
  412806:	ret    
  412807:	clc    
  412808:	adc    ecx,DWORD PTR [edi+0x59]
  41280b:	jne    0x4127bf
  41280d:	xchg   esi,eax
  41280e:	push   edx
  41280f:	sub    ah,bh
  412811:	das    
  412812:	xchg   ecx,eax
  412813:	clc    
  412814:	jno    0x412798
  412816:	rcl    DWORD PTR [ecx],0xe4
  412819:	xchg   ecx,eax
  41281a:	shl    DWORD PTR [esi+0x1f],0xce
  41281e:	test   DWORD PTR [ebp-0x1e],0xb6134ad2
  412825:	bound  eax,QWORD PTR [esi+0x46]
  412828:	or     ecx,edi
  41282a:	xlat   BYTE PTR ds:[ebx]
  41282b:	jns    0x41287a
  41282d:	dec    eax
  41282e:	lock sbb edi,edx
  412831:	dec    esi
  412832:	mov    dh,0x3b
  412834:	mov    ecx,0xb96f5dc9
  412839:	jns    0x41284d
  41283b:	mov    ds:0x78d7958e,al
  412840:	mov    bl,0x7a
  412842:	mov    eax,ds:0x6c270b20
  412847:	mov    al,ss:0x2f1d5f19
  41284d:	int    0x6a
  41284f:	cld    
  412850:	std    
  412851:	cmp    eax,0xb4a612d8
  412856:	or     eax,0xec861bb1
  41285b:	cmp    al,0x6a
  41285d:	test   DWORD PTR [edi+0x56],eax
  412860:	adc    al,0x13
  412862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412863:	das    
  412864:	lea    ebx,[ebx-0x4629dd2]
  41286a:	jo     0x412882
  41286c:	dec    eax
  41286d:	sti    
  41286e:	add    DWORD PTR [ecx+0x4f7c0a1e],edx
  412874:	mov    ah,0x8d
  412876:	or     edi,esi
  412878:	test   BYTE PTR [ebp+0x74],al
  41287b:	jge    0x679fbb19
  412881:	mov    ah,0x62
  412883:	and    al,0x6f
  412885:	jmp    0x6d2a:0xae80187
  41288c:	dec    ah
  41288e:	xor    edi,eax
  412890:	adc    eax,0x36ea7f76
  412895:	adc    al,0x61
  412897:	sbb    edx,edx
  412899:	cmc    
  41289a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41289b:	jmp    0xa873dee0
  4128a0:	ret    
  4128a1:	(bad)  
  4128a2:	and    al,0x9c
  4128a4:	mov    ds:0xca65c977,al
  4128a9:	jg     0x41286f
  4128ab:	pusha  
  4128ac:	or     BYTE PTR [edi-0x3c764a7c],dl
  4128b2:	ds inc ebp
  4128b4:	push   cs
  4128b5:	aad    0x6
  4128b7:	ins    BYTE PTR es:[edi],dx
  4128b8:	(bad)  
  4128b9:	rcl    DWORD PTR [ebx+0x74],cl
  4128bc:	inc    esp
  4128bd:	pop    ebp
  4128be:	push   ds
  4128bf:	fwait
  4128c0:	loop   0x412884
  4128c2:	or     eax,0xa921aa5f
  4128c7:	sub    DWORD PTR [esi-0x78],edx
  4128ca:	push   ds
  4128cb:	push   esp
  4128cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128cd:	loop   0x412870
  4128cf:	dec    edi
  4128d0:	pushf  
  4128d1:	stc    
  4128d2:	or     bl,BYTE PTR [esi]
  4128d4:	in     al,0xcc
  4128d6:	ins    DWORD PTR es:[edi],dx
  4128d7:	xor    ch,bh
  4128d9:	or     al,0x8f
  4128db:	pop    es
  4128dc:	jns    0x412905
  4128de:	sbb    ch,ah
  4128e0:	outs   dx,BYTE PTR ds:[esi]
  4128e1:	arpl   WORD PTR [ebx],bp
  4128e3:	xor    esi,0xa9361645
  4128e9:	(bad)  
  4128ea:	xor    DWORD PTR [eax+0x64],ebx
  4128ed:	mov    ebp,esi
  4128ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128f0:	dec    ecx
  4128f1:	xchg   esi,eax
  4128f2:	psubw  mm0,QWORD PTR [ebx-0x3f9bfd23]
  4128f9:	jmp    0x412930
  4128fb:	jno    0x412887
  4128fd:	mov    edi,0x9f0ea78a
  412902:	inc    ebx
  412903:	xchg   BYTE PTR [ecx],al
  412905:	loope  0x41291e
  412907:	xor    DWORD PTR [edx],ecx
  412909:	xchg   esp,eax
  41290a:	cwde   
  41290b:	mov    bl,0xf4
  41290d:	sub    eax,0x10e8b0bf
  412912:	in     al,0xcf
  412914:	ins    DWORD PTR es:[edi],dx
  412915:	push   esp
  412916:	jo     0x412916
  412918:	push   ss
  412919:	sub    ebp,DWORD PTR [edx]
  41291b:	fmul   QWORD PTR [esi+0xae74d2e]
  412921:	dec    edi
  412922:	cdq    
  412923:	loop   0x4128ad
  412925:	pusha  
  412926:	xchg   BYTE PTR [ecx+0x10],ch
  412929:	aad    0x26
  41292b:	push   es
  41292c:	add    edx,DWORD PTR ds:0x906de4a4
  412932:	cs cwde 
  412934:	jmp    0xae0e:0xa1bf5238
  41293b:	cmp    eax,ebp
  41293d:	call   0x10ec:0x11e1bf1
  412944:	clc    
  412945:	lea    ecx,[eax]
  412947:	mov    ds:0x4e3317a6,al
  41294c:	dec    esi
  41294d:	ret    0x1f6a
  412950:	retf   0x744e
  412953:	in     al,0x38
  412955:	ds sbb dl,0x79
  412959:	cdq    
  41295a:	mov    esi,DWORD PTR [edi+0x7fe906e5]
  412960:	retf   0xc6e2
  412963:	xor    ecx,DWORD PTR [edi]
  412965:	sti    
  412966:	iret   
  412967:	retf   0x69c2
  41296a:	jl     0x4129b6
  41296c:	sti    
  41296d:	test   BYTE PTR [ebp+0x64fc4c5b],cl
  412973:	jmp    0x5ccfd326
  412978:	xor    al,bh
  41297a:	stc    
  41297b:	enter  0x3309,0x75
  41297f:	lds    esp,FWORD PTR [edx]
  412981:	add    DWORD PTR [edi-0x5c],ebx
  412984:	scas   al,BYTE PTR es:[edi]
  412985:	adc    BYTE PTR [ebx],cl
  412987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412988:	pop    edx
  412989:	cli    
  41298a:	test   eax,0x9003bcac
  41298f:	adc    BYTE PTR [ebp+0xb0b67e],0x88
  412996:	ins    BYTE PTR es:[edi],dx
  412997:	das    
  412998:	ret    
  412999:	in     al,dx
  41299a:	call   0x62f:0x1e1d51f6
  4129a1:	mov    esi,0xfeb2c570
  4129a6:	fdiv   QWORD PTR [ecx]
  4129a8:	fisttp QWORD PTR [esi+0x2745344a]
  4129ae:	sbb    DWORD PTR [ebp-0x1fe0e430],edx
  4129b4:	xor    cl,BYTE PTR [eax-0x48fe0a32]
  4129ba:	sbb    al,0x7
  4129bc:	lds    esp,FWORD PTR [ecx+0x3bc396c8]
  4129c2:	pop    edx
  4129c3:	(bad)  
  4129c4:	shl    BYTE PTR [ebp-0x1b76e8ee],0x2
  4129cb:	sbb    ah,BYTE PTR [ecx]
  4129cd:	fdivrp st(2),st
  4129cf:	stos   DWORD PTR es:[edi],eax
  4129d0:	cmp    BYTE PTR [edx+0x6c],ch
  4129d3:	iret   
  4129d4:	(bad)  
  4129d5:	jno    0x4129cf
  4129d7:	push   0x977fa90c
  4129dc:	std    
  4129dd:	jmp    0xbd10:0x1d02610
  4129e4:	shl    edx,cl
  4129e6:	cmp    al,0x70
  4129e8:	in     al,dx
  4129e9:	xchg   esi,eax
  4129ea:	enter  0x3007,0xc7
  4129ee:	mov    ch,0x37
  4129f0:	ja     0x412a34
  4129f2:	push   ds
  4129f3:	fild   QWORD PTR [ecx-0x646bf35c]
  4129f9:	sub    ebp,ebp
  4129fb:	js     0x4129aa
  4129fd:	adc    al,0xf2
  4129ff:	xchg   esi,eax
  412a00:	sub    BYTE PTR [ebx+0x155899f0],ah
  412a06:	repz pop edi
  412a08:	loopne 0x41298e
  412a0a:	stos   DWORD PTR es:[edi],eax
  412a0b:	dec    edi
  412a0c:	js     0x4129fb
  412a0e:	and    al,0xba
  412a10:	fcom   DWORD PTR ds:0x315c7c79
  412a16:	dec    ebp
  412a17:	dec    esp
  412a18:	sub    DWORD PTR [ecx+0x55a812b0],edi
  412a1e:	popa   
  412a1f:	scas   eax,DWORD PTR es:[edi]
  412a20:	aas    
  412a21:	push   ebp
  412a22:	int3   
  412a23:	pushf  
  412a24:	push   ds
  412a25:	push   eax
  412a26:	mov    esp,0x2e177a13
  412a2b:	xor    al,0xd8
  412a2d:	shl    BYTE PTR [ebp+0x67],cl
  412a30:	and    cl,BYTE PTR [edx+0xf]
  412a33:	rcl    cl,0x49
  412a36:	mov    ch,BYTE PTR [edi+0x7e]
  412a39:	xchg   BYTE PTR [ecx+0x18a38c60],al
  412a3f:	and    BYTE PTR [esi-0x3287f6dd],bh
  412a45:	loopne 0x4129cd
  412a47:	ins    DWORD PTR es:[edi],dx
  412a48:	retf   
  412a49:	add    ecx,DWORD PTR [esi+0x4b]
  412a4c:	mov    ebx,0xcd78b8e0
  412a51:	int3   
  412a52:	in     eax,dx
  412a53:	les    ebx,FWORD PTR [eax]
  412a55:	mov    ?,WORD PTR [ebp+0x64]
  412a58:	(bad)  
  412a59:	jmp    0xbfab:0xa5bc0541
  412a60:	cmp    DWORD PTR [eax-0xb],esi
  412a63:	and    edi,DWORD PTR [ecx+0x58909522]
  412a69:	push   es
  412a6a:	push   ss
  412a6b:	out    0xa3,al
  412a6d:	loopne 0x412ade
  412a6f:	xchg   edx,eax
  412a70:	mov    al,0xda
  412a72:	out    0x2e,eax
  412a74:	adc    al,0xfa
  412a76:	hlt    
  412a77:	sub    DWORD PTR [edx-0x30],edi
  412a7a:	and    al,dl
  412a7c:	mov    esi,0xb823b1ad
  412a81:	push   0x4e
  412a83:	aad    0x7a
  412a85:	(bad)  
  412a86:	or     al,0x29
  412a88:	ret    0x9771
  412a8b:	add    al,0xb7
  412a8d:	test   DWORD PTR [ecx-0x40],ecx
  412a90:	xlat   BYTE PTR ds:[ebx]
  412a91:	gs (bad) 
  412a93:	cmp    edi,DWORD PTR [ebx+0x79fdf32c]
  412a99:	ins    BYTE PTR es:[edi],dx
  412a9a:	sbb    ah,BYTE PTR [ecx+0x587cb4]
  412aa0:	jo     0x412a83
  412aa2:	xor    al,0x1a
  412aa4:	mov    ch,0x52
  412aa6:	push   edi
  412aa7:	jne    0x412a50
  412aa9:	ret    0xeeaa
  412aac:	(bad)  
  412aad:	sub    al,0x99
  412aaf:	scas   al,BYTE PTR es:[edi]
  412ab0:	dec    ebx
  412ab1:	(bad)  
  412ab2:	popf   
  412ab3:	shl    ch,0xd6
  412ab6:	push   es
  412ab7:	mul    DWORD PTR [edi-0x3c1f740f]
  412abd:	push   cs
  412abe:	shr    edx,0xef
  412ac1:	xor    cl,BYTE PTR [ecx-0x5e62533b]
  412ac7:	adc    ah,0xdc
  412aca:	sahf   
  412acb:	sti    
  412acc:	xor    ch,BYTE PTR [ecx-0x25]
  412acf:	xor    eax,0x3c026c17
  412ad4:	cdq    
  412ad5:	ds int 0xba
  412ad8:	jae    0x412a62
  412ada:	fsub   QWORD PTR [esi+0x704a7f6e]
  412ae0:	shl    ebp,cl
  412ae2:	imul   edi,DWORD PTR [edi],0x7b
  412ae5:	ficom  WORD PTR [edi-0x25]
  412ae8:	sbb    DWORD PTR [ebx],eax
  412aea:	aaa    
  412aeb:	sub    ebp,DWORD PTR [ebp-0x63c8a6c3]
  412af1:	test   BYTE PTR [edx-0x4ae23245],bh
  412af7:	sti    
  412af8:	and    eax,0xb03e4ca1
  412afd:	sub    esp,esp
  412aff:	jmp    0x6ada:0xdba8c096
  412b06:	jp     0x412b2d
  412b08:	jo     0x412ab6
  412b0a:	xchg   edi,eax
  412b0b:	pop    eax
  412b0c:	repnz ins BYTE PTR es:[edi],dx
  412b0e:	mov    ebp,0x3d3164ad
  412b13:	xchg   esi,eax
  412b14:	ds jno 0x412a9c
  412b17:	lock les eax,FWORD PTR [eax+0x1c]
  412b1b:	xchg   edi,eax
  412b1c:	in     al,dx
  412b1d:	addr16 nop
  412b1f:	gs std 
  412b21:	enter  0x3ef0,0xd8
  412b25:	cmp    ecx,edx
  412b27:	scas   al,BYTE PTR es:[edi]
  412b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b29:	inc    ebx
  412b2a:	out    0x7c,al
  412b2c:	push   esp
  412b2d:	not    DWORD PTR [ecx]
  412b2f:	in     eax,0x76
  412b31:	push   es
  412b32:	xchg   edx,eax
  412b33:	sbb    eax,0xcafe5df5
  412b38:	xchg   edx,eax
  412b39:	out    0x73,al
  412b3b:	inc    ebx
  412b3c:	jb     0x412b47
  412b3e:	ins    BYTE PTR es:[edi],dx
  412b3f:	or     BYTE PTR [edx],ch
  412b41:	cmp    bl,BYTE PTR [eax-0x79]
  412b44:	xor    BYTE PTR ds:[edi-0xb6f9396],0xbd
  412b4c:	cwde   
  412b4d:	and    ebx,esp
  412b4f:	(bad)  
  412b50:	sub    eax,0xf44c586d
  412b55:	fnstenv [edx-0x3c]
  412b58:	je     0x412b3d
  412b5a:	push   esp
  412b5b:	xchg   edx,eax
  412b5c:	ss nop
  412b5e:	sub    BYTE PTR [ebp-0x5b8332d4],al
  412b64:	xchg   esp,eax
  412b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b66:	mov    ch,0xce
  412b68:	mov    dh,0x60
  412b6a:	jp     0x412bd8
  412b6c:	xor    eax,0xed67c428
  412b71:	mov    ds:0x8e927263,al
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	retf   
  412b78:	and    dl,BYTE PTR [ecx-0x16736d4d]
  412b7e:	inc    ebx
  412b7f:	xor    eax,0xdd4d1dae
  412b84:	mov    ds:0x205bfe2c,eax
  412b89:	push   ecx
  412b8a:	add    bl,BYTE PTR [ecx]
  412b8c:	and    eax,0x7ad2b486
  412b91:	mov    bh,0x59
  412b93:	or     BYTE PTR [ecx+esi*1-0x67],cl
  412b97:	aas    
  412b98:	aas    
  412b99:	inc    ebx
  412b9a:	cmp    al,0xcc
  412b9c:	pop    eax
  412b9d:	pop    esp
  412b9e:	pop    ecx
  412b9f:	mov    ds:0xd9885f54,al
  412ba4:	jne    0x412b4a
  412ba6:	sbb    edi,DWORD PTR [ecx+edx*8-0x231219a4]
  412bad:	jbe    0x412bae
  412baf:	mov    dl,0xb1
  412bb1:	aad    0xe6
  412bb3:	in     al,0x25
  412bb5:	int3   
  412bb6:	mov    al,0xf9
  412bb8:	push   es
  412bb9:	pop    esi
  412bba:	jle    0x412bf6
  412bbc:	or     DWORD PTR [eax],esp
  412bbe:	mov    fs,WORD PTR [ecx-0x69338935]
  412bc4:	dec    esp
  412bc5:	sar    BYTE PTR [edi+0x43],cl
  412bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc9:	shl    DWORD PTR ds:0xc776a981,1
  412bcf:	shl    DWORD PTR [esi+0x710377fc],1
  412bd5:	retf   0x140f
  412bd8:	jnp    0x412ba3
  412bda:	xchg   edi,eax
  412bdb:	sar    DWORD PTR [edx-0x58],1
  412bde:	jge    0x412bd3
  412be0:	scas   eax,DWORD PTR es:[edi]
  412be1:	shl    BYTE PTR [edx+0x35],cl
  412be4:	cmp    eax,edi
  412be6:	loop   0x412bbe
  412be8:	test   al,0x7a
  412bea:	jmp    0x7000:0xcce9cdc5
  412bf1:	enter  0xa637,0x8d
  412bf5:	adc    bl,BYTE PTR [ebx+0x57]
  412bf8:	call   0x905d:0xc861302a
  412bff:	fmul   DWORD PTR ds:0xd443b0f2
  412c05:	sub    BYTE PTR [ecx-0x5],cl
  412c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c09:	adc    DWORD PTR [ecx-0x7699c9c7],edi
  412c0f:	(bad)  
  412c10:	jl     0x412bd0
  412c12:	lea    edi,[edi-0x19]
  412c15:	xchg   esi,eax
  412c16:	jbe    0x412b9b
  412c18:	xchg   edi,eax
  412c19:	cdq    
  412c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c1b:	out    dx,al
  412c1c:	inc    eax
  412c1d:	xor    dl,bh
  412c1f:	fsubr  DWORD PTR [edx-0x1113a8a6]
  412c25:	idiv   BYTE PTR [ebx]
  412c27:	jmp    0xdab9:0xb70cf96b
  412c2e:	inc    ecx
  412c2f:	cwde   
  412c30:	sahf   
  412c31:	xchg   DWORD PTR [eax+ecx*8-0x7656e06d],ecx
  412c38:	inc    eax
  412c39:	gs icebp 
  412c3b:	ja     0x412bd8
  412c3d:	jg     0x412c93
  412c3f:	cmc    
  412c40:	jge    0x412c39
  412c42:	fs push 0xfffffff4
  412c45:	and    dl,bh
  412c47:	call   0x6907593d
  412c4c:	(bad)  [edi-0x6ff0d05d]
  412c52:	jge    0x412bdd
  412c54:	push   0x41bdabd1
  412c59:	inc    edx
  412c5a:	imul   ebx,ebx,0xe95f74e5
  412c60:	fwait
  412c61:	and    al,0xde
  412c63:	dec    ebx
  412c64:	pop    edi
  412c65:	fsubr  st,st(4)
  412c67:	xor    al,0x8
  412c69:	and    al,0xdc
  412c6b:	out    0xa5,al
  412c6d:	jbe    0x412cdf
  412c6f:	inc    edx
  412c70:	mov    esp,DWORD PTR [ecx]
  412c72:	mov    eax,ebp
  412c74:	sbb    edi,DWORD PTR [edx+0x4e19ebb]
  412c7a:	inc    esi
  412c7b:	and    DWORD PTR [eax-0x5407ae49],edx
  412c81:	sbb    al,0xc
  412c83:	add    ebp,edi
  412c85:	adc    eax,0x88dccdef
  412c8a:	fimul  DWORD PTR [ebx+eiz*2-0x27]
  412c8e:	test   DWORD PTR [edx+ebx*4],esp
  412c91:	in     al,dx
  412c92:	jl     0x412c66
  412c94:	fsub   QWORD PTR [edx+0x30ec47ed]
  412c9a:	ror    BYTE PTR [ebx-0x5574e19f],cl
  412ca0:	inc    edi
  412ca1:	push   es
  412ca2:	mov    al,0xec
  412ca4:	mov    esi,esp
  412ca6:	cmp    DWORD PTR [edx],ebp
  412ca8:	call   DWORD PTR [ebx+ebx*2-0x6a5cfd4]
  412caf:	in     eax,dx
  412cb0:	popa   
  412cb1:	out    0x35,eax
  412cb3:	enter  0x4474,0xcc
  412cb7:	(bad)  
  412cb8:	aaa    
  412cb9:	jmp    0x412ca2
  412cbb:	xlat   BYTE PTR ds:[ebx]
  412cbc:	cmp    BYTE PTR [ecx+esi*2+0x67922ad7],ch
  412cc3:	ds xchg esp,eax
  412cc5:	add    ebp,0x2b0b3c33
  412ccb:	inc    esi
  412ccc:	xchg   edi,eax
  412ccd:	xor    bl,BYTE PTR [edi-0x28f47573]
  412cd3:	xchg   ebx,eax
  412cd4:	iret   
  412cd5:	adc    esi,DWORD PTR gs:[edx]
  412cd8:	mov    ah,0xa0
  412cda:	inc    edi
  412cdb:	nop
  412cdc:	adc    BYTE PTR [edi-0x54d22156],0xa2
  412ce3:	sub    eax,0x7cb8e4e2
  412ce8:	jp     0x412d06
  412cea:	(bad)  
  412ceb:	xchg   esp,eax
  412cec:	sahf   
  412ced:	xchg   ebx,eax
  412cee:	cs scas eax,DWORD PTR es:[edi]
  412cf0:	pop    ebx
  412cf1:	pop    eax
  412cf2:	inc    eax
  412cf3:	test   al,0xb0
  412cf5:	push   ebx
  412cf6:	lea    ebp,ds:0x9d3d1fc5
  412cfc:	or     eax,DWORD PTR [ebx-0x1]
  412cff:	nop
  412d00:	inc    edi
  412d01:	sub    dh,BYTE PTR [esp+ebp*4-0x67]
  412d05:	lods   al,BYTE PTR ds:[esi]
  412d06:	mov    bh,0xf
  412d08:	push   ss
  412d09:	adc    al,0x80
  412d0b:	fild   QWORD PTR [esi-0x1]
  412d0e:	push   ebx
  412d0f:	pop    esi
  412d10:	dec    edx
  412d11:	shr    ch,1
  412d13:	retf   
  412d14:	pushf  
  412d15:	clc    
  412d16:	mov    ebp,0x47167fc8
  412d1b:	hlt    
  412d1c:	lahf   
  412d1d:	xchg   DWORD PTR [ecx+eiz*2],edx
  412d20:	es scas al,BYTE PTR es:[edi]
  412d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d23:	scas   al,BYTE PTR es:[edi]
  412d24:	xor    dl,ch
  412d26:	inc    esi
  412d27:	push   esi
  412d28:	pop    edx
  412d29:	aad    0x77
  412d2b:	loopne 0x412d0e
  412d2d:	cmp    bl,BYTE PTR [esi+eiz*8+0x5e]
  412d31:	test   DWORD PTR [eax-0x5e],ebx
  412d34:	lods   eax,DWORD PTR ds:[esi]
  412d35:	add    al,0xa5
  412d37:	fmul   DWORD PTR [edi]
  412d39:	clc    
  412d3a:	sub    al,0x40
  412d3c:	sub    DWORD PTR [ebp-0x44a3605f],ecx
  412d42:	lock push cs
  412d44:	ret    0xd32d
  412d47:	sub    al,0x63
  412d49:	dec    ebp
  412d4a:	fld    st(7)
  412d4c:	sbb    bh,BYTE PTR [edi+0x74]
  412d4f:	xor    cl,ch
  412d51:	and    esp,ebp
  412d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d54:	dec    ebx
  412d55:	mov    esi,DWORD PTR [edi+0x216db51a]
  412d5b:	inc    esp
  412d5c:	ss xor eax,0x33528571
  412d62:	push   edi
  412d63:	js     0x412d84
  412d65:	pushf  
  412d66:	mov    ch,0xa7
  412d68:	adc    edx,DWORD PTR [ebp+0x6d]
  412d6b:	retf   0xdac0
  412d6e:	hlt    
  412d6f:	sub    ecx,DWORD PTR [ecx]
  412d71:	mov    ecx,DWORD PTR [edx+ecx*8-0x2c935c8e]
  412d78:	(bad)  
  412d79:	mov    eax,0x2ef15223
  412d7e:	xchg   esi,eax
  412d7f:	adc    DWORD PTR ds:0x29f04a1d,esi
  412d85:	lds    ecx,FWORD PTR [edx+0x65]
  412d88:	or     BYTE PTR [ebx+0x4be601e],bh
  412d8e:	push   es
  412d8f:	sub    ebp,esp
  412d91:	fwait
  412d92:	lods   al,BYTE PTR ds:[esi]
  412d93:	repz int 0xef
  412d96:	or     BYTE PTR [ebx-0x43cba900],al
  412d9c:	int3   
  412d9d:	pop    esi
  412d9e:	push   eax
  412d9f:	aad    0x22
  412da1:	dec    edx
  412da2:	adc    DWORD PTR [esi+0xa],edi
  412da5:	and    edx,DWORD PTR [esi+0x188eff0]
  412dab:	adc    esp,DWORD PTR [esi]
  412dad:	iret   
  412dae:	rcr    BYTE PTR [esp+ebx*1],1
  412db1:	imul   esi,ebp,0xfffffffe
  412db4:	sbb    DWORD PTR cs:[ebp+0x522a6263],eax
  412dbb:	jl     0x412e03
  412dbd:	clc    
  412dbe:	les    edi,FWORD PTR [edi-0x44]
  412dc1:	inc    edx
  412dc2:	loopne 0x412d76
  412dc4:	not    DWORD PTR [edi+edx*1]
  412dc7:	pop    esi
  412dc8:	and    DWORD PTR [ebp-0x26],0xab77094b
  412dcf:	add    al,0x60
  412dd1:	add    ah,BYTE PTR [ebx]
  412dd3:	xchg   BYTE PTR [ecx+0x667e17ed],dh
  412dd9:	in     eax,0x7c
  412ddb:	lods   al,BYTE PTR ds:[esi]
  412ddc:	push   ss
  412ddd:	mov    bh,0x82
  412ddf:	and    eax,DWORD PTR [esi]
  412de1:	mov    BYTE PTR [ecx+0x57],dh
  412de4:	inc    ebx
  412de5:	retf   0xb35
  412de8:	push   ds
  412de9:	pushf  
  412dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412deb:	mov    bl,0x8d
  412ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dee:	xor    DWORD PTR [edi+0x3a],eax
  412df1:	jge    0x412dc0
  412df3:	in     eax,0xe1
  412df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df6:	test   eax,0x8a6afba
  412dfb:	xor    edx,DWORD PTR [ecx+0x5d]
  412dfe:	daa    
  412dff:	(bad)  
  412e00:	les    esi,FWORD PTR [eiz*2+0x32eaf7c5]
  412e07:	nop
  412e08:	cwde   
  412e09:	js     0x412d8c
  412e0b:	sti    
  412e0c:	imul   ebx,DWORD PTR [esi],0xb
  412e0f:	push   ebx
  412e10:	xor    al,0x96
  412e12:	push   0x533a7e5f
  412e17:	mov    bl,0x6b
  412e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e1a:	adc    BYTE PTR [esi+0x3e],dh
  412e1d:	xchg   esi,eax
  412e1e:	test   BYTE PTR [edi+0x3df3a5fe],0x55
  412e25:	push   ebp
  412e26:	(bad)  
  412e27:	in     al,0xaf
  412e29:	mov    dh,0xf3
  412e2b:	mov    dl,dl
  412e2d:	xor    DWORD PTR [ebp+ebp*2+0x3c],ecx
  412e31:	cmc    
  412e32:	imul   esi,DWORD PTR [esi+ebp*2],0xaf576361
  412e39:	xchg   edi,eax
  412e3a:	and    al,0x11
  412e3c:	mov    esp,0x47a17c74
  412e41:	test   al,0x9a
  412e43:	mov    ebx,DWORD PTR [ebx]
  412e45:	lahf   
  412e46:	xchg   esp,eax
  412e47:	ins    BYTE PTR es:[edi],dx
  412e48:	cmp    al,0x76
  412e4a:	xchg   ebx,eax
  412e4b:	int3   
  412e4c:	lds    edx,FWORD PTR [edx+ecx*8+0x35]
  412e50:	sbb    BYTE PTR [ebx+0x4291bb7d],dl
  412e56:	ret    
  412e57:	arpl   WORD PTR [eax],dx
  412e59:	hlt    
  412e5a:	ja     0x412e79
  412e5c:	fwait
  412e5d:	daa    
  412e5e:	(bad)  
  412e5f:	pop    esi
  412e60:	push   cs
  412e61:	mov    cl,0x2a
  412e63:	push   esp
  412e64:	in     al,0x69
  412e66:	xor    BYTE PTR [eax+0x2c],bl
  412e69:	mov    ebx,edx
  412e6b:	mov    ah,0xfe
  412e6d:	pop    ebp
  412e6e:	cmp    al,0x5f
  412e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e71:	(bad)  
  412e72:	loop   0x412edf
  412e74:	popf   
  412e75:	fbld   TBYTE PTR [ecx-0x7]
  412e78:	mov    al,ds:0x88926b47
  412e7d:	dec    esi
  412e7e:	pusha  
  412e7f:	pop    ebx
  412e80:	mov    esp,0x71e5dfd8
  412e85:	mov    bh,ch
  412e87:	jg     0x412ec3
  412e89:	(bad)  
  412e8a:	into   
  412e8b:	cmp    ah,bh
  412e8d:	xor    BYTE PTR [esi],ah
  412e8f:	dec    edx
  412e90:	cmp    eax,0x69be1297
  412e95:	sub    DWORD PTR [edx],0x51
  412e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e99:	rcl    BYTE PTR [eax+0x5d90ff6f],1
  412e9f:	jb     0x412e21
  412ea1:	xchg   esi,eax
  412ea2:	mov    esi,0x9ce51eb2
  412ea7:	inc    ecx
  412ea8:	sbb    bh,cl
  412eaa:	stos   BYTE PTR es:[edi],al
  412eab:	cmp    dl,0x6a
  412eae:	adc    cl,bl
  412eb0:	loopne 0x412e75
  412eb2:	mov    ecx,0xa5e75143
  412eb7:	stc    
  412eb8:	sbb    DWORD PTR [esi],ecx
  412eba:	or     al,0x1d
  412ebc:	je     0x412e79
  412ebe:	push   0x6b129cec
  412ec3:	in     eax,0xbb
  412ec5:	inc    edx
  412ec6:	inc    edi
  412ec7:	out    0x2d,al
  412ec9:	in     eax,dx
  412eca:	sbb    esi,DWORD PTR [ebx-0x36]
  412ecd:	cmp    BYTE PTR [eax+ebx*4-0x26],cl
  412ed1:	push   cs
  412ed2:	mov    dh,0xbd
  412ed4:	sti    
  412ed5:	cmp    ecx,DWORD PTR [ecx-0x80]
  412ed8:	pop    ds
  412ed9:	mov    ebp,DWORD PTR [ecx+0x7621e263]
  412edf:	inc    ebx
  412ee0:	mov    WORD PTR [eax],ss
  412ee2:	jbe    0x412e98
  412ee4:	xor    al,0xda
  412ee6:	sbb    al,0x25
  412ee8:	push   eax
  412ee9:	bnd repz jo 0x412eec
  412eed:	xchg   esi,eax
  412eee:	and    al,0xfe
  412ef0:	add    BYTE PTR [ebx],0xff
  412ef3:	mov    edx,0xf72d36ad
  412ef8:	jnp    0x412e7f
  412efa:	cli    
  412efb:	push   ebp
  412efc:	shl    BYTE PTR [ecx],cl
  412efe:	aaa    
  412eff:	xlat   BYTE PTR ds:[ebx]
  412f00:	jge    0x412ed7
  412f02:	sbb    eax,DWORD PTR [edi]
  412f04:	aaa    
  412f05:	adc    al,0xea
  412f07:	sub    esp,DWORD PTR [ebx]
  412f09:	push   ds
  412f0a:	iret   
  412f0b:	bound  esi,QWORD PTR [eax-0x867dcec]
  412f11:	cmp    ebp,DWORD PTR [ebx]
  412f13:	sbb    dh,BYTE PTR [ecx+ecx*1+0x62a44afe]
  412f1a:	sar    DWORD PTR [ebx],cl
  412f1c:	jmp    FWORD PTR [eax]
  412f1e:	int3   
  412f1f:	add    DWORD PTR [esi-0x58],edx
  412f22:	fwait
  412f23:	or     ecx,eax
  412f25:	ins    BYTE PTR es:[edi],dx
  412f26:	imul   edx,DWORD PTR [eax+0x19],0x53d3085
  412f2d:	int3   
  412f2e:	xchg   edx,eax
  412f2f:	jmp    0x85e65280
  412f34:	nop
  412f35:	leave  
  412f36:	jecxz  0x412ed6
  412f38:	fmul   QWORD PTR [ebx-0xa061acd]
  412f3e:	enter  0xfe08,0x36
  412f42:	popf   
  412f43:	(bad)
  412f46:	jns    0x412f69
  412f48:	int    0xd7
  412f4a:	fbld   TBYTE PTR [eax]
  412f4c:	outs   dx,BYTE PTR ds:[esi]
  412f4d:	xor    DWORD PTR [edi-0x3d],edx
  412f50:	sti    
  412f51:	test   eax,0x2659f5e1
  412f56:	bound  eax,QWORD PTR [esi]
  412f58:	(bad)
  412f5c:	repnz (bad) 
  412f5e:	jno    0x412f4d
  412f60:	and    BYTE PTR [edi-0x1d123806],bl
  412f66:	int    0x73
  412f68:	scas   eax,DWORD PTR es:[edi]
  412f69:	xchg   ecx,eax
  412f6a:	xchg   edx,esp
  412f6c:	mov    BYTE PTR [edx+0x32],bh
  412f6f:	shl    BYTE PTR [eax],cl
  412f71:	ret    0x186e
  412f74:	repz adc BYTE PTR [edi],cl
  412f77:	jmp    0xf437:0x11e8312b
  412f7e:	stos   BYTE PTR es:[edi],al
  412f7f:	scas   al,BYTE PTR es:[edi]
  412f80:	xchg   ebx,eax
  412f81:	rol    bh,cl
  412f83:	std    
  412f84:	cwde   
  412f85:	sbb    eax,DWORD PTR [esp+esi*2-0x5b]
  412f89:	imul   ebx,DWORD PTR [ebx],0xffffffe7
  412f8c:	jns    0x413005
  412f8e:	jnp    0x412fe9
  412f90:	aad    0x2
  412f92:	mov    ds:0xaffb6d16,eax
  412f97:	fldcw  WORD PTR [edx]
  412f99:	ror    DWORD PTR [esi],0x7c
  412f9c:	(bad)  
  412f9d:	cli    
  412f9e:	push   es
  412f9f:	mov    WORD PTR [ebx],ss
  412fa1:	aad    0x30
  412fa3:	mov    esp,0xfe3f8d62
  412fa8:	mov    bh,0x1f
  412faa:	repz cld 
  412fac:	add    DWORD PTR [edi],edx
  412fae:	(bad)  
  412fb0:	mov    bl,0x50
  412fb2:	push   eax
  412fb3:	test   eax,0x9b34fcc1
  412fb8:	je     0x412f45
  412fba:	(bad)  
  412fbb:	jg     0x412f48
  412fbd:	enter  0xd09e,0x97
  412fc1:	inc    ecx
  412fc2:	cld    
  412fc3:	shl    ch,0x44
  412fc6:	jb     0x413041
  412fc8:	mov    WORD PTR [esi+0x763f61e2],?
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	mov    ds:0xacd9151c,eax
  412fd4:	imul   ebp,DWORD PTR [ebx+esi*8+0x60],0x41
  412fd9:	jbe    0x412fa2
  412fdb:	outs   dx,BYTE PTR ds:[esi]
  412fdc:	lods   al,BYTE PTR ds:[esi]
  412fdd:	sbb    DWORD PTR [ecx-0x3b],edx
  412fe0:	fprem1 
  412fe2:	ins    DWORD PTR es:[edi],dx
  412fe3:	iret   
  412fe4:	push   es
  412fe5:	push   ebx
  412fe6:	pop    es
  412fe7:	rol    DWORD PTR [esp+eiz*2-0x7c9031ea],0x85
  412fef:	fucomp st(1)
  412ff1:	sbb    DWORD PTR [ecx+0x40623e27],0x44
  412ff8:	jmp    DWORD PTR [edx-0x2c]
  412ffb:	into   
  412ffc:	sub    eax,0x807dd48a
  413001:	push   ebx
  413002:	in     eax,0xdd
  413004:	inc    eax
  413005:	inc    edi
  413006:	jo     0x412f93
  413008:	outs   dx,DWORD PTR ds:[esi]
  413009:	int    0x3c
  41300b:	mov    esp,0xbee2dd81
  413010:	inc    ebp
  413011:	xchg   ecx,eax
  413012:	retf   
  413013:	inc    ebx
  413014:	fs jg  0x412fb7
  413017:	mov    ds:0x6b03fedf,eax
  41301c:	sti    
  41301d:	jae    0x412fa9
  41301f:	jg     0x412fe6
  413021:	sub    edi,ebp
  413023:	push   edx
  413024:	sub    al,0xb1
  413026:	mov    bl,al
  413028:	int3   
  413029:	cmp    dl,BYTE PTR es:[edx-0x67]
  41302d:	xor    BYTE PTR [esi-0x361be1f5],bh
  413033:	dec    esi
  413034:	rcr    BYTE PTR [esp+ecx*2-0x44],1
  413038:	shl    bl,cl
  41303a:	push   esp
  41303b:	and    esi,edx
  41303d:	stos   BYTE PTR es:[edi],al
  41303e:	or     al,0xfc
  413040:	pop    ss
  413041:	cmp    dl,al
  413043:	cwde   
  413044:	call   0xe9fa989f
  413049:	mov    bl,0x50
  41304b:	les    esp,FWORD PTR [eax+esi*4]
  41304e:	xchg   edx,eax
  41304f:	and    eax,0x2b4b01f
  413054:	pop    eax
  413055:	cmp    esp,edi
  413057:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413059:	inc    edi
  41305a:	sub    DWORD PTR ds:0x70b313b5,0x83ccac49
  413064:	les    ebx,FWORD PTR [edx+ebp*2-0x80]
  413068:	jge    0x413021
  41306a:	(bad)  
  41306b:	ds jbe 0x413035
  41306e:	jb     0x413097
  413070:	and    al,0x1a
  413072:	xor    BYTE PTR es:[ebp-0x1b25639a],0xb5
  41307a:	or     eax,0xf2af047a
  41307f:	xor    esp,DWORD PTR [edi*4+0x66010bfe]
  413086:	fwait
  413087:	hlt    
  413088:	adc    eax,0xa614e9d
  41308d:	add    dl,ah
  41308f:	or     edi,ebp
  413091:	into   
  413092:	adc    DWORD PTR [ebx-0x40c649aa],eax
  413098:	push   es
  413099:	or     edx,DWORD PTR [ebx-0x46598a9e]
  41309f:	xor    edi,DWORD PTR [ebx+esi*8+0xce73d17]
  4130a6:	into   
  4130a7:	ret    0x58b6
  4130aa:	leave  
  4130ab:	(bad)  
  4130ac:	scas   al,BYTE PTR es:[edi]
  4130ad:	sbb    ebp,DWORD PTR [edi+0x1e]
  4130b0:	addr16 xor ecx,eax
  4130b3:	bound  edx,QWORD PTR [eax]
  4130b5:	xlat   BYTE PTR ds:[ebx]
  4130b6:	out    dx,al
  4130b7:	pop    es
  4130b8:	jmp    FWORD PTR [edx-0x56]
  4130bb:	mov    bl,0xc8
  4130bd:	mov    BYTE PTR [ebx-0x3bdca5fb],dh
  4130c3:	mov    esp,0x78208841
  4130c8:	pop    ecx
  4130c9:	push   esi
  4130ca:	popa   
  4130cb:	jne    0x413137
  4130cd:	(bad)  [ecx+0xa]
  4130d0:	loopne 0x4130cf
  4130d2:	(bad)  
  4130d3:	fs jnp 0x41308d
  4130d6:	stos   BYTE PTR es:[edi],al
  4130d7:	jp     0x4130b0
  4130d9:	cmp    al,0x96
  4130dc:	mov    ds:0xbd57475d,eax
  4130e1:	or     ah,cl
  4130e3:	add    al,0x86
  4130e5:	adc    DWORD PTR [eax-0x80],ebp
  4130e8:	(bad)  
  4130e9:	and    eax,edx
  4130eb:	jae    0x413103
  4130ed:	xor    bh,BYTE PTR [edx+0x63bb39]
  4130f3:	retf   
  4130f4:	loop   0x41314f
  4130f6:	jne    0x41311b
  4130f8:	test   DWORD PTR [ecx],esp
  4130fa:	dec    esi
  4130fb:	fcomp  QWORD PTR [ebx+0x56be0c76]
  413101:	push   0xc45508c9
  413106:	ins    BYTE PTR es:[edi],dx
  413107:	or     BYTE PTR [edx-0x57],0x37
  41310b:	ror    BYTE PTR [edi+0x25310110],cl
  413111:	out    0xc9,eax
  413113:	dec    eax
  413114:	dec    esp
  413115:	movzx  edx,si
  413118:	rol    al,cl
  41311a:	inc    esi
  41311b:	dec    ecx
  41311c:	jmp    0x41316a
  41311e:	cmp    BYTE PTR ds:0xfaf83a3b,bh
  413124:	jo     0x413193
  413126:	or     DWORD PTR [esi+ecx*4],edx
  413129:	int3   
  41312a:	aam    0xe5
  41312c:	test   eax,0x8c103854
  413131:	ja     0x413132
  413133:	lea    esi,[ecx]
  413135:	inc    eax
  413136:	jnp    0x41318b
  413138:	mov    ecx,0xed34bf82
  41313d:	int3   
  41313e:	jbe    0x4130c6
  413140:	in     al,0x97
  413142:	lea    ecx,[ecx+0x7e36401d]
  413148:	icebp  
  413149:	data16 ins BYTE PTR es:[edi],dx
  41314b:	or     BYTE PTR [ebp+0x2a],dh
  41314e:	aad    0xba
  413150:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413152:	sbb    edi,DWORD PTR [esi]
  413154:	aaa    
  413155:	mov    ch,0xd4
  413157:	add    cl,ch
  413159:	fwait
  41315a:	adc    esp,ebx
  41315c:	sahf   
  41315d:	push   0xef3331d5
  413162:	out    dx,eax
  413163:	cmp    al,0x51
  413165:	(bad)  
  413167:	nop
  413168:	(bad)  
  413169:	and    eax,0x704ef47
  41316e:	mov    ah,0xda
  413170:	frstor [edi]
  413172:	sbb    esi,DWORD PTR [esi+0x12e0c158]
  413178:	enter  0xbcdb,0xd
  41317c:	adc    DWORD PTR [ebx-0x116c589e],0x31
  413183:	std    
  413184:	jmp    0x481466e
  413189:	lods   eax,DWORD PTR ds:[esi]
  41318a:	xchg   esp,eax
  41318b:	mov    bl,0x28
  41318d:	adc    al,0x0
  41318f:	push   edi
  413190:	push   ebx
  413191:	stc    
  413192:	js     0x4131ed
  413194:	sti    
  413195:	inc    eax
  413196:	adc    bh,BYTE PTR [ebp-0x68]
  413199:	or     ecx,DWORD PTR [esi+0x787369e5]
  41319f:	sub    eax,0x114f80d2
  4131a4:	jnp    0x41315c
  4131a6:	lods   al,BYTE PTR ds:[esi]
  4131a7:	cdq    
  4131a8:	nop
  4131a9:	arpl   di,di
  4131ab:	pop    es
  4131ac:	and    eax,0x9d5ab087
  4131b1:	inc    esi
  4131b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131b3:	loopne 0x41314c
  4131b5:	adc    al,0x58
  4131b7:	cld    
  4131b8:	aad    0x2e
  4131ba:	inc    ebp
  4131bb:	js     0x413232
  4131bd:	xor    DWORD PTR ds:0xd846dcc9,esp
  4131c3:	or     al,BYTE PTR [esi+0x1cdbb826]
  4131c9:	hlt    
  4131ca:	in     al,0x8a
  4131cc:	mov    ecx,0xea1afd3f
  4131d1:	lahf   
  4131d2:	push   esp
  4131d3:	sub    ebx,esp
  4131d5:	pop    ss
  4131d6:	cmp    ebp,DWORD PTR [ecx+eax*8]
  4131d9:	arpl   WORD PTR [edi-0x11],ax
  4131dc:	ret    
  4131dd:	(bad)  
  4131df:	or     BYTE PTR [esi+0x5d],bh
  4131e2:	retf   
  4131e3:	xor    bh,ah
  4131e5:	lods   al,BYTE PTR ds:[esi]
  4131e6:	out    0x3d,eax
  4131e8:	mov    edi,0xcf2bc167
  4131ed:	lea    ebx,[ebx-0x74]
  4131f0:	(bad)
  4131f3:	or     dl,dl
  4131f5:	mov    edi,0xa1e2e67d
  4131fa:	xchg   esp,eax
  4131fb:	mov    ah,BYTE PTR [esi-0x7c6e94b2]
  413201:	or     al,0x63
  413203:	popf   
  413204:	jne    0x413253
  413206:	in     eax,dx
  413207:	mov    al,0x84
  413209:	(bad)
  41320c:	sar    DWORD PTR [ebx+eiz*2-0x3204eec8],0x9c
  413214:	(bad)  
  413215:	retf   
  413216:	inc    eax
  413217:	push   ebx
  413218:	add    eax,0x73298cc0
  41321d:	daa    
  41321e:	ins    BYTE PTR es:[edi],dx
  41321f:	adc    edi,ebx
  413221:	lds    edx,FWORD PTR [ebx]
  413223:	pop    eax
  413224:	dec    esp
  413225:	push   edx
  413226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413227:	js     0x41326c
  413229:	fisubr WORD PTR [ebx+ebx*8]
  41322c:	test   al,0xa8
  41322e:	(bad)  
  41322f:	sub    al,0x9f
  413231:	fcmovnb st,st(3)
  413233:	xor    ebx,edi
  413235:	out    0x65,eax
  413237:	cs mov ecx,0x82e22c19
  41323d:	loop   0x413291
  41323f:	mov    ebp,0xc0a0f7cc
  413244:	pop    esi
  413245:	daa    
  413246:	push   esp
  413247:	inc    esi
  413248:	stc    
  413249:	loope  0x413203
  41324b:	and    al,0xff
  41324d:	imul   ebx,DWORD PTR [esi+eax*1],0x20d7da4b
  413254:	sbb    BYTE PTR [ebp-0x28],al
  413257:	ja     0x4131fe
  413259:	pushf  
  41325a:	neg    BYTE PTR [eax-0x36]
  41325d:	jge    0x4132d8
  41325f:	xchg   edx,eax
  413260:	jge    0x413297
  413262:	js     0x413290
  413264:	xchg   cl,ch
  413266:	mov    cl,0x2f
  413268:	push   0xffffffc0
  41326a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41326b:	aam    0x4a
  41326d:	dec    edx
  41326e:	mov    al,ds:0x80c4c4a4
  413273:	push   ss
  413274:	mov    edi,DWORD PTR [ebx]
  413276:	ss test al,0xf7
  413279:	inc    edi
  41327a:	and    DWORD PTR [eax-0x5b],ecx
  41327d:	cmp    al,0xb0
  41327f:	jmp    0x907c:0xd3e8b8a9
  413286:	mov    cl,0x3a
  413288:	outs   dx,BYTE PTR ds:[esi]
  413289:	and    BYTE PTR [ebx+0x6d4b8b48],al
  41328f:	(bad)  
  413290:	es aas 
  413292:	mov    esp,0x36afe261
  413297:	retf   0x2eac
  41329a:	inc    eax
  41329b:	or     eax,0x20361713
  4132a0:	push   0xbdb76cc1
  4132a5:	mov    ds:0x28f02604,al
  4132aa:	cmp    eax,0xe80a1099
  4132af:	pop    eax
  4132b0:	imul   ebx,DWORD PTR [ebp+0x7f],0xffffff87
  4132b4:	je     0x413296
  4132b6:	std    
  4132b7:	and    DWORD PTR ds:[ecx-0x7a],0xffffffec
  4132bc:	cmp    bh,cl
  4132be:	xchg   BYTE PTR [ebx-0x18],ah
  4132c1:	test   al,0xf5
  4132c3:	(bad)  
  4132c4:	leave  
  4132c5:	and    DWORD PTR [ecx+ebx*1],edi
  4132c8:	push   edx
  4132c9:	fisub  WORD PTR [edx-0x2e7bf3e1]
  4132cf:	js     0x4132e1
  4132d1:	mov    eax,ds:0x74f052d0
  4132d6:	sub    DWORD PTR [ecx],ebp
  4132d8:	ficom  DWORD PTR [eax+0x28]
  4132db:	adc    esp,ecx
  4132dd:	test   BYTE PTR [edi],bh
  4132df:	jbe    0x413266
  4132e1:	mov    al,0x26
  4132e3:	cmp    al,0x80
  4132e5:	aas    
  4132e6:	push   ecx
  4132e7:	sbb    al,0xdb
  4132e9:	and    eax,0x8913ea47
  4132ee:	dec    ebx
  4132ef:	inc    ebx
  4132f0:	dec    ebp
  4132f1:	adc    eax,0xbe5bde87
  4132f6:	adc    DWORD PTR [ebp+0x4ef509d],ebx
  4132fc:	jg     0x413320
  4132fe:	inc    eax
  4132ff:	push   ebx
  413300:	fsubrp st(2),st
  413302:	dec    esi
  413303:	xchg   edx,eax
  413304:	in     eax,dx
  413305:	push   edx
  413306:	loopne 0x41331c
  413308:	mov    ss,esp
  41330a:	out    dx,eax
  41330b:	mov    al,0xc8
  41330d:	icebp  
  41330e:	sti    
  41330f:	retf   0xeb9b
  413312:	inc    eax
  413313:	and    cl,BYTE PTR [edx]
  413315:	or     BYTE PTR [edx],cl
  413317:	mov    eax,ds:0xf7c29d8a
  41331c:	test   DWORD PTR [ebx],ebp
  41331e:	(bad)  
  413320:	mov    dh,BYTE PTR [ecx-0x6]
  413323:	fs adc eax,0x75455cc1
  413329:	into   
  41332a:	mov    ecx,0xd000e452
  41332f:	jp     0x413351
  413331:	cmp    ah,dh
  413333:	lock mov ecx,0x5414b4df
  413339:	imul   esi,DWORD PTR [esi],0x13ced840
  41333f:	test   eax,0x18a0474b
  413344:	cwde   
  413345:	sbb    al,ch
  413347:	sbb    BYTE PTR [eax+ebx*1-0x71],dl
  41334b:	cli    
  41334c:	sub    al,0x3e
  41334e:	pop    eax
  41334f:	sub    al,0x9c
  413351:	and    edx,DWORD PTR [esi-0xc]
  413354:	push   ebp
  413355:	adc    ebp,DWORD PTR [edx-0x6a]
  413358:	arpl   WORD PTR [edi-0x14],di
  41335b:	(bad)  
  41335c:	mov    ah,0x83
  41335e:	mov    al,0x6d
  413360:	and    eax,esp
  413362:	sbb    al,0x9c
  413364:	pop    ebp
  413365:	stos   DWORD PTR es:[edi],eax
  413366:	loopne 0x41333a
  413368:	inc    eax
  413369:	cmp    ebx,DWORD PTR [edx-0x523e57a6]
  41336f:	push   ds
  413370:	stc    
  413371:	mov    edx,0xe7cae50a
  413376:	mov    al,0x9b
  413378:	sub    bh,BYTE PTR [ebx+0x48]
  41337b:	mov    edx,DWORD PTR [eax+0x12d47ae9]
  413381:	rcl    BYTE PTR [ebx-0x24c2f055],cl
  413387:	ficom  DWORD PTR [esi+0x4700016a]
  41338d:	out    0xd2,al
  41338f:	push   eax
  413390:	adc    ebp,ecx
  413392:	loopne 0x41336d
  413394:	fs push esi
  413396:	cmp    DWORD PTR [edx+ebp*1+0xf],esp
  41339a:	mov    ds:0xfda554c8,eax
  41339f:	fcom   DWORD PTR cs:[ebx+0x1f1b0511]
  4133a6:	dec    edi
  4133a7:	sbb    eax,0xb341e6a3
  4133ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ad:	aam    0x29
  4133af:	sub    eax,0x1714192a
  4133b4:	lock loop 0x413420
  4133b7:	and    DWORD PTR ds:0x62b4176f,eax
  4133bd:	sbb    al,0xc
  4133bf:	push   ebx
  4133c0:	mov    eax,0xb950532f
  4133c5:	frstor [eax]
  4133c7:	lods   al,BYTE PTR ds:[esi]
  4133c8:	cmp    eax,ecx
  4133ca:	pushf  
  4133cb:	jl     0x413374
  4133cd:	mov    eax,ds:0x7aae16ca
  4133d2:	retf   0xb039
  4133d5:	leave  
  4133d6:	mov    dl,0x8d
  4133d8:	xchg   edi,eax
  4133d9:	sub    ch,BYTE PTR [edx+0x67]
  4133dc:	push   ebp
  4133dd:	test   DWORD PTR [esi+0x41],edx
  4133e0:	mov    ds:0x7347ef2f,eax
  4133e5:	scas   al,BYTE PTR es:[edi]
  4133e6:	sub    BYTE PTR [edx+0x3741f7e],dl
  4133ec:	out    dx,eax
  4133ed:	sub    al,0x1a
  4133ef:	add    ebx,DWORD PTR [ecx+0x60189d41]
  4133f5:	mov    eax,DWORD PTR [ecx+0x13]
  4133f8:	xor    DWORD PTR [eax],ebp
  4133fa:	xor    DWORD PTR [ebx],esp
  4133fc:	jg     0x4133ba
  4133fe:	add    DWORD PTR [esi],0x3c369def
  413404:	pop    ebx
  413405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413406:	or     ebx,DWORD PTR [ecx+ebx*8-0x1696da0a]
  41340d:	lea    eax,[edx+edi*4+0x5f]
  413411:	stos   DWORD PTR es:[edi],eax
  413412:	test   BYTE PTR [edx],cl
  413414:	or     al,0xd1
  413416:	mov    ebp,0xf443b44
  41341b:	lds    eax,FWORD PTR [eax+0x15]
  41341e:	or     eax,0xb13b4e2d
  413423:	cs inc ebx
  413425:	xlat   BYTE PTR ds:[ebx]
  413426:	or     BYTE PTR [edx-0x37a396ee],ah
  41342c:	test   eax,0x4d4834ab
  413431:	out    0x8d,al
  413433:	inc    ebp
  413434:	pusha  
  413435:	pop    esp
  413436:	jg     0x41348d
  413438:	push   ebp
  413439:	push   0xb
  41343b:	sub    BYTE PTR [esi-0x43f30804],ah
  413441:	js     0x413460
  413443:	push   ebx
  413444:	in     al,0xc3
  413446:	mov    ds:0x981ccae7,eax
  41344b:	adc    BYTE PTR [edx+0x63],ah
  41344e:	sahf   
  41344f:	retf   0xcf72
  413452:	mov    edi,es
  413454:	scas   eax,DWORD PTR es:[edi]
  413455:	scas   al,BYTE PTR es:[edi]
  413456:	les    ecx,FWORD PTR [edi+0x22]
  413459:	fild   QWORD PTR [edx]
  41345b:	nop
  41345c:	or     eax,0x57f5f136
  413461:	pop    esp
  413462:	push   edi
  413463:	out    dx,al
  413464:	dec    edx
  413465:	xchg   ebx,ebp
  413467:	adc    BYTE PTR [esi+0x3329249f],bh
  41346d:	(bad)  
  41346e:	mov    eax,ds:0xf936f897
  413473:	xchg   BYTE PTR [bp+si-0x53cb],ah
  413478:	out    dx,al
  413479:	inc    ebx
  41347a:	in     al,0x92
  41347c:	ins    DWORD PTR es:[edi],dx
  41347d:	xor    eax,esi
  41347f:	adc    dh,BYTE PTR [ebx]
  413481:	addr16 push ebp
  413483:	call   0x42202b03
  413488:	pop    eax
  413489:	cmp    BYTE PTR [ebx-0x68c90980],al
  41348f:	sub    al,0xc8
  413491:	sub    eax,0x5ca4121e
  413496:	inc    edx
  413497:	out    dx,eax
  413498:	(bad)  
  413499:	push   es
  41349a:	out    dx,al
  41349b:	sbb    cl,BYTE PTR [eax]
  41349d:	cwde   
  41349e:	push   es
  41349f:	sub    al,0x45
  4134a1:	push   ecx
  4134a2:	pop    esi
  4134a4:	leave  
  4134a5:	cmp    bl,BYTE PTR [edi-0x49e4c4d9]
  4134ab:	and    DWORD PTR [edi+0x2a],ebx
  4134ae:	sahf   
  4134af:	adc    ebp,DWORD PTR [ebp+eax*1-0x1263bcae]
  4134b6:	xchg   ecx,eax
  4134b7:	pop    ds
  4134b8:	pop    ebp
  4134b9:	mov    al,BYTE PTR [ebx-0x725accce]
  4134bf:	or     al,0xee
  4134c1:	or     DWORD PTR [eax+0x78c4e352],edx
  4134c7:	pop    esi
  4134c8:	inc    edx
  4134c9:	(bad)
  4134cc:	hlt    
  4134cd:	loopne 0x413546
  4134cf:	shl    BYTE PTR [ecx+0x6c4a5f2e],0xef
  4134d6:	out    dx,al
  4134d7:	mov    esi,0x1c3b238e
  4134dc:	fwait
  4134dd:	repnz mov ebx,0xcc9fc57d
  4134e3:	lods   eax,DWORD PTR ds:[esi]
  4134e4:	ror    dl,0x34
  4134e7:	mov    bh,0xf3
  4134e9:	push   eax
  4134ea:	es aam 0xf5
  4134ed:	mov    ecx,0x62882433
  4134f2:	std    
  4134f3:	pop    ecx
  4134f4:	adc    DWORD PTR [ebp+0x20],ebx
  4134f7:	xor    esp,esi
  4134f9:	scas   eax,DWORD PTR es:[edi]
  4134fa:	das    
  4134fb:	dec    esp
  4134fc:	test   esp,esi
  4134fe:	mov    WORD PTR [esi-0x6c217647],ds
  413504:	or     al,0xbf
  413506:	mov    ebx,0xadf6fe33
  41350b:	ret    
  41350c:	jb     0x4134b9
  41350e:	jbe    0x41352f
  413510:	inc    ecx
  413511:	lods   al,BYTE PTR ds:[esi]
  413512:	scas   eax,DWORD PTR es:[edi]
  413513:	fcom   DWORD PTR [eax*4+0xdb7718c]
  41351a:	push   ebp
  41351b:	push   esi
  41351c:	add    eax,0xff1a0058
  413521:	cs out 0x84,al
  413524:	(bad)  
  413526:	xchg   esi,esp
  413528:	clc    
  413529:	fild   WORD PTR [esi+eiz*8]
  41352c:	ja     0x413569
  41352e:	push   ebp
  41352f:	inc    esp
  413530:	mov    esp,0x814a36ea
  413535:	ficom  DWORD PTR [ecx]
  413537:	inc    edi
  413538:	fwait
  413539:	xor    cl,0x3d
  41353c:	mov    eax,0xb18952e0
  413541:	or     DWORD PTR [esi],ebp
  413543:	rol    ch,0x25
  413546:	(bad)  [eax]
  413548:	(bad)  
  413549:	hlt    
  41354a:	ror    DWORD PTR [edx],0x35
  41354d:	addr16 popf 
  41354f:	aas    
  413550:	mov    WORD PTR [ebx],cs
  413552:	jnp    0x413546
  413554:	jecxz  0x413554
  413556:	xor    eax,0xe4ec5577
  41355b:	retf   
  41355c:	aam    0xf7
  41355e:	mov    edx,0x189cc0d7
  413563:	loop   0x4134f6
  413565:	or     eax,DWORD PTR [eax-0x34]
  413568:	pop    edx
  413569:	fnclex 
  41356b:	mov    WORD PTR [esp+ebx*8+0x5d],ds
  41356f:	test   ah,cl
  413571:	mov    BYTE PTR [ebp+0x885a667],dl
  413577:	(bad)  
  413578:	sub    esi,DWORD PTR [edx-0x1aca4ab8]
  41357e:	xchg   edi,eax
  41357f:	mov    edx,0x8f726c29
  413584:	mov    ebp,0x9f0de37a
  413589:	fld    TBYTE PTR [eax+eax*4+0x4f]
  41358d:	jmp    DWORD PTR [esi]
  41358f:	jae    0x413555
  413591:	xchg   BYTE PTR [ecx+0x5fd82079],cl
  413597:	cs retf 
  413599:	mov    dh,0xb3
  41359b:	adc    cl,BYTE PTR cs:[ecx-0x46120663]
  4135a2:	add    edi,DWORD PTR [eax]
  4135a4:	clc    
  4135a5:	sub    DWORD PTR [ecx],ebp
  4135a7:	int3   
  4135a8:	lods   al,BYTE PTR ds:[esi]
  4135a9:	sub    al,0xa9
  4135ab:	pop    ecx
  4135ac:	(bad)  
  4135ad:	shl    BYTE PTR [ecx+0x9],0x17
  4135b1:	or     esi,DWORD PTR [eax-0x23260c8f]
  4135b7:	leave  
  4135b8:	arpl   WORD PTR [esi-0x68],di
  4135bb:	cmp    DWORD PTR [edi+0x1d],esi
  4135be:	inc    ebx
  4135bf:	push   edx
  4135c0:	mov    ds:0x2d670e18,eax
  4135c5:	dec    edx
  4135c6:	jmp    0x4135d2
  4135c8:	sbb    DWORD PTR [edi+edx*4],edx
  4135cb:	pop    ss
  4135cc:	hlt    
  4135cd:	ins    DWORD PTR es:[edi],dx
  4135ce:	cmp    DWORD PTR [eax-0x42ffec75],ecx
  4135d4:	lahf   
  4135d5:	ror    BYTE PTR [ebx+0x32a84db3],cl
  4135db:	xor    dl,BYTE PTR [ebp+0x54d8c59e]
  4135e1:	xor    eax,DWORD PTR [esp+eiz*8]
  4135e4:	mov    esp,0xbc3cc00b
  4135e9:	aad    0x60
  4135eb:	jecxz  0x413633
  4135ed:	jle    0x413657
  4135ef:	cmp    al,0x4d
  4135f1:	adc    bh,BYTE PTR [edx+0x72ad884d]
  4135f7:	cdq    
  4135f8:	xchg   ebp,eax
  4135f9:	sub    eax,0x234c5e2e
  4135fe:	jne    0x413631
  413600:	fldcw  WORD PTR [ebp-0x570429c4]
  413606:	mov    BYTE PTR [ecx],bh
  413608:	scas   al,BYTE PTR es:[edi]
  413609:	int    0x36
  41360b:	mov    esi,0xea243e94
  413610:	call   0x6b34788b
  413615:	sub    al,0xa1
  413617:	xchg   edi,eax
  413618:	jle    0x413680
  41361a:	out    dx,al
  41361b:	mov    ebp,0x505bf81b
  413620:	jae    0x413696
  413622:	add    ah,BYTE PTR [edi+ebx*2]
  413625:	sti    
  413626:	add    al,0xb9
  413628:	mov    fs,WORD PTR [edi+0x68ffc425]
  41362e:	xchg   esp,eax
  41362f:	aad    0x85
  413631:	arpl   WORD PTR [esi-0x35425a2d],di
  413637:	fcom   DWORD PTR [eax]
  413639:	fwait
  41363a:	iret   
  41363b:	sbb    esp,DWORD PTR [ebx-0x25]
  41363e:	xchg   esp,eax
  41363f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413640:	mov    ebx,DWORD PTR [ebx-0x4b]
  413643:	mov    ecx,0x29e535a5
  413648:	mov    ebp,0x9b160f2c
  41364d:	jbe    0x4135fa
  41364f:	and    BYTE PTR [ebp-0x5afc0f4],al
  413655:	and    ch,bl
  413657:	sub    ecx,DWORD PTR [eax+0x5b2fc38f]
  41365d:	push   0x72
  41365f:	and    BYTE PTR [ebp+ecx*4-0x56],dh
  413663:	loop   0x413610
  413665:	addr16 cdq 
  413667:	xlat   BYTE PTR ds:[ebx]
  413668:	inc    ebx
  413669:	xchg   edi,eax
  41366a:	out    0x60,al
  41366c:	sti    
  41366d:	ret    
  41366e:	inc    ebp
  41366f:	sbb    al,0xb3
  413671:	push   0x3b163a5e
  413676:	rcl    BYTE PTR [eax],0xc
  413679:	mov    esi,0xe3103ffd
  41367e:	fsubr  DWORD PTR [edx]
  413680:	cmp    esp,DWORD PTR [esi-0x54a66e0e]
  413686:	ret    0x3745
  413689:	push   ebx
  41368a:	scas   eax,DWORD PTR es:[edi]
  41368b:	(bad)  
  41368c:	mov    WORD PTR [esi+0x7f6f9059],?
  413692:	xor    ch,BYTE PTR [ebp-0x67]
  413695:	lds    ebp,FWORD PTR [eax-0x43]
  413698:	xchg   ebp,eax
  413699:	push   ebx
  41369a:	(bad)  
  41369b:	mov    eax,ds:0x1d79d888
  4136a0:	push   ecx
  4136a1:	repz loopne 0x41366b
  4136a4:	or     esi,DWORD PTR [eax-0x4c2782d6]
  4136aa:	call   0x676a:0x35a19222
  4136b1:	and    al,0x80
  4136b3:	pop    eax
  4136b4:	out    0x29,eax
  4136b6:	cli    
  4136b7:	shl    BYTE PTR [ebp+0x745c548f],0xf5
  4136be:	xchg   edi,eax
  4136bf:	out    dx,al
  4136c0:	loope  0x4136e0
  4136c2:	idiv   BYTE PTR [ebx]
  4136c4:	rcl    bl,0xe
  4136c7:	xor    bh,BYTE PTR [edi]
  4136c9:	mov    bl,0xfb
  4136cb:	call   0xf19a:0xf3b2010c
  4136d2:	mov    ah,0x32
  4136d4:	cmp    DWORD PTR ds:0x79b79b4e,0x4788d248
  4136de:	mov    ebx,0x7ebef9b
  4136e3:	das    
  4136e4:	repz aad 0xa9
  4136e7:	and    al,0xfa
  4136e9:	pop    ebp
  4136ea:	mov    WORD PTR [ebx+0x73f5b095],ds
  4136f0:	jmp    0x9825:0xe43274ee
  4136f7:	push   esi
  4136f8:	mov    ?,WORD PTR [eax+0x4a]
  4136fb:	dec    edi
  4136fc:	pop    eax
  4136fd:	sbb    dh,al
  4136ff:	ror    ebp,1
  413701:	fnsave [eax-0x29a17ca0]
  413707:	test   dl,bh
  413709:	scas   al,BYTE PTR es:[edi]
  41370a:	or     al,0xc9
  41370c:	popa   
  41370d:	xchg   BYTE PTR [eax+0x52],ch
  413710:	mov    bl,0xdf
  413712:	loope  0x413733
  413714:	cs pop edx
  413716:	(bad)  
  413717:	in     al,dx
  413718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413719:	sub    al,0xb9
  41371b:	dec    DWORD PTR [edi+0x38580250]
  413721:	lods   al,BYTE PTR ds:[esi]
  413722:	adc    al,0xb1
  413724:	repz cli 
  413726:	in     al,0x4f
  413728:	xlat   BYTE PTR ds:[ebx]
  413729:	addr16 lock in eax,0x57
  41372d:	fisub  WORD PTR [edx-0x36]
  413730:	push   edx
  413731:	rol    DWORD PTR [esi-0x4d51feef],1
  413737:	cdq    
  413738:	mov    esp,0x95bd7b8e
  41373d:	nop
  41373e:	popf   
  41373f:	xor    eax,0x36dfefc0
  413744:	jne    0x4136f8
  413746:	fimul  WORD PTR [edi+ecx*4+0x4ba3397d]
  41374d:	sub    al,0xf5
  41374f:	mov    dh,bh
  413751:	pusha  
  413752:	adc    esp,ecx
  413754:	xor    eax,0xb3b153e
  413759:	aaa    
  41375a:	mov    eax,0x479f1628
  41375f:	sbb    eax,0x366a8ffd
  413764:	scas   eax,DWORD PTR es:[edi]
  413765:	loope  0x41373c
  413767:	out    0xbf,eax
  413769:	sub    al,0xa8
  41376b:	js     0x413702
  41376d:	sub    dh,ch
  41376f:	xchg   esp,eax
  413770:	adc    edx,DWORD PTR [ecx-0x5c]
  413773:	mov    eax,0xe8c5c864
  413778:	pop    ds
  413779:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41377a:	and    ebp,DWORD PTR [esi]
  41377c:	test   DWORD PTR [edx+0xf],0xbd5b89c2
  413783:	add    al,0x79
  413785:	pop    ds
  413786:	dec    eax
  413787:	adc    BYTE PTR [esi+eiz*2],al
  41378a:	fisttp QWORD PTR [esp+edx*4-0xb0c95be]
  413791:	(bad)  
  413792:	push   es
  413793:	xor    DWORD PTR [ebx],ecx
  413795:	std    
  413796:	pop    edx
  413797:	js     0x41379e
  413799:	sar    ebp,1
  41379b:	cwde   
  41379c:	mov    al,0x3
  41379e:	mov    ds:0xd799c7d3,eax
  4137a3:	xor    bl,BYTE PTR ds:0xe85c436c
  4137a9:	(bad)  
  4137aa:	fst    st(5)
  4137ac:	es mov ecx,0xb52b80a5
  4137b2:	fstp   QWORD PTR [ebp+0x40]
  4137b5:	xor    ah,BYTE PTR [ebp-0x3728caff]
  4137bb:	add    edi,DWORD PTR [ecx]
  4137bd:	mov    eax,ds:0x5992c280
  4137c2:	jb     0x413747
  4137c4:	test   al,0xfa
  4137c6:	imul   edx,DWORD PTR [esi+0x53158a80],0x4c
  4137cd:	mov    cl,0x9b
  4137cf:	push   cs
  4137d0:	xchg   ecx,eax
  4137d1:	sub    BYTE PTR [eax-0x2b],cl
  4137d4:	addr16 test eax,0xd8af0a8a
  4137da:	jecxz  0x413834
  4137dc:	sbb    ch,ah
  4137de:	imul   edi,DWORD PTR fs:[ebx+ecx*2],0x41
  4137e3:	sub    al,0x77
  4137e5:	stos   DWORD PTR es:[edi],eax
  4137e6:	sbb    ah,ah
  4137e8:	cmp    al,0x9e
  4137ea:	xor    esi,DWORD PTR [ebx+0x3c]
  4137ed:	mov    bl,0x47
  4137ef:	lods   al,BYTE PTR ss:[esi]
  4137f1:	add    edi,DWORD PTR [edx-0xfff1239]
  4137f7:	jle    0x4137e3
  4137f9:	dec    edi
  4137fa:	das    
  4137fb:	shl    DWORD PTR [eax],cl
  4137fd:	mov    dl,0xfc
  4137ff:	xchg   ecx,eax
  413800:	sub    esp,esp
  413802:	stc    
  413803:	xchg   bh,bh
  413805:	lods   al,BYTE PTR ds:[esi]
  413806:	sub    BYTE PTR [edi+0x7c],0xdd
  41380a:	cs dec edi
  41380c:	dec    ecx
  41380d:	and    ecx,DWORD PTR [edx+esi*8]
  413810:	sar    DWORD PTR [edi],1
  413812:	add    esp,DWORD PTR [ebx]
  413814:	or     esp,DWORD PTR [eax+0x1ebc383a]
  41381a:	stos   BYTE PTR es:[edi],al
  41381b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41381c:	lds    esi,FWORD PTR [esi+0x6d344da8]
  413822:	daa    
  413823:	push   cs
  413824:	and    ecx,ebx
  413826:	jecxz  0x413841
  413828:	popa   
  413829:	call   0x74221a5a
  41382e:	xchg   edx,eax
  41382f:	fisub  WORD PTR [eax+0x55ba3d2c]
  413835:	dec    eax
  413836:	scas   eax,DWORD PTR es:[edi]
  413837:	and    eax,0xe082e219
  41383c:	and    DWORD PTR cs:[edx+0x1e83e194],edx
  413843:	mov    esp,0x391f10a8
  413848:	imul   ebx,DWORD PTR [ebx-0x39ba28a],0xffffff8a
  41384f:	loopne 0x413802
  413851:	retf   0xd6df
  413854:	shl    DWORD PTR [esi+0x5c],0x93
  413858:	outs   dx,DWORD PTR ds:[esi]
  413859:	mov    ds:0xf39748c9,eax
  41385e:	mov    cl,0xc8
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	cmp    bl,0xee
  413864:	arpl   bx,cx
  413866:	loop   0x41382b
  413868:	sub    al,0xea
  41386a:	xchg   ebp,eax
  41386b:	mov    ebp,0xeedca5b7
  413870:	dec    esi
  413871:	enter  0xdf36,0xbf
  413875:	and    ebx,DWORD PTR [edx]
  413877:	shr    DWORD PTR [eax-0x2e],cl
  41387a:	rcr    BYTE PTR [edi-0x7a63f17d],cl
  413880:	test   BYTE PTR ds:0xa821b575,bl
  413886:	mov    dl,0x4c
  413888:	cmp    al,0x5e
  41388a:	jne    0x413838
  41388c:	nop
  41388d:	sar    dl,1
  41388f:	dec    esi
  413890:	xor    eax,eax
  413892:	cwde   
  413893:	mov    ebx,db6
  413896:	icebp  
  413897:	lahf   
  413898:	shl    dh,0x1e
  41389b:	mov    edx,0x9787a4bd
  4138a0:	sbb    al,bh
  4138a2:	dec    esi
  4138a3:	es add eax,0xb6c61a20
  4138a9:	dec    eax
  4138aa:	popa   
  4138ab:	cmp    eax,0xa1935aba
  4138b0:	push   ebx
  4138b1:	push   ebx
  4138b2:	adc    eax,0x4f6c88a0
  4138b7:	cmc    
  4138b8:	je     0x4138f9
  4138ba:	(bad)  
  4138bb:	aaa    
  4138bc:	mov    al,0xd2
  4138be:	and    BYTE PTR [ebp-0x45a95cdc],0xa9
  4138c5:	cli    
  4138c6:	jl     0x4138fd
  4138c8:	sti    
  4138c9:	jecxz  0x413898
  4138cb:	repnz (bad) 
  4138cd:	xchg   edi,eax
  4138ce:	adc    edx,0xa5b3eebd
  4138d4:	ret    0x70a7
  4138d7:	pusha  
  4138d8:	inc    ebx
  4138d9:	imul   eax,edi,0x69ad8758
  4138df:	test   DWORD PTR ds:0xd8332b3b,0xb01c2581
  4138e9:	inc    edx
  4138ea:	add    BYTE PTR [esi+0x4e],ah
  4138ed:	add    BYTE PTR [eax],al
  4138ef:	sub    edx,ebx
  4138f1:	sub    edx,esi
  4138f3:	adc    DWORD PTR ds:0x42c014,0x3307
  4138fd:	xor    edx,eax
  4138ff:	add    DWORD PTR ds:0x42d004,0x3241
  413909:	mov    DWORD PTR [ebp+0x8],edx
  41390c:	or     ebx,ebx
  41390e:	mov    edx,DWORD PTR [ebp+0x8]
  413911:	mov    ebx,DWORD PTR [ebp-0x58]
  413914:	sub    DWORD PTR ds:0x429004,0x42c00c
  41391e:	add    edx,0x5708c4
  413924:	imul   edx,ebx
  413927:	mov    DWORD PTR [ebp-0x58],edx
  41392a:	mov    edx,DWORD PTR [ebp+0x8]
  41392d:	and    DWORD PTR ds:0x42d01c,0x0
  413937:	mov    ebx,DWORD PTR ds:0x42d01c
  41393d:	inc    ebx
  41393e:	mov    DWORD PTR ds:0x42d01c,ebx
  413944:	cmp    DWORD PTR ds:0x42d01c,0x29
  41394b:	jne    0x41395a
  413951:	push   DWORD PTR [ebp-0x24]
  413954:	call   DWORD PTR ds:0x42e913
  41395a:	cmp    DWORD PTR ds:0x42d01c,0x1e
  413961:	jb     0x413937
  413967:	and    DWORD PTR ds:0x42d004,0x0
  413971:	mov    ebx,DWORD PTR ds:0x42d004
  413977:	inc    ebx
  413978:	mov    DWORD PTR ds:0x42d004,ebx
  41397e:	cmp    DWORD PTR ds:0x42d004,0x7
  413985:	jne    0x4139a0
  41398b:	push   0x1baa
  413990:	push   0x42e075
  413995:	push   0x429010
  41399a:	call   DWORD PTR ds:0x42e917
  4139a0:	cmp    DWORD PTR ds:0x42d004,0x6
  4139a7:	jne    0x4139ba
  4139ad:	mov    ebx,DWORD PTR ds:0x42d004
  4139b3:	inc    ebx
  4139b4:	mov    DWORD PTR ds:0x42d004,ebx
  4139ba:	cmp    DWORD PTR ds:0x42d004,0x14
  4139c1:	jb     0x413971
  4139c7:	add    DWORD PTR ds:0x42d000,edx
  4139cd:	mov    ebx,DWORD PTR [ebp-0x54]
  4139d0:	mov    DWORD PTR ds:0x42b008,0x4ad3
  4139da:	add    edx,0x64f8da
  4139e0:	or     edx,ebx
  4139e2:	add    DWORD PTR ds:0x42c008,0x5d21
  4139ec:	mov    DWORD PTR [ebp-0x54],edx
  4139ef:	mov    edx,DWORD PTR [ebp+0x8]
  4139f2:	mov    ebx,DWORD PTR [ebp-0x50]
  4139f5:	and    DWORD PTR ds:0x42b008,0x3404
  4139ff:	add    edx,ecx
  413a01:	xor    DWORD PTR ds:0x42a000,0x42d000
  413a0b:	xor    edx,ebx
  413a0d:	mov    DWORD PTR [ebp-0x50],edx
  413a10:	add    ebx,edx
  413a12:	mov    edx,DWORD PTR [ebp+0x8]
  413a15:	adc    DWORD PTR ds:0x429008,edx
  413a1b:	mov    ebx,DWORD PTR [ebp-0x4c]
  413a1e:	or     DWORD PTR ds:0x429028,0x42d010
  413a28:	add    edx,edi
  413a2a:	or     DWORD PTR ds:0x429008,0x429010
  413a34:	and    edx,ebx
  413a36:	xor    DWORD PTR ds:0x429028,ecx
  413a3c:	mov    DWORD PTR [ebp-0x4c],edx
  413a3f:	mov    DWORD PTR ds:0x42c004,0x18
  413a49:	cmp    DWORD PTR ds:0x42c004,0x0
  413a50:	je     0x413a93
  413a56:	cmp    DWORD PTR ds:0x42c004,0x1e
  413a5d:	jne    0x413a7b
  413a63:	push   0x42a004
  413a68:	push   0x2285
  413a6d:	push   DWORD PTR [ebp-0x24]
  413a70:	push   0x1fc0
  413a75:	call   DWORD PTR ds:0x42e8cf
  413a7b:	mov    ebx,DWORD PTR ds:0x42c004
  413a81:	dec    ebx
  413a82:	mov    DWORD PTR ds:0x42c004,ebx
  413a88:	jmp    0x413a49
  413a8d:	add    DWORD PTR ds:0x42d00c,ecx
  413a93:	mov    edx,DWORD PTR [ebp+0x8]
  413a96:	sbb    ebx,DWORD PTR ds:0x42a00c
  413a9c:	mov    ebx,DWORD PTR [ebp-0x48]
  413a9f:	lea    edx,[ebx+edx*1+0x241fc1f]
  413aa6:	mov    DWORD PTR [ebp-0x48],edx
  413aa9:	inc    edx
  413aaa:	mov    edx,DWORD PTR [ebp+0x8]
  413aad:	movzx  ebx,BYTE PTR ds:0x429000
  413ab4:	sbb    DWORD PTR ds:0x42c018,ebx
  413aba:	mov    ebx,0xfa5e15e2
  413abf:	sub    ebx,edx
  413ac1:	add    ebx,DWORD PTR [ebp-0x44]
  413ac4:	and    DWORD PTR ds:0x42c018,0x0
  413ace:	jmp    0x413ae0
  413ad3:	mov    edx,DWORD PTR ds:0x42c018
  413ad9:	inc    edx
  413ada:	mov    DWORD PTR ds:0x42c018,edx
  413ae0:	cmp    DWORD PTR ds:0x42c018,0x15
  413ae7:	jae    0x413b1a
  413aed:	cmp    DWORD PTR ds:0x42c018,0x18
  413af4:	jne    0x413b0f
  413afa:	push   0x88b0
  413aff:	push   0x8c9b
  413b04:	push   0x27a5
  413b09:	call   DWORD PTR ds:0x42e8d3
  413b0f:	jmp    0x413ad3
  413b14:	or     DWORD PTR ds:0x42b004,edx
  413b1a:	mov    DWORD PTR [ebp-0x44],ebx
  413b1d:	mov    DWORD PTR ds:0x42d00c,0x11
  413b27:	cmp    DWORD PTR ds:0x42d00c,0x0
  413b2e:	je     0x413b75
  413b34:	cmp    DWORD PTR ds:0x42d00c,0x1d
  413b3b:	jne    0x413b59
  413b41:	push   0x88e0
  413b46:	push   DWORD PTR [ebp-0x18]
  413b49:	push   0x3079
  413b4e:	push   0x26f3
  413b53:	call   DWORD PTR ds:0x42e8d7
  413b59:	mov    edx,DWORD PTR ds:0x42d00c
  413b5f:	dec    edx
  413b60:	mov    DWORD PTR ds:0x42d00c,edx
  413b66:	jmp    0x413b27
  413b6b:	add    DWORD PTR ds:0x42a014,0x1458
  413b75:	mov    edx,DWORD PTR [ebp+0x8]
  413b78:	xor    DWORD PTR ds:0x429008,0x1867
  413b82:	xor    edx,eax
  413b84:	mov    DWORD PTR ds:0x42900c,0x6609
  413b8e:	add    edx,esi
  413b90:	mov    DWORD PTR ds:0x42d008,0x7de
  413b9a:	jne    0x41157e
  413ba0:	mov    DWORD PTR ds:0x42a008,0x2294
  413baa:	jmp    0x41cc2e
  413baf:	xor    edx,edx
  413bb1:	add    edx,DWORD PTR ds:0x42d014
  413bb7:	sbb    DWORD PTR ds:0x429008,edx
  413bbd:	mov    edx,DWORD PTR [ebp-0xc]
  413bc0:	mov    DWORD PTR ds:0x429010,0x17
  413bca:	cmp    DWORD PTR ds:0x429010,0x0
  413bd1:	je     0x413c04
  413bd7:	cmp    DWORD PTR ds:0x429010,0x18
  413bde:	jne    0x413bea
  413be4:	call   DWORD PTR ds:0x42e91b
  413bea:	xor    ebx,ebx
  413bec:	add    ebx,DWORD PTR ds:0x429010
  413bf2:	dec    ebx
  413bf3:	mov    DWORD PTR ds:0x429010,ebx
  413bf9:	jmp    0x413bca
  413bfe:	or     DWORD PTR ds:0x42c014,ebx
  413c04:	sub    edx,esi
  413c06:	xor    edx,eax
  413c08:	mov    ebx,DWORD PTR ds:0x41cdd0
  413c0e:	mov    ebx,DWORD PTR [ebx]
  413c10:	sub    DWORD PTR ds:0x42b018,ebx
  413c16:	mov    DWORD PTR [ebp-0x5c],edx
  413c19:	and    DWORD PTR ds:0x42b004,0x0
  413c23:	jmp    0x413c35
  413c28:	mov    ebx,DWORD PTR ds:0x42b004
  413c2e:	inc    ebx
  413c2f:	mov    DWORD PTR ds:0x42b004,ebx
  413c35:	cmp    DWORD PTR ds:0x42b004,0x1c
  413c3c:	jae    0x413c60
  413c42:	cmp    DWORD PTR ds:0x42b004,0x24
  413c49:	jne    0x413c5b
  413c4f:	push   DWORD PTR [ebp-0x1c]
  413c52:	push   DWORD PTR [ebp-0x10]
  413c55:	call   DWORD PTR ds:0x42e91f
  413c5b:	jmp    0x413c28
  413c60:	mov    edx,DWORD PTR [ebp-0x10]
  413c63:	mov    ebx,DWORD PTR [ebp-0x8]
  413c66:	xor    edx,eax
  413c68:	xor    ebx,eax
  413c6a:	sub    edx,ebx
  413c6c:	sub    edx,esi
  413c6e:	xor    edx,eax
  413c70:	mov    DWORD PTR [ebp-0x10],edx
  413c73:	mov    edx,DWORD PTR [ebp-0x14]
  413c76:	mov    DWORD PTR [ebp+0x8],edx
  413c79:	jmp    0x416037
  413c7e:	mov    edx,DWORD PTR [ebp+0x8]
  413c81:	mov    ebx,DWORD PTR [ebp-0x8]
  413c84:	xor    edx,eax
  413c86:	xor    ebx,eax
  413c88:	sub    edx,ebx
  413c8a:	sub    edx,esi
  413c8c:	xor    edx,eax
  413c8e:	mov    DWORD PTR [ebp+0x8],edx
  413c91:	mov    edx,DWORD PTR [ebp+0x8]
  413c94:	mov    ebx,DWORD PTR [ebp-0x58]
  413c97:	add    edx,0x5708c4
  413c9d:	imul   edx,ebx
  413ca0:	mov    DWORD PTR [ebp-0x58],edx
  413ca3:	mov    edx,DWORD PTR [ebp+0x8]
  413ca6:	mov    ebx,DWORD PTR [ebp-0x54]
  413ca9:	add    edx,0x64f8da
  413caf:	or     edx,ebx
  413cb1:	mov    DWORD PTR [ebp-0x54],edx
  413cb4:	mov    edx,DWORD PTR [ebp+0x8]
  413cb7:	mov    ebx,DWORD PTR [ebp-0x50]
  413cba:	add    edx,ecx
  413cbc:	jmp    0x416005
  413cc1:	xchg   ecx,eax
  413cc2:	mov    bh,BYTE PTR [edx]
  413cc4:	aad    0x3
  413cc6:	mov    ch,0x93
  413cc8:	mov    ah,al
  413cca:	xor    ebx,ecx
  413ccc:	ja     0x413cec
  413cce:	xor    bl,dl
  413cd0:	push   ebp
  413cd1:	adc    al,0x8a
  413cd3:	jl     0x413d51
  413cd5:	inc    eax
  413cd6:	pop    edi
  413cd7:	jl     0x413d55
  413cd9:	shr    BYTE PTR [ebp-0x70],0xcc
  413cdd:	loope  0x413ca0
  413cdf:	mov    esi,0x97fdbb7c
  413ce4:	ja     0x413ce4
  413ce6:	or     ch,BYTE PTR [edi-0x14b640d]
  413cec:	xchg   ebx,eax
  413ced:	into   
  413cee:	or     bh,bh
  413cf0:	or     ebp,DWORD PTR [eax]
  413cf2:	push   eax
  413cf3:	iret   
  413cf4:	mov    esi,0x3a4d6c5f
  413cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cfa:	xchg   ebx,eax
  413cfb:	cld    
  413cfc:	jg     0x413d39
  413cfe:	ins    BYTE PTR es:[edi],dx
  413cff:	lods   eax,DWORD PTR ds:[esi]
  413d00:	aam    0x6e
  413d02:	and    al,BYTE PTR ds:0xb81f89cd
  413d08:	rol    edi,cl
  413d0a:	enter  0x9305,0x1b
  413d0e:	push   ecx
  413d0f:	sti    
  413d10:	pop    ebx
  413d11:	jne    0x413d69
  413d13:	aam    0x5f
  413d15:	mov    bh,0x5c
  413d17:	cdq    
  413d18:	out    dx,al
  413d19:	xlat   BYTE PTR ds:[ebx]
  413d1a:	mov    ecx,0x59cc9a18
  413d1f:	push   esp
  413d20:	pop    ebp
  413d21:	and    eax,0x33813e21
  413d26:	mov    DWORD PTR [esi+edx*8+0x33b4ad76],edx
  413d2d:	or     al,0x42
  413d2f:	fsub   QWORD PTR [ecx+0x65d6b022]
  413d35:	and    eax,0xb3736cd9
  413d3a:	add    al,0x4f
  413d3c:	test   dl,dh
  413d3e:	ds mov ebp,0x4cdb949d
  413d44:	or     eax,0xfc3bdd1a
  413d49:	test   edx,0xb7f11218
  413d4f:	add    al,0x8c
  413d51:	call   0xe13:0xae8ef217
  413d58:	xchg   edi,eax
  413d59:	push   ds
  413d5a:	daa    
  413d5b:	fmulp  st(2),st
  413d5d:	inc    edx
  413d5e:	xchg   DWORD PTR [edi],ebp
  413d60:	adc    DWORD PTR [ebp-0x3c15b164],eax
  413d66:	mov    ebx,0xd8d10fda
  413d6b:	out    0xaa,eax
  413d6d:	cmp    al,0xf7
  413d6f:	adc    BYTE PTR [ecx+0x73b30c6c],bh
  413d75:	cli    
  413d76:	fimul  DWORD PTR [edx+0x49]
  413d79:	and    eax,0xf0b5c2a0
  413d7e:	add    esi,DWORD PTR [ebx-0x3d]
  413d81:	lock jecxz 0x413de4
  413d84:	push   ebx
  413d85:	cld    
  413d86:	pop    ecx
  413d87:	fsubr  QWORD PTR [eax]
  413d89:	pop    ss
  413d8a:	in     al,0xec
  413d8c:	inc    ebp
  413d8d:	imul   ecx,DWORD PTR [edx+0x27],0xffffffc5
  413d91:	call   0x3003:0x198c5d4f
  413d98:	inc    esp
  413d99:	push   ebp
  413d9a:	push   esi
  413d9b:	popa   
  413d9c:	nop
  413d9d:	lock adc edx,DWORD PTR [edx-0x20e72fee]
  413da4:	pop    ebp
  413da5:	test   edx,0x364f71b6
  413dab:	pop    eax
  413dac:	ss loop 0x413deb
  413daf:	fadd   st(4),st
  413db1:	fild   QWORD PTR [esi-0x3c]
  413db4:	sbb    edx,esp
  413db6:	xchg   edi,eax
  413db7:	sub    al,0xd6
  413db9:	dec    edi
  413dba:	push   ss
  413dbb:	shr    BYTE PTR [eax],0x2f
  413dbe:	inc    eax
  413dbf:	jbe    0x413e12
  413dc1:	jne    0x413e1e
  413dc3:	clc    
  413dc4:	shl    BYTE PTR es:[ebx+0x34be46d6],cl
  413dcb:	xlat   BYTE PTR ds:[ebx]
  413dcc:	je     0x413e29
  413dce:	mov    bl,0x7c
  413dd0:	xchg   ebx,eax
  413dd1:	adc    cx,WORD PTR [edi]
  413dd4:	cmp    dh,BYTE PTR [edx+ecx*1+0x14415c39]
  413ddb:	fst    DWORD PTR [eax-0x7f]
  413dde:	or     al,0x6b
  413de0:	mov    ah,0xa7
  413de2:	mov    esi,0x18d75dec
  413de7:	and    esp,ebp
  413de9:	push   ebp
  413dea:	jmp    0x413dd4
  413dec:	(bad)  
  413ded:	mov    dh,0xfb
  413def:	push   ss
  413df0:	and    al,BYTE PTR [edi]
  413df2:	xlat   BYTE PTR ds:[ebx]
  413df3:	xlat   BYTE PTR ds:[ebx]
  413df4:	sub    ebp,DWORD PTR [ebp-0x376b7e2a]
  413dfa:	xchg   BYTE PTR [edi+0x4bc36d0b],ah
  413e00:	sbb    al,0xb2
  413e02:	sahf   
  413e03:	int    0xdf
  413e05:	out    0xbe,eax
  413e07:	clc    
  413e08:	out    dx,al
  413e09:	dec    ebp
  413e0a:	inc    ecx
  413e0b:	mov    bh,0x44
  413e0d:	add    al,0x67
  413e0f:	addr16 push es
  413e11:	xchg   DWORD PTR [ebp-0x43],esi
  413e14:	xlat   BYTE PTR ds:[ebx]
  413e15:	retf   0xfee8
  413e18:	test   al,0x67
  413e1a:	push   0x6834111d
  413e1f:	or     ah,dh
  413e21:	ret    0x887e
  413e24:	mov    ebx,0xd994736e
  413e29:	jle    0x413e48
  413e2b:	jmp    0x197574cd
  413e30:	les    edx,FWORD PTR [ebp+0xc162ae4]
  413e36:	cvtpi2ps xmm6,mm7
  413e39:	lods   al,BYTE PTR ds:[esi]
  413e3a:	stos   BYTE PTR es:[edi],al
  413e3b:	xchg   ecx,eax
  413e3c:	xchg   ecx,eax
  413e3d:	imul   ebp,eax,0x575566b0
  413e43:	fmul   QWORD PTR [edx-0x71]
  413e46:	adc    DWORD PTR [esi-0x15bc88e6],eax
  413e4c:	mov    ebx,0xc84b8337
  413e51:	mov    DWORD PTR [edi],ebx
  413e53:	mov    dl,0xb2
  413e55:	daa    
  413e56:	lds    esp,FWORD PTR [eax-0x74070d2]
  413e5c:	fisubr DWORD PTR [edx+edx*8]
  413e5f:	inc    eax
  413e60:	in     eax,dx
  413e61:	and    edi,DWORD PTR [eax+ecx*4-0x2b]
  413e65:	pop    ebx
  413e66:	push   edx
  413e67:	xor    eax,0xdcf9c018
  413e6c:	inc    edi
  413e6d:	imul   ebx,DWORD PTR [edx-0x50f9631d],0x65097f16
  413e77:	rcr    bh,1
  413e79:	push   ss
  413e7a:	pop    eax
  413e7b:	lea    eax,[eax-0xb]
  413e7e:	in     eax,dx
  413e7f:	sub    eax,edx
  413e81:	sub    DWORD PTR [esi],esi
  413e83:	stos   BYTE PTR es:[edi],al
  413e84:	add    DWORD PTR [ebp-0x73],esp
  413e87:	inc    esi
  413e88:	stc    
  413e89:	mov    esp,DWORD PTR [eax-0x26]
  413e8c:	aaa    
  413e8d:	sbb    bl,BYTE PTR [edx]
  413e8f:	addr16 jno 0x413e80
  413e92:	cmp    al,0x11
  413e94:	cld    
  413e95:	clc    
  413e96:	add    eax,0x3cfc5961
  413e9b:	pop    eax
  413e9c:	es (bad) 
  413e9e:	cli    
  413e9f:	add    al,0x50
  413ea1:	int    0x62
  413ea3:	not    cl
  413ea5:	lods   al,BYTE PTR ds:[esi]
  413ea6:	pop    es
  413ea7:	adc    DWORD PTR [ebx-0x37b56f92],eax
  413ead:	jne    0x413f26
  413eaf:	adc    eax,ecx
  413eb1:	pop    esi
  413eb2:	mov    eax,ds:0x73b334ed
  413eb7:	loope  0x413e61
  413eb9:	inc    edx
  413eba:	mov    bl,0x25
  413ebc:	gs mov ebx,0xbefd2a84
  413ec2:	sti    
  413ec3:	test   edx,esi
  413ec5:	push   cs
  413ec6:	ins    BYTE PTR es:[edi],dx
  413ec7:	loopne 0x413ef4
  413ec9:	jle    0x413e8a
  413ecb:	mov    ah,0x3d
  413ecd:	cwde   
  413ece:	pop    esi
  413ecf:	fsub   DWORD PTR [eax+0xba119a1]
  413ed5:	cli    
  413ed6:	xchg   edi,eax
  413ed7:	adc    eax,0x44d43672
  413edc:	push   esp
  413edd:	outs   dx,DWORD PTR ds:[esi]
  413ede:	sti    
  413edf:	hlt    
  413ee0:	and    ebx,esi
  413ee2:	push   0xffffffb5
  413ee4:	out    dx,eax
  413ee5:	(bad)  
  413ee6:	xchg   ebx,eax
  413ee7:	fsub   QWORD PTR [ecx-0x13]
  413eea:	mov    ah,0x5d
  413eec:	fwait
  413eed:	sbb    cl,bh
  413eef:	lods   al,BYTE PTR ds:[esi]
  413ef0:	loopne 0x413e9c
  413ef2:	inc    eax
  413ef3:	sub    eax,DWORD PTR [eax]
  413ef5:	jecxz  0x413eb2
  413ef7:	jo     0x413e7f
  413ef9:	call   FWORD PTR [edi-0x701fcfff]
  413eff:	stos   DWORD PTR es:[edi],eax
  413f00:	inc    eax
  413f01:	pushf  
  413f02:	shr    DWORD PTR [ebp-0x2c9d3dd5],cl
  413f08:	aad    0x8f
  413f0a:	call   0xc607:0x34aff618
  413f11:	fcom   DWORD PTR [eax+ecx*4-0x62]
  413f15:	rcl    edx,cl
  413f17:	mov    ds:0xfd475c7d,eax
  413f1c:	inc    DWORD PTR [edi]
  413f1e:	in     eax,dx
  413f1f:	bound  edx,QWORD PTR [edx+0x21]
  413f22:	sub    esi,DWORD PTR ds:0x4a2f3074
  413f28:	scas   eax,DWORD PTR es:[edi]
  413f29:	loop   0x413f92
  413f2b:	dec    edi
  413f2c:	outs   dx,BYTE PTR ds:[esi]
  413f2d:	clc    
  413f2e:	inc    esi
  413f2f:	mov    ds:0xeeb04cba,eax
  413f34:	out    0xd1,al
  413f36:	dec    eax
  413f37:	dec    edx
  413f38:	ja     0x413f8b
  413f3a:	jnp    0x413f16
  413f3c:	(bad)  
  413f3d:	aad    0xa0
  413f3f:	inc    ah
  413f41:	pop    eax
  413f42:	and    eax,0x4b6aeac
  413f47:	cmc    
  413f48:	jmp    0x934006c4
  413f4d:	mov    eax,0xc8bf4c28
  413f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f53:	scas   eax,DWORD PTR es:[edi]
  413f54:	outs   dx,DWORD PTR ds:[esi]
  413f55:	rol    BYTE PTR [ecx+esi*8],1
  413f58:	jne    0x413f86
  413f5a:	push   ecx
  413f5b:	add    eax,0x10ea3162
  413f60:	jae    0x413f7b
  413f62:	mov    edi,0x5a6ed6f2
  413f67:	retf   
  413f68:	je     0x413f3d
  413f6a:	pop    es
  413f6b:	jnp    0x413f0c
  413f6d:	sbb    eax,0xc5de67c0
  413f72:	jbe    0x413fa2
  413f74:	lahf   
  413f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f76:	mov    ecx,0xc3afd030
  413f7b:	out    dx,eax
  413f7c:	cmp    dl,bh
  413f7e:	(bad)  
  413f7f:	daa    
  413f80:	into   
  413f81:	add    eax,DWORD PTR [eax-0x15814858]
  413f87:	lds    ebp,FWORD PTR [eax-0x432d3a0d]
  413f8d:	xchg   esp,eax
  413f8e:	sti    
  413f8f:	imul   BYTE PTR [ebx]
  413f91:	out    0xce,al
  413f93:	ins    DWORD PTR es:[edi],dx
  413f94:	xchg   ecx,eax
  413f95:	test   DWORD PTR ds:0x439ee83d,0xee306b7e
  413f9f:	add    BYTE PTR [edi+0xefc2df7],ah
  413fa5:	cli    
  413fa6:	aam    0x8b
  413fa8:	or     al,0xc0
  413faa:	sub    DWORD PTR [eax-0x165e40da],eax
  413fb0:	lahf   
  413fb1:	(bad)  
  413fb2:	mov    cs,WORD PTR [edi-0x45099b67]
  413fb8:	mov    bl,0xf8
  413fba:	pop    ecx
  413fbb:	mov    ecx,0xb58ede33
  413fc0:	push   esp
  413fc1:	fsubr  QWORD PTR [esi-0x4a9ac5ae]
  413fc7:	or     BYTE PTR ds:0x444ccc1e,bl
  413fcd:	add    ah,BYTE PTR [ecx+0x554e2f58]
  413fd3:	add    ebp,DWORD PTR [ebx+0x1f]
  413fd6:	inc    ebx
  413fd7:	mov    bh,0x3
  413fd9:	jae    0x414042
  413fdb:	fild   QWORD PTR [edx-0x2fa3e298]
  413fe1:	and    ebx,DWORD PTR [ecx-0x1aaac04f]
  413fe7:	inc    edx
  413fe8:	xchg   DWORD PTR [esi-0x16e67fff],ebx
  413fee:	pop    esp
  413fef:	popa   
  413ff0:	test   al,0x7c
  413ff2:	sub    DWORD PTR [edx-0x75a7560f],esp
  413ff8:	adc    BYTE PTR [ebp+0x51],bh
  413ffb:	jne    0x414047
  413ffd:	push   edx
  413ffe:	jp     0x414049
  414000:	inc    esp
  414001:	or     BYTE PTR [ecx],0x7b
  414004:	push   0x3
  414006:	call   0xf95c3529
  41400b:	jo     0x414036
  41400d:	jecxz  0x413fc7
  41400f:	std    
  414010:	into   
  414011:	dec    edx
  414012:	inc    edx
  414013:	popf   
  414014:	mov    ah,0xff
  414016:	std    
  414017:	hlt    
  414018:	sbb    dh,BYTE PTR [esi]
  41401a:	scas   eax,DWORD PTR es:[edi]
  41401b:	inc    edi
  41401c:	nop
  41401d:	dec    eax
  41401e:	mov    eax,ds:0xef5803a6
  414023:	pushf  
  414024:	lods   al,BYTE PTR ds:[esi]
  414025:	xor    al,0x9e
  414027:	cld    
  414028:	stos   BYTE PTR es:[edi],al
  414029:	xchg   esp,eax
  41402a:	mov    dl,0xe4
  41402c:	icebp  
  41402d:	out    dx,eax
  41402e:	test   eax,0xe1877bc5
  414033:	and    eax,DWORD PTR [esi+0x1f107499]
  414039:	mov    ebp,0xd3e3b30f
  41403e:	stos   BYTE PTR es:[edi],al
  41403f:	cmp    esp,eax
  414041:	jge    0x413ff6
  414043:	shl    BYTE PTR [eax],cl
  414045:	dec    ecx
  414046:	jmp    0x1f50:0x1e6f16a7
  41404d:	dec    edi
  41404e:	div    BYTE PTR [esi-0x75533d1c]
  414054:	dec    ecx
  414055:	push   esi
  414056:	das    
  414057:	sub    eax,0xfada77aa
  41405c:	dec    edi
  41405d:	neg    BYTE PTR [ebx-0x3846ed86]
  414063:	bound  ebx,QWORD PTR [esi+0x741aad41]
  414069:	inc    eax
  41406a:	dec    ebx
  41406b:	mov    al,0xa1
  41406d:	sub    eax,0x1f516e6b
  414072:	sbb    DWORD PTR [eax+0x72],edi
  414075:	in     al,0x79
  414077:	loope  0x4140cb
  414079:	cdq    
  41407a:	and    cl,BYTE PTR [ecx+0x68]
  41407d:	(bad)  
  41407e:	clc    
  41407f:	or     bh,ah
  414081:	arpl   WORD PTR [eax+0x44],bx
  414084:	push   ecx
  414085:	das    
  414086:	mov    ss,esp
  414088:	in     eax,0x3c
  41408a:	enter  0x6549,0xfe
  41408e:	shl    BYTE PTR [eax+0x19],cl
  414091:	outs   dx,BYTE PTR ds:[esi]
  414092:	iretw  
  414094:	jge    0x4140a1
  414096:	and    al,0xeb
  414098:	lea    ebp,[edx]
  41409a:	js     0x414052
  41409c:	test   BYTE PTR [ecx+edx*8],bl
  41409f:	(bad)  
  4140a0:	cld    
  4140a1:	or     al,0x86
  4140a3:	call   0x2b548c1a
  4140a8:	int    0xf2
  4140aa:	lahf   
  4140ab:	mov    ecx,0x1c0cb672
  4140b0:	scas   al,BYTE PTR es:[edi]
  4140b1:	cmc    
  4140b2:	mov    cl,0x7e
  4140b4:	lock sub edx,esp
  4140b7:	loopne 0x4140be
  4140b9:	pop    esi
  4140ba:	leave  
  4140bb:	sub    ebx,DWORD PTR [edx]
  4140bd:	add    dh,BYTE PTR ds:0x6f08b6b6
  4140c3:	mov    cl,0xcb
  4140c5:	int    0xc8
  4140c7:	and    ecx,eax
  4140c9:	cmp    eax,DWORD PTR [ecx]
  4140cb:	mov    al,bl
  4140cd:	xor    ebp,DWORD PTR [edi-0x2044b068]
  4140d3:	ror    DWORD PTR [esi-0x73b25b0e],1
  4140d9:	cmc    
  4140da:	xor    BYTE PTR [eax-0x2b6ef267],al
  4140e0:	adc    ah,BYTE PTR [ebx+0x3e]
  4140e3:	sbb    DWORD PTR [ecx-0x36dee321],eax
  4140e9:	or     DWORD PTR ds:0xa977e079,ecx
  4140ef:	(bad)  
  4140f0:	and    edi,ebp
  4140f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140f3:	sub    DWORD PTR [ebx+0x5c],ebx
  4140f6:	es jnp 0x414123
  4140f9:	call   0x46b8:0xfc070caf
  414100:	xlat   BYTE PTR ds:[ebx]
  414101:	ret    
  414102:	stos   BYTE PTR es:[edi],al
  414103:	fdivr  QWORD PTR [ecx+0x3dfe6b42]
  414109:	cld    
  41410a:	mov    esp,0x4db492a
  41410f:	int    0xd9
  414111:	push   ds
  414112:	nop
  414113:	outs   dx,BYTE PTR ds:[esi]
  414114:	or     BYTE PTR [esi+0x44],dh
  414117:	push   es
  414118:	xchg   ebp,eax
  414119:	jge    0x41413a
  41411b:	pop    eax
  41411c:	stos   DWORD PTR es:[edi],eax
  41411d:	fs icebp 
  41411f:	jmp    0x651:0xea1bc02b
  414126:	out    0x26,eax
  414128:	jmp    0xd976:0x1b4c03bb
  41412f:	cmp    eax,0x95d68703
  414134:	pop    es
  414135:	cdq    
  414136:	and    eax,0x847b7eb0
  41413b:	hlt    
  41413c:	push   edx
  41413d:	pop    edx
  41413e:	es (bad) 
  414140:	jae    0x4140d3
  414142:	loop   0x414120
  414144:	and    al,0x17
  414146:	ja     0x4140e3
  414148:	jbe    0x414127
  41414a:	pop    ds
  41414b:	pushf  
  41414c:	xchg   esp,eax
  41414d:	(bad)  
  41414e:	outs   dx,DWORD PTR ds:[esi]
  41414f:	add    eax,0xc46a2760
  414154:	shr    ebp,0x8e
  414157:	lods   eax,DWORD PTR ds:[esi]
  414158:	push   0x21873f6a
  41415d:	fild   WORD PTR [edx]
  41415f:	test   DWORD PTR [esp+ecx*4+0x51],0xb7d8de88
  414167:	imul   edi,DWORD PTR [esi],0x8d117367
  41416d:	mov    DWORD PTR [edx+0x6d],ebx
  414170:	mov    bl,0x2a
  414172:	aaa    
  414173:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414175:	sbb    bh,BYTE PTR [eax+ecx*1+0x54fbb347]
  41417c:	sub    DWORD PTR [eax-0x25],0x1666c8a6
  414183:	hlt    
  414184:	ja     0x41417f
  414186:	out    0x1,al
  414188:	push   ss
  414189:	sar    BYTE PTR [eax],cl
  41418b:	jbe    0x4141f8
  41418d:	push   ecx
  41418e:	lds    ebx,FWORD PTR [edx+0x18]
  414191:	int    0x64
  414193:	je     0x4141ef
  414195:	push   edi
  414196:	and    eax,0x8fa6ff0e
  41419b:	icebp  
  41419c:	les    ebp,FWORD PTR [esi+0x176bda04]
  4141a2:	xchg   ah,bh
  4141a4:	jecxz  0x41417e
  4141a6:	xlat   BYTE PTR ds:[ebx]
  4141a7:	(bad)
  4141aa:	jbe    0x4141ed
  4141ac:	ja     0x4141fc
  4141ae:	into   
  4141af:	sub    eax,0xee631041
  4141b4:	push   esp
  4141b5:	inc    ebp
  4141b6:	sbb    esi,edx
  4141b8:	jno    0x4141f4
  4141ba:	jmp    0xee8c:0x180c4134
  4141c1:	cdq    
  4141c2:	sbb    edi,ebx
  4141c4:	mov    esp,0x1b961f65
  4141c9:	push   ebp
  4141ca:	xchg   esi,eax
  4141cb:	pop    ecx
  4141cc:	(bad)  
  4141cd:	xor    eax,0x990e7b15
  4141d2:	test   cl,0xd8
  4141d5:	fstp   TBYTE PTR ds:0xd9ab52b8
  4141db:	sub    dl,BYTE PTR [ebp+0x44ba9839]
  4141e1:	hlt    
  4141e2:	dec    esp
  4141e3:	out    dx,eax
  4141e4:	mov    al,ds:0x5dc1cc5b
  4141e9:	mov    ah,0x38
  4141eb:	stos   BYTE PTR es:[edi],al
  4141ec:	and    ah,BYTE PTR [ebx+0x4a]
  4141ef:	test   DWORD PTR [eax-0x1de9910a],0x54e4b03a
  4141f9:	neg    DWORD PTR [eax]
  4141fb:	sub    DWORD PTR [ecx+0x38],ebp
  4141fe:	inc    esi
  4141ff:	call   0x68c5:0x6ed4546
  414206:	mov    al,0x22
  414208:	cmp    bh,BYTE PTR [eax-0x23ba6721]
  41420e:	or     edx,DWORD PTR [esi-0x49]
  414211:	addr16 xchg edx,eax
  414213:	xor    DWORD PTR [edx+0x29],ebx
  414216:	(bad)  
  414217:	out    0x84,eax
  414219:	xchg   esi,eax
  41421a:	(bad)  
  41421b:	sahf   
  41421c:	out    dx,al
  41421d:	fcomp  QWORD PTR fs:[ebx+0x45]
  414221:	sar    BYTE PTR [esi-0x75],cl
  414224:	sti    
  414225:	mov    WORD PTR [eax],?
  414227:	push   ebx
  414228:	sahf   
  414229:	mov    ah,0x51
  41422b:	mov    esp,0x2a4f48c8
  414230:	(bad)  
  414231:	test   edx,edi
  414233:	je     0x4141c1
  414235:	fdivrp st(4),st
  414237:	(bad)  
  414238:	imul   edi,DWORD PTR [esi+0xc],0xd
  41423c:	and    BYTE PTR [esi+0x11],cl
  41423f:	jno    0x4141e3
  414241:	fbld   TBYTE PTR [ebx]
  414243:	dec    esi
  414244:	fisubr DWORD PTR [ebx-0x2ef0916a]
  41424a:	popa   
  41424b:	int3   
  41424c:	jo     0x4141fd
  41424e:	adc    ah,BYTE PTR [ebx]
  414250:	xor    DWORD PTR [esi+eiz*2],0xfe865287
  414257:	mov    eax,0xdc8c83db
  41425c:	sbb    al,0x4c
  41425e:	dec    ebx
  41425f:	jp     0x4142be
  414261:	or     BYTE PTR [edi+ebx*2+0x66],bh
  414265:	into   
  414266:	out    dx,eax
  414267:	int    0xc5
  414269:	adc    esi,DWORD PTR [ecx]
  41426b:	mov    ecx,0xf4cd51f8
  414270:	xor    esp,ebp
  414272:	adc    DWORD PTR [ebx+0x3f],0x5b
  414276:	and    eax,0x909fff94
  41427b:	sbb    DWORD PTR [edi-0x3fa39b0a],esp
  414281:	lods   eax,DWORD PTR ds:[esi]
  414282:	rcl    cl,1
  414284:	dec    esi
  414285:	(bad)  
  414286:	aam    0x43
  414288:	xchg   BYTE PTR [ecx-0x23c58006],cl
  41428e:	lods   eax,DWORD PTR ds:[esi]
  41428f:	sar    esi,cl
  414291:	call   0xf5db:0x2d42d9c5
  414298:	push   edx
  414299:	xchg   BYTE PTR [esi],ch
  41429b:	push   ebp
  41429c:	jecxz  0x414287
  41429e:	arpl   WORD PTR [ebx],ax
  4142a0:	out    0x70,eax
  4142a2:	ror    esi,1
  4142a4:	mov    esi,edx
  4142a6:	xchg   esp,eax
  4142a7:	jg     0x4142c1
  4142a9:	ins    DWORD PTR es:[edi],dx
  4142aa:	push   esi
  4142ab:	xor    BYTE PTR [ebx-0x5fcb17b],ch
  4142b1:	add    eax,DWORD PTR [ecx]
  4142b3:	loope  0x414293
  4142b5:	in     eax,0x47
  4142b7:	cmp    DWORD PTR [edi-0x6387e57c],eax
  4142bd:	pop    esi
  4142be:	push   esi
  4142bf:	inc    esp
  4142c0:	dec    esi
  4142c1:	test   eax,0xc300e0c
  4142c6:	mov    ebx,0x12bab516
  4142cb:	test   eax,0xba29317a
  4142d0:	mov    dl,0xce
  4142d2:	xchg   ebp,eax
  4142d3:	test   eax,0xf64a2fd1
  4142d8:	ins    DWORD PTR es:[edi],dx
  4142d9:	pop    ss
  4142da:	ins    BYTE PTR es:[edi],dx
  4142db:	jl     0x4142df
  4142dd:	pop    ecx
  4142de:	js     0x414347
  4142e0:	sub    al,0x9c
  4142e2:	add    eax,edx
  4142e4:	ins    BYTE PTR es:[edi],dx
  4142e5:	and    BYTE PTR [edi+eiz*2+0xd8f2eef],bl
  4142ec:	dec    ebp
  4142ed:	inc    esi
  4142ee:	or     eax,0x17f89b00
  4142f3:	cmp    al,BYTE PTR ds:0x466abd36
  4142f9:	xor    esi,ecx
  4142fb:	enter  0xf137,0x12
  4142ff:	(bad)  
  414300:	adc    esi,DWORD PTR [ecx+0x63]
  414303:	clc    
  414304:	loopne 0x414365
  414306:	jae    0x414335
  414308:	sti    
  414309:	jmp    0x414387
  41430b:	jl     0x4142dc
  41430d:	mov    esi,0xf41667ce
  414312:	jmpw   0x716a
  414316:	sub    BYTE PTR [eax+0x61e2b7c8],bh
  41431c:	fist   DWORD PTR [ecx]
  41431e:	ins    BYTE PTR es:[edi],dx
  41431f:	fild   DWORD PTR ds:0xace2e3d
  414325:	cmp    al,BYTE PTR [esi+ecx*8]
  414328:	in     eax,dx
  414329:	inc    edi
  41432a:	jns    0x4142d0
  41432c:	push   ds
  41432d:	jno    0x4142bf
  41432f:	lds    edi,FWORD PTR [edi]
  414331:	mov    al,ds:0x3d01d9df
  414336:	fisttp QWORD PTR ds:0x13bde64e
  41433c:	push   edi
  41433d:	repnz pop ds
  41433f:	jecxz  0x414350
  414341:	in     eax,dx
  414342:	push   ebp
  414343:	or     BYTE PTR [edx-0x20d6eeb2],bh
  414349:	fwait
  41434a:	pop    ebp
  41434b:	push   eax
  41434c:	imul   esp,DWORD PTR [ebp+0x3fd9a796],0x2a7bb692
  414356:	ret    
  414357:	and    BYTE PTR [esi],cl
  414359:	icebp  
  41435a:	stc    
  41435b:	push   ecx
  41435c:	scas   al,BYTE PTR es:[edi]
  41435d:	add    DWORD PTR [esi+0x4b],ebp
  414360:	push   ds
  414361:	xchg   ebx,eax
  414362:	imul   esi,edx,0xa073eac4
  414368:	push   ecx
  414369:	add    BYTE PTR [eax+0x77],0xc7
  41436d:	enter  0x4e24,0xb7
  414371:	rol    BYTE PTR [esp+ecx*4-0x5c9ad977],cl
  414378:	test   DWORD PTR [ecx],ebx
  41437a:	push   esi
  41437b:	xadd   BYTE PTR [eax],ah
  41437e:	or     esp,ecx
  414380:	sub    al,0x37
  414382:	sub    bh,BYTE PTR [ebp+0x5b]
  414385:	fcomp  DWORD PTR [eax]
  414387:	cmp    esi,DWORD PTR [ecx-0x707c6cbf]
  41438d:	sbb    ecx,0x72
  414390:	push   0x1f
  414392:	into   
  414393:	data16 fsub QWORD PTR es:[edx+0x52792af8]
  41439b:	jp     0x4143e2
  41439d:	int3   
  41439e:	repnz in al,dx
  4143a0:	mov    BYTE PTR [ebx],bh
  4143a2:	mov    bl,0x18
  4143a4:	add    BYTE PTR [edx-0x76],dh
  4143a7:	aad    0x6e
  4143a9:	or     eax,0xd9cda7d9
  4143ae:	loopne 0x4143b3
  4143b0:	and    ebx,DWORD PTR [ebp-0x39]
  4143b3:	aad    0xa5
  4143b5:	mov    esi,?
  4143b7:	leave  
  4143b8:	dec    esi
  4143b9:	jge    0x41438c
  4143bb:	inc    ebp
  4143bc:	or     BYTE PTR ds:0xdaea3c3b,ch
  4143c2:	jmp    0xda3d:0xd664b456
  4143c9:	mov    dl,BYTE PTR [esi-0x2e]
  4143cc:	loop   0x414397
  4143ce:	jmp    0x2b686672
  4143d3:	fwait
  4143d4:	jnp    0x4143c0
  4143d6:	arpl   WORD PTR [ecx+edx*2-0x143e9c72],bx
  4143dd:	sbb    esi,DWORD PTR [ecx]
  4143df:	mov    edi,0x7820f5ec
  4143e4:	(bad)  [eax+edi*4]
  4143e7:	icebp  
  4143e8:	sbb    eax,0x87f89a99
  4143ed:	xor    ebx,DWORD PTR ds:0xd474aa05
  4143f3:	fidiv  DWORD PTR [ebx+0x6dff864c]
  4143f9:	gs inc eax
  4143fb:	pop    ecx
  4143fc:	jne    0x4143cd
  4143fe:	push   es
  4143ff:	inc    esi
  414400:	adc    DWORD PTR [esi+0x4dbd7468],esp
  414406:	cmp    BYTE PTR [edx+edx*8],cl
  414409:	jecxz  0x414479
  41440b:	mov    ds:0x4c0df4ca,eax
  414410:	sub    edi,DWORD PTR [esi+0x7a1bfbaf]
  414416:	or     al,0x59
  414418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414419:	xchg   BYTE PTR [eax+0x156f9291],bh
  41441f:	sbb    BYTE PTR [esi+ecx*4+0x54372a66],bh
  414426:	pop    eax
  414427:	int    0x9f
  414429:	mov    dl,0xa6
  41442b:	stos   BYTE PTR es:[edi],al
  41442c:	lds    edi,FWORD PTR [eax+0x7d]
  41442f:	xor    ch,dh
  414431:	imul   edi,DWORD PTR [edi+0x58],0x8e7e1723
  414438:	dec    ebx
  414439:	scas   al,BYTE PTR es:[edi]
  41443a:	repnz sub eax,0xc24b7402
  414440:	add    BYTE PTR [edi],bl
  414442:	dec    ecx
  414443:	pop    ss
  414444:	mov    ebp,0x3db4c5a3
  414449:	xor    ch,BYTE PTR [esi-0x61]
  41444c:	in     al,0xf4
  41444e:	das    
  41444f:	and    edi,DWORD PTR [esi]
  414451:	xor    ah,BYTE PTR [edx-0x34]
  414454:	push   ss
  414455:	sbb    BYTE PTR [esi-0x50c90133],0x4e
  41445c:	pop    esp
  41445d:	xchg   BYTE PTR [edx+esi*2],dh
  414460:	cmc    
  414461:	popf   
  414462:	jmp    0x4144c5
  414464:	cmp    eax,0x45034596
  414469:	daa    
  41446a:	sbb    DWORD PTR [edx],ebp
  41446c:	pop    esp
  41446d:	push   ds
  41446e:	int    0x93
  414470:	fist   WORD PTR [eax-0x7d]
  414473:	mov    ebx,0x77b2ddba
  414478:	cmp    al,0xa7
  41447a:	mov    ecx,0x3f92ce02
  41447f:	ret    
  414480:	in     eax,0x33
  414482:	js     0x414408
  414484:	clc    
  414485:	inc    edx
  414486:	cwde   
  414487:	xlat   BYTE PTR ds:[ebx]
  414488:	adc    BYTE PTR [edi+0x4098c1bb],cl
  41448e:	out    0xc,al
  414490:	imul   eax,ebx,0xa6724013
  414496:	lock and al,0x84
  414499:	jge    0x414434
  41449b:	mov    ds:0xab9c6a3a,al
  4144a0:	aad    0x1e
  4144a2:	fnsave [ebx+0xa]
  4144a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144a6:	adc    eax,0x86d0478a
  4144ab:	mov    bh,0xb0
  4144ad:	and    DWORD PTR ds:0x6091745d,edx
  4144b3:	gs sub dh,al
  4144b6:	push   edi
  4144b7:	jl     0x414456
  4144b9:	sbb    eax,0x9402886e
  4144be:	adc    al,0xf1
  4144c1:	pop    eax
  4144c2:	mov    ss,ebp
  4144c4:	popf   
  4144c5:	clc    
  4144c6:	cli    
  4144c7:	dec    ebp
  4144c8:	cs inc ecx
  4144ca:	adc    ecx,eax
  4144cc:	es xchg ebx,eax
  4144ce:	and    al,0x2f
  4144d0:	repz shr BYTE PTR [eax-0x28],1
  4144d4:	repz (bad) 
  4144d6:	in     al,dx
  4144d7:	pop    es
  4144d8:	xor    DWORD PTR [ebp-0x6a],eax
  4144db:	jmp    0x41451a
  4144dd:	loop   0x4144b5
  4144df:	inc    ebx
  4144e0:	stos   DWORD PTR es:[edi],eax
  4144e1:	pop    ss
  4144e2:	jl     0x414561
  4144e4:	popa   
  4144e5:	jns    0x414533
  4144e7:	loopne 0x414507
  4144e9:	cs pushf 
  4144eb:	clc    
  4144ec:	mov    eax,ss
  4144ee:	in     eax,dx
  4144ef:	mov    eax,ds:0xaf99a931
  4144f4:	mov    ebp,0x39146c2f
  4144f9:	jge    0x4144f8
  4144fb:	ret    
  4144fc:	sub    al,0xfe
  4144fe:	call   0x42b802bf
  414503:	pop    ds
  414504:	(bad)  
  414505:	fwait
  414506:	loopne 0x4144c5
  414508:	test   eax,0x4496a684
  41450d:	int3   
  41450e:	mov    edx,0xba223b10
  414513:	popf   
  414514:	xchg   esi,eax
  414515:	push   edx
  414516:	imul   edx,ecx,0x7b85936
  41451c:	(bad)  
  41451d:	cmp    DWORD PTR ds:0x5594f99f,edi
  414523:	add    ch,ch
  414525:	sbb    cl,BYTE PTR [eax-0x69fcc63d]
  41452b:	jns    0x414560
  41452d:	loop   0x4145ab
  41452f:	sbb    DWORD PTR [eax],esp
  414531:	(bad)  
  414532:	pop    ebx
  414533:	cmp    BYTE PTR [ecx+0x5419a748],0x24
  41453a:	xchg   esp,eax
  41453b:	sbb    BYTE PTR [esi+0xc],bh
  41453e:	mov    ds:0x2d40a310,eax
  414543:	xor    eax,0x673b033f
  414548:	jno    0x41451c
  41454a:	addr16 jb 0x414517
  41454d:	jb     0x4145a7
  41454f:	dec    edi
  414550:	dec    ebp
  414551:	sti    
  414552:	out    0x36,eax
  414554:	mov    esp,0xc885868
  414559:	lahf   
  41455a:	loop   0x4144ed
  41455c:	adc    al,0xa4
  41455e:	in     eax,0x28
  414560:	inc    ecx
  414561:	lods   al,BYTE PTR ds:[esi]
  414562:	xor    dh,BYTE PTR cs:[ebx]
  414565:	cld    
  414566:	cmc    
  414567:	(bad)
  41456b:	rol    BYTE PTR [edi+0x1e8d1632],0x3e
  414572:	sbb    esp,ebx
  414574:	cmp    esi,DWORD PTR ss:[edx-0x3e]
  414578:	popf   
  414579:	dec    eax
  41457a:	aad    0x62
  41457c:	jle    0x4144fe
  41457e:	test   BYTE PTR [edx+ecx*4+0x63],dh
  414582:	mov    ecx,fs
  414584:	xchg   edi,eax
  414585:	in     al,0x91
  414587:	(bad)  
  414588:	cmp    eax,0xfd2a2e51
  41458d:	jle    0x414586
  41458f:	aam    0x3f
  414591:	ret    
  414592:	es js  0x4145a7
  414595:	inc    edi
  414596:	cld    
  414597:	xor    BYTE PTR [ebx],0x85
  41459a:	lods   eax,DWORD PTR ds:[esi]
  41459b:	push   ds
  41459c:	pusha  
  41459d:	loope  0x4145c4
  41459f:	scas   eax,DWORD PTR es:[edi]
  4145a0:	and    BYTE PTR [edx],dl
  4145a2:	ins    DWORD PTR es:[edi],dx
  4145a3:	jmp    0x9d31d3af
  4145a8:	cwde   
  4145a9:	mov    ch,0x18
  4145ab:	retf   
  4145ac:	xchg   BYTE PTR [ecx+0x59],dh
  4145af:	out    dx,eax
  4145b0:	sub    eax,0x4ec0375c
  4145b5:	cwde   
  4145b6:	and    edx,0xffffffe9
  4145b9:	inc    ebp
  4145ba:	push   cs
  4145bb:	cmp    BYTE PTR [edi+0x53996271],al
  4145c1:	cs in  al,dx
  4145c3:	jecxz  0x4145b8
  4145c5:	pop    ss
  4145c6:	inc    edi
  4145c7:	xchg   esp,eax
  4145c8:	sbb    DWORD PTR [edi-0x8],edx
  4145cb:	add    esi,0xffffffad
  4145ce:	cmp    BYTE PTR ds:0x1fb35afd,bl
  4145d4:	fisubr DWORD PTR [edx]
  4145d6:	aaa    
  4145d7:	aam    0xa7
  4145d9:	mov    al,ds:0xfd6e045f
  4145de:	xor    eax,0x84222e6b
  4145e3:	sbb    ebp,DWORD PTR [esi-0x4467908b]
  4145e9:	cmp    edx,edx
  4145eb:	cmc    
  4145ec:	imul   edx,DWORD PTR [esi+edi*1],0xffffffc4
  4145f0:	das    
  4145f1:	mov    ds:0xc4aceba1,al
  4145f6:	xor    ecx,DWORD PTR [eax]
  4145f8:	dec    eax
  4145f9:	cmp    dh,BYTE PTR [eax]
  4145fb:	jle    0x4145c0
  4145fd:	jl     0x4145af
  4145ff:	stos   BYTE PTR es:[edi],al
  414600:	jo     0x4145ec
  414602:	hlt    
  414603:	std    
  414604:	dec    eax
  414605:	cmp    cl,BYTE PTR [ebp+0x5003f516]
  41460b:	dec    edi
  41460c:	mov    ds,ebp
  41460e:	xor    eax,0xe38986fc
  414613:	out    0x5b,al
  414615:	lahf   
  414616:	cld    
  414617:	fnsave [eax]
  414619:	and    eax,DWORD PTR [edi]
  41461b:	in     al,dx
  41461c:	or     BYTE PTR [ebp-0x15ec45c],dh
  414622:	pop    esi
  414623:	sbb    BYTE PTR [ecx-0x703dd233],0xf4
  41462a:	xchg   ecx,eax
  41462b:	cmp    DWORD PTR [esi-0x33],0xffffffd1
  41462f:	dec    esi
  414630:	inc    ebx
  414631:	add    bl,BYTE PTR [ecx]
  414633:	inc    eax
  414634:	leave  
  414635:	mov    cl,0xec
  414637:	cli    
  414638:	cmc    
  414639:	aam    0x6e
  41463b:	gs out 0xce,eax
  41463e:	test   al,0x7e
  414640:	nop
  414641:	dec    ecx
  414643:	aaa    
  414644:	dec    eax
  414645:	lods   eax,DWORD PTR ds:[esi]
  414646:	(bad)  
  414647:	jmp    0x4dc66510
  41464c:	xchg   edx,eax
  41464d:	retf   
  41464e:	aas    
  41464f:	imul   esp,DWORD PTR [edx+eiz*1],0x290d4638
  414656:	mov    edx,0x3f8df71
  41465b:	or     al,0x7f
  41465d:	cdq    
  41465e:	pop    ebx
  41465f:	bsf    edx,eax
  414662:	cmp    edi,ebx
  414664:	loopne 0x414622
  414666:	push   ss
  414667:	mov    al,BYTE PTR [ecx]
  414669:	and    ebp,ecx
  41466b:	cmp    BYTE PTR [eax+eiz*8],ah
  41466e:	test   eax,0x27365a8d
  414673:	pop    ebp
  414674:	daa    
  414675:	pusha  
  414676:	shr    DWORD PTR [eax+eax*8+0x79a4ffaf],1
  41467d:	aam    0x4c
  41467f:	cmp    esi,edi
  414681:	call   0x870aee6f
  414686:	mov    ebp,0xf546c55e
  41468b:	or     cl,dl
  41468d:	sub    al,0x9
  41468f:	mov    cs,WORD PTR [ebp+0x10]
  414692:	cwde   
  414693:	xchg   ebp,eax
  414694:	xor    dl,ah
  414696:	push   ebp
  414697:	push   0xac8d3d9
  41469c:	call   0xcdd7cc36
  4146a1:	push   edi
  4146a2:	dec    esi
  4146a3:	ret    0xc62
  4146a6:	js     0x41462c
  4146a8:	outs   dx,BYTE PTR ds:[esi]
  4146a9:	mov    al,0xdb
  4146ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ac:	call   0xc52e:0xebf60b41
  4146b3:	in     eax,dx
  4146b4:	aam    0x5
  4146b6:	jo     0x4146e1
  4146b8:	push   es
  4146b9:	lods   al,BYTE PTR ds:[esi]
  4146ba:	dec    ebx
  4146bb:	mov    bh,0x51
  4146bd:	xchg   ebx,eax
  4146be:	stos   BYTE PTR es:[edi],al
  4146bf:	jecxz  0x4146ef
  4146c1:	xor    al,0x4a
  4146c3:	pop    ds
  4146c4:	add    DWORD PTR [eax],0xffffff80
  4146c7:	sub    al,0xa4
  4146c9:	test   bl,dl
  4146cb:	sbb    BYTE PTR [edi+0x2e],ch
  4146ce:	pop    ebx
  4146cf:	shr    edi,1
  4146d1:	adc    esi,ecx
  4146d3:	fdiv   st,st(1)
  4146d5:	stos   BYTE PTR es:[edi],al
  4146d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146d7:	dec    dl
  4146d9:	shl    ebx,1
  4146db:	daa    
  4146dc:	lods   al,BYTE PTR ds:[esi]
  4146dd:	stc    
  4146de:	mov    eax,edx
  4146e0:	pusha  
  4146e1:	inc    ecx
  4146e2:	mov    ah,0x33
  4146e4:	xchg   esp,eax
  4146e5:	clc    
  4146e6:	fst    QWORD PTR [edx+ecx*4]
  4146e9:	inc    ecx
  4146ea:	push   ss
  4146eb:	test   eax,0x2641780
  4146f0:	jno    0x414756
  4146f2:	je     0x41476b
  4146f4:	mov    esi,0xd5ccc368
  4146f9:	pop    ecx
  4146fa:	stc    
  4146fb:	rcr    ah,1
  4146fd:	out    dx,eax
  4146fe:	xchg   BYTE PTR ds:0x18ea0c5b,al
  414704:	aaa    
  414705:	jb     0x414748
  414707:	(bad)  
  414709:	pop    esi
  41470a:	xchg   ebx,eax
  41470b:	or     al,0x60
  41470d:	jp     0x41476c
  41470f:	(bad)  
  414710:	xor    eax,0x7a88e076
  414715:	stos   DWORD PTR es:[edi],eax
  414716:	mov    WORD PTR [eax],ds
  414718:	retf   
  414719:	ss leave 
  41471b:	mov    edi,0xdb175eee
  414720:	mov    bh,0x9e
  414722:	and    eax,0xc45d4ffa
  414727:	xor    al,0x51
  414729:	(bad)  
  41472a:	dec    ecx
  41472b:	fdiv   DWORD PTR [ebx+0x1d]
  41472e:	push   0x62
  414730:	int    0xa5
  414732:	popa   
  414733:	loopne 0x4146d2
  414735:	(bad)  
  414736:	in     eax,dx
  414737:	data16 lahf 
  414739:	lds    ecx,FWORD PTR [esi+edx*1-0x4484f985]
  414740:	inc    ebp
  414741:	pop    ds
  414742:	jns    0x4147c1
  414744:	push   0x1b
  414746:	das    
  414747:	enter  0x61c4,0x4f
  41474b:	jae    0x414713
  41474d:	cld    
  41474e:	cdq    
  41474f:	and    BYTE PTR [edx],0x6f
  414752:	imul   ebx,edi,0x4be06d3b
  414758:	add    dl,BYTE PTR [esi+0x23712d9d]
  41475e:	or     dl,BYTE PTR [ecx+0x8]
  414761:	pop    edx
  414762:	jmp    0x4146f8
  414764:	into   
  414765:	es ret 
  414767:	cmp    BYTE PTR [edi-0x668787b0],cl
  41476d:	sahf   
  41476e:	lds    ebp,FWORD PTR [ebx+0x547b845e]
  414774:	and    dl,0x81
  414777:	sti    
  414778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414779:	mov    edx,0x50272ced
  41477e:	add    dh,BYTE PTR [esi]
  414780:	mov    ch,0x9d
  414782:	pop    edi
  414783:	jns    0x4147fb
  414785:	in     al,0xcd
  414787:	and    al,0x20
  414789:	fcmovbe st,st(4)
  41478b:	jns    0x4147c5
  41478d:	outs   dx,DWORD PTR ds:[esi]
  41478e:	or     al,0x8c
  414790:	fld    DWORD PTR [edx-0x6ab9e600]
  414796:	mov    ah,0x96
  414798:	xchg   esp,edi
  41479a:	mov    ?,WORD PTR [esi]
  41479c:	mov    al,ch
  41479e:	add    dl,BYTE PTR [eax]
  4147a0:	jmp    0xc3ddd37f
  4147a5:	mov    bh,dh
  4147a7:	popa   
  4147a8:	sbb    DWORD PTR [ebx],ebx
  4147aa:	xor    BYTE PTR [ebx+eiz*4-0x33],dh
  4147ae:	push   0x5c
  4147b0:	sbb    bh,ah
  4147b2:	push   eax
  4147b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147b4:	loopne 0x41482d
  4147b6:	ficom  DWORD PTR [eax+edi*8]
  4147b9:	sub    al,0x70
  4147bb:	mov    esi,0xbe324a3a
  4147c0:	mov    esp,edx
  4147c2:	repz loopne 0x4147b2
  4147c5:	out    0x8,eax
  4147c7:	inc    edi
  4147c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c9:	adc    BYTE PTR [ecx-0x679acfdf],dl
  4147cf:	or     bl,BYTE PTR [eax*8-0x6f21b8b]
  4147d6:	mov    esp,0xeee07183
  4147db:	adc    cl,bh
  4147dd:	mov    ch,0x63
  4147df:	sub    al,0xf2
  4147e1:	lea    ebx,[eax+edx*4+0x8efe25b]
  4147e8:	sub    ah,ah
  4147ea:	mov    eax,0x5fd0f9af
  4147ef:	pop    edi
  4147f0:	int    0xff
  4147f2:	stos   BYTE PTR es:[edi],al
  4147f3:	cld    
  4147f4:	sbb    eax,0xa7edd1b9
  4147f9:	and    bh,BYTE PTR [esi]
  4147fb:	adc    al,0x62
  4147fd:	adc    DWORD PTR [esi-0x2191fecf],ebx
  414803:	add    eax,0x3663a322
  414808:	mov    esp,esp
  41480a:	fdiv   DWORD PTR [esp+edx*1]
  41480d:	rol    BYTE PTR [edx],0xc
  414810:	pop    esp
  414811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414812:	int    0x2d
  414814:	lea    edi,[ecx-0x5ad093d9]
  41481a:	jno    0x41483d
  41481c:	ret    0xd5e4
  41481f:	arpl   WORD PTR [esi+0x7e8b87b7],dx
  414825:	push   ebx
  414826:	mov    ah,0xb7
  414828:	scas   al,BYTE PTR es:[edi]
  414829:	mov    ebp,0xe5bf9376
  41482e:	mov    WORD PTR [edx],ds
  414830:	fwait
  414831:	pop    edi
  414832:	pop    edx
  414833:	xlat   BYTE PTR ds:[ebx]
  414834:	nop
  414835:	cdq    
  414836:	scas   al,BYTE PTR es:[edi]
  414837:	fsubr  DWORD PTR [ecx+0x4b]
  41483a:	cli    
  41483b:	inc    edx
  41483c:	push   es
  41483d:	push   0xffffffdb
  41483f:	pop    esp
  414840:	popf   
  414841:	sub    esi,0x99c544dc
  414847:	jo     0x4147f6
  414849:	rcl    DWORD PTR [ecx+edx*8-0x4e],1
  41484d:	imul   ecx,DWORD PTR [eax-0xe],0x2d
  414851:	ss inc ecx
  414853:	ins    BYTE PTR es:[edi],dx
  414854:	scas   al,BYTE PTR es:[edi]
  414855:	call   0xd0c0:0xcd723541
  41485c:	xchg   edx,eax
  41485d:	mov    edx,0x9c74138d
  414862:	pusha  
  414863:	jle    0x414824
  414865:	daa    
  414866:	jmp    0x4148b5
  414868:	fild   QWORD PTR [eax]
  41486a:	mov    esp,0x54f96ece
  41486f:	jnp    0x4148d0
  414871:	xchg   esp,eax
  414872:	sbb    bh,BYTE PTR [edi+0x2e]
  414875:	loop   0x4148d1
  414877:	sbb    al,0x2a
  414879:	enter  0x3d5,0x5e
  41487d:	rcr    DWORD PTR [esi+0x39e57353],1
  414883:	dec    edi
  414884:	adc    DWORD PTR [ebx-0x56],eax
  414887:	push   ds
  414888:	sub    eax,0xd9130bda
  41488d:	cmp    eax,0xc28d1f56
  414892:	and    ch,BYTE PTR [ebx+0x30]
  414895:	loope  0x414875
  414897:	fnstenv [ebx-0x7d]
  41489a:	adc    eax,0x2c251c32
  41489f:	js     0x414864
  4148a1:	cmc    
  4148a2:	jle    0x414899
  4148a4:	adc    eax,0xce6c1c1a
  4148a9:	icebp  
  4148aa:	dec    esi
  4148ab:	outs   dx,BYTE PTR ds:[esi]
  4148ac:	pop    esi
  4148ad:	jmp    0x1894d082
  4148b2:	fs ret 0xe9e6
  4148b6:	cmp    eax,0x5cb7ec9d
  4148bb:	lahf   
  4148bc:	or     bh,dl
  4148be:	rcr    DWORD PTR [ebp-0x195b6660],0x13
  4148c5:	pop    ds
  4148c6:	mov    esi,0xf84b40c2
  4148cb:	sbb    BYTE PTR ds:0xdbcbcabc,bl
  4148d1:	push   eax
  4148d2:	jg     0x41492d
  4148d4:	test   DWORD PTR [ebp-0x4c],edx
  4148d7:	push   edx
  4148d8:	sar    WORD PTR [ebp-0x5a],cl
  4148dc:	pop    es
  4148dd:	jmp    0x414945
  4148df:	lods   eax,DWORD PTR ds:[esi]
  4148e0:	fwait
  4148e1:	cmp    eax,0x8e3d433
  4148e6:	outs   dx,DWORD PTR ds:[esi]
  4148e7:	sub    edx,DWORD PTR [eax-0x79]
  4148ea:	push   ss
  4148eb:	mov    ds:0x4525ea37,al
  4148f0:	pop    eax
  4148f1:	mov    cl,0x92
  4148f3:	adc    ecx,esp
  4148f5:	cld    
  4148f6:	push   eax
  4148f7:	mov    al,ds:0x5c54c537
  4148fc:	es into 
  4148fe:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  414900:	sbb    bh,BYTE PTR [ecx-0x71]
  414903:	pop    ecx
  414904:	loop   0x414910
  414906:	fadd   st(4),st
  414908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414909:	xchg   edi,eax
  41490a:	fsincos 
  41490c:	mov    eax,DWORD PTR [ebp+ebp*4+0x4ac7b200]
  414913:	cmp    DWORD PTR [eax-0x6],ebp
  414916:	add    edi,DWORD PTR [edx+0x7a]
  414919:	pop    esi
  41491a:	icebp  
  41491b:	push   eax
  41491c:	lahf   
  41491d:	mov    ecx,0xb9e8cd01
  414922:	lods   eax,DWORD PTR ds:[esi]
  414923:	in     eax,0xee
  414925:	popa   
  414926:	clc    
  414927:	xor    eax,ebx
  414929:	jmp    0x6eedeb4e
  41492e:	pop    es
  41492f:	and    al,0xa5
  414931:	or     DWORD PTR [ecx-0x77],eax
  414934:	mov    eax,ds:0x7ad1c473
  414939:	into   
  41493a:	imul   edx,edi,0x6b61418f
  414940:	push   edx
  414941:	in     eax,0x8b
  414943:	fs mov cl,0x9a
  414946:	xlat   BYTE PTR ds:[ebx]
  414947:	add    BYTE PTR [ebp-0x5c677882],bl
  41494d:	addr16 xchg esp,eax
  41494f:	pop    es
  414950:	dec    esi
  414951:	ins    DWORD PTR es:[edi],dx
  414952:	gs daa 
  414954:	mov    bl,0x29
  414956:	adc    eax,0x66b76042
  41495b:	cmp    ax,0x5e82
  41495f:	and    DWORD PTR [ebx+0x52],ecx
  414962:	loope  0x41491d
  414964:	test   BYTE PTR [edi],dh
  414966:	jns    0x4148f7
  414968:	hlt    
  414969:	in     al,dx
  41496a:	xchg   esp,eax
  41496b:	and    al,0xd6
  41496d:	inc    esi
  41496e:	pushf  
  41496f:	loop   0x4149e9
  414971:	cdq    
  414972:	mov    edx,0x559ca6c6
  414977:	out    0x29,eax
  414979:	inc    edx
  41497a:	mov    al,ds:0x2aaecbce
  41497f:	retf   
  414980:	mov    ah,0x7c
  414982:	mov    al,0xcc
  414984:	jg     0x414981
  414986:	push   esp
  414987:	lahf   
  414988:	lds    eax,FWORD PTR [eax-0x11]
  41498b:	inc    ecx
  41498c:	or     ah,bl
  41498e:	(bad)  
  41498f:	icebp  
  414990:	sbb    eax,0x67a5a640
  414995:	sub    DWORD PTR [ebx+0x78],edx
  414998:	and    DWORD PTR [eax-0x3693b6fb],ecx
  41499e:	xor    eax,0x1d6380e9
  4149a3:	mov    al,ah
  4149a5:	iret   
  4149a6:	xchg   ebx,eax
  4149a7:	loop   0x4149c0
  4149a9:	rcr    bl,cl
  4149ab:	lods   al,BYTE PTR ds:[esi]
  4149ac:	mov    ah,0x91
  4149ae:	dec    edi
  4149af:	bound  ebx,QWORD PTR [ecx]
  4149b1:	test   bl,dh
  4149b3:	out    dx,eax
  4149b4:	fild   QWORD PTR [ecx]
  4149b6:	ds jl  0x4149b9
  4149b9:	lds    edi,FWORD PTR [ebp-0x4e]
  4149bc:	mov    eax,ds:0xe876f04f
  4149c1:	daa    
  4149c2:	push   ecx
  4149c3:	mov    ah,0xd6
  4149c5:	nop
  4149c6:	mov    esp,esp
  4149c8:	mov    eax,DWORD PTR [edi+0x3f044101]
  4149ce:	add    DWORD PTR [ecx],ecx
  4149d0:	mov    al,0x4e
  4149d2:	aaa    
  4149d3:	cmp    cl,BYTE PTR [esi]
  4149d5:	les    ecx,FWORD PTR [ebp-0x20]
  4149d8:	(bad)  
  4149d9:	cmp    DWORD PTR es:[ecx-0x46],esi
  4149dd:	stos   DWORD PTR es:[edi],eax
  4149de:	dec    ebp
  4149df:	jns    0x414a00
  4149e1:	adc    DWORD PTR [ebx],ebx
  4149e3:	or     dh,BYTE PTR ds:0xcb9baece
  4149e9:	pop    edx
  4149ea:	(bad)  
  4149eb:	fwait
  4149ec:	push   cs
  4149ed:	in     eax,dx
  4149ee:	popa   
  4149ef:	into   
  4149f0:	leave  
  4149f1:	imul   BYTE PTR [ebx-0x38552456]
  4149f7:	scas   eax,DWORD PTR es:[edi]
  4149f8:	scas   eax,DWORD PTR es:[edi]
  4149f9:	cmp    ebx,DWORD PTR [ebp+0x531e903b]
  4149ff:	sbb    eax,0x6bc465a1
  414a04:	push   ebx
  414a05:	pushaw 
  414a07:	hlt    
  414a08:	popa   
  414a09:	and    edx,DWORD PTR [edi+ecx*2-0x31466c1]
  414a10:	cmp    ch,BYTE PTR fs:[ebx-0x40]
  414a14:	or     eax,DWORD PTR [eax-0x2]
  414a17:	nop
  414a18:	jmp    0xa1e3:0xbf1904f5
  414a1f:	xor    ecx,esi
  414a21:	(bad)  
  414a23:	pop    ss
  414a24:	fwait
  414a25:	dec    edx
  414a26:	mov    esi,0xfed7f50e
  414a2b:	mov    ds:0xd9bfceca,eax
  414a30:	add    cl,bh
  414a32:	mov    ebx,0x6859fe06
  414a37:	jecxz  0x414a49
  414a39:	push   0x7a3aca0c
  414a3e:	add    DWORD PTR [eax+0xd428467],esi
  414a44:	push   ds
  414a45:	push   ebx
  414a46:	push   0xbd5107a1
  414a4b:	xchg   edi,eax
  414a4c:	sub    ecx,DWORD PTR [ecx-0x3e]
  414a4f:	inc    edx
  414a50:	enter  0xd97a,0x8b
  414a54:	pop    ecx
  414a55:	push   edi
  414a56:	jne    0x414a70
  414a58:	jl     0x414a47
  414a5a:	popf   
  414a5b:	scas   al,BYTE PTR es:[edi]
  414a5c:	mov    dh,0x67
  414a5e:	lods   eax,DWORD PTR ds:[esi]
  414a5f:	imul   esi,DWORD PTR [edi],0xffffffcd
  414a62:	dec    esi
  414a63:	in     al,0xc4
  414a65:	cli    
  414a66:	jmp    0x414a07
  414a68:	ret    
  414a69:	mov    dl,0x1f
  414a6b:	sahf   
  414a6c:	xchg   ebp,eax
  414a6d:	enter  0x9fd8,0x56
  414a71:	jge    0x414ae9
  414a73:	scas   eax,DWORD PTR es:[edi]
  414a74:	les    ebx,FWORD PTR [ecx-0xdcd1b81]
  414a7a:	jmp    0x51b6edd6
  414a7f:	pop    esi
  414a80:	and    eax,0x6f5caa92
  414a85:	ins    BYTE PTR es:[edi],dx
  414a86:	pop    edi
  414a87:	vmaxss xmm7,xmm5,xmm6
  414a8b:	retf   0xcdbd
  414a8e:	push   edx
  414a8f:	out    dx,al
  414a90:	mov    eax,0x2875cefc
  414a95:	add    edi,DWORD PTR [eax-0x154343c8]
  414a9b:	les    ebx,FWORD PTR [esi-0x2c6ca265]
  414aa1:	mov    ebp,0xa76f43eb
  414aa6:	scas   al,BYTE PTR es:[edi]
  414aa7:	mov    bl,0x18
  414aa9:	cwde   
  414aaa:	ror    DWORD PTR [edi+0x270713e8],0xe0
  414ab1:	sub    eax,0xb6a022fc
  414ab6:	push   edx
  414ab7:	adc    DWORD PTR [eax],esp
  414ab9:	or     BYTE PTR ds:0x9d23e238,0x98
  414ac1:	xchg   BYTE PTR [ebp-0xe],cl
  414ac4:	or     eax,0x1a21ba08
  414ac9:	stos   BYTE PTR es:[di],al
  414acb:	ja     0x414b2a
  414acd:	mov    DWORD PTR [ecx],ecx
  414acf:	jg     0x414a90
  414ad1:	xchg   BYTE PTR [ecx-0x8],ch
  414ad4:	jmp    0x9f08d7bf
  414ad9:	mov    ebp,0xf0bf3425
  414ade:	arpl   WORD PTR [esi+0x6a534c23],di
  414ae4:	jnp    0x414b20
  414ae6:	jnp    0x414aa8
  414ae8:	or     al,0x46
  414aea:	mov    WORD PTR [edi-0x1761101d],fs
  414af0:	cmp    edx,DWORD PTR [ebp+0x50b50ff9]
  414af6:	scas   eax,DWORD PTR es:[edi]
  414af7:	add    al,0x91
  414af9:	(bad)  
  414afa:	add    ecx,DWORD PTR [edi+esi*4]
  414afd:	test   eax,0x74bac6fe
  414b02:	sahf   
  414b03:	lds    eax,FWORD PTR [edx-0x3c039795]
  414b09:	and    al,0x5b
  414b0b:	pop    eax
  414b0c:	pop    edx
  414b0d:	(bad)  
  414b0f:	pop    ebp
  414b10:	push   ebp
  414b11:	xlat   BYTE PTR ds:[ebx]
  414b12:	ficom  DWORD PTR [ecx+0x253dd22f]
  414b18:	leave  
  414b19:	mov    ebp,0x572de4c
  414b1e:	pop    ebp
  414b1f:	imul   edx,DWORD PTR [edx],0xd0be589c
  414b25:	jo     0x414b46
  414b27:	das    
  414b28:	mov    ebp,0x1df4e144
  414b2d:	repz ror BYTE PTR [ebx-0x5864ccef],1
  414b34:	xor    DWORD PTR [edx+0x5d08dcb2],ecx
  414b3a:	inc    ecx
  414b3b:	adc    al,0x83
  414b3d:	ret    
  414b3e:	aas    
  414b3f:	leave  
  414b40:	mov    ebp,0xaadc0909
  414b45:	arpl   WORD PTR ds:0xf26dafbd,bx
  414b4b:	in     al,dx
  414b4c:	fnstsw WORD PTR [edi]
  414b4e:	daa    
  414b4f:	cmp    eax,0xe59b1f55
  414b54:	xor    al,BYTE PTR [esi-0x80]
  414b57:	sbb    eax,0x444b670
  414b5c:	adc    eax,0x4cd64d63
  414b61:	lds    edx,FWORD PTR [ebp-0x556aa4e7]
  414b67:	cmp    bh,BYTE PTR [edi]
  414b69:	push   edx
  414b6a:	mov    ch,0xd5
  414b6c:	sti    
  414b6d:	ja     0x414b95
  414b6f:	push   es
  414b70:	minps  xmm7,XMMWORD PTR [ebp+0x34]
  414b74:	push   es
  414b75:	sbb    ch,bl
  414b77:	sbb    eax,0x41118afd
  414b7c:	sub    al,0x69
  414b7e:	pushf  
  414b7f:	addr16 out dx,eax
  414b81:	mov    dl,0xf8
  414b83:	std    
  414b84:	sti    
  414b85:	mov    dh,0x73
  414b87:	pop    esp
  414b88:	sbb    DWORD PTR [esi+ebp*8+0x1b89ed75],ebp
  414b8f:	inc    esp
  414b90:	inc    esp
  414b91:	data16 int3 
  414b93:	push   0x1b
  414b95:	add    eax,0x231d034b
  414b9a:	fcomp  QWORD PTR [eax+0x428217d4]
  414ba0:	ret    0xa125
  414ba3:	int    0x57
  414ba5:	repz jle 0x414beb
  414ba8:	lock or al,0x20
  414bab:	cdq    
  414bac:	inc    ebx
  414bad:	add    eax,0x4b4452f7
  414bb2:	(bad)  
  414bb4:	xor    BYTE PTR [edi-0x4a],bl
  414bb7:	clc    
  414bb8:	sub    BYTE PTR [edx+esi*2+0x52b13086],bl
  414bbf:	or     BYTE PTR [esi],dh
  414bc1:	mov    ch,0xb7
  414bc3:	push   ss
  414bc4:	jbe    0x414b4c
  414bc6:	bound  edi,QWORD PTR [eax+edx*2]
  414bc9:	and    al,0x65
  414bcb:	call   0x261a:0x18e4b70
  414bd2:	and    ecx,eax
  414bd4:	pop    ecx
  414bd5:	xor    DWORD PTR [ebx],edx
  414bd7:	mov    ah,0x3d
  414bd9:	pop    edx
  414bda:	add    BYTE PTR [edi],al
  414bdc:	stos   BYTE PTR es:[edi],al
  414bdd:	jp     0x414bf0
  414bdf:	jns    0x414c4a
  414be1:	test   BYTE PTR [ebx+0x247281fb],bl
  414be7:	dec    ebp
  414be8:	std    
  414be9:	test   ebx,ebp
  414beb:	in     al,dx
  414bec:	enter  0x7bee,0xe1
  414bf0:	mov    esp,0x24a3646c
  414bf5:	inc    esp
  414bf6:	push   edi
  414bf7:	bound  eax,QWORD PTR [eax+0x7af242ea]
  414bfd:	add    bh,BYTE PTR [esi+esi*4]
  414c00:	dec    eax
  414c01:	iret   
  414c02:	mov    al,0x7d
  414c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c05:	stc    
  414c06:	xor    al,0xf6
  414c08:	repz gs mov esi,0xf995fed1
  414c0f:	mov    eax,ds:0x299abe96
  414c14:	dec    ebx
  414c15:	out    0x9d,eax
  414c17:	and    dh,BYTE PTR [ecx+0x2904e27f]
  414c1d:	jge    0x414c42
  414c1f:	test   DWORD PTR [esi],ecx
  414c21:	push   ds
  414c22:	mov    al,0x29
  414c25:	inc    esp
  414c26:	(bad)  
  414c28:	int    0xb9
  414c2a:	or     eax,0x79140bc9
  414c2f:	and    DWORD PTR [ebp+0x3c8cfec0],edx
  414c35:	cmp    eax,0x5667d266
  414c3a:	stos   BYTE PTR es:[edi],al
  414c3b:	pusha  
  414c3c:	inc    eax
  414c3d:	xlat   BYTE PTR ds:[ebx]
  414c3e:	jns    0x414bca
  414c40:	call   0xf27b:0xaa370107
  414c47:	jle    0x414bde
  414c49:	sbb    al,bh
  414c4b:	ins    BYTE PTR es:[edi],dx
  414c4c:	add    cl,al
  414c4e:	pop    eax
  414c4f:	in     eax,dx
  414c50:	out    0xf9,eax
  414c52:	out    0x50,al
  414c54:	fcom   QWORD PTR [eax-0x17fac5fd]
  414c5a:	icebp  
  414c5b:	xor    al,0x23
  414c5d:	imul   esp,DWORD PTR [edi+0x407133d3],0x46
  414c64:	fs mov bh,0xce
  414c67:	(bad)  
  414c68:	cmp    cl,BYTE PTR [esi+0x52c32d24]
  414c6e:	push   ds
  414c6f:	jg     0x414c06
  414c71:	push   es
  414c72:	jecxz  0x414cf1
  414c74:	mov    ah,0xa6
  414c76:	mov    DWORD PTR [esi+eax*8-0x4a],eax
  414c7a:	lds    ebx,FWORD PTR [edi-0x3eb8daee]
  414c80:	nop
  414c81:	lahf   
  414c82:	adc    DWORD PTR [ebx-0x3e],esi
  414c85:	ret    
  414c86:	mov    bh,0x28
  414c88:	and    al,BYTE PTR [ecx]
  414c8a:	xor    edi,ebx
  414c8c:	dec    eax
  414c8d:	jl     0x414c27
  414c8f:	pop    edx
  414c90:	pop    es
  414c91:	in     eax,dx
  414c92:	lods   al,BYTE PTR ds:[esi]
  414c93:	loope  0x414c15
  414c95:	pop    DWORD PTR [ecx+0x35]
  414c98:	outs   dx,BYTE PTR ds:[esi]
  414c99:	jecxz  0x414cb8
  414c9b:	add    al,0x7e
  414c9d:	push   0xffffff88
  414c9f:	call   0xd93a8ec4
  414ca4:	iret   
  414ca5:	add    edx,DWORD PTR [ecx+0x66933fef]
  414cab:	jle    0x414cf8
  414cad:	out    dx,al
  414cae:	popa   
  414caf:	mov    ecx,eax
  414cb1:	pushf  
  414cb2:	fisub  DWORD PTR [eax-0x1a]
  414cb5:	test   BYTE PTR [edi-0xb],ch
  414cb8:	inc    esp
  414cb9:	mov    eax,0x1114449e
  414cbe:	lds    edx,FWORD PTR [edi+0x744d4c3b]
  414cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cc5:	fmul   DWORD PTR ds:0x5aefdf2
  414ccb:	add    al,0xfd
  414ccd:	std    
  414cce:	and    esp,DWORD PTR [ebx+0x45]
  414cd1:	addr16 in al,0xcc
  414cd4:	jne    0x414c89
  414cd6:	test   DWORD PTR [esi-0x12b86e52],0x9ccf15aa
  414ce0:	es inc esi
  414ce2:	outs   dx,BYTE PTR ds:[esi]
  414ce3:	imul   esp,DWORD PTR [edi+esi*4-0x1a6fa271],0xb2fbf01c
  414cee:	jo     0x414d3b
  414cf0:	enter  0xcfd0,0x63
  414cf4:	sti    
  414cf5:	loope  0x414cb8
  414cf7:	enter  0xf385,0x79
  414cfb:	xlat   BYTE PTR ds:[ebx]
  414cfc:	or     DWORD PTR [ebp-0x78],ebp
  414cff:	cmp    BYTE PTR [edx-0xa3f3d3f],dl
  414d05:	in     al,0x72
  414d07:	cli    
  414d08:	jl     0x414d15
  414d0a:	and    ah,BYTE PTR [edx]
  414d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0d:	xor    BYTE PTR [edx+0x67f81845],dl
  414d13:	outs   dx,BYTE PTR ds:[esi]
  414d14:	push   ss
  414d15:	repz loop 0x414c98
  414d18:	iret   
  414d19:	xchg   DWORD PTR [ecx+0x155a4332],ebp
  414d1f:	sar    BYTE PTR [eax+0x18],0xad
  414d23:	jno    0x414d00
  414d25:	xor    eax,0x9cb5efd2
  414d2a:	out    dx,al
  414d2b:	lahf   
  414d2c:	clc    
  414d2d:	and    BYTE PTR [ebp+0x12e7e3f3],dh
  414d33:	in     eax,0xa6
  414d35:	sti    
  414d36:	cwde   
  414d37:	es xchg ebx,eax
  414d39:	mov    ecx,0xe5a11a3e
  414d3e:	pop    esi
  414d3f:	daa    
  414d40:	push   ss
  414d41:	or     DWORD PTR [bp+di+0x4b],ecx
  414d45:	xor    bh,BYTE PTR [esi]
  414d47:	xor    ah,dl
  414d49:	jmp    0x414cf1
  414d4b:	sbb    eax,0xf0ac7695
  414d50:	add    ah,BYTE PTR [edx-0x2b574aeb]
  414d56:	pop    ebx
  414d57:	sbb    eax,0x8da1b4b8
  414d5c:	cmp    al,0xad
  414d5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d5f:	push   eax
  414d60:	push   DWORD PTR [ebp-0x2e2d2465]
  414d66:	(bad)  
  414d67:	mov    ds:0x989c7dc2,al
  414d6c:	push   eax
  414d6d:	pop    esi
  414d6e:	stos   BYTE PTR es:[edi],al
  414d6f:	enter  0xee97,0x45
  414d73:	dec    ebx
  414d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d75:	pop    eax
  414d76:	push   cs
  414d77:	fld    st(3)
  414d79:	outs   dx,DWORD PTR ds:[esi]
  414d7a:	jmp    0x76b8:0x2ee420e8
  414d81:	fbld   TBYTE PTR [edi+0x31847256]
  414d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d88:	inc    ecx
  414d89:	adc    eax,0x2e260470
  414d8e:	imul   ebx,DWORD PTR [ebx],0x150842e4
  414d94:	mov    esi,0xc2ea6831
  414d99:	hlt    
  414d9a:	mov    bl,0x62
  414d9c:	rcr    BYTE PTR [eax],0x3
  414d9f:	dec    ecx
  414da0:	fisttp QWORD PTR [ebp+0x55]
  414da3:	stc    
  414da4:	mov    ebx,0xf6426ba6
  414da9:	int    0x8d
  414dab:	xor    DWORD PTR ds:0x3674bdd0,edi
  414db1:	and    ch,dl
  414db3:	mov    ebx,DWORD PTR [esp]
  414db6:	xchg   ecx,eax
  414db7:	pop    DWORD PTR [esi]
  414db9:	repz push ebx
  414dbb:	adc    ebp,ebx
  414dbd:	mov    cl,0xa7
  414dbf:	ror    BYTE PTR [esi+0x42e69a0a],0xd0
  414dc6:	mov    esi,esp
  414dc8:	and    edi,edi
  414dca:	sysret 
  414dcc:	mov    al,0x6c
  414dce:	dec    ebx
  414dcf:	sub    BYTE PTR [ecx+0x49],cl
  414dd2:	and    cl,0xee
  414dd5:	add    cl,cl
  414dd7:	aaa    
  414dd8:	adc    esp,DWORD PTR [ecx-0x2215734c]
  414dde:	dec    esi
  414ddf:	(bad)
  414de2:	pop    edx
  414de3:	and    cl,ch
  414de5:	push   edi
  414de6:	jnp    0x414da3
  414de8:	retf   0x38fa
  414deb:	fdivr  st,st(3)
  414ded:	popf   
  414dee:	call   0xb1ac:0x456edc1e
  414df5:	add    edx,DWORD PTR [edx]
  414df7:	and    BYTE PTR [esi+esi*2],al
  414dfa:	not    BYTE PTR [edx+0x342522c0]
  414e00:	sbb    esp,ebx
  414e02:	push   cs
  414e03:	test   eax,0xae754654
  414e08:	add    ch,ch
  414e0a:	mov    bh,0x8a
  414e0c:	rcr    DWORD PTR [edi],0x84
  414e0f:	outs   dx,DWORD PTR ds:[esi]
  414e10:	les    esi,FWORD PTR [ebx]
  414e12:	rcr    BYTE PTR [ecx-0x4f34daad],0x66
  414e19:	dec    ebx
  414e1a:	into   
  414e1b:	loope  0x414e78
  414e1d:	mov    bl,0x11
  414e1f:	or     DWORD PTR [esi+0x3e8a3257],0xdbd1d181
  414e29:	fld    TBYTE PTR [ecx+0x7f]
  414e2c:	adc    al,0x67
  414e2f:	push   0xf
  414e31:	mov    edi,0xd3756b67
  414e36:	shl    DWORD PTR [eax-0x14],cl
  414e39:	imul   BYTE PTR [eax+0x7be99241]
  414e3f:	sbb    al,0x1a
  414e41:	dec    edi
  414e42:	lea    esi,[eax+0x6282f062]
  414e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e49:	(bad)  
  414e4a:	scas   eax,DWORD PTR es:[edi]
  414e4b:	lods   eax,DWORD PTR ds:[esi]
  414e4c:	mov    eax,ds:0x8317ff79
  414e51:	mov    ecx,edx
  414e53:	add    al,BYTE PTR [ebx-0x24]
  414e56:	pmaxsw mm2,QWORD PTR [edi]
  414e59:	or     BYTE PTR [eax+0x639f3e3c],dl
  414e5f:	mov    esp,0xc425de8c
  414e64:	sbb    eax,0xd58f665d
  414e69:	pusha  
  414e6a:	fdiv   DWORD PTR [ebx]
  414e6c:	mov    eax,0xab66c427
  414e71:	adc    cl,BYTE PTR [edx]
  414e73:	xchg   esp,eax
  414e74:	jp     0x414eef
  414e76:	xor    eax,0xe6940c4e
  414e7b:	fsubr  st(7),st
  414e7d:	les    ebx,FWORD PTR [ebp-0x10]
  414e80:	push   0xfffffffc
  414e82:	dec    ebx
  414e83:	vminpd xmm2,xmm0,XMMWORD PTR [ebp+0x59]
  414e88:	dec    ebx
  414e89:	pop    eax
  414e8a:	sbb    DWORD PTR [eax],esp
  414e8c:	xlat   BYTE PTR ds:[ebx]
  414e8d:	loopne 0x414f0b
  414e8f:	shl    DWORD PTR [esi+0x540e5211],cl
  414e95:	fcomp  QWORD PTR [esi+0xad340d5]
  414e9b:	test   BYTE PTR ds:0x31095fc7,bl
  414ea1:	xchg   DWORD PTR [edx],esp
  414ea3:	ret    0xb6c9
  414ea6:	push   ss
  414ea7:	mov    al,BYTE PTR [edx-0x4e]
  414eaa:	mov    al,ds:0xb22d1c62
  414eaf:	dec    esi
  414eb0:	fadd   DWORD PTR [esi]
  414eb2:	addr16 push edi
  414eb4:	repz scas eax,DWORD PTR es:[edi]
  414eb6:	cmp    bh,BYTE PTR [ebx+0xb]
  414eb9:	sub    BYTE PTR [edi+ecx*1],bl
  414ebc:	mov    al,0x9e
  414ebe:	loop   0x414f31
  414ec0:	jne    0x414ec9
  414ec2:	mov    al,cs:0xb488d4b0
  414ec8:	div    BYTE PTR [edx]
  414eca:	imul   ecx,DWORD PTR ds:[esi+0x2e541025],0x77
  414ed2:	fisttp DWORD PTR [eax+0x3c1974d8]
  414ed8:	scas   eax,DWORD PTR es:[edi]
  414ed9:	sbb    DWORD PTR [ebx+0x3b],ebx
  414edc:	icebp  
  414edd:	pop    esp
  414ede:	rol    BYTE PTR [eax],cl
  414ee0:	test   BYTE PTR [esi],al
  414ee2:	scas   eax,DWORD PTR es:[edi]
  414ee3:	les    si,DWORD PTR [ebx]
  414ee6:	xchg   ecx,eax
  414ee7:	push   ss
  414ee8:	cmp    BYTE PTR [ebx-0x78f4484],ah
  414eee:	jle    0x414ea3
  414ef0:	xor    ah,BYTE PTR [eax+0x1132a09e]
  414ef6:	pop    ecx
  414ef7:	push   cs
  414ef8:	jno    0x414f0f
  414efa:	and    ah,BYTE PTR [edi+0x4]
  414efd:	dec    eax
  414efe:	scas   eax,DWORD PTR es:[edi]
  414eff:	shr    BYTE PTR [ecx+0x40f126cc],cl
  414f05:	pop    eax
  414f06:	and    al,0x6c
  414f08:	ins    BYTE PTR es:[edi],dx
  414f09:	ja     0x414f30
  414f0b:	jl     0x414f60
  414f0d:	adc    al,0x80
  414f0f:	retf   0x8c3a
  414f12:	jns    0x414f33
  414f14:	test   cl,bh
  414f16:	nop
  414f17:	je     0x414f6c
  414f19:	scas   al,BYTE PTR es:[edi]
  414f1a:	inc    ecx
  414f1b:	adc    BYTE PTR [ecx-0x71],0x6c
  414f1f:	fidiv  DWORD PTR [esi-0x3fa7fde6]
  414f25:	or     dl,ah
  414f27:	call   0xc55006b7
  414f2c:	sbb    al,0x87
  414f2e:	mov    ds:0xf3228616,eax
  414f33:	mov    dl,0x6f
  414f35:	in     eax,dx
  414f36:	in     eax,0xf
  414f38:	cdq    
  414f39:	mov    cl,0xb4
  414f3b:	test   al,0x39
  414f3d:	cs aam 0x59
  414f40:	sbb    dl,bl
  414f42:	push   edi
  414f43:	inc    ecx
  414f44:	cld    
  414f45:	pop    edi
  414f46:	(bad)  
  414f48:	dec    ebp
  414f49:	(bad)  
  414f4a:	(bad)  
  414f4b:	jnp    0x414f29
  414f4d:	nop
  414f4e:	cdq    
  414f4f:	dec    eax
  414f50:	cmp    DWORD PTR [edi-0x6a],esi
  414f53:	xchg   ecx,eax
  414f54:	lock jns 0x414f9d
  414f57:	fld    DWORD PTR [eax]
  414f59:	jge    0x414f45
  414f5b:	jp     0x414f88
  414f5d:	and    eax,0xf65ddb25
  414f62:	and    eax,0xa526ae2d
  414f67:	jbe    0x414fda
  414f69:	mov    esi,DWORD PTR [ebp+0x3adfa1e3]
  414f6f:	xchg   ebx,eax
  414f70:	xchg   edi,eax
  414f71:	ret    0xc0a4
  414f74:	icebp  
  414f75:	pop    ecx
  414f76:	in     al,0x5f
  414f78:	or     ebx,DWORD PTR [ebx]
  414f7a:	daa    
  414f7b:	push   ebx
  414f7c:	add    BYTE PTR [ebp-0x3c9a135d],ch
  414f82:	lock sbb bl,BYTE PTR [ebp+0x6b]
  414f86:	lds    ebp,FWORD PTR [eax+0x6d]
  414f89:	aaa    
  414f8a:	sub    ah,ch
  414f8c:	push   es
  414f8d:	(bad)  
  414f8e:	stos   BYTE PTR es:[edi],al
  414f8f:	leave  
  414f90:	mov    ds:0x1d82ffc2,al
  414f95:	xor    ebp,DWORD PTR [ebp-0x34feecdd]
  414f9b:	xor    BYTE PTR [edx],bh
  414f9d:	outs   dx,DWORD PTR ds:[esi]
  414f9e:	aaa    
  414f9f:	pop    esp
  414fa0:	(bad)  
  414fa1:	xlat   BYTE PTR ds:[ebx]
  414fa2:	js     0x414f47
  414fa4:	sub    DWORD PTR [edi],0xffffffc4
  414fa7:	popf   
  414fa8:	lock mov ebx,0xca3b8b8
  414fae:	mov    ecx,0xb26ee5ce
  414fb3:	sbb    eax,0x2004b6c2
  414fb8:	mov    ah,0xad
  414fba:	aaa    
  414fbb:	jge    0x414fb5
  414fbd:	mov    eax,0x55e7cf31
  414fc2:	sub    al,0x5a
  414fc4:	repnz icebp 
  414fc6:	push   edi
  414fc7:	(bad)  cs:[ecx-0x41]
  414fcb:	push   ecx
  414fcc:	push   ds
  414fcd:	xchg   esp,eax
  414fce:	fwait
  414fcf:	pop    esp
  414fd0:	mov    ebx,0x8e516dc4
  414fd5:	dec    esp
  414fd6:	jno    0x414ffb
  414fd8:	aaa    
  414fd9:	ret    
  414fda:	dec    eax
  414fdb:	sbb    DWORD PTR [bp+si-0x53],esp
  414fdf:	mov    ch,0xea
  414fe1:	add    cl,al
  414fe3:	dec    ebp
  414fe4:	test   eax,0x7ce56f8f
  414fe9:	aam    0x99
  414feb:	mov    esi,0x763a714a
  414ff0:	(bad)  
  414ff1:	cmp    ecx,DWORD PTR [ebp+0x73]
  414ff4:	cmp    bh,bh
  414ff6:	out    0x90,eax
  414ff8:	and    bh,BYTE PTR [edi]
  414ffa:	push   esp
  414ffb:	inc    ebp
  414ffc:	mov    DWORD PTR [edi],ebp
  414ffe:	and    al,0xac
  415000:	ds and ebx,ebp
  415003:	fld    st(4)
  415005:	fucomip st,st(4)
  415007:	add    eax,0x935b744
  41500c:	cmc    
  41500d:	out    dx,eax
  41500e:	leave  
  41500f:	ins    DWORD PTR es:[edi],dx
  415010:	sar    DWORD PTR [ebx-0xe],1
  415013:	push   ecx
  415014:	jns    0x414fc1
  415016:	(bad)  [edi]
  415018:	lahf   
  415019:	jne    0x415033
  41501b:	test   BYTE PTR ds:0x5ef080c,cl
  415021:	ror    dl,0x66
  415024:	aam    0x27
  415026:	jl     0x414fd1
  415028:	retf   0x3707
  41502b:	sbb    BYTE PTR [ebx-0x589121f],bl
  415031:	rcr    DWORD PTR [edi-0xa8ba559],1
  415037:	mov    dl,0x96
  415039:	das    
  41503a:	pop    ebx
  41503b:	adc    DWORD PTR [esi],esp
  41503d:	loopne 0x415015
  41503f:	sub    eax,0x7ce342bd
  415044:	popa   
  415045:	xchg   ebp,eax
  415046:	sti    
  415047:	push   0x38
  415049:	adc    dl,dh
  41504b:	nop
  41504c:	mov    edx,0x2d9a1e8c
  415051:	(bad)  
  415052:	sahf   
  415053:	outs   dx,BYTE PTR ds:[esi]
  415054:	cli    
  415055:	cwde   
  415056:	pmaxub mm6,QWORD PTR [eax]
  415059:	dec    esp
  41505a:	sti    
  41505b:	aam    0xc9
  41505d:	or     al,BYTE PTR [esi]
  41505f:	inc    edx
  415060:	cmp    al,0x50
  415062:	cmp    cl,bl
  415064:	inc    esi
  415065:	or     esi,DWORD PTR [ecx+0x59]
  415068:	lahf   
  415069:	or     edx,DWORD PTR [edi+ebp*8-0x4e]
  41506d:	iret   
  41506e:	mov    ecx,0xb7067420
  415073:	mov    WORD PTR [esi-0x6b9441aa],es
  415079:	dec    edx
  41507a:	add    al,0x57
  41507c:	inc    edx
  41507d:	or     eax,0xd073b0c3
  415082:	mov    al,ds:0x4fecdbf6
  415087:	test   BYTE PTR [ebx+0x34],0x25
  41508b:	mov    eax,fs
  41508d:	(bad)  
  41508f:	scas   eax,DWORD PTR es:[edi]
  415090:	adc    DWORD PTR [ebx-0xe],ebx
  415093:	sub    bh,bh
  415095:	sub    ebx,DWORD PTR ds:0x4346aa9
  41509b:	ret    0x2bfa
  41509e:	hlt    
  41509f:	fistp  DWORD PTR [ecx]
  4150a1:	test   al,ah
  4150a3:	pop    ss
  4150a4:	das    
  4150a5:	jle    0x41503a
  4150a7:	mov    al,0x56
  4150a9:	lea    esi,[edx+0x6a]
  4150ac:	sub    eax,0x4ad1f8e5
  4150b1:	mov    DWORD PTR [ecx+0x78371e59],eax
  4150b7:	jb     0x415092
  4150b9:	test   BYTE PTR [ebp-0x64],ch
  4150bc:	dec    edx
  4150bd:	or     DWORD PTR [esp+eax*8],ebp
  4150c0:	sub    eax,0x3c12cf59
  4150c5:	sub    dh,BYTE PTR [ebp-0x6d78308a]
  4150cb:	push   ebx
  4150cc:	xor    ah,bl
  4150ce:	ret    
  4150cf:	xchg   ecx,eax
  4150d0:	imul   eax,DWORD PTR [edx+eiz*8+0x151779b0],0x990b75e5
  4150db:	pop    esi
  4150dc:	jbe    0x41510e
  4150de:	inc    edi
  4150df:	loop   0x415089
  4150e1:	cmp    bl,BYTE PTR [edx+0x36]
  4150e4:	add    dh,BYTE PTR [esi]
  4150e6:	mov    ch,0xa6
  4150e8:	mov    al,0x71
  4150ea:	scas   al,BYTE PTR es:[edi]
  4150eb:	jb     0x4150aa
  4150ed:	or     eax,0xd50ea973
  4150f2:	daa    
  4150f3:	push   DWORD PTR [eax]
  4150f5:	mov    dh,0xd3
  4150f7:	cwde   
  4150f8:	sub    esp,DWORD PTR ds:0x1524b0c5
  4150fe:	icebp  
  4150ff:	cli    
  415100:	into   
  415101:	popa   
  415102:	inc    esi
  415103:	loope  0x415112
  415105:	arpl   WORD PTR [edx+0x48d7361a],cx
  41510b:	ja     0x415119
  41510d:	pop    eax
  41510e:	das    
  41510f:	fimul  WORD PTR [edi+0x52]
  415112:	jne    0x4150a2
  415114:	lods   eax,DWORD PTR ds:[esi]
  415115:	cmp    DWORD PTR [ebp+0x6c],eax
  415118:	dec    esi
  415119:	add    dh,BYTE PTR [ebp-0x4933abca]
  41511f:	push   ebx
  415120:	sub    BYTE PTR [ecx-0x7f],dh
  415123:	dec    edx
  415124:	jmp    0x4a7481db
  415129:	jl     0x4150d3
  41512b:	dec    edi
  41512c:	sub    dh,al
  41512e:	sbb    eax,edx
  415130:	rol    cl,1
  415132:	adc    dl,BYTE PTR [ebx+eiz*2]
  415135:	pop    ecx
  415136:	push   cs
  415137:	xchg   DWORD PTR [ecx+0x70],esi
  41513a:	mov    ch,0x11
  41513c:	xor    eax,0x442a465c
  415141:	int    0x98
  415143:	loope  0x41511f
  415145:	mov    ebx,0xf1f9c836
  41514a:	pushf  
  41514b:	jo     0x4151b4
  41514d:	loop   0x4150f8
  41514f:	push   es
  415150:	xor    BYTE PTR [ebx-0x7f1ff682],dh
  415156:	or     ah,BYTE PTR [ecx+0x51]
  415159:	shl    DWORD PTR [eax-0x7b],1
  41515c:	mov    al,0x44
  41515e:	jnp    0x4151aa
  415160:	aas    
  415161:	sub    ch,BYTE PTR [esi-0x66850d24]
  415167:	and    DWORD PTR [edi+0x4a],esp
  41516a:	pop    ebx
  41516b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41516c:	sub    eax,DWORD PTR [edi]
  41516e:	sbb    BYTE PTR ds:[eax],0xfc
  415172:	pop    ds
  415173:	and    cl,BYTE PTR [edx]
  415175:	and    esi,edi
  415177:	pop    esp
  415178:	scas   eax,DWORD PTR es:[edi]
  415179:	iret   
  41517a:	sbb    ah,bl
  41517c:	aaa    
  41517d:	ret    0xd2a3
  415180:	stos   DWORD PTR es:[edi],eax
  415181:	xchg   edx,eax
  415182:	in     eax,0x50
  415184:	sar    BYTE PTR [ebp+0x6f45bb05],0x79
  41518b:	fcom   QWORD PTR [eax+0x5522ab4b]
  415191:	nop
  415192:	adc    dl,ch
  415194:	pop    ss
  415195:	dec    ebp
  415196:	mov    dl,BYTE PTR [ebp+edx*4-0x30]
  41519a:	dec    esp
  41519b:	shr    DWORD PTR [eax+0x7edcaa50],cl
  4151a1:	jmp    0x6265f713
  4151a6:	mov    eax,ds:0xcb73868a
  4151ab:	or     cl,dh
  4151ad:	lock (bad) 
  4151af:	mov    ds:0x291bf30e,al
  4151b4:	je     0x415211
  4151b6:	jae    0x4151f0
  4151b8:	or     bh,cl
  4151ba:	out    dx,al
  4151bb:	jg     0x41513e
  4151bd:	dec    ebp
  4151be:	xor    DWORD PTR [esi+0x2013c055],ebx
  4151c4:	push   edi
  4151c5:	sub    bl,BYTE PTR [edi-0x54]
  4151c8:	cli    
  4151c9:	rcr    dl,0xfd
  4151cc:	fild   DWORD PTR [esi]
  4151ce:	stc    
  4151cf:	cld    
  4151d0:	imul   ebx,DWORD PTR [bp+di-0x3b32],0xd0870850
  4151d9:	adc    DWORD PTR [edi],0xd47153a3
  4151df:	mov    esi,0x96f2f6b
  4151e4:	cmc    
  4151e5:	popf   
  4151e6:	xor    eax,0x7f13523c
  4151eb:	shl    DWORD PTR [edx],cl
  4151ed:	(bad)  
  4151ee:	xchg   ebx,eax
  4151ef:	sbb    al,0x8f
  4151f1:	jge    0xfa46e596
  4151f7:	in     eax,0x21
  4151f9:	jbe    0x415191
  4151fb:	push   es
  4151fc:	sar    bl,0x5
  4151ff:	mov    DWORD PTR [eax],eax
  415201:	jp     0x415232
  415203:	mov    ds,WORD PTR [ecx+ecx*2-0x7ade023a]
  41520a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520b:	bound  ebp,QWORD PTR [esi]
  41520d:	xchg   ebx,eax
  41520e:	adc    BYTE PTR [esi-0x79dab607],0x14
  415215:	sub    eax,0x417f7454
  41521a:	daa    
  41521b:	loope  0x4151b8
  41521d:	push   ds
  41521e:	repz inc esp
  415220:	pushf  
  415221:	mov    ebp,0x5bc459e1
  415226:	sbb    eax,0x546043dc
  41522b:	cmp    BYTE PTR fs:[ebp-0x42],al
  41522f:	inc    edx
  415230:	jo     0x4151c2
  415232:	xor    ecx,DWORD PTR [edi-0x31]
  415235:	out    0xd7,eax
  415237:	stos   BYTE PTR es:[edi],al
  415238:	xchg   dh,ch
  41523a:	push   DWORD PTR [eax+0x3a]
  41523d:	xor    edx,edx
  41523f:	push   cs
  415240:	and    DWORD PTR [ebp+0xc],ecx
  415243:	pop    ds
  415244:	mov    ebp,0x1e003303
  415249:	pop    ds
  41524a:	or     cl,BYTE PTR [ebx+0x3c]
  41524d:	call   0x734d:0x98ddc87c
  415254:	and    eax,0xaab1cc71
  415259:	imul   esi,DWORD PTR [edx-0x2],0x766634af
  415260:	sub    al,0x93
  415262:	sbb    ebp,DWORD PTR [ebp+0x720845e5]
  415268:	adc    ebp,eax
  41526a:	je     0x4152a9
  41526c:	test   eax,0xda7be6e5
  415271:	mov    ecx,0xf026cbc9
  415276:	(bad)  [ebp+0x30]
  415279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41527a:	and    BYTE PTR [ebp+edx*8-0x2b],bh
  41527e:	fidivr DWORD PTR [edi-0x59]
  415281:	aas    
  415282:	repz out 0xf,eax
  415285:	or     eax,ecx
  415287:	mov    edx,0xa99a991d
  41528c:	nop
  41528d:	dec    ecx
  41528e:	xchg   edx,esp
  415290:	ins    BYTE PTR es:[edi],dx
  415291:	int    0xdf
  415293:	jnp    0x4152e9
  415295:	cmp    eax,0x29bcd8ea
  41529a:	retf   
  41529b:	push   es
  41529c:	out    0xae,eax
  41529e:	mov    BYTE PTR [ebx-0x74],bl
  4152a1:	ja     0x4152c1
  4152a3:	inc    esp
  4152a4:	aas    
  4152a5:	add    eax,0xefb7a418
  4152aa:	adc    dl,BYTE PTR ds:0x91e3bac9
  4152b0:	lock (bad) 
  4152b2:	push   edx
  4152b3:	fdivr  QWORD PTR [esi-0x40effdea]
  4152b9:	sub    bh,BYTE PTR [ecx-0x9bb6040]
  4152bf:	or     ecx,DWORD PTR [edx-0x66]
  4152c2:	adc    DWORD PTR [edx-0x5e],ecx
  4152c5:	cmp    eax,DWORD PTR [ebx+esi*8]
  4152c8:	add    DWORD PTR [ebx+0x44bcc790],esp
  4152ce:	cs lahf 
  4152d0:	stos   DWORD PTR es:[edi],eax
  4152d1:	push   es
  4152d2:	(bad)  
  4152d4:	es lahf 
  4152d6:	inc    ecx
  4152d7:	xchg   dx,ax
  4152d9:	bound  edx,QWORD PTR [edx-0x43431ed7]
  4152df:	and    ch,cl
  4152e1:	fld    st(3)
  4152e3:	jmp    0x95a4:0x38856d53
  4152ea:	aam    0x3b
  4152ec:	(bad)  
  4152ed:	pop    edi
  4152ee:	mov    ebp,0xada95d67
  4152f3:	push   es
  4152f4:	repz loope 0x41535a
  4152f7:	or     ecx,eax
  4152f9:	aad    0x23
  4152fb:	fmul   DWORD PTR [edx+eiz*2]
  4152fe:	ret    0xd05a
  415301:	shl    DWORD PTR [eax],0x94
  415304:	fucomip st,st(1)
  415306:	arpl   WORD PTR ds:0xcafc9e4a,cx
  41530c:	mov    ebp,DWORD PTR [ecx+0x38]
  41530f:	push   ebx
  415310:	or     esp,DWORD PTR [edx-0x21799e57]
  415316:	push   esi
  415317:	xor    bl,BYTE PTR [ebx]
  415319:	mov    bh,0x1c
  41531b:	loop   0x415324
  41531d:	ins    BYTE PTR es:[edi],dx
  41531e:	add    bh,BYTE PTR ds:0xfd7168d6
  415324:	pop    ebp
  415325:	add    al,0x35
  415327:	and    eax,0x47643fdd
  41532c:	push   ds
  41532d:	dec    ebp
  41532e:	sar    DWORD PTR [esi-0x7e60f1d7],0x4d
  415335:	les    ebp,FWORD PTR ds:0x62f4a500
  41533b:	(bad)  
  41533c:	les    esp,FWORD PTR [ecx]
  41533e:	push   edi
  41533f:	cmp    DWORD PTR ds:0xd4f4b8b8,edx
  415345:	or     ebx,DWORD PTR [eax-0x25]
  415348:	shr    DWORD PTR [ebp-0x31c587b8],1
  41534e:	aas    
  41534f:	add    eax,0xee8eeded
  415354:	rol    cl,cl
  415356:	scas   al,BYTE PTR es:[edi]
  415357:	scas   eax,DWORD PTR es:[edi]
  415358:	inc    esp
  415359:	(bad)  
  41535a:	push   esp
  41535b:	(bad)  
  41535d:	cli    
  41535e:	mov    esp,0x79c14cf0
  415363:	imul   DWORD PTR [esi-0x4608a959]
  415369:	adc    edx,DWORD PTR [ebx-0x24]
  41536c:	ja     0x41538f
  41536e:	dec    esp
  41536f:	mov    ch,0x39
  415371:	scas   al,BYTE PTR es:[edi]
  415372:	(bad)  
  415373:	bound  ebp,QWORD PTR [edi+0x33ec4f73]
  415379:	mov    ds:0x810695d7,eax
  41537e:	sub    DWORD PTR [eax+0x6d],ebp
  415381:	mov    al,0xf7
  415383:	jmp    0x415353
  415385:	retf   
  415386:	inc    esp
  415387:	iret   
  415388:	out    0x9,eax
  41538a:	xlat   BYTE PTR ds:[ebx]
  41538b:	cmp    esi,edi
  41538d:	ds jae 0x415316
  415390:	mov    bl,BYTE PTR [edi]
  415392:	imul   edi
  415394:	sbb    ax,0x3bc1
  415398:	inc    edx
  415399:	leave  
  41539a:	outs   dx,DWORD PTR ds:[esi]
  41539b:	in     eax,0x2
  41539d:	jbe    0x415416
  41539f:	out    dx,eax
  4153a0:	lahf   
  4153a1:	xchg   DWORD PTR [ebx],ecx
  4153a3:	test   bh,cl
  4153a5:	push   es
  4153a6:	adc    dl,dh
  4153a8:	xchg   esi,eax
  4153a9:	sar    DWORD PTR [eax-0x68],1
  4153ac:	sub    ch,bl
  4153ae:	jns    0x4153a0
  4153b0:	mov    edi,0xc8ff63cb
  4153b5:	jae    0x415380
  4153b7:	or     esi,edi
  4153b9:	shr    BYTE PTR [ebp+edx*2+0x50],0x7b
  4153be:	push   cs
  4153bf:	(bad)  
  4153c0:	cmp    al,0xa9
  4153c2:	ds push esp
  4153c4:	mov    esi,0xd56622f2
  4153c9:	pop    ds
  4153ca:	cld    
  4153cb:	pop    esi
  4153cc:	les    esi,FWORD PTR [esi-0x2b952880]
  4153d2:	mov    BYTE PTR [ebx-0xf3367fb],cl
  4153d8:	sar    DWORD PTR [edi-0xd],1
  4153db:	fadd   DWORD PTR [esi-0x5d98994d]
  4153e1:	add    bh,al
  4153e3:	std    
  4153e4:	(bad)  
  4153e5:	retf   0xa481
  4153e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153e9:	jbe    0x4153fe
  4153eb:	push   ds
  4153ec:	mov    edi,0x3c01bd7d
  4153f1:	cmp    BYTE PTR [ebp+0x1a],bh
  4153f4:	je     0x415430
  4153f6:	inc    ebp
  4153f7:	sub    DWORD PTR [ebp+0x742a4c6f],edx
  4153fd:	lods   al,BYTE PTR ds:[esi]
  4153fe:	or     DWORD PTR [eax+0x241f1ecf],edx
  415404:	mov    ebp,0x2ae4abff
  415409:	sar    BYTE PTR [edi-0x41],0x41
  41540d:	mov    ds:0x4a8e0ad,eax
  415412:	or     eax,0xf910a608
  415417:	sbb    DWORD PTR [esi+ebx*4-0x6ed5cfd0],0x607259e0
  415422:	cld    
  415423:	xchg   ecx,eax
  415424:	stc    
  415425:	add    edx,DWORD PTR [edi]
  415427:	cmp    eax,0x529e1536
  41542c:	and    dl,0x9c
  41542f:	xchg   ebx,eax
  415430:	mov    esp,0x417c249b
  415435:	lods   eax,DWORD PTR ds:[esi]
  415436:	shl    BYTE PTR [edi+0x254f5135],cl
  41543c:	cwde   
  41543d:	cdq    
  41543e:	xor    bl,BYTE PTR [esi]
  415440:	mov    cl,0x5c
  415442:	daa    
  415443:	and    BYTE PTR [edi+0x4c],0xd9
  415447:	and    ah,ah
  415449:	mov    esi,0x64026297
  41544e:	cmp    BYTE PTR [ebp+0x7c],dh
  415451:	ret    
  415452:	hlt    
  415453:	cmp    al,0xdb
  415455:	daa    
  415456:	pop    ds
  415457:	iret   
  415458:	push   esp
  415459:	popa   
  41545a:	xchg   ebp,eax
  41545b:	inc    edx
  41545c:	pop    ds
  41545d:	loopne 0x415433
  41545f:	test   DWORD PTR [edi+0x36],eax
  415462:	aad    0x72
  415464:	mov    esp,0xc4bea608
  415469:	xor    BYTE PTR [edi],ah
  41546b:	stc    
  41546c:	adc    eax,0x974dc4f
  415471:	cmp    esp,edi
  415473:	bound  edx,QWORD PTR [esi-0x43]
  415476:	dec    ebp
  415477:	sbb    al,0x42
  415479:	not    DWORD PTR [edi-0x6bbbd27c]
  41547f:	jecxz  0x41548d
  415481:	push   0x6149d244
  415486:	push   es
  415487:	fdiv   QWORD PTR [edx-0x34f3129]
  41548d:	icebp  
  41548e:	mov    eax,0xab2912cc
  415493:	inc    edx
  415494:	push   ebp
  415495:	push   es
  415496:	fwait
  415497:	sti    
  415498:	inc    edi
  415499:	sub    ebx,DWORD PTR [eax]
  41549b:	add    bh,BYTE PTR [ebx]
  41549d:	or     ch,cl
  41549f:	xchg   bh,ah
  4154a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a2:	and    ebx,DWORD PTR [edx+0x7204fd69]
  4154a8:	ja     0x415486
  4154aa:	ins    BYTE PTR es:[edi],dx
  4154ab:	sbb    esp,DWORD PTR [esi]
  4154ad:	ret    
  4154ae:	jno    0x4154ee
  4154b0:	dec    edi
  4154b1:	xchg   esi,eax
  4154b2:	test   BYTE PTR [edx+eax*4+0x5d],ch
  4154b6:	push   esi
  4154b7:	xchg   ecx,eax
  4154b8:	jl     0x415489
  4154ba:	sbb    WORD PTR [eax],di
  4154bd:	in     al,dx
  4154be:	pop    edi
  4154bf:	sbb    esp,DWORD PTR [ebx+0xa]
  4154c2:	cmp    DWORD PTR [edi+0xe],esi
  4154c5:	mov    ebp,0xaf9953a1
  4154ca:	stos   BYTE PTR es:[edi],al
  4154cb:	xor    al,0xd8
  4154cd:	jecxz  0x4154fd
  4154cf:	scas   eax,DWORD PTR es:[edi]
  4154d0:	lods   eax,DWORD PTR ds:[esi]
  4154d1:	loop   0x41546d
  4154d3:	jl     0x415525
  4154d5:	pop    ecx
  4154d6:	in     eax,dx
  4154d7:	sub    ah,ch
  4154d9:	into   
  4154da:	cmc    
  4154db:	cmp    eax,0x66572c70
  4154e0:	aam    0xc5
  4154e2:	pop    eax
  4154e3:	inc    edx
  4154e4:	in     eax,0x3b
  4154e6:	pop    ds
  4154e7:	xor    eax,0x8a2b3141
  4154ec:	xchg   esi,eax
  4154ed:	ins    BYTE PTR es:[edi],dx
  4154ee:	int    0x99
  4154f0:	call   0xc2cf:0xb5d929e
  4154f7:	mov    dl,0xf7
  4154f9:	mov    BYTE PTR cs:[esp+ebx*1-0x19edc7a],dh
  415501:	adc    dl,ch
  415503:	push   ebx
  415504:	cmp    ah,BYTE PTR [edx]
  415506:	popa   
  415507:	sbb    eax,0x173cf093
  41550c:	sub    ecx,DWORD PTR [ebp+0x39910f11]
  415512:	push   ebp
  415513:	fsubr  QWORD PTR [ebx-0x3d]
  415516:	sub    dh,al
  415518:	pop    edx
  415519:	jl     0x415500
  41551b:	sti    
  41551c:	(bad)
  41551f:	fs pop edx
  415521:	lods   al,BYTE PTR ds:[esi]
  415522:	fsub   DWORD PTR [ebx-0xf]
  415525:	sbb    cl,BYTE PTR ds:0x6ee79116
  41552b:	sahf   
  41552c:	jmp    0x314b:0xa8fd2379
  415533:	push   ebp
  415534:	stc    
  415535:	stos   BYTE PTR es:[edi],al
  415536:	xchg   esp,eax
  415537:	xor    BYTE PTR [ebx-0x35],dh
  41553a:	mov    ds:0xc8768529,eax
  41553f:	in     al,0x20
  415541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415542:	inc    ebp
  415543:	out    dx,al
  415544:	mov    esi,0x73bad5e3
  415549:	imul   ecx,DWORD PTR [edx],0xe
  41554c:	fistp  QWORD PTR [ebx]
  41554e:	xor    ch,BYTE PTR [ebp-0xc10bd0]
  415554:	rol    BYTE PTR [esi],1
  415556:	mov    bh,0x15
  415558:	es inc esp
  41555a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41555b:	push   esp
  41555c:	xchg   esp,esi
  41555e:	xchg   DWORD PTR [esi],ebx
  415560:	dec    esp
  415561:	pop    eax
  415562:	fdivr  DWORD PTR [esi]
  415564:	sbb    dl,BYTE PTR [edi+0x3d]
  415567:	call   0xe41dab9f
  41556c:	sbb    eax,0xc4683aec
  415571:	adc    bh,BYTE PTR [si+0x7e]
  415575:	push   ecx
  415576:	and    bh,BYTE PTR [eax-0x39dbbc73]
  41557c:	pop    ecx
  41557d:	or     edx,edi
  41557f:	inc    eax
  415580:	hlt    
  415581:	mov    edx,0xbcf9e684
  415586:	out    0x9d,eax
  415588:	in     eax,dx
  415589:	ja     0x41551f
  41558b:	or     DWORD PTR [ebp-0x5b],eax
  41558e:	sahf   
  41558f:	pop    eax
  415590:	xchg   ebx,eax
  415591:	inc    ebx
  415592:	mov    ecx,0xb38a7ec5
  415597:	ins    DWORD PTR es:[edi],dx
  415598:	xor    eax,0x3f0e5a07
  41559d:	mov    eax,0xb8752e18
  4155a2:	inc    edx
  4155a3:	(bad)  
  4155a4:	rol    ebp,cl
  4155a6:	(bad)  
  4155a7:	(bad)  
  4155a8:	dec    ecx
  4155a9:	sar    BYTE PTR [edx+0x794dddbd],cl
  4155af:	or     eax,0x8df2d255
  4155b4:	shl    BYTE PTR [edx+0x72],1
  4155b7:	into   
  4155b8:	cli    
  4155b9:	mov    esp,0x7c270734
  4155be:	push   ecx
  4155bf:	mov    eax,DWORD PTR ds:0x727c2385
  4155c5:	outs   dx,DWORD PTR ds:[esi]
  4155c6:	dec    esi
  4155c7:	or     DWORD PTR [eax],0x51792e60
  4155cd:	push   es
  4155ce:	add    cl,BYTE PTR [eax-0x2543bcfa]
  4155d4:	fild   DWORD PTR [ebx-0x4c80cabd]
  4155da:	adc    al,bl
  4155dc:	in     al,dx
  4155dd:	cmp    DWORD PTR [esp+ebp*1],0x5b
  4155e1:	test   eax,0xe0e838ff
  4155e6:	aas    
  4155e7:	push   0xffffff9e
  4155e9:	stc    
  4155ea:	pop    edx
  4155eb:	xchg   ebx,eax
  4155ec:	fs adc ebx,ebp
  4155ef:	xchg   edi,eax
  4155f0:	pop    ebp
  4155f1:	jmp    0x415606
  4155f3:	in     eax,0x4
  4155f5:	adc    eax,0x64c970c2
  4155fa:	mov    ds:0xc5230bac,eax
  4155ff:	push   ecx
  415600:	xchg   BYTE PTR [ecx+eax*1],dl
  415603:	jo     0x4155fc
  415605:	in     al,dx
  415606:	ins    BYTE PTR es:[edi],dx
  415607:	stc    
  415608:	cwde   
  415609:	fs loope 0x415594
  41560c:	fdivr  DWORD PTR [edi-0x1f]
  41560f:	push   esi
  415610:	xor    al,0x86
  415612:	and    al,0x2c
  415614:	pop    esp
  415615:	sbb    DWORD PTR [ecx+0x23],eax
  415618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415619:	push   edi
  41561a:	cmp    eax,0xdbfcb0ac
  41561f:	pop    eax
  415620:	out    dx,eax
  415621:	sbb    cl,cl
  415623:	fadd   QWORD PTR [ebp-0x31]
  415626:	in     al,0x28
  415628:	fadd   st,st(5)
  41562a:	ror    BYTE PTR es:[edx],cl
  41562d:	mov    esp,0xa6cad6c6
  415632:	into   
  415633:	out    0x7b,eax
  415635:	pop    esi
  415636:	jo     0x4155f7
  415638:	pop    eax
  415639:	ror    edi,0x35
  41563c:	shl    ebx,1
  41563e:	lds    edi,FWORD PTR [eax-0x703b000]
  415644:	imul   ecx,esp,0x3b
  415647:	test   DWORD PTR [esi+0x67afbac9],ebp
  41564d:	cmp    al,0xd4
  41564f:	ret    0xcf30
  415652:	pop    ecx
  415653:	lods   eax,DWORD PTR ds:[esi]
  415654:	in     eax,dx
  415655:	jb     0x41566f
  415657:	mov    DWORD PTR [edx+0x71],edi
  41565a:	test   eax,0x30c7de99
  41565f:	lods   eax,DWORD PTR ds:[esi]
  415660:	mov    esp,DWORD PTR [ebx]
  415662:	sub    cl,0xc5
  415665:	daa    
  415666:	int3   
  415667:	jae    0x415678
  415669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41566a:	stos   BYTE PTR es:[edi],al
  41566b:	das    
  41566c:	sub    bh,BYTE PTR [eax+0x3cfd38af]
  415672:	dec    edi
  415673:	push   ecx
  415674:	adc    cl,dl
  415676:	push   ds
  415677:	fsubr  QWORD PTR [edi]
  415679:	rcr    BYTE PTR [edx+0x1d],0xb0
  41567d:	shr    DWORD PTR [edi-0x53],1
  415680:	inc    edi
  415681:	mov    ecx,0x2afaa22c
  415686:	mov    ch,0xfa
  415688:	imul   eax,DWORD PTR [eax+0x5b],0xffffffc3
  41568c:	and    eax,0x13c7202a
  415691:	cmp    ecx,eax
  415693:	jo     0x4156ff
  415695:	std    
  415696:	mov    cl,0x20
  415698:	in     eax,dx
  415699:	ins    BYTE PTR es:[edi],dx
  41569a:	fwait
  41569b:	sub    DWORD PTR [ebx-0x673c10d4],ebp
  4156a1:	push   ebx
  4156a2:	mov    ch,0x7
  4156a4:	push   ebx
  4156a5:	fstp   QWORD PTR [eax-0x3f35cd2b]
  4156ab:	mov    esp,0xf93d30e
  4156b0:	stc    
  4156b1:	xchg   edi,eax
  4156b2:	fwait
  4156b3:	(bad)  
  4156b5:	push   ecx
  4156b6:	and    ch,BYTE PTR [edi-0x55334112]
  4156bc:	outs   dx,DWORD PTR ds:[esi]
  4156bd:	call   0x6b41e5ec
  4156c2:	push   edx
  4156c3:	cli    
  4156c4:	jp     0x4156f6
  4156c6:	bound  edi,QWORD PTR [ebp-0x54]
  4156c9:	mov    cl,bh
  4156cb:	enter  0x44d,0x1e
  4156cf:	xlat   BYTE PTR ds:[ebx]
  4156d0:	cli    
  4156d1:	pop    ss
  4156d2:	out    dx,eax
  4156d3:	mov    cs,WORD PTR [edx+0x77]
  4156d6:	xlat   BYTE PTR ds:[ebx]
  4156d7:	clc    
  4156d8:	(bad)  
  4156d9:	out    dx,al
  4156da:	add    al,0xad
  4156dc:	fs es (bad) 
  4156e0:	mov    dh,0xf5
  4156e2:	xlat   BYTE PTR ds:[ebx]
  4156e3:	outs   dx,DWORD PTR ds:[esi]
  4156e4:	sbb    al,0x5b
  4156e6:	imul   ebp,ebp,0xffffffba
  4156e9:	into   
  4156ea:	pop    edi
  4156eb:	mov    DWORD PTR [ebp-0x8],ebx
  4156ee:	fldenv [ebx]
  4156f0:	and    BYTE PTR [eax],ah
  4156f2:	jmp    0xb80927e2
  4156f7:	mov    ah,0xab
  4156f9:	enter  0x90e1,0xc1
  4156fd:	sbb    al,0xd8
  4156ff:	stos   DWORD PTR es:[edi],eax
  415700:	(bad)  
  415701:	mov    BYTE PTR [ecx-0x7a0e48de],cl
  415707:	lods   al,BYTE PTR ds:[esi]
  415708:	inc    ecx
  415709:	xor    al,0x27
  41570b:	dec    esi
  41570c:	lahf   
  41570d:	xor    eax,0x81c67baf
  415712:	cmp    BYTE PTR [esi+0x3a51d197],dl
  415718:	stos   BYTE PTR es:[edi],al
  415719:	jno    0x415768
  41571b:	push   es
  41571c:	call   0x8dc2:0x8b189b77
  415723:	add    ecx,eax
  415725:	sar    DWORD PTR [ebx-0x6583b7fb],cl
  41572b:	sub    esp,DWORD PTR ds:0x74d105e5
  415731:	sub    eax,0x4186f4eb
  415736:	mov    dl,0x79
  415738:	mov    cs,WORD PTR gs:[ebx+0x65dfc687]
  41573f:	imul   eax,DWORD PTR [ebx+edi*1-0x56b0631d],0xffffff8f
  415747:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  415749:	stc    
  41574a:	pop    edi
  41574b:	lock pop esi
  41574d:	inc    edi
  41574e:	sbb    al,0x8c
  415750:	mov    ch,0xe3
  415752:	mov    ebp,0x6931fcea
  415757:	mov    dl,0xd3
  415759:	jbe    0x4156f6
  41575b:	outs   dx,BYTE PTR ds:[esi]
  41575c:	rol    cl,cl
  41575e:	adc    ebx,esp
  415760:	fbld   TBYTE PTR [esi+ecx*4+0x310161b0]
  415767:	jg     0x41577c
  415769:	cmp    DWORD PTR [edx-0x7e],esp
  41576c:	loopne 0x415774
  41576e:	outs   dx,DWORD PTR ds:[esi]
  41576f:	pop    es
  415770:	inc    esp
  415771:	jmp    0xbffb:0x17f3cbd7
  415778:	cmp    DWORD PTR [ebp-0x42],ebp
  41577b:	or     eax,DWORD PTR [esi+edx*2]
  41577e:	xlat   BYTE PTR ds:[ebx]
  41577f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415780:	and    ah,ch
  415782:	sub    DWORD PTR [ebp+0x5ddaf934],eax
  415788:	imul   edx,DWORD PTR [ebx-0x67],0xffffffc9
  41578c:	and    DWORD PTR [edi],ebp
  41578e:	jae    0x4157b0
  415790:	fdivr  DWORD PTR [esi-0x4a796b5b]
  415796:	test   DWORD PTR [edi],0x112128cc
  41579c:	xchg   esp,eax
  41579d:	ja     0x4157af
  41579f:	xchg   ebx,eax
  4157a0:	jns    0x415809
  4157a2:	in     al,dx
  4157a3:	adc    dl,dl
  4157a5:	add    BYTE PTR [esi-0x258a7368],ch
  4157ab:	in     al,dx
  4157ac:	fnstenv [eax]
  4157ae:	fidivr WORD PTR [esi-0x3312ccbc]
  4157b4:	mov    edx,0x9b95b331
  4157b9:	rcr    DWORD PTR [esi-0x47],1
  4157bc:	je     0x4157b0
  4157be:	push   es
  4157bf:	jno    0x415763
  4157c1:	add    al,0x3e
  4157c3:	sbb    edi,ebx
  4157c5:	inc    esp
  4157c6:	hlt    
  4157c7:	inc    edx
  4157c8:	mov    bl,0xe2
  4157ca:	add    dl,BYTE PTR [ecx+0x66cd02de]
  4157d0:	cmp    al,0x54
  4157d2:	or     esi,DWORD PTR [edx]
  4157d4:	xor    DWORD PTR [edi+ecx*2-0x3d],0xf1bf17e7
  4157dc:	sub    DWORD PTR [eax-0x7],0x3e
  4157e0:	jl     0x415785
  4157e2:	and    cl,dl
  4157e4:	pop    ss
  4157e5:	sbb    dl,ah
  4157e7:	imul   ecx,DWORD PTR [ebp+0x58],0x3c
  4157eb:	not    ebx
  4157ed:	scas   al,BYTE PTR es:[edi]
  4157ee:	xchg   edi,eax
  4157ef:	enter  0x2afb,0xd0
  4157f3:	jmp    0x76042c96
  4157f8:	and    DWORD PTR [ebp+0x73],esi
  4157fb:	fs js  0x415793
  4157fe:	ins    BYTE PTR es:[edi],dx
  4157ff:	sahf   
  415800:	or     edi,edx
  415802:	cmp    ebx,esi
  415804:	lea    edx,[eax-0x43676dfa]
  41580a:	xor    BYTE PTR [edx],bh
  41580c:	test   ch,0xce
  41580f:	xchg   esp,eax
  415810:	sbb    ebp,ebx
  415812:	outs   dx,BYTE PTR ds:[esi]
  415813:	pop    ds
  415814:	in     eax,0xec
  415816:	psubsb mm7,QWORD PTR [edx+0x7]
  41581a:	jne    0x4157ef
  41581c:	retf   0x3f6c
  41581f:	and    eax,DWORD PTR [ecx]
  415821:	jb     0x415872
  415823:	xchg   DWORD PTR [edi-0x4ecccf6e],esi
  415829:	fsub   DWORD PTR [ecx]
  41582b:	stc    
  41582c:	lock jl 0x41583d
  41582f:	int3   
  415830:	pushf  
  415831:	push   es
  415832:	jmp    0x16e4021d
  415837:	cmp    edx,DWORD PTR [esi]
  415839:	stos   BYTE PTR es:[edi],al
  41583a:	imul   DWORD PTR [ebx+0xa0eeea7]
  415840:	inc    esp
  415841:	dec    ecx
  415842:	sub    esp,edx
  415844:	cmp    ecx,DWORD PTR [ecx+0xaacba11]
  41584a:	outs   dx,BYTE PTR ds:[esi]
  41584b:	or     BYTE PTR [ebx+0x33],0x19
  41584f:	hlt    
  415850:	xor    BYTE PTR [ebx-0x36],0xc1
  415854:	shr    DWORD PTR gs:[ebp+eiz*2+0x2d],cl
  415859:	(bad)
  41585e:	lahf   
  41585f:	call   0x7702:0xba4c1ced
  415866:	fstp   TBYTE PTR [eax+0x17]
  415869:	sub    ah,BYTE PTR [edx]
  41586b:	jbe    0x4158d9
  41586d:	push   ds
  41586e:	inc    edi
  41586f:	adc    BYTE PTR [esi-0x2e],al
  415872:	pusha  
  415873:	jecxz  0x4158c5
  415875:	mov    bl,0x54
  415877:	pop    edx
  415878:	cld    
  415879:	jmp    0x5d8c:0x58f28531
  415880:	pop    ds
  415881:	adc    dh,BYTE PTR [ecx]
  415883:	sbb    cl,BYTE PTR [esi+0x3540518c]
  415889:	cmp    dl,bl
  41588b:	push   edi
  41588c:	mov    edx,0x1a0b3f18
  415891:	cmp    al,bh
  415893:	pop    edx
  415894:	repnz mov eax,0xad5e2065
  41589a:	dec    ebx
  41589b:	jecxz  0x41581d
  41589d:	mov    db7,ebp
  4158a0:	jmp    0x41589f
  4158a2:	in     eax,0x3d
  4158a4:	xor    eax,0x89e52b77
  4158a9:	lock data16 shl BYTE PTR [ebp-0x50],0xde
  4158af:	xchg   ebx,eax
  4158b0:	ret    0x9f2b
  4158b3:	mov    edx,0xfe7706d8
  4158b8:	repnz pop ecx
  4158ba:	(bad)  
  4158bc:	shl    DWORD PTR [ebp-0x3a],cl
  4158bf:	push   esi
  4158c0:	aas    
  4158c1:	xchg   edx,eax
  4158c2:	mov    cl,0x2
  4158c4:	mov    ch,BYTE PTR [eax-0x79f3f012]
  4158ca:	js     0x415913
  4158cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158cd:	clc    
  4158ce:	in     eax,dx
  4158cf:	in     al,0xbb
  4158d1:	push   esp
  4158d2:	sahf   
  4158d3:	loope  0x4158b6
  4158d5:	sub    esp,0xffffffe4
  4158d8:	sub    DWORD PTR [ecx-0x792e8875],ebp
  4158de:	or     eax,0x8b883cc
  4158e3:	cdq    
  4158e4:	cli    
  4158e5:	int3   
  4158e6:	and    BYTE PTR [ebp-0x67],dl
  4158e9:	mov    bl,0x2c
  4158eb:	pusha  
  4158ec:	push   eax
  4158ed:	cmp    DWORD PTR [eax-0x4eeb7e1d],0x6f
  4158f4:	adc    ah,BYTE PTR [ecx]
  4158f6:	or     DWORD PTR [ebx],edx
  4158f8:	mov    esi,0x1dbc02d0
  4158fd:	arpl   WORD PTR [ebx+0x2b],bx
  415900:	cmp    eax,edi
  415902:	or     al,0x6f
  415904:	mov    BYTE PTR [esi],dl
  415906:	xor    esi,ecx
  415908:	inc    edi
  415909:	xor    DWORD PTR [ecx+0x179f0464],ebp
  41590f:	call   0x8b26a1c5
  415914:	or     DWORD PTR [ebp-0x489e3df3],ebx
  41591a:	jo     0x415962
  41591c:	mov    ecx,0x35c6bb11
  415921:	add    DWORD PTR [edi],ebx
  415923:	test   al,0xf3
  415925:	fcomp  DWORD PTR [eax-0x58]
  415928:	jb     0x415959
  41592a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41592b:	lods   al,BYTE PTR ds:[esi]
  41592c:	push   0x6f
  41592e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592f:	lock push ds
  415931:	(bad)  
  415932:	sbb    BYTE PTR [edi+edx*2+0x75],cl
  415936:	fwait
  415937:	ins    BYTE PTR es:[edi],dx
  415938:	inc    eax
  415939:	dec    eax
  41593a:	adc    al,0x92
  41593c:	iret   
  41593d:	cmp    DWORD PTR [edi+0xe],0x45566de0
  415944:	icebp  
  415945:	or     al,0x14
  415947:	push   0xc443848c
  41594c:	jmp    0x6494:0x113c04b0
  415953:	adc    al,0xf0
  415955:	call   0x5d6b:0xdf49db67
  41595c:	jmp    0x4159ae
  41595e:	mov    ecx,0x717ba617
  415963:	mov    al,ds:0x879a69ea
  415968:	jne    0x415958
  41596a:	out    0xe5,al
  41596c:	iret   
  41596d:	adc    DWORD PTR [esi+edi*1-0x58093333],ebx
  415974:	and    ebx,edi
  415976:	inc    ecx
  415977:	enter  0x1247,0x57
  41597b:	and    al,0x9c
  41597d:	(bad)  
  41597e:	jge    0x415901
  415980:	hlt    
  415981:	aad    0x9f
  415983:	out    0x23,al
  415985:	mov    ecx,0xad81b083
  41598a:	mov    cs,WORD PTR [ecx+0x77852376]
  415990:	ror    BYTE PTR [eax+0x3154e77c],1
  415996:	ret    
  415997:	(bad)  
  415998:	cld    
  415999:	mov    ebp,0x750b3715
  41599e:	jge    0x4159aa
  4159a0:	cli    
  4159a1:	sub    bl,BYTE PTR [esi]
  4159a3:	xor    al,0x9b
  4159a5:	int    0xdc
  4159a7:	(bad)  
  4159a9:	jnp    0x415a04
  4159ab:	mov    bh,0xa0
  4159ad:	loop   0x415985
  4159af:	sub    eax,0x5fe4dbbb
  4159b4:	les    ebp,FWORD PTR [edx]
  4159b6:	mov    ah,0x97
  4159b8:	inc    esp
  4159b9:	(bad)  
  4159ba:	rcr    DWORD PTR [ebp+0x40],0x78
  4159be:	(bad)  
  4159bf:	dec    edx
  4159c0:	mov    ecx,0x880f6788
  4159c5:	das    
  4159c6:	sub    al,0xf9
  4159c8:	jne    0x4159b5
  4159ca:	(bad)  
  4159cb:	push   ecx
  4159cc:	jnp    0x4159c8
  4159ce:	inc    esp
  4159cf:	dec    esp
  4159d0:	in     al,0xae
  4159d2:	(bad)  
  4159d3:	jne    0x415998
  4159d5:	mov    cl,BYTE PTR [eax]
  4159d7:	repnz adc BYTE PTR [ecx-0x1a],dl
  4159db:	push   edi
  4159dc:	int3   
  4159dd:	cmc    
  4159de:	adc    ecx,esp
  4159e0:	les    eax,FWORD PTR [ebp-0xa68f50]
  4159e6:	(bad)  
  4159e7:	or     eax,0x5fa05b53
  4159ec:	sbb    eax,DWORD PTR [ecx]
  4159ee:	mov    ds:0xe43307bc,al
  4159f3:	test   al,0xde
  4159f5:	ins    DWORD PTR es:[edi],dx
  4159f6:	loop   0x415a3f
  4159f8:	xchg   edx,eax
  4159f9:	mov    al,0x94
  4159fb:	je     0x415a5c
  4159fd:	lods   al,BYTE PTR ds:[esi]
  4159fe:	clc    
  4159ff:	loope  0x41599e
  415a01:	or     BYTE PTR [eax+0x2b],al
  415a04:	mov    esi,es
  415a06:	mov    eax,0x94b7f3da
  415a0b:	xchg   DWORD PTR [esi-0x41],edi
  415a0e:	nop
  415a0f:	or     ch,al
  415a11:	jmp    0x9f12:0x362e89a3
  415a18:	shl    BYTE PTR [esi-0x5],cl
  415a1b:	vpsllw ymm6,ymm4,XMMWORD PTR [ecx+0xc]
  415a20:	jp     0x415a9d
  415a22:	cmp    edx,esi
  415a24:	sub    ecx,DWORD PTR [edi+0x20]
  415a27:	push   esp
  415a28:	mov    bl,0xda
  415a2a:	iret   
  415a2b:	or     DWORD PTR [ecx-0x2336283f],esi
  415a31:	fcom   QWORD PTR [ebx+0x65f2f183]
  415a37:	(bad)  
  415a38:	jb     0x4159bf
  415a3a:	and    BYTE PTR [edx-0x60],dl
  415a3d:	shr    DWORD PTR [ecx-0xa],cl
  415a40:	ficom  DWORD PTR [esp+edx*8]
  415a43:	sbb    al,0x74
  415a45:	inc    esi
  415a46:	xor    BYTE PTR [ebp+esi*1+0x28521317],dh
  415a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a4e:	dec    edi
  415a4f:	mov    dl,0x37
  415a51:	pop    eax
  415a52:	popa   
  415a53:	xchg   ebp,eax
  415a54:	div    al
  415a56:	imul   ebx,DWORD PTR [edi-0x431db75d],0xae807cf9
  415a60:	es gs daa 
  415a63:	mov    gs,WORD PTR [esi+ecx*4-0x5aaf79cf]
  415a6a:	std    
  415a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a6c:	mov    dh,BYTE PTR [ecx+0x5af0081d]
  415a72:	aam    0x4f
  415a74:	neg    BYTE PTR [edx+ecx*1]
  415a77:	retf   
  415a78:	pushf  
  415a79:	lock mov ecx,0x55fb9cc6
  415a7f:	call   0xa2c6fd49
  415a84:	cdq    
  415a85:	xchg   esi,eax
  415a86:	xchg   edi,eax
  415a87:	pop    es
  415a88:	mov    esi,0x8833b445
  415a8d:	jmp    0x2bba:0xaad500f9
  415a94:	fnstcw WORD PTR [ebx+0x7e]
  415a97:	xor    dh,0xc8
  415a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a9b:	clc    
  415a9c:	xchg   esi,eax
  415a9d:	jbe    0x415a34
  415a9f:	jnp    0x415ad7
  415aa1:	mov    dl,0x85
  415aa3:	enter  0xc07,0xf8
  415aa7:	pop    ebp
  415aa8:	adc    esi,DWORD PTR [ebx-0x35]
  415aab:	jg     0x415a2d
  415aad:	in     al,dx
  415aae:	retf   0x62a9
  415ab1:	ins    BYTE PTR es:[edi],dx
  415ab2:	mov    ecx,0xe1cccc59
  415ab7:	mov    BYTE PTR [esi-0x34aabb73],ch
  415abd:	outs   dx,DWORD PTR ds:[esi]
  415abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abf:	lods   eax,DWORD PTR ds:[esi]
  415ac0:	sbb    eax,0x72d15570
  415ac5:	pop    ds
  415ac6:	jg     0x415aae
  415ac8:	cld    
  415ac9:	test   al,0x91
  415acb:	sbb    eax,0xf97be6e3
  415ad0:	add    BYTE PTR [eax-0x3c00c81],dh
  415ad6:	arpl   ax,dx
  415ad8:	pop    ebx
  415ad9:	sbb    DWORD PTR [edx+0x15bf43ee],esi
  415adf:	mov    bl,0x8b
  415ae1:	sub    bl,ah
  415ae3:	or     ebx,ecx
  415ae5:	add    ch,bh
  415ae7:	popa   
  415ae8:	or     edx,ebp
  415aea:	and    al,0x61
  415aec:	fbld   TBYTE PTR [eax-0x54]
  415aef:	add    al,bl
  415af1:	add    DWORD PTR ds:0xa88d7645,eax
  415af7:	xchg   ebp,edx
  415af9:	cli    
  415afa:	mov    ch,0xe5
  415afc:	sub    ebp,DWORD PTR [esi-0x69]
  415aff:	popa   
  415b00:	mov    eax,0x87db3f42
  415b05:	pop    ecx
  415b06:	inc    edx
  415b07:	mov    dh,0xa7
  415b09:	adc    eax,0xd8786ea4
  415b0e:	push   ds
  415b0f:	outs   dx,DWORD PTR ds:[esi]
  415b10:	pop    edx
  415b11:	sbb    bl,BYTE PTR [edi]
  415b13:	sub    edx,DWORD PTR [ebx]
  415b15:	out    dx,eax
  415b16:	mov    dl,0xd0
  415b18:	xchg   ebp,eax
  415b19:	daa    
  415b1a:	xor    ah,BYTE PTR [eax]
  415b1c:	out    0xcb,al
  415b1e:	stc    
  415b1f:	jmp    0x415ae7
  415b21:	and    al,0x13
  415b23:	xchg   DWORD PTR [edi-0x474b07e4],esp
  415b29:	cmp    BYTE PTR [eax-0x8433895],dl
  415b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b30:	mov    ch,0xc1
  415b32:	popf   
  415b33:	push   cs
  415b34:	fisub  DWORD PTR [edx]
  415b36:	mov    eax,ds:0x7d3831b8
  415b3b:	cwde   
  415b3c:	inc    edx
  415b3d:	jl     0x415bab
  415b3f:	adc    BYTE PTR [edx],0x7e
  415b42:	mov    ds:0x14394470,al
  415b47:	in     eax,dx
  415b48:	xlat   BYTE PTR ds:[ebx]
  415b49:	daa    
  415b4a:	push   ebp
  415b4b:	out    dx,eax
  415b4c:	jno    0x415b2e
  415b4e:	leave  
  415b4f:	jo     0x415b88
  415b51:	mov    edi,0xed183b21
  415b56:	xor    ah,BYTE PTR [esi-0x74]
  415b59:	hlt    
  415b5a:	lds    eax,FWORD PTR [ebp-0x6d]
  415b5d:	dec    esi
  415b5e:	mov    edx,edx
  415b60:	mov    dl,0x93
  415b62:	adc    bl,cl
  415b64:	push   ebp
  415b65:	pop    ds
  415b66:	outs   dx,BYTE PTR ds:[esi]
  415b67:	mov    ah,0x0
  415b69:	test   DWORD PTR [edi+edi*1-0x1f],esp
  415b6d:	push   eax
  415b6e:	cmp    dh,BYTE PTR [ebx-0x4d5e7e61]
  415b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b75:	out    0x38,al
  415b77:	clc    
  415b78:	lock sbb al,0x75
  415b7b:	xor    dl,BYTE PTR [eax-0x3d8b8684]
  415b81:	mov    dh,0x9
  415b83:	inc    ebx
  415b84:	adc    BYTE PTR [eax+0x6b],cl
  415b87:	xchg   edi,eax
  415b88:	xchg   edx,eax
  415b89:	xchg   edx,eax
  415b8a:	xchg   ebx,eax
  415b8b:	jnp    0x415ba6
  415b8d:	mov    ebx,0x4bb3db15
  415b92:	inc    eax
  415b93:	int3   
  415b94:	or     eax,0xc44e19ef
  415b99:	jb     0x415bca
  415b9b:	pop    esp
  415b9c:	add    BYTE PTR [esi-0x4e],0xeb
  415ba0:	mov    eax,ds:0xbfb0ea7b
  415ba5:	cmp    al,0xb1
  415ba7:	jmp    0x920a:0xc043771c
  415bae:	jmp    0x415bf2
  415bb0:	ins    DWORD PTR es:[edi],dx
  415bb1:	imul   ebp,ecx,0xffffffa5
  415bb4:	jecxz  0x415b3b
  415bb6:	jns    0x415b87
  415bb8:	aas    
  415bb9:	lods   eax,DWORD PTR ds:[esi]
  415bba:	pop    esp
  415bbb:	pop    es
  415bbc:	inc    ecx
  415bbd:	jb     0x415bba
  415bbf:	in     al,dx
  415bc0:	pop    ebp
  415bc1:	xlat   BYTE PTR ds:[ebx]
  415bc2:	push   ds
  415bc3:	aas    
  415bc4:	cmp    al,dl
  415bc6:	fneni(8087 only) 
  415bc8:	cli    
  415bc9:	cmp    BYTE PTR gs:[ebp-0x3b],dh
  415bcd:	ficom  WORD PTR [esi+esi*2]
  415bd0:	js     0x415c0b
  415bd2:	cmp    dl,BYTE PTR [esi]
  415bd4:	cmp    ecx,DWORD PTR [ebx+0x2c]
  415bd7:	jp     0x415b70
  415bd9:	pop    ebx
  415bda:	push   edi
  415bdb:	mov    al,ds:0xf06e1011
  415be0:	in     al,dx
  415be1:	add    ch,dh
  415be3:	clc    
  415be4:	loop   0x415c26
  415be6:	in     eax,dx
  415be7:	(bad)  [edx-0x1c]
  415bea:	push   ebx
  415beb:	addr16 js 0x415c35
  415bee:	add    al,0x6e
  415bf0:	inc    BYTE PTR [ebp+0x58]
  415bf3:	aad    0x51
  415bf5:	sub    BYTE PTR [ecx+0x58],ch
  415bf8:	cwde   
  415bf9:	jmp    0x415bee
  415bfb:	and    al,0xa
  415bfd:	or     ah,ah
  415bff:	int3   
  415c00:	retf   0x2c81
  415c03:	call   0x4293:0xe2c91538
  415c0a:	int3   
  415c0b:	inc    edi
  415c0c:	add    ebp,ebx
  415c0e:	fisub  WORD PTR [ebx]
  415c10:	add    bh,BYTE PTR [ecx-0x53]
  415c13:	push   edx
  415c14:	popa   
  415c15:	dec    esi
  415c16:	cmp    edx,DWORD PTR [edi-0x4cb44d89]
  415c1c:	enter  0xfa33,0xb8
  415c20:	nop
  415c21:	push   ecx
  415c22:	mov    ds:0xfe222b9f,eax
  415c27:	pusha  
  415c28:	out    0xc3,eax
  415c2a:	mov    bh,0x62
  415c2c:	and    bh,bl
  415c2e:	dec    ecx
  415c2f:	dec    ebx
  415c30:	je     0x415c02
  415c32:	repz xchg ebx,eax
  415c34:	inc    edi
  415c35:	jecxz  0x415bd8
  415c37:	call   DWORD PTR [edx-0x23c54906]
  415c3d:	push   edi
  415c3e:	push   0xffffffc4
  415c40:	imul   edx,DWORD PTR [edx-0x59],0xdb85135a
  415c47:	(bad)  
  415c48:	mov    edx,0xaa8e279d
  415c4d:	fwait
  415c4e:	mov    ecx,0x1f95d7eb
  415c53:	(bad)  
  415c54:	pop    esp
  415c55:	pop    esp
  415c56:	(bad)
  415c59:	arpl   WORD PTR [eax+0x6ef0f280],si
  415c5f:	mov    ds:0x4510da2d,al
  415c64:	(bad)  
  415c65:	cwde   
  415c66:	popf   
  415c67:	xchg   DWORD PTR [esi-0x9],esi
  415c6a:	sbb    esp,ecx
  415c6c:	adc    dl,BYTE PTR [edx]
  415c6e:	adc    cl,BYTE PTR [ecx+0x49ea4e58]
  415c74:	stos   BYTE PTR es:[edi],al
  415c75:	mov    eax,ds:0xa8d5791c
  415c7a:	popa   
  415c7b:	mov    DWORD PTR [ebp-0x6d],edx
  415c7e:	and    dh,bh
  415c80:	adc    dl,BYTE PTR [edi-0x6f]
  415c83:	mov    ds:0xc0e291de,al
  415c88:	push   ds
  415c89:	adc    edx,esp
  415c8b:	clc    
  415c8c:	dec    esi
  415c8d:	clc    
  415c8e:	push   esp
  415c8f:	cli    
  415c90:	push   ds
  415c91:	ffree  st(0)
  415c93:	rcr    BYTE PTR [ecx],0x1d
  415c96:	xlat   BYTE PTR ds:[ebx]
  415c97:	xchg   ecx,eax
  415c98:	push   eax
  415c99:	xchg   ebp,eax
  415c9a:	push   esi
  415c9b:	mov    edx,0xc96ca454
  415ca0:	aad    0x7b
  415ca2:	fsubr  st(3),st
  415ca4:	cld    
  415ca5:	mov    ds:0xad1bf8fe,eax
  415caa:	mov    cs,WORD PTR [ecx-0x38]
  415cad:	xor    DWORD PTR [esi+ecx*1+0x62],0xffffff99
  415cb2:	or     DWORD PTR [esi+0x33ec344b],esp
  415cb8:	xchg   ecx,eax
  415cb9:	int    0x3e
  415cbb:	xchg   DWORD PTR [edx-0x10bf0edf],ecx
  415cc1:	mov    BYTE PTR [edi-0x34],ch
  415cc4:	adc    ch,BYTE PTR [esi+ecx*4-0x53d441c7]
  415ccb:	cmp    al,0x37
  415ccd:	je     0x415d36
  415ccf:	in     al,dx
  415cd0:	int3   
  415cd1:	pop    ds
  415cd2:	popa   
  415cd3:	adc    eax,DWORD PTR [ebx-0x4e21a70b]
  415cd9:	fs das 
  415cdb:	ficom  DWORD PTR [esi-0xf]
  415cde:	sbb    DWORD PTR [ebp-0x4fcdb493],0x6e
  415ce5:	rol    DWORD PTR [edx],1
  415ce7:	lahf   
  415ce8:	jns    0x415ca2
  415cea:	inc    ebx
  415ceb:	mov    cl,0xa5
  415ced:	pop    eax
  415cee:	(bad)  
  415cef:	shl    dl,0x5c
  415cf2:	sbb    BYTE PTR [ecx+0x3d],bl
  415cf5:	test   eax,0x15dede3a
  415cfa:	lds    edi,FWORD PTR [ecx+0x19]
  415cfd:	mov    BYTE PTR [edx+0x6e0421f1],al
  415d03:	jmp    0x415c8d
  415d05:	hlt    
  415d06:	es push 0xd7790303
  415d0c:	nop
  415d0d:	jb     0x415d38
  415d0f:	xchg   esi,eax
  415d10:	and    DWORD PTR [eax-0x71],eax
  415d13:	push   edx
  415d14:	loopne 0x415cda
  415d16:	scas   al,BYTE PTR es:[edi]
  415d17:	inc    edx
  415d18:	or     ecx,DWORD PTR [eax-0x3cdbf94b]
  415d1e:	fdivr  DWORD PTR [ebx+0x75]
  415d21:	enter  0xda9,0xf4
  415d25:	or     eax,DWORD PTR [eax-0x3]
  415d28:	outs   dx,DWORD PTR ds:[esi]
  415d29:	rcr    BYTE PTR [eax+0x33dedc8b],cl
  415d2f:	add    edi,esp
  415d31:	cmp    al,0xf8
  415d33:	in     eax,dx
  415d34:	lea    edi,[edx-0x1d]
  415d37:	fcom   QWORD PTR [esi]
  415d39:	cmp    DWORD PTR [ecx+0x1e4aac83],ebp
  415d3f:	jo     0x415d63
  415d41:	xchg   ebp,eax
  415d42:	xchg   ebx,eax
  415d43:	lods   eax,DWORD PTR ds:[esi]
  415d44:	xchg   edx,eax
  415d45:	idiv   DWORD PTR [eax+0x165307db]
  415d4b:	or     DWORD PTR [edi-0x37],edi
  415d4e:	inc    ebx
  415d4f:	aam    0x2b
  415d51:	jg     0x415d05
  415d53:	shl    DWORD PTR [ecx],1
  415d55:	dec    edx
  415d56:	jge    0x415d4d
  415d58:	and    BYTE PTR [edx],bh
  415d5a:	icebp  
  415d5b:	xlat   BYTE PTR ds:[ebx]
  415d5c:	lods   eax,DWORD PTR ds:[esi]
  415d5d:	es scas eax,DWORD PTR es:[edi]
  415d5f:	dec    ebp
  415d60:	lds    ebp,FWORD PTR [ebx-0x5b9b429d]
  415d66:	jmp    0x1cb1:0xea2e98c9
  415d6d:	dec    eax
  415d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d6f:	xchg   ebp,eax
  415d70:	stc    
  415d71:	mov    ch,0x77
  415d73:	lods   al,BYTE PTR ds:[esi]
  415d74:	mov    cl,BYTE PTR ds:0x49849dd8
  415d7a:	inc    edi
  415d7b:	cmp    al,0xbd
  415d7d:	sbb    ebx,DWORD PTR [ecx]
  415d7f:	scas   al,BYTE PTR es:[edi]
  415d80:	iret   
  415d81:	shr    ebx,0x5c
  415d84:	fwait
  415d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d86:	int3   
  415d87:	fistp  WORD PTR [edx+0x19]
  415d8a:	jnp    0x415d31
  415d8c:	ja     0x415dae
  415d8e:	sti    
  415d8f:	add    BYTE PTR [edx+ebx*2-0x36],bl
  415d93:	dec    ebx
  415d94:	inc    edx
  415d95:	mov    ebp,0xe20de21b
  415d9a:	xor    al,0x16
  415d9c:	fwait
  415d9d:	inc    edx
  415d9e:	inc    esi
  415d9f:	jmp    0x415e13
  415da1:	nop
  415da2:	lods   eax,DWORD PTR ds:[esi]
  415da3:	popa   
  415da4:	loop   0x415e23
  415da6:	sub    BYTE PTR [edi],bh
  415da8:	xor    edi,eax
  415daa:	leave  
  415dab:	enter  0x8fab,0xc7
  415daf:	leave  
  415db0:	popa   
  415db1:	xchg   ecx,eax
  415db2:	ss mov al,0xd2
  415db5:	add    dh,BYTE PTR [eax+0x2e8acae5]
  415dbb:	inc    ecx
  415dbc:	(bad)  
  415dbd:	lods   al,BYTE PTR ds:[esi]
  415dbe:	div    DWORD PTR [ecx]
  415dc0:	push   ebp
  415dc1:	in     eax,dx
  415dc2:	nop
  415dc3:	dec    eax
  415dc4:	push   ebp
  415dc5:	push   ebx
  415dc6:	daa    
  415dc7:	icebp  
  415dc8:	mov    edi,0x44b1d376
  415dcd:	add    BYTE PTR [ecx-0x1a538360],dl
  415dd3:	or     ebp,DWORD PTR [ebx]
  415dd5:	push   esi
  415dd6:	sbb    DWORD PTR [edx],ebx
  415dd8:	jb     0x415d98
  415dda:	lds    esp,FWORD PTR [ebx]
  415ddc:	pop    ecx
  415ddd:	sub    ecx,esp
  415ddf:	push   eax
  415de0:	stc    
  415de1:	push   ebx
  415de2:	call   0x5cd45782
  415de7:	loope  0x415dd5
  415de9:	push   esi
  415dea:	pop    edx
  415deb:	xor    eax,0x34372180
  415df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415df2:	cs leave 
  415df4:	mov    esp,0xd775be9f
  415df9:	retf   
  415dfa:	test   DWORD PTR [ebp+0x70a25ef3],eax
  415e00:	test   eax,0x1739a7c7
  415e05:	or     esp,DWORD PTR [esi-0x4]
  415e08:	or     eax,0x58357a6
  415e0d:	mov    al,fs:0xd7835a85
  415e13:	xor    BYTE PTR [ecx-0x6e4e714a],bh
  415e19:	sahf   
  415e1a:	xchg   esp,eax
  415e1b:	lods   al,BYTE PTR ds:[esi]
  415e1c:	clc    
  415e1d:	ja     0x415e31
  415e1f:	cmp    DWORD PTR [ecx+edx*1+0x698631bf],esi
  415e26:	cld    
  415e27:	les    esi,FWORD PTR [ecx-0x254a04c4]
  415e2d:	pop    edx
  415e2e:	mov    dh,0x1e
  415e30:	mov    ch,0x6b
  415e32:	jle    0x415dfb
  415e34:	push   esp
  415e35:	rol    BYTE PTR [ecx+0x6edc0281],1
  415e3b:	retf   
  415e3c:	lds    ebp,FWORD PTR [edi+0x19]
  415e3f:	jb     0x415e4f
  415e41:	jne    0x415e32
  415e43:	rol    cl,cl
  415e45:	sar    DWORD PTR [ecx-0x74],1
  415e48:	ins    BYTE PTR es:[edi],dx
  415e49:	in     eax,dx
  415e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4b:	fild   DWORD PTR [ebp+0x6fe75ebc]
  415e51:	xor    DWORD PTR [ecx],0xffffffbe
  415e54:	mov    dh,ah
  415e56:	rol    ebx,1
  415e58:	sub    al,0xf
  415e5a:	pop    ebx
  415e5b:	loopne 0x415df5
  415e5d:	scas   al,BYTE PTR es:[edi]
  415e5e:	pop    esi
  415e5f:	push   esi
  415e60:	add    al,0x2b
  415e62:	pop    esp
  415e63:	pop    ebx
  415e64:	jle    0x415ebd
  415e66:	je     0x415eb6
  415e68:	sar    DWORD PTR [ebp-0x15],cl
  415e6b:	aad    0x5a
  415e6d:	shr    bh,0x43
  415e70:	ror    DWORD PTR [edx],0x8e
  415e73:	mov    ebx,DWORD PTR [ebp+0x6]
  415e76:	xchg   edx,eax
  415e77:	in     al,dx
  415e78:	push   0x58
  415e7a:	pop    ecx
  415e7b:	jge    0x415e65
  415e7d:	jae    0x415e84
  415e7f:	in     eax,dx
  415e80:	dec    esp
  415e81:	or     ecx,DWORD PTR [ecx]
  415e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e84:	mov    al,0x36
  415e86:	dec    edx
  415e87:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e89:	out    dx,al
  415e8a:	in     eax,dx
  415e8b:	rcl    dh,1
  415e8d:	push   0x5f22d732
  415e92:	leave  
  415e93:	push   0x37fc1030
  415e98:	add    esi,DWORD PTR [edi+0x23]
  415e9b:	test   ebp,0xaacce750
  415ea1:	pop    ss
  415ea2:	bnd jb 0x415f18
  415ea5:	sbb    edi,ebp
  415ea7:	xchg   ecx,eax
  415ea8:	cmp    edx,ebx
  415eaa:	fdiv   DWORD PTR [edi+0x438dd75c]
  415eb0:	div    BYTE PTR [ebx-0x3d2d06b3]
  415eb6:	pop    esi
  415eb7:	pop    esp
  415eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb9:	or     BYTE PTR [ebx],0xbf
  415ebc:	(bad)  
  415ebd:	push   eax
  415ebe:	jg     0x415ee9
  415ec0:	lds    ax,DWORD PTR [edi+0x60608872]
  415ec7:	ins    DWORD PTR es:[edi],dx
  415ec8:	add    al,0x92
  415eca:	pop    edi
  415ecb:	jg     0x415e9a
  415ecd:	lahf   
  415ece:	into   
  415ecf:	inc    edx
  415ed0:	jmp    0xb6ad:0xfb38c5cb
  415ed7:	sti    
  415ed8:	fisub  WORD PTR [esi-0x9]
  415edb:	jae    0x415f37
  415edd:	or     edi,DWORD PTR [edx+eiz*1-0x5e]
  415ee1:	call   0x9d79b77e
  415ee6:	sahf   
  415ee7:	lock mov eax,ds:0x133d947c
  415eed:	xchg   edx,eax
  415eee:	(bad)  
  415eef:	cmp    bl,BYTE PTR [eax+eax*8-0x49]
  415ef3:	and    DWORD PTR [edx+0x1fac91dc],edx
  415ef9:	ret    0x5b60
  415efc:	lods   al,BYTE PTR ds:[esi]
  415efd:	push   ebp
  415efe:	into   
  415eff:	jle    0x415f4c
  415f01:	xor    eax,0xb3ec5d0e
  415f06:	sti    
  415f07:	(bad)  
  415f08:	cld    
  415f09:	push   edi
  415f0a:	jmp    0xf092:0x39a0dc0
  415f11:	sbb    eax,0xd945e7c8
  415f16:	aad    0xa6
  415f18:	xor    eax,0xcf530b8f
  415f1d:	mov    esi,0x8b2a1bf8
  415f22:	xor    ch,BYTE PTR [ebx-0x72]
  415f25:	ret    
  415f26:	mov    edx,0xdf7856f4
  415f2b:	mov    al,0xbd
  415f2d:	pop    ebp
  415f2e:	xor    DWORD PTR [ebx],eax
  415f30:	xlat   BYTE PTR ds:[ebx]
  415f31:	gs inc ebp
  415f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f34:	jge    0x415efa
  415f36:	prefetcht1 BYTE PTR fs:[edi+0x7e]
  415f3b:	das    
  415f3c:	push   esp
  415f3d:	mov    esi,0xe2762a3
  415f42:	jg     0x415f32
  415f44:	mov    ds:0xbd6a73b9,al
  415f49:	cmp    eax,0xcf9504bb
  415f4e:	and    DWORD PTR [ebx+0x44ba9ee],ebp
  415f54:	push   edi
  415f55:	sahf   
  415f56:	fcomp  st(1)
  415f58:	jb     0x415fd1
  415f5a:	jo     0x415f2d
  415f5c:	ss clc 
  415f5e:	push   cs
  415f5f:	push   edi
  415f60:	push   0x2c
  415f62:	or     al,BYTE PTR [eax+0x1be7e317]
  415f68:	lds    ecx,FWORD PTR [eax]
  415f6a:	mov    ah,0x28
  415f6c:	mov    ebx,0x3d9c8a11
  415f71:	and    DWORD PTR [ebp+0x4d],esi
  415f74:	or     eax,0x544ee5eb
  415f79:	pop    ss
  415f7a:	jne    0x415f07
  415f7c:	mov    gs,esi
  415f7e:	xlat   BYTE PTR ds:[ebx]
  415f7f:	inc    esp
  415f80:	dec    esi
  415f81:	retf   0xce93
  415f84:	outs   dx,DWORD PTR ds:[esi]
  415f85:	lea    esi,[edx+0x66]
  415f88:	xchg   ebp,eax
  415f89:	call   0x7f92:0x8df99ac6
  415f90:	fsub   QWORD PTR [edx]
  415f92:	mov    bl,0x98
  415f94:	adc    al,0xfb
  415f96:	fdivr  st,st(0)
  415f98:	push   esp
  415f99:	or     DWORD PTR [ebp-0x2bc2f452],eax
  415f9f:	lods   al,BYTE PTR ds:[esi]
  415fa0:	dec    ebp
  415fa1:	jl     0x415f8f
  415fa3:	psadbw mm2,QWORD PTR [eax]
  415fa6:	xchg   esp,eax
  415fa7:	xlat   BYTE PTR ds:[ebx]
  415fa8:	cmc    
  415fa9:	add    DWORD PTR [edx-0x27],esp
  415fac:	and    ch,cl
  415fae:	bound  eax,QWORD PTR [edx+0x799b423b]
  415fb4:	xchg   ebx,eax
  415fb5:	jl     0x415fd0
  415fb7:	sub    ch,dl
  415fb9:	sbb    al,0x6
  415fbb:	sub    bh,dh
  415fbd:	ins    DWORD PTR es:[edi],dx
  415fbe:	sub    al,0x16
  415fc0:	and    DWORD PTR [edx],0xffffffd0
  415fc3:	jg     0x416042
  415fc5:	inc    edx
  415fc6:	daa    
  415fc7:	icebp  
  415fc8:	xchg   edx,eax
  415fc9:	sub    eax,0x31c2dd9f
  415fce:	aaa    
  415fcf:	push   cs
  415fd0:	outs   dx,BYTE PTR ds:[esi]
  415fd1:	mov    eax,ds:0xc350f7bc
  415fd6:	popf   
  415fd7:	mov    dl,0xdf
  415fd9:	push   eax
  415fda:	les    ebp,FWORD PTR [ebp-0x1b]
  415fdd:	lock pop es
  415fdf:	mul    BYTE PTR ds:0x2fdc6675
  415fe5:	out    dx,eax
  415fe6:	out    dx,eax
  415fe7:	in     eax,0x76
  415fe9:	(bad)  
  415fea:	sub    eax,0xa2d05e64
  415fef:	xor    DWORD PTR [ecx+ecx*1-0x61],eax
  415ff3:	push   cs
  415ff4:	push   ecx
  415ff5:	sub    al,0x77
  415ff7:	fild   DWORD PTR [edx+ebx*8-0x7063f7ef]
  415ffe:	mov    bl,0x78
  416000:	mov    cl,0x42
  416002:	xchg   ebp,eax
  416003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416004:	jae    0x416039
  416006:	ror    DWORD PTR [ecx+0x558bb055],cl
  41600c:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  416012:	and    edx,ebx
  416014:	mov    DWORD PTR [ebp-0x4c],edx
  416017:	mov    edx,DWORD PTR [ebp+0x8]
  41601a:	mov    ebx,DWORD PTR [ebp-0x48]
  41601d:	lea    edx,[ebx+edx*1+0x241fc1f]
  416024:	mov    DWORD PTR [ebp-0x48],edx
  416027:	mov    edx,DWORD PTR [ebp+0x8]
  41602a:	mov    ebx,0xfa5e15e2
  41602f:	sub    ebx,edx
  416031:	add    ebx,DWORD PTR [ebp-0x44]
  416034:	mov    DWORD PTR [ebp-0x44],ebx
  416037:	mov    edx,DWORD PTR [ebp+0x8]
  41603a:	xor    edx,eax
  41603c:	add    edx,esi
  41603e:	jmp    0x418387
  416043:	inc    ebp
  416044:	mov    edx,eax
  416046:	ss xchg edx,eax
  416048:	test   ebx,0x7652fd8b
  41604e:	and    eax,0x6837aabb
  416053:	clc    
  416054:	push   ebp
  416055:	jge    0x4160d3
  416057:	inc    eax
  416058:	pop    edi
  416059:	jl     0x4160d7
  41605b:	ins    BYTE PTR es:[edi],dx
  41605c:	in     al,0xd5
  41605e:	adc    esi,edi
  416060:	sub    esp,DWORD PTR [eax-0x62]
  416063:	arpl   WORD PTR [ebp+0x2f],si
  416066:	lods   al,BYTE PTR ds:[esi]
  416067:	stc    
  416068:	or     esi,DWORD PTR [esi-0x1ade3cbc]
  41606e:	loop   0x416054
  416070:	popf   
  416071:	or     al,0xce
  416073:	fs jmp 0x4160bd
  416076:	lock inc edi
  416078:	jbe    0x416069
  41607a:	sahf   
  41607b:	adc    al,BYTE PTR [ecx+0x440ef23e]
  416081:	mov    DWORD PTR [edx+0x73828226],ebp
  416087:	jp     0x41607d
  416089:	mov    dl,0xb6
  41608b:	mov    ds:0x48c8b410,eax
  416090:	mov    dh,0x96
  416092:	mov    ecx,0x9f47b518
  416097:	jmp    0xe318245
  41609c:	dec    ecx
  41609d:	mov    bl,0x8e
  41609f:	mov    eax,0x6baf60cb
  4160a4:	cld    
  4160a5:	sub    al,0x6b
  4160a7:	xchg   edx,eax
  4160a8:	jmp    0x41609e
  4160aa:	lods   eax,DWORD PTR ds:[esi]
  4160ab:	fld    st(5)
  4160ad:	cmp    al,0x5c
  4160af:	fcom   QWORD PTR [edx-0x565922ce]
  4160b5:	repnz cdq 
  4160b7:	cs pop esp
  4160b9:	aaa    
  4160ba:	loopne 0x416133
  4160bc:	and    BYTE PTR es:[esi+ebx*8+0x1d],cl
  4160c1:	mov    ah,BYTE PTR [eax+0x4dd27686]
  4160c7:	cmp    al,0xec
  4160c9:	and    dl,BYTE PTR [ebx+0x46058491]
  4160cf:	fsubrp st(3),st
  4160d1:	xchg   ebp,eax
  4160d2:	mov    bh,0x25
  4160d4:	adc    dl,0xfc
  4160d7:	cli    
  4160d8:	mov    ebp,0xb77c6a29
  4160dd:	ss fldpi 
  4160e0:	or     al,0x80
  4160e2:	out    dx,al
  4160e3:	(bad)  
  4160e4:	jae    0x416165
  4160e6:	xchg   ebx,eax
  4160e7:	xor    ebp,DWORD PTR [ebx-0x11]
  4160ea:	jno    0x41608f
  4160ec:	(bad)  
  4160ee:	mov    ebx,0x66e52f49
  4160f3:	ja     0x416107
  4160f5:	iret   
  4160f6:	inc    ecx
  4160f7:	push   cs
  4160f8:	(bad)
  4160fc:	push   edi
  4160fd:	pop    eax
  4160fe:	cld    
  4160ff:	into   
  416100:	and    BYTE PTR [ebx+edx*2+0x52],bl
  416104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416105:	popa   
  416106:	jnp    0x41611d
  416108:	xchg   ebx,eax
  416109:	rcr    BYTE PTR [edx+0x23117435],cl
  41610f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416110:	mov    ebp,0xea297263
  416116:	int3   
  416117:	cmp    BYTE PTR [ecx],bl
  416119:	add    DWORD PTR [ebx],edi
  41611b:	mov    esp,0x73319e9a
  416120:	mov    ds:0x17c46b9a,al
  416125:	and    DWORD PTR [ebp-0x6963ddd5],esi
  41612b:	cmp    DWORD PTR ds:0xed7316d3,edx
  416131:	ret    0xdedb
  416134:	pushf  
  416135:	mov    cl,0xd8
  416137:	sahf   
  416138:	stc    
  416139:	mov    esp,0xfcba5838
  41613e:	mov    ds:0x1cb5af66,al
  416143:	adc    BYTE PTR [ecx+edx*1],dl
  416146:	push   0x62ef85e8
  41614b:	in     eax,dx
  41614c:	mov    dh,0xd
  41614e:	shl    DWORD PTR [edi],0xf7
  416151:	adc    ch,BYTE PTR [esi-0x2b]
  416154:	xchg   ebp,eax
  416156:	loop   0x4160e3
  416158:	lea    ebx,[edx+edi*8-0x238bfb57]
  41615f:	sbb    bh,0x7f
  416162:	push   ebx
  416163:	je     0x416149
  416165:	and    eax,0xcac108e7
  41616a:	imul   ebp,DWORD PTR ds:0x1f970679,0x32a76eda
  416174:	scas   al,BYTE PTR es:[edi]
  416175:	arpl   WORD PTR [esi+0x48],si
  416178:	(bad)
  41617b:	dec    eax
  41617c:	test   eax,0xeec700d6
  416181:	in     al,0x6a
  416183:	and    DWORD PTR [ebp-0x6cbe7632],eax
  416189:	(bad)  
  41618a:	data16 (bad) 
  41618d:	lahf   
  41618e:	out    0x1e,al
  416190:	std    
  416191:	jmp    0x4161ab
  416193:	arpl   bp,cx
  416195:	cmp    ecx,DWORD PTR [esi+0x691e9c11]
  41619b:	(bad)  
  41619c:	xchg   ecx,eax
  41619d:	mov    dl,0xff
  41619f:	out    0x2c,al
  4161a1:	(bad)  
  4161a2:	ins    BYTE PTR es:[edi],dx
  4161a3:	retf   0xcce7
  4161a6:	or     al,0x2b
  4161a8:	(bad)  
  4161a9:	stc    
  4161aa:	dec    esp
  4161ab:	jp     0x41621f
  4161ad:	and    dl,cl
  4161af:	test   eax,0xed292416
  4161b4:	push   ecx
  4161b5:	pop    eax
  4161b6:	or     eax,0xef30ba7d
  4161bb:	or     al,0x93
  4161bd:	ins    DWORD PTR es:[edi],dx
  4161be:	pop    ebx
  4161bf:	adc    eax,0x88caad27
  4161c4:	cmc    
  4161c5:	ja     0x416199
  4161c7:	(bad)  
  4161c8:	jmp    0xd59b2580
  4161cd:	(bad)  
  4161ce:	push   ax
  4161d0:	nop
  4161d1:	xlat   BYTE PTR ds:[ebx]
  4161d2:	repz sub eax,0xacf8ab07
  4161d8:	(bad)  [ebx+0x3a96fce6]
  4161de:	jae    0x416186
  4161e0:	sahf   
  4161e1:	xchg   al,dl
  4161e3:	add    al,cl
  4161e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e6:	mov    esi,0xbad42e68
  4161eb:	adc    BYTE PTR [ecx],0xc2
  4161ee:	pusha  
  4161ef:	lahf   
  4161f0:	test   al,0x78
  4161f2:	cwde   
  4161f3:	test   BYTE PTR [edx+0x47],ah
  4161f6:	mov    ebp,0x89c7c469
  4161fb:	shl    DWORD PTR ds:0x8eaa4be6,0x63
  416202:	es pop edi
  416204:	shr    DWORD PTR [edx],0x13
  416207:	jg     0x416256
  416209:	fimul  WORD PTR [esi-0x1b73e706]
  41620f:	mov    al,ds:0x1dca89a
  416214:	dec    edx
  416215:	adc    al,0xe6
  416217:	rol    BYTE PTR [esi+0x6e438d53],0x6b
  41621e:	cdq    
  41621f:	mov    dl,0x9
  416221:	sahf   
  416222:	push   es
  416223:	mov    edx,0x1df87097
  416228:	or     DWORD PTR [esi-0x5ed8de42],edx
  41622e:	and    bh,BYTE PTR [ecx+edi*4]
  416231:	retf   0xc31d
  416234:	clc    
  416235:	imul   ecx,edx,0xfffffff0
  416238:	(bad)  
  416239:	out    dx,al
  41623a:	sub    DWORD PTR [edx],ebp
  41623c:	ret    
  41623d:	and    DWORD PTR ds:[edi],edx
  416240:	and    ch,BYTE PTR [esi+0x44]
  416243:	mov    ds:0x8a3ec5b0,eax
  416248:	adc    cl,BYTE PTR [edx+0x700fabdd]
  41624e:	mov    bh,0xc7
  416250:	popa   
  416251:	scas   eax,DWORD PTR es:[edi]
  416252:	mov    DWORD PTR [edi+0x67262182],ebp
  416258:	adc    eax,edi
  41625a:	push   edx
  41625b:	push   edi
  41625c:	stc    
  41625d:	jmp    0x129:0x105cbd09
  416264:	je     0x416260
  416266:	es clc 
  416268:	adc    eax,0xa0e2e3c
  41626d:	sbb    al,0xdb
  41626f:	pop    esi
  416270:	dec    ebp
  416271:	inc    eax
  416272:	out    0x38,eax
  416274:	cmp    BYTE PTR ds:0x46748588,0xf3
  41627b:	scas   al,BYTE PTR es:[edi]
  41627c:	enter  0x2024,0xdc
  416280:	cwde   
  416281:	mov    WORD PTR [ecx+0x32fcf0f3],ss
  416287:	into   
  416288:	(bad)  
  416289:	in     al,0x6e
  41628b:	sti    
  41628c:	adc    eax,0xdd473c5f
  416291:	repz or eax,0x1d33d28d
  416297:	jb     0x4162e9
  416299:	sub    eax,0x9fc0a93
  41629e:	sbb    BYTE PTR [ebp+0x178fe93],ah
  4162a4:	hlt    
  4162a5:	jmp    0xaa03:0xd42438fd
  4162ac:	xor    BYTE PTR [ebp+0x14],al
  4162af:	sub    edi,DWORD PTR [ebx]
  4162b1:	sbb    DWORD PTR [eax-0x31f36b3d],eax
  4162b7:	pop    eax
  4162b8:	pop    esi
  4162b9:	and    al,0x93
  4162bb:	hlt    
  4162bc:	or     al,BYTE PTR [eax+eax*4-0x43]
  4162c0:	pusha  
  4162c1:	lea    ecx,[eax+0x6e]
  4162c4:	mov    ds:0x1481c2e0,eax
  4162c9:	mov    WORD PTR [ebx+0x60835742],ss
  4162cf:	cmp    al,0x37
  4162d1:	push   ebx
  4162d2:	popf   
  4162d3:	adc    eax,0x7a4a9eba
  4162d8:	mov    ecx,0x9314029a
  4162dd:	cli    
  4162de:	mov    bl,0x52
  4162e0:	adc    BYTE PTR [esp+eax*1-0x3827464d],bh
  4162e7:	int    0x92
  4162e9:	or     bh,BYTE PTR [ebx+ebx*2+0xf55fcb0]
  4162f0:	mov    ss,WORD PTR [esi+ecx*1-0x1c]
  4162f4:	cwde   
  4162f5:	aaa    
  4162f6:	pop    es
  4162f7:	call   0xa600e76
  4162fc:	and    al,0xc6
  4162fe:	push   edx
  4162ff:	out    0x5a,al
  416301:	fist   DWORD PTR [ebx+0x2]
  416304:	into   
  416305:	jnp    0x416336
  416307:	fst    QWORD PTR [esi+0x79c89b67]
  41630d:	jmp    0x1265:0xb0f82d71
  416314:	fmul   st,st(0)
  416316:	and    al,0x49
  416318:	mov    dh,0x4f
  41631a:	sar    BYTE PTR [edi-0x1fc78437],0x23
  416321:	push   edi
  416322:	jb     0x4162f4
  416324:	dec    edi
  416325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416326:	xchg   ecx,eax
  416327:	mov    edx,0xa1cf9b5b
  41632c:	hlt    
  41632d:	mov    ds:0x1a338561,eax
  416332:	xchg   BYTE PTR [ebx+0x3f],cl
  416335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416336:	sar    edi,cl
  416338:	rcl    ah,cl
  41633a:	xchg   edi,eax
  41633b:	imul   BYTE PTR [ecx-0x74]
  41633e:	jmp    0x68ff:0xbab14352
  416345:	clc    
  416346:	mov    eax,0xc8ac0713
  41634b:	mov    eax,ds:0x76486a93
  416350:	popa   
  416351:	sbb    eax,0xbd1873fa
  416356:	bound  esi,QWORD PTR [ebx-0x31a30d8a]
  41635c:	repz fcomp QWORD PTR [ebx*4+0x4049d476]
  416364:	cmp    eax,0xf019846f
  416369:	jp     0x416319
  41636b:	ror    ebp,cl
  41636d:	loope  0x41630c
  41636f:	clc    
  416370:	and    eax,esp
  416372:	xchg   edx,eax
  416373:	push   edi
  416374:	mov    bh,0xd4
  416376:	stos   DWORD PTR es:[edi],eax
  416377:	adc    BYTE PTR [eax+eax*8+0x3f],al
  41637b:	add    esi,edi
  41637d:	mov    ds,WORD PTR [edx+edx*4]
  416380:	inc    esi
  416381:	xor    esp,DWORD PTR [edi+0x1d]
  416384:	iret   
  416385:	js     0x416394
  416387:	xor    BYTE PTR [ebp+0x29819c65],bl
  41638d:	mov    bh,0x56
  41638f:	imul   edi,ebx,0x40441da4
  416395:	jns    0x4163ad
  416397:	xlat   BYTE PTR ds:[ebx]
  416398:	pop    eax
  416399:	lahf   
  41639a:	and    bl,BYTE PTR [edx-0x1]
  41639d:	jnp    0x416379
  41639f:	sub    bl,BYTE PTR [ecx-0x538446bd]
  4163a5:	add    bh,cl
  4163a7:	lods   al,BYTE PTR ds:[esi]
  4163a8:	inc    esi
  4163a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163aa:	(bad)  
  4163ab:	stc    
  4163ac:	call   FWORD PTR [ecx-0x1c]
  4163af:	adc    eax,0x1b081689
  4163b4:	xor    ebx,DWORD PTR [ebp+edi*8-0x4a]
  4163b8:	or     DWORD PTR [edi+0xe],0xffffff9a
  4163bc:	jmp    0xecc473a3
  4163c1:	xchg   ebx,eax
  4163c2:	xchg   edx,eax
  4163c3:	stc    
  4163c4:	or     ebp,DWORD PTR [eax+0x1b]
  4163c7:	call   0xf73:0xf01cdd38
  4163ce:	and    BYTE PTR [eax+eax*4],ah
  4163d1:	cmc    
  4163d2:	adc    bh,BYTE PTR [ebx+0x29f18180]
  4163d8:	sbb    eax,0xbe197cfb
  4163dd:	cmp    ecx,DWORD PTR [ebp+edx*1-0x56497a81]
  4163e4:	xor    esp,edi
  4163e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163e7:	jl     0x4163fa
  4163e9:	mov    cl,0xe7
  4163eb:	out    dx,al
  4163ec:	test   DWORD PTR [edi+0x5e],0x74d48fd2
  4163f3:	fidiv  DWORD PTR [ecx-0x69]
  4163f6:	das    
  4163f7:	inc    ecx
  4163f8:	mov    eax,ds:0x4723b754
  4163fd:	xchg   esi,eax
  4163fe:	outs   dx,DWORD PTR ds:[esi]
  4163ff:	jl     0x4163c1
  416401:	or     al,0x18
  416403:	imul   edi,DWORD PTR [esp+ebp*4],0x1afeead3
  41640a:	int3   
  41640b:	call   0xaa288975
  416410:	mov    cl,0x3a
  416412:	dec    edx
  416413:	mov    edi,0x9e713c65
  416418:	imul   edx,DWORD PTR [eax+0x17409304],0xfc16d196
  416422:	mov    edi,0x5732d275
  416427:	fstp   TBYTE PTR [eax+eax*2-0x4906cf62]
  41642e:	and    DWORD PTR [edx-0x6f],edx
  416431:	pop    edx
  416432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416433:	les    ebx,FWORD PTR ds:0xdbc31bd
  416439:	and    al,0x81
  41643b:	adc    dl,cl
  41643d:	pop    esi
  41643e:	mov    eax,0xf9b31769
  416443:	inc    edx
  416444:	and    ah,0x77
  416447:	lahf   
  416448:	(bad)  
  416449:	cmp    al,0x56
  41644b:	loop   0x4164b6
  41644d:	int3   
  41644e:	adc    dh,BYTE PTR [ebx+edx*8+0x28d5b30c]
  416455:	mov    esp,DWORD PTR [ebp-0x4a864ad3]
  41645b:	mov    eax,ds:0xf7a3419f
  416460:	(bad)  
  416464:	xchg   ebp,eax
  416465:	and    DWORD PTR [ebx],0x90ef41ed
  41646b:	in     al,dx
  41646c:	cmp    al,0x60
  41646e:	dec    ebp
  41646f:	and    BYTE PTR [esi+0x1aa771bc],cl
  416475:	or     eax,0x596c01af
  41647a:	bound  eax,QWORD PTR [edx+esi*4]
  41647d:	and    ah,BYTE PTR [esi-0x3e53c5f6]
  416483:	mov    edi,0x10c157e1
  416488:	add    BYTE PTR fs:[edi],dl
  41648b:	mov    cl,0xb2
  41648d:	mov    BYTE PTR [eax-0x50e9a14d],bh
  416493:	lock add bl,al
  416496:	pop    ebp
  416497:	cwde   
  416498:	jo     0x4164bb
  41649a:	jg     0x41642d
  41649c:	lds    ecx,FWORD PTR [edx+edx*8+0xc08e98f]
  4164a3:	dec    ebx
  4164a4:	jns    0x416439
  4164a6:	push   edi
  4164a7:	add    esi,DWORD PTR [ebp+0x79d05377]
  4164ad:	inc    ecx
  4164ae:	inc    esp
  4164af:	mov    ebx,0x4d3801f8
  4164b4:	outs   dx,BYTE PTR ds:[esi]
  4164b5:	scas   al,BYTE PTR es:[edi]
  4164b6:	push   ss
  4164b7:	shl    BYTE PTR [eax],cl
  4164b9:	inc    esi
  4164ba:	pop    ds
  4164bb:	mov    DWORD PTR [esi+0x9],edx
  4164be:	mov    ds:0x8b060b7,eax
  4164c3:	loopne 0x416503
  4164c5:	cdq    
  4164c6:	adc    ebp,DWORD PTR [ebp-0x39]
  4164c9:	fidiv  WORD PTR [edi-0x2b]
  4164cc:	add    dh,BYTE PTR [ebp-0x1e2c4d28]
  4164d2:	push   cs
  4164d3:	call   0x2e197b9
  4164d8:	push   ss
  4164d9:	call   FWORD PTR [esi+0x519089b2]
  4164df:	repnz rol DWORD PTR [ebp+0x319432c3],0x63
  4164e7:	ja     0x4164bc
  4164e9:	or     BYTE PTR [edi+ebx*1],bl
  4164ec:	mov    cl,0xf9
  4164ee:	mov    edi,0xaa43dc64
  4164f3:	xlat   BYTE PTR ds:[ebx]
  4164f4:	loopne 0x4164cb
  4164f6:	inc    ebx
  4164f7:	push   ss
  4164f8:	sub    dl,dh
  4164fa:	xchg   ecx,eax
  4164fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fc:	xchg   ebp,eax
  4164fd:	mov    cl,BYTE PTR [ecx-0x56]
  416500:	cmc    
  416501:	jnp    0x4164b6
  416503:	dec    eax
  416504:	add    edi,DWORD PTR [ebx+0x77]
  416507:	sti    
  416508:	mov    eax,0x6e3d192f
  41650d:	ficom  DWORD PTR [edi-0xf]
  416510:	sub    bl,BYTE PTR [ebx]
  416512:	enter  0xfe49,0x62
  416516:	inc    eax
  416517:	pushf  
  416518:	test   BYTE PTR [edx-0x80],ah
  41651b:	jle    0x4164ac
  41651d:	cmp    ebp,edi
  41651f:	or     DWORD PTR [ebx+eax*4+0xc944856],ebp
  416526:	cmc    
  416527:	lahf   
  416528:	in     al,0x5d
  41652a:	mov    eax,ds:0x6befc7c2
  41652f:	in     al,0x91
  416531:	xchg   ebx,eax
  416532:	jge    0x416528
  416534:	les    esi,FWORD PTR [ebp+ebx*2-0x56cb93f9]
  41653b:	and    ebx,DWORD PTR [eax+0x4fad05c2]
  416541:	or     al,0xe3
  416543:	(bad)  
  416544:	fcom   DWORD PTR [edi+0x73]
  416547:	fdiv   DWORD PTR [ebp-0x69e257fb]
  41654d:	push   ecx
  41654e:	test   eax,0x9ddd58ab
  416553:	or     BYTE PTR [edx-0x25],bl
  416556:	std    
  416557:	outs   dx,BYTE PTR ds:[esi]
  416558:	and    eax,0x5b419531
  41655d:	and    DWORD PTR [ebx+ebp*1-0x37],esi
  416561:	enter  0x6842,0x2a
  416565:	fistp  WORD PTR [eax]
  416567:	xor    eax,0x6b6daa6
  41656c:	pop    ebp
  41656d:	add    ah,BYTE PTR [esp+edx*4+0x24036068]
  416574:	or     DWORD PTR [eax-0x3a48a81f],0xc2e97dc7
  41657e:	(bad)  
  41657f:	call   FWORD PTR [ecx-0x24]
  416582:	jmp    0x3d96:0xbf768cc6
  416589:	jae    0x41652e
  41658b:	push   ss
  41658c:	cmc    
  41658d:	sub    al,0xad
  41658f:	sbb    al,0xea
  416591:	jl     0x416612
  416593:	aas    
  416594:	stos   DWORD PTR es:[edi],eax
  416595:	adc    ah,al
  416597:	adc    DWORD PTR [eax+ebp*1],edx
  41659a:	std    
  41659b:	cs call 0x8e92:0x85206bfe
  4165a3:	xor    al,0x6f
  4165a5:	out    0xf2,al
  4165a7:	jae    0x4165c3
  4165a9:	imul   edx,ebx,0x31
  4165ac:	pop    esp
  4165ad:	cmp    eax,0xe33d91de
  4165b2:	push   ebx
  4165b3:	xchg   DWORD PTR [ebx],edx
  4165b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165b6:	imul   ebp,DWORD PTR [edi],0xffffffb6
  4165b9:	pop    ss
  4165ba:	sbb    eax,0x28be225
  4165bf:	je     0x416632
  4165c1:	adc    BYTE PTR [ebx],bh
  4165c3:	jno    0x416603
  4165c5:	pop    edx
  4165c6:	mul    DWORD PTR [edx+edx*1]
  4165c9:	push   esi
  4165ca:	adc    al,0xba
  4165cc:	dec    edi
  4165cd:	jg     0x4165be
  4165cf:	sub    al,al
  4165d1:	push   esp
  4165d2:	(bad)  
  4165d4:	pop    ecx
  4165d5:	sbb    BYTE PTR [ebx-0x7e],bl
  4165d8:	and    ah,BYTE PTR [ecx+edi*4]
  4165db:	jo     0x416561
  4165dd:	rol    DWORD PTR [edx],cl
  4165df:	push   edi
  4165e0:	test   al,0x74
  4165e2:	das    
  4165e3:	fs into 
  4165e5:	fld    TBYTE PTR [ebp-0x2a2ef762]
  4165eb:	xchg   BYTE PTR [ebx],bl
  4165ed:	fdivr  DWORD PTR [edx-0x62378204]
  4165f3:	or     BYTE PTR [eax+0x52279dda],bl
  4165f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165fa:	dec    ebx
  4165fb:	mov    dl,0xc1
  4165fd:	das    
  4165fe:	popf   
  4165ff:	(bad)  
  416600:	cdq    
  416601:	cmp    ch,BYTE PTR [edx]
  416603:	call   0xe40b:0xf7c0efc2
  41660a:	outs   dx,DWORD PTR ds:[esi]
  41660b:	dec    ecx
  41660c:	ret    
  41660d:	(bad)  
  41660e:	pop    ebp
  41660f:	dec    BYTE PTR [ecx+0x156dc433]
  416615:	pop    ebx
  416616:	add    DWORD PTR [edx+0x29],esp
  416619:	lea    esp,[ebx-0x5f]
  41661c:	adc    dh,bh
  41661e:	les    ebp,FWORD PTR [esi]
  416620:	inc    esp
  416621:	jle    0x4165ac
  416623:	daa    
  416624:	jnp    0x416648
  416626:	cs test bh,al
  416629:	call   0x3513:0xffda5703
  416630:	sub    eax,0x150f9bdf
  416635:	inc    ebp
  416636:	ja     0x4165f1
  416638:	enter  0x5f7,0x26
  41663c:	imul   edi,DWORD PTR [edx-0x47],0x39fdf729
  416643:	outs   dx,DWORD PTR ds:[esi]
  416644:	ins    DWORD PTR es:[edi],dx
  416645:	xlat   BYTE PTR ds:[ebx]
  416646:	pop    esi
  416647:	push   edi
  416648:	xchg   BYTE PTR [esi+0x8],dh
  41664b:	xor    DWORD PTR [eax+0x6fb61bda],esp
  416651:	inc    edx
  416652:	sbb    bh,BYTE PTR [ecx+esi*8+0x5f]
  416656:	cmc    
  416657:	loopne 0x41661c
  416659:	js     0x416630
  41665b:	pushf  
  41665c:	jl     0x4165e9
  41665e:	pushf  
  41665f:	mov    cs,WORD PTR [edi]
  416661:	and    DWORD PTR [ebx-0x48],edx
  416664:	xchg   ecx,eax
  416665:	imul   eax,DWORD PTR [ebx],0x36
  416668:	and    BYTE PTR [ebx],cl
  41666a:	jae    0x4166a0
  41666c:	ins    BYTE PTR es:[edi],dx
  41666d:	xor    cl,al
  41666f:	pop    ebx
  416670:	ins    BYTE PTR es:[edi],dx
  416671:	inc    edx
  416672:	or     al,0x20
  416674:	mov    eax,0x54288001
  416679:	xchg   ebp,eax
  41667a:	adc    DWORD PTR [ebp+0x3f9d618e],esi
  416680:	mov    ch,0xd8
  416682:	fwait
  416683:	mov    bh,0xdd
  416685:	cli    
  416686:	mov    bh,BYTE PTR [esi]
  416688:	dec    ecx
  416689:	in     eax,0x63
  41668b:	gs jp  0x416678
  41668e:	sub    al,0xb9
  416690:	adc    eax,0x2c2bbb54
  416695:	sbb    eax,0x2882458a
  41669a:	int3   
  41669b:	push   ebx
  41669c:	sub    eax,0x41b773c4
  4166a1:	xchg   ebp,ebx
  4166a3:	lock stos BYTE PTR es:[edi],al
  4166a5:	push   es
  4166a6:	xchg   esi,eax
  4166a7:	push   esp
  4166a8:	dec    edi
  4166a9:	(bad)  [eax+0x4f]
  4166ac:	mov    ds:0x4b59bbd2,eax
  4166b1:	jp     0x4166ea
  4166b3:	lahf   
  4166b4:	inc    ecx
  4166b5:	jg     0x4166d1
  4166b7:	add    al,0xc9
  4166ba:	mov    ebx,0xaedb278e
  4166bf:	ret    0x44a4
  4166c2:	mov    DWORD PTR [edi-0x60],edi
  4166c5:	mov    edi,DWORD PTR [edx+0x5cb68a57]
  4166cb:	jns    0x416670
  4166cd:	das    
  4166ce:	or     eax,0xf8555c88
  4166d3:	jmp    0xb1a049d9
  4166d8:	cwde   
  4166d9:	dec    ebp
  4166da:	cli    
  4166db:	cmp    al,0x54
  4166dd:	outs   dx,BYTE PTR ds:[esi]
  4166de:	pop    esi
  4166df:	add    ah,BYTE PTR [edi-0x293662c9]
  4166e5:	gs mov eax,0xc9f2f9f4
  4166eb:	jmp    0xfb5b:0x44511d31
  4166f2:	outs   dx,BYTE PTR ds:[esi]
  4166f3:	xchg   DWORD PTR [ecx+0x12],ebx
  4166f6:	adc    eax,0x5adf0513
  4166fb:	retf   
  4166fc:	or     eax,DWORD PTR [edi-0x2b6d7518]
  416702:	push   ss
  416703:	dec    edx
  416704:	xchg   edx,eax
  416705:	shl    esi,1
  416707:	push   edx
  416708:	or     edx,ebp
  41670a:	fcmovnu st,st(5)
  41670c:	mov    eax,ds:0x30c8a7d4
  416711:	lock mov dh,0xd1
  416714:	jae    0x4166c7
  416716:	mov    ah,dh
  416718:	and    DWORD PTR [esi],esi
  41671a:	jb     0x4166c7
  41671c:	(bad)  
  41671d:	dec    ebp
  41671e:	fild   WORD PTR [ecx+ebp*2+0x61]
  416722:	cmp    DWORD PTR [ebp+esi*8+0x78],eax
  416726:	dec    esi
  416727:	test   al,0xe5
  416729:	(bad)  
  41672a:	xchg   esi,eax
  41672b:	dec    ebp
  41672c:	mov    BYTE PTR [ebp-0x28cf3344],0x34
  416733:	aad    0xc0
  416735:	test   DWORD PTR [esi+0x4c5dd8f0],ecx
  41673b:	sub    ebx,DWORD PTR [edi-0x65]
  41673e:	cmp    al,0xc5
  416740:	xor    al,0x52
  416742:	fxch   st(4)
  416744:	dec    esi
  416745:	dec    ebp
  416746:	push   ecx
  416747:	test   eax,0xf6cefc2
  41674c:	inc    esp
  41674d:	and    DWORD PTR [eax+0xd],ecx
  416750:	fisubr DWORD PTR [ebp-0x63]
  416753:	lahf   
  416754:	addr16 retf 
  416756:	sbb    ch,bl
  416758:	lea    eax,[edx+0x7b]
  41675b:	dec    ebp
  41675c:	pop    ebx
  41675d:	mov    dh,cl
  41675f:	test   BYTE PTR [ecx],ch
  416761:	or     ch,dh
  416763:	mov    ebx,0xb62413
  416768:	cwde   
  416769:	repz out 0x5d,eax
  41676c:	mov    al,0xfc
  41676e:	jge    0x41678e
  416770:	pop    ds
  416771:	cmp    DWORD PTR [edi],ebx
  416773:	cmp    al,0xc8
  416775:	dec    ebx
  416776:	nop
  416777:	push   esp
  416778:	mov    edx,0xcbd683d5
  41677d:	out    dx,al
  41677e:	add    DWORD PTR [ecx],edx
  416780:	sub    eax,0xe42629b1
  416785:	mov    al,0x4e
  416787:	inc    edi
  416788:	dec    ecx
  416789:	stos   DWORD PTR es:[edi],eax
  41678a:	sub    al,0x85
  41678c:	dec    ebx
  41678d:	inc    esp
  41678e:	mov    esi,0xe2e99f21
  416793:	sub    eax,0x1ca20db7
  416798:	shl    DWORD PTR [edi+0x4e1aa551],cl
  41679e:	cwde   
  41679f:	adc    al,0x60
  4167a1:	icebp  
  4167a2:	and    DWORD PTR [ebx],ebx
  4167a4:	data16 aad 0x28
  4167a7:	xchg   edx,eax
  4167a8:	dec    ebx
  4167a9:	popf   
  4167aa:	ret    0xdaa5
  4167ad:	push   ss
  4167ae:	in     eax,dx
  4167af:	out    dx,eax
  4167b0:	xor    DWORD PTR [ebp+0x48],edx
  4167b3:	pop    edx
  4167b4:	js     0x4167e8
  4167b6:	cmp    al,0xf2
  4167b8:	mov    ds:0xb8ba05b7,al
  4167bd:	jge    0x416810
  4167bf:	mov    bh,0x75
  4167c1:	ret    
  4167c2:	stc    
  4167c3:	push   esi
  4167c4:	dec    ecx
  4167c5:	sbb    DWORD PTR [ecx-0x4fd02c85],eax
  4167cb:	sbb    al,0x1
  4167cd:	or     al,0xfa
  4167cf:	out    dx,eax
  4167d0:	sbb    al,0xae
  4167d2:	fdivr  st(6),st
  4167d4:	shl    BYTE PTR [esi],cl
  4167d6:	hlt    
  4167d7:	pop    esi
  4167d8:	daa    
  4167d9:	mov    esi,0x2c6ff768
  4167de:	aam    0x86
  4167e0:	repz pop ecx
  4167e2:	xor    edx,edi
  4167e4:	add    al,0x1f
  4167e6:	sti    
  4167e7:	in     al,0xbb
  4167e9:	retf   0xb509
  4167ec:	adc    ebx,DWORD PTR [edi+esi*1-0x59]
  4167f0:	push   esp
  4167f1:	push   es
  4167f2:	inc    ebp
  4167f3:	addr16 (bad) 
  4167f6:	dec    edx
  4167f7:	and    al,0xf0
  4167f9:	cmp    ecx,edx
  4167fb:	outs   dx,BYTE PTR ds:[esi]
  4167fc:	repnz mov dl,0x28
  4167ff:	push   ecx
  416800:	cs jb  0x41681a
  416803:	push   es
  416804:	out    dx,al
  416805:	dec    esp
  416806:	repz call 0xec82:0xb192bca3
  41680e:	sbb    al,0x6c
  416810:	xchg   esi,esi
  416812:	sub    DWORD PTR [esi],ecx
  416814:	popf   
  416815:	lea    ebp,[ebx+edx*1-0x6e]
  416819:	ins    DWORD PTR es:[edi],dx
  41681a:	jp     0x416837
  41681c:	mov    cs,WORD PTR [esi+0x4a5afc73]
  416822:	test   al,0xc
  416824:	jbe    0x4167bd
  416826:	out    0x7c,eax
  416828:	addr16 aad 0x54
  41682b:	mov    bl,0xc5
  41682d:	xlat   BYTE PTR ds:[ebx]
  41682e:	xor    eax,0x28c6550f
  416833:	sub    dh,0xa
  416836:	add    eax,ecx
  416838:	repnz mov esp,0x151039d2
  41683e:	push   eax
  41683f:	shl    BYTE PTR [ecx-0x5e],1
  416842:	mov    ch,0x5d
  416844:	jne    0x4167fe
  416846:	mov    eax,ds:0xab7e080a
  41684b:	xor    al,0x2a
  41684d:	stc    
  41684e:	les    edx,FWORD PTR [edi+eiz*2+0x2d371d80]
  416855:	mov    al,0x33
  416857:	setno  BYTE PTR [esi+0x27af92da]
  41685e:	into   
  41685f:	inc    esi
  416860:	xchg   edi,eax
  416861:	or     ah,ah
  416863:	jnp    0x4168d2
  416865:	sbb    al,0xa4
  416867:	repz pop esp
  416869:	or     DWORD PTR ss:[edx+0x434ff83e],esi
  416870:	mov    edi,0xcefd846a
  416875:	je     0x416889
  416877:	test   DWORD PTR [ebx+0x49],ecx
  41687a:	or     al,0x42
  41687c:	jns    0x41680c
  41687e:	lods   al,BYTE PTR ds:[esi]
  41687f:	out    0x84,eax
  416881:	test   edx,edi
  416883:	pop    es
  416884:	ret    
  416885:	lods   al,BYTE PTR ds:[esi]
  416886:	mov    edx,0x8df3c2e2
  41688b:	fwait
  41688c:	xor    ch,0xea
  41688f:	loopne 0x416902
  416891:	(bad)  
  416892:	call   0xe7b38e33
  416897:	test   ebx,edx
  416899:	arpl   WORD PTR [ecx-0x51],sp
  41689c:	lock jae 0x4168f0
  41689f:	pop    ebp
  4168a0:	bound  ebp,QWORD PTR [edi-0x67]
  4168a3:	imul   ecx,DWORD PTR [esi-0x5b],0xffffffa0
  4168a7:	std    
  4168a8:	out    0xad,al
  4168aa:	cs jecxz 0x416927
  4168ad:	loop   0x416872
  4168af:	pop    ds
  4168b0:	add    al,0xc3
  4168b2:	pop    esi
  4168b3:	adc    al,0xc0
  4168b5:	dec    ecx
  4168b6:	fnstenv [ebp+0x22]
  4168b9:	inc    esi
  4168ba:	out    0x64,eax
  4168bc:	lea    edi,[esi]
  4168be:	adc    ch,bl
  4168c0:	scas   al,BYTE PTR es:[edi]
  4168c1:	sbb    esp,DWORD PTR [ebx+edx*2-0x6d]
  4168c5:	mov    edx,eax
  4168c7:	jle    0x416879
  4168c9:	je     0x416944
  4168cb:	inc    ebx
  4168cc:	xchg   edi,eax
  4168cd:	sbb    BYTE PTR [edi-0x65c59d63],al
  4168d3:	mov    ch,0x56
  4168d5:	xchg   cl,ch
  4168d7:	(bad)  
  4168d9:	les    ecx,FWORD PTR [esi+0x5e8224bf]
  4168df:	imul   edi,DWORD PTR [edx],0x6
  4168e2:	iret   
  4168e3:	adc    bl,ch
  4168e5:	or     al,0xff
  4168e7:	dec    ebp
  4168e8:	adc    DWORD PTR [eax+0x2e],esi
  4168eb:	adc    BYTE PTR [eax],ch
  4168ed:	pushf  
  4168ee:	xchg   edi,eax
  4168ef:	push   0x1ab4d3ca
  4168f4:	xlat   BYTE PTR ds:[ebx]
  4168f5:	loop   0x4168d1
  4168f7:	sub    cl,BYTE PTR [ebp+0x6c2e9537]
  4168fd:	fsub   DWORD PTR [ebx]
  4168ff:	daa    
  416900:	push   eax
  416901:	mov    ecx,0x2798bdc8
  416906:	es xor eax,0x1134d7a5
  41690c:	xlat   BYTE PTR ds:[ebx]
  41690d:	jle    0x4168fb
  41690f:	aam    0xa9
  416911:	out    dx,al
  416912:	lock jb 0x416972
  416915:	mov    esi,0xfc20b39b
  41691a:	jo     0x416957
  41691c:	add    al,0x59
  41691e:	adc    al,cl
  416920:	nop
  416921:	xor    al,BYTE PTR [ebx-0xa]
  416924:	jl     0x41690c
  416926:	pushf  
  416927:	cmp    DWORD PTR [ebp-0x4c82083a],esi
  41692d:	scas   eax,DWORD PTR es:[edi]
  41692e:	jl     0x41691c
  416930:	pusha  
  416931:	sub    BYTE PTR [ecx-0x51],cl
  416934:	jmp    0x416941
  416936:	out    dx,eax
  416937:	add    DWORD PTR ds:0x620a2f26,eax
  41693d:	pop    ecx
  41693e:	cmp    bh,bh
  416940:	in     eax,0xe3
  416942:	mov    esp,ebp
  416944:	in     eax,dx
  416945:	dec    BYTE PTR ds:0xbfdb6743
  41694b:	test   eax,0x3ab21ccc
  416950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416951:	test   BYTE PTR [edi-0xafbfd73],0x0
  416958:	push   ebx
  416959:	fnstenv [ebp-0x56e415e8]
  41695f:	lock pop edi
  416961:	pop    ss
  416962:	mov    al,ds:0x38b0f97b
  416967:	xor    eax,0x7fc4f8f3
  41696c:	mov    ebp,0xed411981
  416971:	jle    0x4169a2
  416973:	mov    esi,DWORD PTR [edx]
  416975:	mov    dl,0x27
  416977:	std    
  416978:	xor    cl,dl
  41697a:	(bad)  
  41697b:	out    0x82,eax
  41697d:	mov    edx,0x723a195a
  416982:	inc    edx
  416983:	mov    ebx,0x8d88637e
  416988:	jmp    0x754d3dfb
  41698d:	lahf   
  41698e:	out    0x6c,al
  416990:	out    dx,al
  416991:	dec    ecx
  416992:	mov    edx,DWORD PTR ds:0xa9b31b1a
  416998:	push   0x8e7890f4
  41699d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41699e:	(bad)  
  41699f:	sub    bh,BYTE PTR ds:0x92a9e69e
  4169a5:	pop    es
  4169a6:	and    eax,0x28dc68ce
  4169ab:	sahf   
  4169ac:	pop    edi
  4169ad:	mov    ecx,0xcf7cee0d
  4169b2:	push   ebp
  4169b3:	mov    WORD PTR [ecx],ss
  4169b5:	enter  0xf4c2,0x37
  4169b9:	sub    eax,esi
  4169bb:	or     ebp,DWORD PTR [esi+ebp*2-0xe379601]
  4169c2:	or     al,0x57
  4169c4:	mov    DWORD PTR [esi+0x26f63487],esp
  4169ca:	mov    ds:0xd3b71d15,al
  4169cf:	shl    DWORD PTR cs:[edx+0x4e548ba9],cl
  4169d6:	test   dh,bl
  4169d8:	enter  0x1fef,0x69
  4169dc:	xchg   edi,eax
  4169dd:	adc    al,BYTE PTR [edi-0x59bc2fe5]
  4169e3:	xchg   ebx,eax
  4169e4:	test   eax,0xb5a9df99
  4169e9:	inc    esp
  4169ea:	(bad)  
  4169eb:	retf   
  4169ec:	fs push ds
  4169ee:	nop
  4169ef:	jge    0x4169a6
  4169f1:	push   ebp
  4169f2:	aad    0x84
  4169f4:	test   eax,0x2732c7b8
  4169f9:	sar    BYTE PTR [esi+0x11],1
  4169fc:	pop    esi
  4169fd:	pop    dx
  4169ff:	pushf  
  416a00:	data16 mov bl,0xab
  416a03:	rcr    eax,1
  416a05:	push   cs
  416a06:	adc    BYTE PTR [edi],bl
  416a08:	dec    ecx
  416a09:	push   esp
  416a0a:	inc    ecx
  416a0b:	mov    ds:0x84464eb4,al
  416a10:	in     eax,dx
  416a11:	test   dh,al
  416a13:	test   DWORD PTR [edx-0xb463770],ecx
  416a19:	xor    eax,0xac08a2bc
  416a1e:	bound  esi,QWORD PTR [edx]
  416a20:	loop   0x416a69
  416a22:	inc    ebp
  416a23:	and    esi,esp
  416a25:	push   ecx
  416a26:	ret    0x4728
  416a29:	in     eax,0xa9
  416a2b:	pop    esi
  416a2c:	or     cl,dl
  416a2e:	cmp    BYTE PTR [esi+0xef03007],bh
  416a34:	pop    es
  416a35:	xor    eax,edx
  416a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a38:	xchg   ecx,eax
  416a39:	test   eax,0x2e34a10a
  416a3e:	mov    edx,0x9da5da18
  416a43:	push   0xc914d8a
  416a48:	sub    eax,0x8e0ec6a3
  416a4d:	jl     0x416a19
  416a4f:	xor    ch,BYTE PTR [esi]
  416a51:	jl     0x416aa4
  416a53:	xchg   BYTE PTR [ebp-0x21],al
  416a56:	push   esp
  416a57:	sbb    edx,DWORD PTR [ecx-0x1ce6ba15]
  416a5d:	push   ebp
  416a5e:	pop    ebx
  416a5f:	call   0x8aae8ca6
  416a64:	loopne 0x416a44
  416a66:	adc    eax,DWORD PTR [ebx]
  416a68:	mov    ebp,0xd271e2c5
  416a6d:	int    0x7c
  416a6f:	jno    0x416abe
  416a71:	leave  
  416a72:	sub    BYTE PTR [ebx-0x7c],bl
  416a75:	les    ebx,FWORD PTR [ecx-0x66cb2c37]
  416a7b:	fs (bad) 
  416a7d:	mov    ?,WORD PTR [ebp-0x6047d607]
  416a83:	mov    dh,0x12
  416a85:	or     edx,DWORD PTR [eax+0x66ff1f7c]
  416a8b:	xor    esi,edx
  416a8d:	sahf   
  416a8e:	dec    ebp
  416a8f:	jno    0x416a19
  416a91:	and    DWORD PTR [ebx-0x45],esp
  416a94:	(bad)  
  416a95:	fisub  WORD PTR [edx+0x23]
  416a98:	push   ebp
  416a99:	mov    ebp,0x147b7753
  416a9e:	adc    edx,DWORD PTR [esi-0x5c02ef7e]
  416aa4:	cs push edx
  416aa6:	lods   al,BYTE PTR ds:[esi]
  416aa7:	cmp    BYTE PTR [esi+0x22],ah
  416aaa:	and    ah,ah
  416aac:	and    bl,BYTE PTR [edi+edx*2-0x72]
  416ab0:	lods   al,BYTE PTR ds:[esi]
  416ab1:	ret    
  416ab2:	aas    
  416ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab4:	rol    BYTE PTR [ebx+0x52bc2b83],cl
  416aba:	fiadd  WORD PTR [edx-0x13c5eb38]
  416ac0:	icebp  
  416ac1:	inc    ah
  416ac3:	sbb    edx,ebp
  416ac5:	clc    
  416ac6:	add    eax,0xec5c399a
  416acb:	test   al,0xdd
  416acd:	xor    bl,BYTE PTR [ebx+0x8695f7d]
  416ad3:	ror    ebp,0x12
  416ad6:	in     eax,0x65
  416ad8:	mov    eax,ds:0xef21d257
  416add:	and    edx,ebx
  416adf:	cmp    al,0x6e
  416ae1:	out    dx,al
  416ae2:	cmp    DWORD PTR [ecx],0xfe4e2edc
  416ae8:	lds    ecx,FWORD PTR [ebx]
  416aea:	les    edi,FWORD PTR [edx-0x7c329459]
  416af0:	ja     0x416ad1
  416af2:	or     DWORD PTR [ecx+0x2a],edx
  416af5:	bnd js 0x416ae1
  416af8:	adc    BYTE PTR [ebp+eax*1+0x28d72e88],ch
  416aff:	pop    es
  416b00:	test   eax,0x2ae80950
  416b05:	mov    edx,0xd58ac30c
  416b0a:	sub    DWORD PTR [edx+eax*8+0x44100ede],edi
  416b11:	dec    esp
  416b12:	add    BYTE PTR [ebp+0x745301dd],dl
  416b18:	mov    DWORD PTR [ecx+eax*8-0xe],edi
  416b1c:	add    ah,dl
  416b1e:	and    ebp,DWORD PTR [edi+0x27579cad]
  416b24:	xchg   edi,eax
  416b25:	push   0x964aa657
  416b2a:	imul   edi,DWORD PTR [edx],0x5758081
  416b30:	jl     0x416b94
  416b32:	and    eax,0x81bdde73
  416b37:	xchg   ebp,eax
  416b38:	or     BYTE PTR [eax+esi*4-0x68],bl
  416b3c:	nop
  416b3d:	and    al,0x42
  416b3f:	sub    al,0x62
  416b41:	sbb    al,0xe5
  416b43:	xchg   WORD PTR [ebp+0x78],cx
  416b47:	icebp  
  416b48:	popw   ds
  416b4a:	mov    al,0x8b
  416b4c:	lods   eax,DWORD PTR ds:[esi]
  416b4d:	fwait
  416b4e:	neg    DWORD PTR [ecx*4+0x3b72bd7]
  416b55:	in     eax,0xb2
  416b57:	add    edx,ebx
  416b59:	lds    esi,FWORD PTR gs:[eax]
  416b5c:	pop    ecx
  416b5d:	lahf   
  416b5e:	out    dx,eax
  416b5f:	out    0x77,eax
  416b61:	xchg   edi,eax
  416b62:	mov    edx,0x356d78b8
  416b67:	mov    bh,0x86
  416b69:	mov    BYTE PTR [eax+0x4f0ce587],al
  416b6f:	cmc    
  416b70:	test   eax,0x68570078
  416b75:	pop    ds
  416b76:	jl     0x416b69
  416b78:	mov    bl,0x77
  416b7a:	adc    al,0x52
  416b7c:	outs   dx,BYTE PTR ds:[esi]
  416b7d:	pop    edx
  416b7e:	loope  0x416bdc
  416b80:	sar    ebx,1
  416b82:	sbb    ebx,DWORD PTR ss:[eax-0x63162273]
  416b89:	pusha  
  416b8a:	add    ecx,DWORD PTR cs:[ebx-0x78e7565c]
  416b91:	mov    edx,0x2da1612b
  416b96:	mov    edx,0xb337e58b
  416b9b:	shl    BYTE PTR [edi],cl
  416b9d:	call   0x580339fc
  416ba2:	sbb    ecx,esp
  416ba4:	je     0x416c16
  416ba6:	idiv   BYTE PTR [ebp-0x45841d6e]
  416bac:	mov    WORD PTR ds:0xcd661b1e,gs
  416bb2:	pusha  
  416bb3:	push   esp
  416bb4:	jno    0x416b97
  416bb6:	cmp    esp,DWORD PTR [edx+ebx*4+0x3f]
  416bba:	xor    cl,dh
  416bbc:	pop    ebp
  416bbd:	cmp    BYTE PTR [edx],dh
  416bbf:	test   al,0x64
  416bc1:	xchg   ecx,eax
  416bc2:	or     ah,BYTE PTR [eax-0x6170a3a2]
  416bc8:	call   DWORD PTR [esi+0x2124d96]
  416bce:	sbb    eax,0xbab58a1
  416bd3:	js     0x416bc0
  416bd5:	push   esi
  416bd6:	out    0x0,eax
  416bd8:	loope  0x416c40
  416bda:	add    ebp,DWORD PTR [ecx-0x69]
  416bdd:	mov    ecx,0x64d69f73
  416be2:	call   0xf0a5:0x6ea5d5d3
  416be9:	inc    esp
  416bea:	cmp    BYTE PTR [edx+esi*2-0x17a4de84],bl
  416bf1:	adc    bh,BYTE PTR [ebx-0x78656c36]
  416bf7:	leave  
  416bf8:	in     eax,0xde
  416bfa:	jae    0x416b8d
  416bfc:	rcr    bh,0x2f
  416bff:	and    BYTE PTR [esp+ecx*1],cl
  416c02:	push   eax
  416c03:	popf   
  416c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c05:	retf   0x4739
  416c08:	xor    DWORD PTR ds:[esi+0x20e1427b],esi
  416c0f:	jecxz  0x416bcf
  416c11:	push   cs
  416c12:	mov    ebp,0xda774977
  416c17:	push   ds
  416c18:	mov    ebx,0x4e6d106e
  416c1d:	cdq    
  416c1e:	neg    BYTE PTR [edx]
  416c20:	repz mov WORD PTR ss:[esp+eiz*4],es
  416c25:	xchg   edx,eax
  416c26:	fsubr  QWORD PTR ds:0x944470dd
  416c2c:	mov    bh,BYTE PTR [ebp+0x2f8f4ed]
  416c32:	ret    0xb30a
  416c35:	push   esi
  416c36:	loopne 0x416bc4
  416c38:	cli    
  416c39:	mov    WORD PTR [edx+ebp*1-0x3b1a4bf1],ds
  416c40:	std    
  416c41:	or     DWORD PTR [eax],0x5c
  416c44:	sbb    BYTE PTR es:[edi],bh
  416c47:	inc    edi
  416c48:	cmp    BYTE PTR [edx-0x58],bl
  416c4b:	push   ebp
  416c4c:	gs pop es
  416c4e:	sar    DWORD PTR [esi],1
  416c50:	inc    edx
  416c51:	lods   al,BYTE PTR ds:[esi]
  416c52:	fild   DWORD PTR [edi+0x5b]
  416c55:	mov    dl,0x42
  416c57:	into   
  416c58:	jo     0x416ca3
  416c5a:	loop   0x416ccb
  416c5c:	aam    0x71
  416c5e:	jb     0x416c16
  416c60:	ret    0xa951
  416c63:	and    ah,BYTE PTR [ebx-0x31]
  416c66:	into   
  416c67:	sub    ebx,DWORD PTR [edx-0x7b]
  416c6a:	das    
  416c6b:	imul   eax,ebx,0xc
  416c6e:	add    BYTE PTR [esi+ebx*8+0x4293033f],bl
  416c75:	icebp  
  416c76:	ret    
  416c77:	pop    edi
  416c78:	sub    BYTE PTR [edx-0x52],cl
  416c7b:	mov    al,BYTE PTR [edx-0x37c51391]
  416c81:	jo     0x416c65
  416c83:	cwde   
  416c84:	push   ds
  416c85:	mov    BYTE PTR [ecx+0x35],bh
  416c88:	mov    bl,0xf7
  416c8a:	test   eax,0x6dd8863
  416c8f:	inc    esi
  416c90:	push   0xffb29e31
  416c95:	push   edi
  416c96:	add    al,dl
  416c98:	inc    ebx
  416c99:	and    BYTE PTR [edx-0xa],dh
  416c9c:	bound  esp,QWORD PTR [ecx]
  416c9e:	mov    BYTE PTR [ecx+0x55],al
  416ca1:	dec    ebx
  416ca2:	mov    esi,0xfc1cce1d
  416ca7:	mov    DWORD PTR [ebp+0x15],ecx
  416caa:	lods   eax,DWORD PTR ds:[esi]
  416cab:	call   0x45a0519b
  416cb0:	or     bl,BYTE PTR [edi-0x53]
  416cb3:	adc    DWORD PTR [ebp+edx*2+0x2e62176b],ecx
  416cba:	cwde   
  416cbb:	js     0x416cd1
  416cbd:	imul   esi,ebp,0x2d1fff7c
  416cc3:	jle    0x416c56
  416cc5:	mov    cl,0x88
  416cc7:	mov    BYTE PTR [edx],bh
  416cc9:	fild   QWORD PTR [eax+0xa]
  416ccc:	or     DWORD PTR [ebp-0x12127f06],edi
  416cd2:	mov    DWORD PTR [ebp+0x407fa2cb],ebp
  416cd8:	das    
  416cd9:	das    
  416cda:	push   edx
  416cdb:	mov    ebx,0x3fc686a3
  416ce0:	out    dx,eax
  416ce1:	sahf   
  416ce2:	loope  0x416d5f
  416ce4:	cmp    esp,edi
  416ce6:	in     al,dx
  416ce7:	lods   eax,DWORD PTR ds:[esi]
  416ce8:	xor    al,0xd3
  416cea:	retf   
  416ceb:	and    ebx,ebx
  416ced:	test   eax,0xc7fbe743
  416cf2:	retf   
  416cf3:	jecxz  0x416cda
  416cf5:	jae    0x416d39
  416cf7:	push   esi
  416cf8:	call   0x6367:0x90a6e14e
  416cff:	sub    eax,0xd09cbdd6
  416d04:	inc    eax
  416d05:	lock lahf 
  416d07:	sub    BYTE PTR [eax+0x1d11ffbd],0xbd
  416d0e:	and    dh,cl
  416d10:	jbe    0x416c95
  416d12:	pop    ds
  416d13:	sub    BYTE PTR ss:[eax+0x4a8fcc73],0xfd
  416d1b:	pop    edx
  416d1c:	dec    BYTE PTR [edi+eax*8+0x79]
  416d20:	shr    BYTE PTR [ebp+0x158b849],0x45
  416d27:	popa   
  416d28:	sbb    dl,BYTE PTR [ebp*8+0xbbebf20]
  416d2f:	pop    ebp
  416d30:	fisttp WORD PTR [esi]
  416d32:	jle    0x416d1f
  416d34:	mov    WORD PTR [esi-0x36],gs
  416d37:	in     al,dx
  416d38:	enter  0x98bb,0xa7
  416d3c:	pop    ebx
  416d3d:	pop    ss
  416d3e:	mov    bl,0xc7
  416d40:	fsubr  QWORD PTR [ecx-0x7fe91576]
  416d46:	or     DWORD PTR [esi],eax
  416d48:	leave  
  416d49:	aad    0x15
  416d4b:	inc    esi
  416d4c:	mov    ds:0xc6b571d8,eax
  416d51:	fdivrp st(5),st
  416d53:	rcl    BYTE PTR [eax+0x20],1
  416d56:	push   0xc8bc14bd
  416d5b:	mov    ebx,DWORD PTR [eax]
  416d5d:	xchg   edi,eax
  416d5e:	xor    ecx,DWORD PTR [edi-0x12]
  416d61:	ds jge 0x416d52
  416d64:	sti    
  416d65:	adc    al,0x1e
  416d67:	repz retf 0x9d54
  416d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d6c:	cmc    
  416d6d:	imul   ecx,DWORD PTR [ebx+ebp*8-0x2],0x45
  416d72:	cwde   
  416d73:	cmp    eax,esp
  416d75:	xchg   esp,eax
  416d76:	fcomp  QWORD PTR [edx+0x6edf9ca3]
  416d7c:	in     eax,dx
  416d7d:	sub    ebx,DWORD PTR [ebp+0x4d]
  416d80:	xchg   esp,eax
  416d81:	cld    
  416d82:	outs   dx,BYTE PTR ds:[esi]
  416d83:	sbb    ecx,DWORD PTR [eax]
  416d85:	neg    DWORD PTR [esi+0xb]
  416d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d89:	test   DWORD PTR [esi],eax
  416d8b:	pop    ebx
  416d8c:	dec    esi
  416d8d:	aam    0x91
  416d8f:	sar    DWORD PTR [ecx],1
  416d91:	repnz pop DWORD PTR ds:0x9e83f0a5
  416d98:	jge    0x416d3b
  416d9a:	loop   0x416df6
  416d9c:	xchg   DWORD PTR [ebp-0x52],eax
  416d9f:	fwait
  416da0:	cmp    BYTE PTR [eax-0x696b8214],bh
  416da6:	push   ecx
  416da7:	push   ebp
  416da8:	push   ss
  416da9:	xchg   ebp,eax
  416daa:	pusha  
  416dab:	mov    BYTE PTR [eax-0x5],ch
  416dae:	ss popf 
  416db0:	sub    eax,0xff91d47c
  416db5:	jne    0x416e2e
  416db7:	imul   BYTE PTR [eax+0x38340b6e]
  416dbd:	pop    eax
  416dbe:	mov    ah,0xc3
  416dc0:	sar    DWORD PTR [eax-0x6b],1
  416dc3:	xlat   BYTE PTR ds:[ebx]
  416dc4:	adc    DWORD PTR [ecx],ecx
  416dc6:	mov    cl,0xb1
  416dc8:	sub    BYTE PTR ds:0x662f8b41,ah
  416dce:	ss cmp eax,0x29bb0d3e
  416dd4:	jp     0x416d57
  416dd6:	push   ebp
  416dd7:	mov    dh,0x7c
  416dd9:	xchg   esi,eax
  416dda:	daa    
  416ddb:	mov    esp,0x3449bd64
  416de0:	out    0x6d,eax
  416de2:	call   0x9760:0xaeece662
  416de9:	inc    esp
  416dea:	mov    cs,WORD PTR ss:[ebp-0x5a]
  416dee:	jo     0x416dfc
  416df0:	xor    esp,DWORD PTR [ebp+0x62c5ea64]
  416df6:	push   edi
  416df7:	and    bl,BYTE PTR [ebp+0x4d1fe41a]
  416dfd:	enter  0x9f6a,0x9f
  416e01:	mov    ebx,0xc5a7585a
  416e06:	sub    DWORD PTR [ebp-0x2d78682f],eax
  416e0c:	cmp    eax,0x4c18d005
  416e11:	cli    
  416e12:	call   0xd022e897
  416e17:	dec    esi
  416e18:	inc    esi
  416e19:	mov    eax,0x5b0c8de8
  416e1e:	xor    BYTE PTR [edx],ch
  416e20:	shr    ah,0x46
  416e23:	push   edx
  416e24:	push   ecx
  416e25:	jo     0x416e0b
  416e27:	lahf   
  416e28:	cmp    ch,BYTE PTR [edi-0x79afaf41]
  416e2e:	mov    cl,0xe9
  416e30:	push   cs
  416e31:	inc    edi
  416e32:	enterw 0x33eb,0x8f
  416e37:	std    
  416e38:	loopne 0x416de3
  416e3a:	push   ds
  416e3b:	pop    ecx
  416e3c:	mov    esi,0xea52dba2
  416e41:	pop    ebx
  416e42:	or     DWORD PTR [ebx],esi
  416e44:	jae    0x416dd6
  416e46:	sub    esp,DWORD PTR [ecx]
  416e48:	jb     0x416e38
  416e4a:	and    DWORD PTR [ecx+0x47],0xb255fc5f
  416e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e52:	xchg   cl,bh
  416e54:	mov    bh,0x99
  416e57:	sbb    DWORD PTR [esp+eax*4],esp
  416e5a:	xor    DWORD PTR ds:0x9c1af1d1,0xe09a3c30
  416e64:	adc    ecx,DWORD PTR [ecx+0x47cf1dc0]
  416e6a:	and    al,0x48
  416e6c:	pop    es
  416e6d:	lds    ebp,FWORD PTR [edi-0x62aa3b8e]
  416e73:	in     al,dx
  416e74:	dec    eax
  416e75:	adc    cl,dl
  416e77:	jnp    0x416e49
  416e79:	inc    edx
  416e7a:	sbb    cl,BYTE PTR [edx+ecx*2]
  416e7d:	neg    BYTE PTR [edx-0x43]
  416e80:	xchg   DWORD PTR [ebx+ecx*1-0x908665e],eax
  416e87:	jle    0x416ea1
  416e89:	scas   eax,DWORD PTR es:[edi]
  416e8a:	mov    edi,0x1600c3aa
  416e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e90:	shl    BYTE PTR [edx+eiz*8],cl
  416e93:	lds    eax,FWORD PTR [ebx-0x6d91c515]
  416e99:	aad    0x17
  416e9b:	rcr    DWORD PTR [ecx+0x6],cl
  416e9e:	mov    eax,0x1413cbf2
  416ea3:	call   0x4d4fee84
  416ea8:	add    BYTE PTR [ebx-0x8cd738b],dh
  416eae:	xchg   DWORD PTR [edx-0x58],ecx
  416eb1:	pop    esp
  416eb2:	inc    edx
  416eb3:	out    0x21,al
  416eb5:	lods   eax,DWORD PTR ds:[esi]
  416eb6:	dec    ecx
  416eb7:	int3   
  416eb8:	out    0x8e,eax
  416eba:	adc    eax,0x4391b141
  416ebf:	cmp    ch,ah
  416ec1:	jp     0x416e55
  416ec3:	(bad)
  416ec7:	jo     0x416ee8
  416ec9:	jbe    0x416f05
  416ecb:	cwde   
  416ecc:	ss icebp 
  416ece:	out    dx,eax
  416ecf:	sub    eax,0x9963eacc
  416ed4:	cs push esp
  416ed6:	inc    ebp
  416ed7:	sahf   
  416ed8:	data16 or BYTE PTR [edx],0x35
  416edc:	inc    edi
  416edd:	cld    
  416ede:	add    ecx,edx
  416ee0:	mov    cl,0xf
  416ee2:	scas   eax,DWORD PTR es:[edi]
  416ee3:	mov    al,ds:0xab3bf135
  416ee8:	(bad)  
  416eea:	cmc    
  416eeb:	and    al,0x2d
  416eed:	push   0x7ebf4c35
  416ef2:	pop    ss
  416ef3:	push   0x9c21e6d7
  416ef8:	mov    dl,0xef
  416efa:	mov    al,0xac
  416efc:	scas   al,BYTE PTR es:[edi]
  416efd:	jmp    0x416f17
  416eff:	stos   DWORD PTR es:[edi],eax
  416f00:	mov    eax,ds:0xa460ee58
  416f05:	cli    
  416f06:	imul   ecx,DWORD PTR [ebp+eiz*2+0x40],0xa3c29807
  416f0e:	nop
  416f0f:	call   FWORD PTR [edi-0x25]
  416f12:	xor    edx,ecx
  416f14:	inc    ebp
  416f15:	stos   DWORD PTR es:[edi],eax
  416f16:	pop    ecx
  416f17:	push   ecx
  416f18:	shl    DWORD PTR [ecx-0x3f4e6a59],1
  416f1e:	jb     0x416efd
  416f20:	fstp   DWORD PTR [edi+ebp*1+0x7e]
  416f24:	jno    0x416ef4
  416f26:	jns    0x416f85
  416f28:	push   edx
  416f29:	in     al,dx
  416f2a:	mov    al,0x6
  416f2c:	xor    dh,dh
  416f2e:	sti    
  416f2f:	imul   ebx,DWORD PTR [edi],0x8ba8f2a8
  416f35:	out    0x7d,eax
  416f37:	inc    ebx
  416f38:	mov    eax,0xfb447c77
  416f3d:	cmp    eax,0x64c9be40
  416f42:	push   eax
  416f43:	push   es
  416f44:	push   eax
  416f45:	js     0x416fbb
  416f47:	pop    ss
  416f48:	jmp    0x416f04
  416f4a:	sub    eax,0xc44ac480
  416f4f:	in     eax,dx
  416f50:	ins    BYTE PTR es:[edi],dx
  416f51:	pushf  
  416f52:	cmp    eax,0x7305a870
  416f57:	xchg   esi,eax
  416f58:	rol    BYTE PTR [ecx+0x4b],cl
  416f5b:	and    ah,al
  416f5d:	adc    eax,DWORD PTR [edi]
  416f5f:	jne    0x416f21
  416f61:	xlat   BYTE PTR ds:[ebx]
  416f62:	retf   0x1d8
  416f65:	(bad)  [edx-0x5f]
  416f68:	lods   al,BYTE PTR ds:[esi]
  416f69:	cmp    al,0xb5
  416f6b:	out    0x8,eax
  416f6d:	stc    
  416f6e:	xor    bl,BYTE PTR [ebx-0x52]
  416f71:	loop   0x416f4c
  416f73:	rcr    DWORD PTR [ebp-0x6b],cl
  416f76:	mov    ds:0x522b6b10,al
  416f7b:	sahf   
  416f7c:	scas   al,BYTE PTR es:[di]
  416f7e:	push   ds
  416f7f:	adc    BYTE PTR [edx],cl
  416f81:	add    DWORD PTR [esi],ebp
  416f83:	sbb    ch,BYTE PTR [eax+0x390dea35]
  416f89:	pusha  
  416f8a:	rcl    ebp,1
  416f8c:	adc    eax,0x8b168c3a
  416f91:	xor    edx,ecx
  416f93:	outs   dx,BYTE PTR ds:[esi]
  416f94:	mov    ebp,0xaa727c76
  416f99:	dec    edi
  416f9a:	not    DWORD PTR [eax-0x22]
  416f9d:	mov    dl,0x26
  416f9f:	inc    esp
  416fa0:	mov    esi,0x2cb89a96
  416fa5:	rcr    BYTE PTR [edx],1
  416fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa8:	sbb    BYTE PTR [ebp-0x3a],ch
  416fab:	jl     0x416fe7
  416fad:	arpl   sp,sp
  416faf:	cdq    
  416fb0:	mov    ?,WORD PTR [esi]
  416fb2:	cmp    bh,al
  416fb4:	dec    esi
  416fb5:	lahf   
  416fb6:	cwde   
  416fb7:	enter  0x86fe,0x80
  416fbb:	dec    esi
  416fbc:	sti    
  416fbd:	imul   esi,DWORD PTR [ecx+edi*8-0x20],0xd0d5a1ea
  416fc5:	mov    edi,0xa16ae7db
  416fca:	not    esp
  416fcc:	and    esp,DWORD PTR [eax-0x89cf8cf]
  416fd2:	nop
  416fd3:	int    0x8d
  416fd5:	test   bl,ah
  416fd7:	div    BYTE PTR [ecx]
  416fd9:	mov    ah,0xa0
  416fdb:	add    al,0x79
  416fdd:	fsubr  QWORD PTR [edi+0x1d]
  416fe0:	sbb    DWORD PTR [esi],ebx
  416fe2:	mov    eax,0xe6c8a595
  416fe7:	jmp    0x3311:0x37bdb3b
  416fee:	test   al,0x27
  416ff0:	retf   0xddbb
  416ff3:	push   0xaa916d17
  416ff8:	and    BYTE PTR [edx+0xb],dh
  416ffb:	inc    ebx
  416ffc:	and    eax,0x2a500a0e
  417001:	push   esi
  417002:	imul   ecx,eax,0x9ba65eaf
  417008:	jl     0x417035
  41700a:	imul   ebp,DWORD PTR gs:0x3d88229,0x11
  417012:	jp     0x417081
  417014:	jl     0x41708d
  417016:	leave  
  417017:	mov    ds:0x4c23b130,eax
  41701c:	jns    0x416fd6
  41701e:	mov    cl,0xa8
  417020:	and    dl,BYTE PTR [edi+0xb72fd66]
  417026:	inc    edx
  417027:	jecxz  0x416fca
  417029:	fmul   st,st(6)
  41702b:	test   BYTE PTR [esi],ah
  41702d:	ret    
  41702e:	in     eax,dx
  41702f:	cmovo  ecx,DWORD PTR [edx-0x18]
  417033:	push   ebx
  417034:	inc    ebx
  417035:	mov    ecx,0x38d30d21
  41703a:	test   BYTE PTR [eax],bl
  41703c:	mov    esp,0x890863da
  417041:	(bad)  
  417042:	push   ebp
  417043:	cmp    DWORD PTR [ecx+0x20],esi
  417046:	lods   al,BYTE PTR ds:[esi]
  417047:	(bad)  
  417048:	int    0x59
  41704a:	aaa    
  41704b:	sbb    al,0x58
  41704d:	clts   
  41704f:	jmp    0xa584b623
  417054:	mov    bl,0x36
  417056:	test   BYTE PTR [ebp-0x55cc3064],0xc4
  41705d:	adc    eax,0x58dbe563
  417062:	inc    edx
  417063:	das    
  417064:	mov    esi,0x9110b722
  417069:	push   0xffffffa8
  41706b:	dec    ecx
  41706c:	or     eax,0x5e067178
  417071:	(bad)  
  417072:	jg     0x417019
  417074:	pusha  
  417075:	mul    BYTE PTR [esi+edx*1+0x26]
  417079:	inc    ebp
  41707a:	mov    esi,0x344322be
  41707f:	call   0xf430bf95
  417084:	cmp    eax,0xc278936d
  417089:	fld    st(4)
  41708b:	push   ebp
  41708c:	adc    al,0x5c
  41708e:	int    0xbe
  417090:	inc    esp
  417091:	mov    WORD PTR [esi+0xc],?
  417094:	add    esi,DWORD PTR ds:0x18235db7
  41709a:	aad    0x64
  41709c:	pop    ss
  41709d:	sub    edx,eax
  41709f:	fistp  WORD PTR [esi+0x5b]
  4170a2:	lds    esp,FWORD PTR [eax+0x7be8d4ce]
  4170a8:	dec    edx
  4170a9:	adc    BYTE PTR [edi+0x459e6b58],al
  4170af:	xor    eax,edx
  4170b1:	sbb    DWORD PTR ds:0xe72c71e4,esi
  4170b7:	xchg   esp,eax
  4170b8:	lock jecxz 0x4170e1
  4170bb:	lods   eax,DWORD PTR ds:[esi]
  4170bc:	ins    BYTE PTR es:[edi],dx
  4170bd:	and    al,0x93
  4170bf:	pop    ds
  4170c0:	test   DWORD PTR [ecx],0x45925bad
  4170c6:	xchg   ebp,eax
  4170c7:	(bad)  
  4170c9:	aad    0x67
  4170cb:	js     0x417086
  4170cd:	jmp    0xc864:0x4f768b04
  4170d4:	xchg   edx,eax
  4170d5:	test   BYTE PTR [eax+0x7891c290],dl
  4170db:	ficom  WORD PTR [ecx]
  4170dd:	sub    BYTE PTR [ebp+0x0],al
  4170e0:	push   es
  4170e1:	mov    al,0x83
  4170e3:	pop    ebx
  4170e4:	inc    ebp
  4170e5:	jb     0x4170de
  4170e7:	dec    ecx
  4170e8:	jb     0x4170ee
  4170ea:	cmp    BYTE PTR [esi+0x5b],dh
  4170ed:	icebp  
  4170ee:	(bad)  
  4170ef:	in     eax,0x89
  4170f1:	ins    DWORD PTR es:[edi],dx
  4170f2:	cmp    ah,BYTE PTR [esi-0x4c36f385]
  4170f8:	mov    ds:0xb801951f,eax
  4170fd:	daa    
  4170fe:	xchg   BYTE PTR [edi+edx*2],dl
  417101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417102:	pop    esi
  417103:	mov    eax,ds:0xc1995612
  417108:	pop    ebx
  417109:	inc    edx
  41710a:	int3   
  41710b:	mov    ds:0x3433eafd,eax
  417110:	dec    ebp
  417111:	or     BYTE PTR [ebx+edi*8+0x7d],ah
  417115:	fwait
  417116:	popa   
  417117:	mov    WORD PTR [eax+0x26],cs
  41711a:	mov    ch,0x2f
  41711c:	jbe    0x417135
  41711e:	(bad)  
  417120:	(bad)  
  417121:	mov    esp,0xae8bac47
  417126:	ret    
  417127:	fisub  WORD PTR [ebp+0x4f]
  41712a:	test   eax,0x3cfda482
  41712f:	adc    esp,ebx
  417131:	stos   DWORD PTR es:[edi],eax
  417132:	mov    ch,0x2b
  417134:	jnp    0x4170d2
  417136:	retf   0x398a
  417139:	adc    eax,0xc880f71b
  41713e:	mov    al,0x54
  417140:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417142:	(bad)  
  417143:	dec    ecx
  417144:	ins    BYTE PTR es:[edi],dx
  417145:	addr16 pop esi
  417147:	mov    dh,0xf2
  417149:	ret    0x7c56
  41714c:	sub    DWORD PTR ds:0x9977f565,0xfffffff4
  417153:	into   
  417154:	leave  
  417155:	push   es
  417156:	inc    esi
  417157:	xchg   esp,eax
  417158:	add    eax,0x2103d5c2
  41715d:	js     0x4171a9
  41715f:	ret    
  417160:	push   es
  417161:	into   
  417162:	imul   esp,DWORD PTR [edi-0x63],0xfc7883f
  417169:	pop    esp
  41716a:	test   esp,esi
  41716c:	jecxz  0x417134
  41716e:	mov    esi,eax
  417170:	inc    ecx
  417171:	inc    esp
  417172:	retf   0xe732
  417175:	mov    edx,0xd9c2be2f
  41717a:	cmp    eax,0xe6d2e81f
  41717f:	jnp    0x417138
  417181:	push   ss
  417182:	aas    
  417183:	sub    cl,dh
  417185:	mov    ss,WORD PTR [ecx-0x1dcb264]
  41718b:	xchg   ecx,eax
  41718c:	(bad)  
  41718e:	out    0x45,al
  417190:	int3   
  417191:	ss sbb dl,BYTE PTR ds:[eax]
  417195:	jp     0x41715a
  417197:	out    dx,al
  417198:	mov    dl,0x9e
  41719a:	jno    0x4171ae
  41719c:	lds    eax,FWORD PTR [esp+edx*1]
  41719f:	add    al,0xd4
  4171a1:	mov    ebp,0x462b71dd
  4171a6:	aas    
  4171a7:	sub    DWORD PTR [eax-0x51],ebp
  4171aa:	and    eax,0xa52e99e4
  4171af:	mov    bl,0xe8
  4171b1:	loope  0x41718c
  4171b3:	out    dx,al
  4171b4:	pushf  
  4171b5:	loopne 0x41713a
  4171b7:	cmp    esp,DWORD PTR [ebx]
  4171b9:	mov    edx,?
  4171bb:	dec    esi
  4171bc:	and    al,0xc2
  4171be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171bf:	and    edi,esi
  4171c1:	gs jp  0x4171ee
  4171c4:	icebp  
  4171c5:	mov    al,ds:0x638aacfb
  4171ca:	mov    ebx,0x5bc63d44
  4171cf:	lahf   
  4171d0:	(bad)  
  4171d1:	mov    eax,ds:0x8ea275a9
  4171d6:	dec    eax
  4171d7:	mov    dl,0x1e
  4171d9:	aad    0x11
  4171db:	cli    
  4171dc:	and    eax,0x918abb08
  4171e1:	jecxz  0x4171f2
  4171e3:	outs   dx,DWORD PTR ds:[esi]
  4171e4:	xchg   al,al
  4171e6:	fwait
  4171e7:	sbb    BYTE PTR [esi-0x6b],cl
  4171ea:	popa   
  4171eb:	(bad)  
  4171ec:	das    
  4171ed:	lods   al,BYTE PTR ds:[esi]
  4171ee:	std    
  4171ef:	jle    0x4171f7
  4171f1:	not    DWORD PTR [ebx+0x44]
  4171f4:	jmp    FWORD PTR [ebx]
  4171f6:	mov    ah,0xf4
  4171f8:	pop    ds
  4171f9:	mov    edi,0x9b2815f3
  4171fe:	pop    eax
  4171ff:	or     edi,edx
  417201:	sub    al,0x6d
  417203:	fdiv   st(0),st
  417205:	popf   
  417206:	or     bl,bl
  417208:	mov    al,ds:0x3c24baf8
  41720d:	nop
  41720e:	push   edx
  41720f:	inc    esi
  417210:	dec    cl
  417212:	stc    
  417213:	cmp    bl,cl
  417215:	out    dx,eax
  417216:	adc    al,0x31
  417218:	jb     0x417211
  41721a:	bound  edi,QWORD PTR [edi]
  41721c:	cmp    BYTE PTR [eax],cl
  41721e:	jnp    0x41725a
  417220:	dec    esi
  417221:	mov    ah,0x72
  417223:	int3   
  417224:	cmp    DWORD PTR ds:0x88c43193,edx
  41722a:	mov    ss,ecx
  41722c:	aam    0xfa
  41722e:	aad    0x2b
  417230:	inc    ecx
  417231:	(bad)  
  417234:	scas   eax,DWORD PTR es:[edi]
  417235:	push   esp
  417236:	repz ja 0x4172b3
  417239:	or     al,0x3c
  41723b:	je     0x4171fe
  41723d:	push   edi
  41723e:	inc    ebp
  41723f:	fdiv   QWORD PTR [ebp+0x56]
  417242:	out    dx,al
  417243:	add    BYTE PTR [edi+eax*1+0x51ccb4e3],dl
  41724a:	inc    eax
  41724b:	add    BYTE PTR [eax],cl
  41724d:	fcomp  DWORD PTR [ebx-0x6c4eaa08]
  417253:	adc    DWORD PTR [eax+0xd2d8006],esi
  417259:	data16 sub dh,0x89
  41725d:	sub    DWORD PTR [edx-0x1c9c25a6],ecx
  417263:	xchg   esi,eax
  417264:	or     DWORD PTR [ecx-0x2d],edi
  417267:	push   ss
  417268:	shl    BYTE PTR [edx],0x29
  41726b:	jmp    0xdfe3b6c3
  417270:	lods   al,BYTE PTR ds:[esi]
  417271:	loopne 0x4172a4
  417273:	test   DWORD PTR [ebx],eax
  417275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417276:	imul   esp,DWORD PTR [edx+0x63],0x712cf1d8
  41727d:	pop    ebp
  41727e:	(bad)  
  41727f:	cli    
  417280:	cmc    
  417281:	neg    DWORD PTR [ecx-0xb]
  417284:	cld    
  417285:	loop   0x4172d0
  417287:	xor    al,BYTE PTR [eax+0x737217b3]
  41728d:	dec    edi
  41728e:	or     DWORD PTR [esi+edx*2],ecx
  417291:	ret    0xf7ad
  417294:	fisubr WORD PTR [eax]
  417296:	fdivr  st(5),st
  417298:	xchg   esp,eax
  417299:	add    al,0xf1
  41729b:	jp     0x417277
  41729d:	int    0xf7
  41729f:	mov    ebp,0x86a51e9c
  4172a4:	xor    DWORD PTR [ebp-0x48],eax
  4172a7:	stos   BYTE PTR es:[edi],al
  4172a8:	jb     0x417318
  4172aa:	stos   BYTE PTR es:[edi],al
  4172ab:	hlt    
  4172ac:	(bad)  
  4172ad:	std    
  4172ae:	lahf   
  4172af:	xchg   esi,eax
  4172b0:	in     eax,0x26
  4172b2:	loop   0x417319
  4172b4:	arpl   WORD PTR [edi],sp
  4172b6:	stc    
  4172b7:	cmc    
  4172b8:	(bad)  
  4172b9:	xchg   esi,eax
  4172ba:	xor    BYTE PTR [esi+0x1d],cl
  4172bd:	push   edi
  4172be:	or     dl,BYTE PTR [edi-0x31bb20ad]
  4172c4:	loop   0x4172a3
  4172c6:	inc    edx
  4172c7:	add    BYTE PTR [ecx+edx*1],cl
  4172ca:	cli    
  4172cb:	and    ebx,DWORD PTR [ecx-0x39]
  4172ce:	jmp    0xffbf7bb5
  4172d3:	lds    edx,FWORD PTR [edi]
  4172d5:	jns    0x417288
  4172d7:	nop    DWORD PTR [ecx]
  4172da:	outs   dx,DWORD PTR ds:[esi]
  4172db:	inc    ebp
  4172dc:	rcl    BYTE PTR [esi-0x4b3ae4f7],1
  4172e2:	inc    ecx
  4172e3:	fmul   QWORD PTR [ebx]
  4172e5:	adc    BYTE PTR [ebx+eax*8+0x6e],dh
  4172e9:	pop    eax
  4172ea:	mov    ah,0x79
  4172ec:	pop    es
  4172ed:	or     BYTE PTR [ecx+0x7f04dab6],cl
  4172f3:	test   eax,edx
  4172f5:	push   edx
  4172f6:	lds    ecx,FWORD PTR [eax]
  4172f8:	dec    ebp
  4172f9:	imul   edi,DWORD PTR [esi-0x65],0x1340daf3
  417300:	xor    BYTE PTR [ebx],ah
  417302:	repz sbb ecx,DWORD PTR [eax]
  417305:	xchg   DWORD PTR [edi-0x56428e17],esp
  41730b:	shr    BYTE PTR [eax],0x98
  41730e:	fisub  DWORD PTR [ecx]
  417310:	xor    al,0x2
  417312:	inc    edi
  417313:	(bad)  [ecx+0x73]
  417316:	out    0x67,eax
  417318:	push   ebx
  417319:	pop    es
  41731a:	push   edx
  41731b:	push   esi
  41731c:	addr16 push 0x215b8f8d
  417322:	cwde   
  417323:	pop    edi
  417324:	dec    ecx
  417325:	inc    ebp
  417326:	(bad)  
  417327:	(bad)  
  417328:	clc    
  417329:	cmp    eax,0xb5d38e2
  41732e:	xchg   edi,eax
  41732f:	std    
  417330:	inc    edi
  417331:	imul   ebx,DWORD PTR [edi],0xffffffa3
  417334:	sbb    DWORD PTR [edi+0x5545a160],ebp
  41733a:	cdq    
  41733b:	inc    ecx
  41733c:	lods   al,BYTE PTR ds:[esi]
  41733d:	push   cs
  41733e:	mov    eax,0xb0374606
  417343:	div    BYTE PTR [ebx-0x736df337]
  417349:	shl    DWORD PTR [ecx+0x655bb6c6],0x88
  417350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417351:	outs   dx,DWORD PTR ds:[esi]
  417352:	lods   eax,DWORD PTR ds:[esi]
  417353:	and    al,0xf
  417355:	pop    edi
  417356:	mov    DWORD PTR [eax+0x3],esi
  417359:	mov    DWORD PTR [edi+0x1ea7410b],edi
  41735f:	test   eax,0xd266dd8a
  417364:	lods   al,BYTE PTR ds:[esi]
  417365:	push   ebp
  417366:	jmp    0x1f700b39
  41736b:	mov    edx,0x1d670ff0
  417370:	call   0x4110fc41
  417375:	push   esp
  417376:	xor    al,0xe7
  417378:	test   BYTE PTR [eax+0x4fa3dceb],0x47
  41737f:	dec    edi
  417380:	jb     0x4173ae
  417382:	jno    0x417314
  417384:	cmp    DWORD PTR [esi+0x371f45ac],edi
  41738a:	leave  
  41738b:	mov    al,ds:0xed386e7a
  417390:	inc    edx
  417391:	add    al,0xec
  417393:	adc    eax,0xbcd884e6
  417398:	retf   0x8d5f
  41739b:	push   edx
  41739c:	mov    ah,0x8d
  41739e:	inc    edi
  41739f:	cmp    eax,0xc548c4ca
  4173a4:	repz imul edx,DWORD PTR [bx],0xa
  4173a9:	adc    DWORD PTR [ebx-0x23],0xd9544718
  4173b0:	mov    ds:0xd46b7bf7,eax
  4173b5:	stc    
  4173b6:	dec    edx
  4173b7:	jns    0x417394
  4173b9:	stos   DWORD PTR es:[edi],eax
  4173ba:	mov    BYTE PTR [ebx+0x2de37889],cl
  4173c0:	stos   DWORD PTR es:[edi],eax
  4173c1:	dec    eax
  4173c2:	jae    0x4173f6
  4173c4:	mov    cl,0xf1
  4173c6:	outs   dx,BYTE PTR ds:[esi]
  4173c7:	in     al,0xe0
  4173c9:	inc    ebx
  4173ca:	cmp    BYTE PTR [esi+0x3742e6a2],bl
  4173d0:	pushf  
  4173d1:	pop    ss
  4173d2:	dec    esp
  4173d3:	loopne 0x417389
  4173d5:	jle    0x417418
  4173d7:	cmp    eax,0xa311546f
  4173dc:	dec    ebp
  4173dd:	jecxz  0x417456
  4173df:	sub    eax,0xd8cf2cbe
  4173e4:	lods   eax,DWORD PTR ds:[esi]
  4173e5:	ret    0x6389
  4173e8:	aas    
  4173e9:	adc    al,0xa4
  4173eb:	xchg   ebp,eax
  4173ec:	shr    DWORD PTR [eax+eax*2],0xe0
  4173f0:	xchg   esi,eax
  4173f1:	mov    ah,BYTE PTR [ebp-0x10b26905]
  4173f7:	and    DWORD PTR [edx+0x434e2c47],0xc21e73f0
  417401:	sub    DWORD PTR [ebx],ebx
  417403:	lds    esi,FWORD PTR [edi]
  417405:	mov    ecx,0xabf75ec4
  41740a:	jl     0x4173f7
  41740c:	das    
  41740d:	pop    edi
  41740e:	in     al,dx
  41740f:	arpl   WORD PTR [ebp+0x11839655],si
  417415:	mov    eax,ds:0x4d01267f
  41741a:	aas    
  41741b:	mov    dh,0x2f
  41741d:	lods   eax,DWORD PTR ds:[esi]
  41741e:	xchg   DWORD PTR [eax],eax
  417420:	xor    ah,BYTE PTR [esi]
  417422:	dec    edi
  417423:	push   esp
  417424:	jle    0x417434
  417426:	adc    DWORD PTR [ecx-0x69],eax
  417429:	or     DWORD PTR ds:0xca5b6165,0x5d
  417430:	cmp    edi,eax
  417432:	enter  0x40e,0x44
  417436:	add    ebp,DWORD PTR [edx+eiz*2]
  417439:	addr16 (bad) 
  41743c:	gs nop
  41743e:	pop    eax
  41743f:	ins    DWORD PTR es:[edi],dx
  417440:	stc    
  417441:	adc    dl,al
  417443:	jp     0x4174a1
  417445:	popa   
  417446:	xchg   ebp,eax
  417447:	inc    eax
  417448:	mov    WORD PTR [ebx-0x74497e82],?
  41744e:	out    dx,al
  41744f:	sbb    BYTE PTR [ebx-0x68],ch
  417452:	xchg   edx,eax
  417453:	xor    al,0x19
  417455:	int3   
  417456:	loope  0x417493
  417458:	jo     0x4173e1
  41745a:	pop    ebp
  41745b:	xchg   ebp,eax
  41745c:	fcomip st,st(4)
  41745e:	enter  0x3a5f,0x10
  417462:	cmc    
  417463:	push   eax
  417464:	add    eax,0x4fc6b405
  417469:	iret   
  41746a:	out    0x7f,eax
  41746c:	in     al,0x2
  41746e:	mov    gs,esi
  417470:	jp     0x41743d
  417472:	(bad)  
  417473:	scas   eax,DWORD PTR es:[edi]
  417474:	dec    edx
  417475:	jo     0x417463
  417477:	test   ch,al
  417479:	xor    ebp,ecx
  41747b:	fsub   QWORD PTR [ecx-0x12c1461]
  417481:	retf   0x72e2
  417484:	clc    
  417485:	(bad)  
  417486:	xchg   esp,eax
  417487:	mov    ah,0xb7
  417489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748a:	popa   
  41748b:	cs (bad) 
  41748d:	hlt    
  41748e:	push   0xeb4534bd
  417493:	je     0x4174ca
  417495:	int    0x8c
  417497:	mov    dh,0xaa
  417499:	sbb    eax,0x7520fea3
  41749e:	mov    ebp,0xb6334dd6
  4174a3:	and    eax,0x2a54049
  4174a8:	push   es
  4174a9:	inc    ebp
  4174aa:	test   DWORD PTR [ebp+0x11],0x4f7b12b8
  4174b1:	fist   WORD PTR [esi-0x1a]
  4174b4:	lods   eax,DWORD PTR ds:[esi]
  4174b5:	leave  
  4174b6:	pop    esi
  4174b7:	push   ebp
  4174b8:	sub    al,0x66
  4174ba:	fbld   TBYTE PTR [edi+0x1d10bd4e]
  4174c0:	aaa    
  4174c1:	pop    ecx
  4174c2:	adc    dl,al
  4174c4:	mov    bl,0x16
  4174c6:	and    eax,0x79b4c440
  4174cb:	push   edi
  4174cc:	pop    ss
  4174cd:	and    al,0xd
  4174cf:	jbe    0x417505
  4174d1:	xlat   BYTE PTR ds:[ebx]
  4174d2:	add    DWORD PTR ds:[ebx+0x5cf2d117],ecx
  4174d9:	lds    ebp,FWORD PTR [ebp+0x1b9ab1d0]
  4174df:	cmp    eax,0xb1366a46
  4174e4:	into   
  4174e5:	imul   ebx,DWORD PTR [edx+0xd],0x11fc625c
  4174ec:	call   FWORD PTR [ebp-0x566d75bf]
  4174f2:	loope  0x4174be
  4174f4:	push   ecx
  4174f5:	repz pop esi
  4174f7:	jmp    0x8ed80cdd
  4174fc:	aad    0xf2
  4174fe:	or     eax,0x8d72b5e7
  417503:	rcl    BYTE PTR [esp+ebp*2-0x6c],cl
  417507:	mov    bh,0x62
  417509:	push   ebp
  41750a:	fwait
  41750b:	pop    ebx
  41750c:	fs add eax,0x8ac550b9
  417512:	fcmove st,st(7)
  417514:	in     eax,0xaa
  417516:	cli    
  417517:	adc    edx,DWORD PTR [ebx+0x73]
  41751a:	cmp    eax,0x67ca656b
  41751f:	inc    ebx
  417520:	push   edx
  417521:	sbb    al,dl
  417523:	mov    esi,0x43ed9c48
  417528:	mov    WORD PTR [ebp-0x646e5243],ss
  41752e:	push   cs
  41752f:	(bad)  
  417530:	rcr    ch,1
  417532:	adc    al,BYTE PTR [ebp-0x602fec81]
  417538:	fisttp WORD PTR [ebx-0x49]
  41753b:	push   ss
  41753c:	adc    eax,0x45178990
  417541:	imul   ecx,ebp,0xccaff78f
  417547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417548:	push   edx
  417549:	dec    ebp
  41754a:	call   0xe15d:0xe21926df
  417551:	mov    eax,esi
  417553:	bound  esi,QWORD PTR [edi+edx*4-0x55c820fb]
  41755a:	sbb    BYTE PTR [edx],al
  41755c:	xchg   esp,eax
  41755d:	and    BYTE PTR [ebp+0x23],bh
  417560:	inc    ebp
  417561:	xor    BYTE PTR [edi-0x4225b124],0x25
  417568:	xlat   BYTE PTR ds:[ebx]
  417569:	push   ecx
  41756a:	mov    eax,ds:0x6ec55179
  41756f:	(bad)  
  417570:	loopne 0x417522
  417572:	in     eax,dx
  417573:	or     DWORD PTR [ecx+0xfba4dfd],edi
  417579:	mov    dl,BYTE PTR [esi-0x68]
  41757c:	aam    0x2
  41757e:	leave  
  41757f:	mov    ah,0x81
  417581:	loopne 0x4175a1
  417583:	or     edi,DWORD PTR [edi-0x7b]
  417586:	sbb    bh,BYTE PTR [edx+0x2261937b]
  41758c:	adc    DWORD PTR [edx+0x0],ebp
  41758f:	in     al,dx
  417590:	mov    eax,0x874ce0c8
  417595:	add    DWORD PTR [eax+0x7],esi
  417598:	(bad)  [ebp+eiz*2-0x5e3117c7]
  41759f:	retf   0x555f
  4175a2:	pop    esi
  4175a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175a4:	fadd   DWORD PTR [esi+eax*1]
  4175a7:	aas    
  4175a8:	fild   WORD PTR [ebp-0x1e431ea4]
  4175ae:	cmp    esi,edi
  4175b0:	or     DWORD PTR [ebx+0x6cc56adc],ebp
  4175b6:	xlat   BYTE PTR ds:[ebx]
  4175b7:	(bad)  [ebx]
  4175b9:	add    eax,0x40db13de
  4175be:	rcr    DWORD PTR [edx+edi*2+0x5],cl
  4175c2:	xchg   BYTE PTR [eax+ebp*2-0x173352e8],dl
  4175c9:	call   0x305:0xe0514167
  4175d0:	(bad)  
  4175d1:	repnz rcr al,cl
  4175d4:	imul   ebp,DWORD PTR [esi],0x3fc01a38
  4175da:	pop    ds
  4175db:	ss mov edx,0x55b74f46
  4175e1:	scas   eax,DWORD PTR es:[edi]
  4175e2:	or     al,0x19
  4175e4:	loop   0x41759c
  4175e6:	xchg   esp,eax
  4175e7:	pushf  
  4175e8:	mov    dl,0x5b
  4175ea:	(bad)  
  4175eb:	push   ecx
  4175ec:	sub    DWORD PTR [edi],0x59
  4175ef:	movd   DWORD PTR [ecx+0xb53c8cc],mm7
  4175f6:	lods   al,BYTE PTR ds:[esi]
  4175f7:	rol    BYTE PTR [esi+0x10],1
  4175fa:	jo     0x417670
  4175fc:	and    ecx,esi
  4175fe:	mov    bh,0xc2
  417600:	pop    esi
  417601:	dec    eax
  417602:	je     0x4175b9
  417604:	(bad)  
  417606:	push   es
  417607:	or     edi,DWORD PTR [eax]
  417609:	pop    edi
  41760a:	jge    0x41764c
  41760c:	jbe    0x417616
  41760e:	sbb    edi,DWORD PTR [esi-0x6de1f5e2]
  417614:	(bad)  
  417615:	push   ebx
  417616:	shl    DWORD PTR [esi-0x1951c4b8],0x47
  41761d:	std    
  41761e:	inc    ecx
  41761f:	or     edi,DWORD PTR [ebx+0x60]
  417622:	adc    DWORD PTR [ebp-0x70],edi
  417625:	and    DWORD PTR [esi-0x7a],0x20c1644c
  41762c:	or     ebx,esi
  41762e:	sub    al,0x93
  417630:	hlt    
  417631:	and    DWORD PTR [eax],ecx
  417633:	cwde   
  417634:	(bad)  
  417635:	cmp    al,BYTE PTR [edx]
  417637:	ret    
  417638:	dec    edi
  417639:	add    DWORD PTR [ebp-0x505b00b5],esp
  41763f:	retf   0x51d4
  417642:	repz add ah,dh
  417645:	repnz xchg ebx,eax
  417648:	call   0xa37a:0x591e566d
  41764f:	fwait
  417650:	mov    dh,0xf2
  417652:	adc    al,0x24
  417654:	pop    ecx
  417655:	mov    dl,cl
  417657:	jle    0x417673
  417659:	pop    ebx
  41765a:	icebp  
  41765b:	rcr    DWORD PTR [ecx+0x7f],0x40
  41765f:	ficomp DWORD PTR [ecx]
  417661:	pop    ecx
  417662:	and    DWORD PTR ds:0xf6c23314,0x34
  417669:	fimul  DWORD PTR [ebp+esi*4+0x16c5acac]
  417670:	mov    cl,0x6e
  417672:	lods   al,BYTE PTR ds:[esi]
  417673:	fst    QWORD PTR [ecx]
  417675:	das    
  417676:	jae    0x4176d3
  417678:	dec    eax
  417679:	add    al,0x85
  41767b:	jno    0x417650
  41767d:	sbb    ebx,edi
  41767f:	test   BYTE PTR [esi+0xa],ch
  417682:	js     0x41761f
  417684:	inc    ebp
  417685:	outs   dx,DWORD PTR ds:[esi]
  417686:	call   0x1339:0x1f84cecf
  41768d:	cmp    ch,BYTE PTR [edi+ecx*8]
  417690:	loope  0x4176d1
  417692:	popf   
  417693:	or     edi,DWORD PTR [edi+0x69e449d4]
  417699:	rcl    edi,1
  41769b:	shl    ecx,cl
  41769d:	(bad)  
  41769e:	out    0xe1,al
  4176a0:	sbb    eax,0x4309923a
  4176a5:	lea    eax,[edi+0x563ba47b]
  4176ab:	aaa    
  4176ac:	mov    al,BYTE PTR fs:[edx-0x71]
  4176b0:	lahf   
  4176b1:	and    cl,cl
  4176b3:	(bad)  
  4176b4:	ficomp DWORD PTR [edi-0x4037a9d0]
  4176ba:	enter  0xc7a1,0x57
  4176be:	dec    eax
  4176bf:	cs pop ebp
  4176c1:	rcr    BYTE PTR [ebp+ebp*1-0x446c1f05],cl
  4176c8:	addr16 adc ebp,ebx
  4176cb:	rcr    ch,0xd7
  4176ce:	mov    esi,0xece10126
  4176d3:	sub    bh,BYTE PTR [ebx-0x49]
  4176d6:	and    eax,0x738c311e
  4176db:	pop    edx
  4176dc:	xor    dh,BYTE PTR [esi]
  4176de:	dec    edi
  4176df:	push   ecx
  4176e0:	mov    ebx,0xc96c2f00
  4176e5:	iret   
  4176e6:	cdq    
  4176e7:	xchg   ebx,eax
  4176e8:	mov    BYTE PTR [edi-0x641cbdf9],0x2c
  4176ef:	sub    al,0xe8
  4176f1:	and    DWORD PTR [esi+0x3487c82],esi
  4176f7:	std    
  4176f8:	sbb    DWORD PTR [esi+0x199ce7bd],ebp
  4176fe:	hlt    
  4176ff:	sub    bh,al
  417701:	popa   
  417702:	xchg   esp,eax
  417703:	ss dec ebx
  417705:	xchg   eax,edx
  417707:	scas   eax,DWORD PTR es:[edi]
  417708:	pushf  
  417709:	lods   al,BYTE PTR ds:[esi]
  41770a:	lock (bad) 
  41770c:	jp     0x417759
  41770e:	sar    BYTE PTR [edx+ecx*4-0x44e8e031],1
  417715:	int3   
  417716:	nop
  417717:	nop
  417718:	add    al,al
  41771a:	test   al,0x49
  41771c:	rep outs dx,BYTE PTR ds:[esi]
  41771e:	mov    cs,WORD PTR [edx]
  417720:	xchg   edi,eax
  417721:	cmp    DWORD PTR [edx+eiz*2+0x17eac3b1],ecx
  417728:	jnp    0x41774a
  41772a:	mov    ah,0x61
  41772c:	sbb    al,0xdf
  41772e:	jle    0x4176ca
  417730:	ficom  WORD PTR [eax-0x4fbb99c6]
  417736:	into   
  417737:	out    0x7d,al
  417739:	cmp    BYTE PTR [edx+0x5c],bh
  41773c:	test   DWORD PTR [esi],edi
  41773e:	shl    ebp,1
  417740:	push   edi
  417741:	mov    eax,0x7acc599a
  417746:	jmp    0xbbc428c9
  41774b:	bswap  esi
  41774d:	jo     0x4176d2
  41774f:	je     0x41777a
  417751:	adc    eax,0xb36199bb
  417756:	jle    0x4177c7
  417758:	push   ebx
  417759:	add    eax,0x201d8b9b
  41775e:	retf   0x443e
  417761:	mov    ecx,0x56957a2f
  417766:	sbb    DWORD PTR [ebp+0x56],edi
  417769:	daa    
  41776a:	sbb    DWORD PTR gs:[ecx],0x19
  41776e:	ins    DWORD PTR es:[edi],dx
  41776f:	dec    eax
  417770:	call   0x5bdf2d12
  417775:	adc    bl,BYTE PTR [esi-0x68]
  417778:	xchg   BYTE PTR [edi+0x18d7a985],dh
  41777e:	or     BYTE PTR [ecx],0x4b
  417781:	and    edx,ecx
  417783:	mov    esi,0x33931a09
  417788:	cmp    dl,dl
  41778a:	fsub   DWORD PTR [ecx-0x3]
  41778d:	ds xchg ebx,eax
  41778f:	jmp    0x6f6b:0xcb3b4c1d
  417796:	fbld   TBYTE PTR [edx-0x25050a50]
  41779c:	jae    0x4177ec
  41779e:	(bad)  
  41779f:	scas   al,BYTE PTR es:[edi]
  4177a0:	mov    bh,0xca
  4177a2:	inc    eax
  4177a3:	mov    ds:0xd745ca9,eax
  4177a8:	mov    bl,0xde
  4177aa:	push   ds
  4177ab:	jmp    0xb25e:0xbee7a83
  4177b2:	jp     0x41775f
  4177b4:	adc    DWORD PTR [edx],ebp
  4177b6:	inc    eax
  4177b7:	out    0x40,al
  4177b9:	ins    BYTE PTR es:[edi],dx
  4177ba:	cld    
  4177bb:	test   BYTE PTR [edx],dl
  4177bd:	push   es
  4177be:	jne    0x417756
  4177c0:	push   es
  4177c1:	loop   0x41779e
  4177c3:	and    al,dh
  4177c5:	out    dx,al
  4177c6:	pop    ecx
  4177c7:	lods   eax,DWORD PTR ds:[esi]
  4177c8:	outs   dx,BYTE PTR ds:[esi]
  4177c9:	in     al,dx
  4177ca:	enter  0x1c0f,0x9
  4177ce:	popa   
  4177cf:	jbe    0x4177c8
  4177d1:	mov    eax,0x82557ea1
  4177d6:	push   eax
  4177d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177d8:	aas    
  4177d9:	stos   BYTE PTR es:[edi],al
  4177da:	aaa    
  4177db:	add    DWORD PTR [ebx+edx*8],eax
  4177de:	mov    eax,ds:0xed720d30
  4177e3:	aad    0x7e
  4177e5:	(bad)  
  4177e6:	adc    dh,BYTE PTR [edi-0x266e0b98]
  4177ec:	sti    
  4177ed:	out    0x75,al
  4177ef:	adc    esi,ebx
  4177f1:	loope  0x4177fd
  4177f3:	or     cl,BYTE PTR [edx]
  4177f5:	in     al,0x70
  4177f7:	cmp    dh,BYTE PTR [edx-0x8b6c2ed]
  4177fd:	cmp    BYTE PTR [ebp+0x3fd94895],ch
  417803:	sbb    DWORD PTR [ecx-0x28],esp
  417806:	arpl   WORD PTR [edx],di
  417808:	aas    
  417809:	cmc    
  41780a:	sub    al,0x32
  41780c:	je     0x41788b
  41780e:	mov    esp,?
  417810:	pop    eax
  417811:	mov    bl,0xb3
  417813:	fidiv  DWORD PTR [eax]
  417815:	dec    edx
  417816:	or     al,0xfd
  417818:	sbb    BYTE PTR [edx+0x2a],ch
  41781b:	inc    ecx
  41781c:	pop    esp
  41781d:	and    ebp,eax
  41781f:	fld    TBYTE PTR [esi-0x6f]
  417822:	cdq    
  417823:	out    0xfd,al
  417825:	pop    esi
  417826:	xchg   esp,eax
  417827:	or     BYTE PTR [eax+0x2f],dh
  41782a:	loop   0x417844
  41782c:	dec    edi
  41782d:	jae    0x417877
  41782f:	and    BYTE PTR [ebx-0x7a],0xa4
  417833:	mov    esp,0xb38047ed
  417838:	mov    dl,0x58
  41783a:	or     DWORD PTR [edx-0x2],esi
  41783d:	push   ds
  41783e:	sbb    BYTE PTR [edx-0x28ab2f56],cl
  417844:	out    dx,eax
  417845:	enter  0xa53f,0xf0
  417849:	stc    
  41784a:	or     DWORD PTR [edi+0x61],edx
  41784d:	inc    esp
  41784e:	loope  0x41786e
  417850:	into   
  417851:	mov    al,ds:0x1d5bc0b2
  417856:	inc    esp
  417857:	mov    dl,0x6e
  417859:	scas   eax,DWORD PTR es:[edi]
  41785a:	mov    edi,0x8e97076f
  41785f:	ins    DWORD PTR es:[edi],dx
  417860:	(bad)  [edx]
  417862:	ficomp DWORD PTR [esi+0xefc4a9e]
  417868:	push   esi
  417869:	test   eax,0x3257c7f4
  41786e:	add    BYTE PTR [ecx+0x7d25943f],bl
  417874:	cwde   
  417875:	fidivr WORD PTR [esi-0x2f]
  417878:	mov    edx,0x5e9c4521
  41787d:	in     al,dx
  41787e:	in     al,0x71
  417880:	test   eax,0x379ff74b
  417885:	scas   al,BYTE PTR es:[edi]
  417886:	jp     0x417847
  417888:	mov    al,fs:0x6ac20d29
  41788e:	jl     0x41790b
  417890:	retf   0xb620
  417893:	loop   0x41784a
  417895:	test   eax,0x8e386569
  41789a:	mov    ebp,esp
  41789c:	outs   dx,DWORD PTR ds:[esi]
  41789d:	cdq    
  41789e:	call   0x7b830f16
  4178a3:	or     ebx,0x68
  4178a6:	add    edi,eax
  4178a8:	rcl    DWORD PTR [ebx+0x37],0xaf
  4178ac:	retf   0xf18a
  4178af:	outs   dx,BYTE PTR ds:[esi]
  4178b0:	sbb    al,0xcf
  4178b2:	mov    cl,0x8
  4178b4:	(bad)  
  4178b5:	dec    ecx
  4178b6:	mov    eax,0xd21d6bb4
  4178bb:	(bad)  
  4178bd:	(bad)  
  4178be:	fisubr DWORD PTR [esi+0x396a730f]
  4178c4:	xchg   edi,eax
  4178c5:	outs   dx,DWORD PTR ds:[esi]
  4178c6:	imul   edi,DWORD PTR [ebx-0x48c1eabf],0x6c
  4178cd:	jmp    0x167fc7d0
  4178d2:	(bad)  
  4178d3:	cmp    ah,bh
  4178d5:	or     al,cl
  4178d7:	pop    esp
  4178d8:	test   al,0xce
  4178da:	mov    al,0xd1
  4178dc:	xor    ebx,DWORD PTR [esi+ebp*2-0x68]
  4178e0:	retf   
  4178e1:	leave  
  4178e2:	add    eax,0x6da8838a
  4178e7:	ja     0x4178ed
  4178e9:	imul   edi,DWORD PTR [edi-0x1fada016],0xffffffdb
  4178f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f1:	mov    WORD PTR [edx+0xaca30b9],ss
  4178f7:	sbb    DWORD PTR [edi-0x5],ebx
  4178fa:	ficomp WORD PTR [edx-0x6a288e4e]
  417900:	push   ebx
  417901:	lods   eax,DWORD PTR ds:[esi]
  417902:	dec    ecx
  417903:	les    ebx,FWORD PTR [esi-0x5b30008a]
  417909:	push   0x52
  41790b:	sti    
  41790c:	mov    dl,0x8c
  41790e:	mov    WORD PTR [ecx],?
  417910:	dec    edi
  417911:	mov    ds:0xc4f4e140,al
  417916:	sub    ebp,DWORD PTR [ebx-0x30]
  417919:	enter  0xb3b7,0xa6
  41791d:	xchg   esi,eax
  41791e:	sbb    DWORD PTR [ebp-0x76],edx
  417921:	pop    ebx
  417922:	jnp    0x417942
  417924:	pushf  
  417925:	lahf   
  417926:	cmp    DWORD PTR [esp+edx*4],esp
  417929:	test   eax,0x9bc0dbdb
  41792e:	sbb    BYTE PTR [eax+0x1a],dl
  417931:	push   cs
  417932:	cmp    dl,BYTE PTR ds:0x9882b779
  417938:	mov    ds:0xec2de8e9,eax
  41793d:	fsubr  DWORD PTR [eax+edx*8]
  417940:	pop    edx
  417941:	call   0xaaa35c76
  417946:	push   ss
  417947:	xchg   edi,eax
  417948:	sbb    BYTE PTR [esi+ebx*4+0x67],0x4d
  41794d:	xchg   esi,eax
  41794e:	out    dx,al
  41794f:	jae    0x417994
  417951:	adc    eax,0x1a61d762
  417956:	dec    ecx
  417957:	test   DWORD PTR [ebp-0x4c653262],ecx
  41795d:	push   0x68
  41795f:	fisttp QWORD PTR [esi+0x1e]
  417962:	pusha  
  417963:	mov    ah,0xf8
  417965:	or     eax,0x35c1bbfd
  41796a:	mov    ds:0x54e9a5de,eax
  41796f:	push   edx
  417970:	daa    
  417971:	outs   dx,BYTE PTR ds:[esi]
  417972:	outs   dx,DWORD PTR ds:[esi]
  417973:	movlps QWORD PTR [eax+edi*2+0x44],xmm5
  417978:	dec    ebp
  417979:	mov    ebx,0xa13f4c05
  41797e:	dec    ebp
  41797f:	(bad)  
  417980:	inc    edi
  417981:	ins    DWORD PTR es:[edi],dx
  417982:	pop    edx
  417983:	outs   dx,DWORD PTR ds:[esi]
  417984:	sub    ebp,0xffffffd1
  417987:	data16 sub bh,BYTE PTR [esi-0x4d]
  41798b:	(bad)
  41798e:	stc    
  41798f:	in     al,0xad
  417991:	out    0x1,al
  417993:	and    al,0xc0
  417995:	js     0x417982
  417997:	push   esi
  417998:	fwait
  417999:	sub    dl,cl
  41799b:	cmp    al,0x67
  41799d:	sub    BYTE PTR [eax],dh
  41799f:	push   es
  4179a0:	(bad)  
  4179a1:	loopne 0x4179fc
  4179a3:	loopne 0x41793f
  4179a5:	mov    ah,BYTE PTR [edi+0x71]
  4179a8:	std    
  4179a9:	inc    edi
  4179aa:	(bad)  
  4179ab:	retf   
  4179ac:	outs   dx,BYTE PTR ds:[esi]
  4179ad:	pop    esp
  4179ae:	shl    DWORD PTR [eax],1
  4179b0:	into   
  4179b1:	(bad)  
  4179b2:	mov    ch,0x13
  4179b4:	cmp    ah,BYTE PTR [eax-0x6a45db78]
  4179ba:	xchg   ebp,eax
  4179bb:	mov    cl,BYTE PTR [esi]
  4179bd:	mov    bh,0x16
  4179bf:	cmp    al,0x13
  4179c1:	mov    ?,WORD PTR [edi+ebp*1-0x3f9a0308]
  4179c8:	out    0x10,eax
  4179ca:	jo     0x4179dd
  4179cc:	push   ss
  4179cd:	scas   al,BYTE PTR es:[edi]
  4179ce:	push   edi
  4179cf:	(bad)  
  4179d0:	cmp    eax,0xda37716e
  4179d5:	cmp    cl,dl
  4179d7:	cmc    
  4179d8:	adc    ebx,DWORD PTR [eax+ebx*2-0x24]
  4179dc:	mov    ebp,0x718c0a3b
  4179e1:	mov    dl,0x8a
  4179e3:	mov    esp,0x16a4e0a4
  4179e8:	mov    al,ds:0xe7694dfb
  4179ed:	xor    ecx,ebx
  4179ef:	xchg   edx,eax
  4179f0:	in     al,0x1
  4179f2:	xor    bh,BYTE PTR [edi+ebx*8+0x3f509f39]
  4179f9:	mov    DWORD PTR [ecx+edx*4+0x24],ebp
  4179fd:	fidiv  DWORD PTR [ebp+0x4c]
  417a00:	in     al,0x6c
  417a02:	and    DWORD PTR ds:0x852d7e15,ebx
  417a08:	inc    ebp
  417a09:	adc    dh,BYTE PTR [edx]
  417a0b:	pop    edx
  417a0c:	push   ds
  417a0d:	mov    BYTE PTR [edi+0x46df7b43],dh
  417a13:	in     al,dx
  417a14:	arpl   WORD PTR [edx+0x1f27b22],cx
  417a1a:	leave  
  417a1b:	(bad)  
  417a1c:	ins    BYTE PTR es:[edi],dx
  417a1d:	mov    DWORD PTR [ecx-0x63295c31],eax
  417a23:	add    BYTE PTR [ebp-0x1d],bh
  417a26:	sbb    edi,DWORD PTR [ebx]
  417a28:	shl    DWORD PTR [ecx+0x7a],cl
  417a2b:	mov    ah,0xf7
  417a2d:	fcomip st,st(7)
  417a2f:	sub    eax,DWORD PTR [edi]
  417a31:	push   es
  417a32:	mov    WORD PTR [ebp-0x4aa97cbb],es
  417a38:	hlt    
  417a39:	mov    cl,0xda
  417a3b:	gs aad 0xb1
  417a3e:	sar    BYTE PTR [ebx-0x7e851724],1
  417a44:	jmp    0x417a98
  417a46:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a48:	adc    DWORD PTR ds:0x3a33435,0xd722bcbc
  417a52:	ins    DWORD PTR es:[edi],dx
  417a53:	sbb    eax,0x9ca08614
  417a58:	sbb    BYTE PTR [ecx+0x24],al
  417a5b:	jl     0x417a70
  417a5d:	mov    eax,gs:0xd32a33fa
  417a63:	popa   
  417a64:	in     al,dx
  417a65:	outs   dx,BYTE PTR ds:[esi]
  417a66:	jecxz  0x417a66
  417a68:	scas   al,BYTE PTR es:[edi]
  417a69:	and    eax,ecx
  417a6b:	inc    ebp
  417a6c:	(bad)
  417a70:	aam    0xae
  417a72:	shl    DWORD PTR [ebx-0x1a9976a1],0x2c
  417a79:	out    0xe8,al
  417a7b:	sbb    DWORD PTR [ebp-0x100ad0f],esp
  417a81:	inc    edi
  417a82:	fst    QWORD PTR [edi-0x45]
  417a85:	sar    BYTE PTR [esi],1
  417a87:	inc    DWORD PTR [edx+0x58]
  417a8a:	out    dx,eax
  417a8b:	xchg   esi,eax
  417a8c:	mov    edx,0x1e112eb0
  417a91:	in     eax,dx
  417a92:	aas    
  417a93:	mov    dl,0x7f
  417a95:	sbb    eax,0xdb17240
  417a9a:	push   0x81ac755a
  417a9f:	mov    ah,ch
  417aa1:	xchg   ebp,eax
  417aa2:	imul   eax,DWORD PTR [ebp+0x3bcaae4f],0x58
  417aa9:	fsub   st,st(4)
  417aab:	into   
  417aac:	cli    
  417aad:	xchg   ebx,eax
  417aae:	adc    eax,0xc161fb1
  417ab3:	sbb    DWORD PTR [edi+edi*1-0x6b705bf5],eax
  417aba:	daa    
  417abb:	lock sub bl,bh
  417abe:	sbb    BYTE PTR [esp+eax*2],0x4e
  417ac2:	sar    BYTE PTR [edi],0x9
  417ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ac6:	jmp    0x417a76
  417ac8:	jne    0x417a5e
  417aca:	push   edx
  417acb:	dec    ebx
  417acc:	xor    dl,dh
  417ace:	pop    ebx
  417acf:	mov    WORD PTR [ebp+0xa],gs
  417ad2:	retf   0xaaa2
  417ad5:	mov    BYTE PTR [edx],dl
  417ad7:	xor    al,0x5c
  417ad9:	leave  
  417ada:	(bad)  
  417adb:	iret   
  417adc:	jnp    0x417ae0
  417ade:	pop    ds
  417adf:	sbb    BYTE PTR [edi-0x68],dh
  417ae2:	cdq    
  417ae3:	sbb    eax,0xab754321
  417ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae9:	pop    es
  417aea:	scas   al,BYTE PTR es:[edi]
  417aeb:	pop    ebp
  417aec:	push   ss
  417aed:	arpl   dx,ax
  417aef:	js     0x417a78
  417af1:	xchg   edi,eax
  417af2:	dec    edi
  417af3:	mov    ?,WORD PTR [ebx]
  417af5:	mov    al,0xf0
  417af7:	sti    
  417af8:	pop    eax
  417af9:	das    
  417afa:	push   0x7609cb56
  417aff:	div    esi
  417b01:	dec    DWORD PTR [edx-0x6566d183]
  417b07:	sbb    al,0x5c
  417b09:	sar    DWORD PTR [ecx],0xfb
  417b0c:	and    BYTE PTR [edx+ebx*8],al
  417b0f:	mov    ds:0x9fe381d9,eax
  417b14:	sar    esp,cl
  417b16:	imul   eax,eax,0xffffffc3
  417b19:	nop
  417b1a:	add    eax,0xc32fb518
  417b1f:	sbb    eax,0xa2c4e5dc
  417b24:	addr16 mov bh,0x8d
  417b27:	daa    
  417b28:	dec    ebp
  417b29:	fstp   QWORD PTR ds:0x114dcce9
  417b2f:	or     BYTE PTR [ebp+0x3241f66e],al
  417b35:	jl     0x417ae5
  417b37:	scas   eax,DWORD PTR es:[edi]
  417b38:	xor    bh,cl
  417b3a:	sbb    ch,0x28
  417b3d:	xor    DWORD PTR [ebp-0x44b0ca00],edi
  417b43:	in     al,0xde
  417b45:	or     BYTE PTR [ecx-0x245066cf],bl
  417b4b:	mov    WORD PTR [edx+0x14a2bca8],ds
  417b51:	xor    bl,BYTE PTR [ecx-0x1e726380]
  417b57:	outs   dx,DWORD PTR ds:[esi]
  417b58:	cmp    DWORD PTR [ebp+0x74c18a79],0x72
  417b5f:	pushf  
  417b60:	xchg   BYTE PTR [ecx+0x47],bh
  417b63:	push   esp
  417b64:	mov    WORD PTR [ebx-0x2d],ss
  417b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b68:	push   cs
  417b69:	adc    eax,0x8bdac78b
  417b6e:	sbb    edx,DWORD PTR [edi]
  417b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b71:	mov    ebp,0x4823fc31
  417b76:	xchg   esi,eax
  417b77:	outs   dx,DWORD PTR ds:[esi]
  417b78:	rol    BYTE PTR [edi-0x153e4208],1
  417b7e:	loope  0x417b33
  417b80:	add    ecx,DWORD PTR ds:0x875049f7
  417b86:	fucomip st,st(1)
  417b88:	je     0x417b0c
  417b8a:	mov    dl,0x13
  417b8c:	sbb    ecx,DWORD PTR [ecx+0x5a]
  417b8f:	es xor al,0x67
  417b92:	nop
  417b93:	ffree  st(0)
  417b95:	rcr    BYTE PTR [edi+0x5e1bf866],1
  417b9b:	xor    ebp,DWORD PTR [esi-0x51f77c3a]
  417ba1:	sbb    DWORD PTR [eax+0x52],edi
  417ba4:	push   ss
  417ba5:	pop    ss
  417ba6:	add    eax,0x1e598450
  417bab:	mov    al,0x97
  417bad:	mov    ebx,0xe5b95bcf
  417bb2:	mov    cl,0x5d
  417bb4:	or     bh,al
  417bb6:	fwait
  417bb7:	inc    esi
  417bb8:	add    ebp,ecx
  417bba:	dec    ebx
  417bbb:	inc    edi
  417bbc:	mov    ebx,0x9023a88f
  417bc1:	repz shl BYTE PTR [ebp+edi*4+0x76],cl
  417bc6:	inc    edi
  417bc7:	xor    eax,ebx
  417bc9:	pop    edi
  417bca:	pop    edi
  417bcb:	(bad)  
  417bcc:	loopne 0x417c2c
  417bce:	mov    BYTE PTR [edx-0x348107b3],al
  417bd4:	inc    esp
  417bd5:	ss xor al,0xce
  417bd8:	inc    esp
  417bd9:	push   cs
  417bda:	jns    0x417bba
  417bdc:	cmp    BYTE PTR [eax+0x4b4b80b1],ah
  417be2:	sahf   
  417be3:	dec    ebx
  417be4:	push   edx
  417be5:	dec    edx
  417be6:	pop    ebp
  417be7:	idiv   DWORD PTR [ebp-0x6e22bb9f]
  417bed:	cmp    DWORD PTR [ebx+0x1a],ebx
  417bf0:	adc    DWORD PTR [edi+0x75],ebx
  417bf3:	adc    esp,DWORD PTR [eax]
  417bf5:	test   al,0x49
  417bf7:	jnp    0x417b89
  417bf9:	xor    DWORD PTR [eax+ecx*8-0x3e],0x11
  417bfe:	fs push ds
  417c00:	repz xor dh,bh
  417c03:	les    esi,FWORD PTR [edx+0x7e]
  417c06:	adc    BYTE PTR [ebp-0x18],0x43
  417c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c0b:	push   ebx
  417c0c:	imul   esi
  417c0e:	outs   dx,DWORD PTR ds:[esi]
  417c0f:	add    BYTE PTR [edx],ch
  417c11:	mov    dl,BYTE PTR [esi]
  417c13:	jo     0x417c47
  417c15:	dec    ebp
  417c16:	cdq    
  417c17:	push   ebx
  417c18:	fstp   DWORD PTR [edi+0x44]
  417c1b:	mov    esp,0x78a4cc09
  417c20:	cwde   
  417c21:	loopne 0x417c87
  417c23:	inc    ebp
  417c24:	pop    esi
  417c25:	add    DWORD PTR [edx+edi*4+0x46b5448f],ebp
  417c2c:	fistp  DWORD PTR [esp+ecx*8]
  417c2f:	mov    al,ds:0xdeb32311
  417c34:	sub    eax,DWORD PTR [ebx+0xc23fbca]
  417c3a:	cdq    
  417c3b:	push   ss
  417c3c:	inc    eax
  417c3d:	clc    
  417c3e:	fwait
  417c3f:	gs push esp
  417c41:	and    DWORD PTR [ebp+0x722234bd],0x59d856c2
  417c4b:	push   edx
  417c4c:	jl     0x417cbd
  417c4e:	or     eax,0x8fc50e5c
  417c53:	jmp    0xb21e1efc
  417c58:	adc    eax,0x319ea3c1
  417c5d:	push   edi
  417c5e:	cmp    al,0x43
  417c60:	push   cs
  417c61:	aaa    
  417c62:	xor    eax,0x2a99e6e
  417c67:	push   ss
  417c68:	mov    dh,0x57
  417c6a:	push   ss
  417c6b:	pop    ss
  417c6c:	(bad)  
  417c6d:	aam    0x81
  417c6f:	call   0x1763a38
  417c74:	push   esi
  417c75:	iret   
  417c76:	xchg   cl,al
  417c78:	imul   ebp,esp,0x2dd4acb3
  417c7e:	les    esp,FWORD PTR [edx+0x2d]
  417c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c82:	pop    ecx
  417c83:	cld    
  417c84:	mov    bl,dh
  417c86:	or     dl,BYTE PTR ss:[ebx-0x79770997]
  417c8d:	popa   
  417c8e:	xchg   esi,eax
  417c8f:	cmp    bh,BYTE PTR [ebx+0x1d]
  417c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c93:	pop    ebx
  417c94:	sub    DWORD PTR [ebx+0x8dc6298],edx
  417c9a:	sahf   
  417c9b:	mov    dh,0xc2
  417c9d:	mov    ds:0xcb15ac2a,eax
  417ca2:	ffree  st(6)
  417ca4:	bound  eax,QWORD PTR [ebx+0x5bc45ef5]
  417caa:	pop    esp
  417cab:	inc    edi
  417cac:	fadd   st(4),st
  417cae:	cmp    DWORD PTR ds:0xd313978e,eax
  417cb4:	inc    esp
  417cb5:	xchg   esi,eax
  417cb6:	int3   
  417cb7:	adc    eax,0xd9f49a4d
  417cbc:	mov    esp,0xd09162a0
  417cc1:	lds    esi,FWORD PTR [ebx+0x1b]
  417cc4:	(bad)  
  417cc5:	mov    ch,0x66
  417cc7:	xor    di,WORD PTR [esi]
  417cca:	ret    
  417ccb:	sbb    al,BYTE PTR [ecx+0x6a]
  417cce:	dec    ecx
  417ccf:	add    al,0x4e
  417cd1:	mov    WORD PTR [ebp-0x2a],ss
  417cd4:	mov    edi,0x7f20557c
  417cd9:	pop    edi
  417cda:	data16 aam 0x3c
  417cdd:	daa    
  417cde:	scas   eax,DWORD PTR es:[edi]
  417cdf:	mov    DWORD PTR [edx+0x638ba334],ebp
  417ce5:	ds mov esp,0x73ea66d
  417ceb:	mov    ebx,0xaf770fff
  417cf0:	scas   al,BYTE PTR es:[edi]
  417cf1:	mov    esp,0x157634c8
  417cf6:	das    
  417cf7:	lds    edi,FWORD PTR [ebx]
  417cf9:	aas    
  417cfa:	mov    esp,0xfd9b7eac
  417cff:	lds    edx,FWORD PTR [edx+0x4b1d5520]
  417d05:	(bad)  
  417d06:	jg     0x417cf0
  417d08:	jge    0x417d0e
  417d0a:	in     eax,0x92
  417d0c:	lahf   
  417d0d:	jo     0x417d34
  417d0f:	sub    bl,ah
  417d11:	pcmpgtw mm2,QWORD PTR [edi+ebp*4+0x7d95d9e5]
  417d19:	mov    ecx,0x41ad603a
  417d1e:	sbb    ecx,DWORD PTR [ebx-0xb]
  417d21:	imul   ebp,DWORD PTR [ebx+0x7bb9e73],0x8143b044
  417d2b:	out    dx,eax
  417d2c:	call   esi
  417d2e:	fs mov bl,0xc3
  417d31:	push   es
  417d32:	adc    DWORD PTR [esi],0x9ef951ba
  417d38:	inc    edi
  417d39:	nop
  417d3a:	test   DWORD PTR [ebx+0x492c1f14],esi
  417d40:	ja     0x417dc1
  417d42:	jno    0x417cd6
  417d44:	ins    BYTE PTR es:[edi],dx
  417d45:	inc    ebp
  417d46:	(bad)  
  417d47:	or     DWORD PTR [edi-0x5b],ebp
  417d4a:	push   ss
  417d4b:	out    0x1e,eax
  417d4d:	push   eax
  417d4e:	add    eax,ebx
  417d50:	sti    
  417d51:	push   0x4f
  417d53:	or     bh,BYTE PTR [ecx-0x7b]
  417d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d57:	mov    BYTE PTR [ecx+edi*2-0x1c],0xd3
  417d5c:	push   0x2ec538ac
  417d61:	dec    esp
  417d62:	and    bh,0xd6
  417d65:	enter  0x832e,0xe8
  417d69:	jecxz  0x417d3b
  417d6b:	mov    ecx,0x7cee15fc
  417d70:	icebp  
  417d71:	add    al,0x3
  417d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d74:	ins    DWORD PTR es:[edi],dx
  417d75:	sbb    ecx,ecx
  417d77:	sbb    al,0x89
  417d79:	popa   
  417d7a:	xor    al,0x83
  417d7c:	sub    eax,0x6dae7872
  417d81:	test   eax,0x9819ec28
  417d86:	repz scas al,BYTE PTR es:[edi]
  417d88:	ret    
  417d89:	sti    
  417d8a:	lods   eax,DWORD PTR ds:[esi]
  417d8b:	xchg   ecx,eax
  417d8c:	int    0xf6
  417d8e:	test   eax,ebx
  417d90:	lods   al,BYTE PTR ds:[esi]
  417d91:	jnp    0x417d88
  417d93:	pop    esi
  417d94:	ret    0xa0ce
  417d97:	mov    esp,0xcf2aeaf1
  417d9c:	xchg   BYTE PTR [esi+eax*2],ah
  417d9f:	and    ebp,DWORD PTR [ecx+0x77aa3571]
  417da5:	sbb    BYTE PTR [edx-0x188eb067],bh
  417dab:	pop    esi
  417dac:	test   esi,0x2e0f61d4
  417db2:	mov    esi,0x94c87199
  417db7:	adc    eax,DWORD PTR [ebx-0x51]
  417dba:	out    dx,al
  417dbb:	ss sbb eax,0x10d7ee07
  417dc1:	jns    0x417d95
  417dc3:	cmp    ah,BYTE PTR [ecx+0x6c]
  417dc6:	jp     0x417d67
  417dc8:	iret   
  417dc9:	(bad)  
  417dca:	jo     0x417d5e
  417dcc:	leave  
  417dcd:	ss mov esi,es
  417dd0:	sar    dl,cl
  417dd2:	call   0xc347:0x901d3023
  417dd9:	push   edx
  417dda:	inc    ebx
  417ddb:	mov    edi,0x9781a437
  417de0:	jmp    0x417dc6
  417de2:	jle    0x417dae
  417de4:	xchg   esp,eax
  417de5:	(bad)  
  417de6:	sti    
  417de7:	sub    ah,BYTE PTR [ebx+edx*8+0x73ccaac5]
  417dee:	sub    dl,BYTE PTR [edi+edx*2-0x2d3293d7]
  417df5:	(bad)
  417df8:	outs   dx,DWORD PTR ds:[esi]
  417df9:	bound  eax,QWORD PTR [esi+0x61]
  417dfc:	jmp    0xd312:0xbb3681e9
  417e03:	cmp    dl,BYTE PTR [edi+0x2e]
  417e06:	adc    eax,0x16a0e983
  417e0b:	jo     0x417e5c
  417e0d:	pop    ss
  417e0e:	shl    BYTE PTR [ecx+0x3fe46e7b],cl
  417e14:	xor    edx,DWORD PTR [edx]
  417e16:	push   ebp
  417e17:	je     0x417e50
  417e19:	fidiv  WORD PTR [edx]
  417e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e1c:	aas    
  417e1d:	rol    BYTE PTR [ecx],cl
  417e1f:	outs   dx,DWORD PTR ds:[esi]
  417e20:	jle    0x417e3f
  417e22:	mov    ds:0x6c815230,al
  417e27:	inc    edx
  417e28:	pop    eax
  417e29:	scas   eax,DWORD PTR es:[edi]
  417e2a:	fcos   
  417e2c:	mov    edi,0x6bd3fef6
  417e31:	(bad)  [edx-0x4cbd15eb]
  417e37:	(bad)
  417e3a:	sbb    edi,DWORD PTR [edi+0x3f]
  417e3d:	pop    ds
  417e3e:	lods   eax,DWORD PTR ds:[esi]
  417e3f:	dec    ebp
  417e40:	aas    
  417e41:	sub    al,0x65
  417e43:	jae    0x417dd7
  417e45:	bound  edi,QWORD PTR [eax+0x4c]
  417e48:	push   cs
  417e49:	push   esp
  417e4a:	mov    ecx,0x277c707a
  417e4f:	push   cs
  417e50:	loopne 0x417e87
  417e52:	or     ebx,DWORD PTR [edx-0x70d74563]
  417e58:	es pop ebp
  417e5a:	and    ecx,DWORD PTR [ebx+0x2b]
  417e5d:	jecxz  0x417ea8
  417e5f:	lods   al,BYTE PTR ds:[esi]
  417e60:	cmp    al,0x5d
  417e62:	xchg   ecx,eax
  417e63:	stc    
  417e64:	sub    bl,cl
  417e66:	ins    DWORD PTR es:[edi],dx
  417e67:	in     eax,0xcf
  417e69:	ds ds popa 
  417e6c:	mov    edi,edi
  417e6e:	mov    edx,0x1feb8c17
  417e73:	fs loope 0x417e2e
  417e76:	ds mov ebp,0xf175c0b7
  417e7c:	test   eax,0x4a695e5f
  417e81:	xor    eax,0xf44a9093
  417e86:	daa    
  417e87:	sub    esp,DWORD PTR [ebx+0x16]
  417e8a:	cmp    eax,0xcfdda35d
  417e8f:	call   0x14bf:0xa8be973a
  417e96:	fild   DWORD PTR [esi]
  417e98:	and    eax,0x179f2874
  417e9d:	nop
  417e9e:	(bad)  
  417e9f:	les    esp,FWORD PTR [eax]
  417ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea2:	popf   
  417ea3:	ins    DWORD PTR es:[edi],dx
  417ea4:	test   DWORD PTR [esi+0x612f090f],ebp
  417eaa:	dec    esi
  417eab:	jns    0x417ee5
  417ead:	data16 loope 0x417e71
  417eb0:	and    eax,0x9d4881d1
  417eb5:	pop    ds
  417eb6:	jbe    0x417e61
  417eb8:	add    eax,DWORD PTR [esi]
  417eba:	adc    edx,ebp
  417ebc:	pop    ds
  417ebd:	scas   eax,DWORD PTR es:[edi]
  417ebe:	loope  0x417eff
  417ec0:	or     ebx,DWORD PTR [edx]
  417ec2:	mov    bh,cl
  417ec4:	cmp    esi,DWORD PTR [ebx+0x76]
  417ec7:	and    ah,BYTE PTR [ecx+0xbe55968]
  417ecd:	and    DWORD PTR [eax-0xd],esi
  417ed0:	call   0x1897:0x43bcbc18
  417ed7:	not    ebx
  417ed9:	aaa    
  417eda:	loope  0x417eab
  417edc:	ja     0x417f4d
  417ede:	daa    
  417edf:	mov    ch,0xf3
  417ee1:	pop    esp
  417ee2:	add    eax,0x4b9d01f
  417ee7:	mov    ch,0xf9
  417ee9:	(bad)  
  417eea:	das    
  417eeb:	or     cl,al
  417eed:	xchg   edi,eax
  417eee:	dec    edx
  417eef:	cli    
  417ef0:	cmp    DWORD PTR [ebp-0x5f],edi
  417ef3:	mov    ecx,0x21d2448d
  417ef8:	mov    bl,0x6d
  417efa:	jg     0x417f32
  417efc:	sbb    eax,0xd75fd35f
  417f01:	adc    ch,bh
  417f03:	mov    esp,0xc3addbb7
  417f08:	xor    esp,DWORD PTR [ecx+0x43ff2b2b]
  417f0e:	loope  0x417ece
  417f10:	ins    DWORD PTR es:[edi],dx
  417f11:	sub    DWORD PTR ss:[edx+ebp*4],0x7f
  417f16:	mov    al,0xa5
  417f18:	sbb    al,0x34
  417f1a:	ds cld 
  417f1c:	fst    DWORD PTR [eax+eiz*1+0x5b]
  417f20:	(bad)  
  417f21:	mov    ds:0x184d3386,al
  417f26:	mov    ds:0x4de3a992,al
  417f2b:	and    al,0x77
  417f2d:	xchg   DWORD PTR [edx-0x4268e708],ebx
  417f33:	mov    ecx,0xa339cc8e
  417f38:	dec    esi
  417f39:	xchg   ecx,eax
  417f3a:	call   0xcc170156
  417f3f:	dec    esp
  417f40:	ds push ds
  417f42:	movups xmm4,xmm1
  417f45:	(bad)  
  417f46:	push   0x751182df
  417f4b:	sbb    edx,DWORD PTR ds:0x815141ac
  417f51:	sbb    BYTE PTR [ebx-0x9b5c2d],dl
  417f57:	push   ecx
  417f58:	daa    
  417f59:	js     0x417f6c
  417f5b:	push   ebx
  417f5c:	xor    al,0x82
  417f5e:	fwait
  417f5f:	addr16 icebp 
  417f61:	jnp    0x417fa9
  417f63:	inc    edi
  417f64:	lea    ecx,[ebx-0x361338f]
  417f6a:	fbld   TBYTE PTR [ebx]
  417f6c:	retf   
  417f6d:	mov    dh,0xdf
  417f6f:	adc    DWORD PTR [edi+ecx*8-0xe0dc7c8],edi
  417f76:	xchg   esp,eax
  417f77:	repz iret 
  417f79:	mov    cl,bh
  417f7b:	add    BYTE PTR [edi-0x58e54c6],cl
  417f81:	sub    DWORD PTR [eax-0x4e70f7bf],edi
  417f87:	fwait
  417f88:	scas   al,BYTE PTR es:[edi]
  417f89:	(bad)  
  417f8a:	lock mov ds:0xf30721ad,eax
  417f90:	test   al,0xf6
  417f92:	xor    cl,dh
  417f94:	adc    al,0x95
  417f96:	pop    ds
  417f97:	(bad)  
  417f98:	gs mov ch,0xb9
  417f9b:	lods   al,BYTE PTR ds:[esi]
  417f9c:	int    0x74
  417f9e:	push   ebp
  417f9f:	lods   eax,DWORD PTR ds:[esi]
  417fa0:	xlat   BYTE PTR ds:[ebx]
  417fa1:	pop    ss
  417fa2:	or     ebx,ebx
  417fa4:	ja     0x417f71
  417fa6:	inc    esi
  417fa7:	xchg   ebp,eax
  417fa8:	ror    edi,1
  417faa:	mov    ds:0x79a6ab3b,eax
  417faf:	addr16 in eax,0x95
  417fb2:	enter  0xf9af,0x1
  417fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb7:	fsubr  QWORD PTR [ebx-0x5f]
  417fba:	inc    eax
  417fbb:	xchg   ebp,eax
  417fbc:	add    BYTE PTR [ebx-0x1bc3c1e5],dh
  417fc2:	fadd   st(2),st
  417fc4:	xor    eax,0x7e89dca
  417fc9:	repz sbb al,0x2e
  417fcc:	ja     0x417fca
  417fce:	sbb    DWORD PTR [esi+0x5f],eax
  417fd1:	mov    edx,0x8ea943c6
  417fd6:	hlt    
  417fd7:	and    al,0xae
  417fd9:	xlat   BYTE PTR ds:[ebx]
  417fda:	leave  
  417fdb:	nop
  417fdc:	xchg   ecx,eax
  417fdd:	push   0xa76e8a7c
  417fe2:	inc    edi
  417fe3:	ror    BYTE PTR [edi-0x32],cl
  417fe6:	pop    edx
  417fe7:	or     eax,0x1fedd3db
  417fec:	dec    eax
  417fed:	mov    al,ds:0xa8fa91fc
  417ff2:	or     ebp,DWORD PTR [eax+0x39]
  417ff5:	add    ch,BYTE PTR [ecx]
  417ff7:	retf   0x94b0
  417ffa:	jne    0x417f9c
  417ffc:	bound  ebx,QWORD PTR [edx+0x3ecdb993]
  418002:	and    esi,edi
  418004:	out    0x5c,eax
  418006:	adc    ch,BYTE PTR [ecx+0x622ddb9a]
  41800c:	dec    esp
  41800d:	repnz inc ecx
  41800f:	js     0x417fc1
  418011:	jmp    0x417fad
  418013:	push   ebp
  418014:	pop    esi
  418015:	xor    al,0x70
  418017:	cs cmc 
  418019:	in     eax,dx
  41801a:	notrack call eax
  41801d:	rcr    DWORD PTR [ebx+0x3d57f6ff],1
  418023:	imul   esp,DWORD PTR [ebx-0x24],0xb7eb6b12
  41802a:	pop    eax
  41802b:	and    ah,bh
  41802d:	inc    esi
  41802e:	or     esp,ebp
  418030:	aas    
  418031:	aam    0xc
  418033:	outs   dx,BYTE PTR ds:[esi]
  418034:	clc    
  418035:	shl    BYTE PTR [edx-0x2ae66d26],cl
  41803b:	fdivr  QWORD PTR ds:[ebp+0x2]
  41803f:	inc    eax
  418040:	pusha  
  418041:	repnz add DWORD PTR [esi],0xfb844
  418048:	xchg   ecx,eax
  418049:	adc    bl,BYTE PTR ds:0xe51288
  41804f:	fidiv  DWORD PTR [ecx]
  418051:	test   ecx,eax
  418053:	xor    eax,0x40a83c18
  418058:	out    dx,al
  418059:	es jmp 0xf4be:0x25af86d9
  418061:	mov    ch,0x1c
  418063:	mov    al,ds:0x43d2d9ae
  418068:	dec    esi
  418069:	rol    BYTE PTR [ecx-0x38],0xd3
  41806d:	mov    cl,0xb9
  41806f:	js     0x41802c
  418071:	cmp    eax,0xf5878aca
  418076:	leave  
  418077:	xchg   BYTE PTR [edx-0x569fd00],cl
  41807d:	mov    dh,BYTE PTR [esi]
  41807f:	jb     0x418012
  418081:	jo     0x4180ad
  418083:	mov    bh,0xad
  418085:	test   al,0xa0
  418087:	cmc    
  418088:	sti    
  418089:	mov    dh,0x66
  41808b:	and    edx,DWORD PTR [ecx-0x14b522e5]
  418091:	loope  0x4180cf
  418093:	sub    eax,0x600448c0
  418098:	jge    0x4180a4
  41809a:	dec    ebp
  41809b:	xor    dl,BYTE PTR [edx+0x5433d3e3]
  4180a1:	xor    DWORD PTR [edi],ecx
  4180a3:	push   esp
  4180a4:	std    
  4180a5:	cmp    edi,esi
  4180a7:	jb     0x4180ad
  4180a9:	xlat   BYTE PTR ds:[ebx]
  4180aa:	popa   
  4180ab:	sbb    DWORD PTR [edi],edx
  4180ad:	xchg   esi,eax
  4180ae:	pop    esi
  4180af:	dec    eax
  4180b0:	pop    ebx
  4180b1:	mov    edi,0xaea8298c
  4180b6:	cmp    ch,BYTE PTR [ebp+0x59ef0847]
  4180bc:	adc    edx,DWORD PTR [ecx+0x270c65ed]
  4180c2:	sar    DWORD PTR [edx],0xc
  4180c5:	pusha  
  4180c6:	aas    
  4180c7:	jns    0x418128
  4180c9:	lods   al,BYTE PTR ds:[esi]
  4180ca:	push   0x2308f32b
  4180cf:	popa   
  4180d0:	dec    edi
  4180d1:	mov    esp,0x43684148
  4180d6:	mov    ecx,0xf9505800
  4180db:	shl    DWORD PTR [ecx+0x36],1
  4180de:	mov    bh,0xf2
  4180e0:	jmp    0x8ff5:0xee0f2b57
  4180e7:	mov    ah,0x5a
  4180e9:	push   eax
  4180ea:	mov    fs,WORD PTR [ecx+0x79]
  4180ed:	ja     0x41810c
  4180ef:	bound  esp,QWORD PTR [edx-0x79]
  4180f2:	fisub  DWORD PTR [edx]
  4180f4:	mov    esp,cs
  4180f6:	jle    0x41807c
  4180f8:	mov    WORD PTR [eax],cs
  4180fa:	addr16 mov esp,ss
  4180fd:	push   ecx
  4180fe:	mov    ebp,DWORD PTR [esi+ebx*8]
  418101:	inc    eax
  418102:	sub    bh,BYTE PTR [edx+0x7987696d]
  418108:	js     0x418116
  41810a:	sub    bl,BYTE PTR [ecx]
  41810c:	mov    ecx,0x4b3d80ad
  418111:	jae    0x4180bf
  418113:	imul   DWORD PTR [esi+eiz*1]
  418116:	pop    esi
  418117:	cmp    bl,BYTE PTR [esp+edi*8+0xa366424]
  41811e:	aas    
  41811f:	add    al,0x17
  418121:	xchg   BYTE PTR [ebx+0x3aa55296],bl
  418127:	mov    eax,DWORD PTR [edi]
  418129:	inc    edx
  41812a:	push   ebx
  41812b:	mov    esp,0x6d7bf621
  418130:	mov    ebp,0x9fd8f64d
  418135:	jns    0x418198
  418137:	or     al,0x6a
  418139:	jecxz  0x4180f9
  41813b:	dec    eax
  41813c:	ror    BYTE PTR [ecx-0x682a06ed],cl
  418142:	pushf  
  418143:	mov    eax,0xdb3b8833
  418148:	stc    
  418149:	pop    es
  41814a:	xchg   ebp,eax
  41814b:	aad    0x9f
  41814d:	jne    0x418130
  41814f:	(bad)  
  418150:	fcmovnbe st,st(4)
  418152:	sbb    ebp,edx
  418154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418155:	jge    0x41813a
  418157:	mov    ecx,0x7407638e
  41815c:	loop   0x4180ec
  41815e:	jns    0x418164
  418160:	pop    eax
  418161:	cs jae 0x4180fa
  418164:	retf   
  418165:	fidivr DWORD PTR [eax]
  418167:	adc    DWORD PTR [ebp-0x5e110ef5],edi
  41816d:	hlt    
  41816e:	push   ebp
  41816f:	fsubr  QWORD PTR [eax]
  418171:	data16 sbb dl,al
  418174:	cvtps2pi mm0,QWORD PTR [eax+esi*4+0x7c]
  418179:	sub    ebp,esi
  41817b:	xchg   edi,eax
  41817c:	push   cs
  41817d:	scas   al,BYTE PTR es:[edi]
  41817e:	inc    ebx
  41817f:	ror    eax,cl
  418181:	mov    ecx,0x12beaabd
  418186:	xor    al,0xc1
  418188:	push   es
  418189:	mov    dl,0x9c
  41818b:	jbe    0x41813a
  41818d:	or     eax,0xa3c88771
  418192:	into   
  418193:	adc    edi,edx
  418195:	push   0xffffff8e
  418197:	outs   dx,DWORD PTR ds:[esi]
  418198:	lock out dx,eax
  41819a:	popf   
  41819b:	mov    DWORD PTR [edi],esi
  41819d:	fxch   st(2)
  41819f:	inc    edx
  4181a0:	jnp    0x4181af
  4181a2:	xor    esp,edx
  4181a4:	call   0xf4a0:0x36147583
  4181ab:	(bad)  
  4181ad:	xchg   BYTE PTR [ebp+0x60587c70],al
  4181b3:	mov    ds:0x4a551c15,al
  4181b8:	sbb    esi,edi
  4181ba:	or     dh,ah
  4181bc:	mov    ds:0x7f647b0e,al
  4181c1:	mov    edx,0xddeb2253
  4181c6:	pop    edx
  4181c7:	cs out dx,al
  4181c9:	xchg   esi,eax
  4181ca:	sahf   
  4181cb:	jnp    0x418189
  4181cd:	inc    dx
  4181cf:	retf   
  4181d0:	je     0x41820f
  4181d2:	cmp    eax,0x8faca572
  4181d7:	repnz mov WORD PTR [eax],fs
  4181da:	sub    DWORD PTR [esi],esp
  4181dc:	(bad)  
  4181dd:	xor    esi,DWORD PTR [edi-0x77]
  4181e0:	or     eax,0x4d8d0122
  4181e5:	bound  edi,QWORD PTR [ebx+0x23eb099e]
  4181eb:	cmp    esi,DWORD PTR [edx]
  4181ed:	aaa    
  4181ee:	mov    esi,DWORD PTR [ebx]
  4181f0:	cmp    DWORD PTR ds:0x4826e651,esi
  4181f6:	add    cl,BYTE PTR [edx+0x2c]
  4181f9:	sub    ch,BYTE PTR [eax+0x50]
  4181fc:	es jne 0x418193
  4181ff:	sbb    al,0xab
  418201:	pop    ds
  418202:	mov    ds:0xfd7f7de,eax
  418207:	std    
  418208:	adc    ebp,ebp
  41820a:	adc    eax,0xf7fdc2f
  41820f:	sbb    ch,BYTE PTR [edi+ecx*1+0x6bd33f85]
  418216:	adc    DWORD PTR [edx+0x34a02eef],esp
  41821c:	and    edi,DWORD PTR [esi+0xd]
  41821f:	mov    bl,ah
  418221:	mov    edi,0x26c110f3
  418226:	mov    cl,0x5
  418228:	adc    edi,DWORD PTR [ecx+0x63f50aac]
  41822e:	loop   0x418280
  418230:	enter  0xa8a0,0x4b
  418234:	jecxz  0x418215
  418236:	in     eax,dx
  418237:	in     eax,0xf9
  418239:	sbb    DWORD PTR [edx],ebx
  41823b:	xlat   BYTE PTR ds:[ebx]
  41823c:	and    esi,eax
  41823e:	test   edi,0xc57d260e
  418244:	dec    esp
  418245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418246:	stc    
  418247:	outs   dx,BYTE PTR ds:[esi]
  418248:	repnz mov al,BYTE PTR [eax]
  41824b:	pushf  
  41824c:	in     eax,dx
  41824d:	or     esp,edi
  41824f:	into   
  418250:	icebp  
  418251:	ss in  al,0x2e
  418254:	ret    
  418255:	cmc    
  418256:	adc    BYTE PTR [eax+eiz*2-0x43],0xf
  41825b:	adc    al,0xb5
  41825d:	inc    ebp
  41825e:	inc    ebp
  41825f:	(bad)  
  418260:	and    BYTE PTR [edi],ch
  418262:	js     0x4182bb
  418264:	jns    0x4181f1
  418266:	sbb    bh,BYTE PTR [edx+ebx*4-0x664f9939]
  41826d:	pop    ss
  41826e:	rcl    dh,1
  418270:	push   eax
  418271:	fcmove st,st(1)
  418273:	push   edx
  418274:	jns    0x418282
  418276:	cmp    DWORD PTR [ebp+0x22],0x4
  41827a:	es (bad) 
  41827c:	xor    al,0xe9
  41827e:	xlat   BYTE PTR ds:[ebx]
  41827f:	mov    DWORD PTR [edi],ebp
  418281:	fs inc esp
  418283:	fmul   DWORD PTR [ecx]
  418285:	dec    edi
  418286:	loopne 0x41829d
  418288:	test   al,0x7d
  41828a:	sub    bl,BYTE PTR [edx-0x2613639a]
  418290:	fcmovnb st,st(3)
  418292:	mov    cl,0x5b
  418294:	cs jnp 0x41821e
  418297:	or     esi,DWORD PTR [edi+eax*8-0x497b730b]
  41829e:	shl    BYTE PTR [edx-0x73aacbaf],cl
  4182a4:	jl     0x4182de
  4182a6:	lahf   
  4182a7:	mov    BYTE PTR [edx-0x7810cb4a],bh
  4182ad:	inc    eax
  4182ae:	xor    ebp,esi
  4182b0:	outs   dx,DWORD PTR ds:[esi]
  4182b1:	loopne 0x418323
  4182b3:	push   ebp
  4182b4:	lds    esi,FWORD PTR [ebp-0x25]
  4182b7:	mov    edi,0x9a68990
  4182bc:	je     0x418334
  4182be:	clc    
  4182bf:	push   0x349b4352
  4182c4:	dec    edx
  4182c5:	and    ch,BYTE PTR [esi+0x51]
  4182c8:	bound  ecx,QWORD PTR fs:[ebp+0x33]
  4182cc:	pop    ecx
  4182cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ce:	xchg   edi,eax
  4182cf:	fs mov ah,0x40
  4182d2:	neg    bl
  4182d4:	(bad)  
  4182d6:	push   edi
  4182d7:	and    ah,bl
  4182d9:	sub    BYTE PTR [edx+0x1f],0x1b
  4182dd:	clc    
  4182de:	mov    edi,0xd13692b9
  4182e3:	loopne 0x418359
  4182e5:	xor    DWORD PTR [eax],ebx
  4182e7:	mul    dl
  4182e9:	pushf  
  4182ea:	jmp    0x514e:0x3fe4afaf
  4182f1:	test   DWORD PTR [edi+0x15],edi
  4182f4:	cld    
  4182f5:	sbb    eax,0x381029dd
  4182fa:	sbb    dh,BYTE PTR [edx]
  4182fc:	fmul   QWORD PTR fs:[eax+0x1b9f28e0]
  418303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418304:	pushf  
  418305:	push   ecx
  418306:	out    dx,eax
  418307:	shl    edx,0xb4
  41830a:	jne    0x418331
  41830c:	shr    BYTE PTR [ecx+0x0],0x19
  418310:	sbb    eax,ebx
  418312:	sbb    ah,BYTE PTR [edx+0x95b6cc1]
  418318:	aad    0x1a
  41831a:	int3   
  41831b:	push   0xffffffef
  41831d:	mov    ds:0x3a685266,eax
  418322:	in     eax,dx
  418323:	inc    esp
  418324:	or     BYTE PTR [edx-0x59ef3cb5],al
  41832a:	cmp    esp,DWORD PTR [esi-0x32]
  41832d:	(bad)  
  41832f:	sti    
  418330:	dec    ecx
  418331:	add    BYTE PTR gs:[edi],bl
  418334:	fistp  DWORD PTR [edx+0x52504b52]
  41833a:	gs push 0xffffffea
  41833d:	fwait
  41833e:	or     al,0x78
  418340:	cmovle edx,DWORD PTR [esi-0x60f6fa13]
  418347:	push   0x6bd2e651
  41834c:	adc    BYTE PTR [ebx+0x6ae4d06],al
  418352:	mov    al,ds:0xd432dd03
  418357:	pop    ss
  418358:	into   
  418359:	ja     0x41837a
  41835b:	mov    al,0x4
  41835d:	pop    es
  41835e:	nop
  41835f:	and    DWORD PTR [edi+0x0],esi
  418362:	inc    esi
  418363:	stos   DWORD PTR es:[edi],eax
  418364:	arpl   WORD PTR [ebp+0x21],di
  418367:	mov    eax,DWORD PTR [esi+0x4]
  41836a:	mov    esp,0x8c4adb8
  41836f:	adc    ebx,esi
  418371:	into   
  418372:	sbb    dl,BYTE PTR [esi+0x2ca2549a]
  418378:	addr16 loope 0x418326
  41837b:	dec    edi
  41837c:	(bad)  
  41837d:	inc    dl
  41837f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418380:	aas    
  418381:	and    BYTE PTR [eax],al
  418383:	inc    edi
  418384:	jnp    0x4183c6
  418386:	xchg   BYTE PTR [edi],cl
  418388:	test   ecx,esi
  41838a:	mov    eax,0x558bffff
  41838f:	hlt    
  418390:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418397:	mov    bl,BYTE PTR [ebp-0x1]
  41839a:	cmp    dl,bl
  41839c:	je     0x41a7c3
  4183a2:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183a5:	mov    edx,DWORD PTR [ebp-0xc]
  4183a8:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4183af:	mov    ebx,DWORD PTR [ebp+0xc]
  4183b2:	xor    ecx,eax
  4183b4:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  4183bb:	jne    0x41cc40
  4183c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4183c4:	mov    edx,DWORD PTR [ebp+0xc]
  4183c7:	xor    ecx,eax
  4183c9:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  4183d1:	mov    edx,DWORD PTR [ebp-0x18]
  4183d4:	xor    edx,eax
  4183d6:	add    edx,esi
  4183d8:	cmp    ecx,edx
  4183da:	mov    ecx,DWORD PTR [ebp-0x14]
  4183dd:	mov    DWORD PTR [ebp+0x8],ecx
  4183e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4183e3:	je     0x41cd48
  4183e9:	xor    ecx,eax
  4183eb:	add    ecx,esi
  4183ed:	mov    ecx,0x242ebe9
  4183f2:	je     0x41cb94
  4183f8:	mov    edx,DWORD PTR [ebp+0x8]
  4183fb:	mov    ebx,DWORD PTR [ebp-0x8]
  4183fe:	xor    edx,eax
  418400:	xor    ebx,eax
  418402:	sub    edx,ebx
  418404:	sub    edx,esi
  418406:	xor    edx,eax
  418408:	mov    DWORD PTR [ebp+0x8],edx
  41840b:	mov    edx,DWORD PTR [ebp+0x8]
  41840e:	mov    ebx,DWORD PTR [ebp-0x58]
  418411:	add    edx,0x5708c4
  418417:	imul   edx,ebx
  41841a:	mov    DWORD PTR [ebp-0x58],edx
  41841d:	mov    edx,DWORD PTR [ebp+0x8]
  418420:	mov    ebx,DWORD PTR [ebp-0x54]
  418423:	add    edx,0x64f8da
  418429:	or     edx,ebx
  41842b:	mov    DWORD PTR [ebp-0x54],edx
  41842e:	mov    edx,DWORD PTR [ebp+0x8]
  418431:	mov    ebx,DWORD PTR [ebp-0x50]
  418434:	add    edx,ecx
  418436:	xor    edx,ebx
  418438:	mov    DWORD PTR [ebp-0x50],edx
  41843b:	mov    edx,DWORD PTR [ebp+0x8]
  41843e:	mov    ebx,DWORD PTR [ebp-0x4c]
  418441:	add    edx,edi
  418443:	and    edx,ebx
  418445:	mov    DWORD PTR [ebp-0x4c],edx
  418448:	mov    edx,DWORD PTR [ebp+0x8]
  41844b:	mov    ebx,DWORD PTR [ebp-0x48]
  41844e:	lea    edx,[ebx+edx*1+0x241fc1f]
  418455:	mov    DWORD PTR [ebp-0x48],edx
  418458:	mov    edx,DWORD PTR [ebp+0x8]
  41845b:	mov    ebx,0xfa5e15e2
  418460:	sub    ebx,edx
  418462:	add    ebx,DWORD PTR [ebp-0x44]
  418465:	mov    DWORD PTR [ebp-0x44],ebx
  418468:	mov    edx,DWORD PTR [ebp+0x8]
  41846b:	xor    edx,eax
  41846d:	add    edx,esi
  41846f:	jne    0x4183f8
  418475:	jmp    0x41cb94
  41847a:	jmp    0x41a7c3
  41847f:	adc    BYTE PTR [edi],cl
  418481:	lods   eax,DWORD PTR ds:[esi]
  418482:	fnsave [ebx-0x21]
  418485:	lock jae 0x41841c
  418488:	sbb    DWORD PTR [edx-0x4],ebx
  41848b:	fcmovnu st,st(4)
  41848d:	stos   DWORD PTR es:[edi],eax
  41848e:	loopne 0x41845c
  418490:	xor    BYTE PTR [ebp+0x7c],bh
  418493:	inc    eax
  418494:	pop    edi
  418495:	jl     0x418513
  418497:	lock sbb eax,0x2f0899c0
  41849d:	in     al,dx
  41849e:	sub    DWORD PTR [ecx+ebp*2+0xf1d422f],edi
  4184a5:	add    dh,BYTE PTR [edx-0x3]
  4184a8:	fld    QWORD PTR [edx]
  4184aa:	(bad)
  4184ae:	(bad)  
  4184af:	sti    
  4184b0:	rcr    DWORD PTR [edi],0x78
  4184b3:	xor    dl,ah
  4184b5:	lock in al,0xae
  4184b8:	ret    
  4184b9:	clc    
  4184ba:	xchg   BYTE PTR [edx-0x2dcacab3],bl
  4184c0:	shl    DWORD PTR [esi-0x5b],1
  4184c3:	loop   0x418476
  4184c5:	pop    ecx
  4184c6:	add    DWORD PTR [esp+edx*2-0x75798d2a],0xf
  4184ce:	cmp    al,0x8b
  4184d0:	pop    ebp
  4184d1:	or     ebp,DWORD PTR [edx+0x7373cb6d]
  4184d7:	(bad)  
  4184d8:	(bad)  
  4184d9:	out    0xe4,al
  4184db:	jnp    0x418500
  4184dd:	outs   dx,BYTE PTR ds:[esi]
  4184de:	mov    ds:0xf4a158e0,eax
  4184e3:	or     dh,ah
  4184e5:	arpl   di,bx
  4184e7:	xchg   DWORD PTR [ebx],ecx
  4184e9:	stos   BYTE PTR es:[edi],al
  4184ea:	(bad)  
  4184eb:	mov    bh,0x59
  4184ed:	jp     0x418534
  4184ef:	xchg   edx,eax
  4184f0:	shl    BYTE PTR [eax],0x50
  4184f3:	aaa    
  4184f4:	ins    DWORD PTR es:[edi],dx
  4184f5:	shr    DWORD PTR [edx-0x3],cl
  4184f8:	xchg   dh,bl
  4184fa:	pop    eax
  4184fb:	and    DWORD PTR fs:[ebp-0x18336b8],ebp
  418502:	mov    edi,0xb959dddf
  418507:	mov    ah,0xa4
  418509:	pusha  
  41850a:	pop    es
  41850b:	add    BYTE PTR [eax+0x6b1b086b],dh
  418511:	push   ebp
  418512:	sbb    bh,BYTE PTR [ecx-0x63]
  418515:	lds    eax,FWORD PTR [esi+0xd19bf14]
  41851b:	popa   
  41851c:	pop    ds
  41851d:	mov    WORD PTR [edi+0x2d9393ab],fs
  418523:	inc    ebp
  418524:	sbb    ch,bl
  418526:	add    esi,DWORD PTR [ebx+edx*2]
  418529:	test   BYTE PTR [esi+0x7a4e1640],bh
  41852f:	ja     0x418594
  418531:	mov    edx,DWORD PTR [edx]
  418533:	or     ch,BYTE PTR [ecx]
  418535:	push   edi
  418536:	rcr    DWORD PTR [esi+0x31],cl
  418539:	mov    bl,0x86
  41853b:	ss jns 0x418523
  41853e:	jne    0x41855e
  418540:	sbb    eax,0xb774c9a4
  418545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418546:	nop
  418547:	jae    0x41859d
  418549:	mov    ss,ebp
  41854b:	or     esp,DWORD PTR [ebp+0x55]
  41854e:	pop    edx
  41854f:	add    bl,BYTE PTR [edi]
  418551:	imul   edi,edx,0xd6106e9d
  418557:	sbb    edi,DWORD PTR [ecx+eiz*2+0x5a]
  41855b:	push   edi
  41855c:	cmp    DWORD PTR [esi+0x32],0xffffff89
  418560:	(bad)  
  418561:	cwde   
  418562:	push   ss
  418563:	outs   dx,BYTE PTR ds:[esi]
  418564:	test   DWORD PTR [ebp+0x3d3da304],ebp
  41856a:	call   0x2566:0x3e82e25b
  418571:	and    eax,0xa4b187b5
  418576:	test   eax,0xdffd5423
  41857b:	aad    0xa2
  41857d:	sahf   
  41857e:	push   es
  41857f:	ins    DWORD PTR es:[edi],dx
  418580:	outs   dx,BYTE PTR ds:[esi]
  418581:	shr    DWORD PTR [esi-0x1728c0b0],cl
  418587:	or     BYTE PTR [ebx],ch
  418589:	mov    bh,0x21
  41858b:	aaa    
  41858c:	dec    ecx
  41858d:	sub    eax,0x6e7e37bf
  418592:	int    0x68
  418594:	ins    BYTE PTR es:[edi],dx
  418595:	mov    eax,ds:0x8b16092b
  41859a:	mov    cl,0x8e
  41859c:	push   edi
  41859d:	icebp  
  41859e:	push   ebp
  41859f:	jle    0x41860c
  4185a1:	(bad)  
  4185a2:	es retf 
  4185a4:	shl    DWORD PTR [edi],cl
  4185a6:	mov    bl,0xbf
  4185a8:	mov    cl,0x22
  4185aa:	jecxz  0x418566
  4185ac:	(bad)  
  4185ad:	out    dx,al
  4185ae:	(bad)  
  4185b0:	gs iret 
  4185b2:	stos   DWORD PTR es:[edi],eax
  4185b3:	sub    ecx,DWORD PTR [esi+0x61]
  4185b6:	mov    cl,0xb4
  4185b8:	imul   esp,DWORD PTR [ecx-0x7459a6e4],0x9075aeec
  4185c2:	mov    ds:0xb99273ee,eax
  4185c7:	test   DWORD PTR ds:0x9f326579,ecx
  4185cd:	mov    dl,0xac
  4185cf:	jno    0x418588
  4185d1:	loopne 0x4185ef
  4185d3:	inc    ebp
  4185d4:	mov    gs,edi
  4185d6:	push   cs
  4185d7:	xchg   dl,dl
  4185d9:	inc    edx
  4185da:	mov    dl,0xb0
  4185dc:	push   edi
  4185dd:	xchg   edx,eax
  4185de:	and    edi,DWORD PTR [ecx+0x6d]
  4185e1:	das    
  4185e2:	sti    
  4185e3:	rcr    DWORD PTR [ebp-0x5b073c6],0x2f
  4185ea:	fmul   st(4),st
  4185ec:	mov    ch,0x6c
  4185ee:	push   0x3e
  4185f0:	sbb    ebx,DWORD PTR [eax]
  4185f2:	adc    DWORD PTR [edx],edx
  4185f4:	inc    esp
  4185f5:	ret    0xf810
  4185f8:	adc    DWORD PTR [eax-0xd],edx
  4185fb:	sub    DWORD PTR [esi+edi*2+0x638f0a0b],ebx
  418602:	fimul  DWORD PTR [ebp-0x759f1988]
  418608:	aaa    
  418609:	xor    al,0x3e
  41860b:	addr16 daa 
  41860d:	inc    ebx
  41860e:	stc    
  41860f:	aam    0x30
  418611:	or     dl,BYTE PTR [eax-0x61278d7a]
  418617:	and    dh,BYTE PTR [eax]
  418619:	push   edi
  41861a:	sar    BYTE PTR [edx-0x20],cl
  41861d:	btc    DWORD PTR [eax],edi
  418620:	in     eax,0x20
  418622:	mov    ch,0x94
  418624:	repz pop ebx
  418626:	jae    0x418663
  418628:	jg     0x418618
  41862a:	mov    WORD PTR [ecx+0xd],ds
  41862d:	push   cs
  41862e:	push   0x90c6f5f1
  418633:	mov    edi,0x5ea57080
  418638:	and    DWORD PTR [edi-0x9],esi
  41863b:	pop    edx
  41863c:	jge    0x41862d
  41863e:	pushf  
  41863f:	mov    esi,0xb7a2d394
  418644:	add    ebp,esi
  418646:	(bad)  
  418647:	es cmp dl,dh
  41864a:	fistp  QWORD PTR [ecx+0x23]
  41864d:	cmp    DWORD PTR [edx-0x4880b182],edi
  418653:	mov    ch,BYTE PTR [ecx-0xf]
  418656:	inc    ebp
  418657:	pop    ebp
  418658:	bound  ecx,QWORD PTR [edi-0xf]
  41865b:	stos   DWORD PTR es:[edi],eax
  41865c:	inc    ecx
  41865d:	ds in  eax,dx
  41865f:	call   0x9153e52b
  418664:	lods   eax,DWORD PTR ds:[esi]
  418665:	fsubr  DWORD PTR [ebx+0x20]
  418668:	mov    edx,0x64c36eec
  41866d:	jmp    0xd55b:0x2158bfad
  418674:	add    ebx,DWORD PTR [edx+0x37590975]
  41867a:	loop   0x4186bd
  41867c:	inc    esi
  41867d:	or     eax,DWORD PTR [esi+edi*1+0x19]
  418681:	outs   dx,DWORD PTR ds:[esi]
  418682:	add    bh,bh
  418684:	xchg   ebp,eax
  418685:	cmc    
  418686:	mov    esi,edx
  418688:	cmp    eax,0xf4dc3c23
  41868d:	sbb    eax,0xebe42778
  418692:	push   ebx
  418693:	xor    ecx,eax
  418695:	inc    ebp
  418696:	jmp    0xf4ff:0xd873f95c
  41869d:	adc    DWORD PTR [eax-0x2589e3c1],ebp
  4186a3:	loope  0x4186f0
  4186a5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4186a7:	lods   eax,DWORD PTR ds:[esi]
  4186a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186a9:	dec    esp
  4186aa:	icebp  
  4186ab:	adc    edx,DWORD PTR [ecx]
  4186ad:	(bad)  
  4186ae:	(bad)  
  4186af:	mov    esi,0x2bfb1c0a
  4186b4:	push   ss
  4186b5:	dec    esp
  4186b6:	jns    0x41863c
  4186b8:	jmp    0x62ab:0x73e1
  4186be:	mov    al,0x6b
  4186c0:	mov    bh,0xcd
  4186c2:	add    bl,BYTE PTR [edx-0x4f]
  4186c5:	xchg   edx,eax
  4186c6:	xcrypt-ecb (bad)
  4186c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c8:	dec    edx
  4186c9:	xor    eax,0xac456f7b
  4186ce:	scas   eax,DWORD PTR es:[edi]
  4186cf:	xor    esi,esp
  4186d1:	cli    
  4186d2:	scas   al,BYTE PTR es:[edi]
  4186d3:	pop    eax
  4186d4:	jl     0x4186de
  4186d6:	ins    BYTE PTR es:[edi],dx
  4186d7:	cdq    
  4186d8:	pop    ebp
  4186d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186da:	sahf   
  4186db:	(bad)  
  4186dc:	and    cl,dh
  4186de:	dec    ecx
  4186df:	repz out 0x5,eax
  4186e2:	mov    eax,ebx
  4186e4:	xchg   esp,eax
  4186e5:	add    DWORD PTR [ebx+0xa],0x56e6cc6c
  4186ec:	mov    al,0x13
  4186ee:	push   es
  4186ef:	xor    BYTE PTR [esi+0x40a1d176],bh
  4186f5:	sub    al,0xab
  4186f7:	ficom  WORD PTR [ebx+0x71]
  4186fa:	jmp    0x24441880
  4186ff:	retf   
  418700:	cmp    DWORD PTR ds:[esp+ebx*2],esi
  418704:	mov    ebx,DWORD PTR [edx+0x5cd83faf]
  41870a:	xchg   ebx,eax
  41870b:	js     0x4186a0
  41870d:	add    BYTE PTR [edi+eax*1],al
  418710:	pop    ebx
  418711:	and    ecx,DWORD PTR [edi+0x6c7d172f]
  418717:	fcomp  st(4)
  418719:	inc    edi
  41871a:	aam    0xa6
  41871c:	xchg   esp,eax
  41871d:	dec    ebx
  41871e:	and    BYTE PTR [ecx],bh
  418720:	out    0x7b,al
  418722:	mov    dh,BYTE PTR [ecx-0x2d]
  418725:	(bad)  
  418726:	sbb    eax,0xec1e5ba6
  41872b:	fsubp  st(3),st
  41872d:	mov    ecx,0xcc52d279
  418732:	int3   
  418733:	pop    edi
  418734:	stc    
  418735:	mov    eax,ds:0xceaa15c6
  41873a:	(bad)  
  41873b:	loope  0x418744
  41873d:	push   DWORD PTR [ecx+0x626b39f3]
  418743:	xchg   edx,eax
  418744:	dec    edi
  418745:	sub    al,0x94
  418747:	js     0x418748
  418749:	cmp    BYTE PTR [esp+edx*2+0xe],dl
  41874d:	icebp  
  41874e:	call   0xc8f3:0xcdc68cc4
  418755:	push   ss
  418756:	call   0xf0300af0
  41875b:	adc    edx,DWORD PTR [ecx-0x3a]
  41875e:	pop    ebx
  41875f:	mov    ecx,0xd37f2fa1
  418764:	pop    esi
  418765:	mov    ecx,0x800e966f
  41876a:	rol    DWORD PTR gs:[ebp+0x31],0x62
  41876f:	adc    DWORD PTR [edx],ebp
  418771:	or     DWORD PTR [eax-0x11],0x73
  418775:	icebp  
  418776:	outs   dx,BYTE PTR ds:[esi]
  418777:	addr16 nop
  418779:	es call 0x951422b3
  41877f:	rcl    BYTE PTR [esi-0x7d40204c],0xb7
  418786:	mov    cl,dl
  418788:	std    
  418789:	push   ss
  41878a:	dec    ecx
  41878b:	mov    BYTE PTR [esi+edx*2+0x6e],dl
  41878f:	jge    0x418742
  418791:	mov    ecx,0x90c97af6
  418796:	add    BYTE PTR [edi-0x18],dl
  418799:	cdq    
  41879a:	and    al,0xb5
  41879c:	shl    DWORD PTR [eax+0x38],1
  41879f:	mov    esi,0x13dc5852
  4187a4:	icebp  
  4187a5:	dec    edx
  4187a6:	jae    0x41878f
  4187a8:	mov    al,0xde
  4187aa:	(bad)
  4187ad:	mov    cl,BYTE PTR [ebx+esi*1]
  4187b0:	mov    ah,0xb
  4187b2:	mov    dl,0xb5
  4187b4:	(bad)  
  4187b5:	pop    edi
  4187b6:	pop    ebx
  4187b7:	call   0xa95f:0xe80e7439
  4187be:	(bad)  
  4187bf:	imul   esp,esp,0xfffffffb
  4187c2:	mov    ds:0x3c287c03,eax
  4187c7:	xchg   esp,eax
  4187c8:	iret   
  4187c9:	sahf   
  4187ca:	sbb    eax,0x7d261840
  4187cf:	push   esp
  4187d0:	jmp    DWORD PTR [ecx-0x271b4c8f]
  4187d6:	dec    ebp
  4187d7:	lahf   
  4187d8:	gs call 0x5b69de10
  4187de:	ds loop 0x4187ea
  4187e1:	and    ecx,esp
  4187e3:	inc    edi
  4187e4:	mov    ss,WORD PTR [ebp+0x2]
  4187e7:	outs   dx,BYTE PTR ds:[esi]
  4187e8:	enter  0xe4ae,0xb5
  4187ec:	call   0xa3e0dbba
  4187f1:	dec    edi
  4187f2:	pop    ds
  4187f3:	mov    esi,0x6c2d53ae
  4187f8:	or     eax,0x6a6051fc
  4187fd:	sub    eax,0x852ebc55
  418802:	jbe    0x418881
  418804:	pusha  
  418805:	jno    0x4187ea
  418807:	mov    edx,0x21f66605
  41880c:	add    ah,0xb6
  41880f:	add    edx,esp
  418811:	mov    DWORD PTR [esi],edx
  418813:	sub    DWORD PTR [di],ecx
  418816:	call   0xc41:0x1c395299
  41881d:	jle    0x418822
  41881f:	mov    ch,0xc7
  418821:	neg    DWORD PTR [ecx]
  418823:	aas    
  418824:	imul   edx,DWORD PTR [esi],0x3e
  418827:	sub    bl,ah
  418829:	test   eax,0xc1b65455
  41882e:	xor    DWORD PTR [ecx+0x70],ecx
  418831:	mov    eax,0xdebedbf0
  418836:	mov    al,0xcc
  418838:	(bad)  
  418839:	hlt    
  41883a:	stos   DWORD PTR es:[edi],eax
  41883b:	jae    0x41884f
  41883d:	call   0xc25264a7
  418842:	mov    ebx,0x6c6ff641
  418847:	shl    ecx,1
  418849:	mov    DWORD PTR [ebx+0x1f26b6f2],ecx
  41884f:	fldenv [ebp+eax*2-0x14ae49ff]
  418856:	sbb    DWORD PTR [ebp-0x45],0x71951ad1
  41885d:	push   0x41
  41885f:	mov    dl,0x83
  418861:	popa   
  418862:	cmp    eax,0xada7a43e
  418867:	mov    bh,0x42
  418869:	rol    BYTE PTR [ebx+0x4ae079d4],1
  41886f:	in     eax,dx
  418870:	inc    ebp
  418871:	call   0xbbb63a2d
  418876:	bound  edi,QWORD PTR [esi-0xbed39f9]
  41887c:	xor    esi,DWORD PTR [ecx+0x431a6cf0]
  418882:	(bad)  
  418883:	xor    dh,BYTE PTR [esi]
  418885:	mov    ds:0xe4b3dd30,eax
  41888a:	pop    ebp
  41888b:	jle    0x4188ce
  41888d:	mov    cs,WORD PTR [ebp-0x53]
  418890:	les    edx,FWORD PTR [esi]
  418892:	xor    DWORD PTR [eax],0x332530d6
  418898:	push   0x609a63a0
  41889d:	mov    esi,0x52643aa1
  4188a2:	dec    ecx
  4188a3:	(bad)  
  4188a4:	sbb    DWORD PTR [edx+0x41bd03dc],ecx
  4188aa:	fs push edx
  4188ac:	push   es
  4188ad:	sbb    ebp,DWORD PTR [edx+0x697e3827]
  4188b3:	pop    ds
  4188b4:	pop    eax
  4188b5:	daa    
  4188b6:	(bad)  
  4188b7:	cmp    dl,ch
  4188b9:	or     BYTE PTR [ebx+ebp*2],0xc3
  4188bd:	jg     0x41889f
  4188bf:	adc    edi,DWORD PTR [edi]
  4188c1:	inc    eax
  4188c2:	cmp    DWORD PTR [ebx-0xea89176],edx
  4188c8:	sbb    dl,ch
  4188ca:	sahf   
  4188cb:	loope  0x41892d
  4188cd:	loope  0x4188ed
  4188cf:	ror    BYTE PTR [edx],1
  4188d1:	fcomp  QWORD PTR [edx+eax*1+0x260433b6]
  4188d8:	sub    edi,ecx
  4188da:	das    
  4188db:	aad    0xdf
  4188dd:	dec    ecx
  4188de:	jnp    0x418908
  4188e0:	jle    0x418910
  4188e2:	scas   eax,DWORD PTR es:[edi]
  4188e3:	sidtd  [edx-0x15cbdc6c]
  4188ea:	and    eax,0x91705d82
  4188ef:	add    DWORD PTR [ebx-0x12d37e3e],0x1ee36b5
  4188f9:	xor    esi,DWORD PTR [edi]
  4188fb:	sbb    ebp,DWORD PTR [edi+ebp*8-0x7700f55a]
  418902:	dec    ecx
  418903:	mov    dh,0x10
  418905:	push   ebx
  418906:	sbb    DWORD PTR [edx+0x38362d48],0xffffff90
  41890d:	add    ah,ah
  41890f:	sbb    DWORD PTR [eax+edx*2-0x4e],esp
  418913:	out    0x9a,al
  418915:	push   ss
  418916:	xchg   DWORD PTR [esp+ebp*1-0x2de93295],ebx
  41891d:	push   eax
  41891e:	inc    ebp
  41891f:	cmp    eax,0xf6839f93
  418924:	inc    esp
  418925:	pop    ecx
  418926:	mov    al,0xda
  418928:	jg     0x41897d
  41892a:	popa   
  41892b:	pop    ss
  41892c:	or     DWORD PTR [esi-0x10dcd526],esi
  418932:	dec    esp
  418933:	inc    edi
  418934:	inc    esi
  418935:	ss adc al,0x8e
  418938:	xor    eax,DWORD PTR [edx+edi*1]
  41893b:	(bad)  
  41893c:	loope  0x4188fa
  41893e:	jb     0x418922
  418940:	dec    edx
  418941:	pop    ss
  418942:	test   DWORD PTR [ebp+0x1a],0x9dfe61e
  418949:	inc    esi
  41894a:	jle    0x4189bb
  41894c:	call   0xbf1:0x37077105
  418953:	xchg   ebx,eax
  418954:	inc    esp
  418955:	fbld   TBYTE PTR [ecx+edx*8]
  418958:	xor    DWORD PTR [ebx+eax*2],esi
  41895b:	fwait
  41895c:	or     edi,DWORD PTR [ebx]
  41895e:	or     BYTE PTR [ebx],dh
  418960:	and    BYTE PTR [esi],ah
  418962:	or     al,0x0
  418964:	and    cl,ah
  418966:	repz scas eax,DWORD PTR es:[edi]
  418968:	push   esp
  418969:	(bad)
  41896c:	(bad)  
  41896d:	jg     0x41897a
  41896f:	mov    DWORD PTR [ecx-0x43],edi
  418972:	cmp    eax,0x9dc80bb5
  418977:	lea    ebp,[edx+edi*1-0x7]
  41897b:	inc    edi
  41897c:	adc    edx,DWORD PTR [esi-0x5eb42152]
  418982:	jno    0x4189dd
  418984:	mov    ds:0x22ba3cb6,al
  418989:	outs   dx,DWORD PTR ds:[esi]
  41898a:	shr    DWORD PTR [ebx],cl
  41898c:	test   eax,0xe5d1a865
  418991:	cld    
  418992:	pop    esp
  418993:	jns    0x4189bb
  418995:	xor    dl,BYTE PTR [eax+0x8]
  418998:	pop    edx
  418999:	cdq    
  41899a:	jbe    0x418927
  41899c:	mov    ds:0x197bb4fc,eax
  4189a1:	sbb    bh,BYTE PTR [ecx]
  4189a3:	inc    esi
  4189a4:	in     eax,0xb6
  4189a6:	test   eax,0x8cfafa74
  4189ab:	mov    dh,BYTE PTR [edx-0x4669f79]
  4189b1:	ss pop edx
  4189b3:	jno    0x4189ce
  4189b5:	mov    ebx,0xb0080262
  4189ba:	cmp    edx,DWORD PTR [ebx-0x5e794626]
  4189c0:	pop    ebx
  4189c1:	adc    cl,dh
  4189c3:	mov    ds:0xa0c87cca,eax
  4189c8:	jg     0x418970
  4189ca:	scas   eax,DWORD PTR es:[edi]
  4189cb:	pusha  
  4189cc:	fst    DWORD PTR cs:[ebx+eax*1]
  4189d0:	sbb    al,BYTE PTR [ecx]
  4189d2:	jns    0x418a24
  4189d4:	shl    BYTE PTR [ecx],cl
  4189d6:	push   ss
  4189d7:	push   ds
  4189d8:	sub    eax,0x9dde3029
  4189dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189de:	(bad)  
  4189df:	sub    edi,DWORD PTR [esp+ebp*2+0x786126fa]
  4189e6:	fbstp  TBYTE PTR ds:0xb75e4f58
  4189ec:	sbb    dl,0x80
  4189ef:	adc    ch,bl
  4189f1:	dec    edi
  4189f2:	cli    
  4189f3:	add    al,0xa
  4189f5:	mov    ebx,0x2b243332
  4189fa:	cmp    BYTE PTR [esi-0x5935f07f],0x43
  418a01:	push   0xffffffad
  418a03:	in     al,dx
  418a04:	lea    esp,[esi+0x61016f5]
  418a0a:	cdq    
  418a0b:	xlat   BYTE PTR ds:[ebx]
  418a0c:	push   eax
  418a0d:	sti    
  418a0e:	pop    edi
  418a0f:	fdiv   QWORD PTR [ebx]
  418a11:	test   DWORD PTR [ebp+0x13],0x1301861
  418a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a19:	xchg   ebx,eax
  418a1a:	push   edx
  418a1b:	mov    edi,0x6c099d01
  418a20:	outs   dx,BYTE PTR ds:[esi]
  418a21:	outs   dx,DWORD PTR ds:[esi]
  418a22:	or     ah,0x99
  418a25:	nop
  418a26:	ds sub eax,0x7b1ee6a5
  418a2c:	mov    ebp,ebx
  418a2e:	cli    
  418a2f:	or     DWORD PTR [ebx],edi
  418a31:	inc    eax
  418a32:	loopne 0x418a97
  418a34:	push   ecx
  418a35:	xlat   BYTE PTR ds:[ebx]
  418a36:	adc    al,0x6d
  418a38:	pop    edi
  418a39:	cs stc 
  418a3b:	mov    BYTE PTR [edx+ecx*1+0x186a41ba],cl
  418a42:	test   al,0x5e
  418a44:	push   0x76
  418a46:	pop    edx
  418a47:	mov    eax,ds:0x5d0fad9e
  418a4c:	sub    dh,al
  418a4e:	pop    ss
  418a4f:	loope  0x418aa2
  418a51:	push   ds
  418a52:	inc    ecx
  418a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a54:	cdq    
  418a55:	mov    WORD PTR [eax+ecx*1-0xe],?
  418a59:	in     al,dx
  418a5a:	in     eax,dx
  418a5b:	nop
  418a5c:	ficom  WORD PTR [edi+0x1b]
  418a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a60:	mov    esi,eax
  418a62:	ret    0xf36b
  418a65:	pop    eax
  418a66:	push   cs
  418a67:	fs mov esi,0x988d23b8
  418a6d:	sub    BYTE PTR gs:[edi+0x1fc5e202],0xee
  418a75:	jp     0x418a07
  418a77:	jge    0x418a30
  418a79:	iret   
  418a7a:	rcr    esp,1
  418a7c:	jns    0x418a84
  418a7e:	jle    0x418a09
  418a80:	add    eax,0x1d504a22
  418a85:	int3   
  418a86:	adc    DWORD PTR [ebp+0x56],eax
  418a89:	jl     0x418aa1
  418a8b:	gs pop ebp
  418a8d:	mov    edi,0x1bad731b
  418a92:	pop    ebp
  418a93:	inc    esi
  418a94:	push   esi
  418a95:	xchg   DWORD PTR [edx-0x2df10310],edi
  418a9b:	js     0x418aef
  418a9d:	sub    eax,DWORD PTR [esi]
  418a9f:	scas   eax,DWORD PTR es:[edi]
  418aa0:	ins    BYTE PTR es:[edi],dx
  418aa1:	data16 mov ds:0xe112e3c,al
  418aa7:	cvtps2pi mm1,QWORD PTR [edi+0x77]
  418aab:	jbe    0x418adc
  418aad:	sub    eax,0x9d9a6e83
  418ab2:	sub    DWORD PTR [edx],ebp
  418ab4:	(bad)  
  418ab5:	jp     0x418ab1
  418ab7:	iret   
  418ab8:	cmp    DWORD PTR [edi-0x5ddcc181],ecx
  418abe:	mov    ebx,0x8cb5493e
  418ac3:	push   ds
  418ac4:	add    eax,0xa58eb6dc
  418ac9:	cmp    DWORD PTR [esi+0x7fe8eb1e],esi
  418acf:	ds popa 
  418ad1:	and    al,0x4b
  418ad3:	repz xor ebx,DWORD PTR [edi+eiz*8]
  418ad7:	jb     0x418a5c
  418ad9:	jno    0x418b4b
  418adb:	jmp    0xd9bac8f8
  418ae0:	xchg   ebx,eax
  418ae1:	mov    ebx,?
  418ae3:	mov    edx,0xbd96faf4
  418ae8:	mov    ah,0xe4
  418aea:	mov    bh,0x69
  418aec:	mov    dl,0xb5
  418aee:	imul   DWORD PTR [ebx+0x12]
  418af1:	jp     0x418ab0
  418af3:	dec    esp
  418af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af5:	and    eax,DWORD PTR [edx-0x6a]
  418af8:	mov    dl,0x68
  418afa:	outs   dx,DWORD PTR ds:[esi]
  418afb:	xchg   edx,eax
  418afc:	jle    0x418b00
  418afe:	mov    dh,0xdf
  418b00:	test   eax,0x947470a7
  418b05:	fs sub al,0x88
  418b08:	sub    dl,BYTE PTR [edx+ecx*4+0x23]
  418b0c:	xlat   BYTE PTR ds:[ebx]
  418b0d:	(bad)  
  418b0e:	(bad)  
  418b0f:	sbb    BYTE PTR [edi+0x4f],dl
  418b12:	mov    ch,0x32
  418b14:	ins    BYTE PTR es:[edi],dx
  418b15:	test   BYTE PTR [eax-0x616fc003],cl
  418b1b:	mov    ds:0xfd96676b,al
  418b20:	jg     0x418b13
  418b22:	es sti 
  418b24:	std    
  418b25:	push   ebp
  418b26:	adc    WORD PTR [eax-0x52],si
  418b2a:	cmp    eax,0x1eba252b
  418b2f:	lods   eax,DWORD PTR ds:[esi]
  418b30:	pop    edx
  418b31:	stos   DWORD PTR es:[edi],eax
  418b32:	mov    ds:0xa6e4ec4a,eax
  418b37:	inc    edx
  418b38:	push   ecx
  418b39:	xchg   eax,esp
  418b3b:	jmp    0x418ace
  418b3d:	jnp    0x418b66
  418b3f:	add    BYTE PTR [edi+0x11c9b6c4],cl
  418b45:	mov    bl,0xea
  418b47:	pop    ebx
  418b48:	mov    dl,0xc2
  418b4a:	jns    0x418b2e
  418b4c:	shl    DWORD PTR [esi+0x73],1
  418b4f:	dec    ebx
  418b50:	xchg   DWORD PTR [esi+0x3e],edx
  418b53:	jo     0x418bb4
  418b55:	mov    ebx,0x47a859b
  418b5a:	sbb    al,0xf6
  418b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b5d:	(bad)  
  418b5e:	aam    0xd0
  418b60:	push   eax
  418b61:	push   0xcea75834
  418b66:	(bad)  
  418b67:	rol    BYTE PTR [edx],cl
  418b69:	ins    BYTE PTR es:[edi],dx
  418b6a:	inc    esp
  418b6b:	sub    ecx,edx
  418b6d:	mov    ebp,0x311a22eb
  418b72:	cli    
  418b73:	les    edi,FWORD PTR [ecx-0x39]
  418b76:	adc    esp,DWORD PTR [ebp+0x46]
  418b79:	loope  0x418bd8
  418b7b:	lods   al,BYTE PTR ds:[esi]
  418b7c:	push   cs
  418b7d:	ret    0xc4d4
  418b80:	sbb    eax,0x9076eddb
  418b85:	jmp    0x3a2b171
  418b8a:	mov    ebx,esp
  418b8c:	es sub eax,0x898e98d0
  418b92:	add    al,0x17
  418b94:	scas   eax,DWORD PTR es:[edi]
  418b95:	(bad)  
  418b96:	push   eax
  418b97:	lds    ebp,FWORD PTR [eax+ebx*4-0x68cf0a45]
  418b9e:	int3   
  418b9f:	or     dh,BYTE PTR [edi+0xaa4e99c]
  418ba5:	ja     0x418bf8
  418ba7:	push   ebp
  418ba8:	xor    dh,BYTE PTR [esi-0x57a82e9b]
  418bae:	sub    DWORD PTR [eax],0x5c928381
  418bb4:	jg     0x418c0e
  418bb6:	outs   dx,BYTE PTR ds:[esi]
  418bb8:	ins    BYTE PTR es:[edi],dx
  418bb9:	xchg   esp,eax
  418bba:	mov    dl,0xf3
  418bbc:	sbb    DWORD PTR [ecx+esi*8+0x57],esi
  418bc0:	in     eax,dx
  418bc1:	jg     0x418bac
  418bc3:	mov    esi,0x23cc838f
  418bc8:	mov    ds:0x51441a40,al
  418bcd:	retf   0x1afc
  418bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd1:	(bad)
  418bd5:	and    ch,BYTE PTR [ebp+0x73]
  418bd8:	sbb    esi,0xffffffc5
  418bdb:	jno    0x418bb3
  418bdd:	je     0x418b7f
  418bdf:	cld    
  418be0:	inc    ecx
  418be1:	mov    al,ds:0x617f3836
  418be6:	das    
  418be7:	jp     0x418c58
  418be9:	neg    ch
  418beb:	pop    edi
  418bec:	jmp    0x39b5:0xf74e4b9c
  418bf3:	addr16 dec edx
  418bf5:	call   0x48fe:0x15e88549
  418bfc:	adc    cl,BYTE PTR [eax]
  418bfe:	call   0x2b04002b
  418c03:	jp     0x418be4
  418c05:	imul   ecx,DWORD PTR [edx-0xcb81bd8],0xfffffff8
  418c0c:	pop    ebp
  418c0d:	xor    dl,BYTE PTR [ecx-0x7860b352]
  418c13:	test   edi,0x5d3fdddc
  418c19:	das    
  418c1a:	sbb    esp,edx
  418c1c:	cli    
  418c1d:	int    0x6d
  418c1f:	push   cs
  418c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c21:	push   0x7a
  418c23:	jl     0x418beb
  418c25:	imul   ebp,DWORD PTR [ebx+ecx*2-0x2d8ff83],0x4d8cc0ab
  418c30:	and    DWORD PTR [eax-0x607309c4],eax
  418c36:	out    0x27,eax
  418c38:	or     eax,0xae59c2f5
  418c3d:	push   cs
  418c3e:	push   0x824e612a
  418c43:	jb     0x418c1a
  418c45:	jae    0x418c70
  418c47:	or     BYTE PTR [edi+0x44],ch
  418c4a:	pushf  
  418c4b:	mov    ebx,0x4acd801
  418c50:	stos   BYTE PTR es:[edi],al
  418c51:	inc    ebx
  418c52:	arpl   WORD PTR [ecx+edx*2-0x68],di
  418c56:	pop    es
  418c57:	inc    eax
  418c58:	sub    DWORD PTR [edi-0x3537ec44],esi
  418c5e:	test   eax,0xd90e68ae
  418c63:	lock sub dl,BYTE PTR ss:[esi-0x17]
  418c68:	sti    
  418c69:	in     eax,0x76
  418c6b:	arpl   WORD PTR [edi],bx
  418c6d:	ins    DWORD PTR es:[edi],dx
  418c6e:	xchg   ebp,eax
  418c6f:	push   esp
  418c70:	retf   
  418c71:	and    eax,eax
  418c73:	(bad)  
  418c74:	adc    al,0x78
  418c76:	enter  0x7f77,0xb4
  418c7a:	in     al,dx
  418c7b:	inc    eax
  418c7c:	int3   
  418c7d:	mov    bl,0x6e
  418c7f:	inc    edi
  418c80:	sub    esp,DWORD PTR [esi]
  418c82:	dec    esi
  418c83:	cmc    
  418c84:	pop    ebx
  418c85:	push   edi
  418c86:	pop    edx
  418c87:	inc    ebx
  418c88:	push   edx
  418c89:	imul   ebp,DWORD PTR [edx-0x69],0xa82e37bb
  418c90:	push   cs
  418c91:	xor    BYTE PTR [esi+eiz*8],al
  418c94:	in     eax,dx
  418c95:	jae    0x418ce5
  418c97:	and    DWORD PTR [ebp-0x6ce0da68],edi
  418c9d:	or     eax,0xff061e94
  418ca2:	cmp    bh,BYTE PTR [edi]
  418ca4:	sub    al,0xb
  418ca6:	or     edx,DWORD PTR [ebx-0x7f]
  418ca9:	pop    edi
  418caa:	hlt    
  418cab:	inc    ecx
  418cac:	mov    ecx,0x116b9c72
  418cb1:	dec    esi
  418cb2:	push   ebx
  418cb3:	pop    eax
  418cb4:	mov    cl,0x0
  418cb6:	out    dx,al
  418cb7:	aad    0x3b
  418cb9:	jmp    0x418c69
  418cbb:	popa   
  418cbc:	mov    ds:0x8afc93b4,al
  418cc1:	add    DWORD PTR [eax+ebp*4],0xd2d2609f
  418cc8:	dec    esp
  418cca:	and    BYTE PTR [ecx],al
  418ccc:	mov    ch,0xff
  418cce:	fnstsw WORD PTR [esi]
  418cd0:	rcr    DWORD PTR [esi-0x75c1da2f],0xc
  418cd7:	jb     0x418caa
  418cd9:	mov    al,ds:0x574d7f1
  418cde:	or     eax,0x4dcd881b
  418ce3:	or     ah,BYTE PTR [ebp-0x5]
  418ce6:	and    esp,DWORD PTR [eax+eiz*2+0x59]
  418cea:	cli    
  418ceb:	pusha  
  418cec:	addr16 cmp bl,cl
  418cef:	sbb    al,0x89
  418cf1:	jl     0x418d20
  418cf3:	daa    
  418cf4:	mov    esi,0x6c23a75b
  418cf9:	xchg   BYTE PTR [edi+ebx*1+0x797230cb],cl
  418d00:	mov    ds:0xe85bc096,eax
  418d05:	gs clc 
  418d07:	in     al,0xb3
  418d09:	cmc    
  418d0a:	aad    0x88
  418d0c:	dec    ebp
  418d0d:	and    eax,0x5faa6013
  418d12:	push   es
  418d13:	ret    
  418d14:	fsubr  QWORD PTR [edx+ecx*2]
  418d17:	mov    ebp,0x66bf3491
  418d1c:	and    ecx,edx
  418d1e:	je     0x418cbf
  418d20:	in     eax,0x3d
  418d22:	test   BYTE PTR [edx+0x2786cf30],ah
  418d28:	and    eax,DWORD PTR [edx-0x6a0809c5]
  418d2e:	add    eax,0xbe289e78
  418d33:	mov    al,ds:0x982ae3ed
  418d38:	mov    DWORD PTR [ecx-0x9],0x57ad0c6d
  418d3f:	inc    ebp
  418d40:	(bad)  
  418d42:	push   cs
  418d43:	mov    WORD PTR [edx],fs
  418d45:	cdq    
  418d46:	shr    dl,0xcb
  418d49:	sub    DWORD PTR [esi-0x51355355],eax
  418d4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d50:	push   edi
  418d51:	mov    es:0x30e9add8,al
  418d57:	into   
  418d58:	gs adc eax,0x1a7e7435
  418d5e:	push   es
  418d5f:	xchg   BYTE PTR [edi],ch
  418d61:	sub    eax,0x1f786a8d
  418d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d67:	in     al,0x7b
  418d69:	aaa    
  418d6a:	add    BYTE PTR [ebp+ebp*4+0x74950d78],bl
  418d71:	aas    
  418d72:	xchg   esp,eax
  418d73:	(bad)  
  418d74:	pop    ecx
  418d75:	scas   eax,DWORD PTR es:[edi]
  418d76:	test   DWORD PTR [ecx+0x1a],0xbac7d930
  418d7d:	jne    0x418d8f
  418d7f:	sub    ch,dl
  418d81:	sub    BYTE PTR [esi-0x708040d8],cl
  418d87:	dec    edx
  418d88:	ja     0x418d74
  418d8a:	loopne 0x418df7
  418d8c:	sbb    eax,edx
  418d8e:	addr16 mov eax,ds:0x99ed
  418d92:	mov    ebp,0x75ac5bd5
  418d97:	stc    
  418d98:	(bad)  
  418d99:	xchg   ebp,eax
  418d9a:	frstor [ebx]
  418d9c:	cmp    BYTE PTR [ebx],dl
  418d9e:	xchg   esp,eax
  418d9f:	daa    
  418da0:	mov    eax,ds:0x945843d
  418da5:	jo     0x418e00
  418da7:	jne    0x418d58
  418da9:	pushf  
  418daa:	(bad)  
  418dab:	cmp    eax,0xe7a3f06a
  418db0:	imul   esp,DWORD PTR [ebx-0x15],0x6
  418db4:	mov    eax,0x6035ccbc
  418db9:	xor    BYTE PTR [ecx-0x80],ah
  418dbc:	pushf  
  418dbd:	push   0x92322344
  418dc2:	or     ecx,DWORD PTR gs:[ebp-0x249e7460]
  418dc9:	push   ecx
  418dca:	push   es
  418dcb:	repnz out dx,al
  418dcd:	jno    0x418e29
  418dcf:	xchg   esp,eax
  418dd0:	in     eax,0xf2
  418dd2:	(bad)  
  418dd3:	(bad)  
  418dd4:	mov    eax,ds:0x774fba7d
  418dd9:	push   ecx
  418dda:	(bad)  
  418ddb:	outs   dx,DWORD PTR ds:[esi]
  418ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ddd:	out    0xd9,al
  418ddf:	das    
  418de0:	(bad)
  418de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de6:	and    DWORD PTR [edi+0x2e17dec3],0xa41937a6
  418df0:	pop    ebx
  418df1:	js     0x418d92
  418df3:	daa    
  418df4:	pop    esi
  418df5:	lds    ebx,FWORD PTR [ecx-0x17]
  418df8:	jno    0x418da7
  418dfa:	mov    eax,ds:0x536eaf94
  418dff:	(bad)  
  418e00:	adc    eax,0x8ea3af07
  418e05:	and    eax,0x3d7a3d9c
  418e0a:	dec    eax
  418e0b:	cwde   
  418e0c:	cmp    DWORD PTR [edx-0x2a],ebp
  418e0f:	es pusha 
  418e11:	aas    
  418e12:	xchg   edi,esi
  418e14:	nop
  418e15:	and    BYTE PTR [eax-0x11baa90f],cl
  418e1b:	push   ebp
  418e1c:	mov    ds:0x1015f89,al
  418e21:	inc    ebx
  418e22:	inc    esp
  418e23:	pusha  
  418e24:	jbe    0x418e0e
  418e26:	mov    ah,BYTE PTR [eax+0x37]
  418e29:	loopne 0x418e79
  418e2b:	retf   
  418e2c:	sbb    cl,BYTE PTR [esi+0x5c3b6d5f]
  418e32:	aad    0xd0
  418e34:	mov    cl,0x0
  418e36:	pop    fs
  418e38:	add    al,0x39
  418e3a:	xrelease xchg BYTE PTR [ecx+0x38],al
  418e3e:	mov    ah,0xe1
  418e40:	sub    DWORD PTR [edx-0x7b],esp
  418e43:	mov    dh,0xfc
  418e45:	xor    al,al
  418e47:	shl    DWORD PTR [edx+edi*4],1
  418e4a:	into   
  418e4b:	and    ebx,0x10c3aea3
  418e51:	mov    dl,0x83
  418e53:	mov    cl,0xb1
  418e55:	xor    DWORD PTR [eax-0x49502b12],esp
  418e5b:	and    edx,DWORD PTR ds:0xc5cd3c60
  418e61:	mov    gs,WORD PTR [edi]
  418e63:	or     BYTE PTR [ecx+0x65],ch
  418e66:	scas   al,BYTE PTR es:[edi]
  418e67:	or     edx,DWORD PTR ds:0x7e131561
  418e6d:	push   edi
  418e6e:	setl   BYTE PTR [ebx+0x4b]
  418e72:	push   edi
  418e73:	ficom  DWORD PTR [ebp-0x2b]
  418e76:	jmp    0x4c5c9c54
  418e7b:	jmp    0x418eab
  418e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7e:	mov    ss,WORD PTR [ecx+0x62]
  418e81:	xor    esi,ebx
  418e83:	jle    0x418e2a
  418e85:	pop    ebp
  418e86:	dec    edi
  418e87:	clc    
  418e88:	mov    fs,WORD PTR [ebp-0x25f796cb]
  418e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8f:	aas    
  418e90:	scas   eax,DWORD PTR es:[edi]
  418e91:	pop    ss
  418e92:	sbb    al,0xa3
  418e94:	pop    es
  418e95:	sbb    al,0xb6
  418e97:	call   0x7976:0xbe13fd47
  418e9e:	test   al,0x89
  418ea0:	jge    0x418e85
  418ea2:	dec    ecx
  418ea3:	jno    0x418e42
  418ea5:	out    dx,eax
  418ea6:	addr16 adc eax,0x1214e77f
  418eac:	mov    eax,0x34fb6665
  418eb1:	push   esi
  418eb2:	push   cs
  418eb3:	mov    eax,ds:0xad35a83f
  418eb8:	inc    edx
  418eb9:	sub    ch,ch
  418ebb:	int3   
  418ebc:	sbb    cl,BYTE PTR [eax]
  418ebe:	mov    ds:0x6881063,al
  418ec3:	gs out 0xe0,al
  418ec6:	dec    ebx
  418ec7:	loop   0x418e92
  418ec9:	inc    ebp
  418eca:	rcr    al,cl
  418ecc:	ret    0x5dc8
  418ecf:	jbe    0x418f11
  418ed1:	mov    ebx,0x6e97c92f
  418ed6:	daa    
  418ed7:	dec    ebp
  418ed8:	ja     0x418f53
  418eda:	mov    ebx,0x9504bf25
  418edf:	imul   ebp,eax,0x51
  418ee2:	in     eax,dx
  418ee3:	jns    0x418f63
  418ee5:	stos   DWORD PTR es:[edi],eax
  418ee6:	repz or edi,ebp
  418ee9:	dec    edi
  418eea:	pop    edx
  418eeb:	ins    DWORD PTR es:[edi],dx
  418eec:	cmp    eax,0xd4ad2be9
  418ef1:	pop    esi
  418ef2:	lods   eax,DWORD PTR ds:[esi]
  418ef3:	fisubr DWORD PTR [ecx+0x593be46f]
  418ef9:	jmp    0x418f30
  418efb:	dec    ebx
  418efc:	mov    bh,ah
  418efe:	ds ss call 0xad7a3c40
  418f05:	das    
  418f06:	cli    
  418f07:	fbstp  TBYTE PTR [esi+0x13db91fb]
  418f0d:	jmp    0x418f2f
  418f0f:	dec    esi
  418f10:	mov    bl,bh
  418f12:	outs   dx,BYTE PTR ds:[esi]
  418f13:	shl    BYTE PTR [eax+0x65],cl
  418f16:	inc    edi
  418f17:	leave  
  418f18:	cmp    edx,DWORD PTR [ebp+ecx*1+0x5d]
  418f1c:	sahf   
  418f1d:	pop    ss
  418f1e:	cmp    cl,BYTE PTR [esi+edx*8-0x6b]
  418f22:	test   BYTE PTR [esi-0x18],0x87
  418f26:	xor    ecx,DWORD PTR [esi+0x6]
  418f29:	xor    eax,0x5903b352
  418f2e:	pop    esp
  418f2f:	cmp    ebp,DWORD PTR [esi]
  418f31:	inc    edi
  418f32:	dec    ecx
  418f33:	adc    eax,0x14d29340
  418f38:	xchg   ebx,eax
  418f39:	in     eax,0x27
  418f3b:	jb     0x418f10
  418f3d:	sbb    ebx,edi
  418f3f:	(bad)  
  418f40:	push   edi
  418f41:	popa   
  418f42:	pop    ss
  418f43:	mov    cl,0x2b
  418f45:	add    al,0xc6
  418f47:	jp     0x418f7e
  418f49:	test   DWORD PTR [eax-0x33c06312],esp
  418f4f:	lock cli 
  418f51:	es push esp
  418f53:	popf   
  418f54:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418f56:	adc    cl,cl
  418f58:	add    dl,0x82
  418f5b:	int3   
  418f5c:	sbb    al,bl
  418f5e:	lock cmp eax,0x68dc43c5
  418f64:	(bad)  
  418f65:	and    edx,DWORD PTR [ebx]
  418f67:	mov    ecx,0xba05a213
  418f6c:	add    al,0xfa
  418f6e:	stos   BYTE PTR es:[edi],al
  418f6f:	les    esp,FWORD PTR [edi+0x70]
  418f72:	lods   eax,DWORD PTR ds:[esi]
  418f73:	arpl   WORD PTR [edx-0x60c3a446],cx
  418f79:	into   
  418f7a:	and    eax,0x90be0a14
  418f7f:	mov    eax,0x5e8d6f1f
  418f84:	xor    cl,bl
  418f86:	mov    eax,0xc1c59088
  418f8b:	dec    esi
  418f8c:	out    dx,eax
  418f8d:	push   eax
  418f8e:	enter  0x1917,0x87
  418f92:	outs   dx,DWORD PTR ds:[esi]
  418f93:	pop    ebx
  418f94:	ret    
  418f95:	jb     0x418f4d
  418f97:	lods   al,BYTE PTR ds:[esi]
  418f98:	jbe    0x418f82
  418f9a:	sbb    esp,DWORD PTR [esi-0x27416d0]
  418fa0:	mov    ebp,0x4b24957b
  418fa5:	sahf   
  418fa6:	xchg   BYTE PTR [ecx+0x52],cl
  418fa9:	jle    0x418fac
  418fab:	add    al,0x8b
  418fad:	retf   0xdcbe
  418fb0:	addr16 out dx,al
  418fb2:	int    0xba
  418fb4:	daa    
  418fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fb6:	xchg   ebp,eax
  418fb7:	jl     0x418fb7
  418fb9:	or     BYTE PTR ds:0x10b3151c,bl
  418fbf:	sbb    ebx,ebx
  418fc1:	push   eax
  418fc2:	hlt    
  418fc3:	scas   al,BYTE PTR es:[edi]
  418fc4:	cmp    eax,0xd15ec098
  418fc9:	pop    edx
  418fca:	push   es
  418fcb:	rcl    DWORD PTR [edi],0x66
  418fce:	mov    bl,0x99
  418fd0:	fadd   DWORD PTR [ebp-0x6a3d2d9e]
  418fd6:	les    esi,FWORD PTR [edi+0x39bcc5fc]
  418fdc:	xlat   BYTE PTR ds:[ebx]
  418fdd:	scas   al,BYTE PTR es:[edi]
  418fde:	jno    0x418f8c
  418fe0:	(bad)
  418fe3:	push   0x7acdbafd
  418fe8:	ficomp WORD PTR [edi]
  418fea:	push   eax
  418feb:	fucom  st(0)
  418fed:	jmp    eax
  418fef:	xor    dl,BYTE PTR [eax-0x55]
  418ff2:	xchg   BYTE PTR [ecx],al
  418ff4:	mov    bl,0x7
  418ff6:	sbb    DWORD PTR [edx-0x75a69389],eax
  418ffc:	xchg   edi,eax
  418ffd:	cld    
  418ffe:	xor    BYTE PTR [ebp-0x18cccec4],bl
  419004:	mov    edx,0xe05827dc
  419009:	sbb    esp,esp
  41900b:	in     al,dx
  41900c:	dec    edi
  41900d:	pop    ecx
  41900e:	mov    ecx,DWORD PTR [edx+0x25]
  419011:	sub    ah,BYTE PTR [ecx+0x59]
  419014:	jne    0x419076
  419016:	pop    eax
  419017:	mov    gs:0xf215728a,al
  41901d:	inc    esi
  41901e:	lods   eax,DWORD PTR ds:[esi]
  41901f:	sbb    eax,DWORD PTR [edx-0x5459eeee]
  419025:	retf   
  419026:	cmp    DWORD PTR [esi+0x4b],eax
  419029:	xlat   BYTE PTR ds:[ebx]
  41902a:	xor    eax,0x6fce31a5
  41902f:	adc    eax,0x7a4df630
  419034:	mov    dl,0x78
  419036:	jnp    0x41909c
  419038:	cmp    BYTE PTR es:[eax-0x41],cl
  41903c:	add    eax,0x5d019b66
  419041:	int3   
  419042:	fndisi(8087 only) 
  419044:	and    eax,0xe6fa97e1
  419049:	iret   
  41904a:	fsub   DWORD PTR [esi-0x4060d39]
  419050:	in     al,0x76
  419052:	aas    
  419053:	dec    ebx
  419054:	pop    ss
  419055:	inc    ecx
  419056:	je     0x419077
  419058:	adc    al,0xaa
  41905a:	out    0x96,eax
  41905c:	dec    edi
  41905d:	daa    
  41905e:	ins    DWORD PTR es:[edi],dx
  41905f:	test   al,0x32
  419061:	loop   0x4190c0
  419063:	bswap  edi
  419065:	add    ebp,DWORD PTR [edi]
  419067:	cli    
  419068:	push   es
  419069:	mov    edx,0x364a6065
  41906e:	je     0x418ff3
  419070:	test   eax,0xe48b0675
  419075:	into   
  419076:	loope  0x4190d8
  419078:	mov    WORD PTR [ebp+0x35],ds
  41907b:	jns    0x419089
  41907d:	scas   eax,DWORD PTR es:[edi]
  41907e:	int    0x3a
  419080:	xor    DWORD PTR ds:0x582de251,esi
  419086:	mov    dh,0x14
  419088:	adc    DWORD PTR [ecx],0xc0bc6719
  41908e:	test   BYTE PTR [ebx+0x55],0x49
  419092:	inc    ebp
  419093:	xchg   DWORD PTR [eax-0x5d],ebx
  419096:	adc    eax,0xeb78ea24
  41909b:	or     al,0x35
  41909d:	jle    0x419033
  41909f:	fcmovnu st,st(0)
  4190a1:	call   0xe97d:0x543d8e72
  4190a8:	sbb    esi,DWORD PTR [edx+0x3ea1fc6a]
  4190ae:	mov    al,0xf0
  4190b0:	outs   dx,DWORD PTR ds:[esi]
  4190b1:	fsub   st,st(6)
  4190b3:	inc    edx
  4190b4:	stc    
  4190b5:	je     0x419055
  4190b7:	je     0x4190cf
  4190b9:	aas    
  4190ba:	adc    DWORD PTR [edx-0x731768c3],edx
  4190c0:	fmul   QWORD PTR [edi]
  4190c2:	call   0x7e6:0x544c8f57
  4190c9:	mov    al,ds:0x587fc6cc
  4190ce:	mov    ecx,0x83d7e7b
  4190d3:	(bad)
  4190d6:	ins    BYTE PTR es:[edi],dx
  4190d7:	jmp    0xfab4ba5c
  4190dc:	pusha  
  4190dd:	push   esp
  4190de:	or     BYTE PTR [ebp+0x79],ch
  4190e1:	lods   al,BYTE PTR cs:[esi]
  4190e3:	and    DWORD PTR [ebx+0x6a9d249f],esi
  4190e9:	call   0x687f0248
  4190ee:	pop    ds
  4190ef:	mov    cl,0x37
  4190f1:	scas   eax,DWORD PTR es:[edi]
  4190f2:	fnop   
  4190f4:	leave  
  4190f5:	ror    BYTE PTR [eax-0x1767c7ba],cl
  4190fb:	push   0x725ba401
  419100:	adc    al,0x8b
  419102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419103:	mov    ebp,ecx
  419105:	cmp    BYTE PTR [edx],cl
  419107:	mov    ch,0xb0
  419109:	jo     0x4190e6
  41910b:	adc    DWORD PTR [ebx+0x16124be7],ebx
  419111:	jmp    0x41916a
  419113:	in     eax,dx
  419114:	jo     0x41918d
  419116:	fcom   DWORD PTR [esi]
  419118:	in     al,dx
  419119:	mov    eax,ds:0x70917553
  41911e:	cmp    ah,BYTE PTR [esi]
  419120:	mov    es,WORD PTR [ecx]
  419122:	add    eax,0xa2a083c
  419127:	and    ecx,DWORD PTR [edx-0x49fc3ee4]
  41912d:	sbb    eax,0xf16d34ca
  419132:	xlat   BYTE PTR ds:[ebx]
  419133:	jae    0x4191a7
  419135:	sub    esi,ebx
  419137:	(bad)  
  419138:	test   eax,0xa216a0b5
  41913d:	jl     0x419122
  41913f:	inc    ebx
  419140:	dec    eax
  419141:	js     0x41910d
  419143:	push   0x48e2b8d8
  419148:	inc    edx
  419149:	in     al,dx
  41914a:	loop   0x4191b4
  41914c:	xchg   ebp,eax
  41914d:	mov    ch,0x7c
  41914f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419150:	jns    0x4191a2
  419152:	push   es
  419153:	fisttp WORD PTR [ecx]
  419155:	mov    ah,0x40
  419157:	or     edx,DWORD PTR [esi+0x2b6f4489]
  41915d:	rcl    edx,0x16
  419160:	fs push esi
  419162:	loop   0x41918e
  419164:	cmp    esi,ebp
  419166:	scas   al,BYTE PTR es:[edi]
  419167:	jl     0x4191e2
  419169:	int3   
  41916a:	inc    eax
  41916b:	outs   dx,BYTE PTR ds:[esi]
  41916c:	mov    bh,0x6b
  41916e:	lods   eax,DWORD PTR ds:[esi]
  41916f:	test   DWORD PTR [ebx-0x4a],edi
  419172:	push   0xffffff82
  419174:	pop    ebx
  419175:	jge    0x41912e
  419177:	mov    ebp,0x231bfbe9
  41917c:	ins    BYTE PTR es:[edi],dx
  41917d:	out    0xfa,al
  41917f:	dec    ecx
  419180:	ins    BYTE PTR es:[edi],dx
  419181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419182:	mov    ebx,0x44992351
  419187:	inc    esp
  419188:	test   BYTE PTR [edi],ch
  41918a:	iret   
  41918b:	dec    edi
  41918c:	enter  0x3806,0x9a
  419190:	and    dl,BYTE PTR [edx-0x799e8859]
  419196:	cld    
  419197:	(bad)  
  419198:	stos   BYTE PTR es:[edi],al
  419199:	lea    edx,ds:[ebx-0x15]
  41919d:	jae    0x4191f7
  41919f:	and    eax,0x1947db94
  4191a4:	rol    BYTE PTR [edx-0x638972ff],cl
  4191aa:	inc    esp
  4191ab:	pop    esi
  4191ac:	les    esi,FWORD PTR [ecx-0x4ff44a7]
  4191b2:	push   esi
  4191b3:	add    al,0xf5
  4191b5:	je     0x419189
  4191b7:	inc    esp
  4191b8:	dec    edx
  4191b9:	pop    ss
  4191ba:	jmp    0x7efb:0x94c3db67
  4191c1:	pop    ebp
  4191c2:	jnp    0x4191d5
  4191c4:	sbb    eax,DWORD PTR [eax]
  4191c6:	pop    ss
  4191c7:	pmaddwd mm5,QWORD PTR [eax]
  4191ca:	dec    ecx
  4191cb:	in     al,dx
  4191cc:	iret   
  4191cd:	lods   eax,DWORD PTR ds:[esi]
  4191ce:	cmp    ah,BYTE PTR [eax+0x61c7f48b]
  4191d4:	jmp    DWORD PTR [edx-0xf]
  4191d7:	sbb    eax,0xcda7ccd4
  4191dc:	adc    al,0x33
  4191de:	push   edx
  4191df:	jne    0x4191be
  4191e1:	mov    dh,BYTE PTR [edx-0x6de9d46a]
  4191e7:	bts    DWORD PTR [edi],eax
  4191ea:	push   0x4ed633ea
  4191ef:	shl    ah,cl
  4191f1:	add    esp,edx
  4191f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f4:	pop    ss
  4191f5:	mov    al,0xc5
  4191f7:	mov    eax,ds:0x7d48d957
  4191fc:	pop    edx
  4191fd:	(bad)  
  4191fe:	lock pop esp
  419200:	fldcw  WORD PTR [eax-0x5f]
  419203:	repz dec esi
  419205:	mov    al,0xa6
  419207:	das    
  419208:	ret    0xb3f3
  41920b:	pop    eax
  41920c:	(bad)  [edx+0x7e7d8c60]
  419212:	and    ebp,0xffffffb2
  419215:	fs inc esp
  419217:	inc    ebx
  419218:	cli    
  419219:	jl     0x4191aa
  41921b:	shr    BYTE PTR [edi+0x61dc4e31],cl
  419221:	div    BYTE PTR [ecx]
  419223:	mov    esi,0xad2a5290
  419228:	clc    
  419229:	push   edi
  41922a:	das    
  41922b:	rcr    ebp,1
  41922d:	cmp    al,0x60
  41922f:	in     al,0xc9
  419231:	sar    esp,1
  419233:	jg     0x419257
  419235:	jbe    0x41921a
  419237:	push   edx
  419238:	and    eax,0x7921b6c9
  41923d:	mov    dh,0x76
  41923f:	mov    edx,0x45117e44
  419244:	jecxz  0x419264
  419246:	aaa    
  419247:	nop
  419248:	in     al,dx
  419249:	cdq    
  41924a:	mov    ds:0x3904826f,eax
  41924f:	retf   0xb372
  419252:	(bad)  
  419254:	ins    DWORD PTR es:[edi],dx
  419255:	add    al,0x6f
  419257:	adc    al,0xa5
  419259:	in     al,0x1
  41925b:	imul   esi,DWORD PTR [edx-0x29],0xffffffb2
  41925f:	pop    edi
  419260:	or     esp,DWORD PTR [esi]
  419262:	je     0x419202
  419264:	fsub   DWORD PTR [ecx]
  419266:	mov    ah,0x85
  419268:	and    DWORD PTR [edx-0x22],eax
  41926b:	sub    al,0x6b
  41926d:	cmc    
  41926e:	js     0x41929a
  419270:	ins    BYTE PTR es:[edi],dx
  419271:	je     0x4192ac
  419273:	adc    DWORD PTR [eax],esp
  419275:	ds cmc 
  419277:	mov    ebp,0xfbf5c808
  41927c:	cmp    esp,0xffffffd9
  41927f:	xor    ch,BYTE PTR [edx]
  419281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419282:	mov    edx,cs
  419284:	pop    es
  419285:	push   ebp
  419286:	mov    al,BYTE PTR [eax+ecx*8]
  419289:	ror    ah,1
  41928b:	lea    esp,[ebx]
  41928d:	push   edi
  41928e:	push   ds
  41928f:	push   edx
  419290:	mov    dh,0xfd
  419292:	ret    
  419293:	enter  0xecc2,0x83
  419297:	aas    
  419298:	push   0xb6195689
  41929d:	add    cl,ah
  41929f:	ins    DWORD PTR es:[edi],dx
  4192a0:	(bad)  
  4192a1:	out    dx,eax
  4192a2:	jecxz  0x41925b
  4192a4:	cmp    ebx,DWORD PTR [edi]
  4192a6:	mov    ch,0x13
  4192a8:	jmp    0xf60398ba
  4192ad:	leave  
  4192ae:	push   0xffffffcf
  4192b0:	xor    eax,0xb0ac2c4c
  4192b5:	lds    ebx,FWORD PTR [edx+0x24]
  4192b8:	jmp    0xd76b:0x998a25bf
  4192bf:	pop    ss
  4192c0:	scas   al,BYTE PTR es:[edi]
  4192c1:	lds    eax,FWORD PTR [ecx-0x4e66b41a]
  4192c7:	add    eax,0xb31d230d
  4192cc:	out    dx,al
  4192cd:	xchg   DWORD PTR [ecx],ebp
  4192cf:	sbb    DWORD PTR [edi-0x36],ecx
  4192d2:	lds    ebx,FWORD PTR [esi]
  4192d4:	mov    ds:0x8edd1f89,al
  4192d9:	pop    esp
  4192da:	add    ebx,ebp
  4192dc:	or     BYTE PTR [ebp-0x14],ch
  4192df:	add    DWORD PTR [edi],edi
  4192e1:	lea    ebp,ds:0xaa7e4ce6
  4192e7:	cmpps  xmm3,xmm6,0x7a
  4192eb:	lods   eax,DWORD PTR ds:[esi]
  4192ec:	mov    WORD PTR [esi],?
  4192ee:	ja     0x419283
  4192f0:	out    0x12,eax
  4192f2:	cli    
  4192f3:	push   ds
  4192f4:	xchg   ebp,eax
  4192f5:	out    dx,eax
  4192f6:	xor    eax,DWORD PTR [edi]
  4192f8:	mov    BYTE PTR [esi-0x6e],ch
  4192fb:	in     eax,0xcd
  4192fd:	jmp    0x419331
  4192ff:	pop    ecx
  419300:	fadd   QWORD PTR [edi-0x6c]
  419303:	popa   
  419304:	fsub   QWORD PTR ds:0x6b40518c
  41930a:	pop    es
  41930b:	aam    0x1a
  41930d:	xor    edi,eax
  41930f:	outs   dx,DWORD PTR ds:[esi]
  419310:	stc    
  419311:	in     eax,0x99
  419313:	ficomp WORD PTR [eax-0xa063a6f]
  419319:	cmp    BYTE PTR [edi+eax*8],ch
  41931c:	(bad)  
  41931e:	int3   
  41931f:	pusha  
  419320:	cdq    
  419321:	popf   
  419322:	xchg   BYTE PTR [ecx+0x77],dl
  419325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419326:	or     al,0x7d
  419328:	sub    edi,DWORD PTR [ebp+0x17]
  41932b:	mov    eax,0x4ac264dd
  419330:	mov    esp,DWORD PTR [eax]
  419332:	pop    esp
  419333:	fnsetpm(287 only) 
  419335:	pop    ebp
  419336:	fistp  WORD PTR [ecx]
  419338:	sbb    edx,DWORD PTR [ebp+0x2e]
  41933b:	int    0xec
  41933d:	stos   BYTE PTR es:[edi],al
  41933e:	in     eax,dx
  41933f:	test   DWORD PTR [esi],esp
  419341:	and    bl,ch
  419343:	psubq  mm6,QWORD PTR [ebp+0x1b]
  419347:	mov    cl,0xfd
  419349:	push   ecx
  41934a:	stos   DWORD PTR es:[edi],eax
  41934b:	ret    0xf3f6
  41934e:	cmp    esp,edx
  419350:	lahf   
  419351:	test   BYTE PTR [edi+0x443c9739],0xc9
  419358:	je     0x419351
  41935a:	pop    esp
  41935b:	leave  
  41935c:	pop    ss
  41935d:	dec    ebx
  41935e:	js     0x419342
  419360:	cwde   
  419361:	mov    bl,0xe0
  419363:	mov    ah,BYTE PTR [ecx*8-0x22f3c369]
  41936a:	jp     0x419337
  41936c:	and    BYTE PTR [edi+0x3dbc91e],dl
  419372:	jge    0x419310
  419374:	dec    ebp
  419375:	jl     0x419333
  419377:	mov    esp,DWORD PTR [esi-0x481a9075]
  41937d:	fldcw  WORD PTR [eax-0x7c206b0]
  419383:	dec    edx
  419384:	cli    
  419385:	adc    al,0x6d
  419387:	std    
  419388:	stos   DWORD PTR es:[edi],eax
  419389:	mov    BYTE PTR [edx-0x2b],dh
  41938c:	test   eax,0xa82c5ffe
  419391:	xor    ebx,edx
  419393:	inc    eax
  419394:	mov    al,0xc7
  419396:	jl     0x4193c7
  419398:	les    ebp,FWORD PTR ds:0x5945888c
  41939e:	test   bh,al
  4193a0:	mov    esi,0x65e1e5e7
  4193a5:	lods   eax,DWORD PTR ds:[esi]
  4193a6:	rcl    DWORD PTR [eax+0x36],1
  4193a9:	mov    eax,0x9b260c8b
  4193ae:	fimul  WORD PTR ds:0x217df20c
  4193b4:	mov    WORD PTR [eax-0x575a4996],ss
  4193ba:	sar    bh,cl
  4193bc:	aaa    
  4193bd:	ss mov bl,0xdb
  4193c0:	fnstsw WORD PTR [eax-0x3ce0450]
  4193c6:	mov    dl,0x4b
  4193c8:	ret    
  4193c9:	sbb    DWORD PTR [edx-0x1998f0ad],esi
  4193cf:	inc    ebx
  4193d0:	mov    ebx,0x34473712
  4193d5:	cmp    al,0xba
  4193d7:	ja     0x4193b0
  4193d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193da:	hlt    
  4193db:	lods   al,BYTE PTR ds:[esi]
  4193dc:	inc    ebp
  4193dd:	or     DWORD PTR [esi+0x3b075b00],edi
  4193e3:	pop    esp
  4193e4:	jp     0x419399
  4193e6:	pop    edi
  4193e7:	mov    dh,0x2f
  4193e9:	sub    eax,0xa77ba281
  4193ee:	add    DWORD PTR [ebx-0x6c],esi
  4193f1:	xor    DWORD PTR [ebx-0x47fb152],eax
  4193f7:	lea    ebp,[esi*1+0x5a95b6e]
  4193fe:	mov    cl,BYTE PTR [esi+0x36]
  419401:	(bad)  
  419402:	gs jecxz 0x41941b
  419405:	adc    ah,bl
  419407:	jg     0x419474
  419409:	lods   eax,DWORD PTR ds:[esi]
  41940a:	mov    dh,0x52
  41940c:	xor    DWORD PTR [ecx+0x43],edi
  41940f:	aas    
  419410:	jnp    0x41941a
  419412:	xchg   ebx,eax
  419413:	push   es
  419414:	dec    eax
  419415:	fnstsw WORD PTR [ecx-0x53]
  419418:	cdq    
  419419:	sub    bh,BYTE PTR [ebx+esi*2]
  41941c:	inc    esp
  41941d:	sbb    BYTE PTR [esi+esi*8-0xd],bl
  419421:	not    DWORD PTR [ebx]
  419423:	pop    ebp
  419424:	ds jl  0x4193ff
  419427:	aam    0xab
  419429:	js     0x4193c7
  41942b:	imul   ebx,DWORD PTR [edx-0x50],0xffffffeb
  41942f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419430:	dec    ebx
  419431:	add    eax,0x657f7664
  419436:	cmp    al,0x76
  419438:	sbb    esi,esi
  41943a:	or     al,0x58
  41943c:	xchg   esi,eax
  41943d:	cmp    eax,0x78de6938
  419442:	xchg   esp,eax
  419443:	scas   eax,DWORD PTR es:[edi]
  419444:	dec    edi
  419445:	mov    dl,al
  419447:	push   esi
  419448:	sub    dl,BYTE PTR [ebx-0x13]
  41944b:	sbb    al,BYTE PTR [edi-0x7e]
  41944e:	mov    eax,0x55226b8c
  419453:	pop    edi
  419454:	inc    DWORD PTR [ecx-0x7d5e1119]
  41945a:	out    0xa8,eax
  41945c:	adc    ebx,ebx
  41945e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945f:	pop    ecx
  419460:	push   ebx
  419461:	inc    ecx
  419462:	out    0x57,al
  419464:	jle    0x419446
  419466:	stos   DWORD PTR es:[edi],eax
  419467:	mov    ds:0x87a1f5c6,eax
  41946c:	sub    al,0xff
  41946e:	sub    ebp,edi
  419470:	repnz pop ebp
  419472:	bound  esp,QWORD PTR [ebx-0x2f]
  419475:	sub    DWORD PTR [edi-0x318b037c],eax
  41947b:	jns    0x419475
  41947d:	ret    0xb711
  419480:	fimul  WORD PTR [esi+0x556c7362]
  419486:	dec    edi
  419487:	jb     0x41940e
  419489:	test   al,0x31
  41948b:	fdivr  DWORD PTR [ebx-0x81886b3]
  419491:	mov    bh,0xa
  419493:	xor    BYTE PTR [ebx+0x42648014],0xb4
  41949a:	nop
  41949b:	cmp    dh,bh
  41949d:	ja     0x419519
  41949f:	sbb    al,0x49
  4194a1:	fcmovu st,st(5)
  4194a3:	ins    BYTE PTR es:[edi],dx
  4194a4:	mov    dl,0xd
  4194a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194a7:	cmp    al,0x87
  4194aa:	in     eax,dx
  4194ab:	adc    BYTE PTR [ebx],ah
  4194ad:	dec    esi
  4194ae:	mov    esi,0xc8327c1c
  4194b3:	je     0x4194a4
  4194b5:	adc    al,0x73
  4194b7:	jmp    0x178a2d7d
  4194bc:	jne    0x419521
  4194be:	push   DWORD PTR [ecx+0x49]
  4194c1:	retf   
  4194c2:	add    bh,bl
  4194c4:	fst    QWORD PTR ds:0xcfff4ade
  4194ca:	xlat   BYTE PTR ds:[ebx]
  4194cb:	stos   BYTE PTR es:[edi],al
  4194cc:	mov    dl,0xe2
  4194ce:	ss retf 
  4194d0:	ins    BYTE PTR es:[edi],dx
  4194d1:	pop    edi
  4194d2:	(bad)  
  4194d3:	fs pop esi
  4194d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194d6:	mov    BYTE PTR [eax],dh
  4194d8:	fwait
  4194d9:	pusha  
  4194da:	arpl   di,bx
  4194dc:	fcmovne st,st(6)
  4194de:	add    BYTE PTR [edx+0x63],bh
  4194e1:	mov    ch,BYTE PTR [esi+0x50d33157]
  4194e7:	push   0x2813109d
  4194ec:	push   eax
  4194ed:	cmp    eax,0x5cf5d25a
  4194f2:	(bad)  
  4194f3:	(bad)  
  4194f4:	js     0x419532
  4194f6:	nop
  4194f7:	adc    BYTE PTR [ecx+0x2e7ed308],al
  4194fd:	mov    cl,0x8c
  4194ff:	push   esp
  419500:	mov    eax,ds:0x7d6b2147
  419505:	lds    ebp,FWORD PTR [edx+0x3005cc5d]
  41950b:	pop    ds
  41950c:	scas   al,BYTE PTR es:[edi]
  41950d:	out    0x30,al
  41950f:	adc    BYTE PTR [eax],0xda
  419512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419513:	mov    esp,0x9c1f9745
  419518:	pop    ecx
  419519:	push   ebx
  41951a:	mov    fs,WORD PTR [edx+0x6e74b966]
  419520:	jmp    0x8cf0:0xb4afdeb7
  419527:	push   ecx
  419528:	fdivr  DWORD PTR [ecx+0x37]
  41952b:	retf   
  41952c:	lahf   
  41952d:	push   0xd6787414
  419532:	mov    ah,0x65
  419534:	mov    bl,0xeb
  419536:	mov    BYTE PTR [eax-0x6b511df7],ch
  41953c:	and    edx,DWORD PTR [edx]
  41953e:	neg    BYTE PTR [esi]
  419540:	adc    ch,BYTE PTR [eax]
  419542:	cmp    eax,0x61893051
  419547:	and    DWORD PTR [ebx-0x5b0a2c79],esp
  41954d:	mov    ds:0x219afd51,al
  419552:	out    0xd3,eax
  419554:	add    dh,bh
  419556:	nop
  419557:	and    cl,al
  419559:	nop
  41955a:	mov    bh,al
  41955c:	loope  0x419526
  41955e:	clc    
  41955f:	mov    eax,0xaaba6313
  419564:	stc    
  419565:	inc    edx
  419566:	cwde   
  419567:	std    
  419568:	pop    ebx
  419569:	shl    BYTE PTR [ecx+0x45f0c40f],cl
  41956f:	xchg   BYTE PTR [esi+0xd4af5e0],ch
  419575:	sub    eax,0xd2cd50d5
  41957a:	and    eax,0xe4194fed
  41957f:	dec    esi
  419580:	dec    ecx
  419581:	push   esp
  419582:	mov    WORD PTR ds:[esi-0x2bed5360],ss
  419589:	jae    0x4195f8
  41958b:	xchg   edi,eax
  41958c:	push   ds
  41958d:	push   esi
  41958e:	add    dh,BYTE PTR [ebp-0xb285a4d]
  419594:	adc    BYTE PTR [edi+0xe],dl
  419597:	jmp    0x1d1c27fb
  41959c:	(bad)  
  41959d:	jbe    0x419611
  41959f:	push   ebx
  4195a0:	leave  
  4195a1:	aam    0x88
  4195a3:	sub    dl,dl
  4195a5:	hlt    
  4195a6:	xchg   ebp,eax
  4195a7:	lock or esi,DWORD PTR [ecx+edx*2-0x37]
  4195ac:	out    dx,eax
  4195ad:	pop    ds
  4195ae:	and    BYTE PTR [edx+0x4d],dh
  4195b1:	stos   DWORD PTR es:[edi],eax
  4195b2:	mov    cl,0xb4
  4195b4:	lods   eax,DWORD PTR ds:[esi]
  4195b5:	or     BYTE PTR [ebx+ebp*2+0x53135f7b],bh
  4195bc:	or     DWORD PTR [ecx],0x8695c657
  4195c2:	cmp    ch,al
  4195c4:	mov    ecx,DWORD PTR [edi+0x2e22c461]
  4195ca:	cmp    eax,DWORD PTR [esi-0x7e689594]
  4195d0:	rol    BYTE PTR gs:[ecx-0x1cfe55a],0x9f
  4195d8:	aam    0xa2
  4195da:	add    BYTE PTR [eax+0x640d568b],0xc8
  4195e1:	push   ss
  4195e2:	outs   dx,BYTE PTR ds:[esi]
  4195e3:	pop    ebp
  4195e4:	cmp    al,0xa1
  4195e6:	adc    al,0xfd
  4195e8:	sub    ebx,DWORD PTR [edx+ecx*4]
  4195eb:	(bad)  
  4195ec:	sub    eax,0xb2989ff0
  4195f1:	jbe    0x4195fc
  4195f3:	xchg   ecx,eax
  4195f4:	into   
  4195f5:	fild   QWORD PTR [ecx]
  4195f7:	sub    eax,DWORD PTR [edi-0x31]
  4195fa:	pop    ecx
  4195fb:	not    BYTE PTR [ecx]
  4195fd:	adc    al,0x21
  4195ff:	adc    BYTE PTR [ecx+0x5c],0xf9
  419603:	pop    edi
  419604:	js     0x419655
  419606:	es ja  0x419606
  419609:	arpl   WORD PTR [edi-0x5d],bx
  41960c:	out    0x27,eax
  41960e:	pushf  
  41960f:	dec    edi
  419610:	jbe    0x4195de
  419612:	push   ebx
  419613:	data16 jbe 0x419631
  419616:	mov    DWORD PTR [esi],0xfef2dc90
  41961c:	lds    eax,FWORD PTR cs:[ebx-0x26a00974]
  419623:	add    eax,0xa85e4d06
  419628:	pop    ebx
  419629:	xchg   ebx,eax
  41962a:	aas    
  41962b:	jmp    0x3511e07
  419630:	lods   eax,DWORD PTR ds:[esi]
  419631:	cmp    esp,ebp
  419633:	int3   
  419634:	push   0xffffffa5
  419636:	lahf   
  419637:	xchg   ecx,eax
  419638:	inc    edx
  419639:	adc    al,BYTE PTR [edx]
  41963b:	xchg   ebp,eax
  41963c:	lods   eax,DWORD PTR ds:[esi]
  41963d:	outs   dx,DWORD PTR ds:[esi]
  41963e:	fnsave [esi+0xb]
  419641:	out    0xd8,eax
  419643:	call   DWORD PTR [eax-0x4c4f1597]
  419649:	imul   edx,ecx,0xffffffc5
  41964c:	push   0x97ee432
  419651:	bound  esp,QWORD PTR [eax-0x5e763227]
  419657:	dec    esp
  419658:	repz push 0x26
  41965b:	add    BYTE PTR [ecx],dl
  41965d:	loop   0x4196af
  41965f:	inc    edi
  419660:	or     DWORD PTR ds:0x9f967769,esi
  419666:	in     al,0x84
  419668:	ins    BYTE PTR es:[edi],dx
  419669:	aaa    
  41966a:	mov    dh,0x6d
  41966c:	cwde   
  41966d:	sub    eax,0x7eb46e73
  419672:	and    al,0x9
  419674:	xor    eax,0x209fc062
  419679:	jbe    0x41960b
  41967b:	add    BYTE PTR [ebx-0x24],ch
  41967e:	sbb    esp,esp
  419680:	js     0x41964e
  419682:	test   esi,ecx
  419684:	cs loope 0x4196e5
  419687:	mov    esi,0xd265afd8
  41968c:	fisubr DWORD PTR [esi+0x5]
  41968f:	adc    ebx,DWORD PTR [ebx-0x1c0ab84c]
  419695:	mov    al,BYTE PTR [ecx]
  419697:	setno  BYTE PTR [edi]
  41969a:	retf   
  41969b:	xchg   ecx,eax
  41969c:	jle    0x4196ae
  41969e:	or     eax,0xcdb9011a
  4196a3:	pop    eax
  4196a4:	cwde   
  4196a5:	and    al,0xce
  4196a7:	mov    dl,BYTE PTR [esi]
  4196a9:	push   eax
  4196aa:	(bad)  
  4196ab:	jae    0x419690
  4196ad:	and    bh,dh
  4196af:	(bad)  
  4196b0:	mov    esi,0xb92ad303
  4196b5:	sub    ebx,esp
  4196b7:	mov    edi,0x14470c9e
  4196bc:	mov    ds:0x3a6e68e6,al
  4196c1:	and    eax,DWORD PTR [ecx]
  4196c3:	sahf   
  4196c4:	mov    cl,0x4a
  4196c6:	imul   ebp,DWORD PTR [esi-0x6b],0x6e
  4196ca:	xor    edi,DWORD PTR [edi+0xf67bfb2]
  4196d0:	push   ebx
  4196d1:	push   es
  4196d2:	ds jae 0x4196e9
  4196d5:	daa    
  4196d6:	js     0x41970b
  4196d8:	(bad)
  4196db:	(bad)  
  4196dc:	sbb    DWORD PTR [ebp+eax*1-0x91c673e],ebx
  4196e3:	inc    ecx
  4196e4:	daa    
  4196e5:	jmp    0x419713
  4196e7:	es pushf 
  4196e9:	xor    BYTE PTR ds:0x462db2c1,dh
  4196ef:	add    cl,BYTE PTR [edi]
  4196f1:	dec    eax
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	push   cs
  4196f4:	or     ecx,DWORD PTR [ebx]
  4196f6:	dec    ebp
  4196f7:	jmp    0x90d1:0xf76ab1ca
  4196fe:	xchg   edi,eax
  4196ff:	sbb    DWORD PTR [ebp-0x26],edi
  419702:	mov    BYTE PTR [edx],0x3d
  419705:	push   ss
  419706:	pop    ebp
  419707:	adc    ah,BYTE PTR [esi]
  419709:	adc    BYTE PTR [edi],cl
  41970b:	mov    dh,0x43
  41970d:	push   0xffffffe5
  41970f:	jae    0x419692
  419711:	cmc    
  419712:	fwait
  419713:	sbb    BYTE PTR fs:[ecx-0x18],ch
  419717:	add    dh,0x89
  41971a:	jo     0x4196ab
  41971c:	cli    
  41971d:	xchg   ebp,eax
  41971e:	lds    edx,FWORD PTR [edi-0x154b6a9f]
  419724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419725:	jle    0x419705
  419727:	pop    esi
  419728:	shl    BYTE PTR [ecx-0x6f],cl
  41972b:	stos   DWORD PTR es:[edi],eax
  41972c:	jg     0x4196ef
  41972e:	xlat   BYTE PTR ds:[ebx]
  41972f:	xor    DWORD PTR [eax],0x5bbb7895
  419735:	out    0x1e,al
  419737:	pop    esp
  419738:	stos   BYTE PTR es:[edi],al
  419739:	or     ebx,DWORD PTR [ecx-0x4c]
  41973c:	push   esp
  41973d:	(bad)  
  41973e:	cli    
  41973f:	pusha  
  419740:	cld    
  419741:	adc    eax,0x65c6629c
  419746:	test   DWORD PTR [ebx+0xdb4bbba],ecx
  41974c:	loopne 0x4196d4
  41974e:	dec    esp
  41974f:	mov    dl,0xc5
  419751:	and    al,0xc3
  419753:	fnop   
  419755:	jo     0x419701
  419757:	ds inc ebp
  419759:	imul   ebx,DWORD PTR [esi+0x6dca96bf],0xffffffee
  419760:	aad    0xf7
  419762:	dec    eax
  419763:	lods   al,BYTE PTR ds:[esi]
  419764:	clc    
  419765:	or     ah,bl
  419767:	pop    ecx
  419768:	add    al,BYTE PTR [eax+0x36]
  41976b:	cmp    eax,0xc4f4bd6f
  419770:	sub    DWORD PTR ds:[ebp-0x2647e66d],ebx
  419777:	sub    eax,0xfa3a1e05
  41977c:	stos   DWORD PTR es:[edi],eax
  41977d:	push   ebp
  41977e:	scas   eax,DWORD PTR es:[edi]
  41977f:	(bad)  
  419780:	jge    0x41977f
  419782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419783:	xchg   DWORD PTR [ebx+0x2d8d389a],edi
  419789:	xor    esi,DWORD PTR [ebx]
  41978b:	das    
  41978c:	xchg   ebp,eax
  41978d:	aas    
  41978e:	call   0xe5dc4a0e
  419793:	mov    ecx,0x94dc8faa
  419798:	sbb    BYTE PTR [edi-0x4c5f6007],ch
  41979e:	mov    dh,0xae
  4197a0:	pop    eax
  4197a1:	jmp    0x1f15296e
  4197a6:	sbb    DWORD PTR [esi-0x597475b8],ebx
  4197ac:	add    eax,0xd0301a01
  4197b1:	xchg   BYTE PTR [ecx+edx*4+0x513ca123],al
  4197b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197b9:	dec    esp
  4197ba:	mov    eax,ds:0x26426085
  4197bf:	shr    al,0x71
  4197c2:	cmp    ecx,DWORD PTR [eax+0x2640f45f]
  4197c8:	rol    dl,0x89
  4197cb:	or     DWORD PTR [edx],esi
  4197cd:	inc    edi
  4197ce:	pusha  
  4197cf:	ins    DWORD PTR es:[edi],dx
  4197d0:	cmp    ax,0x783d
  4197d4:	es cmp bh,ah
  4197d7:	stos   BYTE PTR es:[edi],al
  4197d8:	test   eax,0x440d5f9c
  4197dd:	retf   0x1a1c
  4197e0:	adc    ecx,DWORD PTR [edi]
  4197e2:	mov    esi,0x5160c37f
  4197e7:	push   esp
  4197e8:	daa    
  4197e9:	adc    ch,BYTE PTR [ebx]
  4197eb:	test   al,0x44
  4197ed:	mov    bh,0x78
  4197ef:	jle    0x419831
  4197f1:	ret    0xd19e
  4197f4:	xadd   bl,ah
  4197f7:	ss xchg esp,eax
  4197f9:	inc    ebp
  4197fa:	clc    
  4197fb:	mov    edx,0x86f98d05
  419800:	jecxz  0x419878
  419802:	jmp    0x4197d7
  419804:	and    edi,DWORD PTR [ebp-0x161cd773]
  41980a:	retf   
  41980b:	jns    0x419804
  41980d:	sbb    edi,esi
  41980f:	cmp    eax,0x5c1fd704
  419814:	ja     0x419812
  419816:	std    
  419817:	fincstp 
  419819:	dec    eax
  41981a:	out    0x73,al
  41981c:	xchg   esp,eax
  41981d:	int3   
  41981e:	mov    eax,ds:0x79452f9f
  419823:	call   0x3436:0x38211b09
  41982a:	dec    ebx
  41982b:	je     0x419853
  41982d:	dec    esi
  41982e:	pop    ebx
  41982f:	das    
  419830:	pop    esi
  419831:	mov    ebp,0x5cd8e589
  419836:	idiv   BYTE PTR [eax-0x169374a0]
  41983c:	jno    0x419898
  41983e:	mov    esp,0x13f1d118
  419843:	xor    ah,bh
  419845:	xor    cl,0xad
  419848:	jmp    0xbaa3:0xe999c2e1
  41984f:	adc    al,0x1d
  419851:	dec    ebp
  419852:	adc    DWORD PTR [ecx+0x78],esp
  419855:	push   ecx
  419856:	sub    al,0x6b
  419858:	cmp    BYTE PTR [ecx-0x5ff0d8fb],dh
  41985e:	stc    
  41985f:	rcl    DWORD PTR [edx],0x19
  419862:	ficomp DWORD PTR [edx-0x1f39244f]
  419868:	outs   dx,BYTE PTR ds:[esi]
  419869:	int3   
  41986a:	mov    ebp,DWORD PTR [ebp+0x93b34e7]
  419870:	lock shl DWORD PTR [ecx+0x5ae35542],cl
  419877:	addr16 std 
  419879:	fsubr  QWORD PTR [edi+0x4f]
  41987c:	inc    eax
  41987d:	in     eax,0x7b
  41987f:	or     al,0x6d
  419881:	neg    eax
  419883:	frstor [ecx]
  419885:	jns    0x419865
  419887:	arpl   WORD PTR [esi+0x153ce318],di
  41988d:	mov    esp,0xc40db094
  419892:	pop    edx
  419893:	cdq    
  419894:	jmp    0x41990d
  419896:	sub    ecx,eax
  419898:	test   eax,0x1d6bea81
  41989d:	inc    DWORD PTR [ebx]
  41989f:	in     eax,0x29
  4198a1:	mov    bh,0xfe
  4198a3:	xor    ebp,ecx
  4198a5:	pushf  
  4198a6:	mov    ebx,0xd0bfc5db
  4198ab:	fnstenv [eax+0x43]
  4198ae:	popf   
  4198af:	mov    ds:0xa91d31cf,eax
  4198b4:	inc    esp
  4198b5:	out    0xbc,eax
  4198b7:	add    dh,BYTE PTR [edi]
  4198b9:	mov    cl,BYTE PTR [ecx]
  4198bb:	cld    
  4198bc:	hlt    
  4198bd:	cli    
  4198be:	jmp    0x7a19:0xd0722394
  4198c5:	scas   al,BYTE PTR es:[edi]
  4198c6:	xor    eax,0xf5bc813d
  4198cb:	push   cs
  4198cc:	test   BYTE PTR [esi],0x94
  4198cf:	lahf   
  4198d0:	lds    ebx,FWORD PTR [edi+0x7f]
  4198d3:	call   0xda107929
  4198d8:	dec    eax
  4198d9:	jbe    0x419890
  4198db:	bound  edx,QWORD PTR [edi]
  4198dd:	pop    edi
  4198de:	add    al,0x1f
  4198e0:	out    0x54,al
  4198e2:	mov    al,ds:0xce85e187
  4198e7:	mov    bl,0x0
  4198e9:	add    eax,0x2f8ae16e
  4198ee:	enter  0x40fc,0xa0
  4198f2:	int3   
  4198f3:	imul   eax,DWORD PTR [esi+0x4f],0x2c
  4198f7:	jbe    0x419890
  4198f9:	cmc    
  4198fa:	aaa    
  4198fb:	out    dx,al
  4198fc:	jp     0x4198f1
  4198fe:	repz pop ecx
  419900:	jno    0x41993a
  419902:	or     dh,cl
  419904:	jne    0x4198f4
  419906:	fsubp  st(2),st
  419908:	test   al,0x2a
  41990a:	jmp    0x1abe:0x85c3e275
  419911:	outs   dx,BYTE PTR ds:[esi]
  419912:	cmp    DWORD PTR [ebx+0x618098c1],edi
  419918:	pop    esi
  419919:	retf   
  41991a:	push   esp
  41991b:	cmp    eax,0x925a4add
  419920:	mov    ah,0x7
  419922:	add    cl,BYTE PTR [edi-0x505384a]
  419928:	ins    DWORD PTR es:[edi],dx
  419929:	mov    ds:0xd881ebf5,eax
  41992e:	inc    BYTE PTR [ebx]
  419930:	iret   
  419931:	pop    edi
  419932:	shl    BYTE PTR [eax+0x4a],1
  419935:	scas   eax,DWORD PTR es:[edi]
  419936:	xchg   ebx,eax
  419937:	mov    dl,0xf3
  419939:	or     eax,0x2f82efee
  41993e:	add    al,0x30
  419940:	and    ebp,DWORD PTR [ebp-0x1c]
  419943:	cmp    al,0xac
  419945:	xor    edx,DWORD PTR [ebp-0x73]
  419948:	(bad)  
  419949:	or     BYTE PTR ds:0x272adf39,bh
  41994f:	(bad)  
  419950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419951:	loope  0x419995
  419953:	add    eax,0xfec64af6
  419958:	scas   al,BYTE PTR es:[edi]
  419959:	sbb    eax,0xd90f558c
  41995e:	cwde   
  41995f:	cmp    al,0x4d
  419961:	jl     0x4198f8
  419963:	popf   
  419964:	cli    
  419965:	push   ds
  419966:	das    
  419967:	and    eax,0x5c54cde0
  41996c:	loope  0x419969
  41996e:	imul   ecx,DWORD PTR [ecx+0x72ec714b],0x2
  419975:	popf   
  419976:	fdiv   DWORD PTR [eax]
  419978:	in     eax,0x51
  41997a:	add    BYTE PTR [edx],ah
  41997c:	and    eax,0x537b185f
  419981:	imul   DWORD PTR [edi+0x64]
  419984:	jnp    0x4199d4
  419986:	mov    ds:0x413e97,al
  41998b:	sub    esp,DWORD PTR [edx+eax*4]
  41998e:	adc    eax,0x6592cd9f
  419993:	pop    es
  419994:	fst    DWORD PTR [bp+si]
  419997:	push   ecx
  419998:	fsubr  st,st(7)
  41999a:	push   0xb0672597
  41999f:	mov    esi,ebp
  4199a1:	lods   eax,DWORD PTR ds:[esi]
  4199a2:	cdq    
  4199a3:	mov    esi,0x4d23e109
  4199a8:	fdivr  DWORD PTR [edi+ebp*1-0x71b70904]
  4199af:	lea    ebp,[eax+edx*1]
  4199b2:	inc    ebp
  4199b3:	or     esp,DWORD PTR [edi+0x49]
  4199b6:	dec    ebp
  4199b7:	stc    
  4199b8:	mov    ah,0x7b
  4199ba:	outs   dx,BYTE PTR ds:[esi]
  4199bb:	in     eax,0xa0
  4199bd:	pop    esp
  4199be:	pop    ecx
  4199bf:	mov    eax,ds:0x162d21e3
  4199c4:	mov    WORD PTR [ebp+0x42],cs
  4199c7:	icebp  
  4199c8:	xchg   edi,eax
  4199c9:	add    bl,BYTE PTR [esi]
  4199cb:	addr16 push ebp
  4199cd:	push   ebp
  4199ce:	nop
  4199cf:	mov    edx,0xc143f5dd
  4199d4:	mov    cs,WORD PTR [eax]
  4199d6:	xchg   BYTE PTR [esi-0x45a4935c],ah
  4199dc:	or     ch,cl
  4199de:	cwde   
  4199df:	mov    eax,ds:0x86d0e062
  4199e4:	add    al,0xc4
  4199e6:	add    edi,DWORD PTR [ebx-0x38]
  4199e9:	aaa    
  4199ea:	jnp    0x4199d2
  4199ec:	push   ds
  4199ed:	pop    esp
  4199ee:	fidivr DWORD PTR [ecx+0x4b52413e]
  4199f4:	ficom  WORD PTR [ebp+eiz*4+0xdbe8ef2]
  4199fb:	mov    dl,0x5e
  4199fd:	push   cs
  4199fe:	js     0x419a02
  419a00:	sbb    ch,BYTE PTR [edi]
  419a02:	sub    dl,BYTE PTR [edx+0x33]
  419a05:	out    dx,al
  419a06:	jl     0x4199be
  419a08:	cmp    eax,0x4dc25a36
  419a0d:	push   es
  419a0e:	rol    DWORD PTR [edi+0x379c2c2f],1
  419a14:	xchg   esi,eax
  419a15:	adc    al,0x43
  419a17:	push   esi
  419a18:	(bad)  
  419a19:	push   edx
  419a1a:	xor    al,0xb2
  419a1c:	and    esp,DWORD PTR [ebx+0xa4c9997]
  419a22:	dec    esi
  419a23:	dec    esp
  419a24:	sti    
  419a25:	int3   
  419a26:	pusha  
  419a27:	pop    es
  419a28:	test   ebp,0x8a2850f7
  419a2e:	pop    edx
  419a2f:	addr16 cld 
  419a31:	rcl    DWORD PTR [ebx+0x24],cl
  419a34:	and    esi,DWORD PTR [edi]
  419a36:	add    al,0x2
  419a38:	cmp    bl,BYTE PTR [ecx]
  419a3a:	ins    BYTE PTR es:[edi],dx
  419a3b:	mov    ch,BYTE PTR [ebp+0x2a]
  419a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a3f:	stos   DWORD PTR es:[edi],eax
  419a40:	push   eax
  419a41:	mov    ebp,0x67f7d47
  419a46:	(bad)  
  419a47:	lds    ebp,FWORD PTR [eax+ebx*2-0x348daf60]
  419a4e:	jo     0x4199e0
  419a50:	pop    edi
  419a51:	add    al,0x64
  419a53:	ficom  DWORD PTR [esp+ebx*2]
  419a56:	repnz or DWORD PTR gs:[edx+0x6d],esp
  419a5b:	push   edx
  419a5d:	adc    BYTE PTR [edx],dh
  419a5f:	and    al,0x11
  419a61:	jp     0x419ab0
  419a63:	outs   dx,BYTE PTR ds:[esi]
  419a64:	jb     0x419aad
  419a66:	jnp    0x419a7b
  419a68:	add    al,0xdb
  419a6a:	not    BYTE PTR [eax-0x8]
  419a6d:	cmp    eax,0x7d1b82e1
  419a72:	jmp    0xad7f:0x32c66965
  419a79:	fdivr  st,st(0)
  419a7b:	fdivr  QWORD PTR [edi-0x57532e6]
  419a81:	push   0xffffffd4
  419a83:	dec    eax
  419a84:	pop    ebx
  419a85:	lods   al,BYTE PTR ds:[esi]
  419a86:	jbe    0x419a0f
  419a88:	add    eax,0x7cfbb74c
  419a8d:	in     al,dx
  419a8e:	dec    esp
  419a8f:	adc    esp,DWORD PTR [eax+0x3e]
  419a92:	add    eax,0x7c6a5183
  419a97:	sbb    BYTE PTR [ebp+0x76],bh
  419a9a:	push   es
  419a9b:	lods   eax,DWORD PTR ds:[esi]
  419a9c:	xchg   esp,eax
  419a9d:	pop    esp
  419a9e:	shl    BYTE PTR [esi],cl
  419aa0:	das    
  419aa1:	clc    
  419aa2:	push   eax
  419aa3:	mov    ecx,0x339f30ea
  419aa8:	sbb    eax,0x2cad7d6c
  419aad:	sar    BYTE PTR es:[eax-0x35],0xe4
  419ab2:	sub    esp,ebp
  419ab4:	pop    ds
  419ab5:	psllq  mm5,QWORD PTR [ecx-0x60824897]
  419abc:	scas   al,BYTE PTR es:[edi]
  419abd:	dec    esi
  419abe:	sbb    eax,esi
  419ac0:	or     dl,bh
  419ac2:	xchg   esi,ebx
  419ac4:	push   eax
  419ac5:	jmp    0x6f46:0x93ab5e39
  419acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acd:	arpl   WORD PTR [edi],bp
  419acf:	(bad)  
  419ad0:	pop    ss
  419ad1:	aad    0xb
  419ad3:	nop
  419ad4:	pop    ds
  419ad5:	mov    bl,0xa0
  419ad7:	test   BYTE PTR [ecx-0x4b],dl
  419ada:	rsm    
  419adc:	loope  0x419b14
  419ade:	mov    ebx,0x8a6f150b
  419ae3:	in     eax,0xa0
  419ae5:	mov    ecx,0x62b1d3c2
  419aea:	or     eax,0xaf061916
  419aef:	aas    
  419af0:	mov    esp,DWORD PTR [ebx]
  419af2:	mov    esp,0x33d6488a
  419af7:	and    DWORD PTR [edi],ecx
  419af9:	mov    esi,0x328480a8
  419afe:	out    dx,al
  419aff:	mov    al,0x71
  419b01:	push   eax
  419b02:	xchg   ebp,eax
  419b03:	std    
  419b04:	leave  
  419b05:	add    ebp,DWORD PTR [edx-0x6b747dec]
  419b0b:	xor    ecx,ebx
  419b0d:	inc    edx
  419b0e:	loopne 0x419ad3
  419b10:	gs cs (bad) 
  419b13:	inc    ebx
  419b14:	xor    bl,BYTE PTR [edx]
  419b16:	test   BYTE PTR [ecx],dl
  419b18:	xlat   BYTE PTR ds:[ebx]
  419b19:	or     eax,0x11db3bfe
  419b1e:	lods   al,BYTE PTR ds:[esi]
  419b1f:	and    DWORD PTR [edx-0x7ad20e0d],ebp
  419b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b26:	mov    eax,ds:0xa0ceb1c2
  419b2b:	cmp    ebx,DWORD PTR [eax+0x9148559]
  419b31:	ss push edi
  419b33:	lock clc 
  419b35:	sub    esi,DWORD PTR [ebp+eiz*4+0x32d63621]
  419b3c:	and    eax,0xc260a285
  419b41:	in     eax,dx
  419b42:	mov    edx,0xa609cbc0
  419b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b48:	into   
  419b49:	pop    edx
  419b4a:	lock push cs
  419b4c:	add    DWORD PTR [esi-0x53],edi
  419b4f:	mov    dh,0xbc
  419b51:	iret   
  419b52:	mov    DWORD PTR [edi+0x2bee1310],esp
  419b58:	lahf   
  419b59:	jle    0x419aeb
  419b5b:	jne    0x419bc9
  419b5d:	cmp    eax,DWORD PTR [ebx+0x63]
  419b60:	jnp    0x419b93
  419b62:	outs   dx,BYTE PTR ds:[esi]
  419b63:	mov    ebp,esp
  419b65:	js     0x419afe
  419b67:	arpl   cx,dx
  419b69:	sahf   
  419b6a:	xor    ebp,DWORD PTR [edi+0x6c3e1465]
  419b70:	and    al,0x1f
  419b72:	pop    es
  419b73:	inc    edi
  419b74:	retf   
  419b75:	dec    ecx
  419b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b77:	adc    BYTE PTR [ebp-0x12],dl
  419b7a:	mov    al,0x9b
  419b7c:	fs inc ecx
  419b7e:	pop    ss
  419b7f:	arpl   WORD PTR [esp-0x53e49a27],ax
  419b86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b87:	push   esp
  419b88:	mov    bl,0xd
  419b8a:	cmp    eax,0xd0176220
  419b8f:	inc    edi
  419b90:	mov    al,bh
  419b92:	jns    0x419b55
  419b94:	lods   eax,DWORD PTR ds:[esi]
  419b95:	std    
  419b96:	xor    al,0xcb
  419b98:	xchg   cl,ch
  419b9a:	(bad)  
  419b9b:	shl    BYTE PTR [ebp+edx*1+0x2a],1
  419b9f:	int    0x90
  419ba1:	stc    
  419ba2:	retf   
  419ba3:	dec    esp
  419ba4:	mov    eax,0x8cfe5ba3
  419ba9:	aam    0xc3
  419bab:	push   cs
  419bac:	fstp   TBYTE PTR [esi-0x26]
  419baf:	dec    eax
  419bb0:	stos   BYTE PTR es:[edi],al
  419bb1:	dec    eax
  419bb2:	cdq    
  419bb3:	xor    BYTE PTR [edx-0x52d51bb4],0xf2
  419bba:	fsubr  QWORD PTR [eax]
  419bbd:	addr16 rol esp,cl
  419bc0:	es in  al,0xfe
  419bc3:	mov    ecx,0xdf9bef4f
  419bc8:	out    dx,al
  419bc9:	mov    esp,0x77e4d253
  419bce:	jbe    0x419be6
  419bd0:	in     eax,0xb7
  419bd2:	clc    
  419bd3:	xchg   DWORD PTR [ecx+ebx*2-0x2e59a28],ebx
  419bda:	in     eax,dx
  419bdb:	cmp    ah,BYTE PTR [esi+0x24]
  419bde:	ret    
  419bdf:	xchg   esp,eax
  419be0:	jmp    0x419c44
  419be2:	ret    0x4dd
  419be5:	ret    0x77a6
  419be8:	fsubr  QWORD PTR [edi*8-0x194209a]
  419bef:	dec    edi
  419bf0:	adc    eax,0x9e5e691c
  419bf5:	(bad)  
  419bf7:	push   esp
  419bf8:	pop    edi
  419bf9:	pop    esi
  419bfa:	add    BYTE PTR [edi-0x7f55a48e],al
  419c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c01:	jb     0x419c49
  419c03:	jp     0x419c74
  419c05:	test   bh,ch
  419c07:	xor    ebx,DWORD PTR ds:0x28d082f5
  419c0d:	jg     0x419c4d
  419c0f:	inc    ebx
  419c10:	enter  0x33f0,0x7c
  419c14:	jmp    0x7332:0xd911ad3c
  419c1b:	pusha  
  419c1c:	cmp    BYTE PTR [ebp+0x2f],bh
  419c1f:	(bad)  
  419c20:	lock sub esi,esp
  419c23:	xor    eax,0x35d753d1
  419c28:	int    0x13
  419c2a:	ins    BYTE PTR es:[edi],dx
  419c2b:	jle    0x419c9c
  419c2d:	jmp    0x419bc0
  419c2f:	pop    ebx
  419c30:	enter  0xf704,0x2e
  419c34:	jp     0x419c6e
  419c36:	dec    ebp
  419c37:	fld    TBYTE PTR [edx+0x48]
  419c3a:	(bad)  
  419c3b:	aam    0x70
  419c3d:	lahf   
  419c3e:	mov    ch,BYTE PTR [eax-0x60]
  419c41:	hlt    
  419c42:	cmp    BYTE PTR [esi+0x588297b7],al
  419c48:	arpl   WORD PTR [edi],cx
  419c4a:	nop
  419c4b:	add    BYTE PTR [edi+ecx*1-0x5],ah
  419c4f:	(bad)  
  419c50:	(bad)  
  419c51:	cmp    ah,BYTE PTR [eax+0x78c1c307]
  419c57:	neg    BYTE PTR [ecx-0x4ba8c1a4]
  419c5d:	out    0x4b,eax
  419c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c60:	dec    eax
  419c61:	jge    0x419be3
  419c63:	xchg   edx,eax
  419c64:	add    edi,DWORD PTR [eax+0x6285f4c7]
  419c6a:	xor    WORD PTR [eax-0x604ad8cd],ax
  419c71:	xchg   esi,eax
  419c72:	xor    BYTE PTR [esi+0x28],dl
  419c75:	mov    ch,0xd6
  419c77:	idiv   bh
  419c79:	xlat   BYTE PTR ds:[ebx]
  419c7a:	mov    BYTE PTR [esi+0x16b835b0],ah
  419c80:	or     BYTE PTR [ebx-0x2c9ab0c],bl
  419c86:	and    al,0x22
  419c88:	inc    esi
  419c89:	shl    DWORD PTR [ecx],0x71
  419c8c:	push   es
  419c8d:	or     esi,edi
  419c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c90:	call   0x9cd7:0xfcc8fba1
  419c97:	jecxz  0x419c61
  419c99:	enter  0x3e0f,0xb6
  419c9d:	lds    ebp,FWORD PTR [eax+0x1a]
  419ca0:	call   0x8c7ad9b
  419ca5:	mov    BYTE PTR [ecx-0x22ddde3b],al
  419cab:	sbb    bl,dl
  419cad:	push   esp
  419cae:	xor    DWORD PTR [ebp+0x50299ecd],edi
  419cb4:	int3   
  419cb5:	xchg   ecx,eax
  419cb6:	out    0x28,al
  419cb8:	int    0x91
  419cba:	fisttp WORD PTR [edx]
  419cbc:	adc    al,BYTE PTR [ecx]
  419cbe:	mov    es,WORD PTR [edx+0x62bfb07e]
  419cc4:	inc    eax
  419cc5:	jg     0x419ca3
  419cc7:	or     al,0xc9
  419cc9:	push   cs
  419cca:	mov    WORD PTR ds:0xeb855396,es
  419cd0:	stos   BYTE PTR es:[edi],al
  419cd1:	jmp    0x77e9b1f8
  419cd6:	int    0xfa
  419cd8:	bound  esp,QWORD PTR [eax]
  419cda:	ins    BYTE PTR es:[edi],dx
  419cdb:	jmp    0x5e54659c
  419ce0:	aas    
  419ce1:	or     cl,BYTE PTR [ecx-0xa2cfc77]
  419ce7:	loopne 0x419cfe
  419ce9:	adc    ebx,DWORD PTR [eax+0x6e]
  419cec:	mov    ebx,0x6fd46ff4
  419cf1:	leave  
  419cf2:	ret    
  419cf3:	sbb    eax,0x89bb653b
  419cf8:	mov    ds:0xb2de8e86,eax
  419cfd:	mov    edx,0x7591c531
  419d02:	fcmovb st,st(4)
  419d04:	cmp    dh,BYTE PTR [esi+0x16]
  419d07:	and    BYTE PTR [esi+0x3e],0x82
  419d0b:	in     eax,0x32
  419d0d:	or     eax,0x718548a6
  419d12:	jne    0x419ce3
  419d14:	out    dx,eax
  419d15:	test   eax,0xddf8be22
  419d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1b:	iret   
  419d1c:	test   BYTE PTR [eax],dh
  419d1e:	sar    ah,1
  419d20:	mov    dl,0xcb
  419d22:	or     eax,0x5b35b039
  419d27:	and    ebp,edx
  419d29:	mov    dh,bh
  419d2b:	outs   dx,DWORD PTR ds:[esi]
  419d2c:	(bad)  
  419d2d:	xor    BYTE PTR [edx-0x5b688431],bh
  419d33:	loopne 0x419d33
  419d35:	push   esi
  419d36:	dec    eax
  419d37:	mov    dh,0xd6
  419d39:	sti    
  419d3a:	and    ch,BYTE PTR [ebx+0x2d]
  419d3d:	lods   al,BYTE PTR ds:[esi]
  419d3e:	(bad)  
  419d3f:	stos   DWORD PTR es:[edi],eax
  419d40:	and    al,0x93
  419d42:	cmp    al,0x31
  419d44:	jmp    0x9080:0xf60eda8
  419d4b:	loope  0x419d87
  419d4d:	xor    DWORD PTR [ebp-0x16efeb55],edi
  419d53:	fstp   DWORD PTR [eax+0x7029b37]
  419d59:	ss loope 0x419ce6
  419d5c:	sti    
  419d5d:	fsubr  DWORD PTR [edx-0x65e1ccfa]
  419d63:	test   DWORD PTR [edi-0xb04818d],esp
  419d69:	cmp    eax,0x73e9cf9e
  419d6e:	lods   al,BYTE PTR ds:[esi]
  419d6f:	fwait
  419d70:	repz jg 0x419cfe
  419d73:	push   esi
  419d74:	mov    dl,0x2c
  419d76:	adc    BYTE PTR ds:0xfd9b95fc,dl
  419d7c:	sub    eax,0x31997d3d
  419d82:	data16 in al,0x39
  419d85:	inc    eax
  419d86:	push   eax
  419d87:	pop    eax
  419d88:	rcr    DWORD PTR [ebx],cl
  419d8a:	and    al,0xa2
  419d8c:	call   0x855f5ba
  419d91:	mov    DWORD PTR ds:0xadf25846,edi
  419d97:	mov    cl,0x87
  419d99:	pop    ecx
  419d9a:	enter  0xd991,0x96
  419d9e:	push   esp
  419d9f:	inc    eax
  419da0:	int3   
  419da1:	sbb    al,0x74
  419da3:	jns    0x419dd6
  419da5:	dec    eax
  419da6:	imul   ecx,DWORD PTR [esi],0xcef7c34d
  419dac:	sbb    al,0x8c
  419dae:	jp     0x419dac
  419db0:	inc    edi
  419db1:	mov    ebp,0x10ea5a15
  419db6:	adc    DWORD PTR [ebp+edi*4-0x3d37d6f3],edi
  419dbd:	sub    DWORD PTR ds:0x7ae62971,esp
  419dc3:	ror    DWORD PTR [ebx+0x2087a98b],cl
  419dc9:	sbb    eax,0xaa2cff4e
  419dce:	dec    ebp
  419dcf:	ror    DWORD PTR [edx+0x70],cl
  419dd2:	mov    dh,0xe7
  419dd4:	shl    edi,1
  419dd6:	mov    edx,0x67daccc
  419ddb:	arpl   WORD PTR [edi+eax*8],di
  419dde:	mov    dh,0x17
  419de0:	test   eax,0xbb2788cd
  419de5:	shl    dl,0x78
  419de8:	aad    0x8e
  419dea:	adc    al,0xec
  419dec:	sub    BYTE PTR [ebx+esi*2],bl
  419def:	cs in  al,0x5e
  419df2:	sbb    ecx,edi
  419df4:	mov    ds:0xc204ab42,eax
  419df9:	xchg   ebx,eax
  419dfa:	mov    al,0xc6
  419dfc:	imul   eax,DWORD PTR [edx-0x4],0x117ac978
  419e03:	sbb    BYTE PTR [eax],ah
  419e05:	daa    
  419e06:	xchg   esp,eax
  419e07:	pop    esi
  419e08:	adc    bh,BYTE PTR gs:0x45eedf27
  419e0f:	shr    DWORD PTR [ecx],cl
  419e11:	adc    DWORD PTR [ebx-0x51],0x943a0fdd
  419e18:	imul   eax,DWORD PTR [ebx+0xf],0x45
  419e1c:	scas   al,BYTE PTR es:[edi]
  419e1d:	int    0x78
  419e1f:	icebp  
  419e20:	jae    0x419dc5
  419e22:	and    al,0x74
  419e24:	inc    eax
  419e25:	and    eax,0xafa84c5a
  419e2a:	hlt    
  419e2b:	retf   0xe8d8
  419e2e:	stos   DWORD PTR es:[edi],eax
  419e2f:	test   al,0xd5
  419e31:	cld    
  419e32:	xchg   ebx,eax
  419e33:	ins    DWORD PTR es:[edi],dx
  419e34:	retf   0x80fd
  419e37:	adc    BYTE PTR [eax-0x20b181f6],al
  419e3d:	cmp    ch,dl
  419e3f:	and    eax,0x5830404e
  419e44:	aad    0x89
  419e46:	scas   al,BYTE PTR es:[edi]
  419e47:	(bad)  
  419e48:	xchg   ecx,eax
  419e49:	rcr    BYTE PTR [esi],0xa9
  419e4c:	imul   esp,esp,0x4bc9dd68
  419e52:	sbb    eax,0xcc37d6e5
  419e57:	pop    ds
  419e58:	(bad)  
  419e59:	fsubr  DWORD PTR [edx+0x42d1ec4d]
  419e5f:	inc    ebx
  419e60:	mov    cl,0xe5
  419e62:	push   ebp
  419e63:	mov    esi,0x7275d81b
  419e68:	push   0x6b4c1ab
  419e6d:	cmp    ecx,DWORD PTR [edx+edi*1]
  419e70:	stc    
  419e71:	fstp   TBYTE PTR [edx+ebp*8-0x19]
  419e75:	add    BYTE PTR [esi],ch
  419e77:	mov    al,ds:0x2ca04264
  419e7c:	fidivr WORD PTR [edx+0x7099c2bc]
  419e82:	aam    0x65
  419e84:	sub    BYTE PTR [edi-0x8],bh
  419e87:	add    edx,DWORD PTR [eax]
  419e89:	xchg   dl,dl
  419e8b:	xor    edi,DWORD PTR [ebx-0x60]
  419e8e:	xor    eax,0xaa4691d6
  419e93:	pop    esi
  419e94:	inc    edi
  419e95:	not    BYTE PTR [ebx+0x29]
  419e98:	add    esp,DWORD PTR [edi]
  419e9a:	js     0x419e27
  419e9c:	dec    esi
  419e9d:	jmp    0x562c:0x6a912bd1
  419ea4:	jg     0x419f1a
  419ea6:	cmp    dh,0x2c
  419ea9:	stc    
  419eaa:	sbb    ecx,0xfffffff8
  419ead:	mov    DWORD PTR [esi-0x354ac396],ebx
  419eb3:	and    dh,BYTE PTR [edi+0x7f4d1248]
  419eb9:	mov    dl,0xc
  419ebb:	pushf  
  419ebc:	and    al,0x35
  419ebe:	aaa    
  419ebf:	pop    ebx
  419ec0:	or     al,0xa1
  419ec2:	std    
  419ec3:	inc    edi
  419ec4:	sahf   
  419ec5:	jmp    0xb5191c88
  419eca:	xlat   BYTE PTR ds:[ebx]
  419ecb:	aad    0x9e
  419ecd:	sub    eax,0x12
  419ed0:	cmp    esi,DWORD PTR [edx-0x45e8b7e9]
  419ed6:	add    ch,BYTE PTR [ebx-0x6a]
  419ed9:	stos   BYTE PTR es:[edi],al
  419eda:	inc    ebp
  419edb:	mov    edi,0x3b2b3da6
  419ee0:	xor    al,dh
  419ee2:	xchg   BYTE PTR [ebx-0x6f1ca8aa],bl
  419ee8:	(bad)  [ebp-0xe4711e3]
  419eee:	(bad)
  419ef1:	mov    ds,WORD PTR [edx+0x4c]
  419ef4:	and    eax,0x3b54e8d1
  419ef9:	xchg   esi,eax
  419efa:	mov    BYTE PTR [edi],0xf9
  419efd:	adc    edi,DWORD PTR [edi+0x3b5da224]
  419f03:	xchg   esp,eax
  419f04:	aaa    
  419f05:	aad    0x99
  419f07:	mov    edx,0xc0dfcb2a
  419f0c:	jnp    0x419f5f
  419f0e:	out    0x4e,al
  419f10:	jns    0x419f21
  419f12:	js     0x419eea
  419f14:	pop    edx
  419f15:	dec    edx
  419f16:	push   cs
  419f17:	dec    ecx
  419f18:	push   esp
  419f19:	inc    ebp
  419f1a:	adc    DWORD PTR [eax],edx
  419f1c:	aam    0xc6
  419f1e:	dec    edx
  419f1f:	adc    ecx,DWORD PTR ss:[ebp+0x2c378413]
  419f26:	mul    DWORD PTR [eax]
  419f28:	push   ds
  419f29:	mov    ss,WORD PTR [edi+0x3e88bde4]
  419f2f:	xor    bh,bh
  419f31:	scas   al,BYTE PTR es:[edi]
  419f32:	push   ebp
  419f33:	cmp    BYTE PTR [ebp-0x7a],cl
  419f36:	popf   
  419f37:	pop    ebp
  419f38:	push   edx
  419f39:	pop    edi
  419f3a:	loope  0x419f9b
  419f3c:	and    BYTE PTR [eax],bh
  419f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3f:	es mov bl,0x19
  419f42:	stos   BYTE PTR es:[edi],al
  419f43:	sbb    BYTE PTR [ebp+0x2a94abcb],bh
  419f49:	pop    es
  419f4a:	lock pop ebx
  419f4c:	sbb    edx,esi
  419f4e:	das    
  419f4f:	sub    al,0xda
  419f51:	(bad)  
  419f52:	xor    edx,DWORD PTR [eax+0x36fec4f4]
  419f58:	add    DWORD PTR [edi-0x66],esp
  419f5b:	js     0x419fc1
  419f5d:	adc    edx,edi
  419f5f:	ja     0x419f8f
  419f61:	dec    edx
  419f62:	in     al,dx
  419f63:	jae    0x419f7b
  419f65:	push   eax
  419f66:	mov    ebp,0x8828fce3
  419f6b:	aaa    
  419f6c:	adc    dl,dh
  419f6e:	mov    edi,0xc520d720
  419f73:	aas    
  419f74:	xor    eax,ebx
  419f76:	pusha  
  419f77:	outs   dx,DWORD PTR ds:[esi]
  419f78:	or     al,0x81
  419f7a:	lahf   
  419f7b:	jecxz  0x419f0e
  419f7d:	and    DWORD PTR [edi],0xffffffec
  419f80:	cmp    DWORD PTR [ebx],0xffffffa6
  419f83:	pop    eax
  419f84:	popf   
  419f85:	dec    esi
  419f86:	test   BYTE PTR [edx+edx*2+0x5024504d],0x4c
  419f8e:	or     eax,0x49576ef8
  419f93:	fcomp  QWORD PTR [edi+0x42f2d932]
  419f99:	jmp    0x419f85
  419f9b:	xor    DWORD PTR ds:0xc6497da8,0xffffffe4
  419fa2:	mov    eax,ds:0x3c96d75c
  419fa7:	dec    esi
  419fa8:	repnz out 0x91,eax
  419fab:	pusha  
  419fac:	call   0x2c44bdea
  419fb1:	sbb    DWORD PTR [edi+ecx*4],ebp
  419fb4:	add    DWORD PTR [esi-0x5],esp
  419fb7:	test   BYTE PTR [ebp-0x7f],0x54
  419fbb:	mov    bh,BYTE PTR [edx+0x5a839be5]
  419fc1:	add    al,bh
  419fc3:	inc    ebp
  419fc4:	repz mov esi,0xad897db9
  419fca:	xchg   edx,eax
  419fcb:	(bad)  
  419fcc:	mov    al,0xad
  419fce:	gs out 0x21,al
  419fd1:	add    ebp,DWORD PTR [ebx+0x4f]
  419fd4:	lods   al,BYTE PTR ds:[esi]
  419fd5:	jne    0x419f6d
  419fd7:	cmp    ah,cl
  419fd9:	push   edi
  419fda:	aad    0x31
  419fdc:	mov    ebx,DWORD PTR [esi-0x54]
  419fdf:	push   es
  419fe0:	push   esp
  419fe1:	sti    
  419fe2:	sbb    DWORD PTR ds:0xdaa6dfcc,ecx
  419fe8:	in     ax,dx
  419fea:	fsubr  st(2),st
  419fec:	inc    edx
  419fed:	call   0xfba1:0xccb25a4
  419ff4:	cld    
  419ff5:	iret   
  419ff6:	cmp    cl,BYTE PTR [edx]
  419ff8:	push   ebx
  419ff9:	cld    
  419ffa:	add    BYTE PTR [esi-0x2e],ch
  419ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ffe:	mov    edx,0x1c22f2c2
  41a003:	or     esp,DWORD PTR [ecx]
  41a005:	(bad)  
  41a006:	mov    ds:0xf0f98092,al
  41a00b:	aad    0xe1
  41a00d:	pop    ds
  41a00e:	mov    edi,0x896988a2
  41a013:	mov    dl,0x75
  41a015:	add    esi,DWORD PTR [ecx-0x698a2f5d]
  41a01b:	ret    
  41a01c:	sbb    al,0xcd
  41a01e:	sbb    al,BYTE PTR [esi]
  41a020:	out    0x8f,eax
  41a022:	in     al,0x1
  41a024:	aam    0x71
  41a026:	(bad)  
  41a027:	lock inc edx
  41a029:	push   es
  41a02a:	sbb    esp,DWORD PTR [ecx+esi*2]
  41a02d:	xchg   ebp,eax
  41a02e:	aas    
  41a02f:	push   eax
  41a030:	lods   eax,DWORD PTR ds:[esi]
  41a031:	and    eax,0x6b13d60b
  41a036:	pmulhw mm0,QWORD PTR [ecx+0x7f655403]
  41a03d:	test   eax,0xbd2c18
  41a042:	pop    ebx
  41a043:	(bad)  
  41a044:	fstp   DWORD PTR ds:0xe3c31e3b
  41a04a:	das    
  41a04b:	bound  ecx,QWORD PTR [ecx]
  41a04d:	leave  
  41a04e:	mov    eax,ds:0x493bb8ca
  41a053:	scas   al,BYTE PTR es:[edi]
  41a054:	xchg   ebp,eax
  41a055:	or     BYTE PTR [esi+0x458b1f2e],dl
  41a05b:	xor    BYTE PTR [edx+0x54],dh
  41a05e:	test   DWORD PTR ds:0xb0e5d412,edi
  41a064:	lock in eax,0x75
  41a067:	push   cs
  41a068:	in     al,0x68
  41a06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a06b:	ret    0x1945
  41a06e:	bound  eax,QWORD PTR [eax-0x3289350a]
  41a074:	in     al,0x48
  41a076:	mov    ds:0x8955f9f6,al
  41a07b:	and    eax,0x50e2eb91
  41a080:	jmp    0x41a03e
  41a082:	inc    esp
  41a083:	adc    ch,BYTE PTR [esi-0x50c62ca9]
  41a089:	arpl   WORD PTR [edx+0x2c],cx
  41a08c:	mov    al,ds:0xe64240f2
  41a091:	jmp    0xb51a4492
  41a096:	dec    esp
  41a097:	pop    edx
  41a098:	shl    DWORD PTR [edx-0x1341ad95],0xb8
  41a09f:	out    dx,al
  41a0a0:	add    BYTE PTR [ecx+0x7a443420],ah
  41a0a6:	sbb    esi,DWORD PTR [eax]
  41a0a8:	jno    0x41a0b8
  41a0aa:	xor    eax,0x1d64c29
  41a0af:	pop    esi
  41a0b0:	dec    ecx
  41a0b1:	mov    al,0xc8
  41a0b3:	inc    esp
  41a0b4:	(bad)  
  41a0b6:	data16 and bl,BYTE PTR [esi+0x51671edc]
  41a0bd:	stos   BYTE PTR es:[edi],al
  41a0be:	js     0x41a0ad
  41a0c0:	jnp    0x41a09b
  41a0c2:	ins    DWORD PTR es:[edi],dx
  41a0c3:	aad    0x85
  41a0c5:	test   BYTE PTR [edi-0x55],ah
  41a0c8:	jo     0x41a0a5
  41a0ca:	cmc    
  41a0cb:	jnp    0x41a0a2
  41a0cd:	stos   BYTE PTR es:[edi],al
  41a0ce:	scas   eax,DWORD PTR es:[edi]
  41a0cf:	lock dec ebp
  41a0d1:	adc    edx,DWORD PTR [eax]
  41a0d3:	xchg   BYTE PTR [esi+0x7ae121af],bh
  41a0d9:	ja     0x41a06f
  41a0db:	adc    al,0x4a
  41a0dd:	cmc    
  41a0de:	aaa    
  41a0df:	jbe    0x41a13c
  41a0e1:	xchg   esp,eax
  41a0e2:	jle    0x41a0c4
  41a0e4:	pop    edx
  41a0e5:	(bad)  
  41a0e7:	pop    edi
  41a0e8:	jge    0x41a09c
  41a0ea:	inc    edi
  41a0eb:	(bad)  
  41a0ec:	out    dx,eax
  41a0ed:	cmp    dh,cl
  41a0ef:	mov    dh,0xe6
  41a0f1:	xchg   DWORD PTR [edx+0x3b7f8fa5],eax
  41a0f7:	test   ebp,edi
  41a0f9:	(bad)  
  41a0fa:	push   esp
  41a0fb:	dec    ecx
  41a0fc:	test   BYTE PTR [edi],bh
  41a0fe:	or     ebp,DWORD PTR [eax-0xf]
  41a101:	pop    esp
  41a102:	and    eax,0x5c5a0a9e
  41a107:	pop    ebp
  41a108:	sub    ah,BYTE PTR [ebp+0x2a9f8e60]
  41a10e:	jnp    0x41a0b0
  41a110:	lods   al,BYTE PTR ds:[esi]
  41a111:	iret   
  41a112:	mov    ds:0xf6a6cd5e,eax
  41a117:	pop    edx
  41a118:	jg     0x41a139
  41a11a:	or     eax,0x8cb19865
  41a11f:	fisubr DWORD PTR [ebx+0x3da084ff]
  41a125:	imul   ecx,edx,0xc44badbb
  41a12b:	loope  0x41a17a
  41a12d:	and    DWORD PTR [ebx],ecx
  41a12f:	adc    al,BYTE PTR [ecx]
  41a131:	fcomi  st,st(0)
  41a133:	daa    
  41a134:	dec    edi
  41a135:	add    eax,0x5c7c121b
  41a13a:	sbb    al,0xf0
  41a13c:	ror    BYTE PTR [esi],cl
  41a13e:	xchg   esp,eax
  41a13f:	loopne 0x41a0c5
  41a141:	add    DWORD PTR [esi],0xffffff9b
  41a144:	int    0x94
  41a146:	add    BYTE PTR [esi],0x25
  41a149:	loope  0x41a133
  41a14b:	xor    edi,DWORD PTR [edx+0x6de392fb]
  41a151:	pop    ebx
  41a152:	mov    al,ds:0xeb289843
  41a157:	sub    edx,edi
  41a159:	js     0x41a1bd
  41a15b:	pusha  
  41a15c:	or     ch,BYTE PTR [ecx-0x5bb7563a]
  41a162:	add    ecx,DWORD PTR [ecx-0x57]
  41a165:	aas    
  41a166:	push   0x21
  41a168:	sbb    eax,0x71fe2b7f
  41a16d:	sub    al,BYTE PTR [edi-0x6b]
  41a170:	jle    0x41a16b
  41a172:	inc    esi
  41a173:	les    esp,FWORD PTR ds:0xf45b17fc
  41a179:	sbb    eax,0x9ee37b56
  41a17e:	mov    dl,BYTE PTR [eax+0x7c7c6ccb]
  41a184:	and    ah,BYTE PTR [esi]
  41a186:	sbb    cl,cl
  41a188:	daa    
  41a189:	iret   
  41a18a:	ins    BYTE PTR es:[edi],dx
  41a18b:	shl    BYTE PTR [edx-0x17],0x61
  41a18f:	imul   ecx,esp,0xffffff9f
  41a192:	cdq    
  41a193:	sbb    ah,BYTE PTR [edi]
  41a195:	popf   
  41a196:	xor    BYTE PTR [edi],dl
  41a198:	das    
  41a199:	lods   al,BYTE PTR ds:[esi]
  41a19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19b:	lock xor BYTE PTR [ecx-0x1a],0x54
  41a1a0:	fadd   st(1),st
  41a1a2:	push   ss
  41a1a3:	jno    0x41a207
  41a1a5:	cmc    
  41a1a6:	sbb    edi,DWORD PTR [edx+ebx*2-0x41c90f4d]
  41a1ad:	lods   al,BYTE PTR ds:[esi]
  41a1ae:	dec    BYTE PTR [eax-0x4d]
  41a1b1:	mov    DWORD PTR [edx+0x56],esp
  41a1b4:	lds    ebx,FWORD PTR [ecx]
  41a1b6:	xor    ah,BYTE PTR [edx]
  41a1b8:	xor    BYTE PTR [edi-0x69c2af88],bl
  41a1be:	xor    edi,DWORD PTR [ebp-0x34374bfc]
  41a1c4:	test   al,0xca
  41a1c6:	scas   al,BYTE PTR es:[edi]
  41a1c7:	mov    BYTE PTR [esi-0x3c],ch
  41a1ca:	fisubr DWORD PTR [ecx]
  41a1cc:	lds    edi,FWORD PTR [edx]
  41a1ce:	mov    ebp,0xf60d292b
  41a1d3:	jp     0x41a195
  41a1d5:	retf   
  41a1d6:	ins    DWORD PTR es:[edi],dx
  41a1d7:	arpl   WORD PTR [edx],bx
  41a1d9:	jp     0x41a15f
  41a1db:	sbb    eax,0xf7961191
  41a1e0:	pop    eax
  41a1e1:	clc    
  41a1e2:	xchg   ebp,eax
  41a1e3:	es popf 
  41a1e5:	stos   BYTE PTR es:[edi],al
  41a1e6:	aad    0x87
  41a1e8:	and    BYTE PTR [ebp+eiz*4+0x7ded3920],0xac
  41a1f0:	mov    al,ds:0xc5e6c41d
  41a1f5:	and    eax,0x3ce937ce
  41a1fa:	repnz out 0xf9,al
  41a1fd:	mov    dh,0x23
  41a1ff:	dec    esi
  41a200:	fwait
  41a201:	push   ebp
  41a202:	loop   0x41a1a8
  41a204:	dec    edi
  41a205:	push   ebx
  41a206:	push   ds
  41a207:	int    0xfd
  41a209:	and    eax,0xf36d2723
  41a20e:	jecxz  0x41a1ed
  41a210:	leave  
  41a211:	pusha  
  41a212:	stos   DWORD PTR es:[edi],eax
  41a213:	xor    eax,DWORD PTR [eax+0x34]
  41a216:	sbb    eax,0x53dd6c15
  41a21b:	push   ebx
  41a21c:	pusha  
  41a21d:	adc    eax,DWORD PTR [ebx-0x28]
  41a220:	mov    ebx,0x13de13cc
  41a225:	dec    eax
  41a226:	fs stos BYTE PTR es:[edi],al
  41a228:	mov    esi,0x5c5ef53a
  41a22d:	pop    ecx
  41a22e:	inc    esi
  41a22f:	xchg   ebx,eax
  41a230:	bound  esi,QWORD PTR [ebx]
  41a232:	mov    esi,ss
  41a234:	pusha  
  41a235:	in     eax,dx
  41a236:	pusha  
  41a237:	cmp    edi,DWORD PTR [ebp-0x7c252ba9]
  41a23d:	adc    BYTE PTR [ecx+0x3e05291a],bh
  41a243:	inc    ebp
  41a244:	cmp    DWORD PTR [ebx+0x10073d13],edx
  41a24a:	pop    ebp
  41a24b:	ins    BYTE PTR es:[edi],dx
  41a24c:	fst    DWORD PTR [edx]
  41a24e:	out    0xcc,al
  41a250:	int3   
  41a251:	xchg   ebx,eax
  41a252:	in     al,dx
  41a253:	push   ebx
  41a254:	mov    ds:0xc78c197d,al
  41a259:	mov    edx,0xa07a52ce
  41a25e:	or     ebp,esi
  41a260:	(bad)  
  41a261:	fs dec esp
  41a263:	push   0xc17a6101
  41a268:	push   ax
  41a26a:	xchg   ebx,eax
  41a26b:	bound  ebp,QWORD PTR ds:0xfe533f73
  41a271:	pop    ebp
  41a272:	mov    ds:0xbab20a88,al
  41a277:	jmp    DWORD PTR [edi+0x2c]
  41a27a:	xchg   esp,eax
  41a27b:	pop    ebp
  41a27c:	pop    es
  41a27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a27e:	call   0xfc97:0x6abf74b3
  41a285:	and    BYTE PTR [edx+0x4c],bl
  41a288:	jge    0x41a21a
  41a28a:	mov    ah,0xb7
  41a28c:	mov    ds:0xd19f4f2c,eax
  41a291:	push   es
  41a292:	dec    BYTE PTR [edi+eax*8-0x74edb947]
  41a299:	lea    ebx,ds:0x7b8cd683
  41a29f:	cld    
  41a2a0:	sbb    bh,BYTE PTR [eax-0x2e]
  41a2a3:	fist   WORD PTR [ecx]
  41a2a5:	shl    cl,0x36
  41a2a8:	inc    eax
  41a2a9:	inc    edi
  41a2aa:	mov    ch,0xaa
  41a2ac:	jle    0x41a315
  41a2ae:	hlt    
  41a2af:	in     al,dx
  41a2b0:	mov    bh,0x3f
  41a2b2:	mov    ah,0x30
  41a2b4:	setnp  BYTE PTR ds:0x8966f7c7
  41a2bb:	inc    edi
  41a2bc:	pusha  
  41a2bd:	adc    ch,BYTE PTR [eax-0x20]
  41a2c0:	test   DWORD PTR [edx+0x42],0xbdc3c23a
  41a2c7:	xor    cl,0xa5
  41a2ca:	jne    0x41a2d7
  41a2cc:	pop    edi
  41a2cd:	push   ebp
  41a2ce:	rcl    BYTE PTR [edi-0x6a],1
  41a2d1:	push   ds
  41a2d2:	ret    
  41a2d3:	call   0x994465ff
  41a2d8:	fisttp WORD PTR [ebx]
  41a2da:	out    0xec,eax
  41a2dc:	cli    
  41a2dd:	adc    al,0x77
  41a2df:	out    dx,eax
  41a2e0:	rcl    BYTE PTR [edi+0x48],cl
  41a2e3:	cmp    DWORD PTR [eax+0x67f8ffe4],ebx
  41a2e9:	adc    al,0x1e
  41a2eb:	in     eax,dx
  41a2ec:	dec    ecx
  41a2ed:	stos   DWORD PTR es:[edi],eax
  41a2ee:	xor    bl,ah
  41a2f0:	cmp    ebp,edx
  41a2f2:	ffree  st(6)
  41a2f4:	loope  0x41a29c
  41a2f6:	push   ecx
  41a2f7:	call   0x33fc89eb
  41a2fc:	call   edi
  41a2fe:	mov    bh,0xb4
  41a300:	push   ecx
  41a301:	xchg   esp,eax
  41a302:	mov    ?,WORD PTR [edx+0x5f]
  41a305:	inc    esp
  41a306:	and    esp,ecx
  41a308:	dec    ebp
  41a309:	test   BYTE PTR [ecx],0x4c
  41a30c:	es jl  0x41a308
  41a30f:	cmp    BYTE PTR [eax-0x3c],ch
  41a312:	ficom  DWORD PTR [eax]
  41a314:	sbb    esp,DWORD PTR [ecx]
  41a316:	enter  0x210d,0x5b
  41a31a:	dec    ebp
  41a31b:	mov    bh,0x7d
  41a31d:	adc    BYTE PTR [edi],0x46
  41a320:	aam    0xd7
  41a322:	popa   
  41a323:	aaa    
  41a324:	xor    dh,BYTE PTR [esi]
  41a326:	sub    bh,BYTE PTR [eax+0x32e81e20]
  41a32c:	addr16 pop esp
  41a32e:	cli    
  41a32f:	fist   WORD PTR [esi]
  41a331:	xor    al,0x76
  41a333:	mov    ds:0x6657c394,al
  41a338:	into   
  41a339:	inc    eax
  41a33a:	pop    esp
  41a33b:	inc    edi
  41a33c:	mov    eax,ds:0x14bc0af
  41a341:	repz sub al,0xed
  41a344:	xchg   ebx,eax
  41a345:	aam    0xa0
  41a347:	(bad)  
  41a348:	fiadd  DWORD PTR [edi-0x3f8ed509]
  41a34e:	les    edx,FWORD PTR [ecx-0x5c6ad6af]
  41a354:	mov    edx,0x402a7035
  41a359:	outs   dx,DWORD PTR ds:[esi]
  41a35a:	inc    eax
  41a35b:	stos   DWORD PTR es:[edi],eax
  41a35c:	scas   al,BYTE PTR es:[edi]
  41a35d:	jnp    0x41a340
  41a35f:	adc    al,0xcb
  41a361:	ins    BYTE PTR es:[edi],dx
  41a362:	pop    ss
  41a363:	and    eax,0xf902d8f8
  41a368:	int3   
  41a369:	aam    0xc2
  41a36b:	imul   ebp,DWORD PTR [esi],0xa016cf9b
  41a371:	pop    ebx
  41a372:	test   BYTE PTR [esi],dl
  41a374:	jmp    0x41a316
  41a376:	lock mov ch,0xa2
  41a379:	data16 mov dl,0xf1
  41a37c:	ret    0xd5dd
  41a37f:	(bad)  
  41a380:	sbb    DWORD PTR [ebp-0x8],edi
  41a383:	jno    0x41a38f
  41a385:	mov    WORD PTR [ecx-0x71c7e833],?
  41a38b:	pop    edi
  41a38c:	loope  0x41a3cf
  41a38e:	and    BYTE PTR [eax+0x1319fc3f],bl
  41a394:	int3   
  41a395:	fxch   st(7)
  41a397:	dec    ebp
  41a398:	mov    eax,0xdfbc4d84
  41a39d:	cmp    eax,DWORD PTR [ecx-0x1e]
  41a3a0:	xor    edi,DWORD PTR [ebp-0x1e87248d]
  41a3a6:	jo     0x41a400
  41a3a8:	scas   al,BYTE PTR es:[edi]
  41a3a9:	or     al,BYTE PTR [esi]
  41a3ab:	fld    st(5)
  41a3ad:	mov    ch,0x62
  41a3af:	jl     0x41a340
  41a3b1:	imul   edi,ecx,0x491ec9e5
  41a3b7:	ret    0xeb86
  41a3ba:	(bad)  
  41a3bb:	imul   ebp,ebp,0xffffffe2
  41a3be:	cwde   
  41a3bf:	mov    dl,0xe6
  41a3c1:	adc    al,0x48
  41a3c3:	bound  edi,QWORD PTR [ebx+0x1dda45ce]
  41a3c9:	ins    DWORD PTR es:[edi],dx
  41a3ca:	fnstsw WORD PTR [ebx+0x59]
  41a3cd:	push   ebp
  41a3ce:	(bad)  
  41a3cf:	dec    eax
  41a3d0:	jo     0x41a411
  41a3d2:	cmc    
  41a3d3:	pop    ss
  41a3d4:	dec    edx
  41a3d5:	inc    ebx
  41a3d6:	(bad)  
  41a3d7:	ins    BYTE PTR es:[edi],dx
  41a3d8:	ds in  eax,0x80
  41a3db:	xor    bh,al
  41a3dd:	cdq    
  41a3de:	add    BYTE PTR [ebp+0x55],cl
  41a3e1:	les    edx,FWORD PTR [eax]
  41a3e3:	scas   al,BYTE PTR es:[edi]
  41a3e4:	push   edx
  41a3e5:	in     eax,dx
  41a3e6:	dec    edx
  41a3e7:	and    al,0xc8
  41a3e9:	jle    0x41a38f
  41a3eb:	mov    dl,0xa3
  41a3ed:	outs   dx,BYTE PTR ds:[esi]
  41a3ee:	iret   
  41a3ef:	mov    ch,0xfe
  41a3f1:	pop    ss
  41a3f2:	int    0x46
  41a3f4:	ins    DWORD PTR es:[edi],dx
  41a3f5:	mov    cs,WORD PTR [ecx+0x18]
  41a3f8:	packssdw mm7,mm2
  41a3fb:	sar    DWORD PTR [ecx+0x1b3ccc2d],cl
  41a401:	cmp    BYTE PTR [edx+eiz*4-0x73],ah
  41a405:	aas    
  41a406:	jb     0x41a3b5
  41a408:	ds out 0xd4,eax
  41a40b:	call   0xcf55df7f
  41a410:	fimul  WORD PTR [edx+ebp*2-0x67511f08]
  41a417:	push   ecx
  41a418:	mov    edi,0xf07f0ea7
  41a41d:	(bad)  
  41a41e:	jg     0x41a459
  41a420:	cli    
  41a421:	loop   0x41a430
  41a423:	fwait
  41a424:	push   edi
  41a425:	repz cdq 
  41a427:	adc    esi,edi
  41a429:	sbb    al,0xf4
  41a42b:	xchg   esi,eax
  41a42c:	js     0x41a3fa
  41a42e:	iret   
  41a42f:	cmp    ecx,DWORD PTR [edi+0x429de3d4]
  41a435:	stos   DWORD PTR es:[edi],eax
  41a436:	mov    es,WORD PTR [ebx+ebp*1-0x3a42bb44]
  41a43d:	add    al,0xa5
  41a43f:	mov    ebx,0xb6fd555f
  41a444:	jg     0x41a464
  41a446:	adc    BYTE PTR [edx+0x6d],0x92
  41a44a:	out    dx,eax
  41a44b:	js     0x41a45d
  41a44d:	jmp    0x2083:0x2e6857cc
  41a454:	push   0x68
  41a456:	ins    BYTE PTR es:[edi],dx
  41a457:	mov    edx,0xb0a423c7
  41a45c:	jno    0x41a489
  41a45e:	fidiv  DWORD PTR [esi-0x11629aa1]
  41a464:	stos   DWORD PTR es:[edi],eax
  41a465:	aaa    
  41a466:	mov    al,ds:0x14621ec3
  41a46b:	jmp    0x64fd8c6d
  41a470:	js     0x41a4bf
  41a472:	pop    ss
  41a473:	add    ecx,DWORD PTR [esi-0x4de62ec8]
  41a479:	loope  0x41a447
  41a47b:	xor    ah,BYTE PTR [edi-0x5eba53dc]
  41a481:	push   0x5b16142d
  41a486:	sub    dh,BYTE PTR [edx+0x3b]
  41a489:	imul   edx,DWORD PTR [ecx],0x36
  41a48c:	dec    esi
  41a48d:	cli    
  41a48e:	jno    0x41a4d8
  41a490:	iret   
  41a491:	xor    DWORD PTR [ecx-0x38798e62],edi
  41a497:	sbb    BYTE PTR ds:0x8d9ab71e,dh
  41a49d:	sbb    al,0xa9
  41a49f:	and    DWORD PTR [eax-0x3755830a],ecx
  41a4a5:	xchg   esp,eax
  41a4a6:	or     edx,DWORD PTR [ecx]
  41a4a8:	and    eax,0x9f3b4763
  41a4ad:	add    dh,ah
  41a4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4b0:	cdq    
  41a4b1:	sub    BYTE PTR [ecx+0x784be3ea],cl
  41a4b7:	or     al,0x3f
  41a4b9:	in     al,dx
  41a4ba:	or     al,0x98
  41a4bc:	and    eax,0x73af6008
  41a4c1:	out    dx,al
  41a4c2:	out    dx,al
  41a4c3:	xor    dh,cl
  41a4c5:	mov    ch,0x51
  41a4c7:	mov    edx,0x6573b809
  41a4cc:	pop    esp
  41a4cd:	fdivr  QWORD PTR [esi]
  41a4cf:	pop    ecx
  41a4d0:	div    bl
  41a4d2:	fwait
  41a4d3:	in     eax,dx
  41a4d4:	sbb    eax,0xeb11bbf
  41a4d9:	jbe    0x41a4af
  41a4db:	mov    WORD PTR [ecx],ds
  41a4dd:	sub    ah,BYTE PTR ds:0xd5d20920
  41a4e3:	cmp    cl,BYTE PTR [eax-0x8f452ec]
  41a4e9:	mov    ebx,0xde7c56c9
  41a4ee:	push   cs
  41a4ef:	jmp    0x563e4372
  41a4f4:	inc    ebp
  41a4f5:	test   edx,esp
  41a4f7:	or     BYTE PTR [ecx-0x35aea55],ah
  41a4fd:	lahf   
  41a4fe:	pop    ds
  41a4ff:	icebp  
  41a500:	and    eax,DWORD PTR [ecx-0x62]
  41a503:	ficom  WORD PTR [edi]
  41a505:	cmp    bh,al
  41a507:	mov    al,ds:0x8a5b3f7b
  41a50c:	(bad)  
  41a50d:	popf   
  41a50e:	sub    ebp,edx
  41a510:	dec    edx
  41a511:	mov    edx,0x727a888e
  41a516:	out    0x84,al
  41a518:	mov    cl,0xc
  41a51a:	in     al,0x19
  41a51c:	mov    eax,ds:0x7dfd3b08
  41a521:	sbb    ah,BYTE PTR [ecx+0x2d7c7e10]
  41a527:	cmp    ecx,ecx
  41a529:	adc    BYTE PTR ds:0x983776c2,0x19
  41a530:	jno    0x41a4be
  41a532:	cld    
  41a533:	or     bl,ah
  41a535:	mov    ch,ah
  41a537:	mov    esp,0x227cde12
  41a53c:	jle    0x41a501
  41a53e:	add    BYTE PTR [ecx+0x58dfdb57],cl
  41a544:	(bad)  
  41a545:	sbb    BYTE PTR [eax+0x6a],dh
  41a548:	js     0x41a539
  41a54a:	jmp    0x41a4f6
  41a54c:	leave  
  41a54d:	xor    BYTE PTR [edi+0x2484f151],dh
  41a553:	imul   edi,DWORD PTR [eax-0x65883517],0x3b
  41a55a:	mov    cs,ebx
  41a55c:	dec    edx
  41a55d:	xchg   ecx,eax
  41a55e:	rcr    BYTE PTR [edx-0x7ecf6e45],cl
  41a564:	push   0x151edad2
  41a569:	rol    esp,cl
  41a56b:	mov    eax,0x4ff428c3
  41a570:	out    dx,al
  41a571:	pop    ds
  41a572:	inc    eax
  41a573:	mov    bh,al
  41a575:	rcl    BYTE PTR [edi+0x60d7d069],cl
  41a57b:	(bad)  
  41a57c:	push   0x6c
  41a57e:	mov    al,ds:0x2c82eed6
  41a583:	rcl    DWORD PTR [ecx],1
  41a585:	mov    ecx,0x7ed0fef1
  41a58a:	sub    ch,bl
  41a58c:	ja     0x41a52e
  41a58e:	mov    WORD PTR [ebx-0x27],gs
  41a591:	and    esi,DWORD PTR [eax]
  41a593:	(bad)  
  41a594:	pop    ss
  41a595:	sahf   
  41a596:	je     0x41a554
  41a598:	outs   dx,BYTE PTR ds:[esi]
  41a599:	or     ecx,DWORD PTR [esi-0x34]
  41a59c:	pop    ds
  41a59d:	test   eax,0xc6d5c10d
  41a5a2:	sub    BYTE PTR [ebp+0x1a],cl
  41a5a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a6:	xchg   BYTE PTR [edx],bl
  41a5a8:	inc    edi
  41a5a9:	pop    esp
  41a5aa:	adc    DWORD PTR [ebx-0x10],0xab456892
  41a5b1:	das    
  41a5b2:	lahf   
  41a5b3:	shl    DWORD PTR [ebp+0x137dacf3],cl
  41a5b9:	std    
  41a5ba:	xchg   ebx,eax
  41a5bb:	fs push esi
  41a5bd:	jmp    0xc57:0x2d9251c8
  41a5c4:	mov    bl,0xc3
  41a5c6:	fistp  QWORD PTR [esp+edx*1]
  41a5c9:	stc    
  41a5ca:	jns    0x41a63c
  41a5cc:	fidivr WORD PTR [ebx]
  41a5ce:	push   eax
  41a5cf:	pushf  
  41a5d0:	jp     0x41a638
  41a5d2:	inc    ebx
  41a5d3:	pop    edi
  41a5d4:	xor    dl,BYTE PTR [ebx+0x7d]
  41a5d7:	aas    
  41a5d8:	fistp  QWORD PTR [esi+0x6d]
  41a5db:	xchg   edx,eax
  41a5dc:	(bad)  
  41a5dd:	arpl   WORD PTR [esi+ebp*4+0x58],dx
  41a5e1:	cdq    
  41a5e2:	gs stos DWORD PTR es:[edi],eax
  41a5e4:	das    
  41a5e5:	mov    cl,0xf3
  41a5e7:	in     eax,dx
  41a5e8:	and    cl,BYTE PTR [ecx+0x6ecdab82]
  41a5ee:	add    al,0x51
  41a5f0:	pop    esp
  41a5f1:	sbb    BYTE PTR [ebx-0x573d7a4c],cl
  41a5f7:	popa   
  41a5f8:	xor    al,0x18
  41a5fa:	adc    eax,0xb29822e7
  41a5ff:	ja     0x41a5c3
  41a601:	and    eax,0x2d987718
  41a606:	or     DWORD PTR es:[ebx+0x79102c52],edi
  41a60d:	sbb    DWORD PTR [esi+0x1e],ebx
  41a610:	pusha  
  41a611:	and    edx,DWORD PTR [edi-0x77]
  41a614:	pop    ss
  41a615:	mov    esp,?
  41a617:	popf   
  41a618:	lods   al,BYTE PTR ds:[esi]
  41a619:	int3   
  41a61a:	inc    ebx
  41a61b:	icebp  
  41a61c:	push   edi
  41a61d:	adc    bh,0x5d
  41a620:	out    dx,al
  41a621:	mov    ecx,0x39fbcbbc
  41a626:	sbb    DWORD PTR [eax+eiz*2],edi
  41a629:	fldenv [edx-0x4573fa41]
  41a62f:	jne    0x41a654
  41a631:	std    
  41a632:	push   0xffffffe3
  41a634:	adc    DWORD PTR [edx-0x5f541060],esp
  41a63a:	mov    al,ds:0x426b2610
  41a63f:	dec    ebx
  41a640:	dec    edi
  41a641:	xchg   edx,eax
  41a642:	(bad)  
  41a643:	pop    ds
  41a644:	test   al,0x18
  41a646:	and    al,0x5b
  41a648:	out    0x38,al
  41a64a:	ins    DWORD PTR es:[edi],dx
  41a64b:	jmp    0x65f9:0x29d6706c
  41a652:	arpl   WORD PTR ds:0xf4aa8f7e,cx
  41a658:	xor    DWORD PTR [ebp+0x282b2fda],ebp
  41a65e:	bound  edx,QWORD PTR [ecx+0x12]
  41a661:	jmp    0x8a8e4e28
  41a666:	je     0x41a608
  41a668:	xor    edi,esi
  41a66a:	call   0x2c5f7bba
  41a66f:	dec    edx
  41a670:	dec    ecx
  41a671:	adc    al,al
  41a673:	mov    WORD PTR [ebx],?
  41a675:	add    ah,BYTE PTR [ebp+edi*2-0x467e91b2]
  41a67c:	arpl   WORD PTR [ebp+eiz*2+0x57852116],ax
  41a683:	sar    BYTE PTR [ecx],1
  41a685:	jp     0x41a643
  41a687:	bound  edi,QWORD PTR ds:0xf90dd00b
  41a68d:	lds    edx,FWORD PTR [ecx+esi*1]
  41a690:	adc    BYTE PTR [esp+ebx*1],ah
  41a693:	mov    ds:0x8d398010,eax
  41a698:	ss inc ecx
  41a69a:	cmp    DWORD PTR [ebx+edx*1],ecx
  41a69d:	and    dh,dl
  41a69f:	xchg   dl,cl
  41a6a1:	mov    al,0x95
  41a6a3:	fs lock jl 0x41a639
  41a6a7:	cmc    
  41a6a8:	out    dx,al
  41a6a9:	fist   WORD PTR [ecx+ebp*4]
  41a6ac:	sbb    eax,0xd966c4b3
  41a6b1:	mov    eax,ds:0x6b8d49d5
  41a6b6:	dec    ebp
  41a6b7:	push   ebp
  41a6b8:	mov    al,0x38
  41a6ba:	jecxz  0x41a6dd
  41a6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6bd:	adc    al,0x8e
  41a6bf:	xor    ch,bl
  41a6c1:	test   eax,0x87678604
  41a6c6:	sub    bl,ah
  41a6c8:	mov    bh,0xad
  41a6ca:	add    esi,DWORD PTR [ebp+ecx*2-0x20]
  41a6ce:	mov    dl,0x60
  41a6d0:	sub    eax,DWORD PTR ds:0x9540deee
  41a6d6:	sbb    BYTE PTR [edi],ch
  41a6d8:	hlt    
  41a6d9:	push   esp
  41a6da:	idiv   DWORD PTR [esi+0x27371c31]
  41a6e0:	mov    ds:0xb7bcd144,eax
  41a6e5:	mov    cl,0xc4
  41a6e7:	test   BYTE PTR [esi-0x6e],0x6b
  41a6eb:	mov    edx,0xc4917cd
  41a6f0:	mov    esp,0x264fd4fb
  41a6f5:	nop
  41a6f6:	in     al,0xd2
  41a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f9:	sti    
  41a6fa:	data16 jle 0x41a742
  41a6fd:	sub    al,dh
  41a6ff:	(bad)  
  41a700:	aas    
  41a701:	or     DWORD PTR [eax],0x6742a39
  41a707:	imul   edi
  41a709:	jbe    0x41a731
  41a70b:	mov    ds:0x937af83e,al
  41a710:	hlt    
  41a711:	js     0x41a757
  41a713:	cmp    al,0x2
  41a715:	popa   
  41a716:	xchg   esi,eax
  41a717:	or     eax,0x2afc6e10
  41a71c:	and    dh,BYTE PTR [ebx+ebx*8+0x7e15abc6]
  41a723:	add    ch,BYTE PTR [ebp-0x7d]
  41a726:	sti    
  41a727:	xchg   ebp,eax
  41a728:	pop    ds
  41a729:	push   ebx
  41a72a:	xchg   edi,eax
  41a72b:	stc    
  41a72c:	pop    es
  41a72d:	lods   al,BYTE PTR ds:[esi]
  41a72e:	inc    ecx
  41a72f:	popf   
  41a730:	adc    DWORD PTR [edx-0x6d],ebx
  41a733:	pop    ecx
  41a734:	jnp    0x41a7b0
  41a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a737:	push   0x1c
  41a739:	mov    al,ds:0xe0866b23
  41a73e:	mov    ebx,0xb05d8a37
  41a743:	sahf   
  41a744:	js     0x41a73a
  41a746:	ret    
  41a747:	retw   0xf9ba
  41a74b:	lahf   
  41a74c:	mov    ebp,0x542c10f
  41a751:	sbb    al,0x14
  41a753:	xchg   edx,eax
  41a754:	test   BYTE PTR [ebx],cl
  41a756:	or     bl,BYTE PTR [eax+0x71aa33aa]
  41a75c:	mov    bl,0x28
  41a75e:	mov    WORD PTR [ebx-0x5e3524c],gs
  41a764:	mov    esp,?
  41a766:	leave  
  41a767:	aaa    
  41a768:	lahf   
  41a769:	fist   DWORD PTR [esi]
  41a76b:	in     eax,dx
  41a76c:	adc    al,0x7e
  41a76e:	sar    BYTE PTR [ebp+0x5e],cl
  41a771:	add    DWORD PTR [esi],0x3f2d56e0
  41a777:	jg     0x41a790
  41a779:	dec    esp
  41a77a:	jp     0x41a7a2
  41a77c:	mov    ecx,0x176409a
  41a781:	dec    esi
  41a782:	push   cs
  41a783:	scas   al,BYTE PTR es:[edi]
  41a784:	add    DWORD PTR [ecx-0x43],ecx
  41a787:	and    al,al
  41a789:	sbb    eax,0xb4c5b2d3
  41a78e:	and    ebx,DWORD PTR [eax]
  41a790:	mov    edx,0x37e22043
  41a795:	stos   BYTE PTR es:[edi],al
  41a796:	mov    ch,0xc3
  41a798:	xor    DWORD PTR [esi-0x7],edi
  41a79b:	cli    
  41a79c:	hlt    
  41a79d:	xor    eax,DWORD PTR [esi+0x2e]
  41a7a0:	mov    DWORD PTR [ebx+0x30182245],edi
  41a7a6:	jecxz  0x41a788
  41a7a8:	lock pop edi
  41a7aa:	and    BYTE PTR [ecx+0x44427b4a],dh
  41a7b0:	mov    esi,0x82874936
  41a7b5:	dec    ebp
  41a7b6:	xor    eax,0x53817894
  41a7bb:	lock imul esp,DWORD PTR [edx-0x43698f18],0xffffffe6
  41a7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41a7c6:	mov    DWORD PTR [ebp+0x8],edx
  41a7c9:	jmp    0x41cb87
  41a7ce:	mov    edx,DWORD PTR [ebp+0x8]
  41a7d1:	mov    ebx,DWORD PTR [ebp-0x8]
  41a7d4:	xor    edx,eax
  41a7d6:	xor    ebx,eax
  41a7d8:	sub    edx,ebx
  41a7da:	sub    edx,esi
  41a7dc:	xor    edx,eax
  41a7de:	mov    DWORD PTR [ebp+0x8],edx
  41a7e1:	mov    edx,DWORD PTR [ebp+0x8]
  41a7e4:	mov    ebx,DWORD PTR [ebp-0x58]
  41a7e7:	add    edx,0x5708c4
  41a7ed:	imul   edx,ebx
  41a7f0:	mov    DWORD PTR [ebp-0x58],edx
  41a7f3:	mov    edx,DWORD PTR [ebp+0x8]
  41a7f6:	mov    ebx,DWORD PTR [ebp-0x54]
  41a7f9:	add    edx,0x64f8da
  41a7ff:	or     edx,ebx
  41a801:	mov    DWORD PTR [ebp-0x54],edx
  41a804:	mov    edx,DWORD PTR [ebp+0x8]
  41a807:	mov    ebx,DWORD PTR [ebp-0x50]
  41a80a:	add    edx,ecx
  41a80c:	xor    edx,ebx
  41a80e:	mov    DWORD PTR [ebp-0x50],edx
  41a811:	mov    edx,DWORD PTR [ebp+0x8]
  41a814:	mov    ebx,DWORD PTR [ebp-0x4c]
  41a817:	add    edx,edi
  41a819:	jmp    0x41cb62
  41a81e:	retf   
  41a81f:	lock xacquire sub DWORD PTR [ebx+0x2b],esi
  41a824:	mov    bl,0x72
  41a826:	cmp    bl,BYTE PTR [ebp+ebx*2-0x70197d2]
  41a82d:	addr16 nop
  41a82f:	adc    edi,DWORD PTR [ebp+0x7c]
  41a832:	inc    eax
  41a833:	pop    edi
  41a834:	jl     0x41a8b2
  41a836:	cmp    BYTE PTR [ecx-0x297ba8c1],dh
  41a83c:	loop   0x41a881
  41a83e:	and    al,0xa0
  41a840:	xchg   esi,eax
  41a841:	cli    
  41a842:	adc    BYTE PTR [ebx-0x5a],dh
  41a845:	xchg   esp,eax
  41a846:	arpl   WORD PTR [ecx],dx
  41a848:	hlt    
  41a849:	ficomp WORD PTR [edx-0x7bac436c]
  41a84f:	or     bh,dh
  41a851:	jns    0x41a829
  41a853:	inc    edi
  41a854:	int    0xc9
  41a856:	lock shl DWORD PTR [edi],cl
  41a859:	ins    BYTE PTR es:[edi],dx
  41a85a:	cmp    DWORD PTR [ecx],ebx
  41a85c:	not    DWORD PTR [ecx-0xf]
  41a85f:	push   es
  41a860:	retf   0xf483
  41a863:	pop    edx
  41a864:	ret    
  41a865:	lods   al,BYTE PTR ds:[esi]
  41a866:	pop    edx
  41a867:	adc    ebp,DWORD PTR [ebp-0x46]
  41a86a:	add    DWORD PTR [edi+ecx*2],edi
  41a86d:	jecxz  0x41a8e1
  41a86f:	mov    ebp,0xb0f0de93
  41a874:	sub    bh,BYTE PTR [ebp+0x25]
  41a877:	ds dec ebx
  41a879:	adc    eax,0xe10bdcc4
  41a87e:	and    al,0x6a
  41a880:	and    bh,BYTE PTR [edx]
  41a882:	pop    esp
  41a883:	call   0x5d621c3e
  41a888:	dec    esi
  41a889:	mov    BYTE PTR [edx+0x285bbde6],ch
  41a88f:	(bad)  
  41a890:	dec    esi
  41a891:	aam    0x7c
  41a893:	fnstsw WORD PTR [ebp-0x61]
  41a896:	pop    es
  41a897:	mov    ds:0x38f95943,al
  41a89c:	mov    eax,DWORD PTR [edx]
  41a89e:	xor    edi,DWORD PTR [edi+0x48d2e8b5]
  41a8a4:	mov    DWORD PTR [eax],ecx
  41a8a6:	stos   DWORD PTR es:[edi],eax
  41a8a7:	mov    esi,ds
  41a8a9:	pop    ebp
  41a8aa:	mov    eax,0x37dd6410
  41a8af:	fild   DWORD PTR [ebx+ebx*4+0x2f88f42c]
  41a8b6:	push   ss
  41a8b7:	jmp    0x1aef438d
  41a8bc:	mov    ecx,gs
  41a8be:	pop    edx
  41a8bf:	outs   dx,DWORD PTR ds:[esi]
  41a8c0:	enter  0xcf7e,0x35
  41a8c4:	pushf  
  41a8c5:	dec    eax
  41a8c6:	cmp    eax,0xef8c2b72
  41a8cb:	mov    edx,ecx
  41a8cd:	xor    edi,DWORD PTR [eax]
  41a8cf:	xchg   DWORD PTR [edi+0x316a5a3c],esp
  41a8d5:	adc    eax,0xf340078b
  41a8da:	pop    DWORD PTR [edi+0x41]
  41a8dd:	add    BYTE PTR [ebp+0x1f218eff],bl
  41a8e3:	outs   dx,BYTE PTR ds:[esi]
  41a8e4:	lock out 0x57,eax
  41a8e7:	in     al,0x3a
  41a8e9:	xor    cl,BYTE PTR [ebx+edi*8]
  41a8ec:	cmc    
  41a8ed:	mov    DWORD PTR [edi+0x51c2109e],edi
  41a8f3:	aad    0xef
  41a8f5:	sbb    DWORD PTR [edi-0x40299f02],edi
  41a8fb:	cmp    ch,0x21
  41a8fe:	fmul   DWORD PTR [esi]
  41a900:	pop    ebx
  41a901:	dec    esp
  41a902:	es aam 0xe9
  41a905:	out    0x10,al
  41a907:	mov    edi,0x800b3fec
  41a90c:	pop    ss
  41a90d:	arpl   WORD PTR [esi],sp
  41a90f:	push   ebx
  41a910:	test   esp,0x292ad659
  41a916:	div    esi
  41a918:	das    
  41a919:	jmp    0xe61f861c
  41a91e:	imul   edi,DWORD PTR [esi+0x307f3e90],0x8
  41a925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a926:	out    0x3d,al
  41a928:	pop    DWORD PTR [eax]
  41a92a:	mov    al,ds:0x33be35c5
  41a92f:	rcr    DWORD PTR [edx-0x7ee5e8c],0x80
  41a936:	ins    DWORD PTR es:[edi],dx
  41a937:	repz adc al,BYTE PTR [ebx]
  41a93a:	mov    dh,0xa1
  41a93c:	gs pop ds
  41a93e:	or     ah,BYTE PTR [edi-0x75]
  41a941:	in     al,0x8c
  41a943:	int    0x36
  41a945:	and    DWORD PTR [ecx],esp
  41a947:	aam    0xbc
  41a949:	lods   al,BYTE PTR ds:[esi]
  41a94a:	inc    esp
  41a94b:	jnp    0x41a9ac
  41a94d:	shr    DWORD PTR [ebx],cl
  41a94f:	out    0xed,al
  41a951:	fist   WORD PTR [eax+0x9]
  41a954:	shl    DWORD PTR [edi+0x7778998c],1
  41a95a:	rcr    DWORD PTR [eax],cl
  41a95c:	call   0x9c299425
  41a961:	pop    edx
  41a962:	icebp  
  41a963:	cmp    al,0x9
  41a966:	push   ecx
  41a967:	stc    
  41a968:	inc    ecx
  41a969:	loop   0x41a9c7
  41a96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96c:	sbb    ebp,ebx
  41a96e:	push   ebx
  41a96f:	aas    
  41a970:	imul   ebx,esi,0x440d77df
  41a976:	(bad)  
  41a978:	or     dh,bh
  41a97a:	cmp    bl,bh
  41a97c:	dec    esi
  41a97d:	fcmovu st,st(0)
  41a97f:	mov    eax,esi
  41a981:	leave  
  41a982:	xor    eax,0xe8d8d39b
  41a987:	jns    0x41a953
  41a989:	adc    DWORD PTR [edx+0x30],ebx
  41a98c:	jnp    0x41a915
  41a98e:	push   esi
  41a98f:	pop    ecx
  41a990:	in     eax,dx
  41a991:	into   
  41a992:	pop    ebp
  41a993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a994:	aad    0x47
  41a996:	lods   eax,DWORD PTR ds:[esi]
  41a997:	loop   0x41a923
  41a999:	and    DWORD PTR [esi+0x280f6d01],0xffffffc6
  41a9a0:	sub    ch,al
  41a9a2:	sbb    bl,0xa0
  41a9a5:	cmp    BYTE PTR [ebx+0x3fa48759],bh
  41a9ab:	sar    DWORD PTR [edi],1
  41a9ad:	mov    dh,BYTE PTR [eax+0x2f]
  41a9b0:	or     BYTE PTR [eax],0xa
  41a9b3:	loopne 0x41aa05
  41a9b5:	mov    esp,0xb6432a85
  41a9ba:	clc    
  41a9bb:	push   ebp
  41a9bc:	cmp    al,0x1b
  41a9be:	mov    edi,eax
  41a9c0:	and    dl,cl
  41a9c2:	xlat   BYTE PTR ds:[ebx]
  41a9c3:	loopne 0x41a96d
  41a9c5:	push   edx
  41a9c6:	dec    edx
  41a9c7:	adc    al,0xbb
  41a9c9:	rcr    BYTE PTR [ebp+eax*2-0x6e],0x17
  41a9ce:	stos   DWORD PTR es:[edi],eax
  41a9cf:	repnz fsubp st(6),st
  41a9d2:	leave  
  41a9d3:	dec    esp
  41a9d4:	mov    cs,WORD PTR [edi+0x625c9e98]
  41a9da:	loopne 0x41a997
  41a9dc:	cld    
  41a9dd:	adc    ecx,0x82493a2e
  41a9e3:	xor    BYTE PTR [eax+0x29],ch
  41a9e6:	sbb    DWORD PTR [ecx-0x5f],0xbd416c87
  41a9ed:	push   edx
  41a9ee:	add    BYTE PTR [edx+0x38],ch
  41a9f1:	xor    DWORD PTR [ecx],0x999ee2f5
  41a9f7:	pushf  
  41a9f8:	and    al,bh
  41a9fa:	xor    esp,ecx
  41a9fc:	add    al,0x5e
  41a9fe:	jle    0x41a98f
  41aa00:	in     eax,dx
  41aa01:	add    eax,DWORD PTR [edx+0x2f]
  41aa04:	ss js  0x41a98f
  41aa07:	xor    eax,0xeee86732
  41aa0c:	dec    eax
  41aa0d:	aam    0x38
  41aa0f:	xchg   esp,eax
  41aa10:	in     eax,0xc2
  41aa12:	cmp    BYTE PTR [esi+0x2f],ah
  41aa15:	je     0x41a9e0
  41aa17:	inc    eax
  41aa18:	popa   
  41aa19:	ins    BYTE PTR es:[edi],dx
  41aa1a:	push   cs
  41aa1b:	inc    ebp
  41aa1c:	fist   DWORD PTR [esi+0x36b9b776]
  41aa22:	mov    eax,0xbc5ee3c2
  41aa27:	and    BYTE PTR [ebp+0x11],dl
  41aa2a:	ror    DWORD PTR [edi],0xb0
  41aa2d:	xchg   ebp,eax
  41aa2e:	ja     0x41a9b0
  41aa30:	nop
  41aa31:	cld    
  41aa32:	xchg   BYTE PTR [ecx],dh
  41aa34:	(bad)  
  41aa35:	pop    ecx
  41aa36:	cmc    
  41aa37:	jmp    0x1b696f8a
  41aa3c:	jge    0x41a9c1
  41aa3e:	(bad)  
  41aa3f:	cmc    
  41aa40:	inc    eax
  41aa41:	adc    BYTE PTR [ebx+0x1a88261e],0xe0
  41aa48:	pop    edx
  41aa49:	xchg   ecx,eax
  41aa4a:	arpl   WORD PTR [edi+esi*2+0x20],ax
  41aa4e:	push   esi
  41aa4f:	loope  0x41aa80
  41aa51:	jno    0x41aa0f
  41aa53:	fdiv   DWORD PTR [ebx+ecx*4]
  41aa56:	jle    0x41a9e6
  41aa58:	sbb    ch,dl
  41aa5a:	push   esi
  41aa5b:	inc    edi
  41aa5c:	or     dl,bl
  41aa5e:	popf   
  41aa5f:	dec    esp
  41aa60:	add    al,BYTE PTR [edx+0x2e8d427b]
  41aa66:	clc    
  41aa67:	fnstsw WORD PTR [edi+0x2d6ff160]
  41aa6d:	dec    edx
  41aa6e:	(bad)  [edx+ebp*4]
  41aa71:	jecxz  0x41aa49
  41aa73:	jb     0x41aa57
  41aa75:	xchg   edx,eax
  41aa76:	mov    esp,DWORD PTR [ebx+eax*2]
  41aa79:	add    al,0xa
  41aa7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa7c:	cld    
  41aa7d:	xlat   BYTE PTR ds:[ebx]
  41aa7e:	xchg   edx,eax
  41aa7f:	outs   dx,BYTE PTR ds:[esi]
  41aa80:	stos   DWORD PTR es:[edi],eax
  41aa81:	adc    dl,0xab
  41aa84:	xor    BYTE PTR [ecx+ebx*8-0x52576982],ah
  41aa8b:	pop    eax
  41aa8c:	adc    eax,0xfd86be5b
  41aa91:	mov    dh,0x4d
  41aa93:	mov    ebx,DWORD PTR [edi-0x25]
  41aa96:	dec    esp
  41aa97:	mov    edi,0xd61d351
  41aa9c:	pushf  
  41aa9d:	add    esi,DWORD PTR [ecx-0x582c5a38]
  41aaa3:	(bad)  
  41aaa5:	imul   ebp,DWORD PTR ds:0x1e208c3b,0xb30d733
  41aaaf:	add    al,0xbd
  41aab1:	pop    esp
  41aab2:	xor    al,0x58
  41aab4:	imul   edx,DWORD PTR [ebp+edx*2+0x416c41e4],0x9cbf85bf
  41aabf:	push   ebx
  41aac1:	inc    BYTE PTR [esi-0x7c]
  41aac4:	jecxz  0x41aa53
  41aac6:	imul   ebx,DWORD PTR [ecx-0x6f],0x36
  41aaca:	push   ecx
  41aacb:	jb     0x41ab19
  41aacd:	lods   eax,DWORD PTR ds:[esi]
  41aace:	xor    ch,0x82
  41aad1:	push   edi
  41aad2:	and    al,0x82
  41aad4:	and    esp,edi
  41aad6:	push   ss
  41aad7:	pop    es
  41aad8:	sub    DWORD PTR [ecx],ebp
  41aada:	xchg   ebx,eax
  41aadb:	data16 xor bl,BYTE PTR [esi]
  41aade:	xor    ax,0xd267
  41aae2:	dec    eax
  41aae3:	sbb    edx,esi
  41aae5:	dec    ecx
  41aae6:	clc    
  41aae7:	xchg   BYTE PTR [edi],bl
  41aae9:	xor    al,0xa3
  41aaeb:	xor    al,0xec
  41aaed:	dec    edi
  41aaee:	ss jb  0x41ab0f
  41aaf1:	int3   
  41aaf2:	aad    0xb2
  41aaf4:	lahf   
  41aaf5:	sub    BYTE PTR [ecx-0x1a],dl
  41aaf8:	dec    edi
  41aaf9:	(bad)  
  41aafa:	(bad)  
  41aafb:	ja     0x41ab1f
  41aafd:	jnp    0x41ab7a
  41aaff:	nop
  41ab00:	mov    ebp,0x12f1c364
  41ab05:	add    edx,ecx
  41ab07:	inc    ebp
  41ab08:	sub    cl,dl
  41ab0a:	sub    esp,DWORD PTR [bp-0x6b]
  41ab0e:	sbb    bh,dh
  41ab10:	mov    bh,0xbc
  41ab13:	mov    eax,ds:0xf559b582
  41ab18:	jle    0x41aab0
  41ab1a:	sbb    DWORD PTR [eax-0x26],edi
  41ab1d:	clc    
  41ab1e:	mov    dl,0x5c
  41ab20:	aas    
  41ab21:	jne    0x41ab52
  41ab23:	xchg   edx,eax
  41ab24:	ins    BYTE PTR es:[edi],dx
  41ab25:	inc    ebx
  41ab26:	mov    bl,0xc7
  41ab28:	(bad)  
  41ab29:	test   al,0xc6
  41ab2b:	stos   BYTE PTR es:[edi],al
  41ab2c:	out    dx,eax
  41ab2d:	adc    esp,DWORD PTR [ebx]
  41ab2f:	sbb    al,0x77
  41ab31:	xchg   esi,eax
  41ab32:	inc    ecx
  41ab33:	mov    ah,0x2d
  41ab35:	jg     0x41aaee
  41ab37:	sbb    ch,BYTE PTR [ebx+0x3bb4b3d0]
  41ab3d:	jno    0x41ab2c
  41ab3f:	outs   dx,BYTE PTR ds:[esi]
  41ab40:	cld    
  41ab41:	(bad)  
  41ab42:	xor    al,0xae
  41ab44:	fbstp  TBYTE PTR fs:[ecx+edi*8+0x7b]
  41ab49:	jl     0x41aae2
  41ab4b:	shl    ebx,1
  41ab4d:	cmp    DWORD PTR [esi-0x29],ebp
  41ab50:	jo     0x41ab5d
  41ab52:	xchg   ebx,eax
  41ab53:	(bad)
  41ab56:	and    DWORD PTR [eax+0xb],ebp
  41ab59:	push   esi
  41ab5a:	int3   
  41ab5b:	nop
  41ab5c:	shr    DWORD PTR [eax],cl
  41ab5e:	hlt    
  41ab5f:	inc    eax
  41ab60:	mov    ds:0x64dbcff7,al
  41ab65:	cmp    ch,dl
  41ab67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab68:	jp     0x41ab89
  41ab6a:	enter  0x9d10,0xf5
  41ab6e:	shl    ecx,cl
  41ab70:	cmp    esp,DWORD PTR [ecx-0x6e]
  41ab73:	mov    ch,0x3b
  41ab75:	inc    esi
  41ab76:	push   es
  41ab77:	repz mov eax,0x9e0946aa
  41ab7d:	cmp    al,0x3d
  41ab7f:	clc    
  41ab80:	test   BYTE PTR [eax-0x35e99650],bh
  41ab86:	popa   
  41ab87:	inc    esi
  41ab88:	adc    eax,0x11113ddc
  41ab8e:	push   ecx
  41ab8f:	mov    eax,ds:0x8ae22f82
  41ab94:	and    BYTE PTR [eax-0x3500c0f8],0x41
  41ab9b:	sub    al,0x63
  41ab9d:	mov    edi,0x5f83c939
  41aba2:	iret   
  41aba3:	add    BYTE PTR [edi-0x603e8ff8],al
  41aba9:	sbb    ch,BYTE PTR ds:0xcbdb46f2
  41abaf:	adc    eax,0x40346d1b
  41abb4:	ret    0x5955
  41abb7:	mov    ah,0x58
  41abb9:	push   0x56
  41abbb:	cmp    BYTE PTR [eax+edi*4],dl
  41abbe:	mov    eax,ds:0x67be504a
  41abc3:	(bad)  
  41abc4:	aad    0x9d
  41abc6:	mov    esi,0x9fb84f6c
  41abcb:	cwde   
  41abcc:	repz popa 
  41abce:	inc    eax
  41abcf:	cmp    edx,esp
  41abd1:	jne    0x41ac04
  41abd3:	pop    es
  41abd4:	add    BYTE PTR [edx-0x4312a45a],cl
  41abda:	jge    0x41ab62
  41abdc:	or     ah,BYTE PTR [esi+0x3e56f7f3]
  41abe2:	dec    ebx
  41abe3:	cmp    bh,BYTE PTR [edi]
  41abe5:	push   cs
  41abe6:	outs   dx,BYTE PTR ds:[esi]
  41abe7:	leave  
  41abe8:	inc    eax
  41abe9:	ret    
  41abea:	cmp    eax,0x4a7933e0
  41abef:	jne    0x41ac1b
  41abf1:	retf   
  41abf2:	mov    eax,DWORD PTR [ecx+0x9ff32d5]
  41abf8:	mov    dh,0x54
  41abfa:	mov    esp,0x609135fd
  41abff:	loop   0x41ac3c
  41ac01:	repz std 
  41ac03:	jmp    0x6c72b77a
  41ac08:	adc    ah,cl
  41ac0a:	mov    ebp,0x72d4296f
  41ac0f:	ins    DWORD PTR es:[edi],dx
  41ac10:	adc    dh,BYTE PTR [ebx+0x1f]
  41ac13:	outs   dx,DWORD PTR ds:[esi]
  41ac14:	aas    
  41ac15:	add    eax,0x64c64e57
  41ac1a:	gs jne 0x41abb8
  41ac1d:	popa   
  41ac1e:	ja     0x41ac2c
  41ac20:	dec    ebx
  41ac21:	jge    0x41ac90
  41ac23:	inc    eax
  41ac24:	(bad)  [eax-0x6a]
  41ac27:	jp     0x41ac16
  41ac29:	cs jbe 0x41abdb
  41ac2c:	xchg   ecx,eax
  41ac2d:	and    al,0x53
  41ac2f:	je     0x41ac82
  41ac31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac32:	sub    eax,eax
  41ac34:	cld    
  41ac35:	cli    
  41ac36:	mov    BYTE PTR [ebx+0xa],dl
  41ac39:	inc    esp
  41ac3a:	frstor [ecx+edi*4+0x5b871806]
  41ac41:	(bad)  
  41ac42:	test   eax,0x896efc0f
  41ac47:	sahf   
  41ac48:	call   0xf9959d1c
  41ac4d:	std    
  41ac4e:	sbb    DWORD PTR [ebx-0x6b],ecx
  41ac51:	push   eax
  41ac52:	shr    edx,0xa4
  41ac55:	les    sp,DWORD PTR [edi+0x3084d365]
  41ac5c:	lock loop 0x41ac3a
  41ac5f:	out    dx,eax
  41ac60:	xchg   esp,eax
  41ac61:	and    cl,dl
  41ac63:	or     eax,0x6eed2287
  41ac68:	xchg   edx,eax
  41ac69:	or     al,0xa3
  41ac6b:	sahf   
  41ac6c:	icebp  
  41ac6d:	loop   0x41ac54
  41ac6f:	neg    eax
  41ac71:	jb     0x41ac0d
  41ac73:	cmp    dl,BYTE PTR [ebx-0x2b1dd892]
  41ac79:	outs   dx,BYTE PTR ds:[esi]
  41ac7a:	add    ch,BYTE PTR [ecx]
  41ac7c:	pop    esp
  41ac7d:	shl    BYTE PTR [edi+edx*2-0x67],cl
  41ac81:	and    eax,0x32a20894
  41ac86:	inc    ecx
  41ac87:	es sbb al,0x89
  41ac8a:	fnsave [eax-0x56]
  41ac8d:	shr    BYTE PTR [edi-0x4832e22e],cl
  41ac93:	mov    edi,0x4211ea68
  41ac98:	js     0x41ac7a
  41ac9a:	jl     0x41ac77
  41ac9c:	sbb    DWORD PTR [edx],ebp
  41ac9e:	sub    al,0x40
  41aca0:	sub    BYTE PTR [eax+0x701b4b6d],ah
  41aca6:	pop    esp
  41aca7:	mov    ?,WORD PTR [ecx]
  41aca9:	loope  0x41ac9d
  41acab:	leave  
  41acac:	and    edi,DWORD PTR ds:0xd7eab98c
  41acb2:	and    esp,0xffffffaa
  41acb5:	push   esp
  41acb6:	push   ecx
  41acb7:	sbb    BYTE PTR [eax+0x55],cl
  41acba:	push   0xa5ff9bb1
  41acbf:	(bad)  
  41acc0:	and    BYTE PTR [ecx+0x3bab769b],ah
  41acc6:	stc    
  41acc7:	cdq    
  41acc8:	dec    esi
  41acc9:	aaa    
  41acca:	imul   eax,esp,0x40525f88
  41acd0:	mov    esi,0x528eb5e3
  41acd5:	jmp    0x41acf7
  41acd7:	jo     0x41ad20
  41acd9:	adc    esp,edi
  41acdb:	push   ds
  41acdc:	lods   eax,DWORD PTR ds:[esi]
  41acdd:	sbb    DWORD PTR [esi],ecx
  41acdf:	sub    al,0x4c
  41ace1:	loopne 0x41ac64
  41ace3:	mov    cl,0x6b
  41ace5:	jno    0x41ad15
  41ace7:	cs or  al,0xc8
  41acea:	aas    
  41aceb:	mov    WORD PTR [eax+0x55890702],cs
  41acf1:	pop    ds
  41acf2:	scas   al,BYTE PTR es:[edi]
  41acf3:	fst    QWORD PTR [edi+ebx*1]
  41acf6:	shl    BYTE PTR [edi+0x1f],0x1f
  41acfa:	mov    esi,0x97e3dbf5
  41acff:	jne    0x41acfe
  41ad01:	ins    DWORD PTR es:[edi],dx
  41ad02:	mov    ds:0xbd8b9ec6,al
  41ad07:	(bad)  
  41ad08:	sub    eax,0x400569c7
  41ad0d:	add    al,0x5c
  41ad0f:	jae    0x41ad26
  41ad11:	fidiv  WORD PTR [esi+0x5a]
  41ad14:	je     0x41acc4
  41ad16:	inc    ebx
  41ad17:	ror    BYTE PTR [edx-0x28],0xd9
  41ad1b:	stos   BYTE PTR es:[edi],al
  41ad1c:	retf   
  41ad1d:	pop    edi
  41ad1e:	stos   DWORD PTR es:[edi],eax
  41ad1f:	in     eax,0x73
  41ad21:	iret   
  41ad22:	data16 mov dh,0xfc
  41ad25:	xor    al,dl
  41ad27:	adc    BYTE PTR [eax],al
  41ad29:	cld    
  41ad2a:	int3   
  41ad2b:	test   DWORD PTR [eax+ebp*4-0x26b05d32],0xb29a9ef9
  41ad36:	sbb    DWORD PTR [esi],0x66
  41ad39:	jmp    0x41ad1e
  41ad3b:	gs jle 0x41acd2
  41ad3e:	loop   0x41acf6
  41ad40:	in     eax,dx
  41ad41:	aad    0x35
  41ad43:	sbb    DWORD PTR [edx],0xffffffec
  41ad46:	xor    ebp,DWORD PTR [ecx]
  41ad48:	into   
  41ad49:	shl    BYTE PTR [ecx+eax*2+0x3],0xcb
  41ad4e:	inc    esi
  41ad4f:	xor    esp,0x35ea0c52
  41ad55:	sbb    cl,ch
  41ad57:	fwait
  41ad58:	dec    eax
  41ad59:	loopne 0x41ad73
  41ad5b:	aad    0x89
  41ad5d:	sub    al,0x59
  41ad5f:	dec    ebp
  41ad60:	cmp    BYTE PTR [ecx+0x1a],cl
  41ad63:	inc    ebp
  41ad64:	lahf   
  41ad65:	mov    esp,0x89f8bd76
  41ad6a:	cmp    eax,0x64348824
  41ad6f:	ret    0xe2fc
  41ad72:	cs add ah,BYTE PTR fs:[ecx+eiz*8-0x22676008]
  41ad7b:	adc    ebp,edi
  41ad7d:	test   BYTE PTR [edi-0x22db2e99],ch
  41ad83:	and    DWORD PTR [ebx+edi*8],edi
  41ad86:	push   es
  41ad87:	sti    
  41ad88:	repnz dec eax
  41ad8a:	mov    bl,0x64
  41ad8c:	and    DWORD PTR [ebx-0x1ddf198a],edx
  41ad92:	jo     0x41ad9c
  41ad94:	xchg   DWORD PTR [ebp-0x50],ebx
  41ad97:	xchg   ebx,eax
  41ad98:	call   0x3683:0xa03aedf2
  41ad9f:	mov    ah,0x2d
  41ada1:	cmp    al,0x2c
  41ada3:	xlat   BYTE PTR ds:[ebx]
  41ada4:	adc    DWORD PTR [edx+0x6c102116],edx
  41adaa:	inc    esp
  41adab:	hlt    
  41adac:	inc    ebp
  41adad:	icebp  
  41adae:	outs   dx,BYTE PTR ds:[esi]
  41adaf:	push   eax
  41adb0:	adc    al,0xbf
  41adb2:	xchg   BYTE PTR [ecx-0x47664d9c],ch
  41adb8:	lods   eax,DWORD PTR ds:[esi]
  41adb9:	push   esi
  41adba:	adc    DWORD PTR [esi],ebx
  41adbc:	outs   dx,DWORD PTR ds:[esi]
  41adbd:	mov    eax,ds:0x270c4b50
  41adc2:	loop   0x41ae35
  41adc4:	sar    DWORD PTR [ebx+0x38d5671a],0xb9
  41adcb:	add    edx,DWORD PTR [ebx+0x6301ee13]
  41add1:	cdq    
  41add2:	mov    ds:0x9c14ea29,al
  41add7:	mov    al,ds:0xc1b4c57a
  41addc:	repnz (bad) 
  41adde:	cld    
  41addf:	int3   
  41ade0:	(bad)  
  41ade2:	lea    ecx,[ebp+0x428cfa59]
  41ade8:	fs push cs
  41adea:	mov    ah,0x1a
  41adec:	fs call 0xc1419f4
  41adf2:	loope  0x41adf6
  41adf4:	and    al,0x99
  41adf6:	adc    al,0x3b
  41adf9:	mov    BYTE PTR [esp+edi*2],dh
  41adfc:	int3   
  41adfd:	xchg   ah,bh
  41adff:	inc    ebp
  41ae00:	dec    eax
  41ae01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae02:	add    eax,0x8ccb209f
  41ae07:	pushf  
  41ae08:	lahf   
  41ae09:	push   ebp
  41ae0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae0b:	jmp    0xe383:0xa2f4f72d
  41ae12:	mov    edi,0x9b5e157c
  41ae17:	cmp    BYTE PTR [edx-0x4c],0xfe
  41ae1b:	sub    eax,0x24ae0683
  41ae20:	fwait
  41ae21:	add    DWORD PTR [ecx+0x2a],esp
  41ae24:	mov    ecx,0xedf7a7c8
  41ae29:	cdq    
  41ae2a:	nop
  41ae2b:	dec    eax
  41ae2d:	rcr    BYTE PTR [esi+0x3badbbf7],1
  41ae33:	popa   
  41ae34:	aaa    
  41ae35:	push   edi
  41ae36:	ins    DWORD PTR es:[edi],dx
  41ae37:	ins    BYTE PTR es:[edi],dx
  41ae38:	imul   edx,DWORD PTR [edx-0x48],0x34
  41ae3c:	je     0x41ae8c
  41ae3e:	fidiv  WORD PTR [ebp-0x16]
  41ae41:	push   esi
  41ae42:	fld    QWORD PTR [ebx]
  41ae44:	jne    0x41adea
  41ae46:	pop    ecx
  41ae47:	dec    ebp
  41ae48:	adc    cl,BYTE PTR [ecx-0x2e]
  41ae4b:	fdivr  QWORD PTR [esi]
  41ae4d:	adc    DWORD PTR [esi+0x27],ecx
  41ae50:	or     DWORD PTR [ebp-0xdd4fed4],ecx
  41ae56:	xchg   edi,eax
  41ae57:	xchg   ecx,eax
  41ae58:	mov    eax,ds:0xd62d3197
  41ae5d:	lahf   
  41ae5e:	sbb    BYTE PTR [edx+0x21],al
  41ae61:	cli    
  41ae62:	adc    BYTE PTR [ecx+0x50173140],bh
  41ae68:	dec    eax
  41ae6a:	xchg   edx,eax
  41ae6b:	xor    al,0x1d
  41ae6d:	in     eax,dx
  41ae6e:	jg     0x41ae18
  41ae70:	push   esi
  41ae71:	jnp    0x41ae4b
  41ae73:	or     DWORD PTR [eax+ecx*4+0x771f5fb0],edi
  41ae7a:	mov    BYTE PTR [ecx-0x4755a64],0x7
  41ae81:	lods   al,BYTE PTR ds:[esi]
  41ae82:	jle    0x41ae26
  41ae84:	inc    esi
  41ae85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae86:	cdq    
  41ae87:	loopne 0x41ae9e
  41ae89:	fdiv   QWORD PTR [eax-0x62]
  41ae8c:	mov    eax,0x121e2e66
  41ae91:	mov    al,ds:0xccb8a45f
  41ae96:	(bad)
  41ae99:	and    al,0xba
  41ae9b:	pop    es
  41ae9c:	mov    DWORD PTR [edi-0x2b],ecx
  41ae9f:	fcomp  QWORD PTR [edx+0x4f06a23c]
  41aea5:	add    esi,DWORD PTR [ebp+0x103fdbca]
  41aeab:	jne    0x41aeff
  41aead:	fwait
  41aeae:	popa   
  41aeaf:	push   0x586118ea
  41aeb4:	dec    esp
  41aeb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb7:	mov    cl,0x51
  41aeb9:	fistp  QWORD PTR [ebx+0xf]
  41aebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aebd:	mov    ebx,0x9e1521d2
  41aec2:	dec    edx
  41aec3:	ret    
  41aec4:	test   ah,ch
  41aec6:	retf   0x5732
  41aec9:	sub    al,BYTE PTR [ebx+eax*2-0x56f15472]
  41aed0:	inc    ecx
  41aed1:	je     0x41ae6f
  41aed3:	fwait
  41aed4:	push   edx
  41aed5:	adc    edx,esp
  41aed7:	and    eax,0xa87c671a
  41aedc:	lahf   
  41aedd:	or     BYTE PTR [edi-0x5db05675],dh
  41aee3:	icebp  
  41aee4:	xchg   esi,eax
  41aee5:	enter  0x3dc5,0x8
  41aee9:	inc    edi
  41aeea:	mul    BYTE PTR [ebx-0x10]
  41aeed:	loop   0x41ae96
  41aeef:	jmp    0xef50:0xa9a6d690
  41aef6:	mov    esp,0x15a5b5e5
  41aefb:	add    al,BYTE PTR ds:0x8705d99
  41af01:	outs   dx,BYTE PTR ds:[esi]
  41af02:	add    eax,0xef97776c
  41af07:	sahf   
  41af08:	mov    eax,ds:0xa2792e6
  41af0d:	iret   
  41af0e:	xchg   edi,eax
  41af0f:	xchg   BYTE PTR [ecx],bl
  41af11:	ffreep st(2)
  41af13:	sub    BYTE PTR [eax],dl
  41af15:	sbb    edx,DWORD PTR [ebx-0x301badfc]
  41af1b:	or     edx,DWORD PTR [edi+0x26b6db46]
  41af21:	rep outs dx,DWORD PTR ds:[esi]
  41af23:	retf   0xe283
  41af26:	cwde   
  41af27:	dec    ecx
  41af28:	iret   
  41af29:	mov    cl,0x34
  41af2b:	daa    
  41af2c:	je     0x41aeee
  41af2e:	jbe    0x41aed0
  41af30:	mov    eax,ds:0xd390d563
  41af35:	xor    eax,0x7d206ca
  41af3a:	sti    
  41af3b:	mov    DWORD PTR [edi-0x2c],esi
  41af3e:	bound  esi,QWORD PTR [eax+eiz*8+0x48]
  41af42:	pop    ebx
  41af43:	hlt    
  41af44:	sbb    eax,DWORD PTR [eax-0x4c]
  41af47:	xor    BYTE PTR [ecx],ch
  41af49:	or     esi,DWORD PTR [ebx-0x67549e88]
  41af4f:	mov    ah,cl
  41af51:	mov    ds:0x8e85e263,eax
  41af56:	nop
  41af57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af58:	xor    al,0x3b
  41af5a:	mov    esp,0xdbcbd5e
  41af5f:	lahf   
  41af60:	test   BYTE PTR [ebx],bh
  41af62:	mov    bl,0x31
  41af64:	pop    ebp
  41af65:	rep outs dx,BYTE PTR ds:[esi]
  41af67:	retf   0xcfd3
  41af6a:	in     al,dx
  41af6b:	dec    esi
  41af6c:	add    DWORD PTR [eax+0x67552e62],ebx
  41af72:	inc    ecx
  41af73:	aaa    
  41af74:	pop    ebp
  41af75:	jne    0x41afbc
  41af77:	inc    esp
  41af78:	stos   BYTE PTR es:[edi],al
  41af79:	out    0x44,eax
  41af7b:	sbb    BYTE PTR [eax+0x68d32b90],cl
  41af81:	stos   DWORD PTR es:[edi],eax
  41af82:	pop    eax
  41af83:	retf   0xf222
  41af86:	cmp    dh,BYTE PTR [esi+0x16a94e93]
  41af8c:	push   ebx
  41af8d:	ds pop ebp
  41af8f:	and    edi,DWORD PTR [eax+0x4d]
  41af92:	inc    ebx
  41af93:	scas   al,BYTE PTR es:[edi]
  41af94:	fcom   DWORD PTR [esi+esi*2-0x1e74156a]
  41af9b:	mov    dh,0xbf
  41af9d:	jmp    0x8a:0x93da800b
  41afa4:	out    dx,al
  41afa5:	ins    DWORD PTR es:[edi],dx
  41afa6:	mov    ds:0x17d64ca2,al
  41afab:	mov    al,ds:0xb417ebcd
  41afb0:	push   cs
  41afb1:	push   esp
  41afb2:	nop
  41afb3:	and    eax,0x545afbcc
  41afb8:	int3   
  41afb9:	xchg   ebx,eax
  41afba:	push   edi
  41afbb:	inc    edx
  41afbc:	(bad)  
  41afbd:	out    0x9d,al
  41afbf:	arpl   WORD PTR [eax],dx
  41afc1:	mov    dh,0x81
  41afc3:	rol    BYTE PTR [esi],cl
  41afc5:	adc    al,BYTE PTR ds:0xf7d81c7f
  41afcb:	div    ah
  41afcd:	and    BYTE PTR [ebx],0x49
  41afd0:	rol    BYTE PTR [edx],0xca
  41afd3:	adc    BYTE PTR [ecx+0x3bc6758f],bh
  41afd9:	aaa    
  41afda:	adc    ch,BYTE PTR [edx]
  41afdc:	push   es
  41afdd:	fcomp  DWORD PTR ds:0x8016ce50
  41afe3:	or     ebx,DWORD PTR [edx+edi*2-0xe]
  41afe7:	je     0x41b011
  41afe9:	xchg   esp,eax
  41afea:	or     BYTE PTR [esi-0x7734f7c2],cl
  41aff0:	jae    0x41b034
  41aff2:	xor    bh,BYTE PTR [ebp-0x7150bb74]
  41aff8:	jne    0x41b02b
  41affa:	fsubr  st(6),st
  41affc:	sub    ecx,eax
  41affe:	or     ch,BYTE PTR [ecx+0x715c14ad]
  41b004:	fisubr WORD PTR fs:[esi]
  41b007:	xor    esp,eax
  41b009:	mov    WORD PTR [ecx],?
  41b00b:	jo     0x41b05f
  41b00d:	or     ebx,eax
  41b00f:	mov    bl,0x94
  41b011:	enter  0xa76d,0x63
  41b015:	add    esp,DWORD PTR [ecx]
  41b017:	sub    DWORD PTR [edx+edi*1+0x39],esp
  41b01b:	(bad)  
  41b01c:	mov    edx,0x99d7cb79
  41b021:	cdq    
  41b022:	lock xchg edx,eax
  41b024:	xchg   esi,eax
  41b025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b026:	cmp    eax,0x699cfe9
  41b02b:	ins    BYTE PTR es:[edi],dx
  41b02c:	and    dh,BYTE PTR [esi-0x2e76967a]
  41b032:	sbb    bh,ah
  41b034:	mov    DWORD PTR [edi],edi
  41b036:	inc    edx
  41b037:	xor    eax,0x2f85eb43
  41b03c:	js     0x41b01a
  41b03e:	out    dx,eax
  41b03f:	pop    eax
  41b040:	push   ds
  41b041:	or     BYTE PTR ds:0x481e0cf4,bl
  41b047:	and    dl,dl
  41b049:	rcr    al,cl
  41b04b:	jo     0x41b0b5
  41b04d:	fucomp st(1)
  41b04f:	or     BYTE PTR [di+0x54],ch
  41b053:	std    
  41b054:	pop    ebx
  41b055:	and    al,0x35
  41b057:	jb     0x41b00e
  41b059:	dec    ecx
  41b05a:	in     eax,0xb3
  41b05c:	out    0x64,al
  41b05e:	(bad)  
  41b05f:	jmp    DWORD PTR [edi]
  41b061:	xchg   BYTE PTR [ecx+0x6],dl
  41b064:	fnsave ds:0x8974096e
  41b06a:	in     eax,0xd5
  41b06c:	push   es
  41b06d:	pop    es
  41b06e:	gs in  al,dx
  41b070:	mov    al,ds:0x83698944
  41b075:	rol    BYTE PTR [ebx+0x25],0x18
  41b079:	mov    ah,0xcb
  41b07b:	mov    ah,0x49
  41b07d:	retf   
  41b07e:	xchg   edx,eax
  41b07f:	scas   al,BYTE PTR es:[edi]
  41b080:	inc    edi
  41b081:	stos   BYTE PTR es:[edi],al
  41b082:	xchg   ebp,eax
  41b083:	xchg   edx,eax
  41b084:	push   edi
  41b085:	mov    ?,WORD PTR [esi-0x7]
  41b088:	pop    ds
  41b089:	mov    ah,0xf7
  41b08b:	in     eax,dx
  41b08c:	jbe    0x41b07a
  41b08e:	mov    eax,ds:0xb1e19ceb
  41b093:	cli    
  41b094:	shl    DWORD PTR [eax],cl
  41b096:	sub    eax,0x85680663
  41b09b:	jns    0x41b087
  41b09d:	pushf  
  41b09e:	hlt    
  41b09f:	add    bl,BYTE PTR [edx]
  41b0a1:	jnp    0x41b115
  41b0a3:	xchg   BYTE PTR [ebx-0x7d0e7ed4],ch
  41b0a9:	iret   
  41b0aa:	jp     0x41b030
  41b0ac:	xor    dh,BYTE PTR [esi-0x32b44b6b]
  41b0b2:	outs   dx,BYTE PTR ds:[esi]
  41b0b3:	mov    ?,WORD PTR [eax-0x1d]
  41b0b6:	int    0x16
  41b0b8:	xor    edx,DWORD PTR [ecx-0x2a5947db]
  41b0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0bf:	in     eax,dx
  41b0c0:	add    BYTE PTR [ebp-0x3],0x39
  41b0c4:	retf   
  41b0c5:	mov    DWORD PTR [ebx-0x4ebfebff],0x7d27a231
  41b0cf:	div    BYTE PTR [eax]
  41b0d1:	mov    bh,0x56
  41b0d3:	and    ecx,DWORD PTR [ecx+0x40]
  41b0d6:	sub    DWORD PTR [edi-0x486e3a62],ebp
  41b0dc:	push   es
  41b0dd:	call   0x3be374ea
  41b0e2:	ins    DWORD PTR es:[edi],dx
  41b0e3:	ins    BYTE PTR es:[edi],dx
  41b0e4:	mov    esi,ebx
  41b0e6:	adc    bh,BYTE PTR [eax+0x51182bf0]
  41b0ec:	cmp    DWORD PTR [ecx-0x1],edx
  41b0ef:	call   0x8eae83cc
  41b0f4:	pusha  
  41b0f5:	test   ebp,edi
  41b0f7:	cdq    
  41b0f8:	inc    eax
  41b0f9:	ins    DWORD PTR es:[edi],dx
  41b0fa:	sar    bh,0x59
  41b0fd:	dec    ebx
  41b0fe:	inc    edx
  41b0ff:	ds icebp 
  41b101:	add    dl,BYTE PTR [ecx]
  41b103:	inc    ecx
  41b104:	xor    esp,edx
  41b106:	mov    ah,0xcc
  41b108:	or     al,0xf
  41b10a:	arpl   bx,ax
  41b10c:	mov    edi,0xd334cbe9
  41b111:	jbe    0x41b0b6
  41b113:	xor    BYTE PTR [ebp-0x280f39a2],ch
  41b119:	xor    DWORD PTR [esi],eax
  41b11b:	je     0x41b0d2
  41b11d:	jp     0x41b150
  41b11f:	mov    dh,0xd8
  41b121:	sub    al,0x25
  41b123:	hlt    
  41b124:	popf   
  41b125:	and    ebp,DWORD PTR [ecx+0x3d]
  41b128:	or     al,0xd3
  41b12a:	xchg   BYTE PTR [esp+edx*1],al
  41b12d:	cs int3 
  41b12f:	dec    ebx
  41b130:	rol    BYTE PTR [edi+0x6d8b9564],cl
  41b136:	div    DWORD PTR [ecx-0x1a547e9a]
  41b13c:	lds    edx,FWORD PTR [edi+0x7a12b628]
  41b142:	retf   0x8950
  41b145:	jnp    0x41b0f6
  41b147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b148:	sub    BYTE PTR [edx+eiz*8+0x49],dh
  41b14c:	(bad)  
  41b14d:	icebp  
  41b14e:	sbb    al,0x34
  41b150:	(bad)  
  41b151:	sti    
  41b152:	mov    ch,ah
  41b154:	push   eax
  41b155:	shl    DWORD PTR [ebx+0x4ca03585],0x40
  41b15c:	push   ebx
  41b15d:	push   edi
  41b15e:	adc    ch,BYTE PTR [esi]
  41b160:	int    0xd6
  41b162:	int3   
  41b163:	mov    BYTE PTR [ecx-0x304b322e],ch
  41b169:	xor    DWORD PTR [edx-0x4a],ebx
  41b16c:	(bad)  
  41b16d:	cmp    ebp,DWORD PTR [eax-0x718d851]
  41b173:	mov    al,ds:0x90c22930
  41b178:	ret    
  41b179:	dec    esp
  41b17a:	pop    eax
  41b17b:	outs   dx,BYTE PTR ds:[esi]
  41b17c:	xor    DWORD PTR [eax+0x92dedf8],ebp
  41b182:	lock pop ecx
  41b184:	pop    ebx
  41b185:	bound  esp,QWORD PTR [ebx+0x206ab06c]
  41b18b:	popa   
  41b18c:	jnp    0x41b176
  41b18e:	outs   dx,BYTE PTR ds:[esi]
  41b18f:	sbb    dh,BYTE PTR [edi+eax*1+0x4f]
  41b193:	iret   
  41b194:	in     al,dx
  41b195:	inc    esp
  41b196:	(bad)  
  41b197:	(bad)  
  41b198:	mov    bl,0x44
  41b19a:	(bad)  
  41b19c:	call   FWORD PTR [edx-0x413d0777]
  41b1a2:	popa   
  41b1a3:	lods   eax,DWORD PTR ds:[esi]
  41b1a4:	in     al,0xdb
  41b1a6:	dec    ebp
  41b1a7:	sub    BYTE PTR [ecx+0x38f40b69],al
  41b1ad:	mov    edx,0x8d73d7a9
  41b1b2:	mov    ds:0xb3946abc,eax
  41b1b7:	mov    dl,BYTE PTR [eax-0x2fc34db9]
  41b1bd:	jmp    0x8319:0xa56b3338
  41b1c4:	fsin   
  41b1c6:	rol    DWORD PTR [edi-0x2300a8a1],1
  41b1cc:	jnp    0x41b1e9
  41b1ce:	sahf   
  41b1cf:	(bad)  
  41b1d1:	mov    cl,0x8f
  41b1d3:	frstor [ecx-0x6e]
  41b1d6:	in     al,0xba
  41b1d8:	mov    WORD PTR [esi+0x75cd5c07],?
  41b1de:	pop    eax
  41b1df:	fs push ds
  41b1e1:	in     eax,0x52
  41b1e3:	rcr    eax,cl
  41b1e5:	and    DWORD PTR [ebx-0x556b69f5],0xb8d82a6c
  41b1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1f0:	leave  
  41b1f1:	lds    esp,FWORD PTR [esi+0x38]
  41b1f4:	mov    eax,cs
  41b1f6:	or     ah,BYTE PTR [edx-0x71ec81dc]
  41b1fc:	mov    bh,0x35
  41b1fe:	push   esp
  41b1ff:	inc    eax
  41b200:	and    BYTE PTR [ebx+0x1b],ch
  41b203:	aaa    
  41b204:	out    dx,al
  41b205:	lods   eax,DWORD PTR ds:[esi]
  41b206:	fs jl  0x41b20e
  41b209:	and    bl,BYTE PTR [ebp+0x27f09b6a]
  41b20f:	inc    edi
  41b210:	stc    
  41b211:	mov    edx,0xa1ea80fc
  41b216:	fild   DWORD PTR [eax-0x6a]
  41b219:	xchg   BYTE PTR [eax+0x119864a1],cl
  41b21f:	cmp    dl,BYTE PTR [edi-0x4c]
  41b222:	mov    dh,0xdb
  41b224:	test   ebx,esp
  41b226:	or     BYTE PTR ds:0xf2333c3a,0xd4
  41b22d:	and    eax,0x8623409d
  41b232:	mov    BYTE PTR [esi],bh
  41b234:	outs   dx,BYTE PTR ds:[esi]
  41b235:	test   bl,cl
  41b237:	lea    ax,[eax]
  41b23a:	or     bl,al
  41b23c:	inc    esp
  41b23d:	sub    ebx,DWORD PTR [ebp+0x4b21bf4f]
  41b243:	sbb    DWORD PTR [ebx+0x160685b],esp
  41b249:	out    dx,eax
  41b24a:	popa   
  41b24b:	(bad)  
  41b24c:	mov    al,ds:0xc730c541
  41b251:	sbb    ebp,0xe4a5a183
  41b257:	shr    BYTE PTR ss:0x9ccacf88,0xe0
  41b25f:	bound  eax,QWORD PTR [ebp-0x4dc6a829]
  41b265:	push   edx
  41b266:	mov    bh,0x7
  41b268:	adc    eax,0x6a5f4b87
  41b26d:	jbe    0x41b240
  41b26f:	cdq    
  41b270:	ins    BYTE PTR es:[edi],dx
  41b271:	mov    bh,0xdd
  41b273:	jo     0x41b27a
  41b275:	or     dh,BYTE PTR [eax+eax*1]
  41b278:	(bad)  
  41b279:	jnp    0x41b2c9
  41b27b:	je     0x41b29c
  41b27d:	nop
  41b27e:	call   0xf27127b4
  41b283:	loope  0x41b280
  41b285:	into   
  41b286:	out    0xe5,al
  41b288:	xor    ch,dl
  41b28a:	push   edi
  41b28b:	sbb    ebp,ebx
  41b28d:	xchg   esi,eax
  41b28e:	or     dh,BYTE PTR [edi-0x3d70616]
  41b294:	outs   dx,BYTE PTR ds:[esi]
  41b295:	pop    eax
  41b296:	adc    edx,DWORD PTR [esi]
  41b298:	shr    BYTE PTR [ecx],cl
  41b29a:	pop    edi
  41b29b:	or     bh,bl
  41b29d:	gs push edi
  41b29f:	aaa    
  41b2a0:	cmp    eax,0x58e18305
  41b2a5:	in     al,dx
  41b2a6:	fsub   QWORD PTR [ebp-0x343b8af8]
  41b2ac:	jecxz  0x41b28b
  41b2ae:	test   DWORD PTR [edx+0x13460baf],0xc7a0fe46
  41b2b8:	or     ch,BYTE PTR [ecx+esi*4]
  41b2bb:	inc    ebx
  41b2bc:	mov    edi,eax
  41b2be:	xchg   BYTE PTR [esi],al
  41b2c0:	and    edi,DWORD PTR [bp+di]
  41b2c3:	push   eax
  41b2c4:	addr16 mov eax,0x20699dab
  41b2ca:	fidivr DWORD PTR [ebx-0x379a0063]
  41b2d0:	out    0xdd,al
  41b2d2:	dec    esp
  41b2d3:	ins    BYTE PTR es:[edi],dx
  41b2d4:	push   esi
  41b2d5:	daa    
  41b2d6:	arpl   bp,sp
  41b2d8:	icebp  
  41b2d9:	mov    eax,ds:0xd5f9afff
  41b2de:	arpl   sp,ax
  41b2e0:	xor    ebp,DWORD PTR [edi]
  41b2e2:	pushf  
  41b2e3:	jne    0x41b340
  41b2e5:	mov    ch,0xa3
  41b2e7:	sub    edx,DWORD PTR [eax+0x1d7d16c3]
  41b2ed:	ret    
  41b2ee:	dec    esp
  41b2ef:	lods   eax,DWORD PTR ds:[esi]
  41b2f0:	inc    esi
  41b2f1:	mov    dl,0x4e
  41b2f3:	sti    
  41b2f4:	jnp    0x41b342
  41b2f6:	adc    edi,edx
  41b2f8:	sbb    edi,DWORD PTR [ecx]
  41b2fa:	lea    ebx,[esi]
  41b2fc:	ss mov ebx,0xbc26f48
  41b302:	sbb    BYTE PTR [esi],bh
  41b304:	mov    eax,ds:0x4fc1a879
  41b309:	imul   esi,DWORD PTR [ecx],0xffffff9a
  41b30c:	xchg   DWORD PTR [edi+0x31aa4497],ebp
  41b312:	mov    ebx,0x4a19b4bc
  41b317:	xor    DWORD PTR [ecx+0x70],ebp
  41b31a:	or     al,0xa9
  41b31c:	loopne 0x41b338
  41b31e:	xchg   ecx,eax
  41b31f:	dec    ecx
  41b320:	retf   0x4ef4
  41b323:	lea    edx,[ebx]
  41b325:	pop    ebx
  41b326:	cmp    eax,0x7e581368
  41b32b:	mov    dh,0x9e
  41b32d:	or     dl,dh
  41b32f:	int3   
  41b330:	push   esi
  41b331:	(bad)  
  41b332:	daa    
  41b333:	aad    0x9d
  41b335:	fwait
  41b336:	aam    0xf
  41b338:	mov    edi,0x7df33632
  41b33d:	push   ecx
  41b33e:	adc    ah,BYTE PTR [edi+0x1f]
  41b341:	jmp    0x41b2f1
  41b343:	jmp    0xc53eb7fa
  41b348:	les    esp,FWORD PTR [edx+0x6fc2b8c2]
  41b34e:	pusha  
  41b34f:	sbb    BYTE PTR [ecx-0x16],dl
  41b352:	scas   eax,DWORD PTR es:[edi]
  41b353:	dec    eax
  41b354:	ja     0x41b349
  41b356:	push   ss
  41b357:	loope  0x41b37a
  41b359:	mov    cl,bh
  41b35b:	or     eax,0x8ceea4ba
  41b360:	out    dx,eax
  41b361:	lea    esi,[eax-0x1a]
  41b364:	xchg   ebp,eax
  41b365:	cmp    BYTE PTR [edx+0x49a168c9],0x82
  41b36c:	sub    ah,dl
  41b36e:	push   ebx
  41b36f:	and    bl,BYTE PTR [ebp+0xc]
  41b372:	dec    ebp
  41b373:	push   esp
  41b374:	cmp    dh,BYTE PTR [eax-0x51]
  41b377:	sub    BYTE PTR [edx],0xaf
  41b37a:	test   al,0x8b
  41b37c:	mov    edi,0x93bead47
  41b381:	es scas al,BYTE PTR es:[edi]
  41b383:	call   0xcce5:0xf6d7fa7a
  41b38a:	xlat   BYTE PTR ds:[ebx]
  41b38b:	sbb    DWORD PTR [esi],esi
  41b38d:	fdiv   st(2),st
  41b38f:	and    esp,DWORD PTR ds:0xf3feb209
  41b395:	mov    ch,0x23
  41b397:	push   ecx
  41b398:	inc    ebp
  41b399:	mov    WORD PTR [ecx],cs
  41b39b:	fnsave [edi]
  41b39d:	scas   eax,DWORD PTR es:[edi]
  41b39e:	and    BYTE PTR fs:[ebp-0x29],ah
  41b3a2:	mov    cl,0xea
  41b3a4:	fld    TBYTE PTR [edx-0x15]
  41b3a7:	lods   eax,DWORD PTR ds:[esi]
  41b3a8:	xlat   BYTE PTR ds:[ebx]
  41b3a9:	sti    
  41b3aa:	push   esi
  41b3ab:	cmp    al,0x64
  41b3ad:	pop    ebp
  41b3ae:	cwde   
  41b3af:	call   0xf66d:0x33eb4444
  41b3b6:	xor    ch,al
  41b3b8:	mov    WORD PTR ss:[ecx],ds
  41b3bb:	call   0xbebb:0x6ca53fb2
  41b3c2:	out    dx,eax
  41b3c3:	adc    edx,esi
  41b3c5:	add    al,0xd8
  41b3c7:	dec    ecx
  41b3c8:	xlat   BYTE PTR ds:[ebx]
  41b3c9:	cmp    bl,BYTE PTR [ebx-0x42d8de7c]
  41b3cf:	sbb    DWORD PTR [edx+0x5c],edi
  41b3d2:	dec    eax
  41b3d3:	cs std 
  41b3d5:	cmp    ax,WORD PTR [ebx+0x2c45b055]
  41b3dc:	das    
  41b3dd:	pop    ecx
  41b3de:	repz inc ecx
  41b3e0:	sahf   
  41b3e1:	(bad)
  41b3e5:	mov    ebx,0xed2070be
  41b3ea:	test   al,0x57
  41b3ec:	add    BYTE PTR [ebx-0x468aaea5],cl
  41b3f2:	retf   0x37b4
  41b3f5:	ins    BYTE PTR es:[edi],dx
  41b3f6:	cwde   
  41b3f7:	arpl   WORD PTR [ebp+0x55],si
  41b3fa:	jb     0x41b464
  41b3fc:	std    
  41b3fd:	pop    esp
  41b3fe:	adc    DWORD PTR [edi+0x5621ec29],0xffffff8e
  41b405:	xor    ebx,DWORD PTR [esi+0x61a1ede8]
  41b40b:	fidiv  DWORD PTR [esi]
  41b40d:	enter  0x6d7b,0x7
  41b411:	(bad)  
  41b412:	cli    
  41b413:	js     0x41b480
  41b415:	sbb    DWORD PTR ds:0x3c1d6cef,0x89cb64e1
  41b41f:	fimul  WORD PTR [ebx+0x6202ba0e]
  41b425:	retf   
  41b426:	dec    ebp
  41b427:	dec    edx
  41b428:	mov    ecx,0x2ac6ab6d
  41b42d:	jg     0x41b408
  41b42f:	sahf   
  41b430:	(bad)  
  41b431:	or     DWORD PTR [eax],ebp
  41b433:	cmp    ah,0xa3
  41b436:	mov    cl,0xcd
  41b438:	or     DWORD PTR [ebx+0x1f],eax
  41b43b:	mov    eax,0xad9a2240
  41b440:	adc    edi,ebp
  41b442:	mov    eax,0x3085a8bd
  41b447:	dec    esp
  41b448:	(bad)  
  41b449:	or     eax,0x656119c5
  41b44e:	call   0x8f6c:0x383db308
  41b455:	nop
  41b456:	add    al,0xd9
  41b458:	fsubr  st,st(6)
  41b45a:	or     BYTE PTR [ebp-0x248cb925],bh
  41b460:	std    
  41b461:	add    al,0xe7
  41b463:	fcmovb st,st(6)
  41b465:	inc    eax
  41b466:	cmp    ch,BYTE PTR [ecx+0x19]
  41b469:	outs   dx,DWORD PTR ds:[esi]
  41b46a:	es inc eax
  41b46c:	(bad)  
  41b46d:	add    ebx,edi
  41b46f:	les    edi,FWORD PTR [eax+0x5163820f]
  41b475:	in     al,0xd5
  41b477:	xor    BYTE PTR [di-0x2f],bl
  41b47b:	icebp  
  41b47c:	push   esp
  41b47d:	xor    esp,DWORD PTR ds:0x7728fda5
  41b483:	jl     0x41b4c8
  41b485:	xchg   ebx,eax
  41b486:	mov    ch,0x7
  41b488:	jno    0x41b49e
  41b48a:	dec    eax
  41b48b:	mov    esi,DWORD PTR [esi-0x5ae9a4c9]
  41b491:	test   DWORD PTR [edi+esi*2],ebx
  41b494:	loop   0x41b508
  41b496:	inc    eax
  41b497:	in     al,dx
  41b498:	icebp  
  41b499:	ror    DWORD PTR [eax-0x30bc9124],0xc2
  41b4a0:	xchg   esp,eax
  41b4a1:	lods   eax,DWORD PTR ds:[esi]
  41b4a2:	add    DWORD PTR [eax-0x1c16f164],eax
  41b4a8:	fistp  DWORD PTR [ecx-0x5d]
  41b4ab:	jns    0x41b46f
  41b4ad:	mov    BYTE PTR [esi-0x51d79d0e],ch
  41b4b3:	jle    0x41b4c3
  41b4b5:	jns    0x41b4b0
  41b4b7:	aam    0x44
  41b4b9:	jbe    0x41b4af
  41b4bb:	xchg   edx,eax
  41b4bc:	jge    0x41b444
  41b4be:	and    al,0x2c
  41b4c0:	fcomi  st,st(5)
  41b4c2:	mov    dh,0xac
  41b4c4:	sysenter 
  41b4c6:	imul   esi,DWORD PTR [ebp+0x3a1c7408],0x1b6cf063
  41b4d0:	push   es
  41b4d1:	imul   dh
  41b4d3:	jmp    0x1fcdbe03
  41b4d8:	std    
  41b4d9:	out    dx,eax
  41b4da:	sti    
  41b4db:	dec    eax
  41b4dc:	xchg   ecx,eax
  41b4dd:	inc    eax
  41b4de:	and    bh,BYTE PTR [edi]
  41b4e0:	outs   dx,DWORD PTR ds:[esi]
  41b4e1:	xchg   esp,eax
  41b4e2:	mov    cl,0xc9
  41b4e4:	and    ecx,DWORD PTR [ebx+0x3748e3bf]
  41b4ea:	add    eax,0x76407572
  41b4ef:	dec    edi
  41b4f0:	stc    
  41b4f1:	pop    es
  41b4f2:	adc    edi,esp
  41b4f4:	int3   
  41b4f5:	fs inc eax
  41b4f7:	std    
  41b4f8:	ss and ebp,edi
  41b4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4fc:	outs   dx,BYTE PTR ds:[esi]
  41b4fd:	fidiv  WORD PTR [edx]
  41b4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b500:	lds    edx,FWORD PTR [ebx]
  41b502:	test   eax,0xec116cd6
  41b507:	hlt    
  41b508:	cmp    eax,0x19e741e3
  41b50d:	mov    eax,ds:0x8d9f2036
  41b512:	add    BYTE PTR [edi-0x41],bh
  41b515:	mov    bl,0x4d
  41b517:	lahf   
  41b518:	data16 arpl sp,bp
  41b51b:	xor    al,0x80
  41b51d:	ja     0x41b503
  41b51f:	pushf  
  41b520:	cmp    ecx,DWORD PTR [ebx]
  41b522:	inc    esi
  41b523:	xchg   ebx,eax
  41b524:	mov    DWORD PTR [edi-0x1e0918a4],ecx
  41b52a:	outs   dx,BYTE PTR ds:[esi]
  41b52b:	cmp    edi,DWORD PTR [edi-0x5]
  41b52e:	mov    ah,0xec
  41b530:	ja     0x41b597
  41b532:	pop    esp
  41b533:	gs mov ecx,0x7c7a7954
  41b539:	cmp    BYTE PTR [ebp+0x19],dh
  41b53c:	xchg   esi,eax
  41b53d:	mov    WORD PTR [eax+0x4a],ds
  41b540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b541:	sbb    BYTE PTR [esi-0x7c32a9af],ah
  41b547:	std    
  41b548:	sub    dh,BYTE PTR [edi-0x5b]
  41b54b:	cmp    al,0x38
  41b54d:	imul   esi,edi,0x92f34ee
  41b553:	xlat   BYTE PTR ds:[ebx]
  41b554:	push   cs
  41b555:	scas   al,BYTE PTR es:[edi]
  41b556:	pop    eax
  41b557:	shl    DWORD PTR [edi],0x7d
  41b55a:	pop    ecx
  41b55b:	mov    al,0xa9
  41b55d:	xchg   edx,eax
  41b55e:	cmp    eax,0x7d15ee25
  41b563:	test   esp,0x8efdc33d
  41b569:	retf   0x385
  41b56c:	in     eax,0xe6
  41b56e:	jns    0x41b5da
  41b570:	das    
  41b571:	pop    ebx
  41b572:	in     eax,dx
  41b573:	xchg   ebp,eax
  41b574:	stc    
  41b575:	mov    bh,0x9c
  41b577:	ins    BYTE PTR es:[edi],dx
  41b578:	fisub  WORD PTR [eax-0x4e38df]
  41b57e:	adc    eax,esi
  41b580:	jl     0x41b5bb
  41b582:	pop    ebp
  41b583:	or     ch,BYTE PTR [ecx+edx*2-0x49370c9d]
  41b58a:	inc    eax
  41b58b:	jno    0x41b57d
  41b58d:	repnz inc ebp
  41b58f:	imul   ebx,DWORD PTR [edi+0x7c],0x33
  41b593:	fidivr WORD PTR [ecx+0x18df7196]
  41b599:	or     ch,BYTE PTR [edx-0x2a]
  41b59c:	push   ebx
  41b59d:	push   ss
  41b59e:	xchg   esp,eax
  41b59f:	leave  
  41b5a0:	jmp    0xcbd46d64
  41b5a5:	and    dl,BYTE PTR [ecx-0x4e]
  41b5a8:	xchg   ecx,eax
  41b5a9:	pop    ebx
  41b5aa:	rcr    BYTE PTR fs:[eax-0x2a],cl
  41b5ae:	inc    edx
  41b5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b0:	xor    bh,BYTE PTR es:[edi]
  41b5b3:	lahf   
  41b5b4:	jl     0x41b578
  41b5b6:	popa   
  41b5b7:	in     al,dx
  41b5b8:	fwait
  41b5b9:	xor    al,0xce
  41b5bb:	icebp  
  41b5bc:	fidivr DWORD PTR [ebx+0x5b209a58]
  41b5c2:	push   eax
  41b5c3:	fistp  DWORD PTR [ebp+0xa84d4fa]
  41b5c9:	adc    al,BYTE PTR [ebx]
  41b5cb:	jb     0x41b649
  41b5cd:	je     0x41b5d9
  41b5cf:	jmp    DWORD PTR [ebx-0x69fcf8a3]
  41b5d5:	cmp    dh,BYTE PTR [ebp+eiz*8-0x56]
  41b5d9:	pop    edx
  41b5da:	popa   
  41b5db:	into   
  41b5dc:	aas    
  41b5dd:	mov    ch,0xb4
  41b5df:	sar    BYTE PTR [eax],0x78
  41b5e2:	mov    WORD PTR [ebp+ebx*8-0x74e265bb],cs
  41b5e9:	pushf  
  41b5ea:	jno    0x41b5f6
  41b5ec:	cmp    esi,eax
  41b5ee:	enter  0xfb18,0xac
  41b5f2:	inc    ebp
  41b5f3:	jmp    0x76db5e58
  41b5f8:	push   es
  41b5f9:	mov    ch,0x40
  41b5fb:	cmc    
  41b5fc:	shr    cl,0x25
  41b5ff:	and    bl,BYTE PTR [ebx]
  41b601:	pusha  
  41b602:	push   ebp
  41b603:	sub    esp,DWORD PTR [ebx+eiz*1+0x4c]
  41b607:	mov    BYTE PTR cs:[edx-0x3b],bh
  41b60b:	mov    eax,DWORD PTR [ecx+0x6ca6db68]
  41b611:	adc    al,0xcc
  41b613:	iret   
  41b614:	mov    DWORD PTR [edi],ebp
  41b616:	repnz out dx,eax
  41b618:	or     eax,0x2df831de
  41b61d:	xchg   DWORD PTR [esi],eax
  41b61f:	dec    ebp
  41b620:	push   ebx
  41b621:	out    dx,eax
  41b622:	adc    ebx,DWORD PTR [eax+ebx*4]
  41b625:	push   cs
  41b626:	sbb    BYTE PTR [esi],0x48
  41b629:	je     0x41b5f2
  41b62b:	sub    al,al
  41b62d:	int    0x2d
  41b62f:	cs push ss
  41b631:	cmp    bh,ah
  41b633:	push   esp
  41b634:	or     al,0x7e
  41b636:	in     al,0xd5
  41b638:	div    BYTE PTR [edx]
  41b63a:	jns    0x41b5c7
  41b63c:	cmp    DWORD PTR [ebx+edx*4-0x65],esp
  41b640:	daa    
  41b641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b642:	pop    esp
  41b643:	pop    ebp
  41b644:	int3   
  41b645:	sub    BYTE PTR [ebx-0x32],ch
  41b648:	in     al,dx
  41b649:	fcom   DWORD PTR [esi-0x4a]
  41b64c:	dec    edi
  41b64d:	rcl    DWORD PTR [ecx+0x2a],0x4
  41b651:	sub    DWORD PTR [ebx+ecx*8+0x3c99768d],esp
  41b658:	add    edi,DWORD PTR [eax-0x32c4b4f5]
  41b65e:	xor    al,0xd4
  41b660:	cwde   
  41b661:	cmp    al,0xf4
  41b663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b664:	push   ecx
  41b665:	mov    ds:0xee353194,al
  41b66a:	inc    esp
  41b66b:	sub    DWORD PTR [eax+ecx*2],edi
  41b66e:	loopne 0x41b63a
  41b670:	mov    cl,0x90
  41b672:	ret    
  41b673:	out    0x9,al
  41b675:	sar    al,1
  41b677:	xchg   esp,eax
  41b678:	std    
  41b679:	lds    edx,FWORD PTR [edi-0x663d4fb5]
  41b67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b680:	fsubr  DWORD PTR [ecx]
  41b682:	ret    
  41b683:	lea    esp,[eax+ebx*4]
  41b686:	push   edi
  41b687:	push   ds
  41b688:	sbb    dh,BYTE PTR [eax]
  41b68a:	xchg   esi,eax
  41b68b:	cli    
  41b68c:	arpl   bx,bx
  41b68e:	scas   al,BYTE PTR es:[edi]
  41b68f:	outs   dx,DWORD PTR ds:[esi]
  41b690:	out    dx,eax
  41b691:	in     eax,dx
  41b692:	sti    
  41b693:	jae    0x41b649
  41b695:	jg     0x41b6be
  41b697:	or     DWORD PTR [edx-0x4934cd50],eax
  41b69d:	push   esp
  41b69e:	push   edx
  41b69f:	mov    eax,0xa61fef7f
  41b6a4:	outs   dx,DWORD PTR ds:[esi]
  41b6a5:	inc    ebx
  41b6a6:	pop    eax
  41b6a7:	test   BYTE PTR [edx+0x17],0x32
  41b6ab:	add    eax,0xbbcb05fc
  41b6b0:	fsubr  QWORD PTR [eax-0x112cf84]
  41b6b6:	scas   al,BYTE PTR es:[edi]
  41b6b7:	rcl    eax,0x73
  41b6ba:	mov    ecx,0xa37a674f
  41b6bf:	adc    BYTE PTR ss:[edx-0x3e],ch
  41b6c3:	dec    edx
  41b6c4:	push   esp
  41b6c5:	aas    
  41b6c6:	leave  
  41b6c7:	repz mov eax,0x76b4ff6a
  41b6cd:	xchg   esi,eax
  41b6ce:	inc    esi
  41b6cf:	lock cmc 
  41b6d1:	mul    DWORD PTR [ebx]
  41b6d3:	xor    bh,bl
  41b6d5:	retf   
  41b6d6:	mov    DWORD PTR cs:[edx],0xda2a24c
  41b6dd:	jnp    0x41b6e5
  41b6df:	adc    eax,DWORD PTR [ebx]
  41b6e1:	iret   
  41b6e2:	dec    ebx
  41b6e3:	stos   BYTE PTR es:[edi],al
  41b6e4:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e6:	inc    esp
  41b6e7:	xchg   esi,eax
  41b6e8:	add    DWORD PTR [ecx-0x6b],esi
  41b6eb:	push   es
  41b6ec:	inc    esp
  41b6ed:	mov    al,BYTE PTR [esi]
  41b6ef:	repnz add cl,ch
  41b6f2:	mov    BYTE PTR [ebp+ebx*8+0x6d],0x8d
  41b6f7:	pusha  
  41b6f8:	mov    dh,0x4
  41b6fa:	pop    esi
  41b6fb:	je     0x41b6b2
  41b6fd:	shr    BYTE PTR [ebx-0xaa42cb],cl
  41b703:	outs   dx,DWORD PTR ds:[esi]
  41b704:	ss xchg esp,eax
  41b706:	mov    ecx,0x51629650
  41b70b:	ret    0xa747
  41b70e:	xor    al,0x6d
  41b710:	cmp    al,0xa8
  41b712:	inc    ebp
  41b713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b714:	push   ebp
  41b715:	xor    dh,cl
  41b717:	in     al,0xa5
  41b719:	loopne 0x41b75b
  41b71b:	sbb    ebp,0xffffffa9
  41b71e:	cmp    eax,ecx
  41b720:	sbb    BYTE PTR [edx],dl
  41b722:	das    
  41b723:	mov    al,ds:0xdbbc8559
  41b728:	jg     0x41b785
  41b72a:	mov    dh,0x22
  41b72c:	push   cs
  41b72d:	xchg   edx,eax
  41b72e:	xor    ebp,DWORD PTR [ecx+0x4fb74f6f]
  41b734:	xchg   edi,eax
  41b735:	mov    bh,0x59
  41b737:	and    eax,0xa1e601a4
  41b73c:	pop    eax
  41b73d:	imul   ebx,DWORD PTR [ebp-0x55f1a32d],0xffffffc9
  41b744:	mov    ecx,0x8e6891a1
  41b749:	ja     0x41b708
  41b74b:	dec    esp
  41b74c:	inc    ecx
  41b74d:	das    
  41b74e:	mov    bl,0x3
  41b750:	shl    cl,cl
  41b752:	or     ebp,DWORD PTR [edx-0xa]
  41b755:	mov    WORD PTR [ebx-0x722206be],?
  41b75b:	or     al,0x84
  41b75d:	push   ss
  41b75e:	mov    edx,0x8e1d85a3
  41b763:	(bad)  
  41b764:	mov    dl,0x22
  41b766:	xchg   edi,eax
  41b767:	inc    ebp
  41b768:	and    DWORD PTR [ebp-0x2e],edx
  41b76b:	push   edx
  41b76c:	jg     0x41b772
  41b76e:	pop    ss
  41b76f:	xor    eax,0x9c6117ba
  41b774:	fsub   QWORD PTR [eax-0x34efc317]
  41b77a:	rol    DWORD PTR [ecx+0x0],cl
  41b77d:	mov    dh,BYTE PTR ds:0x99cec063
  41b783:	das    
  41b784:	shl    ch,0x1e
  41b787:	xor    esi,esp
  41b789:	sahf   
  41b78a:	adc    DWORD PTR [esi-0x68f3d73c],ebx
  41b790:	pop    ss
  41b791:	scas   al,BYTE PTR es:[edi]
  41b792:	mov    esp,DWORD PTR [edx+edx*2-0x15d1347f]
  41b799:	(bad)
  41b79c:	cli    
  41b79d:	push   eax
  41b79e:	(bad)  
  41b79f:	jo     0x41b7af
  41b7a1:	pusha  
  41b7a2:	cs in  al,0x38
  41b7a5:	cmp    ch,dl
  41b7a7:	sub    al,ah
  41b7a9:	mov    ebp,0xba1d09e2
  41b7ae:	hlt    
  41b7af:	bnd fs jmp 0xa62fb61f
  41b7b6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41b7b8:	xlat   BYTE PTR ds:[ebx]
  41b7b9:	xchg   ebx,eax
  41b7ba:	jmp    0x41b7d8
  41b7bc:	fmul   DWORD PTR [ecx-0x2c]
  41b7bf:	xchg   edi,eax
  41b7c0:	fadd   st(7),st
  41b7c2:	rol    bl,cl
  41b7c4:	xor    dh,BYTE PTR [ebp+0x7d8d46e8]
  41b7ca:	inc    ebp
  41b7cb:	mov    eax,0xf38fe5cd
  41b7d0:	push   0xfe0d085f
  41b7d5:	das    
  41b7d6:	inc    ebp
  41b7d7:	mov    ?,WORD PTR [eax+ebp*4-0x61fb1e54]
  41b7de:	adc    DWORD PTR [edi+0x61de426c],ebx
  41b7e4:	mov    edi,DWORD PTR [eax-0x7]
  41b7e7:	jp     0x41b7e2
  41b7e9:	add    BYTE PTR [esi-0x80],ch
  41b7ec:	in     eax,0x89
  41b7ee:	mov    ecx,0xba404cfc
  41b7f3:	xchg   esi,eax
  41b7f4:	(bad)  
  41b7f5:	jae    0x41b809
  41b7f7:	jno    0x41b7ac
  41b7f9:	repz cli 
  41b7fb:	mov    al,0x25
  41b7fd:	sbb    al,0x9c
  41b7ff:	or     BYTE PTR [ecx+0x64],dl
  41b802:	test   ch,dl
  41b804:	adc    al,0x81
  41b806:	adc    edi,eax
  41b808:	pushf  
  41b809:	dec    esi
  41b80a:	cmp    BYTE PTR [ecx+0x51c3ec28],al
  41b810:	ja     0x41b7e3
  41b812:	pop    esi
  41b813:	mov    dh,0xed
  41b815:	stos   DWORD PTR es:[edi],eax
  41b816:	xchg   edi,eax
  41b817:	mov    dl,0x63
  41b819:	add    ah,ah
  41b81b:	push   ebp
  41b81c:	sub    dh,0xa2
  41b81f:	adc    DWORD PTR [ebp-0x60c196b9],0xffffffac
  41b826:	arpl   WORD PTR [ecx+0x68],sp
  41b829:	cmp    edi,DWORD PTR [ebp*1-0x25cd2dcf]
  41b830:	sbb    al,0xcf
  41b832:	xlat   BYTE PTR ds:[ebx]
  41b833:	test   eax,0x54b6182d
  41b838:	mov    ebx,eax
  41b83a:	repz xchg ebp,eax
  41b83c:	pop    esi
  41b83d:	jne    0x41b883
  41b83f:	jmp    0x41b897
  41b841:	jmp    0x62b23fb7
  41b846:	add    DWORD PTR [ecx+0x24],edi
  41b849:	stos   DWORD PTR es:[edi],eax
  41b84a:	jle    0x41b854
  41b84c:	cmp    DWORD PTR [esi+0x1dcbbe58],ebx
  41b852:	ret    
  41b853:	stc    
  41b854:	test   eax,0xd353faaf
  41b859:	repnz loopne 0x41b7f2
  41b85c:	jg     0x41b81f
  41b85e:	cs test eax,0x361ba277
  41b864:	jmp    0xa4634687
  41b869:	repnz xchg esp,eax
  41b86b:	dec    esi
  41b86c:	jne    0x41b87a
  41b86e:	xor    BYTE PTR ds:0xf69276af,bl
  41b874:	ret    0x4a18
  41b877:	daa    
  41b878:	fldenv [eax-0xc]
  41b87b:	xchg   cl,cl
  41b87d:	ret    
  41b87e:	adc    eax,0x42d059ee
  41b883:	xchg   ebx,eax
  41b884:	jle    0x41b82c
  41b886:	rol    DWORD PTR [ecx],0xe8
  41b889:	push   0x3262b02a
  41b88e:	rol    BYTE PTR [ebp-0x6d],1
  41b891:	pop    ss
  41b892:	(bad)  
  41b894:	lock lahf 
  41b896:	sbb    DWORD PTR [ecx],edi
  41b898:	mov    dh,0x71
  41b89a:	add    eax,0xe18b88ae
  41b89f:	push   0xabb44d4b
  41b8a4:	retf   
  41b8a5:	jne    0x41b904
  41b8a7:	adc    bl,BYTE PTR [ebx]
  41b8a9:	sub    BYTE PTR [edi+0x5cfdf0a1],bh
  41b8af:	popa   
  41b8b0:	rcr    BYTE PTR [ebp+0x1],cl
  41b8b3:	ffree  st(1)
  41b8b5:	sbb    DWORD PTR [eax],esi
  41b8b7:	cmp    BYTE PTR [eax+edx*4+0xa],ah
  41b8bb:	sti    
  41b8bc:	out    dx,al
  41b8bd:	repnz shr BYTE PTR [ebx-0x59d19756],1
  41b8c4:	adc    BYTE PTR [ebp+0x74],ch
  41b8c7:	(bad)  
  41b8c9:	mov    ch,BYTE PTR [ecx]
  41b8cb:	stc    
  41b8cc:	jae    0x41b937
  41b8ce:	mov    DWORD PTR [esi+ebx*8+0x79e1a8d1],edx
  41b8d5:	mov    ecx,DWORD PTR ds:0xbcef04fd
  41b8db:	repnz (bad) 
  41b8dd:	cmp    DWORD PTR [ebx-0x7],esi
  41b8e0:	mov    ch,BYTE PTR [ebx+0x6acaaab1]
  41b8e6:	pop    ecx
  41b8e7:	(bad)  
  41b8e8:	pop    ss
  41b8e9:	mov    gs,WORD PTR [ecx+0x1f]
  41b8ec:	sub    al,0xee
  41b8ee:	(bad)  [edx+ebx*4-0x421a393d]
  41b8f5:	ins    DWORD PTR es:[edi],dx
  41b8f6:	mov    al,0x5c
  41b8f8:	lods   eax,DWORD PTR ds:[esi]
  41b8f9:	pop    ss
  41b8fa:	test   DWORD PTR [edx],ebp
  41b8fc:	loop   0x41b8f1
  41b8fe:	aaa    
  41b8ff:	jmp    0x41b894
  41b901:	push   edi
  41b902:	sbb    esp,DWORD PTR [ecx-0x35]
  41b905:	inc    eax
  41b906:	mov    bl,0x83
  41b908:	retf   0xbed1
  41b90b:	aas    
  41b90c:	adc    eax,0x43781b7b
  41b911:	das    
  41b912:	and    ah,BYTE PTR [edx+0x51]
  41b915:	jmp    0xb2fe495c
  41b91a:	mov    ah,0x2c
  41b91c:	jbe    0x41b961
  41b91e:	cmc    
  41b91f:	mov    WORD PTR [ebp-0x619c5c17],ss
  41b925:	mov    es,WORD PTR [edx+esi*1]
  41b928:	lahf   
  41b929:	inc    esp
  41b92a:	xor    esi,DWORD PTR [ebx+0x73]
  41b92d:	inc    edi
  41b92e:	sti    
  41b92f:	dec    esp
  41b930:	adc    al,0x88
  41b932:	mov    al,ds:0xe6fb912f
  41b937:	jmp    0xad6bf743
  41b93c:	cs faddp st(7),st
  41b93f:	outs   dx,DWORD PTR ds:[esi]
  41b940:	sub    DWORD PTR [eiz*4+0x715646f5],ecx
  41b947:	xchg   ebp,eax
  41b948:	and    dh,dl
  41b94a:	in     al,0x32
  41b94c:	push   esp
  41b94d:	inc    ebp
  41b94e:	inc    eax
  41b94f:	icebp  
  41b950:	dec    edx
  41b951:	pop    esp
  41b952:	jp     0x41b8e7
  41b954:	(bad)  
  41b955:	bound  ecx,QWORD PTR [edx]
  41b957:	xchg   ebx,eax
  41b958:	shl    BYTE PTR [ebx-0x5260a0e4],1
  41b95e:	popa   
  41b95f:	dec    ecx
  41b960:	cmp    al,0xf
  41b962:	jp     0x41b991
  41b964:	fwait
  41b965:	adc    DWORD PTR [edx+eiz*2],ebp
  41b968:	sub    BYTE PTR [esi+0x5dfadaee],ch
  41b96e:	push   0x768032dd
  41b973:	call   0x7e623476
  41b978:	pop    ebx
  41b979:	jno    0x41b9a5
  41b97b:	hlt    
  41b97c:	jp     0x41b953
  41b97e:	test   DWORD PTR [esi+0x63],esp
  41b981:	jbe    0x41b911
  41b983:	add    eax,0xdee0abf9
  41b988:	lea    edi,[ebx]
  41b98a:	daa    
  41b98b:	loope  0x41b919
  41b98d:	cmp    DWORD PTR [edi+0x61],0x55
  41b991:	adc    DWORD PTR [edi-0x77],edi
  41b994:	sar    DWORD PTR [esi-0xc],0x7b
  41b998:	dec    esi
  41b999:	ret    
  41b99a:	pop    ds
  41b99b:	jb     0x41b9a6
  41b99d:	(bad)  
  41b99e:	mov    eax,0x8a2f1624
  41b9a3:	jecxz  0x41b943
  41b9a5:	mov    bl,0x8f
  41b9a7:	stos   BYTE PTR es:[edi],al
  41b9a8:	pop    esi
  41b9a9:	jmp    0xb910fc2e
  41b9ae:	push   esp
  41b9af:	pop    eax
  41b9b0:	inc    ecx
  41b9b1:	sbb    edx,0x29c46e66
  41b9b7:	xchg   ebp,eax
  41b9b8:	inc    eax
  41b9b9:	pop    ebp
  41b9ba:	add    eax,0xc29f94d3
  41b9bf:	mov    cs,WORD PTR [ebx]
  41b9c1:	dec    ecx
  41b9c2:	rcr    edx,1
  41b9c4:	inc    esi
  41b9c5:	xchg   ebx,eax
  41b9c6:	xor    al,0xa9
  41b9c8:	push   eax
  41b9c9:	fwait
  41b9ca:	mov    al,0x17
  41b9cc:	add    DWORD PTR [eax+0x716a5545],edx
  41b9d2:	inc    edx
  41b9d3:	iret   
  41b9d4:	das    
  41b9d5:	jge    0x41b9a7
  41b9d7:	dec    esp
  41b9d8:	jnp    0x41ba32
  41b9da:	fld    TBYTE PTR [eax-0xc]
  41b9dd:	sub    edi,edi
  41b9df:	jmp    0x49945b09
  41b9e4:	daa    
  41b9e5:	aaa    
  41b9e6:	mov    DWORD PTR [esi-0x275f81c],esp
  41b9ec:	mov    esp,0x49f3f886
  41b9f1:	mov    gs,WORD PTR [ebx+0x30f2d5b8]
  41b9f7:	shl    BYTE PTR [edi],0xa8
  41b9fa:	xor    eax,0xbb041f4f
  41b9ff:	jno    0x41b9eb
  41ba01:	adc    al,0xa2
  41ba03:	in     al,0x30
  41ba05:	cmp    DWORD PTR [ebx],ecx
  41ba07:	cmp    esp,edx
  41ba09:	dec    edx
  41ba0a:	sub    DWORD PTR [edx+0x66],0x30fe4327
  41ba11:	je     0x41b9e2
  41ba13:	outs   dx,BYTE PTR ds:[esi]
  41ba14:	(bad)  
  41ba15:	in     al,0x1
  41ba17:	je     0x41b9f1
  41ba19:	das    
  41ba1a:	loop   0x41b9c4
  41ba1c:	push   0x9be99cb9
  41ba21:	pop    edi
  41ba22:	mov    DWORD PTR [ebx-0x37],ebp
  41ba25:	dec    edi
  41ba26:	lea    esp,[edi-0x9de6223]
  41ba2c:	sub    dh,bh
  41ba2e:	inc    ebx
  41ba2f:	aam    0x66
  41ba31:	loope  0x41ba4b
  41ba33:	adc    eax,0xedf7745d
  41ba38:	mov    eax,0xd0380464
  41ba3d:	pop    eax
  41ba3e:	or     bl,BYTE PTR [ebp+ecx*2+0x6f2ea00b]
  41ba45:	jg     0x41b9d9
  41ba47:	test   BYTE PTR [edx+0x38],dl
  41ba4a:	or     eax,0xa1dd58a1
  41ba4f:	(bad)  
  41ba50:	dec    ecx
  41ba51:	adc    eax,0xa1cbf951
  41ba56:	adc    al,0xcd
  41ba58:	dec    ebx
  41ba59:	jecxz  0x41bacb
  41ba5b:	hlt    
  41ba5c:	xchg   esp,eax
  41ba5d:	adc    BYTE PTR [ecx-0x2a],bh
  41ba60:	in     eax,0xba
  41ba62:	mov    eax,ds:0xc1f0f689
  41ba67:	mov    ecx,0x357086fa
  41ba6c:	lahf   
  41ba6d:	inc    esi
  41ba6e:	shl    edi,cl
  41ba70:	xchg   esp,edi
  41ba72:	xor    eax,0xb3c3da7
  41ba77:	adc    eax,0x36de9cf6
  41ba7c:	xor    DWORD PTR [ecx+0x75],esi
  41ba7f:	inc    esi
  41ba80:	je     0x41ba08
  41ba82:	ja     0x41baf7
  41ba84:	out    0x7f,eax
  41ba86:	dec    esi
  41ba87:	or     bh,al
  41ba89:	nop
  41ba8a:	jnp    0x41ba71
  41ba8c:	(bad)  
  41ba8d:	movsx  ecx,BYTE PTR [ebx-0x49f95192]
  41ba94:	add    BYTE PTR [ebx],ah
  41ba96:	aam    0xb9
  41ba98:	sbb    ah,BYTE PTR [edi+0x1eda9b0e]
  41ba9e:	fist   WORD PTR [edx-0x6abc74b2]
  41baa4:	rcl    DWORD PTR [edx],cl
  41baa6:	sbb    DWORD PTR ds:0x3a5cce42,0x286774fc
  41bab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bab1:	rcl    cl,1
  41bab3:	pop    ecx
  41bab4:	repz hlt 
  41bab6:	std    
  41bab7:	(bad)  
  41bab8:	mov    ecx,0xda117f20
  41babd:	mov    BYTE PTR [eax-0x1a7eed39],0x47
  41bac4:	xchg   bl,dh
  41bac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bac7:	jo     0x41bade
  41bac9:	ror    BYTE PTR [ebx+0x4f1bfed9],1
  41bacf:	popa   
  41bad0:	mov    bh,0xf4
  41bad2:	or     dh,BYTE PTR [ebp-0x2d]
  41bad5:	xchg   edi,eax
  41bad6:	(bad)  
  41bad7:	cmp    eax,0x7b036e7f
  41badc:	mov    esi,0xa7334335
  41bae1:	pop    ebx
  41bae2:	and    eax,0xe37d0295
  41bae7:	enter  0xc20d,0xc3
  41baeb:	dec    eax
  41baec:	loopne 0x41ba77
  41baee:	in     eax,dx
  41baef:	jo     0x41bab0
  41baf1:	fild   DWORD PTR [edi]
  41baf3:	pop    ss
  41baf4:	push   cs
  41baf5:	xlat   BYTE PTR ds:[ebx]
  41baf6:	mov    ch,0xb
  41baf8:	inc    ebp
  41baf9:	cmova  edx,ecx
  41bafc:	pop    edi
  41bafd:	mov    esi,DWORD PTR [edi]
  41baff:	fcmove st,st(7)
  41bb01:	out    0x8e,eax
  41bb03:	jmp    0xd5070e65
  41bb08:	mov    bl,0xc2
  41bb0a:	xor    DWORD PTR [edx-0x4ccd28b7],ecx
  41bb10:	or     ah,BYTE PTR [edi-0x31]
  41bb13:	fnstenv [esi+eiz*1+0x14]
  41bb17:	dec    ecx
  41bb18:	pop    edi
  41bb19:	jmp    0xbb99:0xec9727a7
  41bb20:	pop    ebx
  41bb21:	rcr    DWORD PTR [edi-0x520f5c04],cl
  41bb27:	les    esi,FWORD PTR [edx-0x1c]
  41bb2a:	add    dh,dl
  41bb2c:	mov    cl,0x12
  41bb2e:	(bad)  [edx+ebx*8-0x22062944]
  41bb35:	repnz and BYTE PTR [edx+0x72890fce],bl
  41bb3c:	fimul  DWORD PTR [edx]
  41bb3e:	scas   al,BYTE PTR es:[edi]
  41bb3f:	les    ebx,FWORD PTR [edi+0x1c]
  41bb42:	xchg   esi,eax
  41bb43:	mov    edx,0xaaa8c838
  41bb48:	pop    ebx
  41bb49:	adc    BYTE PTR [ecx],cl
  41bb4b:	adc    DWORD PTR [ebx-0x802f633],edx
  41bb51:	xchg   edx,eax
  41bb52:	int    0x6e
  41bb54:	je     0x41bb2e
  41bb56:	(bad)  
  41bb58:	mov    dh,0x1b
  41bb5a:	mov    ecx,ds
  41bb5c:	repnz mov cl,0x68
  41bb5f:	inc    esi
  41bb60:	inc    esi
  41bb61:	out    0x3d,eax
  41bb63:	enter  0x237b,0xb0
  41bb67:	int3   
  41bb68:	inc    esi
  41bb69:	jmp    0x41baf0
  41bb6b:	retf   0x2aaa
  41bb6e:	jl     0x41bb28
  41bb70:	fisttp WORD PTR [esi+0x48cc267e]
  41bb76:	fwait
  41bb77:	dec    eax
  41bb78:	jecxz  0x41bb25
  41bb7a:	and    edi,DWORD PTR [ecx+0xe]
  41bb7d:	scas   al,BYTE PTR es:[edi]
  41bb7e:	xchg   BYTE PTR [ecx-0xfd1fe9f],cl
  41bb84:	cmp    ebx,DWORD PTR [esi-0x2e]
  41bb87:	pop    edi
  41bb88:	or     al,0x3
  41bb8a:	and    DWORD PTR [edx],ecx
  41bb8c:	cmp    ebp,DWORD PTR [ecx-0x4ca06e35]
  41bb92:	stos   DWORD PTR es:[edi],eax
  41bb93:	inc    edx
  41bb94:	inc    esp
  41bb95:	aad    0x6
  41bb97:	sbb    al,0x3e
  41bb99:	cli    
  41bb9a:	jne    0x41bb3b
  41bb9c:	push   edi
  41bb9d:	xor    DWORD PTR ds:0x9e6390c3,ecx
  41bba3:	sar    eax,cl
  41bba5:	in     eax,0xd3
  41bba7:	imul   esp,DWORD PTR [ecx-0x71e3c6cd],0x3a0134c5
  41bbb1:	(bad)  
  41bbb2:	dec    BYTE PTR [ebp+0x48]
  41bbb5:	fs sub eax,0x997ed54d
  41bbbb:	fcomp  QWORD PTR [esi-0x4d40624c]
  41bbc1:	sub    BYTE PTR [esi-0x1892f3f0],dl
  41bbc7:	or     al,0xb5
  41bbc9:	addr16 jge 0x41bb8b
  41bbcc:	rcr    BYTE PTR [edx+0x4f],cl
  41bbcf:	add    edi,DWORD PTR [ebx]
  41bbd1:	push   edi
  41bbd2:	cmp    DWORD PTR [ebx+0x20d8d810],0xffffffab
  41bbd9:	outs   dx,DWORD PTR ds:[esi]
  41bbda:	dec    edi
  41bbdb:	sbb    eax,0xf3fa2e9e
  41bbe0:	out    dx,eax
  41bbe1:	stc    
  41bbe2:	jmp    0x96874c73
  41bbe7:	mov    cl,0x30
  41bbe9:	enter  0xf9b,0x91
  41bbed:	fwait
  41bbee:	ins    DWORD PTR es:[edi],dx
  41bbef:	lahf   
  41bbf0:	sar    BYTE PTR [ebx],cl
  41bbf2:	lahf   
  41bbf3:	adc    al,al
  41bbf5:	xchg   ebp,eax
  41bbf6:	jp     0x41bc00
  41bbf8:	adc    esp,DWORD PTR [edx]
  41bbfa:	cdq    
  41bbfb:	rcl    DWORD PTR [eax-0x24878693],cl
  41bc01:	out    0xa8,eax
  41bc03:	sbb    BYTE PTR [eax-0x19185850],bl
  41bc09:	xlat   BYTE PTR ds:[ebx]
  41bc0a:	inc    edi
  41bc0b:	or     ch,BYTE PTR [ebp+ebx*2-0x3b]
  41bc0f:	adc    eax,0xa7e47ecf
  41bc14:	xlat   BYTE PTR ds:[ebx]
  41bc15:	ins    BYTE PTR es:[edi],dx
  41bc16:	mov    ah,0x59
  41bc18:	sub    ebx,DWORD PTR [ecx]
  41bc1a:	xchg   edi,ecx
  41bc1c:	mov    WORD PTR [esp+edx*4-0x5f],?
  41bc20:	push   ebp
  41bc21:	jp     0x41bc41
  41bc23:	pop    esi
  41bc24:	repnz retf 
  41bc26:	xor    bl,al
  41bc28:	push   edi
  41bc29:	daa    
  41bc2a:	stos   BYTE PTR es:[edi],al
  41bc2b:	dec    edi
  41bc2c:	push   ebp
  41bc2d:	imul   ebx,DWORD PTR [edi],0xd61cc49d
  41bc33:	mov    bl,0x3a
  41bc35:	mov    edi,?
  41bc37:	cmp    esp,DWORD PTR [edi-0x3d]
  41bc3a:	icebp  
  41bc3b:	xor    al,0xc7
  41bc3d:	(bad)  
  41bc3e:	not    BYTE PTR ds:0x434a03f4
  41bc44:	mov    ch,0x1b
  41bc46:	repz sti 
  41bc48:	jmp    0xcd858f3b
  41bc4d:	cmp    DWORD PTR [ecx-0x6a3cac91],ebx
  41bc53:	popf   
  41bc54:	push   0x4bbd5688
  41bc59:	mov    eax,ds:0x2126d4bf
  41bc5e:	mov    dh,0x9a
  41bc60:	popf   
  41bc61:	pushf  
  41bc62:	xchg   ebx,eax
  41bc63:	lods   eax,DWORD PTR ds:[esi]
  41bc64:	dec    eax
  41bc65:	out    dx,eax
  41bc66:	mov    ch,0x78
  41bc68:	inc    eax
  41bc69:	pop    edi
  41bc6a:	inc    edi
  41bc6b:	add    ch,BYTE PTR [ecx-0x3d]
  41bc6e:	ins    BYTE PTR es:[edi],dx
  41bc6f:	and    eax,0xe5c9da26
  41bc74:	add    al,0x2b
  41bc76:	out    dx,eax
  41bc77:	jne    0x41bc5d
  41bc79:	(bad)  
  41bc7a:	ficom  WORD PTR [esi+0x7308156]
  41bc80:	pop    ebp
  41bc81:	xchg   DWORD PTR [ecx],ecx
  41bc83:	xchg   esp,eax
  41bc84:	dec    ebp
  41bc85:	lods   al,BYTE PTR ds:[esi]
  41bc86:	ror    BYTE PTR [edx+ebp*1-0x2f],0x36
  41bc8b:	sub    esp,DWORD PTR [ebp-0x3abf5733]
  41bc91:	arpl   WORD PTR [ecx],cx
  41bc93:	(bad)  
  41bc95:	and    al,0xe3
  41bc97:	pop    eax
  41bc98:	loopne 0x41bc6a
  41bc9a:	fcmovbe st,st(3)
  41bc9c:	mov    esi,0xf7ddc9d9
  41bca1:	push   esp
  41bca2:	mov    ch,0xa
  41bca4:	fistp  QWORD PTR [edx+0x6955c2e0]
  41bcaa:	cwde   
  41bcab:	pop    esi
  41bcac:	imul   ecx,esp,0x5f287893
  41bcb2:	js     0x41bc34
  41bcb4:	rcr    BYTE PTR [ecx-0x78e49977],0xdc
  41bcbb:	dec    edx
  41bcbc:	aaa    
  41bcbd:	jbe    0x41bc8a
  41bcbf:	enter  0x796,0x9e
  41bcc3:	repnz fcom DWORD PTR [eax]
  41bcc6:	dec    ecx
  41bcc7:	dec    ebx
  41bcc8:	(bad)  
  41bcc9:	aam    0x2b
  41bccb:	retf   
  41bccc:	stos   BYTE PTR es:[edi],al
  41bccd:	sbb    BYTE PTR [ecx+eiz*8+0x3d],0xeb
  41bcd2:	sahf   
  41bcd3:	pop    ecx
  41bcd4:	out    dx,eax
  41bcd5:	pop    ss
  41bcd6:	retf   
  41bcd7:	mov    esi,0x82c25266
  41bcdc:	retf   0x9125
  41bcdf:	cmp    ecx,esp
  41bce1:	dec    ecx
  41bce2:	pop    ebp
  41bce3:	mov    bl,0x4f
  41bce5:	leave  
  41bce6:	(bad)  [eax+0x71]
  41bce9:	add    eax,0x522de422
  41bcee:	in     eax,0xb5
  41bcf0:	pop    eax
  41bcf1:	mov    cl,0x7c
  41bcf3:	xor    BYTE PTR [ebx+ebp*4],dh
  41bcf6:	ja     0x41bd0b
  41bcf8:	scas   al,BYTE PTR es:[edi]
  41bcf9:	ins    DWORD PTR es:[edi],dx
  41bcfa:	loope  0x41bd74
  41bcfc:	js     0x41bcba
  41bcfe:	push   esp
  41bcff:	mov    ah,0x1d
  41bd01:	ins    BYTE PTR es:[edi],dx
  41bd02:	ds xchg ecx,eax
  41bd04:	pop    esi
  41bd05:	sbb    al,0x92
  41bd07:	repnz push esp
  41bd09:	sbb    BYTE PTR [ebx],0xfc
  41bd0c:	jmp    0x4d65b23a
  41bd11:	jl     0x41bc93
  41bd13:	call   0xc431:0xc3883a32
  41bd1a:	int3   
  41bd1b:	clc    
  41bd1c:	pop    ebp
  41bd1d:	pop    ds
  41bd1e:	add    cl,BYTE PTR [edi+eax*8-0x45]
  41bd22:	daa    
  41bd23:	scas   al,BYTE PTR es:[edi]
  41bd24:	dec    edx
  41bd25:	fs mov ah,0x5c
  41bd28:	mov    ch,BYTE PTR [edi+eax*8+0xe]
  41bd2c:	jns    0x41bcf5
  41bd2e:	aas    
  41bd2f:	and    al,0xb2
  41bd31:	cmp    eax,0xd96ec8ae
  41bd36:	aas    
  41bd37:	adc    al,0x1d
  41bd39:	xchg   ecx,eax
  41bd3a:	mov    ds:0x6d4cbc96,eax
  41bd3f:	pushf  
  41bd40:	dec    esi
  41bd41:	iret   
  41bd42:	xor    ah,BYTE PTR [ebp-0x5c3f1c73]
  41bd48:	imul   ebp,edi,0x71
  41bd4b:	rol    BYTE PTR [ebx],cl
  41bd4d:	mov    ebp,0xc656d60f
  41bd52:	loopne 0x41bd62
  41bd54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd55:	sti    
  41bd56:	push   ebx
  41bd57:	sbb    eax,0xe5333b47
  41bd5c:	ja     0x41bd75
  41bd5e:	add    bh,ah
  41bd60:	sub    al,0x54
  41bd62:	push   cs
  41bd63:	xchg   esp,eax
  41bd64:	mov    ds:0x73bc9f54,al
  41bd69:	cli    
  41bd6a:	mov    esi,0x950602fa
  41bd6f:	xor    BYTE PTR [edi-0x7c],0x7e
  41bd73:	fldz   
  41bd75:	push   edx
  41bd76:	cwde   
  41bd77:	mov    cl,0xb8
  41bd79:	call   0x9c98948a
  41bd7e:	in     eax,dx
  41bd7f:	pop    esi
  41bd80:	add    al,0xc7
  41bd82:	pusha  
  41bd83:	sbb    DWORD PTR [ebx],ecx
  41bd85:	push   edx
  41bd86:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd88:	cmp    eax,0xd602719a
  41bd8d:	or     al,0x35
  41bd8f:	xchg   edi,eax
  41bd90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd91:	arpl   WORD PTR ds:0xba206ac8,bx
  41bd97:	or     eax,0x70fa22cf
  41bd9c:	xchg   BYTE PTR [edx-0x79c6b456],ch
  41bda2:	pop    ebp
  41bda3:	mov    ebx,0xb6ae0eda
  41bda8:	in     al,dx
  41bda9:	adc    eax,0x9f11f944
  41bdae:	fisubr DWORD PTR [edx]
  41bdb0:	xor    BYTE PTR [esi-0x22],0x61
  41bdb4:	sub    BYTE PTR [edi+0x3209f38b],dl
  41bdba:	fidivr WORD PTR [edx-0x69]
  41bdbd:	out    dx,eax
  41bdbe:	add    al,0x56
  41bdc0:	cmp    eax,0xef34d1ba
  41bdc5:	ins    DWORD PTR es:[edi],dx
  41bdc6:	jns    0x41bdfc
  41bdc8:	dec    ecx
  41bdc9:	mov    bh,0x46
  41bdcb:	xor    BYTE PTR [ecx-0x273264c0],dh
  41bdd1:	shl    DWORD PTR [ecx-0x46119789],0x8f
  41bdd8:	xchg   esi,eax
  41bdd9:	popa   
  41bdda:	outs   dx,BYTE PTR ds:[esi]
  41bddb:	iret   
  41bddc:	test   BYTE PTR [esi+esi*2],bh
  41bddf:	pushf  
  41bde0:	fwait
  41bde1:	aas    
  41bde2:	lock sti 
  41bde4:	repz jb 0x41be42
  41bde7:	(bad)  
  41bde8:	(bad)  
  41bde9:	(bad)  
  41bdea:	push   ss
  41bdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdec:	hlt    
  41bded:	pop    ecx
  41bdee:	hlt    
  41bdef:	xchg   esp,eax
  41bdf0:	das    
  41bdf1:	rcr    DWORD PTR [edx+eiz*2-0x4d15cdd9],cl
  41bdf8:	mov    dl,BYTE PTR [eax]
  41bdfa:	fsubr  st(0),st
  41bdfc:	adc    al,0x19
  41bdfe:	cmp    eax,0xfdfa20e3
  41be03:	fisubr DWORD PTR [edi+0x6bf90129]
  41be09:	mov    ebp,0xea62a4bc
  41be0e:	fcmovnu st,st(4)
  41be10:	mov    edi,esp
  41be12:	icebp  
  41be13:	data16 stos BYTE PTR es:[edi],al
  41be15:	and    DWORD PTR [esi+ebp*2+0x3f42e0ed],edx
  41be1c:	and    ebp,DWORD PTR [edx-0x54]
  41be1f:	jp     0x41bdb7
  41be21:	notrack call si
  41be25:	test   DWORD PTR [ecx],ecx
  41be27:	sub    eax,0xbfeb7f0
  41be2c:	or     al,0x6b
  41be2e:	push   0x417b7284
  41be33:	inc    ebx
  41be34:	je     0x41bde8
  41be36:	fiadd  WORD PTR [esi-0x21]
  41be39:	sub    al,0x1d
  41be3b:	inc    ebp
  41be3c:	es popa 
  41be3e:	jnp    0x41be46
  41be40:	iret   
  41be41:	inc    ebp
  41be42:	es xor cl,cl
  41be45:	and    bh,0xb4
  41be48:	mov    al,0x32
  41be4a:	push   ss
  41be4b:	imul   BYTE PTR [esi]
  41be4d:	mov    DWORD PTR [ecx-0x211180b9],esp
  41be53:	rcl    ecx,cl
  41be55:	pop    ecx
  41be56:	and    eax,0xb8702a4f
  41be5b:	mov    dh,0x6d
  41be5d:	mov    ebp,0x7d24ffa3
  41be62:	push   esp
  41be63:	or     eax,0xfc9ad6ea
  41be68:	cld    
  41be69:	inc    eax
  41be6a:	or     al,dh
  41be6c:	test   eax,0xaf5510bb
  41be71:	sar    BYTE PTR [edx+0x55],cl
  41be74:	and    DWORD PTR [edi+0x6],0x2350015d
  41be7b:	push   esp
  41be7c:	popf   
  41be7d:	outs   dx,DWORD PTR ds:[esi]
  41be7e:	fldcw  WORD PTR [ebp-0x59fe2782]
  41be84:	into   
  41be85:	call   0xdb08:0x9cebc0cc
  41be8c:	xor    BYTE PTR [edi-0x31],bh
  41be8f:	xchg   ecx,eax
  41be90:	push   ecx
  41be91:	and    dl,BYTE PTR cs:[edi]
  41be94:	xor    DWORD PTR [edi-0x5d],ecx
  41be97:	xor    WORD PTR [ebx+eax*2],bx
  41be9b:	test   al,0x61
  41be9d:	pop    esi
  41be9e:	pop    edx
  41be9f:	inc    edi
  41bea0:	sub    al,0xea
  41bea2:	idiv   BYTE PTR [edx+0x1f]
  41bea5:	cmp    BYTE PTR [ebx+eax*1-0x438a51f5],ch
  41beac:	(bad)  
  41bead:	hlt    
  41beae:	(bad)  
  41beaf:	rcr    DWORD PTR [eax],cl
  41beb1:	dec    edi
  41beb2:	push   edx
  41beb3:	sub    ebx,DWORD PTR [esi+0x5b5dbb97]
  41beb9:	in     eax,0xfd
  41bebb:	inc    edx
  41bebc:	(bad)  
  41bebe:	fdiv   st(5),st
  41bec0:	out    0x3,al
  41bec2:	jp     0x41bea1
  41bec4:	inc    eax
  41bec5:	clc    
  41bec6:	dec    esp
  41bec7:	adc    eax,edi
  41bec9:	cmp    esi,DWORD PTR [esi-0x47b34e79]
  41becf:	adc    DWORD PTR [esi-0x3],esp
  41bed2:	aas    
  41bed3:	sub    edx,DWORD PTR [edi+0x2b]
  41bed6:	outs   dx,BYTE PTR ds:[esi]
  41bed7:	ins    DWORD PTR es:[edi],dx
  41bed8:	mov    eax,ds:0x3e784058
  41bedd:	or     eax,0x7078ae12
  41bee2:	(bad)  
  41bee3:	xor    bh,cl
  41bee5:	ret    0x7f8
  41bee8:	dec    edx
  41bee9:	or     ebx,eax
  41beeb:	(bad)  
  41beec:	sub    DWORD PTR [esi+0xba96924],edx
  41bef2:	ja     0x41bf0f
  41bef4:	iret   
  41bef5:	sahf   
  41bef6:	fs ja  0x41be9f
  41bef9:	mov    dl,0x32
  41befb:	pop    ecx
  41befc:	iret   
  41befd:	fmul   DWORD PTR [ebx+0x15]
  41bf00:	mov    ?,WORD PTR [esi-0x2b]
  41bf03:	jl     0x41beca
  41bf05:	xor    DWORD PTR [ecx+esi*8],0xf6a9831a
  41bf0c:	cmp    al,0x7
  41bf0e:	jp     0x41bf85
  41bf10:	sub    DWORD PTR [esi+0x70961fa4],esp
  41bf16:	test   ebx,edx
  41bf18:	xchg   esi,eax
  41bf19:	and    DWORD PTR [ebp-0x53cf0a6],edi
  41bf1f:	inc    ebp
  41bf20:	bound  eax,QWORD PTR [edi+0x77]
  41bf23:	mov    DWORD PTR [esi+0x68517b91],ebx
  41bf29:	jo     0x41bf2d
  41bf2b:	outs   dx,BYTE PTR ds:[esi]
  41bf2c:	or     eax,0x61aa122f
  41bf31:	inc    ecx
  41bf32:	hlt    
  41bf33:	push   cs
  41bf34:	mov    WORD PTR [edx],ss
  41bf36:	nop
  41bf37:	out    dx,eax
  41bf38:	dec    esp
  41bf39:	or     al,0x47
  41bf3b:	bound  edi,QWORD PTR [eax-0x4c]
  41bf3e:	call   0xa8a3:0xfdce5f26
  41bf45:	aad    0x76
  41bf47:	pusha  
  41bf48:	cs jge 0x41bee5
  41bf4b:	std    
  41bf4c:	and    bl,cl
  41bf4e:	sahf   
  41bf4f:	jbe    0x41bf4d
  41bf51:	add    DWORD PTR [ebp-0x2d0300af],eax
  41bf57:	sbb    al,bh
  41bf59:	mov    ebx,eax
  41bf5b:	jle    0x41bf7e
  41bf5d:	das    
  41bf5e:	hlt    
  41bf5f:	repz cdq 
  41bf61:	add    BYTE PTR [edx-0x38360695],dh
  41bf67:	call   0xa537:0xe88e7a3
  41bf6e:	call   0x39866105
  41bf73:	push   ecx
  41bf74:	adc    eax,0x974b9c96
  41bf79:	push   0x61
  41bf7b:	mov    ebp,edx
  41bf7d:	pop    ebp
  41bf7e:	jbe    0x41bf02
  41bf80:	mov    dh,0x2d
  41bf82:	dec    esp
  41bf83:	jle    0x41bfad
  41bf85:	lods   al,BYTE PTR ds:[esi]
  41bf86:	push   ss
  41bf87:	hlt    
  41bf88:	push   0x10c28db4
  41bf8d:	ror    DWORD PTR [esi],0x3
  41bf90:	out    dx,eax
  41bf91:	lods   al,BYTE PTR ds:[esi]
  41bf92:	mov    dh,bl
  41bf94:	fwait
  41bf95:	dec    ecx
  41bf96:	aam    0x46
  41bf98:	sbb    al,0x14
  41bf9a:	scas   eax,DWORD PTR es:[edi]
  41bf9b:	sahf   
  41bf9c:	aad    0xe6
  41bf9e:	xchg   ecx,eax
  41bf9f:	xchg   ebp,eax
  41bfa0:	ret    
  41bfa1:	xchg   edx,eax
  41bfa2:	inc    esi
  41bfa3:	jmp    0xc72e8c60
  41bfa8:	repz pop es
  41bfaa:	jne    0x41bf2d
  41bfac:	iret   
  41bfad:	mov    ds:0x1bcbbb11,al
  41bfb2:	arpl   di,dx
  41bfb4:	ja     0x41bf51
  41bfb6:	dec    edi
  41bfb7:	enter  0x6cca,0x8c
  41bfbb:	aaa    
  41bfbc:	mul    BYTE PTR [edx]
  41bfbe:	push   ss
  41bfbf:	lods   eax,DWORD PTR ds:[esi]
  41bfc0:	mov    ebx,0xdfd63d36
  41bfc5:	(bad)  
  41bfc6:	sub    eax,0x709a35c6
  41bfcb:	fild   DWORD PTR ds:0x9be04d44
  41bfd1:	sbb    BYTE PTR [esi-0x3f],bl
  41bfd4:	in     al,0x53
  41bfd6:	ja     0x41bfde
  41bfd8:	jg     0x41bfa5
  41bfda:	jbe    0x41bfe6
  41bfdc:	xor    bh,ah
  41bfde:	mov    eax,ds:0xdfeb3f6e
  41bfe3:	cmp    DWORD PTR [esi+0x31],edi
  41bfe6:	adc    edi,DWORD PTR [ecx+0x4b37f390]
  41bfec:	dec    eax
  41bfed:	dec    ebp
  41bfee:	jecxz  0x41c063
  41bff0:	(bad)  
  41bff1:	cmp    DWORD PTR ss:[eax],esp
  41bff4:	xor    edi,ebx
  41bff6:	xchg   esi,eax
  41bff7:	pop    esp
  41bff8:	lods   eax,DWORD PTR ds:[esi]
  41bff9:	push   esi
  41bffa:	in     eax,dx
  41bffb:	pop    ecx
  41bffc:	in     al,0x7b
  41bffe:	sbb    ebp,DWORD PTR [ebp+0x29b45967]
  41c004:	cli    
  41c005:	or     DWORD PTR [edx+0x64effe13],ebp
  41c00b:	mov    dl,0x96
  41c00d:	mov    bl,0x2d
  41c00f:	fistp  WORD PTR [edx+eax*4]
  41c012:	pop    ebx
  41c013:	test   DWORD PTR [ebx+0x52],esi
  41c016:	cmc    
  41c017:	cmp    al,0xfa
  41c019:	arpl   dx,ax
  41c01b:	in     eax,dx
  41c01c:	dec    eax
  41c01d:	cmp    BYTE PTR [ecx],0x17
  41c020:	mov    WORD PTR [ecx+0x45],gs
  41c023:	test   al,0x8e
  41c025:	cwde   
  41c026:	in     eax,0xf2
  41c028:	cmp    BYTE PTR [ebx-0x9],cl
  41c02b:	add    eax,0xf600e7e6
  41c030:	(bad)  
  41c032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c033:	es ins BYTE PTR es:[edi],dx
  41c035:	in     al,dx
  41c036:	into   
  41c037:	xor    BYTE PTR [ecx+eax*4],dl
  41c03a:	mov    ecx,0x4f0845
  41c03f:	jg     0x41c016
  41c041:	ss pop es
  41c043:	fistp  DWORD PTR [ebx+0x6e94e8fb]
  41c049:	mov    ebp,0xea680e89
  41c04e:	pop    ecx
  41c04f:	rcr    dh,1
  41c051:	bndstx [ebx+0x4876896b],(bad)
  41c058:	ds retf 
  41c05a:	ins    BYTE PTR es:[edi],dx
  41c05b:	add    ebp,ebp
  41c05d:	xchg   BYTE PTR [edx+0x12],ah
  41c060:	push   esi
  41c061:	(bad)
  41c064:	fdivr  QWORD PTR [ebx]
  41c066:	xchg   ebx,eax
  41c067:	retf   
  41c068:	scas   eax,DWORD PTR es:[edi]
  41c069:	mov    eax,0xa48a8032
  41c06e:	push   ebp
  41c06f:	and    eax,0xa7583ba4
  41c074:	ficomp WORD PTR [edi+0x69]
  41c077:	stc    
  41c078:	imul   edi,DWORD PTR [esi-0x5f4cd959],0x5c1c9f03
  41c082:	test   DWORD PTR [bp+di],ecx
  41c085:	xchg   ecx,eax
  41c086:	popf   
  41c087:	add    ebp,DWORD PTR [ecx+0x4]
  41c08a:	xchg   BYTE PTR [ecx-0x509c3dda],al
  41c090:	stos   BYTE PTR es:[edi],al
  41c091:	sti    
  41c092:	adc    dl,ch
  41c094:	int3   
  41c095:	les    esi,FWORD PTR [esi+eax*1]
  41c098:	mov    esp,0x95d3f14a
  41c09d:	imul   eax,ebx,0xfcda4855
  41c0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a4:	jecxz  0x41c0fe
  41c0a6:	pop    esp
  41c0a7:	mov    ecx,0xcbe811a5
  41c0ac:	or     cl,bh
  41c0ae:	dec    ecx
  41c0af:	add    ecx,DWORD PTR gs:[ebp-0x4f]
  41c0b3:	inc    edi
  41c0b4:	pop    ss
  41c0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0b6:	jecxz  0x41c0d7
  41c0b8:	sbb    ebp,DWORD PTR [ebx+ebp*4-0x3e]
  41c0bc:	aas    
  41c0bd:	aad    0xe7
  41c0bf:	jl     0x41c0c5
  41c0c1:	fisttp DWORD PTR ds:[ecx+0x44]
  41c0c5:	sub    ebx,DWORD PTR ds:0x7f905d9f
  41c0cb:	mov    edi,0xa4ded12d
  41c0d0:	outs   dx,BYTE PTR ds:[esi]
  41c0d1:	adc    BYTE PTR [ecx-0x526eba3e],0x43
  41c0d8:	mov    fs,WORD PTR [ebp-0x2164f03f]
  41c0de:	fs jmp 0xf5b4:0x6db8428d
  41c0e6:	push   eax
  41c0e7:	pop    ebx
  41c0e8:	(bad)  
  41c0ea:	jl     0x41c0e8
  41c0ec:	(bad)  
  41c0ed:	jmp    0x93e0a54b
  41c0f2:	inc    eax
  41c0f3:	add    al,0xd6
  41c0f5:	stos   BYTE PTR es:[edi],al
  41c0f6:	mov    ebx,0x1fa2af72
  41c0fb:	cwde   
  41c0fc:	fisubr WORD PTR [ebp-0x7d]
  41c0ff:	jl     0x41c095
  41c101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c102:	dec    edx
  41c103:	clc    
  41c104:	cld    
  41c105:	aas    
  41c106:	sub    DWORD PTR [ebx],esp
  41c108:	repz push 0xa5a53ce3
  41c10e:	xchg   esp,eax
  41c10f:	jp     0x41c153
  41c111:	xor    DWORD PTR [ebp-0x69],ebp
  41c114:	pop    ss
  41c115:	lock adc eax,0xd7b5f687
  41c11b:	push   ebx
  41c11c:	sbb    al,0x27
  41c11e:	ins    WORD PTR es:[edi],dx
  41c120:	int    0x5d
  41c122:	test   eax,0x807ff465
  41c127:	pusha  
  41c128:	sub    al,0x6d
  41c12a:	jo     0x41c11e
  41c12c:	inc    eax
  41c12d:	stc    
  41c12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12f:	dec    ecx
  41c130:	iret   
  41c131:	or     BYTE PTR [esi+0x21725613],ah
  41c137:	dec    esp
  41c138:	xor    DWORD PTR [eax-0xb],ecx
  41c13b:	clc    
  41c13c:	lods   al,BYTE PTR ds:[esi]
  41c13d:	imul   edx,ecx,0xffffff94
  41c140:	repnz xlat BYTE PTR ds:[ebx]
  41c142:	in     al,0x76
  41c144:	inc    ebp
  41c145:	push   ss
  41c146:	jo     0x41c1a3
  41c148:	mov    al,0x7f
  41c14a:	xor    DWORD PTR [edx-0x42],ebp
  41c14d:	inc    edx
  41c14e:	fisttp QWORD PTR [eax-0xd]
  41c151:	add    bl,bh
  41c153:	pop    edx
  41c154:	loopne 0x41c108
  41c156:	pushf  
  41c157:	dec    ecx
  41c158:	pop    ss
  41c159:	push   0x271ea30b
  41c15e:	shl    BYTE PTR [ecx+0x42],0xc4
  41c162:	daa    
  41c163:	popf   
  41c164:	cld    
  41c165:	push   cs
  41c166:	scas   eax,DWORD PTR es:[edi]
  41c167:	jne    0x41c1e5
  41c169:	cmp    al,ch
  41c16b:	out    0x1a,eax
  41c16d:	pop    esp
  41c16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c16f:	and    cl,0xba
  41c172:	pop    ss
  41c173:	outs   dx,BYTE PTR ds:[esi]
  41c174:	mov    esp,0x1540033e
  41c179:	add    DWORD PTR [eax-0x52],eax
  41c17c:	pop    ds
  41c17d:	sub    DWORD PTR [ebx],ebx
  41c17f:	xchg   edx,eax
  41c180:	cli    
  41c181:	mov    ebp,0xae3745b6
  41c186:	or     al,0xea
  41c188:	shl    DWORD PTR [ebx+0x0],cl
  41c18b:	mov    dl,0x31
  41c18d:	in     eax,dx
  41c18e:	fsubr  DWORD PTR es:[esi+0x11]
  41c192:	sbb    esi,DWORD PTR cs:[ebx+0x4944bc0f]
  41c199:	outs   dx,DWORD PTR ds:[esi]
  41c19a:	push   esi
  41c19b:	sub    al,0x16
  41c19d:	dec    ebp
  41c19e:	mov    al,ds:0xc35bc236
  41c1a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1a4:	ror    DWORD PTR [esi-0x1981929e],1
  41c1aa:	jne    0x41c18e
  41c1ac:	and    ch,BYTE PTR [edi+ebx*2]
  41c1af:	popf   
  41c1b0:	and    al,BYTE PTR ds:0xf4dd591d
  41c1b6:	imul   BYTE PTR [ebx-0x1f]
  41c1b9:	(bad)  
  41c1ba:	fisub  WORD PTR [ebp+0x2ecc6275]
  41c1c0:	nop
  41c1c1:	sub    DWORD PTR [ecx-0x25a00298],esi
  41c1c7:	gs and al,0x17
  41c1ca:	mov    esp,0x14c04092
  41c1cf:	cmp    al,0x52
  41c1d1:	mov    ch,0xbb
  41c1d3:	(bad)  
  41c1d4:	dec    ebx
  41c1d5:	push   DWORD PTR [ebp-0x6b]
  41c1d8:	call   0xbb1f:0x50dbfb6f
  41c1df:	addr16 inc eax
  41c1e1:	jnp    0x41c1dd
  41c1e3:	pop    edx
  41c1e4:	ds jp  0x41c1b2
  41c1e7:	inc    edi
  41c1e8:	aas    
  41c1e9:	mov    edi,0x6f34982c
  41c1ee:	fsubr  QWORD PTR [edx+0x35]
  41c1f1:	mov    esi,0x29096ce7
  41c1f6:	adc    eax,0xf902f9a9
  41c1fb:	and    ch,0x9c
  41c1fe:	add    DWORD PTR [esi],esi
  41c200:	add    BYTE PTR [ecx],ch
  41c202:	test   al,0x33
  41c204:	in     al,0x7c
  41c206:	pop    ebp
  41c207:	inc    ebx
  41c208:	out    0x40,eax
  41c20a:	cmc    
  41c20b:	adc    BYTE PTR [ebx+0x5003e693],dh
  41c211:	scas   eax,DWORD PTR es:[edi]
  41c212:	addr16 pop eax
  41c214:	xlat   BYTE PTR ds:[ebx]
  41c215:	push   ss
  41c216:	loop   0x41c1d1
  41c218:	jo     0x41c221
  41c21a:	mov    ecx,0x53097cef
  41c21f:	daa    
  41c220:	(bad)  
  41c221:	mov    ds:0x12d55e98,al
  41c226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c227:	ins    BYTE PTR es:[edi],dx
  41c228:	pop    ebx
  41c229:	cmp    ebp,ebp
  41c22b:	in     al,0x4a
  41c22d:	inc    ebp
  41c22e:	cld    
  41c22f:	mov    eax,0x4ee4eb4b
  41c234:	sbb    eax,0xca0959d2
  41c239:	mov    eax,0x3a25ec56
  41c23e:	xlat   BYTE PTR ds:[ebx]
  41c23f:	fiadd  DWORD PTR [ebx+edi*8-0x1bdc7509]
  41c246:	pop    edx
  41c247:	ret    0x2cc5
  41c24a:	mov    ecx,DWORD PTR [ebp+0x43a3e799]
  41c250:	adc    bh,BYTE PTR [edi]
  41c252:	hlt    
  41c253:	mov    ds:0xbcba9b44,al
  41c258:	push   ss
  41c259:	rcr    DWORD PTR [ebp+0x17ec4452],cl
  41c25f:	push   esp
  41c260:	sub    eax,0x1df6cfa9
  41c265:	leave  
  41c266:	cli    
  41c267:	or     eax,0x825c4621
  41c26c:	data16 mov BYTE PTR [ebx*8+0xff5358f],ch
  41c274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c275:	cld    
  41c276:	pop    bx
  41c278:	(bad)
  41c27b:	xchg   DWORD PTR ds:0x111a300,edi
  41c281:	sub    edi,eax
  41c283:	or     ebx,edi
  41c285:	je     0x41c237
  41c287:	popf   
  41c288:	adc    esp,DWORD PTR [esi+0x59]
  41c28b:	mov    edx,0x5ef13e66
  41c290:	scas   al,BYTE PTR es:[edi]
  41c291:	aas    
  41c292:	adc    DWORD PTR [esi],ebp
  41c294:	ins    DWORD PTR es:[edi],dx
  41c295:	fdiv   DWORD PTR [eax-0x4ae416ee]
  41c29b:	sbb    BYTE PTR [ecx+0x3736d9d8],al
  41c2a1:	pop    eax
  41c2a2:	sbb    BYTE PTR [edx-0x6ae092eb],bl
  41c2a8:	pop    ss
  41c2a9:	mov    ebx,0x75213b09
  41c2ae:	shl    DWORD PTR [ebp-0xd],cl
  41c2b1:	sbb    ebx,DWORD PTR [ebp+0x7c7ae4b6]
  41c2b7:	pop    edx
  41c2b8:	out    0xea,al
  41c2ba:	jg     0x41c299
  41c2bc:	jnp    0x41c2d7
  41c2be:	cmp    ebx,esp
  41c2c0:	fidiv  WORD PTR [ecx+0x54]
  41c2c3:	shl    BYTE PTR [ecx-0x55],0xa
  41c2c7:	ret    
  41c2c8:	pop    edi
  41c2c9:	shr    ebp,cl
  41c2cb:	add    DWORD PTR [esi+0x37],0x2a6068f4
  41c2d2:	push   ds
  41c2d3:	and    ecx,DWORD PTR [esi+ecx*2-0x17ddd3ee]
  41c2da:	fcom   DWORD PTR ds:0x1667cee6
  41c2e0:	loopne 0x41c313
  41c2e2:	add    eax,DWORD PTR [edx+0x6555451d]
  41c2e8:	jns    0x41c31f
  41c2ea:	adc    ch,BYTE PTR [esi]
  41c2ec:	sub    eax,eax
  41c2ee:	aam    0xf
  41c2f0:	mov    ecx,0xe1d065da
  41c2f5:	les    esp,FWORD PTR [esi-0x68]
  41c2f8:	push   0xffffffbc
  41c2fa:	mov    ch,0xe0
  41c2fc:	in     eax,0x92
  41c2fe:	loope  0x41c2fa
  41c300:	add    eax,0x69a540ad
  41c305:	sbb    eax,0xdb5052cf
  41c30a:	adc    cl,BYTE PTR ds:0x35510b2d
  41c310:	sub    BYTE PTR [ecx+0xd],bh
  41c313:	stos   BYTE PTR es:[edi],al
  41c314:	dec    ecx
  41c315:	inc    ebp
  41c316:	adc    esi,DWORD PTR [eax+0x6b]
  41c319:	test   BYTE PTR [esi-0x29],cl
  41c31c:	fwait
  41c31d:	dec    ecx
  41c31e:	mov    edx,0x663442c5
  41c323:	dec    esi
  41c324:	push   ebx
  41c325:	push   cs
  41c326:	gs popf 
  41c328:	shl    dl,1
  41c32a:	dec    edx
  41c32b:	push   ss
  41c32c:	add    DWORD PTR [bp+si-0x24],0xffffff95
  41c331:	add    bl,BYTE PTR [edx-0x11]
  41c334:	add    eax,DWORD PTR [ecx-0x3]
  41c337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c338:	xchg   ecx,eax
  41c339:	xchg   ebx,eax
  41c33a:	aas    
  41c33b:	inc    ebp
  41c33c:	fstp   QWORD PTR [ecx]
  41c33e:	dec    edx
  41c33f:	xlat   BYTE PTR ds:[ebx]
  41c340:	js     0x41c30e
  41c342:	mov    DWORD PTR [esi-0x23],esi
  41c345:	js     0x41c38e
  41c347:	or     DWORD PTR [ebx-0x5b],esp
  41c34a:	mov    ah,0x53
  41c34c:	or     bl,BYTE PTR [edi]
  41c34e:	cmc    
  41c34f:	aam    0x72
  41c351:	out    dx,eax
  41c352:	fcom   QWORD PTR [ebp-0x32]
  41c355:	jne    0x41c398
  41c357:	mul    ebx
  41c359:	sub    BYTE PTR [edx-0x6a],dl
  41c35c:	xchg   edi,eax
  41c35d:	mul    BYTE PTR [eax]
  41c35f:	shl    BYTE PTR [edx-0x6ac2b550],0x5c
  41c366:	sbb    ch,BYTE PTR [ebx+0x4480e736]
  41c36c:	cli    
  41c36d:	imul   ebp,DWORD PTR [edi],0xffffffc7
  41c370:	stc    
  41c371:	out    0x2,al
  41c373:	shr    DWORD PTR [ebx+0xaa2800f],1
  41c379:	cmp    DWORD PTR [edx+ebx*2+0x2c09a790],0x3b
  41c381:	sbb    DWORD PTR [esi],eax
  41c383:	push   ecx
  41c384:	xchg   esi,eax
  41c385:	out    0x17,al
  41c387:	inc    esp
  41c388:	or     al,0xa9
  41c38a:	or     BYTE PTR [ecx],bh
  41c38c:	adc    BYTE PTR [edx+esi*1],cl
  41c38f:	test   DWORD PTR [ebx-0x2832946a],edi
  41c395:	jle    0x41c3a9
  41c397:	sub    eax,0x5e57f62b
  41c39c:	jae    0x41c3e8
  41c39e:	adc    esi,esp
  41c3a0:	div    BYTE PTR [edx]
  41c3a2:	imul   edx
  41c3a4:	pop    esp
  41c3a5:	out    0x78,al
  41c3a7:	lock pop ds
  41c3a9:	cmp    eax,0x3bafb766
  41c3ae:	dec    ebp
  41c3b0:	bound  esp,QWORD PTR [edi+ebx*2]
  41c3b3:	pushf  
  41c3b4:	stc    
  41c3b5:	dec    edi
  41c3b6:	xlat   BYTE PTR ds:[ebx]
  41c3b7:	adc    eax,ebx
  41c3b9:	mov    bl,BYTE PTR [edx]
  41c3bb:	adc    bp,sp
  41c3be:	loope  0x41c3f8
  41c3c0:	pop    ebp
  41c3c1:	adc    eax,0xd8ada2fa
  41c3c6:	push   ss
  41c3c7:	cdq    
  41c3c8:	dec    edi
  41c3c9:	imul   bh
  41c3cb:	cmp    eax,0x9985e1c7
  41c3d0:	comiss xmm7,DWORD PTR [edx+edx*2]
  41c3d4:	jecxz  0x41c3b8
  41c3d6:	inc    edi
  41c3d7:	sbb    eax,0xee88c11a
  41c3dc:	into   
  41c3dd:	lahf   
  41c3de:	push   0xfd7c71a5
  41c3e3:	dec    ecx
  41c3e4:	pusha  
  41c3e5:	add    al,0xdc
  41c3e7:	cld    
  41c3e8:	(bad)  
  41c3e9:	es jno 0x41c374
  41c3ec:	or     eax,0xe3127845
  41c3f1:	scas   al,BYTE PTR es:[edi]
  41c3f2:	lods   eax,DWORD PTR ds:[esi]
  41c3f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f4:	jne    0x41c46c
  41c3f6:	adc    ecx,edi
  41c3f8:	inc    edi
  41c3f9:	add    eax,0xfc1f9d4e
  41c3fe:	out    0x16,al
  41c400:	bound  eax,QWORD PTR [edx]
  41c402:	icebp  
  41c403:	lods   al,BYTE PTR ds:[esi]
  41c404:	jbe    0x41c457
  41c406:	pop    ecx
  41c407:	jle    0x41c40a
  41c409:	or     DWORD PTR [ecx+0x7a],ebp
  41c40c:	stc    
  41c40d:	jnp    0x41c39a
  41c40f:	jg     0x41c398
  41c411:	into   
  41c412:	jmp    0xb063c2ac
  41c417:	mov    al,BYTE PTR [eax-0xaad9531]
  41c41d:	in     eax,0xd5
  41c41f:	sbb    ecx,ebp
  41c421:	stc    
  41c422:	aas    
  41c423:	jb     0x41c3d4
  41c425:	mov    ebx,ecx
  41c427:	repz xor al,0x3
  41c42a:	aaa    
  41c42b:	mov    edi,0xf3ccfaa6
  41c430:	add    BYTE PTR [ebp+0x7f],dh
  41c433:	dec    eax
  41c434:	test   DWORD PTR [eax-0x6d],edi
  41c437:	call   0x3ef8:0x7905244e
  41c43e:	sbb    DWORD PTR [ebp+0x2be4a002],eax
  41c444:	cwde   
  41c445:	ins    BYTE PTR es:[edi],dx
  41c446:	push   esi
  41c447:	fwait
  41c448:	or     al,0xa4
  41c44a:	jmp    0x18b4:0x77a86790
  41c451:	cmc    
  41c452:	pop    eax
  41c453:	mov    al,ds:0x4c14caec
  41c458:	or     esp,DWORD PTR [ecx+0x42]
  41c45b:	fmul   st,st(3)
  41c45d:	sub    eax,eax
  41c45f:	(bad)  
  41c460:	cmc    
  41c461:	stos   BYTE PTR es:[edi],al
  41c462:	jnp    0x41c4a3
  41c464:	sbb    BYTE PTR [edx+0x55],dl
  41c467:	dec    ebx
  41c468:	mov    eax,ecx
  41c46a:	sub    eax,0xe971595b
  41c46f:	scas   eax,DWORD PTR es:[edi]
  41c470:	sbb    esp,DWORD PTR [edi-0x2b01256e]
  41c476:	pop    edx
  41c477:	jbe    0x41c4b6
  41c479:	cli    
  41c47a:	jle    0x41c40f
  41c47c:	push   ss
  41c47d:	xchg   ebp,eax
  41c47e:	add    eax,0x40987468
  41c483:	and    esp,edi
  41c485:	mov    ah,0x57
  41c487:	or     dh,BYTE PTR ss:[ebx+0xb]
  41c48b:	mov    edi,0x8afb6712
  41c490:	mov    bx,0x89d4
  41c494:	mov    ah,BYTE PTR [eax+ebp*8-0x713b279a]
  41c49b:	pusha  
  41c49c:	mov    edi,eax
  41c49e:	fcmovne st,st(1)
  41c4a0:	mov    cl,0x9f
  41c4a2:	pushf  
  41c4a3:	(bad)  
  41c4a4:	out    0xa7,eax
  41c4a6:	lds    eax,FWORD PTR [ecx-0x21]
  41c4a9:	xchg   edi,eax
  41c4aa:	stos   BYTE PTR es:[edi],al
  41c4ab:	add    al,ch
  41c4ad:	cmp    dl,BYTE PTR [edi-0xd]
  41c4b0:	ret    0xbcbe
  41c4b3:	xchg   esp,eax
  41c4b4:	cmp    dl,BYTE PTR [edi]
  41c4b6:	mov    eax,ds:0x58a79707
  41c4bb:	into   
  41c4bc:	mov    ebp,0x5fa29ee1
  41c4c1:	cmp    al,0x1
  41c4c3:	push   0x64
  41c4c5:	dec    edi
  41c4c6:	mov    esi,DWORD PTR [ebx-0x49]
  41c4c9:	xor    BYTE PTR [edx-0x30674a2e],ah
  41c4cf:	mov    dl,0x86
  41c4d1:	sbb    bh,BYTE PTR [ebp+0x3d53fe10]
  41c4d7:	pop    edx
  41c4d8:	cld    
  41c4d9:	into   
  41c4da:	sub    dh,dl
  41c4dc:	sbb    al,0xaf
  41c4de:	ret    0x46ed
  41c4e1:	(bad)  
  41c4e2:	retf   
  41c4e3:	adc    BYTE PTR [esi-0x4f],al
  41c4e6:	jg     0x41c4d6
  41c4e8:	in     al,dx
  41c4e9:	xchg   DWORD PTR [edi+0x3a418481],edx
  41c4ef:	xor    BYTE PTR [edi-0x2e],0x84
  41c4f3:	mov    ds:0x490f843,eax
  41c4f8:	or     eax,0x5239dfe9
  41c4fd:	mov    al,0x46
  41c4ff:	cwde   
  41c500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c501:	pop    eax
  41c502:	adc    BYTE PTR [ebp-0x77],al
  41c505:	sbb    BYTE PTR [ebx+0x2e4c0561],dh
  41c50b:	mov    ebx,0xc44a31b2
  41c510:	bound  edi,QWORD PTR [edi]
  41c512:	popa   
  41c513:	std    
  41c514:	add    DWORD PTR [edx-0x60],eax
  41c517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c518:	xchg   al,ch
  41c51a:	dec    edx
  41c51b:	inc    ebp
  41c51c:	pop    DWORD PTR [esi+ebp*4-0x3afb7af4]
  41c523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c524:	adc    al,0x96
  41c526:	mov    WORD PTR [esi-0x5bbcedb9],es
  41c52c:	lods   al,BYTE PTR ds:[esi]
  41c52d:	fs jecxz 0x41c4c9
  41c530:	fstp   TBYTE PTR [ebx]
  41c532:	call   0xb6fd:0x76c5019f
  41c539:	(bad)  
  41c53a:	cld    
  41c53b:	lock and BYTE PTR [edi],al
  41c53e:	inc    esp
  41c53f:	gs add eax,edi
  41c542:	and    DWORD PTR [edx+0x7e],esp
  41c545:	mov    BYTE PTR [ebx+ecx*2-0x1a],dh
  41c549:	dec    edi
  41c54a:	inc    ecx
  41c54b:	loop   0x41c5bf
  41c54d:	xor    al,0xe1
  41c54f:	dec    edx
  41c550:	(bad)  
  41c551:	push   ecx
  41c552:	pop    ss
  41c553:	(bad)  
  41c554:	js     0x41c5a9
  41c556:	out    dx,al
  41c557:	push   0xffffffdf
  41c559:	cmp    ah,dl
  41c55b:	aad    0xdb
  41c55d:	je     0x41c561
  41c55f:	pop    ebp
  41c560:	(bad)  
  41c561:	mov    WORD PTR [ebx],ds
  41c563:	nop
  41c564:	data16 je 0x41c51f
  41c567:	mov    eax,0x98f8d88b
  41c56c:	mov    edi,0xa26b6ca9
  41c571:	add    DWORD PTR [ebp+edx*1+0x1e],esi
  41c575:	ja     0x41c5cb
  41c577:	test   al,0x42
  41c579:	or     esp,eax
  41c57b:	fcomp  DWORD PTR [ebp+eax*8+0x1c]
  41c57f:	xor    eax,0x97ef635d
  41c584:	sar    al,cl
  41c586:	xchg   ebx,eax
  41c587:	inc    edx
  41c588:	pop    ss
  41c589:	enter  0x829,0x95
  41c58d:	ja     0x41c53d
  41c58f:	pop    ss
  41c590:	push   esp
  41c591:	adc    DWORD PTR [edx-0x268e1a4a],0x4bc672ff
  41c59b:	ror    DWORD PTR [esi-0x3bf1995f],cl
  41c5a1:	xchg   esp,eax
  41c5a2:	xor    edx,eax
  41c5a4:	fnstsw WORD PTR [edi+0x2e]
  41c5a7:	(bad)  
  41c5a8:	in     al,0x10
  41c5aa:	aam    0x51
  41c5ac:	xchg   ecx,eax
  41c5ad:	inc    esi
  41c5ae:	movaps xmm5,xmm3
  41c5b1:	cmp    DWORD PTR [edi],eax
  41c5b3:	mov    ch,0x4
  41c5b5:	cmp    edi,DWORD PTR [edx-0x4249042f]
  41c5bb:	pop    esi
  41c5bc:	fwait
  41c5bd:	loopne 0x41c5a0
  41c5bf:	dec    esi
  41c5c0:	scas   eax,DWORD PTR es:[edi]
  41c5c1:	popa   
  41c5c2:	adc    BYTE PTR [edi+0x7c],dl
  41c5c5:	test   DWORD PTR [edx-0x69425e6b],edi
  41c5cb:	push   ecx
  41c5cc:	mov    dh,0xe6
  41c5ce:	enter  0xbe99,0x5d
  41c5d2:	sub    al,0x43
  41c5d4:	push   edx
  41c5d5:	dec    edi
  41c5d6:	xchg   edi,eax
  41c5d7:	jmp    0xc4cd:0x8f69e737
  41c5de:	jecxz  0x41c642
  41c5e0:	into   
  41c5e1:	icebp  
  41c5e2:	js     0x41c59a
  41c5e4:	inc    ecx
  41c5e5:	addr16 jg 0x41c5d6
  41c5e8:	xor    eax,0x59db3e5d
  41c5ed:	adc    DWORD PTR [eax-0x4],ecx
  41c5f0:	and    edx,DWORD PTR [edi-0x2e]
  41c5f3:	cld    
  41c5f4:	rol    BYTE PTR [eax+0x20a77e55],0x68
  41c5fb:	outs   dx,BYTE PTR ds:[esi]
  41c5fc:	push   cs
  41c5fd:	add    DWORD PTR [eax-0x689865be],esp
  41c603:	mov    ebx,0xccc3e9d1
  41c608:	out    dx,al
  41c609:	jmp    0xeca3:0x12b2
  41c60f:	mov    ebx,0xeaa239f6
  41c614:	xor    al,0x37
  41c616:	cdq    
  41c617:	aas    
  41c618:	(bad)  
  41c619:	push   ss
  41c61a:	jb     0x41c5fa
  41c61c:	arpl   WORD PTR [esi-0x50],bx
  41c61f:	xchg   esp,eax
  41c620:	outs   dx,DWORD PTR ds:[esi]
  41c621:	loop   0x41c644
  41c623:	and    al,0x31
  41c625:	aas    
  41c626:	leave  
  41c627:	cmp    dl,bh
  41c629:	add    cl,cl
  41c62b:	mov    eax,0x60db7782
  41c630:	cmp    eax,0xc3c6bb7b
  41c635:	adc    BYTE PTR [edi+0x25],bl
  41c638:	push   esp
  41c639:	in     eax,dx
  41c63a:	sar    DWORD PTR [ecx-0x27],0xd0
  41c63e:	mul    eax
  41c640:	or     eax,0x2eb56d1d
  41c645:	xor    DWORD PTR [esi],0x4f
  41c648:	mov    ebp,0xcb8e7f4b
  41c64d:	je     0x41c662
  41c64f:	sbb    DWORD PTR [ecx+0x5dba0f50],eax
  41c655:	sbb    edx,DWORD PTR [edx+0x53]
  41c658:	test   al,0xcc
  41c65a:	xchg   BYTE PTR [ebp+ecx*2-0x2d],cl
  41c65e:	mov    ds,ebx
  41c660:	and    al,0x5a
  41c662:	mov    dl,BYTE PTR [ecx+0x24]
  41c665:	cmp    ebx,ebx
  41c667:	xor    al,0xb3
  41c669:	hlt    
  41c66a:	or     BYTE PTR [eax+0x4192b6a7],cl
  41c670:	jae    0x41c6ba
  41c672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c673:	out    0x9a,al
  41c675:	mov    al,ds:0x427d0c1a
  41c67a:	into   
  41c67b:	push   eax
  41c67c:	mov    eax,0x81d8fcc1
  41c681:	mov    eax,0x82c33464
  41c686:	add    dh,BYTE PTR [eax+ebx*2-0x6e]
  41c68a:	sbb    al,BYTE PTR [edx-0x71]
  41c68d:	xchg   DWORD PTR [esi+0x72],esi
  41c690:	jecxz  0x41c63e
  41c692:	mov    WORD PTR [esi+0x24],gs
  41c695:	mov    al,ds:0x3b9f90e2
  41c69a:	inc    ecx
  41c69b:	xchg   edi,eax
  41c69c:	fiadd  WORD PTR [eax]
  41c69e:	pop    ds
  41c69f:	mov    BYTE PTR [edx],dh
  41c6a1:	nop
  41c6a2:	stos   BYTE PTR es:[edi],al
  41c6a3:	xor    eax,0xb633b9cd
  41c6a8:	in     al,dx
  41c6a9:	out    0x6b,eax
  41c6ab:	inc    ebp
  41c6ac:	std    
  41c6ad:	jno    0x41c705
  41c6af:	mov    bh,0x57
  41c6b1:	popf   
  41c6b2:	rcr    edi,0x10
  41c6b5:	das    
  41c6b6:	test   BYTE PTR [esi],al
  41c6b8:	sbb    eax,0xe58bb754
  41c6bd:	cmp    eax,0x26f10fa8
  41c6c2:	pop    eax
  41c6c3:	int3   
  41c6c4:	jnp    0x41c6ad
  41c6c6:	or     BYTE PTR [edi-0x67],dh
  41c6c9:	int    0x6f
  41c6cb:	int3   
  41c6cc:	pop    es
  41c6cd:	and    al,0x52
  41c6d0:	lods   eax,DWORD PTR ds:[esi]
  41c6d1:	in     eax,0x4a
  41c6d3:	push   edx
  41c6d4:	inc    ebp
  41c6d5:	inc    ecx
  41c6d6:	jbe    0x41c73e
  41c6d8:	adc    bh,BYTE PTR [ebx-0x7b]
  41c6db:	xor    dl,bl
  41c6dd:	or     al,0x64
  41c6df:	fisub  WORD PTR [esi+0x482b20ab]
  41c6e5:	cld    
  41c6e6:	in     al,dx
  41c6e7:	mov    gs,WORD PTR [ecx+0x523ae5ab]
  41c6ed:	adc    BYTE PTR [ebx+0x3cbb4ea5],al
  41c6f3:	sbb    eax,0xbc85a7cc
  41c6f8:	sub    al,0x50
  41c6fa:	cdq    
  41c6fb:	mov    eax,ds:0x4c75a576
  41c700:	ds sti 
  41c702:	jbe    0x41c765
  41c704:	adc    ecx,DWORD PTR [ecx-0x7a6151d3]
  41c70a:	es in  eax,0x9f
  41c70d:	int    0xd9
  41c70f:	stos   DWORD PTR es:[edi],eax
  41c710:	(bad)  
  41c711:	out    dx,eax
  41c712:	daa    
  41c713:	cdq    
  41c714:	jno    0x41c776
  41c716:	jmp    0x37cd:0x5f3bc384
  41c71d:	mov    esi,0xbed6f3e2
  41c722:	cmc    
  41c723:	jmp    0x9747f98d
  41c728:	rcl    DWORD PTR [ebp-0x45],0x70
  41c72c:	rol    ebp,cl
  41c72e:	int    0x99
  41c730:	xor    DWORD PTR [ecx],eax
  41c732:	mov    eax,0xd2f85477
  41c737:	fdiv   QWORD PTR [esi+0x6d]
  41c73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73b:	mov    ds:0xddefda6,al
  41c740:	xchg   BYTE PTR [ebp+0x2b],cl
  41c743:	inc    edi
  41c744:	test   edi,ecx
  41c746:	enter  0xcd43,0x7b
  41c74a:	xchg   esi,eax
  41c74b:	jns    0x41c745
  41c74d:	dec    ebx
  41c74e:	xchg   ecx,eax
  41c74f:	ret    0x45cd
  41c752:	(bad)  
  41c753:	cmp    edx,ecx
  41c755:	mov    cl,0x4b
  41c757:	push   ecx
  41c758:	mov    esi,0x3fda1309
  41c75d:	es jnp 0x41c708
  41c760:	mov    edx,0x3d98cff5
  41c765:	jnp    0x41c73d
  41c767:	pop    esp
  41c768:	adc    dl,BYTE PTR [ebx]
  41c76a:	xor    DWORD PTR [ebp-0x54],esp
  41c76d:	adc    eax,0x7bf786e9
  41c772:	pushf  
  41c773:	mov    edi,0x9961b884
  41c778:	gs mov ecx,0x6e68291
  41c77e:	mov    bh,dl
  41c780:	js     0x41c73b
  41c782:	and    ecx,eax
  41c784:	push   0x36f4ca97
  41c789:	out    dx,al
  41c78a:	pop    ecx
  41c78b:	mov    BYTE PTR [ebp+esi*4-0x5f],0x7
  41c790:	clc    
  41c791:	test   BYTE PTR [esi-0x71],bh
  41c794:	push   ebx
  41c795:	jecxz  0x41c7c9
  41c797:	jp     0x41c80d
  41c799:	xchg   esp,eax
  41c79a:	icebp  
  41c79b:	test   DWORD PTR [esi-0x2121a63e],edi
  41c7a1:	sbb    DWORD PTR [edi+0x18757826],edi
  41c7a7:	mov    cs,ebp
  41c7a9:	fistp  QWORD PTR [esi+0x61c86f02]
  41c7af:	mov    ds:0xf951f191,eax
  41c7b4:	daa    
  41c7b5:	mov    bl,0xc2
  41c7b7:	jb     0x41c7da
  41c7b9:	pop    edx
  41c7ba:	pushf  
  41c7bb:	and    eax,0xba8c59b6
  41c7c0:	pushf  
  41c7c1:	clc    
  41c7c2:	pop    edx
  41c7c3:	lods   eax,DWORD PTR ds:[esi]
  41c7c4:	ret    
  41c7c5:	mov    ds:0x1796880c,eax
  41c7ca:	sti    
  41c7cb:	jmp    0x3669a56f
  41c7d0:	out    dx,eax
  41c7d1:	push   0x7a06afee
  41c7d6:	scas   eax,DWORD PTR es:[edi]
  41c7d7:	sbb    DWORD PTR [ebx+0x12],edi
  41c7da:	push   ecx
  41c7db:	repz jbe 0x41c78b
  41c7de:	sti    
  41c7df:	ins    BYTE PTR es:[edi],dx
  41c7e0:	pop    eax
  41c7e1:	jmp    0xc1081fad
  41c7e6:	inc    esp
  41c7e7:	mov    cl,BYTE PTR [edx]
  41c7e9:	adc    esp,DWORD PTR [edx+0x5c4843a9]
  41c7ef:	popf   
  41c7f0:	and    dh,BYTE PTR [ebx-0x63353d5]
  41c7f6:	cwde   
  41c7f7:	in     al,0xe3
  41c7f9:	push   cs
  41c7fa:	pop    edx
  41c7fb:	lods   al,BYTE PTR ds:[esi]
  41c7fc:	cdq    
  41c7fd:	iret   
  41c7fe:	test   DWORD PTR [ebx],ecx
  41c800:	pop    es
  41c801:	sbb    bl,BYTE PTR [edx+0x58]
  41c804:	jle    0x41c7f8
  41c806:	lahf   
  41c807:	dec    edx
  41c808:	scas   al,BYTE PTR es:[edi]
  41c809:	scas   eax,DWORD PTR es:[edi]
  41c80a:	push   ss
  41c80b:	mov    al,0xcd
  41c80d:	iret   
  41c80e:	mov    ebp,0xb625e16a
  41c813:	aaa    
  41c814:	pop    ebp
  41c815:	cmp    DWORD PTR [esi],ecx
  41c817:	inc    ebp
  41c818:	sub    eax,0x419a66b
  41c81d:	mov    edi,DWORD PTR [bp+di+0x39]
  41c821:	aas    
  41c822:	sub    BYTE PTR [ecx],dh
  41c824:	mov    edx,DWORD PTR [edi+0x68161b48]
  41c82a:	xor    DWORD PTR [edx],esi
  41c82c:	call   0x3c94:0x4a072275
  41c833:	mov    edx,0xe94a7716
  41c838:	int3   
  41c839:	xor    DWORD PTR [edi*2+0x17c5139e],ebx
  41c840:	push   ds
  41c841:	pop    es
  41c842:	stos   DWORD PTR es:[edi],eax
  41c843:	rol    BYTE PTR [edi-0x39999b95],cl
  41c849:	push   0x23
  41c84b:	sub    al,0x70
  41c84d:	out    0x68,eax
  41c84f:	sbb    eax,0x8c43670a
  41c854:	shr    BYTE PTR [edx-0x3534a202],1
  41c85a:	call   0xa498:0x2fa626d6
  41c861:	loop   0x41c89f
  41c863:	(bad)  
  41c864:	bound  ebp,QWORD PTR [edi]
  41c866:	jne    0x41c856
  41c868:	xchg   ebp,eax
  41c869:	repz stc 
  41c86b:	ds out 0x9a,al
  41c86e:	loop   0x41c877
  41c870:	mov    ch,dl
  41c872:	or     BYTE PTR [esi+0x4a8d728e],bl
  41c878:	push   eax
  41c879:	xor    BYTE PTR [eax-0x710a0f5e],dl
  41c87f:	pop    esi
  41c880:	cmp    dl,BYTE PTR [esi+edx*2-0x1b]
  41c884:	add    dl,BYTE PTR [ebp+0x2f64ff4e]
  41c88a:	xor    edx,DWORD PTR [eax]
  41c88c:	ja     0x41c84e
  41c88e:	adc    ebp,DWORD PTR [esi+0xa575a33]
  41c894:	jmp    0xfb221af3
  41c899:	jle    0x41c8dd
  41c89b:	call   FWORD PTR [ebx-0x12]
  41c89e:	leave  
  41c89f:	repz adc eax,0xdb87e5e7
  41c8a5:	xchg   ecx,eax
  41c8a6:	mov    ecx,0x65e5ecd6
  41c8ab:	stos   DWORD PTR es:[edi],eax
  41c8ac:	dec    edx
  41c8ad:	push   ebp
  41c8ae:	push   esp
  41c8af:	xor    cl,BYTE PTR [eax+0x6b]
  41c8b2:	icebp  
  41c8b3:	call   0x67d632f7
  41c8b8:	addr16 mov ds:0x7f3a,al
  41c8bc:	push   ebp
  41c8bd:	mov    al,ds:0x57e66c01
  41c8c2:	inc    ebp
  41c8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8c4:	xchg   ecx,eax
  41c8c6:	sbb    BYTE PTR [ebx+0x60],0xa2
  41c8ca:	mov    cl,0x72
  41c8cc:	inc    edi
  41c8cd:	jne    0x41c94c
  41c8cf:	sti    
  41c8d0:	mov    es,WORD PTR [eax+0x67]
  41c8d3:	pushf  
  41c8d4:	in     eax,dx
  41c8d5:	pop    ecx
  41c8d6:	cmp    al,0x15
  41c8d8:	inc    esp
  41c8d9:	imul   ebx,DWORD PTR [ecx],0x888aab4d
  41c8df:	sbb    al,0x68
  41c8e1:	scas   al,BYTE PTR es:[edi]
  41c8e2:	enter  0x2e57,0x5a
  41c8e6:	push   edx
  41c8e7:	popa   
  41c8e8:	jmp    0xbc4:0x2f9aadc5
  41c8ef:	in     al,0x65
  41c8f1:	add    al,0x62
  41c8f3:	test   DWORD PTR [edi+0x4],0xf1f2d97f
  41c8fa:	mov    WORD PTR ds:0x49b23d3e,fs
  41c900:	out    0x8d,eax
  41c902:	jbe    0x41c8bf
  41c904:	add    DWORD PTR [ebx+0x16],eax
  41c907:	add    ebx,DWORD PTR [ebp-0x16b1c73a]
  41c90d:	pop    edx
  41c90e:	mov    gs,WORD PTR [eax]
  41c910:	sub    al,0x8b
  41c912:	cmp    ebx,DWORD PTR [eax+0x56942fbd]
  41c918:	pop    edi
  41c919:	out    dx,al
  41c91a:	bnd jmp 0x41c974
  41c91d:	mov    ah,0x91
  41c91f:	or     esi,0xb127301c
  41c925:	icebp  
  41c926:	jmp    0xdbd1:0x38401240
  41c92d:	jne    0x41c994
  41c92f:	mov    edi,DWORD PTR [edi]
  41c931:	dec    ecx
  41c932:	mov    esi,0xc0665208
  41c937:	fwait
  41c938:	into   
  41c939:	jge    0x41c901
  41c93b:	cmp    esi,DWORD PTR [ecx-0x53]
  41c93e:	push   es
  41c93f:	popf   
  41c940:	mov    WORD PTR [eax-0x7fca027a],ds
  41c946:	int3   
  41c947:	push   ecx
  41c948:	retf   
  41c949:	out    dx,eax
  41c94a:	out    0xca,al
  41c94c:	repz mov ecx,0xc52edc7b
  41c952:	fld    QWORD PTR [esi]
  41c954:	xor    eax,0xc5896c60
  41c959:	into   
  41c95a:	xor    DWORD PTR [edi-0x6d],ebx
  41c95d:	pop    es
  41c95e:	mov    esp,0xcd554186
  41c963:	fldenv [ecx]
  41c965:	sbb    eax,0x9a30ce95
  41c96a:	rol    ebp,cl
  41c96c:	sbb    BYTE PTR [ebx-0x7a],ch
  41c96f:	int3   
  41c970:	in     al,dx
  41c971:	jmp    0x5625f543
  41c976:	mov    ecx,0x96198c0
  41c97b:	fsub   st,st(0)
  41c97d:	jne    0x41c95b
  41c97f:	loop   0x41c942
  41c981:	addr16 pop gs
  41c984:	pop    ss
  41c985:	mov    bl,0x39
  41c987:	in     eax,0x1e
  41c989:	inc    ebx
  41c98a:	xlat   BYTE PTR ds:[ebx]
  41c98b:	add    eax,ecx
  41c98d:	jne    0x41c9c0
  41c98f:	inc    esp
  41c990:	cld    
  41c991:	fcmovu st,st(0)
  41c993:	lea    eax,[ebp-0x7a]
  41c996:	mov    esi,0x806e8528
  41c99b:	push   ecx
  41c99c:	sahf   
  41c99d:	dec    ebx
  41c99e:	lods   al,BYTE PTR ds:[esi]
  41c99f:	jmp    0xb695:0x1b827569
  41c9a6:	shl    DWORD PTR [ebx-0x285e1f9c],0x2b
  41c9ad:	out    dx,al
  41c9ae:	pushf  
  41c9af:	dec    ecx
  41c9b0:	mov    WORD PTR [edx+0x74681d03],cs
  41c9b6:	aam    0x5a
  41c9b8:	xchg   edi,eax
  41c9b9:	adc    al,0xc7
  41c9bb:	xor    al,BYTE PTR [esi+0x3b62d168]
  41c9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c2:	cmp    DWORD PTR [edx-0x1a17952c],eax
  41c9c8:	icebp  
  41c9c9:	sub    BYTE PTR [eax+0x60],ch
  41c9cc:	sbb    esi,DWORD PTR [edi+0x7b]
  41c9cf:	gs inc eax
  41c9d1:	adc    DWORD PTR [edi-0x7b],esp
  41c9d4:	pop    ebp
  41c9d5:	add    al,0xbe
  41c9d7:	std    
  41c9d8:	fidiv  WORD PTR [ecx-0x744c628c]
  41c9de:	scas   eax,DWORD PTR es:[edi]
  41c9df:	in     al,0xe0
  41c9e1:	popf   
  41c9e2:	clc    
  41c9e3:	mov    eax,0x289a6927
  41c9e8:	stos   DWORD PTR es:[edi],eax
  41c9e9:	aaa    
  41c9ea:	push   ecx
  41c9eb:	mov    al,0xc0
  41c9ed:	repnz int3 
  41c9ef:	repnz or ebp,DWORD PTR [edi+0x734f27ec]
  41c9f6:	inc    esp
  41c9f7:	cmp    esp,DWORD PTR [edx+edx*1]
  41c9fa:	or     eax,0xda3e5275
  41c9ff:	and    BYTE PTR [ecx],0xbf
  41ca02:	fiadd  WORD PTR [esi+0x4f]
  41ca05:	in     eax,0x7a
  41ca07:	scas   eax,DWORD PTR es:[edi]
  41ca08:	psadbw mm2,QWORD PTR [ecx-0x1d]
  41ca0c:	pop    esp
  41ca0d:	leave  
  41ca0e:	mov    WORD PTR [eax+0xe],ss
  41ca11:	add    al,0xd7
  41ca13:	test   DWORD PTR [eax-0x1],0x71d4b38d
  41ca1a:	repnz dec ebx
  41ca1c:	adc    BYTE PTR [eax+ebx*1-0x3],0x2e
  41ca21:	pop    edi
  41ca22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca23:	add    BYTE PTR [ecx],dl
  41ca25:	scas   eax,DWORD PTR es:[edi]
  41ca26:	jg     0x41c9b7
  41ca28:	mov    al,ds:0x3f857011
  41ca2d:	jnp    0x41c9d0
  41ca2f:	idiv   DWORD PTR [esi+0x389f2a0e]
  41ca35:	inc    esi
  41ca36:	sar    DWORD PTR [eax-0x4d],0x9f
  41ca3a:	clc    
  41ca3b:	mov    eax,ds:0x9f40362f
  41ca40:	repnz (bad) 
  41ca42:	mov    ebp,0x71288cca
  41ca47:	or     esp,DWORD PTR gs:[esi-0x279e94db]
  41ca4e:	xchg   BYTE PTR [esp+ebp*4+0x42],bh
  41ca52:	outs   dx,BYTE PTR ds:[esi]
  41ca53:	dec    ebp
  41ca54:	jbe    0x41ca91
  41ca56:	cli    
  41ca57:	push   edi
  41ca58:	mov    dh,0x1c
  41ca5a:	xor    ebx,DWORD PTR [ebx+0x287f75f]
  41ca60:	jge    0x41ca42
  41ca62:	into   
  41ca63:	push   0xfffffff7
  41ca65:	mov    bl,0x6c
  41ca67:	mov    ebx,0x2dcc82c3
  41ca6c:	psubq  mm3,QWORD PTR [ebp-0x40ba6dfb]
  41ca73:	and    al,0xa0
  41ca75:	push   esi
  41ca76:	ror    BYTE PTR [ecx+0x43b9657d],0xf6
  41ca7d:	mov    dl,0xbe
  41ca7f:	mov    ah,0xb6
  41ca81:	int    0xf0
  41ca83:	jp     0x41ca21
  41ca85:	idiv   BYTE PTR [esi]
  41ca87:	jmp    0xeea8276
  41ca8c:	add    BYTE PTR [ecx+0x6b950de1],al
  41ca92:	imul   esi,DWORD PTR [eax+0x24ce432a],0x11
  41ca99:	call   0xf72eabc2
  41ca9e:	jp     0x41cad4
  41caa0:	add    eax,0x7993f954
  41caa5:	clc    
  41caa6:	mov    ds:0xb0a82133,al
  41caab:	(bad)  
  41caac:	js     0x41ca6c
  41caae:	adc    DWORD PTR [esi],ecx
  41cab0:	xchg   BYTE PTR [eax+0x20d1e541],dh
  41cab6:	lods   eax,DWORD PTR ds:[esi]
  41cab7:	rcr    esi,cl
  41cab9:	out    dx,al
  41caba:	jge    0x41ca6f
  41cabc:	aas    
  41cabd:	addr16 lahf 
  41cabf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cac0:	sub    al,0x2b
  41cac2:	aad    0x4f
  41cac4:	loope  0x41cabe
  41cac6:	add    al,0x51
  41cac8:	scas   al,BYTE PTR es:[edi]
  41cac9:	out    0xa9,al
  41cacb:	mov    cl,0x70
  41cacd:	bound  eax,QWORD PTR [ecx+0x438a4e2b]
  41cad3:	out    0xa3,al
  41cad5:	rcr    edi,0xf9
  41cad8:	nop
  41cad9:	jns    0x41cadd
  41cadb:	call   FWORD PTR [edi+0x7a]
  41cade:	jmp    0xbc4f8a8c
  41cae3:	inc    ebp
  41cae4:	xor    ebx,DWORD PTR [ecx+0xd]
  41cae7:	and    eax,0x94d17611
  41caec:	test   eax,0x7be4f3da
  41caf1:	cmp    BYTE PTR [edi+0x25],dl
  41caf4:	aad    0xae
  41caf6:	fmul   QWORD PTR [ebx]
  41caf8:	mov    eax,cs:0x9409a2d2
  41cafe:	push   ebx
  41caff:	cmp    edi,DWORD PTR [eax+0x3f701030]
  41cb05:	xor    eax,0xead3e032
  41cb0a:	jecxz  0x41cb29
  41cb0c:	ins    BYTE PTR es:[edi],dx
  41cb0d:	je     0x41cb7b
  41cb0f:	and    BYTE PTR [edx],dh
  41cb11:	adc    BYTE PTR [esi-0x213ae802],bh
  41cb17:	iret   
  41cb18:	dec    eax
  41cb19:	jle    0x41caa8
  41cb1b:	scas   eax,DWORD PTR es:[edi]
  41cb1c:	imul   esi,ebp,0xd2c8a1d7
  41cb22:	push   ds
  41cb23:	sub    dl,bl
  41cb25:	mov    bh,0xc8
  41cb27:	int3   
  41cb28:	lods   al,BYTE PTR ds:[esi]
  41cb29:	clc    
  41cb2a:	out    0xd7,al
  41cb2c:	jecxz  0x41cb01
  41cb2e:	sbb    bl,BYTE PTR [eax-0x27]
  41cb31:	call   0xdb506a22
  41cb36:	mov    eax,ds:0xd8f9d2e6
  41cb3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb3c:	pop    esp
  41cb3d:	mov    ds:0xfcec8bf1,eax
  41cb42:	xor    BYTE PTR [edi+0x4eee6631],ah
  41cb48:	sub    al,0xe6
  41cb4a:	(bad)  
  41cb4b:	sub    al,0x62
  41cb4d:	mov    dh,0xaf
  41cb4f:	mov    eax,ebp
  41cb51:	xchg   BYTE PTR [ecx],cl
  41cb53:	outs   dx,DWORD PTR ds:[esi]
  41cb54:	lods   al,BYTE PTR ds:[esi]
  41cb55:	and    cl,dl
  41cb57:	sbb    ebx,ecx
  41cb59:	icebp  
  41cb5a:	add    al,0xca
  41cb5c:	cs dec ebp
  41cb5e:	cmp    esi,DWORD PTR [ecx+0x57]
  41cb61:	test   al,0x23
  41cb63:	ror    DWORD PTR [ecx+0x558bb455],cl
  41cb69:	or     BYTE PTR [ebx-0x6b7247a3],cl
  41cb6f:	adc    ebx,DWORD PTR [edi]
  41cb71:	cld    
  41cb72:	inc    ecx
  41cb73:	add    cl,BYTE PTR [ecx+0x558bb855]
  41cb79:	or     BYTE PTR [ebx-0x5a1ea1e],bh
  41cb7f:	sub    ebx,edx
  41cb81:	add    ebx,DWORD PTR [ebp-0x44]
  41cb84:	mov    DWORD PTR [ebp-0x44],ebx
  41cb87:	mov    edx,DWORD PTR [ebp+0x8]
  41cb8a:	xor    edx,eax
  41cb8c:	add    edx,esi
  41cb8e:	jne    0x41a7ce
  41cb94:	mov    edx,DWORD PTR [ebp-0x14]
  41cb97:	mov    DWORD PTR [ebp+0x8],edx
  41cb9a:	jmp    0x41cc0f
  41cb9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cba2:	mov    ebx,DWORD PTR [ebp-0x8]
  41cba5:	xor    edx,eax
  41cba7:	xor    ebx,eax
  41cba9:	sub    edx,ebx
  41cbab:	sub    edx,esi
  41cbad:	xor    edx,eax
  41cbaf:	mov    DWORD PTR [ebp+0x8],edx
  41cbb2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbb5:	mov    ebx,DWORD PTR [ebp-0x58]
  41cbb8:	add    edx,0x5708c4
  41cbbe:	imul   edx,ebx
  41cbc1:	mov    DWORD PTR [ebp-0x58],edx
  41cbc4:	mov    edx,DWORD PTR [ebp+0x8]
  41cbc7:	mov    ebx,DWORD PTR [ebp-0x54]
  41cbca:	add    edx,0x64f8da
  41cbd0:	or     edx,ebx
  41cbd2:	mov    DWORD PTR [ebp-0x54],edx
  41cbd5:	mov    edx,DWORD PTR [ebp+0x8]
  41cbd8:	mov    ebx,DWORD PTR [ebp-0x50]
  41cbdb:	add    edx,ecx
  41cbdd:	xor    edx,ebx
  41cbdf:	mov    DWORD PTR [ebp-0x50],edx
  41cbe2:	mov    edx,DWORD PTR [ebp+0x8]
  41cbe5:	mov    ebx,DWORD PTR [ebp-0x4c]
  41cbe8:	add    edx,edi
  41cbea:	and    edx,ebx
  41cbec:	mov    DWORD PTR [ebp-0x4c],edx
  41cbef:	mov    edx,DWORD PTR [ebp+0x8]
  41cbf2:	mov    ebx,DWORD PTR [ebp-0x48]
  41cbf5:	lea    edx,[ebx+edx*1+0x241fc1f]
  41cbfc:	mov    DWORD PTR [ebp-0x48],edx
  41cbff:	mov    edx,DWORD PTR [ebp+0x8]
  41cc02:	mov    ebx,0xfa5e15e2
  41cc07:	sub    ebx,edx
  41cc09:	add    ebx,DWORD PTR [ebp-0x44]
  41cc0c:	mov    DWORD PTR [ebp-0x44],ebx
  41cc0f:	mov    edx,DWORD PTR [ebp+0x8]
  41cc12:	xor    edx,eax
  41cc14:	add    edx,esi
  41cc16:	jne    0x41cb9f
  41cc1c:	mov    edx,DWORD PTR [ebp-0x8]
  41cc1f:	mov    ebx,DWORD PTR [ebp-0xc]
  41cc22:	xor    edx,eax
  41cc24:	lea    edx,[edx+ebx*1+0x3272e2]
  41cc2b:	mov    DWORD PTR [ebp-0xc],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	xor    edx,eax
  41cc33:	add    edx,esi
  41cc35:	jne    0x413baf
  41cc3b:	jmp    0x41cd52
  41cc40:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc43:	mov    DWORD PTR [ebp+0x8],ecx
  41cc46:	jmp    0x41ccbf
  41cc4b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc4e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc51:	xor    ecx,eax
  41cc53:	xor    edx,eax
  41cc55:	sub    ecx,edx
  41cc57:	sub    ecx,esi
  41cc59:	xor    ecx,eax
  41cc5b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc5e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc61:	mov    edx,DWORD PTR [ebp-0x58]
  41cc64:	add    ecx,0x5708c4
  41cc6a:	imul   ecx,edx
  41cc6d:	mov    DWORD PTR [ebp-0x58],ecx
  41cc70:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc73:	mov    edx,DWORD PTR [ebp-0x54]
  41cc76:	add    ecx,0x64f8da
  41cc7c:	or     ecx,edx
  41cc7e:	mov    DWORD PTR [ebp-0x54],ecx
  41cc81:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc84:	mov    edx,DWORD PTR [ebp-0x50]
  41cc87:	add    ecx,0x242ebe9
  41cc8d:	xor    ecx,edx
  41cc8f:	mov    DWORD PTR [ebp-0x50],ecx
  41cc92:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc95:	mov    edx,DWORD PTR [ebp-0x4c]
  41cc98:	add    ecx,edi
  41cc9a:	and    ecx,edx
  41cc9c:	mov    DWORD PTR [ebp-0x4c],ecx
  41cc9f:	mov    ecx,DWORD PTR [ebp+0x8]
  41cca2:	mov    edx,DWORD PTR [ebp-0x48]
  41cca5:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ccac:	mov    DWORD PTR [ebp-0x48],ecx
  41ccaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccb2:	mov    edx,0xfa5e15e2
  41ccb7:	sub    edx,ecx
  41ccb9:	add    edx,DWORD PTR [ebp-0x44]
  41ccbc:	mov    DWORD PTR [ebp-0x44],edx
  41ccbf:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccc2:	xor    ecx,eax
  41ccc4:	add    ecx,esi
  41ccc6:	jne    0x41cc4b
  41cccc:	jmp    0x41cd5e
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	mov    edx,DWORD PTR [ebp-0x8]
  41ccd7:	xor    ecx,eax
  41ccd9:	xor    edx,eax
  41ccdb:	sub    ecx,edx
  41ccdd:	sub    ecx,esi
  41ccdf:	xor    ecx,eax
  41cce1:	mov    DWORD PTR [ebp+0x8],ecx
  41cce4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cce7:	mov    edx,DWORD PTR [ebp-0x58]
  41ccea:	add    ecx,0x5708c4
  41ccf0:	imul   ecx,edx
  41ccf3:	mov    DWORD PTR [ebp-0x58],ecx
  41ccf6:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccf9:	mov    edx,DWORD PTR [ebp-0x54]
  41ccfc:	add    ecx,0x64f8da
  41cd02:	or     ecx,edx
  41cd04:	mov    DWORD PTR [ebp-0x54],ecx
  41cd07:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd0a:	mov    edx,DWORD PTR [ebp-0x50]
  41cd0d:	add    ecx,0x242ebe9
  41cd13:	xor    ecx,edx
  41cd15:	mov    DWORD PTR [ebp-0x50],ecx
  41cd18:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd1b:	mov    edx,DWORD PTR [ebp-0x4c]
  41cd1e:	add    ecx,edi
  41cd20:	and    ecx,edx
  41cd22:	mov    DWORD PTR [ebp-0x4c],ecx
  41cd25:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd28:	mov    edx,DWORD PTR [ebp-0x48]
  41cd2b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41cd32:	mov    DWORD PTR [ebp-0x48],ecx
  41cd35:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd38:	mov    edx,0xfa5e15e2
  41cd3d:	sub    edx,ecx
  41cd3f:	add    edx,DWORD PTR [ebp-0x44]
  41cd42:	mov    DWORD PTR [ebp-0x44],edx
  41cd45:	mov    ecx,DWORD PTR [ebp+0x8]
  41cd48:	xor    ecx,eax
  41cd4a:	add    ecx,esi
  41cd4c:	jne    0x41ccd1
  41cd52:	mov    ecx,DWORD PTR [ebp-0x8]
  41cd55:	xor    ecx,eax
  41cd57:	mov    eax,DWORD PTR [ebp+0x10]
  41cd5a:	add    ecx,esi
  41cd5c:	mov    DWORD PTR [eax],ecx
  41cd5e:	pop    edi
  41cd5f:	pop    esi
  41cd60:	pop    ebx
  41cd61:	leave  
  41cd62:	ret    0xc
  41cd65:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41cd6b:	inc    edx
  41cd6c:	add    BYTE PTR [eax],cl
  41cd6e:	mov    al,ds:0xa00c0042
  41cd73:	inc    edx
  41cd74:	add    BYTE PTR [eax],dl
  41cd76:	mov    al,ds:0xa0140042
  41cd7b:	inc    edx
  41cd7c:	add    BYTE PTR [eax],bl
  41cd7e:	mov    al,ds:0xa01c0042
  41cd83:	inc    edx
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	rol    BYTE PTR [edx+0x0],1
  41cd89:	add    al,0xd0
  41cd8b:	inc    edx
  41cd8c:	add    BYTE PTR [eax],cl
  41cd8e:	rol    BYTE PTR [edx+0x0],1
  41cd91:	or     al,0xd0
  41cd93:	inc    edx
  41cd94:	add    BYTE PTR [eax],dl
  41cd96:	rol    BYTE PTR [edx+0x0],1
  41cd99:	adc    al,0xd0
  41cd9b:	inc    edx
  41cd9c:	add    BYTE PTR [eax],bl
  41cd9e:	rol    BYTE PTR [edx+0x0],1
  41cda1:	sbb    al,0xd0
  41cda3:	inc    edx
	...
  41cdb4:	rcr    esp,1
  41cdb6:	xor    BYTE PTR [ebp+0x0],cl
  41cdb9:	add    BYTE PTR [eax],al
  41cdbb:	add    BYTE PTR [edx],al
  41cdbd:	add    BYTE PTR [eax],al
  41cdbf:	add    BYTE PTR ds:0x40000000,bh
  41cdc5:	into   
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	inc    eax
  41cdc9:	ret    0x1
  41cdcc:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41cdd2:	inc    edx
  41cdd3:	add    BYTE PTR [eax],cl
  41cdd5:	nop
  41cdd6:	inc    edx
  41cdd7:	add    BYTE PTR [eax+edx*4],cl
  41cdda:	inc    edx
  41cddb:	add    BYTE PTR [eax],dl
  41cddd:	nop
  41cdde:	inc    edx
  41cddf:	add    BYTE PTR [eax+edx*4],dl
  41cde2:	inc    edx
  41cde3:	add    BYTE PTR [eax],bl
  41cde5:	nop
  41cde6:	inc    edx
  41cde7:	add    BYTE PTR [eax+edx*4],bl
  41cdea:	inc    edx
  41cdeb:	add    BYTE PTR [eax],ah
  41cded:	nop
  41cdee:	inc    edx
  41cdef:	add    BYTE PTR [eax+edx*4],ah
  41cdf2:	inc    edx
  41cdf3:	add    BYTE PTR [eax],ch
  41cdf5:	nop
  41cdf6:	inc    edx
  41cdf7:	add    BYTE PTR [eax],al
  41cdf9:	mov    al,0x42
  41cdfb:	add    BYTE PTR [eax+esi*4],al
  41cdfe:	inc    edx
  41cdff:	add    BYTE PTR [eax],cl
  41ce01:	mov    al,0x42
  41ce03:	add    BYTE PTR [eax+esi*4],cl
  41ce06:	inc    edx
  41ce07:	add    BYTE PTR [eax],dl
  41ce09:	mov    al,0x42
  41ce0b:	add    BYTE PTR [eax+esi*4],dl
  41ce0e:	inc    edx
  41ce0f:	add    BYTE PTR [eax],bl
  41ce11:	mov    al,0x42
  41ce13:	add    BYTE PTR [eax+esi*4],bl
  41ce16:	inc    edx
  41ce17:	add    BYTE PTR [eax],al
  41ce19:	rol    BYTE PTR [edx+0x0],0x4
  41ce1d:	rol    BYTE PTR [edx+0x0],0x8
  41ce21:	rol    BYTE PTR [edx+0x0],0xc
  41ce25:	rol    BYTE PTR [edx+0x0],0x10
  41ce29:	rol    BYTE PTR [edx+0x0],0x14
  41ce2d:	rol    BYTE PTR [edx+0x0],0x18
  41ce31:	rol    BYTE PTR [edx+0x0],0x1c
  41ce35:	rol    BYTE PTR [edx+0x0],0x0
  41ce39:	add    BYTE PTR [eax],al
  41ce3b:	add    BYTE PTR [eax],al
  41ce3d:	add    BYTE PTR [eax],al
  41ce3f:	add    BYTE PTR [edx+0x53],dl
  41ce42:	inc    esp
  41ce43:	push   ebx
  41ce44:	stos   BYTE PTR es:[edi],al
  41ce45:	mov    eax,0xc468c6c5
  41ce4a:	push   esp
  41ce4b:	dec    esp
  41ce4c:	mov    eax,0xdbf85f3a
  41ce51:	dec    ebx
  41ce52:	jg     0x41cebc
  41ce54:	add    DWORD PTR [eax],eax
  41ce56:	add    BYTE PTR [eax],al
  41ce58:	inc    ebx
  41ce59:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41ce5d:	jb     0x41ced1
  41ce5f:	outs   dx,BYTE PTR gs:[esi]
  41ce61:	je     0x41cea7
  41ce63:	popa   
  41ce64:	je     0x41cec7
  41ce66:	pop    esp
  41ce67:	dec    ebp
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ce71:	ins    BYTE PTR es:[edi],dx
  41ce72:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ce79:	dec    esi
  41ce7a:	gs ja  0x41ce7d
  41ce7d:	mov    edx,DWORD PTR [ebp-0x14]
  41ce80:	sub    esp,0xe4
  41ce86:	push   ebx
  41ce87:	push   edi
  41ce88:	mov    eax,ebx
  41ce8a:	xchg   ecx,eax
  41ce8b:	mov    eax,DWORD PTR [ebp+0x8]
  41ce8e:	mov    edi,0xf89c8585
  41ce93:	cmp    eax,edi
  41ce95:	jne    0x41d21d
  41ce9b:	mov    eax,DWORD PTR [ebp+0xc]
  41ce9e:	cmp    eax,0xf89c8584
  41cea3:	jne    0x41d21d
  41cea9:	mov    eax,DWORD PTR [ebp+0x24]
  41ceac:	mov    DWORD PTR [ebp-0x4],eax
  41ceaf:	mov    BYTE PTR [ebp-0x18],0x1b
  41ceb3:	mov    BYTE PTR [ebp-0x17],0x18
  41ceb7:	mov    BYTE PTR [ebp-0x16],0x5
  41cebb:	mov    BYTE PTR [ebp-0x15],0x4f
  41cebf:	mov    BYTE PTR [ebp-0x14],0x4e
  41cec3:	mov    BYTE PTR [ebp-0x13],0x7c
  41cec7:	mov    BYTE PTR [ebp-0x20],0x9
  41cecb:	mov    BYTE PTR [ebp-0x1f],0xf
  41cecf:	mov    BYTE PTR [ebp-0x1e],0x19
  41ced3:	mov    BYTE PTR [ebp-0x1d],0xe
  41ced7:	mov    BYTE PTR [ebp-0x1c],0x4f
  41cedb:	mov    BYTE PTR [ebp-0x1b],0x4e
  41cedf:	mov    BYTE PTR [ebp-0x1a],0x7c
  41cee3:	mov    BYTE PTR [ebp-0x28],0xf
  41cee7:	mov    BYTE PTR [ebp-0x27],0x4
  41ceeb:	mov    BYTE PTR [ebp-0x26],0x0
  41ceef:	mov    BYTE PTR [ebp-0x25],0xb
  41cef3:	push   esi
  41cef4:	mov    BYTE PTR [ebp-0x24],0x1d
  41cef8:	mov    BYTE PTR [ebp-0x23],0xc
  41cefc:	push   0x74
  41cefe:	mov    BYTE PTR [ebp-0x22],0x5
  41cf02:	mov    BYTE PTR [ebp-0x21],0x7c
  41cf06:	xor    esi,esi
  41cf08:	pop    edx
  41cf09:	mov    eax,0xf8
  41cf0e:	lea    ecx,[ebp+esi*1-0x18]
  41cf12:	movzx  ebx,BYTE PTR [ecx]
  41cf15:	xor    ebx,edx
  41cf17:	add    ebx,eax
  41cf19:	inc    esi
  41cf1a:	mov    BYTE PTR [ecx],bl
  41cf1c:	cmp    esi,0x6
  41cf1f:	jb     0x41cf0e
  41cf21:	xor    esi,esi
  41cf23:	lea    ecx,[ebp+esi*1-0x20]
  41cf27:	movzx  ebx,BYTE PTR [ecx]
  41cf2a:	xor    ebx,edx
  41cf2c:	add    ebx,eax
  41cf2e:	inc    esi
  41cf2f:	mov    BYTE PTR [ecx],bl
  41cf31:	cmp    esi,0x7
  41cf34:	jb     0x41cf23
  41cf36:	xor    esi,esi
  41cf38:	lea    ecx,[ebp+esi*1-0x28]
  41cf3c:	movzx  ebx,BYTE PTR [ecx]
  41cf3f:	xor    ebx,edx
  41cf41:	add    ebx,eax
  41cf43:	inc    esi
  41cf44:	mov    BYTE PTR [ecx],bl
  41cf46:	cmp    esi,0x8
  41cf49:	jb     0x41cf38
  41cf4b:	lea    eax,[ebp-0x2c]
  41cf4e:	mov    DWORD PTR [ebp-0x8],eax
  41cf51:	mov    ecx,DWORD PTR [ebp-0x8]
  41cf54:	mov    eax,0x7113fcef
  41cf59:	mov    DWORD PTR [ecx],eax
  41cf5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41cf5e:	cmp    ecx,eax
  41cf60:	jne    0x41cf6c
  41cf62:	mov    DWORD PTR [ebp-0x8],edi
  41cf65:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41cf6c:	mov    eax,DWORD PTR [ebp-0x4]
  41cf6f:	mov    ecx,DWORD PTR [eax+0x18c]
  41cf75:	xor    eax,eax
  41cf77:	mov    ebx,0x3272e2
  41cf7c:	cmp    DWORD PTR [ecx],eax
  41cf7e:	jne    0x41d1b6
  41cf84:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf87:	mov    ecx,DWORD PTR [ecx+0x17c]
  41cf8d:	mov    DWORD PTR [ecx],eax
  41cf8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf92:	mov    ecx,DWORD PTR [ecx+0x180]
  41cf98:	mov    DWORD PTR [ecx],eax
  41cf9a:	mov    esi,0x4e22
  41cf9f:	mov    eax,0x4f8f
  41cfa4:	mov    WORD PTR [ebp-0x78],ax
  41cfa8:	mov    eax,esi
  41cfaa:	mov    WORD PTR [ebp-0x76],ax
  41cfae:	add    eax,0x5d
  41cfb1:	mov    WORD PTR [ebp-0x74],ax
  41cfb5:	lea    eax,[esi+0x1d]
  41cfb8:	mov    WORD PTR [ebp-0x72],ax
  41cfbc:	mov    eax,0x4f92
  41cfc1:	mov    WORD PTR [ebp-0x70],ax
  41cfc5:	lea    eax,[esi+0x1c]
  41cfc8:	mov    WORD PTR [ebp-0x6e],ax
  41cfcc:	add    eax,0x3f
  41cfcf:	mov    WORD PTR [ebp-0x6c],ax
  41cfd3:	lea    eax,[esi+0x16]
  41cfd6:	mov    WORD PTR [ebp-0x6a],ax
  41cfda:	mov    eax,esi
  41cfdc:	mov    WORD PTR [ebp-0x68],ax
  41cfe0:	add    eax,0x19
  41cfe3:	mov    WORD PTR [ebp-0x66],ax
  41cfe7:	mov    eax,0x99ff
  41cfec:	mov    WORD PTR [ebp-0x64],ax
  41cff0:	mov    eax,0x828e
  41cff5:	mov    WORD PTR [ebp-0x62],ax
  41cff9:	mov    eax,0xd78d
  41cffe:	mov    WORD PTR [ebp-0x60],ax
  41d002:	add    eax,0x1c
  41d005:	mov    WORD PTR [ebp-0x5e],ax
  41d009:	mov    eax,0x27a8
  41d00e:	mov    WORD PTR [ebp-0x5c],ax
  41d012:	mov    eax,0x47a8
  41d017:	mov    WORD PTR [ebp-0x5a],ax
  41d01b:	lea    eax,[esi+0x17]
  41d01e:	push   0x8
  41d020:	mov    WORD PTR [ebp-0x58],ax
  41d024:	mov    DWORD PTR [ebp-0x10],0xb00040f
  41d02b:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  41d032:	lea    eax,[ebp-0x10]
  41d035:	pop    edi
  41d036:	mov    cl,BYTE PTR [eax]
  41d038:	xor    cl,dl
  41d03a:	sub    cl,0x8
  41d03d:	mov    BYTE PTR [eax],cl
  41d03f:	inc    eax
  41d040:	dec    edi
  41d041:	jne    0x41d036
  41d043:	lea    eax,[ebp-0x10]
  41d046:	mov    DWORD PTR [ebp-0xb8],eax
  41d04c:	lea    eax,[ebp-0xbc]
  41d052:	push   eax
  41d053:	mov    eax,DWORD PTR [ebp+0xc]
  41d056:	mov    edi,0x751089b
  41d05b:	xor    eax,edi
  41d05d:	add    eax,ebx
  41d05f:	push   eax
  41d060:	mov    eax,DWORD PTR [ebp-0x4]
  41d063:	add    eax,0x66
  41d066:	push   eax
  41d067:	mov    eax,DWORD PTR [ebp-0x4]
  41d06a:	mov    eax,DWORD PTR [eax+0x198]
  41d070:	mov    DWORD PTR [ebp-0xbc],0x1
  41d07a:	push   DWORD PTR [eax]
  41d07c:	mov    eax,DWORD PTR [ebp+0x10]
  41d07f:	call   eax
  41d081:	mov    ecx,DWORD PTR [ebp+0x8]
  41d084:	xor    ecx,edi
  41d086:	add    ecx,ebx
  41d088:	mov    DWORD PTR [ebp-0x8],eax
  41d08b:	cmp    eax,ecx
  41d08d:	jne    0x41d0a8
  41d08f:	mov    eax,ds:0x33730bee
  41d094:	or     eax,0x22150bef
  41d099:	mov    ds:0x33730bee,eax
  41d09e:	add    eax,0x3372e90f
  41d0a3:	mov    ds:0x33730bee,eax
  41d0a8:	mov    ecx,0x4f8a
  41d0ad:	mov    eax,ecx
  41d0af:	mov    WORD PTR [ebp-0x40],ax
  41d0b3:	mov    eax,0x4e71
  41d0b8:	mov    edx,eax
  41d0ba:	mov    WORD PTR [ebp-0x3e],dx
  41d0be:	lea    edx,[ecx+0xf]
  41d0c1:	mov    WORD PTR [ebp-0x3c],dx
  41d0c5:	add    edx,0xfffffff8
  41d0c8:	mov    WORD PTR [ebp-0x3a],dx
  41d0cc:	lea    edx,[ecx+0x9]
  41d0cf:	mov    WORD PTR [ebp-0x38],dx
  41d0d3:	add    edx,0x19
  41d0d6:	mov    WORD PTR [ebp-0x36],dx
  41d0da:	lea    edx,[ecx+0x1b]
  41d0dd:	mov    WORD PTR [ebp-0x34],dx
  41d0e1:	mov    WORD PTR [ebp-0x32],cx
  41d0e5:	mov    ecx,esi
  41d0e7:	mov    WORD PTR [ebp-0x30],cx
  41d0eb:	lea    ecx,[edx+0x5]
  41d0ee:	mov    edx,ecx
  41d0f0:	mov    WORD PTR [ebp-0x54],dx
  41d0f4:	mov    edx,eax
  41d0f6:	mov    WORD PTR [ebp-0x52],dx
  41d0fa:	add    edx,0x8
  41d0fd:	mov    WORD PTR [ebp-0x50],dx
  41d101:	mov    WORD PTR [ebp-0x4e],ax
  41d105:	add    eax,0x2
  41d108:	mov    WORD PTR [ebp-0x4c],ax
  41d10c:	lea    eax,[ecx-0x1e]
  41d10f:	mov    WORD PTR [ebp-0x4a],ax
  41d113:	add    eax,0xfffffff9
  41d116:	mov    WORD PTR [ebp-0x48],ax
  41d11a:	mov    WORD PTR [ebp-0x46],cx
  41d11e:	mov    WORD PTR [ebp-0x44],si
  41d122:	mov    eax,DWORD PTR [ebp+0x8]
  41d125:	movzx  ecx,WORD PTR [ebp-0x54]
  41d129:	xor    eax,edi
  41d12b:	add    eax,ebx
  41d12d:	xor    eax,ecx
  41d12f:	mov    WORD PTR [ebp-0x54],ax
  41d133:	mov    eax,DWORD PTR [ebp+0x8]
  41d136:	movzx  ecx,WORD PTR [ebp-0x40]
  41d13a:	xor    eax,edi
  41d13c:	add    eax,ebx
  41d13e:	xor    eax,ecx
  41d140:	mov    WORD PTR [ebp-0x40],ax
  41d144:	xor    eax,eax
  41d146:	mov    WORD PTR [ebp-0xd0],ax
  41d14d:	mov    WORD PTR [ebp-0xe4],ax
  41d154:	mov    edi,DWORD PTR [ebp+0x24]
  41d157:	lea    eax,[ebp-0xd0]
  41d15d:	lea    edx,[ebp-0x54]
  41d160:	mov    DWORD PTR [ebp-0xbc],0x2
  41d16a:	mov    DWORD PTR [ebp-0xb8],eax
  41d170:	call   0x41fafc
  41d175:	mov    DWORD PTR [ebp-0xb4],eax
  41d17b:	lea    eax,[ebp-0xbc]
  41d181:	push   eax
  41d182:	mov    eax,DWORD PTR [ebp+0xc]
  41d185:	xor    eax,0x751089b
  41d18a:	add    eax,ebx
  41d18c:	push   eax
  41d18d:	lea    eax,[ebp-0x78]
  41d190:	push   eax
  41d191:	push   DWORD PTR [ebp-0x8]
  41d194:	mov    eax,DWORD PTR [ebp+0x10]
  41d197:	call   eax
  41d199:	mov    edi,DWORD PTR [ebp+0x24]
  41d19c:	lea    eax,[ebp-0xe4]
  41d1a2:	lea    edx,[ebp-0x40]
  41d1a5:	mov    DWORD PTR [ebp-0xb8],eax
  41d1ab:	call   0x41fafc
  41d1b0:	mov    DWORD PTR [ebp-0xb4],eax
  41d1b6:	mov    eax,DWORD PTR [ebp+0x14]
  41d1b9:	push   DWORD PTR [ebp-0x4]
  41d1bc:	push   DWORD PTR [ebp+0x20]
  41d1bf:	push   DWORD PTR [ebp+0x1c]
  41d1c2:	push   DWORD PTR [ebp+0x18]
  41d1c5:	push   DWORD PTR [ebp+0x10]
  41d1c8:	push   DWORD PTR [ebp+0x8]
  41d1cb:	push   DWORD PTR [ebp+0xc]
  41d1ce:	call   0x41e378
  41d1d3:	test   eax,eax
  41d1d5:	je     0x41d21c
  41d1d7:	add    DWORD PTR [ebp-0x4],eax
  41d1da:	push   DWORD PTR [ebp-0x4]
  41d1dd:	lea    esi,[ebp+0x4]
  41d1e0:	call   0x41d60c
  41d1e5:	mov    eax,DWORD PTR [ebp-0x4]
  41d1e8:	mov    eax,DWORD PTR [eax+0x1c8]
  41d1ee:	mov    eax,DWORD PTR [eax]
  41d1f0:	xor    eax,0x751089b
  41d1f5:	add    eax,ebx
  41d1f7:	mov    eax,DWORD PTR [ebp-0x4]
  41d1fa:	jne    0x41d212
  41d1fc:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1ff:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d205:	push   DWORD PTR [ecx]
  41d207:	mov    eax,DWORD PTR [eax+0x1d8]
  41d20d:	call   DWORD PTR [eax+0x28]
  41d210:	jmp    0x41d21c
  41d212:	mov    eax,DWORD PTR [eax+0x17c]
  41d218:	mov    eax,DWORD PTR [eax]
  41d21a:	add    DWORD PTR [esi],eax
  41d21c:	pop    esi
  41d21d:	pop    edi
  41d21e:	pop    ebx
  41d21f:	leave  
  41d220:	ret    0x20
  41d223:	push   edi
  41d224:	push   esi
  41d225:	push   ebx
  41d226:	push   ebp
  41d227:	mov    ebp,esp
  41d229:	mov    eax,DWORD PTR [ebp+0x24]
  41d22c:	add    DWORD PTR [ebp+0x28],eax
  41d22f:	push   eax
  41d230:	cld    
  41d231:	mov    esi,DWORD PTR [ebp+0x18]
  41d234:	add    DWORD PTR [ebp+0x1c],esi
  41d237:	push   esi
  41d238:	mov    esi,DWORD PTR [ebp+0x14]
  41d23b:	lods   eax,DWORD PTR ds:[esi]
  41d23c:	xchg   edx,eax
  41d23d:	push   edx
  41d23e:	mov    cl,BYTE PTR [esi-0x2]
  41d241:	or     eax,0xffffffff
  41d244:	shl    eax,cl
  41d246:	not    eax
  41d248:	push   eax
  41d249:	mov    cl,dh
  41d24b:	or     eax,0xffffffff
  41d24e:	shl    eax,cl
  41d250:	not    eax
  41d252:	push   eax
  41d253:	add    cl,dl
  41d255:	mov    edi,esi
  41d257:	sub    esp,0xc
  41d25a:	sub    eax,eax
  41d25c:	inc    eax
  41d25d:	push   eax
  41d25e:	push   eax
  41d25f:	push   eax
  41d260:	push   eax
  41d261:	push   eax
  41d262:	push   edi
  41d263:	sub    esi,esi
  41d265:	push   esi
  41d266:	or     ebx,0xffffffff
  41d269:	mov    eax,0x300
  41d26e:	shl    eax,cl
  41d270:	lea    ecx,[eax+0x736]
  41d276:	mov    eax,0x4000400
  41d27b:	shr    ecx,1
  41d27d:	rep stos DWORD PTR es:[edi],eax
  41d27f:	push   0x5
  41d281:	pop    ecx
  41d282:	call   0x41d56d
  41d287:	loop   0x41d282
  41d289:	lea    esi,[esi]
  41d28b:	lea    edi,[edi]
  41d28d:	mov    edi,DWORD PTR [ebp-0x4]
  41d290:	mov    eax,DWORD PTR [ebp-0x10]
  41d293:	sub    edi,DWORD PTR [ebp+0x24]
  41d296:	and    eax,edi
  41d298:	mov    DWORD PTR [ebp-0x18],eax
  41d29b:	mov    al,0x0
  41d29d:	call   0x41d585
  41d2a2:	jne    0x41d33d
  41d2a8:	mov    cl,BYTE PTR [ebp-0xc]
  41d2ab:	and    edi,DWORD PTR [ebp-0x14]
  41d2ae:	shl    edi,cl
  41d2b0:	sub    cl,0x8
  41d2b3:	neg    cl
  41d2b5:	shr    esi,cl
  41d2b7:	pop    eax
  41d2b8:	add    edi,esi
  41d2ba:	pop    esi
  41d2bb:	lea    edi,[edi+edi*2]
  41d2be:	shl    edi,0x8
  41d2c1:	cmp    al,0x7
  41d2c3:	pop    edx
  41d2c4:	lea    ecx,[esi+edi*2+0xe6c]
  41d2cb:	push   ecx
  41d2cc:	push   esi
  41d2cd:	mov    esi,0x100
  41d2d2:	push   eax
  41d2d3:	mov    al,0x1
  41d2d5:	jb     0x41d30b
  41d2d7:	mov    edi,DWORD PTR [ebp-0x4]
  41d2da:	sub    edi,DWORD PTR [ebp-0x24]
  41d2dd:	movzx  edi,BYTE PTR [edi]
  41d2e0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d2e3:	shl    edi,1
  41d2e5:	mov    ecx,esi
  41d2e7:	and    esi,edi
  41d2e9:	add    ecx,esi
  41d2eb:	lea    ebp,[ebp+ecx*2+0x0]
  41d2ef:	call   0x41d5a4
  41d2f4:	mov    ecx,eax
  41d2f6:	shr    esi,0x8
  41d2f9:	and    ecx,0x1
  41d2fc:	cmp    esi,ecx
  41d2fe:	mov    esi,0x100
  41d303:	jne    0x41d313
  41d305:	cmp    eax,esi
  41d307:	jb     0x41d2e0
  41d309:	jmp    0x41d31f
  41d30b:	mov    ebp,DWORD PTR [ebp-0x34]
  41d30e:	call   0x41d5a4
  41d313:	inc    eax
  41d314:	inc    esi
  41d315:	sub    eax,0x1
  41d318:	sub    esi,0x1
  41d31b:	cmp    eax,esi
  41d31d:	jb     0x41d30b
  41d31f:	pop    edx
  41d320:	inc    edx
  41d321:	cmp    edx,0x5
  41d324:	dec    edx
  41d325:	mov    ecx,edx
  41d327:	jb     0x41d338
  41d329:	inc    edx
  41d32a:	cmp    edx,0xb
  41d32d:	dec    edx
  41d32e:	mov    cl,0x4
  41d330:	dec    cl
  41d332:	jb     0x41d338
  41d334:	mov    cl,0x7
  41d336:	dec    cl
  41d338:	sub    edx,ecx
  41d33a:	push   edx
  41d33b:	jmp    0x41d38c
  41d33d:	mov    al,0xc1
  41d33f:	dec    al
  41d341:	call   0x41d595
  41d346:	jne    0x41d35c
  41d348:	pop    eax
  41d349:	pop    edi
  41d34a:	pop    edx
  41d34b:	pop    ecx
  41d34c:	pop    edx
  41d34d:	pop    ecx
  41d34e:	push   DWORD PTR [esp]
  41d351:	push   ecx
  41d352:	push   edx
  41d353:	mov    edx,0x664
  41d358:	mov    cl,0x0
  41d35a:	jmp    0x41d3cf
  41d35c:	mov    al,0xcd
  41d35e:	dec    al
  41d360:	call   0x41d595
  41d365:	jne    0x41d395
  41d367:	mov    al,0xf1
  41d369:	dec    al
  41d36b:	call   0x41d585
  41d370:	jne    0x41d3c5
  41d372:	pop    eax
  41d373:	cmp    al,0x7
  41d375:	mov    al,0x9
  41d377:	jb     0x41d37b
  41d379:	mov    al,0xb
  41d37b:	push   eax
  41d37c:	mov    esi,DWORD PTR [ebp-0x4]
  41d37f:	sub    esi,DWORD PTR [ebp-0x24]
  41d382:	cmp    esi,DWORD PTR [ebp+0x24]
  41d385:	jb     0x41d55c
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	mov    edi,DWORD PTR [ebp-0x4]
  41d38f:	stos   BYTE PTR es:[edi],al
  41d390:	jmp    0x41d523
  41d395:	mov    al,0xd8
  41d397:	call   0x41d595
  41d39c:	mov    esi,DWORD PTR [ebp-0x28]
  41d39f:	je     0x41d3bc
  41d3a1:	mov    al,0xe4
  41d3a3:	call   0x41d595
  41d3a8:	mov    esi,DWORD PTR [ebp-0x2c]
  41d3ab:	je     0x41d3b6
  41d3ad:	mov    esi,DWORD PTR [ebp-0x30]
  41d3b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d3b3:	mov    DWORD PTR [ebp-0x30],ecx
  41d3b6:	mov    ecx,DWORD PTR [ebp-0x28]
  41d3b9:	mov    DWORD PTR [ebp-0x2c],ecx
  41d3bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41d3bf:	mov    DWORD PTR [ebp-0x28],ecx
  41d3c2:	mov    DWORD PTR [ebp-0x24],esi
  41d3c5:	pop    eax
  41d3c6:	pop    edi
  41d3c7:	pop    ecx
  41d3c8:	mov    edx,0xa68
  41d3cd:	mov    cl,0x8
  41d3cf:	add    edx,edi
  41d3d1:	push   edx
  41d3d2:	push   edi
  41d3d3:	cmp    al,0x7
  41d3d5:	mov    al,cl
  41d3d7:	jb     0x41d3db
  41d3d9:	add    al,0x3
  41d3db:	push   eax
  41d3dc:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3df:	call   0x41d5a2
  41d3e4:	jne    0x41d3fa
  41d3e6:	mov    eax,DWORD PTR [ebp-0x18]
  41d3e9:	mov    edi,DWORD PTR [ebp-0x34]
  41d3ec:	shl    eax,0x3
  41d3ef:	sub    ecx,ecx
  41d3f1:	push   0x8
  41d3f3:	pop    esi
  41d3f4:	lea    edi,[edi+eax*2+0x4]
  41d3f8:	jmp    0x41d42f
  41d3fa:	mov    ebp,DWORD PTR [ebp-0x34]
  41d3fd:	add    ebp,0x2
  41d400:	call   0x41d5a2
  41d405:	jne    0x41d41f
  41d407:	mov    eax,DWORD PTR [ebp-0x18]
  41d40a:	mov    edi,DWORD PTR [ebp-0x34]
  41d40d:	shl    eax,0x3
  41d410:	push   0x8
  41d412:	pop    ecx
  41d413:	push   0x8
  41d415:	pop    esi
  41d416:	lea    edi,[edi+eax*2+0x104]
  41d41d:	jmp    0x41d42f
  41d41f:	mov    edi,0x204
  41d424:	add    edi,DWORD PTR [ebp-0x34]
  41d427:	push   0x10
  41d429:	pop    ecx
  41d42a:	mov    esi,0x100
  41d42f:	mov    DWORD PTR [ebp-0x1c],ecx
  41d432:	sub    eax,eax
  41d434:	inc    eax
  41d435:	mov    ebp,edi
  41d437:	call   0x41d5a4
  41d43c:	mov    ecx,eax
  41d43e:	sub    ecx,esi
  41d440:	jb     0x41d435
  41d442:	add    DWORD PTR [ebp-0x1c],ecx
  41d445:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d449:	jae    0x41d4ff
  41d44f:	add    DWORD PTR [ebp-0x3c],0x7
  41d453:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d456:	cmp    ecx,0x4
  41d459:	jb     0x41d45e
  41d45b:	push   0x3
  41d45d:	pop    ecx
  41d45e:	mov    edi,DWORD PTR [ebp-0x38]
  41d461:	shl    ecx,0x6
  41d464:	sub    eax,eax
  41d466:	inc    eax
  41d467:	push   0x40
  41d469:	pop    esi
  41d46a:	lea    edi,[edi+ecx*2+0x360]
  41d471:	mov    ebp,edi
  41d473:	call   0x41d5a4
  41d478:	mov    ecx,eax
  41d47a:	sub    ecx,esi
  41d47c:	jb     0x41d471
  41d47e:	mov    DWORD PTR [ebp-0x18],ecx
  41d481:	mov    DWORD PTR [ebp-0x24],ecx
  41d484:	cmp    ecx,0x4
  41d487:	jb     0x41d4fc
  41d489:	mov    esi,ecx
  41d48b:	and    DWORD PTR [ebp-0x24],0x1
  41d48f:	shr    esi,1
  41d491:	or     DWORD PTR [ebp-0x24],0x2
  41d495:	dec    esi
  41d496:	cmp    ecx,0xe
  41d499:	jae    0x41d4b4
  41d49b:	mov    eax,0x2af
  41d4a0:	sub    eax,ecx
  41d4a2:	mov    ecx,esi
  41d4a4:	shl    BYTE PTR [ebp-0x24],cl
  41d4a7:	add    eax,DWORD PTR [ebp-0x24]
  41d4aa:	shl    eax,1
  41d4ac:	add    eax,DWORD PTR [ebp-0x38]
  41d4af:	mov    DWORD PTR [ebp-0x34],eax
  41d4b2:	jmp    0x41d4e1
  41d4b4:	sub    esi,0x4
  41d4b7:	call   0x41d561
  41d4bc:	shr    ebx,1
  41d4be:	shl    DWORD PTR [ebp-0x24],1
  41d4c1:	cmp    DWORD PTR [ebp-0x20],ebx
  41d4c4:	jb     0x41d4cc
  41d4c6:	inc    DWORD PTR [ebp-0x24]
  41d4c9:	sub    DWORD PTR [ebp-0x20],ebx
  41d4cc:	dec    esi
  41d4cd:	jne    0x41d4b7
  41d4cf:	mov    eax,0x644
  41d4d4:	add    eax,DWORD PTR [ebp-0x38]
  41d4d7:	mov    DWORD PTR [ebp-0x34],eax
  41d4da:	shl    DWORD PTR [ebp-0x24],0x4
  41d4de:	push   0x4
  41d4e0:	pop    esi
  41d4e1:	sub    edi,edi
  41d4e3:	inc    edi
  41d4e4:	mov    eax,edi
  41d4e6:	mov    ebp,DWORD PTR [ebp-0x34]
  41d4e9:	call   0x41d5a4
  41d4ee:	test   al,0x1
  41d4f0:	je     0x41d4f5
  41d4f2:	or     DWORD PTR [ebp-0x24],edi
  41d4f5:	shl    edi,1
  41d4f7:	dec    esi
  41d4f8:	jne    0x41d4e6
  41d4fa:	jmp    0x41d4fc
  41d4fc:	inc    DWORD PTR [ebp-0x24]
  41d4ff:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d502:	add    ecx,0x2
  41d505:	mov    edi,DWORD PTR [ebp-0x4]
  41d508:	mov    eax,edi
  41d50a:	sub    eax,DWORD PTR [ebp+0x24]
  41d50d:	cmp    DWORD PTR [ebp-0x24],eax
  41d510:	ja     0x41d55c
  41d512:	mov    esi,edi
  41d514:	sub    esi,DWORD PTR [ebp-0x24]
  41d517:	mov    edx,DWORD PTR [ebp+0x28]
  41d51a:	lods   al,BYTE PTR ds:[esi]
  41d51b:	stos   BYTE PTR es:[edi],al
  41d51c:	cmp    edi,edx
  41d51e:	jae    0x41d523
  41d520:	dec    ecx
  41d521:	jne    0x41d51a
  41d523:	mov    DWORD PTR [ebp-0x4],edi
  41d526:	movzx  esi,al
  41d529:	cmp    edi,DWORD PTR [ebp+0x28]
  41d52c:	jb     0x41d28d
  41d532:	call   0x41d561
  41d537:	sub    eax,eax
  41d539:	lea    ebp,[esp+0x3c]
  41d53d:	mov    edx,DWORD PTR [ebp+0x20]
  41d540:	mov    esi,DWORD PTR [ebp-0x8]
  41d543:	sub    esi,DWORD PTR [ebp+0x18]
  41d546:	mov    DWORD PTR [edx],esi
  41d548:	mov    edx,DWORD PTR [ebp+0x2c]
  41d54b:	mov    edi,DWORD PTR [ebp-0x4]
  41d54e:	sub    edi,DWORD PTR [ebp+0x24]
  41d551:	mov    DWORD PTR [edx],edi
  41d553:	leave  
  41d554:	pop    ebx
  41d555:	pop    esi
  41d556:	pop    edi
  41d557:	ret    0x1c
  41d55a:	pop    esi
  41d55b:	pop    eax
  41d55c:	sub    eax,eax
  41d55e:	inc    eax
  41d55f:	jmp    0x41d539
  41d561:	cmp    ebx,0x1000000
  41d567:	jb     0x41d56a
  41d569:	ret    
  41d56a:	shl    ebx,0x8
  41d56d:	push   esi
  41d56e:	mov    esi,DWORD PTR [ebp-0x8]
  41d571:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d574:	jae    0x41d55a
  41d576:	mov    eax,DWORD PTR [ebp-0x20]
  41d579:	shl    eax,0x8
  41d57c:	lods   al,BYTE PTR ds:[esi]
  41d57d:	mov    DWORD PTR [ebp-0x20],eax
  41d580:	mov    DWORD PTR [ebp-0x8],esi
  41d583:	pop    esi
  41d584:	ret    
  41d585:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d588:	movzx  eax,al
  41d58b:	shl    ecx,0x4
  41d58e:	add    eax,DWORD PTR [ebp-0x18]
  41d591:	add    eax,ecx
  41d593:	jmp    0x41d59b
  41d595:	movzx  eax,al
  41d598:	add    eax,DWORD PTR [ebp-0x3c]
  41d59b:	mov    ebp,DWORD PTR [ebp-0x38]
  41d59e:	lea    ebp,[ebp+eax*2+0x0]
  41d5a2:	sub    eax,eax
  41d5a4:	lea    ebp,[ebp+eax*2+0x0]
  41d5a8:	cmp    ebx,0x1000000
  41d5ae:	jae    0x41d5cc
  41d5b0:	mov    ecx,DWORD PTR [esp+0x38]
  41d5b4:	shl    DWORD PTR [esp+0x20],0x8
  41d5b9:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d5bd:	jae    0x41d55b
  41d5bf:	mov    dl,BYTE PTR [ecx]
  41d5c1:	inc    DWORD PTR [esp+0x38]
  41d5c5:	shl    ebx,0x8
  41d5c8:	mov    BYTE PTR [esp+0x20],dl
  41d5cc:	mov    ecx,ebx
  41d5ce:	movzx  edx,WORD PTR [ebp+0x0]
  41d5d2:	shr    ecx,0xb
  41d5d5:	imul   ecx,edx
  41d5d8:	cmp    DWORD PTR [esp+0x20],ecx
  41d5dc:	jae    0x41d5f5
  41d5de:	mov    ebx,ecx
  41d5e0:	mov    ecx,0x800
  41d5e5:	sub    ecx,edx
  41d5e7:	shr    ecx,0x5
  41d5ea:	add    WORD PTR [ebp+0x0],cx
  41d5ee:	add    eax,eax
  41d5f0:	lea    ebp,[esp+0x40]
  41d5f4:	ret    
  41d5f5:	shr    edx,0x5
  41d5f8:	sub    DWORD PTR [esp+0x20],ecx
  41d5fc:	sub    ebx,ecx
  41d5fe:	sub    WORD PTR [ebp+0x0],dx
  41d602:	add    eax,eax
  41d604:	add    eax,0x1
  41d607:	lea    ebp,[esp+0x40]
  41d60b:	ret    
  41d60c:	push   ebp
  41d60d:	mov    ebp,esp
  41d60f:	sub    esp,0x104
  41d615:	push   ebx
  41d616:	push   esi
  41d617:	push   edi
  41d618:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41d61f:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41d626:	mov    eax,DWORD PTR [ebp+0x8]
  41d629:	mov    DWORD PTR [ebp+0x8],eax
  41d62c:	mov    ecx,DWORD PTR [ebp-0x14]
  41d62f:	mov    ebx,0x751089b
  41d634:	xor    ecx,ebx
  41d636:	mov    eax,0x3272e2
  41d63b:	add    ecx,eax
  41d63d:	mov    DWORD PTR [ebp-0x2c],ecx
  41d640:	mov    ecx,DWORD PTR [ebp-0x14]
  41d643:	xor    ecx,ebx
  41d645:	add    ecx,eax
  41d647:	mov    DWORD PTR [ebp-0x3c],ecx
  41d64a:	mov    ecx,DWORD PTR [ebp-0x14]
  41d64d:	xor    ecx,ebx
  41d64f:	add    ecx,eax
  41d651:	mov    DWORD PTR [ebp-0x40],ecx
  41d654:	mov    ecx,DWORD PTR [ebp-0x14]
  41d657:	xor    ecx,ebx
  41d659:	add    ecx,eax
  41d65b:	mov    DWORD PTR [ebp-0xa0],ecx
  41d661:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  41d668:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  41d66f:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  41d676:	push   0x25
  41d678:	pop    ecx
  41d679:	mov    DWORD PTR [ebp-0x34],ecx
  41d67c:	mov    DWORD PTR [ebp-0x34],ecx
  41d67f:	push   0x65
  41d681:	pop    ecx
  41d682:	mov    DWORD PTR [ebp-0x34],ecx
  41d685:	mov    DWORD PTR [ebp-0x34],ecx
  41d688:	mov    DWORD PTR [ebp-0x34],0x4d
  41d68f:	mov    DWORD PTR [ebp-0x34],0x43
  41d696:	mov    ecx,DWORD PTR [ebp-0x14]
  41d699:	xor    ecx,ebx
  41d69b:	add    ecx,eax
  41d69d:	mov    DWORD PTR [ebp-0x34],ecx
  41d6a0:	mov    ecx,DWORD PTR [ebp-0x14]
  41d6a3:	xor    ecx,ebx
  41d6a5:	add    ecx,eax
  41d6a7:	mov    DWORD PTR [ebp-0x34],ecx
  41d6aa:	mov    DWORD PTR [ebp-0x28],0x257
  41d6b1:	mov    DWORD PTR [ebp-0x20],0x35
  41d6b8:	mov    DWORD PTR [ebp-0x10],0x79
  41d6bf:	lea    edi,[ebp-0xe4]
  41d6c5:	lea    esi,[ebp-0x104]
  41d6cb:	call   0x41e2e7
  41d6d0:	dec    DWORD PTR [ebp-0x10]
  41d6d3:	jne    0x41d6bf
  41d6d5:	dec    DWORD PTR [ebp-0x20]
  41d6d8:	jne    0x41d6b8
  41d6da:	dec    DWORD PTR [ebp-0x28]
  41d6dd:	jne    0x41d6b1
  41d6df:	mov    DWORD PTR [ebp-0x28],0x400d
  41d6e6:	mov    eax,DWORD PTR [ebp-0x14]
  41d6e9:	xor    eax,ebx
  41d6eb:	mov    esi,0x3272e2
  41d6f0:	add    eax,esi
  41d6f2:	mov    DWORD PTR [ebp-0x8],eax
  41d6f5:	mov    eax,DWORD PTR [ebp-0x14]
  41d6f8:	and    DWORD PTR [ebp-0x94],0x0
  41d6ff:	xor    eax,ebx
  41d701:	add    eax,esi
  41d703:	mov    DWORD PTR [ebp-0x38],eax
  41d706:	mov    eax,fs:0x18
  41d70c:	mov    DWORD PTR [ebp-0x94],eax
  41d712:	mov    eax,DWORD PTR [eax+0x30]
  41d715:	mov    DWORD PTR [ebp-0x98],eax
  41d71b:	mov    eax,DWORD PTR [eax+0xc]
  41d71e:	mov    DWORD PTR [ebp-0xc0],eax
  41d724:	mov    eax,DWORD PTR [ebp+0x8]
  41d727:	lea    ecx,[ebp-0x94]
  41d72d:	mov    DWORD PTR [eax+0x1a0],ecx
  41d733:	mov    eax,DWORD PTR [ebp+0x8]
  41d736:	lea    ecx,[ebp-0x98]
  41d73c:	mov    DWORD PTR [eax+0x1a4],ecx
  41d742:	mov    eax,DWORD PTR [ebp+0x8]
  41d745:	push   DWORD PTR [ebp+0x8]
  41d748:	lea    ecx,[ebp-0xc0]
  41d74e:	mov    DWORD PTR [eax+0x1a8],ecx
  41d754:	call   0x41facd
  41d759:	mov    ecx,DWORD PTR [ebp-0x14]
  41d75c:	xor    ecx,ebx
  41d75e:	add    ecx,esi
  41d760:	cmp    ecx,eax
  41d762:	je     0x41da3f
  41d768:	mov    eax,DWORD PTR [ebp+0x8]
  41d76b:	mov    eax,DWORD PTR [eax+0x194]
  41d771:	mov    ecx,DWORD PTR [eax]
  41d773:	mov    eax,DWORD PTR [ebp+0x8]
  41d776:	mov    eax,DWORD PTR [eax+0x194]
  41d77c:	mov    eax,DWORD PTR [eax]
  41d77e:	add    eax,DWORD PTR [ecx+0x3c]
  41d781:	mov    ecx,DWORD PTR [ebp+0x8]
  41d784:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41d78a:	lea    edx,[ebp-0xc4]
  41d790:	push   edx
  41d791:	mov    edx,DWORD PTR [ebp+0x8]
  41d794:	mov    edx,DWORD PTR [edx+0x18c]
  41d79a:	mov    edx,DWORD PTR [edx]
  41d79c:	add    edx,DWORD PTR [eax+0x88]
  41d7a2:	push   0x4
  41d7a4:	push   DWORD PTR [eax+0x8c]
  41d7aa:	push   edx
  41d7ab:	call   DWORD PTR [ecx+0x1c]
  41d7ae:	push   DWORD PTR [ebp+0x8]
  41d7b1:	mov    edi,DWORD PTR [ebp+0x8]
  41d7b4:	mov    eax,DWORD PTR [ebp+0x8]
  41d7b7:	mov    edx,DWORD PTR [eax+0x1b8]
  41d7bd:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41d7c4:	mov    DWORD PTR [ebp-0x64],0x50c011f
  41d7cb:	mov    WORD PTR [ebp-0x60],0x7c3d
  41d7d1:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  41d7db:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41d7e5:	mov    DWORD PTR [ebp-0x88],0x221d040c
  41d7ef:	mov    DWORD PTR [ebp-0x84],0xe190109
  41d7f9:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  41d800:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41d807:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  41d80e:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41d815:	mov    DWORD PTR [ebp-0x70],0xe190109
  41d81c:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41d823:	call   0x41fafc
  41d828:	push   eax
  41d829:	mov    eax,DWORD PTR [ebp+0x8]
  41d82c:	mov    eax,DWORD PTR [eax+0x1a8]
  41d832:	push   DWORD PTR [eax]
  41d834:	call   0x41f79d
  41d839:	test   eax,eax
  41d83b:	jne    0x41d88d
  41d83d:	mov    eax,DWORD PTR [ebp+0x8]
  41d840:	mov    eax,DWORD PTR [eax+0x1d8]
  41d846:	mov    edi,DWORD PTR [ebp+0x8]
  41d849:	add    eax,0x4
  41d84c:	mov    DWORD PTR [ebp-0x24],eax
  41d84f:	mov    eax,DWORD PTR [ebp+0x8]
  41d852:	mov    edx,DWORD PTR [eax+0x1b8]
  41d858:	call   0x41fafc
  41d85d:	push   eax
  41d85e:	mov    eax,DWORD PTR [ebp-0x24]
  41d861:	call   DWORD PTR [eax]
  41d863:	test   eax,eax
  41d865:	jne    0x41d88d
  41d867:	mov    eax,DWORD PTR [ebp+0x8]
  41d86a:	mov    eax,DWORD PTR [eax+0x1d8]
  41d870:	mov    edi,DWORD PTR [ebp+0x8]
  41d873:	add    eax,0x10
  41d876:	mov    DWORD PTR [ebp-0x24],eax
  41d879:	mov    eax,DWORD PTR [ebp+0x8]
  41d87c:	mov    edx,DWORD PTR [eax+0x1b8]
  41d882:	call   0x41fafc
  41d887:	push   eax
  41d888:	mov    eax,DWORD PTR [ebp-0x24]
  41d88b:	call   DWORD PTR [eax]
  41d88d:	mov    eax,DWORD PTR [ebp-0x14]
  41d890:	mov    ecx,DWORD PTR [ebp-0x28]
  41d893:	xor    eax,ebx
  41d895:	add    eax,esi
  41d897:	cmp    eax,ecx
  41d899:	je     0x41da18
  41d89f:	mov    eax,DWORD PTR [ebp-0x18]
  41d8a2:	xor    eax,ebx
  41d8a4:	mov    ecx,0xffcd8d1e
  41d8a9:	sub    ecx,eax
  41d8ab:	add    ecx,DWORD PTR [ebp-0x28]
  41d8ae:	mov    eax,DWORD PTR [ebp-0x8]
  41d8b1:	cmp    eax,ecx
  41d8b3:	ja     0x41da18
  41d8b9:	mov    DWORD PTR [ebp-0x20],0x0
  41d8c0:	push   DWORD PTR [ebp+0x8]
  41d8c3:	mov    edi,DWORD PTR [ebp+0x8]
  41d8c6:	mov    eax,DWORD PTR [ebp+0x8]
  41d8c9:	mov    edx,DWORD PTR [eax+0x1b4]
  41d8cf:	call   0x41fafc
  41d8d4:	push   eax
  41d8d5:	mov    eax,DWORD PTR [ebp+0x8]
  41d8d8:	mov    eax,DWORD PTR [eax+0x1a8]
  41d8de:	push   DWORD PTR [eax]
  41d8e0:	call   0x41f79d
  41d8e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d8e8:	mov    ecx,DWORD PTR [ecx+0x19c]
  41d8ee:	mov    DWORD PTR [ecx],eax
  41d8f0:	mov    eax,DWORD PTR [ebp+0x8]
  41d8f3:	mov    edi,DWORD PTR [eax+0x1d8]
  41d8f9:	mov    esi,DWORD PTR [ebp+0x8]
  41d8fc:	xor    eax,eax
  41d8fe:	lea    edx,[ebp-0x7c]
  41d901:	call   0x41fb32
  41d906:	push   eax
  41d907:	mov    eax,DWORD PTR [ebp+0x8]
  41d90a:	mov    eax,DWORD PTR [eax+0x19c]
  41d910:	push   DWORD PTR [eax]
  41d912:	call   DWORD PTR [edi+0x8]
  41d915:	mov    DWORD PTR [ebp-0x24],eax
  41d918:	mov    eax,DWORD PTR [ebp+0x8]
  41d91b:	mov    edi,DWORD PTR [eax+0x1d8]
  41d921:	mov    esi,DWORD PTR [ebp+0x8]
  41d924:	xor    eax,eax
  41d926:	lea    edx,[ebp-0x90]
  41d92c:	call   0x41fb32
  41d931:	push   eax
  41d932:	mov    eax,DWORD PTR [ebp+0x8]
  41d935:	mov    eax,DWORD PTR [eax+0x19c]
  41d93b:	push   DWORD PTR [eax]
  41d93d:	call   DWORD PTR [edi+0x8]
  41d940:	and    DWORD PTR [ebp-0x1c],0x0
  41d944:	mov    eax,DWORD PTR [ebp-0x1c]
  41d947:	and    eax,0x7
  41d94a:	add    eax,0x31
  41d94d:	push   eax
  41d94e:	call   DWORD PTR [ebp-0x24]
  41d951:	test   eax,eax
  41d953:	jne    0x41d95a
  41d955:	and    DWORD PTR [ebp-0x10],eax
  41d958:	jmp    0x41d982
  41d95a:	mov    eax,DWORD PTR [ebp+0x8]
  41d95d:	mov    edi,DWORD PTR [eax+0x1d8]
  41d963:	mov    esi,DWORD PTR [ebp+0x8]
  41d966:	xor    eax,eax
  41d968:	lea    edx,[ebp-0x68]
  41d96b:	call   0x41fb32
  41d970:	push   eax
  41d971:	mov    eax,DWORD PTR [ebp+0x8]
  41d974:	mov    eax,DWORD PTR [eax+0x198]
  41d97a:	push   DWORD PTR [eax]
  41d97c:	call   DWORD PTR [edi+0x8]
  41d97f:	mov    DWORD PTR [ebp-0x10],eax
  41d982:	inc    DWORD PTR [ebp-0x1c]
  41d985:	cmp    DWORD PTR [ebp-0x1c],0x10
  41d989:	jb     0x41d944
  41d98b:	mov    eax,DWORD PTR [ebp-0x18]
  41d98e:	mov    esi,DWORD PTR [ebp+0x8]
  41d991:	xor    eax,ebx
  41d993:	mov    edi,0x3272e2
  41d998:	add    eax,edi
  41d99a:	lea    edx,[ebp-0xe4]
  41d9a0:	call   0x41fb32
  41d9a5:	push   eax
  41d9a6:	mov    eax,DWORD PTR [ebp-0x14]
  41d9a9:	mov    esi,DWORD PTR [ebp+0x8]
  41d9ac:	xor    eax,ebx
  41d9ae:	add    eax,edi
  41d9b0:	lea    edx,[ebp-0x104]
  41d9b6:	call   0x41fb32
  41d9bb:	push   eax
  41d9bc:	call   DWORD PTR [ebp-0x10]
  41d9bf:	mov    ecx,DWORD PTR [ebp-0x14]
  41d9c2:	xor    ecx,ebx
  41d9c4:	add    ecx,edi
  41d9c6:	cmp    ecx,eax
  41d9c8:	jne    0x41d9d1
  41d9ca:	mov    DWORD PTR [ebp-0x20],0x1
  41d9d1:	mov    eax,DWORD PTR [ebp-0x18]
  41d9d4:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9d7:	xor    eax,ebx
  41d9d9:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9e0:	mov    DWORD PTR [ebp-0x8],eax
  41d9e3:	mov    eax,DWORD PTR [ebp-0x20]
  41d9e6:	test   eax,eax
  41d9e8:	je     0x41d9fc
  41d9ea:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x38]
  41d9f0:	xor    eax,ebx
  41d9f2:	lea    eax,[eax+ecx*1+0x3272e2]
  41d9f9:	mov    DWORD PTR [ebp-0x38],eax
  41d9fc:	mov    eax,DWORD PTR [ebp-0x18]
  41d9ff:	xor    eax,ebx
  41da01:	mov    ecx,0xffcd8d1e
  41da06:	sub    ecx,eax
  41da08:	add    ecx,DWORD PTR [ebp-0x28]
  41da0b:	mov    eax,DWORD PTR [ebp-0x8]
  41da0e:	cmp    eax,ecx
  41da10:	jbe    0x41d8b9
  41da16:	mov    esi,edi
  41da18:	mov    eax,DWORD PTR [ebp-0x38]
  41da1b:	mov    ecx,DWORD PTR [ebp-0x8]
  41da1e:	cmp    ecx,eax
  41da20:	jne    0x41da33
  41da22:	push   DWORD PTR [ebp+0x8]
  41da25:	lea    eax,[ebp-0x3c]
  41da28:	push   eax
  41da29:	call   0x4205aa
  41da2e:	mov    DWORD PTR [ebp-0x2c],eax
  41da31:	jmp    0x41da3f
  41da33:	mov    eax,DWORD PTR [ebp-0x2c]
  41da36:	mov    ecx,DWORD PTR [ebp-0x18]
  41da39:	xor    ecx,ebx
  41da3b:	add    ecx,esi
  41da3d:	xor    DWORD PTR [eax],ecx
  41da3f:	mov    eax,DWORD PTR [ebp-0x14]
  41da42:	mov    ecx,DWORD PTR [ebp-0x2c]
  41da45:	xor    eax,ebx
  41da47:	add    eax,esi
  41da49:	cmp    eax,ecx
  41da4b:	je     0x41e1c5
  41da51:	mov    eax,DWORD PTR [ebp-0x14]
  41da54:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da57:	xor    eax,ebx
  41da59:	add    eax,esi
  41da5b:	cmp    eax,ecx
  41da5d:	je     0x41e1c5
  41da63:	mov    eax,DWORD PTR [ebp-0x14]
  41da66:	xor    eax,ebx
  41da68:	add    eax,esi
  41da6a:	jmp    0x41da88
  41da6c:	mov    edi,DWORD PTR [ebp-0x2c]
  41da6f:	mov    cl,al
  41da71:	and    cl,0x1f
  41da74:	or     dl,0xff
  41da77:	sub    dl,cl
  41da79:	add    BYTE PTR [edi+eax*1],dl
  41da7c:	mov    ecx,DWORD PTR [ebp-0x18]
  41da7f:	xor    ecx,ebx
  41da81:	lea    eax,[eax+ecx*1+0x3272e2]
  41da88:	mov    ecx,DWORD PTR [ebp-0x3c]
  41da8b:	cmp    eax,ecx
  41da8d:	jb     0x41da6c
  41da8f:	mov    eax,DWORD PTR [ebp-0x3c]
  41da92:	mov    DWORD PTR [ebp-0x28],eax
  41da95:	mov    eax,DWORD PTR [ebp-0x2c]
  41da98:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41da9f:	mov    DWORD PTR [ebp-0xbc],eax
  41daa5:	mov    edi,0xf89c8584
  41daaa:	mov    DWORD PTR [ebp-0x30],edi
  41daad:	mov    eax,DWORD PTR [ebp-0x38]
  41dab0:	xor    eax,ebx
  41dab2:	add    eax,esi
  41dab4:	mov    DWORD PTR [ebp-0xc],eax
  41dab7:	mov    eax,DWORD PTR [ebp-0x38]
  41daba:	xor    eax,ebx
  41dabc:	add    eax,esi
  41dabe:	mov    DWORD PTR [ebp-0x8],eax
  41dac1:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41dac8:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41dacf:	mov    eax,DWORD PTR [ebp-0x38]
  41dad2:	mov    ecx,DWORD PTR [ebp-0x28]
  41dad5:	xor    eax,ebx
  41dad7:	add    eax,esi
  41dad9:	cmp    ecx,eax
  41dadb:	je     0x41dcda
  41dae1:	jmp    0x41dcb6
  41dae6:	mov    ecx,DWORD PTR [ebp-0xc]
  41dae9:	mov    eax,DWORD PTR [ebp-0x28]
  41daec:	sub    eax,ecx
  41daee:	mov    ecx,DWORD PTR [ebp-0x48]
  41daf1:	xor    ecx,ebx
  41daf3:	add    ecx,esi
  41daf5:	xor    edx,edx
  41daf7:	div    ecx
  41daf9:	mov    DWORD PTR [ebp-0x8],eax
  41dafc:	mov    eax,DWORD PTR [ebp-0x54]
  41daff:	mov    ecx,DWORD PTR [ebp-0x8]
  41db02:	xor    eax,ebx
  41db04:	add    eax,esi
  41db06:	cmp    ecx,eax
  41db08:	jbe    0x41db14
  41db0a:	mov    eax,DWORD PTR [ebp-0x54]
  41db0d:	xor    eax,ebx
  41db0f:	add    eax,esi
  41db11:	mov    DWORD PTR [ebp-0x8],eax
  41db14:	mov    eax,DWORD PTR [ebp-0x48]
  41db17:	mov    ecx,DWORD PTR [ebp-0x8]
  41db1a:	xor    eax,ebx
  41db1c:	add    eax,esi
  41db1e:	imul   eax,ecx
  41db21:	mov    DWORD PTR [ebp-0x8],eax
  41db24:	mov    eax,DWORD PTR [ebp-0x38]
  41db27:	mov    ecx,DWORD PTR [ebp-0x8]
  41db2a:	xor    eax,ebx
  41db2c:	add    eax,esi
  41db2e:	cmp    ecx,eax
  41db30:	je     0x41dca4
  41db36:	mov    eax,DWORD PTR [ebp-0x8]
  41db39:	mov    DWORD PTR [ebp-0x10],eax
  41db3c:	mov    eax,DWORD PTR [ebp-0xc]
  41db3f:	add    eax,DWORD PTR [ebp-0xbc]
  41db45:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  41db4c:	mov    DWORD PTR [ebp-0x20],edi
  41db4f:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41db59:	mov    DWORD PTR [ebp-0x8],eax
  41db5c:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41db63:	mov    DWORD PTR [ebp-0x1c],edi
  41db66:	mov    eax,DWORD PTR [ebp-0x24]
  41db69:	xor    eax,ebx
  41db6b:	add    eax,esi
  41db6d:	jmp    0x41dc63
  41db72:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41db7c:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  41db86:	mov    eax,DWORD PTR [ebp-0x1c]
  41db89:	mov    ecx,DWORD PTR [ebp-0x44]
  41db8c:	xor    eax,ebx
  41db8e:	add    eax,esi
  41db90:	imul   eax,ecx
  41db93:	mov    ecx,DWORD PTR [ebp-0x8]
  41db96:	mov    al,BYTE PTR [eax+ecx*1]
  41db99:	mov    BYTE PTR [ebp-0x2],al
  41db9c:	mov    eax,DWORD PTR [ebp-0x1c]
  41db9f:	mov    ecx,DWORD PTR [ebp-0x44]
  41dba2:	xor    eax,ebx
  41dba4:	add    eax,esi
  41dba6:	imul   eax,ecx
  41dba9:	mov    ecx,DWORD PTR [ebp-0xa8]
  41dbaf:	xor    ecx,ebx
  41dbb1:	add    eax,ecx
  41dbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbb6:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dbbe:	mov    ecx,DWORD PTR [ebp-0xb0]
  41dbc4:	xor    ecx,ebx
  41dbc6:	lea    eax,[ecx+eax*1+0x3272e2]
  41dbcd:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dbd1:	xor    ecx,eax
  41dbd3:	mov    BYTE PTR [ebp-0x2],cl
  41dbd6:	mov    al,BYTE PTR [ebp-0x2]
  41dbd9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dbdc:	mov    edx,DWORD PTR [ebp-0x44]
  41dbdf:	xor    ecx,ebx
  41dbe1:	add    ecx,esi
  41dbe3:	imul   ecx,edx
  41dbe6:	mov    edx,DWORD PTR [ebp-0x8]
  41dbe9:	mov    BYTE PTR [ecx+edx*1],al
  41dbec:	mov    eax,DWORD PTR [ebp-0x1c]
  41dbef:	mov    ecx,DWORD PTR [ebp-0x44]
  41dbf2:	xor    eax,ebx
  41dbf4:	add    eax,esi
  41dbf6:	imul   eax,ecx
  41dbf9:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbfc:	mov    al,BYTE PTR [eax+ecx*1]
  41dbff:	mov    BYTE PTR [ebp-0x2],al
  41dc02:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc05:	mov    ecx,DWORD PTR [ebp-0x44]
  41dc08:	xor    eax,ebx
  41dc0a:	add    eax,esi
  41dc0c:	imul   eax,ecx
  41dc0f:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc12:	xor    ecx,ebx
  41dc14:	add    eax,ecx
  41dc16:	mov    ecx,DWORD PTR [ebp-0x8]
  41dc19:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41dc21:	mov    ecx,DWORD PTR [ebp-0xb8]
  41dc27:	xor    ecx,ebx
  41dc29:	lea    eax,[ecx+eax*1+0x3272e2]
  41dc30:	movzx  ecx,BYTE PTR [ebp-0x2]
  41dc34:	xor    ecx,eax
  41dc36:	mov    BYTE PTR [ebp-0x2],cl
  41dc39:	mov    al,BYTE PTR [ebp-0x2]
  41dc3c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc3f:	mov    edx,DWORD PTR [ebp-0x44]
  41dc42:	xor    ecx,ebx
  41dc44:	add    ecx,esi
  41dc46:	imul   ecx,edx
  41dc49:	mov    edx,DWORD PTR [ebp-0x8]
  41dc4c:	mov    BYTE PTR [ecx+edx*1],al
  41dc4f:	mov    eax,DWORD PTR [ebp-0x34]
  41dc52:	mov    ecx,DWORD PTR [ebp-0x20]
  41dc55:	xor    eax,ebx
  41dc57:	xor    ecx,ebx
  41dc59:	add    eax,esi
  41dc5b:	add    ecx,esi
  41dc5d:	imul   eax,ecx
  41dc60:	add    eax,DWORD PTR [ebp-0x44]
  41dc63:	mov    DWORD PTR [ebp-0x44],eax
  41dc66:	mov    eax,DWORD PTR [ebp-0x44]
  41dc69:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc6c:	cmp    ecx,eax
  41dc6e:	jb     0x41db72
  41dc74:	mov    eax,DWORD PTR [ebp-0x20]
  41dc77:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc7a:	xor    eax,ebx
  41dc7c:	add    eax,esi
  41dc7e:	imul   eax,ecx
  41dc81:	mov    ecx,DWORD PTR [ebp-0x24]
  41dc84:	xor    ecx,ebx
  41dc86:	add    ecx,esi
  41dc88:	or     eax,ecx
  41dc8a:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc8d:	xor    ecx,ebx
  41dc8f:	add    eax,ecx
  41dc91:	mov    ecx,DWORD PTR [ebp-0x30]
  41dc94:	xor    ecx,ebx
  41dc96:	add    eax,ecx
  41dc98:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc9b:	lea    eax,[eax+ecx*1+0x64e5c4]
  41dca2:	jmp    0x41dcb3
  41dca4:	mov    eax,DWORD PTR [ebp-0x30]
  41dca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcaa:	xor    eax,ebx
  41dcac:	lea    eax,[eax+ecx*1+0x3272e2]
  41dcb3:	mov    DWORD PTR [ebp-0xc],eax
  41dcb6:	mov    eax,DWORD PTR [ebp-0x30]
  41dcb9:	xor    eax,ebx
  41dcbb:	mov    ecx,0xffcd8d1e
  41dcc0:	sub    ecx,eax
  41dcc2:	add    ecx,DWORD PTR [ebp-0x28]
  41dcc5:	mov    eax,DWORD PTR [ebp-0x30]
  41dcc8:	mov    edx,DWORD PTR [ebp-0xc]
  41dccb:	xor    eax,ebx
  41dccd:	add    eax,esi
  41dccf:	imul   eax,edx
  41dcd2:	cmp    eax,ecx
  41dcd4:	jbe    0x41dae6
  41dcda:	mov    eax,DWORD PTR [ebp-0x14]
  41dcdd:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    edx,DWORD PTR [ebp-0x4c]
  41dce6:	mov    eax,DWORD PTR [eax+0x1d8]
  41dcec:	xor    edx,ebx
  41dcee:	add    edx,esi
  41dcf0:	push   edx
  41dcf1:	mov    edx,DWORD PTR [ebp-0x40]
  41dcf4:	xor    edx,ebx
  41dcf6:	add    edx,esi
  41dcf8:	push   edx
  41dcf9:	push   ecx
  41dcfa:	mov    DWORD PTR [ebp-0x34],ecx
  41dcfd:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd00:	xor    ecx,ebx
  41dd02:	add    ecx,esi
  41dd04:	push   ecx
  41dd05:	call   DWORD PTR [eax+0x14]
  41dd08:	mov    edi,eax
  41dd0a:	mov    eax,DWORD PTR [ebp-0x14]
  41dd0d:	xor    eax,ebx
  41dd0f:	add    eax,esi
  41dd11:	cmp    eax,edi
  41dd13:	je     0x41dd6e
  41dd15:	mov    eax,DWORD PTR [ebp-0x14]
  41dd18:	jmp    0x41dd3b
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dd1d:	xor    eax,ebx
  41dd1f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41dd26:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  41dd2d:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd30:	xor    ecx,ebx
  41dd32:	lea    eax,[ecx+eax*1+0x3272e2]
  41dd39:	xor    eax,ebx
  41dd3b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41dd3e:	sub    ecx,esi
  41dd40:	xor    ecx,ebx
  41dd42:	cmp    eax,ecx
  41dd44:	jne    0x41dd1a
  41dd46:	mov    eax,DWORD PTR [ebp+0x8]
  41dd49:	mov    ecx,DWORD PTR [ebp-0x50]
  41dd4c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dd52:	xor    ecx,ebx
  41dd54:	add    ecx,esi
  41dd56:	push   ecx
  41dd57:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd5a:	xor    ecx,ebx
  41dd5c:	add    ecx,esi
  41dd5e:	push   ecx
  41dd5f:	push   DWORD PTR [ebp-0x2c]
  41dd62:	call   DWORD PTR [eax+0x18]
  41dd65:	mov    eax,DWORD PTR [ebp-0x34]
  41dd68:	mov    DWORD PTR [ebp-0x2c],edi
  41dd6b:	mov    DWORD PTR [ebp-0x3c],eax
  41dd6e:	mov    eax,DWORD PTR [ebp-0x2c]
  41dd71:	mov    DWORD PTR [ebp-0x10],eax
  41dd74:	mov    eax,DWORD PTR [ebp-0x18]
  41dd77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dd7a:	xor    eax,ebx
  41dd7c:	add    eax,esi
  41dd7e:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  41dd85:	mov    DWORD PTR [ebp-0x58],0x27143f14
  41dd8c:	jmp    0x41ddbf
  41dd8e:	mov    edx,DWORD PTR [ebp-0x10]
  41dd91:	mov    edi,ecx
  41dd93:	xor    edi,ebx
  41dd95:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  41dd9c:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41dda4:	xor    cl,0x74
  41dda7:	sub    cl,0x8
  41ddaa:	movzx  ecx,cl
  41ddad:	cmp    edx,ecx
  41ddaf:	jne    0x41ddc9
  41ddb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41ddb4:	xor    ecx,ebx
  41ddb6:	lea    ecx,[ecx+edi*1+0x3272e2]
  41ddbd:	xor    ecx,ebx
  41ddbf:	cmp    ecx,0xf89c85bd
  41ddc5:	jne    0x41dd8e
  41ddc7:	jmp    0x41ddd0
  41ddc9:	mov    eax,DWORD PTR [ebp-0x14]
  41ddcc:	xor    eax,ebx
  41ddce:	add    eax,esi
  41ddd0:	mov    ecx,DWORD PTR [ebp-0x14]
  41ddd3:	xor    ecx,ebx
  41ddd5:	add    ecx,esi
  41ddd7:	cmp    ecx,eax
  41ddd9:	je     0x41df4f
  41dddf:	mov    eax,DWORD PTR [ebp-0x10]
  41dde2:	mov    eax,DWORD PTR [eax+0x8]
  41dde5:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41ddec:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41ddf3:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  41ddfa:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41de01:	mov    DWORD PTR [ebp-0x20],eax
  41de04:	mov    eax,DWORD PTR [ebp+0x8]
  41de07:	mov    ecx,DWORD PTR [ebp-0x24]
  41de0a:	xor    ecx,ebx
  41de0c:	add    ecx,esi
  41de0e:	push   ecx
  41de0f:	mov    ecx,DWORD PTR [ebp-0x48]
  41de12:	mov    eax,DWORD PTR [eax+0x1d8]
  41de18:	xor    ecx,ebx
  41de1a:	add    ecx,esi
  41de1c:	push   ecx
  41de1d:	mov    ecx,DWORD PTR [ebp-0x40]
  41de20:	xor    ecx,ebx
  41de22:	add    ecx,esi
  41de24:	push   ecx
  41de25:	mov    ecx,DWORD PTR [ebp-0xc]
  41de28:	xor    ecx,ebx
  41de2a:	add    ecx,esi
  41de2c:	push   ecx
  41de2d:	call   DWORD PTR [eax+0x14]
  41de30:	mov    edi,eax
  41de32:	mov    eax,DWORD PTR [ebp+0x8]
  41de35:	mov    ecx,DWORD PTR [ebp-0x24]
  41de38:	mov    eax,DWORD PTR [eax+0x1d8]
  41de3e:	xor    ecx,ebx
  41de40:	add    ecx,esi
  41de42:	push   ecx
  41de43:	mov    ecx,DWORD PTR [ebp-0x48]
  41de46:	xor    ecx,ebx
  41de48:	add    ecx,esi
  41de4a:	push   ecx
  41de4b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de4e:	push   DWORD PTR [ebp-0x20]
  41de51:	xor    ecx,ebx
  41de53:	add    ecx,esi
  41de55:	push   ecx
  41de56:	call   DWORD PTR [eax+0x14]
  41de59:	mov    ecx,DWORD PTR [ebp-0xc]
  41de5c:	xor    ecx,ebx
  41de5e:	add    ecx,esi
  41de60:	mov    DWORD PTR [ebp-0x24],eax
  41de63:	cmp    ecx,edi
  41de65:	je     0x41e1f2
  41de6b:	mov    ecx,DWORD PTR [ebp-0xc]
  41de6e:	xor    ecx,ebx
  41de70:	add    ecx,esi
  41de72:	cmp    ecx,eax
  41de74:	je     0x41e1f2
  41de7a:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  41de81:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41de88:	mov    ecx,DWORD PTR [ebp-0x40]
  41de8b:	xor    cl,0x9b
  41de8e:	sub    cl,0x1e
  41de91:	mov    BYTE PTR [edi],cl
  41de93:	mov    ecx,DWORD PTR [ebp-0xc]
  41de96:	xor    cl,0x9b
  41de99:	sub    cl,0x1e
  41de9c:	mov    BYTE PTR [edi+0x1],cl
  41de9f:	mov    ecx,DWORD PTR [ebp-0x4c]
  41dea2:	xor    cl,0x9b
  41dea5:	sub    cl,0x1e
  41dea8:	mov    BYTE PTR [edi+0x2],cl
  41deab:	and    DWORD PTR [ebp-0xb4],0x0
  41deb2:	and    DWORD PTR [ebp-0xa4],0x0
  41deb9:	lea    ecx,[ebp-0xa4]
  41debf:	push   ecx
  41dec0:	push   DWORD PTR [ebp-0x20]
  41dec3:	push   eax
  41dec4:	lea    eax,[ebp-0xb4]
  41deca:	push   eax
  41decb:	mov    eax,DWORD PTR [ebp-0x10]
  41dece:	push   DWORD PTR [eax+0xc]
  41ded1:	mov    eax,DWORD PTR [ebp-0x2c]
  41ded4:	add    eax,0x10
  41ded7:	push   eax
  41ded8:	push   edi
  41ded9:	call   0x41d223
  41dede:	mov    DWORD PTR [ebp-0x40],eax
  41dee1:	mov    eax,DWORD PTR [ebp+0x8]
  41dee4:	mov    ecx,DWORD PTR [ebp-0x50]
  41dee7:	mov    eax,DWORD PTR [eax+0x1d8]
  41deed:	xor    ecx,ebx
  41deef:	add    ecx,esi
  41def1:	push   ecx
  41def2:	mov    ecx,DWORD PTR [ebp-0xc]
  41def5:	xor    ecx,ebx
  41def7:	add    ecx,esi
  41def9:	push   ecx
  41defa:	push   edi
  41defb:	call   DWORD PTR [eax+0x18]
  41defe:	mov    eax,DWORD PTR [ebp-0x40]
  41df01:	add    eax,0xffcd8d1e
  41df06:	xor    eax,ebx
  41df08:	cmp    eax,0xf89c8585
  41df0d:	mov    eax,DWORD PTR [ebp+0x8]
  41df10:	mov    eax,DWORD PTR [eax+0x1d8]
  41df16:	mov    ecx,DWORD PTR [ebp-0x50]
  41df19:	jne    0x41df3c
  41df1b:	xor    ecx,ebx
  41df1d:	add    ecx,esi
  41df1f:	push   ecx
  41df20:	mov    ecx,DWORD PTR [ebp-0xc]
  41df23:	xor    ecx,ebx
  41df25:	add    ecx,esi
  41df27:	push   ecx
  41df28:	push   DWORD PTR [ebp-0x2c]
  41df2b:	call   DWORD PTR [eax+0x18]
  41df2e:	mov    eax,DWORD PTR [ebp-0x24]
  41df31:	mov    DWORD PTR [ebp-0x2c],eax
  41df34:	mov    eax,DWORD PTR [ebp-0x20]
  41df37:	mov    DWORD PTR [ebp-0x3c],eax
  41df3a:	jmp    0x41df4f
  41df3c:	xor    ecx,ebx
  41df3e:	add    ecx,esi
  41df40:	push   ecx
  41df41:	mov    ecx,DWORD PTR [ebp-0xc]
  41df44:	xor    ecx,ebx
  41df46:	add    ecx,esi
  41df48:	push   ecx
  41df49:	push   DWORD PTR [ebp-0x24]
  41df4c:	call   DWORD PTR [eax+0x18]
  41df4f:	mov    eax,DWORD PTR [ebp-0x3c]
  41df52:	mov    DWORD PTR [ebp-0x38],eax
  41df55:	mov    eax,DWORD PTR [ebp-0x2c]
  41df58:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  41df5f:	mov    DWORD PTR [ebp-0x40],eax
  41df62:	mov    edi,0xf89c8584
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	mov    eax,DWORD PTR [ebp-0x28]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0xc],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x28]
  41df77:	xor    eax,ebx
  41df79:	add    eax,esi
  41df7b:	mov    DWORD PTR [ebp-0x10],eax
  41df7e:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41df85:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41df8c:	mov    eax,DWORD PTR [ebp-0x28]
  41df8f:	mov    ecx,DWORD PTR [ebp-0x38]
  41df92:	xor    eax,ebx
  41df94:	add    eax,esi
  41df96:	cmp    ecx,eax
  41df98:	je     0x41e18e
  41df9e:	jmp    0x41e16a
  41dfa3:	mov    ecx,DWORD PTR [ebp-0xc]
  41dfa6:	mov    eax,DWORD PTR [ebp-0x38]
  41dfa9:	sub    eax,ecx
  41dfab:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfae:	xor    ecx,ebx
  41dfb0:	add    ecx,esi
  41dfb2:	xor    edx,edx
  41dfb4:	div    ecx
  41dfb6:	mov    DWORD PTR [ebp-0x10],eax
  41dfb9:	mov    eax,DWORD PTR [ebp-0x24]
  41dfbc:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfbf:	xor    eax,ebx
  41dfc1:	add    eax,esi
  41dfc3:	cmp    ecx,eax
  41dfc5:	jbe    0x41dfd1
  41dfc7:	mov    eax,DWORD PTR [ebp-0x24]
  41dfca:	xor    eax,ebx
  41dfcc:	add    eax,esi
  41dfce:	mov    DWORD PTR [ebp-0x10],eax
  41dfd1:	mov    eax,DWORD PTR [ebp-0x48]
  41dfd4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfd7:	xor    eax,ebx
  41dfd9:	add    eax,esi
  41dfdb:	imul   eax,ecx
  41dfde:	mov    DWORD PTR [ebp-0x10],eax
  41dfe1:	mov    eax,DWORD PTR [ebp-0x28]
  41dfe4:	mov    ecx,DWORD PTR [ebp-0x10]
  41dfe7:	xor    eax,ebx
  41dfe9:	add    eax,esi
  41dfeb:	cmp    ecx,eax
  41dfed:	je     0x41e158
  41dff3:	mov    eax,DWORD PTR [ebp-0x10]
  41dff6:	mov    DWORD PTR [ebp-0x20],eax
  41dff9:	mov    eax,DWORD PTR [ebp-0xc]
  41dffc:	add    eax,DWORD PTR [ebp-0x40]
  41dfff:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41e006:	mov    DWORD PTR [ebp-0x10],edi
  41e009:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41e010:	mov    DWORD PTR [ebp-0x1c],eax
  41e013:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  41e01a:	mov    DWORD PTR [ebp-0x8],edi
  41e01d:	mov    eax,DWORD PTR [ebp-0x54]
  41e020:	xor    eax,ebx
  41e022:	add    eax,esi
  41e024:	jmp    0x41e117
  41e029:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41e033:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  41e03d:	mov    eax,DWORD PTR [ebp-0x8]
  41e040:	mov    ecx,DWORD PTR [ebp-0x18]
  41e043:	xor    eax,ebx
  41e045:	add    eax,esi
  41e047:	imul   eax,ecx
  41e04a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e04d:	mov    al,BYTE PTR [eax+ecx*1]
  41e050:	mov    BYTE PTR [ebp-0x1],al
  41e053:	mov    eax,DWORD PTR [ebp-0x8]
  41e056:	mov    ecx,DWORD PTR [ebp-0x18]
  41e059:	xor    eax,ebx
  41e05b:	add    eax,esi
  41e05d:	imul   eax,ecx
  41e060:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e063:	xor    ecx,ebx
  41e065:	add    eax,ecx
  41e067:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e06a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e072:	mov    ecx,DWORD PTR [ebp-0xac]
  41e078:	xor    ecx,ebx
  41e07a:	lea    eax,[ecx+eax*1+0x3272e2]
  41e081:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e085:	xor    ecx,eax
  41e087:	mov    BYTE PTR [ebp-0x1],cl
  41e08a:	mov    al,BYTE PTR [ebp-0x1]
  41e08d:	mov    ecx,DWORD PTR [ebp-0x8]
  41e090:	mov    edx,DWORD PTR [ebp-0x18]
  41e093:	xor    ecx,ebx
  41e095:	add    ecx,esi
  41e097:	imul   ecx,edx
  41e09a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e09d:	mov    BYTE PTR [ecx+edx*1],al
  41e0a0:	mov    eax,DWORD PTR [ebp-0x8]
  41e0a3:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0a6:	xor    eax,ebx
  41e0a8:	add    eax,esi
  41e0aa:	imul   eax,ecx
  41e0ad:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0b0:	mov    al,BYTE PTR [eax+ecx*1]
  41e0b3:	mov    BYTE PTR [ebp-0x1],al
  41e0b6:	mov    eax,DWORD PTR [ebp-0x8]
  41e0b9:	mov    ecx,DWORD PTR [ebp-0x18]
  41e0bc:	xor    eax,ebx
  41e0be:	add    eax,esi
  41e0c0:	imul   eax,ecx
  41e0c3:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0c6:	xor    ecx,ebx
  41e0c8:	add    eax,ecx
  41e0ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e0cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41e0d5:	mov    ecx,DWORD PTR [ebp-0x9c]
  41e0db:	xor    ecx,ebx
  41e0dd:	lea    eax,[ecx+eax*1+0x3272e2]
  41e0e4:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e0e8:	xor    ecx,eax
  41e0ea:	mov    BYTE PTR [ebp-0x1],cl
  41e0ed:	mov    al,BYTE PTR [ebp-0x1]
  41e0f0:	mov    ecx,DWORD PTR [ebp-0x8]
  41e0f3:	mov    edx,DWORD PTR [ebp-0x18]
  41e0f6:	xor    ecx,ebx
  41e0f8:	add    ecx,esi
  41e0fa:	imul   ecx,edx
  41e0fd:	mov    edx,DWORD PTR [ebp-0x1c]
  41e100:	mov    BYTE PTR [ecx+edx*1],al
  41e103:	mov    eax,DWORD PTR [ebp-0x34]
  41e106:	mov    ecx,DWORD PTR [ebp-0x10]
  41e109:	xor    eax,ebx
  41e10b:	xor    ecx,ebx
  41e10d:	add    eax,esi
  41e10f:	add    ecx,esi
  41e111:	imul   eax,ecx
  41e114:	add    eax,DWORD PTR [ebp-0x18]
  41e117:	mov    DWORD PTR [ebp-0x18],eax
  41e11a:	mov    eax,DWORD PTR [ebp-0x18]
  41e11d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e120:	cmp    ecx,eax
  41e122:	jb     0x41e029
  41e128:	mov    eax,DWORD PTR [ebp-0x10]
  41e12b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e12e:	xor    eax,ebx
  41e130:	add    eax,esi
  41e132:	imul   eax,ecx
  41e135:	mov    ecx,DWORD PTR [ebp-0x54]
  41e138:	xor    ecx,ebx
  41e13a:	add    ecx,esi
  41e13c:	or     eax,ecx
  41e13e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e141:	xor    ecx,ebx
  41e143:	add    eax,ecx
  41e145:	mov    ecx,DWORD PTR [ebp-0x30]
  41e148:	xor    ecx,ebx
  41e14a:	add    eax,ecx
  41e14c:	mov    ecx,DWORD PTR [ebp-0xc]
  41e14f:	lea    eax,[eax+ecx*1+0x64e5c4]
  41e156:	jmp    0x41e167
  41e158:	mov    eax,DWORD PTR [ebp-0x30]
  41e15b:	mov    ecx,DWORD PTR [ebp-0xc]
  41e15e:	xor    eax,ebx
  41e160:	lea    eax,[eax+ecx*1+0x3272e2]
  41e167:	mov    DWORD PTR [ebp-0xc],eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x30]
  41e16d:	xor    eax,ebx
  41e16f:	mov    ecx,0xffcd8d1e
  41e174:	sub    ecx,eax
  41e176:	add    ecx,DWORD PTR [ebp-0x38]
  41e179:	mov    eax,DWORD PTR [ebp-0x30]
  41e17c:	mov    edx,DWORD PTR [ebp-0xc]
  41e17f:	xor    eax,ebx
  41e181:	add    eax,esi
  41e183:	imul   eax,edx
  41e186:	cmp    eax,ecx
  41e188:	jbe    0x41dfa3
  41e18e:	push   DWORD PTR [ebp+0x8]
  41e191:	mov    eax,DWORD PTR [ebp+0x8]
  41e194:	push   DWORD PTR [eax+0x1cc]
  41e19a:	lea    eax,[ebp-0xa0]
  41e1a0:	push   eax
  41e1a1:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a4:	mov    eax,DWORD PTR [eax+0x1c4]
  41e1aa:	push   DWORD PTR [eax]
  41e1ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e1af:	mov    eax,DWORD PTR [eax+0x1c0]
  41e1b5:	push   DWORD PTR [eax]
  41e1b7:	push   DWORD PTR [ebp-0x3c]
  41e1ba:	push   DWORD PTR [ebp-0x2c]
  41e1bd:	call   0x41ec54
  41e1c2:	mov    DWORD PTR [ebp-0x40],eax
  41e1c5:	mov    eax,DWORD PTR [ebp-0x14]
  41e1c8:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e1cb:	xor    eax,ebx
  41e1cd:	add    eax,esi
  41e1cf:	cmp    eax,ecx
  41e1d1:	je     0x41e1f2
  41e1d3:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d6:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1d9:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1df:	xor    ecx,ebx
  41e1e1:	add    ecx,esi
  41e1e3:	push   ecx
  41e1e4:	mov    ecx,DWORD PTR [ebp-0x14]
  41e1e7:	xor    ecx,ebx
  41e1e9:	add    ecx,esi
  41e1eb:	push   ecx
  41e1ec:	push   DWORD PTR [ebp-0x2c]
  41e1ef:	call   DWORD PTR [eax+0x18]
  41e1f2:	pop    edi
  41e1f3:	pop    esi
  41e1f4:	pop    ebx
  41e1f5:	leave  
  41e1f6:	ret    0x4
  41e1f9:	push   ebp
  41e1fa:	mov    ebp,esp
  41e1fc:	push   ecx
  41e1fd:	push   ecx
  41e1fe:	lea    eax,[ebp-0x8]
  41e201:	mov    DWORD PTR [ebp-0x4],eax
  41e204:	push   esi
  41e205:	mov    esi,DWORD PTR [ebp-0x4]
  41e208:	mov    eax,0xf881ba0f
  41e20d:	mov    DWORD PTR [esi],eax
  41e20f:	mov    esi,DWORD PTR [ebp-0x8]
  41e212:	cmp    esi,eax
  41e214:	pop    esi
  41e215:	jne    0x41e21f
  41e217:	mov    BYTE PTR [ecx+0xa],0x7c
  41e21b:	mov    BYTE PTR [edx+0x8],0x2f
  41e21f:	mov    BYTE PTR [edx+0xa],0x7c
  41e223:	mov    BYTE PTR [ecx+0x2],0x2
  41e227:	leave  
  41e228:	ret    
  41e229:	push   ebp
  41e22a:	mov    ebp,esp
  41e22c:	push   ecx
  41e22d:	push   ecx
  41e22e:	lea    eax,[ebp-0x8]
  41e231:	mov    DWORD PTR [ebp-0x4],eax
  41e234:	mov    edx,DWORD PTR [ebp-0x4]
  41e237:	mov    eax,0xf88b0be3
  41e23c:	mov    DWORD PTR [edx],eax
  41e23e:	mov    edx,DWORD PTR [ebp-0x8]
  41e241:	cmp    edx,eax
  41e243:	jne    0x41e254
  41e245:	mov    eax,DWORD PTR [ebp+0x8]
  41e248:	mov    BYTE PTR [ecx+0x9],0x8
  41e24c:	mov    BYTE PTR [eax+0x7],0x47
  41e250:	mov    BYTE PTR [ecx+0x6],0xf
  41e254:	mov    BYTE PTR [ecx+0x3],0x18
  41e258:	leave  
  41e259:	ret    0x4
  41e25c:	push   ebp
  41e25d:	mov    ebp,esp
  41e25f:	push   ecx
  41e260:	push   ecx
  41e261:	lea    eax,[ebp-0x8]
  41e264:	mov    DWORD PTR [ebp-0x4],eax
  41e267:	mov    edx,DWORD PTR [ebp-0x4]
  41e26a:	mov    eax,0x7e0da0f
  41e26f:	mov    DWORD PTR [edx],eax
  41e271:	mov    edx,DWORD PTR [ebp-0x8]
  41e274:	cmp    edx,eax
  41e276:	jne    0x41e27c
  41e278:	mov    BYTE PTR [ecx+0x7],0x47
  41e27c:	mov    eax,DWORD PTR [ebp+0x8]
  41e27f:	mov    BYTE PTR [ecx+0x1],0x5
  41e283:	mov    BYTE PTR [eax+0x9],0x28
  41e287:	leave  
  41e288:	ret    0x4
  41e28b:	push   ebp
  41e28c:	mov    ebp,esp
  41e28e:	push   ecx
  41e28f:	push   ecx
  41e290:	lea    eax,[ebp-0x8]
  41e293:	mov    DWORD PTR [ebp-0x4],eax
  41e296:	push   esi
  41e297:	mov    esi,DWORD PTR [ebp-0x4]
  41e29a:	mov    eax,0x7060e3e
  41e29f:	mov    DWORD PTR [esi],eax
  41e2a1:	mov    esi,DWORD PTR [ebp-0x8]
  41e2a4:	cmp    esi,eax
  41e2a6:	pop    esi
  41e2a7:	jne    0x41e2b3
  41e2a9:	mov    BYTE PTR [edx+0x4],0x3
  41e2ad:	mov    WORD PTR [ecx+0x3],0x318
  41e2b3:	mov    BYTE PTR [edx],0x3f
  41e2b6:	leave  
  41e2b7:	ret    
  41e2b8:	push   ebp
  41e2b9:	mov    ebp,esp
  41e2bb:	push   ecx
  41e2bc:	push   ecx
  41e2bd:	lea    eax,[ebp-0x8]
  41e2c0:	mov    DWORD PTR [ebp-0x4],eax
  41e2c3:	mov    edx,DWORD PTR [ebp-0x4]
  41e2c6:	mov    eax,0xf8870b3f
  41e2cb:	mov    DWORD PTR [edx],eax
  41e2cd:	mov    edx,DWORD PTR [ebp-0x8]
  41e2d0:	cmp    edx,eax
  41e2d2:	jne    0x41e2df
  41e2d4:	mov    eax,DWORD PTR [ebp+0x8]
  41e2d7:	mov    BYTE PTR [ecx+0x8],0xf
  41e2db:	mov    BYTE PTR [eax+0x1],0x5
  41e2df:	mov    BYTE PTR [ecx+0x5],0xb
  41e2e3:	leave  
  41e2e4:	ret    0x4
  41e2e7:	push   esi
  41e2e8:	mov    ecx,edi
  41e2ea:	call   0x41e2b8
  41e2ef:	mov    edx,edi
  41e2f1:	mov    ecx,esi
  41e2f3:	mov    BYTE PTR [esi],0x1f
  41e2f6:	call   0x41e28b
  41e2fb:	push   esi
  41e2fc:	mov    ecx,edi
  41e2fe:	mov    BYTE PTR [esi+0x5],0xb
  41e302:	call   0x41e25c
  41e307:	push   esi
  41e308:	mov    BYTE PTR [esi+0x6],0xf
  41e30c:	call   0x41e229
  41e311:	mov    BYTE PTR [esi+0x2],0x2
  41e315:	mov    edx,esi
  41e317:	jmp    0x41e1f9
  41e31c:	push   ebp
  41e31d:	mov    ebp,esp
  41e31f:	push   ecx
  41e320:	mov    ecx,DWORD PTR [edx+0x194]
  41e326:	push   esi
  41e327:	mov    esi,DWORD PTR [ebp+0x8]
  41e32a:	mov    esi,DWORD PTR [esi]
  41e32c:	mov    DWORD PTR [ecx],esi
  41e32e:	mov    ecx,DWORD PTR [edx+0x194]
  41e334:	mov    ecx,DWORD PTR [ecx]
  41e336:	mov    esi,DWORD PTR [edx+0x190]
  41e33c:	mov    DWORD PTR [esi],ecx
  41e33e:	mov    eax,DWORD PTR [edx+0x194]
  41e344:	mov    ecx,DWORD PTR [eax]
  41e346:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e349:	add    ecx,DWORD PTR [eax]
  41e34b:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  41e352:	mov    eax,DWORD PTR [ebp-0x4]
  41e355:	movzx  ecx,WORD PTR [ecx+0x16]
  41e359:	xor    eax,0x751089b
  41e35e:	add    eax,0x3272e2
  41e363:	pop    esi
  41e364:	test   ecx,eax
  41e366:	je     0x41e374
  41e368:	mov    eax,DWORD PTR [edx+0x1c8]
  41e36e:	mov    DWORD PTR [eax],0xf89c8584
  41e374:	leave  
  41e375:	ret    0x4
  41e378:	push   ebp
  41e379:	mov    ebp,esp
  41e37b:	sub    esp,0x70
  41e37e:	and    DWORD PTR [ebp-0x20],0x0
  41e382:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  41e389:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  41e390:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41e397:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41e39e:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  41e3a5:	mov    eax,DWORD PTR [ebp+0x20]
  41e3a8:	mov    eax,DWORD PTR [eax+0x194]
  41e3ae:	mov    DWORD PTR [ebp-0xc],eax
  41e3b1:	mov    eax,DWORD PTR [ebp+0x20]
  41e3b4:	push   ebx
  41e3b5:	push   esi
  41e3b6:	mov    esi,DWORD PTR [eax+0x190]
  41e3bc:	mov    eax,DWORD PTR [ebp+0x20]
  41e3bf:	mov    eax,DWORD PTR [eax+0x18c]
  41e3c5:	mov    DWORD PTR [ebp-0x8],eax
  41e3c8:	mov    eax,DWORD PTR [eax]
  41e3ca:	push   edi
  41e3cb:	mov    DWORD PTR [ebp-0x4],esi
  41e3ce:	test   eax,eax
  41e3d0:	jne    0x41e3dd
  41e3d2:	push   DWORD PTR [ebp+0x1c]
  41e3d5:	mov    edx,DWORD PTR [ebp+0x20]
  41e3d8:	call   0x41e31c
  41e3dd:	mov    eax,DWORD PTR [esi]
  41e3df:	mov    ebx,DWORD PTR [esi]
  41e3e1:	add    ebx,DWORD PTR [eax+0x3c]
  41e3e4:	mov    eax,DWORD PTR [ebp+0xc]
  41e3e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3ea:	mov    ecx,DWORD PTR [ecx]
  41e3ec:	mov    esi,0x751089b
  41e3f1:	xor    eax,esi
  41e3f3:	mov    edi,0x3272e2
  41e3f8:	add    eax,edi
  41e3fa:	cmp    eax,ecx
  41e3fc:	jne    0x41e634
  41e402:	mov    eax,DWORD PTR [ebp-0xc]
  41e405:	mov    eax,DWORD PTR [eax]
  41e407:	mov    DWORD PTR [ebp-0x10],eax
  41e40a:	mov    eax,DWORD PTR [ebx+0x50]
  41e40d:	mov    DWORD PTR [ebp-0x68],eax
  41e410:	mov    eax,DWORD PTR [ebp-0x18]
  41e413:	xor    eax,esi
  41e415:	add    eax,edi
  41e417:	mov    DWORD PTR [ebp-0x64],eax
  41e41a:	mov    eax,DWORD PTR [ebp-0x14]
  41e41d:	and    DWORD PTR [ebp-0x6c],0x0
  41e421:	xor    eax,esi
  41e423:	add    eax,edi
  41e425:	mov    DWORD PTR [ebp-0x60],eax
  41e428:	lea    eax,[ebp-0x70]
  41e42b:	push   eax
  41e42c:	mov    eax,DWORD PTR [ebp+0x8]
  41e42f:	xor    eax,esi
  41e431:	add    eax,edi
  41e433:	push   eax
  41e434:	mov    eax,DWORD PTR [ebp+0x20]
  41e437:	add    eax,0xaa
  41e43c:	push   eax
  41e43d:	mov    eax,DWORD PTR [ebp+0x20]
  41e440:	mov    eax,DWORD PTR [eax+0x198]
  41e446:	mov    DWORD PTR [ebp-0x70],0x4
  41e44d:	push   DWORD PTR [eax]
  41e44f:	mov    eax,DWORD PTR [ebp+0x10]
  41e452:	call   eax
  41e454:	mov    ecx,DWORD PTR [ebp-0xc]
  41e457:	mov    ecx,DWORD PTR [ecx]
  41e459:	mov    edx,DWORD PTR [ebp-0x8]
  41e45c:	mov    DWORD PTR [ebp-0x6c],eax
  41e45f:	mov    DWORD PTR [ebp+0x1c],eax
  41e462:	mov    DWORD PTR [edx],ecx
  41e464:	mov    ecx,DWORD PTR [ebp-0x4]
  41e467:	mov    DWORD PTR [ecx],eax
  41e469:	mov    eax,DWORD PTR [ebx+0x50]
  41e46c:	mov    DWORD PTR [ebp-0x68],eax
  41e46f:	mov    eax,DWORD PTR [ebp-0x1c]
  41e472:	xor    eax,esi
  41e474:	add    eax,edi
  41e476:	mov    DWORD PTR [ebp-0x64],eax
  41e479:	lea    eax,[ebp-0x20]
  41e47c:	mov    DWORD PTR [ebp-0x60],eax
  41e47f:	lea    eax,[ebp-0x70]
  41e482:	push   eax
  41e483:	mov    eax,DWORD PTR [ebp+0x8]
  41e486:	xor    eax,esi
  41e488:	add    eax,edi
  41e48a:	push   eax
  41e48b:	mov    eax,DWORD PTR [ebp+0x20]
  41e48e:	add    eax,0xee
  41e493:	push   eax
  41e494:	mov    eax,DWORD PTR [ebp+0x20]
  41e497:	mov    eax,DWORD PTR [eax+0x198]
  41e49d:	mov    DWORD PTR [ebp-0x70],0x4
  41e4a4:	push   DWORD PTR [eax]
  41e4a6:	mov    eax,DWORD PTR [ebp+0x10]
  41e4a9:	call   eax
  41e4ab:	test   eax,eax
  41e4ad:	je     0x41e4d2
  41e4af:	and    DWORD PTR [ebp+0xc],0x0
  41e4b3:	cmp    DWORD PTR [ebx+0x50],0x0
  41e4b7:	jbe    0x41e4d2
  41e4b9:	mov    eax,DWORD PTR [ebp+0x1c]
  41e4bc:	mov    ecx,DWORD PTR [ebp-0x10]
  41e4bf:	sub    ecx,eax
  41e4c1:	mov    dl,BYTE PTR [ecx+eax*1]
  41e4c4:	inc    DWORD PTR [ebp+0xc]
  41e4c7:	mov    BYTE PTR [eax],dl
  41e4c9:	mov    edx,DWORD PTR [ebp+0xc]
  41e4cc:	inc    eax
  41e4cd:	cmp    edx,DWORD PTR [ebx+0x50]
  41e4d0:	jb     0x41e4c1
  41e4d2:	mov    edx,DWORD PTR [ebp+0x1c]
  41e4d5:	mov    ecx,DWORD PTR [edx+0x3c]
  41e4d8:	add    ecx,edx
  41e4da:	mov    eax,DWORD PTR [ecx+0xa0]
  41e4e0:	mov    ebx,DWORD PTR [ecx+0x28]
  41e4e3:	add    eax,edx
  41e4e5:	sub    edx,DWORD PTR [ebp-0x10]
  41e4e8:	add    ebx,DWORD PTR [ebp+0x1c]
  41e4eb:	mov    DWORD PTR [ebp+0xc],edx
  41e4ee:	mov    DWORD PTR [ebp-0x2c],ecx
  41e4f1:	mov    DWORD PTR [ebp-0x14],ebx
  41e4f4:	mov    DWORD PTR [ebp-0x8],0x0
  41e4fb:	jmp    0x41e577
  41e4fd:	add    edx,0xfffffff8
  41e500:	shr    edx,1
  41e502:	mov    DWORD PTR [ebp-0x18],edx
  41e505:	je     0x41e563
  41e507:	lea    edx,[eax+0x8]
  41e50a:	mov    DWORD PTR [ebp-0x4],edx
  41e50d:	mov    edx,DWORD PTR [ebp-0x18]
  41e510:	mov    DWORD PTR [ebp-0x18],edx
  41e513:	mov    edx,DWORD PTR [ebp-0x4]
  41e516:	movzx  edx,WORD PTR [edx]
  41e519:	mov    DWORD PTR [ebp-0x24],edx
  41e51c:	and    edx,0xfff
  41e522:	mov    DWORD PTR [ebp-0x28],edx
  41e525:	mov    edx,DWORD PTR [ebp-0x24]
  41e528:	shr    edx,0xc
  41e52b:	add    edx,0xffcd8d1e
  41e531:	xor    edx,esi
  41e533:	cmp    edx,0xf89c85ba
  41e539:	jne    0x41e55a
  41e53b:	mov    edx,DWORD PTR [ebp-0x28]
  41e53e:	add    edx,DWORD PTR [ebp+0x1c]
  41e541:	mov    ebx,DWORD PTR [eax]
  41e543:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e547:	je     0x41e557
  41e549:	mov    ecx,DWORD PTR [ebp+0xc]
  41e54c:	add    ecx,DWORD PTR [ebx+edx*1]
  41e54f:	mov    ebx,DWORD PTR [eax]
  41e551:	mov    DWORD PTR [edx+ebx*1],ecx
  41e554:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e557:	mov    ebx,DWORD PTR [ebp-0x14]
  41e55a:	add    DWORD PTR [ebp-0x4],0x2
  41e55e:	dec    DWORD PTR [ebp-0x18]
  41e561:	jne    0x41e513
  41e563:	mov    edx,DWORD PTR [ebp-0xc]
  41e566:	add    DWORD PTR [ebp-0x8],edx
  41e569:	mov    edx,DWORD PTR [ebp-0x8]
  41e56c:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e572:	jae    0x41e585
  41e574:	add    eax,DWORD PTR [ebp-0xc]
  41e577:	mov    edx,DWORD PTR [eax+0x4]
  41e57a:	mov    DWORD PTR [ebp-0xc],edx
  41e57d:	test   edx,edx
  41e57f:	jne    0x41e4fd
  41e585:	mov    eax,DWORD PTR [ebp-0x10]
  41e588:	mov    DWORD PTR [ebp-0x6c],eax
  41e58b:	mov    DWORD PTR [ebp-0x70],0x4
  41e592:	mov    eax,DWORD PTR [ecx+0x50]
  41e595:	mov    DWORD PTR [ebp-0x68],eax
  41e598:	mov    eax,DWORD PTR [ebp-0x1c]
  41e59b:	xor    eax,esi
  41e59d:	add    eax,edi
  41e59f:	mov    DWORD PTR [ebp-0x64],eax
  41e5a2:	lea    eax,[ebp-0x20]
  41e5a5:	mov    DWORD PTR [ebp-0x60],eax
  41e5a8:	lea    eax,[ebp-0x70]
  41e5ab:	push   eax
  41e5ac:	mov    eax,DWORD PTR [ebp+0x8]
  41e5af:	xor    eax,esi
  41e5b1:	add    eax,edi
  41e5b3:	push   eax
  41e5b4:	mov    eax,DWORD PTR [ebp+0x20]
  41e5b7:	add    eax,0xee
  41e5bc:	push   eax
  41e5bd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5c0:	mov    eax,DWORD PTR [eax+0x198]
  41e5c6:	push   DWORD PTR [eax]
  41e5c8:	mov    eax,DWORD PTR [ebp+0x10]
  41e5cb:	call   eax
  41e5cd:	mov    eax,DWORD PTR [ebp+0x20]
  41e5d0:	mov    eax,DWORD PTR [eax+0x180]
  41e5d6:	add    eax,DWORD PTR [ebp+0xc]
  41e5d9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5dc:	push   DWORD PTR [ebp+0x18]
  41e5df:	mov    DWORD PTR [eax],ecx
  41e5e1:	push   DWORD PTR [ebp+0x14]
  41e5e4:	push   DWORD PTR [ebp+0x1c]
  41e5e7:	call   ebx
  41e5e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e5ec:	add    ecx,DWORD PTR [ebp+0x20]
  41e5ef:	lea    eax,[ebp+0x4]
  41e5f2:	mov    DWORD PTR [ebp+0x20],ecx
  41e5f5:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5f8:	mov    ecx,DWORD PTR [ebp+0x20]
  41e5fb:	mov    edx,DWORD PTR [ecx+0x190]
  41e601:	mov    ecx,DWORD PTR [ebp+0x20]
  41e604:	mov    ecx,DWORD PTR [ecx+0x18c]
  41e60a:	mov    esi,DWORD PTR [ecx]
  41e60c:	cmp    DWORD PTR [eax],esi
  41e60e:	jb     0x41e62f
  41e610:	mov    esi,DWORD PTR [edx]
  41e612:	mov    edi,DWORD PTR [edx]
  41e614:	mov    esi,DWORD PTR [esi+0x3c]
  41e617:	lea    esi,[edi+esi*1+0x50]
  41e61b:	mov    edi,DWORD PTR [ecx]
  41e61d:	add    edi,DWORD PTR [esi]
  41e61f:	cmp    DWORD PTR [eax],edi
  41e621:	jae    0x41e62f
  41e623:	mov    esi,DWORD PTR [ecx]
  41e625:	mov    ecx,DWORD PTR [eax]
  41e627:	mov    edx,DWORD PTR [edx]
  41e629:	sub    ecx,esi
  41e62b:	add    edx,ecx
  41e62d:	mov    DWORD PTR [eax],edx
  41e62f:	mov    eax,DWORD PTR [ebp+0xc]
  41e632:	jmp    0x41e636
  41e634:	xor    eax,eax
  41e636:	pop    edi
  41e637:	pop    esi
  41e638:	pop    ebx
  41e639:	leave  
  41e63a:	ret    0x1c
  41e63d:	push   ebp
  41e63e:	mov    ebp,esp
  41e640:	sub    esp,0x1c
  41e643:	push   esi
  41e644:	mov    esi,eax
  41e646:	mov    eax,DWORD PTR [ecx+0x190]
  41e64c:	cmp    DWORD PTR [eax],0x0
  41e64f:	je     0x41e75f
  41e655:	test   edx,edx
  41e657:	je     0x41e75f
  41e65d:	test   esi,esi
  41e65f:	je     0x41e75f
  41e665:	mov    eax,DWORD PTR [esi+0x88]
  41e66b:	test   eax,eax
  41e66d:	je     0x41e75a
  41e673:	cmp    DWORD PTR [esi+0x8c],0x10
  41e67a:	je     0x41e75a
  41e680:	cmp    DWORD PTR [esi+0x34],edx
  41e683:	je     0x41e75a
  41e689:	mov    esi,DWORD PTR [ecx+0x18c]
  41e68f:	and    DWORD PTR [ebp-0x10],0x0
  41e693:	mov    ecx,edx
  41e695:	sub    ecx,DWORD PTR [esi]
  41e697:	add    eax,edx
  41e699:	movzx  edx,WORD PTR [eax+0xc]
  41e69d:	mov    DWORD PTR [ebp-0x1c],ecx
  41e6a0:	movzx  ecx,WORD PTR [eax+0xe]
  41e6a4:	add    ecx,edx
  41e6a6:	je     0x41e75a
  41e6ac:	lea    ecx,[eax+0x14]
  41e6af:	push   ebx
  41e6b0:	mov    DWORD PTR [ebp-0x18],ecx
  41e6b3:	mov    esi,0x7fffffff
  41e6b8:	push   edi
  41e6b9:	test   DWORD PTR [ecx],esi
  41e6bb:	je     0x41e73c
  41e6bd:	mov    edx,DWORD PTR [ecx]
  41e6bf:	and    DWORD PTR [ebp-0xc],0x0
  41e6c3:	and    edx,esi
  41e6c5:	add    edx,eax
  41e6c7:	movzx  edi,WORD PTR [edx+0xe]
  41e6cb:	movzx  ebx,WORD PTR [edx+0xc]
  41e6cf:	add    edi,ebx
  41e6d1:	je     0x41e73c
  41e6d3:	lea    ecx,[edx+0x14]
  41e6d6:	mov    DWORD PTR [ebp-0x14],ecx
  41e6d9:	test   DWORD PTR [ecx],esi
  41e6db:	je     0x41e71e
  41e6dd:	mov    ecx,DWORD PTR [ecx]
  41e6df:	and    DWORD PTR [ebp-0x8],0x0
  41e6e3:	and    ecx,esi
  41e6e5:	add    ecx,eax
  41e6e7:	movzx  edi,WORD PTR [ecx+0xe]
  41e6eb:	movzx  ebx,WORD PTR [ecx+0xc]
  41e6ef:	add    edi,ebx
  41e6f1:	je     0x41e71e
  41e6f3:	lea    edi,[ecx+0x14]
  41e6f6:	mov    DWORD PTR [ebp-0x4],edi
  41e6f9:	mov    edi,DWORD PTR [ebp-0x4]
  41e6fc:	mov    edi,DWORD PTR [edi]
  41e6fe:	test   edi,edi
  41e700:	je     0x41e708
  41e702:	mov    ebx,DWORD PTR [ebp-0x1c]
  41e705:	add    DWORD PTR [edi+eax*1],ebx
  41e708:	movzx  edi,WORD PTR [ecx+0xe]
  41e70c:	movzx  ebx,WORD PTR [ecx+0xc]
  41e710:	inc    DWORD PTR [ebp-0x8]
  41e713:	add    DWORD PTR [ebp-0x4],0x8
  41e717:	add    edi,ebx
  41e719:	cmp    DWORD PTR [ebp-0x8],edi
  41e71c:	jb     0x41e6f9
  41e71e:	movzx  edi,WORD PTR [edx+0xe]
  41e722:	movzx  ebx,WORD PTR [edx+0xc]
  41e726:	mov    ecx,DWORD PTR [ebp-0x14]
  41e729:	inc    DWORD PTR [ebp-0xc]
  41e72c:	add    ecx,0x8
  41e72f:	add    edi,ebx
  41e731:	mov    DWORD PTR [ebp-0x14],ecx
  41e734:	cmp    DWORD PTR [ebp-0xc],edi
  41e737:	jb     0x41e6d9
  41e739:	mov    ecx,DWORD PTR [ebp-0x18]
  41e73c:	movzx  edx,WORD PTR [eax+0xe]
  41e740:	movzx  edi,WORD PTR [eax+0xc]
  41e744:	inc    DWORD PTR [ebp-0x10]
  41e747:	add    ecx,0x8
  41e74a:	add    edx,edi
  41e74c:	mov    DWORD PTR [ebp-0x18],ecx
  41e74f:	cmp    DWORD PTR [ebp-0x10],edx
  41e752:	jb     0x41e6b9
  41e758:	pop    edi
  41e759:	pop    ebx
  41e75a:	xor    eax,eax
  41e75c:	inc    eax
  41e75d:	jmp    0x41e761
  41e75f:	xor    eax,eax
  41e761:	pop    esi
  41e762:	leave  
  41e763:	ret    
  41e764:	push   ebp
  41e765:	mov    ebp,esp
  41e767:	mov    ecx,DWORD PTR [ecx+0x190]
  41e76d:	mov    eax,DWORD PTR [ebp+0xc]
  41e770:	sub    esp,0x10
  41e773:	push   ebx
  41e774:	xor    ebx,ebx
  41e776:	push   esi
  41e777:	push   edi
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	je     0x41e802
  41e780:	cmp    eax,ebx
  41e782:	je     0x41e802
  41e784:	cmp    DWORD PTR [eax+0x78],ebx
  41e787:	jne    0x41e78e
  41e789:	xor    eax,eax
  41e78b:	inc    eax
  41e78c:	jmp    0x41e804
  41e78e:	mov    eax,DWORD PTR [eax+0x78]
  41e791:	add    eax,DWORD PTR [ebp+0x8]
  41e794:	mov    ecx,DWORD PTR [eax+0x1c]
  41e797:	mov    edx,DWORD PTR [eax+0x24]
  41e79a:	mov    esi,DWORD PTR [eax+0x14]
  41e79d:	mov    edi,DWORD PTR [eax+0x18]
  41e7a0:	add    ecx,DWORD PTR [ebp+0x8]
  41e7a3:	add    edx,DWORD PTR [ebp+0x8]
  41e7a6:	mov    DWORD PTR [ebp-0x4],esi
  41e7a9:	cmp    esi,edi
  41e7ab:	ja     0x41e7b0
  41e7ad:	mov    DWORD PTR [ebp-0x4],edi
  41e7b0:	mov    DWORD PTR [ebp-0x8],ebx
  41e7b3:	cmp    DWORD PTR [ebp-0x4],ebx
  41e7b6:	jbe    0x41e789
  41e7b8:	cmp    ebx,DWORD PTR [eax+0x14]
  41e7bb:	jae    0x41e7c3
  41e7bd:	movzx  esi,WORD PTR [edx+ebx*2]
  41e7c1:	jmp    0x41e7c5
  41e7c3:	mov    esi,ebx
  41e7c5:	lea    esi,[ecx+esi*4]
  41e7c8:	mov    edi,DWORD PTR [esi]
  41e7ca:	test   edi,edi
  41e7cc:	je     0x41e7f7
  41e7ce:	add    edi,DWORD PTR [ebp+0x8]
  41e7d1:	mov    DWORD PTR [ebp-0x10],edi
  41e7d4:	cmp    edi,eax
  41e7d6:	jbe    0x41e7e8
  41e7d8:	mov    ebx,DWORD PTR [ebp+0xc]
  41e7db:	mov    ebx,DWORD PTR [ebx+0x7c]
  41e7de:	add    ebx,eax
  41e7e0:	cmp    edi,ebx
  41e7e2:	jae    0x41e7e8
  41e7e4:	mov    esi,DWORD PTR [esi]
  41e7e6:	jmp    0x41e7f0
  41e7e8:	sub    edi,DWORD PTR [ebp+0x8]
  41e7eb:	mov    DWORD PTR [esi],edi
  41e7ed:	mov    esi,DWORD PTR [ebp-0x10]
  41e7f0:	test   esi,esi
  41e7f2:	je     0x41e802
  41e7f4:	mov    ebx,DWORD PTR [ebp-0x8]
  41e7f7:	inc    ebx
  41e7f8:	mov    DWORD PTR [ebp-0x8],ebx
  41e7fb:	cmp    ebx,DWORD PTR [ebp-0x4]
  41e7fe:	jb     0x41e7b8
  41e800:	jmp    0x41e789
  41e802:	xor    eax,eax
  41e804:	pop    edi
  41e805:	pop    esi
  41e806:	pop    ebx
  41e807:	leave  
  41e808:	ret    0x8
  41e80b:	push   ebp
  41e80c:	mov    ebp,esp
  41e80e:	sub    esp,0x2c
  41e811:	mov    edx,0xf89c8585
  41e816:	mov    DWORD PTR [ebp-0x4],edx
  41e819:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41e820:	mov    eax,DWORD PTR [ebp-0x4]
  41e823:	mov    ecx,DWORD PTR [ebp-0x4]
  41e826:	mov    ecx,DWORD PTR [ebp-0x4]
  41e829:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82c:	mov    ecx,DWORD PTR [ebp-0x4]
  41e82f:	mov    ecx,DWORD PTR [ebp-0x4]
  41e832:	push   ebx
  41e833:	mov    ebx,DWORD PTR [ebp+0x10]
  41e836:	push   esi
  41e837:	mov    esi,0x751089b
  41e83c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41e843:	mov    ecx,DWORD PTR [ebp-0x4]
  41e846:	mov    ebx,DWORD PTR [ebx+0x190]
  41e84c:	push   edi
  41e84d:	mov    edi,0x3272e2
  41e852:	xor    ecx,esi
  41e854:	xor    eax,esi
  41e856:	add    eax,edi
  41e858:	add    ecx,edi
  41e85a:	mov    DWORD PTR [ebp-0x18],eax
  41e85d:	cmp    ecx,DWORD PTR [ebx]
  41e85f:	je     0x41eae0
  41e865:	mov    ebx,DWORD PTR [ebp-0x4]
  41e868:	mov    ecx,DWORD PTR [ebp+0xc]
  41e86b:	xor    ebx,esi
  41e86d:	add    ebx,edi
  41e86f:	cmp    ebx,ecx
  41e871:	je     0x41eae0
  41e877:	mov    ebx,DWORD PTR [ebp-0x4]
  41e87a:	mov    ecx,DWORD PTR [ecx+0x80]
  41e880:	xor    ebx,esi
  41e882:	add    ebx,edi
  41e884:	cmp    ecx,ebx
  41e886:	je     0x41eadb
  41e88c:	add    ecx,DWORD PTR [ebp+0x8]
  41e88f:	mov    DWORD PTR [ebp-0x2c],ecx
  41e892:	mov    ebx,edx
  41e894:	xor    ebx,esi
  41e896:	add    ebx,edi
  41e898:	mov    DWORD PTR [ebp-0x10],ebx
  41e89b:	mov    ebx,DWORD PTR [ebp-0x10]
  41e89e:	cmp    ebx,edx
  41e8a0:	je     0x41e8b4
  41e8a2:	mov    edx,DWORD PTR [ebp-0x10]
  41e8a5:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8a8:	imul   edx,edx,0x14
  41e8ab:	xor    ebx,esi
  41e8ad:	add    ebx,edi
  41e8af:	cmp    DWORD PTR [edx+ecx*1],ebx
  41e8b2:	jne    0x41e8cb
  41e8b4:	mov    edx,DWORD PTR [ebp-0x10]
  41e8b7:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8ba:	imul   edx,edx,0x14
  41e8bd:	xor    ebx,esi
  41e8bf:	add    ebx,edi
  41e8c1:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41e8c5:	je     0x41eacd
  41e8cb:	mov    eax,DWORD PTR [ebp-0x4]
  41e8ce:	mov    ebx,DWORD PTR [ebp-0x4]
  41e8d1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8d4:	imul   eax,eax,0x14
  41e8d7:	add    eax,ecx
  41e8d9:	mov    ecx,DWORD PTR [eax+0x10]
  41e8dc:	add    ecx,DWORD PTR [ebp+0x8]
  41e8df:	xor    ebx,esi
  41e8e1:	mov    DWORD PTR [ebp-0x1c],ecx
  41e8e4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8e7:	mov    edx,DWORD PTR [ebp-0x4]
  41e8ea:	xor    ecx,esi
  41e8ec:	add    ecx,edi
  41e8ee:	xor    edx,esi
  41e8f0:	mov    DWORD PTR [ebp-0x24],ecx
  41e8f3:	mov    ecx,DWORD PTR [eax]
  41e8f5:	add    edx,edi
  41e8f7:	add    ebx,edi
  41e8f9:	cmp    ecx,edx
  41e8fb:	je     0x41e903
  41e8fd:	add    ecx,DWORD PTR [ebp+0x8]
  41e900:	mov    DWORD PTR [ebp-0x24],ecx
  41e903:	mov    ecx,DWORD PTR [ebp-0x4]
  41e906:	xor    ecx,esi
  41e908:	add    ecx,DWORD PTR [eax+0xc]
  41e90b:	mov    eax,DWORD PTR [ebp+0x8]
  41e90e:	lea    eax,[ecx+eax*1+0x3272e2]
  41e915:	mov    DWORD PTR [ebp+0xc],eax
  41e918:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41e91f:	mov    eax,DWORD PTR [ebp+0x10]
  41e922:	push   DWORD PTR [ebp+0xc]
  41e925:	mov    eax,DWORD PTR [eax+0x1d8]
  41e92b:	call   DWORD PTR [eax]
  41e92d:	mov    ecx,DWORD PTR [ebp-0x4]
  41e930:	xor    ecx,esi
  41e932:	add    ecx,edi
  41e934:	mov    DWORD PTR [ebp-0xc],eax
  41e937:	cmp    ecx,eax
  41e939:	jne    0x41e94d
  41e93b:	mov    eax,DWORD PTR [ebp+0x10]
  41e93e:	push   DWORD PTR [ebp+0xc]
  41e941:	mov    eax,DWORD PTR [eax+0x1d8]
  41e947:	call   DWORD PTR [eax+0xc]
  41e94a:	mov    DWORD PTR [ebp-0xc],eax
  41e94d:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  41e954:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  41e95b:	mov    eax,DWORD PTR [ebp-0x4]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    eax,DWORD PTR [ebp-0xc]
  41e965:	jne    0x41e98a
  41e967:	mov    eax,DWORD PTR [ebp-0x8]
  41e96a:	mov    ecx,DWORD PTR [ebp-0x20]
  41e96d:	xor    eax,esi
  41e96f:	xor    ecx,esi
  41e971:	lea    ebx,[ebx+eax*1+0x3272e2]
  41e978:	mov    eax,DWORD PTR [ebp+0x10]
  41e97b:	mov    eax,DWORD PTR [eax+0x1d8]
  41e981:	add    ecx,edi
  41e983:	imul   ecx,ebx
  41e986:	push   ecx
  41e987:	call   DWORD PTR [eax+0x24]
  41e98a:	mov    eax,DWORD PTR [ebp-0x4]
  41e98d:	xor    eax,esi
  41e98f:	add    eax,edi
  41e991:	cmp    eax,DWORD PTR [ebp-0xc]
  41e994:	jne    0x41e9a5
  41e996:	mov    eax,DWORD PTR [ebp-0x28]
  41e999:	xor    eax,esi
  41e99b:	add    eax,edi
  41e99d:	cmp    ebx,eax
  41e99f:	jbe    0x41e91f
  41e9a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e9a8:	xor    eax,esi
  41e9aa:	add    eax,edi
  41e9ac:	cmp    eax,DWORD PTR [ebp-0xc]
  41e9af:	jne    0x41e9c8
  41e9b1:	mov    eax,DWORD PTR [ebp-0x8]
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x18]
  41e9b7:	xor    eax,esi
  41e9b9:	lea    eax,[ecx+eax*1+0x3272e2]
  41e9c0:	mov    DWORD PTR [ebp-0x18],eax
  41e9c3:	jmp    0x41eab7
  41e9c8:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  41e9cf:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41e9d6:	mov    ebx,DWORD PTR [ebp-0x4]
  41e9d9:	xor    ebx,esi
  41e9db:	add    ebx,edi
  41e9dd:	jmp    0x41eaa4
  41e9e2:	mov    eax,DWORD PTR [ebp-0x4]
  41e9e5:	xor    eax,esi
  41e9e7:	add    eax,edi
  41e9e9:	mov    DWORD PTR [ebp-0x14],eax
  41e9ec:	mov    eax,DWORD PTR [ebp-0x4]
  41e9ef:	xor    eax,esi
  41e9f1:	add    eax,edi
  41e9f3:	mov    DWORD PTR [ebp+0xc],eax
  41e9f6:	mov    ecx,DWORD PTR [ebp-0x4]
  41e9f9:	mov    eax,DWORD PTR [ebp-0x24]
  41e9fc:	xor    ecx,esi
  41e9fe:	add    ecx,edi
  41ea00:	cmp    ecx,eax
  41ea02:	je     0x41ea0a
  41ea04:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea07:	mov    DWORD PTR [ebp-0x14],eax
  41ea0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ea0d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ea10:	mov    DWORD PTR [ebp+0xc],eax
  41ea13:	mov    eax,DWORD PTR [ebp-0x4]
  41ea16:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea19:	xor    eax,esi
  41ea1b:	add    eax,edi
  41ea1d:	cmp    eax,ecx
  41ea1f:	je     0x41ea4a
  41ea21:	mov    eax,DWORD PTR [ebp-0x4]
  41ea24:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea27:	xor    eax,esi
  41ea29:	add    eax,edi
  41ea2b:	shr    ecx,0x1f
  41ea2e:	cmp    eax,ecx
  41ea30:	je     0x41ea4a
  41ea32:	mov    ecx,DWORD PTR [ebp-0x14]
  41ea35:	mov    eax,DWORD PTR [ebp+0x10]
  41ea38:	mov    eax,DWORD PTR [eax+0x1d8]
  41ea3e:	movzx  ecx,cx
  41ea41:	push   ecx
  41ea42:	push   DWORD PTR [ebp-0xc]
  41ea45:	call   DWORD PTR [eax+0x8]
  41ea48:	jmp    0x41ea63
  41ea4a:	mov    eax,DWORD PTR [ebp+0xc]
  41ea4d:	add    eax,DWORD PTR [ebp+0x8]
  41ea50:	mov    ecx,DWORD PTR [ebp+0x10]
  41ea53:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ea59:	add    eax,0x2
  41ea5c:	push   eax
  41ea5d:	push   DWORD PTR [ebp-0xc]
  41ea60:	call   DWORD PTR [ecx+0x8]
  41ea63:	mov    DWORD PTR [ebp+0xc],eax
  41ea66:	mov    eax,DWORD PTR [ebp-0x4]
  41ea69:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea6c:	xor    eax,esi
  41ea6e:	add    eax,edi
  41ea70:	cmp    eax,ecx
  41ea72:	mov    eax,DWORD PTR [ebp-0x8]
  41ea75:	jne    0x41ea88
  41ea77:	mov    ecx,DWORD PTR [ebp-0x18]
  41ea7a:	xor    eax,esi
  41ea7c:	lea    eax,[ecx+eax*1+0x3272e2]
  41ea83:	mov    DWORD PTR [ebp-0x18],eax
  41ea86:	jmp    0x41ea98
  41ea88:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea8b:	xor    eax,esi
  41ea8d:	add    eax,edi
  41ea8f:	imul   eax,ecx
  41ea92:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ea95:	mov    DWORD PTR [ecx+ebx*4],eax
  41ea98:	mov    eax,DWORD PTR [ebp-0x8]
  41ea9b:	xor    eax,esi
  41ea9d:	lea    ebx,[ebx+eax*1+0x3272e2]
  41eaa4:	mov    eax,DWORD PTR [ebp-0x4]
  41eaa7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eaaa:	xor    eax,esi
  41eaac:	add    eax,edi
  41eaae:	cmp    DWORD PTR [ecx+ebx*4],eax
  41eab1:	jne    0x41e9e2
  41eab7:	mov    edx,DWORD PTR [ebp-0x10]
  41eaba:	mov    eax,DWORD PTR [ebp-0x18]
  41eabd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41eac0:	sub    edx,0x3272e1
  41eac6:	xor    edx,esi
  41eac8:	jmp    0x41e892
  41eacd:	mov    ecx,DWORD PTR [ebp-0x4]
  41ead0:	xor    ecx,esi
  41ead2:	add    ecx,edi
  41ead4:	cmp    eax,ecx
  41ead6:	mov    eax,DWORD PTR [ebp-0x4]
  41ead9:	jne    0x41eae3
  41eadb:	mov    eax,DWORD PTR [ebp-0x8]
  41eade:	jmp    0x41eae3
  41eae0:	mov    eax,DWORD PTR [ebp-0x4]
  41eae3:	xor    eax,esi
  41eae5:	add    eax,edi
  41eae7:	pop    edi
  41eae8:	pop    esi
  41eae9:	pop    ebx
  41eaea:	leave  
  41eaeb:	ret    0xc
  41eaee:	push   ebp
  41eaef:	mov    ebp,esp
  41eaf1:	sub    esp,0x28
  41eaf4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41eafb:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  41eb02:	mov    eax,DWORD PTR [ebp+0xc]
  41eb05:	mov    DWORD PTR [ebp+0xc],eax
  41eb08:	push   esi
  41eb09:	mov    eax,eax
  41eb0b:	mov    eax,DWORD PTR [ebp-0x4]
  41eb0e:	mov    esi,DWORD PTR [ebp+0x8]
  41eb11:	mov    ecx,0x751089b
  41eb16:	xor    eax,ecx
  41eb18:	mov    edx,0x3272e2
  41eb1d:	add    eax,edx
  41eb1f:	cmp    esi,eax
  41eb21:	je     0x41ec48
  41eb27:	mov    eax,DWORD PTR [ebp+0x8]
  41eb2a:	mov    esi,DWORD PTR [ebp+0x8]
  41eb2d:	add    esi,DWORD PTR [eax+0x3c]
  41eb30:	push   edi
  41eb31:	mov    DWORD PTR [ebp+0xc],esi
  41eb34:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  41eb3b:	mov    eax,DWORD PTR [ebp-0x1c]
  41eb3e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb41:	mov    edi,DWORD PTR [ebp+0xc]
  41eb44:	xor    esi,ecx
  41eb46:	xor    eax,ecx
  41eb48:	add    esi,edx
  41eb4a:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  41eb51:	je     0x41ec42
  41eb57:	mov    esi,DWORD PTR [ebp+0xc]
  41eb5a:	mov    eax,DWORD PTR [ebp+0x8]
  41eb5d:	add    eax,DWORD PTR [esi+0xa0]
  41eb63:	mov    esi,DWORD PTR [ebp+0x8]
  41eb66:	mov    edi,DWORD PTR [ebp+0xc]
  41eb69:	sub    esi,DWORD PTR [edi+0x34]
  41eb6c:	mov    edi,DWORD PTR [ebp-0x4]
  41eb6f:	xor    edi,ecx
  41eb71:	add    edi,edx
  41eb73:	mov    DWORD PTR [ebp-0x24],esi
  41eb76:	cmp    esi,edi
  41eb78:	je     0x41ec42
  41eb7e:	mov    esi,DWORD PTR [ebp-0x4]
  41eb81:	xor    esi,ecx
  41eb83:	add    esi,edx
  41eb85:	mov    DWORD PTR [ebp-0x8],esi
  41eb88:	push   ebx
  41eb89:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41eb90:	jmp    0x41ec2c
  41eb95:	mov    esi,DWORD PTR [ebp-0x4]
  41eb98:	xor    esi,ecx
  41eb9a:	lea    edi,[ebx-0x8]
  41eb9d:	add    esi,edx
  41eb9f:	shr    edi,1
  41eba1:	cmp    esi,edi
  41eba3:	jae    0x41ec12
  41eba5:	sub    edi,esi
  41eba7:	lea    ebx,[eax+esi*2+0x8]
  41ebab:	mov    DWORD PTR [ebp-0x18],edi
  41ebae:	movzx  esi,WORD PTR [ebx]
  41ebb1:	and    esi,0xfff
  41ebb7:	mov    DWORD PTR [ebp-0x14],esi
  41ebba:	mov    edi,DWORD PTR [ebp-0x14]
  41ebbd:	mov    esi,DWORD PTR [eax]
  41ebbf:	sub    esi,edx
  41ebc1:	add    edi,esi
  41ebc3:	movzx  esi,WORD PTR [ebx]
  41ebc6:	shr    esi,0xc
  41ebc9:	xor    edi,ecx
  41ebcb:	mov    DWORD PTR [ebp-0x20],edi
  41ebce:	mov    DWORD PTR [ebp-0x14],esi
  41ebd1:	mov    esi,DWORD PTR [ebp-0x20]
  41ebd4:	mov    edi,DWORD PTR [ebp+0x8]
  41ebd7:	xor    esi,ecx
  41ebd9:	lea    esi,[esi+edi*1+0x3272e2]
  41ebe0:	mov    DWORD PTR [ebp-0x20],esi
  41ebe3:	mov    esi,DWORD PTR [ebp-0x10]
  41ebe6:	mov    edi,DWORD PTR [ebp-0x14]
  41ebe9:	xor    esi,ecx
  41ebeb:	add    esi,edx
  41ebed:	cmp    edi,esi
  41ebef:	jne    0x41ec07
  41ebf1:	mov    esi,DWORD PTR [ebp-0x10]
  41ebf4:	mov    edi,DWORD PTR [ebp-0x14]
  41ebf7:	xor    esi,ecx
  41ebf9:	add    esi,edx
  41ebfb:	cmp    edi,esi
  41ebfd:	jne    0x41ec07
  41ebff:	mov    esi,DWORD PTR [ebp-0x20]
  41ec02:	mov    edi,DWORD PTR [ebp-0x24]
  41ec05:	add    DWORD PTR [esi],edi
  41ec07:	add    ebx,0x2
  41ec0a:	dec    DWORD PTR [ebp-0x18]
  41ec0d:	jne    0x41ebae
  41ec0f:	mov    ebx,DWORD PTR [ebp-0xc]
  41ec12:	add    DWORD PTR [ebp-0x8],ebx
  41ec15:	mov    esi,DWORD PTR [ebp-0x1c]
  41ec18:	mov    edi,DWORD PTR [ebp-0x8]
  41ec1b:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec1e:	xor    esi,ecx
  41ec20:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41ec27:	jae    0x41ec41
  41ec29:	add    eax,DWORD PTR [ebp-0xc]
  41ec2c:	mov    esi,DWORD PTR [ebp-0x4]
  41ec2f:	mov    ebx,DWORD PTR [eax+0x4]
  41ec32:	xor    esi,ecx
  41ec34:	add    esi,edx
  41ec36:	mov    DWORD PTR [ebp-0xc],ebx
  41ec39:	cmp    ebx,esi
  41ec3b:	jne    0x41eb95
  41ec41:	pop    ebx
  41ec42:	mov    eax,DWORD PTR [ebp-0x28]
  41ec45:	pop    edi
  41ec46:	jmp    0x41ec4b
  41ec48:	mov    eax,DWORD PTR [ebp-0x4]
  41ec4b:	xor    eax,ecx
  41ec4d:	add    eax,edx
  41ec4f:	pop    esi
  41ec50:	leave  
  41ec51:	ret    0x8
  41ec54:	push   ebp
  41ec55:	mov    ebp,esp
  41ec57:	sub    esp,0xcc
  41ec5d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41ec64:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  41ec6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ec6e:	push   ebx
  41ec6f:	push   esi
  41ec70:	mov    esi,0x751089b
  41ec75:	xor    eax,esi
  41ec77:	push   edi
  41ec78:	mov    edi,0x3272e2
  41ec7d:	add    eax,edi
  41ec7f:	mov    DWORD PTR [ebp-0x1c],eax
  41ec82:	mov    eax,DWORD PTR [ebp-0x4]
  41ec85:	xor    eax,esi
  41ec87:	add    eax,edi
  41ec89:	mov    DWORD PTR [ebp-0x8],eax
  41ec8c:	mov    ebx,DWORD PTR [ebp+0x20]
  41ec8f:	mov    eax,DWORD PTR [ebp-0x14]
  41ec92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ec95:	xor    eax,ecx
  41ec97:	mov    DWORD PTR [ebp-0x14],eax
  41ec9a:	add    DWORD PTR [ebp-0x14],0xf89cb585
  41eca1:	mov    eax,DWORD PTR [ebp-0xc]
  41eca4:	mov    ecx,DWORD PTR [ebp-0xc]
  41eca7:	xor    eax,ecx
  41eca9:	mov    DWORD PTR [ebp-0xc],eax
  41ecac:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41ecb3:	mov    eax,DWORD PTR [ebp-0x10]
  41ecb6:	mov    ecx,DWORD PTR [ebp-0x10]
  41ecb9:	xor    eax,ecx
  41ecbb:	mov    DWORD PTR [ebp-0x10],eax
  41ecbe:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41ecc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ecc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41eccb:	xor    eax,ecx
  41eccd:	mov    DWORD PTR [ebp-0x20],eax
  41ecd0:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41ecd7:	mov    eax,0x9471
  41ecdc:	mov    WORD PTR [ebp+0x20],ax
  41ece0:	mov    eax,DWORD PTR [ebp+0x8]
  41ece3:	test   eax,eax
  41ece5:	je     0x41f140
  41eceb:	mov    eax,DWORD PTR [ebp+0xc]
  41ecee:	test   eax,eax
  41ecf0:	je     0x41f140
  41ecf6:	mov    eax,DWORD PTR [ebp+0x18]
  41ecf9:	test   eax,eax
  41ecfb:	je     0x41f140
  41ed01:	mov    ax,WORD PTR [ebp+0x20]
  41ed05:	mov    ecx,0x8a8d
  41ed0a:	xor    ax,cx
  41ed0d:	mov    ecx,0x3b51
  41ed12:	add    ax,cx
  41ed15:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed18:	cmp    WORD PTR [ecx],ax
  41ed1b:	jne    0x41f140
  41ed21:	mov    eax,DWORD PTR [ebp-0x4]
  41ed24:	xor    eax,esi
  41ed26:	add    eax,edi
  41ed28:	mov    DWORD PTR [ebp-0x30],eax
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed31:	mov    eax,DWORD PTR [ebp+0x8]
  41ed34:	add    eax,DWORD PTR [ecx+0x3c]
  41ed37:	mov    DWORD PTR [ebp+0xc],eax
  41ed3a:	mov    eax,DWORD PTR [eax+0x50]
  41ed3d:	test   eax,eax
  41ed3f:	je     0x41f140
  41ed45:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  41ed4c:	mov    eax,DWORD PTR [ebp-0x2c]
  41ed4f:	xor    eax,esi
  41ed51:	add    eax,edi
  41ed53:	mov    DWORD PTR [ebp-0x2c],eax
  41ed56:	mov    eax,DWORD PTR [ebp-0x4]
  41ed59:	mov    eax,DWORD PTR [ebx+0x190]
  41ed5f:	mov    ecx,DWORD PTR [eax]
  41ed61:	mov    ecx,DWORD PTR [ecx+0x3c]
  41ed64:	add    ecx,DWORD PTR [eax]
  41ed66:	mov    eax,DWORD PTR [ebp-0x4]
  41ed69:	mov    eax,DWORD PTR [ebx+0x18c]
  41ed6f:	mov    edx,DWORD PTR [eax]
  41ed71:	mov    DWORD PTR [ebp-0x18],ecx
  41ed74:	mov    DWORD PTR [ebp+0x20],edx
  41ed77:	cmp    edx,edx
  41ed79:	jne    0x41edad
  41ed7b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ed81:	lea    edx,[ebp-0x1c]
  41ed84:	push   edx
  41ed85:	mov    edx,DWORD PTR [ebp-0xc]
  41ed88:	xor    edx,esi
  41ed8a:	add    edx,edi
  41ed8c:	push   edx
  41ed8d:	push   DWORD PTR [ecx+0x50]
  41ed90:	push   DWORD PTR [ebp+0x20]
  41ed93:	call   DWORD PTR [eax+0x1c]
  41ed96:	mov    eax,DWORD PTR [ebp-0x18]
  41ed99:	mov    ecx,DWORD PTR [eax+0x54]
  41ed9c:	mov    eax,DWORD PTR [eax+0x50]
  41ed9f:	sub    eax,ecx
  41eda1:	add    ecx,DWORD PTR [ebp+0x20]
  41eda4:	push   ecx
  41eda5:	call   0x41f72c
  41edaa:	mov    edx,DWORD PTR [ebp+0x20]
  41edad:	mov    eax,DWORD PTR [ebx+0x194]
  41edb3:	mov    DWORD PTR [eax],edx
  41edb5:	mov    eax,DWORD PTR [ebp+0xc]
  41edb8:	push   DWORD PTR [eax+0x54]
  41edbb:	push   DWORD PTR [ebp+0x8]
  41edbe:	push   edx
  41edbf:	call   0x41f5d3
  41edc4:	mov    ecx,DWORD PTR [ebp+0x20]
  41edc7:	mov    eax,DWORD PTR [ecx+0x3c]
  41edca:	add    eax,ecx
  41edcc:	movzx  ecx,WORD PTR [eax+0x14]
  41edd0:	lea    ecx,[ecx+eax*1+0x18]
  41edd4:	mov    DWORD PTR [ebp+0x18],ecx
  41edd7:	mov    ecx,DWORD PTR [ebp-0x4]
  41edda:	movzx  edx,WORD PTR [eax+0x6]
  41edde:	xor    ecx,esi
  41ede0:	add    ecx,edi
  41ede2:	mov    DWORD PTR [ebp+0xc],eax
  41ede5:	cmp    edx,ecx
  41ede7:	je     0x41ee94
  41eded:	mov    ecx,DWORD PTR [ebp-0x4]
  41edf0:	xor    ecx,esi
  41edf2:	add    ecx,edi
  41edf4:	mov    DWORD PTR [ebp-0x8],ecx
  41edf7:	mov    ecx,DWORD PTR [ebp-0x24]
  41edfa:	movzx  edx,WORD PTR [eax+0x6]
  41edfe:	xor    ecx,esi
  41ee00:	sub    edx,ecx
  41ee02:	sub    edx,edi
  41ee04:	cmp    DWORD PTR [ebp-0x8],edx
  41ee07:	ja     0x41ee94
  41ee0d:	mov    edx,DWORD PTR [ebp+0x18]
  41ee10:	add    edx,0x8
  41ee13:	mov    DWORD PTR [ebp+0x18],edx
  41ee16:	jmp    0x41ee1b
  41ee18:	mov    edx,DWORD PTR [ebp+0x18]
  41ee1b:	mov    eax,DWORD PTR [eax+0x38]
  41ee1e:	lea    ecx,[eax-0x1]
  41ee21:	mov    DWORD PTR [ebp-0x34],eax
  41ee24:	mov    eax,DWORD PTR [edx]
  41ee26:	test   ecx,eax
  41ee28:	je     0x41ee31
  41ee2a:	not    ecx
  41ee2c:	and    eax,ecx
  41ee2e:	add    eax,DWORD PTR [ebp-0x34]
  41ee31:	mov    ecx,DWORD PTR [edx+0x4]
  41ee34:	add    ecx,DWORD PTR [ebp+0x20]
  41ee37:	push   ecx
  41ee38:	call   0x41f72c
  41ee3d:	mov    edx,DWORD PTR [ebp-0x4]
  41ee40:	mov    eax,DWORD PTR [ebp+0x18]
  41ee43:	mov    ecx,DWORD PTR [eax+0x8]
  41ee46:	xor    edx,esi
  41ee48:	add    edx,edi
  41ee4a:	cmp    ecx,edx
  41ee4c:	je     0x41ee65
  41ee4e:	push   ecx
  41ee4f:	mov    ecx,DWORD PTR [ebp+0x8]
  41ee52:	add    ecx,DWORD PTR [eax+0xc]
  41ee55:	mov    eax,DWORD PTR [eax+0x4]
  41ee58:	add    eax,DWORD PTR [ebp+0x20]
  41ee5b:	push   ecx
  41ee5c:	push   eax
  41ee5d:	call   0x41f5d3
  41ee62:	mov    eax,DWORD PTR [ebp+0x18]
  41ee65:	mov    ecx,DWORD PTR [ebp-0x24]
  41ee68:	mov    edx,DWORD PTR [ebp-0x8]
  41ee6b:	add    eax,0x28
  41ee6e:	xor    ecx,esi
  41ee70:	lea    ecx,[edx+ecx*1+0x3272e2]
  41ee77:	mov    edx,DWORD PTR [ebp+0xc]
  41ee7a:	mov    DWORD PTR [ebp+0x18],eax
  41ee7d:	mov    eax,DWORD PTR [ebp-0x24]
  41ee80:	movzx  edx,WORD PTR [edx+0x6]
  41ee84:	xor    eax,esi
  41ee86:	sub    edx,eax
  41ee88:	mov    eax,DWORD PTR [ebp+0xc]
  41ee8b:	sub    edx,edi
  41ee8d:	mov    DWORD PTR [ebp-0x8],ecx
  41ee90:	cmp    ecx,edx
  41ee92:	jbe    0x41ee18
  41ee94:	mov    edx,DWORD PTR [ebx+0x18c]
  41ee9a:	mov    ecx,DWORD PTR [ebp+0x20]
  41ee9d:	cmp    ecx,DWORD PTR [edx]
  41ee9f:	jne    0x41eec8
  41eea1:	mov    eax,DWORD PTR [ebx+0x1d8]
  41eea7:	lea    edx,[ebp-0x1c]
  41eeaa:	push   edx
  41eeab:	mov    edx,DWORD PTR [ebp-0x10]
  41eeae:	xor    edx,esi
  41eeb0:	add    edx,edi
  41eeb2:	push   edx
  41eeb3:	mov    edx,DWORD PTR [ebp-0x18]
  41eeb6:	push   DWORD PTR [edx+0x54]
  41eeb9:	push   ecx
  41eeba:	call   DWORD PTR [eax+0x1c]
  41eebd:	test   eax,eax
  41eebf:	je     0x41f131
  41eec5:	mov    eax,DWORD PTR [ebp+0xc]
  41eec8:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41eece:	mov    ecx,DWORD PTR [ecx]
  41eed0:	xor    ecx,esi
  41eed2:	add    ecx,edi
  41eed4:	je     0x41f05c
  41eeda:	and    DWORD PTR [ebp-0x28],0x0
  41eede:	and    DWORD PTR [ebp+0x8],0x0
  41eee2:	mov    eax,0xf89c8519
  41eee7:	lea    ecx,[eax-0x8]
  41eeea:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41eef1:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41eef8:	mov    DWORD PTR [ebp-0x44],eax
  41eefb:	mov    DWORD PTR [ebp-0x40],ecx
  41eefe:	mov    DWORD PTR [ebp-0x3c],ecx
  41ef01:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41ef08:	mov    edx,DWORD PTR [ebp+0x8]
  41ef0b:	mov    ecx,0x89b
  41ef10:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41ef15:	mov    edx,0x72e2
  41ef1a:	add    cx,dx
  41ef1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ef20:	inc    DWORD PTR [ebp+0x8]
  41ef23:	cmp    DWORD PTR [ebp+0x8],0x6
  41ef27:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41ef2f:	jb     0x41ef08
  41ef31:	mov    ecx,0xf89c850b
  41ef36:	mov    DWORD PTR [ebp-0xa4],eax
  41ef3c:	mov    DWORD PTR [ebp-0x90],eax
  41ef42:	mov    DWORD PTR [ebp-0x68],eax
  41ef45:	mov    DWORD PTR [ebp-0x64],eax
  41ef48:	lea    eax,[ecx-0x1]
  41ef4b:	mov    edx,0xf89c85ff
  41ef50:	mov    DWORD PTR [ebp-0x58],eax
  41ef53:	mov    DWORD PTR [ebp-0x54],eax
  41ef56:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  41ef60:	mov    DWORD PTR [ebp-0xa0],ecx
  41ef66:	mov    DWORD PTR [ebp-0x9c],edx
  41ef6c:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  41ef76:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ef80:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  41ef8a:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ef94:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  41ef9e:	mov    DWORD PTR [ebp-0x80],ecx
  41efa1:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41efa8:	mov    DWORD PTR [ebp-0x78],edx
  41efab:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41efb2:	mov    DWORD PTR [ebp-0x70],ecx
  41efb5:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  41efbc:	mov    DWORD PTR [ebp-0x60],ecx
  41efbf:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41efc6:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  41efcd:	xor    eax,eax
  41efcf:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41efd6:	xor    cl,0x9b
  41efd9:	sub    cl,0x1e
  41efdc:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41efe3:	inc    eax
  41efe4:	cmp    eax,0x17
  41efe7:	jb     0x41efcf
  41efe9:	mov    eax,DWORD PTR [ebx+0x1d8]
  41efef:	lea    ecx,[ebp-0xb4]
  41eff5:	push   ecx
  41eff6:	call   DWORD PTR [eax+0x4]
  41eff9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41efff:	lea    edx,[ebp-0xcc]
  41f005:	push   edx
  41f006:	push   eax
  41f007:	call   DWORD PTR [ecx+0x8]
  41f00a:	lea    ecx,[ebp-0x28]
  41f00d:	push   ecx
  41f00e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f014:	push   DWORD PTR [ecx]
  41f016:	call   eax
  41f018:	mov    eax,DWORD PTR [ebp-0x28]
  41f01b:	test   eax,eax
  41f01d:	je     0x41f059
  41f01f:	mov    DWORD PTR [ebp+0x8],eax
  41f022:	jmp    0x41f02e
  41f024:	mov    eax,DWORD PTR [eax]
  41f026:	mov    DWORD PTR [ebp-0x28],eax
  41f029:	cmp    eax,DWORD PTR [ebp+0x8]
  41f02c:	je     0x41f03b
  41f02e:	mov    edx,DWORD PTR [eax+0x18]
  41f031:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f037:	cmp    edx,DWORD PTR [ecx]
  41f039:	jne    0x41f024
  41f03b:	mov    edx,DWORD PTR [eax+0x18]
  41f03e:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f044:	cmp    edx,DWORD PTR [ecx]
  41f046:	jne    0x41f059
  41f048:	mov    edx,DWORD PTR [ebp-0x18]
  41f04b:	mov    ecx,DWORD PTR [ebx+0x190]
  41f051:	mov    edx,DWORD PTR [edx+0x28]
  41f054:	add    edx,DWORD PTR [ecx]
  41f056:	mov    DWORD PTR [eax+0x1c],edx
  41f059:	mov    eax,DWORD PTR [ebp+0xc]
  41f05c:	push   ebx
  41f05d:	push   eax
  41f05e:	push   DWORD PTR [ebp+0x20]
  41f061:	call   0x41e80b
  41f066:	test   eax,eax
  41f068:	je     0x41f131
  41f06e:	push   DWORD PTR [ebp+0xc]
  41f071:	mov    ecx,ebx
  41f073:	push   DWORD PTR [ebp+0x20]
  41f076:	call   0x41e764
  41f07b:	test   eax,eax
  41f07d:	je     0x41f131
  41f083:	mov    eax,DWORD PTR [ebp+0xc]
  41f086:	mov    edx,DWORD PTR [ebp+0x20]
  41f089:	mov    ecx,ebx
  41f08b:	call   0x41e63d
  41f090:	test   eax,eax
  41f092:	je     0x41f131
  41f098:	push   ebx
  41f099:	push   DWORD PTR [ebp+0x20]
  41f09c:	call   0x41eaee
  41f0a1:	test   eax,eax
  41f0a3:	je     0x41f131
  41f0a9:	mov    eax,DWORD PTR [ebx+0x18c]
  41f0af:	mov    edx,DWORD PTR [ebp+0x20]
  41f0b2:	cmp    edx,DWORD PTR [eax]
  41f0b4:	jne    0x41f0d0
  41f0b6:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f0bc:	lea    ecx,[ebp-0x1c]
  41f0bf:	push   ecx
  41f0c0:	push   DWORD PTR [ebp-0x1c]
  41f0c3:	mov    ecx,DWORD PTR [ebp-0x18]
  41f0c6:	push   DWORD PTR [ecx+0x54]
  41f0c9:	push   edx
  41f0ca:	call   DWORD PTR [eax+0x1c]
  41f0cd:	mov    edx,DWORD PTR [ebp+0x20]
  41f0d0:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f0d6:	mov    eax,DWORD PTR [eax]
  41f0d8:	xor    eax,esi
  41f0da:	add    eax,edi
  41f0dc:	je     0x41f115
  41f0de:	mov    ecx,DWORD PTR [ebp+0xc]
  41f0e1:	mov    eax,DWORD PTR [ecx+0x28]
  41f0e4:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  41f0eb:	mov    esi,DWORD PTR [ebp+0x8]
  41f0ee:	push   DWORD PTR [ebp+0x14]
  41f0f1:	xor    esi,0x89b
  41f0f7:	push   DWORD PTR [ebp+0x10]
  41f0fa:	add    esi,0x72e2
  41f100:	or     WORD PTR [ecx+0x16],si
  41f104:	add    eax,edx
  41f106:	push   edx
  41f107:	call   eax
  41f109:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41f113:	jmp    0x41f11f
  41f115:	mov    eax,DWORD PTR [ebp+0xc]
  41f118:	mov    eax,DWORD PTR [eax+0x28]
  41f11b:	add    eax,edx
  41f11d:	call   eax
  41f11f:	mov    DWORD PTR [ebp-0x8],eax
  41f122:	mov    eax,DWORD PTR [ebp-0x8]
  41f125:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f128:	mov    DWORD PTR [ecx],eax
  41f12a:	mov    DWORD PTR [ebp-0x30],0x1
  41f131:	cmp    DWORD PTR [ebp-0x30],0x0
  41f135:	jne    0x41f13b
  41f137:	and    DWORD PTR [ebp+0x20],0x0
  41f13b:	mov    eax,DWORD PTR [ebp+0x20]
  41f13e:	jmp    0x41f142
  41f140:	xor    eax,eax
  41f142:	pop    edi
  41f143:	pop    esi
  41f144:	pop    ebx
  41f145:	leave  
  41f146:	ret    0x1c
  41f149:	push   ebp
  41f14a:	mov    ebp,esp
  41f14c:	movzx  edx,WORD PTR [ecx+0x6]
  41f150:	movzx  eax,WORD PTR [ecx+0x14]
  41f154:	push   ebx
  41f155:	push   edi
  41f156:	xor    edi,edi
  41f158:	lea    eax,[eax+ecx*1+0x18]
  41f15c:	test   edx,edx
  41f15e:	je     0x41f17f
  41f160:	mov    ecx,DWORD PTR [eax+0xc]
  41f163:	lea    ebx,[ecx+esi*1]
  41f166:	cmp    DWORD PTR [ebp+0x8],ebx
  41f169:	jb     0x41f177
  41f16b:	mov    ebx,DWORD PTR [eax+0x8]
  41f16e:	add    ebx,ecx
  41f170:	add    ebx,esi
  41f172:	cmp    DWORD PTR [ebp+0x8],ebx
  41f175:	jb     0x41f181
  41f177:	add    eax,0x28
  41f17a:	inc    edi
  41f17b:	cmp    edi,edx
  41f17d:	jb     0x41f160
  41f17f:	xor    eax,eax
  41f181:	pop    edi
  41f182:	pop    ebx
  41f183:	pop    ebp
  41f184:	ret    0x4
  41f187:	push   ebp
  41f188:	mov    ebp,esp
  41f18a:	sub    esp,0x34
  41f18d:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  41f194:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f19b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41f1a2:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  41f1a9:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  41f1b0:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41f1b7:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41f1be:	mov    DWORD PTR [ebp-0x10],eax
  41f1c1:	mov    eax,DWORD PTR [ebp+0x8]
  41f1c4:	mov    DWORD PTR [ebp-0x14],eax
  41f1c7:	mov    eax,DWORD PTR [ebp-0xc]
  41f1ca:	push   ebx
  41f1cb:	mov    ecx,0x751089b
  41f1d0:	xor    eax,ecx
  41f1d2:	push   esi
  41f1d3:	mov    esi,DWORD PTR [ebp-0x10]
  41f1d6:	mov    edx,0x3272e2
  41f1db:	add    eax,edx
  41f1dd:	push   edi
  41f1de:	cmp    esi,eax
  41f1e0:	je     0x41f3bf
  41f1e6:	mov    eax,DWORD PTR [ebp-0xc]
  41f1e9:	mov    esi,DWORD PTR [ebp-0x14]
  41f1ec:	xor    eax,ecx
  41f1ee:	add    eax,edx
  41f1f0:	cmp    esi,eax
  41f1f2:	je     0x41f3bf
  41f1f8:	mov    eax,DWORD PTR [ebp-0xc]
  41f1fb:	xor    eax,ecx
  41f1fd:	add    eax,edx
  41f1ff:	mov    DWORD PTR [ebp-0x24],eax
  41f202:	mov    eax,DWORD PTR [ebp-0xc]
  41f205:	xor    eax,ecx
  41f207:	add    eax,edx
  41f209:	mov    DWORD PTR [ebp-0x28],eax
  41f20c:	mov    edi,DWORD PTR [ebp-0x20]
  41f20f:	mov    ebx,DWORD PTR [ebp-0x8]
  41f212:	mov    esi,0x89b
  41f217:	xor    edi,esi
  41f219:	mov    eax,0x72e2
  41f21e:	xor    ebx,esi
  41f220:	add    edi,eax
  41f222:	add    ebx,eax
  41f224:	sub    ebx,edi
  41f226:	mov    WORD PTR [ebp-0x8],bx
  41f22a:	jmp    0x41f2ef
  41f22f:	mov    edi,DWORD PTR [ebp-0xc]
  41f232:	mov    bx,WORD PTR [ebp-0x4]
  41f236:	xor    edi,esi
  41f238:	add    edi,eax
  41f23a:	cmp    bx,di
  41f23d:	je     0x41f331
  41f243:	mov    edi,DWORD PTR [ebp-0xc]
  41f246:	mov    ebx,DWORD PTR [ebp+0xc]
  41f249:	xor    edi,ecx
  41f24b:	add    edi,edx
  41f24d:	cmp    ebx,edi
  41f24f:	mov    di,WORD PTR [ebp-0x4]
  41f253:	mov    bx,WORD PTR [ebp+0x8]
  41f257:	je     0x41f2c2
  41f259:	cmp    bx,di
  41f25c:	je     0x41f2cb
  41f25e:	mov    edi,DWORD PTR [ebp-0x20]
  41f261:	mov    bx,WORD PTR [ebp+0x8]
  41f265:	xor    edi,esi
  41f267:	add    edi,eax
  41f269:	cmp    bx,di
  41f26c:	jb     0x41f28c
  41f26e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f271:	mov    bx,WORD PTR [ebp+0x8]
  41f275:	xor    edi,esi
  41f277:	add    edi,eax
  41f279:	cmp    bx,di
  41f27c:	ja     0x41f28c
  41f27e:	movzx  edi,WORD PTR [ebp+0x8]
  41f282:	movzx  ebx,WORD PTR [ebp-0x8]
  41f286:	add    edi,ebx
  41f288:	mov    WORD PTR [ebp+0x8],di
  41f28c:	mov    edi,DWORD PTR [ebp-0x20]
  41f28f:	mov    bx,WORD PTR [ebp-0x4]
  41f293:	xor    edi,esi
  41f295:	add    edi,eax
  41f297:	cmp    bx,di
  41f29a:	jb     0x41f2ba
  41f29c:	mov    edi,DWORD PTR [ebp-0x2c]
  41f29f:	mov    bx,WORD PTR [ebp-0x4]
  41f2a3:	xor    edi,esi
  41f2a5:	add    edi,eax
  41f2a7:	cmp    bx,di
  41f2aa:	ja     0x41f2ba
  41f2ac:	movzx  edi,WORD PTR [ebp-0x4]
  41f2b0:	movzx  ebx,WORD PTR [ebp-0x8]
  41f2b4:	add    edi,ebx
  41f2b6:	mov    WORD PTR [ebp-0x4],di
  41f2ba:	mov    di,WORD PTR [ebp-0x4]
  41f2be:	mov    bx,WORD PTR [ebp+0x8]
  41f2c2:	cmp    bx,di
  41f2c5:	jne    0x41f3bf
  41f2cb:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2ce:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2d1:	xor    edi,ecx
  41f2d3:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2da:	mov    DWORD PTR [ebp-0x10],edi
  41f2dd:	mov    edi,DWORD PTR [ebp-0x1c]
  41f2e0:	mov    ebx,DWORD PTR [ebp-0x14]
  41f2e3:	xor    edi,ecx
  41f2e5:	lea    edi,[edi+ebx*1+0x3272e2]
  41f2ec:	mov    DWORD PTR [ebp-0x14],edi
  41f2ef:	mov    edi,DWORD PTR [ebp-0x24]
  41f2f2:	mov    ebx,DWORD PTR [ebp-0x10]
  41f2f5:	mov    di,WORD PTR [ebx+edi*2]
  41f2f9:	mov    WORD PTR [ebp+0x8],di
  41f2fd:	mov    edi,DWORD PTR [ebp-0x28]
  41f300:	mov    ebx,DWORD PTR [ebp-0x14]
  41f303:	mov    di,WORD PTR [ebx+edi*2]
  41f307:	mov    WORD PTR [ebp-0x4],di
  41f30b:	mov    edi,DWORD PTR [ebp-0xc]
  41f30e:	mov    bx,WORD PTR [ebp+0x8]
  41f312:	xor    edi,esi
  41f314:	add    edi,eax
  41f316:	cmp    bx,di
  41f319:	jne    0x41f22f
  41f31f:	mov    eax,DWORD PTR [ebp-0x18]
  41f322:	mov    esi,DWORD PTR [ebp-0xc]
  41f325:	xor    eax,ecx
  41f327:	add    eax,edx
  41f329:	imul   eax,esi
  41f32c:	mov    DWORD PTR [ebp-0xc],eax
  41f32f:	jmp    0x41f343
  41f331:	mov    eax,DWORD PTR [ebp-0xc]
  41f334:	mov    esi,DWORD PTR [ebp-0x18]
  41f337:	xor    eax,ecx
  41f339:	lea    eax,[eax+esi*1+0x3272e2]
  41f340:	mov    DWORD PTR [ebp-0x18],eax
  41f343:	mov    eax,DWORD PTR [ebp-0x24]
  41f346:	sub    eax,edx
  41f348:	xor    eax,ecx
  41f34a:	mov    DWORD PTR [ebp-0x30],eax
  41f34d:	mov    eax,DWORD PTR [ebp-0x28]
  41f350:	sub    eax,edx
  41f352:	xor    eax,ecx
  41f354:	mov    DWORD PTR [ebp-0x34],eax
  41f357:	mov    eax,DWORD PTR [ebp-0x34]
  41f35a:	mov    esi,DWORD PTR [ebp-0x1c]
  41f35d:	xor    esi,ecx
  41f35f:	add    esi,edx
  41f361:	xor    eax,ecx
  41f363:	add    eax,0x3272e2
  41f368:	imul   esi,eax
  41f36b:	mov    eax,DWORD PTR [ebp-0x14]
  41f36e:	movzx  eax,WORD PTR [esi+eax*1]
  41f372:	mov    esi,DWORD PTR [ebp-0x30]
  41f375:	mov    edi,DWORD PTR [ebp-0x1c]
  41f378:	xor    esi,ecx
  41f37a:	add    esi,edx
  41f37c:	xor    edi,ecx
  41f37e:	add    edi,edx
  41f380:	imul   edi,esi
  41f383:	mov    esi,DWORD PTR [ebp-0x10]
  41f386:	movzx  esi,WORD PTR [edi+esi*1]
  41f38a:	sub    eax,edx
  41f38c:	sub    esi,edx
  41f38e:	xor    eax,ecx
  41f390:	xor    esi,ecx
  41f392:	cmp    esi,eax
  41f394:	jne    0x41f3bf
  41f396:	mov    eax,DWORD PTR [ebp-0x30]
  41f399:	mov    esi,DWORD PTR [ebp-0x1c]
  41f39c:	xor    eax,ecx
  41f39e:	add    eax,0x3272e2
  41f3a3:	xor    esi,ecx
  41f3a5:	add    esi,edx
  41f3a7:	imul   esi,eax
  41f3aa:	mov    eax,DWORD PTR [ebp-0x10]
  41f3ad:	movzx  eax,WORD PTR [esi+eax*1]
  41f3b1:	mov    esi,DWORD PTR [ebp-0xc]
  41f3b4:	sub    eax,edx
  41f3b6:	xor    eax,ecx
  41f3b8:	cmp    eax,esi
  41f3ba:	mov    eax,DWORD PTR [ebp-0xc]
  41f3bd:	je     0x41f3c2
  41f3bf:	mov    eax,DWORD PTR [ebp-0x18]
  41f3c2:	pop    edi
  41f3c3:	xor    eax,ecx
  41f3c5:	pop    esi
  41f3c6:	add    eax,edx
  41f3c8:	pop    ebx
  41f3c9:	leave  
  41f3ca:	ret    0x8
  41f3cd:	push   ebp
  41f3ce:	mov    ebp,esp
  41f3d0:	push   ecx
  41f3d1:	mov    cx,WORD PTR [eax]
  41f3d4:	push   esi
  41f3d5:	mov    esi,0x3b51
  41f3da:	sub    cx,si
  41f3dd:	mov    esi,0x8a8d
  41f3e2:	xor    cx,si
  41f3e5:	mov    esi,0x4e22
  41f3ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f3f1:	mov    edx,0xf89c8585
  41f3f6:	cmp    cx,si
  41f3f9:	je     0x41f458
  41f3fb:	push   ebx
  41f3fc:	push   edi
  41f3fd:	movzx  ecx,cx
  41f400:	mov    edi,0xffcd8d1e
  41f405:	mov    esi,0x751089b
  41f40a:	mov    ebx,0x4f86
  41f40f:	cmp    cx,bx
  41f412:	jne    0x41f417
  41f414:	mov    DWORD PTR [ebp-0x4],edx
  41f417:	lea    edx,[edi+0x1]
  41f41a:	xor    edx,esi
  41f41c:	mov    edi,edx
  41f41e:	xor    edi,esi
  41f420:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  41f428:	mov    ebx,0x3b51
  41f42d:	sub    cx,bx
  41f430:	mov    ebx,0x8a8d
  41f435:	xor    cx,bx
  41f438:	mov    ebx,0x4e22
  41f43d:	cmp    cx,bx
  41f440:	jne    0x41f40a
  41f442:	mov    ecx,DWORD PTR [ebp-0x4]
  41f445:	pop    edi
  41f446:	pop    ebx
  41f447:	cmp    ecx,0xf89c8586
  41f44d:	je     0x41f458
  41f44f:	xor    ecx,esi
  41f451:	lea    eax,[eax+ecx*2+0x64e5c6]
  41f458:	pop    esi
  41f459:	leave  
  41f45a:	ret    
  41f45b:	push   ebp
  41f45c:	mov    ebp,esp
  41f45e:	push   ecx
  41f45f:	push   esi
  41f460:	push   edi
  41f461:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f468:	mov    esi,0xf89c8585
  41f46d:	call   0x41f3cd
  41f472:	mov    edi,eax
  41f474:	mov    al,BYTE PTR [edi]
  41f476:	add    al,0x8
  41f478:	xor    al,0x74
  41f47a:	cmp    al,0x7c
  41f47c:	je     0x41f4df
  41f47e:	mov    eax,edi
  41f480:	mov    edx,0xffcd8d1e
  41f485:	mov    ecx,0x751089b
  41f48a:	push   ebx
  41f48b:	mov    ax,WORD PTR [eax]
  41f48e:	mov    ebx,0x3b51
  41f493:	sub    ax,bx
  41f496:	mov    ebx,0x8a8d
  41f49b:	xor    ax,bx
  41f49e:	mov    ebx,0x4e50
  41f4a3:	cmp    ax,bx
  41f4a6:	jne    0x41f4ab
  41f4a8:	mov    DWORD PTR [ebp-0x4],esi
  41f4ab:	lea    esi,[edx+0x1]
  41f4ae:	xor    esi,ecx
  41f4b0:	mov    edx,esi
  41f4b2:	xor    edx,ecx
  41f4b4:	lea    eax,[edi+edx*2+0x64e5c4]
  41f4bb:	mov    bl,BYTE PTR [eax]
  41f4bd:	add    bl,0x8
  41f4c0:	xor    bl,0x74
  41f4c3:	cmp    bl,0x7c
  41f4c6:	jne    0x41f48b
  41f4c8:	mov    eax,DWORD PTR [ebp-0x4]
  41f4cb:	pop    ebx
  41f4cc:	cmp    eax,0xf89c8586
  41f4d1:	je     0x41f4df
  41f4d3:	xor    eax,ecx
  41f4d5:	xor    ecx,ecx
  41f4d7:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  41f4df:	mov    eax,edi
  41f4e1:	pop    edi
  41f4e2:	pop    esi
  41f4e3:	leave  
  41f4e4:	ret    
  41f4e5:	push   ebp
  41f4e6:	mov    ebp,esp
  41f4e8:	push   ecx
  41f4e9:	push   esi
  41f4ea:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f4f1:	mov    esi,0xf89c8585
  41f4f6:	call   0x41f3cd
  41f4fb:	mov    cx,WORD PTR [eax]
  41f4fe:	mov    edx,0x3b51
  41f503:	sub    cx,dx
  41f506:	mov    edx,0x8a8d
  41f50b:	xor    cx,dx
  41f50e:	mov    edx,0x4e22
  41f513:	cmp    cx,dx
  41f516:	je     0x41f56f
  41f518:	push   ebx
  41f519:	push   edi
  41f51a:	movzx  ecx,cx
  41f51d:	mov    edx,0xffcd8d1e
  41f522:	mov    edi,0x751089b
  41f527:	mov    ebx,0x4e50
  41f52c:	cmp    cx,bx
  41f52f:	jne    0x41f534
  41f531:	mov    DWORD PTR [ebp-0x4],esi
  41f534:	lea    esi,[edx+0x1]
  41f537:	xor    esi,edi
  41f539:	mov    edx,esi
  41f53b:	xor    edx,edi
  41f53d:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  41f545:	mov    ebx,0x3b51
  41f54a:	sub    cx,bx
  41f54d:	mov    ebx,0x8a8d
  41f552:	xor    cx,bx
  41f555:	mov    ebx,0x4e22
  41f55a:	cmp    cx,bx
  41f55d:	jne    0x41f527
  41f55f:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f566:	pop    edi
  41f567:	pop    ebx
  41f568:	je     0x41f56f
  41f56a:	xor    eax,eax
  41f56c:	inc    eax
  41f56d:	jmp    0x41f571
  41f56f:	xor    eax,eax
  41f571:	pop    esi
  41f572:	leave  
  41f573:	ret    
  41f574:	push   ebp
  41f575:	mov    ebp,esp
  41f577:	push   ecx
  41f578:	mov    eax,DWORD PTR [ebp+0x8]
  41f57b:	movzx  ecx,WORD PTR [eax]
  41f57e:	push   esi
  41f57f:	lea    eax,[ecx-0x3b51]
  41f585:	mov    esi,0x8a8d
  41f58a:	push   edi
  41f58b:	xor    eax,esi
  41f58d:	mov    edi,0x4e22
  41f592:	mov    DWORD PTR [ebp-0x4],edx
  41f595:	cmp    ax,di
  41f598:	je     0x41f5c5
  41f59a:	mov    eax,DWORD PTR [ebp+0x8]
  41f59d:	sub    eax,edx
  41f59f:	mov    DWORD PTR [ebp+0x8],eax
  41f5a2:	jmp    0x41f5a7
  41f5a4:	mov    eax,DWORD PTR [ebp+0x8]
  41f5a7:	mov    WORD PTR [edx],cx
  41f5aa:	add    edx,0x2
  41f5ad:	movzx  edi,WORD PTR [eax+edx*1]
  41f5b1:	mov    ecx,edi
  41f5b3:	add    edi,0xffffc4af
  41f5b9:	xor    edi,esi
  41f5bb:	mov    eax,0x4e22
  41f5c0:	cmp    di,ax
  41f5c3:	jne    0x41f5a4
  41f5c5:	xor    eax,eax
  41f5c7:	pop    edi
  41f5c8:	mov    WORD PTR [edx],ax
  41f5cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f5ce:	pop    esi
  41f5cf:	leave  
  41f5d0:	ret    0x4
  41f5d3:	push   ebp
  41f5d4:	mov    ebp,esp
  41f5d6:	sub    esp,0x18
  41f5d9:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41f5e0:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  41f5e7:	mov    eax,DWORD PTR [ebp-0x14]
  41f5ea:	xor    eax,0x751089b
  41f5ef:	add    eax,0x3272e2
  41f5f4:	mov    DWORD PTR [ebp-0x8],eax
  41f5f7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41f5fe:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41f605:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41f60c:	mov    eax,DWORD PTR [ebp-0x14]
  41f60f:	xor    eax,0x751089b
  41f614:	mov    ecx,DWORD PTR [ebp-0x8]
  41f617:	lea    eax,[ecx+eax*1+0x3272e2]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x18]
  41f621:	xor    ecx,0x751089b
  41f627:	add    ecx,0x3272e2
  41f62d:	mov    edx,DWORD PTR [ebp+0x10]
  41f630:	imul   edx,ecx
  41f633:	cmp    eax,edx
  41f635:	jae    0x41f728
  41f63b:	mov    eax,DWORD PTR [ebp+0x10]
  41f63e:	mov    ecx,DWORD PTR [ebp-0x8]
  41f641:	sub    eax,ecx
  41f643:	mov    ecx,DWORD PTR [ebp-0x10]
  41f646:	xor    ecx,0x751089b
  41f64c:	add    ecx,0x3272e2
  41f652:	cmp    eax,ecx
  41f654:	jbe    0x41f686
  41f656:	mov    eax,DWORD PTR [ebp+0x8]
  41f659:	add    eax,DWORD PTR [ebp-0x8]
  41f65c:	mov    ecx,DWORD PTR [ebp+0xc]
  41f65f:	add    ecx,DWORD PTR [ebp-0x8]
  41f662:	mov    edx,DWORD PTR [ecx]
  41f664:	mov    DWORD PTR [eax],edx
  41f666:	mov    ecx,DWORD PTR [ecx+0x4]
  41f669:	mov    DWORD PTR [eax+0x4],ecx
  41f66c:	mov    eax,DWORD PTR [ebp-0x10]
  41f66f:	xor    eax,0x751089b
  41f674:	mov    ecx,DWORD PTR [ebp-0x8]
  41f677:	lea    eax,[ecx+eax*1+0x3272e2]
  41f67e:	mov    DWORD PTR [ebp-0x8],eax
  41f681:	jmp    0x41f723
  41f686:	mov    eax,DWORD PTR [ebp+0x10]
  41f689:	mov    ecx,DWORD PTR [ebp-0x8]
  41f68c:	sub    eax,ecx
  41f68e:	mov    ecx,DWORD PTR [ebp-0xc]
  41f691:	xor    ecx,0x751089b
  41f697:	add    ecx,0x3272e2
  41f69d:	cmp    eax,ecx
  41f69f:	jbe    0x41f6c8
  41f6a1:	mov    eax,DWORD PTR [ebp+0x8]
  41f6a4:	add    eax,DWORD PTR [ebp-0x8]
  41f6a7:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6aa:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ad:	mov    ecx,DWORD PTR [ecx]
  41f6af:	mov    DWORD PTR [eax],ecx
  41f6b1:	mov    eax,DWORD PTR [ebp-0xc]
  41f6b4:	xor    eax,0x751089b
  41f6b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6bc:	lea    eax,[ecx+eax*1+0x3272e2]
  41f6c3:	mov    DWORD PTR [ebp-0x8],eax
  41f6c6:	jmp    0x41f723
  41f6c8:	mov    eax,DWORD PTR [ebp+0x10]
  41f6cb:	mov    ecx,DWORD PTR [ebp-0x8]
  41f6ce:	sub    eax,ecx
  41f6d0:	mov    ecx,DWORD PTR [ebp-0x4]
  41f6d3:	xor    ecx,0x751089b
  41f6d9:	add    ecx,0x3272e2
  41f6df:	cmp    eax,ecx
  41f6e1:	jbe    0x41f70c
  41f6e3:	mov    eax,DWORD PTR [ebp+0x8]
  41f6e6:	add    eax,DWORD PTR [ebp-0x8]
  41f6e9:	mov    ecx,DWORD PTR [ebp+0xc]
  41f6ec:	add    ecx,DWORD PTR [ebp-0x8]
  41f6ef:	mov    cx,WORD PTR [ecx]
  41f6f2:	mov    WORD PTR [eax],cx
  41f6f5:	mov    eax,DWORD PTR [ebp-0x4]
  41f6f8:	xor    eax,0x751089b
  41f6fd:	mov    ecx,DWORD PTR [ebp-0x8]
  41f700:	lea    eax,[ecx+eax*1+0x3272e2]
  41f707:	mov    DWORD PTR [ebp-0x8],eax
  41f70a:	jmp    0x41f723
  41f70c:	mov    eax,DWORD PTR [ebp+0x8]
  41f70f:	add    eax,DWORD PTR [ebp-0x8]
  41f712:	mov    ecx,DWORD PTR [ebp+0xc]
  41f715:	add    ecx,DWORD PTR [ebp-0x8]
  41f718:	mov    cl,BYTE PTR [ecx]
  41f71a:	mov    BYTE PTR [eax],cl
  41f71c:	mov    eax,DWORD PTR [ebp-0x8]
  41f71f:	inc    eax
  41f720:	mov    DWORD PTR [ebp-0x8],eax
  41f723:	jmp    0x41f60c
  41f728:	leave  
  41f729:	ret    0xc
  41f72c:	push   ebp
  41f72d:	mov    ebp,esp
  41f72f:	sub    esp,0xc
  41f732:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f739:	push   esi
  41f73a:	mov    esi,eax
  41f73c:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  41f743:	mov    edx,DWORD PTR [ebp-0x4]
  41f746:	mov    eax,0x751089b
  41f74b:	xor    edx,eax
  41f74d:	mov    ecx,0x3272e2
  41f752:	add    edx,ecx
  41f754:	cmp    esi,edx
  41f756:	je     0x41f798
  41f758:	push   ebx
  41f759:	push   edi
  41f75a:	mov    edx,DWORD PTR [ebp-0x8]
  41f75d:	mov    ebx,DWORD PTR [ebp+0x8]
  41f760:	xor    edx,eax
  41f762:	mov    edi,0xffcd8d1e
  41f767:	sub    edi,edx
  41f769:	add    esi,edi
  41f76b:	lea    edx,[esi-0x3272e2]
  41f771:	xor    edx,eax
  41f773:	mov    DWORD PTR [ebp-0xc],edx
  41f776:	mov    edx,DWORD PTR [ebp-0x4]
  41f779:	mov    edi,DWORD PTR [ebp-0xc]
  41f77c:	xor    dl,0x9b
  41f77f:	sub    dl,0x1e
  41f782:	xor    edi,eax
  41f784:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  41f78b:	mov    edx,DWORD PTR [ebp-0x4]
  41f78e:	xor    edx,eax
  41f790:	add    edx,ecx
  41f792:	cmp    esi,edx
  41f794:	jne    0x41f75a
  41f796:	pop    edi
  41f797:	pop    ebx
  41f798:	pop    esi
  41f799:	leave  
  41f79a:	ret    0x4
  41f79d:	push   ebp
  41f79e:	mov    ebp,esp
  41f7a0:	sub    esp,0x21c
  41f7a6:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  41f7ad:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41f7b4:	mov    eax,DWORD PTR [ebp+0x10]
  41f7b7:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ba:	mov    ecx,DWORD PTR [ebp+0x8]
  41f7bd:	push   esi
  41f7be:	push   edi
  41f7bf:	mov    edi,0x751089b
  41f7c4:	xor    eax,edi
  41f7c6:	mov    esi,0x3272e2
  41f7cb:	add    eax,esi
  41f7cd:	cmp    eax,ecx
  41f7cf:	mov    eax,DWORD PTR [ebp-0x4]
  41f7d2:	jne    0x41f7dd
  41f7d4:	xor    eax,edi
  41f7d6:	add    eax,esi
  41f7d8:	jmp    0x41f889
  41f7dd:	mov    ecx,DWORD PTR [ebp+0xc]
  41f7e0:	xor    eax,edi
  41f7e2:	add    eax,esi
  41f7e4:	cmp    eax,ecx
  41f7e6:	jne    0x41f7ed
  41f7e8:	mov    eax,DWORD PTR [ebp-0x4]
  41f7eb:	jmp    0x41f7d4
  41f7ed:	lea    eax,[ebp-0x21c]
  41f7f3:	mov    DWORD PTR [ebp-0x8],eax
  41f7f6:	mov    eax,DWORD PTR [ebp+0xc]
  41f7f9:	mov    DWORD PTR [ebp-0x10],eax
  41f7fc:	mov    eax,DWORD PTR [ebp-0x4]
  41f7ff:	xor    eax,edi
  41f801:	add    eax,esi
  41f803:	mov    DWORD PTR [ebp+0x10],eax
  41f806:	mov    eax,DWORD PTR [ebp+0xc]
  41f809:	push   ebx
  41f80a:	call   0x41f4e5
  41f80f:	mov    ebx,eax
  41f811:	mov    eax,DWORD PTR [ebp+0x8]
  41f814:	mov    eax,DWORD PTR [eax+0x14]
  41f817:	jmp    0x41f871
  41f819:	mov    eax,DWORD PTR [ebp+0xc]
  41f81c:	sub    eax,0x8
  41f81f:	mov    DWORD PTR [ebp-0xc],eax
  41f822:	mov    eax,DWORD PTR [ebp-0xc]
  41f825:	mov    eax,DWORD PTR [eax+0x28]
  41f828:	call   0x41f3cd
  41f82d:	mov    DWORD PTR [ebp+0x10],eax
  41f830:	push   DWORD PTR [ebp+0x10]
  41f833:	mov    edx,DWORD PTR [ebp-0x8]
  41f836:	call   0x41f574
  41f83b:	mov    eax,DWORD PTR [ebp-0x4]
  41f83e:	xor    eax,edi
  41f840:	add    eax,esi
  41f842:	cmp    eax,ebx
  41f844:	jne    0x41f84e
  41f846:	mov    eax,DWORD PTR [ebp-0x8]
  41f849:	call   0x41f45b
  41f84e:	mov    eax,DWORD PTR [ebp-0x14]
  41f851:	xor    eax,edi
  41f853:	add    eax,esi
  41f855:	push   eax
  41f856:	push   DWORD PTR [ebp-0x10]
  41f859:	mov    eax,DWORD PTR [ebp-0x8]
  41f85c:	call   0x41f187
  41f861:	mov    ecx,DWORD PTR [ebp-0x4]
  41f864:	xor    ecx,edi
  41f866:	add    ecx,esi
  41f868:	cmp    eax,ecx
  41f86a:	je     0x41f88f
  41f86c:	mov    eax,DWORD PTR [ebp+0xc]
  41f86f:	mov    eax,DWORD PTR [eax]
  41f871:	mov    DWORD PTR [ebp+0xc],eax
  41f874:	mov    eax,DWORD PTR [ebp+0x8]
  41f877:	mov    ecx,DWORD PTR [ebp+0xc]
  41f87a:	add    eax,0x14
  41f87d:	cmp    ecx,eax
  41f87f:	jne    0x41f819
  41f881:	mov    eax,DWORD PTR [ebp-0x4]
  41f884:	xor    eax,edi
  41f886:	add    eax,esi
  41f888:	pop    ebx
  41f889:	pop    edi
  41f88a:	pop    esi
  41f88b:	leave  
  41f88c:	ret    0xc
  41f88f:	mov    eax,DWORD PTR [ebp-0xc]
  41f892:	mov    eax,DWORD PTR [eax+0x18]
  41f895:	jmp    0x41f888
  41f897:	push   ebp
  41f898:	mov    ebp,esp
  41f89a:	mov    eax,DWORD PTR [ebp+0xc]
  41f89d:	sub    esp,0x10
  41f8a0:	cmp    DWORD PTR [ebp+0x8],0x0
  41f8a4:	push   ebx
  41f8a5:	push   esi
  41f8a6:	push   edi
  41f8a7:	je     0x41f95c
  41f8ad:	test   eax,eax
  41f8af:	je     0x41f95c
  41f8b5:	movzx  eax,WORD PTR [eax+0x20]
  41f8b9:	mov    ecx,eax
  41f8bb:	mov    DWORD PTR [ebp-0x10],eax
  41f8be:	xor    edx,edx
  41f8c0:	and    DWORD PTR [ebp-0x8],edx
  41f8c3:	mov    eax,0x8a8d
  41f8c8:	xor    ecx,eax
  41f8ca:	add    ecx,0x3b51
  41f8d0:	mov    DWORD PTR [ebp-0xc],ecx
  41f8d3:	and    DWORD PTR [ebp-0x4],0x0
  41f8d7:	xor    ecx,ecx
  41f8d9:	push   0x7e
  41f8db:	pop    edi
  41f8dc:	cmp    cx,WORD PTR [ebp-0xc]
  41f8e0:	jae    0x41f946
  41f8e2:	lea    esi,[edx-0x3b51]
  41f8e8:	xor    esi,eax
  41f8ea:	movzx  ecx,WORD PTR [ebp-0x4]
  41f8ee:	mov    ebx,DWORD PTR [ebp+0xc]
  41f8f1:	lea    ecx,[ebx+ecx*4]
  41f8f4:	cmp    WORD PTR [ecx+0x2],si
  41f8f8:	jne    0x41f931
  41f8fa:	movzx  ecx,WORD PTR [ecx]
  41f8fd:	mov    edi,0x4e22
  41f902:	cmp    cx,di
  41f905:	jne    0x41f913
  41f907:	mov    ebx,DWORD PTR [ebp+0x8]
  41f90a:	movzx  edi,dx
  41f90d:	cmp    BYTE PTR [edi+ebx*1],0x0
  41f911:	je     0x41f940
  41f913:	mov    ebx,DWORD PTR [ebp+0x8]
  41f916:	movzx  edi,dx
  41f919:	movsx  di,BYTE PTR [edi+ebx*1]
  41f91e:	mov    ebx,0x3b51
  41f923:	sub    di,bx
  41f926:	xor    di,ax
  41f929:	cmp    cx,di
  41f92c:	je     0x41f940
  41f92e:	push   0x7c
  41f930:	pop    edi
  41f931:	inc    DWORD PTR [ebp-0x4]
  41f934:	mov    cx,WORD PTR [ebp-0xc]
  41f938:	cmp    WORD PTR [ebp-0x4],cx
  41f93c:	jb     0x41f8ea
  41f93e:	jmp    0x41f946
  41f940:	inc    DWORD PTR [ebp-0x8]
  41f943:	push   0x7d
  41f945:	pop    edi
  41f946:	mov    esi,DWORD PTR [ebp+0x8]
  41f949:	movzx  ecx,dx
  41f94c:	cmp    BYTE PTR [ecx+esi*1],0x0
  41f950:	je     0x41f965
  41f952:	inc    edx
  41f953:	cmp    edi,0x7c
  41f956:	jne    0x41f8d3
  41f95c:	xor    eax,eax
  41f95e:	pop    edi
  41f95f:	pop    esi
  41f960:	pop    ebx
  41f961:	leave  
  41f962:	ret    0x8
  41f965:	mov    ecx,DWORD PTR [ebp-0x8]
  41f968:	add    ecx,0xffffc4af
  41f96e:	xor    cx,ax
  41f971:	xor    eax,eax
  41f973:	cmp    cx,WORD PTR [ebp-0x10]
  41f977:	sete   al
  41f97a:	jmp    0x41f95e
  41f97c:	push   ebp
  41f97d:	mov    ebp,esp
  41f97f:	sub    esp,0x50
  41f982:	push   edi
  41f983:	mov    edi,eax
  41f985:	mov    eax,DWORD PTR [edi+0x1a8]
  41f98b:	cmp    DWORD PTR [eax],0x0
  41f98e:	jne    0x41f997
  41f990:	xor    eax,eax
  41f992:	jmp    0x41fac8
  41f997:	push   DWORD PTR [ebp+0x8]
  41f99a:	push   0x2c
  41f99c:	pop    eax
  41f99d:	call   0x41f72c
  41f9a2:	mov    edx,DWORD PTR [edi+0x1ac]
  41f9a8:	lea    eax,[edi+0x22]
  41f9ab:	mov    DWORD PTR [ebp-0x4c],eax
  41f9ae:	lea    eax,[edi+0x44]
  41f9b1:	mov    DWORD PTR [ebp-0x48],eax
  41f9b4:	lea    eax,[edi+0x66]
  41f9b7:	mov    DWORD PTR [ebp-0x44],eax
  41f9ba:	lea    eax,[edi+0x88]
  41f9c0:	mov    DWORD PTR [ebp-0x40],eax
  41f9c3:	lea    eax,[edi+0xaa]
  41f9c9:	mov    DWORD PTR [ebp-0x3c],eax
  41f9cc:	lea    eax,[edi+0xcc]
  41f9d2:	mov    DWORD PTR [ebp-0x38],eax
  41f9d5:	lea    eax,[edi+0xee]
  41f9db:	mov    DWORD PTR [ebp-0x34],eax
  41f9de:	lea    eax,[edi+0x110]
  41f9e4:	mov    DWORD PTR [ebp-0x30],eax
  41f9e7:	lea    eax,[edi+0x132]
  41f9ed:	mov    DWORD PTR [ebp-0x2c],eax
  41f9f0:	lea    eax,[edi+0x154]
  41f9f6:	push   edi
  41f9f7:	mov    DWORD PTR [ebp-0x50],edi
  41f9fa:	mov    DWORD PTR [ebp-0x28],eax
  41f9fd:	call   0x41fafc
  41fa02:	push   eax
  41fa03:	mov    eax,DWORD PTR [edi+0x1a8]
  41fa09:	push   DWORD PTR [eax]
  41fa0b:	call   0x41f79d
  41fa10:	mov    DWORD PTR [ebp-0x10],eax
  41fa13:	test   eax,eax
  41fa15:	je     0x41fac8
  41fa1b:	mov    ecx,DWORD PTR [eax+0x3c]
  41fa1e:	push   ebx
  41fa1f:	push   esi
  41fa20:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fa24:	add    esi,eax
  41fa26:	mov    edi,DWORD PTR [esi+0x24]
  41fa29:	mov    ecx,DWORD PTR [esi+0x1c]
  41fa2c:	mov    edx,DWORD PTR [esi+0x20]
  41fa2f:	mov    ebx,DWORD PTR [esi+0x18]
  41fa32:	add    edi,eax
  41fa34:	mov    DWORD PTR [ebp-0x20],edi
  41fa37:	mov    edi,DWORD PTR [esi+0x14]
  41fa3a:	add    ecx,eax
  41fa3c:	add    edx,eax
  41fa3e:	mov    DWORD PTR [ebp-0xc],ecx
  41fa41:	mov    DWORD PTR [ebp-0x1c],edx
  41fa44:	mov    DWORD PTR [ebp-0x8],edi
  41fa47:	cmp    edi,ebx
  41fa49:	ja     0x41fa4e
  41fa4b:	mov    DWORD PTR [ebp-0x8],ebx
  41fa4e:	xor    ebx,ebx
  41fa50:	mov    DWORD PTR [ebp-0x18],ebx
  41fa53:	cmp    DWORD PTR [ebp-0x8],ebx
  41fa56:	jbe    0x41fac6
  41fa58:	jmp    0x41fa5d
  41fa5a:	mov    edx,DWORD PTR [ebp-0x1c]
  41fa5d:	mov    edi,DWORD PTR [ebp-0x20]
  41fa60:	movzx  edi,WORD PTR [edi+ebx*2]
  41fa64:	cmp    ebx,DWORD PTR [esi+0x18]
  41fa67:	jae    0x41fac6
  41fa69:	cmp    edi,DWORD PTR [esi+0x14]
  41fa6c:	jae    0x41fac6
  41fa6e:	mov    ebx,DWORD PTR [edx+ebx*4]
  41fa71:	mov    edx,DWORD PTR [ebp+0x8]
  41fa74:	mov    edi,DWORD PTR [ecx+edi*4]
  41fa77:	mov    DWORD PTR [ebp-0x4],edx
  41fa7a:	lea    edx,[ebp-0x50]
  41fa7d:	add    ebx,eax
  41fa7f:	add    edi,eax
  41fa81:	sub    edx,DWORD PTR [ebp+0x8]
  41fa84:	mov    DWORD PTR [ebp-0x14],0xb
  41fa8b:	mov    DWORD PTR [ebp-0x24],edx
  41fa8e:	mov    edx,DWORD PTR [ebp-0x4]
  41fa91:	cmp    DWORD PTR [edx],0x0
  41fa94:	jne    0x41fab1
  41fa96:	mov    eax,DWORD PTR [ebp-0x24]
  41fa99:	push   DWORD PTR [eax+edx*1]
  41fa9c:	push   ebx
  41fa9d:	call   0x41f897
  41faa2:	mov    ecx,DWORD PTR [ebp-0xc]
  41faa5:	test   eax,eax
  41faa7:	je     0x41faae
  41faa9:	mov    eax,DWORD PTR [ebp-0x4]
  41faac:	mov    DWORD PTR [eax],edi
  41faae:	mov    eax,DWORD PTR [ebp-0x10]
  41fab1:	add    DWORD PTR [ebp-0x4],0x4
  41fab5:	dec    DWORD PTR [ebp-0x14]
  41fab8:	jne    0x41fa8e
  41faba:	mov    ebx,DWORD PTR [ebp-0x18]
  41fabd:	inc    ebx
  41fabe:	mov    DWORD PTR [ebp-0x18],ebx
  41fac1:	cmp    ebx,DWORD PTR [ebp-0x8]
  41fac4:	jb     0x41fa5a
  41fac6:	pop    esi
  41fac7:	pop    ebx
  41fac8:	pop    edi
  41fac9:	leave  
  41faca:	ret    0x4
  41facd:	push   ebp
  41face:	mov    ebp,esp
  41fad0:	mov    eax,DWORD PTR [ebp+0x8]
  41fad3:	push   esi
  41fad4:	push   DWORD PTR [eax+0x1d8]
  41fada:	lea    esi,[eax+0x198]
  41fae0:	mov    eax,DWORD PTR [ebp+0x8]
  41fae3:	call   0x41f97c
  41fae8:	mov    ecx,DWORD PTR [esi]
  41faea:	mov    DWORD PTR [ecx],eax
  41faec:	mov    eax,DWORD PTR [esi]
  41faee:	xor    ecx,ecx
  41faf0:	cmp    DWORD PTR [eax],ecx
  41faf2:	pop    esi
  41faf3:	setne  cl
  41faf6:	mov    eax,ecx
  41faf8:	pop    ebp
  41faf9:	ret    0x4
  41fafc:	mov    ecx,DWORD PTR [edi+0x188]
  41fb02:	push   ebx
  41fb03:	jmp    0x41fb18
  41fb05:	xor    eax,0x8a8d
  41fb0a:	add    eax,0x3b51
  41fb0f:	mov    WORD PTR [ecx],ax
  41fb12:	add    ecx,0x2
  41fb15:	add    edx,0x2
  41fb18:	movzx  eax,WORD PTR [edx]
  41fb1b:	mov    ebx,0x4e22
  41fb20:	cmp    ax,bx
  41fb23:	jne    0x41fb05
  41fb25:	xor    eax,eax
  41fb27:	mov    WORD PTR [ecx],ax
  41fb2a:	mov    eax,DWORD PTR [edi+0x188]
  41fb30:	pop    ebx
  41fb31:	ret    
  41fb32:	push   edi
  41fb33:	mov    edi,eax
  41fb35:	mov    eax,DWORD PTR [esi+0x188]
  41fb3b:	shl    edi,0x6
  41fb3e:	add    eax,edi
  41fb40:	jmp    0x41fb4c
  41fb42:	xor    cl,0x74
  41fb45:	sub    cl,0x8
  41fb48:	mov    BYTE PTR [eax],cl
  41fb4a:	inc    eax
  41fb4b:	inc    edx
  41fb4c:	mov    cl,BYTE PTR [edx]
  41fb4e:	cmp    cl,0x7c
  41fb51:	jne    0x41fb42
  41fb53:	mov    BYTE PTR [eax],0x0
  41fb56:	mov    eax,DWORD PTR [esi+0x188]
  41fb5c:	add    eax,edi
  41fb5e:	pop    edi
  41fb5f:	ret    
  41fb60:	push   ebp
  41fb61:	mov    ebp,esp
  41fb63:	sub    esp,0x38
  41fb66:	push   ebx
  41fb67:	mov    ebx,0xf89c8585
  41fb6c:	mov    DWORD PTR [ebp-0x4],ebx
  41fb6f:	lea    eax,[ebx-0x1]
  41fb72:	push   esi
  41fb73:	mov    DWORD PTR [ebp-0x24],eax
  41fb76:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb79:	mov    edx,DWORD PTR [ebp+0x8]
  41fb7c:	mov    esi,0x751089b
  41fb81:	push   edi
  41fb82:	xor    ecx,esi
  41fb84:	mov    edi,0x3272e2
  41fb89:	add    ecx,edi
  41fb8b:	cmp    edx,ecx
  41fb8d:	je     0x41fcfb
  41fb93:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb96:	mov    edx,DWORD PTR [ebp+0xc]
  41fb99:	xor    ecx,esi
  41fb9b:	add    ecx,edi
  41fb9d:	cmp    edx,ecx
  41fb9f:	je     0x41fcfb
  41fba5:	mov    ecx,DWORD PTR [ebp+0x10]
  41fba8:	mov    DWORD PTR [ebp-0x18],ecx
  41fbab:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbae:	mov    DWORD PTR [ebp-0x14],ecx
  41fbb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbb4:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  41fbbb:	mov    DWORD PTR [ebp-0x20],eax
  41fbbe:	mov    DWORD PTR [ebp-0x10],ebx
  41fbc1:	mov    DWORD PTR [ebp+0xc],eax
  41fbc4:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41fbcb:	mov    eax,DWORD PTR [ebp+0xc]
  41fbce:	mov    DWORD PTR [ebp-0xc],ecx
  41fbd1:	xor    eax,esi
  41fbd3:	mov    ecx,0xffcd8d1e
  41fbd8:	sub    ecx,eax
  41fbda:	add    ecx,DWORD PTR [ebp-0x14]
  41fbdd:	mov    DWORD PTR [ebp+0x8],ecx
  41fbe0:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41fbe7:	jmp    0x41fceb
  41fbec:	mov    eax,DWORD PTR [ebp+0xc]
  41fbef:	mov    ecx,DWORD PTR [ebp+0xc]
  41fbf2:	xor    eax,esi
  41fbf4:	xor    ecx,esi
  41fbf6:	lea    ecx,[eax+ecx*1+0x64e5c4]
  41fbfd:	mov    eax,DWORD PTR [ebp+0x8]
  41fc00:	xor    edx,edx
  41fc02:	div    ecx
  41fc04:	mov    eax,DWORD PTR [ebp+0x10]
  41fc07:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc0a:	xor    eax,esi
  41fc0c:	xor    ecx,esi
  41fc0e:	sub    eax,ecx
  41fc10:	cmp    edx,eax
  41fc12:	jne    0x41fca7
  41fc18:	mov    eax,DWORD PTR [ebp+0x8]
  41fc1b:	add    eax,DWORD PTR [ebp-0xc]
  41fc1e:	mov    dl,BYTE PTR [eax]
  41fc20:	mov    eax,DWORD PTR [ebp-0x10]
  41fc23:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc26:	xor    eax,esi
  41fc28:	xor    ecx,esi
  41fc2a:	add    eax,edi
  41fc2c:	add    ecx,edi
  41fc2e:	cmp    eax,ecx
  41fc30:	jae    0x41fc78
  41fc32:	lea    ecx,[eax-0x3272e2]
  41fc38:	mov    DWORD PTR [ebp-0x4],ecx
  41fc3b:	mov    ebx,DWORD PTR [ebp-0x4]
  41fc3e:	xor    ebx,esi
  41fc40:	add    ebx,0x7f55d8fb
  41fc46:	lea    ecx,[ebp+eax*4-0x38]
  41fc4a:	mov    DWORD PTR [ecx],ebx
  41fc4c:	mov    ebx,DWORD PTR [ecx]
  41fc4e:	cmp    ebx,0x244ecbda
  41fc54:	jbe    0x41fc5e
  41fc56:	add    DWORD PTR [ecx],0x405fc19
  41fc5c:	jmp    0x41fc64
  41fc5e:	add    DWORD PTR [ecx],0xfdaf43e7
  41fc64:	mov    ecx,DWORD PTR [ebp-0x8]
  41fc67:	xor    ecx,esi
  41fc69:	inc    eax
  41fc6a:	inc    DWORD PTR [ebp-0x4]
  41fc6d:	add    ecx,edi
  41fc6f:	cmp    eax,ecx
  41fc71:	jb     0x41fc3b
  41fc73:	mov    ebx,0xf89c8585
  41fc78:	mov    eax,DWORD PTR [ebp-0x18]
  41fc7b:	test   eax,eax
  41fc7d:	jne    0x41fc87
  41fc7f:	xor    dl,0x74
  41fc82:	sub    dl,0x8
  41fc85:	jmp    0x41fc9d
  41fc87:	mov    eax,DWORD PTR [ebp-0x1c]
  41fc8a:	xor    al,0x9b
  41fc8c:	mov    cl,0x1e
  41fc8e:	sub    cl,al
  41fc90:	add    dl,cl
  41fc92:	mov    ecx,DWORD PTR [ebp-0x20]
  41fc95:	xor    cl,0x9b
  41fc98:	sub    cl,0x1e
  41fc9b:	ror    dl,cl
  41fc9d:	xor    eax,eax
  41fc9f:	mov    eax,DWORD PTR [ebp+0x8]
  41fca2:	add    eax,DWORD PTR [ebp-0xc]
  41fca5:	mov    BYTE PTR [eax],dl
  41fca7:	mov    eax,DWORD PTR [ebp+0x8]
  41fcaa:	mov    ecx,DWORD PTR [ebp-0x10]
  41fcad:	sub    eax,edi
  41fcaf:	xor    eax,esi
  41fcb1:	cmp    eax,ecx
  41fcb3:	jne    0x41fcd9
  41fcb5:	mov    eax,DWORD PTR [ebp+0x10]
  41fcb8:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcbb:	xor    eax,esi
  41fcbd:	xor    ecx,esi
  41fcbf:	sub    eax,ecx
  41fcc1:	sub    eax,edi
  41fcc3:	xor    eax,esi
  41fcc5:	mov    DWORD PTR [ebp+0x10],eax
  41fcc8:	mov    eax,DWORD PTR [ebp+0xc]
  41fccb:	xor    eax,esi
  41fccd:	mov    ecx,0xffcd8d1e
  41fcd2:	sub    ecx,eax
  41fcd4:	add    ecx,DWORD PTR [ebp-0x14]
  41fcd7:	jmp    0x41fce8
  41fcd9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcdc:	xor    eax,esi
  41fcde:	mov    ecx,0xffcd8d1e
  41fce3:	sub    ecx,eax
  41fce5:	add    ecx,DWORD PTR [ebp+0x8]
  41fce8:	mov    DWORD PTR [ebp+0x8],ecx
  41fceb:	mov    eax,DWORD PTR [ebp+0x10]
  41fcee:	cmp    eax,ebx
  41fcf0:	jne    0x41fbec
  41fcf6:	mov    eax,DWORD PTR [ebp-0x24]
  41fcf9:	jmp    0x41fcfe
  41fcfb:	mov    eax,DWORD PTR [ebp-0x4]
  41fcfe:	xor    eax,esi
  41fd00:	add    eax,edi
  41fd02:	pop    edi
  41fd03:	pop    esi
  41fd04:	pop    ebx
  41fd05:	leave  
  41fd06:	ret    0xc
  41fd09:	push   ebp
  41fd0a:	mov    ebp,esp
  41fd0c:	sub    esp,0x14
  41fd0f:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41fd16:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  41fd1d:	mov    eax,DWORD PTR [ebx]
  41fd1f:	mov    DWORD PTR [ebp-0x8],eax
  41fd22:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41fd29:	push   esi
  41fd2a:	push   edi
  41fd2b:	mov    DWORD PTR [ebp-0x14],0xead718a5
  41fd32:	mov    edi,DWORD PTR [ebp-0x4]
  41fd35:	mov    ecx,DWORD PTR [ebp-0x10]
  41fd38:	mov    eax,0x751089b
  41fd3d:	xor    edi,eax
  41fd3f:	mov    edx,0x3272e2
  41fd44:	xor    ecx,eax
  41fd46:	add    edi,edx
  41fd48:	add    ecx,edx
  41fd4a:	imul   edi,ecx
  41fd4d:	jmp    0x41fd95
  41fd4f:	mov    ecx,DWORD PTR [ebp-0x8]
  41fd52:	mov    esi,DWORD PTR [ebp-0x4]
  41fd55:	xor    ecx,eax
  41fd57:	xor    esi,eax
  41fd59:	add    ecx,edx
  41fd5b:	add    esi,edx
  41fd5d:	test   esi,ecx
  41fd5f:	mov    esi,DWORD PTR [ebp-0x8]
  41fd62:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd65:	je     0x41fd7c
  41fd67:	xor    ecx,eax
  41fd69:	xor    esi,eax
  41fd6b:	add    ecx,edx
  41fd6d:	add    esi,edx
  41fd6f:	shr    esi,cl
  41fd71:	mov    ecx,DWORD PTR [ebp-0x14]
  41fd74:	xor    ecx,eax
  41fd76:	add    ecx,edx
  41fd78:	xor    esi,ecx
  41fd7a:	jmp    0x41fd86
  41fd7c:	xor    esi,eax
  41fd7e:	xor    ecx,eax
  41fd80:	add    esi,edx
  41fd82:	add    ecx,edx
  41fd84:	shr    esi,cl
  41fd86:	mov    DWORD PTR [ebp-0x8],esi
  41fd89:	mov    ecx,DWORD PTR [ebp-0x4]
  41fd8c:	xor    ecx,eax
  41fd8e:	lea    edi,[edi+ecx*1+0x3272e2]
  41fd95:	mov    ecx,DWORD PTR [ebp-0xc]
  41fd98:	mov    esi,DWORD PTR [ebp-0x4]
  41fd9b:	xor    esi,eax
  41fd9d:	xor    ecx,eax
  41fd9f:	sub    ecx,esi
  41fda1:	cmp    edi,ecx
  41fda3:	jbe    0x41fd4f
  41fda5:	mov    eax,DWORD PTR [ebp-0x8]
  41fda8:	pop    edi
  41fda9:	mov    DWORD PTR [ebx],eax
  41fdab:	mov    eax,DWORD PTR [ebp-0x8]
  41fdae:	pop    esi
  41fdaf:	leave  
  41fdb0:	ret    
  41fdb1:	push   ebp
  41fdb2:	mov    ebp,esp
  41fdb4:	sub    esp,0x420
  41fdba:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  41fdc1:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41fdc8:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  41fdcf:	push   ebx
  41fdd0:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41fdd7:	mov    eax,DWORD PTR [ebp-0x14]
  41fdda:	push   esi
  41fddb:	mov    esi,0x751089b
  41fde0:	push   edi
  41fde1:	xor    eax,esi
  41fde3:	mov    edi,0x3272e2
  41fde8:	add    eax,edi
  41fdea:	mov    DWORD PTR [ebp-0x8],eax
  41fded:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41fdf4:	mov    DWORD PTR [ebp-0x4],0xead718a5
  41fdfb:	mov    DWORD PTR [ebp-0x10],0x8
  41fe02:	mov    ecx,ecx
  41fe04:	mov    eax,DWORD PTR [ebp-0xc]
  41fe07:	mov    ecx,DWORD PTR [ebp-0x14]
  41fe0a:	xor    eax,esi
  41fe0c:	xor    ecx,esi
  41fe0e:	add    eax,edi
  41fe10:	add    ecx,edi
  41fe12:	imul   eax,ecx
  41fe15:	jmp    0x41fe48
  41fe17:	mov    eax,DWORD PTR [ebp-0x4]
  41fe1a:	sub    eax,edi
  41fe1c:	xor    eax,esi
  41fe1e:	mov    DWORD PTR [ebp-0x8],eax
  41fe21:	lea    ebx,[ebp-0x8]
  41fe24:	call   0x41fd09
  41fe29:	mov    DWORD PTR [ebp-0x8],eax
  41fe2c:	mov    eax,DWORD PTR [ebp-0x8]
  41fe2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe32:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41fe39:	mov    eax,DWORD PTR [ebp-0xc]
  41fe3c:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe3f:	xor    eax,esi
  41fe41:	lea    eax,[eax+ecx*1+0x3272e2]
  41fe48:	mov    DWORD PTR [ebp-0x4],eax
  41fe4b:	mov    eax,DWORD PTR [ebp-0x18]
  41fe4e:	mov    ecx,DWORD PTR [ebp-0xc]
  41fe51:	xor    ecx,esi
  41fe53:	xor    eax,esi
  41fe55:	sub    eax,ecx
  41fe57:	mov    ecx,DWORD PTR [ebp-0x4]
  41fe5a:	cmp    ecx,eax
  41fe5c:	jbe    0x41fe17
  41fe5e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fe61:	xor    eax,esi
  41fe63:	add    eax,edi
  41fe65:	mov    DWORD PTR [ebp-0x8],eax
  41fe68:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41fe6f:	mov    ebx,ebx
  41fe71:	jmp    0x41fed4
  41fe73:	mov    ecx,DWORD PTR [ebp-0x20]
  41fe76:	mov    eax,DWORD PTR [ebp-0x8]
  41fe79:	xor    ecx,esi
  41fe7b:	add    ecx,edi
  41fe7d:	shr    eax,cl
  41fe7f:	mov    DWORD PTR [ebp-0x4],eax
  41fe82:	mov    eax,DWORD PTR [ebp+0x8]
  41fe85:	mov    cl,BYTE PTR [eax]
  41fe87:	mov    BYTE PTR [ebp+0xb],cl
  41fe8a:	mov    cl,BYTE PTR [ebp+0xb]
  41fe8d:	mov    edx,DWORD PTR [ebp-0x8]
  41fe90:	movzx  ecx,cl
  41fe93:	xor    ecx,edx
  41fe95:	mov    DWORD PTR [ebp+0x8],ecx
  41fe98:	mov    ecx,DWORD PTR [ebp-0x18]
  41fe9b:	mov    edx,DWORD PTR [ebp+0x8]
  41fe9e:	xor    ecx,esi
  41fea0:	add    ecx,edi
  41fea2:	and    ecx,edx
  41fea4:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41feab:	mov    edx,DWORD PTR [ebp-0x4]
  41feae:	xor    ecx,edx
  41feb0:	mov    DWORD PTR [ebp-0x8],ecx
  41feb3:	mov    ecx,DWORD PTR [ebp-0xc]
  41feb6:	xor    ecx,esi
  41feb8:	lea    eax,[eax+ecx*1+0x3272e2]
  41febf:	mov    DWORD PTR [ebp+0x8],eax
  41fec2:	mov    eax,DWORD PTR [ebp-0xc]
  41fec5:	xor    eax,esi
  41fec7:	mov    ecx,0xffcd8d1e
  41fecc:	sub    ecx,eax
  41fece:	add    ecx,DWORD PTR [ebp-0x10]
  41fed1:	mov    DWORD PTR [ebp-0x10],ecx
  41fed4:	mov    eax,DWORD PTR [ebp-0x14]
  41fed7:	mov    ecx,DWORD PTR [ebp-0x10]
  41feda:	xor    eax,esi
  41fedc:	add    eax,edi
  41fede:	cmp    ecx,eax
  41fee0:	jne    0x41fe73
  41fee2:	mov    eax,DWORD PTR [ebp-0x1c]
  41fee5:	mov    ecx,DWORD PTR [ebp-0x8]
  41fee8:	xor    eax,esi
  41feea:	add    eax,edi
  41feec:	pop    edi
  41feed:	pop    esi
  41feee:	xor    eax,ecx
  41fef0:	pop    ebx
  41fef1:	leave  
  41fef2:	ret    0x4
  41fef5:	push   ebp
  41fef6:	mov    ebp,esp
  41fef8:	mov    eax,DWORD PTR [ebp+0x1c]
  41fefb:	mov    ecx,DWORD PTR [ebp+0x8]
  41fefe:	mov    edx,DWORD PTR [ebp+0x10]
  41ff01:	mov    eax,DWORD PTR [eax+0x190]
  41ff07:	mov    eax,DWORD PTR [eax]
  41ff09:	sub    esp,0x64
  41ff0c:	push   ebx
  41ff0d:	push   esi
  41ff0e:	push   edi
  41ff0f:	mov    edi,0x751089b
  41ff14:	xor    ecx,edi
  41ff16:	mov    ebx,0x3272e2
  41ff1b:	add    ecx,ebx
  41ff1d:	cmp    ecx,edx
  41ff1f:	jne    0x41ff30
  41ff21:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ff2b:	jmp    0x42042c
  41ff30:	mov    ecx,DWORD PTR [ebp+0x8]
  41ff33:	mov    esi,DWORD PTR [ebp+0x14]
  41ff36:	mov    edx,DWORD PTR [esi]
  41ff38:	xor    ecx,edi
  41ff3a:	add    ecx,ebx
  41ff3c:	cmp    edx,ecx
  41ff3e:	je     0x4203e7
  41ff44:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff47:	mov    DWORD PTR [ebp-0x1c],eax
  41ff4a:	mov    DWORD PTR [ebp+0x1c],ecx
  41ff4d:	mov    ecx,DWORD PTR [ebp+0x18]
  41ff50:	mov    eax,DWORD PTR [esi]
  41ff52:	mov    DWORD PTR [ebp-0x20],eax
  41ff55:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  41ff5c:	mov    edx,0xf89c8584
  41ff61:	mov    DWORD PTR [ebp-0x8],edx
  41ff64:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff67:	mov    DWORD PTR [ebp+0x1c],eax
  41ff6a:	mov    eax,DWORD PTR [ebp+0x1c]
  41ff6d:	mov    eax,DWORD PTR [eax+0x190]
  41ff73:	mov    eax,DWORD PTR [eax]
  41ff75:	mov    DWORD PTR [ebp-0x24],ecx
  41ff78:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ff7b:	mov    ecx,DWORD PTR [ecx+0x190]
  41ff81:	mov    ecx,DWORD PTR [ecx]
  41ff83:	add    ecx,DWORD PTR [eax+0x3c]
  41ff86:	mov    DWORD PTR [ebp+0x10],ecx
  41ff89:	mov    eax,DWORD PTR [ebp+0x8]
  41ff8c:	xor    eax,edi
  41ff8e:	add    eax,ebx
  41ff90:	mov    DWORD PTR [ebp-0x4],eax
  41ff93:	mov    eax,DWORD PTR [ebp+0x8]
  41ff96:	xor    eax,edi
  41ff98:	add    eax,ebx
  41ff9a:	mov    DWORD PTR [ebp+0x18],eax
  41ff9d:	mov    eax,DWORD PTR [ebp+0x10]
  41ffa0:	mov    eax,DWORD PTR [eax+0x50]
  41ffa3:	sub    eax,0xc
  41ffa6:	mov    DWORD PTR [ebp-0x28],eax
  41ffa9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffac:	mov    eax,DWORD PTR [eax+0x38]
  41ffaf:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffb2:	dec    eax
  41ffb3:	test   DWORD PTR [ecx+0x54],eax
  41ffb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ffb9:	je     0x41ffd3
  41ffbb:	mov    eax,DWORD PTR [eax+0x38]
  41ffbe:	mov    ecx,DWORD PTR [ebp+0x10]
  41ffc1:	mov    ecx,DWORD PTR [ecx+0x54]
  41ffc4:	dec    eax
  41ffc5:	not    eax
  41ffc7:	and    ecx,eax
  41ffc9:	mov    eax,DWORD PTR [ebp+0x10]
  41ffcc:	mov    eax,DWORD PTR [eax+0x38]
  41ffcf:	add    eax,ecx
  41ffd1:	jmp    0x41ffd6
  41ffd3:	mov    eax,DWORD PTR [eax+0x54]
  41ffd6:	mov    DWORD PTR [ebp+0x1c],eax
  41ffd9:	mov    eax,DWORD PTR [ebp+0x8]
  41ffdc:	xor    eax,edi
  41ffde:	add    eax,ebx
  41ffe0:	mov    DWORD PTR [ebp+0x18],eax
  41ffe3:	mov    eax,DWORD PTR [ebp+0x8]
  41ffe6:	xor    eax,edi
  41ffe8:	add    eax,ebx
  41ffea:	mov    DWORD PTR [ebp+0x18],eax
  41ffed:	mov    eax,DWORD PTR [ebp+0x8]
  41fff0:	mov    ecx,DWORD PTR [ebp-0x24]
  41fff3:	xor    eax,edi
  41fff5:	add    eax,ebx
  41fff7:	mov    DWORD PTR [ecx],eax
  41fff9:	mov    DWORD PTR [ebp+0x18],edx
  41fffc:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  420003:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  42000a:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  420011:	mov    eax,DWORD PTR [ebp-0x8]
  420014:	mov    ecx,DWORD PTR [ebp+0x1c]
  420017:	xor    eax,edi
  420019:	add    eax,ebx
  42001b:	imul   eax,ecx
  42001e:	mov    ecx,DWORD PTR [ebp+0x8]
  420021:	mov    edx,DWORD PTR [ebp-0x28]
  420024:	xor    ecx,edi
  420026:	lea    ecx,[ecx+edx*1+0x3272e2]
  42002d:	cmp    eax,ecx
  42002f:	jae    0x4203e0
  420035:	mov    eax,DWORD PTR [ebp+0x8]
  420038:	xor    eax,edi
  42003a:	add    eax,ebx
  42003c:	mov    DWORD PTR [ebp+0x18],eax
  42003f:	mov    eax,DWORD PTR [ebp+0x1c]
  420042:	add    eax,DWORD PTR [ebp-0x1c]
  420045:	mov    DWORD PTR [ebp-0x4],eax
  420048:	push   DWORD PTR [ebp-0x4]
  42004b:	mov    esi,DWORD PTR [ebp-0x1c]
  42004e:	mov    ecx,DWORD PTR [ebp+0x10]
  420051:	call   0x41f149
  420056:	mov    DWORD PTR [ebp+0xc],eax
  420059:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  420060:	mov    eax,DWORD PTR [ebp-0x18]
  420063:	xor    eax,edi
  420065:	lea    ecx,[ebp-0x40]
  420068:	add    eax,ebx
  42006a:	push   ecx
  42006b:	call   0x41f72c
  420070:	mov    eax,DWORD PTR [ebp+0xc]
  420073:	test   eax,eax
  420075:	je     0x4200c5
  420077:	mov    eax,DWORD PTR [ebp-0x18]
  42007a:	xor    eax,edi
  42007c:	add    eax,ebx
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp+0xc]
  420082:	lea    eax,[ebp-0x40]
  420085:	push   eax
  420086:	call   0x41f5d3
  42008b:	mov    eax,DWORD PTR [ebp-0x4]
  42008e:	mov    DWORD PTR [ebp-0x18],eax
  420091:	mov    eax,DWORD PTR [ebp-0x18]
  420094:	mov    ecx,DWORD PTR [ebp-0x1c]
  420097:	sub    eax,ecx
  420099:	mov    DWORD PTR [ebp-0x18],eax
  42009c:	mov    eax,DWORD PTR [ebp+0xc]
  42009f:	mov    ecx,DWORD PTR [ebp+0xc]
  4200a2:	mov    eax,DWORD PTR [eax+0x10]
  4200a5:	add    eax,DWORD PTR [ecx+0xc]
  4200a8:	mov    ecx,DWORD PTR [ebp-0x18]
  4200ab:	cmp    ecx,eax
  4200ad:	jb     0x4200c5
  4200af:	mov    eax,DWORD PTR [ebp+0xc]
  4200b2:	mov    eax,DWORD PTR [eax+0xc]
  4200b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4200b8:	add    eax,DWORD PTR [ecx+0x8]
  4200bb:	mov    ecx,DWORD PTR [ebp-0x18]
  4200be:	sub    eax,ecx
  4200c0:	jmp    0x4203b3
  4200c5:	push   0xc
  4200c7:	push   DWORD PTR [ebp-0x4]
  4200ca:	lea    eax,[ebp-0x4c]
  4200cd:	push   eax
  4200ce:	call   0x41f5d3
  4200d3:	mov    eax,0xf89c8585
  4200d8:	mov    DWORD PTR [ebp-0x2c],eax
  4200db:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  4200e2:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4200e9:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  4200f0:	lea    ecx,[ebp-0x2c]
  4200f3:	mov    DWORD PTR [ebp-0xc],ecx
  4200f6:	lea    ecx,[ebp-0x30]
  4200f9:	mov    DWORD PTR [ebp-0x10],ecx
  4200fc:	lea    ecx,[ebp-0x34]
  4200ff:	mov    DWORD PTR [ebp+0xc],ecx
  420102:	lea    ecx,[ebp-0x38]
  420105:	mov    DWORD PTR [ebp-0x14],ecx
  420108:	mov    ecx,DWORD PTR [ebp+0x8]
  42010b:	xor    ecx,edi
  42010d:	add    ecx,ebx
  42010f:	mov    DWORD PTR [ebp-0x18],ecx
  420112:	jmp    0x42030e
  420117:	cmp    eax,0xf89c85bb
  42011c:	je     0x420320
  420122:	mov    ecx,DWORD PTR [ebp-0x8]
  420125:	xor    ecx,edi
  420127:	mov    esi,eax
  420129:	add    ecx,ebx
  42012b:	mov    DWORD PTR [ebp+0x18],ecx
  42012e:	mov    eax,DWORD PTR [ebp-0x18]
  420131:	xor    esi,edi
  420133:	lea    eax,[eax+esi*1+0x3272e2]
  42013a:	mov    DWORD PTR [ebp-0x18],eax
  42013d:	mov    eax,DWORD PTR [ebp-0x8]
  420140:	mov    ecx,DWORD PTR [ebp-0x18]
  420143:	xor    eax,edi
  420145:	add    eax,ebx
  420147:	cmp    ecx,eax
  420149:	jne    0x42015e
  42014b:	mov    eax,DWORD PTR [ebp+0x8]
  42014e:	xor    eax,edi
  420150:	add    eax,ebx
  420152:	push   eax
  420153:	push   0xc
  420155:	lea    eax,[ebp-0x4c]
  420158:	push   eax
  420159:	call   0x41fb60
  42015e:	mov    eax,DWORD PTR [ebp-0xc]
  420161:	mov    eax,DWORD PTR [eax]
  420163:	xor    eax,edi
  420165:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42016c:	mov    ecx,DWORD PTR [ebp+0x8]
  42016f:	xor    ecx,edi
  420171:	movzx  eax,al
  420174:	add    ecx,ebx
  420176:	cmp    eax,ecx
  420178:	je     0x4202f6
  42017e:	mov    eax,DWORD PTR [ebp-0x10]
  420181:	mov    eax,DWORD PTR [eax]
  420183:	xor    eax,edi
  420185:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  42018c:	mov    ecx,DWORD PTR [ebp+0x8]
  42018f:	xor    ecx,edi
  420191:	movzx  eax,al
  420194:	add    ecx,ebx
  420196:	cmp    eax,ecx
  420198:	je     0x4202f6
  42019e:	mov    eax,DWORD PTR [ebp+0xc]
  4201a1:	mov    eax,DWORD PTR [eax]
  4201a3:	xor    eax,edi
  4201a5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4201af:	xor    ecx,edi
  4201b1:	movzx  eax,al
  4201b4:	add    ecx,ebx
  4201b6:	cmp    eax,ecx
  4201b8:	je     0x4202f6
  4201be:	mov    eax,DWORD PTR [ebp-0x14]
  4201c1:	mov    eax,DWORD PTR [eax]
  4201c3:	xor    eax,edi
  4201c5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4201cf:	xor    ecx,edi
  4201d1:	movzx  eax,al
  4201d4:	add    ecx,ebx
  4201d6:	cmp    eax,ecx
  4201d8:	je     0x4202f6
  4201de:	mov    eax,DWORD PTR [ebp-0x10]
  4201e1:	mov    eax,DWORD PTR [eax]
  4201e3:	xor    eax,edi
  4201e5:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4201ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4201ef:	mov    ecx,DWORD PTR [ecx]
  4201f1:	xor    ecx,edi
  4201f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4201fa:	xor    al,cl
  4201fc:	mov    ecx,DWORD PTR [ebp+0xc]
  4201ff:	mov    ecx,DWORD PTR [ecx]
  420201:	xor    ecx,edi
  420203:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42020a:	or     al,cl
  42020c:	mov    ecx,DWORD PTR [ebp-0xc]
  42020f:	mov    ecx,DWORD PTR [ecx]
  420211:	xor    ecx,edi
  420213:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42021a:	cmp    cl,al
  42021c:	jne    0x4202f6
  420222:	mov    eax,DWORD PTR [ebp+0xc]
  420225:	mov    eax,DWORD PTR [eax]
  420227:	xor    eax,edi
  420229:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420230:	mov    ecx,DWORD PTR [ebp-0x10]
  420233:	mov    ecx,DWORD PTR [ecx]
  420235:	xor    ecx,edi
  420237:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42023e:	xor    al,cl
  420240:	mov    ecx,DWORD PTR [ebp-0x14]
  420243:	mov    ecx,DWORD PTR [ecx]
  420245:	xor    ecx,edi
  420247:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  42024e:	or     al,cl
  420250:	mov    ecx,DWORD PTR [ebp-0x10]
  420253:	mov    ecx,DWORD PTR [ecx]
  420255:	xor    ecx,edi
  420257:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  42025e:	cmp    cl,al
  420260:	jne    0x4202f6
  420266:	mov    eax,DWORD PTR [ebp-0x14]
  420269:	mov    eax,DWORD PTR [eax]
  42026b:	xor    eax,edi
  42026d:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  420274:	mov    ecx,DWORD PTR [ebp+0xc]
  420277:	mov    ecx,DWORD PTR [ecx]
  420279:	xor    ecx,edi
  42027b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420282:	xor    al,cl
  420284:	mov    ecx,DWORD PTR [ebp-0xc]
  420287:	mov    ecx,DWORD PTR [ecx]
  420289:	xor    ecx,edi
  42028b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  420292:	or     al,cl
  420294:	mov    ecx,DWORD PTR [ebp+0xc]
  420297:	mov    ecx,DWORD PTR [ecx]
  420299:	xor    ecx,edi
  42029b:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202a2:	cmp    cl,al
  4202a4:	jne    0x4202f6
  4202a6:	mov    eax,DWORD PTR [ebp-0x14]
  4202a9:	mov    eax,DWORD PTR [eax]
  4202ab:	xor    eax,edi
  4202ad:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4202b4:	mov    ecx,DWORD PTR [ebp-0xc]
  4202b7:	mov    ecx,DWORD PTR [ecx]
  4202b9:	xor    ecx,edi
  4202bb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202c2:	xor    al,cl
  4202c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4202c7:	mov    ecx,DWORD PTR [ecx]
  4202c9:	xor    ecx,edi
  4202cb:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  4202d2:	or     al,cl
  4202d4:	mov    ecx,DWORD PTR [ebp-0x14]
  4202d7:	mov    ecx,DWORD PTR [ecx]
  4202d9:	xor    ecx,edi
  4202db:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  4202e2:	cmp    cl,al
  4202e4:	jne    0x4202f6
  4202e6:	lea    eax,[ebp-0x4c]
  4202e9:	push   eax
  4202ea:	call   0x41fdb1
  4202ef:	mov    ecx,DWORD PTR [ebp-0x44]
  4202f2:	cmp    eax,ecx
  4202f4:	je     0x420300
  4202f6:	mov    eax,DWORD PTR [ebp+0x8]
  4202f9:	xor    eax,edi
  4202fb:	add    eax,ebx
  4202fd:	mov    DWORD PTR [ebp+0x18],eax
  420300:	mov    eax,DWORD PTR [ebp-0x8]
  420303:	xor    eax,edi
  420305:	lea    eax,[eax+esi*1+0x3272e2]
  42030c:	xor    eax,edi
  42030e:	mov    ecx,DWORD PTR [ebp+0x8]
  420311:	mov    edx,DWORD PTR [ebp+0x18]
  420314:	xor    ecx,edi
  420316:	add    ecx,ebx
  420318:	cmp    edx,ecx
  42031a:	je     0x420117
  420320:	mov    eax,DWORD PTR [ebp+0x8]
  420323:	mov    ecx,DWORD PTR [ebp+0x18]
  420326:	xor    eax,edi
  420328:	add    eax,ebx
  42032a:	cmp    ecx,eax
  42032c:	jne    0x42033f
  42032e:	mov    eax,DWORD PTR [ebp-0x8]
  420331:	mov    ecx,DWORD PTR [ebp+0x1c]
  420334:	xor    eax,edi
  420336:	lea    eax,[eax+ecx*1+0x3272e2]
  42033d:	jmp    0x4203b6
  42033f:	push   0x18
  420341:	push   DWORD PTR [ebp-0x4]
  420344:	lea    eax,[ebp-0x64]
  420347:	push   eax
  420348:	call   0x41f5d3
  42034d:	mov    eax,DWORD PTR [ebp+0x8]
  420350:	mov    ecx,DWORD PTR [ebp-0x18]
  420353:	xor    eax,edi
  420355:	add    eax,ebx
  420357:	cmp    eax,ecx
  420359:	je     0x42036e
  42035b:	mov    eax,DWORD PTR [ebp+0x8]
  42035e:	xor    eax,edi
  420360:	add    eax,ebx
  420362:	push   eax
  420363:	push   0x18
  420365:	lea    eax,[ebp-0x64]
  420368:	push   eax
  420369:	call   0x41fb60
  42036e:	mov    eax,DWORD PTR [ebp-0x4]
  420371:	add    eax,0x18
  420374:	mov    DWORD PTR [ebp+0x18],eax
  420377:	push   DWORD PTR [ebp-0x50]
  42037a:	push   DWORD PTR [ebp+0x18]
  42037d:	mov    eax,DWORD PTR [ebp-0x54]
  420380:	add    eax,DWORD PTR [ebp-0x20]
  420383:	push   eax
  420384:	call   0x41f5d3
  420389:	mov    eax,DWORD PTR [ebp+0x8]
  42038c:	mov    ecx,DWORD PTR [ebp-0x18]
  42038f:	xor    eax,edi
  420391:	add    eax,ebx
  420393:	cmp    eax,ecx
  420395:	je     0x4203a8
  420397:	push   0x0
  420399:	push   DWORD PTR [ebp-0x50]
  42039c:	mov    eax,DWORD PTR [ebp-0x54]
  42039f:	add    eax,DWORD PTR [ebp-0x20]
  4203a2:	push   eax
  4203a3:	call   0x41fb60
  4203a8:	mov    eax,DWORD PTR [ebp-0x24]
  4203ab:	mov    ecx,DWORD PTR [ebp-0x50]
  4203ae:	add    DWORD PTR [eax],ecx
  4203b0:	mov    eax,DWORD PTR [ebp-0x50]
  4203b3:	add    eax,DWORD PTR [ebp+0x1c]
  4203b6:	mov    DWORD PTR [ebp+0x1c],eax
  4203b9:	mov    eax,DWORD PTR [ebp-0x8]
  4203bc:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203bf:	xor    eax,edi
  4203c1:	add    eax,ebx
  4203c3:	imul   eax,ecx
  4203c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4203c9:	mov    edx,DWORD PTR [ebp-0x28]
  4203cc:	xor    ecx,edi
  4203ce:	lea    ecx,[ecx+edx*1+0x3272e2]
  4203d5:	cmp    eax,ecx
  4203d7:	jb     0x420035
  4203dd:	mov    esi,DWORD PTR [ebp+0x14]
  4203e0:	mov    eax,DWORD PTR [ebp-0x20]
  4203e3:	mov    DWORD PTR [esi],eax
  4203e5:	jmp    0x42042c
  4203e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4203ea:	mov    edx,DWORD PTR [ebp+0xc]
  4203ed:	xor    ecx,edi
  4203ef:	xor    edx,edi
  4203f1:	add    ecx,ebx
  4203f3:	add    edx,ebx
  4203f5:	cmp    ecx,edx
  4203f7:	jne    0x42040b
  4203f9:	mov    eax,ds:0x7f642d1e
  4203fe:	imul   eax,eax,0x9f15fcef
  420404:	mov    ds:0x7f642d1e,eax
  420409:	jmp    0x42042c
  42040b:	mov    ecx,DWORD PTR [ebp+0x8]
  42040e:	xor    ecx,edi
  420410:	add    ecx,ebx
  420412:	cmp    eax,ecx
  420414:	je     0x420422
  420416:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420420:	jmp    0x42042c
  420422:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  42042c:	pop    edi
  42042d:	pop    esi
  42042e:	pop    ebx
  42042f:	leave  
  420430:	ret    0x18
  420433:	push   ebp
  420434:	mov    ebp,esp
  420436:	and    esp,0xfffffff8
  420439:	mov    eax,DWORD PTR [ebp+0x20]
  42043c:	sub    esp,0x14
  42043f:	push   ebx
  420440:	mov    ebx,DWORD PTR [ebp+0x14]
  420443:	push   esi
  420444:	push   edi
  420445:	cmp    eax,0xf89c8585
  42044a:	jne    0x420456
  42044c:	push   0xf89c8584
  420451:	jmp    0x420588
  420456:	mov    eax,DWORD PTR [ebp+0x20]
  420459:	cmp    eax,0xf89c8584
  42045e:	jne    0x42046a
  420460:	push   0xf89c85bb
  420465:	jmp    0x420588
  42046a:	mov    eax,DWORD PTR [ebp+0x20]
  42046d:	cmp    eax,0xf89c85bb
  420472:	jne    0x42047e
  420474:	push   0xf89c85ba
  420479:	jmp    0x420588
  42047e:	mov    eax,DWORD PTR [ebp+0x20]
  420481:	cmp    eax,0xf89c85ba
  420486:	jne    0x420492
  420488:	push   0xf89c85b9
  42048d:	jmp    0x420588
  420492:	mov    ecx,DWORD PTR [ebp+0x20]
  420495:	mov    eax,0xf89c85be
  42049a:	cmp    ecx,eax
  42049c:	jne    0x420558
  4204a2:	mov    eax,DWORD PTR [ebp+0x10]
  4204a5:	mov    DWORD PTR [esp+0xc],eax
  4204a9:	mov    eax,DWORD PTR [ebp+0x18]
  4204ac:	mov    DWORD PTR [esp+0x14],eax
  4204b0:	mov    eax,DWORD PTR [ebp+0xc]
  4204b3:	mov    DWORD PTR [esp+0x18],eax
  4204b7:	mov    eax,DWORD PTR [ebp+0x8]
  4204ba:	mov    DWORD PTR [esp+0x10],eax
  4204be:	mov    eax,DWORD PTR [esp+0x10]
  4204c2:	mov    ecx,DWORD PTR [esp+0x14]
  4204c6:	mov    edi,0x751089b
  4204cb:	xor    eax,edi
  4204cd:	mov    esi,0x3272e2
  4204d2:	add    eax,esi
  4204d4:	mov    DWORD PTR [ecx],eax
  4204d6:	mov    eax,DWORD PTR [esp+0xc]
  4204da:	mov    eax,DWORD PTR [eax+0x194]
  4204e0:	mov    ecx,DWORD PTR [eax]
  4204e2:	mov    eax,DWORD PTR [esp+0xc]
  4204e6:	mov    eax,DWORD PTR [eax+0x194]
  4204ec:	mov    eax,DWORD PTR [eax]
  4204ee:	add    eax,DWORD PTR [ecx+0x3c]
  4204f1:	mov    ecx,DWORD PTR [esp+0xc]
  4204f5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4204fb:	mov    ecx,DWORD PTR [ecx+0x14]
  4204fe:	push   0x4
  420500:	push   0x3000
  420505:	push   DWORD PTR [eax+0x50]
  420508:	push   0x0
  42050a:	call   ecx
  42050c:	mov    DWORD PTR [ebx],eax
  42050e:	mov    eax,DWORD PTR [esp+0x10]
  420512:	push   DWORD PTR [esp+0xc]
  420516:	xor    eax,edi
  420518:	add    eax,esi
  42051a:	mov    DWORD PTR [esp+0x20],eax
  42051e:	lea    eax,[esp+0x20]
  420522:	push   eax
  420523:	push   ebx
  420524:	push   DWORD PTR [esp+0x20]
  420528:	push   DWORD PTR [esp+0x28]
  42052c:	push   DWORD PTR [esp+0x24]
  420530:	call   0x41fef5
  420535:	mov    eax,DWORD PTR [esp+0x10]
  420539:	mov    ecx,DWORD PTR [ebx]
  42053b:	xor    eax,edi
  42053d:	add    eax,esi
  42053f:	cmp    ecx,eax
  420541:	je     0x42059f
  420543:	mov    eax,DWORD PTR [esp+0x18]
  420547:	mov    ecx,DWORD PTR [esp+0x14]
  42054b:	xor    eax,edi
  42054d:	add    eax,esi
  42054f:	imul   eax,DWORD PTR [esp+0x1c]
  420554:	mov    DWORD PTR [ecx],eax
  420556:	jmp    0x42059f
  420558:	mov    ecx,DWORD PTR [ebp+0x20]
  42055b:	cmp    ecx,0xf89c85b9
  420561:	jne    0x42056a
  420563:	push   0xf89c85b8
  420568:	jmp    0x420588
  42056a:	mov    ecx,DWORD PTR [ebp+0x20]
  42056d:	cmp    ecx,0xf89c85b8
  420573:	jne    0x42057c
  420575:	push   0xf89c85bf
  42057a:	jmp    0x420588
  42057c:	mov    ecx,DWORD PTR [ebp+0x20]
  42057f:	cmp    ecx,0xf89c85bf
  420585:	jne    0x42059f
  420587:	push   eax
  420588:	push   DWORD PTR [ebp+0x1c]
  42058b:	push   DWORD PTR [ebp+0x18]
  42058e:	push   ebx
  42058f:	push   DWORD PTR [ebp+0x10]
  420592:	push   DWORD PTR [ebp+0xc]
  420595:	push   DWORD PTR [ebp+0x8]
  420598:	call   0x420433
  42059d:	mov    DWORD PTR [ebx],eax
  42059f:	mov    eax,DWORD PTR [ebx]
  4205a1:	pop    edi
  4205a2:	pop    esi
  4205a3:	pop    ebx
  4205a4:	mov    esp,ebp
  4205a6:	pop    ebp
  4205a7:	ret    0x1c
  4205aa:	push   ebp
  4205ab:	mov    ebp,esp
  4205ad:	sub    esp,0xc
  4205b0:	mov    eax,0xf89c8585
  4205b5:	mov    DWORD PTR [ebp-0x8],eax
  4205b8:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  4205bf:	mov    ecx,DWORD PTR [ebp-0x8]
  4205c2:	xor    ecx,0x751089b
  4205c8:	add    ecx,0x3272e2
  4205ce:	mov    DWORD PTR [ebp-0x4],ecx
  4205d1:	mov    ecx,DWORD PTR [ebp+0xc]
  4205d4:	push   eax
  4205d5:	mov    DWORD PTR [ebp+0xc],ecx
  4205d8:	push   DWORD PTR [ebp+0xc]
  4205db:	lea    eax,[ebp-0x4]
  4205de:	push   DWORD PTR [ebp+0x8]
  4205e1:	push   eax
  4205e2:	push   DWORD PTR [ebp+0xc]
  4205e5:	push   DWORD PTR [ebp-0xc]
  4205e8:	push   DWORD PTR [ebp-0x8]
  4205eb:	call   0x420433
  4205f0:	mov    DWORD PTR [ebp-0x4],eax
  4205f3:	mov    eax,DWORD PTR [ebp-0x4]
  4205f6:	leave  
  4205f7:	ret    0x8
  4205fa:	jg     0x4205b0
  4205fc:	jge    0xf741c5d1
  420602:	add    ebp,DWORD PTR [eax-0xa]
  420605:	data16 cmp al,0x6d
  420608:	pusha  
  420609:	sub    DWORD PTR [eax],ecx
  42060b:	add    DWORD PTR [ecx],0x0
  42060e:	inc    BYTE PTR [ecx]
  420610:	add    BYTE PTR [eax],al
  420612:	mov    bh,0xf9
  420614:	fld    DWORD PTR [ebx+0x10]
  420617:	neg    DWORD PTR [eax-0x46]
  42061a:	aam    0xd
  42061c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42061d:	inc    ebx
  42061e:	adc    eax,0x7323204c
  420623:	loopne 0x420675
  420625:	mov    ch,0xcc
  420627:	mov    ds:0x2a2b0e6a,eax
  42062c:	ins    DWORD PTR es:[edi],dx
  42062d:	out    0xa9,eax
  42062f:	leave  
  420630:	je     0x4205d2
  420632:	(bad)  
  420633:	pop    edi
  420634:	push   ds
  420635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420636:	lock cs mov dl,0xeb
  42063a:	je     0x4205ec
  42063c:	(bad)  
  42063d:	mov    ebx,0x50130a3f
  420642:	xchg   ecx,eax
  420643:	popf   
  420644:	in     eax,0xda
  420646:	popf   
  420647:	(bad)  
  420649:	stos   DWORD PTR es:[edi],eax
  42064a:	cdq    
  42064b:	mov    cl,0x4a
  42064d:	mov    al,0x18
  42064f:	mov    al,ds:0x98e987ff
  420654:	call   0x89ad:0x9af1322c
  42065b:	rcr    DWORD PTR [ebp+0x36],0xa7
  42065f:	dec    esp
  420660:	sub    bl,BYTE PTR [edi+0x1e]
  420663:	jmp    0x5bb2:0x4025ff17
  42066a:	in     eax,0xb7
  42066c:	add    esi,DWORD PTR [edi+ebp*2+0x722428ee]
  420673:	jmp    0x420621
  420675:	xor    eax,0x42934389
  42067a:	ins    BYTE PTR es:[edi],dx
  42067b:	pop    ebx
  42067c:	dec    eax
  42067d:	push   ebx
  42067e:	outs   dx,DWORD PTR ds:[esi]
  42067f:	add    al,bl
  420681:	inc    ecx
  420682:	in     eax,dx
  420683:	xchg   BYTE PTR [esi],dl
  420685:	idiv   BYTE PTR [esi+esi*2-0x5077b7ed]
  42068c:	mov    esp,0x6b5f6c4a
  420691:	pop    ds
  420692:	jbe    0x420643
  420694:	inc    edx
  420695:	and    eax,0x33f26a7a
  42069a:	mov    ebx,0x77823ea6
  42069f:	retf   
  4206a0:	pop    esp
  4206a1:	loopne 0x4206fb
  4206a3:	mov    al,0x52
  4206a5:	retf   
  4206a6:	add    bh,BYTE PTR [edx]
  4206a8:	and    DWORD PTR [edx],ecx
  4206aa:	sbb    al,0xd4
  4206ac:	adc    BYTE PTR [edi+0x6a],bl
  4206af:	add    BYTE PTR [edx*1+0x682ed994],al
  4206b6:	arpl   dx,bx
  4206b8:	shl    dh,1
  4206ba:	xor    eax,DWORD PTR [ecx+0x6f]
  4206bd:	fwait
  4206be:	bound  ecx,QWORD PTR [edx-0x4c]
  4206c1:	sub    al,0xa4
  4206c3:	mov    ecx,0x15e774c2
  4206c8:	icebp  
  4206c9:	iret   
  4206ca:	test   al,0x4b
  4206cc:	test   al,0x20
  4206ce:	xor    bh,BYTE PTR [eax+0x5]
  4206d1:	lahf   
  4206d2:	inc    esp
  4206d3:	out    0x5e,al
  4206d5:	in     eax,dx
  4206d6:	sub    bh,0xb9
  4206d9:	clc    
  4206da:	adc    eax,0xebbd6163
  4206df:	xchg   BYTE PTR [edi],al
  4206e1:	call   0x26c9:0x6a6de5c1
  4206e8:	pop    ecx
  4206e9:	jmp    0x42071d
  4206eb:	cli    
  4206ec:	push   ecx
  4206ed:	leave  
  4206ee:	das    
  4206ef:	adc    ebx,ebp
  4206f1:	sub    eax,0x2adb6c57
  4206f6:	add    ebx,DWORD PTR [eax+ebp*1+0x12]
  4206fa:	fdivr  st(5),st
  4206fc:	mov    ch,0xf
  4206fe:	xchg   BYTE PTR [ecx+0x66],bl
  420701:	scas   al,BYTE PTR es:[edi]
  420702:	rcr    ebx,1
  420704:	shr    ebx,0x43
  420707:	mov    ?,WORD PTR [ebp+0x5c8bb75f]
  42070d:	jae    0x4206e0
  42070f:	in     al,0x35
  420711:	jp     0x420700
  420713:	xor    DWORD PTR [ebp-0x20],ebp
  420716:	rep stos DWORD PTR es:[edi],eax
  420718:	mov    ch,0xe3
  42071a:	or     edx,esi
  42071c:	pop    ebp
  42071d:	cmp    DWORD PTR [ecx+edx*2+0x5047befd],0xd2bcb50f
  420728:	addr16 cli 
  42072a:	mov    ds:0xcf0b1dea,al
  42072f:	(bad)  
  420730:	jp     0x420783
  420732:	pop    es
  420733:	jne    0x4207b4
  420735:	jg     0x420770
  420737:	je     0x42077b
  420739:	mov    bl,0x2f
  42073b:	or     eax,0x37ccb9c5
  420740:	shl    cl,1
  420742:	add    al,0x38
  420744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420745:	pop    eax
  420746:	inc    esp
  420747:	imul   esi,DWORD PTR [edi+0x512975d9],0xa1f4a19d
  420751:	out    0x4c,eax
  420753:	nop
  420754:	jmp    0x39a20912
  420759:	int3   
  42075a:	fnstsw WORD PTR [eax+0x43978370]
  420760:	retf   0xd431
  420763:	mov    ch,0x92
  420765:	ret    0xe52d
  420768:	pusha  
  420769:	jnp    0x4207d1
  42076b:	test   BYTE PTR [ebx],0x2c
  42076e:	sub    edi,DWORD PTR [eax+eiz*1+0x76f0c41c]
  420775:	adc    eax,0x6bf5ba50
  42077a:	fwait
  42077b:	pop    ss
  42077c:	jns    0x42073c
  42077e:	mov    bl,0x1c
  420780:	out    0xeb,eax
  420782:	mov    bl,0x17
  420784:	fnsave [edx-0x27]
  420787:	xchg   esp,eax
  420788:	into   
  420789:	mov    BYTE PTR es:[esi+0x18],ch
  42078d:	repz pop edx
  42078f:	pop    ebx
  420790:	enter  0x588b,0x52
  420794:	pop    eax
  420795:	and    esp,DWORD PTR [edi-0x5c]
  420798:	pop    esi
  420799:	mov    dl,0x5e
  42079b:	sub    BYTE PTR [esi+0x29baa95],ah
  4207a1:	hlt    
  4207a2:	and    esi,DWORD PTR [edx-0x11083c06]
  4207a8:	sar    cl,0x56
  4207ab:	sahf   
  4207ac:	fld    DWORD PTR [ebp+eax*2-0x30]
  4207b0:	(bad)  
  4207b1:	adc    al,0x93
  4207b3:	push   esp
  4207b4:	imul   esp,DWORD PTR [esi+edx*1],0x41eaf295
  4207bb:	xor    dh,BYTE PTR [esi+0x6d42a997]
  4207c1:	sub    dh,BYTE PTR [ebx]
  4207c3:	mov    ch,0x42
  4207c5:	repnz out 0xf9,al
  4207c8:	jo     0x420768
  4207ca:	imul   eax,DWORD PTR [esi-0xf0a325e],0xf40581f3
  4207d4:	dec    edx
  4207d5:	sub    ecx,edx
  4207d7:	(bad)  
  4207d8:	aad    0xf0
  4207da:	pop    edi
  4207db:	sti    
  4207dc:	ja     0x420840
  4207de:	push   ebp
  4207df:	mov    cl,0x37
  4207e1:	push   edx
  4207e2:	jo     0x4207d1
  4207e4:	dec    edi
  4207e5:	mov    edx,ebx
  4207e7:	cld    
  4207e8:	nop
  4207e9:	lea    edx,[ebx]
  4207eb:	push   edx
  4207ec:	ret    0xedb3
  4207ef:	retf   0x3766
  4207f2:	inc    edx
  4207f3:	pop    eax
  4207f4:	mov    bh,0x46
  4207f6:	push   es
  4207f7:	pop    edi
  4207f8:	ins    DWORD PTR es:[edi],dx
  4207f9:	lds    edi,FWORD PTR [ebx+0x6f2e55ca]
  4207ff:	add    eax,0x548abd9a
  420804:	mov    bh,0x50
  420806:	call   0x355e:0x38d5ba40
  42080d:	dec    eax
  42080e:	in     eax,dx
  42080f:	inc    BYTE PTR [eax]
	...
  420819:	add    BYTE PTR [edi+0x4c],dh
  42081c:	idiv   dh
  42081e:	(bad)  
  42081f:	(bad)  
  420820:	jg     0x4207ef
  420822:	mul    BYTE PTR [ebx-0x159fd003]
  420828:	out    dx,al
  420829:	popf   
  42082a:	push   es
  42082b:	test   DWORD PTR [ecx],eax
  42082d:	add    dh,bh
  42082f:	add    DWORD PTR [eax],eax
  420831:	add    BYTE PTR [esi-0x32],al
  420834:	pop    ds
  420835:	ins    BYTE PTR es:[edi],dx
  420836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420837:	jp     0x42085a
  420839:	xor    eax,0x30bd34b5
  42083e:	int    0x78
  420840:	mov    bh,0xa2
  420842:	jle    0x420882
  420844:	lea    edx,[ebp-0x3f]
  420847:	inc    ebx
  420848:	mov    WORD PTR [ecx-0x623f2a4],ds
  42084e:	enter  0xbc51,0x60
  420852:	arpl   bx,dx
  420854:	(bad)  
  420855:	jns    0x420885
  420857:	sub    al,0x1c
  420859:	jbe    0x3f4d9c0
  42085f:	lds    esi,FWORD PTR [ebx+0x50]
  420862:	sub    ecx,esi
  420864:	ror    DWORD PTR [edi+0x66bf338a],0x50
  42086b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42086c:	cs aas 
  42086e:	scas   al,BYTE PTR es:[edi]
  42086f:	pop    ss
  420870:	jno    0x4208a3
  420872:	pop    ebp
  420873:	aas    
  420874:	sbb    eax,0x4c82f8d4
  420879:	sub    eax,DWORD PTR [edx-0x1a]
  42087c:	push   ebp
  42087d:	add    eax,0x32729d39
  420882:	mov    al,0xa9
  420884:	call   0x8234dccd
  420889:	fcomi  st,st(7)
  42088b:	adc    BYTE PTR [esi-0x70df1ca2],cl
  420891:	adc    eax,0xb52f356e
  420896:	add    eax,0xe1dfb2d7
  42089b:	push   edx
  42089c:	nop
  42089d:	push   0xffffffce
  42089f:	fldenv [esi]
  4208a1:	jge    0x420907
  4208a3:	gs adc ebp,0xfffffff2
  4208a7:	or     DWORD PTR [eax],esp
  4208a9:	stos   BYTE PTR es:[edi],al
  4208aa:	add    DWORD PTR [edi+0x6d],esi
  4208ad:	test   al,0xd1
  4208af:	ror    ah,cl
  4208b1:	cwde   
  4208b2:	aam    0x96
  4208b4:	repz add BYTE PTR [ebx-0xc],bl
  4208b8:	cwde   
  4208b9:	mov    bh,0x3
  4208bb:	sub    eax,0x5681b02d
  4208c0:	dec    edi
  4208c1:	push   esp
  4208c2:	dec    esp
  4208c3:	jmp    0x4208cb
  4208c5:	jno    0x4208f3
  4208c7:	xlat   BYTE PTR ds:[ebx]
  4208c8:	jnp    0x4208c9
  4208ca:	aas    
  4208cb:	sub    al,0x90
  4208cd:	in     al,dx
  4208ce:	cmp    DWORD PTR [eax],ebx
  4208d0:	cld    
  4208d1:	mov    fs,WORD PTR [ebx-0x33986ddd]
  4208d7:	adc    eax,0xe793145
  4208dc:	ret    0x8f9
  4208df:	js     0x4208cf
  4208e1:	test   esi,edi
  4208e3:	(bad)  
  4208e4:	fidiv  WORD PTR [esi+ebp*1]
  4208e7:	ins    BYTE PTR es:[edi],dx
  4208e8:	mov    eax,ds:0x5e74ba72
  4208ed:	lods   eax,DWORD PTR ds:[esi]
  4208ee:	mov    al,0xee
  4208f0:	jg     0x4208e2
  4208f2:	xor    edi,0xfffffff2
  4208f5:	pusha  
  4208f6:	loopne 0x4208b9
  4208f8:	outs   dx,DWORD PTR ds:[esi]
  4208f9:	fwait
  4208fa:	jge    0x42093f
  4208fc:	xchg   DWORD PTR [edi+ecx*1],ecx
  4208ff:	nop
  420900:	jno    0x42093d
  420902:	xor    al,0xd3
  420904:	test   al,0x9
  420906:	mov    dl,0xf3
  420908:	xor    eax,0x52b145f3
  42090d:	loope  0x4208b1
  42090f:	or     DWORD PTR [esi+edx*1],eax
  420912:	add    ah,BYTE PTR [esp+edx*4-0x14]
  420916:	bound  edi,QWORD PTR ds:0xdc8f58ce
  42091c:	dec    edx
  42091d:	addr16 sbb edi,eax
  420920:	xchg   ebx,eax
  420921:	push   ebp
  420922:	fimul  WORD PTR [edi-0x621cd617]
  420928:	ret    0x13c0
  42092b:	std    
  42092c:	repnz dec esp
  42092e:	div    BYTE PTR [ecx+0x57]
  420931:	ret    0xfc8e
  420934:	js     0x420929
  420936:	ret    
  420937:	jne    0x420951
  420939:	into   
  42093a:	jmp    0xe050:0x3d383a07
  420941:	adc    bh,BYTE PTR [ebp+0x30]
  420944:	xchg   edi,eax
  420945:	int    0xae
  420947:	aam    0x6f
  420949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094a:	sub    bh,BYTE PTR [ecx+0x2ae5f2ae]
  420950:	sub    eax,0xb18a833c
  420955:	pushf  
  420956:	mov    BYTE PTR [esi],bl
  420958:	xor    ch,dh
  42095a:	cmc    
  42095b:	and    BYTE PTR [eax-0x1a],0xe8
  42095f:	loop   0x420923
  420961:	dec    eax
  420962:	jo     0x420946
  420964:	xor    DWORD PTR [esi*2+0x20e8a485],0xfffffff4
  42096c:	loopne 0x420942
  42096e:	daa    
  42096f:	sbb    DWORD PTR [eax+0x59028352],esp
  420975:	in     al,0xff
  420977:	mov    bh,0xf6
  420979:	push   esi
  42097a:	xlat   BYTE PTR ds:[ebx]
  42097b:	js     0x4209db
  42097d:	les    ebx,FWORD PTR [ecx+0x75]
  420980:	jmp    0x4209d4
  420982:	inc    eax
  420983:	mov    edx,0x1ac193bc
  420988:	ss dec ebx
  42098a:	les    esp,FWORD PTR [esi]
  42098c:	test   DWORD PTR [ebx+eiz*1+0x5a6d0a02],0x81a977a9
  420997:	out    dx,al
  420998:	retf   
  420999:	leave  
  42099a:	jge    0x4209b0
  42099c:	push   cs
  42099d:	in     al,dx
  42099e:	aad    0x77
  4209a0:	sti    
  4209a1:	(bad)  
  4209a2:	pop    ds
  4209a3:	dec    ecx
  4209a4:	ja     0x420945
  4209a6:	lea    esp,[ebx+0xdd67124]
  4209ac:	sti    
  4209ad:	pushf  
  4209ae:	mov    ah,0x98
  4209b0:	test   al,0x68
  4209b2:	sub    bl,BYTE PTR [esp+edi*1-0x80]
  4209b6:	pushf  
  4209b7:	fimul  WORD PTR [edi]
  4209b9:	(bad)  
  4209ba:	inc    edx
  4209bb:	jnp    0x4209ef
  4209bd:	xchg   edx,eax
  4209be:	push   eax
  4209bf:	and    BYTE PTR [edi+0x62],bh
  4209c2:	mov    cl,0x33
  4209c4:	mov    ebx,0x8f2343a0
  4209c9:	pop    ss
  4209ca:	push   ds
  4209cb:	or     DWORD PTR [edx-0x51],eax
  4209ce:	jnp    0x4209e9
  4209d0:	mov    ?,WORD PTR [ecx]
  4209d2:	pop    ss
  4209d3:	mov    ds:0xfea3885,al
  4209d8:	je     0x420976
  4209da:	jl     0x420a40
  4209dc:	repnz sahf 
  4209de:	and    BYTE PTR [edi+ebx*8],0x59
  4209e2:	popf   
  4209e3:	push   ebp
  4209e4:	shl    BYTE PTR [edi+0x21],0xfe
  4209e8:	clc    
  4209e9:	imul   ecx,DWORD PTR [edx-0x60cf06b2],0x7d
  4209f0:	frstor ds:0xae279c95
  4209f6:	jl     0x42098a
  4209f8:	das    
  4209f9:	mov    WORD PTR [ebp-0x4a712b13],ds
  4209ff:	jge    0x4209e9
  420a01:	out    0x25,eax
  420a03:	cmp    al,0x8
  420a05:	stc    
  420a06:	mov    ah,0x34
  420a08:	(bad)  
  420a09:	sub    eax,0x7d70f7ef
  420a0e:	xchg   esp,eax
  420a0f:	cmp    DWORD PTR [ebx-0x19],edx
  420a12:	(bad)  
  420a13:	(bad)  
  420a14:	imul   bh
  420a16:	mov    cl,0x3
  420a18:	out    0xad,al
  420a1a:	adc    edi,0xffffffb0
  420a1d:	cmp    eax,0x17eb37f0
  420a22:	add    ch,ah
  420a24:	push   0xc19aaa33
  420a29:	nop
  420a2a:	xchg   BYTE PTR [edx],ah
  420a2c:	out    0x5b,al
  420a2e:	outs   dx,BYTE PTR ds:[esi]
  420a2f:	add    BYTE PTR cs:[eax],al
	...
  420a3a:	pop    es
  420a3b:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  420a41:	pop    ds
  420a42:	(bad)  
  420a44:	std    
  420a45:	jg     0x4209fe
  420a47:	in     eax,dx
  420a48:	push   ebx
  420a49:	fild   WORD PTR [edi+eax*4]
  420a4c:	add    DWORD PTR [eax],eax
  420a4e:	inc    BYTE PTR [ecx]
  420a50:	add    BYTE PTR [eax],al
  420a52:	(bad)  [edx-0x56b78032]
  420a58:	pop    eax
  420a59:	(bad)  
  420a5b:	adc    esi,DWORD PTR [esp+eiz*4]
  420a5e:	mov    ebx,0x44384c9e
  420a63:	test   al,0xfa
  420a65:	shl    DWORD PTR [ecx-0xcc37e9a],1
  420a6b:	adc    DWORD PTR [ebp+0x8],esp
  420a6e:	or     edi,DWORD PTR [eax]
  420a70:	scas   al,BYTE PTR es:[edi]
  420a71:	ret    0x98ba
  420a74:	repnz or BYTE PTR [ebx],bh
  420a77:	shl    ecx,cl
  420a79:	jle    0x420ab5
  420a7b:	ins    DWORD PTR es:[edi],dx
  420a7c:	out    0x86,al
  420a7e:	dec    ecx
  420a7f:	mov    cs,WORD PTR [ebp+0x767e6858]
  420a85:	mov    dl,ah
  420a87:	push   edi
  420a88:	lods   al,BYTE PTR ds:[esi]
  420a89:	call   0x75c7:0x247075b2
  420a90:	je     0x420a51
  420a92:	cmp    DWORD PTR [edi],edx
  420a94:	cmp    eax,0x58b3f05a
  420a99:	push   ecx
  420a9a:	int3   
  420a9b:	ins    BYTE PTR es:[edi],dx
  420a9c:	xor    eax,0x16a90241
  420aa1:	jecxz  0x420abe
  420aa3:	inc    eax
  420aa4:	jb     0x420a90
  420aa6:	pop    ds
  420aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa8:	rcl    BYTE PTR [ebx+0x7612d56c],0x38
  420aaf:	and    ebp,DWORD PTR [ecx-0x79]
  420ab2:	sti    
  420ab3:	push   edi
  420ab4:	sbb    eax,0x9dd4bb6c
  420ab9:	lods   al,BYTE PTR ds:[esi]
  420aba:	(bad)  
  420abb:	imul   ecx,DWORD PTR [eax+0x7179a29],0xffffffcc
  420ac2:	mov    ah,0x65
  420ac4:	or     ch,BYTE PTR [eax-0x55e7b8e8]
  420aca:	imul   ecx,DWORD PTR [ecx+0x93e9a16],0xac019b6a
  420ad4:	sbb    BYTE PTR [ebx+ecx*8],0x9d
  420ad8:	inc    edi
  420ad9:	das    
  420ada:	mov    dh,BYTE PTR [ebp-0x27]
  420add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ade:	and    dl,dh
  420ae0:	sbb    cl,BYTE PTR [ebp-0x22b285ea]
  420ae6:	jb     0x420ae4
  420ae8:	mov    BYTE PTR [eax-0x73661fe8],bl
  420aee:	loopne 0x420b5f
  420af0:	sahf   
  420af1:	ins    DWORD PTR es:[edi],dx
  420af2:	xchg   esi,eax
  420af3:	dec    ebp
  420af4:	and    al,0x1f
  420af6:	cmp    al,0xd2
  420af8:	mov    al,ds:0xfe1f4dc6
  420afd:	and    dh,BYTE PTR [ecx+ecx*4]
  420b00:	and    DWORD PTR [ebp-0x3c137a16],0x78ceba7f
  420b0a:	mov    dl,0x5d
  420b0c:	(bad)  
  420b0d:	xchg   esp,eax
  420b0e:	inc    esp
  420b0f:	out    0x91,eax
  420b11:	aad    0x30
  420b13:	inc    ecx
  420b14:	pushf  
  420b15:	lods   al,BYTE PTR ds:[esi]
  420b16:	mov    dh,0xef
  420b18:	(bad)
  420b1c:	dec    edi
  420b1d:	or     al,0xb0
  420b1f:	xchg   edx,eax
  420b20:	jg     0x420b2c
  420b22:	push   0xa23f9ff4
  420b27:	leave  
  420b28:	je     0x420ba4
  420b2a:	loope  0x420ade
  420b2c:	bound  ebx,QWORD PTR [ebx]
  420b2e:	pop    es
  420b2f:	dec    eax
  420b30:	and    dh,0x1a
  420b33:	in     eax,dx
  420b34:	inc    edi
  420b35:	aad    0x17
  420b37:	mov    esp,DWORD PTR [ecx+0x2e]
  420b3a:	lahf   
  420b3b:	ss (bad) 
  420b3d:	and    DWORD PTR [esi-0x3],ebx
  420b40:	int3   
  420b41:	out    dx,eax
  420b42:	push   0x78edd986
  420b47:	(bad)  
  420b48:	sti    
  420b49:	and    al,0x7f
  420b4b:	sbb    BYTE PTR [edx+ebp*4+0x5a],dh
  420b4f:	dec    ecx
  420b50:	mov    dl,BYTE PTR [edx-0x5a]
  420b53:	mov    bl,0xfe
  420b55:	leave  
  420b56:	xchg   DWORD PTR [ebx-0x7f3e53f9],esp
  420b5c:	mov    ecx,0x1bc1c97c
  420b61:	mov    bl,0x51
  420b63:	pop    ebp
  420b64:	and    al,ah
  420b66:	ins    DWORD PTR es:[edi],dx
  420b67:	retf   0xa002
  420b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b6b:	or     DWORD PTR ds:0x87cb34b7,ebp
  420b71:	cmp    BYTE PTR [esi],ch
  420b73:	jnp    0x420afa
  420b75:	scas   eax,DWORD PTR es:[edi]
  420b76:	xor    eax,0x67fd1d40
  420b7b:	icebp  
  420b7c:	aam    0xc4
  420b7e:	sub    ecx,edx
  420b80:	inc    ebx
  420b81:	push   ebp
  420b82:	pop    ebp
  420b83:	ds pop ebx
  420b85:	cwde   
  420b86:	mov    edx,0xdae1ab48
  420b8b:	jl     0x420bfe
  420b8d:	and    cl,BYTE PTR [ebx+0x761e3fb8]
  420b93:	pop    edi
  420b94:	jae    0x420c15
  420b96:	je     0x420b44
  420b98:	push   edi
  420b99:	loope  0x420bfa
  420b9b:	pop    ds
  420b9c:	sub    edi,ebx
  420b9e:	fstp   QWORD PTR [edx-0x1f]
  420ba1:	mov    edx,0x10d7d374
  420ba6:	rcr    DWORD PTR [edi-0x4858edba],0x2f
  420bad:	add    BYTE PTR ds:0xfc5b4213,ch
  420bb3:	in     eax,dx
  420bb4:	lea    esi,[eax+0x7c]
  420bb7:	in     al,0x1c
  420bb9:	adc    al,0xc6
  420bbb:	cli    
  420bbc:	pop    es
  420bbd:	fwait
  420bbe:	sub    bl,dl
  420bc0:	rol    BYTE PTR [ebx-0x273cf9fa],0xe0
  420bc7:	dec    ebp
  420bc8:	and    al,0xbe
  420bca:	popa   
  420bcb:	(bad)  
  420bcc:	cld    
  420bcd:	call   0xcb74ad75
  420bd2:	sbb    BYTE PTR [eax],dh
  420bd4:	xchg   esp,edx
  420bd6:	and    ecx,ebp
  420bd8:	pop    edx
  420bd9:	ins    DWORD PTR es:[edi],dx
  420bda:	loope  0x420c19
  420bdc:	push   esp
  420bdd:	test   al,0x57
  420bdf:	push   edx
  420be0:	mov    al,BYTE PTR [edi]
  420be2:	cmp    esi,DWORD PTR [ebp+edi*1-0x3b661f9c]
  420be9:	inc    ebx
  420bea:	cmp    DWORD PTR [ebx+0x69],ecx
  420bed:	dec    eax
  420bee:	aaa    
  420bef:	mov    ebx,ecx
  420bf1:	cmp    BYTE PTR [eax-0x6d],cl
  420bf4:	mov    dl,0x63
  420bf6:	stos   BYTE PTR es:[edi],al
  420bf7:	xor    DWORD PTR ds:[eax-0x7],edx
  420bfb:	es push ss
  420bfd:	outs   dx,BYTE PTR ds:[esi]
  420bfe:	pop    esi
  420bff:	out    0x96,eax
  420c01:	popa   
  420c02:	dec    ecx
  420c03:	cmp    DWORD PTR [edx-0x2c],edi
  420c06:	hlt    
  420c07:	iret   
  420c08:	lods   eax,DWORD PTR ds:[esi]
  420c09:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  420c0b:	inc    esp
  420c0c:	iret   
  420c0d:	cli    
  420c0e:	push   es
  420c0f:	mov    bl,0x22
  420c11:	out    0x62,eax
  420c13:	(bad)  
  420c14:	jnp    0x420c87
  420c16:	pop    ss
  420c17:	push   0x31
  420c19:	test   BYTE PTR [ecx],cl
  420c1b:	jno    0x420c52
  420c1d:	and    eax,0xe1a1e5b8
  420c22:	and    bl,0x44
  420c25:	retf   
  420c26:	mov    ds:0xe9950ec0,eax
  420c2b:	jns    0x420c4b
  420c2d:	jge    0x420c2c
  420c2f:	jle    0x420c28
  420c31:	push   ds
  420c32:	jo     0x420bd5
  420c34:	or     al,0x4e
  420c36:	push   eax
  420c37:	call   0x8ae89a27
  420c3c:	cmp    bh,BYTE PTR [esi-0xf]
  420c3f:	sbb    bl,0xe5
  420c42:	fisubr WORD PTR [eax]
  420c44:	ins    DWORD PTR es:[edi],dx
  420c45:	iret   
  420c46:	or     DWORD PTR [esi-0x56],edx
  420c49:	std    
  420c4a:	jne    0x420bef
  420c4c:	sbb    ebx,DWORD PTR [eax+0x68]
  420c4f:	inc    edx
	...
  420c58:	add    BYTE PTR [eax],al
  420c5a:	push   ds
  420c5b:	add    al,0xa7
  420c5d:	(bad)  
  420c5e:	mov    edi,0x7bdd7ee7
  420c63:	int    0x75
  420c65:	mov    WORD PTR [eax],es
  420c67:	rcr    BYTE PTR [edx+esi*8],0x2
  420c6b:	mov    DWORD PTR [ecx],eax
  420c6d:	add    dh,bh
  420c6f:	add    DWORD PTR [eax],eax
  420c71:	add    BYTE PTR [esi-0x6d027ca1],dl
  420c77:	mov    al,BYTE PTR [edx]
  420c79:	iret   
  420c7a:	mov    DWORD PTR [ebp-0x2e1bc3d2],eax
  420c80:	add    edx,ebx
  420c82:	ins    BYTE PTR es:[edi],dx
  420c83:	mov    eax,ds:0xf428f3b1
  420c88:	cwde   
  420c89:	sub    DWORD PTR [esi],ebp
  420c8b:	lods   eax,DWORD PTR ds:[esi]
  420c8c:	ja     0x420d0a
  420c8e:	dec    ebp
  420c8f:	add    cl,BYTE PTR [ebx*1-0x4c57e7c7]
  420c96:	sahf   
  420c97:	add    ah,cl
  420c99:	stc    
  420c9a:	xchg   ebp,eax
  420c9b:	int    0x6b
  420c9d:	(bad)  
  420c9e:	jmp    0xe3f4bf30
  420ca3:	xchg   ebx,eax
  420ca4:	pusha  
  420ca5:	ins    DWORD PTR es:[edi],dx
  420ca6:	jae    0x420cef
  420ca8:	or     al,0x8f
  420caa:	adc    al,0x6e
  420cac:	xor    al,0xe9
  420cae:	jmp    0x420c62
  420cb0:	sub    al,BYTE PTR [edx-0x7643ccf5]
  420cb6:	add    eax,0x6bae8185
  420cbb:	ss xor eax,0x385515ed
  420cc1:	retf   0x4d65
  420cc4:	ret    0xe022
  420cc7:	inc    ebp
  420cc8:	stos   BYTE PTR es:[edi],al
  420cc9:	sbb    DWORD PTR [esi-0x6945b363],ebx
  420ccf:	loop   0x420c6a
  420cd1:	in     al,dx
  420cd2:	xchg   esp,eax
  420cd3:	push   edi
  420cd4:	jnp    0x420c56
  420cd6:	xor    al,0x9c
  420cd8:	repz jnp 0x420d58
  420cdb:	call   0xbb5cd2c9
  420ce0:	inc    eax
  420ce1:	aas    
  420ce2:	or     BYTE PTR [ecx+ebx*4],dh
  420ce5:	hlt    
  420ce6:	jmp    0x5cb4:0x2ebafdfb
  420ced:	inc    ebx
  420cee:	fcom   DWORD PTR [edx+0x3217e0e8]
  420cf4:	ret    
  420cf5:	fs mov ecx,0x12f5ba59
  420cfb:	stos   BYTE PTR es:[edi],al
  420cfc:	div    DWORD PTR [ebx+0x436d270b]
  420d02:	sub    BYTE PTR [edi+esi*1-0x4e21f0e6],0x5b
  420d0a:	stos   BYTE PTR es:[edi],al
  420d0b:	mov    DWORD PTR [edx+0x49],eax
  420d0e:	pop    esp
  420d0f:	or     BYTE PTR [edx-0x60],ch
  420d12:	mov    ebx,0xbb1f6fe3
  420d17:	xor    dh,BYTE PTR [ecx]
  420d19:	cmp    DWORD PTR [edi+0x260f6598],eax
  420d1f:	popa   
  420d20:	jnp    0x420ce7
  420d22:	push   eax
  420d23:	test   eax,0xff63ee8
  420d28:	sub    BYTE PTR [eax-0x6f],cl
  420d2b:	push   edi
  420d2c:	mov    bh,0x11
  420d2e:	dec    ecx
  420d2f:	fwait
  420d30:	mov    al,ds:0xa80907cc
  420d35:	pop    ebx
  420d36:	iret   
  420d37:	js     0x420d7d
  420d39:	and    eax,edi
  420d3b:	mov    bh,0xce
  420d3d:	sub    BYTE PTR ds:0xb62f99a2,ah
  420d43:	push   ebp
  420d44:	jl     0x420d91
  420d46:	xlat   BYTE PTR ds:[ebx]
  420d47:	ret    0x8b5f
  420d4a:	or     BYTE PTR [edi+0x30],ch
  420d4d:	outs   dx,BYTE PTR ds:[esi]
  420d4e:	sbb    DWORD PTR [eax+0x5d],ebx
  420d51:	aas    
  420d52:	cmp    BYTE PTR ds:0x891e4a1e,al
  420d58:	ror    DWORD PTR [edx],0x8a
  420d5b:	rol    BYTE PTR [esi],0xb8
  420d5e:	fcomp  QWORD PTR [ebp-0x6ad9d7d]
  420d64:	mov    ebp,gs
  420d66:	and    dl,0xc5
  420d69:	pusha  
  420d6a:	and    edx,edi
  420d6c:	mov    gs,WORD PTR [esi-0x2e93fc7b]
  420d72:	add    DWORD PTR [eax+0x32408bf1],eax
  420d78:	mov    esi,fs
  420d7a:	sbb    eax,0xcd5e8e6
  420d7f:	es call 0x34d9:0x17586308
  420d87:	jmp    0x420dcd
  420d89:	push   eax
  420d8a:	adc    al,0xb
  420d8d:	xor    BYTE PTR [ebp-0x3d],al
  420d90:	(bad)  
  420d91:	jmp    0x88c6515
  420d96:	repnz iret 
  420d98:	lods   eax,DWORD PTR ds:[esi]
  420d99:	sub    al,0xcf
  420d9b:	sub    ah,BYTE PTR ds:0x5491d45e
  420da1:	xor    eax,0x53c7b0f6
  420da6:	pop    ebp
  420da7:	(bad)  
  420da9:	test   DWORD PTR [ebx+0x2f4bbdf5],ecx
  420daf:	adc    eax,DWORD PTR [edi+0x50]
  420db2:	nop
  420db3:	imul   edx,DWORD PTR [edi-0x2a],0xffffffba
  420db7:	out    dx,eax
  420db8:	add    al,0x11
  420dba:	rcr    eax,1
  420dbc:	lea    esi,[esi+0x63da054c]
  420dc2:	mov    esp,ebp
  420dc4:	mov    bh,0xa
  420dc6:	(bad)  
  420dc7:	fstp   DWORD PTR [ecx+0x83778a5]
  420dcd:	push   0xffffff8a
  420dcf:	test   DWORD PTR ds:0x90c2c6f0,esp
  420dd5:	mov    eax,ds:0xaa3ad4c8
  420dda:	cmp    esi,DWORD PTR [ebx]
  420ddc:	or     bl,BYTE PTR [esp+ebp*2+0x13]
  420de0:	out    0xdb,eax
  420de2:	loop   0x420d95
  420de4:	cmp    dl,0xaa
  420de7:	scas   al,BYTE PTR es:[edi]
  420de8:	outs   dx,DWORD PTR ds:[esi]
  420de9:	jg     0x420e5d
  420deb:	imul   esp,esi,0x10
  420dee:	or     al,0x24
  420df0:	fdivr  QWORD PTR [edi-0x2e]
  420df3:	pop    edi
  420df4:	ins    BYTE PTR es:[edi],dx
  420df5:	mov    edi,edx
  420df7:	cli    
  420df8:	push   cs
  420df9:	stos   DWORD PTR es:[edi],eax
  420dfa:	loopne 0x420d7e
  420dfc:	imul   esp,DWORD PTR [edx],0xffffffec
  420dff:	push   0x5c
  420e01:	lock cdq 
  420e03:	pushf  
  420e04:	cs jmp 0x420dbb
  420e07:	ds inc esi
  420e09:	xor    ebx,DWORD PTR [edi]
  420e0b:	int    0x4f
  420e0d:	mov    eax,0x6780787b
  420e12:	or     eax,DWORD PTR [eax+0x6b782008]
  420e18:	ss loopne 0x420e3a
  420e1b:	pop    ds
  420e1c:	cs (bad) 
  420e1e:	jne    0x420e6f
  420e20:	shl    DWORD PTR [eax-0x19],0xea
  420e24:	js     0x420dd8
  420e26:	xchg   ebx,eax
  420e27:	aam    0x9c
  420e29:	stos   BYTE PTR es:[edi],al
  420e2a:	cmp    eax,0xdc15069f
  420e2f:	pop    edx
  420e30:	push   ebx
  420e31:	add    esp,esp
  420e33:	mov    ecx,0xf1b73efd
  420e39:	sub    eax,0xf1131289
  420e3e:	(bad)  
  420e3f:	shl    dh,0x9a
  420e42:	(bad)  
  420e43:	cwde   
  420e44:	inc    edx
  420e45:	(bad)  
  420e46:	fidiv  WORD PTR [esi-0x361591ad]
  420e4c:	xchg   edi,eax
  420e4d:	rcl    BYTE PTR [esi+0x5],0x76
  420e51:	mov    bh,0x9f
  420e53:	xor    esp,esi
  420e55:	and    al,dh
  420e57:	test   al,0xfa
  420e59:	inc    ebx
  420e5a:	cdq    
  420e5b:	cmc    
  420e5c:	call   DWORD PTR [esi]
  420e5e:	hlt    
  420e5f:	xchg   edi,eax
  420e60:	mov    es,esi
  420e62:	adc    eax,0x3b0a083d
  420e67:	jmp    0x420e76
  420e69:	mov    ah,0xc6
  420e6b:	push   esi
  420e6c:	test   DWORD PTR [ecx-0x30],0x29
  420e73:	add    BYTE PTR [eax],al
  420e75:	add    BYTE PTR [eax],al
  420e77:	add    BYTE PTR [eax],al
  420e79:	add    BYTE PTR [eax-0x77],bh
  420e7c:	hlt    
  420e7d:	mov    al,0xf5
  420e7f:	std    
  420e80:	jl     0x420e4b
  420e82:	xor    dl,0x39
  420e85:	jg     0x420eeb
  420e87:	sbb    DWORD PTR [eax-0x19],ebx
  420e8a:	add    BYTE PTR [ebx+0x1fe0001],cl
  420e90:	add    BYTE PTR [eax],al
  420e92:	sub    al,BYTE PTR [ebx-0x3c]
  420e95:	mov    edi,0xe2ae3e54
  420e9a:	cs xchg edi,eax
  420e9c:	mov    esp,0x64a6c55f
  420ea1:	jl     0x420e86
  420ea3:	mov    ecx,0x3d8d67b1
  420ea8:	imul   ebp,DWORD PTR [ebp+0x1d],0x46
  420eac:	mov    eax,0x87c7228f
  420eb1:	aad    0x36
  420eb3:	xor    DWORD PTR [edx],esp
  420eb5:	xor    al,0xbf
  420eb7:	pushf  
  420eb8:	sub    ah,BYTE PTR [edi-0x7]
  420ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ebc:	xchg   esi,eax
  420ebd:	xchg   ecx,eax
  420ebe:	push   esi
  420ebf:	pop    es
  420ec0:	or     BYTE PTR [ebx+0x3f],0xd9
  420ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec5:	adc    ebx,DWORD PTR ds:0xa479297e
  420ecb:	inc    BYTE PTR ds:0x707bf91f
  420ed1:	test   eax,0xd3911dac
  420ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed7:	(bad)  
  420ed8:	or     ah,dh
  420eda:	ja     0x420f29
  420edc:	and    ecx,DWORD PTR [edx]
  420ede:	mov    al,0xc0
  420ee0:	sub    eax,0x341ccf61
  420ee5:	or     al,0x39
  420ee7:	jg     0x420f12
  420ee9:	pop    ecx
  420eea:	iret   
  420eeb:	cmp    ah,BYTE PTR [esi+0x41]
  420eee:	sbb    eax,0x581e8020
  420ef3:	outs   dx,DWORD PTR ds:[esi]
  420ef4:	xlat   BYTE PTR ds:[ebx]
  420ef5:	in     al,dx
  420ef6:	enter  0x1997,0x88
  420efa:	lods   eax,DWORD PTR ds:[esi]
  420efb:	ret    
  420efc:	retf   
  420efd:	loopne 0x420ef2
  420eff:	imul   edx,DWORD PTR [edx],0xe3d3a32b
  420f05:	imul   edi,DWORD PTR [ecx+0x36],0xc22904b3
  420f0c:	pop    edx
  420f0d:	fiadd  DWORD PTR [ecx+ebx*8-0x4dbeb3e4]
  420f14:	pop    ds
  420f15:	fsub   DWORD PTR ds:0xc70e3142
  420f1b:	cmp    BYTE PTR [ebx+0x799c1957],dl
  420f21:	dec    ecx
  420f22:	sub    al,0x12
  420f24:	ja     0x420f67
  420f26:	les    esi,FWORD PTR [eax+esi*1-0x79]
  420f2a:	(bad)  
  420f2d:	add    eax,0x9c270ec2
  420f32:	mov    dl,0x5c
  420f34:	retf   
  420f35:	daa    
  420f36:	dec    ebx
  420f37:	push   0x25
  420f39:	inc    edx
  420f3a:	test   eax,0xeace1daa
  420f3f:	sub    edi,ebx
  420f41:	push   esi
  420f42:	adc    DWORD PTR [ebp-0x35],0x42
  420f46:	ja     0x420ec9
  420f48:	pop    edx
  420f49:	mov    ebp,0x407a5ce1
  420f4e:	pushf  
  420f4f:	std    
  420f50:	mov    ebx,0x255990da
  420f55:	dec    esp
  420f56:	mov    al,ds:0x5245cf6a
  420f5b:	out    0x81,al
  420f5d:	xchg   edi,eax
  420f5e:	adc    DWORD PTR [ecx],esi
  420f60:	loope  0x420f82
  420f62:	stos   DWORD PTR es:[edi],eax
  420f63:	cmc    
  420f64:	sbb    al,0xd4
  420f66:	ja     0x420f34
  420f68:	das    
  420f69:	outs   dx,DWORD PTR ds:[esi]
  420f6a:	sbb    BYTE PTR [edx+0xd],dh
  420f6d:	mov    BYTE PTR [ebp-0x3349afa3],dl
  420f73:	test   BYTE PTR [ecx+0x49],ch
  420f76:	pop    edx
  420f77:	popa   
  420f78:	mov    al,ds:0xee8f7e62
  420f7d:	sub    DWORD PTR [ecx-0x6a],edi
  420f80:	loope  0x420fe0
  420f82:	pusha  
  420f83:	popf   
  420f84:	xchg   edi,eax
  420f85:	std    
  420f86:	pop    ebx
  420f87:	jg     0x420f77
  420f89:	jmp    0x13948bdc
  420f8e:	outs   dx,BYTE PTR ds:[esi]
  420f8f:	ret    0x9772
  420f92:	mov    esp,0xecbdbd76
  420f97:	nop
  420f98:	out    0xb4,eax
  420f9a:	adc    ch,bh
  420f9c:	rcl    DWORD PTR [edi+0xfbce341],cl
  420fa2:	jmp    0x420f36
  420fa4:	pop    ecx
  420fa5:	xchg   ebx,eax
  420fa6:	push   eax
  420fa7:	test   DWORD PTR [edx+0x66ba86c3],edi
  420fad:	lods   al,BYTE PTR ds:[esi]
  420fae:	push   esi
  420faf:	sub    BYTE PTR [ebx],ah
  420fb1:	push   esi
  420fb2:	out    0x48,al
  420fb4:	pop    ds
  420fb5:	inc    ebx
  420fb6:	loop   0x420fc6
  420fb8:	pop    ecx
  420fb9:	mov    edx,DWORD PTR [ebx-0x6c]
  420fbc:	cs xor dl,dh
  420fbf:	sub    ch,BYTE PTR [ecx]
  420fc1:	inc    edx
  420fc2:	adc    eax,0xd36d1b7e
  420fc7:	arpl   WORD PTR ds:0xce343604,ax
  420fcd:	das    
  420fce:	hlt    
  420fcf:	into   
  420fd0:	jno    0x421009
  420fd2:	out    0x5a,eax
  420fd4:	outs   dx,DWORD PTR ds:[esi]
  420fd5:	ror    DWORD PTR [ebx+0x72],1
  420fd8:	jb     0x421041
  420fda:	or     cl,0xe7
  420fdd:	push   es
  420fde:	sub    edi,DWORD PTR [eax+ecx*1+0x37]
  420fe2:	in     al,0x38
  420fe4:	mov    ah,0x58
  420fe6:	mov    dh,0x20
  420fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe9:	test   al,0xfd
  420feb:	jg     0x421020
  420fed:	adc    edi,esi
  420fef:	xchg   ebp,eax
  420ff0:	call   0xebde:0x98fc251f
  420ff7:	xchg   esi,eax
  420ff8:	retf   0xcb9
  420ffb:	addr16 cmc 
  420ffd:	pop    ebp
  420ffe:	or     eax,0xc769b910
  421003:	in     al,dx
  421004:	ins    DWORD PTR es:[edi],dx
  421005:	jno    0x420ffa
  421007:	push   esi
  421008:	and    al,0x58
  42100a:	cwde   
  42100b:	inc    eax
  42100c:	cmp    al,0xc5
  42100e:	adc    BYTE PTR [edi+0x2c],bl
  421011:	cdq    
  421012:	add    al,0x64
  421014:	sbb    al,0x56
  421016:	inc    esp
  421017:	addr16 jb 0x420ffb
  42101a:	lock dec esp
  42101c:	add    al,0xf6
  42101e:	add    bh,cl
  421020:	jno    0x42107e
  421022:	imul   eax
  421024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421025:	add    ebp,DWORD PTR [ecx+0x65c4fd57]
  42102b:	aaa    
  42102c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42102d:	dec    ebp
  42102e:	pop    edx
  42102f:	push   ds
  421030:	sub    DWORD PTR [ecx-0x1358620f],esi
  421036:	dec    eax
  421037:	stc    
  421038:	test   eax,0x5a1a037
  42103d:	(bad)  
  42103e:	leave  
  42103f:	into   
  421040:	jno    0x42101e
  421042:	dec    edx
  421043:	sbb    BYTE PTR [eax+0x3],ah
  421046:	sbb    BYTE PTR [ebx],bh
  421048:	push   ebp
  421049:	xor    esi,0x50
  42104c:	sub    ebp,DWORD PTR [edx]
  42104e:	mov    bh,0xb
  421050:	mov    WORD PTR [esi+0x73a153bb],cs
  421056:	aam    0x17
  421058:	push   cs
  421059:	fisub  WORD PTR [ebp-0x6a]
  42105c:	dec    eax
  42105d:	pop    edx
  42105e:	mov    ebp,DWORD PTR [ebp-0x10]
  421061:	sub    BYTE PTR [eax+edx*2-0x24489956],dh
  421068:	sub    DWORD PTR [ebp+0x20a6ed3],0x68
  42106f:	dec    ecx
  421070:	call   0xc0b3:0x74216cb5
  421077:	out    dx,eax
  421078:	stc    
  421079:	ss mov edi,0x8bcc40a
  42107f:	repnz mov dh,0x6b
  421082:	sahf   
  421083:	aad    0x6d
  421085:	fld    QWORD PTR [edx+eiz*2-0x754cc4c7]
  42108c:	fsubp  st(5),st
  42108e:	test   eax,0xd3
  421093:	add    BYTE PTR [eax],al
  421095:	add    BYTE PTR [eax],al
  421097:	add    BYTE PTR [eax],al
  421099:	add    BYTE PTR [edx+ecx*4-0x49],bl
  42109d:	imul   esi,edi,0x7f
  4210a0:	fdivr  QWORD PTR [edi+0x2b60ebfc]
  4210a6:	xor    BYTE PTR [ebx],al
  4210a8:	sub    esp,0x18cfe
  4210ae:	inc    BYTE PTR [ecx]
  4210b0:	add    BYTE PTR [eax],al
  4210b2:	not    BYTE PTR [edi+0x4]
  4210b5:	jge    0x4210de
  4210b7:	ds aad 0x77
  4210ba:	pop    eax
  4210bb:	cmp    BYTE PTR [edi+0x5fafab33],ch
  4210c1:	rcr    DWORD PTR [ecx+0x51b79d7a],0x2b
  4210c8:	jmp    0x1e27f955
  4210cd:	test   DWORD PTR [eax],0xf6e9a1b
  4210d3:	cmp    ah,BYTE PTR [ebx]
  4210d5:	mov    ebp,0x5bee7a2d
  4210da:	call   0xa4ff:0xdf18fe8
  4210e1:	or     eax,0x16613778
  4210e6:	sahf   
  4210e7:	pop    ss
  4210e8:	fwait
  4210e9:	addr16 push edi
  4210eb:	mov    esi,DWORD PTR [ebx-0x5f]
  4210ee:	das    
  4210ef:	cli    
  4210f0:	xor    DWORD PTR [eax-0x21],edi
  4210f3:	sbb    ah,cl
  4210f5:	pop    ecx
  4210f6:	sbb    eax,0xacc79754
  4210fb:	cmp    eax,0x6a22c689
  421100:	xor    al,BYTE PTR [esp+ecx*2+0x45]
  421104:	fcomp  DWORD PTR [eax]
  421106:	dec    edx
  421107:	inc    ebp
  421108:	pop    edx
  421109:	enter  0xd13e,0xb8
  42110d:	cmp    ah,ah
  42110f:	xor    cl,BYTE PTR [edx+0x1da5ae9e]
  421115:	outs   dx,DWORD PTR ds:[esi]
  421116:	imul   eax,DWORD PTR [ebx+0x44d8e26c],0x8a9b64d5
  421120:	fdiv   DWORD PTR [eax]
  421122:	sbb    ah,BYTE PTR [ebx]
  421124:	(bad)  
  421125:	(bad)  
  421126:	fistp  DWORD PTR [edx-0x7f]
  421129:	mov    DWORD PTR [ebp+0x15],ebx
  42112c:	lods   al,BYTE PTR ds:[esi]
  42112d:	ins    DWORD PTR es:[edi],dx
  42112e:	add    esi,DWORD PTR [ebx]
  421130:	jns    0x42115b
  421132:	int    0xf4
  421134:	shr    DWORD PTR [edi+0x3514593f],0x81
  42113b:	sbb    ebp,esp
  42113d:	sbb    edi,DWORD PTR [eax-0x3a]
  421140:	jbe    0x4210d6
  421142:	fistp  DWORD PTR [edx+0x5f5e9688]
  421148:	dec    ecx
  421149:	xchg   DWORD PTR [edi],edx
  42114b:	push   0x11
  42114d:	or     esi,DWORD PTR [ebx+0x4a]
  421150:	retf   0x9dd7
  421153:	xchg   DWORD PTR [ebx-0xb],eax
  421156:	and    ah,BYTE PTR [ebx]
  421158:	leave  
  421159:	out    dx,al
  42115a:	adc    al,0x8f
  42115c:	shl    bh,0x3a
  42115f:	imul   ecx,DWORD PTR [edx-0x43],0xeb7faeea
  421166:	xlat   BYTE PTR ds:[ebx]
  421167:	push   0xe0720713
  42116c:	loop   0x42110d
  42116e:	in     eax,dx
  42116f:	fs in  al,dx
  421171:	adc    ah,dl
  421173:	inc    esi
  421174:	mov    al,0xd5
  421176:	mov    dh,0xe9
  421178:	ds dec ebx
  42117a:	jnp    0x4211a7
  42117c:	push   esp
  42117d:	pushf  
  42117e:	enter  0x7633,0xc3
  421182:	stc    
  421183:	inc    edx
  421184:	push   es
  421185:	not    ch
  421187:	inc    esi
  421188:	aad    0xde
  42118a:	jmp    0x18da4f9
  42118f:	mov    eax,0xa2eeacbf
  421194:	adc    eax,0xd3a838
  421199:	and    al,dl
  42119b:	jmp    0x4211e4
  42119d:	cwde   
  42119e:	cmp    ah,bl
  4211a0:	push   ebp
  4211a1:	mov    ecx,0x198a9589
  4211a6:	repz rcl BYTE PTR [eax],cl
  4211a9:	lods   eax,DWORD PTR ds:[esi]
  4211aa:	inc    esp
  4211ab:	and    BYTE PTR [esi-0x76],ah
  4211ae:	mov    edx,0xcf64da6a
  4211b3:	pop    sp
  4211b5:	fld    TBYTE PTR [ebp+0x2]
  4211b8:	std    
  4211b9:	add    dl,BYTE PTR [ebp+0x4b844f4]
  4211bf:	fstp   QWORD PTR [edx-0x30]
  4211c2:	icebp  
  4211c3:	out    0x2a,eax
  4211c5:	icebp  
  4211c6:	aam    0xb7
  4211c8:	push   0xffffff8c
  4211ca:	pop    esi
  4211cb:	cmp    BYTE PTR [ebx],cl
  4211cd:	xor    BYTE PTR [ecx-0x27],ah
  4211d0:	xchg   edx,eax
  4211d1:	lods   al,BYTE PTR ds:[esi]
  4211d2:	mov    bh,0xf3
  4211d4:	sbb    dl,al
  4211d6:	fisubr WORD PTR [edi-0x7b9d59dc]
  4211dc:	ret    0x91c1
  4211df:	xor    al,0x4a
  4211e1:	cmp    dh,cl
  4211e3:	pop    edx
  4211e4:	dec    edx
  4211e5:	or     BYTE PTR [esi+edx*4],ch
  4211e8:	out    dx,al
  4211e9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4211eb:	aaa    
  4211ec:	xor    eax,DWORD PTR [ebx]
  4211ee:	jae    0x42124d
  4211f0:	mov    ah,0xe5
  4211f2:	aaa    
  4211f3:	xchg   edx,eax
  4211f4:	sub    BYTE PTR [ecx],bl
  4211f6:	add    BYTE PTR [esi],cl
  4211f8:	das    
  4211f9:	fnstenv [edx]
  4211fb:	pop    esp
  4211fc:	stos   BYTE PTR es:[edi],al
  4211fd:	mov    dh,0x85
  4211ff:	or     eax,0x952c426a
  421205:	dec    ecx
  421206:	jno    0x421252
  421208:	cli    
  421209:	or     DWORD PTR [eax-0x38],0x6b85a2a7
  421210:	shl    edx,1
  421212:	popa   
  421213:	sub    eax,0xcf4d4bc0
  421218:	pop    es
  421219:	jbe    0x4211d1
  42121b:	inc    esp
  42121c:	push   es
  42121d:	loope  0x421288
  42121f:	fsub   st,st(1)
  421221:	and    al,0xaa
  421223:	cdq    
  421224:	push   es
  421225:	and    bh,BYTE PTR [ecx+0x6ad11431]
  42122b:	and    eax,0x1461f4ea
  421230:	inc    ecx
  421231:	mov    esp,0xcacf0dd7
  421236:	sub    BYTE PTR [edx-0x76],al
  421239:	retf   
  42123a:	xlat   BYTE PTR ds:[ebx]
  42123b:	outs   dx,BYTE PTR ds:[esi]
  42123c:	push   ss
  42123d:	jge    0x421257
  42123f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421240:	das    
  421241:	jle    0x42127e
  421243:	mov    bl,0x36
  421245:	xchg   ecx,eax
  421246:	push   esi
  421247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421248:	sub    eax,0x945ae7cd
  42124d:	call   0xbc9d:0xe42988bd
  421254:	out    dx,eax
  421255:	fucom  st(3)
  421257:	mov    ah,0xbe
  421259:	cs adc DWORD PTR gs:[edx+ebx*8-0x45c7270],ebp
  421262:	add    al,0xd2
  421264:	mov    al,0x9c
  421266:	xor    DWORD PTR [ebp+0x31],esi
  421269:	test   DWORD PTR [ebp+0x21],0x9bf7abed
  421270:	mov    ecx,0xfaa53c58
  421275:	inc    edx
  421276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421277:	mov    dl,0x19
  421279:	push   ss
  42127a:	adc    al,0x9
  42127c:	mov    al,0xfb
  42127e:	jns    0x42126a
  421280:	push   0xad1566e1
  421285:	fs out 0xad,al
  421288:	xchg   edx,eax
  421289:	push   0xffffffe8
  42128b:	ins    BYTE PTR es:[edi],dx
  42128c:	dec    edi
  42128d:	dec    ecx
  42128e:	pop    eax
  42128f:	call   0x4ba1c552
  421294:	mov    ebp,0x60559932
  421299:	cmp    DWORD PTR [ebx-0x118eedba],ebx
  42129f:	out    dx,al
  4212a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a1:	icebp  
  4212a2:	fadd   st(7),st
  4212a4:	call   0xeb734a47
  4212a9:	(bad)  
  4212aa:	ja     0x421299
  4212ac:	shr    BYTE PTR [edi],0xc9
  4212af:	fadd   DWORD PTR [eax]
	...
  4212b9:	add    BYTE PTR [edi-0x402578e6],ah
  4212bf:	(bad)  
  4212c1:	jg     0x42132a
  4212c3:	pop    esp
  4212c4:	fstp   DWORD PTR [ecx-0x6b058c25]
  4212ca:	cld    
  4212cb:	mov    es,WORD PTR [ecx]
  4212cd:	add    dh,bh
  4212cf:	add    DWORD PTR [eax],eax
  4212d1:	add    BYTE PTR [esi-0x24],dl
  4212d4:	cmp    eax,0x55e5e918
  4212d9:	jp     0x42131a
  4212db:	fwait
  4212dc:	dec    ebx
  4212dd:	inc    esp
  4212de:	enter  0x4d71,0x13
  4212e2:	fisubr WORD PTR [edx]
  4212e4:	mov    eax,ds:0x8d0f13c3
  4212e9:	nop
  4212ea:	js     0x4212a8
  4212ec:	adc    al,0xfc
  4212ee:	lds    ecx,FWORD PTR [ebx+0x53]
  4212f1:	in     al,dx
  4212f2:	pop    esi
  4212f3:	mov    dh,0x3d
  4212f5:	(bad)  
  4212f6:	mov    bh,0x3d
  4212f8:	or     eax,0x1da4c28e
  4212fd:	test   BYTE PTR [ecx+ebx*1-0x68],cl
  421301:	into   
  421302:	call   0xd42f:0xdc2d31b0
  421309:	adc    dl,cl
  42130b:	daa    
  42130c:	xchg   esi,eax
  42130d:	and    ecx,DWORD PTR [ebx-0x5eec84f9]
  421313:	sbb    BYTE PTR [ecx],dh
  421315:	xchg   edi,eax
  421316:	loop   0x421331
  421318:	ss cs jno 0x4212fc
  42131c:	inc    edi
  42131d:	xlat   BYTE PTR ds:[ebx]
  42131e:	inc    ecx
  42131f:	jl     0x421386
  421321:	loopne 0x4212e6
  421323:	and    BYTE PTR [ebp+0xc],cl
  421326:	mov    bl,BYTE PTR [ecx]
  421328:	dec    esi
  421329:	and    bl,bl
  42132b:	jnp    0x421321
  42132d:	jle    0x4212b7
  42132f:	mov    al,0x9e
  421331:	sub    al,0x67
  421334:	aaa    
  421335:	mov    cs,WORD PTR [ebp-0x6fb9e72a]
  42133b:	call   0xd921:0x63e8bd04
  421342:	and    DWORD PTR [eax],ebp
  421344:	inc    edx
  421345:	jle    0x42133b
  421347:	ret    0x4707
  42134a:	mov    cl,BYTE PTR [edi+0x563d429e]
  421350:	cld    
  421351:	mov    ds:0xefdf929d,eax
  421356:	and    DWORD PTR [edx+ebx*2+0x543c0d07],esp
  42135d:	je     0x4213ad
  42135f:	add    eax,0xf311998b
  421364:	dec    eax
  421365:	push   0x7c
  421367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421368:	push   0xffffff9a
  42136a:	mov    dl,0xa6
  42136c:	or     DWORD PTR [edi+0x77],ecx
  42136f:	test   DWORD PTR [ecx*1-0x57cbbc82],esi
  421376:	je     0x4213e5
  421378:	idiv   DWORD PTR [edi-0x10a8ed98]
  42137e:	out    dx,eax
  42137f:	jecxz  0x4213c1
  421381:	cmp    al,0xda
  421383:	cld    
  421384:	test   bh,cl
  421386:	xor    eax,edi
  421388:	sub    al,0x9
  42138a:	in     eax,0x7b
  42138c:	inc    ecx
  42138d:	rcl    BYTE PTR [ebx-0x667d5033],cl
  421393:	adc    esp,DWORD PTR ds:0x2aa923c8
  421399:	jle    0x4213de
  42139b:	ja     0x421391
  42139d:	loope  0x421392
  42139f:	loop   0x4213db
  4213a1:	test   edi,ebx
  4213a3:	mov    edi,0xdd39c005
  4213a8:	xor    eax,0xd86ac92
  4213ad:	mov    ecx,0x7bd4fc5
  4213b2:	aaa    
  4213b3:	xchg   ebp,eax
  4213b4:	mov    edx,0x6d8c19a6
  4213b9:	mov    ebp,0xfc7582d6
  4213be:	int    0x49
  4213c0:	mov    esp,0x1ffa4d78
  4213c5:	inc    edi
  4213c6:	mov    dh,0xa6
  4213c8:	pop    ebx
  4213c9:	sub    bh,bl
  4213cb:	shl    dh,0x74
  4213ce:	pop    eax
  4213cf:	inc    edx
  4213d0:	in     al,dx
  4213d1:	xchg   edx,eax
  4213d2:	neg    DWORD PTR [ecx+0x2751de8e]
  4213d8:	pop    esp
  4213d9:	(bad)  
  4213db:	jecxz  0x421417
  4213dd:	jge    0x4213be
  4213df:	test   al,0x9e
  4213e1:	scas   al,BYTE PTR es:[edi]
  4213e2:	xor    edi,DWORD PTR [edi+0x129d367d]
  4213e8:	jae    0x4213fd
  4213ea:	out    dx,eax
  4213eb:	ja     0x421447
  4213ed:	(bad)  
  4213ef:	mov    al,0xda
  4213f1:	mov    dl,0x29
  4213f3:	add    al,0xa0
  4213f5:	test   BYTE PTR [ecx+0x1e],dl
  4213f8:	sahf   
  4213f9:	mov    ch,0xe7
  4213fb:	in     eax,0xb0
  4213fd:	nop
  4213fe:	pop    esp
  4213ff:	int3   
  421400:	mov    dl,0xc7
  421402:	xor    eax,0x21b9d064
  421407:	fwait
  421408:	xchg   edi,eax
  421409:	imul   ebp,ebx
  42140c:	sbb    al,0x65
  42140e:	aas    
  42140f:	nop
  421410:	lock push ss
  421412:	sub    esp,ebx
  421414:	sbb    al,0x63
  421416:	pop    esp
  421417:	xor    DWORD PTR [edi],eax
  421419:	js     0x421475
  42141b:	dec    esi
  42141c:	xor    DWORD PTR [edi],ebp
  42141e:	pop    ebp
  42141f:	jno    0x42141c
  421421:	xor    al,BYTE PTR gs:[ecx]
  421424:	dec    edi
  421425:	xor    al,0xf7
  421427:	pop    esi
  421428:	and    dh,BYTE PTR [eax+0x26]
  42142b:	mov    al,ds:0xb21d70fd
  421430:	xor    BYTE PTR [edi-0x33],ch
  421433:	inc    ebp
  421434:	pop    edx
  421435:	aaa    
  421436:	cmp    eax,0xa9f5c5de
  42143b:	inc    esp
  42143c:	push   ebp
  42143d:	fisttp DWORD PTR [edi+0x3280ed7e]
  421443:	push   es
  421444:	out    dx,al
  421445:	les    ebx,FWORD PTR [edx+0x4597c6ba]
  42144b:	dec    ecx
  42144c:	das    
  42144d:	stos   BYTE PTR es:[edi],al
  42144e:	jo     0x4213f0
  421450:	push   edx
  421451:	mov    bh,0xc2
  421453:	inc    edi
  421454:	cmc    
  421455:	arpl   WORD PTR [ebx+0x63acd97a],di
  42145b:	(bad)  
  42145d:	outs   dx,DWORD PTR ds:[esi]
  42145e:	mov    ch,BYTE PTR [ebx]
  421460:	outs   dx,DWORD PTR ds:[esi]
  421461:	retf   
  421462:	shr    DWORD PTR [ebx-0x6d17c617],0xa5
  421469:	fdivr  QWORD PTR [eax-0x7d]
  42146c:	test   esp,esp
  42146e:	sbb    ecx,0x22be9ffe
  421474:	test   eax,0xe34840b0
  421479:	and    eax,0xa98ddfcb
  42147e:	jns    0x4214cd
  421480:	outs   dx,DWORD PTR ds:[esi]
  421481:	cmp    ebx,eax
  421483:	(bad)  
  421484:	xor    DWORD PTR [edx-0x214b3ca0],ebp
  42148a:	fs das 
  42148c:	mov    edi,0x86fd0925
  421491:	outs   dx,BYTE PTR ds:[esi]
  421492:	fwait
  421493:	or     edi,0xfe3a84c7
  421499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42149a:	sar    DWORD PTR [edi+edi*4+0x5d466008],cl
  4214a1:	push   cs
  4214a2:	add    ah,ch
  4214a4:	clc    
  4214a5:	(bad)  
  4214a6:	mov    esi,0x81a7ef22
  4214ab:	adc    eax,0x53f06dc9
  4214b0:	in     al,dx
  4214b1:	inc    ebp
  4214b2:	adc    al,0xb5
  4214b4:	xor    al,ch
  4214b6:	out    0x1c,al
  4214b8:	jo     0x42149b
  4214ba:	adc    eax,0xcf2555b8
  4214bf:	xor    DWORD PTR [edi+0x64f22c94],edi
  4214c5:	in     al,0xab
  4214c7:	call   0xdbd:0x176f3d3c
  4214ce:	push   ebp
  4214cf:	sub    DWORD PTR [eax],eax
	...
  4214d9:	add    BYTE PTR [ebp-0x15b01f1],bl
  4214df:	cmc    
  4214e0:	fistp  QWORD PTR [edi]
  4214e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214e3:	fidiv  DWORD PTR [ebp+0x34]
  4214e6:	into   
  4214e7:	sbb    esi,DWORD PTR [ebx]
  4214e9:	xor    al,0xfa
  4214eb:	nop
  4214ec:	add    DWORD PTR [eax],eax
  4214ee:	inc    BYTE PTR [ecx]
  4214f0:	add    BYTE PTR [eax],al
  4214f2:	xchg   ch,ch
  4214f4:	push   0xd
  4214f6:	and    ecx,DWORD PTR [edx]
  4214f8:	cmp    eax,0x1d80edd3
  4214fd:	push   cs
  4214fe:	dec    eax
  4214ff:	mov    al,BYTE PTR [ebx-0x7e3620c2]
  421505:	loope  0x421568
  421507:	lock icebp 
  421509:	xchg   ecx,eax
  42150a:	outs   dx,DWORD PTR ds:[esi]
  42150b:	xchg   esp,eax
  42150c:	jecxz  0x4214d2
  42150e:	jge    0x42151c
  421510:	cmp    DWORD PTR [esi-0x7a],eax
  421513:	jb     0x4214a3
  421515:	shr    BYTE PTR [edi+0x2c],1
  421518:	lds    eax,FWORD PTR [edi]
  42151a:	das    
  42151b:	call   0x6a9:0xf85bfc8f
  421522:	fild   QWORD PTR [eax-0x53]
  421525:	cs ret 
  421527:	cs xchg edi,eax
  421529:	sub    dl,ch
  42152b:	jns    0x421513
  42152d:	jno    0x421508
  42152f:	adc    ebx,DWORD PTR [edx]
  421531:	and    ebp,ebx
  421533:	aaa    
  421534:	outs   dx,BYTE PTR ds:[esi]
  421535:	xor    al,0xfd
  421537:	xor    eax,0xd2205e5
  42153c:	pop    ds
  42153d:	test   eax,0xb85bae54
  421542:	(bad)  
  421543:	jmp    0x4215a1
  421545:	pop    ss
  421546:	add    al,0xf5
  421548:	add    bh,BYTE PTR [eax]
  42154a:	sub    DWORD PTR [esi],edi
  42154c:	jmp    0x4214de
  42154e:	aaa    
  42154f:	(bad)  
  421551:	(bad)  
  421553:	sbb    cl,BYTE PTR [edi]
  421555:	adc    dl,BYTE PTR [esi+edx*1-0x21]
  421559:	mov    esp,0xf8e66985
  42155e:	popf   
  42155f:	mov    esi,0x8ae820ce
  421564:	shl    ch,1
  421566:	and    eax,0xf0838165
  42156b:	cwde   
  42156c:	cs xor al,0x30
  42156f:	ss pop ebp
  421571:	cmp    BYTE PTR [ebx-0x2d],ch
  421574:	pop    ebp
  421575:	or     DWORD PTR [edi],edi
  421577:	scas   al,BYTE PTR es:[edi]
  421578:	xor    ecx,esi
  42157a:	mov    ah,0x84
  42157c:	fidivr DWORD PTR [edi]
  42157e:	retf   
  42157f:	sbb    cl,BYTE PTR [ecx-0x33]
  421582:	adc    BYTE PTR [ebx+ebp*4-0x11],ah
  421586:	hlt    
  421587:	cwde   
  421588:	pop    ss
  421589:	pop    esi
  42158a:	ret    
  42158b:	call   0x95e73e28
  421590:	adc    dh,BYTE PTR [ecx]
  421592:	adc    esp,DWORD PTR [edi-0x9338170]
  421598:	fmul   DWORD PTR [ebp-0x45258e7f]
  42159e:	retf   
  42159f:	loop   0x421553
  4215a1:	pop    ebp
  4215a2:	push   edi
  4215a3:	push   esi
  4215a4:	out    0x30,al
  4215a6:	sahf   
  4215a7:	les    ebx,FWORD PTR [ecx+ebx*8-0x6e016e8c]
  4215ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215af:	inc    esi
  4215b0:	cwde   
  4215b1:	in     al,0xdb
  4215b3:	fisttp WORD PTR ds:0xe0339cda
  4215b9:	xor    ebp,esp
  4215bb:	div    BYTE PTR [ecx+esi*1-0x7dc67623]
  4215c2:	mov    ebp,0x4c70f276
  4215c7:	loope  0x42161f
  4215c9:	cli    
  4215ca:	and    DWORD PTR [ecx+edx*8+0x55ba9682],ebp
  4215d1:	das    
  4215d2:	sbb    al,0x22
  4215d4:	fptan  
  4215d6:	push   es
  4215d7:	out    dx,al
  4215d8:	outs   dx,DWORD PTR ds:[esi]
  4215d9:	cmp    bh,ah
  4215db:	dec    esp
  4215dc:	and    DWORD PTR [ebx],edx
  4215de:	lock pop es
  4215e0:	fwait
  4215e1:	out    dx,eax
  4215e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e3:	nop
  4215e4:	or     BYTE PTR [esi+0x1e],bl
  4215e7:	push   0xfce037fc
  4215ec:	mov    eax,0x952577c1
  4215f1:	jbe    0x421629
  4215f3:	xchg   edi,eax
  4215f4:	fnstcw WORD PTR [edx-0x6af7bacc]
  4215fa:	(bad)  
  4215fd:	ret    0xee32
  421600:	mov    eax,0x1ddd3edd
  421605:	adc    eax,0x637eb521
  42160a:	shl    ebp,0x2a
  42160d:	bnd jp 0x421610
  421610:	xor    bl,BYTE PTR [edi+0x78c1e7a1]
  421616:	test   BYTE PTR [esi+ebx*2+0x2939af34],dl
  42161d:	cli    
  42161e:	ja     0x421685
  421620:	sub    DWORD PTR [ecx],edi
  421622:	fisttp WORD PTR [edx]
  421624:	pop    eax
  421625:	xor    ch,BYTE PTR [ebp+edi*8-0xcf68395]
  42162c:	push   0xffffff9f
  42162e:	dec    ebx
  42162f:	mov    bl,0x79
  421631:	xchg   esp,eax
  421632:	retw   
  421634:	or     al,BYTE PTR [edi+0x55]
  421637:	js     0x421600
  421639:	sub    edx,edx
  42163b:	fist   WORD PTR [esi-0x2f]
  42163e:	jecxz  0x4216ba
  421640:	sbb    al,BYTE PTR [ebx-0x1196b665]
  421646:	jmp    0xd175:0x6782e0c3
  42164d:	cmp    eax,0x75319bb6
  421652:	and    DWORD PTR ss:[edx+0x46],0xffffffd0
  421657:	mov    BYTE PTR [ecx+0x61],dl
  42165a:	mov    al,0xf9
  42165c:	jle    0x421641
  42165e:	stc    
  42165f:	add    cl,cl
  421661:	std    
  421662:	pop    edx
  421663:	push   eax
  421664:	call   0xc993:0xea9e1a36
  42166b:	mov    edi,esp
  42166d:	sti    
  42166e:	inc    ebp
  42166f:	push   ds
  421670:	daa    
  421671:	dec    edx
  421672:	mov    bh,ch
  421674:	or     eax,0x76a6703d
  421679:	xor    ch,BYTE PTR [edx+ebp*2-0x50ddf90c]
  421680:	mov    dh,0x12
  421682:	adc    ebp,DWORD PTR [edi-0x7de92958]
  421688:	adc    edi,0x48b2fe8b
  42168e:	or     eax,0xca6f2f1e
  421693:	pushf  
  421694:	(bad)  
  421695:	mov    al,0xed
  421697:	aaa    
  421698:	in     eax,dx
  421699:	dec    eax
  42169a:	out    dx,al
  42169b:	mov    ah,0x42
  42169d:	mov    dh,BYTE PTR [edx]
  42169f:	mov    ecx,?
  4216a1:	push   ss
  4216a2:	mov    ds:0x29b47875,eax
  4216a7:	sbb    cl,0xf3
  4216aa:	jo     0x4216cb
  4216ac:	loope  0x4216a6
  4216ae:	sub    cl,BYTE PTR [ecx-0xd0c97d1]
  4216b4:	fild   QWORD PTR [edx+esi*8-0x3d]
  4216b8:	repnz add BYTE PTR es:[edi],bh
  4216bc:	fcmovb st,st(6)
  4216be:	adc    ah,BYTE PTR [edi]
  4216c0:	jle    0x421700
  4216c2:	inc    ebp
  4216c3:	sti    
  4216c4:	in     al,0x3b
  4216c6:	inc    edi
  4216c7:	lods   eax,DWORD PTR ds:[esi]
  4216c8:	jmp    0x421722
  4216ca:	mov    bh,0x47
  4216cc:	xchg   esi,eax
  4216cd:	adc    al,0xda
  4216cf:	nop
  4216d0:	stos   DWORD PTR es:[edi],eax
  4216d1:	les    ebp,FWORD PTR [edx-0x59462525]
  4216d7:	sbb    BYTE PTR [edx-0x4f],bl
  4216da:	mov    ds:0xb461d225,al
  4216df:	mov    bl,0xbb
  4216e1:	ins    DWORD PTR es:[edi],dx
  4216e2:	outs   dx,DWORD PTR ds:[esi]
  4216e3:	xchg   ecx,eax
  4216e4:	lods   al,BYTE PTR ds:[esi]
  4216e5:	inc    edi
  4216e6:	cs adc eax,0xb59707bd
  4216ec:	enter  0xa6fd,0xa7
	...
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	and    BYTE PTR [esi],dl
  4216fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216fd:	lea    esi,[esi+0x44bf29bf]
  421703:	sub    esp,esi
  421705:	idiv   dl
  421707:	adc    BYTE PTR [ecx+0x71],al
  42170a:	clc    
  42170b:	xchg   edx,eax
  42170c:	add    DWORD PTR [eax],eax
  42170e:	inc    BYTE PTR [ecx]
  421710:	add    BYTE PTR [eax],al
  421712:	shl    BYTE PTR [edi+edx*4],cl
  421715:	int    0x87
  421717:	and    al,0xf5
  421719:	(bad)  
  42171a:	push   edx
  42171b:	push   cs
  42171c:	mov    esi,0xfbf8869a
  421721:	xchg   edx,eax
  421722:	mov    eax,0x62beeefc
  421727:	xor    BYTE PTR [esi+0x26],al
  42172a:	lods   eax,DWORD PTR ds:[esi]
  42172b:	rcr    BYTE PTR [edx+0x69],1
  42172e:	in     al,dx
  42172f:	cmp    ch,0x51
  421732:	mov    eax,DWORD PTR [ebx-0x34642b87]
  421738:	cmp    DWORD PTR ds:0xac53221e,0xffffffa1
  42173f:	mov    ds:0x6618cca2,eax
  421744:	cdq    
  421745:	fild   QWORD PTR [ebx]
  421747:	cld    
  421748:	rcr    BYTE PTR [ebx-0x26],cl
  42174b:	push   edi
  42174c:	mov    bh,0x89
  42174e:	leave  
  42174f:	es jb  0x4217c9
  421752:	jecxz  0x421752
  421754:	or     edi,DWORD PTR [edi]
  421756:	sbb    cl,BYTE PTR [eax]
  421758:	cdq    
  421759:	clc    
  42175a:	ror    DWORD PTR [eax+0xe449681],1
  421760:	push   esi
  421761:	xor    dh,BYTE PTR [eax-0x15]
  421764:	out    0xbc,eax
  421766:	cmp    edi,DWORD PTR [ebp+0x45280fc3]
  42176c:	mov    WORD PTR [eax+0x3d],?
  42176f:	in     eax,0x8c
  421771:	mov    WORD PTR [edi-0x50fc6b1b],ds
  421777:	push   cs
  421778:	scas   al,BYTE PTR es:[edi]
  421779:	jl     0x421703
  42177b:	fidivr DWORD PTR [esi]
  42177d:	test   al,ch
  42177f:	xor    DWORD PTR [edi-0x5c],esi
  421782:	(bad)  
  421783:	cmp    esp,ecx
  421785:	hlt    
  421786:	xchg   ebp,eax
  421787:	pusha  
  421788:	sbb    ecx,DWORD PTR [esi]
  42178a:	push   ebx
  42178b:	les    esp,FWORD PTR [ebx-0x5b]
  42178e:	push   ebx
  42178f:	mov    edi,0xb6971a1
  421794:	push   ebx
  421795:	jecxz  0x4217c3
  421797:	inc    ebx
  421798:	mov    ebx,0x134c997c
  42179d:	dec    ecx
  42179e:	xchg   DWORD PTR [ecx+0x2c32495d],esp
  4217a4:	test   BYTE PTR [edi+0x6d],0xbe
  4217a8:	lahf   
  4217a9:	inc    edx
  4217aa:	lds    edx,FWORD PTR ds:0xa1c2e7b3
  4217b0:	call   0x48266589
  4217b5:	aaa    
  4217b6:	xchg   esp,eax
  4217b7:	ret    
  4217b8:	punpckhbw mm4,QWORD PTR [edi]
  4217bb:	jmp    0xe51:0x5436e566
  4217c2:	enter  0x7854,0xf2
  4217c6:	pop    ss
  4217c7:	(bad)  
  4217c8:	cmp    eax,0xb534c131
  4217cd:	lods   al,BYTE PTR ds:[esi]
  4217ce:	(bad)  
  4217cf:	retf   
  4217d0:	test   ah,bl
  4217d2:	out    dx,eax
  4217d3:	daa    
  4217d4:	stc    
  4217d5:	sbb    ebx,esi
  4217d7:	not    DWORD PTR [edi]
  4217d9:	adc    BYTE PTR [ecx],ch
  4217db:	lock test ah,cl
  4217de:	xchg   esp,eax
  4217df:	inc    edx
  4217e0:	xor    al,0x42
  4217e2:	cld    
  4217e3:	mul    BYTE PTR [eax]
  4217e5:	cld    
  4217e6:	jl     0x42184e
  4217e8:	cs inc edi
  4217ea:	dec    ebx
  4217eb:	loope  0x4217f2
  4217ed:	mov    ah,0xa8
  4217ef:	ret    0xd0d1
  4217f2:	xor    DWORD PTR [edi-0x2d],0xf11e9242
  4217f9:	mov    BYTE PTR ds:0x9cde7e03,0xf8
  421800:	xchg   ebx,eax
  421801:	fstp   QWORD PTR [ecx+0x37]
  421804:	inc    edx
  421805:	popf   
  421806:	adc    DWORD PTR [edi+0x70],esp
  421809:	xor    BYTE PTR [edx-0x59],cl
  42180c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42180d:	sub    eax,0x565f7748
  421812:	ss stos DWORD PTR es:[edi],eax
  421814:	mov    al,ds:0x8829ebd2
  421819:	out    dx,al
  42181a:	aaa    
  42181b:	test   eax,0xaa98e1fa
  421820:	repz fisttp QWORD PTR [ebx+0x3c]
  421824:	push   ds
  421825:	xor    eax,0x6f940481
  42182a:	mov    al,0xf2
  42182c:	pop    es
  42182d:	(bad)  
  42182e:	jmp    0x421879
  421830:	js     0x42180e
  421832:	scas   eax,DWORD PTR es:[edi]
  421833:	in     eax,0x2
  421835:	je     0x421800
  421837:	xor    esi,esi
  421839:	mov    ch,0x5d
  42183b:	push   0xa7fcdb6e
  421840:	test   BYTE PTR [ebx],bl
  421842:	adc    eax,0x9f0cffd0
  421847:	mov    ds:0x54a6526f,al
  42184c:	xchg   ebx,eax
  42184d:	arpl   WORD PTR [edx-0x581cb7c0],di
  421853:	idiv   BYTE PTR [esi-0x6a]
  421856:	scas   al,BYTE PTR es:[edi]
  421857:	fild   QWORD PTR [ebp-0x6a]
  42185a:	push   ebp
  42185b:	aaa    
  42185c:	push   0xa3a5fcc3
  421861:	std    
  421862:	or     DWORD PTR [edi+0x2a],esi
  421865:	sbb    ah,bl
  421867:	jge    0x421873
  421869:	test   eax,0xa37b2711
  42186e:	bound  ecx,QWORD PTR [eax]
  421870:	dec    edx
  421871:	or     al,0x92
  421873:	add    DWORD PTR [edi+ecx*2-0x5d],ebp
  421877:	or     eax,0xc7911cec
  42187c:	rol    al,cl
  42187e:	push   ss
  42187f:	(bad)  
  421880:	sbb    dl,BYTE PTR [ebp+edx*2-0x16]
  421884:	or     cl,ch
  421886:	pop    esi
  421887:	dec    edx
  421888:	dec    edi
  421889:	push   ds
  42188a:	pop    esi
  42188b:	dec    ecx
  42188c:	in     al,dx
  42188d:	call   0x39c8:0x1d941c0a
  421894:	add    eax,0xc4d53165
  421899:	sbb    ah,dl
  42189b:	mov    ch,0x9
  42189d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42189e:	add    DWORD PTR [edx-0x22],esi
  4218a1:	adc    al,0x54
  4218a3:	shr    BYTE PTR [eax+edx*2],0xe0
  4218a7:	jp     0x4218d7
  4218a9:	push   edi
  4218aa:	in     eax,0x6b
  4218ac:	pop    ebp
  4218ad:	cs xchg esi,eax
  4218af:	mov    ds:0xaa3c7fa5,eax
  4218b4:	inc    eax
  4218b5:	xchg   ecx,eax
  4218b6:	sbb    ebx,DWORD PTR [ebx+0x74]
  4218b9:	daa    
  4218ba:	bound  eax,QWORD PTR [edi]
  4218bc:	sub    eax,eax
  4218be:	arpl   dx,di
  4218c0:	pop    eax
  4218c1:	mov    ch,0x81
  4218c3:	sti    
  4218c4:	int    0xc2
  4218c6:	xchg   esp,eax
  4218c7:	and    bh,BYTE PTR [ebx]
  4218c9:	loopne 0x4218dc
  4218cb:	pop    eax
  4218cc:	dec    edx
  4218cd:	add    eax,0x7d1923b0
  4218d2:	xchg   ecx,eax
  4218d3:	nop
  4218d4:	(bad)  
  4218d5:	rol    DWORD PTR [eax+0x58],cl
  4218d8:	call   0x54a8338c
  4218dd:	xor    DWORD PTR ds:0x5755fa89,0xffffffeb
  4218e4:	sbb    eax,0xc7437d1d
  4218e9:	or     edx,DWORD PTR [edx]
  4218eb:	sbb    ebx,DWORD PTR [edi+ebx*4+0x57f81322]
  4218f2:	inc    esp
  4218f3:	push   ss
  4218f4:	push   0x88e2d7bb
  4218f9:	inc    esp
  4218fa:	sbb    dl,0xdf
  4218fd:	push   ebx
  4218fe:	and    cl,BYTE PTR [ebx+0x7e]
  421901:	loop   0x42188a
  421903:	cmp    al,0x6e
  421905:	and    al,0xa6
  421907:	pop    ds
  421908:	cld    
  421909:	outs   dx,BYTE PTR ds:[esi]
  42190a:	rcr    DWORD PTR [ebx+0x4],0x85
  42190e:	xchg   edx,edi
	...
  421918:	add    BYTE PTR [eax],al
  42191a:	mov    al,0x33
  42191c:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  421922:	pop    DWORD PTR [edx-0x44]
  421925:	mov    bl,cl
  421927:	cmc    
  421928:	push   eax
  421929:	mov    esi,?
  42192b:	xchg   esp,eax
  42192c:	add    DWORD PTR [eax],eax
  42192e:	inc    BYTE PTR [ecx]
  421930:	add    BYTE PTR [eax],al
  421932:	es sbb eax,0xe0478f88
  421938:	xchg   ebx,eax
  421939:	sti    
  42193a:	or     cl,BYTE PTR [esi]
  42193c:	mov    cl,0x4d
  42193e:	out    0x8d,eax
  421940:	test   al,cl
  421942:	icebp  
  421943:	sub    BYTE PTR ds:0xf86d6e8d,dh
  421949:	xchg   esp,eax
  42194a:	dec    edx
  42194b:	aas    
  42194c:	rol    BYTE PTR [esi+0x16],1
  42194f:	xchg   ebx,eax
  421950:	push   edx
  421951:	lods   al,BYTE PTR ds:[esi]
  421952:	dec    ebx
  421953:	in     eax,dx
  421954:	adc    ecx,edi
  421956:	sub    al,0x41
  421958:	clc    
  421959:	sbb    al,0xba
  42195b:	lods   al,BYTE PTR ds:[esi]
  42195c:	mov    dl,0xd3
  42195e:	mov    ebp,0xe472ae6d
  421963:	mov    bl,0x18
  421965:	jmp    0x239a250a
  42196a:	lds    esp,FWORD PTR [ebx+0x19]
  42196d:	adc    BYTE PTR fs:[ecx],ah
  421970:	mov    cl,BYTE PTR [ecx]
  421972:	push   edi
  421973:	mov    esp,eax
  421975:	aas    
  421976:	and    al,0xa4
  421978:	mov    al,ds:0x875c2c54
  42197d:	mov    al,0xc2
  42197f:	xor    ebx,edx
  421981:	push   esi
  421982:	xchg   esi,eax
  421983:	test   al,0x3a
  421985:	mov    bl,0xc6
  421987:	push   edx
  421988:	rcr    DWORD PTR [eax],0x50
  42198b:	test   eax,0xed52aad8
  421990:	in     al,dx
  421991:	icebp  
  421992:	in     al,dx
  421993:	pminsw mm0,mm4
  421996:	sub    al,0x64
  421998:	jno    0x4219f3
  42199a:	sbb    BYTE PTR [esi+0x41949af6],0xe9
  4219a1:	hlt    
  4219a2:	mov    al,ds:0x979aa3fe
  4219a7:	les    esi,FWORD PTR [ebx+0x75bd9474]
  4219ad:	daa    
  4219ae:	sbb    DWORD PTR [eax],edi
  4219b0:	mov    bl,0x24
  4219b2:	imul   ebp,DWORD PTR [ecx+0x31],0x34f19130
  4219b9:	mov    bl,0xf3
  4219bb:	div    esp
  4219bd:	sti    
  4219be:	mov    edx,0xebe71d02
  4219c3:	ss jb  0x421a26
  4219c6:	out    0x83,eax
  4219c8:	icebp  
  4219c9:	xor    esp,DWORD PTR [ecx]
  4219cb:	stc    
  4219cc:	fstp   TBYTE PTR [ebx+0x473f758e]
  4219d2:	mov    edi,0x32748e6c
  4219d7:	push   ebp
  4219d8:	or     DWORD PTR [eax+ebx*2-0x65],edx
  4219dc:	push   ebp
  4219dd:	sahf   
  4219de:	cmp    DWORD PTR ds:0xb41cc8a6,ebp
  4219e4:	test   eax,0x7b2cea7d
  4219e9:	test   al,0x9b
  4219eb:	mov    ds:0x96b5f66,al
  4219f0:	xor    DWORD PTR [eax],eax
  4219f2:	sahf   
  4219f3:	int3   
  4219f4:	jl     0x4219d6
  4219f6:	xchg   ebp,eax
  4219f7:	or     DWORD PTR [edx*4+0x6c3124a9],ebp
  4219fe:	idiv   BYTE PTR [edi+ecx*2+0x39]
  421a02:	mov    esi,DWORD PTR [eax-0x4f45e73e]
  421a08:	pushf  
  421a09:	das    
  421a0a:	mov    ah,0xdc
  421a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a0d:	outs   dx,DWORD PTR ds:[esi]
  421a0e:	or     eax,ebp
  421a10:	scas   eax,DWORD PTR es:[edi]
  421a11:	(bad)  
  421a12:	mov    ds:0xeaead1e,eax
  421a17:	push   0xffffff8e
  421a19:	add    al,ah
  421a1b:	dec    eax
  421a1c:	jmp    0xe71bf48f
  421a21:	lods   eax,DWORD PTR ds:[esi]
  421a22:	adc    ah,BYTE PTR [eax+esi*1+0x398778aa]
  421a29:	sub    al,0xb6
  421a2b:	out    0x15,al
  421a2d:	int3   
  421a2e:	and    al,0x80
  421a30:	mov    bl,ch
  421a32:	or     al,0x5c
  421a34:	mov    bl,0x11
  421a36:	clc    
  421a37:	(bad)  
  421a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a39:	aaa    
  421a3a:	mov    esp,0x30b2e0d5
  421a3f:	add    BYTE PTR [edi-0x37],ch
  421a42:	xor    DWORD PTR [ecx],0x70
  421a45:	fnstcw WORD PTR [edx-0x30]
  421a48:	mov    cl,0x88
  421a4a:	dec    esp
  421a4b:	mov    esp,0x473373fa
  421a50:	mov    al,0x1c
  421a52:	inc    edi
  421a53:	jbe    0x421a7b
  421a55:	mov    dl,0x26
  421a57:	mov    edx,0x1858bb2
  421a5c:	xchg   esp,eax
  421a5d:	div    BYTE PTR [ebp+0x40569214]
  421a63:	pop    edx
  421a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a65:	cmp    ah,BYTE PTR [eax+0x7]
  421a68:	adc    BYTE PTR [ebp+0xf],bl
  421a6b:	sbb    DWORD PTR [edi-0x6c],edx
  421a6e:	sti    
  421a6f:	mov    ds:0x124009bf,al
  421a74:	call   0xc3e34005
  421a79:	call   0xfdfa:0x48afda23
  421a80:	out    dx,eax
  421a81:	cs jo  0x421b03
  421a84:	out    dx,al
  421a85:	inc    esp
  421a86:	jecxz  0x421a68
  421a88:	ins    DWORD PTR es:[edi],dx
  421a89:	fwait
  421a8a:	lds    eax,FWORD PTR [ebp-0x477997f7]
  421a90:	cmp    al,0xc6
  421a92:	scas   eax,DWORD PTR es:[edi]
  421a93:	xor    ch,bh
  421a95:	lea    ecx,[ebp-0x43]
  421a98:	into   
  421a99:	arpl   WORD PTR [edi],dx
  421a9b:	xlat   BYTE PTR ds:[ebx]
  421a9c:	fidiv  DWORD PTR [eax]
  421a9e:	jecxz  0x421a88
  421aa0:	out    dx,al
  421aa1:	cld    
  421aa2:	nop
  421aa3:	imul   esi,DWORD PTR [ecx+edi*8],0xf8643dfc
  421aaa:	adc    al,0xca
  421aac:	retf   0x2e05
  421aaf:	mov    ah,0x14
  421ab1:	mov    al,0xa9
  421ab3:	push   ecx
  421ab4:	pusha  
  421ab5:	mov    esp,0x4996beed
  421aba:	in     al,dx
  421abb:	jp     0x421ab7
  421abd:	mov    bh,0x48
  421abf:	(bad)  
  421ac0:	fcom   QWORD PTR [ebp-0x479cb954]
  421ac6:	adc    DWORD PTR [esp+ebx*2-0x69bf6f10],ecx
  421acd:	retf   0x5ade
  421ad0:	add    eax,0xcf46efbb
  421ad5:	es das 
  421ad7:	jns    0x421aa4
  421ad9:	test   BYTE PTR [edi+0x46],ah
  421adc:	jmp    0x4682:0x94bd2632
  421ae3:	sbb    DWORD PTR [esi+0x6eec087c],edi
  421ae9:	xchg   edx,eax
  421aea:	push   esi
  421aeb:	inc    esp
  421aec:	adc    eax,0x8b40dc92
  421af1:	ss jmp 0x4790:0xea4b7da3
  421af9:	fwait
  421afa:	rcl    DWORD PTR [ebx],cl
  421afc:	xor    ecx,DWORD PTR [ecx-0xdcf2745]
  421b02:	push   esp
  421b03:	pop    ebp
  421b04:	add    al,0x4e
  421b06:	sbb    ecx,DWORD PTR [eax+0x72]
  421b09:	test   al,0x97
  421b0b:	and    eax,0xaa64dd41
  421b10:	xor    bl,al
  421b12:	inc    eax
  421b13:	aad    0x73
  421b15:	adc    DWORD PTR [esi],ebx
  421b17:	imul   ecx,DWORD PTR [ebp+0x38],0x1
  421b1b:	pop    ebx
  421b1c:	popf   
  421b1d:	lds    esi,FWORD PTR [esi]
  421b1f:	aad    0xa8
  421b21:	and    BYTE PTR [ebx+0x32a8ded9],bh
  421b27:	shl    BYTE PTR [esi+edx*4-0x2e],cl
  421b2b:	call   DWORD PTR [edx+0xba14fe]
	...
  421b39:	add    BYTE PTR [ecx-0x6b36a2],ch
  421b3f:	xchg   edi,eax
  421b40:	std    
  421b41:	jg     0x421b32
  421b43:	mov    edi,0xe864f8f7
  421b48:	clc    
  421b49:	mov    eax,0x196f4
  421b4e:	inc    BYTE PTR [ecx]
  421b50:	add    BYTE PTR [eax],al
  421b52:	pop    edi
  421b53:	mov    ds:0xf6d4d508,eax
  421b58:	retf   0xb728
  421b5b:	ins    DWORD PTR es:[edi],dx
  421b5c:	add    dl,dh
  421b5e:	pop    ds
  421b5f:	gs mov ebp,0x382aba44
  421b65:	xchg   edi,eax
  421b66:	fild   DWORD PTR [edi]
  421b68:	dec    edx
  421b69:	mov    edi,0x29c9d67f
  421b6e:	bound  edi,QWORD PTR [edi-0x14]
  421b71:	out    0x4a,eax
  421b73:	xor    bl,BYTE PTR [ebx-0x7f89bed4]
  421b79:	pop    edi
  421b7a:	xchg   ebx,eax
  421b7b:	xor    bl,BYTE PTR [eax-0x2]
  421b7e:	mov    ecx,DWORD PTR [eax]
  421b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b81:	jecxz  0x421b79
  421b83:	adc    DWORD PTR [eax],edi
  421b85:	add    al,0xde
  421b87:	popf   
  421b88:	iret   
  421b89:	aad    0x7d
  421b8b:	daa    
  421b8c:	mov    eax,ds:0xf6accca7
  421b91:	push   es
  421b92:	aaa    
  421b93:	je     0x421b27
  421b95:	fisub  WORD PTR [esi+0x9e8b086]
  421b9b:	fadd   DWORD PTR [esi-0x7e]
  421b9e:	sbb    eax,0xa73616c2
  421ba3:	inc    edx
  421ba4:	sub    eax,0x94f2262c
  421ba9:	mov    ch,0x97
  421bab:	lds    edi,FWORD PTR [esi]
  421bad:	in     eax,dx
  421bae:	jg     0x421ba3
  421bb0:	pop    ecx
  421bb1:	and    edx,edi
  421bb3:	cmp    dh,BYTE PTR ds:0xe782156e
  421bb9:	(bad)
  421bbe:	fisttp WORD PTR [esi+0x4071fd3c]
  421bc4:	or     esi,ebx
  421bc6:	mov    edx,0xc2d50754
  421bcb:	cwde   
  421bcc:	sub    ah,dh
  421bce:	and    eax,0x38f81417
  421bd3:	mov    ds:0x900120af,al
  421bd8:	test   DWORD PTR [ebp+0x52190b1c],ebp
  421bde:	loopne 0x421ba5
  421be0:	dec    ebp
  421be1:	(bad)  
  421be2:	fucomi st,st(5)
  421be4:	push   ebx
  421be5:	call   0x54c83f78
  421bea:	out    0x55,eax
  421bec:	mov    ds:0x375b9b13,eax
  421bf1:	push   0x66
  421bf3:	xchg   esi,eax
  421bf4:	adc    al,0x93
  421bf6:	sbb    eax,0x3ef8b99c
  421bfb:	test   eax,edi
  421bfd:	xchg   edx,eax
  421bfe:	jge    0x421bfb
  421c00:	push   eax
  421c01:	sub    al,0xae
  421c03:	fidiv  DWORD PTR [edi-0x11]
  421c06:	pop    edi
  421c07:	adc    esp,DWORD PTR [eax+0x336ce041]
  421c0d:	inc    esp
  421c0e:	add    bh,BYTE PTR [eax+0x22]
  421c11:	aam    0x47
  421c13:	aas    
  421c14:	cmp    eax,0x79bee341
  421c19:	or     BYTE PTR [edi],bl
  421c1b:	lods   al,BYTE PTR ds:[esi]
  421c1c:	cmp    ebx,DWORD PTR [edi+0x7b]
  421c1f:	xor    DWORD PTR [ebx-0x186be744],esi
  421c25:	pop    edx
  421c26:	xchg   esp,eax
  421c27:	aas    
  421c28:	repnz outs dx,DWORD PTR ds:[esi]
  421c2a:	dec    ebx
  421c2b:	leave  
  421c2c:	xor    al,0x85
  421c2e:	push   esi
  421c2f:	aas    
  421c30:	cwde   
  421c31:	and    eax,0x7cd40c7
  421c36:	into   
  421c37:	push   eax
  421c38:	dec    ecx
  421c39:	(bad)  
  421c3a:	rol    DWORD PTR [ebp-0xb],cl
  421c3d:	popf   
  421c3e:	repnz cmp dh,BYTE PTR [edi+ebp*1]
  421c42:	mov    ebx,0x578c7bd0
  421c47:	mov    eax,esi
  421c49:	push   0xbd2bee26
  421c4e:	into   
  421c4f:	imul   ebp,DWORD PTR ss:[esi],0xbd37599b
  421c56:	mov    dl,0xa
  421c58:	test   al,0xc1
  421c5a:	xchg   ebp,eax
  421c5b:	add    ebp,esp
  421c5d:	out    0xbf,eax
  421c5f:	shl    BYTE PTR [edi-0xb],1
  421c62:	jle    0x421c55
  421c64:	shl    bh,0x4b
  421c67:	std    
  421c68:	ret    0xd7d
  421c6b:	clc    
  421c6c:	add    BYTE PTR [edx],ch
  421c6e:	dec    ebx
  421c6f:	in     al,0x98
  421c71:	xor    esp,edx
  421c73:	ret    
  421c74:	call   0x3710:0xe297f729
  421c7b:	outs   dx,BYTE PTR ds:[esi]
  421c7c:	nop
  421c7d:	mov    al,0x6e
  421c7f:	adc    bh,al
  421c81:	mov    dl,0xa
  421c83:	fnstcw WORD PTR [ecx]
  421c85:	dec    ecx
  421c86:	dec    eax
  421c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c88:	add    DWORD PTR [ecx+0x3939ad07],0xfce6ede8
  421c92:	retf   
  421c93:	call   0x1e0e1165
  421c98:	jge    0x421cc9
  421c9a:	ins    BYTE PTR es:[edi],dx
  421c9b:	push   edx
  421c9c:	mov    esp,0x692e733
  421ca1:	or     bh,cl
  421ca3:	and    BYTE PTR [edx+0x651f6ab5],dh
  421ca9:	mov    dh,bh
  421cab:	retf   0xdaaf
  421cae:	data16 int 0x12
  421cb1:	clc    
  421cb2:	adc    DWORD PTR [edi-0x27],esi
  421cb5:	inc    ebx
  421cb6:	and    eax,0xfbda97b9
  421cbb:	enter  0x2200,0x84
  421cbf:	test   BYTE PTR [eax-0x57bf031a],dh
  421cc5:	idiv   DWORD PTR [edx-0x8]
  421cc8:	dec    ecx
  421cc9:	std    
  421cca:	loopne 0x421ce7
  421ccc:	sbb    BYTE PTR [eax],0x43
  421ccf:	inc    ebp
  421cd0:	sbb    ecx,DWORD PTR [edi-0x78]
  421cd3:	stos   BYTE PTR es:[edi],al
  421cd4:	ins    BYTE PTR es:[edi],dx
  421cd5:	or     DWORD PTR [esi+0x1c],esi
  421cd8:	dec    ebp
  421cd9:	adc    edi,DWORD PTR [ebp-0x6f]
  421cdc:	bound  ebp,QWORD PTR [esi+edx*2-0x76407c29]
  421ce3:	sub    BYTE PTR ds:0x6e67978b,0xae
  421cea:	or     al,0x81
  421cec:	adc    esp,0x730bec46
  421cf2:	inc    edx
  421cf3:	add    eax,0x62ca8c78
  421cf8:	cmp    eax,0x12c80dd9
  421cfd:	add    esp,DWORD PTR [ebp+0x22388872]
  421d03:	xor    eax,ebx
  421d05:	mov    BYTE PTR [eax],bh
  421d07:	(bad)  
  421d08:	aaa    
  421d09:	add    edx,DWORD PTR [edx+0x396091b6]
  421d0f:	repnz inc edi
  421d11:	arpl   bp,di
  421d13:	jns    0x421d4b
  421d15:	rcr    al,1
  421d17:	mov    BYTE PTR [eax],0xfb
  421d1a:	dec    ebp
  421d1b:	push   eax
  421d1c:	int3   
  421d1d:	scas   eax,DWORD PTR es:[edi]
  421d1e:	xlat   BYTE PTR ds:[ebx]
  421d1f:	jb     0x421d36
  421d21:	sar    bl,0x93
  421d24:	leave  
  421d25:	mov    ?,esi
  421d27:	icebp  
  421d28:	leave  
  421d29:	stos   DWORD PTR es:[edi],eax
  421d2a:	popa   
  421d2b:	popf   
  421d2c:	push   eax
  421d2d:	imul   edi,DWORD PTR [eax],0xffffffc2
  421d30:	or     DWORD PTR [esi-0x1791f244],edx
  421d36:	mov    ecx,0xf91e383e
  421d3b:	pop    esi
  421d3c:	js     0x421dbb
  421d3e:	psubusb mm6,QWORD PTR [ecx]
  421d41:	sub    bl,BYTE PTR [ebx+eax*1+0x3e]
  421d45:	je     0x421d7c
  421d47:	jle    0x421d88
  421d49:	push   ss
  421d4a:	into   
  421d4b:	push   esp
  421d4c:	push   eax
  421d4d:	xchg   ecx,eax
  421d4e:	fidiv  WORD PTR [eax+eax*1]
	...
  421d59:	add    BYTE PTR [ebx+0x7d7539cf],bh
  421d5f:	idiv   edi
  421d61:	iret   
  421d62:	(bad)  
  421d63:	ror    DWORD PTR [ebp+0x6d],1
  421d66:	loope  0x421cfa
  421d68:	mov    esp,0x198f24f
  421d6d:	add    dh,bh
  421d6f:	add    DWORD PTR [eax],eax
  421d71:	add    dh,cl
  421d73:	add    DWORD PTR [edi+eax*1+0x72],ebp
  421d77:	scas   al,BYTE PTR es:[edi]
  421d78:	push   ebp
  421d79:	xor    DWORD PTR [esi-0x6d5b82b7],esi
  421d7f:	and    al,0xa3
  421d81:	cld    
  421d82:	push   eax
  421d83:	or     DWORD PTR [esp+ebp*4+0x13],edx
  421d87:	stc    
  421d88:	fisub  DWORD PTR [eax-0x74d54c4f]
  421d8e:	ret    0x2f28
  421d91:	inc    edi
  421d92:	fdivr  QWORD PTR [edi-0x2d]
  421d95:	stos   DWORD PTR es:[edi],eax
  421d96:	cmp    BYTE PTR [eax+0x8],ch
  421d99:	jns    0x421de3
  421d9b:	add    al,0xa4
  421d9d:	popf   
  421d9e:	daa    
  421d9f:	enter  0x5ffd,0x76
  421da3:	pop    es
  421da4:	xchg   edx,eax
  421da5:	fiadd  WORD PTR [esi-0x33862235]
  421dab:	xchg   DWORD PTR [ecx+0x79197dfd],eax
  421db1:	dec    edi
  421db2:	xchg   edx,eax
  421db3:	(bad)  
  421db5:	shl    al,cl
  421db7:	test   dl,0x8e
  421dba:	jne    0x421db0
  421dbc:	sub    DWORD PTR [esi-0x28b3576c],0x5f
  421dc3:	mov    dl,dh
  421dc5:	dec    edx
  421dc6:	jns    0x421dd6
  421dc8:	mov    bl,0xd2
  421dca:	bound  ecx,QWORD PTR [eax-0x273e112b]
  421dd0:	sar    BYTE PTR [ebp-0x5a],0x8e
  421dd4:	repnz dec ebp
  421dd6:	jle    0x421e52
  421dd8:	pop    esp
  421dd9:	fsubr  QWORD PTR [ebp+0x16]
  421ddc:	adc    esi,edi
  421dde:	pop    esp
  421ddf:	(bad)
  421de2:	scas   eax,DWORD PTR es:[edi]
  421de3:	nop
  421de4:	aad    0x18
  421de6:	mov    dh,0xcd
  421de8:	pop    esi
  421de9:	dec    edi
  421dea:	call   0xe39e:0x4ce76b8d
  421df1:	cmp    al,0x8e
  421df3:	rcr    DWORD PTR [esi+0x78821734],1
  421df9:	or     al,0x5f
  421dfb:	jge    0x421e73
  421dfd:	pop    edi
  421dfe:	jge    0x421d9e
  421e00:	xchg   edi,eax
  421e01:	out    0xb,al
  421e03:	sub    eax,0x88f827f9
  421e08:	mov    eax,ds:0xb062db7
  421e0d:	or     al,0x1a
  421e0f:	mul    DWORD PTR [edi+ebx*2-0x71f85c92]
  421e16:	sbb    BYTE PTR [esi+0x5a54c96c],0xb4
  421e1d:	and    al,ah
  421e1f:	aaa    
  421e20:	pop    ss
  421e21:	push   eax
  421e22:	(bad)  
  421e23:	adc    al,0x59
  421e25:	adc    DWORD PTR [eax+0x30],ebx
  421e28:	shr    ecx,cl
  421e2a:	mov    cl,bl
  421e2c:	ss fs jo 0x421e69
  421e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e31:	test   al,0x8
  421e33:	mov    ch,cl
  421e35:	outs   dx,BYTE PTR ds:[esi]
  421e36:	push   cs
  421e37:	adc    al,0x3f
  421e39:	sub    DWORD PTR [ebx],0x9e65ebc0
  421e3f:	test   eax,0xb26e8905
  421e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e45:	sub    eax,0x3b54cb8a
  421e4a:	daa    
  421e4b:	inc    esi
  421e4c:	ins    DWORD PTR es:[edi],dx
  421e4d:	mov    BYTE PTR [ebx],ch
  421e4f:	std    
  421e50:	sub    eax,0x5eb06c31
  421e55:	jmp    0x7a99:0x5ea49465
  421e5c:	sbb    DWORD PTR [ecx-0x38f618e1],eax
  421e62:	jnp    0x421df6
  421e64:	xchg   edx,eax
  421e65:	ret    0x601b
  421e68:	mov    WORD PTR [ecx+0x7e455f9e],cs
  421e6e:	jne    0x421eb2
  421e70:	xlat   BYTE PTR ds:[ebx]
  421e71:	sbb    eax,0x2b47a7f7
  421e76:	data16 xor al,0xab
  421e79:	in     eax,dx
  421e7a:	inc    esi
  421e7b:	xlat   BYTE PTR ds:[ebx]
  421e7c:	pushf  
  421e7d:	mov    al,al
  421e7f:	push   edx
  421e80:	call   DWORD PTR [esi-0x4e]
  421e83:	fwait
  421e84:	cmp    bh,bh
  421e86:	das    
  421e87:	pop    ss
  421e88:	and    BYTE PTR [ebp+0x1],0x9f
  421e8c:	sub    eax,0xbf702ca7
  421e91:	adc    DWORD PTR [esp+edi*1-0x4981e37f],ebx
  421e98:	xor    al,0x4c
  421e9a:	lea    esi,[ebx]
  421e9c:	cvtps2pd xmm6,QWORD PTR [edi+edx*2]
  421ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ea1:	(bad)  
  421ea2:	ins    BYTE PTR es:[edi],dx
  421ea3:	sub    BYTE PTR [edx],0xa2
  421ea6:	mov    ds:0x9b522e3a,eax
  421eab:	outs   dx,DWORD PTR ds:[esi]
  421eac:	cwde   
  421ead:	repz fnclex 
  421eb0:	call   0xa657:0x9998fa18
  421eb7:	lahf   
  421eb8:	mov    ds:0x584595e4,al
  421ebd:	gs inc ecx
  421ebf:	mov    ds:0x7d58b52,al
  421ec4:	out    dx,eax
  421ec5:	sbb    al,BYTE PTR [ebx]
  421ec7:	and    BYTE PTR [ecx],0x33
  421eca:	push   ss
  421ecb:	adc    eax,0xd3e158be
  421ed0:	dec    ebx
  421ed1:	mov    edi,0x1aa4bae2
  421ed6:	adc    al,0xa1
  421ed8:	cdq    
  421ed9:	ror    ecx,cl
  421edb:	xchg   esp,eax
  421edc:	jl     0x421f04
  421ede:	xchg   edi,eax
  421edf:	cmp    DWORD PTR [eax-0x32e5d682],ebx
  421ee5:	mov    esp,0x3050ec49
  421eea:	ror    BYTE PTR [ecx+0x7115ced4],0x15
  421ef1:	scas   al,BYTE PTR es:[edi]
  421ef2:	mov    eax,ds:0x495b0c72
  421ef7:	pop    ss
  421ef8:	(bad)  
  421ef9:	stos   DWORD PTR es:[edi],eax
  421efa:	or     al,0x67
  421efc:	out    0x67,al
  421efe:	cmp    BYTE PTR [edx],0x6e
  421f01:	hlt    
  421f02:	or     dh,BYTE PTR [ebp-0x21]
  421f05:	enter  0x6c00,0x56
  421f09:	je     0x421f58
  421f0b:	(bad)  
  421f0c:	repz je 0x421eb0
  421f0f:	scas   al,BYTE PTR es:[edi]
  421f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f11:	pushf  
  421f12:	lea    esp,[edx+eax*4+0x2]
  421f16:	imul   ecx,edi,0xbd2baab6
  421f1c:	mov    edx,0x4aac534a
  421f21:	add    DWORD PTR [eax],edx
  421f23:	inc    ebx
  421f24:	shl    DWORD PTR [edx+0x79c2c3cb],cl
  421f2a:	jnp    0x421f21
  421f2c:	jge    0x421f62
  421f2e:	out    dx,eax
  421f2f:	nop
  421f30:	pop    ebp
  421f31:	popf   
  421f32:	lods   al,BYTE PTR ds:[esi]
  421f33:	and    esp,DWORD PTR [edx+ecx*2]
  421f36:	mov    edi,cs
  421f38:	add    BYTE PTR [edx-0x36],0xf9
  421f3c:	ins    BYTE PTR es:[edi],dx
  421f3d:	(bad)  
  421f3e:	jb     0x421fa1
  421f40:	cmc    
  421f41:	dec    DWORD PTR [eax]
  421f43:	mov    eax,ds:0x3d63778a
  421f48:	sti    
  421f49:	out    dx,al
  421f4a:	and    al,0x9b
  421f4c:	fmul   QWORD PTR [esi-0x1a]
  421f4f:	in     al,0x4e
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	xor    ebp,DWORD PTR [eax+0x2fd74660]
  421f58:	out    0x81,eax
  421f5a:	stc    
  421f5b:	add    BYTE PTR [ecx+esi*2-0x20],dh
  421f5f:	pop    esp
  421f60:	je     0x421f09
  421f62:	(bad)  
  421f63:	outs   dx,DWORD PTR ds:[esi]
  421f64:	dec    edx
  421f65:	pop    ds
  421f66:	add    bh,BYTE PTR ds:0xc9299ae9
  421f6c:	cmp    al,0xc0
  421f6e:	idiv   DWORD PTR [eax]
	...
  421f78:	add    BYTE PTR [eax],al
  421f7a:	out    dx,al
  421f7b:	ret    0x2d9d
  421f7e:	mov    ebp,0x33c3fe7f
  421f83:	ja     0x421f4e
  421f85:	or     BYTE PTR [ebx+ebx*4-0x650fce7b],dh
  421f8c:	add    DWORD PTR [eax],eax
  421f8e:	inc    BYTE PTR [ecx]
  421f90:	add    BYTE PTR [eax],al
  421f92:	scas   al,BYTE PTR es:[edi]
  421f93:	jbe    0x421f84
  421f95:	aad    0x39
  421f97:	sar    BYTE PTR [ecx-0x5d],0x59
  421f9b:	retf   0xbe31
  421f9e:	push   0x68
  421fa0:	pushf  
  421fa1:	test   al,0x7b
  421fa3:	(bad)  
  421fa4:	push   ebp
  421fa5:	mov    esp,0x52fa4ad6
  421faa:	lahf   
  421fab:	fiadd  WORD PTR [edx]
  421fad:	pop    ebp
  421fae:	sbb    ebp,eax
  421fb0:	mov    bl,0xc4
  421fb2:	fidivr DWORD PTR [edi-0x4c]
  421fb5:	(bad)  
  421fb6:	daa    
  421fb7:	test   ebx,0x97660c6f
  421fbd:	loopne 0x421ff6
  421fbf:	jb     0x421fac
  421fc1:	jae    0x42203b
  421fc3:	and    eax,0x6dea4234
  421fc8:	inc    ecx
  421fc9:	clc    
  421fca:	in     eax,dx
  421fcb:	out    dx,eax
  421fcc:	fisubr DWORD PTR fs:[ecx+0x52]
  421fd0:	cld    
  421fd1:	aam    0x4b
  421fd3:	shr    BYTE PTR [edi+0x1c],0x90
  421fd7:	pop    ebp
  421fd8:	cmp    eax,0xc0f5a0e
  421fdd:	mov    WORD PTR [edx+0x35725f8f],cs
  421fe3:	add    BYTE PTR [ecx],bh
  421fe5:	ja     0x421fa5
  421fe7:	call   FWORD PTR [ebp-0x59]
  421fea:	cli    
  421feb:	les    edi,FWORD PTR [edi+0x5243d87b]
  421ff1:	int3   
  421ff2:	fwait
  421ff3:	pop    edx
  421ff4:	jecxz  0x422013
  421ff6:	mov    eax,ds:0xa67aeff8
  421ffb:	call   0x523abbdf
  422000:	shl    DWORD PTR [edx],1
  422002:	(bad)  
  422003:	(bad)  
  422004:	jmp    0x1f2e9c7e
  422009:	cmp    esp,eax
  42200b:	ins    BYTE PTR es:[edi],dx
  42200c:	pop    edx
  42200d:	xchg   ebx,eax
  42200e:	push   es
  42200f:	ret    
  422010:	mov    ah,0xd2
  422012:	std    
  422013:	loop   0x422067
  422015:	jp     0x42208c
  422017:	push   edx
  422018:	cmp    DWORD PTR [edi+0x3c],esp
  42201b:	mov    ds:0xfc49b046,al
  422020:	rol    DWORD PTR [ebx],cl
  422022:	fwait
  422023:	test   eax,0xe59f65b
  422028:	hlt    
  422029:	push   esp
  42202a:	mov    eax,0xa595b2ae
  42202f:	adc    ebp,DWORD PTR [eax-0x1c]
  422032:	pop    ss
  422033:	js     0x42202d
  422035:	clc    
  422036:	xchg   ebp,eax
  422037:	aad    0x73
  422039:	in     eax,0x13
  42203b:	xor    al,0x26
  42203d:	sub    ebp,ebx
  42203f:	xchg   esi,eax
  422040:	arpl   WORD PTR [eax-0x29395875],di
  422046:	fistp  QWORD PTR [ebx+edx*8-0x25]
  42204a:	push   ds
  42204b:	aad    0xcd
  42204d:	jb     0x422039
  42204f:	icebp  
  422050:	adc    BYTE PTR [edi-0x36],ch
  422053:	in     eax,dx
  422054:	push   ecx
  422055:	pop    si
  422057:	ror    DWORD PTR [ebx],1
  422059:	fild   QWORD PTR ds:0xa0e1914a
  42205f:	and    DWORD PTR [eax-0x22],edi
  422062:	dec    esp
  422063:	inc    edi
  422064:	inc    ebp
  422065:	in     al,dx
  422066:	jo     0x4220aa
  422068:	popf   
  422069:	mov    edx,ebp
  42206b:	outs   dx,DWORD PTR ds:[esi]
  42206c:	xor    DWORD PTR [edx-0x4f3e0ef],0xb9ce7f13
  422076:	xor    eax,0x60bf4429
  42207b:	xor    BYTE PTR [ebp-0x38],bl
  42207e:	and    DWORD PTR [eax],ebp
  422080:	add    eax,0x97bda52f
  422085:	cmp    dh,BYTE PTR [esi-0x10]
  422088:	call   0x2e569cd0
  42208d:	bound  ecx,QWORD PTR [eax-0x38]
  422090:	popa   
  422091:	out    dx,al
  422092:	sub    eax,0x8fca0f6a
  422097:	push   ebp
  422098:	addr16 loope 0x422097
  42209b:	dec    eax
  42209c:	mov    BYTE PTR [esi+ebx*1],bl
  42209f:	leave  
  4220a0:	shr    DWORD PTR [ebp+0x3fc120f0],cl
  4220a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a7:	jb     0x422116
  4220a9:	imul   edx
  4220ab:	(bad)  
  4220ac:	push   0x4cb68fad
  4220b1:	jp     0x4220b0
  4220b3:	push   ebx
  4220b4:	xchg   ebp,eax
  4220b5:	pop    esp
  4220b6:	cmp    eax,0x1fe48216
  4220bb:	pop    ebp
  4220bc:	jmp    0x9c9a:0x84417919
  4220c3:	xor    eax,0xab0e6471
  4220c8:	fcmovnbe st,st(5)
  4220ca:	cld    
  4220cb:	arpl   WORD PTR [eax+0x564473f7],di
  4220d1:	pop    ecx
  4220d2:	push   eax
  4220d3:	mov    al,0xf4
  4220d5:	mov    ds:0x9eb9319f,eax
  4220da:	sub    eax,0xe83abc99
  4220df:	(bad)  
  4220e0:	rol    DWORD PTR [eax-0x68b0ebae],cl
  4220e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220e7:	jb     0x4220f4
  4220e9:	(bad)  
  4220ea:	jmp    0xb2ce:0x38b27853
  4220f1:	sbb    ah,dh
  4220f3:	jmp    FWORD PTR [esi-0x33dfea94]
  4220f9:	out    dx,eax
  4220fa:	imul   ebx,DWORD PTR [ecx+0x78],0xb8fec90c
  422101:	xchg   BYTE PTR [edi-0x22],cl
  422104:	mov    bl,0x19
  422106:	and    eax,0xf2550b23
  42210b:	add    bh,al
  42210d:	sbb    edx,DWORD PTR ds:0xadd66185
  422113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422114:	add    DWORD PTR [edx+0x39],eax
  422117:	inc    esp
  422118:	xchg   DWORD PTR [edx],esp
  42211a:	fsub   DWORD PTR [ecx+0x1a7b333b]
  422120:	shl    DWORD PTR [eax+0x14c77ecd],1
  422126:	cs aam 0xae
  422129:	loop   0x422141
  42212b:	jno    0x4220ff
  42212d:	inc    ecx
  42212e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42212f:	iret   
  422130:	jge    0x4221a1
  422132:	lods   eax,DWORD PTR ds:[esi]
  422133:	and    eax,0xd158f65e
  422138:	jae    0x42213b
  42213a:	pushf  
  42213b:	std    
  42213c:	fwait
  42213d:	sahf   
  42213e:	dec    ebx
  42213f:	lock pop esp
  422141:	xchg   edx,eax
  422142:	cmp    DWORD PTR [ebx+0x59],esi
  422145:	or     eax,0x6be85d2a
  42214a:	int    0xcf
  42214c:	inc    eax
  42214d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42214e:	addr16 jnp 0x422101
  422151:	mov    eax,ds:0x6d781409
  422156:	fldenv [edx+0xeead488]
  42215c:	mov    bl,0x82
  42215e:	call   DWORD PTR [edi]
  422160:	cmp    eax,0x6efb2b1a
  422165:	sub    eax,0xa0598afa
  42216a:	test   BYTE PTR [ecx-0x35158649],dh
  422170:	push   0x7a58b278
  422175:	mov    ecx,0x490003f5
  42217a:	sub    DWORD PTR [esi],esp
  42217c:	sbb    DWORD PTR [ecx+0x6d],esp
  42217f:	xchg   BYTE PTR [ecx],ch
  422181:	jne    0x4221cc
  422183:	dec    edx
  422184:	cmp    al,0x99
  422186:	pusha  
  422187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422188:	or     bp,cx
  42218b:	mov    eax,ds:0xf7959db5
	...
  422198:	add    BYTE PTR [eax],al
  42219a:	push   ebx
  42219b:	(bad)  
  42219c:	(bad)  
  42219d:	push   esi
  42219e:	(bad)  
  42219f:	jle    0x42219c
  4221a1:	xlat   BYTE PTR ds:[ebx]
  4221a2:	retf   
  4221a3:	push   ds
  4221a4:	test   DWORD PTR [ebp+0x4f],0xee2da517
  4221ab:	pushf  
  4221ac:	add    DWORD PTR [eax],eax
  4221ae:	inc    BYTE PTR [ecx]
  4221b0:	add    BYTE PTR [eax],al
  4221b2:	and    eax,0xa8550f8b
  4221b7:	dec    eax
  4221b8:	clc    
  4221b9:	sub    al,0x5f
  4221bb:	xor    BYTE PTR [ebx],cl
  4221bd:	xchg   ebx,eax
  4221be:	cmp    cl,ah
  4221c0:	int    0xc6
  4221c2:	ins    DWORD PTR es:[edi],dx
  4221c3:	mov    al,0xac
  4221c5:	push   cs
  4221c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c7:	iret   
  4221c8:	(bad)  
  4221c9:	frstor [edi+0x1a]
  4221cc:	aad    0x53
  4221ce:	loope  0x42221b
  4221d0:	fwait
  4221d1:	inc    edx
  4221d2:	xor    eax,ebp
  4221d4:	mov    eax,0x87121278
  4221d9:	repz and bh,BYTE PTR [eax+edi*4]
  4221dd:	push   ebx
  4221de:	mov    ecx,0x522459e5
  4221e3:	xchg   edi,eax
  4221e4:	jecxz  0x422235
  4221e6:	ret    
  4221e7:	(bad)  
  4221e8:	push   ecx
  4221e9:	mov    WORD PTR [edx+0x41],ds
  4221ec:	xlat   BYTE PTR ds:[ebx]
  4221ed:	repz popf 
  4221ef:	or     esp,ebx
  4221f1:	jo     0x42223e
  4221f3:	mov    edi,0xe3c638f1
  4221f8:	pop    ebp
  4221f9:	mov    eax,0x94f2baf4
  4221fe:	xor    esp,DWORD PTR [eax+0x676ff4f7]
  422204:	cmp    BYTE PTR [eax+0x5b],al
  422207:	xor    al,0xed
  422209:	mov    ds:0x220a4242,eax
  42220e:	daa    
  42220f:	rcr    DWORD PTR [ecx+0x31a119e7],0x52
  422216:	xlat   BYTE PTR ds:[ebx]
  422217:	fwait
  422218:	popf   
  422219:	push   es
  42221a:	imul   edx,DWORD PTR [esi+ebp*8],0x70
  42221e:	jbe    0x4221d6
  422220:	pop    edx
  422221:	adc    esp,DWORD PTR [ebp+0x8ceed76]
  422227:	fucomip st,st(7)
  422229:	jb     0x422247
  42222b:	lahf   
  42222c:	mov    ecx,0x260d4563
  422231:	stc    
  422232:	pop    eax
  422233:	mov    dh,0xf
  422235:	and    edx,esp
  422237:	dec    edx
  422238:	cmc    
  422239:	fcomp  DWORD PTR [edi]
  42223b:	fisub  DWORD PTR [eax]
  42223d:	sbb    BYTE PTR [ecx+0x518e56d],al
  422243:	push   esp
  422244:	int3   
  422245:	ins    DWORD PTR es:[edi],dx
  422246:	xchg   esp,eax
  422247:	adc    eax,0x7ae0a848
  42224c:	mov    edi,0x6cf1e5f0
  422251:	jae    0x422216
  422253:	pop    es
  422254:	mov    bl,0x54
  422256:	adc    dh,dl
  422258:	leave  
  422259:	rcr    BYTE PTR [ecx],0xec
  42225c:	pop    esp
  42225d:	call   0xfd85:0xecdd837b
  422264:	mov    bh,ch
  422266:	pop    edx
  422267:	jo     0x4221e9
  422269:	mov    ds:0xc43739b1,al
  42226e:	outs   dx,DWORD PTR ds:[esi]
  42226f:	cdq    
  422270:	fs je  0x42227c
  422273:	xchg   BYTE PTR [esi+0x30f4b8ef],bl
  422279:	mov    eax,0xf7671b7b
  42227e:	xor    eax,0x2531067b
  422283:	fs sbb ecx,ecx
  422286:	sar    cl,cl
  422288:	addr16 push eax
  42228a:	fsubr  DWORD PTR [edi-0x53d86b76]
  422290:	inc    eax
  422291:	lock rcl DWORD PTR [esi-0x33efd792],0x5f
  422299:	loopne 0x42229a
  42229b:	rcl    DWORD PTR [esi],cl
  42229d:	inc    eax
  42229e:	pop    es
  42229f:	or     BYTE PTR [edx],bl
  4222a1:	dec    esp
  4222a2:	ja     0x4222dd
  4222a4:	push   ss
  4222a5:	inc    edx
  4222a6:	xlat   BYTE PTR ds:[ebx]
  4222a7:	mov    DWORD PTR [ebp+0x9383251],eax
  4222ad:	or     edx,esp
  4222af:	xlat   BYTE PTR ds:[ebx]
  4222b0:	cli    
  4222b1:	inc    edi
  4222b2:	xchg   ecx,eax
  4222b3:	daa    
  4222b4:	sahf   
  4222b5:	mov    eax,ds:0xdb4c5ae3
  4222ba:	in     eax,0xde
  4222bc:	add    dh,BYTE PTR [edx+0x54]
  4222bf:	or     al,BYTE PTR [edx+0x55]
  4222c2:	sub    BYTE PTR [edx+0x55068bbf],dl
  4222c8:	xchg   esi,eax
  4222c9:	or     edi,edi
  4222cb:	aas    
  4222cc:	cmp    al,0x1
  4222ce:	adc    al,0x30
  4222d0:	xor    al,0xc
  4222d2:	or     eax,0x93f2ba08
  4222d7:	mov    ch,0xf0
  4222d9:	or     al,0x48
  4222db:	xchg   ecx,eax
  4222dc:	pusha  
  4222dd:	mov    ch,0xa0
  4222df:	fisub  DWORD PTR [ebx-0x6d]
  4222e2:	mov    al,BYTE PTR [eax]
  4222e4:	and    DWORD PTR [ebx+0x1b],esi
  4222e7:	jbe    0x4222aa
  4222e9:	xchg   ecx,eax
  4222ea:	loope  0x4222d9
  4222ec:	ret    
  4222ed:	out    dx,al
  4222ee:	(bad)  
  4222ef:	jle    0x4222d9
  4222f1:	pop    es
  4222f2:	daa    
  4222f3:	jecxz  0x422333
  4222f5:	stos   BYTE PTR es:[edi],al
  4222f6:	aas    
  4222f7:	mov    al,0xb5
  4222f9:	arpl   WORD PTR [ebx],bp
  4222fb:	mov    ch,0x87
  4222fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222fe:	js     0x4222a7
  422300:	mov    dl,0x5
  422302:	inc    eax
  422303:	xchg   BYTE PTR [edi+0x3e],dl
  422306:	lods   al,BYTE PTR ds:[esi]
  422307:	push   0xf1165bfa
  42230c:	aam    0x83
  42230e:	shl    ch,0xee
  422311:	xchg   ecx,eax
  422312:	inc    ebp
  422313:	dec    ecx
  422314:	cmc    
  422315:	pop    esi
  422316:	sub    al,0xc6
  422318:	adc    eax,esi
  42231a:	sbb    eax,0x22041427
  42231f:	inc    esi
  422320:	jecxz  0x4222a9
  422322:	add    al,bh
  422324:	je     0x422395
  422326:	pop    esi
  422327:	lods   al,BYTE PTR ds:[esi]
  422328:	fadd   QWORD PTR [ecx]
  42232a:	xchg   ebx,eax
  42232b:	mov    dh,0x86
  42232d:	ret    
  42232e:	jg     0x4223af
  422330:	jne    0x4223b0
  422332:	adc    DWORD PTR [esi-0x3b8c3f31],edi
  422338:	dec    esp
  422339:	enter  0x6b01,0x94
  42233d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42233f:	jp     0x422337
  422341:	or     ecx,DWORD PTR [edx-0x4c25773b]
  422347:	loope  0x4222e0
  422349:	sub    BYTE PTR [eax+0x6f],al
  42234c:	(bad)  
  42234d:	and    eax,0x808e8c3c
  422352:	or     al,0x1a
  422354:	mov    al,0x16
  422356:	jo     0x4222e4
  422358:	gs lahf 
  42235a:	cmc    
  42235b:	pop    esi
  42235c:	outs   dx,DWORD PTR ds:[esi]
  42235d:	int3   
  42235e:	cmp    BYTE PTR [eax+0x0],dl
  422361:	or     BYTE PTR [ecx-0x28bae079],ah
  422367:	sub    DWORD PTR [ecx-0x73ba3a76],edx
  42236d:	pop    ebx
  42236e:	stos   DWORD PTR es:[edi],eax
  42236f:	dec    esi
  422370:	mov    edi,0x6a6f8cb4
  422375:	add    DWORD PTR [edx*8+0x1c6196ab],ebp
  42237c:	add    BYTE PTR [edx],0x32
  42237f:	enter  0x7efb,0xf8
  422383:	or     dl,BYTE PTR [ecx+0x3]
  422386:	retf   0x3bb
  422389:	fcmovb st,st(1)
  42238b:	sahf   
  42238c:	adc    BYTE PTR [esi+esi*8+0x78],dl
  422390:	pop    esp
  422391:	ja     0x42233c
  422393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422394:	sub    eax,0x6e2d2f64
  422399:	out    0x5f,eax
  42239b:	mov    ch,0x97
  42239d:	push   ebx
  42239e:	sahf   
  42239f:	ss jecxz 0x42233b
  4223a2:	icebp  
  4223a3:	jno    0x422349
  4223a5:	and    esp,DWORD PTR [eax-0x2e4c375c]
  4223ab:	fdiv   st,st(4)
  4223ad:	(bad)  
  4223ae:	(bad)  
	...
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	adc    DWORD PTR [esi],ecx
  4223bc:	or     dl,ch
  4223be:	pop    ds
  4223bf:	out    dx,al
  4223c0:	repz jmp FWORD PTR [ecx-0x6c]
  4223c4:	fucomp st(0)
  4223c6:	inc    esp
  4223c7:	jl     0x4223a6
  4223c9:	into   
  4223ca:	in     al,dx
  4223cb:	sahf   
  4223cc:	add    DWORD PTR [eax],eax
  4223ce:	inc    BYTE PTR [ecx]
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	data16 cmc 
  4223d4:	jmp    0x7e1b:0x6dfb64b7
  4223db:	mov    dl,BYTE PTR [edi]
  4223dd:	pop    ecx
  4223de:	cdq    
  4223df:	mov    bh,0x3a
  4223e1:	and    al,BYTE PTR ds:0xa8b3f030
  4223e7:	ins    BYTE PTR es:[edi],dx
  4223e8:	dec    edi
  4223e9:	test   dl,bl
  4223eb:	call   0xb38f:0x4aa314b6
  4223f2:	cmp    esp,DWORD PTR [edx]
  4223f4:	jo     0x4223e0
  4223f6:	jmp    0xf09245f
  4223fb:	mov    ebx,0xf3dba58
  422400:	call   0x609b:0x20173be2
  422407:	dec    eax
  422408:	xor    dh,BYTE PTR [ecx+0x44]
  42240b:	gs jnp 0x42244c
  42240e:	dec    ebp
  42240f:	xor    ebp,esi
  422411:	sbb    al,0xc1
  422413:	mov    dh,0x79
  422415:	xor    eax,0x5dbf473a
  42241a:	push   ecx
  42241b:	sbb    eax,DWORD PTR [ebx-0x28]
  42241e:	or     ch,cl
  422420:	jb     0x422479
  422422:	popf   
  422423:	mov    bl,0xb7
  422425:	push   es
  422426:	dec    esp
  422427:	xchg   ecx,eax
  422428:	cmp    DWORD PTR es:[ebp-0x56],esi
  42242c:	cdq    
  42242d:	dec    ebx
  42242e:	or     esi,edi
  422430:	fist   WORD PTR [edx-0x76]
  422433:	add    DWORD PTR [ecx+0x1f],edx
  422436:	fninit 
  422438:	pop    ebp
  422439:	mov    gs,WORD PTR ds:0xf6f2156
  42243f:	ja     0x4223da
  422441:	jae    0x4223d8
  422443:	fistp  DWORD PTR [edx]
  422446:	mov    eax,0x8dd6e4a2
  42244b:	xor    DWORD PTR [eax-0x7a],ecx
  42244e:	aad    0xb1
  422450:	int    0xa1
  422452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422453:	dec    edx
  422454:	mov    esi,0x2c2c5af7
  422459:	(bad)  
  42245a:	mov    DWORD PTR [ecx+0x68],ebx
  42245d:	es mov dl,0x67
  422460:	arpl   WORD PTR [edx+0x29],sp
  422463:	shr    DWORD PTR [edx],cl
  422465:	aad    0x3c
  422467:	adc    BYTE PTR [ecx-0x64],ah
  42246a:	fbstp  TBYTE PTR [ebp+0x160a7c8e]
  422470:	cwde   
  422471:	jmp    0x42243a
  422473:	jge    0x4224f0
  422475:	inc    ecx
  422476:	ins    DWORD PTR es:[edi],dx
  422477:	sbb    al,bl
  422479:	scas   eax,DWORD PTR es:[edi]
  42247a:	mov    edi,?
  42247c:	xchg   edx,eax
  42247d:	aam    0x98
  42247f:	xor    DWORD PTR [edi],0xbf512a8e
  422485:	aaa    
  422486:	adc    BYTE PTR [ebx+0x1e],ch
  422489:	jbe    0x4224d6
  42248b:	push   ss
  42248c:	cmp    edi,ecx
  42248e:	in     eax,0x21
  422490:	add    BYTE PTR [ebp+0x34],dh
  422493:	cmp    ah,ah
  422495:	push   ebx
  422496:	sub    eax,0x92632a93
  42249b:	lds    esi,FWORD PTR [eax]
  42249d:	mov    al,0x8b
  42249f:	cmp    edi,ebx
  4224a1:	jae    0x42244a
  4224a3:	daa    
  4224a4:	ret    0x76ae
  4224a7:	ds mov ch,0x3b
  4224aa:	cmp    eax,0x88a100c8
  4224af:	sti    
  4224b0:	jecxz  0x4224f9
  4224b2:	fnstsw WORD PTR [ecx]
  4224b4:	retf   
  4224b5:	cmovg  esi,DWORD PTR fs:[eax]
  4224b9:	aaa    
  4224ba:	xchg   esp,eax
  4224bb:	cmp    al,bh
  4224bd:	(bad)  
  4224be:	mov    cl,BYTE PTR [ebx+0x49]
  4224c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c2:	stos   BYTE PTR es:[edi],al
  4224c3:	ins    DWORD PTR es:[edi],dx
  4224c4:	or     ebx,DWORD PTR [esp+edx*2-0xe552da3]
  4224cb:	and    ch,cl
  4224cd:	sahf   
  4224ce:	pop    es
  4224cf:	imul   edx,esi,0x5dad7b38
  4224d5:	xchg   BYTE PTR [ecx-0x3],bh
  4224d8:	or     bh,BYTE PTR [edx+ebp*1-0x3593fdf1]
  4224df:	adc    dl,BYTE PTR [ebx+0x46]
  4224e2:	in     al,0xe4
  4224e4:	shr    DWORD PTR [edi],0xc3
  4224e7:	call   0xf029:0x720c3b4e
  4224ee:	idiv   DWORD PTR [eax-0x72]
  4224f1:	xchg   ah,ah
  4224f3:	test   ebp,0xd0fd837c
  4224f9:	jno    0x42249a
  4224fb:	push   ebp
  4224fc:	gs std 
  4224fe:	scas   al,BYTE PTR es:[edi]
  4224ff:	jne    0x4224b9
  422501:	jmp    0xd8f88a01
  422506:	aad    0xe6
  422508:	or     ch,BYTE PTR [esi-0x27872cee]
  42250e:	push   cs
  42250f:	dec    edi
  422510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422511:	sub    eax,DWORD PTR [ebp+0x3b]
  422514:	pusha  
  422515:	cmp    BYTE PTR [ecx],ch
  422517:	push   es
  422518:	xor    DWORD PTR [eax+0x1c],esp
  42251b:	or     bh,0x59
  42251e:	mov    bh,0x18
  422520:	(bad)  [esi]
  422522:	loop   0x4224f6
  422524:	or     BYTE PTR [eax-0x47],dh
  422527:	lea    eax,[edx+0x3795d92b]
  42252d:	push   ecx
  42252e:	(bad)  [edi-0x55]
  422531:	or     dl,BYTE PTR [esi]
  422533:	sbb    eax,0xb06f6c03
  422538:	repnz xor BYTE PTR [edx],ch
  42253b:	stos   BYTE PTR es:[edi],al
  42253c:	xlat   BYTE PTR ds:[ebx]
  42253d:	lods   al,BYTE PTR ds:[esi]
  42253e:	(bad)  
  42253f:	int    0xda
  422541:	iret   
  422542:	xor    DWORD PTR [ecx],0x11
  422545:	xchg   ebp,eax
  422546:	out    dx,al
  422547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422548:	pop    esp
  422549:	xchg   esp,eax
  42254a:	iret   
  42254b:	seto   BYTE PTR [esi-0x1d625790]
  422552:	fadd   DWORD PTR [ebp+0x595d8517]
  422558:	out    dx,eax
  422559:	push   0x7d
  42255b:	mov    ?,WORD PTR [edx-0x7a]
  42255e:	jecxz  0x422520
  422560:	xchg   edi,eax
  422561:	aam    0x41
  422563:	add    BYTE PTR [ebp-0x47],al
  422566:	jns    0x42256e
  422568:	jo     0x422508
  42256a:	sub    edx,ecx
  42256c:	mov    edi,0x68b3eb43
  422571:	jae    0x422519
  422573:	mov    bl,0xb3
  422575:	sbb    DWORD PTR [edx-0x26],edx
  422578:	scas   al,BYTE PTR es:[di]
  42257a:	cmp    ebp,esi
  42257c:	push   ebx
  42257d:	lds    ecx,FWORD PTR [edi-0x442a19e7]
  422583:	shr    DWORD PTR [ecx-0x5e8651dd],cl
  422589:	das    
  42258a:	shl    dh,0xbc
  42258d:	jb     0x422533
  42258f:	add    cl,cl
  422591:	lds    edi,FWORD PTR [ebp-0x33]
  422594:	push   ebx
  422595:	pop    edi
  422597:	dec    edi
  422598:	add    edi,DWORD PTR [ebx]
  42259a:	and    BYTE PTR [ecx],dh
  42259c:	sub    al,0xdf
  42259e:	in     al,0x6a
  4225a0:	jbe    0x42253f
  4225a2:	out    dx,al
  4225a3:	and    BYTE PTR [esi+0x44e6dca6],ah
  4225a9:	sahf   
  4225aa:	lods   eax,DWORD PTR ds:[esi]
  4225ab:	fimul  WORD PTR [edx-0x7b]
  4225ae:	add    al,0xae
  4225b0:	mov    edi,DWORD PTR [ecx+0x7b]
  4225b3:	cmp    al,dh
  4225b5:	sti    
  4225b6:	xor    DWORD PTR [esi+eiz*2+0x7e],ecx
  4225ba:	mov    bh,0x45
  4225bc:	add    ebp,DWORD PTR [ebp-0x74bea895]
  4225c2:	or     ebx,DWORD PTR [esi+eax*2+0x62ab16db]
  4225c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ca:	adc    eax,0xcdb7b466
  4225cf:	sbb    BYTE PTR [eax],al
	...
  4225d9:	add    cl,cl
  4225db:	xchg   esi,eax
  4225dc:	ins    DWORD PTR es:[edi],dx
  4225dd:	mov    dh,0x7f
  4225df:	(bad)  
  4225e0:	(bad)  
  4225e2:	out    0x3f,al
  4225e4:	nop
  4225e5:	sbb    edi,DWORD PTR [ebp-0x15412fea]
  4225eb:	mov    al,ds:0x1fe0001
  4225f0:	add    BYTE PTR [eax],al
  4225f2:	fcomp  DWORD PTR [ecx+0xbfd19a0]
  4225f8:	xor    al,0x2b
  4225fa:	inc    ebx
  4225fb:	mov    al,0xa3
  4225fd:	cmp    eax,0x3ada9274
  422602:	mov    WORD PTR [edx+0x4e],cs
  422605:	daa    
  422606:	push   edi
  422607:	rol    BYTE PTR [esi+0x77],cl
  42260a:	adc    BYTE PTR [ecx+0x38],0x6c
  42260e:	ror    BYTE PTR [edx],0x7b
  422611:	gs mov ebp,0xa784e597
  422617:	push   cs
  422618:	adc    DWORD PTR [ebx],0xffffff88
  42261b:	enter  0xb552,0xd5
  42261f:	xlat   BYTE PTR ds:[ebx]
  422620:	mov    ah,0xc3
  422622:	jb     0x422654
  422624:	repnz cs cwde 
  422627:	out    dx,al
  422628:	pop    ecx
  422629:	xor    BYTE PTR [edi],cl
  42262b:	mov    al,0xd4
  42262d:	and    esp,edi
  42262f:	arpl   WORD PTR [ecx-0x64dead05],bp
  422635:	mov    esi,DWORD PTR [ecx+0x15]
  422638:	cmp    eax,0x14e2c0a1
  42263d:	mov    fs,WORD PTR ds:0xc9c24ac5
  422643:	inc    ebp
  422644:	sar    DWORD PTR [eax+0x198d199],0x9d
  42264b:	cli    
  42264c:	loope  0x422607
  42264e:	xchg   esp,eax
  42264f:	int    0xf2
  422651:	ret    
  422652:	imul   ebx,ebx,0xa0c515a4
  422658:	push   cs
  422659:	nop
  42265a:	push   ebx
  42265b:	arpl   WORD PTR [edx-0x31],ax
  42265e:	jmp    0xc6e5:0x706e7e3a
  422665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422666:	cmp    eax,0x186524d6
  42266b:	or     ecx,DWORD PTR [ecx+0x0]
  42266e:	stos   DWORD PTR es:[edi],eax
  42266f:	sbb    eax,0xc32b7256
  422674:	xor    eax,0x20a4d6eb
  422679:	mov    ah,0xe
  42267b:	push   es
  42267c:	dec    esi
  42267d:	mov    BYTE PTR ds:0xa3ba48f2,ah
  422683:	push   ds
  422684:	adc    ecx,DWORD PTR [ebp+0x4a5ce457]
  42268a:	mov    gs,WORD PTR [eax+eax*8+0x17]
  42268e:	iret   
  42268f:	dec    edi
  422690:	jns    0x422635
  422692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422693:	pop    DWORD PTR [eax-0x45]
  422696:	in     al,dx
  422697:	add    BYTE PTR [ebx],ah
  422699:	stos   DWORD PTR es:[edi],eax
  42269a:	mov    esp,0xd1bf4c5d
  42269f:	adc    DWORD PTR [ebx+ebx*4],esi
  4226a2:	jecxz  0x422700
  4226a4:	data16 xchg BYTE PTR [ebx+eiz*2],dl
  4226a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a9:	mov    bl,0x6
  4226ab:	ror    edi,cl
  4226ad:	dec    ebx
  4226ae:	sbb    ah,BYTE PTR ds:0x1fe60d94
  4226b4:	inc    ebx
  4226b5:	mov    esi,0x847e9c9f
  4226ba:	stos   DWORD PTR es:[edi],eax
  4226bb:	mov    eax,ds:0xac6e116e
  4226c0:	scas   al,BYTE PTR es:[edi]
  4226c1:	inc    edi
  4226c2:	aad    0x31
  4226c4:	mov    edi,0x43bdddd2
  4226c9:	popa   
  4226ca:	jge    0x4226c4
  4226cc:	imul   ecx,DWORD PTR [ebx+ebx*1-0x30bfb5e7],0xd8f4d63c
  4226d7:	mov    ebx,0x9ab2b2fb
  4226dc:	push   ebx
  4226dd:	push   cs
  4226de:	mov    cl,BYTE PTR [ecx+0x44]
  4226e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e2:	ja     0x42266b
  4226e4:	jmp    0x6bf5e33d
  4226e9:	addr16 out 0xb2,al
  4226ec:	fwait
  4226ed:	loopne 0x422747
  4226ef:	dec    ebx
  4226f0:	dec    ebp
  4226f1:	bound  edx,QWORD PTR [edi+ebp*8]
  4226f4:	fistp  QWORD PTR [esi+0x4e1f5483]
  4226fa:	adc    eax,0x19d0a8f8
  4226ff:	call   0x930c:0x3b5401ad
  422706:	jb     0x422694
  422708:	fwait
  422709:	scas   al,BYTE PTR es:[edi]
  42270a:	ss push edx
  42270c:	mov    ch,0x46
  42270e:	imul   esp,DWORD PTR [edi+0x23639c03],0xffffffb5
  422715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422716:	hlt    
  422717:	test   al,0x93
  42271a:	xor    DWORD PTR [ecx],0xffffffd5
  42271d:	hlt    
  42271e:	cs jge 0x42279c
  422721:	ret    
  422722:	dec    ebx
  422723:	test   eax,0xff32e656
  422728:	sub    al,0x2c
  42272a:	push   ss
  42272b:	(bad)  
  42272c:	es in  al,0x91
  42272f:	mov    bh,0x2d
  422731:	scas   al,BYTE PTR es:[edi]
  422732:	int    0xaf
  422734:	mov    ecx,0x646a366b
  422739:	mov    al,0x4f
  42273b:	sub    DWORD PTR [ecx],esp
  42273d:	mov    bh,BYTE PTR [eax+edi*4+0x25]
  422741:	sbb    DWORD PTR [eax+0x31],edx
  422744:	mov    ds:0x58f14231,eax
  422749:	push   ds
  42274a:	in     eax,0x27
  42274c:	fnstsw WORD PTR [esi-0x9]
  42274f:	lock push ebx
  422751:	dec    esp
  422752:	pop    esi
  422753:	mov    ebp,0xf1e5bfd9
  422758:	cdq    
  422759:	fucomip st,st(1)
  42275b:	mov    eax,ds:0xca10787
  422760:	packssdw mm4,QWORD PTR [ecx+0x1f]
  422764:	stc    
  422765:	cmp    esi,DWORD PTR [ebp-0x481319e6]
  42276b:	mov    ebp,0x3a6f5bb4
  422770:	dec    esp
  422771:	clc    
  422772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422773:	mov    al,ds:0x669718e4
  422778:	sub    eax,0x9dabca3e
  42277d:	and    eax,0x3f982514
  422782:	call   0xbd007dd8
  422787:	adc    BYTE PTR [ecx],ah
  422789:	leave  
  42278a:	test   eax,0x4fd1dc31
  42278f:	and    esi,DWORD PTR [esi+eax*1]
  422792:	ret    
  422793:	inc    ecx
  422794:	push   esi
  422795:	retf   
  422796:	mov    ebp,DWORD PTR [esi+0x348a17d7]
  42279c:	ins    BYTE PTR es:[edi],dx
  42279d:	mov    cl,0x93
  42279f:	mov    edi,0xbbe2e79b
  4227a4:	mov    edi,0x7d359d8a
  4227a9:	pop    edi
  4227aa:	jne    0x42274b
  4227ac:	(bad)  [eax-0x14]
  4227af:	scas   al,BYTE PTR es:[edi]
  4227b0:	mov    ds:0x36118eca,eax
  4227b5:	add    al,0x64
  4227b7:	sbb    eax,0x995b7c15
  4227bc:	xor    BYTE PTR [edi+ebp*4],dh
  4227bf:	sahf   
  4227c0:	gs sub eax,0x60ad2301
  4227c6:	je     0x422794
  4227c8:	jle    0x422793
  4227ca:	push   edi
  4227cb:	mov    eax,0x9da39bbb
  4227d0:	jp     0x4227f1
  4227d2:	push   esi
  4227d3:	xchg   DWORD PTR [ecx],ecx
  4227d5:	mov    cl,0x6b
  4227d7:	adc    eax,edi
  4227d9:	add    ebp,ebx
  4227db:	gs leave 
  4227dd:	jmp    0x3bad:0xfc7ddbe8
  4227e4:	inc    eax
  4227e5:	jb     0x42280d
  4227e7:	aam    0xbf
  4227e9:	lock addr16 sbb dh,dl
  4227ed:	push   ecx
  4227ee:	inc    esp
  4227ef:	iret   
	...
  4227f8:	add    BYTE PTR [eax],al
  4227fa:	dec    eax
  4227fb:	out    dx,eax
  4227fc:	ja     0x422869
  4227fe:	idiv   ebx
  422800:	pop    esp
  422801:	out    dx,eax
  422802:	cmp    DWORD PTR [ecx-0x6b11df0],ebx
  422808:	sub    dh,al
  42280a:	call   0xfe4229b1
  42280f:	add    DWORD PTR [eax],eax
  422811:	add    BYTE PTR [ecx-0x644465ab],bl
  422817:	imul   esp,DWORD PTR [eax-0xb1e2d33],0x55
  42281e:	mov    DWORD PTR [edx+0x2703c20a],edx
  422824:	(bad)  
  422825:	pop    edi
  422826:	dec    ecx
  422827:	cs and ecx,eax
  42282a:	scas   al,BYTE PTR es:[edi]
  42282b:	retf   0x8d2f
  42282e:	nop
  42282f:	or     BYTE PTR [ebx],bl
  422831:	pop    ds
  422832:	mov    eax,ds:0x50f17fe4
  422837:	out    0x21,al
  422839:	mov    esi,0x65522541
  42283e:	rol    BYTE PTR [ecx+edx*1],1
  422841:	lock adc ebp,0xfffffffd
  422845:	mov    ebx,edx
  422847:	imul   esp,DWORD PTR [edi-0x22d6a331],0xff04d3b
  422851:	lock push ebx
  422853:	sub    al,0x92
  422855:	xchg   edi,eax
  422856:	(bad)  
  422857:	repnz das 
  422859:	dec    edx
  42285a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42285b:	jp     0x4227e4
  42285d:	gs mov esi,0x5fc75f60
  422863:	push   ss
  422864:	sbb    cl,BYTE PTR [edi+0x7a]
  422867:	sbb    dl,al
  422869:	mov    bh,0xdd
  42286b:	cmp    eax,0x87bf6e50
  422870:	mov    ah,0xdd
  422872:	adc    esi,ebx
  422874:	dec    esi
  422875:	and    bh,BYTE PTR [esi]
  422877:	cs stc 
  422879:	adc    BYTE PTR [ebx-0x42],al
  42287c:	cdq    
  42287d:	adc    eax,0xe2f20b93
  422882:	xchg   esi,eax
  422883:	add    al,0xb1
  422885:	mov    BYTE PTR ds:0x41568aa6,ch
  42288b:	mov    ?,ecx
  42288d:	and    eax,0x5ffe7b1a
  422892:	jmp    0x31c4:0x8135be92
  422899:	push   0x9f0ff4b1
  42289e:	lds    eax,FWORD PTR [ecx+0x4e]
  4228a1:	dec    ebx
  4228a2:	push   ebp
  4228a3:	lods   eax,DWORD PTR ds:[esi]
  4228a4:	out    dx,eax
  4228a5:	fldcw  WORD PTR [ecx-0x57]
  4228a8:	jae    0x422902
  4228aa:	ror    BYTE PTR [esi-0x5a7635ff],1
  4228b0:	(bad)  
  4228b1:	mov    ecx,0xdc708767
  4228b6:	fld    TBYTE PTR [edi]
  4228b8:	and    BYTE PTR [ecx-0x6480418d],bh
  4228be:	push   esp
  4228bf:	or     dh,BYTE PTR [edx+esi*2-0x45b1a5ad]
  4228c6:	xor    dh,BYTE PTR [ecx-0x74]
  4228c9:	enter  0xa9e7,0x96
  4228cd:	pop    ebx
  4228ce:	das    
  4228cf:	push   esp
  4228d0:	push   ds
  4228d1:	out    0xc3,al
  4228d3:	push   esi
  4228d4:	push   0x69
  4228d6:	(bad)  
  4228d8:	and    BYTE PTR [esi+0x66],bh
  4228db:	icebp  
  4228dc:	xchg   BYTE PTR [edx-0x1],al
  4228df:	push   esi
  4228e0:	push   esi
  4228e1:	retf   
  4228e2:	retf   0x5c9a
  4228e5:	push   ebx
  4228e6:	arpl   ax,cx
  4228e8:	jae    0x42291b
  4228ea:	jo     0x42288d
  4228ec:	dec    ecx
  4228ed:	iret   
  4228ee:	lea    edi,[edx+0x419a7bed]
  4228f4:	pop    ebp
  4228f5:	mov    eax,0x774de24
  4228fa:	sbb    ch,dl
  4228fc:	retf   
  4228fd:	fnstsw WORD PTR [edx]
  4228ff:	aas    
  422900:	sbb    al,0xc2
  422902:	pop    ebp
  422903:	jmp    0x4891c341
  422908:	dec    ebx
  422909:	push   cs
  42290a:	and    al,0xe9
  42290c:	jno    0x422940
  42290e:	push   edi
  42290f:	shr    al,0x9f
  422912:	inc    ebx
  422913:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  422915:	rol    DWORD PTR [esi+edx*1+0x60],1
  422919:	cdq    
  42291a:	ja     0x4228d8
  42291c:	add    BYTE PTR [eax+0x21],al
  42291f:	nop
  422920:	inc    esp
  422921:	cmp    cl,dh
  422923:	jp     0x422966
  422925:	sub    ebx,DWORD PTR [ebx+0x6740f257]
  42292b:	adc    DWORD PTR [edx],esi
  42292d:	sti    
  42292e:	call   ebp
  422930:	jge    0x4228ee
  422932:	dec    edi
  422933:	mov    dh,0xfa
  422935:	setnp  BYTE PTR [edx+0x70]
  422939:	fisub  DWORD PTR [esi]
  42293b:	int3   
  42293c:	sub    ebp,ebp
  42293e:	adc    al,0x24
  422940:	or     al,0x12
  422942:	outs   dx,BYTE PTR ds:[esi]
  422943:	cmp    DWORD PTR [ebx],edx
  422945:	(bad)  
  422946:	inc    ebp
  422947:	mov    ebp,0xad168cf
  42294c:	jo     0x4229ba
  42294e:	jecxz  0x4228ec
  422950:	or     al,0xb9
  422952:	test   DWORD PTR [ebp+0x3089b0a7],ebx
  422958:	adc    ebp,ebx
  42295a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42295b:	dec    esp
  42295c:	mov    dh,0xc7
  42295e:	je     0x42296d
  422960:	jno    0x4229b5
  422962:	hlt    
  422963:	cld    
  422964:	(bad)  
  422965:	shl    BYTE PTR [esi],0x5f
  422968:	in     al,0x18
  42296a:	pop    edi
  42296b:	pop    ss
  42296c:	or     BYTE PTR [eax+0x23],al
  42296f:	cmp    DWORD PTR [edx-0x57],ebp
  422972:	adc    al,0x5a
  422974:	mov    cl,0xbf
  422976:	ins    DWORD PTR es:[edi],dx
  422977:	test   DWORD PTR [edx-0x20f6a5],0xf0e058b8
  422981:	cmp    edx,DWORD PTR [edx-0x14]
  422984:	xor    ah,dl
  422986:	sar    DWORD PTR [edx+ebx*2-0x6533e379],cl
  42298d:	dec    esp
  42298e:	xor    BYTE PTR [ebx+0x48af670],bl
  422994:	imul   eax,DWORD PTR [edx],0xffffff9f
  422997:	loope  0x422a06
  422999:	xor    ah,al
  42299b:	sti    
  42299c:	mov    DWORD PTR [edi+0x6c],0x565858a1
  4229a3:	cmp    esi,DWORD PTR [ebx]
  4229a5:	(bad)  
  4229a7:	ja     0x422a0c
  4229a9:	ret    
  4229aa:	pop    ecx
  4229ab:	cli    
  4229ac:	add    DWORD PTR [ecx+0x23ac4cf4],ebx
  4229b2:	and    DWORD PTR [ecx+0x3a6cb38b],ebx
  4229b8:	leave  
  4229b9:	mov    WORD PTR [edi+0x63e1e32c],ss
  4229bf:	mov    ch,0x7b
  4229c1:	mov    al,BYTE PTR [edi+0x16]
  4229c4:	sub    DWORD PTR [esi],edi
  4229c6:	jns    0x42297d
  4229c8:	scas   al,BYTE PTR es:[edi]
  4229c9:	mov    edx,0xdd614a02
  4229ce:	mov    bh,BYTE PTR ds:0xf062fe59
  4229d4:	cwde   
  4229d5:	jne    0x422984
  4229d7:	out    0xb1,eax
  4229d9:	lods   eax,DWORD PTR ds:[esi]
  4229da:	add    esp,esp
  4229dc:	or     esp,DWORD PTR [edx]
  4229de:	(bad)  
  4229df:	imul   ebp,DWORD PTR [edi+0x55],0xf0903804
  4229e6:	mov    ?,WORD PTR [ebx+0x6c]
  4229e9:	mov    ecx,0x82c43896
  4229ee:	or     BYTE PTR [ebx],dl
  4229f0:	je     0x4229e5
  4229f2:	jbe    0x42299f
  4229f4:	dec    edi
  4229f5:	xor    al,ah
  4229f7:	cmp    eax,edi
  4229f9:	pop    gs
  4229fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229fc:	dec    edi
  4229fd:	push   es
  4229fe:	add    eax,edx
  422a00:	nop
  422a01:	jle    0x4229a5
  422a03:	sbb    esi,ebx
  422a05:	mov    BYTE PTR [edx+edi*1],0x9c
  422a09:	push   ebx
  422a0a:	jns    0x422a1f
  422a0c:	addr16 add al,0xfb
  422a0f:	cmc    
	...
  422a18:	add    BYTE PTR [eax],al
  422a1a:	mov    al,0xe3
  422a1c:	pop    edx
  422a1d:	jecxz  0x422a7a
  422a1f:	sti    
  422a20:	mov    ecx,0xeb2b3af3
  422a25:	inc    ecx
  422a26:	repnz (bad)
  422a29:	mov    edi,0x1a4e6
  422a2e:	inc    BYTE PTR [ecx]
  422a30:	add    BYTE PTR [eax],al
  422a32:	cli    
  422a33:	sbb    eax,0x82904cc1
  422a38:	ret    
  422a39:	adc    eax,0xe29603d9
  422a3e:	xor    DWORD PTR [ebp+0xd9f5641],edi
  422a44:	sqrtps xmm4,xmm5
  422a47:	sub    esp,DWORD PTR cs:[edx+0x6cec6d26]
  422a4e:	cmp    edx,ecx
  422a50:	jl     0x422a31
  422a52:	fs xchg ebx,eax
  422a54:	push   esi
  422a55:	mov    ebx,0xcf0e5965
  422a5a:	push   es
  422a5b:	mov    ah,0xe2
  422a5d:	push   0x40912e37
  422a62:	icebp  
  422a63:	pop    edx
  422a64:	xrstors [edi-0x57]
  422a68:	xchg   edx,eax
  422a69:	jmp    0x3261984f
  422a6e:	int    0xae
  422a70:	jmp    0x886e88f4
  422a75:	push   0xffffff97
  422a77:	push   ebx
  422a78:	inc    eax
  422a79:	lea    edx,[ebp-0x32306917]
  422a7f:	repz sub eax,0x288e1de
  422a85:	mov    eax,ds:0x2434032c
  422a8a:	loop   0x422a9f
  422a8c:	adc    bl,cl
  422a8e:	ss mov ebx,0x3034c02c
  422a94:	add    DWORD PTR [ebx-0x29],ebp
  422a97:	jge    0x422b13
  422a99:	pop    eax
  422a9a:	mov    ds:0xcde54a8a,al
  422a9f:	mov    bl,0x81
  422aa1:	lea    ebx,ds:[ecx+ebp*4]
  422aa5:	pop    es
  422aa6:	cld    
  422aa7:	jb     0x422a50
  422aa9:	mov    ah,0x98
  422aab:	mov    dh,0x97
  422aad:	adc    al,0xe2
  422aaf:	inc    edi
  422ab0:	ret    
  422ab1:	bnd jp 0x422a8a
  422ab4:	dec    edx
  422ab5:	pop    edi
  422ab6:	es inc esi
  422ab8:	jnp    0x422a61
  422aba:	mul    BYTE PTR [ebx-0x7772498a]
  422ac0:	cld    
  422ac1:	retf   
  422ac2:	xor    eax,DWORD PTR [ebx+0x27822664]
  422ac8:	sbb    al,0x9a
  422aca:	cmp    al,0xf
  422acc:	dec    ebx
  422acd:	mov    esp,DWORD PTR [ebx]
  422acf:	leave  
  422ad0:	lea    eax,[edx+0x48]
  422ad3:	jge    0x422b2e
  422ad5:	neg    ecx
  422ad7:	and    esi,esi
  422ad9:	pop    ebx
  422ada:	outs   dx,BYTE PTR ds:[esi]
  422adb:	mov    dl,0xf2
  422add:	inc    eax
  422ade:	xor    ch,BYTE PTR [edi+0x43acb023]
  422ae4:	fnsave [edx+0x6d2565bf]
  422aea:	sub    eax,0xf82511de
  422aef:	mov    al,0xa2
  422af1:	inc    edi
  422af2:	shl    DWORD PTR [ebx+0x5d],1
  422af5:	out    dx,al
  422af6:	aad    0xbf
  422af8:	popa   
  422af9:	sbb    al,0x12
  422afb:	mov    ds:0x38c6dd6f,eax
  422b00:	inc    eax
  422b01:	das    
  422b02:	jmp    0xbb907654
  422b07:	xlat   BYTE PTR ds:[ebx]
  422b08:	cs (bad) 
  422b0a:	cs hlt 
  422b0c:	imul   edx,DWORD PTR [ecx],0xc3e0a377
  422b12:	inc    eax
  422b13:	mov    eax,0x887c3da6
  422b18:	je     0x422aef
  422b1a:	ficomp DWORD PTR [eax+edx*2-0x78]
  422b1e:	shl    edi,cl
  422b20:	sub    ebp,DWORD PTR [ecx]
  422b22:	mov    ch,0x4
  422b24:	iret   
  422b25:	(bad)  
  422b27:	xor    edx,DWORD PTR [edx-0x3d21b5f7]
  422b2d:	cdq    
  422b2e:	ja     0x422ad7
  422b30:	sbb    DWORD PTR [esi+eax*4],edx
  422b33:	int3   
  422b34:	inc    esp
  422b35:	pop    ds
  422b36:	lods   eax,DWORD PTR ds:[esi]
  422b37:	cwde   
  422b38:	int3   
  422b39:	push   ebx
  422b3a:	loop   0x422ac6
  422b3c:	ins    DWORD PTR es:[edi],dx
  422b3d:	jnp    0x422b74
  422b3f:	rol    BYTE PTR [edi],0x20
  422b42:	mov    DWORD PTR [edx-0x70],ecx
  422b45:	mov    dl,BYTE PTR [ebx+0x3f09efd]
  422b4b:	or     eax,0x18a6478c
  422b50:	icebp  
  422b51:	fld    st(4)
  422b53:	shr    DWORD PTR [eax],1
  422b55:	pop    edi
  422b56:	push   ecx
  422b57:	mov    ecx,0x70f5efdc
  422b5c:	mov    eax,0x41de9338
  422b61:	push   eax
  422b62:	adc    DWORD PTR [edx-0x54b0ab67],edx
  422b68:	sbb    ecx,0xffffffba
  422b6b:	scas   eax,DWORD PTR es:[edi]
  422b6c:	mov    dl,0xed
  422b6e:	inc    esp
  422b6f:	jg     0x422b27
  422b71:	and    DWORD PTR [eiz*4-0x50aa5cc2],ebp
  422b78:	scas   eax,DWORD PTR es:[edi]
  422b79:	hlt    
  422b7a:	adc    DWORD PTR [ebp+0x23100601],esi
  422b80:	ror    BYTE PTR [ebp+0x2fd07ca2],1
  422b86:	mov    ah,0xf1
  422b88:	inc    ecx
  422b89:	mov    edi,?
  422b8b:	pushf  
  422b8c:	and    bh,al
  422b8e:	mov    dh,0x8d
  422b90:	mov    edi,0x11e634e5
  422b95:	pop    ds
  422b96:	xor    dh,ch
  422b98:	dec    ebx
  422b99:	xchg   ebp,eax
  422b9a:	(bad)  [eax+0x59]
  422b9d:	xor    eax,DWORD PTR [eax-0x69b303ae]
  422ba3:	xlat   BYTE PTR ds:[ebx]
  422ba4:	add    edi,ebx
  422ba6:	push   edx
  422ba7:	or     dh,BYTE PTR [eax-0x6bbf0f7]
  422bad:	add    eax,0x4f051924
  422bb2:	stos   BYTE PTR es:[edi],al
  422bb3:	call   0x8f6c7c8f
  422bb8:	fcom   QWORD PTR [ecx+0x595c40da]
  422bbe:	pop    ss
  422bbf:	mov    al,0xd1
  422bc1:	or     dl,cl
  422bc3:	iret   
  422bc4:	sbb    dh,BYTE PTR [ebx-0x6b1f355]
  422bca:	xor    al,BYTE PTR [esi+ebp*4+0x7ebf1062]
  422bd1:	push   es
  422bd2:	aaa    
  422bd3:	cs cs jmp 0xa735:0xfbd8029a
  422bdc:	clc    
  422bdd:	pop    es
  422bde:	jle    0x422c56
  422be0:	xchg   ebx,eax
  422be1:	xchg   esp,eax
  422be2:	cmp    edi,DWORD PTR [esi-0x465b392c]
  422be8:	ret    
  422be9:	xchg   ebx,eax
  422bea:	jp     0x422b9e
  422bec:	mov    bl,0x5f
  422bee:	repz and bl,bl
  422bf1:	mov    DWORD PTR [ebx+0x486a4825],eax
  422bf7:	mov    esp,0x395f4a56
  422bfc:	adc    al,0xed
  422bfe:	out    dx,eax
  422bff:	pop    ss
  422c00:	xchg   ecx,eax
  422c01:	dec    ebp
  422c02:	lods   eax,DWORD PTR ds:[esi]
  422c03:	cmp    al,0xeb
  422c05:	fdiv   st,st(0)
  422c07:	ds call 0xa2e42627
  422c0d:	mov    al,ds:0x4719c337
  422c12:	mov    BYTE PTR [ebx],0x81
  422c15:	(bad)  
  422c16:	call   0x7b3fc609
  422c1b:	mov    ah,0x73
  422c1d:	or     ebp,DWORD PTR [edx+0x21]
  422c20:	mov    bh,0x4f
  422c22:	or     ebx,esp
  422c24:	out    dx,eax
  422c25:	jg     0xbdb0b60
  422c2b:	ret    0x8ecd
  422c2e:	cmp    BYTE PTR [ecx+0x0],cl
	...
  422c39:	add    BYTE PTR ds:0xbf06168e,dh
  422c3f:	sahf   
  422c40:	xor    eax,0x913f27bf
  422c45:	sub    edi,DWORD PTR [ebx]
  422c47:	lea    ebp,[esi]
  422c49:	mov    ah,ah
  422c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4c:	add    DWORD PTR [eax],eax
  422c4e:	inc    BYTE PTR [ecx]
  422c50:	add    BYTE PTR [eax],al
  422c52:	mov    ds:0xfd00f7b4,eax
  422c57:	mov    ah,BYTE PTR ds:[esi+0x1c]
  422c5b:	(bad)  
  422c5c:	lahf   
  422c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c5f:	push   edx
  422c61:	xchg   DWORD PTR [edi],eax
  422c63:	mov    dl,0x75
  422c65:	test   esp,eax
  422c67:	cmc    
  422c68:	mov    ebp,0x6292a9a8
  422c6d:	enter  0xfb77,0x9b
  422c71:	pop    ebp
  422c72:	dec    eax
  422c73:	push   cs
  422c74:	scas   al,BYTE PTR es:[edi]
  422c75:	adc    eax,0xa166107a
  422c7a:	call   0x956e7df7
  422c7f:	fst    DWORD PTR [eax-0x1a8badf2]
  422c85:	jp     0x422c88
  422c87:	aaa    
  422c88:	scas   eax,DWORD PTR es:[edi]
  422c89:	call   0x1967fbfb
  422c8e:	mov    eax,ds:0x7ed4051c
  422c93:	jno    0x422c69
  422c95:	cmp    esp,DWORD PTR [ecx+0x4b]
  422c98:	cld    
  422c99:	sbb    cl,ah
  422c9b:	mov    ah,BYTE PTR [esi]
  422c9d:	or     ah,bl
  422c9f:	ret    0x240b
  422ca2:	adc    eax,esp
  422ca4:	inc    edx
  422ca5:	ins    BYTE PTR es:[edi],dx
  422ca6:	cmp    ecx,eax
  422ca8:	leave  
  422ca9:	enter  0x6e59,0xea
  422cad:	mov    edi,0x49bd3611
  422cb2:	mov    ds:0xd7b5188d,al
  422cb7:	test   al,0x99
  422cb9:	(bad)  
  422cba:	fs adc ch,bl
  422cbd:	xchg   esp,eax
  422cbe:	daa    
  422cbf:	cmp    DWORD PTR [edx+0x44],ebp
  422cc2:	test   eax,0x49899ca1
  422cc7:	nop
  422cc8:	cmp    ah,BYTE PTR [edx-0x59]
  422ccb:	jge    0x422c6f
  422ccd:	push   ds
  422cce:	arpl   WORD PTR [esp+ebx*4+0x7b],cx
  422cd2:	out    0x5f,eax
  422cd4:	sbb    al,0xd2
  422cd6:	das    
  422cd7:	outs   dx,BYTE PTR ds:[esi]
  422cd8:	out    dx,al
  422cd9:	inc    edi
  422cda:	fdivr  DWORD PTR [ebp-0x24]
  422cdd:	aas    
  422cde:	addr16 add ch,al
  422ce1:	sahf   
  422ce2:	push   0xfb3f0c63
  422ce7:	xor    dl,BYTE PTR [eax-0x2c7dbf19]
  422ced:	in     al,dx
  422cee:	jno    0x422cfc
  422cf0:	pop    esi
  422cf1:	repnz inc ebp
  422cf3:	gs jge 0x422ce2
  422cf6:	jae    0x422c98
  422cf8:	imul   ecx,DWORD PTR [ecx+0x117a060c],0x38698ff8
  422d02:	mov    esp,0x9b6eac85
  422d07:	jg     0x422d57
  422d09:	push   ecx
  422d0a:	mov    bh,0xb1
  422d0c:	xchg   edx,eax
  422d0d:	les    esp,FWORD PTR [eax]
  422d0f:	cmp    DWORD PTR [edi-0x6a5a5791],ebp
  422d15:	(bad)  
  422d16:	scas   eax,DWORD PTR es:[edi]
  422d17:	stc    
  422d18:	sub    eax,0x778a76e0
  422d1d:	in     eax,dx
  422d1e:	(bad)  
  422d1f:	push   0x93475e4c
  422d24:	push   ecx
  422d25:	push   0xbfd91a1a
  422d2a:	dec    ecx
  422d2b:	jmp    0xa3dc:0xbeda14b0
  422d32:	push   ecx
  422d33:	popa   
  422d34:	fwait
  422d35:	sbb    eax,DWORD PTR [ebp-0x25b26e5b]
  422d3b:	or     BYTE PTR [edx],dl
  422d3d:	mov    ah,0xe1
  422d3f:	cmc    
  422d40:	int3   
  422d41:	jmp    0xd3080608
  422d46:	jge    0x422d6e
  422d48:	xor    DWORD PTR [ebp-0x6dd688c4],0xffffffcc
  422d4f:	sub    eax,0xafef5d87
  422d54:	jecxz  0x422cfb
  422d56:	rol    ch,1
  422d58:	sbb    eax,DWORD PTR [edx-0x68]
  422d5b:	test   eax,0xcb2bf3f9
  422d60:	rcr    BYTE PTR ds:0xc6219c7c,1
  422d66:	fsub   DWORD PTR [ebp+0xe8e5ad7]
  422d6c:	adc    al,0x46
  422d6e:	loope  0x422dd5
  422d70:	cvtps2pd xmm7,xmm4
  422d73:	cld    
  422d74:	fidiv  DWORD PTR [eax]
  422d76:	inc    edx
  422d77:	mov    esp,?
  422d79:	mov    ecx,0xbef9fa77
  422d7e:	repz mov dl,0x6
  422d81:	(bad)  
  422d82:	loope  0x422dee
  422d84:	pop    ecx
  422d85:	or     BYTE PTR [edx],bh
  422d87:	les    ebp,FWORD PTR [eax-0x5d]
  422d8a:	int    0xf2
  422d8c:	(bad)
  422d90:	jecxz  0x422da4
  422d92:	push   eax
  422d93:	add    DWORD PTR [ecx],ecx
  422d95:	or     ebp,DWORD PTR [ebp-0x5d5a7e96]
  422d9b:	add    ch,BYTE PTR [esp+eiz*4]
  422d9e:	addr16 jle 0x422d49
  422da1:	dec    ecx
  422da2:	out    dx,eax
  422da3:	cmp    cl,ch
  422da5:	push   ebx
  422da6:	mov    dl,0xf0
  422da8:	jp     0x422d35
  422daa:	bnd cs jne 0x422d68
  422dae:	cmp    esp,eax
  422db0:	inc    edi
  422db1:	inc    edx
  422db2:	(bad)  
  422db3:	mov    DWORD PTR [eax+esi*2-0x76],ebp
  422db7:	inc    edi
  422db8:	ror    DWORD PTR [ebx],cl
  422dba:	fimul  WORD PTR [eax]
  422dbc:	(bad)  
  422dbd:	lods   al,BYTE PTR ds:[esi]
  422dbe:	cmp    esp,edi
  422dc0:	jno    0x422e16
  422dc2:	popf   
  422dc3:	pop    esp
  422dc4:	xor    DWORD PTR [ebx-0xbc27b72],edi
  422dca:	xor    al,BYTE PTR [ebx]
  422dcc:	mov    bh,0xb4
  422dce:	arpl   WORD PTR [ecx],dx
  422dd0:	mov    dh,0x25
  422dd2:	xor    BYTE PTR [edx+0x7b],ah
  422dd5:	shl    DWORD PTR [ebx-0x32c37697],0xad
  422ddc:	xor    DWORD PTR [ebp-0x64],0xa75e7ef4
  422de3:	add    ch,BYTE PTR [eax]
  422de5:	ins    DWORD PTR es:[edi],dx
  422de6:	not    ebp
  422de8:	enter  0x8110,0x2e
  422dec:	icebp  
  422ded:	nop
  422dee:	in     eax,dx
  422def:	jmp    0x422e4b
  422df1:	or     al,0x80
  422df3:	mov    al,0x9
  422df5:	push   0x70219935
  422dfa:	das    
  422dfb:	push   edi
  422dfc:	adc    BYTE PTR [ebx+0x37],bl
  422dff:	bound  ebp,QWORD PTR [ecx+0x6]
  422e02:	dec    ecx
  422e03:	in     eax,0xae
  422e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e06:	leave  
  422e07:	adc    eax,0xc1651338
  422e0c:	jbe    0x422e0b
  422e0e:	push   ebx
  422e0f:	imul   eax,DWORD PTR [ebp-0x36],0xfffffff0
  422e13:	sar    edi,1
  422e15:	or     ecx,DWORD PTR [edi-0x1dfe07b4]
  422e1b:	add    al,0x38
  422e1d:	and    edx,DWORD PTR [edi+0x55c33726]
  422e23:	retf   0x5a02
  422e26:	mov    al,ds:0xdc5b7019
  422e2b:	sbb    BYTE PTR [edx],al
  422e2d:	popf   
  422e2e:	or     dh,bl
  422e30:	std    
  422e31:	jmp    0x422df4
  422e33:	mul    BYTE PTR [esp+eax*4+0x62]
  422e37:	sub    BYTE PTR [eax+esi*1+0x64],bl
  422e3b:	sub    ecx,eax
  422e3d:	mov    DWORD PTR [edi+0x60],0x2a5932b7
  422e44:	scas   al,BYTE PTR es:[edi]
  422e45:	ret    
  422e46:	push   ebp
  422e47:	mov    edx,0xb0c283ad
  422e4c:	jno    0x422e90
  422e4e:	out    dx,al
  422e4f:	retf   0x0
	...
  422e5a:	stc    
  422e5b:	std    
  422e5c:	in     eax,dx
  422e5d:	mov    cl,0xed
  422e5f:	mov    cl,0xfd
  422e61:	std    
  422e62:	cmp    bl,BYTE PTR [edi-0x6669013c]
  422e68:	repz cmp esp,edx
  422e6b:	test   al,0x1
  422e6d:	add    dh,bh
  422e6f:	add    DWORD PTR [eax],eax
  422e71:	add    ch,bh
  422e73:	addr16 in eax,dx
  422e75:	(bad)  
  422e76:	(bad)  
  422e77:	cwde   
  422e78:	(bad)  [edx]
  422e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7b:	xchg   cl,dh
  422e7d:	mov    ebp,0x55eb9347
  422e82:	dec    esp
  422e83:	enter  0x20be,0xa
  422e87:	add    BYTE PTR [ecx-0x733690fd],ch
  422e8d:	xchg   DWORD PTR [edi-0x5f],edi
  422e90:	sbb    eax,0x24014ba0
  422e95:	and    cl,dh
  422e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e98:	rcr    BYTE PTR [esi-0x18bec547],cl
  422e9e:	mov    esi,0xcfcd5c68
  422ea3:	or     DWORD PTR [edi-0x78],ecx
  422ea6:	and    edi,DWORD PTR [ecx]
  422ea8:	retf   
  422ea9:	sti    
  422eaa:	out    dx,eax
  422eab:	cmp    BYTE PTR [eax+eiz*8-0x14],bh
  422eaf:	int3   
  422eb0:	sub    al,0x5a
  422eb2:	rcr    BYTE PTR [edx-0x55],0x1f
  422eb6:	pop    esp
  422eb7:	les    ebx,FWORD PTR [bx+si]
  422eba:	or     edi,DWORD PTR [eax]
  422ebc:	adc    BYTE PTR [ebp+0x46],ah
  422ebf:	sbb    bl,BYTE PTR [eax+edx*8+0x512ce587]
  422ec6:	and    dh,BYTE PTR [ecx+0x4e]
  422ec9:	xchg   ecx,eax
  422eca:	(bad)  
  422ecb:	push   edx
  422ecc:	push   edi
  422ecd:	push   cs
  422ece:	arpl   WORD PTR [ecx+ecx*1-0x59c63c5],bp
  422ed5:	xchg   ecx,eax
  422ed6:	das    
  422ed7:	popa   
  422ed8:	not    BYTE PTR [eax+0x72]
  422edb:	xchg   edx,eax
  422edc:	jbe    0x422f2b
  422ede:	add    eax,0x19d3e253
  422ee3:	mov    edx,ss
  422ee5:	test   BYTE PTR [eax],0x59
  422ee8:	mov    dl,0x63
  422eea:	cmp    eax,DWORD PTR [eax]
  422eec:	mov    BYTE PTR [ebp+0x6c22c6e7],al
  422ef2:	test   eax,0x33dc5c3e
  422ef7:	aas    
  422ef8:	inc    ebx
  422ef9:	cmp    ecx,DWORD PTR [ebx-0x2d]
  422efc:	cmc    
  422efd:	pop    es
  422efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eff:	cmc    
  422f00:	pop    edx
  422f01:	cmp    edx,esi
  422f03:	mov    WORD PTR [ecx],fs
  422f05:	push   ds
  422f06:	iret   
  422f07:	sub    al,0xe7
  422f09:	clc    
  422f0a:	(bad)  
  422f0b:	aad    0x96
  422f0d:	mov    ds,ebx
  422f0f:	xchg   DWORD PTR [si],ecx
  422f12:	push   ebx
  422f13:	push   cs
  422f14:	mov    ah,0x1e
  422f16:	and    BYTE PTR [edi+0x226c84af],dh
  422f1c:	mov    ebx,0xd56dbd02
  422f21:	rol    al,1
  422f23:	fisttp WORD PTR [eax]
  422f25:	fild   QWORD PTR [ecx+0x33802af9]
  422f2b:	jl     0x422f1a
  422f2d:	dec    ebp
  422f2e:	pop    ss
  422f2f:	cmp    eax,0xe780d4f
  422f34:	iret   
  422f35:	pusha  
  422f36:	mov    esp,0xa49985d3
  422f3b:	jo     0x422f02
  422f3d:	push   edi
  422f3e:	dec    ebx
  422f3f:	loopne 0x422f3c
  422f41:	cmp    al,0x57
  422f43:	fs mov eax,gs:0x158e1f66
  422f4a:	lods   eax,DWORD PTR ds:[esi]
  422f4b:	dec    ebp
  422f4c:	jmp    0x422f36
  422f4e:	mov    ebx,gs
  422f50:	aas    
  422f51:	push   esi
  422f52:	push   eax
  422f53:	bound  edi,QWORD PTR [ebp-0x33]
  422f56:	dec    esi
  422f57:	xchg   esp,eax
  422f58:	mov    ebx,0xf24234c4
  422f5d:	cld    
  422f5e:	fadd   QWORD PTR [edi+0x5eba9dd9]
  422f64:	loope  0x422f00
  422f66:	push   edx
  422f67:	mov    esp,0xe83909a0
  422f6c:	sub    ch,BYTE PTR [esi-0x11]
  422f6f:	dec    esi
  422f70:	pushf  
  422f71:	sahf   
  422f72:	or     BYTE PTR [edx+ebx*1],bl
  422f75:	mov    dh,0x76
  422f77:	jb     0x422f79
  422f79:	cmp    DWORD PTR [eax+0x2c],0x2156f1ac
  422f80:	inc    edx
  422f81:	inc    eax
  422f82:	ins    BYTE PTR es:[edi],dx
  422f83:	loop   0x422fa1
  422f85:	dec    ebp
  422f86:	mov    ds:0xd4033d80,al
  422f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f8c:	sahf   
  422f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f8e:	test   eax,0x86155883
  422f93:	call   FWORD PTR [edi]
  422f95:	add    eax,0x67d67b05
  422f9a:	sub    al,0x95
  422f9c:	fs cmp al,0x5d
  422f9f:	pop    ecx
  422fa0:	dec    ecx
  422fa1:	aaa    
  422fa2:	push   ecx
  422fa3:	dec    esi
  422fa4:	es jne 0x422f92
  422fa7:	or     eax,0x8fc273dc
  422fac:	bound  edi,QWORD PTR [eax]
  422fae:	sub    BYTE PTR [ebx-0x4],0x9d
  422fb2:	stc    
  422fb3:	cmp    BYTE PTR [ecx],dh
  422fb5:	into   
  422fb6:	push   esi
  422fb7:	pop    ss
  422fb8:	js     0x423018
  422fba:	je     0x42300f
  422fbc:	(bad)
  422fc1:	inc    esi
  422fc2:	mov    ebx,0x467ccb3d
  422fc7:	cld    
  422fc8:	push   eax
  422fc9:	stos   DWORD PTR es:[edi],eax
  422fca:	jmp    DWORD PTR [eax+ebp*4+0x473af3aa]
  422fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd2:	xor    al,0x58
  422fd4:	arpl   WORD PTR [eax-0x4aa263a0],dx
  422fda:	into   
  422fdb:	popa   
  422fdc:	pop    ss
  422fdd:	inc    ecx
  422fde:	pop    esi
  422fdf:	out    dx,eax
  422fe0:	(bad)  
  422fe1:	fsubr  st(4),st
  422fe3:	aad    0xde
  422fe5:	fbstp  TBYTE PTR [ecx]
  422fe7:	adc    edi,ebx
  422fe9:	mov    BYTE PTR [ebp+0x67364b03],ah
  422fef:	sub    eax,0xd06d8d9a
  422ff4:	jnp    0x422fb6
  422ff6:	ins    DWORD PTR es:[edi],dx
  422ff7:	dec    ebx
  422ff8:	cmc    
  422ff9:	pop    edi
  422ffa:	push   0x83088825
  422fff:	fdiv   st(6),st
  423001:	xchg   edx,eax
  423002:	pusha  
  423003:	jg     0x423066
  423005:	test   DWORD PTR [ebx+0x77],edx
  423008:	cmp    ebp,DWORD PTR [esi+ebx*2]
  42300b:	in     al,dx
  42300c:	jmp    0xd1cf:0x48f1a1e2
  423013:	scas   eax,DWORD PTR es:[edi]
  423014:	xchg   esp,eax
  423015:	hlt    
  423016:	jns    0x423008
  423018:	pop    ecx
  423019:	(bad)  
  42301a:	imul   edx,edx,0xbda2462
  423020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423021:	mov    ebx,DWORD PTR [edi]
  423023:	sbb    eax,0x2deaf956
  423028:	or     cl,ch
  42302a:	sbb    DWORD PTR ds:0x500caef7,eax
  423030:	add    ecx,DWORD PTR [edx]
  423032:	sbb    ch,dh
  423034:	mov    eax,0x3cb458a2
  423039:	stos   DWORD PTR es:[edi],eax
  42303a:	mov    ds,ecx
  42303c:	(bad)  
  42303e:	sub    dh,BYTE PTR [ecx-0x2e6f82b8]
  423044:	test   eax,0x651ba88f
  423049:	cmc    
  42304a:	ss sub ecx,ebx
  42304d:	add    bh,BYTE PTR [edi]
  42304f:	icebp  
  423050:	call   0x7851:0xa159456e
  423057:	push   ebx
  423058:	push   edx
  423059:	js     0x42303b
  42305b:	sbb    dl,dh
  42305d:	out    dx,eax
  42305e:	jp     0x423040
  423060:	icebp  
  423061:	ret    
  423062:	sbb    edx,esi
  423064:	out    0xc3,eax
  423066:	mov    bh,BYTE PTR [ebp-0x7a]
  423069:	sub    al,al
  42306b:	push   esp
  42306c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42306d:	push   ebp
  42306e:	mov    DWORD PTR [eax+0x0],ebp
  423074:	add    BYTE PTR [eax],al
  423076:	add    BYTE PTR [eax],al
  423078:	add    BYTE PTR [eax],al
  42307a:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  423082:	test   BYTE PTR [eax],0xec
  423085:	inc    esi
  423086:	addr16 sti 
  423088:	dec    ebp
  423089:	mov    ebx,0x1aae0
  42308e:	inc    BYTE PTR [ecx]
  423090:	add    BYTE PTR [eax],al
  423092:	sbb    esi,DWORD PTR [edi-0x29]
  423095:	mov    cl,0x1d
  423097:	push   esi
  423098:	ror    DWORD PTR [edi],cl
  42309a:	imul   esi,DWORD PTR es:[edi],0x9106fbd2
  4230a1:	outs   dx,DWORD PTR ds:[esi]
  4230a2:	mov    DWORD PTR [edx+0x2700d742],0x226f2fb
  4230ac:	int3   
  4230ad:	outs   dx,DWORD PTR ds:[esi]
  4230ae:	add    al,BYTE PTR [ebx-0x5395888d]
  4230b4:	leave  
  4230b5:	call   0x62f7ffbc
  4230ba:	call   0x2b4e:0x3ece3572
  4230c1:	sbb    BYTE PTR [ecx-0x6c340efd],dl
  4230c7:	xor    eax,DWORD PTR [eax]
  4230c9:	retf   
  4230ca:	mov    es,WORD PTR [edx+0x6e1eee8]
  4230d0:	sub    dh,dl
  4230d2:	(bad)
  4230d5:	or     al,0xa1
  4230d7:	jbe    0x42306e
  4230d9:	jne    0x42311a
  4230db:	imul   DWORD PTR [ebx+0x14]
  4230de:	jbe    0x423087
  4230e0:	xchg   ecx,eax
  4230e1:	call   0x2e0b:0xcfc2c05e
  4230e8:	popf   
  4230e9:	jo     0x42309e
  4230eb:	xchg   ecx,eax
  4230ec:	adc    BYTE PTR [edx+esi*2-0x56],ah
  4230f0:	mov    bh,0xc9
  4230f2:	cmp    BYTE PTR [eax-0x75],ah
  4230f5:	das    
  4230f6:	in     al,0xe1
  4230f8:	(bad)  
  4230f9:	popa   
  4230fa:	jecxz  0x4230e9
  4230fc:	mov    ebx,0xa42d6fba
  423101:	push   eax
  423102:	or     al,0xd9
  423104:	in     eax,0xde
  423106:	mov    esi,DWORD PTR [esi-0x5f]
  423109:	xor    DWORD PTR [eax],0x6524407c
  42310f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423110:	sub    al,0x19
  423113:	jae    0x4230c0
  423115:	dec    eax
  423116:	inc    esi
  423117:	pop    ss
  423118:	pop    eax
  423119:	retf   0x9ee3
  42311c:	and    al,0xf3
  42311e:	into   
  42311f:	imul   ebp,DWORD PTR [eax+0x78],0xffffffee
  423123:	jns    0x4230da
  423125:	(bad)  
  423126:	push   ebp
  423127:	lea    edi,[esi-0x11]
  42312a:	fimul  DWORD PTR [edi+eax*1]
  42312d:	jge    0x423119
  42312f:	push   cs
  423130:	or     al,0x19
  423132:	fdiv   st,st(2)
  423134:	sbb    dl,BYTE PTR [ebx]
  423136:	xchg   BYTE PTR ds:0xd3fcc044,dh
  42313c:	mov    ebp,esp
  42313e:	mov    ebp,DWORD PTR [esi+0x2739133]
  423144:	iret   
  423145:	imul   edx,DWORD PTR [edi+0x68],0x730f0915
  42314c:	or     BYTE PTR [eax],0xac
  42314f:	xlat   BYTE PTR ds:[ebx]
  423150:	(bad)  
  423151:	fiadd  DWORD PTR [eax-0x3b]
  423154:	adc    al,0x29
  423156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423157:	es push ds
  423159:	push   ss
  42315a:	mov    ds:0x5b74c5d1,eax
  42315f:	pop    ds
  423160:	nop
  423161:	fstp   QWORD PTR [edx+0xa]
  423164:	int3   
  423165:	das    
  423166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423167:	fisubr DWORD PTR [edx+0x9]
  42316a:	fnstcw WORD PTR ds:0xded790af
  423170:	jg     0x4231a7
  423172:	add    eax,DWORD PTR [edx-0x8d5b085]
  423178:	adc    DWORD PTR [ebp+ebx*8-0x77],edx
  42317c:	nop
  42317d:	(bad)  
  42317e:	and    al,0x4b
  423180:	mov    ds:0xf908cbf,eax
  423185:	xchg   ebp,eax
  423186:	std    
  423187:	ja     0x42317e
  423189:	mov    ds:0x2a91975a,eax
  42318e:	gs pusha 
  423190:	push   ebp
  423191:	jl     0x423113
  423193:	push   ebp
  423194:	leave  
  423195:	sbb    dl,ah
  423197:	pop    DWORD PTR [edx]
  423199:	dec    ecx
  42319a:	retf   0x59ed
  42319d:	and    DWORD PTR [eax+0xee421a6],0xffffffa5
  4231a4:	xor    bl,BYTE PTR [ebp-0x2834eed1]
  4231aa:	(bad)  
  4231ab:	fistp  WORD PTR [ecx+0x10]
  4231ae:	aas    
  4231af:	mov    esi,0x8aeb2642
  4231b4:	cwde   
  4231b5:	mov    ebx,0x3ac3f9d7
  4231ba:	loopne 0x423148
  4231bc:	xchg   BYTE PTR [edx-0x48],bl
  4231bf:	clc    
  4231c0:	mov    es,WORD PTR [eax+0x49]
  4231c3:	xor    esp,DWORD PTR [edx-0x300f18a5]
  4231c9:	aad    0x0
  4231cb:	lea    ebp,[ebp+edx*1-0x6a5e4577]
  4231d2:	push   esi
  4231d3:	inc    esp
  4231d4:	inc    DWORD PTR [eax-0x2f630e63]
  4231da:	nop
  4231db:	sbb    DWORD PTR [eax-0x75],esi
  4231de:	rcr    BYTE PTR [edi+0x11d81044],cl
  4231e4:	out    dx,al
  4231e5:	xchg   edi,eax
  4231e6:	(bad)  
  4231e8:	cmp    ebx,ecx
  4231ea:	in     eax,0x8d
  4231ec:	inc    edx
  4231ed:	fstp   TBYTE PTR [ebx]
  4231ef:	loop   0x4231b7
  4231f1:	jg     0x42321b
  4231f3:	out    dx,al
  4231f4:	dec    ecx
  4231f5:	dec    ecx
  4231f6:	pop    esi
  4231f7:	and    al,0x5
  4231f9:	fdivr  DWORD PTR [eax-0x32e07d36]
  4231ff:	cwde   
  423200:	mov    al,0x6b
  423202:	sahf   
  423203:	cmp    edx,edx
  423205:	outs   dx,BYTE PTR ds:[esi]
  423206:	mov    esi,DWORD PTR ds:0xc1327dc4
  42320c:	aas    
  42320d:	or     ebp,DWORD PTR ds:0xb55db9c
  423213:	adc    ecx,DWORD PTR [ecx-0x6e]
  423216:	sbb    eax,0x828a169f
  42321b:	jns    0x42328a
  42321d:	or     bh,cl
  42321f:	xor    al,0xbc
  423221:	or     eax,0x2ed22bc2
  423226:	mov    fs,WORD PTR [eax+ebx*1-0x32]
  42322a:	out    0x4f,al
  42322c:	inc    ecx
  42322d:	or     DWORD PTR [edi-0x2e],ecx
  423230:	loope  0x423203
  423232:	scas   eax,DWORD PTR es:[edi]
  423233:	add    ch,BYTE PTR [edi]
  423235:	stos   DWORD PTR es:[edi],eax
  423236:	mov    fs:0x84d410f6,eax
  42323c:	adc    edx,DWORD PTR [esi+0x354be0ef]
  423242:	data16 (bad) 
  423244:	ja     0x4231c9
  423246:	mov    ds:0xff40b288,eax
  42324b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42324c:	jmp    0x81f9:0x8f030fa7
  423253:	jno    0x42321e
  423255:	out    0x46,al
  423257:	push   ebp
  423258:	pop    ecx
  423259:	xchg   esi,eax
  42325a:	and    BYTE PTR [ecx-0x77955e16],0x45
  423261:	lahf   
  423262:	sbb    esp,eax
  423264:	mov    al,0xf2
  423266:	mov    dl,0xa2
  423268:	(bad)  
  423269:	jg     0x4232e9
  42326b:	imul   ecx,DWORD PTR [eax-0x790b023b],0xfffffffc
  423272:	dec    esi
  423273:	test   DWORD PTR [ecx],0x9f85533d
  423279:	mov    esp,DWORD PTR [ebx+0x5f]
  42327c:	dec    esp
  42327d:	int3   
  42327e:	data16 sbb al,0xa5
  423281:	add    eax,0x222b007e
  423286:	jl     0x423251
  423288:	jecxz  0x42325d
  42328a:	test   BYTE PTR [edx-0x71],al
  42328d:	dec    ebx
  42328e:	cmp    dh,al
	...
  423298:	add    BYTE PTR [eax],al
  42329a:	inc    ebx
  42329b:	inc    ecx
  42329c:	popa   
  42329d:	data16 arpl WORD PTR [esi+0x47],sp
  4232a1:	gs push cs
  4232a3:	mov    BYTE PTR [edi-0x37],bh
  4232a6:	cli    
  4232a7:	xchg   DWORD PTR [edi+ecx*1],edi
  4232aa:	fisubr WORD PTR [ecx+eax*1+0x1fe00]
  4232b1:	add    BYTE PTR [esi+0x5a],bh
  4232b4:	jp     0x423300
  4232b6:	sbb    al,0x85
  4232b8:	sbb    al,0x1d
  4232ba:	fist   DWORD PTR [ebx]
  4232bc:	push   esp
  4232bd:	push   edx
  4232be:	fadd   DWORD PTR [edx-0x28]
  4232c1:	aam    0x35
  4232c3:	push   edi
  4232c4:	sub    esi,DWORD PTR [esi+0x5cad6505]
  4232ca:	jbe    0x4232c4
  4232cc:	es dec edi
  4232ce:	and    ebp,DWORD PTR [edi]
  4232d0:	xchg   edx,eax
  4232d1:	push   ebp
  4232d2:	jnp    0x423343
  4232d4:	adc    eax,0xe840005e
  4232d9:	or     ecx,DWORD PTR [edi-0x31]
  4232dc:	and    ecx,DWORD PTR [ebx-0x6d]
  4232df:	sbb    BYTE PTR ds:0xd228d5ec,bl
  4232e5:	rol    BYTE PTR ds:0x33bba172,cl
  4232eb:	cs jg  0x423344
  4232ee:	inc    DWORD PTR [eax-0x3fca8105]
  4232f4:	scas   al,BYTE PTR es:[edi]
  4232f5:	jae    0x4232d5
  4232f7:	cmp    al,0x6
  4232f9:	addr16 (bad) 
  4232fb:	(bad)  
  4232fc:	cli    
  4232fd:	xchg   ebx,eax
  4232fe:	cli    
  4232ff:	xor    eax,0x14d94063
  423304:	aad    0x43
  423306:	fnstenv [esi-0x77]
  423309:	sbb    bh,bl
  42330b:	in     al,dx
  42330c:	fld    st(0)
  42330e:	(bad)  
  42330f:	stc    
  423310:	mov    dh,0x56
  423312:	push   0xffffffd4
  423314:	pop    ebx
  423315:	icebp  
  423316:	aam    0xc2
  423318:	mov    bl,0xeb
  42331a:	sbb    ebx,0xee4f8102
  423320:	out    0xfd,al
  423322:	ins    DWORD PTR es:[edi],dx
  423323:	mov    edx,0x4d322c67
  423328:	in     eax,0xad
  42332a:	out    0xf4,al
  42332c:	dec    edi
  42332d:	fwait
  42332e:	retf   
  42332f:	stc    
  423330:	jle    0x4232b4
  423332:	cmp    dh,dh
  423334:	imul   esp,ecx,0xffffffda
  423337:	std    
  423338:	cmp    bl,ch
  42333a:	loope  0x42338a
  42333c:	xchg   ebx,eax
  42333d:	dec    eax
  42333e:	fs mov ebx,0xd50a424e
  423344:	add    DWORD PTR [esi+ebx*1-0x7b],0x65
  423349:	cmp    DWORD PTR [edi+0x3b52f3dc],ebp
  42334f:	mov    WORD PTR [esi],ds
  423351:	rcl    BYTE PTR [ebp+0x48],cl
  423354:	xor    al,0xde
  423356:	cwde   
  423357:	add    DWORD PTR [ecx-0x32],edi
  42335a:	inc    edi
  42335b:	mov    edx,0x863d3b28
  423360:	or     DWORD PTR [ecx+0x6f],esp
  423363:	cmp    esi,eax
  423365:	adc    BYTE PTR [ecx-0x4],cl
  423368:	adc    eax,0x51a2f0c2
  42336d:	dec    edx
  42336e:	stc    
  42336f:	mov    ah,0xdf
  423371:	hlt    
  423372:	test   DWORD PTR [ecx+0x74],edi
  423375:	cmc    
  423376:	test   BYTE PTR [ebx],dh
  423378:	push   edx
  423379:	xor    al,BYTE PTR [ebx-0x74]
  42337c:	jbe    0x423333
  42337e:	into   
  42337f:	mov    ebx,0x6315952e
  423384:	adc    ecx,0xffffff8c
  423387:	sbb    BYTE PTR [esi],bl
  423389:	(bad)
  42338c:	pop    ss
  42338d:	sahf   
  42338e:	xchg   esp,eax
  42338f:	cmp    DWORD PTR [ebp+0x5383ae96],0xffffffb2
  423396:	mov    bl,BYTE PTR [eax+0x2bec697f]
  42339c:	rcpps  xmm4,XMMWORD PTR [esi-0x50642142]
  4233a3:	xor    al,0x51
  4233a5:	cmp    DWORD PTR [ecx-0x61],edx
  4233a8:	es ja  0x423361
  4233ab:	xchg   esp,eax
  4233ac:	mov    ch,0xa3
  4233ae:	jmp    0x86ef37a2
  4233b3:	inc    ebp
  4233b4:	repz jl 0x423416
  4233b7:	ret    
  4233b8:	lock cmp DWORD PTR [edi+0xc],ebp
  4233bc:	mov    ds:0x45a346c4,eax
  4233c1:	mov    eax,0xc8dbd2d1
  4233c6:	popa   
  4233c7:	mov    ds:0x6157f087,eax
  4233cc:	sahf   
  4233cd:	(bad)  
  4233ce:	jbe    0x423372
  4233d0:	cdq    
  4233d1:	into   
  4233d2:	sub    eax,0x62878629
  4233d7:	push   ss
  4233d8:	jl     0x42344c
  4233da:	iret   
  4233db:	cs enter 0xda29,0xbc
  4233e0:	xor    BYTE PTR ds:0x78e24e7e,dl
  4233e6:	mov    ah,0x83
  4233e8:	aaa    
  4233e9:	jp     0x423441
  4233eb:	xchg   esp,eax
  4233ec:	pop    esp
  4233ed:	clc    
  4233ee:	pop    esp
  4233ef:	mov    sp,WORD PTR [si]
  4233f3:	in     al,dx
  4233f4:	fldl2e 
  4233f6:	mov    cs,ebp
  4233f8:	xchg   edx,eax
  4233f9:	out    0xbc,al
  4233fb:	repnz inc ebx
  4233fd:	dec    ebx
  4233fe:	pushf  
  4233ff:	test   ah,0x9b
  423402:	(bad)  
  423403:	cmp    BYTE PTR [esi],bh
  423405:	shl    ah,cl
  423407:	mov    ebx,0xc614a54f
  42340c:	xor    DWORD PTR [ecx+eiz*1],esi
  42340f:	pop    ds
  423410:	hlt    
  423411:	inc    ebp
  423412:	repz mov ebx,0x1446f56f
  423418:	retf   0x246d
  42341b:	jo     0x4233cc
  42341d:	ds out 0x85,eax
  423420:	ins    BYTE PTR es:[edi],dx
  423421:	dec    ebp
  423422:	test   esi,ecx
  423424:	cld    
  423425:	mov    eax,0xe61af159
  42342a:	xor    esp,edi
  42342c:	or     BYTE PTR [ebp+0x297050f8],dl
  423432:	test   eax,0xd57804f6
  423437:	pop    ds
  423438:	ins    BYTE PTR es:[edi],dx
  423439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42343a:	cmp    al,0x3b
  42343c:	ror    DWORD PTR [eax+0x34],cl
  42343f:	and    BYTE PTR [edx+ebp*2-0x12],0xd4
  423444:	jns    0x4234a3
  423446:	xor    DWORD PTR [ecx-0x58e4ffae],ebx
  42344c:	das    
  42344d:	mov    al,0x37
  42344f:	(bad)  
  423450:	xchg   edi,eax
  423451:	sahf   
  423452:	test   DWORD PTR [ebp+eiz*2+0x67],esi
  423456:	arpl   WORD PTR [edx-0x74],si
  423459:	fwait
  42345a:	mov    fs,WORD PTR ds:0x3d551f6c
  423460:	nop
  423461:	push   edx
  423462:	mov    bl,0xc9
  423464:	push   edi
  423465:	int    0x72
  423467:	pop    edx
  423468:	(bad)  
  423469:	int3   
  42346a:	dec    esi
  42346b:	scas   eax,DWORD PTR es:[edi]
  42346c:	or     eax,0x33f615d7
  423471:	iret   
  423472:	out    dx,eax
  423473:	rcl    DWORD PTR [ecx],1
  423475:	mov    bl,0x69
  423477:	inc    ebp
  423478:	data16 rcr BYTE PTR [ebx],0xa2
  42347c:	pop    edx
  42347d:	dec    edi
  42347e:	dec    esi
  42347f:	mov    ds:0x10b23542,al
  423484:	iret   
  423485:	inc    ebp
  423486:	mov    bl,0x6
  423488:	cmp    ah,ch
  42348a:	out    dx,al
  42348b:	jno    0x423460
  42348d:	mov    dl,0xa7
  42348f:	stos   DWORD PTR es:[edi],eax
  423490:	xchg   ebx,eax
  423491:	mov    edx,0xf0ce1612
  423496:	pop    ss
  423497:	dec    ecx
  423498:	fwait
  423499:	sbb    al,0x81
  42349b:	outs   dx,DWORD PTR ds:[esi]
  42349c:	in     eax,dx
  42349d:	test   BYTE PTR [esi+0x18f6fe73],dl
  4234a3:	push   cs
  4234a4:	ins    BYTE PTR es:[edi],dx
  4234a5:	xor    bh,BYTE PTR [edi+0x61]
  4234a8:	pop    esi
  4234a9:	retf   0x6d17
  4234ac:	ja     0x4234c7
  4234ae:	xlat   BYTE PTR ds:[ebx]
  4234af:	xchg   edi,eax
	...
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	mov    ebp,edx
  4234bc:	rcr    DWORD PTR [ebx],cl
  4234be:	repz cmp ecx,ebx
  4234c1:	cli    
  4234c2:	cmp    dh,bl
  4234c4:	adc    BYTE PTR [ebx],dl
  4234c6:	pop    ebx
  4234c7:	das    
  4234c8:	mov    cl,0xdc
  4234ca:	fsubr  QWORD PTR [esi+0x1fe0001]
  4234d0:	add    BYTE PTR [eax],al
  4234d2:	frstor [ecx+0x56]
  4234d5:	push   esp
  4234d6:	retf   0x2c9e
  4234d9:	fsub   st(5),st
  4234db:	loopne 0x423535
  4234dd:	aad    0x45
  4234df:	clc    
  4234e0:	repz out dx,eax
  4234e2:	je     0x4234d8
  4234e4:	cwde   
  4234e5:	inc    eax
  4234e6:	lds    eax,FWORD PTR [ebx+ebx*8-0x7f]
  4234ea:	scas   al,BYTE PTR es:[edi]
  4234eb:	stos   DWORD PTR es:[edi],eax
  4234ec:	inc    edi
  4234ed:	repnz sub esi,DWORD PTR [edi+0x1422f0e4]
  4234f4:	and    al,0x7c
  4234f6:	int    0x28
  4234f8:	xchg   ch,bl
  4234fa:	xor    BYTE PTR [edx+0x7408259],0xcc
  423501:	jle    0x423534
  423503:	jnp    0x423562
  423505:	imul   ebp,eax,0x8dc564fd
  42350b:	dec    ebp
  42350c:	imul   edx,DWORD PTR [ebx],0xad8b2a51
  423512:	inc    edx
  423513:	stos   BYTE PTR es:[edi],al
  423514:	jle    0x423554
  423516:	mov    dh,0x8c
  423518:	in     al,0x84
  42351a:	push   cs
  42351b:	adc    DWORD PTR [esi+0x558bb59d],0x68
  423522:	xchg   esp,eax
  423523:	lock popa 
  423525:	lea    edi,[edx]
  423527:	aaa    
  423528:	mov    ah,0xfe
  42352a:	in     al,0x2f
  42352c:	jne    0x42353f
  42352e:	cmp    DWORD PTR [edi-0x4548937d],eax
  423534:	sub    al,cl
  423536:	dec    esp
  423537:	sub    DWORD PTR [ebx+ecx*4+0x39],edi
  42353b:	cmovp  esi,DWORD PTR [ebx]
  42353e:	sbb    edi,DWORD PTR [eax]
  423540:	js     0x4234d7
  423542:	pop    es
  423543:	xchg   edx,eax
  423544:	dec    esp
  423545:	test   al,0xa
  423547:	xchg   esi,eax
  423548:	ins    DWORD PTR es:[edi],dx
  423549:	in     al,dx
  42354a:	cs stc 
  42354c:	(bad)  
  42354d:	xor    BYTE PTR [eax+0x60],dh
  423550:	pop    ss
  423551:	ds enter 0xeb53,0x35
  423556:	jae    0x4235d7
  423558:	cli    
  423559:	jmp    0x423578
  42355b:	les    eax,FWORD PTR [eax+ebx*2+0x3f]
  42355f:	fnstcw WORD PTR [eax-0x6fc6a599]
  423565:	or     eax,0x29e5b55c
  42356a:	dec    BYTE PTR [edi-0xf]
  42356d:	jmp    0x8978ba2f
  423572:	inc    esi
  423573:	push   edx
  423574:	jae    0x42352f
  423576:	push   ss
  423577:	into   
  423578:	clc    
  423579:	mov    al,ds:0x3de96fbe
  42357e:	adc    DWORD PTR [ecx-0x50b55b86],ecx
  423584:	ficom  WORD PTR [ebx+0x20d2f311]
  42358a:	ins    DWORD PTR es:[edi],dx
  42358b:	jb     0x423591
  42358d:	xor    al,BYTE PTR [edi+0x2a]
  423590:	clc    
  423591:	repz jno 0x4235c8
  423594:	dec    edx
  423595:	retf   0xbea1
  423598:	jnp    0x4235b5
  42359a:	adc    DWORD PTR fs:[ebx],eax
  42359d:	xor    dl,BYTE PTR [ebx]
  42359f:	rcr    DWORD PTR gs:[edi-0x38ea7e7],1
  4235a6:	push   ds
  4235a7:	fnstcw WORD PTR [edx]
  4235a9:	inc    ebx
  4235aa:	ss repnz cdq 
  4235ad:	lods   eax,DWORD PTR ds:[esi]
  4235ae:	je     0x42360a
  4235b0:	(bad)  
  4235b2:	js     0x42362a
  4235b4:	xchg   DWORD PTR [esi+ebx*4-0x6897e275],esi
  4235bb:	mov    esp,ecx
  4235bd:	sbb    ebx,DWORD PTR [edi]
  4235bf:	mov    eax,0x95bb535f
  4235c4:	loopne 0x423614
  4235c6:	xor    al,0xeb
  4235c8:	xor    eax,0x2d909f5c
  4235cd:	jg     0x4235ec
  4235cf:	aas    
  4235d0:	es fmul st(7),st
  4235d3:	mov    ecx,gs
  4235d5:	mov    ecx,0xe9a48c63
  4235da:	pop    edi
  4235db:	adc    edi,DWORD PTR [ecx+0x288782e9]
  4235e1:	adc    al,0x64
  4235e3:	jns    0x4235f7
  4235e5:	(bad)  
  4235e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e7:	in     al,0x77
  4235e9:	sbb    al,0xc9
  4235eb:	aad    0x73
  4235ed:	or     DWORD PTR [eax],eax
  4235ef:	and    DWORD PTR [eax-0x53],edi
  4235f2:	shr    DWORD PTR [ebx+0x55f4aee0],cl
  4235f8:	dec    ebp
  4235f9:	cmp    esi,0xffffff9f
  4235fc:	call   FWORD PTR [ebp-0x5e721c44]
  423602:	mov    ebp,0x76dc23df
  423607:	inc    ecx
  423608:	in     al,0xa2
  42360a:	jb     0x42365a
  42360c:	addr16 pop edx
  42360e:	sub    edi,DWORD PTR [edx-0x74]
  423611:	in     eax,0xd2
  423613:	scas   al,BYTE PTR es:[edi]
  423614:	sbb    esp,DWORD PTR [edi+0x4d]
  423617:	pop    eax
  423618:	adc    eax,0x9b0d174b
  42361d:	mov    ds:0x1a2178d4,eax
  423622:	fwait
  423623:	imul   edi,DWORD PTR [esi],0x7f8f8a46
  423629:	xchg   ecx,eax
  42362a:	sbb    BYTE PTR [eax+eax*2-0x31],ah
  42362e:	sbb    BYTE PTR [edi+0x64a1af66],ah
  423634:	out    dx,al
  423635:	pop    ds
  423636:	adc    BYTE PTR [eax+0x48463471],al
  42363c:	xor    al,0xe8
  42363e:	ret    0x794e
  423641:	ror    BYTE PTR [ecx+edi*1+0x4b],cl
  423645:	repz dec edi
  423647:	mov    bh,0x1b
  423649:	rcr    DWORD PTR [edi+0xa],0x3b
  42364d:	add    ah,BYTE PTR [ecx+edi*2+0x14]
  423651:	jnp    0x423697
  423653:	lods   eax,DWORD PTR ds:[esi]
  423654:	arpl   sp,di
  423656:	add    DWORD PTR [esi],0xffffffef
  423659:	cmp    bh,BYTE PTR [esi+edx*2]
  42365c:	pop    ds
  42365d:	mov    eax,0xf2baf375
  423662:	and    esi,DWORD PTR [ebx]
  423664:	out    0xc0,eax
  423666:	push   ebx
  423667:	xchg   DWORD PTR [eax+0x1d],ebp
  42366a:	shrd   DWORD PTR [ecx+0x4a8178ea],ecx,0xd7
  423672:	add    BYTE PTR [ecx-0x603ff08f],al
  423678:	ins    BYTE PTR es:[edi],dx
  423679:	add    al,0x36
  42367b:	cmp    al,0x4a
  42367d:	dec    edx
  42367e:	data16 loope 0x423664
  423681:	jle    0x4236f6
  423683:	(bad)  
  423684:	ds sub bl,al
  423687:	cdq    
  423688:	mov    esp,DWORD PTR [esi+0x6d]
  42368b:	data16 icebp 
  42368d:	mov    ebp,esp
  42368f:	cmp    eax,0xfa236391
  423694:	and    esp,ecx
  423696:	in     al,dx
  423697:	inc    edi
  423698:	jnp    0x423681
  42369a:	dec    ebp
  42369b:	aas    
  42369c:	out    dx,al
  42369d:	cwde   
  42369e:	jns    0x423675
  4236a0:	iret   
  4236a1:	aas    
  4236a2:	mov    eax,ds:0xdb3e16ea
  4236a7:	xchg   esi,eax
  4236a8:	xchg   ecx,eax
  4236a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236aa:	js     0x423670
  4236ac:	std    
  4236ad:	test   al,0x20
  4236af:	dec    esp
  4236b0:	jecxz  0x4236f2
  4236b2:	popf   
  4236b3:	pusha  
  4236b4:	sub    eax,0x70ee63a6
  4236b9:	(bad)  
  4236ba:	je     0x42369f
  4236bc:	outs   dx,DWORD PTR ds:[esi]
  4236bd:	imul   eax,DWORD PTR [ecx+0x2980c926],0xfffffffa
  4236c4:	push   0x42
  4236c6:	sub    eax,0xef046347
  4236cb:	xchg   DWORD PTR [ebx+edi*8],ebp
  4236ce:	inc    esi
  4236cf:	mov    ebp,0x0
  4236d4:	add    BYTE PTR [eax],al
  4236d6:	add    BYTE PTR [eax],al
  4236d8:	add    BYTE PTR [eax],al
  4236da:	shl    BYTE PTR [edx],cl
  4236dc:	xchg   esi,eax
  4236dd:	call   0xe61:0x6adebef6
  4236e4:	cmp    DWORD PTR [eax],esi
  4236e6:	push   edx
  4236e7:	adc    BYTE PTR [eax+eiz*2+0x1b0da],cl
  4236ee:	inc    BYTE PTR [ecx]
  4236f0:	add    BYTE PTR [eax],al
  4236f2:	and    eax,0xd85adfd2
  4236f7:	(bad)  
  4236f8:	mov    edi,0xfb1661be
  4236fd:	mov    ebx,0x46bd70f4
  423702:	ins    BYTE PTR es:[edi],dx
  423703:	jno    0x423736
  423705:	adc    al,0x65
  423707:	cli    
  423708:	lahf   
  423709:	push   edx
  42370a:	mov    ah,0xb
  42370c:	and    al,0x33
  42370e:	aaa    
  42370f:	imul   ebx,DWORD PTR [ebx],0x54
  423712:	xchg   DWORD PTR [esi+0x3e],ecx
  423715:	pop    ebx
  423716:	fbld   TBYTE PTR [edi+0x53]
  423719:	pop    edi
  42371a:	push   ebp
  42371b:	in     al,0xb4
  42371d:	mov    eax,ds:0x33e5d329
  423722:	outs   dx,DWORD PTR ds:[esi]
  423723:	or     BYTE PTR [ebx+0x5975a9b2],ch
  423729:	jae    0x423783
  42372b:	ja     0x423740
  42372d:	and    cl,BYTE PTR [esi+ebx*8]
  423730:	sbb    al,0x50
  423732:	repnz push esp
  423734:	fstp   QWORD PTR [ecx+0x6ece8d6c]
  42373a:	inc    ebx
  42373b:	add    edi,DWORD PTR [edi+0x4a]
  42373e:	mov    dl,0x6b
  423740:	push   ss
  423741:	dec    eax
  423742:	xor    DWORD PTR [edx-0x65],edx
  423745:	add    al,ah
  423747:	cmp    DWORD PTR [esi+0x6c],edx
  42374a:	xor    BYTE PTR [eax],ch
  42374c:	in     eax,0x32
  42374e:	or     ah,bh
  423750:	mov    BYTE PTR [edx+edi*4],dl
  423753:	pushf  
  423754:	dec    edx
  423755:	jmp    0xff5fbc34
  42375a:	and    BYTE PTR [ebp-0x6ed60391],cl
  423760:	shl    DWORD PTR [esi+eiz*4],cl
  423763:	adc    esi,DWORD PTR [ebx+esi*2-0x19]
  423767:	pop    edi
  423768:	xor    DWORD PTR [ecx+0x1018642b],edi
  42376e:	rol    BYTE PTR [edi-0x35],0xf2
  423772:	jg     0x423764
  423774:	cld    
  423775:	outs   dx,DWORD PTR ds:[esi]
  423776:	(bad)  [edx+eiz*4-0x27]
  42377a:	sub    esi,DWORD PTR [edx+0x11fbb966]
  423780:	mov    ch,0x68
  423782:	sbb    BYTE PTR [eax+0x36a5d86b],bh
  423788:	loop   0x423765
  42378a:	call   0xf606:0xe54afb60
  423791:	or     al,0x44
  423793:	or     al,0x84
  423795:	arpl   WORD PTR [edi-0x25],ax
  423798:	jle    0x423745
  42379a:	mov    al,0x7b
  42379c:	arpl   sp,sp
  42379e:	in     eax,dx
  42379f:	les    ecx,FWORD PTR [ebx+0x5986639f]
  4237a5:	mov    bh,0xcd
  4237a7:	int3   
  4237a8:	cmc    
  4237a9:	test   DWORD PTR [edi+0x27],edx
  4237ac:	sbb    BYTE PTR [ebx-0x7ecc2578],al
  4237b2:	test   DWORD PTR [ebp+edi*1-0x2eddae8f],edx
  4237b9:	sbb    al,0xb5
  4237bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237bc:	mov    eax,0xb12cbcb
  4237c1:	fstp   st(5)
  4237c3:	cmp    DWORD PTR [eax+0x89d94a7],edx
  4237c9:	ret    0x5cfd
  4237cc:	loop   0x4237ed
  4237ce:	jmp    0x4237a7
  4237d0:	push   ds
  4237d1:	and    DWORD PTR [ebx],eax
  4237d3:	push   cs
  4237d4:	push   ebx
  4237d5:	mov    dl,0x41
  4237d7:	xchg   dh,bh
  4237d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237da:	push   edi
  4237db:	inc    eax
  4237dc:	adc    DWORD PTR [edx+0xd320fe3],eax
  4237e2:	xchg   edx,eax
  4237e3:	xor    BYTE PTR [ecx+0x7b427a1a],ch
  4237e9:	dec    edx
  4237ea:	inc    ecx
  4237eb:	add    ch,BYTE PTR [eax-0x4]
  4237ee:	jp     0x4237e0
  4237f0:	and    cl,cl
  4237f2:	aad    0x2d
  4237f4:	and    al,0x47
  4237f6:	cmp    al,0xe
  4237f8:	dec    edx
  4237f9:	and    BYTE PTR [ebp+esi*8+0x54fe17a2],0x26
  423801:	popa   
  423802:	pop    ebx
  423803:	sti    
  423804:	push   ecx
  423805:	jp     0x4237e2
  423807:	imul   esp,DWORD PTR [ebp-0x18],0xffffffbb
  42380b:	sbb    al,0xff
  42380d:	loopne 0x42383d
  42380f:	fld    st(7)
  423811:	cmp    DWORD PTR [edx],edx
  423813:	call   DWORD PTR [edx+0x5dce325a]
  423819:	outs   dx,BYTE PTR ds:[esi]
  42381a:	pop    esi
  42381b:	ror    DWORD PTR [ebx+ebx*1],0xeb
  42381f:	and    eax,ebp
  423821:	and    al,0x9e
  423823:	xchg   edi,eax
  423824:	into   
  423825:	ret    0x5c26
  423828:	cdq    
  423829:	pop    ebp
  42382a:	sbb    DWORD PTR [eax],edx
  42382c:	frstor [eax+0x34fa930a]
  423832:	and    al,0x89
  423834:	jmp    0x423874
  423836:	loop   0x4237fd
  423838:	(bad)  
  423839:	sub    eax,0xc19917e9
  42383e:	pusha  
  42383f:	sbb    eax,0xc159fd22
  423844:	nop
  423845:	push   0x2
  423847:	rol    DWORD PTR [edi-0x3ec244e0],cl
  42384d:	iret   
  42384e:	add    BYTE PTR [eax+edi*4-0x69d3798],bl
  423855:	fimul  WORD PTR ds:0xa69cc7c6
  42385b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42385c:	xor    eax,0x5787b5d0
  423861:	sub    al,0xec
  423863:	pop    ds
  423864:	and    DWORD PTR [ebx+0x3ed55529],ebx
  42386a:	mov    bh,0x4c
  42386c:	mul    DWORD PTR [eax+eax*1]
  42386f:	stc    
  423870:	jns    0x4238d8
  423872:	or     DWORD PTR [edx-0x76],esp
  423875:	ret    
  423876:	ja     0x42387e
  423878:	push   ecx
  423879:	cmp    bh,BYTE PTR [ebp+0x45d8f8e5]
  42387f:	cmp    BYTE PTR [eax+ecx*2-0x1a],cl
  423883:	mov    eax,ds:0x5f2c7885
  423888:	sbb    DWORD PTR [esi+esi*8+0x47ed941],ecx
  42388f:	jge    0x4238b4
  423891:	(bad)  
  423892:	sbb    al,0x7e
  423894:	add    eax,0xbcdcab66
  423899:	push   es
  42389a:	mov    ecx,0x15ed641b
  42389f:	xlat   BYTE PTR ds:[ebx]
  4238a0:	out    dx,al
  4238a1:	test   DWORD PTR [ebp+0x62],0xcf69624e
  4238a8:	ficomp WORD PTR ds:0x16408462
  4238ae:	mov    WORD PTR [ebx+0x95d76a8],gs
  4238b4:	or     eax,0x35e62fed
  4238b9:	xor    eax,0xbc43e716
  4238be:	inc    DWORD PTR [edi]
  4238c0:	xlat   BYTE PTR ds:[ebx]
  4238c1:	add    ebx,DWORD PTR [esi+0x4a8b6568]
  4238c7:	pop    eax
  4238c8:	fiadd  DWORD PTR [edi-0x4bba74a4]
  4238ce:	ins    BYTE PTR es:[edi],dx
  4238cf:	test   BYTE PTR [esi],al
  4238d1:	stos   BYTE PTR es:[edi],al
  4238d2:	push   esp
  4238d3:	xor    eax,0xf8e0f22c
  4238d8:	sbb    DWORD PTR [ebx-0x405bbff0],edi
  4238de:	fidiv  DWORD PTR [esi-0x42]
  4238e1:	outs   dx,BYTE PTR ds:[esi]
  4238e2:	fwait
  4238e3:	adc    eax,DWORD PTR [esi]
  4238e5:	mov    ch,0xaf
  4238e7:	call   0xde721db0
  4238ec:	and    ebp,esi
  4238ee:	jb     0x42388a
	...
  4238f8:	add    BYTE PTR [eax],al
  4238fa:	fnstsw WORD PTR [edi+ecx*4]
  4238fd:	mov    esp,0x7dffbfef
  423902:	in     al,dx
  423903:	outs   dx,BYTE PTR ds:[esi]
  423904:	fs push esp
  423906:	mov    ecx,0xd88b4912
  42390b:	mov    dl,0x1
  42390d:	add    dh,bh
  42390f:	add    DWORD PTR [eax],eax
  423911:	add    bh,ah
  423913:	es xchg ebp,eax
  423915:	sbb    al,0x7e
  423917:	cld    
  423918:	dec    edx
  423919:	mov    ebx,0xb773dd38
  42391e:	sbb    al,0xd4
  423920:	mov    ecx,DWORD PTR [ecx-0x14]
  423923:	sub    esp,DWORD PTR [ebp+edx*1+0x4aee7a15]
  42392a:	fsub   DWORD PTR [eax+0x39be6b7]
  423930:	or     esp,DWORD PTR ds:[edx]
  423933:	mov    dl,0xab
  423935:	xor    BYTE PTR [esi],bl
  423937:	mov    edx,0xb360251c
  42393c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42393d:	arpl   WORD PTR [ecx],dx
  42393f:	jle    0x423968
  423941:	cld    
  423942:	push   esi
  423943:	mov    esp,0xfcfbe58b
  423948:	mov    DWORD PTR [eax-0x7],0x13bba9c2
  42394f:	or     al,BYTE PTR [eax+0x4441fc20]
  423955:	sahf   
  423956:	inc    edx
  423957:	outs   dx,BYTE PTR ds:[esi]
  423958:	mov    esp,0x329969f4
  42395d:	cli    
  42395e:	sar    BYTE PTR [esi+0x1c],1
  423961:	ja     0x423966
  423963:	jnp    0x42398a
  423965:	sti    
  423966:	sbb    DWORD PTR [ecx+0x37],ebx
  423969:	mov    bh,0x5e
  42396b:	inc    edi
  42396c:	into   
  42396d:	lods   eax,DWORD PTR ds:[esi]
  42396e:	cmp    eax,0x27700748
  423973:	leave  
  423974:	lahf   
  423975:	mov    ch,0xfe
  423977:	ss mov eax,0x7c930a13
  42397d:	repz (bad) 
  423980:	iret   
  423981:	jo     0x42397c
  423983:	jne    0x423919
  423985:	(bad)  
  423986:	add    eax,0xbb5639b1
  42398b:	(bad)  
  42398c:	ret    
  42398d:	in     eax,dx
  42398e:	loop   0x423922
  423990:	test   BYTE PTR [esi],0x19
  423993:	ret    0x9dc4
  423996:	test   al,0xe8
  423998:	add    DWORD PTR [ecx+0x38],esi
  42399b:	xor    eax,0x3bac96ca
  4239a0:	and    DWORD PTR [edx-0x60369414],edi
  4239a6:	or     al,0x76
  4239a8:	arpl   bx,ax
  4239aa:	fbld   TBYTE PTR [ecx+0x48]
  4239ad:	stos   DWORD PTR es:[edi],eax
  4239ae:	push   es
  4239af:	mov    al,ds:0x48eb3958
  4239b4:	cdq    
  4239b5:	pop    edx
  4239b6:	push   ds
  4239b7:	mov    DWORD PTR [ebp+esi*4+0x51],edx
  4239bb:	test   al,0xb6
  4239bd:	repnz loop 0x423a3f
  4239c0:	xchg   esi,eax
  4239c1:	inc    ebp
  4239c2:	imul   esi,DWORD PTR [ebx+0x16319c7],0x3a5b41c6
  4239cc:	jmp    0xfe56759e
  4239d1:	inc    ebx
  4239d2:	rcl    ecx,0x3e
  4239d5:	(bad)  
  4239d6:	push   eax
  4239d7:	lds    ebx,FWORD PTR [ebx+eiz*2]
  4239da:	stc    
  4239db:	pop    ss
  4239dc:	or     BYTE PTR [ecx],cl
  4239de:	icebp  
  4239df:	popa   
  4239e0:	mov    al,ds:0x2599209a
  4239e5:	adc    edx,DWORD PTR [ebp+0x7e287186]
  4239eb:	sbb    al,0x31
  4239ed:	ret    
  4239ee:	and    BYTE PTR [ebp+0xf213ba9],al
  4239f4:	mov    al,BYTE PTR ds:0x456be6d3
  4239fa:	jbe    0x423a5d
  4239fc:	push   0xffffffc1
  4239fe:	aaa    
  4239ff:	jmp    0xe2a2:0x6d97396
  423a06:	or     DWORD PTR [edi],edx
  423a08:	lds    cx,DWORD PTR [eax+0x4b]
  423a0c:	(bad)  
  423a0d:	out    dx,eax
  423a0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a0f:	sbb    BYTE PTR [esi+0x1125fdb4],0xbb
  423a16:	xchg   DWORD PTR [eax],ebx
  423a18:	mov    DWORD PTR [ebp+esi*1-0x36ef362e],esi
  423a1f:	pop    ss
  423a20:	pop    edi
  423a21:	mov    ds:0x5846f1a0,al
  423a26:	inc    edi
  423a27:	sar    BYTE PTR [edi-0x15],1
  423a2a:	cdq    
  423a2b:	repnz out 0x41,eax
  423a2e:	shl    DWORD PTR [edi+0x21],0x3e
  423a32:	jmp    0x423aa1
  423a34:	fsub   st,st(0)
  423a36:	lea    edx,[esi+0x5d]
  423a39:	sti    
  423a3a:	inc    eax
  423a3b:	seto   BYTE PTR [edi]
  423a3e:	xlat   BYTE PTR ds:[ebx]
  423a3f:	xor    BYTE PTR [eax-0x6e],cl
  423a42:	popf   
  423a43:	mov    ebx,0xe9b0554
  423a48:	(bad)  
  423a49:	sbb    BYTE PTR [ebx*2-0x7213fba0],dh
  423a50:	sub    dl,BYTE PTR [ebp+0x6d]
  423a53:	cwde   
  423a54:	and    eax,0xf72fcc19
  423a59:	pop    DWORD PTR [ecx+0xeffb160]
  423a5f:	in     eax,0x67
  423a61:	inc    edi
  423a62:	push   cs
  423a63:	sbb    eax,edi
  423a65:	out    dx,al
  423a66:	aas    
  423a67:	add    eax,0x1a89d2e8
  423a6c:	xchg   ebx,eax
  423a6d:	push   edi
  423a6e:	and    eax,0x7d7b8504
  423a73:	mov    esp,DWORD PTR ds:[edx+0x5c7b92dc]
  423a7a:	sbb    eax,0x28fdd4dd
  423a7f:	push   0xffffffb0
  423a81:	sbb    BYTE PTR [edx],0x57
  423a84:	lods   al,BYTE PTR ds:[esi]
  423a85:	jbe    0x423ab2
  423a87:	and    BYTE PTR [eax],cl
  423a89:	test   eax,0x2c6ef59
  423a8e:	xor    eax,0x2d12c646
  423a93:	(bad)  [edx]
  423a95:	(bad)  
  423a96:	sub    bh,BYTE PTR [ecx-0x1a]
  423a99:	xor    al,0x13
  423a9b:	cmp    cl,BYTE PTR [eax+0x6f]
  423a9e:	lock in eax,dx
  423aa0:	stos   DWORD PTR es:[edi],eax
  423aa1:	(bad)  
  423aa2:	ja     0x423a91
  423aa4:	cmp    BYTE PTR [edi-0x683b1329],0x45
  423aab:	mov    edi,esi
  423aad:	xlat   BYTE PTR ds:[ebx]
  423aae:	icebp  
  423aaf:	(bad)  
  423ab0:	jp     0x423b1d
  423ab2:	push   0x42
  423ab4:	jno    0x423a71
  423ab6:	jg     0x423a41
  423ab8:	or     bl,BYTE PTR [ebx]
  423aba:	scas   eax,DWORD PTR es:[di]
  423abc:	and    DWORD PTR [edi-0x4e],ecx
  423abf:	addr16 sbb ecx,0x238c86a4
  423ac6:	sbb    al,0x70
  423ac8:	cmp    edi,DWORD PTR [ebx+0xcd03fd0]
  423ace:	push   edx
  423acf:	shr    BYTE PTR [edx-0x60d508e],1
  423ad5:	sub    eax,0x26de72c5
  423ada:	sar    DWORD PTR ds:0x1b617055,1
  423ae0:	xlat   BYTE PTR ds:[ebx]
  423ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae2:	cwde   
  423ae3:	leave  
  423ae4:	push   eax
  423ae5:	mov    eax,eax
  423ae7:	in     eax,dx
  423ae8:	into   
  423ae9:	jge    0x423ac6
  423aeb:	stos   BYTE PTR es:[edi],al
  423aec:	mov    DWORD PTR [eax],esi
  423aee:	es sub al,0x2f
  423af1:	adc    ebx,edx
  423af3:	into   
  423af4:	or     DWORD PTR [eax],eax
  423af6:	jae    0x423a9b
  423af8:	sbb    al,0xc0
  423afa:	dec    edx
  423afb:	clc    
  423afc:	call   0xe66e429e
  423b01:	xchg   DWORD PTR [ebx+0x587321c6],ebp
  423b07:	das    
  423b08:	inc    eax
  423b09:	lds    esi,FWORD PTR [esi-0x2c98f25d]
  423b0f:	push   ecx
	...
  423b18:	add    BYTE PTR [eax],al
  423b1a:	mov    dh,0xdf
  423b1c:	fwait
  423b1d:	add    bh,bl
  423b1f:	inc    esi
  423b20:	mov    edi,0x261aff
  423b25:	jb     0x423b88
  423b27:	cmp    BYTE PTR [esi],bl
  423b29:	or     dh,dl
  423b2b:	mov    ah,0x1
  423b2d:	add    dh,bh
  423b2f:	add    DWORD PTR [eax],eax
  423b31:	add    ah,cl
  423b33:	dec    esp
  423b34:	jg     0x423b83
  423b36:	rcr    BYTE PTR [ebx+0x6b1db55d],1
  423b3c:	es mov bl,0xdc
  423b3f:	sbb    ah,0x6c
  423b42:	mov    bl,0x2a
  423b44:	aas    
  423b45:	dec    edx
  423b46:	test   eax,0xdec6dd19
  423b4b:	aaa    
  423b4c:	lahf   
  423b4d:	repz fnsave [ecx+0x41806b17]
  423b54:	push   esi
  423b55:	ret    
  423b56:	and    ebp,DWORD PTR [edi-0x12335deb]
  423b5c:	and    dh,BYTE PTR [ebx+eiz*4-0x3a]
  423b60:	xchg   ebp,eax
  423b61:	fwait
  423b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b63:	(bad)  
  423b64:	retf   
  423b65:	mov    dl,0x43
  423b67:	jo     0x423b6b
  423b69:	out    dx,al
  423b6a:	sbb    BYTE PTR ds:0x50b45483,0x18
  423b71:	(bad)  
  423b72:	and    edi,ebp
  423b74:	pop    esi
  423b75:	pop    edx
  423b76:	clc    
  423b77:	sbb    al,0xb4
  423b79:	dec    esp
  423b7a:	jmp    0x5dbe635d
  423b7f:	sahf   
  423b80:	sti    
  423b81:	sti    
  423b82:	jmp    FWORD PTR [ecx+0x2a51755f]
  423b88:	aaa    
  423b89:	dec    ebx
  423b8a:	pop    eax
  423b8b:	outs   dx,WORD PTR ds:[esi]
  423b8d:	iret   
  423b8e:	scas   al,BYTE PTR es:[edi]
  423b8f:	mov    eax,0x6de3fa1f
  423b94:	ficomp DWORD PTR [esp+eiz*2+0xac6a545]
  423b9b:	aad    0xeb
  423b9d:	pop    ebp
  423b9e:	sbb    dl,bl
  423ba0:	mov    cl,0x4c
  423ba2:	mov    dl,0xfd
  423ba4:	ffreep st(3)
  423ba6:	adc    dl,0x68
  423ba9:	into   
  423baa:	xchg   ecx,ebp
  423bac:	pop    edx
  423bad:	out    dx,al
  423bae:	popa   
  423baf:	fmul   DWORD PTR [edx-0x55]
  423bb2:	pop    eax
  423bb3:	sub    edx,DWORD PTR [edx]
  423bb5:	icebp  
  423bb6:	dec    esi
  423bb7:	cmp    dl,bh
  423bb9:	ret    
  423bba:	call   0x5834fbd1
  423bbf:	jge    0x423b51
  423bc1:	pop    ebx
  423bc2:	scas   al,BYTE PTR es:[edi]
  423bc3:	mov    WORD PTR [esi],?
  423bc5:	std    
  423bc6:	mov    cl,0xf
  423bc8:	(bad)  
  423bc9:	repnz xchg edi,eax
  423bcb:	or     dl,BYTE PTR [edi]
  423bcd:	sbb    ebp,DWORD PTR [ebx]
  423bcf:	mov    ds:0xeffe4113,al
  423bd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bd5:	jnp    0x423bfe
  423bd7:	inc    esp
  423bd8:	int3   
  423bd9:	adc    eax,0xc2561673
  423bde:	lock lock adc edx,ebp
  423be2:	xchg   esi,eax
  423be3:	push   ebx
  423be4:	adc    al,0x21
  423be6:	outs   dx,BYTE PTR ds:[esi]
  423be7:	lahf   
  423be8:	mov    eax,0x69b4a77b
  423bed:	jbe    0x423b8f
  423bef:	fcmovnb st,st(1)
  423bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf2:	mov    bl,0xdf
  423bf4:	ret    
  423bf5:	mov    eax,ds:0xd0e29293
  423bfa:	fld    st(6)
  423bfc:	rsqrtps xmm4,xmm3
  423bff:	test   al,0xc4
  423c01:	mov    edx,0xe79a340e
  423c06:	out    0x11,eax
  423c08:	mov    edi,0x2d76ba52
  423c0d:	mov    ds:0x88904ea9,al
  423c12:	sub    DWORD PTR [esi+0x7e],0xc09024fa
  423c19:	dec    ecx
  423c1a:	shr    BYTE PTR [esi+0x7],1
  423c1d:	test   eax,0x15787b8f
  423c22:	jns    0x423c0d
  423c24:	adc    eax,0x9a630ccd
  423c29:	popf   
  423c2a:	imul   ebx,DWORD PTR [eax],0xc4885799
  423c30:	mov    ecx,0x2139e70d
  423c35:	xlat   BYTE PTR ds:[ebx]
  423c36:	dec    ebp
  423c37:	add    eax,eax
  423c39:	imul   ebp,eax,0x29
  423c3c:	mov    ds:0xe2f52f7b,al
  423c41:	or     BYTE PTR [eax+0x6e656e3b],dl
  423c47:	mov    ebp,0x90a0cf65
  423c4c:	call   0x22f5:0x8e6c573b
  423c53:	lock inc eax
  423c55:	cmp    BYTE PTR [esp+ecx*8-0x8ac816],dl
  423c5c:	cmp    eax,0xb52bd04a
  423c61:	jns    0x423c22
  423c63:	jp     0x423c6d
  423c65:	mul    BYTE PTR [edi+eax*8-0x6d]
  423c69:	mov    bh,0x95
  423c6b:	repnz lods eax,DWORD PTR ds:[esi]
  423c6d:	fs xchg esp,eax
  423c6f:	or     BYTE PTR [ecx-0x2e],al
  423c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c73:	pop    ebx
  423c74:	loop   0x423c40
  423c76:	inc    eax
  423c77:	ret    0x2bd5
  423c7a:	add    BYTE PTR [eax-0x58],cl
  423c7d:	or     al,0xd2
  423c7f:	or     al,al
  423c81:	sub    BYTE PTR [ecx],ch
  423c83:	adc    dl,BYTE PTR [edi+0x7f]
  423c86:	sub    eax,0x2499c765
  423c8b:	mov    edx,0x54adcde0
  423c90:	(bad)  
  423c91:	mov    BYTE PTR [ecx],al
  423c93:	sub    eax,0x1d2627e9
  423c98:	mov    ds:0x51507781,al
  423c9d:	mov    ch,0x73
  423c9f:	sbb    dl,dl
  423ca1:	in     eax,0x3d
  423ca3:	mov    esi,0x6160d189
  423ca8:	xchg   DWORD PTR [eax],ebp
  423caa:	iret   
  423cab:	or     DWORD PTR [esi+0x3],edx
  423cae:	push   esp
  423caf:	in     al,dx
  423cb0:	test   eax,0xe7972b75
  423cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb6:	xchg   ebx,eax
  423cb7:	mov    esi,0xa2266de3
  423cbc:	xchg   ebx,eax
  423cbd:	dec    eax
  423cbe:	sub    al,0x8c
  423cc0:	das    
  423cc1:	(bad)  
  423cc2:	mov    dh,0xc3
  423cc4:	fild   WORD PTR [bx+si]
  423cc7:	mov    bh,0xd9
  423cc9:	(bad)  
  423cca:	lods   eax,DWORD PTR ds:[esi]
  423ccb:	inc    esp
  423ccc:	loop   0x423c51
  423cce:	(bad)  
  423ccf:	jae    0x423cdd
  423cd1:	test   bh,bh
  423cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cd4:	mov    eax,0x98d17637
  423cd9:	popa   
  423cda:	repnz xchg ebx,eax
  423cdc:	(bad)  
  423cde:	add    DWORD PTR [eax+0x2a632c83],ebx
  423ce4:	mov    ecx,0xf67b5b10
  423ce9:	imul   esi,DWORD PTR [edx-0x46e46c69],0xfafcc9e
  423cf3:	aaa    
  423cf4:	cmp    DWORD PTR [ecx-0x52],esi
  423cf7:	or     eax,0xb48836df
  423cfc:	push   esp
  423cfd:	lds    ebx,FWORD PTR [edi]
  423cff:	imul   ebp,DWORD PTR cs:[ecx+eax*2+0x6f6d9ff7],0x7c
  423d08:	xor    eax,0x398ddeb0
  423d0d:	sub    ecx,ebx
  423d0f:	imul   ebx,DWORD PTR [eax+eiz*1+0x64c8a514],0x30093c08
  423d1a:	inc    ebp
  423d1b:	mov    esp,0x525c4852
  423d20:	cli    
  423d21:	or     eax,0x1cacb3b0
  423d26:	mov    dh,BYTE PTR [edi]
  423d28:	in     al,0xaa
  423d2a:	mov    edi,0xe51c5f86
  423d2f:	clc    
	...
  423d38:	add    BYTE PTR [eax],al
  423d3a:	clc    
  423d3b:	mov    ah,0x7f
  423d3d:	cmp    eax,0xf5faff7f
  423d42:	mov    edx,0x1f57ffb2
  423d47:	push   ds
  423d48:	push   cs
  423d49:	cdq    
  423d4a:	aam    0xb6
  423d4c:	add    DWORD PTR [eax],eax
  423d4e:	inc    BYTE PTR [ecx]
  423d50:	add    BYTE PTR [eax],al
  423d52:	cwde   
  423d53:	xor    BYTE PTR [ebp+0xdbca90a],bl
  423d59:	mov    eax,0xb14cd883
  423d5e:	enter  0x22fc,0xa2
  423d62:	xor    al,0x75
  423d64:	ret    0xa37b
  423d67:	push   esi
  423d68:	and    BYTE PTR [edx],al
  423d6a:	clc    
  423d6b:	cmp    eax,0x32aee094
  423d70:	add    eax,0xfc6ecfa5
  423d75:	pop    ebx
  423d76:	aad    0x29
  423d78:	sbb    DWORD PTR [edi+0x15ce4fa5],0x89517af3
  423d82:	inc    edx
  423d83:	(bad)
  423d87:	ins    BYTE PTR es:[edi],dx
  423d88:	out    0x59,al
  423d8a:	inc    esi
  423d8b:	sahf   
  423d8c:	jb     0x423d70
  423d8e:	push   0x4d
  423d90:	adc    al,BYTE PTR [edx+0x5cf97cf1]
  423d96:	or     al,0x86
  423d99:	xor    dh,BYTE PTR [ebx-0x3b]
  423d9c:	pushf  
  423d9d:	retf   0xf9b0
  423da0:	sub    DWORD PTR [ebp-0x1b9ef1b2],0x48dc3254
  423daa:	pushf  
  423dab:	mov    cl,0x26
  423dad:	mov    dh,BYTE PTR [eax]
  423daf:	(bad)  
  423db0:	icebp  
  423db1:	sub    BYTE PTR [eax],al
  423db3:	mov    ecx,0xfe720910
  423db8:	dec    ebp
  423db9:	or     DWORD PTR [ebp-0x19bfc1a1],ebx
  423dbf:	outs   dx,BYTE PTR ds:[esi]
  423dc0:	xchg   esi,eax
  423dc1:	rol    ebp,0x6e
  423dc4:	and    eax,0x623b90d1
  423dc9:	outs   dx,DWORD PTR ds:[esi]
  423dca:	mov    al,0x3f
  423dcc:	hlt    
  423dcd:	enter  0x8b9e,0x3b
  423dd1:	pop    esp
  423dd2:	mov    bl,0xd2
  423dd4:	cmp    edx,DWORD PTR [esi-0x32]
  423dd7:	sahf   
  423dd8:	fld    DWORD PTR [edi-0x233599f5]
  423dde:	jmp    0x423e3f
  423de0:	mov    esp,edi
  423de2:	mov    eax,ds:0x8d16eb49
  423de7:	shr    DWORD PTR [ebp+0xac5e478],cl
  423ded:	add    DWORD PTR ds:0x2afe1f2d,ecx
  423df3:	or     ebx,DWORD PTR [eax+0x6e59b065]
  423df9:	(bad)  
  423dfa:	sti    
  423dfb:	dec    edi
  423dfc:	pop    eax
  423dfd:	data16 in al,dx
  423dff:	nop
  423e00:	mov    ch,0x27
  423e02:	push   ds
  423e03:	int    0x66
  423e05:	mov    al,ds:0xafc4b4a2
  423e0a:	jbe    0x423e5d
  423e0c:	inc    esp
  423e0d:	in     al,dx
  423e0e:	scas   al,BYTE PTR es:[edi]
  423e0f:	in     eax,dx
  423e10:	fmul   st,st(5)
  423e12:	inc    eax
  423e13:	test   BYTE PTR [ebp+ecx*2-0x3183bd07],dh
  423e1a:	(bad)  
  423e1b:	xor    ah,bh
  423e1d:	retf   
  423e1e:	pop    ss
  423e1f:	cmp    bl,dl
  423e21:	add    DWORD PTR [eax+0x3a397e36],ebx
  423e27:	xchg   ebp,eax
  423e28:	js     0x423e10
  423e2a:	xchg   ecx,eax
  423e2b:	imul   esi,DWORD PTR [edx+0x7b15fc27],0x20febeb0
  423e35:	test   DWORD PTR [edx+0x29f9a643],eax
  423e3b:	lock jnp 0x423ea6
  423e3e:	lds    ecx,FWORD PTR [eax-0x50a5515c]
  423e44:	nop
  423e45:	daa    
  423e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e47:	xor    DWORD PTR [eax-0x6b],0xffffff94
  423e4b:	mov    esi,0x8feed187
  423e50:	or     eax,0xd5b7ca2a
  423e55:	jmp    0x511a0a35
  423e5a:	cmp    eax,0x7314b462
  423e5f:	and    al,0x89
  423e61:	push   eax
  423e62:	popa   
  423e63:	mov    ds:0x6751a45d,al
  423e68:	mov    ah,0xcc
  423e6a:	add    al,bl
  423e6c:	je     0x423e6c
  423e6e:	xchg   DWORD PTR [edx],esp
  423e70:	lahf   
  423e71:	jne    0x423e22
  423e73:	mov    al,0x43
  423e75:	inc    ebp
  423e76:	pop    ecx
  423e77:	sub    BYTE PTR [bp+di-0x4d],dl
  423e7b:	ins    BYTE PTR es:[edi],dx
  423e7c:	inc    ecx
  423e7d:	repz pushf 
  423e7f:	or     bl,BYTE PTR [edi+0x5663df52]
  423e85:	(bad)  
  423e86:	sbb    esi,DWORD PTR [edi+0x7700b217]
  423e8c:	mov    ebx,0xc8250cbe
  423e91:	xor    BYTE PTR [esi],ch
  423e93:	ret    
  423e94:	imul   esi,esi,0x176e9fbd
  423e9a:	mov    dh,0xeb
  423e9c:	pop    ebp
  423e9d:	and    bl,bl
  423e9f:	mov    edi,0xe4cad717
  423ea4:	inc    ecx
  423ea5:	cwde   
  423ea6:	mov    al,ds:0xf7ab8d25
  423eab:	jl     0x423e51
  423ead:	pop    edx
  423eae:	mov    dl,0xf8
  423eb0:	js     0x423ed5
  423eb2:	shr    al,1
  423eb4:	ins    BYTE PTR es:[edi],dx
  423eb5:	xchg   esi,eax
  423eb6:	push   ss
  423eb7:	xlat   BYTE PTR ds:[ebx]
  423eb8:	aas    
  423eb9:	mov    ds:0x49c1a51d,eax
  423ebe:	xchg   edx,eax
  423ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ec0:	push   esp
  423ec1:	adc    BYTE PTR [edi],0x99
  423ec4:	jmp    0x423eb1
  423ec6:	cs (bad) 
  423ec8:	sbb    ah,BYTE PTR [edi+eiz*2-0x2ee4100b]
  423ecf:	sbb    edi,ebx
  423ed1:	call   0xee80c2de
  423ed6:	mov    al,ds:0xdf0780e5
  423edb:	je     0x423ea0
  423edd:	dec    esp
  423ede:	xchg   ecx,eax
  423edf:	push   esi
  423ee0:	mov    ds:0x8c83ef4a,eax
  423ee5:	out    0x8b,eax
  423ee7:	mov    esp,0xddc93643
  423eec:	and    DWORD PTR [ebp-0x9],ebp
  423eef:	push   ss
  423ef0:	lods   eax,DWORD PTR ds:[esi]
  423ef1:	mov    BYTE PTR [eax+0x310c15d5],cl
  423ef7:	cld    
  423ef8:	js     0x423f5c
  423efa:	ffree  st(6)
  423efc:	dec    edi
  423efd:	pop    edx
  423efe:	daa    
  423eff:	add    bh,0xb0
  423f02:	psubb  mm1,QWORD PTR [esp+esi*2]
  423f06:	pop    edi
  423f07:	mov    WORD PTR [eax-0x5b3c5ab2],cs
  423f0d:	dec    edx
  423f0e:	mov    WORD PTR [ebp+0x23c1ab03],es
  423f14:	sub    ecx,DWORD PTR [esi+0x40c9119a]
  423f1a:	das    
  423f1b:	add    BYTE PTR [ebx],0xd7
  423f1e:	pusha  
  423f1f:	or     esp,DWORD PTR [eax+0x38eeb404]
  423f25:	fiadd  WORD PTR [edi]
  423f27:	ret    0xbbf9
  423f2a:	nop
  423f2b:	std    
  423f2c:	and    cl,BYTE PTR ds:0xa493eb43
  423f32:	jl     0x423f1b
  423f34:	adc    edi,DWORD PTR [ecx+0x28]
  423f37:	add    eax,0xd36e2c6c
  423f3c:	shl    BYTE PTR [ebx],1
  423f3e:	pop    edi
  423f3f:	mov    esi,0x40073bb1
  423f44:	ds dec ecx
  423f46:	mov    al,ds:0xedc90f00
  423f4b:	cli    
  423f4c:	cmp    BYTE PTR [ecx-0x6b],bl
  423f4f:	fadd   QWORD PTR [eax]
	...
  423f59:	add    BYTE PTR [ecx],bh
  423f5b:	sbb    al,0x89
  423f5d:	out    0xad,eax
  423f5f:	idiv   DWORD PTR [edi-0x22]
  423f62:	test   eax,0xe9e902b9
  423f67:	js     0x423f19
  423f69:	jge    0x423f3d
  423f6b:	mov    eax,0x1fe0001
  423f70:	add    BYTE PTR [eax],al
  423f72:	fsub   QWORD PTR [esi+0x56]
  423f75:	mov    edx,0xf58312ab
  423f7a:	xchg   al,cl
  423f7c:	stos   BYTE PTR es:[edi],al
  423f7d:	mov    esp,0xa22ce22f
  423f82:	or     edi,eax
  423f84:	pop    eax
  423f85:	adc    BYTE PTR [ebx],0xc0
  423f88:	xor    dl,cl
  423f8a:	adc    esi,ebp
  423f8c:	ror    ecx,cl
  423f8e:	jge    0x423ff4
  423f90:	jp     0x424008
  423f92:	adc    edi,edx
  423f94:	add    al,0x4e
  423f96:	fdiv   DWORD PTR ds:0xc5fa8e8a
  423f9c:	es loop 0x423fbd
  423f9f:	mov    edx,0x38a4550e
  423fa4:	test   DWORD PTR [eax+0x1995dd03],ebx
  423faa:	fcom   DWORD PTR [ecx+ebx*1-0x21de6cde]
  423fb1:	call   FWORD PTR [edx]
  423fb3:	pusha  
  423fb4:	pop    edx
  423fb5:	xlat   BYTE PTR ds:[ebx]
  423fb6:	cmp    eax,0x84b0fa8
  423fbb:	mov    dh,dl
  423fbd:	or     eax,0xea9940f3
  423fc2:	mov    al,ds:0xebbce514
  423fc7:	jo     0x423fc9
  423fc9:	shr    DWORD PTR [esi+0x586f964b],0xf1
  423fd0:	adc    BYTE PTR [ebp+0x5a],dh
  423fd3:	ss inc ecx
  423fd5:	sub    bl,BYTE PTR [bx+si-0x7b36]
  423fda:	fsubp  st(6),st
  423fdc:	das    
  423fdd:	or     al,0x4b
  423fdf:	mov    bl,0xfb
  423fe1:	jmp    0x9dd50594
  423fe6:	inc    edx
  423fe7:	leave  
  423fe8:	repz (bad) 
  423feb:	jl     0x423fed
  423fed:	and    DWORD PTR [esp+edi*4+0x1e92c432],0xffffffba
  423ff5:	int3   
  423ff6:	outs   dx,DWORD PTR ds:[esi]
  423ff7:	ret    0x750a
  423ffa:	cmc    
  423ffb:	lock jl 0x42402c
  423ffe:	pop    ebp
  423fff:	out    dx,al
  424000:	jmp    0x33ec:0x7264342d
  424007:	cld    
  424008:	push   edi
  424009:	dec    esp
  42400a:	inc    edi
  42400b:	xor    DWORD PTR [edx-0x6b],edi
  42400e:	shl    BYTE PTR [ecx+esi*8+0x2ba7e76f],0x6
  424016:	sub    al,0x18
  424018:	add    bl,cl
  42401a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42401b:	ins    BYTE PTR es:[edi],dx
  42401c:	inc    esi
  42401d:	push   ebp
  42401e:	cs sub ecx,ebx
  424021:	loopne 0x423ff3
  424023:	cmc    
  424024:	mov    dh,al
  424026:	and    al,dh
  424028:	mov    BYTE PTR [edi],0xfb
  42402b:	sahf   
  42402c:	jno    0x424061
  42402e:	cmp    al,BYTE PTR [ecx-0x61]
  424031:	push   edx
  424032:	jecxz  0x424005
  424034:	lods   al,BYTE PTR ds:[esi]
  424035:	jl     0x424073
  424037:	pop    ebx
  424038:	jl     0x424038
  42403a:	imul   esp,DWORD PTR [ebx],0xda6bcedb
  424040:	mov    DWORD PTR [edi+0x4ea88018],edi
  424046:	test   eax,0x765e2526
  42404b:	and    DWORD PTR [ebx],esi
  42404d:	into   
  42404e:	jo     0x4240bf
  424050:	inc    bp
  424052:	cmp    eax,0xce3b4379
  424057:	fsub   st(4),st
  424059:	and    al,0x16
  42405b:	push   ds
  42405c:	call   0x8629e682
  424061:	jl     0x424006
  424063:	cvtps2pi mm2,QWORD PTR [ebx-0xf]
  424067:	jo     0x42403e
  424069:	sbb    DWORD PTR [edi],esp
  42406b:	popa   
  42406c:	xchg   ebx,eax
  42406d:	in     al,dx
  42406e:	or     DWORD PTR [eax],0x4a7dd23c
  424074:	ins    DWORD PTR es:[edi],dx
  424075:	sbb    bl,BYTE PTR [edi+0x65]
  424078:	dec    edi
  424079:	retf   0x8dc3
  42407c:	xchg   esi,eax
  42407d:	jae    0x4240d2
  42407f:	jne    0x4240cd
  424081:	stos   BYTE PTR es:[edi],al
  424082:	jmp    DWORD PTR [edx]
  424084:	inc    edi
  424085:	aad    0x37
  424087:	push   ebp
  424088:	nop
  424089:	in     al,0x15
  42408b:	sub    eax,0x6aa0d2c1
  424090:	add    dh,BYTE PTR [eax+0x4dca0442]
  424096:	loope  0x424046
  424098:	dec    esp
  424099:	adc    ah,ch
  42409b:	nop
  42409c:	mov    ecx,0x1ad28f04
  4240a1:	arpl   si,cx
  4240a3:	clc    
  4240a4:	add    eax,0xe06af416
  4240a9:	fstp   TBYTE PTR [edi]
  4240ab:	cmp    DWORD PTR [esi],edx
  4240ad:	les    eax,FWORD PTR [eax-0x2d]
  4240b0:	cli    
  4240b1:	mov    DWORD PTR [esi],edx
  4240b3:	jne    0x42411b
  4240b5:	pop    ss
  4240b6:	pop    ebp
  4240b7:	add    DWORD PTR [eax+0x180fbed],ebp
  4240bd:	jge    0x42404c
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	test   BYTE PTR [esp+esi*1+0x65],dh
  4240c4:	pop    edi
  4240c5:	jmp    0x424123
  4240c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240c8:	inc    ecx
  4240c9:	xchg   esp,eax
  4240ca:	push   es
  4240cb:	es pop esp
  4240cd:	aad    0xc
  4240cf:	jbe    0x424096
  4240d1:	rsqrtps xmm3,XMMWORD PTR [ebp+0x22]
  4240d5:	adc    bl,BYTE PTR [edx-0x7a217d5b]
  4240db:	or     BYTE PTR [edx+0x15981a33],dl
  4240e1:	ss mov ebp,0x7a95b3c4
  4240e7:	mov    ds:0xf74abc8f,al
  4240ec:	shrd   ebx,ecx,cl
  4240ef:	jo     0x424106
  4240f1:	call   0x27a4:0x33626a27
  4240f8:	je     0x424138
  4240fa:	mov    eax,0x99efe2ff
  4240ff:	sub    DWORD PTR [esi],esp
  424101:	rcl    DWORD PTR [edi+0x7701aad8],cl
  424107:	inc    edi
  424108:	inc    edi
  424109:	dec    BYTE PTR [eax-0x1]
  42410c:	dec    ebp
  42410d:	push   eax
  42410e:	ret    
  42410f:	fs mov bl,0x2b
  424112:	jb     0x424176
  424114:	and    al,0x9a
  424116:	mov    al,0x2
  424118:	sbb    cl,cl
  42411a:	xor    DWORD PTR [esi],eax
  42411c:	dec    esp
  42411d:	pop    ecx
  42411e:	jnp    0x424153
  424120:	xor    bh,ch
  424122:	das    
  424123:	arpl   WORD PTR [eax+eiz*1],si
  424126:	mov    ebx,0xd139a690
  42412b:	shl    BYTE PTR [edx+0x53],cl
  42412e:	push   0xffffffe6
  424130:	cmp    dl,dl
  424132:	push   esp
  424133:	enter  0x9d67,0x3c
  424137:	out    0x69,al
  424139:	jnp    0x424101
  42413b:	retf   0x5240
  42413e:	outs   dx,BYTE PTR ds:[esi]
  42413f:	pop    ebx
  424140:	cwde   
  424141:	push   edi
  424142:	inc    edi
  424143:	xchg   esi,eax
  424144:	push   esp
  424145:	xor    ebp,DWORD PTR [ebx-0x6f]
  424148:	jecxz  0x424163
  42414a:	xchg   DWORD PTR [ecx-0xbecfd6f],ebx
  424150:	sub    ebp,DWORD PTR [ebp+0x4ce082a4]
  424156:	mov    dl,0x94
  424158:	jbe    0x4241ad
  42415a:	sub    eax,0x2faf1121
  42415f:	or     al,0xb9
  424161:	xchg   ecx,eax
  424162:	sti    
  424163:	and    eax,0xbfaf1dff
  424168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424169:	sub    dh,BYTE PTR [edi-0x6]
  42416c:	in     al,0xf6
  42416e:	ins    DWORD PTR es:[edi],dx
  42416f:	fiadd  WORD PTR [eax]
	...
  424179:	add    BYTE PTR [ebp-0x4c],ah
  42417c:	sbb    dh,bl
  42417e:	fsin   
  424180:	out    0xbf,eax
  424182:	fs dec edi
  424184:	popf   
  424185:	outs   dx,BYTE PTR ds:[esi]
  424186:	mov    esp,0xd007df27
  42418b:	mov    edx,0x1fe0001
  424190:	add    BYTE PTR [eax],al
  424192:	and    ah,BYTE PTR [esi]
  424194:	and    eax,DWORD PTR ds:0xb4bbaf8
  42419a:	add    eax,0x1b45ce7c
  42419f:	daa    
  4241a0:	inc    ebp
  4241a1:	test   BYTE PTR [edx],al
  4241a3:	repnz mov DWORD PTR [ebx+ebx*1-0x32],edx
  4241a8:	data16 and ah,BYTE PTR [ecx]
  4241ab:	arpl   WORD PTR [edx],sp
  4241ad:	xor    ah,BYTE PTR [ecx-0x11]
  4241b0:	xchg   ebx,eax
  4241b1:	sbb    DWORD PTR [ebx-0x6e],ecx
  4241b4:	adc    ebx,DWORD PTR [esi-0x94fa8c6]
  4241ba:	ret    
  4241bb:	jmp    0xb3c079dc
  4241c0:	jns    0x4241ba
  4241c2:	pop    esp
  4241c3:	adc    al,0xda
  4241c5:	outs   dx,DWORD PTR ds:[esi]
  4241c6:	scas   eax,DWORD PTR es:[edi]
  4241c7:	loop   0x424236
  4241c9:	pop    ds
  4241ca:	fmul   DWORD PTR [ebx]
  4241cc:	jo     0x424220
  4241ce:	test   eax,0x3f69a866
  4241d3:	sbb    edx,DWORD PTR [ebx+0x38e1b48b]
  4241d9:	out    0x90,eax
  4241db:	clc    
  4241dc:	(bad)  
  4241dd:	and    al,0xc1
  4241df:	sti    
  4241e0:	mov    al,ds:0x9e581f6d
  4241e5:	dec    BYTE PTR [ecx-0x47de7b49]
  4241eb:	xor    BYTE PTR [eax],al
  4241ed:	pop    ecx
  4241ee:	xchg   BYTE PTR [esi],bl
  4241f0:	dec    esp
  4241f1:	mov    eax,ds:0xef6d990b
  4241f6:	outs   dx,DWORD PTR ds:[esi]
  4241f7:	cmp    ah,al
  4241f9:	sub    DWORD PTR [eax-0x797c4f35],edi
  4241ff:	sbb    al,0x41
  424201:	xor    edi,edx
  424203:	fiadd  WORD PTR [eax-0x12c43020]
  424209:	sub    ecx,DWORD PTR [esi+ebx*4]
  42420c:	(bad)  
  42420e:	inc    esi
  42420f:	leave  
  424210:	xor    al,0x26
  424212:	and    al,0x48
  424214:	rcr    DWORD PTR [edi-0x63e1ecbf],cl
  42421a:	rol    DWORD PTR [edx],1
  42421c:	mov    edi,0x87d3500f
  424221:	icebp  
  424222:	mov    ch,0xce
  424224:	add    eax,0x720ccbc2
  424229:	les    ebp,FWORD PTR [eax-0x3f813b5a]
  42422f:	sbb    DWORD PTR [eax+0x4a0a8bb4],ecx
  424235:	addr16 mov ds:0xf2ca,eax
  424239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42423a:	sbb    esi,DWORD PTR [eax+0x6317a8cf]
  424240:	dec    edi
  424241:	inc    esi
  424242:	mov    ch,0xaa
  424244:	push   eax
  424245:	mov    ebp,0x66b375af
  42424a:	mov    eax,ds:0xcd0a0e45
  42424f:	dec    ebp
  424250:	popf   
  424251:	mov    al,0x4
  424253:	mov    bl,0xe9
  424255:	sti    
  424256:	and    esp,ecx
  424258:	dec    BYTE PTR [eax+0x6fac2d6b]
  42425e:	mov    ebx,0xcb6e1c7c
  424263:	or     DWORD PTR [ebx+0x249017ff],edx
  424269:	mov    ds:0xa572fc19,eax
  42426e:	mov    ebp,0xd2b9a992
  424273:	push   es
  424274:	rcl    esi,0xf9
  424277:	nop
  424278:	xor    edx,DWORD PTR [eax+eax*2]
  42427b:	mov    eax,0xd2c67893
  424280:	or     dl,BYTE PTR [edx]
  424282:	retf   0xee71
  424285:	add    BYTE PTR [ecx],bl
  424287:	or     eax,DWORD PTR [ebx]
  424289:	cld    
  42428a:	(bad)  [edi-0x5a]
  42428d:	mov    ch,0x7f
  42428f:	dec    ebp
  424290:	sub    BYTE PTR [edi],0x44
  424293:	sub    eax,0xc28011d1
  424299:	and    eax,0xabcd546c
  42429e:	aad    0xcb
  4242a0:	test   DWORD PTR [esi-0x71f1b2be],0x943f8e32
  4242aa:	shl    BYTE PTR [ebp-0x49818198],0x95
  4242b1:	je     0x424247
  4242b3:	xchg   esi,eax
  4242b4:	rcr    dl,1
  4242b6:	ret    
  4242b7:	lods   eax,DWORD PTR ds:[esi]
  4242b8:	pop    esi
  4242b9:	dec    esp
  4242ba:	push   esi
  4242bb:	jae    0x424287
  4242bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242be:	cmc    
  4242bf:	jbe    0x4242b8
  4242c1:	inc    edi
  4242c2:	mov    bh,0x79
  4242c4:	push   0x2a9c42e4
  4242c9:	fistp  WORD PTR [edx-0x38]
  4242cc:	js     0x4242e6
  4242ce:	jp     0x4242a9
  4242d0:	inc    edx
  4242d1:	sbb    cl,BYTE PTR [ebx]
  4242d3:	xor    ebx,DWORD PTR [edx]
  4242d5:	jae    0x4242f6
  4242d7:	nop
  4242d8:	ror    DWORD PTR [ecx+0x7f74f969],0x19
  4242df:	int    0x53
  4242e1:	jmp    esp
  4242e3:	cmc    
  4242e4:	inc    ebx
  4242e5:	push   ebp
  4242e6:	inc    ecx
  4242e7:	call   0x8a18:0x339c65d9
  4242ee:	icebp  
  4242ef:	das    
  4242f0:	or     esi,DWORD PTR [eax-0x62]
  4242f3:	out    dx,eax
  4242f4:	pop    edx
  4242f5:	stos   BYTE PTR es:[edi],al
  4242f6:	mov    al,0x46
  4242f8:	stos   BYTE PTR es:[edi],al
  4242f9:	rcl    DWORD PTR [eax-0x449a0207],0x88
  424300:	cli    
  424301:	add    bh,BYTE PTR ds:0x124d810b
  424307:	(bad)  
  424308:	fimul  WORD PTR [edi]
  42430a:	xchg   edi,eax
  42430b:	test   al,0xf0
  42430d:	nop
  42430e:	(bad)  
  42430f:	and    DWORD PTR [ebp-0x69f1a3ba],esi
  424315:	stos   BYTE PTR es:[edi],al
  424316:	popa   
  424317:	test   al,0x65
  424319:	inc    esp
  42431a:	mov    DWORD PTR [eax],edi
  42431c:	xchg   BYTE PTR [esi],ch
  42431e:	lock mov esp,0xbd753a99
  424324:	fist   DWORD PTR [esi-0x6]
  424327:	dec    eax
  424328:	xor    al,0xcd
  42432a:	or     esi,DWORD PTR [edx+0x1c832f0f]
  424330:	mov    esp,0x8b33bb3e
  424335:	pop    ebx
  424336:	mov    ch,0xb
  424338:	call   0x50f1:0x97161ccc
  42433f:	or     esi,eax
  424341:	retf   0x6942
  424344:	add    al,0x36
  424346:	xchg   DWORD PTR [ebx],ebp
  424348:	fist   WORD PTR [ecx+0x7a24b8c9]
  42434e:	lds    esi,FWORD PTR [edi+0x35a2707]
  424354:	mov    eax,ds:0x3e6c4fe2
  424359:	icebp  
  42435a:	iret   
  42435b:	lahf   
  42435c:	hlt    
  42435d:	outs   dx,DWORD PTR ds:[esi]
  42435e:	addr16 pop ebp
  424360:	hlt    
  424361:	xchg   edx,eax
  424362:	or     ebp,esp
  424364:	imul   ebx,edi,0x31c7822b
  42436a:	mov    ebp,0x74ae5684
  42436f:	mov    dl,0x3e
  424371:	mov    bl,0x13
  424373:	shl    BYTE PTR [edx],0xce
  424376:	inc    esi
  424377:	in     eax,0xa9
  424379:	into   
  42437a:	or     BYTE PTR [eax+edx*1-0x40],dh
  42437e:	leave  
  42437f:	loopne 0x424327
  424381:	(bad)  
  424382:	jno    0x424376
  424384:	pop    ds
  424385:	cmp    al,0xf0
  424387:	push   edx
  424388:	in     eax,0xe9
  42438a:	rol    bh,0xd9
  42438d:	inc    edx
  42438e:	test   BYTE PTR [eax+eax*1+0x0],cl
	...
  42439a:	adc    bl,al
  42439c:	arpl   WORD PTR [edx-0x15],si
  42439f:	sti    
  4243a0:	adc    edi,eax
  4243a2:	jl     0x424328
  4243a4:	dec    edi
  4243a5:	dec    esp
  4243a6:	and    bl,dl
  4243a8:	inc    esi
  4243a9:	and    eax,0x1bcce
  4243ae:	inc    BYTE PTR [ecx]
  4243b0:	add    BYTE PTR [eax],al
  4243b2:	xor    eax,0xbeef5e63
  4243b7:	xchg   al,bl
  4243b9:	mov    eax,ds:0xf008791c
  4243be:	cdq    
  4243bf:	push   0xcae4c861
  4243c4:	xor    al,0xb3
  4243c6:	fst    DWORD PTR [edi+esi*4-0x3e]
  4243ca:	fld    DWORD PTR [edx-0x7c]
  4243cd:	in     al,dx
  4243ce:	cdq    
  4243cf:	mov    ecx,0x5d255683
  4243d4:	ret    0x3c8e
  4243d7:	xchg   ebp,eax
  4243d8:	and    ecx,ebx
  4243da:	xchg   edi,eax
  4243db:	scas   eax,DWORD PTR es:[edi]
  4243dc:	fs loope 0x4243f3
  4243df:	cmp    bh,BYTE PTR [eax]
  4243e1:	fild   DWORD PTR [esi-0x7737abf8]
  4243e7:	sub    eax,0x1f059699
  4243ec:	and    al,0xaf
  4243ee:	push   0xffffffab
  4243f0:	stc    
  4243f1:	push   ss
  4243f2:	ins    DWORD PTR es:[edi],dx
  4243f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243f4:	rcr    BYTE PTR [eax],cl
  4243f6:	push   ebp
  4243f7:	jno    0x4243b5
  4243f9:	jp     0x42442c
  4243fb:	xchg   ebx,eax
  4243fc:	xor    BYTE PTR [ebx-0x71],cl
  4243ff:	sbb    al,0xc1
  424401:	sbb    DWORD PTR [ebx+0x32],0xf67447f1
  424408:	xchg   edx,eax
  424409:	neg    DWORD PTR [eax+0x61190e10]
  42440f:	jg     0x4243b7
  424411:	pop    esi
  424412:	popf   
  424413:	pop    es
  424414:	sub    al,0x3c
  424416:	es js  0x42448f
  424419:	data16 fisubr DWORD PTR [eax-0x711f68e7]
  424420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424421:	scas   al,BYTE PTR es:[edi]
  424422:	fmul   DWORD PTR [ecx-0x2b6a95d]
  424428:	rcl    cl,0x11
  42442b:	leave  
  42442c:	add    al,0x46
  42442e:	ftst   
  424430:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424431:	mov    ebp,0x2852a4a8
  424436:	sub    DWORD PTR [eax+0x56],esi
  424439:	jmp    0x3113:0x88758580
  424440:	mov    ebx,DWORD PTR [ecx-0x39]
  424443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424444:	push   0xb7fb55bc
  424449:	pusha  
  42444a:	inc    edx
  42444b:	cli    
  42444c:	jne    0x424445
  42444e:	(bad)  
  42444f:	into   
  424450:	mov    dh,0xa5
  424452:	dec    esi
  424453:	adc    DWORD PTR [edi+0x2c40dad1],esp
  424459:	fstp   DWORD PTR [eax+eax*1]
  42445c:	xchg   esi,eax
  42445d:	push   eax
  42445e:	add    al,0x26
  424460:	push   ds
  424461:	out    0x9a,al
  424463:	lods   al,BYTE PTR gs:[esi]
  424465:	and    al,BYTE PTR [ebx+eax*8]
  424468:	adc    esi,0x5
  42446b:	cs xchg sp,ax
  42446e:	fild   DWORD PTR [eax+0x3556ccea]
  424474:	cmovne edi,DWORD PTR [edi]
  424477:	ja     0x4244ae
  424479:	stos   DWORD PTR es:[edi],eax
  42447a:	xor    ebx,DWORD PTR [edi]
  42447c:	push   edi
  42447d:	push   ss
  42447e:	shl    BYTE PTR [ebx+0x6e],1
  424481:	jmp    0x424421
  424483:	pop    edi
  424484:	test   BYTE PTR [edi+0x3b],dh
  424487:	dec    eax
  424488:	mov    esi,DWORD PTR [ecx+edi*1+0x7d]
  42448c:	imul   edx,DWORD PTR [ebp-0x37],0xd395e0e5
  424493:	jmp    0x4244c4
  424495:	jle    0x4244a7
  424497:	jo     0x424427
  424499:	mov    ecx,0x597a7e8
  42449e:	fstp   DWORD PTR [edx-0x6f]
  4244a1:	stc    
  4244a2:	adc    al,0xa0
  4244a4:	das    
  4244a5:	lahf   
  4244a6:	mov    eax,0x40ec24f3
  4244ab:	add    eax,ebp
  4244ad:	cmp    ebx,0xd9e1e999
  4244b3:	or     ah,dl
  4244b5:	aas    
  4244b6:	test   al,0x32
  4244b8:	mov    eax,0x335229c0
  4244bd:	cmp    DWORD PTR [edx-0x6c1a297d],eax
  4244c3:	mov    dl,0x30
  4244c5:	repz jno 0x4244d3
  4244c8:	retf   0xed8d
  4244cb:	mov    esp,0x4b222eef
  4244d0:	ror    BYTE PTR ds:0x222d4c97,1
  4244d6:	jmp    0x7268:0xa4690a
  4244dd:	jae    0x424541
  4244df:	inc    ebx
  4244e0:	and    cl,BYTE PTR [ecx-0x2805973d]
  4244e6:	add    esi,DWORD PTR [ecx-0x3613d9a0]
  4244ec:	xchg   ebx,eax
  4244ed:	cli    
  4244ee:	mov    ebx,0xff21905d
  4244f3:	sbb    eax,0xc2bafc63
  4244f8:	dec    BYTE PTR [edx]
  4244fa:	(bad)  
  4244fb:	loopne 0x424538
  4244fd:	jae    0x424486
  4244ff:	outs   dx,DWORD PTR ds:[esi]
  424500:	xor    DWORD PTR [edi-0x35],0xef9fec7d
  424507:	jns    0x424497
  424509:	adc    DWORD PTR [ebp+eax*8+0x58254708],eax
  424510:	push   esi
  424511:	add    al,0x51
  424513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424514:	push   ebp
  424515:	mov    esp,0xfa59e19d
  42451a:	call   0x206870f6
  42451f:	fdiv   DWORD PTR [ebx]
  424521:	mov    ?,WORD PTR [edi-0x30]
  424524:	dec    esi
  424525:	jno    0x424503
  424527:	hlt    
  424528:	(bad)  
  424529:	out    dx,al
  42452a:	cmp    ch,BYTE PTR [ebp-0x7d]
  42452d:	mov    ch,0x49
  42452f:	pop    ebp
  424530:	mov    ebp,0x872ac414
  424535:	mov    bh,0x9a
  424537:	stos   BYTE PTR es:[edi],al
  424538:	lock adc cl,BYTE PTR [ecx]
  42453b:	es jb  0x42450e
  42453e:	mov    bh,0xb3
  424540:	push   edx
  424541:	xor    eax,0x62f4e78f
  424546:	dec    ebp
  424547:	cmc    
  424548:	xchg   ecx,eax
  424549:	cmp    al,0x50
  42454b:	cdq    
  42454c:	loopne 0x4244d7
  42454e:	xor    DWORD PTR [ecx+0x4d],edi
  424551:	cli    
  424552:	inc    DWORD PTR [ebp-0x1785a897]
  424558:	mov    esi,0x7a7953dc
  42455d:	xchg   ebx,eax
  42455e:	shl    DWORD PTR [edx+0x6437d1f0],0xcd
  424565:	ret    0x1f27
  424568:	jg     0x42455c
  42456a:	test   ch,dl
  42456c:	xchg   ebp,eax
  42456d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42456e:	mov    ds:0xc904c249,al
  424573:	aas    
  424574:	test   eax,0x5e17507e
  424579:	sbb    eax,0x9dbb680c
  42457e:	sbb    eax,0x8d28d301
  424583:	call   FWORD PTR [ebp+ecx*8+0x345e1dd3]
  42458a:	sbb    eax,0xea1bf4bc
  42458f:	and    ch,BYTE PTR [eax+0x3a]
  424592:	cpuid  
  424594:	xlat   BYTE PTR ds:[ebx]
  424595:	jns    0x42457f
  424597:	sbb    DWORD PTR [ecx+0x5a2b3082],esp
  42459d:	bound  ebp,QWORD PTR ds:0xf176fea6
  4245a3:	xchg   edx,eax
  4245a4:	mov    edi,0xf1690d5b
  4245a9:	scas   eax,DWORD PTR es:[edi]
  4245aa:	push   cs
  4245ab:	loope  0x4245de
  4245ad:	(bad)  
  4245ae:	mov    ebx,0xae
  4245b3:	add    BYTE PTR [eax],al
  4245b5:	add    BYTE PTR [eax],al
  4245b7:	add    BYTE PTR [eax],al
  4245b9:	add    BYTE PTR [esi],cl
  4245bb:	and    BYTE PTR [eax-0x404051c1],cl
  4245c1:	xor    edi,edx
  4245c3:	sub    dh,BYTE PTR [eax+0x1bfef0b7]
  4245c9:	xchg   esi,eax
  4245ca:	int3   
  4245cb:	mov    esi,0x1fe0001
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	hlt    
  4245d3:	sbb    ch,BYTE PTR [eax-0x22b5f6c0]
  4245d9:	inc    esp
  4245da:	mov    ds:0x33125d72,eax
  4245df:	pop    esi
  4245e0:	xchg   ebp,esp
  4245e2:	outs   dx,DWORD PTR ds:[esi]
  4245e3:	popa   
  4245e4:	test   al,0x1b
  4245e6:	mov    cs,WORD PTR [ecx-0x701c227d]
  4245ec:	in     al,dx
  4245ed:	fist   WORD PTR [edx]
  4245ef:	xchg   ebx,eax
  4245f0:	pop    ebx
  4245f1:	push   cs
  4245f2:	cmp    bl,BYTE PTR ds:0x42c083b8
  4245f8:	outs   dx,DWORD PTR ds:[esi]
  4245f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245fa:	jmp    esp
  4245fc:	aas    
  4245fd:	in     al,dx
  4245fe:	fmul   QWORD PTR [ebp-0x77]
  424601:	scas   eax,DWORD PTR es:[edi]
  424602:	cdq    
  424603:	sar    ebx,1
  424605:	mov    DWORD PTR ds:0x949dae4c,ecx
  42460b:	jb     0x424607
  42460d:	adc    BYTE PTR [esi+edi*8+0x4e02262c],dh
  424614:	jnp    0x424650
  424616:	shl    DWORD PTR [esi-0x2],1
  424619:	and    DWORD PTR ds:0x4a5ff6d2,ecx
  42461f:	ds out dx,eax
  424621:	dec    edx
  424622:	jl     0x4245e9
  424624:	fisttp QWORD PTR [ebx-0x474de9f7]
  42462a:	pop    ebp
  42462b:	pop    esi
  42462c:	pop    es
  42462d:	and    BYTE PTR [ebp+0x117ab886],al
  424633:	mov    ah,0x66
  424635:	dec    edx
  424636:	fisttp DWORD PTR [eax]
  424638:	jl     0x4245f1
  42463a:	loop   0x424647
  42463c:	nop
  42463d:	lahf   
  42463e:	mov    al,ds:0xf6bc0961
  424643:	in     al,0xb2
  424645:	or     dl,BYTE PTR [esi-0x7a]
  424648:	adc    BYTE PTR es:0x85a625ca,bh
  42464f:	sbb    ah,BYTE PTR [esp+edi*8-0x35]
  424653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424654:	mov    ds:0xde6982a4,al
  424659:	sub    DWORD PTR ds:0xdfa82f49,0xcdffe2bc
  424663:	adc    eax,0xc576f52f
  424668:	ins    DWORD PTR es:[edi],dx
  424669:	or     dh,BYTE PTR [eax-0x3a]
  42466c:	sub    dl,BYTE PTR [esi-0x239d0235]
  424672:	sti    
  424673:	shl    DWORD PTR [ecx],cl
  424675:	popa   
  424676:	(bad)  
  424677:	loop   0x42462c
  424679:	int3   
  42467a:	int    0xd8
  42467c:	mov    BYTE PTR [esi],ah
  42467e:	jp     0x4246b8
  424680:	iret   
  424681:	and    edx,0xffffffd6
  424684:	mov    eax,0x3ed4e6d6
  424689:	(bad)  
  42468a:	shl    BYTE PTR [eax],1
  42468c:	das    
  42468d:	xor    eax,0x523f4fc9
  424692:	add    al,0x97
  424694:	es xchg ebp,eax
  424696:	add    DWORD PTR [eax+edx*2],ecx
  424699:	and    ch,BYTE PTR [eax+0x72c5a66c]
  42469f:	popf   
  4246a0:	xchg   esi,eax
  4246a1:	xor    ch,bh
  4246a3:	cs cmp al,0xe1
  4246a6:	jmp    0xec0d:0xb6a4d983
  4246ad:	pop    edx
  4246ae:	shl    DWORD PTR [esi],cl
  4246b0:	pusha  
  4246b1:	stos   DWORD PTR es:[edi],eax
  4246b2:	fcomip st,st(5)
  4246b4:	mov    es,WORD PTR [eax-0x5eefe6a4]
  4246ba:	dec    eax
  4246bb:	mov    WORD PTR [ecx+0x4d778190],?
  4246c1:	push   0xffffffcd
  4246c3:	jbe    0x42469b
  4246c5:	adc    BYTE PTR [ebp+0x72],0x37
  4246c9:	push   ebp
  4246ca:	arpl   ax,cx
  4246cc:	push   0x6791de39
  4246d1:	hlt    
  4246d2:	jo     0x42469c
  4246d4:	loopne 0x4246f5
  4246d6:	jmp    0x1ba89c55
  4246db:	fs int3 
  4246dd:	mov    ds:0x7ef29b0f,al
  4246e2:	stos   BYTE PTR es:[edi],al
  4246e3:	inc    ebp
  4246e4:	shl    DWORD PTR [eax],cl
  4246e6:	mov    ds:0x6784b0dc,eax
  4246eb:	inc    edi
  4246ec:	xchg   DWORD PTR [edi+0x50d005ac],edx
  4246f2:	mov    ebp,0x789e2e30
  4246f7:	icebp  
  4246f8:	adc    bh,BYTE PTR [edx+0x60]
  4246fb:	rcl    al,cl
  4246fd:	jmp    0x4246ce
  4246ff:	and    bh,ah
  424701:	stc    
  424702:	sbb    eax,edi
  424704:	xchg   BYTE PTR [eax+0x78],dl
  424707:	aad    0x9f
  424709:	pop    eax
  42470a:	ror    BYTE PTR [ebx-0x14],0x38
  42470e:	mov    esi,0xc3b1168c
  424713:	mov    esi,0x600dd539
  424718:	and    BYTE PTR [esi-0x7700d891],0x52
  42471f:	cwde   
  424720:	fwait
  424721:	int    0xf7
  424723:	add    DWORD PTR [edi+0x52e36980],esi
  424729:	xchg   esp,eax
  42472a:	hlt    
  42472b:	mov    cl,0xba
  42472d:	push   0xec605ae5
  424732:	sub    cl,0xd3
  424735:	fdecstp 
  424737:	imul   eax,DWORD PTR [esi+0x60a4c8cd],0x79
  42473e:	pop    es
  42473f:	out    0x17,al
  424741:	fwait
  424742:	js     0x424722
  424744:	das    
  424745:	xchg   esi,eax
  424746:	adc    DWORD PTR [ebp+0x319c47d2],eax
  42474c:	xchg   esp,eax
  42474d:	jecxz  0x424737
  42474f:	ss add edx,ebp
  424752:	jne    0x424789
  424754:	iret   
  424755:	cmp    DWORD PTR [eax+edi*8-0x71b15874],edx
  42475c:	fdivr  QWORD PTR [esi+edx*8]
  42475f:	sbb    eax,DWORD PTR [ebx]
  424761:	sub    al,0xc7
  424763:	pop    ss
  424764:	aas    
  424765:	push   edx
  424766:	push   cs
  424767:	ror    ebx,0xac
  42476a:	fdivr  DWORD PTR [edi-0x1f]
  42476d:	and    ebx,DWORD PTR [ecx+0x27e1450c]
  424773:	adc    al,0x5e
  424775:	aad    0xb1
  424777:	pop    eax
  424778:	xor    DWORD PTR [ebp+0x18aefd24],eax
  42477e:	dec    eax
  42477f:	and    cl,0x6a
  424782:	cld    
  424783:	inc    ebp
  424784:	imul   edi,DWORD PTR [ecx],0xffffff9d
  424787:	xor    ah,dh
  424789:	mov    DWORD PTR [esp+ecx*1-0x461db424],edx
  424790:	out    0x5b,al
  424792:	adc    al,0xab
  424794:	aaa    
  424795:	jl     0x424719
  424797:	pop    ebp
  424798:	das    
  424799:	adc    eax,0x2891bb01
  42479e:	push   eax
  42479f:	fdivr  DWORD PTR [esi-0x6]
  4247a2:	int    0xff
  4247a4:	ret    0x25dd
  4247a7:	jecxz  0x4247f9
  4247a9:	mov    DWORD PTR [esi],ecx
  4247ab:	pop    ebx
  4247ac:	sbb    eax,0x5a3836c1
  4247b1:	sbb    BYTE PTR [esi],dl
  4247b3:	outs   dx,BYTE PTR ds:[esi]
  4247b4:	or     DWORD PTR [ebp-0x10],esp
  4247b7:	mov    dl,0xf3
  4247b9:	sub    bh,ch
  4247bb:	jmp    0x94527611
  4247c0:	fist   DWORD PTR [edi-0x23c98b17]
  4247c6:	mov    ecx,0xc9935dfc
  4247cb:	outs   dx,BYTE PTR ds:[esi]
  4247cc:	jp     0x424790
  4247ce:	inc    ebp
  4247cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  4247d8:	add    BYTE PTR [eax],al
  4247da:	pop    esp
  4247db:	mov    edi,0xdce35063
  4247e0:	jg     0x4247a1
  4247e2:	data16 adc al,0x63
  4247e5:	sbb    al,0xca
  4247e7:	and    DWORD PTR [esi+0x1c0ca88],eax
  4247ed:	add    dh,bh
  4247ef:	add    DWORD PTR [eax],eax
  4247f1:	add    BYTE PTR [edx],ah
  4247f3:	call   0x4937:0x5b3ae8bd
  4247fa:	or     al,0xea
  4247fc:	(bad)  
  4247fd:	daa    
  4247fe:	pop    edi
  4247ff:	jecxz  0x424867
  424801:	imul   ecx,DWORD PTR [esi],0x6a
  424804:	aad    0xca
  424806:	push   edx
  424807:	push   ebx
  424808:	cmp    al,0xa7
  42480a:	mov    WORD PTR [eax],?
  42480c:	pop    ebp
  42480d:	fdiv   DWORD PTR [eax-0x59]
  424810:	mov    WORD PTR [eax-0x5c],cs
  424813:	and    DWORD PTR [edx],edx
  424815:	xchg   esi,eax
  424816:	or     eax,0xdd05123b
  42481b:	pop    edi
  42481c:	aad    0xa8
  42481e:	mov    bh,0x8a
  424820:	pop    esi
  424821:	push   DWORD PTR [ecx+0x25]
  424824:	inc    esi
  424825:	pop    ss
  424826:	cs in  al,dx
  424828:	cmc    
  424829:	out    0xb9,al
  42482b:	cld    
  42482c:	mov    eax,0x879a276b
  424831:	popa   
  424832:	and    BYTE PTR [edi],bh
  424834:	push   eax
  424835:	into   
  424836:	sub    al,BYTE PTR [edi+0x7e3ed6d]
  42483c:	or     BYTE PTR ds:0x254415c4,al
  424842:	shl    BYTE PTR [edx],cl
  424844:	inc    edi
  424845:	pop    ebx
  424846:	xchg   esi,eax
  424847:	jo     0x4247dd
  424849:	fs rcr esp,0xf4
  42484d:	sub    BYTE PTR [edx+0x9],al
  424850:	rcl    BYTE PTR [ebp+0x1e41b285],0x47
  424857:	add    ebp,DWORD PTR [ebx+0x6c6b3489]
  42485d:	mov    ds:0xf1049248,eax
  424862:	xchg   ebp,eax
  424863:	adc    al,0x2f
  424865:	inc    edx
  424866:	xor    al,0xce
  424868:	leave  
  424869:	pushf  
  42486a:	ror    DWORD PTR [esi-0x7],0x49
  42486e:	dec    esi
  42486f:	out    dx,eax
  424870:	leave  
  424871:	fwait
  424872:	(bad)  
  424873:	fdivr  QWORD PTR [esi]
  424875:	sub    edi,DWORD PTR [esi]
  424877:	arpl   di,dx
  424879:	xchg   esp,eax
  42487a:	fldpi  
  42487c:	inc    esp
  42487d:	scas   al,BYTE PTR es:[edi]
  42487e:	and    DWORD PTR [esi*1-0x8edd5d9],esi
  424885:	push   0x20617704
  42488a:	xchg   esi,eax
  42488b:	push   ecx
  42488c:	xchg   esp,eax
  42488d:	cmc    
  42488e:	jge    0x4248db
  424890:	mov    ds:0x2d0c9b1a,al
  424895:	fld    QWORD PTR ds:0xd8ff3a21
  42489b:	(bad)  
  42489c:	mov    esp,0x8e25a87d
  4248a1:	fst    DWORD PTR ds:0xd4abdd3a
  4248a7:	mov    eax,DWORD PTR [ecx+0x44]
  4248aa:	pop    esp
  4248ab:	xchg   dl,dh
  4248ad:	je     0x4248a6
  4248af:	pop    ebp
  4248b0:	push   edx
  4248b1:	int    0x32
  4248b3:	and    BYTE PTR [eax+0x34ce91a3],bh
  4248b9:	xchg   edx,eax
  4248ba:	pop    ss
  4248bb:	rcr    DWORD PTR [edx],1
  4248bd:	xor    bl,0x93
  4248c0:	call   0x12d9a6fb
  4248c5:	push   ecx
  4248c6:	cwde   
  4248c7:	pop    ebx
  4248c8:	push   eax
  4248c9:	dec    esi
  4248ca:	add    bl,dl
  4248cc:	cmp    ebx,DWORD PTR ds:0x4ea67a8a
  4248d2:	stc    
  4248d3:	(bad)  
  4248d4:	jg     0x424952
  4248d6:	mov    al,0xdc
  4248d8:	daa    
  4248d9:	(bad)  
  4248da:	sub    edx,DWORD PTR [ebx-0x74a77f8d]
  4248e0:	xchg   edi,eax
  4248e1:	retf   0x13f5
  4248e4:	add    eax,0x61d60b7a
  4248e9:	leave  
  4248ea:	lods   al,BYTE PTR ds:[esi]
  4248eb:	scas   al,BYTE PTR es:[edi]
  4248ec:	mov    dl,0x5c
  4248ee:	les    eax,FWORD PTR [eax]
  4248f0:	mov    dh,0x45
  4248f2:	lock mov dh,dh
  4248f5:	lods   eax,DWORD PTR ds:[esi]
  4248f6:	or     al,BYTE PTR [esi]
  4248f8:	and    eax,0x99876638
  4248fd:	test   BYTE PTR [edx-0x69],dh
  424900:	mov    eax,0xcf0bc719
  424905:	stos   BYTE PTR es:[edi],al
  424906:	sub    BYTE PTR [edx+ebp*1+0x153289af],dl
  42490d:	cwde   
  42490e:	mov    dh,0x12
  424910:	and    BYTE PTR [ecx+0x1d1d1486],bh
  424916:	imul   ebx,DWORD PTR [ebx-0x3b263b9f],0x6a5595e6
  424920:	adc    BYTE PTR [ecx-0x4e],0x73
  424924:	xchg   edi,eax
  424925:	push   ds
  424926:	test   DWORD PTR [edi-0x5b],edi
  424929:	in     al,dx
  42492a:	xchg   ebx,eax
  42492b:	dec    edi
  42492c:	sub    DWORD PTR [ebx],ebx
  42492e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42492f:	mov    al,0xc0
  424931:	dec    eax
  424932:	ffreep st(7)
  424934:	gs mov eax,0x1a7acce2
  42493a:	push   0x5f9abc86
  42493f:	pusha  
  424940:	or     ebx,DWORD PTR [eax+0x4a87ef3d]
  424946:	inc    edi
  424947:	test   eax,0x49af0ec9
  42494c:	sbb    ch,BYTE PTR ds:0xbf8fbe3d
  424952:	lock jns 0x4249c7
  424955:	hlt    
  424956:	imul   esp,DWORD PTR [esi],0x1e75e225
  42495c:	mov    ebp,0x2a51297f
  424961:	sub    ch,BYTE PTR [eax-0x7906e620]
  424967:	ret    
  424968:	es (bad) 
  42496a:	int    0x8d
  42496c:	jmp    0x424939
  42496e:	outs   dx,BYTE PTR ds:[esi]
  42496f:	out    dx,al
  424970:	shl    bl,0x16
  424973:	pushf  
  424974:	or     eax,0x238b357d
  424979:	xlat   BYTE PTR ds:[ebx]
  42497a:	sbb    BYTE PTR [ecx-0x7d],0x5
  42497e:	mov    ds:0xe7dc4b90,al
  424983:	dec    eax
  424984:	into   
  424985:	imul   esi,DWORD PTR [ebx],0xffffffb7
  424988:	das    
  424989:	sti    
  42498a:	pop    esi
  42498b:	add    DWORD PTR [ebp-0x1e0dea8e],0x6f
  424992:	cmp    ebx,DWORD PTR [edi+0x2f3085fb]
  424998:	call   0xbd692f7f
  42499d:	xor    eax,0x925936d1
  4249a2:	jmp    0x2f82:0xb50d8f87
  4249a9:	out    dx,eax
  4249aa:	dec    esi
  4249ab:	jb     0x4249e2
  4249ad:	lahf   
  4249ae:	mov    ?,WORD PTR [ebx+0x1]
  4249b1:	fadd   QWORD PTR [ecx+0x62af3452]
  4249b7:	cmp    esi,DWORD PTR ds:0x521bc955
  4249bd:	js     0x424942
  4249bf:	and    BYTE PTR [ebx],0x79
  4249c2:	jl     0x42497b
  4249c4:	daa    
  4249c5:	and    esp,DWORD PTR [edx-0x7f]
  4249c8:	push   edi
  4249c9:	jno    0x42494b
  4249cb:	cmp    ch,bl
  4249cd:	dec    esi
  4249ce:	rcr    DWORD PTR [edi+0x61],cl
  4249d1:	pop    ds
  4249d2:	aad    0xa5
  4249d4:	pop    eax
  4249d5:	test   eax,0xe272f506
  4249da:	jmp    0x9e2b:0x97c84b65
  4249e1:	fidivr WORD PTR [ebp+eiz*8+0x70babbc0]
  4249e8:	pop    ebx
  4249e9:	push   cs
  4249ea:	fwait
  4249eb:	imul   ebp,DWORD PTR [edx+ecx*8-0x73],0x5d
  4249f3:	add    BYTE PTR [eax],al
  4249f5:	add    BYTE PTR [eax],al
  4249f7:	add    BYTE PTR [eax],al
  4249f9:	add    BYTE PTR [ebx+0x55],al
  4249fc:	pusha  
  4249fd:	(bad)  
  4249fe:	jbe    0x4249bf
  424a00:	out    dx,eax
  424a01:	(bad)  
  424a03:	test   al,0x37
  424a05:	stos   DWORD PTR es:[edi],eax
  424a06:	cmp    DWORD PTR [ebp+eax*1+0x1c2c885],ebp
  424a0d:	add    dh,bh
  424a0f:	add    DWORD PTR [eax],eax
  424a11:	add    BYTE PTR [esi+0x36],ah
  424a14:	mov    dl,0xe4
  424a16:	push   esi
  424a17:	jp     0x424a82
  424a19:	sub    eax,0xa8337704
  424a1e:	and    dh,BYTE PTR [eax]
  424a20:	or     BYTE PTR [edi+0x1407cddf],ch
  424a26:	bsf    ebp,DWORD PTR [ebp-0xf3ebf63]
  424a2d:	sahf   
  424a2e:	ins    DWORD PTR es:[edi],dx
  424a2f:	lods   eax,DWORD PTR ds:[esi]
  424a30:	mov    edx,0x5d4fc2d3
  424a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a36:	jae    0x424a9f
  424a38:	cmc    
  424a39:	pop    es
  424a3a:	data16 ja 0x424a94
  424a3d:	idiv   ebp
  424a3f:	add    DWORD PTR [ebp-0x7963ed66],esi
  424a45:	mov    ecx,0x1b188caa
  424a4a:	cli    
  424a4b:	mov    al,0xfd
  424a4d:	or     al,0xa9
  424a4f:	lock pop ecx
  424a51:	stc    
  424a52:	xchg   ebx,eax
  424a53:	inc    edx
  424a54:	mov    dl,0xce
  424a56:	in     eax,0x36
  424a58:	test   eax,0x29277734
  424a5d:	adc    BYTE PTR [esi],0xcc
  424a60:	pop    ebp
  424a61:	push   es
  424a62:	jg     0x424a9b
  424a64:	out    dx,al
  424a65:	and    esp,ecx
  424a67:	push   eax
  424a68:	inc    ebx
  424a69:	or     DWORD PTR [edx],ecx
  424a6b:	inc    ebx
  424a6c:	inc    edi
  424a6d:	xor    dl,BYTE PTR [eax]
  424a6f:	inc    ebp
  424a70:	jge    0x424a6b
  424a72:	xor    eax,0x4decc69b
  424a77:	xor    eax,0x38be93f8
  424a7c:	mov    WORD PTR [eax-0x3859461b],?
  424a82:	or     BYTE PTR [ecx-0x4ca4fd2e],dh
  424a88:	rcl    bh,0x4f
  424a8b:	shl    edx,1
  424a8d:	add    dl,ch
  424a8f:	push   cs
  424a90:	cmp    BYTE PTR [edi-0x10c0878d],cl
  424a96:	pop    edx
  424a97:	into   
  424a98:	adc    BYTE PTR [eax+0x39],0x9b
  424a9c:	test   eax,0xee33ec97
  424aa1:	jl     0x424a45
  424aa3:	jmp    0x424aa9
  424aa5:	jae    0x424aa6
  424aa7:	mov    esi,0x7c12c7db
  424aac:	or     BYTE PTR [ecx+ecx*2+0x7],0x2a
  424ab1:	call   0x9a40c77e
  424ab6:	push   ss
  424ab7:	repz xchg edx,eax
  424ab9:	jnp    0x424acb
  424abb:	retf   0x5135
  424abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424abf:	jge    0x424ae3
  424ac1:	rcr    dl,cl
  424ac3:	daa    
  424ac4:	ss cmp bh,bl
  424ac7:	cdq    
  424ac8:	and    esi,DWORD PTR [ebx-0x57078f12]
  424ace:	jecxz  0x424aaa
  424ad0:	push   ebx
  424ad1:	iret   
  424ad2:	daa    
  424ad3:	mov    edx,0x82cef5da
  424ad8:	pop    esp
  424ad9:	xor    DWORD PTR [esi-0x47ad9db8],esi
  424adf:	ja     0x424abe
  424ae1:	fisubr WORD PTR [ebp+0x42]
  424ae4:	leave  
  424ae5:	cwde   
  424ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ae7:	sub    DWORD PTR [esi],edi
  424ae9:	sbb    eax,0x2a8261dc
  424aee:	push   ss
  424aef:	cld    
  424af0:	adc    DWORD PTR [edi],ebx
  424af2:	cmp    eax,0x68e5e4f7
  424af7:	ds mov edx,0x5bc71725
  424afd:	dec    ebp
  424afe:	mov    eax,ds:0x5ad59336
  424b03:	jnp    0x424a91
  424b05:	call   0x449b3c0a
  424b0a:	mov    edx,esp
  424b0c:	mov    bl,0x77
  424b0e:	sub    BYTE PTR [ebx+0x68d773ba],dh
  424b14:	adc    DWORD PTR [edi+0x4e06bedb],0xe21b438b
  424b1e:	cld    
  424b1f:	add    eax,0xf56358e8
  424b24:	ds ja  0x424ae5
  424b27:	sub    BYTE PTR [edx+0x770f04d5],al
  424b2d:	jae    0x424b9c
  424b2f:	out    0xfb,al
  424b31:	shl    BYTE PTR [ebp-0x7bdbc44],cl
  424b37:	inc    ebp
  424b38:	adc    bh,BYTE PTR [ecx-0x24]
  424b3b:	sbb    al,0x24
  424b3d:	sbb    DWORD PTR [ebp-0x769af91d],esi
  424b43:	add    eax,0xdcaa5445
  424b48:	stos   DWORD PTR es:[edi],eax
  424b49:	push   ecx
  424b4a:	adc    ecx,0xd1d654ac
  424b50:	pop    ebx
  424b51:	push   0x9c300ab6
  424b56:	sub    eax,0x446e9370
  424b5b:	jecxz  0x424b91
  424b5d:	hlt    
  424b5e:	shr    edi,cl
  424b60:	cmp    ch,BYTE PTR [ecx+0x4d]
  424b63:	mov    ah,0x78
  424b65:	dec    edx
  424b66:	sub    bl,BYTE PTR [edx]
  424b68:	fisttp DWORD PTR [edi+0x3fa9048b]
  424b6e:	into   
  424b6f:	pop    es
  424b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b71:	sub    ah,BYTE PTR [edi-0x6c091b20]
  424b77:	pop    ecx
  424b78:	(bad)  
  424b79:	jo     0x424b69
  424b7b:	inc    eax
  424b7c:	jmp    0x424b24
  424b7e:	icebp  
  424b7f:	daa    
  424b80:	daa    
  424b81:	pushf  
  424b82:	jbe    0x424b5b
  424b84:	iret   
  424b85:	xchg   esp,eax
  424b86:	fsub   QWORD PTR [ecx-0x3fe909dc]
  424b8c:	and    ah,BYTE PTR [ebp+0x3d25d7cd]
  424b92:	loope  0x424beb
  424b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b95:	mov    ss,WORD PTR gs:[edx+0x19]
  424b99:	push   ss
  424b9a:	push   0xffffffb2
  424b9c:	std    
  424b9d:	pop    esp
  424b9e:	dec    ebx
  424b9f:	mov    eax,ds:0xc2814f15
  424ba4:	dec    ebx
  424ba5:	bound  ebx,QWORD PTR [ebp+0x37]
  424ba8:	cmp    BYTE PTR [esi-0x58],0x61
  424bac:	xor    ah,BYTE PTR [eax]
  424bae:	cdq    
  424baf:	xlat   BYTE PTR ds:[ebx]
  424bb0:	xchg   edx,eax
  424bb1:	push   cs
  424bb2:	lahf   
  424bb3:	int    0xdf
  424bb5:	clc    
  424bb6:	push   eax
  424bb7:	mov    bh,0xdb
  424bb9:	enter  0xf0a8,0xba
  424bbd:	pop    ebp
  424bbe:	popa   
  424bbf:	mov    bl,0x41
  424bc1:	sbb    bl,ch
  424bc3:	sbb    ebp,DWORD PTR [ebp+0x4b2ad393]
  424bc9:	push   ebx
  424bca:	add    al,0x30
  424bcc:	jne    0x424b4e
  424bce:	mov    edx,0xded89e33
  424bd3:	jno    0x424bce
  424bd5:	mov    dh,0x24
  424bd7:	pop    ss
  424bd8:	mov    DWORD PTR [esi+0x66],edi
  424bdb:	pop    esp
  424bdc:	call   0x8b7075bf
  424be1:	pushf  
  424be2:	cmc    
  424be3:	out    dx,al
  424be4:	in     eax,0x27
  424be6:	mov    BYTE PTR [edx],bl
  424be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be9:	sbb    BYTE PTR [eax+0x162eb1e8],cl
  424bef:	loopne 0x424b96
  424bf1:	sar    DWORD PTR [ecx+ecx*1],0xe2
  424bf5:	inc    ebp
  424bf6:	inc    esp
  424bf7:	(bad)  
  424bf8:	xor    BYTE PTR [edi+0x545f9dc0],ah
  424bfe:	mov    cl,0xe7
  424c00:	mov    esp,DWORD PTR [ebx]
  424c02:	adc    dl,BYTE PTR [eax+0x1]
  424c05:	jecxz  0x424c64
  424c07:	sbb    al,0x6b
  424c09:	and    ch,BYTE PTR [esi+0x5e7f1bc4]
  424c0f:	push   es
	...
  424c18:	add    BYTE PTR [eax],al
  424c1a:	push   edi
  424c1b:	sub    eax,0xba7f9a07
  424c20:	fucomip st,st(5)
  424c22:	addr16 jmp 0xa8d5808f
  424c28:	lods   eax,DWORD PTR ds:[esi]
  424c29:	xlat   BYTE PTR ds:[ebx]
  424c2a:	mov    ah,0x1
  424c2d:	add    dh,bh
  424c2f:	add    DWORD PTR [eax],eax
  424c31:	add    BYTE PTR [eax-0x6e74ea24],bl
  424c37:	call   0xff91:0x68a6d7e0
  424c3e:	xchg   BYTE PTR [eax-0x46],bh
  424c41:	push   edi
  424c42:	aas    
  424c43:	jp     0x424cb8
  424c45:	jmp    0xaf:0x20bd0e43
  424c4c:	cs es call 0x7d6:0x5803b655
  424c55:	xchg   BYTE PTR [edi-0x7f],ah
  424c58:	outs   dx,DWORD PTR ds:[esi]
  424c59:	mov    esp,0x98b7fad
  424c5e:	addr16 lock mov bl,ch
  424c62:	out    0xf8,al
  424c64:	repz add eax,ebp
  424c67:	in     eax,0x28
  424c69:	jbe    0x424bed
  424c6b:	sbb    dl,bl
  424c6d:	fs leave 
  424c6f:	jmp    0xd17a:0x9da0abde
  424c76:	cmp    ebp,DWORD PTR [ebx+0x2722593c]
  424c7c:	cld    
  424c7d:	mov    ah,0x5a
  424c7f:	dec    esi
  424c80:	clc    
  424c81:	aas    
  424c82:	push   esp
  424c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c84:	mov    edi,0x2786e0e1
  424c89:	jb     0x424c24
  424c8b:	inc    esi
  424c8c:	xchg   ecx,eax
  424c8d:	and    DWORD PTR [eax+esi*2+0x5d],ebx
  424c91:	mov    edi,DWORD PTR [ecx-0x50677126]
  424c97:	jae    0x424ca3
  424c99:	pop    esi
  424c9a:	pop    esp
  424c9b:	push   cs
  424c9c:	push   edx
  424c9d:	push   es
  424c9e:	push   edi
  424c9f:	dec    DWORD PTR [ebp+0x79327775]
  424ca5:	adc    al,BYTE PTR [ebx]
  424ca7:	sub    eax,DWORD PTR [esi]
  424ca9:	rcl    al,cl
  424cab:	push   esi
  424cac:	mov    ds:0xf9c5b873,al
  424cb1:	xchg   ecx,eax
  424cb2:	jnp    0x424c63
  424cb4:	ret    0x17f3
  424cb7:	pop    esp
  424cb8:	imul   eax,ebx,0x20622cc8
  424cbe:	adc    al,0x74
  424cc0:	mov    ds:0x2fbcfe24,eax
  424cc5:	jle    0x424c67
  424cc7:	pop    edi
  424cc8:	push   edx
  424cc9:	retf   
  424cca:	fs gs retf 0x9eb6
  424ccf:	jb     0x424cfa
  424cd1:	push   es
  424cd2:	jns    0x424cbb
  424cd4:	pop    edx
  424cd5:	es xchg edi,eax
  424cd7:	dec    esp
  424cd8:	inc    edi
  424cd9:	dec    ebx
  424cda:	mov    bh,0xa2
  424cdc:	pop    ds
  424cdd:	jns    0x424d18
  424cdf:	mov    dh,0x90
  424ce1:	jl     0x424d36
  424ce3:	stc    
  424ce4:	jp     0x424cda
  424ce6:	cmp    eax,ecx
  424ce8:	ja     0x424d68
  424cea:	xchg   esp,eax
  424ceb:	les    eax,FWORD PTR [edi+0x9996e38]
  424cf1:	ins    BYTE PTR es:[edi],dx
  424cf2:	stc    
  424cf3:	mov    DWORD PTR [ecx],ebp
  424cf5:	ds mov dl,0x28
  424cf8:	mov    al,0x31
  424cfa:	call   0x766d:0x7579aff7
  424d01:	loop   0x424d29
  424d03:	cmp    dl,0xc7
  424d06:	xlat   BYTE PTR ds:[ebx]
  424d07:	into   
  424d08:	xchg   ecx,eax
  424d09:	nop
  424d0a:	outs   dx,BYTE PTR ds:[esi]
  424d0b:	lea    esp,[eax]
  424d0d:	mov    ebx,0xf588554c
  424d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d13:	lods   al,BYTE PTR ds:[esi]
  424d14:	push   eax
  424d15:	push   0x9f30eb9a
  424d1a:	sub    ecx,edi
  424d1c:	arpl   WORD PTR [eax+0x33],bx
  424d1f:	mov    bh,BYTE PTR [esi+0x62]
  424d22:	mov    bh,BYTE PTR [esi+0x21]
  424d25:	bnd jbe 0x424da6
  424d28:	sub    eax,0x688099a2
  424d2d:	mov    esp,0xa6e76617
  424d32:	mov    edi,0xd59393d3
  424d37:	pop    edx
  424d38:	loopne 0x424d93
  424d3a:	add    al,0x6c
  424d3c:	cld    
  424d3d:	mov    ch,0x9c
  424d3f:	es pcmpgtw mm7,QWORD PTR cs:[ecx+0x4c]
  424d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d46:	pop    esp
  424d47:	mov    ecx,0x85186c66
  424d4c:	or     bl,BYTE PTR [ecx-0xb]
  424d4f:	retf   0xee01
  424d52:	pop    ecx
  424d53:	arpl   WORD PTR [ebx],bp
  424d55:	dec    esi
  424d56:	rol    ebx,cl
  424d58:	out    0xd8,eax
  424d5a:	mov    bl,0xa5
  424d5c:	mov    bh,0x8a
  424d5e:	mov    bh,0xb0
  424d60:	pop    esi
  424d61:	push   ss
  424d62:	imul   eax,DWORD PTR [ebp-0x6cbde47f],0x3d2c87c8
  424d6c:	push   ss
  424d6d:	push   ds
  424d6e:	(bad)
  424d71:	or     ebp,DWORD PTR [ecx-0x43459cf0]
  424d77:	leave  
  424d78:	mov    dh,BYTE PTR [ebx+ebp*2-0x3a]
  424d7c:	test   DWORD PTR [ebp+edx*1-0xa],eax
  424d80:	in     eax,0xd8
  424d82:	test   BYTE PTR [edx-0x80],dh
  424d85:	sahf   
  424d86:	inc    esi
  424d87:	xchg   BYTE PTR [eax],ah
  424d89:	cwde   
  424d8a:	jne    0x424da1
  424d8c:	retf   0xa4cb
  424d8f:	leave  
  424d90:	movsx  edi,BYTE PTR [ebx+0x5b308a44]
  424d97:	scas   eax,DWORD PTR es:[edi]
  424d98:	lods   al,BYTE PTR ds:[esi]
  424d99:	inc    ebp
  424d9a:	imul   edx,eax,0xd64cce0b
  424da0:	mov    ebp,0xc1be68f1
  424da5:	(bad)  
  424da7:	jmp    0x3855b2ae
  424dac:	mov    cl,0xc4
  424dae:	mov    eax,0x9916510c
  424db3:	repnz xor eax,0xf245d760
  424db9:	and    DWORD PTR [edx],0x8a40baa6
  424dbf:	lods   eax,DWORD PTR ds:[esi]
  424dc0:	test   DWORD PTR [eax],ecx
  424dc2:	inc    ebx
  424dc3:	adc    ah,BYTE PTR [edi+0x1b850f12]
  424dc9:	and    eax,0xae20ed93
  424dce:	mov    cl,0x7
  424dd0:	std    
  424dd1:	popa   
  424dd2:	call   0x2175:0xcbf05fae
  424dd9:	pop    edi
  424dda:	pop    ecx
  424ddb:	pop    esp
  424ddc:	lds    ebp,FWORD PTR [ebp+0x3109b730]
  424de2:	pop    ds
  424de3:	arpl   WORD PTR [eax-0x3eb10770],bp
  424de9:	shl    DWORD PTR [ebx-0x7b],0x52
  424ded:	cwde   
  424dee:	mov    dl,0xbf
  424df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424df1:	cdq    
  424df2:	adc    BYTE PTR [ecx+0x54],bl
  424df5:	inc    edi
  424df6:	icebp  
  424df7:	mov    al,ds:0x547415f3
  424dfc:	cmp    DWORD PTR [edx],0xffffff8f
  424dff:	ret    
  424e00:	jge    0x424e61
  424e02:	rcr    BYTE PTR [edx+0x38],0x10
  424e06:	xchg   ecx,eax
  424e07:	sbb    ebx,edx
  424e09:	outs   dx,DWORD PTR ds:[esi]
  424e0a:	dec    esi
  424e0b:	ins    DWORD PTR es:[edi],dx
  424e0c:	aam    0x22
  424e0e:	out    0xed,al
  424e10:	popa   
  424e11:	cdq    
  424e12:	adc    ebp,DWORD PTR [edx+0x5554d0b2]
  424e18:	push   eax
  424e19:	(bad)  
  424e1a:	or     edi,DWORD PTR [ebx-0x69]
  424e1d:	mov    ecx,0x662300fe
  424e22:	lahf   
  424e23:	shl    dh,1
  424e25:	adc    BYTE PTR [edi+edx*2],ch
  424e28:	es aad 0x7
  424e2b:	bound  edi,QWORD PTR [esi+0x5b]
  424e2e:	repnz push ds
	...
  424e38:	add    BYTE PTR [eax],al
  424e3a:	ins    BYTE PTR es:[edi],dx
  424e3b:	sub    ch,BYTE PTR [ebx]
  424e3d:	outs   dx,DWORD PTR es:[esi]
  424e3f:	daa    
  424e40:	ins    DWORD PTR es:[edi],dx
  424e41:	push   0xffffffda
  424e43:	add    BYTE PTR [ecx],0x9d
  424e46:	aas    
  424e47:	push   esp
  424e48:	pusha  
  424e49:	adc    al,0xc4
  424e4b:	mov    BYTE PTR [ecx],0x0
  424e4e:	inc    BYTE PTR [ecx]
  424e50:	add    BYTE PTR [eax],al
  424e52:	mov    bl,0x76
  424e54:	cdq    
  424e55:	jb     0x424dd9
  424e57:	mov    esp,0x257484fc
  424e5c:	inc    ebp
  424e5d:	dec    edx
  424e5e:	mov    ebp,0xbbc4e294
  424e63:	xchg   ecx,eax
  424e64:	idiv   DWORD PTR [ebx+0x155142ee]
  424e6a:	in     eax,0x9d
  424e6c:	or     eax,0xdb16fc79
  424e71:	mov    edx,0x758e8f2f
  424e76:	mov    ch,0xc9
  424e78:	jmp    0x424ee6
  424e7a:	fisubr DWORD PTR [ecx+0x16f77000]
  424e80:	mov    al,0x7c
  424e82:	pop    edi
  424e83:	imul   edx,DWORD PTR [ecx-0x4ce54379],0x18
  424e8a:	push   edi
  424e8b:	dec    edx
  424e8c:	hlt    
  424e8d:	fcomip st,st(7)
  424e8f:	loope  0x424e5c
  424e91:	inc    esp
  424e92:	mov    WORD PTR [eax],gs
  424e94:	xor    ebp,DWORD PTR [ecx-0x587be4a2]
  424e9a:	not    DWORD PTR [ebp+0x31be4f6f]
  424ea0:	ss test eax,0x46046fd4
  424ea6:	inc    ebp
  424ea7:	mov    ecx,0x6b9dfc9b
  424eac:	fldcw  WORD PTR [esi+ebp*1+0x32]
  424eb0:	lods   eax,DWORD PTR ds:[esi]
  424eb1:	in     eax,0xdb
  424eb3:	jg     0x424eeb
  424eb5:	or     ebx,DWORD PTR [esi-0x4ce4ed6e]
  424ebb:	add    esp,DWORD PTR [ebx+eiz*2-0x5c]
  424ebf:	ret    0x2f26
  424ec2:	or     al,0x56
  424ec4:	sar    DWORD PTR [eax+0x6d],1
  424ec7:	hlt    
  424ec8:	mov    WORD PTR [ebp-0x74],?
  424ecb:	add    edx,DWORD PTR [ebp+0xb]
  424ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ecf:	ds ins DWORD PTR es:[edi],dx
  424ed1:	hlt    
  424ed2:	imul   ebx,DWORD PTR [edx+ebx*4+0x79],0x3b8c8539
  424eda:	popa   
  424edb:	jne    0x424e6e
  424edd:	pushf  
  424ede:	arpl   WORD PTR [edi],sp
  424ee0:	es jno 0x424f3b
  424ee3:	sti    
  424ee4:	mov    ecx,0x6910ae94
  424ee9:	pop    ebp
  424eea:	(bad)  
  424eeb:	mov    ch,0x3b
  424eed:	call   0xbbda0256
  424ef2:	pop    edi
  424ef3:	inc    DWORD PTR [ecx-0xa]
  424ef6:	jne    0x424e98
  424ef8:	mov    esp,cs
  424efa:	mov    dl,0x9f
  424efc:	jg     0x424f6c
  424efe:	and    eax,edx
  424f00:	pop    ebx
  424f01:	sbb    cl,BYTE PTR [esi]
  424f03:	pop    esp
  424f04:	jns    0x424ef3
  424f06:	sbb    al,0xbd
  424f08:	adc    ch,bh
  424f0a:	std    
  424f0b:	sbb    dh,dh
  424f0d:	arpl   WORD PTR [ebx-0x27],cx
  424f10:	into   
  424f11:	cmp    dl,BYTE PTR [ebx-0x50]
  424f14:	add    BYTE PTR [eax],dh
  424f16:	outs   dx,DWORD PTR ds:[esi]
  424f17:	int    0x90
  424f19:	pop    esp
  424f1a:	sub    BYTE PTR [edi-0x42],0x98
  424f1e:	test   DWORD PTR [edx],esi
  424f20:	mov    edi,0x78c32a83
  424f25:	xor    ch,BYTE PTR [ebx]
  424f27:	mov    edx,0xe4006089
  424f2c:	in     al,0xbf
  424f2e:	lds    esi,FWORD PTR [ebp-0x9]
  424f31:	aam    0xd5
  424f33:	icebp  
  424f34:	jge    0x424fb5
  424f36:	test   DWORD PTR [ebx],ebx
  424f38:	add    al,0xa7
  424f3a:	cld    
  424f3b:	cld    
  424f3c:	mov    dl,0xc1
  424f3e:	jmp    0xe1007097
  424f43:	ds aad 0x88
  424f46:	mov    ecx,edx
  424f48:	pop    ebx
  424f49:	fild   DWORD PTR [edi-0x63]
  424f4c:	(bad)  
  424f4e:	mov    ebx,0x709415ca
  424f53:	push   ss
  424f54:	enter  0xce8,0x12
  424f58:	mov    esi,esp
  424f5a:	adc    edx,DWORD PTR [edi+0x7fe4aebf]
  424f60:	sub    BYTE PTR [eax+edi*4],bh
  424f63:	and    dl,al
  424f65:	mov    edi,0x72c69901
  424f6a:	adc    DWORD PTR [ecx],ebp
  424f6c:	ins    BYTE PTR es:[edi],dx
  424f6d:	and    al,BYTE PTR [edi+esi*2-0x5d]
  424f71:	push   ss
  424f72:	repnz or al,bh
  424f75:	mov    ds:0xf28d5dad,al
  424f7a:	in     al,0x64
  424f7c:	cld    
  424f7d:	sub    BYTE PTR [ebx-0x16],bh
  424f80:	aad    0x75
  424f82:	pop    ds
  424f83:	out    0xc8,eax
  424f85:	pop    ecx
  424f86:	(bad)  
  424f87:	jge    0x424fdd
  424f89:	inc    eax
  424f8a:	and    al,0x34
  424f8c:	xchg   ecx,eax
  424f8d:	stc    
  424f8e:	sub    bh,BYTE PTR [edx-0x1c]
  424f91:	sar    BYTE PTR [edx-0x6a30b9fb],cl
  424f97:	aam    0x7a
  424f99:	and    ch,BYTE PTR ds:0x18c856ee
  424f9f:	cmp    ebx,edi
  424fa1:	icebp  
  424fa2:	idiv   DWORD PTR [ebx+ebx*8+0x691adbf]
  424fa9:	sbb    edx,DWORD PTR [esi]
  424fab:	lods   eax,DWORD PTR ds:[esi]
  424fac:	call   0x3758a370
  424fb1:	and    BYTE PTR [esi+edi*2-0x74],cl
  424fb5:	dec    esi
  424fb6:	retf   0xf219
  424fb9:	mov    DWORD PTR [eax-0x3],esp
  424fbc:	mov    esp,0xe772e90f
  424fc1:	loop   0x424fac
  424fc3:	cwde   
  424fc4:	pop    edx
  424fc5:	test   eax,0x5fb11a80
  424fca:	shr    BYTE PTR [ecx+0x69],1
  424fcd:	or     BYTE PTR [ecx-0xd],dl
  424fd0:	mov    bl,0x8e
  424fd2:	int    0xb9
  424fd4:	sbb    ah,0xdb
  424fd7:	jle    0x424fc2
  424fd9:	mov    ebp,0xab5f711e
  424fde:	loopne 0x424fe9
  424fe0:	shl    esp,0x56
  424fe3:	addr16 sub al,0xf1
  424fe6:	call   0x334c:0xe9f23ee9
  424fed:	rcl    BYTE PTR [eax],0x52
  424ff0:	cli    
  424ff1:	xchg   BYTE PTR [esi+0x4d],ch
  424ff4:	inc    eax
  424ff5:	in     eax,dx
  424ff6:	jno    0x425054
  424ff8:	lock out dx,al
  424ffa:	mov    ecx,0x94326ba3
  424fff:	cmp    bl,cl
  425001:	mov    al,0xb7
  425003:	call   0xccd2:0x549c0689
  42500a:	mov    dl,cl
  42500c:	adc    eax,0xc90cef89
  425011:	jbe    0x424ff4
  425013:	jge    0x425023
  425015:	push   esi
  425016:	nop
  425017:	rcr    BYTE PTR [ecx-0xdcd8478],0xbd
  42501e:	sub    dh,BYTE PTR [ebp+0x16]
  425021:	fcomi  st,st(6)
  425023:	jp     0x424fa8
  425025:	sub    al,0xe9
  425027:	ds sti 
  425029:	call   0x5b947155
  42502e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42502f:	ss dec edi
  425031:	sbb    cl,BYTE PTR [edi-0x5b]
  425034:	cmp    edx,DWORD PTR [esi-0x7e23523e]
  42503a:	mov    esp,0x48c28740
  42503f:	xchg   ebp,eax
  425040:	jl     0x42500a
  425042:	loope  0x42504e
  425044:	sbb    edi,DWORD PTR [esi+0x53]
  425047:	mov    WORD PTR [edi+0x68],cs
  42504a:	dec    esi
  42504b:	stos   DWORD PTR es:[edi],eax
  42504c:	jne    0x425065
  42504e:	mov    ecx,DWORD PTR [ebp+0x0]
  425054:	add    BYTE PTR [eax],al
  425056:	add    BYTE PTR [eax],al
  425058:	add    BYTE PTR [eax],al
  42505a:	inc    ebx
  42505b:	lea    ebx,[edi]
  42505d:	and    bh,bl
  42505f:	mov    dl,0x7f
  425061:	out    dx,eax
  425062:	leave  
  425063:	enter  0xb54,0x71
  425067:	xchg   edx,eax
  425068:	ret    
  425069:	fs ret 0x1c8
  42506d:	add    dh,bh
  42506f:	add    DWORD PTR [eax],eax
  425071:	add    dl,ah
  425073:	fiadd  DWORD PTR [ecx]
  425075:	sti    
  425076:	sbb    dl,BYTE PTR [esi+0x13]
  425079:	cmp    dh,bl
  42507b:	mov    edx,0xb4d18c0e
  425080:	mov    ecx,0x287840ef
  425085:	ja     0x4250bf
  425087:	in     al,0x6f
  425089:	xor    eax,0xf43c359a
  42508e:	cmp    ch,dl
  425090:	(bad)  
  425091:	out    dx,al
  425092:	mov    al,ds:0xa9d6b4d9
  425097:	shl    bl,1
  425099:	mov    ds,WORD PTR [ebx+0x23]
  42509c:	xor    BYTE PTR [eax-0x37],0xdb
  4250a0:	test   BYTE PTR ss:[ecx-0x6646761c],0xe7
  4250a8:	pop    ebp
  4250a9:	sahf   
  4250aa:	fsubr  DWORD PTR [edx-0x47]
  4250ad:	outs   dx,BYTE PTR ds:[esi]
  4250ae:	dec    eax
  4250af:	adc    eax,0x6a96c2c3
  4250b4:	sbb    DWORD PTR [edx],0xfffffff8
  4250b7:	int3   
  4250b8:	pushf  
  4250b9:	je     0x425132
  4250bb:	jb     0x4250a9
  4250bd:	mov    ds,esi
  4250bf:	repz jne 0x425135
  4250c2:	aas    
  4250c3:	adc    esi,ebx
  4250c5:	ins    DWORD PTR es:[edi],dx
  4250c6:	cmp    dl,BYTE PTR [ecx-0x7d]
  4250c9:	test   DWORD PTR [ebx-0x3f],edi
  4250cc:	xchg   edx,eax
  4250cd:	dec    esp
  4250ce:	and    eax,0x6ee85ce8
  4250d3:	jge    0x4250be
  4250d5:	jmp    0x389e:0xe478509a
  4250dc:	xor    ch,cl
  4250de:	mov    eax,0x5ece6637
  4250e3:	jo     0x42513c
  4250e5:	stos   DWORD PTR es:[edi],eax
  4250e6:	dec    eax
  4250e7:	jae    0x4250bb
  4250e9:	xchg   ecx,eax
  4250ea:	out    dx,eax
  4250eb:	add    al,0x95
  4250ed:	dec    edi
  4250ee:	push   eax
  4250ef:	pop    eax
  4250f0:	push   edx
  4250f1:	dec    edx
  4250f2:	adc    al,0x32
  4250f4:	jnp    0x42507d
  4250f6:	bound  esp,QWORD PTR [eax+0x7e3c988a]
  4250fc:	aam    0x91
  4250fe:	xchg   ecx,eax
  4250ff:	arpl   bp,dx
  425101:	pop    ebp
  425102:	or     DWORD PTR [esi],ecx
  425104:	and    eax,0x56ffe2d0
  425109:	scas   eax,DWORD PTR es:[edi]
  42510a:	xchg   ecx,eax
  42510b:	dec    eax
  42510c:	jge    0x425164
  42510e:	test   esp,esi
  425110:	fcom   DWORD PTR ds:[edx]
  425113:	(bad)  
  425114:	ins    DWORD PTR es:[edi],dx
  425115:	(bad)  
  425116:	xor    esi,eax
  425118:	stos   DWORD PTR es:[edi],eax
  425119:	jns    0x425169
  42511b:	mov    dh,cl
  42511d:	daa    
  42511e:	mov    ds:0x4dab8d0b,al
  425123:	jg     0x4250ca
  425125:	in     eax,0x75
  425127:	adc    al,0x9d
  425129:	and    DWORD PTR [esi],esi
  42512b:	mov    eax,0xfc6b5060
  425130:	(bad)  
  425133:	test   dl,bh
  425135:	imul   BYTE PTR [edx+0x6d2d03d4]
  42513b:	addr16 push es
  42513d:	ins    BYTE PTR es:[edi],dx
  42513e:	cld    
  42513f:	rol    dl,0x5c
  425142:	loope  0x425123
  425144:	pop    esp
  425145:	bound  eax,QWORD PTR [eax+0x5a]
  425148:	sub    ebx,ecx
  42514a:	in     eax,dx
  42514b:	popf   
  42514c:	sbb    al,0x38
  42514e:	add    DWORD PTR [esi+0x40],esi
  425151:	rcl    DWORD PTR [eax+0x4d],cl
  425154:	fmul   DWORD PTR [edx-0x16a64fd]
  42515a:	pop    eax
  42515b:	push   ss
  42515c:	mov    edx,ds
  42515e:	or     ebp,DWORD PTR [edx+ecx*2-0x1b]
  425162:	or     eax,0x64b6eaff
  425167:	int    0x4
  425169:	aas    
  42516a:	mov    DWORD PTR [ebx+0x286c93c1],ebx
  425170:	(bad)  
  425171:	enter  0xb2e1,0x70
  425175:	psrld  mm4,mm4
  425178:	jb     0x42512b
  42517a:	jae    0x425192
  42517c:	lods   al,BYTE PTR ds:[esi]
  42517d:	or     BYTE PTR [ebx+0x57d0758f],al
  425183:	test   BYTE PTR [edx],bh
  425185:	ret    
  425186:	cmp    edi,esp
  425188:	cmp    bl,BYTE PTR [ebp+0x12]
  42518b:	outs   dx,BYTE PTR ds:[esi]
  42518c:	cmp    ah,ch
  42518e:	cli    
  42518f:	std    
  425190:	mov    BYTE PTR [edi],dl
  425192:	inc    edx
  425193:	add    BYTE PTR [edx-0x2c],0xd3
  425197:	(bad)  
  425198:	mov    esp,0x72e173e3
  42519d:	jb     0x42517c
  42519f:	cld    
  4251a0:	xchg   esp,eax
  4251a1:	cli    
  4251a2:	stos   BYTE PTR es:[edi],al
  4251a3:	das    
  4251a4:	imul   ecx,DWORD PTR [edi+0x6c],0xba4e9a58
  4251ab:	xchg   ebx,eax
  4251ac:	and    edx,esp
  4251ae:	pxor   mm6,QWORD PTR [edi+eax*2+0x3327cce3]
  4251b6:	xor    al,bh
  4251b8:	out    0x49,al
  4251ba:	xor    ebx,esi
  4251bc:	pcmpeqb mm2,QWORD PTR [edi]
  4251bf:	adc    al,0x4b
  4251c1:	retf   0xceca
  4251c4:	je     0x4251db
  4251c6:	outs   dx,BYTE PTR ds:[esi]
  4251c7:	dec    edx
  4251c8:	(bad)  
  4251cb:	and    BYTE PTR [edx],cl
  4251cd:	scas   al,BYTE PTR es:[edi]
  4251ce:	nop
  4251cf:	(bad)  
  4251d0:	mov    esi,0xafc420b1
  4251d5:	test   DWORD PTR [edi-0x503b5878],ebp
  4251db:	cld    
  4251dc:	adc    eax,0xffe0f78
  4251e1:	das    
  4251e2:	jmp    0x4251c1
  4251e4:	in     eax,dx
  4251e5:	xchg   BYTE PTR [ebp+0x75e14965],ah
  4251eb:	fcom   QWORD PTR ds:0x2e011c7f
  4251f1:	push   esp
  4251f2:	retf   0xd1d
  4251f5:	int3   
  4251f6:	test   BYTE PTR [ebp+ebp*4-0x2c],bl
  4251fa:	push   ss
  4251fb:	cmp    al,0xfb
  4251fd:	mov    ecx,0x13eb97fd
  425202:	lea    edx,[ecx+0x5f]
  425205:	push   cs
  425206:	lea    edi,[esi+0x29dadb6e]
  42520c:	xchg   BYTE PTR [esi-0x1a],ah
  42520f:	and    bx,dx
  425212:	popa   
  425213:	mov    bh,0xb2
  425215:	cmc    
  425216:	aas    
  425217:	jo     0x4251a1
  425219:	mov    BYTE PTR [edi],cl
  42521b:	pop    ss
  42521c:	adc    al,0x19
  42521e:	das    
  42521f:	aas    
  425220:	xor    eax,0xaeeb927b
  425225:	mov    al,0xb5
  425227:	mov    ds:0x1207187f,al
  42522c:	call   0x5fc52022
  425231:	scas   eax,DWORD PTR es:[edi]
  425232:	pop    ebp
  425233:	dec    eax
  425234:	leave  
  425235:	aad    0xc4
  425237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425238:	sbb    eax,0xc4f9d41b
  42523d:	outs   dx,DWORD PTR ds:[esi]
  42523e:	nop
  42523f:	inc    esp
  425240:	mov    bh,0x1f
  425242:	cmp    ah,BYTE PTR [eax]
  425244:	dec    ebp
  425245:	lods   eax,DWORD PTR ds:[esi]
  425246:	addr16 in al,dx
  425248:	ins    BYTE PTR es:[edi],dx
  425249:	cmc    
  42524a:	jp     0x425219
  42524c:	aaa    
  42524d:	shl    BYTE PTR [ecx+0x18d88986],cl
  425253:	jbe    0x4252c8
  425255:	push   esp
  425256:	test   eax,0xc1aa0893
  42525b:	jl     0x4251eb
  42525d:	outs   dx,DWORD PTR ds:[esi]
  42525e:	and    al,0x8c
  425260:	retf   0xa56f
  425263:	push   edx
  425264:	fcomp  QWORD PTR [ecx]
  425266:	pop    eax
  425267:	ret    
  425268:	jne    0x425213
  42526a:	jo     0x42524a
  42526c:	sbb    esp,esi
  42526e:	cmp    eax,ecx
	...
  425278:	add    BYTE PTR [eax],al
  42527a:	hlt    
  42527b:	cmp    DWORD PTR [edx-0x2002081],edx
  425281:	mov    ebx,0xd77f6470
  425286:	or     BYTE PTR [ebp+0x13],dh
  425289:	inc    esp
  42528a:	ror    dl,0x1
  42528d:	add    dh,bh
  42528f:	add    DWORD PTR [eax],eax
  425291:	add    BYTE PTR [esi+0x1b15457f],bl
  425297:	stc    
  425298:	push   ebp
  425299:	stc    
  42529a:	push   edx
  42529b:	add    ebx,DWORD PTR [eax]
  42529d:	outs   dx,DWORD PTR ds:[esi]
  42529e:	sbb    BYTE PTR ds:0x4325a21e,0xe4
  4252a5:	mov    WORD PTR [eax-0x406c00e9],?
  4252ab:	iret   
  4252ac:	add    BYTE PTR [edi-0x66],dh
  4252af:	adc    esi,DWORD PTR [ebp+0x5c]
  4252b2:	and    edx,DWORD PTR [esi-0x734d857b]
  4252b8:	inc    ebx
  4252b9:	lea    edx,[bp+di+0x21]
  4252bd:	cwde   
  4252be:	mov    al,0xe
  4252c0:	imul   ebx,DWORD PTR [edi-0x5da70ecc],0x2d
  4252c7:	or     al,0xad
  4252c9:	mov    bl,0x85
  4252cb:	sub    al,0x29
  4252cd:	cmp    esi,eax
  4252cf:	and    DWORD PTR [edx+0x1],esi
  4252d2:	das    
  4252d3:	pop    esp
  4252d4:	jno    0x4252b7
  4252d6:	jne    0x42529a
  4252d8:	push   0xa8236251
  4252dd:	dec    ebx
  4252de:	xchg   ecx,eax
  4252df:	ret    0xb77e
  4252e2:	pushf  
  4252e3:	cmp    al,0x9e
  4252e5:	(bad)  
  4252e6:	jle    0x42533e
  4252e8:	outs   dx,DWORD PTR ds:[esi]
  4252e9:	clc    
  4252ea:	repnz mov cl,dh
  4252ed:	out    0x8,eax
  4252ef:	pop    ecx
  4252f0:	add    esi,DWORD PTR [ebx-0x28401f05]
  4252f6:	inc    esp
  4252f7:	cld    
  4252f8:	mov    ebp,0x2bdc6c24
  4252fd:	xor    DWORD PTR [edi+0x22cea6c2],0x91a6c281
  425307:	sbb    BYTE PTR [ebx+edi*4-0x938e838],ch
  42530e:	and    al,BYTE PTR [edx]
  425310:	aas    
  425311:	scas   eax,DWORD PTR es:[edi]
  425312:	sub    BYTE PTR [ebx-0x5763761],bl
  425318:	shl    ch,0x85
  42531b:	and    al,0x52
  42531d:	sbb    BYTE PTR [ebp+0x5490058c],0x82
  425324:	pop    ebp
  425325:	inc    eax
  425326:	push   0xffffff93
  425328:	mov    ds:0x66d0e81e,eax
  42532d:	xchg   ebp,eax
  42532e:	das    
  42532f:	(bad)  
  425330:	aam    0xdd
  425332:	jmp    0xd59a:0xc37a55b9
  425339:	outs   dx,DWORD PTR ds:[esi]
  42533a:	xor    al,0x14
  42533c:	sub    eax,0x3d74ccc2
  425341:	pop    ds
  425342:	cs jge 0x42538a
  425345:	xor    eax,0xec3f0a88
  42534a:	scas   al,BYTE PTR es:[edi]
  42534b:	into   
  42534c:	add    DWORD PTR [edx+0x9],edi
  42534f:	push   cs
  425350:	or     DWORD PTR [ebp-0x25],ebp
  425353:	fimul  WORD PTR [ecx-0x5eb7eb3a]
  425359:	(bad)  
  42535a:	lea    edi,[ecx]
  42535c:	rcl    BYTE PTR [edi],cl
  42535e:	or     al,0xa0
  425360:	mov    BYTE PTR [ebx-0x7d1e8130],bh
  425366:	cli    
  425367:	(bad)  
  425369:	test   BYTE PTR [ecx+0x33],0xc8
  42536d:	or     edi,DWORD PTR es:[ecx+ebx*1-0x2e9d7f5e]
  425375:	fist   DWORD PTR [edi+ebp*2-0x6d4bac53]
  42537c:	dec    ebx
  42537d:	ret    
  42537e:	dec    edx
  42537f:	je     0x425337
  425381:	and    BYTE PTR [eax],bl
  425383:	dec    eax
  425384:	(bad)  
  425386:	or     al,0xda
  425388:	dec    esi
  425389:	fcmove st,st(7)
  42538b:	jge    0x425390
  42538d:	and    al,0x48
  42538f:	push   ebp
  425390:	das    
  425391:	sbb    eax,0x66667d15
  425396:	adc    eax,0x3fa753e
  42539b:	xchg   esp,eax
  42539c:	mov    ecx,0xd14adc8a
  4253a1:	mov    esi,0x43378311
  4253a6:	push   esp
  4253a7:	mov    BYTE PTR [edi],al
  4253a9:	cmp    eax,0xe5591864
  4253ae:	add    DWORD PTR [edi+0x6c2470d9],eax
  4253b4:	loope  0x425395
  4253b6:	or     ecx,esi
  4253b8:	xchg   esi,eax
  4253b9:	push   edx
  4253ba:	add    eax,0x5be688fc
  4253bf:	xchg   edx,eax
  4253c0:	stos   BYTE PTR es:[edi],al
  4253c1:	out    0x7b,al
  4253c3:	xlat   BYTE PTR ds:[ebx]
  4253c4:	addr16 call 0xd7d2c355
  4253ca:	into   
  4253cb:	js     0x4253cd
  4253cd:	pop    ss
  4253ce:	mov    edi,ebx
  4253d0:	out    dx,eax
  4253d1:	ins    DWORD PTR es:[edi],dx
  4253d2:	pop    ecx
  4253d3:	mov    WORD PTR [ebx-0x70af91c8],?
  4253d9:	cs cli 
  4253db:	or     DWORD PTR [eax+edx*8+0x7cb66b6b],edx
  4253e2:	daa    
  4253e3:	es or  al,0x9a
  4253e6:	mov    bl,0xc8
  4253e8:	addr16 xchg esp,eax
  4253ea:	jp     0x42541b
  4253ec:	push   eax
  4253ed:	mov    edx,0x76dd8180
  4253f2:	imul   esp,esp,0xffffffd4
  4253f5:	fdiv   st,st(4)
  4253f7:	cmp    al,0xc5
  4253f9:	mov    eax,ds:0xb5e85dc3
  4253fe:	cli    
  4253ff:	loope  0x425389
  425401:	mov    esp,0xecb0a328
  425406:	add    eax,0x4530cfb6
  42540b:	cmp    esp,DWORD PTR [edx+0x8]
  42540e:	cmp    ebx,DWORD PTR [edi+edx*8]
  425411:	jle    0x4253ac
  425413:	adc    esi,ebx
  425415:	mov    ss,esi
  425417:	js     0x425491
  425419:	and    eax,0xc5ca83b1
  42541e:	inc    edx
  42541f:	ss cmp al,0x25
  425422:	addr16 cmp dh,ch
  425425:	ss ss mov ah,0xba
  425429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42542a:	and    ah,BYTE PTR [eax]
  42542c:	inc    ebx
  42542d:	aam    0x64
  42542f:	pop    eax
  425430:	retf   0x861a
  425433:	test   eax,0x61772af0
  425438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425439:	repnz pop eax
  42543b:	mov    ds:0xb82cd668,al
  425440:	xor    ch,BYTE PTR [esi+0x254c8dcd]
  425446:	pusha  
  425447:	iret   
  425448:	mov    ds:0x524ba24a,eax
  42544d:	jb     0x42548d
  42544f:	xchg   edx,eax
  425450:	fsubr  QWORD PTR [eax+0x3a]
  425453:	cwde   
  425454:	outs   dx,BYTE PTR ds:[esi]
  425455:	push   ss
  425456:	cmp    al,0xba
  425458:	inc    edi
  425459:	mov    ds:0x4c89c50f,eax
  42545e:	cdq    
  42545f:	sahf   
  425460:	outs   dx,DWORD PTR ds:[esi]
  425461:	adc    ah,BYTE PTR [edx]
  425463:	lods   eax,DWORD PTR ds:[esi]
  425464:	jge    0x42540b
  425466:	mov    bh,0x7a
  425468:	imul   edx,DWORD PTR [edx-0x3a],0x65
  42546c:	fidiv  WORD PTR [edx+0x1]
  42546f:	pusha  
  425470:	and    eax,0x96b42492
  425475:	push   ss
  425476:	xor    eax,0xa4e133b0
  42547b:	push   ecx
  42547c:	xor    ch,BYTE PTR [ecx+0x34]
  42547f:	xchg   edi,edx
  425481:	inc    esp
  425482:	lods   al,BYTE PTR ds:[esi]
  425483:	div    DWORD PTR [ebx+edx*1+0xa]
  425487:	in     eax,dx
  425488:	test   BYTE PTR ds:0x2cb98a6d,0x99
  42548f:	xchg   ebx,eax
	...
  425498:	add    BYTE PTR [eax],al
  42549a:	push   esp
  42549b:	ds and al,0x19
  42549e:	outs   dx,BYTE PTR ds:[esi]
  42549f:	sbb    edi,DWORD PTR [ebp+0x7f]
  4254a2:	(bad)  
  4254a3:	aam    0x10
  4254a5:	dec    edi
  4254a6:	idiv   eax
  4254a8:	nop
  4254a9:	xor    bh,BYTE PTR [esi-0x1fffe34]
  4254af:	add    DWORD PTR [eax],eax
  4254b1:	add    ah,dh
  4254b3:	in     al,dx
  4254b4:	cmp    esi,DWORD PTR ss:[ebx+0x3cb84fb3]
  4254bb:	xor    eax,0xae52dc22
  4254c0:	imul   ebp,DWORD PTR [edi-0x7b940263],0x38d41d12
  4254ca:	std    
  4254cb:	xor    bl,BYTE PTR [edi]
  4254cd:	sub    ebp,ebx
  4254cf:	ss rcl ah,0xd0
  4254d3:	jp     0x4254ae
  4254d5:	inc    ebx
  4254d6:	imul   esi,edx,0x9a0e292
  4254dc:	adc    ch,bl
  4254de:	sbb    bh,BYTE PTR [edx]
  4254e0:	dec    esp
  4254e1:	loop   0x425547
  4254e3:	frstpm(287 only) 
  4254e5:	ret    0xaabc
  4254e8:	and    DWORD PTR [eax-0x34e54590],esp
  4254ee:	inc    ebp
  4254ef:	shl    ch,1
  4254f1:	mov    edx,0xecb87c37
  4254f6:	inc    eax
  4254f7:	imul   eax,DWORD PTR [edx+0x51],0xd4304731
  4254fe:	xor    ebx,edx
  425500:	xor    BYTE PTR [ebx],0x77
  425503:	sbb    ch,dh
  425505:	inc    esi
  425506:	and    ecx,DWORD PTR [ebp+0x4c]
  425509:	jle    0x4254c7
  42550b:	and    BYTE PTR [eax-0xebc7256],dl
  425511:	inc    edx
  425512:	xchg   BYTE PTR [edx],bl
  425514:	ss loope 0x42556e
  425517:	sbb    DWORD PTR [eax+0x4b],ecx
  42551a:	jns    0x425501
  42551c:	push   edx
  42551d:	(bad)
  425520:	fucomip st,st(5)
  425522:	push   es
  425523:	push   ds
  425524:	add    BYTE PTR [esi],0x5d
  425527:	lds    esi,FWORD PTR [edx-0x1db85dc4]
  42552d:	lock and DWORD PTR [ebp-0x387bca],ecx
  425534:	scas   al,BYTE PTR es:[edi]
  425535:	call   0x5bf0:0xa27b3fc3
  42553c:	dec    edx
  42553d:	inc    ecx
  42553e:	add    eax,0xae978bd1
  425543:	mov    ds:0xe7d04254,eax
  425548:	pop    edx
  42554a:	xchg   BYTE PTR [edx],ch
  42554c:	xchg   BYTE PTR [edi],dh
  42554e:	(bad)  
  42554f:	adc    ebx,DWORD PTR [esi]
  425551:	jle    0x425553
  425553:	jle    0x4255b8
  425555:	or     al,0xce
  425557:	mov    BYTE PTR [ecx+0x7de0df95],cl
  42555d:	sbb    ebp,DWORD PTR [ebp+0x4f]
  425560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425562:	cmp    ah,BYTE PTR [edi+eiz*2+0xab790db]
  425569:	ins    BYTE PTR es:[edi],dx
  42556a:	fcomp  st(5)
  42556c:	sub    ebp,DWORD PTR [ebp+0xa]
  42556f:	es jb  0x425568
  425572:	fdiv   DWORD PTR [ecx]
  425574:	add    esp,edi
  425576:	retf   0x9883
  425579:	and    ecx,DWORD PTR [ebp+0x5926ffd5]
  42557f:	add    al,0xf6
  425581:	dec    edi
  425582:	add    DWORD PTR [esi+edi*4],esp
  425585:	int    0xef
  425587:	in     al,dx
  425588:	fmul   QWORD PTR [esi-0x3243432b]
  42558e:	xor    cl,ah
  425590:	ins    DWORD PTR es:[edi],dx
  425591:	lock ret 0xf291
  425595:	loopne 0x4255a8
  425597:	cmp    BYTE PTR [eax+0x51],al
  42559a:	cmp    bh,ch
  42559c:	(bad)  
  42559d:	xchg   edi,eax
  42559e:	ins    DWORD PTR es:[edi],dx
  42559f:	fist   WORD PTR [eax-0x39f03f83]
  4255a5:	cwde   
  4255a6:	shl    esi,0x61
  4255a9:	retf   
  4255aa:	or     DWORD PTR [ecx],eax
  4255ac:	pop    ss
  4255ad:	adc    DWORD PTR [ebx+edx*2-0x61],esi
  4255b1:	loope  0x4255c5
  4255b3:	add    esp,esp
  4255b5:	adc    ah,BYTE PTR [ebx-0x6b]
  4255b8:	ror    DWORD PTR [edx+0x558c1f3b],cl
  4255be:	mov    DWORD PTR [esi],esp
  4255c0:	retf   0xc985
  4255c3:	stos   DWORD PTR es:[edi],eax
  4255c4:	adc    BYTE PTR [ebx+eiz*8-0x2d],ch
  4255c8:	(bad)  
  4255c9:	sbb    bh,dh
  4255cb:	sbb    cl,cl
  4255cd:	gs ffree st(3)
  4255d0:	pop    ebx
  4255d1:	mov    bl,0x1e
  4255d3:	jg     0x4255e8
  4255d5:	jmp    0x42558d
  4255d7:	mov    edx,0x84b25f1c
  4255dc:	xchg   edi,eax
  4255dd:	(bad)  
  4255de:	mov    eax,ds:0xafa1f6ed
  4255e3:	(bad)  
  4255e4:	in     eax,dx
  4255e5:	inc    ebp
  4255e6:	jnp    0x4255d8
  4255e8:	retf   
  4255e9:	out    dx,eax
  4255ea:	and    al,BYTE PTR [edx]
  4255ec:	push   ss
  4255ed:	ret    
  4255ee:	or     al,0xd8
  4255f0:	adc    al,0x72
  4255f2:	fadd   QWORD PTR [edx+0x12]
  4255f5:	pusha  
  4255f6:	jmp    0x4255ab
  4255f8:	jmp    0x31154aab
  4255fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255fe:	or     al,0xec
  425600:	push   es
  425601:	mov    edx,0xbc3f92a9
  425606:	dec    DWORD PTR [ebx+0x4a21351]
  42560c:	and    BYTE PTR [esi-0x65f149e3],ah
  425612:	sti    
  425613:	je     0x42565a
  425615:	popf   
  425616:	sbb    eax,0xb3f5da27
  42561b:	sti    
  42561c:	popa   
  42561d:	(bad)  
  42561e:	xor    esi,0xf
  425621:	pop    ebp
  425622:	mov    eax,ds:0xbe18e557
  425627:	mov    eax,ds:0x81fae5e5
  42562c:	mov    ebx,0xd6896b52
  425631:	das    
  425632:	test   DWORD PTR [esi+ecx*8-0x2],edx
  425636:	int    0x2d
  425638:	xor    cl,bh
  42563a:	dec    esi
  42563b:	xor    al,0x72
  42563d:	inc    ebx
  42563e:	or     esp,esp
  425640:	xor    edx,DWORD PTR [ebx]
  425642:	sub    al,0x1e
  425644:	sbb    eax,0xd286631e
  425649:	test   BYTE PTR [ecx],cl
  42564b:	leave  
  42564c:	fild   WORD PTR [edi-0x67]
  42564f:	std    
  425650:	ss scas al,BYTE PTR es:[edi]
  425652:	(bad)  
  425653:	xor    edi,edi
  425655:	inc    ebx
  425656:	xchg   esp,eax
  425657:	dec    edi
  425658:	mov    eax,0x2a1eed99
  42565d:	mov    ?,WORD PTR [esi-0xeaefad3]
  425663:	test   DWORD PTR [ebx-0x2a775281],0xd0634bf6
  42566d:	jmp    DWORD PTR ds:0x87ade46
  425673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425674:	push   edx
  425675:	xor    DWORD PTR [ebp+0x707c580e],eax
  42567b:	rol    BYTE PTR [ecx-0x4b],cl
  42567e:	dec    esp
  42567f:	call   0x1104a666
  425684:	mov    esi,0x4a0bfef7
  425689:	sbb    ah,BYTE PTR [ebx+0x39]
  42568c:	add    BYTE PTR [edx-0x430ec646],al
  425692:	jle    0x42561f
  425694:	ja     0x42568d
  425696:	inc    eax
  425697:	dec    ebp
  425698:	je     0x4256a8
  42569a:	outs   dx,BYTE PTR ds:[esi]
  42569b:	adc    eax,0x85074e99
  4256a0:	push   edi
  4256a1:	pusha  
  4256a2:	cmp    BYTE PTR [ecx-0x562694a3],bl
  4256a8:	retf   
  4256a9:	das    
  4256aa:	pop    edx
  4256ab:	outs   dx,DWORD PTR ds:[esi]
  4256ac:	pop    ss
  4256ad:	loopne 0x42567b
  4256af:	rol    DWORD PTR [eax],1
	...
  4256b9:	add    BYTE PTR [esi+0x74ef74ea],bh
  4256bf:	(bad)  
  4256c0:	mov    edi,0x93a446fb
  4256c5:	nop
  4256c6:	xchg   edx,eax
  4256c7:	addr16 adc eax,0x1cebcb8
  4256cd:	add    dh,bh
  4256cf:	add    DWORD PTR [eax],eax
  4256d1:	add    dl,al
  4256d3:	sbb    ah,BYTE PTR [ebp+0x5a]
  4256d6:	adc    BYTE PTR ds:0x508fb71f,bl
  4256dc:	inc    ebp
  4256dd:	dec    edx
  4256de:	leave  
  4256df:	adc    esp,DWORD PTR [ecx]
  4256e1:	pop    ebp
  4256e2:	inc    esp
  4256e3:	xchg   BYTE PTR [edx+0x30],ch
  4256e6:	mov    ds:0x14bb5ab2,eax
  4256eb:	and    cl,BYTE PTR [edi+0x74b024ed]
  4256f1:	pop    ecx
  4256f2:	pop    edi
  4256f3:	push   ebx
  4256f4:	je     0x4256f6
  4256f6:	pop    edi
  4256f7:	adc    bl,BYTE PTR [esi]
  4256f9:	mov    ch,0x76
  4256fb:	pop    DWORD PTR [ebx+0x12]
  4256fe:	push   0xffffffb2
  425700:	adc    dl,dl
  425702:	mov    bl,0xd3
  425704:	or     ch,BYTE PTR [edi]
  425706:	shl    BYTE PTR [edi],0x16
  425709:	mov    dl,0xdc
  42570b:	cmp    al,0x44
  42570d:	sbb    BYTE PTR [ecx+0x53],ah
  425710:	arpl   WORD PTR [eax-0x4d3c44ac],sp
  425716:	mov    esi,DWORD PTR [eax]
  425718:	xchg   esp,eax
  425719:	(bad)  
  42571a:	jmp    0x42572c
  42571c:	jmp    0x2e0dce27
  425721:	pop    eax
  425722:	xchg   dh,al
  425724:	sub    dl,BYTE PTR [esp+eiz*2-0x9d3c2a9]
  42572b:	loopne 0x42573b
  42572d:	mov    DWORD PTR [eax+0x55],edx
  425730:	xor    eax,0xc485239f
  425735:	retf   0x84ad
  425738:	les    esp,FWORD PTR [ebx+0x2decc9d]
  42573e:	std    
  42573f:	aaa    
  425740:	push   0x2c7a2cd1
  425745:	mov    bh,al
  425747:	bound  eax,QWORD PTR ds:[ebx]
  42574a:	jg     0x4257c8
  42574c:	shl    bl,cl
  42574e:	mov    ds:0xc731abd,eax
  425753:	cld    
  425754:	stos   BYTE PTR es:[edi],al
  425755:	push   ebp
  425756:	ret    
  425757:	repz in eax,0xd1
  42575a:	sbb    ecx,DWORD PTR [edi-0x7ac97d06]
  425760:	call   0xdbec:0x95fa2f98
  425767:	xchg   esi,eax
  425768:	das    
  425769:	adc    BYTE PTR [edi],cl
  42576b:	pop    ebp
  42576c:	jno    0x425712
  42576e:	adc    DWORD PTR [ebx],esp
  425770:	mov    ds:0x6f40b76f,al
  425775:	fsub   DWORD PTR [ebx+eiz*2]
  425778:	fs mov ebp,0x13882200
  42577e:	loope  0x425744
  425780:	je     0x4257c9
  425782:	fidiv  DWORD PTR [ecx]
  425784:	repz mov bh,0x63
  425787:	call   0x5558c298
  42578c:	jle    0x425714
  42578e:	mov    ds:0xc6ee1a6e,al
  425793:	mov    edx,0x914fa14a
  425798:	or     DWORD PTR [ecx-0x2aa431a8],0xffffffdd
  42579f:	ss add al,0x7c
  4257a2:	lahf   
  4257a3:	aaa    
  4257a4:	mov    edi,0x9231a5da
  4257a9:	inc    eax
  4257aa:	fstp   TBYTE PTR [edx-0x32]
  4257ad:	pop    eax
  4257ae:	lea    esp,[esi]
  4257b0:	xchg   esp,eax
  4257b1:	pusha  
  4257b2:	jmp    0xcb6281a5
  4257b7:	and    eax,0x62eac2c9
  4257bc:	xchg   esi,eax
  4257bd:	dec    ebx
  4257be:	or     esi,DWORD PTR [eax]
  4257c0:	dec    ebp
  4257c1:	das    
  4257c2:	das    
  4257c3:	or     ebx,edx
  4257c5:	and    BYTE PTR [edi-0x3200d3fa],dl
  4257cb:	pop    es
  4257cc:	xor    BYTE PTR [edx+0x60db0b44],al
  4257d2:	dec    edi
  4257d3:	cmc    
  4257d4:	sbb    dl,0xa3
  4257d7:	xor    esp,DWORD PTR [ebp+0x59]
  4257da:	and    DWORD PTR [eax-0x123106f7],eax
  4257e0:	xchg   edx,eax
  4257e1:	mov    ebx,0x9ff72fc
  4257e6:	sub    al,0x88
  4257e8:	(bad)
  4257eb:	push   edx
  4257ec:	loope  0x425830
  4257ee:	fld    QWORD PTR [ebx+edx*1]
  4257f1:	and    esp,eax
  4257f3:	and    DWORD PTR [ebp+0x25],esp
  4257f6:	cmp    DWORD PTR [edi-0x45bdb19e],esp
  4257fc:	int    0xb
  4257fe:	(bad)  
  4257ff:	repnz mov DWORD PTR [ebx+eax*4],eax
  425803:	inc    ebx
  425804:	inc    ebx
  425805:	les    ebp,FWORD PTR [ecx-0x5648bac2]
  42580b:	dec    edi
  42580c:	mov    al,ds:0x1342fdcc
  425811:	(bad)  
  425812:	mov    esi,0xf55cd19c
  425817:	or     DWORD PTR [edx],ebx
  425819:	pop    ecx
  42581a:	pop    ss
  42581b:	sbb    al,0x1a
  42581d:	aad    0x49
  42581f:	xor    dl,dl
  425821:	nop
  425822:	lea    ecx,[edx+0x1c]
  425825:	cmp    esi,DWORD PTR [eax]
  425827:	repnz xchg esp,eax
  425829:	or     bh,BYTE PTR [edx-0x498bff7a]
  42582f:	jmp    0x86c4:0x5ef51fa9
  425836:	pop    ebp
  425837:	xor    edi,DWORD PTR [ebp+0xf]
  42583a:	sub    DWORD PTR ds:0x63cd3083,esp
  425840:	xchg   edx,eax
  425841:	jp     0x425885
  425843:	sbb    BYTE PTR [edi],bh
  425845:	stos   BYTE PTR es:[edi],al
  425846:	sbb    BYTE PTR [edx],ah
  425848:	or     ecx,DWORD PTR [edx]
  42584a:	in     eax,dx
  42584b:	cmp    al,dh
  42584d:	out    0x24,al
  42584f:	pusha  
  425850:	jge    0x425848
  425852:	adc    DWORD PTR [esi-0x4b],ebp
  425855:	push   esi
  425856:	dec    ecx
  425857:	cmp    al,0xa8
  425859:	loop   0x425872
  42585b:	icebp  
  42585c:	cld    
  42585d:	lods   eax,DWORD PTR ds:[esi]
  42585e:	(bad)  
  425860:	(bad)  
  425862:	push   es
  425863:	push   0x7aa675b
  425868:	jp     0x4258b2
  42586a:	clc    
  42586b:	jnp    0x42586f
  42586d:	mov    esi,?
  42586f:	mov    DWORD PTR [eax],0x6fe40df4
  425875:	jmp    0x11e2:0xf91a7fc3
  42587c:	int    0xc0
  42587e:	pop    es
  42587f:	pop    edx
  425880:	add    DWORD PTR [ebx-0x6a],eax
  425883:	imul   ecx,DWORD PTR [edx],0x19
  425886:	xor    eax,0xac276a95
  42588b:	aaa    
  42588c:	pop    ss
  42588d:	(bad)  
  42588e:	pop    es
  42588f:	mov    ah,0x54
  425891:	sbb    DWORD PTR [esi-0x1],eax
  425894:	mov    dl,dh
  425896:	jge    0x42590c
  425898:	pop    ecx
  425899:	iret   
  42589a:	ficom  WORD PTR [esp+edi*2-0x9]
  42589e:	clc    
  42589f:	or     eax,0x1fc95e8
  4258a4:	(bad)  
  4258a5:	adc    eax,0x85f9f57b
  4258aa:	test   BYTE PTR [esi+0x1abb2db8],dh
  4258b0:	sub    DWORD PTR [esi+0x71a6fef2],0xffffff81
  4258b7:	in     eax,dx
  4258b8:	in     eax,0xe2
  4258ba:	jo     0x425896
  4258bc:	dec    ebx
  4258bd:	dec    ebx
  4258be:	fs mov bh,0x7
  4258c1:	repz mov esp,0x12db4b75
  4258c7:	call   0xa277723d
  4258cc:	nop
  4258cd:	sub    eax,DWORD PTR [ecx+0xaf]
  4258d3:	add    BYTE PTR [eax],al
  4258d5:	add    BYTE PTR [eax],al
  4258d7:	add    BYTE PTR [eax],al
  4258d9:	add    BYTE PTR [ebx+0x45],cl
  4258dc:	mov    edx,0x5fffbeee
  4258e1:	in     eax,0xe9
  4258e3:	dec    esi
  4258e4:	cmp    ch,ah
  4258e6:	dec    ebp
  4258e7:	fidiv  DWORD PTR [edx]
  4258e9:	mov    esi,0x1d0ba
  4258ee:	inc    BYTE PTR [ecx]
  4258f0:	add    BYTE PTR [eax],al
  4258f2:	jb     0x4258b8
  4258f4:	scas   eax,DWORD PTR es:[edi]
  4258f5:	cld    
  4258f6:	sti    
  4258f7:	into   
  4258f8:	mov    cl,0xb9
  4258fa:	push   ds
  4258fb:	jb     0x42595d
  4258fd:	pop    ebx
  4258fe:	(bad)  
  4258ff:	and    dl,BYTE PTR [ebx]
  425901:	push   eax
  425902:	xchg   ebp,eax
  425903:	mov    WORD PTR [esi-0x71],ds
  425906:	push   esp
  425907:	mov    ch,0x5e
  425909:	or     BYTE PTR ds:0xfd9737e1,dl
  42590f:	and    DWORD PTR ds:0x2c15261c,edx
  425915:	in     eax,dx
  425916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425917:	push   ds
  425918:	popf   
  425919:	mov    ah,0x6d
  42591b:	lods   eax,DWORD PTR ds:[esi]
  42591c:	daa    
  42591d:	xchg   edx,eax
  42591e:	jno    0x42597e
  425920:	loopne 0x4258bc
  425922:	mov    bh,0xed
  425924:	dec    ebx
  425925:	dec    esp
  425926:	int    0x3b
  425928:	ds (bad) 
  42592b:	lods   al,BYTE PTR ds:[esi]
  42592c:	pop    edx
  42592d:	das    
  42592e:	call   0xc981:0x7a7d1536
  425935:	mov    dh,0x7b
  425937:	mov    fs,WORD PTR [ebx-0x3c5a9b02]
  42593d:	gs mov ebp,0x98a726c4
  425943:	push   0x7c
  425945:	retf   0x132f
  425948:	icebp  
  425949:	push   ss
  42594a:	sub    eax,0x58e438ec
  42594f:	lock push cs
  425951:	retf   
  425952:	shl    BYTE PTR [ebx-0x57de42dc],1
  425958:	imul   edi,esp,0x29
  42595b:	aam    0xf3
  42595d:	out    0x46,al
  42595f:	jle    0x4259cf
  425961:	enter  0x6270,0x18
  425965:	scas   al,BYTE PTR es:[edi]
  425966:	add    eax,0x534971a0
  42596b:	adc    al,0x83
  42596d:	ds int3 
  42596f:	jne    0x425903
  425971:	rcr    DWORD PTR [ecx+0x6f],cl
  425974:	cld    
  425975:	adc    eax,0x7947c018
  42597a:	inc    ecx
  42597b:	xchg   DWORD PTR [ebp-0x7a],ebx
  42597e:	sub    DWORD PTR [esi+edi*1+0x2b44e43d],ecx
  425985:	add    al,0x94
  425987:	inc    ebx
  425988:	add    bh,BYTE PTR [esi+eax*8-0x6f]
  42598c:	sub    DWORD PTR [esi-0x7b],esp
  42598f:	adc    DWORD PTR [edx-0x707d5e6b],ebp
  425995:	sbb    BYTE PTR [ecx+esi*1],ch
  425998:	mov    ah,0x67
  42599a:	mov    al,ds:0x45ce6fe7
  42599f:	cmp    WORD PTR [esi],bx
  4259a2:	mov    bl,0x57
  4259a4:	jno    0x425984
  4259a6:	loop   0x4259b4
  4259a8:	fcomp  DWORD PTR [ebp+0x4750417]
  4259ae:	mov    ah,0x13
  4259b0:	xor    bh,BYTE PTR [ebx+ecx*8]
  4259b3:	test   DWORD PTR [ecx],esi
  4259b5:	jge    0x425a0f
  4259b7:	jno    0xecda6b16
  4259bd:	xlat   BYTE PTR ds:[ebx]
  4259be:	push   0x468e3c4b
  4259c3:	loope  0x42594e
  4259c5:	fisttp DWORD PTR [ecx]
  4259c7:	jmp    0x322e56c2
  4259cc:	shl    dl,1
  4259ce:	stos   DWORD PTR es:[edi],eax
  4259cf:	push   edx
  4259d0:	fs out dx,eax
  4259d2:	xor    ebx,ecx
  4259d4:	sbb    dh,BYTE PTR [esi+edi*4]
  4259d7:	je     0x4259c1
  4259d9:	iret   
  4259da:	sbb    BYTE PTR [eax],al
  4259dc:	sub    DWORD PTR [esi-0x30],edx
  4259df:	sbb    DWORD PTR [ebp-0x38],esi
  4259e2:	cmp    BYTE PTR [ebp+0x6d],bl
  4259e5:	jg     0x425997
  4259e7:	leave  
  4259e8:	jle    0x42596b
  4259ea:	ins    BYTE PTR es:[edi],dx
  4259eb:	push   cs
  4259ec:	mov    ch,0x2e
  4259ee:	retf   0xae53
  4259f1:	mov    cl,ah
  4259f3:	(bad)  
  4259f4:	sbb    DWORD PTR [eax-0x3f],esi
  4259f7:	adc    al,BYTE PTR [ebx-0x6a0b1cbd]
  4259fd:	pop    ebx
  4259fe:	fcomip st,st(3)
  425a00:	pop    es
  425a01:	sbb    eax,0xaf95c0a5
  425a06:	arpl   bp,bp
  425a08:	or     al,0xc8
  425a0a:	ins    BYTE PTR es:[edi],dx
  425a0b:	shl    DWORD PTR ds:0xf8045af6,0x9e
  425a12:	test   bl,cl
  425a14:	lock jae 0x4259c8
  425a17:	fisubr DWORD PTR ds:0xf24e9ec5
  425a1d:	sub    esp,DWORD PTR [ecx]
  425a1f:	or     eax,0x982ca042
  425a24:	adc    DWORD PTR [edi+0x79],ecx
  425a27:	sub    eax,0x9519c9bf
  425a2c:	jmp    0x16a279c1
  425a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a32:	jae    0x425a7d
  425a34:	lahf   
  425a35:	lods   eax,DWORD PTR ds:[esi]
  425a36:	sbb    DWORD PTR [ebx],ebp
  425a38:	cmp    DWORD PTR [edx+ebp*4],edi
  425a3b:	push   ss
  425a3c:	push   es
  425a3d:	lahf   
  425a3e:	in     eax,0x7d
  425a40:	mov    fs,WORD PTR [ebx+0x16]
  425a43:	(bad)  
  425a44:	jne    0x425a55
  425a46:	inc    eax
  425a47:	rcl    BYTE PTR [esi],cl
  425a49:	call   0x8f32b2c6
  425a4e:	mov    ah,BYTE PTR ss:[edi+0x21]
  425a52:	imul   eax,DWORD PTR [edx],0xffffffed
  425a55:	xchg   edi,eax
  425a56:	test   ecx,ebx
  425a58:	js     0x425ad7
  425a5a:	adc    bl,dh
  425a5c:	mov    ds:0x49ce097e,al
  425a61:	push   ecx
  425a62:	xor    ch,BYTE PTR [edi-0x56]
  425a65:	data16 sub al,0x9
  425a68:	mov    ebx,0xc49b5a03
  425a6d:	add    eax,esp
  425a6f:	icebp  
  425a70:	mov    ah,0x21
  425a72:	int    0x5a
  425a74:	data16 (bad) 
  425a76:	outs   dx,BYTE PTR ds:[esi]
  425a77:	ret    0x62ca
  425a7a:	jns    0x425ace
  425a7c:	xor    ah,BYTE PTR [ebp-0x15407f65]
  425a82:	mov    WORD PTR [ebx-0x7ab4a837],gs
  425a88:	add    BYTE PTR [ecx-0x64],0x8e
  425a8c:	mov    ebp,0x8a7dfe8a
  425a91:	mov    bh,0xd0
  425a93:	scas   al,BYTE PTR es:[edi]
  425a94:	mov    ecx,0xf327129b
  425a99:	test   al,0x16
  425a9b:	mov    ss,WORD PTR [edx]
  425a9d:	repz jg 0x425a7c
  425aa0:	jle    0x425af0
  425aa2:	ds inc ecx
  425aa4:	fcomp  DWORD PTR [ebp+0x59de6a78]
  425aaa:	js     0x425b17
  425aac:	inc    ecx
  425aad:	jbe    0x425a87
  425aaf:	adc    ebp,ebp
  425ab1:	arpl   ax,bp
  425ab3:	ja     0x425a41
  425ab5:	sbb    edx,esi
  425ab7:	or     bh,BYTE PTR [ecx]
  425ab9:	imul   ebp,DWORD PTR [edi-0x20],0x2c6be111
  425ac0:	push   edx
  425ac1:	jge    0x425ad7
  425ac3:	out    0x98,al
  425ac5:	sbb    al,dl
  425ac7:	jnp    0x425a6c
  425ac9:	outs   dx,BYTE PTR ds:[esi]
  425aca:	iret   
  425acb:	call   0x6727:0x54bec609
  425ad2:	inc    edx
  425ad3:	ret    0xe46c
  425ad6:	push   ebp
  425ad7:	dec    eax
  425ad8:	pop    esp
  425ad9:	pop    ecx
  425ada:	adc    al,0xcb
  425adc:	xchg   BYTE PTR [ebp-0x3d0d436e],cl
  425ae2:	jno    0x425b24
  425ae4:	jp     0x425b55
  425ae6:	mov    ds:0xd6c3b89a,al
  425aeb:	aaa    
  425aec:	test   eax,0xd7e196
	...
  425af9:	add    BYTE PTR [edx-0x5b61f90],ch
  425aff:	fldcw  WORD PTR [ebx+0x2d6367f3]
  425b05:	(bad)  
  425b06:	sub    DWORD PTR [esi],edi
  425b08:	pop    esi
  425b09:	mov    eax,ds:0x1d2b8
  425b0e:	inc    BYTE PTR [ecx]
  425b10:	add    BYTE PTR [eax],al
  425b12:	mov    ecx,0xc630188a
  425b17:	sahf   
  425b18:	popf   
  425b19:	xlat   BYTE PTR ds:[ebx]
  425b1a:	stos   DWORD PTR es:[edi],eax
  425b1b:	aad    0x53
  425b1d:	xor    BYTE PTR [ebx+0x31a310bb],dh
  425b23:	and    eax,eax
  425b25:	mov    esi,0x3580e6e4
  425b2a:	aas    
  425b2b:	sar    BYTE PTR [edx+0x280fc01],0x1c
  425b32:	xchg   esi,eax
  425b33:	mov    DWORD PTR [edi+0x1268daaf],edi
  425b39:	mov    eax,0xc18a9ce1
  425b3e:	dec    edx
  425b3f:	push   esp
  425b40:	mov    edx,0x5f57149d
  425b45:	mov    eax,0xf7b4dbea
  425b4a:	mov    ch,0x3
  425b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b4d:	jp     0x425ade
  425b4f:	stc    
  425b50:	inc    ebp
  425b51:	xchg   BYTE PTR [edx],bh
  425b53:	lds    edx,FWORD PTR [esi+0x3fd019c9]
  425b59:	xor    BYTE PTR [ebx],bh
  425b5b:	add    edx,DWORD PTR [eax]
  425b5d:	(bad)  
  425b5e:	dec    esi
  425b5f:	test   DWORD PTR [edx-0x157dbbff],ecx
  425b65:	and    BYTE PTR [ebx],bl
  425b67:	into   
  425b68:	bound  edx,QWORD PTR [ebx+0x12caaa55]
  425b6e:	mov    ah,0xd3
  425b70:	cmc    
  425b71:	add    eax,0x45909b3a
  425b76:	or     DWORD PTR [esi-0x46],esi
  425b79:	or     edx,DWORD PTR [ecx]
  425b7b:	pop    edx
  425b7c:	push   ss
  425b7d:	jge    0x425bd7
  425b7f:	dec    edx
  425b80:	sbb    edi,ebp
  425b82:	test   BYTE PTR [edi-0x7b7c0fca],cl
  425b88:	in     al,0xbd
  425b8a:	push   cs
  425b8b:	stc    
  425b8c:	pop    es
  425b8d:	sbb    eax,0x68e3fcac
  425b92:	lock loope 0x425b40
  425b95:	lahf   
  425b96:	aad    0xbb
  425b98:	sub    al,0x23
  425b9a:	in     eax,0x73
  425b9c:	or     ch,BYTE PTR ds:0x87b21770
  425ba2:	cmp    BYTE PTR [edx-0x50],ch
  425ba5:	sbb    BYTE PTR [ebx],ah
  425ba7:	jmp    0xec9a:0x76dc7788
  425bae:	mov    al,0x87
  425bb0:	push   ebp
  425bb1:	aaa    
  425bb2:	mov    al,ds:0x99de6c58
  425bb7:	(bad)  
  425bb8:	push   eax
  425bb9:	mov    ds:0x190da80c,eax
  425bbe:	mov    edx,0x3b60d2e1
  425bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bc4:	cdq    
  425bc5:	pop    esp
  425bc6:	push   esp
  425bc7:	into   
  425bc8:	test   esi,eax
  425bca:	repz enter 0xcf88,0x33
  425bcf:	aaa    
  425bd0:	xchg   esp,eax
  425bd1:	mov    ecx,0x551ff264
  425bd6:	mov    ebx,0x133ce3b7
  425bdb:	lahf   
  425bdc:	ins    DWORD PTR es:[edi],dx
  425bdd:	jno    0x425b6f
  425bdf:	ss inc ecx
  425be1:	stos   BYTE PTR es:[edi],al
  425be2:	int3   
  425be3:	inc    esp
  425be4:	enter  0x7b2d,0x5
  425be8:	add    dh,BYTE PTR [esi-0x7af41174]
  425bee:	lea    esp,[edx]
  425bf0:	shl    edi,1
  425bf2:	xor    eax,0x151b4454
  425bf7:	push   ebx
  425bf8:	adc    al,0x2d
  425bfa:	dec    ecx
  425bfb:	out    dx,eax
  425bfc:	retf   0x9fa0
  425bff:	int3   
  425c00:	mov    ebx,0x6437bf25
  425c05:	imul   edx,DWORD PTR [edi],0x6f
  425c08:	rcr    BYTE PTR [edi+0x6d53e5cc],0x49
  425c0f:	aam    0x63
  425c11:	sub    DWORD PTR ds:0xa4bd6ea4,ebx
  425c17:	add    al,0x2f
  425c19:	jle    0x425c11
  425c1b:	push   ds
  425c1c:	mov    eax,ds:0x8d574b83
  425c21:	cmp    BYTE PTR [eax-0x9a49bca],0x37
  425c28:	jmp    0x425c9a
  425c2a:	(bad)  
  425c2b:	fdivrp st(6),st
  425c2d:	mov    dh,0xac
  425c2f:	inc    ecx
  425c30:	or     DWORD PTR [ebx-0x26],ebp
  425c33:	ds dec ecx
  425c35:	fstp   DWORD PTR [edx-0x59]
  425c38:	cmp    DWORD PTR [ecx],ebx
  425c3a:	sbb    esi,ebp
  425c3c:	xchg   esi,eax
  425c3d:	jne    0x425c15
  425c3f:	sub    edi,edi
  425c41:	std    
  425c42:	inc    esp
  425c43:	xchg   edi,eax
  425c44:	in     eax,0x59
  425c46:	lods   al,BYTE PTR ds:[esi]
  425c47:	stos   BYTE PTR es:[edi],al
  425c48:	(bad)  
  425c49:	push   0xffffffd3
  425c4b:	adc    cl,ch
  425c4d:	mov    ch,0x4e
  425c4f:	mov    dh,0xa9
  425c51:	je     0x425be1
  425c53:	outs   dx,DWORD PTR ds:[esi]
  425c54:	add    bl,bl
  425c56:	xchg   esp,eax
  425c57:	retf   
  425c58:	cdq    
  425c59:	jmp    0xfeb38f10
  425c5e:	mov    BYTE PTR [eax],dh
  425c60:	jb     0x425ccc
  425c62:	stos   BYTE PTR es:[edi],al
  425c63:	retf   0xf3df
  425c66:	jnp    0x425c18
  425c68:	xchg   DWORD PTR [ecx+0x6643209a],ebx
  425c6e:	in     al,0xd0
  425c70:	popa   
  425c71:	ret    0x80f9
  425c74:	in     eax,dx
  425c75:	sbb    BYTE PTR [esi],cl
  425c77:	imul   edx,eax,0x4e
  425c7a:	inc    ebp
  425c7b:	push   edi
  425c7c:	iret   
  425c7d:	cmp    al,0x59
  425c7f:	mov    gs,WORD PTR [eax]
  425c81:	dec    edx
  425c82:	aaa    
  425c83:	jle    0x425ccd
  425c85:	mov    al,0xcf
  425c87:	jbe    0x425cc8
  425c89:	dec    ebx
  425c8a:	push   ds
  425c8b:	dec    ecx
  425c8c:	dec    ecx
  425c8d:	bound  ecx,QWORD PTR [esi]
  425c8f:	xchg   esi,eax
  425c90:	add    eax,0xf75423ff
  425c95:	fbld   TBYTE PTR [ebx-0x4c]
  425c98:	sahf   
  425c99:	and    DWORD PTR [edx],0x69
  425c9c:	ss sub dh,0x10
  425ca0:	inc    eax
  425ca1:	cmp    al,0xce
  425ca3:	jecxz  0x425c93
  425ca5:	jg     0x425ce2
  425ca7:	les    esi,FWORD PTR [edi]
  425ca9:	push   ebx
  425caa:	sub    dh,0x5a
  425cad:	test   bl,ah
  425caf:	mov    edx,0x9bf7af79
  425cb4:	or     ebp,esp
  425cb6:	ja     0x425cf4
  425cb8:	outs   dx,DWORD PTR ds:[esi]
  425cb9:	fs cmp bl,cl
  425cbc:	push   ebx
  425cbd:	ficomp WORD PTR [ebp+0x68]
  425cc0:	data16 xchg BYTE PTR [esi+ebx*8],dl
  425cc4:	xor    eax,0x2be41bf4
  425cc9:	sbb    ebp,DWORD PTR [ebx-0x3f]
  425ccc:	adc    BYTE PTR [edx+eiz*1],dl
  425ccf:	push   edx
  425cd0:	mov    ebp,0x53f4a3cf
  425cd5:	xchg   DWORD PTR [ecx-0x74],esi
  425cd8:	pushf  
  425cd9:	js     0x425cb3
  425cdb:	ds jmp 0x425caf
  425cde:	jmp    FWORD PTR [edx-0xf51f4c5]
  425ce4:	jp     0x425d5f
  425ce6:	jbe    0x425ce7
  425ce8:	mov    dh,BYTE PTR [ebx]
  425cea:	push   edi
  425ceb:	adc    BYTE PTR [edi],0x3f
  425cee:	jecxz  0x425d44
  425cf0:	arpl   WORD PTR cs:[ebx+0x5],cx
  425cf4:	mov    DWORD PTR [ecx+0x103865a0],ebp
  425cfa:	retf   
  425cfb:	mov    dl,BYTE PTR [ebx]
  425cfd:	dec    esp
  425cfe:	inc    eax
  425cff:	lods   al,BYTE PTR ds:[esi]
  425d00:	repnz mov fs,esi
  425d03:	mov    cl,0xc1
  425d05:	push   0xffffffc9
  425d07:	std    
  425d08:	call   0x698d6ca5
  425d0d:	fisttp WORD PTR [ecx]
  425d0f:	or     al,BYTE PTR [eax]
	...
  425d19:	add    BYTE PTR [edx-0x79],cl
  425d1c:	push   edx
  425d1d:	dec    esp
  425d1e:	(bad)  
  425d20:	pop    esi
  425d21:	xchg   DWORD PTR [edi-0x6e92def1],ecx
  425d27:	pusha  
  425d28:	jmp    0x425caa
  425d2a:	mov    dh,0xd4
  425d2c:	add    DWORD PTR [eax],eax
  425d2e:	inc    BYTE PTR [ecx]
  425d30:	add    BYTE PTR [eax],al
  425d32:	pusha  
  425d33:	mov    ebx,0xd3de2f70
  425d38:	stc    
  425d39:	ret    0xf371
  425d3c:	repz push esi
  425d3e:	jg     0x425cf6
  425d40:	dec    edi
  425d41:	adc    eax,0x5726be95
  425d46:	xor    BYTE PTR [ebx+0x2c9450f8],dl
  425d4c:	mov    ds:0xc377ca15,al
  425d51:	or     al,0x71
  425d53:	(bad)  [esi]
  425d55:	mov    bl,BYTE PTR [ecx+0x57c39689]
  425d5b:	scas   al,BYTE PTR es:[edi]
  425d5c:	jl     0x425d78
  425d5e:	mov    ebx,0xe0cc540d
  425d63:	dec    ebp
  425d64:	mov    DWORD PTR [eax],edx
  425d66:	(bad)  
  425d67:	pop    ebp
  425d68:	dec    esp
  425d69:	adc    dh,ah
  425d6b:	sbb    al,0x16
  425d6d:	addr16 push 0xb
  425d70:	mov    ch,0x9c
  425d72:	test   eax,0x60c1b1de
  425d77:	mov    ch,0x93
  425d79:	push   cs
  425d7a:	fnsave [ebp-0x4f667256]
  425d80:	scas   eax,DWORD PTR es:[edi]
  425d81:	cmp    eax,edx
  425d83:	pop    ds
  425d84:	sub    bh,BYTE PTR [esi+eax*1-0x2433b6f8]
  425d8b:	dec    DWORD PTR [eax-0x27]
  425d8e:	(bad)  
  425d8f:	ins    DWORD PTR es:[edi],dx
  425d90:	loope  0x425de4
  425d92:	aam    0x54
  425d94:	ss adc eax,0x8bcd4128
  425d9a:	test   ecx,ebx
  425d9c:	mov    ds:0x30d0378c,eax
  425da1:	mov    ah,0xb7
  425da3:	xor    DWORD PTR [ebp+0x600a95d4],ebx
  425da9:	shl    BYTE PTR [edi],cl
  425dab:	push   ecx
  425dac:	call   0x57f89ba0
  425db1:	mov    cl,0x7c
  425db3:	cmp    DWORD PTR [edx],ebp
  425db5:	pusha  
  425db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425db7:	sub    BYTE PTR [edi-0x521acade],0x7e
  425dbe:	push   edx
  425dbf:	das    
  425dc0:	and    al,0xe9
  425dc2:	int    0xdd
  425dc4:	and    eax,0x4e8b43c6
  425dc9:	push   ebp
  425dca:	sbb    eax,0x4db8e29a
  425dcf:	xor    DWORD PTR [edi-0x72],0x32eb5952
  425dd6:	mov    bh,0x53
  425dd8:	jp     0x425dfe
  425dda:	je     0x425d96
  425ddc:	inc    ebx
  425ddd:	xor    ch,BYTE PTR [esi-0x7fb4cb4b]
  425de3:	std    
  425de4:	sti    
  425de5:	stc    
  425de6:	sbb    esp,DWORD PTR [esi]
  425de8:	or     BYTE PTR ds:0x10f5e0b4,bl
  425dee:	ins    BYTE PTR es:[edi],dx
  425def:	add    al,0x84
  425df1:	mov    esi,0xa4a3af72
  425df6:	out    dx,eax
  425df7:	leave  
  425df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425df9:	mov    bl,cl
  425dfb:	cdq    
  425dfc:	test   BYTE PTR [eax+0x175bcace],dl
  425e02:	jecxz  0x425e2b
  425e04:	xchg   ebx,eax
  425e05:	pop    edi
  425e06:	out    0xd5,al
  425e08:	inc    esp
  425e09:	shr    DWORD PTR [edi],cl
  425e0b:	lods   al,BYTE PTR ds:[esi]
  425e0c:	cwde   
  425e0d:	add    eax,0x70298678
  425e12:	je     0x425e1e
  425e14:	sti    
  425e15:	or     DWORD PTR [edx+0x69],ebx
  425e18:	dec    edx
  425e19:	pop    es
  425e1a:	sahf   
  425e1b:	mov    ebp,0xb0745f99
  425e20:	pop    ebp
  425e21:	sti    
  425e22:	xchg   BYTE PTR [edx+0x4b15d7aa],al
  425e28:	fild   WORD PTR [ebx-0x18]
  425e2b:	ins    BYTE PTR es:[edi],dx
  425e2c:	test   dl,dh
  425e2e:	cmp    dh,BYTE PTR ds:0x922d7cd4
  425e34:	div    DWORD PTR [esi+ebx*4-0x49e4924b]
  425e3b:	adc    eax,0x30dbe892
  425e40:	in     eax,0x83
  425e42:	and    bh,ch
  425e44:	xchg   ebp,eax
  425e45:	test   BYTE PTR [ebp+0x12],al
  425e48:	xchg   ecx,eax
  425e49:	neg    DWORD PTR [eax-0x6dc437f3]
  425e4f:	dec    edi
  425e50:	out    0xe9,eax
  425e52:	inc    ebx
  425e53:	jo     0x425e17
  425e55:	out    dx,al
  425e56:	jp     0x425ea0
  425e58:	jne    0x425e0e
  425e5a:	stos   BYTE PTR es:[edi],al
  425e5b:	ss ret 0x4b07
  425e5f:	adc    ch,al
  425e61:	sub    eax,0x578176e9
  425e66:	icebp  
  425e67:	and    BYTE PTR [edx+0x48ef66ef],bh
  425e6d:	call   0x21fc99de
  425e72:	mov    ds,WORD PTR [eax]
  425e74:	xor    BYTE PTR [ecx],ch
  425e76:	mov    edx,0xa58633d7
  425e7b:	push   ebx
  425e7c:	arpl   WORD PTR [edi],cx
  425e7e:	add    DWORD PTR [esp+esi*1+0x79f6591c],ecx
  425e85:	in     al,dx
  425e86:	push   0x7c
  425e88:	neg    DWORD PTR [esi]
  425e8a:	mov    ebp,0x68efd4ff
  425e8f:	jo     0x425e32
  425e91:	iret   
  425e92:	retf   
  425e93:	dec    edx
  425e94:	mov    edx,0x899564a1
  425e99:	mov    cl,BYTE PTR [esi-0x3ef0323e]
  425e9f:	(bad)  [esi-0x31b22750]
  425ea5:	cmp    al,0xec
  425ea7:	sub    cl,BYTE PTR [ecx]
  425ea9:	cs in  al,dx
  425eab:	mov    DWORD PTR [ecx],esp
  425ead:	pop    edx
  425eae:	add    BYTE PTR ds:0x6b427422,0x6b
  425eb5:	test   eax,0xed6c76c2
  425eba:	push   ds
  425ebb:	das    
  425ebc:	popf   
  425ebd:	imul   esi,DWORD PTR [esi-0x20c5dd56],0x24
  425ec4:	mov    ch,0xf9
  425ec6:	and    cl,BYTE PTR [ebx-0x29]
  425ec9:	in     al,0x76
  425ecb:	in     al,0x99
  425ecd:	imul   ecx,DWORD PTR [edx+0x50],0x7270202b
  425ed4:	xchg   BYTE PTR ds:0x5232ca35,ah
  425eda:	fs cmp ch,ch
  425edd:	clc    
  425ede:	sti    
  425edf:	outs   dx,DWORD PTR ds:[esi]
  425ee0:	loope  0x425f25
  425ee2:	push   ss
  425ee3:	dec    eax
  425ee4:	push   ds
  425ee5:	not    DWORD PTR gs:[ecx]
  425ee8:	pop    ss
  425ee9:	fild   DWORD PTR [ecx]
  425eeb:	push   0xc53cee4c
  425ef0:	pop    es
  425ef1:	bound  ebx,QWORD PTR [edi]
  425ef3:	cld    
  425ef4:	and    al,0xfb
  425ef6:	mov    ah,0x1
  425ef8:	pop    es
  425ef9:	lds    edi,FWORD PTR [eax-0x7a842c80]
  425eff:	ret    
  425f00:	stos   BYTE PTR es:[edi],al
  425f01:	into   
  425f02:	or     BYTE PTR [ebp-0x69bd7f04],cl
  425f08:	dec    eax
  425f09:	xor    eax,0x43e6dbc0
  425f0e:	jno    0x425ee4
  425f10:	xor    al,0xab
  425f12:	rcr    BYTE PTR [esi],cl
  425f14:	fldenv [esi-0x79e87288]
  425f1a:	push   ebx
  425f1b:	and    ah,BYTE PTR [edx+ecx*2]
  425f1e:	cmp    eax,0xe579261e
  425f23:	stos   BYTE PTR es:[edi],al
  425f24:	stc    
  425f25:	enter  0x4a3e,0xc
  425f29:	push   edx
  425f2a:	pop    ss
  425f2b:	addr16 mov ah,0x74
  425f2e:	jge    0x425f85
	...
  425f38:	add    BYTE PTR [eax],al
  425f3a:	or     dl,BYTE PTR [edx-0x3c684]
  425f40:	dec    edi
  425f41:	mov    bl,0x9
  425f43:	sub    al,0x0
  425f45:	sub    ecx,esi
  425f47:	or     bh,BYTE PTR [eax-0x1f]
  425f4a:	mov    ah,0xd6
  425f4c:	add    DWORD PTR [eax],eax
  425f4e:	inc    BYTE PTR [ecx]
  425f50:	add    BYTE PTR [eax],al
  425f52:	push   0x39
  425f54:	jbe    0x425fa7
  425f56:	pop    ss
  425f57:	sub    eax,DWORD PTR [ecx+ebx*4+0x72]
  425f5b:	jae    0x425f45
  425f5d:	xor    eax,DWORD PTR [ebx]
  425f5f:	call   DWORD PTR [eax]
  425f61:	pop    eax
  425f62:	scas   al,BYTE PTR es:[edi]
  425f63:	xor    eax,0x612a7f98
  425f68:	and    al,0x47
  425f6a:	jno    0x425f04
  425f6c:	(bad)  
  425f6d:	aad    0xa8
  425f6f:	cmc    
  425f70:	je     0x425fc4
  425f72:	popf   
  425f73:	js     0x425f98
  425f75:	out    0xe3,eax
  425f77:	add    edx,DWORD PTR [eax]
  425f79:	fbld   TBYTE PTR [edx-0x48e2d72e]
  425f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f80:	and    eax,0x74507bab
  425f85:	jle    0x425f70
  425f87:	pop    ecx
  425f88:	in     al,dx
  425f89:	push   ebx
  425f8a:	mul    BYTE PTR [edi+0x277e81a5]
  425f90:	idiv   eax
  425f92:	std    
  425f93:	fmul   DWORD PTR [ebx]
  425f95:	mov    WORD PTR [ebx+edx*8],es
  425f98:	jo     0x425f57
  425f9a:	mov    BYTE PTR [ecx+0x25fd7bd2],al
  425fa0:	mov    DWORD PTR [ebp+0x2378b782],0x38e754fc
  425faa:	mov    ds:0xe6afcd48,eax
  425faf:	lods   al,BYTE PTR ds:[esi]
  425fb0:	or     BYTE PTR [ecx],bl
  425fb2:	(bad)  
  425fb3:	in     al,0x1a
  425fb5:	adc    BYTE PTR [ebx+eiz*2-0x14],ah
  425fb9:	or     BYTE PTR [esi],ah
  425fbb:	mov    dh,0x1c
  425fbd:	sbb    esi,DWORD PTR [edi-0x534b4d83]
  425fc3:	cld    
  425fc4:	and    dl,BYTE PTR ds:0x47bcd6a9
  425fca:	add    eax,0xf15238f9
  425fcf:	ret    
  425fd0:	sbb    DWORD PTR [edx],0xfffffff3
  425fd3:	stos   DWORD PTR es:[edi],eax
  425fd4:	push   es
  425fd5:	jo     0x425f82
  425fd7:	(bad)  
  425fd8:	leave  
  425fd9:	and    al,0x3a
  425fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fdc:	xchg   BYTE PTR [ecx+0x3f],ch
  425fdf:	sbb    BYTE PTR ds:0x7dc1ecf1,0xda
  425fe6:	retf   
  425fe7:	out    0x29,al
  425fe9:	adc    esp,edi
  425feb:	fmul   DWORD PTR [ecx]
  425fed:	(bad)  
  425fee:	ficom  WORD PTR [ebp-0x689b68d5]
  425ff4:	sbb    al,0xd2
  425ff6:	xor    dh,BYTE PTR [eax-0x1341a578]
  425ffc:	mov    ds:0x5234149a,al
  426001:	shl    DWORD PTR [esi-0x56bc6dbb],1
  426007:	or     esp,DWORD PTR [ebp+0x1a]
  42600a:	xchg   ebp,eax
  42600b:	sbb    cl,BYTE PTR [eax-0x80d999f]
  426011:	sbb    BYTE PTR [edi+0x4b1601f6],bh
  426017:	push   ss
  426018:	xchg   ebx,eax
  426019:	adc    eax,0xe4e3ddf9
  42601e:	mov    esp,0xc090d7
  426023:	out    0x1e,ax
  426026:	fwait
  426027:	add    BYTE PTR [esi],bh
  426029:	call   0x908a7d43
  42602e:	xchg   esp,eax
  42602f:	xor    edi,edi
  426031:	les    ebx,FWORD PTR [eax+0x36]
  426034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426035:	xchg   ecx,eax
  426036:	mov    ss,WORD PTR [ebx+eiz*4+0x4acdf90a]
  42603d:	ja     0x425fee
  42603f:	(bad)  
  426040:	in     al,dx
  426041:	pop    eax
  426042:	mov    esp,0xf71f8052
  426047:	(bad)  
  426048:	in     eax,dx
  426049:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42604a:	lds    edi,FWORD PTR [ecx+ebp*2+0x78]
  42604e:	pop    edx
  42604f:	and    edx,ebx
  426051:	inc    esi
  426052:	xor    ebp,DWORD PTR [eax-0x3c]
  426055:	cmp    eax,0xd8c84a4
  42605a:	dec    esi
  42605b:	and    eax,DWORD PTR [edx+0x4b]
  42605e:	mov    ds,WORD PTR [ebx]
  426060:	mov    ch,0x4c
  426062:	jns    0x426016
  426064:	pop    eax
  426065:	sub    esp,DWORD PTR [ebx]
  426067:	jecxz  0x42607f
  426069:	in     al,0x94
  42606b:	scas   al,BYTE PTR es:[edi]
  42606c:	mov    al,ds:0x71da106a
  426071:	fist   WORD PTR [esi]
  426073:	adc    edi,DWORD PTR [ebx+ecx*4-0x53d6333]
  42607a:	mov    dh,0x57
  42607c:	sub    eax,0x157dec1f
  426081:	ficom  DWORD PTR ds:0xed017aa0
  426087:	sbb    eax,0x44c7b0e4
  42608c:	(bad)  
  42608d:	aaa    
  42608e:	test   BYTE PTR [ebp-0x2a],dl
  426091:	out    0x17,eax
  426093:	dec    esp
  426094:	(bad)  
  426095:	cli    
  426096:	dec    ecx
  426097:	in     al,0xda
  426099:	je     0x426089
  42609b:	sub    eax,0x452d2f
  4260a0:	dec    ebx
  4260a1:	push   edx
  4260a2:	sub    al,al
  4260a4:	xchg   esp,eax
  4260a5:	loopne 0x426069
  4260a7:	xchg   esp,eax
  4260a8:	fnstsw WORD PTR [edx+0x2b5e4c9b]
  4260ae:	aad    0x44
  4260b0:	das    
  4260b1:	fwait
  4260b2:	adc    bl,dl
  4260b4:	ins    BYTE PTR es:[edi],dx
  4260b5:	cwde   
  4260b6:	mov    edi,0x3f7142e1
  4260bb:	lods   al,BYTE PTR ds:[esi]
  4260bc:	call   0x3b19:0xf280b498
  4260c3:	ins    DWORD PTR es:[edi],dx
  4260c4:	jge    0x4260be
  4260c6:	mov    cl,0xd4
  4260c8:	test   eax,0xb315cecc
  4260cd:	int    0x62
  4260cf:	and    al,bh
  4260d1:	pop    ss
  4260d2:	fcomip st,st(2)
  4260d4:	and    bl,cl
  4260d6:	cmp    esi,DWORD PTR ds:0x1400ebfe
  4260dc:	mov    cl,0x42
  4260de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260df:	(bad)
  4260e2:	cmp    edx,edx
  4260e4:	jne    0x426133
  4260e6:	hlt    
  4260e7:	hlt    
  4260e8:	int    0x26
  4260ea:	or     ebp,DWORD PTR [edx-0x18198dd4]
  4260f0:	dec    esp
  4260f1:	or     DWORD PTR [ebp+0x29],edx
  4260f4:	add    BYTE PTR [edi+esi*4],0x1c
  4260f8:	clc    
  4260f9:	dec    eax
  4260fa:	mov    edx,0xab0c7cbe
  4260ff:	adc    al,0xa6
  426101:	mov    BYTE PTR [edi+0x1c],ch
  426104:	js     0x426088
  426106:	stc    
  426107:	loop   0x4260f0
  426109:	mov    al,0xad
  42610b:	(bad)  
  42610e:	fsub   DWORD PTR [edx+eax*1]
  426111:	inc    ecx
  426112:	ficomp WORD PTR [edi-0x31ed5334]
  426118:	pop    eax
  426119:	mov    edx,0x9fb92cab
  42611e:	imul   ebx,ecx,0x2590100c
  426124:	cmp    al,al
  426126:	jb     0x4260f8
  426128:	mov    ds:0xa00aee9b,eax
  42612d:	mov    ebp,0xfcdd04e9
  426132:	aaa    
  426133:	popf   
  426134:	push   ss
  426135:	ret    
  426136:	push   edx
  426137:	dec    ebp
  426138:	lds    ebp,FWORD PTR [edi-0x7d]
  42613b:	jnp    0x4260eb
  42613d:	push   esi
  42613e:	mul    BYTE PTR [eax]
  426140:	mov    bl,0xbb
  426142:	push   edi
  426143:	call   0x732c6683
  426148:	add    cl,BYTE PTR [eax]
  42614a:	int    0x10
  42614c:	pop    ebp
  42614d:	inc    ebp
  42614e:	mov    bl,0x59
	...
  426158:	add    BYTE PTR [eax],al
  42615a:	ret    
  42615b:	and    ecx,edx
  42615d:	dec    eax
  42615e:	repz clc 
  426160:	fld    TBYTE PTR [ebx-0x2cd29d30]
  426166:	jb     0x42616c
  426168:	mov    edi,0x1d8b27f
  42616d:	add    dh,bh
  42616f:	add    DWORD PTR [eax],eax
  426171:	add    BYTE PTR [edx],bl
  426173:	lahf   
  426174:	js     0x426182
  426176:	es hlt 
  426178:	mov    esp,0x452d0805
  42617d:	dec    edx
  42617e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42617f:	lods   al,BYTE PTR ds:[esi]
  426180:	shl    DWORD PTR [esi],cl
  426182:	fild   WORD PTR [ebx+0xbabef08]
  426188:	and    BYTE PTR [eax],dl
  42618a:	pusha  
  42618b:	sahf   
  42618c:	shl    BYTE PTR [edi+0x14ae04a0],0x3
  426193:	xchg   esp,eax
  426194:	xchg   esi,eax
  426195:	ss cdq 
  426197:	mov    es,WORD PTR [eax]
  426199:	test   DWORD PTR [ecx-0x5f],eax
  42619c:	repz (bad) 
  42619e:	mov    ebx,0x61166103
  4261a3:	dec    ecx
  4261a4:	jmp    0x5ed0:0xb30e0edc
  4261ab:	or     BYTE PTR [eax-0x937d2c3],dl
  4261b1:	xchg   eax,esi
  4261b3:	jae    0x426231
  4261b5:	inc    edx
  4261b6:	lods   al,BYTE PTR ds:[esi]
  4261b7:	or     eax,0x3d6d9be9
  4261bc:	xor    DWORD PTR ds:0x73d64b07,esp
  4261c2:	imul   edx,DWORD PTR [esi+0x7a4ad250],0x65
  4261c9:	maxps  xmm5,XMMWORD PTR [edi]
  4261cc:	jno    0x4261cf
  4261ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261cf:	in     al,dx
  4261d0:	lahf   
  4261d1:	push   edi
  4261d2:	xchg   BYTE PTR [edi+ecx*4+0x71],al
  4261d6:	jmp    0xada7:0x48b23f9
  4261dd:	sbb    eax,0x3b60e419
  4261e2:	or     al,0x1
  4261e4:	adc    esp,DWORD PTR [esi+0x52ac3d68]
  4261ea:	push   esi
  4261eb:	lock sub al,0xf7
  4261ee:	sub    BYTE PTR [edx+0x16],al
  4261f1:	fisttp QWORD PTR [ecx-0x26]
  4261f4:	leave  
  4261f5:	push   edi
  4261f6:	jo     0x426258
  4261f8:	xbegin 0x3abd321a
  4261fe:	lods   al,BYTE PTR ds:[esi]
  4261ff:	pop    eax
  426200:	xor    al,0x3b
  426202:	or     BYTE PTR ds:0xa76c0bfa,dl
  426208:	cdq    
  426209:	gs retf 0x6ffb
  42620d:	jp     0x4261fa
  42620f:	loopne 0x42620d
  426211:	sahf   
  426212:	or     BYTE PTR [edx-0x38],ah
  426215:	fucom  st(7)
  426217:	fdivr  DWORD PTR [ebx*8+0x450deb3d]
  42621e:	aas    
  42621f:	fidiv  WORD PTR [esi]
  426221:	gs jmp 0x96c7:0xa42438ff
  426229:	dec    eax
  42622a:	push   ecx
  42622b:	cwde   
  42622c:	and    eax,0x175827d
  426231:	iret   
  426232:	jae    0x426297
  426234:	inc    esp
  426235:	inc    ebx
  426236:	call   0xafd5:0xe423c804
  42623d:	clc    
  42623e:	add    BYTE PTR [edx+ebp*1],cl
  426241:	into   
  426242:	mov    ebx,0x4839169c
  426247:	stos   BYTE PTR es:[edi],al
  426248:	mov    ebx,ebx
  42624a:	xor    BYTE PTR [edx+0x6b],al
  42624d:	out    dx,eax
  42624e:	mov    dh,0x48
  426250:	pop    ds
  426251:	inc    ecx
  426252:	sahf   
  426253:	adc    eax,0x3af023df
  426258:	mov    ebx,0xa3efe18d
  42625d:	loope  0x426292
  42625f:	or     DWORD PTR ds:0xb756f9e6,edi
  426265:	int3   
  426266:	adc    al,BYTE PTR [edi]
  426268:	icebp  
  426269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42626a:	into   
  42626b:	or     eax,0x91f2afe9
  426270:	jne    0x426258
  426272:	or     ebp,DWORD PTR [ebp+0xa]
  426275:	pushf  
  426276:	and    ebx,DWORD PTR [eax+0x47]
  426279:	dec    edx
  42627a:	cmp    esi,ebx
  42627c:	popa   
  42627d:	mov    ds:0x6525b38c,al
  426282:	neg    BYTE PTR [ecx+0x3f838dcf]
  426288:	and    esp,DWORD PTR [ebp-0x58]
  42628b:	lods   eax,DWORD PTR ds:[esi]
  42628c:	out    dx,al
  42628d:	retf   0x96eb
  426290:	out    dx,eax
  426291:	inc    esi
  426292:	jmp    0xf5ef:0xb52072c0
  426299:	or     dl,BYTE PTR [edi-0x56c61536]
  42629f:	push   0xffffffe3
  4262a1:	xor    eax,ebx
  4262a3:	jb     0x4262d2
  4262a5:	mov    ecx,ebx
  4262a7:	adc    BYTE PTR [ebp+0x20],cl
  4262aa:	mov    gs:0xb3818daa,al
  4262b0:	mov    bh,BYTE PTR ds:0x6c93c373
  4262b6:	std    
  4262b7:	add    BYTE PTR [ecx-0x29],dh
  4262ba:	dec    esi
  4262bb:	repnz and BYTE PTR [edx-0x637cebd1],bh
  4262c2:	pop    eax
  4262c3:	(bad)  
  4262c4:	loopne 0x426289
  4262c6:	leave  
  4262c7:	pop    eax
  4262c8:	adc    eax,0x858d2959
  4262cd:	aam    0x4b
  4262cf:	cmp    eax,DWORD PTR [edi]
  4262d1:	cmp    BYTE PTR [esi],dh
  4262d3:	sti    
  4262d4:	jno    0x426339
  4262d6:	dec    eax
  4262d7:	pop    eax
  4262d8:	push   esp
  4262d9:	inc    edx
  4262da:	in     eax,0x90
  4262dc:	jge    0x4262a4
  4262de:	cld    
  4262df:	dec    ebp
  4262e0:	inc    esi
  4262e1:	mov    ebx,0x878d7e5d
  4262e6:	(bad)  
  4262e7:	not    BYTE PTR [eax]
  4262e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ea:	shr    dh,0xd0
  4262ed:	mov    eax,ds:0xdd309ac7
  4262f2:	dec    ecx
  4262f3:	inc    eax
  4262f4:	add    eax,0xba4bc40
  4262f9:	add    BYTE PTR [eax+0x71],dl
  4262fc:	sbb    BYTE PTR [esi+ebp*2-0x63],0xbc
  426301:	sbb    eax,0xb3c58254
  426306:	inc    ebx
  426307:	shl    ebp,1
  426309:	mov    bh,0x94
  42630b:	pop    ecx
  42630c:	mov    edi,edi
  42630e:	sbb    edi,DWORD PTR gs:[esp+esi*8-0x80]
  426313:	popa   
  426314:	pop    eax
  426315:	sub    DWORD PTR [ecx-0x3fdb1a82],eax
  42631b:	pusha  
  42631c:	mov    al,ds:0xb916534c
  426321:	dec    ecx
  426322:	gs (bad) 
  426324:	push   ecx
  426325:	xor    al,0x5b
  426327:	out    0xb9,al
  426329:	pop    eax
  42632a:	(bad)  
  42632b:	aam    0x54
  42632d:	jbe    0x4263a6
  42632f:	dec    edi
  426330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426331:	cdq    
  426332:	test   eax,ecx
  426334:	fadd   QWORD PTR [eax+0x3f]
  426337:	cli    
  426338:	in     eax,dx
  426339:	aas    
  42633a:	adc    eax,0x5df65ff6
  42633f:	std    
  426340:	(bad)  
  426341:	push   ds
  426342:	sub    esi,DWORD PTR ds:0x81c506d9
  426348:	les    esi,FWORD PTR [ebp-0x53]
  42634b:	cmp    al,0x68
  42634d:	jmp    0x4263c1
  42634f:	scas   al,BYTE PTR es:[edi]
  426350:	mov    edi,0x8a113f7e
  426355:	jmp    0x5d5393d4
  42635a:	ins    DWORD PTR es:[edi],dx
  42635b:	add    ah,BYTE PTR [eax+0x63aac273]
  426361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426362:	cmc    
  426363:	pop    ecx
  426364:	ret    
  426365:	adc    cl,BYTE PTR [edi]
  426367:	sbb    edx,esp
  426369:	out    dx,eax
  42636a:	stos   BYTE PTR es:[edi],al
  42636b:	shl    BYTE PTR [esi],cl
  42636d:	inc    edx
  42636e:	daa    
  42636f:	lods   eax,DWORD PTR ds:[esi]
	...
  426378:	add    BYTE PTR [eax],al
  42637a:	call   0x9eff:0xefe9ef59
  426381:	jnp    0x42638f
  426383:	push   esi
  426384:	mov    ss,ebx
  426386:	fdivr  DWORD PTR [edi-0x5f]
  426389:	(bad)  
  42638a:	mov    al,0xda
  42638c:	add    DWORD PTR [eax],eax
  42638e:	inc    BYTE PTR [ecx]
  426390:	add    BYTE PTR [eax],al
  426392:	pandn  mm0,QWORD PTR [edx]
  426395:	pop    ss
  426396:	imul   esi,DWORD PTR [esi+edi*4-0x48],0xe5d65d6c
  42639e:	test   eax,0x66cbf203
  4263a3:	xchg   ebx,eax
  4263a4:	push   ebx
  4263a5:	pushf  
  4263a6:	or     ecx,DWORD PTR [eax]
  4263a8:	int    0x34
  4263aa:	loope  0x4263b3
  4263ac:	add    dh,BYTE PTR [ebx+0x7929104f]
  4263b2:	sahf   
  4263b3:	les    esp,FWORD PTR [eax-0x79]
  4263b6:	pop    eax
  4263b7:	loopne 0x426423
  4263b9:	jb     0x426386
  4263bb:	xor    bh,bl
  4263bd:	call   FWORD PTR [eax]
  4263bf:	nop
  4263c0:	sub    ebp,DWORD PTR [edx-0x80]
  4263c3:	cmp    ebx,esi
  4263c5:	call   0x87a0cc38
  4263ca:	ja     0x4263f9
  4263cc:	sub    al,0xd6
  4263ce:	mov    ebx,0xfc42175d
  4263d3:	in     al,0x69
  4263d5:	js     0x42635a
  4263d7:	test   eax,0xaefc5fb
  4263dc:	cmp    al,0x30
  4263de:	mov    bh,BYTE PTR [edx+0x78]
  4263e1:	sar    BYTE PTR [ebx-0x3e],0x73
  4263e5:	xor    al,0xc3
  4263e7:	out    dx,al
  4263e8:	xor    al,BYTE PTR [edx]
  4263ea:	ficomp WORD PTR [esi+0x7d]
  4263ed:	dec    esi
  4263ee:	pop    eax
  4263ef:	cmovp  esp,DWORD PTR [eax+ecx*8+0x4058bdcb]
  4263f7:	test   al,0xa1
  4263f9:	les    ecx,FWORD PTR [edi]
  4263fb:	repnz mov ds:0xb90f38c9,eax
  426401:	shl    DWORD PTR [ebp+0x5d],cl
  426404:	daa    
  426405:	sbb    BYTE PTR [edi],cl
  426407:	jg     0x426478
  426409:	cmp    BYTE PTR [edx+ebx*8+0xb],bl
  42640d:	clc    
  42640e:	pop    eax
  42640f:	je     0x42642d
  426411:	fwait
  426412:	fwait
  426413:	dec    cx
  426415:	shl    eax,1
  426417:	js     0x42639c
  426419:	jl     0x42647d
  42641b:	inc    ecx
  42641c:	dec    edi
  42641d:	mov    edx,0xe114a4cf
  426422:	push   eax
  426423:	mov    cl,0xa5
  426425:	inc    eax
  426426:	mov    ds:0x13e8d405,al
  42642b:	mov    bl,BYTE PTR [ebp+0x5]
  42642e:	sti    
  42642f:	gs mov ebp,0xda0b3ce9
  426435:	adc    cl,cl
  426437:	cmp    BYTE PTR ds:[eax+edi*1],bl
  42643b:	stos   DWORD PTR es:[edi],eax
  42643c:	(bad)  
  42643d:	fnstsw WORD PTR [edi+0x4da3ed72]
  426443:	push   0x41
  426445:	jmp    0x9bc9:0xd544246b
  42644c:	xor    eax,0xcbb00522
  426451:	loopne 0x4264b1
  426453:	mov    ah,0xf7
  426455:	jmp    0x29eb:0xdb139ef
  42645c:	jno    0x42649d
  42645e:	pop    edx
  42645f:	rcr    DWORD PTR [ebp+ebx*2-0x57],1
  426463:	mov    edi,0x713c374
  426468:	fwait
  426469:	inc    ebp
  42646a:	jb     0x4264bc
  42646c:	push   eax
  42646d:	invd   
  42646f:	xchg   esp,eax
  426470:	inc    ecx
  426471:	xchg   esp,eax
  426472:	jg     0x4263f4
  426474:	je     0x426494
  426476:	daa    
  426477:	stos   DWORD PTR es:[edi],eax
  426478:	in     al,0xff
  42647a:	mov    esi,0x9f26952f
  42647f:	(bad)
  426482:	lods   eax,DWORD PTR ds:[esi]
  426483:	inc    edi
  426484:	pop    esp
  426485:	xchg   DWORD PTR [ebx-0x5f],ebp
  426488:	cmp    DWORD PTR [ecx+0x3f],edx
  42648b:	aad    0xd9
  42648d:	gs jp  0x42644f
  426490:	pop    es
  426491:	mov    DWORD PTR [ecx+0x52d15e62],edi
  426497:	pop    edx
  426498:	mov    edx,0x51f502cf
  42649d:	sbb    BYTE PTR [esi],bl
  42649f:	sbb    eax,0xb6d8e08a
  4264a4:	ret    0x1724
  4264a7:	(bad)  
  4264a8:	pop    es
  4264a9:	jp     0x42647a
  4264ab:	retf   0x7327
  4264ae:	ins    BYTE PTR es:[edi],dx
  4264af:	ss inc ebx
  4264b1:	pop    edx
  4264b2:	ror    BYTE PTR [ebx],cl
  4264b4:	scas   al,BYTE PTR es:[edi]
  4264b5:	mov    DWORD PTR [esi],edi
  4264b7:	lock scas eax,DWORD PTR es:[edi]
  4264b9:	aam    0x7d
  4264bb:	and    al,0x3e
  4264bd:	in     al,dx
  4264be:	jno    0x4264c6
  4264c0:	dec    ebp
  4264c1:	xor    DWORD PTR [ebp-0x5],edx
  4264c4:	add    BYTE PTR [eax+0x9],cl
  4264c7:	and    al,0x3a
  4264c9:	(bad)  
  4264ca:	dec    ecx
  4264cb:	cmp    al,0x8b
  4264cd:	mov    eax,0x7b5c09b9
  4264d2:	pop    edi
  4264d3:	and    DWORD PTR [ecx+0x73],0x81fce0cc
  4264da:	xchg   DWORD PTR [ebx],ebp
  4264dc:	in     eax,0x85
  4264de:	out    0x1f,eax
  4264e0:	and    dh,cl
  4264e2:	push   0x694e2269
  4264e7:	fwait
  4264e8:	mov    ds:0xbb929536,al
  4264ed:	pop    ecx
  4264ee:	push   es
  4264ef:	fld    QWORD PTR [ecx+0x6]
  4264f2:	sbb    al,0x9a
  4264f5:	pop    eax
  4264f6:	sub    edi,ebp
  4264f8:	fdivr  st(5),st
  4264fa:	or     dh,al
  4264fc:	out    0x4c,eax
  4264fe:	nop
  4264ff:	ja     0x42649b
  426501:	mov    ?,WORD PTR [ecx]
  426503:	aaa    
  426504:	mov    eax,0x8b9aa182
  426509:	mov    bl,BYTE PTR [esp+edx*8]
  42650c:	mov    ebp,0x9b59797d
  426511:	rol    BYTE PTR [ebx+0x34],1
  426514:	jns    0x426540
  426516:	icebp  
  426517:	int3   
  426518:	out    0xe4,al
  42651a:	daa    
  42651b:	mov    esi,0x6f826d2c
  426520:	dec    edi
  426521:	lock imul eax,ebx,0xe9a8ea40
  426528:	dec    eax
  426529:	jne    0x42659b
  42652b:	out    0x19,eax
  42652d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42652e:	sbb    eax,0x189b7658
  426533:	jno    0x4264bd
  426535:	xlat   BYTE PTR ds:[ebx]
  426536:	js     0x4264d6
  426538:	rol    BYTE PTR [esi],0xe0
  42653b:	cdq    
  42653c:	pop    es
  42653d:	push   es
  42653e:	push   esp
  42653f:	cs loop 0x426552
  426542:	jp     0x426524
  426544:	adc    eax,0xec399669
  426549:	mov    dl,0x17
  42654b:	dec    edi
  42654c:	dec    ecx
  42654d:	in     al,dx
  42654e:	test   DWORD PTR [esp+ebx*8-0x37],esi
  426552:	shr    BYTE PTR [ebp+0x60c3067e],1
  426558:	pushf  
  426559:	mov    ah,0x32
  42655b:	adc    eax,0x4382bf89
  426560:	out    dx,al
  426561:	ret    
  426562:	fimul  DWORD PTR ds:0xfe8519bf
  426568:	fsubr  st(6),st
  42656a:	lods   al,BYTE PTR ds:[esi]
  42656b:	jnp    0x42650a
  42656d:	xchg   esi,eax
  42656e:	add    al,0xbe
  426570:	or     eax,0x965879e3
  426575:	adc    ah,al
  426577:	call   0xd332db33
  42657c:	jns    0x4265d3
  42657e:	lahf   
  42657f:	mov    ecx,0xd15794b1
  426584:	add    al,0x73
  426586:	cmp    eax,0xe3e34519
  42658b:	mov    esp,?
  42658d:	call   0x0:0x775a
  426594:	add    BYTE PTR [eax],al
  426596:	add    BYTE PTR [eax],al
  426598:	add    BYTE PTR [eax],al
  42659a:	(bad)  
  42659b:	rol    BYTE PTR [edi],0x37
  42659e:	dec    edi
  42659f:	idiv   DWORD PTR [ebp-0x7c857b06]
  4265a5:	jg     0x426551
  4265a7:	xor    edx,ebx
  4265a9:	sbb    eax,0x1dcae
  4265ae:	inc    BYTE PTR [ecx]
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	dec    esi
  4265b3:	cld    
  4265b4:	mov    cl,0xb4
  4265b6:	dec    esi
  4265b7:	mov    al,0x91
  4265b9:	shr    ebx,0x3a
  4265bc:	leave  
  4265bd:	sbb    DWORD PTR [ecx-0x21c8540],ebx
  4265c3:	inc    edx
  4265c4:	jmp    0xd3f:0x57184634
  4265cb:	mov    eax,0xed659df
  4265d0:	aaa    
  4265d1:	lock hlt 
  4265d3:	popaw  
  4265d5:	push   edx
  4265d6:	xor    ah,BYTE PTR [ebx]
  4265d8:	outs   dx,BYTE PTR ds:[esi]
  4265d9:	xchg   BYTE PTR [edx-0x1df417da],ch
  4265df:	lock pop eax
  4265e1:	int3   
  4265e2:	xor    dl,BYTE PTR [ebp-0x5d]
  4265e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e6:	cdq    
  4265e7:	cmp    al,0x7e
  4265e9:	sub    dl,0x3b
  4265ec:	mov    eax,0xbbcc6204
  4265f1:	fs inc edi
  4265f3:	adc    eax,0x6c7e6e92
  4265f8:	arpl   WORD PTR [eax+0x65],bx
  4265fb:	push   0xfffffff9
  4265fd:	or     edx,DWORD PTR [ebx-0x6eda7688]
  426603:	test   eax,0x3c872ed8
  426609:	inc    eax
  42660a:	dec    eax
  42660b:	ret    0xfa4a
  42660e:	sbb    ebp,edx
  426610:	dec    ebp
  426611:	mov    ch,0x77
  426613:	sar    DWORD PTR [edi+ecx*8-0x74eacc1a],1
  42661a:	call   0xf16:0x8fd06f13
  426621:	inc    edx
  426622:	add    al,0xbc
  426624:	or     al,0x38
  426626:	neg    BYTE PTR [ebx]
  426628:	lock fdivp st(4),st
  42662b:	push   0x218928b7
  426630:	and    eax,0x98ff97e8
  426635:	ror    ebx,1
  426637:	mov    edi,0x4a0ada16
  42663c:	pop    ecx
  42663d:	ret    
  42663e:	adc    edi,DWORD PTR [esi]
  426640:	mov    es,WORD PTR [ecx+0x7236be43]
  426646:	mov    ds:0x73c7d271,eax
  42664b:	call   0xa9bc:0x430437fb
  426652:	mov    dh,0x3d
  426654:	push   ds
  426655:	inc    ebp
  426656:	call   0x3748d728
  42665b:	icebp  
  42665c:	pop    ecx
  42665d:	xor    ebx,DWORD PTR [esi+0x4]
  426660:	shl    ch,cl
  426662:	hlt    
  426663:	test   eax,0x77a0071c
  426668:	sub    DWORD PTR [ecx],ebp
  42666a:	sbb    edx,DWORD PTR [ecx+0x20]
  42666d:	xor    eax,DWORD PTR [eax+eax*8+0x593bc5b1]
  426674:	or     al,0xe2
  426676:	jecxz  0x426696
  426678:	leave  
  426679:	or     edx,DWORD PTR [ebp+0x13385c9f]
  42667f:	lods   eax,DWORD PTR ds:[esi]
  426680:	js     0x426676
  426682:	mov    edx,gs
  426684:	mov    dh,0xc9
  426686:	dec    ebp
  426687:	xchg   esp,eax
  426688:	inc    ebp
  426689:	pop    es
  42668a:	add    bh,BYTE PTR [edi+ebp*8]
  42668d:	lea    ebp,[eax+0x10]
  426690:	jnp    0x426664
  426692:	or     eax,ecx
  426694:	fwait
  426695:	xor    eax,0x7140f7b
  42669a:	jg     0x42669c
  42669c:	push   0x5a74aa1a
  4266a1:	pop    edi
  4266a2:	jb     0x42668f
  4266a4:	les    ecx,FWORD PTR [eax-0x74]
  4266a7:	fisttp WORD PTR [esi-0x7a]
  4266aa:	sub    edi,ebp
  4266ac:	scas   eax,DWORD PTR es:[edi]
  4266ad:	xchg   edi,eax
  4266ae:	pop    ss
  4266af:	cmp    ah,BYTE PTR [edi-0x7c]
  4266b2:	dec    esi
  4266b3:	jg     0x4266f8
  4266b5:	cmp    ebx,esi
  4266b7:	mov    ah,0xda
  4266b9:	outs   dx,DWORD PTR ds:[esi]
  4266ba:	add    dl,BYTE PTR [eax-0x134cb36f]
  4266c0:	push   ecx
  4266c1:	out    dx,al
  4266c2:	xchg   edi,eax
  4266c3:	jle    0x426711
  4266c5:	or     ecx,DWORD PTR [eax]
  4266c7:	stos   BYTE PTR es:[edi],al
  4266c8:	xor    bl,BYTE PTR [edx-0x4c]
  4266cb:	ja     0x4266dc
  4266cd:	mov    al,ds:0xef9c9497
  4266d2:	jae    0x42667d
  4266d4:	pcmpeqw mm6,QWORD PTR [esi-0x4]
  4266d8:	pop    edx
  4266d9:	or     ebp,edx
  4266db:	xlat   BYTE PTR ds:[ebx]
  4266dc:	cli    
  4266dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266de:	ss sbb eax,0x86a28482
  4266e4:	xor    al,bh
  4266e6:	in     eax,dx
  4266e7:	aas    
  4266e8:	lds    esi,FWORD PTR [edx]
  4266ea:	cmc    
  4266eb:	test   DWORD PTR [ebx],0xc9bbc2eb
  4266f1:	imul   esi,DWORD PTR [esi],0x3e
  4266f4:	and    eax,0xa8bdebbb
  4266f9:	or     BYTE PTR [edi+0x5c61f72],bh
  4266ff:	xor    al,0xff
  426701:	fisttp WORD PTR [ebx-0x46]
  426704:	std    
  426705:	or     DWORD PTR [ebx],edi
  426707:	inc    eax
  426708:	or     ecx,DWORD PTR [edx-0x5b]
  42670b:	loop   0x426761
  42670d:	ins    DWORD PTR es:[edi],dx
  42670e:	test   al,0x12
  426710:	cmp    al,0x95
  426712:	xchg   edx,eax
  426713:	push   ebx
  426714:	fisub  DWORD PTR [ebp-0x32]
  426717:	cld    
  426718:	mov    dl,0x1
  42671a:	xchg   DWORD PTR [ebp+0x41],ebp
  42671d:	loop   0x426706
  42671f:	aaa    
  426720:	scas   eax,DWORD PTR es:[edi]
  426721:	fisttp WORD PTR [esp+eiz*4+0x34]
  426725:	mov    ecx,0x8a65319f
  42672a:	test   al,0x6
  42672c:	dec    ebx
  42672d:	dec    edx
  42672e:	mov    BYTE PTR [ebp+0x46],dl
  426731:	mov    cl,BYTE PTR [ebp-0x20]
  426734:	jae    0x4266b9
  426736:	loop   0x426776
  426738:	nop
  426739:	js     0x4266ea
  42673b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42673c:	aas    
  42673d:	rol    BYTE PTR [eax-0x11],0x10
  426741:	sub    BYTE PTR [edi-0xc],bl
  426744:	repz mov ds,ecx
  426747:	jge    0x4267b3
  426749:	jp     0x426785
  42674b:	test   BYTE PTR [ebx-0x36],bl
  42674e:	push   ebp
  42674f:	imul   edx,ebp,0x2bdaa443
  426755:	sbb    eax,0x14895ed9
  42675a:	jle    0x42678f
  42675c:	sub    eax,0xa2aa490f
  426761:	push   ebp
  426762:	fcom   DWORD PTR [ebp-0x14]
  426765:	mov    dh,0x6f
  426767:	fwait
  426768:	dec    edi
  426769:	push   ds
  42676a:	add    eax,0x99ea26fb
  42676f:	mov    cl,0x1
  426771:	jmp    0x85fb:0xe07df744
  426778:	jbe    0x42674a
  42677a:	mov    eax,0x16113b4a
  42677f:	inc    esi
  426780:	jecxz  0x42676e
  426782:	xchg   ebx,eax
  426783:	xor    DWORD PTR ds:0x18e0a1a0,0x21
  42678a:	int    0xee
  42678c:	out    0xcf,eax
  42678e:	cmp    BYTE PTR [edi],ah
  426790:	pushf  
  426791:	(bad)  
  426792:	or     edx,DWORD PTR [ebx+0x399f0994]
  426798:	lea    ebp,[ecx-0x14]
  42679b:	and    al,0x17
  42679d:	in     al,dx
  42679e:	jb     0x426809
  4267a0:	sbb    DWORD PTR [eax+ecx*1],ebp
  4267a3:	pop    es
  4267a4:	mov    eax,0x26c3b9d
  4267a9:	mov    ch,0x9a
  4267ab:	pop    ebp
  4267ac:	push   edx
  4267ad:	jg     0x42677d
  4267af:	in     eax,dx
	...
  4267b8:	add    BYTE PTR [eax],al
  4267ba:	mov    al,0x8a
  4267bc:	call   0xfa266242
  4267c1:	mov    ebx,0xcae72888
  4267c6:	ror    BYTE PTR [esi+0x24],1
  4267c9:	lods   al,BYTE PTR gs:[esi]
  4267cb:	fiadd  WORD PTR [ecx]
  4267cd:	add    dh,bh
  4267cf:	add    DWORD PTR [eax],eax
  4267d1:	add    al,dh
  4267d3:	pop    DWORD PTR [edi]
  4267d5:	mov    gs,WORD PTR [esi+ecx*2]
  4267d8:	stc    
  4267d9:	popa   
  4267da:	lahf   
  4267db:	das    
  4267dc:	dec    edx
  4267dd:	mov    al,0x33
  4267df:	jo     0x426799
  4267e1:	jp     0x42678b
  4267e3:	nop
  4267e4:	bound  edi,QWORD PTR [ecx+0x53]
  4267e7:	sub    ecx,DWORD PTR [ebp+edx*2+0x10]
  4267eb:	xor    al,0xa8
  4267ed:	iret   
  4267ee:	sub    al,0x1a
  4267f0:	pop    es
  4267f1:	nop
  4267f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267f3:	lea    ebp,[ebp-0x4d]
  4267f6:	fstp   TBYTE PTR [ebp-0x1ebea617]
  4267fc:	xchg   ebx,eax
  4267fd:	nop
  4267fe:	jo     0x426875
  426800:	inc    DWORD PTR [esi+0x7c6df77e]
  426806:	pop    eax
  426807:	and    DWORD PTR [edi],ebp
  426809:	mov    edi,DWORD PTR ds:0x1295b720
  42680f:	push   eax
  426810:	mov    esi,edi
  426812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426813:	or     BYTE PTR [edi+0x6f],cl
  426816:	mov    edi,0x1964054c
  42681b:	sbb    DWORD PTR [eax-0x643b642e],esp
  426821:	cmp    ebp,DWORD PTR [eax+ebp*1]
  426824:	xor    eax,0x4a4a4bc9
  426829:	pop    ebp
  42682a:	xchg   ch,al
  42682c:	loope  0x4267e3
  42682e:	adc    cl,BYTE PTR ds:0x8736a222
  426834:	pop    esi
  426835:	cmp    eax,0x2293e58
  42683a:	cmp    ch,cl
  42683c:	sar    BYTE PTR [eax-0x40],1
  42683f:	xlat   BYTE PTR ds:[ebx]
  426840:	stc    
  426841:	lods   al,BYTE PTR ds:[esi]
  426842:	pop    eax
  426843:	jb     0x42682d
  426845:	daa    
  426846:	js     0x426818
  426848:	fld    QWORD PTR [edi-0x474b8e24]
  42684e:	pop    ss
  42684f:	hlt    
  426850:	aam    0x27
  426852:	shl    DWORD PTR [ecx-0x59bfeeed],0x97
  426859:	xor    al,0x31
  42685b:	dec    eax
  42685c:	add    DWORD PTR [ebp-0x2d],esi
  42685f:	std    
  426860:	cmp    al,0x72
  426862:	(bad)  
  426864:	out    0x69,al
  426866:	and    eax,0x1dec6e39
  42686b:	cld    
  42686c:	push   esi
  42686d:	jb     0x4268c8
  42686f:	enter  0xc924,0x31
  426873:	lods   al,BYTE PTR ds:[esi]
  426874:	test   edx,0xd2425beb
  42687a:	out    0xb4,al
  42687c:	retf   
  42687d:	sub    BYTE PTR [edx+edi*4-0x72fc6f3],0x59
  426885:	cmp    BYTE PTR [ecx+eax*8],bh
  426888:	out    0xf3,eax
  42688a:	xor    eax,0x716b5df9
  42688f:	pop    edi
  426890:	cld    
  426891:	gs jmp 0x2f144321
  426897:	sub    dh,ah
  426899:	retf   
  42689a:	shl    DWORD PTR [ebx-0x78400bd1],0x36
  4268a1:	fiadd  DWORD PTR [ecx-0x1]
  4268a4:	in     al,dx
  4268a5:	xchg   edx,eax
  4268a6:	mov    ch,BYTE PTR [ebp+0x78]
  4268a9:	push   ebx
  4268aa:	mov    ebp,ss
  4268ac:	push   ebp
  4268ad:	mov    esi,0x33103829
  4268b2:	pop    edx
  4268b3:	inc    esp
  4268b4:	addr16 addr16 pop ecx
  4268b7:	mov    al,ds:0x26b55049
  4268bc:	ror    al,0xec
  4268bf:	js     0x42684c
  4268c1:	add    eax,0xcdbe95d1
  4268c6:	lods   eax,DWORD PTR ds:[esi]
  4268c7:	xor    bh,BYTE PTR [ebx-0x63704387]
  4268cd:	(bad)  
  4268cf:	addr16 ret 
  4268d1:	das    
  4268d2:	repz mov edx,0x17e5b541
  4268d8:	mov    al,ds:0xb44683ae
  4268dd:	mov    ?,ebp
  4268df:	rcl    BYTE PTR [ecx-0x38bd0359],0xbc
  4268e6:	(bad)  
  4268e8:	or     cl,dl
  4268ea:	push   esi
  4268eb:	pop    ecx
  4268ec:	or     eax,0x62f5cb76
  4268f1:	or     BYTE PTR [ebx+0x6c],ch
  4268f4:	je     0x42688f
  4268f6:	mov    esi,0xe81ca198
  4268fb:	and    DWORD PTR [ebp-0x4ac378ef],eax
  426901:	cmp    al,0x6d
  426903:	cmp    cl,cl
  426905:	je     0x42693d
  426907:	push   edx
  426908:	push   0x31
  42690a:	cdq    
  42690b:	push   ds
  42690c:	adc    al,0x25
  42690e:	adc    BYTE PTR [ebx-0x6a],0x17
  426912:	arpl   WORD PTR [edi-0xd],si
  426915:	fidivr WORD PTR [edx+0x21]
  426918:	leave  
  426919:	pop    ebx
  42691a:	and    al,0xc7
  42691c:	ja     0x4268f7
  42691e:	pop    esi
  42691f:	pop    edx
  426920:	leave  
  426921:	enter  0x90cc,0x46
  426925:	sub    dh,bl
  426927:	fisub  DWORD PTR [eax]
  426929:	stc    
  42692a:	sub    BYTE PTR [ebp-0x62],0x91
  42692e:	not    BYTE PTR [edi+0x5e324890]
  426934:	push   ds
  426935:	xchg   esp,eax
  426936:	xor    DWORD PTR [esi+0x33c7374f],esp
  42693c:	xchg   ebx,eax
  42693d:	mov    ds:0x94914623,eax
  426942:	out    0x5,eax
  426944:	lds    ebp,FWORD PTR [edx-0x26]
  426947:	pop    ebp
  426948:	jo     0x4269bd
  42694a:	sub    al,0x45
  42694c:	push   eax
  42694d:	sbb    eax,0x91d7a06b
  426952:	aam    0xaf
  426954:	cmp    eax,0x5c2d3667
  426959:	mov    WORD PTR [ebx-0x5a],ds
  42695c:	test   eax,0xebee0c7c
  426961:	jnp    0x426912
  426963:	fdivr  DWORD PTR [esi]
  426965:	pop    ds
  426966:	outs   dx,DWORD PTR ds:[esi]
  426967:	aaa    
  426968:	fld    DWORD PTR [ecx+0x573906b]
  42696e:	imul   edi,esi,0xdb12436d
  426974:	es stc 
  426976:	aas    
  426977:	sbb    al,0x88
  426979:	out    dx,eax
  42697a:	test   DWORD PTR [edi+esi*4-0x2e],edi
  42697e:	pop    ds
  42697f:	mov    eax,ds:0x889548ee
  426984:	shl    DWORD PTR [eax],1
  426986:	out    dx,al
  426987:	mov    esp,0xeba763aa
  42698c:	loop   0x4269bf
  42698e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42698f:	mov    bl,0x34
  426991:	aaa    
  426992:	repz into 
  426994:	repnz or DWORD PTR [edi+0x7f],esp
  426998:	xor    eax,0x2b67a13d
  42699d:	mov    ecx,0xf942fa2d
  4269a2:	out    0x35,eax
  4269a4:	push   eax
  4269a5:	repz test eax,0xb865e11c
  4269ab:	sub    al,0x8d
  4269ad:	sub    al,0x4e
  4269af:	add    al,0x99
  4269b1:	xor    eax,0xcad87e08
  4269b6:	jge    0x426a06
  4269b8:	loopne 0x4269ac
  4269ba:	mov    edi,0x549787ef
  4269bf:	(bad)  
  4269c0:	push   edx
  4269c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269c2:	and    ebx,DWORD PTR [eax+0x18]
  4269c5:	mov    esp,0xd221c91f
  4269ca:	push   es
  4269cb:	inc    ebx
  4269cc:	jmp    0x0:0xf99927
  4269d3:	add    BYTE PTR [eax],al
  4269d5:	add    BYTE PTR [eax],al
  4269d7:	add    BYTE PTR [eax],al
  4269d9:	add    BYTE PTR [edx-0x39253b74],cl
  4269df:	ficomp DWORD PTR [esi+0xc235fdc]
  4269e5:	mov    ah,BYTE PTR [eax-0x55038077]
  4269eb:	loopne 0x4269ee
  4269ed:	add    dh,bh
  4269ef:	add    DWORD PTR [eax],eax
  4269f1:	add    BYTE PTR [esi+esi*1],cl
  4269f4:	fnstenv [edx+0x1f8bee7a]
  4269fa:	pop    ebp
  4269fb:	xchg   esi,eax
  4269fc:	sbb    edx,ebx
  4269fe:	mov    esi,DWORD PTR [eax-0x58]
  426a01:	test   al,0x6a
  426a03:	add    eax,eax
  426a05:	adc    BYTE PTR [edi],al
  426a07:	jmp    0x426a30
  426a09:	(bad)  
  426a0b:	and    al,BYTE PTR [edi-0x68]
  426a0e:	jmp    0x8362:0x81edee71
  426a15:	xchg   edx,eax
  426a16:	mov    ebp,0x1657317
  426a1b:	dec    eax
  426a1c:	punpckhdq mm1,QWORD PTR [eax+0x1c]
  426a20:	cs pop esi
  426a22:	les    edi,FWORD PTR [edx+0x32]
  426a25:	xchg   ecx,eax
  426a26:	cdq    
  426a27:	add    al,0xe5
  426a29:	mov    dl,0x1b
  426a2b:	jmp    0x426a99
  426a2d:	daa    
  426a2e:	sti    
  426a2f:	gs nop
  426a31:	dec    edx
  426a32:	jne    0x4269c2
  426a34:	lods   eax,DWORD PTR ds:[esi]
  426a35:	dec    esi
  426a36:	dec    esp
  426a38:	inc    edi
  426a39:	retf   0x6442
  426a3c:	xchg   ecx,eax
  426a3d:	jnp    0x426a68
  426a3f:	cmc    
  426a40:	jns    0x426a75
  426a42:	sbb    al,BYTE PTR [edx+0x15369a7d]
  426a48:	test   eax,0x86208d29
  426a4d:	or     eax,0x53e74c32
  426a52:	sub    esi,DWORD PTR [ecx+edi*4+0x12f56881]
  426a59:	cmp    al,0xfb
  426a5b:	imul   esi,DWORD PTR [ebx],0x7c8a4e5f
  426a61:	stos   BYTE PTR es:[edi],al
  426a62:	mov    DWORD PTR [eax+0x13],eax
  426a65:	(bad)  
  426a66:	jae    0x426a82
  426a68:	clc    
  426a69:	pop    eax
  426a6a:	(bad)  
  426a6b:	sbb    bh,dl
  426a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a6e:	lock and BYTE PTR [ebp+ebx*8+0x4accfefd],al
  426a76:	(bad)  
  426a77:	xchg   ebx,eax
  426a78:	add    al,BYTE PTR [ecx+0x3952182b]
  426a7e:	and    al,0xf9
  426a80:	aas    
  426a81:	popf   
  426a82:	jg     0x426a22
  426a84:	push   edx
  426a85:	adc    dh,BYTE PTR [esi-0x414a2e4f]
  426a8b:	adc    eax,0x543ea620
  426a90:	xchg   esp,eax
  426a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a92:	sub    al,BYTE PTR [ebp-0x7f2b15f]
  426a98:	jle    0x426aaf
  426a9a:	rcr    BYTE PTR [ebp+0x41],1
  426a9d:	aas    
  426a9e:	mov    edi,0xe3123c57
  426aa3:	out    0x40,al
  426aa5:	(bad)  
  426aa6:	sti    
  426aa7:	xchg   edi,eax
  426aa8:	and    eax,0xf39969da
  426aad:	jmp    edi
  426aaf:	jle    0x426adf
  426ab1:	test   eax,0x4f674d49
  426ab6:	and    dl,BYTE PTR [ebx-0xc3503b7]
  426abc:	add    edx,DWORD PTR [ebx+ebx*4+0x7427a608]
  426ac3:	repz pop eax
  426ac5:	test   BYTE PTR [esi+0x4af35687],0x80
  426acc:	sahf   
  426acd:	call   0xa1d:0xaa8b4a6a
  426ad4:	jne    0x426a7d
  426ad6:	add    BYTE PTR [ecx],dh
  426ad8:	sub    al,0x63
  426ada:	sub    ah,BYTE PTR fs:[ebx+0x13]
  426ade:	or     ebx,0xffffffcb
  426ae1:	stos   DWORD PTR es:[edi],eax
  426ae2:	pop    ebx
  426ae3:	neg    DWORD PTR [esi-0x17271d99]
  426ae9:	out    0xfb,eax
  426aeb:	test   eax,0xfae488f9
  426af0:	stos   DWORD PTR es:[edi],eax
  426af1:	and    BYTE PTR [edi],cl
  426af3:	mov    eax,0xd861c1d2
  426af8:	inc    ecx
  426af9:	retf   
  426afa:	imul   edx,DWORD PTR [edi-0x32699322],0x42
  426b01:	jmp    0x6f13:0xf76b15c5
  426b08:	and    DWORD PTR [esi+edi*4+0x15],eax
  426b0c:	and    ah,BYTE PTR [ebp+ebp*1+0x2794301]
  426b13:	add    al,BYTE PTR [eax+ebx*8+0x10]
  426b17:	out    dx,eax
  426b18:	sti    
  426b19:	cdq    
  426b1a:	push   esp
  426b1b:	neg    DWORD PTR [eax-0x7e]
  426b1e:	out    dx,eax
  426b1f:	test   DWORD PTR [esi],ebx
  426b21:	mov    WORD PTR [ebx],ds
  426b23:	push   edx
  426b24:	dec    eax
  426b25:	xchg   edx,eax
  426b26:	test   al,0x93
  426b28:	lods   al,BYTE PTR ds:[esi]
  426b29:	aaa    
  426b2a:	ins    BYTE PTR es:[edi],dx
  426b2b:	jbe    0x426b10
  426b2d:	les    ecx,FWORD PTR [ecx]
  426b2f:	fisub  DWORD PTR [bp+di-0x3d]
  426b33:	mov    ah,0xd5
  426b35:	lea    ebx,[esi-0x66382a8c]
  426b3b:	test   DWORD PTR [edi+0x54],esi
  426b3e:	inc    eax
  426b3f:	sub    bl,0x5f
  426b42:	mov    al,0xf5
  426b44:	stos   DWORD PTR es:[edi],eax
  426b45:	jmp    0x2772a6fd
  426b4a:	stc    
  426b4b:	xchg   edi,ebx
  426b4d:	and    bl,BYTE PTR ds:[esi-0x391bf454]
  426b54:	push   0xffffffcb
  426b56:	or     al,0x36
  426b58:	and    bl,BYTE PTR [edx]
  426b5a:	fwait
  426b5b:	not    DWORD PTR [edi+ecx*1]
  426b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b5f:	leave  
  426b60:	add    al,0x89
  426b62:	or     edx,DWORD PTR [eax+edx*4]
  426b65:	push   ss
  426b66:	adc    eax,0xb57040dd
  426b6b:	mov    eax,0xb3d5682c
  426b70:	lods   eax,DWORD PTR ds:[esi]
  426b71:	stos   BYTE PTR es:[edi],al
  426b72:	or     DWORD PTR [ebp+0x72],ebx
  426b75:	inc    edi
  426b76:	cmp    dl,ah
  426b78:	push   es
  426b79:	mov    edx,DWORD PTR [esi+0x569806bd]
  426b7f:	addr16 je 0x426b04
  426b82:	xchg   ecx,eax
  426b83:	neg    BYTE PTR [ebp-0x48cef140]
  426b89:	jo     0x426b41
  426b8b:	and    dh,BYTE PTR [eax+eiz*2-0x55]
  426b8f:	jl     0x426b8b
  426b91:	in     eax,dx
  426b92:	hlt    
  426b93:	or     edx,DWORD PTR [edi]
  426b95:	jo     0x426c09
  426b97:	jg     0x426b99
  426b99:	in     al,dx
  426b9a:	xchg   edx,eax
  426b9b:	mov    esi,0xb80521e9
  426ba0:	or     BYTE PTR [ebx],cl
  426ba2:	adc    eax,0x64ca1719
  426ba7:	add    al,0x1c
  426ba9:	mov    al,ds:0xff453190
  426bae:	ins    BYTE PTR es:[edi],dx
  426baf:	xchg   edx,eax
  426bb0:	pop    eax
  426bb1:	pop    ds
  426bb2:	les    ebx,FWORD PTR [ecx]
  426bb4:	out    0x68,al
  426bb6:	shl    DWORD PTR [ebp-0x6d],0x92
  426bba:	out    0x86,al
  426bbc:	dec    edi
  426bbd:	lods   eax,DWORD PTR ds:[esi]
  426bbe:	sbb    BYTE PTR [ebx],dl
  426bc0:	pushf  
  426bc1:	jo     0x426bf7
  426bc3:	pushf  
  426bc4:	test   DWORD PTR [ecx+0x78],0xb54aa840
  426bcb:	push   esp
  426bcc:	paddb  mm5,QWORD PTR [eax+0x4d510820]
  426bd3:	mov    WORD PTR [esi+0x29],fs
  426bd6:	nop
  426bd7:	lahf   
  426bd8:	adc    al,0xcd
  426bda:	in     al,dx
  426bdb:	xchg   ebx,eax
  426bdc:	push   ss
  426bdd:	jbe    0x426bf0
  426bdf:	mov    cl,0x25
  426be1:	pop    edi
  426be2:	pop    eax
  426be3:	sbb    BYTE PTR [ecx+0x77],0x85
  426be7:	sti    
  426be8:	mov    bl,0xb7
  426bea:	sub    DWORD PTR [eax-0x38a7d25b],edi
	...
  426bf8:	add    BYTE PTR [eax],al
  426bfa:	inc    eax
  426bfb:	stos   BYTE PTR es:[edi],al
  426bfc:	pop    edx
  426bfd:	sbb    bh,dl
  426bff:	cli    
  426c00:	inc    eax
  426c01:	cli    
  426c02:	mov    ds:0x77fe433f,al
  426c07:	mov    edx,DWORD PTR [edi-0x7]
  426c0a:	test   al,0xe2
  426c0c:	add    DWORD PTR [eax],eax
  426c0e:	inc    BYTE PTR [ecx]
  426c10:	add    BYTE PTR [eax],al
  426c12:	pop    es
  426c13:	inc    edi
  426c14:	add    eax,0x98038233
  426c19:	std    
  426c1a:	mov    edi,0x51316e19
  426c1f:	call   0xb6033b28
  426c24:	clc    
  426c25:	sub    eax,0x80915e3f
  426c2a:	xchg   edi,eax
  426c2b:	pushf  
  426c2c:	(bad)  
  426c2d:	jge    0x426c92
  426c2f:	push   ebp
  426c30:	sbb    esi,DWORD PTR es:[ebx-0x62]
  426c34:	pusha  
  426c35:	fscale 
  426c37:	fistp  WORD PTR [ebp+0x32b13166]
  426c3d:	cmp    ah,BYTE PTR [ebx-0x333b125f]
  426c43:	inc    ecx
  426c44:	sbb    DWORD PTR [esi+0x7889fa64],0x4b
  426c4b:	fimul  WORD PTR [edx]
  426c4d:	xchg   esi,eax
  426c4e:	fwait
  426c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c50:	(bad)  
  426c51:	mov    ebx,0x61adcd70
  426c56:	lds    edx,FWORD PTR [edi-0x6e0c5321]
  426c5c:	fadd   DWORD PTR [ebx+eax*4]
  426c5f:	(bad)  
  426c60:	cmp    ecx,ebp
  426c62:	int3   
  426c63:	add    al,0x6c
  426c65:	js     0x426c9e
  426c67:	and    dh,ch
  426c69:	mov    dh,0xc7
  426c6b:	sar    BYTE PTR [edx-0x13d864e3],cl
  426c71:	jns    0x426c82
  426c73:	aad    0x4f
  426c75:	gs adc esi,ecx
  426c78:	cwde   
  426c79:	jnp    0x426c0b
  426c7b:	fs push es
  426c7d:	scas   eax,DWORD PTR es:[edi]
  426c7e:	test   eax,0x3a132018
  426c83:	js     0x426cf9
  426c85:	fiadd  WORD PTR [esi+0x72]
  426c88:	xchg   ecx,eax
  426c89:	xlat   BYTE PTR ds:[ebx]
  426c8a:	das    
  426c8b:	out    0x27,eax
  426c8d:	xor    cl,BYTE PTR [ebx-0x7f9a348b]
  426c93:	mov    ecx,0x353e8064
  426c98:	clc    
  426c99:	inc    ecx
  426c9a:	pop    es
  426c9b:	(bad)  
  426c9c:	(bad)  
  426c9e:	daa    
  426c9f:	mov    bh,0xbc
  426ca1:	daa    
  426ca2:	and    eax,DWORD PTR [esi]
  426ca4:	mov    ah,0xf4
  426ca6:	pop    ebp
  426ca7:	fiadd  DWORD PTR [ebx+0x3e]
  426caa:	dec    esp
  426cab:	push   esi
  426cac:	ret    
  426cad:	xchg   ecx,eax
  426cae:	push   edx
  426caf:	enter  0xedae,0xaa
  426cb3:	sbb    eax,0x27da0e31
  426cb8:	xchg   ebp,eax
  426cb9:	rol    BYTE PTR [esi+0x19],0x51
  426cbd:	aam    0xa5
  426cbf:	idiv   DWORD PTR [ebp+0x10e1186d]
  426cc5:	xlat   BYTE PTR ds:[ebx]
  426cc6:	mov    bh,0xd2
  426cc8:	and    eax,0xab575120
  426ccd:	mov    al,0xc9
  426ccf:	push   ds
  426cd0:	mov    WORD PTR [ebp+0x7fe5e019],ss
  426cd6:	leave  
  426cd7:	xor    ah,ch
  426cd9:	loop   0x426c85
  426cdb:	out    dx,eax
  426cdc:	cmp    al,0xd0
  426cde:	and    al,0x6f
  426ce0:	das    
  426ce1:	jns    0x426cbe
  426ce3:	dec    esi
  426ce4:	lahf   
  426ce5:	out    0x62,al
  426ce7:	push   ebx
  426ce8:	scas   eax,DWORD PTR es:[edi]
  426ce9:	and    al,BYTE PTR [edi-0x2c]
  426cec:	into   
  426ced:	adc    bh,BYTE PTR [edx]
  426cef:	push   ds
  426cf0:	xchg   ebp,eax
  426cf1:	inc    eax
  426cf2:	stos   DWORD PTR es:[edi],eax
  426cf3:	cmp    ebp,DWORD PTR [edi-0x15d51766]
  426cf9:	sub    eax,0xe6c4dcf0
  426cfe:	mov    edi,0xbb8f6530
  426d03:	adc    al,0x2f
  426d05:	outs   dx,DWORD PTR ds:[esi]
  426d06:	call   0xa9fa:0xc2db9b08
  426d0d:	fisub  WORD PTR [edi+eiz*4-0x79313f9d]
  426d14:	icebp  
  426d15:	(bad)  
  426d16:	mov    dh,0x53
  426d18:	jp     0x426cef
  426d1a:	imul   esi,ebp,0xf96edbda
  426d20:	push   edx
  426d21:	mov    al,ds:0x97c6e7bd
  426d26:	sub    DWORD PTR [edx-0x4e],ebp
  426d29:	lods   al,BYTE PTR ds:[esi]
  426d2a:	out    0x80,eax
  426d2c:	outs   dx,BYTE PTR ds:[esi]
  426d2d:	gs mov BYTE PTR ss:[ecx+ecx*4+0x75],bl
  426d33:	inc    ebx
  426d34:	xchg   ebp,eax
  426d35:	and    edx,DWORD PTR [esi+0x5975b1f8]
  426d3b:	inc    ebx
  426d3c:	mov    bh,0xdb
  426d3e:	mov    WORD PTR [edx-0x24],fs
  426d41:	push   cs
  426d42:	add    al,0x2a
  426d44:	arpl   WORD PTR [eax+0x3176f36b],si
  426d4a:	mov    dh,0xec
  426d4c:	nop
  426d4d:	mov    eax,ds:0x18fd26b6
  426d52:	mov    eax,0x7340d670
  426d57:	gs jo  0x426cef
  426d5a:	sbb    eax,0x2d338bf9
  426d5f:	xchg   esp,eax
  426d60:	repz mov esi,0x9b9590bf
  426d66:	add    ecx,edi
  426d68:	xchg   ecx,eax
  426d69:	mov    ds:0x2ede189f,al
  426d6e:	cmp    BYTE PTR [edx+edx*1-0x5a],cl
  426d72:	ins    DWORD PTR es:[edi],dx
  426d73:	sbb    al,0x3d
  426d75:	call   0x4c5c4e3c
  426d7a:	rcr    BYTE PTR [esi],cl
  426d7c:	push   ss
  426d7d:	mov    bl,0xdf
  426d7f:	jns    0x426dbb
  426d81:	mov    cl,0xd6
  426d83:	and    bl,BYTE PTR ds:0x6a2c3ea3
  426d89:	jmp    0x441e208
  426d8e:	inc    edx
  426d8f:	daa    
  426d90:	or     al,0x55
  426d92:	retf   0x32c1
  426d95:	adc    al,0x8b
  426d97:	mov    ecx,0xcef0ca48
  426d9c:	enter  0x1624,0x60
  426da0:	fcom   QWORD PTR [ecx+0x320b7586]
  426da6:	inc    edx
  426da7:	jge    0x426e06
  426da9:	push   esi
  426daa:	sahf   
  426dab:	and    eax,0x31c23342
  426db0:	sub    eax,0x2676b73b
  426db5:	cmp    eax,0x3f7decae
  426dba:	push   edx
  426dbb:	jl     0x426de6
  426dbd:	or     esi,DWORD PTR ds:0xf3fcadf4
  426dc3:	adc    esi,eax
  426dc5:	push   0x42570c15
  426dca:	daa    
  426dcb:	xor    dh,cl
  426dcd:	mov    cs,WORD PTR [ecx-0x4044827f]
  426dd3:	jge    0x426d94
  426dd5:	shr    esi,cl
  426dd7:	pusha  
  426dd8:	pop    esp
  426dd9:	stos   DWORD PTR es:[edi],eax
  426dda:	popa   
  426ddb:	enter  0x6dd1,0x76
  426ddf:	jmp    FWORD PTR [esp+ecx*8+0x4d311d36]
  426de6:	mov    ch,0x1a
  426de8:	mov    ebp,0x2b2d8c77
  426ded:	add    ecx,DWORD PTR [ecx-0x227d08d8]
  426df3:	sub    DWORD PTR [edi],eax
  426df5:	pop    esp
  426df6:	push   esp
  426df7:	dec    esp
  426df8:	xchg   edx,eax
  426df9:	dec    esi
  426dfa:	or     ebp,DWORD PTR [ebx-0x4b28db28]
  426e00:	out    dx,eax
  426e01:	jecxz  0x426e47
  426e03:	pop    edi
  426e04:	adc    eax,0xf40f9477
  426e09:	push   es
  426e0a:	test   al,0x84
  426e0c:	cmp    al,0x7b
  426e0e:	(bad)  
	...
  426e18:	add    BYTE PTR [eax],al
  426e1a:	mov    dh,0xe4
  426e1c:	xlat   BYTE PTR ds:[ebx]
  426e1d:	push   esp
  426e1e:	xlat   BYTE PTR ds:[ebx]
  426e1f:	ja     0x426dd8
  426e21:	out    0x39,al
  426e23:	(bad)  
  426e24:	push   ebx
  426e25:	lahf   
  426e26:	push   cs
  426e27:	mul    bh
  426e29:	call   0x4452d4
  426e2e:	inc    BYTE PTR [ecx]
  426e30:	add    BYTE PTR [eax],al
  426e32:	push   esi
  426e33:	or     eax,0x91a37038
  426e38:	mov    edi,0x9e9fae8
  426e3d:	loope  0x426dee
  426e3f:	mov    esp,0x530b6dd
  426e44:	or     eax,0xd46107a8
  426e49:	shl    DWORD PTR [edx-0x131bb4cf],0x82
  426e50:	push   ds
  426e51:	outs   dx,BYTE PTR ds:[esi]
  426e52:	ficom  WORD PTR [ecx*1+0x245d8d68]
  426e59:	jne    0x426e05
  426e5b:	popf   
  426e5c:	das    
  426e5d:	or     BYTE PTR [esi+0x4b427720],0x48
  426e64:	sti    
  426e65:	cmc    
  426e66:	iret   
  426e67:	aad    0xad
  426e69:	mov    ch,0x89
  426e6b:	jno    0x426e03
  426e6d:	mov    DWORD PTR [edi-0x35],ecx
  426e70:	push   0xcacb21e9
  426e75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e76:	and    esi,DWORD PTR [eax+eiz*4]
  426e79:	test   eax,0x2e7b97af
  426e7e:	jmp    0x426eb4
  426e80:	scas   al,BYTE PTR es:[edi]
  426e81:	jae    0x426ec7
  426e83:	in     eax,0x58
  426e85:	out    dx,eax
  426e86:	sahf   
  426e87:	mov    dh,0x90
  426e89:	push   esp
  426e8a:	adc    DWORD PTR ds:0x2d4594f1,esi
  426e90:	in     al,dx
  426e91:	and    al,0xa4
  426e93:	retf   
  426e94:	popa   
  426e95:	push   es
  426e96:	cdq    
  426e97:	or     eax,0x3a441bc1
  426e9c:	int3   
  426e9d:	mov    bl,0xdd
  426e9f:	popa   
  426ea0:	lds    edx,FWORD PTR [edi-0x67]
  426ea3:	or     eax,0xb239f7a4
  426ea8:	ret    
  426ea9:	rcl    DWORD PTR [ecx+edx*4+0x175a6ab3],cl
  426eb0:	xor    al,BYTE PTR [eax-0x43b14a3d]
  426eb6:	arpl   WORD PTR [edi],bx
  426eb8:	push   0x61baf999
  426ebd:	mov    bh,0xcd
  426ebf:	and    cl,dl
  426ec1:	xlat   BYTE PTR ds:[ebx]
  426ec2:	loopne 0x426e4b
  426ec4:	and    esp,ebp
  426ec6:	out    0x2c,eax
  426ec8:	lods   al,BYTE PTR ds:[esi]
  426ec9:	repz and eax,ebp
  426ecc:	jne    0x426eca
  426ece:	iret   
  426ecf:	push   ss
  426ed0:	or     bl,BYTE PTR [ebp-0x63]
  426ed3:	xor    BYTE PTR [esi],cl
  426ed5:	jp     0x426f31
  426ed7:	scas   al,BYTE PTR es:[edi]
  426ed8:	in     eax,dx
  426ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eda:	aam    0xb1
  426edc:	and    al,0xd1
  426ede:	in     al,dx
  426edf:	xor    eax,0xe6b0073e
  426ee4:	cmp    esp,esi
  426ee6:	cmp    al,BYTE PTR [edi+ecx*2]
  426ee9:	cs fwait
  426eeb:	ins    BYTE PTR es:[edi],dx
  426eec:	dec    esp
  426eed:	push   es
  426eee:	xor    al,0x5
  426ef0:	pushf  
  426ef1:	jmp    DWORD PTR [esi]
  426ef3:	xor    BYTE PTR [eax+0x7f],0x5e
  426ef7:	mov    esp,0xad5d6a83
  426efc:	jne    0x426ee9
  426efe:	arpl   WORD PTR [edx],si
  426f00:	aaa    
  426f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f02:	shl    BYTE PTR [esi-0x5e],0xdd
  426f06:	adc    bl,bh
  426f08:	fld    DWORD PTR [ebx+0x31]
  426f0b:	adc    BYTE PTR [ebx],0x82
  426f0e:	and    ch,BYTE PTR [esi-0x40]
  426f11:	jae    0x426f2b
  426f13:	pop    eax
  426f14:	outs   dx,BYTE PTR ds:[esi]
  426f15:	out    0x7f,al
  426f17:	mov    esi,0x7f1e0983
  426f1c:	lods   eax,DWORD PTR ds:[esi]
  426f1d:	sub    bl,BYTE PTR [edi+0x2c25c1a0]
  426f23:	imul   ebp,DWORD PTR [esi+0x6],0x0
  426f27:	stos   BYTE PTR es:[edi],al
  426f28:	push   esi
  426f29:	nop    DWORD PTR [ecx]
  426f2c:	push   0x62541919
  426f31:	cmp    eax,0xb91c2442
  426f36:	(bad)  
  426f37:	sbb    al,BYTE PTR [eax+0x0]
  426f3a:	icebp  
  426f3b:	inc    edx
  426f3c:	retf   0xd1f4
  426f3f:	lahf   
  426f40:	mov    ch,0x95
  426f42:	je     0x426f4f
  426f44:	or     eax,0x313c8743
  426f49:	mov    esp,0x3500d5cc
  426f4e:	inc    edi
  426f4f:	js     0x426eda
  426f51:	dec    esp
  426f52:	fld    st(4)
  426f54:	(bad)  
  426f55:	pop    es
  426f56:	inc    ecx
  426f57:	mov    ds:0xc5c67653,al
  426f5c:	push   esp
  426f5d:	loop   0x426fd3
  426f5f:	xchg   ebp,eax
  426f60:	add    eax,0xa54a9e33
  426f65:	push   ss
  426f66:	add    esp,DWORD PTR [eax+0x36]
  426f69:	jecxz  0x426f55
  426f6b:	pusha  
  426f6c:	push   ecx
  426f6d:	or     eax,0x90f2e26f
  426f72:	rol    BYTE PTR [eax],cl
  426f74:	shl    BYTE PTR [edi],0x1d
  426f77:	xor    ecx,edi
  426f79:	imul   esp,DWORD PTR [ebx],0xd0fa4888
  426f7f:	adc    al,0x5f
  426f81:	lds    edi,FWORD PTR [ecx]
  426f83:	jge    0x426f41
  426f85:	shl    DWORD PTR [ebx-0x45e73236],1
  426f8b:	and    BYTE PTR [eax-0x73],cl
  426f8e:	mov    eax,0xd4d91f80
  426f93:	jne    0x426fe2
  426f95:	cmp    BYTE PTR [ebx],0x8a
  426f98:	mov    ebp,0xbf5aa78f
  426f9d:	pop    ss
  426f9e:	sub    al,0xdd
  426fa0:	push   edi
  426fa1:	int    0xab
  426fa3:	sub    eax,0xab85adfc
  426fa8:	loope  0x426fb2
  426faa:	jmp    0x66e47af8
  426faf:	jo     0x426ffc
  426fb1:	jmp    0x42700d
  426fb3:	adc    al,0x9e
  426fb5:	xchg   esp,eax
  426fb6:	(bad)  [edx-0xb]
  426fb9:	xor    ecx,DWORD PTR [edx]
  426fbb:	enter  0x4aa0,0x9c
  426fbf:	ror    BYTE PTR [ecx+0x35],1
  426fc2:	adc    eax,0xe3775df0
  426fc7:	sbb    dh,BYTE PTR [ecx+0x8]
  426fca:	or     al,0x3e
  426fcc:	push   0xcc57b577
  426fd1:	cld    
  426fd2:	jae    0x426fc5
  426fd4:	stc    
  426fd5:	push   esp
  426fd6:	std    
  426fd7:	lock ins DWORD PTR es:[edi],dx
  426fd9:	and    BYTE PTR [esi],bh
  426fdb:	xchg   esi,eax
  426fdc:	pop    ss
  426fdd:	fmul   DWORD PTR [ebx+0x53]
  426fe0:	dec    edi
  426fe1:	bswap  esi
  426fe3:	gs loop 0x426fe0
  426fe6:	pop    ds
  426fe7:	xor    dh,BYTE PTR [eax]
  426fe9:	sub    BYTE PTR [edx],0xab
  426fec:	ret    
  426fed:	popa   
  426fee:	das    
  426fef:	dec    esi
  426ff0:	and    BYTE PTR [edi],0x66
  426ff3:	test   eax,0xd55f53eb
  426ff8:	add    eax,0xff6c0e37
  426ffd:	cdq    
  426ffe:	inc    ebp
  426fff:	cmp    al,BYTE PTR [ebp+0x75554f4c]
  427005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427006:	mov    eax,0xe76cc4c1
  42700b:	sub    al,0x4e
  42700d:	cmp    eax,0xd1580d44
  427012:	out    dx,al
  427013:	sub    DWORD PTR [edi+edx*1+0x4e],0x5
  427018:	in     al,dx
  427019:	inc    ecx
  42701a:	ss lahf 
  42701c:	nop
  42701d:	outs   dx,BYTE PTR ds:[esi]
  42701e:	push   esp
  42701f:	cwde   
  427020:	and    eax,0x2bd450cb
  427025:	jne    0x427085
  427027:	jbe    0x42708f
  427029:	cmovo  ebp,eax
  42702c:	scas   eax,DWORD PTR es:[edi]
  42702d:	(bad)  
  42702e:	mov    ds:0x1d,al
  427033:	add    BYTE PTR [eax],al
  427035:	add    BYTE PTR [eax],al
  427037:	add    BYTE PTR [eax],al
  427039:	add    dl,bh
  42703b:	rcl    DWORD PTR ds:0xfac73d07,cl
  427041:	jmp    DWORD PTR [ecx-0x4a5bc2eb]
  427047:	inc    esi
  427048:	clc    
  427049:	xchg   edx,eax
  42704a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42704b:	out    0x1,al
  42704d:	add    dh,bh
  42704f:	add    DWORD PTR [eax],eax
  427051:	add    BYTE PTR [esi+0x11],bl
  427054:	(bad)  
  427055:	mov    ah,0x51
  427057:	pop    eax
  427058:	out    0x5f,eax
  42705a:	add    ebp,eax
  42705c:	jmp    0x427078
  42705e:	adc    BYTE PTR [edx-0xf],dl
  427061:	cmc    
  427062:	std    
  427063:	enter  0x9848,0x6b
  427067:	mov    ds,eax
  427069:	stc    
  42706a:	cmp    al,bh
  42706c:	sbb    edx,edi
  42706e:	jo     0x427032
  427070:	loop   0x4270ea
  427072:	cdq    
  427073:	stos   DWORD PTR es:[edi],eax
  427074:	ins    DWORD PTR es:[edi],dx
  427075:	push   es
  427076:	fnstenv [eax-0x37]
  427079:	dec    esp
  42707a:	dec    edx
  42707b:	adc    edx,edi
  42707d:	rcl    BYTE PTR [eax+0x59],cl
  427080:	dec    edx
  427081:	xchg   esi,eax
  427082:	sub    dh,0xc9
  427085:	loopne 0x427058
  427087:	ins    DWORD PTR es:[edi],dx
  427088:	mov    dh,0xb2
  42708a:	mov    ebx,0x55484ca0
  42708f:	cmc    
  427090:	pop    ecx
  427091:	sub    BYTE PTR [ecx-0x33],dh
  427094:	shl    DWORD PTR [eax],0x5d
  427097:	bound  esi,QWORD PTR [ecx-0x2d05096b]
  42709d:	mov    ebx,0x8d3fda7d
  4270a2:	jnp    0x4270e6
  4270a4:	push   0xffffffba
  4270a6:	fs mov edx,es
  4270a9:	dec    ecx
  4270aa:	ins    BYTE PTR es:[edi],dx
  4270ab:	and    eax,0x7d45ced6
  4270b0:	(bad)
  4270b4:	loop   0x42708a
  4270b6:	lods   al,BYTE PTR ds:[esi]
  4270b7:	jb     0x4270a5
  4270b9:	(bad)  [edx+edx*1]
  4270bc:	push   ds
  4270bd:	aad    0x3c
  4270bf:	in     eax,dx
  4270c0:	push   eax
  4270c1:	cmp    BYTE PTR [ebx+edi*1-0x3b],ah
  4270c5:	xchg   edi,eax
  4270c6:	jmp    0x1351:0x12c1afa4
  4270cd:	and    al,0x8e
  4270cf:	mov    bh,0xaa
  4270d1:	retf   0x5479
  4270d4:	mov    ecx,0x6843ef92
  4270d9:	jmp    0x427083
  4270db:	sub    cl,BYTE PTR ds:0x6ebeecc8
  4270e1:	push   edx
  4270e2:	inc    esi
  4270e3:	push   esp
  4270e4:	inc    edx
  4270e5:	adc    eax,eax
  4270e7:	and    DWORD PTR [eiz*4-0x2f0d6c30],edi
  4270ee:	test   eax,0x72fed82f
  4270f3:	sub    BYTE PTR [ecx],al
  4270f5:	sub    bl,BYTE PTR [edx+0x36]
  4270f8:	push   ebx
  4270f9:	out    dx,al
  4270fa:	sub    bl,dl
  4270fc:	mov    WORD PTR [edi+eax*4+0x7787f8a6],ss
  427103:	sub    al,0x5
  427105:	fsubr  DWORD PTR [edi]
  427107:	xchg   edi,eax
  427108:	test   al,0x86
  42710a:	push   edx
  42710b:	popa   
  42710c:	outs   dx,BYTE PTR ss:[esi]
  42710e:	or     al,bl
  427110:	adc    ch,BYTE PTR [edi]
  427112:	imul   esi,DWORD PTR ds:[ecx-0x21],0x50f6b2f1
  42711a:	loopne 0x427101
  42711c:	mov    esi,0xf308d9ad
  427121:	dec    ebp
  427122:	es out dx,al
  427124:	mov    ebp,0x469aa40e
  427129:	mov    ?,WORD PTR [ecx+0x11]
  42712c:	int    0x76
  42712e:	fldcw  WORD PTR [ebx]
  427130:	mov    al,0x11
  427132:	xchg   esp,eax
  427133:	push   esi
  427134:	mov    dl,0x22
  427136:	sbb    BYTE PTR [eax-0x50],ah
  427139:	sbb    DWORD PTR [ecx],esi
  42713b:	lods   eax,DWORD PTR ds:[esi]
  42713c:	(bad)  
  42713d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42713e:	jg     0x427135
  427140:	pop    ebp
  427141:	(bad)  
  427142:	mov    edx,0x6f0e8cd3
  427147:	repnz mov edx,0x6a25aa09
  42714d:	pop    edi
  42714e:	js     0x4271ad
  427150:	jp     0x427149
  427152:	fdivr  DWORD PTR [edx-0x22]
  427155:	mov    ds:0x85be2b40,al
  42715a:	jp     0x427118
  42715c:	test   DWORD PTR [ecx+edi*4+0x2a36b57],0xdf3ac70a
  427167:	sub    al,0x9b
  427169:	test   al,0x64
  42716b:	mov    esi,0xa6f310a0
  427170:	mov    al,0xeb
  427172:	push   0xffffffa1
  427174:	mov    eax,ds:0x12af4af
  427179:	fdiv   DWORD PTR [ebx]
  42717b:	ins    DWORD PTR es:[edi],dx
  42717c:	inc    ecx
  42717d:	in     eax,dx
  42717e:	sbb    eax,0x4334ddd0
  427183:	push   ds
  427184:	push   esi
  427185:	cmp    al,0xa2
  427187:	retf   0xf593
  42718a:	sub    eax,0x23c71cd7
  42718f:	fadd   DWORD PTR [eax+0x7e]
  427192:	int3   
  427193:	and    eax,0xf69983b5
  427198:	mov    ch,0x7b
  42719a:	fld    DWORD PTR [ecx+0x4caa96c8]
  4271a0:	add    al,0x3c
  4271a2:	cmp    DWORD PTR [edi+0x4],eax
  4271a5:	cmp    al,0x57
  4271a7:	xchg   ecx,ebp
  4271a9:	pop    esi
  4271aa:	cmp    eax,0x4b09db1e
  4271af:	adc    bh,BYTE PTR [edi+0x728c19a8]
  4271b5:	in     eax,0x46
  4271b7:	xlat   BYTE PTR ds:[ebx]
  4271b8:	jns    0x427201
  4271ba:	push   ebp
  4271bb:	xor    ch,BYTE PTR [ecx-0x515dcfa2]
  4271c1:	fs cdq 
  4271c3:	test   al,0x58
  4271c5:	lods   al,BYTE PTR ds:[esi]
  4271c6:	add    al,0xe7
  4271c8:	jb     0x427207
  4271ca:	aas    
  4271cb:	ficomp WORD PTR [eax]
  4271cd:	pushf  
  4271ce:	addr16 enter 0x10d9,0xa5
  4271d3:	loop   0x42715f
  4271d5:	ret    
  4271d6:	and    edi,DWORD PTR [edi-0x27a47b7b]
  4271dc:	into   
  4271dd:	mov    eax,ds:0x2d1d8c65
  4271e2:	outs   dx,DWORD PTR ds:[esi]
  4271e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271e4:	jle    0x42724a
  4271e6:	loop   0x42717b
  4271e8:	loope  0x427244
  4271ea:	cmp    ecx,DWORD PTR [ecx+edx*8+0x4e]
  4271ee:	in     al,0xb0
  4271f0:	xor    BYTE PTR [ecx+ebp*8],ah
  4271f3:	mov    ebx,0x52f272bb
  4271f8:	add    cl,BYTE PTR [ecx-0x4]
  4271fb:	dec    esp
  4271fc:	pop    ecx
  4271fd:	out    dx,eax
  4271fe:	jo     0x427239
  427200:	xchg   DWORD PTR [edx],edi
  427202:	jo     0x42727c
  427204:	dec    edi
  427205:	push   0x19
  427207:	mov    ecx,?
  427209:	pop    ecx
  42720a:	mov    ebx,ecx
  42720c:	aaa    
  42720d:	(bad)  
  42720f:	push   eax
  427210:	ret    
  427211:	jo     0x427256
  427213:	mov    ebx,0x2f351682
  427218:	daa    
  427219:	hlt    
  42721a:	inc    edx
  42721b:	cld    
  42721c:	clc    
  42721d:	scas   eax,DWORD PTR es:[edi]
  42721e:	call   0x7ccc:0x8b457197
  427225:	adc    dh,cl
  427227:	add    BYTE PTR [esi],ah
  427229:	nop
  42722a:	sbb    bl,BYTE PTR [edx-0x4c9b49ba]
  427230:	sahf   
  427231:	mov    cl,0x19
  427233:	and    DWORD PTR [esi-0x5ef51028],ebp
  427239:	mov    esp,0x322d5e11
  42723e:	and    esp,DWORD PTR [ecx-0x16]
  427241:	loop   0x427228
  427243:	xor    al,0x91
  427245:	arpl   WORD PTR [edi],si
  427247:	in     eax,0xb6
  427249:	inc    ebx
  42724a:	call   0x70:0x537dccf4
	...
  427259:	add    bh,cl
  42725b:	neg    BYTE PTR [ebp-0x308442b0]
  427261:	(bad)  
  427262:	mov    ecx,0x7eb02077
  427267:	outs   dx,BYTE PTR ds:[esi]
  427268:	stc    
  427269:	dec    edi
  42726a:	mov    ds:0xfe0001e8,al
  42726f:	add    DWORD PTR [eax],eax
  427271:	add    bl,dl
  427273:	popf   
  427274:	or     esp,DWORD PTR [esi+eax*1+0x47]
  427278:	mov    WORD PTR [ebx],?
  42727a:	ror    BYTE PTR [esi-0x3cdab12c],1
  427280:	cmp    eax,0xc33ef743
  427285:	call   0xb36e:0x42163a2
  42728c:	in     al,0x52
  42728e:	dec    esi
  42728f:	popf   
  427290:	leave  
  427291:	xlat   BYTE PTR ds:[ebx]
  427292:	mov    dh,0xdb
  427294:	aas    
  427295:	jge    0x4272be
  427297:	sub    eax,0xc42cf0be
  42729c:	adc    al,BYTE PTR [ebx+0x1e]
  42729f:	sbb    DWORD PTR [esi],ebp
  4272a1:	pop    ecx
  4272a2:	mov    ah,0x87
  4272a4:	mov    DWORD PTR [edi-0x7c333a4e],ebp
  4272aa:	ret    0x87a
  4272ad:	sub    al,0xb7
  4272b0:	mov    dh,0x19
  4272b2:	in     al,0x7b
  4272b4:	fwait
  4272b5:	scas   al,BYTE PTR es:[edi]
  4272b6:	stos   DWORD PTR es:[edi],eax
  4272b7:	lods   eax,DWORD PTR ds:[esi]
  4272b8:	pusha  
  4272b9:	scas   eax,DWORD PTR es:[edi]
  4272ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272bb:	jge    0x427264
  4272bd:	dec    esp
  4272be:	mov    ah,0x99
  4272c0:	and    DWORD PTR [ecx+0x562421cc],ebx
  4272c6:	rcl    edx,0x63
  4272c9:	stos   BYTE PTR es:[edi],al
  4272ca:	enter  0x3744,0x21
  4272ce:	test   al,0x9b
  4272d0:	sub    ah,ch
  4272d2:	fwait
  4272d3:	jo     0x427331
  4272d5:	in     al,dx
  4272d6:	fldcw  WORD PTR [esi-0x62]
  4272d9:	and    eax,0xd3d82e69
  4272de:	fcom   QWORD PTR [ebx+0x37b058c5]
  4272e4:	fwait
  4272e5:	or     al,0x6f
  4272e7:	jg     0x4272c1
  4272e9:	sbb    al,BYTE PTR [eax+0x17]
  4272ec:	jb     0x427282
  4272ee:	enter  0x93b9,0xae
  4272f2:	call   0x7ec4:0x5565fae4
  4272f9:	cwde   
  4272fa:	aas    
  4272fb:	fist   WORD PTR [edi-0x1838fb54]
  427301:	jle    0x4272e7
  427303:	test   al,0xd4
  427305:	hlt    
  427306:	sahf   
  427307:	idiv   DWORD PTR [edx-0x7d977bb8]
  42730d:	cdq    
  42730e:	sbb    bh,BYTE PTR [ecx]
  427310:	jb     0x42737b
  427312:	(bad)  
  427313:	rcl    BYTE PTR [eax+0x69],1
  427316:	aas    
  427317:	xor    DWORD PTR [ecx-0x54e3aea3],0x454b6db2
  427321:	hlt    
  427322:	mov    al,ds:0xc54772ed
  427327:	shl    cl,1
  427329:	std    
  42732a:	test   DWORD PTR [ecx],esi
  42732c:	mov    eax,0xb09c9a52
  427331:	call   0x5303e553
  427336:	mov    edi,0x5aa9d808
  42733b:	pop    edi
  42733c:	sbb    dl,bh
  42733e:	cmp    eax,DWORD PTR [ecx-0x25d23bd4]
  427344:	xchg   esi,eax
  427345:	sbb    cl,BYTE PTR [ebx]
  427347:	repnz fnsave [esp+eax*4+0x39]
  42734c:	scas   eax,DWORD PTR es:[edi]
  42734d:	xchg   esp,eax
  42734e:	leave  
  42734f:	test   eax,0xf9a43ec3
  427354:	inc    edx
  427355:	loope  0x427396
  427357:	lahf   
  427358:	sub    al,BYTE PTR [eax]
  42735a:	in     al,dx
  42735b:	sbb    bl,BYTE PTR [ecx+edi*8-0x27c152c2]
  427362:	sub    al,0x32
  427364:	ss in  al,0xc9
  427367:	and    BYTE PTR [edx],dh
  427369:	mov    ebp,0x7234b0f1
  42736e:	nop
  42736f:	inc    edx
  427370:	mov    esp,0xb7bd5a68
  427375:	daa    
  427376:	call   0x68cb:0x3487ba31
  42737d:	imul   ebx,esi,0x38
  427380:	or     eax,0xf37e9cbe
  427385:	jnp    0x42730e
  427387:	enter  0xc3c3,0x89
  42738b:	(bad)  
  42738d:	je     0x42740e
  42738f:	dec    ebp
  427390:	jb     0x427319
  427392:	mov    al,0xb8
  427394:	dec    BYTE PTR ss:[esi]
  427397:	je     0x4273b9
  427399:	jge    0x4273a8
  42739b:	mov    BYTE PTR [ecx],bl
  42739d:	xor    bl,BYTE PTR [edx]
  42739f:	idiv   DWORD PTR [esi-0xc]
  4273a2:	xchg   ecx,eax
  4273a3:	out    0x33,eax
  4273a5:	pop    ss
  4273a6:	mov    WORD PTR [ebx],ds
  4273a8:	ds and eax,0x1d9bc327
  4273ae:	int    0x1d
  4273b0:	fcmove st,st(6)
  4273b2:	call   0x8d89:0x24494afd
  4273b9:	pop    ds
  4273ba:	pop    ebp
  4273bb:	push   ds
  4273bc:	xchg   ebx,eax
  4273bd:	imul   ebx,DWORD PTR [ebp+0x12],0xffffffb5
  4273c1:	mov    ds:0xdffeb45d,al
  4273c6:	inc    esi
  4273c7:	push   es
  4273c8:	jl     0x42734c
  4273ca:	icebp  
  4273cb:	xor    ebx,DWORD PTR [eax-0x51]
  4273ce:	cmc    
  4273cf:	adc    esi,ebp
  4273d1:	xchg   ebp,eax
  4273d2:	mov    BYTE PTR [eax],ah
  4273d4:	push   eax
  4273d5:	outs   dx,BYTE PTR ds:[esi]
  4273d6:	pushf  
  4273d7:	mov    WORD PTR [ecx-0x253c8483],ds
  4273dd:	mov    ah,0x63
  4273df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273e0:	mov    es:0x865bcb3a,al
  4273e6:	gs push ebx
  4273e8:	add    DWORD PTR [esp+esi*2-0xb],ebp
  4273ec:	aad    0x3f
  4273ee:	inc    ebx
  4273ef:	imul   esi,DWORD PTR [ecx],0xbe276e31
  4273f5:	cwde   
  4273f6:	inc    edx
  4273f7:	ins    BYTE PTR es:[edi],dx
  4273f8:	out    dx,eax
  4273f9:	aad    0xa4
  4273fb:	test   DWORD PTR [eax],ebp
  4273fd:	pushf  
  4273fe:	or     DWORD PTR [edi+ebp*8-0x80],0xffffff86
  427403:	mov    edi,0xfff7d66d
  427408:	retf   
  427409:	xlat   BYTE PTR ds:[ebx]
  42740a:	dec    ah
  42740c:	lea    ebp,[edx]
  42740e:	jns    0x42743a
  427410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427411:	mov    al,0x6d
  427413:	shr    DWORD PTR [ebp+0x28],cl
  427416:	scas   al,BYTE PTR es:[edi]
  427417:	or     eax,0x3ccbfbca
  42741c:	(bad)  
  42741d:	fist   WORD PTR [eax+0x607d1c0f]
  427423:	mov    ebx,0xbc0afbf2
  427428:	aam    0xc1
  42742a:	push   esi
  42742b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42742c:	scas   eax,DWORD PTR es:[edi]
  42742d:	cwde   
  42742e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42742f:	clc    
  427430:	jge    0x4273d8
  427432:	cmp    al,dl
  427434:	popf   
  427435:	push   eax
  427436:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  427438:	or     ah,bl
  42743a:	int    0xef
  42743c:	xchg   edi,eax
  42743d:	lock mov ecx,0x23eb94f
  427443:	test   BYTE PTR [ecx+edi*1-0x41],0x25
  427448:	fisubr DWORD PTR [ecx+0x22]
  42744b:	dec    esi
  42744c:	sbb    DWORD PTR [eax+0x5b],edi
  42744f:	(bad)  
  427451:	stos   DWORD PTR es:[edi],eax
  427452:	fld    TBYTE PTR [eax+0x7c]
  427455:	jmp    0x48c4:0x406fcac3
  42745c:	loopne 0x42749b
  42745e:	adc    eax,0xa584713a
  427463:	inc    ecx
  427464:	icebp  
  427465:	in     eax,dx
  427466:	mov    esi,0x7f843e51
  42746b:	sbb    eax,0x993c2358
	...
  427478:	add    BYTE PTR [eax],al
  42747a:	push   0x6f1e2d23
  42747f:	push   ds
  427480:	jnp    0x4274f9
  427482:	outs   dx,DWORD PTR ds:[esi]
  427483:	jno    0x4274a3
  427485:	dec    esi
  427486:	jmp    0xa0a37606
  42748b:	jmp    0x0:0x1fe0001
  427492:	inc    ebx
  427493:	stos   DWORD PTR es:[edi],eax
  427494:	fld    QWORD PTR [eax+esi*1]
  427497:	pop    esi
  427498:	pop    eax
  427499:	(bad)  
  42749a:	js     0x4274ae
  42749c:	mov    bh,ch
  42749e:	xor    cl,dl
  4274a0:	jmp    0xcd687e87
  4274a5:	aaa    
  4274a6:	mov    eax,0xc47babd8
  4274ac:	mov    bh,0x84
  4274ae:	add    DWORD PTR [esi],esp
  4274b0:	icebp  
  4274b1:	lea    esi,[esi]
  4274b3:	out    0x1f,al
  4274b5:	jl     0x4274ae
  4274b7:	stos   BYTE PTR es:[edi],al
  4274b8:	sbb    al,BYTE PTR [edx-0x28453fef]
  4274be:	xor    BYTE PTR [ebx-0x7a],0xa0
  4274c2:	or     BYTE PTR [ebp-0x2],dl
  4274c5:	mov    eax,ds:0x91e86e84
  4274ca:	fst    QWORD PTR [ebx]
  4274cc:	pop    edx
  4274cd:	paddq  mm1,QWORD PTR [edx+0x50b69818]
  4274d4:	push   eax
  4274d5:	cmp    eax,0x938a3dd
  4274da:	iret   
  4274db:	and    BYTE PTR [ebp-0x1f1a8523],bh
  4274e1:	mov    esp,0x9c011dce
  4274e6:	xchg   ebp,eax
  4274e7:	sub    eax,0x3d9d37e6
  4274ec:	stos   DWORD PTR es:[edi],eax
  4274ed:	adc    eax,0x5d46a4cc
  4274f2:	jns    0x4274da
  4274f4:	cdq    
  4274f5:	loope  0x4274f1
  4274f7:	ret    
  4274f8:	push   ebp
  4274f9:	in     al,0x36
  4274fb:	clc    
  4274fc:	jnp    0x42757a
  4274fe:	or     esp,edx
  427500:	mov    ch,0xf6
  427502:	lods   eax,DWORD PTR ds:[esi]
  427503:	hlt    
  427504:	fadd   QWORD PTR [edi]
  427506:	push   ebx
  427507:	stos   BYTE PTR es:[edi],al
  427508:	ss push eax
  42750a:	das    
  42750b:	imul   esp,DWORD PTR [ecx+0xd],0x38
  42750f:	sbb    eax,DWORD PTR [esi+0x28b32255]
  427515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427516:	inc    ebp
  427517:	cwde   
  427518:	sub    DWORD PTR [esi+0x537778ea],edi
  42751e:	sbb    al,ah
  427520:	scas   al,BYTE PTR es:[edi]
  427521:	pop    esp
  427522:	lds    ebp,FWORD PTR [ebx+0x31b35c17]
  427528:	jp     0x42753c
  42752a:	mov    al,ds:0x3e75afd0
  42752f:	jbe    0x42757d
  427531:	inc    eax
  427532:	dec    edx
  427533:	retf   0xe20
  427536:	and    DWORD PTR [eax+0x8],edx
  427539:	test   eax,0xc2b4278b
  42753e:	lods   eax,DWORD PTR ds:[esi]
  42753f:	popf   
  427540:	test   DWORD PTR [edi],ebx
  427542:	int    0x15
  427544:	mov    bl,BYTE PTR [ebp+0xd404ff6]
  42754a:	jmp    0xe4e0:0xf31b0d10
  427551:	test   al,0x8
  427553:	jmp    0x1310:0xdb38fe2b
  42755a:	fsubr  DWORD PTR [edx-0x26]
  42755d:	mov    DWORD PTR [esi+0x74bf9bc8],ecx
  427563:	in     al,dx
  427564:	retf   0xf08
  427567:	or     DWORD PTR [ebx-0x6f884817],ebx
  42756d:	sub    ch,ch
  42756f:	mov    WORD PTR [edx-0x67],ss
  427572:	dec    DWORD PTR [ecx+edx*4]
  427575:	jmp    0x63d9:0x1fac4a67
  42757c:	inc    esp
  42757d:	scas   eax,DWORD PTR es:[edi]
  42757e:	outs   dx,DWORD PTR ds:[esi]
  42757f:	push   ds
  427580:	mov    BYTE PTR [eax-0x27],cl
  427583:	adc    esp,ecx
  427585:	ret    0x266d
  427588:	fwait
  427589:	xlat   BYTE PTR ds:[ebx]
  42758a:	ja     0x4275aa
  42758c:	sbb    BYTE PTR [esi+0x51bdbcf],ah
  427592:	retf   
  427593:	sub    eax,0x3b2156a
  427598:	sub    ecx,DWORD PTR [edx+0x34fd4d5f]
  42759e:	shl    DWORD PTR [edx],1
  4275a0:	add    al,0xe7
  4275a2:	out    0xcf,al
  4275a4:	les    eax,FWORD PTR [esi+edx*8-0x7c]
  4275a8:	inc    edx
  4275a9:	mov    ecx,0x7ebd89cf
  4275ae:	das    
  4275af:	or     al,0x2b
  4275b1:	pushf  
  4275b2:	xor    dl,BYTE PTR [ecx-0x532ea5fd]
  4275b8:	fimul  WORD PTR [edi-0x1d]
  4275bb:	xchg   DWORD PTR [ebp-0x206fca44],ebp
  4275c1:	mov    esp,0x704c06ad
  4275c6:	ins    DWORD PTR es:[edi],dx
  4275c7:	in     al,dx
  4275c8:	push   0x36
  4275ca:	push   0x7d7e9de8
  4275cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d0:	dec    ecx
  4275d1:	nop
  4275d2:	push   es
  4275d3:	int3   
  4275d4:	push   ss
  4275d5:	aad    0x14
  4275d7:	pop    edx
  4275d8:	and    bh,ah
  4275da:	or     ebx,ebp
  4275dc:	mov    edx,0x13dab728
  4275e1:	aam    0xc0
  4275e3:	xor    ebp,esi
  4275e5:	add    ebx,DWORD PTR [esi-0x40855917]
  4275eb:	xor    DWORD PTR [edi],esi
  4275ed:	scas   eax,DWORD PTR es:[edi]
  4275ee:	loopne 0x427644
  4275f0:	out    dx,eax
  4275f1:	jae    0x4275a3
  4275f3:	inc    eax
  4275f4:	es retf 
  4275f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275f7:	in     al,0x45
  4275f9:	mov    ebx,0xbeab6e94
  4275fe:	and    BYTE PTR [edx-0x31],al
  427601:	jecxz  0x427589
  427603:	or     edi,esp
  427605:	in     eax,0xc0
  427607:	jns    0x4275b7
  427609:	push   edx
  42760a:	call   DWORD PTR [eax-0x6902a60f]
  427610:	in     eax,dx
  427611:	adc    edi,DWORD PTR [ebx+0x11344187]
  427617:	mov    bl,0x71
  427619:	xor    BYTE PTR [eax+eiz*1],bl
  42761c:	loop   0x4275bf
  42761e:	push   ebp
  42761f:	aad    0xf8
  427621:	xor    bh,BYTE PTR es:[eax+0x7ce5f53f]
  427628:	inc    ebp
  427629:	or     esi,DWORD PTR [ebx-0x5f]
  42762c:	adc    dl,cl
  42762e:	and    al,0x43
  427630:	in     eax,0xe3
  427632:	xor    DWORD PTR [esi+0x3b],0xffffff81
  427636:	push   esi
  427637:	enter  0xd76e,0x11
  42763b:	or     ch,BYTE PTR ds:0xfa5ef734
  427641:	cmp    DWORD PTR [esp+esi*4-0x43ef8d1b],edx
  427648:	pop    esi
  427649:	xchg   ebp,eax
  42764a:	jmp    0x80cd:0x753b1ef5
  427651:	xchg   ebp,eax
  427652:	xchg   BYTE PTR [ebp-0x41],bl
  427655:	outs   dx,DWORD PTR ds:[esi]
  427656:	ins    BYTE PTR es:[edi],dx
  427657:	push   es
  427658:	and    ecx,DWORD PTR fs:[ebx-0x1a9134d4]
  42765f:	adc    ah,ah
  427661:	cmc    
  427662:	imul   ebp,DWORD PTR [esi+0x22],0xffffffb9
  427666:	and    eax,0xffffff94
  427669:	push   edx
  42766a:	arpl   WORD PTR [ebp+esi*4-0x80],bx
  42766e:	in     eax,0xa2
  427670:	mov    dh,0x9f
  427672:	push   edi
  427673:	stc    
  427674:	mov    bh,0x32
  427676:	xchg   ecx,esi
  427678:	mov    ebx,0x8ca3b53a
  42767d:	inc    ebp
  42767e:	push   ebx
  42767f:	xor    eax,0x464990eb
  427684:	ja     0x42763c
  427686:	xor    esi,DWORD PTR [ecx]
  427688:	(bad)  
  427689:	jl     0x427626
  42768b:	mul    DWORD PTR [ebp+ebx*2+0x799b]
	...
  42769a:	cdq    
  42769b:	enter  0x9ff8,0xf9
  42769f:	mov    edi,0xcf7dceff
  4276a4:	stc    
  4276a5:	popf   
  4276a6:	jne    0x4276e5
  4276a8:	xchg   ecx,eax
  4276a9:	inc    edx
  4276aa:	sahf   
  4276ab:	in     al,dx
  4276ac:	add    DWORD PTR [eax],eax
  4276ae:	inc    BYTE PTR [ecx]
  4276b0:	add    BYTE PTR [eax],al
  4276b2:	int    0xaf
  4276b4:	pop    eax
  4276b5:	stc    
  4276b6:	jle    0x4276dd
  4276b8:	fsubr  DWORD PTR [ecx]
  4276ba:	add    ebp,DWORD PTR [edi-0xea496b3]
  4276c0:	xchg   ecx,eax
  4276c1:	ss aas 
  4276c3:	adc    eax,0x85a40279
  4276c8:	icebp  
  4276c9:	(bad)  
  4276ca:	ja     0x427741
  4276cc:	add    al,0x84
  4276ce:	jbe    0x427671
  4276d0:	ja     0x42766b
  4276d2:	or     al,0xd7
  4276d4:	pop    ebx
  4276d5:	pop    ds
  4276d6:	outs   dx,DWORD PTR ds:[esi]
  4276d7:	cmp    edi,DWORD PTR [ebp+0x13091f23]
  4276dd:	std    
  4276de:	xor    cl,BYTE PTR [edx]
  4276e0:	dec    ebp
  4276e1:	rcr    BYTE PTR [edx+0x37],cl
  4276e4:	popf   
  4276e5:	push   es
  4276e6:	push   edi
  4276e7:	lods   eax,DWORD PTR ds:[esi]
  4276e8:	fs push esp
  4276ea:	dec    eax
  4276eb:	retf   
  4276ec:	and    eax,0x3c0c8c73
  4276f1:	jle    0x4276a8
  4276f3:	mov    eax,0xbd1a38d2
  4276f8:	aas    
  4276f9:	jbe    0x42769e
  4276fb:	sahf   
  4276fc:	ins    BYTE PTR es:[edi],dx
  4276fd:	cmp    dh,BYTE PTR [edi]
  4276ff:	inc    eax
  427700:	or     DWORD PTR [bx+0x2145],0xffffffc1
  427706:	xchg   edi,ecx
  427708:	xor    DWORD PTR [esi],edi
  42770a:	cmc    
  42770b:	mov    dl,BYTE PTR [esi-0x4b]
  42770e:	and    ecx,DWORD PTR [eax+edi*4-0x7dae7200]
  427715:	fst    QWORD PTR [eax+0x584c7bcf]
  42771b:	test   al,0x61
  42771d:	or     ah,BYTE PTR [ebp-0x3a]
  427720:	dec    ebx
  427721:	out    dx,al
  427722:	add    BYTE PTR [edx+0x6c],al
  427725:	push   0x7d
  427727:	mov    WORD PTR [ecx+0xeaa3d16],ss
  42772d:	loop   0x42776d
  42772f:	sub    BYTE PTR [edi-0x2ac08c8e],ch
  427735:	out    dx,eax
  427736:	je     0x427704
  427738:	(bad)  [ebp+0x6f]
  42773b:	test   BYTE PTR [ebp+0x95d1204],dl
  427741:	mov    BYTE PTR [edi-0x2e969df1],bh
  427747:	scas   al,BYTE PTR es:[edi]
  427748:	dec    esi
  427749:	out    dx,eax
  42774a:	fisub  DWORD PTR [eax+edx*4]
  42774d:	outs   dx,DWORD PTR ds:[esi]
  42774e:	scas   al,BYTE PTR es:[edi]
  42774f:	jnp    0x4277bc
  427751:	fiadd  WORD PTR [esi]
  427753:	mov    edx,0xd0b2e3b8
  427758:	jle    0x427762
  42775a:	fimul  WORD PTR [ecx]
  42775c:	cmp    DWORD PTR [edx+0x172766f],ecx
  427762:	sub    al,0x21
  427764:	and    BYTE PTR [edx+eiz*8+0x2b],0x16
  427769:	scas   eax,DWORD PTR es:[edi]
  42776a:	mov    edi,edi
  42776c:	add    edx,0xcf7596b0
  427772:	push   edi
  427773:	cdq    
  427774:	inc    ebx
  427775:	mov    ah,0x29
  427777:	dec    ebx
  427778:	ret    0x9429
  42777b:	and    ebx,esi
  42777d:	jp     0x42773c
  42777f:	pop    edx
  427780:	pop    ds
  427781:	cmp    al,BYTE PTR [edx]
  427783:	pop    es
  427784:	data16 cs int3 
  427787:	int    0x2b
  427789:	cmp    esi,DWORD PTR [edi+0xb]
  42778c:	mov    dl,0xdc
  42778e:	inc    esi
  42778f:	mov    cl,0xc
  427791:	or     al,0x3b
  427793:	in     eax,dx
  427794:	or     BYTE PTR [edi],dl
  427796:	les    edi,FWORD PTR [edx]
  427798:	retf   
  427799:	outs   dx,BYTE PTR ds:[esi]
  42779a:	sbb    dl,bh
  42779c:	jb     0x4277a0
  42779e:	lock out dx,eax
  4277a0:	out    0x30,al
  4277a2:	int    0x13
  4277a4:	jae    0x42775f
  4277a6:	jecxz  0x4277c4
  4277a8:	data16 jp 0x427775
  4277ab:	or     al,0xce
  4277ad:	inc    eax
  4277ae:	jmp    DWORD PTR [esi-0x7327c3cc]
  4277b4:	rep outs dx,DWORD PTR ds:[esi]
  4277b6:	or     eax,0x9c9169b8
  4277bb:	scas   eax,DWORD PTR es:[edi]
  4277bc:	cs iret 
  4277be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277bf:	imul   DWORD PTR [eax]
  4277c1:	xchg   edx,eax
  4277c2:	retf   0x7524
  4277c5:	push   esp
  4277c6:	ficomp WORD PTR [esi]
  4277c8:	adc    eax,0xaa736b43
  4277cd:	ins    BYTE PTR es:[edi],dx
  4277ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277cf:	and    eax,0xa482386a
  4277d4:	add    eax,DWORD PTR [ebx]
  4277d6:	xor    eax,0x6c4d41e
  4277db:	mov    ds:0x71222e2d,eax
  4277e0:	dec    edx
  4277e1:	jae    0x4277e8
  4277e3:	inc    esp
  4277e4:	mul    DWORD PTR [esi+0x22]
  4277e7:	mov    ecx,0x275945c0
  4277ec:	loop   0x42782f
  4277ee:	dec    ecx
  4277ef:	xor    al,0x7
  4277f1:	xor    cl,bh
  4277f3:	pop    ss
  4277f4:	push   esp
  4277f5:	jae    0x427843
  4277f7:	push   eax
  4277f8:	outs   dx,DWORD PTR ds:[esi]
  4277f9:	mov    ch,0x9d
  4277fb:	adc    BYTE PTR [ecx],bl
  4277fd:	hlt    
  4277fe:	push   ss
  4277ff:	xor    BYTE PTR [ebp+0x739a93e5],dl
  427805:	pop    ds
  427806:	jl     0x4277b2
  427808:	test   esp,edx
  42780a:	adc    eax,0x764559db
  42780f:	hlt    
  427810:	cmc    
  427811:	(bad)  
  427812:	sahf   
  427813:	outs   dx,BYTE PTR ds:[esi]
  427814:	or     al,0xe2
  427816:	xchg   ebx,eax
  427817:	lds    ecx,FWORD PTR [edi-0x711b032e]
  42781d:	outs   dx,DWORD PTR ds:[esi]
  42781e:	push   ecx
  42781f:	pop    esi
  427820:	aad    0x1b
  427822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427823:	xor    DWORD PTR [edx],esp
  427825:	or     edx,DWORD PTR [ebp-0x30fba201]
  42782b:	mov    dh,0x93
  42782d:	inc    ebx
  42782e:	inc    ebx
  42782f:	mov    al,ds:0xa6c2cc43
  427834:	jmp    0xd1f82eb5
  427839:	ins    BYTE PTR es:[edi],dx
  42783a:	push   esi
  42783b:	jl     0x427890
  42783d:	pop    ebx
  42783e:	mov    esp,0x90ee4762
  427843:	in     al,0x9f
  427845:	mov    eax,0x7e42262c
  42784a:	mov    ah,cl
  42784c:	(bad)  
  42784d:	daa    
  42784e:	mov    ds:0x24d6577,eax
  427853:	push   ds
  427854:	mov    esp,0x85d39ff4
  427859:	pop    ss
  42785a:	enter  0x4773,0xe5
  42785e:	mov    DWORD PTR ss:[ecx+0x73cb9601],ebp
  427865:	call   FWORD PTR [ecx-0x3a]
  427868:	pop    ds
  427869:	push   ds
  42786a:	(bad)  
  42786c:	cmp    cl,dh
  42786e:	inc    edx
  42786f:	rol    DWORD PTR [edi-0x2a],0x99
  427873:	fs mov esp,0xb37364f2
  427879:	sub    BYTE PTR [ebx+ebx*4+0x19],ah
  42787d:	inc    edx
  42787e:	fiadd  DWORD PTR [ecx]
  427880:	xchg   BYTE PTR [ebp+edx*1-0x7b],ah
  427884:	cli    
  427885:	inc    ecx
  427886:	fild   DWORD PTR [edi]
  427888:	push   cs
  427889:	jbe    0x4278e0
  42788b:	mov    ecx,0x5fe6cc1a
  427890:	push   ecx
  427891:	cdq    
  427892:	mov    ch,0x42
  427894:	sub    al,0x7d
  427896:	enter  0x84a2,0x6a
  42789a:	inc    ebp
  42789b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42789c:	out    dx,al
  42789d:	fmul   DWORD PTR [ecx]
  42789f:	(bad)  
  4278a1:	(bad)  
  4278a2:	imul   ebp,esi,0x8
  4278a5:	or     ebp,DWORD PTR ds:0xa0e4d2bf
  4278ab:	push   ss
  4278ac:	rcr    DWORD PTR [edx+0xd15e],cl
	...
  4278ba:	jns    0x4278c6
  4278bc:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4278c0:	jge    0x42792d
  4278c2:	and    DWORD PTR [ebp+0x30],ecx
  4278c5:	dec    esi
  4278c6:	xor    ch,cl
  4278c8:	pushf  
  4278c9:	neg    BYTE PTR [esi+ebp*8+0x1fe0001]
  4278d0:	add    BYTE PTR [eax],al
  4278d2:	add    DWORD PTR [ecx-0xb],eax
  4278d5:	jo     0x427888
  4278d7:	pop    eax
  4278d8:	xor    BYTE PTR [eax+ebx*4+0x7c581190],bl
  4278df:	stc    
  4278e0:	into   
  4278e1:	jno    0x427907
  4278e3:	mov    ebp,0x9db98814
  4278e8:	out    0x7,eax
  4278ea:	sub    BYTE PTR [ecx-0x1e5d54a8],bl
  4278f0:	ret    0xc8d5
  4278f3:	cli    
  4278f4:	and    dl,BYTE PTR [edi-0x58]
  4278f7:	mov    BYTE PTR [edx],ah
  4278f9:	mov    al,ds:0xba937c74
  4278fe:	in     al,dx
  4278ff:	pop    eax
  427900:	ret    0xe53d
  427903:	sbb    dh,BYTE PTR [edi]
  427905:	sbb    al,0xa2
  427907:	js     0x42789f
  427909:	imul   edx,DWORD PTR [edx],0xffffffc9
  42790c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42790d:	mov    cl,0x3a
  42790f:	js     0x4278bc
  427911:	or     BYTE PTR [ebx],al
  427913:	xchg   esi,eax
  427914:	mov    ah,0x64
  427916:	paddq  mm5,mm4
  427919:	jno    0x427925
  42791b:	mov    esi,0xc77d272d
  427920:	fisub  WORD PTR [ebp-0x2eb805e5]
  427926:	sub    al,0xe3
  427929:	jbe    0x427963
  42792b:	fs mov esp,0x7f93e458
  427931:	rcr    ebx,0x92
  427934:	mov    ebp,0x26a7e82
  427939:	not    DWORD PTR ds:0x24069bf7
  42793f:	ds mov ebx,0xb8905071
  427945:	inc    ebp
  427946:	cdq    
  427947:	and    BYTE PTR [ebx-0x4208558f],bh
  42794d:	mov    edx,0x897eec0e
  427952:	add    DWORD PTR [ebx-0x5d966b0f],ebp
  427958:	xor    al,0x85
  42795a:	and    cl,BYTE PTR [edi-0x77]
  42795d:	cmp    DWORD PTR [ecx+0x1d0cf09e],eax
  427963:	mov    ecx,0x9df82c51
  427968:	sti    
  427969:	pop    ds
  42796a:	dec    edi
  42796b:	xchg   BYTE PTR [edx-0x38],ah
  42796e:	aad    0x35
  427970:	dec    ebp
  427971:	jl     0x42799e
  427973:	add    DWORD PTR [ebp+0x46500711],eax
  427979:	mov    esp,0xfa9830c5
  42797e:	daa    
  42797f:	or     al,0xd8
  427981:	cmp    DWORD PTR [ecx+edx*4],eax
  427984:	and    BYTE PTR [edx+0x508ef773],bh
  42798a:	and    DWORD PTR [esi],eax
  42798c:	addr16 int3 
  42798e:	sub    BYTE PTR [esi-0x1f],0x29
  427992:	cmp    dh,BYTE PTR [ecx+0x1e2ea215]
  427998:	(bad)  
  427999:	dec    ecx
  42799a:	pop    ecx
  42799b:	imul   esi,DWORD PTR [ecx+0x296bc1d9],0xffffffb8
  4279a2:	push   edi
  4279a3:	mov    ebx,DWORD PTR [edx+0x1]
  4279a6:	and    BYTE PTR [esi+0x22],ch
  4279a9:	xchg   BYTE PTR [esi],ah
  4279ab:	and    BYTE PTR ds:0xecde80a9,cl
  4279b1:	sbb    BYTE PTR [ebx-0x3b2a028],ah
  4279b7:	xchg   ebx,eax
  4279b8:	loope  0x427a2a
  4279ba:	pop    edi
  4279bb:	inc    ebp
  4279bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4279bd:	mov    bl,0xbc
  4279bf:	mov    cl,0x9b
  4279c1:	mov    DWORD PTR [esp+edi*1],esi
  4279c4:	cmc    
  4279c5:	mov    esp,0xdaca2f8e
  4279ca:	scas   eax,DWORD PTR es:[edi]
  4279cb:	adc    eax,0x7a7ea431
  4279d0:	mov    bh,0x89
  4279d2:	jno    0x427975
  4279d4:	dec    esi
  4279d5:	xor    bl,BYTE PTR [edi]
  4279d7:	popf   
  4279d8:	pop    es
  4279d9:	adc    edi,DWORD PTR [ecx]
  4279db:	lahf   
  4279dc:	jbe    0x427a38
  4279de:	mov    al,ds:0xf93971e4
  4279e3:	add    ebp,DWORD PTR [eax-0x2a175114]
  4279e9:	repnz pusha 
  4279eb:	lods   al,BYTE PTR ss:[esi]
  4279ed:	push   ebx
  4279ee:	rcr    DWORD PTR [eax-0x757d05af],0x1d
  4279f5:	add    eax,0x12bde9d7
  4279fa:	jnp    0x427a65
  4279fc:	xchg   ebp,eax
  4279fd:	dec    ecx
  4279fe:	data16 scas al,BYTE PTR es:[edi]
  427a00:	fist   DWORD PTR [ebp+0x92f0155]
  427a06:	jmp    0xc976:0x6474e174
  427a0d:	popf   
  427a0e:	clc    
  427a0f:	push   cs
  427a10:	ins    DWORD PTR es:[edi],dx
  427a11:	dec    eax
  427a12:	and    BYTE PTR [edx+0x4bf244f1],dl
  427a18:	sbb    ebx,DWORD PTR [edx]
  427a1a:	out    dx,al
  427a1b:	cmp    BYTE PTR ds:0x94804afd,al
  427a21:	test   al,0xb2
  427a23:	mov    ah,0xee
  427a25:	and    eax,DWORD PTR [edi-0x61]
  427a28:	outs   dx,BYTE PTR ds:[esi]
  427a29:	fistp  DWORD PTR [edi]
  427a2b:	jne    0x427a71
  427a2d:	inc    esi
  427a2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2f:	ret    
  427a30:	gs dec ecx
  427a32:	sub    dh,ah
  427a34:	inc    ebp
  427a35:	jb     0x427a5b
  427a37:	outs   dx,DWORD PTR ds:[esi]
  427a38:	js     0x427a9d
  427a3a:	mov    ebp,0x8f515f39
  427a3f:	and    esp,DWORD PTR [edi+0x36]
  427a42:	jle    0x427a4b
  427a44:	fldenv [ebp+edi*8+0x34b54f33]
  427a4b:	in     al,dx
  427a4c:	push   esp
  427a4d:	out    0x6f,eax
  427a4f:	push   esi
  427a50:	or     eax,0x438a04c3
  427a55:	sbb    eax,0x51c71428
  427a5a:	cld    
  427a5b:	jnp    0x427a41
  427a5d:	sub    ebx,ebp
  427a5f:	sar    DWORD PTR [eax],cl
  427a61:	sub    ch,ah
  427a63:	push   esi
  427a64:	adc    dh,cl
  427a66:	std    
  427a67:	cmp    al,0x25
  427a69:	gs adc ebx,esp
  427a6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a6d:	jge    0x427a2e
  427a6f:	xchg   edx,eax
  427a70:	pop    esi
  427a71:	add    eax,0xeb29301c
  427a76:	mov    ch,0x75
  427a78:	outs   dx,DWORD PTR ds:[esi]
  427a79:	push   edx
  427a7a:	rcl    BYTE PTR [ebp+0xc5bbe8e],0xa9
  427a81:	pop    edi
  427a82:	mov    bh,0xdd
  427a84:	inc    eax
  427a85:	inc    eax
  427a86:	(bad)  
  427a87:	loopne 0x427a56
  427a89:	add    ah,BYTE PTR [eax+0x3]
  427a8c:	dec    ebp
  427a8d:	mov    bh,0x9c
  427a8f:	(bad)  
  427a90:	cmp    eax,0x6c3890a8
  427a95:	push   ebp
  427a96:	jo     0x427aec
  427a98:	fwait
  427a99:	jo     0x427a25
  427a9b:	(bad)  
  427a9c:	std    
  427a9d:	xchg   ebp,eax
  427a9e:	jl     0x427a8a
  427aa0:	out    dx,eax
  427aa1:	jb     0x427ad3
  427aa3:	icebp  
  427aa4:	sub    bh,al
  427aa6:	adc    BYTE PTR [ecx-0x23],ch
  427aa9:	or     DWORD PTR [esi+0x23],ebx
  427aac:	push   eax
  427aad:	dec    esi
  427aae:	(bad)  
  427ab0:	pop    ds
  427ab1:	retf   0xe2d8
  427ab4:	pushf  
  427ab5:	add    cl,BYTE PTR [edi-0x17]
  427ab8:	ror    BYTE PTR [ebx],0xb0
  427abb:	aam    0x6f
  427abd:	scas   al,BYTE PTR es:[edi]
  427abe:	inc    ecx
  427abf:	jle    0x427abd
  427ac1:	xchg   edx,eax
  427ac2:	lock cmp eax,0x8058be38
  427ac8:	mov    esp,0xa0b1e859
  427acd:	push   esp
  427ace:	retf   
  427acf:	add    DWORD PTR [eax],eax
	...
  427ad9:	add    BYTE PTR [ecx+0x3],bl
  427adc:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427ae1:	pop    ds
  427ae2:	arpl   WORD PTR [edi-0x4ee5b294],di
  427ae8:	pop    eax
  427ae9:	int    0x9a
  427aeb:	lock add DWORD PTR [eax],eax
  427aee:	inc    BYTE PTR [ecx]
  427af0:	add    BYTE PTR [eax],al
  427af2:	mov    DWORD PTR [edx-0x4f500b15],ecx
  427af8:	in     al,0x30
  427afa:	add    eax,0x303cb010
  427aff:	lahf   
  427b00:	popa   
  427b01:	xchg   ebx,eax
  427b02:	in     eax,dx
  427b03:	f2xm1  
  427b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b06:	aaa    
  427b07:	leave  
  427b08:	jo     0x427a8e
  427b0a:	fdivr  QWORD PTR [edx+edi*8-0x35]
  427b0e:	adc    BYTE PTR [edi+0x66],dh
  427b11:	pop    es
  427b12:	rcr    ebp,cl
  427b14:	sub    ebx,0x83b013fc
  427b1a:	and    ebx,eax
  427b1c:	aad    0xea
  427b1e:	loopne 0x427aa6
  427b20:	sahf   
  427b21:	pop    ebx
  427b22:	fisub  WORD PTR [edx-0x335b504e]
  427b28:	dec    esp
  427b29:	inc    esp
  427b2a:	int3   
  427b2b:	cmp    al,0xa3
  427b2d:	lds    esp,FWORD PTR [ecx+0x5cfe626b]
  427b33:	mov    bh,0x94
  427b35:	cmp    eax,0x9f109e14
  427b3a:	and    DWORD PTR [edi+0x1082ef81],eax
  427b40:	ret    0x19d7
  427b43:	pop    edx
  427b44:	fidiv  DWORD PTR [edx+0x78]
  427b47:	push   edi
  427b48:	push   ss
  427b49:	xchg   DWORD PTR [edi+edx*2],eax
  427b4c:	iret   
  427b4d:	aam    0xa2
  427b4f:	add    esi,DWORD PTR [ebp-0x4ec4e193]
  427b55:	ins    BYTE PTR es:[edi],dx
  427b56:	jno    0x427ba9
  427b58:	lock push ecx
  427b5a:	sti    
  427b5b:	add    eax,0x2752659d
  427b60:	mov    bh,0x11
  427b62:	test   BYTE PTR [edx],al
  427b64:	mov    ch,0x71
  427b66:	jle    0x427b76
  427b68:	sub    eax,0x3708ac33
  427b6d:	mov    edx,0xc17ca8fb
  427b72:	shl    DWORD PTR [eax+0x328f14ca],cl
  427b78:	xchg   BYTE PTR [ebx+eiz*2+0x164c957f],dl
  427b7f:	js     0x427be1
  427b81:	stc    
  427b82:	and    esp,DWORD PTR [edx+esi*2+0xa]
  427b86:	mov    cs,WORD PTR [edi-0x5a]
  427b89:	xchg   edi,eax
  427b8a:	in     eax,0xaa
  427b8c:	loope  0x427b32
  427b8e:	xchg   esp,eax
  427b8f:	fsubr  QWORD PTR [ebx]
  427b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b92:	dec    edi
  427b93:	mov    al,ds:0x3dd4bca7
  427b98:	jno    0x427b64
  427b9a:	aas    
  427b9b:	cmp    ah,BYTE PTR [ecx+ecx*2]
  427b9e:	int3   
  427b9f:	mov    ebp,0x12696d86
  427ba4:	lahf   
  427ba5:	mov    al,ds:0x9ce077d6
  427baa:	repnz ins DWORD PTR es:[edi],dx
  427bac:	pop    eax
  427bad:	and    eax,0xb029995e
  427bb2:	push   edx
  427bb3:	pop    ecx
  427bb4:	mov    al,ds:0x7cfa977c
  427bb9:	xchg   DWORD PTR [ecx],esp
  427bbb:	mov    dl,0x5f
  427bbd:	mov    bl,dh
  427bbf:	shr    DWORD PTR [edi-0x4a135703],1
  427bc5:	xchg   DWORD PTR [ebx],esp
  427bc7:	jb     0x427c0f
  427bc9:	mov    esp,0x45bbea69
  427bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bcf:	jne    0x427bc4
  427bd1:	push   ecx
  427bd2:	jae    0x427bb9
  427bd4:	in     al,0x46
  427bd6:	lds    ebp,FWORD PTR [edx+0x5018ee47]
  427bdc:	(bad)
  427be0:	(bad)
  427be4:	adc    al,0x65
  427be6:	mov    esi,0xba5a2f34
  427beb:	push   ss
  427bec:	ja     0x427c5d
  427bee:	and    bl,BYTE PTR [edx+eiz*4+0x6b]
  427bf2:	(bad)  
  427bf3:	rep es outs dx,DWORD PTR gs:[esi]
  427bf7:	jecxz  0x427bbf
  427bf9:	inc    esi
  427bfa:	sbb    ch,BYTE PTR [esi]
  427bfc:	lods   al,BYTE PTR ds:[esi]
  427bfd:	push   eax
  427bfe:	add    BYTE PTR [edi+0x4624c18d],bh
  427c04:	adc    BYTE PTR [esi+0x7dfe67ba],0xec
  427c0b:	xor    bl,bl
  427c0d:	adc    BYTE PTR [eax+0x44],dh
  427c10:	xchg   ebx,eax
  427c11:	hlt    
  427c12:	test   al,0x75
  427c14:	fisttp DWORD PTR [ebx+0x50]
  427c17:	mov    ds:0x31b209cb,eax
  427c1c:	adc    edx,DWORD PTR [ecx-0x2e437819]
  427c22:	outs   dx,BYTE PTR ds:[esi]
  427c23:	out    0xfd,al
  427c25:	mov    ah,0x2c
  427c27:	pop    ds
  427c28:	data16 int3 
  427c2a:	pushf  
  427c2b:	adc    al,0xba
  427c2d:	xor    bl,0x35
  427c30:	fsubr  QWORD PTR [bx-0x850]
  427c35:	xor    ecx,DWORD PTR [ebp-0x40da1bb2]
  427c3b:	ret    0xb8e0
  427c3e:	lock mov bl,BYTE PTR [esi-0xb]
  427c42:	push   0xffffffe7
  427c44:	jae    0x427c83
  427c46:	lods   eax,DWORD PTR ds:[esi]
  427c47:	dec    ebp
  427c48:	dec    eax
  427c49:	(bad)  
  427c4a:	xor    BYTE PTR [ebp-0x7a],dl
  427c4d:	test   DWORD PTR [eax+0x47],ecx
  427c50:	push   edi
  427c51:	into   
  427c52:	add    esi,DWORD PTR [edx+eiz*8+0x2f64ac5]
  427c59:	xchg   edx,eax
  427c5a:	(bad)  
  427c5b:	xlat   BYTE PTR ds:[ebx]
  427c5c:	(bad)  
  427c5d:	call   edi
  427c5f:	cwde   
  427c60:	ror    edi,0xaf
  427c63:	pop    ss
  427c64:	push   0xce7e7fe3
  427c69:	xor    eax,0x2a72ab1c
  427c6e:	pop    esp
  427c6f:	pusha  
  427c70:	repnz cmp eax,0x3c6e3892
  427c76:	aaa    
  427c77:	out    dx,al
  427c78:	cmp    ch,BYTE PTR [edi+edi*2+0x5f2c11f1]
  427c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c80:	(bad)  
  427c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c82:	xor    al,0xb9
  427c84:	push   eax
  427c85:	sbb    DWORD PTR [eax+0x56c32201],ecx
  427c8b:	xor    edx,DWORD PTR [ebp+0x61b947a9]
  427c91:	and    BYTE PTR [esi+0x36],ah
  427c94:	add    eax,0xf234a3f
  427c99:	in     eax,dx
  427c9a:	dec    ecx
  427c9b:	imul   eax,DWORD PTR [eax+esi*8-0x1677e0e],0xa909fcd0
  427ca6:	pop    es
  427ca7:	adc    al,0x87
  427ca9:	cmp    edi,DWORD PTR [edi-0x5be30606]
  427caf:	mov    bh,ah
  427cb1:	xchg   ebx,eax
  427cb2:	retf   
  427cb3:	xchg   esp,eax
  427cb4:	ret    0xbca3
  427cb7:	or     edx,DWORD PTR [edi]
  427cb9:	shl    DWORD PTR [ebx+0x67],0xf1
  427cbd:	int3   
  427cbe:	fisttp WORD PTR [esi-0x64f51c31]
  427cc4:	stos   DWORD PTR es:[edi],eax
  427cc5:	imul   ebx,DWORD PTR [ebx-0x2e],0x4
  427cc9:	dec    eax
  427cca:	sub    BYTE PTR [ecx],al
  427ccc:	mov    al,dl
  427cce:	mov    WORD PTR [eax+eiz*8],si
  427cd2:	sbb    ebx,DWORD PTR gs:0x4c80c053
  427cd9:	push   ecx
  427cda:	ins    BYTE PTR es:[edi],dx
  427cdb:	jae    0x427c9f
  427cdd:	sbb    eax,DWORD PTR [ebx]
  427cdf:	out    dx,eax
  427ce0:	loopne 0x427ca0
  427ce2:	in     eax,0xa5
  427ce4:	push   edi
  427ce5:	mov    ebp,0xe132baf
  427cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ceb:	push   ss
  427cec:	into   
  427ced:	and    esp,DWORD PTR [ecx]
  427cef:	add    BYTE PTR [eax],0x0
	...
  427cfa:	sbb    esp,DWORD PTR [edi]
  427cfc:	pushf  
  427cfd:	cli    
  427cfe:	mov    esp,0xaae77ffb
  427d03:	xchg   esp,eax
  427d04:	out    dx,eax
  427d05:	cdq    
  427d06:	push   ss
  427d07:	in     al,dx
  427d08:	dec    ebp
  427d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d0a:	cwde   
  427d0b:	repnz add DWORD PTR [eax],eax
  427d0e:	inc    BYTE PTR [ecx]
  427d10:	add    BYTE PTR [eax],al
  427d12:	xor    al,0x6
  427d14:	repnz cs gs not dh
  427d19:	inc    ebx
  427d1a:	and    BYTE PTR [edx-0x65062b8c],bl
  427d20:	in     al,dx
  427d21:	push   0x3f39a9a
  427d26:	ins    BYTE PTR es:[edi],dx
  427d27:	xchg   edx,eax
  427d28:	dec    esp
  427d29:	test   BYTE PTR [edx],ch
  427d2b:	lods   al,BYTE PTR ds:[esi]
  427d2c:	mov    eax,0x1f9059dd
  427d31:	lds    ecx,FWORD PTR [ebx+0x7699933b]
  427d37:	fcomi  st,st(5)
  427d39:	inc    edx
  427d3a:	into   
  427d3b:	mov    ch,0x11
  427d3d:	jmp    0x427cfc
  427d3f:	xchg   ebx,eax
  427d40:	cli    
  427d41:	cmp    eax,0x692f6af3
  427d46:	xchg   edi,eax
  427d47:	or     BYTE PTR [edx+0xf],0xad
  427d4b:	lock out 0x86,eax
  427d4e:	stos   BYTE PTR es:[edi],al
  427d4f:	mov    eax,ds:0x29a6103c
  427d54:	mov    dl,0xb5
  427d56:	fs sbb ebp,DWORD PTR ss:[eax]
  427d5a:	out    0x6c,al
  427d5c:	cmp    al,0xf8
  427d5e:	push   0x20
  427d60:	cmp    dl,BYTE PTR [eax-0x473feb6e]
  427d66:	fcom   DWORD PTR [ebp-0x5c8d5c6c]
  427d6c:	push   esp
  427d6d:	mov    ch,0x9a
  427d6f:	sbb    dl,BYTE PTR [edx+0x59600043]
  427d75:	dec    edi
  427d76:	mov    eax,ds:0xf685eb3d
  427d7b:	push   ebp
  427d7c:	cmp    ecx,DWORD PTR [ebx]
  427d7e:	mov    al,0x1a
  427d80:	repz repz mov ds:0xfa085c53,eax
  427d87:	mov    edx,0x88b516a0
  427d8c:	dec    esp
  427d8d:	add    ah,dh
  427d8f:	loope  0x427d8e
  427d91:	dec    esp
  427d92:	mov    ds:0xaf82c7e1,al
  427d97:	arpl   WORD PTR [ebx+0x73],sp
  427d9a:	sub    eax,0xe1fc0fc4
  427d9f:	shl    ebx,cl
  427da1:	and    BYTE PTR [ecx],cl
  427da3:	mov    edx,0xd126a1c1
  427da8:	pop    eax
  427da9:	aam    0xb4
  427dab:	push   edi
  427dac:	es (bad) 
  427dae:	push   ds
  427daf:	inc    ebp
  427db0:	sbb    esi,DWORD PTR [esp+ebp*1+0x2ab40abc]
  427db7:	pop    edx
  427db8:	mov    ecx,0x3f848b30
  427dbd:	mov    BYTE PTR [ebx-0x399392b2],ah
  427dc3:	lods   al,BYTE PTR ds:[esi]
  427dc4:	sbb    dl,BYTE PTR [edx]
  427dc6:	xor    DWORD PTR [esi-0x34c94930],edi
  427dcc:	nop
  427dcd:	add    al,0x25
  427dcf:	loope  0x427ded
  427dd1:	push   0x13
  427dd3:	xor    DWORD PTR [esi-0x24],0xf41218ab
  427dda:	ins    BYTE PTR es:[edi],dx
  427ddb:	adc    al,0x65
  427ddd:	es cmp eax,0xbfe864bf
  427de3:	push   edx
  427de4:	sub    al,0xc3
  427de6:	ds ret 0x24bd
  427dea:	ret    
  427deb:	cmp    DWORD PTR [ebp-0x40],edx
  427dee:	mov    ah,dh
  427df0:	jno    0x427e6e
  427df2:	sbb    al,0x2e
  427df4:	dec    ebp
  427df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427df7:	sub    eax,0x55a1a6a7
  427dfc:	mov    ecx,0x84de9a03
  427e01:	clc    
  427e02:	or     eax,0xda6e1e21
  427e07:	pop    esi
  427e08:	adc    dh,0x65
  427e0b:	sbb    al,0x3d
  427e0d:	out    0xa6,al
  427e0f:	push   esp
  427e10:	popa   
  427e11:	push   ds
  427e12:	mov    al,BYTE PTR [esi+0x2d]
  427e15:	inc    edx
  427e16:	pusha  
  427e17:	imul   esp,DWORD PTR [edx-0x2],0xe6a55d1f
  427e1e:	out    dx,al
  427e1f:	xchg   edx,eax
  427e20:	xor    eax,0x587677fe
  427e25:	outs   dx,BYTE PTR ds:[esi]
  427e26:	pop    ecx
  427e27:	call   0xdf8:0x731cd6
  427e2e:	fdiv   QWORD PTR [esp+esi*4]
  427e31:	or     DWORD PTR [edx+0x40],0x3799ead0
  427e38:	push   0xffffffbe
  427e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e3b:	push   eax
  427e3c:	retf   
  427e3d:	push   esp
  427e3e:	test   ebx,edi
  427e40:	jmp    0x427ea7
  427e42:	or     edx,DWORD PTR [eax]
  427e44:	or     al,dh
  427e46:	mov    esp,0x4ddc14ab
  427e4b:	ins    DWORD PTR es:[edi],dx
  427e4c:	mov    ebp,DWORD PTR [ebp-0x3b336b78]
  427e52:	mov    edi,0xb913df1
  427e57:	sub    eax,0xda793e84
  427e5c:	and    DWORD PTR [ebx+0x7f],ebx
  427e5f:	mov    DWORD PTR [ebx+eiz*4+0x76d98dc9],0x304b1884
  427e6a:	loope  0x427eda
  427e6c:	pop    es
  427e6d:	adc    dl,dh
  427e6f:	jnp    0x427ecd
  427e71:	inc    esi
  427e72:	lahf   
  427e73:	add    BYTE PTR ds:0x2aac6be9,ah
  427e79:	mov    ch,0x15
  427e7b:	jmp    0xd1581e45
  427e80:	add    BYTE PTR [ebp-0x71bad443],dh
  427e86:	idiv   BYTE PTR [ebx]
  427e88:	sub    eax,0xcc221c3e
  427e8d:	arpl   WORD PTR [edx-0x10],ax
  427e90:	fist   WORD PTR [eax-0x6c]
  427e93:	addr16 retf 0xf6a2
  427e97:	cmp    DWORD PTR [ebp-0x56],ecx
  427e9a:	inc    esi
  427e9b:	fcmovnb st,st(1)
  427e9d:	sub    al,0x3c
  427e9f:	add    eax,0x1c173b9f
  427ea4:	cmc    
  427ea5:	loop   0x427e69
  427ea7:	(bad)  
  427ea8:	(bad)  [edi]
  427eaa:	fsubp  st(1),st
  427eac:	xor    al,0xee
  427eae:	nop
  427eaf:	shr    esp,cl
  427eb1:	ins    DWORD PTR es:[edi],dx
  427eb2:	xchg   DWORD PTR [eax-0x74],ebp
  427eb5:	push   esp
  427eb6:	popf   
  427eb7:	mov    edx,0x8af7a6f4
  427ebc:	ret    0x52bb
  427ebf:	in     eax,0xf
  427ec1:	sbb    BYTE PTR [eax],dl
  427ec3:	lods   eax,DWORD PTR ds:[esi]
  427ec4:	push   cs
  427ec5:	push   cs
  427ec6:	out    dx,eax
  427ec7:	mov    esi,0x2ad11c5
  427ecc:	or     dh,dl
  427ece:	add    al,0x32
  427ed0:	scas   eax,DWORD PTR es:[edi]
  427ed1:	cmp    ebp,DWORD PTR [ebx+0x5e]
  427ed4:	outs   dx,BYTE PTR ds:[esi]
  427ed5:	xchg   ah,bl
  427ed7:	idiv   ecx
  427ed9:	jae    0x427ed1
  427edb:	ror    DWORD PTR [edx-0x68de5f7c],0xb6
  427ee2:	aas    
  427ee3:	sub    ebx,ebp
  427ee5:	loopne 0x427e69
  427ee7:	add    BYTE PTR [edx],dl
  427ee9:	call   0x22428a4e
  427eee:	and    bh,BYTE PTR [edx+ebx*1]
  427ef1:	stos   DWORD PTR es:[edi],eax
  427ef2:	(bad)  [edi]
  427ef4:	iret   
  427ef5:	retf   
  427ef6:	dec    ebx
  427ef7:	or     ebx,edx
  427ef9:	jb     0x427f43
  427efb:	test   BYTE PTR [eax],al
  427efd:	jmp    0x8116:0x132bba06
  427f04:	js     0x427ea4
  427f06:	jmp    0xc721:0x2c0bce4b
  427f0d:	mov    ch,BYTE PTR [ebx]
  427f0f:	stc    
	...
  427f18:	add    BYTE PTR [eax],al
  427f1a:	call   0xdafe:0xfef82244
  427f21:	leavew 
  427f23:	and    dh,BYTE PTR [ecx+edx*1+0x34]
  427f27:	ins    BYTE PTR es:[edi],dx
  427f28:	dec    edx
  427f29:	test   eax,0x1f496
  427f2e:	inc    BYTE PTR [ecx]
  427f30:	add    BYTE PTR [eax],al
  427f32:	pop    edi
  427f33:	push   eax
  427f34:	cmc    
  427f35:	pop    eax
  427f36:	add    BYTE PTR [ebp-0x50],0x45
  427f3a:	mov    ecx,0x6c56b3de
  427f3f:	test   DWORD PTR [edx+0x6973a5d1],esi
  427f45:	popf   
  427f46:	sub    bl,cl
  427f48:	and    esi,DWORD PTR [edi+0x4]
  427f4b:	ret    0x71c0
  427f4e:	arpl   WORD PTR [eax+ebx*8-0x48],di
  427f52:	or     al,0x74
  427f54:	outs   dx,DWORD PTR ds:[esi]
  427f55:	and    bh,ah
  427f57:	(bad)  
  427f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f5a:	retf   0xaadc
  427f5d:	cld    
  427f5e:	jge    0x427fd2
  427f60:	fcomp  DWORD PTR [edi+0x63]
  427f63:	xchg   esp,eax
  427f64:	cmp    al,0x31
  427f66:	inc    edx
  427f67:	sbb    BYTE PTR [edi-0x6f],al
  427f6a:	or     bh,BYTE PTR [edx+0x63f4f4ed]
  427f70:	jmp    0xbca0:0x30b8fc4a
  427f77:	jo     0x427f7e
  427f79:	idiv   DWORD PTR [edx]
  427f7b:	and    DWORD PTR [ecx-0x4a7e555a],esi
  427f81:	pop    es
  427f82:	xchg   edi,eax
  427f83:	je     0x427f5a
  427f85:	push   edi
  427f86:	and    eax,0x6924b89d
  427f8b:	fldenv [esi+0x3e4ada73]
  427f91:	inc    esp
  427f92:	mov    dl,0xbb
  427f94:	movq   mm0,mm1
  427f97:	call   0xee97:0x8f800548
  427f9e:	ret    
  427f9f:	pusha  
  427fa0:	and    eax,edi
  427fa2:	aam    0x9f
  427fa4:	in     eax,0xde
  427fa6:	inc    ebp
  427fa7:	test   al,0x49
  427fa9:	mov    dh,0xbb
  427fab:	clc    
  427fac:	and    al,0xdf
  427fae:	imul   ebp,DWORD PTR [ebp+0x64],0xffffffab
  427fb2:	pop    esi
  427fb3:	call   0x8bab:0x3cae347
  427fba:	and    BYTE PTR [ebx-0x4751ddd2],bl
  427fc0:	rcl    BYTE PTR ds:0xcea95f90,cl
  427fc6:	call   0xdcc5:0x121fea1c
  427fcd:	pop    esp
  427fce:	and    eax,0x4d6a3f3b
  427fd3:	push   0x6aabac12
  427fd8:	adc    bl,BYTE PTR [eax]
  427fda:	push   edx
  427fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fdc:	sub    DWORD PTR [edx+0x1e180545],eax
  427fe2:	sub    dl,ch
  427fe4:	pop    ebx
  427fe5:	hlt    
  427fe6:	ins    DWORD PTR es:[edi],dx
  427fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fe8:	push   ebp
  427fe9:	xchg   DWORD PTR [ecx-0x67],esp
  427fec:	ja     0x42805f
  427fee:	(bad)  
  427fef:	cli    
  427ff0:	pop    ebx
  427ff1:	and    BYTE PTR [edx-0x3f],cl
  427ff4:	and    BYTE PTR [ecx],ah
  427ff6:	out    0x67,al
  427ff8:	sahf   
  427ff9:	mov    esi,0xb4835073
  427ffe:	push   ebp
  427fff:	les    esp,FWORD PTR [si-0x45]
  428003:	ins    DWORD PTR es:[edi],dx
  428004:	mov    al,ds:0x77e118d1
  428009:	xor    ah,BYTE PTR [ebx-0x56]
  42800c:	out    0x2,eax
  42800e:	sar    BYTE PTR [eax],0x2f
  428011:	adc    BYTE PTR [esi+0x24f0253e],dh
  428017:	and    BYTE PTR [edx+0x3],ch
  42801a:	sub    ecx,DWORD PTR [edi-0x26]
  42801d:	bound  edi,QWORD PTR es:[ecx]
  428020:	mov    dh,0xe1
  428022:	jb     0x428022
  428024:	cmp    al,0x23
  428026:	push   0xffffffa9
  428028:	out    0x13,al
  42802a:	sbb    eax,0x2993397b
  42802f:	repz xor dl,BYTE PTR [ebp+eiz*1+0xe152b36]
  428037:	imul   ecx,DWORD PTR [ebx-0x66],0x790cdadd
  42803e:	repnz xchg ecx,eax
  428040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428041:	add    ch,BYTE PTR [esi]
  428043:	bswap  ebp
  428045:	ins    BYTE PTR es:[edi],dx
  428046:	pop    edx
  428048:	les    bp,DWORD PTR [edi+0x3ff481c3]
  42804f:	test   BYTE PTR [ecx+0x3351b3cd],dh
  428055:	and    dh,bl
  428057:	mov    eax,ds:0x9bd7eca7
  42805c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42805d:	and    BYTE PTR [ecx+0x53],dh
  428060:	dec    edx
  428061:	mov    bl,0x26
  428063:	mov    dh,0x25
  428065:	sbb    bh,BYTE PTR [ebp-0x31]
  428068:	jl     0x428032
  42806a:	gs addr16 fld1 
  42806e:	out    dx,eax
  42806f:	sbb    cl,BYTE PTR [ebp+0x210b5bfc]
  428075:	(bad)  
  428076:	outs   dx,BYTE PTR ds:[esi]
  428077:	adc    bh,BYTE PTR [edi+0xb]
  42807a:	loop   0x428003
  42807c:	inc    esi
  42807d:	push   ss
  42807e:	out    0xa6,eax
  428080:	scas   eax,DWORD PTR es:[edi]
  428081:	push   ebx
  428082:	cs pop es
  428084:	shl    BYTE PTR [eax],0xa
  428087:	test   eax,0xc7383fa5
  42808c:	add    esp,DWORD PTR [edx]
  42808e:	cmp    BYTE PTR [esp+esi*2-0x20],0x5e
  428093:	dec    eax
  428094:	mov    ecx,ss
  428096:	add    eax,0x5aee39d
  42809b:	icebp  
  42809c:	xchg   DWORD PTR [ebx],ebp
  42809e:	fst    st(2)
  4280a0:	(bad)  
  4280a1:	stc    
  4280a2:	dec    esi
  4280a3:	xor    ebx,DWORD PTR [edx-0x46]
  4280a6:	loope  0x4280e8
  4280a8:	lahf   
  4280a9:	in     eax,dx
  4280aa:	in     al,dx
  4280ab:	or     eax,0xb61a1ccb
  4280b0:	shl    DWORD PTR [esi-0x29],1
  4280b3:	ror    dl,cl
  4280b5:	fs aam 0x7c
  4280b8:	mov    ch,0x4f
  4280ba:	xchg   esp,eax
  4280bb:	adc    BYTE PTR [edi],0x57
  4280be:	ja     0x4280b3
  4280c0:	test   al,0x5a
  4280c2:	xchg   DWORD PTR [esi-0x23],ebx
  4280c5:	out    0xe7,eax
  4280c7:	xor    cl,BYTE PTR [edx+0x3897af0b]
  4280cd:	mov    dh,0x28
  4280cf:	pop    es
  4280d0:	sbb    BYTE PTR [ebp+edx*2-0x41a65649],0x7f
  4280d8:	loope  0x4280f0
  4280da:	sub    edi,DWORD PTR [ebp+0x61dd0f1c]
  4280e0:	mov    ebp,0xaa447842
  4280e5:	aad    0xd5
  4280e7:	in     al,dx
  4280e8:	jbe    0x4280b1
  4280ea:	add    DWORD PTR [esi+0x10],eax
  4280ed:	icebp  
  4280ee:	mov    eax,ds:0x2dc996fa
  4280f3:	je     0x4280f0
  4280f5:	pusha  
  4280f6:	adc    BYTE PTR [eax],al
  4280f8:	das    
  4280f9:	pop    edx
  4280fa:	or     edx,DWORD PTR [ecx+0x69]
  4280fd:	push   es
  4280fe:	mov    ds:0xada669a8,eax
  428103:	mov    es,WORD PTR [eax]
  428105:	xchg   ebx,eax
  428106:	ja     0x42814a
  428108:	dec    ebp
  428109:	cli    
  42810a:	mov    ch,0x1b
  42810c:	sti    
  42810d:	inc    ebp
  42810e:	into   
  42810f:	ret    0xda6a
  428112:	jb     0x42809d
  428114:	jp     0x428175
  428116:	xor    bh,0xbc
  428119:	mov    ecx,0x8f22a5b4
  42811e:	inc    ebx
  42811f:	sbb    cl,al
  428121:	ins    DWORD PTR es:[edi],dx
  428122:	adc    DWORD PTR [edi-0x5f393699],esp
  428128:	dec    edx
  428129:	jo     0x4280f8
  42812b:	mov    bh,0xfc
  42812d:	fcom   DWORD PTR [ebx+0xec]
  428133:	add    BYTE PTR [eax],al
  428135:	add    BYTE PTR [eax],al
  428137:	add    BYTE PTR [eax],al
  428139:	add    BYTE PTR [eax+0x3fc326ab],dl
  42813f:	iret   
  428140:	cmc    
  428141:	sti    
  428142:	pushf  
  428143:	and    al,0x28
  428145:	push   ebp
  428146:	dec    esp
  428147:	sbb    al,0xd2
  428149:	lea    edx,[esi+esi*8+0x1fe0001]
  428150:	add    BYTE PTR [eax],al
  428152:	pop    esi
  428153:	int    0x5a
  428155:	and    DWORD PTR [edi+0x6d],0xfffffff7
  428159:	sub    al,0x24
  42815b:	push   ds
  42815c:	imul   eax,DWORD PTR [edx-0x6b],0xfffffffd
  428160:	sahf   
  428161:	xchg   esi,eax
  428162:	sar    DWORD PTR [eax+eax*8-0x6bdccc3c],cl
  428169:	mov    bl,BYTE PTR [ecx+0x27788ef8]
  42816f:	sbb    ecx,DWORD PTR [edi+0x6d]
  428172:	sbb    al,0x76
  428174:	mov    eax,ds:0x85ee6bff
  428179:	lods   al,BYTE PTR ds:[esi]
  42817a:	dec    eax
  42817b:	test   BYTE PTR [eax+0x52],0xc6
  42817f:	scas   eax,DWORD PTR es:[edi]
  428180:	aas    
  428181:	pusha  
  428182:	xchg   ebx,eax
  428183:	push   0xb9da5957
  428188:	push   ss
  428189:	pusha  
  42818a:	xor    DWORD PTR [ebp-0x6b],esi
  42818d:	xchg   edi,eax
  42818e:	test   BYTE PTR [esi+0x47],ch
  428191:	or     al,0x96
  428193:	leave  
  428194:	rol    BYTE PTR [edi+0x38],cl
  428197:	add    ebx,DWORD PTR [edi]
  428199:	dec    eax
  42819a:	dec    ecx
  42819b:	lods   eax,DWORD PTR ds:[esi]
  42819c:	push   cs
  42819d:	rcr    esp,cl
  42819f:	lock pop ebx
  4281a1:	xor    bl,bh
  4281a3:	std    
  4281a4:	dec    edi
  4281a5:	shl    DWORD PTR [edx+0x4b124405],cl
  4281ab:	call   0x5112:0xf56389fc
  4281b2:	mov    ah,0x7d
  4281b4:	or     cl,dl
  4281b6:	andps  xmm1,XMMWORD PTR [esi]
  4281b9:	pop    eax
  4281ba:	repz dec ebx
  4281bc:	sub    al,0x50
  4281be:	xor    eax,0xc6c151f4
  4281c3:	arpl   WORD PTR [eax],di
  4281c5:	mov    gs,WORD PTR ds:0x90348925
  4281cb:	mov    eax,DWORD PTR [esi+edi*4]
  4281ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281cf:	pop    edi
  4281d0:	or     BYTE PTR [ecx-0x5fea16d6],ah
  4281d6:	and    ch,BYTE PTR [edx+0xf347a02]
  4281dc:	push   0xd923cd83
  4281e1:	push   esp
  4281e2:	pop    ebp
  4281e3:	mov    al,0x56
  4281e5:	popa   
  4281e6:	and    ebx,DWORD PTR [ebx+0x70d5903e]
  4281ec:	out    dx,al
  4281ed:	and    eax,DWORD PTR [ebp-0x1b]
  4281f0:	hlt    
  4281f1:	push   es
  4281f2:	cmp    BYTE PTR [edi-0x6f],bh
  4281f5:	ret    0xbcf0
  4281f8:	stos   DWORD PTR es:[edi],eax
  4281f9:	mov    ds:0xecb2e13e,eax
  4281fe:	add    al,0xed
  428200:	dec    esp
  428201:	scas   eax,DWORD PTR es:[edi]
  428202:	push   esp
  428203:	xor    ebp,DWORD PTR [ecx-0x74758df1]
  428209:	push   esp
  42820a:	pop    ss
  42820b:	pop    eax
  42820c:	mov    WORD PTR [ecx-0x1d],ss
  42820f:	shl    eax,1
  428211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428212:	inc    edi
  428213:	xlat   BYTE PTR ds:[ebx]
  428214:	ja     0x428236
  428216:	mov    al,0xd3
  428218:	lea    edx,[ecx+eax*2]
  42821b:	inc    ecx
  42821c:	xchg   esi,eax
  42821d:	mov    dl,0x93
  42821f:	inc    esi
  428220:	ret    0xa814
  428223:	fst    DWORD PTR [ecx]
  428225:	xchg   ecx,edi
  428227:	jge    0x4282a4
  428229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42822a:	xchg   ebx,eax
  42822b:	add    eax,0x8e755d8d
  428230:	push   0xffffffa9
  428232:	pushf  
  428233:	sbb    eax,0x4da922f5
  428238:	cmp    DWORD PTR [ebp-0x9],ebx
  42823b:	mov    ds:0xe4cdfadb,eax
  428240:	fst    QWORD PTR [eax-0x49]
  428243:	inc    esi
  428244:	adc    eax,0x49bb9071
  428249:	pop    ebp
  42824a:	mov    cl,BYTE PTR [esi-0x74572c03]
  428250:	mov    bh,0x5b
  428252:	ja     0x428293
  428254:	shl    BYTE PTR [esp+eiz*2-0x32],0x4e
  428259:	cs pop ss
  42825b:	dec    ecx
  42825c:	inc    ebp
  42825d:	xchg   ecx,ecx
  42825f:	xor    eax,0x506816e6
  428264:	aad    0xc
  428266:	and    eax,0x196b67b9
  42826b:	test   al,0x5a
  42826d:	add    BYTE PTR [ebx+0x49b9d13],ch
  428273:	fsubr  QWORD PTR [edi]
  428275:	dec    eax
  428276:	mov    dl,0xe1
  428278:	aad    0x3c
  42827a:	and    BYTE PTR [esi-0x80],bh
  42827d:	idiv   ah
  42827f:	repz in eax,dx
  428281:	std    
  428282:	bound  ebx,QWORD PTR [ebp+0x590dffa9]
  428288:	cli    
  428289:	hlt    
  42828a:	inc    edi
  42828b:	(bad)  
  42828c:	mov    ebp,0x505448e4
  428291:	pusha  
  428292:	loopne 0x42829c
  428294:	xor    DWORD PTR [edx],ebx
  428296:	pushf  
  428297:	cli    
  428298:	or     dh,dl
  42829a:	mov    ebp,0xe7b8b66a
  42829f:	ficom  DWORD PTR [edi+0x6]
  4282a2:	rol    bl,cl
  4282a4:	push   ebx
  4282a5:	or     esp,esp
  4282a7:	dec    eax
  4282a8:	xlat   BYTE PTR ds:[ebx]
  4282a9:	jmp    0x428263
  4282ab:	mov    BYTE PTR [edx+0x5c],bl
  4282ae:	dec    ecx
  4282af:	cmp    eax,0x7e843ca1
  4282b4:	shl    BYTE PTR [ebx+esi*1+0x18],cl
  4282b8:	call   0xebe4:0x4301a2c8
  4282bf:	sar    bh,1
  4282c1:	xchg   esp,eax
  4282c2:	add    ebx,edx
  4282c4:	sub    DWORD PTR [ecx+0x4b],ebx
  4282c7:	ror    esi,cl
  4282c9:	popf   
  4282ca:	sti    
  4282cb:	(bad)  
  4282cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282cd:	sbb    DWORD PTR [edi+eiz*2],esp
  4282d0:	sub    dl,BYTE PTR [edi]
  4282d2:	or     bh,bl
  4282d4:	lods   eax,DWORD PTR ds:[esi]
  4282d5:	aas    
  4282d6:	gs lahf 
  4282d8:	xchg   ebp,eax
  4282d9:	sti    
  4282da:	add    dl,BYTE PTR ds:0x3508461c
  4282e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282e1:	jg     0x428309
  4282e3:	out    0xd7,al
  4282e5:	jbe    0x428343
  4282e7:	stc    
  4282e8:	lds    eax,FWORD PTR [ebx]
  4282ea:	sub    eax,0x2187a644
  4282ef:	sahf   
  4282f0:	(bad)  
  4282f2:	pop    ebx
  4282f3:	inc    edx
  4282f4:	arpl   WORD PTR [edi-0x673f96db],cx
  4282fa:	ror    DWORD PTR [edx+eiz*2-0x35681947],0xa
  428302:	test   al,0xd8
  428304:	mov    bh,0x4e
  428306:	les    esp,FWORD PTR [ebx-0x2d3833cf]
  42830c:	sbb    eax,0x61cb60
  428311:	retf   0x3e96
  428314:	test   ebx,ebx
  428316:	test   BYTE PTR [ebx+0xf],0x6b
  42831a:	jg     0x428323
  42831c:	push   ss
  42831d:	clc    
  42831e:	add    esi,DWORD PTR [ecx-0x68]
  428321:	inc    edi
  428322:	ret    
  428323:	cli    
  428324:	in     eax,0x9e
  428326:	aad    0xfd
  428328:	fisubr DWORD PTR [eax]
  42832a:	jge    0x4283a4
  42832c:	(bad)  
  42832d:	mov    esi,0xeef96457
  428332:	in     eax,dx
  428333:	ds out dx,eax
  428335:	inc    esi
  428336:	mov    edi,DWORD PTR [eax+ebx*1-0xb]
  42833a:	shr    BYTE PTR [ebx+0x3211fc3c],cl
  428340:	jae    0x428317
  428342:	lahf   
  428343:	sbb    BYTE PTR [edi],ah
  428345:	fild   QWORD PTR [esi]
  428347:	out    dx,al
  428348:	mov    ebx,0x3e4066e5
  42834d:	shl    BYTE PTR [eax],0xdf
	...
  428358:	add    BYTE PTR [eax],al
  42835a:	std    
  42835b:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428361:	stc    
  428362:	jl     0x428396
  428364:	stc    
  428365:	jne    0x42831b
  428367:	inc    ecx
  428368:	sub    eax,0x1f8925c
  42836d:	add    ah,ch
  42836f:	add    DWORD PTR [eax],eax
  428371:	add    BYTE PTR [eax+0x7f3b3e20],ah
  428377:	das    
  428378:	ror    BYTE PTR [ebx-0x1bde8af4],cl
  42837e:	add    edi,DWORD PTR [esi+0x7e]
  428381:	out    dx,eax
  428382:	or     BYTE PTR [esi-0x5bc40e7e],bl
  428388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428389:	enter  0x5131,0xf
  42838d:	ins    DWORD PTR es:[edi],dx
  42838e:	xor    ch,BYTE PTR [edx]
  428390:	hlt    
  428391:	jp     0x4283a4
  428393:	test   DWORD PTR [edi],eax
  428395:	lods   eax,DWORD PTR ds:[esi]
  428396:	mov    ebp,0x4a5c6295
  42839b:	adc    ah,BYTE PTR [ecx]
  42839d:	pop    esi
  42839e:	aad    0xbe
  4283a0:	push   0x2d673d53
  4283a5:	repz cmp ch,BYTE PTR [ebx+0x45]
  4283a9:	add    BYTE PTR [eax+ecx*1+0x3b13e82c],al
  4283b0:	mov    dh,0x74
  4283b2:	aad    0xd6
  4283b4:	xor    cl,BYTE PTR ds:0x59733fc9
  4283ba:	cmp    esi,DWORD PTR [ebx]
  4283bc:	and    BYTE PTR [edi+0x1e3e4915],al
  4283c2:	test   eax,0x630d5fd
  4283c7:	int3   
  4283c8:	sti    
  4283c9:	jmp    0x3fb15a1f
  4283ce:	sti    
  4283cf:	xor    BYTE PTR [eiz*4-0x38abf046],ah
  4283d6:	push   cs
  4283d7:	pushf  
  4283d8:	push   ecx
  4283d9:	clc    
  4283da:	and    cl,BYTE PTR [ecx-0x1a]
  4283dd:	es mov esi,0x8a74744e
  4283e3:	mov    ds:0xabca7cb2,eax
  4283e8:	sahf   
  4283e9:	push   ecx
  4283ea:	adc    ebp,edi
  4283ec:	sub    dl,BYTE PTR [ebx+0x6c365f03]
  4283f2:	mov    fs,WORD PTR [ecx+edx*4-0x389890aa]
  4283f9:	lahf   
  4283fa:	jmp    0x42844b
  4283fc:	in     al,0x1d
  4283fe:	clc    
  4283ff:	scas   al,BYTE PTR es:[edi]
  428400:	inc    edi
  428401:	or     bl,0xed
  428404:	push   0x7e2dfdef
  428409:	aam    0x35
  42840b:	sub    BYTE PTR [ebx+ecx*1],ah
  42840e:	int3   
  42840f:	loop   0x4283b6
  428411:	ins    DWORD PTR es:[edi],dx
  428412:	add    al,0x0
  428414:	xchg   ebx,eax
  428415:	in     al,dx
  428416:	cs jmp 0x43aa:0x4d7d08b5
  42841e:	sti    
  42841f:	mov    ebx,0x87243adb
  428424:	std    
  428425:	sti    
  428426:	or     esp,DWORD PTR [edx-0x72]
  428429:	fdiv   st(3),st
  42842b:	outs   dx,DWORD PTR ds:[esi]
  42842c:	sub    DWORD PTR [bp+di+0x24ee],esi
  428431:	bound  ecx,QWORD PTR [ebx*8-0x2520ad74]
  428438:	push   0x8b304ef3
  42843d:	loop   0x42848f
  42843f:	pushf  
  428440:	pop    ds
  428441:	dec    esp
  428442:	loop   0x4283c9
  428444:	jmp    0x4cfc:0x4cb53320
  42844b:	cmp    eax,0x17c863a0
  428450:	lahf   
  428451:	xor    eax,0x568757dc
  428456:	ins    BYTE PTR es:[edi],dx
  428457:	enter  0x29d6,0xe5
  42845b:	jnp    0x42844a
  42845d:	and    al,0xe
  42845f:	cld    
  428460:	neg    DWORD PTR [ecx-0x50]
  428463:	pop    esp
  428464:	test   eax,esi
  428466:	jns    0x42843f
  428468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428469:	std    
  42846a:	jle    0x4284cc
  42846c:	mov    al,dl
  42846e:	xchg   ebp,eax
  42846f:	dec    esi
  428470:	(bad)  
  428471:	jbe    0x4284a7
  428473:	nop
  428474:	cmp    edx,DWORD PTR [esi-0x51771040]
  42847a:	cmp    edx,DWORD PTR [esi-0x5d]
  42847d:	sbb    al,0x86
  42847f:	rcl    BYTE PTR [edi+0x6d],1
  428482:	out    dx,al
  428483:	xor    ah,al
  428485:	adc    eax,0xbb019451
  42848a:	push   esi
  42848b:	nop
  42848c:	inc    esi
  42848d:	daa    
  42848e:	(bad)  
  42848f:	and    bl,dh
  428491:	das    
  428492:	mov    dl,0xa0
  428494:	pop    edx
  428495:	push   ds
  428496:	sbb    eax,0x6640453e
  42849b:	fdivrp st(1),st
  42849d:	mov    ?,WORD PTR [edx+0x573a1696]
  4284a3:	push   edx
  4284a4:	mov    edx,0x3ce1f006
  4284a9:	push   edi
  4284aa:	dec    BYTE PTR [ebp+esi*2+0x3cd6ab3a]
  4284b1:	sbb    dh,BYTE PTR [ebp-0x43a264d]
  4284b7:	mov    ax,ds:0xeadf2542
  4284bd:	sbb    eax,0x27e34ad6
  4284c2:	jo     0x428462
  4284c4:	sbb    ebp,DWORD PTR [edx+0x3aaf120a]
  4284ca:	cmc    
  4284cb:	(bad)  
  4284cd:	pushf  
  4284ce:	fst    DWORD PTR [edx-0x69]
  4284d1:	scas   eax,DWORD PTR es:[edi]
  4284d2:	inc    edi
  4284d3:	pop    ss
  4284d4:	stos   DWORD PTR es:[edi],eax
  4284d5:	jecxz  0x42851d
  4284d7:	mov    dl,0x30
  4284d9:	outs   dx,DWORD PTR ds:[esi]
  4284da:	mov    al,0xec
  4284dc:	add    eax,0x3a3f4943
  4284e1:	push   ds
  4284e2:	ja     0x4284d6
  4284e4:	xchg   ebp,eax
  4284e5:	cmp    DWORD PTR [ebx+edx*4+0x1b44e411],ebp
  4284ec:	out    dx,al
  4284ed:	jnp    0x428516
  4284ef:	sbb    ah,BYTE PTR [edx]
  4284f1:	sbb    DWORD PTR [eax],esi
  4284f3:	or     edx,ebx
  4284f5:	fcom   DWORD PTR [edx+0x77]
  4284f8:	dec    ebp
  4284f9:	sub    DWORD PTR [esi-0x2c],edx
  4284fc:	dec    ebx
  4284fd:	and    al,0x7c
  4284ff:	aad    0x76
  428501:	pop    esp
  428502:	sub    al,0xec
  428504:	ret    
  428505:	dec    ch
  428507:	dec    edi
  428508:	int3   
  428509:	mov    ds:0x4e906665,al
  42850e:	jne    0x428514
  428510:	mov    edi,0xa0e8a62a
  428515:	fstp   QWORD PTR [esi]
  428517:	aaa    
  428518:	push   ds
  428519:	jmp    0x4284fd
  42851b:	cmc    
  42851c:	les    ebp,FWORD PTR [ecx-0x48]
  42851f:	call   0xae51:0x7a4fb3fd
  428526:	pop    eax
  428527:	rol    BYTE PTR [esi],cl
  428529:	mov    ch,0x1f
  42852b:	repnz sub eax,0x855d3f65
  428531:	mov    eax,0xe683600c
  428536:	xor    cl,cl
  428538:	xor    dl,BYTE PTR [esi+0x61]
  42853b:	repz stc 
  42853d:	div    cl
  42853f:	mov    ebx,0xa5452a96
  428544:	cld    
  428545:	(bad)  
  428546:	adc    BYTE PTR [edx+0x618a10d2],0xef
  42854d:	mov    ch,0x33
  42854f:	inc    edx
  428550:	stos   BYTE PTR es:[edi],al
  428551:	jo     0x428580
  428553:	sub    DWORD PTR [ebx+0x2d],0x3559595e
  42855a:	and    DWORD PTR [ebp+0x1d],0x1e
	...
